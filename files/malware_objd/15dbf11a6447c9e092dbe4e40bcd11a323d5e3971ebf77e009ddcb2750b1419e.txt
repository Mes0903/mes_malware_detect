
15dbf11a6447c9e092dbe4e40bcd11a323d5e3971ebf77e009ddcb2750b1419e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xc
  401006:	mov    eax,DWORD PTR [ebp+0x8]
  401009:	mov    DWORD PTR [ebp-0x8],eax
  40100c:	mov    ecx,DWORD PTR [ebp+0xc]
  40100f:	mov    DWORD PTR [ebp-0xc],ecx
  401012:	mov    DWORD PTR [ebp-0x4],0x22b
  401019:	mov    edx,DWORD PTR [ebp-0x8]
  40101c:	cmp    edx,DWORD PTR [ebp-0xc]
  40101f:	jae    0x40102f
  401021:	mov    DWORD PTR [ebp-0x4],0x22b
  401028:	mov    eax,DWORD PTR [ebp-0x8]
  40102b:	jmp    0x401039
  40102d:	jmp    0x401039
  40102f:	mov    DWORD PTR [ebp-0x4],0x22b
  401036:	mov    eax,DWORD PTR [ebp-0xc]
  401039:	mov    esp,ebp
  40103b:	pop    ebp
  40103c:	ret    
  40103d:	int3   
  40103e:	int3   
  40103f:	int3   
  401040:	push   ebp
  401041:	mov    ebp,esp
  401043:	sub    esp,0xc
  401046:	mov    DWORD PTR [ebp-0x8],0x1e4dc
  40104d:	mov    DWORD PTR [ebp-0xc],0x3000
  401054:	mov    DWORD PTR [ebp-0x4],0x40
  40105b:	mov    eax,DWORD PTR [ebp-0x4]
  40105e:	push   eax
  40105f:	mov    ecx,DWORD PTR [ebp-0xc]
  401062:	push   ecx
  401063:	mov    edx,DWORD PTR [ebp+0x8]
  401066:	push   edx
  401067:	push   0x0
  401069:	push   0xffffffff
  40106b:	call   DWORD PTR ds:0x4202e8
  401071:	mov    esp,ebp
  401073:	pop    ebp
  401074:	ret    
  401075:	int3   
  401076:	int3   
  401077:	int3   
  401078:	int3   
  401079:	int3   
  40107a:	int3   
  40107b:	int3   
  40107c:	int3   
  40107d:	int3   
  40107e:	int3   
  40107f:	int3   
  401080:	push   ebp
  401081:	mov    ebp,esp
  401083:	pop    ebp
  401084:	ret    
  401085:	int3   
  401086:	int3   
  401087:	int3   
  401088:	int3   
  401089:	int3   
  40108a:	int3   
  40108b:	int3   
  40108c:	int3   
  40108d:	int3   
  40108e:	int3   
  40108f:	int3   
  401090:	push   ebp
  401091:	mov    ebp,esp
  401093:	push   ecx
  401094:	mov    DWORD PTR [ebp-0x4],0x4
  40109b:	mov    eax,DWORD PTR [ebp-0x4]
  40109e:	add    eax,0x401aa8
  4010a3:	mov    ds:0x420b58,eax
  4010a8:	mov    esp,ebp
  4010aa:	pop    ebp
  4010ab:	ret    
  4010ac:	int3   
  4010ad:	int3   
  4010ae:	int3   
  4010af:	int3   
  4010b0:	push   ebp
  4010b1:	mov    ebp,esp
  4010b3:	push   ecx
  4010b4:	mov    DWORD PTR [ebp-0x4],0x4
  4010bb:	mov    eax,DWORD PTR [ebp-0x4]
  4010be:	add    eax,0x41f7ec
  4010c3:	mov    ds:0x420b58,eax
  4010c8:	mov    esp,ebp
  4010ca:	pop    ebp
  4010cb:	ret    
  4010cc:	int3   
  4010cd:	int3   
  4010ce:	int3   
  4010cf:	int3   
  4010d0:	push   ebp
  4010d1:	mov    ebp,esp
  4010d3:	mov    eax,DWORD PTR [ebp+0x8]
  4010d6:	mov    eax,DWORD PTR [eax-0x4]
  4010d9:	pop    ebp
  4010da:	ret    
  4010db:	int3   
  4010dc:	int3   
  4010dd:	int3   
  4010de:	int3   
  4010df:	int3   
  4010e0:	push   ebp
  4010e1:	mov    ebp,esp
  4010e3:	mov    eax,ds:0x420b5c
  4010e8:	mov    ecx,DWORD PTR ds:0x420b60
  4010ee:	movzx  eax,WORD PTR [ecx+eax*2]
  4010f2:	pop    ebp
  4010f3:	ret    
  4010f4:	int3   
  4010f5:	int3   
  4010f6:	int3   
  4010f7:	int3   
  4010f8:	int3   
  4010f9:	int3   
  4010fa:	int3   
  4010fb:	int3   
  4010fc:	int3   
  4010fd:	int3   
  4010fe:	int3   
  4010ff:	int3   
  401100:	push   ebp
  401101:	mov    ebp,esp
  401103:	mov    esp,ecx
  401105:	pop    ecx
  401106:	jmp    eax
  401108:	pop    ebp
  401109:	ret    
  40110a:	int3   
  40110b:	int3   
  40110c:	int3   
  40110d:	int3   
  40110e:	int3   
  40110f:	int3   
  401110:	push   ebp
  401111:	mov    ebp,esp
  401113:	sub    esp,0x34
  401116:	mov    DWORD PTR [ebp-0x8],0x11cb
  40111d:	mov    DWORD PTR [ebp-0x8],0xc83e
  401124:	mov    DWORD PTR [ebp-0x10],0x0
  40112b:	jmp    0x401136
  40112d:	mov    eax,DWORD PTR [ebp-0x10]
  401130:	add    eax,0x4
  401133:	mov    DWORD PTR [ebp-0x10],eax
  401136:	mov    ecx,DWORD PTR [ebp-0x10]
  401139:	cmp    ecx,DWORD PTR [ebp+0xc]
  40113c:	jae    0x401219
  401142:	mov    DWORD PTR [ebp-0x8],0xc83e
  401149:	mov    edx,DWORD PTR [ebp-0x10]
  40114c:	add    edx,0x94b
  401152:	mov    DWORD PTR [ebp-0x2c],edx
  401155:	mov    eax,DWORD PTR [ebp-0x2c]
  401158:	mov    DWORD PTR [ebp-0x28],eax
  40115b:	mov    ecx,DWORD PTR [ebp-0x28]
  40115e:	mov    DWORD PTR [ebp-0x24],ecx
  401161:	mov    DWORD PTR [ebp-0x8],0xc83e
  401168:	mov    edx,DWORD PTR [ebp-0x24]
  40116b:	mov    DWORD PTR [ebp-0x20],edx
  40116e:	mov    DWORD PTR [ebp-0x8],0xc83e
  401175:	cmp    DWORD PTR [ebp-0x10],0x0
  401179:	jne    0x4011cb
  40117b:	push   0x104
  401180:	push   0x420b64
  401185:	call   DWORD PTR ds:0x4202ec
  40118b:	push   0x420000
  401190:	push   0x420b64
  401195:	call   DWORD PTR ds:0x4202f0
  40119b:	push   0x0
  40119d:	push   0x80
  4011a2:	push   0x3
  4011a4:	push   0x0
  4011a6:	push   0x3
  4011a8:	push   0x1
  4011aa:	push   0x420b64
  4011af:	call   DWORD PTR ds:0x4202f4
  4011b5:	mov    DWORD PTR [ebp-0x4],eax
  4011b8:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  4011bc:	je     0x4011c4
  4011be:	cmp    DWORD PTR [ebp-0x4],0x0
  4011c2:	jne    0x4011cb
  4011c4:	mov    eax,0x42
  4011c9:	jmp    0x401219
  4011cb:	mov    DWORD PTR [ebp-0x8],0xc83e
  4011d2:	mov    eax,DWORD PTR [ebp-0x20]
  4011d5:	mov    DWORD PTR [ebp-0x34],eax
  4011d8:	mov    DWORD PTR [ebp-0x8],0xc83e
  4011df:	mov    ecx,DWORD PTR [ebp-0x34]
  4011e2:	mov    DWORD PTR [ebp-0x18],ecx
  4011e5:	mov    edx,DWORD PTR [ebp-0x34]
  4011e8:	mov    DWORD PTR [ebp-0x14],edx
  4011eb:	mov    eax,DWORD PTR [ebp-0x10]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	mov    ecx,DWORD PTR [ebp+0x8]
  4011f4:	add    ecx,DWORD PTR [ebp-0x10]
  4011f7:	mov    DWORD PTR [ebp-0x30],ecx
  4011fa:	mov    edx,DWORD PTR [ebp-0x30]
  4011fd:	mov    eax,DWORD PTR [edx]
  4011ff:	add    eax,DWORD PTR [ebp-0x1c]
  401202:	mov    ecx,DWORD PTR [ebp-0x30]
  401205:	mov    DWORD PTR [ecx],eax
  401207:	mov    edx,DWORD PTR [ebp-0x30]
  40120a:	mov    eax,DWORD PTR [edx]
  40120c:	xor    eax,DWORD PTR [ebp-0x14]
  40120f:	mov    ecx,DWORD PTR [ebp-0x30]
  401212:	mov    DWORD PTR [ecx],eax
  401214:	jmp    0x40112d
  401219:	mov    esp,ebp
  40121b:	pop    ebp
  40121c:	ret    
  40121d:	int3   
  40121e:	int3   
  40121f:	int3   
  401220:	push   ebp
  401221:	mov    ebp,esp
  401223:	sub    esp,0x10
  401226:	cmp    DWORD PTR [ebp+0xc],0x1
  40122a:	jne    0x401234
  40122c:	mov    eax,ds:0x420c68
  401231:	mov    DWORD PTR [ebp+0xc],eax
  401234:	mov    ecx,DWORD PTR [ebp+0x8]
  401237:	cmp    DWORD PTR [ecx+0x4],0x0
  40123b:	je     0x401284
  40123d:	mov    DWORD PTR [ebp-0x10],0x2a1
  401244:	mov    edx,DWORD PTR [ebp+0x8]
  401247:	mov    eax,DWORD PTR [edx+0x4]
  40124a:	sub    eax,0x8
  40124d:	shr    eax,1
  40124f:	mov    DWORD PTR [ebp-0xc],eax
  401252:	mov    ecx,DWORD PTR [ebp+0x8]
  401255:	add    ecx,0x8
  401258:	mov    DWORD PTR ds:0x420b60,ecx
  40125e:	mov    edx,DWORD PTR [ebp+0x8]
  401261:	push   edx
  401262:	mov    eax,DWORD PTR [ebp+0x10]
  401265:	push   eax
  401266:	mov    ecx,DWORD PTR [ebp+0xc]
  401269:	push   ecx
  40126a:	mov    edx,DWORD PTR [ebp-0xc]
  40126d:	push   edx
  40126e:	call   0x401290
  401273:	add    esp,0x10
  401276:	mov    eax,DWORD PTR [ebp+0x8]
  401279:	mov    ecx,DWORD PTR [ebp+0x8]
  40127c:	add    ecx,DWORD PTR [eax+0x4]
  40127f:	mov    DWORD PTR [ebp+0x8],ecx
  401282:	jmp    0x401234
  401284:	mov    esp,ebp
  401286:	pop    ebp
  401287:	ret    
  401288:	int3   
  401289:	int3   
  40128a:	int3   
  40128b:	int3   
  40128c:	int3   
  40128d:	int3   
  40128e:	int3   
  40128f:	int3   
  401290:	push   ebp
  401291:	mov    ebp,esp
  401293:	sub    esp,0x10
  401296:	mov    DWORD PTR ds:0x420b5c,0x0
  4012a0:	jmp    0x4012af
  4012a2:	mov    eax,ds:0x420b5c
  4012a7:	add    eax,0x1
  4012aa:	mov    ds:0x420b5c,eax
  4012af:	mov    ecx,DWORD PTR ds:0x420b5c
  4012b5:	cmp    ecx,DWORD PTR [ebp+0x8]
  4012b8:	jae    0x401334
  4012ba:	mov    edx,DWORD PTR ds:0x420b5c
  4012c0:	mov    eax,ds:0x420b60
  4012c5:	movzx  ecx,WORD PTR [eax+edx*2]
  4012c9:	sar    ecx,0xc
  4012cc:	cmp    ecx,0x3
  4012cf:	jne    0x40132f
  4012d1:	mov    DWORD PTR [ebp-0x10],0xfff
  4012d8:	mov    DWORD PTR [ebp-0xc],0x3107
  4012df:	mov    DWORD PTR [ebp-0xc],0x3107
  4012e6:	mov    edx,DWORD PTR ds:0x420b5c
  4012ec:	mov    eax,ds:0x420b60
  4012f1:	movzx  ecx,WORD PTR [eax+edx*2]
  4012f5:	and    ecx,DWORD PTR [ebp-0x10]
  4012f8:	add    ecx,0x2d23
  4012fe:	mov    DWORD PTR [ebp-0x8],ecx
  401301:	mov    DWORD PTR [ebp-0xc],0x3107
  401308:	mov    edx,DWORD PTR [ebp+0x14]
  40130b:	mov    eax,DWORD PTR [ebp+0xc]
  40130e:	add    eax,DWORD PTR [edx]
  401310:	mov    ecx,DWORD PTR [ebp-0x8]
  401313:	mov    edx,DWORD PTR [eax+ecx*1-0x2d23]
  40131a:	add    edx,DWORD PTR [ebp+0x10]
  40131d:	mov    eax,DWORD PTR [ebp+0x14]
  401320:	mov    ecx,DWORD PTR [ebp+0xc]
  401323:	add    ecx,DWORD PTR [eax]
  401325:	mov    eax,DWORD PTR [ebp-0x8]
  401328:	mov    DWORD PTR [ecx+eax*1-0x2d23],edx
  40132f:	jmp    0x4012a2
  401334:	mov    esp,ebp
  401336:	pop    ebp
  401337:	ret    
  401338:	int3   
  401339:	int3   
  40133a:	int3   
  40133b:	int3   
  40133c:	int3   
  40133d:	int3   
  40133e:	int3   
  40133f:	int3   
  401340:	push   ebp
  401341:	mov    ebp,esp
  401343:	sub    esp,0x22c
  401349:	mov    DWORD PTR [ebp-0x220],0x7c
  401353:	mov    DWORD PTR [ebp-0x214],0x0
  40135d:	mov    DWORD PTR [ebp-0x228],0x0
  401367:	jmp    0x401378
  401369:	mov    eax,DWORD PTR [ebp-0x228]
  40136f:	add    eax,0x1
  401372:	mov    DWORD PTR [ebp-0x228],eax
  401378:	mov    ecx,DWORD PTR [ebp-0x228]
  40137e:	cmp    ecx,DWORD PTR [ebp+0x10]
  401381:	jge    0x4013bc
  401383:	mov    edx,DWORD PTR [ebp+0xc]
  401386:	add    edx,DWORD PTR [ebp-0x228]
  40138c:	movzx  eax,BYTE PTR [edx]
  40138f:	mov    DWORD PTR [ebp-0x22c],eax
  401395:	mov    DWORD PTR [ebp-0x220],0x7c
  40139f:	mov    ecx,DWORD PTR [ebp+0x8]
  4013a2:	add    ecx,DWORD PTR [ebp-0x228]
  4013a8:	mov    dl,BYTE PTR [ebp-0x22c]
  4013ae:	mov    BYTE PTR [ecx],dl
  4013b0:	mov    DWORD PTR [ebp-0x220],0x33
  4013ba:	jmp    0x401369
  4013bc:	mov    esp,ebp
  4013be:	pop    ebp
  4013bf:	ret    
  4013c0:	push   ebp
  4013c1:	mov    ebp,esp
  4013c3:	sub    esp,0x50
  4013c6:	mov    eax,DWORD PTR [ebp+0xc]
  4013c9:	mov    DWORD PTR [ebp-0x50],eax
  4013cc:	cmp    DWORD PTR [ebp-0x50],0x200
  4013d3:	ja     0x4013fd
  4013d5:	cmp    DWORD PTR [ebp-0x50],0x200
  4013dc:	je     0x401441
  4013de:	cmp    DWORD PTR [ebp-0x50],0x1
  4013e2:	je     0x401418
  4013e4:	cmp    DWORD PTR [ebp-0x50],0x2
  4013e8:	je     0x40159f
  4013ee:	cmp    DWORD PTR [ebp-0x50],0xf
  4013f2:	je     0x4014fd
  4013f8:	jmp    0x4015ab
  4013fd:	cmp    DWORD PTR [ebp-0x50],0x201
  401404:	je     0x401422
  401406:	cmp    DWORD PTR [ebp-0x50],0x202
  40140d:	je     0x4014e8
  401413:	jmp    0x4015ab
  401418:	mov    eax,0x1
  40141d:	jmp    0x4015c1
  401422:	mov    DWORD PTR ds:0x420b4c,0x0
  40142c:	push   0x1
  40142e:	push   0x0
  401430:	mov    ecx,DWORD PTR [ebp+0x8]
  401433:	push   ecx
  401434:	call   DWORD PTR ds:0x42032c
  40143a:	xor    eax,eax
  40143c:	jmp    0x4015c1
  401441:	mov    edx,DWORD PTR [ebp+0x10]
  401444:	and    edx,0x1
  401447:	je     0x4014e1
  40144d:	cmp    DWORD PTR ds:0x420b4c,0x3e8
  401457:	jge    0x4014e1
  40145d:	mov    eax,DWORD PTR [ebp+0x14]
  401460:	and    eax,0xffff
  401465:	movzx  ecx,ax
  401468:	mov    edx,DWORD PTR ds:0x420b4c
  40146e:	mov    DWORD PTR [edx*8+0x420b50],ecx
  401475:	mov    eax,DWORD PTR [ebp+0x14]
  401478:	shr    eax,0x10
  40147b:	and    eax,0xffff
  401480:	movzx  ecx,ax
  401483:	mov    edx,DWORD PTR ds:0x420b4c
  401489:	mov    DWORD PTR [edx*8+0x420b54],ecx
  401490:	mov    eax,ds:0x420b4c
  401495:	add    eax,0x1
  401498:	mov    ds:0x420b4c,eax
  40149d:	mov    ecx,DWORD PTR [ebp+0x8]
  4014a0:	push   ecx
  4014a1:	call   DWORD PTR ds:0x420330
  4014a7:	mov    DWORD PTR [ebp-0x4c],eax
  4014aa:	push   0x0
  4014ac:	mov    edx,DWORD PTR [ebp+0x14]
  4014af:	shr    edx,0x10
  4014b2:	and    edx,0xffff
  4014b8:	movzx  eax,dx
  4014bb:	push   eax
  4014bc:	mov    ecx,DWORD PTR [ebp+0x14]
  4014bf:	and    ecx,0xffff
  4014c5:	movzx  edx,cx
  4014c8:	push   edx
  4014c9:	mov    eax,DWORD PTR [ebp-0x4c]
  4014cc:	push   eax
  4014cd:	call   DWORD PTR ds:0x420420
  4014d3:	mov    ecx,DWORD PTR [ebp-0x4c]
  4014d6:	push   ecx
  4014d7:	mov    edx,DWORD PTR [ebp+0x8]
  4014da:	push   edx
  4014db:	call   DWORD PTR ds:0x420334
  4014e1:	xor    eax,eax
  4014e3:	jmp    0x4015c1
  4014e8:	push   0x0
  4014ea:	push   0x0
  4014ec:	mov    eax,DWORD PTR [ebp+0x8]
  4014ef:	push   eax
  4014f0:	call   DWORD PTR ds:0x42032c
  4014f6:	xor    eax,eax
  4014f8:	jmp    0x4015c1
  4014fd:	lea    ecx,[ebp-0x40]
  401500:	push   ecx
  401501:	mov    edx,DWORD PTR [ebp+0x8]
  401504:	push   edx
  401505:	call   DWORD PTR ds:0x420338
  40150b:	mov    DWORD PTR [ebp-0x4c],eax
  40150e:	mov    DWORD PTR [ebp-0x44],0x0
  401515:	jmp    0x401520
  401517:	mov    eax,DWORD PTR [ebp-0x44]
  40151a:	add    eax,0x1
  40151d:	mov    DWORD PTR [ebp-0x44],eax
  401520:	mov    ecx,DWORD PTR ds:0x420b4c
  401526:	sub    ecx,0x1
  401529:	cmp    DWORD PTR [ebp-0x44],ecx
  40152c:	jge    0x401571
  40152e:	mov    edx,DWORD PTR [ebp-0x44]
  401531:	add    edx,0x1
  401534:	mov    DWORD PTR [ebp-0x48],edx
  401537:	jmp    0x401542
  401539:	mov    eax,DWORD PTR [ebp-0x48]
  40153c:	add    eax,0x1
  40153f:	mov    DWORD PTR [ebp-0x48],eax
  401542:	mov    ecx,DWORD PTR [ebp-0x48]
  401545:	cmp    ecx,DWORD PTR ds:0x420b4c
  40154b:	jge    0x40156f
  40154d:	mov    edx,DWORD PTR [ebp-0x48]
  401550:	mov    eax,DWORD PTR [edx*8+0x420b54]
  401557:	push   eax
  401558:	mov    ecx,DWORD PTR [ebp-0x48]
  40155b:	mov    edx,DWORD PTR [ecx*8+0x420b50]
  401562:	push   edx
  401563:	mov    eax,DWORD PTR [ebp-0x4c]
  401566:	push   eax
  401567:	call   DWORD PTR ds:0x420424
  40156d:	jmp    0x401539
  40156f:	jmp    0x401517
  401571:	push   0x0
  401573:	call   DWORD PTR ds:0x42033c
  401579:	push   0x7f00
  40157e:	push   0x0
  401580:	call   DWORD PTR ds:0x420340
  401586:	push   eax
  401587:	call   DWORD PTR ds:0x420344
  40158d:	lea    ecx,[ebp-0x40]
  401590:	push   ecx
  401591:	mov    edx,DWORD PTR [ebp+0x8]
  401594:	push   edx
  401595:	call   DWORD PTR ds:0x420348
  40159b:	xor    eax,eax
  40159d:	jmp    0x4015c1
  40159f:	push   0x0
  4015a1:	call   DWORD PTR ds:0x42034c
  4015a7:	xor    eax,eax
  4015a9:	jmp    0x4015c1
  4015ab:	mov    eax,DWORD PTR [ebp+0x14]
  4015ae:	push   eax
  4015af:	mov    ecx,DWORD PTR [ebp+0x10]
  4015b2:	push   ecx
  4015b3:	mov    edx,DWORD PTR [ebp+0xc]
  4015b6:	push   edx
  4015b7:	mov    eax,DWORD PTR [ebp+0x8]
  4015ba:	push   eax
  4015bb:	call   DWORD PTR ds:0x420350
  4015c1:	mov    esp,ebp
  4015c3:	pop    ebp
  4015c4:	ret    0x10
  4015c7:	int3   
  4015c8:	int3   
  4015c9:	int3   
  4015ca:	int3   
  4015cb:	int3   
  4015cc:	int3   
  4015cd:	int3   
  4015ce:	int3   
  4015cf:	int3   
  4015d0:	push   ebp
  4015d1:	mov    ebp,esp
  4015d3:	sub    esp,0xc8
  4015d9:	push   ebx
  4015da:	push   esi
  4015db:	push   edi
  4015dc:	mov    DWORD PTR ds:0x420c6c,ebp
  4015e2:	pusha  
  4015e3:	mov    DWORD PTR [ebp-0x88],0x0
  4015ed:	mov    DWORD PTR [ebp-0x9c],0x80000002
  4015f7:	mov    eax,ds:0x420484
  4015fc:	mov    DWORD PTR [ebp-0xb4],eax
  401602:	mov    DWORD PTR [ebp-0xac],0x420030
  40160c:	mov    ecx,0x43
  401611:	mov    edx,DWORD PTR [ebp-0xac]
  401617:	mov    WORD PTR [edx],cx
  40161a:	mov    eax,0x4c
  40161f:	mov    ecx,DWORD PTR [ebp-0xac]
  401625:	mov    WORD PTR [ecx+0x2],ax
  401629:	lea    edx,[ebp-0xb0]
  40162f:	push   edx
  401630:	mov    eax,DWORD PTR [ebp-0xac]
  401636:	push   eax
  401637:	push   0x80000000
  40163c:	call   DWORD PTR [ebp-0xb4]
  401642:	test   eax,eax
  401644:	je     0x40164b
  401646:	call   0x4015d0
  40164b:	call   0x401090
  401650:	mov    DWORD PTR [ebp-0x7c],0x64
  401657:	mov    DWORD PTR [ebp-0x18],0x28
  40165e:	mov    DWORD PTR [ebp-0x88],0x0
  401668:	mov    DWORD PTR [ebp-0x50],0x0
  40166f:	mov    DWORD PTR [ebp-0x78],0x1
  401676:	mov    DWORD PTR [ebp-0x10],0x0
  40167d:	mov    DWORD PTR [ebp-0x7c],0x64
  401684:	mov    DWORD PTR [ebp-0x18],0x28
  40168b:	mov    DWORD PTR [ebp-0x88],0x0
  401695:	mov    DWORD PTR [ebp-0x50],0x0
  40169c:	mov    DWORD PTR [ebp-0x78],0x1
  4016a3:	mov    DWORD PTR [ebp-0x14],0x3
  4016aa:	mov    DWORD PTR [ebp-0x10],0x0
  4016b1:	mov    DWORD PTR [ebp-0x7c],0x64
  4016b8:	mov    DWORD PTR [ebp-0x18],0x28
  4016bf:	mov    DWORD PTR [ebp-0x88],0x0
  4016c9:	mov    DWORD PTR [ebp-0x50],0x0
  4016d0:	mov    DWORD PTR [ebp-0x78],0x1
  4016d7:	mov    DWORD PTR [ebp-0x14],0x3
  4016de:	mov    ecx,DWORD PTR ds:0x420b58
  4016e4:	push   ecx
  4016e5:	call   0x4010d0
  4016ea:	add    esp,0x4
  4016ed:	mov    DWORD PTR [ebp-0x8c],eax
  4016f3:	mov    edx,DWORD PTR [ebp-0x8c]
  4016f9:	push   edx
  4016fa:	call   0x401040
  4016ff:	add    esp,0x4
  401702:	mov    DWORD PTR [ebp-0x84],eax
  401708:	mov    eax,DWORD PTR [ebp-0x8c]
  40170e:	push   eax
  40170f:	push   0x0
  401711:	mov    ecx,DWORD PTR [ebp-0x84]
  401717:	push   ecx
  401718:	call   0x401080
  40171d:	add    esp,0xc
  401720:	mov    edx,DWORD PTR [ebp-0x8c]
  401726:	mov    DWORD PTR [ebp-0x94],edx
  40172c:	mov    eax,DWORD PTR [ebp-0x88]
  401732:	cmp    eax,DWORD PTR [ebp-0x8c]
  401738:	jae    0x4017a8
  40173a:	mov    ecx,DWORD PTR [ebp-0x94]
  401740:	push   ecx
  401741:	mov    edx,DWORD PTR [ebp-0x7c]
  401744:	push   edx
  401745:	call   0x401000
  40174a:	add    esp,0x8
  40174d:	mov    DWORD PTR [ebp-0x98],eax
  401753:	mov    eax,DWORD PTR [ebp-0x98]
  401759:	push   eax
  40175a:	mov    ecx,DWORD PTR ds:0x420b58
  401760:	add    ecx,DWORD PTR [ebp-0x50]
  401763:	push   ecx
  401764:	mov    edx,DWORD PTR [ebp-0x84]
  40176a:	add    edx,DWORD PTR [ebp-0x88]
  401770:	push   edx
  401771:	call   0x401340
  401776:	add    esp,0xc
  401779:	mov    eax,DWORD PTR [ebp-0x18]
  40177c:	add    eax,DWORD PTR [ebp-0x7c]
  40177f:	add    eax,DWORD PTR [ebp-0x50]
  401782:	mov    DWORD PTR [ebp-0x50],eax
  401785:	mov    ecx,DWORD PTR [ebp-0x88]
  40178b:	add    ecx,DWORD PTR [ebp-0x7c]
  40178e:	mov    DWORD PTR [ebp-0x88],ecx
  401794:	mov    edx,DWORD PTR [ebp-0x94]
  40179a:	sub    edx,DWORD PTR [ebp-0x98]
  4017a0:	mov    DWORD PTR [ebp-0x94],edx
  4017a6:	jmp    0x40172c
  4017a8:	mov    eax,DWORD PTR [ebp-0x8c]
  4017ae:	push   eax
  4017af:	mov    ecx,DWORD PTR [ebp-0x84]
  4017b5:	push   ecx
  4017b6:	call   0x401110
  4017bb:	add    esp,0x8
  4017be:	mov    DWORD PTR [ebp-0x50],0x0
  4017c5:	mov    DWORD PTR [ebp-0xb8],0x0
  4017cf:	call   0x4010b0
  4017d4:	mov    edx,DWORD PTR ds:0x420b58
  4017da:	push   edx
  4017db:	call   0x4010d0
  4017e0:	add    esp,0x4
  4017e3:	mov    DWORD PTR [ebp-0xbc],eax
  4017e9:	mov    eax,DWORD PTR [ebp-0xbc]
  4017ef:	push   eax
  4017f0:	call   0x401040
  4017f5:	add    esp,0x4
  4017f8:	mov    DWORD PTR [ebp-0x4c],eax
  4017fb:	mov    ecx,DWORD PTR [ebp-0xbc]
  401801:	push   ecx
  401802:	push   0x0
  401804:	mov    edx,DWORD PTR [ebp-0x4c]
  401807:	push   edx
  401808:	call   0x401080
  40180d:	add    esp,0xc
  401810:	mov    eax,DWORD PTR [ebp-0xbc]
  401816:	mov    DWORD PTR [ebp-0xc4],eax
  40181c:	mov    ecx,DWORD PTR [ebp-0xb8]
  401822:	cmp    ecx,DWORD PTR [ebp-0xbc]
  401828:	jae    0x401895
  40182a:	mov    edx,DWORD PTR [ebp-0xc4]
  401830:	push   edx
  401831:	mov    eax,DWORD PTR [ebp-0x7c]
  401834:	push   eax
  401835:	call   0x401000
  40183a:	add    esp,0x8
  40183d:	mov    DWORD PTR [ebp-0xc8],eax
  401843:	mov    ecx,DWORD PTR [ebp-0xc8]
  401849:	push   ecx
  40184a:	mov    edx,DWORD PTR ds:0x420b58
  401850:	add    edx,DWORD PTR [ebp-0x50]
  401853:	push   edx
  401854:	mov    eax,DWORD PTR [ebp-0x4c]
  401857:	add    eax,DWORD PTR [ebp-0xb8]
  40185d:	push   eax
  40185e:	call   0x401340
  401863:	add    esp,0xc
  401866:	mov    ecx,DWORD PTR [ebp-0x18]
  401869:	add    ecx,DWORD PTR [ebp-0x7c]
  40186c:	add    ecx,DWORD PTR [ebp-0x50]
  40186f:	mov    DWORD PTR [ebp-0x50],ecx
  401872:	mov    edx,DWORD PTR [ebp-0xb8]
  401878:	add    edx,DWORD PTR [ebp-0x7c]
  40187b:	mov    DWORD PTR [ebp-0xb8],edx
  401881:	mov    eax,DWORD PTR [ebp-0xc4]
  401887:	sub    eax,DWORD PTR [ebp-0xc8]
  40188d:	mov    DWORD PTR [ebp-0xc4],eax
  401893:	jmp    0x40181c
  401895:	mov    ecx,DWORD PTR [ebp-0xbc]
  40189b:	push   ecx
  40189c:	mov    edx,DWORD PTR [ebp-0x4c]
  40189f:	push   edx
  4018a0:	call   0x401110
  4018a5:	add    esp,0x8
  4018a8:	mov    eax,DWORD PTR [ebp-0x84]
  4018ae:	mov    ecx,DWORD PTR [ebp-0x4c]
  4018b1:	mov    DWORD PTR [eax],ecx
  4018b3:	push   0x17000
  4018b8:	call   0x401040
  4018bd:	add    esp,0x4
  4018c0:	mov    ds:0x420c68,eax
  4018c5:	push   0x15500
  4018ca:	mov    edx,DWORD PTR [ebp-0x84]
  4018d0:	push   edx
  4018d1:	mov    eax,ds:0x420c68
  4018d6:	add    eax,0x200
  4018db:	push   eax
  4018dc:	call   0x401340
  4018e1:	add    esp,0xc
  4018e4:	mov    ecx,DWORD PTR ds:0x420c68
  4018ea:	sub    ecx,0x400000
  4018f0:	push   ecx
  4018f1:	push   0x1
  4018f3:	mov    edx,DWORD PTR [ebp-0x4c]
  4018f6:	push   edx
  4018f7:	call   0x401220
  4018fc:	add    esp,0xc
  4018ff:	popa   
  401900:	mov    eax,ds:0x420c6c
  401905:	mov    ecx,eax
  401907:	xor    eax,eax
  401909:	je     0x40190c
  40190b:	ret    
  40190c:	mov    eax,ds:0x420c68
  401911:	add    eax,0x15350
  401916:	xor    edx,edx
  401918:	je     0x401100
  40191e:	pop    edi
  40191f:	pop    esi
  401920:	pop    ebx
  401921:	mov    esp,ebp
  401923:	pop    ebp
  401924:	ret    
  401925:	int3   
  401926:	int3   
  401927:	int3   
  401928:	push   esp
  401929:	add    eax,DWORD PTR [edx+0x0]
  40192c:	pop    eax
  40192d:	add    eax,DWORD PTR [edx+0x0]
  401930:	sub    al,0x3
  401932:	inc    edx
  401933:	add    BYTE PTR [ebx+eax*1+0x42],cl
  401937:	add    BYTE PTR [ebx+eax*1+0x42],bl
  40193b:	add    BYTE PTR [eax+0x3],ah
  40193e:	inc    edx
  40193f:	add    BYTE PTR [ebx+eax*1+0x42],ah
  401943:	add    BYTE PTR [eax+0x3],ch
  401946:	inc    edx
  401947:	add    BYTE PTR [ebx+eax*1+0x42],ch
  40194b:	add    BYTE PTR [eax+0x3],dh
  40194e:	inc    edx
  40194f:	add    BYTE PTR [ebx+eax*1+0x42],dh
  401953:	add    BYTE PTR [eax+0x3],bh
  401956:	inc    edx
  401957:	add    BYTE PTR [ebx+eax*1+0x42],bh
  40195b:	add    BYTE PTR [eax],dh
  40195d:	add    eax,DWORD PTR [edx+0x0]
  401960:	xor    al,0x3
  401962:	inc    edx
  401963:	add    BYTE PTR [eax-0x7bffbdfd],al
  401969:	add    eax,DWORD PTR [edx+0x0]
  40196c:	mov    BYTE PTR [ebx],al
  40196e:	inc    edx
  40196f:	add    BYTE PTR [ebx+eax*1+0x3900042],cl
  401976:	inc    edx
  401977:	add    BYTE PTR [ebx+eax*1+0x33c0042],dl
  40197e:	inc    edx
  40197f:	add    BYTE PTR [eax-0x63ffbdfd],bl
  401985:	add    eax,DWORD PTR [edx+0x0]
  401988:	mov    al,ds:0xa4004203
  40198d:	add    eax,DWORD PTR [edx+0x0]
  401990:	test   al,0x3
  401992:	inc    edx
  401993:	add    BYTE PTR [ebx+eax*1+0x3b00042],ch
  40199a:	inc    edx
  40199b:	add    BYTE PTR [ebx+eax*1+0x3b80042],dh
  4019a2:	inc    edx
  4019a3:	add    BYTE PTR [ebx+eax*1+0x3c00042],bh
  4019aa:	inc    edx
  4019ab:	add    ah,al
  4019ad:	add    eax,DWORD PTR [edx+0x0]
  4019b0:	enter  0x4203,0x0
  4019b4:	int3   
  4019b5:	add    eax,DWORD PTR [edx+0x0]
  4019b8:	rol    BYTE PTR [ebx],1
  4019ba:	inc    edx
  4019bb:	add    BYTE PTR [eax],bh
  4019bd:	add    eax,DWORD PTR [edx+0x0]
  4019c0:	aam    0x3
  4019c2:	inc    edx
  4019c3:	add    al,bl
  4019c5:	add    eax,DWORD PTR [edx+0x0]
  4019c8:	fadd   QWORD PTR [ebx]
  4019ca:	inc    edx
  4019cb:	add    al,ah
  4019cd:	add    eax,DWORD PTR [edx+0x0]
  4019d0:	in     al,0x3
  4019d2:	inc    edx
  4019d3:	add    al,ch
  4019d5:	add    eax,DWORD PTR [edx+0x0]
  4019d8:	in     al,dx
  4019d9:	add    eax,DWORD PTR [edx+0x0]
  4019dc:	lock add eax,DWORD PTR [edx+0x0]
  4019e0:	hlt    
  4019e1:	add    eax,DWORD PTR [edx+0x0]
  4019e4:	clc    
  4019e5:	add    eax,DWORD PTR [edx+0x0]
  4019e8:	cld    
  4019e9:	add    eax,DWORD PTR [edx+0x0]
  4019ec:	add    BYTE PTR [edx+eax*2],al
  4019ef:	add    BYTE PTR [esp+eax*1],al
  4019f2:	inc    edx
  4019f3:	add    BYTE PTR [eax],cl
  4019f5:	add    al,0x42
  4019f7:	add    BYTE PTR [esp+eax*1],cl
  4019fa:	inc    edx
  4019fb:	add    BYTE PTR [eax],dl
  4019fd:	add    al,0x42
  4019ff:	add    BYTE PTR [eax+0x3],cl
  401a02:	inc    edx
  401a03:	add    BYTE PTR [esp+eax*1],dl
  401a06:	inc    edx
  401a07:	add    BYTE PTR [eax],bl
  401a09:	add    al,0x42
  401a0b:	add    BYTE PTR [eax],ch
  401a0d:	add    al,0x42
  401a0f:	add    BYTE PTR [esp+eax*1],ch
  401a12:	inc    edx
  401a13:	add    BYTE PTR [eax],dh
  401a15:	add    al,0x42
  401a17:	add    BYTE PTR [esp+eax*1],dh
  401a1a:	inc    edx
  401a1b:	add    BYTE PTR [eax],bh
  401a1d:	add    al,0x42
  401a1f:	add    BYTE PTR [esp+eax*1],bh
  401a22:	inc    edx
  401a23:	add    BYTE PTR [eax+0x4],al
  401a26:	inc    edx
  401a27:	add    BYTE PTR [esp+eax*1+0x42],al
  401a2b:	add    BYTE PTR [eax],ah
  401a2d:	add    al,0x42
  401a2f:	add    BYTE PTR [eax+0x4],cl
  401a32:	inc    edx
  401a33:	add    BYTE PTR [esp+eax*1+0x42],cl
  401a37:	add    BYTE PTR [eax+0x4],dl
  401a3a:	inc    edx
  401a3b:	add    BYTE PTR [esp+eax*1+0x42],dl
  401a3f:	add    BYTE PTR [eax+0x4],bl
  401a42:	inc    edx
  401a43:	add    BYTE PTR [esp+eax*1+0x42],bl
  401a47:	add    BYTE PTR [eax+0x4],ah
  401a4a:	inc    edx
  401a4b:	add    BYTE PTR [esp+eax*1+0x42],ah
  401a4f:	add    BYTE PTR [eax+0x4],ch
  401a52:	inc    edx
  401a53:	add    BYTE PTR [esp+eax*1],ah
  401a56:	inc    edx
  401a57:	add    BYTE PTR [esp+eax*1+0x42],ch
  401a5b:	add    BYTE PTR [eax+0x4],dh
  401a5e:	inc    edx
  401a5f:	add    BYTE PTR [eax+0x78004204],bl
  401a65:	add    al,0x42
  401a67:	add    BYTE PTR [esp+eax*1+0x42],bh
  401a6b:	add    BYTE PTR [eax-0x73ffbdfc],cl
  401a71:	add    al,0x42
  401a73:	add    BYTE PTR [eax-0x7ffbdfc],dl
  401a79:	add    al,BYTE PTR [edx+0x0]
  401a7c:	cld    
  401a7d:	add    al,BYTE PTR [edx+0x0]
  401a80:	add    BYTE PTR [ebx],al
  401a82:	inc    edx
  401a83:	add    BYTE PTR [ebx+eax*1],al
  401a86:	inc    edx
  401a87:	add    BYTE PTR [eax],cl
  401a89:	add    eax,DWORD PTR [edx+0x0]
  401a8c:	or     al,0x3
  401a8e:	inc    edx
  401a8f:	add    BYTE PTR [eax],dl
  401a91:	add    eax,DWORD PTR [edx+0x0]
  401a94:	adc    al,0x3
  401a96:	inc    edx
  401a97:	add    BYTE PTR [eax],bl
  401a99:	add    eax,DWORD PTR [edx+0x0]
  401a9c:	sbb    al,0x3
  401a9e:	inc    edx
  401a9f:	add    BYTE PTR [eax],ah
  401aa1:	add    eax,DWORD PTR [edx+0x0]
  401aa4:	and    al,0x3
  401aa6:	inc    edx
  401aa7:	add    BYTE PTR [eax],al
  401aa9:	push   ebp
  401aaa:	add    DWORD PTR [eax],eax
  401aac:	dec    ebx
  401aad:	pop    esi
  401aae:	inc    ecx
  401aaf:	add    BYTE PTR [esp+ebp*2],al
  401ab2:	je     0x401b04
  401ab4:	sbb    DWORD PTR [esi+0x63],esp
  401ab7:	inc    ecx
  401ab8:	daa    
  401ab9:	ins    DWORD PTR es:[edi],dx
  401aba:	jb     0x401b21
  401abc:	sbb    BYTE PTR [edx+0x0],bh
  401abf:	add    bh,bh
  401ac1:	gs popa 
  401ac3:	fs pop ss
  401ac5:	pusha  
  401ac6:	bound  esi,QWORD PTR [edx-0x16]
  401ac9:	jp     0x401b44
  401acb:	inc    ebp
  401acc:	repz inc edi
  401ace:	add    BYTE PTR [eax],al
  401ad0:	jmp    DWORD PTR [ebp+0x61]
  401ad3:	fs pop ss
  401ad5:	pusha  
  401ad6:	bound  esi,QWORD PTR [edx-0x16]
  401ad9:	jp     0x401b54
  401adb:	inc    ebp
  401adc:	rcr    DWORD PTR [ebp+0x0],cl
  401adf:	add    BYTE PTR [esp+ebp*2],al
  401ae2:	je     0x401b31
  401ae4:	mov    ah,0x6d
  401ae6:	jne    0x401b54
  401ae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ae9:	inc    ecx
  401aea:	popa   
  401aeb:	outs   dx,BYTE PTR ds:[esi]
  401aec:	scas   eax,DWORD PTR es:[edi]
  401aed:	gs gs inc ecx
  401af0:	dec    ebx
  401af1:	or     DWORD PTR [eax],eax
  401af3:	add    BYTE PTR [eax-0x689e9a85],cl
  401af9:	ins    BYTE PTR es:[edi],dx
  401afa:	inc    esi
  401afb:	imul   esp,DWORD PTR [edi-0x60ffbe94],0x6872747a
  401b05:	push   0x94b4174
  401b0a:	add    BYTE PTR [eax],al
  401b0c:	mov    WORD PTR [esp+esi*2+0x57],gs
	...
  401b38:	bound  esp,QWORD PTR [edi+0x64]
  401b3b:	outs   dx,DWORD PTR ds:[esi]
  401b3c:	pop    esp
  401b3d:	jp     0x401b83
  401b3f:	imul   ebx,DWORD PTR [ecx+0x6c],0x7b647463
  401b46:	jns    0x401b89
  401b48:	dec    ebx
  401b49:	or     DWORD PTR [eax],eax
  401b4b:	add    BYTE PTR [esp+ebp*2],cl
  401b4e:	je     0x401b9d
  401b50:	sub    al,0x6d
  401b52:	jne    0x401bc0
  401b54:	cs inc ecx
  401b56:	popa   
  401b57:	outs   dx,BYTE PTR ds:[esi]
  401b58:	daa    
  401b59:	gs gs push edi
  401b5c:	dec    ebx
  401b5d:	or     DWORD PTR [eax],eax
  401b5f:	add    BYTE PTR [edi+0xb],al
  401b62:	inc    eax
  401b63:	add    BYTE PTR [edi],bh
  401b65:	or     eax,DWORD PTR [eax+0x0]
  401b68:	or     eax,DWORD PTR [bx+si+0x0]
  401b6c:	aas    
  401b6d:	or     eax,DWORD PTR [eax+0x0]
  401b70:	adc    ecx,DWORD PTR [ebx]
  401b72:	inc    eax
  401b73:	add    BYTE PTR [edi],bl
  401b75:	or     eax,DWORD PTR [eax+0x0]
  401b78:	jmp    0x401b84
  401b7a:	inc    eax
  401b7b:	add    bl,ah
  401b7d:	or     al,BYTE PTR [eax+0x0]
  401b80:	add    al,0x6c
  401b82:	je     0x401bd4
  401b84:	fldenv [ebp+0x63]
  401b87:	inc    ecx
  401b88:	out    0x6c,eax
  401b8a:	jb     0x401bf1
  401b8c:	mov    eax,0x8f000078
  401b91:	fs popa 
  401b93:	xchg   DWORD PTR fs:[edx+0x62],esp
  401b97:	jb     0x401b43
  401b99:	ja     0x401c14
  401b9b:	inc    ebp
	...
  401bc4:	mov    ds:0xb000004a,eax
  401bc9:	outs   dx,BYTE PTR ds:[esi]
  401bca:	jb     0x401c3a
  401bcc:	scas   al,BYTE PTR es:[edi]
  401bcd:	xor    esi,DWORD PTR gs:[edx]
  401bd0:	pop    ebp
  401bd1:	ins    DWORD PTR es:[edi],dx
  401bd2:	ins    BYTE PTR es:[edi],dx
  401bd3:	ins    BYTE PTR es:[edi],dx
  401bd4:	dec    ebx
  401bd5:	or     DWORD PTR [eax],eax
  401bd7:	add    BYTE PTR [esi+0x78],ch
  401bda:	jbe    0x401c3f
  401bdc:	jns    0x401c5b
  401bde:	cs fs pop edi
  401be1:	add    BYTE PTR gs:[eax],al
  401be4:	jbe    0x401c54
  401be6:	ins    DWORD PTR es:[edi],dx
  401be7:	jae    0x401c4f
  401be9:	jge    0x401beb
  401beb:	add    BYTE PTR [esi+0x78],ah
  401bee:	jbe    0x401c53
  401bf0:	pop    ecx
  401bf1:	jge    0x401c21
  401bf3:	fs aaa 
  401bf5:	add    BYTE PTR gs:[eax],al
  401bf8:	outs   dx,BYTE PTR cs:[esi]
  401bfa:	ins    DWORD PTR es:[edi],dx
  401bfb:	arpl   WORD PTR [ebx],di
  401bfd:	jb     0x401bff
  401bff:	add    BYTE PTR ds:0x1e747262,dl
  401c05:	push   0x6c
  401c07:	inc    ecx
  401c08:	das    
  401c09:	outs   dx,DWORD PTR gs:[esi]
  401c0b:	arpl   WORD PTR [ebx+0x9],cx
  401c0e:	add    BYTE PTR [eax],al
  401c10:	cmc    
  401c11:	popa   
  401c12:	jb     0x401c88
  401c14:	(bad)  
  401c15:	imul   ebp,DWORD PTR [ecx+eax*2-0x11],0x4b636f64
  401c1d:	or     DWORD PTR [eax],eax
  401c1f:	add    BYTE PTR [esi],dl
  401c21:	arpl   WORD PTR [ebp+0x61],bp
  401c24:	fistp  DWORD PTR [edx+0x69]
  401c27:	add    BYTE PTR gs:[eax],al
	...
  401c4e:	add    BYTE PTR [eax],al
  401c50:	aam    0x43
  401c52:	inc    si
  401c54:	loop   0x401cba
  401c56:	gs add ch,dh
  401c59:	popa   
  401c5a:	jb     0x401cd0
  401c5c:	mov    esi,0xb9506c6a
  401c61:	fs je  0x401cc9
  401c64:	test   al,0x7d
  401c66:	add    BYTE PTR [eax],al
  401c68:	sub    DWORD PTR [esi+0x61],0x70
  401c6c:	mov    ah,BYTE PTR [ebp+0x6c]
  401c6f:	outs   dx,DWORD PTR ds:[esi]
  401c70:	test   al,0x9
  401c72:	add    BYTE PTR [eax],al
  401c74:	mov    al,ds:0xa66e726e
  401c79:	xor    esi,DWORD PTR gs:[edx]
  401c7c:	xor    eax,0x4b6c6c6d
  401c81:	or     DWORD PTR [eax],eax
  401c83:	add    BYTE PTR [esi+ebp*2+0x64795074],cl
  401c8a:	arpl   WORD PTR [ebp+0x58],sp
  401c8d:	js     0x401cd7
  401c8f:	gs push 0x79
  401c92:	add    BYTE PTR [eax],al
  401c94:	dec    ebx
  401c95:	or     DWORD PTR [ecx+eax*1+0x4b],eax
  401c99:	lods   eax,DWORD PTR ds:[esi]
  401c9a:	pop    ecx
  401c9b:	nop
  401c9c:	dec    ebx
  401c9d:	fild   WORD PTR [ebx]
  401c9f:	add    BYTE PTR [ebx-0x1a],cl
  401ca2:	add    eax,DWORD PTR [eax]
  401ca4:	dec    ebx
  401ca5:	repz sti 
  401ca7:	add    BYTE PTR [ebx+0x3a],cl
  401caa:	add    eax,DWORD PTR [eax]
  401cac:	dec    ebx
  401cad:	loop   0x401cb2
  401caf:	add    BYTE PTR [ebx+0x22],cl
  401cb2:	add    al,0x0
	...
  401cdc:	dec    ebx
  401cdd:	loop   0x401ce2
  401cdf:	add    BYTE PTR [ebx-0x1e],cl
  401ce2:	add    eax,DWORD PTR [eax]
  401ce4:	dec    ebx
  401ce5:	loop   0x401cea
  401ce7:	add    BYTE PTR [ebx-0x1e],cl
  401cea:	add    eax,DWORD PTR [eax]
  401cec:	dec    ebx
  401ced:	loop   0x401cf2
  401cef:	add    BYTE PTR [ebx-0x1e],cl
  401cf2:	add    eax,DWORD PTR [eax]
  401cf4:	dec    ebx
  401cf5:	loop   0x401cfa
  401cf7:	add    BYTE PTR [ebx-0x1e],cl
  401cfa:	add    eax,DWORD PTR [eax]
  401cfc:	dec    ebx
  401cfd:	bound  eax,QWORD PTR [eax+eax*1]
  401d00:	dec    ebx
  401d01:	in     al,dx
  401d02:	sbb    bh,BYTE PTR [edx+0x9afe055]
  401d08:	push   cs
  401d09:	ret    0x1bb
  401d0c:	xchg   DWORD PTR [ebp+0x9a35425],esp
  401d12:	ja     0x401d34
  401d14:	fwait
  401d15:	out    dx,al
  401d16:	push   0x67
  401d18:	cdq    
  401d19:	shr    DWORD PTR [eax+0x20],0xa8
  401d1d:	shr    DWORD PTR [ecx+0x6e],0x9c
  401d21:	aam    0x23
  401d23:	bound  ebp,QWORD PTR [esi+0x0]
  401d26:	jbe    0x401d9d
  401d28:	ins    DWORD PTR es:[edi],dx
  401d29:	add    BYTE PTR [ebp+0x6e],ch
  401d2c:	sub    ebp,DWORD PTR [edx+ecx*2+0x6acd2b53]
  401d33:	outs   dx,BYTE PTR fs:[esi]
  401d35:	repnz or BYTE PTR ds:0x3cd0951,cl
  401d3c:	dec    ebx
  401d3d:	or     ecx,ebp
  401d3f:	add    eax,DWORD PTR [eax]
	...
  401d65:	add    BYTE PTR [eax],al
  401d67:	add    BYTE PTR [ebx+0x9],cl
  401d6a:	mov    ecx,0x9d094b40
  401d6f:	add    al,0x48
  401d71:	or     ebx,edx
  401d73:	mov    eax,ds:0x3e942ef
  401d78:	dec    ebx
  401d79:	or     ecx,ebp
  401d7b:	add    ecx,DWORD PTR [ebx+0x9]
  401d7e:	or     DWORD PTR [esp+ecx*2],eax
  401d81:	or     dl,dh
  401d83:	add    al,0x49
  401d85:	aaa    
  401d86:	jmp    0xe9496984
  401d8b:	dec    ebp
  401d8c:	dec    ebx
  401d8d:	or     ecx,ebp
  401d8f:	add    ecx,DWORD PTR [ebx+0x9]
  401d92:	push   ebp
  401d93:	in     eax,dx
  401d94:	dec    ebx
  401d95:	or     ecx,ebp
  401d97:	adc    ecx,DWORD PTR [ebx+0x9]
  401d9a:	jmp    0xe94967b2
  401d9f:	add    ecx,DWORD PTR [ebx]
  401da1:	or     ecx,ebp
  401da3:	adc    ecx,DWORD PTR [ebx+0x9]
  401da6:	jmp    0xed4968b0
  401dab:	add    ecx,DWORD PTR [ebx+0x9]
  401dae:	jmp    0xed4968b6
  401db3:	add    ecx,DWORD PTR [ebx+0x9]
  401db6:	jmp    0xe94968be
  401dbb:	jae    0x401e07
  401dbd:	or     ecx,ebp
  401dbf:	add    eax,0x8d9f094b
  401dc4:	dec    edx
  401dc5:	or     ebx,ebp
  401dc7:	add    ecx,DWORD PTR [ebx+0x9]
  401dca:	jmp    0x401dd2
	...
  401df3:	add    BYTE PTR [ebx+0x9],bl
  401df6:	jmp    0xe949690e
  401dfb:	add    ebx,DWORD PTR [ebx+0x9]
  401dfe:	jmp    0x496916
  401e03:	jmp    0xd9402750
  401e08:	dec    eax
  401e09:	or     DWORD PTR [eax],eax
  401e0b:	jmp    0xe9402758
  401e10:	dec    eax
  401e11:	or     DWORD PTR [eax],eax
  401e13:	stc    
  401e14:	sbb    DWORD PTR [eax],ecx
  401e16:	add    BYTE PTR [ecx],ah
  401e18:	dec    eax
  401e19:	or     DWORD PTR [eax],eax
  401e1b:	jmp    0xe9402768
  401e20:	dec    eax
  401e21:	or     DWORD PTR [eax],eax
  401e23:	jmp    0xe9402770
  401e28:	dec    eax
  401e29:	or     DWORD PTR [eax],eax
  401e2b:	jmp    0xe9402778
  401e30:	dec    eax
  401e31:	or     DWORD PTR [eax],eax
  401e33:	jmp    0xe9402780
  401e38:	dec    eax
  401e39:	or     DWORD PTR [eax],eax
  401e3b:	jmp    0xe9402788
  401e40:	dec    eax
  401e41:	or     DWORD PTR [eax],eax
  401e43:	jmp    0xe9402790
  401e48:	dec    eax
  401e49:	or     DWORD PTR [eax],eax
  401e4b:	jmp    0xe9402798
  401e50:	dec    eax
  401e51:	or     DWORD PTR [eax],eax
  401e53:	jmp    0xe94027a0
	...
  401e80:	dec    eax
  401e81:	or     DWORD PTR [eax],eax
  401e83:	jmp    0xe94027d0
  401e88:	dec    eax
  401e89:	or     DWORD PTR [eax],eax
  401e8b:	jmp    0xe94027d8
  401e90:	dec    eax
  401e91:	or     DWORD PTR [eax],eax
  401e93:	int    0x71
  401e95:	or     al,BYTE PTR [eax]
  401e97:	ins    DWORD PTR es:[edi],dx
  401e98:	dec    eax
  401e99:	or     DWORD PTR [eax],eax
  401e9b:	jmp    0xe94027e8
  401ea0:	dec    eax
  401ea1:	or     DWORD PTR [eax],eax
  401ea3:	add    dl,ah
  401ea5:	or     al,0x0
  401ea7:	add    dl,ah
  401ea9:	or     al,0x0
  401eab:	add    dl,dh
  401ead:	or     al,0x0
  401eaf:	add    dl,dh
  401eb1:	or     al,0x0
  401eb3:	add    ah,bh
  401eb5:	pusha  
  401eb6:	gs js  0x401e6f
  401eb9:	or     al,0x0
  401ebb:	add    BYTE PTR [ecx],ch
  401ebd:	clc    
  401ebe:	add    BYTE PTR [eax],al
  401ec0:	mov    dl,0x1c
  401ec2:	add    BYTE PTR [eax],al
  401ec4:	mov    ds:0xa20000f2,al
  401ec9:	push   es
  401eca:	add    BYTE PTR [eax],al
  401ecc:	mov    dl,0xc
  401ece:	add    BYTE PTR [eax],al
  401ed0:	mov    dl,0xc
  401ed2:	add    BYTE PTR [eax],al
  401ed4:	mov    ds:0x4200000c,al
  401ed9:	add    eax,0x774c6000
  401ede:	fs popa 
  401ee0:	push   ss
  401ee1:	ins    BYTE PTR es:[edi],dx
	...
  401f0a:	add    BYTE PTR [eax],al
  401f0c:	bound  ecx,QWORD PTR [ebx]
  401f0e:	add    BYTE PTR [eax],al
  401f10:	bound  ebx,QWORD PTR [ecx+eax*1]
  401f13:	add    BYTE PTR [edx+0x6],dh
  401f16:	add    BYTE PTR [eax],al
  401f18:	jb     0x401f26
  401f1a:	add    DWORD PTR [eax],eax
  401f1c:	bound  ecx,QWORD PTR [eax+eax*1]
  401f1f:	add    BYTE PTR [edx+0xc],ah
  401f22:	add    BYTE PTR [eax],al
  401f24:	xor    cl,BYTE PTR [eax+eax*1]
  401f27:	add    BYTE PTR [edx+0x5],dh
  401f2a:	add    BYTE PTR [eax+0x1c],al
  401f2d:	push   eax
  401f2e:	popa   
  401f2f:	je     0x401f74
  401f31:	add    eax,0x4a8a0000
  401f36:	add    BYTE PTR [eax],al
  401f38:	xor    ch,BYTE PTR [ecx+eax*1]
  401f3b:	add    BYTE PTR [edx],ah
  401f3d:	inc    esi
  401f3e:	add    BYTE PTR [eax],al
  401f40:	and    al,BYTE PTR [esi]
  401f42:	add    DWORD PTR [eax],eax
  401f44:	dec    ebx
  401f45:	loop   0x401f4a
  401f47:	add    BYTE PTR [ebx-0x1e],cl
  401f4a:	add    eax,DWORD PTR [eax]
  401f4c:	dec    ebx
  401f4d:	loop   0x401f52
  401f4f:	add    BYTE PTR [ebx-0x5e],cl
  401f52:	add    eax,DWORD PTR [eax]
  401f54:	or     esp,edx
  401f56:	add    eax,DWORD PTR [eax]
  401f58:	dec    ebx
  401f59:	loop   0x401f5e
  401f5b:	add    BYTE PTR [ebx-0x1e],cl
  401f5e:	add    eax,DWORD PTR [eax]
  401f60:	dec    ebx
  401f61:	loop   0x401f66
  401f63:	add    BYTE PTR [ebx-0x53],cl
  401f66:	mov    esp,gs
  401f68:	xor    ecx,ebp
  401f6a:	adc    eax,DWORD PTR [eax+0x4b]
  401f6d:	or     dh,BYTE PTR [ebp+0x1]
	...
  401f98:	mov    dh,ch
  401f9a:	div    DWORD PTR [ebp+0x53]
  401f9d:	mov    WORD PTR [edx],es
  401f9f:	push   0x4b
  401fa1:	or     bh,BYTE PTR [edx+ebx*8-0x3d331db5]
  401fa8:	inc    edi
  401fa9:	loop   0x401ffb
  401fab:	mov    esi,DWORD PTR [edi+0x49]
  401fae:	sub    dl,BYTE PTR [eax]
  401fb0:	or     esp,edx
  401fb2:	sti    
  401fb3:	jb     0x401fff
  401fb5:	mov    ds:0xf9ee83f7,eax
  401fba:	add    esi,DWORD PTR [eax+edx*2+0x6b]
  401fbe:	push   ecx
  401fbf:	or     al,dl
  401fc1:	shl    esi,cl
  401fc3:	jne    0x402008
  401fc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fc6:	push   edx
  401fc7:	or     BYTE PTR [edx-0x61ffff5d],al
  401fcd:	imul   ebp,eax,0xffffff83
  401fd0:	pop    es
  401fd1:	cdq    
  401fd2:	ins    BYTE PTR es:[edi],dx
  401fd3:	dec    edi
  401fd4:	pop    ebx
  401fd5:	and    BYTE PTR [eax+edi*8],al
  401fd8:	mov    ecx,0x24ffc2e1
  401fdd:	out    dx,al
  401fde:	pop    es
  401fdf:	pop    DWORD PTR [esi+0x1745bf78]
  401fe5:	or     ch,cl
  401fe7:	add    ecx,DWORD PTR [ebx+0x9]
  401fea:	jb     0x40203d
  401fec:	push   ebx
  401fed:	cmp    bl,0x69
  401ff0:	dec    ebx
  401ff1:	out    dx,al
  401ff2:	aam    0x13
  401ff4:	hlt    
  401ff5:	je     0x40203c
  401ff7:	div    DWORD PTR [esi-0xf]
  401ffa:	ds jno 0x401ffd
	...
  402021:	add    BYTE PTR [eax],al
  402023:	add    BYTE PTR [ebx-0x12],dl
  402026:	fwait
  402027:	movhlps xmm1,xmm4
  40202a:	fld    QWORD PTR [ebx]
  40202c:	jle    0x401fb0
  40202e:	adc    eax,0x91f20783
  402033:	jge    0x402090
  402035:	dec    ecx
  402036:	jmp    0x2a485a36
  40203b:	test   DWORD PTR [esp+eax*2+0x94b0401],0xed0ebee9
  402046:	jmp    0x62496b4e
  40204b:	push   ecx
  40204c:	inc    ebx
  40204d:	cmp    bl,0x88
  402050:	push   es
  402051:	icebp  
  402052:	cmp    DWORD PTR [edx+0x49],ebp
  402055:	out    dx,al
  402056:	pop    esp
  402057:	clc    
  402058:	jl     0x4020ce
  40205a:	shl    esi,1
  40205c:	inc    BYTE PTR [eax]
  40205e:	(bad)  
  40205f:	push   ecx
  402060:	push   edi
  402061:	and    BYTE PTR [esp+edi*8],0x92
  402065:	retf   
  402066:	in     eax,dx
  402067:	add    esi,esi
  402069:	cmp    DWORD PTR [ebp+0x11f18f82],0xe9493bc2
  402073:	sti    
  402074:	mov    ecx,0x4f6aa08
  402079:	inc    esp
  40207a:	xchg   ecx,eax
  40207b:	add    ecx,DWORD PTR [ebx+0x9]
  40207e:	jmp    0xea2da741
  402083:	add    ecx,DWORD PTR [ebx+0x9]
  402086:	add    BYTE PTR [edx+0x0],ah
	...
  4020ad:	add    BYTE PTR [eax],al
  4020af:	add    BYTE PTR [ebx+0x1],bh
  4020b2:	mov    ebx,ebx
  4020b4:	ret    
  4020b5:	inc    ebx
  4020b6:	clc    
  4020b7:	mov    ecx,0xd4ff08a2
  4020bc:	cld    
  4020bd:	in     eax,dx
  4020be:	jne    0x402111
  4020c0:	cmc    
  4020c1:	jae    0x4020cb
  4020c3:	dec    esi
  4020c4:	call   0x87e1:0x40bcff15
  4020cb:	ds fucomp st(5)
  4020ce:	push   eax
  4020cf:	bound  edi,QWORD PTR [ebx+0x1]
  4020d2:	mov    ebx,ebx
  4020d4:	bound  ecx,QWORD PTR [ecx]
  4020d6:	push   0xffffffe9
  4020d8:	aad    0x73
  4020da:	cld    
  4020db:	push   ds
  4020dc:	cmp    esi,ecx
  4020de:	call   FWORD PTR [eax+edx*2+0x10f552ee]
  4020e5:	adc    BYTE PTR [ebp+0x1],0x49
  4020e9:	push   esp
  4020ea:	or     al,0xc2
  4020ec:	js     0x402164
  4020ee:	push   es
  4020ef:	ret    0xbf88
  4020f2:	ret    0x48e1
  4020f5:	mov    cl,0x1
  4020f7:	jmp    0xac092a44
  4020fc:	push   edi
  4020fd:	or     DWORD PTR [ebp+0x62],edx
  402100:	jae    0x40208b
  402102:	(bad)  
  402103:	int    0xe7
  402105:	sbb    eax,0xf1472911
  40210a:	jb     0x4020f4
  40210c:	mov    ebp,ebp
  40210e:	(bad)  
  40210f:	cmp    al,0x37
  402111:	out    dx,al
  402112:	jne    0x4020f5
	...
  40213c:	pusha  
  40213d:	jo     0x40213e
  40213f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402140:	push   esi
  402141:	add    eax,eax
  402143:	adc    al,0x4b
  402145:	ret    0xe5c2
  402148:	dec    eax
  402149:	adc    BYTE PTR [ebp-0x1f],0xc3
  40214d:	pop    ss
  40214e:	lea    eax,[eax]
  402150:	pop    edi
  402151:	icebp  
  402152:	push   eax
  402153:	call   FWORD PTR [edi]
  402155:	sbb    edi,edi
  402157:	jne    0x40217f
  402159:	div    BYTE PTR [ebp+0x8]
  40215c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40215d:	push   edi
  40215e:	or     al,0x85
  402160:	bound  ebp,QWORD PTR [ebp+0x13]
  402163:	mov    ebp,DWORD PTR [edi+0x2453bf4]
  402169:	pop    esp
  40216a:	pop    es
  40216b:	mov    eax,0x8e3
  402170:	cdq    
  402171:	jmp    0x40219d
  402173:	sar    BYTE PTR [ecx+0x7],0x2b
  402177:	shr    BYTE PTR [ebx],0xc7
  40217a:	or     al,0x0
  40217c:	mov    edi,0x1e83ec81
  402181:	icebp  
  402182:	push   esi
  402183:	push   0x40182f
  402188:	pop    edx
  402189:	ja     0x40218c
  40218b:	ret    
  40218c:	inc    ebp
  40218d:	mov    bh,BYTE PTR [ebp+0xc]
  402190:	mov    ds:0x2783065c,al
  402195:	add    BYTE PTR [eax],al
  402197:	jne    0x402146
  402199:	and    eax,eax
  40219b:	pop    esi
  40219c:	imul   eax,edi,0xc
	...
  4021c7:	add    BYTE PTR [ecx],ah
  4021c9:	jae    0x4021db
  4021cb:	add    BYTE PTR [edi],bl
  4021cd:	push   DWORD PTR [edi+0x87201]
  4021d3:	pop    esi
  4021d4:	stos   DWORD PTR es:[edi],eax
  4021d5:	retf   0xc
  4021d8:	stc    
  4021d9:	pop    edx
  4021da:	or     al,0xc7
  4021dc:	das    
  4021dd:	icebp  
  4021de:	add    BYTE PTR [eax],al
  4021e0:	jb     0x4021ea
  4021e2:	mov    edx,DWORD PTR [ebp+0x6a]
  4021e5:	adc    DWORD PTR [edx],0x50f11f8d
  4021eb:	call   FWORD PTR [edi+0x15]
  4021ee:	push   esi
  4021ef:	dec    DWORD PTR [ebx+0xd]
  4021f2:	or     al,0xff
  4021f4:	cdq    
  4021f5:	bnd jle 0x4021b8
  4021f8:	mov    dl,0xdb
  4021fa:	sub    al,al
  4021fc:	test   DWORD PTR [ecx+0x5f4b0cc1],edi
  402202:	jbe    0x402200
  402204:	dec    ebx
  402205:	cmc    
  402206:	cld    
  402207:	sub    cl,BYTE PTR [ebx]
  402209:	(bad)  
  40220a:	retf   0x57c2
  40220d:	loop   0x402197
  40220f:	inc    ebp
  402210:	(bad)  
  402211:	fdivrp st(3),st
  402213:	sub    DWORD PTR [esi-0x4c3b910e],ecx
  402219:	loopne 0x40221e
  40221b:	add    BYTE PTR [ebx-0x74],cl
  40221e:	retf   0x4fc2
  402221:	loop   0x402271
  402223:	mov    esp,edi
  402225:	pusha  
  402226:	mov    edi,0xf422dcf8
  40222b:	push   0x0
	...
  402254:	dec    edi
  402255:	lock inc ebx
  402257:	add    bl,al
  402259:	pop    DWORD PTR [edx]
  40225b:	ret    
  40225c:	mov    ah,0x87
  40225e:	add    ebp,DWORD PTR [edx+0x4b]
  402261:	cwde   
  402262:	add    BYTE PTR [edx+0x4b],ch
  402265:	cwde   
  402266:	add    BYTE PTR [eax+0x4b],ch
  402269:	loop   0x40226e
  40226b:	adc    BYTE PTR [esp+esi*2-0x553517f5],0x4
  402273:	add    dl,dl
  402275:	and    al,0xf0
  402277:	inc    eax
  402278:	neg    ch
  40227a:	mov    esp,0x5de243c2
  40227f:	add    BYTE PTR [esi-0xcaf13e4],bh
  402285:	loope  0x40229a
  402287:	add    BYTE PTR [ebx+0x65],cl
  40228a:	mov    eax,edi
  40228c:	fs call 0xf01c:0x84c50f3
  402294:	xor    esp,DWORD PTR [edi-0x4a]
  402297:	add    al,0x4b
  402299:	(bad)  
  40229a:	test   al,0x79
  40229c:	inc    ebp
  40229d:	jmp    0x49e:0x4d23f014
  4022a4:	dec    ebx
  4022a5:	push   ds
  4022a6:	test   eax,0xe90209bd
  4022ab:	repnz sahf 
  4022ad:	icebp  
  4022ae:	pop    esp
  4022af:	mov    DWORD PTR [ebx],edx
  4022b1:	(bad)  [esi-0xd]
  4022b4:	fwait
  4022b5:	jmp    0x0:0xffd4
	...
  4022e0:	in     al,0x18
  4022e2:	push   esi
  4022e3:	repz hlt 
  4022e5:	xchg   ah,cl
  4022e7:	jmp    0x402334
  4022e9:	je     0x402270
  4022eb:	repz pop esi
  4022ed:	in     eax,dx
  4022ee:	push   ecx
  4022ef:	cmp    esi,esp
  4022f1:	or     ecx,ebp
  4022f3:	stos   DWORD PTR es:[edi],eax
  4022f4:	dec    edx
  4022f5:	or     ecx,ebp
  4022f7:	add    eax,DWORD PTR [edx]
  4022f9:	enter  0x3f1,0x1e
  4022fd:	jle    0x40230c
  4022ff:	pop    esp
  402300:	les    edx,FWORD PTR [edi]
  402302:	test   eax,0xe877b303
  402307:	(bad)  
  402308:	lods   al,BYTE PTR ds:[esi]
  402309:	pop    edi
  40230a:	jmp    0x402369
  40230c:	dec    ebx
  40230d:	jmp    0xf2f4:0x9da4fb74
  402314:	xchg   esp,eax
  402315:	shr    BYTE PTR [ebx],0x8
  402318:	dec    ebx
  402319:	push   esp
  40231a:	jb     0x4022fb
  40231c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40231e:	sti    
  40231f:	inc    ebx
  402320:	dec    ebx
  402321:	icebp  
  402322:	pop    ebx
  402323:	add    eax,0x443ea88
  402328:	loope  0x402332
  40232a:	(bad)  
  40232b:	js     0x402380
  40232d:	loope  0x40239d
  40232f:	lock pop esp
  402331:	jmp    0x1400:0x58ea000
  402338:	int3   
  402339:	fadd   QWORD PTR [ebx-0x3b9ecf53]
  40233f:	sti    
  402340:	mov    BYTE PTR [ecx],cl
  402342:	clc    
  402343:	sbb    eax,DWORD PTR [eax]
	...
  402369:	add    BYTE PTR [eax],al
  40236b:	add    BYTE PTR [esi-0x3a],cl
  40236e:	dec    DWORD PTR [esi+0x2c8efdb3]
  402374:	aaa    
  402375:	ret    0x7d45
  402378:	dec    eax
  402379:	or     DWORD PTR [eax],eax
  40237b:	jmp    0xf53f2cf6
  402380:	or     al,0xeb
  402382:	jne    0x402375
  402384:	and    BYTE PTR [eax-0x3],ch
  402387:	pop    esi
  402388:	stc    
  402389:	jge    0x4023e0
  40238b:	loope  0x402402
  40238d:	pop    ss
  40238e:	call   esp
  402390:	fsub   st(1),st
  402392:	jne    0x4023d5
  402394:	fnstenv [ebx+0x8]
  402397:	ds jbe 0x4023ab
  40239a:	leave  
  40239b:	sub    edx,eax
  40239d:	jmp    0x612c85f6
  4023a2:	add    dl,bh
  4023a4:	or     BYTE PTR [ecx],cl
  4023a6:	clc    
  4023a7:	fwait
  4023a8:	inc    edi
  4023a9:	(bad)  
  4023aa:	inc    DWORD PTR [ebx-0x1e8a15b8]
  4023b0:	nop
  4023b1:	sahf   
  4023b2:	inc    DWORD PTR [esi]
  4023b4:	cdq    
  4023b5:	mov    edi,0x5448e5c2
  4023ba:	mov    eax,DWORD PTR ds:0x6a145415
  4023c0:	pop    esi
  4023c1:	or     DWORD PTR [ebp-0x13],esi
  4023c4:	rol    esi,0x10
  4023c7:	jmp    0xd6509747
  4023cc:	cld    
  4023cd:	cld    
  4023ce:	(bad)  
  4023cf:	push   esp
	...
  4023f8:	outs   dx,DWORD PTR ds:[esi]
  4023f9:	loope  0x4023ef
  4023fb:	add    BYTE PTR [edi+0x378bfff7],cl
  402401:	adc    DWORD PTR [ecx],esp
  402403:	add    ch,BYTE PTR [ebx+0x370010c2]
  402409:	ins    BYTE PTR es:[edi],dx
  40240a:	in     al,dx
  40240b:	xor    esi,0xffffffd9
  40240e:	push   DWORD PTR [ebp+0x2e]
  402411:	inc    edi
  402412:	add    al,0x8d
  402414:	fst    DWORD PTR [bx+si-0x1]
  402418:	push   edi
  402419:	in     eax,0xe7
  40241b:	ret    
  40241c:	int    0xda
  40241e:	dec    DWORD PTR [ebx+0x38830967]
  402424:	and    ah,BYTE PTR [ecx+0x7]
  402427:	mov    esp,DWORD PTR [edi-0x27]
  40242a:	bswap  eax
  40242c:	cdq    
  40242d:	(bad)  
  40242f:	sar    BYTE PTR [ebx],0xcf
  402432:	or     BYTE PTR [eax],al
  402434:	mov    bh,0x65
  402436:	in     al,dx
  402437:	and    DWORD PTR [esi],0xffffffd9
  40243a:	push   DWORD PTR [ebp-0x22]
  40243d:	inc    esi
  40243e:	add    cl,BYTE PTR [ebp-0xaf2559]
  402444:	xchg   edi,eax
  402445:	in     al,0xe7
  402447:	xchg   edi,eax
  402448:	sbb    eax,0xf78bffda
  40244d:	call   0x60f25cd4
  402452:	or     BYTE PTR [edi],cl
  402454:	adc    eax,0x6686fe50
  402459:	mov    BYTE PTR [edx],0x2b
	...
  402484:	jb     0x40242a
  402486:	ret    0xb208
  402489:	aas    
  40248a:	mov    ebp,esp
  40248c:	and    ecx,edx
  40248e:	cld    
  40248f:	call   DWORD PTR [edi]
  402491:	call   0x4f3f25ff
  402496:	call   DWORD PTR [eax-0x63]
  402499:	pop    edi
  40249a:	or     al,ch
  40249c:	dec    ebx
  40249d:	dec    esp
  40249e:	icebp  
  40249f:	jmp    FWORD PTR [ebx+ebp*2+0x46]
  4024a3:	or     al,0xc8
  4024a5:	or     al,BYTE PTR [esp+esi*2]
  4024a8:	inc    ebp
  4024a9:	idiv   DWORD PTR [ecx+0x5cb5445]
  4024af:	sub    ecx,DWORD PTR [ebx+0x4b08c5a9]
  4024b5:	and    eax,0x1cd0ec7d
  4024ba:	adc    al,0x83
  4024bc:	jno    0x4024b0
  4024be:	jbe    0x4024c4
  4024c0:	add    dh,BYTE PTR [edi+edi*8-0x1ada01]
  4024c7:	(bad)  
  4024c8:	xchg   esi,eax
  4024c9:	fcmovu st,st(3)
  4024cb:	loopne 0x4024e4
  4024cd:	pop    edi
  4024ce:	lock or ecx,DWORD PTR [ebx]
  4024d1:	(bad)  
  4024d3:	mov    bl,BYTE PTR [esi+0x4b02c8e2]
  4024d9:	repnz add eax,DWORD PTR [eax]
  4024dc:	loopne 0x4024ca
  4024de:	pop    ebp
  4024df:	add    esp,ebp
  4024e1:	mov    esp,0xda5efeff
  4024e6:	fist   DWORD PTR [ecx+0x0]
	...
  40250d:	add    BYTE PTR [eax],al
  40250f:	add    bh,bl
  402511:	es lock leave 
  402514:	or     esi,ebp
  402516:	add    edx,DWORD PTR [ebp-0x40]
  402519:	and    eax,0xa7c7c484
  40251e:	jl     0x402595
  402520:	dec    edi
  402521:	jl     0x402526
  402523:	lea    ecx,[esi]
  402525:	(bad)  
  402526:	push   edx
  402527:	push   DWORD PTR [esi]
  402529:	loop   0x402584
  40252b:	call   FWORD PTR [esi]
  40252d:	fcmovu st,st(3)
  40252f:	mov    al,ds:0xb03f176
  402534:	mov    esp,DWORD PTR [ebp+0x9]
  402537:	or     DWORD PTR [esi],0xfffffff6
  40253a:	add    dh,BYTE PTR [ebp+0x4c]
  40253d:	or     DWORD PTR [edx],edx
  40253f:	les    ebx,FWORD PTR ds:0x4b00abd2
  402545:	xchg   esp,eax
  402546:	sub    al,0xf0
  402548:	dec    eax
  402549:	fld    DWORD PTR [eax]
  40254b:	dec    ecx
  40254c:	cmp    ebx,DWORD PTR [esi-0x66]
  40254f:	lods   al,BYTE PTR ds:[esi]
  402550:	dec    edx
  402551:	or     ecx,ebp
  402553:	add    esi,ebp
  402555:	shr    DWORD PTR [ebx+0x623e4b00],1
  40255b:	loopne 0x402527
  40255d:	int    0x21
  40255f:	out    dx,eax
  402560:	cmp    al,0xe7
  402562:	cmp    bl,BYTE PTR [ebx]
  402564:	adc    BYTE PTR [ecx+ebp*8+0x59],dh
  402568:	dec    ebx
  402569:	jae    0x402556
  40256b:	pop    ecx
  40256c:	dec    ebx
  40256d:	jae    0x402559
  40256f:	pop    ebx
  402570:	dec    ebx
  402571:	or     ecx,ebp
  402573:	ret    
	...
  40259c:	adc    al,0x5d
  40259e:	in     eax,0xdb
  4025a0:	test   DWORD PTR [ecx+ebp*8+0x654cd203],edi
  4025a7:	inc    esp
  4025a8:	ja     0x4025e4
  4025aa:	pop    esi
  4025ab:	jns    0x4025f0
  4025ad:	icebp  
  4025ae:	sbb    ch,dh
  4025b0:	in     al,dx
  4025b1:	out    0x26,al
  4025b3:	dec    ecx
  4025b4:	jecxz  0x4025bf
  4025b6:	jmp    0x94d270be
  4025bb:	sti    
  4025bc:	sar    ebx,0x63
  4025bf:	dec    ecx
  4025c0:	sar    DWORD PTR [ecx],cl
  4025c2:	rol    DWORD PTR [ebx-0x7f16f6b5],0xc6
  4025c9:	popa   
  4025ca:	push   ds
  4025cb:	out    dx,eax
  4025cc:	mov    ah,0x39
  4025ce:	push   ss
  4025cf:	jns    0x402614
  4025d1:	out    0xbb,al
  4025d3:	dec    ecx
  4025d5:	add    DWORD PTR fs:[esi+edx*1],eax
  4025d9:	or     ch,BYTE PTR [edx+0xe633da]
  4025df:	jl     0x402581
  4025e1:	xchg   esp,eax
  4025e2:	test   DWORD PTR [ecx+0x75],esi
  4025e5:	out    0xff,al
  4025e7:	cmp    DWORD PTR [esp+ebx*2-0x4],ebp
  4025eb:	rcr    DWORD PTR [edi],1
  4025ed:	out    0xff,al
  4025ef:	(bad)  
  4025f0:	jno    0x402598
  4025f2:	je     0x4025df
  4025f4:	and    DWORD PTR [edi+edi*8-0x60ea4c4],0x8b094895
  4025ff:	stos   BYTE PTR es:[edi],al
	...
  402628:	add    eax,edx
  40262a:	ret    0x48e1
  40262d:	cmp    al,0x8b
  40262f:	xchg   ebp,eax
  402630:	leave  
  402631:	int3   
  402632:	clc    
  402633:	sahf   
  402634:	mov    bl,0x15
  402636:	call   0x264796
  40263b:	pusha  
  40263c:	xchg   ebx,eax
  40263d:	loope  0x402606
  40263f:	sub    al,0x1b
  402641:	or     DWORD PTR [eax],eax
  402643:	jmp    0xe5b60c90
  402648:	lock (bad) 
  40264a:	std    
  40264b:	outs   dx,BYTE PTR ds:[esi]
  40264c:	cmc    
  40264d:	xchg   ecx,eax
  40264e:	push   ebp
  40264f:	cmc    
  402650:	cmp    ebx,0x992e969
  402656:	(bad)  
  402657:	(bad)  
  402659:	in     eax,0x75
  40265b:	push   ecx
  40265c:	cmc    
  40265d:	pop    ebx
  40265e:	or     BYTE PTR [esi+0x63],al
  402661:	adc    eax,0xd0449bff
  402666:	ret    0x48e1
  402669:	cmp    al,0x8b
  40266b:	cmp    eax,0x2ef8ccc9
  402670:	adc    esp,ecx
  402672:	add    cl,ch
  402674:	dec    eax
  402675:	or     edi,eax
  402677:	lods   al,BYTE PTR ds:[esi]
  402678:	pushf  
  402679:	or     BYTE PTR [eax],al
  40267b:	jmp    0x95b8c8
  402680:	call   0x50f1:0xef8d1262
  402687:	push   0xffffffa3
  402689:	div    BYTE PTR [ebp-0x4]
	...
  4026b4:	jne    0x402713
  4026b6:	clc    
  4026b7:	call   FWORD PTR [edi]
  4026b9:	in     eax,0xfe
  4026bb:	push   edx
  4026bc:	jle    0x40271e
  4026be:	inc    ebp
  4026bf:	clc    
  4026c0:	stos   DWORD PTR es:[edi],eax
  4026c1:	retf   0x4
  4026c4:	pop    ds
  4026c5:	pusha  
  4026c6:	in     al,dx
  4026c7:	push   0x73
  4026c9:	inc    bp
  4026cb:	or     al,0x32
  4026cd:	hlt    
  4026ce:	jne    0x4026d8
  4026d0:	mov    dh,BYTE PTR [ebx]
  4026d2:	cld    
  4026d3:	push   ebp
  4026d5:	mov    al,ds:0x3c3208c2
  4026da:	mov    ebp,esp
  4026dc:	pop    eax
  4026dd:	adc    DWORD PTR [ebp-0xc6d9bb],ecx
  4026e3:	jne    0x40270f
  4026e5:	shr    DWORD PTR [edx],0xfc
  4026e8:	(bad)
  4026eb:	ret    0x91a
  4026ee:	push   ebp
  4026ef:	mov    eax,esi
  4026f1:	mov    bh,BYTE PTR [ebp+0xc]
  4026f4:	repnz pop esp
  4026f6:	adc    al,0x83
  4026f8:	out    0xf8,eax
  4026fa:	push   DWORD PTR [ebx-0x1c]
  4026fd:	cmc    
  4026fe:	jne    0x402710
  402700:	xchg   ebp,eax
  402701:	pop    esp
  402702:	or     al,0xff
  402704:	jmp    eax
  402706:	out    0x9,eax
  402708:	xchg   dh,dh
  40270a:	dec    ecx
  40270c:	and    BYTE PTR [ecx],cl
  40270e:	add    BYTE PTR [ebp+0x69],dl
  402711:	jmp    0xf5e29d15
  402716:	jne    0x402720
	...
  402740:	pop    edx
  402741:	cdq    
  402742:	(bad)  
  402743:	call   DWORD PTR [ebp-0x76]
  402746:	jge    0x402758
  402748:	dec    ebx
  402749:	bnd ja 0x402760
  40274c:	enter  0xff95,0xff
  402750:	sbb    ah,bl
  402752:	in     al,dx
  402753:	jne    0x402790
  402755:	jecxz  0x4027cd
  402757:	or     al,0x8c
  402759:	gs sti 
  40275b:	out    0xbc,eax
  40275d:	repz in al,dx
  40275f:	call   DWORD PTR [edx+0x1fffffb0]
  402765:	push   edi
  402766:	fild   WORD PTR [ebx+0x7403edee]
  40276c:	push   ecx
  40276d:	shl    DWORD PTR [esi+0xc],cl
  402770:	jae    0x40274c
  402772:	xlat   BYTE PTR ds:[ebx]
  402773:	add    BYTE PTR [ebx-0x49],cl
  402776:	add    DWORD PTR [ebx],ebp
  402778:	mov    eax,DWORD PTR [edx]
  40277a:	in     eax,dx
  40277b:	jne    0x4027d4
  40277d:	mov    bl,0x76
  40277f:	or     BYTE PTR [ebx],dh
  402781:	aas    
  402782:	in     al,dx
  402783:	push   DWORD PTR [ecx+ebx*4]
  402786:	ror    DWORD PTR [eax],0x4b
  402789:	and    eax,0x14c8ec79
  40278e:	adc    al,0xff
  402790:	xchg   esi,eax
  402791:	fucomp st(4)
  402793:	jne    0x4027dc
  402795:	arpl   WORD PTR [esi+0x8],si
  402798:	and    esi,DWORD PTR [ebx-0x78fb0014]
  40279e:	std    
  40279f:	(bad)  
  4027a0:	jbe    0x402784
  4027a2:	in     al,dx
  4027a3:	jne    0x4027a5
	...
  4027c9:	add    BYTE PTR [eax],al
  4027cb:	add    BYTE PTR [edi+0x43],al
  4027ce:	jbe    0x4027d8
  4027d0:	jecxz  0x402838
  4027d2:	in     al,dx
  4027d3:	jmp    esp
  4027d5:	sub    cl,al
  4027d7:	or     al,0x4b
  4027d9:	test   DWORD PTR [eax-0x14],edi
  4027dc:	aam    0x9c
  4027de:	sti    
  4027df:	out    0xcc,eax
  4027e1:	sbb    ebp,esp
  4027e3:	call   FWORD PTR [ebx]
  4027e5:	enter  0x67fb,0x14
  4027e9:	or     ecx,edx
  4027eb:	inc    edx
  4027ec:	dec    ebx
  4027ed:	in     al,0x94
  4027ef:	sti    
  4027f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027f1:	dec    edi
  4027f2:	push   ss
  4027f3:	in     al,dx
  4027f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027f5:	outs   dx,BYTE PTR ds:[esi]
  4027f6:	jmp    0x11513ee7
  4027fb:	pop    ds
  4027fc:	xchg   esp,eax
  4027fd:	jecxz  0x4027fd
  4027ff:	pop    eax
  402800:	dec    ecx
  402801:	xchg   esi,eax
  402802:	lods   al,BYTE PTR ds:[esi]
  402803:	call   DWORD PTR [esp+eiz*8]
  402806:	je     0x402803
  402808:	fs pop ss
  40280a:	out    0xeb,al
  40280c:	je     0x40287c
  40280e:	jmp    0x402888
  402810:	push   es
  402811:	stc    
  402812:	cmp    bl,ch
  402814:	ficom  WORD PTR [eax]
  402816:	shl    DWORD PTR [ecx],0x5c
  402819:	jecxz  0x4027e1
  40281b:	dec    esp
  40281c:	add    dh,0xed
  40281f:	add    esi,esi
  402821:	pop    ebp
  402823:	xchg   DWORD PTR [edi],ecx
  402825:	out    0xae,al
  402827:	jno    0x40287c
  402829:	icebp  
  40282a:	jecxz  0x402819
  40282c:	xor    al,0xe3
  40282e:	rol    BYTE PTR [eax+0x0],cl
	...
  402855:	add    BYTE PTR [eax],al
  402857:	add    BYTE PTR [edi],bh
  402859:	nop
  40285a:	sub    al,0xe8
  40285c:	enter  0xdd4c,0xfb
  402860:	mov    dl,0x9
  402862:	xchg   BYTE PTR [ecx+0x47],dh
  402865:	loop   0x40285b
  402867:	sti    
  402868:	and    al,0xf6
  40286a:	jo     0x402857
  40286c:	add    al,0xe3
  40286e:	hlt    
  40286f:	out    0xfc,eax
  402871:	pop    esp
  402872:	icebp  
  402873:	fist   DWORD PTR [eax]
  402875:	in     al,0x5e
  402877:	jmp    0x402865
  402879:	pop    esp
  40287a:	loope  0x402857
  40287c:	aas    
  40287d:	in     eax,0x4e
  40287f:	jmp    0x402851
  402881:	dec    esp
  402882:	inc    ebp
  402883:	mov    ebp,0x50e91209
  402888:	shl    ch,0x0
  40288b:	push   0xffffff8b
  40288d:	ffree  st(7)
  40288f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402890:	lods   al,BYTE PTR ds:[esi]
  402891:	or     DWORD PTR [eax],eax
  402893:	jmp    0x1d85bce0
  402898:	pop    ss
  402899:	loop   0x402910
  40289b:	loope  0x40281d
  40289d:	cmp    eax,0x8c48e9d4
  4028a2:	rol    BYTE PTR [ecx-0xe8a1dcd],0x70
  4028a9:	in     eax,dx
  4028aa:	stc    
  4028ab:	div    BYTE PTR [ecx-0x70]
  4028ae:	inc    ebp
  4028af:	icebp  
  4028b0:	jno    0x40290e
  4028b2:	cld    
  4028b3:	rol    DWORD PTR [ebx-0x4a],1
  4028b6:	add    cl,ch
  4028b8:	ins    DWORD PTR es:[edi],dx
  4028b9:	mov    ds:0xff74,al
	...
  4028e2:	add    BYTE PTR [eax],al
  4028e4:	jno    0x402942
  4028e6:	clc    
  4028e7:	cmp    ebp,edi
  4028e9:	or     al,ch
  4028eb:	cmp    BYTE PTR [edx+0x9],cl
  4028ee:	add    BYTE PTR [eax+0xb],dh
  4028f1:	(bad)  
  4028f3:	cmp    al,0x33
  4028f5:	icebp  
  4028f6:	or     DWORD PTR [edx+0x1cff0948],ebx
  4028fc:	aaa    
  4028fd:	jmp    0x2c8b:0xe221a2bb
  402904:	sbb    edx,DWORD PTR [edx]
  402906:	enter  0xf896,0x38
  40290a:	(bad)  
  40290b:	cld    
  40290c:	adc    dl,ch
  40290e:	push   0x7f
  402910:	and    edx,esp
  402912:	leave  
  402913:	stos   DWORD PTR es:[edi],eax
  402914:	add    al,0xe2
  402916:	push   esp
  402917:	bound  edx,QWORD PTR [esi+eax*4]
  40291a:	les    ebx,FWORD PTR [ecx+0x9]
  40291d:	dec    esp
  40291e:	hlt    
  40291f:	jmp    0x6440326c
  402924:	mov    esp,ebp
  402926:	push   eax
  402927:	dec    esi
  402928:	pop    ebx
  402929:	adc    eax,ebp
  40292b:	add    BYTE PTR [ebx+edi*4+0x0],bh
  40292f:	add    BYTE PTR [edi-0x3a],ah
  402932:	js     0x402981
  402934:	jge    0x40298f
  402936:	or     al,ch
  402938:	in     al,dx
  402939:	hlt    
  40293a:	(bad)  
  40293b:	(bad)  
  40293c:	cmp    ecx,DWORD PTR [ecx-0x8]
  40293f:	or     edi,0xffffffed
  402942:	add    al,0x72
  402944:	mov    cs,WORD PTR [edx+0xf86d]
	...
  40296e:	add    BYTE PTR [eax],al
  402970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402971:	out    dx,al
  402972:	jne    0x402970
  402974:	cmp    al,BYTE PTR [ecx-0x1d5dff2e]
  40297a:	mov    edi,0x75eec074
  40297f:	clc    
  402980:	loop   0x4029c5
  402982:	add    al,ch
  402984:	arpl   dx,sp
  402986:	(bad)  
  402987:	call   FWORD PTR [ebp-0x63]
  40298a:	not    eax
  40298c:	jmp    0x4029af
  40298e:	hlt    
  40298f:	push   edi
  402991:	lock call 0x4cda2c
  402997:	jmp    0x402a0d
  402999:	lock jne 0x4029a4
  40299c:	or     ah,BYTE PTR [ecx]
  40299e:	sti    
  40299f:	(bad)  
  4029a0:	in     eax,dx
  4029a1:	(bad)  
  4029a2:	mov    edi,0x9e0c9
  4029a7:	jmp    0x4029cd
  4029a9:	(bad)  
  4029aa:	mov    edi,0x9f0c9
  4029af:	push   0x30
  4029b1:	aas    
  4029b2:	cld    
  4029b3:	call   DWORD PTR [edi]
  4029b5:	in     eax,0xe7
  4029b7:	lock retf 0xfff2
  4029bb:	(bad)  
  4029bc:	aaa    
  4029bd:	aad    0x1
  4029bf:	add    dl,dh
  4029c1:	or     al,0x8d
  4029c3:	inc    ebp
  4029c4:	xchg   edx,eax
  4029c5:	xor    eax,0xc4fa75ff
  4029ca:	sar    bl,cl
  4029cc:	dec    ebx
  4029cd:	aaa    
  4029ce:	jmp    0x4828856
  4029d3:	je     0x4029d5
	...
  4029f9:	add    BYTE PTR [eax],al
  4029fb:	add    BYTE PTR [ecx],bh
  4029fd:	xlat   BYTE PTR ds:[ebx]
  4029fe:	mov    ebx,0x6f16863b
  402a03:	pop    es
  402a04:	add    esi,edx
  402a06:	add    eax,DWORD PTR [eax]
  402a08:	dec    ebx
  402a09:	dec    ebx
  402a0a:	add    ch,BYTE PTR [ebx]
  402a0c:	mov    edi,ebx
  402a0e:	add    eax,0xc6198b2b
  402a13:	add    al,0x4b
  402a15:	popf   
  402a16:	jl     0x402a04
  402a18:	enter  0xec26,0x8d
  402a1c:	push   cs
  402a1d:	push   es
  402a1e:	push   esp
  402a1f:	call   DWORD PTR [esi]
  402a21:	fcmovu st,st(3)
  402a23:	dec    eax
  402a24:	cwde   
  402a25:	repnz add eax,DWORD PTR [ebp-0xe3a575]
  402a2c:	(bad)  
  402a2d:	(bad)  
  402a2f:	fdiv   DWORD PTR [ebx-0x41]
  402a32:	call   0xe8fa38c0
  402a37:	jne    0x402a98
  402a39:	retf   0xd212
  402a3c:	dec    ebx
  402a3d:	repnz cld 
  402a3f:	mov    edi,0x75e8b5d7
  402a44:	push   edi
  402a45:	xchg   edi,eax
  402a46:	outs   dx,BYTE PTR ds:[esi]
  402a47:	clc    
  402a48:	fwait
  402a49:	retf   0xb17
  402a4c:	dec    ebx
  402a4d:	bnd call 0xe8ba59c8
  402a53:	ror    DWORD PTR [ebx-0xe],1
  402a56:	call   0xb2ca7dd0
  402a5b:	cli    
  402a5c:	adc    al,0x87
  402a5e:	mov    edx,0xc2
	...
  402a87:	add    BYTE PTR [ebx-0xe],al
  402a8a:	dec    esi
  402a8b:	mov    esi,edi
  402a8d:	jb     0x402a4e
  402a8f:	call   0x8e0cf62c
  402a94:	mov    cs,WORD PTR [ecx]
  402a96:	gs push ebx
  402a98:	in     al,dx
  402a99:	push   ebp
  402a9a:	icebp  
  402a9b:	fninit 
  402a9d:	mov    edx,0xc8c603e9
  402aa2:	fidivr WORD PTR [ebx-0x64]
  402aa5:	or     cl,ch
  402aa7:	add    ecx,esp
  402aa9:	push   ebp
  402aaa:	icebp  
  402aab:	fcmovne st,st(7)
  402aad:	loopne 0x402ae5
  402aaf:	call   0xe8757086
  402ab4:	fst    QWORD PTR ds:[ecx]
  402ab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ab8:	call   0x6d0f:0xe4fce908
  402abf:	xchg   DWORD PTR [ebx+0x9],ecx
  402ac2:	jmp    0x7193941
  402ac7:	outs   dx,BYTE PTR ds:[esi]
  402ac8:	xchg   edi,eax
  402ac9:	lock sub ebx,edx
  402acc:	dec    ebx
  402acd:	or     DWORD PTR [edx-0x41],ebp
  402ad0:	inc    edi
  402ad1:	push   es
  402ad2:	jmp    0x394945da
  402ad7:	fsub   QWORD PTR [edx-0x2dfc16f8]
  402add:	inc    ebp
  402ade:	(bad)
  402ae1:	aam    0xc1
  402ae3:	xchg   edi,eax
  402ae4:	bound  ecx,QWORD PTR [eax]
  402ae6:	jmp    0xe444b26d
  402aeb:	add    eax,DWORD PTR [eax]
	...
  402b11:	add    BYTE PTR [eax],al
  402b13:	add    BYTE PTR [ebx-0x7],cl
  402b16:	call   0xe9ba5e6e
  402b1b:	add    ecx,DWORD PTR [ebx-0x70]
  402b1e:	sub    al,0xdc
  402b20:	mov    eax,ds:0x37719e09
  402b25:	fistp  WORD PTR [eax+esi*8]
  402b28:	sbb    al,0x55
  402b2a:	and    edi,0x8d91d99e
  402b30:	and    cl,BYTE PTR [edx]
  402b32:	jmp    0x363ab9
  402b37:	pop    edi
  402b38:	mov    ah,cl
  402b3a:	push   esp
  402b3c:	in     al,dx
  402b3d:	icebp  
  402b3e:	cmp    BYTE PTR gs:[edi+0x9],al
  402b42:	call   esp
  402b44:	loopne 0x402b2c
  402b46:	nop
  402b47:	push   ebx
  402b48:	in     al,0xde
  402b4a:	push   0xffffffe1
  402b4c:	jo     0x402b6e
  402b4e:	sub    BYTE PTR [eax-0xe8a21b8],ch
  402b54:	mov    al,ds:0xa436fcbd
  402b59:	adc    bl,al
  402b5b:	cs cmp dl,ch
  402b5e:	call   FWORD PTR [eax+esi*4-0x53e2451a]
  402b65:	fisub  WORD PTR [ebx]
  402b67:	xor    DWORD PTR [esp+edx*2-0xee5f108],esp
  402b6e:	(bad)  
  402b6f:	jl     0x402b01
  402b71:	out    0xe0,al
  402b73:	std    
  402b74:	ins    DWORD PTR es:[edi],dx
  402b75:	fisub  WORD PTR [ebx]
  402b77:	adc    DWORD PTR [eax],eax
	...
  402b9d:	add    BYTE PTR [eax],al
  402b9f:	add    BYTE PTR [esp+edx*2-0x14],ah
  402ba3:	add    DWORD PTR [ecx+ecx*1+0x0],eax
  402ba7:	jmp    0xd2288011
  402bac:	pop    ebp
  402bad:	fdivp  st(7),st
  402baf:	jmp    0xc1488019
  402bb4:	jg     0x402b96
  402bb6:	inc    esi
  402bb8:	ror    ecx,1
  402bba:	pop    ebx
  402bbb:	mov    al,0xa
  402bbd:	add    eax,0xedc01c00
  402bc2:	sub    DWORD PTR [edi+esi*1],0xffffffde
  402bc6:	jae    0x402bb9
  402bc8:	and    eax,0x4b910854
  402bcd:	mov    eax,0xc941e900
  402bd2:	leave  
  402bd3:	stos   DWORD PTR es:[edi],eax
  402bd4:	adc    al,0xde
  402bd6:	push   esp
  402bd7:	add    BYTE PTR [ecx-0x5ba744a],bl
  402bdd:	or     BYTE PTR [eax+0x5009f200],al
  402be3:	push   0x22
  402be5:	mov    ebp,0x9e2d0f2
  402bea:	leave  
  402beb:	ret    0x9ee
  402bee:	push   ebp
  402bef:	mov    eax,DWORD PTR [esi+0x78bfc4f]
  402bf5:	loop   0x402b81
  402bf7:	dec    ebp
  402bf8:	(bad)  
  402bf9:	jmp    0x2b02:0xbd73510e
  402c00:	jb     0x402bdd
  402c02:	stos   DWORD PTR es:[edi],eax
  402c03:	pop    ecx
	...
  402c2c:	and    ebp,esp
  402c2e:	add    esi,ebx
  402c30:	sbb    BYTE PTR [edi-0x37],al
  402c33:	ret    0x99a
  402c36:	push   ebp
  402c37:	mov    eax,DWORD PTR [esi+0x4c]
  402c3a:	push   edi
  402c3b:	mov    eax,edi
  402c3d:	aad    0xfb
  402c3f:	mov    ecx,DWORD PTR [edi]
  402c41:	loop   0x402bcd
  402c43:	dec    ebp
  402c44:	mov    ds:0xef302ea,al
  402c49:	inc    edi
  402c4a:	pop    esi
  402c4b:	leave  
  402c4c:	and    dh,dl
  402c4e:	call   DWORD PTR [ecx+edi*8-0x40]
  402c52:	push   esi
  402c53:	push   edi
  402c54:	fldcw  WORD PTR [ebp+0x8]
  402c57:	cld    
  402c58:	jmp    0xa26b3c72
  402c5d:	pop    edi
  402c5e:	jge    0x402c6c
  402c60:	or     DWORD PTR [edx],0xa039a6f3
  402c66:	jne    0x402c69
  402c68:	jb     0x402cb0
  402c6a:	pop    esi
  402c6b:	leave  
  402c6c:	loopne 0x402c4f
  402c6e:	call   DWORD PTR [ecx+edi*4-0x3f]
  402c72:	add    esp,0xffffffc6
  402c75:	dec    ebx
  402c76:	push   edi
  402c77:	push   ebx
  402c78:	dec    ebx
  402c79:	or     al,BYTE PTR [edx]
  402c7b:	add    DWORD PTR [ebx-0xe],ecx
  402c7e:	in     al,0x75
  402c80:	inc    ebx
  402c81:	jp     0x402c16
  402c83:	inc    DWORD PTR [esp+ebx*2]
  402c86:	jns    0x402d05
  402c88:	push   ebx
  402c89:	sub    edi,DWORD PTR ds:0x41a192b
  402c8f:	add    DWORD PTR [eax],eax
	...
  402cb5:	add    BYTE PTR [eax],al
  402cb7:	add    BYTE PTR [ebx-0xe],cl
  402cba:	jnp    0x402cd0
  402cbc:	and    DWORD PTR [edx+eax*8],edi
  402cbf:	loop   0x402ca3
  402cc1:	addr16 or BYTE PTR [si+0x78a3],cl
  402cc7:	jne    0x402d08
  402cc9:	sub    al,0x3f
  402ccb:	dec    BYTE PTR [ebx-0x9]
  402cce:	mov    edx,0x68a02b
  402cd3:	cmp    eax,ebx
  402cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cd6:	in     al,0x0
  402cd8:	push   es
  402cd9:	and    al,0x7a
  402cdb:	add    al,0x5a
  402cdd:	repnz dec BYTE PTR ds:[esp+edi*1+0x4f]
  402ce3:	inc    cl
  402ce5:	out    0x29,al
  402ce7:	mov    BYTE PTR [edi-0x39],al
  402cea:	jns    0x402d31
  402cec:	test   BYTE PTR [edx+0x0],bl
  402cef:	cmp    cl,BYTE PTR [edx]
  402cf1:	xchg   edi,eax
  402cf2:	ss adc cl,bh
  402cf5:	out    dx,eax
  402cf6:	sbb    cl,cl
  402cf8:	ins    DWORD PTR es:[edi],dx
  402cf9:	scas   eax,DWORD PTR es:[edi]
  402cfa:	outs   dx,BYTE PTR ds:[esi]
  402cfb:	aad    0x0
  402cfd:	sbb    eax,DWORD PTR [esi-0x37]
  402d00:	mov    esi,esp
  402d02:	add    edx,DWORD PTR [ebp-0x40]
  402d05:	sahf   
  402d06:	add    ah,0x53
  402d09:	dec    DWORD PTR [ebp+0x57]
  402d0c:	inc    esp
  402d0d:	adc    eax,0xeed15afc
  402d12:	jnp    0x402d59
  402d14:	ss push 0x8c30140
  402d1a:	sub    al,0xe8
	...
  402d44:	rcr    bh,1
  402d46:	es cmp eax,0xbce555d0
  402d4c:	mov    fs,ecx
  402d4e:	jmp    0x72497856
  402d53:	ss pop ebx
  402d55:	call   0xdec71383
  402d5a:	out    0xad,al
  402d5c:	mov    ds,esi
  402d5e:	fisubr WORD PTR [ebp+0x4e712157]
  402d64:	in     al,0x8
  402d66:	mov    ah,0xe7
  402d68:	dec    esp
  402d69:	xchg   ebx,eax
  402d6a:	lods   al,BYTE PTR ds:[esi]
  402d6b:	out    0xc1,eax
  402d6d:	hlt    
  402d6e:	adc    BYTE PTR [esi+esi*2-0x25],bh
  402d72:	imul   BYTE PTR [ebp+0xf71de0e]
  402d78:	or     DWORD PTR [edi+edi*2],0x3e
  402d7c:	mov    bh,0x8e
  402d7e:	xchg   esp,eax
  402d7f:	in     al,0xc3
  402d81:	hlt    
  402d82:	loopne 0x402dfd
  402d84:	(bad)  
  402d85:	fucomi st,st(3)
  402d87:	dec    esi
  402d88:	popf   
  402d89:	mov    ?,ebp
  402d8b:	sub    eax,eax
  402d8d:	inc    ebp
  402d8e:	adc    DWORD PTR [ebx],esi
  402d90:	aaa    
  402d91:	sbb    DWORD PTR [esi],eax
  402d93:	ds and esi,0x29
  402d97:	jns    0x402d9f
  402d99:	fisub  WORD PTR [ecx+0x0]
  402d9c:	rol    DWORD PTR [ebp-0x13],0x7a
  402da0:	or     BYTE PTR [edx],cl
  402da2:	inc    esi
  402da3:	inc    edx
  402da4:	add    dl,dl
  402da6:	stos   DWORD PTR es:[edi],eax
  402da7:	adc    BYTE PTR [eax],al
	...
  402dcd:	add    BYTE PTR [eax],al
  402dcf:	add    BYTE PTR [ebx+0x36],cl
  402dd2:	(bad)  
  402dd3:	lock retf 0xbdc4
  402dd7:	loop   0x402e25
  402dd9:	fistp  DWORD PTR [edx]
  402ddb:	das    
  402ddc:	and    BYTE PTR [ebp-0x25641fdc],cl
  402de2:	add    BYTE PTR [edi+eax*2],bh
  402de5:	icebp  
  402de6:	mov    ds:0x85094799,eax
  402deb:	test   eax,0xe9969138
  402df0:	dec    eax
  402df1:	or     edi,edi
  402df3:	sbb    al,0x47
  402df5:	icebp  
  402df6:	das    
  402df7:	xchg   edi,eax
  402df8:	sub    bl,bl
  402dfa:	mov    DWORD PTR [ebx+eiz*1],ebp
  402dfd:	(bad)  [ebp+0x7d]
  402e00:	out    dx,eax
  402e01:	jno    0x402dd2
  402e03:	jmp    0xf6003c50
  402e08:	imul   edx,DWORD PTR [eax+0x54e85945],0xdb7151f4
  402e12:	call   DWORD PTR [esi-0x3a]
  402e15:	inc    esp
  402e16:	clc    
  402e17:	dec    esi
  402e18:	jb     0x402def
  402e1a:	(bad)  
  402e1b:	mov    esp,0x3975daa0
  402e20:	scas   eax,DWORD PTR es:[edi]
  402e21:	(bad)  
  402e22:	(bad)  
  402e23:	ss test al,0xda
  402e26:	jne    0x402e55
  402e28:	lahf   
  402e29:	inc    ebx
  402e2a:	iret   
  402e2b:	jmp    0xedb60878
  402e30:	mov    al,0x17
  402e32:	iret   
  402e33:	jmp    0x402e38
	...
  402e5c:	dec    eax
  402e5d:	cmp    edi,edi
  402e5f:	xchg   esp,eax
  402e60:	cmp    al,0x8c
  402e62:	test   DWORD PTR [edi],edx
  402e64:	imul   ebx,edx,0xa47099ff
  402e6a:	(bad)  
  402e6b:	imul   BYTE PTR [ecx-0x26]
  402e6e:	jne    0x402e65
  402e70:	imul   edx,DWORD PTR [eax+edi*8+0x74],0xdefeebd3
  402e78:	imul   edi,DWORD PTR [ecx],0xda6ad7e8
  402e7e:	dec    esi
  402e80:	repz adc al,ch
  402e83:	add    BYTE PTR [ebp-0x43],dh
  402e86:	(bad)  
  402e87:	call   FWORD PTR [eax+0x4a44680d]
  402e8d:	inc    esp
  402e8e:	add    bh,bh
  402e90:	ja     0x402e9f
  402e92:	call   0x27172a
  402e97:	or     ecx,DWORD PTR [edx]
  402e99:	out    0x75,eax
  402e9b:	hlt    
  402e9c:	mov    ebp,0x37fff840
  402ea1:	or     eax,0xe6c883e8
  402ea6:	jmp    DWORD PTR [ebx]
  402ea8:	stos   BYTE PTR es:[edi],al
  402ea9:	out    0x75,al
  402eab:	clc    
  402eac:	retf   0xfd9a
  402eaf:	call   FWORD PTR [ebp-0x19]
  402eb2:	jne    0x402ebc
  402eb4:	jp     0x402e3f
  402eb6:	idiv   edi
  402eb8:	jge    0x402e45
  402eba:	ret    
  402ebb:	pop    ebx
  402ebc:	sub    eax,esp
  402ebe:	or     BYTE PTR [eax],al
	...
  402ee8:	xchg   edi,eax
  402ee9:	mov    ch,ah
  402eeb:	xor    DWORD PTR [esi-0x4e],0x57
  402eef:	mov    esp,edi
  402ef1:	ror    DWORD PTR [edx],1
  402ef3:	shl    dh,0xf
  402ef6:	mov    DWORD PTR [eax],0x5a2
  402efc:	jns    0x402ee4
  402efe:	cmp    DWORD PTR [ebp+0x4a],0x4
  402f02:	jne    0x402f0b
  402f04:	clc    
  402f05:	add    eax,0xeaa20002
  402f0a:	jae    0x75420cdf
  402f10:	gs jnp 0x402f13
  402f13:	add    DWORD PTR [edx+0x5],esp
  402f16:	jmp    0x402f1a
  402f18:	mov    DWORD PTR [ebx+0x54bca81],edx
  402f1e:	add    al,BYTE PTR [eax]
  402f20:	out    dx,eax
  402f21:	inc    ecx
  402f22:	cld    
  402f23:	push   eax
  402f24:	dec    ebx
  402f25:	push   ds
  402f26:	outs   dx,BYTE PTR ds:[esi]
  402f27:	add    BYTE PTR [esp+esi*1+0x10],cl
  402f2b:	(bad)  
  402f2c:	mov    esi,0xcd0ebda
  402f31:	jecxz  0x402f36
  402f33:	or     ecx,DWORD PTR [ebx]
  402f35:	push   ss
  402f36:	jno    0x402ec5
  402f38:	xchg   BYTE PTR [edx+0x5d4b6a34],bl
  402f3e:	inc    edi
  402f3f:	hlt    
  402f40:	jnp    0x402f3e
  402f42:	add    edi,edi
  402f44:	sahf   
  402f45:	shl    al,cl
  402f47:	jne    0x402f58
  402f49:	mov    ebx,DWORD PTR [ebp+0xcf]
	...
  402f73:	add    BYTE PTR [ebx-0x1e],cl
  402f76:	or     al,0xc0
  402f78:	jbe    0x402fa0
  402f7a:	test   DWORD PTR [ebp-0xd],edi
  402f7d:	loop   0x402fd6
  402f7f:	inc    esi
  402f80:	enter  0xd7e5,0x1
  402f84:	pop    esi
  402f85:	call   0xe223ad0e
  402f8a:	push   edi
  402f8b:	cmp    al,al
  402f8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f8e:	fild   DWORD PTR [eax+0x7b]
  402f91:	dec    edx
  402f92:	inc    edx
  402f93:	std    
  402f94:	les    ecx,FWORD PTR [edi-0x73]
  402f97:	clc    
  402f98:	into   
  402f99:	lods   eax,DWORD PTR ds:[esi]
  402f9a:	fist   DWORD PTR [eax+0x1c]
  402f9d:	int3   
  402f9e:	add    ebp,DWORD PTR [edx+0x4b]
  402fa1:	daa    
  402fa2:	push   edi
  402fa3:	adc    BYTE PTR [ebp+esi*2+0x27c6e8df],ah
  402faa:	add    al,0x0
  402fac:	inc    eax
  402fad:	and    bl,BYTE PTR [eax+0xa]
  402fb0:	hlt    
  402fb1:	or     DWORD PTR [ecx],ebp
  402fb3:	std    
  402fb4:	test   BYTE PTR [edi],cl
  402fb6:	sub    eax,0x8ce670ff
  402fbb:	inc    ebp
  402fbc:	pop    edi
  402fbd:	jmp    0x402f82
  402fbf:	je     0x403007
  402fc1:	out    0x56,eax
  402fc3:	clc    
  402fc4:	aam    0x9
  402fc6:	jmp    0xd21506ab
  402fcb:	push   0xffffff84
  402fcd:	or     ecx,ebp
  402fcf:	mov    WORD PTR [esp+eax*1-0x7398a957],es
  402fd6:	inc    esp
  402fd7:	cld    
	...
  403000:	dec    edx
  403001:	pop    esp
  403002:	xlat   BYTE PTR ds:[ebx]
  403003:	mov    WORD PTR [esi+0x2c3428f1],cs
  403009:	pop    esi
  40300a:	aad    0xe0
  40300c:	sahf   
  40300d:	stc    
  40300e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40300f:	push   esi
  403010:	dec    edi
  403011:	fcom   DWORD PTR [esp+ecx*1]
  403014:	and    ebp,DWORD PTR [edx]
  403016:	xchg   esi,eax
  403017:	loopne 0x403025
  403019:	cmp    BYTE PTR [eax+0x1c095fc5],ah
  40301f:	(bad)  
  403020:	out    dx,eax
  403021:	mov    esp,edi
  403023:	or     ecx,DWORD PTR [edx+0x9]
  403026:	jmp    0x6e42a6ae
  40302b:	push   ss
  40302c:	lea    esp,[edx]
  40302e:	test   al,0x3
  403030:	int3   
  403031:	dec    ebp
  403032:	icebp  
  403033:	ins    DWORD PTR es:[edi],dx
  403034:	dec    ebx
  403035:	fcomp  st(4)
  403037:	test   ebp,0x3ee0f95d
  40303d:	add    eax,0xe1535646
  403042:	xor    eax,0x20d7b4e1
  403047:	lds    ebx,FWORD PTR [ebx+0x9]
  40304a:	add    al,ah
  40304c:	sar    BYTE PTR [eax+0x1e2e538],1
  403052:	jmp    0x3fa7b5a
  403057:	push   esp
  403058:	aas    
  403059:	mov    bl,BYTE PTR [ebx]
  40305b:	adc    bl,cl
  40305d:	mov    eax,ds:0xf9798205
  403062:	xlat   BYTE PTR ds:[ebx]
  403063:	repnz add BYTE PTR [eax],al
	...
  40308a:	add    BYTE PTR [eax],al
  40308c:	pop    ebx
  40308d:	jmp    0x40308f
  40308f:	pop    es
  403090:	sar    esp,0x84
  403093:	test   eax,0xe70049e9
  403098:	xchg   DWORD PTR [ebp-0x26],ebx
  40309b:	stos   BYTE PTR es:[edi],al
  40309c:	adc    al,BYTE PTR [esp+ebp*8+0x84dc03e]
  4030a3:	(bad)  
  4030a4:	inc    DWORD PTR [edx+0x44d1f57d]
  4030aa:	adc    dl,dh
  4030ac:	pop    es
  4030ad:	pop    esi
  4030ae:	sbb    BYTE PTR [edx-0x9],ah
  4030b1:	enter  0xe1ea,0x3a
  4030b5:	push   cs
  4030b6:	and    eax,0x947a6
  4030bb:	jb     0x403100
  4030bd:	mov    WORD PTR [eax+0x8],es
  4030c0:	xchg   BYTE PTR [ecx],cl
  4030c2:	xor    ebp,DWORD PTR [ebx+0x7ee8eb8c]
  4030c8:	mov    bh,0x36
  4030ca:	leave  
  4030cb:	stos   DWORD PTR es:[edi],eax
  4030cc:	pop    ebx
  4030cd:	or     DWORD PTR [ebp+0x62],edx
  4030d0:	sti    
  4030d1:	cmp    al,BYTE PTR [ebx+0x750950ec]
  4030d7:	out    dx,al
  4030d8:	add    eax,0x27a0084d
  4030dd:	dec    eax
  4030de:	add    BYTE PTR [edx+0x6a],ch
  4030e1:	add    eax,0xce4dd400
  4030e6:	inc    ebp
  4030e7:	cmc    
  4030e8:	fbld   TBYTE PTR [ecx]
  4030ea:	inc    ecx
  4030eb:	jmp    0x41488d85
	...
  403118:	dec    esp
  403119:	les    eax,FWORD PTR [eax]
  40311b:	jmp    0x9d3fe2f1
  403120:	dec    esp
  403121:	loope  0x403158
  403123:	sub    al,0x4f
  403125:	or     DWORD PTR [ebx],eax
  403127:	xor    DWORD PTR [eax],ecx
  403129:	cmp    ch,al
  40312b:	into   
  40312c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40312d:	(bad)  
  40312e:	inc    DWORD PTR [eax]
  403130:	stc    
  403131:	xchg   esp,eax
  403132:	push   DWORD PTR [ebp+0x7a]
  403135:	sbb    ebp,eax
  403137:	aas    
  403138:	daa    
  403139:	or     eax,0x5dfff00
  40313e:	push   ebx
  40313f:	call   0x40e96a
  403144:	fxch   st(2)
  403146:	pop    ebx
  403147:	leave  
  403148:	mov    al,ds:0xa9550002
  40314d:	out    0x53,al
  40314f:	add    DWORD PTR [edi+0x2d750005],0xffffffcf
  403156:	inc    ebp
  403157:	or     BYTE PTR [ebx-0x4effbede],bh
  40315d:	imul   ecx,DWORD PTR [eax+eax*1],0x45c70e3f
  403164:	es jne 0x40318f
  403167:	inc    ecx
  403168:	and    dh,BYTE PTR [edi-0x1d35f78b]
  40316e:	int3   
  40316f:	add    dl,dh
  403171:	sbb    al,0xff
  403174:	inc    DWORD PTR ds:0x9a6e1e8
  40317a:	add    BYTE PTR [ebx],al
	...
  4031a4:	mov    edx,0x79e8534a
  4031a9:	mov    bl,0xff
  4031ab:	call   FWORD PTR [ecx-0x6e]
  4031ae:	push   DWORD PTR [ebp-0x16]
  4031b1:	sbb    ch,al
  4031b3:	jmp    0x40321b
  4031b5:	or     al,BYTE PTR [eax]
  4031b7:	(bad)  
  4031b8:	inc    DWORD PTR ds:0xc61ae853
  4031be:	add    BYTE PTR [eax],al
  4031c0:	jne    0x4031f3
  4031c2:	or     al,ch
  4031c4:	sbb    dh,BYTE PTR [ebx-0x34e60001]
  4031ca:	pop    ebx
  4031cb:	leave  
  4031cc:	pusha  
  4031cd:	add    al,BYTE PTR [eax]
  4031cf:	push   ebp
  4031d0:	dec    ebx
  4031d1:	imul   ebp,edi,0xffffff83
  4031d4:	pop    DWORD PTR [ebx]
  4031d6:	ss push 0x3e146
  4031dc:	arpl   WORD PTR [esi],bx
  4031de:	(bad)  
  4031e0:	ins    BYTE PTR es:[edi],dx
  4031e1:	push   0xa4c8fc48
  4031e6:	imul   ebp,DWORD PTR [ecx],0xa
  4031e9:	loopne 0x4031ee
  4031eb:	jne    0x403236
  4031ed:	mov    ebx,0xbbd6fef6
  4031f2:	push   0x0
  4031f4:	mov    cl,0xe2
  4031f6:	fdiv   QWORD PTR [ebp+0x53]
  4031f9:	cmp    BYTE PTR [edi+edi*8],al
  4031fc:	pop    esi
  4031fd:	cmp    ch,BYTE PTR [ebx]
  4031ff:	inc    ecx
  403200:	dec    ebx
  403201:	les    edi,FWORD PTR gs:[ecx-0x6d]
  403205:	mov    ds:0xfc57,eax
	...
  40322e:	add    BYTE PTR [eax],al
  403230:	xor    esi,edi
  403232:	fdivr  st,st(7)
  403234:	adc    al,0xac
  403236:	inc    edi
  403237:	cld    
  403238:	dec    ebx
  403239:	loop   0x40323e
  40323b:	add    ah,al
  40323d:	(bad)  
  40323e:	sub    al,BYTE PTR [ecx+0x4b]
  403241:	ja     0x403272
  403243:	mov    ebx,DWORD PTR [edi+edx*2+0x47]
  403247:	or     BYTE PTR [esi],ah
  403249:	pop    ebx
  40324a:	pop    ebp
  40324b:	jmp    esp
  40324d:	cdq    
  40324e:	inc    ecx
  40324f:	add    al,0x56
  403251:	pop    es
  403252:	push   0x0
  403254:	(bad)  
  403255:	mov    al,ds:0x7a63500b
  40325a:	sub    al,BYTE PTR [ecx+0x4b]
  40325d:	inc    ebx
  40325e:	adc    ch,al
  403260:	push   ds
  403261:	dec    esp
  403262:	(bad)  
  403264:	inc    eax
  403265:	and    bl,BYTE PTR [eax+0x5]
  403268:	ret    0xdfa5
  40326b:	jmp    0x4032c0
  40326d:	pop    edi
  40326e:	lds    eax,FWORD PTR [eax+ecx*8]
  403271:	or     esi,esp
  403273:	add    ebx,DWORD PTR [esi]
  403275:	ret    
  403276:	jb     0x4032bf
  403278:	(bad)  
  403279:	xor    al,0x20
  40327b:	ret    0x94f
  40327e:	mov    ah,0x88
  403280:	outs   dx,DWORD PTR ds:[esi]
  403281:	cmp    BYTE PTR [edx+0x47],dh
  403284:	inc    ebx
  403285:	add    BYTE PTR [ecx],ch
  403287:	pop    eax
  403288:	inc    esi
  403289:	mov    DWORD PTR [ecx+0x30fede03],esi
  40328f:	add    al,0x4b
  403291:	or     ecx,ebp
  403293:	cmp    BYTE PTR [eax],al
	...
  4032b9:	add    BYTE PTR [eax],al
  4032bb:	add    BYTE PTR [edx-0x1efc1a39],al
  4032c1:	or     BYTE PTR [ebx+0x4],al
  4032c4:	mov    cl,0x8
  4032c6:	inc    ebx
  4032c7:	add    al,0xb1
  4032c9:	or     DWORD PTR [ecx-0x7c],edx
  4032cc:	dec    ebx
  4032cd:	or     ecx,ebp
  4032cf:	fdiv   QWORD PTR [esi+0x10e4c101]
  4032d5:	or     ecx,ebp
  4032d7:	mov    BYTE PTR [ebx],al
  4032d9:	and    BYTE PTR [ecx+0x3a009f40],ch
  4032df:	in     al,dx
  4032e0:	and    eax,0xc303e9c0
  4032e5:	or     ecx,ebp
  4032e7:	add    ecx,DWORD PTR [ebx+0x30]
  4032ea:	mov    al,0xc1
  4032ec:	dec    edi
  4032ed:	or     DWORD PTR [ecx+ecx*4],edx
  4032f0:	fistp  QWORD PTR [edi+0x2c]
  4032f3:	or     al,0x50
  4032f5:	leave  
  4032f6:	cmc    
  4032f7:	push   es
  4032f8:	retf   
  4032f9:	adc    cl,ch
  4032fb:	push   esi
  4032fc:	inc    edx
  4032fd:	xchg   ecx,eax
  4032fe:	jmp    0x20497e06
  403303:	ror    DWORD PTR [edi+0x9],0x4e
  403307:	push   esi
  403308:	push   ebx
  403309:	loope  0x403346
  40330b:	enter  0x94b,0x6a
  40330f:	fld    TBYTE PTR [esp+ebx*2-0x70e1c00]
  403316:	(bad)  
  403317:	call   0x29d53764
  40331c:	inc    edi
  40331d:	fwait
  40331e:	rcl    BYTE PTR [edx],0x0
	...
  403345:	add    BYTE PTR [eax],al
  403347:	add    BYTE PTR [ebp-0x6f],al
  40334a:	add    cl,ch
  40334c:	dec    eax
  40334d:	or     ecx,ecx
  40334f:	sub    eax,DWORD PTR [ecx+ecx*1+0x55]
  403353:	jb     0x4033b9
  403355:	xchg   esp,eax
  403357:	std    
  403358:	jecxz  0x403362
  40335a:	push   0xffffffe9
  40335c:	xchg   DWORD PTR [ebp+0x8],ebx
  40335f:	add    DWORD PTR [ebx+0x45e900bf],edx
  403365:	leave  
  403366:	je     0x40337b
  403368:	pop    ss
  403369:	cmp    eax,ebp
  40336b:	mov    ah,BYTE PTR ds:0x8a60ffd3
  403371:	aad    0x58
  403373:	sbb    DWORD PTR [eax],edx
  403375:	pop    ebp
  403376:	cld    
  403377:	mov    esi,0x79e8019a
  40337c:	adc    al,0xa
  40337e:	add    dl,ah
  403380:	or     BYTE PTR [ebp+0xc],bl
  403383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403384:	jp     0x40335b
  403386:	call   0x1320a4
  40338b:	ret    0xdf08
  40338e:	add    esp,DWORD PTR [edx-0x76]
  403391:	aad    0xc9
  403393:	stos   DWORD PTR es:[edi],eax
  403394:	dec    ebx
  403395:	or     DWORD PTR [ebp+0x72],edx
  403398:	jecxz  0x4033d0
  40339a:	mov    edx,DWORD PTR [ebx+edx*2]
  40339d:	pop    edi
  40339e:	adc    BYTE PTR [edx],bl
  4033a0:	out    dx,eax
  4033a1:	(bad)  
  4033a2:	cli    
  4033a3:	lock pop di
  4033a6:	add    bl,dl
  4033a8:	dec    eax
  4033a9:	pop    edi
  4033aa:	add    eax,ebx
	...
  4033d4:	dec    eax
  4033d5:	pop    edi
  4033d6:	add    eax,ecx
  4033d8:	dec    eax
  4033d9:	or     DWORD PTR [eax],eax
  4033db:	add    BYTE PTR [edx],ah
  4033dd:	scas   al,BYTE PTR es:[edi]
  4033de:	jne    0x4033e8
  4033e0:	sbb    ah,BYTE PTR [edx]
  4033e2:	retf   
  4033e3:	add    BYTE PTR [edx-0x29bffc7b],dh
  4033e9:	sbb    ch,BYTE PTR [edx+0x0]
  4033ec:	rcr    dh,cl
  4033ee:	ins    BYTE PTR es:[edi],dx
  4033ef:	retf   
  4033f0:	mov    ds:0x6e438906,al
  4033f5:	add    BYTE PTR fs:[edx+0x72],ch
  4033f9:	add    BYTE PTR fs:[edx+0x60],ch
  4033fd:	fs add bh,bh
  403400:	mov    cl,0xde
  403402:	pop    esi
  403403:	retf   
  403404:	jb     0x40340c
  403406:	or     eax,eax
  403408:	(bad)  
  403409:	push   ds
  40340a:	mov    DWORD PTR [ebx+0x66],eax
  40340d:	add    BYTE PTR fs:[edx+0x62],ch
  403411:	add    BYTE PTR fs:[edx+0x36],ch
  403415:	push   ss
  403416:	call   0x461d6a
  40341b:	mov    DWORD PTR [ecx+0x5],esp
  40341e:	or     eax,eax
  403420:	ja     0x40344b
  403422:	push   DWORD PTR [ebx+0x36]
  403425:	fdivrp st(2),st
  403427:	retf   0x632
  40342a:	push   DWORD PTR [ebx]
  40342c:	mov    edx,0x2200cae2
  403431:	mov    DWORD PTR [ebx],0xffaeddff
  403437:	jmp    0x403439
	...
  40345d:	add    BYTE PTR [eax],al
  40345f:	add    BYTE PTR [edi],bl
  403461:	scas   eax,DWORD PTR es:[edi]
  403462:	xor    ebp,eax
  403464:	scas   al,BYTE PTR es:[edi]
  403465:	ret    
  403466:	add    BYTE PTR [eax],al
  403468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403469:	or     bh,bh
  40346b:	call   FWORD PTR [ebp-0x51]
  40346e:	sub    eax,eax
  403470:	fwait
  403471:	dec    edx
  403472:	or     BYTE PTR [edi],cl
  403474:	push   edi
  403475:	(bad)  
  403476:	pop    ebx
  403477:	leave  
  403478:	and    dh,bh
  40347a:	call   DWORD PTR [ebx+ecx*2+0x67]
  40347e:	out    0x53,eax
  403480:	shl    BYTE PTR [ebx+ecx*1+0x4f4b7083],1
  403487:	pop    ss
  403488:	lods   al,BYTE PTR ds:[esi]
  403489:	mov    cs,WORD PTR [ebx]
  40348b:	call   0x435be2
  403490:	pushf  
  403491:	mov    ?,edi
  403493:	out    0xe6,eax
  403495:	adc    eax,0xae8c0003
  40349a:	jmp    0x403442
  40349c:	xchg   ecx,eax
  40349d:	fild   WORD PTR [ebx]
  40349f:	pop    ebx
  4034a0:	xchg   edx,eax
  4034a1:	sbb    eax,0x571fffff
  4034a6:	out    0x81,eax
  4034a8:	xchg   edi,edi
  4034aa:	jmp    0x32b199ae
  4034af:	sbb    DWORD PTR [esi],0xffffff83
  4034b2:	sub    eax,DWORD PTR [ecx+0x4b]
  4034b5:	loopne 0x403506
  4034b7:	adc    eax,0x2838fc4c
  4034bc:	mov    ah,dl
  4034be:	jmp    0x40344a
  4034c0:	inc    edx
  4034c1:	rcr    cl,0xc7
	...
  4034ec:	dec    esi
  4034ed:	daa    
  4034ee:	sub    al,0x41
  4034f0:	dec    ebx
  4034f1:	loop   0x4034f6
  4034f3:	add    BYTE PTR [ebx+0x63],cl
  4034f6:	pop    ss
  4034f7:	arpl   WORD PTR [ebx+0x21],si
  4034fa:	add    al,0x0
  4034fc:	lahf   
  4034fd:	int    0xd8
  4034ff:	xor    eax,0x42baa8
  403504:	repz push es
  403506:	(bad)  
  403508:	cld    
  403509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40350a:	jmp    DWORD PTR [edx+0x23]
  40350d:	and    DWORD PTR [eax+eax*1],eax
  403510:	dec    ebx
  403511:	loop   0x403516
  403513:	(bad)  
  403514:	into   
  403515:	push   edx
  403516:	jmp    0xec33121a
  40351b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40351c:	fisttp DWORD PTR [ecx]
  40351e:	data16 fnstcw WORD PTR [esi-0x3b16b27a]
  403525:	sar    BYTE PTR [ecx+0x4ed9e1eb],1
  40352b:	fld    st(6)
  40352d:	inc    esi
  40352e:	inc    ebp
  40352f:	xor    al,0x23
  403531:	push   0x614b4311
  403536:	jmp    0x40353b
  403538:	dec    ebx
  403539:	mov    DWORD PTR [ecx+0x71],eax
  40353c:	or     BYTE PTR [ecx],0xe9
  40353f:	or     al,0x8b
  403541:	add    BYTE PTR [ebp+edi*1+0x4a],ah
  403545:	or     ecx,ebp
  403547:	rol    dh,0xd5
  40354a:	(bad)  
  40354b:	fdiv   DWORD PTR [ecx+ecx*1-0x17]
  40354f:	add    eax,DWORD PTR [eax]
	...
  403575:	add    BYTE PTR [eax],al
  403577:	add    BYTE PTR [ebx-0x38],cl
  40357a:	fdiv   QWORD PTR fs:[eax+edx*8-0xa]
  40357f:	fmul   DWORD PTR [ecx+ecx*1-0x17]
  403583:	ins    DWORD PTR es:[edi],dx
  403584:	dec    ebx
  403585:	arpl   cx,bp
  403587:	ins    DWORD PTR es:[edi],dx
  403588:	dec    ebx
  403589:	arpl   cx,bp
  40358b:	xchg   dh,cl
  40358d:	rol    dh,1
  40358f:	fdivr  DWORD PTR [ecx+edi*1]
  403592:	pop    esp
  403593:	jle    0x4035cc
  403595:	loopne 0x40355d
  403597:	fcomp  DWORD PTR [ebx+0x34cf74d0]
  40359d:	shl    BYTE PTR [esi-0x3e326928],1
  4035a3:	add    BYTE PTR ss:[ecx],cl
  4035a6:	jmp    0x644040b7
  4035ab:	hlt    
  4035ac:	dec    ebx
  4035ad:	or     ecx,ebp
  4035af:	imul   esi,DWORD PTR [eax+eiz*1+0x68630428],0xffffffd1
  4035b7:	inc    edx
  4035b8:	dec    ebx
  4035b9:	loope  0x4035b9
  4035bb:	xlat   BYTE PTR ds:[ebx]
  4035bc:	in     al,0xcf
  4035be:	add    dl,ah
  4035c0:	or     BYTE PTR [eax],al
  4035c2:	test   BYTE PTR [eax+0x48],bh
  4035c5:	or     DWORD PTR [eax],eax
  4035c7:	jb     0x403561
  4035c9:	jge    0x403550
  4035cb:	pop    ebp
  4035cc:	mov    bl,0xcf
  4035ce:	(bad)  
  4035cf:	mov    ecx,0x4dbce176
  4035d4:	xchg   ebx,eax
  4035d5:	iret   
  4035d6:	or     ebp,DWORD PTR [ecx]
  4035d8:	inc    ebx
  4035d9:	test   edx,ebx
  4035db:	jmp    0x4035e0
	...
  403604:	dec    eax
  403605:	or     DWORD PTR [ecx-0x205794],ecx
  40360b:	cs int 0x85
  40360e:	call   0x510fa929
  403613:	xchg   ecx,eax
  403614:	pop    es
  403615:	and    DWORD PTR [ecx-0x17],eax
  403618:	mov    ds:0x9cfee095,eax
  40361d:	iret   
  40361e:	push   0x800948eb
  403623:	adc    DWORD PTR [ebx+0x50f6ffd3],edi
  403629:	leave  
  40362a:	pcmpgtw mm6,QWORD PTR [ebp-0x3616fff8]
  403631:	rol    BYTE PTR [ecx],1
  403633:	out    dx,al
  403634:	(bad)  
  403635:	ins    DWORD PTR es:[edi],dx
  403636:	add    cl,ch
  403638:	dec    eax
  403639:	cmp    edi,edi
  40363b:	xchg   esp,eax
  40363c:	daa    
  40363d:	(bad)  
  40363f:	(bad)  
  403640:	ja     0x403610
  403642:	mov    ch,0xb9
  403644:	sub    al,0xcf
  403646:	inc    ecx
  403648:	push   ds
  403649:	(bad)  
  40364a:	jmp    FWORD PTR [esi-0x69177b3e]
  403650:	hlt    
  403651:	into   
  403652:	push   eax
  403653:	adc    DWORD PTR [eax+0x15e94121],esi
  403659:	xchg   ebp,eax
  40365a:	loopne 0x4036da
  40365c:	sbb    al,0xcf
  40365e:	push   0xae000
  403663:	cmp    BYTE PTR [edx+0xfffb3e],0x0
	...
  40368e:	add    BYTE PTR [eax],al
  403690:	push   ebp
  403691:	add    al,al
  403693:	je     0x4036c3
  403695:	mov    bh,BYTE PTR [ebp-0x498a18]
  40369b:	add    DWORD PTR [ebx+esi*8-0x77d8afb1],ebx
  4036a2:	cld    
  4036a3:	out    dx,eax
  4036a4:	add    eax,0xfae850b6
  4036a9:	mov    ebp,0x81c20000
  4036ae:	test   esp,edi
  4036b0:	add    eax,0x6550ffb6
  4036b5:	js     0x4036a3
  4036b7:	out    dx,eax
  4036b8:	gs mov dh,0xe8
  4036bb:	iret   
  4036bc:	pop    esi
  4036bd:	mov    dh,0xff
  4036bf:	pop    eax
  4036c0:	push   ebp
  4036c1:	js     0x4036ab
  4036c3:	out    dx,eax
  4036c4:	inc    ebp
  4036c5:	mov    dh,0x50
  4036c7:	jmp    FWORD PTR [edi]
  4036c9:	loope  0x4036ba
  4036cb:	jmp    DWORD PTR [ebp-0x1e]
  4036ce:	mov    esp,0xe8b755f4
  4036d3:	sbb    DWORD PTR [edx-0x49],ebx
  4036d6:	(bad)  
  4036d7:	jmp    0x40371b
  4036d9:	add    BYTE PTR [ebp-0x48ea04],0x50
  4036e0:	or     al,BYTE PTR [edi]
  4036e2:	leave  
  4036e3:	add    BYTE PTR [edx],ah
  4036e5:	dec    edx
  4036e6:	push   eax
  4036e7:	lea    ebx,[edi-0x1a00104a]
  4036ed:	sbb    edi,edi
  4036ef:	mov    ch,0x6
  4036f1:	out    0xff,eax
  4036f3:	inc    DWORD PTR [eax]
	...
  403719:	add    BYTE PTR [eax],al
  40371b:	add    BYTE PTR [edx],cl
  40371d:	pop    ecx
  40371e:	hlt    
  40371f:	jmp    ebp
  403721:	loope  0x403715
  403723:	mul    ebp
  403725:	mov    dh,0xff
  403727:	mov    ch,0x4b
  403729:	and    dh,0xff
  40372c:	hlt    
  40372d:	xchg   esi,ebx
  40372f:	imul   esp
  403731:	xchg   dh,dl
  403733:	test   edi,ebx
  403735:	jle    0x40370d
  403737:	push   edx
  403739:	push   cs
  40373a:	aad    0xff
  40373c:	aam    0x5e
  40373e:	push   eax
  40373f:	cld    
  403740:	jecxz  0x403737
  403742:	leave  
  403743:	add    BYTE PTR [ebx-0x46],cl
  403746:	add    edi,edi
  403748:	imul   BYTE PTR [edi]
  40374a:	out    0xff,al
  40374c:	mov    ah,0x47
  40374e:	xor    esi,esp
  403750:	lods   al,BYTE PTR ds:[esi]
  403751:	inc    esi
  403752:	imul   eax,DWORD PTR [eax],0xefe754a4
  403758:	pushf  
  403759:	push   ss
  40375a:	jmp    0x40379f
  40375c:	lahf   
  40375d:	push   ds
  40375e:	(bad)  
  40375f:	(bad)  
  403760:	(bad)  
  403761:	sti    
  403762:	in     eax,0xff
  403764:	test   BYTE PTR [edi+0x67bb5d6],cl
  40376a:	(bad)  
  40376b:	jmp    DWORD PTR [ebx+0x11]
  40376e:	int3   
  40376f:	add    BYTE PTR [ebx+0x5d],cl
  403772:	ret    
  403773:	js     0x403785
  403775:	iret   
  403776:	(bad)  
  403777:	lock ins BYTE PTR es:[edi],dx
  403779:	(bad)  
  40377a:	aad    0xe8
  40377c:	hlt    
  40377d:	into   
  40377e:	aad    0xff
	...
  4037a8:	ret    0xec5c
  4037ab:	out    dx,eax
  4037ac:	inc    esp
  4037ad:	lods   al,BYTE PTR ds:[esi]
  4037ae:	aad    0xb5
  4037b0:	xor    eax,esp
  4037b2:	aad    0xff
  4037b4:	and    ebx,DWORD PTR [ebp+ecx*8-0x1]
  4037b8:	sub    al,0x80
  4037ba:	xor    eax,0xd4e28a28
  4037bf:	mov    ch,0x27
  4037c1:	(bad)  
  4037c2:	aad    0xff
  4037c4:	and    esp,DWORD PTR [ecx-0x34]
  4037c7:	add    BYTE PTR [ebx+0x9],cl
  4037ca:	bnd ret 
  4037cc:	jg     0x4037be
  4037ce:	jno    0x403757
  4037d0:	repz fcom QWORD PTR [esi+0x62d9c0d5]
  4037d7:	pop    ss
  4037d8:	mov    WORD PTR [ecx],fs
  4037da:	sub    BYTE PTR [eax+ebx*8],al
  4037dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037de:	jle    0x40376f
  4037e0:	out    0xdc,eax
  4037e2:	jbe    0x4037b9
  4037e4:	jecxz  0x403848
  4037e6:	mov    eax,ds:0x6c7e4b04
  4037eb:	loopne 0x4037a1
  4037ed:	int3   
  4037ee:	pop    esi
  4037ef:	xor    al,0xbc
  4037f1:	xchg   esi,eax
  4037f2:	inc    ebp
  4037f3:	in     eax,0xb4
  4037f5:	int3   
  4037f6:	inc    ecx
  4037f7:	push   ebx
  4037f8:	or     BYTE PTR [ecx],0xe9
  4037fb:	jle    0x403788
  4037fd:	push   ecx
  4037fe:	mov    dl,0xd4
  403800:	(bad)  
  403801:	fld    QWORD PTR [esi-0x2b]
  403804:	xchg   esp,eax
  403805:	loope  0x403836
  403807:	out    0x8c,al
  403809:	int3   
  40380a:	jo     0x40388b
	...
  403834:	jae    0x403812
  403836:	push   ds
  403837:	aad    0x7c
  403839:	xchg   esi,eax
  40383a:	add    ebp,esp
  40383c:	je     0x40380a
  40383e:	add    DWORD PTR [esi],edx
  403840:	je     0x40380e
  403842:	push   es
  403843:	mov    eax,ds:0x3a820e8
  403848:	pop    esp
  403849:	xchg   esi,eax
  40384a:	or     eax,0x1cc54e5
  40384f:	and    eax,DWORD PTR [ebx+0xb08e909]
  403855:	push   ebp
  403856:	add    cl,BYTE PTR [ecx-0x2b391f32]
  40385c:	xor    al,0x80
  40385e:	(bad)  [eax+0x4311686e]
  403864:	dec    ebx
  403865:	fadd   DWORD PTR [ebp+0xe4d6d4]
  40386b:	(bad)  
  40386c:	dec    ebx
  40386e:	call   0x493954
  403873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403874:	aad    0xd8
  403876:	out    dx,eax
  403877:	sahf   
  403878:	pop    ss
  403879:	loope  0x4038d5
  40387b:	xchg   DWORD PTR [edi],ebx
  40387d:	int3   
  40387e:	call   DWORD PTR [esp+eiz*8-0x25]
  403882:	inc    DWORD PTR [esi+0x7eee3bf0]
  403888:	imul   DWORD PTR [ebx]
  40388a:	pop    esi
  40388b:	mov    al,ds:0x7d8b360b
  403890:	bound  eax,QWORD PTR [ecx]
  403892:	call   0xbcee9
  403897:	jb     0x403899
	...
  4038bd:	add    BYTE PTR [eax],al
  4038bf:	add    al,bh
  4038c1:	retf   
  4038c2:	xor    eax,0x4a6094
  4038c7:	pop    esi
  4038c8:	dec    edx
  4038c9:	int3   
  4038ca:	jne    0x4038bd
  4038cc:	iret   
  4038cd:	inc    esi
  4038ce:	add    al,0x70
  4038d0:	lods   eax,DWORD PTR ds:[esi]
  4038d1:	mov    WORD PTR [eax],gs
  4038d3:	test   al,0x48
  4038d5:	ret    0xe5c2
  4038d8:	dec    eax
  4038d9:	mov    edx,DWORD PTR ss:0xb6f8c4cb
  4038e0:	mov    edi,0x48e9f845
  4038e5:	or     DWORD PTR [eax],eax
  4038e7:	push   0x15
  4038e9:	add    DWORD PTR [eax],eax
  4038eb:	jge    0x403947
  4038ed:	retf   0xed75
  4038f0:	ja     0x403947
  4038f2:	or     BYTE PTR [ebx-0xcf91eb8],al
  4038f8:	js     0x4038c5
  4038fa:	mov    DWORD PTR [ebx+ebx*1],ebp
  4038fd:	fild   WORD PTR [edi]
  4038ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403900:	xchg   edx,eax
  403901:	int    0x0
  403903:	jmp    0xccb4250
  403908:	fisub  DWORD PTR [ecx]
  40390a:	inc    ecx
  40390b:	add    BYTE PTR [edx],dh
  40390d:	lods   al,BYTE PTR ds:[esi]
  40390e:	adc    ecx,DWORD PTR [ebx+0x473bb967]
  403914:	xor    cl,BYTE PTR es:[ecx]
  403917:	(bad)  
  403918:	addr16 mov ebp,0x6f20001
  40391e:	jmp    0x403926
  403920:	jns    0x403918
  403922:	or     bh,bh
	...
  40394c:	push   edi
  40394d:	lods   al,BYTE PTR ds:[esi]
  40394e:	cmp    DWORD PTR [ebp-0x26],0x5
  403952:	jne    0x40395c
  403954:	int    0x30
  403956:	cld    
  403957:	call   0x3fefcc
  40395c:	imul   eax,DWORD PTR [eax-0x8],0x8c3ab5f
  403963:	add    BYTE PTR ds:0x5abd3d4c,al
  403969:	inc    esp
  40396a:	add    bl,ch
  40396c:	stos   BYTE PTR es:[edi],al
  40396d:	jnp    0xf67e43b2
  403973:	dec    DWORD PTR ds:0x5675feca
  403979:	mov    esi,0x444abd05
  40397e:	add    BYTE PTR [eax],al
  403980:	mov    ds:0x315f0006,al
  403985:	adc    BYTE PTR [ebx+0x6a10b5ec],cl
  40398b:	add    BYTE PTR [ebp+0x30],bl
  40398e:	or     al,ch
  403990:	and    eax,0xd9ffffbc
  403995:	mov    esp,0xae5a75ff
  40399a:	and    al,bh
  40399c:	bound  eax,QWORD PTR [esi]
  40399e:	cmp    eax,0x63
  4039a1:	xor    BYTE PTR [edi],cl
  4039a3:	push   edi
  4039a4:	mov    dl,0xf7
  4039a6:	and    DWORD PTR [ebp+0x3a],esi
  4039a9:	mov    edx,0xe14b778d
  4039ae:	jle    0x403978
	...
  4039d8:	cmp    BYTE PTR [edx+esi*1+0x44f97768],al
  4039df:	add    BYTE PTR [eax+edi*4+0x6e],dh
  4039e3:	enter  0xe04b,0xfe
  4039e7:	mov    edi,0x40c9e497
  4039ec:	dec    edi
  4039ed:	loopne 0x403a4c
  4039ef:	pop    esp
  4039f0:	jno    0x4039d2
  4039f2:	cmp    ch,al
  4039f4:	les    esp,FWORD PTR [edi-0x5fbffffd]
  4039fa:	push   edi
  4039fb:	add    eax,0xeb03e00d
  403a00:	dec    eax
  403a01:	mov    ds:0x887c000a,al
  403a06:	mov    dl,0xc6
  403a08:	dec    ebx
  403a09:	loopne 0x403991
  403a0b:	clc    
  403a0c:	dec    eax
  403a0d:	stos   DWORD PTR es:[edi],eax
  403a0e:	push   es
  403a0f:	mov    BYTE PTR [eax+eiz*8+0x7e],0xc7
  403a14:	adc    eax,0x47c2bc93
  403a19:	loopne 0x403a53
  403a1b:	mov    esi,DWORD PTR [edi-0x2f0338a2]
  403a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a22:	inc    DWORD PTR [ebx+ecx*2]
  403a25:	mov    al,0x3
  403a27:	add    bl,bh
  403a29:	inc    edi
  403a2a:	shl    ebp,0x84
  403a2d:	and    bh,BYTE PTR [ebp+eax*2+0x7f]
  403a31:	jmp    0xffcf:0x6c740c57
  403a38:	mul    bh
  403a3a:	fcomi  st,st(4)
	...
  403a64:	pop    esi
  403a65:	add    dl,dl
  403a67:	call   esi
  403a69:	scas   eax,DWORD PTR es:[edi]
  403a6a:	shl    BYTE PTR [ebp+0x47],cl
  403a6d:	rcl    DWORD PTR [edi-0x4],cl
  403a70:	arpl   WORD PTR [edi+0x8],sp
  403a73:	add    BYTE PTR [ebx+0x9],cl
  403a76:	out    0x57,al
  403a78:	aas    
  403a79:	mov    dl,0x79
  403a7b:	xlat   BYTE PTR ds:[ebx]
  403a7c:	xor    al,0xc9
  403a7e:	mov    al,ds:0x3a093fc6
  403a83:	pop    esp
  403a84:	push   edx
  403a85:	repnz daa 
  403a87:	add    al,0x33
  403a89:	frstor [edi-0x56ebb4fc]
  403a8f:	pop    eax
  403a90:	cmp    DWORD PTR [ecx+edx*4+0x27f25e5c],edx
  403a97:	add    al,0x98
  403a99:	mov    cl,0xb1
  403a9b:	retf   0x94b
  403a9e:	dec    edx
  403a9f:	sbb    al,0x22
  403aa1:	dec    edx
  403aa2:	jmp    0x729f42d3
  403aa7:	loopne 0x403b1e
  403aa9:	pop    esp
  403aaa:	push   ss
  403aab:	rcr    DWORD PTR [esi+0x11],1
  403aae:	sbb    DWORD PTR [edi+0x73e90a05],0x8dcc950
  403ab8:	sbb    al,0x64
  403aba:	mov    edi,0xe91189ba
  403abf:	jl     0x403aef
  403ac1:	adc    DWORD PTR [ecx+0x7d],edi
  403ac4:	sbb    DWORD PTR [ecx+0x5772],0x0
	...
  403aef:	add    BYTE PTR [edi-0xc],cl
  403af2:	sub    al,dl
  403af4:	ror    al,cl
  403af6:	ror    DWORD PTR ss:[ecx+ebx*4-0x76245dc5],1
  403afe:	out    0x3,al
  403b00:	mul    DWORD PTR [ecx]
  403b02:	mov    dh,0x34
  403b04:	arpl   WORD PTR [esi+0x144b042f],cx
  403b0a:	sub    DWORD PTR [edi+0x4c],edx
  403b0d:	push   0xcb9231a2
  403b12:	icebp  
  403b13:	add    eax,edx
  403b15:	verw   WORD PTR [edx-0x7f]
  403b19:	or     eax,0x9d717eb
  403b1e:	add    cl,ch
  403b20:	dec    eax
  403b21:	push   0xcaf03f5b
  403b26:	or     cl,ch
  403b28:	jne    0x403abe
  403b2a:	in     al,dx
  403b2b:	bound  ecx,QWORD PTR [ebp+0x74a90b11]
  403b31:	push   cs
  403b32:	add    BYTE PTR [ecx],0x4f
  403b35:	or     DWORD PTR ds:[ecx+0x48],esi
  403b39:	or     DWORD PTR [eax],eax
  403b3b:	jmp    0xe9450601
  403b40:	pop    edi
  403b41:	fucomi st,st(3)
  403b43:	test   al,0x0
  403b46:	pop    esp
  403b47:	sbb    eax,0xbe388944
  403b4c:	jge    0x403b5e
  403b4e:	mov    edx,0x948e8
  403b53:	xchg   edx,eax
	...
  403b7c:	dec    ebp
  403b7d:	add    DWORD PTR [eax],0xffffffe9
  403b80:	dec    eax
  403b81:	or     DWORD PTR [eax+0x69],eax
  403b84:	push   eax
  403b85:	or     DWORD PTR [ebp+0x4d],esi
  403b88:	aas    
  403b89:	retf   
  403b8a:	leave  
  403b8b:	sub    ecx,DWORD PTR [ecx+ecx*1+0x55]
  403b8f:	bound  ecx,QWORD PTR [edi+ebx*2+0x4e27ba56]
  403b96:	or     al,0xec
  403b98:	dec    eax
  403b99:	or     eax,0xa8d9e900
  403b9e:	push   eax
  403b9f:	inc    ecx
  403ba0:	(bad)  
  403ba1:	mov    esp,0xc1072eff
  403ba6:	mov    eax,DWORD PTR [ecx-0x1]
  403ba9:	cmp    eax,0x15357208
  403bae:	jmp    0x403b9b
  403bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bb1:	push   ecx
  403bb2:	or     esp,DWORD PTR [eax]
  403bb4:	cld    
  403bb5:	or     eax,0xc5840080
  403bba:	je     0x403bb1
  403bbc:	pop    ecx
  403bbd:	xor    BYTE PTR [edx+eax*1-0x2],0x2
  403bc2:	sub    eax,eax
  403bc4:	mov    BYTE PTR [edi+0x430c75c9],cl
  403bca:	ret    
  403bcb:	pop    ebx
  403bcc:	je     0x403bc4
  403bce:	enter  0x2ac2,0xb
  403bd2:	push   ebx
  403bd3:	push   esi
  403bd4:	mov    ebx,0x32000011
  403bd9:	cmp    esi,DWORD PTR [ebx]
  403bdb:	shl    BYTE PTR [edx+0x1a],cl
  403bde:	fist   DWORD PTR [eax+0x0]
	...
  403c08:	(bad)  
  403c09:	cmp    eax,0x3db2b60f
  403c0e:	cmp    al,0x2b
  403c10:	and    BYTE PTR [eax+0x6],0x90
  403c14:	popa   
  403c15:	retf   
  403c16:	ds nop
  403c18:	and    DWORD PTR [ecx],ebx
  403c1a:	das    
  403c1b:	nop
  403c1c:	aas    
  403c1d:	seto   BYTE PTR [ebx+0x439016b0]
  403c24:	xchg   esi,eax
  403c25:	sbb    dl,BYTE PTR [eax+0x3916e87c]
  403c2b:	nop
  403c2c:	mov    ch,0x11
  403c2e:	add    al,0x4
  403c30:	mov    cl,0x7a
  403c32:	inc    ebx
  403c33:	cmp    al,0xe3
  403c35:	cmp    bh,BYTE PTR [ebx+ecx*1+0x56]
  403c39:	repz (bad) 
  403c3b:	jg     0x403be9
  403c3d:	es inc ecx
  403c3f:	nop
  403c40:	mov    cl,0x7a
  403c42:	inc    ebx
  403c43:	cmp    al,0x83
  403c45:	cmp    bh,BYTE PTR [edx+ecx*1-0x6a]
  403c49:	push   eax
  403c4a:	nop
  403c4b:	jg     0x403cbc
  403c4d:	es inc edi
  403c4f:	add    eax,DWORD PTR [edx+0x4a]
  403c52:	rol    edx,0x6c
  403c55:	test   al,0xb1
  403c57:	ror    DWORD PTR [ebx-0x16],0x5
  403c5b:	mov    ecx,DWORD PTR [ecx+0x73c1bbe7]
  403c61:	mov    eax,0xfbc0903a
  403c66:	jae    0x403cc6
  403c68:	lock repnz cmp BYTE PTR [ebx+0x0],cl
	...
  403c94:	aaa    
  403c95:	mov    ds:0x3b3f5636,eax
  403c9a:	pop    eax
  403c9b:	or     bl,bl
  403c9d:	cmp    dl,BYTE PTR [eax+0x10]
  403ca0:	fld    TBYTE PTR [edx]
  403ca2:	inc    eax
  403ca3:	or     al,0xbb
  403ca5:	and    ch,BYTE PTR [ebx+0x346069e3]
  403cab:	nop
  403cac:	and    eax,DWORD PTR [edx]
  403cae:	iret   
  403caf:	dec    DWORD PTR [eax+eiz*2]
  403cb2:	mov    cl,cl
  403cb4:	test   DWORD PTR [eax-0x480c3e67],ebp
  403cba:	jae    0x403cff
  403cbc:	jmp    0xdb99b028
  403cc1:	xor    al,ch
  403cc3:	add    al,0xbb
  403cc5:	xor    bl,ah
  403cc7:	add    al,0xbb
  403cc9:	push   cs
  403cca:	scas   al,BYTE PTR es:[edi]
  403ccb:	nop
  403ccc:	shl    BYTE PTR [edx+0x73],0x5e
  403cd0:	ins    BYTE PTR es:[edi],dx
  403cd1:	sbb    edi,DWORD PTR [ebp+0x38b057c2]
  403cd7:	mov    ebp,DWORD PTR [edi-0x4a1338d0]
  403cdd:	data16 into 
  403cdf:	push   ebx
  403ce0:	pusha  
  403ce1:	sti    
  403ce2:	jg     0x403d29
  403ce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ce5:	jg     0x403d42
  403ce7:	xor    DWORD PTR [edx+0x71],esi
  403cea:	add    edi,edi
  403cec:	pop    esi
  403ced:	outs   dx,BYTE PTR ds:[esi]
  403cee:	sbb    al,0x41
  403cf0:	dec    ebx
  403cf1:	dec    eax
  403cf2:	es (bad) 
  403cf4:	dec    ebx
  403cf5:	mov    al,0xfa
  403cf7:	mov    edi,0x0
	...
  403d20:	test   BYTE PTR [eax],0xcb
  403d23:	into   
  403d24:	(bad)  
  403d25:	sbb    BYTE PTR [esi],bl
  403d27:	pop    eax
  403d28:	aas    
  403d29:	xor    ebp,edx
  403d2b:	pop    ecx
  403d2c:	dec    ebx
  403d2d:	(bad)  
  403d2e:	xchg   esp,eax
  403d2f:	sti    
  403d30:	pop    ebp
  403d31:	cmp    eax,DWORD PTR ds:0xe9cf3fdb
  403d37:	add    eax,DWORD PTR [eax-0x37]
  403d3a:	jl     0x403d40
  403d3c:	mov    ah,al
  403d3e:	je     0x403d0f
  403d40:	xor    esi,DWORD PTR [ebp+0x104b04ac]
  403d46:	ret    0xc7fd
  403d49:	into   
  403d4a:	jmp    0x64d68852
  403d4f:	rcr    DWORD PTR ds:0xa334c6c5,1
  403d55:	or     eax,0xb14b03e8
  403d5a:	xchg   ebx,eax
  403d5b:	enter  0x94b,0xe2
  403d5f:	ret    
  403d60:	dec    esp
  403d61:	lea    edx,[ebp+0x4]
  403d64:	dec    ebx
  403d65:	or     esp,ebx
  403d67:	pop    es
  403d68:	dec    edx
  403d69:	or     ecx,ebp
  403d6b:	cld    
  403d6c:	int    0x6a
  403d6e:	jmp    0xe96f8876
  403d73:	jle    0x403d43
  403d75:	mov    eax,0x59cccd7f
  403d7a:	or     DWORD PTR [ebp+0x7ee9098f],0xcd67b8c6
	...
  403dac:	mov    ah,0x59
  403dae:	push   ecx
  403daf:	inc    esp
  403db0:	lods   eax,DWORD PTR ds:[esi]
  403db1:	les    edx,FWORD PTR [esi-0x7]
  403db4:	in     al,0x3e
  403db6:	in     eax,dx
  403db7:	pop    ebx
  403db8:	aam    0xf1
  403dba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dbb:	add    eax,esi
  403dbd:	mov    ?,WORD PTR [edx]
  403dbf:	into   
  403dc0:	mov    esp,es
  403dc2:	add    BYTE PTR [ecx+0x2ef6e2a0],bl
  403dc8:	mov    es,esp
  403dca:	jne    0x403dbd
  403dcc:	cmp    BYTE PTR [ecx-0x3b81e9dc],dh
  403dd2:	jmp    0x403dba
  403dd4:	xchg   edi,eax
  403dd5:	or     BYTE PTR ds:[esp+eax*8-0x48],bl
  403dda:	inc    BYTE PTR [esi]
  403ddc:	xchg   BYTE PTR [ecx-0x18],bl
  403ddf:	ds jne 0x403da6
  403de2:	jmp    DWORD PTR [eax-0x34]
  403de5:	mov    ah,0xfe
  403de7:	out    dx,al
  403de8:	comiss xmm0,DWORD PTR [eax]
  403deb:	push   ebx
  403dec:	dec    edi
  403ded:	das    
  403dee:	add    dl,BYTE PTR [ebx+0x47]
  403df1:	das    
  403df2:	add    eax,DWORD PTR [ecx+0x4f]
  403df5:	or     DWORD PTR [eax],eax
  403df7:	test   eax,0xc7ec7e0f
  403dfc:	pop    es
  403dfd:	(bad)  
  403dfe:	call   0x4949d0
  403e03:	pusha  
  403e04:	(bad)  
  403e05:	rol    DWORD PTR [eax+0x35],0xef
  403e09:	ret    0xf975
  403e0c:	pop    es
  403e0d:	ds or  al,0x9e
	...
  403e38:	xchg   ebp,eax
  403e39:	shr    eax,0xc7
  403e3c:	push   es
  403e3d:	(bad)  
  403e3e:	jmp    DWORD PTR [edx-0x50]
  403e41:	ret    
  403e42:	jne    0x403dc5
  403e44:	lock faddp st(3),st
  403e47:	jmp    0xfd1b4e94
  403e4c:	ret    
  403e4d:	ret    0x7db5
  403e50:	mov    es,ebx
  403e52:	call   DWORD PTR [ecx+0x45]
  403e55:	int    0x0
  403e57:	jmp    0x582cbbdb
  403e5c:	xchg   edi,eax
  403e5d:	ret    
  403e5e:	call   0x3b884
  403e63:	add    BYTE PTR [ecx],bl
  403e65:	leave  
  403e66:	pop    ebx
  403e67:	leave  
  403e68:	pusha  
  403e69:	(bad)  
  403e6a:	call   DWORD PTR [ecx+ebp*8-0x1d]
  403e6e:	add    esp,0xffffd63e
  403e74:	mov    cl,0xd4
  403e76:	jne    0x403e84
  403e78:	dec    ebp
  403e79:	pop    ebx
  403e7a:	or     BYTE PTR [eax-0x7d],ch
  403e7d:	push   ds
  403e7e:	inc    ecx
  403e7f:	add    BYTE PTR [ebp+0x1b],cl
  403e82:	inc    esi
  403e83:	sub    DWORD PTR [ebx+0x57b9e807],esp
  403e89:	iret   
  403e8a:	dec    DWORD PTR [ebx]
  403e8c:	jb     0x403e53
  403e8e:	test   dl,bl
  403e90:	xor    al,BYTE PTR [edi]
  403e92:	add    BYTE PTR [ebx],ch
  403e94:	or     DWORD PTR [ecx-0x7b],eax
  403e97:	out    dx,eax
  403e98:	or     al,0xcf
  403e9a:	call   DWORD PTR [eax+0x0]
	...
  403ec1:	add    BYTE PTR [eax],al
  403ec3:	add    BYTE PTR [edx+0x32000109],cl
  403ec9:	(bad)  
  403ecb:	ret    
  403ecc:	and    al,BYTE PTR [edi]
  403ece:	or     eax,eax
  403ed0:	sbb    eax,0xf200bd43
  403ed5:	push   es
  403ed6:	cmp    eax,0x6f304
  403edb:	pcmpgtw mm3,QWORD PTR [ebx+0x41e20000]
  403ee2:	inc    ebp
  403ee3:	cld    
  403ee4:	and    ah,ch
  403ee6:	mov    edx,0x8dcecde9
  403eeb:	test   DWORD PTR [ebp+0x32ffffcf],edi
  403ef1:	in     eax,0x4f
  403ef3:	std    
  403ef4:	cmp    eax,0xb7c00bce
  403ef9:	stos   BYTE PTR es:[edi],al
  403efa:	addr16 mov bh,0x5a
  403efd:	dec    esp
  403efe:	add    BYTE PTR [ebp-0x121d9],cl
  403f04:	dec    ebx
  403f05:	pop    ebx
  403f06:	xor    al,0xe8
  403f08:	mov    bl,0x5d
  403f0a:	retf   
  403f0b:	call   DWORD PTR [ebp+eax*4-0x405cb005]
  403f12:	sar    edi,1
  403f14:	test   BYTE PTR [edi-0x5],al
  403f17:	(bad)  
  403f18:	mul    BYTE PTR [edi-0x159b7a88]
  403f1e:	retf   0x1bff
  403f21:	sbb    BYTE PTR [edx+0x341b64f5],bh
  403f27:	inc    DWORD PTR [eax]
	...
  403f4d:	add    BYTE PTR [eax],al
  403f4f:	add    dh,dl
  403f51:	adc    esi,DWORD PTR [eax+ebp*8]
  403f54:	in     eax,dx
  403f55:	push   ss
  403f56:	retf   
  403f57:	inc    DWORD PTR [eax-0x10]
  403f5a:	dec    edi
  403f5b:	push   ebx
  403f5c:	inc    esp
  403f5d:	inc    ebp
  403f5e:	(bad)  
  403f5f:	call   0xb4880
  403f64:	ret    0xcbf4
  403f67:	sub    DWORD PTR [esi-0x768bfc58],0x2d
  403f6e:	inc    eax
  403f6f:	hlt    
  403f70:	jnp    0x403f45
  403f72:	push   eax
  403f73:	cld    
  403f74:	and    ebx,DWORD PTR [edx]
  403f76:	rol    BYTE PTR [eax],0x4b
  403f79:	sub    eax,0x7b3978c3
  403f7e:	push   eax
  403f7f:	hlt    
  403f80:	rep lods eax,DWORD PTR ds:[esi]
  403f82:	mov    BYTE PTR [eax],0x4b
  403f85:	mov    bh,0xc3
  403f87:	je     0x403fae
  403f89:	add    bl,cl
  403f8b:	jne    0x403f70
  403f8d:	xchg   DWORD PTR ds:0x7e92dcf2,eax
  403f93:	fdiv   DWORD PTR [ebx-0x75]
  403f96:	push   eax
  403f97:	clc    
  403f98:	js     0x403fba
  403f9a:	fsubr  QWORD PTR [ecx+edi*4]
  403f9d:	cmp    cl,dl
  403f9f:	push   DWORD PTR [esi]
  403fa1:	cmp    al,0xdb
  403fa3:	out    0x89,al
  403fa5:	or     cl,ch
  403fa7:	add    eax,eax
  403fa9:	dec    ebx
  403faa:	in     eax,dx
  403fab:	retf   0xc11e
  403fae:	add    si,WORD PTR [ebx+0xca58cf]
	...
  403fd9:	add    BYTE PTR [eax],al
  403fdb:	add    BYTE PTR [ecx+eax*8-0xd5c3844],dl
  403fe2:	dec    edi
  403fe3:	retf   0x8d84
  403fe6:	sub    ch,BYTE PTR [esi]
  403fe8:	xchg   edx,eax
  403fe9:	(bad)  
  403fea:	loope  0x403fef
  403fec:	push   ds
  403fed:	mov    ss,WORD PTR ds:0xf143c032
  403ff3:	fidivr WORD PTR [edx]
  403ff5:	pop    edx
  403ff6:	add    al,BYTE PTR [ecx]
  403ff8:	ror    DWORD PTR [ecx-0x18],1
  403ffb:	jnp    0x404049
  403ffd:	dec    edx
  403ffe:	imul   ecx,DWORD PTR [edx],0x29f43c4b
  404004:	xchg   esp,eax
  404005:	dec    eax
  404006:	imul   ecx,DWORD PTR [edx],0x8303356b
  40400c:	je     0x40401c
  40400e:	pop    ebp
  40400f:	(bad)  
  404011:	add    bl,dh
  404013:	dec    edi
  404014:	sub    ecx,DWORD PTR [edx-0x1b6704ea]
  40401a:	bound  eax,QWORD PTR [edi+0x43]
  40401d:	sar    BYTE PTR [esp+edi*8],0x24
  404021:	xchg   DWORD PTR [ebx-0x4e73b4fc],ebp
  404027:	add    al,0x75
  404029:	call   0xc0738896
  40402e:	leave  
  40402f:	dec    edi
  404030:	push   esi
  404031:	mov    DWORD PTR ds:0x1d0ee40c,ebx
  404037:	cli    
  404038:	pop    esp
  404039:	cmp    eax,0x3541c8d1
  40403e:	out    dx,al
  40403f:	add    DWORD PTR [eax],0x0
	...
  404066:	add    BYTE PTR [eax],al
  404068:	dec    edi
  404069:	add    DWORD PTR [esi-0x5],edi
  40406c:	aas    
  40406d:	or     BYTE PTR [eax],al
  40406f:	scas   eax,DWORD PTR es:[edi]
  404070:	or     eax,DWORD PTR [ecx]
  404072:	(bad)  
  404073:	jmp    0xec2b4c0f
  404078:	(bad)  
  404079:	int    0x5f
  40407b:	xor    BYTE PTR [ebp+0x1fbc0005],cl
  404081:	lods   eax,DWORD PTR ds:[esi]
  404082:	and    DWORD PTR ds:0x4835cab,0xffffffab
  404089:	out    dx,eax
  40408a:	inc    eax
  40408b:	jmp    0x6a5275d8
  404090:	inc    esp
  404091:	mov    cl,0x2e
  404093:	test   al,0x48
  404095:	or     DWORD PTR [eax+esi*8-0x39],esi
  404099:	dec    bh
  40409b:	iret   
  40409c:	or     DWORD PTR [ecx],ecx
  40409e:	add    BYTE PTR [ebx+ecx*2-0x6e4d400c],bl
  4040a5:	retf   
  4040a6:	or     cl,ch
  4040a8:	das    
  4040a9:	in     al,0xc7
  4040ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040ac:	adc    al,0x9
  4040ae:	add    cl,ch
  4040b0:	dec    eax
  4040b1:	mov    es,WORD PTR [ebp-0xf]
  4040b4:	js     0x404076
  4040b6:	jne    0x4040a9
  4040b8:	mov    cs,WORD PTR [ecx]
  4040ba:	push   esp
  4040bc:	add    al,0xef
  4040be:	inc    eax
  4040bf:	jmp    0x32b4c0e3
  4040c4:	div    DWORD PTR [esi]
  4040c6:	ret    0x48e9
  4040c9:	xchg   esp,eax
  4040ca:	shr    BYTE PTR [eax+eax*1+0x0],1
	...
  4040f2:	add    BYTE PTR [eax],al
  4040f4:	inc    ebp
  4040f5:	mov    ch,0x50
  4040f7:	inc    ebx
  4040f8:	daa    
  4040f9:	pop    ebx
  4040fa:	call   esp
  4040fc:	mov    eax,0xefe940ee
  404101:	jg     0x404177
  404103:	ror    BYTE PTR [ebx],1
  404105:	inc    esi
  404106:	in     al,0xe8
  404108:	dec    eax
  404109:	or     DWORD PTR [eax],eax
  40410b:	mov    es,WORD PTR [ebp+0x1f008fc1]
  404111:	(bad)  
  404113:	jne    0x40415b
  404115:	inc    ecx
  404116:	inc    ebp
  404117:	in     al,dx
  404118:	xor    DWORD PTR [edi+0xc],eax
  40411b:	add    BYTE PTR [esi+0x1245c6c2],bh
  404121:	push   es
  404122:	add    BYTE PTR [eax],al
  404124:	mov    dl,0xdc
  404126:	pop    es
  404127:	(bad)  
  404128:	out    dx,eax
  404129:	fild   DWORD PTR [eax]
  40412b:	add    BYTE PTR [edx+0x78006a0b],ah
  404131:	or     ebp,DWORD PTR [edx+0x10]
  404134:	idiv   esi
  404136:	jecxz  0x404188
  404138:	mov    BYTE PTR [ebx],cl
  40413a:	push   DWORD PTR [ebp+0x3e]
  40413d:	rcl    DWORD PTR ds:0x4a94e8,1
  404143:	or     esi,DWORD PTR [edx]
  404145:	push   eax
  404146:	add    DWORD PTR [ebx-0xf],eax
  404149:	inc    esi
  40414a:	hlt    
  40414b:	add    BYTE PTR [esi+0x4e75fec3],bh
  404151:	loop   0x4040ed
  404153:	shl    DWORD PTR [edx],0xb
  404156:	mov    eax,ebx
	...
  404180:	fld    DWORD PTR [ebx-0xfddf73e]
  404186:	mov    ch,ah
  404188:	and    eax,0x9ee80859
  40418d:	les    eax,FWORD PTR [eax]
  40418f:	add    BYTE PTR [edx-0xb],dh
  404192:	out    0xa0,eax
  404194:	repnz (bad) 
  404196:	call   DWORD PTR [eax+0x5]
  404199:	pop    ecx
  40419a:	or     BYTE PTR [eax+0x1a],dl
  40419d:	rol    DWORD PTR gs:[eax],0xf2
  4041a1:	repnz enter 0xeec2,0xa
  4041a6:	push   ebp
  4041a7:	mov    edx,esi
  4041a9:	mov    al,ah
  4041ab:	cld    
  4041ac:	and    DWORD PTR [edx-0x4fb4f783],ecx
  4041b2:	push   eax
  4041b3:	pop    es
  4041b4:	and    BYTE PTR [eax+0x2b],dh
  4041b7:	leave  
  4041b8:	or     DWORD PTR [ebp+0x1aa02b03],ebp
  4041be:	add    al,0x6a
  4041c0:	dec    ebx
  4041c1:	or     al,BYTE PTR [edx+ebp*2]
  4041c4:	dec    ebx
  4041c5:	or     al,bh
  4041c7:	push   DWORD PTR [esi]
  4041c9:	mov    eax,0xb0310059
  4041ce:	fcmovnb st,st(4)
  4041d0:	mov    dh,BYTE PTR [eax-0x2b74f4fd]
  4041d6:	adc    cl,BYTE PTR [ecx+0x75c74406]
  4041dc:	xchg   DWORD PTR [eax+0x2e],ebx
  4041df:	lock jl 0x4041d9
  4041e2:	cli    
  4041e3:	mov    edi,0x0
	...
  40420c:	inc    DWORD PTR [ebx]
  40420e:	jnp    0x4041e8
  404210:	loope  0x4041c1
  404212:	pop    ecx
  404213:	add    BYTE PTR [ebp+edx*4-0x39],ah
  404217:	push   ebx
  404218:	icebp  
  404219:	push   ss
  40421a:	(bad)  
  40421b:	jne    0x404260
  40421d:	mov    al,BYTE PTR [ebx]
  40421f:	push   0x4b
  404221:	sbb    BYTE PTR [ebp-0x3f],ch
  404224:	dec    ebx
  404225:	mov    al,0xfa
  404227:	mov    edi,0xe832a8b6
  40422c:	push   edx
  40422d:	rol    dh,0xff
  404230:	pusha  
  404231:	retf   
  404232:	jp     0x4041f7
  404234:	cmp    BYTE PTR [ecx-0x3f],0x4
  404238:	dec    ebx
  404239:	std    
  40423a:	jp     0x404228
  40423c:	enter  0xd763,0x50
  404240:	js     0x404263
  404242:	xor    dl,BYTE PTR [edi-0x63]
  404245:	cmp    eax,DWORD PTR [eax+0xc]
  404248:	into   
  404249:	daa    
  40424a:	add    DWORD PTR [eax],0x4b
  40424d:	mov    al,0x78
  40424f:	adc    al,0x6
  404251:	or     ecx,ebp
  404253:	add    ecx,DWORD PTR [ebx+0x9]
  404256:	jb     0x404203
  404258:	rcl    al,1
  40425a:	test   al,0xdb
  40425c:	dec    ebp
  40425d:	nop
  40425e:	and    al,0xd8
  404260:	sar    BYTE PTR [ebx],0xf1
  404263:	add    al,dl
  404265:	(bad)  
  404266:	out    0x83,al
  404268:	enter  0xb6a9,0x1a
  40426c:	mov    al,0x89
  40426e:	jb     0x40427b
	...
  404298:	cmp    DWORD PTR [edi],ecx
  40429a:	jmp    0x4b03:0xe948e3ca
  4042a1:	repnz sub DWORD PTR [edx],eax
  4042a4:	xchg   ebx,eax
  4042a5:	mov    ebp,0x55c2d7a4
  4042aa:	add    DWORD PTR [ecx-0x2],edi
  4042ad:	mov    eax,0xea4bfd26
  4042b2:	stos   DWORD PTR es:[edi],eax
  4042b3:	pop    esi
  4042b4:	mov    WORD PTR [esi-0x1b],es
  4042b7:	jl     0x404259
  4042b9:	retf   
  4042ba:	push   ss
  4042bb:	mov    esi,0xa71f110d
  4042c0:	mov    eax,ds:0x473d2ea0
  4042c5:	aaa    
  4042c6:	mov    ch,0x11
  4042c8:	cmp    edi,DWORD PTR [esi+0x3744d77c]
  4042ce:	icebp  
  4042cf:	js     0x404257
  4042d1:	mov    ecx,0x95edb99
  4042d6:	jmp    0xedc371de
  4042db:	add    ecx,DWORD PTR [ebx+0x9]
  4042de:	jb     0x404327
  4042e0:	cmp    edi,DWORD PTR [eax+0x5f74268c]
  4042e6:	xor    BYTE PTR [ecx],ch
  4042e8:	jae    0x4042bc
  4042ea:	stos   DWORD PTR es:[edi],eax
  4042eb:	clc    
  4042ec:	add    al,0x56
  4042ee:	jb     0x4042c8
  4042f0:	enter  0xc5,0xb5
  4042f4:	and    eax,0x381a5054
  4042f9:	push   edi
  4042fa:	mov    ebx,DWORD PTR [eax+eax*1]
	...
  404321:	add    BYTE PTR [eax],al
  404323:	add    bl,ah
  404325:	(bad)  
  404326:	jge    0x404319
  404328:	arpl   WORD PTR [esi+0x10],ax
  40432b:	pusha  
  40432c:	adc    al,0xbd
  40432e:	mov    esp,esi
  404330:	push   ebx
  404331:	pop    esp
  404332:	add    al,0x72
  404334:	jle    0x404347
  404336:	mov    edx,DWORD PTR [esi]
  404338:	ret    
  404339:	(bad)  
  40433a:	stc    
  40433b:	mov    edx,0xbafae882
  404340:	or     BYTE PTR [esi+0x6510ee84],0x6a
  404347:	ss dec edx
  404349:	add    eax,ecx
  40434b:	sub    DWORD PTR [esi-0x7d9d3cf9],edx
  404351:	clc    
  404352:	clc    
  404353:	or     dl,BYTE PTR [edi-0x4930708]
  404359:	adc    edx,DWORD PTR [esi+0x7e]
  40435c:	mov    dh,0xb1
  40435e:	add    edx,DWORD PTR [edi-0xa3d3694]
  404364:	dec    ebx
  404365:	(bad)  [ebx+0x23c03a21]
  40436b:	adc    edi,DWORD PTR [edx]
  40436d:	ror    BYTE PTR [ebp+0x70df565d],0xc9
  404374:	or     BYTE PTR fs:[esi-0xf],cl
  404378:	or     edx,ecx
  40437a:	adc    edx,ebp
  40437c:	repnz (bad) 
  40437e:	cli    
  40437f:	mov    edx,0x1af8e800
  404384:	pop    ss
  404385:	mov    ds,WORD PTR [esi+edi*8+0x0]
	...
  4043b0:	test   dl,0xbd
  4043b3:	test   al,0x4b
  4043b5:	pop    ebx
  4043b6:	or     al,0xa8
  4043b8:	or     edx,DWORD PTR [ebx]
  4043ba:	add    eax,DWORD PTR [eax]
  4043bc:	stos   DWORD PTR es:[edi],eax
  4043bd:	inc    eax
  4043be:	stc    
  4043bf:	xor    ecx,DWORD PTR [eax]
  4043c1:	jmp    0x32f877c0
  4043c6:	test   BYTE PTR [edi],al
  4043c8:	ins    DWORD PTR es:[edi],dx
  4043c9:	mov    ch,0x7b
  4043cb:	cmc    
  4043cc:	icebp  
  4043cd:	std    
  4043ce:	xadd   DWORD PTR [edx+0x69c302bc],esi
  4043d5:	shl    DWORD PTR [ebx],1
  4043d7:	stc    
  4043d8:	add    eax,edx
  4043da:	xor    edi,ecx
  4043dc:	aas    
  4043dd:	sub    al,0x17
  4043df:	sub    ah,ah
  4043e1:	cmp    al,0x47
  4043e3:	add    edx,DWORD PTR [ecx+edi*4-0x40]
  4043e7:	ret    0x88e
  4043ea:	ror    BYTE PTR [ebx+0x23fb192a],1
  4043f0:	sub    BYTE PTR [ecx],bl
  4043f2:	sti    
  4043f3:	lea    ebp,[esi]
  4043f5:	mov    ch,0x12
  4043f7:	inc    esi
  4043f8:	xor    bl,BYTE PTR [ebp-0x3995b1fd]
  4043fe:	rcl    DWORD PTR [ecx],0x71
  404401:	or     DWORD PTR [ebx+0x23cf71fa],0x8dcf71f9
  40440b:	pushf  
  40440c:	dec    ebp
  40440d:	or     BYTE PTR [ebp+0x5e093f46],dl
  404413:	sbb    al,0x0
	...
  404439:	add    BYTE PTR [eax],al
  40443b:	add    BYTE PTR [ebx],ah
  40443d:	leave  
  40443e:	push   ss
  40443f:	add    ebx,DWORD PTR [ebx]
  404441:	inc    ecx
  404442:	stc    
  404443:	xor    ecx,DWORD PTR [eax-0x17]
  404446:	cli    
  404447:	xor    ecx,DWORD PTR [eax+0x33]
  40444a:	test   BYTE PTR [edi],al
  40444c:	pop    edx
  40444d:	sub    BYTE PTR cs:[ecx+0x21],0xfd
  404452:	pop    ds
  404453:	shl    edx,0xe
  404456:	add    eax,ebx
  404458:	cdq    
  404459:	jp     0x40448e
  40445b:	stc    
  40445c:	dec    ebx
  40445d:	bsf    esi,DWORD PTR [ebx]
  404460:	adc    bl,BYTE PTR [esi-0x68]
  404463:	pop    ss
  404464:	mov    ah,0x7b
  404466:	dec    eax
  404467:	mov    ecx,DWORD PTR [eax+0x12]
  40446a:	call   0x6e54e2f
  40446f:	rol    al,1
  404471:	js     0x40446a
  404473:	cli    
  404474:	sub    BYTE PTR [esi-0x9],ah
  404477:	cli    
  404478:	into   
  404479:	sub    al,0x13
  40447b:	mov    cl,0x70
  40447d:	xchg   ebx,eax
  40447e:	ret    
  40447f:	add    edi,DWORD PTR [ebp-0x38]
  404482:	(bad)
  404486:	int    0x8b
  404488:	sar    DWORD PTR [edi-0x45],0x23
  40448c:	mov    dl,0x7f
  40448e:	mov    ebx,0x81cbcf8d
  404493:	xlat   BYTE PTR ds:[ebx]
  404494:	pop    es
  404495:	cmp    DWORD PTR [edi],eax
  404497:	pop    esi
  404498:	outs   dx,DWORD PTR ds:[esi]
  404499:	icebp  
  40449a:	(bad)  
  40449b:	push   ss
  40449c:	dec    eax
  40449d:	stc    
  40449e:	mov    ?,ecx
	...
  4044c8:	pop    eax
  4044c9:	push   esi
  4044ca:	out    0xfa,eax
  4044cc:	cmp    BYTE PTR [esi-0x6f],al
  4044cf:	test   BYTE PTR [esi+ecx*1+0x15],al
  4044d3:	nop
  4044d4:	loopne 0x404484
  4044d6:	dec    ecx
  4044d7:	xor    BYTE PTR [edx-0x77fcf510],cl
  4044dd:	aaa    
  4044de:	mov    edi,0xbbcf6233
  4044e3:	xor    edx,DWORD PTR [edx+0x25]
  4044e6:	cwde   
  4044e7:	pop    ss
  4044e8:	mov    eax,0x48fd9ba1
  4044ed:	call   0xd006:0xac09c0f7
  4044f4:	shl    BYTE PTR [edi-0x4997050a],0xf6
  4044fb:	cli    
  4044fc:	(bad)  
  4044fd:	or     BYTE PTR [ebp+0x12],dh
  404500:	int    0x45
  404502:	pusha  
  404503:	push   0x48
  404505:	dec    ebx
  404506:	adc    ebp,eax
  404508:	or     bl,BYTE PTR [eax]
  40450a:	jmp    0x28bb:0xfabed0cd
  404511:	sar    dl,0xbb
  404514:	(bad)  
  404515:	pushf  
  404516:	(bad)  
  404517:	in     al,0x44
  404519:	jne    0x40453b
  40451b:	pop    es
  40451c:	test   ebp,edi
  40451e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40451f:	(bad)  
  404520:	xor    eax,0xd28ec006
  404525:	cmc    
  404526:	xchg   ecx,eax
  404527:	out    0xd2,al
  404529:	cmc    
  40452a:	(bad)  
  40452b:	nop
	...
  404554:	iret   
  404555:	add    DWORD PTR [ebx],ecx
  404557:	jmp    0x4a2af8ba
  40455c:	dec    edi
  40455d:	enter  0x8a9,0x48
  404561:	(bad)  
  404562:	bound  edi,QWORD PTR [esi-0x42f53ea8]
  404568:	pop    eax
  404569:	mov    esi,0x493c976c
  40456e:	call   0x8a1b:0xb7058b43
  404575:	(bad)  
  404576:	lock push es
  404578:	fwait
  404579:	lea    eax,[ecx-0xa]
  40457c:	jb     0x404563
  40457e:	xor    esi,esi
  404580:	je     0x40450d
  404582:	pop    ebp
  404583:	adc    bh,dl
  404585:	pop    esi
  404586:	(bad)  
  404587:	jmp    0xc50d90d5
  40458c:	mov    cl,BYTE PTR [edx]
  40458e:	jmp    0x68bc:0xdabec0cd
  404595:	mov    cl,0xba
  404597:	mov    ebp,0x6dde95ce
  40459c:	or     al,0x80
  40459e:	add    BYTE PTR [eax],al
  4045a0:	inc    ebp
  4045a1:	pop    ss
  4045a2:	shr    DWORD PTR [edx],0x3c
  4045a5:	or     al,0xd9
  4045a7:	jb     0x404589
  4045a9:	cld    
  4045aa:	cli    
  4045ab:	or     dl,ch
  4045ad:	cld    
  4045ae:	clc    
  4045af:	fs ret 
  4045b1:	adc    BYTE PTR [ebp-0x7],bl
  4045b4:	sti    
  4045b5:	fiadd  WORD PTR [ebx]
  4045b7:	das    
	...
  4045e0:	arpl   dx,cx
  4045e2:	shl    ah,0x4f
  4045e5:	int3   
  4045e6:	mov    esi,DWORD PTR [edx-0x4fdc3f0a]
  4045ec:	fidiv  WORD PTR [ebx+0x5c427d8d]
  4045f2:	adc    al,0x25
  4045f4:	dec    ebp
  4045f5:	or     al,0x56
  4045f7:	ror    DWORD PTR [ecx],0xcc
  4045fa:	or     edx,ebp
  4045fc:	cwde   
  4045fd:	test   al,bh
  4045ff:	mov    edx,0xbafaecfe
  404604:	lock xchg BYTE PTR [esi+eiz*8-0x6e5e5037],cl
  40460c:	dec    esi
  40460d:	inc    edi
  40460e:	cmp    al,0x28
  404610:	mov    BYTE PTR [edi],al
  404612:	add    esi,DWORD PTR [ebx]
  404614:	(bad)  
  404615:	mov    bl,0x33
  404617:	push   eax
  404618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404619:	shl    BYTE PTR [ebx],0x53
  40461c:	aam    0x95
  40461e:	pop    ds
  40461f:	xor    DWORD PTR [esi-0x15151824],edi
  404625:	sbb    cl,al
  404627:	sub    dl,BYTE PTR [ebx+0xc]
  40462a:	fldenv [edx-0x60]
  40462d:	cld    
  40462e:	cli    
  40462f:	retf   0xfc9e
  404632:	clc    
  404633:	ins    BYTE PTR es:[edi],dx
  404634:	ret    
  404635:	adc    dh,ah
  404637:	and    al,0xa8
  404639:	jmp    0xc0:0xc92ca702
  404640:	das    
  404641:	or     eax,0x8bc3
	...
  40466a:	add    BYTE PTR [eax],al
  40466c:	dec    ecx
  40466d:	mov    esi,0xbd3b23f7
  404672:	cli    
  404673:	lea    edi,[esi+0x12]
  404676:	(bad)  
  404677:	pop    es
  404678:	cmp    eax,0x6a5603ce
  40467d:	int3   
  40467e:	ret    0x2109
  404681:	fmul   QWORD PTR [ebx+0x237761f8]
  404687:	sti    
  404688:	add    DWORD PTR [ebp+ecx*4-0x74],esi
  40468c:	in     eax,0x80
  40468e:	or     eax,0x4e0caed5
  404693:	or     al,0xb3
  404695:	retf   0x30e
  404698:	cwde   
  404699:	test   dl,bh
  40469b:	xor    ebp,DWORD PTR [ebx-0x47cc0854]
  4046a1:	xchg   BYTE PTR [edi+ebx*1+0x455a2047],bl
  4046a8:	mov    cl,0x29
  4046aa:	and    cl,al
  4046ac:	loope  0x4046cd
  4046ae:	add    ebx,ecx
  4046b0:	sub    DWORD PTR [ebx+0x33],esi
  4046b3:	sti    
  4046b4:	xchg   ecx,eax
  4046b5:	jne    0x4046ea
  4046b7:	stc    
  4046b8:	pop    ss
  4046b9:	nop
  4046ba:	pop    es
  4046bb:	add    eax,0x3a96cfb
  4046c0:	fdivr  QWORD PTR [edi+0xc6fc0c0]
  4046c6:	ret    
  4046c7:	mov    ecx,DWORD PTR [ecx]
  4046c9:	mov    ebp,0xbd0b23f7
  4046ce:	cli    
  4046cf:	lea    eax,[eax]
	...
  4046f5:	add    BYTE PTR [eax],al
  4046f7:	add    BYTE PTR [esi],cl
  4046f9:	adc    eax,edi
  4046fb:	mov    ds:0x56037825,eax
  404700:	pop    edx
  404701:	retf   0x9c2
  404704:	popa   
  404705:	fisttp DWORD PTR [ebx-0x422cb408]
  40470b:	and    eax,DWORD PTR [eax-0x2c]
  40470e:	mov    ebx,0xdabfcf8d
  404713:	add    ah,BYTE PTR [edi+ecx*4-0x1eb0b1fc]
  40471a:	ror    DWORD PTR [esi],0x48
  40471d:	jmp    0xf7e3:0xa958fa8b
  404724:	pop    eax
  404725:	stos   BYTE PTR es:[edi],al
  404726:	xchg   ecx,eax
  404727:	pushf  
  404728:	sub    al,0x2a
  40472a:	push   eax
  40472b:	sub    dl,dh
  40472d:	mov    ds:0x640a305d,eax
  404732:	sbb    BYTE PTR [ebx],al
  404734:	adc    bh,BYTE PTR [edi*4-0x454c0ecd]
  40473b:	(bad)  
  40473c:	iret   
  40473d:	scas   eax,DWORD PTR es:[edi]
  40473e:	inc    ecx
  40473f:	cmp    ecx,esp
  404741:	outs   dx,DWORD PTR ds:[esi]
  404742:	add    eax,DWORD PTR [esi+0x3f]
  404745:	popa   
  404746:	les    eax,FWORD PTR [eax+ecx*2]
  404749:	arpl   WORD PTR [ebx-0xc668705],cx
  40474f:	test   esi,0xbd811754
  404755:	mov    cl,0x86
  404757:	add    edx,DWORD PTR ds:0xc2c4c0
	...
  404781:	add    BYTE PTR [eax],al
  404783:	add    BYTE PTR [eax-0x5d],dl
  404786:	ror    DWORD PTR [ebx+0x33bb13a3],cl
  40478c:	xchg   ecx,eax
  40478d:	and    eax,0xc1690f90
  404792:	mov    al,ds:0xef96486d
  404797:	ror    BYTE PTR [edx-0x3f35fd30],0x4a
  40479e:	repz idiv DWORD PTR [eax]
  4047a1:	stc    
  4047a2:	nop
  4047a3:	pushf  
  4047a4:	inc    esp
  4047a5:	aam    0xfb
  4047a7:	in     al,0x5e
  4047a9:	or     edx,ebp
  4047ab:	pop    ebp
  4047ac:	adc    ecx,eax
  4047ae:	sub    dl,BYTE PTR [edi]
  4047b0:	dec    eax
  4047b1:	shl    BYTE PTR [edx-0x43],1
  4047b4:	js     0x404769
  4047b6:	fidivr DWORD PTR [edx+0x47ee8cce]
  4047bc:	and    DWORD PTR [edi+0x45],esi
  4047bf:	add    eax,DWORD PTR [ebp+0x4fc4280d]
  4047c5:	or     ch,BYTE PTR [edx]
  4047c7:	mov    esp,DWORD PTR [eax]
  4047c9:	cli    
  4047ca:	fcomip st,st(2)
  4047cc:	sbb    al,0x84
  4047ce:	jne    0x4047e6
  4047d0:	loop   0x404797
  4047d2:	mov    bh,0x4a
  4047d4:	dec    eax
  4047d5:	pop    edi
  4047d6:	stc    
  4047d7:	les    ecx,FWORD PTR [ecx]
  4047d9:	add    ch,dl
  4047db:	rol    eax,cl
  4047dd:	mov    al,0xfa
  4047df:	mov    edx,0x8f64b338
  4047e4:	push   esp
  4047e5:	sub    DWORD PTR [edx],esp
  4047e7:	jnp    0x4047e9
	...
  40480d:	add    BYTE PTR [eax],al
  40480f:	add    ch,dl
  404811:	or     DWORD PTR [edi],esi
  404813:	and    BYTE PTR [edx],cl
  404815:	enter  0x2f9,0x1
  404819:	adc    BYTE PTR [ebx-0x7006430e],0x90
  404820:	fist   WORD PTR ds:0x76f47ff9
  404826:	jmp    0x4816:0xaac8635d
  40482d:	shl    BYTE PTR [edx-0x44],1
  404830:	pop    eax
  404831:	mov    bl,0x1a
  404833:	mov    ebx,0xc5e68cc6
  404838:	or     eax,0xd030192
  40483d:	std    
  40483e:	daa    
  40483f:	ret    
  404840:	inc    edi
  404841:	or     ch,BYTE PTR [edx]
  404843:	mov    dh,BYTE PTR [eax-0x7]
  404846:	aas    
  404847:	bnd je 0x4047cd
  40484a:	add    BYTE PTR [ebp+0x3d],bl
  40484d:	mov    bl,0x27
  40484f:	mov    BYTE PTR [edx-0x75d7e9f7],dh
  404855:	add    DWORD PTR [ebx],eax
  404857:	cmp    ecx,eax
  404859:	mov    al,0x33
  40485b:	adc    bh,BYTE PTR [ecx]
  40485d:	mov    bl,0x8d
  40485f:	pop    ebp
  404860:	dec    ebp
  404861:	mov    ?,WORD PTR [eax]
  404863:	push   ss
  404864:	sbb    al,0x9
  404866:	dec    esi
  404867:	in     eax,dx
  404868:	pop    es
  404869:	retf   
  40486a:	adc    dl,ch
  40486c:	adc    al,BYTE PTR [ecx-0x71f4506]
  404872:	clc    
  404873:	je     0x404875
	...
  404899:	add    BYTE PTR [eax],al
  40489b:	add    bl,ch
  40489d:	adc    al,0x5
  40489f:	cld    
  4048a0:	ror    BYTE PTR ds:0xca673703,0xc3
  4048a7:	test   BYTE PTR [ebx-0x2e],0x8b
  4048ab:	sar    dl,0xb2
  4048ae:	xor    eax,edx
  4048b0:	mov    esp,0xf8f0078d
  4048b5:	fstp   st(1)
  4048b7:	jmp    0x843:0xa9c0ed86
  4048be:	ret    
  4048bf:	jb     0x404853
  4048c1:	clc    
  4048c2:	clc    
  4048c3:	fiadd  DWORD PTR [eax]
  4048c5:	xchg   DWORD PTR [esi+esi*8-0x70246d1b],edx
  4048cc:	dec    edx
  4048cd:	pop    ebx
  4048ce:	xor    BYTE PTR [eax-0x66fcff77],ch
  4048d4:	shl    BYTE PTR [ecx-0x4d658dcd],cl
  4048da:	lea    esi,[ebp+0x46]
  4048dd:	mov    cl,0x7c
  4048df:	mov    ebp,DWORD PTR [esi]
  4048e1:	or     BYTE PTR [esi+0x15],cl
  4048e4:	mov    dl,cl
  4048e6:	adc    dl,ch
  4048e8:	xchg   edx,eax
  4048e9:	cmp    dl,0x0
  4048ec:	jno    0x40495e
  4048ee:	xor    edi,ecx
  4048f0:	fild   QWORD PTR [eax+0x1f]
  4048f3:	les    esp,FWORD PTR gs:[esp+eax*8]
  4048f7:	add    ecx,esp
  4048f9:	add    cl,al
  4048fb:	ret    
  4048fc:	push   ebp
  4048fd:	or     ecx,ebx
  4048ff:	mov    edi,0x0
	...
  404928:	sub    eax,0x21ffff76
  40492d:	jb     0x40493a
  40492f:	sti    
  404930:	and    DWORD PTR [edi-0x73],ebp
  404933:	test   BYTE PTR ds:0x3629224c,ah
  404939:	or     DWORD PTR [esi],eax
  40493b:	shl    DWORD PTR [edx+0xb],0x3
  40493f:	ret    
  404940:	ins    DWORD PTR es:[edi],dx
  404941:	jbe    0x404942
  404943:	jmp    FWORD PTR ds:0x2a0bf8b9
  404949:	mov    ecx,0x1d868dfa
  40494e:	xchg   edi,eax
  40494f:	dec    DWORD PTR [eax+0x4a]
  404952:	add    edx,DWORD PTR [esi-0x12]
  404955:	mov    dl,0xa
  404958:	loope  0x404931
  40495a:	mov    edi,0xff749dff
  40495f:	xor    ebx,DWORD PTR [ecx-0x55cc0600]
  404965:	or     BYTE PTR [edi+ecx*1-0x546c567b],0xb1
  40496d:	inc    ebp
  40496e:	cmp    cl,al
  404970:	repz add al,0x3
  404973:	retf   0x750d
  404976:	(bad)  
  404977:	jmp    FWORD PTR ds:0x1b0bf7b9
  40497d:	mov    ecx,0x150e8df9
  404982:	cmp    DWORD PTR [eax+0x5e037411],esp
  404988:	xchg   esi,eax
  404989:	mov    bl,0x15
	...
  4049b4:	dec    ebx
  4049b5:	lahf   
  4049b6:	fidivr DWORD PTR [edi-0x43bd84]
  4049bc:	cmp    BYTE PTR [eax+0x8],cl
  4049bf:	sti    
  4049c0:	cmp    BYTE PTR [ecx-0x72],cl
  4049c3:	test   BYTE PTR [edi+ebx*8+0x59],cl
  4049c7:	pop    ebx
  4049c8:	out    0x9e,al
  4049ca:	inc    ebp
  4049cb:	xor    BYTE PTR [edx-0x77fcfb1f],cl
  4049d1:	push   edx
  4049d2:	mov    esp,0xf01c44ff
  4049d7:	clc    
  4049d8:	push   eax
  4049d9:	sbb    al,dh
  4049db:	cli    
  4049dc:	(bad)  
  4049dd:	push   esp
  4049de:	adc    al,0x92
  4049e0:	jmp    DWORD PTR [esp+ecx*4-0x3d5382fd]
  4049e7:	ret    0x9f51
  4049ea:	sar    DWORD PTR [edi-0x4453ec],cl
  4049f0:	pop    eax
  4049f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049f2:	psubd  mm7,QWORD PTR [eax]
  4049f5:	fmul   DWORD PTR [ecx-0x4fbab374]
  4049fb:	out    dx,eax
  4049fc:	hlt    
  4049fd:	lahf   
  4049fe:	dec    ecx
  4049ff:	sub    BYTE PTR [edx],cl
  404a01:	bound  ecx,QWORD PTR [ebx]
  404a03:	add    edx,DWORD PTR [ecx]
  404a05:	cmp    al,0xbb
  404a07:	(bad)  
  404a08:	fsub   QWORD PTR [ebx-0x9]
  404a0b:	test   DWORD PTR [eax+0x69],0x34bef9f7
  404a12:	sbb    edx,ecx
  404a14:	es and al,0x81
  404a17:	add    eax,DWORD PTR [eax]
	...
  404a3d:	add    BYTE PTR [eax],al
  404a3f:	add    BYTE PTR ds:0x5ec3c4ac,bl
  404a45:	lahf   
  404a46:	fdivr  QWORD PTR [edi-0x44cc54]
  404a4c:	pop    eax
  404a4d:	psubq  mm3,QWORD PTR ss:[eax+0x39]
  404a52:	mov    DWORD PTR [esp+ecx*2-0x1cc649f7],eax
  404a59:	and    ch,dl
  404a5b:	inc    ecx
  404a5c:	sub    ecx,eax
  404a5e:	sub    DWORD PTR [edx],eax
  404a60:	dec    eax
  404a61:	(bad)  
  404a62:	mov    ?,WORD PTR [ebx-0x8b94d8c]
  404a68:	jae    0x404a68
  404a6a:	inc    eax
  404a6b:	mul    DWORD PTR [ecx-0x7c]
  404a6e:	pop    ebp
  404a6f:	adc    ebp,DWORD PTR [ebx-0x55]
  404a72:	std    
  404a73:	mov    ecx,0xc4e55b48
  404a78:	mov    edi,edi
  404a7a:	jmp    0x16f24f52
  404a7f:	mov    ebx,0xf11f63c
  404a84:	xor    esi,esi
  404a86:	add    BYTE PTR [ecx+0x46d501bf],cl
  404a8c:	dec    edx
  404a8d:	jmp    0x28c8:0x4349
  404a93:	or     ecx,DWORD PTR [eax-0x41]
  404a96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a97:	mov    edx,0xf6deb20c
  404a9c:	cld    
  404a9d:	std    
  404a9e:	iret   
  404a9f:	test   BYTE PTR [edx],0x84
  404aa2:	ins    DWORD PTR es:[edi],dx
  404aa3:	sbb    al,BYTE PTR [eax]
	...
  404ac9:	add    BYTE PTR [eax],al
  404acb:	add    BYTE PTR [edx+0x4849f117],ch
  404ad1:	push   ebx
  404ad2:	cmc    
  404ad3:	les    ecx,FWORD PTR [eax]
  404ad5:	sbb    al,0xea
  404ad7:	fcomp  QWORD PTR [ecx+esi*4-0xa2b4552]
  404ade:	mov    ds:0x9ff5d00e,al
  404ae3:	mov    bh,cl
  404ae5:	or     DWORD PTR [ebx+0x39],ebp
  404ae8:	sbb    BYTE PTR [edx-0x37a4be16],bh
  404aee:	test   eax,0x3ec64801
  404af3:	mov    edx,0x7600b1a4
  404af8:	xchg   ebp,eax
  404af9:	mov    al,0xb
  404afb:	jno    0x404a9a
  404afd:	scas   al,BYTE PTR es:[edi]
  404afe:	lea    edi,[ebp+0x39]
  404b01:	cld    
  404b02:	icebp  
  404b03:	and    eax,DWORD PTR [edx]
  404b05:	push   es
  404b06:	push   esi
  404b07:	add    eax,0xea0ac686
  404b0c:	cwde   
  404b0d:	jno    0x404b0e
  404b0f:	inc    esi
  404b10:	mov    cl,0xb1
  404b12:	xor    eax,DWORD PTR [edx+0x55]
  404b15:	scas   eax,DWORD PTR es:[edi]
  404b16:	xor    esi,DWORD PTR [ecx]
  404b18:	rol    DWORD PTR [edi+ecx*1+0x2ad97e72],cl
  404b1f:	jmp    0xc51:0x28c10102
  404b26:	retf   0x156
  404b29:	mov    cl,0xff
  404b2b:	push   cs
  404b2c:	cmp    eax,0xbb9
	...
  404b55:	add    BYTE PTR [eax],al
  404b57:	add    BYTE PTR ds:0x415d8db3,dh
  404b5d:	call   0xc55e:0xced6fd3
  404b64:	bswap  ebp
  404b66:	adc    eax,0x7d84f1ea
  404b6b:	icebp  
  404b6c:	dec    ecx
  404b6d:	or     BYTE PTR [ecx],al
  404b6f:	ss dec ebx
  404b71:	or     cl,BYTE PTR [edi-0x1f]
  404b74:	dec    ecx
  404b75:	pop    eax
  404b76:	or     al,0xc6
  404b78:	test   BYTE PTR [ebp+0x8f378d],ch
  404b7e:	mov    esi,esp
  404b80:	sahf   
  404b81:	mov    al,0xff
  404b83:	adc    esi,DWORD PTR [eax+0x54]
  404b86:	pop    eax
  404b87:	inc    esi
  404b88:	jno    0x404b4c
  404b8a:	ret    0x48ed
  404b8d:	push   esi
  404b8e:	mov    eax,DWORD PTR [ebp+0x36f8c5c6]
  404b94:	sbb    DWORD PTR [edi+eax*8+0x0],ebx
  404b98:	pop    edi
  404b99:	jno    0x404b9b
  404b9b:	add    BYTE PTR [edx-0x598a00f4],dh
  404ba1:	add    DWORD PTR [ebp-0x8],0x653fb0ed
  404ba8:	jecxz  0x404bb6
  404baa:	add    DWORD PTR [ebx],esp
  404bac:	scas   eax,DWORD PTR es:[edi]
  404bad:	jmp    0xfee5178
  404bb2:	inc    ecx
  404bb3:	add    bl,ch
  404bb5:	sbb    eax,0xb01defcd
  404bba:	inc    edi
  404bbb:	add    BYTE PTR gs:[eax],al
	...
  404be2:	add    BYTE PTR [eax],al
  404be4:	mov    bl,0xc
  404be6:	(bad)  
  404be7:	(bad)  
  404be9:	mov    edi,es
  404beb:	add    eax,0x410fb6
  404bf0:	lods   al,BYTE PTR ds:[esi]
  404bf1:	inc    eax
  404bf2:	xor    dl,BYTE PTR [eax]
  404bf4:	ins    DWORD PTR es:[edi],dx
  404bf5:	mov    al,0x4f
  404bf7:	gs repz or esi,eax
  404bfb:	loope  0x404c6d
  404bfd:	(bad)  
  404bfe:	jmp    0x404c1c
  404c00:	mov    ecx,0xef0307f0
  404c05:	ja     0x404c71
  404c07:	inc    eax
  404c08:	retf   0x653f
  404c0b:	inc    ecx
  404c0c:	and    bl,BYTE PTR [eax+ebp*8+0x63]
  404c10:	sti    
  404c11:	jo     0x404c12
  404c13:	sub    DWORD PTR [edi],0x71
  404c16:	inc    eax
  404c17:	call   0x4057c2
  404c1c:	popa   
  404c1d:	out    0xf7,eax
  404c1f:	inc    eax
  404c20:	xor    ebx,edx
  404c22:	mov    ebx,DWORD PTR [ebp+0xa]
  404c25:	test   ebx,eax
  404c27:	inc    eax
  404c28:	imul   ebp,edi,0x712f0307
  404c2e:	push   ebx
  404c2f:	push   0x41100e
  404c34:	sbb    BYTE PTR [ebp+0x3c],0xe9
  404c38:	dec    ebx
  404c39:	xchg   edi,eax
  404c3a:	mov    eax,0xc17e1601
  404c3f:	adc    DWORD PTR [edi],0xfffffffd
  404c42:	inc    edx
  404c43:	add    bl,cl
  404c45:	and    ch,BYTE PTR [edi+esi*1+0x0]
	...
  404c70:	adc    eax,0x43eb84db
  404c75:	mov    dh,0xd
  404c77:	sub    al,0x2d
  404c7a:	push   ds
  404c7b:	inc    ecx
  404c7c:	dec    ebx
  404c7d:	mov    ds:0x49757844,al
  404c82:	mov    WORD PTR [eax],es
  404c84:	dec    ebx
  404c85:	mov    ds:0x466cc87c,al
  404c8a:	mov    eax,0xd7649eb
  404c8f:	sub    BYTE PTR [eax+0x4b411e25],0xa2
  404c96:	inc    esp
  404c97:	js     0x404cee
  404c99:	cmp    bh,BYTE PTR [esi]
  404c9b:	or     al,0x2
  404c9d:	mov    ecx,0xd34b0003
  404ca2:	aad    0xf7
  404ca4:	sub    dl,al
  404ca6:	retf   
  404ca7:	sgdtd  [ebx+edx*4+0x65]
  404cac:	mov    ah,BYTE PTR [eax+0x7dcf158a]
  404cb2:	inc    edx
  404cb3:	add    BYTE PTR [ebx],ah
  404cb5:	cdq    
  404cb6:	add    eax,DWORD PTR [eax]
  404cb8:	dec    ebx
  404cb9:	add    DWORD PTR [ebp+eiz*2-0x76],0x87158aa0
  404cc1:	cmp    eax,0xcdc00045
  404cc6:	dec    ebx
  404cc7:	mov    ah,BYTE PTR gs:[eax+0x7a54c806]
  404cce:	pop    es
  404ccf:	leave  
  404cd0:	test   al,0xe0
  404cd2:	and    BYTE PTR [ecx+0x0],al
	...
  404cf9:	add    BYTE PTR [eax],al
  404cfb:	add    BYTE PTR [ebx+0x29],cl
  404cfe:	adc    DWORD PTR [esi+eiz*2+0x9],eax
  404d02:	sub    BYTE PTR [edx+edx*8],al
  404d05:	cld    
  404d06:	xor    BYTE PTR [ecx],ah
  404d08:	or     cl,BYTE PTR [ecx]
  404d0a:	dec    eax
  404d0b:	dec    eax
  404d0c:	cs dec eax
  404d0e:	jmp    0xc99a39d
  404d13:	inc    ebp
  404d14:	dec    ebx
  404d15:	(bad)  
  404d16:	mov    al,0x7
  404d18:	xchg   ecx,eax
  404d19:	push   0x25
  404d1b:	and    DWORD PTR [edx],ecx
  404d1d:	or     DWORD PTR [eax+0x11],esp
  404d20:	sti    
  404d21:	and    ebp,DWORD PTR [eax+0x5e14f103]
  404d27:	xor    DWORD PTR [ebx+0x21],ebx
  404d2a:	test   eax,0x41090a20
  404d2f:	xchg   ecx,eax
  404d30:	arpl   WORD PTR [esi+0x4e055b46],bp
  404d36:	xor    dl,al
  404d38:	dec    edi
  404d39:	or     DWORD PTR [edx+ecx*4-0x43da7599],ebx
  404d40:	xchg   edx,eax
  404d41:	mov    cl,0x26
  404d43:	mov    bh,0x44
  404d45:	and    ch,0xc8
  404d48:	xlat   BYTE PTR ds:[ebx]
  404d49:	and    ebp,DWORD PTR [eax+0x1c14c003]
  404d4f:	pushf  
  404d50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d51:	dec    eax
  404d52:	jmp    0x333e605d
  404d57:	lea    eax,[edi-0x44]
  404d5a:	pop    ebp
  404d5b:	and    DWORD PTR [edx+0x106009],ecx
	...
  404d85:	add    BYTE PTR [eax],al
  404d87:	add    dh,bh
  404d89:	nop
  404d8a:	dec    esp
  404d8b:	inc    ebp
  404d8c:	dec    ebx
  404d8d:	dec    eax
  404d8e:	push   esp
  404d8f:	fld    st(2)
  404d91:	enter  0xb6d6,0xf4
  404d95:	and    ebp,0x2826c388
  404d9b:	add    al,0xd0
  404d9d:	adc    al,0x6c
  404d9f:	das    
  404da0:	gs dec eax
  404da2:	add    cl,ch
  404da4:	(bad)  [ecx]
  404da6:	lea    ecx,ds:0xda00482d
  404dac:	push   esp
  404dad:	jl     0x404e03
  404daf:	pop    es
  404db0:	push   es
  404db1:	or     DWORD PTR [ebx],esi
  404db3:	stos   DWORD PTR es:[edi],eax
  404db4:	lahf   
  404db5:	enter  0xe589,0xc3
  404db9:	xchg   esp,eax
  404dba:	data16 sub BYTE PTR [edi+0x48],cl
  404dbe:	jne    0x404d57
  404dc0:	ror    DWORD PTR [ebx],1
  404dc2:	inc    eax
  404dc3:	or     al,0xe
  404dc5:	or     DWORD PTR [ebx+0x41244cb4],ecx
  404dcb:	jmp    0xc48839a1
  404dd0:	pop    es
  404dd1:	or     edi,edi
  404dd3:	sbb    al,0x3
  404dd5:	and    al,0x41
  404dd7:	jmp    0x473c91a1
  404ddc:	pop    ebx
  404ddd:	cmp    eax,0x7e48a865
  404de2:	inc    ebp
  404de3:	xor    edi,edx
  404de5:	pushf  
  404de6:	jmp    FWORD PTR [esi]
  404de8:	xchg   ebp,eax
  404de9:	adc    esi,0x72
	...
  404e13:	add    BYTE PTR ds:0xfecad2b5,al
  404e19:	call   0xc7816372
  404e1e:	add    esp,ebp
  404e20:	ret    
  404e21:	gs gs test al,0x48
  404e25:	or     BYTE PTR [ebp+0x1],al
  404e28:	dec    ebx
  404e29:	xchg   edx,eax
  404e2a:	jns    0x404e97
  404e2c:	jb     0x404dda
  404e2e:	jne    0x404e1d
  404e30:	mov    BYTE PTR [esi-0x8],0x70
  404e34:	cmp    al,0xad
  404e36:	shl    DWORD PTR [edi+0x62fe8055],0xba
  404e3d:	retf   0xe4c3
  404e40:	dec    ebx
  404e41:	rol    DWORD PTR [ecx+0x0],1
  404e44:	daa    
  404e45:	sar    DWORD PTR [ecx-0x896214],0x8b
  404e4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e4d:	adc    bh,0x33
  404e50:	daa    
  404e51:	jno    0x404e86
  404e53:	ret    0xacb1
  404e56:	mov    esp,?
  404e58:	inc    edi
  404e59:	dec    eax
  404e5a:	add    BYTE PTR [ebx],al
  404e5c:	ins    DWORD PTR es:[di],dx
  404e5e:	add    eax,0x6ed0c9a1
  404e63:	jmp    DWORD PTR [edi-0x35ba708c]
  404e69:	cmp    BYTE PTR [ebp-0x4],0xe3
  404e6d:	imul   ebx,DWORD PTR [esi],0xffffff8b
  404e70:	sbb    al,0x82
  404e72:	repz shl DWORD PTR [ecx],0xac
  404e76:	add    bl,al
	...
  404ea0:	mov    bl,0xdb
  404ea2:	iret   
  404ea3:	mov    ecx,0xffff760e
  404ea8:	jmp    0xe95da1a
  404ead:	add    al,BYTE PTR [ebp-0x4]
  404eb0:	push   ecx
  404eb1:	mov    esi,0xca69c623
  404eb6:	add    eax,DWORD PTR [edi+ebp*8]
  404eb9:	dec    eax
  404eba:	inc    cx
  404ebc:	xor    cl,BYTE PTR [ecx]
  404ebe:	inc    ebp
  404ebf:	clc    
  404ec0:	daa    
  404ec1:	aam    0xbc
  404ec3:	sbb    ebp,DWORD PTR [ebp-0x72038a8a]
  404ec9:	in     al,dx
  404eca:	test   DWORD PTR [ecx-0x393e8c31],0x8bfe80fc
  404ed4:	adc    edi,eax
  404ed6:	ret    
  404ed7:	add    eax,0x7541d021
  404edc:	mov    ecx,0x1dffec2e
  404ee1:	jne    0x404e6e
  404ee3:	(bad)  
  404ee4:	dec    ebx
  404ee5:	daa    
  404ee6:	int3   
  404ee7:	xor    eax,DWORD PTR [esi+0x48c1f0be]
  404eed:	sahf   
  404eee:	xchg   BYTE PTR [ebp+eiz*2-0x71fcfc1f],dl
  404ef5:	jp     0x404ef5
  404ef7:	aad    0xa
  404ef9:	inc    eax
  404efa:	retf   0x3eff
  404efd:	data16 test BYTE PTR [ebp-0x3d],al
  404f01:	cmp    BYTE PTR [esi],dh
  404f03:	cld    
	...
  404f2c:	mov    bl,BYTE PTR [ebx+0x15]
  404f2f:	mov    ebp,DWORD PTR [ebp-0x773e4fda]
  404f35:	pushf  
  404f36:	add    al,bl
  404f38:	or     dh,BYTE PTR [ebp-0x1dc9fe2d]
  404f3e:	push   ds
  404f3f:	inc    ecx
  404f40:	dec    ebx
  404f41:	mov    eax,ds:0x60ee43ee
  404f46:	add    eax,DWORD PTR [ecx]
  404f48:	ds jp  0x404f69
  404f4b:	inc    ecx
  404f4c:	dec    ebx
  404f4d:	daa    
  404f4e:	ds cld 
  404f50:	dec    edx
  404f51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f52:	inc    edi
  404f53:	or     ah,BYTE PTR gs:[edx-0x5f9cba78]
  404f5a:	dec    BYTE PTR [edi-0x12]
  404f5d:	pusha  
  404f5e:	add    ecx,ecx
  404f60:	mov    BYTE PTR [eax+ecx*4+0xb8e44ec],dl
  404f67:	call   0x437926
  404f6c:	enter  0xb418,0x75
  404f70:	gs sti 
  404f72:	sub    eax,0x7a973308
  404f77:	add    BYTE PTR [ebx-0x49],cl
  404f7a:	ret    
  404f7b:	jne    0x404fc9
  404f7d:	clc    
  404f7e:	mov    bl,0xff
  404f80:	or     al,0x9c
  404f82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f83:	adc    edx,eax
  404f85:	or     DWORD PTR [ecx],ebp
  404f87:	add    bl,bl
  404f89:	(bad)  
  404f8a:	test   al,0x39
  404f8c:	dec    esp
  404f8d:	jno    0x404f65
  404f8f:	mov    bl,0x0
	...
  404fb5:	add    BYTE PTR [eax],al
  404fb7:	add    ah,ch
  404fb9:	stos   BYTE PTR es:[edi],al
  404fba:	ret    0xd008
  404fbd:	or     DWORD PTR [edx+0x4],esi
  404fc0:	adc    cl,al
  404fc2:	in     eax,0x3
  404fc4:	jle    0x405044
  404fc6:	lds    eax,FWORD PTR [edi-0x8e545f9]
  404fcc:	mov    eax,ds:0x4a1def1f
  404fd1:	pop    ds
  404fd2:	jmp    0x404f6f
  404fd4:	jno    0x405046
  404fd6:	jmp    0x8ef217de
  404fdb:	cmp    DWORD PTR [ecx-0x62],ecx
  404fde:	or     edi,DWORD PTR [edi-0x7d]
  404fe1:	pop    ds
  404fe2:	fld    DWORD PTR [eax-0x63e646f2]
  404fe8:	ret    
  404fe9:	mov    ds:0xc1edb36e,eax
  404fee:	lods   al,BYTE PTR ds:[esi]
  404fef:	mov    bl,0x49
  404ff1:	or     DWORD PTR [edx+0x41],esi
  404ff4:	pop    ebx
  404ff5:	and    DWORD PTR [edx+ebp*1],0xffffffc2
  404ff9:	cmp    al,0x5b
  404ffb:	xchg   esi,esp
  404ffd:	cld    
  404ffe:	call   0xa4be963a
  405003:	jmp    DWORD PTR [ecx+0xa]
  405006:	push   0x31
  405008:	aas    
  405009:	or     DWORD PTR [ebp+edi*8+0x3f12bc9],esi
  405010:	mov    dh,0x5
  405012:	adc    ch,cl
  405014:	and    edx,edi
  405016:	adc    eax,0x7da14339
  40501b:	mov    dl,0x0
	...
  405041:	add    BYTE PTR [eax],al
  405043:	add    BYTE PTR [edx+ebp*4],ah
  405046:	push   0xffffffac
  405048:	sbb    al,0x34
  40504a:	jmp    0x404fea
  40504c:	aas    
  40504d:	add    BYTE PTR [eax],0xac
  405050:	aam    0x1e
  405052:	adc    BYTE PTR [edx+edx*4-0x47],bl
  405056:	push   eax
  405057:	cmp    bl,bh
  405059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40505a:	mov    eax,0xf88648e9
  40505f:	(bad)  
  405060:	xor    eax,DWORD PTR [ecx]
  405062:	push   ebx
  405063:	sar    ecx,0x70
  405066:	add    cl,ch
  405068:	aad    0xce
  40506a:	mov    ebp,DWORD PTR [edx-0x1a3d3f7b]
  405070:	dec    eax
  405071:	push   esp
  405072:	mov    edi,DWORD PTR [ebp+0x2483521d]
  405078:	push   edi
  405079:	or     DWORD PTR [ebp-0xe],esi
  40507c:	and    BYTE PTR [eax],cl
  40507e:	add    cl,ch
  405080:	dec    eax
  405081:	dec    edx
  405082:	pop    ebx
  405083:	mov    al,ds:0x71fffc8e
  405088:	pop    ebx
  405089:	std    
  40508a:	mov    edx,0x948e9
  40508f:	add    eax,DWORD PTR [edi-0x56]
  405092:	jne    0x40506d
  405094:	and    DWORD PTR [edx+0x78e0f175],ebp
  40509a:	mov    eax,0xc08448e9
  40509f:	xlat   BYTE PTR ds:[ebx]
  4050a0:	push   esp
  4050a1:	push   es
  4050a2:	clc    
  4050a3:	add    BYTE PTR [edx],dl
  4050a5:	sbb    DWORD PTR [ebx+0xc4],eax
	...
  4050cf:	add    BYTE PTR [eax],bh
  4050d1:	or     DWORD PTR [ebp-0x1a],esi
  4050d4:	in     eax,0x7
  4050d6:	add    cl,ch
  4050d8:	dec    eax
  4050d9:	sahf   
  4050da:	add    al,BYTE PTR [edx+0x16]
  4050dd:	xchg   ebp,eax
  4050de:	ret    
  4050df:	(bad)  
  4050e0:	(bad)  
  4050e1:	rol    dl,cl
  4050e3:	in     eax,dx
  4050e4:	dec    eax
  4050e5:	mov    eax,DWORD PTR ds:0xff4cdc7
  4050ec:	fldcw  WORD PTR [eax-0x5760ff01]
  4050f2:	mov    es,WORD PTR [ebp-0xa5e2]
  4050f8:	pop    ebp
  4050f9:	xchg   ecx,eax
  4050fa:	clc    
  4050fb:	(bad)  
  4050fc:	cmc    
  4050fd:	pop    edx
  4050fe:	add    BYTE PTR [eax],al
  405100:	repnz or al,0xc7
  405103:	test   DWORD PTR [esi],edx
  405105:	pop    esp
  405106:	(bad)  
  405107:	jmp    ebx
  405109:	or     al,0x0
  40510b:	add    BYTE PTR [edi+0x5ff0090],al
  405111:	pop    ebx
  405112:	push   DWORD PTR [ebp-0x26]
  405115:	mov    DWORD PTR [eax],eax
  405117:	lea    ebx,[edi+0x61]
  40511a:	(bad)  
  40511b:	push   ebp
  40511d:	cmp    eax,0xd58006a
  405122:	lea    eax,[ebp-0xa42a]
  405128:	jb     0x405131
  40512a:	add    al,ch
  40512c:	inc    esi
  40512d:	xor    eax,0x75310000
  405132:	push   DWORD PTR [eax+eax*1+0x0]
	...
  40515a:	add    BYTE PTR [eax],al
  40515c:	scas   al,BYTE PTR es:[edi]
  40515d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40515e:	mov    edi,0xbf9d9e75
  405163:	jmp    0x4051d4
  405165:	xor    al,0x1
  405167:	add    BYTE PTR [edx+0xc],dh
  40516a:	leave  
  40516b:	ret    0xc7a
  40516e:	push   ebp
  40516f:	mov    eax,DWORD PTR [esi]
  405171:	mov    es,esp
  405173:	cld    
  405174:	mov    eax,ds:0xa86adac5
  405179:	pop    ecx
  40517a:	jne    0x405184
  40517c:	cli    
  40517d:	daa    
  40517e:	(bad)  
  40517f:	call   DWORD PTR ds:0xde74bfa6
  405185:	add    eax,0xa3dfff5a
  40518a:	out    0x7f,eax
  40518c:	push   ebp
  40518d:	pop    edx
  40518e:	dec    DWORD PTR [ebx]
  405190:	dec    ebx
  405191:	repnz add dh,BYTE PTR ss:[eax]
  405195:	outs   dx,BYTE PTR ds:[esi]
  405196:	sbb    eax,0x7eb1b100
  40519b:	inc    ebp
  40519c:	adc    al,0x82
  40519e:	mov    al,0x75
  4051a0:	inc    ebx
  4051a1:	or     al,BYTE PTR [edi]
  4051a3:	mov    eax,0xc086b24b
  4051a8:	jge    0x4051ac
  4051aa:	jge    0x4051f1
  4051ac:	pop    edi
  4051ad:	jmp    0x174:0xb476ff46
  4051b4:	rcr    ah,1
  4051b6:	dec    DWORD PTR [edx+0x6a043c39]
  4051bc:	dec    edx
  4051bd:	xor    eax,0xff46
	...
  4051e6:	add    BYTE PTR [eax],al
  4051e8:	jnp    0x405249
  4051ea:	ss or  al,0xc4
  4051ed:	add    edx,DWORD PTR [edi+edi*8]
  4051f0:	ss sahf 
  4051f2:	fwait
  4051f3:	mov    eax,0x3bb08697
  4051f8:	push   es
  4051f9:	mov    ds:0xadb00235,al
  4051fe:	xchg   bl,bl
  405200:	pop    ss
  405201:	ds jl  0x4051c7
  405204:	lock pop eax
  405206:	lds    edx,FWORD PTR [ebx+ecx*2]
  405209:	add    eax,0x6dcaec7d
  40520e:	add    edi,eax
  405210:	jl     0x405240
  405212:	push   esp
  405213:	sub    edx,DWORD PTR [eax-0x900b245]
  405219:	test   eax,0x5664189b
  40521e:	mov    al,0xb
  405220:	mov    esp,DWORD PTR [ebp+0x28]
  405223:	push   0xfffffff1
  405225:	out    0x35,al
  405227:	or     BYTE PTR [ebx-0x55],ah
  40522a:	mov    al,0xff
  40522c:	inc    esp
  40522d:	lods   al,BYTE PTR ds:[esi]
  40522e:	ret    
  40522f:	jne    0x40527a
  405231:	or     DWORD PTR [edx],edx
  405233:	pop    eax
  405234:	retf   0xf924
  405237:	add    eax,DWORD PTR [ebx+0x9]
  40523a:	jmp    0xe9a19e78
  40523f:	sti    
  405240:	sbb    al,0xa7
  405242:	adc    al,BYTE PTR [eax+eax*8]
  405245:	dec    esp
  405246:	fstp   DWORD PTR ds:0x8664394b
	...
  405274:	dec    ebx
  405275:	mov    eax,ds:0xa69bafee
  40527a:	pop    esp
  40527b:	cld    
  40527c:	in     al,dx
  40527d:	and    dl,BYTE PTR [esi-0x5673b4fc]
  405283:	sub    eax,0x38fdb249
  405288:	dec    eax
  405289:	dec    edx
  40528a:	shl    bh,cl
  40528c:	test   BYTE PTR [edx-0x43fffec],dl
  405292:	inc    edx
  405293:	add    al,0x1b
  405295:	xchg   esp,eax
  405296:	fs add al,0xc3
  405299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40529a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40529b:	push   esp
  40529c:	mov    ah,0x1c
  40529e:	in     eax,dx
  40529f:	scas   al,BYTE PTR es:[edi]
  4052a0:	sbb    ecx,edi
  4052a2:	xor    ch,bl
  4052a4:	psubw  mm5,QWORD PTR [ecx+0x31]
  4052a8:	cmp    ecx,DWORD PTR [ecx]
  4052aa:	cld    
  4052ab:	add    cl,BYTE PTR [eax]
  4052ad:	mov    dl,0xe5
  4052af:	mov    BYTE PTR [eax+0x1d],dh
  4052b2:	push   eax
  4052b3:	jnp    0x40523d
  4052b5:	inc    edx
  4052b6:	mov    al,ds:0xbc094fc2
  4052bb:	jp     0x405324
  4052bd:	mov    ah,BYTE PTR ds:0x55da14ac
  4052c3:	sbb    cl,BYTE PTR [ebx+0x3e]
  4052c6:	dec    esi
  4052c7:	cmp    DWORD PTR [ebx-0x4f],edx
  4052ca:	sbb    cl,bl
  4052cc:	push   esp
  4052cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052ce:	es dec ecx
  4052d0:	dec    edi
  4052d1:	or     DWORD PTR [eax],eax
  4052d3:	jmp    0x94cb5c20
	...
  405300:	inc    eax
  405301:	xchg   ebx,eax
  405302:	adc    dh,BYTE PTR [edx+eax*4-0x5f]
  405306:	push   eax
  405307:	xchg   ebx,eax
  405308:	inc    esp
  405309:	xchg   esp,eax
  40530a:	inc    ebp
  40530b:	adc    eax,0xe175a67f
  405310:	in     eax,dx
  405311:	cmp    cl,BYTE PTR [esi+ebp*4]
  405314:	iret   
  405315:	and    edi,esp
  405317:	in     al,dx
  405318:	adc    dl,BYTE PTR ds:0x8b027d0a
  40531e:	jge    0x405311
  405320:	dec    eax
  405321:	sbb    al,0xc9
  405323:	sbb    cl,BYTE PTR [edi]
  405325:	mov    dl,0x5
  405327:	jb     0x40532e
  405329:	mov    al,al
  40532b:	jmp    0x3c48:0xe5c2d095
  405332:	mov    edx,ebp
  405334:	leave  
  405335:	int3   
  405336:	hlt    
  405337:	sbb    dh,BYTE PTR [ecx+esi*1-0x68]
  40533b:	repz dec eax
  40533d:	or     eax,ebp
  40533f:	fsubrp st(4),st
  405341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405342:	push   DWORD PTR [eax+0x3]
  405345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405346:	lea    esp,[ebx+esi*8]
  405349:	cmp    al,ch
  40534b:	aad    0x91
  40534d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40534e:	(bad)  
  40534f:	ficom  DWORD PTR [ecx-0x6eece1ce]
  405355:	sub    eax,0x9488300
  40535a:	(bad)  
  40535b:	cld    
  40535c:	mov    esp,0xe0e175a5
  405361:	mov    esi,?
  405363:	data16 add BYTE PTR [eax],al
	...
  40538a:	add    BYTE PTR [eax],al
  40538c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40538d:	mov    eax,eax
  40538f:	out    dx,al
  405390:	(bad)  
  405391:	fadd   DWORD PTR [eax]
  405393:	jmp    0x55b5f9e0
  405398:	rcl    BYTE PTR [ebx+ebx*8+0x3d770d00],0x0
  4053a0:	or     BYTE PTR [edx],cl
  4053a2:	add    BYTE PTR [esi+0x37],dh
  4053a5:	xchg   BYTE PTR [ecx+eax*1],bl
  4053a8:	xor    cl,BYTE PTR [ecx]
  4053aa:	push   DWORD PTR [ebp+0x56]
  4053ad:	sbb    BYTE PTR [edx-0x1],0x4d
  4053b1:	jae    0x405338
  4053b3:	rol    dh,0xcc
  4053b6:	push   DWORD PTR [ebp+0x36]
  4053b9:	or     BYTE PTR [ebp-0x748cb223],0x55
  4053c0:	push   ss
  4053c1:	and    edx,DWORD PTR [edx]
  4053c3:	push   0xfffffff2
  4053c5:	add    BYTE PTR [ecx+eiz*1],dh
  4053c8:	repnz or bh,bh
  4053cb:	jne    0x4053bb
  4053cd:	jbe    0x405444
  4053cf:	hlt    
  4053d0:	or     eax,0x37c70c38
  4053d5:	jne    0x4053d7
  4053d7:	add    dl,dh
  4053d9:	or     BYTE PTR [eax-0x13],ch
  4053dc:	cmp    DWORD PTR [eax+0x0],ecx
  4053df:	call   DWORD PTR [edi]
  4053e1:	pop    ecx
  4053e2:	call   0x4d9800
  4053e7:	push   ebx
  4053e8:	test   eax,0x393674c8
  4053ed:	jne    0x405457
  4053ef:	in     eax,dx
	...
  405418:	cdq    
  405419:	inc    edi
  40541a:	add    al,ch
  40541c:	inc    edx
  40541d:	and    DWORD PTR [eax],eax
  40541f:	add    BYTE PTR [ecx+0x19475770],dh
  405425:	(bad)  
  405426:	mov    ecx,0x87394
  40542b:	mov    al,0x6f
  40542d:	pop    edx
  40542e:	scas   al,BYTE PTR es:[edi]
  40542f:	mov    eax,0xfffff816
  405434:	pop    ecx
  405435:	enter  0x47c6,0xd
  405439:	or     eax,0x4a4b5357
  40543e:	mov    cl,0xb5
  405440:	dec    ebx
  405441:	mov    dl,0x7a
  405443:	inc    ebp
  405444:	push   ebx
  405445:	imul   eax,ebp,0x47
  405448:	dec    esp
  405449:	mov    ch,0x4c
  40544b:	pop    ebx
  40544c:	mov    bl,0xdd
  40544e:	fadd   DWORD PTR [eax+0x4b]
  405451:	repz ss cld 
  405454:	and    esp,edx
  405456:	jbe    0x405458
  405458:	dec    ebx
  405459:	pop    edi
  40545a:	clc    
  40545b:	mov    edi,0xf878769f
  405460:	mov    bl,0x15
  405462:	fld    DWORD PTR [eax+0x4b]
  405465:	cli    
  405466:	in     al,0xb3
  405468:	dec    ebx
  405469:	mov    dl,0x0
  40546b:	clc    
  40546c:	pushf  
  40546d:	jae    0x4054e7
  40546f:	ffreep st(2)
  405471:	cmp    eax,0x824b0013
  405476:	(bad)  
  405477:	icebp  
  405478:	popf   
  405479:	imul   edx,DWORD PTR [edi+0x11],0x0
	...
  4054a3:	add    BYTE PTR [ebx-0x4e],cl
  4054a6:	fadd   st,st(0)
  4054a8:	add    eax,0x7c00aceb
  4054ad:	call   FWORD PTR [ebx-0x539d2699]
  4054b3:	mov    ebx,DWORD PTR [esi]
  4054b5:	ret    0xd1f8
  4054b8:	aaa    
  4054b9:	scas   al,BYTE PTR es:[edi]
  4054ba:	jp     0x4054be
  4054bc:	mov    al,ds:0xbae853b3
  4054c1:	(bad)  
  4054c2:	lods   al,BYTE PTR ds:[esi]
  4054c3:	inc    DWORD PTR [esp+esi*2]
  4054c6:	inc    esp
  4054c7:	dec    DWORD PTR [esi-0xd]
  4054ca:	dec    eax
  4054cb:	call   FWORD PTR [esi]
  4054cd:	es fwait
  4054cf:	and    eax,0x83ac226e
  4054d4:	push   es
  4054d5:	sbb    al,BYTE PTR [ebx]
  4054d7:	ja     0x40551d
  4054d9:	imul   eax,DWORD PTR [esi-0x8],0x4b
  4054dd:	or     ecx,ebp
  4054df:	arpl   WORD PTR [ebx-0x5c],cx
  4054e2:	aam    0xab
  4054e4:	fs sbb eax,0x10d6ac5d
  4054ea:	inc    ecx
  4054eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054ec:	push   esi
  4054ed:	mov    ds:0x9cd6ac46,eax
  4054f2:	push   ecx
  4054f3:	xchg   BYTE PTR [ecx],ah
  4054f5:	mov    ds:0x1cfcf836,eax
  4054fa:	jmp    0x405494
  4054fc:	push   eax
  4054fd:	push   cs
  4054fe:	sub    DWORD PTR [edi],esi
  405500:	push   esp
  405501:	mov    ?,WORD PTR [edi+esi*4+0x3615f7d0]
	...
  405530:	dec    edi
  405531:	mov    ds:0x3814b794,al
  405536:	mov    ebp,0xe4220b86
  40553b:	push   0x3e9094a
  405540:	sar    BYTE PTR [esi*8+0x5ca25977],1
  405547:	mov    al,0xec
  405549:	aaa    
  40554a:	icebp  
  40554b:	stos   BYTE PTR es:[edi],al
  40554c:	pop    esi
  40554d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40554e:	sar    DWORD PTR [edi-0x17],0xa2
  405552:	into   
  405553:	jg     0x40555d
  405555:	inc    ebx
  405556:	and    bh,BYTE PTR [ebp+0x50e91609]
  40555c:	shl    BYTE PTR [ebp+0x3afbc06a],1
  405562:	sbb    bl,bh
  405564:	xchg   ecx,eax
  405565:	xor    ecx,ebp
  405567:	jecxz  0x405515
  405569:	mov    ds:0xa2a98291,al
  40556e:	xchg   esi,eax
  40556f:	jge    0x405577
  405571:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405572:	add    DWORD PTR [ebx+ebp*2],eax
  405575:	or     ecx,ebp
  405577:	fwait
  405578:	adc    ah,BYTE PTR [edi+0x4cd2ab7e]
  40557e:	add    BYTE PTR ds:0xe920095f,bh
  405584:	dec    eax
  405585:	mov    cl,0x6c
  405587:	dec    ebx
  405588:	mov    al,ds:0xeca489a2
  40558d:	xchg   ebx,eax
  40558e:	jge    0x4055b9
  405590:	out    dx,al
  405591:	in     al,0xff
  405593:	call   0x405598
	...
  4055bc:	dec    eax
  4055bd:	(bad)  
  4055be:	mov    edi,0x45c9ed3a
  4055c3:	sub    DWORD PTR [ebx],esi
  4055c5:	mov    ds:0x4c09e9ff,al
  4055ca:	aam    0x2e
  4055cc:	inc    eax
  4055cd:	or     DWORD PTR [eax],eax
  4055cf:	mov    bl,BYTE PTR cs:[ecx+0x948feff]
  4055d6:	call   FWORD PTR [esp+eiz*8-0x1fc6ba6f]
  4055dd:	sbb    esi,DWORD PTR [esi+esi*2-0x5b724a76]
  4055e4:	or     BYTE PTR [ecx],bh
  4055e6:	push   0x800948e9
  4055eb:	or     DWORD PTR [eax-0x5e],0x75
  4055ef:	icebp  
  4055f0:	shl    BYTE PTR [esi-0x4c],1
  4055f3:	jmp    0x5e006440
  4055f8:	dec    ecx
  4055f9:	xchg   BYTE PTR [ebp-0x47],bh
  4055fc:	dec    eax
  4055fd:	sbb    al,0x5
  4055ff:	rcl    BYTE PTR [edx-0x7616fff8],1
  405605:	dec    ebx
  405606:	mov    al,0xb6
  405608:	push   ecx
  405609:	or     DWORD PTR [eax],eax
  40560b:	pop    esp
  40560c:	or     ebx,DWORD PTR [ecx+0x50]
  40560f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405610:	jnp    0x405677
  405612:	push   0x800948e9
  405617:	fs or  ecx,ecx
  40561a:	push   eax
  40561b:	and    DWORD PTR [ebx+0x5d],0x0
	...
  405646:	add    BYTE PTR [eax],al
  405648:	mov    ds:0x6f75bfa2,al
  40564d:	test   BYTE PTR [ecx-0x74fa8e00],ch
  405653:	inc    ebp
  405654:	ds enter 0x0,0xf7
  405659:	lock mov edi,0xd46b9
  40565f:	add    BYTE PTR [ecx-0x33],al
  405662:	rep stos BYTE PTR es:[edi],al
  405664:	sub    eax,0x623cc049
  405669:	add    eax,0x30ffff00
  40566e:	pop    DWORD PTR [ebp-0x7a]
  405671:	retf   
  405672:	inc    ebp
  405673:	aam    0x65
  405675:	adc    eax,DWORD PTR [eax]
  405677:	add    BYTE PTR [ebp+0x49],bl
  40567a:	lock jmp DWORD PTR ds:0xef8d000d
  405681:	int3   
  405682:	push   eax
  405683:	push   0x22
  405685:	(bad)  
  405686:	(bad)  
  405687:	dec    BYTE PTR [edi+0x3e31e828]
  40568d:	or     al,0x0
  40568f:	or     esi,DWORD PTR [edx]
  405691:	lock add eax,0xbc6783
  405697:	jne    0x405679
  405699:	jge    0x4056fb
  40569b:	(bad)  
  40569c:	jg     0x40570f
  40569e:	push   DWORD PTR [ebp-0x42]
  4056a1:	std    
  4056a2:	push   es
  4056a3:	sub    al,0x23
  4056a5:	add    eax,0x7dc675ff
  4056aa:	retf   0xb3
	...
  4056d1:	add    BYTE PTR [eax],al
  4056d3:	add    BYTE PTR [edx-0x5d3b7cf4],dh
  4056d9:	mov    eax,ds:0x35da45b6
  4056de:	push   0x0
  4056e0:	in     eax,0xf0
  4056e2:	sti    
  4056e3:	call   0x3fc6bc
  4056e8:	dec    ebx
  4056e9:	stos   DWORD PTR es:[edi],eax
  4056ea:	ret    
  4056eb:	jne    0x405736
  4056ed:	mov    ebp,edi
  4056ef:	mov    BYTE PTR [esi],al
  4056f1:	dec    edx
  4056f2:	test   eax,0x257ac775
  4056f7:	mov    dl,0x4b
  4056f9:	mov    dl,0x53
  4056fb:	(bad)  
  4056fc:	(bad)  
  4056fd:	in     eax,dx
  4056fe:	test   al,0x75
  405700:	mov    bl,0x3a
  405702:	dec    edi
  405703:	sti    
  405704:	fs aas 
  405706:	std    
  405707:	mov    edi,0x109cb3d6
  40570c:	push   esp
  40570d:	mov    ch,0x13
  40570f:	call   esi
  405711:	xchg   ebp,eax
  405712:	test   al,0x75
  405714:	add    edi,DWORD PTR [edx]
  405716:	out    dx,eax
  405717:	cld    
  405718:	cmp    al,0xd7
  40571a:	jl     0x4056f4
  40571c:	xor    al,0x55
  40571e:	imul   ebp,eax,0x3e
  405721:	ds add al,0x0
  405724:	and    al,0x75
  405726:	outs   dx,DWORD PTR ds:[esi]
  405727:	call   0xffe9689a
  40572c:	adc    al,0x75
  40572e:	addr16 call 0xffe9689a
  405734:	add    al,0x15
  405736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405737:	call   0x40573c
	...
  405760:	pop    esi
  405761:	adc    DWORD PTR [ecx+0x4cf2c0ff],ebp
  405767:	pop    edi
  405768:	add    dh,BYTE PTR [edi+esi*8-0x1]
  40576c:	jg     0x405789
  40576e:	xchg   edi,eax
  40576f:	add    DWORD PTR [edi],0xffffffb6
  405772:	jl     0x4057b9
  405774:	inc    edi
  405775:	stos   DWORD PTR es:[edi],eax
  405776:	ret    
  405777:	je     0x4057be
  405779:	outs   dx,DWORD PTR ds:[esi]
  40577a:	add    eax,DWORD PTR [eax]
  40577c:	dec    ebx
  40577d:	mov    dl,0x3
  40577f:	mov    DWORD PTR [esi],0x4b000356
  405785:	mov    dl,0x76
  405787:	inc    ebp
  405788:	scas   eax,DWORD PTR es:[edi]
  405789:	or     BYTE PTR [ecx],bh
  40578b:	test   eax,0x2e9e0d1e
  405790:	push   ebx
  405791:	mov    cl,0x0
  405793:	stos   BYTE PTR es:[edi],al
  405794:	xchg   esp,eax
  405795:	lahf   
  405796:	push   0x26
  405798:	(bad)  
  40579c:	icebp  
  40579d:	or     BYTE PTR [esi+0x2e],bh
  4057a0:	dec    edi
  4057a1:	mov    al,ds:0x3663a7fc
  4057a6:	outs   dx,DWORD PTR ds:[esi]
  4057a7:	test   al,0x6c
  4057a9:	cmp    BYTE PTR [esi+0x2e],ah
  4057ac:	addr16 mov al,0x39
  4057af:	mov    ds:0xbab19f5c,eax
  4057b4:	mov    DWORD PTR [eax],edx
  4057b6:	jmp    0x6aed1809
  4057bb:	mov    edi,0x3e262847
  4057c0:	aas    
  4057c1:	or     ecx,ebp
  4057c3:	and    DWORD PTR [eax],eax
	...
  4057e9:	add    BYTE PTR [eax],al
  4057eb:	add    BYTE PTR [eax*2+0x334b092f],cl
  4057f2:	in     eax,dx
  4057f3:	jbe    0x405783
  4057f5:	popf   
  4057f6:	mov    ecx,0xe909cb1b
  4057fb:	add    esp,DWORD PTR [ebx+0x4b030e9e]
  405801:	sahf   
  405802:	jl     0x4057ff
  405804:	in     al,dx
  405805:	js     0x405841
  405807:	add    ecx,DWORD PTR [ebx-0x30]
  40580a:	sub    edi,edi
  40580c:	hlt    
  40580d:	xor    eax,0xc5c89762
  405812:	xchg   ebp,eax
  405813:	dec    edi
  405814:	js     0x4057dc
  405816:	and    al,0x58
  405818:	dec    ebx
  405819:	or     ecx,ebp
  40581b:	add    ebx,DWORD PTR [eax]
  40581d:	ret    0x441
  405820:	cmp    ecx,DWORD PTR [ecx]
  405822:	jmp    0xbeea3ac2
  405827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405828:	rol    BYTE PTR [eax+eax*1-0x57],cl
  40582c:	push   edi
  40582d:	or     DWORD PTR [eax],edx
  40582f:	jmp    0x89cd097c
  405834:	in     al,dx
  405835:	sahf   
  405836:	mov    DWORD PTR [edi+ebp*1],esp
  405839:	xor    DWORD PTR [eax],eax
  40583b:	stc    
  40583c:	dec    eax
  40583d:	or     eax,ebp
  40583f:	push   cs
  405840:	out    0x9e,eax
  405842:	push   DWORD PTR [eax+0xa]
  405845:	pop    ebp
  405846:	(bad)  
  405847:	cld    
  405848:	mov    esp,0x48e93c60
  40584d:	or     DWORD PTR [ebx],esi
  40584f:	test   eax,0x0
	...
  405878:	mov    eax,0xa4acc773
  40587d:	(bad)  
  40587f:	call   0x29b5f6cc
  405884:	fadd   QWORD PTR [ebx-0x2c]
  405887:	dec    esi
  405888:	sbb    ah,BYTE PTR [ecx-0x71]
  40588b:	lods   al,BYTE PTR ds:[esi]
  40588c:	clc    
  40588d:	lds    eax,FWORD PTR [ebp+0x21]
  405890:	in     al,0xd
  405892:	add    cl,ch
  405894:	cmc    
  405895:	inc    ebx
  405896:	hlt    
  405897:	cs xor al,0x9e
  40589a:	push   DWORD PTR [edx+ecx*4-0x3b]
  40589e:	push   eax
  40589f:	xchg   ecx,eax
  4058a0:	dec    eax
  4058a1:	or     DWORD PTR [eax],eax
  4058a3:	imul   esi,DWORD PTR [ecx],0x1094ff09
  4058a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058aa:	mov    ch,0x3b
  4058ac:	dec    edi
  4058ad:	or     DWORD PTR [ebx],ecx
  4058af:	sub    DWORD PTR [ebx],edi
  4058b1:	pop    es
  4058b2:	xor    DWORD PTR [esp+eax*1+0x9],0x75
  4058b7:	in     al,0xcf
  4058b9:	fwait
  4058ba:	add    cl,ch
  4058bc:	dec    eax
  4058bd:	mov    BYTE PTR [ebp-0x67],0xa5
  4058c1:	or     eax,0x4453e900
  4058c6:	mov    al,0x39
  4058c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058c9:	adc    edi,DWORD PTR [eax+eax*1+0x51a]
  4058d0:	xor    ah,BYTE PTR [ecx]
  4058d2:	inc    ebp
  4058d3:	les    edx,FWORD PTR [edx+0x7d]
  4058d6:	nop
  4058d7:	mov    dl,0xa2
  4058d9:	or     DWORD PTR [ebx],ecx
  4058db:	rol    BYTE PTR [eax],0x0
	...
  405902:	add    BYTE PTR [eax],al
  405904:	inc    edi
  405905:	or     cl,ch
  405907:	fdiv   DWORD PTR [edx+0x678b0009]
  40590d:	sub    eax,0x20a200c6
  405912:	jge    0x4058d8
  405914:	or     esp,DWORD PTR [esi-0x658d0001]
  40591a:	mov    edi,0x455f08f3
  40591f:	les    ebx,FWORD PTR [esi-0x12fffff7]
  405925:	fdiv   DWORD PTR [edi-0x38a65871]
  40592b:	inc    ebp
  40592c:	sbb    ah,BYTE PTR [edi+0xf]
  40592f:	add    BYTE PTR [edx+0x5e],ah
  405932:	inc    ebp
  405933:	hlt    
  405934:	lea    edx,[ebx+0x49afffff]
  40593a:	les    edx,FWORD PTR [eax+0x8]
  40593d:	or     DWORD PTR [edx+0x0],ebp
  405940:	pop    ebp
  405941:	fnstcw WORD PTR [ebx+0x1af6e8]
  405947:	add    BYTE PTR [ecx],bl
  405949:	leave  
  40594a:	je     0x405952
  40594c:	mov    eax,ds:0xb700d3f1
  405951:	or     ecx,ebp
  405953:	mov    edx,?
  405955:	or     BYTE PTR [eax],al
  405957:	push   DWORD PTR [edi-0x8]
  40595a:	(bad)  
  40595b:	jne    0x40597f
  40595d:	arpl   WORD PTR [ebp-0x48],si
  405960:	retf   0x2a6d
  405963:	inc    ecx
  405964:	bnd gs jne 0x405924
	...
  405990:	cli    
  405991:	into   
  405992:	mov    cl,0x0
  405994:	dec    ebx
  405995:	mov    dl,0x80
  405997:	les    esi,FWORD PTR [edi]
  405999:	mov    ebx,0x2a7456c
  40599e:	sbb    al,BYTE PTR [eax]
  4059a0:	mov    esp,0xb0e8c3d5
  4059a5:	pop    edx
  4059a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059a7:	inc    DWORD PTR [eax+0x72]
  4059aa:	das    
  4059ab:	add    dh,BYTE PTR [eax-0x28ba84bc]
  4059b1:	jnp    0x4059e2
  4059b3:	mov    ah,0xa3
  4059b5:	push   ecx
  4059b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059b7:	dec    DWORD PTR [ebx+ecx*4-0x58c43d1]
  4059be:	jae    0x4059c0
  4059c0:	dec    ebx
  4059c1:	add    ah,BYTE PTR [ebp+0x2f13b775]
  4059c7:	mov    ah,0x63
  4059c9:	clc    
  4059ca:	stos   BYTE PTR es:[edi],al
  4059cb:	jmp    DWORD PTR [edi+edx*4-0x3d]
  4059cf:	jne    0x405a1a
  4059d1:	aaa    
  4059d2:	repz adc dh,0xa1
  4059d6:	add    esi,DWORD PTR [edi+esi*1+0x4b]
  4059da:	das    
  4059db:	adc    BYTE PTR [ebp+ebx*2-0x9],al
  4059df:	(bad)  
  4059e0:	mov    dh,0x16
  4059e2:	pushf  
  4059e3:	inc    eax
  4059e4:	xor    dl,bl
  4059e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059e7:	or     ecx,DWORD PTR [ebx]
  4059e9:	push   ebp
  4059ea:	add    ebx,ebp
  4059ec:	cmp    al,0x17
  4059ee:	int3   
  4059ef:	or     eax,DWORD PTR [eax]
  4059f1:	jbe    0x405a05
  4059f3:	lea    eax,[eax]
	...
  405a19:	add    BYTE PTR [eax],al
  405a1b:	add    BYTE PTR [esi-0x6900abba],cl
  405a21:	xchg   esi,eax
  405a22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a23:	jne    0x4059e4
  405a25:	stc    
  405a26:	or     bh,bl
  405a28:	cld    
  405a29:	call   0xe86f:0x1cf4d878
  405a30:	cli    
  405a31:	loopne 0x405a36
  405a33:	add    ah,ah
  405a35:	or     BYTE PTR [esp+eax*8-0xd],bl
  405a39:	stc    
  405a3a:	mov    ebp,0x5c9bd4a4
  405a3f:	push   0xa4ae11e3
  405a44:	les    ebx,FWORD PTR [ebx+0x9b36c3c]
  405a4a:	sahf   
  405a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a4c:	mov    ah,0x87
  405a4e:	xor    al,0x58
  405a50:	dec    ebx
  405a51:	adc    eax,0x6d1ea4e1
  405a56:	xchg   ecx,eax
  405a57:	mov    al,0x7d
  405a59:	fwait
  405a5a:	sahf   
  405a5b:	js     0x4059e5
  405a5d:	aas    
  405a5e:	ss mov ebx,0x4ee8f889
  405a64:	shr    BYTE PTR [edx+ebp*2-0x2dc87c41],1
  405a6b:	enter  0x1dc8,0xe5
  405a6f:	add    esi,edi
  405a71:	dec    edx
  405a72:	push   0x26
  405a74:	cmp    ecx,DWORD PTR [ecx]
  405a76:	fnstsw WORD PTR [ebx]
  405a78:	into   
  405a79:	inc    ebp
  405a7a:	pop    ebp
  405a7b:	push   ebx
  405a7c:	push   esp
  405a7d:	adc    eax,0x9be5
	...
  405aa6:	add    BYTE PTR [eax],al
  405aa8:	push   edi
  405aa9:	pop    eax
  405aaa:	jmp    0xc20a28b2
  405aaf:	repz cmp eax,0xcf9bed15
  405ab5:	mov    bl,0x36
  405ab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ab8:	ret    0x3144
  405abb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405abc:	sahf   
  405abd:	popf   
  405abe:	adc    DWORD PTR [esi-0x14],esp
  405ac1:	or     ecx,ebp
  405ac3:	clc    
  405ac4:	aam    0x15
  405ac6:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ac8:	xchg   esi,eax
  405ac9:	stc    
  405aca:	or     eax,0x63a032e
  405acf:	cs push ebx
  405ad1:	mov    cl,0xea
  405ad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ad4:	hlt    
  405ad5:	call   0xed75:0x9b006200
  405adc:	shl    DWORD PTR [ebx-0x51],0xe9
  405ae0:	dec    eax
  405ae1:	call   0xd6d8:0x41a0ed75
  405ae8:	test   al,0x8e
  405aea:	ret    
  405aeb:	xor    dl,BYTE PTR [esi-0x7c16f339]
  405af1:	mov    gs,esp
  405af3:	push   0xb6fe1983
  405af8:	call   0xe97be089
  405afd:	call   0xe901:0x86f39ff
  405b04:	dec    eax
  405b05:	mov    cl,0x63
  405b07:	pop    eax
  405b08:	inc    edi
  405b09:	or     ecx,ecx
  405b0b:	stos   BYTE PTR es:[edi],al
	...
  405b34:	inc    edx
  405b35:	mov    gs,esp
  405b37:	push   0x2a
  405b39:	adc    DWORD PTR [eax],eax
  405b3b:	cmc    
  405b3c:	dec    ecx
  405b3d:	xchg   BYTE PTR [ebp-0x27],bh
  405b40:	dec    eax
  405b41:	adc    eax,0xf5426e19
  405b46:	(bad)  
  405b47:	fcom   QWORD PTR [eax-0x4f]
  405b4a:	fiadd  DWORD PTR [ebx-0x58]
  405b4d:	call   0xdd75:0x9b58dcff
  405b54:	jmp    0x4591636c
  405b59:	mov    esi,0xc7063eff
  405b5e:	adc    cl,ch
  405b60:	jae    0x405af0
  405b62:	in     al,dx
  405b63:	push   0x6a
  405b65:	adc    DWORD PTR [eax],eax
  405b67:	popf   
  405b68:	sbb    al,0x87
  405b6a:	jge    0x405b59
  405b6c:	dec    eax
  405b6d:	adc    eax,0xf9321616
  405b72:	(bad)  
  405b73:	xchg   esp,eax
  405b74:	push   eax
  405b75:	mov    cl,0xae
  405b77:	add    BYTE PTR [eax],ch
  405b79:	data16 (bad) 
  405b7b:	(bad)  
  405b7c:	jg     0x405b88
  405b7e:	push   DWORD PTR [ebp-0x16]
  405b81:	ins    DWORD PTR es:[edi],dx
  405b82:	add    eax,0xc966f5db
  405b87:	ret    0x5d6
  405b8a:	push   ebp
  405b8b:	mov    eax,DWORD PTR [esi]
  405b8d:	add    esp,0xfffffff0
  405b90:	cmc    
  405b91:	add    BYTE PTR [eax+ebp*8],cl
  405b94:	jne    0x405bf8
  405b96:	(bad)  
  405b97:	inc    DWORD PTR [eax]
	...
  405bbd:	add    BYTE PTR [eax],al
  405bbf:	add    BYTE PTR [ebx],bh
  405bc1:	push   ecx
  405bc2:	or     al,0x83
  405bc4:	ja     0x405bbf
  405bc6:	push   DWORD PTR [ebx+0x4c]
  405bc9:	data16 jne 0x405bd8
  405bcc:	mov    cl,dl
  405bce:	loop   0x405bcf
  405bd0:	in     eax,0xa
  405bd2:	shl    BYTE PTR [eax+eiz*2+0x78],0x45
  405bd7:	lock push edx
  405bd9:	data16 jne 0x405be8
  405bdc:	retf   0xe383
  405bdf:	inc    ebp
  405be1:	or     al,al
  405be3:	je     0x405b95
  405be5:	test   BYTE PTR [ebp-0x4],bh
  405be8:	bound  eax,QWORD PTR ds:0xa5610010
  405bee:	(bad)  
  405bef:	jne    0x405bd7
  405bf1:	data16 jne 0x405bec
  405bf4:	cli    
  405bf5:	mov    al,ds:0xaf5ffe6
  405bfa:	shl    BYTE PTR [ebp+0x43],0x6c
  405bfe:	jne    0x405c10
  405c00:	test   ecx,esi
  405c02:	sti    
  405c03:	(bad)  
  405c04:	push   DWORD PTR [edi+edi*8+0x75]
  405c08:	sub    ah,BYTE PTR [ebp+0x4f]
  405c0b:	push   DWORD PTR [ebp+0x6b]
  405c0e:	lea    eax,[ebp+0x42]
  405c11:	fsubr  st(7),st
  405c13:	loopne 0x405c56
  405c15:	imul   edi,edi,0xffffffff
  405c18:	dec    ebx
  405c19:	jne    0x405c2a
  405c1b:	call   0xffe241d2
  405c20:	adc    ah,ch
  405c22:	push   cs
	...
  405c4b:	add    BYTE PTR [esi+0x783af1b],bl
  405c51:	xchg   ebx,eax
  405c52:	mov    eax,ds:0xb10a5775
  405c57:	loop   0x405c35
  405c59:	scas   eax,DWORD PTR es:[edi]
  405c5a:	mov    eax,DWORD PTR [ebp+0x47]
  405c5d:	and    ebx,DWORD PTR [edi]
  405c5f:	or     al,0x4b
  405c61:	ss dec ecx
  405c63:	(bad)  
  405c64:	ds mov dh,0xab
  405c67:	pop    edx
  405c68:	test   eax,0x8b0ba1cf
  405c6d:	(bad)  
  405c6f:	mov    WORD PTR [esi],es
  405c71:	push   edx
  405c72:	xor    al,0xff
  405c74:	push   ds
  405c75:	mov    dh,0xab
  405c77:	adc    DWORD PTR [eax-0x74f45e91],ebp
  405c7d:	(bad)  
  405c7e:	in     al,0x80
  405c80:	push   cs
  405c81:	jle    0x405c87
  405c83:	add    BYTE PTR [ebx-0x5e],bl
  405c86:	adc    al,0x11
  405c88:	jl     0x405c1f
  405c8a:	repz (bad) 
  405c8c:	(bad)  
  405c8d:	adc    eax,0x1f7375a1
  405c92:	pop    ss
  405c93:	or     BYTE PTR [ebx+0x15],dh
  405c96:	mov    ds:0x471d5cff,al
  405c9b:	lock sti 
  405c9d:	cmp    DWORD PTR [edx],esp
  405c9f:	jecxz  0x405ced
  405ca1:	aas    
  405ca2:	mov    eax,ds:0x494a5775
  405ca7:	fnstsw WORD PTR [edi+ecx*2]
  405caa:	retf   
  405cab:	ret    0xa247
  405cae:	mov    eax,DWORD PTR ss:[eax]
	...
  405cd5:	add    BYTE PTR [eax],al
  405cd7:	add    BYTE PTR [edi],bl
  405cd9:	and    ecx,eax
  405cdb:	lock js 0x405ce9
  405cde:	mov    ebp,0xf10996ff
  405ce3:	stos   DWORD PTR es:[edi],eax
  405ce4:	ret    0x1eaa
  405ce7:	mov    eax,ds:0x84e14dc2
  405cec:	xchg   BYTE PTR [ecx],al
  405cee:	jmp    0x7cd8e20a
  405cf3:	or     esp,ebx
  405cf5:	popf   
  405cf6:	or     BYTE PTR [ecx+0x182903ec],ah
  405cfc:	sbb    DWORD PTR [esi-0x67846c5c],eax
  405d02:	pop    esp
  405d03:	or     al,0xe3
  405d05:	fs retf 
  405d07:	mov    al,ds:0x17a903cc
  405d0c:	imul   ecx,DWORD PTR [edx+0x94ba04c],0xf93803d9
  405d16:	mov    ebp,0x3c97af16
  405d1b:	pushf  
  405d1c:	mov    bl,0xd7
  405d1e:	(bad)  
  405d1f:	mov    al,ds:0x17a9039c
  405d24:	dec    edx
  405d25:	dec    esp
  405d26:	ins    BYTE PTR es:[edi],dx
  405d27:	inc    esi
  405d28:	fwait
  405d29:	cmp    BYTE PTR [ecx-0x71689603],al
  405d2f:	mov    al,ds:0xa49100f6
  405d34:	xchg   edi,eax
  405d35:	xchg   edi,eax
  405d36:	jle    0x405cc4
  405d38:	mov    BYTE PTR [ebx],dh
  405d3a:	mov    al,ds:0xc5
	...
  405d63:	add    BYTE PTR [edi+0x9],cl
  405d66:	adc    al,0x8d
  405d68:	outs   dx,DWORD PTR ds:[esi]
  405d69:	mov    DWORD PTR ds:0x5e975557,ebp
  405d6f:	enter  0x50c6,0x57
  405d73:	mov    al,ds:0x3e90a44
  405d78:	dec    ebx
  405d79:	sub    BYTE PTR [edi+ecx*1+0x6b5c940],0xcb
  405d81:	sar    edi,1
  405d83:	call   0xb22969c5
  405d88:	dec    ecx
  405d89:	or     DWORD PTR [eax],eax
  405d8b:	es cmp eax,0xe348e805
  405d91:	xchg   esi,eax
  405d92:	jmp    edx
  405d94:	or     BYTE PTR ds:0xe570810f,bl
  405d9a:	inc    eax
  405d9b:	jmp    0x114c7a4b
  405da0:	jmp    0x6804:0xb0f6ffb6
  405da7:	cmp    al,0xec
  405da9:	dec    ecx
  405daa:	add    dh,ah
  405dac:	xor    al,BYTE PTR ds:0x96a70ee8
  405db2:	jmp    DWORD PTR [eax-0x2e]
  405db5:	push   ecx
  405db6:	dec    dh
  405db8:	fsub   QWORD PTR [ecx]
  405dba:	ds call 0x64cd6708
  405dc0:	mov    DWORD PTR [edi-0x5ea04901],edx
  405dc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dc7:	lea    eax,[eax]
	...
  405ded:	add    BYTE PTR [eax],al
  405def:	add    BYTE PTR [esi+edx*4-0x68769373],bh
  405df6:	call   FWORD PTR [esi+0x51b59657]
  405dfc:	in     eax,0x96
  405dfe:	inc    DWORD PTR [ecx-0x16ff9b58]
  405e04:	(bad)  
  405e05:	mov    WORD PTR [edi+edi*2-0x19bf6934],?
  405e0c:	int3   
  405e0d:	repz add cl,ch
  405e10:	dec    eax
  405e11:	test   BYTE PTR [ebp-0x694ad5],dl
  405e17:	push   esi
  405e18:	dec    ecx
  405e19:	stc    
  405e1a:	(bad)  
  405e1b:	call   0x6ac46468
  405e20:	inc    edi
  405e21:	or     DWORD PTR [eax],eax
  405e23:	add    BYTE PTR [edi+0x1a502c4b],bh
  405e29:	sub    ebp,DWORD PTR [ecx+eax*2]
  405e2c:	xor    ah,BYTE PTR [edx-0x44]
  405e2f:	lods   eax,DWORD PTR ds:[esi]
  405e30:	xor    cl,BYTE PTR [edx]
  405e32:	or     eax,eax
  405e34:	mov    bh,0x0
  405e36:	jmp    0x4a8107
  405e3b:	lea    eax,[edi+0x4dfffecb]
  405e41:	js     0x405e85
  405e43:	sub    al,0xd2
  405e45:	loope  0x405deb
  405e47:	sub    al,0xa3
  405e49:	or     eax,ebp
  405e4b:	lahf   
  405e4c:	(bad)  
  405e4d:	or     eax,0xf0320b00
  405e52:	add    al,0xe9
	...
  405e7c:	mov    ebp,0xed000009
  405e81:	lock or ebp,eax
  405e84:	lahf   
  405e85:	imul   edi,edi,0xffffffff
  405e88:	test   eax,0x1a0f75c9
  405e8d:	sub    BYTE PTR ds:[ecx-0x5e],al
  405e91:	jbe    0x405f08
  405e93:	or     al,0x8a
  405e95:	pandn  mm7,mm7
  405e98:	in     eax,dx
  405e99:	bound  ecx,QWORD PTR [edx]
  405e9b:	push   0xffffffa2
  405e9d:	jbe    0x405f14
  405e9f:	or     al,0xba
  405ea1:	sbb    edi,0xffffffff
  405ea4:	fnstsw WORD PTR [eax-0x6b]
  405ea7:	ret    0x76cc
  405eaa:	dec    DWORD PTR [ebp+0x50519950]
  405eb0:	ficom  DWORD PTR [edi-0x21]
  405eb3:	(bad)  
  405eb4:	fstp   st(1)
  405eb6:	(bad)  
  405eb7:	jne    0x405f33
  405eb9:	jbe    0x405f30
  405ebb:	adc    al,0xed
  405ebd:	lock movmskps ebp,xmm5
  405ec1:	lock pop es
  405ec3:	call   0xffdd9113
  405ec8:	cmp    al,0x4b
  405eca:	(bad)  
  405ecb:	(bad)  [esp+ecx*2]
  405ece:	stos   BYTE PTR es:[edi],al
  405ecf:	pusha  
  405ed0:	mov    esi,0xce88ef60
  405ed5:	push   ss
  405ed6:	popf   
  405ed7:	call   FWORD PTR [eax+eiz*1]
  405eda:	and    BYTE PTR [eax],dl
  405edc:	dec    ebx
  405edd:	jne    0x405ee0
  405edf:	jmp    0x405ee1
	...
  405f05:	add    BYTE PTR [eax],al
  405f07:	add    BYTE PTR [ecx],bh
  405f09:	repz pop ss
  405f0b:	adc    BYTE PTR [esi+esi*1],al
  405f0e:	push   edi
  405f0f:	(bad)  
  405f10:	cld    
  405f11:	add    ebp,DWORD PTR [ebx+0x3a2a542]
  405f17:	or     ecx,DWORD PTR [ebx]
  405f19:	pop    ds
  405f1a:	loopne 0x405f83
  405f1c:	pushf  
  405f1d:	retf   0x44
  405f20:	fcomp  QWORD PTR ds:0xcb1fe80f
  405f26:	popf   
  405f27:	dec    esp
  405f29:	jge    0x405f83
  405f2b:	inc    ah
  405f2d:	mov    ebx,0x633fe834
  405f32:	popf   
  405f33:	call   FWORD PTR [ebx]
  405f35:	pop    ds
  405f36:	pop    ds
  405f37:	sbb    BYTE PTR [ebx-0x22],cl
  405f3a:	ud0    ebx,DWORD PTR [esi]
  405f3d:	mov    dh,0x33
  405f3f:	call   DWORD PTR [esi]
  405f41:	stos   BYTE PTR es:[edi],al
  405f42:	pushf  
  405f43:	push   ebp
  405f44:	xor    esi,DWORD PTR [edi+0x10]
  405f47:	call   DWORD PTR [esi]
  405f49:	sahf   
  405f4a:	xor    edi,edi
  405f4c:	(bad)  
  405f4d:	test   eax,0x837e54ab
  405f52:	popf   
  405f53:	call   0xffddc646
  405f58:	mov    esi,0x64fec22d
  405f5d:	sbb    esi,DWORD PTR [edi+edi*8]
  405f60:	xchg   esi,eax
  405f61:	out    0x9d,al
  405f63:	call   DWORD PTR [ecx+ecx*1+0x51]
  405f67:	mov    ecx,0x86e9099f
	...
  405f94:	or     eax,DWORD PTR [esp+ebp*2]
  405f97:	xchg   ebx,eax
  405f98:	cmp    eax,0xfe9d4e94
  405f9d:	push   esp
  405f9e:	inc    edi
  405f9f:	popf   
  405fa0:	sub    al,0xa1
  405fa2:	das    
  405fa3:	jo     0x405ff0
  405fa5:	or     DWORD PTR [esi],esi
  405fa7:	push   edi
  405fa8:	jecxz  0x405f3c
  405faa:	cs popf 
  405fac:	and    ebx,esi
  405fae:	inc    ecx
  405faf:	popf   
  405fb0:	or     al,0xc2
  405fb2:	sub    edi,eax
  405fb4:	add    al,0x3d
  405fb6:	bound  esi,QWORD PTR [eax+0x170e0971]
  405fbc:	pop    edi
  405fbd:	xchg   esp,eax
  405fbe:	jl     0x405fb3
  405fc0:	in     eax,dx
  405fc1:	sbb    eax,0x15e9ced
  405fc6:	add    ebp,ebx
  405fc8:	ficom  WORD PTR [ebx-0x6f63512]
  405fce:	call   0xdee52009
  405fd3:	push   ss
  405fd4:	push   edi
  405fd5:	mov    eax,ds:0x93bcbd32
  405fda:	loop   0x405f9f
  405fdc:	aas    
  405fdd:	repz lds edx,FWORD PTR [esi]
  405fe0:	pop    ebx
  405fe1:	cmp    ecx,edx
  405fe3:	xchg   ecx,eax
  405fe4:	test   DWORD PTR [ebx+0x1d9c33b6],edx
  405fea:	rcr    DWORD PTR [esi+ebx*1+0x169d38fd],1
  405ff1:	add    DWORD PTR [ecx-0x696c7ba3],edx
  405ff7:	stos   DWORD PTR es:[edi],eax
	...
  406020:	jno    0x405fd0
  406022:	mov    ds,WORD PTR [edx+eax*4+0x1603ddc6]
  406029:	or     BYTE PTR [ebp-0x32164],0x75
  406030:	xor    eax,0x44f4fef9
  406035:	pop    ds
  406036:	sbb    ah,BYTE PTR [esi+0x35]
  406039:	add    eax,ebp
  40603b:	mov    al,ds:0x56ff92e7
  406040:	push   ebp
  406041:	std    
  406042:	(bad)  
  406043:	aam    0x38
  406045:	xchg   esp,eax
  406046:	jne    0x40603d
  406048:	(bad)  
  406049:	out    0xfe,al
  40604b:	mov    ah,0x50
  40604d:	mov    eax,ds:0x92bf36a6
  406052:	push   DWORD PTR [esp+ebx*1-0x50068a6c]
  406059:	sbb    al,0xc
  40605b:	xchg   ebx,eax
  40605c:	add    al,0x94
  40605e:	jne    0x406041
  406060:	mov    al,0x76
  406062:	dec    DWORD PTR [esi]
  406064:	xlat   BYTE PTR ds:[ebx]
  406065:	rol    dl,0xd9
  406068:	dec    eax
  406069:	cmp    al,0x8b
  40606b:	or     eax,0x9af0cdcb
  406070:	push   ss
  406071:	cmp    ch,BYTE PTR [ebx]
  406073:	adc    al,bl
  406075:	dec    esp
  406076:	or     al,0xe6
  406078:	test   DWORD PTR [ebx+0x1ce0e145],0x950a6608
  406082:	(bad)  
  406083:	and    al,0x0
	...
  4060a9:	add    BYTE PTR [eax],al
  4060ab:	add    bl,bl
  4060ad:	or     DWORD PTR [eax],eax
  4060af:	jmp    0x117de6fc
  4060b4:	mov    dh,0x49
  4060b6:	add    cl,ch
  4060b8:	dec    esp
  4060b9:	xor    eax,0x9472c83
  4060be:	je     0x4060ff
  4060c0:	ret    0xf04c
  4060c3:	cmp    DWORD PTR ds:0x2ee96a08,esi
  4060c9:	or     DWORD PTR [ebx+0x73927f0c],eax
  4060cf:	add    BYTE PTR [edi+0x6f],bl
  4060d2:	jne    0x4060e4
  4060d4:	mov    ecx,0x48006a0b
  4060d9:	or     eax,0xdcda458d
  4060de:	(bad)  
  4060df:	adc    eax,0x40a43a
  4060e4:	cmp    esi,eax
  4060e6:	je     0x406117
  4060e8:	mov    cl,0xf0
  4060ea:	repz add BYTE PTR [esi],bl
  4060ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060ee:	mov    al,BYTE PTR [ebp+0x36]
  4060f1:	or     DWORD PTR [ebp-0x10],0x49
  4060f5:	add    eax,0x79f11777
  4060fa:	mov    esi,DWORD PTR [ebp+0x5e]
  4060fd:	cmp    BYTE PTR [ebp+0x8],0x99
  406101:	inc    eax
  406102:	lock jecxz 0x4060f5
  406105:	jp     0x4060ab
  406107:	mov    ebp,DWORD PTR [edi+0x5275ff09]
  40610d:	jle    0x40610f
  40610f:	inc    DWORD PTR [eax]
	...
  406135:	add    BYTE PTR [eax],al
  406137:	add    BYTE PTR [edi-0x7e],ch
  40613a:	call   0x4dda76
  40613f:	mov    esi,DWORD PTR [ecx]
  406141:	into   
  406142:	pop    ebp
  406143:	pop    ebx
  406144:	sub    ecx,ebx
  406146:	or     al,0x0
  406148:	jb     0x7a2ee53a
  40614e:	push   ebx
  40614f:	push   esi
  406150:	jge    0x406137
  406152:	inc    edi
  406153:	das    
  406154:	arpl   WORD PTR ds:0x5d999e8,cx
  40615a:	add    BYTE PTR [ebx-0x3ba3916],cl
  406160:	mov    dl,0x5
  406162:	add    BYTE PTR [eax],al
  406164:	test   eax,0x3a3e74c5
  406169:	mov    ecx,0xda72412e
  40616e:	out    0x45,eax
  406170:	dec    ebx
  406171:	inc    edi
  406172:	add    eax,DWORD PTR [eax]
  406174:	inc    eax
  406175:	pusha  
  406176:	comiss xmm0,xmm0
  406179:	movntps XMMWORD PTR [ebp+0x34],xmm2
  40617d:	loope  0x406182
  40617f:	push   ebx
  406180:	jae    0x4061d5
  406182:	outs   dx,BYTE PTR ds:[esi]
  406183:	add    BYTE PTR [ebx-0x59],cl
  406186:	ret    
  406187:	je     0x4061b6
  406189:	pop    ss
  40618a:	fwait
  40618b:	lea    ecx,[esi+0x7ee8332e]
  406191:	mov    eax,DWORD PTR [ebx]
  406193:	add    BYTE PTR [ebx-0x517c4dc1],bl
  406199:	inc    esi
  40619a:	add    esi,DWORD PTR [eax+eax*1+0x0]
	...
  4061c2:	add    BYTE PTR [eax],al
  4061c4:	push   ecx
  4061c5:	mov    al,BYTE PTR [eax+eax*1]
  4061c8:	dec    ebx
  4061c9:	mov    ds:0xe9705e3a,al
  4061ce:	lds    edi,FWORD PTR [eax+0x3a24b]
  4061d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061d5:	push   eax
  4061d6:	ds leave 
  4061d8:	or     BYTE PTR [esi-0x72],cl
  4061db:	in     al,dx
  4061dc:	enter  0x92e6,0x83
  4061e0:	cs cmp ch,cl
  4061e3:	inc    eax
  4061e4:	dec    ebx
  4061e5:	mov    ds:0x55c8120f,al
  4061ea:	mov    ah,BYTE PTR cs:[bp+si+0x7403]
  4061f0:	inc    edx
  4061f1:	and    edx,edi
  4061f3:	scas   eax,DWORD PTR es:[edi]
  4061f4:	jne    0x4061d7
  4061f6:	add    eax,DWORD PTR [eax]
  4061f8:	ss lahf 
  4061fa:	pop    ebx
  4061fb:	add    DWORD PTR [ebx-0x5e],ecx
  4061fe:	add    ecx,ecx
  406200:	mov    BYTE PTR ds:0xa28dfa3f,dl
  406206:	add    eax,esi
  406208:	or     esp,DWORD PTR [ecx-0x5bf439fd]
  40620e:	add    eax,esi
  406210:	or     ecx,DWORD PTR [ecx]
  406212:	jmp    0x8503:0xe5498d03
  406219:	dec    ecx
  40621a:	in     al,dx
  40621b:	inc    bh
  40621d:	inc    esi
  40621e:	xchg   ebp,eax
  40621f:	xor    al,0xe1
  406221:	or     BYTE PTR [ebx],dl
  406223:	add    al,0xf1
  406225:	or     BYTE PTR [ebx],dl
  406227:	add    al,0x0
	...
  40624d:	add    BYTE PTR [eax],al
  40624f:	add    cl,dh
  406251:	or     BYTE PTR [ebx],al
  406253:	add    al,0xe3
  406255:	call   0x238b6644
  40625a:	or     DWORD PTR [esi],ebp
  40625c:	dec    ecx
  40625d:	jle    0x406203
  40625f:	popf   
  406260:	fwait
  406261:	nop
  406262:	cld    
  406263:	imul   esp,DWORD PTR [ebp+0x4a],0xffffffe9
  406267:	or     al,0xb
  406269:	push   ss
  40626a:	jmp    0x406236
  40626c:	or     al,cl
  40626e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40626f:	xchg   ebx,eax
  406270:	dec    ebx
  406271:	or     ecx,ebp
  406273:	add    eax,esi
  406275:	inc    ebp
  406276:	cmp    DWORD PTR [esp+ecx*1],esi
  406279:	push   ss
  40627a:	sbb    eax,0xf4904b2e
  40627f:	addr16 sub eax,0xb0ce94a
  406285:	push   ss
  406286:	out    0xc0,al
  406288:	xchg   BYTE PTR [ecx+0x94b03e9],bl
  40628e:	dec    BYTE PTR [esi]
  406290:	xlat   BYTE PTR ds:[ebx]
  406291:	(bad)  
  406292:	fcom   QWORD PTR [ebx+0x25]
  406295:	dec    edx
  406296:	jmp    0xb0d9e927
  40629b:	les    ebx,FWORD PTR [esi]
  40629d:	test   ch,cl
  40629f:	test   BYTE PTR [edi-0x3cc19b80],al
  4062a5:	cmp    BYTE PTR [ecx-0x68],al
  4062a8:	pop    ebp
  4062a9:	dec    edx
  4062aa:	jmp    0xbee76d5a
  4062af:	cwde   
  4062b0:	sti    
  4062b1:	add    eax,DWORD PTR [eax]
  4062b3:	test   eax,0x0
	...
  4062dc:	inc    esp
  4062dd:	pop    es
  4062de:	sub    DWORD PTR [edi+edi*4],0xfffffff4
  4062e2:	jbe    0x4062f6
  4062e4:	int3   
  4062e5:	inc    ebp
  4062e6:	lock cmp DWORD PTR [edi+0x48e9aaee],ebp
  4062ed:	xchg   al,al
  4062ef:	adc    DWORD PTR [ecx],esi
  4062f1:	add    BYTE PTR [esi+0xf38c22c],dh
  4062f7:	aaa    
  4062f8:	sbb    eax,0xfae6508f
  4062fd:	inc    ebp
  4062fe:	std    
  4062ff:	sbb    DWORD PTR [edx+0x57],eax
  406302:	inc    ebp
  406303:	gs js  0x406304
  406306:	mov    ch,0xa4
  406308:	fistp  QWORD PTR [ecx]
  40630a:	setg   BYTE PTR [ebp-0x6d]
  40630e:	push   eax
  40630f:	ficomp WORD PTR [edx+0x5399f944]
  406315:	push   edi
  406316:	inc    ebp
  406317:	inc    ecx
  406318:	pop    eax
  406319:	(bad)  
  40631a:	mov    dh,0xac
  40631c:	mov    edx,0x4d760f39
  406321:	xchg   ebp,eax
  406322:	push   eax
  406323:	es push ebp
  406325:	cdq    
  406326:	push   0x49f3e8
  40632b:	fs xor eax,0xa301507d
  406331:	arpl   WORD PTR [eax],ax
  406333:	jmp    0x6c752907
  406338:	sbb    eax,0x5301507d
  40633d:	pusha  
  40633e:	add    cl,ch
	...
  406368:	sbb    BYTE PTR [ebp+eax*2+0x75],bh
  40636c:	jg     0x40638f
  40636e:	cld    
  40636f:	clts   
  406371:	or     eax,ebp
  406373:	cwde   
  406374:	jmp    0x406304
  406376:	inc    ecx
  406378:	sub    al,0xb1
  40637a:	inc    DWORD PTR [eax]
  40637c:	lea    edi,[ebx+eax*8-0x7e9ee6ab]
  406383:	les    ecx,FWORD PTR [esi+0x76]
  406386:	(bad)  
  406387:	push   DWORD PTR [ecx]
  406389:	fisubr WORD PTR [ecx+0x0]
  40638c:	pop    eax
  40638d:	add    eax,0x627a75ff
  406392:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406393:	aad    0xdd
  406395:	jbe    0x406320
  406397:	inc    ebp
  406398:	mov    esi,0xbd0000dd
  40639d:	aaa    
  40639e:	push   DWORD PTR [ebp+0x5a]
  4063a1:	(bad)  
  4063a2:	out    0xd4,eax
  4063a4:	fnsave [ebp+0x68]
  4063a7:	pushf  
  4063a8:	bound  ecx,QWORD PTR [edx]
  4063aa:	add    BYTE PTR [ebp-0x11a49],cl
  4063b0:	popf   
  4063b1:	aad    0xe7
  4063b3:	jnp    0x40642f
  4063b5:	jbe    0x4063b6
  4063b7:	(bad)  
  4063b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063b9:	in     eax,0xfe
  4063bb:	dec    DWORD PTR [ebp+0x32000011]
  4063c1:	add    DWORD PTR [ebp-0x89a2a0],0xa9548a50
	...
  4063f3:	add    dl,dh
  4063f5:	mov    ds:0x80402bc8,al
  4063fa:	mov    ebp,0xff765d74
  4063ff:	jmp    0x4063f2
  406401:	mov    DWORD PTR [edi],edi
  406403:	add    BYTE PTR [edi+0x9],ah
  406406:	mov    edx,0x9f201
  40640b:	or     esi,DWORD PTR [eax]
  40640d:	stc    
  40640e:	add    al,dh
  406410:	in     eax,0x9
  406412:	inc    edi
  406413:	inc    ecx
  406414:	xor    ebp,DWORD PTR [ebp-0x80]
  406417:	add    BYTE PTR [edx+0x4be57209],dh
  40641d:	stos   DWORD PTR es:[edi],eax
  40641e:	ret    
  40641f:	je     0x406476
  406421:	dec    eax
  406422:	js     0x406424
  406424:	dec    ebx
  406425:	mov    al,ds:0x4f2b8588
  40642a:	xchg   esi,eax
  40642b:	(bad)  
  40642c:	sti    
  40642d:	push   esi
  40642e:	adc    BYTE PTR [eax],cl
  406430:	mov    ds:0x84ffaf16,eax
  406435:	jp     0x40643e
  406437:	push   0x4b
  406439:	cli    
  40643a:	add    edi,edi
  40643c:	(bad)  
  40643d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40643e:	stos   DWORD PTR es:[edi],eax
  40643f:	test   eax,0xe8967e97
  406444:	xchg   esi,eax
  406445:	test   BYTE PTR [esi+0x100efbff],dl
  40644b:	or     BYTE PTR [ebx-0x4],ah
  40644e:	scas   eax,DWORD PTR es:[edi]
  40644f:	dec    DWORD PTR [edi+eax*1+0x4]
  406453:	add    al,0x4b
  406455:	mov    ds:0xe9ab,al
	...
  40647e:	add    BYTE PTR [eax],al
  406480:	adc    al,0x2c
  406482:	xchg   esi,eax
  406483:	mov    esi,ecx
  406485:	push   esi
  406486:	xchg   esi,eax
  406487:	jmp    FWORD PTR [ebx+ecx*8]
  40648a:	xchg   esi,eax
  40648b:	add    ecx,DWORD PTR [ebx-0x5e]
  40648e:	xchg   esi,eax
  40648f:	mov    ch,0x7f
  406491:	retf   
  406492:	xchg   ebp,eax
  406493:	jmp    DWORD PTR [ebx+0xcfff3a0]
  406499:	retf   
  40649a:	add    eax,DWORD PTR [ebx+ecx*2]
  40649d:	mov    ds:0xa2b252ab,al
  4064a2:	add    edx,DWORD PTR [eax-0xc]
  4064a5:	sub    eax,0xfbecff37
  4064aa:	xchg   ebp,eax
  4064ab:	jne    0x406500
  4064ad:	cli    
  4064ae:	and    ah,dl
  4064b0:	fmul   QWORD PTR [ebx-0x5db700d6]
  4064b6:	add    edi,edi
  4064b8:	xchg   esi,eax
  4064b9:	jle    0x406451
  4064bb:	inc    esp
  4064bd:	or     DWORD PTR [ecx+0x3],edx
  4064c0:	pop    ebx
  4064c1:	or     ecx,ebp
  4064c3:	sub    ecx,DWORD PTR [ebx+0x5]
  4064c6:	jmp    0x802307ce
  4064cb:	add    al,0x4b
  4064cd:	cmp    esi,eax
  4064cf:	dec    edi
  4064d0:	dec    DWORD PTR [ebx+0x169495be]
  4064d6:	loope  0x406483
  4064d8:	push   edx
  4064d9:	mov    ch,0xae
  4064db:	xchg   ebp,eax
  4064dc:	jae    0x4064a4
  4064de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064df:	xchg   ebp,eax
  4064e0:	jl     0x40651b
  4064e2:	sahf   
  4064e3:	sldt   WORD PTR [eax]
	...
  40650a:	add    BYTE PTR [eax],al
  40650c:	inc    ebx
  40650d:	mov    eax,ds:0x8c6cb19c
  406512:	xor    DWORD PTR [ebx],0x87868c65
  406518:	(bad)  
  406519:	xor    DWORD PTR [esi-0x6b],edi
  40651c:	push   esp
  40651d:	cmp    DWORD PTR [ecx],eax
  40651f:	cwde   
  406520:	sbb    eax,0xdeabe94a
  406525:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406526:	xchg   bp,ax
  406528:	rol    BYTE PTR [ebp-0x73cb6b4b],cl
  40652e:	push   0x57
  406530:	xchg   edi,eax
  406531:	mov    WORD PTR [esi-0x6b],cs
  406534:	dec    ebx
  406535:	adc    eax,0x30de80ac
  40653a:	ds xchg ebp,eax
  40653c:	adc    al,0xf5
  40653e:	mov    edx,0x9185c9d7
  406543:	xchg   esp,eax
  406544:	add    al,0x8c
  406546:	in     eax,dx
  406547:	xchg   esp,eax
  406548:	mov    dh,0x30
  40654a:	push   ds
  40654b:	xchg   ebp,eax
  40654c:	hlt    
  40654d:	mov    ebx,DWORD PTR [ebx+ecx*1-0x6ac5a91d]
  406554:	in     al,0x87
  406556:	push   esp
  406557:	cmp    al,0xdc
  406559:	mov    edi,esi
  40655b:	jmp    DWORD PTR [edx-0x74]
  40655e:	add    dh,dh
  406560:	cmp    eax,0xfa48e801
  406565:	mov    edi,edi
  406567:	out    0xd,al
  406569:	xor    edi,edi
  40656b:	(bad)  
  40656d:	mov    esi,DWORD PTR [ebp+0x3d]
	...
  406597:	add    dh,dl
  406599:	mov    edi,edi
  40659b:	into   
  40659c:	push   ebp
  40659d:	add    eax,ebp
  40659f:	mov    ebx,ebx
  4065a1:	mov    edi,edi
  4065a3:	ror    BYTE PTR [edi+ebx*1+0x0],cl
  4065a7:	inc    ebx
  4065a8:	inc    edi
  4065a9:	mov    WORD PTR [ebp-0x1f],?
  4065ac:	mov    al,0x55
  4065ae:	shl    DWORD PTR [esi+0x35b58bd7],cl
  4065b4:	fimul  WORD PTR [ebx-0x4d5c7e01]
  4065ba:	dec    DWORD PTR [esi-0x79a3aa41]
  4065c0:	mov    bh,0x8b
  4065c2:	call   0xffcc0c50
  4065c7:	ret    0x2093
  4065ca:	dec    eax
  4065cb:	mov    esi,0xd1e80989
  4065d0:	mov    al,0x9
  4065d2:	add    BYTE PTR [eax-0x4b],dh
  4065d5:	(bad)  
  4065d7:	push   esi
  4065d8:	xlat   BYTE PTR ds:[ebx]
  4065d9:	xchg   BYTE PTR [ebp-0x754003],bh
  4065df:	jmp    0xf5a85130
  4065e4:	das    
  4065e5:	dec    edx
  4065e6:	add    BYTE PTR [esi],dh
  4065e8:	jge    0x4065c7
  4065ea:	(bad)  
  4065eb:	fbld   TBYTE PTR cs:[ecx+0x948510d]
  4065f2:	or     ebp,DWORD PTR [ecx]
  4065f4:	inc    esp
  4065f5:	dec    DWORD PTR [esp+edi*2+0xeff8c18]
	...
  406624:	sbb    cl,BYTE PTR [edx+0x1b100d0]
  40662a:	(bad)  [ebp-0x1a]
  40662d:	add    DWORD PTR [ebp-0x892ad0],0x50
  406634:	dec    edx
  406635:	mov    bl,0xa7
  406637:	add    BYTE PTR [edx+0x2f8d23ec],dh
  40663d:	mov    ch,0xfe
  40663f:	call   DWORD PTR [ebp-0x558a012b]
  406645:	outs   dx,BYTE PTR ds:[esi]
  406646:	inc    ebp
  406647:	rol    DWORD PTR [ebp-0x298a008a],cl
  40664d:	jbe    0x4066c4
  40664f:	or     BYTE PTR [edx-0x4a002c84],cl
  406655:	(bad)  
  406656:	pop    edx
  406657:	leave  
  406658:	mov    al,0x1
  40665a:	add    BYTE PTR [ebp-0x7],dl
  40665d:	push   0x6ecac481
  406662:	(bad)  
  406663:	inc    DWORD PTR [edi]
  406665:	inc    eax
  406666:	cld    
  406667:	push   eax
  406668:	(bad)
  40666b:	call   FWORD PTR [edi+0x62412940]
  406671:	outs   dx,BYTE PTR ds:[esi]
  406672:	mov    edx,0xb0632a8
  406677:	shl    BYTE PTR ds:0x2200e781,0x6
  40667e:	mov    DWORD PTR [ebp-0x66],0x32000005
  406685:	mov    edi,0xf445
	...
  4066ae:	add    BYTE PTR [eax],al
  4066b0:	test   esi,edi
  4066b2:	(bad)  
  4066b3:	(bad)  
  4066b4:	clc    
  4066b5:	add    eax,0x80a7006a
  4066ba:	in     al,dx
  4066bb:	div    DWORD PTR ds:0xf26a5076
  4066c1:	mov    BYTE PTR [ebp-0xc],al
  4066c4:	mov    dl,0x88
  4066c6:	test   esp,esi
  4066c8:	dec    ebx
  4066c9:	jmp    0x40665d
  4066cb:	(bad)  
  4066cc:	jnp    0x4066c9
  4066ce:	sbb    al,bh
  4066d0:	fmul   QWORD PTR [edi+ecx*4]
  4066d3:	call   0x449e8a
  4066d8:	inc    eax
  4066d9:	loopne 0x4066f2
  4066db:	add    eax,0x444b2
  4066e0:	dec    ebx
  4066e1:	pop    ds
  4066e2:	push   eax
  4066e3:	in     al,dx
  4066e4:	mov    esp,0x370192aa
  4066e9:	mov    ds:0xb2b7bd86,al
  4066ee:	xchg   edx,eax
  4066ef:	inc    DWORD PTR [esp+ecx*8+0x8]
  4066f3:	dec    DWORD PTR [esi]
  4066f5:	enter  0xb69e,0x23
  4066f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066fa:	rol    DWORD PTR [eax+0x4b],cl
  4066fd:	sub    eax,0x6274f488
  406702:	xchg   edx,eax
  406703:	push   eax
  406704:	arpl   WORD PTR [ebx],bx
  406706:	pop    ebx
  406707:	add    BYTE PTR [ebx-0x59],cl
  40670a:	ret    
  40670b:	je     0x4066e7
  40670d:	sub    al,0x88
  40670f:	call   0x50d2e968
	...
  40673c:	(bad)  
  40673d:	and    al,0x97
  40673f:	test   DWORD PTR [edx+edx*1+0x33],0x9266beff
  406747:	xor    eax,0x451985
  40674c:	and    ebx,ebx
  40674e:	stos   BYTE PTR es:[edi],al
  40674f:	jmp    FWORD PTR [esp+ebp*2]
  406752:	ret    
  406753:	je     0x4067cf
  406755:	jmp    0xd05557e1
  40675a:	xchg   ecx,eax
  40675b:	push   0xbea2724a
  406760:	or     al,0xc6
  406762:	sti    
  406763:	out    0x89,eax
  406765:	and    al,0x92
  406767:	dec    eax
  406769:	or     DWORD PTR [edi+ebx*4-0x4],esp
  40676d:	mov    BYTE PTR [esi],bl
  40676f:	add    al,0x76
  406771:	adc    eax,0xfee40383
  406776:	loopne 0x406713
  406778:	sub    al,0x5b
  40677a:	push   es
  40677b:	xchg   edx,eax
  40677c:	loopne 0x406791
  40677e:	xchg   ebx,eax
  40677f:	add    al,0xcc
  406781:	(bad)  
  406782:	loopne 0x40671f
  406784:	push   0xbc91ee5b
  406789:	mov    esi,0x88b499d1
  40678e:	ficom  WORD PTR [edi-0x45]
  406791:	adc    dh,0x91
  406794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406795:	(bad)  
  406796:	loopne 0x406733
  406798:	push   es
  406799:	pop    ebx
  40679a:	(bad)  
  40679b:	xchg   ecx,eax
  40679c:	xchg   esp,eax
  40679d:	mov    esi,0x99b9
	...
  4067c6:	add    BYTE PTR [eax],al
  4067c8:	mov    WORD PTR [eax-0x7761f23f],cs
  4067ce:	scas   al,BYTE PTR es:[edi]
  4067cf:	xchg   ecx,eax
  4067d0:	push   es
  4067d1:	adc    DWORD PTR [eax-0x61778a24],0x8184f691
  4067db:	(bad)  
  4067dc:	lods   al,BYTE PTR ds:[esi]
  4067dd:	or     ecx,ebp
  4067df:	mov    edx,0x36e91189
  4067e4:	shl    BYTE PTR [ebp+0x68],0xc8
  4067e8:	xor    BYTE PTR [bp-0x6f],0xd6
  4067ed:	int    0x6c
  4067ef:	xor    al,0x3c
  4067f1:	(bad)  
  4067f2:	hlt    
  4067f3:	nop
  4067f4:	jle    0x4067c5
  4067f6:	cmovae ecx,DWORD PTR [ebx+0x71]
  4067fa:	test   DWORD PTR [ecx+0x4b],ebp
  4067fd:	or     edx,esp
  4067ff:	ret    
  406800:	dec    esp
  406801:	mov    ds,WORD PTR [edx+0x26094b02]
  406807:	inc    edi
  406808:	adc    ecx,DWORD PTR [ecx]
  40680a:	add    cl,ch
  40680c:	dec    eax
  40680d:	or     edi,eax
  40680f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406810:	aam    0x87
  406812:	pop    es
  406813:	jmp    0x93405b60
  406818:	dec    eax
  406819:	repz inc DWORD PTR [edx+0x15459648]
  406820:	pop    ss
  406821:	xchg   esi,eax
  406822:	test   ebp,edi
  406824:	mov    bl,0x87
  406826:	call   FWORD PTR [ecx-0x9080245]
	...
  406854:	pop    ebp
  406855:	test   eax,ebp
  406857:	outs   dx,DWORD PTR ds:[esi]
  406858:	xor    ecx,DWORD PTR [ecx]
  40685a:	add    dl,dh
  40685c:	mov    ah,bh
  40685e:	add    al,0xd0
  406860:	mov    dl,0x8
  406862:	add    cl,ch
  406864:	inc    eax
  406865:	shr    BYTE PTR [eax],0x28
  406868:	inc    edi
  406869:	mov    BYTE PTR [ebp-0xb],dh
  40686c:	mov    al,0xa9
  40686e:	fdivr  DWORD PTR [esi-0x66752745]
  406874:	add    eax,0xdbb6f48e
  406879:	xchg   DWORD PTR [eax+0x3b],edx
  40687c:	xlat   BYTE PTR ds:[ebx]
  40687d:	cdq    
  40687e:	fcomp  DWORD PTR [esi-0x667a6e25]
  406884:	ret    
  406885:	xchg   edi,edi
  406887:	xor    DWORD PTR [ebx+0x3686ff5c],0x6b756809
  406891:	enter  0x75ff,0x9d
  406895:	jns    0x40688e
  406897:	outs   dx,BYTE PTR ds:[esi]
  406898:	fild   DWORD PTR [esi-0x35ee50cb]
  40689e:	call   DWORD PTR [eax-0x1d]
  4068a1:	pop    esi
  4068a2:	call   DWORD PTR [esi-0x5f]
  4068a5:	mov    esp,fs
  4068a7:	push   esi
  4068a8:	mov    ebx,0x22006a86
  4068ad:	and    edi,ebp
  4068af:	das    
  4068b0:	jecxz  0x4068bc
  4068b2:	push   DWORD PTR [ebp-0x5ebe]
	...
  4068e0:	sub    eax,0xa329455f
  4068e5:	or     ch,al
  4068e7:	leave  
  4068e8:	xor    eax,0x7789ff99
  4068ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068ee:	idiv   edi
  4068f0:	dec    ebp
  4068f1:	and    al,0x0
  4068f3:	push   0x405ae4
  4068f8:	int    0xdc
  4068fa:	out    dx,eax
  4068fb:	idiv   DWORD PTR [ebp-0x1bca006a]
  406901:	arpl   WORD PTR [eax+0x0],ax
  406904:	call   0x8504:0x8dffd6e2
  40690b:	call   0x843fff95
  406910:	iret   
  406911:	mov    cl,0xf7
  406913:	dec    DWORD PTR [ebp+0x2149740d]
  406919:	fsubr  st,st(3)
  40691b:	idiv   DWORD PTR [ebp+0x32740096]
  406921:	mov    bh,BYTE PTR [ebp-0x692a18]
  406927:	add    BYTE PTR [esi+0x5e],dl
  40692a:	add    BYTE PTR [bp+si-0x59],dh
  40692e:	mov    esi,0xe78537ff
  406933:	out    dx,al
  406934:	mov    dl,0x96
  406936:	(bad)  
  406937:	call   DWORD PTR [edi]
  406939:	test   eax,0x96bdfff7
  40693e:	jne    0x406948
  406940:	retf   0xd0ca
  406943:	inc    DWORD PTR [eax]
	...
  406969:	add    BYTE PTR [eax],al
  40696b:	add    BYTE PTR [ebp-0x6a174a6a],ch
  406971:	xchg   esi,eax
  406972:	(bad)  
  406973:	dec    DWORD PTR [ebx+0x65]
  406976:	sti    
  406977:	out    0x57,eax
  406979:	inc    ecx
  40697a:	(bad)  
  40697b:	call   DWORD PTR [eax*1+0x470cf7a8]
  406982:	(bad)  
  406983:	jne    0x4069d8
  406985:	enter  0xd0e5,0xfc
  406989:	ss (bad) 
  40698b:	mov    ch,0xef
  40698d:	es (bad) 
  40698f:	jmp    ebx
  406991:	pop    edi
  406992:	mov    bh,0xff
  406994:	in     al,0x1e
  406996:	pop    ecx
  406997:	in     al,dx
  406998:	aam    0x16
  40699a:	(bad)
  40699e:	(bad)  
  40699f:	dec    esp
  4069a1:	cmp    al,0x9c
  4069a3:	test   esp,0x971a9b7e
  4069a9:	jbe    0x406939
  4069ab:	(bad)  
  4069ac:	(bad)  
  4069ad:	pop    edi
  4069ae:	xchg   esi,eax
  4069af:	jmp    FWORD PTR [esi+eiz*2-0x6b4cf7e8]
  4069b6:	(bad)  
  4069b7:	call   FWORD PTR [esi+edx*2+0x4e9cf058]
  4069be:	mov    gs,eax
  4069c0:	dec    edx
  4069c1:	pushf  
  4069c2:	mov    ?,edi
  4069c4:	test   BYTE PTR [esp+ecx*4],dh
  4069c7:	jmp    0xffcf1f8b
  4069cc:	je     0x4069f2
  4069ce:	nop
  4069cf:	call   0x4069d4
	...
  4069f8:	add    dh,cl
  4069fa:	add    al,BYTE PTR [eax]
  4069fc:	xchg   edx,eax
  4069fd:	mov    cl,0xfb
  4069ff:	push   edi
  406a01:	jmp    0x19:0x8b8f839e
  406a08:	loope  0x406a7a
  406a0a:	mov    ?,WORD PTR [ebp+0x53]
  406a0d:	mov    dh,dl
  406a0f:	sar    BYTE PTR [esp+esi*8],1
  406a12:	jnp    0x406a59
  406a14:	aaa    
  406a15:	or     dl,cl
  406a17:	daa    
  406a18:	pop    esp
  406a19:	retf   0x8ee8
  406a1c:	sahf   
  406a1d:	adc    DWORD PTR [ecx+0x27],eax
  406a20:	sbb    eax,0xc81b4e85
  406a25:	xor    al,0xa8
  406a27:	add    ecx,DWORD PTR [edi+edi*8]
  406a2a:	lock fwait
  406a2c:	pushf  
  406a2d:	xor    DWORD PTR [esi],0xffffff8e
  406a30:	jae    0x4069da
  406a32:	inc    BYTE PTR [ebx+ecx*2-0x7c]
  406a36:	pushf  
  406a37:	sti    
  406a38:	in     al,0x45
  406a3a:	sbb    al,0x8e
  406a3c:	in     al,0xf1
  406a3e:	and    esi,ebx
  406a40:	mov    ecx,DWORD PTR [ecx]
  406a42:	push   cs
  406a43:	sbb    BYTE PTR [ebx+0x71],al
  406a46:	(bad)  
  406a47:	nop
  406a48:	int3   
  406a49:	test   dh,bh
  406a4b:	pop    ss
  406a4c:	mov    DWORD PTR [esp+edi*2+0x181ca4fb],0xab52b48e
  406a57:	or     BYTE PTR [ebx-0x22],cl
  406a5a:	jno    0x4069fc
	...
  406a84:	xor    ecx,DWORD PTR [ecx]
  406a86:	jmp    0x54c54827
  406a8b:	add    BYTE PTR [esi+edi*8+0x7e1f9bf0],dl
  406a92:	mov    esi,0xe147928d
  406a97:	add    edx,DWORD PTR [esi]
  406a99:	nop
  406a9a:	mov    ebp,0xe914f681
  406a9f:	cld    
  406aa0:	enter  0xe827,0x3
  406aa4:	dec    ebx
  406aa5:	test   BYTE PTR [eax+eax*1],bl
  406aa8:	jae    0x406a89
  406aaa:	scas   al,BYTE PTR es:[edi]
  406aab:	lea    edx,[eax+edx*1-0x57]
  406aaf:	pop    ss
  406ab0:	cmp    esi,ecx
  406ab2:	xor    eax,0x98bdc
  406ab7:	jbe    0x406b0d
  406ab9:	adc    eax,0x83fe22e8
  406abe:	push   DWORD PTR [eax-0x7c]
  406ac1:	adc    eax,0x3940e96a
  406ac6:	xor    BYTE PTR [eax+0x193af148],ch
  406acc:	mov    BYTE PTR [ecx],cl
  406ace:	(bad)  
  406acf:	cld    
  406ad0:	xchg   BYTE PTR [edx],dh
  406ad2:	inc    ecx
  406ad3:	jmp    0x371645b8
  406ad8:	into   
  406ad9:	xadd   BYTE PTR [ebp+0x264fd3e6],dh
  406ae0:	push   esp
  406ae1:	adc    eax,0x839d2ee8
  406ae6:	(bad)  
  406ae7:	mov    ecx,0x0
	...
  406b10:	sbb    BYTE PTR [ebp+esi*2-0x664f1f],al
  406b17:	push   es
  406b18:	mov    esi,0xd61a2170
  406b1d:	sub    eax,0xffffffd5
  406b20:	sti    
  406b21:	cmp    edi,0xffffff83
  406b24:	dec    eax
  406b25:	icebp  
  406b26:	das    
  406b27:	sbb    DWORD PTR [eax],ecx
  406b29:	or     DWORD PTR [eax+0x22],ebp
  406b2c:	jg     0x406af6
  406b2e:	inc    DWORD PTR [eax+0x49]
  406b31:	or     DWORD PTR [eax],eax
  406b33:	imul   esi,DWORD PTR [eax-0x403929de],0x7535c00f
  406b3d:	ror    DWORD PTR [edi-0x4a],cl
  406b40:	push   ebp
  406b41:	adc    eax,0x83be56e8
  406b46:	(bad)  
  406b47:	cmp    DWORD PTR [edi],esi
  406b49:	test   BYTE PTR [ebp-0xf],dh
  406b4c:	shl    cl,0xfe
  406b4f:	xchg   esi,eax
  406b50:	iret   
  406b51:	jo     0x406b3c
  406b53:	mov    ebx,0xe883c7
  406b58:	mov    esi,0x58ffffb9
  406b5d:	or     eax,0xc8023068
  406b62:	jmp    DWORD PTR [edi+0x44]
  406b65:	pop    ebp
  406b66:	inc    eax
  406b67:	add    BYTE PTR [ebp-0xcd6baa5],ah
  406b6d:	push   es
  406b6e:	call   0xffd5cb58
  406b73:	or     eax,DWORD PTR [eax]
	...
  406b99:	add    BYTE PTR [eax],al
  406b9b:	add    BYTE PTR [edx+0x1a],ah
  406b9e:	push   ds
  406b9f:	push   eax
  406ba0:	mov    dl,0x95
  406ba2:	jne    0x406bb0
  406ba4:	call   0x5036:0x35ffd634
  406bab:	(bad)  
  406bac:	mov    edi,0x2520e77e
  406bb1:	xchg   ebp,eax
  406bb2:	(bad)  
  406bb3:	call   0x40243a
  406bb8:	dec    edx
  406bb9:	loope  0x406b8c
  406bbb:	inc    DWORD PTR [ebp+0x20]
  406bbe:	add    BYTE PTR [eax-0x6e],ch
  406bc1:	push   esi
  406bc2:	inc    eax
  406bc3:	add    dl,bl
  406bc5:	xor    al,0x30
  406bc7:	inc    ecx
  406bc8:	mov    dl,0x1e
  406bca:	add    al,BYTE PTR [eax]
  406bcc:	mov    ds:0xefade886,al
  406bd1:	mov    ?,edi
  406bd3:	or     esi,edx
  406bd5:	sbb    DWORD PTR [esi],ebx
  406bd7:	push   eax
  406bd8:	bound  ecx,QWORD PTR [esi+0x678a0c75]
  406bde:	aad    0xff
  406be0:	test   DWORD PTR ds:0x853fff50,edi
  406be6:	out    0xe8,eax
  406be8:	mov    ah,0x8e
  406bea:	(bad)  
  406beb:	call   0x40272a
  406bf0:	ficomp DWORD PTR [edx]
  406bf2:	sar    bh,cl
  406bf4:	lds    esp,FWORD PTR ds:0x314b3010
  406bfa:	add    al,0xff
  406bfc:	fisub  WORD PTR [ebx-0x65]
  406bff:	add    eax,0x0
	...
  406c28:	jne    0x406bb5
  406c2a:	mov    edx,DWORD PTR [eax-0x65]
  406c2d:	add    edx,DWORD PTR [ecx]
  406c2f:	or     BYTE PTR [ebx],dh
  406c31:	mov    bl,0x8a
  406c33:	push   DWORD PTR [eax+ecx*4]
  406c36:	xor    edx,edx
  406c38:	sub    al,0xeb
  406c3a:	mov    dh,BYTE PTR [ebp+0x57]
  406c3d:	fdivr  DWORD PTR [edx]
  406c3f:	rcr    BYTE PTR [ebx+ebx*8],cl
  406c42:	mov    esp,0x307043c2
  406c47:	mov    ebx,DWORD PTR [edi]
  406c49:	out    dx,eax
  406c4a:	mov    edi,0x1d7071f4
  406c4f:	add    bh,ah
  406c51:	(bad)  
  406c52:	sti    
  406c53:	out    0x7a,eax
  406c55:	and    ecx,DWORD PTR [ebx-0x784b3d01]
  406c5b:	push   0x3714e
  406c60:	repz scas al,BYTE PTR es:[edi]
  406c62:	mov    ch,0xff
  406c64:	aam    0xe8
  406c66:	inc    eax
  406c67:	clc    
  406c68:	arpl   WORD PTR [esp+eax*1+0x0],si
  406c6c:	dec    ebx
  406c6d:	adc    DWORD PTR [eax],0xfffffff8
  406c70:	mov    bl,0x27
  406c72:	add    BYTE PTR [bp+di+0x67],cl
  406c76:	ret    
  406c77:	je     0x406cd0
  406c79:	sub    eax,0x704b0100
  406c7e:	adc    cl,BYTE PTR ds:0xff8be49c
  406c84:	push   ds
  406c85:	push   0x4a8d889b
  406c8a:	mov    ch,bl
	...
  406cb4:	push   ebx
  406cb5:	ret    
  406cb6:	adc    al,bh
  406cb8:	jae    0x406c75
  406cba:	mov    ah,0xff
  406cbc:	je     0x406c83
  406cbe:	(bad)  
  406cc0:	pop    es
  406cc1:	or     DWORD PTR [edi-0x62279b76],edi
  406cc7:	adc    BYTE PTR [ebx+0x71],dl
  406cca:	pop    es
  406ccb:	mov    dl,BYTE PTR [ecx+eax*4+0x3]
  406ccf:	out    dx,al
  406cd0:	fs cmp al,0x9f
  406cd3:	mov    al,BYTE PTR [ebp+edx*1-0x57]
  406cd7:	xorps  xmm6,xmm1
  406cda:	aam    0xd3
  406cdc:	mov    ecx,DWORD PTR [ecx]
  406cde:	sbb    DWORD PTR [edx+eax*1+0x7b8a6657],ebx
  406ce5:	adc    ah,0xfb
  406ce8:	and    al,0xd1
  406cea:	push   esi
  406ceb:	mov    dl,BYTE PTR [esp+esi*8]
  406cee:	or     DWORD PTR [esi+esi*1+0x508a4657],ebx
  406cf5:	dec    ecx
  406cf6:	mov    ch,0xef
  406cf8:	fs sbb eax,0xd94b44f9
  406cfe:	inc    eax
  406cff:	pop    ebp
  406d00:	push   ss
  406d01:	and    DWORD PTR [esi],0xf0f6e433
  406d07:	fwait
  406d08:	sbb    edi,DWORD PTR [edi+0x16]
  406d0b:	mov    ah,BYTE PTR [ecx+0x1d]
  406d0e:	add    DWORD PTR [ecx-0x1f97f0a],edx
  406d14:	add    al,0xf6
  406d16:	aam    0x1b
	...
  406d40:	pop    edi
  406d41:	cmp    DWORD PTR [eax+0x62711b03],ebp
  406d47:	mov    al,0xac
  406d49:	cmp    BYTE PTR [ecx],0x89
  406d4c:	push   ds
  406d4d:	adc    ecx,edx
  406d4f:	repz sahf 
  406d51:	adc    dh,0x1e
  406d54:	dec    ebx
  406d55:	icebp  
  406d56:	add    edx,esp
  406d58:	or     ecx,DWORD PTR [ecx]
  406d5a:	push   ecx
  406d5b:	int    0x34
  406d5d:	retf   0x88e8
  406d60:	ss (bad) 
  406d62:	(bad)  
  406d63:	dec    DWORD PTR [eax]
  406d65:	or     eax,ebp
  406d67:	pop    ecx
  406d68:	mov    ebx,0xd239ff80
  406d6d:	test   BYTE PTR [edi],0x91
  406d70:	mov    eax,0x3596ff7e
  406d75:	or     DWORD PTR [eax-0x27],ebp
  406d78:	js     0x406d43
  406d7a:	call   DWORD PTR [eax]
  406d7c:	push   ss
  406d7d:	xor    BYTE PTR [ecx-0x17],al
  406d80:	shl    DWORD PTR ds:0x989c046,cl
  406d86:	call   0xffc04a84
  406d8b:	repnz or ch,dh
  406d8e:	adc    eax,0xff755c70
  406d93:	fadd   st(4),st
  406d95:	jg     0x406e0c
  406d97:	loope  0x406d49
  406d99:	mov    ecx,0x7fd246fd
  406d9e:	jne    0x406dd5
  406da0:	fistp  QWORD PTR [esi]
  406da2:	shl    DWORD PTR [esi],1
	...
  406dcc:	ret    0xfff2
  406dcf:	ror    BYTE PTR ds:0x40e94130,0xdf
  406dd6:	das    
  406dd7:	test   al,0x48
  406dd9:	xor    BYTE PTR ds:0xffc8f1af,0x0
  406de0:	add    bl,BYTE PTR [edi+edi*8+0x6]
  406de4:	jg     0x406d66
  406de6:	jne    0x406dd9
  406de8:	loopne 0x406d92
  406dea:	std    
  406deb:	test   bl,0xf2
  406dee:	inc    DWORD PTR [eax-0x16bed068]
  406df4:	inc    eax
  406df5:	fild   QWORD PTR [edi]
  406df7:	sub    BYTE PTR [edi-0x80],al
  406dfa:	xor    eax,0xffc8702f
  406dff:	shl    BYTE PTR [ebx-0x72ff00a5],0x7c
  406e06:	mov    edi,0x45029474
  406e0b:	hlt    
  406e0c:	mov    ebp,0x37fff40e
  406e11:	jge    0x406dfa
  406e13:	pusha  
  406e14:	scas   eax,DWORD PTR es:[edi]
  406e15:	nop
  406e16:	(bad)  
  406e17:	push   DWORD PTR [edi]
  406e19:	cdq    
  406e1a:	call   0xffd1010c
  406e1f:	push   0x62
  406e21:	and    esp,DWORD PTR ds:0x68057330
  406e27:	cmp    eax,DWORD PTR [edx]
  406e29:	int3   
  406e2a:	jmp    DWORD PTR [edi+0x20]
  406e2d:	or     eax,DWORD PTR [eax]
  406e2f:	add    BYTE PTR [eax],0x0
	...
  406e56:	add    BYTE PTR [eax],al
  406e58:	retf   0xd3a1
  406e5b:	jmp    FWORD PTR [ebp+0x1a75ff3a]
  406e61:	mov    ds:0x917dfd50,eax
  406e66:	push   0x0
  406e68:	or     bl,BYTE PTR [ebx+0x2f]
  406e6b:	inc    ecx
  406e6c:	repnz and bh,BYTE PTR [ebx]
  406e6f:	xor    BYTE PTR [ebx-0x1dfd97f6],dh
  406e75:	or     al,BYTE PTR [eax-0x4aad18]
  406e7b:	(bad)  
  406e7c:	(bad)  [edx+0x74]
  406e7f:	push   ss
  406e80:	pop    ebx
  406e81:	aas    
  406e82:	hlt    
  406e83:	push   DWORD PTR [edi-0x158a0072]
  406e89:	mov    ds:0x914dfd11,al
  406e8e:	push   DWORD PTR [ebp-0x4a]
  406e91:	mov    ds:0x86bdd09e,eax
  406e96:	push   0x0
  406e98:	retf   0x2f5f
  406e9b:	inc    ecx
  406e9c:	mov    dl,0x22
  406e9e:	pop    esi
  406e9f:	xor    BYTE PTR [ebx+0x5],dh
  406ea2:	push   0x3704b02
  406ea7:	and    BYTE PTR [ebx-0x7b004c70],0x20
  406eae:	xchg   DWORD PTR [ebp+0x53],esi
  406eb1:	pop    eax
  406eb2:	add    eax,0x1ab774fd
  406eb7:	add    bl,ah
  406eb9:	jg     0x406e8e
  406ebb:	inc    eax
	...
  406ee4:	dec    ebx
  406ee5:	sbb    BYTE PTR [esi],ah
  406ee7:	xor    BYTE PTR [edx],cl
  406ee9:	jo     0x406f06
  406eeb:	add    cl,BYTE PTR [ebx+0x70]
  406eee:	sub    eax,0xffffffca
  406ef1:	ret    
  406ef2:	xchg   edi,edi
  406ef4:	push   eax
  406ef5:	mov    al,0x10
  406ef7:	push   ss
  406ef8:	shl    BYTE PTR [eax+edx*4],cl
  406efb:	(bad)  
  406efc:	mov    esi,0x437586fc
  406f01:	mov    dl,al
  406f03:	cld    
  406f04:	and    al,0xe7
  406f06:	xchg   BYTE PTR [ebp+0x17],dh
  406f09:	fdiv   DWORD PTR [esi]
  406f0b:	rcl    BYTE PTR [edi+edx*8],1
  406f0e:	xchg   BYTE PTR [ebp+0xf],dh
  406f11:	iret   
  406f12:	adc    BYTE PTR [eax],cl
  406f14:	repz xor DWORD PTR [ecx-0x3dc70301],edi
  406f1b:	add    al,0x4b
  406f1d:	popf   
  406f1e:	jp     0x406f0c
  406f20:	arpl   WORD PTR [eax+0x3],si
  406f23:	out    dx,eax
  406f24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f25:	adc    DWORD PTR es:[esp+ebx*8],ecx
  406f29:	xchg   esp,eax
  406f2a:	sti    
  406f2b:	out    0x3c,eax
  406f2d:	and    al,BYTE PTR [edi-0x3cdfd01]
  406f33:	call   FWORD PTR [edi]
  406f35:	sti    
  406f36:	xchg   edi,eax
  406f37:	add    DWORD PTR [edi-0x4b0079cd],0xadb8812e
  406f41:	outs   dx,BYTE PTR ds:[esi]
  406f42:	xchg   BYTE PTR [eax],al
  406f44:	dec    ebx
  406f45:	or     ecx,ebp
  406f47:	add    eax,DWORD PTR [eax]
	...
  406f6d:	add    BYTE PTR [eax],al
  406f6f:	add    al,dl
  406f71:	ret    
  406f72:	in     al,dx
  406f73:	cli    
  406f74:	aam    0xf4
  406f76:	jmp    0x406efb
  406f78:	push   ebx
  406f79:	or     DWORD PTR [ecx+eax*1+0x72],edx
  406f7d:	(bad)  
  406f7f:	add    ecx,DWORD PTR [ebx+0x7e]
  406f82:	xor    al,0xf8
  406f84:	ins    BYTE PTR es:[edi],dx
  406f85:	outs   dx,BYTE PTR ds:[esi]
  406f86:	xchg   ebx,eax
  406f87:	xchg   BYTE PTR [ecx+edx*1-0x57],ch
  406f8b:	adc    BYTE PTR [ecx+esi*8+0x50],dl
  406f8f:	xlat   BYTE PTR ds:[ebx]
  406f90:	or     ecx,DWORD PTR [ecx]
  406f92:	sahf   
  406f93:	adc    BYTE PTR [edi+0x71],al
  406f96:	bound  esi,QWORD PTR [edx-0x77d82b4]
  406f9c:	lods   al,BYTE PTR ds:[esi]
  406f9d:	scas   al,BYTE PTR es:[edi]
  406f9e:	aad    0x44
  406fa0:	dec    ebx
  406fa1:	jl     0x406f97
  406fa3:	imul   DWORD PTR [esi+edi*8]
  406fa6:	cdq    
  406fa7:	xchg   BYTE PTR [ebx+edx*4],ch
  406faa:	fs dec ebx
  406fac:	and    eax,0x5d1b667d
  406fb1:	or     ch,cl
  406fb3:	add    eax,esi
  406fb5:	xchg   BYTE PTR [ebx],ch
  406fb7:	test   DWORD PTR [edi*2+0x4cff9bb9],ecx
  406fbe:	inc    esi
  406fbf:	xchg   dh,cl
  406fc1:	xchg   BYTE PTR [ebx],ch
  406fc3:	test   esp,esi
  406fc5:	jl     0x406f60
  406fc7:	xchg   BYTE PTR [esi-0x1b79d03f],dh
  406fcd:	jno    0x406fa8
  406fcf:	fs dec ebx
  406fd1:	or     DWORD PTR [eax-0x80],esi
	...
  406ffc:	xchg   edi,eax
  406ffd:	jnp    0x407015
  406fff:	xchg   BYTE PTR [ebx+0x4b8a650c],cl
  407005:	or     ecx,ebp
  407007:	js     0x406fdf
  407009:	inc    edi
  40700a:	inc    DWORD PTR [ebp-0x14ff8b4c]
  407010:	mov    eax,0x54e9ff7c
  407015:	out    0x8c,al
  407017:	sub    eax,DWORD PTR [ebx+0x738a67cc]
  40701d:	leave  
  40701e:	inc    eax
  407020:	xchg   esp,eax
  407021:	test   eax,0xbc83e900
  407026:	jne    0x407014
  407028:	loope  0x406fe4
  40702a:	add    cl,ch
  40702c:	dec    eax
  40702d:	mov    ss,WORD PTR [ebp-0x833a55]
  407033:	pop    esp
  407034:	or     DWORD PTR ds:0x2cfc1150,ebp
  40703a:	inc    ecx
  40703b:	jmp    0xe9e0e9f0
  407040:	dec    eax
  407041:	adc    al,al
  407043:	adc    al,0x44
  407045:	jno    0x406fdb
  407047:	jmp    0x36a87994
  40704c:	pop    ss
  40704d:	leave  
  40704e:	push   DWORD PTR [ebp+0x3c]
  407051:	or     eax,0x7bd976e8
  407056:	push   DWORD PTR [esp+ebp*4+0x47]
  40705a:	(bad)  
  40705b:	pop    esi
  40705c:	into   
  40705d:	lea    edx,[edx+0x5]
	...
  407088:	pop    ecx
  407089:	(bad)  
  40708b:	adc    bh,BYTE PTR [edx-0x38660085]
  407091:	cmc    
  407092:	setns  bh
  407095:	cmc    
  407096:	pop    es
  407097:	inc    ecx
  407098:	stc    
  407099:	jp     0x40709a
  40709b:	cs (bad) 
  40709d:	xor    cl,bh
  40709f:	es (bad) 
  4070a1:	outs   dx,DWORD PTR ds:[esi]
  4070a2:	arpl   WORD PTR [ecx+ecx*4+0x2d],bp
  4070a6:	mov    DWORD PTR [ebx+edi*2+0x7b],ebp
  4070aa:	dec    DWORD PTR [esi]
  4070ac:	scas   eax,DWORD PTR es:[di]
  4070ae:	xor    BYTE PTR [eax],al
  4070b0:	repz pop es
  4070b2:	push   DWORD PTR [ebp-0x7c82]
  4070b8:	dec    edx
  4070b9:	into   
  4070ba:	mov    al,ds:0xbf80b200
  4070bf:	je     0x40712d
  4070c1:	sbb    eax,0x56328b7
  4070c6:	push   DWORD PTR [ebp-0x5a]
  4070c9:	lahf   
  4070ca:	test   eax,0xff8495d2
  4070cf:	mov    ch,0xfe
  4070d1:	test   edi,edi
  4070d3:	call   DWORD PTR [edx-0x63]
  4070d6:	icebp  
  4070d7:	shl    BYTE PTR [ebp-0xeafaf7c],cl
  4070dd:	add    dl,BYTE PTR [eax]
  4070df:	add    BYTE PTR [esi],bh
  4070e1:	je     0x40714a
  4070e3:	mov    DWORD PTR [edx-0x3a],esi
  4070e6:	dec    DWORD PTR [edi-0x36]
  4070e9:	cld    
  4070ea:	mov    al,ds:0x0
	...
  407113:	add    BYTE PTR [edx],dh
  407115:	mov    ds:0x733b805,al
  40711a:	add    BYTE PTR [eax],al
  40711c:	push   0x2b74bf80
  407121:	cmp    edi,edi
  407123:	jne    0x40714f
  407125:	lahf   
  407126:	xchg   esi,eax
  407127:	(bad)  
  407128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407129:	test   eax,ebp
  40712b:	shl    DWORD PTR [ebp+eax*4-0x1],1
  40712f:	lea    ebx,[edi-0x6a0001b8]
  407135:	push   DWORD PTR ss:[ebp-0x7b3a]
  40713c:	call   0xbffb:0xe200a03d
  407143:	movq   mm6,QWORD PTR [esi-0x2]
  407147:	jmp    DWORD PTR ds:0x34bcb585
  40714d:	test   edi,edi
  40714f:	call   0xa3c79f
  407154:	dec    ebx
  407155:	or     ecx,DWORD PTR [esi-0x48]
  407158:	mov    ebp,0xeae88403
  40715d:	sub    al,BYTE PTR [edi+edi*8-0x8d17e]
  407164:	jmp    esi
  407166:	xchg   esi,eax
  407167:	add    DWORD PTR [edi-0x68bab49c],0x70
  40716e:	add    eax,DWORD PTR [eax]
  407170:	dec    ebx
  407171:	push   ebx
  407172:	stc    
  407173:	or     esi,DWORD PTR [ebx-0x4d]
  407176:	push   esi
  407177:	inc    DWORD PTR [eax]
	...
  40719d:	add    BYTE PTR [eax],al
  40719f:	add    BYTE PTR [edi+esi*2+0x43],bh
  4071a3:	je     0x4071f6
  4071a5:	stc    
  4071a6:	enter  0x6cfb,0x3d
  4071aa:	adc    al,0xff
  4071ac:	fisubr WORD PTR [ebx-0x5c86ea94]
  4071b2:	adc    DWORD PTR [eax+0x54],0x15
  4071b6:	sub    al,0xde
  4071b9:	mov    eax,ds:0x24d4ff83
  4071be:	sub    BYTE PTR [edx+0x4a],0x83
  4071c2:	stc    
  4071c3:	sti    
  4071c4:	xor    al,0x75
  4071c6:	or     ebp,eax
  4071c8:	ja     0x4071bc
  4071ca:	cmp    bh,0x24
  4071cd:	jne    0x40724e
  4071cf:	call   0xffc3a44a
  4071d4:	add    ch,BYTE PTR [esi]
  4071d6:	adc    BYTE PTR [eax],al
  4071d8:	jbe    0x4071c1
  4071da:	outs   dx,DWORD PTR ds:[esi]
  4071db:	or     DWORD PTR [edi],0xfcff81e0
  4071e1:	push   ebp
  4071e2:	add    ebp,DWORD PTR [edx+0x48]
  4071e5:	cmp    edi,ecx
  4071e7:	pop    es
  4071e8:	jecxz  0x4071a5
  4071ea:	dec    esi
  4071eb:	jmp    esp
  4071ed:	call   0x9b46dba
  4071f2:	in     eax,dx
  4071f3:	add    al,0x4b
  4071f5:	or     DWORD PTR [ecx+ecx*4-0x2c],ebp
  4071f9:	jp     0x407211
  4071fb:	sbb    DWORD PTR [ebx],0x71
  4071fe:	xor    eax,0xf2094ba3
  407203:	inc    ebx
	...
  40722c:	inc    esp
  40722d:	test   DWORD PTR [edx+0x4],ecx
  407230:	dec    ebx
  407231:	or     DWORD PTR [edi+eax*1+0x12e9094a],esi
  407238:	les    esp,FWORD PTR [eax-0xeb4fc17]
  40723e:	xchg   DWORD PTR [ebx],esi
  407240:	or     cl,BYTE PTR [ecx]
  407242:	mov    BYTE PTR fs:[edx+edi*2-0x32],bh
  407247:	sbb    BYTE PTR [ebx],0x71
  40724a:	mov    dl,BYTE PTR [esp+esi*2+0x79]
  40724e:	jo     0x4071d8
  407250:	jnp    0x4072cc
  407252:	mov    dh,0x82
  407254:	fs mov bl,0xb9
  407257:	sbb    DWORD PTR [ecx+edi*2+0x11],0xe9094a08
  40725f:	nop
  407260:	(bad)  
  407261:	jno    0x4071fa
  407263:	add    BYTE PTR [edx+ebx*8+0x0],0xbd
  407268:	jae    0x407234
  40726a:	call   0x287a715a
  40726f:	add    al,0xa3
  407271:	test   al,0xb9
  407273:	les    esp,FWORD PTR [ecx+esi*2]
  407276:	arpl   WORD PTR [edx+0x43f2094b],sp
  40727c:	lahf   
  40727d:	sbb    dl,bl
  40727f:	add    edi,DWORD PTR [esi+0x4815e8e]
  407285:	jns    0x407240
  407287:	xor    BYTE PTR [esi+0x1],0x51
  40728b:	popf   
  40728c:	idiv   BYTE PTR [eax+0x3e]
  40728f:	add    BYTE PTR [eax],0x0
	...
  4072b6:	add    BYTE PTR [eax],al
  4072b8:	mov    dh,0x79
  4072ba:	add    BYTE PTR [edi],dh
  4072bc:	leave  
  4072bd:	js     0x407327
  4072bf:	in     eax,0x47
  4072c1:	or     DWORD PTR [eax],eax
  4072c3:	je     0x407288
  4072c5:	cmp    dh,0x1e
  4072c8:	leave  
  4072c9:	fldenv [edi+0x50]
  4072cc:	jo     0x407298
  4072ce:	inc    DWORD PTR [eax-0x16bec602]
  4072d4:	mov    al,ds:0x48a830a7
  4072d9:	popa   
  4072da:	dec    edi
  4072db:	push   esi
  4072dc:	dec    eax
  4072dd:	or     DWORD PTR [ebx],ecx
  4072df:	sub    DWORD PTR [ecx+ebx*1-0x713a1696],edx
  4072e6:	neg    edi
  4072e8:	retf   0x5078
  4072eb:	(bad)  
  4072ec:	jl     0x4072fe
  4072ee:	call   0xffb86f21
  4072f3:	(bad)  
  4072f4:	mov    esp,0xcabefe79
  4072f9:	popa   
  4072fa:	jge    0x4072a0
  4072fc:	retf   0x6a78
  4072ff:	add    ch,bh
  407301:	dec    ebp
  407302:	shl    DWORD PTR [esi+0x15c004ca],1
  407308:	sub    esp,ecx
  40730a:	(bad)  
  40730b:	(bad)  [ecx]
  40730d:	js     0x40735e
  40730f:	sbb    DWORD PTR ds:0x1f86ff59,0xca18ffe2
  407319:	std    
  40731a:	pop    es
  40731b:	add    DWORD PTR [eax],0x0
	...
  407341:	add    BYTE PTR [eax],al
  407343:	add    BYTE PTR [ebp+0x76],bl
  407346:	jmp    FWORD PTR [esi-0x51]
  407349:	(bad)  
  40734b:	retfw  0x7ee0
  40734f:	sbb    DWORD PTR [eax],ecx
  407351:	js     0x4073bc
  407353:	repz retf 
  407355:	std    
  407356:	pop    es
  407357:	inc    ecx
  407358:	lods   eax,DWORD PTR ds:[esi]
  407359:	jbe    0x40735a
  40735b:	add    BYTE PTR [ebp-0x5ccf819b],cl
  407361:	or     ebp,DWORD PTR [edx+0x23]
  407364:	sbb    eax,0x79e80780
  407369:	mov    edi,edi
  40736b:	(bad)  
  40736c:	mov    edx,0xe2413008
  407371:	gs sbb edi,edi
  407374:	out    0x3,eax
  407376:	call   0xffcac007
  40737b:	push   DWORD PTR [edi]
  40737d:	clc    
  40737e:	(bad)  
  40737f:	jne    0x40733b
  407381:	jecxz  0x40731e
  407383:	retf   0x889d
  407386:	leave  
  407387:	ret    0xba6
  40738a:	push   ebp
  40738b:	mov    edi,DWORD PTR [esi+0x63]
  40738e:	(bad)  
  40738f:	(bad)  
  407390:	jge    0x4073db
  407392:	push   DWORD PTR [ebp+0x6e]
  407395:	mov    BYTE PTR [ebp+0x8],dh
  407398:	mov    bh,dl
  40739a:	in     eax,dx
  40739b:	dec    DWORD PTR [ebp+0x6208c1c2]
  4073a1:	pop    esi
  4073a2:	mov    ch,ah
  4073a4:	icebp  
  4073a5:	iret   
  4073a6:	test   edi,0x0
	...
  4073d0:	daa    
  4073d1:	mov    DWORD PTR [eax],eax
  4073d3:	add    BYTE PTR [edx+0xb],ah
  4073d6:	lea    eax,[ebp-0x52]
  4073d9:	pop    ebx
  4073da:	addr16 leave 
  4073dc:	and    cl,BYTE PTR [edi+edi*8-0x2]
  4073e0:	push   edi
  4073e1:	sbb    edi,edi
  4073e3:	xor    eax,0x412264
  4073e8:	(bad)  
  4073ea:	into   
  4073eb:	call   FWORD PTR [ebp+0xc74c005]
  4073f1:	test   BYTE PTR [ebp-0x8],al
  4073f4:	cli    
  4073f5:	or     eax,DWORD PTR [eax]
  4073f7:	out    dx,eax
  4073f8:	lods   al,BYTE PTR ds:[esi]
  4073f9:	mov    DWORD PTR [ebp-0x4],esi
  4073fc:	dec    ebx
  4073fd:	fcomip st,st(5)
  4073ff:	idiv   esp
  407401:	pop    ebp
  407402:	or     ebp,eax
  407404:	xchg   ecx,eax
  407405:	fidivr WORD PTR [edi-0x1]
  407408:	in     al,dx
  407409:	mov    ebp,0x2ca6e87b
  40740e:	cmp    bh,0x12
  407411:	and    ecx,DWORD PTR [ebx]
  407413:	add    BYTE PTR [esi-0x5],bh
  407416:	outs   dx,BYTE PTR ds:[esi]
  407417:	add    DWORD PTR [edi],0xc4ff80dd
  40741d:	daa    
  40741e:	xchg   BYTE PTR [eax+0x8007bd],bh
  407424:	dec    ebx
  407425:	pusha  
  407426:	add    ecx,DWORD PTR [ebx-0x3ff39bfa]
  40742c:	pop    ds
  40742d:	cmp    DWORD PTR gs:[eax],0x4b
  407431:	std    
  407432:	add    eax,0xe9
	...
  40745b:	add    BYTE PTR [edi+0x61],cl
  40745e:	add    eax,DWORD PTR [eax]
  407460:	mov    ebp,ds
  407462:	adc    edi,edi
  407464:	(bad)  
  407465:	imul   ebp,DWORD PTR [ebx+0x29],0xffffff9b
  407469:	inc    edi
  40746a:	jg     0x4074bc
  40746c:	sbb    ecx,DWORD PTR [edi-0x7]
  40746f:	pop    es
  407470:	arpl   si,cx
  407472:	jle    0x407473
  407474:	fs dec eax
  407476:	sti    
  407477:	retf   
  407478:	pop    esp
  407479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40747a:	in     al,dx
  40747b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40747c:	daa    
  40747d:	and    DWORD PTR [edi+edi*8],eax
  407480:	(bad)  
  407481:	arpl   WORD PTR [ebx+0xd],bp
  407484:	sbb    ebx,DWORD PTR [edi-0x28397681]
  40748a:	jge    0x40748b
  40748c:	xor    al,0x18
  40748e:	add    DWORD PTR ds:[ebx+0x60],ecx
  407492:	nop
  407493:	test   DWORD PTR [ecx],ecx
  407495:	(bad)  
  407496:	jle    0x407497
  407498:	jnp    0x407422
  40749a:	mov    esp,ecx
  40749c:	adc    al,0x9
  40749e:	xchg   cx,ax
  4074a0:	(bad)  
  4074a1:	dec    edx
  4074a2:	pop    edi
  4074a3:	jg     0x4074a9
  4074a5:	fst    DWORD PTR [ebp-0x47]
  4074a8:	ret    
  4074a9:	jbe    0x4074f9
  4074ab:	jg     0x407490
  4074ad:	inc    edi
  4074ae:	fs add al,0x4b
  4074b1:	and    BYTE PTR [eax+eax*8-0x1b],0x75
  4074b6:	les    ecx,FWORD PTR ss:[ebp-0x73]
  4074ba:	xchg   BYTE PTR [ebx+ecx*2],al
  4074bd:	or     DWORD PTR [ecx+ebx*4+0x0],esi
	...
  4074e5:	add    BYTE PTR [eax],al
  4074e7:	add    BYTE PTR [ecx],cl
  4074e9:	ja     0x407509
  4074eb:	jg     0x4074a9
  4074ed:	or     bh,cl
  4074ef:	add    ecx,DWORD PTR [ebx+0x9]
  4074f2:	xchg   ebp,eax
  4074f3:	test   edi,0xac7e2b9b
  4074f9:	jne    0x407567
  4074fb:	ret    0xd970
  4074fe:	and    BYTE PTR [edx+0x6be8c86f],0xb3
  407505:	xchg   ebx,eax
  407506:	jmp    0x5489b50e
  40750b:	add    dh,BYTE PTR [eax-0x2e]
  40750e:	arpl   WORD PTR [eax+0x7ece7689],bx
  407514:	(bad)  
  407515:	retf   0xd414
  407518:	in     al,0xab
  40751a:	or     eax,0x376d64c5
  40751f:	mov    eax,ds:0x43e2094b
  407524:	fimul  WORD PTR [edx]
  407526:	xchg   edx,eax
  407527:	ret    
  407528:	mov    edi,0x447dab9b
  40752d:	jne    0x407593
  40752f:	shl    DWORD PTR [eax-0x7e],0x64
  407533:	mov    bh,0x35
  407535:	jne    0x4074bd
  407537:	jmp    0x40752e
  407539:	and    DWORD PTR [eax],ebp
  40753b:	add    al,0x24
  40753d:	(bad)  
  40753e:	jmp    esp
  407540:	mov    al,0xf2
  407542:	into   
  407543:	outs   dx,BYTE PTR ds:[esi]
  407544:	xchg   ebp,eax
  407545:	je     0x4074fc
  407547:	popf   
  407548:	mov    ?,WORD PTR [edi+edi*8-0x47]
	...
  407574:	jo     0x4075c0
  407576:	iret   
  407577:	push   esi
  407578:	jge    0x4075ee
  40757a:	jne    0x407575
  40757c:	sbb    BYTE PTR [ebp-0x48],ch
  40757f:	ss ins DWORD PTR es:[edi],dx
  407581:	je     0x4075d3
  407583:	cdq    
  407584:	inc    BYTE PTR gs:[edi]
  407587:	inc    ecx
  407588:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407589:	jae    0x40758a
  40758b:	cs pusha 
  40758d:	mov    ebx,0x864d26cb
  407592:	test   DWORD PTR [ebx],ebp
  407594:	inc    esi
  407595:	je     0x407596
  407597:	mov    ecx,0xfbcbe3d
  40759c:	xor    eax,0xebd5e874
  4075a1:	or     DWORD PTR [eax],eax
  4075a3:	or     BYTE PTR fs:[eax*4-0x8be273],al
  4075ab:	out    dx,al
  4075ac:	fdiv   QWORD PTR [ebp+0x610ee6fe]
  4075b2:	pop    ds
  4075b3:	jl     0x407604
  4075b5:	or     edi,edi
  4075b7:	pushf  
  4075b8:	mov    edi,0xe7ceff73
  4075bd:	mov    cl,bl
  4075bf:	(bad)  
  4075c0:	out    dx,al
  4075c1:	inc    ecx
  4075c2:	ret    0x48ed
  4075c5:	fimul  WORD PTR [edx-0x3b2353b]
  4075cb:	scas   al,BYTE PTR es:[edi]
  4075cc:	pop    esp
  4075cd:	add    al,ch
  4075cf:	stos   BYTE PTR es:[edi],al
  4075d0:	(bad)  
  4075d1:	jae    0x4075d2
  4075d3:	jo     0x4075e1
  4075d5:	jo     0x4075e2
  4075d7:	test   eax,0x0
	...
  407600:	dec    esi
  407601:	lea    ecx,[ecx+ebp*8+0x680948]
  407608:	lds    esi,FWORD PTR [edi]
  40760a:	inc    ecx
  40760b:	add    BYTE PTR [ebp-0x66170484],ah
  407611:	ret    
  407612:	(bad)  
  407613:	push   DWORD PTR [edx]
  407615:	gs dec edi
  407617:	xor    ah,bl
  407619:	pop    es
  40761a:	push   eax
  40761b:	call   FWORD PTR [edi]
  40761d:	add    al,ch
  40761f:	xchg   esp,eax
  407620:	xchg   esp,eax
  407621:	idiv   dh
  407623:	call   0x3f36d2
  407628:	sbb    bl,BYTE PTR [edx+esi*1]
  40762b:	inc    ecx
  40762c:	repnz hlt 
  40762e:	je     0x40762c
  407630:	mov    cl,bh
  407632:	int    0xff
  407634:	and    eax,0xf050675d
  407639:	inc    esi
  40763a:	dec    DWORD PTR [edi+0x65]
  40763d:	jl     0x407646
  40763f:	call   0x3f6c25
  407644:	dec    edx
  407645:	cs retf 
  407647:	inc    DWORD PTR [ebp+0x65]
  40764a:	sub    al,0x32
  40764c:	repz pop es
  40764e:	push   DWORD PTR [ebp-0x6a]
  407651:	fistp  QWORD PTR [eax+0x4ff4a5ce]
  407657:	push   0x413752
  40765c:	inc    edx
  40765d:	div    BYTE PTR [eax+ecx*1-0x76]
  407661:	pop    ecx
  407662:	std    
  407663:	inc    DWORD PTR [eax]
	...
  407689:	add    BYTE PTR [eax],al
  40768b:	add    BYTE PTR [ebp-0x7a34fa21],al
  407691:	hlt    
  407692:	addr16 inc edi
  407694:	pusha  
  407695:	inc    esi
  407696:	(bad)  
  407697:	(bad)  
  407698:	pop    ds
  407699:	mov    eax,ebp
  40769b:	cwde   
  40769c:	mov    ah,0xf4
  40769e:	(bad)  
  40769f:	push   eax
  4076a0:	cmp    bl,BYTE PTR [ebp+0x31]
  4076a3:	inc    ecx
  4076a4:	xor    dl,BYTE PTR [edi-0x2]
  4076a7:	jne    0x4076f4
  4076a9:	push   0x8435316b
  4076ae:	jl     0x407698
  4076b0:	es mov bh,0x7c
  4076b3:	jmp    DWORD PTR [esi+edi*2]
  4076b6:	jg     0x4076a0
  4076b8:	(bad)  
  4076b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076ba:	jl     0x4076bb
  4076bc:	add    bl,BYTE PTR [edi-0x889fff5]
  4076c2:	outs   dx,BYTE PTR ds:[esi]
  4076c3:	or     DWORD PTR [edi],0xffffffd5
  4076c6:	shr    DWORD PTR [ecx+0x4b],cl
  4076c9:	inc    esi
  4076ca:	pop    es
  4076cb:	(bad)  
  4076cc:	jle    0x407736
  4076ce:	imul   edi,esi,0x4
  4076d1:	int3   
  4076d2:	jnp    0x40765d
  4076d4:	mov    ?,WORD PTR [eax+ecx*4]
  4076d7:	cmp    eax,0xffc3087c
  4076dc:	push   esp
  4076dd:	arpl   WORD PTR [ebx],ax
  4076df:	je     0x4076f1
  4076e1:	cwde   
  4076e2:	inc    edx
  4076e3:	xor    BYTE PTR [edx],cl
  4076e5:	pusha  
  4076e6:	aam    0xe7
  4076e8:	adc    bh,ch
  4076ea:	add    al,BYTE PTR [eax]
  4076ec:	inc    eax
  4076ed:	and    bh,dh
  4076ef:	sbb    eax,0x0
	...
  407718:	adc    al,0x18
  40771a:	out    dx,eax
  40771b:	shl    DWORD PTR [ebx+esi*2+0x5417c007],cl
  407722:	shl    DWORD PTR [edi-0x5],cl
  407725:	lods   eax,DWORD PTR ds:[esi]
  407726:	ret    0xfcff
  407729:	push   0xfffffff1
  40772b:	pop    es
  40772c:	jae    0x4076e9
  40772e:	jns    0x40772f
  407730:	jl     0x40777a
  407732:	(bad)
  407736:	js     0x40776b
  407738:	mov    ecx,DWORD PTR [ecx-0x4c9b0085]
  40773e:	jbe    0x4076ee
  407740:	and    esp,DWORD PTR [ebx-0x10]
  407743:	(bad)
  407747:	jne    0x40778c
  407749:	or     DWORD PTR [ecx-0x618dba8b],edx
  40774f:	out    dx,al
  407750:	imul   esi,DWORD PTR [edx+0x1c],0x8f6a230c
  407757:	jnp    0x407785
  407759:	(bad)  
  40775b:	jp     0x4076fb
  40775d:	add    DWORD PTR [ecx+0x76721d59],edx
  407763:	out    dx,al
  407764:	outs   dx,BYTE PTR ds:[esi]
  407765:	jb     0x40775b
  407767:	or     esp,DWORD PTR [ebx]
  407769:	push   esi
  40776a:	addr16 jnp 0x407771
  40776d:	loope  0x4077a8
  40776f:	xor    al,0x8a
  407771:	or     DWORD PTR [esi-0xf],edx
  407774:	dec    esp
  407775:	popa   
  407776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407777:	js     0x407765
  407779:	jno    0x40774c
  40777b:	add    al,0x0
	...
  4077a1:	add    BYTE PTR [eax],al
  4077a3:	add    BYTE PTR [edx],bl
  4077a5:	enter  0x7ae8,0x56
  4077a9:	add    DWORD PTR [ecx+0x3c],eax
  4077ac:	(bad)  
  4077ad:	jno    0x4077dd
  4077af:	in     al,dx
  4077b0:	adc    eax,0xc403a838
  4077b5:	sti    
  4077b6:	lock imul esi,DWORD PTR [eax+0x74],0x16
  4077bb:	jnp    0x4077e0
  4077bd:	in     al,dx
  4077be:	xlat   BYTE PTR ds:[ebx]
  4077bf:	les    ebp,FWORD PTR [edx+esi*2+0x12b30b7c]
  4077c6:	cld    
  4077c7:	jp     0x407765
  4077c9:	loopne 0x40781c
  4077cb:	xor    eax,0xf0ee090a
  4077d0:	inc    esp
  4077d1:	popa   
  4077d2:	clc    
  4077d3:	js     0x407759
  4077d5:	jno    0x407828
  4077d7:	dec    ebp
  4077d8:	cmp    cl,al
  4077da:	call   0xc1417659
  4077df:	jmp    FWORD PTR [edi+0x71]
  4077e2:	(bad)  
  4077e3:	jp     0x4077c3
  4077e5:	je     0x4077a5
  4077e7:	lock inc esp
  4077e9:	popa   
  4077ea:	add    BYTE PTR [ebx],dh
  4077ec:	or     BYTE PTR [edx-0x1],dh
  4077ef:	push   cs
  4077f0:	inc    BYTE PTR [esi+0x4]
  4077f3:	jmp    0x6b2cfc13
  4077f8:	inc    ebx
  4077f9:	add    eax,0x70591d00
  4077fe:	jne    0x4077f9
  407800:	mov    cl,0xf6
  407802:	or     eax,DWORD PTR [esi-0x4c17f6e5]
	...
  407830:	lods   eax,DWORD PTR ds:[esi]
  407831:	jo     0x407832
  407833:	jbe    0x407850
  407835:	add    eax,0x707f91e8
  40783a:	push   DWORD PTR [eax]
  40783c:	mov    ?,ebp
  40783e:	push   DWORD PTR [ebx+0x2d835dcd]
  407844:	jl     0x407829
  407846:	dec    DWORD PTR [ebp-0x5]
  407849:	sbb    al,0xff
  40784b:	mov    esp,0xed757038
  407850:	jo     0x4078a9
  407852:	int3   
  407853:	ss push ecx
  407855:	add    al,0xc0
  407857:	mov    ch,0xf4
  407859:	add    DWORD PTR [ebp+0x25],0xa83249b0
  407860:	dec    eax
  407861:	jo     0x4078d8
  407863:	adc    eax,0xeccc220
  407868:	xor    ecx,esp
  40786a:	(bad)  
  40786b:	call   0xfe9127a1
  407870:	lods   al,BYTE PTR ds:[esi]
  407871:	or     al,ch
  407873:	dec    esp
  407874:	adc    DWORD PTR [eax-0x1],esi
  407877:	add    DWORD PTR [ebx+edi*1],0xf603e941
  40787e:	sti    
  40787f:	shl    DWORD PTR [ecx],1
  407881:	notrack call esi
  407884:	or     DWORD PTR [bx+si],eax
  407887:	mov    esi,0xfed9b1
  40788c:	daa    
  40788d:	std    
  40788e:	out    0x8a,eax
  407890:	popf   
  407891:	repnz (bad) 
  407893:	push   0x0
	...
  4078bc:	mov    ch,0x37
  4078be:	inc    ecx
  4078bf:	add    BYTE PTR [ebp+0x41e8fb60],bl
  4078c5:	(bad)  
  4078c6:	(bad)  
  4078c7:	call   FWORD PTR [edx+0x7]
  4078ca:	add    bh,ch
  4078cc:	pushf  
  4078cd:	push   ebp
  4078ce:	(bad)  
  4078cf:	jne    0x4078fb
  4078d1:	in     al,0x6e
  4078d3:	dec    ebp
  4078d5:	icebp  
  4078d6:	(bad)  
  4078d7:	jne    0x407877
  4078d9:	fstp   QWORD PTR [ebp-0x37]
  4078dc:	popf   
  4078dd:	repnz enter 0xf2c2,0xb
  4078e2:	push   ebp
  4078e3:	mov    ebx,DWORD PTR [esi-0x4ccd1ca3]
  4078e9:	or     edi,edi
  4078eb:	jne    0x4078db
  4078ed:	jecxz  0x4078d7
  4078ef:	int3   
  4078f0:	jge    0x4078e4
  4078f2:	(bad)  
  4078f3:	jne    0x4078f7
  4078f5:	pop    esp
  4078f6:	out    0x34,eax
  4078f8:	das    
  4078f9:	repnz (bad) 
  4078fb:	call   DWORD PTR [edi-0x6800b001]
  407901:	add    ebp,eax
  407903:	ds ins DWORD PTR es:[edi],dx
  407905:	repnz (bad) 
  407907:	push   0x413762
  40790c:	pop    ebp
  40790d:	pusha  
  40790e:	or     ebp,eax
  407910:	gs sar esi,0xff
  407914:	dec    ebp
  407915:	pusha  
  407916:	(bad)  
  407918:	cmp    dl,BYTE PTR [edi]
  40791a:	int    0xff
  40791c:	popf   
  40791d:	lock je 0x407934
	...
  407948:	mov    dl,0xf0
  40794a:	je     0x407954
  40794c:	call   0xc1c2:0x9dffff17
  407953:	adc    BYTE PTR [ebx+0x62],cl
  407956:	into   
  407957:	mov    bl,BYTE PTR [edi-0x1e]
  40795a:	ds cld 
  40795c:	fs sub al,0x8
  40795f:	call   0xffb9165f
  407964:	inc    eax
  407965:	mov    ds:0x24c249ef,al
  40796a:	js     0x4079d4
  40796c:	dec    ebx
  40796d:	pusha  
  40796e:	push   0x35a1b3be
  407973:	inc    ecx
  407974:	dec    ebx
  407975:	xchg   edi,eax
  407976:	out    dx,al
  407977:	sti    
  407978:	sub    al,0x16
  40797a:	or     al,0xe8
  40797c:	rol    BYTE PTR [edi+0x61b3ff78],1
  407982:	add    ebp,edi
  407984:	aad    0x8
  407986:	dec    eax
  407987:	xor    cl,BYTE PTR [edx+0x7757860]
  40798d:	call   0x5733817f
  407992:	js     0x407993
  407994:	hlt    
  407995:	dec    eax
  407996:	add    eax,0xeb7edc00
  40799b:	(bad)  
  40799c:	sbb    DWORD PTR [ecx+0x2c56ff03],esp
  4079a2:	js     0x407a19
  4079a4:	inc    ebx
  4079a5:	enter  0xfee1,0xcc
  4079a9:	pop    ds
  4079aa:	js     0x407a21
	...
  4079d4:	(bad)  
  4079d5:	sbb    BYTE PTR [eax+ecx*8-0x3db5f044],dh
  4079dc:	inc    ebx
  4079dd:	pusha  
  4079de:	into   
  4079df:	mov    bl,BYTE PTR [edi+0x31fc3ee3]
  4079e5:	pusha  
  4079e6:	in     eax,dx
  4079e7:	add    al,0x9c
  4079e9:	cmc    
  4079ea:	or     ch,al
  4079ec:	jle    0x407a0b
  4079ee:	js     0x4079ef
  4079f0:	ret    0x77a5
  4079f3:	push   0xc51b09d9
  4079f8:	jl     0x4079e0
  4079fa:	inc    eax
  4079fb:	xor    cl,BYTE PTR [edx]
  4079fd:	or     esi,edx
  4079ff:	xor    DWORD PTR ds:0x64042820,eax
  407a05:	hlt    
  407a06:	lock imul ebp,DWORD PTR [ebp-0x1c884191],0xffffffa4
  407a0e:	sti    
  407a0f:	les    ecx,FWORD PTR [esi+eiz*8+0x3c]
  407a13:	xor    cl,BYTE PTR [edx-0x7ace59f7]
  407a19:	and    BYTE PTR [eax],ch
  407a1b:	add    al,0x34
  407a1d:	hlt    
  407a1e:	loopne 0x407a8b
  407a20:	aad    0x6e
  407a22:	mov    ?,WORD PTR [edi-0x4d]
  407a25:	mov    al,ds:0xe61cc4bb
  407a2a:	and    BYTE PTR [edx],dh
  407a2c:	mov    cl,BYTE PTR [ecx]
  407a2e:	jbe    0x407a61
  407a30:	test   DWORD PTR [eax],esp
  407a32:	sub    BYTE PTR [esp+eax*1],al
  407a35:	hlt    
  407a36:	lock imul eax,DWORD PTR [eax],0x0
	...
  407a5e:	add    BYTE PTR [eax],al
  407a60:	jge    0x407ad1
  407a62:	pop    esi
  407a63:	ja     0x407ac8
  407a65:	mov    bh,0x1b
  407a67:	(bad)
  407a6a:	mov    al,0x31
  407a6c:	mov    cl,BYTE PTR [ecx]
  407a6e:	inc    esi
  407a6f:	xor    DWORD PTR [ebp-0x2bfc57e0],eax
  407a75:	repz loopne 0x407ae3
  407a78:	outs   dx,DWORD PTR gs:[esi]
  407a7a:	cs ja  0x407ab0
  407a7d:	fcmovnb st,st(4)
  407a80:	mov    esp,0xa319ee5
  407a85:	or     DWORD PTR [esi],edx
  407a87:	xor    DWORD PTR ds:0xa403a820,eax
  407a8d:	repz lock imul ecx,DWORD PTR ds:0x2376fe6f,0xffffffa5
  407a96:	add    BYTE PTR [ebx+0x6f676d87],bh
  407a9c:	cmp    cl,al
  407a9e:	jmp    ebp
  407aa0:	cmp    eax,edi
  407aa2:	sub    BYTE PTR [eax],ch
  407aa4:	dec    edi
  407aa5:	outs   dx,BYTE PTR ds:[esi]
  407aa6:	jne    0x407a89
  407aa8:	loopne 0x407ae0
  407aaa:	dec    dh
  407aac:	fucom  st(0)
  407aae:	test   al,0xfb
  407ab0:	xchg   DWORD PTR [ebp+0x67],ebp
  407ab3:	aas    
  407ab4:	sbb    eax,ecx
  407ab6:	push   DWORD PTR [ebp+0x2828c71b]
  407abc:	dec    edi
  407abd:	ins    BYTE PTR es:[edi],dx
  407abe:	jne    0x407ab1
  407ac0:	mov    al,0xb
  407ac2:	(bad)  
  407ac3:	sahf   
	...
  407aec:	mov    ebp,0x7dbb5e1
  407af1:	ins    DWORD PTR es:[edi],dx
  407af2:	addr16 mulps xmm1,xmm2
  407af6:	inc    DWORD PTR [ebp+0x2828c35b]
  407afc:	dec    edi
  407afd:	ins    BYTE PTR es:[edi],dx
  407afe:	jne    0x407ae1
  407b00:	mov    al,ds:0x7d6efe03
  407b05:	loope  0x407a98
  407b07:	sbb    eax,DWORD PTR [esi]
  407b09:	ins    DWORD PTR es:[edi],dx
  407b0a:	sar    DWORD PTR [bp+si],0xca
  407b0e:	inc    eax
  407b10:	dec    edx
  407b11:	or     DWORD PTR [eax],eax
  407b13:	imul   ebx,DWORD PTR [ebp-0xa],0x6e655107
  407b1a:	(bad)  
  407b1b:	ds loopne 0x407ac6
  407b1e:	xor    ch,BYTE PTR [eax-0x4941eb8]
  407b24:	(bad)  
  407b25:	ins    BYTE PTR es:[edi],dx
  407b26:	addr16 jmp 0x407b71
  407b29:	or     DWORD PTR [eax-0x17fb44e2],eax
  407b2f:	xor    DWORD PTR [ebx],esi
  407b31:	ins    BYTE PTR es:[edi],dx
  407b32:	inc    DWORD PTR [ecx+0x4137f7]
  407b38:	mov    dl,0x60
  407b3a:	push   edi
  407b3b:	xor    ah,bl
  407b3d:	or     BYTE PTR [eax+0x2],ch
  407b40:	mov    ds:0xffff8008,al
  407b45:	jmp    edi
  407b47:	shl    DWORD PTR [edi-0xa],0xfe
  407b4b:	push   0x4137dc
	...
  407b78:	or     cl,BYTE PTR [ebp+0x31]
  407b7b:	inc    ecx
  407b7c:	jb     0x407bde
  407b7e:	add    DWORD PTR [eax],eax
  407b80:	jb     0x407b0a
  407b82:	push   DWORD PTR [ebp+0x5a]
  407b85:	loopne 0x407b30
  407b87:	std    
  407b88:	xchg   ebp,eax
  407b89:	mul    BYTE PTR [edi-0x6e]
  407b8c:	inc    eax
  407b8d:	inc    edi
  407b8e:	jmp    DWORD PTR [edi+0x64]
  407b91:	aaa    
  407b92:	inc    ecx
  407b93:	add    BYTE PTR [edx+0x7],bl
  407b96:	add    BYTE PTR [eax],al
  407b98:	mov    ds:0xca0874f6,al
  407b9d:	cdq    
  407b9e:	std    
  407b9f:	inc    ebp
  407ba1:	pop    esp
  407ba2:	mov    ds:0x68056332,eax
  407ba7:	jle    0x407b79
  407ba9:	inc    esi
  407baa:	jmp    DWORD PTR [edi-0x10]
  407bad:	pop    es
  407bae:	add    BYTE PTR [eax-0x17f8a39b],al
  407bb4:	push   ss
  407bb5:	repz (bad) 
  407bb7:	dec    DWORD PTR [edx]
  407bb9:	lahf   
  407bba:	xor    al,BYTE PTR [ecx-0xe]
  407bbd:	pop    edi
  407bbe:	jge    0x407bf2
  407bc0:	mov    bl,0x7
  407bc2:	push   0x8007e202
  407bc7:	dec    DWORD PTR [edi+0x7765e7ff]
  407bcd:	idiv   dh
  407bcf:	push   0x41371c
  407bd4:	fidiv  DWORD PTR [ebp+0x31]
  407bd7:	inc    ecx
  407bd8:	dec    ebx
  407bd9:	(bad)  
  407bda:	jmp    0x407bdd
	...
  407c04:	dec    ebx
  407c05:	bound  eax,QWORD PTR [ebx+0x6b7a16ff]
  407c0b:	dec    esi
  407c0c:	xchg   esi,eax
  407c0d:	push   0x74
  407c0f:	push   0x31
  407c11:	jae    0x407c01
  407c13:	pop    es
  407c14:	jae    0x407c7e
  407c16:	jne    0x407c17
  407c18:	jl     0x407bf1
  407c1a:	and    bh,bh
  407c1c:	(bad)  
  407c1d:	jns    0x407c8a
  407c1f:	jmp    FWORD PTR [esi+0x52]
  407c22:	je     0x407c8e
  407c24:	inc    edi
  407c25:	cmp    ebp,esi
  407c27:	pop    es
  407c28:	jae    0x407bd6
  407c2a:	jbe    0x407c2b
  407c2c:	push   esp
  407c2d:	stos   BYTE PTR es:[edi],al
  407c2e:	out    dx,al
  407c2f:	sti    
  407c30:	dec    esp
  407c31:	sub    al,0xc
  407c33:	call   0xffb520f4
  407c38:	adc    bl,BYTE PTR [edi-0x8600001]
  407c3e:	sub    WORD PTR [esi-0x578bfc9c],0x8
  407c46:	std    
  407c47:	xor    cl,BYTE PTR [edx+0x47757460]
  407c4d:	cwde   
  407c4e:	cmc    
  407c4f:	leave  
  407c50:	or     al,0xf4
  407c52:	shl    BYTE PTR [edi+0x4b],cl
  407c55:	pusha  
  407c56:	fs mov esi,0x7ede39b
  407c5c:	jecxz  0x407c04
  407c5e:	imul   edi,edi,0xffffffec
  407c61:	enter  0xc647,0xe4
  407c65:	mov    ebx,0x17ea
	...
  407c8e:	add    BYTE PTR [eax],al
  407c90:	sbb    BYTE PTR [ecx+0x5c5eff03],ah
  407c96:	imul   ebx,DWORD PTR [ebp+0x1],0x34
  407c9a:	je     0x407cec
  407c9c:	xor    esp,DWORD PTR [ecx+0x3]
  407c9f:	out    dx,eax
  407ca0:	std    
  407ca1:	or     DWORD PTR [ecx+0x11013e74],edi
  407ca7:	call   0x43f1:0x6b166aa3
  407cae:	push   cs
  407caf:	je     0x407ce4
  407cb1:	push   ds
  407cb2:	mov    edx,0x746b94c2
  407cb7:	pop    es
  407cb8:	mov    ds:0x8474232d,eax
  407cbd:	fld    DWORD PTR [eax-0x58a5b4ff]
  407cc3:	aam    0x75
  407cc5:	hlt    
  407cc6:	lock pop ebx
  407cc8:	repz pusha 
  407cca:	(bad)  
  407ccb:	jae    0x407d40
  407ccd:	and    BYTE PTR [edi-0x54bfa38d],0xfc
  407cd4:	push   esp
  407cd5:	aad    0x71
  407cd7:	pusha  
  407cd8:	dec    esp
  407cd9:	hlt    
  407cda:	in     al,0x5b
  407cdc:	adc    bh,BYTE PTR [edi]
  407cde:	scas   al,BYTE PTR es:[edi]
  407cdf:	jae    0x407d31
  407ce1:	dec    ecx
  407ce2:	sbb    eax,0xdb6da30e
  407ce7:	les    ebp,FWORD PTR [edx+edi*4]
  407cea:	adc    dl,0x12
  407ced:	push   0xffffff8e
  407cef:	aam    0x8c
  407cf1:	push   0xfffffffc
  407cf3:	sti    
	...
  407d1c:	sub    al,0xdd
  407d1e:	jge    0x407d93
  407d20:	or     al,0x61
  407d22:	adc    eax,0xa06a044a
  407d27:	inc    esi
  407d28:	push   ebx
  407d29:	or     DWORD PTR [esi+edi*2+0x642585e7],edi
  407d30:	popa   
  407d31:	or     DWORD PTR [esi-0x7],edx
  407d34:	push   esp
  407d35:	push   0xffffffd4
  407d37:	(bad)  
  407d38:	fnsave [ebx]
  407d3a:	scas   eax,DWORD PTR es:[edi]
  407d3b:	sbb    al,0x8a
  407d3d:	or     DWORD PTR [ecx-0x25],edx
  407d40:	add    ebp,DWORD PTR [edx+0x0]
  407d43:	ss inc esi
  407d45:	(bad)  
  407d46:	repz ret 
  407d48:	dec    eax
  407d49:	push   0x75
  407d4b:	std    
  407d4c:	cmp    esp,esi
  407d4e:	or     ebx,DWORD PTR [esi]
  407d50:	jb     0x407d15
  407d52:	sub    BYTE PTR [eax+0x20416148],ch
  407d58:	sbb    BYTE PTR [edx-0x77],ch
  407d5b:	lods   al,BYTE PTR ds:[esi]
  407d5c:	and    al,0xdf
  407d5e:	(bad)  
  407d5f:	std    
  407d60:	xchg   ebx,eax
  407d61:	adc    edi,edi
  407d63:	jl     0x407ce9
  407d65:	push   0x35
  407d67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d68:	pop    edi
  407d69:	enter  0xd0ff,0x55
  407d6d:	inc    eax
  407d6e:	(bad)  
  407d6f:	fsubp  st(7),st
  407d71:	ret    
  407d72:	mul    DWORD PTR [ebx+edx*4+0x61]
  407d76:	push   eax
  407d77:	into   
  407d78:	arpl   WORD PTR ds:0x6a4b3cff,cx
  407d7e:	xor    eax,0x27
	...
  407da7:	add    BYTE PTR [esi],ch
  407da9:	enter  0xc0ff,0x5d
  407dad:	push   edx
  407dae:	jmp    FWORD PTR [esi+0x13efcebf]
  407db4:	dec    edi
  407db5:	push   0xdeb9c975
  407dba:	or     edx,DWORD PTR [esi+0x2828cf63]
  407dc0:	inc    edi
  407dc1:	jno    0x407dc0
  407dc3:	mov    cl,0x99
  407dc5:	push   0x96ab2489
  407dca:	inc    ebp
  407dcb:	mov    DWORD PTR [eax],ebx
  407dcd:	push   0xde79c575
  407dd2:	or     esp,DWORD PTR [esi+0x33]
  407dd5:	iret   
  407dd6:	sub    BYTE PTR [eax+0x21e57148],ch
  407ddc:	pop    ecx
  407ddd:	push   0x8c64a489
  407de2:	jge    0x407de4
  407de4:	mov    cs,WORD PTR [edi+ecx*1]
  407de7:	test   BYTE PTR [esi+0xc],dh
  407dea:	add    BYTE PTR [eax],al
  407dec:	xor    DWORD PTR [ecx-0x9],ebx
  407def:	add    BYTE PTR [ebp-0x5dff7570],bl
  407df5:	or     al,0x83
  407df7:	jge    0x407e4f
  407df9:	or     al,0xf
  407dfb:	test   BYTE PTR [edx],dh
  407dfd:	or     al,0x0
  407dff:	add    BYTE PTR [ebp+0x61],cl
  407e02:	daa    
  407e03:	call   DWORD PTR [edi]
  407e05:	fs out 0x2a,eax
  407e08:	pusha  
  407e09:	(bad)  
  407e0b:	inc    DWORD PTR [eax]
	...
  407e31:	add    BYTE PTR [eax],al
  407e33:	add    BYTE PTR [edi],al
  407e35:	clc    
  407e36:	(bad)  
  407e37:	jne    0x407ea3
  407e39:	les    eax,FWORD PTR [eax-0x125923e]
  407e3f:	jne    0x407eab
  407e41:	fidiv  DWORD PTR [eax+ecx*1-0x76]
  407e45:	arpl   cx,ax
  407e47:	dec    DWORD PTR [ebp-0x720b8b26]
  407e4d:	pusha  
  407e4e:	pop    es
  407e4f:	call   0x3f4d4d
  407e54:	mov    bl,0x78
  407e56:	daa    
  407e57:	adc    esi,DWORD PTR [edx]
  407e59:	jmp    0xd97ff41b
  407e5e:	je     0x407e50
  407e60:	int    0x5f
  407e62:	pop    es
  407e63:	call   0x3f4dcd
  407e68:	leave  
  407e69:	or     bh,bh
  407e6b:	jne    0x407e27
  407e6d:	fnstenv [eax+esi*8-0x73]
  407e71:	pusha  
  407e72:	pop    es
  407e73:	call   0x3f4c91
  407e78:	ins    DWORD PTR es:[edi],dx
  407e79:	pusha  
  407e7a:	jmp    0x407e7b
  407e7c:	pop    ss
  407e7d:	fs out 0x3c,eax
  407e80:	and    dl,bl
  407e82:	inc    BYTE PTR [ebx+0x673d4b]
  407e88:	push   edi
  407e89:	pop    ebp
  407e8a:	test   BYTE PTR [ebp-0x15],bh
  407e8d:	jne    0x407e85
  407e8f:	push   cs
  407e90:	shr    BYTE PTR [edi+eiz*2-0x8e08401],0x7
	...
  407ec0:	mov    bl,0x30
  407ec2:	inc    ebx
  407ec3:	push   DWORD PTR [edx+edi*8+0x74b69fd]
  407eca:	test   DWORD PTR [edi],0xff42c4b3
  407ed0:	pushf  
  407ed1:	push   ss
  407ed2:	div    ebx
  407ed4:	mov    ds:0x8cff4655,eax
  407ed9:	data16 idiv bl
  407edc:	jae    0x407f1b
  407ede:	inc    esi
  407edf:	(bad)  
  407ee0:	jl     0x407f58
  407ee2:	div    bh
  407ee4:	arpl   WORD PTR [ebp+0x46],sp
  407ee7:	jmp    FWORD PTR [esi+eax*2-0xa]
  407eeb:	out    dx,eax
  407eec:	jae    0x407f5b
  407eee:	inc    esi
  407eef:	call   FWORD PTR [esi+edx*2-0xa]
  407ef3:	jmp    0x407f58
  407ef5:	jne    0x407f3d
  407ef7:	dec    DWORD PTR [esi+eiz*4-0xa]
  407efb:	jecxz  0x407f30
  407efd:	popf   
  407efe:	inc    edi
  407eff:	(bad)  
  407f00:	cmp    al,0xaa
  407f02:	inc    ebp
  407f03:	and    al,0x4b
  407f05:	and    eax,0xaccaec7d
  407f0a:	jae    0x407f03
  407f0c:	and    al,0x80
  407f0e:	fist   DWORD PTR [edx]
  407f10:	dec    ebx
  407f11:	out    0xb0,eax
  407f13:	push   0xffc2a3b9
  407f18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f19:	out    dx,eax
  407f1a:	xor    eax,DWORD PTR [ecx+0x4b]
  407f1d:	or     BYTE PTR [esi-0x248f75cd],al
  407f23:	ja     0x407f25
	...
  407f49:	add    BYTE PTR [eax],al
  407f4b:	add    BYTE PTR [eax],bh
  407f4d:	or     DWORD PTR [eax+0x19da6303],ebp
  407f53:	ret    
  407f54:	in     al,0xee
  407f56:	shl    DWORD PTR [edx+ecx*4],cl
  407f59:	or     DWORD PTR [esi-0xa],ecx
  407f5c:	inc    eax
  407f5d:	mov    sp,0xe4fb
  407f61:	lock ds jo 0x407f29
  407f65:	icebp  
  407f66:	fld    DWORD PTR [ebx]
  407f68:	lods   al,BYTE PTR ds:[esi]
  407f69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f6a:	rcl    DWORD PTR [eax+edi*2-0x38],0xe8
  407f6f:	fstp   TBYTE PTR [esi+0x1a]
  407f72:	test   al,0x3
  407f74:	xor    ecx,DWORD PTR [ebx-0x26]
  407f77:	ret    0xee9c
  407f7a:	inc    edx
  407f7b:	xor    al,0xa
  407f7d:	or     DWORD PTR [ecx-0x1737a76f],edx
  407f83:	fstp   TBYTE PTR [esi+0x7c03a81a]
  407f89:	(bad)  
  407f8b:	jo     0x407f8b
  407f8d:	adc    cl,dl
  407f8f:	sub    ebp,DWORD PTR [ebp+0x66]
  407f92:	(bad)  
  407f94:	cmp    BYTE PTR [ecx],cl
  407f96:	(bad)  
  407f97:	scas   al,BYTE PTR es:[edi]
  407f98:	repz sbb DWORD PTR ds:0xaee54c5,edx
  407f9f:	cmp    BYTE PTR [edx],cl
  407fa1:	or     DWORD PTR [ecx+0x15],edx
  407fa4:	jg     0x407f6e
  407fa6:	call   0x285aad86
  407fab:	add    al,0xa3
  407fad:	inc    edi
  407fae:	fcmovb st,st(4)
	...
  407fd8:	sub    al,0xee
  407fda:	call   0x964a0a16
  407fdf:	stc    
  407fe0:	push   eax
  407fe1:	data16 adc al,0xfc
  407fe4:	sub    al,0x14
  407fe6:	xchg   DWORD PTR [edi+0xc],ebp
  407fe9:	xchg   esp,eax
  407fea:	and    al,0x70
  407fec:	fwait
  407fed:	data16 add ah,bh
  407ff0:	cld    
  407ff1:	xor    ax,0x5627
  407ff5:	enter  0x50ff,0xb8
  407ff9:	jle    0x407ffb
  407ffb:	jmp    0xd3b625e1
  408000:	test   esp,ecx
  408002:	imul   ecx
  408004:	dec    eax
  408005:	or     DWORD PTR [eax],eax
  408007:	add    bl,BYTE PTR cs:[edx-0x1]
  40800b:	out    0x48,al
  40800d:	or     DWORD PTR [edx-0x17],ebp
  408010:	mov    ds:0x92e96965,al
  408015:	mov    WORD PTR gs:[esp+esi*1+0x23648cb9],gs
  40801d:	pop    esi
  40801e:	call   DWORD PTR [esi]
  408020:	ja     0x408088
  408022:	jne    0x408035
  408024:	and    al,0xdc
  408026:	sti    
  408027:	adc    DWORD PTR [esi],ecx
  408029:	jg     0x40802b
  40802b:	jmp    0xebb525b1
  408030:	and    ecx,ecx
  408032:	addr16 ss push edi
  408035:	enter  0xe5ff,0x73
  408039:	adc    eax,ebp
  40803b:	mov    es,WORD PTR [eax]
	...
  408061:	add    BYTE PTR [eax],al
  408063:	add    BYTE PTR ds:0xf862ff66,cl
  408069:	xchg   ebx,eax
  40806a:	test   ebp,edx
  40806c:	frstor [ebp-0x1]
  40806f:	sbb    DWORD PTR [ecx+0x6d],edi
  408072:	hlt    
  408073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408074:	mov    ch,0x64
  408076:	mov    DWORD PTR [eax+edi*4+0x5c],ebp
  40807a:	jmp    FWORD PTR [esi-0x610f615b]
  408080:	popf   
  408081:	call   DWORD PTR fs:[edi+eiz*1]
  408085:	ins    DWORD PTR es:[edi],dx
  408086:	cmc    
  408087:	xchg   edi,eax
  408088:	lods   eax,DWORD PTR ds:[esi]
  408089:	call   DWORD PTR fs:[eax+ebx*4+0x5c]
  40808e:	inc    DWORD PTR [eax]
  408090:	(bad)
  408093:	ret    
  408094:	test   ebx,esi
  408096:	inc    BYTE PTR [ebp+0x7a]
  408099:	mov    edi,0xf4ffff94
  40809e:	out    0x2f,eax
  4080a0:	ins    BYTE PTR es:[edi],dx
  4080a1:	or     BYTE PTR [eax],al
  4080a3:	leave  
  4080a4:	xor    BYTE PTR [eax-0x1],ah
  4080a7:	push   esp
  4080a8:	imul   eax,esp,0x4286c482
  4080ae:	jmp    FWORD PTR [ecx-0x24]
  4080b1:	repz je 0x4080bc
  4080b4:	sbb    bl,bl
  4080b6:	mov    edi,0x44e575ff
  4080bb:	cld    
  4080bc:	mov    dh,BYTE PTR [edx]
  4080be:	xor    eax,DWORD PTR [ecx-0x5e]
  4080c1:	repz je 0x4080cc
  4080c4:	cmp    bl,BYTE PTR [ebx+0xfffe]
	...
  4080ee:	add    BYTE PTR [eax],al
  4080f0:	xor    eax,0xcd67ff42
  4080f5:	pop    ss
  4080f6:	inc    ecx
  4080f7:	add    BYTE PTR [edx+0x72413332],bh
  4080fd:	repz xor al,0x46
  408100:	mov    ecx,DWORD PTR [ebp-0x1]
  408103:	out    0x32,eax
  408105:	into   
  408106:	(bad)  
  408107:	(bad)  
  408108:	jns    0x4080d2
  40810a:	jae    0x40811b
  40810c:	and    bh,BYTE PTR ds:0xc06a75fe
  408112:	xchg   esp,eax
  408113:	cld    
  408114:	test   esi,esi
  408116:	out    0x85,eax
  408118:	mov    eax,ds:0x326afef6
  40811d:	inc    eax
  40811e:	mov    eax,0x680d7328
  408123:	dec    ebp
  408124:	xor    DWORD PTR [edi-0x1],eax
  408127:	dec    BYTE PTR [edi]
  408129:	dec    esi
  40812a:	sub    BYTE PTR [ecx+0x32],al
  40812d:	rol    BYTE PTR [ebp+0x6d7b4bc6],0xb
  408134:	or     edi,esi
  408136:	cld    
  408137:	dec    edi
  408138:	jnp    0x4080c5
  40813a:	test   DWORD PTR [edi],0xff6ff6f3
  408140:	cld    
  408141:	mov    ecx,ecx
  408143:	ret    0xf2f4
  408146:	fcos   
  408148:	fs push ebx
  40814a:	xor    BYTE PTR [ecx+0x4b],al
  40814d:	cmp    ch,BYTE PTR [ecx]
  40814f:	xor    ecx,DWORD PTR [edx+0x1db72]
	...
  408179:	add    BYTE PTR [eax],al
  40817b:	add    BYTE PTR [ebx+0x72],cl
  40817e:	sub    eax,0x6e
  408181:	xor    al,0x6d
  408183:	call   DWORD PTR [eax+0x32]
  408186:	clc    
  408187:	push   cs
  408188:	sbb    eax,DWORD PTR [edx-0x35bc8a94]
  40818e:	sar    ebx,0xac
  408191:	sub    bl,BYTE PTR [edx+esi*1-0x78]
  408195:	add    ch,BYTE PTR [ebp+0x6a]
  408198:	dec    ebx
  408199:	mov    ch,BYTE PTR [edx-0x248df5d8]
  40819f:	dec    esp
  4081a0:	pop    eax
  4081a1:	mov    cl,0x3
  4081a3:	push   0x80037249
  4081a8:	jae    0x40814f
  4081aa:	inc    ebp
  4081ab:	push   DWORD PTR [esi+eiz*2+0x43]
  4081af:	je     0x4081ed
  4081b1:	and    dl,ah
  4081b3:	(bad)  
  4081b4:	ficomp WORD PTR [ecx+0x5b]
  4081b7:	sbb    DWORD PTR [edi+0x3a],ebx
  4081ba:	ins    BYTE PTR es:[edi],dx
  4081bb:	call   0xffad3102
  4081c0:	loope  0x408229
  4081c2:	ins    BYTE PTR es:[edi],dx
  4081c3:	jne    0x408218
  4081c5:	cmp    cl,ch
  4081c7:	sti    
  4081c8:	cmp    al,0x9c
  4081ca:	fldenv [edx]
  4081cc:	xor    al,0x1e
  4081ce:	cld    
  4081cf:	out    0xbb,eax
  4081d1:	or     DWORD PTR [ebp-0x30fdb94],esp
  4081d7:	ins    BYTE PTR es:[edi],dx
  4081d8:	xchg   esi,eax
  4081d9:	adc    DWORD PTR [ecx-0x719cef1b],eax
  4081df:	ins    BYTE PTR es:[edi],dx
	...
  408208:	xchg   esi,eax
  408209:	gs xchg dh,dh
  40820c:	dec    esp
  40820d:	jno    0x40822e
  40820f:	inc    esp
  408210:	cld    
  408211:	bound  esp,QWORD PTR [eax+0x14094f41]
  408217:	jns    0x4081f8
  408219:	xchg   BYTE PTR ds:0xd2ba7d6f,ch
  40821f:	add    esi,DWORD PTR [ecx+0xa]
  408222:	push   esi
  408223:	test   BYTE PTR [ecx+esi*2-0x17],0x43
  408228:	int3   
  408229:	bound  esi,QWORD PTR [eax-0x3a]
  40822c:	ror    BYTE PTR [esi-0x379b330c],0xe8
  408233:	js     0x4082ab
  408235:	out    0x0,al
  408237:	ret    
  408238:	lods   al,BYTE PTR ds:[esi]
  408239:	loop   0x408220
  40823b:	add    ebx,DWORD PTR [edi]
  40823d:	(bad)  
  40823e:	nop
  40823f:	(bad)  
  408240:	pop    eax
  408241:	enter  0xd4e8,0xac
  408245:	int3   
  408246:	jae    0x40824b
  408248:	dec    ebx
  408249:	push   cs
  40824a:	sub    edi,esi
  40824c:	gs mov ebx,0x6290db10
  408252:	not    dl
  408254:	in     al,dx
  408255:	or     cl,ch
  408257:	pop    esp
  408258:	lods   eax,DWORD PTR ds:[esi]
  408259:	icebp  
  40825a:	dec    eax
  40825b:	xor    BYTE PTR [edx],cl
  40825d:	or     DWORD PTR [ecx],edi
  40825f:	imul   edx,esi,0x10
  408262:	ror    esi,0x6d
  408265:	(bad)  
  408266:	into   
  408267:	pop    esp
  408268:	lds    eax,FWORD PTR [edi-0x3a]
  40826b:	imul   eax,DWORD PTR [eax],0x0
	...
  408292:	add    BYTE PTR [eax],al
  408294:	mov    bl,0xb7
  408296:	hlt    
  408297:	les    edi,FWORD PTR [ebx+edi*4]
  40829a:	inc    eax
  40829c:	pop    eax
  40829d:	jl     0x40829f
  40829f:	jmp    0x6b524d1
  4082a4:	stc    
  4082a5:	imul   edi,DWORD PTR [edx],0x5062b0ad
  4082ab:	add    DWORD PTR [edi+0x9],ecx
  4082ae:	out    dx,eax
  4082af:	dec    edi
  4082b0:	out    dx,eax
  4082b1:	shl    DWORD PTR [ebx],0x28
  4082b4:	dec    edi
  4082b5:	mov    ecx,0x6a00f4fe
  4082ba:	sub    al,0x8e
  4082bc:	pusha  
  4082bd:	(bad)  
  4082be:	call   0xffa307d4
  4082c3:	push   edx
  4082c4:	dec    esi
  4082c5:	retf   
  4082c6:	jg     0x4082e7
  4082c8:	inc    edi
  4082c9:	fdiv   st(1),st
  4082cb:	scas   eax,DWORD PTR es:[edi]
  4082cc:	ins    BYTE PTR es:[edi],dx
  4082cd:	push   ss
  4082ce:	rcl    BYTE PTR [eax+0x46ff6260],0x3d
  4082d5:	mov    bl,0x38
  4082d7:	out    0xbb,al
  4082d9:	xchg   esp,eax
  4082da:	(bad)  
  4082db:	mov    esp,0xe175622c
  4082e0:	adc    BYTE PTR [ebp-0x3dcfd941],bl
  4082e6:	pop    ebp
  4082e7:	xor    BYTE PTR ds:0x15bc000d,al
  4082ed:	jne    0x408357
  4082ef:	jmp    0x91fef53c
  4082f4:	into   
  4082f5:	sbb    al,0x41
  4082f7:	jmp    0x4082fc
	...
  408320:	icebp  
  408321:	fisttp DWORD PTR [ebx]
  408323:	idiv   BYTE PTR [ebx+0x9]
  408326:	call   0xffa26c31
  40832b:	push   ecx
  40832c:	dec    esi
  40832d:	or     edi,ebp
  40832f:	lahf   
  408330:	or     BYTE PTR [edx+0x624f2834],0x75
  408337:	fucom  st(1)
  408339:	fild   DWORD PTR [edi]
  40833b:	add    BYTE PTR [edx],bl
  40833d:	mov    bh,0xe5
  40833f:	(bad)  
  408340:	std    
  408341:	sbb    eax,0x3a2208c2
  408346:	mov    ch,ah
  408348:	fstp   QWORD PTR [ecx+0xb]
  40834b:	call   0x3f4ec1
  408350:	sbb    ebp,ecx
  408352:	jae    0x40836e
  408354:	dec    edx
  408355:	inc    ecx
  408356:	xor    eax,DWORD PTR [ecx+0x22]
  408359:	cmp    eax,0xf3b7d8e7
  40835e:	(bad)  
  40835f:	push   eax
  408360:	(bad)  
  408361:	hlt    
  408362:	je     0x40836c
  408364:	retf   0xff7f
  408367:	call   FWORD PTR [ebp-0x3c]
  40836a:	aad    0xc1
  40836c:	ins    DWORD PTR es:[edi],dx
  40836d:	repz enter 0xdac2,0xc
  408372:	push   ebp
  408373:	mov    ecx,DWORD PTR [esi+0x8fcc487]
  408379:	or     eax,0x590d086a
  40837e:	pop    es
  40837f:	call   0x40358e
	...
  4083ac:	sub    ecx,DWORD PTR [ecx-0x5]
  4083af:	push   0xffffffa2
  4083b1:	inc    esp
  4083b2:	pop    esi
  4083b3:	xor    eax,0x8c680cf3
  4083b8:	jbe    0x4083ff
  4083ba:	(bad)  
  4083bb:	(bad)  
  4083bc:	ja     0x408408
  4083be:	sub    BYTE PTR [ecx-0x5e],al
  4083c1:	les    edi,FWORD PTR [ebp+0xaf34dc4]
  4083c7:	shl    dh,0xf
  4083ca:	push   eax
  4083cb:	push   0xbeef0c63
  4083d0:	shl    bl,cl
  4083d2:	je     0x4083dc
  4083d4:	jp     0x40843e
  4083d6:	loop   0x4083d7
  4083d8:	jge    0x408397
  4083da:	(bad)  
  4083db:	ror    DWORD PTR [ebx+0x37],0x69
  4083df:	push   0x4b
  4083e1:	retf   0x34c8
  4083e4:	mov    dh,BYTE PTR [edx-0x25]
  4083e7:	mov    al,0x77
  4083e9:	xor    DWORD PTR [edi+edi*8],eax
  4083ec:	jle    0x40841e
  4083ee:	sbb    eax,DWORD PTR [ecx+0x4b]
  4083f1:	dec    edx
  4083f2:	jns    0x4083b8
  4083f4:	and    al,0xa7
  4083f6:	std    
  4083f7:	mov    edi,0x67d35697
  4083fc:	dec    edx
  4083fd:	jb     0x408457
  4083ff:	mov    esi,0x7ef8f7b
  408404:	repz pop ss
  408406:	gs (bad) 
  408408:	cld    
  408409:	jns    0x4083d4
  40840b:	shl    ah,0xd6
  40840e:	(bad)  
	...
  408438:	fs pop edi
  40843a:	cs inc ecx
  40843c:	dec    ebx
  40843d:	cmp    bl,BYTE PTR [esp+esi*1-0x76]
  408441:	jb     0x4084ab
  408443:	xor    eax,0xffc3098d
  408448:	in     al,0x51
  40844a:	aas    
  40844b:	inc    esp
  40844d:	pop    edx
  40844e:	inc    ebx
  40844f:	je     0x40849d
  408451:	adc    bl,0xfe
  408454:	ds push 0x5b
  408457:	or     ch,BYTE PTR [esi+ebp*1+0x315ee869]
  40845e:	imul   edi,edi,0x6edb7231
  408464:	pop    esi
  408465:	mov    cl,0x3
  408467:	push   0xffc23538
  40846c:	test   DWORD PTR [ecx+eax*8+0x5b720a28],ebx
  408473:	ss (bad) 
  408475:	push   esi
  408476:	push   0xf7d58b0b
  40847b:	dec    edi
  40847c:	sti    
  40847d:	or     dh,ah
  40847f:	out    dx,al
  408480:	inc    esp
  408481:	jno    0x40844c
  408483:	imul   edx,DWORD PTR [edi+ebx*2-0x3f],0xce5f8bfc
  40848b:	fld    QWORD PTR [edi+eiz*8+0x40]
  40848f:	das    
  408490:	mov    cl,BYTE PTR [ecx]
  408492:	push   ecx
  408493:	aam    0x7f
  408495:	enter  0x68e8,0x76
  408499:	(bad)  
  40849a:	inc    edx
	...
  4084c4:	and    al,0x67
  4084c6:	cmc    
  4084c7:	aas    
  4084c8:	sbb    al,0x5f
  4084ca:	repnz inc ebx
  4084cc:	lahf   
  4084cd:	push   cs
  4084ce:	cmp    esp,edx
  4084d0:	or     eax,0xbd5be0d5
  4084d5:	pop    edi
  4084d6:	xchg   BYTE PTR [eax-0xd],ch
  4084d9:	push   0xf3f468a9
  4084de:	aam    0x68
  4084e0:	jbe    0x4084f3
  4084e2:	or     DWORD PTR [ebx-0x1b],0x42dd665e
  4084e9:	pop    esi
  4084ea:	aam    0xfb
  4084ec:	in     al,dx
  4084ed:	dec    edi
  4084ee:	push   edi
  4084ef:	push   0x6909f3cc
  4084f4:	adc    DWORD PTR ds:[ecx+0x3f],edx
  4084f8:	mov    ebp,0x3e683e5e
  4084fd:	pop    ebp
  4084fe:	ss out dx,al
  408500:	inc    esp
  408501:	jno    0x4084fa
  408503:	test   eax,0x45305ea4
  408508:	inc    edi
  408509:	or     DWORD PTR [esp+edi*2-0x863a159],esi
  408510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408511:	popa   
  408512:	and    eax,0x29128468
  408517:	out    dx,eax
  408518:	push   cs
  408519:	icebp  
  40851a:	outs   dx,DWORD PTR ds:[esi]
  40851b:	or     cl,BYTE PTR cs:[ecx]
  40851e:	add    BYTE PTR [ecx-0x113b73f0],bl
  408524:	in     al,dx
  408525:	mov    eax,0x394f
	...
  40854e:	add    BYTE PTR [eax],al
  408550:	jg     0x4085b0
  408552:	dec    esi
  408554:	lods   eax,DWORD PTR ds:[esi]
  408555:	icebp  
  408556:	sbb    DWORD PTR [esi+eax*4],0x5e
  40855a:	dec    edi
  40855b:	into   
  40855c:	cmp    al,BYTE PTR [esi]
  40855e:	call   0xff9f2f7d
  408563:	and    DWORD PTR [edi],edx
  408565:	or     DWORD PTR [eax],eax
  408567:	(bad)  
  408568:	in     eax,0xf0
  40856a:	xchg   edx,eax
  40856b:	hlt    
  40856c:	divps  xmm1,XMMWORD PTR [edi-0x5a]
  408570:	sbb    al,BYTE PTR [esi]
  408572:	call   0xff9f3155
  408577:	xor    edi,ebp
  408579:	pop    es
  40857a:	add    BYTE PTR [esi-0x53],bh
  40857d:	lock mov al,ds:0x4f5e07bc
  408583:	jle    0x40857f
  408585:	add    eax,0x5e6bc2e8
  40858a:	inc    DWORD PTR [ecx+0x66ff9e14]
  408590:	push   ds
  408591:	dec    ebx
  408592:	or     cl,ch
  408594:	sti    
  408595:	xchg   edx,eax
  408596:	in     al,dx
  408597:	push   0xffffff8b
  408599:	pop    ebp
  40859a:	push   0xffffffe9
  40859c:	mov    ds:0xc0bcff10,al
  4085a1:	gs jns 0x408620
  4085a4:	sub    al,0x5e
  4085a6:	mov    DWORD PTR [esp-0x65d1e60d],ebp
  4085ad:	add    eax,0x5e2469e8
  4085b2:	call   DWORD PTR [ebx+0x0]
	...
  4085dc:	imul   ebx,DWORD PTR [esi+0x75],0xfed6f0e1
  4085e3:	push   cs
  4085e4:	in     al,dx
  4085e5:	repnz sbb eax,DWORD PTR [eax]
  4085e8:	inc    ebp
  4085e9:	pop    eax
  4085ea:	pop    es
  4085eb:	call   0x3f6cb6
  4085f0:	jne    0x40864a
  4085f2:	sti    
  4085f3:	(bad)  
  4085f4:	fbld   TBYTE PTR [ecx-0x19]
  4085f7:	xchg   ebx,eax
  4085f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085f9:	out    0xfe,al
  4085fb:	leave  
  4085fc:	mov    al,ds:0xe954ff5d
  408601:	mov    ch,0x69
  408603:	add    BYTE PTR [edx+0x324134c3],cl
  408609:	inc    ecx
  40860a:	retf   
  40860b:	xor    eax,0x35ff0563
  408610:	pop    esp
  408611:	inc    BYTE PTR [eax+0x0]
  408614:	or     dl,BYTE PTR [edx+eax*8-0x1]
  408618:	in     eax,0x5f
  40861a:	mov    edi,0xfe391f74
  40861f:	jne    0x408633
  408621:	in     al,0x74
  408623:	or     al,0x42
  408625:	in     al,0x74
  408627:	or     dl,bl
  408629:	call   0xbfdd:0xc075ffe4
  408630:	jne    0x408615
  408632:	imul   eax,DWORD PTR [eax],0x4134c34a
  408638:	repnz inc eax
  40863a:	retf   
  40863b:	xor    eax,0x26808a3
	...
  408668:	loop   0x408672
  40866a:	sub    al,0x12
  40866d:	retf   0xfffe
  408670:	mov    ecx,0xd21573c8
  408675:	jecxz  0x4086eb
  408677:	adc    BYTE PTR [ebp+0x59],dh
  40867a:	or     edx,DWORD PTR [eax+0x75]
  40867d:	pop    ecx
  40867e:	pop    es
  40867f:	call   0x3f42b5
  408684:	cmp    dh,BYTE PTR [ebx-0x41]
  408687:	dec    DWORD PTR [ebx-0xd]
  40868a:	gs jne 0x4086e8
  40868d:	or     esi,eax
  40868f:	or     esi,ebx
  408691:	das    
  408692:	xor    BYTE PTR [ecx+0x4b],al
  408695:	pop    ebx
  408696:	out    dx,eax
  408697:	pop    es
  408698:	arpl   WORD PTR [edi+ebx*2],bx
  40869b:	jmp    DWORD PTR [ecx+ebp*1+0x41]
  40869f:	or     al,0x4b
  4086a1:	sbb    eax,0xa6c8ec79
  4086a6:	push   0xf9c84b6a
  4086ab:	(bad)  
  4086ac:	mov    esi,0xffbe5b6a
  4086b1:	inc    edx
  4086b2:	mov    DWORD PTR gs:[esi+0x2cffdc9e],ecx
  4086b9:	inc    ebx
  4086ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086bb:	push   0xffc254f6
  4086c0:	sbb    eax,0xabe7fbfd
  4086c5:	jnp    0x40872c
  4086c7:	jmp    DWORD PTR [ebx+0xef0371]
	...
  4086f1:	add    BYTE PTR [eax],al
  4086f3:	add    ch,al
  4086f5:	or     DWORD PTR [ebp+esi*1+0x7564728a],ebp
  4086fc:	inc    ebx
  4086fd:	jp     0x4086b5
  4086ff:	(bad)  
  408700:	in     al,dx
  408701:	shl    BYTE PTR [ebp+esi*2-0x19],cl
  408705:	jmp    0xffa8:0x1ff307ee
  40870c:	aam    0x18
  40870e:	inc    edx
  40870f:	add    al,0x4b
  408711:	popf   
  408712:	js     0x408700
  408714:	retf   0x4c25
  408717:	idiv   DWORD PTR [edx+eax*8-0x7e48ba8a]
  40871e:	fs jne 0x408760
  408721:	adc    ebp,DWORD PTR [edi]
  408723:	inc    esi
  408724:	jb     0x4086d7
  408726:	add    ebp,eax
  408728:	mov    dh,0x8
  40872a:	js     0x408730
  40872c:	dec    ebx
  40872d:	adc    BYTE PTR [ecx],ch
  40872f:	cmc    
  408730:	mov    DWORD PTR [eax-0x18],0xa4444b03
  408737:	imul   ecx,DWORD PTR [ebx+0x9],0xffffffe9
  40873b:	add    ecx,DWORD PTR [ebp+eax*8+0x94464f4]
  408742:	jmp    0xe931ec20
  408747:	fstp   DWORD PTR [ecx+esi*8-0x18]
  40874b:	jbe    0x40875b
  40874d:	push   ebp
  40874e:	cmp    DWORD PTR [edi-0x3a],esi
  408751:	push   esp
  408752:	fisub  WORD PTR [esp+eax*2-0x46]
  408756:	int    0xee
	...
  408780:	xor    al,0x5b
  408782:	cmp    al,0x68
  408784:	and    esp,ebx
  408786:	push   edi
  408787:	add    ecx,DWORD PTR [ebx+0xe]
  40878a:	test   eax,0x52704fef
  40878f:	add    cl,BYTE PTR [ebx+0x9]
  408792:	adc    DWORD PTR [ebp+0x64e8c863],ebp
  408798:	xchg   esi,eax
  408799:	or     eax,0x5b097981
  40879e:	mov    ss,ebx
  4087a0:	sar    DWORD PTR [ecx],1
  4087a2:	je     0x408822
  4087a4:	call   DWORD PTR [edx+0x7e]
  4087a7:	fs fwait
  4087a9:	mov    bh,0x80
  4087ab:	jmp    0x7aaee2ba
  4087b0:	(bad)  
  4087b1:	pop    ecx
  4087b2:	pop    esi
  4087b3:	fs aam 0x71
  4087b6:	cmp    DWORD PTR [ebp+0x3c35acc],esp
  4087bc:	xor    esp,DWORD PTR [eax]
  4087be:	pop    ss
  4087bf:	ret    
  4087c0:	mov    esp,0xbc737c5b
  4087c5:	pop    edx
  4087c6:	ds fs jbe 0x40878d
  4087ca:	(bad)  
  4087cb:	dec    DWORD PTR [eax+0x919e75a]
  4087d1:	pop    edx
  4087d2:	push   DWORD PTR [eax+0x15]
  4087d5:	neg    DWORD PTR gs:[esi]
  4087d8:	daa    
  4087d9:	out    dx,eax
  4087da:	inc    DWORD PTR [eax-0x16beeb3d]
  4087e0:	out    0x93,eax
  4087e2:	lock inc BYTE PTR [eax]
	...
  408809:	add    BYTE PTR [eax],al
  40880b:	add    al,ch
  40880d:	pop    ecx
  40880e:	push   DWORD PTR [esi+ebp*4+0xe94131]
  408815:	xchg   edi,eax
  408816:	shr    esi,0xe8
  408819:	pop    DWORD PTR [ebp-0xa60f2b]
  40881f:	push   ebx
  408820:	inc    edi
  408821:	icebp  
  408822:	inc    ecx
  408823:	pop    ds
  408824:	push   cs
  408825:	pop    edx
  408826:	(bad)  
  408827:	xchg   esp,eax
  408828:	xchg   edi,eax
  408829:	push   edx
  40882a:	inc    esi
  40882c:	test   al,0x14
  40882e:	inc    esi
  40882f:	adc    BYTE PTR [esi],al
  408831:	pop    edx
  408832:	out    0x5d,eax
  408834:	mov    ds,WORD PTR [edx-0x1]
  408837:	pusha  
  408838:	shl    BYTE PTR [eax-0x9],cl
  40883b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40883c:	test   al,0xef
  40883e:	call   DWORD PTR [eax]
  408840:	rcl    DWORD PTR [ebx],cl
  408842:	inc    ecx
  408843:	jmp    0x97311cb1
  408848:	push   0x2bcff5a
  40884d:	xor    DWORD PTR [ecx-0x17],eax
  408850:	pusha  
  408851:	rol    eax,cl
  408853:	jbe    0x4088bd
  408855:	nop
  408856:	test   DWORD PTR [ecx+0x74ff5a80],ecx
  40885c:	ret    0xf740
  40885f:	pop    esi
  408860:	push   0x62b767b9
  408865:	enter  0x4dff,0xe2
  408869:	pop    eax
  40886a:	test   DWORD PTR [eax],0x35fee60d
	...
  408898:	in     al,0x2c
  40889a:	inc    ecx
  40889b:	add    BYTE PTR [edx],cl
  40889d:	xchg   edx,eax
  40889e:	sar    bh,0x6d
  4088a1:	or     al,al
  4088a3:	je     0x4088f0
  4088a5:	cmp    BYTE PTR [ebp-0x119ca28],0x4
  4088ac:	out    0x55,eax
  4088ae:	(bad)  
  4088af:	xor    BYTE PTR ds:0x4df7dc90,bl
  4088b5:	out    0x4f,al
  4088b7:	call   0x40303e
  4088bc:	dec    ecx
  4088bd:	popa   
  4088be:	or     al,al
  4088c0:	(bad)  
  4088c1:	movmskps ebp,xmm0
  4088c4:	push   esi
  4088c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088c6:	(bad)  
  4088c7:	jmp    DWORD PTR [ebp+0x1df7dc90]
  4088cd:	in     al,dx
  4088ce:	adc    al,0x0
  4088d0:	xor    cl,BYTE PTR ds:0xb406bd83
  4088d6:	(bad)  
  4088d7:	jmp    DWORD PTR [edx]
  4088d9:	inc    ecx
  4088da:	sbb    DWORD PTR fs:[edi-0x12000918],0xc
  4088e2:	je     0x408940
  4088e4:	mov    eax,ds:0xadf7e8a9
  4088e9:	jmp    0x4088ea
  4088eb:	jae    0x40892e
  4088ed:	gs (bad) 
  4088ef:	(bad)  
  4088f0:	jge    0x40889c
  4088f2:	push   DWORD PTR [ebp-0x6]
  4088f5:	in     al,0x6a
  4088f7:	mov    edx,0xb5feeb6d
	...
  408924:	into   
  408925:	mov    bl,0xfe
  408927:	jmp    FWORD PTR [ebp+0x31]
  40892a:	pop    es
  40892b:	call   0x3fffdd
  408930:	ins    DWORD PTR es:[edi],dx
  408931:	jno    0x40891b
  408933:	test   DWORD PTR [ebx-0x41],0x6a36ff61
  40893a:	imul   esi,DWORD PTR [ecx-0x9e300f],0xfffffff6
  408941:	into   
  408942:	pop    ecx
  408943:	jmp    DWORD PTR [edi+ebx*1-0x7c4cf828]
  40894a:	popf   
  40894b:	call   DWORD PTR [edi+ebp*1-0x86b1f68]
  408952:	popa   
  408953:	(bad)  
  408954:	(bad)  
  408955:	imul   ebp,DWORD PTR [ebx-0x6b],0xff6207c1
  40895c:	mov    esi,0x6cff5a2e
  408961:	push   edi
  408962:	xlat   BYTE PTR ds:[ebx]
  408963:	pop    es
  408964:	jae    0x4089ab
  408966:	popf   
  408967:	call   FWORD PTR [edi+eiz*2-0x69]
  40896b:	in     al,0x5c
  40896d:	outs   dx,DWORD PTR ds:[esi]
  40896e:	popa   
  40896f:	call   0xffa1ff2e
  408974:	inc    esp
  408975:	jne    0x4089e7
  408977:	idiv   DWORD PTR [edi+eax*2]
  40897a:	ins    BYTE PTR es:[edi],dx
  40897b:	xchg   dh,dh
  40897d:	dec    esi
  40897e:	popa   
  40897f:	push   esi
  408981:	cmp    DWORD PTR [ecx-0x1],ebx
  408984:	and    al,0x4a
  408986:	fnstsw WORD PTR [eax+eax*1+0x0]
	...
  4089ad:	add    BYTE PTR [eax],al
  4089af:	add    BYTE PTR [edi+eiz*4],bl
  4089b2:	popa   
  4089b3:	mov    ch,0x2b
  4089b5:	ja     0x408a18
  4089b7:	jmp    DWORD PTR [ebx]
  4089b9:	repnz sahf 
  4089bb:	inc    DWORD PTR [edi+edi*2]
  4089be:	xchg   edi,eax
  4089bf:	lock hlt 
  4089c1:	xchg   BYTE PTR [ecx-0x18],ah
  4089c4:	outs   dx,BYTE PTR ds:[esi]
  4089c5:	int    0x60
  4089c7:	(bad)  
  4089c8:	in     al,dx
  4089c9:	sub    al,0x5c
  4089cb:	jmp    0xffa169ec
  4089d0:	fcomp  QWORD PTR [edi+ebx*2-0x18]
  4089d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089d5:	or     BYTE PTR [esi+0x4],dh
  4089d8:	dec    ebx
  4089d9:	inc    edx
  4089da:	sub    ecx,DWORD PTR [ebx+ecx*2]
  4089dd:	mov    esi,0x4cc87061
  4089e2:	push   ecx
  4089e3:	out    dx,al
  4089e4:	mov    ah,0xe1
  4089e6:	icebp  
  4089e7:	pusha  
  4089e8:	add    DWORD PTR ss:[ecx-0x27],edx
  4089ec:	loop   0x408a45
  4089ee:	mov    eax,DWORD PTR ss:[esi]
  4089f1:	push   ebp
  4089f2:	pop    esp
  4089f3:	(bad)  
  4089f4:	pushf  
  4089f5:	mov    eax,0xca566190
  4089fa:	call   0xa85dfcea
  4089ff:	add    edi,DWORD PTR [ebp+ebx*1-0x59]
  408a03:	sub    cl,BYTE PTR [edx]
  408a05:	or     DWORD PTR [ecx],edx
  408a07:	sbb    eax,0xcfe578b
  408a0c:	mov    ebx,esp
  408a0e:	fnsave [ebx+0x70e909e4]
	...
  408a3c:	xchg   ebp,eax
  408a3d:	push   edi
  408a3e:	pop    esp
  408a3f:	pop    esp
  408a40:	sti    
  408a41:	push   edi
  408a42:	push   esp
  408a43:	or     al,0x33
  408a45:	lods   al,BYTE PTR ds:[esi]
  408a46:	mov    bh,0x60
  408a48:	cmp    al,0x62
  408a4a:	loope  0x4089ea
  408a4c:	xor    al,0x57
  408a4e:	je     0x408a16
  408a50:	xor    al,0xba
  408a52:	push   eax
  408a53:	minps  xmm1,xmm0
  408a56:	call   0x285dbd46
  408a5b:	add    al,0x14
  408a5d:	sbb    eax,0x98a2b2f
  408a62:	xchg   ecx,eax
  408a63:	or     BYTE PTR [ebx],cl
  408a65:	push   edi
  408a66:	xchg   esi,eax
  408a67:	or     al,0xb
  408a69:	fdivrp st(5),st
  408a6b:	mov    bl,0x6c
  408a6d:	or     ebp,ecx
  408a6f:	jo     0x408a1e
  408a71:	push   esi
  408a72:	hlt    
  408a73:	pop    ebx
  408a74:	jnp    0x408acc
  408a76:	add    ah,bh
  408a78:	push   eax
  408a79:	popa   
  408a7a:	outs   dx,BYTE PTR ds:[esi]
  408a7b:	(bad)  
  408a7c:	imul   edx,DWORD PTR [esi-0x18],0x3d
  408a80:	lods   al,BYTE PTR ds:[esi]
  408a81:	push   esi
  408a82:	call   ecx
  408a84:	lds    ebx,FWORD PTR [ecx+eax*2]
  408a87:	jmp    0x414866b7
  408a8c:	xchg   ebx,eax
  408a8d:	push   ebp
  408a8e:	inc    DWORD PTR [esi+0x2b]
  408a91:	fdiv   st(3),st
  408a93:	ds jge 0x408aa4
  408a96:	call   0xff97498e
  408a9b:	and    BYTE PTR [esi],cl
  408a9d:	or     eax,0xbc00
	...
  408ac6:	add    BYTE PTR [eax],al
  408ac8:	mov    edi,0x44258165
  408acd:	pop    esi
  408ace:	call   DWORD PTR [esi]
  408ad0:	int    0xcc
  408ad2:	sti    
  408ad3:	mov    ecx,0x60bdbeb
  408ad8:	push   ebp
  408ad9:	iret   
  408ada:	sub    BYTE PTR [eax+0x67fd6148],ch
  408ae0:	dec    eax
  408ae1:	or     DWORD PTR [ebx],ecx
  408ae3:	sub    DWORD PTR [ebx],edi
  408ae5:	mov    ecx,es
  408ae7:	call   0x25079434
  408aec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408aed:	or     DWORD PTR [eax],eax
  408aef:	jmp    0xd585d93c
  408af4:	xchg   esp,eax
  408af5:	push   cs
  408af6:	add    cl,ch
  408af8:	and    dl,BYTE PTR [esi+0x69]
  408afb:	jmp    0xe9a9e132
  408b00:	mov    ebx,0xba19f3cb
  408b05:	mov    esi,esp
  408b07:	sahf   
  408b08:	ins    BYTE PTR es:[edi],dx
  408b09:	push   esi
  408b0a:	push   eax
  408b0b:	sahf   
  408b0c:	and    bl,BYTE PTR [esi-0x1]
  408b0f:	sbb    al,0x6b
  408b11:	popa   
  408b12:	iret   
  408b13:	pop    edi
  408b14:	dec    edi
  408b15:	or     DWORD PTR [ebx],ecx
  408b17:	add    BYTE PTR [edx+0x6ee90430],ah
  408b1d:	or     al,0x0
  408b1f:	add    BYTE PTR [edx+0x7e],cl
  408b22:	sub    BYTE PTR [ecx-0x1e],al
  408b25:	mov    dh,0x74
  408b27:	or     al,0x7a
  408b29:	mov    ebx,0xffbe
	...
  408b52:	add    BYTE PTR [eax],al
  408b54:	and    eax,0x27d08a9d
  408b59:	xor    ah,0xf7
  408b5c:	add    eax,0x1a524fb6
  408b61:	jmp    0x408b21
  408b63:	jmp    DWORD PTR [ebp-0x7c]
  408b66:	test   eax,esi
  408b68:	pop    ebp
  408b69:	mov    dh,0xfe
  408b6b:	call   0x40010a
  408b70:	mov    eax,0x9c7a6809
  408b75:	dec    esp
  408b76:	(bad)  
  408b77:	(bad)  
  408b78:	pop    ds
  408b79:	mov    ebp,0xb645fff6
  408b7e:	xor    al,0x46
  408b80:	fwait
  408b81:	dec    esp
  408b82:	jmp    edi
  408b84:	mov    dh,BYTE PTR [esi-0x1]
  408b87:	(bad)  
  408b88:	jmp    0x408c09
  408b8a:	in     al,0xf7
  408b8c:	gs mov dh,0x69
  408b8f:	add    dl,bh
  408b91:	imul   esi,DWORD PTR ds:0xb4b43241,0xfeb41df0
  408b9b:	call   FWORD PTR [edi+0x4b]
  408b9e:	sub    BYTE PTR [ecx+0x22],al
  408ba1:	loope  0x408bbc
  408ba3:	mov    edi,0x8588b3e5
  408ba8:	push   es
  408ba9:	mov    esp,0xd88fffe
  408bae:	push   0xff4dec6c
  408bb3:	(bad)  
  408bb4:	lahf   
  408bb5:	mov    eax,0xfff6
	...
  408bde:	add    BYTE PTR [eax],al
  408be0:	dec    ebx
  408be1:	jnp    0x408c41
  408be3:	xor    eax,0xffc4498d
  408be8:	in     al,0x8e
  408bea:	popf   
  408beb:	jmp    esp
  408bed:	fld    DWORD PTR [edi+0x5ddbd4e0]
  408bf3:	push   0x4b
  408bf5:	or     dl,ch
  408bf7:	xor    eax,0xb55e628a
  408bfc:	mov    ebx,0xbcff5dbb
  408c01:	cmc    
  408c02:	lds    ebp,FWORD PTR [eax]
  408c04:	or     ah,BYTE PTR [edx+0x6b]
  408c07:	fsubp  st(5),st
  408c09:	retf   
  408c0a:	pop    ebp
  408c0b:	mov    esi,ecx
  408c0d:	mov    edx,0x489cff55
  408c12:	add    ebp,DWORD PTR [eax-0x38]
  408c15:	pop    esp
  408c16:	(bad)  
  408c17:	dec    DWORD PTR [ebp-0x7b08ad4b]
  408c1d:	repz pop ebp
  408c1f:	xor    eax,0xffc44905
  408c24:	ins    BYTE PTR es:[edi],dx
  408c25:	and    bl,BYTE PTR [ebp-0x78269301]
  408c2b:	fcomp  QWORD PTR [ebx+edx*2+0x5d]
  408c2f:	sbb    DWORD PTR [esi+0x54ff5606],0x62
  408c36:	xlat   BYTE PTR ds:[ebx]
  408c37:	fs enter 0x70ad,0xf7
  408c3c:	inc    esp
  408c3d:	xor    eax,DWORD PTR [esp+esi*2]
  408c40:	lahf   
  408c41:	fistp  WORD PTR [esi+0xe8]
	...
  408c6b:	add    BYTE PTR [ebx+eax*2],bh
  408c6e:	pop    ebp
  408c6f:	add    BYTE PTR [edi+0x24ffebef],dh
  408c75:	inc    ebx
  408c76:	sahf   
  408c77:	call   DWORD PTR [esi-0x2cfc9496]
  408c7d:	mov    ds:0x8d6ff5d,al
  408c82:	xchg   ebp,eax
  408c83:	push   ebp
  408c84:	add    al,0x54
  408c86:	sahf   
  408c87:	xlat   BYTE PTR ds:[ebx]
  408c88:	inc    esp
  408c89:	popa   
  408c8a:	ds pushf 
  408c8c:	hlt    
  408c8d:	push   ebx
  408c8e:	mov    ss,WORD PTR [edi+0x5d865be3]
  408c94:	in     al,0xdd
  408c96:	lock imul edx,DWORD PTR [edx-0x2ba2896f],0xffffff9d
  408c9e:	test   DWORD PTR [ebp-0x34],edx
  408ca1:	push   ebx
  408ca2:	data16 xlat BYTE PTR ds:[ebx]
  408ca4:	dec    esp
  408ca5:	popa   
  408ca6:	and    bl,BYTE PTR [esp+edi*4-0x5468a9ad]
  408cad:	pop    ebx
  408cae:	dec    esi
  408caf:	pop    ebp
  408cb0:	lods   al,BYTE PTR ds:[esi]
  408cb1:	(bad)  
  408cb3:	imul   esi,DWORD PTR [esi-0x6f],0x3e
  408cb7:	pop    ebp
  408cb8:	pushf  
  408cb9:	popf   
  408cba:	adc    eax,0x2e539455
  408cbf:	xlat   BYTE PTR ds:[ebx]
  408cc0:	inc    esp
  408cc1:	popa   
  408cc2:	push   es
  408cc3:	pushf  
  408cc4:	test   BYTE PTR [ebx+0x1e],dl
  408cc7:	xchg   edi,eax
  408cc8:	addr16 pop ebx
  408cca:	push   ss
  408ccb:	pop    ebp
  408ccc:	arpl   WORD PTR [ecx],sp
  408cce:	push   edx
  408ccf:	pop    ebp
	...
  408cf8:	ins    BYTE PTR es:[edi],dx
  408cf9:	push   ebx
  408cfa:	cmp    al,0x70
  408cfc:	pop    esp
  408cfd:	push   ebx
  408cfe:	(bad)  
  408cff:	imul   edi,DWORD PTR ds:0x545cf690,0xffffff9d
  408d06:	add    DWORD PTR [ebp+0x4c],edx
  408d09:	push   ebx
  408d0a:	shl    eax,1
  408d0c:	add    DWORD PTR [ebx-0x22],edx
  408d0f:	pop    esp
  408d10:	imul   BYTE PTR [ecx-0x22]
  408d13:	pop    esp
  408d14:	xor    al,0x62
  408d16:	loope  0x408cb0
  408d18:	sub    al,0x53
  408d1a:	(bad)  
  408d1b:	xchg   esi,eax
  408d1c:	pop    es
  408d1d:	pop    ebx
  408d1e:	mov    esi,0x55335c
  408d23:	jae    0x408d9c
  408d25:	push   edx
  408d26:	push   DWORD PTR [eax+edi*2+0x5a]
  408d2a:	jmp    DWORD PTR [esi-0x6ef82359]
  408d30:	push   edi
  408d31:	push   ebx
  408d32:	call   DWORD PTR [esi-0x690f6369]
  408d38:	(bad)  
  408d39:	push   edx
  408d3a:	call   0xff934fcc
  408d3f:	jle    0x408d46
  408d41:	pop    ebx
  408d42:	jmp    0xff93026e
  408d47:	outs   dx,BYTE PTR ds:[esi]
  408d48:	cmc    
  408d49:	dec    esi
  408d4a:	call   0x4a6166
  408d4f:	xor    BYTE PTR [edx],cl
  408d51:	add    DWORD PTR [eax],eax
  408d53:	mov    esp,0x258365c3
  408d58:	or     al,0xdf
  408d5a:	call   edx
	...
  408d84:	push   esp
  408d85:	push   edx
  408d86:	jne    0x408d79
  408d88:	xor    BYTE PTR [ebx-0x49],bl
  408d8b:	idiv   DWORD PTR ss:[edi+0x45]
  408d8f:	sub    eax,0xa83683a0
  408d94:	dec    eax
  408d95:	push   edx
  408d96:	jne    0x408d89
  408d98:	lock pop edx
  408d9a:	std    
  408d9b:	push   ss
  408d9c:	pop    ss
  408d9d:	push   edx
  408d9e:	jne    0x408dad
  408da0:	paddusb mm0,QWORD PTR [edi]
  408da3:	adc    DWORD PTR [ecx],ebp
  408da5:	xchg   ecx,eax
  408da6:	(bad)  
  408da7:	(bad)  
  408da8:	adc    al,BYTE PTR [edi+0x4]
  408dab:	jmp    0x692d0d4d
  408db0:	add    al,0x39
  408db2:	mul    esi
  408db4:	mov    al,ds:0xf7dd4584
  408db9:	push   edx
  408dba:	jne    0x408da1
  408dbc:	xchg   ecx,eax
  408dbd:	sbb    al,0x46
  408dbf:	add    BYTE PTR [esi],al
  408dc1:	push   edx
  408dc2:	out    0x0,eax
  408dc4:	push   ss
  408dc5:	add    DWORD PTR [eax],0xec61900
  408dcb:	test   DWORD PTR [eax],ebx
  408dcd:	or     al,0x0
  408dcf:	add    ch,ah
  408dd1:	inc    edi
  408dd2:	test   DWORD PTR [eax],0xc70005f2
  408dd8:	daa    
  408dd9:	mov    ecx,0x5e207fe
  408dde:	push   0x0
  408de0:	dec    eax
  408de1:	or     eax,0xd38006a
  408de6:	lea    eax,[ebp+0x0]
	...
  408e0d:	add    BYTE PTR [eax],al
  408e0f:	add    BYTE PTR [esi-0x63],dl
  408e12:	mov    WORD PTR [ebp-0x149aa],es
  408e18:	xor    ch,BYTE PTR [esi+0x382df874]
  408e1e:	sti    
  408e1f:	call   0x410ef8
  408e24:	test   eax,0xb0573c5
  408e29:	mov    al,0x0
  408e2b:	add    BYTE PTR [edx-0xcd749a3],dh
  408e31:	add    eax,0xddae75ff
  408e36:	fdivr  DWORD PTR [ebp-0x2f7551a3]
  408e3c:	inc    DWORD PTR [edi-0x51a2080c]
  408e42:	dec    edi
  408e43:	push   edx
  408e44:	dec    edx
  408e45:	dec    edi
  408e46:	mov    ebp,0x85843dff
  408e4b:	lock gs scas al,BYTE PTR es:[edi]
  408e4e:	(bad)  
  408e4f:	push   0x72
  408e51:	pop    ebp
  408e52:	jmp    0x52b5:0xff05a336
  408e59:	mov    dh,0xfe
  408e5b:	jmp    FWORD PTR ds:0x732945fa
  408e61:	add    eax,0x754b25e8
  408e66:	pop    edx
  408e67:	inc    edx
  408e69:	in     eax,0x5e
  408e6b:	mul    DWORD PTR [eax+ecx*2]
  408e6e:	in     eax,dx
  408e6f:	jmp    DWORD PTR [esi+ebp*2+0x4111]
	...
  408e9a:	add    BYTE PTR [eax],al
  408e9c:	dec    ebx
  408e9d:	xchg   edi,eax
  408e9e:	nop
  408e9f:	lock adc al,0xa0
  408ea2:	pop    edx
  408ea3:	(bad)  
  408ea4:	and    BYTE PTR ds:0x27a4b41,ch
  408eab:	mov    ebp,0x858c77f4
  408eb0:	fbstp  TBYTE PTR [edi+0x5a]
  408eb3:	push   DWORD PTR [ecx+0x62]
  408eb6:	jmp    0x408e98
  408eb8:	adc    eax,0x9eff0421
  408ebd:	rcl    BYTE PTR [ecx-0x1],cl
  408ec0:	int3   
  408ec1:	fisttp WORD PTR [edi]
  408ec3:	inc    esi
  408ec4:	jb     0x408e67
  408ec6:	add    ebp,eax
  408ec8:	mov    dl,0x6e
  408eca:	pop    edx
  408ecb:	inc    edx
  408ecd:	(bad)  [edx-0x9]
  408ed0:	lods   al,BYTE PTR ds:[esi]
  408ed1:	mov    edi,0xb82cffec
  408ed6:	adc    BYTE PTR [ecx+0x4b],al
  408ed9:	seto   al
  408edc:	pushf  
  408edd:	pop    ss
  408ede:	pop    edx
  408edf:	call   DWORD PTR [esi-0x58]
  408ee2:	sub    al,0x41
  408ee4:	dec    ebx
  408ee5:	cli    
  408ee6:	dec    ebp
  408ee7:	mov    esp,0x858bef7c
  408eec:	imul   ebp,edi,0x59
  408eef:	(bad)  
  408ef0:	mov    esi,0x64f72ee5
  408ef5:	pop    es
  408ef6:	mov    bl,0x67
  408ef8:	gs cwde 
  408efa:	(bad)  
  408efb:	call   DWORD PTR [ebp+0xd]
  408efe:	push   ebx
  408eff:	test   DWORD PTR [eax],0x0
	...
  408f25:	add    BYTE PTR [eax],al
  408f27:	add    BYTE PTR [edi+ebx*2+0x59],cl
  408f2b:	xor    eax,0xc310098d
  408f30:	cmp    al,0x68
  408f32:	xchg   ecx,eax
  408f33:	cwde   
  408f34:	xor    al,0x50
  408f36:	loop   0x408f7b
  408f38:	mov    bh,0xf2
  408f3a:	imul   edx,DWORD PTR [edi+0x59c657ff],0x58d8d647
  408f44:	pop    ebx
  408f45:	sub    BYTE PTR [eax+edi*1+0x14],0x50
  408f4a:	scas   al,BYTE PTR es:[edi]
  408f4b:	mov    ah,0xec
  408f4d:	aad    0x5f
  408f4f:	pop    ecx
  408f50:	cld    
  408f51:	arpl   bp,si
  408f53:	or     al,0xb
  408f55:	aad    0xee
  408f57:	mov    bl,0xe4
  408f59:	loope  0x408faa
  408f5b:	pop    ecx
  408f5c:	in     al,0x47
  408f5e:	ins    BYTE PTR es:[edi],dx
  408f5f:	cmp    ah,dl
  408f61:	dec    edi
  408f62:	jle    0x408f53
  408f64:	aam    0x4f
  408f66:	jmp    0x767955f1
  408f6b:	pop    ecx
  408f6c:	les    edi,FWORD PTR [eax-0x358aab30]
  408f72:	call   0x5e998dcf
  408f77:	pop    ecx
  408f78:	lods   al,BYTE PTR ds:[esi]
  408f79:	dec    edi
  408f7a:	adc    al,0xc2
  408f7c:	jae    0x408f48
  408f7e:	call   0x3ecd90ee
  408f83:	pop    ecx
  408f84:	ret    0x1185
  408f87:	push   ecx
  408f88:	mov    WORD PTR [edi+0x6a],cs
  408f8b:	xchg   edi,eax
	...
  408fb4:	outs   dx,DWORD PTR ds:[esi]
  408fb5:	push   edi
  408fb6:	es pop ecx
  408fb8:	dec    ebx
  408fb9:	add    BYTE PTR [ebp+0x7d],ah
  408fbc:	dec    ebx
  408fbd:	or     ecx,ebp
  408fbf:	test   BYTE PTR [esi+0x6459165c],ch
  408fc5:	or     dh,dh
  408fc7:	jg     0x408f96
  408fc9:	or     cl,ch
  408fcb:	add    ecx,eax
  408fcd:	lea    eax,[eax]
  408fcf:	add    edx,edi
  408fd1:	dec    edi
  408fd2:	(bad)  
  408fd3:	jmp    0xe9c2152b
  408fd8:	dec    eax
  408fd9:	or     DWORD PTR [eax-0x7],ebp
  408fdc:	dec    eax
  408fdd:	pop    esi
  408fde:	mov    esi,0xe806fdd6
  408fe3:	js     0x408fba
  408fe5:	dec    esi
  408fe6:	inc    esi
  408fe8:	int    0x5d
  408fea:	idiv   DWORD PTR [esi-0x1e8ab18d]
  408ff0:	mov    al,ds:0xa3aeb564
  408ff5:	dec    esi
  408ff6:	mov    ch,0x91
  408ff8:	fwait
  408ff9:	dec    esi
  408ffa:	call   FWORD PTR [esi-0x4117f8fb]
  409000:	mov    ebp,0xd58eff4e
  409005:	test   DWORD PTR gs:[esi-0xe8ab17d],0x76b54060
  409010:	jae    0x409060
  409012:	mov    ch,0x8d
  409014:	sbb    ecx,DWORD PTR [esi-0x1]
  409017:	data16 add BYTE PTR [eax],al
	...
  40903e:	add    BYTE PTR [eax],al
  409040:	lea    eax,[esi]
  409042:	call   0xff8f5607
  409047:	push   esi
  409048:	mov    ebp,0x34ef769
  40904d:	dec    esi
  40904e:	jne    0x409041
  409050:	xor    BYTE PTR [ebp+esi*4-0x42760cc2],bl
  409057:	adc    ebx,edi
  409059:	dec    ebp
  40905a:	(bad)  
  40905b:	jmp    0x64c383f4
  409060:	cmp    BYTE PTR [esi-0x1],dl
  409063:	push   ds
  409064:	je     0x40903b
  409066:	adc    DWORD PTR [edx-0x13],esp
  409069:	xor    bh,dh
  40906b:	push   cs
  40906c:	add    ecx,DWORD PTR [esi+0x30]
  40906f:	add    BYTE PTR [ebp+0x3f],al
  409072:	pop    es
  409073:	call   0x400ff3
  409078:	dec    ecx
  409079:	cld    
  40907a:	imul   eax,DWORD PTR [eax],0xe8073c35
  409080:	inc    edi
  409081:	js     0x409082
  409083:	call   DWORD PTR ds:0x15f7e478
  409089:	mov    dh,0xe7
  40908b:	mov    DWORD PTR [edx-0x6000014b],edi
  409091:	loope  0x409089
  409093:	call   ebp
  409095:	fdivr  QWORD PTR [ebp-0x48]
  409098:	aad    0xb5
  40909a:	(bad)  
  40909b:	mov    ch,0xa
  40909d:	mov    esi,0x39dafffe
  4090a2:	mov    bh,0xff
	...
  4090cc:	aad    0xb5
  4090ce:	mov    ah,0xe0
  4090d0:	int    0xb5
  4090d2:	(bad)  
  4090d3:	call   0x3ffe22
  4090d8:	lds    esi,FWORD PTR [edi-0x28]
  4090db:	not    DWORD PTR [ebp-0x4a]
  4090de:	out    0x5d,eax
  4090e0:	sbb    dh,BYTE PTR [esi-0x4a800002]
  4090e6:	idiv   bh
  4090e8:	and    eax,0x15b851dd
  4090ed:	mov    dh,0xfe
  4090ef:	inc    ebp
  4090f0:	sbb    bl,ah
  4090f2:	aam    0xfd
  4090f4:	adc    eax,0x675feb6
  4090f9:	fstp   QWORD PTR [ebx-0x36f65d76]
  4090ff:	ret    0x9aa
  409102:	push   ebp
  409103:	mov    eax,DWORD PTR [esi-0x76]
  409106:	(bad)  
  409107:	cld    
  409108:	fmul   DWORD PTR [ecx]
  40910a:	push   0xd
  40910c:	push   ebp
  40910d:	cmp    BYTE PTR [edi],al
  40910f:	call   0xffd10d5f
  409114:	fs call 0xc5348cda
  40911a:	or     eax,0xd04f4b41
  40911f:	pop    es
  409120:	arpl   sp,dx
  409122:	push   edi
  409123:	inc    DWORD PTR [esp+ebx*2-0x30]
  409127:	sti    
  409128:	cmp    al,0xae
  40912a:	or     ebp,eax
  40912c:	les    esi,FWORD PTR [ebp+0x56]
  40912f:	inc    DWORD PTR [eax]
	...
  409155:	add    BYTE PTR [eax],al
  409157:	add    BYTE PTR [edx],al
  409159:	mov    eax,ds:0xe77fffff
  40915e:	add    WORD PTR [edi],0x4e97
  409163:	call   DWORD PTR [esi+ebx*8]
  409166:	mov    edi,0xd0937bfb
  40916b:	or     eax,DWORD PTR [esi+edx*2]
  40916e:	mov    ebp,0x6b628a28
  409173:	push   edx
  409174:	shl    DWORD PTR [edx+0x3],0xb
  409178:	or     esp,DWORD PTR [eax+eax*4+0x5f]
  40917c:	dec    ecx
  40917d:	bound  eax,QWORD PTR [ebx]
  40917f:	mov    DWORD PTR [esi+0x4b00038a],0xd7453e62
  409189:	sar    ebp,cl
  40918b:	inc    esp
  40918d:	or     BYTE PTR [edx+ebp*2],al
  409190:	dec    ebx
  409191:	cmp    BYTE PTR [ebx],al
  409193:	push   0x4b
  409195:	fnstsw WORD PTR [edi+0x7fe51bf3]
  40919b:	hlt    
  40919c:	pushf  
  40919d:	mov    ebx,0x8d9c5055
  4091a2:	pop    ebx
  4091a3:	call   FWORD PTR [esi]
  4091a5:	push   cs
  4091a6:	imul   esp,DWORD PTR [ecx+eax*8],0x62
  4091aa:	add    ecx,DWORD PTR [ebx]
  4091ac:	mov    edx,DWORD PTR [esi+0x929e900]
  4091b2:	jmp    0x4091b7
  4091b4:	dec    ebx
  4091b5:	loope  0x40920c
  4091b7:	sub    ecx,DWORD PTR [edx]
  4091b9:	or     DWORD PTR [esi],edx
  4091bb:	rol    BYTE PTR [eax],1
	...
  4091e1:	add    BYTE PTR [eax],al
  4091e3:	add    BYTE PTR [eax+0x61],dl
  4091e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091e7:	call   0x86c6:0x33724c5c
  4091ee:	cmc    
  4091ef:	dec    ebp
  4091f0:	dec    esp
  4091f1:	dec    esp
  4091f2:	cdq    
  4091f3:	mov    cl,0x2c
  4091f5:	jge    0x409229
  4091f7:	push   esi
  4091f8:	cmp    al,0x82
  4091fa:	ins    BYTE PTR es:[edi],dx
  4091fb:	push   esp
  4091fc:	cmp    al,0x4c
  4091fe:	fiadd  WORD PTR [edi+0x55de3cc6]
  409204:	and    al,0xb9
  409206:	inc    eax
  409207:	iret   
  409208:	push   ebp
  409209:	retf   0x54e8
  40920c:	ficomp WORD PTR [eax-0x4a]
  40920f:	push   ebp
  409210:	or     al,0x4c
  409212:	cld    
  409213:	mov    ebp,0x6be8ca33
  409218:	int    0x8e
  40921a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40921b:	push   ebp
  40921c:	ret    0x8585
  40921f:	dec    ebp
  409220:	in     al,dx
  409221:	dec    ebx
  409222:	add    eax,DWORD PTR [ebx+esi*2]
  409225:	adc    dh,0xc2
  409228:	fmul   QWORD PTR [edx+0x3c]
  40922b:	push   esp
  40922c:	fmul   QWORD PTR [ebx+0x7e]
  40922f:	push   ebp
  409230:	push   ss
  409231:	ret    
  409232:	mov    edi,0xf963c4c2
  409237:	cdq    
  409238:	mov    esp,0xa77f704b
  40923d:	push   ebx
  40923e:	pop    esi
  40923f:	push   ebp
  409240:	and    DWORD PTR [ecx],ecx
  409242:	shl    DWORD PTR [ebx+0x5c],0xca
  409246:	call   0x40929f
	...
  40926f:	add    dh,dl
  409271:	pop    eax
  409272:	ds push ebp
  409274:	xchg   esp,eax
  409275:	dec    ebx
  409276:	hlt    
  409277:	mov    ebp,0xe8ffca63
  40927c:	lock mov dh,0xb9
  40927f:	cs push ss
  409281:	add    BYTE PTR [ebp-0xb3f9ef],0x93
  409288:	dec    eax
  409289:	loope  0x409225
  40928b:	fimul  WORD PTR [ecx-0x8ab01b5]
  409291:	push   ebx
  409292:	inc    DWORD PTR [esi]
  409294:	(bad)  
  409295:	adc    eax,0x4b89d046
  40929a:	out    0xbd,eax
  40929c:	loop   0x4092e8
  40929e:	jmp    DWORD PTR [eax-0x44]
  4092a1:	imul   esi,edi,0x857c9fe6
  4092a7:	sar    DWORD PTR [edi+0x4a],0xff
  4092ab:	cmp    DWORD PTR [edi],esi
  4092ad:	jne    0x4092e6
  4092af:	sub    BYTE PTR [edi+0x4a],al
  4092b2:	mov    ch,0xb9
  4092b4:	xchg   DWORD PTR [edx-0x1],ecx
  4092b7:	mov    esi,0x2828c33d
  4092bc:	dec    edi
  4092bd:	popa   
  4092be:	adc    DWORD PTR [ebx-0x69],esi
  4092c1:	dec    edx
  4092c2:	or     ebp,DWORD PTR [ecx+0x5c82f804]
  4092c8:	xor    BYTE PTR [edx-0x1],dl
  4092cb:	xchg   esi,eax
  4092cc:	in     al,0xd5
  4092ce:	or     DWORD PTR [esi-0x5a7a85c8],ecx
	...
  4092fc:	xchg   DWORD PTR [edx-0x1],ecx
  4092ff:	xchg   edx,eax
  409300:	inc    edx
  409301:	inc    edx
  409302:	test   DWORD PTR [ebp-0x2b00b5e9],edx
  409308:	dec    eax
  409309:	or     DWORD PTR [eax],eax
  40930b:	mov    ecx,0x5eb63720
  409310:	pop    ss
  409311:	jl     0x409298
  409313:	cmp    DWORD PTR [edi],edx
  409315:	dec    edx
  409316:	(bad)  
  409317:	mov    ecx,0x36ccb0
  40931c:	jecxz  0x409324
  40931e:	push   DWORD PTR [ebp-0x142ae]
  409324:	cmp    eax,0xb32945fb
  409329:	push   es
  40932a:	call   0xfef57efc
  40932f:	or     esp,DWORD PTR [edx]
  409331:	cmp    dl,BYTE PTR [edx]
  409333:	cmp    edi,0x15
  409336:	idiv   edi
  409338:	dec    ebp
  409339:	dec    edx
  40933a:	je     0x409346
  40933c:	dec    ebp
  40933d:	test   BYTE PTR [esi-0x142c97b],0xff
  409344:	dec    ecx
  409345:	add    bh,al
  409347:	test   DWORD PTR [esi-0x43],edx
  40934a:	(bad)  
  40934b:	jmp    DWORD PTR [edx]
  40934d:	push   es
  40934e:	add    BYTE PTR [eax],al
  409350:	jb     0x4092ff
  409352:	lea    esi,[esi-0x427d4a03]
  409358:	push   es
  409359:	scas   al,BYTE PTR es:[edi]
  40935a:	(bad)  
  40935b:	jmp    DWORD PTR [edx]
  40935d:	xor    bh,BYTE PTR [esi]
  40935f:	add    DWORD PTR [eax],0x0
	...
  409386:	add    BYTE PTR [eax],al
  409388:	(bad)  
  409389:	adc    edi,esi
  40938b:	(bad)  
  40938c:	mov    ebp,0x88367502
  409391:	add    eax,0xadbe858d
  409396:	(bad)  
  409397:	push   DWORD PTR [edx]
  409399:	mov    dh,0xb4
  40939b:	in     al,0xc5
  40939d:	mov    ch,0xfe
  40939f:	call   0x3fad54
  4093a4:	fld    st(5)
  4093a6:	jae    0x4093b1
  4093a8:	popa   
  4093a9:	js     0x409377
  4093ab:	idiv   DWORD PTR ds:0x9774ffb6
  4093b1:	mov    dh,0xb4
  4093b3:	in     al,0x15
  4093b5:	mov    dh,0xfe
  4093b7:	call   0x4003ae
  4093bc:	dec    ebx
  4093bd:	sbb    ecx,DWORD PTR [ecx+0x52ba94e4]
  4093c3:	add    BYTE PTR [ebx+0x60],cl
  4093c6:	add    eax,DWORD PTR [ebx-0xa53c32]
  4093cc:	test   BYTE PTR [edi-0x29],bl
  4093cf:	push   0xffffffc8
  4093d1:	fcomp  QWORD PTR [edi-0x9]
  4093d4:	je     0x4093f8
  4093d6:	add    al,0x74
  4093d8:	jmp    0x5d2924bb
  4093dd:	repnz push edx
  4093df:	add    bh,dl
  4093e1:	cwde   
  4093e2:	fild   DWORD PTR [ecx]
  4093e4:	dec    ebx
  4093e5:	repz xchg ecx,eax
  4093e7:	call   esi
  4093e9:	push   edi
  4093ea:	pop    ebx
  4093eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  409414:	stc    
  409415:	aas    
  409416:	push   edx
  409417:	push   esi
  409419:	inc    esi
  40941a:	pop    edx
  40941b:	push   DWORD PTR [eax+esi*1]
  40941e:	fadd   DWORD PTR [edi]
  409420:	and    ebp,DWORD PTR [edx*4-0x679fdb01]
  409427:	call   0xff92ec40
  40942c:	sahf   
  40942d:	cmp    bl,BYTE PTR [ebx-0x13]
  409430:	fld    DWORD PTR [edi+0x6ebeff52]
  409436:	pop    edx
  409437:	(bad)  
  409438:	cld    
  409439:	ja     0x4093d3
  40943b:	in     al,0xfc
  40943d:	outs   dx,DWORD PTR ds:[esi]
  40943e:	push   edx
  40943f:	push   DWORD PTR [esi+0x3a]
  409442:	pop    ebx
  409443:	lods   eax,DWORD PTR ds:[esi]
  409444:	cdq    
  409445:	lahf   
  409446:	push   edx
  409447:	call   DWORD PTR [esi-0x2b00a58a]
  40944d:	(bad)  
  40944e:	fadd   DWORD PTR [edi]
  409450:	jecxz  0x40946b
  409452:	xchg   esi,eax
  409453:	inc    esp
  409455:	mov    edi,0xb7b4e097
  40945a:	push   ecx
  40945b:	(bad)  
  40945c:	ds or  ecx,esi
  40945f:	pop    ebx
  409460:	out    dx,al
  409461:	jnp    0x4094c1
  409463:	push   edx
  409464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409465:	jle    0x4094b4
  409467:	pop    edx
  409468:	pushf  
  409469:	dec    eax
  40946a:	inc    ecx
  40946b:	dec    edx
  40946c:	fimul  WORD PTR [eax+0x46]
  40946f:	push   edx
  409470:	(bad)  
  409471:	xor    eax,0x31845236
  409476:	jne    0x409410
	...
  4094a0:	jl     0x4094ea
  4094a2:	cs cwde 
  4094a4:	arpl   WORD PTR [eax+0x26],ax
  4094a7:	push   edx
  4094a8:	arpl   WORD PTR [edx+0x54],di
  4094ab:	push   edx
  4094ac:	fs dec eax
  4094ae:	pop    esp
  4094af:	arpl   WORD PTR [eax+ecx*2+0xe],dx
  4094b3:	pop    ebx
  4094b4:	lods   eax,DWORD PTR ds:[esi]
  4094b5:	jle    0x4094bd
  4094b7:	push   edx
  4094b8:	dec    esp
  4094b9:	jle    0x4094b4
  4094bb:	pop    ecx
  4094bc:	inc    esp
  4094bd:	dec    eax
  4094be:	add    DWORD PTR [esi-0xa],ebp
  4094c1:	inc    edi
  4094c2:	out    dx,al
  4094c3:	push   ecx
  4094c4:	mov    es,WORD PTR [ecx-0x30]
  4094c7:	xchg   esp,eax
  4094c8:	cs dec eax
  4094ca:	ficom  WORD PTR [ecx-0x62]
  4094cd:	inc    ebp
  4094ce:	shl    DWORD PTR [edi-0x3c],0x8
  4094d2:	jmp    0xe9519e11
  4094d7:	mov    dh,0xc1
  4094d9:	xor    al,0x6a
  4094db:	dec    eax
  4094dc:	push   DWORD PTR [edx+0x484edde8]
  4094e2:	xor    al,0xfc
  4094e4:	in     al,dx
  4094e5:	jne    0x409542
  4094e7:	push   ecx
  4094e8:	in     al,dx
  4094e9:	xchg   ecx,eax
  4094ea:	and    al,0x50
  4094ec:	jae    0x4094f7
  4094ee:	jmp    0x95f13253
  4094f3:	sbb    cl,BYTE PTR [edx+0x14081109]
  4094f9:	retf   0x50e8
  4094fc:	adc    DWORD PTR ds:[eax],eax
  4094ff:	adc    DWORD PTR [ecx+eiz*2+0x6eff],0x0
	...
  40952a:	add    BYTE PTR [eax],al
  40952c:	xor    al,0xce
  40952e:	idiv   DWORD PTR [ecx-0x57c92a70]
  409534:	dec    eax
  409535:	mov    cl,0x11
  409537:	push   ds
  409538:	mov    BYTE PTR [edi-0x2],al
  40953b:	adc    al,0x81
  40953d:	lock inc eax
  40953f:	jmp    0x3ef87834
  409544:	sbb    dl,BYTE PTR [eax+eax*8]
  409547:	mov    ebp,0x35459232
  40954c:	xchg   edi,eax
  40954d:	or     BYTE PTR [eax],al
  40954f:	push   ss
  409550:	fld    DWORD PTR [edi+0x75]
  409553:	icebp  
  409554:	add    BYTE PTR [eax+0x47fa16b1],al
  40955a:	jne    0x40956d
  40955c:	cli    
  40955d:	mov    ebp,0xf7406f3
  409562:	call   0xff876d85
  409567:	not    BYTE PTR ds:0xddd1e83b
  40956d:	inc    esi
  40956e:	call   DWORD PTR [ecx-0xf]
  409571:	inc    DWORD PTR [eax-0x17]
  409574:	jnp    0x409532
  409576:	pop    es
  409577:	sar    DWORD PTR [edx+0x45],0xff
  40957b:	into   
  40957c:	jnp    0x40953a
  40957e:	sti    
  40957f:	(bad)  
  409580:	cmc    
  409581:	push   cs
  409582:	call   0xff8772c6
  409587:	mov    al,ds:0x14000d86
  40958c:	jbe    0x4095c3
  40958e:	sub    DWORD PTR [ebp+0x0],0x0
	...
  4095b5:	add    BYTE PTR [eax],al
  4095b7:	add    BYTE PTR [ebx+esi*4-0x1],bh
  4095bb:	adc    cl,BYTE PTR [edx+0x46]
  4095be:	jne    0x4095a1
  4095c0:	sub    bl,0xb1
  4095c3:	mov    ?,WORD PTR [ebx-0x70]
  4095c6:	inc    ebp
  4095c7:	add    dh,al
  4095c9:	(bad)  
  4095ca:	(bad)  
  4095cb:	call   ebp
  4095cd:	cwde   
  4095ce:	push   0xff4bfda7
  4095d3:	addr16 jno 0x4095f7
  4095d6:	inc    ecx
  4095d7:	add    BYTE PTR ds:0xf8e8075f,ah
  4095dd:	repnz (bad) 
  4095df:	push   ebp
  4095e1:	pop    esi
  4095e2:	sti    
  4095e3:	(bad)  
  4095e4:	jg     0x409628
  4095e6:	out    0x43,eax
  4095e8:	adc    cl,bl
  4095ea:	dec    cl
  4095ec:	xor    BYTE PTR [esi],cl
  4095ee:	add    BYTE PTR [ebp-0x17],dl
  4095f1:	in     eax,0x82
  4095f3:	les    esp,FWORD PTR [esi]
  4095f5:	jmp    FWORD PTR fs:[ecx+0x72]
  4095f9:	fnstenv [eax+ecx*1+0x3a]
  4095fd:	mov    cl,0xb0
  4095ff:	push   DWORD PTR ds:0xcafc44c3
  409605:	or     al,BYTE PTR [eax]
  409607:	out    dx,eax
  409608:	add    al,0x62
  40960a:	mov    esp,0x6809f337
  40960f:	ret    0x4afd
  409612:	(bad)  
  409613:	(bad)  
  409614:	mov    edi,0xbafe742
  409619:	(bad)  
  40961a:	(bad)  
  40961b:	push   0x0
	...
  409641:	add    BYTE PTR [eax],al
  409643:	add    BYTE PTR [edx],dh
  409645:	(bad)  
  409646:	(bad)  
  409647:	aaa    
  409648:	jae    0x409657
  40964a:	push   0xff4c3de5
  40964f:	dec    BYTE PTR [edi]
  409651:	dec    esp
  409652:	sub    BYTE PTR [ecx-0xe],al
  409655:	loope  0x4095ec
  409657:	mov    bh,0xb5
  409659:	aad    0xa
  40965b:	sar    BYTE PTR [esi],0xf1
  40965e:	fisttp DWORD PTR [di]
  409661:	dec    ebp
  409662:	dec    DWORD PTR [edi-0x46]
  409665:	sub    dh,BYTE PTR [edi-0x4b60b401]
  40966b:	addr16 dec ebx
  40966d:	xor    BYTE PTR [esi-0x42],bl
  409670:	arpl   bp,cx
  409672:	push   ss
  409673:	inc    ecx
  409674:	dec    ebx
  409675:	and    BYTE PTR [edi+0x75],cl
  409678:	push   ebx
  409679:	mov    BYTE PTR [edx],bl
  40967b:	fnstenv [esi+esi*4-0x5108a9a5]
  409682:	dec    esi
  409683:	call   FWORD PTR [esi]
  409685:	in     al,0x4e
  409687:	jne    0x4096dc
  409689:	enter  0xb13c,0x94
  40968d:	(bad)  
  40968e:	cmp    al,0xc2
  409690:	inc    edi
  409691:	xor    BYTE PTR [eax+0x47b2778a],bh
  409697:	cld    
  409698:	adc    eax,0xe2ffd9a7
  40969d:	pusha  
  40969e:	dec    esi
  40969f:	jne    0x4096e4
  4096a1:	sbb    bl,bl
  4096a3:	mov    al,0x64
  4096a5:	es jge 0x4096ed
	...
  4096d0:	pop    edi
  4096d1:	stos   BYTE PTR es:[edi],al
  4096d2:	sbb    BYTE PTR [edi+0x23],bl
  4096d5:	jno    0x4096da
  4096d7:	mov    ecx,DWORD PTR [esi]
  4096d9:	xchg   ebx,eax
  4096da:	sbb    eax,DWORD PTR [ecx+0x4b]
  4096dd:	mov    dl,0xe
  4096df:	add    BYTE PTR [edi+0x730adb67],dh
  4096e5:	jno    0x4096ea
  4096e7:	push   edi
  4096e8:	and    esp,DWORD PTR [ebx+0x374b0085]
  4096ee:	inc    ebx
  4096ef:	je     0x409757
  4096f1:	add    al,0x5c
  4096f3:	rcl    esi,cl
  4096f5:	push   ebx
  4096f6:	dec    esi
  4096f7:	push   0xffc50a37
  4096fc:	xchg   esp,eax
  4096fd:	pop    edx
  4096fe:	push   ecx
  4096ff:	mov    bh,0xfc
  409701:	jnp    0x4096b6
  409703:	addr16 dec ebx
  409705:	xor    bl,BYTE PTR [esi-0x42]
  409708:	fwait
  409709:	or     DWORD PTR [esi-0x3cceb328],esp
  40970f:	cmp    ah,bl
  409711:	inc    esp
  409712:	sbb    DWORD PTR [edx-0x68],0x4a5a8e44
  409719:	retf   
  40971a:	push   0x82be4b0d
  40971f:	(bad)
  409722:	test   al,0x8c
  409724:	mov    ah,0x44
  409726:	outs   dx,BYTE PTR ds:[esi]
  409727:	dec    esi
  409728:	mov    ecx,0x1e072173
  40972d:	jle    0x40978d
  40972f:	fsub   DWORD PTR [eax+0xfbdc44]
	...
  409759:	add    BYTE PTR [eax],al
  40975b:	add    BYTE PTR [esp+ecx*8-0x1b73b169],ch
  409762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409763:	cmp    al,0x89
  409765:	or     eax,0x35d1b8e9
  40976a:	push   0x47
  40976c:	ja     0x40971d
  40976e:	call   0x9c84f24c
  409773:	sti    
  409774:	ins    BYTE PTR es:[edi],dx
  409775:	xor    bl,BYTE PTR [ecx+0x4e]
  409778:	pop    esp
  409779:	xchg   edx,eax
  40977a:	lods   al,BYTE PTR ds:[esi]
  40977b:	dec    edi
  40977c:	jecxz  0x409786
  40977e:	jmp    0xd0f224e1
  409783:	or     ecx,DWORD PTR [edx+0x74ee9109]
  409789:	retf   0x4ee8
  40978c:	mov    esi,0x13940111
  409791:	inc    esp
  409792:	out    0x4d,al
  409794:	sahf   
  409795:	inc    ebp
  409796:	(bad)  
  409798:	inc    esp
  409799:	xor    ebx,esp
  40979b:	xchg   edx,eax
  40979c:	adc    al,0x44
  40979e:	mov    al,ds:0x1c094742
  4097a3:	jns    0x40979c
  4097a5:	mov    DWORD PTR [ebp+0x43f430],esp
  4097ab:	mov    dh,0x74
  4097ad:	into   
  4097ae:	sti    
  4097af:	sbb    DWORD PTR [esi-0x42],edi
  4097b2:	or     esp,DWORD PTR [esi+0x2828cb3c]
  4097b8:	inc    edi
  4097b9:	xor    ebp,ecx
  4097bb:	ins    BYTE PTR es:[edi],dx
  4097bc:	dec    edi
  4097bd:	or     DWORD PTR [ebx],ecx
  4097bf:	test   eax,0x0
	...
  4097e8:	into   
  4097e9:	mov    WORD PTR [ecx-0x38f6b718],fs
  4097ef:	and    al,0xf
  4097f1:	or     DWORD PTR [eax],eax
  4097f3:	jmp    0x7585e440
  4097f8:	dec    BYTE PTR [ebx]
  4097fa:	add    cl,ch
  4097fc:	add    BYTE PTR [ebx+0x69],0xe9
  409800:	add    BYTE PTR [ebx+0x69],0xe9
  409804:	adc    eax,0xdb9f3ce
  409809:	mov    ?,esp
  40980b:	ds push ss
  40980d:	inc    esp
  40980e:	push   eax
  40980f:	ds xchg esp,eax
  409811:	cmp    edi,edi
  409813:	mov    esp,0x649f3104
  409818:	inc    edi
  409819:	or     DWORD PTR [ebx],ecx
  40981b:	sub    DWORD PTR [ebx+0x4985e90c],eax
  409821:	or     DWORD PTR [eax],eax
  409823:	cmp    DWORD PTR [edi-0x16bf10],0x89110bbd
  40982d:	jnp    0x40982e
  40982f:	(bad)  
  409830:	clc    
  409831:	(bad)  
  409832:	shl    BYTE PTR [esp+ecx*8+0x3d],1
  409836:	imul   esi
  409838:	jg     0x409813
  40983a:	push   ecx
  40983b:	sar    DWORD PTR [edx-0x5e210085],1
  409841:	mov    eax,?
  409843:	fiadd  WORD PTR [edi-0x441e17be]
  409849:	inc    edx
  40984a:	inc    DWORD PTR [eax]
	...
  409874:	cwde   
  409875:	or     eax,0x464a4568
  40987a:	(bad)  
  40987b:	(bad)  
  40987c:	ja     0x409854
  40987e:	idiv   bh
  409880:	popf   
  409881:	aad    0x34
  409883:	inc    esi
  409884:	sti    
  409885:	inc    edi
  409886:	jmp    edi
  409888:	ficomp DWORD PTR [edi+edi*8-0x1b749401]
  40988f:	idiv   DWORD PTR [ebp+0x5a0069d5]
  409895:	sbb    bh,BYTE PTR [eax]
  409897:	inc    ecx
  409898:	mov    dl,0xd5
  40989a:	mov    ah,0xf0
  40989c:	xor    eax,0xf7fffed5
  4098a1:	dec    esp
  4098a2:	sub    BYTE PTR [ecx-0x4e],al
  4098a5:	fsubp  st(1),st
  4098a7:	mov    ch,0xfd
  4098a9:	aam    0x88
  4098ab:	test   DWORD PTR [esi],ecx
  4098ad:	(bad)  
  4098af:	dec    DWORD PTR [eax+0x4a3c6806]
  4098b5:	inc    esi
  4098b6:	(bad)  
  4098b7:	(bad)  
  4098b8:	not    ebp
  4098ba:	idiv   bh
  4098bc:	cmp    eax,0x4b4634d5
  4098c1:	inc    esi
  4098c2:	jmp    edi
  4098c4:	push   ds
  4098c5:	fwait
  4098c6:	(bad)  
  4098c7:	(bad)  
  4098c8:	fisttp DWORD PTR [edx-0x2ac20818]
  4098ce:	mov    WORD PTR [ebp-0x122e2],es
  4098d4:	loop   0x409933
  4098d6:	dec    ebp
  4098d7:	cmp    BYTE PTR [eax],al
	...
  4098fd:	add    BYTE PTR [eax],al
  4098ff:	add    bl,dh
  409901:	add    eax,0xd632b5ff
  409906:	(bad)  
  409907:	call   FWORD PTR ds:0x7329461c
  40990d:	or     eax,0xcdb7a9e8
  409912:	dec    BYTE PTR [ebx]
  409914:	dec    ebx
  409915:	jo     0x4098e7
  409917:	sbb    al,cl
  409919:	xchg   esp,eax
  40991a:	sub    bh,dh
  40991c:	add    al,0x4b
  40991e:	add    BYTE PTR [ebp+0x5b],dh
  409921:	adc    DWORD PTR [edi+ecx*4],0xffffffce
  409925:	dec    edi
  409926:	push   ebx
  409927:	(bad)  
  409928:	in     al,dx
  409929:	pop    ds
  40992a:	pop    esp
  40992b:	jbe    0x4098c6
  40992d:	push   0x4b
  40992f:	jmp    0x409968
  409931:	aaa    
  409932:	inc    ebx
  409933:	je     0x409982
  409935:	add    BYTE PTR [edx+ebp*2-0x67],bl
  409939:	xchg   edx,eax
  40993a:	dec    ebx
  40993b:	(bad)  
  40993c:	into   
  40993d:	(bad)  
  40993e:	push   ebx
  40993f:	(bad)  
  409940:	mov    esp,0x4b00035c
  409945:	scas   eax,DWORD PTR es:[edi]
  409946:	mov    ah,ah
  409948:	mov    ah,0xb2
  40994a:	dec    edx
  40994b:	add    BYTE PTR [edi],bl
  40994d:	add    DWORD PTR [esi+0x4adaafbd],0xffffffff
  409954:	dec    ebx
  409955:	fs mov ecx,0x52c7ce82
  40995b:	inc    DWORD PTR [edi+ebp*1+0x2ff344cf]
  409962:	add    ebp,edi
	...
  40998c:	mov    ch,0xfa
  40998e:	rol    BYTE PTR [edi],1
  409990:	arpl   ax,si
  409992:	cdq    
  409993:	jmp    DWORD PTR [edx+ebp*8-0x70]
  409997:	in     al,dx
  409998:	push   esp
  409999:	and    cl,BYTE PTR [ebx-0x1]
  40999c:	fisub  WORD PTR [edi]
  40999e:	pop    ebx
  40999f:	adc    eax,0xff4b129c
  4099a4:	(bad)  
  4099a5:	sbb    dl,BYTE PTR [ebx-0x1]
  4099a8:	cmp    al,0x40
  4099aa:	rol    BYTE PTR [edi],1
  4099ac:	and    esi,DWORD PTR [eax]
  4099ae:	call   0x1ce4:0x90302cff
  4099b5:	or     ah,dh
  4099b7:	dec    edx
  4099b8:	sbb    al,0xb7
  4099ba:	lock pop ebx
  4099bc:	adc    dh,BYTE PTR [eax-0x2a]
  4099bf:	dec    edx
  4099c0:	or     al,0x77
  4099c2:	leave  
  4099c3:	push   edx
  4099c4:	add    al,0x41
  4099c6:	(bad)  
  4099c7:	rol    BYTE PTR [ecx+esi*1+0x70],1
  4099cb:	cdq    
  4099cc:	hlt    
  4099cd:	inc    eax
  4099ce:	mov    dh,0x90
  4099d0:	out    0x38,eax
  4099d2:	scas   al,BYTE PTR es:[edi]
  4099d3:	dec    edx
  4099d4:	repz ss pop eax
  4099d7:	dec    edx
  4099d8:	fadd   QWORD PTR [eax+0x54]
  4099db:	push   edi
  4099dc:	fadd   QWORD PTR [eax-0x6a]
  4099df:	pop    ebx
  4099e0:	loope  0x409a5c
  4099e2:	mov    cs,WORD PTR [edx-0x3c]
  4099e5:	jbe    0x409978
  4099e7:	push   edx
  4099e8:	mov    esp,0xfa2a9140
  4099ed:	inc    eax
  4099ee:	jbe    0x409a3a
	...
  409a18:	idiv   BYTE PTR [ecx]
  409a1a:	jbe    0x409a66
  409a1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a1d:	xor    DWORD PTR ds:0x5e409c94,edi
  409a23:	rcr    BYTE PTR [edx+esi*1+0x408c49c7],0x4e
  409a2b:	rol    BYTE PTR [eax+0x4b7fe731],1
  409a31:	or     DWORD PTR [eax],esi
  409a33:	inc    ebp
  409a34:	inc    ebx
  409a35:	or     DWORD PTR [esi+edi*2+0x47258c5f],ebx
  409a3c:	icebp  
  409a3d:	or     BYTE PTR [ebx-0xf49a20a],dl
  409a43:	pop    ebx
  409a44:	ins    DWORD PTR es:[edi],dx
  409a45:	outs   dx,DWORD PTR ds:[esi]
  409a46:	push   ss
  409a47:	dec    edx
  409a48:	ret    0xcc6
  409a4b:	fistp  DWORD PTR [esi+0x3c03a801]
  409a51:	mov    dh,0xf0
  409a53:	pop    ebx
  409a54:	pop    ebp
  409a55:	aas    
  409a56:	add    dh,dh
  409a58:	add    BYTE PTR [eax+0x75],0xed
  409a5c:	xchg   edx,eax
  409a5d:	mov    dh,0x7
  409a5f:	rcr    DWORD PTR [eax],1
  409a61:	outs   dx,DWORD PTR ds:[esi]
  409a62:	(bad)  
  409a63:	ficom  WORD PTR [eax+0x4b]
  409a66:	add    al,0xe9
  409a68:	fst    QWORD PTR [edx+0x3d8b6aec]
  409a6e:	push   0xffffffe9
  409a70:	push   ds
  409a71:	sbb    al,0xff
  409a73:	xor    al,0xf7
  409a75:	daa    
  409a76:	mov    ch,0x87
  409a78:	add    BYTE PTR [eax-0x77],0x24
	...
  409aa4:	xchg   ebx,eax
  409aa5:	mov    cl,0xff
  409aa7:	call   0x69a91a2f
  409aac:	inc    edi
  409aad:	retf   0xff
  409ab0:	stc    
  409ab1:	test   DWORD PTR [eax-0x17],0x9107b613
  409ab8:	test   BYTE PTR [ebp-0x1],dl
  409abb:	jle    0x409abf
  409abd:	mov    dh,0xfb
  409abf:	jbe    0x409b3d
  409ac1:	pop    es
  409ac2:	call   0xff805c5e
  409ac7:	xor    BYTE PTR ds:0x17b40005,al
  409acd:	sub    eax,0x385f2d81
  409ad2:	dec    DWORD PTR [esi-0x4]
  409ad5:	(bad)  
  409ad8:	adc    esi,DWORD PTR [esi-0x38bbc1f5]
  409ade:	sub    BYTE PTR [eax+0x6a993148],ch
  409ae4:	dec    edi
  409ae5:	or     DWORD PTR [ebx],ecx
  409ae7:	sub    DWORD PTR [edx-0x7c],esp
  409aea:	int    0xe8
  409aec:	dec    eax
  409aed:	or     edi,eax
  409aef:	lods   al,BYTE PTR ds:[esi]
  409af0:	add    BYTE PTR [ecx],cl
  409af2:	add    cl,ch
  409af4:	dec    eax
  409af5:	inc    esi
  409af6:	inc    ebp
  409af7:	add    BYTE PTR [esi],bh
  409af9:	rol    BYTE PTR [esi],cl
  409afb:	add    BYTE PTR [edx],ah
  409afd:	pop    ebp
  409afe:	jmp    FWORD PTR [ecx+0x22]
  409b01:	pop    ebp
  409b02:	jmp    FWORD PTR [ecx+0x32]
  409b05:	mov    eax,0xf444
	...
  409b2e:	add    BYTE PTR [eax],al
  409b30:	bound  esi,QWORD PTR [esi-0x2e020b7c]
  409b36:	(bad)  
  409b37:	push   eax
  409b38:	cmc    
  409b39:	dec    edi
  409b3a:	idiv   edi
  409b3c:	lahf   
  409b3d:	shl    edi,1
  409b3f:	imul   esi,DWORD PTR [ecx+0xa],0x0
  409b43:	or     esp,DWORD PTR [edx-0x6d16fbb2]
  409b49:	or     eax,DWORD PTR [eax]
  409b4b:	add    BYTE PTR [edx-0xdbed768],cl
  409b51:	shl    DWORD PTR [esp+ecx*1-0x46],1
  409b55:	shl    BYTE PTR [ebx-0x75854a01],0xd0
  409b5c:	daa    
  409b5d:	mov    edi,0xd1c5f7f3
  409b62:	dec    edi
  409b63:	push   edx
  409b64:	ficom  DWORD PTR [eax-0x4d]
  409b67:	push   DWORD PTR ds:0x1df084c3
  409b6d:	sar    esi,1
  409b6f:	call   0x4035d2
  409b74:	daa    
  409b75:	mov    edi,0xd0f5f7d7
  409b7a:	dec    edi
  409b7b:	push   0x4111f4
  409b80:	add    eax,0x35f7f08f
  409b85:	sar    esi,1
  409b87:	xor    eax,0x41239c
  409b8c:	or     al,BYTE PTR [ecx]
  409b8e:	mov    bl,0xff
  409b90:	and    eax,0xe484c3
	...
  409bb9:	add    BYTE PTR [eax],al
  409bbb:	add    BYTE PTR ds:0x4b6afed1,bh
  409bc1:	xor    bl,bl
  409bc3:	mov    eax,DWORD PTR [ebx-0x900fc8f]
  409bc9:	aas    
  409bca:	dec    edi
  409bcb:	push   DWORD PTR [edi+edi*1]
  409bce:	or     eax,0x3716246
  409bd3:	call   0xff889eb2
  409bd8:	shr    BYTE PTR [edi+edx*2-0x25a0eb09],cl
  409bdf:	jmp    DWORD PTR [ebp+edi*4+0x4f4b410b]
  409be6:	xchg   ecx,eax
  409be7:	lock hlt 
  409be9:	inc    esi
  409bea:	inc    edi
  409beb:	(bad)  
  409bec:	ds out 0x1c,al
  409bef:	inc    ecx
  409bf0:	dec    ebx
  409bf1:	dec    eax
  409bf2:	jae    0x409ba7
  409bf4:	in     al,0x6e
  409bf6:	jge    0x409b7d
  409bf8:	repz sahf 
  409bfa:	inc    edi
  409bfb:	inc    esi
  409bfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bfe:	daa    
  409bff:	test   esp,0xec67b496
  409c05:	push   edi
  409c06:	(bad)  
  409c07:	(bad)  
  409c08:	mov    ebp,0xb4f753fc
  409c0d:	mov    esi,0x49053546
  409c12:	(bad)  
  409c13:	jmp    FWORD PTR [edi+edi*1+0x3a9cff92]
  409c1a:	inc    ebx
  409c1b:	je     0x409c4f
  409c1d:	mov    bl,0x88
  409c1f:	fadd   QWORD PTR [eax]
	...
  409c45:	add    BYTE PTR [eax],al
  409c47:	add    BYTE PTR [esi+edx*8+0x3ffe0446],dl
  409c4e:	inc    esi
  409c4f:	xor    ah,cl
  409c51:	lods   al,BYTE PTR ds:[esi]
  409c52:	arpl   di,si
  409c54:	je     0x409c54
  409c56:	mov    bl,0xe7
  409c58:	rol    BYTE PTR cs:[esi-0x1],0x70
  409c5d:	push   ebx
  409c5e:	cli    
  409c5f:	mov    edi,0xb3ef08d7
  409c64:	ins    BYTE PTR es:[edi],dx
  409c65:	neg    DWORD PTR [eax+0x47]
  409c68:	dec    esp
  409c69:	inc    ebp
  409c6a:	ins    BYTE PTR es:[edi],dx
  409c6b:	fs cmp al,0x3d
  409c6e:	push   cs
  409c6f:	icebp  
  409c70:	cmp    al,0x3d
  409c72:	jmp    0xf66692f9
  409c77:	inc    esi
  409c78:	sub    al,0xa
  409c7a:	jge    0x409c41
  409c7c:	leave  
  409c7d:	jle    0x409c7c
  409c7f:	dec    esi
  409c80:	sbb    al,0x3d
  409c82:	jmp    0x9cc93c56
  409c87:	pop    ebx
  409c88:	adc    al,0x3d
  409c8a:	(bad)  
  409c8b:	add    edi,DWORD PTR [edi-0x53]
  409c8e:	inc    edx
  409c8f:	add    al,0xce
  409c91:	xchg   BYTE PTR [ecx+0x193cf44e],ah
  409c97:	inc    edi
  409c98:	mov    dh,0x25
  409c9a:	mov    esi,0x1b31e446
  409c9f:	xor    esp,ebx
  409ca1:	cmp    al,0xf2
  409ca3:	inc    ebx
  409ca4:	pop    edi
  409ca5:	aad    0x69
  409ca7:	mov    bl,dh
  409ca9:	xor    al,0x96
  409cab:	inc    esi
	...
  409cd4:	dec    ebx
  409cd5:	mov    ch,0x21
  409cd7:	fdivr  QWORD PTR [esp+edi*1-0x494b7a6a]
  409cde:	lock pop ebx
  409ce0:	and    al,0x6d
  409ce2:	jbe    0x409d2a
  409ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ce5:	jbe    0x409d64
  409ce7:	dec    esi
  409ce8:	pushf  
  409ce9:	cmp    al,0x66
  409ceb:	ror    BYTE PTR [ecx+esi*1-0x5e],1
  409cef:	xchg   edi,eax
  409cf0:	mov    WORD PTR [esi+edx*2],?
  409cf3:	nop
  409cf4:	jae    0x409d2a
  409cf6:	dec    esi
  409cf7:	inc    esi
  409cf8:	jl     0x409cb0
  409cfa:	lock pop ebx
  409cfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cfd:	ins    DWORD PTR es:[edi],dx
  409cfe:	ds inc esi
  409d00:	ins    BYTE PTR es:[edi],dx
  409d01:	jbe    0x409d03
  409d03:	adc    DWORD PTR ds:0xbb2eff3c,edx
  409d09:	and    eax,0x3c0d26f7
  409d0e:	jne    0x409d01
  409d10:	lock lods eax,DWORD PTR ds:[esi]
  409d12:	stos   DWORD PTR es:[edi],eax
  409d13:	push   ss
  409d14:	lea    edi,[esi*4-0xc372f7]
  409d1b:	push   es
  409d1c:	sbb    eax,DWORD PTR [eax+ebp*8]
  409d1f:	rcl    ah,1
  409d21:	cmp    edi,edi
  409d23:	not    ah
  409d25:	and    al,0xf7
  409d27:	out    dx,al
  409d28:	xchg   BYTE PTR [ecx],dh
  409d2a:	xchg   ebp,eax
  409d2b:	xchg   esi,eax
  409d2c:	mov    ?,WORD PTR [edi+edi*8]
  409d2f:	xchg   esp,eax
  409d30:	jae    0x409d66
  409d32:	call   esi
  409d34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d35:	(bad)  
  409d36:	scas   eax,DWORD PTR es:[edi]
  409d37:	into   
	...
  409d60:	xchg   BYTE PTR [esi*4-0xc3792f],bh
  409d67:	rol    DWORD PTR [esi],1
  409d69:	imul   edi,edi,0xffffffb6
  409d6c:	mov    ?,WORD PTR [esi-0x10]
  409d6f:	mov    dh,0x86
  409d71:	cmp    al,0xe8
  409d73:	sbb    eax,0x9eff3bbe
  409d78:	mov    WORD PTR [ebx],?
  409d7a:	jmp    0xff7caaaa
  409d7f:	mov    cs,WORD PTR [edi+edi*1+0x8c847e8]
  409d86:	add    BYTE PTR [eax+0x1c001109],dh
  409d8c:	and    ch,BYTE PTR ds:0x3bfba583
  409d92:	jne    0x409d89
  409d94:	lock sar BYTE PTR [edi-0x17],cl
  409d98:	dec    eax
  409d99:	xchg   edx,eax
  409d9a:	inc    ebp
  409d9b:	push   ecx
  409d9c:	push   cs
  409d9d:	mov    dh,0xf7
  409d9f:	inc    ecx
  409da0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409da1:	push   0xffffffff
  409da3:	add    BYTE PTR ds:0x2dfc44c0,cl
  409da9:	dec    esp
  409daa:	sti    
  409dab:	jmp    DWORD PTR [edi+0x7e75fecf]
  409db1:	fist   WORD PTR [esi]
  409db3:	mov    ebx,0xc00ac62d
  409db8:	mov    dh,0x5
  409dba:	mov    DWORD PTR [ebp+0x66],eax
  409dbd:	pop    edi
  409dbe:	dec    DWORD PTR [edi+eiz*8+0xff4fca]
	...
  409de9:	add    BYTE PTR [eax],al
  409deb:	add    BYTE PTR [edi+0x567be7c2],dh
  409df1:	(bad)  
  409df2:	dec    BYTE PTR [ebx]
  409df4:	jb     0x409e4f
  409df6:	sub    BYTE PTR [eax+0x32],ch
  409df9:	aaa    
  409dfa:	out    dx,al
  409dfb:	mov    esi,0xe8074c2d
  409e00:	retf   
  409e01:	mov    eax,ds:0x4c1dffff
  409e06:	idiv   edi
  409e08:	xchg   edi,eax
  409e09:	inc    ecx
  409e0a:	(bad)  
  409e0b:	jne    0x409e07
  409e0d:	faddp  st(0),st
  409e0f:	stos   DWORD PTR es:[edi],eax
  409e10:	lods   eax,DWORD PTR ds:[esi]
  409e11:	(bad)  
  409e14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e15:	lds    esi,FWORD PTR [esp+edi*8-0x53]
  409e19:	dec    ebx
  409e1a:	pop    es
  409e1b:	call   0x403f91
  409e20:	lods   eax,DWORD PTR ds:[esi]
  409e21:	dec    ebx
  409e22:	sti    
  409e23:	call   0x4032f6
  409e28:	jmp    0x409df2
  409e2a:	pop    es
  409e2b:	add    BYTE PTR [edi-0x40],dl
  409e2e:	jmp    0x409db3
  409e30:	out    0xde,al
  409e32:	push   ebp
  409e33:	jmp    DWORD PTR [edi+0x61ade732]
  409e39:	(bad)  
  409e3c:	bound  ecx,QWORD PTR [ebx+0x4]
  409e3f:	pop    esi
  409e40:	pop    ebx
  409e41:	enter  0x7,0x4b
  409e45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e46:	mov    ebp,0xcdcb1bef
  409e4b:	or     esp,DWORD PTR [ebx+0x63]
  409e4e:	(bad)  
  409e4f:	inc    DWORD PTR [eax]
	...
  409e75:	add    BYTE PTR [eax],al
  409e77:	add    BYTE PTR [edi+esi*1+0x43],ch
  409e7b:	bswap  edi
  409e7d:	(bad)  
  409e7e:	add    al,BYTE PTR [eax]
  409e80:	dec    ebx
  409e81:	jmp    0x409e50
  409e83:	sti    
  409e84:	arpl   di,si
  409e86:	xchg   esp,eax
  409e87:	dec    DWORD PTR [ecx+edi*4-0x43]
  409e8b:	jmp    0x409ed1
  409e8d:	popf   
  409e8e:	inc    edi
  409e8f:	push   DWORD PTR [esi+0x3375433c]
  409e95:	sbb    BYTE PTR [edx-0x52],dl
  409e98:	sub    al,0x3b
  409e9a:	ja     0x409f11
  409e9c:	aaa    
  409e9d:	pop    es
  409e9e:	mov    edx,0xc2782b67
  409ea3:	(bad)  
  409ea4:	jle    0x409efe
  409ea6:	lds    eax,FWORD PTR [eax-0x3ff1cfb5]
  409eac:	jle    0x409edc
  409eae:	cs cmp eax,0xdfac5fd0
  409eb4:	xor    esi,ecx
  409eb6:	add    ebp,eax
  409eb8:	(bad)  
  409eb9:	cli    
  409eba:	add    eax,DWORD PTR [eax]
  409ebc:	dec    eax
  409ebd:	or     BYTE PTR [ebp+0x32c7f375],0x38
  409ec4:	mov    dh,BYTE PTR [eax]
  409ec6:	(bad)  
  409ec8:	sub    al,0xb1
  409eca:	add    eax,DWORD PTR [eax]
  409ecc:	push   eax
  409ecd:	jo     0x409e88
  409ecf:	add    DWORD PTR [eax-0x72ef72ca],esi
  409ed5:	das    
  409ed6:	add    edx,DWORD PTR [eax+0x19]
  409ed9:	mov    ebx,0xe7b8
	...
  409f02:	add    BYTE PTR [eax],al
  409f04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f05:	cmp    al,0xb
  409f07:	call   0xff8348ae
  409f0c:	icebp  
  409f0d:	or     cl,al
  409f0f:	mov    edi,DWORD PTR [ebx]
  409f11:	mov    DWORD PTR [edi],ebx
  409f13:	add    al,0xfe
  409f15:	jbe    0x409ed8
  409f17:	add    al,0x5b
  409f19:	sub    cl,BYTE PTR [edi+0x5110fe43]
  409f1f:	push   eax
  409f20:	mov    eax,ds:0xde433e39
  409f25:	cmp    al,0x36
  409f27:	mov    ecx,0xbb43970
  409f2c:	arpl   WORD PTR [ebx+edx*2],si
  409f2f:	inc    ebx
  409f30:	dec    esp
  409f31:	cmp    DWORD PTR [edi+ebp*1+0x4346e733],edx
  409f38:	cmp    al,0x87
  409f3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f3b:	xor    ebx,DWORD PTR [ebx+0x2c779a21]
  409f41:	cmp    DWORD PTR [edx],edx
  409f43:	add    al,0x85
  409f45:	inc    edx
  409f46:	sub    ecx,DWORD PTR [ebx+ecx*2]
  409f49:	fisub  WORD PTR [ecx+0x30]
  409f4c:	enter  0xe54d,0xad
  409f50:	or     al,0xa3
  409f52:	repz inc edx
  409f54:	jle    0x409f57
  409f56:	rol    esi,0xb1
  409f59:	cmp    dh,cl
  409f5b:	mov    WORD PTR [esi+0x33705135],cs
  409f61:	retf   0x42e8
  409f64:	pop    esi
  409f65:	add    ecx,eax
  409f67:	push   0x0
	...
  409f8d:	add    BYTE PTR [eax],al
  409f8f:	add    bh,bl
  409f91:	cmp    BYTE PTR [esi-0x114f2b53],ch
  409f97:	cld    
  409f98:	mov    ecx,DWORD PTR [ecx]
  409f9a:	adc    DWORD PTR [esi],esi
  409f9c:	or     edx,0xffffffe8
  409f9f:	inc    edx
  409fa0:	jbe    0x409f71
  409fa2:	mov    edi,0x8530b4c4
  409fa7:	jae    0x409f55
  409fa9:	cmp    dl,dh
  409fab:	inc    ebx
  409fac:	pop    ds
  409fad:	adc    eax,DWORD PTR [eax]
  409faf:	add    DWORD PTR [edx],eax
  409fb1:	icebp  
  409fb2:	inc    eax
  409fb3:	jmp    0x9908d030
  409fb8:	or     DWORD PTR [eax],edi
  409fba:	push   eax
  409fbb:	mov    ecx,0x4107be09
  409fc0:	and    eax,0x204eff37
  409fc5:	dec    edi
  409fc6:	lods   eax,DWORD PTR ds:[esi]
  409fc7:	inc    esi
  409fc8:	or     DWORD PTR [ebx+0x7b3a5119],esp
  409fce:	push   DWORD PTR [esi]
  409fd0:	dec    ebp
  409fd1:	dec    ecx
  409fd2:	je     0x409fd8
  409fd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fd5:	inc    ecx
  409fd6:	cmp    BYTE PTR [eax+0x4ae7d948],ch
  409fdc:	mov    edi,0xa381ff38
  409fe1:	icebp  
  409fe2:	inc    eax
  409fe3:	jmp    0x38d8d000
  409fe8:	mov    DWORD PTR [eax],edi
  409fea:	push   eax
  409feb:	cdq    
  409fec:	mov    DWORD PTR [esi+0x37950107],edi
  409ff2:	(bad)  
  409ff3:	out    dx,al
	...
  40a01c:	popa   
  40a01d:	lahf   
  40a01e:	lods   eax,DWORD PTR ds:[esi]
  40a01f:	out    0x8a,al
  40a021:	mov    ds:0x7a69d11b,eax
  40a026:	call   esi
  40a028:	dec    esi
  40a029:	dec    ecx
  40a02a:	je     0x40a030
  40a02c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a02d:	inc    eax
  40a02e:	cmp    BYTE PTR [eax],ch
  40a030:	inc    edi
  40a031:	(bad)  
  40a033:	cmp    bl,BYTE PTR [eax+0x38]
  40a036:	inc    DWORD PTR [ecx+0x74]
  40a039:	icebp  
  40a03a:	inc    eax
  40a03b:	jmp    0x58a8d038
  40a040:	mov    bh,BYTE PTR [eax]
  40a042:	push   eax
  40a043:	cmp    DWORD PTR [edx],ecx
  40a045:	mov    esi,0x36c68107
  40a04a:	dec    DWORD PTR [esi+0xacaf67]
  40a050:	vpunpckhwd xmm4,xmm6,XMMWORD PTR [ebx]
  40a054:	mov    edx,0x15ffb0ba
  40a059:	push   es
  40a05a:	shl    BYTE PTR [edi+ecx*4+0x63],0xc8
  40a05f:	cmp    bl,ah
  40a061:	or     edx,DWORD PTR [eax-0x18]
  40a064:	mov    cl,0xba
  40a066:	(bad)  
  40a067:	dec    DWORD PTR [edx+0x624137de]
  40a06d:	pop    ebx
  40a06e:	out    0x38,eax
  40a070:	repz leave 
  40a072:	(bad)  
  40a073:	push   eax
  40a074:	ret    0x74c8
  40a077:	or     BYTE PTR [edx],cl
  40a079:	pop    esi
  40a07a:	std    
  40a07b:	jmp    DWORD PTR ds:0xad35e5
	...
  40a0a5:	add    BYTE PTR [eax],al
  40a0a7:	add    BYTE PTR ds:0x6675feca,ah
  40a0ad:	enter  0x874,0x4a
  40a0b1:	mov    ds:0xc245ffa9,al
  40a0b6:	rol    DWORD PTR [edx+eiz*1],0x60
  40a0ba:	mov    ch,ah
  40a0bc:	mov    bl,0xc1
  40a0be:	fcomi  st,st(7)
  40a0c0:	adc    eax,0x26458cca
  40a0c5:	pop    ebx
  40a0c6:	(bad)  
  40a0c7:	jne    0x40a0db
  40a0c9:	retf   0xc74
  40a0cc:	sbb    bh,BYTE PTR [edx+0x7e]
  40a0cf:	add    dl,dh
  40a0d1:	add    eax,0x886f0fc0
  40a0d6:	add    DWORD PTR [eax],eax
  40a0d8:	loop   0x40a09b
  40a0da:	inc    esp
  40a0db:	clc    
  40a0dc:	repnz or al,BYTE PTR [eax]
  40a0df:	add    BYTE PTR [ebp-0x12000cb1],ch
  40a0e5:	or     al,BYTE PTR [eax]
  40a0e7:	push   0xffffffe2
  40a0e9:	jmp    FWORD PTR fs:[ecx-0x4e]
  40a0ed:	dec    DWORD PTR fs:[ebx+ecx*2-0x39afc81b]
  40a0f5:	lods   eax,DWORD PTR ds:[esi]
  40a0f6:	imul   DWORD PTR ss:[edi+ecx*4-0x77e1012d]
  40a0fe:	inc    eax
  40a0ff:	jne    0x40a0a0
  40a101:	mov    dl,al
  40a103:	jle    0x40a150
  40a105:	and    BYTE PTR [eax+eax*8],cl
  40a108:	pop    ss
  40a109:	and    eax,0x812a
	...
  40a132:	add    BYTE PTR [eax],al
  40a134:	dec    edx
  40a135:	and    BYTE PTR [ebx],al
  40a137:	push   0xffc308b4
  40a13c:	jne    0x40a19b
  40a13e:	adc    ebp,eax
  40a140:	out    0xaf,eax
  40a142:	aas    
  40a143:	(bad)  
  40a144:	sti    
  40a145:	mov    edx,0xf4c68d52
  40a14a:	aaa    
  40a14b:	call   DWORD PTR [eax+edx*4-0x2b]
  40a14f:	out    0xf7,eax
  40a151:	iret   
  40a152:	aas    
  40a153:	call   edx
  40a155:	lods   al,BYTE PTR ds:[esi]
  40a156:	xor    dh,bh
  40a158:	cmp    al,0x1f
  40a15a:	sub    ebp,DWORD PTR [edx+0x6a4006e7]
  40a160:	dec    ebx
  40a161:	cwde   
  40a162:	jmp    0x40612b9f
  40a167:	mov    ch,0x1b
  40a169:	aaa    
  40a16a:	aas    
  40a16b:	call   DWORD PTR [edi*4-0x612117f2]
  40a172:	aas    
  40a173:	call   edx
  40a175:	lods   al,BYTE PTR ds:[esi]
  40a176:	daa    
  40a177:	idiv   esp
  40a179:	pop    esi
  40a17a:	stos   BYTE PTR es:[edi],al
  40a17b:	jmp    FWORD PTR [edi+esi*1-0x4]
  40a17f:	inc    eax
  40a180:	dec    ebx
  40a181:	dec    edi
  40a182:	jns    0x40a174
  40a184:	fdiv   QWORD PTR [esi+0x3f]
  40a187:	call   DWORD PTR [esi+0x2c]
  40a18a:	sub    edx,DWORD PTR [edx-0x76c0995c]
  40a190:	(bad)  
  40a191:	or     BYTE PTR [ecx+0x1335c437],cl
  40a197:	add    al,0x0
	...
  40a1bd:	add    BYTE PTR [eax],al
  40a1bf:	add    BYTE PTR [ebx],dh
  40a1c1:	pop    ds
  40a1c2:	rol    ah,1
  40a1c4:	mov    ah,0x36
  40a1c6:	push   esp
  40a1c7:	xor    al,0xb4
  40a1c9:	xor    eax,0x51e3f86
  40a1ce:	xchg   ecx,eax
  40a1cf:	mov    bh,0xed
  40a1d1:	xor    eax,0x24ce8d76
  40a1d6:	jbe    0x40a217
  40a1d8:	mov    WORD PTR [edx-0xf985418],fs
  40a1de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1df:	add    edi,DWORD PTR [ebx+edi*2+0x59]
  40a1e3:	aaa    
  40a1e4:	je     0x40a21b
  40a1e6:	dec    esi
  40a1e7:	mov    ecx,0x6ea52140
  40a1ec:	fs xor eax,0x3d738970
  40a1f2:	ss aas 
  40a1f4:	loope  0x40a1fe
  40a1f6:	sar    esp,0x13
  40a1f9:	enter  0x3ee8,0xfe
  40a1fd:	cmp    DWORD PTR [esi],edx
  40a1ff:	aas    
  40a200:	cmp    al,0x35
  40a202:	pushf  
  40a203:	mov    db1,ebx
  40a206:	cmp    eax,0x6c832c3f
  40a20b:	pusha  
  40a20c:	sbb    al,0x35
  40a20e:	inc    BYTE PTR [edx+0x3efe2dde]
  40a214:	adc    al,0xa
  40a216:	je     0x40a224
  40a218:	enter  0xc976,0x36
  40a21c:	add    al,0x35
  40a21e:	jmp    0x94c909da
  40a223:	das    
	...
  40a24c:	cld    
  40a24d:	xor    al,0xce
  40a24f:	add    esi,DWORD PTR [edi-0x2b]
  40a252:	imul   eax,DWORD PTR [eax+0x3ebe3cf3],0x19ffbd4b
  40a25c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a25d:	xor    al,0xff
  40a25f:	mov    esi,0xf175344e
  40a264:	jo     0x40a216
  40a266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a267:	sahf   
  40a268:	jge    0x40a29e
  40a26a:	mov    ch,0x85
  40a26c:	jge    0x40a2a2
  40a26e:	dec    DWORD PTR [esi-0x4917f30d]
  40a274:	xor    BYTE PTR [edi+edi*8],dh
  40a277:	jle    0x40a29c
  40a279:	and    edi,esi
  40a27b:	jbe    0x40a2d2
  40a27d:	xor    al,0x75
  40a27f:	loope  0x40a2e1
  40a281:	dec    edx
  40a282:	test   al,0x66
  40a284:	inc    ebp
  40a285:	xor    al,0xb5
  40a287:	inc    ebp
  40a288:	xor    eax,0xb356ff34
  40a28d:	or     al,0xe8
  40a28f:	call   0x28e3:0x46ff33e0
  40a296:	idiv   DWORD PTR [esi]
  40a298:	sbb    eax,0x20e17534
  40a29d:	outs   dx,BYTE PTR ds:[esi]
  40a29e:	test   al,0x2e
  40a2a0:	or     eax,0x7d45b534
  40a2a5:	xor    al,0xff
  40a2a7:	push   ds
  40a2a8:	add    ecx,DWORD PTR [eax+ebp*8]
  40a2ab:	jle    0x40a24d
  40a2ad:	xor    al,0xff
  40a2af:	push   cs
	...
  40a2d8:	mov    bl,0x2d
  40a2da:	test   DWORD PTR [esi],0x52a12165
  40a2e0:	pop    ebp
  40a2e1:	xor    al,0xff
  40a2e3:	cmp    al,0x68
  40a2e5:	cmp    al,0xff
  40a2e7:	out    dx,al
  40a2e8:	popa   
  40a2e9:	fwait
  40a2ea:	stos   DWORD PTR es:[edi],eax
  40a2eb:	out    0x46,al
  40a2ed:	xor    al,0xb5
  40a2ef:	int    0x36
  40a2f1:	xor    al,0xff
  40a2f3:	rol    edx,0x5f
  40a2f6:	dec    esi
  40a2f8:	cs jle 0x40a2e3
  40a2fb:	add    BYTE PTR [ebp+0x72e8fef5],ah
  40a301:	mov    ds:0xbb9dfffe,al
  40a306:	fcomi  st,st(7)
  40a308:	popf   
  40a309:	cmc    
  40a30a:	out    0x75,eax
  40a30c:	sbb    esi,esi
  40a30e:	(bad)  
  40a30f:	call   DWORD PTR [edi]
  40a311:	std    
  40a312:	idiv   bh
  40a314:	(bad)  
  40a316:	je     0x40a324
  40a318:	mov    ebp,0x8fe8077b
  40a31d:	cmc    
  40a31e:	(bad)  
  40a31f:	call   FWORD PTR ds:0x1df7efbc
  40a325:	mul    bh
  40a327:	pop    ecx
  40a328:	or     esi,esi
  40a32a:	(bad)  
  40a32b:	push   DWORD PTR [edi+0x1c51e8ef]
  40a331:	idiv   dh
  40a333:	call   DWORD PTR [edi+0x7fa3e7f3]
  40a339:	pop    es
  40a33a:	add    cl,cl
	...
  40a364:	xor    BYTE PTR [ecx],bl
  40a366:	add    BYTE PTR [ebp-0x27],dl
  40a369:	clc    
  40a36a:	add    ah,0x1e
  40a36d:	pop    edi
  40a36e:	jmp    FWORD PTR [ecx+0x74]
  40a371:	hlt    
  40a372:	je     0x40a37c
  40a374:	pop    edx
  40a375:	pusha  
  40a376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a377:	call   FWORD PTR [ebp+0x7e]
  40a37a:	inc    ebp
  40a37b:	cld    
  40a37c:	retf   0x3849
  40a37f:	inc    ecx
  40a380:	and    bl,BYTE PTR [edi+0x1]
  40a383:	add    BYTE PTR [edx],dh
  40a385:	xchg   edi,edi
  40a387:	jne    0x40a3a3
  40a389:	fcomip st,st(6)
  40a38b:	std    
  40a38c:	sbb    eax,0xdb4367f6
  40a391:	inc    edi
  40a392:	(bad)  
  40a393:	(bad)  
  40a394:	addr16 dec ebx
  40a396:	sub    BYTE PTR [ecx-0xe],al
  40a399:	cmc    
  40a39a:	je     0x40a3a4
  40a39c:	dec    ebx
  40a39d:	dec    eax
  40a39e:	daa    
  40a39f:	std    
  40a3a0:	in     al,dx
  40a3a1:	inc    ebx
  40a3a2:	cmp    al,0x75
  40a3a4:	out    0x4b,eax
  40a3a6:	mov    dh,0x7
  40a3a8:	repz repnz imul edi,edi,0xffffffd4
  40a3ad:	imul   eax,DWORD PTR [ecx+0x4],0xec891d4b
  40a3b4:	retf   0x5f64
  40a3b7:	idiv   DWORD PTR [ebx+edx*4-0xf48ba72]
  40a3be:	cmp    al,0x75
  40a3c0:	pop    ebx
  40a3c1:	xor    DWORD PTR [esi-0x411b4cf5],0xffffffff
	...
  40a3f0:	pushf  
  40a3f1:	aaa    
  40a3f2:	inc    ebx
  40a3f3:	bswap  esi
  40a3f5:	cli    
  40a3f6:	add    DWORD PTR [eax],eax
  40a3f8:	dec    ebx
  40a3f9:	imul   eax,esi,0xfffffff7
  40a3fc:	dec    ebx
  40a3fd:	and    BYTE PTR [ebx],al
  40a3ff:	add    BYTE PTR [ebp+ebp*2+0x204cff37],al
  40a406:	add    ebp,DWORD PTR [edx+0x4b]
  40a409:	inc    esi
  40a40a:	add    ebp,DWORD PTR [edx+0x4b]
  40a40d:	push   esi
  40a40e:	add    ecx,DWORD PTR [ebp-0x732d03fa]
  40a414:	into   
  40a415:	hlt    
  40a416:	xor    edi,edi
  40a418:	dec    esp
  40a419:	nop
  40a41a:	cmp    al,0x75
  40a41c:	inc    ebx
  40a41d:	jmp    0x40a3d4
  40a41f:	sti    
  40a420:	xor    edi,DWORD PTR [edx]
  40a422:	mov    esi,0x432734ff
  40a427:	je     0x40a46f
  40a429:	or     DWORD PTR [edx-0x54dfb4ff],eax
  40a42f:	mov    dh,0x73
  40a431:	popa   
  40a432:	add    edi,edi
  40a434:	sahf   
  40a435:	push   eax
  40a436:	sub    edi,DWORD PTR [ecx]
  40a438:	frstor [edx]
  40a43a:	cmp    edx,DWORD PTR [eax-0x30]
  40a43d:	or     BYTE PTR [ecx-0x29c33977],bh
  40a443:	cmp    esi,esp
  40a445:	fdivr  DWORD PTR [edx]
  40a447:	sub    al,0x22
  40a449:	arpl   si,cx
  40a44b:	cmp    edx,edx
  40a44d:	mov    edi,DWORD PTR [ecx-0x2ece23cd]
  40a453:	mov    ebx,0x0
	...
  40a47c:	mov    ds:0xccaeb631,al
  40a481:	test   eax,0x90bfd66
  40a486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a487:	jno    0x40a444
  40a489:	cmp    DWORD PTR [esi-0x1b444bc5],ebx
  40a48f:	sub    ecx,ecx
  40a491:	arpl   WORD PTR [esi-0x72742dc5],cx
  40a497:	xor    ebx,DWORD PTR [ecx+esi*1-0x68dcfbed]
  40a49e:	mov    al,0xc4
  40a4a0:	mov    WORD PTR [edx],?
  40a4a2:	xor    al,0x34
  40a4a4:	jl     0x40a4d7
  40a4a6:	cmp    si,si
  40a4a9:	add    al,0x51
  40a4ab:	mov    ds:0x8d5631a7,eax
  40a4b0:	(bad)  
  40a4b1:	sub    BYTE PTR [esi+0x3b],dl
  40a4b4:	fs sahf 
  40a4b6:	call   0xa8309166
  40a4bb:	add    edx,DWORD PTR [ebx+edi*2+0x39]
  40a4bf:	xor    ecx,DWORD PTR [ecx+esi*1+0x2e]
  40a4c3:	mov    cl,0x50
  40a4c5:	and    DWORD PTR [ebp+0x70313c68],esi
  40a4cb:	and    DWORD PTR [edi],0xa13b1639
  40a4d1:	or     DWORD PTR [ecx-0x17359c43],eax
  40a4d7:	cmp    dl,dh
  40a4d9:	cmp    esi,esi
  40a4db:	cmp    dl,BYTE PTR [ecx+esi*1]
  40a4de:	add    BYTE PTR [eax+eax*1+0x0],bh
	...
  40a506:	add    BYTE PTR [eax],al
  40a508:	inc    esp
  40a509:	and    DWORD PTR [ecx],esi
  40a50b:	cmp    al,0x40
  40a50d:	xor    BYTE PTR [ecx-0xc7cf94],cl
  40a513:	fisub  WORD PTR [esi-0x108998d0]
  40a519:	leave  
  40a51a:	dec    ebp
  40a51c:	pop    ebx
  40a51d:	cmp    edi,esi
  40a51f:	(bad)  
  40a520:	and    DWORD PTR [eax],esi
  40a522:	jne    0x40a511
  40a524:	and    BYTE PTR [edi],dl
  40a526:	lods   eax,DWORD PTR ds:[esi]
  40a527:	mov    dh,0x11
  40a529:	add    BYTE PTR [ebp-0xcf8673],0x6a
  40a530:	inc    ebx
  40a531:	and    eax,0x9719ef7
  40a536:	jne    0x40a518
  40a538:	lds    ebp,FWORD PTR [esi-0x20]
  40a53b:	xchg   esi,eax
  40a53c:	popa   
  40a53d:	xor    BYTE PTR [eax],al
  40a53f:	std    
  40a540:	jmp    0x40a4cd
  40a542:	mov    ebp,0xff30598d
  40a547:	jmp    0x2cc37a28
  40a54c:	xor    BYTE PTR [eax],bh
  40a54e:	jmp    DWORD PTR [esi+0x48]
  40a551:	mov    ch,0x52
  40a553:	ror    DWORD PTR [eax+0x9],1
  40a556:	out    dx,eax
  40a557:	xchg   edi,eax
  40a558:	xor    DWORD PTR [esi+0x66784107],esi
  40a55e:	inc    DWORD PTR [esi+0x21]
  40a561:	jbe    0x40a54f
  40a563:	adc    DWORD PTR ss:[eax],esi
  40a566:	(bad)  
  40a567:	mov    esp,0x87a42140
	...
  40a594:	xor    DWORD PTR [eax],0x38705cff
  40a59a:	call   FWORD PTR [esi]
  40a59c:	jno    0x40a554
  40a59e:	pop    es
  40a59f:	add    edx,ebx
  40a5a1:	dec    WORD PTR [esi]
  40a5a4:	popa   
  40a5a5:	jbe    0x40a58b
  40a5a7:	add    BYTE PTR ds:0x9ffffef2,bl
  40a5ad:	add    al,0xe8
  40a5af:	mov    BYTE PTR [ebx+esi*8-0x2],bh
  40a5b3:	(bad)  
  40a5b4:	aas    
  40a5b5:	in     al,dx
  40a5b6:	idiv   bh
  40a5b8:	in     eax,0xf1
  40a5ba:	je     0x40a5c4
  40a5bc:	sbb    ch,BYTE PTR [edi-0x5b]
  40a5bf:	call   DWORD PTR ds:0xfddcb4f2
  40a5c5:	icebp  
  40a5c6:	(bad)  
  40a5c7:	call   FWORD PTR [edi]
  40a5c9:	std    
  40a5ca:	out    0x6c,eax
  40a5cc:	int3   
  40a5cd:	icebp  
  40a5ce:	(bad)  
  40a5cf:	dec    DWORD PTR [edi-0x17]
  40a5d2:	idiv   bh
  40a5d4:	cmc    
  40a5d5:	fdiv   QWORD PTR [ebp-0x57]
  40a5d8:	in     eax,0xf1
  40a5da:	(bad)  
  40a5db:	mov    ch,0xc2
  40a5dd:	stc    
  40a5de:	(bad)  
  40a5df:	dec    edx
  40a5e1:	pop    ebp
  40a5e2:	test   al,0xff
  40a5e4:	aad    0xf1
  40a5e6:	mov    ah,0xec
  40a5e8:	sbb    eax,0x42e8fef2
  40a5ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5ee:	(bad)  
  40a5ef:	call   DWORD PTR ds:0xf5f7e7a0
  40a5f5:	icebp  
  40a5f6:	out    0x55,eax
	...
  40a620:	fcomi  st,st(1)
  40a622:	(bad)  
  40a623:	(bad)  
  40a624:	(bad)  
  40a626:	idiv   bh
  40a628:	adc    eax,0x15a949dd
  40a62d:	repnz (bad) 
  40a62f:	mov    ch,0x22
  40a631:	cli    
  40a632:	(bad)  
  40a633:	call   DWORD PTR ds:0x8fff0b60
  40a639:	add    ebp,eax
  40a63b:	cmp    eax,0xfffef074
  40a640:	lahf   
  40a641:	cmc    
  40a642:	idiv   bh
  40a644:	push   ebp
  40a645:	(bad)  ds:0x39174ba9
  40a64b:	dec    DWORD PTR [esi+0x1d512b18]
  40a651:	or     BYTE PTR [ecx],bh
  40a653:	call   FWORD PTR [esi-0x6f87d4d4]
  40a659:	and    BYTE PTR [ebx],al
  40a65b:	leave  
  40a65c:	or     DWORD PTR [ebp+0x3],ecx
  40a65f:	push   ebp
  40a660:	rcl    BYTE PTR [esp+eax*4-0x3c],1
  40a664:	neg    edx
  40a666:	add    ebp,DWORD PTR [edx+0x54]
  40a669:	push   edi
  40a66a:	scas   al,BYTE PTR es:[edi]
  40a66b:	pop    es
  40a66c:	repz loopne 0x40a6d0
  40a66f:	(bad)  
  40a670:	fdivr  QWORD PTR [ecx+0x7c63fbbd]
  40a676:	cli    
  40a677:	inc    eax
  40a678:	dec    ebx
  40a679:	ja     0x40a669
  40a67b:	inc    ebp
  40a67c:	jb     0x40a65f
  40a67e:	add    edi,edi
  40a680:	cmp    BYTE PTR ss:[ebx],ch
  40a683:	test   BYTE PTR [eax],0x0
	...
  40a6aa:	add    BYTE PTR [eax],al
  40a6ac:	mov    dh,0x8f
  40a6ae:	cmp    BYTE PTR [eax-0x21],ch
  40a6b1:	pop    ecx
  40a6b2:	ret    0x2cff
  40a6b5:	and    al,BYTE PTR [ebx]
  40a6b7:	add    bl,cl
  40a6b9:	xchg   DWORD PTR [esi+0x3684a307],ebp
  40a6bf:	dec    DWORD PTR [edi+esi*4+0x3584fbad]
  40a6c6:	or     ebp,eax
  40a6c8:	sbb    BYTE PTR [esi+0x38],bh
  40a6cb:	inc    DWORD PTR [edx+0x17fffee2]
  40a6d1:	stos   DWORD PTR es:[edi],eax
  40a6d2:	or     DWORD PTR es:[edi+0x5cff2fec],0xfbfbbdb5
  40a6dd:	out    dx,al
  40a6de:	lods   eax,DWORD PTR ds:[esi]
  40a6df:	cmovl  ebp,DWORD PTR [ebp+0x7]
  40a6e3:	call   0x44224a
  40a6e8:	push   eax
  40a6e9:	or     DWORD PTR [ecx],ebp
  40a6eb:	or     dh,cl
  40a6ed:	jge    0x40a6d8
  40a6ef:	add    ecx,DWORD PTR [ebx+0x46]
  40a6f2:	lods   al,BYTE PTR ds:[esi]
  40a6f3:	cmp    ecx,DWORD PTR [ebx+0x9]
  40a6f6:	jmp    0xfd04aafe
  40a6fb:	aaa    
  40a6fc:	dec    esp
  40a6fd:	or     ecx,ebp
  40a6ff:	lods   eax,DWORD PTR ds:[esi]
  40a700:	or     al,0xa0
  40a702:	call   0xe8e0abb4
  40a707:	xchg   BYTE PTR [esi-0x3176c6cb],al
  40a70d:	xor    al,0xd6
  40a70f:	aaa    
	...
  40a738:	in     al,dx
  40a739:	fcom   st(5)
  40a73b:	mov    cl,0xdc
  40a73d:	sub    eax,0x2bf33854
  40a742:	inc    ebx
  40a743:	add    al,0x4b
  40a745:	add    ch,BYTE PTR [ecx+0x1c224ab0]
  40a74b:	mov    esi,ecx
  40a74d:	sbb    al,0xb6
  40a74f:	aaa    
  40a750:	mov    esp,0xbf8173d8
  40a755:	xor    eax,0x2e1b379e
  40a75a:	sbb    al,0x14
  40a75c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a75d:	mov    bl,0xdc
  40a75f:	sub    ebx,DWORD PTR ds:0xc2378662
  40a765:	cmp    DWORD PTR [ecx+0x2f],0xffffff8c
  40a769:	sub    eax,0xeaff43e2
  40a76e:	imul   edi,DWORD PTR [ecx+0x6f],0x4b376635
  40a775:	mov    ch,0xff
  40a777:	stos   DWORD PTR es:[edi],eax
  40a778:	ins    BYTE PTR es:[edi],dx
  40a779:	sub    eax,0x73647646
  40a77e:	cmp    eax,0x462d5c2f
  40a783:	jno    0x40a7e0
  40a785:	xor    eax,0xb34c373e
  40a78a:	jmp    eax
  40a78c:	jo     0x40a7ca
  40a78e:	leave  
  40a78f:	cs je  0x40a7be
  40a792:	mov    ch,0x19
  40a794:	fs sub al,0xff
  40a797:	adc    DWORD PTR [eiz*2+0x16ff],esp
	...
  40a7c2:	add    BYTE PTR [eax],al
  40a7c4:	pop    esp
  40a7c5:	(bad)  
  40a7c6:	test   DWORD PTR [edx],0x5752cc7
  40a7cc:	lods   eax,DWORD PTR ds:[si]
  40a7ce:	jns    0x40a7b9
  40a7d0:	dec    eax
  40a7d1:	inc    edx
  40a7d2:	ret    0x48e5
  40a7d5:	(bad)  
  40a7d6:	mov    bh,ch
  40a7d8:	leave  
  40a7d9:	inc    ebp
  40a7da:	cld    
  40a7db:	push   ebx
  40a7dc:	dec    edi
  40a7dd:	lahf   
  40a7de:	pop    ss
  40a7df:	fidivr WORD PTR [ebx+0x6a2de804]
  40a7e5:	sub    al,0xff
  40a7e7:	pusha  
  40a7e8:	or     esi,DWORD PTR [ecx]
  40a7ea:	push   0xffc9d798
  40a7ef:	mov    ebp,0x2828c6db
  40a7f4:	dec    edi
  40a7f5:	sub    al,0x75
  40a7f7:	loope  0x40a869
  40a7f9:	out    0xfe,al
  40a7fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7fc:	jge    0x40a79f
  40a7fe:	shl    al,1
  40a800:	xchg   DWORD PTR [edi+eiz*2],ebp
  40a803:	jmp    0x40a84d
  40a805:	or     DWORD PTR [eax-0x17fb2472],eax
  40a80b:	ficomp DWORD PTR [ebp+0x2c]
  40a80e:	call   DWORD PTR [ecx]
  40a810:	popa   
  40a811:	repnz inc eax
  40a813:	jmp    0xc0869e55
  40a818:	xchg   DWORD PTR [esi+edi*8],ebp
  40a81b:	fadd   QWORD PTR [eax+0x21]
  40a81e:	add    BYTE PTR [esi+0x35],bl
  40a821:	sub    al,0x68
  40a823:	inc    ebx
  40a824:	addr16 leave 
  40a826:	inc    eax
	...
  40a850:	dec    edx
  40a851:	or     DWORD PTR [eax],eax
  40a853:	add    dl,ah
  40a855:	bnd je 0x40a860
  40a858:	cli    
  40a859:	in     eax,0xfd
  40a85b:	(bad)  
  40a85c:	jge    0x40a851
  40a85e:	je     0x40a85c
  40a860:	ins    DWORD PTR es:[edi],dx
  40a861:	jns    0x40a86a
  40a863:	call   0x3f5178
  40a868:	jnp    0x40a834
  40a86a:	add    eax,DWORD PTR [eax]
  40a86c:	out    0x7e,eax
  40a86e:	in     al,dx
  40a86f:	push   DWORD PTR [edi+0x79f4e803]
  40a875:	repz dec BYTE PTR [ebx]
  40a878:	bound  ebx,QWORD PTR [eax+edi*1+0x68]
  40a87c:	and    eax,0xe2004032
  40a881:	fisttp WORD PTR [eax+0x4ff5edab]
  40a887:	push   eax
  40a888:	call   0xc5c:0xbcef0005
  40a88f:	cmp    dh,BYTE PTR [ebx]
  40a891:	add    eax,0xfd17ff50
  40a896:	out    0x50,eax
  40a898:	sahf   
  40a899:	cmc    
  40a89a:	(bad)  
  40a89b:	pop    eax
  40a89c:	or     cl,BYTE PTR [eax]
  40a89e:	add    bh,ch
  40a8a0:	sub    al,0x5d
  40a8a2:	adc    DWORD PTR [edx],edi
  40a8a4:	arpl   WORD PTR ds:0xfd57ff50,ax
  40a8aa:	out    0x3c,eax
  40a8ac:	out    dx,al
  40a8ad:	cmc    
  40a8ae:	(bad)  
  40a8af:	call   0x3f76fe
	...
  40a8dc:	fcmovnb st,st(6)
  40a8de:	pop    es
  40a8df:	add    BYTE PTR [edi],dh
  40a8e1:	sub    ah,0x83
  40a8e4:	mov    dh,0xf0
  40a8e6:	imul   eax,DWORD PTR [eax],0x75ff1048
  40a8ec:	jp     0x40a8cd
  40a8ee:	mov    DWORD PTR [ebp+ecx*1+0x4b4588f6],esp
  40a8f5:	(bad)  
  40a8f6:	test   eax,0xb545c19
  40a8fb:	call   0xff756bbe
  40a900:	loope  0x40a900
  40a902:	xor    al,0x75
  40a904:	push   ebx
  40a905:	enter  0xff88,0x3c
  40a909:	fsubr  QWORD PTR [ecx+0xb8e341b]
  40a90f:	call   0xff75b4de
  40a914:	and    al,0x8e
  40a916:	aaa    
  40a917:	call   DWORD PTR [esi-0x105bd4d8]
  40a91d:	add    esi,DWORD PTR ds:0x32509c9
  40a923:	push   ebp
  40a924:	rol    BYTE PTR [ecx+eax*4],1
  40a927:	(bad)  
  40a928:	call   FWORD PTR [ebx]
  40a92a:	scas   al,BYTE PTR es:[edi]
  40a92b:	or     esp,ebx
  40a92d:	mov    edi,0x37ecff68
  40a932:	inc    ebx
  40a933:	bswap  edi
  40a935:	jg     0x40a93a
  40a937:	add    BYTE PTR [ebx-0x57],cl
  40a93a:	mov    ebp,0x13c5c8fb
	...
  40a967:	add    BYTE PTR [edi+0x1a],dl
  40a96a:	xor    al,0x75
  40a96c:	pop    ebx
  40a96d:	jae    0x40a91d
  40a96f:	sti    
  40a970:	mov    bl,0x47
  40a972:	imul   edi,edi,0xfbbdb9b4
  40a978:	and    ecx,DWORD PTR [esi-0x7]
  40a97b:	inc    eax
  40a97c:	dec    ebx
  40a97d:	xchg   ebx,eax
  40a97e:	scas   al,BYTE PTR es:[edi]
  40a97f:	sti    
  40a980:	mov    bl,0xa3
  40a982:	push   0xac1094ff
  40a987:	dec    DWORD PTR [ebx+edi*2+0x2d845075]
  40a98e:	or     ebp,eax
  40a990:	mov    BYTE PTR [eax+0x34],ch
  40a993:	jmp    DWORD PTR [ebx+0x9]
  40a996:	cmp    eax,0xd12a6c5d
  40a99b:	mov    ds:0x34e8c822,eax
  40a9a0:	(bad)  
  40a9a1:	sub    al,0x41
  40a9a3:	popf   
  40a9a4:	mov    ds:0xe4d3462a,al
  40a9a9:	pop    es
  40a9aa:	jmp    0x3619aed3
  40a9af:	scas   al,BYTE PTR es:[edi]
  40a9b0:	inc    esp
  40a9b1:	and    DWORD PTR [ebx+0x112a344b],ecx
  40a9b7:	jo     0x40a99e
  40a9b9:	sub    DWORD PTR [esi],ebx
  40a9bb:	stos   DWORD PTR es:[edi],eax
  40a9bc:	mov    gs,edi
  40a9be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9bf:	add    ebx,DWORD PTR [esp+esi*4]
  40a9c2:	or     al,0x2b
  40a9c4:	mov    ds,WORD PTR [edi+0x6]
  40a9c7:	xor    al,0x7b
  40a9c9:	mov    eax,ds:0x3e8
	...
  40a9f2:	add    BYTE PTR [eax],al
  40a9f4:	hlt    
  40a9f5:	push   0xffffff99
  40a9f7:	xor    al,0x76
  40a9f9:	add    DWORD PTR [ecx],eax
  40a9fb:	add    BYTE PTR [ebx],0x2a
  40a9fe:	out    0x1c,al
  40aa00:	fldenv [edx-0x22]
  40aa03:	xor    esi,DWORD PTR [ebx-0x4e]
  40aa06:	adc    al,ch
  40aa08:	fsubr  QWORD PTR [edx]
  40aa0a:	push   esp
  40aa0b:	xor    bl,ah
  40aa0d:	in     al,0x92
  40aa0f:	xor    ecx,esp
  40aa11:	fcom   DWORD PTR [eax+0x5]
  40aa14:	dec    ebx
  40aa15:	sbb    dh,BYTE PTR [edi-0x2c]
  40aa18:	mov    ebp,0x2b1be0b3
  40aa1d:	inc    ecx
  40aa1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa1f:	xor    esp,DWORD PTR [ebx-0x5bccb949]
  40aa25:	sub    DWORD PTR [eax+esi*1],ebx
  40aa28:	mov    bl,0x9f
  40aa2a:	inc    esi
  40aa2b:	xor    edx,DWORD PTR [edi+edi*1-0x2bb4ff55]
  40aa32:	jno    0x40aa54
  40aa34:	enter  0x44,0x75
  40aa38:	(bad)  [ecx]
  40aa3a:	imul   edx,ebx,0x5107b439
  40aa40:	in     al,dx
  40aa41:	call   FWORD PTR gs:[esi-0x1a]
  40aa45:	ret    
  40aa46:	sti    
  40aa47:	ret    
  40aa48:	dec    eax
  40aa49:	lahf   
  40aa4a:	sbb    DWORD PTR [esi-0x6e],ecx
  40aa4d:	add    eax,ebp
  40aa4f:	or     ebx,DWORD PTR [eax]
  40aa51:	sub    bh,bh
  40aa53:	ror    DWORD PTR [eax-0x4d],cl
  40aa56:	and    dh,BYTE PTR [esi]
	...
  40aa80:	add    dl,BYTE PTR [ecx]
  40aa82:	call   0xff69245e
  40aa87:	xchg   ebx,eax
  40aa88:	dec    eax
  40aa89:	mov    bl,0x1b
  40aa8b:	push   ds
  40aa8c:	loop   0x40aa9e
  40aa8e:	call   0xff690476
  40aa93:	cmp    DWORD PTR [ebx+eiz*8+0x2aee940],0x310074ff
  40aa9e:	sti    
  40aa9f:	idiv   DWORD PTR [ecx]
  40aaa1:	sub    BYTE PTR [eax+0x55],ch
  40aaa4:	in     eax,0xc9
  40aaa6:	call   DWORD PTR [edx-0x1c]
  40aaa9:	daa    
  40aaaa:	jne    0x40aa9d
  40aaac:	inc    eax
  40aaad:	xor    eax,0xb119d6fe
  40aab2:	xchg   ebx,eax
  40aab3:	adc    ecx,DWORD PTR [esi]
  40aab5:	sub    DWORD PTR [ecx-0x1b],ebp
  40aab8:	sbb    DWORD PTR [esi+0x271bd107],ebx
  40aabe:	push   DWORD PTR [esi-0x51046187]
  40aac4:	repz adc al,ch
  40aac7:	sbb    esp,DWORD PTR [eax+ebp*1]
  40aaca:	push   DWORD PTR [eax+0x3c000d0e]
  40aad0:	sbb    al,0x35
  40aad2:	and    DWORD PTR [ebp+0xff2030],0xfc4589c5
  40aadc:	(bad)  
  40aadd:	fdiv   QWORD PTR [eax+edx*1-0xb]
  40aae1:	pusha  
  40aae2:	or     ebp,eax
	...
  40ab0c:	mov    edx,0x79ffff74
  40ab11:	int3   
  40ab12:	push   cs
  40ab13:	test   DWORD PTR [ebp+0x2d00000d],ebp
  40ab19:	push   ecx
  40ab1a:	test   DWORD PTR [eax],0xc7000c62
  40ab20:	lahf   
  40ab21:	loopne 0x40ab21
  40ab23:	pop    es
  40ab24:	xor    cl,BYTE PTR [edx+ebp*2]
  40ab27:	add    BYTE PTR [eax],cl
  40ab29:	or     al,0x6a
  40ab2b:	add    BYTE PTR [eax],cl
  40ab2d:	or     al,0x8d
  40ab2f:	inc    ebp
  40ab30:	dec    esi
  40ab31:	cmp    al,0x8c
  40ab33:	test   DWORD PTR [esi],edi
  40ab35:	jecxz  0x40ab35
  40ab37:	jmp    edx
  40ab39:	fidiv  DWORD PTR [eax+edi*8+0x45]
  40ab3d:	popa   
  40ab3e:	sti    
  40ab3f:	call   0x401f5c
  40ab44:	stc    
  40ab45:	retf   
  40ab46:	jae    0x40ab4d
  40ab48:	dec    ebx
  40ab49:	add    BYTE PTR es:[eax],al
  40ab4c:	loop   0x40aad1
  40ab4e:	mov    dh,0x28
  40ab50:	and    ecx,DWORD PTR ds:0x3e275ff
  40ab56:	sub    eax,0x4fd9f5a9
  40ab5b:	mov    edx,DWORD PTR [edx-0x720b7b59]
  40ab61:	fsin   
  40ab63:	push   eax
  40ab64:	pusha  
  40ab65:	add    eax,0xd9f5a91d
  40ab6a:	mov    BYTE PTR [ebp-0x11e0e],al
	...
  40ab98:	ficomp DWORD PTR [ebp-0x5c]
  40ab9b:	inc    ebp
  40ab9d:	xchg   bh,bh
  40ab9f:	addr16 dec ebx
  40aba1:	sub    esi,0x40
  40aba4:	dec    ebx
  40aba5:	xchg   edi,eax
  40aba6:	ja     0x40ab98
  40aba8:	xchg   esp,eax
  40aba9:	mov    ?,WORD PTR [ecx]
  40abab:	(bad)  
  40abac:	(bad)  
  40abad:	xor    eax,0x9eb3761b
  40abb2:	xor    BYTE PTR [ecx-0xc75a32],cl
  40abb8:	ins    BYTE PTR es:[edi],dx
  40abb9:	cmp    eax,DWORD PTR [ebx]
  40abbb:	push   0xffc2eb64
  40abc0:	pop    ebp
  40abc1:	test   BYTE PTR [edi+esi*8],dh
  40abc4:	push   esp
  40abc5:	(bad)  
  40abc6:	xor    BYTE PTR [ebp+0x3f],dh
  40abc9:	mov    edx,0xe844a7cc
  40abce:	jp     0x40ab55
  40abd0:	xor    ebp,eax
  40abd2:	xor    bh,bh
  40abd4:	enter  0x1fb5,0xf7
  40abd8:	sub    al,0xf0
  40abda:	add    esi,DWORD PTR [ebx+ebx*2+0x78]
  40abde:	add    eax,DWORD PTR [eax]
  40abe0:	sub    al,0xbf
  40abe2:	fwait
  40abe3:	mov    edx,0xff037151
  40abe8:	(bad)  
  40abe9:	cld    
  40abea:	cmp    bh,bh
  40abec:	add    al,0x28
  40abee:	mov    dh,0x7
  40abf0:	repz or edi,DWORD PTR [ebx]
  40abf3:	push   esp
  40abf5:	mov    BYTE PTR [edx],al
  40abf7:	add    ah,bl
  40abf9:	outs   dx,BYTE PTR ds:[esi]
  40abfa:	fwait
  40abfb:	les    eax,FWORD PTR [eax]
	...
  40ac21:	add    BYTE PTR [eax],al
  40ac23:	add    BYTE PTR [ecx],ah
  40ac25:	icebp  
  40ac26:	add    edi,edi
  40ac28:	xchg   esi,eax
  40ac29:	dec    esp
  40ac2a:	cmp    bh,bh
  40ac2c:	aam    0x57
  40ac2e:	mov    dh,0x7
  40ac30:	jecxz  0x40abb5
  40ac32:	cmp    bh,bh
  40ac34:	les    esi,FWORD PTR [ebx+0x5fb4e86d]
  40ac3a:	xor    BYTE PTR [eax],al
  40ac3c:	aas    
  40ac3d:	and    BYTE PTR [ebx-0x69f65301],bl
  40ac43:	jno    0x40ac78
  40ac45:	(bad)  
  40ac47:	ret    0x279c
  40ac4a:	pop    esp
  40ac4b:	sbb    ebx,DWORD PTR [esi+eiz*1+0x1116308e]
  40ac52:	xchg   ecx,eax
  40ac53:	jne    0x40abe7
  40ac55:	es jle 0x40abf3
  40ac58:	dec    ebx
  40ac59:	or     DWORD PTR [esi-0x4cb41c8f],eax
  40ac5f:	ret    0x276c
  40ac62:	pushf  
  40ac63:	sbb    ebx,DWORD PTR [esi+eiz*1+0x5e]
  40ac67:	xor    dh,dl
  40ac69:	adc    BYTE PTR [ecx-0x73],al
  40ac6c:	and    BYTE PTR [esi],0x4e
  40ac6f:	xor    BYTE PTR [esi+0x44303e35],dl
  40ac75:	xor    DWORD PTR [ecx],ebp
  40ac77:	addr16 cmp al,0x26
  40ac7a:	ss jbe 0x40aca0
  40ac7d:	push   ds
  40ac7e:	xor    BYTE PTR cs:[ebx],ah
  40ac81:	pop    esp
  40ac82:	dec    ebp
  40ac83:	xor    BYTE PTR [esi+eiz*1],ah
  40ac86:	push   esp
  40ac87:	xor    eax,DWORD PTR [eax]
	...
  40acad:	add    BYTE PTR [eax],al
  40acaf:	add    BYTE PTR [esi+eiz*1],dl
  40acb2:	push   ss
  40acb3:	xor    BYTE PTR [esi+0x44b60e15],bl
  40acb9:	xor    DWORD PTR ds:0xfe260431,edi
  40acbf:	jne    0x40acbc
  40acc1:	sbb    eax,0x7fe32ff6
  40acc6:	inc    ebp
  40acc7:	xor    ah,ch
  40acc9:	and    eax,0x50f22c2c
  40acce:	fild   QWORD PTR [edi]
  40acd0:	fsub   QWORD PTR ds:0x29e3305c
  40acd6:	push   edi
  40acd7:	add    al,0x4b
  40acd9:	push   eax
  40acda:	stos   DWORD PTR es:[edi],eax
  40acdb:	add    BYTE PTR [ebx-0x44],cl
  40acde:	jno    0x40ad00
  40ace0:	mov    esp,0x50e4ff9b
  40ace5:	push   eax
  40ace6:	test   al,0xae
  40ace8:	pop    esp
  40ace9:	adc    al,al
  40aceb:	sbb    eax,0xe3ceadb6
  40acf0:	xchg   DWORD PTR ds:0x6d85814f,esp
  40acf6:	dec    DWORD PTR [esi-0x16982a89]
  40acfc:	dec    eax
  40acfd:	ss mov esi,0x40e2f011
  40ad03:	jmp    0xe1b5d3a0
  40ad08:	push   eax
  40ad09:	in     al,dx
  40ad0a:	enter  0x3466,0xc1
  40ad0e:	addr16 call 0xc1fee35c
	...
  40ad3c:	add    esp,ebx
  40ad3e:	inc    eax
  40ad3f:	jmp    0xf1b5d3bc
  40ad44:	pusha  
  40ad45:	cli    
  40ad46:	enter  0x6c3e,0x31
  40ad4a:	cmp    eax,0xc924648d
  40ad4f:	sub    ebp,DWORD PTR [edi]
  40ad51:	and    eax,0x886b7254
  40ad56:	les    ebx,FWORD PTR ds:0xe969bbf5
  40ad5c:	mov    dl,0xff
  40ad5e:	(bad)  
  40ad5f:	xchg   esp,eax
  40ad60:	adc    BYTE PTR ds:0x2434485d,ch
  40ad66:	mov    DWORD PTR [esp+ebp*1+0x10963590],esp
  40ad6d:	retf   0x61ff
  40ad70:	cli    
  40ad71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad72:	daa    
  40ad73:	sub    BYTE PTR [edi-0x77],cl
  40ad76:	aas    
  40ad77:	jmp    0xe9fc3659
  40ad7c:	dec    eax
  40ad7d:	or     DWORD PTR [eax-0x67],ebp
  40ad80:	loop   0x40ad4b
  40ad82:	(bad)  
  40ad83:	jmp    DWORD PTR [ebp+eax*1-0x50]
  40ad87:	jbe    0x40ad3b
  40ad89:	or     BYTE PTR [ebx],cl
  40ad8b:	shl    BYTE PTR [esi+0x63],0x3f
  40ad8f:	cmp    BYTE PTR [edx+0x35840f08],0x8
  40ad96:	add    BYTE PTR [eax],al
  40ad98:	bound  eax,QWORD PTR [ebp+0xd633aaf]
  40ad9e:	call   0x40ae90
	...
  40adc7:	add    BYTE PTR [esi],dh
  40adc9:	or     eax,0xca715a00
  40adce:	dec    edi
  40adcf:	call   0x3f56ef
  40add4:	push   edx
  40add5:	cmp    eax,0x3620067
  40adda:	mov    esi,0x4032a968
  40addf:	add    BYTE PTR [edx+0xa0874f3],ah
  40ade5:	xchg   edx,eax
  40ade6:	enter  0xfdff,0x4f
  40adea:	add    DWORD PTR [bp+si],esi
  40aded:	add    edi,DWORD PTR [esi+0x40326768]
  40adf3:	add    dl,dl
  40adf5:	bnd je 0x40ae00
  40adf8:	mov    cl,BYTE PTR [esi+0x6dffc8]
  40adfe:	mov    dl,0xa3
  40ae00:	cmp    eax,0xca43eaf3
  40ae05:	mov    edi,0x3b224139
  40ae0a:	out    0x41,eax
  40ae0c:	test   BYTE PTR [eax],cl
  40ae0e:	add    BYTE PTR [ebx],cl
  40ae10:	xor    bl,BYTE PTR [ebx+esi*1+0x56]
  40ae14:	dec    edx
  40ae15:	ins    BYTE PTR es:[edi],dx
  40ae16:	lods   al,BYTE PTR ds:[esi]
  40ae17:	(bad)  
  40ae18:	fnsave [esi]
  40ae1a:	dec    edi
  40ae1b:	push   0xbeef07f2
  40ae20:	jp     0x40add4
  40ae22:	cmp    DWORD PTR [ecx+0x4b],eax
  40ae25:	xor    dl,bl
  40ae27:	(bad)  
  40ae28:	push   esi
  40ae29:	sub    bl,BYTE PTR [ebx]
  40ae2b:	push   ebp
	...
  40ae54:	xchg   ebx,eax
  40ae55:	dec    edx
  40ae56:	sub    eax,0x3313358
  40ae5b:	out    dx,eax
  40ae5c:	cmc    
  40ae5d:	leave  
  40ae5e:	inc    esi
  40ae5f:	cmp    cl,BYTE PTR [edx]
  40ae61:	xor    dl,bl
  40ae63:	(bad)  
  40ae64:	push   ds
  40ae65:	sbb    bl,BYTE PTR [ebx]
  40ae67:	inc    ecx
  40ae68:	xchg   ebx,eax
  40ae69:	sub    BYTE PTR ds:0x2ccf26e8,0xff
  40ae70:	mov    al,ds:0x457fc530
  40ae75:	xor    dh,BYTE PTR [esi-0xf59fa07]
  40ae7b:	mov    edi,0xff2c9ab2
  40ae80:	ins    BYTE PTR es:[edi],dx
  40ae81:	lahf   
  40ae82:	pop    ebp
  40ae83:	cmp    BYTE PTR [ebx+ebx*1-0x7a],cl
  40ae87:	inc    ebp
  40ae88:	pop    esp
  40ae89:	ret    0x6a2c
  40ae8c:	xor    DWORD PTR [ebx-0x119cf84a],edi
  40ae92:	sub    eax,0xe03744ff
  40ae97:	(bad)  
  40ae98:	mov    dh,0x18
  40ae9a:	sbb    edi,DWORD PTR [ecx+0x6a2cdc35]
  40aea0:	dec    edi
  40aea1:	repz mov dh,0x7
  40aea4:	xor    edi,DWORD PTR [ebp+ebp*1+0x22791cff]
  40aeab:	cmp    cl,BYTE PTR [edx-0x7acad3d0]
  40aeb1:	dec    ecx
  40aeb2:	ret    0x5ff
  40aeb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aeb6:	cli    
  40aeb7:	out    0x0,eax
	...
  40aedd:	add    BYTE PTR [eax],al
  40aedf:	add    BYTE PTR [edx],bh
  40aee1:	and    eax,0x1163ff2c
  40aee6:	jmp    0x4b00:0x1884b40
  40aeed:	or     DWORD PTR [ecx+0x2c],ebp
  40aef0:	push   esi
  40aef1:	adc    ecx,edx
  40aef3:	or     al,0xd6
  40aef5:	and    dl,dh
  40aef7:	sub    al,0x56
  40aef9:	and    eax,0x314cb6ce
  40aefe:	imul   esp,DWORD PTR [ebx-0x44],0x22
  40af02:	push   ds
  40af03:	into   
  40af04:	add    DWORD PTR [edi-0x13],0x3
  40af08:	push   ss
  40af09:	mov    ?,WORD PTR [ebp-0x61c6707e]
  40af0f:	sub    al,0x9c
  40af11:	xchg   esp,eax
  40af12:	and    al,0x30
  40af14:	sti    
  40af15:	and    DWORD PTR [esp+edx*1],ebx
  40af18:	mov    WORD PTR [esp+ebx*8-0x1763f2e5],ds
  40af1f:	add    edx,DWORD PTR [eax+0x49]
  40af22:	out    dx,al
  40af23:	xchg   BYTE PTR [ecx],cl
  40af25:	pop    es
  40af26:	jmp    0x710d332e
  40af2b:	add    ecx,DWORD PTR [ebx+0x9]
  40af2e:	jmp    0x5e5db577
  40af33:	add    al,0x4b
  40af35:	or     ebx,eax
  40af37:	add    esp,ecx
  40af39:	or     bl,al
  40af3b:	add    esi,DWORD PTR [ecx+0x38c67409]
  40af41:	mov    ecx,0x866b
	...
  40af6a:	add    BYTE PTR [eax],al
  40af6c:	aas    
  40af6d:	sbb    dh,BYTE PTR [esi]
  40af6f:	sub    al,0x9b
  40af71:	and    dh,BYTE PTR [ebx+ebp*1+0x1b249c24]
  40af78:	inc    ebx
  40af79:	pushf  
  40af7a:	call   0x9d89ef82
  40af7f:	push   es
  40af80:	and    cl,BYTE PTR [ebx+ebp*8]
  40af83:	add    ecx,DWORD PTR [ebx-0x4f]
  40af86:	cmp    eax,0xfe098bdb
  40af8b:	mov    ch,0x44
  40af8d:	xor    DWORD PTR [eax],eax
  40af8f:	mov    dl,0x66
  40af91:	and    bh,bh
  40af93:	cdq    
  40af94:	arpl   WORD PTR [ecx],di
  40af96:	lea    ebp,[ebx+ebx*1+0x1a]
  40af9a:	(bad)  
  40af9b:	fdivp  st(7),st
  40af9d:	mov    bh,0xe7
  40af9f:	add    ch,BYTE PTR [ecx+0x22]
  40afa2:	jmp    DWORD PTR [eax-0x36]
  40afa5:	sbb    bh,dh
  40afa7:	(bad)  
  40afa8:	jo     0x40afdb
  40afaa:	or     DWORD PTR [ebx-0x1695dda0],0x283b0ad0
  40afb4:	dec    edi
  40afb5:	and    dh,BYTE PTR [ebp-0xdda767]
  40afbb:	sahf   
  40afbc:	fimul  DWORD PTR ds:0x222a6de8
  40afc2:	jmp    DWORD PTR [eax-0x36]
  40afc5:	sub    al,0xf7
  40afc7:	xchg   BYTE PTR [eax],dh
  40afc9:	scas   eax,DWORD PTR es:[edi]
  40afca:	call   DWORD PTR [eax]
  40afcc:	pop    edi
  40afcd:	fiadd  WORD PTR [eax-0x17]
	...
  40aff8:	and    DWORD PTR [eax+esi*8+0x76],ebx
  40affc:	xor    BYTE PTR [edx],ah
  40affe:	(bad)  
  40afff:	fcom   QWORD PTR [ecx+ebp*1+0x69]
  40b003:	test   BYTE PTR [eax],ah
  40b005:	and    cl,BYTE PTR [ecx-0xe5cc94]
  40b00b:	dec    esi
  40b00c:	in     eax,0x20
  40b00e:	addr16 loopne 0x40b03e
  40b011:	retf   0x3dff
  40b014:	mov    edx,0x6036f719
  40b019:	and    BYTE PTR [ebp-0x23],dh
  40b01c:	inc    eax
  40b01d:	iret   
  40b01e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b01f:	es jo  0x40afb4
  40b022:	test   DWORD PTR [ecx],edx
  40b024:	pop    eax
  40b025:	and    bh,bh
  40b027:	or     DWORD PTR [eax-0x4f],0x21
  40b02b:	ror    BYTE PTR [edi],cl
  40b02d:	and    esi,edi
  40b02f:	add    BYTE PTR [edi],bh
  40b031:	aad    0xf6
  40b033:	push   ebp
  40b035:	repz je 0x40b044
  40b038:	dec    edx
  40b039:	sbb    BYTE PTR [edi+edi*8-0x237b620b],ah
  40b040:	std    
  40b041:	repz dec BYTE PTR [ebp-0x91391]
  40b048:	cmc    
  40b049:	cmp    al,0x67
  40b04b:	xor    bl,BYTE PTR [ecx+0x46]
  40b04e:	(bad)  
  40b04f:	(bad)  
  40b050:	aas    
  40b051:	fdivr  st(6),st
  40b053:	push   ebp
  40b055:	repz xor al,0x46
  40b058:	dec    ebx
  40b059:	inc    esi
  40b05a:	jmp    edi
	...
  40b084:	sub    BYTE PTR [ecx-0x33660002],0x73
  40b08b:	sbb    DWORD PTR [ecx],esp
  40b08d:	mov    cl,0xdf
  40b08f:	div    DWORD PTR [ebp-0x7d8afc0d]
  40b095:	repz das 
  40b097:	(bad)  
  40b098:	out    dx,eax
  40b099:	shl    esi,cl
  40b09b:	push   ebp
  40b09d:	cmp    esp,edi
  40b09f:	fld    QWORD PTR [ebx]
  40b0a1:	repz (bad) 
  40b0a3:	jmp    0x40b123
  40b0a5:	pop    ds
  40b0a6:	mov    edi,0xe73c6c74
  40b0ab:	rol    ebx,1
  40b0ad:	repz inc bh
  40b0b0:	(bad)  
  40b0b2:	idiv   bh
  40b0b4:	xchg   ebp,eax
  40b0b5:	stc    
  40b0b6:	(bad)  
  40b0b7:	push   DWORD PTR [edx]
  40b0b9:	mov    eax,ds:0xf37dd084
  40b0be:	(bad)  
  40b0bf:	push   eax
  40b0c0:	or     dh,BYTE PTR [ecx]
  40b0c2:	cmp    al,BYTE PTR [ecx+0x32]
  40b0c5:	repz mov ah,0xf0
  40b0c8:	cmp    eax,0xbffffef3
  40b0cd:	pop    ss
  40b0ce:	out    0xc5,eax
  40b0d0:	dec    ebx
  40b0d1:	into   
  40b0d2:	sub    edi,edi
  40b0d4:	shl    BYTE PTR [esi+ecx*2-0x79f90309],cl
  40b0db:	mov    ebp,0xff2916ef
  40b0e0:	dec    ebx
  40b0e1:	daa    
  40b0e2:	jg     0x40b07f
  40b0e4:	dec    ebx
  40b0e5:	xor    al,BYTE PTR [ebx]
  40b0e7:	add    DWORD PTR [eax],0x0
	...
  40b10e:	add    BYTE PTR [eax],al
  40b110:	sahf   
  40b111:	xor    eax,0x31d4ff31
  40b116:	clc    
  40b117:	cmp    DWORD PTR [ebp-0x37fffccf],0xffffff8c
  40b11e:	sbb    al,0xf7
  40b120:	mov    esp,0xcf0f0446
  40b125:	mov    al,0x3
  40b127:	add    BYTE PTR [ebx-0x36],cl
  40b12a:	adc    eax,DWORD PTR [eax]
  40b12c:	mov    ah,0xaf
  40b12e:	sub    BYTE PTR [ebp+0x53],dh
  40b131:	jp     0x40b15b
  40b133:	popf   
  40b134:	xchg   esp,eax
  40b135:	jle    0x40b160
  40b137:	mov    ch,0x9f
  40b139:	jle    0x40b164
  40b13b:	inc    DWORD PTR [esp+esi*8-0x57e41805]
  40b142:	sub    bh,bh
  40b144:	je     0x40b11a
  40b146:	sbb    esi,edi
  40b148:	ins    BYTE PTR es:[edi],dx
  40b149:	xchg   esi,eax
  40b14a:	sub    BYTE PTR [ebp+0x53],dh
  40b14d:	mov    al,dh
  40b14f:	popf   
  40b150:	pop    esp
  40b151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b152:	sub    BYTE PTR [ebp-0xd74991],dh
  40b158:	dec    esp
  40b159:	cmp    al,0xfb
  40b15b:	out    0x7f,eax
  40b15d:	scas   al,BYTE PTR es:[edi]
  40b15e:	sub    bh,bh
  40b160:	cmp    al,0x9e
  40b162:	dec    ebx
  40b163:	div    DWORD PTR [eax+eiz*8]
  40b166:	sub    BYTE PTR [ebp+0x43],dh
  40b169:	enter  0x9d3f,0x24
  40b16d:	lock sub BYTE PTR [ebp+0x291e09ff],dh
	...
  40b19c:	adc    al,0x1f
  40b19e:	xchg   esp,eax
  40b19f:	sti    
  40b1a0:	and    al,0x2
  40b1a2:	ja     0x40b1cd
  40b1a4:	add    al,0x8b
  40b1a6:	dec    esp
  40b1a7:	push   eax
  40b1a8:	hlt    
  40b1a9:	push   ds
  40b1aa:	push   es
  40b1ab:	add    al,0x7f
  40b1ad:	add    ch,BYTE PTR [edx+0x67]
  40b1b0:	sbb    edx,DWORD PTR [edi]
  40b1b2:	imul   BYTE PTR [eax]
  40b1b4:	dec    edi
  40b1b5:	xchg   esp,eax
  40b1b6:	fidivr DWORD PTR [esi+eax*8+0x35]
  40b1ba:	fisubr WORD PTR [eax]
  40b1bc:	aam    0x1e
  40b1be:	sbb    DWORD PTR [ecx],ebp
  40b1c0:	push   esi
  40b1c1:	adc    ecx,eax
  40b1c3:	(bad)  
  40b1c4:	out    0x1e,al
  40b1c6:	into   
  40b1c7:	sbb    al,0x51
  40b1c9:	mov    bl,0xe8
  40b1cb:	sub    BYTE PTR [esi],bh
  40b1cd:	adc    ecx,edx
  40b1cf:	jnp    0x40b19f
  40b1d1:	push   ds
  40b1d2:	mov    dh,0x28
  40b1d4:	fisub  WORD PTR ds:0x319c28b6
  40b1da:	popf   
  40b1db:	arpl   WORD PTR [esi+ebx*1+0x169f6e9e],dx
  40b1e2:	xchg   esi,eax
  40b1e3:	sub    BYTE PTR [ebx+0x30],dh
  40b1e6:	dec    ecx
  40b1e7:	sub    BYTE PTR [esi+ebx*1+0x3c],bh
  40b1eb:	sbb    edi,DWORD PTR [esi+ebx*1+0x7e]
  40b1ef:	sbb    ecx,DWORD PTR [ebp+0x64287669]
  40b1f5:	push   esp
  40b1f6:	lea    esi,[eax]
  40b1f8:	pop    esp
  40b1f9:	push   ds
  40b1fa:	push   ecx
  40b1fb:	push   esp
  40b1fc:	stos   DWORD PTR es:[edi],eax
  40b1fd:	push   ds
  40b1fe:	pop    esi
  40b1ff:	sub    BYTE PTR [eax],al
	...
  40b225:	add    BYTE PTR [eax],al
  40b227:	add    BYTE PTR [esi+0x44285e35],dl
  40b22d:	xor    DWORD PTR [ecx],esp
  40b22f:	arpl   WORD PTR [esi+ebx*1],di
  40b232:	inc    esi
  40b233:	outs   dx,BYTE PTR ds:[esi]
  40b234:	cmp    edx,DWORD PTR [esi]
  40b236:	sub    BYTE PTR ds:[esp+edx*4],ch
  40b23a:	jmp    esp
  40b23c:	jae    0x40b1d2
  40b23e:	pop    es
  40b23f:	inc    ecx
  40b240:	mov    cl,0x1c
  40b242:	jmp    DWORD PTR [esi]
  40b244:	arpl   WORD PTR [eax+esi*8+0x16],dx
  40b248:	arpl   WORD PTR [esi],bx
  40b24a:	call   0xff5f1a94
  40b24f:	push   cs
  40b250:	mov    ebp,0x2d34e915
  40b255:	push   ds
  40b256:	(bad)  
  40b257:	(bad)  
  40b258:	sahf   
  40b259:	and    eax,ebp
  40b25b:	call   FWORD PTR [edi-0x79df00e3]
  40b261:	or     eax,0x2d503c00
  40b266:	and    DWORD PTR [ebp+0x42ffb323],0x53
  40b26d:	push   ds
  40b26e:	jne    0x40b251
  40b270:	pusha  
  40b271:	pop    edi
  40b272:	popf   
  40b273:	(bad)  
  40b274:	ins    BYTE PTR es:[edi],dx
  40b275:	nop
  40b276:	inc    ebp
  40b277:	mov    ebp,0x283ac5cf
  40b27c:	dec    edi
  40b27d:	push   ds
  40b27e:	xor    eax,0xffc87e27
  40b283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b284:	fiadd  DWORD PTR ds:0x1e621be8
  40b28a:	inc    DWORD PTR [ecx]
	...
  40b2b4:	(bad)  
  40b2b5:	loop   0x40b2f7
  40b2b7:	jmp    0xe940ba9c
  40b2bc:	enter  0x751d,0xf1
  40b2c0:	push   eax
  40b2c1:	test   eax,0x1e2c76fc
  40b2c6:	jne    0x40b335
  40b2c8:	and    al,0x94
  40b2ca:	pop    es
  40b2cb:	push   ecx
  40b2cc:	(bad)  
  40b2cd:	jnp    0x40b2ce
  40b2cf:	pop    esi
  40b2d0:	push   cs
  40b2d1:	dec    ebx
  40b2d2:	add    al,0xe9
  40b2d4:	sbb    edx,DWORD PTR [eax+0x158b68ec]
  40b2da:	inc    BYTE PTR [eax]
  40b2dc:	(bad)  
  40b2dd:	in     al,0x69
  40b2df:	add    BYTE PTR [eax],bl
  40b2e1:	adc    bh,bh
  40b2e3:	jne    0x40b30f
  40b2e5:	add    DWORD PTR [edx-0x63],esi
  40b2e8:	ins    DWORD PTR es:[edi],dx
  40b2e9:	in     al,0x88
  40b2eb:	inc    ebp
  40b2ec:	outs   dx,BYTE PTR ds:[esi]
  40b2ed:	jge    0x40b2f2
  40b2ef:	add    DWORD PTR [edx],esp
  40b2f1:	or     DWORD PTR [ebp-0x11c9a7b],ecx
  40b2f7:	inc    edx
  40b2f9:	add    dl,dl
  40b2fb:	jno    0x40b2df
  40b2fd:	or     BYTE PTR [ebx],cl
  40b2ff:	shl    BYTE PTR [esi+0x34],0x3c
  40b303:	add    al,0xf3
  40b305:	or     BYTE PTR [eax],al
  40b307:	ja     0x40b310
  40b309:	sbb    DWORD PTR [edi+0x3b],0x858d0523
  40b310:	cmc    
  40b311:	out    0xfe,al
  40b313:	inc    DWORD PTR [edx+0xa3a8fd]
	...
  40b33d:	add    BYTE PTR [eax],al
  40b33f:	add    BYTE PTR [ebp-0x5d97b01d],cl
  40b345:	or     bh,ch
  40b347:	mov    esi,0x874e452
  40b34c:	mov    ch,cl
  40b34e:	sar    bh,0xed
  40b351:	add    dh,dh
  40b353:	lahf   
  40b354:	in     eax,dx
  40b355:	jecxz  0x40b355
  40b357:	jne    0x40b307
  40b359:	jecxz  0x40b3cf
  40b35b:	or     dl,cl
  40b35d:	jge    0x40b2fb
  40b35f:	dec    ebp
  40b361:	ffree  st(1)
  40b363:	add    al,0x62
  40b365:	cmp    DWORD PTR [edx-0x4241e14],ecx
  40b36b:	push   0x72
  40b36d:	sbb    BYTE PTR ds:0xe72057ff,0xd
  40b374:	iret   
  40b375:	jecxz  0x40b375
  40b377:	mov    DWORD PTR [edi+0x4b0067e4],esp
  40b37d:	xor    dl,BYTE PTR [esi]
  40b37f:	mov    esi,0x40ea5cb3
  40b384:	dec    ebx
  40b385:	cmp    ch,BYTE PTR [ecx+0x26328a3a]
  40b38b:	jne    0x40b3e0
  40b38d:	retf   0xc44f
  40b390:	sbb    al,0xeb
  40b392:	and    eax,0xafe31775
  40b397:	pop    es
  40b398:	and    ecx,DWORD PTR [eax+ecx*4-0x1]
  40b39c:	add    al,0xe9
  40b39e:	inc    eax
  40b39f:	add    al,0x4b
  40b3a1:	push   ebp
  40b3a2:	jp     0x40b390
	...
  40b3cc:	retf   0x4eed
  40b3cf:	imul   esp
  40b3d1:	sbb    dh,BYTE PTR [edi+0x45]
  40b3d4:	out    0x81,eax
  40b3d6:	es jne 0x40b414
  40b3d9:	sub    ebp,DWORD PTR [edi-0x4cc21cf5]
  40b3df:	dec    esp
  40b3e1:	push   ss
  40b3e2:	inc    ebx
  40b3e3:	bswap  esi
  40b3e5:	cmp    eax,0x634b0003
  40b3ea:	mov    edi,0x3324bf7
  40b3ef:	add    BYTE PTR [esp+eiz*8+0x324cff2f],al
  40b3f6:	add    ebp,DWORD PTR [edx+0x4b]
  40b3f9:	enter  0x6a03,0x4b
  40b3fd:	clc    
  40b3fe:	add    ecx,DWORD PTR [ebp-0x732b89fa]
  40b404:	into   
  40b405:	jge    0x40b434
  40b407:	(bad)  
  40b408:	jl     0x40b3eb
  40b40a:	and    al,0x75
  40b40c:	jae    0x40b390
  40b40e:	scas   eax,DWORD PTR es:[edi]
  40b40f:	sti    
  40b410:	arpl   WORD PTR [ebx-0x4d],sp
  40b413:	jmp    DWORD PTR [esi+eiz*1+0x43]
  40b417:	je     0x40b45f
  40b419:	mov    DWORD PTR [ebp+0x1],ebp
  40b41c:	dec    ebx
  40b41d:	or     ecx,ebp
  40b41f:	fwait
  40b420:	xchg   ebp,eax
  40b421:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b423:	add    eax,DWORD PTR [ebp+edx*4-0x8]
  40b427:	sbb    esi,DWORD PTR [edx]
  40b429:	push   0x8e9b254e
  40b42e:	sbb    DWORD PTR [edi+0x0],esi
	...
  40b455:	add    BYTE PTR [eax],al
  40b457:	add    dh,al
  40b459:	adc    eax,0xba242536
  40b45e:	call   0xc225:0x2e68021b
  40b465:	test   BYTE PTR [ecx],bl
  40b467:	sub    eax,0xd5111b0c
  40b46c:	in     eax,0x1a
  40b46e:	push   ss
  40b46f:	ja     0x40b437
  40b471:	sub    DWORD PTR [esi],edx
  40b473:	and    eax,0x7f90b9f4
  40b478:	xor    al,cl
  40b47a:	call   0xfe5a52a3
  40b47f:	and    al,0xdc
  40b481:	sbb    dh,BYTE PTR [edi+esi*8-0x14]
  40b485:	in     al,dx
  40b486:	mov    ah,BYTE PTR [esp+ecx*8]
  40b489:	nop
  40b48a:	fs pop ds
  40b48c:	mov    esp,0xbc99d61a
  40b491:	mov    ds:0x90be85b,al
  40b496:	(bad)  
  40b497:	outs   dx,BYTE PTR ds:[esi]
  40b498:	mov    ebx,0xa424be12
  40b49d:	xchg   esp,eax
  40b49e:	in     al,0x1b
  40b4a0:	cmp    DWORD PTR [edi-0x52],esp
  40b4a3:	and    al,0xc2
  40b4a5:	test   BYTE PTR [ebp+0x131a8c2c],dl
  40b4ab:	add    al,0xf3
  40b4ad:	ja     0x40b481
  40b4af:	ret    0x1b7c
  40b4b2:	push   esp
  40b4b3:	xor    edi,DWORD PTR [edx+ebx*1-0x7a]
  40b4b7:	and    al,0xf6
  40b4b9:	or     al,0x91
  40b4bb:	sub    al,0x0
	...
  40b4e1:	add    BYTE PTR [eax],al
  40b4e3:	add    BYTE PTR [edx-0x1e89ffe6],ch
  40b4e9:	sub    eax,0x76
  40b4ec:	das    
  40b4ed:	sbb    ch,BYTE PTR [edx-0x17]
  40b4f0:	mov    al,0x80
  40b4f2:	cmp    ebp,DWORD PTR [eax+0x59b51a48]
  40b4f8:	outs   dx,DWORD PTR ds:[esi]
  40b4f9:	sbb    bh,bh
  40b4fb:	dec    esi
  40b4fc:	in     eax,0xd
  40b4fe:	call   0xff5b5e28
  40b503:	jo     0x40b4aa
  40b505:	cmp    eax,0xaf6736f7
  40b50a:	inc    eax
  40b50c:	jo     0x40b4ec
  40b50e:	inc    eax
  40b50f:	jmp    0x1731097b
  40b514:	das    
  40b515:	sbb    bh,bh
  40b517:	pushf  
  40b518:	hlt    
  40b519:	and    ecx,eax
  40b51b:	dec    eax
  40b51c:	das    
  40b51d:	sbb    cl,BYTE PTR [ecx-0xed7f94]
  40b523:	inc    bl
  40b525:	sbb    DWORD PTR [edi+0xd],esp
  40b528:	repz enter 0xedff,0x66
  40b52d:	sbb    edi,esi
  40b52f:	out    0x28,al
  40b531:	sbb    dh,BYTE PTR [ebp-0x13]
  40b534:	jo     0x40b599
  40b536:	mov    eax,ds:0x859068d6
  40b53b:	mov    ch,0x50
  40b53d:	sbb    bh,bh
  40b53f:	push   0x2a
  40b541:	and    eax,0x968bef7
  40b546:	je     0x40b578
	...
  40b570:	les    ebx,FWORD PTR [ebx-0x14]
  40b573:	mov    dh,0x68
  40b575:	sbb    al,BYTE PTR [eax]
  40b577:	sbb    eax,0x91bd86b7
  40b57c:	pusha  
  40b57d:	sbb    bh,bh
  40b57f:	jmp    0xf9a85858
  40b584:	dec    eax
  40b585:	sub    bh,BYTE PTR [esi+0x77fc500]
  40b58b:	call   0x3f504b
  40b590:	aad    0xbf
  40b592:	jmp    0x40b58b
  40b594:	in     eax,0xe5
  40b596:	(bad)  
  40b597:	jne    0x40b5f3
  40b599:	in     eax,dx
  40b59a:	cmp    al,0x9b
  40b59c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b59d:	in     al,dx
  40b59e:	(bad)  
  40b59f:	mov    ch,0x8a
  40b5a1:	hlt    
  40b5a2:	(bad)  
  40b5a3:	inc    DWORD PTR [ebp+0x55e80772]
  40b5a9:	cwde   
  40b5aa:	(bad)  
  40b5ab:	jmp    DWORD PTR [ebp-0x4e]
  40b5ae:	fcomip st,st(7)
  40b5b0:	push   ebp
  40b5b1:	in     al,dx
  40b5b2:	(bad)  
  40b5b3:	mov    ch,0x8e
  40b5b5:	hlt    
  40b5b6:	(bad)  
  40b5b7:	jmp    DWORD PTR [ebp+0x72]
  40b5ba:	pop    es
  40b5bb:	call   0x3f4d15
  40b5c0:	push   ebp
  40b5c1:	mov    dl,0xd7
  40b5c3:	test   DWORD PTR [ebp-0x14],0xe4fa75fe
  40b5ca:	or     al,0x9b
  40b5cc:	in     eax,0xeb
  40b5ce:	(bad)  
  40b5cf:	mov    ch,0x36
  40b5d1:	hlt    
  40b5d2:	(bad)  
  40b5d3:	inc    DWORD PTR [eax]
	...
  40b5f9:	add    BYTE PTR [eax],al
  40b5fb:	add    ch,ah
  40b5fd:	jno    0x40b606
  40b5ff:	call   0x3f4ce9
  40b604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b605:	mov    cl,0xd3
  40b607:	not    DWORD PTR [ebp-0x558a0115]
  40b60d:	in     al,0xf0
  40b60f:	call   0xf38e:0xb5feeb85
  40b616:	(bad)  
  40b617:	dec    DWORD PTR [edx-0x1a006309]
  40b61d:	jmp    0x40b5d3
  40b61f:	in     al,dx
  40b620:	lods   eax,DWORD PTR ds:[esi]
  40b621:	jmp    0x40b621
  40b623:	call   0x40400a
  40b628:	dec    ebx
  40b629:	jg     0x40b683
  40b62b:	call   0xe8633dac
  40b630:	lods   ax,WORD PTR ds:[esi]
  40b632:	and    edi,edi
  40b634:	fnstsw WORD PTR fs:[esi]
  40b637:	neg    DWORD PTR [edi+ebx*4+0x2a]
  40b63b:	fidiv  DWORD PTR [esi-0x6900de59]
  40b641:	retf   0xff19
  40b644:	inc    esp
  40b645:	mov    edx,0xbf3c9d51
  40b64a:	and    DWORD PTR [ebp-0xde40e1],esi
  40b650:	and    esp,esi
  40b652:	jg     0x40b653
  40b654:	and    al,0xd7
  40b656:	push   edi
  40b657:	lock adc al,0xdf
  40b65a:	and    edi,edi
  40b65c:	sahf   
  40b65d:	and    dh,BYTE PTR ss:[ebp+0x0]
	...
  40b685:	add    BYTE PTR [eax],al
  40b687:	add    BYTE PTR [ebx-0x6],al
  40b68a:	or     esi,edi
  40b68c:	add    al,0xf7
  40b68e:	and    DWORD PTR [ebp-0xde0905],esi
  40b694:	jecxz  0x40b65f
  40b696:	jg     0x40b697
  40b698:	in     al,dx
  40b699:	push   cs
  40b69a:	enter  0xf2f7,0x2a
  40b69e:	and    edi,edi
  40b6a0:	fcomp  QWORD PTR [esi]
  40b6a2:	xchg   edi,eax
  40b6a3:	sti    
  40b6a4:	jecxz  0x40b6b9
  40b6a6:	mov    cl,0xff
  40b6a8:	int3   
  40b6a9:	pop    eax
  40b6aa:	inc    esi
  40b6ab:	or     al,0x4b
  40b6ad:	fisttp QWORD PTR [esp+ebp*8+0x6a2065c8]
  40b6b4:	dec    ebx
  40b6b5:	int3   
  40b6b6:	add    bh,bh
  40b6b8:	sbb    ch,BYTE PTR ss:[ebx]
  40b6bb:	mov    edx,0x892156c1
  40b6c0:	push   es
  40b6c1:	pop    esi
  40b6c2:	lods   al,BYTE PTR ds:[esi]
  40b6c3:	lods   al,BYTE PTR ds:[esi]
  40b6c4:	push   eax
  40b6c5:	loope  0x40b6ca
  40b6c7:	call   DWORD PTR [esi+0x9]
  40b6ca:	das    
  40b6cb:	jmp    0x40b6d8
  40b6cd:	or     DWORD PTR [esi-0x56debb69],ebx
  40b6d3:	pop    ds
  40b6d4:	je     0x40b6ed
  40b6d6:	add    DWORD PTR [edi+0x30],ebp
  40b6d9:	retf   0xabe8
  40b6dc:	dec    edx
  40b6dd:	or     ecx,ebp
  40b6df:	sbb    DWORD PTR [ebp+ebx*4-0x20],0x2b
  40b6e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6e5:	adc    eax,0x9d4c216e
  40b6ea:	and    DWORD PTR fs:[eax],eax
	...
  40b711:	add    BYTE PTR [eax],al
  40b713:	add    BYTE PTR [esi-0x1eb0aeff],bh
  40b719:	push   ss
  40b71a:	push   esi
  40b71b:	dec    ebx
  40b71c:	or     DWORD PTR [esi],ecx
  40b71e:	jmp    0x6a6678d9
  40b723:	dec    eax
  40b724:	daa    
  40b725:	rcl    BYTE PTR [ebp+0x8a11cad],0x21
  40b72c:	sahf   
  40b72d:	add    DWORD PTR [ecx-0x4f],eax
  40b730:	mov    dl,0x16
  40b732:	mov    ecx,DWORD PTR es:[esi-0x62288deb]
  40b739:	loope  0x40b6e2
  40b73b:	add    eax,eax
  40b73d:	aam    0x89
  40b73f:	jmp    0x40b6cc
  40b741:	or     DWORD PTR [ecx-0x1f],ebp
  40b744:	in     al,0x9a
  40b746:	xchg   DWORD PTR [ebx+0x3a7d2e1],ebp
  40b74c:	jge    0x40b76f
  40b74e:	xor    eax,0x3916ccb1
  40b753:	lods   al,BYTE PTR ds:[esi]
  40b754:	mov    ch,0xd2
  40b756:	daa    
  40b757:	add    al,0x14
  40b759:	and    DWORD PTR [ecx+0x3316b4b0],eax
  40b75f:	or     eax,0xcec9c8b
  40b764:	jns    0x40b703
  40b766:	adc    bh,BYTE PTR [edx-0x70ffb05c]
  40b76c:	imul   edx,DWORD PTR [esi],0x68
  40b76f:	out    0x6c,al
  40b771:	leave  
  40b772:	(bad)  
  40b773:	cmp    BYTE PTR [edi],dh
  40b775:	sub    al,0xa0
  40b777:	sahf   
	...
  40b7a0:	sub    edi,DWORD PTR [ecx+0x2648e967]
  40b7a6:	mov    esi,0x40d54501
  40b7ab:	jmp    0xf1b5cf48
  40b7b0:	xor    BYTE PTR [ecx+eax*8+0x76],ah
  40b7b4:	sub    esp,DWORD PTR [ecx]
  40b7b6:	(bad)  [ebp+0x2b]
  40b7b9:	push   ss
  40b7ba:	jmp    0x40b7a4
  40b7bc:	adc    dl,BYTE PTR [esi+0xfd5e93d]
  40b7c2:	inc    esi
  40b7c3:	push   ebp
  40b7c4:	pop    ds
  40b7c5:	push   esi
  40b7c6:	mov    ecx,0xff166b4e
  40b7cb:	cmp    ebx,DWORD PTR [edx-0x344bf92f]
  40b7d1:	adc    eax,0x9c6b3575
  40b7d6:	pop    es
  40b7d7:	inc    ecx
  40b7d8:	cmc    
  40b7d9:	outs   dx,DWORD PTR ds:[esi]
  40b7da:	jmp    DWORD PTR [esi]
  40b7dc:	or     esi,DWORD PTR [eax+ecx*8+0x5509442b]
  40b7e3:	bound  esp,QWORD PTR [edx+ecx*4]
  40b7e6:	les    ecx,FWORD PTR ds:0x60b9c2b
  40b7ec:	mov    ebp,0x63c5e80d
  40b7f1:	push   ss
  40b7f2:	jmp    DWORD PTR [eax+0xd]
  40b7f5:	adc    bh,bh
  40b7f7:	je     0x40b825
  40b7f9:	push   ss
  40b7fa:	jne    0x40b7ed
  40b7fc:	jo     0x40b87b
  40b7fe:	xchg   esp,eax
  40b7ff:	ficomp WORD PTR [edx+eax*4+0x4d]
  40b803:	in     eax,0x0
	...
  40b829:	add    BYTE PTR [eax],al
  40b82b:	add    BYTE PTR [ecx+0x49],al
  40b82e:	je     0x40b85b
  40b830:	enter  0xffcf,0xff
  40b834:	data16 sub dh,bh
  40b837:	jne    0x40b817
  40b839:	in     al,0x94
  40b83b:	pushf  
  40b83c:	(bad)  
  40b83e:	dec    edi
  40b83f:	call   DWORD PTR [edi-0x7]
  40b842:	(bad)  
  40b843:	jne    0x40b7f3
  40b845:	pop    esp
  40b846:	(bad)  
  40b847:	jne    0x40b8c3
  40b849:	loope  0x40b816
  40b84b:	xchg   esi,eax
  40b84c:	(bad)  
  40b84e:	pop    ecx
  40b84f:	mov    ecx,DWORD PTR [edi-0x7]
  40b852:	cmp    BYTE PTR [ecx],0x72
  40b855:	jo     0x40b860
  40b857:	push   edx
  40b858:	mov    edx,0xddff9b55
  40b85d:	and    DWORD PTR [edi+0x7d8a76eb],edi
  40b863:	adc    BYTE PTR [edx],dh
  40b865:	jge    0x40b86e
  40b867:	mov    esp,edi
  40b869:	sbb    dh,bh
  40b86b:	jne    0x40b80b
  40b86d:	test   BYTE PTR [eax],al
  40b86f:	mov    esp,DWORD PTR [eax-0x20]
  40b872:	add    DWORD PTR [ebx],ebp
  40b874:	jb     0x40b83c
  40b876:	ror    DWORD PTR [edx+esi*1],0x52
  40b87a:	mov    ch,ah
  40b87c:	pop    ebp
  40b87d:	jb     0x40b88a
  40b87f:	call   edi
  40b881:	add    al,ch
  40b883:	mov    ecx,0xfffef484
  40b888:	xlat   BYTE PTR ds:[ebx]
  40b889:	add    al,0x50
  40b88b:	call   edi
  40b88d:	add    al,ch
  40b88f:	xor    DWORD PTR [eax],eax
	...
  40b8b5:	add    BYTE PTR [eax],al
  40b8b7:	add    BYTE PTR [ebp-0xc],dh
  40b8ba:	dec    cl
  40b8bc:	xor    BYTE PTR ds:0xd9595500,al
  40b8c2:	add    ah,0x22
  40b8c5:	pop    ebx
  40b8c6:	push   esi
  40b8c7:	push   ebx
  40b8c8:	popa   
  40b8c9:	push   0x7
  40b8cb:	add    BYTE PTR [esi],ah
  40b8cd:	pop    ss
  40b8ce:	cmp    BYTE PTR [ebp-0x52],0x8
  40b8d2:	je     0x40b8e0
  40b8d4:	dec    ebx
  40b8d5:	lahf   
  40b8d6:	lahf   
  40b8d7:	cmovnp edi,DWORD PTR [esi+0x36268305]
  40b8de:	add    esi,DWORD PTR [ebp+0x52]
  40b8e1:	test   DWORD PTR [ebx+0x5b],0xc24cfbf4
  40b8e8:	cmp    esp,DWORD PTR [edx]
  40b8ea:	mov    al,BYTE PTR [ebp+0x57]
  40b8ed:	lahf   
  40b8ee:	and    al,BYTE PTR [edi]
  40b8f0:	enter  0xff5,0x0
  40b8f4:	jmp    DWORD PTR ds:0x28f7c00a
  40b8fa:	jmp    0x89c8:0xbdeb00bf
  40b901:	xor    al,BYTE PTR [ebx]
  40b903:	mov    ecx,DWORD PTR [esi]
  40b905:	ss and al,0x44
  40b909:	lahf   
  40b90a:	lahf   
  40b90b:	adc    ecx,DWORD PTR [ebx+0x36]
  40b90e:	pop    es
  40b90f:	or     ecx,DWORD PTR [ebx]
  40b911:	ds or  al,0x2b
  40b914:	or     edx,DWORD PTR [edi-0x42]
  40b917:	pop    ebp
  40b918:	add    ah,al
  40b91a:	repnz inc DWORD PTR [eax]
	...
  40b941:	add    BYTE PTR [eax],al
  40b943:	add    BYTE PTR [ecx-0x19],dh
  40b946:	sbb    eax,0xc7a34f75
  40b94b:	mov    edi,0xb4364c8
  40b950:	or     al,0x5d
  40b952:	inc    ebx
  40b953:	call   0xff5f406f
  40b958:	call   FWORD PTR [eax+0x7cc0c3c7]
  40b95e:	inc    edi
  40b95f:	mov    esi,0xffc4465a
  40b964:	mov    ds:0x4b000316,eax
  40b969:	pcmpgtd mm1,QWORD PTR [ebx+0x4d8a2a5e]
  40b970:	aas    
  40b971:	pcmpgtd mm1,QWORD PTR [ebp-0x4b26f6f2]
  40b978:	mov    ebp,0x3e1da89d
  40b97d:	dec    ebp
  40b97e:	rol    DWORD PTR [esi+eiz*8+0x13],0xce
  40b983:	sbb    eax,0x81d14d1e
  40b988:	rcl    BYTE PTR [ebx],0xbe
  40b98b:	sbb    eax,0xc766051e
  40b990:	int3   
  40b991:	xchg   DWORD PTR [esp+eax*2],esp
  40b994:	pusha  
  40b995:	adc    al,0x1c
  40b997:	inc    esp
  40b998:	jae    0x40b91a
  40b99a:	sbb    BYTE PTR ds:0x482c8174,0x6f
  40b9a1:	and    DWORD PTR [eax+ecx*2],0x89789dd6
	...
  40b9d0:	fimul  WORD PTR [eax+eax*2-0xc]
  40b9d4:	push   esp
  40b9d5:	adc    ebp,ecx
  40b9d7:	adc    BYTE PTR [edi-0x742027ae],ah
  40b9dd:	or     DWORD PTR [eax-0x16f6b4f7],esp
  40b9e3:	adc    bh,ch
  40b9e5:	jle    0x40b9c3
  40b9e7:	or     eax,eax
  40b9e9:	(bad)  
  40b9ea:	fcom   QWORD PTR [eax]
  40b9ec:	out    dx,eax
  40b9ed:	test   BYTE PTR [ebx+eiz*1+0x43b4127b],ch
  40b9f4:	adc    al,0x9d
  40b9f6:	sub    al,0x2c
  40b9f8:	pushf  
  40b9f9:	ins    BYTE PTR es:[edi],dx
  40b9fa:	cs sbb eax,0x2c2c9d04
  40ba00:	cmp    DWORD PTR [esi+0x1e],ebp
  40ba03:	sbb    eax,0x139c84f7
  40ba08:	mov    esi,0x3b5b2094
  40ba0d:	or     ecx,ebp
  40ba0f:	add    ebx,eax
  40ba11:	ins    DWORD PTR es:[edi],dx
  40ba12:	ins    BYTE PTR es:[edi],dx
  40ba13:	xchg   edi,eax
  40ba14:	hlt    
  40ba15:	push   eax
  40ba16:	add    cl,ah
  40ba18:	dec    eax
  40ba19:	or     DWORD PTR [eax],eax
  40ba1b:	cli    
  40ba1c:	sub    al,0x9f
  40ba1e:	add    BYTE PTR [ebp+eax*4+0x4a],dh
  40ba22:	push   eax
  40ba23:	shl    DWORD PTR [edx-0x7b],1
  40ba26:	add    cl,ch
  40ba28:	ret    
  40ba29:	pushf  
  40ba2a:	punpckldq mm0,mm5
  40ba2d:	test   al,0xd6
  40ba30:	dec    ebx
  40ba31:	(bad)  
  40ba32:	(bad)  
  40ba33:	xor    eax,0x0
	...
  40ba5c:	out    dx,al
  40ba5d:	pop    ds
  40ba5e:	pcmpgtb mm0,QWORD PTR [ebp-0x42e8afd6]
  40ba65:	sub    bh,BYTE PTR [ebx+0x76]
  40ba68:	dec    eax
  40ba69:	or     DWORD PTR [ebx+0xac240a7],eax
  40ba6f:	xchg   esi,eax
  40ba70:	aad    0x25
  40ba72:	xorps  xmm1,XMMWORD PTR [esi+0x50818313]
  40ba79:	call   0xd974:0xde38d201
  40ba80:	sbb    DWORD PTR [ebx],esp
  40ba82:	push   0xffffffe9
  40ba84:	repnz adc DWORD PTR [ecx-0x17],ebp
  40ba88:	repnz adc DWORD PTR [ebp+0x5e],edx
  40ba8c:	fld    QWORD PTR [ecx]
  40ba8e:	push   0xffffffe9
  40ba90:	loop   0x40baa3
  40ba92:	out    0xf,eax
  40ba94:	fist   DWORD PTR [ecx]
  40ba96:	push   edx
  40ba98:	mov    BYTE PTR [ebp+0x29d89928],bl
  40ba9e:	aam    0x53
  40baa0:	das    
  40baa1:	adc    cl,BYTE PTR [ebx-0x603eef]
  40baa7:	xchg   edx,eax
  40baa8:	dec    eax
  40baa9:	mov    eax,0x9c57b752
  40baae:	jae    0x14059fc
  40bab4:	in     eax,0x9d
  40bab6:	(bad)  
  40bab7:	push   edx
  40bab9:	add    al,al
  40babb:	jne    0x40ba97
  40babd:	pop    eax
  40babe:	out    0x9d,eax
	...
  40bae8:	js     0x40badf
  40baea:	(bad)  
  40baeb:	sub    ebx,DWORD PTR [ecx-0x7f]
  40baee:	ret    
  40baef:	pop    ebx
  40baf0:	add    eax,0xb2c2c84f
  40baf5:	add    eax,0x89868b55
  40bafa:	(bad)  
  40bafb:	lock pop ebp
  40bafd:	pop    edx
  40bafe:	sub    bl,bl
  40bb00:	test   DWORD PTR [edi+0xb],esi
  40bb03:	call   FWORD PTR [edi+0x5]
  40bb06:	call   0xff2eaa0c
  40bb0b:	push   eax
  40bb0c:	mov    ch,0x77
  40bb0e:	pop    es
  40bb0f:	call   0x3f5230
  40bb14:	stc    
  40bb15:	hlt    
  40bb16:	push   edi
  40bb17:	add    ebx,edx
  40bb19:	add    eax,eax
  40bb1b:	je     0x40bb4a
  40bb1d:	add    BYTE PTR [ebp-0xc],0x42
  40bb21:	out    dx,al
  40bb22:	je     0x40bb30
  40bb24:	aad    0x77
  40bb26:	pop    es
  40bb27:	call   0x3fab35
  40bb2c:	stos   DWORD PTR es:[edi],eax
  40bb2d:	dec    edx
  40bb2e:	sti    
  40bb2f:	(bad)  
  40bb30:	out    dx,eax
  40bb31:	cld    
  40bb32:	dec    edi
  40bb33:	call   FWORD PTR [edi]
  40bb35:	or     edi,edi
  40bb37:	jne    0x40bb63
  40bb39:	in     eax,0x98
  40bb3b:	std    
  40bb3c:	xchg   ebp,eax
  40bb3d:	hlt    
  40bb3e:	mov    BYTE PTR [ebp-0x76],al
  40bb41:	hlt    
  40bb42:	je     0x40bb34
  40bb44:	push   ebp
  40bb45:	jp     0x40bb3e
  40bb47:	dec    edi
  40bb49:	add    bh,bh
  40bb4b:	jne    0x40bb4d
	...
  40bb71:	add    BYTE PTR [eax],al
  40bb73:	add    BYTE PTR [esi],dh
  40bb75:	fst    QWORD PTR [eax]
  40bb77:	(bad)  
  40bb78:	and    eax,0x55d88af4
  40bb7d:	jp     0x40bb7a
  40bb7f:	call   0xffbe01cf
  40bb84:	in     al,0xff
  40bb86:	nop
  40bb87:	div    ebx
  40bb89:	ds jge 0x40bb8b
  40bb8c:	aam    0x7c
  40bb8e:	add    edx,DWORD PTR [edi-0x34]
  40bb91:	lea    ecx,[edx]
  40bb93:	call   0xff5b6d8b
  40bb98:	shl    BYTE PTR [ebx-0x42],1
  40bb9b:	pop    esi
  40bb9c:	and    BYTE PTR [ebx+ecx*1+0x0],0x16
  40bba1:	stos   DWORD PTR es:[edi],eax
  40bba2:	and    DWORD PTR es:[esi],0x2e
  40bba6:	add    DWORD PTR [edx+0x6a],esi
  40bba9:	inc    edi
  40bbaa:	nop
  40bbab:	sete   ch
  40bbae:	or     ebp,eax
  40bbb0:	retf   0x19ae
  40bbb3:	inc    DWORD PTR [ebp+edx*8+0x19f6fef3]
  40bbba:	sub    ebp,DWORD PTR [edi-0xe5908a]
  40bbc0:	not    BYTE PTR [ecx]
  40bbc2:	sbb    dh,BYTE PTR [ebp+0x53]
  40bbc5:	mov    bl,BYTE PTR [edi-0x3]
  40bbc8:	pop    esp
  40bbc9:	xchg   DWORD PTR [edx],ebx
  40bbcb:	jne    0x40bc08
  40bbcd:	(bad)  
  40bbce:	pop    DWORD PTR [edi]
  40bbd0:	arpl   sp,bp
  40bbd2:	sbb    bh,bh
  40bbd4:	inc    esp
  40bbd5:	stos   DWORD PTR es:[edi],eax
  40bbd6:	scas   eax,DWORD PTR es:[edi]
  40bbd7:	adc    eax,DWORD PTR [eax]
	...
  40bbfd:	add    BYTE PTR [eax],al
  40bbff:	add    dl,dl
  40bc01:	and    ebx,DWORD PTR [edx]
  40bc03:	jne    0x40bc60
  40bc05:	scas   eax,DWORD PTR es:[edi]
  40bc06:	pop    DWORD PTR [edi]
  40bc08:	and    ebp,DWORD PTR [ecx-0x5cdb00e9]
  40bc0e:	xchg   edi,eax
  40bc0f:	or     ecx,DWORD PTR [eax+0x50]
  40bc12:	icebp  
  40bc13:	(bad)  
  40bc14:	sahf   
  40bc15:	xor    bl,BYTE PTR [edx]
  40bc17:	jne    0x40bc5c
  40bc19:	retf   0xfc9a
  40bc1c:	add    al,0xdf
  40bc1e:	sbb    DWORD PTR [ebp+0x5b],esi
  40bc21:	or     DWORD PTR [esi],esp
  40bc23:	nop
  40bc24:	dec    esp
  40bc25:	and    DWORD PTR [eax+ebx*1-0x6fe9f014],ecx
  40bc2c:	push   esp
  40bc2d:	mov    ds:0x1561af0,eax
  40bc32:	adc    DWORD PTR [esi-0x41],ebp
  40bc35:	paddd  mm3,QWORD PTR [ecx]
  40bc38:	push   esi
  40bc39:	stc    
  40bc3a:	cmc    
  40bc3b:	(bad)  
  40bc3c:	dec    esp
  40bc3d:	and    ebp,ecx
  40bc3f:	outs   dx,DWORD PTR ds:[esi]
  40bc40:	mov    esp,0x5b46b00f
  40bc45:	or     DWORD PTR [ecx*4+0x85c0f9f],esi
  40bc4c:	xor    DWORD PTR [edx],ecx
  40bc4e:	into   
  40bc4f:	pop    DWORD PTR [ecx+eiz*1+0x75]
  40bc53:	jo     0x40bbe9
  40bc55:	movsx  ecx,BYTE PTR [edi+0xc3c1040]
  40bc5c:	jae    0x40bc85
  40bc5e:	scas   eax,DWORD PTR es:[edi]
  40bc5f:	sbb    DWORD PTR [ebx+eax*4+0x3c],edi
  40bc63:	hlt    
	...
  40bc8c:	ret    
  40bc8d:	or     bl,BYTE PTR [esi+0x1c10408f]
  40bc93:	or     al,0x73
  40bc95:	aaa    
  40bc96:	(bad)  
  40bc97:	sbb    DWORD PTR [ebx+eax*4+0x1c],ebx
  40bc9b:	lock ret 
  40bc9d:	or     bh,BYTE PTR [esi-0x71]
  40bca0:	inc    eax
  40bca1:	adc    ah,bh
  40bca3:	or     esi,DWORD PTR [ebx]
  40bca5:	inc    edi
  40bca6:	outs   dx,DWORD PTR ds:[esi]
  40bca7:	sbb    DWORD PTR [ebx+eax*4],edi
  40bcaa:	mov    esp,0x300bc3fb
  40bcaf:	inc    esi
  40bcb0:	push   edi
  40bcb1:	or     DWORD PTR [esp+ecx*4+0x28258b37],edi
  40bcb8:	jne    0x40bc70
  40bcba:	inc    ebp
  40bcbb:	(bad)  
  40bcbc:	cmp    BYTE PTR [ebx+0x19618e7],ah
  40bcc2:	add    BYTE PTR [ecx+0xe],al
  40bcc5:	jnp    0x40bcc6
  40bcc7:	bound  edx,QWORD PTR cs:[ebx+edx*1-0x17f93bda]
  40bccf:	push   ebp
  40bcd0:	jbe    0x40bce0
  40bcd2:	jmp    DWORD PTR [edx+0x3f]
  40bcd5:	and    BYTE PTR [ebx],bh
  40bcd7:	call   0xaccbc624
  40bcdc:	in     al,0x8b
  40bcde:	cmp    cl,ch
  40bce0:	mov    ebp,0x49bfe905
  40bce5:	or     DWORD PTR [eax],eax
  40bce7:	es cld 
  40bce9:	adc    al,BYTE PTR [eax]
  40bceb:	jmp    0x24cdc638
	...
  40bd18:	push   ebx
  40bd19:	mov    ecx,0xf9b5cfe
  40bd1e:	jne    0x40bd19
  40bd20:	inc    ebx
  40bd21:	xchg   esp,eax
  40bd22:	pop    es
  40bd23:	sar    DWORD PTR [esi],1
  40bd25:	ud0    edi,DWORD PTR [esi+0x348311bf]
  40bd2c:	arpl   WORD PTR [ecx],cx
  40bd2e:	je     0x40bd3a
  40bd30:	scas   eax,DWORD PTR es:[edi]
  40bd31:	repnz cmp ebp,DWORD PTR [eax]
  40bd34:	dec    edi
  40bd35:	push   cs
  40bd36:	jne    0x40bcd5
  40bd38:	and    BYTE PTR [ebx+0x248e96b],al
  40bd3e:	rcl    BYTE PTR [esp+eax*2],0xa1
  40bd42:	and    eax,ebp
  40bd44:	mov    DWORD PTR [esi],ecx
  40bd46:	(bad)  
  40bd47:	hlt    
  40bd48:	xor    al,0x21
  40bd4a:	jns    0x40bd4e
  40bd4c:	dec    edi
  40bd4d:	or     DWORD PTR [ecx+0x7227324],ecx
  40bd53:	cs cmc 
  40bd55:	and    DWORD PTR [eax],eax
  40bd57:	jmp    0xd4c3c6a4
  40bd5c:	ins    BYTE PTR es:[edi],dx
  40bd5d:	or     DWORD PTR [ecx+esi*8-0x10],esi
  40bd61:	or     BYTE PTR [eax],al
  40bd63:	add    BYTE PTR [ebp-0x50],bh
  40bd66:	(bad)  
  40bd67:	jne    0x40bd87
  40bd69:	loop   0x40bdb1
  40bd6b:	xchg   ebp,eax
  40bd6c:	cmp    eax,0x2e75fef1
  40bd71:	icebp  
  40bd72:	je     0x40bd80
  40bd74:	pop    edx
  40bd75:	nop
  40bd76:	xchg   esp,eax
  40bd77:	dec    DWORD PTR [ebp-0x1d]
  40bd7a:	mov    al,BYTE PTR [eax]
	...
  40bda4:	repnz or DWORD PTR [ebx+0x3884d645],ecx
  40bdab:	add    BYTE PTR [edi+0xf],dl
  40bdae:	call   0x4aa039
  40bdb3:	(bad)  
  40bdb4:	div    ecx
  40bdb6:	(bad)  
  40bdb7:	push   DWORD PTR [edx-0x69ba38f7]
  40bdbd:	add    al,0x0
  40bdbf:	add    BYTE PTR [edx-0x4d0fbb32],ah
  40bdc5:	or     DWORD PTR [eax],eax
  40bdc7:	add    bh,bh
  40bdc9:	inc    edi
  40bdca:	out    dx,eax
  40bdcb:	push   eax
  40bdcc:	pop    ds
  40bdcd:	dec    eax
  40bdce:	repz push eax
  40bdd0:	pop    ds
  40bdd1:	dec    eax
  40bdd2:	not    DWORD PTR [eax-0x43]
  40bdd5:	ja     0x40bdea
  40bdd7:	push   DWORD PTR [edi]
  40bdd9:	std    
  40bdda:	out    0xe1,eax
  40bddc:	lods   al,BYTE PTR ds:[esi]
  40bddd:	cmc    
  40bdde:	inc    BYTE PTR [ebx+0x73ffe14f]
  40bde4:	or     DWORD PTR [edx+0x7d72f87d],0xf94f832c
  40bdee:	push   DWORD PTR [esp+eiz*2-0x76]
  40bdf2:	jge    0x40bde4
  40bdf4:	xor    bh,BYTE PTR [ebp+0x20]
  40bdf7:	push   DWORD PTR [edi]
  40bdf9:	icebp  
  40bdfa:	(bad)  
  40bdfb:	jne    0x40be3b
  40bdfd:	loope  0x40be3b
  40bdff:	xchg   ebp,eax
  40be00:	(bad)  
  40be01:	hlt    
  40be02:	(bad)  
  40be03:	jne    0x40be50
  40be05:	scas   al,BYTE PTR es:[edi]
  40be06:	push   ss
  40be07:	jne    0x40be09
	...
  40be2d:	add    BYTE PTR [eax],al
  40be2f:	add    BYTE PTR [edi-0x36],cl
  40be32:	rcl    DWORD PTR [esp+edx*1+0x1b7516c4],1
  40be39:	int3   
  40be3a:	nop
  40be3b:	or     esi,ebx
  40be3d:	sti    
  40be3e:	jo     0x40be3f
  40be40:	cld    
  40be41:	fist   DWORD PTR [eax+0x7b2ee3f7]
  40be47:	(bad)  
  40be48:	in     al,dx
  40be49:	jmp    0x40bddb
  40be4b:	repz repz inc esi
  40be4e:	jnp    0x40be4f
  40be50:	fdiv   st(3),st
  40be52:	nop
  40be53:	out    dx,eax
  40be54:	jecxz  0x40be94
  40be56:	jnp    0x40be57
  40be58:	int3   
  40be59:	pop    ebx
  40be5a:	or     bh,bh
  40be5c:	push   esp
  40be5d:	popf   
  40be5e:	test   al,0xfe
  40be60:	mov    esp,0xa77d821b
  40be65:	and    cl,BYTE PTR [edi+0x1622211d]
  40be6b:	jne    0x40bec4
  40be6d:	dec    edx
  40be6e:	outs   dx,DWORD PTR ds:[esi]
  40be6f:	xchg   esp,eax
  40be70:	pushf  
  40be71:	cmp    ebp,DWORD PTR [ecx+0x7cd95ff]
  40be77:	call   0xff56753d
  40be7c:	icebp  
  40be7d:	and    DWORD PTR [esi],edx
  40be7f:	jne    0x40bed0
  40be81:	dec    edx
  40be82:	adc    DWORD PTR [esp+esi*2+0x6f751663],0x7a
  40be8a:	es xchg edi,eax
  40be8c:	fs jae 0x40be54
  40be8f:	or     dl,BYTE PTR [ebp+0x2b]
  40be92:	cmp    BYTE PTR [ebp+0x0],0x0
	...
  40beb9:	add    BYTE PTR [eax],al
  40bebb:	add    BYTE PTR [ebp-0x7d],dl
  40bebe:	push   ss
  40bebf:	pop    edi
  40bec0:	in     eax,dx
  40bec1:	pop    eax
  40bec2:	inc    ecx
  40bec3:	adc    BYTE PTR [ebx-0x13],cl
  40bec6:	mov    ch,ah
  40bec8:	enter  0x1f65,0x56
  40becc:	xor    al,0x9
  40bece:	fmul   QWORD PTR [ebx]
  40bed0:	and    esi,DWORD PTR [esi+ebp*2+0x16]
  40bed4:	and    al,0x82
  40bed6:	lods   al,BYTE PTR ds:[esi]
  40bed7:	bswap  eax
  40bed9:	lea    edx,[ebx+esi*8-0x67]
  40bedd:	inc    DWORD PTR [eax-0x16f6b4fc]
  40bee3:	mov    ch,0x13
  40bee5:	inc    edi
  40bee6:	loope  0x40beeb
  40bee8:	cld    
  40bee9:	xchg   ebp,eax
  40beea:	loopne 0x40bf17
  40beec:	(bad)  
  40beed:	jns    0x40bf15
  40beef:	push   ss
  40bef0:	add    al,0xc6
  40bef2:	and    BYTE PTR [ebx+ecx*2],al
  40bef5:	or     ecx,ebp
  40bef7:	mov    BYTE PTR [esi+0x5e16b911],al
  40befd:	add    DWORD PTR [ecx],edx
  40beff:	fidivr WORD PTR [edx+0xe8bfe0b]
  40bf05:	or     eax,0x8b4986a
  40bf0a:	jne    0x40bf13
  40bf0c:	enter  0xe48d,0x2
  40bf10:	cmp    DWORD PTR [ebx],eax
  40bf12:	push   0xffffff97
  40bf14:	mov    al,ds:0xe30a5f02
  40bf19:	or     ecx,ebp
  40bf1b:	add    ecx,DWORD PTR [ebx-0x55]
  40bf1e:	scas   eax,DWORD PTR es:[edi]
  40bf1f:	inc    edx
	...
  40bf48:	inc    ebx
  40bf49:	or     DWORD PTR [edi+edi*4+0x7c],ebp
  40bf4d:	mov    eax,0x21448fb5
  40bf52:	lods   eax,DWORD PTR ds:[esi]
  40bf53:	jae    0x40bfc9
  40bf55:	or     ebp,DWORD PTR [edx-0x69]
  40bf58:	je     0x40bf62
  40bf5a:	adc    eax,0x1d495000
  40bf5f:	or     ah,BYTE PTR [ebx+0x4b03e909]
  40bf65:	stos   DWORD PTR es:[edi],eax
  40bf66:	scas   eax,DWORD PTR es:[edi]
  40bf67:	inc    edx
  40bf68:	inc    ebx
  40bf69:	or     DWORD PTR [edx-0x69],ebp
  40bf6c:	inc    eax
  40bf6d:	add    eax,0x7e37fb00
  40bf72:	inc    ebp
  40bf73:	jno    0x40bf74
  40bf75:	mov    al,ds:0x2bc6617
  40bf7a:	call   0xff4b5a40
  40bf7f:	fcom   QWORD PTR fs:[edx]
  40bf82:	push   eax
  40bf83:	dec    esi
  40bf84:	les    eax,FWORD PTR [edx]
  40bf86:	call   0xff4b57bc
  40bf8b:	jo     0x40bf51
  40bf8d:	es jmp 0x40bf64
  40bf90:	(bad)
  40bf93:	cdq    
  40bf94:	pop    edi
  40bf95:	xchg   esp,eax
  40bf96:	pop    es
  40bf97:	adc    DWORD PTR [esi+0x78],edi
  40bf9a:	call   FWORD PTR [esi]
  40bf9c:	rol    ah,1
  40bf9e:	jecxz  0x40c004
  40bfa0:	pushf  
  40bfa1:	adc    dl,BYTE PTR [eax-0x7d]
  40bfa4:	aam    0xb
  40bfa6:	jne    0x40bf99
  40bfa8:	and    bh,bl
  40bfaa:	xchg   ecx,eax
  40bfab:	inc    BYTE PTR [eax]
	...
  40bfd1:	add    BYTE PTR [eax],al
  40bfd3:	add    BYTE PTR [edi+0x7c],bl
  40bfd6:	inc    ebp
  40bfd7:	icebp  
  40bfd8:	clc    
  40bfd9:	or     esi,DWORD PTR [ebp-0x1f]
  40bfdc:	pusha  
  40bfdd:	ss cli 
  40bfdf:	out    0x57,al
  40bfe1:	xchg   BYTE PTR [ebp-0x3b],bh
  40bfe4:	dec    ecx
  40bfe5:	xchg   esp,eax
  40bfe6:	sbb    eax,0x5012dd64
  40bfeb:	into   
  40bfec:	lds    ecx,FWORD PTR [esi]
  40bfee:	(bad)  
  40bfef:	cmp    al,0x43
  40bff1:	or     dh,BYTE PTR [ebp-0xf]
  40bff4:	xor    BYTE PTR [ebx-0x3],bl
  40bff7:	mov    dh,0x57
  40bff9:	jl     0x40c040
  40bffb:	mov    cl,0xb8
  40bffd:	or     esi,DWORD PTR [ebp-0xf]
  40c000:	and    BYTE PTR [edx-0x6],bl
  40c003:	sahf   
  40c004:	aas    
  40c005:	xchg   BYTE PTR [ebp-0x6f],bh
  40c008:	dec    eax
  40c009:	xchg   esp,eax
  40c00a:	or     DWORD PTR [ecx+0x48],edx
  40c00d:	or     DWORD PTR [eax],eax
  40c00f:	add    BYTE PTR [edx+0x54],ah
  40c012:	enter  0x3ac2,0x6
  40c016:	lea    eax,[ebp-0x46]
  40c019:	push   esi
  40c01a:	(bad)  
  40c01b:	jne    0x40bfc3
  40c01d:	cmc    
  40c01e:	je     0x40c02c
  40c020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c021:	jnp    0x40c02a
  40c023:	call   0x3fb3da
  40c028:	mov    cl,0x73
  40c02a:	test   DWORD PTR [eax],0xb7ffff
  40c030:	and    al,BYTE PTR [esi]
  40c032:	add    BYTE PTR [esi+0x3b],bl
  40c035:	enter  0x7,0x0
	...
  40c05d:	add    BYTE PTR [eax],al
  40c05f:	add    BYTE PTR [edi+0x4b],ah
  40c062:	not    DWORD PTR [eax+0x25]
  40c065:	jnp    0x40c06e
  40c067:	call   0x3f5756
  40c06c:	pop    ecx
  40c06d:	imul   al
  40c06f:	sti    
  40c070:	repnz add eax,0xfdbfff00
  40c076:	out    0xe7,eax
  40c078:	jo     0x40c06f
  40c07a:	(bad)  
  40c07b:	cmp    ebp,edi
  40c07d:	stc    
  40c07e:	je     0x40c085
  40c080:	dec    ebx
  40c081:	std    
  40c082:	(bad)  
  40c083:	jmp    DWORD PTR [edx-0x63038278]
  40c089:	jae    0x40c0ae
  40c08b:	lea    ebp,[edi-0x3]
  40c08e:	dec    edi
  40c08f:	(bad)  
  40c090:	dec    DWORD PTR [edi+eiz*8]
  40c093:	or     eax,0x8dfef613
  40c098:	pop    edi
  40c099:	std    
  40c09a:	dec    edi
  40c09b:	(bad)  
  40c09c:	aas    
  40c09d:	or     eax,0xf5b83ae7
  40c0a2:	dec    BYTE PTR [ebp-0xb002d1]
  40c0a8:	dec    edi
  40c0a9:	or     eax,0xf5a82ee7
  40c0ae:	dec    BYTE PTR [ebp+0x500bdd4b]
  40c0b4:	push   esp
  40c0b5:	hlt    
  40c0b6:	sti    
  40c0b7:	out    0x78,eax
  40c0b9:	xchg   BYTE PTR [ebx],dl
  40c0bb:	call   edx
  40c0bd:	sub    eax,0x7a868d14
  40c0c2:	mov    ah,0xfe
	...
  40c0ec:	mov    esi,0x30c41aea
  40c0f1:	jo     0x40c106
  40c0f3:	mov    DWORD PTR [esi+0x23458156],ecx
  40c0f9:	ret    
  40c0fa:	adc    DWORD PTR [ebp+0x43],esi
  40c0fd:	dec    edx
  40c0fe:	pop    ecx
  40c0ff:	sti    
  40c100:	or     al,0x50
  40c102:	jge    0x40c149
  40c104:	repz jae 0x40c098
  40c107:	out    dx,eax
  40c108:	dec    ebx
  40c109:	(bad)  
  40c10a:	xchg   ebp,eax
  40c10b:	xor    BYTE PTR [esi+0x46],0x4
  40c10f:	je     0x40c16f
  40c111:	jae    0x40c0a4
  40c113:	out    0x4b,eax
  40c115:	sahf   
  40c116:	test   eax,0x41a5e82
  40c11b:	je     0x40c187
  40c11d:	mov    bl,bh
  40c11f:	cmp    ecx,DWORD PTR [edx-0x448aee0e]
  40c125:	sbb    cl,BYTE PTR [edi+0x68]
  40c128:	dec    ebx
  40c129:	repnz std 
  40c12b:	mov    edi,0x1b9ad83e
  40c130:	outs   dx,DWORD PTR ds:[esi]
  40c131:	xor    DWORD PTR [edi+edi*8],eax
  40c134:	push   ds
  40c135:	loop   0x40c151
  40c137:	stos   BYTE PTR es:[edi],al
  40c138:	xor    esi,edx
  40c13a:	add    cl,BYTE PTR [ebx]
  40c13c:	mov    ebx,DWORD PTR [ebp+0x1]
  40c13f:	push   0xffc50e67
  40c144:	test   DWORD PTR ds:0x4ae2e814,edi
  40c14a:	add    al,0x0
  40c14c:	inc    eax
  40c14d:	mov    dl,0x96
  40c14f:	sub    eax,0x0
	...
  40c178:	jecxz  0x40c182
  40c17a:	jmp    0x9e083582
  40c17f:	cwde   
  40c180:	push   eax
  40c181:	icebp  
  40c182:	sbb    esi,DWORD PTR [esi+0x54]
  40c185:	or     BYTE PTR [esi-0x3f7a368],cl
  40c18b:	jmp    FWORD PTR [edx*8+0x83c125a]
  40c192:	cld    
  40c193:	pop    ds
  40c194:	xor    al,0x7e
  40c196:	fstp   QWORD PTR [ebx]
  40c198:	or     bl,BYTE PTR [ebx+0x7e241265]
  40c19e:	push   ecx
  40c19f:	adc    dl,BYTE PTR [esi-0x46a6beeb]
  40c1a5:	pop    es
  40c1a6:	dec    esi
  40c1a7:	adc    dl,BYTE PTR [esi-0x21b9af07]
  40c1ad:	pop    es
  40c1ae:	adc    dh,BYTE PTR ds:[esi-0xb]
  40c1b2:	inc    eax
  40c1b3:	dec    esi
  40c1b4:	fiadd  WORD PTR [edi]
  40c1b6:	adc    dh,BYTE PTR cs:[esi-0xf]
  40c1ba:	adc    BYTE PTR [esi-0x42],dl
  40c1bd:	pop    es
  40c1be:	push   ds
  40c1bf:	ror    ecx,0x85
  40c1c2:	adc    DWORD PTR [ebx],eax
  40c1c4:	pop    edi
  40c1c5:	adc    edx,esp
  40c1c7:	sbb    DWORD PTR [esi+ecx*4],edi
  40c1ca:	std    
  40c1cb:	adc    ah,al
  40c1cd:	pop    es
  40c1ce:	jb     0x40c198
  40c1d0:	mov    ah,0x66
  40c1d2:	and    BYTE PTR [ebp+0x43],al
  40c1d5:	or     DWORD PTR [esi+edi*2+0x10ac8b9f],edx
	...
  40c204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c205:	jge    0x40c1f4
  40c207:	sbb    edx,DWORD PTR [eax]
  40c209:	rcl    ebp,0x11
  40c20c:	inc    eax
  40c20d:	leave  
  40c20e:	push   ebx
  40c20f:	sar    DWORD PTR [edi+0x6cb4c54d],1
  40c215:	fldcw  WORD PTR [ecx+edx*1+0x7c]
  40c219:	pop    es
  40c21a:	add    BYTE PTR [ebx+ebx*2],bh
  40c21d:	or     BYTE PTR [ebp-0x23],dh
  40c220:	push   eax
  40c221:	ror    BYTE PTR [ebp-0x3febc55a],0x15
  40c228:	pop    edx
  40c229:	push   es
  40c22a:	jne    0x40c20d
  40c22c:	cmp    edi,DWORD PTR [esi-0x4]
  40c22f:	add    edx,0x4686ff05
  40c235:	(bad)  
  40c236:	je     0x40c211
  40c238:	loopne 0x40c240
  40c23a:	jbe    0xddb5c8d9
  40c240:	pop    ebx
  40c241:	jl     0x40c24b
  40c243:	push   ecx
  40c244:	test   eax,0x3a5efebe
  40c249:	jl     0x40c247
  40c24b:	inc    ecx
  40c24c:	xchg   DWORD PTR [ebp-0x34afb102],edx
  40c252:	pop    es
  40c253:	jmp    0x692c5615
  40c258:	xchg   ebx,eax
  40c259:	mov    ebp,0xce5a36fd
  40c25e:	test   BYTE PTR [ecx+0x59],dh
  40c261:	push   es
  40c262:	(bad)  
  40c263:	jmp    0x7240cbb0
	...
  40c290:	add    al,0x13
  40c292:	or     ebp,DWORD PTR [ecx]
  40c294:	mov    bl,0xd
  40c296:	adc    cl,0x48
  40c299:	jl     0x40c2a0
  40c29b:	adc    al,bh
  40c29d:	or     DWORD PTR [eax],eax
  40c29f:	jmp    0x14d3eff
  40c2a4:	dec    ebx
  40c2a5:	test   eax,0xc6afeefe
  40c2aa:	je     0x40c2a2
  40c2ac:	shr    BYTE PTR [esi+0x647282b],0x75
  40c2b3:	in     eax,0x30
  40c2b5:	mov    al,0x97
  40c2b7:	into   
  40c2b8:	cmp    esi,edx
  40c2ba:	or     al,0x0
  40c2bc:	sbb    ah,BYTE PTR [esi+0x2c]
  40c2bf:	inc    ecx
  40c2c0:	jb     0x40c2db
  40c2c2:	jne    0x40c2d0
  40c2c4:	mov    dh,BYTE PTR [eax+ebx*4-0x1]
  40c2c8:	popf   
  40c2c9:	add    DWORD PTR [ebp-0xe65348],0x68
  40c2d0:	jl     0x40c2dd
  40c2d2:	add    BYTE PTR [eax],al
  40c2d4:	out    dx,eax
  40c2d5:	mov    es,ecx
  40c2d7:	(bad)  
  40c2d8:	mov    ebp,0x20e85019
  40c2dd:	jg     0x40c2de
  40c2df:	jmp    FWORD PTR [edi-0x42013e71]
  40c2e5:	sbb    DWORD PTR [eax-0x1],edx
  40c2e8:	ja     0x40c33c
  40c2ea:	(bad)  
  40c2eb:	jmp    FWORD PTR [ebp+0x32664e22]
  40c2f1:	or     cl,BYTE PTR [ecx+0x85]
	...
  40c31b:	add    BYTE PTR [esi-0x1d0000e9],bh
  40c321:	or     BYTE PTR [ebx+esi*8-0x72fff60e],al
  40c328:	xchg   edi,eax
  40c329:	dec    esp
  40c32a:	(bad)  
  40c32b:	(bad)  
  40c32c:	cmp    eax,0xe2100221
  40c331:	or     DWORD PTR [eax],eax
  40c333:	je     0x40c2e4
  40c335:	xchg   BYTE PTR [edx+0x2c],al
  40c338:	mov    ds:0xa32ca1a1,al
  40c33d:	or     eax,ebp
  40c33f:	sub    eax,esp
  40c341:	or     DWORD PTR [eax],eax
  40c343:	or     esi,DWORD PTR [edx-0x61]
  40c346:	add    ebp,ecx
  40c348:	sbb    ecx,DWORD PTR [edx]
  40c34a:	add    BYTE PTR [eax],al
  40c34c:	das    
  40c34d:	jg     0x40c311
  40c34f:	(bad)  
  40c350:	popf   
  40c351:	adc    eax,0xbd3e428d
  40c356:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40c358:	dec    esi
  40c359:	int3   
  40c35a:	(bad)  
  40c35b:	out    0x4b,eax
  40c35d:	out    dx,al
  40c35e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c35f:	dec    DWORD PTR [edx+ebp*8-0x26b18abe]
  40c366:	jg     0x40c368
  40c368:	dec    ebx
  40c369:	lock or eax,0x9fc84775
  40c36f:	sahf   
  40c370:	ins    BYTE PTR es:[edi],dx
  40c371:	mov    dh,0xfa
  40c373:	mov    edi,0xb69afede
  40c378:	xor    esi,DWORD PTR [ecx]
  40c37a:	add    al,0xff
  40c37c:	fsubp  st(3),st
  40c37e:	sbb    cl,BYTE PTR [ecx]
	...
  40c3a8:	mov    bl,0x96
  40c3aa:	push   cs
  40c3ab:	jmp    0x40c3fe
  40c3ad:	sbb    BYTE PTR [edi+edi*8],al
  40c3b0:	mov    dh,0xf6
  40c3b2:	sbb    bh,ch
  40c3b4:	fdivr  QWORD PTR [ebx+0xf]
  40c3b7:	(bad)  
  40c3b8:	(bad)  
  40c3b9:	mov    al,0xd
  40c3bb:	jmp    DWORD PTR [esi+edi*2]
  40c3be:	mov    dl,0x2b
  40c3c0:	jns    0x40c384
  40c3c2:	sbb    al,BYTE PTR [ecx-0x4d]
  40c3c5:	pop    ebx
  40c3c6:	(bad)  
  40c3c8:	or     al,0xde
  40c3ca:	repnz dec edi
  40c3cc:	add    al,0xc6
  40c3ce:	cli    
  40c3cf:	out    0x1,eax
  40c3d1:	inc    ebp
  40c3d2:	ud0    esp,ebx
  40c3d5:	(bad)  
  40c3d6:	jbe    0x40c3d7
  40c3d8:	in     al,dx
  40c3d9:	inc    edi
  40c3da:	ret    
  40c3db:	mov    WORD PTR [ecx-0x687a8422],cs
  40c3e1:	and    al,0xf
  40c3e3:	call   esp
  40c3e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3e6:	repnz (bad) 
  40c3e8:	xchg   esi,eax
  40c3e9:	pop    esi
  40c3ea:	push   cs
  40c3eb:	inc    esp
  40c3ed:	sbb    cl,BYTE PTR [edi+0x66]
  40c3f0:	dec    ebx
  40c3f1:	repnz stc 
  40c3f3:	mov    edi,0xb69aca3f
  40c3f8:	arpl   WORD PTR [ecx+0x91eff02],si
  40c3fe:	cmc    
  40c3ff:	sbb    ebx,edx
  40c401:	pushf  
  40c402:	fisttp QWORD PTR [esi]
  40c404:	xchg   esp,eax
  40c405:	mov    esi,0x48c0d9c
  40c40a:	cmp    DWORD PTR [eax+eax*1],ebx
	...
  40c431:	add    BYTE PTR [eax],al
  40c433:	add    BYTE PTR [edx+0x1b0ec59c],al
  40c439:	pop    ecx
  40c43a:	mov    esi,0x48f14c98
  40c43f:	push   cs
  40c440:	ins    BYTE PTR es:[edi],dx
  40c441:	add    al,0xc1
  40c443:	push   ss
  40c444:	mov    eax,0xc680a604
  40c449:	(bad)  
  40c44a:	sahf   
  40c44b:	push   cs
  40c44c:	push   esp
  40c44d:	pop    ecx
  40c44e:	xchg   esi,eax
  40c44f:	pop    eax
  40c450:	pop    DWORD PTR [ebx]
  40c452:	mov    cs,WORD PTR [esi]
  40c454:	xor    esi,DWORD PTR [esi+0xc]
  40c457:	add    al,0x4b
  40c459:	mov    gs,WORD PTR [eax+0x7620cffe]
  40c45f:	push   cs
  40c460:	sub    al,0x4
  40c462:	xor    al,0x4f
  40c464:	and    eax,0xab1b6604
  40c469:	outs   dx,BYTE PTR ds:[esi]
  40c46a:	jmp    0x90fed872
  40c46f:	or     eax,0x4641040c
  40c474:	fadd   DWORD PTR [ebx]
  40c476:	inc    esi
  40c477:	cmp    al,0x9
  40c479:	adc    eax,0xf4c1b8e9
  40c47e:	addr16 inc edi
  40c480:	mov    ebx,0xc0e2e02
  40c485:	mov    fs,WORD PTR [eax+0xd]
  40c488:	fadd   QWORD PTR [ebx]
  40c48a:	jmp    0x624a0f92
  40c48f:	enter  0x1040,0x29
  40c493:	xchg   edi,eax
  40c494:	dec    edi
  40c495:	mov    eax,eax
  40c497:	add    eax,DWORD PTR [eax]
	...
  40c4bd:	add    BYTE PTR [eax],al
  40c4bf:	add    BYTE PTR [esi],dh
  40c4c1:	push   cs
  40c4c2:	adc    ah,bh
  40c4c4:	dec    ebx
  40c4c5:	or     DWORD PTR [eax],eax
  40c4c7:	jmp    0xa86c709c
  40c4cc:	dec    eax
  40c4cd:	add    al,0x75
  40c4cf:	cmc    
  40c4d0:	inc    eax
  40c4d1:	cmp    dl,BYTE PTR [edi-0x7b6db922]
  40c4d7:	xchg   ecx,eax
  40c4d8:	cmp    eax,0x9541ff04
  40c4dd:	or     BYTE PTR [eax],al
  40c4df:	jmp    0xc00252e1
  40c4e4:	inc    esi
  40c4e5:	add    al,0x50
  40c4e7:	rcl    DWORD PTR [eax],0x98
  40c4ea:	(bad)  
  40c4eb:	scas   al,BYTE PTR es:[edi]
  40c4ec:	in     al,0x8d
  40c4ee:	shl    DWORD PTR [edi-0x61affbb2],0xfc
  40c4f5:	sar    ch,0x96
  40c4f8:	ds icebp 
  40c4fa:	in     al,0x5
  40c4fc:	dec    edi
  40c4fd:	or     DWORD PTR [ecx-0xfc6494],ecx
  40c503:	jle    0x40c514
  40c505:	adc    al,0x84
  40c507:	scas   eax,DWORD PTR es:[edi]
  40c508:	inc    edi
  40c509:	or     DWORD PTR [eax],eax
  40c50b:	pop    esp
  40c50c:	pushf  
  40c50d:	(bad)  
  40c50e:	std    
  40c50f:	dec    si
  40c511:	cli    
  40c512:	add    ecx,edi
  40c514:	dec    eax
  40c515:	or     DWORD PTR [eax],eax
  40c517:	out    0xc4,al
  40c519:	xchg   edx,eax
  40c51a:	(bad)  
  40c51b:	call   0x2bd55968
  40c520:	dec    ebp
  40c521:	add    bh,bh
  40c523:	ins    BYTE PTR es:[edi],dx
	...
  40c54c:	or     DWORD PTR [edi],ebp
  40c54e:	push   eax
  40c54f:	shr    DWORD PTR [ebx+0x35],0x41
  40c553:	jmp    0xe9a48698
  40c558:	dec    eax
  40c559:	push   cs
  40c55a:	rcl    BYTE PTR [edx+ecx*2+0x546474ee],0xc7
  40c562:	std    
  40c563:	push   cs
  40c564:	push   esi
  40c565:	xchg   esp,eax
  40c566:	inc    ecx
  40c567:	add    BYTE PTR [esi-0x795a994a],dl
  40c56d:	(bad)  
  40c56e:	(bad)  
  40c56f:	out    0x14,eax
  40c571:	mov    cl,0xfe
  40c573:	jmp    FWORD PTR [ecx+0x79027546]
  40c579:	mov    cl,0x8b
  40c57b:	xchg   ebp,eax
  40c57c:	loopne 0x40c592
  40c57e:	(bad)  
  40c57f:	jmp    DWORD PTR [edi]
  40c581:	enter  0x892a,0xef
  40c585:	pop    ecx
  40c586:	(bad)  
  40c587:	inc    DWORD PTR [ebp+0x2328b59e]
  40c58d:	or     eax,0x1e6675ff
  40c592:	cdq    
  40c593:	xchg   esi,eax
  40c594:	mov    ch,0x15
  40c596:	push   DWORD PTR [ebp-0xec02]
  40c59c:	adc    ah,BYTE PTR ds:0x15b596e1
  40c5a2:	mov    DWORD PTR [ebp-0xeb5e],eax
  40c5a8:	bound  esp,QWORD PTR [ebp+0xd633c32]
  40c5ae:	push   DWORD PTR [ebp+0x0]
	...
  40c5d8:	jb     0x40c5ee
  40c5da:	(bad)  
  40c5db:	dec    edx
  40c5dd:	cwde   
  40c5de:	arpl   WORD PTR [eax],ax
  40c5e0:	xor    al,BYTE PTR [ecx]
  40c5e2:	mov    edi,0x389e1174
  40c5e7:	cmp    al,0xe3
  40c5e9:	add    eax,0x13e2b5ff
  40c5ee:	(bad)  
  40c5ef:	inc    DWORD PTR [ebp+0xbe8069b]
  40c5f5:	adc    edi,edi
  40c5f7:	dec    DWORD PTR [edx+0x35ff9251]
  40c5fd:	add    DWORD PTR [ebp-0xeadb3e],0x50
  40c604:	xor    eax,0x4bfebc5b
  40c609:	sbb    ecx,DWORD PTR [eax+ebp*8]
  40c60c:	jp     0x40c59a
  40c60e:	add    al,BYTE PTR [eax]
  40c610:	(bad)  
  40c611:	das    
  40c612:	cld    
  40c613:	test   BYTE PTR [esi],cl
  40c615:	add    ecx,DWORD PTR [ebx]
  40c617:	jmp    FWORD PTR [esp+eax*2-0xd5b01b1]
  40c61e:	sbb    DWORD PTR [edi+eiz*1],esp
  40c621:	lock add bh,bh
  40c624:	fisub  WORD PTR [edi-0x387300f7]
  40c62a:	jle    0x40c5be
  40c62c:	test   dl,dl
  40c62e:	cmp    al,0xc2
  40c630:	push   ebx
  40c631:	lock scas eax,DWORD PTR es:[edi]
  40c633:	mov    ah,BYTE PTR [edi-0x3e]
  40c636:	nop
  40c637:	or     esp,DWORD PTR [ebx-0x5a]
  40c63a:	jno    0x40c63b
	...
  40c664:	fs out 0x42,al
  40c667:	je     0x40c6b5
  40c669:	inc    eax
  40c66a:	mov    ah,0xfe
  40c66c:	fdivrp st(7),st
  40c66e:	sbb    ch,BYTE PTR [ebx-0x17f565b3]
  40c674:	mov    dl,0x84
  40c676:	or     edi,edi
  40c678:	adc    dh,BYTE PTR [ebp+0x7b9ffffb]
  40c67e:	sbb    BYTE PTR [ebx-0x6188f9],al
  40c684:	mov    dl,0xd1
  40c686:	or     DWORD PTR [ebp+0x53],esi
  40c689:	pop    edx
  40c68a:	jg     0x40c61b
  40c68c:	adc    al,0x60
  40c68e:	jge    0x40c6d5
  40c690:	bswap  ebp
  40c692:	in     al,dx
  40c693:	(bad)  
  40c694:	jle    0x40c680
  40c696:	sbb    bh,BYTE PTR [edi+0x6a0b47fc]
  40c69c:	sub    BYTE PTR [edi],bh
  40c69e:	xchg   ecx,eax
  40c69f:	pop    es
  40c6a0:	jecxz  0x40c71f
  40c6a2:	or     edi,edi
  40c6a4:	in     al,0xcc
  40c6a6:	out    0xfe,al
  40c6a8:	push   esi
  40c6a9:	or     ecx,esi
  40c6ab:	sbb    esp,DWORD PTR [eax+0x610b1e00]
  40c6b1:	or     DWORD PTR [ecx-0x16b57f59],eax
  40c6b7:	fwait
  40c6b8:	or     BYTE PTR ds:0x36b403a8,bh
  40c6be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6bf:	fmul   QWORD PTR [ebx]
  40c6c1:	or     DWORD PTR [ecx],eax
  40c6c3:	xlat   BYTE PTR ds:[ebx]
  40c6c4:	mov    edi,0xfeee00
	...
  40c6ed:	add    BYTE PTR [eax],al
  40c6ef:	add    ah,bl
  40c6f1:	jne    0x40c6f0
  40c6f3:	mov    bl,0x2c
  40c6f5:	inc    ebx
  40c6f6:	sbb    eax,0xd6508cc5
  40c6fb:	nop
  40c6fc:	dec    esp
  40c6fd:	icebp  
  40c6fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6ff:	pop    es
  40c700:	jl     0x40c702
  40c702:	rol    DWORD PTR [esi],1
  40c704:	fld    DWORD PTR [eax]
  40c706:	mov    esi,0x45686c9d
  40c70b:	enter  0x90b,0x41
  40c70f:	shl    BYTE PTR [eax],0x4a
  40c712:	jmp    0xd087e521
  40c717:	les    ecx,FWORD PTR [eax+ebp*8-0x14]
  40c71b:	jo     0x40c761
  40c71d:	add    dl,ah
  40c71f:	inc    ebx
  40c720:	mov    bh,0x15
  40c722:	sbb    DWORD PTR [edx+esi*2-0x64fbd7c3],ebx
  40c729:	add    ah,bh
  40c72b:	sti    
  40c72c:	sub    al,0x9b
  40c72e:	ins    BYTE PTR es:[edi],dx
  40c72f:	or     bl,BYTE PTR [ecx+esi*8]
  40c732:	cmp    al,0x74
  40c734:	adc    al,0x0
  40c736:	rol    DWORD PTR [ebx],cl
  40c738:	mov    eax,ds:0x4089c109
  40c73d:	dec    edx
  40c73e:	jmp    0xe940c3de
  40c743:	and    ebx,0xffffffe1
  40c746:	push   esp
  40c747:	or     ch,ah
  40c749:	adc    eax,DWORD PTR [eax]
  40c74b:	sub    esp,edx
  40c74d:	sub    edx,DWORD PTR [eax-0x67]
  40c750:	inc    eax
  40c751:	sbb    BYTE PTR [ebx+0x26],0x0
	...
  40c77c:	inc    ecx
  40c77d:	adc    al,0xc0
  40c77f:	xchg   ebp,eax
  40c780:	fmul   QWORD PTR [edi+0x68]
  40c783:	ror    DWORD PTR [eax+ecx*2+0x7651b900],cl
  40c78a:	or     BYTE PTR [ecx],dl
  40c78c:	in     al,dx
  40c78d:	add    edi,edi
  40c78f:	(bad)  
  40c790:	push   ecx
  40c791:	lahf   
  40c792:	nop
  40c793:	not    BYTE PTR [edx-0xf]
  40c796:	cwde   
  40c797:	pop    eax
  40c798:	push   ecx
  40c799:	add    bh,bh
  40c79b:	pop    esp
  40c79c:	inc    ebx
  40c79d:	add    BYTE PTR [ebp-0xf],dh
  40c7a0:	xor    BYTE PTR ds:0xd252d68f,cl
  40c7a6:	shl    ebp,0x48
  40c7a9:	push   esi
  40c7aa:	mov    edx,ebp
  40c7ac:	enter  0xebc4,0xb6
  40c7b0:	inc    edx
  40c7b1:	add    BYTE PTR [ebp-0xa6acd4],cl
  40c7b7:	xor    al,0x57
  40c7b9:	(bad)  
  40c7ba:	je     0x40c7b1
  40c7bc:	xor    bl,bl
  40c7be:	(bad)  
  40c7bf:	jmp    0xe700dc0c
  40c7c4:	(bad)
  40c7c7:	call   0x81858e14
  40c7cc:	dec    edi
  40c7cd:	or     DWORD PTR [eax],eax
  40c7cf:	jmp    0x77350c5f
  40c7d4:	dec    edx
  40c7d5:	or     DWORD PTR [eax],eax
  40c7d7:	add    eax,DWORD PTR [edi+0x73]
  40c7da:	add    bl,dl
  40c7dc:	dec    eax
  40c7dd:	jae    0x40c7df
  40c7df:	ins    BYTE PTR es:[edi],dx
	...
  40c808:	int3   
  40c809:	cli    
  40c80a:	dec    edi
  40c80b:	fs test ch,dh
  40c80e:	test   BYTE PTR [esi+0x52],0x59
  40c812:	inc    DWORD PTR [eax]
  40c814:	mov    bh,0x12
  40c816:	push   DWORD PTR [ebp+0x2e]
  40c819:	sbb    eax,0xaf263a4
  40c81e:	or     eax,eax
  40c820:	xchg   esi,eax
  40c821:	jmp    edi
  40c823:	mov    fs,edx
  40c825:	or     al,BYTE PTR [eax]
  40c827:	push   0x3fdd75
  40c82c:	pop    ebp
  40c82d:	mov    cs,WORD PTR [esi]
  40c82f:	call   0x404199
  40c834:	sar    BYTE PTR [ebp-0x30],cl
  40c837:	lea    esp,[edi]
  40c839:	sbb    edi,esi
  40c83b:	call   FWORD PTR [ebp+0x55e850ba]
  40c841:	jns    0x40c842
  40c843:	call   FWORD PTR [ebx]
  40c845:	jg     0x40c837
  40c847:	imul   DWORD PTR [ebp+0x11]
  40c84a:	call   0xff51cb5c
  40c84f:	push   0x72
  40c851:	mov    ds:0x5233cc2,al
  40c856:	push   DWORD PTR [ebp-0xe64e]
  40c85c:	popf   
  40c85d:	(bad)
  40c861:	outs   dx,BYTE PTR ds:[esi]
  40c862:	(bad)  
  40c863:	(bad)  
  40c864:	fstp   TBYTE PTR [esi-0x14]
  40c867:	imul   DWORD PTR [ebp+0xbd8311]
	...
  40c891:	add    BYTE PTR [eax],al
  40c893:	add    dh,cl
  40c895:	sbb    bh,bh
  40c897:	push   DWORD PTR [edx]
  40c899:	mov    ss,WORD PTR [ecx]
  40c89b:	push   0xbeef0a23
  40c8a0:	lods   eax,DWORD PTR ds:[esi]
  40c8a1:	dec    edi
  40c8a2:	in     al,dx
  40c8a3:	neg    DWORD PTR [ebp+0x2a75ff11]
  40c8a9:	and    dl,BYTE PTR [edi-0xee524e]
  40c8af:	mov    ch,0x7e
  40c8b1:	sbb    edi,edi
  40c8b3:	dec    DWORD PTR [ebx+0x48]
  40c8b6:	cmp    al,0x90
  40c8b8:	cld    
  40c8b9:	dec    esi
  40c8ba:	or     BYTE PTR [ebp-0xf7c105],dh
  40c8c0:	in     al,dx
  40c8c1:	mov    ah,0xf6
  40c8c3:	(bad)  
  40c8c4:	pop    esi
  40c8c5:	call   0x2f1cf8e4
  40c8ca:	or     bh,bh
  40c8cc:	sahf   
  40c8cd:	pop    ds
  40c8ce:	adc    bh,bh
  40c8d0:	int3   
  40c8d1:	pop    ss
  40c8d2:	pop    eax
  40c8d3:	nop
  40c8d4:	les    edx,FWORD PTR [esi]
  40c8d6:	or     BYTE PTR [ebp-0x3d],al
  40c8d9:	or     BYTE PTR [edi+0x806b4fe],bh
  40c8df:	jne    0x40c890
  40c8e1:	pop    ss
  40c8e2:	or     ah,BYTE PTR [edx+0x4b]
  40c8e5:	lock cmp edx,eax
  40c8e8:	dec    edi
  40c8e9:	lock lods eax,DWORD PTR ds:[esi]
  40c8eb:	mov    ah,BYTE PTR [edi-0x6b17bf90]
  40c8f1:	fiadd  WORD PTR [esi]
  40c8f3:	lea    ecx,[esi]
  40c8f5:	aam    0xb3
  40c8f7:	inc    BYTE PTR [eax]
	...
  40c91d:	add    BYTE PTR [eax],al
  40c91f:	add    dh,dh
  40c921:	inc    DWORD PTR ds:0x22d84775
  40c927:	bound  ecx,QWORD PTR [ebx-0x10]
  40c92a:	stc    
  40c92b:	mov    edi,0xe66d54
  40c930:	dec    ebx
  40c931:	lock cmp eax,0x2ef5345
  40c937:	add    BYTE PTR [ebx-0x59],cl
  40c93a:	shl    bl,0x44
  40c93d:	in     al,dx
  40c93e:	add    al,BYTE PTR [eax]
  40c940:	mov    cl,0xf2
  40c942:	cwde   
  40c943:	jmp    DWORD PTR [edx-0x4000670e]
  40c949:	and    eax,0x6dd65010
  40c94e:	adc    bh,dh
  40c950:	sbb    al,0x6c
  40c952:	mov    ah,0xfe
  40c954:	sahf   
  40c955:	or     DWORD PTR [ecx+0x7],esp
  40c958:	xchg   esi,eax
  40c959:	std    
  40c95a:	push   eax
  40c95b:	push   ecx
  40c95c:	imul   ecx,DWORD PTR [ecx],0x75bcfae9
  40c962:	in     al,0x1c
  40c964:	jmp    0x10b4:0x6303e909
  40c96b:	(bad)
  40c96e:	mov    ebx,0x59e1e4f3
  40c973:	pop    es
  40c974:	aam    0x59
  40c976:	jb     0x40c9ac
  40c978:	mov    esi,0xc40f1486
  40c97d:	cld    
  40c97e:	mov    eax,0x79d1a4b1
  40c983:	pop    es
	...
  40c9ac:	mov    ah,0x92
  40c9ae:	imul   edx,DWORD PTR [esp+esi*4],0xfffffffc
  40c9b2:	std    
  40c9b3:	sbb    eax,DWORD PTR [ebp-0x67]
  40c9b6:	cmc    
  40c9b7:	push   es
  40c9b8:	xor    DWORD PTR [ecx],ecx
  40c9ba:	add    DWORD PTR [ebx],0xffffff94
  40c9bd:	mov    dh,0xd8
  40c9bf:	push   cs
  40c9c0:	mov    esp,?
  40c9c2:	fst    QWORD PTR [eax+0x730cf150]
  40c9c8:	jl     0x40c9c6
  40c9ca:	pop    edi
  40c9cb:	and    BYTE PTR [edi-0xc],0xc5
  40c9cf:	push   es
  40c9d0:	ins    BYTE PTR es:[edi],dx
  40c9d1:	mov    dh,0xcc
  40c9d3:	push   cs
  40c9d4:	fs cld 
  40c9d6:	sar    BYTE PTR [edi],0xc2
  40c9d9:	cld    
  40c9da:	lods   eax,DWORD PTR ds:[esi]
  40c9db:	cli    
  40c9dc:	xchg   esp,eax
  40c9dd:	jne    0x40c9e9
  40c9df:	mov    ah,0xc3
  40c9e1:	xchg   BYTE PTR [eax-0x6a03bbf2],dl
  40c9e7:	push   eax
  40c9e8:	xor    esi,esp
  40c9ea:	lea    eax,[esi]
  40c9ec:	and    ecx,DWORD PTR [edx]
  40c9ee:	pop    esp
  40c9ef:	push   es
  40c9f0:	sub    al,0x10
  40c9f2:	test   eax,0x718c8f
  40c9f7:	jmp    0x40ca41
  40c9f9:	in     al,dx
  40c9fa:	mov    ebp,0x413cd701
  40c9ff:	jmp    0x57288049
  40ca04:	dec    ebp
  40ca05:	cld    
  40ca06:	(bad)  
  40ca07:	fadd   QWORD PTR [eax]
  40ca09:	in     al,0x97
  40ca0b:	xchg   ebp,eax
  40ca0c:	dec    ebp
  40ca0d:	cld    
  40ca0e:	addr16 jmp 0x40ca11
	...
  40ca35:	add    BYTE PTR [eax],al
  40ca37:	add    BYTE PTR [eax-0x14],cl
  40ca3a:	mov    ebp,0x413cb0d1
  40ca3f:	jmp    0x37288089
  40ca44:	dec    ebp
  40ca45:	cld    
  40ca46:	(bad)  
  40ca47:	pushf  
  40ca48:	shl    bl,1
  40ca4a:	jg     0x40caa1
  40ca4c:	dec    ebp
  40ca4d:	cld    
  40ca4e:	addr16 jmp 0x81feb69c
  40ca54:	sub    al,0x3d
  40ca56:	inc    ecx
  40ca57:	jmp    0xf72880a1
  40ca5c:	dec    esi
  40ca5d:	cld    
  40ca5e:	(bad)  
  40ca5f:	jl     0x40ca01
  40ca61:	jecxz  0x40caca
  40ca63:	xor    eax,0x7de7fc4d
  40ca68:	push   ss
  40ca69:	cld    
  40ca6a:	(bad)  
  40ca6b:	ficom  WORD PTR [ebp*8-0xeb9290a]
  40ca72:	mov    BYTE PTR [esi+0x4e],bl
  40ca75:	cld    
  40ca76:	(bad)  
  40ca77:	jl     0x40cad0
  40ca79:	hlt    
  40ca7a:	(bad)  
  40ca7b:	mov    esi,0xb60c764e
  40ca80:	int3   
  40ca81:	add    ebp,eax
  40ca83:	mov    WORD PTR [ebp-0x4],cs
  40ca86:	(bad)  
  40ca87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca88:	cld    
  40ca89:	clc    
  40ca8a:	neg    BYTE PTR [esi+0x666cf14e]
  40ca90:	inc    esi
  40ca91:	cli    
  40ca92:	(bad)  
  40ca93:	and    al,0x47
  40ca95:	lock lock add ah,al
  40ca99:	add    al,0xff
  40ca9b:	inc    DWORD PTR [eax]
	...
  40cac1:	add    BYTE PTR [eax],al
  40cac3:	add    BYTE PTR [edi],bl
  40cac5:	add    ebp,eax
  40cac7:	mov    bh,0x53
  40cac9:	add    eax,0x1e0c900
  40cace:	call   DWORD PTR [ecx+ebx*4+0x21]
  40cad2:	add    esp,0xffffffa6
  40cad5:	lahf   
  40cad6:	(bad)  
  40cad7:	imul   edx,DWORD PTR [eax+0x4],0x848a0875
  40cade:	mov    bh,bh
  40cae0:	test   DWORD PTR [esi+0x45],edi
  40cae3:	cld    
  40cae4:	cli    
  40cae5:	push   es
  40cae6:	add    bh,ch
  40cae8:	push   esp
  40cae9:	popf   
  40caea:	call   0xe6ac:0x6806a33c
  40caf1:	(bad)  
  40caf2:	(bad)  
  40caf3:	(bad)  
  40caf4:	(bad)  
  40caf6:	out    0x47,al
  40caf8:	push   ds
  40caf9:	add    al,0xff
  40cafb:	push   0x3fd11e
  40cb00:	inc    ebp
  40cb01:	retf   0x2944
  40cb04:	repz push es
  40cb06:	push   DWORD PTR [ebp-0x56]
  40cb09:	push   ds
  40cb0a:	nop
  40cb0b:	std    
  40cb0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb0d:	add    eax,0xc666b468
  40cb12:	(bad)  
  40cb13:	addr16 jo 0x40cb1c
  40cb16:	add    BYTE PTR [eax-0x17f9746b],al
  40cb1c:	add    al,0x2
  40cb1e:	(bad)  
  40cb1f:	call   FWORD PTR [edx]
  40cb21:	cmp    eax,0x9e72413c
	...
  40cb4e:	add    BYTE PTR [eax],al
  40cb50:	jb     0x40cad8
  40cb52:	(bad)  
  40cb53:	jne    0x40cbbf
  40cb55:	push   ds
  40cb56:	pop    ebx
  40cb57:	(bad)  
  40cb58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb59:	add    eax,0xc7270868
  40cb5e:	(bad)  
  40cb5f:	addr16 dec ebx
  40cb61:	out    dx,al
  40cb62:	add    al,BYTE PTR [eax]
  40cb64:	retf   
  40cb65:	mov    cl,BYTE PTR [ebp+0x6392307]
  40cb6b:	jmp    DWORD PTR [ebx+edi*2]
  40cb6e:	mov    ?,ebx
  40cb70:	sbb    al,0xfd
  40cb72:	cli    
  40cb73:	out    0x7c,eax
  40cb75:	pop    esp
  40cb76:	add    al,0xff
  40cb78:	add    ch,BYTE PTR [esi]
  40cb7a:	(bad)  
  40cb7b:	call   FWORD PTR [edi+0x76ff1777]
  40cb81:	in     al,0x1a
  40cb83:	sbb    eax,ebx
  40cb85:	dec    edx
  40cb86:	add    al,0xb
  40cb88:	or     edi,DWORD PTR [ecx+ecx*8-0x3e033599]
  40cb8f:	dec    DWORD PTR [eax+ecx*2+0x2ad49255]
  40cb96:	mov    bl,0x4f
  40cb98:	arpl   ax,si
  40cb9a:	add    ch,bh
  40cb9c:	add    eax,0xa3c9e98
  40cba1:	lock mov dl,0xfe
  40cba4:	ds call 0x33940c4
  40cbaa:	add    al,0x58
  40cbac:	xor    esi,ecx
  40cbae:	add    ch,bh
  40cbb0:	fld    QWORD PTR [edi+0x3c8f]
	...
  40cbda:	add    BYTE PTR [eax],al
  40cbdc:	or     dh,al
  40cbde:	mov    dl,0xfe
  40cbe0:	push   ss
  40cbe1:	clc    
  40cbe2:	jmp    0xcee8:0x2dab860
  40cbe9:	popa   
  40cbea:	add    edi,edi
  40cbec:	sub    BYTE PTR [ebp+0x7716000b],0xf0
  40cbf3:	or     BYTE PTR [edi-0xeff9245],0xe
  40cbfa:	add    esi,DWORD PTR [ebp+0x43]
  40cbfd:	enter  0x8ab2,0x4c
  40cc01:	or     BYTE PTR [esi+0x12f58f8d],ah
  40cc07:	push   ds
  40cc08:	cmp    al,0x7f
  40cc0a:	loope  0x40cbf7
  40cc0c:	(bad)  
  40cc0e:	lea    eax,[ebx]
  40cc10:	mov    eax,ds:0x5379862c
  40cc15:	loope  0x40cc88
  40cc17:	add    ebx,DWORD PTR [ecx+edi*8]
  40cc1a:	add    ah,BYTE PTR [eax]
  40cc1c:	adc    al,0x7f
  40cc1e:	loope  0x40cc0b
  40cc20:	retf   
  40cc21:	clc    
  40cc22:	add    eax,DWORD PTR gs:[edi+edi*2]
  40cc26:	pop    ebp
  40cc27:	add    esi,DWORD PTR [esi+0x1]
  40cc2a:	inc    ecx
  40cc2b:	int    0xc1
  40cc2d:	clc    
  40cc2e:	dec    ebp
  40cc2f:	int    0xa
  40cc31:	push   cs
  40cc32:	jmp    0x9a269c8f
  40cc37:	retf   0x3447
  40cc3a:	test   BYTE PTR [ebx+ecx*2+0x9],0xe9
  40cc3f:	add    eax,DWORD PTR [eax]
	...
  40cc65:	add    BYTE PTR [eax],al
  40cc67:	add    BYTE PTR [ebx+0x24],cl
  40cc6a:	inc    edx
  40cc6b:	add    edi,DWORD PTR [esi]
  40cc6d:	add    DWORD PTR [ecx],edx
  40cc6f:	aaa    
  40cc70:	sbb    al,0x9
  40cc72:	jmp    0x6a41ec05
  40cc77:	cld    
  40cc78:	dec    edx
  40cc79:	jg     0x40cc53
  40cc7b:	push   es
  40cc7c:	jnp    0x40cc0a
  40cc7e:	adc    al,BYTE PTR [esi]
  40cc80:	and    eax,0xf75fb28a
  40cc85:	jge    0x40cc6b
  40cc87:	imul   eax,DWORD PTR [ebx+ecx*1+0x7e840445],0x5886ebed
  40cc92:	jmp    0xf69af9a
  40cc97:	inc    ebp
  40cc98:	dec    ebx
  40cc99:	popa   
  40cc9a:	pop    ecx
  40cc9b:	inc    eax
  40cc9c:	or     cl,BYTE PTR [ecx]
  40cc9e:	rcr    DWORD PTR [ecx-0x4a00074c],1
  40cca4:	inc    ebp
  40cca5:	leave  
  40cca6:	jae    0x40ccec
  40cca8:	dec    eax
  40cca9:	jle    0x40ccb3
  40ccab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccac:	arpl   WORD PTR [ecx],bp
  40ccae:	sub    BYTE PTR ds:[edi-0x74],al
  40ccb2:	ret    
  40ccb3:	in     eax,dx
  40ccb4:	inc    ebp
  40ccb5:	leave  
  40ccb6:	je     0x40ccec
  40ccb8:	dec    eax
  40ccb9:	push   ds
  40ccba:	xor    bh,al
  40ccbc:	(bad)
  40ccc0:	mov    DWORD PTR [edx+0x0],ecx
  40ccc3:	push   0xffffff8b
  40ccc5:	xor    al,0x3f
  40ccc7:	sub    BYTE PTR [edi+0x9],al
  40ccca:	jne    0x40ccbd
	...
  40ccf4:	dec    ecx
  40ccf5:	push   ds
  40ccf6:	and    al,0x1f
  40ccf8:	xchg   BYTE PTR [ecx],cl
  40ccfa:	jmp    0x40cd0c
  40ccfc:	or     DWORD PTR gs:[edx-0x18],ebp
  40cd00:	dec    ecx
  40cd01:	cmp    eax,DWORD PTR ds:[esi]
  40cd04:	mov    cs,WORD PTR [ecx]
  40cd06:	call   esp
  40cd08:	adc    al,0x37
  40cd0a:	inc    ecx
  40cd0b:	jmp    0xe24c98dd
  40cd10:	or     BYTE PTR [ecx+eiz*1+0x26],bh
  40cd14:	xor    DWORD PTR [edi+edi*1],0xffffffa8
  40cd18:	dec    eax
  40cd19:	clc    
  40cd1a:	adc    al,0xd5
  40cd1c:	or     cl,BYTE PTR [edx+0x0]
  40cd1f:	push   0xffffff84
  40cd21:	or     edi,edi
  40cd23:	fsubr  QWORD PTR [edi+esi*1+0x41]
  40cd27:	jmp    0xb67bd9bd
  40cd2c:	wbinvd 
  40cd2e:	add    cl,ch
  40cd30:	dec    eax
  40cd31:	or     ebx,ebp
  40cd33:	call   0x43035147
  40cd38:	nop
  40cd39:	leave  
  40cd3a:	pop    es
  40cd3b:	jmp    0xe7c020f
  40cd40:	or     BYTE PTR [ecx],cl
  40cd42:	add    BYTE PTR [eax],al
  40cd44:	es sub bh,bh
  40cd47:	xor    eax,0x414a49
  40cd4c:	popf   
  40cd4d:	pop    ds
  40cd4e:	cmp    al,0x3e
  40cd50:	and    ecx,DWORD PTR ds:0xa36c483
  40cd56:	adc    eax,0x24
	...
  40cd7f:	add    BYTE PTR [esp+ecx*2],bl
  40cd82:	add    bh,al
  40cd84:	daa    
  40cd85:	ss aas 
  40cd87:	inc    ecx
  40cd88:	and    cl,BYTE PTR [ebx]
  40cd8a:	add    BYTE PTR [eax],al
  40cd8c:	xor    cl,dh
  40cd8e:	push   ebx
  40cd8f:	mov    ecx,esi
  40cd91:	mov    edx,es
  40cd93:	lock xor DWORD PTR [ebx+eax*2+0x72cb2908],eax
  40cd9b:	or     esi,DWORD PTR [ecx+0x76]
  40cd9e:	or     al,0x0
  40cda0:	push   ss
  40cda1:	adc    BYTE PTR [eax+0x77fe238],al
  40cda7:	sub    esp,DWORD PTR [edx]
  40cda9:	push   esp
  40cdaa:	leave  
  40cdab:	ret    0xada
  40cdae:	cmp    BYTE PTR [eax],0x9c
  40cdb1:	jle    0x40cdc3
  40cdb3:	sbb    edi,0x35
  40cdb6:	aas    
  40cdb7:	inc    ecx
  40cdb8:	loop   0x40cdc4
  40cdba:	jne    0x40cdc3
  40cdbc:	cdq    
  40cdbd:	retf   0xc959
  40cdc0:	jo     0x40cdc7
  40cdc2:	add    BYTE PTR [eax+0x3e74889a],al
  40cdc8:	sub    DWORD PTR [esi+0xc],ebx
  40cdcb:	dec    edx
  40cdcc:	xor    edi,ebp
  40cdce:	add    DWORD PTR [ebx],ecx
  40cdd0:	inc    eax
  40cdd1:	jle    0x40cdd9
  40cdd3:	sbb    DWORD PTR [edi],0x6
  40cdd6:	add    DWORD PTR [ebp-0x5a],esi
  40cdd9:	and    eax,0x856ebc0
  40cdde:	dec    ebp
  40cddf:	or     al,0xf9
  40cde1:	dec    esi
  40cde2:	or     al,0x5
	...
  40ce0c:	dec    ebx
  40ce0d:	loopne 0x40ce15
  40ce0f:	add    BYTE PTR [ebx-0x5f],cl
  40ce12:	loop   0x40ce15
  40ce14:	sti    
  40ce15:	xlat   BYTE PTR ds:[ebx]
  40ce16:	sbb    al,0x8d
  40ce18:	pop    esp
  40ce19:	mov    bh,0x52
  40ce1b:	mov    edi,esi
  40ce1d:	out    0x44,eax
  40ce1f:	push   eax
  40ce20:	dec    esp
  40ce21:	cmp    eax,0xb5335210
  40ce26:	call   0x9c9:0x5d483cfe
  40ce2d:	call   0x8750f934
  40ce32:	jne    0x40ce40
  40ce34:	and    al,0xf5
  40ce36:	or     ch,BYTE PTR [edx+0x4b]
  40ce39:	sbb    al,BYTE PTR [edi+edi*8]
  40ce3c:	ds enter 0x4140,0x4b
  40ce41:	arpl   di,ax
  40ce43:	(bad)  
  40ce45:	and    BYTE PTR [edi+0x65],dh
  40ce48:	shr    BYTE PTR [esi+edi*8+0x466d4769],cl
  40ce4f:	lock fwait
  40ce51:	dec    eax
  40ce52:	test   BYTE PTR [ebx+0x6d4ee4],0xce
  40ce59:	lods   al,BYTE PTR ds:[esi]
  40ce5a:	repnz dec edi
  40ce5c:	aam    0xb4
  40ce5e:	(bad)  
  40ce5f:	(bad)  
  40ce60:	ss clc 
  40ce62:	inc    eax
  40ce63:	inc    ecx
  40ce64:	dec    ebx
  40ce65:	arpl   di,ax
  40ce67:	or     edx,DWORD PTR [eax+0x20]
  40ce6a:	jbe    0x40ce9f
  40ce6c:	(bad)  
  40ce6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce6e:	repnz add BYTE PTR [eax],0x0
	...
  40ce96:	add    BYTE PTR [eax],al
  40ce98:	xor    ebp,esp
  40ce9a:	add    dh,BYTE PTR [eax+eax*2+0x7b]
  40ce9e:	inc    ebx
  40ce9f:	or     BYTE PTR [ebx],cl
  40cea1:	nop
  40cea2:	jmp    0x738a:0xfefec7b4
  40cea9:	push   esp
  40ceaa:	inc    esi
  40ceab:	lock test BYTE PTR [eax],cl
  40ceae:	pop    ecx
  40ceaf:	or     al,0x18
  40ceb1:	neg    BYTE PTR [eax+0x8]
  40ceb4:	arpl   cx,dx
  40ceb6:	jmp    FWORD PTR fs:[ebp+0x62]
  40ceba:	jmp    0x1939de4f
  40cebf:	push   DWORD PTR [edi]
  40cec1:	and    eax,0x8a4b44ff
  40cec6:	lods   al,BYTE PTR ds:[esi]
  40cec7:	or     al,0xe1
  40cec9:	pop    es
  40ceca:	scas   al,BYTE PTR es:[edi]
  40cecb:	jns    0x40cf14
  40cecd:	cmc    
  40cece:	sti    
  40cecf:	das    
  40ced0:	jge    0x40cf1c
  40ced2:	jmp    0x6242d759
  40ced7:	ret    
  40ced8:	xchg   ecx,eax
  40ced9:	ret    0xcaa
  40cedc:	dec    ebx
  40cedd:	pop    esi
  40cede:	jb     0x40ced0
  40cee0:	sbb    eax,0x9ffeed7f
  40cee5:	add    DWORD PTR [esi+0x19],esi
  40cee8:	pop    eax
  40cee9:	xor    al,0x28
  40ceeb:	add    al,0xc8
  40ceed:	int    0xf0
  40ceef:	push   ebx
  40cef0:	cld    
  40cef1:	jle    0x40cee0
  40cef3:	(bad)  
  40cef4:	jg     0x40cef7
  40cef6:	push   esi
  40cef7:	sbb    DWORD PTR [esp+esi*1],ebx
  40cefa:	test   al,0x3
	...
  40cf24:	enter  0xf0cd,0x8a
  40cf28:	ja     0x40cf43
  40cf2a:	jo     0x40cf2e
  40cf2c:	jae    0x40cef0
  40cf2e:	sub    dl,BYTE PTR [eax]
  40cf30:	dec    ebx
  40cf31:	pop    esi
  40cf32:	(bad)  
  40cf33:	lock leave 
  40cf35:	int    0x10
  40cf37:	push   DWORD PTR [edi]
  40cf39:	add    eax,0xf4da0311
  40cf3e:	adc    eax,0xe57e8b0b
  40cf43:	int3   
  40cf44:	mov    bl,BYTE PTR [ecx]
  40cf46:	jmp    0x1145e749
  40cf4b:	loopne 0x40cf33
  40cf4d:	hlt    
  40cf4e:	push   ebp
  40cf50:	inc    ecx
  40cf51:	leave  
  40cf52:	jae    0x40cf39
  40cf54:	xchg   edi,eax
  40cf55:	retf   0xe90f
  40cf58:	jge    0x40cfd7
  40cf5a:	adc    al,0xde
  40cf5c:	repz sbb al,ch
  40cf5f:	lods   al,BYTE PTR ds:[esi]
  40cf60:	dec    ebx
  40cf61:	hlt    
  40cf62:	(bad)  
  40cf63:	loop   0x40ceed
  40cf65:	jge    0x40cf6b
  40cf67:	mov    al,0x8a
  40cf69:	add    al,0x0
  40cf6b:	push   ecx
  40cf6c:	xor    al,0x34
  40cf6e:	inc    ecx
  40cf6f:	jmp    0x287e7254
  40cf74:	dec    edi
  40cf75:	loope  0x40cf02
  40cf77:	jg     0x40cfb6
  40cf79:	repz or ch,BYTE PTR [ecx-0x997fb4d]
  40cf80:	ins    DWORD PTR es:[edi],dx
  40cf81:	dec    edx
  40cf82:	add    BYTE PTR [ecx],al
  40cf84:	(bad)  
  40cf85:	xor    eax,DWORD PTR [ecx-0x17]
	...
  40cfb0:	xor    BYTE PTR [ecx-0x6a],dh
  40cfb3:	jle    0x40cfca
  40cfb5:	(bad)  
  40cfb6:	mov    edi,0xa2c4e6
  40cfbb:	jmp    0x65855608
  40cfc0:	cwde   
  40cfc1:	hlt    
  40cfc2:	je     0x40cfb1
  40cfc4:	cmc    
  40cfc5:	sbb    al,0x1f
  40cfc7:	push   ss
  40cfc8:	xchg   BYTE PTR [ecx],cl
  40cfca:	and    DWORD PTR ds:0xf6c00050,0xffffffd3
  40cfd1:	call   0x6400:0x5f48e900
  40cfd8:	xor    ecx,0x4f
  40cfdb:	ret    
  40cfdc:	lds    ebp,FWORD PTR [ebx-0x51]
  40cfdf:	out    0x7,al
  40cfe1:	or     edi,edi
  40cfe3:	xchg   esp,eax
  40cfe4:	mov    ah,0xf2
  40cfe6:	adc    al,0xce
  40cfe8:	ins    DWORD PTR es:[edi],dx
  40cfe9:	dec    edx
  40cfea:	add    BYTE PTR [edx-0x74],ch
  40cfed:	pop    ss
  40cfee:	or     eax,DWORD PTR [eax]
  40cff0:	jb     0x40cff5
  40cff2:	test   DWORD PTR [edx-0x5d],ebp
  40cff5:	pop    es
  40cff6:	add    bh,bh
  40cff8:	(bad)  
  40cffa:	std    
  40cffb:	adc    eax,0x413289
  40d000:	icebp  
  40d001:	rol    BYTE PTR [edx],0x83
  40d004:	push   0x60
  40d006:	je     0x40d00d
  40d008:	mov    edx,DWORD PTR [eax+0x1]
  40d00b:	add    BYTE PTR [edx-0x7e],dh
  40d00e:	inc    ebx
  40d00f:	hlt    
  40d010:	inc    edx
  40d011:	pop    edi
  40d012:	add    bh,bh
	...
  40d03c:	pop    ds
  40d03d:	cmc    
  40d03e:	out    0x14,al
  40d040:	xchg   ebp,eax
  40d041:	cmc    
  40d042:	std    
  40d043:	or     esi,edx
  40d045:	add    al,0x84
  40d047:	cmp    DWORD PTR [ebx],esi
  40d049:	pop    es
  40d04a:	add    BYTE PTR [ebx+0xefef157],al
  40d050:	sahf   
  40d051:	and    al,0x1
  40d053:	add    BYTE PTR [edx],dh
  40d055:	xchg   DWORD PTR [esi],esi
  40d057:	add    BYTE PTR ds:0x2201248b,dl
  40d05d:	pop    es
  40d05e:	push   eax
  40d05f:	mov    ebp,DWORD PTR [edi]
  40d061:	icebp  
  40d062:	inc    eax
  40d063:	push   edx
  40d064:	retf   0x8b63
  40d067:	jmp    DWORD PTR [ebp+0x4f]
  40d06a:	mov    DWORD PTR [ebp-0x66],eax
  40d06d:	hlt    
  40d06e:	jae    0x40d064
  40d070:	xchg   ebp,eax
  40d071:	jp     0x40d05b
  40d073:	push   edx
  40d074:	mov    bl,BYTE PTR [edx-0x337a0077]
  40d07a:	inc    ebx
  40d07b:	lock loop 0x40d084
  40d07e:	add    BYTE PTR [eax],al
  40d080:	sbb    eax,0xb200ec4a
  40d085:	push   es
  40d086:	add    BYTE PTR [ebx+0x413f3da7],al
  40d08c:	mov    ds:0x4b527506,al
  40d091:	mov    BYTE PTR [esi],ah
  40d093:	inc    eax
  40d094:	or     ah,al
  40d096:	jmp    0x2350:0x2dfff29
  40d09d:	int3   
  40d09e:	inc    edx
  40d09f:	inc    ecx
	...
  40d0c8:	dec    ebx
  40d0c9:	sti    
  40d0ca:	jne    0x40d0b4
  40d0cc:	jae    0x40d0e2
  40d0ce:	pop    edi
  40d0cf:	add    BYTE PTR [ebx-0x9],cl
  40d0d2:	ret    0x5373
  40d0d5:	pop    eax
  40d0d6:	sub    DWORD PTR [eax+0xa],eax
  40d0d9:	loopne 0x40d0c5
  40d0db:	or     eax,0x5002e007
  40d0e0:	repz push ss
  40d0e2:	inc    esp
  40d0e3:	inc    ecx
  40d0e4:	dec    ebx
  40d0e5:	mov    bl,0x75
  40d0e7:	call   0x9f414f
  40d0ec:	dec    ebx
  40d0ed:	out    0xc2,eax
  40d0ef:	jae    0x40d16a
  40d0f1:	sbb    BYTE PTR [ecx],dh
  40d0f3:	inc    eax
  40d0f4:	mov    ah,al
  40d0f6:	jmp    0xb350:0x2e090f1
  40d0fd:	iret   
  40d0fe:	inc    edx
  40d0ff:	inc    ecx
  40d100:	dec    ebx
  40d101:	mov    esi,DWORD PTR [ebp-0x18]
  40d104:	and    ebx,DWORD PTR [esi+ebx*2+0x0]
  40d108:	dec    ebx
  40d109:	xchg   DWORD PTR [edx],ebx
  40d10b:	push   0x432047
  40d110:	repz inc edi
  40d112:	pop    eax
  40d113:	add    BYTE PTR [ebx-0x50],cl
  40d116:	push   0x3c
  40d118:	mov    esp,DWORD PTR [ecx+0x485eff02]
  40d11e:	jmp    0x40d199
  40d120:	jle    0x40d102
  40d122:	add    cl,BYTE PTR [ebx]
  40d124:	or     edi,DWORD PTR [ebp+0x34868d6c]
  40d12a:	push   ebx
  40d12b:	push   0x0
	...
  40d151:	add    BYTE PTR [eax],al
  40d153:	add    BYTE PTR [edx+0x23],cl
  40d156:	jbe    0x40d150
  40d158:	mov    bl,0x8
  40d15a:	mov    dl,0xfd
  40d15c:	mov    ch,0xf1
  40d15e:	sbb    eax,0x158b776
  40d163:	inc    esi
  40d164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d165:	icebp  
  40d166:	or     eax,0x73f9078a
  40d16b:	inc    esi
  40d16c:	lahf   
  40d16d:	pop    eax
  40d16e:	xchg   ebx,eax
  40d16f:	add    DWORD PTR [ebx+edi*2-0xcc4150f],ecx
  40d176:	in     eax,dx
  40d177:	sti    
  40d178:	jge    0x40d1f5
  40d17a:	fst    QWORD PTR [ebx+eiz*2+0x1d]
  40d17e:	fdiv   st(3),st
  40d180:	ins    DWORD PTR es:[edi],dx
  40d181:	jg     0x40d1ae
  40d183:	call   0x5024551
  40d188:	xlat   BYTE PTR ds:[ebx]
  40d189:	cmp    al,0x6a
  40d18b:	jns    0x40d1f4
  40d18d:	or     BYTE PTR ds:0xe908e32a,dh
  40d193:	jmp    0xf033:0xc33f106
  40d19a:	outs   dx,BYTE PTR ds:[esi]
  40d19b:	sti    
  40d19c:	xor    eax,0x2dec13f1
  40d1a1:	ja     0x40d184
  40d1a3:	jmp    0x40d224
  40d1a5:	mov    BYTE PTR [ebp+0x79771dfb],cl
  40d1ab:	sti    
  40d1ac:	lahf   
  40d1ad:	add    DWORD PTR [ecx+0x75f0c44e],edx
  40d1b3:	sti    
  40d1b4:	jg     0x40d193
  40d1b6:	ins    DWORD PTR es:[edi],dx
  40d1b7:	jno    0x40d1b9
	...
  40d1dd:	add    BYTE PTR [eax],al
  40d1df:	add    BYTE PTR [ebx-0x1f],dl
  40d1e2:	and    eax,0x5df0f583
  40d1e7:	jno    0x40d1e4
  40d1e9:	loope  0x40d18f
  40d1eb:	(bad)  
  40d1ec:	in     eax,0xf0
  40d1ee:	dec    ebp
  40d1ef:	jno    0x40d1e0
  40d1f1:	loope  0x40d19f
  40d1f3:	(bad)  
  40d1f4:	aad    0xf0
  40d1f6:	cmp    eax,0xffe1e371
  40d1fb:	hlt    
  40d1fc:	(bad)  
  40d1fd:	out    dx,eax
  40d1fe:	inc    BYTE PTR [eax-0x27]
  40d201:	out    dx,al
  40d202:	(bad)  
  40d203:	es mov al,0x75
  40d206:	cld    
  40d207:	push   ds
  40d208:	pop    edx
  40d209:	sub    al,0x3f
  40d20b:	test   al,0x48
  40d20d:	mov    ebx,es
  40d20f:	in     eax,0xb0
  40d211:	xchg   edi,eax
  40d212:	sti    
  40d213:	push   es
  40d214:	nop
  40d215:	rol    ecx,0xd9
  40d218:	dec    eax
  40d219:	push   esi
  40d21a:	mov    eax,DWORD PTR ds:0xee00631c
  40d220:	sti    
  40d221:	add    al,ch
  40d223:	call   0x5b90:0x72feefc3
  40d22a:	call   0x49d828
  40d22f:	loop   0x40d1b9
  40d231:	jl     0x40d24e
  40d233:	jmp    0x38c8:0xdbeb488d
  40d23a:	or     eax,0x37894a3d
  40d23f:	jecxz  0x40d1fc
  40d241:	push   es
  40d242:	(bad)  
  40d243:	jmp    0x40d248
	...
  40d26c:	dec    eax
  40d26d:	in     al,0x1
  40d26f:	xchg   edx,eax
  40d270:	dec    ebx
  40d271:	inc    ecx
  40d272:	cmp    ebp,DWORD PTR [edx-0x55751c63]
  40d278:	jge    0x40d23c
  40d27a:	shr    ebp,0x48
  40d27d:	push   esi
  40d27e:	mov    ecx,DWORD PTR [ebp+0x1eb3cbc5]
  40d284:	add    BYTE PTR [ebp+0xc],dh
  40d287:	sub    DWORD PTR [ebp+0x4566fe7d],0x91e474c9
  40d291:	ret    0xf9c1
  40d294:	dec    eax
  40d295:	lock je 0x40d275
  40d298:	lock mov ch,BYTE PTR [ebx+0x9f38d00]
  40d29f:	rcl    BYTE PTR [esi+0x70c95f08],0x1c
  40d2a6:	add    bh,bh
  40d2a8:	idiv   edi
  40d2aa:	(bad)  
  40d2ab:	jne    0x40d25f
  40d2ad:	jecxz  0x40d318
  40d2af:	sti    
  40d2b0:	dec    ebp
  40d2b1:	repz mov eax,DWORD PTR [ebp+0x42]
  40d2b5:	pop    esp
  40d2b6:	push   DWORD PTR [ebp+0x7e]
  40d2b9:	jecxz  0x40d2fa
  40d2bb:	(bad)  
  40d2bc:	dec    ebp
  40d2bd:	repz or eax,eax
  40d2c0:	popf   
  40d2c1:	outs   dx,DWORD PTR ds:[esi]
  40d2c2:	cli    
  40d2c3:	add    dh,BYTE PTR [edx+0xb]
  40d2c6:	push   DWORD PTR [ebp+0x6e]
  40d2c9:	icebp  
  40d2ca:	jae    0x40d2c4
  40d2cc:	call   0x0:0xff92c6
	...
  40d2f7:	add    BYTE PTR [ebp-0x9f04003],cl
  40d2fd:	rol    DWORD PTR [eax],1
  40d2ff:	add    BYTE PTR [edx-0x7e],dh
  40d302:	inc    ebx
  40d303:	in     al,dx
  40d304:	fldlg2 
  40d306:	jle    0x40d347
  40d308:	bound  eax,QWORD PTR [eax]
  40d30a:	test   cl,cl
  40d30c:	xor    BYTE PTR [ebx],cl
  40d30e:	add    BYTE PTR [edi+0xa],dl
  40d311:	aas    
  40d312:	(bad)  
  40d313:	(bad)  
  40d314:	in     eax,dx
  40d315:	add    BYTE PTR [ebx-0x30],0xcd
  40d319:	pop    esi
  40d31a:	shr    BYTE PTR [eax-0x6f],1
  40d31d:	xor    BYTE PTR [ecx+0x0],al
  40d320:	retf   0x5b0e
  40d323:	add    BYTE PTR [edx],ah
  40d325:	pop    ebx
  40d326:	push   DWORD PTR [ebp-0x4e]
  40d329:	pop    ebp
  40d32a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d32b:	aas    
  40d32c:	xor    eax,DWORD PTR ds:0x55917e8
  40d332:	add    BYTE PTR [eax+0x6d],dl
  40d335:	pop    esi
  40d336:	shr    BYTE PTR [eax-0x27],1
  40d339:	xor    BYTE PTR [ecx+0x0],al
  40d33c:	dec    ebx
  40d33d:	dec    eax
  40d33e:	or     ebx,DWORD PTR [ebx+0x4b]
  40d341:	loopne 0x40d39f
  40d343:	pop    ecx
  40d344:	inc    eax
  40d345:	and    BYTE PTR [eax+0xc],dh
  40d348:	inc    eax
  40d349:	adc    dh,BYTE PTR [eax+0x8]
  40d34c:	push   eax
  40d34d:	sub    DWORD PTR [ecx],ecx
  40d34f:	test   DWORD PTR [esi],edi
  40d351:	loop   0x40d355
  40d353:	add    BYTE PTR [eax+0x39],al
  40d356:	outs   dx,DWORD PTR ds:[esi]
  40d357:	or     DWORD PTR [ebp+eiz*4+0xae],eax
	...
  40d382:	add    BYTE PTR [eax],al
  40d384:	dec    ebx
  40d385:	loopne 0x40d389
  40d387:	jmp    0x40d3cd
  40d389:	daa    
  40d38a:	aas    
  40d38b:	mov    ah,0x4b
  40d38d:	loopne 0x40d391
  40d38f:	add    BYTE PTR [edi-0x7b473d4d],cl
  40d395:	div    edi
  40d397:	(bad)  
  40d398:	jns    0x40d3c8
  40d39a:	cmp    al,0x7
  40d39c:	(bad)  
  40d39d:	fistp  QWORD PTR [edi+0x2e06344]
  40d3a3:	add    BYTE PTR [ebx+0x60],cl
  40d3a6:	cmp    BYTE PTR [eax],al
  40d3a8:	dec    esp
  40d3a9:	fs dec esp
  40d3ab:	add    cl,BYTE PTR [ebx-0x20]
  40d3ae:	dec    edi
  40d3af:	call   0xff388220
  40d3b4:	rcr    BYTE PTR [eax+ecx*8],cl
  40d3b7:	cmp    BYTE PTR [esi+0x6a7502c8],0x18
  40d3be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3bf:	sub    ecx,DWORD PTR [edx+0x1774f7e0]
  40d3c5:	mov    BYTE PTR [ecx+0xbe04b59],ch
  40d3cb:	rol    BYTE PTR [ebp+ebx*2+0x6],0x2
  40d3d0:	dec    ebx
  40d3d1:	loopne 0x40d392
  40d3d3:	inc    esp
  40d3d4:	repz loopne 0x40d3d9
  40d3d7:	add    BYTE PTR [ebx-0x77],cl
  40d3da:	add    DWORD PTR [edx],eax
  40d3dc:	dec    ebx
  40d3dd:	or     ecx,ebp
  40d3df:	test   BYTE PTR [edi-0x1f],ch
  40d3e2:	out    0x6e,eax
  40d3e4:	push   esp
  40d3e5:	adc    bl,0xdf
	...
  40d410:	add    eax,0x4b054144
  40d415:	or     ecx,ebp
  40d417:	jmp    0x6bc8:0x3e90796
  40d41e:	inc    ecx
  40d41f:	add    eax,0x765ffe36
  40d424:	stos   DWORD PTR es:[edi],eax
  40d425:	lds    ebp,FWORD PTR [ebx-0x16f6b615]
  40d42b:	add    esi,DWORD PTR [edx+0x4b03e7a7]
  40d431:	mov    cl,BYTE PTR [ebx-0x98bb615]
  40d437:	mov    cl,BYTE PTR [edi]
  40d439:	int    0x25
  40d43b:	ds jae 0x40d442
  40d43e:	jmp    0x5d211f46
  40d443:	add    cl,BYTE PTR [ebx+0x9]
  40d446:	push   0x79
  40d448:	arpl   WORD PTR [esp+edx*2],ax
  40d44b:	pop    es
  40d44c:	shr    BYTE PTR [ebx-0x4f],cl
  40d44f:	mov    edi,0x3e3e107
  40d454:	dec    ebx
  40d455:	or     eax,edx
  40d457:	outs   dx,DWORD PTR ds:[esi]
  40d458:	dec    edx
  40d459:	or     ecx,ebp
  40d45b:	add    bh,0xe1
  40d45e:	jmp    0x40d466
  40d460:	(bad)  
  40d461:	imul   ebp,eax,0x23824b03
  40d467:	ror    cl,1
  40d469:	outs   dx,BYTE PTR ds:[esi]
  40d46a:	push   ebp
  40d46b:	add    al,0x9f
  40d46d:	add    ch,BYTE PTR [esi-0x16f7ccbf]
  40d473:	add    eax,DWORD PTR [eax]
	...
  40d499:	add    BYTE PTR [eax],al
  40d49b:	add    BYTE PTR [ebx-0x20],cl
  40d49e:	in     eax,dx
  40d49f:	mov    esi,0x3e6e187
  40d4a4:	dec    ebx
  40d4a5:	or     DWORD PTR [eax],eax
  40d4a7:	scas   al,BYTE PTR es:[edi]
  40d4a8:	mov    cl,cl
  40d4aa:	(bad)  
  40d4ab:	call   0xad07ddf8
  40d4b0:	add    ch,ch
  40d4b2:	(bad)  
  40d4b3:	jmp    0x2d859900
  40d4b8:	inc    edi
  40d4b9:	or     DWORD PTR [eax],eax
  40d4bb:	jmp    0xe9fd1a55
  40d4c0:	dec    eax
  40d4c1:	or     DWORD PTR [eax],eax
  40d4c3:	or     dh,BYTE PTR es:[ecx+0x948e8ff]
  40d4ca:	push   DWORD PTR [esp+edx*4-0x4bd8ed1c]
  40d4d1:	jmp    0x40d45b
  40d4d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4d4:	mov    bl,ch
  40d4d6:	je     0x40d50d
  40d4d8:	scas   eax,DWORD PTR es:[edi]
  40d4d9:	add    al,0xfe
  40d4db:	push   cs
  40d4dc:	pushf  
  40d4dd:	add    DWORD PTR [ecx+esi*1-0x6c],0x8211d475
  40d4e5:	in     eax,dx
  40d4e6:	(bad)  
  40d4e7:	test   bh,0x45
  40d4ea:	les    ebp,FWORD PTR [edx+0x32]
  40d4ed:	xor    al,0x3f
  40d4ef:	sub    BYTE PTR [edi+0x9],al
  40d4f2:	jne    0x40d52f
  40d4f4:	mul    DWORD PTR [eax+eax*2]
  40d4f7:	sub    BYTE PTR [edi-0x1f],al
  40d4fa:	or     al,0x30
  40d4fc:	dec    edi
  40d4fd:	or     DWORD PTR [eax+0x51],edx
	...
  40d528:	sub    ecx,DWORD PTR [ecx+0x41]
  40d52b:	jmp    0xc2014a6d
  40d530:	in     eax,0x51
  40d532:	add    cl,ch
  40d534:	inc    ecx
  40d535:	leave  
  40d536:	jae    0x40d539
  40d538:	lahf   
  40d539:	and    BYTE PTR [eax+0x28],al
  40d53c:	dec    edi
  40d53d:	loope  0x40d52f
  40d53f:	xor    DWORD PTR [edi+0x9],eax
  40d542:	push   eax
  40d543:	add    DWORD PTR [eax+0x49],esp
  40d546:	inc    ecx
  40d547:	add    BYTE PTR [edx],ah
  40d549:	repz jae 0x40d50c
  40d54c:	ficom  DWORD PTR [esi-0x10dffa8]
  40d552:	mov    edi,0x335fb074
  40d557:	inc    eax
  40d558:	mov    ds:0xad5e807,eax
  40d55d:	or     BYTE PTR [eax],al
  40d55f:	push   eax
  40d560:	or     dh,BYTE PTR [edi]
  40d562:	inc    eax
  40d563:	inc    ecx
  40d564:	loop   0x40d558
  40d566:	jae    0x40d528
  40d568:	jp     0x40d5c5
  40d56a:	pop    edx
  40d56b:	add    BYTE PTR [edx-0x4997e922],dh
  40d571:	inc    edi
  40d572:	inc    ecx
  40d573:	add    BYTE PTR [edx],cl
  40d575:	scas   eax,DWORD PTR es:[edi]
  40d576:	push   esi
  40d577:	add    BYTE PTR [edx-0xdc397a9],ah
  40d57d:	inc    esp
  40d57e:	add    bh,bh
  40d580:	mov    edi,0xd85de6c7
  40d585:	pop    es
  40d586:	add    BYTE PTR [ebx],cl
  40d588:	bound  edi,QWORD PTR [ecx+0x62]
  40d58b:	inc    DWORD PTR [eax]
	...
  40d5b1:	add    BYTE PTR [eax],al
  40d5b3:	add    bh,bh
  40d5b5:	mov    edi,0x7daa1e6
  40d5ba:	add    BYTE PTR [eax+0x65],dl
  40d5bd:	pop    ebx
  40d5be:	enter  0x54e8,0xef
  40d5c2:	std    
  40d5c3:	(bad)  
  40d5c4:	fld    TBYTE PTR [ebx]
  40d5c6:	mov    esp,0xe6c8ffff
  40d5cb:	lea    ebx,[edx]
  40d5cd:	add    eax,0x5b855000
  40d5d2:	(bad)  
  40d5d3:	call   0x3ec700
  40d5d8:	stos   DWORD PTR es:[edi],eax
  40d5d9:	sub    bh,BYTE PTR [eax-0x13a987d]
  40d5df:	jae    0x40d5ef
  40d5e1:	mov    bh,BYTE PTR [ebx-0x48]
  40d5e4:	xor    bl,BYTE PTR [ebx+0x2e]
  40d5e7:	push   0xef02e04b
  40d5ec:	aad    0x7b
  40d5ee:	outs   dx,BYTE PTR ds:[esi]
  40d5ef:	or     BYTE PTR [ebx],ah
  40d5f1:	xchg   esi,eax
  40d5f2:	cmp    dh,0x4
  40d5f5:	ins    BYTE PTR es:[edi],dx
  40d5f6:	outs   dx,DWORD PTR ds:[esi]
  40d5f7:	sar    ah,0xed
  40d5fa:	or     ch,al
  40d5fc:	(bad)  
  40d5fd:	fs cmc 
  40d5ff:	(bad)  
  40d600:	in     al,dx
  40d601:	int    0xb6
  40d603:	(bad)  
  40d604:	pop    esi
  40d605:	clc    
  40d606:	jmp    0x5efe:0xf553c738
  40d60d:	cwde   
  40d60e:	hlt    
  40d60f:	je     0x40d654
  40d611:	pop    eax
  40d612:	es test ah,al
  40d615:	sub    esi,ebp
  40d617:	je     0x40d619
	...
  40d63d:	add    BYTE PTR [eax],al
  40d63f:	add    BYTE PTR [ebx-0x4b78c6b8],cl
  40d645:	sbb    esi,ebp
  40d647:	je     0x40d5cc
  40d649:	sbb    BYTE PTR [ecx],dh
  40d64b:	xchg   DWORD PTR [ebx+ecx*1+0x88774f5],esp
  40d652:	sub    DWORD PTR [edi+0x74f4fb94],eax
  40d658:	iret   
  40d659:	sbb    BYTE PTR [ecx],ah
  40d65b:	xchg   DWORD PTR [ebx+ebp*8+0x8c374f3],eax
  40d662:	sbb    DWORD PTR [edi+0xce7db74],eax
  40d668:	enter  0xec65,0x5
  40d66c:	fsubrp st(2),st
  40d66e:	mov    ebx,0x2de7344
  40d673:	add    BYTE PTR [ebx+0x5f],cl
  40d676:	jbe    0x40d660
  40d678:	dec    ebx
  40d679:	sub    al,0x34
  40d67b:	push   0x42fbe8
  40d680:	cmp    al,0x2d
  40d682:	enter  0xfce7,0x17
  40d686:	add    al,0x0
  40d688:	inc    eax
  40d689:	or     DWORD PTR [ecx+0x23c24c6e],ebp
  40d68f:	in     al,dx
  40d690:	dec    ebx
  40d691:	or     ecx,ebp
  40d693:	add    esp,DWORD PTR [ebx+0x4b432929]
  40d699:	jmp    0x420:0x89ecc7fb
  40d6a0:	dec    ebx
  40d6a1:	(bad)  
  40d6a2:	test   al,0x6e
	...
  40d6cc:	dec    esp
  40d6cd:	ret    0xec23
  40d6d0:	dec    edx
  40d6d1:	or     ecx,ebp
  40d6d3:	add    esp,esp
  40d6d5:	jae    0x40d704
  40d6d7:	jmp    0x40d6e7
  40d6d9:	adc    DWORD PTR [ebp-0xc],0xffffffd0
  40d6dd:	xor    eax,0xe9cdba29
  40d6e2:	inc    ebp
  40d6e3:	hlt    
  40d6e4:	mov    edx,0x4dfd009a
  40d6e9:	test   BYTE PTR [esi+esi*8+0x6e2de9b5],al
  40d6f0:	fwait
  40d6f1:	loopne 0x40d74f
  40d6f3:	jge    0x40d69a
  40d6f5:	jmp    0xe0f04517
  40d6fa:	inc    esp
  40d6fb:	jge    0x40d692
  40d6fd:	jmp    0x58dc155d
  40d702:	adc    ecx,edx
  40d704:	shr    cl,1
  40d706:	std    
  40d707:	jmp    0xc015:0xf3f5f04d
  40d70e:	sub    dl,BYTE PTR [ebx]
  40d710:	dec    ebx
  40d711:	push   esp
  40d712:	jb     0x40d6f4
  40d714:	retf   
  40d715:	les    edx,FWORD PTR [edx+esi*8-0x765216a3]
  40d71c:	pushf  
  40d71d:	jmp    0x3e8:0xe94cf3cd
  40d724:	ror    BYTE PTR [esi-0x2b],1
  40d727:	(bad)  
  40d728:	cld    
  40d729:	pop    ebp
  40d72a:	add    ah,ch
  40d72c:	enter  0x20,0x34
	...
  40d758:	inc    edx
  40d759:	repnz hlt 
  40d75b:	call   0x153fe0a8
  40d760:	inc    ebx
  40d761:	icebp  
  40d762:	pop    ebp
  40d763:	js     0x40d77d
  40d765:	call   0x18d38074
  40d76a:	push   0x4a2b51
  40d76f:	jle    0x40d6f3
  40d771:	std    
  40d772:	out    0x72,eax
  40d774:	jbe    0x40d75d
  40d776:	inc    BYTE PTR [edx+0x15ad714a]
  40d77c:	mov    cs,WORD PTR [ecx]
  40d77e:	call   esp
  40d780:	xor    al,0xf1
  40d782:	jmp    0x40d7e4
  40d784:	fsub   st,st(7)
  40d786:	mov    BYTE PTR [edi+ebx*4-0x1a],ah
  40d78a:	inc    BYTE PTR [esi+0x27]
  40d78d:	daa    
  40d78e:	add    ecx,ebp
  40d790:	dec    eax
  40d791:	xchg   esi,eax
  40d792:	test   BYTE PTR [ebx],ch
  40d794:	mov    ecx,0x9099fee7
  40d799:	ins    BYTE PTR es:[edi],dx
  40d79a:	xchg   BYTE PTR [esi],ah
  40d79c:	cwde   
  40d79d:	xchg   ebp,eax
  40d79e:	test   BYTE PTR [ebx],ch
  40d7a0:	cdq    
  40d7a1:	out    0xfe,eax
  40d7a3:	mov    ecx,0xfb79d99
  40d7a8:	cwde   
  40d7a9:	out    0xe7,eax
  40d7ab:	dec    ecx
  40d7ac:	and    BYTE PTR [ecx],cl
  40d7ae:	add    BYTE PTR [eax-0x2e],dh
  40d7b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7b2:	std    
  40d7b3:	idiv   BYTE PTR [ecx+0x28]
  40d7b6:	pcmpgtw mm2,mm0
  40d7b9:	or     DWORD PTR [eax],eax
  40d7bb:	jmp    0x40d7c0
	...
  40d7e4:	retf   
  40d7e5:	jge    0x40d7a8
  40d7e7:	fistp  WORD PTR [ecx-0x19]
  40d7ea:	imul   bl
  40d7ec:	cmp    BYTE PTR [ecx],cl
  40d7ee:	add    cl,ch
  40d7f0:	dec    ecx
  40d7f1:	lea    eax,[edx+0xc3200]
  40d7f7:	lea    esi,[eax+0x29]
  40d7fa:	push   eax
  40d7fb:	push   0x4107c1
  40d800:	or     dh,BYTE PTR [ebp+0x57]
  40d803:	add    BYTE PTR [edx],dh
  40d805:	out    0xbe,eax
  40d807:	jne    0x40d830
  40d809:	lds    eax,FWORD PTR [edi+0x1]
  40d80c:	and    cl,BYTE PTR [ecx*4-0x2261f6b]
  40d813:	(bad)  
  40d814:	jg     0x40d864
  40d816:	sub    al,0x50
  40d818:	pop    edx
  40d819:	mov    dl,0x2a
  40d81b:	inc    ecx
  40d81c:	loop   0x40d7e1
  40d81e:	pop    edx
  40d81f:	push   edi
  40d820:	loop   0x40d82d
  40d822:	or     eax,eax
  40d824:	pop    es
  40d825:	adc    ecx,ebp
  40d827:	sub    al,0xf3
  40d829:	or     eax,DWORD PTR [eax]
  40d82b:	push   edi
  40d82d:	jmp    edi
  40d82f:	mov    edx,0xbfddb52
  40d834:	jb     0x40d897
  40d836:	punpckhbw mm6,QWORD PTR ds:0x7d004104
  40d83d:	popa   
  40d83e:	adc    al,0xe8
  40d840:	aad    0x64
  40d842:	(bad)  
  40d843:	(bad)  
  40d844:	cmp    esi,esp
  40d846:	push   0x0
	...
  40d86f:	add    BYTE PTR ds:0xe9e81461,bh
  40d875:	fs (bad) 
  40d877:	(bad)  
  40d878:	out    dx,eax
  40d879:	add    al,0xfe
  40d87c:	dec    ebp
  40d87d:	fisttp DWORD PTR [ebx+0x503d8e52]
  40d883:	call   0x3f3d75
  40d888:	sar    BYTE PTR [ebx],cl
  40d88a:	push   DWORD PTR [ebp+0x62]
  40d88d:	fdiv   DWORD PTR [ebx+0xc]
  40d890:	jge    0x40d8f1
  40d892:	or     al,ch
  40d894:	dec    ebx
  40d895:	ret    
  40d896:	icebp  
  40d897:	dec    BYTE PTR [ecx+ecx*8-0x78]
  40d89b:	test   BYTE PTR [eax+edx*8-0x26],al
  40d89f:	fmul   QWORD PTR [ebx-0x10]
  40d8a2:	add    cl,BYTE PTR [ebp-0x7b84f377]
  40d8a8:	div    DWORD PTR [esi-0x14c0110]
  40d8ae:	xor    BYTE PTR [ecx+0x4b],al
  40d8b1:	xchg   DWORD PTR [esi-0xf7fea4d],esi
  40d8b7:	out    0x46,eax
  40d8b9:	sbb    BYTE PTR [eax+eax*1],al
  40d8bc:	push   eax
  40d8bd:	mov    al,0x77
  40d8bf:	cs jae 0x40d8e1
  40d8c2:	sbb    al,0x41
  40d8c4:	dec    ebx
  40d8c5:	pop    edi
  40d8c6:	ja     0x40d8dc
  40d8c8:	jecxz  0x40d929
  40d8ca:	jl     0x40d8ca
  40d8cc:	in     al,0x6f
  40d8ce:	mov    bh,0xb3
  40d8d0:	fld    QWORD PTR [edi-0xf]
  40d8d3:	dec    edi
	...
  40d8fc:	jecxz  0x40d8fd
  40d8fe:	jp     0x40d8fe
  40d900:	int3   
  40d901:	mov    al,ds:0x4f5b74ef
  40d906:	ja     0x40d914
  40d908:	sbb    esp,DWORD PTR [edi]
  40d90a:	ja     0x40d914
  40d90c:	mov    ds:0xacfeec1f,eax
  40d911:	dec    eax
  40d912:	cmp    DWORD PTR [ebp-0x4b0ed05c],eax
  40d918:	xlat   BYTE PTR ds:[ebx]
  40d919:	push   es
  40d91a:	icebp  
  40d91b:	(bad)  
  40d91c:	mov    ds:0x4b0058c0,eax
  40d921:	jae    0x40d90f
  40d923:	add    ecx,edi
  40d925:	ret    
  40d926:	jnp    0x40d8bc
  40d928:	mov    bh,0xe6
  40d92a:	out    dx,eax
  40d92b:	dec    BYTE PTR [eax+0x0]
  40d92e:	test   ecx,ebp
  40d930:	dec    ecx
  40d931:	mov    es,WORD PTR [ecx+0x5a093539]
  40d937:	ja     0x40d982
  40d939:	repnz sub BYTE PTR [esi+edx*8+0x25],bl
  40d93e:	sub    BYTE PTR [esp+ecx*2],al
  40d941:	pushf  
  40d942:	xchg   esp,eax
  40d943:	icebp  
  40d944:	inc    ebp
  40d945:	out    0xd0,al
  40d947:	nop
  40d948:	xchg   ebp,eax
  40d949:	or     ecx,ebp
  40d94b:	push   ebx
  40d94c:	mov    ds:0x4b42f590,eax
  40d951:	out    0x73,al
  40d953:	mov    bh,0x26
  40d955:	out    0xa5,al
  40d957:	fcmovne st,st(6)
  40d959:	cmp    eax,0x717b03e9
  40d95e:	jg     0x40d990
	...
  40d988:	mov    cl,BYTE PTR [ecx]
  40d98a:	mov    ?,WORD PTR [esi-0xf7a1948]
  40d990:	in     al,0x63
  40d992:	push   ss
  40d993:	add    al,0x4b
  40d995:	inc    ebx
  40d996:	adc    ch,bh
  40d998:	lods   al,BYTE PTR ds:[esi]
  40d999:	pop    ebx
  40d99a:	loope  0x40d998
  40d99c:	cli    
  40d99d:	pop    ebx
  40d99e:	in     eax,dx
  40d99f:	cld    
  40d9a0:	adc    ebx,DWORD PTR [ebp+0xf]
  40d9a3:	pop    esp
  40d9a4:	pushf  
  40d9a5:	xor    BYTE PTR [eax-0xaa433fd],ch
  40d9ab:	fld    TBYTE PTR [edi]
  40d9ad:	xchg   ecx,eax
  40d9ae:	inc    ebp
  40d9af:	lock mov ebp,0xb5f1749b
  40d9b5:	in     eax,0x98
  40d9b7:	fcmovnu st,st(7)
  40d9b9:	nop
  40d9ba:	sub    eax,0x9be614f0
  40d9bf:	adc    ebx,DWORD PTR [ebx+ebx*2+0x5b9453ed]
  40d9c6:	loope  0x40d9a3
  40d9c8:	mov    dl,ah
  40d9ca:	or     eax,0x6cab6cf0
  40d9cf:	lock jge 0x40d965
  40d9d2:	arpl   bp,ax
  40d9d4:	jbe    0x40d9bb
  40d9d6:	push   ebp
  40d9d8:	sbb    esi,esp
  40d9da:	mov    ah,0x2d
  40d9dc:	pop    edx
  40d9dd:	out    0xfe,al
  40d9df:	rcl    DWORD PTR [eax+0x3f],1
  40d9e2:	add    cl,ch
  40d9e4:	ret    
  40d9e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9e6:	push   cs
  40d9e7:	ins    BYTE PTR es:[edi],dx
  40d9e8:	shl    esi,cl
  40d9ea:	dec    dh
	...
  40da14:	xor    al,0x9e
  40da16:	mov    ebx,0xe7e42cc7
  40da1b:	out    dx,eax
  40da1c:	sahf   
  40da1d:	or     DWORD PTR [eax],eax
  40da1f:	mov    dh,0xf2
  40da21:	pushf  
  40da22:	std    
  40da23:	scas   al,BYTE PTR es:[edi]
  40da24:	xor    al,0xed
  40da26:	je     0x40da95
  40da28:	sub    al,0xe4
  40da2a:	enter  0x3fab,0x9
  40da2e:	push   ebp
  40da2f:	bound  ebp,QWORD PTR [ebx]
  40da31:	in     al,0x74
  40da33:	(bad)  
  40da35:	pop    ebp
  40da36:	adc    BYTE PTR [esi-0xb00ea7e],al
  40da3c:	lock in al,dx
  40da3e:	ret    
  40da3f:	je     0x40da1d
  40da41:	jecxz  0x40da0b
  40da43:	stos   DWORD PTR es:[edi],eax
  40da44:	dec    ebx
  40da45:	or     DWORD PTR [ebp+0x72],edx
  40da48:	jmp    0x40d9d1
  40da4a:	ret    
  40da4b:	pop    ecx
  40da4c:	jl     0x40da32
  40da4e:	je     0x40da35
  40da50:	lock outs dx,BYTE PTR ds:[esi]
  40da52:	mov    DWORD PTR [esi-0x4c],ecx
  40da55:	xadd   BYTE PTR [ebx+edx*2+0x4b2bc944],bh
  40da5d:	or     edi,edi
  40da5f:	mov    esp,0x6054f158
  40da64:	mov    ah,0xe3
  40da66:	or     ch,BYTE PTR [ecx]
  40da68:	and    cl,BYTE PTR [esi]
  40da6a:	pop    edi
  40da6b:	xor    BYTE PTR [ecx+0x12160010],cl
  40da71:	adc    eax,0xe305f0e8
  40da76:	inc    BYTE PTR [eax]
	...
  40daa0:	jns    0x40da6a
  40daa2:	jae    0x40dab3
  40daa4:	ficomp DWORD PTR [ebx-0xc9dbeda]
  40daaa:	jae    0x40dab8
  40daac:	dec    edx
  40daad:	fwait
  40daae:	test   edi,edi
  40dab0:	gs mov edi,0xf3626a08
  40dab6:	jae    0x40dac4
  40dab8:	mov    al,BYTE PTR [edx+0x6515ff85]
  40dabe:	inc    esp
  40dabf:	hlt    
  40dac0:	call   0x73f3:0x22413f34
  40dac7:	hlt    
  40dac8:	or     dl,BYTE PTR [edx+0x64f5ff85]
  40dace:	inc    esp
  40dacf:	clc    
  40dad0:	cmp    bh,BYTE PTR [edi-0x3fddff05]
  40dad6:	add    eax,DWORD PTR [ebp+esi*4-0x29ba780e]
  40dadd:	aas    
  40dade:	add    BYTE PTR [eax],dl
  40dae0:	repnz pop es
  40dae2:	call   0xfe343cdf
  40dae7:	mov    DWORD PTR [edi],ebx
  40dae9:	(bad)  
  40daeb:	jne    0x40db47
  40daed:	shr    BYTE PTR [eax+0x9f36588],0xc0
  40daf4:	in     eax,0x8b
  40daf6:	mov    ebx,0xff07e200
  40dafb:	jne    0x40db17
  40dafd:	inc    eax
  40dafe:	call   0xff488e00
  40db03:	jne    0x40db05
	...
  40db29:	add    BYTE PTR [eax],al
  40db2b:	add    BYTE PTR [esi-0x40],dh
  40db2e:	adc    BYTE PTR [ebp-0x5e],0x7
  40db32:	cmp    eax,0xffffffb0
  40db35:	loop   0x40dabb
  40db37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db38:	mov    dl,0x7
  40db3a:	add    BYTE PTR [ebx+0x3f7ef3b7],cl
  40db40:	dec    ebx
  40db41:	repnz std 
  40db43:	and    ebx,0xfffffff1
  40db46:	add    al,BYTE PTR [eax]
  40db48:	repz popf 
  40db4a:	sub    eax,0xda7b4b41
  40db4f:	cmp    DWORD PTR ds:0x8b0b02f2,edx
  40db55:	pop    ebp
  40db56:	jbe    0x40db57
  40db58:	(bad)  
  40db59:	jmp    0xf285dab9
  40db5e:	add    bh,bh
  40db60:	(bad)  
  40db61:	rcr    DWORD PTR [ebx-0x47],0x73
  40db65:	xor    DWORD PTR [eax+ebp*2],eax
  40db68:	pushf  
  40db69:	or     eax,DWORD PTR [ebx+0x0]
  40db6c:	pushf  
  40db6d:	mov    eax,0xf04b5532
  40db72:	idiv   DWORD PTR [edi+0x74ecf89f]
  40db78:	and    esi,edi
  40db7a:	add    ch,BYTE PTR [eax+0x7f]
  40db7d:	ret    
  40db7e:	inc    ecx
  40db7f:	add    BYTE PTR [eax+ecx*4+0x36],dh
  40db83:	push   ebp
  40db84:	dec    ebx
  40db85:	lock jg 0x40db7f
  40db88:	dec    edx
  40db89:	in     eax,0x35
  40db8b:	(bad)  
  40db8c:	jle    0x40dbee
  40db8e:	in     eax,dx
  40db8f:	je     0x40db91
	...
  40dbb5:	add    BYTE PTR [eax],al
  40dbb7:	add    bh,dh
  40dbb9:	mov    cl,ch
  40dbbb:	test   esp,esp
  40dbbd:	jae    0x40dc13
  40dbbf:	mov    edi,ebx
  40dbc1:	aaa    
  40dbc2:	sti    
  40dbc3:	jg     0x40dbd6
  40dbc5:	adc    esi,DWORD PTR [edi+0x3]
  40dbc8:	add    eax,0x50424eef
  40dbcd:	push   ds
  40dbce:	js     0x40dbd5
  40dbd0:	retf   
  40dbd1:	push   es
  40dbd2:	add    al,0x75
  40dbd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbd5:	and    esi,DWORD PTR [edi+0x10]
  40dbd8:	sbb    ebx,DWORD PTR [ebx]
  40dbda:	ja     0x40dbe4
  40dbdc:	mov    bl,0x2b
  40dbde:	out    dx,al
  40dbdf:	(bad)  
  40dbe0:	pushf  
  40dbe1:	or     DWORD PTR [ecx],edx
  40dbe3:	xor    eax,ecx
  40dbe5:	loop   0x40dc04
  40dbe7:	fnstcw WORD PTR [esi]
  40dbe9:	loop   0x40db86
  40dbeb:	adc    eax,DWORD PTR [esp+ebx*2+0x10f7ed19]
  40dbf2:	adc    DWORD PTR [edx-0x10021d8a],esi
  40dbf8:	cmp    ecx,ecx
  40dbfa:	das    
  40dbfb:	in     eax,dx
  40dbfc:	gs loop 0x40dbec
  40dbff:	icebp  
  40dc00:	scas   al,BYTE PTR es:[edi]
  40dc01:	and    esi,ebp
  40dc03:	cld    
  40dc04:	iret   
  40dc05:	jno    0x40dbe5
  40dc07:	in     al,dx
  40dc08:	dec    ebp
  40dc09:	loop   0x40dc66
  40dc0b:	clc    
  40dc0c:	sub    al,0x10
  40dc0e:	push   0xffffffec
  40dc10:	cmp    eax,0x2cf43be2
  40dc15:	or     BYTE PTR [edx-0x14],ch
  40dc18:	sub    eax,0xec3be2
	...
  40dc41:	add    BYTE PTR [eax],al
  40dc43:	add    BYTE PTR [eax+eiz*8],ch
  40dc46:	push   0xffffffec
  40dc48:	sbb    eax,0x2cf01be2
  40dc4d:	fsubr  DWORD PTR [edx-0x14]
  40dc50:	or     eax,0x4141be2
  40dc55:	pop    esp
  40dc56:	fucomp st(4)
  40dc58:	ja     0x40dc6b
  40dc5a:	xchg   ecx,eax
  40dc5b:	jno    0x40dc52
  40dc5d:	loope  0x40dcdc
  40dc5f:	dec    esp
  40dc60:	add    al,bh
  40dc62:	in     al,0x3
  40dc64:	jle    0x40dbf4
  40dc66:	jl     0x40dbe8
  40dc68:	or     cl,dh
  40dc6a:	gs jbe 0x40dcac
  40dc6d:	loop   0x40dc42
  40dc6f:	adc    esp,ebx
  40dc71:	outs   dx,DWORD PTR ds:[esi]
  40dc72:	mov    esp,0x290e4b03
  40dc77:	ja     0x40dc8d
  40dc79:	outs   dx,DWORD PTR ds:[esi]
  40dc7a:	jmp    0xa8630bda
  40dc7f:	add    ebp,DWORD PTR [ebx+ebx*2+0x5cb7d900]
  40dc86:	or     al,0x41
  40dc88:	fisttp WORD PTR [esi+edi*8+0x73a19326]
  40dc8f:	test   al,0xf8
  40dc91:	cmp    al,ch
  40dc93:	pushf  
  40dc94:	add    al,0xe3
  40dc96:	(bad)  
  40dc97:	loop   0x40dc21
  40dc99:	push   ebp
  40dc9a:	xor    DWORD PTR [eax+0xd],esi
  40dc9d:	icebp  
  40dc9e:	imul   esp,ebx,0xf685f490
  40dca4:	jo     0x40dcb4
  40dca6:	shl    BYTE PTR [ebp+0x0],0x0
	...
  40dcce:	add    BYTE PTR [eax],al
  40dcd0:	push   ebx
  40dcd1:	loop   0x40dd47
  40dcd3:	add    edi,edi
  40dcd5:	lock and DWORD PTR [edi+0x60],0xffffffe2
  40dcda:	dec    edi
  40dcdb:	(bad)  
  40dcdc:	mov    edx,0xbace4ff1
  40dce1:	adc    eax,ebp
  40dce3:	adc    ah,BYTE PTR [ecx]
  40dce5:	loopne 0x40dce5
  40dce7:	shl    DWORD PTR [eax+0x30b6fe8b],1
  40dced:	push   esi
  40dcee:	call   0xfecc75b4
  40dcf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcf4:	neg    DWORD PTR [edx-0x7e]
  40dcf7:	sahf   
  40dcf8:	and    BYTE PTR [ecx+0x0],ch
  40dcfb:	loope  0x40dd45
  40dcfd:	or     eax,ebp
  40dcff:	push   cs
  40dd00:	(bad)
  40dd03:	jo     0x40dc8f
  40dd05:	loope  0x40dc93
  40dd07:	and    al,0xe3
  40dd09:	push   eax
  40dd0a:	(bad)  
  40dd0b:	cld    
  40dd0c:	cmp    al,ah
  40dd0e:	je     0x40dced
  40dd10:	add    BYTE PTR [edi+0x1448e953],dl
  40dd16:	rcl    ah,0x58
  40dd19:	enter  0x5944,0x4f
  40dd1d:	or     DWORD PTR [eax],eax
  40dd1f:	jmp    0x13522ad
  40dd24:	or     eax,0x9800000c
  40dd29:	or     al,0x6a
  40dd2b:	add    BYTE PTR [eax-0xff95f4],cl
  40dd31:	dec    ecx
  40dd32:	hlt    
  40dd33:	push   eax
	...
  40dd5c:	ins    DWORD PTR es:[edi],dx
  40dd5d:	pop    edx
  40dd5e:	clc    
  40dd5f:	push   DWORD PTR [edi+0x5e75fddc]
  40dd65:	mov    ebp,0xc72548e
  40dd6a:	or     eax,eax
  40dd6c:	test   BYTE PTR ds:0x9bda3aeb,0x26
  40dd73:	inc    ecx
  40dd74:	jb     0x40dd69
  40dd76:	jae    0x40dd88
  40dd78:	dec    edx
  40dd79:	fwait
  40dd7a:	cmp    edi,0x6d
  40dd7d:	repz jae 0x40dd78
  40dd80:	adc    bh,BYTE PTR [ebp-0xce27a01]
  40dd86:	xchg   DWORD PTR [ebp-0x2],eax
  40dd89:	bnd jae 0x40dda4
  40dd8c:	or     eax,0x77ff1459
  40dd91:	sar    ebp,0x75
  40dd94:	cs repz jae 0x40dda0
  40dd98:	or     cl,BYTE PTR ds:0xf2edffff
  40dd9e:	jae    0x40dd8c
  40dda0:	mov    edx,0xddff7fc2
  40dda5:	repnz inc ebx
  40dda7:	lock leave 
  40dda9:	xchg   edx,eax
  40ddaa:	std    
  40ddab:	jne    0x40dd7b
  40ddad:	ret    
  40ddae:	cmp    dl,BYTE PTR [edx+eiz*8+0xb]
  40ddb2:	push   DWORD PTR [ebp+0x5a]
  40ddb5:	(bad)  
  40ddb6:	fadd   DWORD PTR [ecx-0x3d380c93]
  40ddbc:	(bad)  
  40ddbd:	or     edx,DWORD PTR [ebp-0x75]
	...
  40dde8:	jle    0x40dd6f
  40ddea:	ret    0x4bf4
  40dded:	cmp    dl,ch
  40ddef:	(bad)  
  40ddf0:	xor    edx,esi
  40ddf2:	pop    esp
  40ddf3:	and    al,0xb4
  40ddf5:	pushf  
  40ddf6:	cli    
  40ddf7:	out    0xb2,eax
  40ddf9:	lahf   
  40ddfa:	jmp    0xe6edb0fd
  40ddff:	mov    BYTE PTR [esi-0x29],0x29
  40de03:	inc    ecx
  40de04:	dec    ebx
  40de05:	repnz add al,BYTE PTR [eax]
  40de08:	dec    ebx
  40de09:	ins    DWORD PTR es:[edi],dx
  40de0a:	xor    dh,0x85
  40de0d:	imul   cl
  40de0f:	dec    edi
  40de10:	repz in eax,0x3
  40de13:	add    BYTE PTR [ebx-0x6],cl
  40de16:	jne    0x40de6b
  40de18:	dec    ebx
  40de19:	repnz pop edx
  40de1b:	std    
  40de1c:	and    al,0xb1
  40de1e:	add    ch,BYTE PTR [eax+0x56]
  40de21:	scas   al,BYTE PTR es:[edi]
  40de22:	inc    ebx
  40de23:	add    bl,ah
  40de25:	(bad)  
  40de26:	inc    edx
  40de27:	inc    ecx
  40de28:	dec    ebx
  40de29:	mov    edi,0x3172462e
  40de2e:	add    al,0xff
  40de30:	mov    dh,0xe8
  40de32:	fisub  DWORD PTR [edi+0x67e8c835]
  40de38:	cs loopne 0x40de7c
  40de3b:	add    BYTE PTR [ebx+0x4b41289d],dh
  40de41:	dec    eax
  40de42:	stc    
  40de43:	aas    
  40de44:	mov    dh,al
  40de46:	pop    edx
  40de47:	add    cl,BYTE PTR [ebx-0x10]
  40de4a:	cmp    dh,0x0
	...
  40de71:	add    BYTE PTR [eax],al
  40de73:	add    BYTE PTR [esi-0x18],bh
  40de76:	fimul  DWORD PTR [ebx-0x73177003]
  40de7c:	into   
  40de7d:	pop    edi
  40de7e:	jmp    0x7815:0xdc00ecfe
  40de85:	lock add bh,bh
  40de88:	push   esi
  40de89:	ins    BYTE PTR es:[edi],dx
  40de8a:	jmp    0x514a2203
  40de8f:	ror    DWORD PTR [esi-0x22],cl
  40de92:	pop    ebp
  40de93:	mov    ebx,0x4ee9058a
  40de98:	shr    ch,1
  40de9a:	sar    BYTE PTR [bx+si+0x45df],0xe9
  40dea0:	and    cl,BYTE PTR [ecx]
  40dea2:	rcr    DWORD PTR [esi],cl
  40dea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dea5:	push   esp
  40dea6:	loope  0x40de83
  40dea8:	sbb    bl,BYTE PTR [edi+0x2e]
  40deab:	jmp    0x5e662373
  40deb0:	xor    ecx,esi
  40deb2:	popf   
  40deb3:	jle    0x40de3a
  40deb5:	fsubrp st(1),st
  40deb7:	ret    
  40deb8:	clc    
  40deb9:	and    al,0x81
  40debb:	out    0x35,al
  40debd:	dec    eax
  40debe:	jmp    0x64364216
  40dec3:	jmp    0x3c2182d
  40dec8:	cmp    ebp,esi
  40deca:	cs pop esp
  40decc:	or     cl,BYTE PTR [ecx+0x28]
  40decf:	add    al,0xfb
  40ded1:	fst    QWORD PTR [ebx-0x4]
  40ded4:	sub    al,0xbd
  40ded6:	mov    ebp,eax
	...
  40df00:	cmp    eax,0x3582e0f1
  40df05:	fisubr WORD PTR [ebp+0x281e75fe]
  40df0b:	add    al,0x4a
  40df0d:	or     ecx,ebp
  40df0f:	add    ecx,esi
  40df11:	xor    DWORD PTR [ebp+0x38de15e9],0x5c
  40df18:	inc    edi
  40df19:	or     cl,ch
  40df1b:	add    esi,ebx
  40df1d:	fwait
  40df1e:	cmp    al,BYTE PTR [ebx+ecx*2]
  40df21:	jno    0x40deaf
  40df23:	sub    BYTE PTR [edx+0x2def1109],cl
  40df29:	dec    eax
  40df2a:	jmp    0x8a338a
  40df2f:	sub    BYTE PTR [edi-0x22],al
  40df32:	xor    al,0x27
  40df34:	xor    BYTE PTR [eax+0x0],cl
  40df37:	pop    bp
  40df39:	adc    eax,ebp
  40df3b:	pop    ebx
  40df3c:	lods   eax,DWORD PTR ds:[esi]
  40df3d:	fdivp  st(6),st
  40df3f:	shl    DWORD PTR [ebp+0x10e9411e],0xd4
  40df46:	ds test al,0x48
  40df49:	jno    0x40df5a
  40df4b:	test   eax,0xeb680909
  40df50:	dec    eax
  40df51:	or     DWORD PTR [eax-0x17eedad2],eax
  40df57:	aas    
  40df58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df59:	fdivp  st(6),st
  40df5b:	ins    BYTE PTR es:[edi],dx
  40df5c:	add    eax,0x7316fdd7
  40df61:	dec    ebp
  40df62:	call   0x40dff0
	...
  40df8b:	add    BYTE PTR [esi],bl
  40df8d:	or     DWORD PTR [eax],eax
  40df8f:	push   es
  40df90:	fstp   st(4)
  40df92:	(bad)  
  40df93:	je     0x40dff5
  40df95:	in     eax,0x1a
  40df97:	ja     0x40e00c
  40df99:	fmulp  st(0),st
  40df9b:	sub    edx,DWORD PTR [ebp+ebx*8+0x53]
  40df9f:	jb     0x40e014
  40dfa1:	mov    bl,al
  40dfa3:	aad    0x2d
  40dfa5:	fdiv   st(6),st
  40dfa7:	inc    ebx
  40dfa8:	inc    edi
  40dfa9:	outs   dx,DWORD PTR ds:[esi]
  40dfaa:	es into 
  40dfac:	mov    edx,0xa285e811
  40dfb1:	fdiv   st(6),st
  40dfb3:	jo     0x40df3f
  40dfb5:	ffree  st(6)
  40dfb7:	in     al,dx
  40dfb8:	ins    DWORD PTR es:[edi],dx
  40dfb9:	sbb    al,0x41
  40dfbb:	jmp    0xe940e908
  40dfc0:	xchg   ebx,eax
  40dfc1:	test   esi,esi
  40dfc3:	lahf   
  40dfc4:	in     al,dx
  40dfc5:	fisttp DWORD PTR [edi+0x1]
  40dfc8:	dec    ebx
  40dfc9:	or     al,BYTE PTR [eax]
  40dfcb:	jmp    0x92f6e0
  40dfd0:	loop   0x40dfda
  40dfd2:	push   0x46325c
  40dfd7:	push   0x414540
  40dfdc:	dec    edx
  40dfdd:	aam    0x3e
  40dfdf:	inc    ecx
  40dfe0:	loop   0x40dfc5
  40dfe2:	xor    eax,DWORD PTR [esi+0x5b]
  40dfe5:	inc    esi
  40dfe6:	add    bh,bh
  40dfe8:	lahf   
  40dfe9:	loopne 0x40dfd1
  40dfeb:	imul   eax,DWORD PTR [edi],0xffffffe4
  40dfee:	std    
  40dfef:	push   0x0
	...
  40e018:	out    0x48,al
  40e01a:	inc    ecx
  40e01b:	add    BYTE PTR [edx+0x3a],bh
  40e01e:	inc    eax
  40e01f:	inc    ecx
  40e020:	mov    dl,0x40
  40e022:	cmovo  esp,ebx
  40e025:	or     BYTE PTR [eax+0x2],ch
  40e028:	mov    ds:0xdfff8008,al
  40e02d:	loopne 0x40e015
  40e02f:	dec    edi
  40e030:	push   edi
  40e031:	in     al,0xfd
  40e033:	(bad)  
  40e034:	out    dx,eax
  40e035:	jmp    0x40e033
  40e037:	inc    DWORD PTR [ebp+0x35]
  40e03a:	call   0x49a418
  40e03f:	(bad)  
  40e040:	(bad)  
  40e042:	std    
  40e043:	jne    0x40e0af
  40e045:	rcl    BYTE PTR [edx-0x381c9a83],0xc2
  40e04c:	or     BYTE PTR cs:[ebp-0x75],dl
  40e050:	push   es
  40e051:	test   edx,eax
  40e053:	hlt    
  40e054:	add    al,0xe3
  40e056:	std    
  40e057:	push   0x22
  40e059:	inc    edx
  40e05a:	daa    
  40e05b:	call   FWORD PTR [edi-0x23]
  40e05e:	out    0x35,al
  40e060:	push   edi
  40e061:	in     al,0xfd
  40e063:	mov    DWORD PTR [edi-0xf],ebp
  40e066:	lds    eax,FWORD PTR ds:0x4122ed
  40e06c:	repnz pop es
  40e06e:	add    BYTE PTR [eax],al
  40e070:	dec    ebx
  40e071:	gs xor dh,0xf5
  40e075:	mov    ah,ch
  40e077:	dec    edi
  40e078:	arpl   si,bp
  40e07a:	add    eax,DWORD PTR [eax]
	...
  40e0a4:	dec    ebx
  40e0a5:	jp     0x40e03c
  40e0a7:	push   eax
  40e0a8:	dec    ebx
  40e0a9:	repnz pop edx
  40e0ab:	jbe    0x40e038
  40e0ad:	xor    DWORD PTR [eax+ebp*2],eax
  40e0b0:	pop    ebx
  40e0b1:	mov    dl,0x43
  40e0b3:	add    BYTE PTR [ebx],dh
  40e0b5:	jmp    0x40e0f9
  40e0b7:	inc    ecx
  40e0b8:	dec    ebx
  40e0b9:	xor    esi,DWORD PTR [eax]
  40e0bb:	inc    esi
  40e0bc:	bound  esi,QWORD PTR [ecx-0x25c900fe]
  40e0c2:	(bad)  
  40e0c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0c5:	sbb    ah,dh
  40e0c7:	addr16 adc eax,0x230043b2
  40e0cd:	mov    ds:0x7a4b4142,al
  40e0d2:	cmc    
  40e0d3:	aas    
  40e0d4:	or     dh,dl
  40e0d6:	pop    edx
  40e0d7:	add    cl,BYTE PTR [ebx-0xe]
  40e0da:	cmp    dh,0xfe
  40e0dd:	jmp    0x2b0a8bc
  40e0e2:	out    0x8c,al
  40e0e4:	into   
  40e0e5:	shl    bl,cl
  40e0e7:	(bad)  
  40e0e8:	pop    esp
  40e0e9:	sbb    edx,0x2f1fa51
  40e0ef:	call   esi
  40e0f1:	in     eax,0xe4
  40e0f3:	je     0x40e148
  40e0f5:	mov    eax,0xb43c7cf6
  40e0fa:	mov    edx,0x4df04fc1
  40e0ff:	mov    ebx,DWORD PTR [edi]
  40e101:	jb     0x40e0c3
  40e103:	repz and eax,0x69e49c
	...
  40e12d:	add    BYTE PTR [eax],al
  40e12f:	add    BYTE PTR [ebx+0x46],cl
  40e132:	sbb    al,0xff
  40e134:	sahf   
  40e135:	call   0x9d08f14
  40e13a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e13b:	in     eax,0xd3
  40e13d:	inc    esp
  40e13e:	popf   
  40e13f:	mov    ebp,0x42d61247
  40e144:	dec    ebx
  40e145:	or     ecx,ebp
  40e147:	add    ecx,DWORD PTR [ebx-0x74]
  40e14a:	imul   ebp,ebp,0xffffffe6
  40e14d:	fidivr DWORD PTR [ebp+0x54]
  40e150:	jae    0x40e157
  40e152:	call   0xc1322c5a
  40e157:	push   edx
  40e158:	dec    ebx
  40e159:	or     ecx,edx
  40e15b:	jne    0x40e0e1
  40e15d:	dec    eax
  40e15e:	jmp    0xa88aa6be
  40e163:	add    esp,DWORD PTR [ebx]
  40e165:	or     ch,BYTE PTR [ecx-0x425b4be]
  40e16b:	cmp    eax,0xe4e94872
  40e170:	pop    ss
  40e171:	adc    DWORD PTR [ecx+0x47],eax
  40e174:	xchg   edi,eax
  40e175:	fisubr DWORD PTR ds:0xa849bd5c
  40e17b:	add    esi,ebx
  40e17d:	sub    BYTE PTR [eax-0x198eb4be],0x43
  40e184:	or     cl,BYTE PTR [ecx]
  40e186:	add    DWORD PTR [ecx],0xe569094b
  40e18c:	fist   WORD PTR [eax]
  40e18e:	adc    DWORD PTR [ebx+0x5f],eax
  40e191:	(bad)  
  40e193:	jbe    0x40e195
	...
  40e1b9:	add    BYTE PTR [eax],al
  40e1bb:	add    bh,cl
  40e1bd:	shr    dh,cl
  40e1bf:	in     al,0x4d
  40e1c1:	cmp    ecx,edx
  40e1c3:	mov    eax,0xe4e90994
  40e1c8:	mov    bh,0xdd
  40e1ca:	aad    0x6e
  40e1cc:	inc    ebx
  40e1cd:	icebp  
  40e1ce:	data16 addr16 sub al,0xda
  40e1d2:	scas   eax,DWORD PTR es:[edi]
  40e1d3:	ror    DWORD PTR [eax+0x9],0x14
  40e1d7:	jns    0x40e209
  40e1d9:	xchg   bh,bh
  40e1db:	lods   al,BYTE PTR ds:[esi]
  40e1dc:	sub    al,0x70
  40e1de:	add    BYTE PTR [ebx+0x30],al
  40e1e1:	fidiv  DWORD PTR [ecx+esi*8+0x20]
  40e1e5:	xor    BYTE PTR [esi+ebx*4-0x19],bh
  40e1e9:	nop
  40e1ea:	inc    esp
  40e1eb:	xchg   ebp,eax
  40e1ec:	xchg   edx,eax
  40e1ed:	or     DWORD PTR [eax+0x5a],ebp
  40e1f0:	mov    BYTE PTR [eax+0x0],cl
  40e1f3:	adc    DWORD PTR [eax-0x1816bee7],ebp
  40e1f9:	adc    al,0x46
  40e1fb:	ror    BYTE PTR [ecx-0x368617f7],0xda
  40e202:	(bad)  
  40e203:	repnz mov BYTE PTR [ebp+0x19],dl
  40e207:	mov    ecx,0x46000920
  40e20c:	out    dx,al
  40e20d:	popa   
  40e20e:	ret    
  40e20f:	test   eax,0x46500909
  40e214:	xor    eax,0xeb6ee811
  40e219:	(bad)  
  40e21b:	inc    ecx
  40e21c:	jecxz  0x40e279
  40e21e:	jmp    FWORD PTR [esi]
	...
  40e248:	repnz or BYTE PTR [eax+0x63],ch
  40e24c:	or     BYTE PTR [eax+0x0],cl
  40e24f:	xchg   ecx,eax
  40e250:	test   eax,0x6fe94119
  40e255:	adc    al,0x46
  40e257:	ror    BYTE PTR [ecx],0x9
  40e25a:	call   0xff1baba4
  40e25f:	repnz mov BYTE PTR [ebp+0x19],dl
  40e263:	cdq    
  40e264:	lock or BYTE PTR [eax],al
  40e267:	(bad)  
  40e268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e269:	popa   
  40e26a:	ret    
  40e26b:	sub    DWORD PTR [esi-0x5d21aff7],ecx
  40e271:	add    eax,ebp
  40e273:	xor    ch,ah
  40e275:	xlat   BYTE PTR ds:[ebx]
  40e276:	inc    cl
  40e278:	rcl    BYTE PTR [esi-0x1],0x0
  40e27c:	or     eax,0xddfc73ed
  40e281:	xor    cl,BYTE PTR [eax]
  40e283:	call   0x401b60
  40e288:	jmp    0x40e259
  40e28a:	add    al,BYTE PTR [eax]
  40e28c:	inc    edi
  40e28d:	mov    dl,ch
  40e28f:	and    DWORD PTR [esi+0x485754e9],0xd
  40e296:	push   0x2a
  40e298:	mov    ebp,0x6ee80832
  40e29d:	cmp    bh,bh
  40e29f:	call   FWORD PTR [ebx+0x42]
  40e2a2:	cld    
  40e2a3:	push   0xffffffe2
  40e2a5:	in     al,0xa7
  40e2a7:	sbb    BYTE PTR [ebp-0x14],0x9
  40e2ab:	rol    BYTE PTR [eax],0x0
	...
  40e2d2:	add    BYTE PTR [eax],al
  40e2d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2d5:	aad    0x4e
  40e2d7:	push   0xbeef0cb2
  40e2dc:	mov    bl,BYTE PTR [esi+edi*1-0xe35dbf]
  40e2e3:	jne    0x40e27f
  40e2e5:	in     al,0xf
  40e2e7:	mov    ds:0x3de6ec5d,eax
  40e2ec:	fsub   st(3),st
  40e2ee:	std    
  40e2ef:	mov    edx,DWORD PTR [edi+0x7241284b]
  40e2f5:	xchg   DWORD PTR [ebx],edi
  40e2f7:	arpl   WORD PTR [edx-0x627fffb3],bx
  40e2fd:	or     al,0x74
  40e2ff:	inc    ebp
  40e300:	retf   0x3ec9
  40e303:	inc    ecx
  40e304:	jb     0x40e319
  40e306:	call   0x4da5c8
  40e30b:	or     esp,DWORD PTR [edx]
  40e30d:	xor    DWORD PTR [edi],ebx
  40e30f:	push   esi
  40e310:	dec    edx
  40e311:	in     eax,dx
  40e312:	test   edi,edi
  40e314:	sub    eax,0x3200681c
  40e319:	fstp   TBYTE PTR [eax+ebp*2+0x4142924b]
  40e320:	dec    ebx
  40e321:	adc    ah,bl
  40e323:	je     0x40e378
  40e325:	mov    edx,0x971ca1b4
  40e32a:	jmp    0x4aea:0xe19f96fd
  40e331:	xor    BYTE PTR [ebp+edi*1+0x45ddf54b],al
	...
  40e360:	push   DWORD PTR [edx+0x7ef4b8c2]
  40e366:	loope  0x40e366
  40e368:	stc    
  40e369:	pop    ss
  40e36a:	sbb    eax,DWORD PTR [edi]
  40e36c:	pop    esi
  40e36d:	dec    ebx
  40e36e:	loop   0x40e3e4
  40e370:	fist   WORD PTR [esi+0x58]
  40e373:	or     bl,ah
  40e375:	sti    
  40e376:	pop    esi
  40e377:	dec    esp
  40e379:	push   es
  40e37a:	inc    edx
  40e37b:	leave  
  40e37c:	mov    ebp,esp
  40e37e:	add    dl,BYTE PTR [ebp-0x30]
  40e381:	inc    ebp
  40e382:	xchg   bl,al
  40e384:	mov    bh,0x97
  40e386:	cmp    DWORD PTR [edx+0x4b],ebp
  40e389:	int3   
  40e38a:	sub    eax,0xeada1eff
  40e38f:	stc    
  40e390:	and    DWORD PTR [edi],edx
  40e392:	loop   0x40e31c
  40e394:	push   cs
  40e395:	push   ds
  40e396:	mov    ?,WORD PTR [esp+ebp*8]
  40e399:	or     DWORD PTR [ebp+0x0],eax
  40e39c:	shr    ah,1
  40e39e:	sub    BYTE PTR gs:[edx],cl
  40e3a1:	loop   0x40e325
  40e3a3:	ds dec ebx
  40e3a5:	jbe    0x40e3ee
  40e3a7:	push   0x43a17b
  40e3ac:	cld    
  40e3ad:	stc    
  40e3ae:	and    DWORD PTR [eax+0x4b],edx
  40e3b1:	loop   0x40e3c0
  40e3b3:	rcr    bh,0xbe
  40e3b6:	cmp    al,ch
  40e3b8:	jmp    0x9c3fc62b
  40e3bd:	or     DWORD PTR [ecx+0x4],edx
  40e3c0:	dec    ebx
  40e3c1:	out    0x9e,al
  40e3c3:	ins    BYTE PTR es:[edi],dx
	...
  40e3ec:	sub    DWORD PTR [edx+0x28],ecx
  40e3ef:	add    al,0x9b
  40e3f1:	(bad)  
  40e3f2:	push   ebx
  40e3f3:	or     al,0x33
  40e3f5:	ds mov esp,ecx
  40e3f8:	sbb    eax,0x145f68e2
  40e3fd:	xlat   BYTE PTR ds:[ebx]
  40e3fe:	rol    DWORD PTR [ebx],0x85
  40e401:	mov    esi,ebp
  40e403:	add    edi,DWORD PTR [esi-0x2d]
  40e406:	cs loopne 0x40e442
  40e409:	leave  
  40e40a:	pop    edi
  40e40b:	loope  0x40e402
  40e40d:	(bad)  
  40e40e:	xchg   ebp,eax
  40e40f:	(bad)  
  40e410:	sahf   
  40e411:	adc    esi,esp
  40e413:	push   esi
  40e414:	mov    al,ds:0xdddffbd6
  40e419:	pop    esp
  40e41a:	icebp  
  40e41b:	jmp    0x40e40d
  40e41d:	push   ebx
  40e41e:	jbe    0x40e401
  40e420:	ins    DWORD PTR es:[edi],dx
  40e421:	aaa    
  40e422:	mov    al,ds:0xbc0948c6
  40e427:	mov    WORD PTR [eax+0x22e0248a],?
  40e42d:	or     ebx,eax
  40e42f:	das    
  40e430:	lods   al,BYTE PTR ds:[esi]
  40e431:	pop    esp
  40e432:	loope  0x40e41f
  40e434:	es push ebx
  40e436:	inc    esi
  40e437:	loope  0x40e40c
  40e439:	dec    esp
  40e43a:	cmp    eax,0xe9634b6e
  40e43f:	imul   ecx,DWORD PTR [ebx+0x48],0xffffffa8
  40e443:	add    esi,ebx
  40e445:	or     cl,ch
  40e447:	add    ecx,ebx
  40e449:	loope  0x40e3fb
  40e44b:	xor    DWORD PTR [ebp-0x2a],0xffffffe1
  40e44f:	ret    
	...
  40e478:	clc    
  40e479:	cmc    
  40e47a:	mov    eax,0x58f75eb
  40e47f:	loope  0x40e48d
  40e481:	popa   
  40e482:	jmp    0xffd8488a
  40e487:	xor    BYTE PTR [ebx+0x16],0x41
  40e48b:	jmp    0xf1b5bb08
  40e490:	xor    cl,ch
  40e492:	mov    al,ds:0xcee2bde
  40e497:	push   esp
  40e498:	sub    dl,bh
  40e49a:	(bad)  
  40e49b:	push   esp
  40e49c:	sub    edx,edi
  40e49e:	je     0x40e491
  40e4a0:	xor    BYTE PTR [esi+0x7a],dl
  40e4a3:	mov    esi,0xedc1c12b
  40e4a8:	dec    eax
  40e4a9:	cmp    al,0x8b
  40e4ab:	mov    ebp,0x13fbc9cf
  40e4b0:	inc    edi
  40e4b1:	arpl   WORD PTR ds:0xe8019d9e,bp
  40e4b7:	int    0x8e
  40e4b9:	(bad)  
  40e4ba:	(bad)  
  40e4bb:	pusha  
  40e4bc:	(bad)  
  40e4bd:	aad    0x67
  40e4bf:	jmp    0x11fecb0c
  40e4c4:	sub    ecx,DWORD PTR [eax+0x41]
  40e4c7:	jmp    0x2882262c
  40e4cc:	dec    edi
  40e4cd:	(bad)  
  40e4ce:	je     0x40e4c1
  40e4d0:	mov    al,0xe1
  40e4d2:	mov    al,ds:0x74d6ab5e
  40e4d7:	push   ebp
  40e4d8:	stos   DWORD PTR es:[edi],eax
  40e4d9:	pop    esp
  40e4da:	or     BYTE PTR [ecx+0x0],al
	...
  40e501:	add    BYTE PTR [eax],al
  40e503:	add    BYTE PTR ds:0x9146ff53,cl
  40e509:	mov    DWORD PTR [ebx],0xeb825de9
  40e50f:	push   0xffffff84
  40e511:	shr    DWORD PTR [ecx-0x17],1
  40e514:	mul    BYTE PTR [esi]
  40e516:	call   FWORD PTR [eax+edx*2+0x6ba0e8e1]
  40e51d:	(bad)  
  40e51e:	mov    BYTE PTR [esp+ecx*4+0x5be9006d],ch
  40e525:	xchg   ebx,eax
  40e526:	addr16 add cl,al
  40e529:	dec    edx
  40e52a:	inc    ecx
  40e52b:	add    BYTE PTR [edx+0x62414161],bh
  40e531:	call   0x778aeda9
  40e536:	lahf   
  40e537:	jmp    DWORD PTR ds:0x5000066
  40e53d:	je     0x40e5a5
  40e53f:	pop    esi
  40e540:	arpl   WORD PTR [esi+0x0],cx
  40e543:	push   0x414e8a
  40e548:	add    eax,0xa8e80833
  40e54d:	scas   al,BYTE PTR es:[edi]
  40e54e:	std    
  40e54f:	call   ebp
  40e551:	xor    bh,ah
  40e553:	(bad)  
  40e554:	aas    
  40e555:	add    eax,0xb42bf3e8
  40e55a:	std    
  40e55b:	leave  
  40e55c:	mov    al,ds:0x69550001
  40e561:	fld    DWORD PTR [ecx+0x5380d6c4]
  40e567:	adc    BYTE PTR [eax],al
	...
  40e58d:	add    BYTE PTR [eax],al
  40e58f:	add    BYTE PTR [ecx-0x29],bl
  40e592:	push   0xfc426700
  40e597:	push   eax
  40e598:	push   ebp
  40e599:	xor    cl,BYTE PTR [eax]
  40e59b:	push   0xffffffb2
  40e59d:	mov    bl,0x73
  40e59f:	adc    BYTE PTR ds:0x62851c17,ah
  40e5a5:	xor    ah,BYTE PTR [edi]
  40e5a7:	mov    ebp,edi
  40e5a9:	mov    ah,0x8e
  40e5ab:	push   0xffffffb2
  40e5ad:	bound  eax,QWORD PTR [eax]
  40e5af:	push   0x805
  40e5b4:	push   ebp
  40e5b5:	xor    cl,BYTE PTR [edx+ebp*2]
  40e5b8:	push   ebp
  40e5b9:	mov    ah,0x70
  40e5bb:	add    al,0x88
  40e5bd:	or     BYTE PTR [edx+0x0],ch
  40e5c0:	pop    edx
  40e5c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5c2:	dec    ebx
  40e5c3:	add    BYTE PTR [edx+0x58],ah
  40e5c6:	(bad)  
  40e5c7:	jne    0x40e614
  40e5c9:	(bad)  
  40e5ca:	jmp    0x40e62b
  40e5cc:	adc    eax,0x89c902e2
  40e5d1:	fiadd  WORD PTR [edx]
  40e5d3:	push   ebp
  40e5d4:	rol    BYTE PTR [esi],0x83
  40e5d7:	ret    
  40e5d8:	dec    edi
  40e5d9:	cmp    DWORD PTR [si],edx
  40e5dc:	shr    BYTE PTR [edi+0x24ce0068],1
  40e5e2:	loopne 0x40e633
  40e5e4:	xor    al,0x3d
  40e5e6:	adc    bh,bh
  40e5e8:	mov    dh,0xea
  40e5ea:	push   0xf83d2400
  40e5ef:	(bad)  
  40e5f0:	jns    0x40e5ec
  40e5f2:	mov    BYTE PTR [edi+0x0],bh
	...
  40e61c:	sahf   
  40e61d:	or     ecx,DWORD PTR [ebx+0x69320f54]
  40e623:	add    BYTE PTR [ecx-0x1e],dh
  40e626:	push   0xffffffff
  40e628:	dec    eax
  40e629:	loop   0x40e62d
  40e62b:	(bad)  
  40e62c:	jle    0x40e600
  40e62e:	push   0x7efecff
  40e633:	push   0x4b
  40e635:	or     BYTE PTR [eax+ebp*8],al
  40e638:	sbb    BYTE PTR ds:0x52bb0004,0x58
  40e63f:	cld    
  40e640:	jecxz  0x40e5f1
  40e642:	dec    esp
  40e643:	add    BYTE PTR [ebx-0x57],cl
  40e646:	ror    BYTE PTR [edi],0x4b
  40e649:	xchg   ebp,eax
  40e64a:	mov    ebx,ebp
  40e64c:	mov    ah,0xbc
  40e64e:	or     bh,bh
  40e650:	ss (bad) 
  40e653:	push   edx
  40e654:	and    eax,DWORD PTR [ebx-0x22]
  40e657:	(bad)  
  40e658:	push   ss
  40e659:	fsubp  st(2),st
  40e65b:	xchg   edi,eax
  40e65c:	push   es
  40e65d:	loop   0x40e661
  40e65f:	shr    DWORD PTR [ebx+0x1b01c35e],1
  40e665:	and    ebx,DWORD PTR [eax+0xc]
  40e668:	jl     0x40e672
  40e66a:	pushf  
  40e66b:	sti    
  40e66c:	ins    BYTE PTR es:[edi],dx
  40e66d:	pop    eax
  40e66e:	mov    eax,ds:0x9bd36dde
  40e673:	mul    DWORD PTR [ebp+0x5d]
  40e676:	stc    
  40e677:	(bad)  
  40e679:	lock adc BYTE PTR [ecx-0x2d],ah
  40e67d:	sar    ebp,cl
  40e67f:	retf   
	...
  40e6a8:	mov    bh,ah
  40e6aa:	call   0xee26b6e7
  40e6af:	push   edi
  40e6b0:	push   ebx
  40e6b1:	rcr    BYTE PTR [ebx-0x4],cl
  40e6b4:	sub    al,0xf0
  40e6b6:	pusha  
  40e6b7:	(bad)  ds:0x33105bd3
  40e6bd:	test   DWORD PTR [esp+eax*1],ebx
  40e6c0:	dec    ebx
  40e6c1:	dec    ecx
  40e6c2:	sbb    ebp,ebx
  40e6c4:	lahf   
  40e6c5:	add    eax,0xe13357be
  40e6ca:	icebp  
  40e6cb:	pop    ebx
  40e6cc:	add    al,0xd3
  40e6ce:	lods   eax,DWORD PTR ds:[esi]
  40e6cf:	push   edi
  40e6d0:	push   edi
  40e6d1:	rcr    BYTE PTR [ebx],cl
  40e6d3:	hlt    
  40e6d4:	cmc    
  40e6d5:	pop    esp
  40e6d6:	add    esp,ebp
  40e6d8:	pop    ds
  40e6d9:	push   ecx
  40e6da:	xchg   esi,eax
  40e6db:	fst    QWORD PTR [ebx]
  40e6dd:	enter  0x3f4,0x76
  40e6e1:	jle    0x40e677
  40e6e3:	or     DWORD PTR [eax],0xffffffbe
  40e6e6:	jns    0x40e6c5
  40e6e8:	int    0xd2
  40e6ea:	sti    
  40e6eb:	sti    
  40e6ec:	xlat   BYTE PTR ds:[ebx]
  40e6ed:	mov    eax,gs
  40e6ef:	fistp  QWORD PTR [ebp+0x3fdcb8d2]
  40e6f5:	add    DWORD PTR [ecx-0x42],edx
  40e6f8:	scas   al,BYTE PTR es:[edi]
  40e6f9:	rcl    BYTE PTR [ebp-0x23],cl
  40e6fc:	pop    ds
  40e6fd:	icebp  
  40e6fe:	pop    ebx
  40e6ff:	xchg   DWORD PTR [edx+ebx*8-0x2dfb22bb],ebx
  40e706:	mov    bl,0xf
  40e708:	mov    WORD PTR [eax+eax*1-0x1f],ds
	...
  40e734:	jo     0x40e72c
  40e736:	(bad)  
  40e737:	cs sahf 
  40e739:	pusha  
  40e73a:	add    BYTE PTR [ebx-0x15009eb8],dl
  40e740:	dec    eax
  40e741:	or     DWORD PTR [ebp-0x122b094],ecx
  40e747:	push   cs
  40e748:	pop    ss
  40e749:	pop    edi
  40e74a:	inc    DWORD PTR [esi]
  40e74c:	cld    
  40e74d:	clc    
  40e74e:	imul   ebp,ecx,0x5be808e2
  40e754:	fwait
  40e755:	or     DWORD PTR [eax],eax
  40e757:	(bad)
  40e75c:	pop    ss
  40e75d:	add    al,BYTE PTR [eax]
  40e75f:	jmp    0xddc5b1ac
  40e764:	sti    
  40e765:	sar    dh,cl
  40e767:	jmp    0x40e7b1
  40e769:	or     DWORD PTR [eax],eax
  40e76b:	scas   al,BYTE PTR es:[edi]
  40e76c:	int    0xd9
  40e76e:	repnz mov esi,0xe9fed1ef
  40e774:	dec    eax
  40e775:	retf   0xad84
  40e778:	sbb    edx,ebx
  40e77a:	(bad)  
  40e77b:	jmp    0x7240f0c8
  40e780:	xor    eax,0x72fb8af1
  40e785:	or     DWORD PTR [ebp-0x129079c],ecx
  40e78b:	xchg   BYTE PTR [eax],bl
  40e78d:	test   BYTE PTR [ebp+ecx*4+0x19fed2fb],al
  40e794:	aam    0x8c
  40e796:	out    0x7a,eax
	...
  40e7c0:	lahf   
  40e7c1:	ror    BYTE PTR [edi+0x66],cl
  40e7c4:	sbb    eax,0x3cd4fef9
  40e7c9:	shl    BYTE PTR [ecx+eiz*8+0x32],cl
  40e7cd:	or     edi,edi
  40e7cf:	aam    0xa0
  40e7d1:	rcl    BYTE PTR [ecx+0x0],cl
  40e7d4:	out    0x88,al
  40e7d6:	mov    ebx,0xfdb551e8
  40e7db:	add    BYTE PTR [ebp-0x77],ch
  40e7de:	sbb    al,BYTE PTR [ecx]
  40e7e0:	jb     0x40e7e7
  40e7e2:	cmp    DWORD PTR [ebp-0x246a2],0x62
  40e7e9:	add    al,0x84
  40e7eb:	(bad)  
  40e7ed:	add    eax,0x99e7c700
  40e7f2:	icebp  
  40e7f3:	dec    DWORD PTR [ebp+0x6]
  40e7f6:	add    bh,ch
  40e7f8:	or     al,0x5e
  40e7fa:	ja     0x40e83d
  40e7fc:	repz or al,0x8d
  40e7ff:	test   DWORD PTR [edx],esi
  40e801:	mov    cl,0xfd
  40e803:	push   DWORD PTR [edx-0x23]
  40e806:	adc    cl,BYTE PTR [edx+eiz*1+0xd]
  40e80a:	test   eax,eax
  40e80c:	xchg   BYTE PTR [edi-0x39],al
  40e80f:	test   esi,edx
  40e811:	mov    eax,0xd23fffd
  40e816:	out    dx,eax
  40e817:	mov    esi,0x413f7e7a
  40e81c:	repnz add DWORD PTR [ebx-0x24b5200],0x50
	...
  40e84b:	add    dl,bl
  40e84d:	mov    edx,0x89e20049
  40e852:	mov    esi,0x83cc1174
  40e857:	aam    0xc1
  40e859:	mov    ah,0xfd
  40e85b:	add    ah,dl
  40e85d:	jecxz  0x40e81b
  40e85f:	push   0x414683
  40e864:	das    
  40e865:	mov    bh,dh
  40e867:	sti    
  40e868:	sub    eax,0x74e84eb4
  40e86d:	inc    eax
  40e86e:	add    BYTE PTR [eax],al
  40e870:	daa    
  40e871:	lds    ecx,FWORD PTR ds:0x3834b85
  40e877:	add    BYTE PTR [ebx-0x36],cl
  40e87a:	pop    DWORD PTR [eax+0xa]
  40e87d:	loop   0x40e806
  40e87f:	test   BYTE PTR [ebx+0x16],cl
  40e882:	(bad)  
  40e884:	sbb    ecx,DWORD PTR [edx-0x4d]
  40e887:	dec    ebx
  40e888:	dec    ebx
  40e889:	loop   0x40e898
  40e88b:	sar    bh,0x70
  40e88e:	test   DWORD PTR [ebx+ecx*2],edi
  40e891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e892:	inc    ebx
  40e893:	add    BYTE PTR [ebx-0x19],cl
  40e896:	jle    0x40e818
  40e898:	dec    ebx
  40e899:	loop   0x40e89d
  40e89b:	call   FWORD PTR [esi+0x4cfed6fa]
  40e8a1:	pop    edi
  40e8a2:	sbb    edi,0xfed9d738
  40e8a8:	test   ch,0xd5
  40e8ab:	(bad)  
  40e8ac:	xor    al,0x57
  40e8ae:	and    bl,0x0
	...
  40e8d5:	add    BYTE PTR [eax],al
  40e8d7:	add    BYTE PTR [eax],bh
  40e8d9:	scas   eax,DWORD PTR es:[edi]
  40e8da:	(bad)  [esi+ecx*8+0x1cfed599]
  40e8e1:	adc    ch,BYTE PTR [esi+0x1]
  40e8e4:	mov    eax,ds:0xa1006ce2
  40e8e9:	loop   0x40e957
  40e8eb:	add    dh,dl
  40e8ed:	pop    esp
  40e8ee:	jecxz  0x40e8e2
  40e8f0:	cld    
  40e8f1:	sahf   
  40e8f2:	xor    bh,bh
  40e8f4:	pop    esi
  40e8f5:	loop   0x40e93b
  40e8f7:	inc    ecx
  40e8f8:	dec    ebx
  40e8f9:	fcmovnb st,st(2)
  40e8fb:	jae    0x40e889
  40e8fd:	ja     0x40e94e
  40e8ff:	adc    al,0xdc
  40e901:	xor    al,0xbb
  40e903:	repnz aam 0x86
  40e906:	fnstenv [edi+ebp*8-0x3b0125ae]
  40e90d:	int3   
  40e90e:	repnz (bad) 
  40e910:	div    BYTE PTR [ebp-0x2b]
  40e913:	(bad)  
  40e914:	mov    ah,0x8
  40e916:	push   ecx
  40e917:	fisubr WORD PTR [edi-0x2025a231]
  40e91d:	lods   al,BYTE PTR ds:[esi]
  40e91e:	pop    ecx
  40e91f:	ficomp DWORD PTR [ebp+0x4b4d2ee0]
  40e925:	or     DWORD PTR [edx-0x8],edx
  40e928:	lea    edx,[ebp-0x2b]
  40e92b:	fidivr DWORD PTR [edi+0x7dda39e0]
  40e931:	iret   
  40e932:	jae    0x40e91b
  40e934:	jns    0x40e905
  40e936:	and    eax,0x1df8f7da
  40e93b:	nop
	...
  40e964:	js     0x40e941
  40e966:	adc    eax,0xbb964da
  40e96b:	ficom  DWORD PTR [ebp-0x31]
  40e96e:	cmp    esp,edi
  40e970:	pop    ecx
  40e971:	iret   
  40e972:	std    
  40e973:	jmp    0xcc12:0x3e94318
  40e97a:	aam    0x3
  40e97c:	sahf   
  40e97d:	adc    ah,0x85
  40e980:	or     BYTE PTR [edx-0xa8072cb],dl
  40e986:	popa   
  40e987:	test   bh,0x44
  40e98a:	xchg   ecx,eax
  40e98b:	xor    al,0xa1
  40e98d:	or     esi,eax
  40e98f:	dec    edi
  40e990:	aas    
  40e991:	into   
  40e992:	xor    ecx,DWORD PTR [ecx+esi*2]
  40e995:	or     DWORD PTR [esi+0x1ace574f],esi
  40e99b:	xor    dh,cl
  40e99d:	leave  
  40e99e:	sbb    esi,DWORD PTR [eax]
  40e9a0:	add    al,0x45
  40e9a2:	pop    ebp
  40e9a3:	add    al,0x4b
  40e9a5:	or     ecx,ebp
  40e9a7:	mov    WORD PTR [edi-0x6f],?
  40e9aa:	popa   
  40e9ab:	test   bh,0x44
  40e9ae:	inc    ebp
  40e9af:	xor    al,0xbe
  40e9b1:	inc    esp
  40e9b2:	test   eax,0xfff93134
  40e9b7:	jne    0x40e9c5
  40e9b9:	xchg   ecx,eax
  40e9ba:	(bad)  
  40e9bb:	sbb    eax,DWORD PTR [ebx-0x76]
  40e9be:	jl     0x40e965
  40e9c0:	inc    edi
  40e9c1:	push   ebp
  40e9c2:	daa    
  40e9c3:	ins    BYTE PTR es:[edi],dx
  40e9c4:	cld    
  40e9c5:	enter  0xdcfe,0x0
	...
  40e9ed:	add    BYTE PTR [eax],al
  40e9ef:	add    BYTE PTR [edi+ecx*8+0x1773f974],ch
  40e9f6:	(bad)  
  40e9f7:	mov    esp,0xf174ce44
  40e9fc:	jo     0x40e9b8
  40e9fe:	cld    
  40e9ff:	mov    ss:0xec4136cf,al
  40ea05:	inc    ecx
  40ea06:	add    cl,ch
  40ea08:	mov    edi,0x8d0c1e03
  40ea0e:	je     0x40ea47
  40ea10:	outs   dx,BYTE PTR ds:[esi]
  40ea11:	xchg   edi,eax
  40ea12:	mov    dh,BYTE PTR [eax+esi*4-0x3f9ee7d]
  40ea19:	nop
  40ea1a:	(bad)  
  40ea1b:	fwait
  40ea1c:	push   eax
  40ea1d:	cs leave 
  40ea1f:	sub    esi,DWORD PTR [edi]
  40ea21:	into   
  40ea22:	push   ebx
  40ea23:	bound  esp,QWORD PTR [ebx]
  40ea25:	mov    ebx,eax
  40ea27:	loope  0x40ea3b
  40ea29:	iret   
  40ea2a:	(bad)  
  40ea2b:	ss (bad) 
  40ea2d:	xor    al,0x10
  40ea2f:	bound  edx,QWORD PTR [esi]
  40ea31:	jge    0x40e9b7
  40ea33:	shl    edx,1
  40ea35:	into   
  40ea36:	(bad)  
  40ea37:	sbb    DWORD PTR [ebp+0x5734ff09],ebx
  40ea3d:	arpl   WORD PTR [eax],ax
  40ea3f:	mov    dh,0x8d
  40ea41:	stc    
  40ea42:	(bad)  
  40ea43:	sbb    edx,DWORD PTR [ebx-0x7c]
  40ea46:	mov    edi,0x84c66a1c
  40ea4b:	popf   
  40ea4c:	add    cl,bh
  40ea4e:	(bad)  
  40ea4f:	jmp    0x6240f39c
	...
  40ea7c:	gs (bad) 
  40ea7e:	std    
  40ea7f:	add    ch,al
  40ea81:	mov    al,0x89
  40ea83:	adc    dh,BYTE PTR [edi]
  40ea85:	dec    edi
  40ea86:	sti    
  40ea87:	(bad)  
  40ea88:	xor    eax,0x2f8d4eb1
  40ea8d:	or     bh,bh
  40ea8f:	jmp    DWORD PTR ds:0x5106a1a
  40ea95:	jg     0x40ea8d
  40ea97:	(bad)  
  40ea98:	cmc    
  40ea99:	mov    al,0xfd
  40ea9b:	push   edx
  40ea9c:	jbe    0x40ea22
  40ea9e:	mov    ebx,0xfdb104fc
  40eaa3:	add    BYTE PTR [esi+0x72bd8d23],bh
  40eaa9:	mov    al,0xfd
  40eaab:	jmp    DWORD PTR ds:0xcfff103f
  40eab1:	add    eax,0x1bfff57
  40eab6:	call   0xfdf21fce
  40eabb:	sub    DWORD PTR ds:0x468dfdda,0xffffffb0
  40eac2:	std    
  40eac3:	(bad)  
  40eac4:	mov    edi,0xa9aae9ea
  40eac9:	pop    ebx
  40eaca:	idiv   esi
  40eacc:	and    eax,0x251289b5
  40ead1:	jnp    0x40eac9
  40ead3:	inc    BYTE PTR ds:0x2a52fdb5
  40ead9:	adc    al,0xc9
  40eadb:	ret    0x8f6
  40eade:	push   ebp
  40eadf:	mov    eax,DWORD PTR [eax]
	...
  40eb05:	add    BYTE PTR [eax],al
  40eb07:	add    dh,dh
  40eb09:	xchg   dl,al
  40eb0b:	clc    
  40eb0c:	les    esi,FWORD PTR [ebp+edi*8+0xc1a6957]
  40eb13:	mov    edx,DWORD PTR [eax]
  40eb15:	add    BYTE PTR [ebx-0x24b5b08],0x50
  40eb1c:	cmp    BYTE PTR ds:0x734b006a,al
  40eb22:	push   eax
  40eb23:	or     al,0xd4
  40eb25:	adc    BYTE PTR [eax*4-0x38ca31f5],bl
  40eb2c:	push   cs
  40eb2d:	dec    esi
  40eb2e:	add    al,0x0
  40eb30:	dec    ebx
  40eb31:	loop   0x40eba5
  40eb33:	mov    bl,dh
  40eb35:	pop    edx
  40eb36:	(bad)  
  40eb37:	(bad)  
  40eb38:	lods   al,BYTE PTR ds:[esi]
  40eb39:	push   edi
  40eb3a:	repnz mov WORD PTR [esi],cs
  40eb3d:	cs xor al,0x8d
  40eb40:	(bad)  
  40eb41:	ss (bad) 
  40eb43:	(bad)  
  40eb44:	xchg   esp,eax
  40eb45:	xchg   edx,eax
  40eb46:	push   0xdc4d8c10
  40eb4b:	std    
  40eb4c:	test   BYTE PTR [ebx],cl
  40eb4e:	xlat   BYTE PTR ds:[ebx]
  40eb4f:	push   ecx
  40eb50:	dec    edi
  40eb51:	xor    al,BYTE PTR [ebx+0x72e2777c]
  40eb57:	jae    0x40eb84
  40eb59:	push   ebp
  40eb5a:	cdq    
  40eb5b:	sti    
  40eb5c:	gs jmp 0x40eb35
  40eb5f:	(bad)  
  40eb60:	pop    esp
  40eb61:	ins    DWORD PTR es:[edi],dx
  40eb62:	push   es
  40eb63:	(bad)  
  40eb64:	fsubp  st(1),st
  40eb66:	sub    eax,0xd70343e8
  40eb6b:	inc    BYTE PTR [eax]
	...
  40eb91:	add    BYTE PTR [eax],al
  40eb93:	add    al,cl
  40eb95:	and    dh,ah
  40eb97:	(bad)  
  40eb98:	cmp    al,0xa5
  40eb9a:	(bad)  
  40eb9b:	(bad)  
  40eb9c:	mov    esi,0xf9ea7409
  40eba1:	push   esi
  40eba2:	jo     0x40eb9b
  40eba4:	and    eax,0x398ad5ab
  40eba9:	mov    bl,0x8f
  40ebab:	not    DWORD PTR ds:0x79fed5bb
  40ebb1:	fidiv  DWORD PTR ds:0x2da09c9
  40ebb7:	push   ebp
  40ebb8:	rol    ch,1
  40ebba:	add    ebx,0x74d6f3bb
  40ebc0:	aas    
  40ebc1:	or     DWORD PTR [ecx-0x16f66c34],edx
  40ebc7:	or     cl,BYTE PTR [ebx]
  40ebc9:	push   esi
  40ebca:	in     al,dx
  40ebcb:	xor    eax,0x3dcc702
  40ebd0:	cli    
  40ebd1:	call   0x808baf3f
  40ebd6:	cwde   
  40ebd7:	mov    BYTE PTR [edi],al
  40ebd9:	fstp   QWORD PTR [eax]
  40ebdb:	xor    dh,BYTE PTR [ebp+edx*2+0x7b28ebdd]
  40ebe2:	gs (bad) 
  40ebe4:	jno    0x40eba8
  40ebe6:	outs   dx,DWORD PTR ds:[esi]
  40ebe7:	dec    eax
  40ebe8:	ja     0x40ebc9
  40ebea:	loop   0x40ebf9
  40ebec:	inc    esp
  40ebed:	xchg   ebx,eax
  40ebee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebef:	sub    al,0x9f
  40ebf1:	or     DWORD PTR [edi+ebp*4-0x10c077f5],ebp
	...
  40ec20:	cli    
  40ec21:	fld    DWORD PTR [ecx]
  40ec23:	into   
  40ec24:	ret    
  40ec25:	push   ebp
  40ec26:	sbb    edx,ebp
  40ec28:	and    al,0x13
  40ec2a:	test   BYTE PTR [ebp+0x330d1b08],0xf3
  40ec31:	or     al,0xab
  40ec33:	inc    esp
  40ec34:	dec    ebx
  40ec35:	jle    0x40ebda
  40ec37:	mov    ebx,0x4c14e0fc
  40ec3c:	dec    ebx
  40ec3d:	or     DWORD PTR [edx-0x41],ebp
  40ec40:	push   eax
  40ec41:	jl     0x40ebee
  40ec43:	mov    ebx,0xb373ca84
  40ec48:	and    al,0x82
  40ec4a:	popa   
  40ec4b:	aad    0x25
  40ec4d:	and    DWORD PTR [ebx],0xd68686b4
  40ec53:	lock call 0xe8ca:0xf75f67b6
  40ec5b:	add    ecx,DWORD PTR [ebx-0x36]
  40ec5e:	xor    esi,DWORD PTR [eax+0x2b000d64]
  40ec64:	mov    BYTE PTR [ecx],cl
  40ec66:	lea    esp,[edi+ebp*4]
  40ec69:	cmp    ch,al
  40ec6b:	gs nop
  40ec6d:	or     DWORD PTR [eax],eax
  40ec6f:	push   0xb
  40ec71:	dec    DWORD PTR [esp+ebp*1+0x14ff3a97]
  40ec78:	xchg   edi,eax
  40ec79:	loop   0x40ecd2
  40ec7b:	add    bl,BYTE PTR [esi-0x8db7735]
  40ec81:	jge    0x40ecc7
  40ec83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  40ecac:	jg     0x40ec78
  40ecae:	je     0x40ec49
  40ecb0:	pop    ds
  40ecb1:	dec    eax
  40ecb2:	inc    edx
  40ecb3:	test   al,0x48
  40ecb5:	retf   0xa734
  40ecb8:	jno    0x40ed02
  40ecba:	add    BYTE PTR [ecx+0x2a],al
  40ecbd:	dec    edi
  40ecbe:	dec    DWORD PTR [esi+0x42]
  40ecc1:	leave  
  40ecc2:	push   cs
  40ecc3:	ins    DWORD PTR es:[edi],dx
  40ecc4:	test   cl,0xfe
  40ecc7:	jmp    0x6b09329d
  40eccc:	sbb    al,0xbd
  40ecce:	(bad)  
  40eccf:	fucomp st(4)
  40ecd1:	xchg   edi,edi
  40ecd3:	call   0xedb5b720
  40ecd8:	jo     0x40ece0
  40ecda:	dec    ecx
  40ecdb:	jmp    0x6b20a528
  40ece0:	xchg   DWORD PTR [eax],ecx
  40ece2:	mov    DWORD PTR [eax+ebx*8-0x38128b36],ebp
  40ece9:	inc    esp
  40ecea:	mov    ah,0xf6
  40ecec:	test   DWORD PTR [ebp-0x34f75b72],edi
  40ecf2:	je     0x40eca5
  40ecf4:	iret   
  40ecf5:	inc    esp
  40ecf6:	les    esp,FWORD PTR [esi-0x170072a3]
  40ecfc:	dec    eax
  40ecfd:	or     DWORD PTR [ebx+0x41205f0c],eax
  40ed03:	add    dl,dh
  40ed05:	add    eax,0xb6f5074
  40ed0a:	mov    eax,0x6a068850
	...
  40ed37:	add    BYTE PTR [eax-0x7dba72fb],cl
  40ed3d:	push   ss
  40ed3e:	push   0x0
  40ed40:	outs   dx,DWORD PTR ds:[esi]
  40ed41:	or     eax,eax
  40ed43:	push   eax
  40ed44:	mov    ebp,0x232926da
  40ed49:	add    eax,0xf7c6c00b
  40ed4e:	cmp    BYTE PTR [ebp+0x7e],0x6
  40ed52:	je     0x40ed80
  40ed54:	and    DWORD PTR [ebx],esi
  40ed56:	adc    BYTE PTR [eax],al
  40ed58:	mov    dh,0xfd
  40ed5a:	mov    dl,BYTE PTR [ebp-0x5e]
  40ed5d:	sub    eax,edi
  40ed5f:	add    bh,BYTE PTR ds:0xaa75ff05
  40ed65:	mov    ah,0x73
  40ed67:	mov    eax,0xffbc3afd
  40ed6c:	mov    DWORD PTR [ecx],0xe4720368
  40ed72:	mov    esp,0xfdb006e8
  40ed77:	call   FWORD PTR ds:0x18e8bc3b
  40ed7d:	or     eax,0x3b3d0000
  40ed82:	enter  0xee8,0x3c
  40ed86:	(bad)  
  40ed87:	(bad)  
  40ed88:	cmp    eax,0x96e8d03b
  40ed8d:	push   esi
  40ed8e:	(bad)  
  40ed8f:	(bad)  
  40ed90:	(bad)  
  40ed92:	ror    BYTE PTR [edx+eiz*1],0xf8
  40ed96:	mov    ch,ah
  40ed98:	mov    eax,ds:0x8dc688
	...
  40edc1:	add    BYTE PTR [eax],al
  40edc3:	add    BYTE PTR [edi-0x27],dh
  40edc6:	dec    esi
  40edc7:	push   0x414f4a
  40edcc:	dec    ebx
  40edcd:	dec    esp
  40edce:	or     DWORD PTR [edx+0x4b],ebp
  40edd1:	dec    edx
  40edd2:	cld    
  40edd3:	inc    ecx
  40edd4:	mov    dh,BYTE PTR [edx-0x4d6c4226]
  40edda:	add    al,BYTE PTR [ebp-0x40854ff5]
  40ede0:	dec    ebx
  40ede1:	mov    dl,0x2
  40ede3:	mov    edi,DWORD PTR [esi+0x6e]
  40ede6:	jle    0x40edf9
  40ede8:	into   
  40ede9:	in     eax,dx
  40edea:	retf   
  40edeb:	dec    edi
  40edec:	aam    0x25
  40edee:	sar    dh,1
  40edf0:	jns    0x40eda8
  40edf2:	xchg   DWORD PTR [edi-0x8dc5ac],edi
  40edf8:	mov    esp,0xb37c85b2
  40edfd:	mov    dl,0x1
  40edff:	test   bh,dl
  40ee01:	mov    dl,0x2
  40ee03:	add    BYTE PTR [ebp+esi*2-0x4d63004a],cl
  40ee0a:	add    al,bh
  40ee0c:	push   cs
  40ee0d:	cli    
  40ee0e:	add    eax,DWORD PTR [eax]
  40ee10:	dec    ebx
  40ee11:	mov    dl,0xc9
  40ee13:	inc    esp
  40ee14:	fwait
  40ee15:	sbb    al,BYTE PTR [eax+eax*1]
  40ee18:	dec    ebx
  40ee19:	out    dx,eax
  40ee1a:	dec    eax
  40ee1b:	int3   
  40ee1c:	dec    ebx
  40ee1d:	mov    dl,0x2
  40ee1f:	add    al,al
  40ee21:	popf   
  40ee22:	retf   0x398a
  40ee25:	cmp    eax,0xcc49
	...
  40ee4e:	add    BYTE PTR [eax],al
  40ee50:	sti    
  40ee51:	xor    al,0x49
  40ee53:	sar    bl,1
  40ee55:	mov    eax,DWORD PTR [ebx]
  40ee57:	call   esi
  40ee59:	sbb    ebx,edx
  40ee5b:	push   ecx
  40ee5c:	push   edi
  40ee5d:	mov    ebx,0x339774c2
  40ee62:	push   ecx
  40ee63:	int3   
  40ee64:	dec    edx
  40ee65:	inc    ebp
  40ee66:	inc    ecx
  40ee67:	sub    DWORD PTR [esi-0x728bfbe2],0x9
  40ee6e:	push   ecx
  40ee6f:	or     al,0x89
  40ee71:	dec    edx
  40ee72:	jmp    0xc11e8e49
  40ee77:	enter  0x984,0xe9
  40ee7b:	inc    ah
  40ee7d:	cmp    al,0xf3
  40ee7f:	imul   eax,DWORD PTR [ecx+ecx*1],0x4dc203e9
  40ee86:	mov    eax,ds:0x23d045de
  40ee8b:	mov    esp,0x3e8c7e4
  40ee90:	fdivr  QWORD PTR ds:0xdd5fd2b1
  40ee96:	xchg   ebp,eax
  40ee97:	pop    eax
  40ee98:	inc    ebx
  40ee99:	mov    cl,0x86
  40ee9b:	rol    ch,1
  40ee9d:	mov    DWORD PTR [ebp-0x294f68a8],0x6a094b3b
  40eea7:	push   eax
  40eea8:	xchg   ebx,eax
  40eea9:	or     ch,dh
  40eeab:	sti    
  40eeac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eead:	cmp    eax,0x5144db41
  40eeb2:	jmp    0x40eeba
	...
  40eedb:	add    BYTE PTR [eax-0x6cc79e6c],ah
  40eee1:	xchg   ebx,eax
  40eee2:	cli    
  40eee3:	sar    bh,cl
  40eee5:	rol    BYTE PTR [ebp+0x35],0x53
  40eee9:	xchg   esp,eax
  40eeea:	xchg   ebx,eax
  40eeeb:	iret   
  40eeec:	rcr    DWORD PTR [edx],0x36
  40eeef:	pop    eax
  40eef0:	outs   dx,DWORD PTR ds:[esi]
  40eef1:	(bad)  
  40eef2:	call   0xf603:0xecca93fb
  40eef9:	xchg   ebx,eax
  40eefa:	or     al,0x86
  40eefc:	mov    BYTE PTR [eax+0x450f86be],ch
  40ef02:	stos   DWORD PTR es:[edi],eax
  40ef03:	inc    esp
  40ef04:	dec    ebx
  40ef05:	or     DWORD PTR [ecx+esi*8+0x5],edi
  40ef09:	or     eax,0x98a457d
  40ef0e:	add    al,ch
  40ef10:	dec    eax
  40ef11:	or     DWORD PTR [eax],eax
  40ef13:	das    
  40ef14:	enter  0x4148,0xe9
  40ef18:	dec    DWORD PTR [edi]
  40ef1a:	data16 test al,0x61
  40ef1d:	or     eax,DWORD PTR [ebx-0x7cd0ba51]
  40ef23:	cmovg  edi,DWORD PTR [ebx+esi*8]
  40ef27:	push   0x4c
  40ef29:	sub    DWORD PTR ds:0xf094f28,0xfec6fe6d
  40ef33:	jmp    0xd7f4f507
  40ef38:	mov    DWORD PTR [ecx],ecx
  40ef3a:	add    dh,ch
  40ef3c:	int3   
  40ef3d:	mov    ah,0xff
  40ef3f:	call   0x40ef44
	...
  40ef68:	dec    eax
  40ef69:	mov    bh,BYTE PTR [ecx+eax*8]
  40ef6c:	popa   
  40ef6d:	dec    eax
  40ef6e:	add    cl,ch
  40ef70:	dec    ebx
  40ef71:	(bad)  
  40ef72:	loopne 0x40ef5d
  40ef74:	dec    eax
  40ef75:	or     edi,eax
  40ef77:	sub    al,0x9b
  40ef79:	(bad)  
  40ef7a:	(bad)  
  40ef7b:	jmp    0x6185bdc8
  40ef80:	inc    edi
  40ef81:	or     DWORD PTR [eax],eax
  40ef83:	jmp    0xba3d3c9d
  40ef88:	or     eax,0x26b9f84d
  40ef8d:	or     DWORD PTR [eax+0x33],ebp
  40ef90:	add    eax,0x7c3e0048
  40ef95:	jp     0x40efc4
  40ef97:	test   al,0x48
  40ef99:	adc    al,al
  40ef9b:	fmulp  st(4),st
  40ef9d:	jl     0x40ef9e
  40ef9f:	call   0x21bd79ec
  40efa4:	dec    edi
  40efa5:	push   ss
  40efa6:	test   BYTE PTR [ebp+0x47],al
  40efa9:	or     DWORD PTR [eax],eax
  40efab:	push   0xffffff94
  40efad:	(bad)  
  40efb0:	xor    eax,0x2200a08e
  40efb5:	or     cl,BYTE PTR [ebx-0x7f1cc98b]
  40efbb:	add    BYTE PTR [edx],dh
  40efbd:	or     dl,BYTE PTR [esi-0x75]
  40efc0:	cmp    al,0xd8
  40efc2:	je     0x40efdc
  40efc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efc5:	dec    edi
  40efc6:	lock jmp FWORD PTR [ecx+edi*4-0x73]
  40efcb:	inc    ebp
	...
  40eff4:	push   ds
  40eff5:	bound  eax,QWORD PTR [eax-0x17f2ccbe]
  40effb:	xlat   BYTE PTR ds:[ebx]
  40effc:	sub    al,0xd
  40effe:	add    cl,dl
  40f000:	add    cl,BYTE PTR [ebp+0x4f6b02be]
  40f006:	loopne 0x40f070
  40f008:	jb     0x40f056
  40f00a:	inc    ecx
  40f00b:	add    BYTE PTR [ebp+0x4f],ah
  40f00e:	in     al,0xc7
  40f010:	pop    ds
  40f011:	test   eax,0x9b2fffe
  40f016:	lea    eax,[ebp-0x26]
  40f019:	stc    
  40f01a:	imul   eax,DWORD PTR [ecx],0x6a0d58
  40f020:	daa    
  40f021:	dec    edi
  40f022:	loopne 0x40f074
  40f024:	dec    eax
  40f025:	or     eax,0xfa02458d
  40f02a:	(bad)  
  40f02b:	adc    eax,0x41223a
  40f030:	test   eax,0xf12d72c9
  40f035:	push   esi
  40f036:	in     al,dx
  40f037:	add    BYTE PTR [esi+0x6201b7f0],bh
  40f03d:	or     DWORD PTR [eax],eax
  40f03f:	or     esp,DWORD PTR [edx]
  40f041:	pop    esi
  40f042:	push   ss
  40f043:	call   FWORD PTR [edi+0x3a75fdc1]
  40f049:	fnstenv [ebx-0x14]
  40f04c:	xor    eax,0x4b680860
  40f051:	mov    ah,0x2
  40f053:	out    dx,eax
  40f054:	add    eax,0xf8fb0b
	...
  40f07d:	add    BYTE PTR [eax],al
  40f07f:	add    BYTE PTR [esp+ecx*1],bh
  40f082:	shl    BYTE PTR [edi+eiz*1+0x1b],1
  40f086:	xchg   esi,eax
  40f087:	inc    esp
  40f088:	dec    ebx
  40f089:	mov    dl,0x30
  40f08b:	call   DWORD PTR [esi+0x47c582ba]
  40f091:	das    
  40f092:	push   ecx
  40f093:	clc    
  40f094:	dec    ebx
  40f095:	pop    esi
  40f096:	std    
  40f097:	or     BYTE PTR [ebp-0x4e],0xfd
  40f09b:	test   BYTE PTR [ebx+edx*8-0x32],dh
  40f09f:	(bad)  
  40f0a0:	cld    
  40f0a1:	add    eax,0x8a5efed0
  40f0a6:	sbb    eax,0xbd1c4b41
  40f0ab:	ror    DWORD PTR [edi-0x4e],0x37
  40f0af:	mov    ebp,edi
  40f0b1:	das    
  40f0b2:	enter  0x61f7,0xb2
  40f0b6:	pop    eax
  40f0b7:	das    
  40f0b8:	int3   
  40f0b9:	and    eax,0x21eae7fc
  40f0be:	iret   
  40f0bf:	(bad)  
  40f0c0:	shl    ch,cl
  40f0c2:	iret   
  40f0c3:	jg     0x40f13b
  40f0c5:	inc    ebx
  40f0c6:	inc    ebp
  40f0c7:	inc    ecx
  40f0c8:	dec    ebx
  40f0c9:	mov    dl,0x57
  40f0cb:	sub    DWORD PTR [ebx],esi
  40f0cd:	scas   al,BYTE PTR es:[edi]
  40f0ce:	inc    eax
  40f0cf:	inc    ecx
  40f0d0:	dec    ebx
  40f0d1:	fimul  DWORD PTR [edi-0x254df5c0]
  40f0d7:	in     al,0xd
  40f0d9:	pop    ebx
  40f0da:	iret   
  40f0db:	test   BYTE PTR [ebx+0x4b682bde],cl
  40f0e1:	jo     0x40f126
	...
  40f10b:	add    bl,ah
  40f10d:	and    al,BYTE PTR [ebp+0x41]
  40f110:	dec    ebx
  40f111:	dec    edx
  40f112:	mov    dl,0x7d
  40f114:	repz lds eax,FWORD PTR fs:[esp+ebx*2]
  40f119:	or     DWORD PTR [eax+0x6a0a4b44],ebp
  40f11f:	adc    DWORD PTR [edi+0x47],eax
  40f122:	test   al,0x3
  40f124:	dec    ebx
  40f125:	cmp    eax,0xc187c6d3
  40f12a:	call   0xd24a3c32
  40f12f:	ret    
  40f130:	jl     0x40f18b
  40f132:	cdq    
  40f133:	cmp    BYTE PTR [edi-0x3f],0x9a
  40f137:	into   
  40f138:	aaa    
  40f139:	or     eax,0x8e4b452b
  40f13e:	test   al,0x4c
  40f140:	dec    ecx
  40f141:	mov    al,0xf6
  40f143:	add    BYTE PTR [edi+0x4958e8c1],0xb0
  40f14a:	fmulp  st(6),st
  40f14c:	jg     0x40f10f
  40f14e:	mov    ebp,0x3ab14358
  40f153:	retf   
  40f154:	in     eax,0xc3
  40f156:	popa   
  40f157:	cmp    bl,ah
  40f159:	(bad)  
  40f15a:	cli    
  40f15b:	into   
  40f15c:	pop    edi
  40f15d:	rcr    DWORD PTR [ebp+0x1bc44331],0xfc
  40f164:	lods   al,BYTE PTR ds:[esi]
  40f165:	dec    esi
  40f166:	mov    esi,cs
  40f168:	mov    ebp,0xacfbfbc3
  40f16d:	out    dx,eax
  40f16e:	jle    0x40f13e
	...
  40f198:	lods   eax,DWORD PTR ds:[esi]
  40f199:	ret    
  40f19a:	sti    
  40f19b:	iret   
  40f19c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f19d:	cmp    eax,0x39f8dbe1
  40f1a2:	data16 into 
  40f1a4:	add    esi,0xffffffe4
  40f1a7:	add    esi,esi
  40f1a9:	pop    DWORD PTR [edx+eax*4-0x78]
  40f1ad:	mov    eax,0x901836b6
  40f1b2:	fwait
  40f1b3:	dec    DWORD PTR [ebp+0x4b03e906]
  40f1b9:	or     DWORD PTR [eax],eax
  40f1bb:	add    edx,DWORD PTR ss:[ecx]
  40f1be:	call   0x49f630
  40f1c3:	push   0xffffff80
  40f1c5:	or     BYTE PTR [edi-0x10],dh
  40f1c8:	xor    ecx,ecx
  40f1ca:	pop    edx
  40f1cb:	mov    dh,0x76
  40f1cd:	rol    cl,1
  40f1cf:	loope  0x40f219
  40f1d1:	fsub   st,st(7)
  40f1d3:	jb     0x40f248
  40f1d5:	adc    eax,0xdab1eb89
  40f1da:	push   cs
  40f1db:	imul   esi,edx,0xffffffc2
  40f1de:	(bad)  
  40f1df:	jmp    0x72492f85
  40f1e4:	test   BYTE PTR [ecx],dl
  40f1e6:	jmp    0x40f22b
  40f1e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1e9:	mov    es,WORD PTR ds:0x71f31b69
  40f1ef:	jecxz  0x40f1b9
  40f1f1:	mov    esi,0x894c3e38
  40f1f6:	jmp    0x40f1f1
  40f1f8:	adc    esp,DWORD PTR [eax]
  40f1fa:	xor    BYTE PTR [ebp+0x0],0x0
	...
  40f221:	add    BYTE PTR [eax],al
  40f223:	add    BYTE PTR [eax-0x496f2c9],cl
  40f229:	dec    esp
  40f22a:	ja     0x40f21d
  40f22c:	enter  0x40ae,0x69
  40f230:	add    edx,DWORD PTR [ecx]
  40f232:	jmp    0x40f214
  40f234:	arpl   cx,cx
  40f236:	pop    edx
  40f237:	cs ins DWORD PTR es:[edi],dx
  40f239:	rol    cl,1
  40f23b:	icebp  
  40f23c:	dec    eax
  40f23d:	add    eax,0xfeb0fb30
  40f242:	cmp    dh,bh
  40f244:	dec    esp
  40f245:	cmc    
  40f246:	das    
  40f247:	adc    BYTE PTR [esi-0x6d24bf02],0xfe
  40f24e:	inc    ebp
  40f24f:	(bad)  
  40f250:	inc    esi
  40f251:	cmc    
  40f252:	inc    eax
  40f253:	in     eax,dx
  40f254:	sub    BYTE PTR [edi+0x5f870208],0x5f
  40f25b:	add    BYTE PTR [edi+edi*2-0x399df740],ch
  40f262:	fiadd  WORD PTR [eax+ebp*2]
  40f265:	retf   0x4ba8
  40f268:	icebp  
  40f269:	retf   0xb00
  40f26c:	or     DWORD PTR [edx-0x5e],ebx
  40f26f:	mov    esp,DWORD PTR [edi-0x52cf023e]
  40f275:	dec    edx
  40f276:	clc    
  40f277:	call   edi
  40f279:	mov    ebp,0xcc4e458d
  40f27e:	inc    ebx
  40f27f:	hlt    
  40f280:	and    al,BYTE PTR [esi]
  40f282:	add    BYTE PTR [eax],al
  40f284:	mov    cl,0x12
  40f286:	sub    BYTE PTR [ecx],ch
	...
  40f2b0:	repz add eax,0x42547400
  40f2b6:	inc    esp
  40f2b7:	lock push edx
  40f2b9:	pop    edi
  40f2ba:	add    DWORD PTR [edx-0xe],ebp
  40f2bd:	pop    edi
  40f2be:	add    BYTE PTR [edx-0xe],ch
  40f2c1:	pop    edi
  40f2c2:	add    BYTE PTR [ebp-0xb12ad9],cl
  40f2c8:	pop    ss
  40f2c9:	push   ds
  40f2ca:	sub    DWORD PTR [ecx-0xe],eax
  40f2cd:	sar    BYTE PTR [esi+0x7b88d874],0xf4
  40f2d4:	loop   0x40f32f
  40f2d6:	xor    al,0x8b
  40f2d8:	daa    
  40f2d9:	or     DWORD PTR [ebx+0x810e24d],ecx
  40f2df:	ja     0x40f269
  40f2e1:	ror    DWORD PTR [ecx+0x7c413675],1
  40f2e7:	or     BYTE PTR [ecx],bh
  40f2e9:	add    esi,eax
  40f2eb:	jecxz  0x40f29d
  40f2ed:	fsub   DWORD PTR [edx-0xf69875]
  40f2f3:	jne    0x40f2e7
  40f2f5:	inc    esp
  40f2f6:	(bad)  
  40f2f7:	(bad)  
  40f2f8:	ja     0x40f2d3
  40f2fa:	out    0xe3,al
  40f2fc:	dec    ebx
  40f2fd:	outs   dx,DWORD PTR ds:[esi]
  40f2fe:	add    al,BYTE PTR [eax]
  40f300:	ret    
  40f301:	mov    al,0x2
  40f303:	add    BYTE PTR [ebx+0x67],cl
  40f306:	sub    ebx,DWORD PTR [esi-0x7e]
  40f309:	in     eax,dx
  40f30a:	cli    
  40f30b:	push   DWORD PTR [ecx]
  40f30d:	lock daa 
  40f30f:	pop    edi
  40f310:	std    
  40f311:	call   0x40fad6
	...
  40f33a:	add    BYTE PTR [eax],al
  40f33c:	dec    ebx
  40f33d:	test   DWORD PTR [edi-0x15],esi
  40f340:	enter  0xc2eb,0x67
  40f344:	dec    ebx
  40f345:	rol    BYTE PTR [edx],cl
  40f347:	add    BYTE PTR [ebx],dh
  40f349:	push   eax
  40f34a:	push   ecx
  40f34b:	push   DWORD PTR [edx+edi*1]
  40f34e:	inc    esi
  40f34f:	cld    
  40f350:	mov    ds:0x4b0022b2,eax
  40f355:	or     dl,BYTE PTR [ecx+0x78b01c71]
  40f35b:	inc    esp
  40f35c:	adc    ebx,DWORD PTR [ebx+0x4]
  40f35f:	and    BYTE PTR [ebx-0x4e],cl
  40f362:	fisub  DWORD PTR [ecx+edi*2-0x79773529]
  40f369:	(bad)  
  40f36a:	pop    ebx
  40f36b:	add    BYTE PTR [ebx],ch
  40f36d:	mov    dl,0x2
  40f36f:	call   0xff0bf847
  40f374:	shr    ch,cl
  40f376:	shl    DWORD PTR [edi+0x4b],cl
  40f379:	adc    al,BYTE PTR [eax+eax*1]
  40f37c:	jecxz  0x40f3b9
  40f37e:	push   esi
  40f37f:	dec    esp
  40f381:	cmp    DWORD PTR [ecx-0x14],eax
  40f384:	xor    esi,DWORD PTR [edx-0x75b4ffde]
  40f38a:	dec    ecx
  40f38b:	jb     0x40f341
  40f38d:	xchg   DWORD PTR [esp+eax*2-0x5d],edi
  40f391:	sbb    al,BYTE PTR [eax+eiz*1]
  40f394:	dec    ebx
  40f395:	mov    dl,0xda
  40f397:	jo     0x40f3b2
  40f399:	das    
  40f39a:	retf   
  40f39b:	mov    BYTE PTR [esi],cl
  40f39d:	or     DWORD PTR [ebp-0x35],ecx
	...
  40f3c8:	pop    ss
  40f3c9:	sbb    ecx,edx
  40f3cb:	add    cl,BYTE PTR [eax]
  40f3cd:	dec    edx
  40f3ce:	jmp    0x40fdeb9d
  40f3d3:	jnp    0x40f3dd
  40f3d5:	or     ecx,ebp
  40f3d7:	xchg   BYTE PTR [eax+0x3b513e0d],cl
  40f3dd:	xor    ebx,edx
  40f3df:	inc    esi
  40f3e0:	or     cl,BYTE PTR [ecx]
  40f3e2:	cs push ecx
  40f3e4:	push   ebx
  40f3e5:	mov    cl,0xa4
  40f3e7:	aas    
  40f3e8:	dec    ebx
  40f3e9:	or     DWORD PTR [edx-0x40],ebp
  40f3ec:	push   eax
  40f3ed:	rcr    BYTE PTR [ebx-0x560f5b0d],0x44
  40f3f4:	dec    ebx
  40f3f5:	sar    BYTE PTR [ebx-0x31],0x24
  40f3f9:	xor    ah,BYTE PTR [ebp+0x2c8c4b03]
  40f3ff:	clc    
  40f400:	sbb    eax,0x855bd936
  40f405:	dec    esp
  40f406:	sub    BYTE PTR [esp+ecx*1],al
  40f409:	ss (bad) 
  40f40c:	sahf   
  40f40d:	inc    ebp
  40f40e:	jmp    0xdd05bc16
  40f413:	retf   0x197f
  40f416:	push   ecx
  40f417:	mov    BYTE PTR gs:[edx-0x17],cl
  40f41b:	retf   0xad5f
  40f41e:	rol    BYTE PTR [esi-0x79],0x9
  40f422:	jmp    0xa64dfcad
  40f427:	push   eax
  40f428:	aas    
  40f429:	xor    DWORD PTR [esi],edx
  40f42b:	inc    edi
	...
  40f454:	or     cl,BYTE PTR [ecx]
  40f456:	xchg   esi,eax
  40f457:	push   eax
  40f458:	mov    bl,0xb0
  40f45a:	fdivr  DWORD PTR [edi]
  40f45c:	dec    ebx
  40f45d:	or     DWORD PTR [edx-0x41],ebp
  40f460:	inc    eax
  40f461:	shl    bl,0xf3
  40f464:	sub    al,0x8c
  40f466:	jmp    FWORD PTR [ecx]
  40f468:	push   es
  40f469:	or     edi,edi
  40f46b:	hlt    
  40f46c:	je     0x40f415
  40f46e:	sbb    al,0xad
  40f470:	dec    eax
  40f471:	or     DWORD PTR [ebx+0x317c25],eax
  40f477:	push   esi
  40f478:	sbb    edi,DWORD PTR [ebp-0x41832b02]
  40f47e:	xor    al,0xaf
  40f480:	dec    edi
  40f481:	dec    edx
  40f482:	add    BYTE PTR [ecx-0x67],dl
  40f485:	cmp    edi,edi
  40f487:	fild   WORD PTR ss:[eax+eiz*8-0x3d]
  40f48c:	dec    eax
  40f48d:	shl    BYTE PTR [ecx+eiz*1-0x7f],0x34
  40f492:	or     al,0x1e
  40f494:	pop    ebx
  40f495:	inc    edi
  40f496:	sub    DWORD PTR [eax-0x6a3f4eb8],ebp
  40f49c:	add    eax,eax
  40f49e:	mov    BYTE PTR [esp+eiz*8-0x6b01ffd0],ch
  40f4a5:	mov    ch,0xfe
  40f4a7:	jl     0x40f4bd
  40f4a9:	shl    BYTE PTR [edi+eiz*4],0x37
  40f4ad:	dec    eax
  40f4ae:	add    cl,dl
  40f4b0:	scas   al,BYTE PTR es:[edi]
  40f4b1:	cmp    bh,bh
  40f4b3:	fiadd  WORD PTR [eax+0x43d845]
	...
  40f4dd:	add    BYTE PTR [eax],al
  40f4df:	add    BYTE PTR [edi-0x42],al
  40f4e2:	je     0x40f4bd
  40f4e4:	add    dh,BYTE PTR [esi]
  40f4e6:	call   0x298831b1
  40f4eb:	sub    BYTE PTR [edi-0x4f],cl
  40f4ee:	xchg   esp,eax
  40f4ef:	cmp    eax,0x2488c012
  40f4f4:	fwait
  40f4f5:	xor    BYTE PTR [eax],al
  40f4f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4f8:	jl     0x40f4a7
  40f4fa:	(bad)  
  40f4fb:	adc    al,0xa7
  40f4fd:	mov    edi,0x48602f34
  40f502:	add    BYTE PTR [ecx+0xff3502],al
  40f508:	lds    eax,FWORD PTR [edx+0x44]
  40f50b:	shl    BYTE PTR [edi],1
  40f50d:	(bad)  
  40f50e:	mov    edi,0xe44e1550
  40f513:	call   FWORD PTR [edi-0x23ca024a]
  40f519:	and    eax,DWORD PTR [ecx+0x0]
  40f51c:	sbb    ch,BYTE PTR [eax]
  40f51e:	je     0x40f51f
  40f520:	adc    eax,0xe1cc4442
  40f525:	inc    ebp
  40f526:	loopne 0x40f528
  40f528:	jne    0x40f568
  40f52a:	mov    dh,0x0
  40f52c:	jb     0x40f538
  40f52e:	cmp    DWORD PTR [ebp+0x3e],0x5
  40f532:	je     0x40fa0f
  40f538:	loope  0x40f57f
  40f53a:	rol    BYTE PTR [eax],1
  40f53c:	xor    eax,0x3200a23e
  40f541:	or     cl,BYTE PTR [ebp+0x45]
	...
  40f56b:	add    BYTE PTR [esi-0xb],ch
  40f56e:	(bad)  
  40f56f:	jne    0x40f5bf
  40f571:	fisttp QWORD PTR [esi-0x3]
  40f574:	and    eax,0x25c009d1
  40f579:	mov    es,WORD PTR ds:[eax]
  40f57c:	and    cl,BYTE PTR [edx]
  40f57e:	cmp    DWORD PTR [ebp-0x22],0x9
  40f582:	je     0x40fff7
  40f588:	addr16 inc edi
  40f58b:	push   eax
  40f58c:	add    eax,0xf0e8d04f
  40f591:	(bad)  
  40f592:	std    
  40f593:	(bad)  
  40f594:	fxch   st(1)
  40f596:	jb     0x40f60d
  40f598:	jno    0x40f5e1
  40f59a:	enter  0x1e00,0x60
  40f59e:	push   0xbce0e210
  40f5a3:	call   FWORD PTR [edi-0x43]
  40f5a6:	out    0x76,al
  40f5a8:	dec    ebx
  40f5a9:	add    eax,0x14b4fec9
  40f5ae:	in     al,0xfe
  40f5b0:	ss mov eax,0x3f36ccda
  40f5b6:	enter  0x16fe,0x94
  40f5ba:	(bad)  
  40f5bb:	je     0x40f600
  40f5bd:	mov    ah,al
  40f5bf:	ins    BYTE PTR es:[edi],dx
  40f5c0:	mov    WORD PTR [esi],fs
  40f5c2:	enter  0xa374,0x5e
  40f5c6:	dec    esi
  40f5c7:	or     BYTE PTR [ebx-0x62],dh
  40f5ca:	push   ebp
  40f5cb:	push   DWORD PTR [esi+ecx*2+0x4e]
  40f5cf:	les    eax,FWORD PTR [eax]
	...
  40f5f5:	add    BYTE PTR [eax],al
  40f5f7:	add    BYTE PTR [esp+edi*2-0x52],ch
  40f5fb:	(bad)  
  40f5fc:	fidiv  WORD PTR [edi-0x9118326]
  40f602:	(bad)  
  40f603:	(bad)  
  40f604:	fsubrp st(7),st
  40f606:	(bad)  
  40f607:	je     0x40f684
  40f609:	out    0x4d,al
  40f60b:	or     BYTE PTR [ebx],dh
  40f60d:	mov    WORD PTR [ebp-0x1],ss
  40f610:	cmp    al,0x30
  40f612:	inc    esi
  40f613:	int3   
  40f614:	dec    ebx
  40f615:	xchg   esi,eax
  40f616:	in     eax,dx
  40f617:	sub    BYTE PTR [esi+0x5474fef2],0x37
  40f61e:	ds int3 
  40f620:	sbb    al,0x83
  40f622:	(bad)  
  40f623:	je     0x40f668
  40f625:	or     ah,BYTE PTR [ebx]
  40f627:	ins    DWORD PTR es:[edi],dx
  40f628:	or     al,0xa4
  40f62a:	fimul  DWORD PTR [ecx]
  40f62c:	jno    0x40f5e0
  40f62e:	lds    esi,FWORD PTR [ebx+edx*2-0x36]
  40f632:	out    dx,eax
  40f633:	ins    BYTE PTR es:[edi],dx
  40f634:	hlt    
  40f635:	retf   
  40f636:	(bad)  
  40f637:	je     0x40f628
  40f639:	fiadd  DWORD PTR [edx-0x39841b91]
  40f63f:	je     0x40f624
  40f641:	retf   0x704a
  40f644:	aam    0x6b
  40f646:	(bad)  
  40f647:	je     0x40f620
  40f649:	or     DWORD PTR [ecx-0x6243c4ad],edx
  40f64f:	(bad)  
  40f650:	aaa    
  40f651:	mov    ecx,0xbc3b5b80
  40f656:	(bad)  
  40f657:	(bad)  
  40f658:	aaa    
  40f659:	lods   eax,DWORD PTR ds:[esi]
  40f65a:	nop
  40f65b:	arpl   WORD PTR [eax],ax
	...
  40f681:	add    BYTE PTR [eax],al
  40f683:	add    BYTE PTR [ebx],bl
  40f685:	mov    esp,0xb117c77d
  40f68a:	sub    BYTE PTR [ebx],0x1b
  40f68d:	mov    esp,0xa517c76d
  40f692:	push   eax
  40f693:	xor    edi,ebx
  40f695:	mov    ebx,0xa8f7c75d
  40f69a:	inc    eax
  40f69b:	cmp    edi,ebx
  40f69d:	mov    ebx,0xdcf7c74d
  40f6a2:	push   eax
  40f6a3:	inc    ebx
  40f6a4:	fstp   TBYTE PTR [ebx-0x1f2838c3]
  40f6aa:	inc    eax
  40f6ab:	or     ebx,ebx
  40f6ad:	mov    ebx,0xd4d7c72d
  40f6b2:	adc    BYTE PTR [ebx],dl
  40f6b4:	mov    ebx,0xb7c71dbc
  40f6b9:	fld    DWORD PTR [eax]
  40f6bb:	sbb    edi,DWORD PTR [ebx-0x4838f244]
  40f6c1:	int    0x10
  40f6c3:	and    ebx,DWORD PTR [ebx+0xabcfdbc]
  40f6c9:	or     eax,0xacc030e9
  40f6ce:	shl    BYTE PTR [si],0xb4
  40f6d2:	in     eax,0xc6
  40f6d4:	xlat   BYTE PTR ds:[ebx]
  40f6d5:	inc    ebp
  40f6d6:	fnsave [ebx]
  40f6d8:	cld    
  40f6d9:	xor    eax,0x433fc6e5
  40f6de:	add    BYTE PTR [ebp+0x4b],al
  40f6e1:	mov    cl,0x4c
  40f6e3:	inc    edx
  40f6e4:	dec    ebx
  40f6e5:	or     edx,esi
  40f6e7:	ret    
	...
  40f710:	dec    ebp
  40f711:	xchg   bh,bh
  40f713:	fmul   QWORD PTR [edi+0x9]
  40f716:	add    BYTE PTR [esi-0x17003e75],ah
  40f71c:	dec    eax
  40f71d:	or     edi,eax
  40f71f:	and    al,0x9b
  40f721:	mov    edx,0x2f48e906
  40f726:	add    BYTE PTR [ebx],al
  40f728:	inc    edi
  40f729:	das    
  40f72a:	add    BYTE PTR [ebx],dl
  40f72c:	dec    edi
  40f72d:	mov    es,WORD PTR [ebp+esi*2+0x58]
  40f731:	mov    es,WORD PTR [ecx+edi*2+0x19feba85]
  40f738:	test   BYTE PTR [eax+edi*8],dh
  40f73b:	sbb    di,WORD PTR [ebp+0x90917e7]
  40f742:	add    dl,ah
  40f744:	mov    BYTE PTR [edi],dh
  40f746:	add    eax,0xfebb9d40
  40f74b:	jmp    0xa8686b50
  40f750:	dec    eax
  40f751:	mov    esp,0x6070e574
  40f756:	jae    0x40f786
  40f758:	test   DWORD PTR [ebx-0x75],ecx
  40f75b:	cmp    ebx,eax
  40f75d:	test   edi,ebp
  40f75f:	push   ss
  40f760:	add    eax,0x10bb4fbc
  40f765:	push   edx
  40f766:	jae    0x40f776
  40f768:	add    eax,0x15118492
  40f76d:	mov    esp,0x2ba511fe
  40f772:	push   esi
	...
  40f79c:	pushf  
  40f79d:	inc    ebp
  40f79e:	lock cdq 
  40f7a0:	jo     0x40f760
  40f7a2:	inc    ecx
  40f7a3:	sub    BYTE PTR [edi-0x46],cl
  40f7a6:	mov    ah,0xd1
  40f7a8:	push   cs
  40f7a9:	mov    esp,0x4344d6fe
  40f7ae:	sub    DWORD PTR [eax],ebp
  40f7b0:	inc    edi
  40f7b1:	mov    cl,0x9c
  40f7b3:	add    BYTE PTR [eax],ah
  40f7b5:	(bad)  
  40f7b6:	std    
  40f7b7:	mov    DWORD PTR [edi-0x1f],esp
  40f7ba:	cmc    
  40f7bb:	call   FWORD PTR [ebp-0x6a134478]
  40f7c1:	(bad)  
  40f7c2:	std    
  40f7c3:	add    BYTE PTR [esi-0x11],ah
  40f7c6:	cmp    BYTE PTR [ebp-0x1e],0x9
  40f7ca:	jne    0x40f815
  40f7cc:	sub    DWORD PTR [edx],edi
  40f7ce:	jmp    0x40f7c7
  40f7d0:	mov    ebp,0x1d30fdc4
  40f7d5:	cmp    ch,bl
  40f7d7:	neg    DWORD PTR ds:0xcebd7fc4
  40f7dd:	int3   
  40f7de:	std    
  40f7df:	dec    edx
  40f7e1:	or     BYTE PTR [eax],al
  40f7e3:	add    BYTE PTR [eax+eax*8-0x33f17a3b],ah
  40f7ea:	std    
  40f7eb:	dec    DWORD PTR [edx]
  40f7ed:	or     BYTE PTR [eax],al
  40f7ef:	add    BYTE PTR [ecx],cl
  40f7f1:	scas   eax,DWORD PTR es:[edi]
  40f7f2:	std    
  40f7f3:	(bad)  
  40f7f4:	dec    bl
  40f7f6:	std    
  40f7f7:	call   FWORD PTR ds:0x1df7ea8a
  40f7fd:	(bad)  
  40f7fe:	std    
  40f7ff:	mov    ch,0x0
	...
  40f825:	add    BYTE PTR [eax],al
  40f827:	add    BYTE PTR [edx],cl
  40f829:	int3   
  40f82a:	std    
  40f82b:	jmp    FWORD PTR [ebp+0x4a]
  40f82e:	or     al,ch
  40f830:	jmp    0xea82:0xa1fffdc1
  40f837:	idiv   DWORD PTR ds:0x6f74fec4
  40f83d:	les    esi,FWORD PTR [ebx-0x23aea14]
  40f843:	call   0x404d46
  40f848:	sbb    eax,0xedf7ea8b
  40f84d:	(bad)  
  40f84e:	out    0x11,al
  40f850:	(bad)  
  40f851:	(bad)  
  40f852:	std    
  40f853:	dec    DWORD PTR [ebx-0x63]
  40f856:	(bad)  
  40f858:	in     al,dx
  40f859:	retf   0x74c3
  40f85c:	push   ebx
  40f85d:	fcomp  st(6)
  40f85f:	std    
  40f860:	fdivr  QWORD PTR [edx-0x3d]
  40f863:	mov    ah,0xe3
  40f865:	jp     0x40f82a
  40f867:	(bad)  
  40f868:	jecxz  0x40f8e1
  40f86a:	push   esp
  40f86b:	inc    esp
  40f86d:	bound  edi,QWORD PTR ds:0xc466b2f8
  40f873:	(bad)  
  40f874:	mov    ah,0x92
  40f876:	dec    ebp
  40f877:	cld    
  40f878:	mov    ds:0x4b0042ed,eax
  40f87d:	jns    0x40f83f
  40f87f:	pop    es
  40f880:	dec    ebx
  40f881:	adc    eax,0x6bc8eb79
  40f886:	(bad)  
  40f887:	imul   ecx,DWORD PTR [ebx+0x6],0xff14
	...
  40f8b2:	add    BYTE PTR [eax],al
  40f8b4:	(bad)  
  40f8b5:	mov    bh,0xda
  40f8b7:	or     edi,ebp
  40f8b9:	pop    edx
  40f8ba:	les    ecx,FWORD PTR [eax-0x1aa4abf2]
  40f8c0:	or     DWORD PTR [ecx+0x2],esi
  40f8c3:	(bad)  
  40f8c4:	fidiv  WORD PTR [edi-0x5a25d26]
  40f8ca:	ret    
  40f8cb:	(bad)  
  40f8cc:	fdivrp st(3),st
  40f8ce:	ret    
  40f8cf:	je     0x40f914
  40f8d1:	dec    eax
  40f8d2:	push   cs
  40f8d3:	ins    BYTE PTR es:[edi],dx
  40f8d4:	inc    esp
  40f8d5:	lock mov ecx,0x2da247c1
  40f8db:	mov    esp,DWORD PTR [edi]
  40f8dd:	and    al,0xbf
  40f8df:	sti    
  40f8e0:	xchg   ebp,eax
  40f8e1:	jg     0x40f93b
  40f8e3:	add    BYTE PTR [ecx+0x5374c371],dh
  40f8e9:	sbb    ch,BYTE PTR [edx+ebp*2+0x4478c014]
  40f8f0:	cvttps2pi mm1,QWORD PTR [esi]
  40f8f3:	pop    edi
  40f8f4:	xor    ecx,DWORD PTR [ecx]
  40f8f6:	sub    BYTE PTR [eax+edx*8],al
  40f8f9:	test   BYTE PTR [ecx-0x14],0x8b
  40f8fd:	or     DWORD PTR [ecx+0x3],ebp
  40f900:	dec    ebx
  40f901:	cmp    eax,0x4cbd2c24
  40f906:	sub    BYTE PTR [esp+esi*2],al
  40f909:	mov    eax,ds:0x94b44dc
  40f90e:	loop   0x40f8d3
  40f910:	pop    eax
  40f911:	sbb    BYTE PTR [edi],dl
  40f913:	lods   al,BYTE PTR ds:[esi]
  40f914:	test   DWORD PTR [ecx],esi
  40f916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f917:	ret    
	...
  40f940:	or     al,0x21
  40f942:	jmp    0xb89d4a
  40f947:	or     DWORD PTR fs:[edx-0x17],ecx
  40f94b:	push   ebx
  40f94c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f94d:	ds icebp 
  40f94f:	stos   DWORD PTR es:[edi],eax
  40f950:	pop    ebx
  40f951:	pushf  
  40f952:	jge    0x40f917
  40f954:	lods   al,BYTE PTR ds:[esi]
  40f955:	push   esi
  40f956:	pop    es
  40f957:	ret    
  40f958:	lea    esp,[edi+eiz*8-0x170834b7]
  40f95f:	cmp    BYTE PTR [ecx-0x4b08a2b1],al
  40f965:	jb     0x40f9bc
  40f967:	ret    
  40f968:	ins    DWORD PTR es:[edi],dx
  40f969:	mov    eax,0x101c725a
  40f96e:	mov    esp,0x3d3e5d7e
  40f973:	ret    
  40f974:	fild   WORD PTR [eax]
  40f976:	inc    ecx
  40f977:	jge    0x40f95a
  40f979:	mov    bh,0x2d
  40f97b:	arpl   WORD PTR [ebp+0x4b082ac2],sp
  40f981:	pop    esi
  40f982:	jb     0x40f934
  40f984:	leave  
  40f985:	int3   
  40f986:	adc    BYTE PTR [edi+0x4],dl
  40f989:	dec    esi
  40f98a:	adc    DWORD PTR [ebx+ecx*2],eax
  40f98d:	or     ecx,ebp
  40f98f:	retf   0xb587
  40f992:	call   0x4a449a
  40f997:	bound  eax,QWORD PTR [edx+0x48b18305]
  40f99d:	or     DWORD PTR ds:[edx],edx
  40f9a0:	pop    es
  40f9a1:	jecxz  0x40f974
  40f9a3:	inc    edx
	...
  40f9cc:	push   es
  40f9cd:	retf   0xe90b
  40f9d0:	ins    DWORD PTR es:[edi],dx
  40f9d1:	or     DWORD PTR [eax],eax
  40f9d3:	jmp    0x6aa19e20
  40f9d8:	mov    ebx,DWORD PTR [ecx]
  40f9da:	add    BYTE PTR ds:0xd9448442,dh
  40f9e0:	mov    edi,0x5b34ff1f
  40f9e5:	mov    eax,0xc6f0f174
  40f9ea:	addr16 sahf 
  40f9ec:	mov    DWORD PTR [edx+0xe73e0fa],ecx
  40f9f2:	or     DWORD PTR [edi+eiz*8],esp
  40f9f5:	mov    ds:0x36b21945,al
  40f9fa:	(bad)  
  40f9fb:	jle    0x40f986
  40f9fd:	add    BYTE PTR [ebp+0x71],al
  40fa00:	lock popa 
  40fa02:	jg     0x40f9ed
  40fa04:	dec    eax
  40fa05:	or     DWORD PTR [ebp-0x15],esi
  40fa08:	lods   eax,DWORD PTR ds:[esi]
  40fa09:	cli    
  40fa0a:	and    BYTE PTR [edx+0x40],0x3e
  40fa0e:	adc    eax,0x8ab10362
  40fa13:	mov    ah,0xa4
  40fa15:	push   es
  40fa16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa17:	sub    edx,DWORD PTR [eax-0x36]
  40fa1a:	fcomip st,st(1)
  40fa1c:	(bad)  
  40fa1d:	dec    esp
  40fa1e:	clc    
  40fa1f:	pusha  
  40fa20:	repz mov ah,0xea
  40fa23:	fcmovbe st,st(5)
  40fa25:	dec    ebp
  40fa26:	clc    
  40fa27:	jb     0x40f9cc
  40fa29:	mov    ch,0xe
  40fa2b:	inc    ebp
  40fa2c:	push   cs
  40fa2d:	adc    cl,al
  40fa2f:	or     DWORD PTR [eax],eax
	...
  40fa55:	add    BYTE PTR [eax],al
  40fa57:	add    BYTE PTR [ecx-0x80],al
  40fa5a:	inc    esp
  40fa5b:	adc    edi,edx
  40fa5d:	pop    ebp
  40fa5e:	cld    
  40fa5f:	add    cl,dh
  40fa61:	(bad)  
  40fa62:	stc    
  40fa63:	or     DWORD PTR [esp+edx*4-0x6fd9ba77],ebx
  40fa6a:	add    BYTE PTR ss:[edi+0x0],bh
  40fa6e:	sub    eax,eax
  40fa70:	pop    ecx
  40fa71:	fucomip st,st(1)
  40fa73:	push   es
  40fa74:	jns    0x40fac4
  40fa76:	clc    
  40fa77:	mov    ebp,DWORD PTR [edi]
  40fa79:	leave  
  40fa7a:	pop    ecx
  40fa7b:	leave  
  40fa7c:	mov    al,0x19
  40fa7e:	add    BYTE PTR [ebp+0x59],dl
  40fa81:	jns    0x40fa04
  40fa83:	les    ebx,FWORD PTR [esi+0x2366932a]
  40fa89:	or     eax,0xf0a64539
  40fa8e:	add    eax,0xc0c2f22b
  40fa93:	adc    BYTE PTR [edx+0x3c9433c9],ah
  40fa99:	dec    edx
  40fa9a:	add    al,ch
  40fa9c:	push   ebp
  40fa9d:	out    0xfe,al
  40fa9f:	call   FWORD PTR [ebx]
  40faa1:	dec    esi
  40faa2:	clc    
  40faa3:	lea    ebp,[edi-0x37]
  40faa6:	dec    esi
  40faa7:	call   0x3fdbb2
  40faac:	cmc    
  40faad:	std    
  40faae:	adc    edi,edi
  40fab0:	lahf   
  40fab1:	push   es
  40fab2:	push   DWORD PTR [ebp-0x16]
  40fab5:	(bad)  
  40fab6:	jae    0x40fac0
  40fab8:	or     ah,BYTE PTR [edx]
  40faba:	inc    WORD PTR [eax]
	...
  40fae1:	add    BYTE PTR [eax],al
  40fae3:	add    BYTE PTR ds:0xee0fc004,dl
  40fae9:	and    bh,bh
  40faeb:	jmp    DWORD PTR [edx-0x37]
  40faee:	jae    0x40fafc
  40faf0:	adc    eax,0xfffff7fe
  40faf5:	jne    0x40fadd
  40faf7:	stc    
  40faf8:	iret   
  40faf9:	enter  0x8bfd,0xef
  40fafd:	add    eax,0xb04b453b
  40fb02:	jae    0x439af7
  40fb08:	sbb    al,0x35
  40fb0a:	pop    ss
  40fb0b:	call   FWORD PTR [esi-0x5b5e5548]
  40fb11:	mov    edi,0xbc8e88bf
  40fb16:	stos   DWORD PTR es:[edi],eax
  40fb17:	jae    0x40fb15
  40fb19:	cld    
  40fb1a:	mov    bh,0x2a
  40fb1c:	sbb    DWORD PTR [ebx],edi
  40fb1e:	inc    esi
  40fb1f:	hlt    
  40fb20:	hlt    
  40fb21:	add    al,0x98
  40fb23:	mov    ah,BYTE PTR gs:[eax-0x5da82df5]
  40fb2a:	stos   DWORD PTR es:[edi],eax
  40fb2b:	addr16 popa 
  40fb2d:	mov    al,ds:0xa856ff52
  40fb32:	stos   BYTE PTR es:[edi],al
  40fb33:	mov    BYTE PTR [edi],ch
  40fb35:	addr16 mov edi,0xbfb436fe
  40fb3b:	je     0x40fb80
  40fb3d:	cwde   
  40fb3e:	xor    esp,DWORD PTR [edi-0x54]
  40fb41:	sahf   
  40fb42:	mov    edx,DWORD PTR [edi+edi*1+0x23]
  40fb46:	std    
  40fb47:	inc    DWORD PTR [eax]
	...
  40fb6d:	add    BYTE PTR [eax],al
  40fb6f:	add    BYTE PTR [edi],dl
  40fb71:	mov    ds:0xecc247ab,al
  40fb76:	mov    bh,0x8a
  40fb78:	ds push esp
  40fb7a:	sub    DWORD PTR [ecx+0x4b],eax
  40fb7d:	and    ebp,DWORD PTR [edx+0x362f1a03]
  40fb83:	adc    al,0x1a
  40fb85:	push   edi
  40fb86:	ss clc 
  40fb88:	ins    BYTE PTR es:[edi],dx
  40fb89:	aam    0xa
  40fb8b:	call   0xff00cabc
  40fb90:	add    bh,BYTE PTR [ebx+0x5b4974c2]
  40fb96:	out    0x50,al
  40fb98:	dec    esp
  40fb99:	je     0x40fb55
  40fb9b:	(bad)  
  40fb9c:	mov    esi,0xa679aae6
  40fba1:	or     DWORD PTR [esi],esp
  40fba3:	shl    BYTE PTR ds:0xb8ab1d3f,0x2d
  40fbaa:	push   ss
  40fbab:	shl    BYTE PTR [edi+0x9],0xe9
  40fbaf:	inc    ebx
  40fbb0:	inc    ebp
  40fbb1:	cmp    ebp,ebx
  40fbb3:	lods   al,BYTE PTR ds:[esi]
  40fbb4:	dec    esp
  40fbb5:	mov    BYTE PTR [ebx-0x49],bh
  40fbb8:	or     al,0x3e
  40fbba:	outs   dx,DWORD PTR ds:[esi]
  40fbbb:	lods   al,BYTE PTR ds:[esi]
  40fbbc:	pop    esp
  40fbbd:	mov    ah,0x73
  40fbbf:	mov    edi,0xbf4d07e4
  40fbc4:	cmc    
  40fbc5:	int3   
  40fbc6:	and    eax,eax
  40fbc8:	in     al,dx
  40fbc9:	mov    ah,0xe8
  40fbcb:	add    edx,eax
  40fbcd:	dec    esi
  40fbce:	cmc    
  40fbcf:	(bad)  
  40fbd0:	fdiv   QWORD PTR [eax+ebp*8+0x3]
	...
  40fbfb:	add    BYTE PTR [ebx-0x4c],cl
  40fbfe:	xor    edi,DWORD PTR [esp+eiz*8-0x3a40baca]
  40fc05:	and    BYTE PTR [ebx],0xc0
  40fc08:	xchg   ebx,eax
  40fc09:	xbegin 0x8cc11a12
  40fc0f:	push   edi
  40fc10:	ror    BYTE PTR [esi-0x1b],0x82
  40fc14:	in     al,0x1
  40fc16:	cmp    DWORD PTR [edi+ebx*1-0x3e4079db],ebp
  40fc1d:	mov    cl,0x7d
  40fc1f:	cmp    DWORD PTR [edi],edi
  40fc21:	test   ch,ch
  40fc23:	mov    esi,0x475e18ff
  40fc28:	inc    edi
  40fc29:	mov    bl,ah
  40fc2b:	cmovnp edi,DWORD PTR ds:0x4f7beee
  40fc32:	fs inc edi
  40fc34:	push   ebx
  40fc35:	pop    ecx
  40fc36:	dec    esi
  40fc37:	cmp    DWORD PTR [ebx-0x5f],edx
  40fc3a:	pop    edx
  40fc3b:	xor    BYTE PTR [esp+esi*4+0x71],dl
  40fc3f:	dec    ecx
  40fc40:	aaa    
  40fc41:	cmp    bh,0xf0
  40fc44:	ror    BYTE PTR [ecx],0x0
  40fc47:	jmp    0x2c0a5094
  40fc4c:	pop    edi
  40fc4d:	or     DWORD PTR [ebp+0x72],edx
  40fc50:	sti    
  40fc51:	xchg   bl,al
  40fc53:	sbb    eax,0x26145cd0
  40fc58:	dec    ecx
  40fc59:	or     DWORD PTR [eax],eax
  40fc5b:	jmp    0xf712dca8
	...
  40fc88:	add    DWORD PTR ds:0x948e901,0xf
  40fc8f:	push   ebp
  40fc90:	or     DWORD PTR [edi+0x3e48f57c],eax
  40fc96:	adc    ebx,esi
  40fc98:	xor    ebx,DWORD PTR ds:0x932ea6a
  40fc9e:	push   0xffffffe9
  40fca0:	mov    al,0x83
  40fca2:	inc    dh
  40fca4:	xchg   ebp,eax
  40fca5:	mov    al,ds:0x948eb28
  40fcaa:	xor    DWORD PTR [ebx+ebx*2],0xa
  40fcae:	jne    0x40fcba
  40fcb0:	cld    
  40fcb1:	cmp    al,0x10
  40fcb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcb4:	jae    0x40fcb7
  40fcb6:	call   0xfef56367
  40fcbb:	pusha  
  40fcbc:	adc    esi,DWORD PTR [ebp+0x1f4314fe]
  40fcc2:	add    BYTE PTR [ebx],dl
  40fcc4:	inc    ebx
  40fcc5:	xchg   BYTE PTR [ebp+edi*2-0x8],al
  40fcc9:	mov    al,ds:0xb2c57666
  40fcce:	call   0x4a47bc
  40fcd3:	push   0xb
  40fcd5:	add    eax,0xb269d402
  40fcda:	je     0x40fcd5
  40fcdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcdd:	cmp    al,0x8
  40fcdf:	inc    ecx
  40fce0:	adc    eax,0xd00ff2b
  40fce5:	test   DWORD PTR [ebx-0x4],eax
  40fce8:	or     eax,0x6a13f1
	...
  40fd11:	add    BYTE PTR [eax],al
  40fd13:	add    BYTE PTR [edx],dh
  40fd15:	loope  0x40fd1a
  40fd17:	(bad)  
  40fd18:	out    0x72,eax
  40fd1a:	dec    esi
  40fd1b:	call   0x3e714c
  40fd20:	pop    ebx
  40fd21:	(bad)  
  40fd23:	push   DWORD PTR [edx]
  40fd25:	mov    BYTE PTR [ebx+0xc],bh
  40fd28:	xor    edx,esi
  40fd2a:	pop    ds
  40fd2b:	call   DWORD PTR [edi+0xd036a16]
  40fd31:	sti    
  40fd32:	pop    es
  40fd33:	call   0x3fe9ce
  40fd38:	in     eax,dx
  40fd39:	cli    
  40fd3a:	adc    ebp,DWORD PTR [edx-0x1f]
  40fd3d:	loopne 0x40fd3e
  40fd3f:	imul   esp,edx,0xfdff165e
  40fd45:	je     0x40fd2e
  40fd47:	mov    cl,0xf3
  40fd49:	push   es
  40fd4a:	add    BYTE PTR [ebx+0x7504198f],al
  40fd50:	inc    ecx
  40fd51:	je     0x40fdc6
  40fd53:	adc    ch,bh
  40fd55:	cli    
  40fd56:	pop    es
  40fd57:	call   0x3fe84a
  40fd5c:	cmp    ecx,DWORD PTR [edx-0x4]
  40fd5f:	call   DWORD PTR [edi+0x11]
  40fd62:	push   0x0
  40fd64:	dec    eax
  40fd65:	add    DWORD PTR [ebp-0x17a231bb],ecx
  40fd6b:	out    dx,eax
  40fd6c:	int3   
  40fd6d:	je     0x40fd6c
  40fd6f:	jmp    0x41038e
  40fd74:	icebp  
  40fd75:	icebp  
  40fd76:	or     eax,DWORD PTR ds:0x0
	...
  40fda0:	ja     0x40fdbf
  40fda2:	push   DWORD PTR [ebp+0x72]
  40fda5:	loopne 0x40fdac
  40fda7:	call   DWORD PTR [edi+0x4b55e7fe]
  40fdad:	ret    0xfebb
  40fdb0:	mov    ds:0x4b0002a1,eax
  40fdb5:	pop    ecx
  40fdb6:	sub    DWORD PTR [ecx],eax
  40fdb8:	dec    ebx
  40fdb9:	mov    al,ds:0xa2577c7f
  40fdbe:	xor    eax,0x127d3c20
  40fdc3:	push   0x43
  40fdc5:	jmp    0x40fdfd
  40fdc7:	or     BYTE PTR [ebx],ah
  40fdc9:	test   al,0x24
  40fdcb:	jmp    DWORD PTR [ebx+ebx*1]
  40fdce:	aaa    
  40fdcf:	adc    al,0xb1
  40fdd1:	lahf   
  40fdd2:	sub    BYTE PTR [eax],al
  40fdd4:	mov    eax,ds:0xdabaaa0
  40fdd9:	mov    bl,0xbb
  40fddb:	call   0x439f6e
  40fde0:	enter  0xf24,0x7
  40fde4:	jle    0x40fde6
  40fde6:	mov    ebp,0xc565b74
  40fdeb:	call   FWORD PTR [esi-0x58]
  40fdee:	stos   BYTE PTR es:[edi],al
  40fdef:	adc    DWORD PTR [ebp-0x3d],esp
  40fdf2:	mov    ebx,0x28d45efe
  40fdf7:	add    esp,DWORD PTR [ecx-0x60]
  40fdfa:	sub    BYTE PTR [eax],al
  40fdfc:	mov    bl,0x21
  40fdfe:	mov    ebp,0x1bc8bcfe
  40fe03:	add    DWORD PTR [eax],eax
	...
  40fe29:	add    BYTE PTR [eax],al
  40fe2b:	add    BYTE PTR [ebx-0x60],cl
  40fe2e:	jg     0x40feac
  40fe30:	aas    
  40fe31:	mov    eax,0xe48c1c35
  40fe36:	mov    edi,0x29f9cff
  40fe3b:	call   FWORD PTR [esi]
  40fe3d:	aam    0x28
  40fe3f:	add    BYTE PTR [ecx],ah
  40fe41:	lods   al,BYTE PTR ds:[esi]
  40fe42:	lea    eax,[edi+eax*4+0xf]
  40fe46:	lods   al,BYTE PTR ds:[esi]
  40fe47:	arpl   WORD PTR [ebp+0x22],di
  40fe4a:	mov    esp,0xe90876e8
  40fe4f:	add    ecx,DWORD PTR [ebx-0x7a]
  40fe52:	fisttp DWORD PTR [edi]
  40fe54:	push   edx
  40fe55:	cmp    al,0xf5
  40fe57:	les    eax,FWORD PTR [edi]
  40fe59:	mov    ch,0xe7
  40fe5b:	add    ecx,DWORD PTR [ebx+0x9]
  40fe5e:	inc    esi
  40fe5f:	ss aaa 
  40fe61:	pop    ds
  40fe62:	jmp    0xabbf4d90
  40fe67:	mov    edi,0xbdaaa18c
  40fe6c:	xor    eax,0x2cd80fb1
  40fe71:	mov    cl,0xe8
  40fe73:	and    BYTE PTR [edi+0x5136e2fd],0x71
  40fe7a:	call   0x104a4982
  40fe7f:	enter  0xb10c,0xe8
  40fe83:	add    BYTE PTR [edi+0x5136e1fd],0x71
  40fe8a:	call   0xd04a4992
  40fe8f:	jg     0x40fe91
	...
  40feb5:	add    BYTE PTR [eax],al
  40feb7:	add    ah,ch
  40feb9:	mov    al,0xe8
  40febb:	xchg   BYTE PTR [edi-0x3],ah
  40febe:	in     al,0x35
  40fec0:	jbe    0x40fec6
  40fec2:	mov    ebx,0x438a7a30
  40fec7:	or     BYTE PTR [ebx+0x9],cl
  40feca:	sub    DWORD PTR [edx],eax
  40fecc:	cmp    BYTE PTR [ecx-0x4a],al
  40fecf:	xor    DWORD PTR [edi-0x80],ecx
  40fed2:	and    esi,DWORD PTR [eax+0x89d1ec9]
  40fed8:	call   0x80b5:0x1fbb951e
  40fedf:	xchg   BYTE PTR [edx],dh
  40fee1:	mov    al,0x8d
  40fee3:	lea    ecx,[edi]
  40fee5:	mov    cl,0x85
  40fee7:	xor    DWORD PTR [ebx],edi
  40fee9:	mov    al,0xf3
  40feeb:	scas   eax,DWORD PTR es:[edi]
  40feec:	test   DWORD PTR [esi],esi
  40feee:	add    BYTE PTR [ecx-0x40],dh
  40fef1:	xor    eax,0x2bfa8108
  40fef6:	jmp    DWORD PTR [esi-0x50]
  40fef9:	xor    eax,0xb04ed314
  40fefe:	je     0x40ff5d
  40ff00:	mov    al,ds:0x7e41f835
  40ff05:	lods   eax,DWORD PTR ds:[esi]
  40ff06:	inc    BYTE PTR [esi-0x70]
  40ff09:	xor    eax,0x224051f8
  40ff0e:	push   DWORD PTR [esi]
  40ff10:	mov    edi,0x48e90009
  40ff15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff16:	pop    edi
  40ff17:	push   0x72
  40ff19:	std    
  40ff1a:	or     al,0x9b
	...
  40ff44:	jnp    0x40ff4a
  40ff46:	rcr    BYTE PTR [edi+esi*2+0x48dd7c8a],cl
  40ff4d:	or     DWORD PTR [eax-0x11],eax
  40ff50:	push   ebp
  40ff51:	inc    ecx
  40ff52:	push   DWORD PTR [esp+ecx*2-0x80]
  40ff56:	inc    esp
  40ff57:	std    
  40ff58:	lds    ebx,FWORD PTR [esp+esi*8]
  40ff5b:	fcomp  QWORD PTR [edi]
  40ff5d:	sbb    eax,0xb53be6f4
  40ff62:	out    0x6,eax
  40ff64:	xor    eax,0x8b60feb0
  40ff69:	mov    cl,0xfe
  40ff6b:	push   esp
  40ff6c:	aas    
  40ff6d:	mov    al,0x74
  40ff6f:	mov    ebp,0xbef83491
  40ff74:	jnp    0x40ff77
  40ff76:	call   0xfef16a8e
  40ff7b:	scas   al,BYTE PTR es:[edi]
  40ff7c:	jnp    0x40ff93
  40ff7e:	push   0xffffffe8
  40ff80:	icebp  
  40ff81:	xor    al,0xf4
  40ff83:	sahf   
  40ff84:	pop    ebx
  40ff85:	mov    cl,0xe7
  40ff87:	pop    ds
  40ff88:	loop   0x40ff38
  40ff8a:	dec    BYTE PTR [esi+0xe7b15b]
  40ff90:	mov    esi,0xafffedc
  40ff95:	add    eax,0x5e720000
  40ff9a:	add    edi,DWORD PTR [eax+0xb62]
  40ffa0:	cmp    eax,esi
  40ffa2:	push   cs
  40ffa3:	add    BYTE PTR [edi+0x56ea7e],bl
	...
  40ffcd:	add    BYTE PTR [eax],al
  40ffcf:	add    cl,dh
  40ffd1:	lock pop es
  40ffd3:	add    BYTE PTR [edi+0x8],bh
  40ffd6:	pop    esi
  40ffd7:	leave  
  40ffd8:	and    BYTE PTR [eax+0x2ff8afe],dh
  40ffde:	jmp    0x40ffea
  40ffe0:	jne    0x40ff9a
  40ffe2:	out    0xb9,al
  40ffe4:	or     esi,DWORD PTR [ebp+edi*8-0x7d]
  40ffe8:	pop    esp
  40ffe9:	scas   al,BYTE PTR es:[edi]
  40ffea:	cmp    DWORD PTR [esi],0xfff0fa32
  40fff0:	mov    edi,0xcba9e802
  40fff5:	jae    0x40fff4
  40fff7:	pop    esi
  40fff8:	pop    ebx
  40fff9:	les    eax,FWORD PTR [edx]
  40fffb:	add    bh,bl
  40fffd:	jg     0x40ffe9
  40ffff:	mov    ebp,DWORD PTR [edi+0x16558b02]
  410005:	add    BYTE PTR [edx],0x90
  410008:	popa   
  410009:	test   BYTE PTR [edi],0x0
  41000c:	jle    0x410016
  41000e:	mov    edx,DWORD PTR [ebp-0x1e]
  410011:	jno    0x410041
  410013:	(bad)  
  410014:	loopne 0x40ff9b
  410016:	jnp    0x41002c
  410018:	loop   0x40fff8
  41001a:	pop    es
  41001b:	mov    ebx,DWORD PTR [edi+0x19]
  41001e:	push   DWORD PTR [eax-0x52]
  410021:	add    DWORD PTR [eax],0xd6783
  410027:	je     0x40ffe4
  410029:	jge    0x41007e
  41002b:	sbb    BYTE PTR [edx-0x80],ah
  41002e:	add    BYTE PTR [ebx-0x36f55db5],al
	...
  41005c:	mov    DWORD PTR [edx+eax*1-0x7b6b3fab],esi
  410063:	ret    
  410064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410065:	pop    ss
  410066:	push   edx
  410067:	mov    eax,DWORD PTR [esi]
  410069:	sar    BYTE PTR [edi+0x2a074ff],1
  41006f:	add    al,al
  410071:	pop    ebp
  410072:	push   es
  410073:	(bad)  
  410074:	dec    ebx
  410075:	mov    al,ds:0x234b0002
  41007a:	aaa    
  41007b:	or     BYTE PTR [ebx-0x2b],cl
  41007e:	or     ch,BYTE PTR [ebx]
  410080:	mov    esp,DWORD PTR [esi+0x57]
  410083:	leave  
  410084:	or     DWORD PTR [edx+eax*1-0x55574901],ebx
  41008b:	jmp    FWORD PTR [ebx+0xb0ab8df]
  410091:	lea    ecx,[edx]
  410093:	sub    ecx,DWORD PTR [ebx]
  410095:	outs   dx,BYTE PTR ds:[esi]
  410096:	push   edi
  410097:	leave  
  410098:	or     DWORD PTR [edx+eax*1-0x46e77177],esp
  41009f:	je     0x4100e4
  4100a1:	sbb    BYTE PTR [esi],cl
  4100a3:	arpl   WORD PTR [edi+ebp*4],ax
  4100a6:	mov    edi,0x2a0f744
  4100ab:	add    BYTE PTR [ebx+0x4d],cl
  4100ae:	aas    
  4100af:	in     al,dx
  4100b0:	fwait
  4100b1:	xor    eax,0xcf7bf43e
  4100b6:	sub    eax,0xbc6ef308
  4100bb:	(bad)  
  4100bc:	aam    0x18
  4100be:	aas    
  4100bf:	in     al,dx
	...
  4100e8:	push   esp
  4100e9:	mov    edx,0x9fbf7c83
  4100ee:	cs add al,0x50
  4100f1:	xchg   edx,eax
  4100f2:	or     BYTE PTR cs:[eax+0x60],ah
  4100f6:	pop    eax
  4100f7:	pop    edi
  4100f8:	or     BYTE PTR [eax],0xab
  4100fb:	pop    es
  4100fc:	dec    ebx
  4100fd:	loop   0x410122
  4100ff:	test   al,0xd3
  410101:	inc    ebx
  410102:	add    DWORD PTR [edx+0x3e8a117],0xbff08eb
  41010c:	xor    cl,cl
  41010e:	push   ds
  41010f:	pop    ecx
  410110:	xchg   edx,eax
  410111:	retf   0x3e4
  410114:	rol    BYTE PTR [ebx-0x7f],0xc2
  410118:	mov    WORD PTR [edx],cs
  41011a:	mov    ecx,0x5e2073ab
  41011f:	mov    eax,0x8c5543d3
  410124:	pop    esp
  410125:	lds    esp,FWORD PTR [ebx-0x1752b361]
  41012b:	add    esi,DWORD PTR [eax]
  41012d:	stc    
  41012e:	imul   edi,DWORD PTR [esi],0x3b
  410131:	pop    edx
  410132:	fs ds aas 
  410135:	pop    edx
  410136:	cs cs inc ebx
  410139:	mov    eax,ds:0xad25bda5
  41013e:	jno    0x410186
  410140:	sbb    esi,ecx
  410142:	mov    ds:0xe2059dab,eax
  410147:	aad    0x98
  410149:	sbb    DWORD PTR [esi],eax
  41014b:	add    BYTE PTR cs:[eax],al
	...
  410172:	add    BYTE PTR [eax],al
  410174:	pop    es
  410175:	mov    ds:0xacfc2b48,al
  41017a:	rol    ebx,0x96
  41017d:	dec    esp
  41017e:	and    ch,al
  410180:	inc    eax
  410181:	or     DWORD PTR [eax],edx
  410183:	dec    ecx
  410184:	rep lods al,BYTE PTR ds:[esi]
  410186:	and    esp,DWORD PTR [eax-0x53ac774f]
  41018c:	aam    0x36
  41018e:	out    0x82,eax
  410190:	dec    edi
  410191:	mov    ch,0xe8
  410193:	xor    BYTE PTR [edx-0x4353c478],cl
  410199:	xor    eax,0x2dc9ef00
  41019e:	hlt    
  41019f:	jmp    0x1d401b1f
  4101a4:	jecxz  0x41014a
  4101a6:	jo     0x4101b9
  4101a8:	aam    0xab
  4101aa:	sub    ch,BYTE PTR [ecx-0x5436b403]
  4101b0:	inc    ebx
  4101b1:	or     DWORD PTR [ebx+0x73acab04],eax
  4101b7:	in     al,0xaf
  4101b9:	jg     0x4101ba
  4101bb:	call   0xd9858208
  4101c0:	mov    ch,0x35
  4101c2:	in     al,0x76
  4101c4:	dec    edi
  4101c5:	add    BYTE PTR [ebp+eax*2-0x7a],0xcc
  4101ca:	add    DWORD PTR [ecx+0x4e6829a0],edi
  4101d0:	xchg   esp,eax
  4101d1:	add    DWORD PTR [ebp+eiz*1-0x30],0x72dc2c
	...
  4101fd:	add    BYTE PTR [eax],al
  4101ff:	add    BYTE PTR [edx-0x53],bh
  410202:	jmp    0x8a26:0xcf7fa391
  410209:	test   eax,0x948e8ff
  41020e:	lea    esp,[eax+ebp*8-0x1b5372c5]
  410215:	cmp    edx,DWORD PTR [edx+0xe]
  410218:	pop    edx
  410219:	add    eax,ebp
  41021b:	push   ss
  41021c:	shr    BYTE PTR [edx+0x3808f2fe],0xc
  410223:	push   0x32
  410225:	mov    ch,0xff
  410227:	je     0x410217
  410229:	xchg   BYTE PTR [ecx+ecx*8+0x48],bh
  41022d:	ss es push 0x23
  410231:	test   eax,0xac475cff
  410236:	je     0x410201
  410238:	mov    al,ds:0x8d006805
  41023d:	jb     0x41023c
  41023f:	jne    0x41021f
  410241:	pop    edi
  410242:	sub    dh,bh
  410244:	std    
  410245:	jb     0x410244
  410247:	jne    0x410227
  410249:	pop    edi
  41024a:	hlt    
  41024b:	addr16 in eax,dx
  41024d:	jb     0x410278
  41024f:	rcr    BYTE PTR [esp+edx*2-0x37],0xc2
  410254:	scas   al,BYTE PTR es:[edi]
  410255:	pop    es
  410256:	mov    eax,DWORD PTR [ebp-0x3e]
  410259:	push   ds
  41025a:	dec    BYTE PTR [ebp-0x2a]
  41025d:	xchg   BYTE PTR [ebx-0x1c],bh
  410260:	jb     0x41023d
  410262:	add    eax,0x83
	...
  41028b:	add    BYTE PTR [edi+0x5b],bh
  41028e:	(bad)  
  41028f:	je     0x41028f
  410291:	jle    0x4102d6
  410293:	or     al,0xed
  410295:	clc    
  410296:	fisttp DWORD PTR [edi-0x38c8d8e]
  41029c:	or     bh,BYTE PTR [edi+0x2ffdff65]
  4102a2:	add    BYTE PTR [eax],al
  4102a4:	xor    al,BYTE PTR [edi]
  4102a6:	pop    esi
  4102a7:	pop    edi
  4102a8:	jnp    0x410272
  4102aa:	or     al,BYTE PTR [eax]
  4102ac:	xlat   BYTE PTR ds:[ebx]
  4102ad:	jg     0x410299
  4102af:	and    DWORD PTR [esi-0x42],0x55
  4102b3:	sub    edi,0x16
  4102b6:	add    BYTE PTR [ebp+0x18],dh
  4102b9:	das    
  4102ba:	add    BYTE PTR [eax],al
  4102bc:	and    al,BYTE PTR [edi]
  4102be:	pop    edi
  4102bf:	leave  
  4102c0:	pusha  
  4102c1:	cli    
  4102c2:	(bad)  
  4102c3:	(bad)  
  4102c4:	mov    edi,0x79d22b16
  4102c9:	dec    ecx
  4102ca:	adc    bh,dh
  4102cc:	pop    es
  4102cd:	jnp    0x410333
  4102cf:	inc    ecx
  4102d0:	loop   0x41034f
  4102d2:	inc    ebx
  4102d3:	lock js 0x4102db
  4102d6:	push   DWORD PTR [ebp+0x2]
  4102d9:	jne    0x41034e
  4102db:	or     BYTE PTR [ebx-0x38],cl
  4102de:	sbb    DWORD PTR [edi-0x34],ebx
  4102e1:	mov    ebx,0xa05b7c80
  4102e6:	sub    eax,0x28a1310c
  4102eb:	fs mov ah,0xed
  4102ee:	or     ebp,eax
	...
  410318:	inc    ebx
  410319:	sti    
  41031a:	mov    ah,0xfe
  41031c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41031d:	or     eax,0xb816ff10
  410322:	stos   BYTE PTR es:[edi],al
  410323:	dec    edx
  410324:	sub    DWORD PTR [ebx+0x7c0688b4],edx
  41032a:	mov    ah,0x74
  41032c:	pop    edi
  41032d:	sub    DWORD PTR [esi],0x8
  410330:	jae    0x410302
  410332:	and    bh,bh
  410334:	je     0x410369
  410336:	das    
  410337:	adc    al,0x6c
  410339:	mov    ch,0xa
  41033b:	call   0xfef4c18e
  410340:	shl    BYTE PTR [ebp-0x46],cl
  410343:	(bad)  
  410344:	fisubr WORD PTR [ebx+0x484374b3]
  41034a:	lods   eax,DWORD PTR ds:[esi]
  41034b:	pusha  
  41034c:	inc    esp
  41034d:	inc    ebx
  41034e:	mov    ch,0x74
  410350:	push   edi
  410351:	jmp    0x410381
  410353:	or     BYTE PTR [ebx],ah
  410355:	fldenv [eax]
  410357:	jmp    FWORD PTR [edi+eiz*1]
  41035a:	aas    
  41035b:	adc    al,0xc8
  41035d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41035e:	add    dh,BYTE PTR [edi+ecx*2+0x1f]
  410362:	aaa    
  410363:	cld    
  410364:	inc    esi
  410365:	mov    WORD PTR ds:0xfefc8e83,es
  41036b:	jae    0x4103b9
  41036d:	xlat   BYTE PTR ds:[ebx]
  41036e:	ret    0x125e
  410371:	fimul  WORD PTR [edi]
  410373:	add    BYTE PTR [edx+0x4b411e4b],ch
  410379:	adc    DWORD PTR [eax+edi*1+0x0],ebp
	...
  4103a4:	mov    cs,WORD PTR [ecx]
  4103a6:	loope  0x4103d5
  4103a8:	inc    esp
  4103a9:	fisubr WORD PTR [eax-0x338fdac]
  4103af:	add    ecx,eax
  4103b1:	sub    ecx,ebp
  4103b3:	(bad)  
  4103b4:	aas    
  4103b5:	sti    
  4103b6:	lds    ebp,FWORD PTR [esi]
  4103b8:	push   edi
  4103b9:	stos   BYTE PTR es:[edi],al
  4103ba:	xor    ecx,DWORD PTR [ebx+eiz*4]
  4103bd:	xchg   DWORD PTR [edi-0x4b],eax
  4103c0:	lods   eax,DWORD PTR ds:[esi]
  4103c1:	jg     0x4103e6
  4103c3:	int3   
  4103c4:	sub    al,0x9
  4103c6:	jmp    0xe5e24ecd
  4103cb:	sbb    al,0x94
  4103cd:	test   eax,0xdd973e5f
  4103d2:	lea    ebp,[eax+0xffbaa5a]
  4103d8:	jl     0x41040d
  4103da:	icebp  
  4103db:	stos   DWORD PTR es:[edi],eax
  4103dc:	(bad)  
  4103dd:	daa    
  4103de:	jbe    0x410394
  4103e0:	rcl    DWORD PTR [ebx+0x75],0x8a
  4103e4:	dec    eax
  4103e5:	outs   dx,DWORD PTR ds:[esi]
  4103e6:	lods   eax,DWORD PTR ds:[esi]
  4103e7:	clc    
  4103e8:	fbstp  TBYTE PTR [eax+0x43c1aada]
  4103ee:	std    
  4103ef:	adc    BYTE PTR [ecx+ecx*1],0xd4
  4103f3:	add    al,0x44
  4103f5:	pop    ds
  4103f6:	cmp    eax,0x3e300aab
  4103fb:	mov    ah,0x61
  4103fd:	leave  
  4103fe:	xchg   ebp,eax
  4103ff:	retf   0xfe0a
  410402:	call   0xebe6ab87
  410407:	add    al,0x0
	...
  41042d:	add    BYTE PTR [eax],al
  41042f:	add    dh,al
  410431:	jo     0x41041b
  410433:	add    ecx,DWORD PTR [ebx-0xc]
  410436:	adc    eax,0xb3949ea8
  41043b:	scas   eax,DWORD PTR es:[edi]
  41043c:	ror    DWORD PTR ds:0x99860043,1
  410442:	xchg   edx,eax
  410443:	add    ebx,DWORD PTR [ebx+0x407bffa8]
  410449:	mov    cl,0x27
  41044b:	(bad)  
  41044c:	lahf   
  41044d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41044e:	(bad)  
  41044f:	pop    esp
  410450:	inc    ebx
  410451:	test   al,0x74
  410453:	icebp  
  410454:	mov    al,0xfa
  410456:	pusha  
  410457:	(bad)  
  410458:	cwde   
  410459:	xchg   ecx,eax
  41045a:	inc    esp
  41045b:	popf   
  41045c:	gs or  edi,edi
  41045f:	cmp    al,0x63
  410461:	test   al,0x74
  410463:	icebp  
  410464:	rcl    BYTE PTR [ecx-0x8],1
  410467:	mov    dh,0xf8
  410469:	xchg   ebx,eax
  41046a:	dec    esp
  41046b:	aad    0xcd
  41046d:	loope  0x41046e
  41046f:	sbb    ecx,DWORD PTR [eax-0x58]
  410472:	je     0x410409
  410474:	mov    bh,0x36
  410476:	xchg   si,ax
  410478:	fdiv   st,st(3)
  41047a:	mov    edi,0x13cac62e
  41047f:	jmp    0x7e59223d
  410484:	xor    bh,ch
  410486:	(bad)  
  410487:	cld    
  410488:	lods   al,BYTE PTR ds:[esi]
  410489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41048a:	je     0x410469
  41048c:	cdq    
  41048d:	sbb    eax,0xa6b45108
  410492:	(bad)  
  410493:	pop    esi
	...
  4104bc:	push   esp
  4104bd:	push   0x1d99e674
  4104c2:	hlt    
  4104c3:	inc    ecx
  4104c4:	nop
  4104c5:	das    
  4104c6:	inc    DWORD PTR [esi+0x1c]
  4104c9:	push   0xfc0d305e
  4104ce:	jmp    FWORD PTR [ebp-0x4407dae3]
  4104d4:	retf   
  4104d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104d6:	je     0x4104d9
  4104d8:	fcomp  DWORD PTR [esp+edx*1]
  4104db:	push   ds
  4104dc:	push   edx
  4104dd:	sar    esi,1
  4104df:	pushf  
  4104e0:	or     al,0xa7
  4104e2:	je     0x4104c5
  4104e4:	loopne 0x410513
  4104e6:	inc    BYTE PTR [eax]
  4104e8:	inc    ebp
  4104e9:	pop    esp
  4104ea:	or     eax,eax
  4104ec:	in     eax,0x90
  4104ee:	push   eax
  4104ef:	add    edx,esp
  4104f1:	or     edi,edi
  4104f3:	jne    0x4104d3
  4104f5:	adc    DWORD PTR [esi+eiz*2],0xffffffe5
  4104f9:	pop    edx
  4104fa:	sub    eax,eax
  4104fc:	adc    eax,0xe214c066
  410501:	test   BYTE PTR [ecx+eax*1],bh
  410504:	mov    dl,0xb
  410506:	cmp    DWORD PTR [ebp-0x7a],0x8
  41050a:	jne    0x4111ce
  410510:	dec    ecx
  410511:	pop    esp
  410512:	out    0x24,eax
  410514:	mov    bl,0xb
  410516:	add    BYTE PTR [ebx+0x489615f],cl
  41051c:	sub    BYTE PTR [edi],cl
  41051e:	inc    ebp
  41051f:	lock add BYTE PTR [eax],al
	...
  410546:	add    BYTE PTR [eax],al
  410548:	dec    eax
  410549:	or     eax,0xa55fff50
  41054e:	out    0x74,al
  410550:	daa    
  410551:	pop    esp
  410552:	std    
  410553:	push   0x62
  410555:	pop    edx
  410556:	jae    0x41056c
  410558:	cmc    
  410559:	loopne 0x410562
  41055b:	call   0x3e6871
  410560:	(bad)  [eax+0x14]
  410563:	sub    DWORD PTR [ebx],0xd
  410566:	jne    0x410577
  410568:	cmc    
  410569:	loopne 0x41055e
  41056b:	call   0x3ff6da
  410570:	pop    ecx
  410571:	int    0x5d
  410573:	leave  
  410574:	pusha  
  410575:	(bad)  
  410576:	dec    DWORD PTR [edx]
  410578:	push   eax
  410579:	fiadd  WORD PTR [ecx+ebp*8]
  41057c:	data16 or al,BYTE PTR [eax]
  41057f:	add    BYTE PTR [ebx+0x226aec51],bl
  410585:	pop    esp
  410586:	jae    0x41059c
  410588:	dec    ebx
  410589:	push   DWORD PTR [edi]
  41058b:	or     bl,dh
  41058d:	cmp    DWORD PTR [ecx+0x401bfcfe],0x14
  410594:	enter  0x2c9,0x75
  410598:	cmp    al,0x9f
  41059a:	ss hlt 
  41059c:	repz cmp BYTE PTR [eax],ch
  41059f:	(bad)  
  4105a0:	fdiv   st(3),st
  4105a2:	ret    
  4105a3:	pop    esi
  4105a4:	add    dh,BYTE PTR [ebx+0x17]
  4105a7:	add    ah,cl
  4105a9:	add    eax,0x6598
	...
  4105d2:	add    BYTE PTR [eax],al
  4105d4:	or     dh,BYTE PTR [eax+0x1bb3447f]
  4105da:	inc    edi
  4105db:	call   0xc140bea8
  4105e0:	stos   DWORD PTR es:[edi],eax
  4105e1:	mov    ch,0xdb
  4105e3:	shl    edx,1
  4105e5:	ja     0x4105ea
  4105e7:	add    BYTE PTR [ebx-0x79],cl
  4105ea:	mov    dl,0x82
  4105ec:	mov    ds:0xab44799f,eax
  4105f1:	xor    ebx,DWORD PTR [edi]
  4105f3:	call   0xec883120
  4105f8:	inc    eax
  4105f9:	cmc    
  4105fa:	fwait
  4105fb:	jbe    0x410646
  4105fd:	jnp    0x4105d9
  4105ff:	sub    bl,BYTE PTR [ecx+0x30ec472b]
  410605:	in     eax,dx
  410606:	mov    ds:0x85380e8a,eax
  41060b:	shr    BYTE PTR [eax],0x33
  41060e:	fwait
  41060f:	add    edx,DWORD PTR [ecx+eax*2+0x5]
  410613:	push   ebp
  410614:	sub    ebp,DWORD PTR [ecx]
  410616:	push   edi
  410617:	in     al,0xd0
  410619:	je     0x4105b5
  41061b:	cmp    cl,BYTE PTR [esi-0x3ffacab4]
  410621:	je     0x4105c5
  410623:	jmp    0x91c:0xe4472b48
  41062a:	pushf  
  41062b:	pop    ss
  41062c:	adc    al,0x1c
  41062e:	or     eax,0xe11c0c54
  410633:	fwait
  410634:	stos   DWORD PTR es:[edi],eax
  410635:	popf   
  410636:	or     eax,0xb1
	...
  41065f:	add    BYTE PTR [ecx-0x37],dl
  410662:	jnp    0x410664
  410664:	hlt    
  410665:	sbb    esi,ebp
  410667:	fwait
  410668:	dec    esi
  410669:	sub    al,0xf6
  41066b:	mov    al,0x31
  41066d:	leave  
  41066e:	lea    edi,[edx+0x7ae8fd0a]
  410674:	pop    ebp
  410676:	jno    0x41064b
  410678:	mov    edi,0xd653bd4b
  41067d:	dec    ebx
  41067e:	mov    cl,0x53
  410680:	sbb    DWORD PTR [ecx-0x5a4a539e],esi
  410686:	outs   dx,DWORD PTR ds:[esi]
  410687:	inc    esi
  410688:	fwait
  410689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41068a:	cmp    edx,eax
  41068c:	lods   al,BYTE PTR ds:[esi]
  41068d:	cs or  eax,0x23899db1
  410693:	aam    0x94
  410695:	sbb    esp,edi
  410697:	test   BYTE PTR [edi],cl
  410699:	shr    eax,0x37
  41069c:	pop    esp
  41069d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41069e:	adc    ebx,eax
  4106a0:	jge    0x4106bd
  4106a2:	mov    eax,ds:0x7e14ffb0
  4106a7:	ss inc ebx
  4106a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106aa:	sbb    ecx,DWORD PTR [esp+eiz*2]
  4106ad:	sbb    edx,DWORD PTR [ecx+0x65a24a9b]
  4106b3:	mov    al,0xd
  4106b5:	loop   0x410692
  4106b7:	stos   DWORD PTR es:[edi],eax
  4106b8:	cmp    eax,0x45b1398b
  4106bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106be:	dec    ebp
  4106bf:	ss aaa 
  4106c1:	mov    dl,0x2c
  4106c3:	daa    
	...
  4106ec:	xor    al,0xa5
  4106ee:	add    BYTE PTR [edx],0x4b
  4106f1:	or     DWORD PTR [eax],eax
  4106f3:	jmp    0xd602d973
  4106f8:	dec    eax
  4106f9:	mov    edx,DWORD PTR ds:0xf174a473
  410700:	mov    al,0x98
  410702:	jno    0x41071a
  410704:	mov    ebx,0x89aad82c
  410709:	or     edi,edi
  41070b:	jl     0x4106fd
  41070d:	lods   al,BYTE PTR ds:[esi]
  41070e:	cmp    al,0xb6
  410710:	dec    eax
  410711:	or     DWORD PTR [ebx],ecx
  410713:	sub    DWORD PTR ds:0x6205f0e,ebx
  410719:	or     eax,0x94faf00
  41071e:	call   DWORD PTR [edi+ecx*8-0x54]
  410722:	rcr    BYTE PTR [ebx-0xc],cl
  410725:	mov    ds:0x4a08b3be,eax
  41072a:	add    dh,al
  41072c:	jb     0x41073f
  41072e:	push   edi
  41072f:	rol    DWORD PTR [esi-0x25],1
  410732:	(bad)  
  410733:	call   0xe4b56bd9
  410738:	or     eax,0x48f1c1d2
  41073d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41073e:	xor    ch,BYTE PTR [ecx-0x69015ce2]
  410744:	mov    ah,0x9a
  410746:	lods   eax,DWORD PTR ds:[esi]
  410747:	rol    DWORD PTR [ebp+0x1e],1
  41074a:	loopne 0x4106d2
  41074c:	xor    dl,BYTE PTR [ecx]
  41074e:	call   0x410758
	...
  410777:	add    BYTE PTR [edx-0x5c],dh
  41077a:	(bad)  
  41077b:	loop   0x410705
  41077d:	sbb    eax,0xca9e0e05
  410782:	pop    es
  410783:	jmp    0xa88516b8
  410788:	dec    eax
  410789:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41078a:	je     0x41076d
  41078c:	loopne 0x41075d
  41078e:	xor    al,0xe9
  410790:	dec    eax
  410791:	adc    al,al
  410793:	add    bh,dh
  410795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410796:	std    
  410797:	jne    0x4107b7
  410799:	and    eax,DWORD PTR [esp+ebx*4]
  41079c:	adc    al,0x4d
  41079e:	add    BYTE PTR [eax-0x9],ch
  4107a1:	dec    ebx
  4107a2:	inc    ecx
  4107a3:	add    BYTE PTR [ebp-0x1e],ch
  4107a6:	pop    es
  4107a7:	call   0x3faa1c
  4107ac:	jmp    0x4d4a7b78
  4107b1:	loop   0x4107be
  4107b3:	(bad)  
  4107b4:	out    0x27,eax
  4107b6:	gs inc ecx
  4107b8:	loop   0x4107b9
  4107ba:	and    eax,DWORD PTR [ebx+esi*4+0x7]
  4107be:	push   DWORD PTR [ebp-0x16]
  4107c1:	jg     0x410759
  4107c3:	xor    eax,0xc00b07e2
  4107c8:	ja     0x410770
  4107ca:	std    
  4107cb:	jne    0x41077b
  4107cd:	and    al,BYTE PTR [esp+eiz*4]
  4107d0:	add    al,0x4e
  4107d2:	add    BYTE PTR [eax+0x7a3],bh
  4107d8:	dec    ebp
  4107d9:	data16 ror BYTE PTR [eax],0x0
	...
  410801:	add    BYTE PTR [eax],al
  410803:	add    BYTE PTR [edx+0x31ec8b40],dh
  410809:	int3   
  41080a:	repnz push esi
  41080c:	push   ebp
  41080d:	add    eax,0xd6343d4
  410812:	push   DWORD PTR [ebp+0x6a]
  410815:	jg     0x41079b
  410817:	ss jb  0x410821
  41081a:	or     eax,eax
  41081c:	ja     0x41082b
  41081e:	pop    edi
  41081f:	pop    esi
  410820:	mov    ebx,0x320002c9
  410825:	and    bh,ch
  410827:	mov    ebp,DWORD PTR [edi-0x61]
  41082a:	jmp    0x3cc8ce30
  41082f:	add    BYTE PTR [edi+0x71],dh
  410832:	mov    ds:0x41e24b68,al
  410837:	inc    ecx
  410838:	dec    ebx
  410839:	push   ebx
  41083a:	cmp    BYTE PTR [eax],cl
  41083c:	and    edx,ecx
  41083e:	hlt    
  41083f:	jmp    FWORD PTR [eax+ebx*4]
  410842:	ret    0x4d74
  410845:	jnp    0x410893
  410847:	leave  
  410848:	or     DWORD PTR [ebp-0x676974fe],ebp
  41084e:	cdq    
  41084f:	and    ebx,ecx
  410851:	ret    
  410852:	sti    
  410853:	jae    0x4108b7
  410855:	xor    dh,ch
  410857:	or     al,0x77
  410859:	pushf  
  41085a:	cmp    BYTE PTR [esi],0x41
  41085d:	and    al,0xfe
  41085f:	jg     0x41088d
  410861:	addr16 ss or cl,bl
  410865:	pop    ebx
  410866:	dec    edi
  410867:	je     0x410869
	...
  41088d:	add    BYTE PTR [eax],al
  41088f:	add    BYTE PTR [esi+0x30],al
  410892:	out    dx,al
  410893:	pop    edi
  410894:	pop    esi
  410895:	scas   eax,DWORD PTR es:[edi]
  410896:	les    eax,FWORD PTR [esi]
  410898:	sub    ebp,ebx
  41089a:	cmp    DWORD PTR [esi],0x4b
  41089d:	inc    ebp
  41089e:	retf   
  41089f:	mov    BYTE PTR [esi],0xd4
  4108a2:	add    eax,DWORD PTR [eax]
  4108a4:	dec    ebx
  4108a5:	mov    al,0xc3
  4108a7:	inc    esp
  4108a8:	mov    bl,0xb0
  4108aa:	add    al,BYTE PTR [eax]
  4108ac:	dec    ebx
  4108ad:	daa    
  4108ae:	das    
  4108af:	or     BYTE PTR [eax+0x6c3e83e7],dh
  4108b5:	add    eax,0x840e82d9
  4108ba:	add    esi,DWORD PTR [ebp+0x59]
  4108bd:	add    DWORD PTR [esi-0x8],0x4a
  4108c1:	mov    al,0x2
  4108c3:	add    dh,bh
  4108c5:	stos   DWORD PTR es:[edi],eax
  4108c6:	ret    
  4108c7:	inc    esp
  4108c8:	outs   dx,DWORD PTR ds:[esi]
  4108c9:	mov    cl,0x2
  4108cb:	add    BYTE PTR [ebx-0x79],cl
  4108ce:	adc    bh,dh
  4108d0:	push   es
  4108d1:	sbb    BYTE PTR [ebx],al
  4108d3:	add    BYTE PTR [ebx+0x9],cl
  4108d6:	jmp    0xe60c4a11
  4108db:	jecxz  0x4108ea
  4108dd:	dec    esp
  4108de:	push   ebp
  4108df:	add    al,0x4b
  4108e1:	or     ecx,ebp
  4108e3:	xor    DWORD PTR [ebp+0x45],0xffffffbc
  4108e7:	push   es
  4108e8:	sub    al,0x4c
  4108ea:	inc    ecx
  4108eb:	cdq    
  4108ec:	dec    ebp
  4108ed:	retf   0xabab
  4108f0:	sbb    al,0xa2
  4108f2:	call   0x4108fa
	...
  41091b:	add    al,cl
  41091d:	and    esp,DWORD PTR ds:0x27069603
  410923:	add    eax,0xed694a2b
  410928:	cld    
  410929:	sbb    al,0x59
  41092b:	jns    0x4109a4
  41092d:	adc    DWORD PTR [edx],edx
  41092f:	adc    bl,cl
  410931:	loope  0x4108fb
  410933:	ss cmp eax,0x2b027589
  410939:	sbb    al,0xd9
  41093b:	push   esp
  41093c:	loopne 0x410948
  41093e:	jae    0x410984
  410940:	dec    edx
  410941:	xchg   ecx,eax
  410942:	in     eax,0x44
  410944:	retf   
  410945:	loope  0x41092f
  410947:	ss mov dh,0x41
  41094a:	push   ds
  41094b:	inc    ebp
  41094c:	retf   
  41094d:	loope  0x410937
  41094f:	ss mov ecx,cs
  410952:	and    edi,DWORD PTR [eax+0x3e8a1a4]
  410958:	rcr    BYTE PTR [ebx],1
  41095a:	loope  0x4109d4
  41095c:	pop    ss
  41095d:	adc    DWORD PTR [edx-0x331df31f],edx
  410963:	ss addr16 retf 
  410966:	in     eax,dx
  410967:	add    edi,DWORD PTR [ebx+ebx*1-0x6b]
  41096b:	push   ebp
  41096c:	arpl   bp,bp
  41096e:	xchg   BYTE PTR [ebp+ebp*2+0x4d36a90d],ch
  410975:	inc    edx
  410976:	add    BYTE PTR [edi],dl
  410978:	mov    al,ds:0xd3e903c7
  41097d:	call   0x0:0x6645
	...
  4109a8:	add    eax,0x3769469d
  4109ad:	mov    eax,ds:0x15ef3073
  4109b2:	hlt    
  4109b3:	mov    bh,0xd0
  4109b5:	adc    al,0xfe
  4109b7:	inc    esi
  4109b8:	fistp  QWORD PTR [edi]
  4109ba:	pop    esi
  4109bb:	xor    BYTE PTR [edx],cl
  4109bd:	or     eax,0xb4a39c00
  4109c2:	and    BYTE PTR ds:0x6a5736d0,0x5d
  4109c9:	cmc    
  4109ca:	call   DWORD PTR [ecx+eax*1+0x21c13c8c]
  4109d1:	dec    edx
  4109d2:	add    cl,ch
  4109d4:	cmp    eax,0xb1a75f07
  4109d9:	retf   0xe90f
  4109dc:	arpl   WORD PTR [ebp+0x14],ax
  4109df:	mov    al,0x45
  4109e1:	jge    0x410a48
  4109e3:	test   al,0x48
  4109e5:	adc    BYTE PTR [ebx+0x9468a],al
  4109eb:	and    BYTE PTR [edx+0x69],cl
  4109ee:	sub    BYTE PTR gs:[edi+0x10],al
  4109f2:	xor    DWORD PTR [esi+0x4e],0x9
  4109f6:	add    BYTE PTR [eax],al
  4109f8:	dec    edx
  4109f9:	gs sub BYTE PTR gs:[edi+0x10],cl
  4109fe:	and    DWORD PTR [edx+0x46],0x9
  410a02:	add    BYTE PTR [edx+ecx*1-0x6b],bl
  410a06:	dec    edi
  410a07:	je     0x410a13
  410a09:	mov    eax,ds:0x6c4f
	...
  410a32:	add    BYTE PTR [eax],al
  410a34:	or     bl,BYTE PTR [ebp-0x7b8569b1]
  410a3a:	sub    BYTE PTR gs:[edi-0x60],cl
  410a3e:	je     0x410a40
  410a40:	xchg   edx,eax
  410a41:	test   BYTE PTR [eax+edi*8+0x458b73e5],bh
  410a48:	retf   0x8d35
  410a4b:	inc    ebp
  410a4c:	(bad)  
  410a4d:	xor    al,0x8d
  410a4f:	inc    ebp
  410a50:	repnz xor al,0xff
  410a53:	xor    eax,0x40eace
  410a58:	xchg   ebp,eax
  410a59:	fimul  DWORD PTR [edi]
  410a5b:	call   0x3e772e
  410a60:	mov    bh,0x4a
  410a62:	fcom   QWORD PTR [eax-0x49]
  410a65:	dec    edx
  410a66:	loopne 0x410ab8
  410a68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a69:	dec    edx
  410a6a:	in     al,0x50
  410a6c:	gs call 0x75ff:0xbe3669e
  410a74:	add    al,BYTE PTR [eax+ecx*4-0x28baa08]
  410a7b:	jne    0x410acb
  410a7d:	and    al,0x44
  410a7f:	aam    0x45
  410a81:	fcmovu st,st(3)
  410a83:	(bad)  
  410a84:	scas   eax,DWORD PTR es:[edi]
  410a85:	rol    ebp,cl
  410a87:	inc    ebp
  410a88:	inc    edx
  410a89:	add    eax,0x20e20000
  410a8e:	inc    esp
  410a8f:	int3   
  410a90:	adc    bh,bh
  410a92:	add    BYTE PTR [edx-0x4e],ch
  410a95:	std    
  410a96:	jmp    FWORD PTR [ecx+0x0]
	...
  410abd:	add    BYTE PTR [eax],al
  410abf:	add    BYTE PTR [edx+0x6f8cfffd],dh
  410ac5:	mov    ecx,0xc38fff4e
  410aca:	daa    
  410acb:	inc    ecx
  410acc:	mov    dl,0x9e
  410ace:	mov    esi,0xff9e2e0f
  410ad3:	jmp    DWORD PTR [edx-0x5d2f847a]
  410ad9:	mov    ds:0xb730082,al
  410ade:	add    BYTE PTR [ebx+0x3ab7e54b],cl
  410ae4:	push   es
  410ae5:	xchg   cl,bh
  410ae7:	xchg   BYTE PTR [edi-0x4f],dh
  410aea:	add    al,BYTE PTR [eax]
  410aec:	sbb    dh,BYTE PTR [bx+si]
  410aef:	rcl    al,1
  410af1:	xchg   esp,eax
  410af2:	(bad)  
  410af3:	mov    al,BYTE PTR [esi]
  410af5:	jle    0x410a9c
  410af7:	add    DWORD PTR [eax-0x73],ebx
  410afa:	test   eax,0x40301774
  410aff:	in     al,0x3c
  410b01:	mov    esi,0x314e7d2
  410b06:	add    al,0x0
  410b08:	enter  0xa6c5,0xff
  410b0c:	push   ebp
  410b0d:	and    al,0xb9
  410b0f:	call   FWORD PTR [ecx+esi*4]
  410b12:	test   DWORD PTR [ebx+ebx*1-0x4f],edi
  410b16:	stc    
  410b17:	add    DWORD PTR [edi],0xffffffb1
  410b1a:	add    al,BYTE PTR [eax]
  410b1c:	enter  0x9e7d,0xff
  410b20:	dec    ebp
  410b21:	sub    al,0x6d
  410b23:	inc    DWORD PTR [eax]
	...
  410b49:	add    BYTE PTR [eax],al
  410b4b:	add    ah,dh
  410b4d:	mov    al,0xa9
  410b4f:	je     0x410b40
  410b51:	clc    
  410b52:	ins    BYTE PTR es:[edi],dx
  410b53:	pusha  
  410b54:	in     al,0x9f
  410b56:	jp     0x410b9c
  410b58:	adc    ebx,DWORD PTR [eax+0x15d4fc2e]
  410b5e:	mov    ebx,0x9bbc56fe
  410b63:	fild   QWORD PTR [edx]
  410b65:	mov    edi,0xec7867a8
  410b6a:	inc    edx
  410b6b:	add    BYTE PTR [ebx-0x530009c4],ah
  410b71:	add    BYTE PTR [ebx+esi*1],bl
  410b74:	psllw  mm0,QWORD PTR [ebx]
  410b77:	call   DWORD PTR [esi]
  410b79:	push   0xb05f2d9b
  410b7e:	add    cl,BYTE PTR [ebx]
  410b80:	mov    ecx,DWORD PTR [ecx]
  410b82:	sbb    eax,0x24e2f30c
  410b87:	inc    ebx
  410b88:	dec    ebx
  410b89:	mov    cl,0x18
  410b8b:	div    BYTE PTR [esi+ebx*4+0x38]
  410b8f:	sbb    al,0x31
  410b91:	inc    ebp
  410b92:	sub    BYTE PTR [esp+eiz*2],al
  410b95:	adc    al,0xb1
  410b97:	pushf  
  410b98:	cmp    dl,ch
  410b9a:	call   0xf50a4ba2
  410b9f:	or     esp,ebx
  410ba1:	dec    edx
  410ba2:	lods   eax,DWORD PTR ds:[esi]
  410ba3:	inc    edx
  410ba4:	dec    ebx
  410ba5:	mov    cl,0xb4
  410ba7:	cmc    
  410ba8:	cmp    al,0x9e
  410baa:	mov    eax,0xa845891b
  410baf:	add    eax,DWORD PTR [eax]
	...
  410bd5:	add    BYTE PTR [eax],al
  410bd7:	add    BYTE PTR [esp+edx*1],ch
  410bda:	xor    DWORD PTR [esi+ebx*1+0x5003e8da],ebx
  410be1:	leave  
  410be2:	mov    ebx,0xe909a33e
  410be7:	cwde   
  410be8:	into   
  410be9:	popf   
  410bea:	fwait
  410beb:	imul   esp
  410bed:	bound  edi,QWORD PTR [ebx-0x24620258]
  410bf3:	mov    ebp,DWORD PTR [esi+0x48]
  410bf6:	jmp    0x114e83a3
  410bfb:	pop    eax
  410bfc:	xchg   DWORD PTR [esi-0x62a85703],ebx
  410c02:	cmc    
  410c03:	fistp  WORD PTR cs:[ebp-0x4b1b088d]
  410c0a:	inc    ebx
  410c0b:	test   eax,0xb4539dc5
  410c10:	mov    ebp,0x3fa8c113
  410c15:	or     eax,0x9e0fc1c1
  410c1a:	lds    ebp,FWORD PTR [eax+0x2ebda51f]
  410c20:	jg     0x410bbf
  410c22:	(bad)  
  410c23:	cmp    edx,DWORD PTR [ebx-0x1df3485b]
  410c29:	sahf   
  410c2a:	(bad)  
  410c2b:	sbb    al,0xc7
  410c2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c2e:	lock or DWORD PTR [edx-0x4fc8a162],esi
  410c35:	(bad)  
  410c36:	psubsw mm7,mm5
  410c39:	xchg   ecx,eax
  410c3a:	jmp    0x410ca6
	...
  410c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c66:	cmp    ah,0x4c
  410c69:	add    al,0xf
  410c6b:	ins    BYTE PTR es:[edi],dx
  410c6c:	aas    
  410c6d:	or     BYTE PTR [eax],al
  410c6f:	jmp    0xba355149
  410c74:	mov    ebp,0xb5b9f845
  410c79:	inc    ebp
  410c7a:	cld    
  410c7b:	mov    ecx,0xd4ff0756
  410c80:	pop    eax
  410c81:	mov    cl,0x20
  410c83:	ds repz fwait
  410c86:	cmp    BYTE PTR [eax+esi*8-0x2093f0f7],0x9c
  410c8e:	(bad)  
  410c8f:	jmp    0x77352277
  410c94:	inc    ebp
  410c95:	cdq    
  410c96:	addr16 jmp 0x9925:0x16004a3c
  410c9e:	out    0xc3,eax
  410ca0:	neg    BYTE PTR [esi+edi*8-0x7af3f70e]
  410ca7:	and    DWORD PTR [eax+0x9],ecx
  410caa:	add    BYTE PTR [ebp+edx*1-0x6b],ah
  410cae:	dec    edi
  410caf:	pop    esp
  410cb0:	or     eax,0xa744fa1
  410cb5:	popf   
  410cb6:	dec    edi
  410cb7:	push   ebx
  410cb8:	inc    edi
  410cb9:	pushf  
  410cba:	je     0x410cb5
  410cbc:	shl    BYTE PTR [esi-0x781b310b],1
  410cc2:	jl     0x410cc4
  410cc4:	mov    al,BYTE PTR [esi]
  410cc6:	jne    0x410ccc
	...
  410cf0:	retf   0x5
  410cf3:	add    ch,bl
  410cf5:	(bad)  
  410cf7:	push   0x4148ac
  410cfc:	ficom  DWORD PTR [esi-0x608dffd0]
  410d02:	mov    esi,0xff27e70f
  410d07:	jmp    DWORD PTR [edx+0x21]
  410d0a:	inc    esp
  410d0b:	hlt    
  410d0c:	inc    edx
  410d0d:	and    al,BYTE PTR [eax+edi*8+0x42]
  410d11:	and    al,BYTE PTR [esp+edi*8+0x32]
  410d15:	inc    DWORD PTR [edx]
  410d17:	call   DWORD PTR [edi-0x8]
  410d1a:	out    0xb1,eax
  410d1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d1d:	fs std 
  410d1f:	sbb    DWORD PTR [edi],0x70
  410d22:	dec    BYTE PTR [esi]
  410d24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d25:	mov    dh,bh
  410d27:	jmp    DWORD PTR [edx]
  410d29:	pop    ds
  410d2a:	inc    esp
  410d2b:	hlt    
  410d2c:	lea    edx,[ebp+0x228e458d]
  410d32:	inc    esp
  410d33:	hlt    
  410d34:	mov    dl,0x20
  410d36:	inc    esp
  410d37:	clc    
  410d38:	mov    dl,0x20
  410d3a:	inc    esp
  410d3b:	cld    
  410d3c:	ret    0x401
  410d3f:	call   edi
  410d41:	mul    edi
  410d43:	mov    DWORD PTR [esp+eiz*2-0x3],edx
  410d47:	cmp    DWORD PTR [edi-0x528b0091],0x5a
  410d4e:	add    ebx,DWORD PTR [esp+eax*8+0xff0044]
	...
  410d79:	add    BYTE PTR [eax],al
  410d7b:	add    ch,bl
  410d7d:	(bad)  
  410d7e:	std    
  410d7f:	(bad)  
  410d80:	out    0x27,eax
  410d82:	gs inc ecx
  410d84:	mov    dl,0x62
  410d86:	std    
  410d87:	call   FWORD PTR [ebp+0x4ba4035a]
  410d8d:	dec    esp
  410d8e:	inc    ebp
  410d8f:	add    BYTE PTR [edx+ecx*8-0x235b015b],ch
  410d96:	scas   eax,DWORD PTR es:[edi]
  410d97:	out    0x49,eax
  410d99:	pop    esi
  410d9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d9b:	dec    BYTE PTR [esp+ebp*8-0x4db4ff65]
  410da2:	add    al,BYTE PTR [ebx+0x411c8646]
  410da8:	dec    ebx
  410da9:	jnp    0x410dd9
  410dab:	sub    eax,ecx
  410dad:	mov    ah,0x62
  410daf:	or     dh,BYTE PTR gs:[edx+0x2f2b73a5]
  410db6:	call   0x431f35e
  410dbb:	(bad)  
  410dbc:	fistp  QWORD PTR [edx-0xe690fe6]
  410dc2:	add    ecx,DWORD PTR [ebp-0xacc772]
  410dc8:	mov    dh,0x4c
  410dca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dcb:	je     0x410e14
  410dcd:	xor    esi,DWORD PTR [eax]
  410dcf:	or     BYTE PTR [ebx],ah
  410dd1:	test   eax,0xda24feaa
  410dd6:	ror    BYTE PTR [edi],0x4b
  410dd9:	jne    0x410e54
  410ddb:	jmp    0x410da5
  410ddd:	in     al,dx
  410dde:	xchg   esi,eax
  410ddf:	inc    BYTE PTR [eax]
	...
  410e05:	add    BYTE PTR [eax],al
  410e07:	add    BYTE PTR [esi-0x5d636558],dl
  410e0d:	jecxz  0x410db4
  410e0f:	imul   ebx,DWORD PTR [ebx+0x2d],0xf39bf040
  410e16:	das    
  410e17:	or     bl,ah
  410e19:	xchg   ebx,eax
  410e1a:	dec    edx
  410e1b:	jmp    esp
  410e1d:	xchg   edi,eax
  410e1e:	ret    0x4774
  410e21:	fld    st(0)
  410e23:	pop    es
  410e24:	dec    ebx
  410e25:	xchg   BYTE PTR [edx],dl
  410e27:	push   0x436f8d
  410e2c:	(bad)  
  410e2d:	or     DWORD PTR [esp+esi*4],ebp
  410e30:	or     al,0xb1
  410e32:	aad    0x45
  410e34:	mov    ah,0x9a
  410e36:	loope  0x410dfb
  410e38:	aaa    
  410e39:	add    eax,0x94cc2a0
  410e3e:	scas   al,BYTE PTR es:[edi]
  410e3f:	aas    
  410e40:	scas   eax,DWORD PTR es:[edi]
  410e41:	or     cl,ch
  410e43:	add    ecx,DWORD PTR [ebx-0x74]
  410e46:	sub    ebx,DWORD PTR [eax-0x3cc6604]
  410e4c:	ins    BYTE PTR es:[edi],dx
  410e4d:	in     al,0x42
  410e4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e50:	jge    0x410e60
  410e52:	test   eax,0x13864d30
  410e57:	cwde   
  410e58:	ins    BYTE PTR es:[edi],dx
  410e59:	adc    eax,0xd0a4d8e7
  410e5e:	stos   BYTE PTR es:[edi],al
  410e5f:	cld    
  410e60:	pop    esp
  410e61:	dec    edx
  410e62:	sar    BYTE PTR [edx-0x6367fb9f],cl
  410e68:	fld    DWORD PTR [edi]
  410e6a:	sub    cl,bh
	...
  410e94:	add    al,0x14
  410e96:	pop    esi
  410e97:	dec    esp
  410e98:	enter  0xe7a0,0x2e
  410e9c:	dec    esi
  410e9d:	popa   
  410e9e:	call   0x6a4a58a6
  410ea3:	stos   DWORD PTR es:[edi],eax
  410ea4:	dec    ebx
  410ea5:	adc    eax,0xcfdcd8ef
  410eaa:	sub    bh,ah
  410eac:	adc    al,0x67
  410eae:	pop    esp
  410eaf:	push   ds
  410eb0:	mov    cl,BYTE PTR [ecx]
  410eb2:	pop    esp
  410eb3:	aas    
  410eb4:	idiv   DWORD PTR [eax]
  410eb6:	es das 
  410eb8:	push   ebx
  410eb9:	mov    cl,0xeb
  410ebb:	dec    ecx
  410ebc:	hlt    
  410ebd:	cdq    
  410ebe:	imul   ebp,DWORD PTR [ebx+ecx*2-0x237f1beb],0xc9fd7c06
  410ec9:	sbb    ecx,DWORD PTR ds:0x35e04
  410ecf:	ret    0xd108
  410ed2:	shl    ecx,0x48
  410ed5:	mov    WORD PTR [ebp+edx*8+0x18],es
  410ed9:	call   0xd658:0xaed0f174
  410ee0:	out    0x86,eax
  410ee2:	imul   eax
  410ee4:	je     0x410eea
  410ee6:	add    ecx,0x4a
  410ee9:	adc    al,0x6
  410eeb:	push   0x6d
  410eed:	lods   eax,DWORD PTR ds:[esi]
  410eee:	(bad)  
  410eef:	cmp    ecx,DWORD PTR [ebp-0x755f4012]
  410ef5:	add    DWORD PTR [eax],eax
  410ef7:	je     0x410ef9
	...
  410f1d:	add    BYTE PTR [eax],al
  410f1f:	add    BYTE PTR ds:0x259e4fad,bh
  410f25:	adc    eax,ebp
  410f27:	mov    al,ds:0xe2fe9a01
  410f2c:	mov    BYTE PTR [esi+eax*1],dl
  410f2f:	push   0x25
  410f31:	lods   eax,DWORD PTR ds:[esi]
  410f32:	push   ebx
  410f34:	push   esi
  410f35:	out    dx,al
  410f36:	mov    edi,0x18aa0
  410f3b:	pop    esp
  410f3c:	test   DWORD PTR [ebp+0x16d664f],esp
  410f42:	call   0xfed990d3
  410f47:	push   0xffffffe0
  410f49:	fdiv   DWORD PTR [edi+eiz*8-0x35]
  410f4d:	adc    eax,0xf6de9ec
  410f52:	sub    ebp,DWORD PTR [ecx]
  410f54:	ror    edx,1
  410f56:	pop    es
  410f57:	jmp    0x9a2d5cf1
  410f5c:	scas   eax,DWORD PTR es:[edi]
  410f5d:	sbb    eax,0x31d81108
  410f62:	call   FWORD PTR [esi]
  410f64:	retf   
  410f65:	mov    al,ds:0x8bee9c1f
  410f6a:	jl     0x410f69
  410f6c:	dec    ecx
  410f6d:	push   ds
  410f6e:	push   es
  410f6f:	add    cl,bh
  410f71:	int3   
  410f72:	mov    edx,0x458d0cda
  410f78:	inc    esi
  410f79:	cmp    al,0xff
  410f7b:	jne    0x410f27
  410f7d:	je     0x410ff0
  410f7f:	pop    ecx
  410f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f81:	ins    BYTE PTR es:[edi],dx
  410f82:	cmp    eax,0x0
	...
  410fac:	inc    edx
  410fad:	repnz add eax,0xfe591783
  410fb3:	je     0x410f61
  410fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fb6:	mov    esi,0x5f0c9
  410fbb:	lea    ebp,[edi+0x59]
  410fbe:	dec    esi
  410fbf:	push   0x42
  410fc1:	ins    BYTE PTR es:[edi],dx
  410fc2:	jae    0x410fcc
  410fc4:	mov    ch,ah
  410fc6:	pop    eax
  410fc7:	jmp    DWORD PTR [ebp+0x32ec437a]
  410fcd:	ins    BYTE PTR es:[edi],dx
  410fce:	jae    0x410fd8
  410fd0:	retf   0x565c
  410fd3:	call   ebp
  410fd5:	nop
  410fd6:	test   BYTE PTR [ecx],0x60
  410fd9:	pop    es
  410fda:	cmp    eax,0x61
  410fdd:	repz add eax,0xfe685783
  410fe3:	je     0x411011
  410fe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fe6:	mov    esi,0x570c9
  410feb:	mov    ds:0x40e2ca,eax
  410ff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ff1:	inc    edx
  410ff2:	in     al,dx
  410ff3:	push   eax
  410ff4:	or     BYTE PTR [ebp+edi*8+0x48641a75],ah
  410ffb:	pop    ecx
  410ffc:	push   ebp
  410ffd:	ins    BYTE PTR es:[edi],dx
  410ffe:	lds    cx,DWORD PTR [ebp-0x5072ffb3]
  411005:	addr16 dec esi
  411007:	push   0xfffffff3
  411009:	push   0x73
  41100b:	or     al,0x55
  41100d:	repnz pop es
  41100f:	call   0x411014
	...
  411038:	dec    ebx
  411039:	mov    ds,WORD PTR [eax-0x3a171b02]
  41103f:	pop    es
  411040:	dec    ebx
  411041:	jne    0x410fd0
  411043:	jmp    0x41100d
  411045:	in     eax,dx
  411046:	lahf   
  411047:	mov    WORD PTR [esi+0x32e8329e],es
  41104d:	jge    0x410ff0
  41104f:	(bad)  
  411050:	mov    esp,0x3efea034
  411055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411056:	stos   BYTE PTR es:[edi],al
  411057:	dec    esi
  411058:	adc    al,0xbf
  41105a:	mov    eax,ds:0x133d8b0a
  41105f:	call   DWORD PTR [esi]
  411061:	call   0xfddd:0xb99774a1
  411068:	mov    WORD PTR [esi+0xd],ds
  41106b:	sar    dh,0xa1
  41106e:	mov    eax,ds:0x22797f74
  411073:	push   ebp
  411074:	je     0x4110ec
  411076:	retf   
  411077:	sar    DWORD PTR [edi],0xa2
  41107a:	aaa    
  41107b:	mov    esi,DWORD PTR [edi-0x7a]
  41107e:	pop    ss
  41107f:	or     al,0x73
  411081:	push   edx
  411082:	and    al,0xff
  411084:	push   esp
  411085:	call   0x1018:0x1f2873c2
  41108c:	fwait
  41108d:	mov    ah,cl
  41108f:	pusha  
  411090:	cmp    al,0x30
  411092:	xor    ebp,DWORD PTR [eax-0x3d]
  411095:	push   0x42
  411097:	add    BYTE PTR [esi+esi*4],ch
  41109a:	cli    
  41109b:	inc    BYTE PTR [eax]
	...
  4110c1:	add    BYTE PTR [eax],al
  4110c3:	add    BYTE PTR [esi-0x6900cd64],bl
  4110c9:	cwde   
  4110ca:	stos   BYTE PTR es:[edi],al
  4110cb:	in     eax,0xcb
  4110cd:	xlat   BYTE PTR ds:[ebx]
  4110ce:	mov    eax,ds:0xa17dcee7
  4110d3:	(bad)  
  4110d4:	adc    ah,bl
  4110d6:	idiv   bh
  4110d8:	xchg   edi,eax
  4110d9:	or     DWORD PTR [edx-0x51],esi
  4110dc:	ins    BYTE PTR es:[edi],dx
  4110dd:	or     ecx,ebp
  4110df:	mov    dl,0xae
  4110e1:	and    DWORD PTR [ebx+0x46],eax
  4110e4:	mov    cl,BYTE PTR [ecx]
  4110e6:	push   cs
  4110e7:	sbb    BYTE PTR [edi+0x23],cl
  4110ea:	jecxz  0x41108e
  4110ec:	pop    edi
  4110ed:	add    DWORD PTR [ecx],edx
  4110ef:	push   ebx
  4110f0:	int    0x96
  4110f2:	cmc    
  4110f3:	sub    cl,BYTE PTR [ebx+0x9]
  4110f6:	(bad)  
  4110f7:	pusha  
  4110f8:	and    al,0x5a
  4110fa:	sub    DWORD PTR [ebx+0x4b],eax
  4110fd:	xchg   esi,eax
  4110fe:	push   ebx
  4110ff:	adc    BYTE PTR [ecx],ah
  411101:	repz aad 0x17
  411104:	push   ebx
  411105:	mov    eax,ds:0x969da16f
  41110a:	push   eax
  41110b:	add    al,0x4b
  41110d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41110e:	jle    0x41113c
  411110:	loope  0x41115c
  411112:	sub    BYTE PTR [esp+eax*4],al
  411115:	sbb    al,0xdd
  411117:	sub    eax,0xc1b965f
  41111c:	arpl   WORD PTR [ebx+0x216da19d],cx
  411122:	jmp    0x98852a
  411127:	push   ebp
	...
  411150:	or     DWORD PTR [eax-0x17],ecx
  411153:	mov    al,ds:0x1304df
  411158:	dec    esp
  411159:	sbb    al,0xe1
  41115b:	stos   DWORD PTR es:[edi],eax
  41115c:	mov    cl,0x96
  41115e:	ins    DWORD PTR es:[edi],dx
  41115f:	mov    eax,ds:0xb0e909a4
  411164:	mul    BYTE PTR [eax]
  411166:	xchg   ebx,eax
  411167:	inc    ebp
  411168:	mov    cl,BYTE PTR [ecx]
  41116a:	push   esi
  41116b:	pop    ss
  41116c:	push   edi
  41116d:	and    ecx,DWORD PTR [edx]
  41116f:	mov    eax,ds:0x38510197
  411174:	adc    al,0x96
  411176:	cmp    eax,0x94b2c
  41117b:	inc    esi
  41117c:	imul   ebp,DWORD PTR [esi],0x989aab3
  411182:	call   FWORD PTR [esp+eax*2+0x541e2323]
  411189:	add    eax,ebp
  41118b:	aam    0xab
  41118d:	xchg   esi,eax
  41118e:	(bad)  
  41118f:	and    BYTE PTR ds:0xc79c000e,al
  411195:	mov    eax,ds:0x1fab2582
  41119a:	add    BYTE PTR [ebx-0x1e8b6962],al
  4111a0:	lock inc ebx
  4111a2:	pop    edx
  4111a3:	out    0xeb,al
  4111a5:	add    BYTE PTR [ebp+ebx*8+0x60],0x42
  4111aa:	inc    esp
  4111ab:	sub    BYTE PTR [edi-0x6a],cl
  4111ae:	je     0x411191
  4111b0:	lock inc esp
  4111b2:	inc    esi
	...
  4111dc:	jmp    0x411174
  4111de:	je     0x41119d
  4111e0:	jmp    0x4111fe
  4111e2:	or     cl,al
  4111e4:	popa   
  4111e5:	xor    edi,edi
  4111e7:	scas   al,BYTE PTR es:[edi]
  4111e8:	xchg   ecx,eax
  4111e9:	mov    DWORD PTR [ebx],0xeb823de9
  4111ef:	push   0xffffff84
  4111f1:	xchg   ecx,eax
  4111f2:	imul   ebp,ecx,0x14feda36
  4111f8:	dec    edi
  4111f9:	mov    eax,ds:0x96aa231c
  4111fe:	mov    BYTE PTR [ebx+ebp*4],ah
  411201:	sub    eax,0x9882d5a
  411206:	push   esp
  411208:	push   eax
  411209:	mov    eax,ds:0x93eb661b
  41120e:	(bad)  
  41120f:	aam    0xcc
  411211:	xchg   ebx,eax
  411212:	je     0x4111f5
  411214:	lock dec esp
  411216:	pop    edx
  411217:	dec    esi
  411218:	jmp    0x4111db
  41121a:	rol    DWORD PTR [eax],0x26
  41121d:	or     DWORD PTR [ebp-0x75],edx
  411220:	jle    0x4111af
  411222:	ret    0x8f8
  411225:	or     DWORD PTR [edx+0x34],ebp
  411228:	sub    eax,0x5ee807fb
  41122d:	iret   
  41122e:	(bad)  
  41122f:	(bad)  
  411230:	jnp    0x41127d
  411232:	cld    
  411233:	push   0x414cd6
  411238:	dec    ebp
  411239:	sti    
  41123a:	pop    es
  41123b:	call   0x3e7c79
	...
  411268:	mov    eax,0xf6846808
  41126d:	inc    edi
  41126e:	add    BYTE PTR [eax+0x42],ch
  411271:	dec    esp
  411272:	inc    ecx
  411273:	add    BYTE PTR [ebp+0x632944b2],ch
  411279:	or     eax,0x745da5e8
  41127e:	std    
  41127f:	or     esi,edx
  411281:	icebp  
  411282:	mov    DWORD PTR ds:[edi+0x75],esp
  411286:	data16 mov al,cl
  411289:	dec    ebp
  41128a:	add    BYTE PTR [eax+0x72],ch
  41128d:	or     bh,ch
  41128f:	mov    esi,0x41421f0a
  411294:	bound  esi,QWORD PTR [ebx+0x73]
  411297:	clc    
  411298:	int    0xf2
  41129a:	pop    es
  41129b:	call   0x400682
  4112a0:	dec    edx
  4112a1:	test   DWORD PTR [eax-0x1f9dc0],edi
  4112a7:	(bad)  
  4112a8:	mov    ebp,0x71b36733
  4112ad:	dec    esi
  4112ae:	add    bh,bh
  4112b0:	aaa    
  4112b1:	jo     0x4112b0
  4112b3:	jne    0x4112ef
  4112b5:	pusha  
  4112b6:	je     0x411337
  4112b8:	lea    esi,[ebp+edi*8+0x75]
  4112bc:	dec    ebx
  4112bd:	cmp    ch,BYTE PTR [ecx+ecx*2-0x160bc81]
  4112c4:	sahf   
  4112c5:	dec    esi
  4112c6:	lahf   
  4112c7:	je     0x41130c
  4112c9:	cmp    ah,BYTE PTR [ecx+0x58]
	...
  4112f4:	add    al,0xdb
  4112f6:	int3   
  4112f7:	rol    DWORD PTR [edi-0x5e],0x37
  4112fb:	mov    esp,edi
  4112fd:	push   ds
  4112fe:	enter  0x61fb,0xa2
  411302:	sub    BYTE PTR ds:0xe80a74e4,dh
  411308:	push   0x59
  41130a:	popf   
  41130b:	inc    dl
  41130d:	fs sahf 
  41130f:	addr16 mov ebx,0xc400436d
  411315:	adc    al,0xb
  411317:	call   0xfedeb747
  41131c:	mov    ah,0x34
  41131e:	mov    al,ds:0xaa9a36fe
  411323:	mov    eax,DWORD PTR [edx]
  411325:	mov    ebx,0xad89c89d
  41132a:	add    dl,BYTE PTR [ebp-0x40]
  41132d:	mov    ebp,0x378fc381
  411332:	add    al,0x6a
  411334:	cmp    eax,0x7308175b
  411339:	xchg   ecx,eax
  41133a:	cmp    edi,edi
  41133c:	je     0x411356
  41133e:	dec    eax
  41133f:	cld    
  411340:	jecxz  0x4112ca
  411342:	inc    esi
  411343:	inc    ecx
  411344:	dec    ebx
  411345:	jnp    0x41135e
  411347:	or     BYTE PTR [ebx+0x52],dh
  41134a:	pushf  
  41134b:	(bad)  
  41134c:	push   esp
  41134d:	mov    dl,BYTE PTR [edi]
  41134f:	cld    
  411350:	dec    esp
  411351:	pushf  
  411352:	or     ch,al
  411354:	mov    al,ds:0xfe9ef9
	...
  41137d:	add    BYTE PTR [eax],al
  41137f:	add    BYTE PTR [edx],dl
  411381:	pop    edi
  411382:	push   es
  411383:	add    BYTE PTR [esi-0x36508df7],bl
  411389:	int    0x5c
  41138b:	sub    DWORD PTR [ebx+0x1f],ecx
  41138e:	push   ds
  41138f:	lahf   
  411390:	xchg   edi,eax
  411391:	add    DWORD PTR [ecx-0x62],eax
  411394:	jl     0x411328
  411396:	inc    ebp
  411397:	mov    WORD PTR [edi-0x779d2f6b],es
  41139d:	dec    eax
  41139e:	jmp    0x41428b41
  4113a3:	popf   
  4113a4:	not    DWORD PTR [edx-0x6a8861db]
  4113aa:	sbb    eax,0xc2a15318
  4113af:	cmp    al,0xdc
  4113b1:	xchg   edx,eax
  4113b2:	pop    ds
  4113b3:	ror    DWORD PTR [eax+0x9],0x9c
  4113b7:	mov    ah,al
  4113b9:	xchg   BYTE PTR [edi+ebx*4],ah
  4113bc:	xor    cl,BYTE PTR [ecx]
  4113be:	sbb    ebx,0xffffffbd
  4113c1:	sbb    al,0xe1
  4113c3:	stos   DWORD PTR es:[edi],eax
  4113c4:	xchg   BYTE PTR [ecx],dh
  4113c6:	out    0x9d,al
  4113c8:	ret    
  4113c9:	dec    esp
  4113ca:	(bad)  [eax+esi*8]
  4113cd:	dec    ebp
  4113ce:	sub    BYTE PTR [esp+ebx*4],al
  4113d1:	sbb    al,0xe1
  4113d3:	stos   DWORD PTR es:[edi],eax
  4113d4:	xchg   DWORD PTR [ebp+eax*8-0x42e37263],edx
  4113db:	popf   
  4113dc:	inc    DWORD PTR [eax]
  4113de:	rcr    DWORD PTR [ebx-0x34526dec],0x0
	...
  411409:	add    BYTE PTR [eax],al
  41140b:	add    BYTE PTR [edx-0x3fc916f3],cl
  411411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411412:	popf   
  411413:	pop    ss
  411414:	push   edi
  411415:	mov    eax,ds:0x925c3d51
  41141a:	loope  0x4113df
  41141c:	fdiv   st,st(3)
  41141e:	adc    BYTE PTR [esi+0x8],bl
  411421:	dec    eax
  411422:	jmp    0x7a475a
  411427:	push   ss
  411428:	ficom  WORD PTR [edx-0x6a391b1]
  41142e:	dec    edi
  41142f:	push   sp
  411431:	add    eax,ebp
  411433:	push   esi
  411434:	fst    QWORD PTR [edx+0x2e9241fe]
  41143a:	dec    DWORD PTR [esi+0x0]
  41143d:	enter  0xe90b,0x55
  411441:	jle    0x41142e
  411443:	push   0x13
  411445:	call   0x2e39:0x1f48c356
  41144c:	pop    esp
  41144d:	add    eax,ebp
  41144f:	xchg   ebp,eax
  411450:	xor    BYTE PTR [edx-0x6a738f02],dl
  411456:	mov    dl,ah
  411458:	pop    ds
  411459:	loope  0x41149b
  41145b:	jmp    0x7d40e728
  411460:	sub    al,0x21
  411462:	mov    ch,0xa5
  411464:	or     DWORD PTR [ecx],ecx
  411466:	push   edi
  411467:	add    DWORD PTR [esi],edx
  411469:	in     eax,0xff
  41146b:	call   0x46b4ddb3
	...
  411498:	jbe    0x41143b
  41149a:	fld    DWORD PTR [ebp-0x3a]
  41149d:	xchg   edx,eax
  41149e:	or     ch,BYTE PTR [ecx+0x24893c34]
  4114a4:	mov    bh,0x92
  4114a6:	je     0x411469
  4114a8:	(bad)  
  4114a9:	out    dx,eax
  4114aa:	(bad)  
  4114ab:	xor    al,0x57
  4114ad:	mov    eax,ds:0x92dfb685
  4114b2:	(bad)  
  4114b3:	xor    al,0xd7
  4114b5:	pop    ds
  4114b6:	sbb    al,0xa6
  4114b8:	push   ebp
  4114b9:	add    eax,ebp
  4114bb:	and    dh,al
  4114bd:	xchg   edx,eax
  4114be:	(bad)  
  4114bf:	xchg   esi,eax
  4114c0:	xor    eax,0xb7ca6991
  4114c5:	sbb    al,0x8
  4114c7:	add    BYTE PTR [edx-0x3a00011f],bh
  4114cd:	in     al,0xc7
  4114cf:	inc    esp
  4114d0:	jae    0x4114d7
  4114d2:	push   DWORD PTR [ebp-0x46]
  4114d5:	fs jae 0x411536
  4114d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114d9:	ins    DWORD PTR es:[edi],dx
  4114da:	or     eax,eax
  4114dc:	(bad)  
  4114dd:	call   0xff4e:0x74ffff4e
  4114e4:	inc    DWORD PTR [eax+ebp*8]
  4114e7:	ins    BYTE PTR es:[edi],dx
  4114e8:	sub    al,0x6d
  4114ea:	std    
  4114eb:	call   0x3fe722
  4114f0:	xor    eax,0x7ae8f7f7
  4114f5:	sar    dh,cl
  4114f7:	jmp    DWORD PTR [esi]
  4114f9:	mov    ecx,0xb9be
	...
  411522:	add    BYTE PTR [eax],al
  411524:	inc    ebp
  411525:	ins    DWORD PTR es:[edi],dx
  411526:	std    
  411527:	inc    DWORD PTR [eax+0x1e]
  41152a:	aaa    
  41152b:	pop    es
  41152c:	mov    edi,0x4675fd88
  411531:	ins    DWORD PTR es:[edi],dx
  411532:	jae    0x41153c
  411534:	pop    edx
  411535:	(bad)  
  411536:	push   esi
  411537:	push   DWORD PTR [ebp-0x513d372c]
  41153d:	or     al,0x55
  41153f:	mov    edx,DWORD PTR [esi+0x7a0c7374]
  411545:	push   ebx
  411546:	pop    esp
  411547:	push   DWORD PTR [ebp+0x0]
  41154a:	shl    BYTE PTR [edi+eiz*4-0x1c],0xd6
  41154f:	inc    esp
  411550:	arpl   WORD PTR ds:0xd341e850,ax
  411556:	(bad)  
  411557:	jmp    DWORD PTR [edx+0x74]
  41155a:	jae    0x41156c
  41155c:	push   edx
  41155d:	je     0x4115d2
  41155f:	or     dl,bl
  411561:	(bad)  
  411562:	aam    0xff
  411564:	lds    ebx,FWORD PTR [ebp+0x6c]
  411567:	pop    edx
  411568:	dec    ebx
  411569:	ja     0x411505
  41156b:	enter  0xae89,0x2
  41156f:	push   ebp
  411570:	shl    BYTE PTR [esi-0x7a],0xc3
  411574:	inc    ebx
  411575:	imul   DWORD PTR ds:0x995cb100
  41157b:	je     0x4115c0
  41157d:	mov    cl,BYTE PTR [edx-0x72d8d3aa]
  411583:	inc    esp
  411584:	daa    
  411585:	sbb    ebx,ecx
  411587:	pop    esi
	...
  4115b0:	jae    0x411613
  4115b2:	add    al,BYTE PTR [eax+0x590ea254]
  4115b8:	mov    ds:0x4b413ff4,eax
  4115bd:	ja     0x411569
  4115bf:	fldcw  WORD PTR [edi]
  4115c1:	mov    ds:0x560b0b02,al
  4115c6:	(bad)  
  4115c7:	push   esi
  4115c8:	jecxz  0x4115ae
  4115ca:	es jmp esp
  4115cd:	call   0xf841:0x291973c2
  4115d4:	aam    0x74
  4115d6:	call   0xb308:0x11073169
  4115dd:	daa    
  4115de:	fwait
  4115df:	(bad)  
  4115e0:	mov    esp,0x21f80f96
  4115e5:	mov    esi,0xba437499
  4115ea:	sbb    edi,edi
  4115ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115ed:	scas   al,BYTE PTR es:[edi]
  4115ee:	cdq    
  4115ef:	je     0x411594
  4115f1:	dec    ebx
  4115f2:	out    0xfe,eax
  4115f4:	push   ds
  4115f5:	stos   BYTE PTR es:[edi],al
  4115f6:	stos   BYTE PTR es:[edi],al
  4115f7:	imul   ecx,DWORD PTR [esi+eax*8-0x36010167],0xffffffaa
  4115ff:	std    
  411600:	and    dl,BYTE PTR [edi-0x67]
  411603:	sti    
  411604:	cmp    BYTE PTR [edx+0x5b],ah
  411607:	(bad)  
  411608:	ins    BYTE PTR es:[edi],dx
  411609:	or     BYTE PTR [esi-0x1fa1a566],ah
  41160f:	add    dl,dh
  411611:	addr16 xchg ebp,eax
  411613:	adc    BYTE PTR [eax],al
	...
  411639:	add    BYTE PTR [eax],al
  41163b:	add    BYTE PTR [edi-0x71],dl
  41163e:	adc    ecx,DWORD PTR [ebx+eiz*2]
  411641:	sub    ebx,DWORD PTR [esi]
  411643:	fwait
  411644:	inc    ebp
  411645:	das    
  411646:	mov    al,0xc5
  411648:	dec    eax
  411649:	or     DWORD PTR [edi+ecx*4],ebx
  41164c:	and    BYTE PTR [ebx+0x239597a4],cl
  411652:	jmp    0xd3cf7684
  411657:	or     esi,DWORD PTR [ebx]
  411659:	add    eax,0x81159abe
  41165e:	mov    ds:0xa5ccc197,eax
  411663:	jmp    0x4115f0
  411665:	or     DWORD PTR [ecx-0x26],ebp
  411668:	cld    
  411669:	sbb    ch,BYTE PTR [ecx-0x57ba16d5]
  41166f:	add    edx,DWORD PTR [ecx+eiz*4-0x711b1848]
  411676:	icebp  
  411677:	ret    
  411678:	pop    eax
  411679:	jmp    0x9a0e:0x2a59abbd
  411680:	inc    ecx
  411681:	leave  
  411682:	jl     0x411680
  411684:	adc    al,0x21
  411686:	jmp    0x8090c28e
  41168b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41168c:	or     BYTE PTR [eax-0x17],cl
  41168f:	xor    ebp,DWORD PTR [esp+edx*1+0xf2babf1]
  411696:	ficomp WORD PTR [ecx-0x66d0835c]
  41169c:	xchg   ebp,eax
  41169d:	lea    ebx,[ecx]
  41169f:	les    eax,FWORD PTR [eax]
	...
  4116c5:	add    BYTE PTR [eax],al
  4116c7:	add    bl,dl
  4116c9:	mov    es,ebp
  4116cb:	cdq    
  4116cc:	test   DWORD PTR [ebx+0x1445dc8e],ebx
  4116d2:	add    BYTE PTR [ecx-0x5103ea2e],ch
  4116d8:	cmp    al,0x1
  4116da:	call   0xfecf307a
  4116df:	ds nop
  4116e1:	enter  0xe903,0x25
  4116e5:	sub    bl,0x6a
  4116e8:	mov    esp,DWORD PTR [esi-0x235b3b7e]
  4116ee:	inc    eax
  4116ef:	jmp    0xa0452b3c
  4116f4:	or     eax,0x47030002
  4116f9:	and    eax,DWORD PTR [eax]
  4116fb:	rol    ebx,cl
  4116fd:	mov    ?,WORD PTR [ebp+ebp*8+0x6e]
  411701:	or     DWORD PTR [edx-0x17],ebp
  411704:	loopne 0x4116e9
  411706:	sub    ch,cl
  411708:	dec    eax
  411709:	add    BYTE PTR [ecx+eax*2-0x1e],0x14
  41170e:	clc    
  41170f:	push   ecx
  411710:	cmp    DWORD PTR [eax],esi
  411712:	push   DWORD PTR [esi]
  411714:	rol    BYTE PTR [esp+edi*8+0x2e],0x3c
  411719:	xchg   ecx,eax
  41171a:	(bad)  
  41171b:	pushf  
  41171c:	mov    esp,0x4c1eff1f
  411721:	std    
  411722:	imul   ebp,ecx,0xe5e80926
  411728:	fisttp WORD PTR [ebp+0x74fe]
	...
  411752:	add    BYTE PTR [eax],al
  411754:	test   BYTE PTR [ebp+0x2348934f],dl
  41175a:	add    BYTE PTR [ebx-0x11ffe042],al
  411760:	cmp    eax,0x4fcfe8d
  411765:	fadd   QWORD PTR [eax-0x17]
  411768:	sbb    eax,0xc0610e4e
  41176d:	(bad)  
  41176e:	(bad)  
  41176f:	jmp    0x1354c33
  411774:	stc    
  411775:	xchg   ebx,eax
  411776:	mov    eax,DWORD PTR [ebp-0x3e]
  411779:	fldcw  WORD PTR [ecx+0x0]
  41177c:	or     BYTE PTR [edi-0x65f5ff98],dl
  411782:	inc    ebx
  411783:	inc    ecx
  411784:	jb     0x4117f6
  411786:	jae    0x41177c
  411788:	mov    ebp,0xa2850fd3
  41178d:	icebp  
  41178e:	pop    esi
  41178f:	push   DWORD PTR [edi]
  411791:	jne    0x411779
  411793:	stos   DWORD PTR es:[edi],eax
  411794:	bound  esi,QWORD PTR [edx-0x3]
  411797:	mov    DWORD PTR [edi+0x5d],esp
  41179a:	or     eax,eax
  41179c:	ss inc ecx
  41179e:	push   DWORD PTR [ebp-0x36]
  4117a1:	pusha  
  4117a2:	jmp    0x4117fc
  4117a4:	lods   eax,DWORD PTR ds:[esi]
  4117a5:	jno    0x41172e
  4117a7:	inc    ebp
  4117a8:	mov    ?,WORD PTR [ecx+0x73]
  4117ab:	lock mov dh,BYTE PTR [esi]
  4117ae:	push   ecx
  4117af:	(bad)  
  4117b0:	jge    0x411823
  4117b2:	jae    0x41179c
  4117b4:	(bad)  
  4117b5:	sti    
  4117b6:	jmp    0x4117b7
	...
  4117e0:	mov    bh,0x78
  4117e2:	out    0x2c,al
  4117e4:	shl    DWORD PTR [ecx-0x3],cl
  4117e7:	or     esp,DWORD PTR [edx]
  4117e9:	cld    
  4117ea:	sbb    ch,BYTE PTR [eax-0xe]
  4117ed:	or     bh,ch
  4117ef:	mov    esi,0xe807fb3d
  4117f4:	neg    ebx
  4117f6:	(bad)  
  4117f7:	(bad)  
  4117f8:	cmp    eax,0x47ffe7fb
  4117fd:	fs std 
  4117ff:	jne    0x4117bb
  411801:	pusha  
  411802:	pop    ebx
  411803:	push   ebp
  411804:	mov    ebp,0xae75fd74
  411809:	pop    edi
  41180a:	xchg   esp,eax
  41180b:	pop    eax
  41180c:	lods   eax,DWORD PTR ds:[esi]
  41180d:	je     0x41180c
  41180f:	jne    0x411793
  411811:	pop    ebp
  411812:	stc    
  411813:	dec    edi
  411814:	dec    ebx
  411815:	mov    bl,0x96
  411817:	mov    dh,dh
  411819:	mov    ch,0x8a
  41181b:	adc    DWORD PTR [ebp+ecx*8-0x65e60171],eax
  411822:	xchg   ebp,eax
  411823:	je     0x41189c
  411825:	retf   0x581a
  411828:	ins    BYTE PTR es:[edi],dx
  411829:	pop    ebx
  41182a:	int3   
  41182b:	rcl    DWORD PTR [edi-0x5e],0x2f
  41182f:	mov    ebp,DWORD PTR [edi+0x6b]
  411832:	adc    BYTE PTR [ebx+eiz*2],cl
  411835:	aaa    
  411836:	cmp    bh,bh
  411838:	dec    esp
  411839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41183a:	ret    0x7273
  41183d:	cli    
  41183e:	lea    eax,[ebx-0x76]
  411841:	mov    ds:0xe832,al
	...
  41186a:	add    BYTE PTR [eax],al
  41186c:	fwait
  41186d:	not    BYTE PTR [esi+0x450a9bfe]
  411873:	mov    edi,0x2aa28b
  411878:	dec    ebx
  411879:	cmp    edx,DWORD PTR [esi+0x67]
  41187c:	inc    edi
  41187d:	pop    ebp
  41187e:	inc    ebx
  41187f:	add    BYTE PTR [ebx+0x3b],bh
  411882:	adc    DWORD PTR [eax],ecx
  411884:	repz mov ecx,0x39fcff19
  41188a:	xlat   BYTE PTR ds:[ebx]
  41188b:	push   edi
  41188c:	hlt    
  41188d:	rcl    BYTE PTR [esi+0x7e4a3f74],cl
  411893:	pop    ebx
  411894:	in     al,0xe2
  411896:	or     al,al
  411898:	push   edi
  411899:	mov    ecx,0x618ffd2a
  41189e:	add    dl,BYTE PTR [eax-0x1d]
  4118a1:	xchg   esi,eax
  4118a2:	ss inc esp
  4118a5:	jno    0x4118d1
  4118a7:	inc    ecx
  4118a8:	cld    
  4118a9:	popa   
  4118aa:	add    ch,BYTE PTR [eax+0x4b]
  4118ad:	mov    ds:0xae23bda5,al
  4118b2:	aas    
  4118b3:	inc    ecx
  4118b4:	dec    ebx
  4118b5:	or     DWORD PTR [ecx],edi
  4118b7:	xchg   edi,eax
  4118b8:	pop    ss
  4118b9:	add    ecx,edx
  4118bb:	rcl    BYTE PTR [ecx],cl
  4118bd:	mov    ebp,ss
  4118bf:	stos   DWORD PTR es:[edi],eax
  4118c0:	inc    edx
  4118c1:	xor    esi,ecx
  4118c3:	xchg   esi,eax
  4118c4:	xchg   ebx,eax
  4118c5:	(bad)  
  4118c6:	lock add edx,DWORD PTR [esi]
  4118c9:	or     ah,0x82
  4118cc:	mov    BYTE PTR [edx+eax*2+0x4],cl
	...
  4118f7:	add    cl,ah
  4118f9:	int3   
  4118fa:	lods   eax,DWORD PTR ds:[esi]
  4118fb:	adc    BYTE PTR [ebx-0x5f],dl
  4118fe:	aam    0x30
  411900:	pop    esp
  411901:	mov    ebp,DWORD PTR [edi+0x40]
  411904:	push   edi
  411905:	push   ds
  411906:	repz xchg esi,eax
  411908:	xlat   BYTE PTR ds:[ebx]
  411909:	add    BYTE PTR [ecx-0x7a74bbed],al
  41190f:	sub    DWORD PTR [eax-0x76],ebp
  411912:	repz or esp,DWORD PTR [ebx]
  411915:	and    al,0x76
  411917:	xchg   esi,eax
  411918:	sub    eax,0x9f96cd20
  41191d:	add    DWORD PTR [ecx+0x37],edx
  411920:	sbb    al,0x8b
  411922:	pop    ebp
  411923:	xchg   esi,eax
  411924:	lahf   
  411925:	lea    edx,[ebp+0x10]
  411928:	inc    ebx
  411929:	mov    eax,ds:0x8b0430a6
  41192e:	das    
  41192f:	ror    DWORD PTR [eax+0x9],0x94
  411933:	mov    ah,al
  411935:	mov    bh,BYTE PTR [ebx-0x72fe1cf9]
  41193b:	xchg   esi,eax
  41193c:	in     eax,0xfe
  41193e:	sub    BYTE PTR [edi],cl
  411940:	daa    
  411941:	and    edx,ecx
  411943:	inc    eax
  411944:	mov    cl,BYTE PTR [ecx]
  411946:	mov    ecx,0xe2eafab
  41194b:	xchg   esi,eax
  41194c:	adc    al,0x21
  41194e:	jmp    0x908cc556
  411953:	int    0xf
  411955:	dec    eax
  411956:	add    cl,ch
  411958:	js     0x4118e4
  41195a:	je     0x41193d
	...
  411984:	lock and eax,0xa2b6e67c
  41198a:	nop
  41198b:	ss mov esi,0x3fabc88b
  411991:	or     DWORD PTR [ebp+0x62],edx
  411994:	mov    bl,0x87
  411996:	ret    
  411997:	lds    esi,FWORD PTR [ecx]
  411999:	or     DWORD PTR [edx-0x4],ebp
  41199c:	fist   WORD PTR ds:0x361ac108
  4119a2:	jmp    FWORD PTR [esi+0x13fc45d0]
  4119a8:	popa   
  4119a9:	mov    esi,DWORD PTR [ecx+esi*8-0x60]
  4119ad:	pusha  
  4119ae:	(bad)  
  4119af:	xchg   esi,eax
  4119b0:	mov    dh,0x20
  4119b2:	and    ecx,DWORD PTR [esi+0x49e80154]
  4119b8:	(bad)  
  4119b9:	mov    bh,dh
  4119bb:	adc    esi,DWORD PTR [ebx]
  4119bd:	mov    esi,DWORD PTR [ecx+eiz*8-0x20]
  4119c1:	jae    0x4119c1
  4119c3:	outs   dx,BYTE PTR ds:[esi]
  4119c4:	mov    esi,0xb665748a
  4119c9:	adc    al,0x8
  4119cb:	push   ecx
  4119cc:	or     al,0x36
  4119ce:	call   DWORD PTR [esi+0x0]
  4119d1:	enter  0xe903,0x35
  4119d5:	jle    0x4119c2
  4119d7:	push   0xb
  4119d9:	xchg   edx,eax
  4119da:	push   esi
  4119db:	ror    DWORD PTR [eax+0x1f],cl
  4119de:	ds ss cmp al,0x1
  4119e2:	call   0xfecb4ea0
  4119e7:	jo     0x4119e9
	...
  411a0d:	add    BYTE PTR [eax],al
  411a0f:	add    BYTE PTR [ecx*4-0x1ee02376],bl
  411a16:	inc    eax
  411a17:	jmp    0x9540e4e4
  411a1c:	xchg   DWORD PTR [ecx],esp
  411a1e:	ds add bh,ch
  411a21:	inc    esi
  411a22:	add    BYTE PTR [edi+0x5a],dl
  411a25:	xor    BYTE PTR [eax],ch
  411a27:	add    BYTE PTR [edx-0x778b4000],ah
  411a2d:	fsubr  st(7),st
  411a2f:	ficom  WORD PTR [edx]
  411a31:	je     0x411a30
  411a33:	or     esp,edx
  411a35:	stc    
  411a36:	pop    ds
  411a37:	mov    DWORD PTR [edi+0x6d],ebx
  411a3a:	data16 add BYTE PTR [edx+0x64],dh
  411a3e:	mov    esp,0x40ca2d68
  411a43:	add    BYTE PTR [ebp+0x2ffff7fa],dh
  411a49:	std    
  411a4a:	out    0xc8,eax
  411a4c:	sbb    DWORD PTR [ebp+edi*8-0x1],esi
  411a50:	aas    
  411a51:	ins    DWORD PTR es:[edi],dx
  411a52:	out    0xf1,al
  411a54:	sbb    al,0x74
  411a56:	std    
  411a57:	cld    
  411a58:	jno    0x411a1f
  411a5a:	mov    bh,0xff
  411a5c:	aad    0x9d
  411a5e:	std    
  411a5f:	repnz xchg esp,eax
  411a61:	fs add eax,0x739d8b75
  411a67:	cld    
  411a68:	mov    ch,0x17
  411a6a:	or     al,ch
  411a6c:	cmp    al,0x39
  411a6e:	(bad)  
  411a6f:	inc    DWORD PTR ds:0x4c054
	...
  411a99:	add    BYTE PTR [eax],al
  411a9b:	add    BYTE PTR [edx],ah
  411a9d:	cmp    BYTE PTR [ebx-0x1d375e14],cl
  411aa3:	push   edi
  411aa4:	or     BYTE PTR ds:0x17853f6a,cl
  411aaa:	or     al,ch
  411aac:	mov    bh,BYTE PTR [ecx]
  411aae:	(bad)  
  411aaf:	jmp    FWORD PTR [ebx+0x47]
  411ab2:	cld    
  411ab3:	mov    esi,edi
  411ab5:	cmp    eax,0x8cf24128
  411aba:	cmp    eax,0x6845be00
  411abf:	dec    esp
  411ac0:	dec    ebx
  411ac1:	mov    ch,0x41
  411ac3:	add    BYTE PTR [edx+ecx*1],bl
  411ac6:	inc    eax
  411ac7:	sub    DWORD PTR [ebx+0x72],ecx
  411aca:	pop    es
  411acb:	sar    BYTE PTR [edi],0x5c
  411ace:	sub    ebp,eax
  411ad0:	and    eax,0x50fe9392
  411ad5:	xor    cl,BYTE PTR [edi]
  411ad7:	and    dl,dl
  411ad9:	xor    eax,0x724b678c
  411ade:	mov    eax,ds:0x494523bd
  411ae3:	inc    ecx
  411ae4:	dec    ebx
  411ae5:	push   edi
  411ae6:	sbb    al,bh
  411ae8:	jl     0x411b2f
  411aea:	cld    
  411aeb:	out    0x1b,eax
  411aed:	retf   
  411aee:	xchg   edx,eax
  411aef:	(bad)  
  411af0:	ins    BYTE PTR es:[edi],dx
  411af1:	inc    ebp
  411af2:	mov    edi,fs
  411af4:	loop   0x411b15
  411af6:	xchg   ebx,eax
  411af7:	(bad)  
  411af8:	pop    edi
  411af9:	arpl   dx,ax
  411afb:	mov    eax,0xfe92a754
	...
  411b28:	pop    ecx
  411b29:	ror    bl,1
  411b2b:	push   es
  411b2c:	mov    esi,0x4b001bd9
  411b31:	lahf   
  411b32:	push   ecx
  411b33:	addr16 sahf 
  411b35:	sub    eax,0xd0a30045
  411b3a:	dec    eax
  411b3b:	inc    ecx
  411b3c:	dec    ebx
  411b3d:	neg    DWORD PTR [eax]
  411b3f:	or     BYTE PTR [ebx],dh
  411b41:	pusha  
  411b42:	or     eax,0x25c14ff
  411b47:	push   0x43b56d
  411b4c:	jae    0x411b37
  411b4e:	dec    eax
  411b4f:	inc    ecx
  411b50:	dec    ebx
  411b51:	iret   
  411b52:	fadd   DWORD PTR [ebp+0x22]
  411b55:	mov    cl,0x2
  411b57:	call   0xfed2b4f2
  411b5c:	shr    BYTE PTR [esi+ebx*4-0x6ef6b497],cl
  411b63:	push   ds
  411b64:	mov    cs,edx
  411b66:	call   0xa80edd86
  411b6b:	add    eax,esp
  411b6d:	cmp    eax,0x90bdca7
  411b72:	adc    edi,ecx
  411b74:	adc    ecx,DWORD PTR [eax+0x7d077cfd]
  411b7a:	add    BYTE PTR [ebx],0x33
  411b7d:	add    BYTE PTR [esp+eax*2+0x486ff14b],ah
  411b84:	or     cl,BYTE PTR [ecx]
  411b86:	(bad)  
  411b88:	push   es
  411b89:	xor    ch,BYTE PTR [eax]
  411b8b:	add    al,0x0
	...
  411bb1:	add    BYTE PTR [eax],al
  411bb3:	add    BYTE PTR [ebx+0x29],dh
  411bb6:	xor    BYTE PTR [ebx-0x6bd46e83],dl
  411bbc:	(bad)  
  411bbd:	int    0xc4
  411bbf:	xor    esp,ebx
  411bc1:	mov    BYTE PTR [ebx],ch
  411bc3:	inc    ebp
  411bc4:	dec    ebx
  411bc5:	icebp  
  411bc6:	pop    edi
  411bc7:	dec    eax
  411bc8:	or     cl,BYTE PTR [ecx]
  411bca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bcb:	fmul   DWORD PTR [esi]
  411bcd:	xor    ch,BYTE PTR [eax]
  411bcf:	add    al,0x63
  411bd1:	or     eax,0x91459330
  411bd6:	and    ebx,DWORD PTR [ecx+ecx*8-0x40fc82fc]
  411bdd:	shr    DWORD PTR [ecx+0x10],1
  411be0:	cmp    ecx,DWORD PTR [edx]
  411be2:	std    
  411be3:	inc    ebp
  411be4:	enter  0x7d04,0x3
  411be8:	xchg   edi,eax
  411be9:	inc    ebp
  411bea:	rol    DWORD PTR [ebx+ecx*2],1
  411bed:	jbe    0x411b8d
  411bef:	xchg   edx,eax
  411bf0:	xchg   edi,eax
  411bf1:	adc    DWORD PTR [ecx+0x37],eax
  411bf4:	cdq    
  411bf5:	xchg   BYTE PTR [ebp-0x6e],cl
  411bf8:	ja     0x411c77
  411bfa:	inc    ebp
  411bfb:	sbb    BYTE PTR [ebx+0x71],al
  411bfe:	xchg   ecx,eax
  411bff:	xor    eax,0x35ff86ec
  411c04:	inc    ebx
  411c05:	jns    0x411c05
  411c07:	mov    ah,0xe0
  411c09:	outs   dx,BYTE PTR ds:[esi]
  411c0a:	lahf   
  411c0b:	mov    ebx,0x94fe87b9
  411c10:	lods   al,BYTE PTR ds:[esi]
  411c11:	xchg   DWORD PTR [ecx+eiz*8-0x20],esi
  411c15:	popf   
  411c16:	push   ecx
  411c17:	push   cs
	...
  411c40:	fld    DWORD PTR [edi-0x226f28c]
  411c46:	out    0xfe,eax
  411c48:	push   esp
  411c49:	adc    eax,ebp
  411c4b:	xchg   edx,eax
  411c4c:	pop    esi
  411c4d:	xchg   dh,bh
  411c4f:	out    dx,al
  411c50:	xor    al,0x75
  411c52:	out    0x7d,eax
  411c54:	pop    esp
  411c55:	xchg   dh,bh
  411c57:	fidiv  WORD PTR [edi*2-0x79c39a19]
  411c5e:	dec    dh
  411c60:	push   esp
  411c61:	jns    0x411c4a
  411c63:	ins    DWORD PTR es:[edi],dx
  411c64:	cmp    al,0x86
  411c66:	(bad)  
  411c67:	mov    esi,0x35e77154
  411c6c:	sbb    al,0x86
  411c6e:	(bad)  
  411c6f:	scas   al,BYTE PTR es:[edi]
  411c70:	xor    al,0x85
  411c72:	(bad)  
  411c73:	sbb    al,0x57
  411c75:	outs   dx,BYTE PTR ds:[esi]
  411c76:	out    dx,al
  411c77:	cmp    edi,DWORD PTR [edx+0xda05e87]
  411c7d:	or     al,BYTE PTR [eax]
  411c7f:	xor    al,0xbe
  411c81:	jb     0x411c05
  411c83:	lods   eax,DWORD PTR ds:[esi]
  411c84:	fucomi st,st(7)
  411c86:	call   DWORD PTR [edx]
  411c88:	xchg   DWORD PTR [esi-0x683f1e8c],eax
  411c8e:	push   ecx
  411c8f:	outs   dx,BYTE PTR ds:[esi]
  411c90:	mov    edx,0x35654490
  411c95:	or     DWORD PTR [edx-0x17],ebp
  411c98:	xor    ah,al
  411c9a:	inc    esp
  411c9b:	test   al,0x48
  411c9d:	icebp  
  411c9e:	(bad)  
  411c9f:	call   0x128a5ec
	...
  411ccc:	scas   al,BYTE PTR es:[edi]
  411ccd:	xor    edi,edi
  411ccf:	(bad)  
  411cd0:	stc    
  411cd1:	dec    ecx
  411cd2:	jb     0x411cf7
  411cd4:	ret    0x1a1
  411cd7:	pop    edi
  411cd8:	sub    eax,0xb6c00998
  411cdd:	jb     0x411d2d
  411cdf:	push   0xbeef09e2
  411ce4:	retf   0x43d1
  411ce7:	inc    ecx
  411ce8:	mov    dl,0x39
  411cea:	push   DWORD PTR [ebp-0x46]
  411ced:	mov    eax,ds:0x98ad79ef
  411cf2:	out    0x1d,al
  411cf4:	(bad)  
  411cf5:	cwde   
  411cf6:	std    
  411cf7:	call   DWORD PTR [edi]
  411cf9:	xchg   esi,eax
  411cfa:	std    
  411cfb:	jne    0x411c97
  411cfd:	mov    eax,ds:0x986d528e
  411d02:	mov    edx,0x8b550976
  411d08:	mov    esi,0x55fcc28c
  411d0d:	daa    
  411d0e:	add    BYTE PTR [edx+0x23],ch
  411d11:	cwde   
  411d12:	jae    0x411d1c
  411d14:	mov    bl,BYTE PTR [eax+edx*2-0x1]
  411d18:	lods   eax,DWORD PTR ds:[esi]
  411d19:	add    al,BYTE PTR [esp+edi*8-0x27]
  411d1d:	push   esi
  411d1e:	pop    ebp
  411d1f:	sub    BYTE PTR [ebx],ah
  411d21:	or     eax,0x1d323f80
  411d26:	inc    eax
  411d27:	push   0x40cbf9
  411d2c:	push   ebp
  411d2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d2e:	jl     0x411d57
	...
  411d58:	and    cl,BYTE PTR [ecx]
  411d5a:	or     eax,eax
  411d5c:	outs   dx,BYTE PTR es:[esi]
  411d5e:	push   ebp
  411d5f:	call   0x4057f7
  411d64:	sbb    DWORD PTR [ecx+0x72],ecx
  411d67:	sbb    edx,edx
  411d69:	and    BYTE PTR [eax],al
  411d6b:	add    BYTE PTR [ebx-0x35],cl
  411d6e:	push   eax
  411d6f:	addr16 jmp 0x15cb:0x9b0041ad
  411d77:	or     bl,ah
  411d79:	repz or edi,edi
  411d7c:	in     al,0xca
  411d7e:	dec    ebx
  411d7f:	push   ebx
  411d80:	fdiv   QWORD PTR [ebx]
  411d82:	(bad)  
  411d83:	xor    cl,BYTE PTR [ebx]
  411d85:	jmp    0xad95:0x23ccfe8f
  411d8c:	xor    DWORD PTR [ebx+0x15],0xffffffc0
  411d90:	mov    esp,0x3efe8e9d
  411d95:	jp     0x411d31
  411d97:	pop    ds
  411d98:	sbb    DWORD PTR [ebx+0x30925e8e],eax
  411d9e:	pop    es
  411d9f:	add    dh,dh
  411da1:	out    0x9e,al
  411da3:	or     BYTE PTR [edi+0x4b6a366e],0xd8
  411daa:	inc    ecx
  411dab:	(bad)  
  411dac:	(bad)  
  411dad:	imul   ebx,DWORD PTR [edx-0x71ace53f],0x7a4e0e88
  411db7:	cmp    al,0xc
  411db9:	sbb    al,BYTE PTR [ebp+0x0]
	...
  411de4:	retf   
  411de5:	jnp    0x411de9
  411de7:	je     0x411df4
  411de9:	retf   0x4494
  411dec:	or     dh,BYTE PTR [edx+0x35]
  411def:	call   0x436932
  411df4:	push   eax
  411df5:	mov    dl,0x17
  411df7:	and    edx,DWORD PTR [edx+ecx*4-0x74cba22d]
  411dfe:	cli    
  411dff:	mov    edi,0x683269b7
  411e04:	dec    ebx
  411e05:	jb     0x411da4
  411e07:	mov    ebp,0x4148fab3
  411e0c:	dec    ebx
  411e0d:	or     DWORD PTR [ecx+0x5111978e],edi
  411e13:	out    dx,al
  411e14:	add    DWORD PTR [ebp+edx*2+0x4ddd929c],0xffffff8f
  411e1c:	lock aaa 
  411e1e:	sub    DWORD PTR [ebp-0x13],ecx
  411e21:	cmp    DWORD PTR ds:0xf0b2da8f,0x6
  411e28:	push   esi
  411e29:	dec    ecx
  411e2a:	ret    0xece2
  411e2d:	mov    eax,es
  411e2f:	mov    cs,ebp
  411e31:	movaps XMMWORD PTR [eax],xmm3
  411e34:	outs   dx,DWORD PTR ds:[esi]
  411e35:	icebp  
  411e36:	jmp    0x539b:0xb9090a45
  411e3d:	loope  0x411e44
  411e3f:	(bad)  
  411e40:	cld    
  411e41:	lock call 0x8103d24a
  411e47:	mov    eax,DWORD PTR [eax]
	...
  411e6d:	add    BYTE PTR [eax],al
  411e6f:	add    BYTE PTR [edi],al
  411e71:	retf   0x33e8
  411e74:	xchg   esp,eax
  411e75:	std    
  411e76:	lock fwait
  411e78:	stos   DWORD PTR es:[edi],eax
  411e79:	add    dh,bl
  411e7b:	mov    gs,WORD PTR [ebp+edx*1+0x3d]
  411e7f:	(bad)  
  411e80:	jge    0x411e70
  411e82:	or     DWORD PTR [edi+ebx*1+0x418ec5e1],ebx
  411e89:	dec    ecx
  411e8a:	xor    al,0xe8
  411e8c:	in     al,dx
  411e8d:	push   cs
  411e8e:	das    
  411e8f:	inc    ebp
  411e90:	dec    ebx
  411e91:	fld    st(0)
  411e93:	cdq    
  411e94:	std    
  411e95:	and    DWORD PTR [ebp-0x16f71ccd],0xffffff9e
  411e9c:	push   es
  411e9d:	repnz nop
  411e9f:	dec    eax
  411ea0:	mov    cl,BYTE PTR [ecx]
  411ea2:	cmp    DWORD PTR [edi+0x519111bf],ecx
  411ea8:	mov    ah,0x82
  411eaa:	jge    0x411e47
  411eac:	push   es
  411ead:	xlat   BYTE PTR ds:[ebx]
  411eae:	push   DWORD PTR [ebp-0x33]
  411eb1:	xor    DWORD PTR [ebp+ebp*2-0x3b],0xfffffffd
  411eb6:	pop    es
  411eb7:	push   ecx
  411eb8:	push   edi
  411eb9:	fdivr  st,st(6)
  411ebb:	pop    esi
  411ebc:	xor    eax,0x48edc150
  411ec1:	fmul   QWORD PTR [edx-0x10b936c3]
  411ec7:	je     0x411e4c
  411ec9:	jns    0x411f1a
  411ecb:	ds inc ebx
  411ecd:	adc    eax,0x822f9ee8
  411ed2:	(bad)  
  411ed3:	loop   0x411ed5
	...
  411ef9:	add    BYTE PTR [eax],al
  411efb:	add    BYTE PTR [eax],cl
  411efd:	div    DWORD PTR [ecx]
  411eff:	push   0x3b
  411f01:	test   DWORD PTR [ecx],eax
  411f03:	xchg   edi,eax
  411f04:	test   eax,0x6611448f
  411f09:	mov    BYTE PTR [edi],dh
  411f0b:	mov    ebp,0x618fdaa
  411f10:	push   ebx
  411f11:	sbb    edi,edi
  411f13:	je     0x411eb5
  411f15:	push   0x25
  411f17:	cdq    
  411f18:	int    0x83
  411f1a:	(bad)  
  411f1b:	je     0x411ee1
  411f1d:	xor    DWORD PTR [ecx+eiz*8-0x42],0xfffffffd
  411f22:	pop    es
  411f23:	rol    DWORD PTR [ebp-0x27],1
  411f26:	(bad)  
  411f27:	(bad)  
  411f28:	cld    
  411f29:	int3   
  411f2a:	out    dx,eax
  411f2b:	cmp    edi,edx
  411f2d:	mov    ebp,0x51bec658
  411f32:	shr    ebp,0x48
  411f35:	fmul   QWORD PTR [edx-0x8b9353b]
  411f3b:	inc    ebx
  411f3c:	dec    edi
  411f3d:	out    dx,eax
  411f3e:	inc    edx
  411f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f40:	xor    al,0x11
  411f42:	call   0xfec39e98
  411f47:	pusha  
  411f48:	test   BYTE PTR [ebp+0x952e969],al
  411f4e:	push   0x40cc2a00
  411f53:	add    BYTE PTR [edx],bh
  411f55:	pop    es
  411f56:	add    BYTE PTR [eax],al
  411f58:	mov    dl,0xa5
  411f5a:	jo     0x411fb2
  411f5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f5d:	xchg   esp,eax
  411f5e:	or     eax,eax
	...
  411f88:	out    dx,al
  411f89:	push   esp
  411f8a:	xchg   DWORD PTR [ebp+0x6a],eax
  411f8d:	and    eax,0x5b34664
  411f92:	push   DWORD PTR [ebp-0x66]
  411f95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f96:	loopne 0x411fbd
  411f98:	loop   0x411f9f
  411f9a:	or     eax,eax
  411f9c:	sahf   
  411f9d:	push   0xa51a75fd
  411fa2:	add    DWORD PTR [ebp+0x25],ebx
  411fa5:	xchg   esp,eax
  411fa6:	dec    esi
  411fa7:	push   0x3e5140
  411fac:	fiadd  DWORD PTR ds:0x1f14ef00
  411fb2:	add    BYTE PTR [eax+0x45],dl
  411fb5:	sbb    cl,BYTE PTR [eax]
  411fb7:	call   0x403bb6
  411fbc:	cmp    dh,BYTE PTR [ecx+edx*2-0x1]
  411fc0:	xchg   ebp,eax
  411fc1:	xchg   esp,eax
  411fc2:	jae    0x411fbc
  411fc4:	dec    edx
  411fc5:	jl     0x412018
  411fc7:	jmp    DWORD PTR [ebp-0x5a038c6c]
  411fcd:	sbb    cl,BYTE PTR [eax]
  411fcf:	call   0x4055bc
  411fd4:	stos   DWORD PTR es:[edi],eax
  411fd5:	inc    edi
  411fd6:	add    al,BYTE PTR [eax]
  411fd8:	dec    edi
  411fd9:	add    bl,ch
  411fdb:	sub    DWORD PTR [esi+0x8006891],0xffffffd1
  411fe2:	(bad)  
  411fe3:	jne    0x41204f
  411fe5:	popf   
  411fe6:	sub    al,0x50
  411fe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fe9:	xchg   esp,eax
  411fea:	xchg   DWORD PTR [ebp+0x0],eax
	...
  412011:	add    BYTE PTR [eax],al
  412013:	add    dh,ah
  412015:	and    al,0x0
  412017:	add    BYTE PTR [ebx-0x79],cl
  41201a:	dec    esp
  41201b:	addr16 mov esp,0xa3004328
  412021:	push   ss
  412022:	inc    esi
  412023:	inc    ecx
  412024:	dec    ebx
  412025:	call   DWORD PTR ds:0x14013308
  41202b:	call   DWORD PTR [eax+esi*8]
  41202e:	adc    eax,0xfa5e0cfc
  412033:	out    0x94,eax
  412035:	ret    0xfe8b
  412038:	adc    dh,BYTE PTR ds:0xeb9e0007
  41203e:	sahf   
  41203f:	add    BYTE PTR [edi],0xcb
  412042:	sbb    al,BYTE PTR [eax]
  412044:	dec    ebx
  412045:	iret   
  412046:	dec    esp
  412047:	(bad)  
  412048:	push   esi
  412049:	push   0xffffff9a
  41204b:	inc    edx
  41204c:	test   BYTE PTR [edi],ch
  41204e:	mov    esi,?
  412050:	push   esi
  412051:	jbe    0x411fde
  412053:	je     0x4120a8
  412055:	sbb    ch,BYTE PTR [ecx+0x4e]
  412058:	mov    esp,0x5b748c17
  41205d:	movhps xmm1,QWORD PTR [eax]
  412060:	mov    ds:0xa4ff3bf7,eax
  412065:	jg     0x41207b
  412067:	sbb    BYTE PTR [ebp+edi*8+0x6a1efef6],bl
  41206e:	call   0xbd67:0x8a66fc54
  412075:	sub    BYTE PTR [ebp+0x0],al
	...
  4120a0:	jl     0x41207f
  4120a2:	repz out 0x2e,eax
  4120a5:	add    eax,0xb2400004
  4120aa:	adc    BYTE PTR [ebp-0xd],ah
  4120ad:	mov    DWORD PTR [ecx+0x41],eax
  4120b0:	dec    ebx
  4120b1:	dec    edx
  4120b2:	or     ah,BYTE PTR [ebx]
  4120b4:	dec    ebx
  4120b5:	jb     0x412132
  4120b7:	inc    esp
  4120b8:	push   ebx
  4120b9:	or     DWORD PTR [ecx],edx
  4120bb:	dec    esp
  4120bc:	mov    cs,edx
  4120be:	call   0x815ad84d
  4120c3:	add    ebp,DWORD PTR [esi+0x9]
  4120c6:	jmp    0xef360dc9
  4120cb:	push   es
  4120cc:	mov    es,WORD PTR [ecx-0x7fc4be91]
  4120d2:	sti    
  4120d3:	repz sub al,0x9e
  4120d6:	add    DWORD PTR [ebx-0x749f73f3],ecx
  4120dc:	js     0x412113
  4120de:	jo     0x412121
  4120e0:	push   eax
  4120e2:	out    0x3,eax
  4120e4:	in     al,0xbe
  4120e6:	dec    ebp
  4120e7:	adc    DWORD PTR [ebx+0x71],eax
  4120ea:	xor    edi,DWORD PTR [edx]
  4120ec:	in     al,0x7f
  4120ee:	cmp    eax,0xbb804f11
  4120f3:	sti    
  4120f4:	in     al,dx
  4120f5:	and    al,0x9e
  4120f7:	mov    cl,ch
  4120f9:	jg     0x412096
  4120fb:	xchg   ebp,eax
  4120fd:	cmc    
  4120fe:	lock fwait
  412100:	cmc    
  412101:	into   
  412102:	adc    eax,0x8b
	...
  41212b:	add    BYTE PTR [ebp+0x378af0f5],dh
  412131:	adc    eax,0x71531106
  412136:	sbb    eax,0x1f7f9c3a
  41213b:	(bad)  
  41213c:	cmp    BYTE PTR [ecx],cl
  41213e:	xchg   esp,eax
  41213f:	jle    0x4120e1
  412141:	mov    ebp,DWORD PTR [ebx+ecx*4+0x4c1b8c1e]
  412148:	cs retf 0x3e8
  41214c:	(bad)  
  41214d:	cld    
  41214e:	imul   ecx,eax,0x4282eb8
  412154:	dec    ebx
  412155:	cmc    
  412156:	cmp    DWORD PTR [edi+0x311f],eax
  41215c:	push   cs
  41215d:	or     DWORD PTR [eax],eax
  41215f:	xor    eax,0xa544482d
  412164:	dec    eax
  412165:	or     DWORD PTR [eax],eax
  412167:	jmp    0xea38e775
  41216c:	dec    eax
  41216d:	or     DWORD PTR [eax],eax
  41216f:	pop    esp
  412170:	mov    edi,DWORD PTR [ebp+0x4f]
  412173:	je     0x412100
  412175:	or     DWORD PTR [edi+0x13],0x2f80f147
  41217c:	mov    cs,WORD PTR [ecx]
  41217e:	call   esp
  412180:	jl     0x4121ae
  412182:	inc    ecx
  412183:	jmp    0xaab4e08d
  412188:	(bad)  
  41218b:	jmp    0xccc45dd4
	...
  4121b8:	les    edi,FWORD PTR [esi+0x72]
  4121bb:	(bad)  
  4121bc:	gs cmc 
  4121be:	sti    
  4121bf:	push   edx
  4121c0:	repnz aam 0x8a
  4121c3:	inc    ecx
  4121c5:	hlt    
  4121c6:	pop    ss
  4121c7:	cmp    bl,BYTE PTR cs:0x7fc09fff
  4121ce:	jne    0x4121a9
  4121d0:	shl    ebp,1
  4121d2:	pop    es
  4121d3:	add    edx,esp
  4121d5:	jl     0x4121d5
  4121d7:	push   cs
  4121d8:	bound  edi,QWORD PTR [esi+0x4c]
  4121db:	add    ebp,ecx
  4121dd:	inc    esp
  4121de:	add    ebp,DWORD PTR [edx+0x53]
  4121e1:	cmp    edi,0x3d8a4b7c
  4121e7:	jmp    0x5d3f7827
  4121ec:	sar    DWORD PTR [edi+0x14],cl
  4121ef:	mov    eax,ds:0x36ffc9a1
  4121f4:	mov    al,0x48
  4121f6:	add    ebp,ecx
  4121f8:	sbb    eax,0xf100eb92
  4121fd:	dec    eax
  4121fe:	repnz push ebx
  412200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412201:	ds clc 
  412203:	add    BYTE PTR [edx+0xa],ah
  412206:	add    bh,al
  412208:	daa    
  412209:	cdq    
  41220a:	(bad)  
  41220b:	push   DWORD PTR [edx]
  41220d:	or     bh,bh
  41220f:	jne    0x412253
  412211:	add    DWORD PTR [esp+edi*8-0xd],eax
  412215:	adc    eax,0x1c226afc
  41221a:	add    BYTE PTR [edx+0x0],ch
	...
  412241:	add    BYTE PTR [eax],al
  412243:	add    BYTE PTR [edx],dh
  412245:	sbb    al,0x0
  412247:	call   DWORD PTR [edi]
  412249:	xchg   ch,bh
  41224b:	jne    0x41227b
  41224d:	sbb    al,0x0
  41224f:	push   0x22
  412251:	mov    ds:0x9f222ca,al
  412256:	or     eax,eax
  412258:	push   ss
  412259:	dec    edi
  41225a:	dec    esi
  41225b:	push   eax
  41225c:	mov    ah,BYTE PTR [edi]
  41225e:	push   ecx
  41225f:	(bad)  
  412260:	jge    0x412264
  412262:	inc    esp
  412263:	clc    
  412264:	stos   DWORD PTR es:[edi],eax
  412265:	sbb    eax,DWORD PTR [eax]
  412267:	push   0xfffffff2
  412269:	cmp    bh,bh
  41226b:	jne    0x412287
  41226d:	nop
  41226e:	jae    0x41226c
  412270:	sbb    eax,0xb26a0c0e
  412275:	sbb    eax,DWORD PTR [eax]
  412277:	call   0x3f8980
  41227c:	test   eax,0x3d0f7349
  412281:	push   cs
  412282:	clc    
  412283:	call   0x405d1e
  412288:	gs ds clc 
  41228b:	add    BYTE PTR [edx+0x1f830009],ah
  412291:	xchg   edx,eax
  412292:	(bad)  
  412293:	jae    0x4122d1
  412295:	nop
  412296:	jae    0x4122a0
  412298:	popf   
  412299:	push   cs
  41229a:	clc    
  41229b:	call   0x24aaeb
  4122a0:	ins    BYTE PTR es:[edi],dx
  4122a1:	push   0xffffffc2
  4122a3:	jae    0x4122c9
  4122a5:	and    BYTE PTR [ecx+0x74],cl
	...
  4122cf:	add    BYTE PTR [ebx+0x58],dl
  4122d2:	add    esp,DWORD PTR [edx]
  4122d4:	dec    ebx
  4122d5:	jo     0x412300
  4122d7:	add    ecx,DWORD PTR [edx+0x71eaaaea]
  4122dd:	repnz retf 0xb60c
  4122e1:	inc    esi
  4122e2:	sar    bh,0x34
  4122e5:	inc    eax
  4122e6:	pushf  
  4122e7:	in     eax,dx
  4122e8:	push   0x72
  4122ea:	add    cl,BYTE PTR [ebx]
  4122ec:	or     edi,DWORD PTR [edi-0x13]
  4122ef:	dec    edi
  4122f0:	jnp    0x41228c
  4122f2:	nop
  4122f3:	dec    edi
  4122f4:	adc    al,0xf4
  4122f6:	jns    0x41233c
  4122f8:	pop    ss
  4122f9:	sbb    dh,BYTE PTR [ebx]
  4122fb:	(bad)  
  4122fc:	jle    0x4122dc
  4122fe:	xor    ebp,eax
  412300:	pop    esp
  412301:	rol    DWORD PTR [edi+0x426ce0fe],0x80
  412308:	xor    esi,DWORD PTR [edx+0xd]
  41230b:	shl    esp,1
  41230d:	mov    ebp,0xa30ae78a
  412312:	xchg   esi,edi
  412314:	shr    BYTE PTR [ebp+0x31025a8e],0xf7
  41231b:	call   FWORD PTR [edi]
  41231d:	not    DWORD PTR [esi+0x31368782]
  412323:	push   edi
  412324:	enter  0xda55,0x28
  412328:	or     dh,BYTE PTR [edx+0x2]
  41232b:	jne    0x41237a
  41232d:	mov    ds:0x6e89c928,eax
  412332:	add    cl,BYTE PTR [ebp+0x0]
	...
  41235c:	push   cs
  41235d:	xor    BYTE PTR [ecx],0xff
  412360:	push   ss
  412361:	pop    esi
  412362:	call   0x5187:0xe6091d30
  412369:	dec    ecx
  41236a:	in     eax,dx
  41236b:	jg     0x412394
  41236d:	or     ch,cl
  41236f:	add    ecx,edx
  412371:	dec    ah
  412373:	add    al,0x4b
  412375:	sbb    ecx,ebp
  412377:	test   cl,0x14
  41237a:	call   0x3bbd6e82
  41237f:	mov    BYTE PTR [ebp-0xa],cl
  412382:	mov    al,0x9c
  412384:	add    dl,ah
  412386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412387:	xchg   DWORD PTR [ecx+0x49],edx
  41238a:	in     eax,dx
  41238b:	or     BYTE PTR [eax+0xa],0xe9
  41238f:	add    ebp,DWORD PTR [esi+esi*8]
  412392:	mov    WORD PTR [edi+0x6a10819f],es
  412398:	xchg   dl,cl
  41239a:	call   0x75bc1d3a
  41239f:	xchg   ebx,eax
  4123a1:	lds    edi,FWORD PTR [edi+eax*4+0x7f]
  4123a5:	jge    0x41240c
  4123a7:	adc    DWORD PTR [ebx],eax
  4123a9:	icebp  
  4123aa:	jno    0x4123ea
  4123ac:	mov    cl,BYTE PTR [ecx]
  4123ae:	inc    ecx
  4123af:	(bad)  
  4123b0:	out    dx,al
  4123b1:	jnp    0x412400
  4123b3:	jge    0x412344
  4123b5:	jno    0x4123fc
  4123b7:	adc    edi,ebx
  4123b9:	jnp    0x41236e
  4123bb:	mov    ebp,DWORD PTR [ebx+eiz*4-0x52]
  4123bf:	inc    esp
	...
  4123e8:	dec    ebx
  4123e9:	jno    0x412466
  4123eb:	xchg   ch,al
  4123ed:	jnp    0x41245e
  4123ef:	inc    ecx
  4123f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123f1:	xchg   DWORD PTR [ebx+0x6d0ab497],ebx
  4123f7:	pop    ebp
  4123f8:	lods   al,BYTE PTR ds:[esi]
  4123f9:	jnp    0x4123e3
  4123fb:	and    BYTE PTR [edi],0x71
  4123fe:	call   0xe8dcecf9
  412403:	add    ecx,DWORD PTR [ebx-0x78]
  412406:	push   DWORD PTR [ebx-0x54]
  412409:	jnp    0x412418
  41240b:	gs cli 
  41240d:	jnp    0x41240d
  41240f:	jmp    0xd22918d9
  412414:	jns    0x41243e
  412416:	add    cl,ch
  412418:	icebp  
  412419:	hlt    
  41241a:	out    0x62,eax
  41241c:	into   
  41241d:	mov    es,edi
  41241f:	cwde   
  412420:	mov    edi,0x350fead8
  412425:	scas   al,BYTE PTR es:[edi]
  412426:	cmp    edi,ecx
  412428:	cmp    dl,BYTE PTR [ecx]
  41242a:	cmp    al,0xf0
  41242c:	push   ebp
  41242d:	add    eax,0x6e1d92c
  412432:	sub    al,0x28
  412434:	dec    ebx
  412435:	jo     0xa3a3cd0
  41243b:	imul   ecx,esp,0xc8ec7741
  412441:	outs   dx,BYTE PTR ds:[esi]
  412442:	das    
  412443:	xchg   edx,eax
  412444:	push   ss
  412445:	sti    
  412446:	jmp    0x412470
  412448:	mov    DWORD PTR [esi+0x9],0xa9
	...
  412473:	add    BYTE PTR [eax-0x5dd2f5fa],ch
  412479:	ror    DWORD PTR [edx],1
  41247b:	xor    BYTE PTR [ebx+0x4b],bl
  41247e:	pop    eax
  41247f:	pusha  
  412480:	xor    ebx,DWORD PTR [ebp-0x2]
  412483:	aam    0xc0
  412485:	mov    eax,DWORD PTR [ecx+ecx*2-0x63]
  412489:	(bad)
  41248c:	dec    eax
  41248d:	or     DWORD PTR [eax],eax
  41248f:	mov    edx,DWORD PTR fs:[ebp+0x4f]
  412493:	ret    
  412494:	dec    edi
  412495:	out    dx,eax
  412496:	call   DWORD PTR [edx-0x6d0010b8]
  41249c:	dec    eax
  41249d:	mov    WORD PTR [ebp+esi*1+0x78],es
  4124a1:	jp     0x4124b7
  4124a3:	rol    DWORD PTR [edi-0x66000037],0x46
  4124aa:	jb     0x4124ce
  4124ac:	and    DWORD PTR [ecx],edx
  4124ae:	fadd   DWORD PTR [eax]
  4124b0:	push   cs
  4124b1:	(bad)  
  4124b2:	std    
  4124b3:	jne    0x412513
  4124b5:	xor    DWORD PTR [ebx-0x28],0x65
  4124b9:	or     ah,ah
  4124bb:	call   FWORD PTR [edi]
  4124bd:	mov    eax,ds:0x9e6a75fd
  4124c2:	mov    ebx,0xfd8495fc
  4124c7:	jne    0x412473
  4124c9:	popf   
  4124ca:	xchg   esi,eax
  4124cb:	and    BYTE PTR [edx+0x6],ah
  4124ce:	push   DWORD PTR [ebp-0x7a]
  4124d1:	popf   
  4124d2:	js     0x412523
  4124d4:	cmc    
  4124d5:	cmp    ebp,0x75
	...
  412500:	ficomp DWORD PTR [eax+esi*2-0x27c2ab1]
  412507:	jne    0x4124c7
  412509:	pushf  
  41250a:	push   0x8b83d54f
  41250f:	inc    ebp
  412510:	mov    ds:0x3f90e835,al
  412515:	test   ch,bh
  412517:	pop    edi
  412518:	xor    al,0xbe
  41251a:	ror    BYTE PTR [edx+esi*8],0x2a
  41251e:	mov    ebp,esp
  412520:	jno    0x41256b
  412522:	cli    
  412523:	push   0xffffffe2
  412525:	pop    ds
  412526:	inc    ebp
  412527:	dec    DWORD PTR [edi]
  412529:	jle    0x412511
  41252b:	add    esi,0xaf89fd84
  412531:	cmp    ebp,0x209dda75
  412537:	std    
  412538:	adc    eax,0xa056884
  41253d:	sti    
  41253e:	push   ecx
  41253f:	jmp    DWORD PTR [ebp-0x80]
  412542:	mov    esi,0x6835b474
  412547:	test   DWORD PTR [ebx+0x2b],0x70330044
  41254e:	add    ch,bh
  412550:	fst    QWORD PTR [edi+0x700a4606]
  412556:	xor    bh,bh
  412558:	push   ss
  412559:	push   0x6af93d9a
  41255e:	and    edi,0x56
  412561:	xor    eax,DWORD PTR [ebp+0xfe]
	...
  41258b:	add    BYTE PTR [esp+edx*8-0x79],dh
  41258f:	(bad)  
  412590:	mul    BYTE PTR [edi-0x66]
  412593:	xchg   DWORD PTR [edi],edx
  412595:	dec    ebx
  412596:	or     eax,0xffffff89
  412599:	imul   eax,DWORD PTR [edx],0x55
  41259c:	ror    BYTE PTR [ebx+0x7f],0xc3
  4125a0:	dec    edi
  4125a1:	sbb    bl,BYTE PTR [edx]
  4125a3:	add    BYTE PTR [ecx+0x53748530],dh
  4125a9:	call   0x4479:0x98344bd7
  4125b0:	das    
  4125b1:	in     al,dx
  4125b2:	lds    ebx,FWORD PTR [esi+0x73]
  4125b5:	and    DWORD PTR [eax+eax*4],eax
  4125b8:	pop    esp
  4125b9:	bound  ecx,QWORD PTR [esi]
  4125bb:	push   ecx
  4125bc:	mov    ds:0x4b413cb9,eax
  4125c1:	pop    ss
  4125c2:	pushf  
  4125c3:	jne    0x4125ef
  4125c5:	bound  eax,QWORD PTR [edx]
  4125c7:	or     ecx,DWORD PTR [ebx]
  4125c9:	push   edi
  4125ca:	add    bl,ch
  4125cc:	inc    esp
  4125cd:	pop    edx
  4125ce:	rol    DWORD PTR [ebp-0x76],0x62
  4125d2:	sub    ebp,eax
  4125d4:	outs   dx,BYTE PTR ds:[esi]
  4125d5:	add    DWORD PTR [eax+eax*1],eax
  4125d8:	push   eax
  4125d9:	and    cl,BYTE PTR [edi]
  4125db:	and    edi,DWORD PTR [edx+ebx*8+0x7a]
  4125df:	push   edi
  4125e0:	int3   
  4125e1:	aas    
  4125e2:	clc    
  4125e3:	mov    edi,0x6832593f
  4125e8:	dec    ebx
  4125e9:	or     ecx,ebp
  4125eb:	xchg   esp,eax
  4125ec:	mul    cl
  4125ee:	cmp    BYTE PTR ds:0x0,bh
	...
  412618:	or     cl,BYTE PTR [ecx]
  41261a:	mov    ecx,0x1011f84
  41261f:	or     eax,0x9b057818
  412624:	jmp    0x293c:0x9083fdc7
  41262b:	dec    edx
  41262c:	test   DWORD PTR [eax-0x13],edi
  41262f:	cmp    DWORD PTR [edx-0x59],0x20
  412633:	or     edi,esi
  412635:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412636:	(bad)  
  412638:	jo     0x4126b2
  41263a:	pop    ebx
  41263b:	or     al,0x73
  41263d:	adc    BYTE PTR ds:0xafd85d83,bl
  412643:	inc    esi
  412644:	dec    eax
  412645:	or     DWORD PTR [edi+ecx*4],edx
  412648:	pusha  
  412649:	mov    ch,BYTE PTR [esp+edx*2-0x6e5287c3]
  412650:	xchg   DWORD PTR [ebp+0x38],esi
  412653:	cmp    DWORD PTR [edi+0x40f99e19],0x61
  41265a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41265b:	and    al,0x4b
  41265d:	or     edx,esp
  41265f:	inc    ebx
  412660:	dec    ebp
  412661:	mov    ?,WORD PTR [ebx-0x59f6b4fb]
  412667:	leave  
  412668:	adc    al,0x9
  41266a:	jmp    0x23917172
  41266f:	je     0x41266e
  412671:	psubsw mm0,QWORD PTR [ebx]
  412674:	popa   
  412675:	or     ebx,edx
  412677:	add    esp,DWORD PTR [ecx+0x9]
  41267a:	ret    
  41267b:	add    eax,DWORD PTR [eax]
	...
  4126a1:	add    BYTE PTR [eax],al
  4126a3:	add    dh,dl
  4126a5:	int    0x58
  4126a7:	aam    0xcf
  4126a9:	lea    edi,[eax]
  4126ab:	jnp    0x412682
  4126ad:	ja     0x412647
  4126af:	adc    BYTE PTR [edi+0x71],0xff
  4126b3:	xor    eax,0x4fe773c2
  4126b8:	or     DWORD PTR [bx+si],eax
  4126bb:	repnz or ah,bh
  4126be:	add    al,0x10
  4126c0:	das    
  4126c1:	or     DWORD PTR [eax],eax
  4126c3:	jmp    0xa868e578
  4126c8:	dec    eax
  4126c9:	js     0x41273f
  4126cb:	fldenv [eax]
  4126cd:	dec    ecx
  4126ce:	push   eax
  4126cf:	dec    cl
  4126d1:	(bad)  
  4126d2:	mov    bl,BYTE PTR [ecx]
  4126d4:	fimul  DWORD PTR [edi+ebp*8+0x4f76c9f6]
  4126db:	cmp    esp,edi
  4126dd:	mov    eax,0x80c9de50
  4126e2:	test   ch,al
  4126e4:	loope  0x41275c
  4126e6:	inc    cl
  4126e8:	push   ecx
  4126e9:	(bad)  
  4126ea:	inc    dh
  4126ec:	mov    ebx,0x5f19f3cc
  4126f1:	and    eax,0x764f2847
  4126f6:	mov    ah,0xbd
  4126f8:	shl    DWORD PTR [edi-0x2],0xa6
  4126fc:	xor    eax,DWORD PTR [ebx]
  4126fe:	call   0xfeb93ef4
  412703:	pusha  
  412704:	rcr    DWORD PTR [esi-0xa],cl
  412707:	mov    es,WORD PTR [eax]
	...
  41272d:	add    BYTE PTR [eax],al
  41272f:	add    cl,cl
  412731:	loopne 0x412732
  412733:	adc    BYTE PTR [eax-0x32],dl
  412736:	inc    eax
  412737:	jmp    0x7f2ce505
  41273c:	leave  
  41273d:	ja     0x41273d
  41273f:	hlt    
  412740:	dec    esp
  412741:	popa   
  412742:	in     al,dx
  412743:	mov    ecx,0x648877c9
  412748:	pusha  
  412749:	jg     0x412749
  41274b:	push   esi
  41274c:	div    BYTE PTR [esi+0x66]
  41274f:	stos   DWORD PTR es:[edi],eax
  412750:	adc    edx,ecx
  412752:	(bad)  
  412753:	dec    DWORD PTR [ebp+0xdf7eab1]
  412759:	mov    edi,ebp
  41275b:	jne    0x41270b
  41275d:	loop   0x41272f
  41275f:	push   eax
  412760:	ins    DWORD PTR es:[edi],dx
  412761:	mov    eax,DWORD PTR [edi-0x20cb97b]
  412767:	call   FWORD PTR [edi]
  412769:	adc    edx,0x4e8b3df7
  41276f:	push   0x3f43d8
  412774:	dec    ebp
  412775:	mov    cl,0xea
  412777:	test   DWORD PTR [ebp+0x6e75fd88],0x6d50b0e2
  412781:	mov    BYTE PTR [ecx],cl
  412783:	rcl    BYTE PTR [esi],0x12
  412786:	cmp    DWORD PTR [ebp-0x20f4a],0x76
  41278d:	jg     0x41279d
  41278f:	inc    DWORD PTR [edx-0x68]
  412792:	and    eax,0x0
	...
  4127b9:	add    BYTE PTR [eax],al
  4127bb:	add    BYTE PTR [ebp+0x7a50fd88],dl
  4127c1:	or     BYTE PTR [ebp-0x1],cl
  4127c4:	std    
  4127c5:	jecxz  0x4127d9
  4127c7:	or     esi,edx
  4127c9:	jo     0x4127cf
  4127cb:	push   eax
  4127cc:	fidivr DWORD PTR [ebx+0x4b]
  4127cf:	dec    ebp
  4127d1:	mov    edi,0x87c5e083
  4127d6:	std    
  4127d7:	adc    eax,0x6a000a32
  4127dc:	and    ah,BYTE PTR [edx+0x47]
  4127df:	inc    edi
  4127e0:	arpl   WORD PTR ds:0xefceb5ff,cx
  4127e6:	std    
  4127e7:	jmp    FWORD PTR [ebp+0x7e]
  4127ea:	or     ch,al
  4127ec:	push   ds
  4127ed:	pop    edx
  4127ee:	std    
  4127ef:	(bad)  
  4127f0:	jnp    0x412780
  4127f2:	(bad)  
  4127f4:	dec    ebx
  4127f5:	fild   WORD PTR [eax-0x1ab7b497]
  4127fb:	inc    esi
  4127fc:	mov    ah,BYTE PTR [eax+0x7f]
  4127ff:	mov    ah,0xdf
  412801:	ds cmp esi,0xe80eb4c4
  412808:	sbb    dl,BYTE PTR [eax-0x1b3d0181]
  41280e:	push   ebx
  41280f:	imul   BYTE PTR [esi+edx*1+0x1683bc85]
  412816:	cmp    esi,0x9386574b
  41281c:	dec    ebx
  41281d:	pusha  
  41281e:	add    ch,BYTE PTR [eax+0x0]
	...
  412845:	add    BYTE PTR [eax],al
  412847:	add    BYTE PTR [ebx],bl
  412849:	scas   eax,DWORD PTR es:[edi]
  41284a:	sar    edi,0xd7
  41284d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41284e:	jbe    0x41289f
  412850:	jl     0x41288e
  412852:	pop    esp
  412853:	div    BYTE PTR [esi+ebp*2+0x6a]
  412857:	imul   edi,ecx,0x56
  41285a:	jg     0x412866
  41285c:	mov    edx,ebx
  41285e:	inc    DWORD PTR [edx+0x74025bde]
  412864:	fucom  st(2)
  412866:	mov    ebp,0x7fb654e3
  41286b:	(bad)  
  41286c:	mov    eax,0x33bc84cd
  412871:	mov    esp,0x164bfe7f
  412876:	call   0x6fa383e2
  41287b:	mov    ebp,0xe80c1624
  412880:	cdq    
  412881:	sub    DWORD PTR [ecx+0x6b3614fe],eax
  412887:	test   BYTE PTR [esp+esi*8],0x7f
  41288b:	je     0x4128e0
  41288d:	mov    cl,BYTE PTR [eax+0x48]
  412890:	cld    
  412891:	jecxz  0x412912
  412893:	mov    ah,0xef
  412895:	or     DWORD PTR [esi-0x80],ebx
  412898:	in     eax,dx
  412899:	je     0x41286e
  41289b:	or     esi,ebx
  41289d:	mov    cl,0x9f
  41289f:	sbb    ch,0x74
  4128a2:	shl    DWORD PTR [edi-0x2b],cl
  4128a5:	mov    esi,0x74cd7820
  4128aa:	cmp    eax,0xf6
	...
  4128d3:	add    BYTE PTR [ecx+eiz*2-0x4f],cl
  4128d7:	retf   0x74bd
  4128da:	sub    eax,0x257c94b6
  4128df:	sub    BYTE PTR [ebp+0x5d6bf0fe],0xc2
  4128e6:	adc    eax,0x2cbe9d80
  4128eb:	js     0x412882
  4128ed:	je     0x4128f4
  4128ef:	test   BYTE PTR [ecx+eiz*2+0x71],0xca
  4128f4:	test   DWORD PTR [ebp+esi*8-0x4b],esi
  4128f8:	mov    WORD PTR [ebp+ebp*8+0x7f],?
  4128fc:	jne    0x4128fc
  4128fe:	lock imul ebp,edi,0xffffffc1
  412902:	fnstsw WORD PTR [edi+0x65]
  412905:	mov    esi,0x745d77b0
  41290a:	rol    BYTE PTR [edi+0x7fc57400],0x97
  412911:	popa   
  412912:	mov    ch,0x7f
  412914:	inc    ebp
  412915:	popa   
  412916:	xor    al,0xd0
  412918:	cmp    eax,0x10b9ad74
  41291d:	jl     0x4128c4
  41291f:	jg     0x412945
  412921:	cli    
  412922:	sub    al,0x7f
  412924:	and    eax,0x15685b74
  412929:	je     0x4128b8
  41292b:	ins    BYTE PTR es:[edi],dx
  41292c:	scas   al,BYTE PTR es:[edi]
  41292d:	lds    eax,FWORD PTR [ebp-0x6741f281]
  412933:	ja     0x41293a
  412935:	je     0x412936
  412937:	add    BYTE PTR [eax],0x0
	...
  41295e:	add    BYTE PTR [eax],al
  412960:	and    al,al
  412962:	(bad)  
  412963:	outs   dx,BYTE PTR ds:[esi]
  412964:	je     0x412923
  412966:	jmp    0x4129c6
  412968:	ins    BYTE PTR es:[edi],dx
  412969:	jae    0x412969
  41296b:	aam    0x54
  41296d:	je     0x4129e3
  41296f:	loope  0x4129e1
  412971:	dec    esi
  412972:	cld    
  412973:	dec    esi
  412974:	push   esp
  412975:	jae    0x41292b
  412977:	push   ebp
  412978:	push   esp
  412979:	jae    0x412979
  41297b:	push   ecx
  41297c:	test   ch,al
  41297e:	(bad)  
  41297f:	ss cmp al,0xcd
  412982:	test   DWORD PTR [eax+0x11],0x2c26fe75
  412989:	std    
  41298a:	sti    
  41298b:	adc    esi,edx
  41298d:	adc    eax,0x4a0fe900
  412992:	or     ebp,ecx
  412994:	jae    0x412a14
  412996:	jmp    0x412a02
  412998:	add    ebp,DWORD PTR [eax-0x74]
  41299b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41299c:	add    al,0xc4
  41299e:	rol    BYTE PTR [di-0x38],1
  4129a3:	adc    BYTE PTR [edx],0xce
  4129a6:	inc    eax
  4129a7:	jmp    0xd14d2699
  4129ac:	sub    eax,0x51d6fec4
  4129b1:	dec    ecx
  4129b2:	jae    0x4129f6
  4129b4:	jg     0x41293c
  4129b6:	jl     0x41297d
  4129b8:	inc    esp
  4129b9:	(bad)  
  4129ba:	pop    esi
  4129bb:	mov    esi,0xb1448278
  4129c0:	(bad)  
  4129c1:	cmc    
  4129c2:	div    DWORD PTR [ebp+0x0]
	...
  4129ec:	dec    edi
  4129ed:	or     DWORD PTR [eax],eax
  4129ef:	pop    ds
  4129f0:	inc    esp
  4129f1:	dec    edx
  4129f2:	inc    esp
  4129f3:	mov    eax,ds:0xe900099c
  4129f8:	mov    cl,0xc8
  4129fa:	(bad)  
  4129fb:	adc    al,0x97
  4129fd:	jmp    0x8cfe:0x4c5d0022
  412a04:	das    
  412a05:	loope  0x412a55
  412a07:	call   0x413f1a
  412a0c:	popa   
  412a0d:	retf   0x6a0a
  412a10:	loop   0x4129ab
  412a12:	inc    ebx
  412a13:	in     al,0xa2
  412a15:	pop    esi
  412a16:	fadd   DWORD PTR [esi-0x4d]
  412a19:	push   es
  412a1a:	push   DWORD PTR [ebp-0xa]
  412a1d:	(bad)  
  412a1f:	dec    esi
  412a20:	test   ebx,esi
  412a22:	or     eax,eax
  412a24:	(bad)  
  412a25:	sbb    dl,BYTE PTR [eax+0x68]
  412a28:	mov    bl,0x6
  412a2a:	out    dx,eax
  412a2b:	mov    esi,0x873f3d2
  412a30:	pop    edx
  412a31:	test   eax,0xde45ff6b
  412a36:	lods   al,BYTE PTR ds:[esi]
  412a37:	dec    ebx
  412a38:	xor    eax,0x3a4dfdf3
  412a3d:	xchg   DWORD PTR [ebx-0x8],edi
  412a40:	mov    ds:0x12e8b671,al
  412a45:	aas    
  412a46:	std    
  412a47:	jmp    FWORD PTR [ebx]
  412a49:	enter  0x6,0xdf
  412a4d:	jg     0x412a39
  412a4f:	add    DWORD PTR [eax],0x0
	...
  412a76:	add    BYTE PTR [eax],al
  412a78:	sahf   
  412a79:	mov    DWORD PTR [eax+0x0],ebp
  412a7c:	clc    
  412a7d:	dec    ebx
  412a7e:	std    
  412a7f:	jne    0x412aeb
  412a81:	faddp  st(0),st
  412a83:	dec    eax
  412a84:	test   esp,esi
  412a86:	xchg   DWORD PTR [ebp-0x7a],eax
  412a89:	test   BYTE PTR gs:[esi+0x73],0xd
  412a8e:	push   DWORD PTR ds:0x411e6c
  412a94:	in     eax,0x79
  412a96:	push   es
  412a97:	call   0x3eb36e
  412a9c:	cmp    dh,ch
  412a9e:	inc    esp
  412a9f:	inc    ecx
  412aa0:	dec    ebx
  412aa1:	pusha  
  412aa2:	jmp    0x96fe:0x82604b01
  412aa9:	js     0x412b15
  412aab:	fld    QWORD PTR [edi]
  412aad:	repz jl 0x412aae
  412ab0:	and    ch,BYTE PTR ss:[ebx]
  412ab3:	inc    ecx
  412ab4:	dec    ebx
  412ab5:	jecxz  0x412aad
  412ab7:	pop    es
  412ab8:	jecxz  0x412ad2
  412aba:	jge    0x412aba
  412abc:	in     al,0x57
  412abe:	add    BYTE PTR [eax],al
  412ac0:	dec    ebx
  412ac1:	loopne 0x412b3f
  412ac3:	je     0x412b08
  412ac5:	enter  0xff1f,0xcc
  412ac9:	retf   0x747c
  412acc:	(bad)  
  412acd:	xor    dh,bh
  412acf:	pop    es
  412ad0:	mov    bl,0xf5
  412ad2:	retf   
  412ad3:	(bad)  
  412ad4:	mov    ah,0x28
  412ad6:	inc    edx
  412ad7:	add    ecx,DWORD PTR [ebx-0x4b]
  412ada:	xchg   ebx,ebp
	...
  412b04:	enter  0x602b,0x55
  412b08:	hlt    
  412b09:	test   DWORD PTR [edx],eax
  412b0b:	push   0x3
  412b0d:	add    esi,edi
  412b0f:	pop    es
  412b10:	mov    ds:0x84fecaab,eax
  412b15:	clc    
  412b16:	(bad)  
  412b17:	sti    
  412b18:	enter  0x6ebc,0x2d
  412b1c:	or     ah,BYTE PTR [eax+0x2]
  412b1f:	vmptrst QWORD PTR [ecx+eax*1+0x3ddf4b00]
  412b27:	lock sub eax,0x44000421
  412b2d:	in     al,dx
  412b2e:	inc    edx
  412b2f:	add    BYTE PTR [ebx+0x60],cl
  412b32:	jg     0x412b70
  412b34:	inc    ebx
  412b35:	add    ebx,eax
  412b37:	(bad)  
  412b38:	cmp    al,0x68
  412b3a:	xchg   BYTE PTR [edx-0x7cfd9db6],dh
  412b40:	outs   dx,BYTE PTR ds:[esi]
  412b41:	or     DWORD PTR [ebp+0x2d],esp
  412b44:	mov    cl,BYTE PTR [ecx]
  412b46:	jmp    0xe7e8f257
  412b4b:	add    ecx,DWORD PTR [ebx-0x74]
  412b4e:	retf   
  412b4f:	inc    ebx
  412b50:	pop    esi
  412b51:	retf   0x3e8
  412b54:	push   esp
  412b55:	test   DWORD PTR [edi+0x2],ebx
  412b58:	dec    ebx
  412b59:	or     DWORD PTR [edx+0x3e],ebp
  412b5c:	mov    eax,cr5
  412b5f:	add    al,0x4b
  412b61:	add    BYTE PTR [ebp-0x71],ch
  412b64:	dec    ebx
  412b65:	or     ecx,ebp
  412b67:	add    BYTE PTR [eax],0x0
	...
  412b8e:	add    BYTE PTR [eax],al
  412b90:	pop    ds
  412b91:	inc    ecx
  412b92:	push   es
  412b93:	ret    
  412b94:	aam    0x70
  412b96:	fld    QWORD PTR [edi+0x3e90a4d]
  412b9c:	enter  0x352e,0x2d
  412ba0:	or     cl,BYTE PTR [ecx]
  412ba2:	jmp    0xe83cfab3
  412ba7:	add    ecx,DWORD PTR [ebx-0x1f]
  412baa:	jo     0x412b70
  412bac:	or     ecx,DWORD PTR [ecx]
  412bae:	xchg   ebx,eax
  412baf:	add    ebx,DWORD PTR [esi+edx*1+0x90a2d05]
  412bb6:	pusha  
  412bb7:	(bad)  
  412bb8:	xchg   esp,eax
  412bb9:	mov    WORD PTR [ebx+0x64ff847b],es
  412bbf:	fisttp DWORD PTR [ebx+0x9]
  412bc2:	jmp    0xee18a8ef
  412bc7:	cmc    
  412bc8:	je     0x412c3a
  412bca:	sti    
  412bcb:	jae    0x412c03
  412bcd:	retf   0x8ee8
  412bd0:	ins    BYTE PTR es:[edi],dx
  412bd1:	add    al,0xdf
  412bd3:	icebp  
  412bd4:	dec    edi
  412bd5:	bound  edx,QWORD PTR [esi]
  412bd7:	add    eax,0xd272094b
  412bdc:	push   eax
  412bdd:	test   BYTE PTR [edx],dh
  412bdf:	in     al,dx
  412be0:	shl    edx,1
  412be2:	inc    DWORD PTR [esi+eax*8-0x44]
  412be6:	repz loop 0x412b9a
  412be9:	inc    DWORD PTR [ebx+0x94e04]
  412bef:	nop
  412bf0:	push   ecx
  412bf1:	or     al,BYTE PTR [eax]
  412bf3:	jmp    0x412bf8
	...
  412c1c:	and    BYTE PTR [ebx+0x70472846],al
  412c22:	ss xchg ecx,eax
  412c24:	cs or  eax,0x494de900
  412c2a:	push   cs
  412c2b:	ins    BYTE PTR es:[edi],dx
  412c2c:	jnp    0x412c9e
  412c2e:	(bad)  
  412c2f:	jmp    0xe9491af9
  412c34:	push   ecx
  412c35:	test   ecx,ebp
  412c37:	jmp    0xdf403584
  412c3c:	inc    eax
  412c3d:	popa   
  412c3e:	pop    edi
  412c3f:	mov    ds:0xac886f51,eax
  412c44:	cmp    BYTE PTR [edi+0x76],ch
  412c47:	icebp  
  412c48:	inc    ecx
  412c49:	cmc    
  412c4a:	out    dx,eax
  412c4b:	ss mov eax,0x7d67e803
  412c51:	outs   dx,BYTE PTR ds:[esi]
  412c52:	(bad)  
  412c53:	xchg   ecx,eax
  412c54:	mov    ebx,0x21e940c6
  412c59:	cmc    
  412c5a:	out    dx,eax
  412c5b:	add    DWORD PTR [esi],esp
  412c5d:	adc    eax,DWORD PTR [eax]
  412c5f:	jmp    0x6c4f75a1
  412c64:	mov    ebx,0x6ee9fe6f
  412c69:	outs   dx,DWORD PTR ds:[esi]
  412c6a:	mov    ebp,DWORD PTR [eax+eiz*8-0x1b5b7341]
  412c71:	mov    edi,0x6f76e969
  412c76:	push   esp
  412c77:	fidivr WORD PTR [ebx]
  412c79:	jno    0x412ca8
  412c7b:	sub    BYTE PTR [edi+0x4],cl
  412c7e:	rcr    dh,0x0
	...
  412ca5:	add    BYTE PTR [eax],al
  412ca7:	add    ah,cl
  412ca9:	xchg   esi,eax
  412caa:	(bad)  
  412cab:	push   DWORD PTR [edx]
  412cad:	or     ecx,DWORD PTR [ebp-0x2a4f9bb]
  412cb3:	jne    0x412cbf
  412cb5:	hlt    
  412cb6:	jae    0x412ca4
  412cb8:	fstp   QWORD PTR [ecx]
  412cba:	mov    esp,0xb05732e
  412cbf:	shl    BYTE PTR [esi],0x6d
  412cc2:	mov    eax,DWORD PTR [ebp-0x3e]
  412cc5:	pop    edx
  412cc6:	push   0x6a054800
  412ccb:	pop    es
  412ccc:	pop    eax
  412ccd:	add    eax,0xf3c675ff
  412cd2:	adc    eax,eax
  412cd4:	or     al,0x46
  412cd6:	dec    BYTE PTR [edx]
  412cd8:	mov    ds:0x7ff545e,al
  412cdd:	jmp    0x412cc5
  412cdf:	call   0x8a3f207f
  412ce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ce5:	(bad)  
  412ce6:	mov    eax,DWORD PTR [ebp-0x7e]
  412ce9:	pop    edx
  412cea:	std    
  412ceb:	jne    0x412d5b
  412ced:	pop    esp
  412cee:	(bad)  
  412cef:	imul   esp,DWORD PTR [ebp-0x80101a4],0x6215fdce
  412cf9:	and    BYTE PTR [ecx+0x0],al
  412cfc:	cdq    
  412cfd:	retf   0x2972
  412d00:	mov    edx,0xfcef000a
  412d05:	bnd jae 0x412d10
  412d08:	dec    edx
  412d09:	cmp    al,BYTE PTR [esi-0x1]
	...
  412d34:	dec    ebp
  412d35:	repz je 0x412d40
  412d38:	jge    0x412db3
  412d3a:	add    bh,bh
  412d3c:	test   DWORD PTR [ecx],0xf3a458e8
  412d42:	std    
  412d43:	inc    DWORD PTR [edi]
  412d45:	in     eax,0xfd
  412d47:	jne    0x412ce7
  412d49:	lock jae 0x412d54
  412d4c:	dec    ebx
  412d4d:	dec    eax
  412d4e:	int    0x45
  412d50:	dec    esp
  412d51:	aas    
  412d52:	js     0x412dc8
  412d54:	daa    
  412d55:	pop    eax
  412d56:	test   BYTE PTR [eax+0x3c],cl
  412d59:	scas   eax,DWORD PTR es:[edi]
  412d5a:	js     0x412dd0
  412d5c:	das    
  412d5d:	mov    bh,0xe
  412d5f:	les    ebx,FWORD PTR [ebp+0x21]
  412d62:	add    al,0x6a
  412d64:	dec    ebx
  412d65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d66:	out    dx,al
  412d67:	jmp    0x412d85
  412d69:	jne    0x412db5
  412d6b:	sub    eax,0x7477608a
  412d70:	sbb    ecx,DWORD PTR [eax-0x78fbb720]
  412d76:	test   dh,al
  412d78:	pop    ebx
  412d79:	out    dx,eax
  412d7a:	(bad)  
  412d7b:	repz enter 0x6e74,0xff
  412d80:	cmp    eax,0xe4fd6be5
  412d85:	out    0x6a,al
  412d87:	mov    ah,0xdd
  412d89:	into   
  412d8a:	js     0x412df5
  412d8c:	dec    ebx
  412d8d:	xlat   BYTE PTR ds:[ebx]
  412d8e:	out    dx,al
  412d8f:	test   esp,0xa2d6e74
  412d95:	pusha  
  412d96:	ja     0x412e0c
	...
  412dc0:	mov    edi,0xa307ef2e
  412dc5:	stc    
  412dc6:	sar    esi,0xac
  412dc9:	jle    0x412da3
  412dcb:	enter  0x5b89,0x2
  412dcf:	push   ebp
  412dd0:	sar    bl,1
  412dd2:	add    bl,0x77
  412dd5:	push   cs
  412dd6:	jns    0x412dd6
  412dd8:	mov    esi,0x844f76a4
  412ddd:	in     al,dx
  412dde:	push   es
  412ddf:	push   DWORD PTR [esi]
  412de1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412de2:	sub    DWORD PTR [ecx+0x4b],eax
  412de5:	or     ch,bh
  412de7:	sbb    cl,BYTE PTR [ebx+0x60]
  412dea:	or     eax,eax
  412dec:	push   esp
  412ded:	or     DWORD PTR [eax+ebp*4+0x4b],ebp
  412df1:	or     ecx,ebp
  412df3:	inc    eax
  412df4:	(bad)  
  412df6:	call   0xa64a78fe
  412dfb:	mov    esi,0x3ed6d38
  412e00:	dec    ebx
  412e01:	fucomip st,st(0)
  412e03:	in     eax,dx
  412e04:	xor    al,0xe3
  412e06:	call   0x23bf5af8
  412e0b:	jo     0x412da1
  412e0d:	jle    0x412e7a
  412e0f:	outs   dx,DWORD PTR ds:[esi]
  412e10:	adc    eax,0x15d39d6d
  412e15:	not    DWORD PTR [eax-0x7f926888]
  412e1b:	(bad)  
  412e1c:	popa   
  412e1d:	or     ecx,ebp
  412e1f:	or     al,0xb
  412e21:	mul    bl
  412e23:	push   0x0
	...
  412e49:	add    BYTE PTR [eax],al
  412e4b:	add    BYTE PTR [edx+0xa],bh
  412e4e:	jmp    0xc0f59156
  412e53:	ret    0x6be4
  412e56:	fild   DWORD PTR [edi]
  412e58:	repz stc 
  412e5a:	lods   al,BYTE PTR ds:[esi]
  412e5b:	js     0x412e32
  412e5d:	fldenv [ecx+0x53]
  412e60:	mov    edi,0xc5705486
  412e65:	ins    BYTE PTR es:[edi],dx
  412e66:	cwde   
  412e67:	aad    0xa4
  412e69:	jmp    0x82f6a71a
  412e6e:	imul   edx,DWORD PTR [edi-0x4b],0x6c
  412e72:	sub    eax,0x25c1de6b
  412e77:	js     0x412eab
  412e79:	or     DWORD PTR [ecx-0x1735f2be],edx
  412e7f:	js     0x412e58
  412e81:	dec    ebp
  412e82:	adc    eax,0xbb6c8578
  412e87:	shl    DWORD PTR [ebx],0xca
  412e8a:	call   0x1ecfa
  412e8f:	cmc    
  412e90:	hlt    
  412e91:	add    BYTE PTR [ecx+edi*8+0x53fe6af4],0x47
  412e99:	loope  0x412e60
  412e9b:	mov    gs,WORD PTR es:[ebp+edi*8-0x64]
  412ea0:	repz jb 0x412ea1
  412ea3:	into   
  412ea4:	mov    esp,0x6104635
  412ea9:	ins    BYTE PTR es:[edi],dx
  412eaa:	out    0x61,al
  412eac:	add    BYTE PTR [ebx-0x2],ch
  412eaf:	pusha  
	...
  412ed8:	retf   0xf65f
  412edb:	scas   al,BYTE PTR es:[edi]
  412edc:	pushf  
  412edd:	loop   0x412ede
  412edf:	adc    BYTE PTR [eax-0x6216bf3d],dl
  412ee5:	mov    ch,0xdb
  412ee7:	sahf   
  412ee8:	xchg   esp,eax
  412ee9:	imul   edi,esi,0xffffffd4
  412eec:	(bad)  
  412eed:	and    BYTE PTR [ecx-0x17],al
  412ef0:	jo     0x412ee4
  412ef2:	dec    edx
  412ef3:	jle    0x412f71
  412ef5:	add    DWORD PTR [ecx+eax*4+0x3fe6b5c],0xaecfe14f
  412f00:	pop    es
  412f01:	ins    BYTE PTR es:[edi],dx
  412f02:	std    
  412f03:	xchg   esp,eax
  412f04:	jae    0x412f79
  412f06:	(bad)  
  412f07:	push   esi
  412f08:	push   esp
  412f09:	xor    eax,0x6b8e0046
  412f0e:	out    0xa5,al
  412f10:	xchg   ecx,eax
  412f11:	push   0xfffffffe
  412f13:	jo     0x412edf
  412f15:	div    BYTE PTR ds:0xe234
  412f1a:	inc    eax
  412f1c:	sti    
  412f1d:	ret    0xe940
  412f20:	adc    eax,0x1c16dbb5
  412f25:	imul   edi,esi,0xffffffdc
  412f28:	into   
  412f29:	and    BYTE PTR [ecx-0x17],al
  412f2c:	lock sub eax,0xf445004b
  412f32:	xchg   DWORD PTR [ebp-0x223be],eax
  412f38:	loope  0x412eeb
  412f3a:	jmp    0x0:0xf7
	...
  412f61:	add    BYTE PTR [eax],al
  412f63:	add    BYTE PTR [ebp-0xe],dh
  412f66:	(bad)  
  412f67:	jae    0x412f8a
  412f69:	pop    ebp
  412f6a:	(bad)  
  412f6b:	inc    DWORD PTR [ebp+0x6a75fdb5]
  412f71:	fist   WORD PTR [ecx-0x20beabc]
  412f77:	mov    ch,0x2
  412f79:	fdiv   st(5),st
  412f7b:	push   ebp
  412f7d:	jns    0x412f85
  412f7f:	call   0x3eda81
  412f84:	cmc    
  412f85:	mov    ecx,0xf3e5f7ea
  412f8a:	std    
  412f8b:	jne    0x412fa7
  412f8d:	(bad)  
  412f8f:	inc    esp
  412f90:	mov    ch,0xf3
  412f92:	std    
  412f93:	mov    ch,0xca
  412f95:	(bad)  
  412f97:	inc    ebp
  412f99:	jns    0x412fa1
  412f9b:	call   0x3eda59
  412fa0:	jne    0x412f5b
  412fa2:	loop   0x412f9b
  412fa4:	jne    0x412f99
  412fa6:	std    
  412fa7:	jne    0x412f83
  412fa9:	fidivr WORD PTR [ebx-0x20c8abc]
  412faf:	mov    ch,0x82
  412fb1:	(bad)  
  412fb3:	call   DWORD PTR ds:0xd5e80679
  412fb9:	stos   BYTE PTR es:[edi],al
  412fba:	std    
  412fbb:	push   DWORD PTR [ebp-0x47]
  412fbe:	(bad)  
  412fc0:	jne    0x412fb5
  412fc2:	std    
  412fc3:	jne    0x412f6f
  412fc5:	fidivr WORD PTR [esi-0x2]
	...
  412ff0:	gs repz std 
  412ff3:	mov    ch,0x56
  412ff5:	(bad)  
  412ff7:	dec    DWORD PTR [ebx+0x8]
  412ffa:	stos   BYTE PTR es:[edi],al
  412ffb:	inc    esi
  412ffc:	test   bl,bh
  412ffe:	jne    0x412fb4
  413000:	jnp    0x41306d
  413002:	je     0x413002
  413004:	arpl   ax,ax
  413006:	mov    ebp,0xae736cfe
  41300b:	jmp    0x413069
  41300d:	pop    ebx
  41300e:	je     0x412ff7
  413010:	mov    dh,0x1b
  413012:	jne    0x413012
  413014:	push   esp
  413015:	xchg   ebp,eax
  413016:	imul   esi,esi,0x4c
  413019:	push   ebx
  41301a:	imul   ecx,DWORD PTR [ecx-0x18bc474],0xfffffff6
  413021:	cmp    ebp,DWORD PTR [esi+edi*8+0x34]
  413025:	pop    eax
  413026:	hlt    
  413027:	inc    esi
  413028:	sub    al,0xb3
  41302a:	je     0x412fe0
  41302c:	sub    esi,DWORD PTR [ebx+0xc33fe74]
  413032:	mov    ebp,0xbe8b14fe
  413037:	mul    DWORD PTR [edx]
  413039:	add    BYTE PTR [esi-0x2],dh
  41303c:	add    al,0x7b
  41303e:	out    dx,al
  41303f:	sti    
  413040:	repz rcr DWORD PTR [edx],0x0
  413044:	dec    ebx
  413045:	mov    ecx,0xd4b0741
  41304a:	mov    ebx,ebp
  41304c:	enter  0x77a3,0x69
  413050:	dec    ebx
  413051:	push   esi
  413052:	leave  
  413053:	inc    BYTE PTR [eax]
	...
  413079:	add    BYTE PTR [eax],al
  41307b:	add    BYTE PTR [esi+0x78],bl
  41307e:	push   0xffffff85
  413080:	xchg   ebx,edx
  413082:	je     0x41300c
  413084:	push   cs
  413085:	mov    esp,0xa104a1eb
  41308a:	add    bh,bh
  41308c:	ds js  0x4130f9
  41308f:	pop    es
  413090:	lods   eax,DWORD PTR ds:[esi]
  413091:	xor    dh,BYTE PTR [ebp-0x2]
  413094:	push   ds
  413095:	sbb    al,0x75
  413097:	je     0x4130ec
  413099:	or     DWORD PTR [ecx],edx
  41309b:	mov    bl,0x8
  41309d:	push   0x1d
  41309f:	dec    ebx
  4130a0:	mov    al,BYTE PTR [ecx+ebp*8]
  4130a3:	into   
  4130a4:	rcr    DWORD PTR [ecx+ebp*2+0x40],1
  4130a8:	js     0x413113
  4130aa:	jnp    0x4130b3
  4130ac:	arpl   WORD PTR [ebx],sp
  4130ae:	loope  0x4130b3
  4130b0:	dec    ebx
  4130b1:	(bad)  
  4130b2:	sub    bh,ch
  4130b4:	dec    eax
  4130b5:	inc    eax
  4130b6:	sub    cl,BYTE PTR [eax]
  4130b8:	dec    ebx
  4130b9:	push   0x5b
  4130bb:	adc    al,0x63
  4130bd:	adc    eax,DWORD PTR [ecx]
  4130bf:	add    al,0x4b
  4130c1:	(bad)  
  4130c2:	test   al,0xee
  4130c4:	dec    eax
  4130c5:	push   edx
  4130c6:	stos   BYTE PTR es:[edi],al
  4130c7:	pop    es
  4130c8:	dec    ebx
  4130c9:	xchg   edx,eax
  4130ca:	sub    edi,DWORD PTR [ebp+esi*1-0x21]
  4130ce:	shr    BYTE PTR [ebx+0x57],0xd0
  4130d2:	mov    ch,0x74
  4130d4:	ror    esi,cl
  4130d6:	lods   al,BYTE PTR ds:[esi]
  4130d7:	je     0x413070
  4130d9:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4130db:	out    dx,al
  4130dc:	sbb    al,0x69
  4130de:	adc    edx,DWORD PTR [eax+eax*1]
	...
  413105:	add    BYTE PTR [eax],al
  413107:	add    BYTE PTR [ebx],ah
  413109:	pop    eax
  41310a:	cmp    dh,BYTE PTR [ebp+0x5]
  41310d:	adc    eax,0x9241efa9
  413112:	sub    esi,DWORD PTR [eax+0x62]
  413115:	or     DWORD PTR [esi+edi*4-0x8],ebp
  413119:	mov    ecx,0x71e0ee75
  41311e:	mov    edx,0xf168dde7
  413123:	inc    ebx
  413124:	pop    eax
  413125:	das    
  413126:	rol    DWORD PTR [ebx],1
  413128:	cmp    edi,DWORD PTR [eax-0x6a]
  41312b:	je     0x41316c
  41312d:	adc    DWORD PTR [ecx-0x2d],eax
  413130:	or     DWORD PTR [eax+0x45],ebp
  413133:	je     0x413174
  413135:	adc    eax,0x7144ee3e
  41313a:	dec    DWORD PTR [ebp+0x2efe678b]
  413140:	lods   eax,DWORD PTR ds:[esi]
  413141:	pop    esp
  413142:	(bad)  
  413143:	pushf  
  413144:	sbb    al,0x67
  413146:	je     0x413139
  413148:	and    ch,dh
  41314a:	inc    edx
  41314b:	push   ss
  41314c:	jmp    DWORD PTR [esi+0x74]
  41314f:	or     eax,0x645adf0
  413154:	call   DWORD PTR [eax-0x3f]
  413157:	in     eax,dx
  413158:	dec    eax
  413159:	mov    esi,0x4ccb058a
  41315e:	rcl    DWORD PTR [edi-0x2ef42329],cl
  413164:	pusha  
  413165:	sar    esi,cl
  413167:	fimul  WORD PTR [eax+ebp*4+0x74]
  41316b:	in     al,dx
	...
  413194:	sbb    dl,BYTE PTR [ecx-0x3f]
  413197:	fisttp QWORD PTR [eax-0x6a]
  41319a:	inc    esp
  41319b:	mov    ecx,0xed74671f
  4131a0:	nop
  4131a1:	add    DWORD PTR [esi+esi*4-0x68],ecx
  4131a5:	adc    eax,eax
  4131a7:	faddp  st(4),st
  4131a9:	inc    edi
  4131aa:	(bad)  
  4131ab:	call   0x9db599f8
  4131b0:	outs   dx,DWORD PTR ds:[esi]
  4131b1:	lea    eax,[ebp-0x6a]
  4131b4:	js     0x413147
  4131b6:	inc    esp
  4131b7:	jge    0x413231
  4131b9:	(bad)  
  4131bb:	xchg   dl,dh
  4131bd:	jae    0x4131bd
  4131bf:	hlt    
  4131c0:	pusha  
  4131c1:	jo     0x41316d
  4131c3:	das    
  4131c4:	pop    eax
  4131c5:	addr16 mov dh,ah
  4131c8:	jl     0x41323b
  4131ca:	mov    ds:0x680948e9,al
  4131cf:	pop    esp
  4131d0:	add    cl,cl
  4131d2:	(bad)  
  4131d3:	mov    esi,0xe9176020
  4131d8:	dec    eax
  4131d9:	adc    al,0xc0
  4131db:	add    bh,dh
  4131dd:	adc    cl,ch
  4131df:	cwde   
  4131e0:	mov    ds:0x628b000b,al
  4131e5:	inc    ebp
  4131e6:	sti    
  4131e7:	inc    edi
  4131e8:	repz or ebp,eax
  4131eb:	cmp    DWORD PTR [ebp+0x3203000b],edx
  4131f1:	out    0x73,al
  4131f3:	call   0x41893ac2
	...
  413220:	jb     0x413263
  413222:	out    0xd3,al
  413224:	push   0xb
  413226:	add    BYTE PTR [ebx],cl
  413228:	and    ah,BYTE PTR [edx+0x0]
  41322b:	jmp    0x413211
  41322d:	in     eax,0xe
  41322f:	mov    BYTE PTR [edi-0x79ba7812],dh
  413235:	inc    ebx
  413236:	or     eax,0x560d2348
  41323b:	call   0x414518
  413240:	sub    ebx,ecx
  413242:	jae    0x413246
  413244:	sbb    DWORD PTR [edx],edi
  413246:	mov    eax,esi
  413248:	call   0xfcc3:0x3241480a
  41324f:	push   ss
  413250:	xor    cl,BYTE PTR [ebx]
  413252:	add    esi,eax
  413254:	fwait
  413255:	popa   
  413256:	fisubr DWORD PTR [eax+0x1f]
  413259:	mov    ds:0xc544003f,eax
  41325e:	xchg   esi,eax
  41325f:	sbb    dl,dh
  413261:	or     cl,BYTE PTR [ebx]
  413263:	shl    bh,0xc
  413266:	jmp    0x4132a3
  413268:	js     0x413264
  41326a:	xchg   DWORD PTR [ebp-0x3b],edx
  41326d:	in     eax,0x43
  41326f:	fsubr  DWORD PTR [ecx+0x51]
  413272:	loop   0x41323a
  413274:	loop   0x413280
  413276:	mov    eax,DWORD PTR [ebp-0x76]
  413279:	sar    dh,1
  41327b:	dec    DWORD PTR [ebx-0x41]
  41327e:	neg    ebx
  413280:	mov    esp,0xfe5a3d
	...
  4132a9:	add    BYTE PTR [eax],al
  4132ab:	add    BYTE PTR [esi],bh
  4132ad:	pop    eax
  4132ae:	pop    edx
  4132af:	xchg   edx,eax
  4132b0:	lods   eax,DWORD PTR ds:[esi]
  4132b1:	daa    
  4132b2:	jb     0x41323d
  4132b4:	(bad)  
  4132b5:	sar    BYTE PTR [ebp+0x44],cl
  4132b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132b9:	call   0x273fbcd0
  4132be:	jle    0x413304
  4132c0:	jae    0x41329a
  4132c2:	adc    al,BYTE PTR [eax-0x7afe8fbb]
  4132c8:	pop    ss
  4132c9:	pop    ss
  4132ca:	jb     0x4132ca
  4132cc:	je     0x4132b3
  4132ce:	pop    esi
  4132cf:	out    0xaa,eax
  4132d1:	lods   eax,DWORD PTR ds:[esi]
  4132d2:	jno    0x4132d2
  4132d4:	(bad)  
  4132d5:	mov    ch,0x72
  4132d7:	dec    edi
  4132d8:	jae    0x413309
  4132da:	mov    esi,0x33b54fe
  4132df:	pop    esi
  4132e0:	xor    BYTE PTR [edx-0x14610001],0x5f
  4132e7:	(bad)  
  4132e8:	mov    dh,0x44
  4132ea:	pop    edx
  4132eb:	aam    0x82
  4132ed:	dec    edi
  4132ee:	jo     0x4132fa
  4132f0:	or     ebx,DWORD PTR [ebx+ebx*1]
  4132f3:	push   0xffc3372b
  4132f8:	mov    WORD PTR [eax-0x23],cs
  4132fb:	dec    eax
  4132fc:	adc    al,0xaf
  4132fe:	shl    DWORD PTR [edi+0x3d],cl
  413301:	mov    ds:0x706cffc3,al
  413306:	add    ch,bh
  413308:	mov    ebp,0x8a467307
  41330d:	jo     0x4132e1
  41330f:	inc    BYTE PTR [eax]
	...
  413335:	add    BYTE PTR [eax],al
  413337:	add    BYTE PTR [esi+0x58],dh
  41333a:	pop    edx
  41333b:	xor    DWORD PTR [ebx-0x21],0x2d82e770
  413342:	jno    0x413342
  413344:	add    cl,BYTE PTR [ecx]
  413346:	sub    edi,esp
  413348:	int3   
  413349:	mov    esp,0x4cc96071
  41334e:	push   esp
  41334f:	fidivr WORD PTR [edi+ebp*8+0x113f70a2]
  413356:	push   ecx
  413357:	in     eax,dx
  413358:	or     ah,BYTE PTR [esi+0x3d]
  41335b:	jnp    0x41336c
  41335d:	gs ret 0x9c0d
  413361:	fneni(8087 only) 
  413363:	pop    ebx
  413364:	out    dx,eax
  413365:	gs and eax,0x1e2a2271
  41336b:	test   DWORD PTR [ecx+esi*2+0x71],0x82657d71
  413373:	pcmpeqb mm3,mm3
  413376:	lock pop ebx
  413378:	(bad)  [ebp-0x3]
  41337b:	jo     0x413369
  41337d:	or     cl,ch
  41337f:	pusha  
  413380:	sahf   
  413381:	lock add ecx,ecx
  413384:	or     ecx,DWORD PTR [ecx]
  413386:	push   ecx
  413387:	fs add eax,0xbf70e8c8
  41338d:	adc    ecx,eax
  41338f:	es mov cl,0x64
  413392:	int    0x70
  413394:	mov    edi,0x44f6c565
  413399:	jno    0x4133d9
  41339b:	mov    BYTE PTR [eax],0x0
	...
  4133c2:	add    BYTE PTR [eax],al
  4133c4:	and    eax,0x48459f65
  4133c9:	or     DWORD PTR [edi*2+0x4bac8b20],edx
  4133d0:	adc    eax,0x8f7e9d65
  4133d5:	cmp    BYTE PTR gs:[ecx+0x77],dh
  4133d9:	adc    eax,0x714cf68e
  4133de:	sub    al,0x19
  4133e0:	dec    ebx
  4133e1:	or     edx,esi
  4133e3:	inc    ebx
  4133e4:	push   ebp
  4133e5:	mov    ?,edi
  4133e7:	test   al,0x49
  4133e9:	or     DWORD PTR [eax],eax
  4133eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133ec:	or     eax,0x48e8ff5d
  4133f1:	or     edi,eax
  4133f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133f4:	cmp    al,0x63
  4133f6:	push   es
  4133f7:	jmp    0xc3412344
  4133fc:	dec    eax
  4133fd:	out    dx,eax
  4133fe:	call   edx
  413400:	dec    eax
  413401:	xchg   esi,eax
  413402:	inc    esp
  413403:	xor    eax,0x3d849578
  413408:	and    esp,DWORD PTR [ebx-0x2]
  41340b:	cdq    
  41340c:	sbb    ebx,ebp
  41340e:	mul    DWORD PTR [esi]
  413410:	xchg   ebp,eax
  413411:	pusha  
  413412:	out    0xf7,eax
  413414:	arpl   WORD PTR [ecx],cx
  413416:	add    dl,ah
  413418:	or     al,bl
  41341a:	add    al,0x0
  41341c:	iret   
  41341d:	or     DWORD PTR [eax],eax
  41341f:	jmp    0xa868cfb4
  413424:	dec    eax
  413425:	fs je  0x41340d
	...
  413450:	add    BYTE PTR [ecx],ah
  413452:	dec    eax
  413453:	out    dx,al
  413454:	in     al,0xd3
  413456:	mov    bh,BYTE PTR [ecx-0x290c7236]
  41345c:	mov    ah,0x63
  41345e:	dec    edi
  41345f:	cmp    ebx,DWORD PTR [edi-0x5b31b7cf]
  413465:	xchg   ecx,eax
  413466:	test   BYTE PTR [ecx-0x2e019c4c],ah
  41346c:	xor    al,0xc8
  41346e:	(bad)  
  41346f:	mov    dh,0x1
  413471:	fs data16 repnz ror al,1
  413476:	jmp    DWORD PTR [ebp-0x6109c42e]
  41347c:	je     0x4134e1
  41347e:	je     0x413461
  413480:	mov    al,ds:0x648e468a
  413485:	xchg   ecx,eax
  413486:	test   BYTE PTR [eax],al
  413488:	jb     0x413466
  41348a:	std    
  41348b:	(bad)  
  41348c:	cmp    BYTE PTR ds:0x4e2a4468,cl
  413492:	(bad)  
  413493:	(bad)  
  413494:	pop    ds
  413495:	aad    0xf5
  413497:	jmp    DWORD PTR [ebp-0xc]
  41349a:	jae    0x4134a4
  41349c:	sbb    ch,BYTE PTR [ebp+eax*2-0x1]
  4134a0:	adc    eax,0x1dec83e6
  4134a5:	hlt    
  4134a6:	std    
  4134a7:	push   0xffffffa2
  4134a9:	aas    
  4134aa:	dec    ebx
  4134ab:	dec    eax
  4134ac:	repz pop es
  4134ae:	push   DWORD PTR [ebp-0x223c6]
	...
  4134dc:	bound  eax,QWORD PTR gs:[esi]
  4134df:	call   0x3e7fba
  4134e4:	sti    
  4134e5:	xchg   ecx,eax
  4134e6:	out    0xf7,al
  4134e8:	push   ebp
  4134e9:	hlt    
  4134ea:	mov    eax,DWORD PTR [ebp-0x223da]
  4134f0:	sar    BYTE PTR [edi],cl
  4134f2:	push   esp
  4134f3:	dec    eax
  4134f4:	mov    bl,0x7
  4134f6:	push   DWORD PTR [ebp-0x223c6]
  4134fc:	gs pusha 
  4134fe:	push   es
  4134ff:	call   0x3e813a
  413504:	mov    ebx,0x15f7e291
  413509:	hlt    
  41350a:	push   0x466c8a00
  41350f:	inc    ecx
  413510:	and    dh,ah
  413512:	mov    bl,0xd8
  413514:	(bad)  
  413516:	std    
  413517:	call   FWORD PTR [edi+0x65]
  41351a:	out    0x11,al
  41351c:	ins    DWORD PTR es:[edi],dx
  41351d:	repnz std 
  41351f:	mov    DWORD PTR [edi-0x1a000a1a],ebx
  413525:	xchg   DWORD PTR [ebx+0x6d834bf0],edi
  41352b:	dec    BYTE PTR [ebx-0x4]
  41352e:	fiadd  DWORD PTR [edx-0x18a8352]
  413534:	in     al,0x70
  413536:	mul    BYTE PTR [ecx-0x38]
  413539:	sbb    eax,0xf3d4f65b
  41353e:	add    dh,BYTE PTR [eax+eax*1+0x0]
	...
  413566:	add    BYTE PTR [eax],al
  413568:	jb     0x4135a2
  41356a:	add    al,BYTE PTR [eax]
  41356c:	mov    ah,0x82
  41356e:	ins    DWORD PTR es:[edi],dx
  41356f:	je     0x4135cc
  413571:	enter  0x3fd6,0xb4
  413575:	shr    DWORD PTR [ebp-0x4c],cl
  413578:	mov    ebx,0xa4fe6e23
  41357d:	popf   
  41357e:	adc    ch,al
  413580:	repz mov al,0x6d
  413583:	(bad)  
  413584:	xchg   esp,eax
  413585:	fstp   QWORD PTR [esi-0xa]
  413588:	mov    WORD PTR [ebx],gs
  41358a:	outs   dx,BYTE PTR ds:[esi]
  41358b:	je     0x4135e8
  41358d:	clc    
  41358e:	mov    BYTE PTR [edi],bh
  413590:	jl     0x41358d
  413592:	ins    DWORD PTR es:[edi],dx
  413593:	mov    ah,0x63
  413595:	sti    
  413596:	ins    DWORD PTR es:[edi],dx
  413597:	(bad)  
  413598:	ins    BYTE PTR es:[edi],dx
  413599:	in     eax,0x12
  41359b:	call   0xfeaee677
  4135a0:	pop    esp
  4135a1:	and    eax,0x7354f64f
  4135a6:	ins    BYTE PTR es:[edi],dx
  4135a7:	mov    ah,0x67
  4135a9:	inc    ebx
  4135aa:	ins    BYTE PTR es:[edi],dx
  4135ab:	inc    BYTE PTR [ebp+edi*4+0x13]
  4135af:	call   0xfeae6643
  4135b4:	xor    al,0x7d
  4135b6:	arpl   si,si
  4135b8:	sub    al,0x4b
  4135ba:	ins    BYTE PTR es:[edi],dx
  4135bb:	je     0x4135f8
  4135bd:	cmp    cl,bl
  4135bf:	aas    
  4135c0:	sbb    al,0x9b
  4135c2:	ins    BYTE PTR es:[edi],dx
  4135c3:	je     0x413600
  4135c5:	mov    bl,0xb6
  4135c7:	xlat   BYTE PTR ds:[ebx]
  4135c8:	adc    al,0x9
  4135ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135cb:	ins    DWORD PTR es:[edi],dx
	...
  4135f4:	add    eax,0x7a5bf0dc
  4135f9:	arpl   WORD PTR [ebp-0x4f640a93],dx
  4135ff:	jne    0x4135ee
  413601:	popa   
  413602:	nop
  413603:	loope  0x41358e
  413605:	bound  edi,QWORD PTR [ebp+0x6d]
  413608:	xchg   edi,eax
  413609:	pop    eax
  41360a:	jge    0x413679
  41360c:	aad    0x70
  41360e:	adc    cl,al
  413610:	int    0x61
  413612:	gs mov bh,0xb0
  413615:	pop    ecx
  413616:	pop    ebp
  413617:	ins    DWORD PTR es:[edi],dx
  413618:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413619:	shr    DWORD PTR [ecx-0x6c9e4a94],cl
  41361f:	pop    esp
  413620:	mov    ch,0x61
  413622:	inc    ebp
  413623:	pop    esp
  413624:	or     al,dh
  413626:	cmp    eax,0x4c9b9d6d
  41362b:	jne    0x4135c2
  41362d:	popa   
  41362e:	inc    eax
  41362f:	xor    eax,0x6d256208
  413634:	mov    edi,0x7d6d1568
  413639:	jo     0x4135ff
  41363b:	shl    BYTE PTR [ebp+0x61],0xd
  41363f:	(bad)  
  413640:	je     0x4136b1
  413642:	mov    ch,0x6d
  413644:	gs popa 
  413646:	std    
  413647:	mul    BYTE PTR [eax+0x70]
  41364a:	jle    0x413662
  41364c:	dec    ebx
  41364d:	or     DWORD PTR [eax],esp
  41364f:	inc    edx
  413650:	inc    eax
  413651:	or     DWORD PTR [ecx+edi*2],edi
  413654:	xor    BYTE PTR [ebp+0x6fa4],cl
	...
  41367e:	add    BYTE PTR [eax],al
  413680:	mov    dl,0x9
  413682:	inc    ebx
  413683:	mov    ecx,0x5be0d735
  413688:	outs   dx,BYTE PTR ds:[esi]
  413689:	leave  
  41368a:	lds    ebp,FWORD PTR [ebx+edx*8-0x3a]
  41368e:	mov    esp,0x11976c
  413693:	inc    ecx
  413694:	rol    DWORD PTR ds:[eax-0x17],1
  413698:	lahf   
  413699:	adc    eax,0x6109d046
  41369e:	out    0x95,al
  4136a0:	ins    DWORD PTR es:[edi],dx
  4136a1:	pop    edi
  4136a2:	(bad)  
  4136a3:	xchg   esi,eax
  4136a4:	std    
  4136a5:	or     BYTE PTR [eax-0xa],ch
  4136a8:	mov    al,0xc9
  4136aa:	call   DWORD PTR [eax]
  4136ac:	dec    ecx
  4136ad:	or     DWORD PTR [eax],eax
  4136af:	imul   eax,DWORD PTR [eax+0x6776fc6a],0x5f6d745f
  4136b9:	aad    0x7
  4136bb:	push   ecx
  4136bc:	cdq    
  4136bd:	and    bh,bh
  4136bf:	pop    esi
  4136c0:	or     DWORD PTR [edx+0x3],0xeb939de9
  4136c7:	push   0x4
  4136c9:	fs imul ebp,ecx,0xb4fed482
  4136d0:	mov    al,ds:0x27f6f468
  4136d5:	pop    edi
  4136d6:	mov    BYTE PTR [esp+ebx*1+0x27e8ffe8],ah
  4136dd:	sahf   
  4136de:	addr16 pop eax
  4136e1:	leave  
  4136e2:	inc    DWORD PTR [eax+0x0]
	...
  41370c:	popa   
  41370d:	enter  0xe940,0xdf
  413711:	aam    0x7
  413713:	adc    DWORD PTR [ebp-0xf010119],esi
  413719:	aam    0xfb
  41371b:	neg    BYTE PTR [esi+0x8]
  41371e:	call   0xfea0bffa
  413723:	mov    al,0x8d
  413725:	or     al,0x0
  413727:	xor    al,0xbc
  413729:	je     0x4136ab
  41372b:	lods   eax,DWORD PTR ds:[esi]
  41372c:	lahf   
  41372d:	push   edi
  41372e:	dec    dh
  413730:	mov    dl,0xc5
  413732:	sti    
  413733:	add    BYTE PTR [edx-0xc],al
  413736:	jae    0x413744
  413738:	fstp   QWORD PTR [ecx+0x6]
  41373b:	call   0x412ffe
  413740:	sub    esp,ecx
  413742:	or     eax,0x60785
  413747:	add    BYTE PTR [ebp-0x1dff09b7],ah
  41374d:	or     eax,DWORD PTR [eax]
  41374f:	(bad)  
  413750:	daa    
  413751:	fscale 
  413753:	pop    es
  413754:	repnz or ebp,DWORD PTR [edx+0x0]
  413758:	cmp    BYTE PTR ds:0x548006a,al
  41375e:	lea    eax,[ebp+0x56]
  413761:	xor    eax,0xdc26858b
  413766:	std    
  413767:	inc    DWORD PTR [edx]
  413769:	repz jae 0x413764
  41376c:	sbb    eax,0xe8fa5a
	...
  413795:	add    BYTE PTR [eax],al
  413797:	add    BYTE PTR [ecx+edi*8],ch
  41379a:	(bad)  
  41379b:	call   FWORD PTR [ecx-0x4fa8d35]
  4137a1:	int3   
  4137a2:	(bad)  
  4137a3:	jmp    DWORD PTR [edx-0x1cd74abd]
  4137a9:	or     edi,edi
  4137ab:	jne    0x41382b
  4137ad:	ret    
  4137ae:	iret   
  4137af:	inc    ebp
  4137b0:	pop    ebp
  4137b1:	hlt    
  4137b2:	dec    esi
  4137b3:	mov    esi,DWORD PTR [edx]
  4137b5:	loop   0x41373a
  4137b7:	hlt    
  4137b8:	push   ebp
  4137b9:	hlt    
  4137ba:	std    
  4137bb:	push   eax
  4137bc:	rol    bl,0xbf
  4137bf:	inc    ebp
  4137c0:	pop    ebp
  4137c1:	xacquire xchg DWORD PTR [ebp-0x223c6],eax
  4137c8:	dec    edx
  4137c9:	cld    
  4137ca:	inc    ecx
  4137cb:	jmp    FWORD PTR ds:0xd267fe3d
  4137d1:	mov    ds:0x374b003f,al
  4137d6:	scas   eax,DWORD PTR es:[edi]
  4137d7:	xlat   BYTE PTR ds:[ebx]
  4137d8:	xor    al,0x50
  4137da:	imul   edi,esi,0x195a589e
  4137e0:	xchg   BYTE PTR [edi-0x5f317797],bl
  4137e6:	jno    0x4137e6
  4137e8:	or     al,0xcb
  4137ea:	add    ebp,DWORD PTR [eax-0x44]
  4137ed:	sbb    ch,al
  4137ef:	(bad)  
  4137f0:	std    
  4137f1:	mov    ch,0x4a
  4137f3:	div    ah
  4137f5:	ja     0x413860
  4137f7:	je     0x41383c
  4137f9:	mov    BYTE PTR [ecx+0x43],ch
	...
  413824:	in     al,0x87
  413826:	jnp    0x4137ac
  413828:	out    dx,eax
  413829:	xlat   BYTE PTR ds:[ebx]
  41382a:	imul   edi,esi,0xcbda7061
  413830:	xor    DWORD PTR [ecx],0x4
  413833:	(bad)  
  413834:	dec    al
  413836:	jno    0x413836
  413838:	mov    esp,0xa307efbf
  41383d:	int3   
  41383e:	mov    esi,0x7fe9acfe
  413843:	out    0x9c,eax
  413845:	(bad)  
  413846:	imul   ecx,DWORD PTR [esi+eax*8-0x6b018e04],0x3e4da80
  413851:	mov    cl,0x2
  413853:	(bad)  
  413854:	mov    esi,0x7cfe71c8
  413859:	(bad)  
  41385a:	out    dx,eax
  41385b:	pop    es
  41385c:	arpl   WORD PTR [edi+edi*4],bp
  41385f:	(bad)  
  413860:	ins    BYTE PTR es:[edi],dx
  413861:	jmp    0x79e1be5
  413866:	push   0x69
  413868:	dec    ebx
  413869:	js     0x4138d7
  41386b:	inc    edi
  41386c:	or     dh,BYTE PTR [eax+0x69]
  41386f:	mov    ah,0x73
  413871:	push   edi
  413872:	push   0x5c0944fe
  413877:	cld    
  413878:	and    al,0xb0
  41387a:	and    al,0x69
  41387c:	xor    eax,0x35646b90
  413881:	pop    esi
  413882:	int    0x77
  413884:	iret   
  413885:	cmp    BYTE PTR [ebp+0x69],bh
	...
  4138af:	add    BYTE PTR ds:0x821650b9,bl
  4138b5:	enter  0x68e8,0xd7
  4138b9:	inc    eax
  4138ba:	mov    ch,0x69
  4138bc:	add    eax,0xe4fc1b5e
  4138c1:	(bad)  
  4138c2:	and    al,0x69
  4138c4:	cmc    
  4138c5:	(bad)  
  4138c6:	imul   edx,DWORD PTR [eax-0xb],0x5d
  4138ca:	lea    eax,[ebp+0x697d58a7]
  4138d0:	fisttp QWORD PTR [eax]
  4138d2:	cmc    
  4138d3:	fmul   st(1),st
  4138d5:	fwait
  4138d6:	test   BYTE PTR [ecx-0x33],dh
  4138d9:	pop    ebp
  4138da:	call   0xa3cb63ce
  4138df:	pop    esp
  4138e0:	mov    ch,0x5d
  4138e2:	pop    ebp
  4138e3:	add    al,0x3f
  4138e5:	rol    al,0x3
  4138e8:	dec    ebx
  4138e9:	outs   dx,BYTE PTR ds:[esi]
  4138ea:	mov    gs,WORD PTR [ecx+0x1f]
  4138ed:	stc    
  4138ee:	push   eax
  4138ef:	cmp    BYTE PTR [edi+0x5e],bl
  4138f2:	cmp    eax,0x3d58df69
  4138f7:	imul   ecx,DWORD PTR [ebp+0x7313b35d],0x7d68e728
  413901:	pop    ebp
  413902:	push   ebx
  413903:	pop    eax
  413904:	jge    0x413963
  413906:	adc    eax,0xf8f769
  41390b:	push   ss
  41390c:	and    eax,0x9769055e
  413911:	jo     0x413908
  413913:	push   0x0
	...
  41393c:	push   ebp
  41393d:	pop    ebp
  41393e:	(bad)  
  41393f:	jnp    0x413979
  413941:	jno    0x413946
  413943:	scas   eax,DWORD PTR es:[edi]
  413944:	mov    bl,0x5b
  413946:	(bad)  
  413947:	pushf  
  413948:	test   BYTE PTR [ebx-0x2],dl
  41394b:	fisub  WORD PTR [ebx-0x5c211c6b]
  413951:	pop    ebx
  413952:	(bad)  
  413953:	push   esp
  413954:	aas    
  413955:	jno    0x41391a
  413957:	add    al,0xb2
  413959:	pop    ebx
  41395a:	(bad)  
  41395b:	je     0x413905
  41395d:	push   ebx
  41395e:	(bad)  
  41395f:	mov    dh,0xa3
  413961:	aad    0xf
  413963:	shr    DWORD PTR [esi+0x1d],0xff
  413967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413968:	(bad)  
  413969:	popf   
  41396a:	iret   
  41396b:	xchg   esi,eax
  41396c:	arpl   WORD PTR [ebx-0x1],bx
  41396f:	sbb    al,0x28
  413971:	icebp  
  413972:	add    cl,ch
  413974:	sbb    DWORD PTR [esi+0x7138fcfe],0x69
  41397b:	mov    esp,0x3cfe5b63
  413980:	js     0x4139d5
  413982:	(bad)  
  413983:	outs   dx,BYTE PTR ds:[esi]
  413984:	xor    edx,DWORD PTR [ebp+0x5b335ed3]
  41398a:	(bad)  
  41398b:	aam    0x58
  41398d:	jno    0x41391a
  41398f:	adc    al,0x22
  413991:	pop    ebx
  413992:	(bad)  
  413993:	aam    0x38
  413995:	pop    esp
  413996:	mov    ah,0x21
  413998:	sbb    ebx,DWORD PTR [ebx-0x2]
  41399b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41399d:	add    al,0xe8
  41399f:	add    DWORD PTR [eax],eax
	...
  4139c5:	add    BYTE PTR [eax],al
  4139c7:	add    BYTE PTR [ecx],ah
  4139c9:	pop    ebx
  4139ca:	(bad)  
  4139cb:	cs mov ch,0x34
  4139ce:	mul    BYTE PTR [esi]
  4139d0:	repz arpl WORD PTR [eax-0x1a51c57],si
  4139d7:	pop    esp
  4139d8:	clc    
  4139d9:	push   edx
  4139da:	dec    BYTE PTR [esi]
  4139dc:	add    BYTE PTR [esi-0xebaffc1],ah
  4139e2:	std    
  4139e3:	mov    ch,0x46
  4139e5:	fscale 
  4139e7:	dec    DWORD PTR [edx-0x73]
  4139ea:	push   DWORD PTR ds:0x1de8b3e4
  4139f1:	in     al,0xfd
  4139f3:	call   0x3e7faa
  4139f8:	adc    eax,0x15f7e29a
  4139fd:	in     al,0xe6
  4139ff:	test   DWORD PTR [edx-0x1c],esi
  413a02:	std    
  413a03:	call   FWORD PTR [edi-0x2a000a1b]
  413a09:	mov    esp,0xe3b54078
  413a0e:	std    
  413a0f:	mov    ch,0xbe
  413a11:	jmp    0x413a10
  413a13:	(bad)  
  413a14:	fidiv  DWORD PTR [ebx]
  413a16:	notrack call ebp
  413a19:	jecxz  0x413a5e
  413a1b:	clc    
  413a1c:	retf   
  413a1d:	out    dx,al
  413a1e:	sti    
  413a1f:	inc    ebp
  413a21:	jecxz  0x413a96
  413a23:	cld    
  413a24:	mov    edx,0xe20010ad
  413a29:	sbb    al,0xc1
  413a2b:	or     al,0x0
	...
  413a51:	add    BYTE PTR [eax],al
  413a53:	add    BYTE PTR [edx+0x31ec8938],dh
  413a59:	leave  
  413a5a:	cli    
  413a5b:	push   0xffffffa2
  413a5d:	inc    ecx
  413a5e:	dec    ebx
  413a5f:	dec    DWORD PTR [edi+0x5781e65f]
  413a65:	in     al,0xfd
  413a67:	mov    edi,ebp
  413a69:	jecxz  0x413a68
  413a6b:	jne    0x413a07
  413a6d:	aas    
  413a6e:	or     BYTE PTR [eax-0x1d],0x7
  413a72:	push   DWORD PTR ds:0x40fcac
  413a78:	pop    edx
  413a79:	test   bl,bh
  413a7b:	call   DWORD PTR [ebp-0x1c]
  413a7e:	jae    0x413a88
  413a80:	dec    ebx
  413a81:	mov    bh,BYTE PTR [esi+0x47]
  413a84:	or     dh,BYTE PTR [edx-0x26]
  413a87:	add    DWORD PTR [ebx+0x72],ecx
  413a8a:	and    bh,0xc6
  413a8d:	pop    esp
  413a8e:	dec    BYTE PTR gs:[esp+ebx*8+0x66]
  413a93:	(bad)  
  413a94:	mov    esi,0x7e935a68
  413a99:	arpl   WORD PTR [ebp-0x38],sp
  413a9c:	or     DWORD PTR [ebp+0x2],esp
  413a9f:	push   ebp
  413aa0:	rol    BYTE PTR [ecx+eax*4-0x3d],0x27
  413aa5:	adc    ecx,edi
  413aa7:	imul   ecx,DWORD PTR [ebx-0x4a],0x589efeb5
  413aae:	pop    edx
  413aaf:	xor    eax,0x8865934e
  413ab4:	mov    gs,WORD PTR [ecx+edi*2+0x34]
	...
  413adf:	add    BYTE PTR [eax+edi*1+0x3dc1ffc3],bl
  413ae6:	loope  0x413b0f
  413ae8:	mov    dh,BYTE PTR [eax-0x7e]
  413aeb:	ds dec ebx
  413aed:	hlt    
  413aee:	shl    BYTE PTR [edi+0x3c],0x19
  413af2:	vhsubps ymm7,ymm0,YMMWORD PTR [eax-0x17]
  413af7:	adc    DWORD PTR [ebx+0x70],ecx
  413afa:	stc    
  413afb:	mov    edi,0xe7cc4b3f
  413b00:	fstp   QWORD PTR [ecx+0x381bfe65]
  413b06:	add    al,BYTE PTR [eax]
  413b08:	pushf  
  413b09:	jb     0x413ae5
  413b0b:	daa    
  413b0c:	adc    dh,BYTE PTR [ecx-0x6263affe]
  413b12:	cli    
  413b13:	out    0xbb,eax
  413b15:	inc    esp
  413b16:	gs (bad) 
  413b18:	mov    ds:0x84ff25d4,eax
  413b1d:	mov    DWORD PTR [ebx],0xe709cb46
  413b23:	add    edi,esi
  413b25:	pop    esi
  413b26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b27:	cmp    DWORD PTR [bx+di+0x4f],ecx
  413b2b:	gs pop dx
  413b2e:	or     eax,0xee21ae71
  413b33:	lock xchg ecx,eax
  413b35:	pop    edx
  413b36:	jae    0x413b9f
  413b38:	dec    ebp
  413b39:	aam    0xe0
  413b3b:	pop    ebx
  413b3c:	pop    esp
  413b3d:	sbb    al,0xee
  413b3f:	gs popf 
  413b41:	mov    ebx,0x42af
	...
  413b6a:	add    BYTE PTR [eax],al
  413b6c:	dec    eax
  413b6d:	or     DWORD PTR [ecx+edi*2],esi
  413b70:	and    BYTE PTR [esi+0x9b268ac],al
  413b76:	inc    ebx
  413b77:	mov    ch,0x1d
  413b79:	aam    0xf0
  413b7b:	pop    ebx
  413b7c:	rcr    BYTE PTR [esi+edi*4],cl
  413b7f:	gs ret 
  413b81:	ret    
  413b82:	mov    ah,0xda
  413b84:	add    al,0xe2
  413b86:	adc    edi,DWORD PTR [ebx+0x2f11098b]
  413b8c:	or     al,0xe8
  413b8f:	fs aaa 
  413b91:	ret    
  413b92:	mov    edi,0x6861e4c2
  413b97:	ret    0x59dd
  413b9a:	icebp  
  413b9b:	inc    ebx
  413b9c:	pop    eax
  413b9d:	add    BYTE PTR [ecx],bl
  413b9f:	fmul   st(4),st
  413ba1:	pop    ecx
  413ba2:	test   DWORD PTR [esi-0x3ce01cd4],esp
  413ba8:	mov    esp,0x4cef65c9
  413bad:	jno    0x413bac
  413baf:	fild   QWORD PTR [ebp+0x65b94059]
  413bb5:	pop    edx
  413bb6:	dec    ebp
  413bb7:	fcomp  QWORD PTR [ecx+ebx*2-0x1cd359ab]
  413bbe:	scas   eax,DWORD PTR es:[edi]
  413bbf:	ret    0xe18c
  413bc2:	call   DWORD PTR [ebx+0x2dffc8c1]
  413bc8:	ins    BYTE PTR es:[edi],dx
  413bc9:	add    eax,ebp
  413bcb:	mov    bh,0x94
  413bcd:	pop    edx
  413bce:	(bad)  
  413bcf:	push   ds
	...
  413bf8:	pop    esp
  413bf9:	pop    ebp
  413bfa:	(bad)  
  413bfb:	pushf  
  413bfc:	pusha  
  413bfd:	popa   
  413bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bff:	int    0xe7
  413c01:	pop    edx
  413c02:	enter  0x4b2b,0x9
  413c06:	push   ebp
  413c07:	jb     0x413bfc
  413c09:	xchg   bl,al
  413c0b:	cmc    
  413c0c:	push   ss
  413c0d:	shr    BYTE PTR [ecx-0x17],0x22
  413c11:	leave  
  413c12:	(bad)  
  413c13:	pop    esp
  413c14:	aaa    
  413c15:	jno    0x413c5f
  413c17:	sbb    eax,0x2c8857a6
  413c1c:	mov    bl,0x83
  413c1e:	xor    al,0x2e
  413c20:	aas    
  413c21:	retf   0x71ff
  413c24:	ins    DWORD PTR es:[edi],dx
  413c25:	in     al,dx
  413c26:	daa    
  413c27:	sub    BYTE PTR [edi-0x77],al
  413c2a:	ds jmp 0x34a90a24
  413c30:	ror    cl,0xff
  413c33:	cmp    eax,0xe9108697
  413c38:	dec    eax
  413c39:	add    al,0xc0
  413c3b:	sbb    eax,0x58e7bf4e
  413c40:	mov    al,ds:0xf719fe57
  413c45:	pop    eax
  413c46:	dec    BYTE PTR [esi+0x207ef0a6]
  413c4c:	mov    BYTE PTR [eax+0x4e],bl
  413c4f:	outs   dx,BYTE PTR ds:[esi]
  413c50:	lods   eax,DWORD PTR ds:[esi]
  413c51:	adc    al,ch
  413c53:	mov    ch,BYTE PTR [ebx+0x7751fe57]
  413c59:	push   ss
  413c5a:	call   DWORD PTR [esi+0x0]
	...
  413c81:	add    BYTE PTR [eax],al
  413c83:	add    BYTE PTR [ebx],al
  413c85:	or     DWORD PTR [esi+0x69],eax
  413c88:	or     WORD PTR [ebp+0x0],si
  413c8c:	or     BYTE PTR [esi-0x5c9dcc06],dl
  413c92:	std    
  413c93:	(bad)  
  413c94:	cmp    eax,0x7aaef0ed
  413c99:	push   ebp
  413c9a:	jae    0x413c57
  413c9c:	sub    eax,0xd7fffa67
  413ca1:	push   esp
  413ca2:	out    0x2b,al
  413ca4:	jle    0x413c93
  413ca6:	std    
  413ca7:	pop    edi
  413ca8:	lods   al,BYTE PTR ds:[esi]
  413ca9:	adc    eax,ecx
  413cab:	add    al,0x62
  413cad:	inc    edi
  413cae:	mov    esp,ebp
  413cb0:	loope  0x413cc9
  413cb2:	sti    
  413cb3:	push   esi
  413cb4:	in     eax,0x31
  413cb6:	(bad)  
  413cb7:	imul   esp,ebx,0x1a0873ec
  413cbd:	enter  0xff39,0xd
  413cc1:	xchg   BYTE PTR [ebx-0x4],al
  413cc4:	test   eax,0x73285ef2
  413cc9:	or     eax,0x25813d8b
  413cce:	inc    ecx
  413ccf:	add    BYTE PTR [edx+0x3774002c],ah
  413cd5:	mov    DWORD PTR gs:[ecx+0x33],ecx
  413cd9:	or     eax,0x5cf2e857
  413cde:	(bad)  
  413cdf:	(bad)  
  413ce0:	stc    
  413ce1:	retf   
  413ce2:	jb     0x413d03
  413ce4:	and    al,0xe5
  413ce6:	xor    DWORD PTR [eax+0x0],ecx
	...
  413d0d:	add    BYTE PTR [eax],al
  413d0f:	add    ch,cl
  413d11:	jmp    0x413d61
  413d13:	push   0xbeef0be2
  413d18:	cmp    cl,BYTE PTR [edx-0x644dbeb9]
  413d1e:	std    
  413d1f:	jne    0x413ccb
  413d21:	jecxz  0x413d46
  413d23:	arpl   WORD PTR ds:0x4c51e6ec,bp
  413d29:	in     al,dx
  413d2a:	std    
  413d2b:	jmp    0x413d78
  413d2d:	popa   
  413d2e:	enter  0x5d7f,0x62
  413d32:	xlat   BYTE PTR ds:[ebx]
  413d33:	stc    
  413d34:	or     eax,0xd2c016ce
  413d39:	push   ss
  413d3a:	arpl   si,di
  413d3c:	test   BYTE PTR [ebx],dl
  413d3e:	mov    dl,0x37
  413d40:	inc    esp
  413d41:	popf   
  413d42:	popf   
  413d43:	(bad)  
  413d44:	(bad)  
  413d45:	sub    eax,0xfa437463
  413d4a:	mov    al,0x3a
  413d4c:	fs inc dl
  413d4f:	pop    ebp
  413d50:	xchg   edx,eax
  413d51:	and    ecx,DWORD PTR [eax]
  413d53:	add    dh,bh
  413d55:	fisubr DWORD PTR [edi-0x7e]
  413d58:	xchg   DWORD PTR [ebp-0x14],edx
  413d5b:	push   DWORD PTR [edx+0x53746172]
  413d61:	or     bl,dl
  413d63:	cmp    dh,BYTE PTR [eax+esi*2]
  413d66:	mov    eax,DWORD PTR [edi+ebp*1-0x47]
  413d6a:	stos   DWORD PTR es:[edi],eax
  413d6b:	dec    eax
  413d6c:	mov    ah,BYTE PTR [eax+0x61]
  413d6f:	je     0x413dc4
  413d71:	dec    eax
  413d72:	rcr    bh,1
	...
  413d9c:	adc    al,0x50
  413d9e:	popa   
  413d9f:	je     0x413db0
  413da1:	cwde   
  413da2:	xlat   BYTE PTR ds:[ebx]
  413da3:	pop    es
  413da4:	repz sbb bl,BYTE PTR [edi]
  413da7:	(bad)  
  413da8:	cld    
  413da9:	test   eax,0x154b0344
  413dae:	(bad)  
  413daf:	jmp    0x413d79
  413db1:	lods   al,BYTE PTR ds:[esi]
  413db2:	pop    esi
  413db3:	push   esi
  413db4:	jae    0x413d5f
  413db6:	cmp    al,0x3f
  413db8:	dec    ebx
  413db9:	js     0x413d8f
  413dbb:	add    BYTE PTR [eax],cl
  413dbd:	nop
  413dbe:	dec    ecx
  413dbf:	inc    esp
  413dc0:	iret   
  413dc1:	pusha  
  413dc2:	add    al,BYTE PTR [eax]
  413dc4:	dec    ebx
  413dc5:	pop    ds
  413dc6:	inc    ebx
  413dc7:	dec    eax
  413dc8:	or     ah,BYTE PTR [eax+0x61]
  413dcb:	je     0x413e10
  413dcd:	or     DWORD PTR [esi+0x8],esi
  413dd0:	push   edi
  413dd1:	ret    0x3a7
  413dd4:	das    
  413dd5:	test   al,0x18
  413dd7:	add    al,0x4b
  413dd9:	or     DWORD PTR [ecx-0x25],ebp
  413ddc:	dec    edx
  413ddd:	or     DWORD PTR [ebp-0xf2373f5],edi
  413de3:	imul   esi,DWORD PTR [ecx],0x1c
  413de6:	bound  esi,QWORD PTR ss:[ebx-0x6f]
  413dea:	call   0xc4a288f2
  413def:	retf   0x566d
  413df2:	sbb    eax,0x6614cd8
  413df7:	sbb    al,0x5c
  413df9:	push   esi
  413dfa:	dec    ecx
  413dfb:	repz add eax,ecx
  413dfe:	call   0x413eea
	...
  413e27:	add    BYTE PTR [ebp+0x1c],cl
  413e2a:	jmp    0x624a8932
  413e2f:	inc    edi
  413e30:	test   al,0x56
  413e32:	mov    bl,0x3
  413e34:	dec    ebx
  413e35:	or     ecx,ebp
  413e37:	mov    dh,0x7c
  413e39:	loope  0x413dbe
  413e3b:	cmp    eax,0xc2410964
  413e40:	add    ecx,ecx
  413e42:	call   0xbc1e6fa
  413e47:	add    al,0x4b
  413e49:	or     ecx,ebp
  413e4b:	pusha  
  413e4c:	jg     0x413e4f
  413e4e:	mov    dh,0xf9
  413e50:	retf   
  413e51:	adc    eax,0x934c402
  413e56:	sbb    eax,0xf850c801
  413e5b:	xlat   BYTE PTR ds:[ebx]
  413e5c:	push   ebx
  413e5d:	dec    esi
  413e5e:	sub    esp,DWORD PTR [eax+0x4b]
  413e61:	or     ecx,ebp
  413e63:	add    esp,eax
  413e65:	test   DWORD PTR [ebp+0x27c23b17],0x1bc404
  413e6f:	fisttp QWORD PTR [edi-0x97f0038]
  413e75:	push   ds
  413e76:	jmp    DWORD PTR [esi-0x3a]
  413e79:	dec    ecx
  413e7a:	pop    ss
  413e7b:	push   edx
  413e7c:	xchg   edx,eax
  413e7d:	mov    esp,0xbcce458a
  413e82:	or     esp,DWORD PTR [edx-0x74]
  413e85:	add    eax,0x8640bbff
  413e8a:	jg     0x413e0d
	...
  413eb4:	dec    edi
  413eb5:	or     DWORD PTR [eax],eax
  413eb7:	ss xchg ebp,eax
  413eb9:	add    DWORD PTR [edi-0x1a9fc97],ecx
  413ebf:	jmp    0x6e5116af
  413ec4:	iret   
  413ec5:	cdq    
  413ec6:	(bad)  
  413ec7:	call   0xf57dc914
  413ecc:	xchg   eax,ecx
  413ece:	(bad)  
  413ecf:	call   0xb5403748
  413ed4:	cmp    al,al
  413ed6:	inc    eax
  413ed7:	jmp    0xa2555c87
  413edc:	or     DWORD PTR [ebp-0x1a],edx
  413edf:	add    DWORD PTR [edx+0x54],edx
  413ee2:	(bad)  
  413ee3:	mov    eax,ds:0xe9000948
  413ee8:	fisttp QWORD PTR [edx+0x23]
  413eeb:	jmp    0xe945c31c
  413ef0:	dec    eax
  413ef1:	or     DWORD PTR [eax],eax
  413ef3:	push   0xffffff93
  413ef5:	or     BYTE PTR [ebx-0x7afbb70a],al
  413efb:	out    dx,al
  413efc:	imul   edx,DWORD PTR [ebx-0x2],0x72
  413f00:	add    eax,0x8eb05e51
  413f05:	or     BYTE PTR [eax],al
  413f07:	aas    
  413f08:	out    dx,eax
  413f09:	aas    
  413f0a:	fisubr DWORD PTR [ecx]
  413f0c:	dec    edi
  413f0d:	push   ecx
  413f0e:	jno    0x413f10
  413f10:	jecxz  0x413edf
  413f12:	std    
  413f13:	mov    edi,ebx
  413f15:	and    eax,0x8bf6
	...
  413f3e:	add    BYTE PTR [eax],al
  413f40:	jmp    0x413fa2
  413f42:	jle    0x413eec
  413f44:	nop
  413f45:	pop    es
  413f46:	mov    ecx,ecx
  413f48:	test   BYTE PTR [ebp-0x79b51439],al
  413f4e:	mov    DWORD PTR [ebx],0x50c7856c
  413f54:	sub    DWORD PTR [edi+0x894a7e6],edi
  413f5a:	add    BYTE PTR [ebx-0x36766fc5],cl
  413f60:	jno    0x413f30
  413f62:	mov    ecx,ecx
  413f64:	aam    0x5
  413f66:	div    BYTE PTR [ebp+0x3e]
  413f69:	dec    edx
  413f6a:	rcl    DWORD PTR [ebp-0x27],0xe3
  413f6e:	data16 or BYTE PTR [esi],dl
  413f71:	dec    eax
  413f72:	(bad)  
  413f73:	div    DWORD PTR [eax-0x26003cf9]
  413f79:	dec    edx
  413f7a:	push   es
  413f7b:	or     esi,DWORD PTR [edx+0x3c]
  413f7e:	or     ch,bl
  413f80:	das    
  413f81:	jmp    0x387e:0x482afe06
  413f88:	and    dh,BYTE PTR [ecx]
  413f8a:	hlt    
  413f8b:	leave  
  413f8c:	lock add BYTE PTR [eax],al
  413f8f:	push   ebp
  413f90:	test   eax,0xfec481d9
  413f95:	xchg   edi,eax
  413f96:	data16 xor dh,ah
  413f99:	dec    esp
  413f9a:	(bad)  
  413f9b:	test   DWORD PTR [eax+0xe],0x41adffc3
  413fa2:	repnz add BYTE PTR [eax],al
	...
  413fc9:	add    BYTE PTR [eax],al
  413fcb:	add    dl,ah
  413fcd:	pop    es
  413fce:	add    BYTE PTR [ebx],ch
  413fd0:	or     DWORD PTR [edx+0x43],edi
  413fd3:	cld    
  413fd4:	and    dh,BYTE PTR [ebx+esi*2+0x788a4b08]
  413fdb:	or     eax,0xbf87624b
  413fe0:	push   ebx
  413fe1:	xchg   ebp,eax
  413fe2:	pop    ebp
  413fe3:	je     0x414038
  413fe5:	jp     0x41400f
  413fe7:	xor    al,0xbc
  413fe9:	fimul  DWORD PTR [esp+eax*2-0x184bde4d]
  413ff0:	pop    ds
  413ff1:	cs pop edi
  413ff3:	(bad)  
  413ff4:	shr    BYTE PTR [esi+edx*2+0x6bbe16fe],cl
  413ffb:	push   ebx
  413ffc:	inc    esi
  413ffd:	bound  eax,QWORD PTR [edx]
  413fff:	or     ecx,DWORD PTR [ebx-0x101096b]
  414005:	leave  
  414006:	pop    esi
  414007:	je     0x414080
  414009:	jno    0x414075
  41400b:	xchg   DWORD PTR [edi],esi
  41400d:	and    ebx,DWORD PTR [edi-0x2]
  414010:	imul   BYTE PTR ds:0x6256416c
  414016:	add    bh,bh
  414018:	(bad)  
  414019:	imul   ebp,DWORD PTR [edx-0xd],0x825f031e
  414020:	into   
  414021:	push   ebp
  414022:	add    dh,BYTE PTR [ebp+eiz*2+0x78]
  414026:	cs dec ebx
  414028:	mov    ah,BYTE PTR [eax+0x5d]
  41402b:	je     0x41406c
  41402d:	or     DWORD PTR [ebx+0xd],edx
	...
  414057:	add    BYTE PTR [ebx+0x60],cl
  41405a:	or     eax,eax
  41405c:	lahf   
  41405d:	ins    DWORD PTR es:[edi],dx
  41405e:	cdq    
  41405f:	add    BYTE PTR [ebx+0x60],cl
  414062:	add    bh,bh
  414064:	sahf   
  414065:	cmp    al,0x6a
  414067:	add    eax,0x8a5d4b4f
  41406c:	or     BYTE PTR [eax],ch
  41406e:	dec    ebp
  41406f:	rol    DWORD PTR [edi+0x60],0xb7
  414073:	mov    ah,bh
  414075:	enter  0xdb9d,0x8b
  414079:	or     ecx,ebp
  41407b:	pop    ebx
  41407c:	pop    edx
  41407d:	or     BYTE PTR [edx-0x1f2322a2],ch
  414083:	imul   esp,DWORD PTR [edi],0x1b
  414086:	mov    ds,WORD PTR [esi+0x62]
  414089:	add    DWORD PTR [ecx],edx
  41408b:	cs jae 0x414056
  41408e:	call   0x814277f1
  414093:	fdivr  QWORD PTR [edx+edx*2+0x6d]
  414097:	jmp    0x2bf721e0
  41409c:	or     cl,BYTE PTR [ecx]
  41409e:	pop    esi
  41409f:	fadd   DWORD PTR [ecx+eiz*2-0x3e]
  4140a3:	sbb    edx,DWORD PTR [edx+edx*2+0x6144d84d]
  4140aa:	xor    al,0x60
  4140ac:	test   DWORD PTR [edx-0x80],edx
  4140af:	add    al,0x4b
  4140b1:	or     ecx,ebp
  4140b3:	dec    esp
  4140b4:	mov    cl,BYTE PTR ds:0x65c1b8e9
  4140ba:	imul   eax,DWORD PTR [edi+0x0],0x0
	...
  4140e1:	add    BYTE PTR [eax],al
  4140e3:	add    BYTE PTR [ecx+eiz*8-0x1d],bl
  4140e7:	inc    eax
  4140e8:	sbb    al,0x9
  4140ea:	adc    ecx,edx
  4140ec:	dec    ebx
  4140ed:	inc    esi
  4140ee:	or     eax,0x604d75e
  4140f3:	fmul   DWORD PTR [ecx+eiz*2+0x78]
  4140f7:	sbb    DWORD PTR [edx+edx*2],edi
  4140fa:	sub    eax,0xe90830c8
  4140ff:	add    ecx,DWORD PTR [ebx-0x7c]
  414102:	sub    ebx,DWORD PTR [esp+edx*4-0x1f]
  414106:	or     cl,cl
  414108:	mov    ecx,DWORD PTR [ecx]
  41410a:	ror    DWORD PTR [edx-0x74],0x52
  41410e:	int    0x9
  414110:	or     ebx,ebp
  414112:	or     dh,BYTE PTR [ecx+ecx*8+0x77f4c0d3]
  414119:	sti    
  41411a:	inc    DWORD PTR [edx-0x1]
  41411d:	sar    esi,0x34
  414120:	pop    ebx
  414121:	popa   
  414122:	fnclex 
  414124:	xchg   DWORD PTR [ebx+0xa],edx
  414127:	test   eax,0x2cc70b03
  41412c:	imul   edx,DWORD PTR [edx-0x2],0xffffffe9
  414130:	dec    eax
  414131:	popa   
  414132:	fs ret 0x5327
  414136:	mov    ah,BYTE PTR [ebx+ebp*1]
  414139:	inc    ecx
  41413a:	shl    ecx,0x48
  41413d:	mov    esp,0xe9fa7d8a
  414142:	pop    edi
  414143:	inc    esp
  414144:	(bad)  
  414145:	push   ecx
  414146:	neg    bl
	...
  414170:	dec    ecx
  414171:	inc    esi
  414172:	inc    BYTE PTR [edx]
  414174:	push   edx
  414175:	push   ebx
  414176:	je     0x414159
  414178:	and    bl,cl
  41417a:	inc    BYTE PTR [esi+0x26]
  41417d:	(bad)  
  41417e:	mov    edi,0xff7bc4ee
  414183:	call   0xe1b593d0
  414188:	loopne 0x4141d7
  41418a:	xor    DWORD PTR [esi],esp
  41418c:	push   es
  41418d:	(bad)  
  41418e:	mov    edi,0x89604594
  414193:	jmp    0x95404ae0
  414198:	cmp    al,0x52
  41419a:	je     0x41418d
  41419c:	mov    al,0xe7
  41419e:	(bad)  
  41419f:	(bad)  
  4141a0:	lahf   
  4141a1:	dec    edi
  4141a2:	je     0x414185
  4141a4:	mov    al,ds:0x8fee3a17
  4141a9:	add    eax,eax
  4141ab:	pop    esp
  4141ac:	dec    ecx
  4141ad:	fs jo  0x41418e
  4141b0:	cmc    
  4141b1:	or     al,ch
  4141b3:	mov    al,ds:0xe2fe5030
  4141b8:	mov    ch,dl
  4141ba:	add    DWORD PTR [eax],eax
  4141bc:	sbb    DWORD PTR [edx-0x3],ebp
  4141bf:	jne    0x4141bb
  4141c1:	in     al,0x1f
  4141c3:	cmp    DWORD PTR [ebp+0x37c009ad],edi
  4141c9:	or     ebp,ebx
  4141cb:	push   ebp
  4141cc:	cmp    dl,BYTE PTR [edi-0x520dbedb]
  4141d2:	jae    0x4141dc
	...
  4141fc:	retf   0x3a92
  4141ff:	(bad)  
  414200:	mov    ebp,0xb075c001
  414205:	loope  0x414247
  414207:	push   DWORD PTR [edi-0x56517fc]
  41420d:	lods   eax,DWORD PTR ds:[esi]
  41420e:	std    
  41420f:	or     esp,edx
  414211:	aaa    
  414212:	add    bl,ch
  414214:	inc    esi
  414215:	scas   al,BYTE PTR es:[edi]
  414216:	jae    0x414220
  414218:	cli    
  414219:	mov    ecx,0xfdff36
  41421e:	shl    BYTE PTR [ebp-0x60],0xe1
  414222:	and    al,0xff
  414224:	mov    DWORD PTR [eax+ebp*8],0xfdad8087
  41422b:	cmp    DWORD PTR [edx],0x2c
  41422e:	ja     0x414232
  414230:	dec    ecx
  414231:	lds    ecx,FWORD PTR [ecx]
  414233:	rol    dh,0x59
  414236:	cmp    eax,DWORD PTR [eax]
  414238:	jb     0x414296
  41423a:	(bad)  
  41423b:	jb     0x4142ab
  41423d:	jno    0x41423e
  41423f:	jmp    DWORD PTR [edx+0xc]
  414242:	jmp    0x414249
  414244:	mov    DWORD PTR [ecx],ecx
  414246:	add    BYTE PTR [eax],al
  414248:	xor    al,BYTE PTR [ecx-0x3594a43f]
  41424e:	push   es
  41424f:	add    bh,dl
  414251:	sub    dl,0x68
  414254:	push   ebx
  414255:	adc    edi,DWORD PTR [edi]
  414257:	add    BYTE PTR [edx],ch
  414259:	aaa    
  41425a:	inc    edx
  41425c:	dec    ebx
  41425d:	aaa    
  41425e:	pop    edx
  41425f:	je     0x414261
	...
  414285:	add    BYTE PTR [eax],al
  414287:	add    BYTE PTR [edi],bh
  414289:	aas    
  41428a:	rol    BYTE PTR [edi],1
  41428c:	repz call FWORD PTR [edx-0x2]
  414290:	cld    
  414291:	pop    edx
  414292:	inc    edx
  414293:	je     0x4142e6
  414295:	xchg   edi,eax
  414296:	ror    BYTE PTR [ebx],1
  414298:	in     al,dx
  414299:	adc    al,0xc
  41429b:	call   0xfe9be9dc
  4142a0:	push   eax
  4142a1:	mov    ds:0xecd40ad0,al
  4142a6:	pop    es
  4142a7:	call   DWORD PTR [esi+0x6a]
  4142aa:	push   0x7
  4142ac:	les    eax,FWORD PTR [esi+0x5989c85a]
  4142b2:	add    dl,BYTE PTR [ebp-0x40]
  4142b5:	test   DWORD PTR [esi-0x4d0d583d],eax
  4142bb:	addr16 sub ecx,eax
  4142be:	ret    
  4142bf:	call   DWORD PTR [ebx+esi*1+0xa94c303]
  4142c6:	aas    
  4142c7:	out    0x89,eax
  4142c9:	call   0xff66:0x9c8cfe59
  4142d0:	jl     0x414333
  4142d2:	add    cl,BYTE PTR [ebp-0x184c39f2]
  4142d8:	ret    0x5950
  4142db:	dec    al
  4142dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142de:	call   di
  4142e1:	or     DWORD PTR [ecx+0x6a916744],ecx
  4142e7:	jns    0x414303
  4142e9:	call   FWORD PTR [edx-0x7e]
	...
  414314:	(bad)  
  414315:	hlt    
  414316:	add    esi,DWORD PTR [ebp+0x52]
  414319:	ffree  st(0)
  41431b:	jmp    0x4142b8
  41431d:	or     bh,ch
  41431f:	xor    BYTE PTR [eax+eiz*2],ch
  414322:	test   DWORD PTR [edi+esi*1+0xa],edi
  414326:	jmp    0xe8c10a35
  41432b:	add    ecx,DWORD PTR [ebx+0x7c]
  41432e:	sub    edx,DWORD PTR [esp+edi*2+0x4e]
  414332:	push   ebx
  414333:	push   0x5ac5e0ec
  414338:	std    
  414339:	mov    al,al
  41433b:	add    al,0x7e
  41433d:	int3   
  41433e:	jne    0x414325
  414340:	and    eax,0x836ee8c8
  414345:	inc    esi
  414346:	sub    esp,DWORD PTR [eax+0x52]
  414349:	or     ecx,ebp
  41434b:	add    ecx,DWORD PTR [eax*8+0x94b0380]
  414352:	jmp    0x18a252df
  414357:	pop    ebx
  414358:	aaa    
  414359:	pop    ebp
  41435a:	adc    eax,0x75b3b96c
  41435f:	pop    edx
  414360:	inc    ecx
  414361:	dec    ecx
  414362:	hlt    
  414363:	repz leave 
  414365:	int3   
  414366:	push   eax
  414367:	add    edx,DWORD PTR [edi]
  414369:	add    ebx,DWORD PTR [esi-0x30]
  41436c:	lods   al,BYTE PTR ds:[esi]
  41436d:	popa   
  41436e:	adc    DWORD PTR [ecx-0x73],ebx
  414371:	dec    esi
  414372:	popa   
  414373:	cmp    eax,DWORD PTR [ebp+0x6b50d4]
	...
  41439d:	add    BYTE PTR [eax],al
  41439f:	add    BYTE PTR ds:0x415a3e18,ch
  4143a5:	xor    bh,BYTE PTR [ebx+0x44ccc9f0]
  4143ab:	add    ebx,edi
  4143ad:	std    
  4143ae:	and    eax,0x70e168c8
  4143b3:	not    BYTE PTR [esi+ecx*2+0x0]
  4143b7:	jbe    0x4143fa
  4143b9:	or     ecx,ebp
  4143bb:	outs   dx,BYTE PTR ds:[esi]
  4143bc:	std    
  4143bd:	popa   
  4143be:	out    0xc2,eax
  4143c0:	mov    esp,0x32d0e90e
  4143c5:	(bad)  
  4143c6:	jmp    FWORD PTR [eax+0x51]
  4143c9:	or     DWORD PTR [ebp+eiz*8+0x55],esi
  4143cd:	xor    dh,BYTE PTR [ebx-0x79]
  4143d0:	dec    esi
  4143d1:	xor    dh,BYTE PTR [ebx-0x7]
  4143d4:	dec    BYTE PTR es:[esp+ebp*1+0x967be77]
  4143dc:	push   ss
  4143dd:	leave  
  4143de:	call   eax
  4143e0:	scas   eax,DWORD PTR es:[edi]
  4143e1:	(bad)  
  4143e2:	(bad)  
  4143e3:	mov    esi,0xc1ebd592
  4143e8:	pop    edi
  4143e9:	push   ds
  4143ea:	jmp    FWORD PTR [esi+0x425e4ad6]
  4143f0:	nop
  4143f1:	dec    ebx
  4143f2:	push   esp
  4143f3:	jb     0x414458
  4143f5:	mov    ebx,eax
  4143f7:	dec    ecx
  4143f8:	jno    0x414449
  4143fa:	(bad)  
  4143fb:	ss stc 
  4143fd:	in     eax,0x4f
  4143ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414400:	xchg   DWORD PTR [ebp-0xa],ecx
  414403:	sti    
	...
  41442c:	dec    ecx
  41442d:	dec    edx
  41442e:	(bad)  
  41442f:	ss mov esp,0xc8e94126
  414435:	push   cs
  414436:	add    dh,dh
  414438:	sbb    al,0x43
  41443a:	add    cl,ch
  41443c:	dec    eax
  41443d:	jl     0x4143c3
  41443f:	pop    ebp
  414440:	icebp  
  414441:	dec    esi
  414442:	(bad)  
  414443:	mov    ecx,0xa12f65bb
  414448:	and    ecx,DWORD PTR [edi+0xa]
  41444b:	sub    DWORD PTR [edx-0x7b],eax
  41444e:	mov    ds:0x830948e8,eax
  414453:	ins    BYTE PTR es:[edi],dx
  414454:	sti    
  414455:	dec    ebx
  414456:	(bad)  
  414457:	es inc edi
  414459:	inc    BYTE PTR [ebx+0x94876]
  41445f:	fs int3 
  414461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414462:	std    
  414463:	push   cs
  414464:	mov    ds:0x7f00febc,al
  414469:	mov    ecx,0xe135fffc
  41446e:	in     al,dx
  41446f:	aaa    
  414470:	xor    eax,0xabf629b2
  414475:	jl     0x414419
  414477:	(bad)  
  414478:	and    eax,0x3c37e9b2
  41447d:	add    dh,BYTE PTR [esi-0x362bb7c]
  414483:	call   DWORD PTR ds:0x39446699
  414489:	dec    eax
  41448a:	dec    BYTE PTR [edi+ebp*2+0xfffcc6]
	...
  4144b5:	add    BYTE PTR [eax],al
  4144b7:	add    BYTE PTR [ebp-0x16be1968],dh
  4144bd:	or     BYTE PTR [eax],al
  4144bf:	sub    DWORD PTR [esi-0x5f7a72fc],0xffffffb2
  4144c6:	std    
  4144c7:	call   DWORD PTR [edx]
  4144c9:	mov    dl,0xb3
  4144cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144cc:	aam    0xb1
  4144ce:	std    
  4144cf:	call   0x4039b1
  4144d4:	cmp    ecx,ebx
  4144d6:	mov    ds:0x44b135fe,al
  4144db:	xor    DWORD PTR [eax+ebx*2],0x70
  4144df:	les    esp,FWORD PTR ds:0xf5fef27b
  4144e5:	mov    al,0xe6
  4144e7:	mov    ah,0x30
  4144e9:	mov    dl,0xfd
  4144eb:	(bad)  
  4144ec:	out    dx,eax
  4144ed:	outs   dx,DWORD PTR ds:[esi]
  4144ee:	cld    
  4144ef:	inc    DWORD PTR ds:0x62000008
  4144f5:	pop    esi
  4144f6:	add    BYTE PTR [ebp-0x39021],cl
  4144fc:	xor    eax,0x3eb5fd98
  414501:	mov    dl,0xfd
  414503:	(bad)  
  414504:	cmp    dl,BYTE PTR [edx+0x2f]
  414507:	dec    DWORD PTR [ebx-0xd]
  41450a:	or     eax,eax
  41450c:	push   esp
  41450d:	out    0x5a,al
  41450f:	(bad)  
  414510:	cmp    al,0x62
  414512:	cmp    DWORD PTR [ebx+esi*8+0x7efe564b],0x278
	...
  414541:	add    BYTE PTR [eax],al
  414543:	add    BYTE PTR [ebp+eiz*8+0x6a],dl
  414547:	call   FWORD PTR [edx+eiz*2]
  41454a:	xchg   DWORD PTR [eax+edx*1+0x7bfe562c],eax
  414551:	retf   0xff
  414554:	dec    ebx
  414555:	bound  ebp,QWORD PTR [edx-0x1d]
  414558:	push   edx
  414559:	bound  eax,QWORD PTR [edx]
  41455b:	or     ecx,DWORD PTR [ebx]
  41455d:	pop    ebx
  41455e:	jle    0x41452e
  414560:	dec    ebx
  414561:	bound  eax,QWORD PTR [edx]
  414563:	cmp    eax,0x2614f
  414568:	dec    esp
  414569:	fstp   TBYTE PTR [edi]
  41456b:	call   esp
  41456d:	popa   
  41456e:	push   0x4f
  414570:	inc    ecx
  414571:	bound  eax,QWORD PTR [edx]
  414573:	push   eax
  414574:	xor    edi,DWORD PTR ds:0xd54b40c9
  41457a:	add    cl,0xb5
  41457d:	retf   0x4f56
  414580:	mov    ds:0x4b0009bd,eax
  414585:	fistp  QWORD PTR [edi]
  414587:	or     esi,DWORD PTR [ecx]
  414589:	bound  eax,QWORD PTR [edi+0x56ab9084]
  41458f:	(bad)  
  414590:	sti    
  414591:	leave  
  414592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414593:	or     BYTE PTR [ebx+0x62],cl
  414596:	xchg   DWORD PTR [eax+eax*4+0x1bfe56c3],eax
  41459d:	mov    edx,0x126c4313
  4145a2:	or     eax,eax
  4145a4:	fiadd  WORD PTR [ecx]
  4145a6:	in     al,dx
  4145a7:	mov    dh,0x0
	...
  4145cd:	add    BYTE PTR [eax],al
  4145cf:	add    BYTE PTR [ebx],dh
  4145d1:	or     DWORD PTR [eax+0x2185c603],ebp
  4145d7:	push   esi
  4145d8:	dec    ebp
  4145d9:	dec    ebx
  4145da:	mov    eax,0xe0f136b
  4145df:	push   edi
  4145e0:	iret   
  4145e1:	je     0x41460d
  4145e3:	push   esi
  4145e4:	xor    eax,0x24b39a4b
  4145e9:	cli    
  4145ea:	mov    ah,0x56
  4145ec:	and    eax,0xc788d95f
  4145f1:	inc    edi
  4145f2:	out    0x56,al
  4145f4:	adc    eax,0x11806bba
  4145f9:	dec    esp
  4145fa:	aad    0x56
  4145fc:	xchg   esp,eax
  4145fd:	popa   
  4145fe:	test   DWORD PTR [edx],ebx
  414600:	cld    
  414601:	dec    edx
  414602:	outs   dx,DWORD PTR ds:[esi]
  414603:	xor    BYTE PTR [eax-0x12a942b5],0x94
  41460a:	je     0x414661
  41460c:	in     eax,0x4a
  41460e:	lods   eax,DWORD PTR ds:[esi]
  41460f:	nop
  414610:	fmul   DWORD PTR [ebx-0x5b]
  414613:	push   esi
  414614:	in     al,dx
  414615:	aad    0xd9
  414617:	push   esi
  414618:	int    0xfe
  41461a:	test   al,0xcf
  41461c:	jns    0x4145ff
  41461e:	pop    ds
  41461f:	retf   
  414620:	or     ecx,DWORD PTR [ecx]
  414622:	xchg   ecx,eax
  414623:	pop    esi
  414624:	dec    esp
  414625:	or     ecx,ebp
  414627:	mov    bl,0x24
  414629:	shl    BYTE PTR [ecx],0xc5
  41462c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41462d:	dec    ebx
  41462e:	xor    ebx,DWORD PTR [edi+0x6b654a9e]
	...
  41465c:	popf   
  41465d:	(bad)  
  41465e:	pop    ebp
  41465f:	push   esi
  414660:	and    cl,BYTE PTR [eax]
  414662:	ret    
  414663:	add    esi,ecx
  414665:	or     BYTE PTR [esi-0x70],cl
  414668:	ror    BYTE PTR [ebx+0x45],0x56
  41466c:	in     al,dx
  41466d:	(bad)  
  41466e:	pextrw ebp,(bad),0xc5
  414670:	ins    BYTE PTR es:[edi],dx
  414671:	loopne 0x414672
  414673:	call   0xe94b0c68
  414678:	dec    eax
  414679:	dec    edx
  41467a:	mov    ah,0x65
  41467c:	dec    BYTE PTR [edx-0x2]
  41467f:	adc    DWORD PTR [ebp-0x62e900ed],esp
  414685:	xchg   ebp,eax
  414686:	mov    ds:0xe74b950f,eax
  41468b:	dec    ebp
  41468c:	inc    ebp
  41468d:	dec    edx
  41468e:	(bad)  
  41468f:	(bad)  
  414690:	mov    esp,0x7ef6fd55
  414695:	bound  eax,QWORD PTR ds:0xfb4b75be
  41469b:	sbb    cl,BYTE PTR [edi+0x76defe91]
  4146a1:	dec    ebx
  4146a2:	icebp  
  4146a3:	xchg   DWORD PTR [edi+0x2],esp
  4146a6:	pcmpgtb mm1,QWORD PTR [ebx+ecx*2-0x2]
  4146ab:	(bad)  
  4146ac:	mov    ebp,0x9caac8aa
  4146b1:	jle    0x41469e
  4146b3:	push   0xffffff8b
  4146b5:	pop    edx
  4146b6:	addr16 in al,dx
  4146b8:	imul   ecx,DWORD PTR [edx],0x8f9a100
  4146be:	ret    
  4146bf:	sahf   
	...
  4146e8:	ret    0x6737
  4146eb:	in     al,dx
  4146ec:	dec    ecx
  4146ed:	or     DWORD PTR [eax],eax
  4146ef:	adc    DWORD PTR [ebp-0x3d7900ee],0x13248837
  4146f9:	jg     0x4146cc
  4146fb:	add    DWORD PTR [eax+ecx*1-0x22cf1700],esp
  414702:	ss data16 (bad) 
  414705:	jle    0x4146d8
  414707:	jo     0x4146d5
  414709:	pop    ecx
  41470a:	addr16 in al,dx
  41470c:	dec    ecx
  41470d:	or     DWORD PTR [eax],eax
  41470f:	inc    ecx
  414710:	mov    ch,0x12
  414712:	inc    DWORD PTR [eax]
  414714:	or     eax,0x508bd080
  414719:	jle    0x41475e
  41471b:	clc    
  41471c:	jmp    0x8b13d137
  414721:	dec    ecx
  414722:	(bad)  
  414723:	jmp    DWORD PTR [edx-0x4c]
  414726:	jae    0x414724
  414728:	mov    eax,0x2b1be805
  41472d:	or     eax,0x92808b00
  414732:	sar    bh,1
  414734:	mov    bh,0xdc
  414736:	data16 add al,0x23
  414739:	or     eax,0x1498e800
  41473e:	add    BYTE PTR [eax],al
  414740:	sub    ebp,ecx
  414742:	jb     0x414753
  414744:	cdq    
  414745:	cli    
  414746:	dec    si
  414748:	pop    ecx
  414749:	dec    esp
  41474a:	(bad)  
  41474b:	inc    BYTE PTR [eax]
	...
  414771:	add    BYTE PTR [eax],al
  414773:	add    BYTE PTR [edi-0x15ce1923],ah
  414779:	or     al,0x0
  41477b:	mov    edx,eax
  41477d:	xor    bh,dh
  41477f:	imul   esp,edx,0xf26a0032
  414785:	xor    al,BYTE PTR [ecx]
  414787:	push   0xc0000cf2
  41478c:	lods   eax,DWORD PTR ds:[esi]
  41478d:	push   edi
  41478e:	out    dx,al
  41478f:	call   0x3f8d22
  414794:	sub    eax,DWORD PTR [edi-0x3356bf0e]
  41479a:	jae    0x4147e0
  41479c:	int    0x57
  41479e:	cli    
  41479f:	push   DWORD PTR [edi-0x4a001924]
  4147a5:	or     al,0x0
  4147a7:	push   0x4e
  4147a9:	xor    edi,esi
  4147ab:	(bad)  
  4147ac:	ja     0x41478a
  4147ae:	out    0x73,al
  4147b0:	fwait
  4147b1:	or     al,0x0
  4147b3:	or     ecx,DWORD PTR [ebx-0xe]
  4147b6:	into   
  4147b7:	or     ecx,DWORD PTR [ebx]
  4147b9:	dec    edx
  4147ba:	les    ecx,FWORD PTR [edx+0xa]
  4147bd:	xor    dh,BYTE PTR [edx+0x22f68e7]
  4147c3:	add    cl,dh
  4147c5:	xor    eax,ebp
  4147c7:	push   edx
  4147c9:	xor    ebp,eax
  4147cb:	jmp    edx
  4147cd:	xor    ch,dl
  4147cf:	dec    DWORD PTR [edx+esi*1+0x42]
  4147d3:	(bad)  
  4147d4:	mov    esi,0x956b22
	...
  4147fd:	add    BYTE PTR [eax],al
  4147ff:	add    BYTE PTR [edx+esi*1+0x2],al
  414803:	mov    DWORD PTR [esi-0x5f8c3eba],ecx
  414809:	call   0x9d6a:0x328a4aac
  414810:	inc    esp
  414811:	xor    al,BYTE PTR [edx]
  414813:	push   eax
  414814:	mov    ds:0x4b40bf08,eax
  414819:	addr16 fdiv st,st(3)
  41481c:	rep outs dx,DWORD PTR ds:[esi]
  41481e:	adc    al,0xff
  414820:	cld    
  414821:	add    DWORD PTR [ebx+0x74],edx
  414824:	call   FWORD PTR [ecx-0x32]
  414827:	push   es
  414828:	dec    ebx
  414829:	xor    ch,BYTE PTR [edx+0x6050b0a]
  41482f:	jmp    0x4147b9
  414831:	ja     0x41480b
  414833:	sti    
  414834:	arpl   WORD PTR [eax-0x58b4bf42],dx
  41483a:	fdiv   st,st(7)
  41483c:	mov    bl,0xe5
  41483e:	sti    
  41483f:	(bad)  
  414840:	mov    esp,0x230b47b2
  414845:	retf   0x40be
  414848:	dec    ebx
  414849:	call   0xbffd:0x324b0694
  414850:	pop    ss
  414851:	push   esp
  414852:	fisubr DWORD PTR [ecx+0x3a80900]
  414858:	sti    
  414859:	xor    BYTE PTR [eax-0x1df6b4f5],dl
  41485f:	inc    ebx
  414860:	clc    
  414861:	sbb    eax,ebx
  414863:	add    eax,DWORD PTR [eax]
	...
  414889:	add    BYTE PTR [eax],al
  41488b:	add    cl,ah
  41488d:	or     BYTE PTR [esi-0x27],al
  414890:	je     0x4148d9
  414892:	mov    bl,0x53
  414894:	in     al,dx
  414895:	leave  
  414896:	inc    esp
  414898:	pop    esp
  414899:	mov    cl,0xe8
  41489b:	push   edx
  41489c:	test   BYTE PTR [edi-0x65],al
  41489f:	dec    edi
  4148a0:	fs stc 
  4148a2:	(bad)  
  4148a3:	push   edx
  4148a4:	inc    ebp
  4148a5:	inc    edi
  4148a6:	fwait
  4148a7:	push   ebx
  4148a8:	and    al,0xf1
  4148aa:	(bad)  
  4148ab:	push   edx
  4148ac:	xor    eax,0x244b7b47
  4148b1:	jmp    0x51669b6c
  4148b6:	sub    DWORD PTR [ebx+0x664bb179],edi
  4148bc:	push   esp
  4148bd:	or     ecx,esp
  4148bf:	aad    0x4b
  4148c1:	dec    edx
  4148c2:	fisttp QWORD PTR [esi+0x3e9094b]
  4148c8:	mov    esp,0xf4c52167
  4148cd:	mov    al,0xe7
  4148cf:	mov    edx,0x532478e4
  4148d4:	in     eax,0xea
  4148d6:	nop
  4148d7:	dec    edi
  4148d8:	sbb    DWORD PTR [ecx+0x6f],ecx
  4148db:	push   edx
  4148dc:	aad    0x46
  4148de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148df:	push   ebp
  4148e0:	sahf   
  4148e1:	add    esi,esp
  4148e3:	fsubr  DWORD PTR [edx+edx*4+0x4a1daea9]
  4148ea:	xor    edi,DWORD PTR [edi-0x60]
  4148ed:	mov    ch,BYTE PTR [ebx+edx*2+0x0]
	...
  414918:	sbb    DWORD PTR [ecx+0x9646593],esi
  41491e:	add    BYTE PTR [ecx+0x76],dh
  414921:	or     ebx,eax
  414923:	outs   dx,BYTE PTR ds:[esi]
  414924:	int    0x5
  414926:	rcl    BYTE PTR [edi],1
  414928:	xchg   BYTE PTR [esi-0x2],al
  41492b:	aad    0x7e
  41492d:	mov    edi,DWORD PTR [ecx+esi*1]
  414930:	sub    cl,al
  414932:	(bad)  
  414933:	call   0x4c45ad4
  414938:	cmp    esi,esp
  41493a:	inc    eax
  41493b:	jmp    0x2460588
  414940:	pop    es
  414941:	jecxz  0x41490b
  414943:	sub    dh,BYTE PTR ds:0x41cde762
  414949:	or     DWORD PTR [eax],eax
  41494b:	ins    BYTE PTR es:[edi],dx
  41494c:	add    eax,DWORD PTR [edx+0x51]
  41494f:	add    DWORD PTR [eax-0x2a],0xfffffffe
  414953:	hlt    
  414954:	js     0x41494a
  414956:	inc    eax
  414957:	jmp    0x654fcf89
  41495c:	cwde   
  41495d:	inc    esi
  41495e:	(bad)  
  41495f:	jmp    0xea3916f5
  414964:	dec    eax
  414965:	or     DWORD PTR [eax],eax
  414967:	je     0x41496d
  414969:	ds dec edi
  41496b:	push   ebx
  41496c:	dec    edi
  41496d:	mov    bl,0xff
  41496f:	inc    edx
  414970:	dec    eax
  414971:	inc    esi
  414972:	je     0x414941
  414974:	call   0x946:0x817d81d
  41497b:	test   eax,0x0
	...
  4149a4:	cld    
  4149a5:	scas   eax,DWORD PTR es:[edi]
  4149a6:	out    0x39,eax
  4149a8:	push   edx
  4149a9:	or     DWORD PTR [eax],eax
  4149ab:	push   0xffffff87
  4149ad:	shl    BYTE PTR [ecx+ecx*1-0x3a],0xc4
  4149b2:	imul   ecx
  4149b4:	pushf  
  4149b5:	(bad)  
  4149b7:	sbb    al,0xf
  4149b9:	cs jg  0x414990
  4149bc:	sbb    eax,DWORD PTR [edi-0x78]
  4149bf:	add    BYTE PTR [edi-0x1f],bl
  4149c2:	mov    eax,DWORD PTR [ebp-0x36]
  4149c5:	jl     0x4149c4
  4149c7:	jne    0x4149e3
  4149c9:	fdiv   DWORD PTR [ebx-0xc]
  4149cc:	dec    eax
  4149cd:	or     bh,bh
  4149cf:	jne    0x4149f7
  4149d1:	fcom   DWORD PTR [ebx]
  4149d3:	fcom   DWORD PTR [edx+ecx*2-0x2]
  4149d7:	or     dh,BYTE PTR [edx]
  4149d9:	popa   
  4149da:	sub    al,0x8b
  4149dc:	scas   eax,DWORD PTR es:[edi]
  4149dd:	fisttp QWORD PTR [ecx-0x11b208f0]
  4149e3:	push   eax
  4149e4:	rcr    al,0x13
  4149e7:	fadd   QWORD PTR [edx+ecx*2-0x2]
  4149eb:	or     ah,BYTE PTR [edx]
  4149ed:	popa   
  4149ee:	sbb    BYTE PTR [eax+0x13],ch
  4149f1:	test   BYTE PTR [edi],bh
  4149f3:	add    BYTE PTR [ebp+0x5c],ah
  4149f6:	out    dx,al
  4149f7:	call   0x415944
  4149fc:	sub    ecx,ecx
  4149fe:	jae    0x414a01
  414a00:	loope  0x4149db
  414a02:	jae    0x4149f4
  414a04:	cmp    bl,BYTE PTR [esi+eax*1]
	...
  414a2f:	add    BYTE PTR [edx],dh
  414a31:	fidiv  DWORD PTR [ebx-0xc]
  414a34:	dec    edx
  414a35:	inc    edx
  414a36:	xor    edi,edi
  414a38:	and    eax,0x1afc73da
  414a3d:	adc    al,BYTE PTR [esi]
  414a3f:	add    dl,dh
  414a41:	(bad)
  414a44:	stos   DWORD PTR es:[edi],eax
  414a45:	int    0x53
  414a47:	mov    edx,DWORD PTR [esi]
  414a49:	mov    dl,al
  414a4b:	shl    BYTE PTR [ecx+ebx*8-0x6c75ac03],0xe1
  414a53:	inc    eax
  414a54:	loop   0x414a26
  414a56:	jo     0x414a59
  414a58:	mov    eax,ds:0xb33d81d9
  414a5d:	pop    ds
  414a5e:	inc    ecx
  414a5f:	add    BYTE PTR [ebx+0x32],cl
  414a62:	(bad)  
  414a63:	sbb    cl,al
  414a65:	push   ebp
  414a66:	add    eax,0x2320a29
  414a6b:	je     0x414aa6
  414a6d:	scas   eax,DWORD PTR es:[edi]
  414a6e:	or     eax,0x3f16dd0
  414a73:	add    BYTE PTR [edi],bl
  414a75:	sub    DWORD PTR [ebx-0x3ce388c4],eax
  414a7b:	inc    DWORD PTR [ebp+ebx*2+0x778b2b05]
  414a82:	cmp    edx,eax
  414a84:	and    bh,dh
  414a86:	dec    edi
  414a87:	adc    al,0x4a
  414a89:	sbb    ebx,eax
  414a8b:	call   ebx
  414a8d:	ins    DWORD PTR es:[edi],dx
  414a8e:	push   esi
  414a8f:	mov    dh,0xee
  414a92:	push   eax
  414a93:	inc    BYTE PTR [eax]
	...
  414ab9:	add    BYTE PTR [eax],al
  414abb:	add    BYTE PTR [edx+ecx*1+0x3],dl
  414abf:	add    BYTE PTR [ebx-0x68],cl
  414ac2:	add    ch,BYTE PTR [edx+0x49]
  414ac5:	sbb    bl,BYTE PTR [edx-0x7ccdb4fb]
  414acb:	div    DWORD PTR [ebx+eiz*2]
  414ace:	xchg   BYTE PTR ds:0x8902324a,bl
  414ad4:	into   
  414ad5:	stc    
  414ad6:	push   eax
  414ad7:	(bad)  
  414ad8:	sbb    al,0xad
  414ada:	test   ebx,ecx
  414adc:	adc    eax,0xc4f4e33
  414ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ae2:	cmp    edi,ebp
  414ae4:	add    al,0x63
  414ae6:	pop    ebx
  414ae7:	lea    eax,[ebp+0x32]
  414aea:	add    cl,BYTE PTR [ebx]
  414aec:	or     esp,DWORD PTR [ebx-0x7a]
  414aef:	repnz dec ebx
  414af1:	xor    al,BYTE PTR [edx]
  414af3:	push   0xffc4f70f
  414af8:	iret   
  414af9:	mov    ah,0x53
  414afb:	std    
  414afc:	aam    0x72
  414afe:	mov    bl,0xe7
  414b00:	cmp    cl,BYTE PTR [ecx]
  414b02:	out    dx,al
  414b03:	add    ecx,DWORD PTR [ebx+0x10]
  414b06:	test   eax,0xe847c8ff
  414b0b:	add    ecx,DWORD PTR [ebx+0x4c]
  414b0e:	arpl   WORD PTR [eax-0x52],cx
  414b11:	inc    ebx
  414b12:	test   DWORD PTR [ebx+ecx*2],eax
  414b15:	or     ecx,ebp
  414b17:	add    bh,0x4c
  414b1a:	jbe    0x414b6b
  414b1c:	xchg   ebp,eax
  414b1d:	fsubr  DWORD PTR [ebp-0x67]
	...
  414b48:	js     0x414b8c
  414b4a:	gs dec edi
  414b4c:	test   DWORD PTR ds:0x90a1ce4,ebx
  414b52:	bound  edi,QWORD PTR [ecx-0x78]
  414b55:	inc    edx
  414b56:	dec    ebp
  414b57:	dec    edi
  414b58:	inc    ecx
  414b59:	dec    ecx
  414b5a:	cmc    
  414b5b:	xchg   DWORD PTR [eax+ecx*1-0x21dffc17],edi
  414b62:	cmp    al,0xff
  414b64:	iret   
  414b65:	xchg   ebx,eax
  414b66:	call   0x5b85966e
  414b6b:	cmp    BYTE PTR [esi+0x43],al
  414b6e:	sbb    eax,0xe8ab3cda
  414b73:	add    ecx,DWORD PTR [ebx+0x7]
  414b76:	add    DWORD PTR [ecx],esp
  414b78:	inc    ebp
  414b79:	or     ecx,ebp
  414b7b:	cli    
  414b7c:	in     al,0xbd
  414b7e:	jg     0x414bfc
  414b80:	xchg   DWORD PTR [ecx+0x63],eax
  414b83:	leave  
  414b84:	adc    dl,bl
  414b86:	sbb    BYTE PTR [edx+0x4b],0x7
  414b8a:	jmp    0xdd82cadd
  414b8f:	clc    
  414b90:	or     al,0xf4
  414b92:	daa    
  414b93:	add    al,0x40
  414b95:	dec    ecx
  414b96:	push   esp
  414b97:	lods   al,BYTE PTR ds:[esi]
  414b98:	in     eax,dx
  414b99:	mov    esp,0x5d3f4ec4
  414b9e:	push   cs
  414b9f:	(bad)
  414ba2:	add    BYTE PTR [ecx-0x59bcfe04],ch
  414ba8:	ret    
  414ba9:	cmp    ch,0xa6
	...
  414bd4:	adc    eax,0x48e9fe42
  414bd9:	xchg   esp,eax
  414bda:	test   BYTE PTR [ecx+0x39fe4306],ch
  414be0:	pop    DWORD PTR [ebx]
  414be2:	add    dh,dh
  414be4:	dec    eax
  414be5:	xor    DWORD PTR [esi-0x19],ebx
  414be8:	dec    eax
  414be9:	or     DWORD PTR [ebx],ecx
  414beb:	test   eax,0x2c831d73
  414bf0:	or     BYTE PTR [esi+edi*8+0x66],al
  414bf4:	dec    eax
  414bf5:	mov    ebp,0x82e35e0b
  414bfa:	std    
  414bfb:	push   esi
  414bfc:	add    eax,0x4fa70493
  414c01:	enter  0x51ff,0x39
  414c05:	sbb    DWORD PTR cs:[esi],edi
  414c08:	cmp    DWORD PTR [esi],0xffffffe7
  414c0b:	jge    0x414c59
  414c0d:	or     DWORD PTR [eax],eax
  414c0f:	cs jae 0x414c4c
  414c12:	out    0x55,eax
  414c14:	dec    esp
  414c15:	or     DWORD PTR [eax],eax
  414c17:	adc    al,BYTE PTR [eax+0x43]
  414c1a:	je     0x414c2d
  414c1c:	nop
  414c1d:	push   0x9448e903
  414c22:	test   BYTE PTR ds:0x99fe4396,dh
  414c28:	lea    edi,[ebp-0x39]
  414c2b:	test   DWORD PTR [esi+0x4345e743],0x4cd00009
  414c35:	inc    edx
  414c36:	(bad)  
  414c37:	fiadd  WORD PTR [eax]
	...
  414c5d:	add    BYTE PTR [eax],al
  414c5f:	add    BYTE PTR [esi-0x79283883],cl
  414c65:	inc    ebx
  414c66:	out    0x69,eax
  414c68:	inc    ebx
  414c69:	or     DWORD PTR [eax],eax
  414c6b:	add    BYTE PTR [ecx-0x38],bl
  414c6e:	pop    ecx
  414c6f:	leave  
  414c70:	mov    cl,0x79
  414c72:	mov    esp,ebp
  414c74:	popa   
  414c75:	rcr    esi,1
  414c77:	push   ebx
  414c78:	mov    dl,BYTE PTR [ebx]
  414c7a:	in     eax,0x40
  414c7c:	mov    dl,0xcd
  414c7e:	jo     0x414c81
  414c80:	icebp  
  414c81:	rol    DWORD PTR [ecx+0x4123023d],cl
  414c87:	add    BYTE PTR [edx-0x707cf8a7],ah
  414c8d:	mov    cl,0x2c
  414c8f:	inc    ecx
  414c90:	mov    dl,0x5
  414c92:	jne    0x414c99
  414c94:	mov    ebp,eax
  414c96:	pop    ecx
  414c97:	leave  
  414c98:	loope  0x414c65
  414c9a:	inc    ebx
  414c9b:	cld    
  414c9c:	jb     0x414ca3
  414c9e:	add    BYTE PTR [eax],al
  414ca0:	and    eax,0x6200f64a
  414ca5:	add    eax,0xe1a7c700
  414caa:	(bad)  
  414cab:	push   DWORD PTR [edx+0x5]
  414cae:	mov    DWORD PTR [ebp+0x16],0x6200000d
  414cb5:	int3   
  414cb6:	inc    ebx
  414cb7:	lock bound eax,QWORD PTR ds:0x48bf0000
  414cbe:	out    dx,al
  414cbf:	push   eax
  414cc0:	scas   eax,DWORD PTR es:[edi]
  414cc1:	dec    eax
  414cc2:	repnz push eax
	...
  414cec:	scas   eax,DWORD PTR es:[edi]
  414ced:	dec    eax
  414cee:	jmp    0x4e45:0x8bcdc850
  414cf5:	jne    0x414d5f
  414cf7:	add    bh,BYTE PTR [eax+0x1d006a09]
  414cfd:	cmp    BYTE PTR [esi-0x76f31cd2],bl
  414d03:	inc    ebp
  414d04:	sbb    cl,BYTE PTR [edx+0x58f2e87b]
  414d0a:	pop    es
  414d0b:	or     DWORD PTR [ebx-0x2b],0x324be95b
  414d12:	add    dh,BYTE PTR [ebp+0x5f]
  414d15:	inc    edi
  414d16:	aad    0xfb
  414d18:	int3   
  414d19:	in     eax,0x4b
  414d1b:	adc    BYTE PTR [esi+0x7a],0x2
  414d1f:	je     0x414d92
  414d21:	stos   DWORD PTR es:[edi],eax
  414d22:	lods   eax,DWORD PTR ds:[esi]
  414d23:	div    DWORD PTR [eax+0x33724b27]
  414d29:	call   0x4479:0x97b441d5
  414d30:	stos   DWORD PTR es:[edi],eax
  414d31:	(bad)  
  414d32:	psubsb mm6,QWORD PTR [eax]
  414d35:	hlt    
  414d36:	dec    esp
  414d37:	(bad)  
  414d38:	push   eax
  414d39:	jb     0x414d11
  414d3b:	and    al,dl
  414d3d:	in     eax,dx
  414d3e:	imul   edi,DWORD PTR [bx],0x84315c8a
  414d45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d46:	dec    ebx
  414d47:	je     0x414db4
  414d49:	scas   eax,DWORD PTR es:[edi]
  414d4a:	ret    0x7407
  414d4d:	pop    ebp
  414d4e:	data16 mov es,WORD PTR [eax]
	...
  414d75:	add    BYTE PTR [eax],al
  414d77:	add    BYTE PTR [ebx],cl
  414d79:	es dec ebx
  414d7b:	xor    al,0x43
  414d7d:	jnp    0x414d40
  414d7f:	dec    ebp
  414d81:	xor    bl,BYTE PTR [edi+0x2710017]
  414d87:	or     DWORD PTR [eax+0x374c4b76],0xffffffb3
  414d8e:	int    0xeb
  414d90:	dec    ebx
  414d91:	xchg   ebp,eax
  414d92:	xchg   esi,edi
  414d94:	mov    esi,0xcf144c16
  414d99:	jg     0x414d5c
  414d9b:	dec    DWORD PTR ds:0x1cff4e6d
  414da1:	xor    al,BYTE PTR [edx]
  414da3:	adc    DWORD PTR [esi+0xcff590a],0xf204d532
  414dad:	or     BYTE PTR [ebp+0x4b],al
  414db0:	std    
  414db1:	aas    
  414db2:	imul   ecx,ecx,0xfd5d08f0
  414db8:	in     eax,dx
  414db9:	mov    ch,0xcc
  414dbb:	dec    ebx
  414dbc:	aas    
  414dbd:	popf   
  414dbe:	push   ss
  414dbf:	(bad)
  414dc2:	out    0x3,eax
  414dc4:	dec    ebx
  414dc5:	or     DWORD PTR [edx],edx
  414dc7:	cmp    eax,0x5861d609
  414dcc:	leave  
  414dcd:	inc    esp
  414dce:	mov    esp,0x23b115b7
  414dd3:	bound  esi,QWORD PTR [ecx+ecx*1-0x6f]
  414dd7:	(bad)  
  414dd8:	dec    ebx
  414dd9:	dec    esp
  414dda:	lea    eax,[edi+0x0]
	...
  414e04:	addr16 push ebp
  414e06:	(bad)  
  414e07:	les    ebx,FWORD PTR [edi+edi*1-0x236030c]
  414e0e:	mov    BYTE PTR [edx],bl
  414e10:	or     cl,BYTE PTR [ecx]
  414e12:	jmp    0x29359ce7
  414e17:	stos   DWORD PTR es:[edi],eax
  414e18:	and    DWORD PTR [edx+0x29],edx
  414e1b:	jg     0x414e74
  414e1d:	and    DWORD PTR [edx+0x77306cc4],esp
  414e23:	add    eax,0x2051094b
  414e28:	pop    edi
  414e29:	aas    
  414e2a:	cmp    eax,0xa21d1787
  414e2f:	les    ecx,FWORD PTR [edi+edi*1-0x4c]
  414e33:	repnz inc ebp
  414e35:	mov    ebx,0x1d774aec
  414e3a:	mov    dl,0xc4
  414e3c:	xor    al,0x27
  414e3e:	inc    esi
  414e3f:	pop    es
  414e40:	dec    ebx
  414e41:	or     edx,esp
  414e43:	inc    ebx
  414e44:	lahf   
  414e45:	add    al,0x10
  414e47:	fimul  WORD PTR [ebx+0x9]
  414e4a:	jmp    0xff7edd91
  414e4f:	call   0x5c41579c
  414e54:	or     al,BYTE PTR [ebx+0x4f]
  414e57:	push   ebx
  414e58:	inc    edi
  414e59:	mov    bl,0x1
  414e5b:	ficomp WORD PTR ds:0x81e96a0b
  414e61:	mov    ebx,0x5edbce03
  414e66:	sub    eax,0x28
	...
  414e8f:	add    BYTE PTR [edi+0x12],al
  414e92:	shl    BYTE PTR ds:0xe988304a,0x48
  414e99:	or     edi,edi
  414e9b:	cmp    cl,BYTE PTR [ebx+0x31]
  414e9e:	pop    ecx
  414e9f:	sub    BYTE PTR [eax],dl
  414ea1:	aas    
  414ea2:	mov    BYTE PTR [edi+eax*1],ah
  414ea5:	aas    
  414ea6:	jb     0x414e95
  414ea8:	adc    BYTE PTR [ecx+eax*1],ch
  414eab:	jmp    0xfd4027f8
  414eb0:	adc    dh,cl
  414eb2:	(bad)  
  414eb3:	cli    
  414eb4:	xchg   esp,eax
  414eb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414eb6:	jmp    edi
  414eb8:	dec    eax
  414eb9:	or     DWORD PTR [eax-0x17],ebp
  414ebc:	test   BYTE PTR [esi],bh
  414ebe:	(bad)  
  414ebf:	push   ecx
  414ec0:	jmp    0x414ecc
  414ec2:	add    cl,ch
  414ec4:	jne    0x414f44
  414ec6:	jae    0x414eca
  414ec8:	or     ch,al
  414eca:	sti    
  414ecb:	jmp    0x74415818
  414ed0:	mov    eax,DWORD PTR [edx+0x4f]
  414ed3:	ror    DWORD PTR [eax-0x4d],cl
  414ed6:	add    DWORD PTR [esi],esi
  414ed8:	jnp    0x414f10
  414eda:	imul   ebp,ecx,0x2603bb91
  414ee0:	cmp    ebx,DWORD PTR [esi+0x2d]
  414ee3:	test   al,0x48
  414ee5:	adc    al,al
  414ee7:	popf   
  414ee8:	cs aas 
  414eea:	je     0x414efd
  414eec:	and    BYTE PTR [eax+esi*1+0x0],0x45
  414ef1:	shr    ecx,cl
  414ef3:	xor    BYTE PTR [eax],al
	...
  414f19:	add    BYTE PTR [eax],al
  414f1b:	add    BYTE PTR ds:0x76e8f64e,dl
  414f21:	adc    eax,0xa35ffff
  414f26:	and    BYTE PTR [ecx-0xe],al
  414f29:	enter  0xfc43,0xe2
  414f2d:	or     DWORD PTR [eax],eax
  414f2f:	add    BYTE PTR [edi+0x7e],ah
  414f32:	cli    
  414f33:	push   eax
  414f34:	mov    BYTE PTR ds:0x5f3d026a,al
  414f3a:	(bad)  
  414f3b:	(bad)  
  414f3c:	adc    DWORD PTR [ecx],ecx
  414f3e:	call   DWORD PTR ds:0x412302
  414f44:	test   eax,0x1b840dc9
  414f49:	add    eax,0x7ded0000
  414f4e:	(bad)  
  414f4f:	and    BYTE PTR [edx+0x6fc70009],ah
  414f55:	icebp  
  414f56:	(bad)  
  414f57:	push   DWORD PTR [edx-0x518c00f7]
  414f5d:	rol    BYTE PTR [ebx-0x20],0x15
  414f61:	push   esp
  414f62:	push   es
  414f63:	(bad)  
  414f64:	das    
  414f65:	test   eax,0x51a45c5
  414f6a:	add    BYTE PTR [eax],al
  414f6c:	(bad)  
  414f6d:	enter  0xec43,0x62
  414f71:	or     DWORD PTR [eax],eax
  414f73:	add    BYTE PTR ds:0x7200ee7e,ch
  414f79:	or     DWORD PTR [eax],eax
  414f7b:	(bad)  
  414f7c:	scas   eax,DWORD PTR es:[edi]
  414f7d:	int    0xfe
  414f7f:	inc    DWORD PTR [eax]
	...
  414fa5:	add    BYTE PTR [eax],al
  414fa7:	add    BYTE PTR [edx+0x9],ah
  414faa:	lea    eax,[ebp+0x5a]
  414fad:	jne    0x414fac
  414faf:	jne    0x415017
  414fb1:	(bad)  [esp+eax*1]
  414fb4:	and    cl,BYTE PTR [ecx]
  414fb6:	or     eax,eax
  414fb8:	dec    ebx
  414fb9:	sahf   
  414fba:	jmp    0x5274:0x416a682
  414fc1:	add    ecx,edi
  414fc3:	repz les esp,FWORD PTR ds:0x328a28c0
  414fca:	aas    
  414fcb:	inc    esp
  414fcc:	pop    ds
  414fcd:	xor    al,BYTE PTR [edx]
  414fcf:	add    BYTE PTR [ebx+0x57],cl
  414fd2:	inc    esi
  414fd4:	mov    ?,WORD PTR [esi+0x2]
  414fd7:	add    BYTE PTR [ebx+0x32],cl
  414fda:	inc    edi
  414fdb:	je     0x414fc4
  414fdd:	dec    ebx
  414fde:	in     eax,dx
  414fdf:	shr    DWORD PTR ds:0xb0b03f1,cl
  414fe5:	imul   ecx
  414fe7:	out    0xb0,eax
  414fe9:	jl     0x415032
  414feb:	dec    al
  414fed:	sub    eax,0x320a2d36
  414ff2:	add    dh,BYTE PTR [ebp+ecx*2-0x65]
  414ff6:	in     eax,dx
  414ff7:	retf   
  414ff8:	pop    ebp
  414ff9:	icebp  
  414ffa:	add    eax,edi
  414ffc:	dec    esi
  414ffd:	in     al,0x1a
  414fff:	inc    ecx
  415000:	dec    ebx
  415001:	xor    DWORD PTR [edx],eax
  415003:	add    bl,cl
  415005:	scas   eax,DWORD PTR es:[edi]
  415006:	(bad)
  415009:	ds sti 
  41500b:	inc    BYTE PTR [eax]
	...
  415031:	add    BYTE PTR [eax],al
  415033:	add    dh,bh
  415035:	mov    ch,0x47
  415037:	je     0x4150b8
  415039:	fisubr DWORD PTR ds:0x47324b02
  41503f:	je     0x4150b0
  415041:	retf   0x43
  415044:	dec    ebx
  415045:	xor    al,BYTE PTR [esi+0x32]
  415048:	mov    ecx,DWORD PTR [ecx-0x4ab01b9]
  41504e:	push   esp
  41504f:	lods   eax,DWORD PTR ds:[esi]
  415050:	adc    ebp,DWORD PTR [ebx]
  415052:	test   DWORD PTR [ecx+ebp*2-0x2f01b815],0x11fd0208
  41505d:	or     al,0x64
  41505f:	loopne 0x41508f
  415061:	cmp    al,0x15
  415063:	mov    ecx,DWORD PTR [ebx+0x9]
  415066:	jmp    0x3021cc6e
  41506b:	inc    esp
  41506c:	jg     0x414ffe
  41506e:	or     al,0x84
  415070:	or     BYTE PTR ds:0xc8eced80,bh
  415076:	call   0xaa4bcac6
  41507b:	inc    edi
  41507c:	bound  ecx,QWORD PTR [ecx]
  41507e:	shl    DWORD PTR ds:0x5be9094a,1
  415084:	out    0xfe,al
  415086:	int    0x47
  415088:	in     al,0x95
  41508a:	mov    ecx,0x84b0d547
  41508f:	push   ss
  415090:	mov    cl,BYTE PTR [ecx]
  415092:	inc    ecx
  415093:	sub    BYTE PTR [eax-0x36],dh
  415096:	call   0x4150f6
	...
  4150bf:	add    BYTE PTR [edi+0x0],cl
  4150c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150c3:	inc    edi
  4150c4:	sub    al,0x2d
  4150c6:	into   
  4150c7:	les    ebp,FWORD PTR [ebx+eiz*4+0x90a15c3]
  4150ce:	add    DWORD PTR [esi+0x62],0xecdc853c
  4150d5:	jmp    0xc4c4:0x33230427
  4150dc:	test   BYTE PTR [ebx],ah
  4150de:	jge    0x4150ea
  4150e0:	jl     0x41511d
  4150e2:	rcr    bl,1
  4150e4:	and    ecx,edx
  4150e6:	call   0xa83353c6
  4150eb:	add    esi,DWORD PTR [ebx+0x28]
  4150ee:	adc    al,BYTE PTR [edi+0x5d]
  4150f1:	mov    al,0x64
  4150f3:	push   ss
  4150f4:	or     cl,BYTE PTR [ecx]
  4150f6:	rcl    DWORD PTR [eax+eiz*1-0x5f170036],1
  4150fd:	pop    ecx
  4150fe:	cmp    DWORD PTR [esi],ebp
  415100:	test   BYTE PTR [edx+0x3b0fd000],ah
  415106:	data16 sub BYTE PTR [edi-0x38],cl
  41510a:	inc    DWORD PTR [eax]
  41510c:	mov    DWORD PTR [eax],eax
  41510e:	dec    DWORD PTR [esi]
  415110:	jg     0x415115
  415112:	cli    
  415113:	push   es
  415114:	mov    WORD PTR [edx],fs
  415116:	xor    al,0x3
  415118:	test   BYTE PTR [ebx],bh
  41511a:	or     ch,BYTE PTR [ecx]
  41511c:	sbb    ebx,DWORD PTR [eax]
  41511e:	call   0xfe7ce302
  415123:	repnz add BYTE PTR [eax],al
	...
  41514a:	add    BYTE PTR [eax],al
  41514c:	mov    BYTE PTR [esi+0x5f4ba609],dh
  415152:	dec    edx
  415153:	sub    BYTE PTR [edi+0x8],cl
  415156:	add    cl,ch
  415158:	dec    eax
  415159:	mov    cl,0x0
  41515b:	call   0xd7295aa8
  415160:	cmp    BYTE PTR [edx],bh
  415162:	dec    BYTE PTR [edx-0x16bf3054]
  415168:	jge    0x41512f
  41516a:	sti    
  41516b:	call   0x6c415abf
  415170:	mov    edi,DWORD PTR [esi]
  415172:	dec    edi
  415173:	xchg   esi,eax
  415174:	cmp    ebx,DWORD PTR ds:0x3147284b
  41517a:	push   0xb0948eb
  41517f:	test   eax,0xbcff157b
  415184:	ins    BYTE PTR es:[edi],dx
  415185:	iret   
  415186:	inc    eax
  415187:	jmp    0x666fa5ac
  41518c:	or     eax,0xb1fd0443
  415191:	leave  
  415192:	(bad)  
  415193:	call   0x41415ae0
  415198:	data16 hlt 
  41519a:	inc    BYTE PTR [eax]
  41519c:	or     eax,0xd3304de
  4151a1:	ret    
  4151a2:	push   si
  4151a4:	push   ebp
  4151a5:	inc    esp
  4151a6:	(bad)  
  4151a7:	out    0x31,eax
  4151a9:	xlat   BYTE PTR ds:[ebx]
  4151aa:	std    
  4151ab:	(bad)  
  4151ac:	jnp    0x415175
  4151ae:	push   ebx
  4151af:	mov    eax,DWORD PTR [eax]
	...
  4151d5:	add    BYTE PTR [eax],al
  4151d7:	add    BYTE PTR [esi],bh
  4151d9:	pop    esi
  4151da:	add    eax,0xf805f2e9
  4151df:	jb     0x415214
  4151e1:	(bad)  
  4151e2:	std    
  4151e3:	push   0x22
  4151e5:	fidivr WORD PTR [eax-0x47f9ddff]
  4151eb:	add    dl,dh
  4151ed:	add    eax,0x3a30c900
  4151f2:	(bad)  
  4151f3:	addr16 inc ebx
  4151f5:	fidivr WORD PTR [esi]
  4151f7:	add    dl,ch
  4151f9:	push   esi
  4151fa:	inc    edx
  4151fc:	std    
  4151fd:	pop    esp
  4151fe:	clc    
  4151ff:	call   0xa4295736
  415204:	jecxz  0x41520b
  415206:	add    al,ch
  415208:	test   al,0xc2
  41520a:	std    
  41520b:	dec    DWORD PTR [edx-0x12000f41]
  415211:	fcom   QWORD PTR [edx]
  415213:	cmc    
  415214:	in     eax,dx
  415215:	ret    
  415216:	out    0xfc,al
  415218:	xlat   BYTE PTR ds:[ebx]
  415219:	ret    
  41521a:	std    
  41521b:	cmp    DWORD PTR [edi-0x11],0x49
  41521f:	inc    ecx
  415220:	mov    dl,0x5
  415222:	je     0x41523d
  415224:	and    DWORD PTR [edx],eax
  415226:	int3   
  415227:	arpl   WORD PTR cs:0xc4747400,ax
  41522e:	adc    ecx,esp
  415230:	mov    esp,0x67c6fe46
  415235:	jnp    0x41525e
  415237:	inc    ecx
  415238:	bound  eax,QWORD PTR [esi]
	...
  415262:	add    BYTE PTR [eax],al
  415264:	dec    ebx
  415265:	mov    al,0x5b
  415267:	(bad)  
  415268:	pusha  
  415269:	retf   0xe744
  41526c:	add    ebx,0x44
  41526f:	dec    BYTE PTR [eax-0x741733a9]
  415275:	and    cl,BYTE PTR [edx+0x71]
  415278:	dec    edx
  415279:	jecxz  0x4152bf
  41527b:	out    0x5c,eax
  41527d:	and    DWORD PTR [edx],eax
  41527f:	add    BYTE PTR [ecx-0x6d556d3],ah
  415285:	pop    ss
  415286:	push   ebx
  415287:	and    BYTE PTR [ecx],0x2f
  41528a:	int    0x1
  41528c:	and    BYTE PTR ds:0xb023ea57,ah
  415292:	inc    esp
  415293:	inc    BYTE PTR [ebx+ecx*1]
  415296:	ins    BYTE PTR es:[edi],dx
  415297:	idiv   ah
  415299:	daa    
  41529a:	fdivr  st,st(7)
  41529c:	in     al,dx
  41529d:	push   ds
  41529e:	add    eax,DWORD PTR [eax]
  4152a0:	dec    ebx
  4152a1:	push   edi
  4152a2:	sbb    eax,0x3e18264
  4152a7:	jmp    DWORD PTR [esi]
  4152a9:	retf   0x40aa
  4152ac:	dec    ebx
  4152ad:	dec    edi
  4152ae:	sbb    eax,0x3e1726c
  4152b3:	jmp    FWORD PTR [esi-0xe]
  4152b6:	stos   BYTE PTR es:[edi],al
  4152b7:	inc    eax
  4152b8:	dec    ebx
  4152b9:	addr16 sbb eax,0x3e11274
  4152bf:	jmp    DWORD PTR [esi-0x16]
  4152c2:	stos   BYTE PTR es:[edi],al
  4152c3:	inc    eax
  4152c4:	dec    ebx
  4152c5:	lahf   
  4152c6:	sbb    eax,0x7c
	...
  4152ef:	add    BYTE PTR [edx],al
  4152f1:	loope  0x4152f6
  4152f3:	jmp    FWORD PTR [esi-0x5e]
  4152f6:	test   eax,0x1db74b40
  4152fb:	test   BYTE PTR [edx],ah
  4152fd:	loope  0x415302
  4152ff:	jmp    DWORD PTR [esi]
  415301:	stos   BYTE PTR es:[edi],al
  415302:	test   eax,0x66094b40
  415307:	push   ds
  415308:	mov    edi,0x6403a7d2
  41530d:	out    dx,al
  41530e:	js     0x4152ba
  415310:	or     ecx,DWORD PTR [ecx]
  415312:	dec    esi
  415313:	push   ds
  415314:	mov    edi,0x4c03a7d2
  415319:	out    dx,al
  41531a:	pusha  
  41531b:	stos   BYTE PTR es:[edi],al
  41531c:	mov    ecx,DWORD PTR [ecx]
  41531e:	ss push ds
  415320:	(bad)  
  415322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415323:	add    esi,DWORD PTR [esi+ebp*8]
  415326:	dec    eax
  415327:	stos   BYTE PTR es:[edi],al
  415328:	mov    ecx,DWORD PTR [ecx]
  41532a:	push   ds
  41532b:	push   ds
  41532c:	out    dx,eax
  41532d:	shl    DWORD PTR [edi+0x40ee1c03],1
  415333:	stos   BYTE PTR es:[edi],al
  415334:	mov    ecx,DWORD PTR [ecx]
  415336:	push   es
  415337:	push   ds
  415338:	(bad)  
  41533a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41533b:	add    eax,DWORD PTR [esi+ebp*8]
  41533e:	cmp    BYTE PTR [edx+0x1dee098b],ch
  415344:	mov    edi,0xec0427d1
  415349:	in     eax,dx
  41534a:	mov    al,ds:0xd6098bdd
  41534f:	jmp    0x46924f4
	...
  41537c:	aam    0xed
  41537e:	test   al,0xdd
  415380:	mov    ecx,DWORD PTR [ecx]
  415382:	mov    esi,0x27d188e9
  415387:	add    al,0xbc
  415389:	in     eax,dx
  41538a:	mov    al,ds:0xa6090bdd
  41538f:	jmp    0x4692514
  415394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415395:	in     eax,dx
  415396:	mov    eax,0x8e090bdd
  41539b:	jmp    0x4692518
  4153a0:	mov    ebp,gs
  4153a2:	mov    al,ds:0x90bdd
  4153a7:	jbe    0x41541b
  4153a9:	push   ebx
  4153aa:	pop    eax
  4153ab:	sub    BYTE PTR [edi+0x38],cl
  4153ae:	and    al,0x49
  4153b0:	mov    cs,eax
  4153b2:	call   FWORD PTR [ebp+0x72]
  4153b5:	sub    ebx,DWORD PTR [eax-0x58]
  4153b8:	dec    eax
  4153b9:	cmp    BYTE PTR [ecx+eax*2],ah
  4153bc:	jbe    0x415386
  4153be:	inc    DWORD PTR [ebp+0x62]
  4153c1:	and    ebx,DWORD PTR [eax-0x58]
  4153c4:	dec    eax
  4153c5:	ss and al,0x39
  4153c8:	push   ds
  4153c9:	retf   0x2dff
  4153cc:	and    bh,BYTE PTR [ebx]
  4153ce:	pop    eax
  4153cf:	test   al,0x48
  4153d1:	ss and al,0x21
  4153d4:	push   es
  4153d5:	retf   0x15ff
  4153d8:	xor    dh,BYTE PTR [ebx]
  4153da:	pop    eax
  4153db:	test   al,0x48
  4153dd:	ss and al,0xe9
	...
  415408:	out    dx,al
  415409:	leave  
  41540a:	(bad)  
  41540b:	std    
  41540c:	repz or bl,BYTE PTR [edx-0x58]
  415410:	dec    eax
  415411:	ss and al,0xe1
  415414:	push   ss
  415415:	retf   0xe5ff
  415418:	jecxz  0x41541c
  41541a:	pop    edx
  41541b:	sub    BYTE PTR [edi+0x36],cl
  41541e:	and    al,0xf9
  415420:	dec    cl
  415422:	dec    ebp
  415424:	jecxz  0x415440
  415426:	pop    edx
  415427:	sub    BYTE PTR [edi+0x36],al
  41542a:	and    al,0xe1
  41542c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41542d:	leave  
  41542e:	push   DWORD PTR [ebp+0x285a12b3]
  415434:	dec    edi
  415435:	ss and al,0xc9
  415438:	mov    cs,ecx
  41543a:	call   FWORD PTR [ebp+0x2859eab3]
  415440:	inc    edi
  415441:	ss and al,0xc1
  415444:	jbe    0x41540f
  415446:	(bad)  
  415447:	inc    ebp
  415449:	and    DWORD PTR [edx],ebp
  41544b:	pop    edx
  41544c:	xor    ecx,DWORD PTR ds:0x54c225ff
  415452:	aas    
  415453:	add    ch,ah
  415455:	and    BYTE PTR [esi],dh
  415457:	pop    edx
  415458:	mov    ds:0x4625ff0a,eax
  41545d:	push   edi
  41545e:	aas    
  41545f:	add    ch,dh
  415461:	and    BYTE PTR [esi],bh
  415463:	pop    edx
  415464:	mov    ds:0x9e25ff0a,eax
  415469:	push   esp
  41546a:	aas    
	...
  415493:	add    BYTE PTR [ebp-0xca5b9df],al
  415499:	or     edi,edi
  41549b:	and    eax,0x3f53d6
  4154a0:	and    DWORD PTR gs:[edx+0x5a],edx
  4154a4:	repz or edi,edi
  4154a7:	and    eax,0x3f53d6
  4154ac:	inc    ebp
  4154ad:	and    DWORD PTR [esi+0x5a],ebx
  4154b0:	jecxz  0x4154bb
  4154b2:	jmp    DWORD PTR ds:0x3f53ce
  4154b8:	cmc    
  4154b9:	sub    eax,0x9a35a66
  4154be:	jmp    DWORD PTR ds:0x3f5796
  4154c4:	add    eax,0x335a6e2e
  4154c9:	or     eax,0x577e25ff
  4154ce:	aas    
  4154cf:	add    BYTE PTR ds:0x735a762e,al
  4154d5:	or     eax,0x577625ff
  4154da:	aas    
  4154db:	add    ch,ah
  4154dd:	sub    eax,0xd635a7e
  4154e2:	jmp    DWORD PTR ds:0x3f571a
  4154e8:	dec    ebx
  4154e9:	lahf   
  4154ea:	out    0x8f,al
  4154ec:	icebp  
  4154ed:	loopne 0x4154f2
  4154ef:	jmp    DWORD PTR [esi-0x2c]
  4154f2:	fld    QWORD PTR [eax+0x4b]
  4154f5:	mov    bh,0xe6
  4154f7:	fwait
	...
  415520:	and    ecx,esp
  415522:	add    edi,edi
  415524:	cs rcr ch,0x40
  415528:	dec    ebx
  415529:	scas   eax,DWORD PTR es:[edi]
  41552a:	out    0xa3,al
  41552c:	add    DWORD PTR [ecx+0x2],esp
  41552f:	jmp    DWORD PTR [esi]
  415531:	mov    ch,bl
  415533:	inc    eax
  415534:	dec    ebx
  415535:	(bad)  
  415536:	out    0xab,al
  415538:	icebp  
  415539:	pusha  
  41553a:	add    bh,bh
  41553c:	outs   dx,BYTE PTR ds:[esi]
  41553d:	mov    dl,0xdd
  41553f:	inc    eax
  415540:	dec    ebx
  415541:	sti    
  415542:	out    0xb7,al
  415544:	xchg   ecx,eax
  415545:	popa   
  415546:	add    bh,bh
  415548:	data16 scas al,BYTE PTR es:[edi]
  41554a:	fld    QWORD PTR [eax+0x4b]
  41554d:	adc    esp,edi
  41554f:	mov    edi,0xff026181
  415554:	outs   dx,BYTE PTR ds:[esi]
  415555:	out    dx,al
  415556:	fld    QWORD PTR [eax+0x4b]
  415559:	or     esp,edi
  41555b:	(bad)  
  41555c:	mov    eax,ds:0x26ff0261
  415561:	out    dx,al
  415562:	fld    QWORD PTR [eax+0x4b]
  415565:	and    esp,ebp
  415567:	iret   
  415568:	xchg   ecx,eax
  415569:	loope  0x41556e
  41556b:	jmp    FWORD PTR [esi]
  41556d:	jle    0x41554b
  41556f:	inc    eax
  415570:	dec    ebx
  415571:	pop    ebx
  415572:	in     eax,0xd7
  415574:	jno    0x415557
  415576:	add    edi,edi
  415578:	outs   dx,BYTE PTR es:[esi]
  41557a:	fadd   QWORD PTR [eax+0x4b]
  41557d:	jae    0x415564
  41557f:	jecxz  0x4155a2
  415581:	loope  0x415586
  415583:	inc    DWORD PTR [eax]
	...
  4155a9:	add    BYTE PTR [eax],al
  4155ab:	add    BYTE PTR [esi+0x4a],ch
  4155ae:	fadd   QWORD PTR [eax+0x4b]
  4155b1:	or     DWORD PTR [ebp-0x53ba6fb1],esi
  4155b7:	dec    edi
  4155b8:	nop
  4155b9:	inc    ebp
  4155ba:	popa   
  4155bb:	(bad)  
  4155bc:	push   0x4a3b6a0d
  4155c1:	mov    dh,0xf0
  4155c3:	jnp    0x4155ad
  4155c5:	or     cl,ch
  4155c7:	add    ecx,DWORD PTR [ecx+0x7c84e90d]
  4155cd:	or     eax,0x7b30bec
  4155d2:	jmp    0xe488a0da
  4155d7:	add    ecx,eax
  4155d9:	xor    eax,esp
  4155db:	mov    esi,0x3e4714c
  4155e0:	dec    ebx
  4155e1:	or     DWORD PTR [ebx],ebp
  4155e3:	pop    es
  4155e4:	dec    ebx
  4155e5:	mov    BYTE PTR [eax+0x13],al
  4155e8:	mov    esi,0x4b097101
  4155ed:	or     ecx,ebp
  4155ef:	inc    ebp
  4155f0:	dec    eax
  4155f1:	or     DWORD PTR [edx+0x3b],ebp
  4155f4:	inc    esp
  4155f5:	mov    dh,0xf0
  4155f7:	jnp    0x41563d
  4155f9:	or     ecx,ebp
  4155fb:	add    ecx,DWORD PTR [ecx]
  4155fd:	or     eax,0xc91484e9
  415602:	or     DWORD PTR [ebx],0xffffffc3
  415605:	(bad)  
  415606:	call   0xec88a10e
  41560b:	add    esi,DWORD PTR [esi]
  41560d:	mov    eax,ebp
  41560f:	add    eax,DWORD PTR [eax]
	...
  415635:	add    BYTE PTR [eax],al
  415637:	add    BYTE PTR [ebx-0x4a],cl
  41563a:	lock jnp 0x41568d
  41563d:	or     ecx,ebp
  41563f:	add    ecx,DWORD PTR [ecx]
  415641:	or     eax,0xa4b00e9
  415646:	jmp    0x8142a44e
  41564b:	push   cs
  41564c:	dec    ebx
  41564d:	or     ecx,ebp
  41564f:	inc    ecx
  415650:	dec    eax
  415651:	or     DWORD PTR [eax],eax
  415653:	hlt    
  415654:	dec    eax
  415655:	pop    es
  415656:	add    cl,ch
  415658:	mov    ecx,DWORD PTR [ebx]
  41565a:	mov    eax,0x948f9
  41565f:	stos   DWORD PTR es:[edi],eax
  415660:	push   ebx
  415661:	or     DWORD PTR ds:0x94ce9,edi
  415667:	or     al,0x3f
  415669:	jno    0x41567c
  41566b:	jmp    0xe6035fb8
  415670:	dec    eax
  415671:	idiv   bh
  415673:	loopne 0x4156bd
  415675:	or     DWORD PTR [ebp-0x1f],edi
  415678:	lock pop ss
  41567a:	add    cl,ch
  41567c:	dec    eax
  41567d:	inc    edi
  41567e:	add    ebp,ecx
  415680:	dec    ebx
  415681:	or     DWORD PTR [eax],edx
  415683:	jmp    0x91490cd0
  415688:	xor    eax,0x8ae90009
  41568d:	push   es
  41568e:	add    ah,bh
  415690:	dec    eax
  415691:	jmp    0xb4d3f95
  415696:	mov    eax,0x948d1
  41569b:	sub    eax,DWORD PTR [eax]
	...
  4156c1:	add    BYTE PTR [eax],al
  4156c3:	add    BYTE PTR [ebx+0x9],dl
  4156c6:	cmp    eax,0xfe3308e9
  4156cb:	xchg   esp,eax
  4156cc:	inc    eax
  4156cd:	jno    0x4156e8
  4156cf:	jmp    0xee03601c
  4156d4:	dec    eax
  4156d5:	hlt    
  4156d6:	jmp    FWORD PTR [eax+0x47]
  4156d9:	or     DWORD PTR [ebp-0x1f],edi
  4156dc:	jo     0x4156ec
  4156de:	add    cl,ch
  4156e0:	dec    eax
  4156e1:	inc    edi
  4156e2:	add    ebp,ecx
  4156e4:	fld    DWORD PTR [ecx+0x3c]
  4156e7:	jmp    0xe6415f34
  4156ec:	stos   DWORD PTR es:[edi],eax
  4156ed:	dec    ecx
  4156ee:	mov    WORD PTR ds:0x8b133e,ds
  4156f4:	repz enter 0x2,0x31
  4156f9:	lea    ebx,[edx]
  4156fb:	add    al,0xa2
  4156fd:	push   es
  4156fe:	push   DWORD PTR [ebp+0x7f]
  415701:	jg     0x415782
  415703:	adc    BYTE PTR [esi+0x33890006],dh
  415709:	push   cs
  41570a:	add    al,0x0
  41570c:	mov    ds:0x9e81c546,al
  415711:	or     al,BYTE PTR [eax]
  415713:	add    BYTE PTR [edx+0x6],bh
  415716:	add    BYTE PTR [eax],al
  415718:	sti    
  415719:	mov    WORD PTR [esi],cs
  41571b:	add    al,0x62
  41571d:	push   es
  41571e:	cmp    DWORD PTR [esi+eax*4+0xa],0x0
  415723:	mov    ebx,ebx
  415725:	or     eax,0x4
	...
  41574e:	add    BYTE PTR [eax],al
  415750:	jb     0x4157cc
  415752:	or     DWORD PTR [edx-0x13ff79d],ecx
  415758:	and    bh,BYTE PTR [esi-0x1]
  41575b:	shl    DWORD PTR [esi],0x6
  41575e:	shl    BYTE PTR [ecx],1
  415760:	jo     0x41576c
  415762:	add    BYTE PTR [ebx+0x412a3],al
  415768:	and    dh,bl
  41576a:	jae    0x415789
  41576c:	cdq    
  41576d:	lea    ecx,[esi]
  41576f:	add    al,0x32
  415771:	push   es
  415772:	mov    DWORD PTR [ecx+0xa1a],eax
  415778:	loop   0x415744
  41577a:	jg     0x415798
  41577c:	test   BYTE PTR ds:0x5f20800,0x0
  415783:	mov    DWORD PTR [ebx+0x16],esp
  415786:	add    al,0x0
  415788:	loop   0x415808
  41578a:	xchg   DWORD PTR [eax],ebx
  41578c:	test   BYTE PTR ds:0xc853d000,0x81
  415793:	or     DWORD PTR [ebx+0x3c],0x434b0006
  41579a:	mov    dh,0x1c
  41579c:	shl    BYTE PTR [eax+0x204b0413],1
  4157a2:	mov    DWORD PTR [eax+0x22453],eax
  4157a8:	or     ebp,DWORD PTR [ebx-0x7e]
  4157ab:	sbb    ecx,DWORD PTR [edi+0x20]
  4157ae:	add    cl,BYTE PTR [eax]
  4157b0:	dec    ebx
  4157b1:	and    BYTE PTR [edx],al
  4157b3:	mov    DWORD PTR [eax],eax
	...
  4157d9:	add    BYTE PTR [eax],al
  4157db:	add    dl,cl
  4157dd:	das    
  4157de:	push   es
  4157df:	add    BYTE PTR [ebx-0x59],cl
  4157e2:	mov    dl,BYTE PTR [edi]
  4157e4:	dec    edi
  4157e5:	and    BYTE PTR [edx],al
  4157e7:	mov    cl,BYTE PTR [edx+0x1e]
  4157ea:	inc    edx
  4157eb:	std    
  4157ec:	mov    esp,DWORD PTR [edi-0x143f3cfe]
  4157f2:	out    0x3,eax
  4157f4:	shl    BYTE PTR [ebx-0x1a],1
  4157f7:	add    esi,esi
  4157f9:	jns    0x4157ce
  4157fb:	xor    bl,BYTE PTR [ebp-0x54]
  4157fe:	retf   0xc1ff
  415801:	xlat   BYTE PTR ds:[ebx]
  415802:	and    dh,0x4a
  415805:	adc    DWORD PTR [eax*2-0x7d2ca932],ebp
  41580c:	xor    esp,DWORD PTR [edx]
  41580e:	mov    bl,0xef
  415810:	enter  0x2f0,0xbd
  415814:	and    al,0xe8
  415816:	cmp    al,0xfe
  415818:	into   
  415819:	lea    ecx,[ecx]
  41581b:	je     0x4157b6
  41581d:	jae    0x4157a6
  41581f:	dec    BYTE PTR [edx-0x37]
  415822:	pop    ds
  415823:	add    al,0x4b
  415825:	and    dh,BYTE PTR [ebp+0x13a1d018]
  41582b:	add    al,0x4b
  41582d:	and    cl,BYTE PTR [ecx+0x2265380]
  415833:	add    BYTE PTR [ebx+0x407a7009],cl
  415839:	add    eax,0x8ac203e9
  41583e:	clc    
  41583f:	pop    es
	...
  415868:	dec    ebx
  415869:	or     DWORD PTR [edx-0x7e],esp
  41586c:	pop    esp
  41586d:	add    eax,0x4bb503e9
  415872:	out    0xb7,eax
  415874:	inc    edx
  415875:	adc    eax,0x1
  415878:	nop
  415879:	das    
  41587a:	test   eax,0xea243c8b
  41587f:	push   ebx
  415880:	cmp    al,0xa
  415882:	push   eax
  415883:	pop    ds
  415884:	dec    edi
  415885:	or     ecx,ebp
  415887:	mov    dh,0x33
  415889:	test   BYTE PTR [edi+0x13],ah
  41588c:	dec    edi
  41588d:	or     ecx,ebp
  41588f:	mov    cl,bl
  415891:	adc    ebp,esp
  415893:	add    ecx,DWORD PTR [ebx-0x37]
  415896:	pop    edi
  415897:	jp     0x4158e9
  415899:	add    eax,0x8ad203e9
  41589e:	clc    
  41589f:	pop    es
  4158a0:	dec    ebx
  4158a1:	or     DWORD PTR [edx-0x7e],esi
  4158a4:	cmp    al,0x5
  4158a6:	jmp    0xeb5319ae
  4158ab:	pop    eax
  4158ac:	inc    esi
  4158ad:	dec    esp
  4158ae:	pop    ss
  4158af:	sub    ecx,ecx
  4158b1:	push   ds
  4158b2:	out    0x8b,eax
  4158b4:	pop    esp
  4158b5:	mov    dh,0x5a
  4158b7:	fmul   DWORD PTR [ebx+0x62]
  4158ba:	int3   
  4158bb:	pop    es
  4158bc:	dec    ebx
  4158bd:	or     DWORD PTR [edx+ebx*1+0x7f889d0],ebx
  4158c4:	dec    ebx
  4158c5:	or     DWORD PTR [eax-0x7e],esp
  4158c8:	xor    al,0x5
  4158ca:	jmp    0x4158d2
	...
  4158f3:	add    BYTE PTR [ebx+0x471f3f82],cl
  4158f9:	or     ecx,ebp
  4158fb:	mov    cl,bl
  4158fd:	sbb    BYTE PTR [eax],al
  4158ff:	in     eax,dx
  415900:	dec    eax
  415901:	or     DWORD PTR [ebx+0x54068],ecx
  415907:	jmp    0x5541a326
  41590c:	inc    ebp
  41590d:	or     DWORD PTR [edi],0xffffffeb
  415910:	jbe    0x415940
  415912:	shl    DWORD PTR [ecx+0x5f],0x24
  415916:	add    DWORD PTR [ecx-0x2256f759],ebx
  41591c:	mov    ah,0x2f
  41591e:	(bad)  
  41591f:	cmp    al,0x4e
  415921:	test   BYTE PTR [eax-0x1d05b27],al
  415927:	jo     0x4158ef
  415929:	pop    ss
  41592a:	add    al,0xe9
  41592c:	dec    eax
  41592d:	leave  
  41592e:	mov    BYTE PTR [eax+0x33],dl
  415931:	add    eax,0x88d7e900
  415936:	paddsw mm1,QWORD PTR [eax+0x9]
  41593a:	mov    esi,DWORD PTR [eax+0x57]
  41593d:	add    eax,0xe918e900
  415942:	pop    esi
  415943:	jb     0x762a5c92
  415949:	aam    0x8a
  41594b:	int    0x74
  41594d:	call   DWORD PTR [ebp+0x1a]
  415950:	pop    es
  415951:	xlat   BYTE PTR ds:[ebx]
  415952:	or     BYTE PTR [eax+edx*2-0x49],0x4
  415957:	test   BYTE PTR [eax],al
	...
  41597d:	add    BYTE PTR [eax],al
  41597f:	add    BYTE PTR [eax+0x9],dl
  415982:	add    cl,ch
  415984:	lds    esi,FWORD PTR [edx+0x37bddd23]
  41598a:	sub    dh,BYTE PTR [edx+edx*8]
  41598d:	stos   BYTE PTR es:[edi],al
  41598e:	and    ebp,ecx
  415990:	into   
  415991:	je     0x8b5034d9
  415997:	and    al,0xbc
  415999:	push   esp
  41599a:	mov    WORD PTR [edx+0x4f],?
  41599d:	or     DWORD PTR [eax],eax
  41599f:	add    dl,dh
  4159a1:	sub    al,0x18
  4159a3:	je     0x415991
  4159a5:	cmp    eax,0x782b8540
  4159aa:	hlt    
  4159ab:	xor    DWORD PTR [edx],0xa
  4159ae:	test   ecx,ecx
  4159b0:	jg     0x4159af
  4159b2:	add    al,0xe0
  4159b5:	fild   WORD PTR [ecx]
  4159b7:	and    DWORD PTR [edx+0x3146470b],0x66
  4159be:	and    bl,BYTE PTR [ebx+esi*4]
  4159c1:	jns    0x41598f
  4159c3:	pop    edi
  4159c4:	push   esp
  4159c5:	push   eax
  4159c6:	pop    ecx
  4159c7:	ret    0xaa6
  4159ca:	mov    edx,DWORD PTR [esi+ecx*2+0x9]
  4159ce:	push   ebp
  4159cf:	push   esi
  4159d0:	sbb    ebp,esi
  4159d2:	lds    eax,FWORD PTR [esi-0x1d186]
  4159d8:	mov    ds:0xe800000a,al
  4159dd:	sti    
  4159de:	or     ecx,0x75
  4159e1:	scas   al,BYTE PTR es:[edi]
  4159e2:	add    DWORD PTR cs:[eax],eax
	...
  415a09:	add    BYTE PTR [eax],al
  415a0b:	add    BYTE PTR [edx+0xa],ah
  415a0e:	push   edi
  415a0f:	mov    esi,DWORD PTR [esi+0x4e]
  415a12:	adc    al,BYTE PTR [ebx+0x57602f5]
  415a18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a19:	add    eax,DWORD PTR [eax]
  415a1b:	add    BYTE PTR [edx+0x7f],ah
  415a1e:	shr    BYTE PTR [ebx],0x1d
  415a21:	call   0x404d:0x3c1e0838
  415a28:	scas   eax,DWORD PTR es:[edi]
  415a29:	repz jae 0x415a22
  415a2c:	mov    eax,ds:0x22041a88
  415a31:	or     bh,bh
  415a33:	jne    0x415a4c
  415a35:	jg     0x4159bb
  415a37:	adc    BYTE PTR [esi],ch
  415a39:	or     al,BYTE PTR [eax]
  415a3b:	mov    DWORD PTR [edx+edx*1+0x204b0004],ebp
  415a42:	ret    0xcdc6
  415a45:	sbb    edi,esi
  415a47:	(bad)  
  415a48:	cld    
  415a49:	aaa    
  415a4a:	add    al,BYTE PTR [eax]
  415a4c:	dec    ebx
  415a4d:	mov    ecx,0x20470f80
  415a52:	add    cl,BYTE PTR [ebx-0x1a833]
  415a58:	fsubr  QWORD PTR [edi-0x1d]
  415a5b:	mov    cl,ch
  415a5d:	das    
  415a5e:	(bad)  
  415a5f:	dec    esp
  415a61:	test   eax,0x27d35f0d
  415a66:	aaa    
  415a67:	test   DWORD PTR [ebx+0x1c],ebx
  415a6a:	add    al,BYTE PTR [eax]
  415a6c:	adc    eax,0x7460d
	...
  415a95:	add    BYTE PTR [eax],al
  415a97:	add    BYTE PTR [ebx-0x63],cl
  415a9a:	cmp    BYTE PTR [ebx-0x1d],dh
  415a9d:	mov    ds:0xb64afe4a,al
  415aa2:	pop    ss
  415aa3:	add    al,0x4b
  415aa5:	and    BYTE PTR [ebp+0x1b0d4268],al
  415aab:	mov    ecx,ebp
  415aad:	das    
  415aae:	(bad)  
  415aaf:	(bad)  
  415ab0:	jl     0x415a6a
  415ab2:	adc    DWORD PTR [edi],0x4002204f
  415ab8:	ret    0x17c5
  415abb:	add    al,0x4b
  415abd:	and    BYTE PTR [ecx+0x21c3b85],cl
  415ac3:	add    al,al
  415ac5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ac6:	sbb    eax,DWORD PTR [ebx+ecx*2]
  415ac9:	and    BYTE PTR [edi+ecx*1-0x3ec60fb7],cl
  415ad0:	rcl    DWORD PTR [edx+0x1],cl
  415ad3:	mov    ss,WORD PTR [edi+0x26]
  415ad6:	add    al,BYTE PTR [eax]
  415ad8:	mov    dh,0x59
  415ada:	mov    eax,DWORD PTR [ebp+0x2263b]
  415ae0:	ror    BYTE PTR [ecx],cl
  415ae2:	outs   dx,DWORD PTR ds:[esi]
  415ae3:	sbb    al,0x4f
  415ae5:	or     ecx,ebp
  415ae7:	ret    
  415ae8:	ret    
  415ae9:	pop    ebx
  415aea:	hlt    
  415aeb:	inc    DWORD PTR [ebp*1+0x54c825f]
  415af2:	jmp    0xe0c51afa
  415af7:	(bad)  
  415af8:	in     al,dx
  415af9:	sub    al,0x62
  415afb:	adc    al,0x0
	...
  415b21:	add    BYTE PTR [eax],al
  415b23:	add    BYTE PTR [ecx+0x57],cl
  415b26:	out    dx,al
  415b27:	inc    ebp
  415b28:	les    ebx,FWORD PTR [ecx]
  415b2a:	call   0xe9468bb8
  415b2f:	add    edx,DWORD PTR [esi+0x12]
  415b32:	bound  eax,QWORD PTR [ecx+0x3e90554]
  415b38:	rol    BYTE PTR [ebx+0x2cb4ffe0],cl
  415b3e:	sub    BYTE PTR [ebx+0x3ed0dde],cl
  415b44:	dec    ebx
  415b45:	and    BYTE PTR [esi+0x13],0x47
  415b49:	or     ecx,ebp
  415b4b:	mov    esi,cs
  415b4d:	adc    ebp,esp
  415b4f:	add    ecx,DWORD PTR [ebx+0x7f]
  415b52:	loopne 0x415b59
  415b54:	xchg   edx,eax
  415b55:	sub    esp,DWORD PTR [edi-0x64176a74]
  415b5b:	mov    ecx,DWORD PTR [edi+edx*8+0x71]
  415b5f:	dec    ecx
  415b60:	fs push edx
  415b62:	je     0x415b9c
  415b64:	and    BYTE PTR gs:[ebp-0x46fa837c],0x8c
  415b6c:	xchg   BYTE PTR [ecx],ah
  415b6e:	sub    al,0x37
  415b70:	dec    ebp
  415b71:	sub    al,0x61
  415b73:	dec    eax
  415b74:	leave  
  415b75:	sub    edx,ebp
  415b77:	rcl    cl,cl
  415b79:	cmp    dl,BYTE PTR [eax+0x78]
  415b7c:	xor    BYTE PTR [edi*1+0xa2584],ch
  415b83:	sahf   
  415b84:	xlat   BYTE PTR ds:[ebx]
  415b85:	cmp    eax,0x75e7
	...
  415bae:	add    BYTE PTR [eax],al
  415bb0:	push   esp
  415bb1:	sub    edi,esi
  415bb3:	(bad)  
  415bb4:	repnz int3 
  415bb6:	shl    ecx,0x48
  415bb9:	mov    al,cl
  415bbb:	push   ss
  415bbc:	dec    ecx
  415bbd:	jnp    0x415bda
  415bbf:	in     eax,0x48
  415bc1:	or     DWORD PTR [ebp+0x18b64190],ecx
  415bc7:	jb     0x415b93
  415bc9:	sti    
  415bca:	add    ebp,ecx
  415bcc:	dec    eax
  415bcd:	add    BYTE PTR [ebp-0x1d4232f],0x29
  415bd4:	(bad)  
  415bd5:	pop    ebp
  415bd6:	sbb    esp,ebp
  415bd8:	dec    eax
  415bd9:	or     DWORD PTR [ecx+0x55f6f],ecx
  415bdf:	jmp    0xed58e1b5
  415be4:	dec    eax
  415be5:	or     DWORD PTR [edx-0x2a8b527],ecx
  415beb:	stos   DWORD PTR es:[edi],eax
  415bec:	xlat   BYTE PTR ds:[ebx]
  415bed:	sti    
  415bee:	add    BYTE PTR [edi+0x43],bl
  415bf1:	add    eax,0x10dbe900
  415bf6:	mov    esp,DWORD PTR [edi+0x37]
  415bf9:	add    eax,0x85d7e900
  415bfe:	pop    ss
  415bff:	in     eax,0x48
  415c01:	or     DWORD PTR [eax+0x70],eax
  415c04:	in     eax,dx
  415c05:	(bad)  
  415c07:	jmp    0xd9c6de54
  415c0c:	fs sub edi,esi
  415c0f:	(bad)  
  415c10:	fst    QWORD PTR [ebx]
  415c12:	add    al,0xe9
	...
  415c3c:	dec    eax
  415c3d:	jg     0x415c4e
  415c3f:	jmp    0x415c3b
  415c41:	sub    eax,0x85f61c1
  415c46:	mov    gs,ebp
  415c48:	cmp    al,0x2b
  415c4a:	inc    BYTE PTR [eax]
  415c4c:	test   DWORD PTR ds:0x2b12868b,0xababfffe
  415c56:	push   ss
  415c57:	add    al,0x32
  415c59:	pop    es
  415c5a:	inc    eax
  415c5b:	mov    DWORD PTR [ecx+edx*1+0x4],edi
  415c5f:	add    BYTE PTR [edx],ah
  415c61:	jle    0x415be7
  415c63:	adc    dh,dh
  415c65:	push   es
  415c66:	add    BYTE PTR [ebx+0x40d64],cl
  415c6c:	loop   0x415bee
  415c6e:	push   cs
  415c6f:	add    dl,BYTE PTR [eax-0xd]
  415c72:	ror    BYTE PTR [eax+0x1c8e0602],0xe6
  415c79:	push   es
  415c7a:	add    BYTE PTR [ebp+0x4b],dh
  415c7d:	jle    0x415c03
  415c7f:	adc    dh,ah
  415c81:	push   es
  415c82:	add    BYTE PTR [ecx+0x40e34],cl
  415c88:	mov    dl,0x46
  415c8a:	xchg   DWORD PTR [esi-0x1d552],ebp
  415c90:	cmp    ebp,DWORD PTR [esi+ecx*1-0x74f94dfc]
  415c97:	xchg   BYTE PTR [edx+0x2a],bh
  415c9a:	(bad)  
  415c9b:	call   edx
  415c9d:	dec    DWORD PTR es:[ebp+0x0]
	...
  415cc8:	mov    gs,WORD PTR [edx]
  415cca:	(bad)  
  415ccb:	jmp    DWORD PTR [edi+0xc]
  415cce:	mov    eax,DWORD PTR [esi-0x1d57e]
  415cd4:	sti    
  415cd5:	stos   DWORD PTR es:[edi],eax
  415cd6:	push   ss
  415cd7:	add    al,0x62
  415cd9:	push   es
  415cda:	inc    eax
  415cdb:	mov    DWORD PTR [edx+edx*1],ecx
  415cde:	add    al,0x0
  415ce0:	jb     0x415d5f
  415ce2:	test   BYTE PTR [eax],dl
  415ce4:	pushw  es
  415ce6:	add    BYTE PTR [ebx+0x40de4],cl
  415cec:	dec    ebx
  415ced:	and    BYTE PTR [edx+0x1f],dl
  415cf0:	dec    edx
  415cf1:	retf   0x416
  415cf4:	dec    ebx
  415cf5:	and    BYTE PTR [edi+0x12a1c018],ch
  415cfb:	add    al,0x4b
  415cfd:	and    BYTE PTR [ebx+0x2244385],cl
  415d03:	add    BYTE PTR [ebx+0x471b64b9],cl
  415d09:	and    BYTE PTR [edx],al
  415d0b:	mov    ebp,ecx
  415d0d:	das    
  415d0e:	(bad)  
  415d0f:	(bad)  
  415d10:	cld    
  415d11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d12:	jl     0x415d2b
  415d14:	dec    edi
  415d15:	and    BYTE PTR [edx],al
  415d17:	shr    BYTE PTR [ebx],1
  415d19:	and    DWORD PTR [ebx+ebx*1+0x7502204f],eax
  415d20:	inc    edx
  415d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d22:	jl     0x415d33
  415d24:	dec    edi
  415d25:	and    BYTE PTR [edx],al
  415d27:	mov    ebp,eax
  415d29:	pop    es
	...
  415d52:	add    BYTE PTR [eax],al
  415d54:	dec    ebx
  415d55:	loopne 0x415ce1
  415d57:	lods   eax,DWORD PTR ds:[esi]
  415d58:	pop    edi
  415d59:	and    al,0x2
  415d5b:	add    dl,al
  415d5d:	cdq    
  415d5e:	adc    eax,DWORD PTR [ebx+ecx*2]
  415d61:	and    BYTE PTR [edi+0x21c43b5],al
  415d67:	add    BYTE PTR [ebx+0x1],bh
  415d6a:	(bad)  
  415d6b:	pop    esp
  415d6c:	mov    DWORD PTR [edi],esi
  415d6e:	add    cl,BYTE PTR [ebx+0x55fe4407]
  415d74:	sbb    al,0xa7
  415d76:	mov    bh,0x23
  415d78:	pop    ebx
  415d79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d7a:	xor    bh,BYTE PTR [ebx+ecx*8]
  415d7d:	pop    ds
  415d7e:	add    al,BYTE PTR [eax]
  415d80:	clc    
  415d81:	dec    ebx
  415d82:	jg     0x415d82
  415d84:	dec    edi
  415d85:	das    
  415d86:	or     edi,DWORD PTR [ebx]
  415d88:	lds    eax,FWORD PTR [ebx-0x2]
  415d8b:	call   DWORD PTR [eax+ecx*1-0x23]
  415d8f:	iret   
  415d90:	push   ebp
  415d91:	push   eax
  415d92:	add    DWORD PTR [ecx+ecx*8+0x29],eax
  415d96:	out    dx,al
  415d97:	aam    0xc9
  415d99:	dec    ecx
  415d9a:	jecxz  0x415d71
  415d9c:	or     dl,BYTE PTR [edx]
  415d9e:	jmp    0xe52f249b
  415da3:	add    ecx,DWORD PTR [ebx-0x63]
  415da6:	repz neg BYTE PTR [ecx+ecx*1+0xe9803e9]
  415dae:	push   0x25
  415db0:	dec    edx
  415db1:	xor    al,0xf8
  415db3:	test   BYTE PTR [esi+ecx*1],0xe9
  415db7:	add    eax,DWORD PTR [eax]
	...
  415ddd:	add    BYTE PTR [eax],al
  415ddf:	add    BYTE PTR [ecx+0xa],bh
  415de2:	sahf   
  415de3:	div    ah
  415de5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415de6:	call   0xae4bd6ee
  415deb:	inc    edx
  415dec:	in     al,dx
  415ded:	adc    DWORD PTR [edx-0x66f36380],ebx
  415df3:	sub    ebp,DWORD PTR [esi]
  415df5:	and    esp,ebp
  415df7:	xor    al,0x75
  415df9:	xchg   esp,eax
  415dfa:	scas   al,BYTE PTR es:[edi]
  415dfb:	mov    BYTE PTR [ecx+esi*1+0x28bd39f4],bl
  415e02:	pop    ebx
  415e03:	mov    edi,0xd522135c
  415e08:	push   cs
  415e09:	dec    ebx
  415e0a:	lock add edi,esp
  415e0d:	xor    ah,ah
  415e0f:	cmp    DWORD PTR [ebp-0x2b7ef2d8],ebx
  415e15:	or     eax,0x9444247
  415e1a:	cmp    cl,BYTE PTR [ecx-0x311f12e0]
  415e20:	push   ss
  415e21:	xchg   esp,eax
  415e22:	xchg   edi,eax
  415e23:	xor    BYTE PTR [esi+0x4b03ecf1],0x9
  415e2a:	push   ss
  415e2b:	add    eax,0xe80004cf
  415e30:	dec    eax
  415e31:	or     DWORD PTR [ecx-0x1d7378e],eax
  415e37:	jmp    0xddc427d7
  415e3c:	and    al,0x0
  415e3e:	add    al,0xda
  415e40:	inc    edx
  415e41:	xor    BYTE PTR [esi],dh
  415e43:	push   edx
	...
  415e6c:	jg     0x415e95
  415e6e:	mov    dh,BYTE PTR [edi]
  415e70:	pusha  
  415e71:	clc    
  415e72:	cli    
  415e73:	ds pop edi
  415e75:	xchg   ebx,eax
  415e76:	int    0x41
  415e78:	bound  esp,QWORD PTR [edx]
  415e7a:	(bad)  
  415e7b:	cs ret 0x23cb
  415e7f:	add    edx,eax
  415e81:	jge    0x415e92
  415e83:	in     eax,0x48
  415e85:	or     DWORD PTR [edx+0x2091c22],ecx
  415e8b:	and    BYTE PTR [edx+0x4a],cl
  415e8e:	pop    esi
  415e8f:	jno    0x415edb
  415e91:	sub    BYTE PTR [ebp-0x1d81b27],al
  415e97:	pusha  
  415e98:	mov    dh,0xeb
  415e9a:	add    ebp,ecx
  415e9c:	dec    eax
  415e9d:	(bad)  
  415e9e:	pop    esp
  415e9f:	inc    edx
  415ea0:	test   DWORD PTR [eax],edx
  415ea2:	add    BYTE PTR [edx+0x8],ch
  415ea5:	daa    
  415ea6:	add    BYTE PTR [edi-0x16fff2a5],dl
  415eac:	retf   
  415ead:	mov    dh,0x8
  415eaf:	cmp    al,0x3e
  415eb1:	xchg   esp,eax
  415eb2:	test   ecx,ebx
  415eb4:	dec    esp
  415eb5:	or     DWORD PTR [eax],eax
  415eb7:	pusha  
  415eb8:	sar    edi,1
  415eba:	add    ebp,ecx
  415ebc:	dec    eax
  415ebd:	leave  
  415ebe:	mov    BYTE PTR [edi+0x3b],dl
  415ec1:	or     eax,0x8e07e900
  415ec6:	paddsw mm1,QWORD PTR [eax+0x9]
  415eca:	mov    esp,DWORD PTR [edi+0x47]
  415ecd:	or     eax,0x0
	...
  415ef6:	add    BYTE PTR [eax],al
  415ef8:	bound  esp,QWORD PTR [ebp-0x2564fdfa]
  415efe:	mov    edi,0xbe0c6a88
  415f03:	sbb    al,0x6e
  415f05:	or     eax,DWORD PTR [eax]
  415f07:	jne    0x415f54
  415f09:	test   al,0x84
  415f0b:	adc    BYTE PTR [esi],ch
  415f0d:	or     eax,DWORD PTR [eax]
  415f0f:	mov    DWORD PTR [ebp+edx*1+0x4b220004],ebp
  415f16:	xchg   DWORD PTR [esi+0xf26],ebp
  415f1c:	fwait
  415f1d:	xchg   ebx,eax
  415f1e:	push   cs
  415f1f:	add    al,0x32
  415f21:	or     ecx,DWORD PTR [ebx+0xefa86]
  415f27:	add    BYTE PTR [edx+0x2d],dl
  415f2a:	mov    ebx,edx
  415f2c:	xor    eax,DWORD PTR [edi]
  415f2e:	pop    es
  415f2f:	xor    DWORD PTR [eax],0xf
  415f32:	push   edx
  415f33:	mov    edx,DWORD PTR [ebp+eax*1-0x38]
  415f37:	cli    
  415f38:	inc    ebp
  415f39:	fimul  DWORD PTR [ecx+0xf0286]
  415f3f:	add    BYTE PTR [edx+0x15],ch
  415f42:	mov    eax,0xae201
  415f47:	add    DWORD PTR [edx+edi*8+0x3],ebx
  415f4b:	add    BYTE PTR [edx-0x51db635b],dh
  415f51:	or     al,BYTE PTR [eax]
  415f53:	sbb    DWORD PTR [ecx-0x5d000176],0x83165f
	...
  415f81:	add    BYTE PTR [eax],al
  415f83:	add    BYTE PTR [esi],dl
  415f85:	xor    DWORD PTR [esi],edx
  415f87:	add    ch,BYTE PTR [ecx]
  415f89:	data16 and bl,BYTE PTR [eax]
  415f8c:	xor    esp,DWORD PTR [esi-0xbf21734]
  415f92:	std    
  415f93:	inc    DWORD PTR [ebp+0x3b]
  415f96:	pop    ebx
  415f97:	pop    ebx
  415f98:	dec    ebx
  415f99:	jb     0x415f95
  415f9b:	dec    ebx
  415f9d:	jnp    0x415fa1
  415f9f:	add    eax,0x3b4304b
  415fa4:	xor    ch,ah
  415fa6:	out    0x17,eax
  415fa8:	retf   0x29b
  415fab:	jge    0x415ff8
  415fad:	xor    BYTE PTR [ebx+eax*1+0x17e67422],dh
  415fb4:	shl    BYTE PTR [ebx-0x1a],1
  415fb7:	pop    ss
  415fb8:	call   0x31ba:0xa7e740ab
  415fbf:	dec    BYTE PTR [esi+ebp*2+0x18095acf]
  415fc6:	add    al,bh
  415fc8:	lds    eax,FWORD PTR [edi]
  415fca:	or     BYTE PTR [eax],al
  415fcc:	dec    ebx
  415fcd:	xor    DWORD PTR [edx],eax
  415fcf:	add    BYTE PTR [ebx-0x4f],cl
  415fd2:	sub    eax,0x2304b7f
  415fd7:	jae    0x415f6b
  415fd9:	mov    bl,0xae
  415fdb:	and    edx,DWORD PTR [ebx+0x2c]
  415fde:	mov    ch,0x41
  415fe0:	xor    BYTE PTR [esi+0x304b03e6],ch
  415fe6:	mov    dh,0x39
	...
  416010:	repz sub DWORD PTR [esi+edi*8],ebp
  416014:	aam    0xaa
  416016:	inc    eax
  416017:	out    0x48,eax
  416019:	sub    dh,BYTE PTR [eax]
  41601b:	(bad)  
  41601c:	shl    BYTE PTR [ebp+0x1b],1
  41601f:	int3   
  416020:	ret    0x303e
  416023:	mov    DWORD PTR [edi],ecx
  416025:	or     al,0xc
  416027:	mov    edi,DWORD PTR [ebp+0x4b00063f]
  41602d:	call   0x154:0x324a2354
  416034:	mov    DWORD PTR [esi],edx
  416036:	jl     0x416038
  416038:	mov    WORD PTR [eax],cs
  41603a:	outs   dx,DWORD PTR ds:[esi]
  41603b:	adc    al,0x4f
  41603d:	or     ecx,ebp
  41603f:	jp     0x41601f
  416041:	in     al,dx
  416042:	in     al,dx
  416043:	add    ecx,DWORD PTR [ebx-0x39]
  416046:	sub    ecx,ebp
  416048:	mov    dl,BYTE PTR [eax]
  41604a:	jmp    0xe766f5d3
  41604f:	jno    0x416091
  416051:	or     eax,0xb5c603e9
  416056:	fbstp  TBYTE PTR [esi+0x146e9233]
  41605c:	dec    edi
  41605d:	or     ecx,ebp
  41605f:	jp     0x416027
  416061:	add    ebp,ebp
  416063:	add    ecx,DWORD PTR [ebx-0x37]
  416066:	pop    edi
  416067:	bound  edx,QWORD PTR [eax+0xd]
  41606a:	jmp    0xd8cd3272
  41606f:	pop    es
  416070:	dec    ebx
  416071:	or     DWORD PTR [edx-0x76],esp
	...
  41609c:	cmp    al,0xd
  41609e:	jmp    0xeb3b21a6
  4160a3:	push   ebp
  4160a4:	push   es
  4160a5:	dec    eax
  4160a6:	jo     0x4160bc
  4160a8:	dec    edx
  4160a9:	arpl   sp,si
  4160ab:	pop    es
  4160ac:	dec    ebx
  4160ad:	or     DWORD PTR [edx+ecx*1+0x7d88bc0],edx
  4160b4:	dec    ebx
  4160b5:	or     DWORD PTR [eax-0x76],esi
  4160b8:	xor    al,0xd
  4160ba:	jmp    0x3ed3ebc2
  4160bf:	adc    BYTE PTR [edi+0x9],al
  4160c2:	jmp    0xe53b2f41
  4160c7:	add    ecx,DWORD PTR [ebx-0x70]
  4160ca:	outs   dx,BYTE PTR ds:[esi]
  4160cb:	or     ecx,DWORD PTR [edi+0x9]
  4160ce:	jmp    0x6721ad26
  4160d3:	out    0x48,eax
  4160d5:	or     ecx,ebp
  4160d7:	mov    bh,0x1a
  4160d9:	nop
  4160da:	jmp    FWORD PTR [ecx+0x6a072c09]
  4160e0:	or     BYTE PTR [edi],al
  4160e2:	push   eax
  4160e3:	xchg   ecx,eax
  4160e4:	loop   0x416107
  4160e6:	(bad)  
  4160e7:	sahf   
  4160e8:	call   DWORD PTR [ebp+0x948ed0f]
  4160ee:	mov    al,dh
  4160f0:	loopne 0x4160fa
  4160f2:	add    cl,ch
  4160f4:	dec    eax
  4160f5:	or     al,BYTE PTR [esi+0x944d9]
  4160fb:	pusha  
  4160fc:	mov    edx,0xe903e8
	...
  416125:	add    BYTE PTR [eax],al
  416127:	add    BYTE PTR [eax-0x76],cl
  41612a:	cli    
  41612b:	imul   ecx,DWORD PTR [eax+0x9],0x8850da00
  416132:	imul   ecx,DWORD PTR ds:0xb58b0747,0x24
  416139:	cld    
  41613a:	push   ecx
  41613b:	jb     0x4160c7
  41613d:	sub    al,0x63
  41613f:	inc    eax
  416140:	pop    ebx
  416141:	and    ebx,DWORD PTR [esi-0x69]
  416144:	add    eax,0x48e1c1bf
  416149:	mov    bh,dl
  41614b:	jmp    0x9b416a9d
  416150:	inc    esp
  416151:	repnz inc ebx
  416153:	int    0x40
  416155:	mov    bh,dl
  416157:	jmp    0x7c3f84f9
  41615c:	shl    eax,0x43
  41615f:	lds    edx,FWORD PTR [eax-0x70]
  416162:	push   ebx
  416163:	int    0x40
  416165:	mov    bh,0x8a
  416167:	pop    ds
  416168:	xor    cl,ah
  41616a:	clc    
  41616b:	out    0x74,al
  41616d:	ret    
  41616e:	pop    ebp
  41616f:	cmp    al,0x90
  416171:	dec    ecx
  416172:	pop    es
  416173:	jmp    0xe55cc4c7
  416178:	dec    eax
  416179:	or     DWORD PTR [ebp+0x0],esi
  41617c:	stos   DWORD PTR es:[edi],eax
  41617d:	sahf   
  41617e:	test   BYTE PTR [eax],dl
  416180:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416181:	pop    es
  416182:	add    BYTE PTR [ecx+0x41524],cl
  416188:	mov    ds:0xae8747,al
	...
  4161b1:	add    BYTE PTR [eax],al
  4161b3:	add    BYTE PTR [esi+0x11],cl
  4161b6:	add    BYTE PTR [eax],al
  4161b8:	sti    
  4161b9:	mov    cl,BYTE PTR [esi]
  4161bb:	add    al,0x62
  4161bd:	pop    es
  4161be:	mov    eax,DWORD PTR [esi+0xb7a]
  4161c4:	ret    0xff2c
  4161c7:	mov    ebp,0xb7e
  4161cc:	push   edi
  4161cd:	adc    al,0x8b
  4161cf:	xchg   BYTE PTR [edx+0xb],dh
  4161d2:	add    BYTE PTR [eax],al
  4161d4:	mov    ebx,0x3204168b
  4161d9:	pop    es
  4161da:	inc    eax
  4161db:	mov    esp,ecx
  4161dd:	stc    
  4161de:	add    eax,DWORD PTR [eax]
  4161e0:	and    ah,BYTE PTR [esi+0x7361084]
  4161e6:	add    BYTE PTR [ebx+0x415a4],cl
  4161ec:	and    dh,BYTE PTR [edi+0x2ab68b1e]
  4161f2:	push   ss
  4161f3:	push   edx
  4161f4:	jns    0x4161d9
  4161f6:	out    0xd4,al
  4161f8:	sub    dh,dl
  4161fa:	std    
  4161fb:	pop    edi
  4161fc:	mov    esp,0xeac25939
  416201:	push   es
  416202:	mov    eax,DWORD PTR [esi+edx*1+0xb]
  416206:	lea    edx,[eax-0x810e]
  41620c:	cdq    
  41620d:	jge    0x416211
  41620f:	add    al,0xe2
  416211:	push   es
  416212:	jbe    0x41622d
  416214:	cmp    DWORD PTR [ebp+0x40a],esp
	...
  41623e:	add    BYTE PTR [eax],al
  416240:	mov    dl,0x6
  416242:	cmp    eax,ecx
  416244:	dec    ebx
  416245:	ret    0x2b08
  416248:	mov    ch,BYTE PTR [esi+0x6]
  41624b:	add    BYTE PTR [eax+0x71],dh
  41624e:	pop    es
  41624f:	add    BYTE PTR [ebx],dh
  416251:	xor    DWORD PTR [edx],eax
  416253:	ret    0x304f
  416256:	icebp  
  416257:	mov    edi,0x83022c89
  41625c:	ja     0x41627e
  41625e:	rcl    DWORD PTR [eax+edx*8+0x14],1
  416262:	call   0x49807f86
  416267:	mov    bh,BYTE PTR [edx-0x25]
  41626a:	jl     0x4162c7
  41626c:	das    
  41626d:	inc    eax
  41626e:	jnp    0x4162cb
  416270:	daa    
  416271:	sub    bl,ch
  416273:	lods   eax,DWORD PTR ds:[esi]
  416274:	inc    ebx
  416275:	xor    al,0x2
  416277:	add    BYTE PTR [edi+ebp*4],bh
  41627a:	popa   
  41627b:	inc    DWORD PTR [eax+esi*1+0x19]
  41627f:	or     cl,dh
  416281:	mov    esp,esi
  416283:	push   DWORD PTR [eax+esi*1]
  416286:	add    cl,BYTE PTR [ebp-0x74fbf359]
  41628c:	int    0x33
  41628e:	push   es
  41628f:	add    BYTE PTR [ebx-0x4b],cl
  416292:	jp     0x416293
  416294:	lods   al,BYTE PTR ds:[esi]
  416295:	xor    DWORD PTR [edx],eax
  416297:	cmp    eax,DWORD PTR [ebx]
  416299:	pop    edx
  41629a:	adc    eax,0x61bd58b
  41629f:	add    BYTE PTR [ebx+0x27],cl
  4162a2:	inc    ebx
  4162a3:	jne    0x4162a5
	...
  4162c9:	add    BYTE PTR [eax],al
  4162cb:	add    BYTE PTR [edi+0x47],cl
  4162ce:	inc    ebx
  4162cf:	jmp    0x784b:0x4434740
  4162d6:	add    eax,DWORD PTR [eax]
  4162d8:	lock sub eax,0xa9c0bff1
  4162de:	cli    
  4162df:	add    ecx,DWORD PTR [ebx+0x30]
  4162e2:	std    
  4162e3:	mov    ch,0x5a
  4162e5:	or     esi,esi
  4162e7:	jne    0x4162fc
  4162e9:	or     BYTE PTR [edx-0x28],dh
  4162ec:	fimul  WORD PTR [edx+eiz*2]
  4162ef:	add    cl,al
  4162f1:	lea    ecx,[esi]
  4162f3:	jnp    0x416345
  4162f5:	mov    dh,BYTE PTR [ecx-0x7a]
  4162f8:	inc    esp
  4162f9:	or     eax,0x5b4403e9
  4162fe:	fdivr  st,st(4)
  416300:	(bad)  
  416301:	enter  0x78e7,0x10
  416305:	jnp    0x4162f3
  416307:	js     0x4162df
  416309:	or     al,0xe5
  41630b:	add    ecx,DWORD PTR [ebx-0x70]
  41630e:	cld    
  41630f:	xor    BYTE PTR [ebx+0x4b03e907],0x8
  416316:	ja     0x416320
  416318:	inc    edi
  416319:	or     ecx,ebp
  41631b:	add    al,ch
  41631d:	adc    ch,ch
  41631f:	add    ecx,DWORD PTR [ebx-0x72]
  416322:	data16 or BYTE PTR [edi+0x9],cl
  416326:	jmp    0x6f3667a3
  41632b:	add    BYTE PTR [edi+0x9],cl
  41632e:	jmp    0x4163b5
	...
  416357:	add    BYTE PTR [ebx],dh
  416359:	or     al,cl
  41635b:	add    cl,BYTE PTR [ebx-0x69]
  41635e:	in     eax,dx
  41635f:	mov    ebx,0x7ec87d3
  416364:	dec    ebx
  416365:	or     eax,esi
  416367:	pop    ebp
  416368:	inc    esp
  416369:	add    eax,0x8b5403e9
  41636e:	xchg   edx,eax
  41636f:	sub    al,0xfd
  416371:	and    BYTE PTR [ecx-0x38],dh
  416374:	sub    cl,bl
  416376:	push   edx
  416377:	add    al,0x64
  416379:	or     ch,cl
  41637b:	call   0x7b2ffb8a
  416380:	js     0x416367
  416382:	mov    eax,0xff8c4318
  416387:	lock dec ecx
  416389:	adc    BYTE PTR [esi+0x94823],al
  41638f:	div    BYTE PTR [esi]
  416391:	(bad)  
  416394:	ds int 0x0
  416397:	bound  eax,QWORD PTR [esi+eax*4-0x774b9dfd]
  41639e:	cmp    al,dl
  4163a0:	lahf   
  4163a1:	mov    WORD PTR [edx-0x74f6b718],?
  4163a7:	addr16 test al,0xc
  4163aa:	add    cl,ch
  4163ac:	add    eax,0x84ae0f0c
  4163b1:	in     al,dx
  4163b2:	sbb    ebp,ecx
  4163b4:	jo     0x4163d6
  4163b6:	(bad)  
  4163b7:	rol    BYTE PTR ds:0x62399a,cl
	...
  4163e1:	add    BYTE PTR [eax],al
  4163e3:	add    BYTE PTR [edi],dh
  4163e5:	jecxz  0x4163e1
  4163e7:	std    
  4163e8:	push   esp
  4163e9:	lea    eax,[esi+0x9b0e9]
  4163ef:	mov    dl,0xc6
  4163f1:	or     al,0x4
  4163f3:	jmp    0x7258fb40
  4163f8:	(bad)  
  4163f9:	adc    eax,DWORD PTR [ecx+ebp*8]
  4163fc:	dec    eax
  4163fd:	in     al,0xf7
  4163ff:	fild   WORD PTR [esp+esi*8-0x9]
  416403:	inc    edx
  416404:	and    al,0xf3
  416406:	imul   DWORD PTR [eax-0x79]
  416409:	and    BYTE PTR [esi-0x18],ah
  41640c:	dec    eax
  41640d:	xor    al,0x1
  41640f:	cli    
  416410:	pop    edi
  416411:	xchg   ebx,eax
  416412:	add    eax,0x8c57f462
  416417:	in     eax,dx
  416418:	jmp    edx
  41641a:	les    ebx,FWORD PTR [edx-0x32ac1ed0]
  416420:	or     al,0x96
  416422:	add    esp,DWORD PTR [eax-0x4]
  416425:	jmp    0x416452
  416427:	add    BYTE PTR [ecx],cl
  416429:	icebp  
  41642a:	or     eax,0xab084
  41642f:	add    BYTE PTR [edi-0x6f],ah
  416432:	(bad)  
  416433:	push   DWORD PTR [edx+0x59cd8b0b]
  416439:	fld    QWORD PTR [edi+0x3af94e4c]
  41643f:	dec    esp
  416440:	ds inc ecx
  416442:	or     eax,0x63887
	...
  41646f:	add    BYTE PTR [ecx],bl
  416471:	popa   
  416472:	and    dl,BYTE PTR [eax]
  416474:	sbb    cl,bh
  416476:	add    BYTE PTR [edx],bh
  416478:	cs and bh,dh
  41647b:	mov    ah,BYTE PTR [esi+0x29]
  41647e:	adc    bh,BYTE PTR [ebx+0xb70]
  416484:	pop    esi
  416485:	and    DWORD PTR [ecx],edi
  416487:	mov    ?,WORD PTR [esi+0x1f]
  41648a:	(bad)  
  41648b:	inc    DWORD PTR [ebp+0x7200c888]
  416491:	or     ecx,DWORD PTR [ebx+0x391b8e54]
  416497:	ficom  DWORD PTR [ecx+0x24]
  41649a:	mov    ecx,DWORD PTR [ebp+0x30]
  41649d:	mov    al,ds:0x3f162be6
  4164a2:	es mov ch,dh
  4164a5:	and    esi,edi
  4164a7:	cmp    DWORD PTR [ebx],esp
  4164a9:	pop    edx
  4164aa:	add    al,0x43
  4164ac:	repz das 
  4164ae:	fdiv   DWORD PTR [edx+0x60]
  4164b1:	sahf   
  4164b2:	dec    edx
  4164b3:	and    al,0xfe
  4164b5:	lahf   
  4164b6:	push   0x24
  4164b8:	dec    edx
  4164b9:	fmul   DWORD PTR cs:[edi]
  4164bc:	outs   dx,BYTE PTR ds:[esi]
  4164bd:	in     al,0xfe
  4164bf:	push   edx
  4164c1:	das    
  4164c2:	pop    edx
  4164c3:	and    al,0xf2
  4164c5:	pop    eax
  4164c6:	inc    ebp
  4164c7:	push   ebx
  4164c8:	dec    ebx
  4164c9:	popa   
  4164ca:	jge    0x416499
  4164cc:	repz ret 0xfe2d
  4164d0:	fcomp  QWORD PTR [ebx+0x23b7]
	...
  4164fa:	add    BYTE PTR [eax],al
  4164fc:	cmp    ebx,DWORD PTR [ebx-0x7eccdc31]
  416502:	aam    0x8a
  416504:	xchg   ebp,eax
  416505:	stos   DWORD PTR es:[edi],eax
  416506:	sbb    esp,edi
  416508:	fsubr  QWORD PTR [edx]
  41650a:	sub    esi,edi
  41650c:	pusha  
  41650d:	cmp    BYTE PTR [ebp+0x4b],bh
  416510:	addr16 sbb al,0x5
  416513:	in     eax,dx
  416514:	jecxz  0x416515
  416516:	pop    ss
  416517:	ret    
  416518:	or     eax,0x278a175f
  41651d:	add    al,0xdc
  41651f:	rcl    BYTE PTR [ecx-0x753e82ce],0x48
  416526:	or     DWORD PTR [ebx],eax
  416528:	mov    DWORD PTR [ebx],esi
  41652a:	mov    esi,0x4a2b5b23
  41652f:	jne    0x416576
  416531:	test   eax,0x8b4323b6
  416536:	mov    esp,0xfe4ccd3a
  41653b:	call   DWORD PTR [ebp+edx*1-0x40]
  41653f:	push   edx
  416540:	cli    
  416541:	stos   BYTE PTR es:[edi],al
  416542:	cmp    bh,ah
  416544:	test   al,0x9a
  416546:	sub    esi,edi
  416548:	rcr    BYTE PTR [ebx-0x22],1
  41654b:	xadd   BYTE PTR [edi+0x1867437d],dh
  416552:	aam    0x4f
  416554:	sar    ch,1
  416556:	sbb    cl,BYTE PTR [edi+0x21]
  416559:	(bad)  
  41655a:	sub    DWORD PTR [edx-0x75c704fd],ecx
	...
  416588:	lahf   
  416589:	or     al,0xdc
  41658b:	mov    bh,0xb0
  41658d:	mov    DWORD PTR [ecx+ebp*1-0xc],ebx
  416591:	or     BYTE PTR [eax],dl
  416593:	jle    0x416597
  416595:	dec    eax
  416596:	(bad)  
  416598:	dec    eax
  416599:	push   ebx
  41659a:	jmp    0xc50e86dd
  41659f:	adc    ebx,DWORD PTR [ecx+0xd]
  4165a2:	jb     0x416573
  4165a4:	sub    ch,dh
  4165a6:	outs   dx,DWORD PTR ds:[esi]
  4165a7:	iret   
  4165a8:	sub    BYTE PTR [ecx],al
  4165aa:	pusha  
  4165ab:	(bad)  
  4165ac:	push   0xbc825bf9
  4165b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165b2:	out    0x3,eax
  4165b4:	jo     0x41653d
  4165b6:	in     al,0xff
  4165b8:	lods   al,BYTE PTR ds:[esi]
  4165b9:	sbb    eax,0x86d00c5e
  4165be:	fdiv   st(7),st
  4165c0:	pushf  
  4165c1:	sbb    eax,0x51e2c01
  4165c6:	adc    ch,BYTE PTR [ecx+eiz*4]
  4165c9:	or     al,0x2
  4165cb:	sub    al,0xcb
  4165cd:	inc    ebp
  4165ce:	call   0x924ab16e
  4165d3:	push   es
  4165d4:	cmp    BYTE PTR [esi],bl
  4165d6:	jno    0x4165d2
  4165d8:	rcr    esp,0x4f
  4165db:	jge    0x4165ab
  4165dd:	call   0xa8c69c6
  4165e2:	scas   al,BYTE PTR es:[edi]
  4165e3:	test   eax,esp
  4165e5:	in     al,0xdc
  4165e7:	add    dl,bh
  4165e9:	cli    
  4165ea:	imul   ebp,DWORD PTR [ecx],0x0
	...
  416611:	add    BYTE PTR [eax],al
  416613:	add    BYTE PTR [ebp-0x7a],dl
  416616:	sub    bh,BYTE PTR cs:0xc3fc511d
  41661d:	int    0x4
  41661f:	or     al,0xc2
  416621:	mov    ebp,0xc5d0140c
  416626:	add    al,0xe0
  416628:	shl    DWORD PTR [ebp-0x323febf4],1
  41662e:	add    al,0xc
  416630:	ins    BYTE PTR es:[edi],dx
  416631:	mov    ebx,0xcc8193ff
  416636:	add    esp,DWORD PTR [eax-0x1]
  416639:	mov    edi,0x475f2d82
  41663e:	psubsw mm0,mm7
  416641:	xor    BYTE PTR [edi],dh
  416643:	push   0xffffffb3
  416645:	call   0x903c4f8d
  41664a:	lock jl 0x41661e
  41664d:	xlat   BYTE PTR ds:[ebx]
  41664e:	mov    edi,0x3748c79f
  416653:	sub    edx,DWORD PTR [edi+0x9]
  416656:	mov    esp,DWORD PTR [ebp-0x567b2364]
  41665c:	in     eax,0x12
  41665e:	xor    DWORD PTR [ecx-0x527d419d],0xffffffb0
  416665:	dec    edx
  416666:	pop    ss
  416667:	jmp    0x2d65368b
  41666c:	adc    al,0x51
  41666e:	jae    0x41663f
  416670:	(bad)  
  416672:	and    esp,DWORD PTR ds:0xc7733a04
	...
  4166a0:	add    DWORD PTR [esi+0x948ed13],eax
  4166a6:	dec    eax
  4166a7:	jo     0x416673
  4166a9:	cld    
  4166aa:	add    ebp,ecx
  4166ac:	dec    eax
  4166ad:	xchg   edx,eax
  4166ae:	(bad)  
  4166af:	stc    
  4166b0:	pop    esp
  4166b1:	sbb    al,0xfe
  4166b3:	inc    ecx
  4166b4:	xor    bl,BYTE PTR [edi]
  4166b6:	in     eax,dx
  4166b7:	push   edx
  4166b8:	push   edi
  4166b9:	push   ecx
  4166ba:	push   esi
  4166bb:	out    0xba,al
  4166bd:	popa   
  4166be:	(bad)  
  4166bf:	fmul   DWORD PTR [ecx]
  4166c1:	sbb    al,0xcf
  4166c3:	sub    DWORD PTR [edi],edi
  4166c5:	inc    ebx
  4166c6:	push   cs
  4166c7:	xchg   edi,eax
  4166c8:	mov    eax,ds:0x48a81009
  4166cd:	cmp    bh,BYTE PTR [edi-0x49f475e6]
  4166d3:	add    bl,cl
  4166d5:	add    eax,0xb7224110
  4166da:	mov    esi,0xb4213533
  4166df:	mov    ecx,0x40f7f1
  4166e4:	xor    ecx,eax
  4166e6:	add    ecx,0x81c514e6
  4166ec:	cmp    ecx,DWORD PTR [eax]
  4166ee:	add    DWORD PTR [eax],eax
  4166f0:	repnz push ebp
  4166f2:	mov    DWORD PTR [ebp-0x447cdede],0x530007db
  4166fc:	sub    edi,edx
  4166fe:	mov    WORD PTR [esi-0x5a],cs
  416701:	xchg   al,al
  416703:	sbb    BYTE PTR [eax],al
	...
  416729:	add    BYTE PTR [eax],al
  41672b:	add    dl,al
  41672d:	or     DWORD PTR [eax],eax
  41672f:	mov    edi,0x4a2
  416734:	das    
  416735:	dec    ebp
  416736:	call   DWORD PTR [ebx+ebp*1-0xa]
  41673a:	xor    al,al
  41673c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41673d:	pop    es
  41673e:	add    BYTE PTR [eax],al
  416740:	mov    ds:0x36c7279e,al
  416745:	or     al,BYTE PTR [eax]
  416747:	add    BYTE PTR [edx+0x7],dh
  41674a:	add    BYTE PTR [ebx+0x3d08a2],al
  416750:	popw   es
  416752:	add    BYTE PTR [edx-0x32],dh
  416755:	test   eax,eax
  416757:	add    BYTE PTR [esi+0x7],ah
  41675a:	add    BYTE PTR [ebx-0x4d4f75d],al
  416760:	push   edi
  416761:	int    0x89
  416763:	mov    fs,WORD PTR [esi]
  416765:	sbb    edi,esi
  416767:	jmp    FWORD PTR [ecx-0x52377cf5]
  41676d:	pushf  
  41676e:	test   BYTE PTR [esi+eiz*1],ah
  416771:	pop    es
  416772:	add    BYTE PTR [ecx+0x3fba24b],cl
  416778:	dec    ebx
  416779:	xor    BYTE PTR [ebx-0x63],bh
  41677c:	dec    edi
  41677d:	sub    al,0x2
  41677f:	add    dl,al
  416781:	call   0x397b:0x304b03f7
  416788:	sar    BYTE PTR [edx+0x304b040f],1
  41678e:	jns    0x416725
	...
  4167b8:	pop    ebx
  4167b9:	and    al,0x2
  4167bb:	add    dl,dl
  4167bd:	mov    dl,0xdb
  4167bf:	add    ecx,DWORD PTR [ebx+0x30]
  4167c2:	js     0x4167cc
  4167c4:	ret    0xde6c
  4167c7:	sbb    eax,eax
  4167c9:	ficom  WORD PTR fs:[ebx-0x2d]
  4167cd:	add    ebx,DWORD PTR es:[esi+0x22457]
  4167d4:	dec    edx
  4167d5:	adc    BYTE PTR [edx],0x4
  4167d8:	dec    ebx
  4167d9:	xor    BYTE PTR [edx+0x140c2788],bh
  4167df:	mov    DWORD PTR [edi],ebx
  4167e1:	add    al,0xc
  4167e3:	mov    DWORD PTR [ebp-0x730001dc],esi
  4167e9:	cdq    
  4167ea:	(bad)  
  4167eb:	and    esp,DWORD PTR [ebx]
  4167ed:	pop    ss
  4167ee:	inc    ecx
  4167ef:	push   cs
  4167f0:	lds    ebx,FWORD PTR [edi-0x3]
  4167f3:	push   DWORD PTR [ebp+edx*4-0x77]
  4167f7:	jmp    FWORD PTR [eax+esi*1+0x2]
  4167fb:	mov    ecx,DWORD PTR [edi]
  4167fd:	dec    esp
  4167fe:	mov    BYTE PTR [ebx+ecx*4+0x78ae9f4],0x4c
  416806:	or     al,BYTE PTR [ecx-0x3e]
  416809:	in     al,dx
  41680a:	fist   WORD PTR [edi]
  41680c:	iret   
  41680d:	push   0xf3d02caf
  416812:	fistp  WORD PTR [edi-0x40]
  416815:	or     BYTE PTR [edi+0x13],dh
  416818:	inc    edi
  416819:	or     ecx,ebp
  41681b:	fiadd  DWORD PTR [eax]
	...
  416841:	add    BYTE PTR [eax],al
  416843:	add    BYTE PTR [eax-0x2e2e471b],dl
  416849:	jb     0x41683f
  41684b:	call   DWORD PTR [edx+ebx*1]
  41684e:	adc    eax,edx
  416850:	push   0x907a97b9
  416855:	in     eax,0x94
  416857:	rcr    DWORD PTR [ebx+0x882181a],1
  41685d:	stc    
  41685e:	imul   eax,DWORD PTR [ebx+0x3d],0xffffff85
  416862:	xchg   ebx,eax
  416863:	(bad)  
  416864:	in     al,0x19
  416866:	rol    edi,1
  416868:	sub    ch,bh
  41686a:	xchg   ebx,eax
  41686b:	adc    eax,eax
  41686d:	lods   al,BYTE PTR ds:[esi]
  41686e:	int3   
  41686f:	mov    edi,0xc3c4b4c1
  416874:	shr    DWORD PTR [esp+ecx*8-0x3b4b2c29],cl
  41687b:	(bad)  [ecx+0x68c071f9]
  416881:	mov    ch,0x71
  416883:	jbe    0x4168bd
  416885:	add    eax,0x467003e9
  41688a:	cmp    cl,dl
  41688c:	sti    
  41688d:	mov    ebx,DWORD PTR [eax+eiz*8]
  416890:	pop    eax
  416891:	mov    bh,0x71
  416893:	ss ins BYTE PTR es:[edi],dx
  416895:	test   DWORD PTR [ecx+0x3c8d7d25],esi
  41689b:	loopne 0x4168bd
  41689d:	xchg   BYTE PTR [ebx+0x468d3c02],ah
  4168a3:	jmp    DWORD PTR [ecx+ebx*1+0x61]
  4168a7:	jle    0x4168a9
	...
  4168cd:	add    BYTE PTR [eax],al
  4168cf:	add    BYTE PTR [eax],ch
  4168d1:	add    eax,0xc48c03e9
  4168d6:	int3   
  4168d7:	cmovnp ecx,DWORD PTR [ecx]
  4168da:	jmp    0xeeae2
  4168df:	int3   
  4168e0:	and    BYTE PTR [esi+0x96e6a61],bl
  4168e6:	movq   mm3,QWORD PTR [ecx]
  4168e9:	or     al,0x0
  4168eb:	jmp    0x11653621
  4168f0:	push   ss
  4168f1:	lea    eax,[edi-0x16]
  4168f4:	dec    eax
  4168f5:	or     DWORD PTR [ebx+0x5708ecad],ecx
  4168fb:	adc    cl,BYTE PTR [esi+0x35624fbb]
  416901:	xor    cl,ah
  416903:	xor    eax,0xb58a172e
  416908:	or     al,0xe1
  41690a:	push   esi
  41690b:	mov    eax,0x318a4663
  416910:	aas    
  416911:	pop    esp
  416912:	test   BYTE PTR [esi],0x2e
  416915:	rol    edx,cl
  416917:	not    BYTE PTR [ebp-0xb]
  41691a:	add    ch,cl
  41691c:	dec    eax
  41691d:	test   BYTE PTR [ebx-0x33],al
  416920:	mov    al,0xd5
  416922:	jmp    ebx
  416924:	dec    eax
  416925:	or     DWORD PTR [eax+esi*8-0x35],edi
  416929:	pop    ss
  41692a:	add    esi,ebp
  41692c:	and    al,0x1
  41692e:	add    ebp,ecx
  416930:	dec    eax
  416931:	(bad)  
  416932:	dec    DWORD PTR [ebx+0x0]
	...
  416959:	add    BYTE PTR [eax],al
  41695b:	add    BYTE PTR [edi+0x9],cl
  41695e:	jl     0x416950
  416960:	retf   
  416961:	pop    ss
  416962:	add    ch,dh
  416964:	add    al,0x11
  416966:	add    ecx,ebp
  416968:	dec    eax
  416969:	test   BYTE PTR [ebx+0x5],bl
  41696c:	xchg   DWORD PTR [ebx-0x7c8332bd],eax
  416972:	xchg   ebp,eax
  416973:	cmc    
  416974:	fs sbb dh,bh
  416977:	ret    0x810b
  41697a:	inc    ebx
  41697b:	lds    ebp,FWORD PTR [eax-0x30]
  41697e:	dec    edi
  41697f:	add    bh,dl
  416981:	push   eax
  416982:	call   DWORD PTR [eax+0x70]
  416985:	cmp    ecx,DWORD PTR [ebx+0x4e600e44]
  41698b:	mov    edx,esp
  41698d:	repz (bad) 
  416990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416991:	in     eax,dx
  416992:	mov    DWORD PTR [esi+ecx*2+0x35],ecx
  416996:	aaa    
  416997:	dec    esp
  416998:	dec    esi
  416999:	dec    ebp
  41699a:	mov    eax,DWORD PTR [ebx+0x23]
  41699d:	xchg   ebx,eax
  41699e:	inc    edx
  41699f:	and    al,0x26
  4169a1:	inc    edi
  4169a2:	jp     0x4169dd
  4169a4:	jns    0x416961
  4169a6:	push   eax
  4169a7:	mov    esp,DWORD PTR [esp+esi*8]
  4169aa:	inc    edx
  4169ab:	mul    DWORD PTR ds:0xfe4c89ed
  4169b1:	dec    ebx
  4169b2:	xchg   DWORD PTR [esi+ecx*1+0x38],eax
  4169b6:	mov    DWORD PTR [esi+ecx*1+0x58],eax
  4169ba:	dec    esi
  4169bb:	push   ecx
  4169bc:	imul   ebx,esi,0x2fe6
	...
  4169e6:	add    BYTE PTR [eax],al
  4169e8:	int    0xeb
  4169ea:	std    
  4169eb:	mov    esi,esi
  4169ed:	aaa    
  4169ee:	and    ch,BYTE PTR [ebx]
  4169f0:	push   0x9
  4169f2:	leave  
  4169f3:	mov    eax,0x38e19dfb
  4169f8:	(bad)  
  4169f9:	in     eax,0xcf
  4169fb:	cli    
  4169fc:	sbb    edi,ecx
  4169fe:	mov    edi,0xc20e95e8
  416a03:	jmp    0x416a37
  416a05:	mov    BYTE PTR [edx+0x24],cl
  416a08:	ss pop esi
  416a0a:	mov    esi,ecx
  416a0c:	call   0x5287:0xb5fff705
  416a13:	and    al,0x2e
  416a15:	mov    dh,dl
  416a17:	mov    ebx,DWORD PTR [esi]
  416a19:	and    DWORD PTR [esi],edi
  416a1b:	push   edx
  416a1c:	and    cl,BYTE PTR [eax+0x784be8cc]
  416a22:	sbb    esi,edi
  416a24:	push   esp
  416a25:	dec    edx
  416a26:	cmp    cl,BYTE PTR [edx+0x23bf9a88]
  416a2c:	mov    ds:0x48e186a9,eax
  416a31:	and    eax,DWORD PTR [eax+eax*8+0x33]
  416a35:	and    eax,DWORD PTR ds:0xdd646744
  416a3b:	out    0xa6,eax
  416a3d:	sbb    BYTE PTR [ecx+0x43],cl
  416a40:	addr16 adc al,0x3
  416a43:	add    BYTE PTR [ebx+0x20],cl
  416a46:	xchg   esi,edi
  416a48:	xchg   ebp,eax
  416a49:	or     ch,bl
  416a4b:	imul   eax,DWORD PTR [eax],0x0
	...
  416a72:	add    BYTE PTR [eax],al
  416a74:	das    
  416a75:	ins    BYTE PTR es:[edi],dx
  416a76:	sahf   
  416a77:	das    
  416a78:	shr    BYTE PTR [esi+eiz*8+0x27],1
  416a7c:	sahf   
  416a7d:	jno    0x416a0c
  416a7f:	int    0xe3
  416a81:	scas   al,BYTE PTR es:[edi]
  416a82:	sbb    esi,edi
  416a84:	in     al,0x9b
  416a86:	mov    bh,0x23
  416a88:	xchg   DWORD PTR [ebx+0x4c8f8a3b],ebp
  416a8e:	ret    0x7b51
  416a91:	fwait
  416a92:	push   ecx
  416a93:	out    0xf0,eax
  416a95:	push   ds
  416a96:	and    esi,edi
  416a98:	and    bl,0x8e
  416a9b:	pop    ebx
  416a9c:	outs   dx,DWORD PTR ds:[esi]
  416a9d:	js     0x416a3e
  416a9f:	pop    es
  416aa0:	test   ah,ah
  416aa2:	out    0x13,eax
  416aa4:	dec    edx
  416aa5:	and    BYTE PTR [edx],al
  416aa7:	add    dh,al
  416aa9:	aas    
  416aaa:	xchg   edi,eax
  416aab:	dec    esp
  416aac:	push   edx
  416aad:	aam    0xe7
  416aaf:	inc    ebx
  416ab0:	push   cs
  416ab1:	out    0x8e,eax
  416ab3:	lea    ebx,[edi+0x2c]
  416ab6:	add    al,BYTE PTR [eax]
  416ab8:	icebp  
  416ab9:	and    BYTE PTR [ebp+0x2a76c050],dh
  416abf:	sahf   
  416ac0:	js     0x416acb
  416ac2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ac3:	and    dl,cl
  416ac5:	mov    ebp,0x31d1c7c4
  416aca:	popa   
  416acb:	(bad)  
  416acc:	sub    cl,cl
  416ace:	cmp    dh,BYTE PTR [ecx+eax*8+0x3eb09047]
  416ad5:	push   ss
  416ad6:	jge    0x416a66
	...
  416b00:	nop
  416b01:	in     eax,dx
  416b02:	sar    BYTE PTR [eax-0x6f617d65],0x90
  416b09:	icebp  
  416b0a:	out    0x2b,eax
  416b0c:	sbb    BYTE PTR [edi],0x5d
  416b0f:	and    ah,BYTE PTR [ecx+0x31]
  416b12:	popa   
  416b13:	mov    edi,0xdceb168
  416b18:	add    al,0xcd
  416b1a:	or     al,0xf8
  416b1c:	add    al,0x16
  416b1e:	call   0x6a435b26
  416b23:	lahf   
  416b24:	sub    ch,bh
  416b26:	call   0xe988313d
  416b2b:	add    ecx,DWORD PTR [ebx-0x76]
  416b2e:	sbb    eax,DWORD PTR ds:0x441874c
  416b34:	dec    ebx
  416b35:	or     DWORD PTR [edx-0x49],esp
  416b38:	sub    cl,ch
  416b3a:	jno    0x416ac5
  416b3c:	pop    eax
  416b3d:	or     eax,0x4ac803e9
  416b42:	div    BYTE PTR [ecx+ecx*8-0x364915b7]
  416b49:	dec    eax
  416b4a:	jmp    0xfbe0:0x4c4d7b3
  416b51:	and    DWORD PTR [esi-0x32f03bd4],0xcccc121
  416b5b:	aam    0x41
  416b5d:	int    0x4
  416b5f:	in     al,dx
  416b60:	sar    DWORD PTR [edi+edi*8+0xc],1
	...
  416b8b:	add    BYTE PTR [ebx-0x48607549],dl
  416b91:	xchg   ecx,eax
  416b92:	and    dl,BYTE PTR [ecx-0x6101e2bc]
  416b98:	into   
  416b99:	cmp    eax,0xed632d8a
  416b9e:	push   esp
  416b9f:	cmp    DWORD PTR [esi+0x5c97e743],edi
  416ba5:	adc    edi,esi
  416ba7:	rol    BYTE PTR [edi+0x4e8b8271],cl
  416bad:	or     dl,al
  416baf:	bound  edi,QWORD PTR [edi+0x49]
  416bb2:	clc    
  416bb3:	jmp    0x416c2c
  416bb5:	loop   0x416b9e
  416bb7:	inc    ebx
  416bb8:	xor    al,0x13
  416bba:	(bad)  
  416bbb:	bound  edx,QWORD PTR [edi+0x7f]
  416bbe:	inc    ebx
  416bbf:	add    eax,0x724fbe1f
  416bc4:	cdq    
  416bc5:	sub    al,0xca
  416bc7:	xor    al,0x2a
  416bc9:	adc    ecx,DWORD PTR [edx+0x23fe621]
  416bcf:	and    BYTE PTR [edi-0x268d5edf],cl
  416bd5:	sbb    ebp,eax
  416bd7:	cmp    BYTE PTR ds:0x2028c97f,bh
  416bdd:	repz add ah,BYTE PTR [ebx]
  416be0:	mov    esi,0x4fbd23c8
  416be5:	inc    ecx
  416be6:	cmp    dl,BYTE PTR [eax]
  416be8:	fmul   QWORD PTR [edi+eax*8]
  416beb:	lods   eax,DWORD PTR ds:[esi]
  416bec:	lods   al,BYTE PTR ds:[esi]
  416bed:	clc    
  416bee:	add    cl,ch
	...
  416c18:	dec    eax
  416c19:	or     DWORD PTR [ebp+0x3aecc2e6],eax
  416c1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c20:	mov    esp,0xa33d8ae8
  416c25:	in     al,0x4f
  416c27:	cmp    edi,DWORD PTR [esi-0x3ff18ba]
  416c2d:	cli    
  416c2e:	std    
  416c2f:	(bad)  
  416c30:	stc    
  416c31:	iret   
  416c32:	mov    DWORD PTR [esi+eax*2+0x25],eax
  416c36:	push   ebx
  416c37:	push   eax
  416c38:	jmp    0xc7c152f6
  416c3d:	jmp    0xf9cba83f
  416c42:	mov    eax,DWORD PTR [edx]
  416c44:	popa   
  416c45:	or     BYTE PTR [eax],al
  416c47:	cmp    DWORD PTR [esi],0x21
  416c4a:	adc    al,BYTE PTR [eax]
  416c4c:	cmp    eax,0x3202f58b
  416c51:	or     BYTE PTR [ebx-0x7206de03],al
  416c57:	aam    0x22
  416c59:	or     BYTE PTR [eax],al
  416c5b:	mov    ebx,esi
  416c5d:	sub    ebx,DWORD PTR [esi]
  416c5f:	mov    edx,esi
  416c61:	sub    edx,DWORD PTR [esi-0x75]
  416c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c65:	sbb    al,0x2
  416c67:	add    BYTE PTR [edx],ah
  416c69:	lea    edi,[edi-0x3f731c03]
  416c6f:	add    esp,eax
  416c71:	mov    WORD PTR [esi+0x4a82d203],?
  416c77:	and    al,0xde
  416c79:	push   esi
  416c7a:	mov    esi,ecx
	...
  416ca4:	cmp    ch,BYTE PTR [edi-0x7ac2000a]
  416caa:	inc    edx
  416cab:	and    al,0xf2
  416cad:	test   BYTE PTR [edx+0x24],dl
  416cb0:	test   BYTE PTR [edx+ebx*2-0x3ecb65dc],0x52
  416cb8:	cmp    DWORD PTR [edx-0x207883b2],edi
  416cbe:	and    dh,ch
  416cc0:	popf   
  416cc1:	repz push ebx
  416cc3:	push   ebx
  416cc4:	sbb    ebx,eax
  416cc6:	xchg   DWORD PTR [esi+eax*2+0x19],eax
  416cca:	out    0x17,al
  416ccc:	dec    ebx
  416ccd:	xor    eax,0xf5c0fe1e
  416cd2:	out    0x23,eax
  416cd4:	xor    BYTE PTR [ecx+0x7c],ah
  416cd7:	sub    BYTE PTR [ecx+0x1e],0x1
  416cdb:	ret    0x69c0
  416cde:	inc    esp
  416cdf:	clc    
  416ce0:	dec    ecx
  416ce1:	inc    edi
  416ce2:	out    dx,eax
  416ce3:	out    0x64,eax
  416ce5:	jne    0x416d05
  416ce7:	(bad)  
  416ce8:	test   dh,0x8a
  416ceb:	int    0xc2
  416ced:	in     eax,0xe7
  416cef:	sub    esp,DWORD PTR [ebx+0x6f]
  416cf2:	pop    ss
  416cf3:	inc    BYTE PTR [eax+ebx*4+0x4b]
  416cf7:	mov    al,BYTE PTR [edi+0x32ae64c]
  416cfd:	and    BYTE PTR [ebx-0x49],cl
  416d00:	and    bh,BYTE PTR [edi-0x45e3d276]
  416d06:	xor    al,0xf9
	...
  416d30:	rcl    dh,1
  416d32:	inc    esp
  416d33:	call   0x8a898c6c
  416d38:	xchg   DWORD PTR [eax+ebx*8],ecx
  416d3b:	add    dl,BYTE PTR [ebx]
  416d3d:	or     BYTE PTR ds:0xc7eb537c,ch
  416d43:	and    ebx,DWORD PTR [edi+0x21]
  416d46:	add    al,BYTE PTR [eax]
  416d48:	dec    ebx
  416d49:	lods   eax,DWORD PTR ds:[esi]
  416d4a:	push   ds
  416d4b:	jne    0x416d80
  416d4d:	daa    
  416d4e:	inc    edi
  416d4f:	jnp    0x416d78
  416d51:	xchg   edi,eax
  416d52:	mov    bh,0x23
  416d54:	sbb    edx,DWORD PTR [eax-0x50]
  416d57:	mov    bh,ch
  416d59:	or     BYTE PTR [ebp-0xd],dl
  416d5c:	les    ecx,FWORD PTR [ebx]
  416d5e:	mov    edx,edi
  416d60:	shr    BYTE PTR [esi+eiz*8+0x27],1
  416d64:	push   ds
  416d65:	jo     0x416cf0
  416d67:	int    0xa3
  416d69:	mov    esi,0x9a4fe17
  416d6e:	and    bh,BYTE PTR [ecx*2+0x4b020385]
  416d75:	or     DWORD PTR [edx-0x61],ebp
  416d78:	push   0xce0ee8fd
  416d7d:	out    dx,eax
  416d7e:	jmp    0x1ce8:0x1c7e4b03
  416d85:	mov    WORD PTR [ebp-0x186138f2],?
  416d8b:	add    ecx,DWORD PTR [ebx-0x7a]
  416d8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d8f:	add    al,0x4c
  416d91:	mov    edi,DWORD PTR [eax]
  416d93:	add    eax,0x0
	...
  416dbc:	dec    ebx
  416dbd:	or     DWORD PTR [edx-0x49],esp
  416dc0:	sub    BYTE PTR [ebp+0x3e714e61],bh
  416dc6:	jae    0x416dcf
  416dc8:	push   ecx
  416dc9:	into   
  416dca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dcb:	xchg   ebp,eax
  416dcc:	dec    edx
  416dcd:	jle    0x416d7c
  416dcf:	mov    bl,0xc1
  416dd1:	int3   
  416dd2:	(bad)  
  416dd3:	div    DWORD PTR [ecx+0x32]
  416dd6:	mov    ecx,0x4c4cfb3
  416ddb:	loopne 0x416e58
  416ddd:	jle    0x416e05
  416ddf:	mov    WORD PTR [eax-0x13],?
  416de2:	add    al,0x2c
  416de4:	adc    BYTE PTR [edx],bl
  416de6:	inc    ebp
  416de7:	push   ds
  416de8:	inc    ebx
  416de9:	xchg   ebp,eax
  416dea:	add    al,0xd8
  416dec:	jp     0x416dcb
  416dee:	popa   
  416def:	mov    bh,0x28
  416df1:	fst    DWORD PTR [ebp+0x1042d1b1]
  416df7:	loopne 0x416dd1
  416df9:	adc    DWORD PTR ds:0xac7dfc8a,ebx
  416dff:	out    0x14,eax
  416e01:	mov    edx,0x20968ab8
  416e06:	(bad)  
  416e07:	pop    ss
  416e08:	mov    ebp,0xc142c111
  416e0d:	mov    ah,0xff
  416e0f:	int3   
  416e10:	mov    ah,0x93
  416e12:	punpckldq mm2,DWORD PTR [ebp+eiz*8-0x1a1c8dd1]
  416e1a:	xor    esi,DWORD PTR [eax+0x7b]
  416e1d:	in     eax,0x37
  416e1f:	pusha  
	...
  416e48:	shl    ebp,cl
  416e4a:	cmp    esp,DWORD PTR [edx-0x6d]
  416e4d:	in     eax,0xf
  416e4f:	push   ds
  416e50:	mov    edx,0x27af8ac1
  416e55:	jmp    0x416e47
  416e57:	mov    dh,0x4e
  416e59:	jg     0x416ea6
  416e5b:	add    eax,0x7250ba87
  416e60:	or     eax,0x3091d77f
  416e65:	pop    ss
  416e66:	(bad)  
  416e67:	xchg   esi,eax
  416e68:	jb     0x416eb0
  416e6a:	push   cs
  416e6b:	pop    esp
  416e6c:	scas   al,BYTE PTR es:[edi]
  416e6d:	adc    dh,bh
  416e6f:	jmp    0xd1652347
  416e74:	adc    ebp,DWORD PTR [edi+0x23]
  416e77:	in     eax,dx
  416e78:	dec    eax
  416e79:	or     DWORD PTR [ebp+0x11],esi
  416e7c:	sar    BYTE PTR [ebx+eiz*1+0x23ccd3fd],cl
  416e83:	stc    
  416e84:	fistp  QWORD PTR [edx+0x287d624f]
  416e8a:	icebp  
  416e8b:	pop    ecx
  416e8c:	andpd  xmm3,XMMWORD PTR [edx-0x5a77c12d]
  416e94:	in     al,dx
  416e95:	in     al,0xe7
  416e97:	das    
  416e98:	pop    edx
  416e99:	paddd  mm4,QWORD PTR [edx-0x5]
  416e9d:	in     al,dx
  416e9e:	and    ebp,edx
  416ea0:	nop
  416ea1:	adc    edx,0xffffffb4
  416ea4:	or     al,BYTE PTR [edx-0x451f32b5]
  416eaa:	mov    bl,BYTE PTR [edi]
	...
  416ed4:	ja     0x416f36
  416ed6:	repnz add BYTE PTR [ebp-0x12],al
  416eda:	mov    eax,ebx
  416edc:	cmp    DWORD PTR [ecx+0x22],eax
  416edf:	cmp    ch,cl
  416ee1:	pop    esp
  416ee2:	mov    esi,ecx
  416ee4:	dec    edx
  416ee5:	lods   al,BYTE PTR ds:[esi]
  416ee6:	icebp  
  416ee7:	jmp    DWORD PTR [ebp+0x46246a81]
  416eed:	or     bl,al
  416eef:	mov    ebx,DWORD PTR [esi+0x21]
  416ef2:	and    bh,BYTE PTR [ebx]
  416ef4:	mov    cl,0x81
  416ef6:	pop    edx
  416ef7:	and    al,0x2a
  416ef9:	outs   dx,DWORD PTR ds:[esi]
  416efa:	inc    edi
  416efb:	jmp    0x416f6b
  416efd:	sbb    DWORD PTR [edx+0x24],0x2442825a
  416f04:	pop    edx
  416f05:	xor    DWORD PTR [esp+0x75000c6e],eax
  416f0c:	pop    ebx
  416f0d:	mov    DWORD PTR [eax+ebp*1+0xc5e],edi
  416f14:	pop    esi
  416f15:	adc    bh,BYTE PTR [ebx]
  416f17:	add    BYTE PTR [edi],ch
  416f19:	or     al,0x0
  416f1b:	jl     0x416f4c
  416f1d:	mov    ebp,edi
  416f1f:	add    ch,BYTE PTR [esi]
  416f21:	sub    bh,BYTE PTR [edi+0x7c]
  416f24:	push   cs
  416f25:	xor    al,0xfe
  416f27:	jl     0x416f5b
  416f29:	or     al,0x7c
  416f2b:	add    eax,0x7401eda1
  416f30:	adc    DWORD PTR [ecx+0x565a244a],eax
  416f36:	dec    edi
  416f37:	mov    eax,DWORD PTR [eax]
	...
  416f5d:	add    BYTE PTR [eax],al
  416f5f:	add    BYTE PTR [esp+eiz*8],dh
  416f62:	int3   
  416f63:	repz xor eax,0x6930e9ed
  416f69:	push   eax
  416f6a:	and    bl,BYTE PTR [eax+0x69]
  416f6d:	dec    eax
  416f6e:	and    dl,BYTE PTR [eax]
  416f70:	pop    ecx
  416f71:	fldcw  WORD PTR [ecx]
  416f73:	xlat   BYTE PTR ds:[ebx]
  416f74:	nop
  416f75:	pop    ebx
  416f76:	mov    esi,ecx
  416f78:	dec    ebx
  416f79:	or     ch,BYTE PTR [esi-0x11]
  416f7c:	(bad)  
  416f7d:	(bad)  
  416f7e:	sbb    eax,DWORD PTR [ebx+0x67]
  416f81:	xor    bh,BYTE PTR [edi-0x12]
  416f84:	dec    edx
  416f85:	xchg   ebp,eax
  416f86:	and    al,0xea
  416f88:	pop    ecx
  416f89:	stos   DWORD PTR es:[edi],eax
  416f8a:	mov    dh,0x23
  416f8c:	cmp    ebp,DWORD PTR [ebp-0x2c050139]
  416f92:	mov    cs,ebp
  416f94:	mov    ds:0x8cfe1393,eax
  416f99:	repnz sbb al,BYTE PTR [edx-0x70f6dd7a]
  416fa0:	retf   0x221
  416fa3:	add    al,al
  416fa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fa6:	out    dx,eax
  416fa7:	add    ecx,DWORD PTR [ebx+0x22]
  416faa:	scas   eax,DWORD PTR es:[edi]
  416fab:	push   edx
  416fac:	sti    
  416fad:	stos   BYTE PTR es:[edi],al
  416fae:	dec    ecx
  416faf:	out    0x3d,eax
  416fb1:	jb     0x416fcd
  416fb3:	inc    al
  416fb5:	fstp   st(7)
  416fb7:	daa    
  416fb8:	not    al
  416fba:	mov    cs,ebp
  416fbc:	rcr    BYTE PTR [eax+0x2b],1
  416fbf:	out    dx,eax
  416fc0:	cmp    DWORD PTR [eax+0x3a1a],ecx
	...
  416fea:	add    BYTE PTR [eax],al
  416fec:	or     BYTE PTR [eax],dl
  416fee:	jmp    0xcd3a:0xea3c878a
  416ff5:	inc    esp
  416ff6:	(bad)  
  416ff7:	call   FWORD PTR [esi+ebp*1]
  416ffa:	or     eax,DWORD PTR [ebx-0x72b]
  417000:	dec    ebx
  417001:	and    BYTE PTR [esi-0xdfb9bc],cl
  417007:	dec    DWORD PTR [ebx+0x44]
  41700a:	inc    DWORD PTR [edx+0x68e22f6]
  417010:	and    BYTE PTR cs:[edi-0x2ba31b01],dl
  417017:	mov    bh,BYTE PTR [edi+0x9]
  41701a:	int    0xbb
  41701c:	ret    
  41701d:	popf   
  41701e:	(bad)  
  41701f:	out    dx,eax
  417020:	(bad)  
  417021:	sbb    al,0x9c
  417023:	jecxz  0x416ff6
  417025:	ja     0x41701b
  417027:	(bad)  
  417028:	mov    esp,0xc1b5990e
  41702d:	aas    
  41702e:	adc    ch,ah
  417030:	pushf  
  417031:	push   cs
  417032:	cmc    
  417033:	pop    ebx
  417034:	dec    ebx
  417035:	or     ecx,ebp
  417037:	add    ecx,DWORD PTR [edx-0x79]
  41703a:	cld    
  41703b:	call   DWORD PTR [esi+ecx*1-0xa973ff1]
  417042:	pop    ebx
  417043:	and    al,0xd7
  417045:	lods   eax,DWORD PTR ds:[esi]
  417046:	jmp    0x417062
  417048:	jno    0x416ffd
  41704a:	jno    0x417003
  41704c:	sub    BYTE PTR [ecx+0xbf71],dh
	...
  417076:	add    BYTE PTR [eax],al
  417078:	sub    cl,ah
  41707a:	sbb    esi,DWORD PTR [ecx+edx*8+0x5806c03f]
  417081:	push   cs
  417082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417083:	add    al,0xa5
  417085:	cmc    
  417086:	in     al,0x3
  417088:	dec    ebx
  417089:	jl     0x4170bf
  41708b:	stc    
  41708c:	inc    ebp
  41708d:	and    cl,bl
  41708f:	mov    fs,WORD PTR [eax+0x358120e5]
  417095:	xchg   esp,eax
  417096:	(bad)  
  417097:	mov    es,WORD PTR [eax-0x41713f1b]
  41709d:	hlt    
  41709e:	in     al,0x3
  4170a0:	dec    ebx
  4170a1:	adc    ah,0xdf
  4170a4:	push   eax
  4170a5:	sub    BYTE PTR [edi+ebx*8-0x20437fac],0x54
  4170ad:	mov    BYTE PTR [ecx-0xf],0xc7
  4170b1:	or     eax,0x228c06bc
  4170b6:	in     eax,dx
  4170b7:	mov    es,esi
  4170b9:	hlt    
  4170ba:	(bad)  
  4170bb:	in     al,dx
  4170bc:	dec    eax
  4170bd:	or     DWORD PTR [ebx-0x67],edx
  4170c0:	int    0x3b
  4170c2:	out    0x5f,eax
  4170c4:	and    DWORD PTR [edi],ecx
  4170c6:	(bad)  
  4170c7:	push   ds
  4170c8:	retf   0x3f9
  4170cb:	jmp    0xdf3ff518
  4170d0:	cmp    al,0x23
  4170d2:	(bad)  
  4170d3:	call   0xc5bd4320
  4170d8:	xchg   esp,eax
  4170d9:	inc    BYTE PTR [eax+ecx*1+0x0]
	...
  417104:	dec    eax
  417105:	or     DWORD PTR [eax],eax
  417107:	(bad)  
  417108:	in     al,dx
  417109:	jmp    0xe343e361
  41710e:	retf   0x4b6c
  417111:	add    edi,DWORD PTR [ebx]
  417113:	scas   al,BYTE PTR es:[edi]
  417114:	fld    DWORD PTR [edi]
  417116:	mov    esp,DWORD PTR [esi+0xd4382b7]
  41711c:	jnp    0x4170a0
  41711e:	jmp    0x9364:0x4fb52212
  417125:	jmp    0x3c0f8965
  41712a:	mov    BYTE PTR ds:0x17e7e96b,dl
  417130:	cmp    al,0xf
  417132:	(bad)  
  417133:	rcr    ah,1
  417135:	call   0x805c8c6d
  41713a:	push   ebx
  41713b:	int    0x18
  41713d:	mov    ah,0x51
  41713f:	jb     0x4170c2
  417141:	and    al,0xe6
  417143:	js     0x417187
  417145:	or     ecx,DWORD PTR [edx+0x23c8ce81]
  41714b:	and    edx,ebx
  41714d:	mov    esp,0x345f2f8a
  417152:	lock push esi
  417154:	(bad)  
  417155:	iret   
  417156:	les    esp,FWORD PTR [edx-0x4d]
  417159:	call   0x194d7171
  41715e:	mov    DWORD PTR [esi+eax*2+0x35],ecx
  417162:	mov    DWORD PTR [esi+edx*2+0x39],edx
  417166:	xchg   DWORD PTR [eax+eax*1+0x0],ecx
	...
  41718e:	add    BYTE PTR [eax],al
  417190:	inc    esi
  417191:	sub    eax,0x35065487
  417196:	mov    DWORD PTR [esi+eax*1+0x19],eax
  41719a:	push   ebp
  41719b:	push   ebp
  41719c:	add    bh,BYTE PTR [esi-0x34]
  41719f:	call   0x3f5127
  4171a4:	cmp    DWORD PTR [ecx+0x22],eax
  4171a7:	cmp    ch,dl
  4171a9:	push   edi
  4171aa:	mov    esi,ecx
  4171ac:	sub    ebp,ebx
  4171ae:	out    0xa3,al
  4171b0:	mov    ds:0xe73bfdf1,eax
  4171b5:	jae    0x4171ef
  4171b7:	mov    esp,DWORD PTR [esi+0x29]
  4171ba:	ss cmp esi,esp
  4171bd:	sub    eax,DWORD PTR [edx]
  4171bf:	add    BYTE PTR [edx+0x7b],dh
  4171c2:	pop    es
  4171c3:	or     esp,0x20
  4171c6:	add    al,BYTE PTR [eax]
  4171c8:	bound  ecx,QWORD PTR [eax]
  4171ca:	je     0x4171e4
  4171cc:	pop    edi
  4171cd:	or     BYTE PTR ds:0x3747200,al
  4171d3:	sub    DWORD PTR [ebp+0x6f197406],0x8
  4171da:	jge    0x4171dc
  4171dc:	xor    dh,BYTE PTR [ebx+eax*1-0x7d]
  4171e0:	int    0x4
  4171e2:	je     0x4171f1
  4171e4:	push   ebp
  4171e5:	push   ebp
  4171e6:	mov    esi,ecx
  4171e8:	fcmovu st,st(4)
  4171ea:	out    dx,eax
  4171eb:	call   FWORD PTR [ebp+0x12ebfd35]
  4171f1:	jge    0x41725d
  4171f3:	and    al,0x0
	...
  417219:	add    BYTE PTR [eax],al
  41721b:	add    BYTE PTR [edx],dl
  41721d:	or     edi,esi
  41721f:	jmp    DWORD PTR [edx]
  417221:	or     BYTE PTR [ebx+0x31074bd3],cl
  417227:	push   ecx
  417228:	xchg   esi,eax
  417229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41722a:	dec    eax
  41722b:	out    0xc,eax
  41722d:	mov    ah,0x17
  41722f:	inc    BYTE PTR [esi+0x5e00279f]
  417235:	lds    ecx,FWORD PTR [ecx-0x74cdd895]
  41723b:	inc    ebx
  41723c:	das    
  41723d:	dec    esi
  41723e:	ret    
  41723f:	inc    edi
  417240:	ret    0xde4d
  417243:	push   edi
  417244:	sbb    dl,0x7
  417247:	xor    ah,0xf9
  41724a:	pop    ss
  41724b:	dec    dh
  41724d:	add    cl,BYTE PTR [eax]
  41724f:	test   bh,cl
  417251:	and    DWORD PTR [edx],eax
  417253:	add    al,cl
  417255:	adc    al,BYTE PTR [eax]
  417257:	pextrw ebx,(bad),0xc5
  417259:	sahf   
  41725a:	add    al,BYTE PTR [eax]
  41725c:	dec    ebx
  41725d:	xchg   edi,eax
  41725e:	(bad)  
  41725f:	and    edi,DWORD PTR [ebx]
  417261:	ror    DWORD PTR [edx-0x4ca4cf3e],cl
  417267:	push   eax
  417268:	shr    BYTE PTR [ebx+0x2b],1
  41726b:	cs gs inc edx
  41726e:	push   ss
  41726f:	mov    dl,BYTE PTR [edi]
  417271:	push   es
  417272:	fcom   QWORD PTR [esi-0x7]
  417275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417276:	inc    ebp
  417277:	mov    dh,BYTE PTR [ebx+0x49]
  41727a:	add    al,0xf1
  41727c:	push   esp
  41727d:	(bad)  
  41727e:	fcmovb st,st(4)
	...
  4172a8:	int3   
  4172a9:	in     al,0x8a
  4172ab:	inc    ebx
  4172ac:	outs   dx,DWORD PTR ds:[esi]
  4172ad:	cmp    cl,bl
  4172af:	test   DWORD PTR [edi+0x24],esp
  4172b2:	add    al,BYTE PTR [eax]
  4172b4:	mov    esi,0x63bd8119
  4172b9:	and    al,0x2
  4172bb:	add    BYTE PTR [ebx+0xc],cl
  4172be:	cli    
  4172bf:	cmp    al,0x4b
  4172c1:	and    eax,0x9970002
  4172c6:	in     al,dx
  4172c7:	or     BYTE PTR ds:0x47dfd508,0x9
  4172ce:	aam    0x3
  4172d0:	dec    ebx
  4172d1:	(bad)  
  4172d2:	jecxz  0x417256
  4172d4:	cmc    
  4172d5:	push   es
  4172d6:	mov    ebp,0x71b995fb
  4172db:	inc    esi
  4172dc:	in     al,dx
  4172dd:	shl    BYTE PTR [edi],0x17
  4172e0:	fstp   QWORD PTR [esi]
  4172e2:	idiv   BYTE PTR [eax+0x4c69aa71]
  4172e8:	int    0xab
  4172ea:	imul   eax,DWORD PTR [eax+0x7c],0xd003f047
  4172f1:	popf   
  4172f2:	(bad)  
  4172f3:	repz rol DWORD PTR [esi-0x2f],0x3e
  4172f8:	cld    
  4172f9:	mov    bl,0x71
  4172fb:	inc    esi
  4172fc:	lods   al,BYTE PTR ds:[esi]
  4172fd:	jmp    0x2769:0xc49d1706
  417304:	dec    ebx
  417305:	xchg   esp,eax
  417306:	shr    DWORD PTR [edx],cl
  417308:	cmp    al,0x7e
  41730a:	xor    al,0xe0
	...
  417334:	push   esp
  417335:	jl     0x417358
  417337:	pop    ss
  417338:	sbb    esi,DWORD PTR [edi+0x26c4561]
  41733e:	xlat   BYTE PTR ds:[ebx]
  41733f:	push   ss
  417340:	ins    DWORD PTR es:[edi],dx
  417341:	jle    0x41737f
  417343:	loopne 0x41733d
  417345:	dec    ebx
  417346:	out    0x3,eax
  417348:	dec    ebx
  417349:	or     edx,esi
  41734b:	ss (bad) 
  41734e:	jae    0x4173ca
  417350:	dec    esp
  417351:	or     ch,al
  417353:	add    edx,eax
  417355:	cmp    ah,0xff
  417358:	cmp    al,0xa
  41735a:	cmp    DWORD PTR [ecx+eax*8+0x1f20903a],esi
  417361:	or     bh,BYTE PTR [ebp+0x4]
  417364:	cmc    
  417365:	hlt    
  417366:	(bad)  
  417367:	in     al,dx
  417368:	dec    eax
  417369:	or     DWORD PTR [ebx],eax
  41736b:	mov    ecx,?
  41736d:	sub    dh,BYTE PTR [ecx+0x4c]
  417370:	leave  
  417371:	ds (bad) 
  417373:	call   0xe94561f6
  417378:	dec    eax
  417379:	jl     0x4173c5
  41737b:	loopne 0x417358
  41737d:	lock mov ch,BYTE PTR [edi-0x8]
  417381:	add    eax,0x83d7e900
  417386:	pop    ss
  417387:	in     eax,dx
  417388:	dec    eax
  417389:	or     DWORD PTR [eax+0x60],eax
  41738c:	into   
  41738d:	in     eax,dx
  41738e:	add    ebp,ecx
  417390:	dec    eax
  417391:	add    BYTE PTR [ebp-0x1f63b07],0x62
	...
  4173c0:	ds repnz add ebp,ecx
  4173c4:	dec    eax
  4173c5:	jg     0x4173d6
  4173c7:	jmp    0x417443
  4173c9:	or     al,0xc1
  4173cb:	jno    0x417365
  4173cd:	or     BYTE PTR [esi-0x1f6632b],bl
  4173d3:	je     0x41736c
  4173d5:	jle    0x41735c
  4173d7:	stc    
  4173d8:	mov    WORD PTR [ecx],cs
  4173da:	(bad)  
  4173db:	jo     0x4173e2
  4173dd:	repnz add ebp,ecx
  4173e0:	dec    eax
  4173e1:	leave  
  4173e2:	mov    BYTE PTR [edi+0x73],bl
  4173e5:	add    eax,0x83c1e900
  4173ea:	pmulhw mm1,QWORD PTR [eax+0x9]
  4173ee:	mov    ebp,DWORD PTR [edi+0x5f]
  4173f1:	add    eax,0xf9c2e900
  4173f6:	add    DWORD PTR [ebx-0x678b7cb],edi
  4173fc:	dec    ecx
  4173fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173fe:	sbb    al,0xed
  417400:	dec    eax
  417401:	or     DWORD PTR [ebx-0x10],esi
  417404:	ret    
  417405:	mov    ss,WORD PTR [eax]
  417407:	add    BYTE PTR [esi],bl
  417409:	or     eax,0x5ac8900
  41740e:	add    al,BYTE PTR [eax]
  417410:	xor    cl,ch
  417412:	mov    BYTE PTR [esi-0x1f6fa],cl
  417418:	fwait
  417419:	xchg   DWORD PTR ds:0x890cf204,ecx
  41741f:	xchg   dl,bh
  417421:	or     dh,bh
  417423:	inc    DWORD PTR [eax]
	...
  417449:	add    BYTE PTR [eax],al
  41744b:	add    BYTE PTR [edx],dh
  41744d:	in     eax,dx
  41744e:	mov    al,BYTE PTR [esi-0x1f6ee]
  417454:	sub    al,0xd
  417456:	add    BYTE PTR [ebx+0x20164],cl
  41745c:	loop   0x4173ef
  41745e:	sbb    DWORD PTR [eax],0xffffffde
  417461:	or     al,0x0
  417463:	add    DWORD PTR [edi*8-0xe4dffff],edx
  41746a:	int3   
  41746b:	rol    BYTE PTR [edx-0x19dbbe6f],cl
  417471:	xchg   DWORD PTR [ebp+0x4991e374],edi
  417477:	and    al,0xd2
  417479:	xchg   ecx,eax
  41747a:	xchg   ebx,eax
  41747b:	adc    BYTE PTR [esi+0x4e2b000c],ch
  417481:	jmp    0x8e3ac5d3
  417486:	adc    DWORD PTR [edx+esi*2],eax
  417489:	or     al,0x29
  41748b:	dec    esp
  41748c:	dec    esi
  41748d:	mov    ebp,0x1e4d514f
  417492:	int    0x83
  417494:	scas   al,BYTE PTR es:[edi]
  417495:	cld    
  417496:	test   al,al
  417498:	pop    ds
  417499:	adc    DWORD PTR [ebx-0x75],ebx
  41749c:	mov    eax,ds:0xe15e5ec1
  4174a1:	inc    edi
  4174a2:	xor    eax,0x890d4ac2
  4174a7:	xchg   BYTE PTR [ebx+0x2],cl
  4174aa:	(bad)  
  4174ab:	push   DWORD PTR [ebx+ecx*8]
  4174ae:	mov    ebp,0x23
	...
  4174d7:	add    BYTE PTR [ebx-0x7aa148d3],bl
  4174dd:	jae    0x41751c
  4174df:	aaa    
  4174e0:	or     edx,ebx
  4174e2:	add    DWORD PTR [eax+0x7f24b],edi
  4174e8:	or     BYTE PTR [ebx-0x43],bh
  4174eb:	and    ecx,DWORD PTR [edi+0x7b]
  4174ee:	dec    ecx
  4174ef:	shl    dl,0xf2
  4174f2:	xchg   BYTE PTR [ebx+0x43],al
  4174f5:	mov    dl,0x40
  4174f7:	mov    al,BYTE PTR [edi-0x87ef7ea]
  4174fd:	adc    eax,0x754b0000
  417502:	inc    ecx
  417503:	je     0x417551
  417505:	jno    0x417544
  417507:	sub    eax,DWORD PTR [edi-0xe]
  41750a:	add    ebx,eax
  41750c:	shl    BYTE PTR [ebp-0x23],1
  41750f:	inc    ebx
  417510:	inc    edi
  417511:	repnz add DWORD PTR [ebx+0x3c1cddf],ecx
  417518:	dec    ebx
  417519:	repnz mov dl,0x8a
  41751c:	xlat   BYTE PTR ds:[ebx]
  41751d:	int    0xc1
  41751f:	add    ecx,DWORD PTR [ebx-0xe]
  417522:	scas   eax,DWORD PTR es:[edi]
  417523:	mov    bh,BYTE PTR [edi+0x4b03d5cd]
  417529:	repnz mov ah,0x4f
  41752c:	shr    BYTE PTR [ebp-0x18],1
  41752f:	aas    
  417530:	inc    edi
  417531:	repnz add DWORD PTR [edx+0x1b],edx
  417535:	shl    BYTE PTR gs:[ebx],0x53
  417539:	fidiv  DWORD PTR [esp+esi*8+0x0]
	...
  417564:	mov    BYTE PTR fs:[ebx+0x1f62fc3],0x0
  41756c:	mov    BYTE PTR [ebp+0x87fcb40],ah
  417572:	mov    bl,0x40
  417574:	adc    dh,dl
  417576:	stos   DWORD PTR es:[edi],eax
  417577:	inc    eax
  417578:	adc    dh,dl
  41757a:	cmp    al,0x7d
  41757c:	das    
  41757d:	mov    DWORD PTR [ebx+0x14],edi
  417580:	sub    al,0x7
  417582:	call   0x729ff43d
  417587:	mov    ecx,0x3923844
  41758c:	fnstsw WORD PTR [edx+0x98bc24f]
  417592:	jo     0x4175a8
  417594:	or     eax,DWORD PTR [edx]
  417596:	jmp    0x41759a
  417598:	mov    ch,0xd
  41759a:	idiv   DWORD PTR [ebx+edi*8-0x76]
  41759e:	dec    eax
  41759f:	or     edi,DWORD PTR [esi+edi*4]
  4175a2:	jae    0x4175a1
  4175a4:	sub    al,0x57
  4175a6:	test   al,0x3
  4175a8:	(bad)  
  4175a9:	shl    esi,1
  4175ab:	js     0x4175a8
  4175ad:	push   ss
  4175ae:	jne    0x4175f5
  4175b0:	les    ecx,FWORD PTR [ebp+0x4]
  4175b3:	cmp    al,0x9
  4175b5:	mov    ah,BYTE PTR [edx]
  4175b7:	int3   
  4175b8:	inc    eax
  4175b9:	fcomp  st(0)
  4175bb:	xor    eax,0xff8c8a2e
  4175c0:	dec    ebx
  4175c1:	jl     0x4175b4
  4175c3:	jl     0x417559
  4175c5:	(bad)  
  4175c6:	pop    ds
  4175c7:	add    DWORD PTR [eax],0x0
	...
  4175ed:	add    BYTE PTR [eax],al
  4175ef:	add    BYTE PTR [eax],dl
  4175f1:	or     ebp,edx
  4175f3:	push   ds
  4175f4:	dec    ecx
  4175f5:	xchg   esp,eax
  4175f6:	fcomi  st,st(5)
  4175f8:	mov    edi,0xa886e880
  4175fd:	(bad)  
  4175fe:	not    DWORD PTR [edx]
  417600:	jge    0x417608
  417602:	call   0xf7d61e8d
  417607:	adc    ch,BYTE PTR [ebp+0x6]
  41760a:	call   0x7557f7e3
  41760f:	test   DWORD PTR [edi+edx*2-0x6bb0d800],ecx
  417616:	xor    al,0xd1
  417618:	lds    eax,FWORD PTR [ebx*1+0x44904524]
  41761f:	aam    0x80
  417621:	mov    es,WORD PTR [esp+esi*8-0x48]
  417625:	repz or BYTE PTR [ebx+0x4],ah
  417629:	cmp    eax,0x250c71ac
  41762e:	nop
  41762f:	sub    al,ah
  417631:	add    bl,BYTE PTR ds:0x1cc367f5
  417637:	jmp    0x9f4e7f84
  41763c:	into   
  41763d:	aad    0x4e
  41763f:	test   al,0x48
  417641:	xchg   esp,eax
  417642:	xor    al,0xf1
  417644:	int    0x3
  417646:	cmp    esp,ecx
  417648:	out    dx,al
  417649:	pop    DWORD PTR [esp+edi*8+0x20]
  41764d:	mov    es,WORD PTR [esp+ebx*8+0x58]
  417651:	repz or BYTE PTR [ebx+0x0],ah
	...
  417679:	add    BYTE PTR [eax],al
  41767b:	add    BYTE PTR [edi*1+0x250461ac],cl
  417682:	nop
  417683:	stos   BYTE PTR es:[edi],al
  417684:	int    0x2
  417686:	cmp    DWORD PTR [ebp-0x1926c691],ebx
  41768c:	adc    cl,BYTE PTR [ebx+0x5879fe0]
  417692:	jle    0x417619
  417694:	push   ebx
  417695:	cdq    
  417696:	add    BYTE PTR [ebp+0x4a],dh
  417699:	xchg   edx,eax
  41769a:	add    al,0x54
  41769c:	adc    BYTE PTR [ebx+0x3f],0xe9
  4176a0:	(bad)
  4176a4:	pop    ebx
  4176a5:	pop    es
  4176a6:	(bad)  
  4176a7:	out    dx,al
  4176a8:	and    cl,BYTE PTR [ebx+0x58827f8]
  4176ae:	jle    0x4176fd
  4176b0:	inc    esp
  4176b1:	cdq    
  4176b2:	add    BYTE PTR [eax],al
  4176b4:	or     ecx,DWORD PTR es:[ecx+0x4bd4ff04]
  4176bb:	inc    ecx
  4176bc:	bound  eax,QWORD PTR [edx]
  4176be:	cmp    BYTE PTR [ebp-0x1e78e],0x71
  4176c5:	mov    ?,edx
  4176c7:	sbb    BYTE PTR [esi+0x4b],bl
  4176ca:	aas    
  4176cb:	sbb    eax,0xfffffffd
  4176ce:	push   cs
  4176cf:	mov    WORD PTR [eax],ds
  4176d1:	sbb    bh,dh
  4176d3:	call   FWORD PTR [edi-0x6200f274]
  4176d9:	sbb    cl,BYTE PTR [ebp-0x18]
  4176dc:	sub    ecx,DWORD PTR [ecx]
	...
  417706:	add    BYTE PTR [eax],al
  417708:	cmp    eax,0x9e895ab7
  41770d:	mov    ah,0xbf
  41770f:	or     dl,dh
  417711:	mov    ebx,0x2963e588
  417716:	jge    0x417718
  417718:	loop   0x417722
  41771a:	push   ecx
  41771b:	push   esi
  41771c:	lds    eax,FWORD PTR [ebp-0x4390f7bc]
  417722:	jge    0x4176dd
  417724:	repnz or BYTE PTR [eax],al
  417727:	add    BYTE PTR [ebx+0x4e],ch
  41772a:	add    al,0xb6
  41772d:	test   DWORD PTR [edx],esi
  41772f:	add    DWORD PTR [ebp+ecx*1+0x0],0xe347a2fc
  417737:	push   es
  417738:	sub    esi,edx
  41773a:	and    bh,0x72
  41773d:	or     al,BYTE PTR [eax]
  41773f:	add    BYTE PTR [ebx+0x32],dh
  417742:	pop    es
  417743:	or     DWORD PTR [ebp+eax*4+0xd458135],ebx
  41774a:	add    ah,bh
  41774c:	jb     0x417795
  41774e:	out    dx,al
  41774f:	or     bh,BYTE PTR [ebx+0x1a]
  417752:	mov    BYTE PTR [edx],dh
  417754:	dec    ebx
  417755:	imul   esi,DWORD PTR [edi],0x7cee8982
  41775b:	aaa    
  41775c:	retf   0x41d3
  41775f:	push   cs
  417760:	dec    ebx
  417761:	repnz inc edx
  417763:	out    dx,al
  417764:	dec    ebp
  417765:	out    0xcf,eax
  417767:	mov    BYTE PTR ds:0x80d467,cl
	...
  417791:	add    BYTE PTR [eax],al
  417793:	add    BYTE PTR ds:0x4b0211f2,ch
  417799:	mov    cl,0x27
  41779b:	or     eax,eax
  41779d:	test   BYTE PTR [edx+eiz*8+0xf24b16c],0x52
  4177a5:	lods   al,BYTE PTR ds:[esi]
  4177a6:	jl     0x4177bf
  4177a8:	retf   0x18e
  4177ab:	lock dec eax
  4177ad:	repnz inc edx
  4177af:	jmp    0x7939:0x882fe947
  4177b6:	xor    al,0x82
  4177b8:	or     esi,ebp
  4177ba:	jl     0x4177eb
  4177bc:	enter  0xd053,0xa
  4177c0:	cmp    BYTE PTR [ecx-0x2c],ch
  4177c3:	dec    eax
  4177c4:	enter  0x531,0x85
  4177c8:	adc    bh,BYTE PTR [ebp+0x728e8c87]
  4177ce:	mov    cl,0xe7
  4177d0:	and    al,0xf2
  4177d2:	add    DWORD PTR [eax],eax
  4177d4:	and    al,0xcc
  4177d6:	lods   al,BYTE PTR ds:[esi]
  4177d7:	mov    BYTE PTR [edi+0x4b0343c4],ch
  4177dd:	lds    esp,FWORD PTR [bp+di]
  4177e0:	inc    edi
  4177e1:	pop    eax
  4177e2:	jno    0x41782f
  4177e4:	or     dh,dl
  4177e6:	jl     0x4177f1
  4177e8:	sar    cl,cl
  4177ea:	test   cl,al
  4177ec:	dec    edi
  4177ed:	outs   dx,DWORD PTR ds:[esi]
  4177ee:	inc    ecx
  4177ef:	add    ecx,edx
  4177f1:	div    edx
  4177f3:	dec    esp
  4177f4:	or     cl,BYTE PTR [ecx]
  4177f6:	out    0x91,eax
	...
  417820:	outs   dx,BYTE PTR ds:[esi]
  417821:	(bad)  
  417822:	jecxz  0x417827
  417824:	ror    BYTE PTR [ebx+ecx*1+0x8],0xb1
  417829:	cwde   
  41782a:	sbb    eax,ebp
  41782c:	fs mov gs,edi
  41782f:	jl     0x417883
  417831:	mov    BYTE PTR [edi-0x143937f8],ah
  417837:	test   BYTE PTR [edx+0x18],dl
  41783a:	sbb    al,0xc5
  41783c:	inc    esp
  41783d:	jns    0x4177d4
  41783f:	inc    edx
  417840:	dec    eax
  417841:	or     DWORD PTR [edi*2-0x4cc8a5d1],esi
  417848:	ror    DWORD PTR [edi+ebx*8+0x7a],0x87
  41784d:	adc    eax,0x5814b974
  417852:	pop    ss
  417853:	sbb    al,0x35
  417855:	or     edi,esp
  417857:	add    esp,DWORD PTR [ebx+0x4c51b99]
  41785d:	xchg   esi,eax
  41785e:	lods   al,BYTE PTR ds:[esi]
  41785f:	or     ecx,DWORD PTR [ecx+esi*8+0x94b0430]
  417866:	mov    edx,0xb8018780
  41786b:	sbb    esi,DWORD PTR [ecx+ecx*1-0x19]
  41786f:	add    eax,DWORD PTR [eax+0xab14b90]
  417875:	adc    ah,bh
  417877:	mov    dl,0xc1
  417879:	dec    ebp
  41787a:	add    edi,esp
  41787c:	rcr    DWORD PTR [ebp-0x35],1
  41787f:	call   ebx
  417881:	enter  0xfea7,0x0
	...
  4178a9:	add    BYTE PTR [eax],al
  4178ab:	add    dh,bh
  4178ad:	adc    BYTE PTR [eax],ch
  4178af:	and    eax,0x7ce19054
  4178b4:	mov    ecx,DWORD PTR [ecx-0xa]
  4178b7:	push   ebp
  4178b8:	push   ebx
  4178b9:	enter  0xf408,0x41
  4178bd:	verr   WORD PTR [eax-0x6f]
  4178c1:	xchg   ecx,eax
  4178c2:	mov    edi,0x7bc85a9
  4178c7:	test   al,0x27
  4178c9:	or     cl,BYTE PTR [ecx]
  4178cb:	repz test DWORD PTR [edi],0xc8c9b887
  4178d2:	add    al,0x60
  4178d4:	or     DWORD PTR [edx+0xd],eax
  4178d7:	jg     0x41794a
  4178d9:	adc    DWORD PTR [edi],edx
  4178db:	jo     0x4178ec
  4178dd:	inc    edx
  4178de:	or     eax,0xdfc94f7f
  4178e3:	rol    edi,1
  4178e5:	adc    BYTE PTR [edi-0x49ecf758],al
  4178eb:	(bad)
  4178f0:	xor    dl,BYTE PTR [ecx+0x428f600a]
  4178f6:	or     eax,0xdfc91f3f
  4178fb:	icebp  
  4178fc:	adc    DWORD PTR [eax],edx
  4178fe:	or     eax,0xbf10483f
  417903:	pusha  
  417904:	add    bl,BYTE PTR [edi-0x3e]
  417907:	icebp  
  417908:	dec    eax
  417909:	push   esi
  41790a:	mov    DWORD PTR [ebp-0x5a76f614],esi
	...
  417938:	in     al,0xd
  41793a:	mov    ebx,ebp
  41793c:	(bad)
  417940:	inc    edi
  417941:	dec    eax
  417942:	mov    ebx,ebp
  417944:	(bad)
  417948:	inc    edi
  417949:	dec    eax
  41794a:	mov    ebx,ebp
  41794c:	pminsw mm1,QWORD PTR [eax]
  41794f:	jno    0x417998
  417951:	dec    eax
  417952:	xchg   DWORD PTR [edx],esi
  417954:	(bad)  
  417955:	nop
  417956:	shr    BYTE PTR [edx+0xa],1
  417959:	push   es
  41795a:	mov    ecx,ebp
  41795c:	and    BYTE PTR [edi],al
  41795e:	mov    DWORD PTR [eax],eax
  417960:	mov    al,0x4c
  417962:	in     eax,0x18
  417964:	sbb    cl,BYTE PTR ds:0x4ca08b3f
  41796a:	in     eax,0x10
  41796c:	jmp    0xe546:0x708b3f0c
  417973:	or     dl,bh
  417975:	add    eax,0x7d708b3f
  41797a:	int    0x88
  41797c:	jae    0x41792e
  41797e:	mov    edi,0x88ba7208
  417983:	in     eax,0xe1
  417985:	sub    BYTE PTR [ecx],cl
  417987:	push   ebx
  417988:	sub    al,0xbc
  41798a:	mov    al,BYTE PTR [ebp+0x26]
  41798d:	adc    BYTE PTR [eax+ecx*1-0x47],0xfb
  417992:	mov    cl,BYTE PTR [ebp+0x3a]
  417995:	or     BYTE PTR [eax+0x4],0xab
  417999:	cmp    al,al
  41799b:	jmp    0x41799d
	...
  4179c1:	add    BYTE PTR [eax],al
  4179c3:	add    BYTE PTR [esi],ch
  4179c5:	fmul   st(2),st
  4179c7:	adc    ecx,0x250f0efe
  4179cd:	(bad)  
  4179cf:	mov    DWORD PTR [esp+ecx*2+0x1ac304e3],esi
  4179d6:	mov    dh,dl
  4179d8:	xor    ebx,DWORD PTR [edi]
  4179da:	or     eax,0xf2842431
  4179df:	add    DWORD PTR [ecx-0xdff01f2],0x2489d8db
  4179e9:	dec    esp
  4179ea:	jecxz  0x4179fc
  4179ec:	rcr    DWORD PTR [edx],cl
  4179ee:	mov    dh,cl
  4179f0:	and    ebx,DWORD PTR [edi]
  4179f2:	push   DWORD PTR [eax]
  4179f4:	pop    esp
  4179f5:	test   dl,dh
  4179f7:	adc    DWORD PTR [ecx-0x26],0xdb913332
  4179fe:	xlat   BYTE PTR ds:[ebx]
  4179ff:	mov    DWORD PTR [ebx+0x38],ecx
  417a02:	inc    ecx
  417a03:	in     eax,0x49
  417a05:	loope  0x417a19
  417a07:	mov    BYTE PTR [ebp+0x5a071e31],cl
  417a0d:	sbb    BYTE PTR [ecx-0xe],bh
  417a10:	retf   0xb13
  417a13:	inc    DWORD PTR [ebp-0x2d262d0e]
  417a19:	enter  0xe542,0x43
  417a1d:	and    DWORD PTR [esi],edi
  417a1f:	mov    dh,dh
  417a21:	aad    0x2
  417a23:	not    al
  417a25:	dec    ebp
  417a26:	adc    al,al
	...
  417a50:	ins    BYTE PTR es:[edi],dx
  417a51:	out    0x80,eax
  417a53:	out    0x4a,al
  417a55:	jns    0x417a69
  417a57:	or     BYTE PTR [edx+0x69],dl
  417a5a:	xor    esi,DWORD PTR [eax]
  417a5c:	adc    eax,0x28801069
  417a61:	pop    esp
  417a62:	push   edi
  417a63:	test   eax,0x3027e0e1
  417a68:	adc    ah,BYTE PTR [ebp-0x2b]
  417a6b:	adc    edx,edx
  417a6d:	mov    dh,0x42
  417a6f:	out    dx,al
  417a70:	cmp    al,0x73
  417a72:	and    al,0x0
  417a74:	ret    0xfa83
  417a77:	stc    
  417a78:	add    al,0x2d
  417a7a:	or     al,0x7
  417a7c:	dec    ebx
  417a7d:	repnz add DWORD PTR [ecx+0x1b23310d],ecx
  417a84:	ret    0x422e
  417a87:	out    dx,al
  417a88:	inc    edi
  417a89:	imul   edx,DWORD PTR [eax],0x4368e008
  417a8f:	or     BYTE PTR [ebx],0xee
  417a92:	rcr    BYTE PTR ds:0xe5801fc2,1
  417a98:	or     al,0x6b
  417a9a:	aad    0xb4
  417a9c:	pop    ebx
  417a9d:	xchg   ebp,eax
  417a9e:	ret    0xd3ff
  417aa1:	or     BYTE PTR [esi+0x42],al
  417aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aa5:	push   es
  417aa6:	push   0xe708b024
  417aab:	add    edx,DWORD PTR [eax-0x48]
  417aae:	div    DWORD PTR [eax+0x2c70090b]
	...
  417adc:	mov    ebp,edi
  417ade:	in     eax,dx
  417adf:	and    BYTE PTR [ebp+0x4b03e7fc],0x14
  417ae6:	repz sbb ecx,DWORD PTR ss:[edx-0x19]
  417aeb:	jl     0x417a82
  417aed:	leave  
  417aee:	into   
  417aef:	repnz retf 
  417af1:	out    0xd3,eax
  417af3:	add    al,0x4b
  417af5:	or     edx,esp
  417af7:	push   edx
  417af8:	dec    esp
  417af9:	push   eax
  417afa:	sub    BYTE PTR [edx+eax*8],al
  417afd:	jne    0x417ab2
  417aff:	jge    0x417a87
  417b01:	mov    esp,DWORD PTR [edi-0x52d2e00]
  417b07:	jmp    0x22ac5adf
  417b0c:	jne    0x417aa0
  417b0e:	rcl    DWORD PTR [eax+0x3c],cl
  417b11:	push   edi
  417b12:	sub    BYTE PTR [eax+edx*2],al
  417b15:	je     0x417aaa
  417b17:	jge    0x417b16
  417b19:	enter  0x296,0xca
  417b1d:	out    0x7b,al
  417b1f:	add    al,0x4b
  417b21:	or     edx,esp
  417b23:	push   edx
  417b24:	push   esp
  417b25:	push   ebp
  417b26:	sub    BYTE PTR [edx+edx*8],al
  417b29:	fisubr WORD PTR [eax]
  417b2b:	sbb    eax,DWORD PTR [esi-0x78]
  417b2e:	inc    esi
  417b2f:	or     ah,ch
  417b31:	(bad)  
  417b32:	out    0xfe,eax
  417b34:	popf   
  417b35:	sbb    DWORD PTR [ecx+0x2691dcc4],edi
  417b3b:	inc    ebp
  417b3c:	in     eax,0x17
  417b3e:	push   0x23
	...
  417b67:	add    al,dl
  417b69:	or     DWORD PTR [eax],eax
  417b6b:	jmp    0xd9f68db8
  417b70:	clc    
  417b71:	dec    ecx
  417b72:	add    al,bl
  417b74:	pop    esi
  417b75:	xchg   ecx,eax
  417b76:	(bad)  
  417b77:	sub    BYTE PTR [ecx+0x22],ch
  417b7a:	xchg   DWORD PTR [esi],edi
  417b7c:	push   cs
  417b7d:	out    dx,eax
  417b7e:	add    al,0x60
  417b80:	xor    al,0x11
  417b82:	stc    
  417b83:	jo     0x417b8e
  417b85:	mov    eax,eax
  417b87:	in     eax,0x75
  417b89:	sbb    al,0x87
  417b8b:	pop    ss
  417b8c:	int3   
  417b8d:	in     al,0x3d
  417b8f:	bound  ebx,QWORD PTR [ebx-0x71c3ef4b]
  417b95:	dec    BYTE PTR [eax+0x6ef07be]
  417b9b:	push   0xe9010229
  417ba0:	dec    eax
  417ba1:	adc    dh,BYTE PTR [ebp+0x499dd9]
  417ba7:	jo     0x417bca
  417ba9:	leave  
  417baa:	in     eax,dx
  417bab:	out    0xcf,eax
  417bad:	out    0xfc,al
  417baf:	jmp    0x5e4a84fc
  417bb4:	cmp    BYTE PTR [ecx+0x3f],bl
  417bb7:	jmp    0x87015b6b
  417bbc:	sbb    cl,BYTE PTR [ecx+0x9488de5]
  417bc2:	add    dl,dh
  417bc4:	jns    0x417bd4
  417bc6:	dec    ebp
  417bc7:	sub    BYTE PTR [edi-0x70],al
  417bca:	jae    0x417c49
	...
  417bf4:	xchg   esp,eax
  417bf6:	sub    DWORD PTR [ecx+0x1ad190fc],0x6ade90e1
  417c00:	sub    bh,BYTE PTR [edi]
  417c02:	mov    DWORD PTR ds:0xa8560e7a,ebx
  417c08:	dec    eax
  417c09:	adc    dh,BYTE PTR [ebx+0x0]
  417c0c:	push   ss
  417c0d:	jge    0x417bed
  417c0f:	sar    DWORD PTR [ebp+0x8],0x7f
  417c13:	out    0x7e,eax
  417c15:	or     al,BYTE PTR [eax]
  417c17:	add    BYTE PTR [ecx-0x1cabf2a6],ch
  417c1d:	or     DWORD PTR [edi+0xb2363df],eax
  417c23:	adc    DWORD PTR [ebp+0x6],0xfeb2fffd
  417c2a:	mov    dh,0x10
  417c2c:	mov    al,0xc4
  417c2e:	std    
  417c2f:	mov    BYTE PTR ds:0xf316ee45,ch
  417c35:	sub    bh,cl
  417c37:	add    BYTE PTR [edx+0x9],dh
  417c3a:	or     DWORD PTR [edi+0x40b972],esi
  417c40:	push   ebx
  417c41:	sbb    bh,dh
  417c43:	dec    ebp
  417c44:	jp     0x417bc9
  417c46:	jl     0x417c40
  417c48:	jb     0x417c4a
  417c4a:	test   DWORD PTR [ebx-0x7601f074],ebp
  417c50:	call   0xd03f:0xab1fdd49
  417c57:	out    dx,al
	...
  417c80:	stos   DWORD PTR es:[edi],eax
  417c81:	dec    eax
  417c82:	or     cl,dh
  417c84:	mov    ebx,0xbbc83035
  417c89:	inc    esi
  417c8a:	and    bl,0x88
  417c8d:	pop    ebx
  417c8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c8f:	stos   BYTE PTR es:[edi],al
  417c90:	add    ebp,DWORD PTR [edi]
  417c92:	xor    cl,bl
  417c94:	fwait
  417c95:	xor    eax,0x7fede0c0
  417c9a:	rcl    ecx,cl
  417c9c:	int3   
  417c9d:	cmp    BYTE PTR [edi-0x327f7ff7],0xc1
  417ca4:	call   0x8046:0x7bc830fd
  417cab:	jecxz  0x417cf8
  417cad:	push   ebx
  417cae:	add    al,0xff
  417cb0:	dec    ebx
  417cb1:	and    DWORD PTR [ecx],ebp
  417cb3:	mov    bl,dh
  417cb5:	xor    DWORD PTR [edi+eax*1],esp
  417cb8:	sbb    dh,BYTE PTR [eax]
  417cba:	jns    0x417c8b
  417cbc:	mov    cl,BYTE PTR [edx+0x6]
  417cbf:	xor    DWORD PTR [ebx-0x577fbc97],edx
  417cc5:	(bad)  
  417cc7:	xor    bh,BYTE PTR [eax-0x1f]
  417cca:	sub    cl,BYTE PTR [eax+0x1243183]
  417cd0:	pop    edx
  417cd1:	xor    BYTE PTR [ecx-0x39],bh
  417cd4:	mov    bl,BYTE PTR [edx]
  417cd6:	hlt    
  417cd7:	xor    BYTE PTR [ebx+0x79],bh
  417cda:	inc    ebx
  417cdb:	sub    BYTE PTR [eax-0xd],0x8
  417cdf:	(bad)  
  417ce0:	jl     0x417ca3
  417ce2:	sub    ecx,DWORD PTR [eax+0x0]
	...
  417d0c:	xchg   ebx,eax
  417d0d:	mov    cl,0x21
  417d0f:	(bad)  
  417d12:	jp     0x417cdb
  417d14:	mov    cl,dl
  417d16:	std    
  417d17:	xor    BYTE PTR [ebx+0x69],bh
  417d1a:	inc    esp
  417d1b:	sub    BYTE PTR [eax-0xd],0xf8
  417d1f:	push   cs
  417d20:	cmp    al,0x1
  417d22:	sub    al,0x8a
  417d24:	mov    gs,edx
  417d26:	inc    edx
  417d27:	loop   0x417d70
  417d29:	add    DWORD PTR ds:0xbe6f5388,edi
  417d2f:	pop    es
  417d30:	inc    edi
  417d31:	ja     0x417cf1
  417d33:	pop    es
  417d34:	rol    BYTE PTR [ecx],cl
  417d36:	test   eax,0x1569805d
  417d3b:	pop    esp
  417d3c:	or     edx,edi
  417d3e:	add    DWORD PTR [ebx+0x75],edx
  417d41:	ja     0x417ce8
  417d43:	and    edx,DWORD PTR [edi+0xc]
  417d46:	jnp    0x417dbb
  417d48:	daa    
  417d49:	loop   0x417cea
  417d4b:	test   ch,bh
  417d4d:	or     dh,dh
  417d4f:	outs   dx,DWORD PTR ds:[esi]
  417d50:	sbb    ecx,DWORD PTR [edx*4+0x27b45542]
  417d57:	mov    bl,0xcf
  417d59:	inc    edi
  417d5a:	fbstp  TBYTE PTR [ebx+0x84155ec]
  417d60:	int    0x70
  417d62:	xlat   BYTE PTR ds:[ebx]
  417d63:	mov    dh,0xb
  417d65:	or     DWORD PTR [edi],edi
  417d67:	cld    
  417d68:	sar    bl,0x2e
  417d6b:	clc    
  417d6c:	std    
  417d6d:	repnz mov ebp,0xb4
	...
  417d97:	add    BYTE PTR [ecx+ecx*2+0x70a50821],ah
  417d9e:	ja     0x417d56
  417da0:	or     ecx,DWORD PTR [ecx]
  417da2:	dec    DWORD PTR [edi]
  417da4:	xchg   ecx,eax
  417da5:	sti    
  417da6:	push   es
  417da7:	test   eax,0x3efc6f1
  417dac:	push   ds
  417dad:	xchg   edx,eax
  417dae:	or     al,0xb3
  417db0:	or     al,0x58
  417db2:	bound  edi,QWORD PTR [esi-0x7bb6fb4]
  417db8:	mov    edi,0x14b2df55
  417dbd:	icebp  
  417dbe:	and    al,0x8
  417dc0:	pop    ebp
  417dc1:	sti    
  417dc2:	aas    
  417dc3:	je     0x417dc5
  417dc5:	dec    edx
  417dc6:	out    0x78,eax
  417dc8:	pop    es
  417dc9:	add    DWORD PTR [eax],ebx
  417dcb:	sbb    al,0x3d
  417dcd:	(bad)  
  417dce:	mov    dh,0x7
  417dd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dd1:	sbb    DWORD PTR [eax*8+0xc2c8e34],ebx
  417dd8:	jl     0x417dcb
  417dda:	nop
  417ddb:	or     BYTE PTR ds:0x8f73fffb,ah
  417de1:	dec    eax
  417de2:	out    0x78,eax
  417de4:	pop    DWORD PTR [ecx]
  417de6:	sbb    BYTE PTR [ecx+esi*8],bl
  417de9:	std    
  417dea:	jle    0x417df3
  417dec:	cdq    
  417ded:	mov    WORD PTR [eax],es
  417def:	sub    al,0x4f
  417df1:	dec    edx
  417df2:	call   0xfe3cc162
  417df7:	ret    0xee6f
  417dfa:	pop    ebx
  417dfb:	sub    eax,DWORD PTR [eax]
	...
  417e21:	add    BYTE PTR [eax],al
  417e23:	add    bh,ah
  417e25:	cli    
  417e26:	push   esp
  417e27:	pusha  
  417e28:	sub    al,BYTE PTR [edi+0x5499f9ec]
  417e2e:	mov    DWORD PTR [eax+edx*8+0x43ed738f],esp
  417e35:	inc    ebp
  417e36:	clc    
  417e37:	cdq    
  417e38:	stc    
  417e39:	loop   0x417e35
  417e3b:	xor    cl,BYTE PTR [ebx+edi*8-0x75]
  417e3f:	lods   al,BYTE PTR ds:[esi]
  417e40:	pop    eax
  417e41:	dec    edx
  417e42:	sub    DWORD PTR [edx],0x4e857a7
  417e48:	push   eax
  417e49:	sti    
  417e4a:	std    
  417e4b:	sbb    DWORD PTR [eax],0x13e93f4e
  417e51:	inc    ebp
  417e52:	clc    
  417e53:	cdq    
  417e54:	pusha  
  417e55:	xchg   ebx,eax
  417e56:	cld    
  417e57:	test   BYTE PTR [ebp+0x62],0x90
  417e5b:	popf   
  417e5c:	(bad)  
  417e5d:	cli    
  417e5e:	mov    WORD PTR [edi+edx*2],gs
  417e61:	dec    edx
  417e62:	call   0xfe3ccad7
  417e67:	bound  esi,QWORD PTR [ebx+0x3f2489fe]
  417e6d:	xchg   ecx,eax
  417e6e:	inc    ebx
  417e6f:	vsubsd xmm6,xmm6,xmm0
  417e73:	push   ecx
  417e74:	aas    
  417e75:	dec    ebp
  417e76:	aas    
  417e77:	jmp    0x1a39c43f
  417e7c:	push   edi
  417e7d:	imul   edi,esp,0xffffffa6
  417e80:	inc    ebp
  417e81:	bound  edx,QWORD PTR [eax]
  417e83:	sub    al,0xe
  417e85:	cli    
  417e86:	mov    WORD PTR [eax+eax*1],gs
	...
  417ead:	add    BYTE PTR [eax],al
  417eaf:	add    BYTE PTR [edi],dh
  417eb1:	dec    edx
  417eb2:	call   0xfe3cc1bf
  417eb7:	add    BYTE PTR [ecx+0x2f8bf9b1],bl
  417ebd:	adc    eax,0x7d764588
  417ec2:	pop    esp
  417ec3:	lock dec edx
  417ec5:	jne    0x417f13
  417ec7:	inc    ecx
  417ec8:	loop   0x417e4a
  417eca:	inc    esp
  417ecb:	clc    
  417ecc:	mov    ds:0x75fc461d,al
  417ed1:	add    esp,DWORD PTR [ebp-0x70]
  417ed4:	mov    bh,0xc4
  417ed6:	std    
  417ed7:	mov    WORD PTR [edi+0x4be84d15],ds
  417edd:	adc    esi,edi
  417edf:	(bad)  
  417ee0:	fadd   QWORD PTR [eax+0x1dd2f844]
  417ee6:	(bad)  
  417ee8:	add    eax,DWORD PTR gs:[edx-0x7354653a]
  417eef:	inc    ebp
  417ef0:	inc    edx
  417ef1:	mov    dh,0xe5
  417ef3:	sar    DWORD PTR [ecx],cl
  417ef5:	add    edi,esi
  417ef7:	pop    esi
  417ef8:	jmp    0x309f6879
  417efd:	(bad)  
  417efe:	std    
  417eff:	push   esp
  417f00:	jmp    0x417f2a
  417f02:	sub    ah,0x16
  417f05:	add    eax,0xab310000
  417f0a:	push   esi
  417f0b:	mov    esp,DWORD PTR [edi]
  417f0d:	std    
  417f0e:	mov    dh,BYTE PTR [ebp+0x66]
  417f11:	jb     0x417e97
  417f13:	add    BYTE PTR [eax],0x0
	...
  417f3a:	add    BYTE PTR [eax],al
  417f3c:	test   BYTE PTR [ebx],al
  417f3e:	(bad)  
  417f3f:	push   eax
  417f40:	jp     0x417f83
  417f42:	add    BYTE PTR [eax],al
  417f44:	xor    dl,BYTE PTR [ebx-0x40dd9803]
  417f4a:	inc    eax
  417f4b:	add    BYTE PTR [edx],cl
  417f4d:	jge    0x417f4a
  417f4f:	jmp    ebp
  417f51:	fmul   st(7),st
  417f53:	mov    dh,BYTE PTR [eax+0x4b414bfd]
  417f59:	loop   0x417fd4
  417f5b:	add    ebx,DWORD PTR [ecx+0x24]
  417f5e:	jg     0x417f59
  417f60:	inc    ebx
  417f61:	push   cs
  417f62:	adc    esi,eax
  417f64:	into   
  417f65:	or     al,BYTE PTR [esi]
  417f67:	(bad)  
  417f68:	cld    
  417f69:	loope  0x417f6c
  417f6b:	add    BYTE PTR [ebx-0x75],cl
  417f6e:	mov    al,0x88
  417f70:	sti    
  417f71:	jns    0x417ff0
  417f73:	jae    0x417f5a
  417f75:	push   edi
  417f76:	add    esi,DWORD PTR [eax]
  417f78:	stc    
  417f79:	dec    ebx
  417f7a:	aam    0x8a
  417f7c:	into   
  417f7d:	fiadd  WORD PTR [ebx]
  417f7f:	dec    ah
  417f81:	jns    0x418000
  417f83:	jnp    0x417f4a
  417f85:	aaa    
  417f86:	add    edi,esi
  417f88:	(bad)  
  417f89:	mov    dh,0x3
  417f8b:	(bad)  
  417f8c:	mov    ah,0x6b
  417f8e:	jne    0x41800b
  417f90:	lods   eax,DWORD PTR ds:[esi]
  417f91:	das    
  417f92:	add    ecx,DWORD PTR [esi]
  417f94:	in     eax,0xe3
  417f96:	sbb    bh,0x1c
  417f99:	imul   eax,DWORD PTR [ebp+0x7b],0xffffff95
  417f9d:	pop    es
  417f9e:	add    ecx,DWORD PTR [esi]
	...
  417fc8:	aad    0xcf
  417fca:	shl    bh,cl
  417fcc:	shl    ecx,cl
  417fce:	cmp    eax,DWORD PTR [edx]
  417fd0:	dec    ebx
  417fd1:	mov    ds:0xea7182bf,eax
  417fd6:	xchg   BYTE PTR [ebx+ecx*8],al
  417fd9:	sub    eax,DWORD PTR [esi*2-0x1851bf73]
  417fe0:	lock fild WORD PTR [esi+edi*8]
  417fe4:	enter  0x898d,0xfd
  417fe8:	dec    esp
  417fe9:	iret   
  417fea:	add    DWORD PTR [eax-0x59711d80],eax
  417ff0:	enter  0x897c,0xfd
  417ff4:	xor    al,0xa7
  417ff6:	add    DWORD PTR [ebp-0x33],esi
  417ff9:	or     BYTE PTR [esi+edi*2-0x5c],dh
  417ffd:	neg    DWORD PTR [esi+0xee18c04]
  418003:	add    ecx,DWORD PTR [ebx+0x9]
  418006:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  418008:	jno    0x417f8c
  41800a:	xchg   ebx,eax
  41800b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41800c:	or     al,BYTE PTR [ecx]
  41800e:	out    0xae,eax
  418010:	shr    ebp,cl
  418012:	push   0xe709c017
  418017:	add    ebx,DWORD PTR [eax-0x788741a1]
  41801d:	add    DWORD PTR [edx-0x72],esi
  418020:	push   eax
  418021:	xchg   BYTE PTR [ebx+eax*4-0x2a],ch
  418025:	test   DWORD PTR [esi-0x4d],0x3e7f7e4
	...
  418054:	dec    ebx
  418055:	arpl   di,sp
  418057:	fwait
  418058:	dec    esp
  418059:	inc    edi
  41805a:	test   al,0x3
  41805c:	mov    ds:0xad042cdb,eax
  418061:	cmp    DWORD PTR [ecx],edi
  418063:	jns    0x41802f
  418065:	sbb    BYTE PTR [ebp-0x1470633e],ch
  41806b:	ror    DWORD PTR [edx],1
  41806d:	mov    WORD PTR [ecx],ss
  41806f:	repz adc dl,bh
  418072:	cs jle 0x418071
  418075:	idiv   dh
  418077:	add    ecx,DWORD PTR [ebx+0x9]
  41807a:	out    0x3,eax
  41807c:	pusha  
  41807d:	pop    esp
  41807e:	pusha  
  41807f:	adc    eax,ebx
  418081:	lea    ebx,[ebx+0x2]
  418084:	neg    DWORD PTR gs:[eax]
  418087:	(bad)  
  418088:	jb     0x4180c2
  41808a:	bound  ecx,QWORD PTR [ecx+0x3cef6df]
  418090:	ret    
  418091:	lea    eax,[ebx+0x2]
  418094:	inc    ebp
  418095:	idiv   DWORD PTR [esi+0xf7b789]
  41809b:	mov    dh,0x48
  41809d:	or     DWORD PTR [ebx-0x208b6d3],0xfffffff6
  4180a4:	or     cl,BYTE PTR [ecx]
  4180a6:	or     DWORD PTR [ecx+0x15bb80c8],0xdefdf749
  4180b0:	shl    BYTE PTR [edi+ebp*1],cl
  4180b3:	adc    edi,0xeac3f6
	...
  4180dd:	add    BYTE PTR [eax],al
  4180df:	add    BYTE PTR [eax+0x48],cl
  4180e2:	inc    edx
  4180e3:	push   0xfffffff5
  4180e5:	sbb    DWORD PTR [ebx-0x1c],edi
  4180e8:	enter  0x30,0xdc
  4180ec:	adc    ah,BYTE PTR [eax+0x56]
  4180ef:	push   ecx
  4180f0:	dec    ecx
  4180f1:	cmc    
  4180f2:	std    
  4180f3:	push   esi
  4180f4:	int3   
  4180f5:	stos   BYTE PTR es:[edi],al
  4180f6:	js     0x418147
  4180f8:	dec    eax
  4180f9:	test   DWORD PTR [eax],0x73098469
  4180ff:	xchg   ah,al
  418101:	mov    dl,0x78
  418103:	aaa    
  418104:	dec    eax
  418105:	test   DWORD PTR [eax],0x8382eab4
  41810b:	imul   ecx,DWORD PTR [ecx-0x9],0xaeb0b9fd
  418112:	add    cl,ch
  418114:	dec    eax
  418115:	push   esp
  418116:	pop    esi
  418117:	mov    dl,0xbf
  418119:	in     eax,0x5b
  41811b:	sub    edx,DWORD PTR [edi+0x9]
  41811e:	push   ecx
  41811f:	xchg   edi,eax
  418120:	and    DWORD PTR [eax+0x6f58cd44],eax
  418126:	mov    DWORD PTR [ebp+0x6c661d24],ecx
  41812c:	test   DWORD PTR [edx+0x9],edi
  41812f:	jo     0x4180c3
  418131:	cmp    BYTE PTR [eax-0x7],0xe2
  418135:	mov    dl,0xff
  418137:	call   0xcc8299
  41813c:	sbb    BYTE PTR ds:0x3c84c785,0xd2
  418143:	sldt   WORD PTR [eax]
	...
  41816a:	add    BYTE PTR [eax],al
  41816c:	mov    ch,0xdc
  41816e:	push   edx
  41816f:	and    edx,0x1
  418172:	push   eax
  418173:	call   0x3d752e
  418178:	cmp    bl,BYTE PTR ds:0xe2224149
  41817e:	cmp    bh,cl
  418180:	mov    ebp,0xa9b70e0a
  418185:	pop    esi
  418186:	push   ebx
  418187:	call   0x3d748e
  41818c:	dec    edx
  41818d:	popf   
  41818e:	dec    ecx
  41818f:	inc    ecx
  418190:	loop   0x418173
  418192:	es stc 
  418194:	ins    DWORD PTR es:[edi],dx
  418195:	or     ecx,DWORD PTR [esi]
  418197:	mov    bh,0x89
  418199:	pop    edi
  41819a:	push   esi
  41819b:	call   0x3d743e
  4181a0:	popf   
  4181a1:	addr16 push edi
  4181a3:	ret    0x9ba
  4181a6:	dec    edi
  4181a7:	mov    ebx,esi
  4181a9:	sub    eax,0x70a5308
  4181ae:	cmc    
  4181af:	call   FWORD PTR [ebp-0x73]
  4181b2:	mov    edi,0x9b280
  4181b7:	mov    eax,0x3d58a2
  4181bc:	sub    DWORD PTR [edx],ebx
  4181be:	test   DWORD PTR [ebx],edx
  4181c0:	and    edx,ecx
  4181c2:	add    al,0x83
  4181c4:	xor    DWORD PTR [esi],ecx
  4181c6:	cmp    DWORD PTR [eax+0x72004caf],edx
  4181cc:	dec    ebp
  4181cd:	mov    dl,0x90
  4181cf:	dec    ebp
	...
  4181f8:	mov    ds:0xdb108709,eax
  4181fd:	sbb    edi,DWORD PTR [edi-0x40]
  418200:	data16 mov WORD PTR [edi+0x141d4b04],?
  418207:	dec    esi
  418208:	or     ah,al
  41820a:	jae    0x4181f9
  41820c:	mov    al,ds:0x980008a0
  418211:	ja     0x418273
  418213:	and    al,0x43
  418215:	paddsb mm5,mm0
  418218:	xor    esp,DWORD PTR [edi+edi*8+0x463087f]
  41821f:	add    BYTE PTR [ebx+0x6a],cl
  418222:	adc    al,0x4b
  418224:	mov    ah,dl
  418226:	mov    WORD PTR [ecx],ss
  418228:	ret    0x84f2
  41822b:	ror    DWORD PTR [edi+0x5f],0xc4
  41822f:	add    al,0x3e
  418231:	push   edx
  418232:	dec    ebp
  418233:	aas    
  418234:	dec    ebx
  418235:	lock lock mov eax,0x4115db
  41823c:	shr    bh,1
  41823e:	mov    dl,BYTE PTR [eax]
  418240:	enter  0x81f,0x81
  418244:	or     esp,edi
  418246:	adc    BYTE PTR ds:[ebp-0x5f],bh
  41824a:	add    DWORD PTR [edx-0x4c],esi
  41824d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41824e:	ret    
  41824f:	add    al,0x4b
  418251:	popf   
  418252:	mov    ah,bl
  418254:	enter  0x1c4e,0x51
  418258:	adc    eax,0x85d67
	...
  418281:	add    BYTE PTR [eax],al
  418283:	add    al,dl
  418285:	xchg   ebp,eax
  418286:	or     eax,0x542a068b
  41828b:	push   ecx
  41828c:	mov    ds:0x8cfdfc0d,eax
  418291:	push   ebp
  418292:	inc    ebp
  418293:	lock sbb edi,DWORD PTR [ebp+0x43]
  418297:	or     BYTE PTR [ebx],bl
  418299:	sbb    ah,ah
  41829b:	clc    
  41829c:	je     0x418299
  41829e:	mov    es,WORD PTR [ebx+0x63]
  4182a1:	xchg   edx,eax
  4182a2:	test   cl,al
  4182a4:	cmp    ecx,DWORD PTR [ecx]
  4182a6:	cmp    ch,ah
  4182a8:	jp     0x41829b
  4182aa:	fiadd  WORD PTR [eax]
  4182ac:	loop   0x418246
  4182ae:	and    eax,DWORD PTR [ebx+0x4b]
  4182b1:	xchg   BYTE PTR [esp+edi*8],ah
  4182b4:	fwait
  4182b5:	loope  0x4182fb
  4182b7:	sti    
  4182b8:	ds hlt 
  4182ba:	dec    edi
  4182bb:	xchg   esp,eax
  4182bc:	xchg   DWORD PTR [edx-0x19],ecx
  4182bf:	mov    cs,WORD PTR [eax-0x4913e807]
  4182c5:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182c7:	add    BYTE PTR [edx+0x4b432b99],dh
  4182cd:	xchg   BYTE PTR [esp+ebp*8],ch
  4182d0:	jnp    0x4182b3
  4182d2:	or     bl,bh
  4182d4:	push   es
  4182d5:	hlt    
  4182d6:	jb     0x418336
  4182d8:	(bad)  
  4182d9:	jg     0x4182ff
  4182db:	hlt    
  4182dc:	int3   
  4182dd:	dec    ebp
  4182de:	jae    0x41826a
  4182e0:	nop
  4182e1:	stc    
  4182e2:	bound  ebx,QWORD PTR [esi-0x21]
  4182e5:	jg     0x418293
  4182e7:	jmp    0x4182e9
	...
  41830d:	add    BYTE PTR [eax],al
  41830f:	add    ah,al
  418311:	dec    ebp
  418312:	push   ebx
  418313:	mov    dh,BYTE PTR [eax-0x1f]
  418316:	mov    edi,0xe74a8013
  41831b:	mov    cs,WORD PTR [eax]
  41831d:	icebp  
  41831e:	xchg   edi,eax
  41831f:	jmp    0x4182a3
  418321:	repnz add BYTE PTR ds:[edx],ah
  418325:	sbb    DWORD PTR [edx+eax*2-0xc5b79b5],esp
  41832c:	sti    
  41832d:	loopne 0x418303
  41832f:	cli    
  418330:	sahf   
  418331:	repz (bad) 
  418333:	adc    eax,DWORD PTR [eax]
  418335:	dec    edx
  418336:	out    0x8e,eax
  418338:	or     cl,ah
  41833a:	mov    bh,0xeb
  41833c:	repnz pushw es
  41833f:	add    cl,dl
  418341:	push   ebp
  418342:	sti    
  418343:	mov    ecx,DWORD PTR [eax]
  418345:	stc    
  418346:	add    BYTE PTR [eax+0x5],ah
  418349:	cmc    
  41834a:	xchg   DWORD PTR [eax+ebx*2-0x2f22a47f],ecx
  418351:	inc    edi
  418352:	call   0x883e85c7
  418357:	xor    al,0x5f
  418359:	pusha  
  41835a:	nop
  41835b:	sbb    al,0x8e
  41835d:	or     DWORD PTR [ebx-0x17a5c0d4],ecx
  418363:	shl    BYTE PTR [edi],0xf5
  418366:	std    
  418367:	inc    ecx
  418368:	xlat   BYTE PTR ds:[ebx]
  418369:	ds aas 
  41836b:	jmp    0x3a31ca2b
  418370:	das    
  418371:	loope  0x41836b
  418373:	sahf   
	...
  41839c:	adc    al,0x62
  41839e:	nop
  41839f:	and    al,0x86
  4183a1:	or     DWORD PTR [ebx-0x17a608dc],ecx
  4183a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183a8:	push   esp
  4183aa:	std    
  4183ab:	pop    ss
  4183ac:	fiadd  DWORD PTR [esi-0x8]
  4183af:	sbb    edi,ebx
  4183b1:	(bad)  
  4183b2:	clc    
  4183b3:	outs   dx,BYTE PTR ds:[esi]
  4183b4:	in     al,0x7e
  4183b6:	inc    esi
  4183b7:	icebp  
  4183b8:	js     0x418438
  4183ba:	inc    ebx
  4183bb:	pop    ecx
  4183bc:	jg     0x41839f
  4183be:	jne    0x418411
  4183c0:	int3   
  4183c1:	hlt    
  4183c2:	and    DWORD PTR [edi],0xac8b5b5f
  4183c8:	mov    al,0x59
  4183ca:	call   0xfe3634a2
  4183cf:	xchg   edi,eax
  4183d0:	adc    DWORD PTR [edx+0x18a8cec],ecx
  4183d6:	add    BYTE PTR [edi+ecx*8-0x44f2801a],bh
  4183dd:	repnz std 
  4183df:	jmp    0x6296dedd
  4183e4:	jmp    0x8901:0xff008900
  4183eb:	test   edx,esp
  4183ed:	repnz sti 
  4183ef:	call   edx
  4183f1:	ficom  WORD PTR [esi+edi*8+0x75]
  4183f5:	repz push 0x0
  4183f8:	cli    
  4183f9:	sbb    al,0x4e
  4183fb:	inc    ecx
  4183fc:	(bad)  
  4183fd:	fsubrp st(5),st
  4183ff:	std    
	...
  418428:	jne    0x41841d
  41842a:	sub    eax,0x1088a8d2
  41842f:	dec    esi
  418430:	jae    0x41843f
  418432:	mov    BYTE PTR [eax+esi*1],al
  418435:	dec    eax
  418436:	jg     0x418432
  418438:	sbb    dh,BYTE PTR [edx-0x13]
  41843b:	(bad)  
  41843c:	scas   eax,DWORD PTR es:[edi]
  41843d:	outs   dx,BYTE PTR ds:[esi]
  41843e:	(bad)  
  41843f:	jmp    ebp
  418441:	or     al,0x0
  418443:	add    BYTE PTR [edx],ah
  418445:	fist   WORD PTR [ecx+ecx*4-0x4e]
  418449:	test   BYTE PTR [ecx-0x40d2b8c],al
  41844f:	xor    eax,esp
  418451:	fidiv  WORD PTR [eax]
  418453:	mov    ebp,DWORD PTR [edi+0x7a]
  418456:	(bad)  
  418457:	push   DWORD PTR [ebp-0x7b]
  41845a:	cmp    DWORD PTR [esp+esi*2-0xd],0x7a6ffffb
  418462:	(bad)  
  418463:	push   DWORD PTR [ebp+0x7f]
  418466:	mov    DWORD PTR [esp+esi*2-0xd],edi
  41846a:	sti    
  41846b:	paddq  mm0,QWORD PTR [esi]
  41846e:	jg     0x418450
  418470:	test   DWORD PTR [esi-0x47],edi
  418473:	jl     0x4184e9
  418475:	repz sti 
  418477:	cvttps2pi mm6,QWORD PTR [ebx]
  41847a:	sub    eax,0xc60d2af8
  41847f:	add    esi,DWORD PTR [edx+0x68834246]
  418485:	push   cs
  418486:	jns    0x41848d
  418488:	dec    ebx
  418489:	pusha  
  41848a:	cmp    al,BYTE PTR [eax]
	...
  4184b4:	(bad)  
  4184b5:	sub    DWORD PTR [ebx+0x56],edx
  4184b8:	jae    0x418539
  4184ba:	sti    
  4184bb:	std    
  4184bc:	je     0x41851c
  4184be:	test   al,0x78
  4184c0:	ins    DWORD PTR es:[edi],dx
  4184c1:	cli    
  4184c2:	sti    
  4184c3:	add    bl,cl
  4184c5:	mov    dh,0x1
  4184c7:	jae    0x41846d
  4184c9:	pop    esi
  4184ca:	mov    ebp,0xfbd25578
  4184cf:	add    dh,dl
  4184d1:	jns    0x418460
  4184d3:	or     ebx,0xffffffc0
  4184d6:	sti    
  4184d7:	std    
  4184d8:	(bad)  
  4184db:	sti    
  4184dc:	xor    al,0xb0
  4184de:	pop    ebx
  4184df:	pop    esi
  4184e0:	nop
  4184e1:	imul   esi,eax,0x1eb095b
  4184e7:	push   ebx
  4184e8:	sar    BYTE PTR [ebp+0x54],cl
  4184eb:	push   eax
  4184ec:	js     0x418526
  4184ee:	xchg   DWORD PTR [ebx+0x43],edx
  4184f1:	imul   ebx,DWORD PTR [ebp+0xc],0xffffffd0
  4184f5:	adc    eax,0x7d122f14
  4184fa:	or     BYTE PTR [edi],cl
  4184fc:	ret    
  4184fd:	es or  eax,0x12dec1f8
  418503:	mov    BYTE PTR [edi-0x27],cl
  418506:	inc    edx
  418507:	and    edx,0x78eb7dfa
  41850d:	mov    ah,0xe9
  41850f:	lods   al,BYTE PTR ds:[esi]
  418510:	rcl    DWORD PTR [edi-0x5],1
  418513:	das    
  418514:	cdq    
  418515:	dec    ebp
  418516:	adc    BYTE PTR [edx],bl
	...
  418540:	rcr    esi,1
  418542:	das    
  418543:	xor    cl,BYTE PTR [edx+0x7a]
  418546:	add    DWORD PTR [edx-0x38],eax
  418549:	cmp    al,0xc
  41854b:	jl     0x4184e8
  41854d:	icebp  
  41854e:	iret   
  41854f:	mov    al,BYTE PTR [edi]
  418551:	or     esp,edi
  418553:	sti    
  418554:	ret    
  418555:	add    eax,0xf3ca41d9
  41855a:	fistp  QWORD PTR [edi+0x7a]
  41855d:	dec    edi
  41855e:	mov    dl,0x8a
  418560:	outs   dx,DWORD PTR ds:[esi]
  418561:	dec    esi
  418562:	sub    DWORD PTR [eax],edx
  418564:	dec    ebx
  418565:	or     edi,esp
  418567:	add    ecx,DWORD PTR [ebx+0x9]
  41856a:	out    0x3,eax
  41856c:	dec    ebx
  41856d:	or     edi,esp
  41856f:	add    ecx,DWORD PTR [ebx+0x9]
  418572:	out    0x3,eax
  418574:	dec    ebx
  418575:	or     edi,esp
  418577:	add    ecx,DWORD PTR [ebx+0x9]
  41857a:	out    0x3,eax
  41857c:	dec    ebx
  41857d:	or     edi,esp
  41857f:	add    ecx,DWORD PTR [ebx+0x9]
  418582:	out    0x3,eax
  418584:	dec    ebx
  418585:	or     edi,esp
  418587:	add    ecx,DWORD PTR [ebx+0x9]
  41858a:	out    0x3,eax
  41858c:	dec    ebx
  41858d:	or     edi,esp
  41858f:	add    ecx,DWORD PTR [ebx+0x9]
  418592:	out    0x3,eax
  418594:	dec    ebx
  418595:	or     edi,esp
  418597:	add    ecx,DWORD PTR [ebx+0x9]
  41859a:	out    0x3,eax
  41859c:	dec    ebx
  41859d:	or     edi,esp
  41859f:	add    ecx,DWORD PTR [ebx+0x9]
  4185a2:	out    0x3,eax
	...
  4185cc:	dec    ebx
  4185cd:	or     edi,esp
  4185cf:	add    ecx,DWORD PTR [ebx+0x9]
  4185d2:	out    0x3,eax
  4185d4:	dec    ebx
  4185d5:	or     edi,esp
  4185d7:	add    ecx,DWORD PTR [ebx+0x9]
  4185da:	out    0x3,eax
  4185dc:	dec    ebx
  4185dd:	or     edi,esp
  4185df:	add    ecx,DWORD PTR [ebx+0x9]
  4185e2:	out    0x3,eax
  4185e4:	dec    ebx
  4185e5:	or     edi,esp
  4185e7:	add    ecx,DWORD PTR [ebx+0x9]
  4185ea:	out    0x3,eax
  4185ec:	dec    ebx
  4185ed:	or     edi,esp
  4185ef:	add    ecx,DWORD PTR [ebx+0x9]
  4185f2:	add    cl,ch
  4185f4:	dec    eax
  4185f5:	or     DWORD PTR [eax],eax
  4185f7:	jmp    0xe9418f44
  4185fc:	dec    eax
  4185fd:	or     DWORD PTR [eax],eax
  4185ff:	jmp    0xe4418f4c
  418604:	push   edx
  418605:	add    al,0xa
  418607:	mov    BYTE PTR [eax],bl
  418609:	cmp    eax,0x77288b67
  41860e:	das    
  41860f:	iret   
  418610:	cmp    BYTE PTR [eax],ah
  418612:	and    cl,cl
  418614:	xor    eax,0xf0752029
  418619:	imul   esp,DWORD PTR [eax],0x5a
  41861c:	loop   0x41866d
  41861e:	ins    BYTE PTR es:[edi],dx
  41861f:	dec    ebp
  418620:	jmp    0x206a:0xb75d207a
  418627:	dec    ebx
  418628:	stos   BYTE PTR es:[edi],al
  418629:	jne    0x41869f
  41862b:	dec    esp
  41862c:	mov    ebp,0x103a29
	...
  418655:	add    BYTE PTR [eax],al
  418657:	add    BYTE PTR [edx+0x3],al
  41865a:	inc    ecx
  41865b:	inc    esi
  41865c:	lahf   
  41865d:	jbe    0x4186d1
  41865f:	inc    eax
  418660:	test   al,0x61
  418662:	je     0x41862d
  418664:	pusha  
  418665:	push   0x3657c927
  41866a:	aaa    
  41866b:	shl    DWORD PTR [ebx],1
  41866d:	cmp    esi,DWORD PTR [eax]
  41866f:	fnstcw WORD PTR [edi]
  418671:	sub    DWORD PTR [edx+0x0],esp
  418674:	das    
  418675:	inc    ebx
  418676:	ins    DWORD PTR es:[edi],dx
  418677:	add    al,0x75
  418679:	arpl   WORD PTR fs:[edi],ax
  41867c:	das    
  41867d:	inc    esi
  41867e:	(bad)  
  41867f:	cli    
  418680:	imul   ebx,DWORD PTR [edi+0x2c],0x9
  418684:	mov    ds,WORD PTR [ebp+0x6c]
  418687:	or     DWORD PTR [ebp+0x66],esi
  41868a:	shl    DWORD PTR gs:[eax+edi*2],0x20
  41868f:	mov    ebx,0x63782b
  418694:	lock js 0x4186f8
  418697:	fs cmp al,0x0
  41869a:	or     cl,BYTE PTR ds:0x726b41a8
  4186a0:	xchg   DWORD PTR [edx],ebp
  4186a2:	outs   dx,BYTE PTR gs:[esi]
  4186a4:	les    esp,FWORD PTR [ebx+0x72]
  4186a7:	ins    DWORD PTR es:[edi],dx
  4186a8:	ret    
  4186a9:	pop    esi
  4186aa:	outs   dx,DWORD PTR gs:[esi]
  4186ac:	int3   
  4186ad:	sub    al,0x20
  4186af:	push   0x3a705ed6
  4186b4:	popf   
  4186b5:	and    esi,DWORD PTR [ebx+0x77]
  4186b8:	cmc    
  4186b9:	pop    ds
  4186ba:	bound  eax,QWORD PTR gs:[eax]
	...
  4186e1:	add    BYTE PTR [eax],al
  4186e3:	add    cl,ah
  4186e5:	push   0x67dd736e
  4186ea:	je     0x418763
  4186ec:	add    esi,DWORD PTR [edi+0x61]
  4186ef:	add    DWORD PTR cs:[edx+0x69],esp
  4186f3:	das    
  4186f4:	das    
  4186f5:	cld    
  4186f6:	or     BYTE PTR [edx],cl
  4186f8:	xor    cl,BYTE PTR [edx]
  4186fa:	add    BYTE PTR [eax],al
  4186fc:	and    cl,BYTE PTR [edx]
  4186fe:	add    BYTE PTR [eax],al
  418700:	and    cl,BYTE PTR [edx]
  418702:	add    BYTE PTR [eax],al
  418704:	xor    cl,BYTE PTR [edx]
  418706:	add    BYTE PTR [eax],al
  418708:	xor    cl,BYTE PTR [edx]
  41870a:	add    BYTE PTR [eax],al
  41870c:	and    cl,BYTE PTR [edx]
  41870e:	add    BYTE PTR [eax],al
  418710:	and    cl,BYTE PTR [edx]
  418712:	add    BYTE PTR [eax],al
  418714:	repnz or DWORD PTR [eax],eax
  418717:	add    dl,dh
  418719:	or     DWORD PTR [eax],eax
  41871b:	add    dl,ah
  41871d:	or     DWORD PTR [eax],eax
  41871f:	add    dl,ah
  418721:	or     DWORD PTR [eax],eax
  418723:	add    dl,dh
  418725:	or     DWORD PTR [eax],eax
  418727:	add    dl,dh
  418729:	or     DWORD PTR [eax],eax
  41872b:	add    dl,ah
  41872d:	or     DWORD PTR [eax],eax
  41872f:	add    dl,ah
  418731:	or     DWORD PTR [eax],eax
  418733:	add    BYTE PTR [ebx-0x6b],cl
  418736:	mov    dl,0x4e
  418738:	xor    BYTE PTR [ecx],ah
  41873a:	and    BYTE PTR [ebx],ch
  41873c:	dec    edi
  41873d:	cs iret 
  41873f:	push   esp
  418740:	lahf   
  418741:	or     al,0xa3
  418743:	bound  esi,QWORD PTR [esi-0x39]
  418746:	or     BYTE PTR [ecx],0x0
	...
  41876d:	add    BYTE PTR [eax],al
  41876f:	add    ah,dh
  418771:	in     al,dx
  418772:	or     ecx,DWORD PTR [eax]
  418774:	cmp    bl,BYTE PTR [edx+ecx*1+0x7bb7a768]
  41877b:	push   ecx
  41877c:	aad    0xdf
  41877e:	add    DWORD PTR [eax],eax
  418780:	dec    ebx
  418781:	loopne 0x418784
  418783:	add    BYTE PTR [ebx-0x20],cl
  418786:	add    DWORD PTR [eax],eax
  418788:	dec    ebx
  418789:	loopne 0x41878c
  41878b:	add    BYTE PTR [ebx-0x20],cl
  41878e:	add    DWORD PTR [eax],eax
  418790:	dec    ebx
  418791:	loopne 0x418794
  418793:	add    BYTE PTR [ebx-0x20],cl
  418796:	add    DWORD PTR [eax],eax
  418798:	dec    ebx
  418799:	loopne 0x41879c
  41879b:	add    BYTE PTR [ebx-0x1e],cl
  41879e:	add    DWORD PTR [eax],eax
  4187a0:	dec    ebx
  4187a1:	loop   0x4187a4
  4187a3:	add    BYTE PTR [ebx-0x1e],cl
  4187a6:	add    DWORD PTR [eax],eax
  4187a8:	dec    ebx
  4187a9:	loop   0x4187ac
  4187ab:	add    BYTE PTR [ebx-0x1e],cl
  4187ae:	add    DWORD PTR [eax],eax
  4187b0:	dec    ebx
  4187b1:	loop   0x4187b4
  4187b3:	add    BYTE PTR [ebx-0x1e],cl
  4187b6:	add    DWORD PTR [eax],eax
  4187b8:	dec    ebx
  4187b9:	loop   0x4187bc
  4187bb:	add    BYTE PTR [ebx-0x1e],cl
  4187be:	add    DWORD PTR [eax],eax
  4187c0:	dec    ebx
  4187c1:	loop   0x4187c4
  4187c3:	add    BYTE PTR [ebx-0x1e],cl
  4187c6:	add    DWORD PTR [eax],eax
  4187c8:	dec    ebx
  4187c9:	loop   0x4187cc
  4187cb:	add    BYTE PTR [ebx-0x1e],cl
  4187ce:	add    DWORD PTR [eax],eax
  4187d0:	dec    ebx
  4187d1:	loop   0x4187d4
	...
  4187fb:	add    BYTE PTR [ebx+0x9],cl
  4187fe:	out    0x3,eax
  418800:	dec    ebx
  418801:	or     edi,esp
  418803:	add    ecx,DWORD PTR [ebx+0x9]
  418806:	out    0x3,eax
  418808:	dec    ebx
  418809:	or     edi,esp
  41880b:	add    ecx,DWORD PTR [ebx+0x9]
  41880e:	out    0x3,eax
  418810:	dec    ebx
  418811:	or     edi,esp
  418813:	add    ecx,DWORD PTR [ebx+0x9]
  418816:	out    0x3,eax
  418818:	dec    ebx
  418819:	or     edi,esp
  41881b:	add    ecx,DWORD PTR [ebx+0x9]
  41881e:	out    0x3,eax
  418820:	dec    ebx
  418821:	or     edi,esp
  418823:	add    ecx,DWORD PTR [ebx+0x9]
  418826:	out    0x3,eax
  418828:	dec    ebx
  418829:	or     edi,esp
  41882b:	add    ecx,DWORD PTR [ebx+0x9]
  41882e:	out    0x3,eax
  418830:	dec    ebx
  418831:	or     edi,esp
  418833:	add    ecx,DWORD PTR [ebx+0x9]
  418836:	out    0x3,eax
  418838:	dec    ebx
  418839:	or     edi,esp
  41883b:	add    ecx,DWORD PTR [ebx+0x9]
  41883e:	out    0x3,eax
  418840:	dec    ebx
  418841:	or     edi,esp
  418843:	add    ecx,DWORD PTR [ebx+0x9]
  418846:	out    0x3,eax
  418848:	dec    ebx
  418849:	or     edi,esp
  41884b:	add    ecx,DWORD PTR [ebx+0x9]
  41884e:	out    0x3,eax
  418850:	dec    ebx
  418851:	or     edi,esp
  418853:	add    ecx,DWORD PTR [ebx+0x9]
  418856:	out    0x3,eax
  418858:	dec    ebx
  418859:	or     edi,esp
  41885b:	add    ecx,DWORD PTR [ebx+0x9]
  41885e:	out    0x3,eax
	...
  418888:	dec    ebx
  418889:	or     edi,esp
  41888b:	add    ecx,DWORD PTR [ebx+0x9]
  41888e:	out    0x3,eax
  418890:	dec    ebx
  418891:	or     edi,esp
  418893:	add    ecx,DWORD PTR [ebx+0x9]
  418896:	out    0x3,eax
  418898:	dec    ebx
  418899:	or     edi,esp
  41889b:	add    ecx,DWORD PTR [ebx+0x9]
  41889e:	add    cl,ch
  4188a0:	dec    eax
  4188a1:	or     DWORD PTR [eax],eax
  4188a3:	jmp    0xe94191f0
  4188a8:	dec    eax
  4188a9:	or     DWORD PTR [eax],eax
  4188ab:	jmp    0xe94191f8
  4188b0:	dec    eax
  4188b1:	or     DWORD PTR [eax],eax
  4188b3:	jmp    0xe9419200
  4188b8:	dec    eax
  4188b9:	or     DWORD PTR [eax],eax
  4188bb:	jmp    0xe9419208
  4188c0:	dec    eax
  4188c1:	or     DWORD PTR [eax],eax
  4188c3:	jmp    0xe9419210
  4188c8:	dec    eax
  4188c9:	or     DWORD PTR [eax],eax
  4188cb:	jmp    0xd8419218
  4188d0:	cmp    dh,BYTE PTR ss:[esp+edx*8]
  4188d4:	cmp    cl,BYTE PTR [ecx]
  4188d6:	jo     0x418860
  4188d8:	idiv   DWORD PTR [ecx+0x75]
  4188db:	mov    ds,esi
  4188dd:	add    BYTE PTR fs:[ecx-0x10],bh
  4188e1:	js     0x418945
  4188e3:	mov    ecx,DWORD PTR [eax+0x5c]
  4188e6:	jne    0x418934
  4188e8:	fnstenv [edi+esi*2-0x17]
	...
  418914:	jg     0x41894d
  418916:	xor    DWORD PTR ds:0x446a097a,ebx
  41891c:	mov    eax,0x77e97176
  418921:	aaa    
  418922:	xor    ebp,esi
  418924:	pop    ebx
  418925:	xor    esi,DWORD PTR ds:0x321a48f1
  41892b:	cli    
  41892c:	or     DWORD PTR fs:[edi+0xb],ebx
  418930:	test   al,0x1a
  418932:	xor    bl,dl
  418934:	dec    eax
  418935:	pop    ebp
  418936:	arpl   WORD PTR ds:0xff676672,bx
  41893c:	dec    eax
  41893d:	jne    0x4189a2
  41893f:	add    cl,dh
  418941:	pop    edx
  418942:	add    BYTE PTR [ebp+edx*2+0x5b],ch
  418946:	popa   
  418947:	add    BYTE PTR [ebx-0x2dffd0c8],ah
  41894d:	outs   dx,DWORD PTR gs:[esi]
  41894f:	jae    0x41893e
  418951:	arpl   WORD PTR [edx+0x64],si
  418954:	arpl   WORD PTR ds:0x62866568,ax
  41895a:	imul   eax,DWORD PTR [eax],0xfffffff7
  41895d:	arpl   WORD PTR [esi+0x6b],bp
  418960:	jg     0x4189cf
  418962:	add    BYTE PTR [eax+eiz*8+0x65],ah
  418966:	arpl   WORD PTR [edi-0x7c],bp
  418969:	push   es
  41896a:	je     0x4189de
  41896c:	fbstp  TBYTE PTR [edi+0x74]
  41896f:	outs   dx,BYTE PTR ds:[esi]
  418970:	mov    ch,0x35
  418972:	add    BYTE PTR [ecx],dh
  418974:	mov    ds:0x312d35,eax
	...
  41899d:	add    BYTE PTR [eax],al
  41899f:	add    BYTE PTR [ebx-0xa939afa],ah
  4189a5:	pop    ebx
  4189a6:	popa   
  4189a7:	jns    0x41897e
  4189a9:	jns    0x4189ab
  4189ab:	xor    DWORD PTR [eax-0x63cacbc9],esp
  4189b1:	sbb    eax,DWORD PTR [eax]
  4189b3:	jae    0x41897f
  4189b5:	gs outs dx,DWORD PTR fs:[esi]
  4189b8:	in     eax,dx
  4189b9:	add    al,0x2d
  4189bb:	xor    ah,BYTE PTR [ecx+0x39]
  4189be:	xor    DWORD PTR [esi],esi
  4189c0:	pop    ebp
  4189c1:	sub    eax,0x5d810035
  4189c6:	jb     0x418a31
  4189c8:	jno    0x418a43
  4189ca:	add    BYTE PTR [ebx+0x5f],dh
  4189cd:	arpl   WORD PTR [edi+0x68],bp
  4189d0:	mov    esp,DWORD PTR [ebx+0x61]
  4189d3:	add    BYTE PTR [edi+0x64],dl
  4189d6:	outs   dx,DWORD PTR ds:[esi]
  4189d7:	je     0x418a18
  4189d9:	ja     0x4189db
  4189db:	arpl   WORD PTR [ebp+0x60],dx
  4189de:	jo     0x418a55
  4189e0:	dec    ebx
  4189e1:	or     al,0x5f
  4189e3:	jb     0x418a30
  4189e5:	adc    BYTE PTR [edx+0x67],dh
  4189e8:	pop    ebp
  4189e9:	call   FWORD PTR [esi+0x71]
  4189ec:	pop    eax
  4189ed:	loopne 0x418a5c
  4189ef:	addr16 fs sti 
  4189f2:	pop    esi
  4189f3:	jb     0x418a40
  4189f5:	add    ah,BYTE PTR [ebp+0x6d]
  4189f8:	push   edi
  4189f9:	mov    esi,0xe0376c64
  4189fe:	outs   dx,BYTE PTR fs:[esi]
  418a00:	and    al,0xbd
  418a02:	add    BYTE PTR gs:[eax],al
	...
  418a29:	add    BYTE PTR [eax],al
  418a2b:	add    BYTE PTR [ecx],ah
  418a2d:	lds    esi,FWORD PTR [edx+0x73]
  418a30:	cmp    cl,dh
  418a32:	add    DWORD PTR [edi],ebp
  418a34:	pop    ecx
  418a35:	out    dx,eax
  418a36:	xor    al,0x32
  418a38:	pop    eax
  418a39:	loopne 0x418aa9
  418a3b:	push   0x7660b42a
  418a40:	mov    es,WORD PTR es:[ecx]
  418a43:	data16 stc 
  418a45:	test   BYTE PTR [eax+0x64],ah
  418a48:	in     al,dx
  418a49:	test   BYTE PTR [ecx],al
  418a4b:	imul   esp,edx,0xf963656b
  418a51:	fbld   TBYTE PTR [ecx+esi*2-0x11]
  418a55:	add    DWORD PTR [ecx],0x627eec71
  418a5b:	arpl   cx,bx
  418a5d:	fbstp  TBYTE PTR [edx+0x73]
  418a60:	fstp   TBYTE PTR [edx+esi*2]
  418a63:	imul   ebp,DWORD PTR [edx-0x4d94fba8],0x53
  418a6a:	ins    BYTE PTR es:[edi],dx
  418a6b:	pop    edi
  418a6c:	scas   al,BYTE PTR es:[edi]
  418a6d:	es add al,0x61
  418a70:	mov    ds:0xae715d55,eax
  418a75:	repnz push 0x6e
  418a78:	xchg   edi,eax
  418a79:	push   ebp
  418a7a:	jb     0x418aea
  418a7c:	scas   al,BYTE PTR es:[edi]
  418a7d:	push   ds
  418a7e:	add    al,0x6a
  418a80:	pushf  
  418a81:	or     DWORD PTR [edx],ebx
  418a83:	ins    BYTE PTR es:[edi],dx
  418a84:	js     0x418af0
  418a86:	out    0x5d,eax
  418a88:	js     0x418af6
  418a8a:	add    bh,BYTE PTR [ebx+0x66]
  418a8d:	pop    esi
  418a8e:	out    0x61,eax
	...
  418ab8:	pop    edi
  418ab9:	outs   dx,BYTE PTR ds:[esi]
  418aba:	cli    
  418abb:	jo     0x418b25
  418abd:	ins    DWORD PTR es:[edi],dx
  418abe:	out    0x61,eax
  418ac0:	jl     0x418b1e
  418ac2:	or     al,0x62
  418ac4:	je     0x418b3b
  418ac6:	sti    
  418ac7:	add    ebx,DWORD PTR [edx+0x5d]
  418aca:	enter  0x3e71,0x6a
  418ace:	fnstenv [eax+0x4b]
  418ad1:	sbb    DWORD PTR [edi],edx
  418ad3:	xor    al,0x7b
  418ad5:	sbb    DWORD PTR [edi],edx
  418ad7:	add    al,0x3b
  418ad9:	pop    esi
  418ada:	mov    ecx,0xe76e3773
  418adf:	imul   ebp,DWORD PTR [esi],0x2562cb5b
  418ae5:	or     ebp,eax
  418ae7:	bound  esp,QWORD PTR [ebx*2+0x5dfa038f]
  418aee:	mov    WORD PTR [esi-0x18],fs
  418af1:	pop    edx
  418af2:	out    0x62,eax
  418af4:	cli    
  418af5:	jo     0x418b72
  418af7:	pop    esi
  418af8:	hlt    
  418af9:	or     BYTE PTR [ecx-0x7ba32592],cl
  418aff:	jno    0x418b4c
  418b01:	jno    0x418a8f
  418b03:	(bad)  
  418b04:	(bad)  [ebp+0x7d]
  418b07:	add    ebx,ebx
  418b09:	ins    DWORD PTR es:[edi],dx
  418b0a:	push   edi
  418b0b:	je     0x418ab5
  418b0d:	pop    ebx
  418b0e:	out    0x2c,eax
  418b10:	jbe    0x418b32
  418b12:	push   ds
  418b13:	sub    eax,0x6be7207e
  418b18:	mov    eax,0x5f3b77
	...
  418b41:	add    BYTE PTR [eax],al
  418b43:	add    BYTE PTR [ecx-0x6a9ab4f7],bl
  418b49:	outs   dx,BYTE PTR ds:[esi]
  418b4a:	add    BYTE PTR [ebp-0x70],al
  418b4d:	or     DWORD PTR [edi+0x3f],ebx
  418b50:	stos   DWORD PTR es:[edi],eax
  418b51:	pop    ebx
  418b52:	arpl   WORD PTR [esi],bx
  418b54:	dec    edi
  418b55:	pop    ebp
  418b56:	push   0x7148640e
  418b5b:	jmp    0x4a702c9
  418b60:	arpl   WORD PTR [edx+0x0],bx
  418b63:	or     dh,BYTE PTR [edi+0x48]
  418b66:	jb     0x418b75
  418b68:	jo     0x418bd6
  418b6a:	add    BYTE PTR ds:0x4677768,cl
  418b70:	arpl   WORD PTR [ecx],cx
  418b72:	das    
  418b73:	sbb    BYTE PTR [eax+0x38],bh
  418b76:	add    bl,dl
  418b78:	sbb    eax,0x16c06e77
  418b7d:	ins    BYTE PTR es:[edi],dx
  418b7e:	jb     0x418b69
  418b80:	cmp    esi,DWORD PTR [eax+0x6e]
  418b83:	into   
  418b84:	sub    al,0x6c
  418b86:	add    cl,dl
  418b88:	sub    DWORD PTR [edi+0x6e],esi
  418b8b:	enter  0x920,0x6f
  418b8f:	enter  0x5e12,0x71
  418b93:	mov    eax,ds:0x995f7148
  418b98:	clc    
  418b99:	pop    edi
  418b9a:	add    BYTE PTR [ecx+ebp*8-0xf7f8da4],al
  418ba1:	or     BYTE PTR [eax-0x78],dh
  418ba4:	fistp  DWORD PTR [ecx+0x0]
  418ba7:	mov    BYTE PTR [eax],al
	...
  418bcd:	add    BYTE PTR [eax],al
  418bcf:	add    cl,ch
  418bd1:	inc    edi
  418bd2:	pop    edi
  418bd3:	mov    cl,ch
  418bd5:	or     BYTE PTR [esi],dh
  418bd7:	mov    ah,0x1c
  418bd9:	sbb    dh,BYTE PTR [edx]
  418bdb:	sbb    BYTE PTR [edi+0x46],cl
  418bde:	imul   ecx,DWORD PTR [eax-0x57],0x6d
  418be2:	pop    edi
  418be3:	jmp    0x41b60092
  418be8:	mov    ?,WORD PTR [edi+0x65]
  418beb:	add    BYTE PTR [edx],dh
  418bed:	je     0x418c54
  418bef:	outs   dx,BYTE PTR ds:[esi]
  418bf0:	test   DWORD PTR [eax+0x72],esi
  418bf3:	add    BYTE PTR [edi-0x78978b96],cl
  418bf9:	pop    edi
  418bfa:	add    BYTE PTR [ebx+0x5c],dh
  418bfd:	push   0x6b
  418bff:	jo     0x418c2c
  418c01:	or     eax,0x5e51656a
  418c06:	arpl   WORD PTR gs:[ebx+0xd],ax
  418c0a:	jae    0x418c71
  418c0c:	outs   dx,BYTE PTR ds:[esi]
  418c0e:	imul   ebp,DWORD PTR [ebp+0x47],0xd
  418c12:	jo     0x418c83
  418c14:	dec    ecx
  418c15:	jo     0x418c80
  418c17:	outs   dx,DWORD PTR ds:[esi]
  418c18:	int3   
  418c19:	or     ah,BYTE PTR [ebp+0x6c]
  418c1c:	popf   
  418c1d:	pusha  
  418c1e:	popa   
  418c1f:	jns    0x418bae
  418c21:	popa   
  418c22:	sub    eax,0x2d1c5300
  418c27:	xor    DWORD PTR [ebx+0xd],edx
  418c2a:	imul   esi,DWORD PTR [ebp-0x1f],0x856e5d5e
  418c31:	or     ch,BYTE PTR [eax+0x65]
	...
  418c5c:	mov    ds,WORD PTR [edx+0x69]
  418c5f:	mov    gs:0xe6737144,al
  418c65:	inc    ebp
  418c66:	outs   dx,BYTE PTR ds:[esi]
  418c67:	add    al,bl
  418c69:	ins    DWORD PTR es:[edi],dx
  418c6a:	outs   dx,DWORD PTR ds:[esi]
  418c6b:	ins    DWORD PTR es:[edi],dx
  418c6c:	retf   
  418c6d:	push   0x5bed0061
  418c72:	pop    ebp
  418c73:	outs   dx,BYTE PTR ds:[esi]
  418c74:	aad    0x71
  418c76:	add    BYTE PTR [edi+eax*8+0x5f],dh
  418c7a:	je     0x418ce5
  418c7c:	int3   
  418c7d:	jae    0x418c7f
  418c7f:	popa   
  418c80:	rcr    BYTE PTR [ecx+0x6c],cl
  418c83:	xor    ch,BYTE PTR gs:[ecx+0x65]
  418c87:	arpl   WORD PTR [edx+0x4b6c6c70],bx
  418c8d:	push   ebp
  418c8e:	add    al,0x70
  418c90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c91:	push   ecx
  418c92:	arpl   WORD PTR gs:[ebx+0x23],cx
  418c96:	addr16 popa 
  418c98:	cdq    
  418c99:	dec    ebp
  418c9a:	js     0x418c9c
  418c9c:	pop    edx
  418c9d:	lock push 0x72
  418ca0:	stos   BYTE PTR es:[edi],al
  418ca1:	push   ebx
  418ca2:	add    BYTE PTR [si-0x7],bh
  418ca6:	pop    edi
  418ca7:	ins    BYTE PTR es:[edi],dx
  418ca8:	jb     0x418cbb
  418caa:	pop    edi
  418cab:	add    BYTE PTR [edx+0xc],ah
  418cae:	popa   
  418caf:	jbe    0x418d17
  418cb1:	stc    
  418cb2:	pusha  
  418cb3:	jae    0x418cce
  418cb5:	lock pop edi
  418cb7:	addr16 push 0x4b636017
  418cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cbe:	aaa    
  418cbf:	add    BYTE PTR ss:[eax],al
	...
  418ce6:	add    BYTE PTR [eax],al
  418ce8:	adc    eax,0x3600379e
  418ced:	lds    esp,FWORD PTR [edi+0x66]
  418cf0:	xor    dl,dh
  418cf2:	add    DWORD PTR [ebp+0x2a],esp
  418cf5:	les    ebp,FWORD PTR [eax+0x75]
  418cf8:	sub    bh,BYTE PTR [ecx-0x2ce199ff]
  418cfe:	pop    esi
  418cff:	ja     0x418d2d
  418d01:	popf   
  418d02:	xor    al,0x0
  418d04:	sub    ah,BYTE PTR [ebx-0x5be3978a]
  418d0a:	push   0x5990f300
  418d0f:	pop    edi
  418d10:	pause  
  418d12:	add    DWORD PTR [eax-0x1c],esi
  418d15:	mov    ?,WORD PTR [ecx+0x0]
  418d18:	jmp    0xd8b2f580
  418d1d:	js     0x418d7e
  418d1f:	gs dec ebx
  418d21:	xchg   edx,eax
  418d22:	pop    ebp
  418d23:	pop    edi
  418d24:	jecxz  0x418cb7
  418d26:	pop    ebp
  418d27:	pop    edi
  418d28:	jecxz  0x418d19
  418d2a:	pusha  
  418d2b:	ja     0x418ce5
  418d2d:	or     DWORD PTR [edi+0x63],edx
  418d30:	stos   BYTE PTR es:[edi],al
  418d31:	outs   dx,BYTE PTR ds:[esi]
  418d32:	sbb    BYTE PTR [eax+eiz*4],al
  418d35:	push   0x5b
  418d37:	js     0x418cdc
  418d39:	outs   dx,BYTE PTR ds:[esi]
  418d3a:	push   esi
  418d3b:	add    al,0xaa
  418d3d:	push   0x55
  418d3f:	arpl   WORD PTR [edi-0x538b1896],sp
  418d45:	jne    0x418d84
  418d47:	addr16 cdq 
  418d49:	or     DWORD PTR [ecx],edi
  418d4b:	popa   
	...
  418d74:	imul   ebp,DWORD PTR [esi+0x19],0xe6b4b78
  418d7b:	jbe    0x418de5
  418d7d:	pop    ebx
  418d7e:	or     al,0x76
  418d80:	dec    ebx
  418d81:	push   0x1a
  418d83:	push   0x40f6c6d
  418d88:	pop    ecx
  418d89:	push   0xa
  418d8b:	pop    esp
  418d8c:	push   0x6c75e775
  418d91:	jb     0x418d90
  418d93:	gs ss pop esp
  418d96:	out    0x68,eax
  418d98:	cmp    BYTE PTR [edx-0x2d],dh
  418d9b:	bound  edi,QWORD PTR [ecx]
  418d9d:	or     edi,edx
  418d9f:	data16 or al,0x73
  418da2:	aam    0x77
  418da4:	dec    ebx
  418da5:	addr16 enter 0x3077,0x6a
  418daa:	int    0x3
  418dac:	sub    dh,BYTE PTR [esi+eax*8+0x5c]
  418db0:	and    al,0x6e
  418db2:	out    0x65,eax
  418db4:	and    al,0x72
  418db6:	xchg   ebx,eax
  418db7:	data16 hlt 
  418db9:	or     BYTE PTR [edx-0x739815a0],bl
  418dbf:	jne    0x418ddd
  418dc1:	or     DWORD PTR [edx+ebx*2-0x16],edi
  418dc5:	outs   dx,DWORD PTR ds:[esi]
  418dc6:	mov    WORD PTR [edx+0x4b],gs
  418dc9:	addr16 nop
  418dcb:	ja     0x418db5
  418dcd:	jne    0x418dcf
  418dcf:	mov    WORD PTR [eax+0x71],cs
  418dd2:	arpl   WORD PTR [ebp-0x5c],di
  418dd5:	jbe    0x418e06
  418dd7:	jmp    0x418ddc
	...
  418e00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e01:	jo     0x418e6a
  418e03:	dec    edi
  418e04:	lods   al,BYTE PTR ds:[esi]
  418e05:	jo     0x418e07
  418e07:	dec    ebp
  418e08:	test   al,0x72
  418e0a:	ins    DWORD PTR es:[edi],dx
  418e0b:	push   ebp
  418e0c:	test   al,0x9
  418e0e:	jno    0x418e58
  418e10:	jl     0x418e56
  418e12:	outs   dx,BYTE PTR ds:[esi]
  418e13:	xor    eax,0x4a004477
  418e18:	stos   BYTE PTR es:[edi],al
  418e19:	jo     0x418e8b
  418e1b:	dec    eax
  418e1c:	js     0x418e27
  418e1e:	adc    BYTE PTR fs:[eax+0x70],ch
  418e22:	ins    DWORD PTR es:[edi],dx
  418e23:	packsswb mm1,QWORD PTR [ecx]
  418e26:	je     0x418e30
  418e28:	pusha  
  418e29:	jne    0x418e98
  418e2b:	sbb    ecx,DWORD PTR [edi+0x6b]
  418e2e:	ins    DWORD PTR es:[edi],dx
  418e2f:	sti    
  418e30:	push   ebp
  418e31:	jo     0x418e33
  418e33:	adc    ebp,DWORD PTR [edx+0x71]
  418e36:	outs   dx,BYTE PTR ds:[esi]
  418e37:	mov    edx,0xfb001b19
  418e3c:	and    DWORD PTR [edx+0x68],ebp
  418e3f:	enter  0x6d36,0x0
  418e43:	retf   
  418e44:	adc    al,0x6c
  418e46:	outs   dx,BYTE PTR ds:[esi]
  418e47:	ret    0x2179
  418e4a:	xor    ch,cl
  418e4c:	sbb    BYTE PTR [eax+0x5f],ch
  418e4f:	retf   0x6800
  418e52:	jno    0x418e3d
  418e54:	das    
  418e55:	jbe    0x418ec4
  418e57:	lds    ecx,FWORD PTR [eax+0x6b]
  418e5a:	ins    BYTE PTR es:[edi],dx
  418e5b:	mov    esi,0xe9726803
  418e60:	imul   DWORD PTR [ecx+0x6d]
  418e63:	mov    es,WORD PTR [eax]
	...
  418e89:	add    BYTE PTR [eax],al
  418e8b:	add    ah,bh
  418e8d:	addr16 jb 0x418e79
  418e90:	out    0x43,al
  418e92:	outs   dx,BYTE PTR ds:[esi]
  418e93:	mov    dl,ch
  418e95:	inc    ebx
  418e96:	add    BYTE PTR [eax],al
  418e98:	mov    eax,0xd1656966
  418e9d:	pop    es
  418e9e:	pop    ebp
  418e9f:	jae    0x418e5f
  418ea1:	jno    0x418f00
  418ea3:	jae    0x418e73
  418ea5:	jo     0x418ea7
  418ea7:	jbe    0x418e44
  418ea9:	data16 je 0x418f1b
  418eac:	nop
  418ead:	je     0x418eaf
  418eaf:	ins    BYTE PTR es:[edi],dx
  418eb0:	test   DWORD PTR [ebx+0x64],eax
  418eb3:	outs   dx,DWORD PTR ds:[esi]
  418eb4:	fs or  eax,0x5e21322d
  418eba:	jae    0x418f21
  418ebc:	and    bl,BYTE PTR [esi]
  418ebe:	xor    dh,BYTE PTR [ebx]
  418ec0:	adc    DWORD PTR [ecx],ebx
  418ec2:	sub    eax,0x5d614100
  418ec7:	jb     0x418f27
  418ec9:	push   edi
  418eca:	popa   
  418ecb:	imul   esp,edx,0x6b
  418ece:	popa   
  418ecf:	outs   dx,DWORD PTR ds:[esi]
  418ed0:	push   eax
  418ed1:	push   0x61
  418ed3:	add    BYTE PTR ds:0x4f6e6e44,bh
  418ed9:	push   edi
  418eda:	add    BYTE PTR [ebp+0x43],ch
  418edd:	push   0x63
  418edf:	imul   edi,DWORD PTR [edi],0x4b72740d
  418ee5:	inc    ebx
  418ee6:	gs je  0x418e94
  418ee9:	push   es
  418eea:	imul   ebp,DWORD PTR [esi-0x7a],0x45
  418eee:	outs   dx,BYTE PTR ds:[esi]
  418eef:	add    BYTE PTR gs:[eax],al
	...
  418f16:	add    BYTE PTR [eax],al
  418f18:	mov    ds:0x9333321d,al
  418f1d:	push   0x3e91005f
  418f22:	arpl   WORD PTR gs:[ecx+0x71],di
  418f26:	outs   dx,BYTE PTR ds:[esi]
  418f27:	add    BYTE PTR [eax-0x3a96919f],cl
  418f2d:	pop    eax
  418f2e:	add    BYTE PTR [ebx-0x26],ah
  418f31:	pop    eax
  418f32:	gs jae 0x418f97
  418f35:	push   esi
  418f36:	pop    ebp
  418f37:	jae    0x418f84
  418f39:	jg     0x418fb1
  418f3b:	xor    cl,bl
  418f3d:	mov    eax,DWORD PTR [ecx]
  418f3f:	pop    edi
  418f40:	(bad)  
  418f41:	pop    esi
  418f42:	jne    0x418fab
  418f44:	in     eax,0xef
  418f46:	jb     0x418fb8
  418f48:	jmp    0x6591:0x4b775a5d
  418f4f:	imul   esi,DWORD PTR [edx-0x5194fbc6],0x3e
  418f56:	pusha  
  418f57:	addr16 popf 
  418f59:	lock ins WORD PTR es:[edi],dx
  418f5c:	mov    ah,0x4b
  418f5e:	pusha  
  418f5f:	arpl   WORD PTR [ebx+0x52],cx
  418f62:	jb     0x418fcb
  418f64:	scas   al,BYTE PTR es:[edi]
  418f65:	push   edx
  418f66:	push   0x5d484b71
  418f6b:	jo     0x418fdb
  418f6d:	lock jb 0x418fd8
  418f70:	push   0xfffffffc
  418f72:	pop    esp
  418f73:	imul   ecx,DWORD PTR [ebx+0x12],0x5b
  418f77:	outs   dx,BYTE PTR ds:[esi]
  418f78:	ja     0x418f8f
  418f7a:	pop    esi
  418f7b:	add    BYTE PTR fs:[eax],al
	...
  418fa2:	add    BYTE PTR [eax],al
  418fa4:	je     0x418f96
  418fa6:	pop    ebp
  418fa7:	ins    DWORD PTR es:[edi],dx
  418fa8:	ins    BYTE PTR es:[edi],dx
  418fa9:	neg    DWORD PTR [edx+0x6e]
  418fac:	ins    BYTE PTR es:[edi],dx
  418fad:	lock pop ecx
  418faf:	pop    edi
  418fb0:	pop    ecx
  418fb1:	or     al,0x67
  418fb3:	ja     0x419000
  418fb5:	fbld   TBYTE PTR [eax+0x6d]
  418fb8:	xor    ch,dl
  418fba:	ins    BYTE PTR es:[edi],dx
  418fbb:	add    BYTE PTR [ebx+edi*8+0x34],bh
  418fbf:	xor    eax,0x715ec64b
  418fc4:	rcr    BYTE PTR cs:[ecx+0x0],0x2f
  418fc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fca:	bound  ebp,QWORD PTR [ecx+0x12]
  418fcd:	lock gs addr16 and al,0xc9
  418fd2:	jne    0x419033
  418fd4:	imul   edi
  418fd6:	fs add bh,dh
  418fd9:	or     BYTE PTR [edi-0x7b931a88],cl
  418fdf:	jno    0x41902c
  418fe1:	push   esi
  418fe2:	xchg   edi,eax
  418fe3:	pop    esp
  418fe4:	fldcw  WORD PTR [edi-0x6d]
  418fe7:	add    ebp,ecx
  418fe9:	addr16 xchg ebp,eax
  418feb:	addr16 in al,dx
  418fed:	pop    esp
  418fee:	out    0x68,eax
  418ff0:	fstp   QWORD PTR [esp+ecx*4+0x71]
  418ff4:	dec    ebx
  418ff5:	push   0x7d
  418ff7:	ja     0x418fac
  418ff9:	jo     0x419050
  418ffb:	imul   ecx,DWORD PTR [ebx+0x6c],0x4e
  418fff:	jb     0x418fb6
  419001:	pop    bx
  419003:	js     0x418fad
  419005:	or     DWORD PTR [edi],edi
  419007:	pop    ebp
	...
  419030:	stos   BYTE PTR es:[edi],al
  419031:	je     0x41907f
  419033:	imul   ecx,DWORD PTR [ebx+0x59],0x4e
  419037:	jne    0x418fe1
  419039:	pop    ebx
  41903a:	out    0x61,eax
  41903c:	push   0x7063416f
  419041:	jb     0x419058
  419043:	add    al,0x6c
  419045:	ins    DWORD PTR es:[edi],dx
  419046:	push   cs
  419047:	jbe    0x4190b1
  419049:	bound  eax,QWORD PTR [esi]
  41904b:	ja     0x419091
  41904d:	or     eax,ebx
  41904f:	jb     0x41906a
  419051:	pop    eax
  419052:	mov    edx,0x10574b66
  419057:	je     0x4190c1
  419059:	pop    ebx
  41905a:	out    0x64,eax
  41905c:	sub    BYTE PTR [edi+0x4],ch
  41905f:	jno    0x419085
  419061:	pop    esp
  419062:	out    0x58,eax
  419064:	and    eax,0x375bc672
  419069:	or     eax,ebx
  41906b:	je     0x419095
  41906d:	pop    ebx
  41906e:	shr    DWORD PTR [edx+0x6c],cl
  419071:	or     edx,ecx
  419073:	jno    0x41909d
  419075:	push   0xffffffb3
  419077:	pop    edx
  419078:	adc    eax,0xeee90066
  41907d:	ins    DWORD PTR es:[edi],dx
  41907e:	ins    DWORD PTR es:[edi],dx
  41907f:	retf   
  419080:	jmp    0xecc990df
  419085:	addr16 fs mov bl,bh
  419089:	or     BYTE PTR [edx-0x7a],dh
  41908c:	fsub   QWORD PTR [edi+0x6b]
  41908f:	or     BYTE PTR [eax+0x5a],0x6c
  419093:	mov    BYTE PTR [eax],al
	...
  4190b9:	add    BYTE PTR [eax],al
  4190bb:	add    cl,ah
  4190bd:	imul   esi,DWORD PTR [edx-0x17],0xffffffd7
  4190c1:	addr16 jno 0x419051
  4190c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190c5:	je     0x4190c7
  4190c7:	jns    0x419083
  4190c9:	inc    eax
  4190ca:	addr16 pop edx
  4190cc:	lods   al,BYTE PTR ds:[esi]
  4190cd:	or     DWORD PTR [edx+0x61],edi
  4190d0:	stos   BYTE PTR es:[edi],al
  4190d1:	push   edi
  4190d2:	bound  eax,QWORD PTR [edi-0x7c]
  4190d5:	or     DWORD PTR [ecx+0x48],esi
  4190d8:	jl     0x419136
  4190da:	arpl   WORD PTR [ebp+0x4f],dx
  4190dd:	je     0x419146
  4190df:	push   edx
  4190e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190e1:	or     DWORD PTR [eax+ecx*2+0x6b],esp
  4190e5:	ins    DWORD PTR es:[edi],dx
  4190e6:	pop    edi
  4190e7:	cmp    al,BYTE PTR [edi+0x66]
  4190ea:	jb     0x4190f8
  4190ec:	ins    BYTE PTR es:[edi],dx
  4190ed:	outs   dx,DWORD PTR ds:[esi]
  4190ee:	add    BYTE PTR ds:0x1d745a64,dl
  4190f4:	ins    BYTE PTR es:[edi],dx
  4190f5:	pop    edx
  4190f6:	je     0x4190e1
  4190f8:	jge    0x41913a
  4190fa:	jbe    0x419108
  4190fc:	pop    ecx
  4190fd:	push   0x6e471261
  419102:	outs   dx,BYTE PTR ds:[esi]
  419103:	or     al,0x2b
  419105:	outs   dx,BYTE PTR ds:[esi]
  419106:	jbe    0x41910c
  419108:	inc    edi
  419109:	gs pop edi
  41910b:	fist   WORD PTR [ecx]
  41910d:	gs add ah,cl
  419110:	and    DWORD PTR [ebp+0x6d],ebp
  419113:	fild   QWORD PTR ds:0x15c16109
  419119:	pop    ebx
  41911a:	popa   
  41911b:	add    BYTE PTR [edx+0xb],bh
  41911e:	data16 jb 0x419121
	...
  419145:	add    BYTE PTR [eax],al
  419147:	add    BYTE PTR [ebx+0x66],bh
  41914a:	outs   dx,BYTE PTR ds:[esi]
  41914b:	fs jb  0x4191b2
  41914e:	imul   esp,DWORD PTR [edx+esi*2+0x67],0x61
  419153:	jae    0x41912b
  419155:	inc    edx
  419156:	outs   dx,BYTE PTR ds:[esi]
  419157:	jns    0x4191bb
  419159:	cmp    eax,0xbd76e6b
  41915e:	imul   ebp,DWORD PTR [ecx-0x2f],0xbd736b59
  419165:	gs je  0x419168
  419168:	nop
  419169:	sbb    DWORD PTR [edx],esi
  41916b:	xor    al,BYTE PTR [eax]
  41916d:	sbb    DWORD PTR [eax],eax
  41916f:	bound  esi,QWORD PTR [edi-0x78939d98]
  419175:	push   esi
  419176:	add    BYTE PTR [ecx],dh
  419178:	push   ebx
  419179:	adc    al,0x2d
  41917b:	xor    DWORD PTR [ebx+0x14],eax
  41917e:	sub    eax,0x5f429100
  419183:	popa   
  419184:	add    DWORD PTR [edx+0x6c],0x6b3d2261
  41918b:	jb     0x419123
  41918d:	outs   dx,BYTE PTR fs:[esi]
  41918f:	xor    al,BYTE PTR [ecx]
  419191:	or     esp,DWORD PTR [ebp+0x6c]
  419194:	pop    ebp
  419195:	pop    ebx
  419196:	popa   
  419197:	addr16 cmp eax,0x4d660069
  41919d:	inc    edx
  41919e:	je     0x419202
  4191a0:	push   ebx
  4191a1:	inc    ecx
  4191a2:	ins    BYTE PTR es:[edi],dx
  4191a3:	xor    edx,esp
  4191a5:	imul   esi,DWORD PTR ss:[esi+0x3b],0x43
  4191aa:	arpl   WORD PTR [eax],ax
	...
  4191d4:	dec    esp
  4191d5:	fs je  0x419240
  4191d8:	push   ebx
  4191d9:	inc    ebx
  4191da:	add    BYTE PTR [ebp-0x61],ah
  4191dd:	inc    ecx
  4191de:	pop    ebp
  4191df:	outs   dx,BYTE PTR ds:[esi]
  4191e0:	xchg   edi,eax
  4191e1:	imul   ebp,DWORD PTR [eax+eax*1+0x4b],0x2c6d66c3
  4191e9:	shr    BYTE PTR [eax+eax*1+0x2d],cl
  4191ed:	popf   
  4191ee:	imul   bx,WORD PTR [esi+eax*8],0x5f
  4191f4:	clc    
  4191f5:	rcr    BYTE PTR [eax+0x6b],1
  4191f8:	add    dh,al
  4191fa:	pop    eax
  4191fb:	pop    edi
  4191fc:	repz jle 0x41925f
  4191ff:	ins    BYTE PTR es:[edi],dx
  419200:	fucomip st,st(7)
  419202:	pop    ebx
  419203:	pop    edi
  419204:	fadd   DWORD PTR [esi+0x5ef10057]
  41920a:	pop    ecx
  41920b:	outs   dx,BYTE PTR ds:[esi]
  41920c:	dec    ebx
  41920d:	mov    eax,ds:0xa2d43274
  419212:	pusha  
  419213:	xor    al,0xb9
  419215:	lock arpl WORD PTR [edi-0x57],bx
  419219:	pop    ecx
  41921a:	add    DWORD PTR [edx-0x52],esi
  41921d:	dec    esp
  41921e:	xor    esi,DWORD PTR [edx]
  419220:	js     0x419212
  419222:	arpl   WORD PTR [edx+ebp*4+0x52],bp
  419226:	pop    eax
  419227:	pop    edi
  419228:	dec    ebx
  419229:	inc    eax
  41922a:	jbe    0x419293
  41922c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41922d:	push   ebx
  41922e:	pop    edi
  41922f:	add    BYTE PTR [edx+0x7f725f17],bl
  419235:	lock pushw 0x0
	...
  41925e:	add    BYTE PTR [eax],al
  419260:	data16 sbb al,0x75
  419263:	arpl   WORD PTR [edx-0x10],bp
  419266:	xor    BYTE PTR [ebx],dh
  419268:	ss mov ch,0x30
  41926b:	add    BYTE PTR [edx+0x6],ch
  41926e:	popa   
  41926f:	arpl   WORD PTR [edi-0x3f],bp
  419272:	add    DWORD PTR [eax+0x6a],ebp
  419275:	loop   0x4192d4
  419277:	popa   
  419278:	pop    esp
  419279:	loop   0x4192db
  41927b:	add    BYTE PTR [edi],ch
  41927d:	or     eax,0xe226746c
  419282:	add    DWORD PTR [ecx+0x2a],esi
  419285:	or     ebp,ebx
  419287:	pusha  
  419288:	daa    
  419289:	or     DWORD PTR [eax],ebx
  41928b:	xor    eax,0x371a1b59
  419290:	dec    ebx
  419291:	jno    0x41925b
  419293:	push   edi
  419294:	daa    
  419295:	outs   dx,BYTE PTR ds:[esi]
  419296:	out    0x5d,eax
  419298:	in     al,dx
  419299:	pop    ecx
  41929a:	mov    bh,0x60
  41929c:	stc    
  41929d:	or     bl,cl
  41929f:	fs in  eax,dx
  4192a1:	outs   dx,DWORD PTR ds:[esi]
  4192a2:	les    edx,FWORD PTR [edi-0x19]
  4192a5:	arpl   di,sp
  4192a7:	pop    esi
  4192a8:	in     al,0x54
  4192aa:	xchg   ebx,eax
  4192ab:	pusha  
  4192ac:	cmc    
  4192ad:	or     BYTE PTR [edx-0x7fa6259c],cl
  4192b3:	pusha  
  4192b4:	dec    ebx
  4192b5:	pop    edx
  4192b6:	jnp    0x419318
  4192b8:	fild   QWORD PTR [eax+ecx*4+0x3]
  4192bc:	mov    ebx,0xa86c8857
  4192c1:	push   edi
  4192c2:	out    0x5b,eax
	...
  4192ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192ed:	push   ebp
  4192ee:	dec    ebx
  4192ef:	pop    ecx
  4192f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192f1:	or     DWORD PTR [esi+0x5b],edx
  4192f4:	mov    ch,0x65
  4192f6:	inc    esi
  4192f7:	jno    0x419293
  4192f9:	or     DWORD PTR [edi+ebp*2],edi
  4192fc:	call   0x4609:0xa85b4b55
  419303:	arpl   WORD PTR [edi+0x66],di
  419306:	cmp    al,BYTE PTR [ecx+ebp*2]
  419309:	jb     0x419346
  41930b:	pop    eax
  41930c:	outs   dx,BYTE PTR ds:[esi]
  41930d:	push   0x1b
  41930f:	pop    edi
  419310:	jp     0x41931b
  419312:	push   es
  419313:	pop    esp
  419314:	imul   esp,DWORD PTR [ebp+0x1b],0x5644b5a
  41931b:	pop    esp
  41931c:	popa   
  41931d:	jo     0x419333
  41931f:	add    al,0x1c
  419321:	pop    ss
  419322:	mov    edx,0x13782f
  419327:	mov    esi,0xe9301470
  41932c:	dec    eax
  41932d:	push   0x5336e274
  419332:	imul   ecx,esi,0xdc756b1e
  419338:	dec    eax
  419339:	jno    0x4193af
  41933b:	aad    0x18
  41933d:	pop    ds
  41933e:	sub    eax,0x2e2c6016
  419343:	clc    
  419344:	ds sub al,0x2e
  419347:	lock aaa 
  419349:	sub    ebp,DWORD PTR [edi]
  41934b:	mul    BYTE PTR [eax]
  41934d:	pop    ds
  41934e:	cmp    cl,bl
	...
  419378:	and    BYTE PTR [ecx],bl
  41937a:	sub    eax,0x776b0399
  41937f:	(bad)  
  419380:	jmp    0x4193bd
  419382:	je     0x419308
  419384:	xor    bl,BYTE PTR [ecx+0x68]
  419387:	jns    0x4193d1
  419389:	jno    0x4193ff
  41938b:	jne    0x419345
  41938d:	pop    ds
  41938e:	sub    eax,0x7258a9c6
  419393:	sub    BYTE PTR [ecx-0x57b29c95],0x70
  41939a:	arpl   WORD PTR [ebx+0x41],sp
  41939d:	arpl   WORD PTR [edx+0x13],si
  4193a0:	outs   dx,DWORD PTR ds:[esi]
  4193a1:	sbb    DWORD PTR [eax],edi
  4193a3:	sbb    DWORD PTR [edx],esi
  4193a5:	pop    ecx
  4193a6:	ins    DWORD PTR es:[edi],dx
  4193a7:	push   edi
  4193a8:	mov    al,ds:0x7b48652e
  4193ad:	push   0x599f392e
  4193b2:	add    cl,ch
  4193b4:	nop
  4193b5:	push   ebp
  4193b6:	je     0x4193d1
  4193b8:	sbb    eax,0x5f102d2e
  4193bd:	cmp    al,0x71
  4193bf:	(bad)  
  4193c0:	pushw  0x1d2d
  4193c4:	pop    edi
  4193c5:	sbb    dl,BYTE PTR [ebp+0x0]
  4193c8:	xchg   ebx,eax
  4193c9:	cmp    esi,DWORD PTR [esi+0x65]
  4193cc:	xchg   ebp,eax
  4193cd:	sbb    al,0x6d
  4193cf:	push   esi
  4193d0:	dec    eax
  4193d1:	pushw  0x4a
  4193d4:	hlt    
  4193d5:	cmp    bh,BYTE PTR [eax+0x65]
  4193d8:	mov    ds:0x74743f,al
	...
  419401:	add    BYTE PTR [eax],al
  419403:	add    BYTE PTR [edx+0x7f2f2b2d],al
  419409:	inc    ecx
  41940a:	pop    ebp
  41940b:	jae    0x419390
  41940d:	add    DWORD PTR [edi+0x6f],ebx
  419410:	ja     0x419413
  419412:	bound  esi,QWORD PTR [edx+0x55]
  419415:	and    DWORD PTR [ecx+0x4d],edx
  419418:	test   BYTE PTR [eax+0x6b],ch
  41941b:	inc    ecx
  41941c:	jo     0x41941e
  41941e:	inc    ebx
  41941f:	ja     0x4193f5
  419421:	cmp    eax,0x217e423d
  419426:	cs gs mov edx,0xbe68003a
  41942d:	imul   esi,DWORD PTR [eax+0x3a],0x75
  419431:	add    BYTE PTR [ebp+0x73],bl
  419434:	rol    DWORD PTR [eax+0x74],cl
  419437:	jb     0x41940c
  419439:	cmp    ah,BYTE PTR [ecx+0x2e]
  41943c:	rol    DWORD PTR [ecx+0x69],0x2f
  419440:	call   0x462c:0x717a6544
  419447:	xor    eax,0x6d656745
  41944c:	push   eax
  41944d:	repz pusha 
  41944f:	js     0x4194d0
  419451:	add    eax,0x1c5f5900
  419456:	push   eax
  419457:	push   edi
  419458:	sbb    eax,DWORD PTR cs:[ebp+0x4c]
  41945c:	das    
  41945d:	adc    eax,0x353b5555
  419462:	inc    edi
  419463:	inc    esp
  419464:	sub    al,0x1c
  419466:	dec    esp
  419467:	inc    ebp
	...
  419490:	dec    ebx
  419491:	ror    BYTE PTR [ebx+edx*2-0x7e],0x2f
  419496:	push   edx
  419497:	push   edi
  419498:	jnp    0x419496
  41949a:	ds inc esp
  41949c:	jnp    0x4194c7
  41949e:	dec    edi
  41949f:	inc    edi
  4194a0:	jp     0x419464
  4194a2:	xor    DWORD PTR [eax],eax
  4194a4:	dec    ebx
  4194a5:	lock add DWORD PTR [eax],eax
  4194a8:	dec    ecx
  4194a9:	lock cmp BYTE PTR [ebp+0xf],cl
  4194ad:	xchg   ebp,eax
  4194ae:	add    al,0xff
  4194b0:	pushf  
  4194b1:	lock add DWORD PTR [eax],eax
  4194b4:	dec    ebx
  4194b5:	lock add DWORD PTR [eax],eax
  4194b8:	clc    
  4194b9:	xchg   edx,eax
  4194ba:	cmp    edx,DWORD PTR [esp+ebx*1-0x4f]
  4194be:	dec    edi
  4194bf:	inc    ebx
  4194c0:	pop    ds
  4194c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194c2:	pop    esp
  4194c3:	popa   
  4194c4:	stc    
  4194c5:	call   0x5545:0x7be56d72
  4194cc:	repnz mov DWORD PTR [ebp+0x6d],ebx
  4194d0:	aam    0x7e
  4194d2:	inc    ebp
  4194d3:	inc    ecx
  4194d4:	fidivr WORD PTR [ebp+0x6f]
  4194d7:	arpl   bp,bx
  4194d9:	pop    ebx
  4194da:	dec    ebx
  4194db:	arpl   WORD PTR [ecx-0x5292a3a1],di
  4194e1:	je     0x419533
  4194e3:	outs   dx,BYTE PTR ds:[esi]
  4194e4:	mov    ds:0xaa74725a,al
  4194e9:	xor    al,0x58
  4194eb:	add    BYTE PTR [esi+0x4a],bh
  4194ee:	pop    ebx
  4194ef:	outs   dx,BYTE PTR ds:[esi]
  4194f0:	cwde   
  4194f1:	cmp    al,0x63
  4194f3:	ins    BYTE PTR es:[edi],dx
	...
  41951c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41951d:	pop    ds
  41951e:	jo     0x419592
  419520:	mov    ds:0x8f005d32,al
  419525:	cmp    DWORD PTR [ecx+0x70],esi
  419528:	outs   dx,DWORD PTR ds:[esi]
  419529:	push   ecx
  41952a:	imul   ecx,DWORD PTR [esi+0x6a],0x1d
  41952e:	pop    edi
  41952f:	add    BYTE PTR [edi+0x4b03e709],cl
  419535:	or     edi,esp
  419537:	add    ecx,DWORD PTR [ebx+0x9]
  41953a:	out    0x5a,eax
  41953c:	push   0x5f60fd57
  419541:	push   ss
  419542:	mov    ecx,0xb6d2f15
  419547:	add    al,0x16
  419549:	xor    eax,0x55283f1a
  41954e:	sub    BYTE PTR [ebx+0x37],ah
  419551:	jo     0x419530
  419553:	pusha  
  419554:	or     ch,BYTE PTR [edx-0x33]
  419557:	jb     0x419587
  419559:	ins    DWORD PTR es:[edi],dx
  41955a:	int3   
  41955b:	push   edx
  41955c:	sub    BYTE PTR [esi-0x26],dl
  41955f:	pop    esp
  419560:	push   ds
  419561:	imul   esi,DWORD PTR [eax-0x46c6b4a1],0x56
  419568:	jmp    0x9365:0xc72ba63
  41956f:	push   esi
  419570:	sbb    ah,BYTE PTR [edx+ebx*4+0x72]
  419574:	in     al,dx
  419575:	imul   ecx,DWORD PTR [ebp-0x18f718c4],0xe7094b03
  41957f:	add    eax,DWORD PTR [eax]
	...
  4195a5:	add    BYTE PTR [eax],al
  4195a7:	add    BYTE PTR [ebx+0x9],cl
  4195aa:	out    0x62,eax
  4195ac:	mov    ecx,0x7a6f7752
  4195b1:	sbb    eax,ebp
  4195b3:	pop    edi
  4195b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195b5:	gs out 0x42,eax
  4195b8:	mov    ecx,0x78705752
  4195bd:	addr16 push edi
  4195bf:	jb     0x41956f
  4195c1:	pop    ebp
  4195c2:	dec    esp
  4195c3:	popa   
  4195c4:	lahf   
  4195c5:	dec    ebp
  4195c6:	dec    eax
  4195c7:	jo     0x419635
  4195c9:	or     edi,esp
  4195cb:	add    ecx,DWORD PTR [ebx+0x9]
  4195ce:	or     eax,0x6e835f
  4195d3:	jmp    0x35a7fc73
  4195d8:	pop    esi
  4195d9:	cmp    BYTE PTR [edx+0xc],dh
  4195dc:	xchg   ebx,eax
  4195dd:	vmwrite ebx,DWORD PTR ds:[bx+si]
  4195e2:	push   edx
  4195e3:	jmp    0xffa4ef67
  4195e8:	dec    eax
  4195e9:	fdivr  st,st(5)
  4195eb:	jmp    0x4a9f0b8
  4195f0:	and    esp,DWORD PTR [ebp+0x31]
  4195f3:	mov    ebx,0xfd6c6d5e
  4195f8:	dec    eax
  4195f9:	cmp    cl,BYTE PTR [eax-0x52]
  4195fc:	add    eax,0xf4ce465d
  419601:	ins    BYTE PTR es:[edi],dx
  419602:	arpl   bx,bx
  419604:	clc    
  419605:	aaa    
  419606:	je     0x4195c9
  419608:	or     DWORD PTR [ecx],ecx
  41960a:	add    cl,ch
	...
  419634:	dec    eax
  419635:	or     DWORD PTR [eax],eax
  419637:	test   DWORD PTR [eax+0x18],esp
  41963a:	add    BYTE PTR [eax+0x50],dh
  41963d:	sbb    BYTE PTR [eax],al
  41963f:	and    BYTE PTR [eax+0x18],dl
  419642:	add    BYTE PTR [esi+0x40],al
  419645:	sbb    BYTE PTR [eax],al
  419647:	or     al,0x40
  419649:	sbb    BYTE PTR [eax],al
  41964b:	adc    al,0x30
  41964d:	sbb    BYTE PTR [eax],al
  41964f:	fdiv   QWORD PTR [edx]
  419651:	sbb    BYTE PTR [eax],al
  419653:	retf   
  419654:	bound  ebx,QWORD PTR [eax]
  419656:	add    al,al
  419658:	bound  ebx,QWORD PTR [eax]
  41965a:	add    BYTE PTR [edx+edx*2+0x52870018],ah
  419661:	sbb    BYTE PTR [eax],al
  419663:	jae    0x4196a7
  419665:	sbb    BYTE PTR [eax],al
  419667:	xchg   BYTE PTR [edx+0x18],al
  41966a:	add    cl,ch
  41966c:	dec    eax
  41966d:	or     DWORD PTR [eax],eax
  41966f:	call   0xc19fbc
  419674:	test   DWORD PTR [ebx],0x642f0000
  41967a:	and    BYTE PTR [ebp+ecx*4+0x6a],al
  41967e:	jno    0x4196ed
  419680:	xchg   DWORD PTR [edi],edi
  419682:	je     0x4196f7
  419684:	repnz or al,BYTE PTR [eax]
  419687:	add    BYTE PTR [edx+0x2],dh
  41968a:	add    BYTE PTR [eax],al
  41968c:	loop   0x4196d8
  41968e:	jo     0x419700
  419690:	es ins BYTE PTR es:[edi],dx
  419692:	je     0x4196f5
  419694:	mov    dl,0xa
	...
  4196be:	add    BYTE PTR [eax],al
  4196c0:	xor    dl,BYTE PTR [eax]
  4196c2:	add    BYTE PTR [eax],al
  4196c4:	mov    ds:0x43636b1f,al
  4196c9:	xor    DWORD PTR [eax],esp
  4196cb:	inc    ecx
  4196cc:	sbb    BYTE PTR [ebx+0x44],0x61
  4196d0:	jbe    0x41973c
  4196d2:	add    BYTE PTR [ecx],al
  4196d4:	mov    ds:0xa220800b,al
  4196d9:	or     eax,DWORD PTR [eax]
  4196db:	inc    ebx
  4196dc:	xchg   ebx,eax
  4196dd:	push   0xa726568
  4196e2:	add    BYTE PTR [eax],al
  4196e4:	loop   0x419710
  4196e6:	add    BYTE PTR [eax],al
  4196e8:	bound  ecx,QWORD PTR [eax+0x6b]
  4196eb:	outs   dx,DWORD PTR ds:[esi]
  4196ec:	mov    ecx,0x72736132
  4196f1:	or     al,BYTE PTR [eax]
  4196f3:	add    dl,ah
  4196f5:	sub    DWORD PTR [eax],eax
  4196f7:	add    BYTE PTR [edx+0x13],ah
  4196fa:	gs jae 0x4196c3
  4196fd:	cmp    eax,0x9327972
  419702:	add    BYTE PTR [eax],al
  419704:	mov    ds:0x22fffdd7,al
  419709:	and    BYTE PTR [ebp+0x20],dh
  41970c:	jbe    0x419768
  41970e:	pop    edi
  41970f:	jne    0x4196a0
  419711:	pusha  
  419712:	outs   dx,BYTE PTR ds:[esi]
  419713:	je     0x419760
  419715:	xor    eax,DWORD PTR [edx+eax*1]
  419718:	dec    ebx
  419719:	loopne 0x41969c
  41971b:	and    DWORD PTR [ebx-0x20],ecx
  41971e:	add    DWORD PTR [ecx+0x6c],eax
  419721:	inc    ebp
  419722:	outs   dx,DWORD PTR ds:[esi]
  419723:	ins    DWORD PTR es:[edi],dx
	...
  41974c:	add    BYTE PTR gs:[ebx+0x70],al
  419750:	jnp    0x41977e
  419752:	arpl   WORD PTR [edx+ebp*2-0x20],si
  419756:	add    al,0x0
  419758:	dec    ebx
  419759:	pusha  
  41975a:	sub    DWORD PTR [eax],eax
  41975c:	dec    ebx
  41975d:	loopne 0x4197af
  41975f:	ja     0x41978c
  419761:	adc    BYTE PTR [ebx+0x61],ch
  419764:	aas    
  419765:	aad    0x53
  419767:	arpl   WORD PTR [eax],di
  419769:	loopne 0x41976e
  41976b:	add    BYTE PTR [ebx+0x60],cl
  41976e:	xor    al,BYTE PTR [eax]
  419770:	dec    ebx
  419771:	loopne 0x4197b9
  419773:	ins    DWORD PTR es:[edi],dx
  419774:	ss mov ebp,0xac6b6e72
  41977a:	jb     0x4197dd
  41977c:	push   ds
  41977d:	int    0x68
  41977f:	outs   dx,BYTE PTR ds:[esi]
  419780:	pop    ss
  419781:	mov    bl,0x1
  419783:	add    cl,BYTE PTR [ebx-0x20]
  419786:	sub    DWORD PTR ds:0x4101e04b,0x6d70cce4
  419790:	(bad)  
  419792:	inc    edx
  419793:	idiv   BYTE PTR fs:[eax+0x6f]
  419797:	fdivr  DWORD PTR [bp+di+0x53]
  41979b:	pop    edi
  41979c:	fisttp WORD PTR [eax-0x63d49ca9]
  4197a2:	jb     0x419811
  4197a4:	mov    bh,0x53
  4197a6:	add    edi,edi
  4197a8:	cmp    al,0xe0
  4197aa:	xor    DWORD PTR [eax],0x3f01e04b
	...
  4197d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197d9:	push   ebp
  4197da:	ins    BYTE PTR es:[edi],dx
  4197db:	outs   dx,BYTE PTR ds:[esi]
  4197dc:	mov    dl,0x9
  4197de:	pop    edx
  4197df:	pop    eax
  4197e0:	cdq    
  4197e1:	push   0x6c9d6d53
  4197e6:	pop    es
  4197e7:	cmp    BYTE PTR [esi+0x4b573b66],bl
  4197ed:	or     bh,ah
  4197ef:	add    ecx,ebx
  4197f1:	or     esp,edi
  4197f3:	add    ecx,DWORD PTR [ebx+0x39]
  4197f6:	dec    esp
  4197f7:	push   esi
  4197f8:	jp     0x419860
  4197fa:	cmp    eax,0x3a097765
  4197ff:	jae    0x419866
  419801:	pop    ebp
  419802:	push   ss
  419803:	gs pop ecx
  419805:	ins    BYTE PTR es:[edi],dx
  419806:	xor    edx,DWORD PTR [ecx+0x64]
  419809:	push   0x19
  41980b:	jae    0x419847
  41980d:	or     ax,0x1f58
  419811:	adc    BYTE PTR ds:[edx+0x2f],dh
  419815:	data16 (bad) 
  419817:	push   esi
  419818:	cmovp  esi,esp
  41981b:	push   ebp
  41981c:	sbb    DWORD PTR [ebp+edx*8+0x57],ebp
  419820:	cmc    
  419821:	imul   ebx,ecx,0x56
  419824:	sub    al,0x66
  419826:	lds    edi,FWORD PTR [edi]
  419828:	or     BYTE PTR [ecx-0x29],dl
  41982b:	outs   dx,DWORD PTR ds:[esi]
  41982c:	neg    BYTE PTR [edx-0x34]
  41982f:	push   ebp
  419830:	pop    ds
  419831:	cmp    cl,bh
  419833:	push   0x4a0764e7
  419838:	fisub  WORD PTR [ebx+eax*8+0x68]
	...
  419864:	fstp   DWORD PTR [ecx-0x19]
  419867:	xor    ecx,DWORD PTR [esi]
  419869:	cmp    dh,BYTE PTR [ebx-0x38a5d7dd]
  41986f:	dec    ebx
  419870:	idiv   DWORD PTR [edi+esi*4]
  419873:	xor    dh,BYTE PTR [ebx+eiz*1-0x49]
  419877:	adc    BYTE PTR [ecx+0x41],dl
  41987a:	mov    ss,WORD PTR [esi-0x41]
  41987d:	str    ecx
  419880:	arpl   WORD PTR [edx+0xb],bx
  419883:	jecxz  0x419814
  419885:	push   0x61
  419887:	dec    esp
  419888:	ja     0x4198e7
  41988a:	cmp    cl,BYTE PTR [ecx]
  41988c:	gs es sub ah,ah
  419890:	ds adc al,0x61
  419893:	dec    edx
  419894:	ins    BYTE PTR es:[edi],dx
  419895:	pop    ecx
  419896:	je     0x4198ac
  419898:	test   BYTE PTR [ebx+0x61],ah
  41989b:	dec    esi
  41989c:	arpl   WORD PTR [esi+ebp*2+0x4e],bp
  4198a0:	dec    ebp
  4198a1:	sub    DWORD PTR [edi+0x45],esp
  4198a4:	ins    BYTE PTR es:[edi],dx
  4198a5:	arpl   WORD PTR [eax+edx*1-0x7d],si
  4198a9:	pop    esp
  4198aa:	sub    al,0xc9
  4198ac:	adc    ch,BYTE PTR es:[edi-0x2c]
  4198b0:	cmp    BYTE PTR [eax],al
  4198b2:	or     ch,BYTE PTR [edx]
  4198b4:	cmp    ah,BYTE PTR [ebx+0x74]
  4198b7:	or     al,0x39
  4198b9:	pop    ebp
  4198ba:	sub    ebp,DWORD PTR ds:0xfd65632c
  4198c0:	and    BYTE PTR [edi],cl
  4198c2:	and    ah,al
  4198c4:	xor    al,0x58
  4198c6:	or     esi,ebx
	...
  4198f0:	pop    es
  4198f1:	data16 outs dx,BYTE PTR ds:[esi]
  4198f3:	iret   
  4198f4:	sub    eax,0x1bc0746a
  4198f9:	arpl   WORD PTR [edx],di
  4198fb:	or     esi,ebp
  4198fd:	fs ins DWORD PTR es:[edi],dx
  4198ff:	mov    edx,0xaa09ffe5
  419904:	sti    
  419905:	bound  esi,QWORD PTR [esp+ecx*8-0x6]
  419909:	pop    esp
  41990a:	sub    edx,DWORD PTR [ebp-0x1c9ca6ff]
  419910:	sub    BYTE PTR [eax+esi*2],dh
  419913:	cdq    
  419914:	in     al,0x6b
  419916:	popa   
  419917:	mov    ah,dh
  419919:	imul   ebp,DWORD PTR [ebp+0x7f],0x7b
  41991d:	popaw  
  41991f:	add    BYTE PTR [esi-0x4ed28b95],bh
  419925:	cmp    al,0x72
  419927:	gs ret 
  419929:	bound  ecx,QWORD PTR [ecx]
  41992b:	or     dh,cl
  41992d:	pop    eax
  41992e:	outs   dx,BYTE PTR ds:[esi]
  41992f:	je     0x4198c0
  419931:	push   edi
  419932:	je     0x419961
  419934:	outs   dx,DWORD PTR ds:[esi]
  419935:	push   edi
  419936:	pop    edi
  419937:	outs   dx,DWORD PTR ds:[esi]
  419938:	jle    0x41999a
  41993a:	outs   dx,BYTE PTR ds:[esi]
  41993b:	addr16 pop eax
  41993d:	sub    eax,0x68946962
  419942:	jb     0x4199bd
  419944:	out    0x5,eax
  419946:	push   ecx
  419947:	jae    0x4199c8
  419949:	cmp    ebp,DWORD PTR [ecx]
  41994b:	inc    ecx
  41994c:	lea    ebp,[esi+ebp*2+0x74]
  419950:	call   0xb0e27c
	...
  419979:	add    BYTE PTR [eax],al
  41997b:	add    BYTE PTR [eax],ch
  41997d:	pusha  
  41997e:	ins    BYTE PTR es:[edi],dx
  41997f:	ins    BYTE PTR es:[edi],dx
  419980:	inc    ebx
  419981:	sbb    dh,BYTE PTR [esi+ebp*1]
  419984:	mov    ds:0x55632827,al
  419989:	fs jo  0x4199ed
  41998c:	mov    esi,0x3f6c625e
  419991:	neg    BYTE PTR [edi]
  419993:	dec    ebp
  419994:	inc    ecx
  419995:	inc    eax
  419996:	inc    ecx
  419997:	and    BYTE PTR [edi],bh
  419999:	pop    ss
  41999a:	xor    BYTE PTR [ebx],bh
  41999c:	inc    edx
  41999d:	adc    ah,BYTE PTR [ebp+0x6e]
  4199a0:	jle    0x4199fa
  4199a2:	jae    0x419a17
  4199a4:	push   edx
  4199a5:	lock aaa 
  4199a7:	sub    DWORD PTR [edi+0x5],esi
  4199aa:	or     DWORD PTR [edx],ecx
  4199ac:	bound  ecx,QWORD PTR [ebx+ebp*2+0x6e]
  4199b0:	scas   al,BYTE PTR es:[edi]
  4199b1:	push   0x6e
  4199b3:	je     0x419a1c
  4199b5:	inc    ebx
  4199b6:	popa   
  4199b7:	outs   dx,BYTE PTR ds:[esi]
  4199b8:	int    0x3b
  4199ba:	push   0x6b43623a
  4199bf:	arpl   WORD PTR [ebx-0x7f],cx
  4199c2:	push   ebp
  4199c3:	addr16 mov ah,0x52
  4199c6:	sbb    eax,DWORD PTR [eax]
  4199c8:	test   BYTE PTR [ebp+0x4f6e2035],ah
  4199ce:	and    DWORD PTR [eax-0x69],ecx
  4199d1:	je     0x419a04
  4199d3:	sub    eax,0xb11925a
  4199d8:	push   ecx
  4199d9:	sbb    BYTE PTR [ebp+0x71],ch
  4199dc:	lahf   
  4199dd:	es and al,0x23
	...
  419a08:	cwde   
  419a09:	in     eax,dx
  419a0a:	pop    es
  419a0b:	aas    
  419a0c:	push   0x7770673f
  419a11:	push   es
  419a12:	and    al,0x2a
  419a14:	and    al,0xf6
  419a16:	push   cs
  419a17:	or     cl,BYTE PTR [edx+0x5b63613f]
  419a1d:	sbb    al,0x2f
  419a1f:	inc    ebx
  419a20:	ins    DWORD PTR es:[edi],dx
  419a21:	jmp    FWORD PTR [esp+eiz*2+0x62]
  419a25:	add    ah,BYTE PTR [ebp+0x3a]
  419a28:	sub    ecx,DWORD PTR [ecx]
  419a2a:	push   0x6afc3563
  419a2f:	je     0x419a73
  419a31:	mov    esp,0xd1702a21
  419a36:	and    BYTE PTR [eax],dh
  419a38:	ds out 0x42,al
  419a3b:	ins    DWORD PTR es:[edi],dx
  419a3c:	xor    eax,0x176168d2
  419a41:	mov    ecx,0x516e6e
  419a46:	popa   
  419a47:	ins    BYTE PTR es:[edi],dx
  419a48:	sbb    al,0xaf
  419a4a:	push   0x529d510b
  419a4f:	arpl   cx,di
  419a51:	cld    
  419a52:	inc    edx
  419a53:	gs out dx,al
  419a55:	rcl    DWORD PTR [ebp+0x3a],0x2b
  419a59:	lods   eax,DWORD PTR ds:[esi]
  419a5a:	outs   dx,BYTE PTR ds:[esi]
  419a5b:	jp     0x419a4f
  419a5d:	xchg   ebx,eax
  419a5e:	ins    DWORD PTR es:[edi],dx
  419a5f:	pop    edi
  419a60:	sub    al,0x9
  419a62:	fld    TBYTE PTR ds:0x62cf291b
  419a68:	fisub  WORD PTR [ebx-0x69]
  419a6b:	add    BYTE PTR fs:[eax],al
	...
  419a92:	add    BYTE PTR [eax],al
  419a94:	mov    edi,0xa86f8960
  419a99:	push   cs
  419a9a:	(bad)  
  419a9b:	push   eax
  419a9c:	call   0xb723:0x7823a440
  419aa3:	sbb    ch,BYTE PTR [ebx+0x3a]
  419aa6:	sub    BYTE PTR [ebp-0x59],0x62
  419aaa:	pop    esi
  419aab:	push   ebx
  419aac:	imul   edx,DWORD PTR [eax],0x1f
  419aaf:	sub    eax,0x9e3ff40
  419ab4:	dec    ebx
  419ab5:	and    esp,edi
  419ab7:	sub    eax,0x2a23092d
  419abc:	and    eax,0x1d29e71f
  419ac1:	pop    ds
  419ac2:	out    0x6d,eax
  419ac4:	push   0x6454485d
  419ac9:	push   ss
  419aca:	fldcw  WORD PTR ds:0x40b656f
  419ad0:	jge    0x419b3e
  419ad2:	sbb    eax,DWORD PTR [ebp+0x3b]
  419ad5:	pusha  
  419ad6:	sub    DWORD PTR [ecx+0x25],ebx
  419ad9:	imul   ecx,DWORD PTR [edx+edx*2],0xd
  419add:	push   edi
  419ade:	add    al,0x69
  419ae0:	dec    ebx
  419ae1:	inc    ebx
  419ae2:	or     al,0x58
  419ae4:	clc    
  419ae5:	push   ebp
  419ae6:	add    al,0x52
  419ae8:	or     BYTE PTR [ebx-0x24],ah
  419aeb:	jo     0x419b38
  419aed:	or     esi,ecx
  419aef:	outs   dx,DWORD PTR ds:[esi]
  419af0:	sub    BYTE PTR [esi],dl
  419af2:	sbb    DWORD PTR [esi],ebp
  419af4:	out    dx,eax
  419af5:	fs mov ebx,0x3
	...
  419b1f:	add    BYTE PTR [edx],bl
  419b21:	pop    ebp
  419b22:	into   
  419b23:	dec    esi
  419b24:	sti    
  419b25:	imul   ecx,ebp,0x32
  419b28:	mul    DWORD PTR [ecx+0x0]
  419b2b:	mov    ebx,0xe9636bef
  419b30:	dec    eax
  419b31:	xor    ah,BYTE PTR [edi+ebx*4-0x11]
  419b35:	pop    eax
  419b36:	fidivr DWORD PTR [bp+si]
  419b39:	and    esp,DWORD PTR [ebp+eax*4-0x4c]
  419b3d:	or     DWORD PTR [edi],edi
  419b3f:	jge    0x419aed
  419b41:	pop    esi
  419b42:	popa   
  419b43:	mov    BYTE PTR [esp+ebp*2+0x48a48f3f],bl
  419b4a:	outs   dx,BYTE PTR ds:[esi]
  419b4b:	cmp    BYTE PTR [eax+ebp*2+0x5f],0x7d
  419b50:	scas   eax,DWORD PTR es:[edi]
  419b51:	push   ebx
  419b52:	arpl   WORD PTR [edx],di
  419b54:	mov    al,ds:0x9f2a0065
  419b59:	ins    BYTE PTR es:[edi],dx
  419b5a:	popa   
  419b5b:	inc    edx
  419b5c:	inc    ebx
  419b5d:	pop    esi
  419b5e:	imul   eax,DWORD PTR [ebp+ebp*2+0x44],0x6c695463
  419b66:	jb     0x419ba2
  419b68:	pop    edi
  419b69:	push   0x5b8ee970
  419b6e:	arpl   WORD PTR [edx+ebx*1+0x68],ax
  419b72:	fs jmp 0x5a4f703
  419b78:	test   BYTE PTR [edi+0x73],bl
  419b7b:	add    al,0x2c
  419b7d:	pop    ebx
  419b7e:	pop    edi
  419b7f:	adc    eax,0x2a001024
	...
  419bac:	sbb    DWORD PTR [esp+eiz*2+0x27],ebp
  419bb0:	sbb    DWORD PTR [ebx+eiz*2-0x17],ebp
  419bb4:	or     ebx,DWORD PTR [ebx+0x77]
  419bb7:	stc    
  419bb8:	hlt    
  419bb9:	inc    ebp
  419bba:	arpl   bp,bx
  419bbc:	pop    ebp
  419bbd:	pop    edx
  419bbe:	arpl   bx,bx
  419bc0:	add    ebp,DWORD PTR [edi+esi*2-0x17]
  419bc4:	or     ebx,DWORD PTR [ebx+0x77]
  419bc7:	fst    DWORD PTR [esp+ecx*2]
  419bca:	js     0x419bcc
  419bcc:	mov    dl,0x5d
  419bce:	jb     0x419c44
  419bd0:	mov    ecx,0xb1007567
  419bd5:	cmp    dh,BYTE PTR [ebp+0x70]
  419bd8:	xchg   esi,eax
  419bd9:	dec    eax
  419bda:	popa   
  419bdb:	jae    0x419b93
  419bdd:	cmp    ch,BYTE PTR [ebx+0x79]
  419be0:	cdq    
  419be1:	addr16 jne 0x419be4
  419be4:	icebp  
  419be5:	cmp    DWORD PTR [ebp+0x70],esi
  419be8:	(bad)  
  419be9:	sbb    DWORD PTR [ecx+0x6c],esp
  419bec:	(bad)  
  419bed:	push   0x6f
  419bef:	gs loope 0x419c4e
  419bf2:	outs   dx,BYTE PTR ds:[esi]
  419bf3:	je     0x419bcc
  419bf5:	xor    esi,DWORD PTR [eax+eax*1-0x40]
  419bf9:	data16 jbe 0x419c61
  419bfc:	jo     0x419c2f
  419bfe:	push   esp
  419bff:	outs   dx,DWORD PTR ds:[esi]
  419c00:	push   ecx
  419c01:	push   0x3cf2666c
  419c06:	jo     0x419c6d
  419c08:	cmp    al,0x15
  419c0a:	jb     0x419c7b
  419c0c:	sub    DWORD PTR [eax+0x6f],0x73
	...
  419c37:	add    BYTE PTR [esi+0x5e],dl
  419c3a:	mov    WORD PTR gs:[di],es
  419c3e:	inc    ebp
  419c3f:	ins    DWORD PTR es:[edi],dx
  419c40:	and    ch,BYTE PTR [eax+0x72]
  419c43:	jae    0x419c82
  419c45:	pop    edi
  419c46:	pop    ebp
  419c47:	je     0x419c90
  419c49:	cmp    DWORD PTR [ebx+0x67],ebp
  419c4c:	push   ebp
  419c4d:	push   0x16bc4f64
  419c52:	outs   dx,DWORD PTR ds:[esi]
  419c53:	gs mov al,0xb
  419c56:	inc    ebx
  419c57:	gs mov dh,0x17
  419c5a:	imul   ebp,DWORD PTR [ebx+0x57],0x5f
  419c5e:	inc    ebp
  419c5f:	outs   dx,BYTE PTR ds:[esi]
  419c60:	inc    esp
  419c61:	pop    esi
  419c62:	jb     0x419cd1
  419c64:	xor    DWORD PTR [edi],0x65
  419c67:	outs   dx,DWORD PTR ds:[esi]
  419c68:	jl     0x419c75
  419c6a:	aas    
  419c6b:	outs   dx,DWORD PTR ds:[esi]
  419c6c:	dec    ebx
  419c6d:	enter  0x6353,0xf9
  419c71:	mov    ch,0x30
  419c73:	addr16 out dx,eax
  419c75:	ins    DWORD PTR es:[edi],dx
  419c76:	ins    BYTE PTR es:[edi],dx
  419c77:	push   ecx
  419c78:	not    DWORD PTR [ebx+0x72ec6e6a]
  419c7e:	push   0x64
  419c80:	or     ah,dl
  419c82:	dec    ebp
  419c83:	ins    DWORD PTR es:[edi],dx
  419c84:	in     al,dx
  419c85:	jbe    0x419cf2
  419c87:	push   ebx
  419c88:	fadd   DWORD PTR [edi+ecx*2+0x6ca44b3f]
  419c8f:	ins    DWORD PTR es:[edi],dx
  419c90:	mov    al,0x75
  419c92:	push   ecx
  419c93:	push   eax
  419c94:	mov    ecx,0x9f675379
  419c99:	test   DWORD PTR [ebx+eiz*2+0x0],esp
	...
  419cc1:	add    BYTE PTR [eax],al
  419cc3:	add    BYTE PTR [ebp-0x7f],bh
  419cc6:	ins    DWORD PTR es:[edi],dx
  419cc7:	jae    0x419c6f
  419cc9:	mov    eax,ds:0x3aaf3f01
  419cce:	dec    edi
  419ccf:	jno    0x419c68
  419cd1:	adc    al,0x69
  419cd3:	imul   ebp,DWORD PTR [esi+0x46],0x36727234
  419cda:	imul   ebp,DWORD PTR [esi+ebp*2+0x3f],0x5f
  419cdf:	jno    0x419d2c
  419ce1:	loopne 0x419d49
  419ce3:	jb     0x419d47
  419ce5:	adc    BYTE PTR [eax+0x31],dl
  419ce8:	sbb    esi,ecx
  419cea:	pop    ebp
  419ceb:	ins    BYTE PTR es:[edi],dx
  419cec:	addr16 loopne 0x419d35
  419cef:	arpl   WORD PTR [ecx-0xc],bx
  419cf2:	dec    eax
  419cf3:	jo     0x419d23
  419cf5:	push   es
  419cf6:	xor    eax,0x5ef43877
  419cfb:	imul   ebx,DWORD PTR [eax],0xffffffcc
  419cfe:	push   0x72
  419d00:	and    DWORD PTR es:[ecx+eax*2],eax
  419d04:	ror    BYTE PTR cs:[ebp+0x43],cl
  419d08:	sub    eax,0x2e4168d5
  419d0d:	or     ecx,ebx
  419d0f:	dec    edi
  419d10:	and    al,0x67
  419d12:	shl    BYTE PTR [esi+0x24],1
  419d15:	push   ebp
  419d16:	int3   
  419d17:	push   esi
  419d18:	add    al,0x5f
  419d1a:	mov    edx,0xcc5ae64f
  419d1f:	add    ecx,DWORD PTR [edx]
  419d21:	fs mov ecx,0xc65d0a4f
  419d27:	push   esi
	...
  419d50:	call   0xd9ac508e
  419d55:	arpl   di,sp
  419d57:	inc    esi
  419d58:	(bad)  [edi-0x69]
  419d5b:	dec    edi
  419d5c:	test   BYTE PTR [edx-0x68],ch
  419d5f:	push   eax
  419d60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d61:	pop    ebx
  419d62:	test   BYTE PTR [esi-0x58],al
  419d65:	pop    ebx
  419d66:	jnp    0x419dd4
  419d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d69:	pusha  
  419d6a:	mov    ah,BYTE PTR [edi+ebx*4+0x64]
  419d6e:	xchg   edi,eax
  419d6f:	push   ebp
  419d70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d71:	push   edi
  419d72:	mov    BYTE PTR [edi-0x58],cl
  419d75:	inc    edx
  419d76:	dec    esp
  419d77:	pop    ebp
  419d78:	dec    ebx
  419d79:	or     edi,esp
  419d7b:	add    ecx,DWORD PTR [ebx+0x9]
  419d7e:	out    0x3,eax
  419d80:	dec    ebx
  419d81:	or     edi,esp
  419d83:	add    ecx,DWORD PTR [ebx+0x9]
  419d86:	out    0x3,eax
  419d88:	dec    ebx
  419d89:	or     edi,esp
  419d8b:	add    ecx,DWORD PTR [ebx+0x9]
  419d8e:	out    0x3,eax
  419d90:	dec    ebx
  419d91:	or     edi,esp
  419d93:	add    ecx,DWORD PTR [ebx+0x9]
  419d96:	out    0x3,eax
  419d98:	dec    ebx
  419d99:	or     edi,esp
  419d9b:	add    ecx,DWORD PTR [ebx+0x9]
  419d9e:	out    0x3,eax
  419da0:	dec    ebx
  419da1:	or     edi,esp
  419da3:	add    ecx,DWORD PTR [ebx+0x9]
  419da6:	out    0x3,eax
  419da8:	dec    ebx
  419da9:	or     edi,esp
  419dab:	add    ecx,DWORD PTR [ebx+0x9]
  419dae:	add    cl,ch
  419db0:	dec    eax
  419db1:	or     DWORD PTR [eax],eax
  419db3:	jmp    0x419db8
	...
  419ddc:	dec    eax
  419ddd:	or     DWORD PTR [eax],eax
  419ddf:	jmp    0xe941a72c
  419de4:	dec    eax
  419de5:	or     DWORD PTR [eax],eax
  419de7:	jmp    0xe941a734
  419dec:	dec    eax
  419ded:	or     DWORD PTR [eax],eax
  419def:	jmp    0xe941a73c
  419df4:	dec    eax
  419df5:	or     DWORD PTR [eax],eax
  419df7:	jmp    0xe941a744
  419dfc:	dec    eax
  419dfd:	or     DWORD PTR [eax],eax
  419dff:	jmp    0xb141a74c
  419e04:	jns    0x419e4a
  419e06:	inc    esp
  419e07:	jmp    0xd171c6a9
  419e0c:	jo     0x419e2e
  419e0e:	and    edi,DWORD PTR [ecx-0x3bd4cec4]
  419e14:	cmp    BYTE PTR ds:0x196bc458,dl
  419e1a:	xor    dl,BYTE PTR [ecx+0x4132196b]
  419e20:	sub    BYTE PTR fs:[eax],dh
  419e23:	sbb    eax,DWORD PTR [edi+0x28]
  419e26:	xor    BYTE PTR [ebx],bl
  419e28:	aas    
  419e29:	sub    BYTE PTR [eax],dh
  419e2b:	sbb    esi,DWORD PTR [edi]
  419e2d:	sub    BYTE PTR [eax],dh
  419e2f:	sti    
  419e30:	xor    BYTE PTR [eax],ch
  419e32:	xor    bl,bh
  419e34:	and    BYTE PTR [eax],ch
  419e36:	xor    bl,bh
  419e38:	and    BYTE PTR [eax+0x0],dl
  419e3b:	es je  0x419e93
  419e3e:	dec    esi
  419e3f:	or     BYTE PTR [eax],al
	...
  419e65:	add    BYTE PTR [eax],al
  419e67:	add    BYTE PTR [ebx+0x64],bh
  419e6a:	jbe    0x419e70
  419e6c:	jle    0x419ec2
  419e6e:	jno    0x419e8d
  419e70:	sbb    al,0x60
  419e72:	inc    edi
  419e73:	jmp    FWORD PTR [edx]
  419e75:	pop    esi
  419e76:	add    BYTE PTR [eax],al
  419e78:	pop    ecx
  419e79:	sub    al,0x72
  419e7b:	outs   dx,BYTE PTR ds:[esi]
  419e7c:	dec    edi
  419e7d:	popa   
  419e7e:	das    
  419e7f:	xor    al,BYTE PTR [esp+ebp*1+0x3fa26c6c]
  419e86:	outs   dx,DWORD PTR ds:[esi]
  419e87:	push   edi
  419e88:	jne    0x419ec3
  419e8a:	ss xor al,0xc2
  419e8d:	imul   esp,DWORD PTR ss:[ebx-0x71],0x35
  419e92:	outs   dx,DWORD PTR ds:[esi]
  419e93:	add    BYTE PTR [ecx-0x528b999f],dh
  419e99:	addr16 jb 0x419f01
  419e9c:	(bad)  
  419e9d:	dec    edx
  419e9e:	pop    ebp
  419e9f:	jb     0x419e57
  419ea1:	sbb    BYTE PTR [ebp+esi*2-0x73],ch
  419ea5:	pop    edi
  419ea6:	outs   dx,BYTE PTR ds:[esi]
  419ea7:	jae    0x419e2f
  419ea9:	dec    edx
  419eaa:	push   esp
  419eab:	push   eax
  419eac:	push   es
  419ead:	inc    eax
  419eae:	imul   esi,DWORD PTR [ebx-0x22],0x34
  419eb2:	add    BYTE PTR [ebx-0x4b],dl
  419eb5:	push   0x74
  419eb7:	ja     0x419e7c
  419eb9:	xor    eax,0x66ec5c61
  419ebe:	jb     0x419ef2
  419ec0:	mov    dh,0x17
  419ec2:	ins    BYTE PTR es:[edi],dx
  419ec3:	jne    0x419e92
  419ec5:	pop    esi
  419ec6:	outs   dx,BYTE PTR ds:[esi]
  419ec7:	jae    0x419e4f
  419ec9:	inc    edi
  419eca:	push   esp
  419ecb:	push   eax
	...
  419ef4:	inc    esi
  419ef5:	cmp    eax,0x369e736b
  419efa:	add    BYTE PTR [ebx+0x35],dl
  419efd:	addr16 je 0x419f77
  419f00:	xor    DWORD PTR [ebx],0x61
  419f03:	pop    esp
  419f04:	sub    al,0x68
  419f06:	jb     0x419f64
  419f08:	inc    ecx
  419f09:	push   0x498e6576
  419f0e:	gs popa 
  419f10:	bound  esp,QWORD PTR ss:[ebx+0x48]
  419f14:	pop    ebx
  419f15:	ss je  0x419f87
  419f18:	dec    ebx
  419f19:	lock pop eax
  419f1b:	pop    esp
  419f1c:	or     eax,0x1c483416
  419f21:	iret   
  419f22:	dec    ebp
  419f23:	add    al,bh
  419f25:	cli    
  419f26:	popa   
  419f27:	je     0x419f3d
  419f29:	add    DWORD PTR [esi+0x63],edx
  419f2c:	mul    DWORD PTR [ebx]
  419f2e:	popa   
  419f2f:	jb     0x419f8a
  419f31:	(bad)  
  419f32:	xor    al,0x5f
  419f34:	std    
  419f35:	les    ebx,FWORD PTR [ebp+0x44]
  419f38:	repnz shl BYTE PTR [ebp+0x6d],0xec
  419f3d:	test   eax,0xb2f7716a
  419f42:	push   ebx
  419f43:	ja     0x419f4c
  419f45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f46:	sub    eax,0x54c31350
  419f4b:	je     0x419f98
  419f4d:	jb     0x419fb1
  419f4f:	jno    0x419f29
  419f51:	push   0x68
  419f53:	jb     0x419f04
  419f55:	loopne 0x419fa0
  419f57:	ins    DWORD PTR es:[edi],dx
	...
  419f80:	mov    eax,0xa65f476c
  419f85:	test   DWORD PTR [ecx],eax
  419f87:	push   ebx
  419f88:	mov    eax,0x9700537d
  419f8d:	jns    0x419ff6
  419f8f:	arpl   WORD PTR [ebx+0x4b],cx
  419f92:	fs js  0x41a009
  419f95:	or     BYTE PTR [ebp+0x70],0x5d
  419f99:	cmp    DWORD PTR [esi+0x67],esp
  419f9c:	dec    ebx
  419f9d:	or     al,0x3d
  419f9f:	dec    eax
  419fa0:	xchg   edx,eax
  419fa1:	cmovs  eax,DWORD PTR [ebx-0x67]
  419fa5:	loopne 0x419ff3
  419fa7:	outs   dx,BYTE PTR ds:[esi]
  419fa8:	js     0x419fb6
  419faa:	arpl   WORD PTR [edi+esi*2+0x24],bp
  419fae:	imul   esi,DWORD PTR [edx+0x4b],0x1a
  419fb2:	push   eax
  419fb3:	jo     0x419f37
  419fb5:	or     ch,BYTE PTR [ebx+0x4e]
  419fb8:	push   0x9
  419fba:	adc    al,0x61
  419fbc:	dec    ebx
  419fbd:	ss push cs
  419fbf:	pop    esi
  419fc0:	aaa    
  419fc1:	push   edx
  419fc2:	or     BYTE PTR [edx+0x28],dl
  419fc5:	sub    eax,0x56246c26
  419fca:	adc    esp,DWORD PTR [ecx+0x19]
  419fcd:	sub    eax,0x652d6d16
  419fd2:	push   es
  419fd3:	dec    edi
  419fd4:	sbb    ch,BYTE PTR [ecx]
  419fd6:	sub    ah,BYTE PTR [edi+0x20]
  419fd9:	pop    esp
  419fda:	enter  0xef65,0x63
  419fde:	fld    DWORD PTR [ebx]
  419fe0:	sbb    bl,BYTE PTR [edx-0x33]
  419fe3:	dec    edi
	...
  41a00c:	(bad)  
  41a00d:	fldenv [bx+si+0xf]
  41a011:	inc    edx
  41a012:	iret   
  41a013:	ins    BYTE PTR es:[edi],dx
  41a014:	ficomp DWORD PTR [esp+eax*8+0x51]
  41a018:	push   DWORD PTR [esi+eax*8]
  41a01b:	dec    edi
  41a01c:	hlt    
  41a01d:	pop    esp
  41a01e:	pop    es
  41a01f:	inc    ebx
  41a020:	ficomp WORD PTR [ebx-0x6c]
  41a023:	fs mov ch,0x65
  41a026:	test   BYTE PTR [ecx+0x4b],dl
  41a029:	sub    eax,0x52ba53a0
  41a02e:	or     BYTE PTR [edi-0x56],0x61
  41a032:	out    0x32,eax
  41a034:	lods   al,BYTE PTR ds:[esi]
  41a035:	push   ebp
  41a036:	test   BYTE PTR [edx+0x7f],dl
  41a039:	or     DWORD PTR [ebx+0x76569b4c],edx
  41a03f:	ins    BYTE PTR es:[edi],dx
  41a040:	xchg   edi,eax
  41a041:	dec    di
  41a043:	cmp    BYTE PTR [esi-0x68c1c1ca],bl
  41a049:	cmp    edi,esp
  41a04b:	aaa    
  41a04c:	jle    0x41a0ae
  41a04e:	cmp    eax,0x505b6426
  41a053:	add    al,0x35
  41a055:	pusha  
  41a056:	dec    ebp
  41a057:	ins    DWORD PTR es:[edi],dx
  41a058:	dec    ebx
  41a059:	xor    al,BYTE PTR [eax]
  41a05b:	sbb    bl,BYTE PTR [ebx+eax*2]
  41a05e:	push   esp
  41a05f:	sbb    DWORD PTR [edi+0x45],eax
  41a062:	inc    edi
  41a063:	cmp    ecx,DWORD PTR [edi+0x45]
  41a066:	inc    ebx
  41a067:	daa    
  41a068:	or     eax,DWORD PTR [edx+0x52]
  41a06b:	jmp    0x2495d679
	...
  41a098:	ins    DWORD PTR es:[edi],dx
  41a099:	xor    eax,0x485fe950
  41a09e:	dec    eax
  41a09f:	adc    al,bh
  41a0a1:	push   esp
  41a0a2:	ins    DWORD PTR es:[edi],dx
  41a0a3:	sti    
  41a0a4:	test   DWORD PTR [eax],0x54eefe51
  41a0aa:	jne    0x41a074
  41a0ac:	sbb    ah,BYTE PTR [esi+0x5c]
  41a0af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0b0:	in     al,0x5b
  41a0b2:	(bad)  
  41a0b3:	enter  0x37ec,0x41
  41a0b7:	test   al,0x38
  41a0b9:	inc    esi
  41a0ba:	pop    esp
  41a0bb:	stos   BYTE PTR es:[edi],al
  41a0bc:	sti    
  41a0bd:	push   esp
  41a0be:	arpl   WORD PTR [edi-0xdfc6d4],sp
  41a0c4:	sub    BYTE PTR [ecx+0x6d],al
  41a0c7:	mov    esp,0xaa4f2ceb
  41a0cc:	je     0x41a104
  41a0ce:	ins    DWORD PTR es:[edi],dx
  41a0cf:	lea    ebp,[edx+0x79e97268]
  41a0d5:	ss xchg bp,ax
  41a0d8:	jge    0x41a142
  41a0da:	jb     0x41a068
  41a0dc:	pop    esp
  41a0dd:	dec    esi
  41a0de:	ins    BYTE PTR es:[edi],dx
  41a0df:	mov    gs,WORD PTR [edx-0x76659398]
  41a0e5:	or     BYTE PTR [eax-0x5c],dl
  41a0e8:	push   esp
  41a0e9:	dec    edx
  41a0ea:	jae    0x41a149
  41a0ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0ed:	dec    edi
  41a0ee:	push   esp
  41a0ef:	cmp    DWORD PTR [edi],esp
  41a0f1:	call   FWORD PTR [edi]
  41a0f3:	cmp    DWORD PTR [ecx-0x65bb99ca],ebx
  41a0f9:	cmp    ah,BYTE PTR [edi+0x0]
	...
  41a124:	jge    0x41a155
  41a126:	pop    ebp
  41a127:	ins    BYTE PTR es:[edi],dx
  41a128:	ds cld 
  41a12a:	ds push esp
  41a12c:	lea    ebp,[esi]
  41a12e:	ins    BYTE PTR es:[edi],dx
  41a12f:	bound  eax,QWORD PTR [ebx+0x5d53005b]
  41a135:	addr16 je 0x41a1af
  41a138:	push   ebx
  41a139:	pop    ebx
  41a13a:	popa   
  41a13b:	pop    esp
  41a13c:	xor    DWORD PTR gs:[ebx+0x62],ebp
  41a140:	inc    ebx
  41a141:	xor    DWORD PTR [edi+0x43],ecx
  41a144:	jae    0x41a143
  41a146:	inc    eax
  41a147:	pop    esp
  41a148:	jno    0x41a1a2
  41a14a:	je     0x41a1b1
  41a14c:	fs stc 
  41a14e:	dec    edi
  41a14f:	and    ch,dl
  41a151:	in     al,dx
  41a152:	inc    edi
  41a153:	outs   dx,DWORD PTR ds:[esi]
  41a154:	lahf   
  41a155:	addr16 pop esp
  41a157:	push   ecx
  41a158:	mov    cl,0xf8
  41a15a:	push   0x6f
  41a15c:	mov    gs,WORD PTR [edx]
  41a15e:	pop    ebp
  41a15f:	jb     0x41a1c3
  41a161:	stc    
  41a162:	push   0x66
  41a164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a165:	push   ebp
  41a166:	pop    ebp
  41a167:	jb     0x41a0f0
  41a169:	add    BYTE PTR [ebx+0x6c],al
  41a16c:	lea    ebp,[edx]
  41a16e:	pop    ebp
  41a16f:	ins    BYTE PTR es:[edi],dx
  41a170:	mov    cl,0x49
  41a172:	cmp    eax,0x3efff750
  41a177:	jne    0x41a14f
  41a179:	inc    si
  41a17b:	push   esp
  41a17c:	bnd jmp 0x41a1b1
  41a17f:	and    dl,dh
  41a181:	pop    ecx
  41a182:	imul   esp,DWORD PTR [esi-0x29],0x58
  41a186:	outs   dx,DWORD PTR ds:[esi]
  41a187:	imul   eax,DWORD PTR [eax],0x0
	...
  41a1ad:	add    BYTE PTR [eax],al
  41a1af:	add    ch,cl
  41a1b1:	sub    eax,0xfabe6c5d
  41a1b6:	ds push esp
  41a1b8:	lea    ebp,ds:0x5b93626c
  41a1be:	add    BYTE PTR [ebx-0x73],dl
  41a1c1:	addr16 je 0x41a23b
  41a1c4:	dec    ebx
  41a1c5:	push   ecx
  41a1c6:	push   edx
  41a1c7:	arpl   WORD PTR [edi+0x696d67ef],cx
  41a1cd:	push   ecx
  41a1ce:	push   0x33f18851
  41a1d3:	inc    ebx
  41a1d4:	ja     0x41a1c9
  41a1d6:	dec    esp
  41a1d7:	je     0x41a23f
  41a1d9:	lock das 
  41a1db:	push   eax
  41a1dc:	imul   ebp,DWORD PTR [edx+0x152c4821],0x5d
  41a1e3:	pop    esp
  41a1e4:	sbb    dh,bl
  41a1e6:	das    
  41a1e7:	ins    DWORD PTR es:[edi],dx
  41a1e8:	sbb    al,0xc6
  41a1ea:	pop    edi
  41a1eb:	pop    edi
  41a1ec:	sbb    DWORD PTR [edx-0x41da92d0],esi
  41a1f2:	dec    esp
  41a1f3:	pop    edi
  41a1f4:	sbb    DWORD PTR ds:0xc71f4538,edx
  41a1fa:	pop    edi
  41a1fb:	pop    edi
  41a1fc:	test   DWORD PTR [edx+0x6d1b3f40],0xe5fe4135
  41a206:	pop    esi
  41a207:	inc    esi
  41a208:	pop    ss
  41a209:	and    BYTE PTR [ecx],0x38
  41a20c:	sub    esp,DWORD PTR [edx-0x331a92b1]
  41a212:	push   eax
  41a213:	jno    0x41a215
	...
  41a239:	add    BYTE PTR [eax],al
  41a23b:	add    dl,ah
  41a23d:	into   
  41a23e:	arpl   WORD PTR [edi-0x21],bx
  41a241:	xchg   ebp,eax
  41a242:	xor    al,BYTE PTR [ecx-0x61]
  41a245:	lahf   
  41a246:	fs ins BYTE PTR es:[edi],dx
  41a248:	test   eax,0x97004f91
  41a24d:	ja     0x41a2b4
  41a24f:	ins    DWORD PTR es:[edi],dx
  41a250:	test   eax,0x88516591
  41a255:	jno    0x41a288
  41a257:	inc    ebx
  41a258:	jg     0x41a2cd
  41a25a:	dec    esi
  41a25b:	je     0x41a20b
  41a25d:	jbe    0x41a28c
  41a25f:	push   eax
  41a260:	dec    ebx
  41a261:	xchg   esp,eax
  41a262:	cmp    al,0x6c
  41a264:	je     0x41a26f
  41a266:	dec    ecx
  41a267:	outs   dx,DWORD PTR gs:[esi]
  41a269:	pop    edx
  41a26a:	sub    al,BYTE PTR [ebp-0x65]
  41a26d:	dec    esp
  41a26e:	xor    eax,DWORD PTR [edi+0x78]
  41a271:	cmp    eax,0x597f4a44
  41a276:	pop    es
  41a277:	xor    al,0x59
  41a279:	ss out 0x2f,eax
  41a27c:	mov    ?,WORD PTR ds:0x356c6646
  41a282:	sbb    al,BYTE PTR [edi-0x7c]
  41a285:	pop    ecx
  41a286:	sub    al,0x30
  41a288:	or     bh,BYTE PTR [ebx+edx*1]
  41a28b:	imul   ecx,DWORD PTR ds:0xff24375d,0x4b69132f
  41a295:	sub    bl,BYTE PTR gs:[ecx+0x17]
  41a299:	sub    al,0x25
  41a29b:	cmp    bl,bh
  41a29d:	or     BYTE PTR [ebx],dl
  41a29f:	push   edi
	...
  41a2c8:	and    bh,dh
  41a2ca:	add    ah,BYTE PTR [ebp-0x1]
  41a2cd:	or     BYTE PTR [edx-0x29c31a9e],bh
  41a2d3:	fs stc 
  41a2d5:	sub    esi,DWORD PTR [ebx-0x25d820b7]
  41a2db:	pop    ebx
  41a2dc:	or     eax,0x1a2f9761
  41a2e1:	or     DWORD PTR [edx-0x41c3129e],ebx
  41a2e7:	fldcw  WORD PTR fs:[ebx]
  41a2ea:	mov    ecx,DWORD PTR [ecx-0x49]
  41a2ed:	sub    BYTE PTR [edx-0x489e7aa5],bl
  41a2f3:	add    ebx,DWORD PTR [edx-0x49a872ca]
  41a2f9:	sub    BYTE PTR [ecx-0x6cb07898],bl
  41a2ff:	fs call 0x65:0x7b2ba531
  41a307:	mov    ebp,0x7a6e4e48
  41a30c:	pushf  
  41a30d:	data16 ins BYTE PTR es:[edi],dx
  41a30f:	push   ebp
  41a310:	jb     0x41a34d
  41a312:	inc    esp
  41a313:	dec    eax
  41a314:	xchg   ebx,eax
  41a315:	xor    DWORD PTR [eax+0x48],edx
  41a318:	xchg   ebx,eax
  41a319:	xor    DWORD PTR [eax],eax
  41a31b:	pop    ecx
  41a31c:	outs   dx,BYTE PTR ds:[esi]
  41a31d:	cmp    eax,0x371fe968
  41a322:	jno    0x41a359
  41a324:	outs   dx,BYTE PTR ds:[esi]
  41a325:	xor    eax,0x6617096c
  41a32a:	je     0x41a36d
	...
  41a354:	dec    edi
  41a355:	dec    ebp
  41a356:	pop    edi
  41a357:	sbb    eax,0xd6d4f26
  41a35c:	and    ebp,DWORD PTR [edx]
  41a35e:	jb     0x41a349
  41a360:	pop    esp
  41a361:	pop    eax
  41a362:	addr16 adc eax,0xd2e3832
  41a368:	es cmp eax,0x3a5e1d00
  41a36e:	addr16 or ch,ah
  41a371:	mul    BYTE PTR [ebx+0x8]
  41a374:	and    ecx,DWORD PTR [ecx]
  41a376:	pop    esp
  41a377:	mov    cl,0x1f
  41a379:	cmp    BYTE PTR [esi+ecx*8+0x1e],dh
  41a37d:	ds cs int 0xe7
  41a381:	cmp    al,0x0
  41a383:	lods   eax,DWORD PTR ds:[esi]
  41a384:	adc    dh,BYTE PTR ds:0x4f00ba5f
  41a38a:	pop    eax
  41a38b:	cdq    
  41a38c:	and    al,0xf8
  41a38e:	call   DWORD PTR [edx+eax*1-0x5f45a0cb]
  41a395:	dec    ebx
  41a396:	pop    eax
  41a397:	mov    ecx,0xbcfffd6c
  41a39c:	sub    BYTE PTR [esp+ebp*2],0x8c
  41a3a0:	pop    esi
  41a3a1:	sub    al,0x6c
  41a3a3:	jge    0x41a354
  41a3a5:	or     DWORD PTR [eax+eax*1-0x5f],ebx
  41a3a9:	gs je  0x41a411
  41a3ac:	(bad)  
  41a3ad:	sub    eax,0x31bd616e
  41a3b2:	jb     0x41a3e2
  41a3b4:	jp     0x41a3df
  41a3b6:	ins    BYTE PTR es:[edi],dx
	...
  41a3df:	add    BYTE PTR [esi-0x709c9ea5],al
  41a3e5:	daa    
  41a3e6:	je     0x41a45b
  41a3e8:	jg     0x41a445
  41a3ea:	jbe    0x41a451
  41a3ec:	sbb    BYTE PTR [esi+0x2e],0x78
  41a3f0:	ja     0x41a41b
  41a3f2:	add    BYTE PTR [esp+ecx*4+0x60],bl
  41a3f6:	ins    BYTE PTR es:[edi],dx
  41a3f7:	sbb    BYTE PTR gs:[eax+0x6c],ah
  41a3fb:	ins    BYTE PTR es:[edi],dx
  41a3fc:	adc    esp,edi
  41a3fe:	ja     0x41a46d
  41a400:	push   esi
  41a401:	or     eax,0x614c6f4f
  41a406:	jae    0x41a469
  41a408:	push   eax
  41a409:	sub    al,0x5c
  41a40b:	inc    esi
  41a40c:	dec    ebx
  41a40d:	sub    DWORD PTR [ecx+0x5a],esp
  41a410:	cmp    ebp,DWORD PTR [ecx]
  41a412:	ins    BYTE PTR es:[edi],dx
  41a413:	popa   
  41a414:	mov    ds:0x8e666afd,al
  41a419:	popa   
  41a41a:	pop    ebp
  41a41b:	jb     0x41a46c
  41a41d:	stc    
  41a41e:	inc    ebp
  41a41f:	imul   edx,DWORD PTR [esi-0x7996a5d5],0xa1205d64
  41a429:	fs gs movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41a42d:	pop    esp
  41a42e:	add    BYTE PTR [ecx+0x74],cl
  41a431:	pop    ebp
  41a432:	je     0x41a495
  41a434:	xchg   BYTE PTR [ebx+ebx*2+0x44],ah
  41a438:	mov    ebx,DWORD PTR [esi+0x0]
  41a43b:	dec    eax
  41a43c:	add    eax,0xff00745d
  41a441:	pop    esp
  41a442:	popa   
  41a443:	jb     0x41a445
	...
  41a469:	add    BYTE PTR [eax],al
  41a46b:	add    BYTE PTR [edx],ah
  41a46d:	clc    
  41a46e:	pop    esp
  41a46f:	jae    0x41a4bc
  41a471:	lahf   
  41a472:	add    DWORD PTR [eax-0x4c],edx
  41a475:	mov    al,ds:0x95790055
  41a47a:	pop    esi
  41a47b:	ins    DWORD PTR es:[edi],dx
  41a47c:	lahf   
  41a47d:	lea    esp,[ecx]
  41a47f:	inc    esp
  41a480:	mov    ds:0x6e510140,al
  41a485:	inc    eax
  41a486:	push   edi
  41a487:	arpl   WORD PTR [ecx+0x12],di
  41a48a:	cmp    BYTE PTR [edi+0x7b],dh
  41a48d:	dec    ebp
  41a48e:	add    al,0x51
  41a490:	pushaw 
  41a492:	pop    edx
  41a493:	arpl   WORD PTR [ecx-0x3c],bx
  41a496:	cmp    DWORD PTR [ebp+0x58],ebp
  41a499:	push   es
  41a49a:	add    al,0x51
  41a49c:	outs   dx,BYTE PTR ds:[esi]
  41a49d:	add    BYTE PTR [edx+0x63],bl
  41a4a0:	pop    ecx
  41a4a1:	or     al,0x35
  41a4a3:	jno    0x41a4d3
  41a4a5:	add    BYTE PTR [ecx+edx*2],al
  41a4a8:	and    BYTE PTR es:[edx+0x63],bl
  41a4ac:	cmp    esp,edx
  41a4ae:	xor    DWORD PTR [edi+0x38],ebx
  41a4b1:	pop    ds
  41a4b2:	add    al,0x51
  41a4b4:	and    BYTE PTR cs:[edx+0x63],bl
  41a4b8:	sbb    esp,ebx
  41a4ba:	xor    DWORD PTR [ebp+0x19],ebp
  41a4bd:	mov    esi,0xc62a5001
  41a4c2:	pop    ecx
  41a4c3:	add    BYTE PTR [eax],bl
  41a4c5:	or     eax,0xdfe67656
  41a4ca:	xor    eax,0x1ccfb77
  41a4cf:	dec    esp
	...
  41a4f8:	jmp    0x53cc:0xf82055de
  41a4ff:	jbe    0x41a4e7
  41a501:	jg     0x41a524
  41a503:	dec    eax
  41a504:	in     al,0x7e
  41a506:	push   ebp
  41a507:	add    bh,bh
  41a509:	rcl    BYTE PTR [esp+esi*2+0x6b],1
  41a50d:	lahf   
  41a50e:	data16 jb 0x41a4c6
  41a511:	or     DWORD PTR [ebp+edx*2+0x669a5c6b],ecx
  41a518:	mov    ecx,0x9a62a309
  41a51d:	cmp    eax,0x37a834c7
  41a522:	jge    0x41a58a
  41a524:	cdq    
  41a525:	jmp    0x36dc07c0
  41a52a:	out    0x3f,eax
  41a52c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a52d:	ss jae 0x41a553
  41a530:	call   0x737:0x6856592c
  41a537:	xor    al,0x5e
  41a539:	aaa    
  41a53a:	pop    ebx
  41a53b:	add    al,0x97
  41a53d:	sub    BYTE PTR [edx+0x58],bl
  41a540:	sub    edx,DWORD PTR [esi+0x4c]
  41a543:	push   edx
  41a544:	pop    ebp
  41a545:	sub    al,0x39
  41a547:	and    al,0x7b
  41a549:	sub    BYTE PTR [ebx],bh
  41a54b:	pop    esp
  41a54c:	dec    ebx
  41a54d:	push   ebp
  41a54e:	dec    eax
  41a54f:	push   ebx
  41a550:	aaa    
  41a551:	jmp    0x3b7b0e8f
  41a556:	add    al,0x52
  41a558:	imul   ebx,DWORD PTR [ebp+0x10],0x54
	...
  41a584:	sub    BYTE PTR [ecx],cl
  41a586:	and    eax,0x34e8fb38
  41a58b:	gs sbb eax,0x17650630
  41a591:	xor    bh,cl
  41a593:	add    ecx,DWORD PTR ds:0xa24175d
  41a599:	xor    dl,ah
  41a59b:	pusha  
  41a59c:	adc    al,0x33
  41a59e:	ret    
  41a59f:	push   0x57cd08f9
  41a5a4:	(bad)  [eax+eax*8]
  41a5a7:	push   edx
  41a5a8:	xlat   BYTE PTR ds:[ebx]
  41a5a9:	repnz mov edx,0x9b08df4b
  41a5af:	inc    ecx
  41a5b0:	fdiv   DWORD PTR [eax+eax*1]
  41a5b3:	lds    esi,FWORD PTR [ebx-0x6244afc3]
  41a5b9:	xor    al,0x66
  41a5bb:	leave  
  41a5bc:	jns    0x41a5f2
  41a5be:	xchg   bp,ax
  41a5c0:	xchg   ebp,eax
  41a5c1:	bound  esi,QWORD PTR [edx-0x74]
  41a5c4:	dec    eax
  41a5c5:	repz arpl WORD PTR [eax-0x74d1f68c],cx
  41a5cc:	js     0x41a606
  41a5ce:	add    BYTE PTR [edx+0x7e742b6d],bl
  41a5d4:	outs   dx,DWORD PTR ds:[esi]
  41a5d5:	aaa    
  41a5d6:	arpl   WORD PTR [ebp+0x3d46598a],cx
  41a5dc:	aas    
  41a5dd:	gs inc edx
  41a5df:	push   esp
  41a5e0:	imul   esi,DWORD PTR ds:0x592f5d63,0x72
  41a5e7:	add    BYTE PTR ds:[eax],al
	...
  41a60e:	add    BYTE PTR [eax],al
  41a610:	jl     0x41a63d
  41a612:	and    BYTE PTR [edi],ch
  41a614:	adc    ebx,DWORD PTR [ecx+0x5c]
  41a617:	sub    al,0x66
  41a619:	sub    ch,BYTE PTR [esi-0x17]
  41a61c:	jns    0x41a652
  41a61e:	xor    ax,0x6214
  41a622:	jb     0x41a630
  41a624:	jnp    0x41a66d
  41a626:	jae    0x41a635
  41a628:	sub    esp,DWORD PTR [esi]
  41a62a:	je     0x41a665
  41a62c:	stc    
  41a62d:	xor    ebp,DWORD PTR [ebp+0x7]
  41a630:	addr16 pop eax
  41a632:	ins    DWORD PTR es:[edi],dx
  41a633:	psllq  mm7,QWORD PTR [ebx]
  41a636:	pop    edi
  41a637:	sti    
  41a638:	and    esp,DWORD PTR [ebp+0x42]
  41a63b:	cld    
  41a63c:	and    al,0x35
  41a63e:	arpl   bp,si
  41a640:	cmp    BYTE PTR [edi],dh
  41a642:	ins    DWORD PTR es:[edi],dx
  41a643:	(bad)  
  41a644:	out    dx,al
  41a645:	call   0xe97a5b8f
  41a64a:	inc    eax
  41a64b:	lds    eax,FWORD PTR [edi]
  41a64d:	outs   dx,BYTE PTR es:[esi]
  41a64f:	aad    0x2c
  41a651:	dec    esi
  41a652:	pop    edi
  41a653:	add    BYTE PTR [ebx+0x63],bh
  41a656:	add    BYTE PTR [ebx+0x7d],dl
  41a659:	sub    esi,DWORD PTR [edi+esi*2+0x13]
  41a65d:	pop    ebx
  41a65e:	popa   
  41a65f:	pop    esp
  41a660:	lock cld 
  41a662:	inc    ebp
  41a663:	push   esp
  41a664:	repnz lock inc ecx
  41a667:	jne    0x41a627
  41a669:	pusha  
  41a66a:	popa   
  41a66b:	je     0x41a67f
  41a66d:	std    
  41a66e:	jno    0x41a6df
  41a670:	popf   
  41a671:	and    BYTE PTR es:[esi+0x0],al
	...
  41a699:	add    BYTE PTR [eax],al
  41a69b:	add    BYTE PTR [esi-0x6db0a404],dh
  41a6a1:	pop    eax
  41a6a2:	outs   dx,DWORD PTR gs:[esi]
  41a6a4:	int3   
  41a6a5:	pop    ebx
  41a6a6:	add    BYTE PTR [ebx+0x7d],dl
  41a6a9:	es je  0x41a723
  41a6ac:	sbb    DWORD PTR [ebx+0x61],0x5c
  41a6b0:	and    BYTE PTR [eax+0x6c],bl
  41a6b3:	ins    BYTE PTR es:[edi],dx
  41a6b4:	xchg   edi,eax
  41a6b5:	popa   
  41a6b6:	push   eax
  41a6b7:	jb     0x41a6d6
  41a6b9:	pop    esi
  41a6ba:	data16 and BYTE PTR [ecx],dh
  41a6bd:	pop    esi
  41a6be:	data16 je 0x41a6d6
  41a6c1:	sub    al,0x72
  41a6c3:	gs pop esi
  41a6c5:	dec    ebx
  41a6c6:	jno    0x41a734
  41a6c8:	jle    0x41a6f2
  41a6ca:	je     0x41a71c
  41a6cc:	push   eax
  41a6cd:	pop    esi
  41a6ce:	imul   esp,DWORD PTR [esi-0x7e],0x46
  41a6d2:	push   esp
  41a6d3:	push   eax
  41a6d4:	xchg   edx,eax
  41a6d5:	dec    ecx
  41a6d6:	ins    BYTE PTR es:[edi],dx
  41a6d7:	imul   eax,DWORD PTR [edi+0x5f],0x555d5c74
  41a6de:	je     0x41a749
  41a6e0:	cmp    eax,0x61006f5f
  41a6e5:	pop    esi
  41a6e6:	data16 je 0x41a75e
  41a6e9:	sub    esi,DWORD PTR [edx+0x65]
  41a6ec:	mov    cs,WORD PTR [edx+0x50]
  41a6ef:	inc    esi
  41a6f0:	mov    dh,0xfc
  41a6f2:	dec    DWORD PTR [ebx+0x4b]
  41a6f5:	rcl    DWORD PTR [eax+0x74],1
  41a6f8:	clc    
  41a6f9:	les    edx,FWORD PTR [eax+0x71]
  41a6fc:	loop   0x41a6d4
  41a6fe:	pop    ebx
  41a6ff:	inc    esi
	...
  41a728:	loop   0x41a6f7
  41a72a:	data16 add BYTE PTR [eax-0x479caa37],bl
  41a731:	pop    dx
  41a733:	jb     0x41a780
  41a735:	jns    0x41a792
  41a737:	jno    0x41a6f0
  41a739:	xchg   ecx,eax
  41a73a:	pop    ebp
  41a73b:	ins    BYTE PTR es:[edi],dx
  41a73c:	(bad)
  41a740:	dec    ebx
  41a741:	or     BYTE PTR [ecx+0x6b],0xa7
  41a745:	mov    dl,0x2d
  41a747:	push   ecx
  41a748:	sahf   
  41a749:	xchg   ecx,eax
  41a74a:	dec    edi
  41a74b:	je     0x41a6da
  41a74d:	sahf   
  41a74e:	xor    DWORD PTR [eax],eax
  41a750:	test   DWORD PTR [ecx+0x59796d53],edx
  41a756:	pop    eax
  41a757:	arpl   WORD PTR [eax+0x10],di
  41a75a:	push   0x39b25f5f
  41a75f:	addr16 pop eax
  41a761:	push   esi
  41a762:	pop    ebx
  41a763:	jb     0x41a7b7
  41a765:	sbb    BYTE PTR [eax+0x5f],ch
  41a768:	push   edi
  41a769:	mov    dl,0x62
  41a76b:	fs das 
  41a76d:	add    al,0x62
  41a76f:	imul   ebp,DWORD PTR [ebp+0x46],0x214b7461
  41a776:	push   ebp
  41a777:	sub    BYTE PTR [bp+di],bl
  41a77a:	push   ds
  41a77b:	sub    bl,BYTE PTR fs:[esi]
  41a77e:	add    al,0x5c
  41a780:	not    DWORD PTR [edx+edx*2]
  41a783:	bound  esp,QWORD PTR [eax+esi*8]
  41a786:	aaa    
  41a787:	push   eax
  41a788:	dec    ebx
  41a789:	and    ebx,DWORD PTR [ebx+0x66]
	...
  41a7b4:	(bad)  
  41a7b5:	mov    esi,0xde67262
  41a7ba:	cmp    BYTE PTR [ebx-0x7],dh
  41a7bd:	or     cl,cl
  41a7bf:	pop    esp
  41a7c0:	add    eax,0xec03b755
  41a7c5:	ficom  DWORD PTR cs:[edi-0x4]
  41a7c9:	sub    al,0xbb
  41a7cb:	push   ebx
  41a7cc:	hlt    
  41a7cd:	xor    al,0xcf
  41a7cf:	add    edi,edx
  41a7d1:	das    
  41a7d2:	lds    edx,FWORD PTR [edi-0x42]
  41a7d5:	sub    BYTE PTR [ecx-0x41a5609a],bh
  41a7db:	push   edi
  41a7dc:	xchg   esp,eax
  41a7dd:	pop    ebp
  41a7de:	lods   eax,DWORD PTR ds:[esi]
  41a7df:	inc    ebp
  41a7e0:	test   DWORD PTR [ebp-0x49],edx
  41a7e3:	add    ecx,DWORD PTR [edx-0x579873c5]
  41a7e9:	das    
  41a7ea:	xchg   ebx,eax
  41a7eb:	pop    edx
  41a7ec:	je     0x41a81b
  41a7ee:	call   0x7940:0xe7359f62
  41a7f5:	and    al,0x8b
  41a7f7:	ins    WORD PTR es:[edi],dx
  41a7f9:	xor    eax,0x4a676280
  41a7fe:	dec    edi
  41a7ff:	popa   
  41a800:	push   0x32
  41a802:	out    0x36,eax
  41a804:	jbe    0x41a82d
  41a806:	pop    ebx
  41a807:	push   ebx
  41a808:	jl     0x41a845
  41a80a:	inc    esp
  41a80b:	sub    BYTE PTR [edx+0x2e],bh
  41a80e:	cmp    esp,DWORD PTR [ebp+0x6f]
  41a811:	inc    edi
  41a812:	and    eax,0x13591f42
  41a817:	cmp    eax,DWORD PTR [eax]
	...
  41a83d:	add    BYTE PTR [eax],al
  41a83f:	add    BYTE PTR [ebx],bh
  41a841:	xor    eax,0x3a255b40
  41a846:	out    0x33,eax
  41a848:	or     al,0x3a
  41a84a:	sbb    dl,BYTE PTR [ebx+0x36]
  41a84d:	cmp    ecx,DWORD PTR [ebx]
  41a84f:	add    al,0xf8
  41a851:	cmp    DWORD PTR [esi+edx*2],eax
  41a854:	add    eax,0x4b611428
  41a859:	push   ecx
  41a85a:	push   cs
  41a85b:	push   edi
  41a85c:	inc    DWORD PTR [edi+0x0]
  41a85f:	or     eax,0x1b003815
  41a864:	jmp    0x6744:0xebdd6d31
  41a86b:	fisttp DWORD PTR [eax+0x59]
  41a86e:	ins    DWORD PTR es:[edi],dx
  41a86f:	fisttp DWORD PTR [ecx+ecx*1]
  41a872:	dec    eax
  41a873:	mov    esi,0xc84e34fd
  41a878:	repz sub DWORD PTR [eax],eax
  41a87b:	cdq    
  41a87c:	mov    eax,ds:0x7be9743b
  41a881:	cmp    BYTE PTR [ebx-0x45],ah
  41a884:	xchg   edx,eax
  41a885:	pop    esi
  41a886:	imul   ecx,DWORD PTR [eax+ecx*2+0x7d9a5f59],0x34
  41a88e:	ins    DWORD PTR es:[edi],dx
  41a88f:	fwait
  41a890:	jl     0x41a89b
  41a892:	dec    eax
  41a893:	jle    0x41a912
  41a895:	xor    eax,0x4f769044
  41a89a:	pop    edi
  41a89b:	mov    WORD PTR [ebx+0x9],gs
  41a89e:	push   ecx
  41a89f:	xchg   BYTE PTR [edx+0x35],ch
  41a8a2:	jne    0x41a82c
	...
  41a8cc:	sahf   
  41a8cd:	sub    bl,BYTE PTR [edx+ebp*1-0x70]
  41a8d1:	daa    
  41a8d2:	inc    sp
  41a8d4:	push   0x48
  41a8d6:	jae    0x41a931
  41a8d8:	daa    
  41a8d9:	pop    eax
  41a8da:	ins    DWORD PTR es:[edi],dx
  41a8db:	inc    edi
  41a8dc:	jnp    0x41a912
  41a8de:	pop    edi
  41a8df:	cmp    ebp,DWORD PTR [edx+0x5d]
  41a8e2:	inc    edi
  41a8e3:	dec    edi
  41a8e4:	sbb    ebp,DWORD PTR [edx]
  41a8e6:	jb     0x41a92f
  41a8e8:	sub    dh,BYTE PTR ds:0x2c1d195c
  41a8ee:	data16 adc BYTE PTR [ebx],dl
  41a8f1:	sub    dh,BYTE PTR [ecx-0x17]
  41a8f4:	pop    ebp
  41a8f5:	sub    al,0x66
  41a8f7:	sbb    eax,0x4725df8
  41a8fc:	arpl   WORD PTR [edi+0x54],ax
  41a8ff:	add    BYTE PTR [edx],dh
  41a901:	cli    
  41a902:	pop    esp
  41a903:	jb     0x41a954
  41a905:	icebp  
  41a906:	ds dec edi
  41a908:	pusha  
  41a909:	dec    eax
  41a90a:	inc    esi
  41a90b:	push   esp
  41a90c:	push   edx
  41a90d:	icebp  
  41a90e:	dec    esi
  41a90f:	imul   ecx,DWORD PTR [esi-0x65ff90d8],0x72746f62
  41a919:	clc    
  41a91a:	outs   dx,BYTE PTR ds:[esi]
  41a91b:	gs jo  0x41a927
  41a91e:	push   eax
  41a91f:	outs   dx,DWORD PTR ds:[esi]
  41a920:	nop
  41a921:	dec    ebp
  41a922:	add    BYTE PTR [eax-0x23],dl
  41a925:	or     BYTE PTR [eax+0x74],dl
  41a928:	or     dh,bh
  41a92a:	call   DWORD PTR [edx-0x2f]
  41a92d:	add    BYTE PTR [eax],al
  41a92f:	jo     0x41a931
	...
  41a955:	add    BYTE PTR [eax],al
  41a957:	add    al,dl
  41a959:	pop    edi
  41a95a:	imul   dx,si,0x6f29
  41a95f:	cs mov edx,0xe6006c61
  41a965:	dec    edx
  41a966:	push   esp
  41a967:	push   eax
  41a968:	add    cl,BYTE PTR [edx+0x78]
  41a96b:	jo     0x41a943
  41a96d:	pop    edi
  41a96e:	jb     0x41a9d5
  41a970:	or     BYTE PTR [eax],0x4f
  41a973:	outs   dx,DWORD PTR ds:[esi]
  41a974:	int3   
  41a975:	dec    esp
  41a976:	jae    0x41a9d9
  41a978:	nop
  41a979:	pop    esp
  41a97a:	pop    esp
  41a97b:	inc    esi
  41a97c:	push   ds
  41a97d:	cmc    
  41a97e:	pop    ds
  41a97f:	inc    ebp
  41a980:	jp     0x41a9d7
  41a982:	ins    BYTE PTR es:[edi],dx
  41a983:	outs   dx,DWORD PTR ds:[esi]
  41a984:	jo     0x41a9e2
  41a986:	jb     0x41a9e4
  41a988:	sbb    al,0xf9
  41a98a:	dec    edi
  41a98b:	and    BYTE PTR [edi+0x4d],ch
  41a98e:	jo     0x41a9fc
  41a990:	add    eax,0x46726153
  41a995:	cli    
  41a996:	push   0x72
  41a998:	pop    ecx
  41a999:	push   esi
  41a99a:	jo     0x41a9fd
  41a99c:	push   ecx
  41a99d:	pop    esp
  41a99e:	pop    esp
  41a99f:	dec    ebp
  41a9a0:	dec    ebx
  41a9a1:	in     al,dx
  41a9a2:	inc    edx
  41a9a3:	push   esp
  41a9a4:	and    al,0xbb
  41a9a6:	push   ebp
  41a9a7:	inc    edx
  41a9a8:	sub    al,al
  41a9aa:	push   ss
  41a9ab:	xor    bh,BYTE PTR [ecx]
  41a9ad:	jbe    0x41a9b0
  41a9af:	inc    edx
  41a9b0:	idiv   BYTE PTR [ebp-0x411a92b3]
  41a9b6:	add    DWORD PTR [ecx-0x24],edx
  41a9b9:	retf   
  41a9ba:	dec    ebp
  41a9bb:	jne    0x41a9bd
	...
  41a9e1:	add    BYTE PTR [eax],al
  41a9e3:	add    dl,ch
  41a9e5:	fistp  WORD PTR [esi+0x5c]
  41a9e8:	add    eax,0xe20317e
  41a9ed:	ficom  DWORD PTR [ecx+0x6c]
  41a9f0:	fdivr  QWORD PTR [edi+0x5e]
  41a9f3:	jb     0x41a99c
  41a9f5:	mov    ds:0xc9a56d53,al
  41a9fa:	push   ebp
  41a9fb:	arpl   WORD PTR [eax-0x47a0ce4e],di
  41aa01:	lahf   
  41aa02:	push   eax
  41aa03:	ins    DWORD PTR es:[edi],dx
  41aa04:	cdq    
  41aa05:	xchg   BYTE PTR [ecx],al
  41aa07:	push   eax
  41aa08:	stos   BYTE PTR es:[edi],al
  41aa09:	lahf   
  41aa0a:	push   esp
  41aa0b:	jne    0x41a9b1
  41aa0d:	mov    al,ds:0x4292545d
  41aa12:	pop    esi
  41aa13:	add    BYTE PTR [ebx+0x4b74548b],dl
  41aa19:	pop    ax
  41aa1b:	bound  edi,QWORD PTR gs:[ecx+eax*1]
  41aa1f:	push   eax
  41aa20:	pop    esp
  41aa21:	pusha  
  41aa22:	push   eax
  41aa23:	add    BYTE PTR [edx+0x7274594c],dl
  41aa29:	push   ecx
  41aa2a:	pop    eax
  41aa2b:	push   eax
  41aa2c:	push   0x56
  41aa2e:	pop    esp
  41aa2f:	add    BYTE PTR [ebp+0x325153fe],al
  41aa35:	neg    BYTE PTR [esi+ebp*1+0x43]
  41aa39:	inc    ebp
  41aa3a:	pop    eax
  41aa3b:	add    BYTE PTR [edi],dl
  41aa3d:	in     al,0x55
  41aa3f:	addr16 and al,0x9
  41aa42:	or     BYTE PTR [eax+0x28],dl
  41aa45:	clc    
  41aa46:	out    0x19,al
	...
  41aa70:	and    al,0x2b
  41aa72:	add    BYTE PTR [edi+esi*8],al
  41aa75:	push   edx
  41aa76:	or     BYTE PTR [edx+0x7],bl
  41aa79:	inc    edx
  41aa7a:	adc    bl,BYTE PTR [edi+0x27]
  41aa7d:	dec    eax
  41aa7e:	push   cs
  41aa7f:	pop    edx
  41aa80:	in     eax,0x31
  41aa82:	push   cs
  41aa83:	sub    BYTE PTR [edx],bl
  41aa85:	es cli 
  41aa87:	push   esp
  41aa88:	in     al,0x2b
  41aa8a:	aad    0x54
  41aa8c:	dec    ebx
  41aa8d:	pop    ebp
  41aa8e:	mov    edx,0xc037da5e
  41aa93:	pop    eax
  41aa94:	in     eax,0x37
  41aa96:	out    0x34,eax
  41aa98:	fisub  WORD PTR [edx]
  41aa9a:	mov    ebx,0xc437a450
  41aa9f:	daa    
  41aaa0:	xchg   ebp,eax
  41aaa1:	sub    ch,al
  41aaa3:	aas    
  41aaa4:	mov    esp,0x9a27c42e
  41aaa9:	and    al,0x8a
  41aaab:	dec    esi
  41aaac:	cdq    
  41aaad:	and    al,0xa5
  41aaaf:	sub    ecx,DWORD PTR [ebx+0x46]
  41aab2:	xchg   BYTE PTR [ecx-0x53],bl
  41aab5:	xor    BYTE PTR [esi+0x7b287b23],al
  41aabb:	pop    ebx
  41aabc:	dec    ebx
  41aabd:	push   esp
  41aabe:	mov    ecx,DWORD PTR [edi+0x79]
  41aac1:	sub    BYTE PTR [ebp-0x74f664d5],ch
  41aac7:	push   esp
  41aac8:	fs xor eax,0x4135534c
  41aace:	dec    esp
  41aacf:	pop    eax
  41aad0:	dec    ebx
  41aad1:	pop    ebp
  41aad2:	sub    eax,0x30
	...
  41aafb:	add    BYTE PTR [ebx+0x57],bh
  41aafe:	push   esp
  41aaff:	push   ebx
  41ab00:	arpl   WORD PTR [ecx],cx
  41ab02:	sbb    DWORD PTR [ecx+0x3a],edx
  41ab05:	xor    DWORD PTR [edx],ebx
  41ab07:	pop    ebp
  41ab08:	aaa    
  41ab09:	and    al,0x0
  41ab0b:	pop    es
  41ab0c:	pop    es
  41ab0d:	cs ins BYTE PTR es:[edi],dx
  41ab0f:	jmp    0x1fb3d18d
  41ab14:	sub    dh,BYTE PTR [edi]
  41ab16:	add    BYTE PTR [eax+edi*8],dh
  41ab19:	and    eax,0x2e2e0772
  41ab1e:	arpl   cx,bp
  41ab20:	pop    eax
  41ab21:	pop    edx
  41ab22:	jno    0x41ab1e
  41ab24:	adc    eax,0x4705722c
  41ab29:	inc    ebx
  41ab2a:	je     0x41ab25
  41ab2c:	cmp    BYTE PTR [edx+esi*2],ch
  41ab2f:	cmc    
  41ab30:	dec    eax
  41ab31:	pop    eax
  41ab32:	ins    DWORD PTR es:[edi],dx
  41ab33:	iret   
  41ab34:	adc    al,0x34
  41ab36:	pop    edi
  41ab37:	fucomi st,st(3)
  41ab39:	pop    esp
  41ab3a:	inc    ecx
  41ab3b:	fild   DWORD PTR [edi]
  41ab3d:	es jb  0x41aaed
  41ab40:	sbb    eax,0xa79a6226
  41ab45:	xor    eax,0x279b9963
  41ab4a:	ins    BYTE PTR es:[edi],dx
  41ab4b:	rcr    BYTE PTR [ecx+0x48bb6331],0x5d
  41ab52:	inc    edx
  41ab53:	nop
  41ab54:	xchg   esp,eax
  41ab55:	push   eax
  41ab56:	addr16 (bad) 
  41ab58:	stos   DWORD PTR es:[edi],eax
  41ab59:	inc    ecx
  41ab5a:	add    BYTE PTR [ebx-0x7f96ca89],cl
	...
  41ab88:	jbe    0x41abb0
  41ab8a:	js     0x41ab63
  41ab8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab8d:	cmp    BYTE PTR [eax],al
  41ab8f:	mov    cl,0x95
  41ab91:	cmp    BYTE PTR [edi+eax*4+0x6f],dh
  41ab95:	cs arpl cx,bp
  41ab98:	cmp    edi,DWORD PTR [eax]
  41ab9a:	arpl   WORD PTR [ebx+0x7d],bx
  41ab9d:	pop    edx
  41ab9e:	imul   eax,DWORD PTR [edi+eax*2+0x59],0x5f
  41aba3:	pop    edx
  41aba4:	js     0x41abda
  41aba6:	ins    DWORD PTR es:[edi],dx
  41aba7:	pop    ebx
  41aba8:	imul   ecx,DWORD PTR [ecx],0x50
  41abab:	add    BYTE PTR ds:0x61007457,bl
  41abb1:	push   edx
  41abb2:	data16 je 0x41ac2a
  41abb5:	and    al,0x72
  41abb7:	gs ds dec eax
  41abba:	js     0x41ac2c
  41abbc:	push   ebx
  41abbd:	push   ebx
  41abbe:	inc    esp
  41abbf:	jb     0x41abfc
  41abc1:	dec    ebx
  41abc2:	popa   
  41abc3:	pop    esp
  41abc4:	push   ecx
  41abc5:	sub    BYTE PTR [edi+0x73],ch
  41abc8:	dec    ebx
  41abc9:	push   edx
  41abca:	outs   dx,BYTE PTR ds:[esi]
  41abcb:	jae    0x41ac3f
  41abcd:	loope  0x41ac0f
  41abcf:	js     0x41ab53
  41abd1:	and    al,0x6e
  41abd3:	inc    esp
  41abd4:	jo     0x41ac32
  41abd6:	jbe    0x41ac3d
  41abd8:	(bad)  
  41abda:	arpl   WORD PTR [edx+0x7b],si
  41abdd:	dec    ebx
  41abde:	popa   
  41abdf:	jae    0x41ac2d
  41abe1:	pop    edi
  41abe2:	outs   dx,DWORD PTR ds:[esi]
  41abe3:	add    BYTE PTR [eax+0x55],al
  41abe6:	pop    ebp
  41abe7:	jae    0x41ac5a
  41abe9:	dec    edx
  41abea:	imul   esi,DWORD PTR [edx+0x0],0x0
	...
  41ac12:	add    BYTE PTR [eax],al
  41ac14:	push   ss
  41ac15:	jmp    0x41ac36
  41ac17:	cmp    dl,BYTE PTR [edx-0x15]
  41ac1a:	jmp    DWORD PTR [ecx]
  41ac1c:	dec    esi
  41ac1d:	or     eax,0x49046f4f
  41ac22:	jae    0x41ac85
  41ac24:	shr    BYTE PTR [ecx],0x5c
  41ac27:	inc    ebp
  41ac28:	jmp    0x655a:0xe66e5d5c
  41ac2f:	jbe    0x41abf8
  41ac31:	or     al,0x41
  41ac33:	js     0x41abb7
  41ac35:	sub    eax,0x5580446e
  41ac3a:	jbe    0x41aca1
  41ac3c:	(bad)  
  41ac3e:	push   0x6d
  41ac40:	(bad)  
  41ac41:	or     al,0x4f
  41ac43:	add    BYTE PTR gs:[edi+0x61],0x72
  41ac48:	repnz out 0x6e,eax
  41ac4b:	gs dec ebx
  41ac4d:	push   esp
  41ac4e:	ss pop edi
  41ac50:	pop    esi
  41ac51:	dec    ebp
  41ac52:	add    al,0x50
  41ac54:	sub    dh,bl
  41ac56:	dec    esi
  41ac57:	jne    0x41ac85
  41ac59:	hlt    
  41ac5a:	pop    edi
  41ac5b:	add    BYTE PTR [edx+edx*1],dl
  41ac5e:	popa   
  41ac5f:	jno    0x41ac99
  41ac61:	call   DWORD PTR [edx+0x72]
  41ac64:	das    
  41ac65:	mov    ds:0xd19673d,al
  41ac6a:	pop    edi
  41ac6b:	je     0x41ac91
  41ac6d:	adc    al,0x49
  41ac6f:	add    al,bh
  41ac71:	mov    dh,0x5b
  41ac73:	je     0x41ac71
  41ac75:	add    BYTE PTR [edx+0x63],dl
	...
  41aca0:	pop    ds
  41aca1:	call   0x136cf4e4
  41aca6:	push   ebx
  41aca7:	idiv   WORD PTR [esi-0x32118d9e]
  41acae:	inc    eax
  41acaf:	ins    BYTE PTR es:[edi],dx
  41acb0:	jmp    0x2d67:0xe86750d2
  41acb7:	push   eax
  41acb8:	out    dx,eax
  41acb9:	outs   dx,DWORD PTR ds:[esi]
  41acba:	sub    eax,0x60c38a50
  41acbf:	ins    DWORD PTR es:[edi],dx
  41acc0:	mov    dh,0xc8
  41acc2:	dec    ebp
  41acc3:	jno    0x41ad10
  41acc5:	push   0xcd98704d
  41acca:	dec    edi
  41accb:	jbe    0x41ac7b
  41accd:	xchg   esp,eax
  41acce:	add    DWORD PTR [esi-0x69],eax
  41acd1:	xchg   edx,eax
  41acd2:	cs jno 0x41ac83
  41acd5:	xchg   esp,eax
  41acd6:	xor    ebx,DWORD PTR [edi-0x62]
  41acd9:	lea    eax,[ecx]
  41acdb:	inc    esi
  41acdc:	jg     0x41ad10
  41acde:	xor    DWORD PTR [edi+0x78],ebx
  41ace1:	xor    ecx,DWORD PTR [ebp+ebp*2+0x79]
  41ace5:	xchg   BYTE PTR [ecx],al
  41ace7:	pop    ebp
  41ace8:	test   DWORD PTR [esi],edi
  41acea:	push   ecx
  41aceb:	push   eax
  41acec:	push   0x9
  41acee:	pop    edx
  41acef:	push   ecx
  41acf0:	push   esi
  41acf1:	sub    BYTE PTR [ecx+0x60],bl
  41acf4:	dec    ebx
  41acf5:	dec    edi
  41acf6:	pop    ebx
  41acf7:	push   esp
  41acf8:	xchg   DWORD PTR [edx],esp
  41acfa:	pop    ecx
  41acfb:	pop    edi
  41acfc:	sub    bh,BYTE PTR ds:0x9345256
  41ad02:	sbb    dh,BYTE PTR ds:0x0
	...
  41ad2c:	or     eax,0x19431e5d
  41ad31:	dec    esi
  41ad32:	or     esi,DWORD PTR [esi]
  41ad34:	or     al,BYTE PTR [ecx-0x39]
  41ad37:	xor    BYTE PTR [esi],ch
  41ad39:	das    
  41ad3a:	adc    ecx,DWORD PTR [ebp-0xc]
  41ad3d:	cmp    cl,BYTE PTR [eax+ebp*1]
  41ad40:	add    eax,0xee560025
  41ad45:	push   esp
  41ad46:	sub    BYTE PTR [ecx-0x16],ah
  41ad49:	daa    
  41ad4a:	hlt    
  41ad4b:	push   ebp
  41ad4c:	(bad)  
  41ad4d:	cmp    esp,edi
  41ad4f:	xor    dh,bl
  41ad51:	cs repz dec esp
  41ad54:	add    al,0x3b
  41ad56:	int3   
  41ad57:	daa    
  41ad58:	add    eax,0xe740b75d
  41ad5d:	and    esp,ecx
  41ad5f:	push   ebp
  41ad60:	xlat   BYTE PTR ds:[ebx]
  41ad61:	push   esp
  41ad62:	mov    edx,0xba2cbf5a
  41ad67:	add    ebx,DWORD PTR [edx-0x41b03ada]
  41ad6d:	sub    BYTE PTR [ecx-0x41a570a2],bh
  41ad73:	pop    ebp
  41ad74:	lahf   
  41ad75:	push   ecx
  41ad76:	aad    0x54
  41ad78:	cdq    
  41ad79:	cs mov ebx,0xaa597f3d
  41ad7f:	push   edi
  41ad80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad81:	sub    al,0x7d
  41ad83:	dec    edi
  41ad84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad85:	pop    edx
  41ad86:	nop
  41ad87:	dec    edi
  41ad88:	push   0x6615e73a
  41ad8d:	xor    DWORD PTR [eax],eax
  41ad8f:	mov    al,BYTE PTR [eax]
	...
  41adb5:	add    BYTE PTR [eax],al
  41adb7:	add    BYTE PTR [eax-0x19],cl
  41adba:	ins    BYTE PTR es:[edi],dx
  41adbb:	jge    0x41ae39
  41adbd:	or     DWORD PTR [esi+ebp*1+0x77],ebx
  41adc1:	pop    eax
  41adc2:	ins    DWORD PTR es:[edi],dx
  41adc3:	inc    edi
  41adc4:	adc    edi,DWORD PTR [edi+ebx*2]
  41adc7:	pop    ebx
  41adc8:	and    dl,BYTE PTR [ebp+0x44]
  41adcb:	inc    eax
  41adcc:	jge    0x41adf8
  41adce:	popa   
  41adcf:	cmp    eax,0x9773b78
  41add4:	sbb    BYTE PTR [ecx],bh
  41add6:	jae    0x41ae12
  41add8:	inc    edi
  41add9:	push   ebp
  41adda:	push   ecx
  41addb:	inc    ecx
  41addc:	outs   dx,BYTE PTR ds:[esi]
  41addd:	cmp    esp,DWORD PTR [ebx+0xd]
  41ade0:	hlt    
  41ade1:	sub    DWORD PTR [ebp+edx*1+0x66],esi
  41ade5:	daa    
  41ade6:	sbb    bl,BYTE PTR gs:[ecx+0x4f1a6129]
  41aded:	push   ebp
  41adee:	push   ecx
  41adef:	adc    DWORD PTR [esi],esp
  41adf1:	cmp    esp,DWORD PTR [ebx+0x5]
  41adf4:	sbb    al,0x2a
  41adf6:	je     0x41adf5
  41adf8:	pop    ds
  41adf9:	daa    
  41adfa:	gs cli 
  41adfc:	jmp    0xe85b0ae6
  41ae01:	stc    
  41ae02:	sub    eax,0x382dca
  41ae07:	mov    ch,0xf5
  41ae09:	and    BYTE PTR [edi-0x25],bl
  41ae0c:	jae    0x41ae3b
  41ae0e:	push   ecx
  41ae0f:	int3   
  41ae10:	je     0x41ae4f
  41ae12:	addr16 iret 
  41ae14:	popa   
  41ae15:	cmp    BYTE PTR [esi],ch
  41ae17:	mov    edx,0xb5672577
	...
  41ae44:	jae    0x41ae4f
  41ae46:	pop    esp
  41ae47:	mov    edx,0x84725670
  41ae4c:	ins    BYTE PTR es:[edi],dx
  41ae4d:	pop    eax
  41ae4e:	arpl   WORD PTR [ebp-0x7991d1ac],bx
  41ae54:	cmp    eax,0xa5002f54
  41ae59:	mov    ecx,0xff04355c
  41ae5e:	ins    BYTE PTR es:[edi],dx
  41ae5f:	ins    BYTE PTR es:[edi],dx
  41ae60:	retf   
  41ae61:	std    
  41ae62:	pusha  
  41ae63:	add    dh,dl
  41ae65:	dec    esi
  41ae66:	imul   esp,DWORD PTR [esi-0x74],0xffffffe0
  41ae6a:	pusha  
  41ae6b:	inc    ebx
  41ae6c:	jg     0x41ae6b
  41ae6e:	pop    ds
  41ae6f:	push   ebx
  41ae70:	test   ebx,esp
  41ae72:	jae    0x41aeeb
  41ae74:	adc    edi,edi
  41ae76:	pusha  
  41ae77:	add    BYTE PTR [esi],dl
  41ae79:	loopne 0x41aed7
  41ae7b:	jo     0x41ae89
  41ae7d:	icebp  
  41ae7e:	outs   dx,DWORD PTR ds:[esi]
  41ae7f:	add    BYTE PTR [edi-0x5],ch
  41ae82:	imul   esp,DWORD PTR [ebp+0x13],0xfffffffd
  41ae86:	sub    eax,0xffe06a65
  41ae8b:	jb     0x41aec8
  41ae8d:	icebp  
  41ae8e:	pusha  
  41ae8f:	jae    0x41ae15
  41ae91:	in     eax,dx
  41ae92:	pop    esp
  41ae93:	je     0x41af07
  41ae95:	(bad)  
  41ae96:	fs je  0x41aee8
  41ae99:	(bad)  
  41ae9a:	sub    eax,0xffe44469
  41ae9f:	pop    ebx
  41aea0:	es loopne 0x41aeff
  41aea3:	jo     0x41aee2
  41aea5:	in     al,dx
  41aea6:	jno    0x41af0d
	...
  41aed0:	xchg   BYTE PTR [ebp+0x61],al
  41aed3:	popa   
  41aed4:	jb     0x41af15
  41aed6:	push   esp
  41aed7:	push   eax
  41aed8:	bound  ebx,QWORD PTR [esi+0x4b]
  41aedb:	inc    esi
  41aedc:	dec    BYTE PTR [edi+0x3d]
  41aedf:	push   edx
  41aee0:	out    dx,eax
  41aee1:	push   esp
  41aee2:	dec    esp
  41aee3:	gs add edi,ecx
  41aee6:	push   edx
  41aee7:	popa   
  41aee8:	lock loope 0x41aeea
  41aeeb:	dec    eax
  41aeec:	in     al,0xfb
  41aeee:	jae    0x41af51
  41aef0:	mov    dh,0xe4
  41aef2:	dec    edi
  41aef3:	popa   
  41aef4:	mov    esi,0x4b43ffe0
  41aef9:	xor    DWORD PTR ds:0x33898f5f,0x36819b00
  41af03:	jno    0x41af81
  41af05:	xor    DWORD PTR [ebx],0x64
  41af08:	dec    ebx
  41af09:	push   0x32
  41af0b:	jno    0x41af6c
  41af0d:	xchg   esp,eax
  41af0e:	and    al,0x6b
  41af10:	data16 mov ds:0x506e7156,al
  41af16:	push   edx
  41af17:	pop    edi
  41af18:	pop    esi
  41af19:	inc    ebp
  41af1a:	add    al,0x52
  41af1c:	cs cmc 
  41af1e:	cs je  0x41af47
  41af21:	out    0x28,al
  41af23:	jb     0x41af53
  41af25:	aas    
  41af26:	cmp    BYTE PTR [ebp+0x39],ch
  41af29:	stc    
  41af2a:	add    edx,DWORD PTR [eax+0x34]
  41af2d:	lock aaa 
  41af2f:	dec    esi
  41af30:	push   ss
  41af31:	sbb    eax,0x6326
	...
  41af5a:	add    BYTE PTR [eax],al
  41af5c:	sbb    DWORD PTR [edx+0xffb5147],esp
  41af62:	das    
  41af63:	je     0x41af59
  41af65:	(bad)  
  41af66:	cs ins BYTE PTR es:[edi],dx
  41af68:	dec    ebx
  41af69:	comiss xmm4,DWORD PTR [esi-0x1]
  41af6d:	mov    edx,0x1de67222
  41af72:	dec    ebp
  41af73:	pop    edi
  41af74:	fnstcw WORD PTR [ebp+0x722b6e2a]
  41af7a:	xor    esp,DWORD PTR [edi-0x20]
  41af7d:	iret   
  41af7e:	cmp    ch,BYTE PTR [ebx+ecx*2+0x7e]
  41af82:	hlt    
  41af83:	xor    DWORD PTR [ecx-0x48b9ca37],ecx
  41af89:	jb     0x41af7a
  41af8b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41af8d:	fld    DWORD PTR [ecx]
  41af8f:	dec    esi
  41af90:	xchg   DWORD PTR [edi+0x6fae742a],ecx
  41af96:	out    dx,eax
  41af97:	lods   ax,WORD PTR ds:[esi]
  41af99:	or     DWORD PTR [eax-0x7bbc88fd],edx
  41af9f:	aaa    
  41afa0:	xchg   DWORD PTR [edi],esi
  41afa2:	cmp    BYTE PTR [ecx],0x68
  41afa5:	or     DWORD PTR [edi-0x61c785de],esi
  41afab:	xor    BYTE PTR [ecx+0x2d],bh
  41afae:	out    0x56,eax
  41afb0:	jns    0x41afd7
  41afb2:	out    0x56,eax
  41afb4:	pop    edx
  41afb5:	cs jns 0x41b009
  41afb8:	jl     0x41afe0
  41afba:	dec    esp
  41afbb:	add    al,0x79
  41afbd:	and    al,0x4e
  41afbf:	cmp    BYTE PTR [eax],al
	...
  41afe5:	add    BYTE PTR [eax],al
  41afe7:	add    BYTE PTR [edi+0x2a275922],al
  41afed:	cmp    eax,0x934363e
  41aff2:	pop    ss
  41aff3:	xor    DWORD PTR [ecx],edi
  41aff5:	cmp    eax,0x2b1e54e7
  41affa:	cmp    edi,DWORD PTR [ecx]
  41affc:	add    al,0x37
  41affe:	inc    esp
  41afff:	pusha  
  41b000:	cli    
  41b001:	and    ebx,DWORD PTR [eax+edi*1]
  41b004:	and    ebp,ecx
  41b006:	cmp    BYTE PTR [ebx],ch
  41b008:	adc    eax,0x18e4192e
  41b00d:	or     ch,BYTE PTR cs:[ebp*8-0x11ceecdd]
  41b015:	and    DWORD PTR [esi*1+0x260c5c0f],eax
  41b01c:	getsec 
  41b01e:	add    BYTE PTR [edx],bh
  41b020:	call   0xe5725a79
  41b025:	and    al,ah
  41b027:	and    al,0xd7
  41b029:	and    esi,eax
  41b02b:	xor    DWORD PTR [edx-0x46d945f7],edi
  41b031:	cmp    ecx,esp
  41b033:	xor    eax,0x26b7309f
  41b038:	dec    ebx
  41b039:	dec    ebx
  41b03a:	add    BYTE PTR [ebp-0x61bf1688],bl
  41b040:	jp     0x41b09f
  41b042:	push   edx
  41b043:	mov    dh,0x84
  41b045:	or     DWORD PTR [esi-0x4b],eax
  41b048:	js     0x41b092
  41b04a:	dec    ebp
  41b04b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  41b074:	dec    eax
  41b075:	jecxz  0x41b0e6
  41b077:	fwait
  41b078:	xor    cl,BYTE PTR [ecx]
  41b07a:	pop    esp
  41b07b:	cdq    
  41b07c:	ds and al,0x66
  41b07f:	nop
  41b080:	sbb    al,0x26
  41b082:	jno    0x41b06d
  41b084:	iret   
  41b085:	cs cld 
  41b087:	fidivr WORD PTR [edx+0x1850e878]
  41b08d:	fs std 
  41b08f:	push   ecx
  41b090:	adc    edi,DWORD PTR ds:0xe5b41370
  41b096:	inc    DWORD PTR [eax-0x7d]
  41b099:	cmp    eax,0xe5b13a70
  41b09e:	sub    al,0xe9
  41b0a0:	cmp    ax,0xf370
  41b0a4:	mov    ch,0xe5
  41b0a6:	(bad)  
  41b0a7:	cmp    eax,0x8722657
  41b0ac:	dec    edi
  41b0ad:	cmp    al,0x5f
  41b0af:	packsswb mm4,mm3
  41b0b2:	arpl   WORD PTR [eax],cx
  41b0b4:	inc    ebx
  41b0b5:	or     DWORD PTR [ebp+0x3a],ebx
  41b0b8:	sub    al,0x2b
  41b0ba:	je     0x41b0ba
  41b0bc:	das    
  41b0bd:	aaa    
  41b0be:	arpl   WORD PTR ds:0xfb6338fc,bx
  41b0c4:	das    
  41b0c5:	jmp    0x3d68af1a
  41b0ca:	jne    0x41b094
  41b0cc:	sbb    ah,BYTE PTR [esi]
  41b0ce:	add    BYTE PTR [ebp+0x9743827],ch
  41b0d4:	xchg   ebx,eax
  41b0d5:	sub    dh,BYTE PTR [edx-0x3c]
	...
  41b100:	imul   edi,DWORD PTR ds:0xf4f0006d,0xecde002e
  41b10a:	outs   dx,BYTE PTR ds:[esi]
  41b10b:	je     0x41b15f
  41b10d:	inc    esp
  41b10e:	outs   dx,BYTE PTR ds:[esi]
  41b10f:	jae    0x41b0e7
  41b111:	in     al,dx
  41b112:	imul   ebp,DWORD PTR [edx+eax*1+0x56],0x5d
  41b117:	je     0x41b0d3
  41b119:	add    eax,0xf7d7704b
  41b11e:	pop    esp
  41b11f:	cs stos BYTE PTR es:[edi],al
  41b121:	pop    ecx
  41b122:	dec    ecx
  41b123:	dec    esp
  41b124:	scas   al,BYTE PTR es:[edi]
  41b125:	mul    BYTE PTR [edi+0x65]
  41b128:	mov    esi,0x626f5be1
  41b12d:	loope  0x41b19c
  41b12f:	pop    esp
  41b130:	shl    edx,1
  41b132:	push   0x63e3836d
  41b137:	add    BYTE PTR [ebp-0x1c],dh
  41b13a:	outs   dx,BYTE PTR ds:[esi]
  41b13b:	gs adc al,0xf1
  41b13e:	outs   dx,DWORD PTR ds:[esi]
  41b13f:	jae    0x41b161
  41b141:	sti    
  41b142:	outs   dx,BYTE PTR ds:[esi]
  41b143:	cs add ah,ah
  41b146:	ins    DWORD PTR es:[edi],dx
  41b147:	add    BYTE PTR [esi+0x4c],cl
  41b14a:	pop    edi
  41b14b:	gs jo  0x41b192
  41b14e:	push   esp
  41b14f:	add    BYTE PTR [ecx-0x1e],al
  41b152:	gs je  0x41b18a
  41b155:	in     al,dx
  41b156:	jno    0x41b1bd
  41b158:	dec    esi
  41b159:	dec    esp
  41b15a:	pop    edi
  41b15b:	xor    BYTE PTR gs:[esp+edx*2+0x0],al
  41b160:	pop    edi
  41b161:	push   edi
  41b162:	push   ecx
	...
  41b18b:	add    BYTE PTR [ecx+0x42],dl
  41b18e:	inc    esi
  41b18f:	push   esp
  41b190:	push   ebp
  41b191:	dec    esp
  41b192:	push   edx
  41b193:	inc    ebp
  41b194:	ds inc esi
  41b196:	ins    BYTE PTR es:[edi],dx
  41b197:	popa   
  41b198:	popa   
  41b199:	mul    BYTE PTR [eax+0x73]
  41b19c:	mov    ds,WORD PTR [ecx+0x75]
  41b19f:	jo     0x41b128
  41b1a1:	inc    ecx
  41b1a2:	bound  ecx,QWORD PTR gs:[ebx+0x76]
  41b1a6:	cmp    al,BYTE PTR [ecx-0x77]
  41b1a9:	adc    DWORD PTR [esi+0x32],eax
  41b1ac:	mov    BYTE PTR [edx-0x4d8cd4bd],dh
  41b1b2:	cld    
  41b1b3:	xor    esi,DWORD PTR [esi-0x52]
  41b1b6:	inc    esp
  41b1b7:	aas    
  41b1b8:	mov    BYTE PTR [ebp-0x3272bec1],ch
  41b1be:	lock xor ebx,DWORD PTR [edx+0x61]
  41b1c2:	repz xor ecx,DWORD PTR [esi+0x3445f6d4]
  41b1c9:	xlat   BYTE PTR ds:[ebx]
  41b1ca:	idiv   BYTE PTR [edx+0x4b]
  41b1cd:	xchg   ebx,eax
  41b1ce:	dec    esi
  41b1cf:	inc    esi
  41b1d0:	xchg   edi,eax
  41b1d1:	xchg   edi,eax
  41b1d2:	inc    esp
  41b1d3:	push   edx
  41b1d4:	mov    ss,WORD PTR [esi+0x336a6c42]
  41b1da:	xor    ah,BYTE PTR [ebx+0x58]
  41b1dd:	inc    esi
  41b1de:	pop    eax
  41b1df:	ja     0x41b23c
  41b1e1:	inc    ebp
  41b1e2:	push   eax
  41b1e3:	addr16 sub esi,esi
  41b1e6:	ss aaa 
  41b1e8:	push   es
  41b1e9:	loope  0x41b1df
  41b1eb:	xor    bh,BYTE PTR [esi-0x4c]
  41b1ee:	cli    
  41b1ef:	sub    al,BYTE PTR [eax]
	...
  41b215:	add    BYTE PTR [eax],al
  41b217:	add    BYTE PTR [esi],al
  41b219:	mov    cl,0xef
  41b21b:	xor    DWORD PTR [esi-0x52],esi
  41b21e:	hlt    
  41b21f:	xor    dl,BYTE PTR [ebp+ebp*4+0x3f]
  41b223:	inc    ecx
  41b224:	pop    esp
  41b225:	test   eax,0xaa5742ee
  41b22a:	out    dx,eax
  41b22b:	xor    cl,BYTE PTR ds:0x3834f1da
  41b231:	aam    0x40
  41b233:	jnp    0x41b280
  41b235:	scas   eax,DWORD PTR es:[edi]
  41b236:	sub    dh,BYTE PTR [ecx-0x1a]
  41b239:	pop    es
  41b23a:	cmp    BYTE PTR [eax-0x28],dh
  41b23d:	mov    bl,0x33
  41b23f:	jno    0x41b26e
  41b241:	or     DWORD PTR [esi],ebp
  41b243:	addr16 dec ebx
  41b245:	or     esi,ebx
  41b247:	sub    bl,dl
  41b249:	and    eax,0xdfbb37c5
  41b24e:	mov    edi,0xa509a42d
  41b253:	push   edi
  41b254:	fwait
  41b255:	push   edi
  41b256:	(bad)  
  41b257:	cmp    cl,BYTE PTR [eax+ebp*1+0x277531c4]
  41b25e:	mov    ebx,0x93474b33
  41b263:	push   ebx
  41b264:	jge    0x41b286
  41b266:	mov    al,ds:0x9926a622
  41b26b:	in     eax,dx
  41b26c:	jne    0x41b29a
  41b26e:	out    0x5f,eax
  41b270:	cdq    
  41b271:	and    DWORD PTR [eax-0x69a399d3],eax
  41b277:	and    eax,0x2c89df77
	...
  41b2a4:	jo     0x41b2af
  41b2a6:	test   DWORD PTR [eax],esi
  41b2a8:	pop    edx
  41b2a9:	cld    
  41b2aa:	mov    esp,0xe71d6727
  41b2af:	dec    ebp
  41b2b0:	jp     0x41b30e
  41b2b2:	ds dec ebx
  41b2b4:	xor    eax,0xd045b22
  41b2b9:	pop    esp
  41b2ba:	cmp    bl,BYTE PTR [ebp+0x1a]
  41b2bd:	and    DWORD PTR [eax+edi*1],edi
  41b2c0:	daa    
  41b2c1:	and    BYTE PTR [esi],dh
  41b2c3:	cs dec ebx
  41b2c5:	aas    
  41b2c6:	sbb    dl,BYTE PTR [ecx+0x9]
  41b2c9:	sub    bh,BYTE PTR [edx]
  41b2cb:	daa    
  41b2cc:	pop    ebp
  41b2cd:	cmc    
  41b2ce:	inc    ebp
  41b2cf:	dec    eax
  41b2d0:	sub    BYTE PTR [esi+ecx*1],ch
  41b2d3:	sub    al,ch
  41b2d5:	dec    edx
  41b2d6:	sbb    al,0x26
  41b2d8:	in     eax,0x25
  41b2da:	sbb    DWORD PTR [edx+ebx*1],eax
  41b2dd:	inc    esi
  41b2de:	sub    cl,BYTE PTR [ebx+0x17]
  41b2e1:	inc    esi
  41b2e2:	sub    al,0x5d
  41b2e4:	or     eax,0x240c003b
  41b2e9:	dec    eax
  41b2ea:	je     0x41b2f0
  41b2ec:	and    al,0x9
  41b2ee:	push   eax
  41b2ef:	mov    dl,0x59
  41b2f1:	ficomp WORD PTR [esi+eiz*4+0x6d]
  41b2f5:	xor    eax,0x2a74c747
  41b2fa:	jb     0x41b2bb
  41b2fc:	imul   ebx,DWORD PTR ds:0x5871cc49,0x95cce6c
  41b306:	push   eax
  41b307:	mov    ds:0x0,al
	...
  41b330:	sbb    eax,esp
  41b332:	pop    esp
  41b333:	test   al,0x5d
  41b335:	xor    eax,0x355e8c68
  41b33a:	mov    ch,BYTE PTR [bx+di]
  41b33d:	xor    eax,0x4098e963
  41b342:	das    
  41b343:	fcomp  DWORD PTR [ebx-0x7b59adbb]
  41b349:	sub    ah,BYTE PTR [ecx+0x7b]
  41b34c:	and    DWORD PTR [ecx],edi
  41b34e:	je     0x41b339
  41b350:	js     0x41b392
  41b352:	das    
  41b353:	mov    eax,0x4c724777
  41b358:	sub    bl,BYTE PTR [eax+0x6c]
  41b35b:	dec    esi
  41b35c:	jnp    0x41b367
  41b35e:	add    cl,ch
  41b360:	dec    eax
  41b361:	or     DWORD PTR [eax],eax
  41b363:	jmp    0xe941bcb0
  41b368:	dec    eax
  41b369:	or     DWORD PTR [eax],eax
  41b36b:	jmp    0xe941bcb8
  41b370:	dec    eax
  41b371:	or     DWORD PTR [eax],eax
  41b373:	jmp    0xe941bcc0
  41b378:	dec    eax
  41b379:	or     DWORD PTR [eax],eax
  41b37b:	jmp    0x1a41bcc8
  41b380:	ss sbb eax,0xf82a1567
  41b386:	sub    eax,0x6be13e00
  41b38b:	add    BYTE PTR [ecx-0xb],ah
  41b38e:	imul   ebp,DWORD PTR [ecx+0x5e],0xffffffe9
  41b392:	cs pop edi
	...
  41b3bc:	push   ebp
  41b3bd:	cli    
  41b3be:	pusha  
  41b3bf:	outs   dx,BYTE PTR ds:[esi]
  41b3c0:	(bad)  
  41b3c1:	imul   DWORD PTR [esp+ebp*2+0x1b]
  41b3c5:	fisub  WORD PTR [eax+0x33]
  41b3c8:	cmc    
  41b3c9:	out    0x6b,al
  41b3cb:	outs   dx,DWORD PTR ds:[esi]
  41b3cc:	adc    ecx,ebp
  41b3ce:	push   DWORD PTR [edx-0xd]
  41b3d1:	in     eax,0x64
  41b3d3:	je     0x41b3e4
  41b3d5:	mov    bh,0x5c
  41b3d7:	jo     0x41b3b9
  41b3d9:	call   0xe912154d
  41b3de:	push   DWORD PTR [edx-0x4d]
  41b3e1:	in     eax,0x64
  41b3e3:	je     0x41b3b4
  41b3e5:	mov    dh,0x5c
  41b3e7:	jae    0x41b3c7
  41b3e9:	call   0xf512b45d
  41b3ee:	imul   ebp,DWORD PTR [ecx+0x6e],0xffffffe9
  41b3f2:	cs pop edi
  41b3f4:	shl    edx,1
  41b3f6:	imul   esi,DWORD PTR [ebp-0x39],0xffffffdf
  41b3fa:	pop    edx
  41b3fb:	bound  ebx,QWORD PTR [ebx-0x22]
  41b3fe:	pusha  
  41b3ff:	jae    0x41b3e3
  41b401:	imul   BYTE PTR [esp+ebp*2+0x1b]
  41b405:	stc    
  41b406:	pusha  
  41b407:	xor    esi,DWORD PTR [ebp-0x1a]
  41b40a:	push   0x6c
  41b40c:	pop    ds
  41b40d:	loopne 0x41b47c
  41b40f:	pop    edi
  41b410:	add    cl,ah
  41b412:	push   0x62
  41b414:	mov    dl,0x9
  41b416:	imul   ebp,DWORD PTR [edi+0x58],0xb6c6cf6
  41b41d:	stc    
  41b41e:	pusha  
  41b41f:	xor    eax,DWORD PTR [eax]
	...
  41b445:	add    BYTE PTR [eax],al
  41b447:	add    BYTE PTR [ebp+ecx*1+0x6c],dh
  41b44b:	ins    BYTE PTR es:[edi],dx
  41b44c:	jb     0x41b444
  41b44e:	ins    BYTE PTR es:[edi],dx
  41b44f:	ins    BYTE PTR es:[edi],dx
  41b450:	dec    ebx
  41b451:	or     DWORD PTR [eax],esi
  41b453:	arpl   WORD PTR [eax],di
  41b455:	fild   QWORD PTR [eax]
  41b457:	jo     0x41b43f
  41b459:	adc    eax,0xfbda7104
  41b45e:	sub    dh,BYTE PTR [esi+eiz*8+0x72]
  41b462:	pop    edx
  41b463:	popa   
  41b464:	out    0xae,eax
  41b466:	arpl   WORD PTR ss:[ebx-0x2d],cx
  41b46a:	xor    al,0x6c
  41b46c:	mov    dl,0xd6
  41b46e:	and    BYTE PTR [ecx],dh
  41b470:	pushf  
  41b471:	shl    BYTE PTR [ebx],cl
  41b473:	arpl   WORD PTR [ebx+0x4b6333c1],di
  41b479:	outs   dx,DWORD PTR ds:[esi]
  41b47a:	xor    al,0x6c
  41b47c:	mov    dl,0x76
  41b47e:	and    BYTE PTR [ecx],dh
  41b480:	jl     0x41b4f1
  41b482:	sub    eax,0x36a29b63
  41b487:	outs   dx,DWORD PTR ds:[esi]
  41b488:	lahf   
  41b489:	cdq    
  41b48a:	sub    eax,0x266b3863
  41b48f:	ins    DWORD PTR es:[edi],dx
  41b490:	outs   dx,DWORD PTR ds:[esi]
  41b491:	lea    ebp,[eax]
  41b493:	outs   dx,BYTE PTR ds:[esi]
  41b494:	xchg   esp,eax
  41b495:	cmp    BYTE PTR [esp+esi*2],0x66
  41b499:	das    
  41b49a:	add    DWORD PTR [ecx+0x5a],esi
  41b49d:	jle    0x41b4cb
  41b49f:	je     0x41b507
  41b4a1:	outs   dx,DWORD PTR ds:[esi]
  41b4a2:	pop    edx
  41b4a3:	popa   
  41b4a4:	fs xor BYTE PTR cs:[ebx+0x5d],ch
  41b4a9:	inc    ebx
  41b4aa:	es ins BYTE PTR es:[edi],dx
	...
  41b4d4:	xor    al,0x40
  41b4d6:	add    al,0x0
  41b4d8:	dec    ebx
  41b4d9:	mov    ds:0xa24b0001,al
  41b4de:	add    DWORD PTR [eax],eax
  41b4e0:	dec    ebx
  41b4e1:	mov    ds:0xa24b0001,al
  41b4e6:	add    DWORD PTR [eax],eax
  41b4e8:	dec    ebx
  41b4e9:	mov    ds:0xa24b0001,al
  41b4ee:	add    DWORD PTR [eax],eax
  41b4f0:	dec    ebx
  41b4f1:	or     edi,esp
  41b4f3:	add    ecx,DWORD PTR [ebx+0x9]
  41b4f6:	out    0x3,eax
  41b4f8:	dec    ebx
  41b4f9:	cmp    DWORD PTR [ecx],ebx
  41b4fb:	sub    ebp,ebp
  41b4fd:	and    ebx,edi
  41b4ff:	push   ds
  41b500:	cli    
  41b501:	fimul  DWORD PTR [edi]
  41b503:	sub    ch,ah
  41b505:	or     BYTE PTR [edi],dl
  41b507:	ss out dx,al
  41b509:	and    al,BYTE PTR [eax]
  41b50b:	sub    al,ch
  41b50d:	or     BYTE PTR [eax],ah
  41b50f:	xor    eax,0x22d325f9
  41b514:	mov    edi,0x4b1ed522
  41b519:	pop    ecx
  41b51a:	enter  0xa32f,0x9
  41b51e:	mov    bh,0x22
  41b520:	mov    bh,0x21
  41b522:	fwait
  41b523:	sub    BYTE PTR [eax-0x65fc3bcf],cl
  41b529:	and    cl,dh
  41b52b:	sub    DWORD PTR [esi-0x641645e5],esp
  41b531:	cmp    dl,BYTE PTR [ebx-0x18d980d6]
  41b537:	xor    al,0x0
	...
  41b55d:	add    BYTE PTR [eax],al
  41b55f:	add    BYTE PTR [esp-0x7b],ah
  41b563:	sub    BYTE PTR [ebp+0x38],ah
  41b566:	mov    ebp,0xe735732f
  41b56b:	xor    al,0x6c
  41b56d:	and    al,0x8d
  41b56f:	sub    BYTE PTR [ebp+0x38],ch
  41b572:	mov    ecx,0x733158e9
  41b577:	add    ebx,DWORD PTR [edx+0x22]
  41b57a:	dec    esi
  41b57b:	sub    dh,BYTE PTR [esi]
  41b57d:	sbb    ebx,DWORD PTR [edx-0xb]
  41b580:	outs   dx,BYTE PTR ds:[esi]
  41b581:	xor    eax,0xe84b304f
  41b586:	sbb    BYTE PTR ds:0x1ff8e84b,ah
  41b58c:	dec    ebx
  41b58d:	call   0x588cd48a
  41b592:	add    BYTE PTR [ebx+eax*1],ch
  41b595:	dec    eax
  41b596:	inc    ecx
  41b597:	adc    eax,0x1a6d23a7
  41b59c:	cmp    ebx,DWORD PTR [ebx]
  41b59e:	pop    edi
  41b59f:	or     al,0x5c
  41b5a1:	fstp   QWORD PTR [edi]
  41b5a3:	or     al,0x21
  41b5a5:	sub    dh,BYTE PTR [edx+0x10]
  41b5a8:	aaa    
  41b5a9:	xor    eax,0x3a140d63
  41b5ae:	arpl   bx,di
  41b5b0:	xor    cl,BYTE PTR [ebx+ebp*2+0xc]
  41b5b4:	arpl   WORD PTR [ebx],cx
  41b5b6:	arpl   di,di
  41b5b8:	daa    
  41b5b9:	aaa    
  41b5ba:	ja     0x41b595
  41b5bc:	je     0x41b5e4
  41b5be:	fs mov ecx,0xde713869
	...
  41b5ec:	arpl   WORD PTR [edi],si
  41b5ee:	or     DWORD PTR fs:[ecx+0x28b44d57],ecx
  41b5f5:	and    BYTE PTR [ebp-0x3d],ch
  41b5f8:	sbb    DWORD PTR ds:0x1b61ce6d,0x71
  41b5ff:	jmp    0x8cb3d88e
  41b604:	sub    bl,BYTE PTR [eax+edi*2]
  41b607:	jmp    0x93aef4a0
  41b60c:	and    DWORD PTR ds:0x4394886c,ebx
  41b612:	addr16 jnp 0x41b65a
  41b615:	and    ebp,DWORD PTR [ebp-0x7f]
  41b618:	je     0x41b623
  41b61a:	push   ecx
  41b61b:	xchg   BYTE PTR [edx],ch
  41b61d:	xor    eax,0x26168875
  41b622:	pop    esp
  41b623:	xor    al,0x6c
  41b625:	das    
  41b626:	addr16 dec ebp
  41b628:	jae    0x41b674
  41b62a:	add    BYTE PTR [edx+eiz*4],al
  41b62d:	(bad)  
  41b62f:	inc    esi
  41b630:	jnp    0x41b66b
  41b632:	cmp    al,BYTE PTR [eax]
  41b634:	cmp    eax,0x5667fda2
  41b639:	stc    
  41b63a:	outs   dx,DWORD PTR ds:[esi]
  41b63b:	cmp    cl,BYTE PTR [ebp-0x5e]
  41b63e:	std    
  41b63f:	addr16 push esi
  41b641:	stc    
  41b642:	outs   dx,DWORD PTR ds:[esi]
  41b643:	jae    0x41b6ad
  41b645:	mov    ds:0xf944002c,eax
  41b64a:	outs   dx,DWORD PTR ds:[esi]
  41b64b:	bound  ecx,QWORD PTR cs:[eiz*2+0x72]
	...
  41b677:	add    BYTE PTR [edi-0x15],al
  41b67a:	push   ebx
  41b67b:	push   eax
  41b67c:	popa   
  41b67d:	fnsave [ebx+0x65]
  41b680:	popa   
  41b681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b682:	popa   
  41b683:	popa   
  41b684:	push   esi
  41b685:	push   es
  41b686:	dec    edi
  41b687:	gs inc ebx
  41b689:	inc    eax
  41b68a:	imul   ebp,DWORD PTR [esi+0x19],0xffffffe9
  41b68e:	je     0x41b690
  41b690:	inc    BYTE PTR [eax+0x6b]
  41b693:	jp     0x41b6a0
  41b695:	loop   0x41b702
  41b697:	popa   
  41b698:	ficom  WORD PTR [esi+0x61]
  41b69b:	popa   
  41b69c:	(bad)  
  41b69e:	ins    DWORD PTR es:[edi],dx
  41b69f:	imul   eax,DWORD PTR [edi],0xffffffed
  41b6a2:	pop    ebx
  41b6a3:	add    ah,ah
  41b6a5:	loope  0x41b711
  41b6a7:	arpl   WORD PTR [ecx],cx
  41b6a9:	push   es
  41b6aa:	pop    esp
  41b6ab:	inc    esi
  41b6ac:	fsubrp st(2),st
  41b6ae:	pop    esi
  41b6af:	imul   edi,DWORD PTR [esi-0x2a908db9],0xfffffff6
  41b6b6:	pusha  
  41b6b7:	jb     0x41b657
  41b6b9:	add    eax,0xdcc86f49
  41b6be:	imul   ebp,DWORD PTR [ebx+edx*8+0x5],0x5c
  41b6c3:	dec    ebp
  41b6c4:	int    0xef
  41b6c6:	fs ins BYTE PTR es:[edi],dx
  41b6c8:	dec    esi
  41b6c9:	in     eax,0x5b
  41b6cb:	push   eax
  41b6cc:	and    dl,ah
  41b6ce:	imul   ecx,DWORD PTR gs:[esi],0x4b5c6ee8
  41b6d5:	mov    al,ds:0x54256d52
  41b6da:	sub    eax,0x5f
	...
  41b703:	add    BYTE PTR [ecx],bl
  41b705:	cmp    eax,0x45264c58
  41b70a:	and    DWORD PTR [eax+0xd],ebp
  41b70d:	or     al,0x54
  41b70f:	add    BYTE PTR [edx],cl
  41b711:	lock xor eax,DWORD PTR [edx+esi*8+0xd]
  41b716:	add    al,0x4c
  41b718:	in     al,dx
  41b719:	(bad)  
  41b71a:	and    ch,BYTE PTR [edi+ecx*1+0x9]
  41b71e:	xor    al,BYTE PTR [eax]
  41b720:	jmp    0xf6aaddcf
  41b725:	add    BYTE PTR [edx],dh
  41b727:	imul   ebp,DWORD PTR ds:0x4b742304,0xe6742b0f
  41b731:	call   0xf61d5b
  41b736:	push   ebx
  41b737:	inc    esi
  41b738:	fwait
  41b739:	mov    dl,0x46
  41b73b:	mov    fs:0xaa4601d0,al
  41b741:	shl    BYTE PTR [esi],0x72
  41b744:	mov    dl,0x66
  41b746:	and    BYTE PTR [ecx+0x6d],dh
  41b749:	into   
  41b74a:	and    al,0x74
  41b74c:	dec    ebx
  41b74d:	xchg   DWORD PTR [esi+ebp*2],ebp
  41b750:	test   DWORD PTR [esi+0x51],edi
  41b753:	add    BYTE PTR [eax+0x79],bh
  41b756:	sub    eax,0x1dd87863
  41b75b:	bound  ecx,QWORD PTR [ebx+0x73]
  41b75e:	inc    ebp
  41b75f:	push   ecx
  41b760:	sub    BYTE PTR [esi+0x55],0x79
  41b764:	sbb    ah,BYTE PTR [ecx+0x42]
  41b767:	das    
	...
  41b790:	xchg   DWORD PTR [edi-0x13],ebx
  41b793:	cs es jno 0x41b793
  41b797:	xor    cl,BYTE PTR [ecx+0x2f2ef465]
  41b79d:	or     DWORD PTR [ecx],ebx
  41b79f:	out    0x74,eax
  41b7a1:	dec    edx
  41b7a2:	pop    ds
  41b7a3:	hlt    
  41b7a4:	popa   
  41b7a5:	fst    DWORD PTR [esi]
  41b7a7:	cld    
  41b7a8:	pop    esp
  41b7a9:	dec    edx
  41b7aa:	and    eax,DWORD PTR [edx+0x5a]
  41b7ad:	fld    TBYTE PTR [esi+edi*1]
  41b7b0:	push   edi
  41b7b1:	sbb    ecx,DWORD PTR es:[ebx+0x25]
  41b7b5:	cmp    DWORD PTR [ecx],edi
  41b7b7:	and    eax,0x32443c2a
  41b7bc:	std    
  41b7bd:	sub    eax,0x93af119
  41b7c2:	sbb    bl,BYTE PTR [edi]
  41b7c4:	stc    
  41b7c5:	push   ds
  41b7c6:	or     al,0x32
  41b7c8:	cli    
  41b7c9:	test   BYTE PTR [esi],0x27
  41b7cc:	test   DWORD PTR [eax],0x38f73e23
  41b7d2:	es pop ds
  41b7d4:	fistp  WORD PTR [esp+ecx*1]
  41b7d7:	xor    cl,BYTE PTR [ebx+0x4e]
  41b7da:	sbb    dl,BYTE PTR [eax-0x51]
  41b7dd:	sub    ebx,DWORD PTR [ecx]
  41b7df:	out    0xa8,al
  41b7e1:	sub    dl,bl
  41b7e3:	add    eax,DWORD PTR [ebp+ecx*2-0x873d038]
  41b7ea:	ret    0x9f22
  41b7ed:	or     DWORD PTR [ebx-0x45e265c2],esp
  41b7f3:	and    al,0x0
	...
  41b819:	add    BYTE PTR [eax],al
  41b81b:	add    BYTE PTR [ebp+0x7f42931d],ch
  41b821:	dec    edi
  41b822:	xchg   ebx,eax
  41b823:	push   ebx
  41b824:	dec    ebx
  41b825:	push   edx
  41b826:	xchg   ebp,eax
  41b827:	das    
  41b828:	push   0x7f1e8d1b
  41b82d:	jmp    0x35bcf3dd
  41b832:	jle    0x41b865
  41b834:	push   0x644ce71b
  41b839:	aaa    
  41b83a:	nop
  41b83b:	and    eax,0xaa001d68
  41b840:	sub    DWORD PTR [edx],ebp
  41b842:	push   0x631b0b84
  41b847:	dec    ebp
  41b848:	pop    esp
  41b849:	aaa    
  41b84a:	je     0x41b89c
  41b84c:	push   0x5e97135
  41b851:	cmp    ah,BYTE PTR [eax]
  41b853:	and    BYTE PTR [ecx+ebp*8+0x45],ah
  41b857:	sbb    eax,0x484fe8f7
  41b85c:	pop    edx
  41b85d:	sbb    dh,BYTE PTR [ebp+0x46]
  41b860:	pop    ecx
  41b861:	sub    eax,0x3944e971
  41b866:	aas    
  41b867:	cmp    DWORD PTR [eax],edx
  41b869:	jecxz  0x41b88a
  41b86b:	jmp    0x6b5d2a8
  41b870:	cmp    DWORD PTR [ecx+eiz*2],ebp
  41b873:	mov    edi,0xe96c3544
  41b878:	clc    
  41b879:	cmp    DWORD PTR [esi+ecx*1+0x19],esi
  41b87d:	sub    al,0x41
  41b87f:	sti    
	...
  41b8a8:	sub    eax,0x90047448
  41b8ad:	aaa    
  41b8ae:	jno    0x41b88d
  41b8b0:	imul   esi,DWORD PTR [edi],0x948c461
  41b8b6:	popa   
  41b8b7:	(bad)  [ecx+0x19]
  41b8ba:	je     0x41b8d6
  41b8bc:	sbb    ebp,esi
  41b8be:	arpl   bp,dx
  41b8c0:	or     DWORD PTR fs:[ecx-0x45],eax
  41b8c4:	push   ecx
  41b8c5:	sbb    DWORD PTR [esp+ebx*4+0x66],esi
  41b8c9:	sbb    DWORD PTR [edx-0x42],esi
  41b8cc:	xor    al,0x2a
  41b8ce:	popa   
  41b8cf:	popf   
  41b8d0:	cmp    al,0x46
  41b8d2:	je     0x41b85c
  41b8d4:	dec    eax
  41b8d5:	or     DWORD PTR [eax],eax
  41b8d7:	jmp    0xe941c224
  41b8dc:	dec    eax
  41b8dd:	or     DWORD PTR [eax],eax
  41b8df:	add    BYTE PTR [edx+0x4e3c3350],dh
  41b8e5:	and    bl,cl
  41b8e7:	adc    DWORD PTR ds:0xb2a9ffdf,edx
  41b8ed:	repz inc ebp
  41b8ef:	out    dx,al
  41b8f0:	jae    0x41b8d9
  41b8f2:	xor    bh,BYTE PTR [esi+ecx*4]
  41b8f5:	aaa    
  41b8f6:	retf   
  41b8f7:	adc    ebp,edx
  41b8f9:	fdivr  st,st(7)
  41b8fb:	test   eax,0xee4605b2
  41b900:	jo     0x41b8e9
  41b902:	xor    bh,BYTE PTR [esi+ecx*4]
  41b905:	aaa    
  41b906:	retf   
  41b907:	adc    DWORD PTR ds:0xa9ffd8,edx
	...
  41b931:	add    BYTE PTR [eax],al
  41b933:	add    BYTE PTR [edx+0x5],dh
  41b936:	inc    esi
  41b937:	out    dx,al
  41b938:	or     al,BYTE PTR gs:[eax]
  41b93b:	add    BYTE PTR [edi+0x62582f9a],cl
  41b941:	aas    
  41b942:	imul   esp,DWORD PTR [esi+0x3e],0xffffffe2
  41b946:	pop    esp
  41b947:	jb     0x41b998
  41b949:	cmp    DWORD PTR [ecx+0x69],ecx
  41b94c:	inc    ecx
  41b94d:	fild   QWORD PTR [edx+0x73]
  41b950:	inc    ebp
  41b951:	repz jae 0x41b9b0
  41b954:	imul   ebp,ebx,0x73
  41b957:	gs and al,ch
  41b95a:	pusha  
  41b95b:	je     0x41b99f
  41b95d:	push   eax
  41b95e:	js     0x41b9d0
  41b960:	push   es
  41b961:	jmp    0x41b9d4
  41b963:	add    BYTE PTR gs:[esi+0x45],dl
  41b967:	outs   dx,BYTE PTR ds:[esi]
  41b968:	fdivrp st(0),st
  41b96a:	imul   ebp,DWORD PTR [ebx+edi*8+0x4f],0x6b
  41b96f:	jb     0x41b978
  41b971:	fistp  WORD PTR [ebx+0x53]
  41b974:	mov    esi,0xcd6171ea
  41b979:	lock xor DWORD PTR [eax],eax
  41b97c:	loop   0x41b987
  41b97e:	add    BYTE PTR [eax],al
  41b980:	dec    ebx
  41b981:	xchg   ecx,eax
  41b982:	add    DWORD PTR [edx+0x4b],esp
  41b985:	lea    eax,[ecx]
  41b987:	xor    cl,BYTE PTR [ebx-0x38]
  41b98a:	add    DWORD PTR [esi],esi
  41b98c:	dec    ebx
  41b98d:	leave  
  41b98e:	add    DWORD PTR [esi+0x4b],esp
  41b991:	int    0x1
  41b993:	aaa    
  41b994:	dec    ebx
  41b995:	xchg   edx,eax
  41b996:	add    DWORD PTR [eax+eax*1],esi
	...
  41b9bd:	add    BYTE PTR [eax],al
  41b9bf:	add    BYTE PTR [ebx+0x7],cl
  41b9c2:	add    al,0x2b
  41b9c4:	dec    ebx
  41b9c5:	cld    
  41b9c6:	add    esp,DWORD PTR [ecx+0x4b]
  41b9c9:	push   esp
  41b9ca:	add    al,0x37
  41b9cc:	dec    ebx
  41b9cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9ce:	add    DWORD PTR [edi+0x4b],ebx
  41b9d1:	mov    ds:0x84b3301,eax
  41b9d6:	add    al,0x2b
  41b9d8:	dec    ebx
  41b9d9:	push   ebx
  41b9da:	add    al,0x32
  41b9dc:	dec    ebx
  41b9dd:	mov    ds:0xc04b3701,al
  41b9e2:	add    DWORD PTR [ebx+ecx*2],esi
  41b9e5:	or     al,0x4
  41b9e7:	bound  ecx,QWORD PTR [ebx+0x11]
  41b9ea:	add    al,0x35
  41b9ec:	dec    ebx
  41b9ed:	push   cs
  41b9ee:	add    al,0x35
  41b9f0:	dec    ebx
  41b9f1:	mov    al,0x1
  41b9f3:	dec    ebx
  41b9f4:	loop   0x41ba08
  41b9f6:	ss ins DWORD PTR es:[edi],dx
  41b9f8:	fmul   DWORD PTR [esi]
  41b9fa:	sub    dh,BYTE PTR [esp+eiz*4-0x5]
  41b9fe:	sbb    ch,BYTE PTR [esi-0x6e]
  41ba01:	mov    esp,0xf8947428
  41ba06:	add    esp,DWORD PTR [esi-0x49]
  41ba09:	ret    0x2ceb
  41ba0c:	je     0x41b9c0
  41ba0e:	push   esi
  41ba0f:	ins    DWORD PTR es:[edi],dx
  41ba10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba11:	data16 cmp bl,BYTE PTR [edi-0x67]
  41ba15:	int    0x4d
  41ba17:	aas    
  41ba18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba19:	retf   
  41ba1a:	and    esp,DWORD PTR [ebx-0x59]
  41ba1d:	outs   dx,DWORD PTR ds:[esi]
  41ba1e:	and    ch,BYTE PTR [ebx+0x6e]
  41ba21:	or     DWORD PTR [esi+0x21],edx
	...
  41ba4b:	add    BYTE PTR [ebx+0x38],cl
  41ba4e:	nop
  41ba4f:	aaa    
  41ba50:	push   0x5d358c38
  41ba55:	cs cdq 
  41ba57:	ss dec ebx
  41ba59:	cmp    BYTE PTR [eax-0x7bc797c9],dl
  41ba5f:	xor    eax,0xe3792e55
  41ba64:	imul   ebp,DWORD PTR ds:0x182e3b8b,0x321a045b
  41ba6e:	push   ebx
  41ba6f:	daa    
  41ba70:	sbb    ch,BYTE PTR [esi]
  41ba72:	pop    ecx
  41ba73:	cmp    ch,BYTE PTR [eax]
  41ba75:	pop    ss
  41ba76:	pop    es
  41ba77:	out    0x28,eax
  41ba79:	inc    ebp
  41ba7a:	push   ds
  41ba7b:	daa    
  41ba7c:	sub    DWORD PTR [esi],edi
  41ba7e:	cmp    DWORD PTR [eax],esp
  41ba80:	dec    ebx
  41ba81:	cmp    BYTE PTR [eax+0x38],al
  41ba84:	call   0xf577fec0
  41ba89:	sub    eax,0x2d29e419
  41ba8e:	cmp    edx,DWORD PTR [esi-0x18]
  41ba91:	xor    eax,0xe8e83806
  41ba96:	and    bl,BYTE PTR [ebx]
  41ba98:	fldcw  WORD PTR ds:0x16e6380a
  41ba9e:	add    BYTE PTR [edx+edi*8],al
  41baa1:	xor    ebx,edi
  41baa3:	es call 0x717:0xa839f92e
  41baab:	out    0xa8,eax
  41baad:	div    BYTE PTR [ebx+0x34]
	...
  41bad7:	add    BYTE PTR [eax-0x53ab18e9],ch
  41badd:	sbb    eax,0x17a854c4
  41bae2:	mov    ebp,0x3e99926
  41bae7:	sub    BYTE PTR [eax+0x3e],ah
  41baea:	add    BYTE PTR [edx-0x66dfe8d3],bh
  41baf0:	mov    ds:0x849a2309,eax
  41baf5:	push   edx
  41baf6:	arpl   WORD PTR [eax-0x7fa0ced9],sp
  41bafc:	sub    cl,BYTE PTR [ecx]
  41bafe:	push   ecx
  41baff:	adc    BYTE PTR [eax+ebp*1],0x51
  41bb03:	mov    WORD PTR [esi],ds
  41bb05:	sbb    esp,DWORD PTR [ebx+0x7b]
  41bb08:	call   0x1fd71ef3
  41bb0d:	dec    ebx
  41bb0e:	push   esp
  41bb0f:	cdq    
  41bb10:	dec    eax
  41bb11:	dec    ebp
  41bb12:	arpl   WORD PTR [ebp+0x7c],dx
  41bb15:	and    DWORD PTR [ebx+0x27],esp
  41bb18:	adc    edi,DWORD PTR [ecx]
  41bb1a:	add    BYTE PTR [edx+0x40],bl
  41bb1d:	sbb    eax,0x1ba95a63
  41bb22:	imul   edx,DWORD PTR [ebp+0x4f],0x3e
  41bb26:	arpl   WORD PTR [ebx-0x59],cx
  41bb29:	inc    edi
  41bb2a:	pop    edi
  41bb2b:	cmp    eax,0x3e4c0928
  41bb30:	xor    ch,BYTE PTR [esi+ebp*2]
  41bb33:	leave  
  41bb34:	or     al,0x44
  41bb36:	je     0x41bb40
  41bb38:	inc    edi
  41bb39:	cmp    cl,BYTE PTR [edi+0x25]
	...
  41bb64:	inc    eax
  41bb65:	sbb    eax,0x3632c963
  41bb6a:	jb     0x41bb80
  41bb6c:	sub    BYTE PTR ds:0x1d48ba20,bl
  41bb72:	pop    edi
  41bb73:	or     ebp,DWORD PTR [ebx+0x26]
  41bb76:	add    cl,al
  41bb78:	dec    eax
  41bb79:	jmp    0xaf4d:0x484f08ff
  41bb80:	xchg   edi,eax
  41bb81:	cmp    eax,0x5361a852
  41bb86:	push   esp
  41bb87:	jmp    0x88f304
  41bb8c:	fild   WORD PTR [edi+0x52]
  41bb8f:	pop    ecx
  41bb90:	and    bh,BYTE PTR [esi+ecx*2]
  41bb93:	dec    ecx
  41bb94:	jecxz  0x41bbd1
  41bb96:	inc    ecx
  41bb97:	add    BYTE PTR [ecx-0x46bcbf22],dh
  41bb9d:	push   es
  41bb9e:	inc    esi
  41bb9f:	dec    edi
  41bba0:	mov    al,0x4b
  41bba2:	inc    ebp
  41bba3:	inc    edi
  41bba4:	lods   al,BYTE PTR ds:[esi]
  41bba5:	push   es
  41bba6:	add    BYTE PTR [ebp+ebx*2-0xf],ch
  41bbaa:	outs   dx,BYTE PTR fs:[esi]
  41bbac:	push   ecx
  41bbad:	push   es
  41bbae:	imul   esi,DWORD PTR [edx-0x45],0xfffffff1
  41bbb2:	outs   dx,BYTE PTR fs:[esi]
  41bbb4:	fstp   st(3)
  41bbb6:	jno    0x41bc24
  41bbb8:	mov    dl,0xd6
  41bbba:	pop    esp
  41bbbb:	jae    0x41bbce
  41bbbd:	fisubr DWORD PTR [edx+0x72]
  41bbc0:	push   es
  41bbc1:	push   edx
  41bbc2:	jbe    0x41bc25
  41bbc4:	push   cs
  41bbc5:	loopne 0x41bc27
	...
  41bbef:	add    bh,dh
  41bbf1:	aad    0x60
  41bbf3:	jb     0x41bbf1
  41bbf5:	jmp    0x41bc5f
  41bbf7:	gs sub eax,0x476c5cdb
  41bbfd:	lock jmp DWORD PTR [ebp+0x36]
  41bc01:	fnstsw WORD PTR [ecx]
  41bc03:	das    
  41bc04:	popf   
  41bc05:	push   es
  41bc06:	push   0x39dd5674
  41bc0b:	das    
  41bc0c:	lea    eax,[esi]
  41bc0e:	push   0x6edd3674
  41bc13:	cmp    bh,BYTE PTR [ebp-0x3d]
  41bc16:	std    
  41bc17:	pop    ebx
  41bc18:	and    eax,0x4e676b02
  41bc1d:	lock pop ebx
  41bc1f:	inc    ebx
  41bc20:	dec    edx
  41bc21:	xlat   BYTE PTR ds:[ebx]
  41bc22:	push   0x6d
  41bc24:	pop    es
  41bc25:	push   es
  41bc26:	pop    esp
  41bc27:	inc    ebx
  41bc28:	sbb    bl,al
  41bc2a:	push   0x6d
  41bc2c:	dec    ebx
  41bc2d:	leave  
  41bc2e:	cmp    BYTE PTR [ebx+0x4b],ch
  41bc31:	je     0x41bc75
  41bc33:	push   0x6320bb99
  41bc38:	jnp    0x41bc0e
  41bc3a:	cmp    BYTE PTR [ecx+0x4b],dh
  41bc3d:	jg     0x41bc5d
  41bc3f:	data16 ja 0x41bc9d
  41bc42:	and    al,0x72
  41bc44:	outs   dx,BYTE PTR ds:[esi]
  41bc45:	int3   
  41bc46:	inc    edx
  41bc47:	push   0x63209379
  41bc4c:	jnp    0x41bbda
  41bc4e:	cmp    BYTE PTR [ecx+0x4b],dh
  41bc51:	imul   ebx,DWORD PTR [ebx],0x71
	...
  41bc7b:	add    BYTE PTR [edi-0x6f],bl
  41bc7e:	sbb    eax,0x1c6c6c6c
  41bc83:	jb     0x41bcd0
  41bc85:	jl     0x41bcc6
  41bc87:	jb     0x41bcb5
  41bc89:	and    eax,0xb026731c
  41bc8e:	dec    ebp
  41bc8f:	dec    esi
  41bc90:	and    cl,BYTE PTR [edi+0x1c]
  41bc93:	jb     0x41bcc9
  41bc95:	dec    ebp
  41bc96:	daa    
  41bc97:	add    bh,bh
  41bc99:	out    dx,al
  41bc9a:	sbb    al,0x6b
  41bc9c:	and    al,0x54
  41bc9e:	sbb    eax,0x1cfdef00
  41bca3:	popa   
  41bca4:	lock in al,dx
  41bca6:	es ins BYTE PTR es:[edi],dx
  41bca8:	imul   DWORD PTR [edi+0x15062b3a]
  41bcae:	and    BYTE PTR [ebx-0x24],ah
  41bcb1:	adc    DWORD PTR [esp+ebx*2],eax
  41bcb4:	adc    ch,cl
  41bcb6:	inc    eax
  41bcb7:	arpl   di,bp
  41bcb9:	or     al,0x1d
  41bcbb:	outs   dx,BYTE PTR ds:[esi]
  41bcbc:	dec    ebx
  41bcbd:	in     al,dx
  41bcbe:	push   ebx
  41bcbf:	jb     0x41bc9d
  41bcc1:	or     DWORD PTR [ebx],ebx
  41bcc3:	ins    BYTE PTR es:[edi],dx
  41bcc4:	scas   al,BYTE PTR es:[edi]
  41bcc5:	mov    ds:0x9bb4301,eax
  41bcca:	and    DWORD PTR [eax],eax
  41bccc:	xchg   edi,eax
  41bccd:	or     DWORD PTR [ebx+esi*1+0x48bb2ca4],ebp
  41bcd4:	fwait
  41bcd5:	xor    cl,dl
  41bcd7:	add    edi,DWORD PTR [edx+0x15]
  41bcda:	enter  0xad25,0xee
  41bcde:	lods   al,BYTE PTR ds:[esi]
  41bcdf:	push   edi
	...
  41bd08:	jnp    0x41bd13
  41bd0a:	mov    edx,0xba267f1c
  41bd0f:	frstor [ebp+0x2f]
  41bd12:	rol    BYTE PTR [ebx],0x97
  41bd15:	cmp    al,0x90
  41bd17:	aaa    
  41bd18:	push   0x7d4fe71c
  41bd1d:	xor    bl,BYTE PTR [edx+0x7c306a1c]
  41bd23:	jecxz  0x41bca6
  41bd25:	mov    ebx,DWORD PTR es:[esp+ebp*2]
  41bd29:	or     ebp,ecx
  41bd2b:	and    eax,0x52e7193f
  41bd30:	dec    ebx
  41bd31:	es out 0x37,eax
  41bd34:	dec    ebx
  41bd35:	adc    eax,0x2f4b1ae7
  41bd3a:	out    0x24,eax
  41bd3c:	dec    ebx
  41bd3d:	sbb    al,0xe7
  41bd3f:	add    ecx,DWORD PTR [ebx+0x3d]
  41bd42:	and    BYTE PTR es:[esi],ah
  41bd45:	sub    ecx,DWORD PTR [eax+0x20]
  41bd48:	imul   eax,DWORD PTR [ebp+0x4e],0x35
  41bd4c:	cmc    
  41bd4d:	sub    al,0x46
  41bd4f:	and    esp,edi
  41bd51:	and    eax,0x4e1a0439
  41bd56:	aad    0x22
  41bd58:	stc    
  41bd59:	sub    ecx,DWORD PTR [edi]
  41bd5b:	add    al,0xd
  41bd5d:	sbb    ecx,DWORD PTR [ecx+esi*1]
  41bd60:	repz inc esi
  41bd62:	xor    edx,DWORD PTR [ebx+ecx*2-0x11]
  41bd66:	sbb    DWORD PTR [edi],edi
  41bd68:	add    eax,0x202909
	...
  41bd91:	add    BYTE PTR [eax],al
  41bd93:	add    BYTE PTR [ebx+eiz*1+0x15850c00],ah
  41bd9a:	jo     0x41bd85
  41bd9c:	jnp    0x41bdc6
  41bd9e:	je     0x41bd6c
  41bda0:	push   cs
  41bda1:	sub    al,0x5f
  41bda3:	aad    0x48
  41bda5:	dec    ebp
  41bda6:	pop    edi
  41bda7:	ficom  DWORD PTR [ecx+edi*1+0x5f]
  41bdab:	ficomp DWORD PTR [ebx+0x16]
  41bdae:	ins    DWORD PTR es:[edi],dx
  41bdaf:	mov    ebx,0xc84c0964
  41bdb4:	cmp    edx,DWORD PTR ds:0x1b24cd3f
  41bdba:	arpl   WORD PTR [edx-0x77b3f6c5],di
  41bdc0:	cmp    edx,DWORD PTR ds:0x1b2d9a53
  41bdc6:	add    BYTE PTR [ebp-0x468be5d7],ah
  41bdcc:	aaa    
  41bdcd:	sbb    esi,DWORD PTR [ecx+ebp*8+0x7b]
  41bdd1:	cs data16 jne 0x41be54
  41bdd5:	inc    eax
  41bdd6:	jb     0x41bd64
  41bdd8:	or     al,0x47
  41bdda:	ins    BYTE PTR es:[edi],dx
  41bddb:	mov    BYTE PTR [ebx+0x31],bh
  41bdde:	push   eax
  41bddf:	dec    esp
  41bde0:	push   0x6b2b5c32
  41bde5:	inc    eax
  41bde6:	jp     0x41be34
  41bde8:	add    eax,0xfa2d7015
  41bded:	sub    esi,DWORD PTR [ebp+edi*1+0x30]
  41bdf1:	das    
  41bdf2:	cmp    cl,BYTE PTR gs:[edi+0x3d]
  41bdf6:	inc    edx
  41bdf7:	inc    ebp
	...
  41be20:	sub    BYTE PTR [ebx],ah
  41be22:	arpl   WORD PTR [edi],sp
  41be24:	xor    ebx,DWORD PTR [ecx]
  41be26:	add    bh,dl
  41be28:	sbb    DWORD PTR es:[ecx+ebp*8+0xe],ebp
  41be2d:	xor    eax,0xed83c250
  41be32:	dec    ebx
  41be33:	add    BYTE PTR ds:0x51005c32,dh
  41be39:	add    esp,DWORD PTR [ecx+0x6c]
  41be3c:	push   esi
  41be3d:	cmp    DWORD PTR [ebx+0x70],ebp
  41be40:	dec    edi
  41be41:	call   FWORD PTR [ebx+0x63]
  41be44:	xor    eax,0x14616900
  41be49:	out    0xff,eax
  41be4b:	inc    esi
  41be4c:	adc    eax,0x32505445
  41be51:	dec    edx
  41be52:	imul   ebp,DWORD PTR [esi-0x2c],0xffffffe7
  41be56:	pop    esi
  41be57:	je     0x41be54
  41be59:	std    
  41be5a:	ins    DWORD PTR es:[edi],dx
  41be5b:	jae    0x41beb1
  41be5d:	loope  0x41bed6
  41be5f:	je     0x41be53
  41be61:	cdq    
  41be62:	inc    ecx
  41be63:	sub    eax,0x5036ac
  41be68:	rol    DWORD PTR [ebx],1
  41be6a:	je     0x41bed1
  41be6c:	sar    DWORD PTR [esi+eiz*2+0x5c0acb6e],0x33
  41be74:	scas   al,BYTE PTR es:[edi]
  41be75:	mov    edi,0xab25443
  41be7a:	pop    esp
  41be7b:	push   ebx
  41be7c:	fcmovnbe st,st(6)
  41be7e:	pusha  
  41be7f:	inc    esp
  41be80:	iret   
  41be81:	fldenv [edi+eiz*2+0x0]
	...
  41bea9:	add    BYTE PTR [eax],al
  41beab:	add    BYTE PTR [edi+eiz*8],dh
  41beae:	jno    0x41beb0
  41beb0:	jno    0x41be94
  41beb2:	inc    ebp
  41beb3:	push   esp
  41beb4:	pop    ebp
  41beb5:	inc    esp
  41beb6:	push   edx
  41beb7:	inc    ebp
  41beb8:	push   esi
  41beb9:	inc    esi
  41beba:	ins    BYTE PTR es:[edi],dx
  41bebb:	popa   
  41bebc:	icebp  
  41bebd:	aad    0x60
  41bebf:	jae    0x41bf27
  41bec1:	cmp    DWORD PTR [ebp+0x70],esi
  41bec4:	psraw  mm4,QWORD PTR [edx+eiz*2+0x56]
  41bec9:	out    dx,al
  41beca:	inc    ebp
  41becb:	cmp    DWORD PTR [edx-0x52],esi
  41bece:	xor    BYTE PTR [ebx+0x6a],al
  41bed1:	mov    dl,0x2a
  41bed3:	inc    esi
  41bed4:	jl     0x41bf1e
  41bed6:	xor    ch,BYTE PTR ds:0x2ef1c14b
  41bedc:	or     bl,BYTE PTR [ebp+0x44]
  41bedf:	xor    DWORD PTR [eax],ecx
  41bee1:	leave  
  41bee2:	fsubr  DWORD PTR [edi]
  41bee4:	and    DWORD PTR [eax-0xf],0x31
  41bee8:	mov    DWORD PTR [edx+0x3f],esp
  41beeb:	xor    al,0x72
  41beed:	out    0x45,al
  41beef:	jnp    0x41be80
  41bef1:	add    edx,ebx
  41bef3:	xor    DWORD PTR [edi-0x4d8ab800],eax
  41bef9:	(bad)  
  41befa:	div    BYTE PTR [ecx]
  41befc:	dec    ebx
  41befd:	gs and al,0x71
  41bf00:	xchg   edx,eax
  41bf01:	outs   dx,BYTE PTR ds:[esi]
  41bf02:	dec    ebp
  41bf03:	push   eax
  41bf04:	dec    ebx
  41bf05:	jl     0x41bf3e
  41bf07:	arpl   WORD PTR [edi-0x7d],si
  41bf0a:	and    al,0x72
  41bf0c:	push   0x5e
  41bf0e:	and    al,BYTE PTR [eax]
	...
  41bf38:	sbb    eax,0x4b701f68
  41bf3d:	into   
  41bf3e:	xor    esp,DWORD PTR [ebx+ebx*2-0x50]
  41bf42:	dec    ebp
  41bf43:	inc    ebx
  41bf44:	jns    0x41bfc3
  41bf46:	push   esi
  41bf47:	push   edx
  41bf48:	jne    0x41bf01
  41bf4a:	(bad)  
  41bf4c:	xor    al,0x91
  41bf4e:	ss jno 0x41bf85
  41bf51:	xchg   DWORD PTR [ebx],esi
  41bf53:	imul   edx,DWORD PTR fs:[ebp-0xc],0x39
  41bf58:	sub    edx,ebp
  41bf5a:	add    esi,DWORD PTR [ebx+0x18]
  41bf5d:	inc    ebp
  41bf5e:	outs   dx,BYTE PTR ss:[esi]
  41bf60:	sub    al,BYTE PTR [ebp+0x1f]
  41bf63:	cmp    bl,BYTE PTR [eax]
  41bf65:	cli    
  41bf66:	add    esp,DWORD PTR [esi+0x16]
  41bf69:	xor    al,0x18
  41bf6b:	and    dl,ch
  41bf6d:	inc    ebx
  41bf6e:	and    BYTE PTR [edx-0x1a],dh
  41bf71:	loop   0x41bfa7
  41bf73:	cmp    bh,al
  41bf75:	cdq    
  41bf76:	add    DWORD PTR [esi],ebp
  41bf78:	dec    ebx
  41bf79:	or     DWORD PTR [ebx],edi
  41bf7b:	inc    ecx
  41bf7c:	stc    
  41bf7d:	dec    ebx
  41bf7e:	cmp    dl,BYTE PTR [esi-0xb]
  41bf81:	in     eax,dx
  41bf82:	out    0x41,al
  41bf84:	(bad)  
  41bf85:	cmp    bh,al
  41bf87:	cmp    esi,ebx
  41bf89:	adc    eax,0x399f41e7
  41bf8e:	sub    eax,0xfa09b61b
  41bf93:	sbb    al,0xbf
  41bf95:	es cli 
  41bf97:	fnstenv [esi+ebp*1+0x3d3]
	...
  41bfc2:	add    BYTE PTR [eax],al
  41bfc4:	jp     0x41c012
  41bfc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfc7:	dec    edi
  41bfc8:	jbe    0x41c014
  41bfca:	mov    ecx,0xbe377740
  41bfcf:	and    eax,0x4facee9e
  41bfd4:	fwait
  41bfd5:	jmp    0x3d7999d3
  41bfda:	call   0x7a2f:0xb7327926
  41bfe1:	or     DWORD PTR [edx-0x49ca72c6],edi
  41bfe7:	inc    esp
  41bfe8:	jns    0x41c030
  41bfea:	mov    bl,0x55
  41bfec:	data16 daa 
  41bfee:	jle    0x41bfc8
  41bff0:	xchg   BYTE PTR ds:0xeb7be397,dh
  41bff6:	mov    ch,0x47
  41bff8:	add    eax,0x28569735
  41bffd:	pop    ss
  41bffe:	jne    0x41c020
  41c000:	cmp    DWORD PTR [eax],ebx
  41c002:	out    0x41,eax
  41c004:	(bad)  
  41c005:	cmp    BYTE PTR [edi],al
  41c007:	inc    ebp
  41c008:	cs push ss
  41c00a:	inc    ebp
  41c00b:	xor    BYTE PTR [ebx+0x43],cl
  41c00e:	xor    edx,DWORD PTR [ebx+ebp*2+0x43]
  41c012:	push   eax
  41c013:	sbb    al,ch
  41c015:	in     eax,0x42
  41c017:	add    al,0x1b
  41c019:	sub    al,BYTE PTR [eax]
  41c01b:	cmp    bh,BYTE PTR [esi]
  41c01d:	push   ss
  41c01e:	ins    DWORD PTR es:[edi],dx
  41c01f:	cmp    ebp,DWORD PTR [ebx]
  41c021:	or     DWORD PTR [ecx+0xc],edx
  41c024:	sbb    eax,0x1b6313
	...
  41c04d:	add    BYTE PTR [eax],al
  41c04f:	add    BYTE PTR [ecx],ah
  41c051:	cmp    al,0x6b
  41c053:	or     al,0x4f
  41c055:	cmp    BYTE PTR [ecx+0x4],dh
  41c058:	adc    eax,0x81e94444
  41c05d:	sub    esp,DWORD PTR [edi-0xb]
  41c060:	popa   
  41c061:	cmp    al,0x6c
  41c063:	sub    eax,0xa631750
  41c068:	jnp    0x41c098
  41c06a:	jb     0x41c04c
  41c06c:	dec    eax
  41c06d:	cmp    DWORD PTR [ebp-0x25],ebp
  41c070:	ins    BYTE PTR es:[edi],dx
  41c071:	dec    ebx
  41c072:	jae    0x41c038
  41c074:	outs   dx,BYTE PTR ds:[esi]
  41c075:	sub    BYTE PTR [edx-0x17],dh
  41c078:	ja     0x41c0a2
  41c07a:	jb     0x41c03b
  41c07c:	gs pop ss
  41c07e:	push   esp
  41c07f:	sar    BYTE PTR [eax],0x28
  41c082:	add    cl,bl
  41c084:	dec    eax
  41c085:	or     DWORD PTR [eax],eax
  41c087:	mov    cl,0x8b
  41c089:	fdiv   st(7),st
  41c08b:	xchg   edx,eax
  41c08c:	inc    ebp
  41c08d:	mov    WORD PTR [ebx+0x68],?
  41c090:	mov    cl,BYTE PTR [ebp+0x2d]
  41c093:	pop    edi
  41c094:	add    BYTE PTR [esi],al
  41c096:	mov    al,ds:0x66b9ac11
  41c09b:	mov    ah,0x11
  41c09d:	or     DWORD PTR [edx],esi
  41c09f:	iret   
  41c0a0:	lods   eax,DWORD PTR ds:[esi]
  41c0a1:	in     eax,dx
  41c0a2:	xor    DWORD PTR [eax-0x16cb276e],esi
  41c0a8:	mov    eax,0x87f10611
  41c0ad:	add    eax,0x49de3ff
  41c0b2:	add    edx,ebp
	...
  41c0dc:	dec    eax
  41c0dd:	cmp    ch,BYTE PTR [ebp+0x47]
  41c0e0:	pop    ebx
  41c0e1:	push   ss
  41c0e2:	pop    edi
  41c0e3:	add    BYTE PTR [eax-0x4],al
  41c0e6:	pop    ebx
  41c0e7:	dec    esp
  41c0e8:	sbb    edi,edi
  41c0ea:	pop    esp
  41c0eb:	jae    0x41c111
  41c0ed:	cmp    DWORD PTR [eax+0x5c],edx
  41c0f0:	push   ecx
  41c0f1:	add    BYTE PTR [ebp+eiz*2-0x6e],dh
  41c0f5:	rcr    BYTE PTR [esi+ebp*2+0x53],cl
  41c0f9:	jmp    0x736a:0xdf627260
  41c100:	ss add eax,0xd3577351
  41c106:	dec    DWORD PTR [edi+0x53]
  41c109:	aam    0x6e
  41c10b:	add    BYTE PTR [edx+0x0],dl
  41c10e:	jb     0x41c184
  41c110:	and    dh,BYTE PTR ds:0xeafd6d61
  41c116:	pusha  
  41c117:	and    dh,ah
  41c119:	push   DWORD PTR [ecx+0x0]
  41c11c:	fiadd  WORD PTR [ebp+0x75]
  41c11f:	bound  eax,QWORD PTR [edi]
  41c121:	aad    0x63
  41c123:	jne    0x41c136
  41c125:	(bad)  
  41c126:	jmp    FWORD PTR ds:0x6b5eec06
  41c12c:	loop   0x41c119
  41c12e:	outs   dx,BYTE PTR ds:[esi]
  41c12f:	gs mov al,0xc0
  41c132:	pusha  
  41c133:	outs   dx,DWORD PTR ds:[esi]
  41c134:	mov    esp,0xf26764e8
  41c139:	mov    ds:0xeab66570,al
  41c13e:	outs   dx,BYTE PTR fs:[esi]
	...
  41c168:	lds    esp,FWORD PTR [esi-0x4209e95]
  41c16e:	cmp    BYTE PTR [edx],ah
  41c170:	mov    dl,0xa4
  41c172:	std    
  41c173:	jne    0x41c138
  41c175:	bnd jo 0x41c1dd
  41c178:	fbld   TBYTE PTR [ebp+edi*8+0x73fafd52]
  41c17f:	ja     0x41c194
  41c181:	xlat   BYTE PTR ds:[ebx]
  41c182:	pusha  
  41c183:	pop    esp
  41c184:	dec    ebx
  41c185:	fistp  WORD PTR [edx]
  41c187:	imul   ebx,DWORD PTR [edx+ebx*8],0x4f
  41c18b:	pop    edi
  41c18c:	push   DWORD PTR [edi]
  41c18e:	and    ebp,DWORD PTR [ebx+0x1f]
  41c191:	add    BYTE PTR [edi],ch
  41c193:	push   esp
  41c194:	pop    ds
  41c195:	stc    
  41c196:	inc    edi
  41c197:	push   ecx
  41c198:	out    0xde,al
  41c19a:	xor    BYTE PTR [edi-0xc],ah
  41c19d:	icebp  
  41c19e:	xor    BYTE PTR [eax],al
  41c1a0:	adc    ecx,DWORD PTR [ebx]
  41c1a2:	xor    DWORD PTR [ebp+eax*1+0x11],esi
  41c1a6:	pop    ss
  41c1a7:	arpl   WORD PTR [ebx-0x2b],cx
  41c1aa:	xor    BYTE PTR [ebx-0x47],ah
  41c1ad:	shl    BYTE PTR [edx],cl
  41c1af:	imul   esp,DWORD PTR [esi-0x47a0ae50],0xffffff9f
  41c1b6:	cs ins DWORD PTR es:[edi],dx
  41c1b8:	mov    ecx,0xb4500404
  41c1bd:	mov    esi,0xcd964e2d
  41c1c2:	pop    ds
  41c1c3:	arpl   WORD PTR [ecx-0x669cb250],bx
  41c1c9:	pop    ebp
  41c1ca:	sbb    al,0x6e
	...
  41c1f4:	push   0xffffffb4
  41c1f6:	dec    ebp
  41c1f7:	ja     0x41c274
  41c1f9:	lds    eax,FWORD PTR [ecx]
  41c1fb:	dec    esi
  41c1fc:	jnp    0x41c25e
  41c1fe:	cmp    edx,DWORD PTR [ebx+ebx*4-0x66]
  41c202:	sub    DWORD PTR [ebx+0x77],ebp
  41c205:	mov    al,0x45
  41c207:	dec    esi
  41c208:	ins    BYTE PTR es:[edi],dx
  41c209:	je     0x41c22b
  41c20b:	jo     0x41c277
  41c20d:	mov    edx,ds
  41c20f:	sub    BYTE PTR [ebx+0x5f],cl
  41c212:	push   ss
  41c213:	data16 aas 
  41c215:	sbb    esp,DWORD PTR [edx+esi*2]
  41c218:	es jl  0x41c25d
  41c21b:	ins    DWORD PTR es:[edi],dx
  41c21c:	sub    eax,0x863208a
  41c221:	adc    eax,0x8f82031
  41c226:	push   esi
  41c227:	push   ds
  41c228:	pop    ss
  41c229:	adc    cl,BYTE PTR [eax+0x32]
  41c22c:	sub    BYTE PTR [ecx],cl
  41c22e:	sub    eax,0x42e8fb50
  41c233:	and    edx,edi
  41c235:	adc    al,0x50
  41c237:	push   ss
  41c238:	sbb    al,0x15
  41c23a:	push   eax
  41c23b:	pop    ss
  41c23c:	in     eax,0xe8
  41c23e:	cmp    DWORD PTR [ecx],esp
  41c240:	stc    
  41c241:	adc    al,BYTE PTR [edx+esi*1+0x4b]
  41c245:	inc    ebx
  41c246:	cmp    edx,DWORD PTR [ebx+ebp*1+0x25]
  41c24a:	add    al,0x33
  41c24c:	fild   QWORD PTR [edi]
  41c24e:	add    eax,0xfe2fd725
  41c253:	adc    eax,0x20fa1e6b
	...
  41c280:	mov    ecx,0x9b502509
  41c285:	jmp    0x1dfbe394
  41c28a:	add    BYTE PTR [esi],dl
  41c28c:	test   BYTE PTR ds:0xe9ad16d0,bl
  41c292:	(bad)  
  41c293:	and    al,0x9a
  41c295:	sbb    al,0xde
  41c297:	push   ss
  41c298:	cdq    
  41c299:	sub    eax,0x399f3de7
  41c29e:	pop    es
  41c29f:	and    BYTE PTR [eax+0x1c],ch
  41c2a2:	mov    bl,0x1c
  41c2a4:	sub    bh,BYTE PTR gs:[ebx+0x7275e1c]
  41c2ab:	xor    al,0x76
  41c2ad:	sbb    ebx,DWORD PTR [ebx-0x48c27afd]
  41c2b3:	jecxz  0x41c31d
  41c2b5:	cs call 0x2c2f:0x8827642f
  41c2bd:	sub    BYTE PTR [ebp+0x732a2be3],dl
  41c2c3:	and    al,0x27
  41c2c5:	sub    BYTE PTR [eax],al
  41c2c7:	mov    cs,WORD PTR [eax+0x4f]
  41c2ca:	push   esp
  41c2cb:	cdq    
  41c2cc:	test   al,0x28
  41c2ce:	jb     0x41c326
  41c2d0:	cmp    eax,0x5a446c30
  41c2d5:	or     DWORD PTR [esi+0x3d],eax
  41c2d8:	idiv   DWORD PTR [ecx]
  41c2da:	push   0x256344
  41c2df:	dec    edi
  41c2e0:	cmp    ebx,DWORD PTR [ecx]
  41c2e2:	jno    0x41c335
	...
  41c30c:	push   esp
  41c30d:	and    eax,0x1a4d076c
  41c312:	addr16 jmp 0x1da7e913
  41c318:	cmp    BYTE PTR cs:[edx+0x4],dh
  41c31c:	add    eax,DWORD PTR [edi+edi*1+0x3a]
  41c320:	je     0x41c35b
  41c322:	ins    DWORD PTR es:[edi],dx
  41c323:	pop    es
  41c324:	jnp    0x41c35b
  41c326:	inc    esi
  41c327:	sbb    eax,0x76e5097
  41c32c:	pop    esi
  41c32d:	xor    eax,0x1c7b0c51
  41c332:	jo     0x41c31d
  41c334:	cmp    BYTE PTR fs:[eax+ecx*8+0x5c],dh
  41c339:	xor    BYTE PTR [edx-0x17],dh
  41c33c:	mov    WORD PTR [edi+0x54],cs
  41c33f:	mov    ecx,0xbe662751
  41c344:	dec    eax
  41c345:	cmp    ah,BYTE PTR [ebx-0x45]
  41c348:	cs sub al,0x72
  41c34b:	lods   eax,DWORD PTR ds:[esi]
  41c34c:	push   ecx
  41c34d:	sbb    dh,BYTE PTR [edi+eax*1+0x1f]
  41c351:	and    al,0x6c
  41c353:	jmp    0x9cb9ef76
  41c358:	sbb    ecx,DWORD PTR [edi+0x67]
  41c35b:	lea    esi,ds:0x189d6609
  41c361:	sbb    ah,BYTE PTR [edi-0x6b]
  41c364:	gs out 0x66,eax
  41c367:	add    ah,dl
  41c369:	repnz inc DWORD PTR [ebp-0x3d]
  41c36d:	fdiv   DWORD PTR [ebx+0x53]
	...
  41c398:	cs std 
  41c39a:	ins    DWORD PTR es:[edi],dx
  41c39b:	gs xchg edx,eax
  41c39d:	dec    ecx
  41c39e:	jb     0x41c40f
  41c3a0:	std    
  41c3a1:	fldenv [eax+0x72]
  41c3a4:	mov    ds:0x665053d5,al
  41c3a9:	hlt    
  41c3aa:	outs   dx,BYTE PTR ds:[esi]
  41c3ab:	je     0x41c331
  41c3ad:	mul    DWORD PTR [ecx+0x0]
  41c3b0:	es loopne 0x41c40f
  41c3b3:	jo     0x41c3bb
  41c3b5:	clc    
  41c3b6:	dec    esi
  41c3b7:	je     0x41c3e8
  41c3b9:	jmp    0x4a983322
  41c3be:	push   0x61003572
  41c3c3:	push   eax
  41c3c4:	inc    esi
  41c3c5:	call   0x4bcac438
  41c3ca:	inc    eax
  41c3cb:	add    cl,dh
  41c3cd:	(bad)  
  41c3ce:	aas    
  41c3cf:	add    BYTE PTR [edi-0x29],cl
  41c3d2:	aas    
  41c3d3:	add    BYTE PTR [ebp-0x2d],dl
  41c3d6:	aas    
  41c3d7:	add    ch,cl
  41c3d9:	fistp  QWORD PTR [edi]
  41c3db:	add    BYTE PTR [ebx],dh
  41c3dd:	cmp    eax,DWORD PTR [eax+0x0]
  41c3e0:	test   DWORD PTR [esi+0x40],eax
  41c3e3:	add    BYTE PTR [esi+0x47],bl
  41c3e6:	inc    eax
  41c3e7:	add    BYTE PTR [esp+eax*2+0x40],dl
  41c3eb:	add    BYTE PTR [edi-0x15ffbfbe],dh
  41c3f1:	inc    ebx
  41c3f2:	inc    eax
  41c3f3:	add    ch,dl
  41c3f5:	inc    ecx
  41c3f6:	inc    eax
  41c3f7:	add    BYTE PTR [edx+0x404f],al
	...
  41c421:	add    BYTE PTR [eax],al
  41c423:	add    BYTE PTR [eax-0x4ffc016],ah
  41c429:	jmp    0xe9bfc46d
  41c42e:	aas    
  41c42f:	add    BYTE PTR [ebx+0xf],cl
  41c432:	and    BYTE PTR [eax+0x4b],al
  41c435:	mov    DWORD PTR ds:0x1cfd4b40,ebx
  41c43b:	inc    eax
  41c43c:	dec    ebx
  41c43d:	nop
  41c43e:	sbb    al,0x40
  41c440:	dec    ebx
  41c441:	rcr    DWORD PTR [eax+eax*2],0x4b
  41c445:	xor    edx,DWORD PTR [edi]
  41c447:	inc    eax
  41c448:	dec    ebx
  41c449:	cmp    ebp,DWORD PTR [edi]
  41c44b:	inc    eax
  41c44c:	dec    ebx
  41c44d:	push   ds
  41c44e:	xor    DWORD PTR [eax+0x4b],eax
  41c451:	adc    dl,BYTE PTR [eax+eax*2]
  41c454:	dec    ebx
  41c455:	hlt    
  41c456:	adc    al,BYTE PTR [eax+0x4b]
  41c459:	fist   DWORD PTR ds:0x17df4b40
  41c45f:	inc    eax
  41c460:	dec    ebx
  41c461:	mov    eax,0x414b4019
  41c466:	sbb    al,0x40
  41c468:	dec    ebx
  41c469:	pop    ecx
  41c46a:	sbb    al,0x40
  41c46c:	dec    ebx
  41c46d:	xchg   esp,eax
  41c46e:	push   ds
  41c46f:	inc    eax
  41c470:	dec    ebx
  41c471:	add    eax,0xeb4b401d
  41c476:	mov    DWORD PTR [eax+0x4b],eax
  41c479:	test   DWORD PTR [edx-0x7430b4c0],0x7a7a4b40
  41c483:	inc    eax
  41c484:	dec    ebx
  41c485:	add    DWORD PTR [ecx+0x40],edi
	...
  41c4b0:	dec    ebx
  41c4b1:	xchg   edi,eax
  41c4b2:	jns    0x41c4f4
  41c4b4:	dec    ebx
  41c4b5:	push   ss
  41c4b6:	jl     0x41c4f8
  41c4b8:	dec    ebx
  41c4b9:	add    eax,0x144b407b
  41c4be:	jnp    0x41c500
  41c4c0:	dec    ebx
  41c4c1:	or     BYTE PTR [esi+0x40],bh
  41c4c4:	dec    ebx
  41c4c5:	jmp    0x407e:0x784b407d
  41c4cc:	dec    ebx
  41c4cd:	adc    bh,BYTE PTR [ebp+0x40]
  41c4d0:	dec    ebx
  41c4d1:	or     DWORD PTR [edi+edi*2],edx
  41c4d4:	mov    ecx,DWORD PTR [ecx]
  41c4d6:	aam    0x67
  41c4d8:	mov    ecx,DWORD PTR [ecx]
  41c4da:	and    ebp,DWORD PTR [ebp+0xb]
  41c4dd:	or     DWORD PTR [ebp*2+0x5f6f090b],ecx
  41c4e4:	or     ecx,DWORD PTR [ecx]
  41c4e6:	inc    eax
  41c4e7:	pop    edi
  41c4e8:	or     ecx,DWORD PTR [ecx]
  41c4ea:	add    DWORD PTR [edi+0xb],ebx
  41c4ed:	or     DWORD PTR [edi+ebx*2+0xb],esi
  41c4f1:	or     DWORD PTR [ebp-0x49f6f4a1],ecx
  41c4f7:	pop    edi
  41c4f8:	or     ecx,DWORD PTR [ecx]
  41c4fa:	fbld   TBYTE PTR [eax+0xb]
  41c4fd:	or     DWORD PTR [eax+0x61],eax
  41c500:	or     ecx,DWORD PTR [ecx]
  41c502:	sub    eax,0x97090b62
  41c507:	popa   
  41c508:	or     ecx,DWORD PTR [ecx]
  41c50a:	add    ebx,0xc50a090b
  41c510:	or     ecx,DWORD PTR [ecx]
  41c512:	or     al,0xc5
	...
  41c53c:	or     ecx,DWORD PTR [ecx]
  41c53e:	mov    esp,0x2b090bc4
  41c543:	(bad)  
  41c544:	mov    ecx,DWORD PTR [ecx]
  41c546:	dec    ecx
  41c547:	(bad)  
  41c548:	mov    ecx,DWORD PTR [ecx]
  41c54a:	fcmovb st,st(7)
  41c54c:	mov    ecx,DWORD PTR [ecx]
  41c54e:	int    0xc8
  41c550:	mov    ecx,DWORD PTR [ecx]
  41c552:	aas    
  41c553:	enter  0x98b,0x14
  41c557:	int    0x8b
  41c559:	or     DWORD PTR [ecx-0xcf67434],edx
  41c55f:	ror    BYTE PTR [ebx-0x742f30f7],1
  41c565:	or     DWORD PTR [edi-0x5df6744c],esi
  41c56b:	mov    dh,0x8b
  41c56d:	or     DWORD PTR [edi-0x48],ebx
  41c570:	mov    ecx,DWORD PTR [ecx]
  41c572:	add    BYTE PTR [eax-0x5d],cl
  41c575:	dec    ecx
  41c576:	add    BYTE PTR [eax+eiz*4-0x6f78ffb7],dl
  41c57d:	dec    ecx
  41c57e:	add    ch,bh
  41c580:	(bad)
  41c584:	pop    es
  41c585:	dec    edx
  41c586:	add    al,ah
  41c588:	dec    BYTE PTR [ecx+0x0]
  41c58b:	outs   dx,BYTE PTR ds:[esi]
  41c58c:	test   BYTE PTR [ecx+0x0],0xe9
  41c590:	dec    eax
  41c591:	or     DWORD PTR [eax],eax
  41c593:	jmp    0xe941cee0
  41c598:	dec    eax
  41c599:	or     DWORD PTR [eax],eax
  41c59b:	jmp    0xe941cee8
	...
  41c5c8:	dec    eax
  41c5c9:	or     DWORD PTR [eax],eax
  41c5cb:	sub    bh,BYTE PTR [ebx]
  41c5cd:	sub    al,0x63
  41c5cf:	aas    
  41c5d0:	arpl   cx,bp
  41c5d2:	inc    edi
  41c5d3:	dec    eax
  41c5d4:	pop    esi
  41c5d5:	and    DWORD PTR [eax],eax
  41c5d7:	sbb    dh,BYTE PTR [ebx]
  41c5d9:	aam    0x53
  41c5db:	sbb    al,0x1e
  41c5dd:	loopne 0x41c625
  41c5df:	sbb    al,0x17
  41c5e1:	inc    esi
  41c5e2:	push   edx
  41c5e3:	cmp    eax,0xe9494564
  41c5e8:	sub    BYTE PTR gs:[esi],ch
  41c5eb:	or     al,0x67
  41c5ed:	sub    BYTE PTR [eax],al
  41c5ef:	les    ebx,FWORD PTR [eax]
  41c5f1:	ficom  DWORD PTR [edi-0x17]
  41c5f4:	pop    esp
  41c5f5:	pop    ss
  41c5f6:	jae    0x41c5fc
  41c5f8:	inc    edi
  41c5f9:	es addr16 or eax,0xf55f2a19
  41c600:	dec    eax
  41c601:	or     al,0x7
  41c603:	hlt    
  41c604:	inc    esi
  41c605:	add    BYTE PTR [edx],cl
  41c607:	lock sub dl,dl
  41c60a:	ins    BYTE PTR es:[edi],dx
  41c60b:	fcomp  QWORD PTR [ecx-0x17]
  41c60e:	or     ah,bl
  41c610:	call   0x1e42293c
  41c615:	test   al,0x6
  41c617:	and    eax,0xd1da7f3
  41c61c:	call   0x52a82b1f
  41c621:	add    BYTE PTR [eax],ah
  41c623:	gs stos BYTE PTR es:[edi],al
  41c625:	fisubr WORD PTR [esi+0x74]
  41c628:	add    bh,bh
  41c62a:	pop    ds
  41c62b:	and    BYTE PTR [eax],al
	...
  41c651:	add    BYTE PTR [eax],al
  41c653:	add    BYTE PTR [edi-0x6df6e24a],dl
  41c659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c65a:	outs   dx,DWORD PTR fs:[esi]
  41c65c:	fstp   DWORD PTR ss:[edi]
  41c65f:	or     DWORD PTR [edx-0x548e8f28],eax
  41c665:	add    cl,BYTE PTR [edx]
  41c667:	and    dh,al
  41c669:	jmp    0x3022:0xa79b206b
  41c670:	inc    edx
  41c671:	or     eax,0xac502020
  41c676:	jo     0x41c69a
  41c678:	push   edx
  41c679:	lods   eax,DWORD PTR ds:[esi]
  41c67a:	sbb    eax,0x4f0d4220
  41c67f:	push   0x456bd907
  41c684:	sbb    ch,ah
  41c686:	pop    esi
  41c687:	jne    0x41c69f
  41c689:	in     al,dx
  41c68a:	cmp    al,0x0
  41c68c:	xor    ebp,esp
  41c68e:	pusha  
  41c68f:	ins    BYTE PTR es:[edi],dx
  41c690:	ds mov esi,0xd9562e2f
  41c696:	imul   eax,DWORD PTR [eax],0x47
  41c699:	cmc    
  41c69a:	outs   dx,DWORD PTR ds:[esi]
  41c69b:	ins    BYTE PTR es:[edi],dx
  41c69c:	pop    ebp
  41c69d:	sti    
  41c69e:	pusha  
  41c69f:	jb     0x41c69d
  41c6a1:	jmp    0x41c71a
  41c6a3:	gs xor bl,dh
  41c6a6:	sub    BYTE PTR [ecx],dh
  41c6a8:	fistp  QWORD PTR [ebx+0xd6a312a]
  41c6ae:	add    BYTE PTR [eax],al
  41c6b0:	and    al,BYTE PTR [edi]
  41c6b2:	dec    edi
  41c6b3:	gs dec ebx
  41c6b5:	imul   ebp,DWORD PTR [esi],0x70
	...
  41c6df:	add    BYTE PTR [esi-0x52],ah
  41c6e2:	adc    al,0x6d
  41c6e4:	rcl    DWORD PTR gs:0x2a4e9b63,0x76
  41c6ec:	jb     0x41c6ba
  41c6ee:	es data16 mov al,gs:0x7f7f6334
  41c6f6:	and    edx,DWORD PTR [eax+0x59]
  41c6f9:	jns    0x41c712
  41c6fb:	addr16 aaa 
  41c6fd:	test   DWORD PTR [eax],ebp
  41c6ff:	arpl   WORD PTR [ebx+0x4f],cx
  41c702:	es inc ecx
  41c704:	and    eax,DWORD PTR [ecx+0x6226652f]
  41c70a:	xor    BYTE PTR [edx+esi*1-0x7e],dh
  41c70e:	sbb    dl,BYTE PTR [eax+0x19]
  41c711:	mov    DWORD PTR [edi],edx
  41c713:	addr16 daa 
  41c715:	inc    ebp
  41c716:	and    eax,0x26cf4b63
  41c71b:	inc    ecx
  41c71c:	stc    
  41c71d:	inc    esp
  41c71e:	and    esi,DWORD PTR [esi+eiz*8-0x25]
  41c722:	sub    al,0x69
  41c724:	out    dx,al
  41c725:	cmp    DWORD PTR [edx+esi*2],esi
  41c728:	loop   0x41c703
  41c72a:	sub    ch,BYTE PTR [esi+ebp*8+0x42]
  41c72e:	daa    
  41c72f:	add    al,bh
  41c731:	dec    esp
  41c732:	inc    edx
  41c733:	pop    edi
  41c734:	call   0xfbb1de2f
  41c739:	in     eax,dx
  41c73a:	sub    dh,BYTE PTR [esi-0x4e]
  41c73d:	or     al,0x27
  41c73f:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41c741:	mov    al,ds:0x6332
	...
  41c76a:	add    BYTE PTR [eax],al
  41c76c:	cdq    
  41c76d:	add    eax,0x8e9c7411
  41c772:	sub    BYTE PTR [eax-0x67],dl
  41c775:	or     DWORD PTR [esi],edx
  41c777:	scas   eax,DWORD PTR es:[di]
  41c779:	or     eax,0x94b6325
  41c77e:	mov    edx,0xca238428
  41c783:	adc    DWORD PTR [eax+0x28],ebp
  41c786:	fisubr DWORD PTR [eax]
  41c788:	mov    WORD PTR [esi+edi*4],ds
  41c78b:	pop    ss
  41c78c:	xchg   esp,eax
  41c78d:	cmp    DWORD PTR [ecx-0x34df8ad4],edi
  41c793:	sub    BYTE PTR [esi+0x2c],ch
  41c796:	out    0x32,eax
  41c798:	push   0x6c12ba48
  41c79d:	sub    dl,BYTE PTR [ebp-0x73dfa6cd]
  41c7a3:	and    al,0x39
  41c7a5:	adc    BYTE PTR [ebx+0x7d2c322e],bh
  41c7ab:	xor    edi,DWORD PTR [ecx]
  41c7ad:	and    BYTE PTR [ebp+0x2c],bh
  41c7b0:	pop    ds
  41c7b1:	sub    al,0x86
  41c7b3:	sub    BYTE PTR [ebx+0x9],cl
  41c7b6:	out    0x3,eax
  41c7b8:	dec    ebx
  41c7b9:	or     edi,esp
  41c7bb:	add    ecx,DWORD PTR [ebx+0x9]
  41c7be:	out    0x3,eax
  41c7c0:	dec    ebx
  41c7c1:	or     edi,esp
  41c7c3:	add    ecx,DWORD PTR [ebx+0x9]
  41c7c6:	out    0x3,eax
  41c7c8:	dec    ebx
  41c7c9:	or     edi,esp
  41c7cb:	add    ecx,DWORD PTR [ebx+0x9]
  41c7ce:	out    0x3,eax
	...
  41c7f8:	dec    ebx
  41c7f9:	or     edi,esp
  41c7fb:	add    ecx,DWORD PTR [ebx+0x9]
  41c7fe:	out    0x3,eax
  41c800:	dec    ebx
  41c801:	or     edi,esp
  41c803:	add    ecx,DWORD PTR [ebx+0x9]
  41c806:	out    0x3,eax
  41c808:	dec    ebx
  41c809:	or     edi,esp
  41c80b:	add    ecx,DWORD PTR [ebx+0x9]
  41c80e:	out    0x3,eax
  41c810:	dec    ebx
  41c811:	or     edi,esp
  41c813:	add    ecx,DWORD PTR [ebx+0x9]
  41c816:	out    0x3,eax
  41c818:	dec    ebx
  41c819:	or     edi,esp
  41c81b:	add    ecx,DWORD PTR [ebx+0x9]
  41c81e:	add    cl,ch
  41c820:	dec    eax
  41c821:	or     DWORD PTR [eax],eax
  41c823:	jmp    0xe941d170
  41c828:	dec    eax
  41c829:	or     DWORD PTR [eax],eax
  41c82b:	jmp    0xe941d178
  41c830:	dec    eax
  41c831:	or     DWORD PTR [eax],eax
  41c833:	jmp    0xe941d180
  41c838:	dec    eax
  41c839:	or     DWORD PTR [eax],eax
  41c83b:	jmp    0xe941d188
  41c840:	dec    eax
  41c841:	or     DWORD PTR [eax],eax
  41c843:	jmp    0xe941d190
  41c848:	dec    eax
  41c849:	or     DWORD PTR [eax],eax
  41c84b:	jmp    0xe941d198
  41c850:	dec    eax
  41c851:	or     DWORD PTR [eax],eax
  41c853:	jmp    0xe941d1a0
  41c858:	dec    eax
  41c859:	or     DWORD PTR [eax],eax
  41c85b:	jmp    0x41c860
	...
  41c884:	dec    eax
  41c885:	or     DWORD PTR [eax],eax
  41c887:	jmp    0xe941d1d4
  41c88c:	dec    eax
  41c88d:	or     DWORD PTR [eax],eax
  41c88f:	jmp    0xe941d1dc
  41c894:	dec    eax
  41c895:	or     DWORD PTR [eax],eax
  41c897:	jmp    0xe941d1e4
  41c89c:	dec    eax
  41c89d:	or     DWORD PTR [eax],eax
  41c89f:	jmp    0xe941d1ec
  41c8a4:	dec    eax
  41c8a5:	or     DWORD PTR [eax],eax
  41c8a7:	jmp    0xe941d1f4
  41c8ac:	dec    eax
  41c8ad:	or     DWORD PTR [eax],eax
  41c8af:	jmp    0xe941d1fc
  41c8b4:	dec    eax
  41c8b5:	or     DWORD PTR [eax],eax
  41c8b7:	jmp    0xe941d204
  41c8bc:	dec    eax
  41c8bd:	or     DWORD PTR [eax],eax
  41c8bf:	add    BYTE PTR [edx],ah
  41c8c1:	or     al,0x0
  41c8c3:	add    BYTE PTR [edx],dh
  41c8c5:	or     al,0x0
  41c8c7:	add    BYTE PTR [edx],dh
  41c8c9:	or     al,0x0
  41c8cb:	add    BYTE PTR [edx],ah
  41c8cd:	or     al,0x0
  41c8cf:	add    BYTE PTR [edx],ah
  41c8d1:	or     al,0x0
  41c8d3:	add    dl,dh
  41c8d5:	or     eax,DWORD PTR [eax]
  41c8d7:	add    dl,dh
  41c8d9:	or     eax,DWORD PTR [eax]
  41c8db:	add    dl,ah
  41c8dd:	or     eax,DWORD PTR [eax]
  41c8df:	add    dl,ah
  41c8e1:	or     eax,DWORD PTR [eax]
  41c8e3:	add    dl,dh
  41c8e5:	or     eax,DWORD PTR [eax]
	...
  41c90f:	add    dl,dh
  41c911:	or     eax,DWORD PTR [eax]
  41c913:	add    dl,ah
  41c915:	or     eax,DWORD PTR [eax]
  41c917:	add    dl,ah
  41c919:	or     eax,DWORD PTR [eax]
  41c91b:	add    BYTE PTR [edx-0x4dfffff5],dh
  41c921:	or     eax,DWORD PTR [eax]
  41c923:	add    BYTE PTR [edx-0x5dfffff5],ah
  41c929:	or     eax,DWORD PTR [eax]
  41c92b:	add    BYTE PTR [edx-0x4dfffff5],dh
  41c931:	or     eax,DWORD PTR [eax]
  41c933:	add    BYTE PTR [edx-0x5dfffff5],ah
  41c939:	or     eax,DWORD PTR [eax]
  41c93b:	add    BYTE PTR [edx+0xb],dh
  41c93e:	add    BYTE PTR [eax],al
  41c940:	jb     0x41c94d
  41c942:	add    BYTE PTR [eax],al
  41c944:	bound  ecx,QWORD PTR [ebx]
  41c946:	add    BYTE PTR [eax],al
  41c948:	bound  ecx,QWORD PTR [ebx]
  41c94a:	add    BYTE PTR [eax],al
  41c94c:	jb     0x41c959
  41c94e:	add    BYTE PTR [eax],al
  41c950:	jb     0x41c95d
  41c952:	add    BYTE PTR [eax],al
  41c954:	bound  ecx,QWORD PTR [ebx]
  41c956:	add    BYTE PTR [eax],al
  41c958:	bound  ecx,QWORD PTR [ebx]
  41c95a:	add    BYTE PTR [eax],al
  41c95c:	xor    cl,BYTE PTR [ebx]
  41c95e:	add    BYTE PTR [eax],al
  41c960:	dec    ebx
  41c961:	mov    al,ds:0xa04b0001
  41c966:	add    DWORD PTR [eax],eax
  41c968:	dec    ebx
  41c969:	mov    al,ds:0xa04b0001
  41c96e:	add    DWORD PTR [eax],eax
  41c970:	dec    ebx
  41c971:	mov    al,ds:0x1
	...
  41c99a:	add    BYTE PTR [eax],al
  41c99c:	dec    ebx
  41c99d:	mov    al,ds:0xa04b0001
  41c9a2:	add    DWORD PTR [eax],eax
  41c9a4:	dec    ebx
  41c9a5:	mov    al,ds:0xa04b0001
  41c9aa:	add    DWORD PTR [eax],eax
  41c9ac:	dec    ebx
  41c9ad:	mov    al,ds:0xa04b0001
  41c9b2:	add    DWORD PTR [eax],eax
  41c9b4:	dec    ebx
  41c9b5:	mov    al,ds:0xa04b0001
  41c9ba:	add    DWORD PTR [eax],eax
  41c9bc:	dec    ebx
  41c9bd:	mov    al,ds:0xa04b0001
  41c9c2:	add    DWORD PTR [eax],eax
  41c9c4:	dec    ebx
  41c9c5:	mov    al,ds:0xa04b0001
  41c9ca:	add    DWORD PTR [eax],eax
  41c9cc:	dec    ebx
  41c9cd:	mov    al,ds:0xa04b0001
  41c9d2:	add    DWORD PTR [eax],eax
  41c9d4:	dec    ebx
  41c9d5:	mov    al,ds:0xa14b0001
  41c9da:	loopne 0x41ca1e
  41c9dc:	sub    al,0x29
  41c9de:	push   0xb8a69ccb
  41c9e3:	mov    edx,0x323036e3
  41c9e8:	pop    ebx
  41c9e9:	sub    DWORD PTR [ebp-0x35],ebp
  41c9ec:	mov    eax,fs:0x1fe442e6
  41c9f2:	add    al,0x40
  41c9f4:	dec    ebx
  41c9f5:	add    BYTE PTR [eax+edx*1],al
  41c9f8:	dec    ebx
  41c9f9:	test   al,0x1
  41c9fb:	add    al,0x4b
  41c9fd:	mov    ds:0xff01,al
	...
  41ca26:	add    BYTE PTR [eax],al
  41ca28:	dec    esp
  41ca29:	or     edi,esp
  41ca2b:	add    ecx,ebx
  41ca2d:	or     bh,ah
  41ca2f:	add    ecx,DWORD PTR [ebx+0x6b03e709]
  41ca35:	or     edi,esp
  41ca37:	add    ebx,DWORD PTR [ebx+0x9]
  41ca3a:	out    0x3,eax
  41ca3c:	push   ebx
  41ca3d:	or     edi,esp
  41ca3f:	add    eax,DWORD PTR [edi+0x9]
  41ca42:	out    0x3,eax
  41ca44:	dec    ecx
  41ca45:	or     edi,esp
  41ca47:	add    ecx,DWORD PTR [esi+ecx*4]
  41ca4a:	out    0x83,eax
  41ca4c:	dec    ebx
  41ca4d:	or     edi,esp
  41ca4f:	inc    ebx
  41ca50:	dec    ebx
  41ca51:	or     edi,esp
  41ca53:	jecxz  0x41ca49
  41ca55:	(bad)  
  41ca56:	out    0xf3,eax
  41ca58:	in     al,dx
  41ca59:	(bad)  
  41ca5a:	out    0xb,eax
  41ca5c:	dec    ebx
  41ca5d:	or     edi,esp
  41ca5f:	(bad)  
  41ca60:	fmul   QWORD PTR [ebp+0x94b05e7]
  41ca66:	out    0x4,eax
  41ca68:	dec    ebx
  41ca69:	or     DWORD PTR [edi+0x4],esp
  41ca6c:	dec    ebx
  41ca6d:	or     DWORD PTR [edi-0x38f6b4fd],esp
  41ca73:	add    ecx,DWORD PTR [ebx+0x9]
  41ca76:	test   DWORD PTR [ebx],0x3ef094b
  41ca7c:	dec    ebx
  41ca7d:	or     ebx,esp
  41ca7f:	add    ecx,DWORD PTR [ebx+0x9]
  41ca82:	jmp    0xe84b158a
  41ca87:	add    ecx,DWORD PTR [ebx+0x9]
  41ca8a:	pop    ds
  41ca8b:	aam    0x0
	...
  41cab1:	add    BYTE PTR [eax],al
  41cab3:	add    BYTE PTR [ecx+ebp*8],ch
  41cab6:	(bad)  
  41cab7:	repz inc esp
  41cab9:	or     DWORD PTR [eax],edx
  41cabb:	aad    0x2d
  41cabd:	call   0x887bfb1
  41cac2:	add    esi,edx
  41cac4:	xor    ch,bl
  41cac6:	loopne 0x41cabd
  41cac8:	push   edx
  41cac9:	or     eax,DWORD PTR [eax]
  41cacb:	bnd jge 0x41caae
  41cace:	and    bh,ch
  41cad0:	jp     0x41caad
  41cad2:	and    eax,0x5ff3907
  41cad7:	fcomp  QWORD PTR [ebx]
  41cad9:	loopne 0x41cafd
  41cadb:	hlt    
  41cadc:	cmp    eax,DWORD PTR [eax]
  41cade:	add    ecx,ebp
  41cae0:	cld    
  41cae1:	loopne 0x41cb06
  41cae3:	in     eax,0x34
  41cae5:	add    DWORD PTR [edx+eiz*8],eax
  41cae8:	adc    eax,0x4ee80102
  41caed:	add    eax,0xfd3ee106
  41caf2:	or     eax,0x12f9fff6
  41caf7:	idiv   bh
  41caf9:	icebp  
  41cafa:	sbb    esp,esp
  41cafc:	clc    
  41cafd:	add    dl,BYTE PTR ds:0x190aece9
  41cb03:	test   DWORD PTR [ebx-0xb],0x1d6d706
  41cb0a:	add    eax,edx
  41cb0c:	dec    ecx
  41cb0d:	inc    BYTE PTR ds:0xff00d5d3
  41cb13:	rcr    BYTE PTR [ebp+0xcf23ee],1
	...
  41cb3d:	add    BYTE PTR [eax],al
  41cb3f:	add    BYTE PTR [edx-0x5324db11],bl
  41cb45:	in     al,dx
  41cb46:	sub    al,0xc2
  41cb48:	cwde   
  41cb49:	out    0x34,al
  41cb4b:	enter  0xdf94,0x26
  41cb4f:	mov    eax,0xe91cf0a5
  41cb54:	xchg   esp,eax
  41cb55:	mov    eax,DWORD PTR [eax]
  41cb57:	jmp    0xe941d4a4
  41cb5c:	dec    eax
  41cb5d:	mov    ebp,?
  41cb5f:	in     eax,0x7c
  41cb61:	mov    eax,DWORD PTR [eax]
  41cb63:	in     eax,dx
  41cb64:	dec    eax
  41cb65:	mov    WORD PTR [eax],es
  41cb67:	in     eax,0x6c
  41cb69:	mov    edi,ebp
  41cb6b:	add    BYTE PTR [esi+0x8],dh
  41cb6e:	add    BYTE PTR [eax],al
  41cb70:	jb     0x41cb7a
  41cb72:	std    
  41cb73:	jmp    DWORD PTR [edx-0x74]
  41cb76:	std    
  41cb77:	jmp    DWORD PTR [edx-0x74]
  41cb7a:	inc    BYTE PTR [eax]
  41cb7c:	ss mov esi,?
  41cb7f:	add    BYTE PTR [edx],dh
  41cb81:	mov    ebp,?
  41cb83:	jmp    DWORD PTR [esi]
  41cb85:	mov    ebp,?
  41cb87:	add    BYTE PTR [esi],ah
  41cb89:	or     ch,bh
  41cb8b:	add    BYTE PTR [edx],dh
  41cb8d:	or     BYTE PTR [eax],al
  41cb8f:	add    DWORD PTR [esi],esp
  41cb91:	or     BYTE PTR [eax],al
  41cb93:	add    BYTE PTR [esi],ah
  41cb95:	mov    ebp,?
  41cb97:	jmp    DWORD PTR [edx]
  41cb99:	mov    ebp,?
  41cb9b:	add    dl,dh
  41cb9d:	mov    edi,ebp
  41cb9f:	add    dl,dh
  41cba1:	mov    edi,esi
  41cba3:	inc    DWORD PTR [eax]
	...
  41cbc9:	add    BYTE PTR [eax],al
  41cbcb:	add    dl,ah
  41cbcd:	mov    edi,esi
  41cbcf:	jmp    edx
  41cbd1:	pop    es
  41cbd2:	std    
  41cbd3:	add    dl,dh
  41cbd5:	pop    es
  41cbd6:	std    
  41cbd7:	add    dh,ah
  41cbd9:	mov    edi,ebp
  41cbdb:	add    dh,ah
  41cbdd:	pop    es
  41cbde:	std    
  41cbdf:	jmp    esi
  41cbe1:	pop    es
  41cbe2:	add    BYTE PTR [ecx],al
  41cbe4:	mov    dh,0x7
  41cbe6:	add    BYTE PTR [ecx],al
  41cbe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbe9:	pop    es
  41cbea:	std    
  41cbeb:	jmp    DWORD PTR [edx-0x59fffff9]
  41cbf1:	mov    edi,ebp
  41cbf3:	push   DWORD PTR [esi-0x4d000175]
  41cbf9:	pop    es
  41cbfa:	add    BYTE PTR [ecx],al
  41cbfc:	mov    ds:0xa6fffd07,al
  41cc01:	mov    edi,esi
  41cc03:	add    BYTE PTR [esi+0x7],dh
  41cc06:	add    BYTE PTR [eax],al
  41cc08:	jb     0x41cc11
  41cc0a:	std    
  41cc0b:	add    BYTE PTR [ebx-0x5e],cl
  41cc0e:	std    
  41cc0f:	dec    BYTE PTR [ebx-0x5e]
  41cc12:	add    DWORD PTR [eax],eax
  41cc14:	dec    edx
  41cc15:	mov    ds:0xa24a0001,al
  41cc1a:	std    
  41cc1b:	call   DWORD PTR [ebp+ebx*4+0x1]
  41cc1f:	dec    DWORD PTR [ebx-0x5e]
  41cc22:	add    edi,edi
  41cc24:	inc    esp
  41cc25:	mov    eax,ds:0xa53cfefd
  41cc2a:	add    DWORD PTR [eax],eax
  41cc2c:	dec    edx
  41cc2d:	mov    al,ds:0xfffd
	...
  41cc56:	add    BYTE PTR [eax],al
  41cc58:	sub    al,0xa5
  41cc5a:	add    DWORD PTR [eax],eax
  41cc5c:	dec    ebx
  41cc5d:	pushf  
  41cc5e:	std    
  41cc5f:	dec    DWORD PTR [ebx-0x5c]
  41cc62:	std    
  41cc63:	(bad)  
  41cc64:	adc    al,0x9d
  41cc66:	std    
  41cc67:	dec    BYTE PTR [ebx-0x5c]
  41cc6a:	add    edi,edi
  41cc6c:	add    al,0xa1
  41cc6e:	add    edi,edi
  41cc70:	dec    ebx
  41cc71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc72:	std    
  41cc73:	dec    DWORD PTR [ebx-0x64]
  41cc76:	add    DWORD PTR [eax],eax
  41cc78:	dec    edx
  41cc79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc7a:	std    
  41cc7b:	jmp    esp
  41cc7d:	pushf  
  41cc7e:	std    
  41cc7f:	(bad)  
  41cc80:	fsub   QWORD PTR [eax-0x63b40103]
  41cc86:	std    
  41cc87:	dec    esp
  41cc89:	mov    al,ds:0xa04bfffd
  41cc8e:	std    
  41cc8f:	dec    DWORD PTR [ebx-0x60]
  41cc92:	add    DWORD PTR [eax],eax
  41cc94:	dec    ebx
  41cc95:	pushf  
  41cc96:	add    edi,edi
  41cc98:	lods   al,BYTE PTR ds:[esi]
  41cc99:	mov    al,ds:0xa0a4fefd
  41cc9e:	add    DWORD PTR [eax],eax
  41cca0:	dec    ebx
  41cca1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cca2:	add    edi,edi
  41cca4:	dec    ebx
  41cca5:	rol    BYTE PTR [ecx-0x7e5f34f0],0x0
  41ccac:	retf   
  41ccad:	or     edi,esp
  41ccaf:	or     DWORD PTR [ebx+0x9],0x7
  41ccb3:	test   BYTE PTR [ebx+0x9],bl
  41ccb6:	out    0x3,eax
  41ccb8:	pop    ebx
  41ccb9:	or     DWORD PTR [edi],eax
  41ccbb:	add    al,0x0
	...
  41cce1:	add    BYTE PTR [eax],al
  41cce3:	add    BYTE PTR [ebx+0x9],cl
  41cce6:	pop    es
  41cce7:	add    al,0x3b
  41cce9:	mov    DWORD PTR [edi],eax
  41cceb:	test   BYTE PTR [ebx-0x77],cl
  41ccee:	pop    es
  41ccef:	add    al,0x4b
  41ccf1:	mov    DWORD PTR [edi],eax
  41ccf3:	test   BYTE PTR [ebx-0x77],bl
  41ccf6:	out    0x83,eax
  41ccf8:	pop    ebx
  41ccf9:	mov    edi,esp
  41ccfb:	add    ecx,DWORD PTR [ebx-0x77]
  41ccfe:	out    0x83,eax
  41cd00:	dec    ebx
  41cd01:	mov    edi,esp
  41cd03:	add    edi,DWORD PTR [ebx]
  41cd05:	or     edi,eax
  41cd07:	add    ecx,DWORD PTR [ebx+0x9]
  41cd0a:	mov    DWORD PTR [ebx],0x83e7893b
  41cd10:	cmp    ecx,DWORD PTR [ecx]
  41cd12:	mov    DWORD PTR [ebx],0x8407095b
  41cd18:	dec    ebx
  41cd19:	mov    edi,esp
  41cd1b:	add    ecx,DWORD PTR [ebx+0x9]
  41cd1e:	out    0x3,eax
  41cd20:	dec    ebx
  41cd21:	mov    edi,esp
  41cd23:	or     DWORD PTR [ebx+0x9],0x7
  41cd27:	test   BYTE PTR [ebx],bh
  41cd29:	or     edi,esp
  41cd2b:	add    edi,DWORD PTR [ebx]
  41cd2d:	mov    DWORD PTR [edi],eax
  41cd2f:	add    al,0x3b
  41cd31:	or     DWORD PTR [edi],eax
  41cd33:	add    al,0x4b
  41cd35:	mov    edi,esp
  41cd37:	add    ecx,DWORD PTR [ebx+0x9]
  41cd3a:	out    0x83,eax
  41cd3c:	pop    ebx
  41cd3d:	or     edi,eax
  41cd3f:	or     DWORD PTR [ebx+0x9],0xffffffe7
  41cd43:	cmp    DWORD PTR [ebx],0xffffff89
  41cd46:	out    0x3,eax
	...
  41cd70:	cmp    ecx,DWORD PTR [ecx+0x94b83c7]
  41cd76:	add    cl,ch
  41cd78:	dec    eax
  41cd79:	or     DWORD PTR [eax],eax
  41cd7b:	leave  
  41cd7c:	enter  0xfff8,0x8
  41cd80:	inc    edi
  41cd81:	stc    
  41cd82:	jg     0x41cd6d
  41cd84:	dec    eax
  41cd85:	stc    
  41cd86:	dec    DWORD PTR [eax]
  41cd88:	(bad)  
  41cd89:	or     BYTE PTR [eax+0x7ff948e9],al
  41cd8f:	jmp    0xe9c1c65c
  41cd94:	enter  0x8,0xe9
  41cd98:	dec    eax
  41cd99:	stc    
  41cd9a:	jg     0x41cd85
  41cd9c:	enter  0x8009,0xc9
  41cda0:	dec    eax
  41cda1:	or     DWORD PTR [eax],eax
  41cda3:	leave  
  41cda4:	enter  0x8019,0xc9
  41cda8:	enter  0x19,0xc9
  41cdac:	dec    eax
  41cdad:	or     DWORD PTR [eax],eax
  41cdaf:	jmp    0xe941d77c
  41cdb4:	dec    eax
  41cdb5:	or     DWORD PTR [eax+0x9c8c9],eax
  41cdbb:	jmp    0xe9c1e788
  41cdc0:	dec    eax
  41cdc1:	sbb    DWORD PTR [eax],eax
  41cdc3:	or     DWORD PTR [edi+0x9],ecx
  41cdc6:	or     BYTE PTR [ecx],0x47
  41cdc9:	sbb    DWORD PTR [eax],eax
  41cdcb:	or     edi,ecx
  41cdcd:	or     DWORD PTR [eax-0x7ff6b8f7],eax
  41cdd3:	or     DWORD PTR [eax],eax
	...
  41cdf9:	add    BYTE PTR [eax],al
  41cdfb:	add    BYTE PTR [edi+0x19],cl
  41cdfe:	add    cl,ch
  41ce00:	enter  0x19,0xe9
  41ce04:	dec    eax
  41ce05:	or     DWORD PTR [eax],eax
  41ce07:	jmp    0xc9c1d7d4
  41ce0c:	enter  0x9,0xe9
  41ce10:	dec    eax
  41ce11:	or     DWORD PTR [eax-0x7fe6b737],eax
  41ce17:	add    BYTE PTR [edx-0x5d7fef74],dl
  41ce1d:	mov    WORD PTR [eax],ss
  41ce1f:	add    BYTE PTR [edx+0x7200000a],ch
  41ce25:	or     al,BYTE PTR [edx]
  41ce27:	or     BYTE PTR [edx+0xc],dh
  41ce2a:	add    BYTE PTR [eax],al
  41ce2c:	jp     0x41ce3a
  41ce2e:	add    cl,BYTE PTR [eax]
  41ce30:	bound  ecx,QWORD PTR [edx]
  41ce32:	add    BYTE PTR [eax],cl
  41ce34:	jb     0x41ce42
  41ce36:	add    BYTE PTR [eax],al
  41ce38:	pop    edx
  41ce39:	or     al,BYTE PTR [edx]
  41ce3b:	add    BYTE PTR [edx+0xa],ah
  41ce3e:	add    BYTE PTR [eax],cl
  41ce40:	push   0xc
  41ce42:	add    al,BYTE PTR [eax]
  41ce44:	sub    cl,BYTE PTR [eax+eax*1]
  41ce47:	or     BYTE PTR [edx],bh
  41ce49:	or     al,0x0
  41ce4b:	or     BYTE PTR [edx],ah
  41ce4d:	or     al,0x2
  41ce4f:	add    BYTE PTR [edx],ch
  41ce51:	or     al,BYTE PTR [edx]
  41ce53:	or     BYTE PTR [edx],ch
  41ce55:	or     al,0x2
  41ce57:	add    BYTE PTR [edx],dh
  41ce59:	or     al,0x2
  41ce5b:	or     BYTE PTR [edx],bl
  41ce5d:	or     al,BYTE PTR [eax]
	...
  41ce87:	add    BYTE PTR [edx],ah
  41ce89:	or     al,0x0
  41ce8b:	or     dl,ch
  41ce8d:	or     eax,DWORD PTR [eax]
  41ce8f:	add    dl,dh
  41ce91:	or     DWORD PTR [edx],eax
  41ce93:	or     dl,ah
  41ce95:	or     DWORD PTR [eax],eax
  41ce97:	add    dl,ah
  41ce99:	or     DWORD PTR [edx],eax
  41ce9b:	add    dl,dh
  41ce9d:	or     eax,DWORD PTR [edx]
  41ce9f:	or     dl,bl
  41cea1:	or     eax,DWORD PTR [edx]
  41cea3:	or     dl,bl
  41cea5:	or     DWORD PTR [edx],eax
  41cea7:	add    dl,ch
  41cea9:	or     DWORD PTR [eax],eax
  41ceab:	or     BYTE PTR [edx-0x4dfffdf7],dh
  41ceb1:	or     eax,DWORD PTR [edx]
  41ceb3:	add    BYTE PTR [edx+0x4b080009],bh
  41ceb9:	push   0x1
  41cebb:	add    BYTE PTR [ebx+0x6a],cl
  41cebe:	inc    DWORD PTR [ecx]
  41cec0:	push   ebx
  41cec1:	jb     0x41cec2
  41cec3:	dec    DWORD PTR [ebx+0x72]
  41cec6:	add    DWORD PTR [eax],eax
  41cec8:	inc    ebx
  41cec9:	jb     0x41ceca
  41cecb:	add    DWORD PTR [ebx+0x72],edx
  41cece:	add    DWORD PTR [eax],eax
  41ced0:	push   ebx
  41ced1:	jp     0x41ced4
  41ced3:	add    cl,BYTE PTR [ebx+0x7a]
  41ced6:	(bad)  
  41ced7:	dec    DWORD PTR [ebx+0x72]
  41ceda:	add    DWORD PTR [edx],eax
  41cedc:	dec    ebx
  41cedd:	jb     0x41cede
  41cedf:	add    DWORD PTR [ebx+0x72],edx
  41cee2:	(bad)  
  41cee3:	inc    DWORD PTR [ebx+0x72]
  41cee6:	add    DWORD PTR [eax],eax
  41cee8:	dec    ebx
  41cee9:	jb     0x41ceea
  41ceeb:	inc    DWORD PTR [eax]
	...
  41cf11:	add    BYTE PTR [eax],al
  41cf13:	add    BYTE PTR [ebx+0x68],cl
  41cf16:	add    DWORD PTR [edx],eax
  41cf18:	dec    ebx
  41cf19:	js     0x41cf1a
  41cf1b:	add    DWORD PTR [ebx+0x70],eax
  41cf1e:	(bad)  
  41cf1f:	inc    DWORD PTR [ebx+0x68]
  41cf22:	add    DWORD PTR [eax],eax
  41cf24:	push   ebx
  41cf25:	jo     0x41cf26
  41cf27:	dec    DWORD PTR [ebx+0x70]
  41cf2a:	add    DWORD PTR [eax],eax
  41cf2c:	dec    ebx
  41cf2d:	js     0x41cf30
  41cf2f:	add    al,BYTE PTR [ebx+0x68]
  41cf32:	(bad)  
  41cf33:	call   DWORD PTR [ebx+0x70]
  41cf36:	add    DWORD PTR [edx],eax
  41cf38:	dec    ebx
  41cf39:	jo     0x41cf3c
  41cf3b:	add    BYTE PTR [ebx+0x78],al
  41cf3e:	inc    DWORD PTR [ecx]
  41cf40:	inc    ebx
  41cf41:	push   0x684b0001
  41cf46:	inc    DWORD PTR [ecx]
  41cf48:	dec    ebx
  41cf49:	jo     0x41cf4a
  41cf4b:	add    DWORD PTR [ebx+0x78],ecx
  41cf4e:	add    DWORD PTR [eax],eax
  41cf50:	inc    ebx
  41cf51:	jo     0x41cf54
  41cf53:	add    dl,BYTE PTR [ebx+0x68]
  41cf56:	(bad)  
  41cf57:	call   DWORD PTR [ebx+0x9]
  41cf5a:	out    dx,eax
  41cf5b:	add    DWORD PTR [ebx+0x9],ecx
  41cf5e:	out    0x3,eax
  41cf60:	dec    ecx
  41cf61:	adc    edi,ebx
  41cf63:	add    DWORD PTR [ecx+0x9],ecx
  41cf66:	fild   WORD PTR [ebx]
  41cf68:	dec    ebx
  41cf69:	or     edi,ebp
  41cf6b:	add    ecx,DWORD PTR [ecx+0x11]
  41cf6e:	out    0x1,eax
  41cf70:	dec    ecx
  41cf71:	or     eax,ebp
  41cf73:	jecxz  0x41cf79
  41cf75:	or     DWORD PTR [eax-0x1d],ebp
	...
  41cfa0:	jl     0x41cf28
  41cfa2:	push   0x678674e4
  41cfa7:	add    al,0x4b
  41cfa9:	or     DWORD PTR [edi-0x1c],esp
  41cfac:	in     al,0x8
  41cfae:	push   0xe809cb04
  41cfb3:	add    ecx,ebx
  41cfb5:	or     eax,ebp
  41cfb7:	jecxz  0x41d005
  41cfb9:	xchg   bh,ah
  41cfbb:	add    ecx,DWORD PTR [ebx+0x9]
  41cfbe:	out    0xe3,eax
  41cfc0:	mov    esp,0xb4e3e709
  41cfc5:	or     DWORD PTR [eax-0x1c],ebp
  41cfc8:	lods   al,BYTE PTR ds:[esi]
  41cfc9:	or     DWORD PTR [eax+0x4],ebp
  41cfcc:	dec    ebx
  41cfcd:	or     edi,esp
  41cfcf:	add    ecx,DWORD PTR [ebx+0x9]
  41cfd2:	addr16 add al,0xcb
  41cfd5:	or     al,ch
  41cfd7:	add    ecx,ebx
  41cfd9:	or     al,ch
  41cfdb:	add    ecx,DWORD PTR [ebx+0x9]
  41cfde:	out    0xe3,eax
  41cfe0:	cld    
  41cfe1:	test   edi,esp
  41cfe3:	add    ecx,ebx
  41cfe5:	or     al,ch
  41cfe7:	jecxz  0x41d055
  41cfe9:	or     DWORD PTR [edi+0x4],esp
  41cfec:	dec    ebx
  41cfed:	or     edi,esp
  41cfef:	add    ecx,ebx
  41cff1:	or     al,ch
  41cff3:	jecxz  0x41cfc9
  41cff5:	test   DWORD PTR [edi-0x1c],esp
  41cff8:	int3   
  41cff9:	test   DWORD PTR [eax],eax
  41cffb:	push   0xe800894f
  41d000:	dec    eax
  41d001:	or     DWORD PTR [eax],eax
  41d003:	imul   eax,DWORD PTR [eax],0x0
	...
  41d029:	add    BYTE PTR [eax],al
  41d02b:	add    BYTE PTR [edi+0x4769fd85],ch
  41d031:	mov    DWORD PTR [eax],eax
  41d033:	jmp    0x6a3f55e0
  41d038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d039:	add    eax,0x5af6800
  41d03e:	add    BYTE PTR [eax+0x47],ch
  41d041:	or     DWORD PTR [eax],eax
  41d043:	imul   ecx,DWORD PTR [edi-0x77],0x8948e800
  41d04a:	add    cl,ch
  41d04c:	push   0x68680005
  41d051:	add    eax,0x9486800
  41d056:	add    cl,ch
  41d058:	dec    eax
  41d059:	or     DWORD PTR [eax],eax
  41d05b:	jmp    0xe941d9a8
  41d060:	push   0x28690005
  41d065:	test   ebp,edi
  41d067:	imul   ecx,DWORD PTR [eax-0x77],0x89486800
  41d06e:	add    al,ch
  41d070:	dec    eax
  41d071:	or     DWORD PTR [eax],eax
  41d073:	call   0x6841d5a0
  41d078:	sub    BYTE PTR [ebp-0x7ad79703],al
  41d07e:	std    
  41d07f:	imul   ecx,DWORD PTR [eax+0x9],0x4e86800
  41d086:	add    BYTE PTR [eax+0x48],ch
  41d089:	or     DWORD PTR [eax],eax
  41d08b:	call   0xe941d9d8
	...
  41d0b8:	call   0x492ace41
  41d0bd:	mov    DWORD PTR [eax],eax
  41d0bf:	call   0x13f55ac
  41d0c4:	bound  ebp,QWORD PTR [eax+0x7d]
  41d0c7:	add    BYTE PTR [ebx+0x8],ah
  41d0ca:	add    BYTE PTR [eax],0xb3
  41d0cd:	push   0x6832fffd
  41d0d2:	std    
  41d0d3:	jmp    DWORD PTR [edx-0x5cff7ff8]
  41d0d9:	push   0x832007d
  41d0de:	add    BYTE PTR [eax],al
  41d0e0:	mov    dl,0x8
  41d0e2:	add    BYTE PTR [eax],0xa2
  41d0e5:	push   0x6822fffd
  41d0ea:	jge    0x41d0ec
  41d0ec:	jb     0x41d0fb
  41d0ee:	add    BYTE PTR [eax],al
  41d0f0:	jb     0x41d0ff
  41d0f2:	or     BYTE PTR [edx],al
  41d0f4:	bound  ecx,QWORD PTR [eax]
  41d0f6:	or     BYTE PTR [edx],al
  41d0f8:	bound  eax,QWORD PTR [edi]
  41d0fa:	add    BYTE PTR [edx+0x72],al
  41d0fd:	or     BYTE PTR [eax],cl
  41d0ff:	add    BYTE PTR [edx+0x7],dh
  41d102:	add    BYTE PTR [eax],al
  41d104:	bound  ecx,QWORD PTR [eax]
  41d106:	add    BYTE PTR [eax+0x62],al
  41d109:	or     BYTE PTR [eax],cl
  41d10b:	add    dh,BYTE PTR [edx]
  41d10d:	pop    es
  41d10e:	or     BYTE PTR [eax+0x32],al
  41d111:	or     BYTE PTR [eax],cl
  41d113:	add    BYTE PTR [edx],ah
  41d115:	pop    es
  41d116:	add    BYTE PTR [edx],al
  41d118:	and    al,BYTE PTR [edi]
  41d11a:	or     BYTE PTR [eax+0x0],al
	...
  41d141:	add    BYTE PTR [eax],al
  41d143:	add    BYTE PTR [edx],dh
  41d145:	pop    es
  41d146:	add    BYTE PTR [edx+0x32],al
  41d149:	or     BYTE PTR [eax],cl
  41d14b:	inc    edx
  41d14c:	and    al,BYTE PTR [edi]
  41d14e:	or     BYTE PTR [eax],al
  41d150:	and    cl,BYTE PTR [eax]
  41d152:	add    BYTE PTR [eax-0xe],al
  41d155:	pop    es
  41d156:	add    BYTE PTR [edx],al
  41d158:	repnz pop es
  41d15a:	or     BYTE PTR [eax-0x1e],al
  41d15d:	pop    es
  41d15e:	or     BYTE PTR [eax-0x1e],al
  41d161:	pop    es
  41d162:	add    BYTE PTR [eax],al
  41d164:	dec    ebx
  41d165:	jb     0x41d169
  41d167:	add    BYTE PTR [ebx-0x76f7fd8e],cl
  41d16d:	jb     0x41d171
  41d16f:	or     BYTE PTR [ecx+0x49000272],cl
  41d175:	jb     0x41d178
  41d177:	or     BYTE PTR [ecx],cl
  41d179:	jb     0x41d17d
  41d17b:	add    BYTE PTR [ebx],cl
  41d17d:	jb     0x41d180
  41d17f:	add    BYTE PTR [ebx+0x72],cl
  41d182:	add    DWORD PTR [eax],eax
  41d184:	or     DWORD PTR [edx+0x2],esi
  41d187:	or     BYTE PTR [ecx+0x72],cl
  41d18a:	add    DWORD PTR [eax],eax
  41d18c:	dec    ecx
  41d18d:	jb     0x41d190
  41d18f:	add    BYTE PTR [ecx],cl
  41d191:	jb     0x41d195
  41d193:	or     BYTE PTR [ebx+0x72],cl
  41d196:	add    DWORD PTR [eax],ecx
  41d198:	dec    ebx
  41d199:	jb     0x41d19d
  41d19b:	add    BYTE PTR [ecx],cl
  41d19d:	jb     0x41d1a1
  41d19f:	add    BYTE PTR [ebx+0x72],cl
  41d1a2:	add    DWORD PTR [eax],eax
  41d1a4:	dec    ecx
  41d1a5:	jb     0x41d1a8
	...
  41d1cf:	add    BYTE PTR [ebx],cl
  41d1d1:	jb     0x41d1d4
  41d1d3:	or     BYTE PTR [ecx+0x72],cl
  41d1d6:	add    al,BYTE PTR [eax]
  41d1d8:	or     DWORD PTR [edx+0x2],esi
  41d1db:	or     BYTE PTR [ebx+0x49000270],cl
  41d1e1:	jo     0x41d1e4
  41d1e3:	add    BYTE PTR [ebx-0x76f7fe90],cl
  41d1e9:	jo     0x41d1ed
  41d1eb:	or     BYTE PTR [ecx+0x70],cl
  41d1ee:	add    cl,BYTE PTR [eax]
  41d1f0:	mov    esi,DWORD PTR [eax+0x2]
  41d1f3:	add    BYTE PTR [ebx+0x70],cl
  41d1f6:	add    DWORD PTR [eax],eax
  41d1f8:	dec    ecx
  41d1f9:	jo     0x41d1fc
  41d1fb:	or     BYTE PTR [ecx-0x76f7fd90],cl
  41d201:	jo     0x41d205
  41d203:	or     BYTE PTR [ebx+0x9],cl
  41d206:	out    0x3,eax
  41d208:	dec    ebx
  41d209:	(bad)  
  41d20a:	out    0x2,al
  41d20c:	push   ebx
  41d20d:	(bad)  
  41d20e:	out    0x3,al
  41d210:	push   ebx
  41d211:	pop    es
  41d212:	out    0x3,eax
  41d214:	dec    ebx
  41d215:	or     edi,esp
  41d217:	add    eax,DWORD PTR [ebx-0x37]
  41d21a:	out    0x3,al
  41d21c:	dec    ebx
  41d21d:	(bad)  
  41d21e:	out    0x2,al
  41d220:	push   ebx
  41d221:	or     edi,esp
  41d223:	add    cl,BYTE PTR [ebx+0x7]
  41d226:	out    0x2,eax
  41d228:	dec    ebx
  41d229:	leave  
  41d22a:	out    0x3,al
  41d22c:	push   ebx
  41d22d:	or     edi,esp
  41d22f:	add    ecx,DWORD PTR [ebx+0x9]
  41d232:	out    0x3,eax
	...
  41d25c:	inc    ebx
  41d25d:	leave  
  41d25e:	out    0x2,al
  41d260:	inc    ebx
  41d261:	pop    es
  41d262:	out    0x2,eax
  41d264:	dec    ebx
  41d265:	leave  
  41d266:	(bad)  
  41d267:	add    ecx,DWORD PTR [ebx+0x29]
  41d26a:	out    0x3,eax
  41d26c:	or     ebp,DWORD PTR [ecx]
  41d26e:	out    0x43,eax
  41d270:	dec    ebx
  41d271:	or     edi,esi
  41d273:	inc    ebx
  41d274:	or     ebp,DWORD PTR [ecx]
  41d276:	out    0x3,eax
  41d278:	or     ebp,DWORD PTR [ecx]
  41d27a:	test   DWORD PTR [ebx],0x43d7094b
  41d280:	or     ebp,DWORD PTR [ecx]
  41d282:	out    0x3,eax
  41d284:	mov    ecx,DWORD PTR [ecx]
  41d286:	out    0x43,eax
  41d288:	dec    ebx
  41d289:	sub    edi,edx
  41d28b:	inc    ebx
  41d28c:	mov    ecx,DWORD PTR [ecx]
  41d28e:	out    0x3,eax
  41d290:	mov    ecx,DWORD PTR [ecx]
  41d292:	test   DWORD PTR [ebx],0x3f7294b
  41d298:	mov    ecx,DWORD PTR [ecx]
  41d29a:	out    0x43,eax
  41d29c:	dec    ebx
  41d29d:	sub    edi,esp
  41d29f:	add    ecx,DWORD PTR [ebx+0x29]
  41d2a2:	xlat   BYTE PTR ds:[ebx]
  41d2a3:	inc    ebx
  41d2a4:	dec    ebx
  41d2a5:	or     DWORD PTR [eax],eax
  41d2a7:	jmp    0xd941dbf4
  41d2ac:	dec    eax
  41d2ad:	leave  
  41d2ae:	(bad)  
  41d2af:	clc    
  41d2b0:	mov    BYTE PTR [ecx],cl
  41d2b2:	and    cl,ch
  41d2b4:	mov    BYTE PTR [ecx],cl
  41d2b6:	add    cl,ch
  41d2b8:	mov    cl,cl
  41d2ba:	(bad)  
  41d2bb:	clc    
  41d2bc:	mov    BYTE PTR [ecx],cl
  41d2be:	and    cl,bl
	...
  41d2e8:	dec    eax
  41d2e9:	or     DWORD PTR [eax],eax
  41d2eb:	(bad)  [eax-0x37]
  41d2ee:	pop    ds
  41d2ef:	(bad)  [eax-0x37]
  41d2f2:	pop    ds
  41d2f3:	jmp    0xf941dc40
  41d2f8:	or     cl,cl
  41d2fa:	(bad)  
  41d2fb:	call   0xf9619c08
  41d300:	or     BYTE PTR [ecx],cl
  41d302:	add    cl,ch
  41d304:	or     cl,cl
  41d306:	(bad)  
  41d307:	call   0xe9619c14
  41d30c:	dec    eax
  41d30d:	or     DWORD PTR [eax],esp
  41d30f:	jmp    0xd961dc1c
  41d314:	dec    eax
  41d315:	or     DWORD PTR [eax],eax
  41d317:	stc    
  41d318:	dec    eax
  41d319:	leave  
  41d31a:	pop    ds
  41d31b:	jmp    0xf9419c28
  41d320:	or     cl,cl
  41d322:	pop    ds
  41d323:	jmp    0xd9419c70
  41d328:	or     BYTE PTR [ecx],cl
  41d32a:	add    cl,bl
  41d32c:	dec    eax
  41d32d:	or     DWORD PTR [eax],esp
  41d32f:	jmp    0xe9419c7c
  41d334:	mov    BYTE PTR [ecx],cl
  41d336:	and    cl,ch
  41d338:	dec    eax
  41d339:	or     DWORD PTR [eax],esp
  41d33b:	stc    
  41d33c:	mov    BYTE PTR [ecx],cl
  41d33e:	add    cl,bh
  41d340:	dec    eax
  41d341:	or     DWORD PTR [eax],esp
  41d343:	stc    
  41d344:	mov    cl,cl
  41d346:	pop    ds
  41d347:	add    BYTE PTR [edx],ah
  41d349:	int    0x3f
	...
  41d373:	add    dl,dh
  41d375:	or     al,0x40
  41d377:	and    BYTE PTR [edx],ah
  41d379:	int    0x3f
  41d37b:	add    dl,ah
  41d37d:	int3   
  41d37e:	aas    
  41d37f:	and    dl,ah
  41d381:	or     al,0x0
  41d383:	add    dl,ah
  41d385:	or     al,0x40
  41d387:	and    dl,ah
  41d389:	or     al,0x0
  41d38b:	add    dl,ah
  41d38d:	int3   
  41d38e:	(bad)  
  41d38f:	jmp    edx
  41d391:	or     al,0x40
  41d393:	and    BYTE PTR [edx-0x4dffc034],ah
  41d399:	int3   
  41d39a:	(bad)  
  41d39b:	call   DWORD PTR [edx-0x4dffbff4]
  41d3a1:	int3   
  41d3a2:	call   FWORD PTR [edi]
  41d3a4:	mov    dl,0xc
  41d3a6:	add    BYTE PTR [eax],al
  41d3a8:	mov    dl,0xcc
  41d3aa:	aas    
  41d3ab:	and    BYTE PTR [edx+0x7220000c],ah
  41d3b1:	or     al,0x40
  41d3b3:	add    BYTE PTR [edx+0x721fffcc],ah
  41d3b9:	or     al,0x20
  41d3bb:	add    BYTE PTR [eax+0xc],ah
  41d3be:	and    BYTE PTR [eax+eiz*2],al
  41d3c1:	test   ch,bh
  41d3c3:	add    esi,DWORD PTR [edx+0xc]
  41d3c6:	add    BYTE PTR [eax],al
  41d3c8:	jb     0x41d34e
  41d3ca:	std    
  41d3cb:	jmp    DWORD PTR [eax-0x7c]
  41d3ce:	std    
  41d3cf:	add    esp,DWORD PTR [eax-0x7c]
  41d3d2:	sbb    eax,0x1d843200
  41d3d7:	add    al,0x0
	...
  41d3fd:	add    BYTE PTR [eax],al
  41d3ff:	add    BYTE PTR [eax],dh
  41d401:	test   BYTE PTR ds:0x200c2204,bl
  41d407:	add    BYTE PTR [edx],ah
  41d409:	or     al,0x0
  41d40b:	add    BYTE PTR [eax],dh
  41d40d:	or     al,0x0
  41d40f:	add    al,0x4b
  41d411:	je     0x41d414
  41d413:	add    BYTE PTR [ebx+0x72],cl
  41d416:	add    DWORD PTR [eax],eax
  41d418:	inc    edi
  41d419:	je     0x41d41c
  41d41b:	and    BYTE PTR [edi+0x74],cl
  41d41e:	stc    
  41d41f:	(bad)  
  41d420:	cld    
  41d421:	jno    0x41d41c
  41d423:	dec    DWORD PTR [eax+0x74]
  41d426:	stc    
  41d427:	pop    ds
  41d428:	dec    ebx
  41d429:	je     0x41d42c
  41d42b:	and    BYTE PTR [ebx+0x72],cl
  41d42e:	stc    
  41d42f:	dec    DWORD PTR [eax+0x74]
  41d432:	add    DWORD PTR [eax],eax
  41d434:	dec    edi
  41d435:	jb     0x41d438
  41d437:	and    BYTE PTR [edi+0x72],al
  41d43a:	stc    
  41d43b:	pop    ds
  41d43c:	dec    edi
  41d43d:	je     0x41d440
  41d43f:	and    BYTE PTR [ebx+0x72],cl
  41d442:	add    DWORD PTR [eax],esp
  41d444:	dec    edi
  41d445:	jb     0x41d440
  41d447:	jmp    FWORD PTR [ebx+esi*2+0x73a4fff9]
  41d44e:	stc    
  41d44f:	pop    ds
  41d450:	inc    edi
  41d451:	jb     0x41d44c
  41d453:	pop    ds
  41d454:	dec    ebx
  41d455:	je     0x41d458
  41d457:	add    BYTE PTR [ebx+0x72],cl
  41d45a:	add    DWORD PTR [eax],eax
  41d45c:	dec    edi
  41d45d:	jb     0x41d458
  41d45f:	pop    ds
  41d460:	dec    ebx
  41d461:	jb     0x41d464
	...
  41d48b:	add    BYTE PTR [edi+0x72],cl
  41d48e:	stc    
  41d48f:	pop    ds
  41d490:	dec    ebx
  41d491:	jb     0x41d494
  41d493:	and    BYTE PTR [ebx+0x74],cl
  41d496:	stc    
  41d497:	dec    DWORD PTR [eax+0x74]
  41d49a:	stc    
  41d49b:	dec    DWORD PTR [eax+0x74]
  41d49e:	add    DWORD PTR [eax],esp
  41d4a0:	inc    edi
  41d4a1:	je     0x41d4a4
  41d4a3:	and    BYTE PTR [edi+0x72],cl
  41d4a6:	add    DWORD PTR [eax],eax
  41d4a8:	dec    ebx
  41d4a9:	jb     0x41d4ac
  41d4ab:	and    BYTE PTR [ebx+0x70],cl
  41d4ae:	add    DWORD PTR [eax],eax
  41d4b0:	inc    edi
  41d4b1:	or     edi,esp
  41d4b3:	sti    
  41d4b4:	and    al,0xb
  41d4b6:	out    0x3,eax
  41d4b8:	imul   ecx,DWORD PTR [ecx],0xffffffe7
  41d4bb:	sti    
  41d4bc:	xor    al,0x5
  41d4be:	jmp    0xe9c0e1be
  41d4c3:	sti    
  41d4c4:	fs or  edi,esp
  41d4c7:	sti    
  41d4c8:	pop    esp
  41d4c9:	add    eax,0x7ef4fbe9
  41d4ce:	jmp    0xe9471fd6
  41d4d3:	sti    
  41d4d4:	inc    esp
  41d4d5:	add    eax,0x52b03e7
  41d4da:	out    0xfb,eax
  41d4dc:	xor    al,0x9
  41d4de:	out    0x3,eax
  41d4e0:	dec    ebx
  41d4e1:	or     ecx,ebp
  41d4e3:	add    ecx,DWORD PTR [ebx+0x9]
  41d4e6:	jmp    0xe74731e6
  41d4eb:	add    ecx,DWORD PTR [ebx+0x9]
  41d4ee:	jmp    0x41d5ee
	...
  41d517:	add    BYTE PTR [ecx+ecx*1-0x19],cl
  41d51b:	add    ebp,DWORD PTR [ebx+0x5]
  41d51e:	out    0xfb,eax
  41d520:	pushf  
  41d521:	jle    0x41d50c
  41d523:	add    ecx,DWORD PTR [ebx+0x5]
  41d526:	out    0xfb,eax
  41d528:	mov    WORD PTR [edx],cs
  41d52a:	out    0xfb,eax
  41d52c:	test   BYTE PTR [esi-0x17],bh
  41d52f:	add    ebp,DWORD PTR [ebx]
  41d531:	or     DWORD PTR [edi-0x18f18b0d],esp
  41d537:	rep ins BYTE PTR es:[edi],dx
  41d539:	jle    0x41d522
  41d53b:	add    ecx,DWORD PTR [edi+0x9]
  41d53e:	daa    
  41d53f:	hlt    
  41d540:	dec    eax
  41d541:	sbb    edi,esp
  41d543:	add    ecx,DWORD PTR [ebx+0x19]
  41d546:	daa    
  41d547:	hlt    
  41d548:	dec    esp
  41d549:	push   cs
  41d54a:	daa    
  41d54b:	add    al,0x4b
  41d54d:	or     edi,esp
  41d54f:	add    ecx,DWORD PTR [ebx+0x19]
  41d552:	add    BYTE PTR [ecx],ch
  41d554:	dec    edi
  41d555:	add    eax,0x548e900
  41d55a:	adc    BYTE PTR [ecx],ch
  41d55c:	pop    ds
  41d55d:	or     dl,BYTE PTR [eax]
  41d55f:	jmp    0xe941df7c
  41d564:	sbb    BYTE PTR [edx],cl
  41d566:	adc    BYTE PTR [ecx],ch
  41d568:	pop    ss
  41d569:	or     al,BYTE PTR [eax]
  41d56b:	jmp    0x2a3f5368
  41d570:	inc    edi
  41d571:	or     DWORD PTR [eax],eax
  41d573:	jmp    0x2951dac0
  41d578:	inc    edi
  41d579:	or     DWORD PTR [eax],edx
  41d57b:	jmp    0x41d580
	...
  41d5a4:	fdivr  DWORD PTR [ebp+0xd]
  41d5a7:	test   eax,0xe9fd7dd8
  41d5ac:	fmul   DWORD PTR [ecx]
  41d5ae:	add    BYTE PTR [ecx-0x56fffab8],ch
  41d5b4:	dec    eax
  41d5b5:	add    eax,0x9b8e910
  41d5ba:	adc    BYTE PTR [ecx-0x16028248],ch
  41d5c0:	dec    eax
  41d5c1:	or     DWORD PTR [eax],eax
  41d5c3:	jmp    0xa941df10
  41d5c8:	dec    eax
  41d5c9:	add    eax,0x948a910
  41d5ce:	adc    cl,ch
  41d5d0:	cwde   
  41d5d1:	jge    0x41d5e0
  41d5d3:	test   eax,0xe9000978
  41d5d8:	dec    eax
  41d5d9:	add    eax,0x978a900
  41d5de:	add    cl,ch
  41d5e0:	dec    eax
  41d5e1:	add    eax,0x958e900
  41d5e6:	adc    cl,ch
  41d5e8:	pop    eax
  41d5e9:	jge    0x41d5e8
  41d5eb:	sub    DWORD PTR [edi+0x9],ecx
  41d5ee:	add    BYTE PTR [ecx],ch
  41d5f0:	inc    edi
  41d5f1:	add    eax,0x79320010
  41d5f6:	std    
  41d5f7:	push   DWORD PTR [edx+0x75]
  41d5fa:	add    DWORD PTR [eax],eax
  41d5fc:	and    bh,BYTE PTR [ecx-0x3]
  41d5ff:	punpckldq mm0,DWORD PTR ds:0x5720000
  41d606:	add    BYTE PTR [eax],dl
	...
  41d630:	xor    cl,BYTE PTR [ecx]
  41d632:	add    al,0x10
  41d634:	bound  eax,QWORD PTR ds:0x9221004
  41d63a:	add    BYTE PTR [eax],dl
  41d63c:	repnz or BYTE PTR [eax+eax*1],al
  41d640:	xor    dh,BYTE PTR [ebp-0x3]
  41d643:	psrad  mm1,QWORD PTR [eax]
  41d646:	add    BYTE PTR [eax],al
  41d648:	and    dh,BYTE PTR [ebp+0x1]
  41d64b:	adc    BYTE PTR [edx-0x4dfffbf8],dh
  41d651:	or     BYTE PTR [eax],al
  41d653:	adc    dl,ah
  41d655:	or     BYTE PTR [eax+edx*1],al
  41d658:	loop   0x41d6d2
  41d65a:	std    
  41d65b:	pslld  mm7,QWORD PTR [eax-0x3]
  41d65f:	lss    ecx,FWORD PTR [eax]
  41d662:	add    BYTE PTR [eax],al
  41d664:	loop   0x41d6de
  41d666:	add    DWORD PTR [eax],edx
  41d668:	mov    ds:0xb2000178,al
  41d66d:	js     0x41d670
  41d66f:	add    dl,dh
  41d671:	js     0x41d670
  41d673:	jmp    edx
  41d675:	js     0x41d674
  41d677:	jmp    edx
  41d679:	or     BYTE PTR [eax+eax*1],al
  41d67c:	jb     0x41d686
  41d67e:	add    BYTE PTR [eax],dl
  41d680:	jb     0x41d6fa
  41d682:	add    DWORD PTR [eax],edx
  41d684:	pop    edx
  41d685:	aaa    
  41d686:	std    
  41d687:	jmp    DWORD PTR [edx+0x8]
  41d68a:	add    BYTE PTR [eax],al
  41d68c:	jb     0x41d696
  41d68e:	add    BYTE PTR [eax],al
  41d690:	fisubr DWORD PTR [esi]
  41d692:	std    
  41d693:	inc    DWORD PTR [eax]
	...
  41d6b9:	add    BYTE PTR [eax],al
  41d6bb:	add    BYTE PTR [ebx-0x32],cl
  41d6be:	sub    bh,bh
  41d6c0:	dec    esp
  41d6c1:	(bad)  
  41d6c2:	sub    edi,edi
  41d6c4:	inc    esp
  41d6c5:	jb     0x41d6c8
  41d6c7:	add    BYTE PTR [ebx+0x72],cl
  41d6ca:	add    DWORD PTR [eax],eax
  41d6cc:	dec    ebx
  41d6cd:	push   0x7a2cff28
  41d6d2:	sub    edi,edi
  41d6d4:	and    al,0xba
  41d6d6:	sub    al,0xff
  41d6d8:	sbb    al,0x72
  41d6da:	add    DWORD PTR [eax],eax
  41d6dc:	dec    ebx
  41d6dd:	jb     0x41d6e0
  41d6df:	add    BYTE PTR [ebx+0x52],cl
  41d6e2:	sub    bh,bh
  41d6e4:	add    al,0x1e
  41d6e6:	cs (bad) 
  41d6e8:	cld    
  41d6e9:	mov    eax,ds:0x71f4ff2c
  41d6ee:	add    DWORD PTR [eax],eax
  41d6f0:	dec    ebx
  41d6f1:	jb     0x41d6f4
  41d6f3:	add    BYTE PTR [ebx+0x3e],cl
  41d6f6:	daa    
  41d6f7:	(bad)  
  41d6f8:	fdivr  QWORD PTR [ebp-0x2a2b00d5]
  41d6fe:	sub    edi,edi
  41d700:	int3   
  41d701:	jno    0x41d704
  41d703:	add    BYTE PTR [ebx+0x72],cl
  41d706:	add    DWORD PTR [eax],eax
  41d708:	dec    ebx
  41d709:	inc    eax
  41d70a:	daa    
  41d70b:	push   DWORD PTR [ecx+ebp*8+0x65acff2d]
  41d712:	sub    bh,bh
  41d714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d715:	jno    0x41d718
  41d717:	add    BYTE PTR [ebx+0x72],cl
  41d71a:	add    DWORD PTR [eax],eax
  41d71c:	dec    ebx
  41d71d:	dec    edx
  41d71e:	and    edi,edi
	...
  41d748:	mov    WORD PTR [ecx],es
  41d74a:	inc    DWORD PTR cs:[ecx+eiz*2+0x717cff2a]
  41d752:	add    DWORD PTR [eax],eax
  41d754:	dec    ebx
  41d755:	jb     0x41d758
  41d757:	add    BYTE PTR [ebx-0x8],cl
  41d75a:	and    bh,bh
  41d75c:	or     BYTE PTR fs:[ebx+0xb7b5c2d],al
  41d763:	sub    edx,DWORD PTR [ebx+edi*2-0x19]
  41d767:	add    ecx,DWORD PTR [ebx+0x9]
  41d76a:	out    0x3,eax
  41d76c:	dec    ebx
  41d76d:	or     ecx,eax
  41d76f:	and    edi,DWORD PTR [ebx+edi*2]
  41d772:	jg     0x41d7a1
  41d774:	xor    al,0x7b
  41d776:	movntps XMMWORD PTR [ebx+edi*2],xmm5
  41d77a:	out    0x3,eax
  41d77c:	dec    ebx
  41d77d:	or     edi,esp
  41d77f:	add    ecx,DWORD PTR [ebx+0x9]
  41d782:	int    0x22
  41d784:	adc    al,0x7b
  41d786:	mov    ebp,DWORD PTR ds:0x3e77b0c
  41d78c:	dec    ebx
  41d78d:	or     edi,esp
  41d78f:	add    ecx,DWORD PTR [ebx+0x9]
  41d792:	out    0x3,eax
  41d794:	dec    ebx
  41d795:	or     edi,esp
  41d797:	add    ecx,DWORD PTR [ebx+0x9]
  41d79a:	out    0x3,eax
  41d79c:	dec    ebx
  41d79d:	or     DWORD PTR [edi+0x2d],edx
  41d7a0:	fdivr  QWORD PTR [edx+0x5d]
  41d7a3:	sub    eax,0x2ce17ad4
  41d7a8:	int3   
  41d7a9:	jp     0x41d79a
  41d7ab:	sub    al,0x0
	...
  41d7d1:	add    BYTE PTR [eax],al
  41d7d3:	add    ah,al
  41d7d5:	jp     0x41d7e2
  41d7d7:	sub    eax,0x2cf77abc
  41d7dc:	mov    ah,0x7a
  41d7de:	cmc    
  41d7df:	sub    al,0xac
  41d7e1:	jp     0x41d780
  41d7e3:	sub    al,0xa4
  41d7e5:	jp     0x41d7a8
  41d7e7:	sub    al,0x9c
  41d7e9:	jp     0x41d77a
  41d7eb:	sub    al,0x94
  41d7ed:	jp     0x41d78a
  41d7ef:	sub    al,0x8c
  41d7f1:	jp     0x41d85a
  41d7f3:	sub    al,0x84
  41d7f5:	jp     0x41d854
  41d7f7:	sub    al,0x7c
  41d7f9:	jp     0x41d834
  41d7fb:	sub    al,0x74
  41d7fd:	jp     0x41d7ff
  41d7ff:	sub    DWORD PTR [edi],ebx
  41d801:	jp     0x41d800
  41d803:	pop    ss
  41d804:	aaa    
  41d805:	jp     0x41d804
  41d807:	iret   
  41d808:	xor    BYTE PTR [edx-0x3],bh
  41d80b:	loope  0x41d82d
  41d80d:	jp     0x41d80c
  41d80f:	loope  0x41d835
  41d811:	jp     0x41d810
  41d813:	rep ins BYTE PTR es:[edi],dx
  41d815:	jp     0x41d814
  41d817:	adc    esi,DWORD PTR [ebx+0x7a]
  41d81a:	std    
  41d81b:	jmp    FWORD PTR [edx+edi*2-0x3]
  41d81f:	and    eax,0x49fd7a63
  41d824:	jae    0x41d8a0
  41d826:	std    
  41d827:	pop    ds
  41d828:	jae    0x41d8a4
  41d82a:	std    
  41d82b:	jno    0x41d890
  41d82d:	jp     0x41d82c
  41d82f:	jge    0x41d894
  41d831:	jp     0x41d830
  41d833:	inc    ebp
  41d834:	xor    edi,DWORD PTR [edx-0x3]
  41d837:	cmp    DWORD PTR [eax],eax
	...
  41d85d:	add    BYTE PTR [eax],al
  41d85f:	add    BYTE PTR [ebx],dh
  41d861:	jp     0x41d860
  41d863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d864:	and    edi,DWORD PTR [edx-0x3]
  41d867:	popf   
  41d868:	and    edi,DWORD PTR [edx-0x3]
  41d86b:	xchg   DWORD PTR [ebx],esi
  41d86d:	jp     0x41d86c
  41d86f:	pop    edi
  41d870:	xor    edi,DWORD PTR [edx-0x3]
  41d873:	out    dx,eax
  41d874:	and    edi,DWORD PTR [edx-0x3]
  41d877:	add    esp,DWORD PTR [edx]
  41d879:	jp     0x41d878
  41d87b:	stos   DWORD PTR es:[edi],eax
  41d87c:	jae    0x41d8f8
  41d87e:	std    
  41d87f:	mov    bh,0x73
  41d881:	jp     0x41d880
  41d883:	mov    ecx,0x61fd7a63
  41d888:	bound  edi,QWORD PTR [edx-0x3]
  41d88b:	mov    DWORD PTR [edx+0x7a],esi
  41d88e:	std    
  41d88f:	push   ebp
  41d890:	jb     0x41d90c
  41d892:	std    
  41d893:	sub    esp,DWORD PTR [edx+0x7a]
  41d896:	std    
  41d897:	cmp    esp,DWORD PTR [edx+0x7a]
  41d89a:	std    
  41d89b:	xor    esi,DWORD PTR [edx]
  41d89d:	jp     0x41d89c
  41d89f:	add    BYTE PTR [edx+0x62fffd30],al
  41d8a5:	and    edi,ebp
  41d8a7:	call   DWORD PTR [esi-0x5b0002dd]
  41d8ad:	and    edi,ebp
  41d8af:	jmp    DWORD PTR [esi]
  41d8b1:	and    edi,ebp
  41d8b3:	jmp    DWORD PTR [esi]
  41d8b5:	and    edi,ebp
  41d8b7:	call   DWORD PTR [esi]
  41d8b9:	and    edi,ebp
  41d8bb:	dec    DWORD PTR [eax+0x32fffd2f]
  41d8c1:	or     eax,0x0
	...
  41d8ea:	add    BYTE PTR [eax],al
  41d8ec:	pushf  
  41d8ed:	cs std 
  41d8ef:	inc    esp
  41d8f1:	cs std 
  41d8f3:	(bad)  
  41d8f4:	in     al,dx
  41d8f5:	cs std 
  41d8f7:	(bad)  
  41d8f8:	fsubr  QWORD PTR [esi]
  41d8fa:	std    
  41d8fb:	dec    esp
  41d8fd:	cs std 
  41d8ff:	(bad)  
  41d900:	mov    eax,0xf2fffd2e
  41d905:	or     al,0x0
  41d907:	add    BYTE PTR [esi],bl
  41d909:	xor    ch,bh
  41d90b:	jmp    edx
  41d90d:	or     al,0x0
  41d90f:	add    BYTE PTR [esi],al
  41d911:	xor    ch,bh
  41d913:	push   DWORD PTR [esi-0x5d0002d1]
  41d919:	das    
  41d91a:	std    
  41d91b:	call   DWORD PTR [edi+ebp*1+0x3006fffd]
  41d922:	std    
  41d923:	call   DWORD PTR [esi+0x36fffd2f]
  41d929:	das    
  41d92a:	std    
  41d92b:	call   DWORD PTR [edi+ebp*1]
  41d92e:	std    
  41d92f:	inc    esp
  41d931:	das    
  41d932:	std    
  41d933:	jmp    FWORD PTR [esi+0x2f]
  41d936:	std    
  41d937:	push   DWORD PTR [edx+0x4000000c]
  41d93d:	das    
  41d93e:	std    
  41d93f:	dec    DWORD PTR [ebx+0x62]
  41d942:	add    DWORD PTR [eax],eax
  41d944:	dec    ebx
  41d945:	or     BYTE PTR [esi],ah
  41d947:	(bad)  
  41d948:	jl     0x41d99e
  41d94a:	and    edi,edi
  41d94c:	je     0x41d9b0
  41d94e:	add    DWORD PTR [eax],eax
	...
  41d978:	dec    ebx
  41d979:	mov    dh,0x21
  41d97b:	jmp    DWORD PTR [edx+eiz*4+0x21]
  41d97f:	call   FWORD PTR [esi+edi*1+0x24]
  41d983:	call   DWORD PTR [edx+ecx*8+0x23]
  41d987:	dec    DWORD PTR [esp+eax*8+0x23]
  41d98b:	inc    DWORD PTR [eax+edi*1+0x24]
  41d98f:	(bad)  
  41d990:	cmp    al,0x62
  41d992:	add    DWORD PTR [eax],eax
  41d994:	dec    ebx
  41d995:	lock and edi,edi
  41d998:	sub    al,0xd4
  41d99a:	and    edi,edi
  41d99c:	and    al,0x84
  41d99e:	and    al,0xff
  41d9a0:	sbb    al,0xde
  41d9a2:	and    edi,edi
  41d9a4:	adc    al,0xe0
  41d9a6:	and    edi,edi
  41d9a8:	or     al,0xa6
  41d9aa:	and    al,0xff
  41d9ac:	add    al,0x96
  41d9ae:	and    al,0xff
  41d9b0:	cld    
  41d9b1:	xchg   edi,eax
  41d9b2:	and    al,0xff
  41d9b4:	hlt    
  41d9b5:	xchg   edi,eax
  41d9b6:	and    al,0xff
  41d9b8:	in     al,dx
  41d9b9:	lea    esp,[edi+edi*8]
  41d9bc:	in     al,0x61
  41d9be:	add    DWORD PTR [eax],eax
  41d9c0:	dec    ebx
  41d9c1:	push   0xbd4ff22
  41d9c6:	and    edi,edi
  41d9c8:	int3   
  41d9c9:	popa   
  41d9ca:	add    DWORD PTR [eax],eax
  41d9cc:	dec    ebx
  41d9cd:	shr    BYTE PTR [ecx],cl
  41d9cf:	(bad)  
  41d9d0:	mov    esp,0xb4ff29cf
  41d9d5:	jnp    0x41d9ff
  41d9d7:	jmp    FWORD PTR [ecx+ebx*2+0xff28]
	...
  41da02:	add    BYTE PTR [eax],al
  41da04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da05:	or     eax,0x89cff27
  41da0a:	xlat   BYTE PTR ds:[ebx]
  41da0b:	sub    BYTE PTR [edi+esi*2+0x778c28dd],dl
  41da12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da13:	sub    BYTE PTR [edi+esi*2+0x777c28b1],al
  41da1a:	(bad)
  41da1e:	jae    0x41da48
  41da20:	ins    BYTE PTR es:[edi],dx
  41da21:	ja     0x41da8a
  41da23:	sub    DWORD PTR [edi+esi*2+0x55],esp
  41da27:	sub    DWORD PTR [edi+esi*2-0x67],ebx
  41da2b:	sub    BYTE PTR [edi+esi*2-0x59],dl
  41da2f:	sub    BYTE PTR [edi+esi*2-0x43],cl
  41da33:	sub    BYTE PTR [edi+esi*2-0x3b],al
  41da37:	sub    BYTE PTR [edi+esi*2],bh
  41da3a:	mov    edi,0xef773428
  41da3f:	daa    
  41da40:	sub    al,0x77
  41da42:	shl    DWORD PTR [edi],1
  41da44:	and    al,0x77
  41da46:	add    DWORD PTR [eax],ebp
  41da48:	sbb    al,0x77
  41da4a:	in     eax,0x27
  41da4c:	adc    al,0x77
  41da4e:	sub    ebp,DWORD PTR [eax]
  41da50:	or     al,0x77
  41da52:	pop    es
  41da53:	sub    BYTE PTR [edi+esi*2],al
  41da56:	adc    eax,0x6f76fc28
  41da5b:	daa    
  41da5c:	hlt    
  41da5d:	jbe    0x41dab2
  41da5f:	daa    
  41da60:	in     al,dx
  41da61:	jbe    0x41daae
  41da63:	daa    
  41da64:	in     al,0x76
  41da66:	aaa    
  41da67:	daa    
	...
  41da90:	fdiv   QWORD PTR [esi+0x2b]
  41da93:	daa    
  41da94:	aam    0x76
  41da96:	xor    esp,DWORD PTR [edi]
  41da98:	int3   
  41da99:	jbe    0x41dae8
  41da9b:	daa    
  41da9c:	les    esi,FWORD PTR [esi+0x55]
  41da9f:	daa    
  41daa0:	mov    esp,0xb426f576
  41daa5:	jbe    0x41dab8
  41daa7:	daa    
  41daa8:	lods   al,BYTE PTR ds:[esi]
  41daa9:	jbe    0x41daab
  41daab:	stos   DWORD PTR es:[edi],eax
  41daac:	ins    DWORD PTR es:[edi],dx
  41daad:	jbe    0x41daac
  41daaf:	lahf   
  41dab0:	gs jbe 0x41dab0
  41dab3:	cdq    
  41dab4:	ins    DWORD PTR es:[edi],dx
  41dab5:	jbe    0x41dab4
  41dab7:	jno    0x41db1e
  41dab9:	jbe    0x41dab8
  41dabb:	dec    ecx
  41dabc:	sub    eax,0x253dfd76
  41dac1:	jbe    0x41dac0
  41dac3:	sub    ebp,DWORD PTR ds:0x251bfd76
  41dac9:	jbe    0x41dac8
  41dacb:	adc    ebp,DWORD PTR ds:0x26f9fd76
  41dad1:	jbe    0x41dad0
  41dad3:	jmp    0xfe3f5242
  41dad8:	push   0x77
  41dada:	std    
  41dadb:	pop    es
  41dadc:	sub    DWORD PTR [edi-0x3],esi
  41dadf:	or     eax,0x35fd7729
  41dae4:	sub    DWORD PTR [edi-0x3],esi
  41dae7:	sbb    eax,0x43fd7729
  41daec:	sub    DWORD PTR [edi-0x3],esi
  41daef:	jmp    0x7f41e43c
	...
  41db1c:	sub    DWORD PTR [edi-0x3],esi
  41db1f:	dec    edi
  41db20:	sub    DWORD PTR [edi-0x3],esi
  41db23:	scas   eax,DWORD PTR es:[edi]
  41db24:	jmp    0xe9f9d89f
  41db29:	jbe    0x41db28
  41db2b:	(bad)
  41db2f:	sub    ecx,0x76
  41db32:	std    
  41db33:	jmp    0xd541e480
  41db38:	jmp    0x492bd8b3
  41db3d:	or     DWORD PTR [eax],eax
  41db3f:	or     eax,0x15fd76e8
  41db44:	test   al,0x76
  41db46:	std    
  41db47:	mov    ecx,0xfd76a9
  41db4c:	in     al,dx
  41db4d:	push   0xfffffffe
  41db4f:	(bad)  
  41db50:	jle    0x41dbbc
  41db52:	(bad)  
  41db53:	(bad)  
  41db54:	fisubr WORD PTR [edx-0x2]
  41db57:	(bad)  
  41db58:	(bad)  
  41db59:	imul   edi,esi,0xfe69ccff
  41db5f:	(bad)  
  41db60:	cld    
  41db61:	imul   edi,esi,0xfe6a36ff
  41db67:	push   DWORD PTR [edx+0x9]
  41db6a:	add    BYTE PTR [eax],al
  41db6c:	inc    eax
  41db6d:	push   0xfffffffe
  41db6f:	jmp    DWORD PTR [edx+0x9]
  41db72:	add    BYTE PTR [eax],al
  41db74:	pop    esp
  41db75:	push   0xfffffffe
  41db77:	inc    DWORD PTR [eax+0x62fffe69]
  41db7d:	or     DWORD PTR [eax],eax
	...
  41dba7:	add    BYTE PTR [esi],dh
  41dba9:	ins    DWORD PTR es:[edi],dx
  41dbaa:	(bad)  
  41dbab:	push   DWORD PTR [edx+0x6d]
  41dbae:	(bad)  
  41dbaf:	call   FWORD PTR [esi+0x6d]
  41dbb2:	(bad)  
  41dbb3:	jmp    FWORD PTR [edx+0x6d]
  41dbb6:	(bad)  
  41dbb7:	inc    DWORD PTR [eax-0x73000193]
  41dbbd:	ins    DWORD PTR es:[edi],dx
  41dbbe:	(bad)  
  41dbbf:	push   DWORD PTR [edx]
  41dbc1:	or     DWORD PTR [eax],eax
  41dbc3:	add    BYTE PTR [eax+ebp*2+0x6890fffe],ah
  41dbca:	(bad)  
  41dbcb:	call   DWORD PTR [eax+0x3efffe68]
  41dbd1:	push   0x6834fffe
  41dbd6:	(bad)  
  41dbd7:	jmp    DWORD PTR [esi-0x51000198]
  41dbdd:	push   0x68b4fffe
  41dbe2:	(bad)  
  41dbe3:	dec    DWORD PTR [eax+ebp*2+0x687efffe]
  41dbea:	(bad)  
  41dbeb:	dec    DWORD PTR [ebx+0x62]
  41dbee:	add    DWORD PTR [eax],eax
  41dbf0:	dec    ebx
  41dbf1:	ins    BYTE PTR es:[edi],dx
  41dbf2:	in     al,0xfe
  41dbf4:	mov    ah,0x68
  41dbf6:	in     al,0xfe
  41dbf8:	lods   al,BYTE PTR ds:[esi]
  41dbf9:	bound  eax,QWORD PTR [ecx]
  41dbfb:	add    BYTE PTR [ebx+0x7d],cl
  41dbfe:	add    DWORD PTR [ecx+0x19],eax
  41dc01:	dec    ebp
  41dc02:	in     al,0x73
  41dc04:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41dc06:	in     al,dx
  41dc07:	imul   esp,DWORD PTR [esi],0xffffffa1
  41dc0a:	add    DWORD PTR [edi],edi
	...
  41dc34:	dec    ecx
  41dc35:	mov    al,0xe8
  41dc37:	pop    esi
  41dc38:	out    0xab,eax
  41dc3a:	in     al,dx
  41dc3b:	imul   ebp,esi,0x61
  41dc3e:	add    DWORD PTR [ecx],esp
  41dc40:	dec    ebx
  41dc41:	lahf   
  41dc42:	in     eax,dx
  41dc43:	ins    BYTE PTR es:[edi],dx
  41dc44:	fadd   DWORD PTR [ecx+ecx*8-0x127212a2]
  41dc4b:	bound  ecx,QWORD PTR [ebx+0x67]
  41dc4e:	push   es
  41dc4f:	push   ebp
  41dc50:	(bad)  
  41dc52:	mul    DWORD PTR [edx-0x73]
  41dc55:	leave  
  41dc56:	out    dx,eax
  41dc57:	bound  ecx,QWORD PTR [ebx+0x65]
  41dc5a:	add    al,0x6c
  41dc5c:	mov    eax,0xa66bf636
  41dc61:	(bad)  
  41dc62:	sar    bh,0x24
  41dc65:	repnz add BYTE PTR [ebp-0x51],al
  41dc69:	xor    esp,esi
  41dc6b:	pop    esi
  41dc6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc6d:	ds out dx,eax
  41dc6f:	pusha  
  41dc70:	mov    al,ds:0x4ab50162
  41dc75:	and    esi,eax
  41dc77:	ins    BYTE PTR es:[edi],dx
  41dc78:	imul   eax,DWORD PTR [ecx],0x1e6552f0
  41dc7e:	out    dx,eax
  41dc7f:	pusha  
  41dc80:	pusha  
  41dc81:	bound  eax,QWORD PTR [ecx]
  41dc83:	hlt    
  41dc84:	dec    edx
  41dc85:	cs out dx,eax
  41dc87:	pusha  
  41dc88:	push   0x76
  41dc8a:	(bad)  
  41dc8b:	jno    0x41dcfb
  41dc8d:	or     esp,ecx
  41dc8f:	add    ebx,ebx
  41dc91:	or     DWORD PTR [ebx-0x3d15d410],ebp
  41dc97:	ret    0x0
	...
  41dcbe:	add    BYTE PTR [eax],al
  41dcc0:	xor    ch,ah
  41dcc2:	mov    ebp,0xe073b4e4
  41dcc7:	add    al,0x1f
  41dcc9:	clc    
  41dcca:	mov    dl,0xf5
  41dccc:	sub    edi,ecx
  41dcce:	scas   eax,DWORD PTR es:[edi]
  41dccf:	ret    0x739c
  41dcd2:	fiadd  DWORD PTR [edi+eiz*1]
  41dcd5:	clc    
  41dcd6:	call   0x84c2:0x92ea2bf5
  41dcdd:	jae    0x41dcdd
  41dcdf:	add    al,BYTE PTR [esi]
  41dce1:	out    dx,al
  41dce2:	xchg   edx,eax
  41dce3:	leave  
  41dce4:	in     eax,dx
  41dce5:	in     al,0x8b
  41dce7:	ret    0xfcf8
  41dcea:	js     0x41dcd6
  41dcec:	jmp    0xe6c9:0xdbe67afd
  41dcf3:	add    esi,DWORD PTR [eax-0x2303d3f8]
  41dcf9:	jmp    0xe3cbc54a
  41dcfe:	pop    esp
  41dcff:	jmp    0x41dcbb
  41dd01:	loop   0x41dd3f
  41dd03:	out    dx,eax
  41dd04:	test   eax,0xb8d53ae3
  41dd09:	test   DWORD PTR [edi-0xe],0x427f6af
  41dd10:	aas    
  41dd11:	or     BYTE PTR [esi],ah
  41dd13:	out    0x98,eax
  41dd15:	retf   
  41dd16:	(bad)  
  41dd18:	test   eax,0x69fe0fd6
  41dd1d:	or     ebp,edx
  41dd1f:	add    ecx,DWORD PTR [edx+0xe303f7]
	...
  41dd49:	add    BYTE PTR [eax],al
  41dd4b:	add    BYTE PTR [eax-0x14],bh
  41dd4e:	sub    al,0xeb
  41dd50:	pusha  
  41dd51:	in     al,dx
  41dd52:	sub    esp,ebx
  41dd54:	je     0x41dd4f
  41dd56:	(bad)  
  41dd57:	(bad)  
  41dd58:	fldln2 
  41dd5a:	ds jmp 0xb443e6a8
  41dd60:	jmp    0xae123347
  41dd65:	std    
  41dd66:	dec    esp
  41dd67:	iret   
  41dd68:	xchg   edx,eax
  41dd69:	jmp    0x41ddd6
  41dd6b:	les    ecx,FWORD PTR [eax+0x58]
  41dd6e:	add    bl,BYTE PTR [edx+edi*4-0x7d46a121]
  41dd75:	jmp    0x41ddd9
  41dd77:	mov    esi,0xc045ec7b
  41dd7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd7d:	out    0xff,eax
  41dd7f:	adc    cl,BYTE PTR [ecx-0x3b]
  41dd82:	ins    BYTE PTR es:[edi],dx
  41dd83:	mov    BYTE PTR [esi+edi*4+0x66],ch
  41dd87:	mov    esi,DWORD PTR [esi-0x2d]
  41dd8a:	jno    0x41dd1c
  41dd8c:	mov    DWORD PTR [edx-0x3],esi
  41dd8f:	call   0xf878:0x7562cc49
  41dd96:	ins    BYTE PTR es:[edi],dx
  41dd97:	mov    cl,BYTE PTR [ecx+0x6d7b63e6]
  41dd9d:	stc    
  41dd9e:	jo     0x41dd89
  41dda0:	dec    eax
  41dda1:	(bad)  
  41dda2:	jmp    DWORD PTR ds:0x4c53f632
  41dda8:	cmp    ah,dl
  41ddaa:	dec    edi
  41ddab:	dec    eax
  41ddac:	xor    ebp,edx
  41ddae:	ds jmp 0x41ddb4
	...
  41ddd8:	dec    eax
  41ddd9:	add    BYTE PTR ss:[edx],ch
  41dddc:	sbb    edi,esp
  41ddde:	pop    esi
  41dddf:	cmp    eax,0x3b66c632
  41dde4:	and    ch,cl
  41dde6:	jae    0x41ddfe
  41dde8:	sbb    ebx,edi
  41ddea:	ds jmp 0x2d41c838
  41ddf0:	repnz frstor [edx+0x15]
  41ddf4:	loop   0x41ddc1
  41ddf6:	data16 add BYTE PTR [esi+0x60],dl
  41ddfa:	ds add dl,dh
  41ddfd:	or     al,0x43
  41ddff:	fiadd  WORD PTR gs:[esi+0x72]
  41de03:	jb     0x41ddd5
  41de05:	pusha  
  41de06:	imul   esi,DWORD PTR [edx+edx*4+0x77],0x6c
  41de0b:	arpl   WORD PTR [edi+0x22007076],cx
  41de11:	pop    es
  41de12:	push   ebx
  41de13:	imul   ecx,DWORD PTR [esi-0x7c97bfa0],0xf76f5177
  41de1d:	jo     0x41de88
  41de1f:	je     0x41ddac
  41de21:	inc    edi
  41de22:	jbe    0x41de98
  41de24:	pop    DWORD PTR ds:0x64dc00ad
  41de2a:	imul   esp,DWORD PTR [esp+ebp*4+0x64],0x6f
  41de2f:	jae    0x41de0f
  41de31:	dec    ebx
  41de32:	data16 ins BYTE PTR es:[edi],dx
  41de34:	iret   
  41de35:	dec    esp
  41de36:	std    
  41de37:	dec    DWORD PTR [ebp+0x736c06]
	...
  41de61:	add    BYTE PTR [eax],al
  41de63:	add    dh,bl
  41de65:	ja     0x41dec7
  41de67:	ins    DWORD PTR es:[edi],dx
  41de68:	loop   0x41dece
  41de6a:	add    BYTE PTR ds:[eax],bl
  41de6d:	or     eax,0x60f46946
  41de72:	dec    ebx
  41de73:	gs stos BYTE PTR es:[edi],al
  41de75:	jno    0x41deba
  41de77:	imul   eax,DWORD PTR [esi-0x48ffc19e],0x9469460c
  41de81:	popa   
  41de82:	inc    eax
  41de83:	ins    BYTE PTR es:[edi],dx
  41de84:	xchg   ebp,eax
  41de85:	jl     0x41dee9
  41de87:	add    BYTE PTR [esi],bl
  41de89:	push   es
  41de8a:	inc    ebx
  41de8b:	gs pop esi
  41de8d:	pop    edx
  41de8e:	ins    BYTE PTR es:[edi],dx
  41de8f:	fs das 
  41de91:	jns    0x41def5
  41de93:	dec    eax
  41de94:	push   ebx
  41de95:	pop    edi
  41de96:	popa   
  41de97:	ins    BYTE PTR es:[edi],dx
  41de98:	dec    ebx
  41de99:	std    
  41de9a:	ret    0xf4ff
  41de9d:	clc    
  41de9e:	add    eax,DWORD PTR [ebp+0x66]
  41dea1:	outs   dx,BYTE PTR ds:[esi]
  41dea2:	shl    DWORD PTR [edx+0x59],cl
  41dea5:	jae    0x41de93
  41dea7:	ins    BYTE PTR es:[edi],dx
  41dea8:	ins    DWORD PTR es:[edi],dx
  41dea9:	sbb    eax,0x4c4b3efc
  41deae:	add    al,0x45
  41deb0:	dec    si
  41deb2:	int    0x6c
  41deb4:	sub    BYTE PTR [ecx-0x13],al
  41deb7:	bound  edx,QWORD PTR [edx]
  41deb9:	dec    eax
  41deba:	jecxz  0x41df28
  41debc:	or     ah,BYTE PTR [edx+0x1]
  41debf:	je     0x41df0b
  41dec1:	lahf   
  41dec2:	call   0xf28ad73a
  41dec7:	jae    0x41dec9
	...
  41deed:	add    BYTE PTR [eax],al
  41deef:	add    BYTE PTR [esi],ah
  41def1:	inc    ebp
  41def2:	int3   
  41def3:	ins    DWORD PTR es:[edi],dx
  41def4:	sub    eax,0x4aa001af
  41def9:	lahf   
  41defa:	call   0xebdafb72
  41deff:	arpl   sp,bp
  41df01:	mov    ?,edx
  41df03:	inc    ebx
  41df04:	loop   0x41de99
  41df06:	call   0xefd8d66b
  41df0b:	jbe    0x41df17
  41df0d:	bound  eax,QWORD PTR [ecx]
  41df0f:	dec    ebp
  41df10:	dec    edx
  41df11:	lahf   
  41df12:	call   0xec35da8a
  41df17:	jne    0x41df03
  41df19:	int    0xe4
  41df1b:	dec    edi
  41df1c:	mov    ecx,0xaf66e5bf
  41df21:	mov    ebp,0xc9b973ce
  41df26:	in     eax,dx
  41df27:	mov    ah,BYTE PTR fs:[edx+0x1]
  41df2b:	jp     0x41df76
  41df2d:	adc    esp,ebp
  41df2f:	jae    0x41deb9
  41df31:	sub    eax,0x30ae71f2
  41df36:	clc    
  41df37:	inc    ebx
  41df38:	mov    ds:0x6be71909,al
  41df3d:	cmc    
  41df3e:	or     eax,0xe6ca75f2
  41df43:	add    ebx,DWORD PTR [eax+0xc]
  41df46:	sti    
  41df47:	lock js 0x41df45
  41df4a:	or     edi,ebp
  41df4c:	je     0x41df18
  41df4e:	out    0x3,al
  41df50:	(bad)
	...
  41df7c:	pop    eax
  41df7d:	fprem  
  41df7f:	jmp    0xfb14:0xe6daea56
  41df86:	int    0xe5
  41df88:	and    eax,0x29d0cbdd
  41df8d:	in     al,dx
  41df8e:	shr    dl,cl
  41df90:	pop    ds
  41df91:	fbstp  TBYTE PTR [edx+eiz*8-0x3d4619cf]
  41df98:	pushf  
  41df99:	outs   dx,DWORD PTR ds:[esi]
  41df9a:	mov    al,ds:0xb2e60e02
  41df9f:	rcr    DWORD PTR [edx],cl
  41dfa1:	loop   0x41df3f
  41dfa3:	loop   0x41df9d
  41dfa5:	in     eax,0xb6
  41dfa7:	icebp  
  41dfa8:	out    dx,eax
  41dfa9:	out    0x7f,al
  41dfab:	out    dx,eax
  41dfac:	jmp    0x2e395c72
  41dfb1:	or     DWORD PTR ds:0x72e60e04,eax
  41dfb7:	rcr    cl,0xfa
  41dfba:	js     0x41dfa2
  41dfbc:	out    0xf4,al
  41dfbe:	mov    ds:0x49e5daea,al
  41dfc3:	clc    
  41dfc4:	mov    bh,0xfb
  41dfc6:	pop    edi
  41dfc7:	ret    
  41dfc8:	cmp    al,0x6f
  41dfca:	cmc    
  41dfcb:	add    BYTE PTR [edi-0x5f0dad06],ah
  41dfd1:	in     al,0x54
  41dfd3:	aad    0x24
  41dfd5:	outs   dx,DWORD PTR ds:[esi]
  41dfd6:	in     al,dx
  41dfd7:	add    DWORD PTR [eax+0x1344fff4],edx
  41dfdd:	call   0x421023
	...
  41e006:	add    BYTE PTR [eax],al
  41e008:	adc    ebp,esp
  41e00a:	push   ebx
  41e00b:	push   ss
  41e00c:	push   ds
  41e00d:	call   0xe74be475
  41e012:	pop    esi
  41e013:	sbb    ecx,DWORD PTR [edi-0x7e]
  41e016:	jmp    DWORD PTR ds:0x1053fae4
  41e01c:	jmp    0x73dc:0xd40e40e1
  41e023:	jmp    0x1a449070
  41e028:	fucomi st,st(3)
  41e02a:	(bad)  
  41e02b:	(bad)  [eax+0x3b]
  41e02e:	jmp    DWORD PTR [ebp-0x39b5055b]
  41e034:	lods   al,BYTE PTR ds:[esi]
  41e035:	sti    
  41e036:	imul   eax,esp,0xffffff86
  41e039:	out    0x6b,eax
  41e03b:	int3   
  41e03c:	xchg   esi,eax
  41e03d:	iret   
  41e03e:	push   0xffffffc4
  41e040:	mov    DWORD PTR [esi-0x3],ebp
  41e043:	add    DWORD PTR [eax-0x3c],ecx
  41e046:	bound  esi,QWORD PTR [ebp-0x628f3084]
  41e04c:	(bad)  
  41e04d:	clc    
  41e04e:	jno    0x41dfde
  41e050:	jp     0x41e0c0
  41e052:	std    
  41e053:	mov    al,0x48
  41e055:	enter  0x8471,0x69
  41e059:	cli    
  41e05a:	bound  ebx,QWORD PTR [ebp-0x6e942289]
  41e060:	gs loop 0x41e0d2
  41e063:	mov    edx,0x886dd81a
  41e068:	pop    eax
  41e069:	stc    
  41e06a:	addr16 push esi
	...
  41e094:	cmp    ebp,DWORD PTR [esi-0x3]
  41e097:	add    al,0x45
  41e099:	fnstenv [ecx+0x46]
  41e09c:	sub    al,0xeb
  41e09e:	jo     0x41e0fa
  41e0a0:	je     0x41e0dd
  41e0a2:	inc    esi
  41e0a3:	add    BYTE PTR [ebx+0x77],bh
  41e0a6:	jo     0x41e11c
  41e0a8:	xor    cl,BYTE PTR [edx]
  41e0aa:	sbb    BYTE PTR [edx],al
  41e0ac:	ins    DWORD PTR es:[edi],dx
  41e0ad:	jne    0x41e111
  41e0af:	outs   dx,BYTE PTR ds:[esi]
  41e0b0:	xor    dh,BYTE PTR [edi+0x6c]
  41e0b3:	arpl   WORD PTR [edi+0x76],dx
  41e0b6:	jo     0x41e0b8
  41e0b8:	add    eax,0x4d725004
  41e0bd:	bound  si,DWORD PTR [ebx+0x51]
  41e0c1:	xor    cl,BYTE PTR ss:[esi+0x57]
  41e0c5:	ins    DWORD PTR es:[edi],dx
  41e0c6:	jno    0x41e0c8
  41e0c8:	lds    eax,FWORD PTR [ebx]
  41e0ca:	dec    esp
  41e0cb:	inc    ebx
  41e0cc:	das    
  41e0cd:	fs ins DWORD PTR es:[edi],dx
  41e0cf:	push   ebx
  41e0d0:	(bad)  
  41e0d1:	jae    0x41e139
  41e0d3:	outs   dx,BYTE PTR ds:[esi]
  41e0d4:	xchg   ebp,eax
  41e0d5:	inc    esp
  41e0d6:	std    
  41e0d7:	dec    ecx
  41e0d9:	add    al,0x41
  41e0db:	js     0x41e068
  41e0dd:	pop    ebp
  41e0de:	dec    ebp
  41e0df:	jb     0x41e0ce
  41e0e1:	bound  si,DWORD PTR [ebx-0x1f]
  41e0e5:	or     DWORD PTR [ebp+0x7168c102],ebp
  41e0eb:	push   ebp
  41e0ec:	mov    WORD PTR [ecx+0x5e],fs
  41e0ef:	outs   dx,BYTE PTR ds:[esi]
  41e0f0:	xchg   BYTE PTR [ebp+0x62],ah
  41e0f3:	fs mov bh,0x71
  41e0f6:	pusha  
  41e0f7:	add    BYTE PTR gs:[eax],al
	...
  41e11e:	add    BYTE PTR [eax],al
  41e120:	loop   0x41e17f
  41e122:	outs   dx,WORD PTR ds:[esi]
  41e124:	int3   
  41e125:	inc    edi
  41e126:	data16 ins BYTE PTR es:[edi],dx
  41e128:	(bad)  
  41e129:	push   0x68b9006f
  41e12e:	outs   dx,DWORD PTR ds:[esi]
  41e12f:	outs   dx,BYTE PTR ds:[esi]
  41e130:	(bad)  
  41e131:	xor    BYTE PTR gs:[edx],dh
  41e134:	mov    WORD PTR [ebp+0x69],cs
  41e137:	ins    BYTE PTR es:[edi],dx
  41e138:	bound  ecx,QWORD PTR [ecx]
  41e13a:	xchg   DWORD PTR [eax],eax
  41e13c:	jno    0x41e1b1
  41e13e:	bound  esp,QWORD PTR [ecx-0x6a]
  41e141:	push   0x50
  41e143:	je     0x41e190
  41e145:	rcr    dh,1
  41e147:	pop    esi
  41e148:	sahf   
  41e149:	or     ebp,edx
  41e14b:	inc    edi
  41e14c:	mov    esi,ss
  41e14e:	call   0x4008bb4
  41e153:	xchg   ebp,eax
  41e154:	dec    ebx
  41e155:	sbb    ebx,edi
  41e157:	jae    0x41e0dc
  41e159:	and    ebp,eax
  41e15b:	ins    BYTE PTR es:[edi],dx
  41e15c:	imul   eax,DWORD PTR [ecx],0xfb7945e8
  41e162:	out    0x50,al
  41e164:	jg     0x41e176
  41e166:	fistp  WORD PTR [esi+0x5e]
  41e169:	bound  eax,QWORD PTR [ecx]
  41e16b:	push   cs
  41e16c:	dec    ebx
  41e16d:	pop    ds
  41e16e:	jmp    0xe3473ab3
  41e173:	jae    0x41e1e3
  41e175:	sbb    ebp,edi
  41e177:	bound  ax,DWORD PTR [bx+di]
  41e17b:	pusha  
  41e17c:	dec    ebx
  41e17d:	lahf   
  41e17e:	jmp    0x4a:0xee4f2a53
	...
  41e1a9:	add    BYTE PTR [eax],al
  41e1ab:	add    BYTE PTR [esi],ch
  41e1ad:	inc    ebp
  41e1ae:	mov    edi,0x1452671
  41e1b3:	or     eax,0x40ea9f4b
  41e1b8:	sbb    DWORD PTR [ebp-0x1c],eax
  41e1bb:	jae    0x41e1eb
  41e1bd:	test   eax,0x411770e7
  41e1c2:	out    0x60,eax
  41e1c4:	out    dx,al
  41e1c5:	popa   
  41e1c6:	add    ecx,esi
  41e1c8:	dec    ebx
  41e1c9:	fwait
  41e1ca:	in     eax,0x62
  41e1cc:	add    al,BYTE PTR [esp+ebp*8-0x1a7f1d8d]
  41e1d3:	data16 loope 0x41e252
  41e1d6:	add    DWORD PTR [ebp-0x11],ebp
  41e1d9:	test   BYTE PTR [esi],dh
  41e1db:	xor    ah,BYTE PTR ds:0x4b6be57e
  41e1e1:	fld    QWORD PTR [edx]
  41e1e3:	jne    0x41e19d
  41e1e5:	or     DWORD PTR [edi-0xa],edx
  41e1e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1e9:	fist   DWORD PTR [edx-0x1e]
  41e1ec:	jne    0x41e1f7
  41e1ee:	pop    esp
  41e1ef:	cmc    
  41e1f0:	test   eax,0x753619f7
  41e1f5:	in     eax,0x52
  41e1f7:	call   0x3d94e18
  41e1fc:	jns    0x41e1e4
  41e1fe:	dec    ebp
  41e1ff:	leave  
  41e200:	pushf  
  41e201:	out    0x3c,al
  41e203:	int    0x69
  41e205:	repnz sub edi,esp
  41e208:	cmp    eax,0x9903c109
  41e20d:	out    0xd,al
  41e20f:	rol    DWORD PTR [eax],cl
	...
  41e235:	add    BYTE PTR [eax],al
  41e237:	add    BYTE PTR [ecx-0x1a],bh
  41e23a:	sbb    bl,bh
  41e23c:	jle    0x41e228
  41e23e:	adc    ch,bh
  41e240:	imul   eax,esi,0x6bd4c2fe
  41e246:	add    edi,DWORD PTR ds:[ecx-0x1a]
  41e24a:	add    eax,0xd9dc30c5
  41e24f:	ficom  WORD PTR [ebx]
  41e251:	out    0xdf,al
  41e253:	add    eax,DWORD PTR [esi+0x27deb909]
  41e259:	mov    esp,0xc036ded6
  41e25e:	retf   
  41e25f:	cli    
  41e260:	pop    ebp
  41e261:	or     DWORD PTR [ebx],esp
  41e263:	add    edi,ecx
  41e265:	in     eax,0xcd
  41e267:	mov    esi,0xccbbf61e
  41e26c:	jmp    0x3e3d8e62
  41e271:	or     DWORD PTR [ecx+0x3],esp
  41e274:	sbb    esi,esp
  41e276:	(bad)  
  41e277:	(bad)  
  41e278:	cli    
  41e279:	in     eax,0x87
  41e27b:	out    dx,eax
  41e27c:	jmp    0x1e3c6e40
  41e281:	or     DWORD PTR [esi],eax
  41e283:	add    edi,ecx
  41e285:	in     eax,0xff
  41e287:	lea    esi,[edi-0x1a]
  41e28a:	jae    0x41e223
  41e28c:	sub    edi,ebx
  41e28e:	jb     0x41e2dc
  41e290:	cld    
  41e291:	bnd ds jmp 0x3b4126e0
  41e298:	or     al,0xe6
  41e29a:	inc    edx
  41e29b:	aas    
	...
  41e2c4:	xor    al,0xe0
  41e2c6:	push   ebp
  41e2c7:	dec    eax
  41e2c8:	xor    edi,eax
  41e2ca:	bound  ebp,QWORD PTR [eax]
  41e2cc:	dec    edi
  41e2cd:	cmp    edi,edi
  41e2cf:	sbb    ch,ah
  41e2d1:	in     eax,0x4c
  41e2d3:	cmp    DWORD PTR [ebx*8-0x70ae3c0],esp
  41e2da:	bound  ecx,QWORD PTR [edi]
  41e2dc:	sti    
  41e2dd:	xlat   BYTE PTR ds:[ebx]
  41e2de:	jo     0x41e2ec
  41e2e0:	cmc    
  41e2e1:	push   0xfffffffd
  41e2e3:	repnz dec ecx
  41e2e5:	les    esp,FWORD PTR [edx-0x3]
  41e2e8:	or     eax,0x2fb62fa
  41e2ed:	int3   
  41e2ee:	push   0xc
  41e2f0:	or     BYTE PTR [ebx-0x3],ch
  41e2f3:	or     BYTE PTR [ebx-0x4e26a10c],ch
  41e2f9:	cmp    DWORD PTR [edx],esi
  41e2fb:	bts    esi,ebx
  41e2fe:	imul   ebp,ecx,0x48
  41e301:	push   edx
  41e302:	add    BYTE PTR [edx-0x2a941850],bh
  41e308:	(bad)  
  41e30a:	(bad)  
  41e30b:	retf   0xf6a5
  41e30e:	bound  ebp,QWORD PTR [eax-0x3b9807b8]
  41e314:	ins    BYTE PTR es:[edi],dx
  41e315:	fidiv  WORD PTR [eax]
  41e317:	(bad)  [edx]
  41e319:	in     eax,0x6b
  41e31b:	lea    ecx,[eax-0xe]
  41e31e:	call   FWORD PTR [edi-0x649d099e]
  41e324:	jb     0x41e30d
  41e326:	jae    0x41e328
	...
  41e350:	mov    cl,0x74
  41e352:	pop    esi
  41e353:	arpl   WORD PTR [ecx-0x5c9390c5],di
  41e359:	push   es
  41e35a:	ja     0x41e35c
  41e35c:	jmp    0x41e3bd
  41e35e:	jno    0x41e3c5
  41e360:	mov    al,ds:0x61746263
  41e365:	ja     0x41e3c9
  41e367:	popa   
  41e368:	mov    gs,WORD PTR [eax+0x52]
  41e36b:	jb     0x41e3d3
  41e36d:	inc    esp
  41e36e:	std    
  41e36f:	call   FWORD PTR [ebp+0x5c]
  41e372:	imul   ebp,DWORD PTR [ecx-0x7c],0x68
  41e376:	jno    0x41e3a6
  41e378:	jle    0x41e3db
  41e37a:	imul   eax,DWORD PTR [eax],0x744f0527
  41e380:	pusha  
  41e381:	push   esi
  41e382:	jno    0x41e3f6
  41e384:	cmp    eax,DWORD PTR [ebp+edi*8-0x1]
  41e388:	loop   0x41e38e
  41e38a:	dec    edi
  41e38b:	je     0x41e3cd
  41e38d:	push   edi
  41e38e:	inc    eax
  41e38f:	push   0x3e3ce0
  41e394:	inc    BYTE PTR [edi+ecx*2]
  41e397:	je     0x41e369
  41e399:	cmp    DWORD PTR [ecx+ecx*2-0x3c],ebp
  41e39d:	pop    ecx
  41e39e:	add    BYTE PTR ds:[esi-0x6f8bb0fc],dh
  41e3a5:	push   esi
  41e3a6:	jno    0x41e41a
  41e3a8:	jecxz  0x41e3af
  41e3aa:	jmp    0x7743:0x6f59e100
  41e3b1:	jne    0x41e3fe
  41e3b3:	dec    ecx
	...
  41e3dc:	jecxz  0x41e3e3
  41e3de:	push   cs
  41e3df:	add    DWORD PTR [ecx-0x41ac90a7],esi
  41e3e5:	ja     0x41e42d
  41e3e7:	push   edi
  41e3e8:	jb     0x41e3ef
  41e3ea:	outs   dx,DWORD PTR ds:[esi]
  41e3eb:	push   0x705e5ac6
  41e3f0:	dec    ebx
  41e3f1:	mov    DWORD PTR [ebx],esp
  41e3f3:	fs imul ebx
  41e3f6:	add    BYTE PTR [esi],dh
  41e3f8:	dec    ebx
  41e3f9:	cdq    
  41e3fa:	jecxz  0x41e45e
  41e3fc:	fisttp WORD PTR [edx-0x12189c1c]
  41e402:	add    BYTE PTR [edx],ch
  41e404:	dec    ebx
  41e405:	(bad)  
  41e406:	loopne 0x41e47b
  41e408:	mov    bl,0xbf
  41e40a:	lock jae 0x41e3b6
  41e40d:	jmp    0xd5e042f7
  41e412:	add    eax,DWORD PTR [edi+0x4b]
  41e415:	ret    
  41e416:	in     al,0x60
  41e418:	mov    al,0xd5
  41e41a:	out    dx,eax
  41e41b:	call   DWORD PTR [eax+edx*1]
  41e41e:	add    al,0x61
  41e420:	pushf  
  41e421:	shl    ch,1
  41e423:	bound  ebp,QWORD PTR [eax+0x1e]
  41e426:	add    al,0x26
  41e428:	dec    ebx
  41e429:	adc    ebp,eax
  41e42b:	ins    BYTE PTR es:[edi],dx
  41e42c:	js     0x41e43b
  41e42e:	icebp  
  41e42f:	ins    BYTE PTR es:[edi],dx
  41e430:	push   0x4b73df0b
  41e435:	cs add al,0x71
  41e438:	data16 add al,ah
  41e43b:	call   esp
  41e43d:	xor    eax,DWORD PTR [ecx+esi*2]
	...
  41e468:	pushw  cs
  41e46a:	fbld   TBYTE PTR [eax+0x3f]
  41e46d:	jb     0x41e470
  41e46f:	ds dec ebx
  41e471:	inc    esp
  41e472:	loopne 0x41e4d4
  41e474:	cmp    eax,0x4b450172
  41e479:	inc    ebx
  41e47a:	loopne 0x41e4ef
  41e47c:	sbb    BYTE PTR [edi-0x5dd3971e],ah
  41e482:	in     eax,dx
  41e483:	call   DWORD PTR [ecx+edx*1-0x4f07aafc]
  41e48a:	shl    BYTE PTR [ebx-0x16],cl
  41e48d:	mov    ds:0x8fb72ed,eax
  41e492:	out    0x3,eax
  41e494:	(bad)  
  41e495:	fisttp DWORD PTR [ebp-0x26e41c1e]
  41e49b:	and    eax,0x37af4ef
  41e4a0:	adc    BYTE PTR [ecx],cl
  41e4a2:	mov    bl,0xe6
  41e4a4:	cmc    
  41e4a5:	in     al,dx
  41e4a6:	xchg   ebx,eax
  41e4a7:	bnd jmp 0xb8337b87
  41e4ad:	out    dx,eax
  41e4ae:	jg     0x41e497
  41e4b0:	test   eax,0x9403e6ca
  41e4b5:	or     DWORD PTR [esi+eiz*8],esi
  41e4b8:	mov    al,ds:0x79e047f8
  41e4bd:	fadd   QWORD PTR [ebx-0xe]
  41e4c0:	mov    ebx,ds
  41e4c2:	push   ebp
  41e4c3:	fisubr WORD PTR [ebp-0x67fbbc0b]
  41e4c9:	fmul   QWORD PTR [ebx-0xe]
	...
  41e4f4:	imul   esi,edi,0xf5672634
  41e4fa:	adc    al,BYTE PTR [ebx+ecx*2]
  41e4fd:	or     edi,esp
  41e4ff:	add    ecx,DWORD PTR [ebx+0x9]
  41e502:	out    0x3,eax
  41e504:	dec    ebx
  41e505:	or     edi,esp
  41e507:	add    ecx,DWORD PTR [ebx+0x9]
  41e50a:	out    0x3,eax
  41e50c:	dec    ebx
  41e50d:	or     edi,esp
  41e50f:	add    ecx,DWORD PTR [ebx+0x9]
  41e512:	out    0x3,eax
  41e514:	dec    ebx
  41e515:	or     edi,esp
  41e517:	add    ecx,DWORD PTR [ebx+0x9]
  41e51a:	out    0x3,eax
  41e51c:	dec    ebx
  41e51d:	or     edi,esp
  41e51f:	add    ecx,DWORD PTR [ebx+0x9]
  41e522:	out    0x3,eax
  41e524:	dec    ebx
  41e525:	or     edi,esp
  41e527:	add    ecx,DWORD PTR [ebx+0x9]
  41e52a:	out    0x3,eax
  41e52c:	dec    ebx
  41e52d:	or     edi,esp
  41e52f:	add    ecx,DWORD PTR [ebx+0x9]
  41e532:	add    cl,ch
  41e534:	dec    eax
  41e535:	or     DWORD PTR [eax],eax
  41e537:	jmp    0xe941ee84
  41e53c:	dec    eax
  41e53d:	or     DWORD PTR [eax],eax
  41e53f:	jmp    0xe941ee8c
  41e544:	dec    eax
  41e545:	or     DWORD PTR [eax],eax
  41e547:	jmp    0xe941ee94
  41e54c:	dec    eax
  41e54d:	or     DWORD PTR [eax],eax
  41e54f:	jmp    0xe941ee9c
  41e554:	dec    eax
  41e555:	or     DWORD PTR [eax],eax
  41e557:	jmp    0x41e55c
	...
  41e580:	dec    eax
  41e581:	or     DWORD PTR [eax],eax
  41e583:	jmp    0xe941eed0
  41e588:	dec    eax
  41e589:	or     DWORD PTR [eax],eax
  41e58b:	jmp    0xe941eed8
  41e590:	dec    eax
  41e591:	or     DWORD PTR [eax],eax
  41e593:	jmp    0xe941eee0
  41e598:	dec    eax
  41e599:	or     DWORD PTR [eax],eax
  41e59b:	jmp    0xe941eee8
  41e5a0:	dec    eax
  41e5a1:	or     DWORD PTR [eax],eax
  41e5a3:	jmp    0xe941eef0
  41e5a8:	dec    eax
  41e5a9:	or     DWORD PTR [eax],eax
  41e5ab:	jmp    0xe941eef8
  41e5b0:	dec    eax
  41e5b1:	or     DWORD PTR [eax],eax
  41e5b3:	jmp    0xe941ef00
  41e5b8:	dec    eax
  41e5b9:	or     DWORD PTR [eax],eax
  41e5bb:	jmp    0xe941ef08
  41e5c0:	dec    eax
  41e5c1:	or     DWORD PTR [eax],eax
  41e5c3:	jmp    0xe941ef10
  41e5c8:	dec    eax
  41e5c9:	or     DWORD PTR [eax],eax
  41e5cb:	jmp    0xe941ef18
  41e5d0:	dec    eax
  41e5d1:	or     DWORD PTR [eax],eax
  41e5d3:	add    BYTE PTR [edx-0x5dfffff6],ah
  41e5d9:	or     al,BYTE PTR [eax]
  41e5db:	add    BYTE PTR [edx+0xa],dh
  41e5de:	add    BYTE PTR [eax],al
  41e5e0:	jb     0x41e5ec
	...
  41e60a:	add    BYTE PTR [eax],al
  41e60c:	bound  ecx,QWORD PTR [edx]
  41e60e:	add    BYTE PTR [eax],al
  41e610:	bound  ecx,QWORD PTR [edx]
  41e612:	add    BYTE PTR [eax],al
  41e614:	xchg   edi,eax
  41e615:	push   ebp
  41e616:	int3   
  41e617:	int3   
  41e618:	(bad)  
  41e619:	push   ebp
  41e61a:	int3   
  41e61b:	int3   
  41e61c:	(bad)  
  41e61d:	xchg   ecx,eax
  41e61e:	in     al,dx
  41e61f:	push   ecx
  41e620:	ror    ah,0x7
  41e623:	mov    dl,BYTE PTR [ebx-0x6f]
  41e626:	dec    ebx
  41e627:	call   eax
  41e629:	imul   ebx,DWORD PTR [ebx-0x3d],0xffffff9e
  41e62d:	xchg   edx,eax
  41e62e:	in     al,dx
  41e62f:	push   ecx
  41e630:	xchg   ebp,eax
  41e631:	mov    esi,0x92afc930
  41e636:	outs   dx,DWORD PTR ds:[esi]
  41e637:	xor    al,dl
  41e639:	fimul  WORD PTR [ebx]
  41e63b:	mov    ebx,DWORD PTR [ebp+0x43468905]
  41e641:	nop
  41e642:	inc    ebx
  41e643:	cld    
  41e644:	shl    dh,1
  41e646:	pop    ds
  41e647:	mov    esi,DWORD PTR ds:0x7f6b3d89
  41e64d:	push   cs
  41e64e:	cmp    BYTE PTR [edi],0x80
  41e651:	fld    QWORD PTR [ecx]
  41e653:	jmp    0x41e647
  41e655:	lds    ebx,FWORD PTR [ebp-0x75]
  41e658:	out    0xc3,al
  41e65a:	ror    ah,0x7e
  41e65d:	xchg   edx,eax
  41e65e:	in     al,dx
  41e65f:	sbb    edi,0x2c
  41e662:	mov    DWORD PTR [ebp+0x53],eax
  41e665:	nop
  41e666:	inc    ebx
  41e667:	loopne 0x41e639
  41e669:	rcr    edi,cl
  41e66b:	mov    ebx,DWORD PTR [esi]
  41e66d:	imul   eax,DWORD PTR [ecx],0x51
	...
  41e697:	add    BYTE PTR [edi-0x70],ch
  41e69a:	push   ebx
  41e69b:	in     al,0xd0
  41e69d:	retf   
  41e69e:	jecxz  0x41e62b
  41e6a0:	adc    esp,ecx
  41e6a2:	add    BYTE PTR [ebp+0x43],cl
  41e6a5:	nop
  41e6a6:	dec    ebx
  41e6a7:	clc    
  41e6a8:	sar    BYTE PTR [ebx+0x2d098bf7],0x1
  41e6af:	inc    ebp
  41e6b0:	push   ebx
  41e6b1:	nop
  41e6b2:	inc    ebx
  41e6b3:	call   0x8c39ba78
  41e6b8:	sbb    ch,BYTE PTR [ecx]
  41e6ba:	add    DWORD PTR [ebp+0x53],edx
  41e6bd:	nop
  41e6be:	push   ebx
  41e6bf:	lock ror bl,1
  41e6c2:	test   DWORD PTR [ebx+0x4d010503],0xfc4b9043
  41e6cc:	or     al,0xcf
  41e6ce:	repz add BYTE PTR [ebx+0x9],cl
  41e6d2:	add    bl,ch
  41e6d4:	inc    edx
  41e6d5:	nop
  41e6d6:	push   ebx
  41e6d7:	hlt    
  41e6d8:	enter  0xff47,0x88
  41e6dc:	jle    0x41e73b
  41e6de:	mov    DWORD PTR [ebp+0x23],eax
  41e6e1:	xchg   ecx,eax
  41e6e2:	dec    ebx
  41e6e3:	hlt    
  41e6e4:	push   eax
  41e6e5:	rcl    DWORD PTR [edi],1
  41e6e7:	jae    0x41e66c
  41e6e9:	nop
  41e6ea:	push   ebx
  41e6eb:	lock rol BYTE PTR [edi],1
  41e6ee:	add    DWORD PTR [ebp+0x53],eax
  41e6f1:	xchg   edx,eax
  41e6f2:	inc    ebx
  41e6f3:	fsub   QWORD PTR [ecx+0x13]
  41e6f6:	push   0xffc949ac
  41e6fb:	mov    al,BYTE PTR [eax]
	...
  41e721:	add    BYTE PTR [eax],al
  41e723:	add    BYTE PTR [esi+0x7be84f45],dl
  41e729:	or     al,BYTE PTR [eax]
  41e72b:	add    al,cl
  41e72d:	dec    ebp
  41e72e:	or     al,0x85
  41e730:	or     ebx,edi
  41e732:	sbb    BYTE PTR [ebx+0x45895d1e],cl
  41e738:	mov    bl,0x14
  41e73a:	mov    ch,0xc
  41e73c:	sbb    edx,DWORD PTR [edx-0x413f13b5]
  41e742:	jmp    0x41e6cf
  41e744:	push   cs
  41e745:	mov    DWORD PTR gs:[ebx+edi*4],eax
  41e749:	or     BYTE PTR [ebx+0x8],al
  41e74c:	mov    al,ds:0x9b4d8916
  41e751:	mov    BYTE PTR [edi-0x10292dfc],bh
  41e757:	jmp    0x41e700
  41e759:	sbb    al,al
  41e75b:	mov    ebp,DWORD PTR [esi-0x3a]
  41e75e:	ror    ah,0x7f
  41e761:	push   ebp
  41e762:	int3   
  41e763:	int3   
  41e764:	xchg   edi,eax
  41e765:	push   ebp
  41e766:	int3   
  41e767:	int3   
  41e768:	(bad)  
  41e769:	push   ebp
  41e76a:	int3   
  41e76b:	int3   
  41e76c:	dec    BYTE PTR [edi+0x15f83ec]
  41e772:	call   0xfda62b7c
  41e777:	mov    DWORD PTR [esi+0x23458971],eax
  41e77d:	mov    ecx,0x642c29e7
  41e782:	std    
  41e783:	or     DWORD PTR [edi],0xd
  41e786:	mov    eax,ds:0xb4
	...
  41e7af:	add    BYTE PTR [esi-0x36],dh
  41e7b2:	jmp    DWORD PTR [edi-0x29]
  41e7b5:	push   es
  41e7b6:	inc    eax
  41e7b7:	add    al,al
  41e7b9:	aad    0xe7
  41e7bb:	push   ecx
  41e7bc:	add    al,0xfe
  41e7be:	mov    bl,0x55
  41e7c0:	mov    cl,BYTE PTR [ecx]
  41e7c2:	mov    eax,ds:0xffca9eb8
  41e7c7:	imul   ecx,DWORD PTR [ebx-0x11],0x71767ff
  41e7ce:	inc    eax
  41e7cf:	add    ah,bl
  41e7d1:	std    
  41e7d2:	mov    bh,0x55
  41e7d4:	mov    cl,BYTE PTR [ecx]
  41e7d6:	xchg   DWORD PTR [ebp-0x1d],eax
  41e7d9:	dec    ebx
  41e7da:	inc    ebx
  41e7db:	cld    
  41e7dc:	dec    ebx
  41e7dd:	or     DWORD PTR [eax],eax
  41e7df:	add    BYTE PTR [eax-0x48aa76ef],dh
  41e7e5:	xchg   edx,eax
  41e7e7:	add    edx,eax
  41e7e9:	mov    ebp,0x652683fb
  41e7ee:	or     BYTE PTR [ebx+0x6a],dh
  41e7f1:	nop
  41e7f2:	inc    ebx
  41e7f3:	cld    
  41e7f4:	rcl    BYTE PTR [ebx+eax*4],0x8c
  41e7f8:	dec    ecx
  41e7f9:	leave  
  41e7fa:	call   DWORD PTR [eax-0x30]
  41e7fd:	mov    ebp,0xfd7c52e7
  41e802:	mov    bl,0x55
  41e804:	or     cl,BYTE PTR [ecx]
  41e806:	mov    DWORD PTR [ebp+0x6f],ecx
  41e809:	xchg   ecx,eax
  41e80a:	add    al,0x8d
  41e80c:	lahf   
  41e80d:	mov    ebp,0x3870003e
  41e812:	mov    ebp,esp
	...
  41e83c:	test   BYTE PTR [edi-0x34],0xcc
  41e840:	jg     0x41e896
  41e842:	int3   
  41e843:	int3   
  41e844:	pop    ss
  41e845:	push   esi
  41e846:	int3   
  41e847:	int3   
  41e848:	orps   xmm1,xmm4
  41e84b:	int3   
  41e84c:	sahf   
  41e84d:	mov    gs,esp
  41e84f:	mov    eax,ds:0x3ebb5b
  41e854:	mov    es,WORD PTR gs:[eax+0x30]
  41e858:	rcl    ah,1
  41e85a:	pop    es
  41e85b:	ds ret 0x7d1
  41e85f:	pop    ebp
  41e860:	or     BYTE PTR [esi-0x34],dl
  41e863:	int3   
  41e864:	pop    ss
  41e865:	push   esi
  41e866:	int3   
  41e867:	int3   
  41e868:	orps   xmm1,xmm4
  41e86b:	int3   
  41e86c:	sahf   
  41e86d:	mov    gs,esp
  41e86f:	mov    eax,DWORD PTR [esi-0x6974afeb]
  41e875:	adc    DWORD PTR [edi-0x1],ecx
  41e878:	ss popf 
  41e87a:	push   ebx
  41e87b:	inc    ecx
  41e87c:	dec    ebx
  41e87d:	(bad)  
  41e87e:	ror    ah,0xff
  41e881:	push   ebp
  41e882:	int3   
  41e883:	int3   
  41e884:	xchg   edi,eax
  41e885:	push   ebp
  41e886:	int3   
  41e887:	int3   
  41e888:	(bad)  
  41e889:	push   ebp
  41e88a:	int3   
  41e88b:	int3   
  41e88c:	push   ds
  41e88d:	mov    gs,esp
  41e88f:	sbb    DWORD PTR [edi+0x31006a11],0x9
  41e896:	push   0xffc949dc
  41e89b:	(bad)  
  41e89c:	mov    eax,ds:0x4153
	...
  41e8c6:	add    BYTE PTR [eax],al
  41e8c8:	dec    ebx
  41e8c9:	nop
  41e8ca:	inc    ebx
  41e8cb:	clc    
  41e8cc:	repz jo 0x41e8d1
  41e8cf:	inc    eax
  41e8d0:	dec    ebx
  41e8d1:	mov    es,WORD PTR [ebx-0x8]
  41e8d4:	sbb    esi,DWORD PTR [ecx-0x46]
  41e8d7:	jmp    FWORD PTR [edx+eiz*2-0x7f]
  41e8db:	les    edx,FWORD PTR [ebx-0x70]
  41e8de:	inc    ebx
  41e8df:	cld    
  41e8e0:	rcl    ah,1
  41e8e2:	sqrtps xmm0,xmm0
  41e8e5:	mov    esp,0xccc0520b
  41e8ea:	pop    es
  41e8eb:	push   eax
  41e8ec:	inc    esp
  41e8ed:	mov    esp,0xc4268bfb
  41e8f2:	ror    ah,0x9e
  41e8f5:	mov    gs,esp
  41e8f7:	push   ecx
  41e8f8:	add    al,0xcc
  41e8fa:	sti    
  41e8fb:	add    BYTE PTR [ebx+0x9],cl
  41e8fe:	add    bl,ch
  41e900:	push   edx
  41e901:	mov    es,WORD PTR [ebx-0x4]
  41e904:	enter  0xff48,0x88
  41e908:	xchg   BYTE PTR [ebp-0x77],ah
  41e90b:	dec    ebp
  41e90c:	pop    es
  41e90d:	push   ds
  41e90e:	dec    ebx
  41e90f:	adc    BYTE PTR [eax+0x2],bh
  41e912:	mov    DWORD PTR [ebp+0x43],edx
  41e915:	push   es
  41e916:	push   ebx
  41e917:	cld    
  41e918:	cmp    al,0x9b
  41e91a:	add    cl,BYTE PTR [ebx+0x4d011596]
  41e920:	fist   WORD PTR [ecx]
  41e922:	mov    dh,0x11
  41e924:	adc    BYTE PTR [edi+0x74],al
  41e927:	pop    es
  41e928:	xchg   ebx,eax
  41e929:	pop    es
	...
  41e952:	add    BYTE PTR [eax],al
  41e954:	dec    ebx
  41e955:	outs   dx,BYTE PTR ds:[esi]
  41e956:	add    al,0xeb
  41e958:	fwait
  41e959:	adc    eax,0xc3ae8bc0
  41e95e:	ror    ah,0x7f
  41e961:	push   esp
  41e962:	int3   
  41e963:	int3   
  41e964:	xchg   edi,eax
  41e965:	push   esp
  41e966:	int3   
  41e967:	int3   
  41e968:	(bad)  
  41e969:	push   esp
  41e96a:	int3   
  41e96b:	int3   
  41e96c:	dec    BYTE PTR [ebp+0x933b9ec]
  41e972:	add    BYTE PTR [eax],al
  41e974:	out    dx,eax
  41e975:	lea    eax,[edi]
  41e977:	mov    DWORD PTR [esi-0x7],ecx
  41e97a:	push   ebp
  41e97b:	inc    ecx
  41e97c:	dec    ebx
  41e97d:	(bad)  
  41e97e:	ror    ah,0x7f
  41e981:	push   esp
  41e982:	int3   
  41e983:	int3   
  41e984:	xchg   edi,eax
  41e985:	push   esp
  41e986:	int3   
  41e987:	int3   
  41e988:	(bad)  
  41e989:	push   esp
  41e98a:	int3   
  41e98b:	int3   
  41e98c:	dec    BYTE PTR [ebp-0x7a07c14]
  41e992:	mov    BYTE PTR [ebp+0x53],al
  41e995:	mov    WORD PTR [eax+0x4],?
  41e998:	dec    ebx
  41e999:	adc    BYTE PTR [eax+ecx*4-0x74fff6b5],al
  41e9a0:	jle    0x41e9b3
  41e9a2:	mov    DWORD PTR [ecx+0x4f],edx
  41e9a5:	mov    edx,gs
  41e9a7:	or     dl,bh
  41e9a9:	jae    0x41e932
  41e9ab:	push   ebp
  41e9ac:	pop    ds
  41e9ad:	xchg   ebp,eax
  41e9ae:	inc    ebx
  41e9af:	or     al,cl
  41e9b1:	dec    ecx
  41e9b2:	or     BYTE PTR [ecx+0x45c5598e],cl
	...
  41e9e0:	dec    DWORD PTR [ecx]
  41e9e2:	add    BYTE PTR [eax],al
  41e9e4:	dec    ebx
  41e9e5:	je     0x41e9ee
  41e9e7:	mov    edi,DWORD PTR [esi+0x5d]
  41e9ea:	add    ecx,0xfc4b924a
  41e9f0:	shl    BYTE PTR [esi+0x557e3bfb],1
  41e9f6:	jno    0x41ea3e
  41e9f8:	rol    dh,0xfb
  41e9fb:	mov    edx,DWORD PTR [esi]
  41e9fd:	pop    ecx
  41e9fe:	or     eax,0xbeca57b7
  41ea03:	cli    
  41ea04:	inc    edi
  41ea05:	mov    edx,?
  41ea07:	add    esi,DWORD PTR [esi]
  41ea09:	sbb    ecx,DWORD PTR [ecx+0x4b94a745]
  41ea0f:	lock dec esp
  41ea11:	cwde   
  41ea12:	adc    al,0x41
  41ea14:	retf   0xfd6b
  41ea17:	cmovnp ecx,DWORD PTR [ecx]
  41ea1a:	xchg   DWORD PTR [ebp-0x7d],edx
  41ea1d:	xchg   esp,eax
  41ea1e:	inc    ebx
  41ea1f:	or     al,dl
  41ea21:	into   
  41ea22:	or     eax,DWORD PTR [ebx]
  41ea24:	inc    ebx
  41ea25:	xchg   esp,eax
  41ea26:	push   ebx
  41ea27:	clc    
  41ea28:	rol    BYTE PTR ds:0xf90e030f,0x88
  41ea2f:	dec    ebp
  41ea30:	push   ebx
  41ea31:	xchg   esp,eax
  41ea32:	push   ebx
  41ea33:	or     al,0x48
  41ea35:	cli    
  41ea36:	mov    BYTE PTR [ebp+0x53],cl
  41ea39:	xchg   edx,eax
  41ea3a:	add    al,0xa
  41ea3c:	xor    BYTE PTR [edx-0x6bacaa77],dh
  41ea42:	inc    ebx
  41ea43:	or     BYTE PTR [eax],al
	...
  41ea69:	add    BYTE PTR [eax],al
  41ea6b:	add    BYTE PTR [eax-0x35],cl
  41ea6e:	add    ecx,DWORD PTR [ecx+0x6be71186]
  41ea74:	and    al,0x60
  41ea76:	std    
  41ea77:	mov    esp,DWORD PTR [esi]
  41ea79:	mov    esi,0x947eccc0
  41ea7e:	in     al,dx
  41ea7f:	sbb    DWORD PTR [edi],0x25
  41ea82:	mov    DWORD PTR [ebp+0x53],eax
  41ea85:	xchg   edx,eax
  41ea86:	inc    ebx
  41ea87:	in     al,0xd0
  41ea89:	int    0xe3
  41ea8b:	mov    ebx,DWORD PTR [esi+0x2f510165]
  41ea91:	xchg   edx,eax
  41ea92:	push   ebx
  41ea93:	call   0x8c29b068
  41ea98:	ror    DWORD PTR [eax-0x6db50000],cl
  41ea9e:	dec    ebx
  41ea9f:	lock enter 0xefdd,0x0
  41eaa4:	push   esp
  41eaa5:	test   ecx,edi
  41eaa7:	add    BYTE PTR [ebx+0x9],cl
  41eaaa:	mov    DWORD PTR [ebp+0x43],edx
  41eaad:	or     al,0x53
  41eaaf:	lock ret 0xdfb5
  41eab3:	mov    ecx,DWORD PTR [esi]
  41eab5:	imul   eax,DWORD PTR [ecx+0xd093b78],0x8ae84
  41eabf:	add    BYTE PTR [ecx],ah
  41eac1:	or     DWORD PTR [edx+0x0],ebp
  41eac4:	ror    ch,1
  41eac6:	fisttp WORD PTR [ebx+0x51011116]
  41eacc:	inc    edi
  41eacd:	mov    ebx,0x15fc
	...
  41eaf6:	add    BYTE PTR [eax],al
  41eaf8:	mov    bl,0xb5
  41eafa:	ds add dl,dl
  41eafd:	(bad)  
  41eb00:	push   es
  41eb01:	imul   eax,DWORD PTR [ecx+0x16d54b38],0x8968fe8b
  41eb0b:	push   ebp
  41eb0c:	push   ebx
  41eb0d:	or     cl,BYTE PTR [edi]
  41eb0f:	mov    DWORD PTR [esi+0x2b45896d],edx
  41eb15:	xchg   ebx,eax
  41eb16:	dec    ebx
  41eb17:	or     BYTE PTR [eax-0x2f],cl
  41eb1a:	jns    0x182b40b6
  41eb20:	shl    BYTE PTR [edi+ebx*8+0x1118e8b],1
  41eb27:	inc    edx
  41eb28:	cmp    edx,DWORD PTR [eax-0x332f0bbd]
  41eb2e:	fisttp WORD PTR [ebx+0x11011196]
  41eb34:	ret    0xebb4
  41eb37:	mov    DWORD PTR [esi+0x4b000061],0xeb458909
  41eb41:	mov    bh,BYTE PTR [eax+0x10]
  41eb44:	dec    ebx
  41eb45:	aad    0xc
  41eb47:	mov    edi,DWORD PTR [esi+0x69]
  41eb4a:	cmp    DWORD PTR [ecx],0xc704d54b
  41eb50:	push   es
  41eb51:	popa   
  41eb52:	(bad)  
  41eb53:	dec    DWORD PTR [ebx+0x9]
  41eb56:	mov    DWORD PTR [ebp-0x49],edx
  41eb59:	mov    bh,BYTE PTR [edx]
	...
  41eb83:	add    BYTE PTR [edi],bl
  41eb85:	call   0x92d93112
  41eb8a:	or     BYTE PTR [ecx+0x9aa],al
  41eb90:	retf   
  41eb91:	aad    0x1b
  41eb93:	mov    ebx,DWORD PTR [esi]
  41eb95:	push   ebp
  41eb96:	mov    DWORD PTR [edx],eax
  41eb98:	es pop esi
  41eb9a:	std    
  41eb9b:	push   esp
  41eb9d:	mov    eax,0xb86f4d88
  41eba2:	out    0xb5,eax
  41eba4:	pop    si
  41eba6:	std    
  41eba7:	add    DWORD PTR [edi+0x77458711],0x72
  41ebae:	sbb    al,0x8b
  41ebb0:	not    BYTE PTR [ecx+ecx*4+0x2]
  41ebb4:	ror    bl,1
  41ebb6:	pop    es
  41ebb7:	lea    edx,[edi-0x3fadfdef]
  41ebbd:	ret    
  41ebbe:	sti    
  41ebbf:	push   eax
  41ebc0:	and    esi,DWORD PTR [esi-0x5]
  41ebc3:	jmp    DWORD PTR [edx+ecx*4]
  41ebc6:	les    ecx,FWORD PTR [eax]
  41ebc8:	rol    bl,cl
  41ebca:	fisttp DWORD PTR [ebx+0x55895586]
  41ebd0:	out    dx,eax
  41ebd1:	(bad)  
  41ebd2:	jnp    0xc0c34166
  41ebd8:	inc    edi
  41ebd9:	nop
  41ebda:	inc    ebx
  41ebdb:	hlt    
  41ebdc:	ror    bl,0xeb
  41ebdf:	or     DWORD PTR [edx],0x5
  41ebe2:	xchg   DWORD PTR [ebp-0x9],ecx
  41ebe5:	jno    0x41eb7c
  41ebe7:	mov    eax,DWORD PTR [eax]
	...
  41ec0d:	add    BYTE PTR [eax],al
  41ec0f:	add    BYTE PTR [esi+0x69],dh
  41ec12:	add    edx,0xe053903f
  41ec18:	loop   0x41ec28
  41ec1a:	std    
  41ec1b:	inc    esp
  41ec1d:	xchg   ecx,eax
  41ec1e:	jecxz  0x41ec7d
  41ec20:	mov    BYTE PTR [esp+ecx*8-0x34],cl
  41ec24:	push   ds
  41ec25:	xchg   edx,eax
  41ec26:	in     al,dx
  41ec27:	sbb    DWORD PTR [edi+0x49f06810],0xffffffc9
  41ec2e:	(bad)  
  41ec2f:	(bad)  
  41ec30:	ss dec ecx
  41ec32:	push   ebx
  41ec33:	inc    ecx
  41ec34:	dec    ebx
  41ec35:	nop
  41ec36:	inc    ebx
  41ec37:	clc    
  41ec38:	and    ebx,DWORD PTR [ebp+0x2]
  41ec3b:	inc    eax
  41ec3c:	dec    ebx
  41ec3d:	xchg   edx,eax
  41ec3e:	inc    ebx
  41ec3f:	clc    
  41ec40:	sbb    esi,DWORD PTR [ecx+0x3e]
  41ec43:	std    
  41ec44:	je     0x41eca3
  41ec46:	add    esp,0xfc439043
  41ec4c:	ror    bl,1
  41ec4e:	sqrtps xmm2,xmm0
  41ec51:	mov    bl,0xb
  41ec53:	push   edx
  41ec54:	rol    bl,0x7
  41ec57:	push   eax
  41ec58:	dec    esp
  41ec59:	mov    bl,0xfb
  41ec5b:	mov    ebp,DWORD PTR [esi]
  41ec5d:	mov    edi,0x4e0fccc0
  41ec62:	int3   
  41ec63:	int3   
  41ec64:	sahf   
  41ec65:	nop
  41ec66:	in     al,dx
  41ec67:	mov    eax,ds:0x3eb34f
  41ec6c:	or     eax,0x368b680a
  41ec71:	cmc    
  41ec72:	push   ebp
  41ec73:	inc    ecx
	...
  41ec9c:	dec    ebx
  41ec9d:	xchg   edx,eax
  41ec9e:	push   eax
  41ec9f:	add    ecx,ebx
  41eca1:	dec    eax
  41eca2:	mov    BYTE PTR [eax+0x4e],dl
  41eca5:	mov    esi,0x4e0fccc0
  41ecaa:	int3   
  41ecab:	int3   
  41ecac:	sahf   
  41ecad:	nop
  41ecae:	in     al,dx
  41ecaf:	sbb    edi,0xd
  41ecb2:	lahf   
  41ecb3:	adc    BYTE PTR [ebp-0x36],bh
  41ecb6:	dec    DWORD PTR [edx+0x3ec718f9]
  41ecbc:	ror    cl,0x2f
  41ecbf:	mov    edi,ecx
  41ecc1:	nop
  41ecc2:	sar    BYTE PTR [esi],cl
  41ecc4:	rcl    cl,1
  41ecc6:	or     ecx,DWORD PTR [ebx-0xbb46d67]
  41eccc:	rol    dh,0xf3
  41eccf:	mov    eax,DWORD PTR [ebx]
  41ecd1:	or     eax,0x90a34d87
  41ecd6:	push   ebx
  41ecd7:	clc    
  41ecd8:	shl    BYTE PTR [esi+0x94ab8fb],cl
  41ecde:	add    BYTE PTR [eax],al
  41ece0:	(bad)  
  41ece1:	dec    ecx
  41ece2:	je     0x41ed28
  41ece4:	enter  0xf7de,0x0
  41ece8:	test   BYTE PTR [ecx+esi*1],0xc0
  41ecec:	pusha  
  41eced:	sbb    eax,0x90734d89
  41ecf2:	dec    edi
  41ecf3:	sbb    BYTE PTR [eax],ah
  41ecf5:	mov    dh,0x7
  41ecf7:	jne    0x41ed3b
  41ecf9:	nop
  41ecfa:	inc    ebx
  41ecfb:	clc    
  41ecfc:	ror    dh,0xb
  41ecff:	mov    DWORD PTR [eax],eax
	...
  41ed25:	add    BYTE PTR [eax],al
  41ed27:	add    BYTE PTR [ebx],al
  41ed29:	std    
  41ed2a:	mov    BYTE PTR [ebp+0x43],dl
  41ed2d:	nop
  41ed2e:	inc    ebx
  41ed2f:	adc    dl,dl
  41ed31:	(bad)  
  41ed32:	pop    ss
  41ed33:	mov    eax,0x94a
  41ed38:	and    BYTE PTR [ecx],al
  41ed3a:	mov    DWORD PTR [ebp+0x23],ecx
  41ed3d:	nop
  41ed3e:	jns    0x45cb4eba
  41ed44:	adc    esp,DWORD PTR [eax]
  41ed46:	inc    ebx
  41ed47:	cld    
  41ed48:	xchg   esi,eax
  41ed49:	add    eax,0x4f0c031
  41ed4e:	jmp    0x898b2606
  41ed53:	in     eax,0x96
  41ed55:	dec    eax
  41ed56:	int3   
  41ed57:	int3   
  41ed58:	dec    DWORD PTR [esp+ecx*8-0x34]
  41ed5c:	pop    ss
  41ed5d:	dec    ebp
  41ed5e:	int3   
  41ed5f:	int3   
  41ed60:	cmovge ecx,esp
  41ed63:	int3   
  41ed64:	jle    0x41ecf6
  41ed66:	in     al,dx
  41ed67:	sbb    edi,0x0
  41ed6a:	lds    eax,FWORD PTR [ebp-0x3d]
  41ed6d:	or     BYTE PTR [eax],dh
  41ed6f:	add    BYTE PTR [ebx-0xf],cl
  41ed72:	add    eax,DWORD PTR [ebx]
  41ed74:	or     ecx,DWORD PTR [ecx]
  41ed76:	lahf   
  41ed77:	cld    
  41ed78:	push   ss
  41ed79:	retf   0x4fff
  41ed7c:	mov    bl,0xb7
  41ed7e:	sti    
  41ed7f:	call   FWORD PTR [edi+eax*4-0x3a3df73c]
  41ed86:	repz push 0xb
  41ed89:	nop
  41ed8a:	dec    ebx
  41ed8b:	clc    
	...
  41edb4:	sbb    dl,BYTE PTR [eax-0x35e923ed]
  41edba:	dec    DWORD PTR [edx+0x6a4fb909]
  41edc0:	dec    ebx
  41edc1:	pop    esp
  41edc2:	push   ebx
  41edc3:	hlt    
  41edc4:	test   al,0x34
  41edc6:	push   ebx
  41edc7:	inc    ecx
  41edc8:	dec    ebx
  41edc9:	mov    BYTE PTR [ebx],bh
  41edcb:	aam    0xfe
  41edcd:	leave  
  41edce:	(bad)  
  41edcf:	call   esi
  41edd1:	add    edi,DWORD PTR [eax+0x94b02]
  41edd7:	jmp    0x41ed8a
  41edd9:	mov    cs,WORD PTR [ebx]
  41eddb:	add    BYTE PTR [ecx-0x37],cl
  41edde:	dec    DWORD PTR [eax+0x68597e]
  41ede4:	jle    0x41edee
  41ede6:	add    BYTE PTR [eax+0x4b],ch
  41ede9:	pop    es
  41edea:	inc    eax
  41edeb:	add    al,al
  41eded:	hlt    
  41edee:	rcl    DWORD PTR [ebp-0x76],cl
  41edf1:	or     DWORD PTR [edi-0x3e],edi
  41edf4:	dec    ebx
  41edf5:	pop    es
  41edf6:	add    BYTE PTR [eax],al
  41edf8:	cdq    
  41edf9:	jno    0x41ed99
  41edfb:	(bad)  
  41edfc:	hlt    
  41edfd:	pop    edx
  41edfe:	add    esp,0x200a13f
  41ee04:	mov    ecx,DWORD PTR [ecx]
  41ee06:	sub    eax,DWORD PTR [eax]
  41ee08:	dec    ecx
  41ee09:	or     DWORD PTR [eax],eax
  41ee0b:	mov    eax,DWORD PTR [esi+0x35]
  41ee0e:	push   ebx
  41ee0f:	inc    ecx
  41ee10:	dec    ebx
  41ee11:	cs enter 0x5689,0x5
  41ee16:	push   esi
  41ee17:	inc    ecx
	...
  41ee40:	dec    ebx
  41ee41:	mov    ss,WORD PTR [ebx]
  41ee43:	add    al,0x1d
  41ee45:	enter  0x51ff,0xea
  41ee49:	xor    eax,0xb94b4153
  41ee4e:	mov    BYTE PTR [ebp-0x65],cl
  41ee51:	mov    eax,0x5a979de7
  41ee56:	std    
  41ee57:	add    DWORD PTR [edi-0x60ea76f3],0xffffffb4
  41ee5e:	add    BYTE PTR ds:[eax-0x4c],cl
  41ee62:	pop    es
  41ee63:	mov    DWORD PTR [esi],ebx
  41ee65:	jno    0x41edf0
  41ee67:	push   ebp
  41ee68:	arpl   WORD PTR [edx-0x1e],bx
  41ee6b:	mov    ebp,DWORD PTR [esi-0x44]
  41ee6e:	ror    ah,0x8f
  41ee71:	dec    ebp
  41ee72:	int3   
  41ee73:	int3   
  41ee74:	dec    BYTE PTR [ebp+0x11068bec]
  41ee7a:	cmp    DWORD PTR [ebp+0x57],eax
  41ee7d:	(bad)  
  41ee7e:	add    al,0x8b
  41ee80:	xchg   BYTE PTR [ecx],dl
  41ee82:	jmp    0x89480e8c
  41ee87:	inc    ebp
  41ee88:	aas    
  41ee89:	mov    esp,0x4d17ccc0
  41ee8e:	int3   
  41ee8f:	int3   
  41ee90:	cmovge ecx,esp
  41ee93:	int3   
  41ee94:	jle    0x41ee24
  41ee96:	in     al,dx
  41ee97:	sbb    DWORD PTR [edi],0x2d
  41ee9a:	lds    eax,FWORD PTR [ebp+0x7]
  41ee9d:	or     DWORD PTR [eax+0x1],esi
  41eea0:	dec    ebx
  41eea1:	mov    es,WORD PTR [ebx+0x8]
	...
  41eecc:	ret    0xd7c3
  41eecf:	mov    edi,DWORD PTR [esi+0x41]
  41eed2:	mov    DWORD PTR [ebp+0x53],edx
  41eed5:	push   es
  41eed6:	dec    edi
  41eed7:	cmp    al,0xd2
  41eed9:	mov    bl,0xdf
  41eedb:	mov    ecx,DWORD PTR [esi-0x7c48f297]
  41eee1:	cmc    
  41eee2:	mov    BYTE PTR [ebp-0x55],dl
  41eee5:	mov    eax,DWORD PTR [edx+ecx*1+0x63]
  41eee9:	nop
  41eeea:	inc    ebx
  41eeeb:	call   0x4042e413
  41eef0:	dec    ebx
  41eef1:	mov    cs,WORD PTR [ebx]
  41eef3:	cld    
  41eef4:	inc    bh
  41eef6:	call   DWORD PTR [eax-0x4d]
  41eef9:	leave  
  41eefa:	clc    
  41eefb:	call   DWORD PTR [ebp+eax*4-0x3c3df73c]
  41ef02:	out    dx,eax
  41ef03:	push   0xb
  41ef05:	icebp  
  41ef06:	jmp    FWORD PTR [edi]
  41ef08:	dec    ebx
  41ef09:	or     DWORD PTR [eax+0x0],ebp
  41ef0c:	sti    
  41ef0d:	pop    es
  41ef0e:	add    BYTE PTR [edx+0x4b],ch
  41ef11:	pop    edx
  41ef12:	push   ebx
  41ef13:	lock rol bl,cl
  41ef16:	jecxz  0x41eea3
  41ef18:	imul   BYTE PTR [eax-0x77]
  41ef1b:	inc    edx
  41ef1c:	(bad)  
  41ef1d:	mov    eax,0xb8434d88
  41ef22:	mov    BYTE PTR [ebp+0x2f],dl
  41ef25:	mov    esp,0x593ec1e7
  41ef2a:	std    
  41ef2b:	or     DWORD PTR [edi],0x6
  41ef2e:	lds    eax,FWORD PTR [ebp+0x0]
	...
  41ef55:	add    BYTE PTR [eax],al
  41ef57:	add    BYTE PTR [edi],dh
  41ef59:	or     al,BYTE PTR [eax]
  41ef5b:	add    BYTE PTR [ebx+0x64],cl
  41ef5e:	pop    es
  41ef5f:	mov    eax,DWORD PTR [esi+0x4ac0815d]
  41ef65:	add    BYTE PTR [ebx-0xc],0xc0
  41ef69:	(bad)  
  41ef6a:	fisttp WORD PTR [edi]
  41ef6c:	mov    esp,0x963905ba
  41ef71:	pop    ebp
  41ef72:	jno    0x41efcd
  41ef74:	ror    dh,0xe7
  41ef77:	xor    DWORD PTR [ebx-0x3],0xffffffff
  41ef7b:	jae    0x41ef0b
  41ef7d:	test   BYTE PTR [ebx-0x18],cl
  41ef80:	enter  0xfd2,0x0
  41ef84:	pop    edi
  41ef85:	adc    eax,0x84e35589
  41ef8a:	inc    edx
  41ef8b:	adc    al,dl
  41ef8d:	(bad)  
  41ef8e:	fisttp WORD PTR [ebx+0x448b151a]
  41ef94:	pop    ebx
  41ef95:	pop    eax
  41ef96:	mov    DWORD PTR [ebp-0x55],ecx
  41ef99:	sbb    al,0xd2
  41ef9b:	neg    DWORD PTR [edx]
  41ef9d:	adc    eax,0x8ab5589
  41efa2:	lods   eax,DWORD PTR ds:[esi]
  41efa3:	inc    edx
  41efa4:	push   edi
  41efa5:	mov    ecx,0x84a34588
  41efaa:	dec    ebx
  41efab:	or     BYTE PTR [eax-0x3f],cl
  41efae:	adc    edx,DWORD PTR [ecx-0x30]
  41efb1:	mov    esi,0x6d0e8be7
  41efb6:	add    DWORD PTR [edx+0x3f],eax
  41efb9:	mov    ecx,0x55e7
	...
  41efe2:	add    BYTE PTR [eax],al
  41efe4:	pop    ax
  41efe6:	std    
  41efe7:	add    DWORD PTR [edi+0x634d8905],0xffffff8c
  41efee:	mov    edi,0xe7c6c228
  41eff3:	jmp    0x41efce
  41eff5:	adc    DWORD PTR [ebx-0x1c],0xffffff99
  41eff9:	popa   
  41effa:	push   cs
  41effb:	cld    
  41effc:	xor    al,0x58
  41effe:	add    esp,0x323e147
  41f004:	mov    ecx,DWORD PTR [ecx]
  41f006:	lahf   
  41f007:	cld    
  41f008:	jbe    0x41efd4
  41f00a:	dec    DWORD PTR [edi+0x23]
  41f00d:	test   dl,bh
  41f00f:	dec    DWORD PTR [esp+ecx*4]
  41f012:	les    ecx,FWORD PTR [eax]
  41f014:	ror    ch,cl
  41f016:	fild   DWORD PTR [ebx+0x4153513e]
  41f01c:	dec    ebx
  41f01d:	or     DWORD PTR [ebx+0xa],esi
  41f020:	rol    BYTE PTR ds:0x98a55f0,0x4f
  41f027:	push   DWORD PTR [esi+0x35]
  41f02a:	cmp    DWORD PTR ds:0x3ebdd3,0x6a1bde4b
  41f034:	or     esp,ecx
  41f036:	jmp    FWORD PTR [edi]
  41f038:	dec    ebx
  41f039:	or     DWORD PTR [ecx-0x774548ab],ecx
  41f03f:	inc    ebp
  41f040:	stos   DWORD PTR es:[edi],eax
  41f041:	or     DWORD PTR [eax+0x34],0xfffffffa
  41f045:	push   edi
  41f046:	push   ebx
  41f047:	lock add BYTE PTR [eax],al
	...
  41f06e:	add    BYTE PTR [eax],al
  41f070:	call   0x4b8343b1
  41f075:	adc    ebp,DWORD PTR fs:[edx+0xb]
  41f079:	loope  0x41f07a
  41f07b:	das    
  41f07c:	dec    ebx
  41f07d:	or     DWORD PTR [ecx+0x69ba7f55],ecx
  41f083:	add    BYTE PTR [ebp+edi*4-0x11],dh
  41f087:	mov    ds:0x3ebd97,eax
  41f08c:	enter  0xd415,0x55
  41f090:	or     cl,BYTE PTR [ecx]
  41f092:	add    BYTE PTR [ebp+0x3e],dh
  41f095:	jecxz  0x41f0d6
  41f097:	push   0x194b
  41f09c:	ror    ah,1
  41f09e:	sti    
  41f09f:	push   eax
  41f0a0:	mov    cl,0x9
  41f0a2:	std    
  41f0a3:	push   ebp
  41f0a4:	cmp    ebp,DWORD PTR [ebx+0x98a55d4]
  41f0aa:	mov    DWORD PTR [ebp+0x2f],ecx
  41f0ad:	or     DWORD PTR [ebx-0x28],0x8bd7bcd0
  41f0b4:	mov    ?,WORD PTR [ecx]
  41f0b6:	add    DWORD PTR [edx+0x4f],eax
  41f0b9:	add    BYTE PTR [ebx-0x20],0xd0
  41f0bd:	(bad)  
  41f0be:	sti    
  41f0bf:	push   ecx
  41f0c0:	sar    BYTE PTR [ebx+eiz*8+0x533daa52],1
  41f0c7:	inc    ecx
  41f0c8:	dec    ebx
  41f0c9:	mov    ecx,0x56e795e7
  41f0ce:	std    
  41f0cf:	add    DWORD PTR [edi],0x6
  41f0d2:	mov    DWORD PTR [ebp+0x0],ecx
	...
  41f0f9:	add    BYTE PTR [eax],al
  41f0fb:	add    bl,ch
  41f0fd:	mov    dh,BYTE PTR [edi+0x94ba4]
  41f103:	add    BYTE PTR [edi],bh
  41f105:	adc    ecx,DWORD PTR [ecx+0x4382ab55]
  41f10b:	fmul   DWORD PTR [eax-0x75]
  41f10e:	mov    al,ds:0x87094b00
  41f113:	inc    ebp
  41f114:	mov    bh,0x82
  41f116:	dec    ebx
  41f117:	loopne 0x41f0e9
  41f119:	cld    
  41f11a:	rcl    DWORD PTR [ebp+0xa],cl
  41f11d:	or     DWORD PTR [ecx],ebp
  41f11f:	push   ecx
  41f120:	push   edi
  41f121:	adc    BYTE PTR [ebx],0x4
  41f124:	sbb    eax,0x47a0ffc8
  41f129:	mov    edi,0x821b003e
  41f12e:	or     edx,esp
  41f130:	push   ss
  41f131:	enter  0x50ff,0xd0
  41f135:	mov    esp,0xd67352eb
  41f13a:	stc    
  41f13b:	call   DWORD PTR [edx+ecx*4-0x3c]
  41f13f:	or     al,0xc0
  41f141:	int3   
  41f142:	fisttp WORD PTR [ebx+0x41533d56]
  41f148:	dec    ebx
  41f149:	or     cl,BYTE PTR [eax+0x28]
  41f14c:	ret    0x1403
  41f14f:	push   esi
  41f150:	mov    cl,BYTE PTR [ecx]
  41f152:	cmp    DWORD PTR ds:0x3ebc23,0x8b2adc4b
  41f15c:	ds cmp eax,0x4153
	...
  41f186:	add    BYTE PTR [eax],al
  41f188:	dec    ebx
  41f189:	mov    ebx,0xc89d149e
  41f18e:	dec    DWORD PTR [edi-0x30]
  41f191:	add    esi,eax
  41f193:	push   ebp
  41f194:	mov    cl,BYTE PTR [ecx]
  41f196:	dec    edi
  41f197:	call   0x3f470f
  41f19c:	enter  0xc4c,0x8b
  41f1a0:	ss cmp eax,0xbb4b4153
  41f1a6:	out    0x49,eax
  41f1a8:	rcl    BYTE PTR [ebp-0x3],cl
  41f1ab:	or     DWORD PTR [edi+0x3361e90c],0x1d
  41f1b2:	add    DWORD PTR [eax+0x4b],eax
  41f1b5:	test   al,0xfc
  41f1b7:	push   ebp
  41f1b8:	or     cl,BYTE PTR [ecx]
  41f1ba:	push   eax
  41f1bb:	call   0x3f41bf
  41f1c0:	enter  0x84c,0x89
  41f1c4:	push   cs
  41f1c5:	cmp    eax,0xbb770d89
  41f1ca:	add    BYTE PTR ds:[edx],bl
  41f1cd:	adc    BYTE PTR [ebx-0x20],0xaa
  41f1d1:	cmp    al,0x53
  41f1d3:	inc    ecx
  41f1d4:	dec    ebx
  41f1d5:	or     al,BYTE PTR [edx+0x28]
  41f1d8:	sbb    eax,DWORD PTR [edx-0x38010ff5]
  41f1de:	call   DWORD PTR [eax+0x73]
  41f1e1:	and    eax,0x8954fffc
  41f1e6:	les    ecx,FWORD PTR [eax+eax*8]
  41f1e9:	sti    
  41f1ea:	out    dx,eax
  41f1eb:	push   ebp
	...
  41f214:	mov    cl,BYTE PTR [ecx]
  41f216:	jg     0x41f1da
  41f218:	fwait
  41f219:	mov    eax,0xfec2fffe
  41f21e:	sbb    edx,DWORD PTR [esi-0x76]
  41f221:	or     DWORD PTR [ebx+0x69ba2345],ecx
  41f227:	inc    eax
  41f228:	mov    cl,0xb
  41f22a:	mov    DWORD PTR ds:0x3ebb37,ecx
  41f230:	jp     0x41f286
  41f232:	push   ebx
  41f233:	aam    0xf3
  41f235:	push   0x91fcfff9
  41f23a:	(bad)  
  41f23b:	dec    DWORD PTR [ebx+0x9]
  41f23e:	mov    ebp,esp
  41f240:	mov    es,WORD PTR [edi+0x4]
  41f243:	add    BYTE PTR [edi],dl
  41f245:	inc    esi
  41f246:	int3   
  41f247:	int3   
  41f248:	cmovbe ecx,esp
  41f24b:	int3   
  41f24c:	jle    0x41f1ce
  41f24e:	in     al,dx
  41f24f:	mov    eax,DWORD PTR [esi-0x38bf76ff]
  41f255:	mov    dh,0xc0
  41f257:	int3   
  41f258:	pop    DWORD PTR [ebp-0x34]
  41f25b:	int3   
  41f25c:	push   ds
  41f25d:	sub    ah,0x53
  41f260:	adc    eax,0xab3d88bc
  41f265:	mov    esi,0xf6d0003e
  41f26a:	jmp    0x41f2c1
  41f26c:	or     cl,BYTE PTR [ecx]
  41f26e:	mov    DWORD PTR ds:0x3ebe73,esi
  41f274:	and    al,0xb3
  41f276:	pop    eax
  41f277:	pop    ebp
	...
  41f2a0:	mov    BYTE PTR [ebp-0x34],al
  41f2a3:	int3   
  41f2a4:	push   ds
  41f2a5:	sub    ah,0x51
  41f2a8:	jecxz  0x41f276
  41f2aa:	add    BYTE PTR [eax+0x4b],al
  41f2ad:	stos   BYTE PTR es:[edi],al
  41f2ae:	cld    
  41f2af:	push   ebp
  41f2b0:	or     cl,BYTE PTR [ecx]
  41f2b2:	push   eax
  41f2b3:	call   0x3f445f
  41f2b8:	enter  0x84d,0x89
  41f2bc:	mov    ss,WORD PTR [ebp-0x77]
  41f2bf:	dec    ebp
  41f2c0:	push   ebx
  41f2c1:	mov    edx,0xfdc00069
  41f2c6:	pop    ss
  41f2c7:	push   esi
  41f2c8:	mov    cl,BYTE PTR [ecx]
  41f2ca:	push   edx
  41f2cb:	(bad)  
  41f2cc:	jle    0x41f323
  41f2ce:	mov    ebp,esp
  41f2d0:	jle    0x41f31a
  41f2d2:	int3   
  41f2d3:	int3   
  41f2d4:	jle    0x41f256
  41f2d6:	in     al,dx
  41f2d7:	sbb    DWORD PTR [edi],0x2d
  41f2da:	lds    eax,FWORD PTR [ebp+0x3]
  41f2dd:	or     DWORD PTR [eax],eax
  41f2df:	add    BYTE PTR [ebx+0x4c],cl
  41f2e2:	inc    ebx
  41f2e3:	fdiv   QWORD PTR [ebx+0x9]
  41f2e6:	add    BYTE PTR [eax],al
  41f2e8:	add    al,0xce
  41f2ea:	repz add DWORD PTR [ebx+0x9],ecx
  41f2ee:	add    bh,al
  41f2f0:	xchg   BYTE PTR [ebp+0x0],dl
  41f2f3:	add    BYTE PTR [ebx+0x9],cl
  41f2f6:	lds    eax,FWORD PTR [ebp-0x19]
  41f2f9:	or     BYTE PTR [eax],al
  41f2fb:	add    BYTE PTR [ebx-0x80],cl
  41f2fe:	dec    ebx
  41f2ff:	or     dl,dl
  41f301:	add    eax,0x55f0
	...
  41f32a:	add    BYTE PTR [eax],al
  41f32c:	or     cl,BYTE PTR [ecx]
  41f32e:	call   0xfd95a7dc
  41f333:	mov    eax,ds:0x3ebd9b
  41f338:	push   sp
  41f33a:	std    
  41f33b:	add    BYTE PTR [ebx-0x23],cl
  41f33e:	or     eax,edi
  41f340:	inc    esi
  41f341:	push   ecx
  41f342:	push   ebx
  41f343:	inc    ecx
  41f344:	dec    ebx
  41f345:	or     DWORD PTR [eax],eax
  41f347:	add    BYTE PTR [ebx+0x60],cl
  41f34a:	or     al,bh
  41f34c:	dec    esi
  41f34d:	push   ecx
  41f34e:	push   ebx
  41f34f:	inc    ecx
  41f350:	dec    ebx
  41f351:	or     al,BYTE PTR [eax]
  41f353:	add    BYTE PTR [ebx-0x78],cl
  41f356:	cmp    esi,eax
  41f358:	test   cl,0xff
  41f35b:	(bad)  
  41f35c:	fdivp  st(6),st
  41f35e:	les    eax,FWORD PTR ds:0x3ebd53
  41f364:	dec    ebx
  41f365:	or     DWORD PTR [eax],eax
  41f367:	add    al,cl
  41f369:	adc    al,0xf8
  41f36b:	push   ebp
  41f36c:	mov    cl,BYTE PTR [ecx]
  41f36e:	add    BYTE PTR [ebp+0x3e],dh
  41f371:	(bad)  
  41f373:	(bad)  
  41f374:	ds dec ecx
  41f376:	push   ebx
  41f377:	inc    ecx
  41f378:	dec    ebx
  41f379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f37a:	lock push ebp
  41f37c:	mov    cl,BYTE PTR [ecx]
  41f37e:	mov    DWORD PTR ds:0x3ebd1b,ecx
  41f384:	rol    ah,cl
  41f386:	out    0x8b,eax
  41f388:	push   esi
  41f389:	pop    ecx
  41f38a:	push   ebx
  41f38b:	inc    ecx
  41f38c:	dec    ebx
  41f38d:	jle    0x41f3d2
  41f38f:	call   0x41f394
	...
  41f3b8:	dec    eax
  41f3b9:	(bad)  
  41f3ba:	cmp    ecx,DWORD PTR [ecx+0x4d89618e]
  41f3c0:	repz or BYTE PTR [ebx],0xdc
  41f3c4:	jle    0x41f38e
  41f3c6:	jmp    DWORD PTR [edi+0x7b]
  41f3c9:	push   es
  41f3ca:	inc    eax
  41f3cb:	add    ah,al
  41f3cd:	cld    
  41f3ce:	mov    edi,0xa1090a55
  41f3d3:	cld    
  41f3d4:	push   ds
  41f3d5:	enter  0xc6ff,0x46
  41f3d9:	add    eax,0xdc4b4156
  41f3de:	add    BYTE PTR [eax+0x4b],al
  41f3e1:	loope  0x41f442
  41f3e3:	add    ecx,DWORD PTR [ebx]
  41f3e5:	or     DWORD PTR [ecx+0x3ebc8f15],ecx
  41f3eb:	add    BYTE PTR [ecx],bl
  41f3ed:	popa   
  41f3ee:	ret    0x7cf7
  41f3f1:	push   edx
  41f3f2:	add    esp,0x5608a643
  41f3f8:	or     cl,BYTE PTR [ecx]
  41f3fa:	std    
  41f3fb:	adc    eax,0x3ebb53
  41f400:	test   al,0xf1
  41f402:	push   ebp
  41f403:	inc    ecx
  41f404:	dec    ebx
  41f405:	test   al,0xc
  41f407:	push   esi
  41f408:	or     cl,BYTE PTR [ecx]
  41f40a:	push   eax
  41f40b:	call   0x3f470f
  41f410:	enter  0x44c,0x89
  41f414:	mov    ds,WORD PTR [ecx-0x77]
  41f417:	dec    ebp
  41f418:	cmp    edi,DWORD PTR [eax+0xd5e7]
	...
  41f442:	add    BYTE PTR [eax],al
  41f444:	and    eax,0x783fd52
  41f449:	or     eax,0xc87ef4a1
  41f44e:	dec    DWORD PTR [edx+0x6a525976]
  41f454:	dec    ebx
  41f455:	test   al,0xf4
  41f457:	push   ebp
  41f458:	mov    cl,BYTE PTR [ecx]
  41f45a:	push   eax
  41f45b:	call   0x3f4e37
  41f460:	enter  0xc4c,0x8b
  41f464:	xchg   esi,eax
  41f465:	pop    ecx
  41f466:	xchg   DWORD PTR [ebp-0x15],ecx
  41f469:	jge    0x41f4be
  41f46b:	cld    
  41f46c:	adc    BYTE PTR [edi+ebp*8+0x437e7173],bh
  41f473:	loopne 0x41f490
  41f475:	jle    0x41f4c2
  41f477:	fcomp  QWORD PTR [edx]
  41f479:	popa   
  41f47a:	scas   al,BYTE PTR es:[edi]
  41f47b:	sti    
  41f47c:	mov    ah,0x51
  41f47e:	add    esp,0x5600a643
  41f484:	or     cl,BYTE PTR [ecx]
  41f486:	mov    DWORD PTR ds:0x3ebb4b,edx
  41f48c:	stc    
  41f48d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f48e:	or     al,0x56
  41f490:	or     cl,BYTE PTR [ecx]
  41f492:	add    DWORD PTR [ebp+0x6f],eax
  41f495:	mov    eax,0xbb770d88
  41f49a:	add    BYTE PTR ds:[eax-0x3c],cl
  41f49e:	sti    
  41f49f:	push   ecx
  41f4a0:	arpl   WORD PTR [ecx],di
  41f4a2:	idiv   edi
  41f4a4:	fs test esp,eax
  41f4a7:	or     al,0x0
	...
  41f4cd:	add    BYTE PTR [eax],al
  41f4cf:	add    al,dl
  41f4d1:	mov    ebx,0x34fe03f3
  41f4d6:	add    DWORD PTR [ebp+0x67],edx
  41f4d9:	jg     0x41f52e
  41f4db:	in     al,0xd0
  41f4dd:	(bad)  
  41f4de:	sti    
  41f4df:	add    eax,DWORD PTR [esi+0x3745872d]
  41f4e5:	test   DWORD PTR [ebx-0x20],ecx
  41f4e8:	pusha  
  41f4e9:	(bad)  
  41f4ea:	call   DWORD PTR [ebp-0x76]
  41f4ed:	or     DWORD PTR [edi-0x619ad4b3],eax
  41f4f3:	(bad)  
  41f4f4:	mov    ss,WORD PTR [ecx+0x0]
  41f4f7:	add    BYTE PTR [ebx+0x9],cl
  41f4fa:	jmp    0xf7f8c508
  41f4ff:	or     DWORD PTR [ecx],0x6
  41f502:	xchg   DWORD PTR [ebp-0xd],edx
  41f505:	test   BYTE PTR [ebx-0x8],al
  41f508:	xor    dh,al
  41f50a:	out    dx,eax
  41f50b:	jae    0x41f530
  41f50d:	test   BYTE PTR [ebx],cl
  41f50f:	hlt    
  41f510:	jbe    0x41f4dc
  41f512:	inc    DWORD PTR [edx]
  41f514:	xchg   BYTE PTR [ecx-0x77],dl
  41f517:	adc    DWORD PTR [eax-0x4a],ecx
  41f51a:	mul    DWORD PTR [ecx+0x3eb6bf]
  41f520:	dec    eax
  41f521:	(bad)  
  41f522:	test   DWORD PTR [ecx-0x7b47ba5],0x3e74aca
  41f52c:	dec    ebx
  41f52d:	or     DWORD PTR [ecx+0x3eb69715],ecx
	...
  41f55b:	add    BYTE PTR [eax-0x4a],cl
  41f55e:	div    DWORD PTR [ebx]
  41f560:	inc    ecx
  41f561:	stos   BYTE PTR es:[edi],al
  41f562:	hlt    
  41f563:	push   ebp
  41f564:	or     cl,BYTE PTR [ecx]
  41f566:	add    DWORD PTR [ebp-0x7d],eax
  41f569:	or     BYTE PTR [eax],0xeb
  41f56c:	mov    esp,0x16e42b82
  41f571:	retf   0x88ff
  41f574:	imul   edx,DWORD PTR es:[ebx+0x41],0x89c71c4b
  41f57c:	push   ds
  41f57d:	xor    DWORD PTR [ebx+0x41],edx
  41f580:	dec    ebx
  41f581:	sbb    al,0xc7
  41f583:	mov    DWORD PTR [esi+0x5d],esp
  41f586:	push   ebx
  41f587:	inc    ecx
  41f588:	dec    ebx
  41f589:	popa   
  41f58a:	dec    esi
  41f58b:	div    DWORD PTR [eax+edx*2]
  41f58e:	mov    ecx,DWORD PTR ds:0x3eb69c
  41f594:	sar    BYTE PTR [ebp+0xb4bb9f7],cl
  41f59a:	inc    eax
  41f59b:	add    dl,cl
  41f59d:	popa   
  41f59e:	add    BYTE PTR [edx],al
  41f5a0:	dec    ebx
  41f5a1:	or     DWORD PTR [ecx-0x30dbfcab],ecx
  41f5a7:	mov    DWORD PTR [esi+0x61],edx
  41f5aa:	push   ebx
  41f5ab:	inc    ecx
  41f5ac:	dec    ebx
  41f5ad:	stos   BYTE PTR es:[edi],al
  41f5ae:	call   0x504b8008
  41f5b3:	call   0x3f4907
  41f5b8:	enter  0x444,0x8b
  41f5bc:	inc    esi
  41f5bd:	push   ebp
  41f5be:	push   ebx
  41f5bf:	inc    ecx
	...
  41f5e8:	dec    ebx
  41f5e9:	mov    edx,0x4fc1d5e7
  41f5ee:	std    
  41f5ef:	test   DWORD PTR [ebx-0x74ccfc2b],ecx
  41f5f5:	arpl   WORD PTR [edx],bp
  41f5f7:	mov    esp,DWORD PTR [esi+0x65]
  41f5fa:	push   ebx
  41f5fb:	inc    ecx
  41f5fc:	dec    ebx
  41f5fd:	mov    esp,es
  41f5ff:	add    al,0xc8
  41f601:	or     eax,0x90a55f8
  41f606:	add    BYTE PTR [edx+eax*2-0x56],dh
  41f60a:	aam    0x55
  41f60c:	or     cl,BYTE PTR [ecx]
  41f60e:	xchg   DWORD PTR [edi+eiz*1+0x5],eax
  41f612:	call   0xfd916c74
  41f617:	mov    edx,DWORD PTR [esi-0xb]
  41f61a:	push   ebp
  41f61b:	inc    ecx
  41f61c:	dec    ebx
  41f61d:	mov    ebx,0x838b33c0
  41f622:	jecxz  0x41f681
  41f624:	mov    BYTE PTR [esp+ecx*8],bh
  41f627:	int3   
  41f628:	dec    ebx
  41f629:	or     DWORD PTR [eax],eax
  41f62b:	add    BYTE PTR [ebx+0x9],cl
  41f62e:	add    BYTE PTR [eax],al
  41f630:	dec    ebx
  41f631:	or     DWORD PTR [eax],eax
  41f633:	add    BYTE PTR [ebx+0x9],cl
  41f636:	add    BYTE PTR [eax],al
  41f638:	dec    ebx
  41f639:	or     DWORD PTR [eax],eax
  41f63b:	add    BYTE PTR [ebx+0x9],cl
  41f63e:	add    BYTE PTR [eax],al
  41f640:	dec    ebx
  41f641:	or     DWORD PTR [eax],eax
  41f643:	add    BYTE PTR [ebx+0x9],cl
  41f646:	add    BYTE PTR [eax],al
  41f648:	dec    ebx
  41f649:	or     DWORD PTR [eax],eax
	...
  41f673:	add    BYTE PTR [ebx+0x9],cl
  41f676:	add    BYTE PTR [eax],al
  41f678:	dec    ebx
  41f679:	or     DWORD PTR [eax],eax
  41f67b:	add    BYTE PTR [ebx+0x9],cl
  41f67e:	add    BYTE PTR [eax],al
  41f680:	dec    ebx
  41f681:	or     DWORD PTR [eax],eax
  41f683:	add    BYTE PTR [ebx+0x9],cl
  41f686:	add    BYTE PTR [eax],al
  41f688:	dec    ebx
  41f689:	or     DWORD PTR [eax],eax
  41f68b:	add    BYTE PTR [ebx+0x9],cl
  41f68e:	add    BYTE PTR [eax],al
  41f690:	dec    ebx
  41f691:	or     DWORD PTR [eax],eax
  41f693:	add    BYTE PTR [ebx+0x9],cl
  41f696:	add    BYTE PTR [eax],al
  41f698:	dec    ebx
  41f699:	or     DWORD PTR [eax],eax
  41f69b:	add    BYTE PTR [ebx+0x9],cl
  41f69e:	add    BYTE PTR [eax],al
  41f6a0:	dec    ebx
  41f6a1:	or     DWORD PTR [eax],eax
  41f6a3:	add    BYTE PTR [ebx+0x9],cl
  41f6a6:	add    BYTE PTR [eax],al
  41f6a8:	dec    ebx
  41f6a9:	or     DWORD PTR [eax],eax
  41f6ab:	add    BYTE PTR [ebx+0x9],cl
  41f6ae:	add    BYTE PTR [eax],al
  41f6b0:	dec    ebx
  41f6b1:	or     DWORD PTR [eax],eax
  41f6b3:	add    BYTE PTR [ebx+0x9],cl
  41f6b6:	add    BYTE PTR [eax],al
  41f6b8:	dec    ebx
  41f6b9:	or     DWORD PTR [eax],eax
  41f6bb:	add    BYTE PTR [ebx+0x9],cl
  41f6be:	add    BYTE PTR [eax],al
  41f6c0:	dec    ebx
  41f6c1:	or     DWORD PTR [eax],eax
  41f6c3:	add    BYTE PTR [ebx+0x9],cl
  41f6c6:	add    BYTE PTR [eax],al
  41f6c8:	dec    ebx
  41f6c9:	or     DWORD PTR [eax],eax
  41f6cb:	add    BYTE PTR [ebx+0x9],cl
  41f6ce:	add    BYTE PTR [eax],al
  41f6d0:	dec    ebx
  41f6d1:	or     DWORD PTR [eax],eax
  41f6d3:	add    BYTE PTR [ebx+0x9],cl
	...
  41f6fe:	add    BYTE PTR [eax],al
  41f700:	dec    ebx
  41f701:	or     DWORD PTR [eax],eax
  41f703:	add    BYTE PTR [ebx+0x9],cl
  41f706:	add    BYTE PTR [eax],al
  41f708:	dec    ebx
  41f709:	or     DWORD PTR [eax],eax
  41f70b:	add    BYTE PTR [ebx+0x9],cl
  41f70e:	add    BYTE PTR [eax],al
  41f710:	dec    ebx
  41f711:	or     DWORD PTR [eax],eax
  41f713:	add    BYTE PTR [ebx+0x9],cl
  41f716:	add    BYTE PTR [eax],al
  41f718:	dec    ebx
  41f719:	or     DWORD PTR [eax],eax
  41f71b:	add    BYTE PTR [ebx+0x9],cl
  41f71e:	add    BYTE PTR [eax],al
  41f720:	dec    ebx
  41f721:	or     DWORD PTR [eax],eax
  41f723:	add    BYTE PTR [ebx+0x9],cl
  41f726:	add    BYTE PTR [eax],al
  41f728:	dec    ebx
  41f729:	or     DWORD PTR [eax],eax
  41f72b:	add    BYTE PTR [ebx+0x9],cl
  41f72e:	add    BYTE PTR [eax],al
  41f730:	dec    ebx
  41f731:	or     DWORD PTR [eax],eax
  41f733:	add    BYTE PTR [ebx+0x9],cl
  41f736:	add    BYTE PTR [eax],al
  41f738:	dec    ebx
  41f739:	or     DWORD PTR [eax],eax
  41f73b:	add    BYTE PTR [ebx+0x9],cl
  41f73e:	add    BYTE PTR [eax],al
  41f740:	dec    ebx
  41f741:	or     DWORD PTR [eax],eax
  41f743:	add    BYTE PTR [ebx+0x9],cl
  41f746:	add    BYTE PTR [eax],al
  41f748:	dec    ebx
  41f749:	or     DWORD PTR [eax],eax
  41f74b:	add    BYTE PTR [ebx+0x9],cl
  41f74e:	add    BYTE PTR [eax],al
  41f750:	dec    ebx
  41f751:	or     DWORD PTR [eax],eax
  41f753:	add    BYTE PTR [ebx+0x9],cl
  41f756:	add    BYTE PTR [eax],al
  41f758:	dec    ebx
  41f759:	or     DWORD PTR [eax],eax
  41f75b:	add    BYTE PTR [ebx+0x9],cl
  41f75e:	add    BYTE PTR [eax],al
  41f760:	dec    ebx
  41f761:	or     DWORD PTR [eax],eax
	...
  41f78b:	add    BYTE PTR [ebx+0x9],cl
  41f78e:	add    BYTE PTR [eax],al
  41f790:	dec    ebx
  41f791:	or     DWORD PTR [eax],eax
  41f793:	add    BYTE PTR [ebx+0x9],cl
  41f796:	add    BYTE PTR [eax],al
  41f798:	dec    ebx
  41f799:	or     DWORD PTR [eax],eax
  41f79b:	add    BYTE PTR [ebx+0x9],cl
  41f79e:	add    BYTE PTR [eax],al
  41f7a0:	dec    ebx
  41f7a1:	or     DWORD PTR [eax],eax
  41f7a3:	add    BYTE PTR [ebx+0x9],cl
  41f7a6:	add    BYTE PTR [eax],al
  41f7a8:	dec    ebx
  41f7a9:	or     DWORD PTR [eax],eax
  41f7ab:	add    BYTE PTR [ebx+0x9],cl
  41f7ae:	add    BYTE PTR [eax],al
  41f7b0:	dec    ebx
  41f7b1:	or     DWORD PTR [eax],eax
  41f7b3:	add    BYTE PTR [ebx+0x9],cl
  41f7b6:	add    BYTE PTR [eax],al
  41f7b8:	dec    ebx
  41f7b9:	or     DWORD PTR [eax],eax
  41f7bb:	add    BYTE PTR [ebx+0x9],cl
  41f7be:	add    BYTE PTR [eax],al
  41f7c0:	dec    ebx
  41f7c1:	or     DWORD PTR [eax],eax
  41f7c3:	add    BYTE PTR [ebx+0x9],cl
  41f7c6:	add    BYTE PTR [eax],al
  41f7c8:	dec    ebx
  41f7c9:	or     DWORD PTR [eax],eax
  41f7cb:	add    BYTE PTR [ebx+0x9],cl
  41f7ce:	add    BYTE PTR [eax],al
  41f7d0:	dec    ebx
  41f7d1:	or     DWORD PTR [eax],eax
  41f7d3:	add    BYTE PTR [ebx+0x9],cl
  41f7d6:	add    BYTE PTR [eax],al
  41f7d8:	dec    ebx
  41f7d9:	or     DWORD PTR [eax],eax
  41f7db:	add    BYTE PTR [ebx+0x9],cl
  41f7de:	add    BYTE PTR [eax],al
  41f7e0:	dec    ebx
  41f7e1:	or     DWORD PTR [eax],eax
  41f7e3:	add    BYTE PTR [ebx+0x9],cl
  41f7e6:	add    BYTE PTR [eax],al
  41f7e8:	dec    ebx
  41f7e9:	or     DWORD PTR [eax],eax
  41f7eb:	add    BYTE PTR [eax],al
  41f7ed:	add    al,BYTE PTR [eax]
  41f7ef:	add    BYTE PTR [ebx+0x9],cl
  41f7f2:	add    BYTE PTR [eax],al
  41f7f4:	push   ebx
  41f7f5:	or     DWORD PTR [eax],eax
  41f7f7:	add    bh,dl
  41f7f9:	cmp    edx,DWORD PTR [eax-0x67c448ce]
  41f7ff:	xor    dh,BYTE PTR [edi-0x18cd5fc5]
  41f805:	cmp    ebp,DWORD PTR [eax+0x1494b32]
  41f80b:	add    BYTE PTR [ebx],bl
  41f80d:	or     DWORD PTR [eax],eax
  41f80f:	add    BYTE PTR [eax+0x33],ch
  41f812:	dec    ebx
  41f813:	cmp    ebx,DWORD PTR [ebx]
  41f815:	xor    bl,BYTE PTR [edx+0x3b]
  41f818:	add    al,0x32
  41f81a:	push   0x9331ed3b
  41f81f:	cmp    esi,DWORD PTR [ebp-0x78c457ce]
  41f825:	xor    ch,ch
  41f827:	cmp    edx,DWORD PTR [eax+0x35]
  41f82a:	adc    DWORD PTR [edx+eiz*2],edi
  41f82d:	xor    eax,0x33ef3c9d
  41f832:	xchg   DWORD PTR [esi],edi
  41f834:	mov    esi,0xf3e9536
  41f839:	aaa    
  41f83a:	int    0x3e
  41f83c:	and    al,0x37
  41f83e:	jle    0x41f87f
  41f840:	enter  0x9b35,0x3f
  41f844:	loop   0x41f87b
  41f846:	scas   eax,DWORD PTR es:[edi]
  41f847:	aas    
  41f848:	les    esi,FWORD PTR ds:0x36193fcc
  41f84e:	out    0x3f,al
  41f850:	cli    
  41f851:	xor    eax,0x3ff9
	...
  41f87a:	add    BYTE PTR [eax],al
  41f87c:	in     al,dx
  41f87d:	xor    eax,0x594b0000
  41f882:	add    DWORD PTR [eax],eax
  41f884:	xchg   edi,eax
  41f885:	or     BYTE PTR [eax],al
  41f887:	add    BYTE PTR [esi+0x39],cl
  41f88a:	sbb    BYTE PTR [eax],dh
  41f88c:	retf   0x8738
  41f88f:	xor    BYTE PTR ds:0x1e314b38,cl
  41f895:	cmp    BYTE PTR [esi+0x31],ah
  41f898:	cmp    edi,DWORD PTR [eax]
  41f89a:	lea    esi,[ecx]
  41f89c:	out    0x37,eax
  41f89e:	stos   BYTE PTR es:[edi],al
  41f89f:	xor    DWORD PTR [ecx+0x4d31e137],ecx
  41f8a5:	cmp    edx,DWORD PTR [edi]
  41f8a7:	xor    dh,BYTE PTR [edi]
  41f8a9:	cmp    esp,DWORD PTR [ebx]
  41f8ab:	xor    dl,BYTE PTR [edx+0x3b]
  41f8ae:	inc    edx
  41f8af:	xor    dl,BYTE PTR [ebx]
  41f8b1:	cmp    edx,DWORD PTR [ecx+0x32]
  41f8b4:	adc    al,0x3b
  41f8b6:	pop    esi
  41f8b7:	xor    ah,dh
  41f8b9:	cmp    bh,BYTE PTR [ebp+0x32]
  41f8bc:	leave  
  41f8bd:	cmp    dl,BYTE PTR [edx+esi*1+0x32a73ac6]
  41f8c4:	xchg   ebp,eax
  41f8c5:	cmp    al,dl
  41f8c7:	xor    bh,BYTE PTR [ebx+0x3a]
  41f8ca:	or     BYTE PTR [ebx],dh
  41f8cc:	cmp    eax,0x6e33143a
  41f8d1:	cmp    BYTE PTR [edx],ch
  41f8d3:	xor    ecx,DWORD PTR [ecx-0x3ccc81c8]
  41f8d9:	cmp    BYTE PTR [ebp-0x54c715cd],dl
  41f8df:	xor    eax,DWORD PTR [eax]
	...
  41f905:	add    BYTE PTR [eax],al
  41f907:	add    bh,bl
  41f909:	cmp    BYTE PTR [esi-0x31c6edcd],bh
  41f90f:	xor    edi,edi
  41f911:	cmp    ch,bl
  41f913:	xor    ebx,DWORD PTR [ecx+edi*1]
  41f916:	hlt    
  41f917:	xor    eax,DWORD PTR [ecx]
  41f919:	cmp    edi,edi
  41f91b:	xor    eax,DWORD PTR [esi+0x3d]
  41f91e:	or     DWORD PTR [eax*2+0x2934143d],esi
  41f925:	cmp    eax,0x3d363428
  41f92a:	xor    dh,BYTE PTR [esp+ecx*4]
  41f92d:	cmp    eax,0x3dcd345a
  41f932:	mov    WORD PTR [ecx+edi*4],?
  41f935:	cmp    eax,0x3d8d349c
  41f93a:	jmp    0x41f970
  41f93c:	ret    
  41f93d:	cmp    eax,0x3e5d350c
  41f942:	and    esi,DWORD PTR ds:0x35313e62
  41f948:	bound  edi,QWORD PTR [esi]
  41f94a:	inc    esp
  41f94b:	xor    eax,0x355d3e0f
  41f950:	sub    DWORD PTR [esi],edi
  41f952:	jno    0x41f989
  41f954:	(bad)  
  41f955:	mov    ?,WORD PTR ds:0x35a53edd
  41f95c:	dec    ebx
  41f95d:	or     DWORD PTR [eax],eax
  41f95f:	add    BYTE PTR [ebx+0x9],cl
  41f962:	add    BYTE PTR [eax],al
  41f964:	dec    ebx
  41f965:	or     DWORD PTR [eax],eax
  41f967:	add    BYTE PTR [ebx+0x9],cl
	...
  41f992:	add    BYTE PTR [eax],al
  41f994:	dec    ebx
  41f995:	or     DWORD PTR [eax],eax
  41f997:	add    BYTE PTR [ebx+0x9],cl
  41f99a:	add    BYTE PTR [eax],al
  41f99c:	dec    ebx
  41f99d:	or     DWORD PTR [eax],eax
  41f99f:	add    BYTE PTR [ebx+0x9],cl
  41f9a2:	add    BYTE PTR [eax],al
  41f9a4:	dec    ebx
  41f9a5:	or     DWORD PTR [eax],eax
  41f9a7:	add    BYTE PTR [ebx+0x9],cl
  41f9aa:	add    BYTE PTR [eax],al
  41f9ac:	dec    ebx
  41f9ad:	or     DWORD PTR [eax],eax
  41f9af:	add    BYTE PTR [ebx+0x9],cl
  41f9b2:	add    BYTE PTR [eax],al
  41f9b4:	dec    ebx
  41f9b5:	or     DWORD PTR [eax],eax
  41f9b7:	add    BYTE PTR [ebx+0x9],cl
  41f9ba:	add    BYTE PTR [eax],al
  41f9bc:	dec    ebx
  41f9bd:	or     DWORD PTR [eax],eax
  41f9bf:	add    BYTE PTR [ebx+0x9],cl
  41f9c2:	add    BYTE PTR [eax],al
  41f9c4:	dec    ebx
  41f9c5:	or     DWORD PTR [eax],eax
  41f9c7:	add    BYTE PTR [ebx+0x9],cl
  41f9ca:	add    BYTE PTR [eax],al
  41f9cc:	dec    ebx
  41f9cd:	or     DWORD PTR [eax],eax
  41f9cf:	add    BYTE PTR [ebx+0x9],cl
  41f9d2:	add    BYTE PTR [eax],al
  41f9d4:	dec    ebx
  41f9d5:	or     DWORD PTR [eax],eax
  41f9d7:	add    BYTE PTR [ebx+0x9],cl
  41f9da:	add    BYTE PTR [eax],al
  41f9dc:	dec    ebx
  41f9dd:	or     DWORD PTR [eax],eax
  41f9df:	add    BYTE PTR [ebx+0x9],cl
  41f9e2:	add    BYTE PTR [eax],al
  41f9e4:	dec    ebx
  41f9e5:	or     DWORD PTR [eax],eax
  41f9e7:	add    BYTE PTR [ebx+0x9],cl
  41f9ea:	add    BYTE PTR [eax],al
  41f9ec:	dec    ebx
  41f9ed:	or     DWORD PTR [eax],eax
  41f9ef:	add    BYTE PTR [ebx+0x9],cl
  41f9f2:	add    BYTE PTR [eax],al
  41f9f4:	dec    ebx
  41f9f5:	or     DWORD PTR [eax],eax
	...
  41fa1f:	add    BYTE PTR [ebx+0x9],cl
  41fa22:	add    BYTE PTR [eax],al
  41fa24:	dec    ebx
  41fa25:	or     DWORD PTR [eax],eax
  41fa27:	add    BYTE PTR [ebx+0x9],cl
  41fa2a:	add    BYTE PTR [eax],al
  41fa2c:	dec    ebx
  41fa2d:	or     DWORD PTR [eax],eax
  41fa2f:	add    BYTE PTR [ebx+0x9],cl
  41fa32:	add    BYTE PTR [eax],al
  41fa34:	dec    ebx
  41fa35:	or     DWORD PTR [eax],eax
  41fa37:	add    BYTE PTR [ebx+0x9],cl
  41fa3a:	add    BYTE PTR [eax],al
  41fa3c:	dec    ebx
  41fa3d:	or     DWORD PTR [eax],eax
  41fa3f:	add    BYTE PTR [ebx+0x9],cl
  41fa42:	add    BYTE PTR [eax],al
  41fa44:	dec    ebx
  41fa45:	or     DWORD PTR [eax],eax
  41fa47:	add    BYTE PTR [ebx+0x9],cl
  41fa4a:	add    BYTE PTR [eax],al
  41fa4c:	dec    ebx
  41fa4d:	or     DWORD PTR [eax],eax
  41fa4f:	add    BYTE PTR [ebx+0x9],cl
  41fa52:	add    BYTE PTR [eax],al
  41fa54:	dec    ebx
  41fa55:	or     DWORD PTR [eax],eax
  41fa57:	add    BYTE PTR [ebx+0x9],cl
  41fa5a:	add    BYTE PTR [eax],al
  41fa5c:	dec    ebx
  41fa5d:	or     DWORD PTR [eax],eax
  41fa5f:	add    BYTE PTR [ebx+0x9],cl
  41fa62:	add    BYTE PTR [eax],al
  41fa64:	dec    ebx
  41fa65:	or     DWORD PTR [eax],eax
  41fa67:	add    BYTE PTR [ebx+0x9],cl
  41fa6a:	add    BYTE PTR [eax],al
  41fa6c:	dec    ebx
  41fa6d:	or     DWORD PTR [eax],eax
  41fa6f:	add    BYTE PTR [ebx+0x9],cl
  41fa72:	add    BYTE PTR [eax],al
  41fa74:	dec    ebx
  41fa75:	or     DWORD PTR [eax],eax
  41fa77:	add    BYTE PTR [ebx+0x9],cl
  41fa7a:	add    BYTE PTR [eax],al
  41fa7c:	dec    ebx
  41fa7d:	or     DWORD PTR [eax],eax
  41fa7f:	add    BYTE PTR [ebx+0x9],cl
	...
  41faaa:	add    BYTE PTR [eax],al
  41faac:	dec    ebx
  41faad:	or     DWORD PTR [eax],eax
  41faaf:	add    BYTE PTR [ebx+0x9],cl
  41fab2:	add    BYTE PTR [eax],al
  41fab4:	dec    ebx
  41fab5:	or     DWORD PTR [eax],eax
  41fab7:	add    bh,bh
  41fab9:	and    eax,0x4202e8
  41fabe:	jmp    DWORD PTR ds:0x4202ec
  41fac4:	jmp    DWORD PTR ds:0x4202f0
  41faca:	jmp    DWORD PTR ds:0x4202f4
  41fad0:	jmp    DWORD PTR ds:0x4202f8
  41fad6:	jmp    DWORD PTR ds:0x4202fc
  41fadc:	jmp    DWORD PTR ds:0x420300
  41fae2:	jmp    DWORD PTR ds:0x420304
  41fae8:	jmp    DWORD PTR ds:0x420308
  41faee:	jmp    DWORD PTR ds:0x42030c
  41faf4:	jmp    DWORD PTR ds:0x420310
  41fafa:	jmp    DWORD PTR ds:0x420314
  41fb00:	jmp    DWORD PTR ds:0x420318
  41fb06:	jmp    DWORD PTR ds:0x42031c
  41fb0c:	jmp    DWORD PTR ds:0x420320
  41fb12:	jmp    DWORD PTR ds:0x420324
  41fb18:	jmp    DWORD PTR ds:0x42032c
  41fb1e:	jmp    DWORD PTR ds:0x420330
  41fb24:	jmp    DWORD PTR ds:0x420334
  41fb2a:	jmp    DWORD PTR ds:0x420338
  41fb30:	jmp    DWORD PTR ds:0x42033c
  41fb36:	jmp    DWORD PTR ds:0x420340
  41fb3c:	jmp    DWORD PTR ds:0x420344
  41fb42:	jmp    DWORD PTR ds:0x420348
  41fb48:	jmp    DWORD PTR ds:0x42034c
  41fb4e:	jmp    DWORD PTR ds:0x420350
  41fb54:	jmp    DWORD PTR ds:0x420354
  41fb5a:	jmp    DWORD PTR ds:0x420358
  41fb60:	jmp    DWORD PTR ds:0x42035c
  41fb66:	jmp    DWORD PTR ds:0x420360
  41fb6c:	jmp    DWORD PTR ds:0x420364
  41fb72:	jmp    DWORD PTR ds:0x420368
  41fb78:	jmp    DWORD PTR ds:0x42036c
  41fb7e:	jmp    DWORD PTR ds:0x420370
  41fb84:	jmp    DWORD PTR ds:0x420374
  41fb8a:	jmp    DWORD PTR ds:0x420378
  41fb90:	jmp    DWORD PTR ds:0x42037c
  41fb96:	jmp    DWORD PTR ds:0x420380
  41fb9c:	jmp    DWORD PTR ds:0x420384
  41fba2:	jmp    DWORD PTR ds:0x420388
  41fba8:	jmp    DWORD PTR ds:0x42038c
  41fbae:	jmp    DWORD PTR ds:0x420390
  41fbb4:	jmp    DWORD PTR ds:0x420394
  41fbba:	jmp    DWORD PTR ds:0x420398
  41fbc0:	jmp    DWORD PTR ds:0x42039c
  41fbc6:	jmp    DWORD PTR ds:0x4203a0
  41fbcc:	jmp    DWORD PTR ds:0x4203a4
  41fbd2:	jmp    DWORD PTR ds:0x4203a8
  41fbd8:	jmp    DWORD PTR ds:0x4203ac
  41fbde:	jmp    DWORD PTR ds:0x4203b0
  41fbe4:	jmp    DWORD PTR ds:0x4203b4
  41fbea:	jmp    DWORD PTR ds:0x4203b8
  41fbf0:	jmp    DWORD PTR ds:0x4203bc
  41fbf6:	jmp    DWORD PTR ds:0x4203c0
  41fbfc:	jmp    DWORD PTR ds:0x4203c4
  41fc02:	jmp    DWORD PTR ds:0x4203c8
  41fc08:	jmp    DWORD PTR ds:0x4203cc
  41fc0e:	jmp    DWORD PTR ds:0x4203d0
  41fc14:	jmp    DWORD PTR ds:0x4203d4
  41fc1a:	jmp    DWORD PTR ds:0x4203d8
  41fc20:	jmp    DWORD PTR ds:0x4203dc
  41fc26:	jmp    DWORD PTR ds:0x4203e0
  41fc2c:	jmp    DWORD PTR ds:0x4203e4
  41fc32:	jmp    DWORD PTR ds:0x4203e8
  41fc38:	jmp    DWORD PTR ds:0x4203ec
  41fc3e:	jmp    DWORD PTR ds:0x4203f0
  41fc44:	jmp    DWORD PTR ds:0x4203f4
  41fc4a:	jmp    DWORD PTR ds:0x4203f8
  41fc50:	jmp    DWORD PTR ds:0x4203fc
  41fc56:	jmp    DWORD PTR ds:0x420400
  41fc5c:	jmp    DWORD PTR ds:0x420404
  41fc62:	jmp    DWORD PTR ds:0x420408
  41fc68:	jmp    DWORD PTR ds:0x42040c
  41fc6e:	jmp    DWORD PTR ds:0x420410
  41fc74:	jmp    DWORD PTR ds:0x420414
  41fc7a:	jmp    DWORD PTR ds:0x420418
  41fc80:	jmp    DWORD PTR ds:0x420420
  41fc86:	jmp    DWORD PTR ds:0x420424
  41fc8c:	jmp    DWORD PTR ds:0x420428
  41fc92:	jmp    DWORD PTR ds:0x42042c
  41fc98:	jmp    DWORD PTR ds:0x420430
  41fc9e:	jmp    DWORD PTR ds:0x420434
  41fca4:	jmp    DWORD PTR ds:0x420438
  41fcaa:	jmp    DWORD PTR ds:0x42043c
  41fcb0:	jmp    DWORD PTR ds:0x420440
  41fcb6:	jmp    DWORD PTR ds:0x420444
  41fcbc:	jmp    DWORD PTR ds:0x420448
  41fcc2:	jmp    DWORD PTR ds:0x42044c
  41fcc8:	jmp    DWORD PTR ds:0x420450
  41fcce:	jmp    DWORD PTR ds:0x420454
  41fcd4:	jmp    DWORD PTR ds:0x420458
  41fcda:	jmp    DWORD PTR ds:0x42045c
  41fce0:	jmp    DWORD PTR ds:0x420460
  41fce6:	jmp    DWORD PTR ds:0x420464
  41fcec:	jmp    DWORD PTR ds:0x420468
  41fcf2:	jmp    DWORD PTR ds:0x42046c
  41fcf8:	jmp    DWORD PTR ds:0x420470
  41fcfe:	jmp    DWORD PTR ds:0x420478
  41fd04:	jmp    DWORD PTR ds:0x42047c
  41fd0a:	jmp    DWORD PTR ds:0x420484
  41fd10:	jmp    DWORD PTR ds:0x420488
  41fd16:	jmp    DWORD PTR ds:0x42048c
  41fd1c:	jmp    DWORD PTR ds:0x420490
  41fd22:	jmp    DWORD PTR ds:0x420498

Disassembly of section .d:

00421000 <.d>:
	...

Disassembly of section .d2:

00422000 <.d2>:
	...
