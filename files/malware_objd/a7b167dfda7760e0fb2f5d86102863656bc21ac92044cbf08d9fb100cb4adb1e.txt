
a7b167dfda7760e0fb2f5d86102863656bc21ac92044cbf08d9fb100cb4adb1e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,ds:0x42920b
  40100e:	mov    eax,DWORD PTR [eax]
  401010:	and    DWORD PTR ds:0x429157,eax
  401016:	mov    eax,DWORD PTR [ebp+0x8]
  401019:	and    DWORD PTR ds:0x4291e7,0x0
  401023:	mov    ecx,DWORD PTR ds:0x4291e7
  401029:	inc    ecx
  40102a:	mov    DWORD PTR ds:0x4291e7,ecx
  401030:	cmp    DWORD PTR ds:0x4291e7,0xe
  401037:	jle    0x401072
  40103d:	jmp    0x40104b
  401042:	push   DWORD PTR [ebp-0x20]
  401045:	call   DWORD PTR ds:0x42a853
  40104b:	cmp    DWORD PTR ds:0x4291e7,0xd
  401052:	jne    0x401065
  401058:	mov    ecx,DWORD PTR ds:0x4291e7
  40105e:	inc    ecx
  40105f:	mov    DWORD PTR ds:0x4291e7,ecx
  401065:	cmp    DWORD PTR ds:0x4291e7,0x1c
  40106c:	jb     0x401023
  401072:	push   ebx
  401073:	sub    DWORD PTR ds:0x429157,0x3bd6
  40107d:	push   esi
  40107e:	mov    esi,DWORD PTR ds:0x429907
  401084:	mov    ecx,DWORD PTR ds:0x42a0b3
  40108a:	sub    ecx,esi
  40108c:	add    esi,DWORD PTR [esi+ecx*1]
  40108f:	push   edi
  401090:	mov    esi,0x75108ac
  401095:	xor    DWORD PTR ds:0x4291af,ebx
  40109b:	xor    eax,esi
  40109d:	mov    edi,0x3272f3
  4010a2:	sbb    DWORD PTR ds:0x4291f3,0x4c4b
  4010ac:	add    eax,edi
  4010ae:	and    DWORD PTR ds:0x429163,0x59cd
  4010b8:	mov    DWORD PTR [ebp-0x40],eax
  4010bb:	mov    eax,ds:0x42915f
  4010c0:	sbb    eax,DWORD PTR ds:0x42919f
  4010c6:	mov    ds:0x42915f,eax
  4010cb:	mov    eax,ds:0x42818b
  4010d0:	and    DWORD PTR ds:0x42918b,0x0
  4010da:	jmp    0x4010ee
  4010df:	xor    ecx,ecx
  4010e1:	xor    ecx,DWORD PTR ds:0x42918b
  4010e7:	inc    ecx
  4010e8:	mov    DWORD PTR ds:0x42918b,ecx
  4010ee:	cmp    DWORD PTR ds:0x42918b,0x1e
  4010f5:	jae    0x401144
  4010fb:	cmp    DWORD PTR ds:0x42918b,0xe
  401102:	ja     0x401144
  401108:	jmp    0x401123
  40110d:	push   DWORD PTR [ebp-0x24]
  401110:	push   0x428152
  401115:	push   0x4280c4
  40111a:	push   DWORD PTR [ebp-0x20]
  40111d:	call   DWORD PTR ds:0x42a85b
  401123:	cmp    DWORD PTR ds:0x42918b,0xd
  40112a:	jne    0x40113f
  401130:	xor    ecx,ecx
  401132:	or     ecx,DWORD PTR ds:0x42918b
  401138:	inc    ecx
  401139:	mov    DWORD PTR ds:0x42918b,ecx
  40113f:	jmp    0x4010df
  401144:	mov    eax,DWORD PTR [eax]
  401146:	mov    ecx,DWORD PTR ds:0x4291bf
  40114c:	sbb    DWORD PTR ds:0x42914f,ecx
  401152:	mov    DWORD PTR [ebp-0x3c],eax
  401155:	mov    eax,ds:0x429223
  40115a:	mov    ecx,DWORD PTR ds:0x42a0c3
  401160:	sub    eax,ecx
  401162:	add    eax,DWORD PTR [eax+ecx*1]
  401165:	mov    eax,ds:0x42839b
  40116a:	mov    DWORD PTR ds:0x429167,0x18
  401174:	cmp    DWORD PTR ds:0x429167,0x0
  40117b:	je     0x4011cb
  401181:	cmp    DWORD PTR ds:0x429167,0x3
  401188:	jle    0x4011cb
  40118e:	jmp    0x40119f
  401193:	push   DWORD PTR [ebp-0x24]
  401196:	push   DWORD PTR [ebp-0x14]
  401199:	call   DWORD PTR ds:0x42a85f
  40119f:	cmp    DWORD PTR ds:0x429167,0x4
  4011a6:	jne    0x4011b9
  4011ac:	mov    ecx,DWORD PTR ds:0x429167
  4011b2:	dec    ecx
  4011b3:	mov    DWORD PTR ds:0x429167,ecx
  4011b9:	mov    ecx,DWORD PTR ds:0x429167
  4011bf:	dec    ecx
  4011c0:	mov    DWORD PTR ds:0x429167,ecx
  4011c6:	jmp    0x401174
  4011cb:	mov    eax,DWORD PTR [eax]
  4011cd:	or     DWORD PTR ds:0x4291b7,0x5973
  4011d7:	mov    DWORD PTR [ebp-0x1c],eax
  4011da:	mov    DWORD PTR [ebp-0x34],0xf89c87a1
  4011e1:	sbb    ecx,ecx
  4011e3:	mov    eax,DWORD PTR [ebp-0x34]
  4011e6:	and    DWORD PTR ds:0x4291bf,ecx
  4011ec:	xor    eax,esi
  4011ee:	add    eax,edi
  4011f0:	adc    DWORD PTR ds:0x42919f,0x1e2a
  4011fa:	mov    DWORD PTR [ebp-0x40],eax
  4011fd:	mov    eax,ds:0x42830b
  401202:	mov    DWORD PTR [ebp-0x40],eax
  401205:	mov    eax,ds:0x42a0bf
  40120a:	mov    eax,DWORD PTR [eax]
  40120c:	and    DWORD PTR ds:0x4291f7,eax
  401212:	mov    eax,DWORD PTR [ebp-0x3c]
  401215:	adc    DWORD PTR ds:0x42914b,0x2509
  40121f:	mov    DWORD PTR [ebp-0x14],eax
  401222:	and    ecx,ecx
  401224:	mov    eax,DWORD PTR [ebp-0x14]
  401227:	xor    DWORD PTR ds:0x42918f,ecx
  40122d:	push   0x4
  40122f:	neg    ecx
  401231:	pop    ecx
  401232:	sub    ecx,eax
  401234:	and    DWORD PTR ds:0x42916b,0x0
  40123e:	jmp    0x40124e
  401243:	mov    eax,ds:0x42916b
  401248:	inc    eax
  401249:	mov    ds:0x42916b,eax
  40124e:	cmp    DWORD PTR ds:0x42916b,0x1e
  401255:	jae    0x40127d
  40125b:	cmp    DWORD PTR ds:0x42916b,0x27
  401262:	ja     0x40127d
  401268:	jmp    0x401278
  40126d:	push   0x4291bb
  401272:	call   DWORD PTR ds:0x42a863
  401278:	jmp    0x401243
  40127d:	add    ecx,DWORD PTR [ebp-0x1c]
  401280:	and    DWORD PTR ds:0x42915b,0x0
  40128a:	jmp    0x40129d
  40128f:	xor    eax,eax
  401291:	xor    eax,DWORD PTR ds:0x42915b
  401297:	inc    eax
  401298:	mov    ds:0x42915b,eax
  40129d:	cmp    DWORD PTR ds:0x42915b,0x1a
  4012a4:	jae    0x4012ec
  4012aa:	cmp    DWORD PTR ds:0x42915b,0xe
  4012b1:	jle    0x4012ec
  4012b7:	jmp    0x4012cc
  4012bc:	push   0x1df3
  4012c1:	push   0x428062
  4012c6:	call   DWORD PTR ds:0x42a867
  4012cc:	cmp    DWORD PTR ds:0x42915b,0xd
  4012d3:	jne    0x4012e7
  4012d9:	xor    eax,eax
  4012db:	xor    eax,DWORD PTR ds:0x42915b
  4012e1:	inc    eax
  4012e2:	mov    ds:0x42915b,eax
  4012e7:	jmp    0x40128f
  4012ec:	mov    DWORD PTR [ebp-0x2c],0xf89c85e1
  4012f3:	mov    DWORD PTR ds:0x4291d7,0x3a8d
  4012fd:	mov    DWORD PTR [ebp-0x18],ecx
  401300:	and    DWORD PTR ds:0x42916f,ecx
  401306:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  401310:	mov    eax,DWORD PTR [ebp-0x14]
  401313:	xor    DWORD PTR ds:0x4291e7,0x69e7
  40131d:	mov    DWORD PTR [ebp-0x9c],eax
  401323:	mov    eax,DWORD PTR [ebp-0x18]
  401326:	or     DWORD PTR ds:0x42916f,0x429173
  401330:	mov    DWORD PTR [ebp-0x98],eax
  401336:	and    DWORD PTR ds:0x429187,ecx
  40133c:	mov    eax,DWORD PTR [ebp-0x2c]
  40133f:	xor    eax,esi
  401341:	mov    DWORD PTR ds:0x4291ab,0x4dc6
  40134b:	add    eax,edi
  40134d:	mov    DWORD PTR [ebp-0x94],eax
  401353:	adc    DWORD PTR ds:0x429193,0x429197
  40135d:	lea    eax,[ebp-0x48]
  401360:	sbb    DWORD PTR ds:0x42914f,0x4291c3
  40136a:	mov    DWORD PTR [ebp-0x90],eax
  401370:	mov    eax,ds:0x42917f
  401375:	or     DWORD PTR ds:0x4291bf,eax
  40137b:	mov    eax,DWORD PTR [ebp-0xa0]
  401381:	adc    DWORD PTR ds:0x429187,0x4291df
  40138b:	xor    eax,esi
  40138d:	add    eax,edi
  40138f:	mov    DWORD PTR [ebp-0xa0],eax
  401395:	lea    eax,[ebp-0xa0]
  40139b:	and    DWORD PTR ds:0x42919f,0x4291a7
  4013a5:	push   eax
  4013a6:	mov    eax,DWORD PTR [ebp+0xc]
  4013a9:	mov    DWORD PTR ds:0x42917b,0x524d
  4013b3:	xor    eax,esi
  4013b5:	add    eax,edi
  4013b7:	and    DWORD PTR ds:0x429183,0x429193
  4013c1:	push   eax
  4013c2:	sub    DWORD PTR ds:0x429173,0x45d8
  4013cc:	mov    eax,ds:0x42832b
  4013d1:	xor    DWORD PTR ds:0x42917b,0x37ec
  4013db:	push   0x428281
  4013e0:	sub    DWORD PTR ds:0x4291e3,0x5ee0
  4013ea:	push   DWORD PTR [eax]
  4013ec:	xor    DWORD PTR ds:0x42916b,0x429197
  4013f6:	call   0x4085e5
  4013fb:	and    DWORD PTR ds:0x429153,0x0
  401405:	mov    edx,DWORD PTR ds:0x429153
  40140b:	inc    edx
  40140c:	mov    DWORD PTR ds:0x429153,edx
  401412:	cmp    DWORD PTR ds:0x429153,0x24
  401419:	jb     0x401442
  40141f:	jmp    0x401435
  401424:	push   0x4280d6
  401429:	push   DWORD PTR [ebp-0x18]
  40142c:	push   DWORD PTR [ebp-0x14]
  40142f:	call   DWORD PTR ds:0x42a86f
  401435:	cmp    DWORD PTR ds:0x429153,0x15
  40143c:	jb     0x401405
  401442:	mov    ebx,DWORD PTR [ebp-0x14]
  401445:	add    DWORD PTR ds:0x42914f,edx
  40144b:	mov    eax,DWORD PTR [ebp-0x18]
  40144e:	and    DWORD PTR ds:0x42916b,0x0
  401458:	jmp    0x40146a
  40145d:	mov    edx,DWORD PTR ds:0x42916b
  401463:	inc    edx
  401464:	mov    DWORD PTR ds:0x42916b,edx
  40146a:	cmp    DWORD PTR ds:0x42916b,0x17
  401471:	jae    0x4014b1
  401477:	cmp    DWORD PTR ds:0x42916b,0xc
  40147e:	ja     0x4014b1
  401484:	jmp    0x401492
  401489:	push   DWORD PTR [ebp-0x24]
  40148c:	call   DWORD PTR ds:0x42a873
  401492:	cmp    DWORD PTR ds:0x42916b,0xb
  401499:	jne    0x4014ac
  40149f:	mov    edx,DWORD PTR ds:0x42916b
  4014a5:	inc    edx
  4014a6:	mov    DWORD PTR ds:0x42916b,edx
  4014ac:	jmp    0x40145d
  4014b1:	mov    DWORD PTR [ebp-0x58],eax
  4014b4:	add    DWORD PTR ds:0x4291c7,edi
  4014ba:	mov    DWORD PTR [ebp-0x34],0xf89c8538
  4014c1:	mov    eax,0xf89c85a3
  4014c6:	inc    DWORD PTR ds:0x42916f
  4014cc:	mov    DWORD PTR [ebp-0x1c],eax
  4014cf:	lea    ecx,[eax-0x2]
  4014d2:	inc    DWORD PTR ds:0x42919b
  4014d8:	mov    DWORD PTR [ebp-0x28],ecx
  4014db:	movzx  edx,BYTE PTR ds:0x429163
  4014e2:	or     DWORD PTR ds:0x4291e7,edx
  4014e8:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  4014ef:	mov    DWORD PTR [ebp-0x8],eax
  4014f2:	and    DWORD PTR ds:0x4291e7,0x0
  4014fc:	jmp    0x40150c
  401501:	mov    eax,ds:0x4291e7
  401506:	inc    eax
  401507:	mov    ds:0x4291e7,eax
  40150c:	cmp    DWORD PTR ds:0x4291e7,0x11
  401513:	jae    0x401543
  401519:	cmp    DWORD PTR ds:0x4291e7,0x13
  401520:	jge    0x401543
  401526:	jmp    0x40153e
  40152b:	push   0x4280b5
  401530:	push   DWORD PTR [ebp-0x28]
  401533:	push   0x738c
  401538:	call   DWORD PTR ds:0x42a877
  40153e:	jmp    0x401501
  401543:	mov    eax,DWORD PTR [ebp-0x10]
  401546:	sbb    DWORD PTR ds:0x429193,edi
  40154c:	xor    eax,esi
  40154e:	sub    edx,DWORD PTR ds:0x429193
  401554:	mov    edx,0xffcd8d8d
  401559:	sub    edx,eax
  40155b:	mov    DWORD PTR ds:0x42915b,edx
  401561:	mov    DWORD PTR [ebp-0xc],edx
  401564:	movzx  eax,WORD PTR ds:0x4291f7
  40156b:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  401572:	mov    eax,DWORD PTR [ebp-0x8]
  401575:	mov    DWORD PTR [ebp-0x3c],ebx
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x4291d3,0x104a
  401584:	je     0x403bad
  40158a:	add    ecx,0x327f
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	mov    ecx,DWORD PTR [ebp-0x10]
  401596:	sbb    DWORD PTR ds:0x4291b3,0x52cd
  4015a0:	xor    eax,esi
  4015a2:	xor    ecx,esi
  4015a4:	lea    ecx,[eax+ecx*1+0x64e5e6]
  4015ab:	mov    eax,DWORD PTR [ebp-0xc]
  4015ae:	or     DWORD PTR ds:0x429153,0x67db
  4015b8:	xor    edx,edx
  4015ba:	div    ecx
  4015bc:	mov    eax,DWORD PTR [ebp-0x8]
  4015bf:	xor    ecx,0x4574
  4015c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4015c8:	xor    eax,esi
  4015ca:	or     DWORD PTR ds:0x4291df,0xa4f
  4015d4:	xor    ecx,esi
  4015d6:	or     DWORD PTR ds:0x42915f,0x4291eb
  4015e0:	sub    eax,ecx
  4015e2:	cmp    edx,eax
  4015e4:	jne    0x401764
  4015ea:	mov    eax,DWORD PTR [ebp-0xc]
  4015ed:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4015f4:	add    ecx,DWORD PTR ds:0x4291d7
  4015fa:	mov    eax,DWORD PTR [ebp-0x28]
  4015fd:	mov    ecx,DWORD PTR [ebp-0x18]
  401600:	sub    DWORD PTR ds:0x42916f,0x2374
  40160a:	xor    eax,esi
  40160c:	add    DWORD PTR ds:0x429197,0x6412
  401616:	xor    ecx,esi
  401618:	add    eax,edi
  40161a:	add    ecx,edi
  40161c:	mov    DWORD PTR ds:0x42914f,0x798e
  401626:	mov    BYTE PTR [ebp-0x21],dl
  401629:	mov    DWORD PTR ds:0x42916f,0x52dc
  401633:	cmp    eax,ecx
  401635:	mov    DWORD PTR ds:0x42918f,0x1786
  40163f:	jae    0x401707
  401645:	and    DWORD PTR ds:0x42915b,ecx
  40164b:	lea    ecx,[eax-0x3272f3]
  401651:	not    edx
  401653:	mov    DWORD PTR [ebp-0x14],ecx
  401656:	mov    edx,DWORD PTR [ebp-0x14]
  401659:	xor    edx,esi
  40165b:	xor    DWORD PTR ds:0x4291a7,0x52cf
  401665:	add    edx,0x7f55d8e3
  40166b:	lea    ecx,[ebp+eax*4-0xb4]
  401672:	mov    DWORD PTR [ecx],edx
  401674:	mov    edx,DWORD PTR ds:0x429193
  40167a:	mov    edx,DWORD PTR [ecx]
  40167c:	cmp    edx,0x244ecb9c
  401682:	jbe    0x4016a7
  401688:	add    DWORD PTR ds:0x42916b,0x3ac8
  401692:	add    DWORD PTR [ecx],0x405fcdd
  401698:	mov    DWORD PTR ds:0x42919f,0x6763
  4016a2:	jmp    0x4016b7
  4016a7:	add    DWORD PTR ds:0x42914f,0x4291af
  4016b1:	add    DWORD PTR [ecx],0xfdaf4323
  4016b7:	sub    ecx,0x38f7
  4016bd:	mov    ecx,DWORD PTR [ebp-0x18]
  4016c0:	xor    DWORD PTR ds:0x4291c7,0x8c7
  4016ca:	xor    ecx,esi
  4016cc:	dec    DWORD PTR ds:0x42915b
  4016d2:	inc    eax
  4016d3:	sbb    DWORD PTR ds:0x4291cf,0x4291df
  4016dd:	inc    DWORD PTR [ebp-0x14]
  4016e0:	add    DWORD PTR ds:0x4291f3,0x429193
  4016ea:	add    ecx,edi
  4016ec:	cmp    eax,ecx
  4016ee:	mov    DWORD PTR ds:0x4291d3,0x74e1
  4016f8:	jb     0x401656
  4016fe:	not    DWORD PTR ds:0x4291af
  401704:	mov    dl,BYTE PTR [ebp-0x21]
  401707:	xor    DWORD PTR ds:0x429153,edi
  40170d:	mov    eax,DWORD PTR [ebp-0x34]
  401710:	mov    DWORD PTR ds:0x429173,0x31f7
  40171a:	xor    al,0xac
  40171c:	xor    DWORD PTR ds:0x429157,0x429193
  401726:	mov    cl,0xd
  401728:	sub    cl,al
  40172a:	add    dl,cl
  40172c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40172f:	adc    DWORD PTR ds:0x4291c3,0x11c9
  401739:	xor    cl,0xac
  40173c:	sub    cl,0xd
  40173f:	and    DWORD PTR ds:0x4291ef,0x4291b7
  401749:	ror    dl,cl
  40174b:	movzx  ecx,WORD PTR ds:0x4291e3
  401752:	sbb    DWORD PTR ds:0x4291ef,ecx
  401758:	xor    eax,eax
  40175a:	mov    eax,DWORD PTR [ebp-0xc]
  40175d:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  401764:	mov    eax,DWORD PTR [ebp-0xc]
  401767:	adc    ecx,0x7a4f
  40176d:	mov    ecx,DWORD PTR [ebp-0x28]
  401770:	or     DWORD PTR ds:0x42918f,0x42919b
  40177a:	jmp    0x403b2b
  40177f:	pop    ss
  401780:	mov    eax,0x80c4d8c4
  401785:	pop    es
  401786:	mov    al,0x4
  401788:	add    eax,0x570e92fe
  40178d:	repz add WORD PTR [ebx+0x5cef8383],0xff83
  401796:	sub    DWORD PTR [edx],0x2d
  401799:	and    al,0x3e
  40179b:	cmp    ah,BYTE PTR es:[eax]
  40179e:	sub    al,0x7a
  4017a0:	cmp    eax,0x76897776
  4017a5:	jae    0x40181a
  4017a7:	jb     0x4017f4
  4017a9:	fcmovu st,st(5)
  4017ab:	(bad)  
  4017ac:	imul   edx,DWORD PTR [ecx+0x70],0x79a9607e
  4017b3:	jb     0x40181b
  4017b5:	int3   
  4017b6:	bound  edx,QWORD PTR [ebx+0x39]
  4017b9:	lea    eax,[ebx]
  4017bb:	xchg   esp,eax
  4017bc:	xchg   DWORD PTR [edx+edx*2+0x7c],esp
  4017c0:	inc    esp
  4017c1:	mov    DWORD PTR [edi+0x40bbb97c],esi
  4017c7:	sub    eax,0x3dd77fc
  4017cc:	push   0x46f21f7c
  4017d1:	rol    bl,cl
  4017d3:	repnz xchg esp,eax
  4017d5:	sub    bh,bl
  4017d7:	nop
  4017d8:	ss or  al,0x66
  4017db:	mov    al,0x93
  4017dd:	aad    0x4
  4017df:	jb     0x4017c3
  4017e1:	adc    eax,0x37030fe5
  4017e6:	and    DWORD PTR [ecx+0xd],edx
  4017e9:	aaa    
  4017ea:	jo     0x40185d
  4017ec:	(bad)  
  4017ed:	lods   al,BYTE PTR ds:[esi]
  4017ee:	sub    BYTE PTR [esi+0x1a],bl
  4017f1:	mov    bh,0xfc
  4017f3:	not    BYTE PTR [esi+0x30]
  4017f6:	test   DWORD PTR [ebx-0x2f],ecx
  4017f9:	pusha  
  4017fa:	push   es
  4017fb:	and    eax,DWORD PTR [ebx]
  4017fd:	cmp    DWORD PTR [esi+0x5ca1e278],0x2514be90
  401807:	fwait
  401808:	dec    esi
  401809:	or     BYTE PTR [edi+0x10888b3d],bl
  40180f:	jecxz  0x401843
  401811:	imul   edx,DWORD PTR [edx-0x79ab7bb],0xffffffcc
  401818:	xchg   ebx,eax
  401819:	ss xchg esi,eax
  40181b:	leave  
  40181c:	(bad)  
  40181d:	int    0x91
  40181f:	outs   dx,BYTE PTR ds:[esi]
  401820:	cmc    
  401821:	pop    edx
  401822:	imul   ecx,DWORD PTR [ebp+0xd],0x3f
  401826:	or     BYTE PTR [edi+0x18],al
  401829:	mov    dl,0x50
  40182b:	shl    DWORD PTR [ecx+ecx*2+0x26715d9],cl
  401832:	imul   esp,DWORD PTR [edi-0x46],0x6
  401836:	jno    0x4017f4
  401838:	add    DWORD PTR [ebx+0x1e],ebx
  40183b:	xlat   BYTE PTR ds:[ebx]
  40183c:	call   0x21423076
  401841:	pop    eax
  401842:	lods   eax,DWORD PTR ds:[esi]
  401843:	ins    BYTE PTR es:[edi],dx
  401844:	inc    esi
  401845:	inc    edx
  401846:	sub    eax,0xd2e647a4
  40184b:	aaa    
  40184c:	(bad)  
  40184d:	sub    bl,al
  40184f:	retf   0xd51a
  401852:	cmp    BYTE PTR [ebx+0x1d],cl
  401855:	mov    ebx,0x4a425924
  40185a:	xchg   edi,eax
  40185c:	pop    edi
  40185d:	push   ds
  40185e:	sub    edi,DWORD PTR [ebp+0x2b]
  401861:	lods   al,BYTE PTR ds:[esi]
  401862:	out    dx,al
  401863:	add    DWORD PTR [ecx-0x43],esi
  401866:	add    al,0xef
  401868:	loope  0x401886
  40186a:	cmp    DWORD PTR [esi],eax
  40186c:	sub    ebx,edi
  40186e:	jbe    0x40188e
  401870:	adc    cl,dl
  401872:	scas   eax,DWORD PTR es:[edi]
  401873:	in     al,0xdd
  401875:	xor    DWORD PTR [edi-0x73],edi
  401878:	retf   
  401879:	xor    DWORD PTR [esi+0x4aebc6bb],eax
  40187f:	sbb    BYTE PTR ds:0x3bc21aa,bl
  401885:	add    BYTE PTR ds:0x81e093db,dh
  40188b:	ficomp WORD PTR [ebx-0x37111f2e]
  401891:	test   al,0x30
  401893:	mov    ebp,0xdecea7a1
  401898:	xor    eax,0xdac92e51
  40189d:	sub    edi,DWORD PTR [ebp-0x680cda3c]
  4018a3:	scas   eax,DWORD PTR es:[edi]
  4018a4:	aas    
  4018a5:	sbb    al,0x85
  4018a7:	fsubr  QWORD PTR [edx-0x1]
  4018aa:	sysenter 
  4018ac:	lea    ecx,[esi-0x8]
  4018af:	mov    bh,0xaa
  4018b1:	mov    bl,0x50
  4018b3:	loope  0x40192a
  4018b5:	jecxz  0x4018a8
  4018b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018b8:	cmc    
  4018b9:	or     BYTE PTR [ebx-0x6631e024],bh
  4018bf:	out    dx,eax
  4018c0:	dec    ecx
  4018c1:	pop    eax
  4018c2:	(bad)  
  4018c3:	aam    0xa7
  4018c5:	pop    esp
  4018c6:	adc    al,0xa9
  4018c8:	(bad)  
  4018c9:	out    dx,al
  4018ca:	pop    eax
  4018cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018cc:	jecxz  0x40192e
  4018ce:	in     al,0x27
  4018d0:	faddp  st(5),st
  4018d2:	jo     0x4018fb
  4018d4:	or     BYTE PTR [ecx+0x54],al
  4018d7:	cmp    esi,DWORD PTR [esi+0x14]
  4018da:	push   ecx
  4018db:	ds jg  0x4018cd
  4018de:	jl     0x40188d
  4018e0:	stos   BYTE PTR es:[edi],al
  4018e1:	sbb    ch,BYTE PTR [esi-0x7f]
  4018e4:	test   BYTE PTR ds:0x8be9bea7,0xc9
  4018eb:	cmp    bh,BYTE PTR [eax]
  4018ed:	sub    BYTE PTR ds:0x95781aa5,dl
  4018f3:	add    eax,0xc628a0dd
  4018f8:	adc    bh,al
  4018fa:	call   0x12d9:0x98db5280
  401901:	int3   
  401902:	leave  
  401903:	add    BYTE PTR [ebx],ah
  401905:	retf   0x58b0
  401908:	fs pop esp
  40190a:	sub    DWORD PTR [esp+ecx*1+0x4d],0xffffff83
  40190f:	push   ebp
  401910:	dec    edi
  401911:	xor    eax,0xb5626d37
  401916:	fdivr  st(6),st
  401918:	jmp    0x401912
  40191a:	or     eax,0x7163a4c2
  40191f:	ret    0x603d
  401922:	jmp    0x9cdd7328
  401927:	mov    ds:0xa563a90c,al
  40192c:	je     0x401971
  40192e:	xor    DWORD PTR [ebx-0x4369a339],esp
  401934:	lds    ecx,FWORD PTR [ecx]
  401936:	out    0xd7,eax
  401938:	bound  edi,QWORD PTR [ebp-0x4e]
  40193b:	mov    WORD PTR [ebx+0x292f7e7],?
  401941:	sahf   
  401942:	inc    esp
  401943:	or     al,0x97
  401945:	add    eax,0x49afb1c8
  40194a:	adc    BYTE PTR [edi+0x0],ch
  40194d:	in     eax,dx
  40194e:	test   cl,ch
  401950:	xchg   ebx,eax
  401951:	ins    BYTE PTR es:[edi],dx
  401952:	lock or BYTE PTR [eax+0x68],bh
  401956:	pop    esi
  401957:	adc    BYTE PTR [edi-0x34f8bb14],ah
  40195d:	cwde   
  40195e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40195f:	ret    
  401960:	or     DWORD PTR [ecx+0x1f],edi
  401963:	and    al,0x1a
  401965:	je     0x4019d2
  401967:	pop    es
  401968:	lods   eax,DWORD PTR ds:[esi]
  401969:	xchg   DWORD PTR [ebx],ebp
  40196b:	rol    BYTE PTR [edx],1
  40196d:	and    eax,0xae12df85
  401972:	cmp    esp,0xffffffff
  401975:	cli    
  401976:	push   ebx
  401977:	jnp    0x4018fb
  401979:	je     0x40199a
  40197b:	lock int 0xb
  40197e:	cdq    
  40197f:	out    dx,al
  401980:	ins    BYTE PTR es:[edi],dx
  401981:	div    BYTE PTR [edi-0x6cd69b6b]
  401987:	mov    ecx,0xbf5ebbc7
  40198c:	test   al,0x65
  40198e:	mov    WORD PTR [edx+0x3f22aed8],ss
  401994:	ja     0x40191f
  401996:	ja     0x4019a0
  401998:	xor    DWORD PTR [ebp-0x5aeb4922],esi
  40199e:	lods   eax,DWORD PTR ds:[esi]
  4019a0:	adc    BYTE PTR [ebx+0x40],dl
  4019a3:	jmp    0x401978
  4019a5:	push   ebp
  4019a6:	fs adc al,0xa7
  4019a9:	ss scas al,BYTE PTR es:[edi]
  4019ab:	or     eax,ebx
  4019ad:	mov    dl,0x94
  4019af:	mov    bl,0x56
  4019b1:	(bad)
  4019b4:	js     0x401971
  4019b6:	cmc    
  4019b7:	inc    eax
  4019b8:	mov    cl,0x64
  4019ba:	sar    DWORD PTR [esi],cl
  4019bc:	scas   eax,DWORD PTR es:[edi]
  4019bd:	ret    0x9f5f
  4019c0:	pop    es
  4019c1:	pop    ds
  4019c2:	mov    bh,ah
  4019c4:	aam    0x34
  4019c6:	ss push ecx
  4019c8:	pushf  
  4019c9:	adc    dh,bh
  4019cb:	jmp    0x6824:0x65d61bad
  4019d2:	inc    edi
  4019d3:	push   ss
  4019d4:	cli    
  4019d5:	stos   DWORD PTR es:[edi],eax
  4019d6:	fwait
  4019d7:	dec    ebx
  4019d8:	xor    BYTE PTR [ebp+0x531ec4a6],ah
  4019de:	mov    dh,0x4f
  4019e0:	in     al,0x76
  4019e2:	jae    0x40196e
  4019e4:	push   ecx
  4019e5:	and    ebx,esp
  4019e7:	inc    edi
  4019e8:	sub    eax,0x89e0cc73
  4019ed:	jecxz  0x4019ad
  4019ef:	push   eax
  4019f0:	and    al,0xf
  4019f2:	or     eax,0x857420cf
  4019f7:	jg     0x401a35
  4019f9:	adc    eax,0xc9bdfa53
  4019fe:	xor    DWORD PTR [esi-0x4cedb6a5],0x2c25dd71
  401a08:	jne    0x401a48
  401a0a:	pop    esp
  401a0b:	mov    ebx,DWORD PTR [edx]
  401a0d:	pop    edx
  401a0e:	cwde   
  401a0f:	and    DWORD PTR [edi+0x57],0x7733c3ac
  401a16:	ds in  eax,dx
  401a18:	sti    
  401a19:	fbld   TBYTE PTR [ebp-0x10]
  401a1c:	ins    BYTE PTR es:[edi],dx
  401a1d:	xchg   BYTE PTR [esp+ebx*4],dh
  401a20:	or     eax,0xdc3f3e69
  401a25:	jmp    0x408b:0x69ac304b
  401a2c:	push   edi
  401a2d:	cmovae esp,eax
  401a30:	inc    ebx
  401a31:	mov    edi,0xdb5b6e4
  401a36:	sbb    eax,0xad3c91e2
  401a3b:	pop    esp
  401a3c:	push   ebp
  401a3d:	fs cmp al,0x96
  401a40:	aam    0x17
  401a42:	rcl    BYTE PTR ds:0x1fd5d0f8,cl
  401a48:	xor    dh,BYTE PTR [ecx+esi*8+0x5fe1debc]
  401a4f:	in     al,0xf0
  401a51:	in     eax,dx
  401a52:	jg     0x4019f4
  401a54:	inc    edi
  401a55:	sub    BYTE PTR [edx],ch
  401a57:	sahf   
  401a58:	call   0x27d0f18b
  401a5d:	jp     0x401a4d
  401a5f:	shl    BYTE PTR [ebx-0xbce9494],1
  401a65:	jg     0x401adb
  401a67:	(bad)  
  401a69:	or     al,0x4
  401a6b:	add    BYTE PTR [edx],0xd6
  401a6e:	xor    eax,DWORD PTR [eax-0x48d9e42e]
  401a74:	push   0x27
  401a76:	clc    
  401a77:	push   es
  401a78:	dec    DWORD PTR [edx]
  401a7a:	sub    bh,ah
  401a7c:	cmp    ebx,ebp
  401a7e:	ror    DWORD PTR [eax+ebp*8],cl
  401a81:	hlt    
  401a82:	push   eax
  401a83:	int3   
  401a84:	xchg   ebx,eax
  401a85:	xchg   esi,ecx
  401a87:	add    BYTE PTR [edx+0x7c],bl
  401a8a:	sbb    cl,BYTE PTR [ebx]
  401a8c:	(bad)  
  401a8d:	sbb    esi,DWORD PTR [edx-0x6]
  401a90:	fimul  DWORD PTR [eax-0x47]
  401a93:	int    0x88
  401a95:	sbb    ebp,esi
  401a97:	inc    ebx
  401a98:	cdq    
  401a99:	add    ch,BYTE PTR [edx+0x7d42f52f]
  401a9f:	inc    eax
  401aa0:	lea    esi,[eax+0x5b]
  401aa3:	test   al,0x39
  401aa5:	sbb    dl,dl
  401aa7:	push   esi
  401aa8:	adc    edi,esi
  401aaa:	fst    QWORD PTR [ecx-0x3a]
  401aad:	sbb    BYTE PTR [ecx+0x5ef99b24],ch
  401ab3:	mov    dl,0xc0
  401ab5:	or     BYTE PTR [edx],dh
  401ab7:	or     ecx,DWORD PTR [esp+esi*8-0x6f]
  401abb:	dec    eax
  401abc:	daa    
  401abd:	test   BYTE PTR [edi],bh
  401abf:	in     al,dx
  401ac0:	in     eax,0x74
  401ac2:	dec    ebx
  401ac3:	adc    DWORD PTR [ebx+0x52],0xffffffbf
  401ac7:	mov    ecx,DWORD PTR [esi-0x4c4aac0]
  401acd:	je     0x401b3f
  401acf:	rcr    DWORD PTR [ecx+0x71],0xe5
  401ad3:	xor    esp,DWORD PTR [eax-0x1c802142]
  401ad9:	mov    ds:0x7b4e1a60,eax
  401ade:	jmp    0x9b49:0xef28210f
  401ae5:	aam    0xa
  401ae7:	retf   0xe092
  401aea:	pop    edx
  401aeb:	lock nop
  401aed:	aad    0xb7
  401aef:	inc    edx
  401af0:	ss (bad) 
  401af3:	inc    esi
  401af4:	nop
  401af5:	mov    DWORD PTR [bp+di+0x710b],0xaf5a9716
  401afe:	hlt    
  401aff:	repnz repz mov edx,DWORD PTR [eax+0x1b]
  401b04:	sub    bl,dl
  401b06:	cmp    eax,0x9b0908fb
  401b0b:	jl     0x401ad7
  401b0d:	out    0xdc,eax
  401b0f:	stos   BYTE PTR es:[edi],al
  401b10:	xlat   BYTE PTR ds:[ebx]
  401b11:	cli    
  401b12:	cmp    DWORD PTR [esi],ebp
  401b14:	mov    eax,0xfbcc4840
  401b19:	in     eax,0xc
  401b1b:	jmp    0xedbd:0x79c561a1
  401b22:	sahf   
  401b23:	iret   
  401b24:	or     esi,ecx
  401b26:	outs   dx,DWORD PTR ds:[esi]
  401b27:	mov    cl,0x2c
  401b29:	adc    esi,ebp
  401b2b:	lods   al,BYTE PTR ds:[esi]
  401b2c:	imul   edx,DWORD PTR [ecx-0xb00cb80],0xffffff9b
  401b33:	pushf  
  401b34:	rcr    DWORD PTR [edi+ebx*1-0x2a],1
  401b38:	push   0xd5f0fc30
  401b3d:	cmp    edx,esp
  401b3f:	(bad)  
  401b40:	dec    edx
  401b41:	fidiv  WORD PTR [ecx]
  401b43:	xchg   ecx,eax
  401b44:	fisub  DWORD PTR [eax-0x7d1e6fe9]
  401b4a:	mov    esp,0xfa9dd7e5
  401b4f:	and    DWORD PTR [ebx-0x6],edi
  401b52:	or     DWORD PTR [ebx-0x77],edi
  401b55:	jmp    0xdc90189f
  401b5a:	jmp    0xc0f19e65
  401b5f:	nop
  401b60:	cmc    
  401b61:	or     dh,dl
  401b63:	outs   dx,DWORD PTR ds:[esi]
  401b64:	cmp    esi,DWORD PTR [eax-0x1183330]
  401b6a:	out    dx,al
  401b6b:	sbb    cl,ch
  401b6d:	push   ebp
  401b6e:	inc    ebp
  401b6f:	imul   ebp,DWORD PTR [esi],0xfcf803ba
  401b75:	sahf   
  401b76:	rcl    DWORD PTR [edx-0xc],1
  401b79:	pop    esp
  401b7a:	ss not esp
  401b7d:	mov    DWORD PTR [ebp+0x56dbccec],edi
  401b83:	or     edi,DWORD PTR [eax]
  401b85:	rol    BYTE PTR [edx-0x3a911c76],1
  401b8b:	pusha  
  401b8c:	cmc    
  401b8d:	stos   BYTE PTR es:[edi],al
  401b8e:	aaa    
  401b8f:	lahf   
  401b90:	out    dx,eax
  401b91:	jns    0x401bfe
  401b93:	mov    ds:0x4019adee,al
  401b98:	adc    esp,DWORD PTR [ebp-0x51]
  401b9b:	sub    BYTE PTR [ecx],ah
  401b9d:	test   eax,0x1309a5ec
  401ba2:	mov    eax,0xcd22f255
  401ba7:	fild   WORD PTR [eax-0x5b]
  401baa:	push   ebp
  401bab:	in     al,0x3
  401bad:	cmp    eax,edx
  401baf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bb0:	cmp    esp,DWORD PTR [edx]
  401bb2:	cmp    DWORD PTR [edi],edx
  401bb4:	in     al,0x3d
  401bb6:	xchg   edx,eax
  401bb7:	cmp    eax,DWORD PTR [ebp+0x33440656]
  401bbd:	inc    ecx
  401bbe:	loop   0x401c09
  401bc0:	rcr    BYTE PTR [esi-0x2a],0x74
  401bc4:	xor    DWORD PTR [edi],0xffffff97
  401bc7:	sar    BYTE PTR [eax-0x36],1
  401bca:	sub    eax,0x8c593bb9
  401bcf:	outs   dx,BYTE PTR ds:[esi]
  401bd0:	xlat   BYTE PTR ds:[ebx]
  401bd1:	outs   dx,BYTE PTR ds:[esi]
  401bd2:	adc    DWORD PTR [esi-0xd416a69],edx
  401bd8:	scas   eax,DWORD PTR es:[edi]
  401bd9:	push   ebx
  401bda:	fst    QWORD PTR [ebx]
  401bdc:	sti    
  401bdd:	stos   DWORD PTR es:[edi],eax
  401bde:	popf   
  401bdf:	mov    WORD PTR [eax-0x80],?
  401be2:	bound  eax,QWORD PTR [ebx-0x20]
  401be5:	ror    DWORD PTR [esi-0x34676d41],0x8a
  401bec:	mov    edi,0x660f887c
  401bf1:	ror    BYTE PTR [eax+0x3f],1
  401bf4:	dec    ecx
  401bf5:	lea    edi,[eax+0x6ad4ff54]
  401bfb:	add    eax,0x7c623152
  401c00:	ret    0xfc5
  401c03:	inc    ecx
  401c04:	bound  ebp,QWORD PTR [edx-0x7ce79e7e]
  401c0a:	aaa    
  401c0b:	pop    esi
  401c0c:	je     0x401bb2
  401c0e:	fwait
  401c0f:	sbb    edi,DWORD PTR [eax+0x35]
  401c12:	popf   
  401c13:	dec    eax
  401c14:	stos   BYTE PTR es:[edi],al
  401c15:	jns    0x401c11
  401c17:	xchg   edx,eax
  401c18:	mov    esp,0xfa426194
  401c1d:	xor    eax,0x20ec2248
  401c22:	aad    0xf8
  401c24:	and    BYTE PTR [ecx-0x2c],bh
  401c27:	mov    ebp,0xaba9838b
  401c2c:	mov    ecx,0xe75e03af
  401c31:	pop    edi
  401c32:	in     al,0xf8
  401c34:	jnp    0x401c96
  401c36:	(bad)  
  401c37:	mov    ds:0x15796fc0,al
  401c3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c3d:	add    eax,0xdc23aacb
  401c42:	ins    BYTE PTR es:[edi],dx
  401c43:	lods   eax,DWORD PTR ds:[esi]
  401c44:	sub    bl,ah
  401c46:	mov    eax,ds:0x2f736ecc
  401c4b:	xchg   edi,eax
  401c4c:	xchg   esi,eax
  401c4d:	mov    esi,0x135b5882
  401c52:	jmp    0xaaebb976
  401c57:	jg     0x401cba
  401c59:	loopne 0x401c3c
  401c5b:	loope  0x401c91
  401c5d:	std    
  401c5e:	add    ch,al
  401c60:	xor    al,0xe2
  401c62:	out    0x81,al
  401c64:	pop    esp
  401c65:	add    al,0x7
  401c67:	add    BYTE PTR [esi],0xf
  401c6a:	or     esi,DWORD PTR [ecx]
  401c6c:	pushf  
  401c6d:	xchg   esp,edx
  401c6f:	ror    DWORD PTR [eax],0xe4
  401c72:	into   
  401c73:	push   ss
  401c74:	push   esi
  401c75:	sub    DWORD PTR [ebx-0x29],esi
  401c78:	int3   
  401c79:	xchg   edx,eax
  401c7a:	add    al,BYTE PTR [edx+0x5b]
  401c7d:	push   edi
  401c7e:	mov    bl,0x3d
  401c80:	(bad)  
  401c81:	or     esi,0x47
  401c84:	iret   
  401c85:	scas   al,BYTE PTR es:[edi]
  401c86:	xor    DWORD PTR [edi+0x2a],ecx
  401c89:	and    eax,esp
  401c8b:	sahf   
  401c8c:	imul   BYTE PTR [edx-0x26]
  401c8f:	inc    eax
  401c90:	dec    edi
  401c91:	jg     0x401d09
  401c93:	bound  edi,QWORD PTR [ebp+eiz*1-0x57]
  401c97:	ja     0x401c26
  401c99:	or     BYTE PTR [ecx],dh
  401c9b:	gs mov ebp,0x82b015a6
  401ca1:	ucomiss xmm2,DWORD PTR [ebx]
  401ca4:	repnz cmp DWORD PTR [ebp-0x5c049c3b],edx
  401cab:	and    esp,esi
  401cad:	rcl    DWORD PTR [eax-0x7],cl
  401cb0:	shr    BYTE PTR [eax-0xe],0xb9
  401cb4:	pop    ebp
  401cb5:	pushf  
  401cb6:	repnz cli 
  401cb8:	or     DWORD PTR [eax+0x6e],eax
  401cbb:	push   ebp
  401cbc:	mov    al,ds:0xce5dd0e1
  401cc1:	jb     0x401d02
  401cc3:	pop    es
  401cc4:	out    0x1b,al
  401cc6:	pop    ebx
  401cc7:	xor    BYTE PTR [edx-0x706e4678],ah
  401ccd:	loopne 0x401d4d
  401ccf:	pop    edi
  401cd0:	jmp    0x401c74
  401cd2:	pop    es
  401cd3:	les    eax,FWORD PTR [esp+eax*2]
  401cd6:	adc    DWORD PTR [ebx-0x45af717a],ecx
  401cdc:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  401cde:	pushf  
  401cdf:	test   BYTE PTR [edx-0x66],0x66
  401ce3:	sbb    DWORD PTR [edx],esi
  401ce5:	cwde   
  401ce6:	and    BYTE PTR [esi],cl
  401ce8:	test   al,cl
  401cea:	fiadd  WORD PTR ds:0xcb19341f
  401cf0:	jmp    0x401d39
  401cf2:	pop    eax
  401cf3:	fidiv  WORD PTR [edi]
  401cf5:	xchg   BYTE PTR [eax+0x46519c52],dl
  401cfb:	out    0xd,eax
  401cfd:	je     0x401cd0
  401cff:	scas   al,BYTE PTR es:[edi]
  401d00:	push   ebp
  401d01:	dec    ebx
  401d02:	xchg   ebp,eax
  401d03:	gs or  esp,ebp
  401d06:	ror    DWORD PTR [edi],1
  401d08:	pop    esi
  401d09:	repz and al,0x87
  401d0c:	xchg   ebp,ebx
  401d0e:	mov    dh,0x37
  401d10:	mov    ss,WORD PTR [esi+eiz*2]
  401d13:	mov    dh,0x94
  401d15:	cli    
  401d16:	mov    ebp,0xf4a064ed
  401d1b:	ficomp WORD PTR [edx-0x39]
  401d1e:	xchg   ch,bh
  401d20:	jg     0x401d85
  401d22:	ds sti 
  401d24:	xor    bl,0xa8
  401d27:	jmp    0x401d8d
  401d29:	sub    eax,0x45658e30
  401d2e:	retf   0x97a1
  401d31:	pushf  
  401d32:	push   0xc5f9514a
  401d37:	pusha  
  401d38:	and    DWORD PTR [edi+0x479951e9],0xffffffa6
  401d3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d40:	loop   0x401cf3
  401d42:	cld    
  401d43:	or     esi,esp
  401d45:	pop    ss
  401d46:	and    al,0x5a
  401d48:	adc    eax,0xd3b17768
  401d4d:	jle    0x401d49
  401d4f:	add    BYTE PTR [ecx+0x71047f0e],bl
  401d55:	int3   
  401d56:	mov    ds:0x82dad573,eax
  401d5b:	jmp    0x401d08
  401d5d:	nop
  401d5e:	sub    al,0xca
  401d60:	or     eax,0x3558d522
  401d65:	pop    edx
  401d66:	in     al,0x8
  401d68:	xor    bh,BYTE PTR [ebp+0x375f8588]
  401d6e:	mov    al,0xe8
  401d70:	cmp    eax,0xb49e2cee
  401d75:	sar    DWORD PTR [edx+0x7c],0xad
  401d79:	jbe    0x401d42
  401d7b:	clc    
  401d7c:	inc    edx
  401d7d:	inc    edi
  401d7e:	mov    DWORD PTR [edi],ebx
  401d80:	int    0x52
  401d82:	out    dx,al
  401d83:	mov    dl,0x7
  401d85:	xchg   BYTE PTR [ecx-0x30],bh
  401d88:	mov    al,ds:0x61e0314c
  401d8d:	push   cs
  401d8e:	fst    DWORD PTR [eax-0x1d538066]
  401d94:	mov    eax,ds:0xdc801a07
  401d99:	inc    ebp
  401d9a:	int3   
  401d9b:	sti    
  401d9c:	pop    es
  401d9d:	sbb    eax,0x76c1acc3
  401da2:	(bad)  
  401da3:	mov    ah,0xae
  401da5:	stos   BYTE PTR es:[edi],al
  401da6:	fsubr  st,st(2)
  401da8:	outs   dx,BYTE PTR ds:[esi]
  401da9:	pop    esi
  401daa:	dec    edi
  401dab:	xbegin 0xdd189872
  401db1:	inc    edx
  401db2:	cdq    
  401db3:	xchg   DWORD PTR [ebx-0x37],edi
  401db6:	jmp    0x401dfc
  401db8:	cmp    BYTE PTR ds:0xa6cd60dd,bh
  401dbe:	aad    0xd
  401dc0:	xor    DWORD PTR [ebx-0x13],0x56365f3e
  401dc7:	aaa    
  401dc8:	stos   BYTE PTR es:[edi],al
  401dc9:	sub    al,BYTE PTR ds:0x956d0ace
  401dcf:	pusha  
  401dd0:	and    ebx,esi
  401dd2:	cwde   
  401dd3:	call   0x96af818c
  401dd8:	gs mov ecx,0x83f66e6
  401dde:	aam    0x29
  401de0:	adc    al,0x9a
  401de2:	(bad)  
  401de3:	retf   
  401de4:	xor    ebx,esi
  401de6:	push   ds
  401de7:	out    0x18,al
  401de9:	pop    edi
  401dea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401deb:	pop    eax
  401dec:	rol    DWORD PTR [ebp+0x4e30b6db],cl
  401df2:	jns    0x401e63
  401df4:	pop    edi
  401df5:	inc    ecx
  401df6:	sahf   
  401df7:	cmp    ah,BYTE PTR [ebx-0x43]
  401dfa:	push   ebx
  401dfb:	fimul  WORD PTR [ebx-0x3]
  401dfe:	in     eax,0x74
  401e00:	pop    esp
  401e01:	outs   dx,BYTE PTR ds:[esi]
  401e02:	retf   0x2b2a
  401e05:	fcom   QWORD PTR [eax+0xe68db9f]
  401e0b:	out    0xfb,eax
  401e0d:	jg     0x401e11
  401e0f:	mov    bl,0xd
  401e11:	mov    eax,ds:0xc5bce41a
  401e16:	scas   al,BYTE PTR es:[edi]
  401e17:	rcl    BYTE PTR [ecx+ecx*4-0x2a],0xa1
  401e1c:	and    al,0x30
  401e1e:	mov    eax,0x7a7496fc
  401e23:	inc    esp
  401e24:	sbb    edi,DWORD PTR [esi+eax*4]
  401e27:	xor    DWORD PTR [esi-0x5cc6f7b0],esp
  401e2d:	mov    ebp,0xb7d72dcb
  401e32:	jo     0x401dd2
  401e34:	aas    
  401e35:	inc    esi
  401e36:	sahf   
  401e37:	int3   
  401e38:	jmp    0x67b7:0xb8b3a1b0
  401e3f:	cmp    eax,0xb4c18e5f
  401e44:	push   0xffffffcb
  401e46:	(bad)  
  401e49:	cmp    edx,DWORD PTR [ebp+0x2a]
  401e4c:	add    BYTE PTR [ebx],dl
  401e4e:	mov    ebp,0x2c515d4b
  401e53:	les    esi,FWORD PTR [edi-0x714fbcf3]
  401e59:	inc    esi
  401e5a:	jbe    0x401e1f
  401e5c:	shl    BYTE PTR [edi-0xb],1
  401e5f:	shl    BYTE PTR [edx-0x572fd8e6],0xc6
  401e66:	xlat   BYTE PTR ds:[ebx]
  401e67:	and    esp,ecx
  401e69:	lock pop ds
  401e6b:	shl    BYTE PTR [ebx],0x5f
  401e6e:	(bad)  
  401e6f:	js     0x401e27
  401e71:	inc    edi
  401e72:	call   0xae56:0x7eb3b696
  401e79:	pop    edi
  401e7a:	push   esi
  401e7b:	and    DWORD PTR [ecx],esi
  401e7d:	sbb    ebp,DWORD PTR [esi+edi*2+0x787a58fa]
  401e84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e85:	mov    ecx,0xc776c7df
  401e8a:	std    
  401e8b:	out    0x80,eax
  401e8d:	clc    
  401e8e:	add    eax,0xffd8e0a2
  401e93:	mov    bh,0x48
  401e95:	jg     0x401e6b
  401e97:	push   edx
  401e98:	test   al,0xb4
  401e9a:	jmp    0x401e34
  401e9c:	xchg   esi,eax
  401e9d:	lods   eax,DWORD PTR ds:[esi]
  401e9e:	jecxz  0x401ec0
  401ea0:	in     eax,0x10
  401ea2:	xor    ebx,DWORD PTR [edx-0x1b]
  401ea5:	add    DWORD PTR [ebx],ebp
  401ea7:	pusha  
  401ea8:	(bad)  
  401ea9:	data16 test bl,bl
  401eac:	dec    ebx
  401ead:	inc    edi
  401eae:	pop    es
  401eaf:	popf   
  401eb0:	popa   
  401eb1:	pop    edx
  401eb2:	aam    0x22
  401eb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401eb5:	ficomp WORD PTR [eax+ebx*1]
  401eb8:	mov    ah,0xaf
  401eba:	or     ebx,esp
  401ebc:	ins    DWORD PTR es:[edi],dx
  401ebd:	in     al,0xa5
  401ebf:	xchg   ebp,eax
  401ec0:	cs xchg edx,eax
  401ec2:	xchg   edi,eax
  401ec3:	in     eax,dx
  401ec4:	xor    DWORD PTR [ecx],esi
  401ec6:	inc    esp
  401ec7:	enter  0xc7c7,0xdb
  401ecb:	das    
  401ecc:	pop    ebp
  401ecd:	shl    BYTE PTR ds:0x9bf8e463,0xdd
  401ed4:	ins    BYTE PTR es:[edi],dx
  401ed5:	mov    al,0x96
  401ed7:	in     eax,dx
  401ed8:	xlat   BYTE PTR ds:[ebx]
  401eda:	jno    0x401f46
  401edc:	(bad)  
  401edd:	cli    
  401ede:	mov    ebp,0x9f141ebc
  401ee3:	jecxz  0x401e9a
  401ee5:	es sahf 
  401ee7:	and    ah,ch
  401ee9:	xchg   ecx,eax
  401eea:	popf   
  401eeb:	lods   eax,DWORD PTR ds:[esi]
  401eec:	and    al,0x67
  401eee:	xor    eax,0x2595bc83
  401ef3:	sub    eax,0xa61af322
  401ef8:	out    dx,al
  401ef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401efa:	pop    edx
  401efb:	xor    eax,0xf1ebddae
  401f00:	or     al,0x2f
  401f02:	scas   eax,DWORD PTR es:[edi]
  401f03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f04:	pushf  
  401f05:	dec    esp
  401f06:	fbstp  TBYTE PTR [ecx+ebp*1]
  401f09:	inc    esp
  401f0a:	ins    BYTE PTR es:[edi],dx
  401f0b:	jns    0x401ebc
  401f0d:	stos   DWORD PTR es:[edi],eax
  401f0e:	mov    ecx,0x7debec7c
  401f13:	xchg   DWORD PTR [ebx],esp
  401f15:	sub    eax,0xe01f7400
  401f1a:	int3   
  401f1b:	sub    eax,0xd6274b72
  401f20:	psubusw mm3,QWORD PTR [edx-0xa]
  401f24:	inc    edx
  401f25:	sbb    DWORD PTR [edx+esi*1+0x57],esi
  401f29:	das    
  401f2a:	add    al,0x78
  401f2c:	repz cmp eax,DWORD PTR ds:0xd7ad2195
  401f33:	inc    esi
  401f34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f35:	(bad)  
  401f36:	popf   
  401f37:	(bad)
  401f3a:	mov    bh,0xa4
  401f3c:	dec    edi
  401f3d:	ins    BYTE PTR es:[edi],dx
  401f3e:	pop    esp
  401f3f:	mov    ch,0xf8
  401f41:	cs sti 
  401f43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f44:	sti    
  401f45:	sbb    esp,esi
  401f47:	fwait
  401f48:	sti    
  401f49:	xor    cl,BYTE PTR [ecx-0x51ee85bd]
  401f4f:	std    
  401f50:	mov    eax,0x21645d41
  401f55:	out    dx,eax
  401f56:	addr16 out dx,eax
  401f58:	lock stc 
  401f5a:	std    
  401f5b:	jle    0x401f63
  401f5d:	dec    esp
  401f5f:	mov    eax,0x54595bc
  401f64:	and    BYTE PTR [edi+0x75e0b2ff],dl
  401f6a:	test   eax,0xa4497769
  401f6f:	and    bh,BYTE PTR [eax-0x3f085c5f]
  401f75:	push   ebx
  401f76:	rep outs dx,BYTE PTR gs:[esi]
  401f79:	fsub   DWORD PTR [ecx]
  401f7b:	pop    esi
  401f7c:	ret    0xc787
  401f7f:	loopne 0x401fab
  401f81:	sbb    cl,BYTE PTR [edx+edx*4-0x27]
  401f85:	adc    edx,DWORD PTR [esi+0x5ced4635]
  401f8b:	or     BYTE PTR [ebx+0x126de4a0],ch
  401f91:	ss test al,0x8f
  401f94:	adc    esp,DWORD PTR [ebx-0x8653c52]
  401f9a:	add    BYTE PTR [ebx],bl
  401f9c:	dec    edi
  401f9d:	sub    BYTE PTR [esi+0x45],dh
  401fa0:	sbb    eax,DWORD PTR [edx]
  401fa2:	pop    esp
  401fa3:	fistp  DWORD PTR [ebx-0x2481757]
  401fa9:	cli    
  401faa:	mov    edx,0xd815b039
  401faf:	inc    ecx
  401fb0:	cwde   
  401fb1:	(bad)  
  401fb2:	sub    eax,0x4e5e1b42
  401fb7:	and    DWORD PTR [edx+0x43],esp
  401fba:	adc    DWORD PTR [ebx+0x3c],0x18b80b0d
  401fc1:	mov    ch,0xdf
  401fc3:	(bad)  
  401fc4:	jp     0x401fe6
  401fc6:	push   eax
  401fc7:	nop
  401fc8:	and    DWORD PTR ds:0xb7d83fdc,eax
  401fce:	jecxz  0x401f57
  401fd0:	call   0x4686:0xbeb63d0f
  401fd7:	or     al,0xfb
  401fd9:	imul   BYTE PTR [ebx+0x67]
  401fdc:	push   esp
  401fdd:	and    ch,BYTE PTR [ebx+0xe]
  401fe0:	adc    ch,BYTE PTR [edi-0x48]
  401fe3:	fcomp  DWORD PTR [ecx-0x3d38a74d]
  401fe9:	aas    
  401fea:	sub    BYTE PTR [esi+0x3082044a],cl
  401ff0:	call   0xe9b7:0x71349ddf
  401ff7:	fidiv  DWORD PTR [eax]
  401ff9:	jno    0x402026
  401ffb:	lock and DWORD PTR ds:0x50a26291,0x7e
  402003:	add    BYTE PTR [esi+ebp*8],0xd
  402007:	mov    edi,0x6a45014a
  40200c:	repz add bh,BYTE PTR ds:0xacf052b7
  402013:	sbb    DWORD PTR [esi],edi
  402015:	pop    ss
  402016:	ror    DWORD PTR ds:0x6b0ed1bc,1
  40201c:	dec    ebp
  40201d:	inc    esi
  40201e:	xlat   BYTE PTR ds:[ebx]
  40201f:	es (bad) 
  402021:	jecxz  0x402020
  402023:	or     cl,dh
  402025:	xor    al,0xe
  402027:	data16 ja 0x402081
  40202a:	pop    es
  40202b:	shl    DWORD PTR [edx-0x67018148],cl
  402031:	outs   dx,WORD PTR ds:[esi]
  402033:	sar    ebx,0xd9
  402036:	push   es
  402037:	into   
  402038:	push   edi
  402039:	xchg   DWORD PTR [ecx-0x42],edx
  40203c:	rol    BYTE PTR [edx-0x163cd5d6],1
  402042:	sub    eax,0xb5b2b2cf
  402047:	dec    eax
  402048:	(bad)  
  402049:	cmp    DWORD PTR [esi+0x3819b107],esp
  40204f:	sahf   
  402050:	jle    0x402049
  402052:	jae    0x402049
  402054:	test   al,0x28
  402056:	ins    DWORD PTR es:[edi],dx
  402057:	and    al,0xa2
  402059:	enter  0x991f,0xb7
  40205d:	out    dx,eax
  40205e:	inc    edi
  40205f:	mov    WORD PTR [edi],gs
  402061:	call   0x7c19:0xcfd30961
  402068:	jg     0x402051
  40206a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40206b:	cmp    al,0xf9
  40206d:	jno    0x4020eb
  40206f:	inc    edi
  402070:	mov    esi,0x85a8fcc5
  402075:	adc    dh,BYTE PTR [eax]
  402077:	mov    WORD PTR [edx],?
  402079:	es push edi
  40207b:	test   al,0xcb
  40207d:	push   cs
  40207e:	jmp    0x4020da
  402080:	jne    0x4020c7
  402082:	data16 xor al,0x9e
  402085:	aad    0x6d
  402087:	dec    BYTE PTR ds:0xffb41c38
  40208d:	push   0xffffffa7
  40208f:	adc    DWORD PTR [edx+eax*2],edi
  402092:	and    eax,0xb4804aa3
  402097:	mov    bl,BYTE PTR [eax+0x57]
  40209a:	adc    BYTE PTR [ebx],ch
  40209c:	(bad)  
  40209d:	add    bh,BYTE PTR [edx-0x1ca95f45]
  4020a3:	push   0x89258e14
  4020a8:	mov    esp,0xe3a175a3
  4020ad:	add    ecx,DWORD PTR [ecx+0xb]
  4020b0:	and    al,0x11
  4020b2:	sub    BYTE PTR [ecx-0x5d640c22],ch
  4020b8:	icebp  
  4020b9:	or     bl,BYTE PTR [edx+0x3f]
  4020bc:	inc    ebp
  4020bd:	push   esp
  4020be:	sub    eax,0x2c49067b
  4020c3:	push   edx
  4020c4:	and    ebx,DWORD PTR [edx]
  4020c6:	pop    ebx
  4020c7:	ins    WORD PTR es:[edi],dx
  4020c9:	enter  0x516f,0x26
  4020cd:	in     eax,dx
  4020ce:	mov    eax,ds:0x62f14b53
  4020d3:	mov    ebp,0x1ce4a31b
  4020d8:	mov    ah,0x83
  4020da:	xchg   ebp,eax
  4020db:	sub    esi,DWORD PTR [eax+0x729c1317]
  4020e1:	push   0xffffff89
  4020e3:	loopne 0x4020ac
  4020e5:	(bad)  
  4020e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020e7:	lds    edi,FWORD PTR [eax+0x18ab46e8]
  4020ed:	out    0x53,al
  4020ef:	cwde   
  4020f0:	xchg   ecx,eax
  4020f1:	popf   
  4020f2:	mov    al,ds:0xbab2efd2
  4020f7:	cdq    
  4020f8:	int3   
  4020f9:	mov    dh,0x87
  4020fb:	push   edi
  4020fc:	cmp    eax,0x3d2ae929
  402101:	imul   BYTE PTR [esi+0xe]
  402104:	cmc    
  402105:	and    al,0x3c
  402107:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402109:	adc    edi,DWORD PTR [ebx-0x6b]
  40210c:	addr16 repnz dec esp
  40210f:	in     al,dx
  402110:	pushf  
  402111:	and    DWORD PTR [ecx-0x6d],esi
  402114:	ins    BYTE PTR es:[edi],dx
  402115:	fcom   QWORD PTR [eax+ebx*8+0x1818cc9c]
  40211c:	ss mov dh,0x34
  40211f:	pop    esi
  402120:	pop    eax
  402121:	jecxz  0x402117
  402123:	xchg   esi,eax
  402124:	(bad)  [ebp+0x1]
  402127:	jl     0x4020e5
  402129:	js     0x40219d
  40212b:	pop    edx
  40212c:	inc    eax
  40212d:	xor    cl,BYTE PTR [ebx+0x4c9eed0c]
  402133:	xor    eax,0x2dfe47c3
  402138:	jno    0x40210e
  40213a:	dec    ebx
  40213b:	in     eax,dx
  40213c:	pop    esp
  40213e:	inc    ebp
  40213f:	push   cs
  402140:	out    0x88,al
  402142:	inc    ebp
  402143:	mov    dh,0x8f
  402145:	test   eax,0x26f58b41
  40214a:	inc    ecx
  40214b:	out    dx,eax
  40214c:	sbb    DWORD PTR [eax-0x7b9f5ad4],ebx
  402152:	xor    cl,BYTE PTR [ecx]
  402154:	lea    ebx,[edx+0x5b910d2e]
  40215a:	popa   
  40215b:	mov    dh,0xd
  40215d:	ja     0x402191
  40215f:	mov    ch,dh
  402161:	in     al,dx
  402162:	push   es
  402163:	xor    cl,BYTE PTR ds:0x9a160308
  402169:	(bad)  
  40216a:	je     0x4021b3
  40216c:	cmp    bh,dh
  40216e:	inc    ebx
  40216f:	jecxz  0x4021c8
  402171:	ins    DWORD PTR es:[edi],dx
  402172:	cmp    dl,BYTE PTR ss:[edi-0x4a]
  402176:	clc    
  402177:	ins    DWORD PTR es:[edi],dx
  402178:	cmp    eax,DWORD PTR ds:0x88fa2ce5
  40217e:	loop   0x402164
  402180:	outs   dx,DWORD PTR ds:[esi]
  402181:	(bad)  
  402182:	faddp  st(3),st
  402184:	pop    ebp
  402185:	and    ch,dl
  402187:	cwde   
  402188:	imul   eax,ebx,0xa54b88b
  40218e:	mov    ebp,0xf1923f95
  402193:	imul   esp,DWORD PTR [esi],0xf3b01daf
  402199:	mov    BYTE PTR [eax],al
  40219b:	(bad)  
  40219d:	gs jns 0x4021ab
  4021a0:	adc    eax,0x2ed69a09
  4021a5:	sbb    BYTE PTR [edi+ebp*1-0x4da1318b],ch
  4021ac:	out    dx,al
  4021ad:	dec    eax
  4021ae:	jne    0x4021bb
  4021b0:	ds (bad) 
  4021b2:	jmp    0x174f:0x5eeca904
  4021b9:	cmp    DWORD PTR [edx-0x1c],eax
  4021bc:	or     eax,0x42d7b1f
  4021c1:	fisub  WORD PTR [ecx+0x4b]
  4021c4:	add    eax,0x70187713
  4021c9:	(bad)  
  4021ca:	or     BYTE PTR [edx-0x2d],dh
  4021cd:	je     0x402206
  4021cf:	shr    DWORD PTR [ecx+0x22],0x0
  4021d3:	sbb    al,0xba
  4021d5:	push   edx
  4021d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021d7:	dec    esp
  4021d8:	inc    edi
  4021d9:	jle    0x4021c7
  4021db:	mov    bh,0x42
  4021dd:	cwde   
  4021de:	jb     0x4021e8
  4021e0:	sbb    bl,BYTE PTR [esi]
  4021e2:	(bad)  
  4021e3:	inc    cl
  4021e5:	inc    ebx
  4021e6:	xchg   edx,eax
  4021e7:	in     eax,dx
  4021e8:	into   
  4021e9:	xchg   ecx,eax
  4021ea:	xor    cl,0xda
  4021ed:	or     edi,DWORD PTR [edi-0x5c]
  4021f0:	stos   DWORD PTR es:[edi],eax
  4021f1:	stc    
  4021f2:	mov    ds:0x3e211727,eax
  4021f7:	nop
  4021f8:	cs es jns 0x402206
  4021fc:	add    al,0x84
  4021fe:	cmp    esp,DWORD PTR [ebx+0xede59ef]
  402204:	pop    edx
  402205:	lahf   
  402206:	shl    BYTE PTR [eax],1
  402208:	stos   BYTE PTR es:[edi],al
  402209:	ror    BYTE PTR [ecx+ecx*8],0x21
  40220d:	xlat   BYTE PTR ds:[ebx]
  40220e:	clc    
  40220f:	std    
  402210:	pop    ecx
  402212:	sub    DWORD PTR [esp+edi*4],esp
  402215:	and    BYTE PTR [esp+eiz*8],dl
  402218:	push   esi
  402219:	push   ebp
  40221a:	arpl   WORD PTR [eax+edx*1],di
  40221d:	push   0xa1d4d71e
  402222:	ss mov dl,ch
  402225:	mov    ch,0xfc
  402227:	loopne 0x402275
  402229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40222a:	ins    BYTE PTR es:[edi],dx
  40222b:	push   ebx
  40222c:	xor    ebp,DWORD PTR [esi]
  40222e:	and    eax,0x4c2ec2ff
  402233:	stos   BYTE PTR es:[edi],al
  402234:	push   esp
  402235:	ja     0x4022a2
  402237:	fbld   TBYTE PTR [eax-0x7d]
  40223a:	xchg   edx,eax
  40223b:	into   
  40223c:	add    DWORD PTR [edx+0x1b],ecx
  40223f:	addr16 xchg edx,eax
  402241:	mov    ebx,0xe39d304a
  402246:	js     0x402256
  402248:	jnp    0x4021fa
  40224a:	jae    0x4021d1
  40224c:	aas    
  40224d:	mov    WORD PTR [bp+si],ss
  402250:	xor    DWORD PTR [ebx+0x6b],edi
  402253:	inc    ecx
  402254:	std    
  402255:	div    BYTE PTR [eax]
  402257:	mov    dh,0x60
  402259:	push   edi
  40225a:	fwait
  40225b:	pop    ss
  40225c:	ss inc edi
  40225e:	lock ret 0x4b28
  402262:	ins    DWORD PTR es:[edi],dx
  402263:	jb     0x402274
  402265:	(bad)  
  402266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402267:	mov    ebp,0x33e4b425
  40226c:	shl    BYTE PTR [ecx+0x79cda5af],cl
  402272:	push   edi
  402273:	pop    eax
  402274:	fiadd  DWORD PTR [ebx-0x67b9e69f]
  40227a:	sti    
  40227b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40227c:	push   eax
  40227d:	inc    ecx
  40227e:	adc    ah,BYTE PTR [edx-0x3aa4b284]
  402284:	push   ss
  402285:	cdq    
  402286:	popf   
  402287:	loop   0x402295
  402289:	das    
  40228a:	adc    cl,BYTE PTR [esp+edi*2-0x23]
  40228e:	in     eax,0xde
  402290:	test   BYTE PTR fs:[esi+0x2d2511c0],bl
  402297:	aad    0x5b
  402299:	mov    ch,0xbe
  40229b:	push   0xffffff9e
  40229d:	jae    0x40224a
  40229f:	mov    ecx,DWORD PTR [ebp+0x68]
  4022a2:	add    ah,cl
  4022a4:	cmp    ch,dh
  4022a6:	shl    DWORD PTR [ebp+0xe],cl
  4022a9:	mov    esp,0xe281e6be
  4022ae:	mov    al,0x37
  4022b0:	dec    ecx
  4022b1:	stos   DWORD PTR es:[edi],eax
  4022b2:	mov    bl,0x9b
  4022b4:	lahf   
  4022b5:	daa    
  4022b6:	les    ecx,FWORD PTR [edi]
  4022b8:	repz push 0x4
  4022bb:	test   DWORD PTR [esi],esi
  4022bd:	pop    ebp
  4022be:	enter  0xb6d8,0x77
  4022c2:	fwait
  4022c3:	pop    eax
  4022c4:	enter  0x7779,0x7c
  4022c8:	retf   
  4022c9:	loopne 0x4022b6
  4022cb:	ins    DWORD PTR es:[edi],dx
  4022cc:	aam    0xcf
  4022ce:	iret   
  4022cf:	cdq    
  4022d0:	inc    ebx
  4022d1:	fdivp  st(0),st
  4022d3:	inc    ebp
  4022d4:	xor    ebp,DWORD PTR [ecx+0x1b]
  4022d7:	sub    ch,ah
  4022d9:	mov    esp,DWORD PTR [esp+esi*8-0x22]
  4022dd:	dec    ebp
  4022de:	and    eax,0xaf37efc3
  4022e3:	addr16 icebp 
  4022e5:	out    dx,al
  4022e6:	lods   eax,DWORD PTR ds:[esi]
  4022e7:	pop    ebp
  4022e8:	es lock cwde 
  4022eb:	fwait
  4022ec:	sbb    eax,0x7f1c645f
  4022f2:	pop    es
  4022f3:	cs out dx,al
  4022f5:	and    bh,cl
  4022f7:	out    0xa6,eax
  4022f9:	mov    esp,0x811486bd
  4022fe:	add    DWORD PTR [eax+0x33],ecx
  402301:	inc    esp
  402302:	mov    ds:0x7df92db4,eax
  402307:	scas   eax,DWORD PTR es:[edi]
  402308:	daa    
  402309:	retf   0xdf0b
  40230c:	push   ebx
  40230d:	add    DWORD PTR [ebx+0x59070f2d],ebx
  402313:	jbe    0x40233c
  402315:	and    eax,0xc9d40568
  40231a:	sar    DWORD PTR [eax],cl
  40231c:	(bad)  
  40231d:	mov    edi,0x2937b387
  402322:	jl     0x4022e3
  402324:	arpl   WORD PTR [ebx-0x1e413ad1],cx
  40232a:	sub    esi,esi
  40232c:	jnp    0x402342
  40232e:	sti    
  40232f:	je     0x4022e0
  402331:	sbb    ah,BYTE PTR [eax]
  402333:	xor    eax,0x487125f2
  402338:	dec    ecx
  40233a:	pop    ecx
  40233b:	shr    ebx,1
  40233d:	fimul  DWORD PTR [ebx-0x64]
  402340:	in     al,0xd
  402342:	inc    esi
  402343:	out    dx,eax
  402344:	addr16 retf 0xdb82
  402348:	sbb    cl,ch
  40234a:	push   0xffffff89
  40234c:	(bad)  
  40234d:	pop    ds
  40234e:	xchg   edi,eax
  40234f:	shl    BYTE PTR [edx-0x80],1
  402352:	jmp    0x7a943b42
  402357:	cmp    eax,0x8cb50e62
  40235c:	pop    es
  40235d:	cs cmp DWORD PTR fs:[eax+0x3b8ec260],ebx
  402365:	addr16 push eax
  402367:	xchg   BYTE PTR [ecx+eiz*1-0x73b571d0],dl
  40236e:	mov    edi,0x6c3c4ba
  402373:	jne    0x402398
  402375:	push   esi
  402376:	cmp    DWORD PTR [edi-0x4a],eax
  402379:	inc    ecx
  40237a:	dec    ebx
  40237b:	outs   dx,BYTE PTR ds:[esi]
  40237c:	and    al,0xde
  40237e:	add    DWORD PTR gs:[edx-0x3d],0x7f16b6b5
  402386:	add    edi,DWORD PTR [ebx-0x73]
  402389:	pop    edi
  40238a:	xchg   esi,eax
  40238b:	(bad)
  40238e:	add    ecx,ebp
  402390:	xor    al,0x43
  402392:	and    bh,0xc9
  402395:	fld    QWORD PTR gs:[edi+0x79bb4b54]
  40239c:	xchg   ecx,eax
  40239d:	lea    ecx,[edi]
  40239f:	popf   
  4023a0:	push   0x78
  4023a2:	neg    BYTE PTR [ebx+eax*8]
  4023a5:	sub    DWORD PTR [eax+0x6e86510],0xe7628254
  4023af:	mov    al,ds:0xaad3e56a
  4023b4:	repz aas 
  4023b6:	or     dh,bh
  4023b8:	stos   BYTE PTR es:[edi],al
  4023b9:	inc    esi
  4023ba:	jno    0x40240a
  4023bc:	jbe    0x4023d2
  4023be:	retf   
  4023bf:	mov    WORD PTR [ecx],fs
  4023c1:	out    0xf2,eax
  4023c3:	ins    DWORD PTR es:[edi],dx
  4023c4:	and    ebp,DWORD PTR [ebx]
  4023c6:	(bad)  
  4023c7:	push   ss
  4023c8:	aaa    
  4023c9:	pinsrw mm4,WORD PTR [edx+0x399585f6],0x78
  4023d1:	mov    edi,0xa748c027
  4023d6:	mov    bh,0xc0
  4023d8:	js     0x4023db
  4023da:	and    dh,BYTE PTR [ebx+edi*1+0x741b4ed4]
  4023e1:	mov    dh,BYTE PTR [ebp+0x7ec17267]
  4023e7:	push   ebx
  4023e8:	loop   0x4023ad
  4023ea:	mov    DWORD PTR [ebp+0x1e160761],eax
  4023f0:	out    0x9b,eax
  4023f2:	inc    edi
  4023f3:	add    eax,0x1dd6b219
  4023f8:	cmc    
  4023f9:	inc    esp
  4023fa:	mov    ah,0xd0
  4023fc:	cs mov edx,0x5716afa5
  402402:	sub    al,0xcc
  402404:	inc    ebx
  402405:	addr16 mov cl,0xa4
  402408:	data16 test al,0xa1
  40240b:	inc    esp
  40240c:	loop   0x4023f2
  40240e:	jp     0x402448
  402410:	dec    ecx
  402411:	jge    0x4023fb
  402413:	lahf   
  402414:	pop    edx
  402415:	ret    
  402416:	dec    ebp
  402417:	pop    eax
  402418:	sahf   
  402419:	outs   dx,BYTE PTR ds:[esi]
  40241a:	push   0xd39f8542
  40241f:	or     DWORD PTR [ecx],ebx
  402421:	mov    dl,0x6c
  402423:	xor    cl,dl
  402425:	(bad)  
  402426:	cmp    eax,DWORD PTR [esi-0x1ffa9693]
  40242c:	adc    DWORD PTR [eax+0x61],edi
  40242f:	in     eax,0xf6
  402431:	js     0x402481
  402433:	jae    0x4023fe
  402435:	rcr    BYTE PTR [edi+0x6c],cl
  402438:	mov    edi,DWORD PTR [ebx+0x163e3745]
  40243e:	mov    esp,0x3346dae6
  402443:	or     BYTE PTR [ecx-0x15e488f6],bl
  402449:	hlt    
  40244a:	shl    cl,cl
  40244c:	sub    DWORD PTR [esi],ecx
  40244e:	out    0x20,eax
  402450:	fwait
  402451:	int3   
  402452:	push   ebp
  402453:	xchg   edi,eax
  402454:	dec    edx
  402455:	cmp    esp,DWORD PTR [edx]
  402457:	dec    ebp
  402458:	das    
  402459:	push   ss
  40245a:	xchg   edx,eax
  40245b:	fnstenv [ebx+0x14b8f639]
  402461:	dec    edi
  402462:	mov    ah,al
  402464:	call   0xbf8a:0xebafec46
  40246b:	(bad)  
  40246c:	cld    
  40246d:	outs   dx,DWORD PTR ds:[esi]
  40246e:	imul   edx,edx,0x5fe151d2
  402474:	and    ah,BYTE PTR [ebp-0x5dd3fb3f]
  40247a:	dec    edi
  40247b:	xchg   edx,edi
  40247d:	xor    ebp,edx
  40247f:	ret    
  402480:	mov    ebx,0x4bc35c7d
  402485:	mov    cl,0xae
  402487:	(bad)  
  402489:	and    dh,BYTE PTR es:[edi-0x1b]
  40248d:	jmp    0x61f3:0x7db278d
  402494:	aam    0xa4
  402496:	xchg   BYTE PTR [ebx+0x5b],dh
  402499:	mov    DWORD PTR [ebx],esp
  40249b:	aad    0x33
  40249d:	mov    al,0x35
  40249f:	mov    edi,0x41520a0e
  4024a4:	(bad)  
  4024a6:	fsubr  QWORD PTR [eax+0x6516d3ed]
  4024ac:	mov    esi,0xb8732637
  4024b1:	retf   
  4024b2:	sub    eax,0x5e3b76bf
  4024b7:	data16 out 0x6,al
  4024ba:	mov    bl,0x44
  4024bc:	and    ah,BYTE PTR [esi+ecx*2]
  4024bf:	ja     0x402442
  4024c1:	mov    bl,0xeb
  4024c3:	repz xor BYTE PTR [eax+0x17],al
  4024c7:	or     DWORD PTR [ebx+0x27],edx
  4024ca:	cwde   
  4024cb:	outs   dx,DWORD PTR ds:[esi]
  4024cc:	mov    ch,0x8e
  4024ce:	outs   dx,DWORD PTR ds:[esi]
  4024cf:	cmp    edi,eax
  4024d1:	cld    
  4024d2:	mov    ah,0x68
  4024d4:	cwde   
  4024d5:	push   eax
  4024d6:	nop
  4024d7:	xor    al,0xa1
  4024d9:	arpl   WORD PTR [ecx-0x80],ax
  4024dc:	inc    edx
  4024dd:	retf   0x479b
  4024e0:	mov    ebp,0xe4a9d2fe
  4024e5:	js     0x4024e9
  4024e7:	jb     0x402521
  4024e9:	sbb    al,0xf2
  4024eb:	in     eax,dx
  4024ec:	push   ss
  4024ed:	clc    
  4024ee:	push   ds
  4024ef:	jg     0x402482
  4024f1:	mov    ?,WORD PTR fs:[edi+ebp*1]
  4024f5:	adc    DWORD PTR [edi],0xffffff98
  4024f8:	push   cs
  4024f9:	sbb    al,0xfb
  4024fb:	pop    es
  4024fc:	add    eax,0x4db9c978
  402501:	pop    esp
  402502:	mov    DWORD PTR [ebp+0x4c],ebp
  402505:	scas   eax,DWORD PTR es:[edi]
  402506:	lds    eax,FWORD PTR [eax+0x69]
  402509:	and    DWORD PTR [edx-0x1],edx
  40250c:	push   0x24
  40250e:	mov    dh,0xc1
  402510:	ret    0xf85c
  402513:	rcl    DWORD PTR [edi],1
  402515:	jl     0x402548
  402517:	outs   dx,BYTE PTR ds:[esi]
  402518:	shr    DWORD PTR [edx],cl
  40251a:	daa    
  40251b:	add    DWORD PTR [ebx-0x34],ebx
  40251e:	je     0x402589
  402520:	pop    ebp
  402521:	cmp    ebx,DWORD PTR [esp+esi*8]
  402524:	mov    esp,0xe5cc6d57
  402529:	aaa    
  40252a:	pushf  
  40252b:	enter  0xb48f,0xfc
  40252f:	arpl   WORD PTR [edx],di
  402531:	sbb    esi,edi
  402533:	sbb    DWORD PTR [ebx-0x12],ebx
  402536:	mov    esp,0x8cd17ec0
  40253b:	cmp    BYTE PTR [ebx+esi*8-0x6d],cl
  40253f:	and    edi,ebp
  402541:	(bad)  
  402542:	retf   0xe27
  402545:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402547:	dec    ebx
  402548:	repnz xchg edx,eax
  40254a:	in     eax,dx
  40254b:	inc    ecx
  40254c:	shl    DWORD PTR [ebx-0x35df21c4],0xc3
  402553:	pop    ecx
  402554:	inc    ebp
  402555:	mov    DWORD PTR [edi-0x3a],ebp
  402558:	pop    es
  402559:	pop    ds
  40255a:	loopne 0x4024e3
  40255c:	loop   0x402552
  40255e:	mov    bl,0xf8
  402560:	outs   dx,BYTE PTR ds:[esi]
  402561:	xor    ebp,DWORD PTR ds:0x3d567ff4
  402567:	lock mov esi,DWORD PTR [esi-0x59]
  40256b:	mov    ?,WORD PTR [edx+0x4c4214ba]
  402571:	and    al,BYTE PTR [ebx]
  402573:	or     eax,0x27f8e982
  402578:	fdivr  DWORD PTR [edx-0x15]
  40257b:	cli    
  40257c:	mov    ds:0x934ce895,eax
  402581:	jl     0x402584
  402583:	ds cmc 
  402585:	adc    al,0x8d
  402587:	loopne 0x402603
  402589:	jl     0x4025a3
  40258b:	(bad)  
  40258c:	and    ecx,ecx
  40258e:	ror    DWORD PTR [ebp+0x65],0x56
  402592:	dec    BYTE PTR [ebx]
  402594:	or     dx,dx
  402597:	cmp    edx,esp
  402599:	xor    edi,DWORD PTR [ebx]
  40259b:	lahf   
  40259c:	aam    0xfe
  40259e:	jbe    0x4025c4
  4025a0:	in     eax,0x11
  4025a2:	out    0x29,eax
  4025a4:	mov    edi,0x986f5a5d
  4025a9:	in     eax,0xdf
  4025ab:	and    DWORD PTR [eax-0x15859628],esi
  4025b1:	cmp    al,0xc3
  4025b3:	or     BYTE PTR [edi+0x3b6618d8],al
  4025b9:	mov    ds:0x54fcec58,eax
  4025be:	xor    BYTE PTR ds:0x8a53f52f,ch
  4025c4:	dec    eax
  4025c5:	xor    al,0x57
  4025c7:	rcr    BYTE PTR [esp+eiz*2],1
  4025ca:	push   ss
  4025cb:	cwde   
  4025cc:	mov    ebx,0xc53159ab
  4025d1:	arpl   WORD PTR [edx+0x4c],ax
  4025d4:	cs pushf 
  4025d6:	xchg   ebx,eax
  4025d7:	jmp    0x4025fa
  4025d9:	mov    BYTE PTR [ebx+ecx*2+0x20c2fc92],0xbd
  4025e1:	outs   dx,BYTE PTR ds:[esi]
  4025e2:	push   ds
  4025e3:	in     al,0x92
  4025e5:	pop    ebx
  4025e6:	mov    edi,0x50b03b61
  4025eb:	in     al,dx
  4025ec:	cmp    eax,0x79e82a93
  4025f1:	cdq    
  4025f2:	test   DWORD PTR [ecx+eax*4+0x4c],0x4ce655e0
  4025fa:	enter  0x4263,0x32
  4025fe:	jmp    DWORD PTR [esi]
  402600:	add    BYTE PTR [edx-0x35],al
  402603:	pop    ecx
  402604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402605:	inc    eax
  402606:	and    eax,ecx
  402608:	xchg   esi,eax
  402609:	mov    edi,0x62f1a60a
  40260e:	xlat   BYTE PTR ds:[ebx]
  40260f:	adc    al,0x66
  402611:	dec    esp
  402612:	pop    ds
  402613:	shr    ebx,0xc2
  402616:	fist   DWORD PTR [edx-0x6f733a37]
  40261c:	sbb    al,0xdf
  40261e:	rcr    bl,1
  402620:	aad    0x38
  402622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402623:	and    esp,DWORD PTR [edi]
  402625:	retf   0x2815
  402628:	(bad)  
  402629:	sub    esp,DWORD PTR ds:0xb00eb4f9
  40262f:	mov    ah,0x9e
  402631:	test   eax,0x7a77df82
  402636:	mov    WORD PTR [edx-0x3],es
  402639:	fs ret 0x4a38
  40263d:	das    
  40263e:	test   al,0x2
  402640:	pushf  
  402641:	sbb    bl,bh
  402643:	mov    eax,DWORD PTR [edx-0x3a]
  402646:	xchg   ebp,eax
  402647:	push   esi
  402648:	and    BYTE PTR [eax-0x3f],0x9a
  40264c:	(bad)  
  40264d:	ret    0x4cde
  402650:	xor    dl,bl
  402652:	(bad)  
  402653:	cmp    DWORD PTR [ecx],ebp
  402655:	bound  esi,QWORD PTR [edx+0xa844fa7]
  40265b:	jle    0x4026a6
  40265d:	mov    ah,0x12
  40265f:	push   esi
  402660:	push   0x630cc565
  402665:	adc    esp,DWORD PTR [esi+eiz*2+0xadb73b0]
  40266c:	jecxz  0x40269e
  40266e:	inc    esi
  40266f:	loope  0x4026b4
  402671:	inc    eax
  402672:	arpl   WORD PTR [edi-0x2b44d449],bp
  402678:	loop   0x40260f
  40267a:	retf   
  40267b:	push   cs
  40267c:	pop    esp
  40267d:	xchg   al,bl
  40267f:	or     edx,eax
  402681:	dec    ecx
  402682:	push   ss
  402683:	or     BYTE PTR [edi+0x6a],bl
  402686:	jmp    0xb7ef:0xff66e403
  40268d:	xor    BYTE PTR [eax],cl
  40268f:	in     eax,0xd4
  402691:	cmp    DWORD PTR [eax],0xaddb9030
  402697:	repz ja 0x402656
  40269a:	dec    ebp
  40269b:	jge    0x40266d
  40269d:	(bad)  
  40269e:	(bad)  
  40269f:	inc    edx
  4026a0:	popa   
  4026a1:	enter  0x38bc,0x89
  4026a5:	fstp   DWORD PTR [ebx-0x37]
  4026a8:	jecxz  0x4026cc
  4026aa:	dec    ecx
  4026ab:	pop    esp
  4026ac:	inc    edx
  4026ad:	inc    eax
  4026ae:	xlat   BYTE PTR ds:[ebx]
  4026af:	mov    eax,ds:0x7cbc9e9e
  4026b4:	xlat   BYTE PTR ds:[ebx]
  4026b5:	ss pop eax
  4026b7:	fwait
  4026b8:	test   al,0x16
  4026ba:	test   BYTE PTR [ebx-0x29],al
  4026bd:	test   BYTE PTR [esi+eiz*2+0x56],ah
  4026c1:	pushf  
  4026c2:	or     DWORD PTR [edx-0x52],esp
  4026c5:	add    dl,bl
  4026c7:	mov    dl,0x2e
  4026c9:	je     0x40273e
  4026cb:	mov    esi,0x9fbd23e4
  4026d0:	sbb    BYTE PTR [esi+0x1759295b],0x73
  4026d7:	adc    DWORD PTR [eax+0x155d2df],ebp
  4026dd:	xchg   esi,eax
  4026de:	daa    
  4026df:	mov    ebx,0x2d621525
  4026e4:	aam    0xcd
  4026e6:	(bad)  
  4026e7:	bound  ebx,QWORD PTR [ecx-0x70e09e24]
  4026ed:	imul   edx,ecx,0xfaedcbe4
  4026f3:	sbb    dl,BYTE PTR [ecx-0x32043642]
  4026f9:	loop   0x402698
  4026fb:	aam    0x7f
  4026fd:	int    0xb
  4026ff:	mov    ch,0x12
  402701:	jmp    0x2c751b09
  402706:	mov    dl,BYTE PTR [edx-0xc6b5fbc]
  40270c:	push   cs
  40270d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40270e:	arpl   WORD PTR [ebx+0x10],cx
  402711:	stos   DWORD PTR es:[edi],eax
  402712:	outs   dx,BYTE PTR ds:[esi]
  402713:	jmp    0xa07f2659
  402718:	mov    ecx,0xdde23bf8
  40271d:	lds    ebp,FWORD PTR [eax+0x7a]
  402720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402721:	add    edx,edi
  402723:	mov    ds:0xf99777c0,al
  402728:	push   0x3c9d6484
  40272d:	pushf  
  40272e:	mov    ebx,esi
  402730:	add    ebx,esp
  402732:	clc    
  402733:	and    BYTE PTR [ebp+0x2b],bl
  402736:	aam    0x61
  402738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402739:	sbb    BYTE PTR [eax],bl
  40273b:	push   0xeae0d4b3
  402740:	sbb    eax,0xb7b95da9
  402745:	xor    eax,0x5053674b
  40274a:	jecxz  0x40279c
  40274c:	test   BYTE PTR [edx],al
  40274e:	sub    esp,DWORD PTR [edi-0x1a]
  402751:	jb     0x4026e8
  402753:	or     esi,DWORD PTR [ebp-0x72f6ff56]
  402759:	and    al,0x87
  40275b:	mov    esi,0x7a0c6e04
  402760:	xchg   esi,eax
  402761:	out    dx,al
  402762:	mov    ebx,0xc4694f04
  402767:	or     al,0xfa
  402769:	xchg   BYTE PTR [edx+0x8],ah
  40276c:	sbb    DWORD PTR [edx-0x68f7868f],0x6
  402773:	mov    ecx,0xb37800f9
  402778:	and    eax,0x7d82ed43
  40277d:	ins    DWORD PTR es:[edi],dx
  40277e:	and    edx,0xffffffc0
  402781:	data16 cli 
  402783:	icebp  
  402784:	pushf  
  402785:	ins    BYTE PTR es:[edi],dx
  402786:	hlt    
  402787:	cmp    BYTE PTR [eax+esi*4-0x7b],dl
  40278b:	scas   eax,DWORD PTR es:[edi]
  40278c:	adc    al,0xa1
  40278e:	or     dh,BYTE PTR [ebx]
  402790:	ret    0xe0e2
  402793:	dec    ebx
  402794:	xor    ah,BYTE PTR [edi+0x6ee2a003]
  40279a:	mov    esi,0x497da86a
  40279f:	pop    ebp
  4027a0:	lock call 0x22d84428
  4027a6:	ret    
  4027a7:	repz sbb DWORD PTR [ebp+0x65],edi
  4027ab:	xor    DWORD PTR [eax-0x736e20f6],0x77
  4027b2:	ss adc al,0xc9
  4027b5:	lds    ecx,FWORD PTR gs:[ecx+0x20ce0442]
  4027bc:	dec    eax
  4027bd:	test   DWORD PTR [eax-0xa29b02c],ecx
  4027c3:	lock std 
  4027c5:	push   ebx
  4027c6:	push   ebp
  4027c7:	sahf   
  4027c8:	jecxz  0x40274b
  4027ca:	jb     0x40283e
  4027cc:	lahf   
  4027cd:	call   0xe7b5:0x85cb9ed4
  4027d4:	adc    esi,eax
  4027d6:	sti    
  4027d7:	xor    al,0x80
  4027d9:	xor    ebx,esi
  4027db:	add    bl,BYTE PTR [ecx+0x7d]
  4027de:	shl    DWORD PTR [edx-0x75],cl
  4027e1:	(bad)  
  4027e2:	psrld  mm7,QWORD PTR [esi-0xd]
  4027e6:	mov    eax,ds:0xfa8fb6d0
  4027eb:	xchg   esi,eax
  4027ec:	std    
  4027ed:	shl    DWORD PTR [esi-0x69],1
  4027f0:	out    0xe1,al
  4027f2:	xchg   ecx,eax
  4027f3:	pop    ss
  4027f4:	enter  0x4754,0x81
  4027f8:	add    eax,0xe1075233
  4027fd:	mov    bl,0x3c
  4027ff:	jno    0x4027fd
  402801:	pop    edx
  402802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402803:	and    eax,DWORD PTR ds:0xb593d9eb
  402809:	jne    0x402835
  40280b:	push   ecx
  40280c:	je     0x4027d1
  40280e:	dec    ebx
  40280f:	mov    gs,WORD PTR [ebp+0x4eb0463f]
  402815:	popa   
  402816:	fwait
  402817:	push   eax
  402818:	dec    ecx
  402819:	inc    edi
  40281a:	in     eax,dx
  40281b:	push   eax
  40281c:	icebp  
  40281d:	shl    DWORD PTR [ebx+0x14f4ad29],0x88
  402824:	dec    esp
  402825:	cwde   
  402826:	mov    ebp,0xe8a64814
  40282b:	fisubr DWORD PTR [esi]
  40282d:	push   edi
  40282e:	shl    edx,1
  402830:	std    
  402831:	cmp    BYTE PTR [esi+0x33],0xb4
  402835:	(bad)  
  402836:	inc    ch
  402838:	aas    
  402839:	mov    cl,0xcd
  40283b:	jnp    0x402807
  40283d:	mov    ebp,0x4e3fbaf2
  402842:	fcmove st,st(1)
  402844:	retf   0x58cb
  402847:	ret    0xf2e6
  40284a:	and    al,0x2e
  40284c:	repz sbb eax,DWORD PTR [eiz*1-0x356f087e]
  402854:	fsub   QWORD PTR [ebp+0x22cb6388]
  40285a:	or     al,0x67
  40285c:	sub    BYTE PTR [esi-0x70],cl
  40285f:	punpcklwd mm1,mm6
  402862:	test   DWORD PTR [ecx],edx
  402864:	fwait
  402865:	or     WORD PTR [ebx+0x6],0xffd3
  40286a:	daa    
  40286b:	pop    ds
  40286c:	dec    eax
  40286d:	jmp    0x402809
  40286f:	test   DWORD PTR [edi-0x42],0x424ccc7a
  402876:	shl    DWORD PTR [ecx+0x11fe4759],cl
  40287c:	jae    0x402818
  40287e:	sbb    esi,esp
  402880:	mov    esi,0x4519312a
  402885:	lods   al,BYTE PTR ds:[si]
  402887:	jne    0x4028f3
  402889:	cmp    eax,0x6423336f
  40288e:	ins    DWORD PTR es:[edi],dx
  40288f:	cmp    al,0x3a
  402891:	aaa    
  402892:	sbb    bh,BYTE PTR [ecx*4+0x5dbf4919]
  402899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40289a:	pop    ss
  40289b:	push   cs
  40289c:	ins    BYTE PTR es:[edi],dx
  40289d:	xchg   DWORD PTR [eax-0x35],ecx
  4028a0:	cli    
  4028a1:	test   DWORD PTR [ebx+ebx*8],ebp
  4028a4:	mov    edx,0x7546f78b
  4028a9:	(bad)  
  4028aa:	mov    dh,0xd2
  4028ac:	out    0x3f,eax
  4028ae:	bound  esi,QWORD PTR [ebx]
  4028b0:	sbb    al,0x74
  4028b2:	repnz mov esp,0xa3adad44
  4028b8:	dec    edx
  4028b9:	mov    dh,0x61
  4028bb:	jecxz  0x4028d1
  4028bd:	loop   0x402885
  4028bf:	jl     0x402888
  4028c1:	jb     0x4028f5
  4028c3:	xor    BYTE PTR [edx],ah
  4028c5:	gs push esp
  4028c7:	inc    eax
  4028c8:	mov    bl,0xdc
  4028ca:	adc    eax,0x79a6dc52
  4028cf:	adc    ch,dh
  4028d1:	ins    BYTE PTR es:[edi],dx
  4028d2:	(bad)  
  4028d3:	pop    esi
  4028d4:	test   DWORD PTR [edx+0x511122b5],eax
  4028da:	ss push ecx
  4028dc:	imul   edi,DWORD PTR [eax+edi*8],0xe9935efd
  4028e3:	cmpps  xmm1,XMMWORD PTR [ebx-0x32],0x2c
  4028e8:	int    0xca
  4028ea:	jecxz  0x4028a8
  4028ec:	pop    ecx
  4028ed:	push   ds
  4028ee:	add    ch,BYTE PTR [ebp+0x5]
  4028f1:	mov    esp,ebx
  4028f3:	outs   dx,DWORD PTR ds:[esi]
  4028f4:	pop    edi
  4028f5:	loopne 0x4028cf
  4028f7:	gs sub ah,al
  4028fa:	or     edx,DWORD PTR [esi-0x31]
  4028fd:	out    dx,al
  4028fe:	push   0xffffffd3
  402900:	lahf   
  402901:	push   esi
  402902:	inc    eax
  402903:	and    DWORD PTR [ebx+0x4e485b74],0xffffff9d
  40290a:	sbb    ecx,esp
  40290c:	sub    eax,0x9924aa1f
  402911:	test   BYTE PTR [edi-0x37],cl
  402914:	jbe    0x402965
  402916:	sbb    edi,DWORD PTR [ebp-0x59967b33]
  40291c:	fdivp  st(3),st
  40291e:	aaa    
  40291f:	and    DWORD PTR [esi+0x2],ebp
  402922:	xor    eax,0x8048c8f7
  402927:	pushf  
  402928:	imul   eax,ebx,0x32f10ddc
  40292e:	fwait
  40292f:	mov    DWORD PTR [ecx+0x65],eax
  402932:	dec    esi
  402933:	es leave 
  402935:	push   ecx
  402936:	sub    eax,0x37f46d0c
  40293b:	mov    ebx,0x458e766c
  402940:	sbb    BYTE PTR cs:[ecx-0x6e63af5f],dh
  402947:	mov    esp,esp
  402949:	sar    DWORD PTR [edx],cl
  40294b:	xchg   ebp,eax
  40294c:	dec    esp
  40294d:	jno    0x40294f
  40294f:	dec    esi
  402950:	data16 scas al,BYTE PTR es:[edi]
  402952:	stos   DWORD PTR es:[edi],eax
  402953:	or     ah,ah
  402955:	xchg   esp,eax
  402956:	push   0x4cab310f
  40295b:	(bad)  
  40295c:	sbb    DWORD PTR [edi-0x38],ecx
  40295f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402960:	vcvtsd2ss xmm2,xmm4,QWORD PTR [edi+0x3c667573]
  402968:	in     eax,0x64
  40296a:	fwait
  40296b:	xlat   BYTE PTR ds:[ebx]
  40296c:	mov    dh,al
  40296e:	jp     0x402900
  402970:	xor    eax,0x6489b9a3
  402975:	push   ecx
  402976:	inc    edx
  402977:	adc    eax,0x18f8a059
  40297c:	add    DWORD PTR [esi],edx
  40297e:	stc    
  40297f:	ret    0xb9f3
  402982:	hlt    
  402983:	pop    ds
  402984:	sti    
  402985:	out    0xeb,al
  402987:	sub    ecx,DWORD PTR [ecx-0x16273c6a]
  40298d:	dec    ebp
  40298e:	xchg   ebp,eax
  40298f:	ss out 0xd0,eax
  402992:	push   0x5c
  402994:	push   esi
  402995:	mov    cl,0xd5
  402997:	pop    es
  402998:	popa   
  402999:	mov    ebp,0xfe6c1414
  40299e:	aam    0x6c
  4029a0:	or     al,0xdb
  4029a2:	jo     0x4029a1
  4029a4:	iret   
  4029a5:	mov    bh,0x1
  4029a7:	hlt    
  4029a8:	jl     0x40299e
  4029aa:	xchg   esi,eax
  4029ab:	dec    ebp
  4029ac:	lea    ecx,[esi]
  4029ae:	bnd call 0x8f2dce79
  4029b4:	sub    eax,0xbfd138bb
  4029b9:	(bad)  
  4029ba:	mov    edx,0xd1b64256
  4029bf:	push   esp
  4029c0:	push   ds
  4029c1:	xchg   DWORD PTR [eax-0xf457606],ecx
  4029c7:	imul   DWORD PTR ds:0x2f640448
  4029cd:	ja     0x402972
  4029cf:	pop    ds
  4029d0:	or     al,0xb3
  4029d2:	xor    DWORD PTR [esi-0x29],ebx
  4029d5:	pop    ebp
  4029d6:	jecxz  0x4029c6
  4029d8:	mov    ebx,0x29aa0f42
  4029dd:	sbb    edx,esi
  4029df:	mov    edi,0xabfa2c53
  4029e4:	mov    DWORD PTR [ecx+0x47f57205],esp
  4029ea:	push   cs
  4029eb:	ss pushf 
  4029ed:	bound  edx,QWORD PTR [ecx]
  4029ef:	test   eax,0xf00746f4
  4029f4:	inc    eax
  4029f5:	retf   0x58b6
  4029f8:	jne    0x4029ae
  4029fa:	stc    
  4029fb:	mov    edx,0xdfb8acbf
  402a00:	mov    DWORD PTR [ecx+0x4f],0x70bb4b52
  402a07:	cmp    eax,0x2be6ee34
  402a0c:	add    BYTE PTR [ecx],dh
  402a0e:	xor    al,0x2c
  402a10:	or     BYTE PTR [esi+0x42d7e9db],bh
  402a16:	jae    0x402a08
  402a18:	mov    dh,0x5f
  402a1a:	cli    
  402a1b:	jmp    0x2b5161fe
  402a20:	(bad)  
  402a21:	adc    eax,0xa0d612fd
  402a26:	jb     0x4029f5
  402a28:	or     edi,DWORD PTR [ecx+edi*2-0x7f]
  402a2c:	in     al,0x5a
  402a2e:	dec    esp
  402a2f:	lods   eax,DWORD PTR ds:[esi]
  402a30:	pop    ds
  402a31:	jmp    0x75a1c3c
  402a36:	xor    esp,esp
  402a38:	mov    DWORD PTR [eax],ebx
  402a3a:	ja     0x4029f2
  402a3c:	sahf   
  402a3d:	je     0x402a61
  402a3f:	sub    dl,BYTE PTR [esi+0x67fc858d]
  402a45:	jmp    0x4029d5
  402a47:	repnz das 
  402a49:	sub    DWORD PTR ds:0x9a01a57c,esi
  402a4f:	mov    ds:0x2c6ee2ff,eax
  402a54:	repz mov ebp,fs
  402a57:	pop    ecx
  402a58:	add    dl,BYTE PTR [ecx+0x2c]
  402a5b:	shr    DWORD PTR [ecx],0x80
  402a5e:	iret   
  402a5f:	mov    esi,eax
  402a61:	or     dh,BYTE PTR [ecx+edi*2+0x39cef2fe]
  402a68:	push   ss
  402a69:	(bad)  
  402a6a:	jo     0x402ab2
  402a6c:	cmp    dh,dl
  402a6e:	out    0x69,eax
  402a70:	sar    BYTE PTR ds:0xc78cdcc5,1
  402a76:	mov    esp,DWORD PTR [edi+0x362a2fc1]
  402a7c:	stos   DWORD PTR es:[edi],eax
  402a7d:	push   eax
  402a7e:	cmp    esp,edx
  402a80:	xchg   ecx,eax
  402a81:	popf   
  402a82:	jmp    0x34a02ef3
  402a87:	pushf  
  402a88:	not    bh
  402a8a:	mov    ch,0x15
  402a8c:	pusha  
  402a8d:	mov    edi,0x61d2496f
  402a92:	aas    
  402a93:	inc    ecx
  402a94:	shr    DWORD PTR [ebx-0x53],cl
  402a97:	aaa    
  402a98:	stos   DWORD PTR es:[edi],eax
  402a99:	pop    ebp
  402a9a:	(bad)  
  402a9b:	stc    
  402a9c:	pop    edx
  402a9d:	mov    BYTE PTR [ebp-0x2dc471b2],ch
  402aa3:	dec    eax
  402aa4:	adc    ah,BYTE PTR [eax-0x64]
  402aa7:	push   ecx
  402aa8:	das    
  402aa9:	in     al,0xeb
  402aab:	inc    ebx
  402aac:	and    ecx,0xfbeaa06a
  402ab2:	loopne 0x402ace
  402ab4:	ins    DWORD PTR es:[edi],dx
  402ab5:	mov    al,ds:0xddcc9f4b
  402aba:	(bad)  
  402abc:	ins    DWORD PTR es:[edi],dx
  402abd:	mov    edi,0x722938de
  402ac2:	ds cs xchg ecx,eax
  402ac5:	into   
  402ac6:	or     BYTE PTR [esp+0x41f6ade8],ah
  402acd:	call   0xe498b302
  402ad2:	test   BYTE PTR [edi+0x3f],dl
  402ad5:	dec    ebx
  402ad6:	push   ecx
  402ad7:	fisub  DWORD PTR [edi]
  402ad9:	jp     0x402a67
  402adb:	stos   BYTE PTR es:[edi],al
  402adc:	push   ss
  402add:	cli    
  402ade:	popa   
  402adf:	cld    
  402ae0:	aaa    
  402ae1:	xor    DWORD PTR [edx],ebp
  402ae3:	mov    ds:0xa628716b,al
  402ae8:	mov    edi,0xd331b08
  402aed:	mov    ?,WORD PTR [ecx]
  402aef:	ja     0x402b2f
  402af1:	xlat   BYTE PTR ds:[ebx]
  402af2:	xchg   esi,eax
  402af3:	mov    al,ds:0x92163e29
  402af8:	ss (bad) 
  402afa:	and    al,0xb1
  402afc:	iret   
  402afd:	jmp    0xbf247981
  402b02:	and    bl,dl
  402b04:	jmp    0x402ad1
  402b06:	push   edx
  402b07:	push   ebx
  402b08:	(bad)  [ebx]
  402b0a:	test   ebx,ebp
  402b0c:	jp     0x402ad0
  402b0e:	lahf   
  402b0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b10:	fldenv [ebp-0xe7daa40]
  402b16:	xor    al,BYTE PTR ds:[edi]
  402b19:	lahf   
  402b1a:	sub    dh,cl
  402b1c:	jmp    0x6cc88707
  402b21:	or     eax,0x72ddf192
  402b26:	neg    BYTE PTR [edx-0x13]
  402b29:	sub    BYTE PTR [edi],al
  402b2b:	adc    eax,0xa88bd9ef
  402b30:	and    eax,0x9d1bef0a
  402b35:	ret    0x9536
  402b38:	jns    0x402b9c
  402b3a:	js     0x402b61
  402b3c:	pushf  
  402b3d:	inc    ebp
  402b3e:	mov    DWORD PTR [esi+0x5d5f1373],esi
  402b44:	add    eax,DWORD PTR [ecx+0x78069a1e]
  402b4a:	mov    ebx,0x2878f28d
  402b4f:	jl     0x402ada
  402b51:	dec    edx
  402b52:	call   0x3ed8afc7
  402b57:	xor    BYTE PTR [esi],0x55
  402b5a:	bswap  edi
  402b5c:	ja     0x402b12
  402b5e:	jge    0x402b54
  402b60:	int3   
  402b61:	sub    al,0x18
  402b63:	inc    edx
  402b64:	mov    es,WORD PTR [eax]
  402b66:	pop    eax
  402b67:	mov    BYTE PTR [edx-0x74],bl
  402b6a:	jo     0x402b9e
  402b6c:	sbb    BYTE PTR [esi+0x3884a212],0xb6
  402b73:	pusha  
  402b74:	test   BYTE PTR [edx+0x4fd9b833],dl
  402b7a:	daa    
  402b7b:	fwait
  402b7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b7d:	pop    es
  402b7e:	mov    dh,0x42
  402b80:	dec    esi
  402b81:	and    bl,BYTE PTR [ebp+0x46]
  402b84:	push   0x63
  402b86:	or     BYTE PTR [edx-0xe2f78bc],bh
  402b8c:	fxrstor [edx-0x40556b9]
  402b93:	retf   
  402b94:	test   DWORD PTR [eax-0x482b355],edi
  402b9a:	sbb    DWORD PTR [eax-0x5382b2a0],edi
  402ba0:	mov    ch,0x41
  402ba2:	mov    ebx,0x5b6e56b6
  402ba7:	aas    
  402ba8:	dec    ebx
  402ba9:	retf   0xf03e
  402bac:	sub    esi,ebp
  402bae:	cmp    dh,BYTE PTR [edx-0x46]
  402bb1:	sbb    al,0x22
  402bb3:	or     eax,0x3331ff2e
  402bb8:	jl     0x402b8b
  402bba:	jecxz  0x402bc4
  402bbc:	xchg   esp,eax
  402bbd:	cmc    
  402bbe:	sbb    ecx,esp
  402bc0:	dec    esi
  402bc1:	pop    es
  402bc2:	add    ah,BYTE PTR [ecx+0x18]
  402bc5:	sbb    BYTE PTR gs:[ebp-0x5e],bl
  402bc9:	xor    DWORD PTR ds:0xd79affc2,0x54
  402bd0:	and    ecx,DWORD PTR [edi]
  402bd2:	inc    edi
  402bd3:	out    dx,al
  402bd4:	or     BYTE PTR [eax],cl
  402bd6:	sub    eax,0xd9d8fa9
  402bdb:	dec    ebp
  402bdc:	jle    0x402ba4
  402bde:	sub    al,0x25
  402be0:	push   ss
  402be1:	fdivr  st(0),st
  402be3:	fwait
  402be4:	pop    edi
  402be5:	adc    eax,DWORD PTR [edi-0x4d]
  402be8:	push   ebp
  402be9:	jnp    0x402c5a
  402beb:	lahf   
  402bec:	mov    DWORD PTR [ebp+eax*8-0x446e8064],edi
  402bf3:	sbb    eax,0xb395e12d
  402bf8:	jecxz  0x402beb
  402bfa:	sahf   
  402bfb:	cdq    
  402bfc:	xlat   BYTE PTR ds:[ebx]
  402bfd:	shr    BYTE PTR [ecx-0x5982a019],0x7
  402c04:	xchg   ebp,ebx
  402c06:	bound  ebx,QWORD PTR [ebp+0x6f]
  402c09:	sbb    esp,DWORD PTR [esi+0x68773d0f]
  402c0f:	enter  0x5c8a,0x7f
  402c13:	aad    0xe7
  402c15:	fsub   st(4),st
  402c17:	cmp    dl,BYTE PTR [esi-0x27]
  402c1a:	jne    0x402c1a
  402c1c:	lea    ebp,[ecx]
  402c1e:	ja     0x402c37
  402c20:	push   0x995e996e
  402c25:	(bad)  
  402c26:	jmp    0xbcb5:0x5f845077
  402c2d:	xor    al,0xc9
  402c2f:	sub    eax,0x2e8dad62
  402c34:	jno    0x402c7e
  402c36:	jno    0x402be8
  402c38:	cdq    
  402c39:	loopne 0x402c37
  402c3b:	mov    bh,0x37
  402c3d:	add    edi,DWORD PTR [ebx]
  402c3f:	cdq    
  402c40:	add    esp,DWORD PTR [ebx]
  402c42:	int3   
  402c43:	std    
  402c44:	and    DWORD PTR [ebx-0x72],esi
  402c47:	mov    es,WORD PTR [eax+eiz*2]
  402c4a:	jne    0x402c25
  402c4c:	into   
  402c4d:	int3   
  402c4e:	cmp    bl,0x1a
  402c51:	getsec 
  402c53:	jb     0x402c1c
  402c55:	xchg   esi,eax
  402c56:	pop    esp
  402c57:	je     0x402c0e
  402c59:	loop   0x402c38
  402c5b:	mov    esi,0x2c9234e6
  402c60:	lea    eax,[edx+0xe95c58c]
  402c66:	pop    ebx
  402c67:	pop    ds
  402c68:	mov    eax,ds:0x1893155a
  402c6d:	mov    ds:0xd68d1eb8,eax
  402c72:	dec    ebx
  402c73:	mov    edi,0x62c821da
  402c78:	and    edx,DWORD PTR [ebp-0x38]
  402c7b:	pop    ebx
  402c7c:	cli    
  402c7d:	(bad)  
  402c7e:	call   0xa27de078
  402c83:	add    esi,DWORD PTR [eax+0x60810e4f]
  402c89:	and    DWORD PTR [eax],edx
  402c8b:	sbb    DWORD PTR [edi+0x7c],ebp
  402c8e:	(bad)  
  402c90:	or     DWORD PTR [ecx],esi
  402c92:	cmp    al,0xdd
  402c94:	adc    BYTE PTR [esi+0xc],dl
  402c97:	push   0x9
  402c99:	aad    0x98
  402c9b:	and    DWORD PTR [eax-0x3112a68f],ecx
  402ca1:	inc    ebp
  402ca2:	dec    eax
  402ca3:	or     ecx,0xffffffd3
  402ca6:	aas    
  402ca7:	shl    DWORD PTR [esi-0x6e72806d],cl
  402cad:	xor    DWORD PTR [ebx+0x41],ebp
  402cb0:	pushf  
  402cb1:	xor    eax,0xeb493757
  402cb6:	mov    ebp,0x56e77ebd
  402cbb:	jno    0x402cde
  402cbd:	cmp    eax,0x7b872627
  402cc2:	rcr    DWORD PTR [ecx-0x43],cl
  402cc5:	punpcklwd mm6,DWORD PTR [edx+0x71]
  402cc9:	dec    eax
  402cca:	icebp  
  402ccb:	pop    ss
  402ccc:	xchg   ecx,eax
  402ccd:	sub    eax,0xdb7dca29
  402cd2:	or     al,BYTE PTR [edi-0x4d8a06c1]
  402cd8:	inc    eax
  402cd9:	pusha  
  402cda:	inc    edi
  402cdb:	mov    edi,0x82ed6510
  402ce0:	mov    ecx,0x55cd0117
  402ce5:	and    BYTE PTR [ecx-0x3f],cl
  402ce8:	inc    edx
  402ce9:	jl     0x402cf4
  402ceb:	xchg   esi,eax
  402cec:	jae    0x402d0c
  402cee:	jg     0x402c79
  402cf0:	addr16 xchg ebp,ecx
  402cf3:	inc    ebp
  402cf4:	mov    ebx,DWORD PTR ds:0xec9dd87e
  402cfa:	scas   eax,DWORD PTR es:[edi]
  402cfb:	int3   
  402cfc:	out    0x7d,eax
  402cfe:	sub    al,0xe1
  402d00:	ds aad 0xe5
  402d03:	or     BYTE PTR [ebx],0xab
  402d06:	dec    esp
  402d07:	jo     0x402d1b
  402d09:	jbe    0x402cf8
  402d0b:	and    al,0x12
  402d0d:	popf   
  402d0e:	lea    esi,[edi-0x77]
  402d11:	adc    eax,0xedc6004a
  402d16:	and    eax,0x638265ac
  402d1b:	pop    edx
  402d1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d1d:	cld    
  402d1e:	mov    ah,0x9d
  402d20:	sbb    ebp,ecx
  402d22:	ss sbb cl,bh
  402d25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d26:	push   ss
  402d27:	in     al,0x4b
  402d29:	ror    DWORD PTR [ebx+edx*4],cl
  402d2c:	pop    ds
  402d2d:	dec    ebx
  402d2e:	xor    al,0xc1
  402d30:	ret    0x5119
  402d33:	lea    edx,[ebp-0x63]
  402d36:	jne    0x402d46
  402d38:	cmp    DWORD PTR [edx],ecx
  402d3a:	inc    ecx
  402d3b:	test   DWORD PTR [edx-0x7e8e9937],0xf4aa9c7f
  402d45:	dec    ebx
  402d46:	xchg   ebx,eax
  402d47:	in     eax,0xac
  402d49:	xor    DWORD PTR ds:0x1a5d88cd,edi
  402d4f:	xchg   esi,eax
  402d50:	pop    ss
  402d51:	cmp    dl,al
  402d53:	pop    es
  402d54:	xchg   ecx,eax
  402d55:	dec    esp
  402d56:	pop    ds
  402d57:	mov    bh,0x9d
  402d59:	mov    eax,ds:0xf625bcdf
  402d5e:	dec    edx
  402d5f:	leave  
  402d60:	push   0xffffffd3
  402d62:	ins    BYTE PTR es:[edi],dx
  402d63:	dec    ecx
  402d64:	add    DWORD PTR [ecx+0x6e3c8679],ebx
  402d6a:	or     ebx,ebp
  402d6c:	cmp    dh,BYTE PTR [ecx+eax*4-0x63f9cdbb]
  402d73:	mov    ds:0x6efd35b6,al
  402d78:	fimul  WORD PTR [ebp+0x49a974b6]
  402d7e:	xor    al,cl
  402d80:	jecxz  0x402d7f
  402d82:	mov    dh,0xe9
  402d84:	int3   
  402d85:	add    BYTE PTR [ecx],0x65
  402d88:	cmp    eax,0x5b73ca9c
  402d8d:	cdq    
  402d8e:	add    BYTE PTR [ecx+0x78],ch
  402d91:	loope  0x402d4e
  402d93:	pop    ebp
  402d94:	inc    ebp
  402d95:	adc    BYTE PTR [ebp+0x5fe987db],dh
  402d9b:	adc    al,0xec
  402d9d:	adc    bl,cl
  402d9f:	ss retf 0x41ea
  402da3:	cmp    ebx,DWORD PTR [edx-0x2590057b]
  402da9:	(bad)  [esi-0x2e]
  402dac:	loop   0x402df7
  402dae:	cli    
  402daf:	mov    al,0xec
  402db1:	mov    ds:0xdd192488,eax
  402db6:	cld    
  402db7:	arpl   dx,dx
  402db9:	inc    esi
  402dba:	pushf  
  402dbb:	jbe    0x402e32
  402dbd:	icebp  
  402dbe:	aad    0xd8
  402dc0:	push   esi
  402dc1:	lods   eax,DWORD PTR ds:[esi]
  402dc3:	icebp  
  402dc4:	pop    edi
  402dc5:	xchg   BYTE PTR [ebx],ch
  402dc7:	stos   BYTE PTR es:[edi],al
  402dc8:	js     0x402d8e
  402dca:	pusha  
  402dcb:	fld    QWORD PTR [edi-0x60]
  402dce:	ss das 
  402dd0:	out    0xd2,eax
  402dd2:	mov    bl,BYTE PTR [ebp+0x43]
  402dd5:	shr    bh,1
  402dd7:	loope  0x402def
  402dd9:	(bad)  
  402ddb:	stc    
  402ddc:	mov    edi,0xd0b3c65c
  402de1:	fcomp  DWORD PTR [esp+edi*4-0x70d306ce]
  402de8:	inc    ecx
  402de9:	pop    ds
  402dea:	retf   
  402deb:	test   eax,0x3cdd88cb
  402df0:	add    BYTE PTR [edi+0x2cc443ca],al
  402df6:	imul   edx,DWORD PTR [ebp-0x55d9eaec],0xffffffb9
  402dfd:	mov    edx,0x7b5ca39d
  402e02:	loop   0x402ded
  402e04:	ret    0x3d07
  402e07:	popa   
  402e08:	into   
  402e09:	sbb    ebp,DWORD PTR [ecx]
  402e0b:	sub    al,0x7
  402e0d:	ja     0x402d9d
  402e0f:	fwait
  402e10:	adc    al,BYTE PTR [edi]
  402e12:	jecxz  0x402e3d
  402e14:	pop    ds
  402e15:	jbe    0x402de8
  402e17:	popf   
  402e18:	loop   0x402e8b
  402e1a:	and    DWORD PTR [ecx],0x7b
  402e1d:	xchg   BYTE PTR [edi+ebx*8],ch
  402e20:	mov    ebp,0xa7ac3e35
  402e25:	add    cl,BYTE PTR [esp+esi*8]
  402e28:	mov    esp,0x9eaffb8f
  402e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e2e:	dec    edx
  402e2f:	inc    ebp
  402e30:	fnstsw WORD PTR [ebp+0x49]
  402e33:	xchg   ecx,eax
  402e34:	repnz test DWORD PTR [edx],edx
  402e37:	out    dx,eax
  402e38:	jecxz  0x402e41
  402e3a:	aaa    
  402e3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e3c:	mov    ah,0x3f
  402e3e:	test   al,0x35
  402e40:	dec    edx
  402e41:	jnp    0x402e6d
  402e43:	cld    
  402e44:	lds    edi,FWORD PTR [ecx]
  402e46:	inc    ebp
  402e47:	jae    0x402e51
  402e49:	hlt    
  402e4a:	into   
  402e4b:	ror    BYTE PTR [edi],1
  402e4d:	xchg   ecx,eax
  402e4e:	jmp    0x402ecc
  402e50:	pusha  
  402e51:	add    al,BYTE PTR [edi+0xda0f4f4]
  402e57:	mov    ah,BYTE PTR [esp+ecx*2+0x4a]
  402e5b:	push   ss
  402e5c:	scas   eax,DWORD PTR es:[edi]
  402e5d:	xchg   ebx,eax
  402e5e:	adc    DWORD PTR [ebx-0x7e],0xaa25b03
  402e65:	mov    eax,ds:0x4a55f39f
  402e6a:	push   es
  402e6b:	imul   esp,DWORD PTR [eax-0x1b],0xffffffa3
  402e6f:	mov    eax,0x811fc155
  402e74:	fist   DWORD PTR [ebx]
  402e76:	pop    ecx
  402e77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e78:	dec    ecx
  402e79:	mov    eax,DWORD PTR [esi+0x26897e74]
  402e7f:	stc    
  402e80:	sbb    eax,0x20247978
  402e85:	and    al,0xcd
  402e87:	stos   DWORD PTR es:[edi],eax
  402e88:	adc    esp,DWORD PTR [ebp-0x1b4da4d9]
  402e8e:	fldenv [ebp+0x31925717]
  402e94:	into   
  402e95:	lahf   
  402e96:	lahf   
  402e97:	call   0x3ae1e34e
  402e9c:	and    DWORD PTR [esi+0x344a032d],0xffffffbc
  402ea3:	mov    eax,0xec6d4e4c
  402ea8:	fistp  WORD PTR [ebp-0x66]
  402eab:	test   al,0x7e
  402ead:	clc    
  402eae:	icebp  
  402eaf:	lods   al,BYTE PTR ds:[esi]
  402eb0:	inc    ebp
  402eb1:	aam    0x6e
  402eb3:	xchg   BYTE PTR [eax],al
  402eb5:	add    al,0xb8
  402eb7:	lods   eax,DWORD PTR ds:[esi]
  402eb8:	pop    eax
  402eb9:	push   esp
  402eba:	sbb    ebp,DWORD PTR [ebp+edi*8-0x3a]
  402ebe:	in     eax,0x5f
  402ec0:	add    BYTE PTR [ebx-0x9],bh
  402ec3:	xchg   BYTE PTR [edx+0x2d903df],al
  402ec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402eca:	mov    ebx,DWORD PTR [esp+edx*2+0x5b]
  402ece:	dec    ebp
  402ecf:	jg     0x402f0e
  402ed1:	adc    al,BYTE PTR [ecx]
  402ed3:	push   esi
  402ed4:	leave  
  402ed5:	mov    edx,DWORD PTR [esi-0x72]
  402ed8:	pop    es
  402ed9:	nop
  402eda:	retf   
  402edb:	fs push esp
  402edd:	adc    DWORD PTR [eax+ecx*4+0x15],esi
  402ee1:	add    bh,al
  402ee3:	out    dx,al
  402ee4:	shl    BYTE PTR [esi+edx*4],1
  402ee7:	scas   eax,DWORD PTR es:[edi]
  402ee8:	adc    al,0x4
  402eea:	push   ds
  402eeb:	push   ecx
  402eec:	popf   
  402eed:	fdivr  st,st(4)
  402eef:	loope  0x402edf
  402ef1:	mov    ah,0x91
  402ef3:	sbb    DWORD PTR [eax-0x41fbe849],0xde794b06
  402efd:	sbb    ebp,DWORD PTR [ecx]
  402eff:	ds cmc 
  402f01:	and    dl,ah
  402f03:	repnz aad 0x63
  402f06:	sbb    ecx,eax
  402f08:	lods   eax,DWORD PTR ds:[esi]
  402f09:	test   eax,0x9d3fed2
  402f0e:	mov    esp,0x6e627b22
  402f13:	inc    ebp
  402f14:	stc    
  402f15:	push   esp
  402f16:	and    ebp,eax
  402f18:	pop    edi
  402f19:	shl    DWORD PTR [edx+0x77],cl
  402f1c:	pop    edx
  402f1d:	clc    
  402f1e:	pop    ds
  402f1f:	xlat   BYTE PTR ds:[ebx]
  402f20:	sub    eax,0xb528713a
  402f25:	in     al,0x8d
  402f27:	or     al,0x93
  402f29:	shl    DWORD PTR [esi],cl
  402f2b:	add    edi,DWORD PTR [edx]
  402f2d:	jmp    0x402f14
  402f2f:	mov    dh,0x7b
  402f31:	mov    ch,0xdf
  402f33:	mov    ebp,0xc9eafdc9
  402f38:	cmc    
  402f39:	jbe    0x402f39
  402f3b:	sbb    esi,ebp
  402f3d:	outs   dx,BYTE PTR ds:[esi]
  402f3e:	pop    ds
  402f3f:	sbb    eax,0x3a75011b
  402f44:	sbb    al,0xe4
  402f46:	jno    0x402f79
  402f48:	xchg   esp,eax
  402f49:	cmp    dl,dh
  402f4b:	jno    0x402fa3
  402f4d:	int    0xe2
  402f4f:	ja     0x402efe
  402f51:	jno    0x402f86
  402f53:	js     0x402ee5
  402f55:	stos   DWORD PTR es:[edi],eax
  402f56:	jmp    0x52178540
  402f5b:	jmp    0x402f40
  402f5d:	data16 out 0x66,al
  402f60:	aad    0x5d
  402f62:	pop    ebp
  402f63:	pop    ebp
  402f64:	add    bh,ah
  402f66:	mov    edi,0x9e68c79c
  402f6b:	inc    edi
  402f6c:	lock pop edx
  402f6e:	mov    ah,BYTE PTR [edx-0x7e]
  402f71:	in     eax,dx
  402f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f74:	push   ebp
  402f75:	xchg   ebp,eax
  402f76:	ss retf 
  402f78:	in     al,0x95
  402f7a:	dec    edi
  402f7b:	dec    ebx
  402f7c:	jbe    0x402f45
  402f7e:	dec    ecx
  402f7f:	push   0x32
  402f81:	pushf  
  402f82:	xchg   ecx,esp
  402f84:	jp     0x402fee
  402f86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f87:	out    0x6e,eax
  402f89:	je     0x402f7d
  402f8b:	shl    BYTE PTR [ebx-0x78ca1c6d],cl
  402f91:	outs   dx,DWORD PTR ds:[esi]
  402f92:	cs inc edx
  402f94:	lds    esp,FWORD PTR [ecx+0x79]
  402f97:	leave  
  402f98:	pop    ecx
  402f99:	push   es
  402f9a:	fisubr WORD PTR [ebp+0x70]
  402f9d:	mov    ch,BYTE PTR [edx]
  402f9f:	cmp    ebx,esp
  402fa1:	or     eax,DWORD PTR [ecx+ebp*4+0x521f183b]
  402fa8:	test   al,0x71
  402faa:	xchg   esi,eax
  402fab:	push   esp
  402fac:	push   0xffffffcf
  402fae:	icebp  
  402faf:	les    eax,FWORD PTR [ebx+0x79a989cd]
  402fb5:	dec    esi
  402fb6:	mov    ch,al
  402fb8:	daa    
  402fb9:	xchg   edi,eax
  402fba:	call   0xe425:0xfea72459
  402fc1:	imul   edx,DWORD PTR [ecx],0xffffffad
  402fc4:	aas    
  402fc5:	or     ch,bl
  402fc7:	mov    ds:0xe0667538,al
  402fcc:	hlt    
  402fcd:	add    DWORD PTR ds:0xe5f4759f,esi
  402fd3:	imul   eax,DWORD PTR ds:0x798cba32,0xb7102ca9
  402fdd:	and    eax,0xa5c8b43
  402fe2:	dec    ecx
  402fe3:	shl    BYTE PTR [eax+ebx*8+0x27],1
  402fe7:	push   esi
  402fe8:	pop    es
  402fe9:	leave  
  402fea:	xchg   edi,eax
  402feb:	dec    edi
  402fec:	addr16 xchg edx,eax
  402fee:	pop    eax
  402fef:	xor    eax,0xb3da7952
  402ff4:	add    ah,BYTE PTR [esi-0x7e]
  402ff7:	out    dx,eax
  402ff8:	mov    bh,ah
  402ffa:	jo     0x402fc2
  402ffc:	iret   
  402ffd:	push   DWORD PTR [esi]
  402fff:	scas   eax,DWORD PTR es:[edi]
  403000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403001:	mov    ecx,DWORD PTR [edx+0xe74b8dc]
  403007:	cmp    al,BYTE PTR [ebx-0x60dc4d66]
  40300d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40300e:	dec    edi
  40300f:	push   ss
  403010:	jge    0x402fd0
  403012:	cli    
  403013:	mov    bl,0x69
  403015:	sub    ch,BYTE PTR [edi+0x22518369]
  40301b:	out    dx,al
  40301c:	sub    ch,BYTE PTR [ebp+0xb]
  40301f:	jmp    0x9177:0x80c4c465
  403026:	mov    bh,0x6
  403028:	mov    ch,0x65
  40302a:	pop    si
  40302c:	adc    BYTE PTR [eax-0x21],bl
  40302f:	xchg   edx,eax
  403030:	cld    
  403031:	(bad)  
  403032:	push   esi
  403033:	rcl    BYTE PTR [esi],0x9c
  403036:	push   ss
  403037:	imul   ebp,DWORD PTR ds:0x3bc3c47f,0x501e09b5
  403041:	adc    ebp,DWORD PTR [edi]
  403043:	cmp    eax,0x3479d0d
  403048:	push   edi
  403049:	fwait
  40304a:	out    dx,al
  40304b:	test   DWORD PTR [ecx-0x1e],esp
  40304e:	or     BYTE PTR [esi],ah
  403050:	mov    ch,0x44
  403052:	jecxz  0x403079
  403054:	fadd   QWORD PTR [edx+0x2e]
  403057:	and    ecx,DWORD PTR [edi+0x4]
  40305a:	mov    al,0xd7
  40305c:	jno    0x40304c
  40305e:	sbb    BYTE PTR [ebx+0x580bbad8],dl
  403064:	fdiv   DWORD PTR ds:0x9d19ec5a
  40306a:	fsubp  st(1),st
  40306c:	jne    0x4030ce
  40306e:	jmp    0x40308c
  403070:	fisttp WORD PTR [ebp+esi*4-0x4]
  403074:	enter  0x6973,0xcd
  403078:	cmp    ah,BYTE PTR [ebx-0x7fa6fe22]
  40307e:	gs xchg edx,eax
  403080:	aam    0xf4
  403082:	adc    ebx,edx
  403084:	pop    ds
  403085:	and    DWORD PTR [edi+0x2b244bbb],edi
  40308b:	mov    al,ds:0xe1fa95a1
  403090:	dec    esi
  403091:	ss aas 
  403093:	test   al,0x7f
  403095:	pop    ebx
  403096:	push   ebx
  403097:	push   esi
  403098:	add    eax,0xd3fa0d94
  40309d:	ins    BYTE PTR es:[edi],dx
  40309e:	dec    esp
  40309f:	out    0x8,al
  4030a1:	adc    ch,dh
  4030a3:	add    bl,ah
  4030a5:	inc    eax
  4030a6:	mov    ah,0xb8
  4030a8:	fwait
  4030a9:	mov    bh,0xf0
  4030ab:	fs retf 
  4030ad:	ins    DWORD PTR es:[edi],dx
  4030ae:	aas    
  4030af:	pop    ss
  4030b0:	pop    edx
  4030b1:	ret    0x3dae
  4030b4:	(bad)  
  4030b5:	call   0xb3e00ec6
  4030ba:	adc    DWORD PTR [edi-0x78],ebx
  4030bd:	sti    
  4030be:	cmp    eax,0x726142dc
  4030c3:	push   es
  4030c4:	data16 add BYTE PTR [ecx-0x53d18003],ah
  4030cb:	ds xchg esp,eax
  4030cd:	cdq    
  4030ce:	imul   ebp,edx,0xbafddce3
  4030d4:	cmc    
  4030d5:	pop    esp
  4030d6:	outs   dx,DWORD PTR ds:[esi]
  4030d7:	out    dx,eax
  4030d8:	pushf  
  4030d9:	push   es
  4030da:	and    al,0x4
  4030dc:	jmp    0xaaa0:0xdf7e5242
  4030e3:	ret    0x8e5e
  4030e6:	enter  0xf1b8,0x41
  4030ea:	loope  0x4030d5
  4030ec:	es scas eax,DWORD PTR es:[edi]
  4030ee:	mov    ebx,esp
  4030f0:	dec    eax
  4030f1:	adc    eax,0x6a22c833
  4030f6:	and    al,0xfa
  4030f8:	xchg   ebx,eax
  4030f9:	mov    ebx,0x41eb40d2
  4030fe:	and    eax,0x3ea991fa
  403103:	ins    BYTE PTR es:[edi],dx
  403104:	push   edi
  403105:	into   
  403106:	(bad)  
  403107:	mov    BYTE PTR [ebx+0x26],ah
  40310a:	xor    cl,al
  40310c:	jno    0x403152
  40310e:	adc    sp,ax
  403111:	cmp    al,0x4e
  403113:	iret   
  403114:	inc    BYTE PTR [si]
  403117:	mov    eax,ds:0xc629ba79
  40311c:	add    BYTE PTR [eax],dh
  40311e:	push   ss
  40311f:	lods   eax,DWORD PTR ds:[esi]
  403120:	icebp  
  403121:	jmp    0x403119
  403123:	xor    ecx,DWORD PTR [esi-0x3de282b5]
  403129:	mov    ebp,0xb1452d4f
  40312e:	out    0xad,eax
  403130:	xor    dl,BYTE PTR [edi+0x2c5c8615]
  403136:	aad    0x7c
  403138:	adc    eax,0xd31b591f
  40313d:	mov    ecx,0x9ad2a4cb
  403142:	(bad)  
  403143:	shl    edx,cl
  403145:	add    DWORD PTR [ebp+0x2a51963],ebp
  40314b:	in     al,0x5b
  40314d:	mov    al,ds:0xca1cb6a2
  403152:	div    ch
  403154:	add    al,0x1b
  403156:	or     DWORD PTR [eax+0x30],ebp
  403159:	xchg   esp,eax
  40315a:	mov    ebx,0x73d25bf6
  40315f:	icebp  
  403160:	shl    BYTE PTR [esp+ebx*4+0x65],1
  403164:	ja     0x403135
  403166:	adc    al,0xe9
  403168:	rol    esp,1
  40316a:	test   eax,0x4ab606ac
  40316f:	mov    ebx,0x4a2dadb
  403174:	push   edx
  403175:	xlat   BYTE PTR ds:[ebx]
  403176:	shl    esi,1
  403178:	in     al,0x86
  40317a:	(bad)  [esi+0x77e2ba46]
  403180:	mov    ecx,0xc9c59ced
  403185:	bound  esp,QWORD PTR [ebp+0x35]
  403188:	push   edx
  403189:	iret   
  40318a:	stc    
  40318b:	jmp    0x40315e
  40318d:	mov    dl,BYTE PTR [ebp-0x7d]
  403190:	xchg   esp,eax
  403191:	pusha  
  403192:	dec    ecx
  403193:	and    ebx,esi
  403195:	stos   DWORD PTR es:[edi],eax
  403196:	int    0x8e
  403198:	fisub  WORD PTR [edi+edi*8]
  40319b:	pop    eax
  40319c:	scas   al,BYTE PTR es:[edi]
  40319d:	sbb    al,0xf2
  40319f:	bound  edi,QWORD PTR [ebx]
  4031a1:	xchg   edx,eax
  4031a2:	scas   al,BYTE PTR es:[edi]
  4031a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031a4:	mov    ?,WORD PTR [edi+0x3153a593]
  4031aa:	mov    edi,0x8aa0dbb7
  4031af:	(bad)  
  4031b0:	sbb    eax,0xf37ebfc2
  4031b5:	mov    bh,BYTE PTR ss:[edi+0x3c]
  4031b9:	pushf  
  4031ba:	dec    ebx
  4031bb:	or     eax,0x2e7fa371
  4031c0:	xor    eax,0xfc6e4154
  4031c5:	out    0x6e,eax
  4031c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031c8:	aas    
  4031c9:	jae    0x403174
  4031cb:	mov    es,WORD PTR [ecx-0x7f]
  4031ce:	call   0xb316e545
  4031d3:	stos   BYTE PTR es:[edi],al
  4031d4:	xchg   esi,eax
  4031d5:	sub    cl,al
  4031d7:	test   eax,0x936c4f22
  4031dc:	lea    ebx,[ecx+0x4]
  4031df:	je     0x4031c5
  4031e1:	cmp    al,0xeb
  4031e3:	outs   dx,DWORD PTR ds:[si]
  4031e5:	int    0x52
  4031e7:	rol    DWORD PTR [edi+0x183a061c],cl
  4031ed:	icebp  
  4031ee:	popf   
  4031ef:	loopne 0x40318f
  4031f1:	call   0x327dab43
  4031f6:	ret    
  4031f7:	bound  ebx,QWORD PTR [eax-0x42c0c7c5]
  4031fd:	(bad)  
  4031ff:	sub    cl,BYTE PTR [edx+eiz*8-0x34932343]
  403206:	cdq    
  403207:	jge    0x40324a
  403209:	pop    edi
  40320a:	push   0x1b3bdeb3
  40320f:	mov    dl,0x1
  403211:	xchg   BYTE PTR [edx-0x1b],dl
  403214:	cmp    cl,ch
  403216:	add    edi,DWORD PTR [edi-0x2f]
  403219:	fnop   
  40321b:	add    esp,DWORD PTR [ebx-0x61]
  40321e:	lods   al,BYTE PTR ds:[esi]
  40321f:	popa   
  403220:	sti    
  403221:	pop    ebp
  403222:	pop    ebx
  403223:	cmp    bh,cl
  403225:	inc    ebp
  403226:	inc    esp
  403227:	push   ss
  403228:	pushf  
  403229:	loopne 0x4031db
  40322b:	loop   0x403209
  40322d:	outs   dx,DWORD PTR ds:[esi]
  40322e:	sub    al,0x51
  403230:	(bad)  
  403231:	push   0x12
  403233:	push   ds
  403234:	(bad)  
  403235:	jmp    0x1bf4:0x4baca981
  40323c:	pusha  
  40323d:	dec    esi
  40323e:	push   edx
  40323f:	and    al,0xc0
  403241:	popf   
  403242:	cmp    BYTE PTR [ebx],al
  403244:	sbb    BYTE PTR [eax-0x58e734b],ah
  40324a:	jnp    0x40322b
  40324c:	jp     0x403210
  40324e:	sbb    BYTE PTR [esi],dl
  403250:	inc    eax
  403251:	sub    al,0xde
  403253:	pushf  
  403254:	in     eax,0x3d
  403256:	retf   
  403257:	out    0xdc,al
  403259:	mov    cl,BYTE PTR [edi+edi*1-0x3]
  40325d:	jg     0x403258
  40325f:	mov    eax,ds:0x14dcfe8f
  403264:	pop    ecx
  403265:	lock es mov cl,0x2
  403269:	mov    edi,0xd04f08a2
  40326e:	call   0xb72c8a0d
  403273:	fbld   TBYTE PTR [esi+0x2e59d484]
  403279:	mov    ecx,0x27c2f360
  40327e:	fcom   st(1)
  403280:	test   ah,cl
  403282:	xor    dl,BYTE PTR [esi+0x3640823d]
  403288:	retf   
  403289:	cmp    ebp,ebp
  40328b:	jnp    0x4032af
  40328d:	sbb    BYTE PTR [ebx+0x66d32746],ah
  403293:	(bad)  
  403294:	adc    DWORD PTR es:[edx-0x7b],ebp
  403298:	cld    
  403299:	mov    bl,ch
  40329b:	jge    0x40326e
  40329d:	sub    ch,dh
  40329f:	jne    0x403319
  4032a1:	cmp    bl,ch
  4032a3:	and    ebp,ebp
  4032a5:	(bad)  
  4032a6:	(bad)  
  4032a7:	out    dx,al
  4032a8:	adc    cl,BYTE PTR [edi+0x73aac2f8]
  4032ae:	xor    DWORD PTR [esi+0x4998ceb8],ecx
  4032b4:	mov    ah,0x79
  4032b6:	hlt    
  4032b7:	out    dx,eax
  4032b8:	popa   
  4032b9:	iret   
  4032ba:	push   edi
  4032bb:	xor    BYTE PTR [ebx-0x5137c19],ah
  4032c1:	xchg   esi,eax
  4032c2:	loopne 0x403287
  4032c4:	out    0x53,al
  4032c6:	jmp    0x4032bb
  4032c8:	(bad)  
  4032c9:	pop    ebp
  4032ca:	es jl  0x40328f
  4032cd:	jmp    0x2beb:0x4a787230
  4032d4:	add    ah,BYTE PTR [ecx+0x741d9c59]
  4032da:	hlt    
  4032db:	popa   
  4032dc:	fs js  0x40325f
  4032df:	xchg   edi,eax
  4032e0:	mov    dh,0xaf
  4032e2:	fild   DWORD PTR [ebp-0x32]
  4032e5:	leave  
  4032e6:	sbb    esi,DWORD PTR [edx+0x74b131d0]
  4032ec:	jbe    0x403366
  4032ee:	jbe    0x4032f6
  4032f0:	mov    BYTE PTR [esi-0x2a5890fa],bl
  4032f6:	popa   
  4032f7:	mov    ds:0x32a33ab0,al
  4032fc:	pop    ss
  4032fd:	(bad)  
  4032fe:	in     al,dx
  4032ff:	shl    BYTE PTR ds:0x1e259f0e,cl
  403305:	mov    ds:0x720030ae,al
  40330a:	add    ebp,ebp
  40330c:	or     al,0xb4
  40330e:	or     al,0x10
  403310:	clc    
  403311:	clc    
  403312:	mov    esi,DWORD PTR [ecx-0x12]
  403315:	pushf  
  403316:	fcmovu st,st(0)
  403318:	xchg   DWORD PTR [esi+eiz*1+0x1af5f6ca],edi
  40331f:	cmp    DWORD PTR [esi-0x573c3c82],eax
  403325:	(bad)  
  403326:	fst    st(1)
  403328:	test   ebp,0x5c83a16d
  40332e:	jne    0x4032b5
  403330:	or     DWORD PTR [ebp-0x4],esi
  403333:	pop    ebx
  403334:	jae    0x4032ee
  403336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403337:	xor    ebp,esp
  403339:	div    DWORD PTR [edx+ebp*4+0x4e4b1164]
  403340:	pop    ds
  403341:	out    0xa7,eax
  403343:	xchg   edx,eax
  403344:	add    eax,0x72d4d43b
  403349:	pop    ebp
  40334a:	dec    ebx
  40334b:	mov    esp,0x7465e493
  403350:	xchg   ebx,eax
  403351:	and    dh,BYTE PTR [edi-0x58afee79]
  403357:	dec    eax
  403358:	or     eax,DWORD PTR [eax+0x5170445d]
  40335e:	xchg   ebp,eax
  40335f:	push   ebx
  403360:	std    
  403361:	adc    esi,DWORD PTR [edx]
  403363:	popa   
  403364:	div    BYTE PTR [ebp-0x7e]
  403367:	pushf  
  403368:	inc    esi
  403369:	push   esp
  40336a:	dec    edi
  40336b:	xor    al,0x1f
  40336d:	push   ebx
  40336e:	mov    edx,edx
  403370:	xor    eax,0x4eec7b0c
  403375:	mov    esp,0x61ea477c
  40337a:	popf   
  40337b:	dec    edx
  40337c:	jbe    0x4033ed
  40337e:	mov    edx,DWORD PTR [ecx+0x39]
  403381:	pop    edx
  403382:	push   ecx
  403383:	in     al,dx
  403384:	jo     0x40331e
  403386:	fistp  DWORD PTR [ecx+ebx*8+0x47]
  40338a:	test   al,0x69
  40338c:	sbb    dh,ch
  40338e:	in     eax,dx
  40338f:	aad    0x93
  403391:	(bad)  
  403392:	lock push 0x569e989c
  403398:	aad    0x73
  40339a:	test   al,0xe2
  40339c:	adc    BYTE PTR [ebx],al
  40339e:	and    DWORD PTR ds:0x642558e9,edi
  4033a4:	xchg   edx,eax
  4033a5:	and    eax,0x33978a68
  4033aa:	dec    edi
  4033ab:	mov    ecx,0x5763fc8
  4033b0:	xchg   edx,eax
  4033b1:	outs   dx,DWORD PTR ds:[esi]
  4033b3:	jno    0x4033b9
  4033b5:	std    
  4033b6:	jle    0x403414
  4033b8:	xchg   BYTE PTR [eax-0x35],ch
  4033bb:	dec    edx
  4033bc:	out    dx,eax
  4033bd:	or     eax,edx
  4033bf:	mov    ah,0xaf
  4033c1:	push   edi
  4033c2:	or     BYTE PTR [edi-0x6b],bl
  4033c5:	jg     0x403384
  4033c7:	lods   al,BYTE PTR ds:[esi]
  4033c8:	xchg   ebp,eax
  4033c9:	or     ah,dl
  4033cb:	mov    dh,0xfe
  4033cd:	in     eax,dx
  4033ce:	fcomp  st(3)
  4033d0:	std    
  4033d1:	aaa    
  4033d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033d3:	sbb    ch,BYTE PTR [eax+0x75]
  4033d6:	adc    al,0x95
  4033d8:	lods   eax,DWORD PTR ds:[esi]
  4033d9:	call   0x1e7d9e3
  4033de:	lahf   
  4033df:	lods   eax,DWORD PTR ds:[esi]
  4033e0:	mov    ah,0xd9
  4033e2:	fldcw  WORD PTR [ebx+0x218d0940]
  4033e8:	sti    
  4033e9:	shl    BYTE PTR [edx],1
  4033eb:	xor    ebx,DWORD PTR es:[edi+eax*1-0x76]
  4033f0:	std    
  4033f1:	pop    edi
  4033f2:	adc    BYTE PTR [ecx+edi*1+0x27],dh
  4033f6:	imul   edx,eax,0x11e630ed
  4033fc:	loop   0x40339b
  4033fe:	adc    eax,0xc715a09a
  403403:	in     eax,0xd1
  403405:	jle    0x403399
  403407:	pop    es
  403408:	mov    DWORD PTR [edx],edx
  40340a:	lahf   
  40340b:	lods   eax,DWORD PTR ds:[esi]
  40340c:	into   
  40340d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40340e:	push   es
  40340f:	cmp    bl,0xf5
  403412:	(bad)  
  403413:	jae    0x40343c
  403415:	adc    BYTE PTR [eax],al
  403417:	inc    esi
  403418:	adc    eax,0xb40a5a28
  40341d:	pop    ss
  40341e:	xchg   edi,eax
  40341f:	enter  0xc374,0x12
  403423:	ss (bad) 
  403425:	scas   eax,DWORD PTR es:[edi]
  403426:	push   ecx
  403427:	mov    cl,BYTE PTR [edi]
  403429:	retf   0xa301
  40342c:	jmp    0x4033d0
  40342e:	popa   
  40342f:	xchg   esp,eax
  403430:	stos   DWORD PTR es:[edi],eax
  403431:	adc    cl,bh
  403433:	ins    DWORD PTR es:[edi],dx
  403434:	ss js  0x403456
  403437:	mov    dh,0x62
  403439:	sub    BYTE PTR ds:0xe8c09474,0x29
  403440:	dec    edi
  403441:	adc    ebx,edi
  403443:	daa    
  403444:	outs   dx,DWORD PTR ds:[esi]
  403445:	pop    edi
  403446:	ins    BYTE PTR es:[edi],dx
  403447:	mov    bh,0x67
  403449:	out    dx,eax
  40344a:	sub    DWORD PTR [ebx-0x7ce62fe3],edi
  403450:	xor    BYTE PTR [edx+eax*2+0x58],0x2
  403455:	push   0xffffffb1
  403457:	out    dx,al
  403458:	call   0x5fdb:0x3fb3ae9
  40345f:	inc    edx
  403460:	pusha  
  403461:	adc    BYTE PTR [edi-0x2d661c65],dh
  403467:	jb     0x4034b4
  403469:	jg     0x40349f
  40346b:	fstp   QWORD PTR [ebx+ecx*8-0x18]
  40346f:	sbb    DWORD PTR [ecx],edx
  403471:	lock jnp 0x403460
  403474:	pushf  
  403475:	cmp    DWORD PTR [edx-0x6a],0x19
  403479:	(bad)
  40347d:	adc    dl,BYTE PTR [eax-0x23]
  403480:	jns    0x4034b5
  403482:	jne    0x4034c6
  403484:	imul   esi,DWORD PTR [edi],0x3c
  403487:	int3   
  403488:	jbe    0x4034cc
  40348a:	scas   eax,DWORD PTR es:[edi]
  40348b:	test   BYTE PTR [edi-0x781dc1f2],dh
  403491:	xchg   ebp,eax
  403492:	pop    ebx
  403493:	pop    ecx
  403494:	mov    bh,0x5b
  403496:	mov    al,0x73
  403498:	(bad)  
  403499:	adc    ecx,ecx
  40349b:	and    DWORD PTR [ebx+ebp*4],ebx
  40349e:	cmc    
  40349f:	xchg   ebp,eax
  4034a0:	enter  0xdb11,0xc9
  4034a4:	jecxz  0x4034f5
  4034a6:	lea    ecx,[eax+0xe]
  4034a9:	push   edi
  4034aa:	mov    dl,0x5f
  4034ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034ad:	xor    BYTE PTR [edi-0xe],ah
  4034b0:	pop    esp
  4034b1:	out    dx,al
  4034b2:	retf   0x125
  4034b5:	ret    0x9fd3
  4034b8:	and    eax,0x20ab86f9
  4034bd:	add    eax,0x5f96cfef
  4034c2:	sbb    ebp,edx
  4034c4:	lock xlat BYTE PTR ds:[ebx]
  4034c6:	cmp    ebp,DWORD PTR [edx+0x51]
  4034c9:	push   cs
  4034ca:	sub    dl,dl
  4034cc:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034ce:	das    
  4034cf:	cmp    al,BYTE PTR [ecx-0x62ec4b5a]
  4034d5:	xchg   ecx,eax
  4034d6:	cmc    
  4034d7:	outs   dx,DWORD PTR ds:[esi]
  4034d8:	and    al,0x2e
  4034da:	sar    BYTE PTR [edx-0x7ca50522],1
  4034e0:	push   ds
  4034e1:	fidiv  DWORD PTR [ecx-0x63154cf0]
  4034e7:	jae    0x4034a9
  4034e9:	loop   0x4034fd
  4034eb:	sub    bl,dl
  4034ed:	cs sub eax,0x2f435639
  4034f3:	call   0x3597:0xc4bf55bb
  4034fa:	pop    ebx
  4034fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034fc:	vpmuludq xmm4,xmm2,XMMWORD PTR ds:0x82179498
  403504:	icebp  
  403505:	test   DWORD PTR [ecx],ebx
  403507:	(bad)  
  403508:	pop    es
  403509:	add    BYTE PTR [edi],ch
  40350b:	shl    DWORD PTR [eax-0x51],cl
  40350e:	pushf  
  40350f:	push   ss
  403510:	sbb    ecx,ebx
  403512:	(bad)  [esi-0x14]
  403515:	adc    DWORD PTR [esi-0x47],eax
  403518:	sub    WORD PTR [ebp-0x6],si
  40351c:	ds inc esi
  40351e:	test   BYTE PTR [eax+0x2a],0xfb
  403522:	inc    esp
  403523:	sti    
  403524:	cs sahf 
  403526:	add    DWORD PTR [ecx+ecx*8],ecx
  403529:	sub    al,0x1c
  40352b:	jnp    0x403531
  40352d:	int3   
  40352e:	fiadd  DWORD PTR [ecx-0x11]
  403531:	cld    
  403532:	out    0x75,eax
  403534:	sti    
  403535:	push   edi
  403536:	xchg   BYTE PTR [ecx-0x711d0cba],al
  40353c:	mov    dh,0x88
  40353e:	mov    eax,0x43a48482
  403543:	rol    BYTE PTR [edx+0x4a],1
  403546:	cmp    esi,DWORD PTR [ebp+0x1a5719e4]
  40354c:	lahf   
  40354d:	outs   dx,DWORD PTR ds:[esi]
  40354e:	inc    edi
  40354f:	mov    ecx,0x1c7277ef
  403554:	push   eax
  403555:	xchg   DWORD PTR [edx+0x45],edx
  403558:	inc    esp
  403559:	adc    dl,BYTE PTR [eax]
  40355b:	sub    BYTE PTR [eax-0x6938e454],ah
  403561:	ins    BYTE PTR es:[edi],dx
  403562:	xor    ebx,DWORD PTR [edx]
  403564:	sbb    esp,ebx
  403566:	call   0xfb62:0x42ea5679
  40356d:	in     al,dx
  40356e:	pop    es
  40356f:	inc    edx
  403570:	aaa    
  403571:	dec    edx
  403572:	and    DWORD PTR [eax+0x639f5f21],esp
  403578:	dec    ecx
  403579:	bound  ecx,QWORD PTR [edx+eax*1+0x4c1729ad]
  403580:	xor    DWORD PTR [ecx+0x64],0xffffff86
  403584:	repz cmp ebp,esi
  403587:	(bad)  
  403588:	aaa    
  403589:	xchg   bl,bl
  40358b:	mov    bl,0xb3
  40358d:	enter  0xbabb,0x92
  403591:	retf   0x1412
  403594:	jmp    0x4035e6
  403596:	lock sub esp,DWORD PTR [edi-0x72e251f]
  40359d:	(bad)  [ebx+0x4e]
  4035a0:	scas   al,BYTE PTR es:[edi]
  4035a1:	fnstsw WORD PTR [edi]
  4035a3:	sar    DWORD PTR ds:0xf1449e37,cl
  4035a9:	mov    dh,0x85
  4035ab:	sub    eax,0x1eb0f75d
  4035b0:	xchg   esi,eax
  4035b1:	js     0x40359a
  4035b3:	and    cl,bl
  4035b5:	and    dh,al
  4035b7:	mov    WORD PTR [eax],ds
  4035b9:	out    0xc7,al
  4035bb:	adc    edi,edx
  4035bd:	hlt    
  4035be:	icebp  
  4035bf:	dec    eax
  4035c0:	stos   DWORD PTR es:[edi],eax
  4035c1:	cmp    BYTE PTR [ebx+0x6df0e3f9],ah
  4035c7:	mov    eax,ds:0xe8ce6b71
  4035cc:	push   0x4b086d3b
  4035d1:	fcmovu st,st(6)
  4035d3:	mov    eax,ds:0xd40b7e5a
  4035d8:	xor    al,0x91
  4035da:	dec    ecx
  4035db:	sub    ah,BYTE PTR [ecx+0x5a]
  4035de:	test   BYTE PTR [edx],ch
  4035e0:	cli    
  4035e1:	jae    0x40357a
  4035e3:	ins    BYTE PTR es:[edi],dx
  4035e4:	mov    edi,0xbf490529
  4035e9:	fs cdq 
  4035eb:	jmp    0xc969:0x1958ab16
  4035f2:	and    edi,DWORD PTR [edx+0x7b]
  4035f5:	push   esi
  4035f6:	mov    ecx,0x3d926f06
  4035fb:	jge    0x4035b0
  4035fd:	scas   eax,DWORD PTR es:[edi]
  4035fe:	sbb    ch,cl
  403600:	inc    ebx
  403601:	jp     0x403587
  403603:	ret    0xa03c
  403606:	add    ecx,edx
  403608:	inc    eax
  403609:	mov    ch,0x7f
  40360b:	xchg   DWORD PTR [ebp-0x2488ad38],eax
  403611:	arpl   WORD PTR gs:[esp+ecx*1],bx
  403615:	es int 0xb7
  403618:	imul   BYTE PTR [eax+0x39]
  40361b:	sbb    bl,dh
  40361d:	mov    al,ds:0x8f221d3a
  403622:	mov    ?,WORD PTR [ebx+0x3]
  403625:	ja     0x403677
  403627:	icebp  
  403628:	sub    DWORD PTR [edx],eax
  40362a:	mov    ecx,0x1c24c218
  40362f:	jo     0x403643
  403631:	sbb    BYTE PTR [ecx+0x1d73be53],ch
  403637:	and    ch,0x19
  40363a:	int    0x2b
  40363c:	jnp    0x40360f
  40363e:	xor    BYTE PTR [ecx-0x28573178],0xe1
  403645:	cmp    BYTE PTR [esi+0x6e89ea7a],0x99
  40364c:	inc    ecx
  40364d:	rcl    BYTE PTR [edi-0x6daee3a7],0x20
  403654:	inc    ecx
  403655:	lahf   
  403656:	xor    eax,0xe177f73e
  40365b:	and    DWORD PTR [ebp+0x52f454e8],esp
  403661:	jmp    0x7aad0d3e
  403666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403668:	loop   0x403650
  40366a:	xlat   BYTE PTR ds:[ebx]
  40366b:	daa    
  40366c:	cmp    cl,BYTE PTR [eax-0x570c4f7d]
  403672:	mov    ds:0x8cae857c,al
  403677:	int3   
  403678:	pop    eax
  403679:	mov    eax,0x12bfea68
  40367e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40367f:	std    
  403680:	add    dl,cl
  403682:	or     edx,DWORD PTR [esi-0x6edc8df3]
  403688:	jbe    0x4036a1
  40368a:	xor    eax,0x9cc1523a
  40368f:	leave  
  403690:	leave  
  403691:	cmp    BYTE PTR [ebx],dh
  403693:	cmp    al,0x2e
  403695:	cli    
  403696:	add    BYTE PTR es:[ecx-0x9],ah
  40369a:	jg     0x4036c8
  40369c:	pop    edx
  40369d:	xchg   esp,eax
  40369e:	sbb    al,0x4e
  4036a0:	xchg   ebx,eax
  4036a1:	stc    
  4036a2:	mov    ah,0xc6
  4036a4:	mov    al,ds:0xb4cbe16a
  4036a9:	add    ch,BYTE PTR [ebx+eiz*2-0x77ff5a96]
  4036b0:	pop    edx
  4036b1:	push   esp
  4036b2:	inc    ebx
  4036b3:	fcom   QWORD PTR [ebp+0x46246098]
  4036b9:	(bad)  
  4036ba:	jg     0x4036f2
  4036bc:	lds    ebp,FWORD PTR [eax+0x5c]
  4036bf:	adc    eax,0x4468a5fa
  4036c4:	test   al,0x99
  4036c6:	pop    edi
  4036c7:	and    DWORD PTR [esi-0xa897092],eax
  4036cd:	xlat   BYTE PTR ds:[ebx]
  4036ce:	mov    eax,0x4ae1b324
  4036d3:	push   ds
  4036d4:	mov    edi,0xe5391cc5
  4036d9:	sbb    bl,dl
  4036db:	scas   eax,DWORD PTR es:[edi]
  4036dc:	inc    esp
  4036dd:	inc    esp
  4036de:	inc    edi
  4036df:	add    bl,BYTE PTR [ebx]
  4036e1:	dec    edx
  4036e2:	sbb    dl,al
  4036e4:	test   DWORD PTR [ecx-0x2b6cdd3a],esi
  4036ea:	push   esi
  4036eb:	fimul  DWORD PTR [ecx+ebp*1+0x5a]
  4036ef:	(bad)  
  4036f0:	xchg   esp,eax
  4036f1:	imul   edi,DWORD PTR [ebx],0x19105238
  4036f7:	dec    ebx
  4036f8:	mov    WORD PTR [edx-0x697c7a1],gs
  4036fe:	jno    0x4036de
  403700:	and    BYTE PTR [eax-0x67],0x3e
  403704:	push   ss
  403705:	(bad)  
  403706:	pop    edi
  403707:	pop    es
  403708:	adc    cl,BYTE PTR [ebx-0x23]
  40370b:	les    esp,FWORD PTR [ecx]
  40370d:	call   0xe4dd:0x8f886c03
  403714:	mov    DWORD PTR [ebx-0x2f],esp
  403717:	cmp    esi,DWORD PTR [esi+0x34f9d96]
  40371d:	jb     0x403790
  40371f:	jg     0x403772
  403721:	popf   
  403722:	mov    ebx,0x6a90e8a6
  403727:	pop    ss
  403728:	scas   eax,DWORD PTR es:[edi]
  403729:	dec    ecx
  40372a:	or     BYTE PTR [ebp+0x2b],dh
  40372d:	and    cl,ah
  40372f:	idiv   BYTE PTR [ebp+0x64a01057]
  403735:	jmp    0x165026dd
  40373a:	stos   BYTE PTR es:[edi],al
  40373b:	scas   eax,DWORD PTR es:[edi]
  40373c:	cmp    al,BYTE PTR ds:0x11b4358a
  403742:	mov    bh,0x7a
  403744:	shl    al,1
  403746:	rcl    dh,1
  403748:	pop    esi
  403749:	out    dx,eax
  40374a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40374b:	push   esi
  40374c:	mov    esp,0xdc46aedd
  403751:	mov    ds:0x6f2ef94d,eax
  403756:	cli    
  403757:	(bad)  
  403758:	dec    esp
  403759:	aaa    
  40375a:	pop    ss
  40375b:	mov    eax,ds:0x6ebb704e
  403760:	stos   DWORD PTR es:[edi],eax
  403761:	push   eax
  403762:	das    
  403763:	sub    al,0xd5
  403765:	shl    dh,1
  403767:	lahf   
  403768:	add    DWORD PTR [edx*8-0x7aec5584],ebx
  40376f:	jo     0x403741
  403771:	jle    0x403784
  403773:	lock imul ebx,DWORD PTR [eax-0x7c],0x76a519cb
  40377b:	call   0x355c:0xc622eb51
  403782:	push   esi
  403783:	gs xor al,0x70
  403786:	sbb    ch,BYTE PTR [ecx]
  403788:	jo     0x403767
  40378a:	sub    dl,BYTE PTR [edx]
  40378c:	dec    edi
  40378d:	pop    ax
  40378f:	mov    bl,0x67
  403791:	bound  ecx,QWORD PTR [edi+eax*1-0xd4a84fd]
  403798:	leave  
  403799:	and    DWORD PTR [edx],0xffffffb4
  40379c:	rol    BYTE PTR [ebx],1
  40379e:	es (bad) 
  4037a0:	js     0x40375c
  4037a2:	push   edx
  4037a3:	adc    bh,BYTE PTR [ebp+edx*1-0x76b69ff3]
  4037aa:	dec    eax
  4037ab:	jmp    0x403811
  4037ad:	jle    0x40381a
  4037af:	rol    DWORD PTR [ecx],cl
  4037b1:	and    eax,0x47bae662
  4037b6:	dec    esp
  4037b7:	ins    DWORD PTR es:[edi],dx
  4037b8:	stos   BYTE PTR es:[edi],al
  4037b9:	gs dec ebx
  4037bb:	(bad)  
  4037bc:	jae    0x4037c0
  4037be:	or     al,0x8b
  4037c0:	ss pusha 
  4037c2:	fucom  st(2)
  4037c4:	js     0x4037e0
  4037c6:	dec    esi
  4037c7:	adc    edx,edx
  4037c9:	cs out dx,eax
  4037cb:	arpl   WORD PTR [ebx+0x1a0bb568],si
  4037d1:	hlt    
  4037d2:	jmp    0xc46a91c4
  4037d7:	rcr    bl,1
  4037d9:	adc    eax,0x8d95ae67
  4037de:	cmp    bh,BYTE PTR [edi+ebp*8-0x2a]
  4037e2:	sub    BYTE PTR [edi],ch
  4037e4:	test   DWORD PTR [eax],eax
  4037e6:	fisttp WORD PTR [ebp+0x7b]
  4037e9:	jmp    0x9ef8:0x2cbd1a7a
  4037f0:	push   edx
  4037f1:	jl     0x403872
  4037f3:	fist   WORD PTR [edi]
  4037f5:	jl     0x40377a
  4037f7:	pop    ss
  4037f8:	ror    bl,1
  4037fa:	xchg   ebp,eax
  4037fb:	sti    
  4037fc:	cwde   
  4037fd:	lock jnp 0x403807
  403800:	mov    edi,0x8a5875f9
  403805:	pop    ebp
  403806:	add    ah,BYTE PTR [ebx-0x3c]
  403809:	lods   eax,DWORD PTR ds:[esi]
  40380a:	or     DWORD PTR [ebp+0x3a],0xffffffde
  40380e:	add    ch,cl
  403810:	or     ah,BYTE PTR [ebp-0x7]
  403813:	add    al,0xa5
  403815:	fwait
  403816:	aam    0x2d
  403818:	addr16 push ecx
  40381a:	mov    ah,0x5
  40381c:	gs and al,0xd4
  40381f:	and    eax,0xf648013e
  403824:	mov    ebx,0x95821923
  403829:	or     DWORD PTR [ebx+0x70adaff5],eax
  40382f:	sti    
  403830:	adc    BYTE PTR [ecx+edx*4],ah
  403833:	imul   esp,DWORD PTR [ebp-0x367ebaa3],0xffffff99
  40383a:	daa    
  40383b:	add    eax,0x88cd0d0
  403840:	stos   DWORD PTR es:[edi],eax
  403841:	(bad)
  403844:	test   eax,0x9f6c0981
  403849:	rcl    DWORD PTR [ecx],1
  40384b:	and    bl,ch
  40384d:	jg     0x4038c8
  40384f:	es loopne 0x4037d4
  403852:	sbb    eax,0x5ca282fd
  403857:	mov    eax,ds:0x3565fd49
  40385c:	outs   dx,BYTE PTR ds:[esi]
  40385d:	mov    edx,0x2cea1e4e
  403862:	ret    0x763a
  403865:	call   0xc44c9d61
  40386a:	neg    BYTE PTR [ecx-0x631ce06c]
  403870:	mov    ch,0x54
  403872:	std    
  403873:	pop    ebx
  403874:	scas   eax,DWORD PTR es:[edi]
  403875:	push   ds
  403876:	add    DWORD PTR [edi],ebx
  403878:	and    eax,0xcf66c2ab
  40387d:	dec    ebp
  40387e:	outs   dx,BYTE PTR ds:[esi]
  40387f:	das    
  403880:	jl     0x403895
  403882:	lahf   
  403883:	es or  esp,ebp
  403886:	jle    0x40386b
  403888:	jbe    0x403818
  40388a:	cmp    eax,0x2799ba14
  40388f:	ja     0x403887
  403891:	call   0x5589:0x9d663396
  403898:	mov    dl,0x27
  40389a:	jne    0x4038b4
  40389c:	push   esi
  40389d:	sbb    ebp,DWORD PTR [esi]
  40389f:	ret    0xc605
  4038a2:	xchg   ebx,eax
  4038a3:	mov    eax,DWORD PTR [esi+0x70]
  4038a6:	xchg   BYTE PTR [ebp-0x195ef4ba],bl
  4038ac:	loope  0x403909
  4038ae:	mov    BYTE PTR [esp+ecx*1-0x48b8a67d],dh
  4038b5:	mov    bh,0xa9
  4038b7:	push   edi
  4038b8:	inc    BYTE PTR [eax-0x53]
  4038bb:	and    al,0x67
  4038bd:	pop    es
  4038be:	jle    0x403852
  4038c0:	into   
  4038c1:	je     0x403865
  4038c3:	xlat   BYTE PTR ds:[ebx]
  4038c4:	js     0x4038f5
  4038c6:	dec    esi
  4038c7:	mov    ch,0xc1
  4038c9:	aas    
  4038ca:	add    esi,DWORD PTR [eax]
  4038cc:	xor    eax,0x38707568
  4038d1:	inc    edx
  4038d2:	fwait
  4038d3:	gs imul edi,eax,0x33cf9fe0
  4038da:	dec    esi
  4038db:	add    dh,BYTE PTR [eax]
  4038dd:	or     al,0xcd
  4038df:	arpl   WORD PTR [ebx-0x6b],cx
  4038e2:	add    al,0x57
  4038e4:	out    dx,al
  4038e5:	dec    esi
  4038e6:	fmul   DWORD PTR [ebx-0x7bbc30d8]
  4038ec:	mov    edi,?
  4038ee:	dec    DWORD PTR [ebp+0x6d]
  4038f1:	fs dec esi
  4038f3:	(bad)  
  4038f4:	in     al,dx
  4038f5:	shl    BYTE PTR [ecx-0x59006085],1
  4038fb:	mov    eax,ds:0xeeea71c5
  403900:	inc    ebp
  403901:	adc    eax,0xe4d00f64
  403906:	das    
  403907:	lods   al,BYTE PTR ds:[esi]
  403908:	dec    ecx
  403909:	shl    DWORD PTR ds:0xd4bf0bc4,cl
  40390f:	dec    eax
  403910:	iret   
  403911:	sub    eax,0x93c55b24
  403916:	pop    edi
  403917:	push   ebp
  403918:	xor    BYTE PTR [eax+0x5ab59252],cl
  40391e:	xchg   ecx,eax
  40391f:	lods   eax,DWORD PTR ds:[esi]
  403920:	or     eax,0xff421618
  403925:	fmulp  st(0),st
  403927:	repz push ds
  403929:	shl    DWORD PTR [eax-0x16],0xf7
  40392d:	adc    eax,0xc54f8bf7
  403932:	mov    edx,0xa356706e
  403937:	xchg   ebx,eax
  403938:	cmp    ebp,DWORD PTR [eax-0x1b09b9f2]
  40393e:	lock pop es
  403940:	imul   eax,DWORD PTR [esi+0x2e],0xfffffff0
  403944:	mov    esp,0x961d3e5e
  403949:	es sbb eax,0x13a2abd4
  40394f:	adc    al,0x22
  403951:	sahf   
  403952:	ja     0x40398c
  403954:	js     0x40397d
  403956:	jne    0x4039cf
  403958:	iret   
  403959:	fstp   TBYTE PTR [ebp+0x51]
  40395c:	mov    ?,WORD PTR [esi-0x19]
  40395f:	aaa    
  403960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403961:	or     al,0x1c
  403963:	push   0xffffffa6
  403965:	test   DWORD PTR [esi],esp
  403967:	sbb    al,0x6f
  403969:	cmp    dl,BYTE PTR [edi+0x20b41956]
  40396f:	adc    BYTE PTR [eax+0x2832f26b],ch
  403975:	adc    BYTE PTR [ebp-0x17972a79],ah
  40397b:	outs   dx,BYTE PTR ds:[esi]
  40397c:	scas   al,BYTE PTR es:[edi]
  40397d:	inc    eax
  40397e:	pop    es
  40397f:	jp     0x4039f2
  403981:	pop    ecx
  403982:	imul   ebx,DWORD PTR ds:0x61deb2c0,0xffffffb2
  403989:	pop    eax
  40398a:	or     dh,BYTE PTR [ebx+ebx*4-0x7a8b66ab]
  403991:	mov    edx,0xdb757b83
  403996:	inc    esp
  403997:	cs in  eax,dx
  403999:	add    al,0x0
  40399b:	xchg   edi,eax
  40399c:	mov    edi,0x607458e1
  4039a1:	mov    bl,0xa8
  4039a3:	lods   eax,DWORD PTR ds:[esi]
  4039a4:	and    ebx,DWORD PTR [eax-0x41]
  4039a7:	xor    esp,DWORD PTR [ebx-0x39]
  4039aa:	and    DWORD PTR [ebp+0x57],esi
  4039ad:	pop    eax
  4039ae:	adc    DWORD PTR [ebx],ebx
  4039b0:	add    eax,0x71d185c0
  4039b5:	cs add bh,BYTE PTR ss:[ebx+0x178e03e3]
  4039bd:	xchg   ebx,eax
  4039be:	inc    ecx
  4039bf:	mov    ecx,0xb3b83862
  4039c4:	inc    eax
  4039c5:	cmc    
  4039c6:	mov    esi,0xe3eef8a7
  4039cb:	push   ebp
  4039cc:	push   edx
  4039cd:	inc    edi
  4039ce:	arpl   WORD PTR [eax-0x10b4cc65],si
  4039d4:	rol    BYTE PTR [edi-0x370b888b],1
  4039da:	outs   dx,DWORD PTR es:[esi]
  4039dc:	leave  
  4039dd:	leave  
  4039de:	sub    eax,edx
  4039e0:	int3   
  4039e1:	jo     0x403a58
  4039e3:	fcomp  QWORD PTR [esi+0x2bc4adc0]
  4039e9:	mov    edi,0x6ac5b61b
  4039ee:	or     al,0x70
  4039f0:	scas   eax,DWORD PTR es:[edi]
  4039f1:	loope  0x4039d7
  4039f3:	mov    ebx,0x1ff52b8
  4039f8:	sub    BYTE PTR [esp+ebx*8],dl
  4039fb:	out    0x21,al
  4039fd:	adc    ebp,ebp
  4039ff:	dec    esp
  403a00:	out    0x90,eax
  403a02:	mov    ds:0xdad7daf6,al
  403a07:	nop
  403a08:	les    esi,FWORD PTR [eax+0x60b74183]
  403a0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a0f:	push   ebp
  403a10:	shl    DWORD PTR [eax+0x5f],0xf
  403a14:	ins    DWORD PTR es:[edi],dx
  403a15:	sub    BYTE PTR [eax-0x6d41287e],cl
  403a1b:	mov    bl,0xdd
  403a1d:	dec    esp
  403a1e:	inc    esi
  403a1f:	fwait
  403a20:	inc    esi
  403a21:	push   ss
  403a22:	push   ds
  403a23:	(bad)  
  403a25:	inc    ebx
  403a26:	(bad)  
  403a27:	(bad)  
  403a28:	sub    DWORD PTR [edi],edi
  403a2a:	inc    edi
  403a2b:	adc    BYTE PTR [edi],0x84
  403a2e:	call   0x87d9:0xda9752f5
  403a35:	repz call 0x3eb8:0x8b58813e
  403a3d:	inc    edi
  403a3e:	dec    esi
  403a3f:	loop   0x403a97
  403a41:	arpl   WORD PTR [edi-0x2396a5e2],cx
  403a47:	mov    ds:0x6da620a6,al
  403a4c:	adc    BYTE PTR [edi+0x55479383],ch
  403a52:	adc    ch,BYTE PTR [edi-0x63]
  403a55:	xchg   ebp,eax
  403a56:	fucompp 
  403a58:	std    
  403a59:	std    
  403a5a:	add    BYTE PTR [eax+0x1c],bh
  403a5d:	loop   0x403a1d
  403a5f:	pop    ecx
  403a60:	jnp    0x403a78
  403a62:	cmp    edi,esp
  403a64:	cdq    
  403a65:	xor    ecx,DWORD PTR [ecx+0x2e00401]
  403a6b:	push   edx
  403a6c:	stos   BYTE PTR es:[edi],al
  403a6d:	mov    ecx,0xbade960c
  403a72:	jb     0x403a35
  403a74:	enter  0x1c48,0x79
  403a78:	pop    ss
  403a79:	mov    bh,0x2
  403a7b:	mov    ebp,0x8579e7f0
  403a80:	ror    DWORD PTR [ebp+0x1754d8f8],cl
  403a86:	push   eax
  403a87:	adc    DWORD PTR [bp+si-0x1a],ebp
  403a8b:	cmp    edx,DWORD PTR [esi+0x464acf52]
  403a91:	pop    eax
  403a92:	outs   dx,BYTE PTR ds:[esi]
  403a93:	stos   BYTE PTR es:[edi],al
  403a94:	xchg   esi,eax
  403a95:	(bad)  
  403a97:	adc    al,0x72
  403a99:	shl    BYTE PTR [eax-0x122becdf],0xa7
  403aa0:	and    al,0x15
  403aa2:	jl     0x403a85
  403aa4:	lods   eax,DWORD PTR ds:[esi]
  403aa5:	xchg   BYTE PTR [ecx+0x78f2dbbc],cl
  403aab:	addr16 popa 
  403aad:	cmp    edx,DWORD PTR [edi]
  403aaf:	lds    esi,FWORD PTR [edx+0x42]
  403ab2:	jmp    0xb348d67c
  403ab7:	xchg   BYTE PTR [edx*4-0x67855c03],dh
  403abe:	xor    DWORD PTR [edi+eiz*2],0x3b
  403ac2:	xor    DWORD PTR [esi],ebx
  403ac4:	adc    BYTE PTR [ebp-0x167bb84f],0x3
  403acb:	xchg   BYTE PTR [esi+eax*8+0x6f],bh
  403acf:	adc    ah,ch
  403ad1:	lods   al,BYTE PTR ds:[esi]
  403ad2:	push   ebp
  403ad3:	sub    al,0x49
  403ad5:	xor    eax,0x9e319afa
  403ada:	xrelease mov DWORD PTR ds:0x9c29402d,edx
  403ae1:	xor    BYTE PTR [edi],al
  403ae3:	sbb    al,0xf7
  403ae5:	xor    bh,bl
  403ae7:	sbb    dl,dl
  403ae9:	cmp    ebx,DWORD PTR [ebp-0x2]
  403aec:	mov    ds:0xdee74718,eax
  403af1:	not    BYTE PTR ds:0x1c427a44
  403af7:	dec    ebx
  403af8:	mov    edx,0x7ea6ca27
  403afd:	gs mov bl,0x44
  403b00:	jp     0x403b16
  403b02:	mov    ds:0x9fd537a2,al
  403b07:	sub    al,BYTE PTR [ebx+0x2917bad]
  403b0d:	sbb    eax,0xb9f3016a
  403b12:	cdq    
  403b13:	mov    al,0xc7
  403b15:	pop    ebp
  403b16:	retf   
  403b17:	out    dx,al
  403b18:	inc    ecx
  403b19:	dec    edx
  403b1a:	(bad)  
  403b1b:	(bad)  [edi]
  403b1d:	pop    esi
  403b1e:	add    ebx,DWORD PTR [eax-0x2325576c]
  403b24:	ds mov al,0x42
  403b27:	adc    al,0xc5
  403b29:	in     al,dx
  403b2a:	dec    ebp
  403b2b:	sub    eax,edi
  403b2d:	xor    eax,esi
  403b2f:	cmp    eax,ecx
  403b31:	jne    0x403b8d
  403b37:	or     ecx,0x18fd
  403b3d:	mov    eax,DWORD PTR [ebp-0x8]
  403b40:	and    DWORD PTR ds:0x42916b,0x3a4c
  403b4a:	mov    ecx,DWORD PTR [ebp-0x10]
  403b4d:	adc    DWORD PTR ds:0x42916b,0x4291f3
  403b57:	xor    eax,esi
  403b59:	xor    DWORD PTR ds:0x4291d3,0x4291f7
  403b63:	xor    ecx,esi
  403b65:	sub    eax,ecx
  403b67:	sub    eax,edi
  403b69:	mov    ecx,DWORD PTR ds:0x429ccf
  403b6f:	mov    ecx,DWORD PTR [ecx]
  403b71:	xor    DWORD PTR ds:0x429163,ecx
  403b77:	xor    eax,esi
  403b79:	mov    DWORD PTR [ebp-0x8],eax
  403b7c:	mov    eax,DWORD PTR [ebp-0x10]
  403b7f:	xor    eax,esi
  403b81:	mov    ecx,0xffcd8d8d
  403b86:	sub    ecx,eax
  403b88:	jmp    0x403b9c
  403b8d:	mov    eax,DWORD PTR [ebp-0x10]
  403b90:	xor    eax,esi
  403b92:	mov    ecx,0xffcd8d0d
  403b97:	sub    ecx,eax
  403b99:	add    ecx,DWORD PTR [ebp-0xc]
  403b9c:	mov    DWORD PTR [ebp-0xc],ecx
  403b9f:	mov    eax,DWORD PTR [ebp-0x8]
  403ba2:	cmp    eax,0xf89c85a1
  403ba7:	jne    0x40158a
  403bad:	mov    DWORD PTR [ebp-0x34],0x9
  403bb4:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb7:	xor    ecx,esi
  403bb9:	add    ecx,edi
  403bbb:	jmp    0x40857d
  403bc0:	lea    eax,[ecx+ebx*1]
  403bc3:	mov    DWORD PTR [ebp-0x2c],eax
  403bc6:	mov    eax,DWORD PTR [ebp-0x58]
  403bc9:	sub    eax,ecx
  403bcb:	mov    DWORD PTR [ebp-0x1c],eax
  403bce:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd1:	mov    DWORD PTR [ebp-0x14],eax
  403bd4:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd7:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  403bde:	mov    DWORD PTR [ebp-0x54],eax
  403be1:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  403be8:	mov    eax,DWORD PTR [ebp-0x38]
  403beb:	xor    eax,esi
  403bed:	add    eax,edi
  403bef:	mov    DWORD PTR [ebp-0x10],eax
  403bf2:	mov    eax,DWORD PTR [ebp-0x38]
  403bf5:	xor    eax,esi
  403bf7:	add    eax,edi
  403bf9:	mov    DWORD PTR [ebp-0x8],eax
  403bfc:	mov    DWORD PTR [ebp-0x2c],0xf89c8581
  403c03:	mov    DWORD PTR [ebp-0x44],0xf89c85b8
  403c0a:	mov    eax,DWORD PTR [ebp-0x38]
  403c0d:	mov    edx,DWORD PTR [ebp-0x14]
  403c10:	xor    eax,esi
  403c12:	add    eax,edi
  403c14:	cmp    edx,eax
  403c16:	je     0x408571
  403c1c:	mov    eax,DWORD PTR [ebp-0x20]
  403c1f:	xor    eax,esi
  403c21:	mov    edx,0xffcd8d0d
  403c26:	sub    edx,eax
  403c28:	add    edx,DWORD PTR [ebp-0x14]
  403c2b:	mov    eax,DWORD PTR [ebp-0x20]
  403c2e:	mov    ebx,DWORD PTR [ebp-0x10]
  403c31:	xor    eax,esi
  403c33:	add    eax,edi
  403c35:	imul   eax,ebx
  403c38:	cmp    eax,edx
  403c3a:	ja     0x40856e
  403c40:	mov    edx,DWORD PTR [ebp-0x10]
  403c43:	mov    eax,DWORD PTR [ebp-0x14]
  403c46:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c49:	sub    eax,edx
  403c4b:	xor    ebx,esi
  403c4d:	xor    edx,edx
  403c4f:	add    ebx,edi
  403c51:	div    ebx
  403c53:	mov    DWORD PTR [ebp-0x8],eax
  403c56:	mov    eax,DWORD PTR [ebp-0x44]
  403c59:	mov    edx,DWORD PTR [ebp-0x8]
  403c5c:	xor    eax,esi
  403c5e:	add    eax,edi
  403c60:	cmp    edx,eax
  403c62:	jbe    0x403c72
  403c68:	mov    eax,DWORD PTR [ebp-0x44]
  403c6b:	xor    eax,esi
  403c6d:	add    eax,edi
  403c6f:	mov    DWORD PTR [ebp-0x8],eax
  403c72:	mov    eax,DWORD PTR [ebp-0x2c]
  403c75:	mov    edx,DWORD PTR [ebp-0x8]
  403c78:	xor    eax,esi
  403c7a:	add    eax,edi
  403c7c:	imul   eax,edx
  403c7f:	mov    DWORD PTR [ebp-0x8],eax
  403c82:	mov    eax,DWORD PTR [ebp-0x38]
  403c85:	mov    edx,DWORD PTR [ebp-0x8]
  403c88:	jmp    0x406039
  403c8d:	mov    eax,0xa02c6f67
  403c92:	and    al,0xb8
  403c94:	out    0x12,eax
  403c96:	mov    bh,0x24
  403c98:	ffree  st(4)
  403c9a:	in     eax,0xed
  403c9c:	(bad)  
  403c9e:	pop    esp
  403c9f:	add    DWORD PTR [ebx-0x7c7ca311],0x35
  403ca6:	adc    BYTE PTR [eax+0xc669f54],ch
  403cac:	and    BYTE PTR [edi+0x5a6d46e2],dh
  403cb2:	dec    edx
  403cb3:	int    0xce
  403cb5:	dec    ecx
  403cb6:	adc    ah,BYTE PTR [eax+0x496c53ea]
  403cbc:	pop    es
  403cbd:	out    dx,eax
  403cbe:	iret   
  403cbf:	push   esi
  403cc0:	xchg   ebx,eax
  403cc1:	fwait
  403cc2:	mov    eax,0x36bab4b0
  403cc7:	dec    esp
  403cc8:	je     0x403cc8
  403cca:	call   DWORD PTR [esi-0x7e]
  403ccd:	std    
  403cce:	sub    edx,0xa3cb8ae
  403cd4:	or     eax,0x64898b59
  403cd9:	addr16 fwait
  403cdb:	in     eax,dx
  403cdc:	push   ebp
  403cdd:	adc    eax,0xcf7fa2f7
  403ce2:	(bad)  
  403ce3:	clc    
  403ce4:	or     edi,DWORD PTR [edx-0x36]
  403ce7:	mov    al,0xb4
  403ce9:	ss pop edx
  403ceb:	mov    bh,0x4c
  403ced:	mov    cl,0x32
  403cef:	leave  
  403cf0:	jb     0x403d59
  403cf2:	popf   
  403cf3:	(bad)  
  403cf4:	mov    ds:0x2a2283bf,al
  403cf9:	jp     0x403d31
  403cfb:	inc    ebx
  403cfc:	push   ebp
  403cfd:	sti    
  403cfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cff:	call   0x3714:0x92411fd1
  403d06:	mov    ebx,0x4d542340
  403d0b:	out    0x39,al
  403d0d:	mov    dh,0x31
  403d0f:	mov    esp,0xc9b9d9df
  403d14:	mov    ds:0x1717a38b,al
  403d19:	and    ebx,DWORD PTR [esi-0x7fda7ada]
  403d1f:	imul   esp,DWORD PTR [esi-0x5780faf3],0xf506a137
  403d29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d2a:	xor    eax,0xdeb40606
  403d2f:	retf   
  403d30:	out    0x94,eax
  403d32:	cli    
  403d33:	push   esp
  403d34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d35:	movhps QWORD PTR [edx+ebp*4+0x75],xmm7
  403d3a:	adc    ecx,esi
  403d3c:	jmp    0x403d77
  403d3e:	push   edx
  403d3f:	retf   
  403d40:	std    
  403d41:	test   DWORD PTR [eax-0x5a709ecf],esi
  403d47:	jno    0x403da4
  403d49:	aam    0x25
  403d4b:	adc    al,0x4c
  403d4d:	xchg   DWORD PTR [edi],ebp
  403d4f:	popf   
  403d50:	mov    esp,0xc67bad07
  403d55:	pusha  
  403d56:	pop    edi
  403d57:	mov    ds:0xbc1b602,eax
  403d5c:	adc    eax,0x96e9cf52
  403d61:	aam    0xc8
  403d63:	mov    eax,ds:0x2df2c63c
  403d68:	inc    ebp
  403d69:	in     eax,dx
  403d6a:	les    edi,FWORD PTR [ecx-0x4a]
  403d6d:	xor    eax,0xcaa94c80
  403d72:	mov    edi,0xdd6dfd7e
  403d77:	or     bh,BYTE PTR [esi+0x457f19c0]
  403d7d:	jo     0x403df0
  403d7f:	pop    esi
  403d80:	xchg   ebp,eax
  403d81:	sub    DWORD PTR [ebx],edx
  403d83:	nop
  403d84:	test   eax,0x4a6b99c8
  403d89:	mov    ?,ecx
  403d8b:	jl     0x403dc6
  403d8d:	sar    BYTE PTR [esi+0x3429de6e],1
  403d93:	xchg   ebx,eax
  403d94:	lods   eax,DWORD PTR ds:[esi]
  403d95:	or     ax,0xbbb6
  403d99:	mov    bh,0x5e
  403d9b:	lea    edx,[ebx]
  403d9d:	(bad)  
  403d9e:	add    BYTE PTR [ebx+edi*2],bl
  403da1:	cdq    
  403da2:	lods   eax,DWORD PTR ds:[esi]
  403da3:	test   al,0xbe
  403da5:	add    ebx,DWORD PTR [ebp+ecx*1+0xb]
  403da9:	dec    edx
  403daa:	je     0x403e04
  403dac:	xchg   DWORD PTR [ecx-0x4ecc91b2],esi
  403db2:	cld    
  403db3:	and    al,0xb8
  403db5:	pop    edi
  403db6:	jns    0x403dcb
  403db8:	inc    ecx
  403db9:	sar    ebx,1
  403dbb:	jle    0x403d93
  403dbd:	leave  
  403dbe:	xor    eax,0xdd3be12e
  403dc3:	xor    al,0x11
  403dc5:	and    esi,DWORD PTR [edx+0x8d92437]
  403dcb:	adc    al,0x9c
  403dcd:	pop    esi
  403dce:	psubb  mm2,QWORD PTR [esi+0x6a965ccc]
  403dd5:	dec    esi
  403dd6:	pop    ebp
  403dd7:	shr    al,cl
  403dd9:	push   ss
  403dda:	sti    
  403ddb:	push   edx
  403ddc:	sub    al,0x90
  403dde:	int3   
  403ddf:	out    dx,eax
  403de0:	leave  
  403de1:	sub    al,0x47
  403de3:	dec    BYTE PTR [edi+0x58220987]
  403de9:	lock sub eax,0xfad7696a
  403def:	ja     0x403e54
  403df1:	addr16 jns 0x403d9a
  403df4:	nop
  403df5:	ja     0x403d86
  403df7:	nop
  403df8:	xchg   esp,eax
  403df9:	adc    dl,dl
  403dfb:	leave  
  403dfc:	mov    edx,0xd562a5a2
  403e01:	push   es
  403e02:	clc    
  403e03:	pop    ss
  403e04:	mov    bh,0xbf
  403e06:	and    edi,DWORD PTR [ecx]
  403e08:	or     edx,esp
  403e0a:	lds    edi,FWORD PTR [edx]
  403e0c:	out    dx,eax
  403e0d:	aaa    
  403e0e:	in     eax,0xae
  403e10:	inc    ebp
  403e11:	mov    WORD PTR [edi-0x7a18b2e3],es
  403e17:	retf   
  403e18:	xchg   ebp,eax
  403e19:	adc    al,0x6b
  403e1b:	adc    al,BYTE PTR [eax+ebp*2+0x7d6630ed]
  403e22:	sub    DWORD PTR [ecx],0xe962fcac
  403e28:	ins    DWORD PTR es:[edi],dx
  403e29:	add    esi,DWORD PTR [edx+ebx*1-0x68c3721d]
  403e30:	inc    ecx
  403e31:	(bad)  
  403e33:	mov    esp,0xa7203fb6
  403e38:	xchg   al,ah
  403e3a:	xor    DWORD PTR [ebx+0x44],esp
  403e3d:	enter  0x629f,0xfb
  403e41:	(bad)  
  403e42:	jb     0x403e1b
  403e44:	sub    DWORD PTR [ebx-0xc],ecx
  403e47:	aas    
  403e48:	stc    
  403e49:	es es ss jge 0x403de9
  403e4e:	or     BYTE PTR [eax-0x4f99b3b0],0x22
  403e55:	or     esi,0xffffffe4
  403e58:	sbb    BYTE PTR [ecx],cl
  403e5a:	xchg   ebp,eax
  403e5b:	jno    0x403dea
  403e5d:	sbb    eax,0x8a5a660a
  403e62:	std    
  403e63:	enter  0x210c,0xe9
  403e67:	fmul   QWORD PTR [eax+ebp*2-0x5e]
  403e6b:	or     al,0x1f
  403e6d:	out    dx,eax
  403e6e:	out    dx,eax
  403e6f:	mov    bl,0xf2
  403e71:	fimul  DWORD PTR [eax+0x5a487017]
  403e77:	jmp    0x9aae8c4e
  403e7c:	cdq    
  403e7d:	and    BYTE PTR [edx],ch
  403e7f:	jb     0x403e7e
  403e81:	push   0x7756d7b8
  403e86:	retf   
  403e87:	inc    ecx
  403e88:	adc    al,0xec
  403e8a:	adc    DWORD PTR [edx-0x49e77a6d],eax
  403e90:	jnp    0x403e3a
  403e92:	int    0x7f
  403e94:	ins    BYTE PTR es:[edi],dx
  403e95:	push   eax
  403e96:	sbb    al,0x28
  403e98:	aad    0xd1
  403e9a:	jns    0x403ec5
  403e9c:	or     ebx,ebp
  403e9e:	pop    edx
  403e9f:	adc    edi,esi
  403ea1:	mov    dl,0x3e
  403ea3:	adc    DWORD PTR [edi],edi
  403ea5:	push   ebp
  403ea6:	neg    DWORD PTR [ebp+0x48]
  403ea9:	add    ch,BYTE PTR [edx+0x6d]
  403eac:	jge    0x403ec2
  403eae:	push   esp
  403eaf:	mov    BYTE PTR [esp+ebx*8+0x26],0x33
  403eb4:	push   edi
  403eb5:	and    dl,BYTE PTR [esi]
  403eb7:	lahf   
  403eb8:	ror    edi,1
  403eba:	xor    eax,0xc9eb28a7
  403ebf:	jp     0x403ee3
  403ec1:	xor    ah,BYTE PTR ds:0xbe29bc12
  403ec7:	in     al,dx
  403ec8:	mov    edx,0x852d8f66
  403ecd:	ror    BYTE PTR [ebp-0x1fba09b3],1
  403ed3:	lea    edx,[ebx+eax*1-0x4e8c48ac]
  403eda:	daa    
  403edb:	jne    0x403eb9
  403edd:	addr16 cmp al,0xce
  403ee0:	cli    
  403ee1:	out    dx,eax
  403ee2:	(bad)  
  403ee3:	pushw  ss
  403ee5:	(bad)  
  403ee7:	retf   
  403ee8:	push   cs
  403ee9:	fisub  WORD PTR [ebx]
  403eeb:	ret    
  403eec:	hlt    
  403eed:	or     ecx,esi
  403eef:	or     ah,BYTE PTR [edx-0x495ec2ea]
  403ef5:	mov    al,0x5f
  403ef7:	iret   
  403ef8:	stos   DWORD PTR es:[edi],eax
  403ef9:	cwde   
  403efa:	push   cs
  403efb:	mul    DWORD PTR [ebx-0x28]
  403efe:	addr16 test eax,0x10ad051b
  403f04:	addr16 dec edi
  403f06:	cmp    al,0xd8
  403f08:	pop    edi
  403f09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f0a:	xchg   ecx,eax
  403f0b:	dec    ecx
  403f0c:	mov    edx,0x5bfe7880
  403f11:	push   0xffffffbe
  403f13:	mov    al,ds:0xf0bed500
  403f18:	cdq    
  403f19:	cmp    BYTE PTR [edx],dl
  403f1b:	lahf   
  403f1c:	mov    DWORD PTR ds:0x13f3b525,esi
  403f22:	and    dl,al
  403f24:	mov    ds:0x5f1238e,al
  403f29:	cwde   
  403f2a:	in     al,0x57
  403f2c:	icebp  
  403f2d:	dec    edx
  403f2e:	mov    edx,0x61032f9f
  403f33:	aaa    
  403f34:	imul   eax,ebp,0x19
  403f37:	push   es
  403f38:	cmp    cl,cl
  403f3a:	jo     0x403f25
  403f3c:	shr    ch,1
  403f3e:	pop    esi
  403f3f:	sti    
  403f40:	loop   0x403f2b
  403f42:	mov    ch,0xdc
  403f44:	test   eax,0xd9aea6e5
  403f49:	inc    edx
  403f4a:	jle    0x403fc6
  403f4c:	pushf  
  403f4d:	pushf  
  403f4e:	inc    ebp
  403f4f:	fmul   QWORD PTR [edx+0x11]
  403f52:	push   es
  403f53:	lahf   
  403f54:	jnp    0x403f56
  403f56:	cmp    al,0x2
  403f58:	xor    al,0x8c
  403f5a:	adc    DWORD PTR [edx-0x69],eax
  403f5d:	pop    edx
  403f5e:	jnp    0x403f39
  403f60:	daa    
  403f61:	mov    ecx,edx
  403f63:	or     ebp,DWORD PTR [edi+0x6a]
  403f66:	fisubr DWORD PTR [edx-0x57]
  403f69:	addr16 cmc 
  403f6b:	inc    ebp
  403f6c:	cmp    eax,0x28700be9
  403f71:	mov    ch,0xb8
  403f73:	dec    esp
  403f74:	sbb    DWORD PTR [ecx+0x74],edi
  403f77:	pop    esi
  403f78:	(bad)  
  403f79:	imul   eax,DWORD PTR [edx+eax*8+0x39],0xffffffc5
  403f7e:	sbb    ch,0x75
  403f81:	jmp    0x1f34c5d0
  403f86:	fiadd  WORD PTR [edx+ebp*4+0x56418b4c]
  403f8d:	or     eax,0x15c1d27e
  403f92:	inc    eax
  403f93:	shl    DWORD PTR [eiz*8-0x4d4629f],0xa7
  403f9b:	jbe    0x403fde
  403f9d:	mov    bl,0xfb
  403f9f:	shr    DWORD PTR [edx],0xb4
  403fa2:	inc    edx
  403fa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fa4:	lock pop ds
  403fa6:	gs dec ebx
  403fa8:	adc    edx,edi
  403faa:	xchg   esi,eax
  403fab:	fwait
  403fac:	xor    eax,0xf293dda4
  403fb1:	test   eax,0xf655bc94
  403fb6:	popf   
  403fb7:	jmp    0xf6c5:0x505b5c25
  403fbe:	rcl    BYTE PTR [esi+0x39246af7],cl
  403fc4:	lods   al,BYTE PTR ds:[esi]
  403fc5:	fisubr WORD PTR [esp+esi*1]
  403fc8:	pop    es
  403fc9:	jnp    0x403ffe
  403fcb:	fcmovnb st,st(1)
  403fcd:	mov    cl,0x72
  403fcf:	add    esp,edx
  403fd1:	dec    ecx
  403fd2:	bound  edx,QWORD PTR [ecx+0x61faf9a2]
  403fd8:	jbe    0x404035
  403fda:	fwait
  403fdb:	jno    0x403fb6
  403fdd:	dec    esp
  403fde:	mov    WORD PTR [ecx],ds
  403fe0:	or     BYTE PTR [ecx-0x6c56b4a5],ah
  403fe6:	mov    al,ds:0x8723ba79
  403feb:	pop    esp
  403fec:	fs jle 0x403fc5
  403fef:	fcomi  st,st(6)
  403ff1:	stos   DWORD PTR es:[edi],eax
  403ff2:	inc    ecx
  403ff3:	push   bp
  403ff5:	xor    al,0x4
  403ff7:	cmp    esi,ebp
  403ff9:	cwde   
  403ffa:	std    
  403ffb:	pop    eax
  403ffc:	mov    cl,0x69
  403ffe:	adc    edi,DWORD PTR [eax-0x50]
  404001:	repnz fcom DWORD PTR [ecx]
  404004:	inc    esi
  404005:	out    0x97,al
  404007:	(bad)  
  404008:	in     al,0xe6
  40400a:	call   0xfc26cbf6
  40400f:	div    DWORD PTR [esi-0x48]
  404012:	dec    edi
  404013:	xchg   edx,eax
  404014:	sub    eax,0x1e36858e
  404019:	mov    edx,0x4aecbefb
  40401e:	cmp    ebp,DWORD PTR [edx+esi*2-0x56]
  404022:	or     eax,0x1ab31ca
  404027:	pop    ebp
  404028:	das    
  404029:	loopne 0x40402b
  40402b:	stos   BYTE PTR es:[edi],al
  40402c:	fsubr  st,st(6)
  40402e:	sub    al,BYTE PTR [ebx]
  404030:	xor    eax,0xc1a4aa64
  404035:	inc    esi
  404036:	jle    0x40406d
  404038:	sbb    al,0x78
  40403a:	int3   
  40403b:	push   eax
  40403c:	mov    DWORD PTR [edx-0x5e],esp
  40403f:	jecxz  0x40401b
  404041:	pop    eax
  404042:	mov    bl,0x33
  404044:	mov    ds:0x2227f8e6,eax
  404049:	icebp  
  40404a:	inc    esp
  40404b:	push   esp
  40404c:	(bad)  
  40404d:	idiv   DWORD PTR [ebp+0x46caf18f]
  404053:	xchg   edx,eax
  404054:	add    BYTE PTR [eax-0x3410e57b],0x67
  40405b:	inc    edi
  40405c:	leave  
  40405d:	cmp    al,0x43
  40405f:	add    edx,DWORD PTR [edi]
  404061:	(bad)
  404066:	xchg   ebp,eax
  404067:	xchg   ebp,eax
  404068:	and    esp,DWORD PTR [edi]
  40406a:	fmul   QWORD PTR [edi+0x17]
  40406d:	mov    es,WORD PTR [eax-0x56]
  404070:	lock icebp 
  404072:	rcr    BYTE PTR [ebp+0xfa7ea9c],cl
  404078:	pushf  
  404079:	add    ecx,DWORD PTR [ecx+edi*8-0x37]
  40407d:	xchg   edx,eax
  40407e:	add    ebx,DWORD PTR [edi+0x36]
  404081:	fdiv   st,st(7)
  404083:	loope  0x4040cc
  404085:	loopne 0x40405a
  404087:	or     eax,0x9f4db9c0
  40408c:	fstp   QWORD PTR [esi+esi*1]
  40408f:	xchg   BYTE PTR [ebp+ebx*2+0x13],bh
  404093:	jae    0x404077
  404095:	mov    dh,0x18
  404097:	cld    
  404098:	lds    esi,FWORD PTR [eax+0x29]
  40409b:	stos   BYTE PTR es:[edi],al
  40409c:	pop    edx
  40409d:	retf   0xddeb
  4040a0:	retf   0xe6c9
  4040a3:	adc    ch,BYTE PTR [ecx+0x4b54830d]
  4040a9:	leave  
  4040aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040ab:	leave  
  4040ac:	mov    cl,0xaa
  4040ae:	adc    ah,ch
  4040b0:	mov    ecx,0xf8892b44
  4040b5:	and    dl,BYTE PTR ds:0xced82265
  4040bb:	and    eax,0x8c22a62b
  4040c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040c1:	or     BYTE PTR [esi-0x4d],0x64
  4040c5:	gs stos BYTE PTR es:[edi],al
  4040c7:	jp     0x4040ff
  4040c9:	std    
  4040ca:	repz (bad) 
  4040cc:	and    eax,0x32ad21e7
  4040d1:	pop    ebp
  4040d2:	push   ds
  4040d3:	xlat   BYTE PTR ds:[ebx]
  4040d4:	lods   al,BYTE PTR ds:[esi]
  4040d5:	lds    edx,FWORD PTR [esi]
  4040d7:	leave  
  4040d8:	cmp    edx,eax
  4040da:	outs   dx,DWORD PTR ds:[esi]
  4040db:	dec    ebp
  4040dc:	hlt    
  4040dd:	xor    DWORD PTR [ebx+edi*8],eax
  4040e0:	lods   eax,DWORD PTR ds:[esi]
  4040e1:	mov    dl,0x94
  4040e3:	cdq    
  4040e4:	std    
  4040e5:	add    DWORD PTR [ecx-0x27],edi
  4040e8:	cmp    ebp,DWORD PTR cs:[edi-0x6250deb4]
  4040ef:	ret    
  4040f0:	out    0xf1,al
  4040f2:	push   ss
  4040f3:	mov    bl,0x44
  4040f5:	repnz sub ah,al
  4040f8:	cs mov ah,0x9a
  4040fb:	add    esi,eax
  4040fd:	out    0x49,al
  4040ff:	je     0x40411b
  404101:	sti    
  404102:	shr    DWORD PTR [edi-0x6cb372d1],cl
  404108:	xor    DWORD PTR [esi],esp
  40410a:	cmc    
  40410b:	mov    al,0x33
  40410d:	sbb    eax,0xc054292d
  404112:	aas    
  404113:	loopne 0x404173
  404115:	pop    ds
  404116:	sub    bh,ah
  404118:	fld    QWORD PTR [esi]
  40411a:	or     al,0x56
  40411c:	sub    DWORD PTR [ebx+0x1f],ebp
  40411f:	pop    edi
  404120:	inc    ebx
  404121:	gs js  0x40419f
  404124:	leave  
  404125:	or     edx,edx
  404127:	inc    eax
  404128:	stos   DWORD PTR es:[edi],eax
  404129:	call   0x4493b3b
  40412e:	cdq    
  40412f:	hlt    
  404130:	jb     0x40414d
  404132:	mov    edi,0xb050ce05
  404137:	sub    bl,BYTE PTR [edi-0xa]
  40413a:	pop    ebx
  40413b:	std    
  40413c:	sub    DWORD PTR [eax],eax
  40413e:	fwait
  40413f:	xor    DWORD PTR [ecx],eax
  404141:	cmp    eax,0x26a3e333
  404146:	out    dx,al
  404147:	adc    esp,DWORD PTR [ebx-0x5e]
  40414a:	stc    
  40414b:	ss cli 
  40414d:	jne    0x40416f
  40414f:	int3   
  404150:	push   ebx
  404151:	adc    ebp,DWORD PTR [ecx]
  404153:	sbb    ebx,DWORD PTR [edi-0x393ea190]
  404159:	aam    0x29
  40415b:	add    al,0x73
  40415d:	test   eax,0x9c5184fa
  404162:	pop    ss
  404163:	imul   ebp,DWORD PTR [edx+0x3b],0x38e828c0
  40416a:	imul   edx,DWORD PTR [esi+0x45338a34],0x75
  404171:	xor    al,0x13
  404173:	or     al,0x15
  404175:	repnz fbstp TBYTE PTR [esi]
  404178:	fcomp  QWORD PTR ds:0xbd79acf4
  40417e:	pop    ebp
  40417f:	pop    DWORD PTR [ecx+edi*8+0xa]
  404183:	inc    ebp
  404184:	push   0x73ee0139
  404189:	xchg   esi,eax
  40418a:	sti    
  40418b:	and    DWORD PTR [ecx-0x7e],esp
  40418e:	mov    eax,ds:0x8627b511
  404193:	sub    al,0xe3
  404195:	dec    ebp
  404196:	cs pushf 
  404198:	mov    dh,0xfd
  40419a:	fs inc ebp
  40419c:	test   BYTE PTR [ecx+ebp*4-0x13],bl
  4041a0:	sub    BYTE PTR [ecx],al
  4041a2:	jb     0x404145
  4041a4:	inc    eax
  4041a5:	pusha  
  4041a6:	nop
  4041a7:	cmp    DWORD PTR [edi+0x34],edi
  4041aa:	inc    ecx
  4041ab:	sti    
  4041ac:	dec    ebp
  4041ad:	xchg   edi,eax
  4041ae:	push   edi
  4041af:	jbe    0x40420b
  4041b1:	stos   DWORD PTR es:[edi],eax
  4041b2:	sub    eax,0x34293d86
  4041b7:	mov    ?,esp
  4041b9:	pop    esp
  4041ba:	imul   esi,edi,0xa5535dbe
  4041c0:	pop    eax
  4041c1:	inc    esi
  4041c2:	lea    esp,[ecx+0x2d]
  4041c5:	xchg   edx,eax
  4041c6:	xlat   BYTE PTR ds:[ebx]
  4041c7:	aam    0x18
  4041c9:	mov    dh,0x6c
  4041cb:	sub    al,0x55
  4041cd:	sbb    al,0x99
  4041cf:	xchg   edx,eax
  4041d0:	jp     0x404223
  4041d2:	jp     0x4041a4
  4041d4:	and    dh,BYTE PTR [edx]
  4041d6:	out    dx,al
  4041d7:	scas   al,BYTE PTR es:[edi]
  4041d8:	dec    ebx
  4041d9:	jecxz  0x4041db
  4041db:	adc    eax,0x93cae102
  4041e0:	lods   al,BYTE PTR ds:[esi]
  4041e1:	shr    DWORD PTR [eax],1
  4041e3:	mov    esp,0x8bae09fd
  4041e8:	push   0x1a7308bc
  4041ed:	adc    ebx,DWORD PTR [edi+eax*2]
  4041f0:	inc    ecx
  4041f1:	fdiv   DWORD PTR [ecx-0x80]
  4041f4:	or     eax,0x3ad92b88
  4041f9:	xor    BYTE PTR [edi-0x3d5be09],dh
  4041ff:	xor    dl,BYTE PTR [eax-0x29ef12fe]
  404205:	or     ebx,ebx
  404207:	jbe    0x4041e9
  404209:	imul   eax,DWORD PTR [esp+eiz*8+0x15],0xae0581ee
  404211:	in     eax,dx
  404212:	mov    bh,0xbc
  404214:	push   es
  404215:	int3   
  404216:	aad    0x9d
  404218:	jmp    0x404276
  40421a:	or     DWORD PTR [edx],ecx
  40421c:	push   edx
  40421d:	push   0x3c
  40421f:	push   cs
  404220:	nop
  404221:	pop    ss
  404222:	rcl    BYTE PTR [ebp+0x1fa63a30],0x25
  404229:	cmc    
  40422a:	aaa    
  40422b:	dec    ebp
  40422c:	cmp    esp,DWORD PTR [edx+0x2e9a4b6e]
  404232:	jp     0x404276
  404234:	mov    ds:0x77b84b74,al
  404239:	mov    ch,0xe3
  40423b:	pop    esp
  40423c:	stos   BYTE PTR es:[edi],al
  40423d:	push   ebp
  40423e:	add    al,0x76
  404240:	std    
  404241:	js     0x4042c1
  404243:	push   0x5c
  404245:	cmp    eax,0x3e7b40ed
  40424a:	and    ebx,DWORD PTR [ebp-0x6b]
  40424d:	jae    0x4041d4
  40424f:	(bad)  
  404250:	sbb    edx,DWORD PTR [ecx]
  404252:	std    
  404253:	test   eax,0x419e1b4b
  404258:	shr    BYTE PTR [edi+0xf],1
  40425b:	jmp    0x1196c6c4
  404260:	add    edi,esi
  404262:	push   esi
  404263:	popf   
  404264:	mov    ebx,0x46cf0c10
  404269:	cmp    al,0x54
  40426b:	push   0x733f9fa6
  404270:	in     eax,0xdf
  404272:	(bad)  
  404273:	push   0x72c01da6
  404278:	add    eax,0x7ee12ea0
  40427d:	adc    eax,esi
  40427f:	aas    
  404280:	and    al,0x39
  404282:	in     al,0xc3
  404284:	mov    ch,0x40
  404286:	test   edi,ecx
  404288:	scas   al,BYTE PTR es:[edi]
  404289:	jb     0x4042f2
  40428b:	in     eax,dx
  40428c:	inc    esp
  40428d:	mov    eax,ds:0x4a7a96f
  404292:	cmp    ch,dh
  404294:	repnz and al,0xfb
  404297:	lahf   
  404298:	dec    edx
  404299:	test   al,0x1a
  40429b:	mov    eax,ds:0x854e0f8f
  4042a0:	mov    ds:0x77e0fd6d,eax
  4042a5:	xchg   ecx,eax
  4042a6:	fistp  DWORD PTR [eax+0x3d]
  4042a9:	push   edx
  4042aa:	adc    eax,0x9afa5c26
  4042af:	ds push ebp
  4042b1:	inc    esi
  4042b2:	dec    eax
  4042b3:	mov    eax,ds:0x1b041788
  4042b8:	jnp    0x404310
  4042ba:	inc    ecx
  4042bb:	rcl    DWORD PTR [esi-0x28],1
  4042be:	and    DWORD PTR [esi+esi*1-0x24],edi
  4042c2:	sub    esi,ebp
  4042c4:	(bad)  
  4042c5:	mov    ch,0x4d
  4042c7:	sbb    edi,DWORD PTR [ebp+0x2c]
  4042ca:	sub    al,0x5a
  4042cc:	add    al,0xe5
  4042ce:	mov    esi,0xe7a45e3c
  4042d3:	inc    eax
  4042d4:	mov    al,0x2c
  4042d6:	and    al,0x85
  4042d8:	test   bl,ah
  4042da:	adc    eax,ecx
  4042dc:	push   ebp
  4042dd:	and    eax,ebp
  4042df:	ins    BYTE PTR es:[edi],dx
  4042e0:	inc    edi
  4042e1:	loopne 0x4042cc
  4042e3:	lods   eax,DWORD PTR ds:[esi]
  4042e4:	out    0x49,al
  4042e6:	and    BYTE PTR [edi],cl
  4042e8:	ffreep st(6)
  4042ea:	nop
  4042eb:	div    ebp
  4042ed:	in     eax,0xa
  4042ef:	xchg   ecx,eax
  4042f0:	push   ss
  4042f1:	imul   eax,esp,0xffffffb4
  4042f4:	jecxz  0x40431e
  4042f6:	or     DWORD PTR [edi-0x63752576],ebp
  4042fc:	inc    edx
  4042fd:	or     BYTE PTR cs:[esi+0x29],0x6d
  404302:	jmp    0xdc8f70cd
  404307:	and    al,0x7f
  404309:	and    BYTE PTR [ecx],bl
  40430b:	rol    BYTE PTR [esi+eax*1+0xbba754c],cl
  404312:	stos   WORD PTR es:[edi],ax
  404314:	jl     0x40437e
  404316:	scas   al,BYTE PTR es:[edi]
  404317:	stc    
  404318:	sahf   
  404319:	xor    BYTE PTR [ecx],cl
  40431b:	and    eax,edi
  40431d:	ret    0xdbba
  404320:	ins    DWORD PTR es:[edi],dx
  404321:	outs   dx,DWORD PTR ds:[esi]
  404322:	sbb    bl,ch
  404324:	xchg   ebp,eax
  404325:	js     0x4042bf
  404327:	or     dh,BYTE PTR [ebx]
  404329:	popa   
  40432a:	enter  0xcb4,0x17
  40432e:	cmp    dh,bh
  404330:	loopne 0x404351
  404332:	sbb    al,BYTE PTR [edi-0xb]
  404335:	dec    edx
  404336:	dec    esp
  404337:	dec    esp
  404338:	and    al,0x58
  40433a:	shr    DWORD PTR [edi-0x1499585e],1
  404340:	xor    eax,DWORD PTR [edx-0xe]
  404343:	fsubr  QWORD PTR [ebp+edx*4+0x7b]
  404347:	push   eax
  404348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404349:	mov    gs,WORD PTR [eax+eiz*2+0x18]
  40434d:	mov    edi,0x6420a1a9
  404352:	call   0x127bf0bf
  404357:	icebp  
  404358:	and    esp,eax
  40435a:	sub    DWORD PTR [eax+0x53],edx
  40435d:	dec    edi
  40435e:	or     ah,BYTE PTR [ebx]
  404360:	inc    ecx
  404361:	and    BYTE PTR [edx],ch
  404363:	ins    BYTE PTR es:[edi],dx
  404364:	mov    al,0x9a
  404366:	idiv   DWORD PTR [esi]
  404368:	ret    0x7acd
  40436b:	pushf  
  40436c:	inc    ecx
  40436d:	dec    esi
  40436e:	cmpxchg DWORD PTR [eax],edi
  404371:	sub    eax,0xdb18ebaa
  404376:	jae    0x404322
  404378:	int3   
  404379:	xchg   edx,eax
  40437a:	into   
  40437b:	outs   dx,BYTE PTR ds:[esi]
  40437c:	xchg   esp,eax
  40437d:	sbb    DWORD PTR [edx],edx
  40437f:	push   ecx
  404380:	jg     0x40433f
  404382:	jg     0x4043df
  404384:	xor    BYTE PTR [ebx+0x6d],cl
  404387:	imul   edi,esi,0x86a463b4
  40438d:	idiv   BYTE PTR [edi+eax*8+0x5772c1fb]
  404394:	cmp    al,0xc2
  404396:	dec    ebp
  404397:	ss (bad) 
  404399:	xchg   DWORD PTR [ecx+eax*8+0x2b],ebp
  40439d:	pop    ecx
  40439e:	adc    ecx,DWORD PTR [ecx-0x33]
  4043a1:	and    al,0x8
  4043a3:	or     ebp,DWORD PTR [esi+0x1a]
  4043a6:	mov    DWORD PTR [ebx+0x33],edi
  4043a9:	or     ebp,DWORD PTR [eax+0x1a]
  4043ac:	daa    
  4043ad:	stos   DWORD PTR es:[edi],eax
  4043ae:	or     al,0xcd
  4043b0:	push   es
  4043b1:	stos   DWORD PTR es:[edi],eax
  4043b2:	(bad)  [eax+eiz*1-0x48]
  4043b6:	jnp    0x4043f8
  4043b8:	push   esp
  4043b9:	rcr    BYTE PTR [edi+0x63],1
  4043bc:	in     eax,dx
  4043bd:	and    DWORD PTR ds:0x475f5d31,ecx
  4043c3:	pushf  
  4043c4:	fcomp  QWORD PTR [ecx-0x25]
  4043c7:	in     al,0xca
  4043c9:	clc    
  4043ca:	sbb    edx,DWORD PTR [esi+0xa28e777]
  4043d0:	xchg   bl,al
  4043d2:	mov    edi,0xa2a9a3ad
  4043d7:	fild   DWORD PTR [ebx+ebx*4]
  4043da:	dec    edi
  4043db:	in     al,dx
  4043dc:	and    eax,0xcb328ed2
  4043e1:	inc    edx
  4043e2:	pusha  
  4043e3:	repz in eax,dx
  4043e5:	jl     0x4043ac
  4043e7:	nop
  4043e8:	hlt    
  4043e9:	jnp    0x4043ce
  4043eb:	jno    0x40436f
  4043ed:	mov    WORD PTR [ebx],fs
  4043ef:	cld    
  4043f0:	xlat   BYTE PTR ds:[ebx]
  4043f1:	sub    eax,DWORD PTR [di-0x2923]
  4043f6:	sbb    ah,BYTE PTR [eax*1+0x5a30feae]
  4043fd:	sbb    eax,0xeba37ae3
  404402:	sti    
  404403:	push   edi
  404404:	push   ebx
  404405:	outs   dx,DWORD PTR ds:[esi]
  404406:	(bad)  
  404407:	sti    
  404408:	mov    ch,0xf2
  40440a:	mov    ch,0x48
  40440c:	loop   0x4043af
  40440e:	mov    ch,0xb5
  404410:	in     eax,0x64
  404412:	add    eax,DWORD PTR [ecx-0x7cea7a6a]
  404418:	xor    ah,0x1e
  40441b:	xor    esi,ebx
  40441d:	dec    esi
  40441e:	mov    DWORD PTR [eax+0x2c],edx
  404421:	xchg   ecx,eax
  404422:	push   ecx
  404423:	pop    ecx
  404424:	sbb    dh,BYTE PTR [ebx+0xa0c1bfd]
  40442a:	popa   
  40442b:	icebp  
  40442c:	(bad)
  40442f:	test   ebx,edi
  404431:	mov    cl,0x23
  404433:	and    bl,0x1e
  404436:	fwait
  404437:	adc    edi,DWORD PTR [eax-0x31ddd5e]
  40443d:	xor    eax,0xd73af0f1
  404442:	mov    dl,0xd3
  404444:	nop
  404445:	rcl    DWORD PTR [ebp+0x2a17e66f],cl
  40444b:	arpl   cx,bp
  40444d:	aaa    
  40444e:	sbb    al,0x71
  404450:	retf   0x161e
  404453:	add    BYTE PTR [eax],dl
  404455:	or     ebx,DWORD PTR [esi-0x24]
  404458:	cld    
  404459:	fs (bad) 
  40445b:	into   
  40445c:	cmc    
  40445d:	imul   esi,DWORD PTR ds:0xe1a83cb5,0x83ae3f92
  404467:	or     DWORD PTR [ecx+0x615b6433],edx
  40446d:	mov    ds:0x715232da,al
  404472:	dec    ecx
  404473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404474:	jns    0x40444d
  404476:	jnp    0x404403
  404478:	ins    BYTE PTR es:[edi],dx
  404479:	push   ecx
  40447a:	mov    edi,0x3057d6ff
  40447f:	sbb    al,0x29
  404481:	pop    ds
  404482:	into   
  404483:	inc    ecx
  404484:	test   ah,ch
  404486:	xlat   BYTE PTR ds:[ebx]
  404487:	jmp    0x4773:0xf9e4fe03
  40448e:	leave  
  40448f:	mov    eax,ds:0xdfd3aba6
  404494:	sub    al,BYTE PTR [ebx]
  404496:	aas    
  404497:	sar    DWORD PTR [ecx-0x2db21771],1
  40449d:	xchg   edi,eax
  40449e:	jl     0x404432
  4044a0:	jb     0x4044f6
  4044a2:	std    
  4044a3:	push   cs
  4044a4:	xchg   ebp,eax
  4044a5:	push   edx
  4044a6:	cmc    
  4044a7:	scas   eax,DWORD PTR es:[edi]
  4044a8:	and    al,0xc5
  4044aa:	popa   
  4044ab:	adc    BYTE PTR ss:[ebx],bl
  4044ae:	jne    0x40451b
  4044b0:	pushf  
  4044b1:	cmp    eax,0xfeb479c7
  4044b6:	hlt    
  4044b7:	fst    DWORD PTR [edx+0x39]
  4044ba:	jbe    0x404509
  4044bc:	test   BYTE PTR [ecx-0x5f],bh
  4044bf:	jg     0x4044d2
  4044c1:	inc    ecx
  4044c2:	mov    bh,0x4b
  4044c4:	mov    ds:0xb32e88dd,al
  4044c9:	icebp  
  4044ca:	mov    esi,DWORD PTR [edi+0xe]
  4044cd:	add    ebx,ecx
  4044cf:	imul   cl
  4044d1:	mov    esi,0xb5fa115c
  4044d6:	out    0xc9,al
  4044d8:	call   0xf380ddd9
  4044dd:	jno    0x404536
  4044df:	adc    bl,bl
  4044e1:	mov    esi,0xcc74fc22
  4044e6:	jnp    0x40452b
  4044e8:	xchg   edx,eax
  4044e9:	enter  0xb807,0x8d
  4044ed:	jnp    0x40453b
  4044ef:	pop    ecx
  4044f0:	push   esp
  4044f1:	fiadd  WORD PTR [esi-0xadb4433]
  4044f7:	xchg   edi,eax
  4044f8:	pop    ebx
  4044f9:	mov    bl,0xd9
  4044fb:	clc    
  4044fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044fd:	fimul  DWORD PTR [ecx]
  4044ff:	sahf   
  404500:	xchg   edx,eax
  404501:	data16 fwait
  404503:	jae    0x40456e
  404505:	cmp    al,bh
  404507:	(bad)  
  404508:	push   esp
  404509:	pop    edi
  40450a:	bound  ebx,QWORD PTR [ebp+0x16]
  40450d:	stc    
  40450e:	push   ds
  40450f:	mov    dh,0xe8
  404511:	push   esp
  404512:	and    al,0xcc
  404514:	add    edi,DWORD PTR [edi]
  404516:	and    BYTE PTR [edi-0x22],bh
  404519:	sti    
  40451a:	jns    0x40450b
  40451c:	push   0x19
  40451e:	jp     0x4044eb
  404520:	jecxz  0x4044a4
  404522:	lock push ebx
  404524:	and    al,0x11
  404526:	gs mov edi,0xd780f89b
  40452c:	outs   dx,DWORD PTR ds:[esi]
  40452d:	or     esi,edx
  40452f:	popa   
  404530:	adc    al,0x7c
  404532:	mov    edi,DWORD PTR [eax]
  404534:	addr16 loope 0x4044c7
  404537:	jge    0x4045a7
  404539:	sbb    eax,0xede72de9
  40453e:	push   edx
  40453f:	into   
  404540:	sub    eax,0xecd443d3
  404545:	sti    
  404546:	jbe    0x4044f6
  404548:	or     bl,dl
  40454a:	add    bl,0x5f
  40454d:	sbb    bl,BYTE PTR [edi-0x208aeb2f]
  404553:	jl     0x404504
  404555:	pop    DWORD PTR [ecx+0x2c]
  404558:	stos   BYTE PTR es:[edi],al
  404559:	or     DWORD PTR [ecx],edx
  40455b:	in     eax,dx
  40455c:	ja     0x404537
  40455e:	sub    bl,BYTE PTR [esi-0x3d3d48f4]
  404564:	and    BYTE PTR [edi+0x64],0x6a
  404568:	dec    edi
  404569:	jmp    0xce995ae7
  40456e:	push   esp
  40456f:	pop    es
  404570:	push   edi
  404571:	xchg   ebx,eax
  404572:	jge    0x404505
  404574:	imul   esi,DWORD PTR [ecx+0x2f90e6c2],0xffffffc3
  40457b:	or     eax,0x178e088c
  404580:	frstor [eax]
  404582:	(bad)  ds:0x50cd7488
  404588:	in     eax,0x3d
  40458a:	xchg   esi,eax
  40458b:	inc    ebp
  40458c:	int    0x98
  40458e:	cmp    BYTE PTR [edx-0x4a],ch
  404591:	or     BYTE PTR [ecx+ebp*4-0x4fa5c243],ah
  404598:	inc    ecx
  404599:	fcom   st(3)
  40459b:	(bad)  
  40459c:	call   0x87d08852
  4045a1:	inc    ebx
  4045a2:	sbb    BYTE PTR ds:0x7ca34e86,dh
  4045a8:	cmp    ebx,ebx
  4045aa:	and    eax,0xe2727b4d
  4045af:	sbb    BYTE PTR [eax-0x761465ee],0x48
  4045b6:	js     0x4045ae
  4045b8:	sbb    eax,0xf137a6a5
  4045bd:	sar    BYTE PTR ds:0xc207b668,cl
  4045c3:	sbb    edx,0xd477beab
  4045c9:	xchg   esi,eax
  4045ca:	inc    esp
  4045cb:	add    eax,0x1b66c145
  4045d0:	in     al,dx
  4045d1:	jnp    0x40461e
  4045d3:	jle    0x40456a
  4045d5:	(bad)  
  4045d6:	dec    esi
  4045d7:	adc    DWORD PTR [ebp-0x16],edi
  4045da:	imul   edx,esi,0x5b994cbe
  4045e0:	mov    edi,esp
  4045e2:	ins    BYTE PTR es:[edi],dx
  4045e3:	or     eax,0xc9539f0b
  4045e8:	mov    cl,0xcb
  4045ea:	push   ebp
  4045eb:	sbb    eax,0x694ca044
  4045f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045f1:	hlt    
  4045f2:	nop
  4045f3:	repz aad 0x92
  4045f6:	addr16 xor ax,0x86b2
  4045fb:	mov    edi,0x2746dda8
  404600:	adc    al,0xa8
  404602:	std    
  404603:	mov    edx,0x108adc04
  404608:	push   edi
  404609:	pop    ebx
  40460a:	gs stc 
  40460c:	fimul  WORD PTR [edx]
  40460e:	das    
  40460f:	(bad)  
  404610:	lahf   
  404611:	push   cs
  404612:	loopne 0x40468b
  404614:	inc    ecx
  404615:	test   eax,0x3f6135ee
  40461a:	cld    
  40461b:	icebp  
  40461c:	(bad)  
  40461d:	rol    DWORD PTR [ecx],cl
  40461f:	repnz int 0x75
  404622:	fld    QWORD PTR [edx]
  404624:	xor    eax,0x992f10f3
  404629:	jo     0x4045e9
  40462b:	xchg   esp,eax
  40462c:	int3   
  40462d:	xlat   BYTE PTR ds:[ebx]
  40462e:	mov    ?,WORD PTR [ecx-0x3a371b04]
  404634:	loope  0x404613
  404636:	int    0x25
  404638:	(bad)  
  404639:	stos   BYTE PTR es:[edi],al
  40463a:	repnz cmp ecx,edi
  40463d:	jge    0x4045d8
  40463f:	cmp    eax,0x6196301c
  404644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404645:	fwait
  404646:	xlat   BYTE PTR ds:[ebx]
  404647:	mov    DWORD PTR [ebp-0x37d3dbd6],0xb3e4bcd4
  404651:	cmc    
  404652:	jno    0x40466a
  404654:	dec    eax
  404655:	cmc    
  404656:	inc    ebp
  404657:	sbb    ah,BYTE PTR [edi+0x7bac9098]
  40465d:	sbb    BYTE PTR [ebp+0x2f],dh
  404660:	push   ss
  404661:	mov    eax,ss:0xa69af18
  404667:	sbb    DWORD PTR [ecx+0x65],0x559b6501
  40466e:	out    0x43,eax
  404670:	xor    eax,0xce4b4578
  404675:	mov    cl,0xe3
  404677:	call   0x3849f381
  40467c:	xchg   ecx,eax
  40467d:	mov    WORD PTR [edi],ds
  40467f:	adc    cl,ch
  404681:	cmc    
  404682:	jns    0x4046db
  404684:	jmp    0xa78aabff
  404689:	jb     0x404662
  40468b:	xor    BYTE PTR [edi-0x56f9f307],dh
  404691:	push   ds
  404692:	pop    edx
  404693:	cmp    al,0xa6
  404695:	hlt    
  404696:	sbb    al,0x6e
  404698:	js     0x40462a
  40469a:	and    edi,0x4dbe7754
  4046a0:	cmp    bl,dl
  4046a2:	(bad)
  4046a6:	add    bl,BYTE PTR [esi-0x653e279a]
  4046ac:	sub    eax,0xe3274b67
  4046b1:	push   ecx
  4046b2:	arpl   di,sp
  4046b4:	mov    ecx,0x9eced437
  4046b9:	adc    bh,BYTE PTR ds:0xbb8438a8
  4046bf:	mov    ebx,0xd08db779
  4046c4:	jns    0x4046bb
  4046c6:	js     0x4046a9
  4046c8:	pop    ss
  4046c9:	fcmovu st,st(7)
  4046cb:	fadd   DWORD PTR [edi+0x1f]
  4046ce:	scas   al,BYTE PTR es:[edi]
  4046cf:	mov    eax,ds:0x468e4b3e
  4046d4:	and    BYTE PTR [ebx+0x5],bl
  4046d7:	mov    edx,0xe1377f7b
  4046dc:	sbb    esi,ebx
  4046de:	sub    eax,DWORD PTR [ebx+0x4f]
  4046e1:	imul   edi,esp,0xffffff80
  4046e4:	ror    BYTE PTR ss:[ebx],1
  4046e7:	jbe    0x404702
  4046e9:	jo     0x40473c
  4046eb:	xor    ebx,eax
  4046ed:	mov    eax,0x663e876c
  4046f2:	xchg   esi,eax
  4046f3:	mov    cl,0x44
  4046f5:	sbb    bh,BYTE PTR ds:0xa33f8680
  4046fb:	cmc    
  4046fc:	in     al,dx
  4046fd:	jae    0x4046a0
  4046ff:	hlt    
  404700:	out    0xd2,al
  404702:	jb     0x404691
  404704:	mov    esp,0x6b26233a
  404709:	shr    edi,1
  40470b:	pushf  
  40470c:	push   eax
  40470d:	(bad)  
  40470f:	xor    al,dl
  404711:	push   es
  404712:	push   ecx
  404713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404714:	dec    ebx
  404715:	sti    
  404716:	shr    BYTE PTR [ebp-0x1b5ae5ec],cl
  40471c:	xor    edx,edi
  40471e:	and    BYTE PTR ds:[edx+0x2ce436a1],bl
  404725:	outs   dx,BYTE PTR ds:[esi]
  404726:	mov    ecx,0xcdbde161
  40472b:	mov    ah,0x8
  40472d:	mov    edx,0xb030fc4f
  404732:	dec    ebx
  404733:	push   ebp
  404734:	push   0xffffff93
  404736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404737:	xor    ebx,esp
  404739:	pushf  
  40473a:	add    BYTE PTR [edx],al
  40473c:	xchg   ecx,eax
  40473d:	(bad)  
  40473e:	stc    
  40473f:	sub    edx,ecx
  404741:	test   esi,esp
  404743:	push   eax
  404744:	sbb    eax,0x247a5a2e
  404749:	sbb    al,0x6b
  40474b:	cwde   
  40474c:	and    al,0xb7
  40474e:	ja     0x4047a3
  404750:	es pop edi
  404752:	mov    edi,0x3d11d01f
  404757:	lods   eax,DWORD PTR ds:[esi]
  404758:	cwde   
  404759:	aas    
  40475a:	adc    ch,ah
  40475c:	and    BYTE PTR [esi-0xe],ah
  40475f:	loop   0x404792
  404761:	iret   
  404762:	pop    ecx
  404763:	dec    edi
  404764:	iret   
  404765:	fmul   DWORD PTR [ebx]
  404767:	out    dx,al
  404768:	pop    edx
  404769:	sti    
  40476a:	stc    
  40476b:	rcl    BYTE PTR [esi+0x7497033a],0x88
  404772:	cmp    BYTE PTR [eax-0x16a57c13],ah
  404778:	sbb    dl,BYTE PTR [ebp+0x74]
  40477b:	ret    
  40477c:	mov    esp,0x9e214d49
  404781:	mov    ebx,0x54ca3619
  404786:	stos   DWORD PTR es:[edi],eax
  404787:	mov    ch,0x0
  404789:	test   DWORD PTR [edx+0x8],esp
  40478c:	cwde   
  40478d:	or     eax,0x2e0da76
  404792:	loope  0x404738
  404794:	icebp  
  404795:	or     BYTE PTR [ebx+eiz*4],ch
  404798:	add    ebx,edx
  40479a:	adc    al,0x94
  40479c:	stos   DWORD PTR es:[edi],eax
  40479d:	sbb    esp,edi
  40479f:	daa    
  4047a0:	aad    0x71
  4047a2:	std    
  4047a3:	call   0xa9e416da
  4047a8:	test   al,0x9
  4047aa:	add    BYTE PTR cs:[edx],ch
  4047ad:	inc    ebp
  4047ae:	lahf   
  4047af:	inc    edx
  4047b0:	mov    ch,0xf
  4047b2:	ja     0x4047c1
  4047b4:	sar    ecx,1
  4047b6:	xlat   BYTE PTR ds:[ebx]
  4047b7:	pop    edx
  4047b8:	sub    BYTE PTR [edi-0x177a7dc0],0x2a
  4047bf:	dec    ebp
  4047c0:	dec    esp
  4047c1:	clc    
  4047c2:	adc    al,0x29
  4047c4:	mov    eax,0xa9ec5ddf
  4047c9:	fdiv   st,st(1)
  4047cb:	mov    esp,DWORD PTR [ebx+0x3a]
  4047ce:	or     DWORD PTR [esi+0x43],0x48
  4047d2:	jae    0x40483a
  4047d4:	xchg   edx,eax
  4047d5:	ins    DWORD PTR es:[edi],dx
  4047d6:	mov    ebp,0x8b0f1a0c
  4047db:	adc    DWORD PTR [ebx+0x2ccd9942],esi
  4047e1:	out    dx,eax
  4047e2:	pop    ebp
  4047e3:	aaa    
  4047e4:	pop    gs
  4047e6:	or     eax,0xee88a2a8
  4047eb:	xchg   ecx,eax
  4047ec:	mov    al,ds:0x147b5ac7
  4047f1:	inc    edx
  4047f2:	dec    edi
  4047f3:	xchg   ecx,eax
  4047f4:	mov    eax,0x92dcc1bb
  4047f9:	adc    bh,BYTE PTR [esi-0x74]
  4047fc:	cs jp  0x404831
  4047ff:	adc    DWORD PTR [ebp+eax*8+0x59],esp
  404803:	dec    edx
  404804:	xor    cl,BYTE PTR [ecx]
  404806:	mov    edx,?
  404808:	(bad)  
  404809:	push   eax
  40480a:	repz push ss
  40480c:	cld    
  40480d:	mov    dh,0x5d
  40480f:	gs pop esi
  404811:	xor    edi,edi
  404813:	xor    esi,DWORD PTR [ebx-0x7e71bc91]
  404819:	push   ecx
  40481a:	mov    al,ds:0x40e7986b
  40481f:	int    0x48
  404821:	inc    esi
  404822:	sub    bh,al
  404824:	pop    ebx
  404825:	test   esp,ebx
  404827:	adc    eax,0x4c387d7d
  40482c:	xor    BYTE PTR [edx-0x4a],0x1a
  404830:	xchg   ebx,eax
  404831:	lods   eax,DWORD PTR ds:[esi]
  404832:	test   al,0xa3
  404834:	push   eax
  404835:	js     0x40480c
  404837:	xchg   DWORD PTR [esp],edx
  40483a:	adc    bh,BYTE PTR [esi-0x4971d8b5]
  404840:	sub    ebx,ecx
  404842:	mov    al,ds:0x4d5d2cc6
  404847:	and    al,0x82
  40484a:	test   edx,eax
  40484c:	mov    edi,0x3a4335
  404851:	pop    ds
  404852:	clc    
  404853:	add    bh,BYTE PTR [edi+0x7900074e]
  404859:	pop    ebx
  40485a:	add    DWORD PTR [ebx],esp
  40485c:	cmp    bh,BYTE PTR [edi]
  40485e:	sbb    DWORD PTR [ebx+0x2a],ebx
  404861:	xchg   edx,eax
  404862:	je     0x4047f2
  404864:	jb     0x4048be
  404866:	outs   dx,BYTE PTR ds:[esi]
  404867:	sbb    al,0x5f
  404869:	mov    eax,ds:0x1d686695
  40486e:	bnd jns 0x4047fe
  404871:	xchg   ebx,eax
  404872:	cmp    dh,0x46
  404875:	add    BYTE PTR [esi],bl
  404877:	xchg   DWORD PTR gs:[ebp+0x514d2ee],edx
  40487e:	sar    BYTE PTR [esi],cl
  404880:	repnz pop edi
  404882:	nop
  404883:	stos   BYTE PTR es:[edi],al
  404884:	inc    esi
  404885:	xor    edi,DWORD PTR [edx]
  404887:	jmp    0xd2547632
  40488c:	aad    0xf0
  40488e:	mov    esi,0x556d0fcf
  404893:	ret    
  404894:	sbb    BYTE PTR [edx],dl
  404896:	sub    bl,cl
  404898:	dec    ebx
  404899:	jb     0x40490e
  40489b:	test   eax,0x177cdc3c
  4048a0:	jno    0x40484e
  4048a2:	xor    al,0x8a
  4048a4:	inc    ebp
  4048a5:	dec    ecx
  4048a6:	iret   
  4048a7:	sbb    al,0xca
  4048a9:	aad    0x85
  4048ab:	lods   al,BYTE PTR ds:[esi]
  4048ac:	sub    BYTE PTR [ebx-0x3c],0xbd
  4048b0:	rcl    dh,0x61
  4048b3:	mov    ebp,0xe956016e
  4048b8:	push   es
  4048b9:	mov    ch,0x85
  4048bb:	rcr    ebp,cl
  4048bd:	fucom  st(4)
  4048bf:	mov    BYTE PTR [esi+0x41aab891],0x34
  4048c6:	sti    
  4048c7:	xchg   BYTE PTR [edi-0x55],dh
  4048ca:	sbb    bh,BYTE PTR [eax-0x65]
  4048cd:	stc    
  4048ce:	mov    edx,0x214f2e7a
  4048d3:	sub    al,0x33
  4048d5:	jo     0x4048da
  4048d7:	mov    esp,0x57b02772
  4048dc:	xor    DWORD PTR [esi+0x3c],ecx
  4048df:	loop   0x40493b
  4048e1:	jl     0x40495f
  4048e3:	dec    edx
  4048e4:	pop    es
  4048e5:	adc    al,0x10
  4048e7:	es push ss
  4048e9:	add    bh,0x7a
  4048ec:	sbb    dh,BYTE PTR [edi+0x3a40eb70]
  4048f2:	popfw  
  4048f4:	or     esp,ebp
  4048f6:	mov    ah,0xc6
  4048f8:	leave  
  4048f9:	aad    0x37
  4048fb:	jge    0x4048c2
  4048fd:	call   0x1689:0xb057b0d6
  404904:	xchg   esp,eax
  404905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404906:	(bad)  
  404907:	mov    ebp,DWORD PTR [esi]
  404909:	mov    al,BYTE PTR [edi+0x78]
  40490c:	lea    esi,[esp+ecx*2+0x639782c8]
  404913:	cmp    cl,BYTE PTR [edi]
  404915:	push   ss
  404916:	stos   DWORD PTR es:[edi],eax
  404917:	cld    
  404918:	add    al,0x64
  40491a:	mov    WORD PTR [edx-0x4caaab20],ss
  404920:	in     al,dx
  404921:	mov    ds:0x43140408,eax
  404926:	jmp    0x54ba:0x77cbb19b
  40492d:	icebp  
  40492e:	mov    dl,0x5d
  404930:	jne    0x40497f
  404932:	add    BYTE PTR ds:0x3d4aeffd,ch
  404938:	std    
  404939:	mov    eax,0x1c8c271c
  40493e:	cmc    
  40493f:	cwde   
  404940:	inc    edx
  404941:	ror    DWORD PTR [ebp-0x40],cl
  404944:	imul   esp,DWORD PTR [ebp+0x78],0xffffffb7
  404948:	xor    ah,bh
  40494a:	dec    esp
  40494b:	push   edi
  40494c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40494d:	lahf   
  40494e:	data16 mov bh,0x67
  404951:	aam    0x3e
  404953:	ds mov esp,eax
  404956:	loopne 0x404984
  404958:	stc    
  404959:	push   edi
  40495a:	push   ds
  40495b:	fnstenv [ebp+ebx*1-0xb783629]
  404962:	retf   0xa89f
  404965:	lahf   
  404966:	loope  0x4048e8
  404968:	adc    DWORD PTR [esi*8-0x2eb4e57],ecx
  40496f:	in     eax,0xcd
  404971:	mov    ebx,0x6b61e583
  404976:	out    0x50,al
  404978:	mov    ebp,edi
  40497a:	loopne 0x4049d1
  40497c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40497d:	fisubr WORD PTR [ebp-0x7325ec78]
  404983:	int    0xa7
  404985:	cmp    al,0x4f
  404987:	cs mov dh,0xce
  40498a:	sub    DWORD PTR [eax-0x45],edi
  40498d:	push   ecx
  40498e:	loope  0x4049df
  404990:	fst    DWORD PTR [ebx-0x5c]
  404993:	xchg   edx,eax
  404994:	cwde   
  404995:	mov    edi,0x814502f8
  40499a:	stos   DWORD PTR es:[edi],eax
  40499b:	xchg   esp,eax
  40499c:	pop    esp
  40499d:	stc    
  40499e:	mov    edi,0x1bbd8a63
  4049a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049a4:	call   0xac9e:0x47c075ce
  4049ab:	push   0x3d
  4049ad:	(bad)  
  4049ae:	addr16 mov bl,0x9
  4049b1:	bound  ebp,QWORD PTR [ebx+0x70]
  4049b4:	out    dx,al
  4049b5:	(bad)  
  4049b6:	xchg   edx,eax
  4049b7:	lods   al,BYTE PTR ds:[esi]
  4049b8:	jp     0x4049fc
  4049ba:	int3   
  4049bb:	test   eax,0xbde95be5
  4049c0:	into   
  4049c1:	and    al,BYTE PTR [eax-0x19]
  4049c4:	ret    0xd3b5
  4049c7:	sub    bl,al
  4049c9:	mov    bh,BYTE PTR [esi]
  4049cb:	and    DWORD PTR ds:0x15b878ec,esi
  4049d1:	clc    
  4049d2:	outs   dx,DWORD PTR ds:[esi]
  4049d3:	int3   
  4049d4:	aam    0x6e
  4049d6:	addr16 inc ebx
  4049d8:	push   edi
  4049d9:	loop   0x404a2d
  4049db:	or     DWORD PTR ds:0xb57e29b0,ebp
  4049e1:	sbb    ebp,DWORD PTR [edx+0x38537678]
  4049e7:	inc    edx
  4049e8:	pop    esp
  4049e9:	and    DWORD PTR [ecx],edi
  4049eb:	adc    al,0xb
  4049ed:	cmp    al,0x78
  4049ef:	xor    al,0xa1
  4049f1:	std    
  4049f2:	mov    eax,0x24d48670
  4049f7:	xor    ebp,eax
  4049f9:	fstp   DWORD PTR [esi+0x2f2f47f2]
  4049ff:	xchg   DWORD PTR [esi-0x3dd425f8],eax
  404a05:	stos   BYTE PTR es:[edi],al
  404a06:	cs mov ch,0xdf
  404a09:	mov    ah,0x1d
  404a0b:	pusha  
  404a0c:	das    
  404a0d:	sub    ebp,DWORD PTR [edi+0x7a]
  404a10:	(bad)  
  404a11:	sbb    bl,dh
  404a13:	ja     0x4049cb
  404a15:	(bad)  
  404a16:	gs dec esp
  404a18:	push   ebp
  404a19:	popa   
  404a1a:	cmp    BYTE PTR [edi],ch
  404a1c:	ja     0x4049c3
  404a1e:	aas    
  404a1f:	in     eax,0x8a
  404a21:	inc    ebp
  404a22:	sub    eax,0xfc35ef43
  404a27:	iret   
  404a28:	test   BYTE PTR ds:0x276fc6cb,ah
  404a2e:	jno    0x404a0c
  404a30:	scas   al,BYTE PTR es:[edi]
  404a31:	xchg   edi,eax
  404a32:	out    dx,eax
  404a33:	jo     0x404a06
  404a35:	popf   
  404a36:	sub    esi,DWORD PTR [edi]
  404a38:	shl    DWORD PTR [esi],1
  404a3a:	cdq    
  404a3b:	hlt    
  404a3c:	xor    al,0xf1
  404a3e:	in     al,0x4e
  404a40:	imul   ebx,DWORD PTR [edi-0x6fec5a27],0xffffffb8
  404a47:	mov    eax,0x5d37b8d4
  404a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a4d:	mov    ecx,0x9dcbc5a
  404a52:	mov    esp,?
  404a54:	mov    eax,ds:0xc43783ed
  404a59:	pop    ecx
  404a5a:	test   DWORD PTR [esp+ecx*8+0x6a],0x2b3ba559
  404a62:	ins    DWORD PTR es:[edi],dx
  404a63:	enter  0x8b26,0xdf
  404a67:	aaa    
  404a68:	sub    al,0xa5
  404a6a:	cmp    eax,0xaaecdf7
  404a6f:	js     0x404a87
  404a71:	cli    
  404a72:	sbb    esi,ecx
  404a74:	std    
  404a75:	jae    0x404a69
  404a77:	or     BYTE PTR [ecx+0x6d50f8f8],ch
  404a7d:	mov    ebx,0xf89ce720
  404a82:	sbb    DWORD PTR [ebx+eiz*2-0x58],ebx
  404a86:	xchg   ebp,eax
  404a87:	daa    
  404a88:	lods   eax,DWORD PTR ds:[esi]
  404a89:	and    ch,BYTE PTR [ebx-0x57350b6b]
  404a8f:	test   eax,0x3985a1aa
  404a94:	pop    eax
  404a95:	mov    WORD PTR [ebp+0x72],?
  404a98:	sbb    edx,DWORD PTR [edx-0x75]
  404a9b:	jle    0x404abd
  404a9d:	push   eax
  404a9e:	dec    esp
  404a9f:	sub    ch,BYTE PTR [esi-0x4f]
  404aa2:	add    al,0xba
  404aa4:	jge    0x404abf
  404aa6:	mov    ecx,0xe784b433
  404aab:	ret    0xf146
  404aae:	cmp    al,BYTE PTR [ecx]
  404ab0:	int    0x2a
  404ab2:	fcomp  QWORD PTR [edi+0x2aba7e04]
  404ab8:	pop    esp
  404ab9:	or     BYTE PTR [ecx],0xc3
  404abc:	push   edi
  404abd:	or     eax,DWORD PTR [edx-0x2325586b]
  404ac3:	std    
  404ac4:	rcr    cl,0x89
  404ac7:	scas   al,BYTE PTR es:[edi]
  404ac8:	inc    esp
  404ac9:	nop
  404aca:	inc    ecx
  404acb:	lea    esi,ds:0xfae539b
  404ad1:	and    edi,DWORD PTR [edx-0x5f90def5]
  404ad7:	stc    
  404ad8:	xor    eax,0xffff9f45
  404add:	pop    eax
  404ade:	aad    0xe9
  404ae0:	lea    edx,[esi]
  404ae2:	pop    edx
  404ae3:	or     edi,esp
  404ae5:	pop    es
  404ae6:	adc    ah,BYTE PTR [eax+eax*2+0x4e]
  404aea:	push   eax
  404aeb:	xor    edi,0xbec39739
  404af1:	loop   0x404b46
  404af3:	dec    esi
  404af4:	es sahf 
  404af6:	in     eax,dx
  404af7:	vprotw ymm6,xmm6,[edx+0x5]
  404afd:	dec    esi
  404afe:	mov    cl,0xed
  404b00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b01:	mov    edx,0xbf902b7c
  404b06:	in     eax,0x56
  404b08:	mov    dl,0xf1
  404b0a:	cmp    bh,BYTE PTR [esi]
  404b0c:	das    
  404b0d:	push   esi
  404b0e:	out    dx,al
  404b0f:	mul    BYTE PTR [edi+0x34]
  404b12:	outs   dx,DWORD PTR ds:[esi]
  404b13:	adc    DWORD PTR [ecx-0x436951df],edi
  404b19:	pop    ebp
  404b1a:	inc    esp
  404b1b:	imul   ebx,DWORD PTR [ecx],0x5770d0e8
  404b21:	pushf  
  404b22:	scas   eax,DWORD PTR es:[edi]
  404b23:	nop
  404b24:	jecxz  0x404b66
  404b26:	arpl   WORD PTR [ecx+0x7c3ad76f],si
  404b2c:	into   
  404b2d:	fist   WORD PTR [eax]
  404b2f:	mov    dl,0x74
  404b31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b32:	fimul  DWORD PTR [ecx-0x175af815]
  404b38:	dec    ecx
  404b39:	jne    0x404bb4
  404b3b:	xor    eax,0xfa3108af
  404b40:	mov    esp,0xc3e7edaf
  404b45:	sub    ecx,DWORD PTR [edx-0x4e8cb531]
  404b4b:	pop    esi
  404b4c:	fucomip st,st(0)
  404b4e:	test   al,0x48
  404b50:	mov    edi,0x4ceca45d
  404b55:	push   DWORD PTR [eax+ecx*2-0x57]
  404b59:	push   0x5e
  404b5b:	jp     0x404b3c
  404b5d:	cwde   
  404b5e:	lods   al,BYTE PTR gs:[esi]
  404b60:	inc    edi
  404b61:	jmp    0x1c9a:0xc6857949
  404b68:	outs   dx,BYTE PTR ds:[esi]
  404b69:	dec    edx
  404b6a:	fdivrp st(2),st
  404b6c:	das    
  404b6d:	xchg   edi,eax
  404b6e:	jo     0x404bda
  404b70:	and    al,0x6e
  404b72:	sahf   
  404b73:	sbb    DWORD PTR [ecx],ebx
  404b75:	mov    bl,0xfb
  404b77:	jmp    0x404bf3
  404b79:	xchg   al,dl
  404b7b:	int    0x1f
  404b7d:	lods   eax,DWORD PTR ds:[esi]
  404b7e:	pop    ebp
  404b7f:	mov    ds:0x734ce055,al
  404b84:	mov    al,0xcf
  404b86:	call   0xa9856f8c
  404b8b:	ins    DWORD PTR es:[edi],dx
  404b8c:	sbb    ebp,esi
  404b8e:	inc    esp
  404b8f:	add    al,0xac
  404b91:	pop    ebp
  404b92:	retf   
  404b93:	aad    0xfd
  404b95:	xor    DWORD PTR [edx+0x6f],0x76
  404b99:	mov    ds:0xe0857286,al
  404b9e:	sbb    al,0x94
  404ba0:	iret   
  404ba1:	push   ds
  404ba2:	or     esp,esi
  404ba4:	js     0x404b2d
  404ba6:	sbb    edi,DWORD PTR [ebx-0x47]
  404ba9:	adc    bh,cl
  404bab:	ins    BYTE PTR es:[edi],dx
  404bac:	out    dx,eax
  404bad:	ret    
  404bae:	pop    esp
  404baf:	popf   
  404bb0:	pop    es
  404bb1:	mov    ebx,0x93d3ac7d
  404bb6:	mov    eax,0x1ef1399
  404bbb:	xchg   ebp,eax
  404bbc:	mov    ch,0x91
  404bbe:	cmp    BYTE PTR [edx-0x41740693],dh
  404bc4:	cli    
  404bc5:	jno    0x404bf2
  404bc7:	retf   0x5082
  404bca:	jp     0x404bc8
  404bcc:	or     DWORD PTR fs:[ecx-0x7c],0xbed48d7c
  404bd4:	fisub  DWORD PTR [ebx-0x39111f02]
  404bda:	jns    0x404b5f
  404bdc:	in     al,0x4b
  404bde:	mov    ebp,0x230c15f8
  404be3:	xchg   esi,eax
  404be4:	sbb    BYTE PTR [ebx],bh
  404be6:	pop    esi
  404be7:	outs   dx,BYTE PTR ds:[esi]
  404be8:	cwde   
  404be9:	ret    0x54ea
  404bec:	jl     0x404bfc
  404bee:	loope  0x404bf1
  404bf0:	dec    eax
  404bf1:	adc    esi,edx
  404bf3:	leave  
  404bf4:	retf   
  404bf5:	jl     0x404b85
  404bf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bf8:	pop    esp
  404bf9:	sub    edi,esp
  404bfb:	ret    
  404bfc:	call   0xd5b1:0xf353eea
  404c03:	push   ebx
  404c04:	ds scas eax,DWORD PTR es:[edi]
  404c06:	sbb    al,0xde
  404c08:	inc    esi
  404c09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c0a:	rep stos DWORD PTR es:[edi],eax
  404c0c:	pop    esi
  404c0d:	ins    DWORD PTR es:[edi],dx
  404c0e:	jp     0x404c8d
  404c10:	test   DWORD PTR [ecx],0xb84ef026
  404c16:	pop    ecx
  404c17:	inc    esi
  404c18:	lds    edi,FWORD PTR [eax+0x4f8476cf]
  404c1e:	add    eax,0xc4f24b2d
  404c23:	into   
  404c24:	sub    al,0x70
  404c26:	(bad)  
  404c28:	shl    DWORD PTR fs:[edi],0xf0
  404c2c:	sub    al,0xf2
  404c2e:	in     al,dx
  404c2f:	mov    cl,0x78
  404c31:	xor    eax,0x6e971c3b
  404c36:	push   edx
  404c37:	cmp    BYTE PTR [ebx],dl
  404c39:	inc    ebx
  404c3a:	inc    ebp
  404c3b:	sub    esp,DWORD PTR [esi+eiz*1-0x67]
  404c3f:	adc    DWORD PTR [ecx],esi
  404c41:	xchg   ebp,eax
  404c42:	push   edi
  404c43:	mov    ?,esi
  404c45:	retf   
  404c46:	sbb    edx,DWORD PTR [ebx-0x7d]
  404c49:	jnp    0x404bf8
  404c4b:	push   es
  404c4c:	cdq    
  404c4d:	dec    ecx
  404c4e:	int    0xea
  404c50:	stos   BYTE PTR es:[edi],al
  404c51:	sub    bl,BYTE PTR [edi-0x5dfb6997]
  404c57:	dec    eax
  404c58:	bound  esp,QWORD PTR [ebp-0x5f]
  404c5b:	ror    BYTE PTR [edx+0x3e74c274],0x11
  404c62:	xchg   edx,eax
  404c63:	aam    0x96
  404c65:	mov    ds:0xde3a6f3b,al
  404c6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c6b:	add    eax,0x13af8d1e
  404c70:	test   ecx,eax
  404c72:	dec    edx
  404c73:	mov    ah,0x13
  404c75:	stos   DWORD PTR es:[edi],eax
  404c76:	pop    ecx
  404c77:	jae    0x404cec
  404c79:	ja     0x404c90
  404c7b:	add    BYTE PTR ds:0x67a019f1,ah
  404c81:	lea    ebx,[ecx+0x68]
  404c84:	mov    ecx,0xbb2f2e3
  404c89:	mov    al,ds:0xc1d28547
  404c8e:	pop    ecx
  404c8f:	fistp  WORD PTR [edi]
  404c91:	jno    0x404c95
  404c93:	mov    WORD PTR [edi],gs
  404c95:	pop    es
  404c96:	sbb    esi,DWORD PTR [ebx+0x2b]
  404c99:	adc    esp,DWORD PTR [eax]
  404c9b:	(bad)  
  404c9c:	out    dx,al
  404c9d:	push   edi
  404c9e:	dec    edx
  404c9f:	bnd jg 0x404cec
  404ca2:	push   ecx
  404ca3:	cmp    esp,DWORD PTR [esi]
  404ca5:	sbb    al,0xa
  404ca7:	mov    ebp,0x7450474d
  404cac:	fucomip st,st(1)
  404cae:	pop    esp
  404caf:	adc    eax,0xbb31ebf4
  404cb4:	xor    ch,ch
  404cb6:	loope  0x404c8a
  404cb8:	xchg   esp,eax
  404cb9:	call   0x7836b18d
  404cbe:	lea    edx,[ebx]
  404cc0:	jo     0x404cb7
  404cc2:	shl    BYTE PTR [esi],cl
  404cc4:	out    0x48,eax
  404cc6:	inc    esi
  404cc7:	mov    dh,0x55
  404cc9:	aam    0x71
  404ccb:	inc    edx
  404ccc:	or     BYTE PTR [edi+0x37],ch
  404ccf:	fimul  WORD PTR [ecx-0x4c6b9c8e]
  404cd5:	jl     0x404d0f
  404cd7:	and    al,0x23
  404cd9:	les    esp,FWORD PTR [ebp+0x6b1c0964]
  404cdf:	mov    dl,dl
  404ce1:	adc    BYTE PTR [esi],bh
  404ce3:	push   ds
  404ce4:	stos   DWORD PTR es:[edi],eax
  404ce5:	int3   
  404ce6:	aas    
  404ce7:	xor    DWORD PTR [edi+0x293368e9],esp
  404ced:	pop    ebx
  404cee:	out    dx,eax
  404cef:	in     eax,0xc9
  404cf1:	stos   BYTE PTR es:[edi],al
  404cf2:	sub    eax,0x8cafa090
  404cf7:	mov    eax,ds:0xfeb560a6
  404cfc:	xor    BYTE PTR [ecx+0x3b],ch
  404cff:	jmp    0x4efe7b4b
  404d04:	das    
  404d05:	cdq    
  404d06:	iret   
  404d07:	lahf   
  404d08:	push   ds
  404d09:	inc    esi
  404d0a:	ret    0xa29e
  404d0d:	push   edi
  404d0e:	mov    bl,bh
  404d10:	leave  
  404d11:	push   eax
  404d12:	imul   edx,DWORD PTR [ebx+0x28],0xa4063867
  404d19:	jecxz  0x404d06
  404d1b:	cmp    esi,DWORD PTR [ecx+0x3d]
  404d1e:	xor    cl,BYTE PTR [esi-0x2e]
  404d21:	scas   al,BYTE PTR es:[edi]
  404d22:	cdq    
  404d23:	add    eax,0xee975931
  404d28:	pusha  
  404d29:	xchg   esi,ebx
  404d2b:	out    dx,al
  404d2c:	fisttp WORD PTR [edi+0x47]
  404d2f:	pop    ecx
  404d30:	push   ebp
  404d31:	xchg   BYTE PTR [edi-0x7a],bh
  404d34:	(bad)  
  404d35:	call   FWORD PTR ds:0x82b40a08
  404d3b:	out    dx,al
  404d3c:	push   ebp
  404d3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d3e:	(bad)  
  404d3f:	sbb    eax,DWORD PTR [ecx-0x79]
  404d42:	mov    eax,0x8ecbb7e3
  404d47:	dec    ecx
  404d48:	mov    edx,0xd3f158da
  404d4d:	push   ss
  404d4e:	adc    al,0x7d
  404d50:	mov    cl,0x6f
  404d52:	mov    dl,0x5d
  404d54:	or     eax,0xe75437da
  404d59:	lea    esp,[edx+0x7c846dae]
  404d5f:	xor    eax,0x69d22313
  404d64:	dec    ebp
  404d65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d66:	sbb    bl,BYTE PTR [ebp-0x140f113]
  404d6c:	jnp    0x404dd0
  404d6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d6f:	loop   0x404d99
  404d71:	jp     0x404dea
  404d73:	outs   dx,BYTE PTR ds:[esi]
  404d74:	es (bad) 
  404d76:	out    dx,eax
  404d77:	xchg   bh,bl
  404d79:	in     al,0x9b
  404d7b:	popa   
  404d7c:	mov    eax,DWORD PTR [eax-0x22e8398c]
  404d82:	dec    ebx
  404d83:	push   esi
  404d84:	pop    edi
  404d85:	out    dx,al
  404d86:	xor    eax,0xdb1e6468
  404d8b:	push   ds
  404d8c:	std    
  404d8d:	cmp    eax,0xf4e01c02
  404d92:	sub    DWORD PTR [edx+0x1ed2249e],eax
  404d98:	inc    edx
  404d99:	cmp    al,0x6d
  404d9b:	scas   al,BYTE PTR es:[edi]
  404d9c:	jge    0x404d5b
  404d9e:	daa    
  404d9f:	addr16 pop eax
  404da1:	dec    ebx
  404da2:	xchg   DWORD PTR [ebx+edi*2],ecx
  404da5:	shl    DWORD PTR [eax+0x4f],1
  404da8:	outs   dx,BYTE PTR ds:[esi]
  404da9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404daa:	mov    ebx,0xfee87a1d
  404daf:	fild   DWORD PTR [edx-0x4915a194]
  404db5:	xor    eax,0x8f369a9c
  404dba:	leave  
  404dbb:	ret    
  404dbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dbd:	clc    
  404dbe:	mov    esp,0x6fd3e4c5
  404dc3:	jl     0x404e26
  404dc5:	jno    0x404df1
  404dc7:	cmp    al,0x47
  404dc9:	or     al,0x56
  404dcb:	arpl   WORD PTR [edi-0x5cd67ce0],bp
  404dd1:	pop    ds
  404dd2:	jl     0x404d87
  404dd4:	int    0xcd
  404dd6:	in     al,dx
  404dd7:	lods   eax,DWORD PTR ds:[esi]
  404dd8:	push   0x4f
  404dda:	jne    0x404df5
  404ddc:	popf   
  404ddd:	add    DWORD PTR [ebx-0x2d],edx
  404de0:	(bad)  
  404de2:	mov    esi,0x55801f75
  404de7:	sub    eax,esp
  404de9:	out    0x47,al
  404deb:	data16 and dl,BYTE PTR [eax]
  404dee:	dec    esp
  404def:	mov    dl,0xd3
  404df1:	fadd   QWORD PTR [ebp-0x3f7da9b3]
  404df7:	popf   
  404df8:	scas   eax,DWORD PTR es:[edi]
  404df9:	inc    edi
  404dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dfb:	ret    
  404dfc:	adc    DWORD PTR [ebp+0x1f],edi
  404dff:	aam    0xe2
  404e01:	sti    
  404e02:	jl     0x404db8
  404e04:	xchg   ebp,eax
  404e05:	test   esi,0xd4f9e99c
  404e0b:	or     eax,DWORD PTR [eax+eax*8]
  404e0e:	out    dx,al
  404e0f:	mov    BYTE PTR [ecx],dh
  404e11:	out    dx,eax
  404e12:	clc    
  404e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e14:	pop    ecx
  404e15:	add    edx,ebp
  404e17:	inc    edi
  404e18:	jne    0x404e4b
  404e1a:	in     al,0x44
  404e1c:	dec    esp
  404e1d:	cmp    BYTE PTR [ebx-0x20df3aea],ch
  404e23:	into   
  404e24:	fldcw  WORD PTR [ebx-0x24ac1c89]
  404e2a:	or     al,0xfc
  404e2c:	retf   
  404e2d:	or     BYTE PTR [esi+0x54],dl
  404e30:	(bad)  
  404e31:	jmp    0x189d:0xe8a7dcfc
  404e38:	adc    BYTE PTR [ebx],al
  404e3a:	loope  0x404e94
  404e3c:	pop    es
  404e3d:	mov    bl,0xf1
  404e3f:	mov    dl,0xed
  404e41:	ror    DWORD PTR [edi-0x37d1de5a],1
  404e47:	into   
  404e48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e49:	and    al,0xba
  404e4b:	sbb    BYTE PTR [ebx+0x20],0x8b
  404e4f:	sub    bh,BYTE PTR [ebx-0x72af31e0]
  404e55:	inc    edx
  404e56:	xchg   ecx,eax
  404e57:	inc    edx
  404e58:	jp     0x404e34
  404e5a:	outs   dx,BYTE PTR ds:[esi]
  404e5b:	inc    ebp
  404e5c:	xchg   edi,eax
  404e5d:	pop    es
  404e5e:	dec    ebp
  404e5f:	adc    DWORD PTR [edx-0x4f5f7999],0x69
  404e66:	push   edi
  404e67:	cmp    DWORD PTR [esp+ecx*4-0x4d306d29],edi
  404e6e:	rcr    BYTE PTR [eax+0x4ade6ea],1
  404e74:	rcl    DWORD PTR ds:0xf0961cea,1
  404e7a:	mov    BYTE PTR [esi-0xa],bl
  404e7d:	push   0xffffff8f
  404e7f:	aad    0x4a
  404e81:	movaps XMMWORD PTR [esi+0x4f],xmm6
  404e85:	stos   BYTE PTR es:[edi],al
  404e86:	arpl   bp,di
  404e88:	jg     0x404e34
  404e8a:	shl    edi,cl
  404e8c:	xor    ch,BYTE PTR [edx]
  404e8e:	fisubr WORD PTR [edi+0x9739830]
  404e94:	(bad)  
  404e95:	xor    edi,DWORD PTR [eax+0x7f]
  404e98:	mov    esp,0xb488897d
  404e9d:	inc    eax
  404e9e:	icebp  
  404e9f:	and    al,0xa8
  404ea1:	sti    
  404ea2:	pusha  
  404ea3:	push   0x71
  404ea5:	add    DWORD PTR [esi],esi
  404ea7:	pop    esp
  404ea8:	loope  0x404e32
  404eaa:	push   edx
  404eab:	add    DWORD PTR [edi-0x4368a20a],ebx
  404eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eb2:	push   esp
  404eb3:	cmp    cl,bl
  404eb5:	inc    ecx
  404eb6:	test   BYTE PTR [esi+0xf],cl
  404eb9:	or     al,0x5d
  404ebb:	mov    DWORD PTR [edx+0x57],edi
  404ebe:	imul   esp,DWORD PTR [edx+0x500e126b],0x2da7f04b
  404ec8:	out    0x3c,eax
  404eca:	inc    edi
  404ecb:	mov    esp,?
  404ecd:	imul   esi,DWORD PTR [edi],0x40
  404ed0:	mov    edi,0xb5bf9956
  404ed5:	cmp    DWORD PTR [edi+0x4e],0xe2de6c4a
  404edc:	and    ecx,0x20
  404edf:	iret   
  404ee0:	jmp    0x1042:0x1263c3ab
  404ee7:	jmp    0xba75:0xd35c302f
  404eee:	ficom  WORD PTR [ebp-0x22f6d3b8]
  404ef4:	inc    ecx
  404ef5:	pop    eax
  404ef6:	retf   
  404ef7:	cmp    al,BYTE PTR ds:0x5beef8a9
  404efd:	cdq    
  404efe:	push   ecx
  404eff:	pop    edi
  404f00:	loop   0x404e98
  404f02:	inc    eax
  404f03:	(bad)
  404f06:	jle    0x404ea5
  404f08:	jle    0x404ebd
  404f0a:	jmp    0x1d43:0xae0b1e3d
  404f11:	mov    esi,0x46bfe034
  404f16:	out    0xaa,al
  404f18:	inc    edx
  404f19:	jle    0x404ed1
  404f1b:	ret    
  404f1c:	inc    ebx
  404f1d:	pop    ss
  404f1e:	pop    edi
  404f1f:	push   es
  404f20:	push   0x19
  404f22:	push   ecx
  404f23:	xchg   edi,eax
  404f24:	imul   edx,DWORD PTR [ebp-0x59],0xb24fdda5
  404f2b:	mov    bl,0x28
  404f2d:	bound  ebx,QWORD PTR [eax-0x55]
  404f30:	mov    bl,0x4b
  404f32:	inc    esp
  404f33:	iret   
  404f34:	and    BYTE PTR [eax],bh
  404f36:	xchg   cl,ah
  404f38:	or     ebx,DWORD PTR [edx+0x7500e82b]
  404f3e:	and    BYTE PTR [esi-0x33556925],dh
  404f44:	mov    bl,0x14
  404f46:	ffreep st(3)
  404f48:	pop    edx
  404f49:	xlat   BYTE PTR ds:[ebx]
  404f4a:	daa    
  404f4b:	data16 test cl,bh
  404f4e:	nop
  404f4f:	sbb    eax,0x1a326bed
  404f54:	and    BYTE PTR [edx-0x7b],bh
  404f57:	xchg   esi,eax
  404f58:	mov    BYTE PTR [edx-0x67e1a8f8],cl
  404f5e:	fisttp WORD PTR [eax-0x28a81ad8]
  404f64:	call   0x26f538f3
  404f69:	pop    ecx
  404f6a:	cmp    DWORD PTR [ecx-0x2d],ecx
  404f6d:	adc    BYTE PTR [ecx],0x67
  404f70:	mov    DWORD PTR [ebx+esi*8-0x46],edx
  404f74:	jp     0x404f04
  404f76:	popa   
  404f77:	add    cl,BYTE PTR [esi]
  404f79:	mov    ecx,0xe2b104db
  404f7e:	in     eax,dx
  404f7f:	fwait
  404f80:	inc    ebx
  404f81:	in     al,0x73
  404f83:	xchg   ebp,eax
  404f84:	mov    dh,0xe4
  404f86:	jg     0x404f9c
  404f88:	pushf  
  404f89:	push   es
  404f8a:	fnstsw WORD PTR [edx+0x34]
  404f8d:	push   esi
  404f8e:	dec    ecx
  404f8f:	out    dx,eax
  404f90:	jle    0x404f59
  404f92:	sti    
  404f93:	stos   BYTE PTR es:[edi],al
  404f94:	xchg   ebp,eax
  404f95:	adc    al,0x2e
  404f97:	adc    DWORD PTR [esi+esi*4],ebx
  404f9a:	in     eax,0xff
  404f9c:	adc    DWORD PTR [ebp-0x5b],esi
  404f9f:	sub    DWORD PTR [eax-0x2931007c],ebx
  404fa5:	or     al,0x79
  404fa7:	clc    
  404fa8:	imul   BYTE PTR [ebp-0x374b0ce0]
  404fae:	mov    ds,WORD PTR [edi]
  404fb0:	sub    al,0x4
  404fb2:	sub    bh,al
  404fb4:	sub    bl,BYTE PTR [eax-0x689fea54]
  404fba:	and    eax,0x32dd6626
  404fbf:	ret    0x8f10
  404fc2:	fsub   QWORD PTR [ecx-0x25]
  404fc5:	jne    0x404ff3
  404fc7:	loop   0x405001
  404fc9:	imul   ecx,DWORD PTR gs:[edx-0xa],0x79285781
  404fd1:	cmp    ebx,DWORD PTR [eax+0x1a905297]
  404fd7:	rcl    DWORD PTR [edx],1
  404fd9:	arpl   WORD PTR [ebx+0x3b102bb6],sp
  404fdf:	and    DWORD PTR ds:[esi-0x61],edi
  404fe3:	cmp    dl,ah
  404fe5:	lea    ecx,[esi]
  404fe7:	jbe    0x405032
  404fe9:	mov    cl,0x3f
  404feb:	test   DWORD PTR [edi],edi
  404fed:	add    esp,ebp
  404fef:	push   eax
  404ff0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ff1:	pop    esp
  404ff2:	xor    esp,ecx
  404ff4:	in     eax,0x0
  404ff6:	cmp    ebp,DWORD PTR [esi]
  404ff8:	or     BYTE PTR ds:0x5d63da7f,0x5b
  404fff:	dec    ebp
  405000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405001:	adc    al,0x6e
  405003:	shl    DWORD PTR [ebx+eiz*4-0x2],cl
  405007:	pop    esp
  405008:	mov    ebp,ecx
  40500a:	sub    al,0x58
  40500c:	imul   esp,DWORD PTR [esi+0x19],0x3c4efa0a
  405013:	jo     0x405094
  405015:	into   
  405016:	in     al,dx
  405017:	stos   BYTE PTR es:[edi],al
  405018:	push   0xf8b904d5
  40501d:	cdq    
  40501e:	mov    ah,0x68
  405020:	xchg   esi,eax
  405021:	sti    
  405022:	aas    
  405023:	dec    ecx
  405024:	int    0x92
  405026:	cdq    
  405027:	push   cs
  405028:	aaa    
  405029:	dec    eax
  40502a:	dec    edx
  40502b:	xchg   ebx,eax
  40502c:	(bad)  
  40502d:	pop    ss
  40502e:	stos   DWORD PTR es:[edi],eax
  40502f:	call   0xc6e8:0xc9efef20
  405036:	aaa    
  405037:	cld    
  405038:	fldcw  WORD PTR [esi+ebp*2]
  40503b:	mov    ah,0x47
  40503d:	test   eax,0x41112a29
  405042:	dec    ecx
  405043:	lods   eax,DWORD PTR ds:[esi]
  405044:	xor    esi,eax
  405046:	xor    dl,ah
  405048:	or     DWORD PTR [edi+0x5c],ebx
  40504b:	or     dl,BYTE PTR [ebp-0x73]
  40504e:	ja     0x40508f
  405050:	icebp  
  405051:	mov    DWORD PTR [ecx+edx*8],ecx
  405054:	sbb    BYTE PTR [edx+eax*8+0x534435d9],bh
  40505b:	aam    0xcb
  40505d:	icebp  
  40505e:	lock mov dl,0x84
  405061:	mov    DWORD PTR [edi],esi
  405063:	fs popf 
  405065:	lea    edx,[ecx+0x13]
  405068:	xchg   DWORD PTR [ebx],ebp
  40506a:	mov    al,ds:0x38b99c5d
  40506f:	call   0x34bd:0x95c4596d
  405076:	push   es
  405077:	test   BYTE PTR [eax-0x11005461],dl
  40507d:	(bad)  ds:0x6d9447c3
  405083:	enter  0xb873,0xe3
  405087:	fdivr  st,st(5)
  405089:	cmp    bl,BYTE PTR [edi-0x61]
  40508c:	xor    eax,0x1cff76ea
  405091:	pop    esi
  405092:	mov    BYTE PTR [esi+0x55],ah
  405095:	fcomp  DWORD PTR [ebx]
  405097:	xchg   BYTE PTR [ebx],al
  405099:	into   
  40509a:	scas   al,BYTE PTR es:[edi]
  40509b:	sahf   
  40509c:	sub    al,0xad
  40509e:	dec    edx
  40509f:	enter  0xb18c,0x8f
  4050a3:	mov    ds:0xebd011e1,al
  4050a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050a9:	pop    edx
  4050aa:	cmp    esp,DWORD PTR [esi+edx*2-0x577f1c84]
  4050b1:	out    dx,eax
  4050b2:	cmc    
  4050b3:	mov    ss,WORD PTR [ebx-0x72c9f9d3]
  4050b9:	pop    esi
  4050ba:	inc    ebx
  4050bb:	adc    eax,0xfd643a96
  4050c0:	and    dh,BYTE PTR [esi+0x6504a632]
  4050c6:	and    esp,ebp
  4050c8:	aam    0x17
  4050ca:	outs   dx,BYTE PTR ds:[esi]
  4050cb:	rcr    esi,0x4a
  4050ce:	sbb    BYTE PTR [eax-0x684b91fc],bh
  4050d4:	pop    eax
  4050d5:	mov    ecx,0x7e3f4913
  4050da:	inc    edx
  4050db:	xchg   esi,eax
  4050dc:	or     al,0x47
  4050de:	imul   edx,DWORD PTR [edi],0xffffffe9
  4050e1:	pop    es
  4050e2:	fmul   DWORD PTR [eax+ebp*4-0x59633cd8]
  4050e9:	call   0x65aa:0x4f266ed6
  4050f0:	push   eax
  4050f1:	mov    ds:0xd9edbd16,al
  4050f6:	pop    esi
  4050f7:	jecxz  0x405176
  4050f9:	shl    bh,1
  4050fb:	mov    ds:0x8f8897d6,al
  405100:	jnp    0x405164
  405102:	jmp    0x60907496
  405107:	pop    eax
  405108:	cwde   
  405109:	sub    ah,BYTE PTR [esi+eiz*4-0xa]
  40510d:	sub    esi,DWORD PTR [edi]
  40510f:	push   edx
  405110:	sbb    eax,0x8d972feb
  405115:	push   edi
  405116:	call   0x967074a6
  40511b:	sub    DWORD PTR [eax-0x43f60c75],edx
  405121:	jbe    0x40518c
  405123:	shl    BYTE PTR [ecx],0x14
  405126:	sbb    eax,0x7bcb2d28
  40512b:	test   BYTE PTR [edi],ah
  40512d:	int    0x44
  40512f:	jbe    0x405160
  405131:	jl     0x40510b
  405133:	(bad)  
  405134:	hlt    
  405135:	popf   
  405136:	push   edi
  405137:	push   esi
  405138:	jl     0x405149
  40513a:	rol    edx,1
  40513c:	mov    cl,0x26
  40513e:	mov    edx,0xe2dd472d
  405143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405144:	inc    edx
  405145:	or     eax,0xcbad3d1a
  40514a:	xchg   ebx,eax
  40514b:	imul   esi,DWORD PTR [ecx+0x65],0xa8e7e8e
  405152:	cli    
  405153:	jbe    0x40513c
  405155:	dec    ecx
  405156:	imul   edi,eax,0x2090e50c
  40515c:	fist   DWORD PTR [ebx+0x9573de]
  405162:	pop    ss
  405163:	rcl    cl,0x2f
  405166:	add    BYTE PTR [edi+0x14],0x52
  40516a:	(bad)  
  40516b:	push   0x14a84623
  405170:	mov    eax,esp
  405172:	repnz pop eax
  405174:	(bad)  
  405175:	loopne 0x4050f8
  405177:	fidivr WORD PTR [ebx]
  405179:	out    0xbf,eax
  40517b:	sbb    DWORD PTR [edx-0x33],esp
  40517e:	push   0xb9ae01e6
  405183:	push   ss
  405184:	mov    ah,0x15
  405186:	(bad)  
  405187:	or     al,0x2c
  405189:	test   eax,0x8d9631bb
  40518e:	cs xchg edi,eax
  405190:	inc    eax
  405191:	fmul   QWORD PTR [esp]
  405194:	push   0x244c8e07
  405199:	pop    edi
  40519a:	popf   
  40519b:	addr16 pop ecx
  40519d:	xor    bl,0xcb
  4051a0:	out    dx,eax
  4051a1:	mov    bl,0x60
  4051a3:	xchg   ecx,eax
  4051a4:	icebp  
  4051a5:	xchg   edi,eax
  4051a6:	xchg   ecx,eax
  4051a7:	dec    edx
  4051a9:	fnstcw WORD PTR [edx]
  4051ab:	sbb    bl,BYTE PTR [edx]
  4051ad:	mov    ah,BYTE PTR [esi-0x1d]
  4051b0:	test   al,0x62
  4051b2:	sub    al,0x49
  4051b4:	in     eax,dx
  4051b5:	int3   
  4051b6:	es pop esp
  4051b8:	sub    BYTE PTR [edi-0x9],dh
  4051bb:	aam    0xfa
  4051bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051be:	cli    
  4051bf:	cmp    ah,BYTE PTR [eax]
  4051c1:	cs xor ecx,0x33
  4051c5:	cmp    ch,BYTE PTR [eax-0x6e]
  4051c8:	add    al,BYTE PTR [edx]
  4051ca:	mov    BYTE PTR [ecx+eax*2],cl
  4051cd:	std    
  4051ce:	test   eax,0xad6e02ff
  4051d3:	push   ds
  4051d4:	sub    al,0xe8
  4051d6:	popf   
  4051d7:	or     bh,bl
  4051d9:	test   al,0x35
  4051db:	arpl   WORD PTR [edx-0x49],bx
  4051de:	and    BYTE PTR [esi-0x67],dh
  4051e1:	aad    0x5e
  4051e3:	xor    al,0x12
  4051e5:	lock mov edx,0xbcbf4b6d
  4051eb:	inc    edi
  4051ec:	xor    ch,BYTE PTR [edi-0x7a9b30c0]
  4051f2:	xchg   esi,eax
  4051f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051f4:	sbb    al,0x8b
  4051f6:	mov    ch,0xbc
  4051f8:	inc    ebp
  4051f9:	outs   dx,DWORD PTR ds:[esi]
  4051fa:	ss ins BYTE PTR es:[edi],dx
  4051fc:	jl     0x40521d
  4051fe:	adc    al,0xf6
  405200:	fxch   st(6)
  405202:	icebp  
  405203:	fsubr  st,st(1)
  405205:	imul   DWORD PTR [ecx-0x50]
  405208:	cmp    dl,BYTE PTR [edi-0x37]
  40520b:	pop    ebx
  40520c:	xor    dh,cl
  40520e:	test   eax,0x15db52b8
  405213:	rcr    DWORD PTR [ebp-0x64318acd],cl
  405219:	mov    ds:0x161301a9,al
  40521e:	fwait
  40521f:	xlat   BYTE PTR ds:[ebx]
  405220:	popf   
  405221:	adc    esi,ebp
  405223:	daa    
  405224:	ret    
  405225:	xor    bl,BYTE PTR [eax]
  405227:	mov    dh,0xa9
  405229:	mov    al,0x34
  40522b:	out    dx,al
  40522c:	jno    0x4051f4
  40522e:	jne    0x405214
  405230:	pop    ecx
  405231:	jae    0x405220
  405233:	stos   BYTE PTR es:[edi],al
  405234:	push   es
  405235:	out    0x5a,al
  405237:	inc    eax
  405238:	xor    bh,BYTE PTR [edi-0x48c0826f]
  40523e:	(bad)  
  40523f:	jb     0x405288
  405241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405242:	lock aaa 
  405244:	hlt    
  405245:	cmp    BYTE PTR [ebx-0x64],al
  405248:	jge    0x405262
  40524a:	lds    ebx,FWORD PTR [esi+edi*2+0x43]
  40524e:	lods   eax,DWORD PTR ds:[esi]
  40524f:	dec    esp
  405250:	jge    0x405219
  405252:	out    dx,al
  405253:	les    ebx,FWORD PTR [esi]
  405255:	add    edi,DWORD PTR [esi]
  405257:	(bad)  
  405259:	inc    edi
  40525a:	popf   
  40525b:	lahf   
  40525c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40525d:	leave  
  40525e:	and    al,0x63
  405260:	mov    ebx,0x24a4d064
  405265:	mov    ecx,0xda2ca222
  40526a:	aaa    
  40526b:	pusha  
  40526c:	jnp    0x405282
  40526e:	xchg   ecx,eax
  40526f:	pop    edi
  405270:	ret    0xe9f0
  405273:	push   esp
  405274:	lea    esi,[edi+0x72]
  405277:	sbb    ecx,DWORD PTR ds:0x3088fbd9
  40527d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40527e:	sbb    al,0x5a
  405280:	cmp    eax,0x45856cf5
  405285:	mov    cl,0xcd
  405287:	xchg   esp,eax
  405288:	push   edx
  405289:	stos   BYTE PTR es:[edi],al
  40528a:	icebp  
  40528b:	sbb    BYTE PTR [esi],al
  40528d:	xor    cl,BYTE PTR cs:[esi-0x76e8e5a7]
  405294:	push   eax
  405295:	jecxz  0x405316
  405297:	push   ebp
  405298:	stc    
  405299:	sbb    bl,BYTE PTR [edx]
  40529b:	mov    edx,DWORD PTR [ebp+0x2a]
  40529e:	push   eax
  40529f:	pop    edi
  4052a0:	gs leave 
  4052a2:	xchg   ecx,eax
  4052a3:	in     al,0x84
  4052a5:	pop    edi
  4052a6:	xor    bh,ch
  4052a8:	aad    0x66
  4052aa:	and    eax,DWORD PTR [ebx+ebx*8-0x47434e22]
  4052b1:	or     eax,0xf1501b7d
  4052b6:	mov    ch,0x12
  4052b8:	scas   al,BYTE PTR es:[edi]
  4052b9:	ret    
  4052ba:	call   0x2674:0x473fbd9d
  4052c1:	cmp    DWORD PTR ds:0x5eadad31,esp
  4052c7:	int3   
  4052c8:	mov    ds:0xb792e481,al
  4052cd:	lods   al,BYTE PTR ds:[esi]
  4052ce:	imul   ebx,esp,0x7d468bb0
  4052d4:	ss mov ah,0xe5
  4052d7:	push   0xffffffc7
  4052d9:	inc    esi
  4052da:	pop    edi
  4052db:	jmp    0x40533b
  4052dd:	push   ss
  4052de:	ret    0x2ce1
  4052e1:	jl     0x405318
  4052e3:	inc    eax
  4052e4:	out    0x6,eax
  4052e6:	inc    eax
  4052e7:	xchg   ebp,eax
  4052e8:	inc    edi
  4052e9:	enter  0x3c61,0x64
  4052ed:	push   edx
  4052ee:	out    0xc5,eax
  4052f0:	in     eax,0x72
  4052f2:	or     al,0xab
  4052f4:	push   DWORD PTR [eax-0x4d]
  4052f7:	dec    ecx
  4052f8:	mov    al,BYTE PTR [edx+0x7a]
  4052fb:	std    
  4052fc:	mov    dh,0x6
  4052fe:	pop    eax
  4052ff:	push   eax
  405300:	push   cs
  405301:	sub    DWORD PTR ds:0xeb596b9b,ebp
  405307:	xor    al,0xab
  405309:	push   cs
  40530a:	push   0x6f
  40530c:	sub    edi,DWORD PTR [ecx]
  40530e:	pop    eax
  40530f:	or     al,0xd2
  405311:	sub    DWORD PTR [edx],0xfd926ae7
  405317:	arpl   WORD PTR [esp+ebp*2+0x4e771b65],si
  40531e:	adc    DWORD PTR [edi],edx
  405320:	je     0x4052f8
  405322:	icebp  
  405323:	jl     0x40537e
  405325:	ins    BYTE PTR es:[edi],dx
  405326:	or     eax,0xee0b8e7
  40532b:	sbb    al,0xb4
  40532d:	sbb    BYTE PTR [eax+ebp*1],dh
  405330:	(bad)  
  405331:	(bad)  
  405332:	jbe    0x405365
  405334:	mov    ch,0x7f
  405336:	cmp    bh,BYTE PTR ds:0xceaab076
  40533c:	lahf   
  40533d:	sub    DWORD PTR [ebp-0x15],edx
  405340:	push   eax
  405341:	push   es
  405342:	fbld   TBYTE PTR [esi+ecx*1]
  405345:	push   edx
  405346:	mov    al,0xa5
  405348:	ins    BYTE PTR es:[edi],dx
  405349:	sti    
  40534a:	int    0x87
  40534c:	xor    eax,0xc6815116
  405351:	test   eax,0x97b5f8b6
  405356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405357:	mov    esi,?
  405359:	(bad)
  40535d:	pushf  
  40535e:	mov    al,ds:0x92220a39
  405363:	cmp    edx,DWORD PTR [ecx]
  405365:	mov    ds,WORD PTR [ebp-0x4d333107]
  40536b:	add    BYTE PTR [ebp+0xb],ch
  40536e:	lahf   
  40536f:	mul    ch
  405371:	dec    edx
  405372:	jge    0x405368
  405374:	mov    ch,0x8
  405376:	xchg   BYTE PTR [edx],al
  405378:	sub    DWORD PTR [edx],edx
  40537a:	adc    ebx,DWORD PTR [esi-0x1e4462d3]
  405380:	sbb    edx,eax
  405382:	jge    0x4053fc
  405384:	cmp    ecx,ebx
  405386:	imul   esp,DWORD PTR [edx-0x66],0xffffffa8
  40538a:	(bad)  
  40538b:	retf   0x71dd
  40538e:	dec    esi
  40538f:	fisub  DWORD PTR [eax+0x25]
  405392:	out    dx,eax
  405393:	inc    ecx
  405394:	sub    al,0x4b
  405396:	fwait
  405397:	popf   
  405398:	mov    ds:0xc5ce33d5,al
  40539d:	push   cs
  40539e:	and    ch,BYTE PTR [eax-0x1299b33b]
  4053a4:	xchg   ebx,eax
  4053a5:	lea    ebp,[edx+0x3e9c06df]
  4053ab:	fwait
  4053ac:	ja     0x4053d1
  4053ae:	imul   edx,DWORD PTR [esi-0x7e],0x97f94449
  4053b5:	push   0xab05a9eb
  4053ba:	xor    bh,BYTE PTR [ebp+0x62]
  4053bd:	in     eax,0x77
  4053bf:	stc    
  4053c0:	cmp    esi,ebp
  4053c2:	je     0x4053cc
  4053c4:	fwait
  4053c5:	leave  
  4053c6:	ds stos DWORD PTR es:[edi],eax
  4053c8:	pop    ecx
  4053c9:	fnstcw WORD PTR [eax+ebx*8-0x37f0b02b]
  4053d0:	shl    BYTE PTR [edi+eax*8],1
  4053d3:	sahf   
  4053d4:	fld    TBYTE PTR [eax]
  4053d6:	das    
  4053d7:	push   eax
  4053d8:	ds out dx,eax
  4053da:	ins    DWORD PTR es:[edi],dx
  4053db:	sbb    cl,BYTE PTR [bx+di-0x20a0]
  4053e0:	shr    DWORD PTR [edi+0x11],1
  4053e3:	mov    ch,cl
  4053e5:	fwait
  4053e6:	je     0x405393
  4053e8:	inc    ebx
  4053e9:	ja     0x405375
  4053eb:	fcmovu st,st(0)
  4053ed:	and    esp,DWORD PTR [ecx]
  4053ef:	into   
  4053f0:	jno    0x4053f2
  4053f2:	mov    ah,0x6c
  4053f4:	bound  esp,QWORD PTR [ebx+0x42]
  4053f7:	sub    dl,BYTE PTR [ecx+0x2b]
  4053fa:	xchg   edx,eax
  4053fb:	inc    esp
  4053fc:	retf   0x5fef
  4053ff:	sub    al,0xb8
  405401:	daa    
  405402:	sub    BYTE PTR [ebx],ch
  405404:	and    cl,ah
  405406:	hlt    
  405407:	ins    DWORD PTR es:[edi],dx
  405408:	outs   dx,BYTE PTR ds:[esi]
  405409:	push   cs
  40540a:	push   edi
  40540b:	ja     0x40544b
  40540d:	jne    0x40541b
  40540f:	mov    ebx,0xe14e501f
  405414:	add    DWORD PTR [ecx-0x5119560e],ebx
  40541a:	and    BYTE PTR [ebp+0x35],bl
  40541d:	(bad)  
  40541f:	jns    0x4053f7
  405421:	sahf   
  405422:	or     eax,esp
  405424:	push   esp
  405425:	les    ecx,FWORD PTR [edx-0xb]
  405428:	pushf  
  405429:	iret   
  40542a:	ret    
  40542b:	rol    edi,cl
  40542d:	into   
  40542e:	sbb    dl,BYTE PTR [ebx]
  405430:	iret   
  405431:	ret    
  405432:	lods   al,BYTE PTR ds:[esi]
  405434:	mov    eax,DWORD PTR [ebx+0x6e1ccb62]
  40543a:	xchg   DWORD PTR [ecx+0x3d],esi
  40543d:	addr16 jbe 0x405440
  405440:	test   bh,al
  405442:	stos   BYTE PTR es:[edi],al
  405443:	mov    dh,0xeb
  405445:	in     eax,dx
  405446:	xor    edx,DWORD PTR [edx+0x37]
  405449:	fisubr WORD PTR [ecx+0x183735c9]
  40544f:	inc    edx
  405450:	mov    ds:0x60548f5c,al
  405455:	js     0x4054a9
  405457:	push   cs
  405458:	or     edi,DWORD PTR [ebx-0x6ef34e6f]
  40545e:	out    0x9f,al
  405460:	pop    edi
  405461:	imul   ecx,DWORD PTR [eax],0x66e0141b
  405467:	cmp    bh,dl
  405469:	inc    ebx
  40546a:	jge    0x4054a0
  40546c:	or     BYTE PTR [esi+eax*1],ch
  40546f:	outs   dx,DWORD PTR ds:[esi]
  405470:	daa    
  405471:	mov    dh,0x29
  405473:	jecxz  0x405407
  405475:	ins    DWORD PTR es:[edi],dx
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	push   ss
  405478:	xor    eax,0xf1cb138
  40547d:	jge    0x405488
  40547f:	mov    ebx,0xf5bd076d
  405484:	jmp    0xd5e12db6
  405489:	mov    dh,0xb6
  40548b:	nop
  40548c:	test   eax,0xf36df31b
  405491:	es sbb al,0xc5
  405494:	sbb    BYTE PTR ds:0x6220397c,al
  40549a:	aaa    
  40549b:	jmp    0xbe0e:0xaed28c29
  4054a2:	push   ecx
  4054a3:	xor    ah,dh
  4054a5:	sbb    edx,ebp
  4054a7:	ret    
  4054a8:	int3   
  4054a9:	shr    BYTE PTR [esi+0x5ee32919],0x2d
  4054b0:	(bad)  
  4054b1:	aam    0x94
  4054b3:	cli    
  4054b4:	test   BYTE PTR [ebx-0x1e27781f],0x7c
  4054bb:	les    ebx,FWORD PTR [eax+0x49]
  4054be:	mov    esi,DWORD PTR [eax-0x4151d158]
  4054c4:	test   DWORD PTR [ecx+ebx*1],esi
  4054c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054c8:	pop    ebx
  4054c9:	(bad)
  4054cd:	les    ebx,FWORD PTR [ecx+eax*8+0x11]
  4054d1:	ins    DWORD PTR es:[edi],dx
  4054d2:	add    al,0xfd
  4054d4:	jo     0x40550b
  4054d6:	inc    eax
  4054d7:	mov    ds:0x728341c4,eax
  4054dc:	out    0xb4,eax
  4054de:	or     esp,DWORD PTR [esi-0x77dac9e5]
  4054e4:	fs retf 0xfd65
  4054e8:	inc    eax
  4054e9:	js     0x4054d6
  4054eb:	scas   eax,DWORD PTR es:[edi]
  4054ec:	call   0x87a31aad
  4054f1:	jo     0x4054ff
  4054f3:	pusha  
  4054f4:	mov    cl,0x34
  4054f6:	add    BYTE PTR [ebp-0x38],bl
  4054f9:	xor    ch,BYTE PTR [edx+0x1]
  4054fc:	push   eax
  4054fd:	mov    fs:0x69ecf3e8,al
  405503:	lods   al,BYTE PTR ds:[esi]
  405504:	sbb    esp,DWORD PTR [edx]
  405506:	lds    ebx,FWORD PTR [edi]
  405508:	mov    ebx,0x5f1858b0
  40550d:	pop    ebp
  40550e:	sbb    al,0x2e
  405510:	repz add eax,0x974818bf
  405516:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405517:	rcr    edi,0xc7
  40551a:	in     al,dx
  40551b:	mov    cl,0xae
  40551d:	adc    DWORD PTR [edi-0x2c],edx
  405520:	jle    0x4054df
  405522:	(bad)
  405526:	pusha  
  405527:	mov    esp,esi
  405529:	lea    esi,[eax+0x1f]
  40552c:	pop    ds
  40552d:	mov    bh,0x1c
  40552f:	out    dx,al
  405530:	jbe    0x40552d
  405532:	enter  0x119a,0x26
  405536:	push   ebx
  405537:	fsub   QWORD PTR [esi+0x6c]
  40553a:	xchg   esp,eax
  40553b:	pop    eax
  40553c:	sbb    edi,DWORD PTR [edx-0x65]
  40553f:	(bad)  
  405540:	out    dx,eax
  405541:	mov    ah,0xc
  405543:	mov    cl,0x28
  405545:	cdq    
  405546:	call   0x199:0x592a12c4
  40554d:	adc    eax,ecx
  40554f:	mov    edx,0xb82b0618
  405554:	and    al,0xfc
  405556:	ja     0x405553
  405558:	enter  0x2250,0xec
  40555c:	adc    eax,0x2b5e2e9
  405561:	sbb    eax,0x379ae0a1
  405566:	cmp    dl,ah
  405568:	push   0x1f6dd0c6
  40556d:	jbe    0x405503
  40556f:	ja     0x405580
  405571:	dec    esi
  405572:	popf   
  405573:	pop    esi
  405574:	cs in  eax,dx
  405576:	sub    esi,eax
  405578:	inc    DWORD PTR [esi]
  40557a:	jmp    0xf3c2:0xb0d06b0a
  405581:	xchg   ebx,eax
  405582:	mov    BYTE PTR [edi-0x4c1e7354],dl
  405588:	push   eax
  405589:	ja     0x405591
  40558b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40558c:	xor    eax,0x1b33eac7
  405591:	out    0x96,eax
  405593:	jnp    0x405519
  405595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405596:	add    ah,cl
  405598:	jmp    0x11c2:0x86eb9c64
  40559f:	cdq    
  4055a0:	scas   eax,DWORD PTR es:[edi]
  4055a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055a3:	into   
  4055a4:	push   esi
  4055a5:	adc    BYTE PTR [ecx],cl
  4055a7:	into   
  4055a8:	add    esp,0xffffffce
  4055ab:	jno    0x4055d6
  4055ad:	(bad)  
  4055ae:	loopne 0x40554a
  4055b0:	mov    ecx,0x668cafc5
  4055b5:	and    DWORD PTR [ecx+0x4],ecx
  4055b8:	xor    esp,DWORD PTR [ecx-0x3d]
  4055bb:	pusha  
  4055bc:	adc    BYTE PTR ds:[edi+0x52],0xd3
  4055c1:	dec    ecx
  4055c2:	sbb    dl,dl
  4055c4:	mov    ecx,esp
  4055c6:	retf   0x247f
  4055c9:	int3   
  4055ca:	mov    esp,0xd8ccae54
  4055cf:	and    al,0xef
  4055d1:	xchg   esp,eax
  4055d2:	dec    edi
  4055d3:	std    
  4055d4:	sbb    al,0xd8
  4055d6:	fs aam 0xa
  4055d9:	cmc    
  4055da:	cmp    al,0x6
  4055dc:	mov    eax,ds:0x9ff3009b
  4055e1:	dec    edi
  4055e2:	in     al,dx
  4055e3:	mov    ebp,0xf467b6e3
  4055e8:	inc    eax
  4055e9:	and    DWORD PTR [ecx+edi*8],edx
  4055ec:	ror    BYTE PTR ds:0xf7fdbd34,0x2f
  4055f3:	push   ecx
  4055f4:	xchg   esi,edi
  4055f6:	add    DWORD PTR [edi],esi
  4055f8:	sub    esi,ebx
  4055fa:	andnps xmm7,xmm6
  4055fd:	sbb    DWORD PTR [edi-0x635eb748],edi
  405603:	dec    edx
  405604:	sub    cl,BYTE PTR [esi]
  405606:	inc    ecx
  405607:	and    BYTE PTR [eax+0x5fb0170c],0x8b
  40560e:	add    esi,DWORD PTR [edx-0x1e]
  405611:	push   cs
  405612:	or     DWORD PTR [ebp-0x6bd64ac8],0xffffffd5
  405619:	mov    eax,ds:0x7926806a
  40561e:	jns    0x40566f
  405620:	sbb    DWORD PTR [ebp+0x4c],eax
  405623:	and    al,0x9a
  405625:	and    al,0x21
  405627:	or     al,0x92
  405629:	xchg   ecx,eax
  40562a:	xchg   edx,eax
  40562b:	sub    eax,0x7f676042
  405630:	leave  
  405631:	xlat   BYTE PTR ds:[ebx]
  405632:	(bad)  
  405634:	jp     0x1f84dc63
  40563a:	scas   al,BYTE PTR es:[edi]
  40563b:	test   eax,0x518d9109
  405640:	jbe    0x40569e
  405642:	jge    0x405681
  405644:	xor    bl,dl
  405646:	imul   DWORD PTR [ebx]
  405648:	shl    dh,1
  40564a:	pop    ds
  40564b:	jb     0x405607
  40564d:	sar    DWORD PTR [esi],1
  40564f:	and    DWORD PTR [ebx],ebp
  405651:	inc    ebx
  405652:	fnsave [ebx]
  405654:	cmp    eax,0xc46e82b3
  405659:	pop    eax
  40565a:	jmp    0xb8105d3f
  40565f:	xchg   ebp,eax
  405660:	fbld   TBYTE PTR [esi+ebp*1]
  405663:	cmp    al,0x58
  405665:	aaa    
  405666:	and    ch,BYTE PTR [esi-0x2b]
  405669:	inc    esi
  40566a:	stos   DWORD PTR es:[edi],eax
  40566b:	jb     0x40560c
  40566d:	add    dl,BYTE PTR [eax]
  40566f:	push   0x63
  405671:	mov    bl,0x86
  405673:	and    edx,DWORD PTR [eax+0x32]
  405676:	or     esp,DWORD PTR [edi+0x65a608a8]
  40567c:	inc    esp
  40567d:	and    DWORD PTR [edi+0x2b],0xf33dbf70
  405684:	jne    0x4056ac
  405686:	mov    ah,0xa6
  405688:	mov    eax,ds:0x14505086
  40568d:	push   esp
  40568e:	sbb    BYTE PTR [edi+0x1b],0xa2
  405692:	ins    DWORD PTR es:[edi],dx
  405693:	add    ebx,DWORD PTR [eax+0x6c756abe]
  405699:	pop    ds
  40569a:	cs repz loopne 0x4056a5
  40569e:	and    BYTE PTR ds:0x249213b1,dl
  4056a4:	imul   esp,ebp,0x659a3dd7
  4056aa:	push   0xaf391cfd
  4056af:	inc    edx
  4056b0:	sub    eax,0xea87980e
  4056b5:	repnz pop ds
  4056b7:	inc    esp
  4056b8:	xchg   esp,eax
  4056b9:	ds stos BYTE PTR es:[edi],al
  4056bb:	pop    esp
  4056bc:	pop    ss
  4056bd:	adc    ecx,0xffffffd9
  4056c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056c1:	dec    eax
  4056c2:	or     bh,dl
  4056c4:	mov    edx,0xf90e1aa3
  4056c9:	pop    eax
  4056ca:	imul   ebp,DWORD PTR [ebp-0x3b05ae23],0xb7caaff
  4056d4:	mov    ds:0x237f6144,al
  4056d9:	jp     0x40569e
  4056db:	inc    eax
  4056dc:	scas   eax,DWORD PTR es:[edi]
  4056dd:	mov    eax,0x42cd62c0
  4056e2:	mov    BYTE PTR [ecx+0x67cfb20a],0x6e
  4056e9:	jecxz  0x405742
  4056eb:	retf   0x6670
  4056ee:	and    BYTE PTR [ebp+ecx*8-0x70],dl
  4056f2:	mov    esi,0x52dac3b3
  4056f7:	jl     0x405723
  4056f9:	pop    eax
  4056fa:	add    edx,DWORD PTR [ebx+0x3a]
  4056fd:	dec    ax
  4056ff:	cmp    eax,0x7c4aa3a8
  405704:	fsub   DWORD PTR [ebx]
  405706:	jmp    0x3c2e481c
  40570b:	addr16 jl 0x405722
  40570e:	add    ah,dl
  405710:	mov    eax,ds:0xb1a02008
  405715:	dec    edx
  405716:	daa    
  405717:	ds imul ebx,esi,0x71
  40571b:	call   0xcf11:0xd9916ff2
  405722:	push   edx
  405723:	pop    ss
  405724:	vmwrite edx,DWORD PTR [ebp+0x5a12ee60]
  40572b:	out    dx,eax
  40572c:	addr16 ret 0x43bf
  405730:	mov    DWORD PTR [esi+0x53],ebx
  405733:	cmp    DWORD PTR [eax+eiz*4+0x2d7cbd26],edi
  40573a:	inc    esp
  40573b:	push   ds
  40573c:	cmp    BYTE PTR [esi-0x6d08bbd7],cl
  405742:	inc    eax
  405743:	fst    QWORD PTR [eax+0x30]
  405746:	repz cdq 
  405748:	push   edi
  405749:	push   ss
  40574a:	mov    edx,0x880ce90b
  40574f:	addr16 mov ds:0xf8d8,eax
  405753:	iret   
  405754:	addr16 mov edx,0xc909889a
  40575a:	das    
  40575b:	(bad)  
  40575d:	aam    0x3a
  40575f:	or     al,0xee
  405761:	mov    eax,DWORD PTR [ecx+ebp*4-0x1f]
  405765:	sbb    eax,0xe134b360
  40576a:	scas   al,BYTE PTR es:[edi]
  40576b:	loopne 0x40574f
  40576d:	sub    eax,0x6e13c27c
  405772:	(bad)  
  405774:	daa    
  405775:	fild   DWORD PTR ds:0xf795e337
  40577b:	dec    esp
  40577c:	les    esp,FWORD PTR [esi-0x4d4cc76e]
  405782:	lds    edx,FWORD PTR [ebx+0xd868e6]
  405788:	add    DWORD PTR [edi-0x673a62c2],esi
  40578e:	data16 (bad) 
  405790:	lods   eax,DWORD PTR ds:[esi]
  405791:	adc    dl,bh
  405793:	(bad)  [eax+0x2f]
  405796:	aad    0xdb
  405798:	mov    BYTE PTR [ebp+0x40],al
  40579b:	(bad)  
  40579c:	call   0xde55:0x45b1bcb6
  4057a3:	and    ah,BYTE PTR [esp+ebp*8+0x35]
  4057a7:	inc    ebx
  4057a8:	pop    edx
  4057a9:	outs   dx,DWORD PTR ds:[esi]
  4057aa:	fst    DWORD PTR [esi-0x31008803]
  4057b0:	hlt    
  4057b1:	ret    0x432b
  4057b4:	fiadd  DWORD PTR [si+0x42aa]
  4057b9:	fs sbb eax,0x11b1a61e
  4057bf:	imul   DWORD PTR [edx-0x3912710b]
  4057c5:	cmp    ecx,DWORD PTR [ebx+0x19d6f88b]
  4057cb:	xor    al,0x9a
  4057cd:	outs   dx,BYTE PTR ds:[esi]
  4057ce:	adc    BYTE PTR ds:0x9f4bd979,ah
  4057d4:	sub    al,0x2f
  4057d6:	lods   al,BYTE PTR ds:[esi]
  4057d7:	adc    bl,BYTE PTR [ebp+0x164bbca5]
  4057dd:	or     bl,BYTE PTR [esi]
  4057df:	sahf   
  4057e0:	loop   0x40579d
  4057e2:	push   ds
  4057e3:	mov    ds:0x7815b090,eax
  4057e8:	data16 outs dx,BYTE PTR ds:[esi]
  4057ea:	sub    bh,BYTE PTR [eax-0x1c2e0542]
  4057f0:	fs push ecx
  4057f2:	ror    ch,cl
  4057f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057f5:	push   ds
  4057f6:	in     eax,dx
  4057f7:	scas   eax,DWORD PTR es:[edi]
  4057f8:	pushf  
  4057f9:	jmp    0x40581c
  4057fb:	jo     0x4057dd
  4057fd:	mov    gs,esi
  4057ff:	pusha  
  405800:	xchg   edx,eax
  405801:	call   0xea97:0x585f
  405807:	xchg   ebx,eax
  405808:	jb     0x40579b
  40580a:	ret    0x2239
  40580d:	icebp  
  40580e:	dec    eax
  40580f:	pop    edx
  405810:	mov    WORD PTR [edi-0x56],cs
  405813:	add    eax,ebp
  405815:	xor    al,0xbb
  405817:	adc    DWORD PTR [esi-0x40d6ea08],esi
  40581d:	pushf  
  40581e:	sub    eax,0x2a032080
  405823:	cs data16 ins BYTE PTR es:[edi],dx
  405826:	cmp    esi,DWORD PTR [edx+0x45b350a7]
  40582c:	sahf   
  40582d:	mov    esi,0x5a108c06
  405832:	mov    eax,ds:0xd6059846
  405837:	dec    esp
  405838:	jb     0x4057ee
  40583a:	dec    edi
  40583b:	jl     0x4057f8
  40583d:	sete   BYTE PTR [esi]
  405840:	xchg   esp,eax
  405841:	in     eax,0xb5
  405843:	ret    0x11dc
  405846:	sbb    eax,0x803c9bba
  40584b:	jp     0x405818
  40584d:	mov    ch,dl
  40584f:	repnz xchg ah,bl
  405852:	int3   
  405853:	push   0x5a
  405855:	pop    edx
  405856:	mov    bh,0xb6
  405858:	clc    
  405859:	aad    0x65
  40585b:	outs   dx,BYTE PTR ds:[esi]
  40585c:	mov    edi,DWORD PTR [edx-0x46]
  40585f:	mov    DWORD PTR [ebp-0x5a],edx
  405862:	mov    esp,0x6020c335
  405867:	mov    bl,0x5b
  405869:	push   ss
  40586a:	dec    edi
  40586b:	ins    DWORD PTR es:[edi],dx
  40586c:	jnp    0x405846
  40586e:	pop    edx
  40586f:	ret    0x2c2c
  405872:	pop    ds
  405873:	mov    WORD PTR [ebp+0x2b4c9a60],es
  405879:	xchg   ebp,eax
  40587a:	mov    bh,BYTE PTR [edx+0x4de64982]
  405880:	test   al,0x18
  405882:	push   edx
  405883:	pop    esp
  405884:	or     BYTE PTR [ecx],al
  405886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405887:	pop    ds
  405888:	push   edi
  405889:	loope  0x4058db
  40588b:	push   ecx
  40588c:	iret   
  40588d:	push   ebx
  40588e:	add    al,0x20
  405890:	xchg   esp,eax
  405891:	sbb    al,0xc9
  405893:	mov    cl,0x8e
  405895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405896:	fstp   QWORD PTR [ecx+0x1a210599]
  40589c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40589d:	mov    al,ds:0x9171b38c
  4058a2:	mov    eax,ds:0x7d28243e
  4058a7:	dec    ebp
  4058a8:	sbb    dl,dh
  4058aa:	xchg   ebp,eax
  4058ab:	ds jnp 0x4058ad
  4058ae:	push   ebx
  4058af:	jnp    0x40588d
  4058b1:	cdq    
  4058b2:	clc    
  4058b3:	sub    bl,BYTE PTR [esi-0x53cf313]
  4058b9:	inc    edx
  4058ba:	and    BYTE PTR [edx-0x5c546ca8],al
  4058c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058c1:	push   esp
  4058c2:	dec    ebx
  4058c3:	sbb    DWORD PTR [ebx-0x3],esi
  4058c6:	stc    
  4058c7:	ret    
  4058c8:	mov    dl,0x85
  4058ca:	popf   
  4058cb:	stos   DWORD PTR es:[edi],eax
  4058cc:	fidivr DWORD PTR [edi-0x5f]
  4058cf:	jmp    0xf2919af0
  4058d4:	sub    ebp,ebx
  4058d6:	ss in  al,dx
  4058d8:	xor    ecx,esp
  4058da:	das    
  4058db:	mov    dl,0x5f
  4058dd:	xor    eax,0xfabcc375
  4058e2:	je     0x4058df
  4058e4:	cmp    ch,BYTE PTR [ebx+0x39690da4]
  4058ea:	push   ds
  4058eb:	and    edx,DWORD PTR [edi+0x546213f4]
  4058f1:	scas   al,BYTE PTR es:[edi]
  4058f2:	xor    BYTE PTR [edi-0x75a288a0],dl
  4058f8:	cs dec eax
  4058fa:	push   esi
  4058fb:	in     al,dx
  4058fc:	jne    0x405934
  4058fe:	adc    al,0x51
  405900:	or     al,0x57
  405902:	cs mov al,0x10
  405905:	arpl   WORD PTR [edi],bp
  405907:	lds    ecx,FWORD PTR [edi]
  405909:	in     ax,0xd
  40590c:	fild   DWORD PTR [edi+0x5150055b]
  405912:	sti    
  405913:	add    BYTE PTR [ebp+0x5938dfef],al
  405919:	adc    BYTE PTR [esi+0x37],dl
  40591c:	mov    esi,cs
  40591e:	or     DWORD PTR [edi+0x57],ebx
  405921:	xor    DWORD PTR [ebp+0x760255ed],esp
  405927:	adc    al,BYTE PTR [edx]
  405929:	in     al,dx
  40592a:	lahf   
  40592b:	jo     0x4058f2
  40592d:	inc    ebp
  40592e:	cmp    ebx,DWORD PTR [ecx-0x71ee30c0]
  405934:	loop   0x4058e2
  405936:	mov    DWORD PTR [esi+0x7d],edx
  405939:	call   0x707b:0x7ca873e3
  405940:	xlat   BYTE PTR ds:[ebx]
  405941:	(bad)  
  405942:	sub    DWORD PTR [esi-0x7e],ebp
  405945:	gs pop esi
  405947:	les    edi,FWORD PTR [eax-0x6]
  40594a:	push   es
  40594b:	fs cmp eax,0x94884a5
  405951:	loope  0x40591c
  405953:	sbb    al,0x38
  405955:	aas    
  405956:	cdq    
  405957:	mov    bl,0x42
  405959:	mov    BYTE PTR [esi],dh
  40595b:	dec    edi
  40595c:	hlt    
  40595d:	ret    
  40595e:	adc    BYTE PTR [ebx+edi*8],0x1f
  405962:	add    ebx,ebp
  405964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405966:	mov    bl,0xc7
  405968:	out    dx,eax
  405969:	dec    ecx
  40596a:	rcr    DWORD PTR [edx+ecx*2-0x5b79f6be],cl
  405971:	xchg   ecx,eax
  405972:	imul   BYTE PTR [ecx+0x529ecfef]
  405978:	add    edx,DWORD PTR [ebp+0x1]
  40597b:	stos   DWORD PTR es:[edi],eax
  40597c:	jg     0x405902
  40597e:	idiv   BYTE PTR [ebx]
  405980:	xor    dl,ch
  405982:	or     al,0xab
  405984:	imul   ebx,DWORD PTR [edx+edx*2-0xf83a280],0x34
  40598c:	or     ebx,ebx
  40598e:	pop    ds
  40598f:	dec    edx
  405990:	daa    
  405991:	fs out dx,al
  405993:	xchg   BYTE PTR [ebx-0x12],dh
  405996:	addr16 and eax,0x2b948bca
  40599c:	mov    es:0xb216f556,al
  4059a2:	push   es
  4059a3:	loop   0x405a18
  4059a5:	pop    ds
  4059a6:	outs   dx,BYTE PTR ds:[esi]
  4059a7:	add    ch,bh
  4059a9:	xchg   BYTE PTR [edi+0x21],bh
  4059ac:	mov    edx,0xdeee2e22
  4059b1:	mov    ecx,0xb80e3a42
  4059b6:	test   BYTE PTR [eax],dh
  4059b8:	adc    eax,0xdd3dd002
  4059bd:	outs   dx,BYTE PTR gs:[esi]
  4059bf:	dec    ebx
  4059c0:	sub    edx,DWORD PTR [ecx-0x6bb7637d]
  4059c6:	int3   
  4059c7:	sbb    dh,bl
  4059c9:	mov    ds:0xd92a1702,al
  4059ce:	adc    BYTE PTR [ecx-0x5c],0xc5
  4059d2:	mov    ss,eax
  4059d4:	jns    0x4059aa
  4059d6:	ret    0xd615
  4059d9:	repz add bl,bl
  4059dc:	and    bl,al
  4059de:	fst    DWORD PTR gs:[edi]
  4059e1:	mov    ds:0x16f18a99,eax
  4059e6:	mov    ds:0x223fad73,al
  4059eb:	and    ch,BYTE PTR [eax-0x59a091ef]
  4059f1:	fs mov dh,0xc
  4059f4:	pop    edi
  4059f5:	jp     0x405a1c
  4059f7:	pop    esp
  4059f8:	pop    edx
  4059f9:	aam    0x96
  4059fb:	or     ch,ch
  4059fd:	xchg   esp,eax
  4059fe:	jo     0x405980
  405a00:	xor    eax,0xd07626f1
  405a05:	push   ss
  405a06:	xchg   ecx,eax
  405a07:	adc    BYTE PTR [edx+0xeb9fbbb],0x1
  405a0e:	mov    edi,0x76866ef2
  405a13:	jl     0x4059a5
  405a15:	xchg   ecx,eax
  405a16:	scas   eax,DWORD PTR es:[edi]
  405a17:	lds    edi,FWORD PTR [ecx+ecx*8+0x68]
  405a1b:	mov    gs,WORD PTR [esi+0x57803fd3]
  405a21:	and    BYTE PTR [ecx],al
  405a23:	pop    ecx
  405a24:	iret   
  405a25:	add    al,0xd0
  405a27:	cmc    
  405a28:	cmp    dh,bh
  405a2a:	or     BYTE PTR [ebp+0x23],al
  405a2d:	xchg   esi,eax
  405a2e:	add    edx,DWORD PTR [ecx+0x70]
  405a31:	mov    ds:0x2db72fab,al
  405a36:	inc    eax
  405a37:	xchg   esi,eax
  405a38:	inc    eax
  405a39:	push   edi
  405a3a:	pop    ds
  405a3b:	mov    edi,0xf52065b2
  405a40:	fs sbb dh,cl
  405a43:	xor    eax,0xfa874f2
  405a48:	fsubr  st,st(1)
  405a4a:	nop
  405a4b:	lahf   
  405a4c:	pop    ss
  405a4d:	xor    al,0x91
  405a4f:	sbb    BYTE PTR [ebx+edx*4],dl
  405a52:	xor    BYTE PTR [ecx+0x41],dl
  405a55:	ds cmc 
  405a57:	scas   al,BYTE PTR es:[edi]
  405a58:	and    al,BYTE PTR [eax]
  405a5a:	popa   
  405a5b:	inc    ecx
  405a5c:	dec    esi
  405a5d:	dec    BYTE PTR [eax]
  405a5f:	sbb    esp,DWORD PTR [eax]
  405a61:	dec    ebp
  405a62:	(bad)  
  405a63:	into   
  405a64:	loop   0x405abe
  405a66:	push   0x4e
  405a68:	inc    eax
  405a69:	mov    edx,0x5bcc5a41
  405a6e:	in     al,dx
  405a6f:	dec    edx
  405a70:	icebp  
  405a71:	jne    0x405a83
  405a73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a74:	adc    ecx,DWORD PTR [esi-0x6e80398e]
  405a7a:	mov    ds:0xd2754f22,eax
  405a7f:	ss push 0x5abcd595
  405a85:	ins    BYTE PTR es:[edi],dx
  405a86:	or     DWORD PTR [eax],0x6d
  405a89:	sub    cl,dh
  405a8b:	dec    ebx
  405a8c:	call   0x4e879afb
  405a91:	xchg   esi,eax
  405a92:	push   ds
  405a93:	xchg   ebp,eax
  405a94:	adc    dl,BYTE PTR [edi+0x5b8f3e0]
  405a9a:	(bad)  
  405a9b:	cmp    DWORD PTR [eax+0x54],0x40d458c1
  405aa2:	ja     0x405ac5
  405aa4:	cmp    ebx,DWORD PTR [ebp+0x31]
  405aa7:	aas    
  405aa8:	fcom   QWORD PTR [eax-0x2e5a0cdf]
  405aae:	imul   al
  405ab0:	push   es
  405ab1:	and    DWORD PTR [ebp-0xa],eax
  405ab4:	rol    DWORD PTR [edi],cl
  405ab6:	push   ecx
  405ab7:	jno    0x405ad9
  405ab9:	sbb    al,BYTE PTR [ebx]
  405abb:	jmp    0x77b4852d
  405ac0:	add    BYTE PTR [ebp-0x60582fb2],0x0
  405ac7:	stos   BYTE PTR es:[edi],al
  405ac8:	loope  0x405b35
  405aca:	cli    
  405acb:	rol    edx,0x41
  405ace:	fild   DWORD PTR [eax]
  405ad0:	nop
  405ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ad2:	in     al,dx
  405ad3:	fisubr WORD PTR [esi-0x4e3477a0]
  405ad9:	push   edi
  405ada:	mov    ch,cl
  405adc:	jge    0x405b47
  405ade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405adf:	rcr    BYTE PTR [esi+eiz*1+0x43],1
  405ae3:	jae    0x405b0f
  405ae5:	jae    0x405ad6
  405ae7:	pop    eax
  405ae8:	lds    ebx,FWORD PTR [edi]
  405aea:	mov    edi,0xd0b77b82
  405aef:	add    esi,DWORD PTR [esi+0x30]
  405af2:	sbb    ebp,DWORD PTR [esi-0x41]
  405af5:	mov    edi,0x976fcb39
  405afa:	leave  
  405afb:	adc    DWORD PTR [edx],ebp
  405afd:	ja     0x405a98
  405aff:	mov    edx,0xb3912e0d
  405b04:	mov    cs,WORD PTR [ecx-0x2d]
  405b07:	fisubr DWORD PTR [eax-0x687184f2]
  405b0d:	push   esp
  405b0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b0f:	and    al,0x97
  405b11:	cmp    al,0xb3
  405b13:	lods   al,BYTE PTR ds:[esi]
  405b14:	jle    0x405a99
  405b16:	sbb    ch,BYTE PTR [ebp+ebp*2-0x6d32807a]
  405b1d:	fadd   DWORD PTR [edx+0x1526a757]
  405b23:	mov    eax,0x7390a67
  405b28:	xor    BYTE PTR [eax+esi*4+0x166f8825],dh
  405b2f:	fisub  WORD PTR [eax]
  405b31:	mov    ebp,0xdaaeb17d
  405b36:	ds (bad) 
  405b38:	std    
  405b39:	jb     0x405bb6
  405b3b:	dec    edi
  405b3c:	jmp    0xb1562892
  405b41:	xchg   DWORD PTR [esi+eax*4+0x3d0c245f],ebp
  405b48:	shl    DWORD PTR [ebx+0x47a115a7],cl
  405b4e:	jmp    0x405b6e
  405b50:	popf   
  405b51:	mov    edx,0x1e4fa320
  405b56:	stos   DWORD PTR es:[edi],eax
  405b57:	ja     0x405ba7
  405b59:	adc    al,0x27
  405b5b:	rcr    DWORD PTR [ecx-0x73],0xa8
  405b5f:	int3   
  405b60:	jmp    0x405b42
  405b62:	cdq    
  405b63:	lds    esi,FWORD PTR [ecx+0x23d99760]
  405b69:	(bad)  
  405b6a:	mov    cl,0x50
  405b6c:	fstp   TBYTE PTR ds:0x320271fc
  405b72:	ins    DWORD PTR es:[edi],dx
  405b73:	and    BYTE PTR [edx-0x7c],ah
  405b76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b77:	sbb    bl,0x26
  405b7a:	xchg   edx,eax
  405b7b:	jmp    0x405be7
  405b7d:	xchg   esi,eax
  405b7e:	std    
  405b7f:	add    eax,0x9415e6c2
  405b84:	inc    ecx
  405b85:	sub    eax,0xe3867859
  405b8a:	mov    ch,0x38
  405b8c:	call   0x41f59039
  405b91:	inc    edi
  405b92:	hlt    
  405b93:	mov    ebx,0x63d90d64
  405b98:	push   esp
  405b99:	js     0x405b7c
  405b9b:	sbb    DWORD PTR [ebx-0x6f],eax
  405b9e:	dec    edi
  405b9f:	pop    es
  405ba0:	inc    DWORD PTR [esi]
  405ba2:	(bad)  
  405ba3:	loopne 0x405b88
  405ba5:	test   eax,0xe4fc19b0
  405baa:	push   edx
  405bab:	(bad)  
  405bac:	jg     0x405c20
  405bae:	ds cmp ch,bl
  405bb1:	(bad)  
  405bb2:	ficom  WORD PTR ds:0x3c5ba401
  405bb8:	in     al,0x94
  405bba:	shl    DWORD PTR [edx-0x42],0xf4
  405bbe:	test   DWORD PTR [ecx-0x3e],edi
  405bc1:	sbb    edx,DWORD PTR [ecx]
  405bc3:	cld    
  405bc4:	rol    DWORD PTR [ebx-0x3d],1
  405bc7:	(bad)  
  405bc8:	push   ecx
  405bc9:	sbb    al,0x7f
  405bcb:	sub    BYTE PTR [edx+eiz*4],0x61
  405bcf:	sub    eax,0x729041c2
  405bd4:	popf   
  405bd5:	sbb    edi,ecx
  405bd7:	popa   
  405bd8:	add    al,0x66
  405bda:	mov    DWORD PTR [ebx-0x69],ecx
  405bdd:	je     0x405b85
  405bdf:	hlt    
  405be0:	pop    esi
  405be1:	fadd   st(3),st
  405be3:	pop    ss
  405be4:	jne    0x405bc2
  405be6:	mov    edi,DWORD PTR [eax+ecx*1]
  405be9:	retf   0xf60a
  405bec:	pusha  
  405bed:	rcr    DWORD PTR [ebx+edx*1+0x2d],0x5e
  405bf2:	cmp    BYTE PTR [ecx-0x3d3ef012],al
  405bf8:	aaa    
  405bf9:	ins    DWORD PTR es:[edi],dx
  405bfa:	dec    esp
  405bfb:	push   es
  405bfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bfd:	mov    al,0x54
  405bff:	daa    
  405c00:	int3   
  405c01:	ror    BYTE PTR [edx],1
  405c03:	imul   bl
  405c05:	jmp    0x6e615bf4
  405c0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c0b:	popa   
  405c0c:	ret    
  405c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c0e:	inc    edi
  405c0f:	sbb    edx,DWORD PTR [edx-0x1442656f]
  405c15:	test   eax,0xc3ece78
  405c1a:	rcr    DWORD PTR [ecx+ecx*8],cl
  405c1d:	shr    BYTE PTR [ebp+0x2ccf7e17],0x8
  405c24:	dec    ebx
  405c25:	push   0x53
  405c27:	xor    al,0x6e
  405c29:	aad    0x52
  405c2b:	adc    bl,BYTE PTR [ebp-0x20]
  405c2e:	out    0xb2,eax
  405c30:	sbb    al,0x1b
  405c32:	mov    ah,0x2c
  405c34:	sahf   
  405c35:	push   esi
  405c36:	test   al,dh
  405c38:	mov    esp,0x17790361
  405c3d:	inc    edi
  405c3e:	pop    ebp
  405c3f:	pop    ebp
  405c40:	das    
  405c41:	dec    ebp
  405c42:	jmp    0xd495bc54
  405c47:	jg     0x405c8b
  405c49:	add    DWORD PTR [eax-0x5b],esp
  405c4c:	xor    edx,edi
  405c4e:	test   al,0x34
  405c50:	loop   0x405c3e
  405c52:	push   ds
  405c53:	lds    ecx,FWORD PTR [ecx+0x5f935c94]
  405c59:	sbb    esp,ebp
  405c5b:	or     DWORD PTR [eax-0x61],ebx
  405c5e:	cmp    edx,ebx
  405c60:	sub    BYTE PTR [ebx],ah
  405c62:	xchg   ebx,eax
  405c63:	cli    
  405c64:	loopne 0x405c15
  405c66:	cmp    bl,bl
  405c68:	ret    0x213
  405c6b:	push   ebx
  405c6c:	(bad)  
  405c6d:	cmp    ebx,DWORD PTR [esi]
  405c6f:	adc    al,0x3b
  405c71:	jns    0x405c22
  405c73:	(bad)  
  405c74:	in     eax,0xb1
  405c76:	iret   
  405c77:	imul   ecx,ebp,0x62
  405c7a:	and    edi,DWORD PTR [edi-0x1b79f7c4]
  405c80:	test   eax,0x9bc8e037
  405c85:	cli    
  405c86:	out    dx,al
  405c87:	cmp    BYTE PTR [edi-0x2c482b25],dl
  405c8d:	add    dh,bh
  405c8f:	and    al,0x51
  405c91:	mov    ch,0x9c
  405c93:	out    0xa5,al
  405c95:	std    
  405c96:	dec    esp
  405c97:	pop    ebx
  405c98:	iret   
  405c99:	push   esi
  405c9a:	jmp    0x10c0:0xa4c84a52
  405ca1:	cmp    al,BYTE PTR [eax]
  405ca3:	mov    ds:0xeede1e01,al
  405ca8:	daa    
  405ca9:	push   edx
  405caa:	lock cmp DWORD PTR [ebx+0x36d916d4],ebx
  405cb1:	fsub   st,st(0)
  405cb3:	jp     0x405d2b
  405cb5:	fst    QWORD PTR [eax-0x57]
  405cb8:	or     DWORD PTR [eax],ebp
  405cba:	outs   dx,DWORD PTR ds:[esi]
  405cbb:	test   bh,cl
  405cbd:	jp     0x405d33
  405cbf:	out    dx,eax
  405cc0:	cmp    BYTE PTR [ecx],dh
  405cc2:	jae    0x405d2e
  405cc4:	cld    
  405cc5:	ss nop
  405cc7:	mov    al,ds:0x4c557669
  405ccc:	or     BYTE PTR [ecx],al
  405cce:	mov    BYTE PTR [ebp+eiz*4-0x2f],ch
  405cd2:	sar    DWORD PTR [eax-0x5553b46c],1
  405cd8:	mov    al,BYTE PTR [edx+0x38]
  405cdb:	in     eax,0x9a
  405cdd:	dec    ecx
  405cde:	dec    edx
  405cdf:	add    ah,BYTE PTR [eax-0x698838ba]
  405ce5:	outs   dx,BYTE PTR ds:[esi]
  405ce6:	mov    esp,0xbd613723
  405ceb:	aam    0xa8
  405ced:	sbb    ah,BYTE PTR [ebp+0x5c]
  405cf0:	xor    BYTE PTR [edi+ebp*4],bh
  405cf3:	dec    ebx
  405cf4:	data16 mov dl,ch
  405cf7:	xchg   esp,eax
  405cf8:	xchg   BYTE PTR [ecx+0x3c],bh
  405cfb:	std    
  405cfc:	pop    esp
  405cfd:	icebp  
  405cfe:	fnsave [ebx+0x85cd025]
  405d04:	and    DWORD PTR [edx-0x78299d92],0xe026a947
  405d0e:	rcr    BYTE PTR [edx-0x33],1
  405d11:	fcom   st(1)
  405d13:	not    DWORD PTR [ebx]
  405d15:	or     edi,DWORD PTR [eax+0x5599bdd2]
  405d1b:	call   0xa43b:0xd7767d49
  405d22:	test   DWORD PTR ds:0xc1d17bc1,edi
  405d28:	mov    dl,0x21
  405d2a:	fld    QWORD PTR [ebp-0x66ea7d27]
  405d30:	rol    BYTE PTR [eax],cl
  405d32:	cld    
  405d33:	in     al,0x33
  405d35:	push   0x6a
  405d37:	hlt    
  405d38:	adc    bl,ch
  405d3a:	xor    al,0xa8
  405d3c:	cld    
  405d3d:	stc    
  405d3e:	sub    eax,0xd9b2dad0
  405d43:	jbe    0x405db0
  405d45:	sub    ebx,edi
  405d47:	(bad)  
  405d49:	sub    eax,0x2139c1eb
  405d4e:	xchg   edx,eax
  405d4f:	inc    edi
  405d50:	sub    DWORD PTR [edi+0x7bb544dc],edi
  405d56:	cmp    eax,0x8364512c
  405d5b:	push   ss
  405d5c:	adc    bh,BYTE PTR [ecx+0x4562d5b]
  405d62:	addr16 stc 
  405d64:	clc    
  405d65:	test   al,0xd8
  405d67:	arpl   cx,cx
  405d69:	jns    0x405d02
  405d6b:	mov    cl,0x7d
  405d6d:	mov    ds:0x157c0718,eax
  405d72:	push   ecx
  405d73:	dec    esp
  405d74:	or     eax,0x9a05dc37
  405d79:	fstp   QWORD PTR [esi]
  405d7b:	xor    eax,0xee45eff1
  405d80:	(bad)  {k4}
  405d85:	(bad)  
  405d87:	cmp    dh,BYTE PTR [eax+0x44]
  405d8a:	push   0xffffffbe
  405d8c:	xchg   ebp,eax
  405d8d:	out    dx,al
  405d8e:	dec    ebp
  405d8f:	ror    DWORD PTR [ebx-0x33d8e72e],1
  405d95:	fst    QWORD PTR [eax+0x4b]
  405d98:	xchg   esi,eax
  405d99:	in     al,dx
  405d9a:	add    ecx,DWORD PTR [esp+ecx*2-0x3b]
  405d9e:	sbb    BYTE PTR [edx],ch
  405da0:	pop    sp
  405da2:	sub    al,0xc9
  405da4:	xchg   edi,eax
  405da5:	xor    al,0x13
  405da7:	pop    ebp
  405da8:	inc    eax
  405da9:	or     al,BYTE PTR [ebx+edx*4]
  405dac:	mov    BYTE PTR [edi+ebp*1+0x6d592d13],dh
  405db3:	xchg   edi,eax
  405db4:	mov    ah,0x7f
  405db6:	push   esp
  405db7:	aaa    
  405db8:	neg    DWORD PTR [ebx]
  405dba:	(bad)  
  405dbb:	xor    DWORD PTR [edi+edx*2],edi
  405dbe:	int    0x24
  405dc0:	test   BYTE PTR [ecx+0x7b47896],ah
  405dc6:	push   cs
  405dc7:	mov    eax,ds:0x4c031fc9
  405dcc:	mov    bh,0x7e
  405dce:	mov    ch,0xbe
  405dd0:	clc    
  405dd1:	mov    ch,0x54
  405dd3:	out    dx,al
  405dd4:	sbb    al,BYTE PTR [eax]
  405dd6:	dec    ebp
  405dd7:	mov    ah,BYTE PTR [eax+0x5ea3edbc]
  405ddd:	xchg   edx,eax
  405dde:	xchg   edi,eax
  405ddf:	add    DWORD PTR [ebx+eax*2-0x16],esi
  405de3:	rcr    DWORD PTR [ecx],0xed
  405de6:	push   ss
  405de7:	outs   dx,DWORD PTR ds:[esi]
  405de8:	mov    bl,0x1d
  405dea:	lahf   
  405deb:	inc    eax
  405dec:	fsubr  QWORD PTR [eax-0xde9bc2f]
  405df2:	stos   DWORD PTR es:[edi],eax
  405df3:	mov    WORD PTR [esp+eax*2],gs
  405df6:	and    eax,0xa22ffddb
  405dfb:	mov    dh,0xc3
  405dfd:	jo     0x405e30
  405dff:	mov    cl,dl
  405e01:	stc    
  405e02:	jnp    0x405e7a
  405e04:	test   al,0x7e
  405e06:	sar    dh,0x42
  405e09:	cmp    al,0x87
  405e0b:	or     al,0x51
  405e0d:	and    DWORD PTR [eax+ebp*8+0x3dd41fd0],ecx
  405e14:	out    dx,al
  405e15:	add    eax,0xc0dd37fc
  405e1a:	cmc    
  405e1b:	dec    edi
  405e1c:	cmc    
  405e1d:	test   al,0x65
  405e1f:	mov    esp,0xd51e23d6
  405e24:	xor    dl,ch
  405e26:	mov    ss,WORD PTR [ebx]
  405e28:	mov    eax,ds:0x7fc6d3e0
  405e2d:	xchg   edi,eax
  405e2e:	and    cl,BYTE PTR [esi-0x32]
  405e31:	mov    bl,0x14
  405e33:	cmp    BYTE PTR [esi],0x9d
  405e36:	(bad)  
  405e37:	jge    0x405e0d
  405e39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e3a:	fisub  WORD PTR [eax+0x5532f9e1]
  405e40:	ins    BYTE PTR es:[edi],dx
  405e41:	mov    eax,DWORD PTR [ebp+esi*8-0x4dce0256]
  405e48:	adc    dl,bh
  405e4a:	sbb    eax,0x9d319006
  405e4f:	jno    0x405def
  405e51:	xor    BYTE PTR [eax],0x6f
  405e54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e55:	mov    ebp,0x9ee17119
  405e5a:	dec    esi
  405e5b:	mov    ebx,0x69a37e0c
  405e60:	test   bl,dh
  405e62:	mov    cl,0x8e
  405e64:	cmp    ecx,eax
  405e66:	loop   0x405e8f
  405e68:	cmp    esp,DWORD PTR [eax-0x7d5c165a]
  405e6e:	jmp    0xd433:0x452617fb
  405e75:	mov    dl,0xf3
  405e77:	sbb    al,0xb9
  405e79:	pop    ecx
  405e7a:	and    DWORD PTR [ebx],ecx
  405e7c:	aam    0xfc
  405e7e:	push   edi
  405e7f:	jo     0x405e84
  405e81:	sar    eax,1
  405e83:	shr    DWORD PTR [edx+esi*8],cl
  405e86:	xor    BYTE PTR [ebx],0x7e
  405e89:	ret    
  405e8a:	outs   dx,BYTE PTR ds:[esi]
  405e8b:	out    0x1,eax
  405e8d:	loope  0x405e6b
  405e8f:	cwde   
  405e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e91:	mov    eax,ds:0x1ff3daed
  405e96:	outs   dx,BYTE PTR ds:[esi]
  405e97:	ins    BYTE PTR es:[edi],dx
  405e98:	scas   al,BYTE PTR es:[edi]
  405e99:	jmp    0xcebc352f
  405e9e:	xor    ah,BYTE PTR [eax-0x2d]
  405ea1:	outs   dx,DWORD PTR ds:[esi]
  405ea2:	js     0x405efe
  405ea4:	cmp    cl,ch
  405ea6:	(bad)  
  405ea7:	xchg   ebp,eax
  405ea8:	mov    eax,DWORD PTR [eax+eiz*4+0x8]
  405eac:	mov    ch,BYTE PTR [edx]
  405eae:	inc    ebp
  405eaf:	push   ss
  405eb0:	retf   
  405eb1:	sahf   
  405eb2:	jp     0x405ef6
  405eb4:	(bad)  
  405eb5:	xchg   esp,eax
  405eb6:	pop    ebp
  405eb7:	mov    ds:0x7acfd2d6,eax
  405ebc:	lea    ebp,[ecx+0x40]
  405ebf:	xchg   edi,eax
  405ec0:	add    al,0x2a
  405ec2:	jbe    0x405eb5
  405ec4:	jle    0x405e8f
  405ec6:	rcr    DWORD PTR [esi+0x10],cl
  405ec9:	jbe    0x405f30
  405ecb:	hlt    
  405ecc:	cmp    dl,BYTE PTR [esi-0x46ede177]
  405ed2:	cld    
  405ed3:	and    DWORD PTR [ebx+0x346e88ac],edx
  405ed9:	loopne 0x405ec3
  405edb:	jge    0x405f03
  405edd:	and    bh,BYTE PTR [esi-0x5a72d6e7]
  405ee3:	mov    eax,0x6f27c963
  405ee8:	pop    edi
  405ee9:	mov    ?,WORD PTR ds:0x718dcc7f
  405eef:	cmp    bh,bl
  405ef1:	stos   BYTE PTR es:[edi],al
  405ef2:	leave  
  405ef3:	mov    ebp,0xbca1e789
  405ef8:	test   al,0x11
  405efa:	gs pusha 
  405efc:	aad    0x6
  405efe:	sub    DWORD PTR [esi-0x5e2689a7],eax
  405f04:	les    eax,FWORD PTR [ebp-0x409ff31c]
  405f0a:	mov    DWORD PTR [ebp-0x2a176af4],eax
  405f10:	xor    BYTE PTR [edi-0x5c],dl
  405f13:	cs mov edx,0x94f23cd0
  405f19:	jno    0x405f6c
  405f1b:	jo     0x405eb0
  405f1d:	lds    di,DWORD PTR [ebx+0x6f]
  405f21:	je     0x405efe
  405f23:	add    ah,0xc6
  405f26:	pop    ebp
  405f27:	leave  
  405f28:	sbb    al,0x8c
  405f2a:	adc    edi,DWORD PTR [edi-0x65c2df07]
  405f30:	jg     0x405f4f
  405f32:	push   0x31f68b7c
  405f37:	pushf  
  405f38:	cmp    BYTE PTR [eax+ebp*1],ch
  405f3b:	mov    al,0xf
  405f3d:	mov    ebx,0x668ccc20
  405f42:	pop    ds
  405f43:	in     eax,0xcd
  405f45:	test   al,0xd9
  405f47:	inc    ebx
  405f48:	push   esp
  405f49:	mov    ch,0xc5
  405f4b:	push   ebx
  405f4c:	mov    ecx,edx
  405f4e:	jle    0x405ed1
  405f50:	lock cli 
  405f52:	jb     0x405f69
  405f54:	in     eax,0x6a
  405f56:	mov    ds:0xdb51e572,al
  405f5b:	ins    DWORD PTR es:[edi],dx
  405f5c:	fiadd  DWORD PTR [ebx-0x5dda6a9f]
  405f62:	jbe    0x405fb8
  405f64:	fisttp QWORD PTR [bx]
  405f67:	or     ah,BYTE PTR [eax+0x41]
  405f6a:	jmp    0x405f46
  405f6c:	mov    edx,ss
  405f6e:	in     eax,0x3b
  405f70:	jne    0x405fe8
  405f72:	fst    DWORD PTR [ebx-0x46f19918]
  405f78:	sub    BYTE PTR [ebp+0x5f69bc31],al
  405f7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f7f:	popf   
  405f80:	in     al,0xcb
  405f82:	sub    ebp,DWORD PTR ds:0xfa9cff25
  405f88:	cmp    al,0x42
  405f8a:	dec    esi
  405f8b:	xchg   edi,eax
  405f8c:	not    eax
  405f8e:	mov    BYTE PTR [esi+0x678f932],al
  405f94:	imul   edx,DWORD PTR [edx-0x9],0xfffffff3
  405f98:	sbb    eax,0x427623f1
  405f9d:	ds scas al,BYTE PTR es:[edi]
  405f9f:	sub    BYTE PTR [edx-0x2479436e],0x62
  405fa6:	lea    ecx,[eax+0x2102569]
  405fac:	pusha  
  405fad:	xchg   edi,eax
  405fae:	xchg   DWORD PTR [eax-0x7f],eax
  405fb1:	call   0xcb7ed261
  405fb6:	or     DWORD PTR [edi],0x2b
  405fb9:	mov    dh,0x6f
  405fbb:	ins    DWORD PTR es:[edi],dx
  405fbc:	or     DWORD PTR [edi+0x743ecd9d],edi
  405fc2:	xor    eax,edx
  405fc4:	(bad)  
  405fc5:	mov    cl,0x60
  405fc7:	(bad)  
  405fc8:	pushf  
  405fc9:	pop    ebx
  405fca:	imul   edx,DWORD PTR [edx+ebx*4],0x28
  405fce:	sub    eax,ecx
  405fd0:	mov    cl,ch
  405fd2:	cld    
  405fd3:	repnz (bad) [edi]
  405fd6:	inc    esi
  405fd7:	and    al,0x41
  405fd9:	ret    0x6d4
  405fdc:	iret   
  405fdd:	xchg   edx,eax
  405fde:	jecxz  0x406008
  405fe0:	mov    dl,BYTE PTR [eax-0x6c]
  405fe3:	push   eax
  405fe4:	pop    edx
  405fe5:	push   ebp
  405fe6:	mov    al,ds:0xbb8879ea
  405feb:	add    al,0x9b
  405fed:	mov    ebx,0x6f580e29
  405ff2:	pusha  
  405ff3:	lock gs inc ebp
  405ff6:	and    al,0x24
  405ff8:	mov    dl,0x13
  405ffa:	(bad)  
  405ffb:	retf   0x445c
  405ffe:	retf   
  405fff:	ret    
  406000:	xchg   BYTE PTR [esp+esi*2],bh
  406003:	enter  0x1579,0xea
  406007:	sbb    BYTE PTR [ebp-0x6687632a],0x8
  40600e:	dec    esp
  40600f:	mov    cl,0x88
  406011:	stos   DWORD PTR es:[edi],eax
  406012:	(bad)  
  406013:	xchg   edx,eax
  406014:	mov    bl,0x48
  406016:	mov    cl,0x68
  406018:	retf   
  406019:	mov    WORD PTR [edi+0x57],?
  40601c:	add    al,0x73
  40601e:	pop    ebx
  40601f:	cmp    BYTE PTR [si],ah
  406022:	fs pop edx
  406024:	in     al,0x95
  406026:	mov    esi,0xae94f23e
  40602b:	sub    ah,bl
  40602d:	sbb    DWORD PTR [ebx+0x26],ebx
  406030:	xor    al,ah
  406032:	shl    DWORD PTR [ebp+0x1c1aa319],1
  406038:	adc    DWORD PTR [ebx],esi
  40603a:	mov    BYTE PTR [ebx],0xc7
  40603d:	cmp    edx,eax
  40603f:	je     0x408557
  406045:	mov    eax,DWORD PTR [ebp-0x8]
  406048:	mov    DWORD PTR [ebp-0x18],eax
  40604b:	mov    eax,DWORD PTR [ebp-0x10]
  40604e:	add    eax,DWORD PTR [ebp-0x54]
  406051:	mov    DWORD PTR [ebp-0x1c],0xf89c85a1
  406058:	mov    DWORD PTR [ebp-0x8],eax
  40605b:	mov    eax,0xf89c85a2
  406060:	mov    DWORD PTR [ebp-0x28],eax
  406063:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  40606a:	mov    DWORD PTR [ebp-0x40],0xf89c85bc
  406071:	mov    DWORD PTR [ebp-0x30],eax
  406074:	mov    eax,DWORD PTR [ebp-0x1c]
  406077:	xor    eax,esi
  406079:	add    eax,edi
  40607b:	jmp    0x408513
  406080:	mov    DWORD PTR [ebp-0x4c],0xf89c85b4
  406087:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40608e:	mov    eax,DWORD PTR [ebp-0x30]
  406091:	mov    edx,DWORD PTR [ebp-0xc]
  406094:	xor    eax,esi
  406096:	add    eax,edi
  406098:	imul   eax,edx
  40609b:	mov    edx,DWORD PTR [ebp-0x8]
  40609e:	mov    al,BYTE PTR [eax+edx*1]
  4060a1:	mov    BYTE PTR [ebp-0x1],al
  4060a4:	mov    eax,DWORD PTR [ebp-0x30]
  4060a7:	mov    edx,DWORD PTR [ebp-0xc]
  4060aa:	xor    eax,esi
  4060ac:	add    eax,edi
  4060ae:	imul   eax,edx
  4060b1:	mov    edx,DWORD PTR [ebp-0x5c]
  4060b4:	xor    edx,esi
  4060b6:	add    eax,edx
  4060b8:	mov    edx,DWORD PTR [ebp-0x8]
  4060bb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  4060c3:	mov    edx,DWORD PTR [ebp-0x4c]
  4060c6:	xor    edx,esi
  4060c8:	lea    eax,[edx+eax*1+0x3272f3]
  4060cf:	movzx  edx,BYTE PTR [ebp-0x1]
  4060d3:	xor    edx,eax
  4060d5:	mov    BYTE PTR [ebp-0x1],dl
  4060d8:	mov    al,BYTE PTR [ebp-0x1]
  4060db:	mov    edx,DWORD PTR [ebp-0x30]
  4060de:	mov    ebx,DWORD PTR [ebp-0xc]
  4060e1:	xor    edx,esi
  4060e3:	add    edx,edi
  4060e5:	imul   edx,ebx
  4060e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4060eb:	mov    BYTE PTR [edx+ebx*1],al
  4060ee:	mov    eax,DWORD PTR [ebp-0x30]
  4060f1:	mov    edx,DWORD PTR [ebp-0xc]
  4060f4:	xor    eax,esi
  4060f6:	add    eax,edi
  4060f8:	imul   eax,edx
  4060fb:	mov    edx,DWORD PTR [ebp-0x8]
  4060fe:	mov    al,BYTE PTR [eax+edx*1]
  406101:	mov    BYTE PTR [ebp-0x1],al
  406104:	mov    eax,DWORD PTR [ebp-0x30]
  406107:	mov    edx,DWORD PTR [ebp-0xc]
  40610a:	xor    eax,esi
  40610c:	add    eax,edi
  40610e:	imul   eax,edx
  406111:	mov    edx,DWORD PTR [ebp-0x28]
  406114:	xor    edx,esi
  406116:	add    eax,edx
  406118:	mov    edx,DWORD PTR [ebp-0x8]
  40611b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  406123:	mov    edx,DWORD PTR [ebp-0x50]
  406126:	xor    edx,esi
  406128:	lea    eax,[edx+eax*1+0x3272f3]
  40612f:	movzx  edx,BYTE PTR [ebp-0x1]
  406133:	xor    edx,eax
  406135:	mov    BYTE PTR [ebp-0x1],dl
  406138:	mov    al,BYTE PTR [ebp-0x1]
  40613b:	mov    edx,DWORD PTR [ebp-0x30]
  40613e:	mov    ebx,DWORD PTR [ebp-0xc]
  406141:	xor    edx,esi
  406143:	add    edx,edi
  406145:	imul   edx,ebx
  406148:	mov    ebx,DWORD PTR [ebp-0x8]
  40614b:	jmp    0x4084fc
  406150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406151:	mov    dh,0x7b
  406153:	sbb    eax,0x86859860
  406158:	scas   eax,DWORD PTR es:[edi]
  406159:	mov    cl,0xac
  40615b:	nop
  40615c:	loopne 0x4061d3
  40615e:	adc    esi,ecx
  406160:	pop    ebx
  406161:	cmp    BYTE PTR [ebx-0x7ca3107d],al
  406167:	sbb    DWORD PTR [ebp+0x4b],0xffffff9c
  40616b:	adc    esp,eax
  40616d:	adc    edi,DWORD PTR [esi]
  40616f:	pop    eax
  406170:	jl     0x4061c4
  406172:	fild   DWORD PTR [ecx-0x5c]
  406175:	cmc    
  406176:	rcr    DWORD PTR [ebx-0x24],cl
  406179:	dec    edx
  40617a:	jecxz  0x4060fe
  40617c:	pusha  
  40617d:	push   edi
  40617e:	shr    BYTE PTR [ecx],cl
  406180:	bound  edx,QWORD PTR [ecx]
  406182:	jg     0x40614a
  406184:	pop    eax
  406185:	or     DWORD PTR [esp+ebp*4-0x6b68cfbe],esp
  40618c:	(bad)  
  40618d:	lahf   
  40618e:	test   eax,0xc82a5daf
  406193:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406194:	ret    0x24
  406197:	popf   
  406198:	xchg   edi,eax
  406199:	out    dx,eax
  40619a:	xchg   esi,eax
  40619b:	(bad)  
  40619c:	arpl   WORD PTR ds:0x34f3f3b0,cx
  4061a2:	mov    bh,0x1f
  4061a4:	es dec edx
  4061a6:	inc    ecx
  4061a7:	aam    0xfc
  4061a9:	mov    esp,0x34b61bd3
  4061ae:	or     al,0x67
  4061b0:	mov    WORD PTR [ebp-0x48],gs
  4061b3:	sub    DWORD PTR [eax+0x51],ecx
  4061b6:	fist   DWORD PTR [edi]
  4061b8:	adc    DWORD PTR [eax],esp
  4061ba:	das    
  4061bb:	daa    
  4061bc:	out    dx,al
  4061bd:	jge    0x4061d5
  4061bf:	sub    eax,0xb0ceac9f
  4061c4:	leave  
  4061c5:	and    al,0xb5
  4061c7:	repz stc 
  4061c9:	in     al,0x66
  4061cb:	movaps XMMWORD PTR [esi],xmm3
  4061ce:	xchg   edx,eax
  4061cf:	ds push es
  4061d1:	jl     0x406242
  4061d3:	xor    al,0xc9
  4061d5:	push   eax
  4061d6:	pop    ss
  4061d7:	dec    ebx
  4061d8:	jno    0x406231
  4061da:	pop    eax
  4061db:	ins    DWORD PTR es:[edi],dx
  4061dc:	retf   0x1046
  4061df:	pop    es
  4061e0:	leave  
  4061e1:	shl    DWORD PTR [edx+0x66f99df6],0x98
  4061e8:	mov    esp,0xb3757aea
  4061ed:	fadd   st(7),st
  4061ef:	sbb    eax,0xc6a518a7
  4061f4:	xchg   al,cl
  4061f6:	dec    edx
  4061f7:	add    edx,DWORD PTR [edx+edi*4-0x7619f6cc]
  4061fe:	jno    0x406255
  406200:	mov    ds:0xe9665d2e,al
  406205:	sbb    BYTE PTR [ecx+0xde5a18],bh
  40620b:	test   al,0x4d
  40620d:	outs   dx,BYTE PTR ds:[esi]
  40620e:	pop    esp
  40620f:	mov    edx,0xe9777f90
  406214:	imul   esi,edx,0xffffffcc
  406217:	inc    esp
  406218:	rol    BYTE PTR [edi-0xa],0x29
  40621c:	daa    
  40621d:	(bad)  
  40621e:	xchg   edx,eax
  40621f:	xchg   esi,eax
  406220:	jns    0x406204
  406222:	pop    ebp
  406223:	call   0xc70754f6
  406228:	ins    BYTE PTR es:[edi],dx
  406229:	std    
  40622a:	fild   QWORD PTR [eax-0x59b8afe9]
  406230:	jmp    0x406272
  406232:	sbb    bl,BYTE PTR [ecx]
  406234:	sub    DWORD PTR [esi-0x32],esp
  406237:	inc    esp
  406238:	bound  edx,QWORD PTR [eax+0x1f5500c]
  40623e:	add    DWORD PTR [ebx+ebx*2-0x26],0xffffffcc
  406243:	pop    ds
  406244:	xchg   ebp,eax
  406245:	mov    gs,WORD PTR [eax+0x65]
  406248:	mov    edx,0x57c3b5d0
  40624d:	aas    
  40624e:	and    BYTE PTR [ebx],bl
  406250:	cmpxchg BYTE PTR [eax+0x1f],ah
  406254:	push   cs
  406255:	es dec ebx
  406257:	das    
  406258:	mov    edi,0x3bd32a60
  40625d:	ins    BYTE PTR es:[edi],dx
  40625e:	bound  esi,QWORD PTR [edi]
  406260:	sbb    ch,BYTE PTR [ecx-0x64]
  406263:	ins    DWORD PTR es:[edi],dx
  406264:	fstp   QWORD PTR [esi]
  406266:	outs   dx,DWORD PTR ds:[esi]
  406267:	or     BYTE PTR [ecx+0x77],cl
  40626a:	xchg   ebp,eax
  40626b:	mov    edi,0x19bd1031
  406270:	mov    edx,0x8ac9f319
  406275:	and    eax,0x7ef6538c
  40627a:	and    DWORD PTR [esi+0x60],0xc47700c5
  406281:	adc    edx,DWORD PTR ds:0x3a3b047e
  406287:	xchg   ebx,eax
  406288:	pop    es
  406289:	xchg   edi,eax
  40628a:	sub    BYTE PTR [esi],dh
  40628c:	icebp  
  40628d:	ja     0x406291
  40628f:	xchg   esp,eax
  406290:	inc    esp
  406291:	hlt    
  406292:	stos   DWORD PTR es:[edi],eax
  406293:	dec    edi
  406294:	and    eax,0x6e74af5d
  406299:	mov    ah,0x47
  40629b:	mov    eax,ds:0x2cb76bb2
  4062a0:	fcom   DWORD PTR [ebp-0x1a]
  4062a3:	jmp    0xbc1b:0x5ff98f4d
  4062aa:	dec    ebp
  4062ab:	add    BYTE PTR [edx+ebx*1-0x20],0xe0
  4062b0:	ret    
  4062b1:	sbb    DWORD PTR [ebx+0x12],eax
  4062b4:	sub    DWORD PTR [ecx-0xe],ebx
  4062b7:	jle    0x406337
  4062b9:	bound  esi,QWORD PTR [ecx]
  4062bb:	xchg   edx,eax
  4062bc:	(bad)  
  4062bd:	xor    ecx,DWORD PTR [ebx]
  4062bf:	test   ecx,eax
  4062c1:	mov    edx,0x6723f248
  4062c6:	xor    eax,0x1e76b60b
  4062cb:	shl    DWORD PTR [edx+esi*8+0x5d6613e],1
  4062d2:	pop    ss
  4062d3:	adc    DWORD PTR ds:0x3c738e3d,0x60
  4062da:	push   ds
  4062db:	push   0xffffff83
  4062dd:	mov    eax,0x6e2b104c
  4062e2:	mov    ebp,0x310c6a0c
  4062e7:	cmp    bh,BYTE PTR [edx+esi*1-0x77a7a2aa]
  4062ee:	mov    ebx,0xedbd1779
  4062f3:	inc    esp
  4062f4:	popa   
  4062f5:	or     DWORD PTR [ecx*2+0x30ce6df2],ebp
  4062fc:	pop    ecx
  4062fd:	sub    bh,dl
  4062ff:	pop    esp
  406300:	repnz idiv DWORD PTR [esi+eiz*1-0x475a73a3]
  406308:	mov    dh,0x3e
  40630a:	addr16 leave 
  40630c:	(bad)  
  40630d:	jae    0x406349
  40630f:	sub    al,0xb7
  406311:	(bad)  
  406313:	repz pop ebx
  406315:	push   esi
  406316:	mov    si,0x132f
  40631a:	cmp    BYTE PTR [eax],al
  40631c:	cli    
  40631d:	pushf  
  40631e:	jae    0x40632c
  406320:	mov    esp,0x71fc4be4
  406325:	mov    ebx,0xb9942e80
  40632a:	add    al,0xa6
  40632c:	std    
  40632d:	imul   esp,DWORD PTR [esp+edi*8+0xa],0x5c
  406332:	call   0xe388:0x8e77a60b
  406339:	out    0xdf,eax
  40633b:	cdq    
  40633c:	jb     0x406344
  40633e:	dec    edi
  40633f:	cmc    
  406340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406341:	loope  0x40638a
  406343:	shr    DWORD PTR [ecx+0x6c],cl
  406346:	mov    bl,0xd4
  406348:	sub    DWORD PTR [esp+eiz*2-0x662f8045],edx
  40634f:	add    esi,edx
  406351:	add    esi,edx
  406353:	dec    ebx
  406354:	mov    al,0xe
  406356:	rcl    BYTE PTR [esi+0x239d74be],1
  40635c:	int    0xae
  40635e:	push   ds
  40635f:	movlps xmm3,QWORD PTR [ecx]
  406362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406363:	rcl    DWORD PTR [ecx+esi*1+0xf6ca532],1
  40636a:	and    bh,BYTE PTR [edx+esi*8]
  40636d:	mov    BYTE PTR [esi+0x16],al
  406370:	jnp    0x40631f
  406372:	cmp    al,0xa8
  406374:	popf   
  406375:	int    0x6d
  406377:	push   edi
  406378:	call   edx
  40637a:	ror    DWORD PTR [ecx],0xda
  40637d:	das    
  40637e:	mov    cl,BYTE PTR ds:[ebx-0xa95ae6e]
  406385:	lods   eax,DWORD PTR ds:[esi]
  406386:	adc    dl,cl
  406388:	jge    0x4063ed
  40638a:	mov    eax,ds:0x43613763
  40638f:	loopne 0x40640a
  406391:	pop    edi
  406392:	or     BYTE PTR [ebp+0x77],0x45
  406396:	mov    ds:0xecfe2e1e,eax
  40639b:	push   0x7
  40639d:	cwde   
  40639e:	adc    eax,0xd734c33b
  4063a3:	sbb    eax,0x573ddba6
  4063a8:	loop   0x4063f5
  4063aa:	out    dx,eax
  4063ab:	fsubr  st(3),st
  4063ad:	mov    dh,0x2f
  4063af:	scas   eax,DWORD PTR es:[edi]
  4063b0:	out    0x66,eax
  4063b2:	adc    edi,ecx
  4063b4:	push   cs
  4063b5:	mov    BYTE PTR [ebx-0x2e86693e],ch
  4063bb:	cmp    al,0x62
  4063bd:	add    eax,0x9c57acb
  4063c2:	push   edx
  4063c3:	sub    edi,esi
  4063c5:	mov    eax,0xdfc1d542
  4063ca:	loop   0x4063b4
  4063cc:	sbb    ch,BYTE PTR [ecx-0x6f75893a]
  4063d2:	dec    ebp
  4063d3:	sub    eax,DWORD PTR [esi]
  4063d5:	and    al,BYTE PTR [edx-0x7d]
  4063d8:	imul   esp,DWORD PTR [eax+0x4b],0xf9d5c31d
  4063df:	data16 lods al,BYTE PTR ds:[esi]
  4063e1:	sub    esi,DWORD PTR ds:0xf1403f22
  4063e7:	jb     0x40642f
  4063e9:	push   ecx
  4063ea:	call   0xb209:0xb858e469
  4063f1:	sub    ebx,edi
  4063f3:	cmp    cl,al
  4063f5:	mov    esp,0x7e233b72
  4063fa:	mov    esp,0x9e5218ab
  4063ff:	stos   DWORD PTR es:[edi],eax
  406400:	dec    ecx
  406401:	dec    edx
  406402:	ror    DWORD PTR [ebx+0x37e454af],1
  406408:	(bad)  
  406409:	pop    esi
  40640a:	cmp    ebx,0x3a
  40640d:	ja     0x406472
  40640f:	xor    BYTE PTR [eax-0x39],bh
  406412:	xor    eax,ecx
  406414:	push   ebx
  406415:	jb     0x406490
  406417:	idiv   BYTE PTR [eax-0x32388d57]
  40641d:	loop   0x40645a
  40641f:	jg     0x406477
  406421:	xor    al,cl
  406423:	aaa    
  406424:	mov    eax,ds:0x998d49d4
  406429:	add    DWORD PTR [esi],esi
  40642b:	sbb    eax,0x519be824
  406430:	add    ah,ah
  406432:	sub    edi,DWORD PTR [ecx-0x7e5f0f7b]
  406438:	cmp    al,ch
  40643a:	pop    es
  40643b:	into   
  40643c:	push   ebx
  40643d:	mov    ah,bl
  40643f:	jl     0x406493
  406441:	xchg   edx,eax
  406442:	mov    esi,0x5320757f
  406447:	nop
  406448:	aam    0x29
  40644a:	stos   DWORD PTR es:[edi],eax
  40644b:	(bad)  
  40644c:	lahf   
  40644d:	sub    DWORD PTR [ecx+0x5fdf4b4d],eax
  406453:	bound  edx,QWORD PTR [edi+0x2]
  406456:	call   0x51f:0x856fac30
  40645d:	pop    ebx
  40645e:	(bad)  
  40645f:	cli    
  406460:	pushf  
  406461:	lock sbb bl,BYTE PTR [ebp-0x645f296d]
  406468:	cmp    DWORD PTR [ecx+0x2a28f8b8],0xeb8ecbb6
  406472:	je     0x4064a5
  406474:	ret    0x67d1
  406477:	gs dec edx
  406479:	rcl    BYTE PTR ds:0x1adfb10b,1
  40647f:	push   ecx
  406480:	sbb    ebp,edi
  406482:	loop   0x406493
  406484:	lods   al,BYTE PTR ds:[esi]
  406485:	jae    0x406448
  406487:	mov    ch,0xcd
  406489:	mov    eax,0x225425a
  40648e:	lahf   
  40648f:	mov    BYTE PTR [ecx],ah
  406491:	jae    0x40645e
  406493:	mov    WORD PTR [ecx-0xe],?
  406496:	ins    BYTE PTR es:[edi],dx
  406497:	lock nop
  406499:	in     al,dx
  40649a:	push   edx
  40649b:	mov    ebx,0xc3cd9be6
  4064a0:	inc    edi
  4064a1:	dec    ecx
  4064a2:	ss dec edx
  4064a4:	mov    DWORD PTR [eax],ecx
  4064a6:	mov    BYTE PTR [ecx+0x351e2f95],cl
  4064ac:	inc    esi
  4064ad:	xor    al,0x42
  4064af:	xchg   DWORD PTR [ebx+0xf],edi
  4064b2:	or     al,0x2a
  4064b4:	sub    edi,DWORD PTR [edx+0x5a]
  4064b7:	adc    eax,0x9647c351
  4064bc:	jl     0x40645f
  4064be:	xor    al,0x78
  4064c0:	inc    esp
  4064c1:	sti    
  4064c2:	cmp    DWORD PTR [eax],ebx
  4064c4:	cmp    esi,edx
  4064c6:	jnp    0x406463
  4064c8:	je     0x40652d
  4064ca:	imul   ebx,DWORD PTR [ebp+0x7a],0x9777c071
  4064d1:	sub    DWORD PTR [ebx+0x6],0x8a91a50
  4064d8:	dec    esp
  4064d9:	call   0xa034:0x90d6b230
  4064e0:	(bad)  
  4064e1:	cld    
  4064e2:	mov    ebp,0xbb80653c
  4064e7:	mov    ecx,0x788ced82
  4064ec:	sar    DWORD PTR [ebp-0x38],0xe4
  4064f0:	jmp    0xd20c:0x4554520d
  4064f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064f8:	retf   
  4064f9:	rcr    BYTE PTR [ebx],0x7e
  4064fc:	sar    DWORD PTR [esp+esi*2],1
  4064ff:	mov    dl,bl
  406501:	jecxz  0x4064b4
  406503:	or     eax,0xc3427e32
  406508:	nop
  406509:	jmp    0x2a8e:0x1aeb9a68
  406510:	out    0x8d,al
  406512:	mov    al,ds:0x883f3c6c
  406517:	(bad)  
  406518:	das    
  406519:	mov    esp,DWORD PTR [edi+0x7c5de67f]
  40651f:	fwait
  406520:	popf   
  406521:	mov    al,0x67
  406523:	xchg   ebp,eax
  406524:	imul   BYTE PTR [eax+0x56]
  406527:	push   ss
  406528:	jbe    0x406564
  40652a:	mov    bl,0x48
  40652c:	push   ebp
  40652d:	lds    ecx,FWORD PTR [esi+ebp*8]
  406530:	pop    ebp
  406531:	mov    DWORD PTR [eax+ebp*2+0x4d],0xf733950f
  406539:	or     BYTE PTR cs:[ebp-0x21],0x6b
  40653e:	lahf   
  40653f:	(bad)  
  406540:	adc    BYTE PTR [esi],dl
  406542:	cli    
  406543:	fist   WORD PTR [edi+0x50]
  406546:	(bad)  
  406547:	(bad)  [edi-0x4c]
  40654a:	lea    ebx,[ecx-0x777e7941]
  406550:	cdq    
  406551:	jp     0x406585
  406553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406554:	not    BYTE PTR [ebx-0x377ea98d]
  40655a:	imul   BYTE PTR [ebp+0x67]
  40655d:	dec    esi
  40655e:	test   al,0x81
  406560:	sbb    cl,dh
  406562:	and    dh,BYTE PTR [esi]
  406564:	mov    BYTE PTR [ecx+0x6157b396],al
  40656a:	lods   al,BYTE PTR ds:[esi]
  40656b:	adc    DWORD PTR [eax-0x2d69edc9],edx
  406571:	daa    
  406572:	pop    ds
  406573:	add    eax,0xfc7214fe
  406578:	xor    DWORD PTR [esi-0x29],esi
  40657b:	jp     0x4065aa
  40657d:	mov    cl,0xb2
  40657f:	mov    ah,0xdb
  406581:	jp     0x406506
  406583:	xchg   esi,eax
  406584:	inc    esp
  406585:	lds    ebx,FWORD PTR [edx]
  406587:	nop
  406588:	hlt    
  406589:	rcr    WORD PTR [ebx],cl
  40658c:	xor    DWORD PTR [eax],eax
  40658e:	(bad)  
  40658f:	imul   eax,DWORD PTR [ebx-0x7a34970d],0x1ad08f4f
  406599:	fwait
  40659a:	sti    
  40659b:	out    dx,eax
  40659c:	cmp    al,0x88
  40659e:	(bad)  
  40659f:	fsubr  QWORD PTR [ecx]
  4065a1:	hlt    
  4065a2:	jne    0x4065f2
  4065a4:	test   DWORD PTR [ebp-0x60ee3acb],ebx
  4065aa:	fdiv   DWORD PTR [edx-0x726826e7]
  4065b0:	int    0x29
  4065b2:	cmp    DWORD PTR [eax+0x6d27e4ca],esp
  4065b8:	pushf  
  4065b9:	inc    esp
  4065ba:	leave  
  4065bb:	outs   dx,BYTE PTR ds:[esi]
  4065bc:	cld    
  4065bd:	xchg   DWORD PTR [edx],edi
  4065bf:	add    cl,BYTE PTR [ecx-0x58ec326f]
  4065c5:	ds cmp eax,0x6ca97990
  4065cb:	in     al,0x44
  4065cd:	sbb    edx,edi
  4065cf:	addr16 and bl,cl
  4065d2:	fwait
  4065d3:	mov    DWORD PTR [edi],esi
  4065d5:	sbb    ch,BYTE PTR [ebp+eax*2+0x51]
  4065d9:	nop
  4065da:	mov    esp,0x3dfbd0da
  4065df:	loopne 0x406655
  4065e1:	lods   eax,DWORD PTR ds:[esi]
  4065e2:	scas   al,BYTE PTR es:[edi]
  4065e3:	fadd   QWORD PTR ds:0x7e5c25c7
  4065e9:	mov    bh,0xc0
  4065eb:	lahf   
  4065ec:	xchg   ebp,eax
  4065ed:	clc    
  4065ee:	mov    eax,DWORD PTR [esi+0x6b588d8e]
  4065f4:	int    0x6
  4065f6:	xchg   esi,eax
  4065f7:	sbb    eax,0xce92c9b
  4065fc:	lds    esi,FWORD PTR ds:0x8060f4b8
  406602:	jo     0x4065fd
  406604:	aaa    
  406605:	inc    ebp
  406606:	addr16 fs add edi,esi
  40660a:	cmc    
  40660b:	fucomip st,st(6)
  40660d:	mov    al,ds:0xd103ee5b
  406612:	(bad)  
  406613:	xlat   BYTE PTR ds:[ebx]
  406614:	cmp    eax,0x884b77d0
  406619:	mov    dl,0x25
  40661b:	loop   0x40662d
  40661d:	pop    ecx
  40661e:	sbb    bh,ch
  406620:	ret    
  406621:	xor    DWORD PTR [edx],eax
  406623:	retf   0x8de9
  406626:	jmp    0x406656
  406628:	int    0x3a
  40662a:	das    
  40662b:	int3   
  40662c:	push   esi
  40662d:	inc    esi
  40662e:	inc    esp
  40662f:	das    
  406630:	in     eax,0x25
  406632:	jnp    0x4065e1
  406634:	scas   eax,DWORD PTR es:[edi]
  406635:	inc    esi
  406636:	mov    dh,0xe4
  406638:	arpl   WORD PTR ds:0xb579985b,sp
  40663e:	pop    ds
  40663f:	stos   BYTE PTR es:[edi],al
  406640:	fldenv [esi+ecx*8-0x6287ee14]
  406647:	mov    edi,0x25827e5e
  40664c:	xchg   edi,eax
  40664d:	jmp    0x9db9:0x18c751af
  406654:	mov    ebx,0xa2563f70
  406659:	and    eax,0xdd021881
  40665e:	push   cs
  40665f:	out    0xfd,eax
  406661:	push   ebx
  406662:	hlt    
  406663:	mov    esp,0x8f3b9bf9
  406668:	retf   0x74b7
  40666b:	mov    cl,0x87
  40666d:	push   edx
  40666e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40666f:	mov    esi,0x46016440
  406674:	push   0xffffff98
  406676:	repnz (bad) 
  406678:	or     al,ch
  40667a:	xchg   esp,eax
  40667b:	xchg   DWORD PTR [eax-0x3],edi
  40667e:	call   DWORD PTR [esi]
  406680:	xchg   ecx,eax
  406681:	pop    esp
  406682:	loope  0x40665b
  406684:	xchg   esp,eax
  406685:	mov    bl,0x47
  406687:	outs   dx,BYTE PTR ds:[esi]
  406688:	jmp    esp
  40668a:	nop
  40668b:	call   0x70218d1e
  406690:	jg     0x4066e7
  406692:	pop    ss
  406693:	imul   esp,DWORD PTR [edx],0xffffff90
  406696:	retw   
  406698:	push   es
  406699:	fimul  DWORD PTR [edi]
  40669b:	mov    al,0x66
  40669d:	jns    0x406701
  40669f:	rol    DWORD PTR [edi*8-0x58143fef],1
  4066a6:	add    al,0xf
  4066a8:	int3   
  4066a9:	adc    DWORD PTR [ecx-0x60a871ef],edx
  4066af:	pop    edi
  4066b0:	or     al,dl
  4066b2:	inc    eax
  4066b3:	int3   
  4066b4:	cmp    al,0xf7
  4066b6:	pop    ebx
  4066b7:	rol    DWORD PTR ds:0x8bdfd68e,0x55
  4066be:	jecxz  0x4066e0
  4066c0:	xor    eax,0x97488d53
  4066c5:	mov    bl,cl
  4066c7:	jno    0x406679
  4066c9:	jmp    0xff94:0x5e6b623a
  4066d0:	xchg   ebp,eax
  4066d1:	jmp    0x7231:0xff9c3e33
  4066d8:	out    dx,al
  4066d9:	stos   DWORD PTR es:[edi],eax
  4066da:	stos   DWORD PTR es:[edi],eax
  4066db:	scas   al,BYTE PTR es:[edi]
  4066dc:	cmp    eax,0xbc6e8976
  4066e1:	dec    esi
  4066e2:	int    0x33
  4066e4:	and    eax,0x7b2b7f7
  4066e9:	push   edx
  4066ea:	add    eax,DWORD PTR [ebp+0x31e5ba02]
  4066f0:	in     al,dx
  4066f1:	rol    DWORD PTR [edi+0x27],0x9f
  4066f5:	ins    BYTE PTR es:[edi],dx
  4066f6:	xchg   edx,eax
  4066f7:	jp     0x4066e9
  4066f9:	les    edx,FWORD PTR [edi]
  4066fb:	out    dx,eax
  4066fc:	ror    BYTE PTR [eax],1
  4066fe:	das    
  4066ff:	pop    DWORD PTR [ebx]
  406701:	int    0x27
  406703:	inc    edi
  406704:	out    0xb7,eax
  406706:	cmp    al,0x7
  406708:	lea    edx,[ecx-0x535b5b4c]
  40670e:	lods   al,BYTE PTR ds:[esi]
  40670f:	add    esp,esp
  406711:	je     0x40671a
  406713:	pop    edi
  406714:	push   cs
  406715:	aad    0xa7
  406717:	push   ecx
  406718:	pop    ds
  406719:	jmp    0x60c6:0xf12b575f
  406720:	inc    esi
  406721:	push   esp
  406722:	cmp    ebp,DWORD PTR [edx+ecx*8]
  406725:	xchg   DWORD PTR [ebx],edi
  406727:	sbb    eax,0x1eb89079
  40672c:	pop    bp
  40672e:	clc    
  40672f:	xchg   bp,ax
  406731:	and    ecx,DWORD PTR [ecx]
  406733:	ret    
  406734:	jbe    0x4066d0
  406736:	inc    eax
  406737:	mul    bl
  406739:	sbb    eax,0x8972ba37
  40673e:	and    BYTE PTR [edi+0x10c6b949],dh
  406744:	das    
  406745:	jns    0x406702
  406747:	lods   al,BYTE PTR ds:[esi]
  406748:	lahf   
  406749:	dec    ecx
  40674a:	loope  0x4066e7
  40674c:	pop    esi
  40674d:	in     eax,0x75
  40674f:	jb     0x406782
  406751:	push   ecx
  406752:	gs (bad) 
  406754:	rcl    BYTE PTR [ebx-0x53],1
  406757:	jg     0x40675c
  406759:	es jp  0x406740
  40675c:	inc    edi
  40675d:	xor    eax,0xd1919428
  406762:	fs pop ss
  406764:	cld    
  406765:	dec    esi
  406766:	stos   BYTE PTR es:[edi],al
  406767:	cmp    eax,0xfe41e57b
  40676c:	push   ebx
  40676d:	pushf  
  40676e:	cmp    BYTE PTR [edx-0xd],0x33
  406772:	or     eax,0xfe34dfc0
  406777:	push   0xb6baf20
  40677c:	push   ebx
  40677d:	les    ecx,FWORD PTR [ecx+0x3b]
  406780:	mov    esi,0x1cca9ab4
  406785:	push   edi
  406786:	test   BYTE PTR [edx-0x13],bh
  406789:	mov    bh,0x22
  40678b:	les    eax,FWORD PTR [esi-0x26eeae58]
  406791:	xor    DWORD PTR [ebp+0x0],0x39
  406795:	in     al,dx
  406796:	imul   ebp,edx,0x7dd5c667
  40679c:	mov    DWORD PTR [edx-0x6c22f2eb],edx
  4067a2:	test   BYTE PTR [eax],0x61
  4067a5:	outs   dx,BYTE PTR ds:[esi]
  4067a6:	pop    esp
  4067a7:	fs stc 
  4067a9:	fdivp  st(0),st
  4067ab:	and    DWORD PTR [edi],edi
  4067ad:	repnz retf 
  4067af:	mov    esp,0xf440a804
  4067b4:	out    0x25,eax
  4067b6:	not    DWORD PTR [esi+ebx*4]
  4067b9:	adc    BYTE PTR [eax],0x2c
  4067bc:	xchg   DWORD PTR ds:0xb4fd04ee,esi
  4067c2:	fdivr  st(3),st
  4067c4:	dec    ebx
  4067c5:	fimul  DWORD PTR [edi]
  4067c7:	ins    DWORD PTR es:[edi],dx
  4067c8:	xchg   esi,eax
  4067c9:	pop    ss
  4067ca:	inc    ebp
  4067cb:	(bad)  
  4067cc:	retf   0x83fc
  4067cf:	fld    QWORD PTR [ebx-0x6e]
  4067d2:	mov    ebx,0xb58984a9
  4067d7:	rcr    DWORD PTR [esi-0x1f],1
  4067da:	call   0xdc16735d
  4067df:	sar    DWORD PTR [edi+0x3d],cl
  4067e2:	retf   
  4067e3:	fsubr  QWORD PTR [edi]
  4067e5:	sbb    esp,DWORD PTR [ebx-0x66]
  4067e8:	adc    DWORD PTR [ecx+edi*1+0x6fb28a02],ecx
  4067ef:	inc    esp
  4067f0:	jmp    0x9a18abf7
  4067f5:	xchg   esi,eax
  4067f6:	xchg   ecx,eax
  4067f7:	addr16 push esp
  4067f9:	daa    
  4067fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067fb:	push   es
  4067fc:	push   0x2d37ab65
  406801:	out    0x1f,eax
  406803:	mov    ds:0xe3705125,al
  406808:	mov    DWORD PTR [esi],esp
  40680a:	jb     0x406862
  40680c:	pop    eax
  40680d:	jae    0x40684b
  40680f:	push   ds
  406810:	jg     0x40682f
  406812:	cmp    BYTE PTR [ebx],dh
  406814:	js     0x406894
  406816:	sub    al,0xa4
  406818:	(bad)  
  406819:	mov    ebp,esi
  40681b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40681c:	icebp  
  40681d:	mov    edx,0x77d2a98c
  406822:	mov    ecx,DWORD PTR [ecx]
  406824:	call   0x8f4282e
  406829:	icebp  
  40682a:	pop    edi
  40682b:	fidiv  WORD PTR [ebx+0xc659914]
  406831:	mov    DWORD PTR [eax],edx
  406833:	aas    
  406834:	pop    eax
  406835:	pop    edx
  406836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406837:	sub    ebx,DWORD PTR [eax-0x59]
  40683a:	push   ss
  40683b:	inc    edi
  40683c:	jecxz  0x4068b1
  40683e:	adc    BYTE PTR [esi+edx*8-0x45],ah
  406842:	push   es
  406843:	(bad)  
  406844:	int    0x2
  406846:	cmp    ebx,DWORD PTR [edi]
  406848:	outs   dx,BYTE PTR ds:[esi]
  406849:	sub    ebx,DWORD PTR [eax+edi*4]
  40684c:	add    esi,ecx
  40684e:	mov    eax,ds:0x9cb080da
  406853:	iret   
  406854:	mov    dh,0xa1
  406856:	pop    esi
  406857:	jmp    0xd8fc:0xcf26327c
  40685e:	sbb    BYTE PTR [esp+ecx*8-0x7f],cl
  406862:	jl     0x91eba029
  406868:	push   esp
  406869:	jl     0x40686f
  40686b:	adc    eax,DWORD PTR [esi+0x20]
  40686e:	pop    esi
  40686f:	add    al,0x80
  406871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406872:	jl     0x40683b
  406874:	nop
  406875:	xchg   edx,eax
  406876:	loopne 0x40681a
  406878:	mov    bl,0x1d
  40687a:	hlt    
  40687b:	pop    ebx
  40687c:	dec    edi
  40687d:	sahf   
  40687e:	lea    eax,[ecx-0x20]
  406881:	ja     0x406825
  406883:	ret    0x7c0b
  406886:	or     DWORD PTR ds:0x435f6b55,ecx
  40688c:	add    eax,0xefd97fc5
  406891:	mov    bh,0x75
  406893:	call   0xc12b:0xf49d436d
  40689a:	inc    ebx
  40689b:	pop    es
  40689c:	pusha  
  40689d:	xor    BYTE PTR [edx],bl
  40689f:	loop   0x4068d7
  4068a1:	mov    ah,0x4d
  4068a3:	mov    ecx,0xfd4ab5eb
  4068a8:	fstp   TBYTE PTR [esi]
  4068aa:	imul   edi,DWORD PTR [ecx+0x157d9cd0],0xffffffdf
  4068b1:	mov    cs,WORD PTR [edi+0x75]
  4068b4:	fnsetpm(287 only) 
  4068b6:	add    al,bh
  4068b8:	push   ebx
  4068b9:	cmc    
  4068ba:	and    al,0x8e
  4068bc:	jns    0x4068a1
  4068be:	cs add eax,ecx
  4068c1:	(bad)  
  4068c2:	mov    BYTE PTR [ecx+0x54],bl
  4068c5:	vandnpd xmm4,xmm4,XMMWORD PTR [edx+0x1a79eb48]
  4068cd:	hlt    
  4068ce:	retf   
  4068cf:	lahf   
  4068d0:	add    al,0xc3
  4068d2:	jne    0x4068b1
  4068d4:	neg    BYTE PTR [edi]
  4068d6:	jne    0x4068f2
  4068d8:	imul   ebp,ebx,0x7e9f23da
  4068de:	ret    
  4068df:	in     eax,dx
  4068e0:	pop    edi
  4068e1:	jecxz  0x406951
  4068e3:	push   edx
  4068e4:	pushf  
  4068e5:	and    BYTE PTR [ecx+0x23],dh
  4068e8:	jnp    0x4068d0
  4068ea:	cmp    dh,BYTE PTR [ecx-0x671f25ca]
  4068f0:	sub    BYTE PTR [edx-0x51],dl
  4068f3:	xchg   BYTE PTR [edx],dl
  4068f5:	and    bl,BYTE PTR ds:[edi]
  4068f8:	mov    al,ds:0x2af0815e
  4068fd:	mov    ah,dl
  4068ff:	nop
  406900:	mov    BYTE PTR [esi],dl
  406902:	push   esi
  406903:	ja     0x4068b7
  406905:	ret    
  406906:	lds    ebx,FWORD PTR [esi]
  406908:	fcom   DWORD PTR gs:[eax+0x482ee63]
  40690f:	dec    esi
  406910:	cs dec esi
  406912:	pop    edi
  406913:	fisubr DWORD PTR [esi+eax*4]
  406916:	dec    edi
  406917:	and    DWORD PTR [edx+0x4a],0x72
  40691b:	sub    edx,DWORD PTR [eax+ebx*4-0x2cc8de09]
  406922:	jg     0x40695d
  406924:	xchg   dh,ah
  406926:	jmp    0x406960
  406928:	lock sub edi,eax
  40692b:	out    0x54,eax
  40692d:	jae    0x406935
  40692f:	jns    0x40695f
  406931:	inc    eax
  406932:	fsincos 
  406934:	scas   eax,DWORD PTR es:[edi]
  406935:	xchg   ebx,eax
  406936:	ins    BYTE PTR es:[edi],dx
  406937:	add    BYTE PTR [ebx],bh
  406939:	jmp    0x406927
  40693b:	scas   eax,DWORD PTR es:[edi]
  40693c:	xchg   eax,esp
  40693e:	jmp    0x4068f2
  406940:	or     dl,al
  406942:	jmp    0xeb91b8d1
  406947:	and    DWORD PTR [eax-0x2ec00826],edx
  40694d:	retf   
  40694e:	jbe    0x406953
  406950:	scas   eax,DWORD PTR es:[edi]
  406951:	sahf   
  406952:	ret    
  406953:	enter  0x2f92,0x53
  406957:	push   ebx
  406958:	jecxz  0x406937
  40695a:	mov    al,ds:0x858d6393
  40695f:	lods   al,BYTE PTR ds:[esi]
  406960:	pop    es
  406961:	rol    BYTE PTR [ebp-0x44ed7524],0x54
  406968:	push   0xffffffe3
  40696a:	dec    edx
  40696b:	iret   
  40696c:	adc    eax,DWORD PTR [bx]
  40696f:	retf   0x8028
  406972:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406973:	inc    esp
  406974:	mov    edx,0x1aa4caed
  406979:	std    
  40697a:	xor    BYTE PTR [ecx],0xe3
  40697d:	sub    eax,0x26e60889
  406982:	sbb    eax,0xacd20917
  406987:	mov    ds:0x1df8cac,al
  40698c:	xchg   ebx,eax
  40698d:	mov    edx,0x92c4bfef
  406992:	aas    
  406993:	mov    ch,bh
  406995:	pop    es
  406996:	pushf  
  406997:	loope  0x4069b7
  406999:	mov    edx,0x274e1ac8
  40699e:	jmp    0x8c91:0x9cf54a5a
  4069a5:	lods   al,BYTE PTR ds:[esi]
  4069a6:	adc    al,BYTE PTR [ebx+0x5f8a754e]
  4069ac:	retf   
  4069ad:	add    eax,0x9abe963c
  4069b2:	xlat   BYTE PTR ds:[ebx]
  4069b3:	(bad)  [eax+0x3ca04d58]
  4069b9:	jbe    0x4069da
  4069bb:	pop    ebp
  4069bc:	in     eax,0x7f
  4069be:	pop    eax
  4069bf:	or     BYTE PTR [eax+0x24],dh
  4069c2:	rcr    BYTE PTR [esi-0x44],0x81
  4069c6:	xchg   DWORD PTR [edi+0x55],ecx
  4069c9:	mov    esi,DWORD PTR cs:[esi+eax*2-0x28]
  4069ce:	sub    ecx,DWORD PTR ds:0xd747b0b4
  4069d4:	mov    ebp,0xeb2dfdf4
  4069d9:	loopne 0x406a21
  4069db:	dec    esi
  4069dc:	push   ebx
  4069dd:	add    al,0x64
  4069df:	fst    QWORD PTR [ebp+0x4c]
  4069e2:	stos   BYTE PTR es:[edi],al
  4069e3:	mov    esp,0xa8de7a0e
  4069e8:	in     al,0xb4
  4069ea:	out    dx,eax
  4069eb:	push   esp
  4069ec:	xchg   esi,eax
  4069ed:	pop    edi
  4069ee:	xor    BYTE PTR [ebp+edi*4-0x6e],bh
  4069f2:	ficomp DWORD PTR [esi-0x1128b206]
  4069f8:	lods   al,BYTE PTR ds:[esi]
  4069f9:	loope  0x4069d7
  4069fb:	iret   
  4069fc:	loopne 0x406a66
  4069fe:	je     0x406a1b
  406a00:	(bad)  
  406a01:	out    0xcb,eax
  406a03:	cmp    eax,0x7e25940d
  406a08:	pop    esp
  406a09:	inc    ebp
  406a0a:	xor    eax,0x2b092627
  406a0f:	or     BYTE PTR [ecx],dl
  406a11:	pop    esi
  406a12:	test   DWORD PTR [esp+ebx*8],esi
  406a15:	pop    ss
  406a16:	sbb    esp,edx
  406a18:	clc    
  406a19:	je     0x406a95
  406a1b:	xchg   al,dl
  406a1d:	std    
  406a1e:	pop    edx
  406a1f:	inc    ebx
  406a20:	and    eax,0x6ba665a8
  406a25:	fwait
  406a26:	je     0x406a2b
  406a28:	push   ebx
  406a29:	xor    DWORD PTR [eax-0xbf7f875],edi
  406a2f:	outs   dx,DWORD PTR ds:[esi]
  406a30:	jmp    0x5861:0xc9479cbe
  406a37:	or     BYTE PTR [edi+ebx*4-0x1e],bh
  406a3b:	pop    ds
  406a3c:	daa    
  406a3d:	sub    al,0x79
  406a3f:	pop    edx
  406a40:	sbb    BYTE PTR [edx+0xd],dl
  406a43:	cmp    BYTE PTR [edx+edx*2+0x68937f7a],cl
  406a4a:	adc    DWORD PTR [ecx],ebx
  406a4c:	inc    esp
  406a4d:	pop    ebp
  406a4e:	sbb    ecx,esp
  406a50:	pop    ss
  406a51:	xchg   edx,eax
  406a52:	das    
  406a53:	(bad)  
  406a54:	(bad)  
  406a55:	retf   0xab55
  406a58:	cmp    BYTE PTR [edi],bh
  406a5a:	popf   
  406a5b:	(bad)  
  406a5c:	nop
  406a5d:	push   ss
  406a5e:	add    al,0x34
  406a60:	das    
  406a61:	mov    WORD PTR [ebx-0x4058f559],?
  406a67:	inc    ebx
  406a68:	bound  esp,QWORD PTR [edx]
  406a6a:	add    DWORD PTR [eax+0x1f],ebx
  406a6d:	fs inc ebx
  406a6f:	mov    esi,0xb629fd8b
  406a74:	icebp  
  406a75:	push   es
  406a76:	loop   0x406a54
  406a78:	rcr    BYTE PTR [ebp-0x4e],cl
  406a7b:	inc    esp
  406a7c:	stc    
  406a7d:	adc    BYTE PTR [edi],al
  406a7f:	push   ecx
  406a80:	(bad)  
  406a81:	xor    BYTE PTR [ebp+ecx*2+0x5c],ch
  406a85:	ret    
  406a86:	dec    edi
  406a87:	cmp    bh,BYTE PTR [esi-0x268bd217]
  406a8d:	cld    
  406a8e:	or     DWORD PTR [eax-0x1a672dd6],edx
  406a94:	xchg   BYTE PTR [ebp-0x6a],bh
  406a97:	xor    DWORD PTR [ebx+0x6],esi
  406a9a:	leave  
  406a9b:	mov    edi,0x18026bbd
  406aa0:	mov    edx,DWORD PTR [ebp+0x17]
  406aa3:	(bad)  
  406aa4:	jmp    0x406a28
  406aa6:	mov    dh,0x29
  406aa8:	dec    sp
  406aaa:	inc    esp
  406aab:	jne    0x406a43
  406aad:	clc    
  406aae:	std    
  406aaf:	cdq    
  406ab0:	mov    ebp,0x4428676c
  406ab5:	call   0x5131a96a
  406aba:	fs aad 0x1d
  406abd:	pop    DWORD PTR [ebx]
  406abf:	out    0x65,eax
  406ac1:	push   esi
  406ac2:	retf   0x30ea
  406ac5:	cmp    eax,0xed1f0639
  406aca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406acb:	cmp    esi,DWORD PTR [edi+ebx*1+0x479eafc6]
  406ad2:	daa    
  406ad3:	xor    eax,0xeedb2a2e
  406ad8:	les    ebx,FWORD PTR [ecx+esi*8]
  406adb:	jne    0x406a64
  406add:	lds    esi,FWORD PTR [edi-0x4de7744e]
  406ae3:	pusha  
  406ae4:	pusha  
  406ae5:	mov    eax,ds:0xa7212c21
  406aea:	lea    edx,[esi+0x58]
  406aed:	scas   al,BYTE PTR es:[edi]
  406aee:	mov    bl,0xc
  406af0:	lds    edi,FWORD PTR ds:0x41d25964
  406af6:	mov    DWORD PTR gs:[ebp+ebx*1-0x1c],esi
  406afb:	and    DWORD PTR [esi+0x3ebc1355],0xffffffd6
  406b02:	dec    edi
  406b03:	and    ah,ah
  406b05:	mov    edx,0x5291f020
  406b0a:	jl     0x406b5f
  406b0c:	stos   BYTE PTR es:[edi],al
  406b0d:	jmp    0x406b5c
  406b0f:	repnz rcl DWORD PTR [ebp+0x4],1
  406b13:	repnz or DWORD PTR [eax+0x41],ecx
  406b17:	les    eax,FWORD PTR [esi]
  406b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b1a:	sub    BYTE PTR [edx+0x7d],0xda
  406b1e:	in     al,dx
  406b1f:	inc    edx
  406b20:	icebp  
  406b21:	scas   eax,DWORD PTR es:[edi]
  406b22:	push   esi
  406b23:	dec    edx
  406b24:	ja     0x406ba1
  406b26:	pop    ebp
  406b27:	int3   
  406b28:	dec    esi
  406b29:	dec    ecx
  406b2a:	shl    BYTE PTR [eax+0x75],0x43
  406b2e:	push   eax
  406b2f:	add    esi,eax
  406b31:	into   
  406b32:	fdivp  st(1),st
  406b34:	ins    BYTE PTR es:[edi],dx
  406b35:	and    al,0xec
  406b37:	lods   eax,DWORD PTR ds:[esi]
  406b38:	pop    ebp
  406b39:	or     edi,DWORD PTR [ecx+0x6f]
  406b3c:	sbb    eax,0x39606988
  406b41:	mov    al,0x81
  406b43:	je     0x406afd
  406b45:	fcmovnb st,st(3)
  406b47:	adc    eax,0x2e5d8487
  406b4c:	ret    0x9b9
  406b4f:	dec    edi
  406b50:	cmp    ebx,DWORD PTR [edi]
  406b52:	add    esp,DWORD PTR [edi-0x27]
  406b55:	dec    esp
  406b56:	shl    BYTE PTR [edi+eax*1+0x145637de],1
  406b5d:	pop    ebx
  406b5e:	jo     0x406bdc
  406b60:	fcom   DWORD PTR [eax+edi*4+0x5f]
  406b64:	pusha  
  406b65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b66:	dec    ecx
  406b67:	push   ss
  406b68:	sub    esp,edi
  406b6a:	pusha  
  406b6b:	adc    BYTE PTR [edi],0x2f
  406b6e:	stos   BYTE PTR es:[edi],al
  406b6f:	mov    dh,0x2e
  406b71:	aad    0x7b
  406b73:	bound  ecx,QWORD PTR [esi-0x1602c865]
  406b79:	xor    BYTE PTR [esi+0x50],ah
  406b7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b7d:	pop    edi
  406b7e:	out    0x53,al
  406b80:	mov    esi,0xa517b0b3
  406b85:	dec    esi
  406b86:	popa   
  406b87:	inc    ebx
  406b88:	fstp   DWORD PTR [ebx]
  406b8a:	push   eax
  406b8b:	sahf   
  406b8c:	rcl    ebx,cl
  406b8e:	dec    ecx
  406b8f:	loopne 0x406b67
  406b91:	add    DWORD PTR [edx+ebx*1+0x3895369f],edx
  406b98:	mul    DWORD PTR [edx+ecx*4]
  406b9b:	mov    edi,0xfb0ca1fd
  406ba0:	ds add bl,bl
  406ba3:	sbb    dh,cl
  406ba5:	rcr    DWORD PTR [edx+0x57],cl
  406ba8:	or     eax,0x23cbdd7
  406bad:	sub    bl,BYTE PTR [edi]
  406baf:	mov    bh,0xf9
  406bb1:	xchg   edx,eax
  406bb2:	(bad)  
  406bb3:	pop    esp
  406bb4:	jmp    0x6a5fae72
  406bb9:	sahf   
  406bba:	fstp   TBYTE PTR [ecx-0x27]
  406bbd:	(bad)  
  406bbe:	fbld   TBYTE PTR [esi+edi*4-0x6bcc2519]
  406bc5:	xchg   esi,eax
  406bc6:	aad    0xe8
  406bc8:	retf   
  406bc9:	dec    ecx
  406bca:	sub    DWORD PTR [esi],edi
  406bcc:	repz push eax
  406bce:	ss stos BYTE PTR es:[edi],al
  406bd0:	jecxz  0x406ba2
  406bd2:	(bad)  
  406bd3:	cmc    
  406bd4:	jno    0x406c2c
  406bd6:	cs cmc 
  406bd8:	nop
  406bd9:	sub    eax,0x42b02932
  406bde:	pushf  
  406bdf:	lds    ebx,FWORD PTR [eax+0x1a]
  406be2:	jnp    0x406bfd
  406be4:	pop    ebx
  406be5:	ja     0x406b92
  406be7:	outs   dx,BYTE PTR ds:[esi]
  406be8:	bound  ebp,QWORD PTR [ebx+0x1dcce9b9]
  406bee:	push   ebx
  406bef:	jmp    0x2b7e9246
  406bf4:	ins    DWORD PTR es:[edi],dx
  406bf5:	icebp  
  406bf6:	dec    esi
  406bf7:	test   dh,0x32
  406bfa:	mov    ds,WORD PTR [esi]
  406bfc:	and    bl,dh
  406bfe:	pop    esp
  406bff:	jl     0x406c70
  406c01:	xor    DWORD PTR es:[eax-0x7ca0fe50],ecx
  406c08:	dec    ecx
  406c09:	ins    DWORD PTR es:[edi],dx
  406c0a:	retf   0xf188
  406c0d:	mov    edx,0x3f56839d
  406c12:	pusha  
  406c13:	aas    
  406c14:	jb     0x406c5c
  406c16:	loop   0x406b99
  406c18:	pop    ebp
  406c19:	shl    DWORD PTR [eax-0x574d8c2b],cl
  406c1f:	sub    dl,BYTE PTR ds:[ebp+eax*4+0x2c4fd663]
  406c27:	pop    ebx
  406c28:	pop    ss
  406c29:	scas   al,BYTE PTR es:[edi]
  406c2a:	jle    0x406c0b
  406c2c:	cdq    
  406c2d:	shl    DWORD PTR [ecx],cl
  406c2f:	jnp    0x406bc3
  406c31:	(bad)  
  406c32:	ins    BYTE PTR es:[edi],dx
  406c33:	ret    
  406c34:	inc    esi
  406c35:	adc    ch,ch
  406c37:	cli    
  406c38:	fiadd  WORD PTR [ebx-0x7c7d58b1]
  406c3e:	das    
  406c3f:	xor    edx,DWORD PTR [edx]
  406c41:	push   ebx
  406c42:	mov    edi,DWORD PTR [edx-0x766e2013]
  406c48:	and    DWORD PTR [ebx+0x4a],esp
  406c4b:	mov    ds:0x7e37b396,al
  406c50:	and    esi,ebp
  406c52:	fisttp DWORD PTR [esi+0x7bfe554f]
  406c58:	mov    ecx,0xae4b66e8
  406c5d:	std    
  406c5e:	mov    dh,0xc5
  406c60:	in     al,dx
  406c61:	sbb    eax,0x20eb1f7b
  406c66:	out    dx,eax
  406c67:	mov    ss,WORD PTR [esi+0x844da41]
  406c6d:	sbb    al,0xfd
  406c6f:	xchg   edx,eax
  406c70:	bound  esp,QWORD PTR ds:0x9afb7896
  406c76:	scas   eax,DWORD PTR es:[edi]
  406c77:	push   ebx
  406c78:	div    BYTE PTR [ecx-0x24]
  406c7b:	stos   DWORD PTR es:[edi],eax
  406c7c:	lods   al,BYTE PTR ds:[esi]
  406c7d:	mov    ds:0x6da4ac29,eax
  406c82:	fidivr WORD PTR ds:0x159584b6
  406c88:	xchg   edx,eax
  406c89:	cmp    ah,BYTE PTR [ebx-0x1f270724]
  406c8f:	mov    BYTE PTR [edx+edi*4-0x5e6dc51],cl
  406c96:	dec    edi
  406c97:	push   edx
  406c98:	rcr    BYTE PTR ss:[edi],cl
  406c9b:	setae  BYTE PTR [ecx+eiz*8-0x27]
  406ca0:	cld    
  406ca1:	call   0x3f814281
  406ca6:	inc    ebx
  406ca7:	mov    edi,0x5fc60d39
  406cac:	call   0x220:0xf29d6a8b
  406cb3:	retf   0xeaf0
  406cb6:	out    0x5f,al
  406cb8:	and    DWORD PTR [edx-0x6c],ecx
  406cbb:	inc    esi
  406cbc:	xor    BYTE PTR [ecx-0x7c],dl
  406cbf:	pop    esp
  406cc0:	add    esp,ecx
  406cc2:	mov    ?,WORD PTR [eax]
  406cc4:	add    al,0x4d
  406cc6:	shl    ebp,0x41
  406cc9:	cli    
  406cca:	push   edx
  406ccb:	sub    ebx,DWORD PTR [esi-0x75]
  406cce:	idiv   DWORD PTR [edi+0x31]
  406cd1:	mov    al,gs:0xc59d2349
  406cd7:	sbb    ebx,DWORD PTR [edi]
  406cd9:	imul   ecx,DWORD PTR [ecx-0x8],0xfffffff3
  406cdd:	sbb    al,0xcd
  406cdf:	xor    DWORD PTR [ecx-0x41174744],ebp
  406ce5:	bound  ebx,QWORD PTR [edi+0x6b5702ee]
  406ceb:	xchg   ecx,eax
  406cec:	(bad)  
  406ced:	lea    esi,[ebx+0x12a764a5]
  406cf3:	setbe  BYTE PTR [ecx-0x638d4288]
  406cfa:	ret    0xbac0
  406cfd:	retf   
  406cfe:	(bad)  
  406cff:	daa    
  406d00:	lock adc eax,0x167255f2
  406d06:	dec    edi
  406d07:	ds shr ah,cl
  406d0a:	(bad)
  406d0e:	pusha  
  406d0f:	fst    DWORD PTR [ecx+edx*8]
  406d12:	rcl    BYTE PTR [ebp-0x187d9152],0x8
  406d19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d1a:	lds    eax,FWORD PTR [ebx]
  406d1c:	test   DWORD PTR [esi+esi*8],0x413fd94
  406d23:	dec    eax
  406d24:	inc    eax
  406d25:	leave  
  406d26:	mov    al,ds:0xab1308c5
  406d2b:	iret   
  406d2c:	sbb    BYTE PTR [ebx-0x2b01205],dh
  406d32:	inc    edi
  406d33:	xor    edx,DWORD PTR [ecx+0x3f]
  406d36:	test   al,0x7c
  406d38:	lods   eax,DWORD PTR ds:[esi]
  406d39:	or     al,BYTE PTR [eax]
  406d3b:	data16 sub BYTE PTR [eax],ah
  406d3e:	inc    edi
  406d3f:	push   esi
  406d40:	pushf  
  406d41:	or     al,ch
  406d43:	mov    ch,0xe6
  406d45:	and    edx,edi
  406d47:	test   dl,ah
  406d49:	jmp    0xb047:0xb4a800b8
  406d50:	imul   ebp,DWORD PTR [eax+0x30560b88],0xffffffb0
  406d57:	mov    WORD PTR [eax],es
  406d59:	leave  
  406d5a:	out    dx,eax
  406d5b:	inc    ebp
  406d5c:	mov    DWORD PTR [ebp-0x66c0c2ab],esi
  406d62:	outs   dx,DWORD PTR ds:[esi]
  406d63:	xchg   edx,eax
  406d64:	push   0x8920b24c
  406d69:	adc    BYTE PTR [esp+eiz*4-0x2de1c0fa],dh
  406d70:	fbstp  TBYTE PTR [ecx]
  406d72:	sbb    DWORD PTR [eax],0x34
  406d75:	xchg   esp,eax
  406d76:	fidivr DWORD PTR [esi]
  406d78:	inc    eax
  406d79:	loope  0x406d4d
  406d7b:	shl    DWORD PTR [ecx-0x2b0bba8e],0xbc
  406d82:	pop    esi
  406d83:	push   ecx
  406d84:	mov    bl,0x88
  406d86:	mov    WORD PTR [ecx-0x7293f62e],ss
  406d8c:	data16 out dx,al
  406d8e:	sbb    bh,BYTE PTR [ebx-0x1be4593a]
  406d94:	out    0x57,eax
  406d96:	mov    eax,0x3acaccd0
  406d9b:	dec    esi
  406d9c:	jmp    0x8f2d:0x7433a87d
  406da3:	jl     0x406dfd
  406da5:	inc    ebx
  406da6:	inc    edi
  406da7:	ja     0x406db7
  406da9:	add    cl,cl
  406dab:	jl     0x406daf
  406dad:	or     esp,DWORD PTR [edx+0x3]
  406db0:	inc    ecx
  406db1:	jmp    0xc29:0x5bb036af
  406db8:	loopne 0x406ddf
  406dba:	ds jmp 0x406e17
  406dbd:	adc    eax,0x61a310d1
  406dc2:	dec    eax
  406dc3:	dec    ebx
  406dc4:	mov    ebp,0x8455ec42
  406dc9:	xchg   esp,esi
  406dcb:	xchg   ebx,eax
  406dcc:	inc    DWORD PTR [edi+edi*8+0x3df71681]
  406dd3:	adc    al,0xb3
  406dd5:	sub    eax,0xfe3dbb3e
  406dda:	test   BYTE PTR [ecx+0xa],dh
  406ddd:	xor    DWORD PTR [eax-0xdfe8c99],ecx
  406de3:	ins    DWORD PTR es:[edi],dx
  406de4:	dec    edi
  406de5:	jb     0x406d7b
  406de7:	mov    cl,0xb1
  406de9:	shr    DWORD PTR [esi-0x47],0x2f
  406ded:	arpl   di,si
  406def:	dec    esp
  406df0:	fdivr  st,st(2)
  406df2:	mov    dl,0x2e
  406df4:	and    DWORD PTR [esi-0x21],esp
  406df7:	inc    ebx
  406df8:	adc    edx,ecx
  406dfa:	jno    0x406dfc
  406dfc:	jae    0x406e57
  406dfe:	rcl    DWORD PTR [ebp+0x7420483],cl
  406e04:	lea    esp,[edx+0x20d37383]
  406e0a:	int3   
  406e0b:	cwde   
  406e0c:	cwde   
  406e0d:	clc    
  406e0e:	mov    dh,BYTE PTR [edx+0x6f74badb]
  406e14:	xchg   BYTE PTR [ebp-0x29e32e87],dl
  406e1a:	sub    eax,0x3bfacbd6
  406e1f:	scas   eax,DWORD PTR es:[edi]
  406e20:	lahf   
  406e21:	jae    0x406e08
  406e23:	loop   0x406e1a
  406e25:	test   al,0x15
  406e27:	enter  0x416,0x4c
  406e2b:	ficomp DWORD PTR [ecx]
  406e2d:	rcr    edx,cl
  406e2f:	lahf   
  406e30:	inc    esi
  406e31:	add    al,0x72
  406e33:	jle    0x406ea1
  406e35:	scas   eax,DWORD PTR es:[edi]
  406e36:	and    eax,eax
  406e38:	sub    DWORD PTR [edi+edi*2-0x20],eax
  406e3c:	or     cl,BYTE PTR [ebp+0x22]
  406e3f:	es retf 0xdc5e
  406e43:	jns    0x406dd4
  406e45:	dec    ecx
  406e46:	out    0x3e,al
  406e48:	in     eax,0xfc
  406e4a:	and    DWORD PTR [eax+0x4d],esi
  406e4d:	inc    esi
  406e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e4f:	jmp    DWORD PTR [ebp-0x3f]
  406e52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e53:	sub    BYTE PTR ds:0xf153e091,cl
  406e59:	xor    cl,al
  406e5b:	or     cl,BYTE PTR [eax-0x23]
  406e5e:	pop    es
  406e5f:	mov    eax,0xf72d565f
  406e64:	js     0x406e8a
  406e66:	popf   
  406e67:	mov    ecx,DWORD PTR [edx]
  406e69:	(bad)  
  406e6a:	jg     0x406ed1
  406e6c:	jo     0x406df1
  406e6e:	xchg   edi,eax
  406e6f:	pusha  
  406e70:	mov    ebx,0x48eb9f5f
  406e75:	mov    ah,BYTE PTR [edx+edi*8]
  406e78:	ret    0x494
  406e7b:	push   edi
  406e7c:	xchg   esi,eax
  406e7d:	mov    al,BYTE PTR [eax+0x6d206103]
  406e83:	mov    dl,0x33
  406e85:	push   ss
  406e86:	pop    esp
  406e87:	inc    eax
  406e88:	adc    al,0xe0
  406e8a:	mov    ecx,0xc815e184
  406e8f:	sbb    edi,edx
  406e91:	aaa    
  406e92:	out    dx,eax
  406e93:	xchg   edi,eax
  406e94:	mov    ebx,0x9d56a634
  406e99:	imul   esi,edi,0xffffffac
  406e9c:	adc    bl,BYTE PTR [esi+0x6b]
  406e9f:	cdq    
  406ea0:	icebp  
  406ea1:	pop    eax
  406ea2:	call   0xf40299c
  406ea7:	sbb    BYTE PTR [edx+eax*1+0x29f51071],ch
  406eae:	dec    edx
  406eaf:	xor    DWORD PTR [edx-0x77],esi
  406eb2:	mov    ch,0xf5
  406eb4:	xchg   edi,eax
  406eb5:	popa   
  406eb6:	das    
  406eb7:	xchg   BYTE PTR [bx+di],dh
  406eba:	pop    es
  406ebb:	aas    
  406ebc:	arpl   di,bx
  406ebe:	or     edx,DWORD PTR [edi]
  406ec0:	iret   
  406ec1:	lods   eax,DWORD PTR ds:[esi]
  406ec2:	mov    ebx,cs
  406ec4:	mov    edx,DWORD PTR [eax-0x4a]
  406ec7:	sub    DWORD PTR [ebx-0x69],0x68
  406ecb:	(bad)  [edi+0x79]
  406ece:	mov    WORD PTR [eax+0x77a2adb6],?
  406ed4:	arpl   WORD PTR [eax-0x551ec7df],bx
  406eda:	mov    dh,0x1c
  406edc:	mov    ecx,0xff45832e
  406ee1:	jl     0x406ebd
  406ee3:	stos   DWORD PTR es:[edi],eax
  406ee4:	rol    bh,1
  406ee6:	test   DWORD PTR [eax-0x54],edi
  406ee9:	inc    edx
  406eea:	ret    
  406eeb:	iret   
  406eec:	int3   
  406eed:	jl     0x406ef9
  406eef:	pop    ebp
  406ef0:	rol    BYTE PTR [ebp+0x18ee33dc],cl
  406ef6:	outs   dx,DWORD PTR ds:[esi]
  406ef7:	cmp    DWORD PTR [ecx-0x719e003],edi
  406efd:	push   esi
  406efe:	pop    edi
  406eff:	add    BYTE PTR [ebx],0xdd
  406f02:	fimul  DWORD PTR [eax+eax*8]
  406f05:	adc    bh,BYTE PTR [ebx-0x593d18cf]
  406f0b:	and    al,0x89
  406f0d:	mov    bh,0x6
  406f0f:	add    al,0x92
  406f11:	push   0xffffff93
  406f13:	jbe    0x406f89
  406f15:	enter  0x2cd3,0xe8
  406f19:	mov    WORD PTR [ebx+0x42],?
  406f1c:	pop    esi
  406f1d:	popa   
  406f1e:	mov    dh,0x15
  406f20:	cwde   
  406f21:	inc    edx
  406f22:	xchg   edi,eax
  406f23:	sub    dl,BYTE PTR [ecx+0x39]
  406f26:	(bad)  
  406f27:	fdiv   st,st(3)
  406f29:	jne    0x406ef0
  406f2b:	xchg   DWORD PTR ss:[edi],edx
  406f2e:	ret    
  406f2f:	dec    edx
  406f30:	sbb    edi,DWORD PTR [edx+0x11]
  406f33:	fdivrp st(7),st
  406f35:	mov    eax,ds:0x4c9a3f10
  406f3a:	(bad)  
  406f3b:	xchg   esi,eax
  406f3c:	dec    ebp
  406f3d:	inc    ebp
  406f3e:	push   ecx
  406f3f:	xchg   ebp,eax
  406f40:	jno    0x406fb1
  406f42:	xchg   edx,eax
  406f43:	stos   BYTE PTR es:[edi],al
  406f44:	shl    ah,1
  406f46:	ja     0x406fba
  406f48:	pop    ds
  406f49:	scas   eax,DWORD PTR es:[edi]
  406f4a:	sbb    ecx,esp
  406f4c:	in     al,0x90
  406f4e:	scas   eax,DWORD PTR es:[edi]
  406f4f:	jbe    0x406f21
  406f51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f52:	sub    ebp,DWORD PTR [edx+0x46]
  406f55:	je     0x406f11
  406f57:	mov    cl,0xbf
  406f59:	jp     0x406fc9
  406f5b:	xlat   BYTE PTR ds:[ebx]
  406f5c:	push   ebx
  406f5d:	mov    WORD PTR [edi],fs
  406f5f:	scas   eax,DWORD PTR es:[edi]
  406f60:	jg     0x406fc3
  406f62:	dec    ecx
  406f63:	jmp    0xc4ad:0x98e171d7
  406f6a:	inc    edi
  406f6b:	aad    0xc3
  406f6d:	test   eax,0xc7294bbd
  406f72:	inc    esp
  406f73:	jno    0x406f2b
  406f75:	dec    edi
  406f76:	cmc    
  406f77:	add    al,0xf9
  406f79:	jnp    0x406fad
  406f7b:	mov    es,WORD PTR [eax+0x411c751d]
  406f81:	sub    al,0xf4
  406f84:	dec    ecx
  406f85:	ins    DWORD PTR es:[edi],dx
  406f86:	loope  0x406f2f
  406f88:	daa    
  406f89:	retf   
  406f8a:	lods   al,BYTE PTR ds:[esi]
  406f8b:	push   esp
  406f8c:	lods   al,BYTE PTR ds:[esi]
  406f8d:	sbb    al,0x58
  406f8f:	and    BYTE PTR [esi],al
  406f91:	clc    
  406f92:	adc    BYTE PTR [eax],bl
  406f94:	and    DWORD PTR [ebx],esi
  406f96:	and    eax,ebx
  406f98:	jno    0x406fac
  406f9a:	aas    
  406f9b:	mov    esp,0xa2a67392
  406fa0:	cmp    DWORD PTR [esi+0x47],ebx
  406fa3:	fadd   QWORD PTR [edi+0x7fd28917]
  406fa9:	int    0xaa
  406fab:	ja     0x406f39
  406fad:	out    0x79,eax
  406faf:	jl     0x406f90
  406fb1:	xor    cl,cl
  406fb3:	cmp    cl,BYTE PTR [edi-0xc0bb6e9]
  406fb9:	lea    eax,[eax+0x5a28640]
  406fbf:	jae    0x407009
  406fc1:	hlt    
  406fc2:	mov    edi,0x1732116
  406fc7:	ins    BYTE PTR es:[edi],dx
  406fc8:	mov    dh,BYTE PTR [eax+ecx*8-0x61]
  406fcc:	or     bh,BYTE PTR [eax]
  406fce:	and    al,0x59
  406fd0:	xchg   esp,eax
  406fd1:	xchg   ebx,eax
  406fd2:	aaa    
  406fd3:	retf   
  406fd4:	out    0x3f,al
  406fd6:	push   edi
  406fd7:	xchg   edi,eax
  406fd8:	(bad)  
  406fd9:	dec    edi
  406fda:	or     esp,eax
  406fdc:	push   ds
  406fdd:	or     ecx,DWORD PTR [edx-0x36]
  406fe0:	in     al,dx
  406fe1:	mov    dl,0x98
  406fe3:	sub    dh,cl
  406fe5:	mov    dl,0xc
  406fe7:	jle    0x406fbb
  406fe9:	icebp  
  406fea:	bound  esp,QWORD PTR [ebp+edx*8+0x1db93c15]
  406ff1:	lods   al,BYTE PTR ds:[esi]
  406ff2:	daa    
  406ff3:	inc    ebx
  406ff4:	sahf   
  406ff5:	adc    esp,DWORD PTR [eax+0x1324dc59]
  406ffb:	pop    eax
  406ffc:	add    esp,DWORD PTR [ebx-0x59]
  406fff:	not    dh
  407001:	aaa    
  407002:	out    0x22,eax
  407004:	jb     0x407047
  407006:	push   eax
  407007:	shr    BYTE PTR [edx],0x99
  40700a:	scas   al,BYTE PTR es:[edi]
  40700b:	daa    
  40700c:	sahf   
  40700d:	fwait
  40700e:	dec    ebx
  40700f:	bound  esp,QWORD PTR [edi]
  407011:	pop    ss
  407012:	jge    0x407042
  407014:	inc    ecx
  407015:	out    dx,eax
  407016:	pop    es
  407017:	loopne 0x40700c
  407019:	(bad)
  40701d:	push   es
  40701e:	fmul   DWORD PTR [edx-0x78]
  407021:	in     eax,dx
  407022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407023:	sar    BYTE PTR [eax-0x41],0x93
  407027:	rcpps  xmm3,XMMWORD PTR [esi+0x6a]
  40702b:	sub    eax,ebp
  40702d:	jne    0x407007
  40702f:	mov    ecx,0x367c463c
  407034:	out    0x6c,al
  407036:	jmp    0x423fc7bb
  40703b:	lds    esp,FWORD PTR [ebp+edx*4+0x3059db54]
  407042:	aaa    
  407043:	(bad)  
  407044:	adc    bl,cl
  407046:	xchg   ecx,eax
  407047:	cmc    
  407048:	cwde   
  407049:	cld    
  40704a:	mov    dh,BYTE PTR [ebp-0x2e793c15]
  407050:	dec    edx
  407051:	(bad)  
  407052:	outs   dx,DWORD PTR ds:[esi]
  407053:	cs jno 0x407075
  407056:	sub    BYTE PTR [esp+ebx*1],dh
  407059:	call   0x322e7f13
  40705e:	mov    eax,ds:0xdc39adc3
  407063:	xchg   esi,eax
  407064:	add    al,0x77
  407066:	rcr    BYTE PTR [edi+0x4a],0xa8
  40706a:	adc    eax,0xcd8d5ecc
  40706f:	sbb    DWORD PTR [ebx-0xd],0xffffffbe
  407073:	pop    eax
  407074:	adc    eax,0xa411d95a
  407079:	in     eax,dx
  40707a:	or     cl,dl
  40707c:	xchg   BYTE PTR [ebx+0xa],dl
  40707f:	stc    
  407080:	or     eax,0x3a636aea
  407085:	dec    ecx
  407086:	push   eax
  407087:	iret   
  407088:	or     al,0x6f
  40708a:	jmp    0xa27c2083
  40708f:	out    0x9e,eax
  407091:	repnz retf 0x7b61
  407095:	xor    BYTE PTR [edi-0x38],bl
  407098:	ror    DWORD PTR [edx-0x4a6d36cd],cl
  40709e:	or     DWORD PTR [edi],esi
  4070a0:	mov    al,ds:0xd716db47
  4070a5:	ins    DWORD PTR es:[edi],dx
  4070a6:	fldenv [ecx-0xe]
  4070a9:	dec    ebp
  4070aa:	sub    eax,0x78cf4e90
  4070af:	rcl    DWORD PTR [ebp-0x308bda62],cl
  4070b5:	fs enter 0x8f1d,0xa9
  4070ba:	in     al,dx
  4070bb:	fs jp  0x407060
  4070be:	jno    0x407123
  4070c0:	xor    eax,0x8b82abf8
  4070c5:	xchg   esp,eax
  4070c6:	cmovs  eax,esp
  4070c9:	pop    ds
  4070ca:	push   0xffffffbd
  4070cc:	ins    DWORD PTR es:[edi],dx
  4070cd:	sbb    dl,BYTE PTR [eax+eax*2]
  4070d0:	shl    DWORD PTR [edi+0x10a1a733],cl
  4070d6:	(bad)
  4070da:	jno    0x407094
  4070dc:	and    BYTE PTR [ecx-0x1b],0xea
  4070e0:	and    al,0x70
  4070e2:	fmul   st(0),st
  4070e4:	mov    ds:0x20bd2362,eax
  4070e9:	pop    esi
  4070ea:	xor    eax,0x6f373ed7
  4070ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070f0:	push   ss
  4070f1:	stos   DWORD PTR es:[edi],eax
  4070f2:	stc    
  4070f3:	stos   DWORD PTR es:[edi],eax
  4070f4:	inc    edx
  4070f5:	aam    0x20
  4070f7:	ss add ch,ch
  4070fa:	jge    0x4070ff
  4070fc:	test   eax,0xbfff0175
  407101:	in     eax,dx
  407102:	test   cl,dh
  407104:	sahf   
  407105:	xchg   edx,eax
  407106:	loopne 0x407091
  407108:	mov    ebx,0xaf186872
  40710d:	rcl    BYTE PTR ds:0xda86f396,cl
  407113:	test   BYTE PTR ds:0xb40399f2,ch
  407119:	push   0xffffffeb
  40711b:	push   ds
  40711c:	dec    esi
  40711d:	xor    DWORD PTR [ebp+0x8f17a63],ebx
  407123:	(bad)  
  407124:	fbstp  TBYTE PTR [edi+0x2a]
  407127:	fistp  QWORD PTR [ecx]
  407129:	or     ecx,DWORD PTR [ebx+0x92c62fd]
  40712f:	sbb    eax,0x791301b1
  407134:	sbb    al,0xe
  407136:	or     DWORD PTR ds:0x26fc696a,ecx
  40713c:	aam    0xd1
  40713e:	xlat   BYTE PTR ds:[ebx]
  40713f:	xor    BYTE PTR [eax-0x15],ch
  407142:	data16 cmp al,0xdd
  407145:	push   ss
  407146:	xor    eax,0xf76b8718
  40714b:	loopne 0x4071c7
  40714d:	add    DWORD PTR [edx+eax*1+0x319ceefd],eax
  407154:	je     0x4070e4
  407156:	shl    DWORD PTR [edx-0x35],cl
  407159:	ret    0x4db
  40715c:	dec    eax
  40715d:	out    dx,al
  40715e:	(bad)  [esi-0x1f]
  407161:	jb     0x407197
  407163:	mov    dl,ah
  407165:	retf   
  407166:	push   ecx
  407167:	shl    DWORD PTR [esi-0x5a],cl
  40716a:	add    DWORD PTR [ebx],esp
  40716c:	or     cl,BYTE PTR [ecx]
  40716e:	jmp    0x407196
  407170:	in     eax,dx
  407171:	dec    edx
  407172:	test   DWORD PTR [ebp-0x5e],esp
  407175:	sbb    DWORD PTR [edx],ebp
  407177:	js     0x4071dc
  407179:	push   cs
  40717a:	loop   0x407100
  40717c:	xlat   BYTE PTR ds:[ebx]
  40717d:	mov    eax,0x7d6fe690
  407182:	xchg   esi,eax
  407183:	imul   ebx,esp,0xa84e9f78
  407189:	or     esi,0xffffffad
  40718c:	jne    0x4071af
  40718e:	inc    ecx
  40718f:	dec    eax
  407190:	jae    0x4071fe
  407192:	jbe    0x4071af
  407194:	enter  0xedb2,0xd1
  407198:	jle    0x4071d3
  40719a:	das    
  40719b:	rcl    DWORD PTR [esi],0x36
  40719e:	int3   
  40719f:	xor    esi,DWORD PTR [ebx+0x60]
  4071a2:	or     BYTE PTR [esi+0x5b],al
  4071a5:	test   BYTE PTR [edi+0x4b32ce5a],dh
  4071ab:	ins    BYTE PTR es:[edi],dx
  4071ac:	ds push eax
  4071ae:	dec    ecx
  4071af:	sub    eax,0x4703dbcf
  4071b4:	int    0x52
  4071b6:	mov    esp,0xb4b31479
  4071bb:	xor    eax,0x2cbfaae8
  4071c0:	sbb    BYTE PTR [ebp-0x25],ch
  4071c3:	sahf   
  4071c4:	jmp    0xbe50e391
  4071c9:	fimul  DWORD PTR [ecx-0x951f99b]
  4071cf:	jns    0x407228
  4071d1:	jo     0x40724a
  4071d3:	sbb    eax,0x17748861
  4071d8:	sbb    ebx,ebx
  4071da:	xor    BYTE PTR [edx+eiz*1+0x6],bh
  4071de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071df:	jae    0x40722d
  4071e1:	dec    ecx
  4071e2:	ds sub bh,0x2d
  4071e6:	adc    BYTE PTR [ecx-0x63cd2c3e],0x22
  4071ed:	pop    es
  4071ee:	cs leave 
  4071f0:	icebp  
  4071f1:	mov    ah,0x89
  4071f3:	mov    ch,0x6f
  4071f5:	inc    esp
  4071f6:	mov    bl,0x59
  4071f8:	pop    esp
  4071f9:	jb     0x40727a
  4071fb:	inc    ecx
  4071fc:	(bad)  
  4071fd:	fdivr  st(1),st
  4071ff:	dec    esp
  407200:	out    0x8a,al
  407202:	or     eax,ecx
  407204:	arpl   sp,ax
  407206:	shl    DWORD PTR [ebx-0x4595c55],1
  40720c:	mov    al,ds:0xc6f470b7
  407211:	dec    ebx
  407212:	in     eax,0x5e
  407214:	mov    ch,0x38
  407216:	or     eax,0xac1a29f3
  40721b:	push   ebp
  40721c:	mov    dh,0x7
  40721e:	push   ebp
  40721f:	mov    ecx,0x6189dcdf
  407224:	and    DWORD PTR [ebx],edi
  407226:	jne    0x4071f5
  407228:	dec    ebp
  407229:	and    edi,DWORD PTR [ebx+ebp*8-0x55cd79b7]
  407230:	xlat   BYTE PTR ds:[ebx]
  407231:	ret    
  407232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407233:	jno    0x4072a8
  407235:	pop    ebx
  407236:	test   BYTE PTR [eax+0x2c892b39],ah
  40723c:	int3   
  40723d:	mov    cl,0xa8
  40723f:	(bad)  
  407240:	out    0xd2,al
  407242:	int    0x77
  407244:	out    0xd2,eax
  407246:	dec    esi
  407247:	repz adc BYTE PTR [esi],dh
  40724a:	xor    al,0x72
  40724c:	inc    ebp
  40724d:	mov    bh,ch
  40724f:	punpckhwd mm7,QWORD PTR [ecx]
  407252:	xlat   BYTE PTR ds:[ebx]
  407253:	dec    ecx
  407254:	fadd   DWORD PTR [ebx-0x56]
  407257:	pop    esi
  407258:	shr    DWORD PTR [eax],0xb8
  40725b:	repnz and eax,0x5b621e
  407261:	jbe    0x407299
  407263:	leave  
  407264:	cs in  eax,dx
  407266:	arpl   WORD PTR [edx-0x37],di
  407269:	adc    DWORD PTR [ebp+0x5a],0xfffffffb
  40726d:	dec    BYTE PTR [edx+0x231012e5]
  407273:	call   0x5862:0x3824bdec
  40727a:	xor    al,0x1b
  40727c:	jmp    0x7853:0x102e551a
  407283:	test   ebx,0x87f8af72
  407289:	(bad)  
  40728b:	jge    0x4072f8
  40728d:	out    0x33,eax
  40728f:	sub    DWORD PTR [eax+0x709532f7],edi
  407295:	mov    cl,0x81
  407297:	xor    BYTE PTR [ecx+0x11b88442],ch
  40729d:	stos   DWORD PTR es:[edi],eax
  40729e:	lds    esi,FWORD PTR [ecx-0x44999c73]
  4072a4:	fidiv  DWORD PTR [esi+edi*8]
  4072a7:	std    
  4072a8:	mov    edx,0x562ad9db
  4072ad:	inc    DWORD PTR [ecx-0x191c5bd4]
  4072b3:	mov    BYTE PTR [esi],ah
  4072b5:	sti    
  4072b6:	xor    eax,esp
  4072b8:	add    DWORD PTR [eax],eax
  4072ba:	and    ebp,ebx
  4072bc:	and    ah,al
  4072be:	lods   eax,DWORD PTR ds:[esi]
  4072bf:	and    al,0x2c
  4072c2:	dec    ecx
  4072c3:	pop    es
  4072c4:	fstp   QWORD PTR [edi+0x5fe6123d]
  4072ca:	daa    
  4072cb:	jae    0x407288
  4072cd:	shl    BYTE PTR [ebx-0x52],1
  4072d0:	inc    edi
  4072d1:	cli    
  4072d2:	enter  0x38b,0x38
  4072d6:	jne    0x4072ea
  4072d8:	jae    0x4072d8
  4072da:	pop    esi
  4072db:	push   es
  4072dc:	xchg   BYTE PTR es:[esi],dh
  4072df:	lds    ebx,FWORD PTR [ecx+eiz*2-0x6a]
  4072e3:	push   esp
  4072e4:	push   ebp
  4072e5:	sar    DWORD PTR [edx],cl
  4072e7:	or     bh,dh
  4072e9:	inc    eax
  4072ea:	push   ecx
  4072eb:	fnstsw WORD PTR [ebx-0x3c093780]
  4072f1:	mov    edi,0xd1da9adf
  4072f6:	imul   edi,DWORD PTR [ebx+0x3b95d2c8],0xffffffeb
  4072fd:	pop    ss
  4072fe:	pop    eax
  4072ff:	jnp    0x4072e3
  407301:	cld    
  407302:	out    dx,eax
  407303:	pop    edi
  407304:	(bad)  
  407305:	icebp  
  407306:	ins    BYTE PTR es:[edi],dx
  407307:	inc    ebx
  407308:	cdq    
  407309:	push   cs
  40730a:	and    DWORD PTR [edi+0x7b],esp
  40730d:	xchg   ebp,eax
  40730e:	xlat   BYTE PTR ds:[ebx]
  40730f:	or     esi,ecx
  407311:	in     al,0xdc
  407313:	xchg   esi,eax
  407314:	xor    DWORD PTR ds:0x9f60c080,eax
  40731a:	jmp    0x407309
  40731c:	cmp    BYTE PTR [edi-0x3f],dh
  40731f:	mov    bh,0x2d
  407321:	scas   eax,DWORD PTR es:[edi]
  407322:	jmp    0x2c33:0xa335e134
  407329:	gs push cs
  40732b:	push   ebp
  40732c:	shr    DWORD PTR [edi],1
  40732e:	or     eax,0xdff776c6
  407333:	adc    edi,DWORD PTR [edi-0x61b63c93]
  407339:	mov    edi,0xc54803e4
  40733e:	iret   
  40733f:	pop    ecx
  407340:	cmp    ecx,DWORD PTR [ebx+0x2f8c46d8]
  407346:	xlat   BYTE PTR ds:[ebx]
  407347:	jns    0x407365
  407349:	js     0x40739a
  40734b:	jl     0x407370
  40734d:	test   BYTE PTR [esi-0x4e],cl
  407350:	sar    al,1
  407352:	add    DWORD PTR [edx+ecx*4],eax
  407355:	pop    esp
  407356:	data16 stc 
  407358:	sbb    bl,BYTE PTR [ebp+0x6e9d6eec]
  40735e:	ror    al,1
  407360:	les    esp,FWORD PTR [edi+0xf]
  407363:	mul    DWORD PTR [eax+0x7d7accc8]
  407369:	mov    ds:0x7a3c2fcc,al
  40736e:	jb     0x407374
  407370:	retf   
  407371:	in     eax,0x92
  407373:	jmp    FWORD PTR ds:0x7d80a40e
  407379:	lds    edi,FWORD PTR [ebx+0x7cc13d16]
  40737f:	sbb    esi,DWORD PTR [eax-0x15]
  407382:	ja     0x40738e
  407384:	jo     0x407334
  407386:	xchg   DWORD PTR [ecx],edi
  407388:	les    ebx,FWORD PTR [edx-0x53]
  40738b:	fxch   st(4)
  40738d:	and    esi,esp
  40738f:	mov    ah,0xb6
  407391:	sti    
  407392:	pop    ds
  407393:	mov    edx,0xe1d847eb
  407398:	cmp    DWORD PTR [ebp-0x4a],0x31
  40739c:	imul   ebx,DWORD PTR ds:0x3187c232,0xffffff94
  4073a3:	xor    edi,DWORD PTR [edx]
  4073a5:	jnp    0x4073a3
  4073a7:	repz out dx,al
  4073a9:	ret    0x7463
  4073ac:	out    0x7d,al
  4073ae:	lock mov BYTE PTR [edx-0x61425dc9],dl
  4073b5:	jp     0x4073d1
  4073b7:	hlt    
  4073b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073b9:	out    dx,eax
  4073ba:	adc    ch,BYTE PTR [ebp+0x7]
  4073bd:	dec    eax
  4073be:	dec    edx
  4073bf:	sbb    bl,ch
  4073c1:	jae    0x4073ad
  4073c3:	push   esp
  4073c4:	aas    
  4073c5:	imul   edi,ebx,0x6d
  4073c8:	add    DWORD PTR [ebx],ecx
  4073ca:	jnp    0x407363
  4073cc:	fadd   QWORD PTR [esi-0x41d48fbe]
  4073d2:	mov    dh,0xe1
  4073d4:	lahf   
  4073d5:	in     al,dx
  4073d6:	jecxz  0x4073b0
  4073d8:	dec    ebp
  4073d9:	pop    es
  4073da:	repnz inc eax
  4073dc:	pop    ecx
  4073dd:	adc    al,0x93
  4073df:	pop    ecx
  4073e0:	xchg   BYTE PTR [ebx+0x6a],dl
  4073e3:	imul   DWORD PTR [eax]
  4073e5:	imul   ebp,DWORD PTR [esi+0x4688d309],0xffffffd5
  4073ec:	and    BYTE PTR fs:[edx-0x78],cl
  4073f0:	pop    esi
  4073f1:	mov    al,0x53
  4073f3:	fistp  QWORD PTR [esi]
  4073f5:	xchg   ebp,eax
  4073f6:	jg     0x40738f
  4073f8:	mov    cl,0x28
  4073fa:	cmc    
  4073fb:	dec    ebx
  4073fc:	add    al,0x75
  4073fe:	ror    DWORD PTR [esp+ebp*2+0x4],1
  407402:	inc    esp
  407403:	jne    0x40738d
  407405:	das    
  407406:	(bad)  
  407407:	pop    eax
  407408:	imul   eax,DWORD PTR gs:[ebx+0x2128dc6e],0xf678de92
  407413:	add    ecx,DWORD PTR [ebx]
  407415:	pop    ss
  407416:	enter  0x6dbc,0x11
  40741a:	mov    edx,0x590549c8
  40741f:	cld    
  407420:	loopne 0x4073fd
  407422:	shr    bh,1
  407424:	jnp    0x40742c
  407426:	and    eax,0xdb2411a3
  40742b:	iret   
  40742c:	fcom   DWORD PTR [ebp-0x13]
  40742f:	xor    al,0x58
  407431:	push   ecx
  407433:	bnd je 0x407486
  407436:	cmp    DWORD PTR [esi],edx
  407438:	es and esi,eax
  40743b:	test   DWORD PTR [ecx],0x5f69ed00
  407441:	and    al,0xb9
  407443:	jle    0x4074aa
  407445:	out    dx,al
  407446:	out    dx,al
  407447:	adc    dl,ah
  407449:	mov    ebx,DWORD PTR [ebx+0x76]
  40744c:	mov    bl,0x35
  40744e:	leave  
  40744f:	add    DWORD PTR [ecx],esp
  407451:	xchg   ecx,eax
  407452:	adc    BYTE PTR [ecx-0x5578475d],dl
  407458:	lods   eax,DWORD PTR ds:[esi]
  407459:	sbb    al,BYTE PTR ds:0x8b8c9026
  40745f:	or     esi,DWORD PTR [edi-0x28]
  407462:	aaa    
  407463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407464:	or     eax,0x7b7f1fe5
  407469:	(bad)  
  40746d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40746e:	adc    al,0xd0
  407470:	mov    edi,0xc0c7df75
  407475:	ret    
  407476:	ficom  WORD PTR [eax-0x791aec97]
  40747c:	push   ds
  40747d:	std    
  40747e:	mov    dh,BYTE PTR ds:0x2fab746f
  407484:	adc    DWORD PTR [eax+0x6fec2157],0xfffffffc
  40748b:	xor    BYTE PTR [edx],al
  40748d:	inc    ebx
  40748e:	sub    al,ch
  407490:	lahf   
  407491:	repnz push eax
  407493:	nop
  407494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407495:	or     al,0xb1
  407497:	inc    ebx
  407498:	not    DWORD PTR [edx-0x67]
  40749b:	pop    ss
  40749c:	inc    ebx
  40749d:	in     al,dx
  40749e:	mov    bl,0xd5
  4074a0:	ss sbb eax,0x8c66c2c9
  4074a6:	lods   eax,DWORD PTR ds:[esi]
  4074a7:	cld    
  4074a8:	xor    dh,BYTE PTR ss:[di]
  4074ac:	xor    esp,DWORD PTR [ebx+0x613951]
  4074b2:	push   esi
  4074b3:	dec    eax
  4074b5:	ror    BYTE PTR [ebx-0x66c62762],cl
  4074bb:	push   eax
  4074bc:	lds    esp,FWORD PTR [ebx-0x42a35d19]
  4074c2:	pop    es
  4074c3:	mov    al,0x5a
  4074c5:	aam    0x9c
  4074c7:	jae    0x40746f
  4074c9:	ins    DWORD PTR es:[edi],dx
  4074ca:	push   0x363977cf
  4074cf:	out    0x42,eax
  4074d1:	fistp  DWORD PTR ds:0x298eb026
  4074d7:	retf   0x95b3
  4074da:	cmp    dh,bh
  4074dc:	dec    eax
  4074dd:	lods   eax,DWORD PTR ds:[esi]
  4074de:	sbb    BYTE PTR [esi-0x13fc814a],dl
  4074e4:	or     al,0x4
  4074e6:	ret    
  4074e7:	pusha  
  4074e8:	pushf  
  4074e9:	(bad)  
  4074ea:	mov    eax,ds:0x58167890
  4074ef:	adc    DWORD PTR [esi],esi
  4074f1:	jo     0x407555
  4074f3:	inc    ebx
  4074f4:	fwait
  4074f5:	jmp    0x40751d
  4074f7:	(bad)  
  4074f8:	test   al,0x87
  4074fa:	xchg   ebx,eax
  4074fb:	xor    BYTE PTR [edi+0x2d6bf2d7],ah
  407501:	ficom  WORD PTR [esi+0x4c]
  407504:	(bad)  
  407505:	fimul  DWORD PTR [esi-0x212011ee]
  40750b:	inc    eax
  40750c:	loopne 0x407570
  40750e:	test   eax,0x831d060f
  407513:	mov    ebx,0x88017954
  407518:	xor    DWORD PTR [edx+0x486c1a90],0xffffff93
  40751f:	les    ebx,FWORD PTR [edx+0x7b21192e]
  407525:	mov    al,BYTE PTR [edi+0x5307c14a]
  40752b:	fnstcw WORD PTR [ecx]
  40752d:	adc    al,0xbd
  40752f:	sub    eax,0x6860cc87
  407534:	and    DWORD PTR [esi],eax
  407536:	in     al,0xaa
  407538:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407539:	jp     0x40752d
  40753b:	das    
  40753c:	fnsave [ecx]
  40753e:	mov    bl,0xf8
  407540:	xchg   edi,eax
  407541:	xchg   edi,eax
  407542:	(bad)  
  407544:	inc    ecx
  407545:	mov    esp,0x5dc5b702
  40754a:	jge    0x407519
  40754c:	mov    bl,0x89
  40754e:	cdq    
  40754f:	xor    DWORD PTR [edi],0x84d4fc8e
  407555:	pop    ebp
  407556:	mov    DWORD PTR [edi],0x5d5f1648
  40755c:	mov    ebx,0xabd0f483
  407561:	lock mov ebx,0x11a04cd5
  407567:	adc    eax,0x89d237a2
  40756c:	popf   
  40756d:	in     eax,0x8a
  40756f:	xlat   BYTE PTR ds:[ebx]
  407570:	aam    0x66
  407572:	mov    bh,0x12
  407574:	pushf  
  407575:	mov    al,ds:0xf3ff8568
  40757a:	add    BYTE PTR [ebx-0x76],bh
  40757d:	outs   dx,BYTE PTR ds:[esi]
  40757e:	test   eax,0x7f111296
  407583:	mov    ch,0x1a
  407585:	xchg   BYTE PTR [esi+0x5a80078f],dl
  40758b:	out    0xb7,al
  40758d:	dec    DWORD PTR [eax+0x51]
  407590:	cmp    eax,0xcee81fca
  407595:	jge    0x407558
  407597:	imul   esp,DWORD PTR [ecx-0x2ae04035],0xfffffff0
  40759e:	xor    DWORD PTR [esi-0x71eafba0],eax
  4075a4:	adc    al,0x38
  4075a6:	imul   ecx,DWORD PTR [ecx+eiz*8],0xffffffa4
  4075aa:	loopne 0x4075af
  4075ac:	or     ebp,DWORD PTR [ebp-0x47a47de0]
  4075b2:	sub    DWORD PTR [ecx+esi*2-0x585563b1],edi
  4075b9:	push   ds
  4075ba:	test   eax,esi
  4075bc:	(bad)  
  4075be:	sbb    al,ch
  4075c0:	push   0xbf1dcd51
  4075c5:	aas    
  4075c6:	xor    dl,BYTE PTR [ecx-0x1]
  4075c9:	in     eax,dx
  4075ca:	push   esp
  4075cb:	adc    eax,0x7b46a3d9
  4075d0:	in     eax,dx
  4075d1:	adc    eax,0xbe331f1d
  4075d6:	aam    0xe0
  4075d8:	pop    edi
  4075d9:	lea    ebp,[edx]
  4075db:	pop    esp
  4075dc:	mov    cl,0x2f
  4075de:	in     eax,0xa5
  4075e0:	mov    DWORD PTR [ebp+0x7583460c],esp
  4075e6:	xchg   ecx,eax
  4075e7:	inc    ebp
  4075e8:	adc    edx,0xc0a0bb0f
  4075ee:	loop   0x40761d
  4075f0:	cmp    ch,BYTE PTR [edx+0x14]
  4075f3:	cmp    eax,0x9b97dd61
  4075f8:	xchg   esi,eax
  4075f9:	push   ecx
  4075fa:	xor    al,0xc1
  4075fc:	and    ecx,DWORD PTR [ebx]
  4075fe:	pop    ebp
  4075ff:	mov    ecx,0x79d912c5
  407604:	pop    ss
  407605:	add    DWORD PTR [edi-0x1],0x3c193fc6
  40760c:	ret    0x4d8b
  40760f:	int    0xf6
  407611:	fs mov esi,0x25945f78
  407617:	and    edi,ebp
  407619:	sub    al,ah
  40761b:	mov    BYTE PTR [edx+0x76],cl
  40761e:	ja     0x407695
  407620:	int    0x77
  407622:	cmp    eax,0xad5cea0b
  407627:	shl    ebp,0xee
  40762a:	add    eax,0x3504e37f
  40762f:	ja     0x4075ef
  407631:	sti    
  407632:	mov    ecx,0x4ebbafea
  407637:	fldcw  WORD PTR [ebx]
  407639:	or     DWORD PTR [ebx],ecx
  40763b:	pop    ebx
  40763c:	pop    ss
  40763d:	fs jecxz 0x40763d
  407640:	(bad)  
  407641:	ficomp DWORD PTR [esi-0x46549f61]
  407647:	xchg   esp,eax
  407648:	push   ecx
  407649:	mov    dh,0x12
  40764b:	aas    
  40764c:	inc    eax
  40764d:	jecxz  0x4076a9
  40764f:	das    
  407650:	cs jle 0x40768a
  407653:	lods   eax,DWORD PTR ds:[esi]
  407654:	rcl    DWORD PTR [ebx-0xa85cf75],1
  40765a:	adc    cl,BYTE PTR [edx+0x3e]
  40765d:	fistp  DWORD PTR ds:0x8ca01d99
  407663:	lods   al,BYTE PTR ds:[esi]
  407664:	mov    eax,0xc5588fed
  407669:	loope  0x407664
  40766b:	jno    0x407650
  40766d:	addr16 pusha 
  40766f:	add    al,0xf9
  407671:	(bad)  
  407672:	and    eax,0x44a2121d
  407677:	mov    edi,DWORD PTR [ecx]
  407679:	aad    0x84
  40767b:	xor    esp,DWORD PTR [esi+0x7]
  40767e:	test   al,0xa3
  407680:	(bad)  
  407681:	fisttp DWORD PTR [edx+0x317e9557]
  407687:	cmp    DWORD PTR [esi+0x78],esp
  40768a:	xor    DWORD PTR [eax+eax*1+0x77],edx
  40768e:	jbe    0x407698
  407690:	aam    0x66
  407692:	in     al,0xc8
  407694:	jbe    0x407641
  407696:	aaa    
  407697:	inc    esi
  407698:	dec    ebx
  407699:	jo     0x4076b3
  40769b:	enter  0x16e,0x9c
  40769f:	in     eax,dx
  4076a0:	scas   al,BYTE PTR es:[edi]
  4076a1:	lods   eax,DWORD PTR ds:[esi]
  4076a2:	mov    ds:0x8085889c,al
  4076a7:	cmp    BYTE PTR [edi-0x42],dh
  4076aa:	lahf   
  4076ab:	adc    eax,0xa804eedf
  4076b0:	(bad)  
  4076b1:	mov    cl,0x9e
  4076b3:	into   
  4076b4:	mov    ch,0x22
  4076b6:	sbb    BYTE PTR [eax-0x29],dh
  4076b9:	lock adc BYTE PTR [ecx+edi*1+0xc],bl
  4076be:	(bad)  
  4076bf:	xor    ah,BYTE PTR [eax+0x68]
  4076c2:	aaa    
  4076c3:	cs mov eax,0x8c471d48
  4076c9:	loopne 0x4076b3
  4076cb:	neg    DWORD PTR [esi]
  4076cd:	inc    esi
  4076ce:	fs fs fwait
  4076d1:	out    dx,eax
  4076d2:	std    
  4076d3:	inc    ebx
  4076d4:	sub    dh,BYTE PTR [esi+0x27]
  4076d7:	mov    ch,0x27
  4076d9:	push   edx
  4076da:	cdq    
  4076db:	clc    
  4076dc:	push   0x63
  4076de:	mov    ecx,0xf54e7c93
  4076e3:	sub    ecx,DWORD PTR [esi-0x163f7c9]
  4076e9:	jge    0x40773f
  4076eb:	fisttp DWORD PTR [esi]
  4076ed:	(bad)  
  4076ee:	out    dx,eax
  4076ef:	outs   dx,BYTE PTR ds:[esi]
  4076f0:	fdivp  st(7),st
  4076f2:	jno    0x407745
  4076f4:	and    eax,0x37b08a90
  4076f9:	sbb    dh,BYTE PTR [ebp+0x4403366a]
  4076ff:	das    
  407700:	pop    eax
  407701:	sub    eax,0x33937e3d
  407706:	xor    ch,dl
  407708:	mov    ebx,DWORD PTR [ebp+0x5cb446bd]
  40770e:	dec    esp
  40770f:	cmc    
  407710:	jecxz  0x407750
  407712:	adc    BYTE PTR [eax-0x604d1043],cl
  407718:	push   eax
  407719:	shr    DWORD PTR [ebx],0x54
  40771c:	mov    edx,ebx
  40771e:	push   edx
  40771f:	lock bound esp,QWORD PTR [ebx]
  407722:	ss pop edi
  407724:	loope  0x40771d
  407726:	xchg   DWORD PTR [eax],eax
  407728:	or     BYTE PTR [eax-0x2d],bl
  40772b:	mov    cl,0x8
  40772d:	pop    ebx
  40772e:	jl     0x407730
  407730:	pop    es
  407731:	popa   
  407732:	scas   al,BYTE PTR es:[edi]
  407733:	add    BYTE PTR [esi-0xe],dh
  407736:	mov    esi,0xcec9e847
  40773b:	(bad)  
  40773d:	jge    0x40775b
  40773f:	mov    es,WORD PTR [edx+0xf]
  407742:	ror    BYTE PTR [ebx],cl
  407744:	mov    ah,0xca
  407746:	stos   DWORD PTR es:[edi],eax
  407747:	jne    0x4077a4
  407749:	(bad)  
  40774a:	mov    ds:0xab465bf2,al
  40774f:	xor    eax,0x2a0d93f3
  407754:	call   0x346efcca
  407759:	not    DWORD PTR [ebx+0x5a08dded]
  40775f:	inc    esp
  407760:	xor    eax,0xffffffb1
  407763:	cmp    eax,DWORD PTR [edx+0x54374a7e]
  407769:	inc    ebp
  40776a:	xor    eax,0xe78d3fd
  40776f:	or     al,BYTE PTR [ebp-0x21]
  407772:	jns    0x407710
  407774:	push   edx
  407775:	sub    eax,DWORD PTR [edi-0x4db95d79]
  40777b:	clc    
  40777c:	cmp    BYTE PTR [ebx+0x29],0x16
  407780:	mov    es,ebx
  407782:	pop    ebp
  407783:	ins    DWORD PTR es:[edi],dx
  407784:	sub    cl,0x20
  407787:	hlt    
  407788:	std    
  407789:	test   edi,0x28a577a3
  40778f:	inc    ecx
  407790:	cmp    eax,0xb34e0add
  407795:	pop    ss
  407796:	mov    ah,dh
  407798:	js     0x407767
  40779a:	pop    edx
  40779b:	push   0x6d
  40779d:	lods   al,BYTE PTR ds:[esi]
  40779e:	fdivr  st(3),st
  4077a0:	and    ch,ah
  4077a2:	adc    bh,BYTE PTR [ebx-0x13]
  4077a5:	arpl   WORD PTR [ebx],dx
  4077a7:	enter  0x3c2a,0x77
  4077ab:	in     al,dx
  4077ac:	jmp    0x7298:0x166a1f0b
  4077b3:	sub    DWORD PTR [ecx+ebp*8-0x11ed4a9b],eax
  4077ba:	es (bad) 
  4077bc:	test   ebx,0xcd8a90bb
  4077c2:	or     ebx,DWORD PTR [edi]
  4077c4:	(bad)  
  4077c6:	aaa    
  4077c7:	out    dx,eax
  4077c8:	add    eax,0xe5f5f3c7
  4077cd:	add    eax,DWORD PTR [eax-0xdc707c2]
  4077d3:	outs   dx,BYTE PTR ds:[esi]
  4077d4:	mov    bl,0x7
  4077d6:	(bad)  
  4077d7:	adc    ch,BYTE PTR [esi+0x6487101]
  4077dd:	fsub   QWORD PTR [esi-0x202ed984]
  4077e3:	push   ecx
  4077e4:	push   ecx
  4077e5:	sti    
  4077e6:	arpl   WORD PTR [edi],di
  4077e8:	jo     0x407813
  4077ea:	cmp    al,0x64
  4077ec:	dec    eax
  4077ed:	dec    esi
  4077ee:	adc    bh,BYTE PTR [edx]
  4077f0:	and    al,BYTE PTR [ebx]
  4077f2:	xchg   ebx,eax
  4077f3:	xchg   esi,eax
  4077f4:	xchg   BYTE PTR [ebx-0x22],ch
  4077f7:	lods   eax,DWORD PTR ds:[esi]
  4077f8:	pop    esp
  4077fa:	shl    BYTE PTR [eax-0x338d7bb0],cl
  407800:	ficom  DWORD PTR [ebp-0x27]
  407803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407804:	(bad)  
  407806:	jecxz  0x4077cd
  407808:	fild   DWORD PTR [edx+edx*1]
  40780b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40780c:	jmp    0x4077c5
  40780e:	je     0x40784f
  407810:	pushf  
  407811:	out    0x97,al
  407813:	mov    al,ds:0x5e37557b
  407818:	int    0x97
  40781a:	outs   dx,DWORD PTR ds:[esi]
  40781b:	pop    eax
  40781c:	cwde   
  40781d:	cwde   
  40781e:	call   DWORD PTR [ecx]
  407820:	sub    al,BYTE PTR [eax]
  407822:	stc    
  407823:	mov    edi,0x58e53cf7
  407828:	xor    eax,0x744b7330
  40782d:	pop    edi
  40782e:	jae    0x4077e1
  407830:	mov    cl,0x40
  407832:	aas    
  407833:	or     BYTE PTR [edx-0x47],dl
  407836:	pop    edi
  407837:	leave  
  407838:	push   edx
  407839:	outs   dx,DWORD PTR ds:[esi]
  40783a:	or     dh,bh
  40783c:	and    BYTE PTR [esi-0x1c],ch
  40783f:	mov    al,0x77
  407841:	popa   
  407842:	dec    ebp
  407843:	and    BYTE PTR [ecx],dh
  407845:	pop    esi
  407846:	leave  
  407847:	ret    
  407848:	jmp    0x116f:0x6d0f71b6
  40784f:	cmp    dl,al
  407851:	cmp    al,0x7
  407853:	shl    DWORD PTR [edi+0x9e8da3e],1
  407859:	cmp    DWORD PTR [eax],0xffffffd6
  40785c:	xor    eax,esp
  40785e:	std    
  40785f:	dec    eax
  407860:	inc    esi
  407861:	stc    
  407862:	mov    cs,WORD PTR [edx-0x31b5a94e]
  407868:	mov    ebp,DWORD PTR [edx]
  40786a:	mov    dh,0x5d
  40786c:	inc    edx
  40786d:	xchg   esp,eax
  40786e:	inc    edx
  40786f:	push   ds
  407870:	mov    al,0x2f
  407872:	xchg   ebp,eax
  407873:	out    dx,al
  407874:	es pop esi
  407876:	pop    es
  407877:	adc    ebp,esp
  407879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40787a:	packuswb mm0,QWORD PTR [esi+0x4b05e06f]
  407881:	inc    ecx
  407882:	mov    ds:0x9090caad,al
  407887:	or     BYTE PTR [ecx+0x1e],dl
  40788a:	in     al,0x85
  40788c:	push   eax
  40788d:	arpl   WORD PTR [eax+0x12],cx
  407890:	jns    0x40783e
  407892:	mov    ds:0xeb56a24,al
  407897:	aam    0x2
  407899:	xchg   BYTE PTR [edx-0x7e],ch
  40789c:	sub    eax,0xf66e2246
  4078a1:	mov    DWORD PTR [esi+0x78],ecx
  4078a4:	dec    esp
  4078a5:	data16 mov BYTE PTR [esi+ecx*1-0x2e43b1c4],dl
  4078ad:	ret    0xef45
  4078b0:	dec    ebx
  4078b1:	jl     0x4078c1
  4078b3:	in     eax,0xcf
  4078b5:	xor    eax,0x4f65eb69
  4078ba:	jno    0x407893
  4078bc:	loop   0x40789b
  4078be:	cmc    
  4078bf:	jbe    0x407928
  4078c1:	pop    DWORD PTR [ebx]
  4078c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078c4:	(bad)  
  4078c5:	aam    0xc3
  4078c7:	inc    ebx
  4078c8:	ins    DWORD PTR es:[edi],dx
  4078c9:	gs jnp 0x4078d7
  4078cc:	push   ebp
  4078cd:	loop   0x40787d
  4078cf:	repz rcl ah,cl
  4078d2:	in     eax,dx
  4078d3:	mov    esi,ds
  4078d5:	and    bl,dh
  4078d7:	shr    eax,cl
  4078d9:	and    edi,edi
  4078db:	xor    ebp,DWORD PTR [ecx+0x3e]
  4078de:	shl    DWORD PTR [ebx-0x59ee6be],0x4c
  4078e5:	sbb    edi,ebx
  4078e7:	enter  0x1525,0xa1
  4078eb:	imul   esp,DWORD PTR [edx],0x1e
  4078ee:	xor    edx,DWORD PTR [edx+eax*4+0x5f]
  4078f2:	sbb    eax,0x75c152bc
  4078f7:	inc    edx
  4078f8:	and    eax,0x8bd05a55
  4078fd:	ins    BYTE PTR es:[edi],dx
  4078fe:	cmp    eax,0xe90ff4be
  407903:	cmc    
  407904:	aas    
  407905:	aaa    
  407906:	and    al,0x24
  407908:	out    0xb9,al
  40790a:	push   0xffffff8d
  40790c:	adc    BYTE PTR [ebx],dh
  40790e:	out    dx,al
  40790f:	add    bl,al
  407911:	rol    ebx,0x99
  407914:	iret   
  407915:	add    BYTE PTR [edx-0x563af93e],ah
  40791b:	xor    esp,DWORD PTR [esi]
  40791d:	mov    cl,0xf
  40791f:	mov    BYTE PTR [eax],cl
  407921:	inc    ecx
  407922:	adc    eax,0xcbe912a6
  407927:	push   cs
  407928:	mov    WORD PTR [edx-0x2e3358a7],ss
  40792e:	jge    0x407932
  407930:	mov    esi,0x6fe68c5e
  407935:	jge    0x407997
  407937:	mov    eax,ds:0xa9eb801c
  40793c:	sub    BYTE PTR [ebx+0x66],bl
  40793f:	daa    
  407940:	xchg   ebx,eax
  407941:	test   BYTE PTR [ebx+0x7c0bc1fc],0x74
  407948:	xor    DWORD PTR [esi+0x2bfd9b6e],0x35
  40794f:	mov    ecx,0x5b7acdf
  407954:	push   edx
  407955:	nop
  407956:	cmc    
  407957:	test   DWORD PTR [edx-0x431629bb],ebx
  40795d:	add    dl,ah
  40795f:	dec    edx
  407960:	mov    esi,0x839ed93d
  407965:	sahf   
  407966:	and    ecx,ecx
  407968:	ins    DWORD PTR es:[edi],dx
  407969:	bound  ecx,QWORD PTR [ecx+0x18b3f867]
  40796f:	adc    al,0xf4
  407971:	dec    esp
  407972:	pop    edx
  407973:	adc    eax,0x1b12b214
  407978:	inc    edi
  407979:	mov    dl,cl
  40797b:	int    0xa8
  40797d:	fistp  QWORD PTR [ebp-0x71]
  407980:	jg     0x407931
  407982:	jns    0x407985
  407984:	(bad)  
  407985:	daa    
  407986:	test   al,0xe9
  407988:	cmp    BYTE PTR [ebx],cl
  40798a:	in     eax,0xfd
  40798c:	adc    BYTE PTR [edi+0x7799f36b],dl
  407992:	test   BYTE PTR [edx-0x6a],bl
  407995:	dec    edx
  407996:	pop    esp
  407997:	dec    edx
  407998:	xchg   edx,eax
  407999:	imul   ebx,DWORD PTR [ecx+0x2b906f04],0xffffffda
  4079a0:	mov    ds,WORD PTR [esi-0x54]
  4079a3:	jnp    0x4079a9
  4079a5:	jmp    0xac1a4316
  4079aa:	or     eax,0x7eecbfa3
  4079af:	inc    edx
  4079b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079b1:	aas    
  4079b2:	jo     0x407a33
  4079b4:	push   es
  4079b5:	es cmp eax,0xd53857e6
  4079bb:	in     al,dx
  4079bc:	in     al,0xa8
  4079be:	stos   DWORD PTR es:[edi],eax
  4079bf:	add    al,BYTE PTR [ebp-0x49d435eb]
  4079c5:	test   cl,al
  4079c7:	xor    DWORD PTR [edx-0x10bc09e6],0x2eb8a081
  4079d1:	push   ebp
  4079d2:	or     dl,BYTE PTR [ebx+0x25]
  4079d5:	sub    BYTE PTR [eax],0x93
  4079d8:	mov    esi,0x29326a8f
  4079dd:	adc    eax,0x3b84ce25
  4079e2:	das    
  4079e3:	std    
  4079e4:	jmp    0x4079f7
  4079e6:	pushf  
  4079e7:	or     BYTE PTR [esi-0x6f8022ac],dl
  4079ed:	add    edi,edi
  4079ef:	jb     0x407a00
  4079f1:	(bad)
  4079f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079f5:	inc    eax
  4079f6:	xor    edx,DWORD PTR [edi-0x69]
  4079f9:	push   esp
  4079fa:	sti    
  4079fb:	push   es
  4079fc:	(bad)  
  4079fd:	xor    DWORD PTR [esi+0x30c046b3],ecx
  407a03:	pop    ds
  407a04:	cmc    
  407a05:	in     ax,0xfe
  407a08:	nop
  407a09:	jge    0x4079d0
  407a0b:	sbb    bl,BYTE PTR [ebx]
  407a0d:	push   0xdd41c7e2
  407a12:	pop    ss
  407a13:	stos   DWORD PTR es:[edi],eax
  407a14:	jp     0x407a6d
  407a16:	and    DWORD PTR [edi+0x2135d8c3],eax
  407a1c:	mov    bh,BYTE PTR [ebx]
  407a1e:	dec    edi
  407a1f:	or     BYTE PTR [edx],0x5a
  407a22:	fxch   st(4)
  407a24:	loop   0x4079c6
  407a26:	jae    0x4079c9
  407a28:	xchg   edx,eax
  407a29:	mov    ss,WORD PTR [eax]
  407a2b:	sbb    DWORD PTR ds:0xb6d10c04,0x6a433fd8
  407a35:	pop    ebp
  407a36:	pop    ebx
  407a37:	and    eax,0xcc98de52
  407a3c:	(bad)  
  407a3e:	scas   al,BYTE PTR es:[edi]
  407a3f:	xchg   esp,eax
  407a40:	jle    0x4079e0
  407a42:	jg     0x407a79
  407a44:	mov    edx,0xf2bc963d
  407a49:	lock shl ebx,1
  407a4c:	sbb    bl,BYTE PTR [ecx-0xb]
  407a4f:	dec    ebp
  407a50:	push   esp
  407a51:	xor    esp,DWORD PTR cs:[ebp-0x22]
  407a55:	inc    esi
  407a56:	and    eax,0x8bccc7f0
  407a5b:	sub    DWORD PTR [edi],ebx
  407a5d:	stos   DWORD PTR es:[edi],eax
  407a5e:	call   0xe752:0x503092bb
  407a65:	dec    ebx
  407a66:	iret   
  407a67:	mov    edi,0x688b774d
  407a6c:	jecxz  0x407a3a
  407a6e:	jbe    0x4079fa
  407a70:	dec    ecx
  407a71:	jecxz  0x407ad4
  407a73:	jmp    0xde9e:0x2a808cf0
  407a7a:	call   0xa699:0xbe85e228
  407a81:	es pop esi
  407a83:	mov    ecx,0x9f728ac0
  407a88:	mov    ds:0xf220c1f0,al
  407a8d:	shr    DWORD PTR ds:0x6934291a,cl
  407a93:	lds    eax,FWORD PTR [ebx]
  407a95:	pop    esi
  407a96:	hlt    
  407a97:	add    ecx,DWORD PTR [ebx-0x281933b5]
  407a9d:	mov    esp,0xa2101e74
  407aa2:	enter  0xc7d6,0x2
  407aa6:	sbb    bh,bh
  407aa8:	sbb    bl,dl
  407aaa:	adc    esi,DWORD PTR [edx-0x71]
  407aad:	cmp    ch,BYTE PTR [ebx]
  407aaf:	or     bl,BYTE PTR [ecx+eiz*2-0x55]
  407ab3:	add    cl,BYTE PTR [ecx*2-0xc592e]
  407aba:	out    dx,eax
  407abb:	dec    edx
  407abc:	ror    DWORD PTR [edx],0x8e
  407abf:	pop    edx
  407ac0:	mov    esi,0xc6d0e2e8
  407ac5:	xchg   edx,eax
  407ac6:	pop    eax
  407ac7:	and    eax,0xfce73c4c
  407acc:	dec    eax
  407acd:	fidiv  DWORD PTR [esi]
  407acf:	jp     0x407add
  407ad1:	aam    0xa3
  407ad3:	clc    
  407ad4:	test   eax,0xcf15bfa
  407ad9:	ins    BYTE PTR es:[edi],dx
  407ada:	out    dx,eax
  407adb:	in     eax,0xae
  407add:	out    dx,eax
  407ade:	call   0xd11b:0x6d05f31e
  407ae5:	test   eax,0xc285d704
  407aea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407aeb:	cmp    al,0x92
  407aed:	ja     0x407b09
  407aef:	push   0x59b2fc8f
  407af4:	pop    ds
  407af5:	(bad)  
  407af6:	iret   
  407af7:	adc    dh,0x25
  407afa:	(bad)  
  407afb:	movzx  ebp,BYTE PTR [ebx+0x5c22df2d]
  407b02:	push   es
  407b03:	dec    edx
  407b04:	jp     0x407ad3
  407b06:	jmp    0x2ab2fc7f
  407b0b:	(bad)  
  407b0c:	add    cl,al
  407b0e:	push   0xf71d3419
  407b13:	mov    esi,0xc9774c6a
  407b18:	inc    edi
  407b19:	mov    cl,0x7b
  407b1b:	stos   BYTE PTR es:[edi],al
  407b1c:	jns    0x407b1c
  407b1e:	inc    ebx
  407b1f:	fcomi  st,st(5)
  407b21:	push   eax
  407b22:	rol    DWORD PTR [eax+0x411416c9],0x6c
  407b29:	dec    ecx
  407b2a:	cmp    eax,0xf903a729
  407b2f:	jae    0x407b6f
  407b31:	mov    dh,bh
  407b33:	jae    0x407b6d
  407b35:	jmp    0x19c9:0xbee45e85
  407b3c:	f2xm1  
  407b3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b3f:	jmp    0x407b17
  407b41:	xchg   ebp,eax
  407b42:	inc    edi
  407b43:	fidivr WORD PTR [ebx+0x19eaf8c3]
  407b49:	stc    
  407b4a:	dec    edi
  407b4b:	add    ch,BYTE PTR [esi+0x526a0ad2]
  407b51:	out    dx,eax
  407b52:	imul   edi,DWORD PTR [edi],0x84039ff3
  407b58:	in     al,dx
  407b59:	and    ah,BYTE PTR [edx]
  407b5b:	dec    edi
  407b5c:	or     eax,0x361bc79
  407b61:	lock add al,0x2c
  407b64:	shl    dh,1
  407b66:	sahf   
  407b67:	adc    al,0xf8
  407b69:	add    DWORD PTR [edx],edi
  407b6b:	mov    edi,0x7271a0ec
  407b70:	imul   BYTE PTR [ebx+ebp*4+0x78b1f681]
  407b77:	jecxz  0x407b9e
  407b79:	scas   al,BYTE PTR es:[edi]
  407b7a:	adc    DWORD PTR [ebx+0x7a3badd4],esp
  407b80:	(bad)  
  407b81:	imul   edi,edx,0xdcc2739e
  407b87:	push   esp
  407b88:	retf   
  407b89:	or     DWORD PTR [ebx+eiz*4+0x17737384],edi
  407b90:	pop    es
  407b91:	outs   dx,DWORD PTR ds:[esi]
  407b92:	pop    edi
  407b93:	hlt    
  407b94:	sub    BYTE PTR [ecx],dh
  407b96:	dec    ebx
  407b97:	sbb    BYTE PTR [edi+0x1a],bl
  407b9a:	sahf   
  407b9b:	mov    eax,ds:0xcccc95cb
  407ba0:	push   esi
  407ba1:	icebp  
  407ba2:	lea    esp,[eax+0x4dc44f45]
  407ba8:	mov    ch,BYTE PTR [edx-0x7d]
  407bab:	pusha  
  407bac:	in     al,dx
  407bad:	mov    bl,0x8
  407baf:	xchg   esp,eax
  407bb0:	xchg   edi,eax
  407bb1:	xor    bh,BYTE PTR [ebp+0x792d5761]
  407bb7:	mov    ds:0xf15fec75,eax
  407bbc:	js     0x407bab
  407bbe:	sub    DWORD PTR [ebx+ecx*1-0x5cb4c3fe],eax
  407bc5:	jl     0x407b83
  407bc7:	stos   DWORD PTR es:[edi],eax
  407bc8:	dec    ebp
  407bc9:	neg    DWORD PTR [ebp-0x78]
  407bcc:	mov    edx,0xd0eb5c52
  407bd1:	dec    eax
  407bd2:	outs   dx,DWORD PTR ds:[esi]
  407bd3:	lods   eax,DWORD PTR ds:[esi]
  407bd4:	aas    
  407bd5:	jbe    0x407b5f
  407bd7:	jge    0x407bd1
  407bd9:	test   eax,0xeb4e1d0f
  407bde:	push   ecx
  407bdf:	or     bl,0x72
  407be2:	push   0x4b98a6a1
  407be7:	jmp    0x26d7:0x71fd314f
  407bee:	stos   DWORD PTR es:[edi],eax
  407bef:	cmp    edi,DWORD PTR [esi+0x1788c16e]
  407bf5:	cmc    
  407bf6:	add    dl,BYTE PTR [edx*8-0x2b1523d5]
  407bfd:	dec    esi
  407bfe:	mov    cl,0xab
  407c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c01:	mov    eax,0xe7869c5e
  407c06:	jmp    0x72cef9b6
  407c0b:	xlat   BYTE PTR ds:[ebx]
  407c0c:	pop    DWORD PTR [eax+eiz*4+0x11fc1aa9]
  407c13:	xor    eax,0x34054656
  407c18:	xor    al,bl
  407c1a:	push   esp
  407c1b:	(bad)  
  407c1c:	and    BYTE PTR [esi+0x56],dh
  407c1f:	xor    al,0xb5
  407c21:	pop    ebp
  407c22:	ds enter 0x7a0c,0xdd
  407c27:	mov    DWORD PTR [ecx],esp
  407c29:	popa   
  407c2a:	dec    eax
  407c2b:	clc    
  407c2c:	(bad)  [esi+0x396a709f]
  407c32:	pop    ds
  407c33:	pushf  
  407c34:	pop    ebx
  407c35:	mov    ebx,0x9186d142
  407c3a:	adc    al,0x5f
  407c3c:	lock mov al,ds:0x75936c49
  407c42:	ja     0x407c3a
  407c44:	mov    ebp,DWORD PTR [eax-0x40745ab8]
  407c4a:	lods   al,BYTE PTR ds:[esi]
  407c4b:	cwde   
  407c4c:	frstor [esi]
  407c4e:	(bad)  
  407c4f:	sub    al,0xa1
  407c51:	nop
  407c52:	adc    eax,0x72cc106c
  407c57:	sub    BYTE PTR [esi+0x42f123d1],bl
  407c5d:	ret    0x9557
  407c60:	mov    dh,0xad
  407c62:	arpl   WORD PTR [eax-0x67],sp
  407c65:	and    DWORD PTR [ebp+0x4b],edx
  407c68:	dec    edi
  407c69:	std    
  407c6a:	fisub  WORD PTR [esi-0x75]
  407c6d:	adc    ch,BYTE PTR [edx-0x10]
  407c70:	inc    esp
  407c71:	inc    edx
  407c72:	mov    WORD PTR [ebx-0x5],gs
  407c75:	loope  0x407ca6
  407c77:	lds    ebp,FWORD PTR [ebx+0xb4524de]
  407c7d:	mov    al,0x57
  407c7f:	sub    bh,BYTE PTR [esi]
  407c81:	sar    DWORD PTR [edx-0x2c],cl
  407c84:	mov    dl,0xdc
  407c86:	inc    edx
  407c87:	je     0x407c3a
  407c89:	sar    ah,1
  407c8b:	repnz inc edx
  407c8d:	xchg   edi,eax
  407c8e:	xchg   BYTE PTR [edi-0x63],bh
  407c91:	scas   eax,DWORD PTR es:[edi]
  407c92:	es adc ecx,0x85a81f0a
  407c99:	out    0xcc,al
  407c9b:	(bad)  
  407c9c:	lds    ecx,FWORD PTR [ebx+ecx*2+0x35d1dba2]
  407ca3:	push   cs
  407ca4:	and    ebx,DWORD PTR [eax-0x2f]
  407ca7:	rcl    DWORD PTR [edx],cl
  407ca9:	pop    esi
  407caa:	aam    0x4d
  407cac:	jp     0x407cc1
  407cae:	jmp    0xd122:0x79f31e3a
  407cb5:	xchg   ecx,eax
  407cb6:	push   ebx
  407cb7:	xor    eax,0xedc4d5cb
  407cbc:	or     al,BYTE PTR [ecx+0x57]
  407cbf:	cmc    
  407cc0:	inc    ebp
  407cc1:	pop    edx
  407cc2:	jo     0x407c4b
  407cc4:	call   0x6a56e92b
  407cc9:	xlat   BYTE PTR ds:[ebx]
  407cca:	sub    ch,al
  407ccc:	push   ds
  407ccd:	rep ins BYTE PTR es:[edi],dx
  407ccf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cd0:	mov    ecx,0x954d5f5a
  407cd5:	leave  
  407cd6:	mov    ecx,0x5c18755a
  407cdb:	push   ebx
  407cdc:	cmp    eax,0x94b1451e
  407ce1:	or     DWORD PTR [ebx],esi
  407ce3:	or     eax,0x3ead6409
  407ce8:	(bad)  fs:[ebx+0x17]
  407cec:	mov    dl,0xa7
  407cee:	retf   
  407cef:	add    BYTE PTR [edi-0x63faa9bd],al
  407cf5:	mov    eax,0x3c99154
  407cfa:	jbe    0x407d4c
  407cfc:	adc    eax,0x72fea026
  407d01:	mov    eax,ds:0x1cc6a91e
  407d06:	cwde   
  407d07:	leave  
  407d08:	mov    ebp,0xa2dfd70
  407d0d:	mov    esi,0xa9300883
  407d12:	xchg   BYTE PTR [esi],ch
  407d14:	(bad)  
  407d15:	scas   eax,DWORD PTR es:[edi]
  407d16:	test   eax,0x1eb816bb
  407d1b:	mov    edi,0x96fdf808
  407d20:	dec    ecx
  407d21:	stc    
  407d22:	jno    0x407d06
  407d24:	and    DWORD PTR [eax+eiz*1],eax
  407d27:	add    al,0x21
  407d29:	scas   eax,DWORD PTR es:[edi]
  407d2a:	jecxz  0x407d17
  407d2c:	repz mov esi,DWORD PTR [eax]
  407d2f:	xchg   BYTE PTR [esi-0x37],cl
  407d32:	int3   
  407d33:	mov    ds:0xe93be73b,eax
  407d38:	jno    0x407d2c
  407d3a:	jne    0x407cc3
  407d3c:	lahf   
  407d3d:	mov    edx,0x82195837
  407d42:	out    dx,eax
  407d43:	and    DWORD PTR [edx+0x14c45f6c],esi
  407d49:	push   esi
  407d4a:	cs push esi
  407d4c:	sub    al,0xf
  407d4e:	ret    0xcee4
  407d51:	shr    DWORD PTR [edx+0x6d2dd109],1
  407d57:	add    BYTE PTR [eax+edi*4-0x57f2e035],0x9f
  407d5f:	test   BYTE PTR [eax+0x28],al
  407d62:	rep ins BYTE PTR es:[edi],dx
  407d64:	test   BYTE PTR [eax],ah
  407d66:	pop    esi
  407d67:	lock and ebp,DWORD PTR [edx+0x528bc95d]
  407d6e:	jecxz  0x407cfe
  407d70:	mov    ah,0x1f
  407d72:	pop    ecx
  407d73:	lods   al,BYTE PTR ds:[esi]
  407d74:	pop    es
  407d75:	add    al,BYTE PTR [ecx-0x6b]
  407d78:	mov    fs,WORD PTR [ecx]
  407d7a:	cdq    
  407d7b:	push   edx
  407d7c:	push   esp
  407d7d:	and    bh,BYTE PTR [ecx]
  407d7f:	js     0x407da5
  407d81:	xchg   edi,eax
  407d82:	adc    al,0x67
  407d84:	arpl   WORD PTR [ecx+0x3f],ax
  407d87:	test   al,0x6
  407d89:	fisubr DWORD PTR [ebp-0x6e]
  407d8c:	jo     0x407d8a
  407d8e:	pop    ebx
  407d8f:	xchg   edi,eax
  407d90:	dec    ecx
  407d91:	sbb    dl,BYTE PTR [eax-0x60]
  407d94:	clc    
  407d95:	lods   al,BYTE PTR ds:[esi]
  407d96:	or     BYTE PTR [ecx-0x75],ch
  407d99:	sbb    esp,DWORD PTR [edi+0x360b0e21]
  407d9f:	push   ds
  407da0:	mov    ecx,DWORD PTR [edi+0x6e]
  407da3:	sub    eax,0x5cc32f49
  407da8:	jbe    0x407dd0
  407daa:	push   es
  407dab:	daa    
  407dac:	fsubr  DWORD PTR ds:0xf1824fcb
  407db2:	test   al,0xed
  407db4:	jge    0x407dd5
  407db6:	test   BYTE PTR [esi+edx*1+0x1d],ah
  407dba:	pop    esp
  407dbb:	(bad)  
  407dbc:	inc    BYTE PTR gs:[ecx+0x60]
  407dc0:	sbb    al,0x8a
  407dc2:	xchg   ebp,eax
  407dc3:	xor    al,0xa7
  407dc5:	sub    dh,bh
  407dc7:	ret    
  407dc8:	fstp   QWORD PTR [ecx-0x27208fd4]
  407dce:	or     eax,0xd6e777ad
  407dd3:	aaa    
  407dd4:	test   eax,0xa6def60a
  407dd9:	dec    esp
  407dda:	sbb    al,0xea
  407ddc:	cdq    
  407ddd:	xchg   ebp,eax
  407dde:	jb     0x407dcd
  407de0:	jae    0x407e16
  407de2:	push   ebp
  407de3:	lods   al,BYTE PTR ds:[esi]
  407de4:	arpl   WORD PTR [edi+edi*2],di
  407de7:	mov    bh,0x65
  407de9:	push   ecx
  407dea:	adc    esi,DWORD PTR [ebx-0x73867dfd]
  407df0:	fldenv [ecx]
  407df2:	adc    BYTE PTR [edi+0x59],cl
  407df5:	sbb    DWORD PTR [ebp+0x50],edx
  407df8:	retf   0xcaa2
  407dfb:	repnz inc esi
  407dfd:	mov    bl,0xe3
  407dff:	jmp    eax
  407e01:	imul   ebp,eax,0xf543a3b5
  407e07:	inc    edx
  407e08:	pusha  
  407e09:	nop
  407e0a:	int3   
  407e0b:	call   0xbced05c1
  407e10:	mov    bh,0x8
  407e12:	mov    dl,0x1
  407e14:	lahf   
  407e15:	stos   DWORD PTR es:[edi],eax
  407e16:	and    al,0x77
  407e18:	test   DWORD PTR [eax],esi
  407e1a:	mov    al,0x85
  407e1c:	sbb    ebp,DWORD PTR [edi-0x1aaa82b3]
  407e22:	test   DWORD PTR [edi+0x5ad2bf87],eax
  407e28:	retf   
  407e29:	add    eax,0xae02a8cd
  407e2e:	cld    
  407e2f:	sbb    DWORD PTR gs:[eax],ecx
  407e32:	cmp    cl,0xfc
  407e35:	loop   0x407eaf
  407e37:	jno    0x407e30
  407e39:	and    DWORD PTR [eax-0x1b9f38b2],0x43422dbf
  407e43:	mov    ah,0xf3
  407e45:	cdq    
  407e46:	popf   
  407e47:	inc    ebx
  407e48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e49:	jmp    DWORD PTR [ecx+0x53]
  407e4c:	sahf   
  407e4d:	mov    dl,0xf1
  407e4f:	pop    edx
  407e50:	mov    BYTE PTR [ecx+0x24ac4bbb],al
  407e56:	test   eax,0xa845ba31
  407e5b:	cmp    eax,edx
  407e5d:	call   0x4356:0x4ffdbe5a
  407e64:	in     al,0x23
  407e66:	mov    ch,0xfe
  407e68:	mov    ebp,?
  407e6a:	ret    0x7984
  407e6d:	and    ecx,DWORD PTR [esi]
  407e6f:	xchg   ecx,eax
  407e70:	bound  ebx,QWORD PTR [esi+0xf]
  407e73:	mov    bh,0xa8
  407e75:	sbb    ebp,DWORD PTR [ecx+ebx*2]
  407e78:	and    BYTE PTR [esi+0x2a],cl
  407e7b:	jl     0x407ee6
  407e7d:	out    0x31,eax
  407e7f:	mov    DWORD PTR [esi+0xd2e7564],eax
  407e85:	ins    DWORD PTR es:[edi],dx
  407e86:	cmp    eax,esp
  407e88:	xchg   ecx,eax
  407e89:	ss out 0xa5,al
  407e8c:	xor    dl,BYTE PTR [ecx-0x19]
  407e8f:	(bad)  
  407e90:	jl     0x407e21
  407e92:	xchg   ebp,eax
  407e93:	stos   DWORD PTR es:[edi],eax
  407e94:	and    al,0x7c
  407e96:	jb     0x407e24
  407e98:	and    eax,0x84046002
  407e9d:	out    dx,eax
  407e9e:	test   eax,0x5859c052
  407ea3:	mov    dh,0xc0
  407ea5:	pop    edx
  407ea6:	push   es
  407ea7:	adc    ebx,edi
  407ea9:	inc    eax
  407eaa:	sub    al,ah
  407eac:	mov    WORD PTR [edi],fs
  407eae:	aas    
  407eaf:	stc    
  407eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407eb1:	jbe    0x407e4a
  407eb3:	neg    BYTE PTR ds:0x5ecb5f1c
  407eb9:	inc    DWORD PTR [eax*2+0x2376b75d]
  407ec0:	mov    ch,bh
  407ec2:	mov    ecx,DWORD PTR [eax+ebx*1+0x4]
  407ec6:	daa    
  407ec7:	rol    esi,1
  407ec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407eca:	aam    0x1c
  407ecc:	push   cs
  407ecd:	sub    al,0xb6
  407ecf:	fnstenv [ebx+ebx*4+0x15]
  407ed3:	(bad)  [ecx+0x5016487b]
  407ed9:	push   ecx
  407eda:	addr16 nop
  407edc:	in     eax,dx
  407edd:	xor    al,0xfd
  407edf:	fs iret 
  407ee1:	and    ecx,eax
  407ee3:	xchg   esp,eax
  407ee4:	stos   BYTE PTR es:[edi],al
  407ee5:	lock ret 0x97b6
  407ee9:	xor    DWORD PTR [esi+0x14],edx
  407eec:	(bad)  
  407eee:	mov    ch,0xbc
  407ef0:	ja     0x407eaf
  407ef2:	add    DWORD PTR [ebp+0x59672ef4],0x1dcb245b
  407efc:	ret    
  407efd:	ins    DWORD PTR es:[edi],dx
  407efe:	mov    edx,0xb739b4c1
  407f03:	or     BYTE PTR [edx-0x9649b6f],0x14
  407f0a:	pop    edx
  407f0b:	xchg   ebp,eax
  407f0c:	jmp    0x407f6f
  407f0e:	out    dx,eax
  407f0f:	fcmovnb st,st(0)
  407f11:	fisub  DWORD PTR [eax+0x1ed4f7fd]
  407f17:	dec    BYTE PTR [ebx+0x35]
  407f1a:	push   ss
  407f1b:	dec    esi
  407f1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f1d:	cmp    eax,0x2a212701
  407f22:	sbb    BYTE PTR [eax+0x6e],0xb6
  407f26:	icebp  
  407f27:	fdivr  DWORD PTR [edi]
  407f29:	and    al,0x4d
  407f2b:	adc    al,0xbd
  407f2d:	fnstcw WORD PTR [eax]
  407f2f:	bnd jmp 0x407eb5
  407f32:	dec    ecx
  407f33:	dec    esp
  407f34:	mov    eax,0xa6f2c437
  407f39:	imul   esp,DWORD PTR [ecx-0x1b53a821],0xffffff83
  407f40:	dec    eax
  407f41:	pop    ebp
  407f42:	dec    eax
  407f43:	xor    bh,BYTE PTR [ebx+0x6]
  407f46:	frstor [ebp+eiz*2-0x41]
  407f4a:	mov    al,0x14
  407f4c:	mov    al,0x71
  407f4e:	or     eax,0x17d118f4
  407f53:	retf   
  407f54:	jns    0x407f3f
  407f56:	stos   BYTE PTR es:[edi],al
  407f57:	mov    ch,0x10
  407f59:	or     eax,0xff1caa5a
  407f5e:	or     eax,0x77d4618e
  407f63:	xchg   DWORD PTR [edi+0x4680a743],ecx
  407f69:	add    al,0x91
  407f6b:	(bad)
  407f6e:	sti    
  407f6f:	push   ecx
  407f70:	cwde   
  407f71:	fiadd  WORD PTR [ebp-0x6858c6b9]
  407f77:	mov    ds:0xfe8b2cff,al
  407f7c:	sti    
  407f7d:	enter  0x58c7,0x2e
  407f81:	adc    eax,0x7e490af2
  407f86:	sbb    al,0x6b
  407f88:	fld    DWORD PTR [ecx-0x5825c71c]
  407f8e:	fnsave [ebx-0x1207d503]
  407f94:	or     eax,0xf09ae69c
  407f99:	dec    ebx
  407f9a:	jg     0x407f41
  407f9c:	fcmovu st,st(4)
  407f9e:	mov    edx,0xba3e321
  407fa3:	loopne 0x408024
  407fa5:	pop    ss
  407fa6:	mov    al,ds:0x7b99671c
  407fab:	(bad)  
  407fac:	fwait
  407fad:	sbb    BYTE PTR [ecx-0x27bff0d],dl
  407fb3:	and    DWORD PTR [ecx-0x64036eb8],esp
  407fb9:	cmp    dh,BYTE PTR [esi+esi*4]
  407fbc:	jo     0x407fee
  407fbe:	jb     0x40801d
  407fc0:	pop    esp
  407fc1:	xor    eax,0xfe126a63
  407fc6:	and    DWORD PTR [esi],ebp
  407fc8:	jmp    0x4cc9:0x7c8f3ed
  407fcf:	jb     0x40802f
  407fd1:	jl     0x407fc6
  407fd3:	loop   0x407f9d
  407fd5:	repnz test BYTE PTR [edx+0x4],cl
  407fd9:	out    0x79,eax
  407fdb:	loop   0x407f82
  407fdd:	push   esi
  407fde:	mov    ecx,DWORD PTR ss:[edx+0x27aa7b7d]
  407fe5:	sbb    cl,bl
  407fe7:	mov    ds:0x6efed676,al
  407fec:	sub    DWORD PTR [ebx+0x1],esi
  407fef:	mov    eax,DWORD PTR [ebx-0x3d]
  407ff2:	fild   WORD PTR [edx-0x38]
  407ff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ff6:	jns    0x408036
  407ff8:	dec    esi
  407ff9:	repz add esi,DWORD PTR [esi-0x10]
  407ffd:	cmp    dl,BYTE PTR [ebx]
  407fff:	xor    esi,ebp
  408001:	pop    ecx
  408002:	push   eax
  408003:	and    al,0x5e
  408005:	or     BYTE PTR [eax],dl
  408007:	lods   eax,DWORD PTR ds:[esi]
  408008:	mov    gs,WORD PTR [edi+0x246f8c45]
  40800e:	and    BYTE PTR ds:0xea3f1e1e,bh
  408014:	push   cs
  408015:	fwait
  408016:	xor    eax,0x6c825c5b
  40801b:	rcr    DWORD PTR [ebx+ecx*2-0x64],cl
  40801f:	fwait
  408020:	add    al,cl
  408022:	inc    ebx
  408023:	sub    ebp,DWORD PTR [esi-0x2]
  408026:	sbb    al,0x9f
  408028:	xor    al,0x79
  40802a:	inc    edx
  40802b:	stos   BYTE PTR es:[edi],al
  40802c:	xor    al,BYTE PTR [esp+ecx*8-0x28721a09]
  408033:	mov    bh,0x7c
  408035:	xor    BYTE PTR [eax+esi*1],dh
  408038:	call   0xf6c4b8e0
  40803d:	out    dx,al
  40803e:	out    dx,al
  40803f:	inc    ebp
  408040:	les    esi,FWORD PTR [ecx-0x3fe52fc6]
  408046:	sub    DWORD PTR [edx-0x4],0xffffff83
  40804a:	cmp    al,0x84
  40804c:	leave  
  40804d:	lods   al,BYTE PTR ds:[esi]
  40804e:	xchg   edx,eax
  40804f:	pusha  
  408050:	ins    BYTE PTR es:[edi],dx
  408051:	leave  
  408052:	add    DWORD PTR [ecx+0x6ea4acf4],ebp
  408058:	sub    dh,BYTE PTR [ebp+0x3e1e0976]
  40805e:	hlt    
  40805f:	repnz sbb al,0xc1
  408062:	mov    ds:0x63227547,al
  408067:	mov    eax,0x95c436bc
  40806c:	(bad)  
  40806e:	out    dx,eax
  40806f:	popf   
  408070:	sbb    BYTE PTR [ebp+0x35706a25],dh
  408076:	xor    DWORD PTR es:[eax],ebx
  408079:	fldenv [edi+0x79]
  40807c:	jecxz  0x408090
  40807e:	mov    esp,gs
  408080:	sahf   
  408081:	cmp    DWORD PTR [edx],ecx
  408083:	fbstp  TBYTE PTR [esi]
  408085:	mov    ?,WORD PTR [esi+eiz*1+0x43]
  408089:	inc    eax
  40808a:	mov    gs,WORD PTR [eax-0x21]
  40808d:	popf   
  40808e:	adc    eax,0x7bb2af55
  408093:	cmp    eax,DWORD PTR [eax+0x65670cb4]
  408099:	xchg   edi,eax
  40809a:	mov    ecx,0xcbfdf643
  40809f:	xchg   esp,eax
  4080a0:	addr16 hlt 
  4080a2:	xchg   edi,eax
  4080a3:	ja     0x40806e
  4080a5:	adc    DWORD PTR [edx+edi*2+0x7c],edx
  4080a9:	fild   WORD PTR [edx+ecx*8+0x4c]
  4080ad:	inc    edi
  4080ae:	ror    BYTE PTR [esi+0x7eab1461],1
  4080b4:	mov    BYTE PTR [eax-0x5b],bl
  4080b7:	push   eax
  4080b8:	mov    dh,0xff
  4080ba:	paddb  mm5,QWORD PTR ds:0x14c6b7d
  4080c1:	push   esp
  4080c2:	pop    eax
  4080c3:	stc    
  4080c4:	xlat   BYTE PTR ds:[ebx]
  4080c5:	fsub   QWORD PTR [ebp-0x6]
  4080c8:	mov    edx,0xb923bb4a
  4080cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080ce:	jb     0x408058
  4080d0:	fdiv   st(0),st
  4080d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080d3:	mov    cl,0x8e
  4080d5:	push   0xffffff8b
  4080d7:	cld    
  4080d8:	clc    
  4080d9:	fbstp  TBYTE PTR [eax-0xf13181a]
  4080df:	add    DWORD PTR [edi-0xb],0xffffff82
  4080e3:	mov    edx,0xf008a176
  4080e8:	cli    
  4080e9:	push   esi
  4080ea:	stos   DWORD PTR es:[edi],eax
  4080eb:	ficom  WORD PTR [esp+ecx*4+0xc]
  4080ef:	cmp    DWORD PTR [esi-0x7d25ba2d],ebp
  4080f5:	out    dx,al
  4080f6:	js     0x4080ca
  4080f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080f9:	or     BYTE PTR [ebx],bh
  4080fb:	ret    0x4459
  4080fe:	leave  
  4080ff:	xchg   edi,eax
  408100:	pop    ecx
  408101:	in     eax,0xad
  408103:	out    dx,eax
  408104:	pop    edx
  408105:	js     0x40809a
  408107:	sub    eax,0x37ca3afb
  40810c:	sbb    eax,0x13424a01
  408111:	pop    ss
  408112:	push   edi
  408113:	fist   WORD PTR [esi]
  408115:	sbb    bh,BYTE PTR [esi-0x30dea9cb]
  40811b:	cmp    DWORD PTR [ebx+0x54],esp
  40811e:	rcr    DWORD PTR [edi],cl
  408120:	xchg   ecx,eax
  408121:	xor    DWORD PTR [edx+0x34],eax
  408124:	test   al,0xb9
  408126:	cmp    esp,DWORD PTR [eax+0x45a2c5bd]
  40812c:	clc    
  40812d:	cmp    al,0x3c
  40812f:	pop    ebp
  408130:	jne    0x4080d4
  408132:	sbb    BYTE PTR [edi+0x31],0x8a
  408136:	pop    ss
  408137:	scas   ax,WORD PTR es:[edi]
  408139:	pop    ds
  40813a:	xchg   edi,eax
  40813b:	mov    dl,0x77
  40813d:	test   eax,0x35fe808f
  408142:	push   es
  408143:	pop    esi
  408144:	or     al,BYTE PTR [eax]
  408146:	pop    ecx
  408147:	mov    dh,0x91
  408149:	fs popf 
  40814b:	es nop
  40814d:	(bad)  
  40814e:	shr    BYTE PTR [ebx-0x5f01b571],1
  408154:	inc    edx
  408155:	push   0xddd6d95f
  40815a:	pop    ecx
  40815b:	shr    DWORD PTR [ebp-0xa483aef],0xd7
  408162:	xor    eax,ebp
  408164:	inc    esi
  408165:	test   DWORD PTR [edx-0xd],esi
  408168:	ss leave 
  40816a:	fcmovnb st,st(0)
  40816c:	leave  
  40816d:	scas   al,BYTE PTR es:[edi]
  40816e:	jne    0x4081db
  408170:	sub    DWORD PTR [ebp-0xd],ebx
  408173:	cmp    DWORD PTR [edx],edi
  408175:	data16 add BYTE PTR [eax-0x66],bh
  408179:	call   0x9c6d5e5b
  40817e:	sub    edi,DWORD PTR [edi]
  408180:	and    eax,0xe957acab
  408185:	std    
  408186:	sub    al,cl
  408188:	sbb    DWORD PTR [edx],0x47f6ac97
  40818e:	dec    ebx
  40818f:	mov    BYTE PTR [ecx+0x396536dc],ch
  408195:	nop
  408196:	dec    esp
  408197:	dec    ebx
  408198:	xor    DWORD PTR [esi],ecx
  40819a:	out    dx,eax
  40819b:	ror    edi,cl
  40819d:	sub    BYTE PTR [eax],dl
  40819f:	jle    0x40817a
  4081a1:	mov    WORD PTR [edx-0x6d],fs
  4081a4:	rcl    BYTE PTR [ebx+0x2b],0xb5
  4081a8:	(bad)  
  4081a9:	sbb    BYTE PTR [esi-0xb],dh
  4081ac:	and    DWORD PTR [esp+ebx*2-0x78df970],edi
  4081b3:	dec    DWORD PTR ss:[ebp-0x6108efd2]
  4081ba:	je     0x4081d0
  4081bc:	rol    DWORD PTR [eax],cl
  4081be:	sub    WORD PTR [ebp+0x1c],si
  4081c2:	inc    edi
  4081c3:	pusha  
  4081c4:	and    edx,DWORD PTR [edi-0x1d]
  4081c7:	cmp    al,0x66
  4081c9:	lahf   
  4081ca:	iret   
  4081cb:	mov    bh,0xac
  4081cd:	sbb    DWORD PTR [ebx],ebx
  4081cf:	or     al,0x21
  4081d1:	test   eax,0xbe647338
  4081d6:	and    eax,0xa478efda
  4081db:	jmp    0xa0f4:0x185313b5
  4081e2:	adc    DWORD PTR [esi+ecx*2],edx
  4081e5:	pop    eax
  4081e6:	jle    0x4081dd
  4081e8:	push   0x572c9ec
  4081ed:	stc    
  4081ee:	in     al,0xfa
  4081f0:	lods   eax,DWORD PTR ds:[esi]
  4081f1:	or     BYTE PTR ds:0x2572cbd,cl
  4081f7:	pop    edx
  4081f8:	sub    DWORD PTR [edx-0x1cb674cb],esp
  4081fe:	mov    ds:0x90a671a3,eax
  408203:	adc    DWORD PTR [eax],ebp
  408205:	in     eax,dx
  408206:	sub    eax,0x4eb77914
  40820b:	std    
  40820c:	pop    ss
  40820d:	into   
  40820e:	adc    eax,0x8ca4d2c8
  408213:	test   eax,0xf858591c
  408218:	sbb    eax,0x7491f106
  40821d:	(bad)
  408221:	mov    ds:0xcc8fbdcb,eax
  408226:	cmp    al,0x23
  408228:	inc    edi
  408229:	add    al,0x65
  40822b:	add    eax,0xd759f8ab
  408230:	sub    ecx,esp
  408232:	or     eax,0x658722d2
  408237:	or     edx,edx
  408239:	dec    ecx
  40823a:	icebp  
  40823b:	imul   edi,edx,0xffffffdf
  40823e:	inc    ecx
  40823f:	dec    esi
  408240:	inc    esp
  408241:	jns    0x408288
  408243:	adc    al,0x3a
  408245:	dec    eax
  408246:	aaa    
  408247:	sbb    esp,DWORD PTR [eax]
  408249:	sbb    BYTE PTR [edx+0x38],0x13
  40824d:	(bad)  [eax-0xb]
  408250:	pop    ebx
  408251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408252:	pop    DWORD PTR [esi-0x5977bc2b]
  408258:	push   0xe20563c2
  40825d:	cli    
  40825e:	in     al,0x4f
  408260:	mov    al,ds:0x2175e744
  408265:	inc    esp
  408266:	pop    ebx
  408267:	add    BYTE PTR [edx-0x5c],ah
  40826a:	cmp    bh,BYTE PTR [edi+0x404300c4]
  408270:	ficom  WORD PTR [eax+0x3a]
  408273:	xor    dl,BYTE PTR [edi]
  408275:	jp     0x4082d8
  408277:	mov    cl,0x94
  408279:	mov    esi,ds
  40827b:	mov    ah,0x41
  40827d:	add    ah,bl
  40827f:	push   eax
  408280:	mov    ds:0x900f8b24,eax
  408285:	mov    esi,0x1e40ab03
  40828a:	(bad)  
  40828b:	iret   
  40828c:	jno    0x408249
  40828e:	cld    
  40828f:	out    dx,eax
  408290:	xchg   edx,eax
  408291:	dec    ebx
  408292:	mov    ebp,0x53742284
  408297:	xlat   BYTE PTR ds:[ebx]
  408298:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40829a:	xor    eax,0xe637b565
  40829f:	lea    ecx,[ecx+edi*8]
  4082a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082a3:	mov    ds:0xd2e20617,al
  4082a8:	bound  ecx,QWORD PTR [esi+0x3d7e6816]
  4082ae:	jp     0x40831d
  4082b0:	icebp  
  4082b1:	push   edx
  4082b2:	out    dx,eax
  4082b3:	test   ah,bl
  4082b5:	pop    edx
  4082b6:	(bad)  
  4082b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082b8:	addr16 mov esi,0x653f0afd
  4082be:	adc    BYTE PTR [edx+0x61811ed2],cl
  4082c4:	shl    DWORD PTR [eax-0x6d],1
  4082c7:	pushf  
  4082c8:	fidiv  WORD PTR [esi-0x15b37b0]
  4082ce:	xchg   edx,eax
  4082cf:	pop    eax
  4082d0:	xor    DWORD PTR [esi+0x11],edx
  4082d3:	sbb    edi,edi
  4082d5:	cmc    
  4082d6:	jecxz  0x40831a
  4082d8:	dec    esi
  4082d9:	sub    BYTE PTR [eax+0x2db49ddb],al
  4082df:	push   eax
  4082e0:	mov    ebp,0x987f4582
  4082e5:	rcl    BYTE PTR [eax+0x598bde5a],cl
  4082eb:	inc    edi
  4082ec:	push   ebx
  4082ed:	fs xor ebx,ebp
  4082f0:	neg    ecx
  4082f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082f3:	sub    DWORD PTR [esi+ebx*1],ecx
  4082f6:	fs jle 0x40832d
  4082f9:	mov    ch,0xb9
  4082fb:	cmp    bl,ah
  4082fd:	rol    BYTE PTR [esi+0x38852df4],1
  408303:	pop    esp
  408304:	push   esp
  408305:	push   eax
  408306:	xchg   ebp,eax
  408307:	add    ecx,DWORD PTR [edi-0x8393ee]
  40830d:	sahf   
  40830e:	fchs   
  408310:	ds jae 0x408340
  408313:	or     BYTE PTR [edi-0x30],al
  408316:	sub    eax,0x7493e11a
  40831b:	jb     0x408355
  40831d:	(bad)  
  40831e:	lock pop ecx
  408320:	out    dx,al
  408321:	add    BYTE PTR [ebx+0x25],0xb7
  408325:	lea    edx,[esi-0x4fb1b4de]
  40832b:	sbb    al,0x9e
  40832d:	mov    ebx,0x887e2e9f
  408332:	retf   
  408333:	pushf  
  408334:	pop    es
  408335:	jb     0x40832b
  408337:	mov    ebx,0x755c5a23
  40833c:	sub    BYTE PTR [ebp+0x3],dh
  40833f:	sbb    DWORD PTR [eax+0x616cb206],ebp
  408345:	inc    ecx
  408346:	cld    
  408347:	fwait
  408348:	aaa    
  408349:	sbb    BYTE PTR [ecx],dl
  40834b:	cmp    cl,al
  40834d:	aam    0xed
  40834f:	cmp    ecx,DWORD PTR [ebp+0x7e]
  408352:	inc    esp
  408353:	fistp  QWORD PTR [eax+0x79ad86e5]
  408359:	xchg   ecx,eax
  40835a:	sti    
  40835b:	pop    esp
  40835c:	dec    esp
  40835d:	dec    edi
  40835e:	test   DWORD PTR [eax-0x20],0x44f5220f
  408365:	pushf  
  408366:	inc    ebx
  408367:	xchg   BYTE PTR [edi+0x10],ah
  40836a:	test   DWORD PTR [eax+0x2c855ff1],edi
  408370:	dec    edi
  408371:	addr16 ds dec edi
  408374:	and    bl,al
  408376:	dec    ecx
  408377:	pop    esi
  408378:	test   al,0x7
  40837a:	rcr    BYTE PTR [ecx],0x72
  40837d:	mov    edx,0x353db0df
  408382:	pop    ds
  408383:	dec    esi
  408384:	sub    ah,BYTE PTR cs:[eax+0x18]
  408388:	lahf   
  408389:	sub    eax,0x9123ef1b
  40838e:	fadd   DWORD PTR [ecx+0x2cdc2948]
  408394:	and    DWORD PTR [eax],edx
  408396:	(bad)  
  408398:	dec    esp
  408399:	arpl   WORD PTR [edx],ax
  40839b:	cli    
  40839c:	sub    bh,BYTE PTR [esi]
  40839e:	in     al,dx
  40839f:	lock out dx,al
  4083a1:	ret    
  4083a2:	sahf   
  4083a3:	mov    ah,0xa0
  4083a5:	fstp   TBYTE PTR [eax]
  4083a7:	mov    al,0x17
  4083a9:	sub    cl,BYTE PTR [edx+esi*4-0x1d7c6339]
  4083b0:	or     BYTE PTR [eax+0x32],bh
  4083b3:	aad    0x27
  4083b5:	ja     0x408410
  4083b7:	sbb    dl,BYTE PTR [edx+0x3a]
  4083ba:	sahf   
  4083bb:	les    esi,FWORD PTR [esi]
  4083bd:	test   BYTE PTR [edx-0x3c],dh
  4083c0:	shl    dh,0x81
  4083c3:	addr16 mov ah,0xee
  4083c6:	in     al,0x7b
  4083c8:	or     cl,BYTE PTR [ecx-0x1fa3d686]
  4083ce:	retf   
  4083cf:	adc    bl,BYTE PTR [eax-0x37]
  4083d2:	loop   0x4083fb
  4083d4:	leave  
  4083d5:	sbb    bh,BYTE PTR [ebp+0x1dfcea0f]
  4083db:	inc    edi
  4083dc:	mov    WORD PTR [edi-0x3],?
  4083df:	dec    edi
  4083e0:	adc    edx,edi
  4083e2:	mov    ebx,0xf40ca957
  4083e7:	pusha  
  4083e8:	sub    DWORD PTR ds:0x8666d894,esi
  4083ee:	sbb    eax,0x6fe527d5
  4083f3:	pop    ecx
  4083f4:	cmp    BYTE PTR [edx+0x44780b13],bh
  4083fa:	out    dx,eax
  4083fb:	jns    0x408390
  4083fd:	cmp    al,0xb9
  4083ff:	pop    es
  408400:	bound  eax,QWORD PTR [ecx+ebp*4+0x176ed237]
  408407:	loope  0x408481
  408409:	cs inc edx
  40840b:	xor    BYTE PTR [ebx-0x46],0xbe
  40840f:	les    esi,FWORD PTR gs:[eax+0x57097fa0]
  408416:	push   edx
  408417:	das    
  408418:	setp   BYTE PTR [ecx+0x52fe5c34]
  40841f:	cmc    
  408420:	mov    dh,0x4f
  408422:	retf   
  408423:	jmp    0xa557:0xb80ec329
  40842a:	das    
  40842b:	(bad)  
  40842c:	mov    al,0x13
  40842e:	(bad)  
  408430:	ret    0x362b
  408433:	out    dx,eax
  408434:	lods   eax,DWORD PTR ds:[esi]
  408435:	jns    0x4084b3
  408437:	xchg   ebx,eax
  408438:	retf   0x46a2
  40843b:	mov    ecx,0x409caf7e
  408440:	add    DWORD PTR gs:[eax],esi
  408443:	div    ch
  408445:	ja     0x408464
  408447:	stos   BYTE PTR es:[edi],al
  408448:	out    0xe5,eax
  40844a:	dec    ebx
  40844b:	inc    ecx
  40844c:	mov    ch,0x41
  40844e:	popf   
  40844f:	(bad)  
  408450:	dec    esp
  408451:	push   cs
  408452:	push   esp
  408453:	shl    bh,cl
  408455:	pop    ebx
  408456:	(bad)  
  408457:	jg     0x40840e
  408459:	das    
  40845a:	xor    al,0xbc
  40845c:	mov    ecx,0x65d5a131
  408461:	imul   ebx,DWORD PTR [ebx+esi*8+0x537c45c6],0x4a47ca2a
  40846c:	(bad)  
  40846d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40846e:	sbb    BYTE PTR [ebx+edx*4+0x2c46f4d6],ch
  408475:	lea    esi,[esi]
  408477:	retf   0xbaa8
  40847a:	(bad)  
  40847b:	in     al,0x33
  40847d:	dec    edx
  40847e:	add    eax,0x4e860299
  408483:	push   edx
  408484:	mov    edx,0x214b567d
  408489:	(bad)  
  40848a:	pop    ebp
  40848b:	mov    dl,0xee
  40848d:	fwait
  40848e:	cmp    DWORD PTR [esi],esp
  408490:	adc    ebx,DWORD PTR [eax+esi*8+0x76bfdb67]
  408497:	fiadd  WORD PTR [ebp+edi*8+0x53d59dc5]
  40849e:	dec    eax
  40849f:	add    ch,0x3a
  4084a2:	mov    WORD PTR [edi-0x205ea8f7],cs
  4084a8:	ds dec esi
  4084aa:	mov    eax,ds:0x91156c58
  4084af:	mov    edx,0xf3d8143f
  4084b4:	xor    BYTE PTR [edx+0x30e9dea0],0x16
  4084bb:	adc    ecx,eax
  4084bd:	push   esi
  4084be:	xchg   ebx,eax
  4084bf:	or     esi,ecx
  4084c1:	dec    edx
  4084c2:	fldcw  WORD PTR [eax-0x3e]
  4084c5:	mov    eax,DWORD PTR ds:0xebcec111
  4084cb:	adc    al,0xb6
  4084cd:	jmp    0xf914:0xbe9c78e4
  4084d4:	test   DWORD PTR [eax-0x4c1c5460],ebp
  4084da:	and    cl,BYTE PTR [eax]
  4084dc:	outs   dx,BYTE PTR ds:[esi]
  4084dd:	iret   
  4084de:	or     BYTE PTR [edi+0x78e7583a],0x92
  4084e5:	bound  esp,QWORD PTR ds:0xb2ba33cb
  4084eb:	sar    BYTE PTR [esi+0x9],cl
  4084ee:	pushf  
  4084ef:	pushf  
  4084f0:	xchg   esp,eax
  4084f1:	push   ebp
  4084f2:	int    0xaf
  4084f4:	mov    edi,0x1c67a538
  4084f9:	inc    ecx
  4084fa:	xchg   edi,eax
  4084fb:	out    dx,al
  4084fc:	mov    BYTE PTR [edx+ebx*1],al
  4084ff:	mov    eax,DWORD PTR [ebp-0x40]
  408502:	mov    edx,DWORD PTR [ebp-0x28]
  408505:	xor    eax,esi
  408507:	xor    edx,esi
  408509:	add    eax,edi
  40850b:	add    edx,edi
  40850d:	imul   eax,edx
  408510:	add    eax,DWORD PTR [ebp-0xc]
  408513:	mov    DWORD PTR [ebp-0xc],eax
  408516:	mov    eax,DWORD PTR [ebp-0xc]
  408519:	mov    edx,DWORD PTR [ebp-0x18]
  40851c:	cmp    edx,eax
  40851e:	jb     0x406080
  408524:	mov    eax,DWORD PTR [ebp-0x28]
  408527:	mov    edx,DWORD PTR [ebp-0x18]
  40852a:	xor    eax,esi
  40852c:	add    eax,edi
  40852e:	imul   eax,edx
  408531:	mov    edx,DWORD PTR [ebp-0x1c]
  408534:	xor    edx,esi
  408536:	add    edx,edi
  408538:	or     eax,edx
  40853a:	mov    edx,DWORD PTR [ebp-0x20]
  40853d:	xor    edx,esi
  40853f:	add    eax,edx
  408541:	mov    edx,DWORD PTR [ebp-0x20]
  408544:	xor    edx,esi
  408546:	add    eax,edx
  408548:	mov    edx,DWORD PTR [ebp-0x10]
  40854b:	lea    eax,[eax+edx*1+0x64e5e6]
  408552:	jmp    0x408566
  408557:	mov    eax,DWORD PTR [ebp-0x20]
  40855a:	mov    edx,DWORD PTR [ebp-0x10]
  40855d:	xor    eax,esi
  40855f:	lea    eax,[eax+edx*1+0x3272f3]
  408566:	mov    DWORD PTR [ebp-0x10],eax
  408569:	jmp    0x403c1c
  40856e:	mov    ebx,DWORD PTR [ebp-0x3c]
  408571:	mov    eax,DWORD PTR [ebp+0xc]
  408574:	xor    eax,esi
  408576:	lea    ecx,[ecx+eax*1+0x3272f3]
  40857d:	lea    eax,[ecx-0x3272f3]
  408583:	xor    eax,esi
  408585:	cmp    eax,0xf89c95a1
  40858a:	jne    0x403bc0
  408590:	dec    DWORD PTR [ebp-0x34]
  408593:	jne    0x403bb4
  408599:	mov    eax,DWORD PTR [ebp+0x8]
  40859c:	mov    ecx,DWORD PTR [ebp+0xc]
  40859f:	mov    edx,DWORD PTR [ebp+0x8]
  4085a2:	xor    ecx,esi
  4085a4:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f3]
  4085ab:	xor    eax,esi
  4085ad:	mov    al,BYTE PTR [eax+ebx*1+0x3272f3]
  4085b4:	xor    edx,esi
  4085b6:	mov    BYTE PTR [edx+ebx*1+0x3272f3],cl
  4085bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4085c0:	xor    ecx,esi
  4085c2:	mov    BYTE PTR [ecx+ebx*1+0x3272f3],al
  4085c9:	mov    eax,DWORD PTR [ebp+0xc]
  4085cc:	xor    eax,esi
  4085ce:	add    eax,edi
  4085d0:	pop    edi
  4085d1:	pop    esi
  4085d2:	pop    ebx
  4085d3:	leave  
  4085d4:	ret    0x8
  4085d7:	xor    eax,eax
  4085d9:	and    DWORD PTR ds:0x4291db,0x42914b
  4085e3:	inc    eax
  4085e4:	ret    
  4085e5:	push   ebp
  4085e6:	mov    ebp,esp
  4085e8:	sub    esp,0x38
  4085eb:	and    DWORD PTR ds:0x429167,0x0
  4085f5:	mov    eax,ds:0x429167
  4085fa:	inc    eax
  4085fb:	mov    ds:0x429167,eax
  408600:	cmp    DWORD PTR ds:0x429167,0x23
  408607:	jle    0x408625
  40860d:	jmp    0x408618
  408612:	call   DWORD PTR ds:0x42a87b
  408618:	cmp    DWORD PTR ds:0x429167,0x1d
  40861f:	jb     0x4085f5
  408625:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40862c:	push   ebx
  40862d:	adc    DWORD PTR ds:0x4291ef,ecx
  408633:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40863a:	sub    DWORD PTR ds:0x429167,0x723d
  408644:	mov    eax,DWORD PTR [ebp-0x4]
  408647:	push   esi
  408648:	mov    esi,0x75108ac
  40864d:	adc    DWORD PTR ds:0x429153,0x4291d3
  408657:	xor    eax,esi
  408659:	push   edi
  40865a:	and    DWORD PTR ds:0x42915f,0x0
  408664:	jmp    0x408676
  408669:	mov    edi,DWORD PTR ds:0x42915f
  40866f:	inc    edi
  408670:	mov    DWORD PTR ds:0x42915f,edi
  408676:	cmp    DWORD PTR ds:0x42915f,0x18
  40867d:	jae    0x4086c6
  408683:	cmp    DWORD PTR ds:0x42915f,0xb
  40868a:	jg     0x4086c6
  408690:	jmp    0x4086a5
  408695:	push   0x4291bf
  40869a:	push   0x428022
  40869f:	call   DWORD PTR ds:0x42a87f
  4086a5:	cmp    DWORD PTR ds:0x42915f,0xa
  4086ac:	jne    0x4086c1
  4086b2:	xor    edi,edi
  4086b4:	or     edi,DWORD PTR ds:0x42915f
  4086ba:	inc    edi
  4086bb:	mov    DWORD PTR ds:0x42915f,edi
  4086c1:	jmp    0x408669
  4086c6:	mov    edi,0x3272f3
  4086cb:	or     DWORD PTR ds:0x429173,0x4291df
  4086d5:	add    eax,edi
  4086d7:	and    DWORD PTR ds:0x4291cb,0x4291b7
  4086e1:	mov    DWORD PTR [ebp-0x1c],eax
  4086e4:	mov    eax,DWORD PTR [ebp+0x14]
  4086e7:	add    DWORD PTR ds:0x42919b,0xffd
  4086f1:	test   eax,eax
  4086f3:	mov    DWORD PTR ds:0x4291c7,0x550e
  4086fd:	je     0x408761
  408703:	mov    DWORD PTR ds:0x4291c3,0x10
  40870d:	cmp    DWORD PTR ds:0x4291c3,0x0
  408714:	je     0x408749
  40871a:	cmp    DWORD PTR ds:0x4291c3,0x1a
  408721:	jle    0x408749
  408727:	jmp    0x408737
  40872c:	push   0x8b39
  408731:	call   DWORD PTR ds:0x42a883
  408737:	mov    ebx,DWORD PTR ds:0x4291c3
  40873d:	dec    ebx
  40873e:	mov    DWORD PTR ds:0x4291c3,ebx
  408744:	jmp    0x40870d
  408749:	mov    eax,DWORD PTR [ebp+0x14]
  40874c:	sbb    DWORD PTR ds:0x4291db,ebx
  408752:	mov    eax,DWORD PTR [eax]
  408754:	add    DWORD PTR ds:0x4291b3,0x4291cf
  40875e:	mov    DWORD PTR [ebp-0x1c],eax
  408761:	mov    eax,DWORD PTR [ebp-0x4]
  408764:	xor    eax,esi
  408766:	xor    DWORD PTR ds:0x429193,edi
  40876c:	add    eax,edi
  40876e:	and    ebx,DWORD PTR ds:0x42918b
  408774:	mov    DWORD PTR [ebp-0x8],eax
  408777:	mov    eax,DWORD PTR [ebp-0xc]
  40877a:	and    ebx,DWORD PTR ds:0x4291f3
  408780:	xor    eax,esi
  408782:	mov    ebx,DWORD PTR ds:0x429167
  408788:	and    ebx,DWORD PTR ds:0x4291b7
  40878e:	mov    DWORD PTR ds:0x429167,ebx
  408794:	add    eax,edi
  408796:	sbb    ebx,0x2c4d
  40879c:	mov    DWORD PTR [ebp-0x24],eax
  40879f:	mov    eax,DWORD PTR [ebp-0x4]
  4087a2:	xor    eax,esi
  4087a4:	mov    ebx,DWORD PTR ds:0x42919b
  4087aa:	or     ebx,DWORD PTR ds:0x429183
  4087b0:	mov    DWORD PTR ds:0x42919b,ebx
  4087b6:	add    eax,edi
  4087b8:	or     DWORD PTR ds:0x4291df,edx
  4087be:	mov    DWORD PTR [ebp-0x30],eax
  4087c1:	or     DWORD PTR ds:0x42914b,0x176b
  4087cb:	mov    ebx,DWORD PTR [ebp-0x4]
  4087ce:	xor    ebx,esi
  4087d0:	mov    eax,ds:0x429173
  4087d5:	xor    eax,DWORD PTR ds:0x42916f
  4087db:	mov    ds:0x429173,eax
  4087e0:	add    ebx,edi
  4087e2:	mov    eax,DWORD PTR [ebp-0x24]
  4087e5:	sub    eax,edi
  4087e7:	sbb    DWORD PTR ds:0x429157,0x4291c7
  4087f1:	lea    ecx,[ebx-0x3272f3]
  4087f7:	xor    eax,esi
  4087f9:	xor    DWORD PTR ds:0x4291bb,0x42917b
  408803:	xor    ecx,esi
  408805:	mov    DWORD PTR ds:0x429153,0x47e0
  40880f:	cmp    ecx,eax
  408811:	mov    DWORD PTR ds:0x429187,0x3279
  40881b:	je     0x40d27b
  408821:	xor    DWORD PTR ds:0x42915b,0x508b
  40882b:	mov    eax,DWORD PTR [ebp-0x4]
  40882e:	sub    DWORD PTR ds:0x42919b,0x58b3
  408838:	xor    eax,esi
  40883a:	adc    DWORD PTR ds:0x429173,0x4291f7
  408844:	add    eax,edi
  408846:	cmp    ebx,eax
  408848:	mov    DWORD PTR ds:0x42915f,0x75e2
  408852:	jne    0x40adc2
  408858:	push   DWORD PTR [ebp+0x8]
  40885b:	call   0x424151
  408860:	mov    DWORD PTR [ebp-0x14],eax
  408863:	not    eax
  408865:	mov    eax,DWORD PTR [ebp-0x4]
  408868:	adc    DWORD PTR ds:0x429153,0x66a3
  408872:	mov    ecx,DWORD PTR [ebp-0x14]
  408875:	add    DWORD PTR ds:0x4291af,0x7712
  40887f:	xor    eax,esi
  408881:	add    eax,edi
  408883:	mov    DWORD PTR ds:0x4291cb,0x7d26
  40888d:	cmp    ecx,eax
  40888f:	mov    DWORD PTR ds:0x42916f,0x6080
  408899:	je     0x40d2e6
  40889f:	push   DWORD PTR [ebp-0x14]
  4088a2:	sbb    DWORD PTR ds:0x4291c3,0x2326
  4088ac:	push   DWORD PTR [ebp+0x8]
  4088af:	call   0x424291
  4088b4:	mov    DWORD PTR [ebp-0x14],eax
  4088b7:	xor    DWORD PTR ds:0x42919f,edx
  4088bd:	mov    eax,DWORD PTR [ebp-0x4]
  4088c0:	xor    DWORD PTR ds:0x42918f,ecx
  4088c6:	mov    ecx,DWORD PTR [ebp-0x14]
  4088c9:	xor    eax,esi
  4088cb:	add    eax,edi
  4088cd:	mov    DWORD PTR ds:0x42917b,0x355b
  4088d7:	cmp    ecx,eax
  4088d9:	mov    DWORD PTR ds:0x429157,0x7399
  4088e3:	je     0x40d2e6
  4088e9:	mov    eax,DWORD PTR [ebp-0x14]
  4088ec:	mov    eax,DWORD PTR [eax+0x18]
  4088ef:	and    DWORD PTR ds:0x4291f3,0x0
  4088f9:	jmp    0x40890b
  4088fe:	mov    ecx,DWORD PTR ds:0x4291f3
  408904:	inc    ecx
  408905:	mov    DWORD PTR ds:0x4291f3,ecx
  40890b:	cmp    DWORD PTR ds:0x4291f3,0x1b
  408912:	jae    0x40895e
  408918:	cmp    DWORD PTR ds:0x4291f3,0xc
  40891f:	ja     0x40895e
  408925:	jmp    0x40893f
  40892a:	push   0x429197
  40892f:	push   0x429187
  408934:	push   0x5f54
  408939:	call   DWORD PTR ds:0x42a88b
  40893f:	cmp    DWORD PTR ds:0x4291f3,0xb
  408946:	jne    0x408959
  40894c:	mov    ecx,DWORD PTR ds:0x4291f3
  408952:	inc    ecx
  408953:	mov    DWORD PTR ds:0x4291f3,ecx
  408959:	jmp    0x4088fe
  40895e:	mov    DWORD PTR [ebp-0x24],eax
  408961:	xor    DWORD PTR ds:0x42916f,ebx
  408967:	mov    eax,DWORD PTR [ebp-0x14]
  40896a:	and    DWORD PTR ds:0x42916b,0x0
  408974:	jmp    0x408986
  408979:	mov    ecx,DWORD PTR ds:0x42916b
  40897f:	inc    ecx
  408980:	mov    DWORD PTR ds:0x42916b,ecx
  408986:	cmp    DWORD PTR ds:0x42916b,0x1c
  40898d:	jae    0x4089b3
  408993:	cmp    DWORD PTR ds:0x42916b,0x2a
  40899a:	jge    0x4089b3
  4089a0:	jmp    0x4089ae
  4089a5:	push   DWORD PTR [ebp-0x14]
  4089a8:	call   DWORD PTR ds:0x42a853
  4089ae:	jmp    0x408979
  4089b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4089b6:	add    ecx,DWORD PTR [eax+0x20]
  4089b9:	sbb    DWORD PTR ds:0x429183,0x7fc6
  4089c3:	mov    DWORD PTR [ebp-0x2c],ecx
  4089c6:	mov    eax,DWORD PTR [ebp-0x14]
  4089c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4089cc:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  4089d6:	add    ecx,DWORD PTR [eax+0x24]
  4089d9:	or     DWORD PTR ds:0x4291ef,0x4291f3
  4089e3:	mov    DWORD PTR [ebp-0x34],ecx
  4089e6:	jmp    0x40ad9a
  4089eb:	push   ecx
  4089ec:	mov    dl,BYTE PTR [ecx+esi*1]
  4089ef:	and    BYTE PTR [ecx+0x58598a50],0x67
  4089f6:	test   BYTE PTR [ebx+ebp*2+0x15c70279],cl
  4089fd:	add    DWORD PTR [ebx-0x7c7ca318],0x71
  408a04:	repz inc ebx
  408a06:	add    bl,BYTE PTR gs:[eax]
  408a09:	int3   
  408a0a:	int    0x22
  408a0c:	pop    edx
  408a0d:	setne  BYTE PTR [ebp-0x2b1cb757]
  408a14:	imul   ecx,esp,0x5f
  408a17:	rcr    eax,1
  408a19:	ja     0x408a16
  408a1b:	rol    BYTE PTR [eax-0x6156b0af],0x65
  408a22:	cmp    DWORD PTR [edi+0x69],0x460277ab
  408a29:	xlat   BYTE PTR ds:[ebx]
  408a2a:	and    eax,0x2bda41b7
  408a2f:	add    BYTE PTR [esp+eax*2+0xb2111b5],0x72
  408a37:	ret    
  408a38:	jne    0x4089e7
  408a3a:	aad    0x4b
  408a3c:	imul   edi,DWORD PTR [eax],0x2b0215a3
  408a42:	mov    dh,0x27
  408a44:	pop    edi
  408a45:	in     al,0x30
  408a47:	jb     0x4089ec
  408a49:	dec    esi
  408a4a:	loop   0x408a48
  408a4c:	pushf  
  408a4d:	cmp    dh,BYTE PTR [ebx+edi*1-0x32422b70]
  408a54:	je     0x408a4c
  408a56:	pop    ds
  408a57:	push   0xffffff9f
  408a59:	pop    esp
  408a5a:	add    eax,0xa2c3c67f
  408a5f:	bnd call 0x71b31749
  408a65:	ds mov eax,0x56b4d870
  408a6b:	ins    DWORD PTR es:[edi],dx
  408a6c:	sub    bl,0x2
  408a6f:	add    eax,0x629630d3
  408a74:	shr    DWORD PTR [ecx-0x3bd68c60],cl
  408a7a:	add    edx,DWORD PTR [esi]
  408a7c:	sbb    cl,BYTE PTR [edx]
  408a7e:	(bad)  [ecx]
  408a80:	into   
  408a81:	jp     0x408a97
  408a83:	jge    0x408a36
  408a85:	dec    esi
  408a86:	ins    DWORD PTR es:[edi],dx
  408a87:	mov    edi,0xef32f240
  408a8c:	mov    ebp,0x32716558
  408a91:	adc    ebx,ebx
  408a93:	mov    BYTE PTR [eax+0x8],cl
  408a96:	inc    ebx
  408a97:	cmp    eax,0x5703040
  408a9c:	sbb    bh,0x8
  408a9f:	xchg   esp,eax
  408aa0:	jo     0x408a91
  408aa2:	lea    esi,cs:[edx+0xc]
  408aa6:	lods   al,BYTE PTR ds:[esi]
  408aa7:	shr    DWORD PTR [edi+0x448da016],0x21
  408aae:	fwait
  408aaf:	aaa    
  408ab0:	add    ch,dh
  408ab2:	jne    0x408a59
  408ab4:	lahf   
  408ab5:	call   0xfc99:0x581cb4ea
  408abc:	retf   0xb6c5
  408abf:	jecxz  0x408ae9
  408ac1:	sahf   
  408ac2:	add    al,0xd5
  408ac4:	or     eax,0x3a29ee7e
  408ac9:	(bad)  gs:[edi-0x40aba76c]
  408ad0:	ror    BYTE PTR [edi+edi*4+0x15],1
  408ad4:	and    BYTE PTR [edx-0x65],cl
  408ad7:	jae    0x408ae2
  408ad9:	(bad)  
  408ada:	adc    ah,BYTE PTR [ebp-0x415bf04]
  408ae0:	or     dh,0xa5
  408ae3:	je     0x408a77
  408ae5:	xor    al,BYTE PTR [ebp-0x3a]
  408ae8:	fs jecxz 0x408a7d
  408aeb:	imul   ebx,DWORD PTR [ebx+0x11994c54],0xffffffc0
  408af2:	cmp    BYTE PTR [ecx],0x22
  408af5:	jb     0x408a99
  408af7:	sahf   
  408af8:	jno    0x408adc
  408afa:	not    DWORD PTR [edi+0x5b]
  408afd:	popf   
  408afe:	or     al,0x41
  408b00:	xor    ecx,ebp
  408b02:	cmp    DWORD PTR [eax],0xbb2906b9
  408b08:	sbb    edi,DWORD PTR [esi]
  408b0a:	adc    ch,cl
  408b0c:	and    eax,0xabfa58fc
  408b11:	push   0xffffffac
  408b13:	outs   dx,BYTE PTR ds:[esi]
  408b14:	or     bl,ah
  408b16:	jp     0x408b1c
  408b18:	and    DWORD PTR [eax-0x13],esp
  408b1b:	aam    0x96
  408b1d:	into   
  408b1e:	mov    esi,0x9eece27d
  408b23:	fsubp  st(3),st
  408b25:	mov    cs,edx
  408b27:	xor    DWORD PTR [esi],edx
  408b29:	jbe    0x408b75
  408b2b:	jo     0x408ace
  408b2d:	scas   al,BYTE PTR es:[edi]
  408b2e:	sbb    al,dh
  408b30:	mov    BYTE PTR [edx+esi*4-0xa],dl
  408b34:	and    BYTE PTR [esi-0x4ee8f50e],cl
  408b3a:	mov    dl,0x91
  408b3c:	or     eax,0xe9df62f3
  408b41:	pop    es
  408b42:	ins    BYTE PTR es:[edi],dx
  408b43:	inc    eax
  408b44:	xchg   ebx,eax
  408b45:	inc    ebx
  408b46:	fiadd  WORD PTR [edx-0x581b62bd]
  408b4c:	sar    BYTE PTR [ebx],1
  408b4e:	jecxz  0x408b3e
  408b50:	sbb    ebx,DWORD PTR [ecx+0x63d172e]
  408b56:	das    
  408b57:	sub    esi,edx
  408b59:	outs   dx,DWORD PTR ds:[esi]
  408b5a:	xchg   ebp,eax
  408b5b:	aam    0x7d
  408b5d:	int    0xd2
  408b5f:	ss push edi
  408b61:	xchg   BYTE PTR [edi],cl
  408b63:	ret    
  408b64:	mov    edx,0xe2c09d2
  408b69:	fist   DWORD PTR [esi+0x2662568b]
  408b6f:	lods   al,BYTE PTR ds:[esi]
  408b70:	cmp    BYTE PTR [eax+0x56],dl
  408b73:	jle    0x408b30
  408b75:	inc    ecx
  408b76:	add    dl,BYTE PTR [edi+edi*2-0x44f6cb1a]
  408b7d:	adc    al,0xdc
  408b7f:	cmp    al,0x7a
  408b81:	and    al,BYTE PTR [eax-0x4778c728]
  408b87:	cld    
  408b88:	inc    ebp
  408b89:	popf   
  408b8a:	jne    0x408b7f
  408b8c:	inc    ebp
  408b8d:	fwait
  408b8e:	mov    bh,0xbd
  408b90:	xchg   edi,eax
  408b91:	dec    ebx
  408b92:	mov    cl,0xfe
  408b94:	imul   BYTE PTR [edx+0x6b0c8c7]
  408b9a:	loopne 0x408c14
  408b9c:	dec    edi
  408b9d:	push   es
  408b9e:	outs   dx,DWORD PTR ds:[esi]
  408b9f:	into   
  408ba0:	jle    0x408c1d
  408ba2:	into   
  408ba3:	adc    esi,0x75
  408ba6:	int3   
  408ba7:	inc    edx
  408ba8:	jb     0x408bdc
  408baa:	jo     0x408c02
  408bac:	jmp    0x408bed
  408bae:	js     0x408bc8
  408bb0:	int3   
  408bb1:	pop    edi
  408bb2:	xchg   BYTE PTR [eax+0x196dad26],bl
  408bb8:	dec    ebp
  408bb9:	xor    eax,0x3f667962
  408bbe:	sbb    cl,BYTE PTR [eax+0x3d]
  408bc1:	inc    ecx
  408bc2:	gs jp  0x408b7f
  408bc5:	pandn  mm2,mm7
  408bc8:	mov    al,0x4f
  408bca:	popf   
  408bcb:	push   es
  408bcc:	pop    esi
  408bcd:	dec    ebp
  408bce:	mov    ebp,DWORD PTR [ebx+0x7dc7976c]
  408bd4:	rep outs dx,BYTE PTR ds:[esi]
  408bd6:	xchg   ecx,eax
  408bd7:	call   0xa04e:0xa3440901
  408bde:	jbe    0x408c46
  408be0:	add    eax,0x1e7c32d0
  408be5:	stos   DWORD PTR es:[edi],eax
  408be6:	leave  
  408be7:	and    BYTE PTR [ebx-0x4],dh
  408bea:	ins    BYTE PTR es:[edi],dx
  408beb:	aam    0x9f
  408bed:	test   DWORD PTR [ecx+0x71c43cb6],edi
  408bf3:	scas   eax,DWORD PTR es:[edi]
  408bf4:	std    
  408bf5:	scas   eax,DWORD PTR es:[edi]
  408bf6:	xor    esi,DWORD PTR [ecx]
  408bf8:	rol    DWORD PTR [edx+0x8ecdcf5],1
  408bfe:	add    esi,DWORD PTR [eax-0x4f0e8435]
  408c04:	jns    0x408be2
  408c06:	or     BYTE PTR [ebp+0x2b],ch
  408c09:	pop    ss
  408c0a:	pop    esp
  408c0b:	jbe    0x408bd5
  408c0d:	(bad)  
  408c0e:	pop    edx
  408c0f:	mul    bh
  408c11:	shl    DWORD PTR [edi],0x70
  408c14:	cld    
  408c15:	push   ss
  408c16:	test   eax,0xc6e4db14
  408c1b:	fist   WORD PTR [esi+esi*1+0x6b9e1755]
  408c22:	jl     0x408baa
  408c24:	test   eax,0x852c78ab
  408c29:	push   edi
  408c2a:	ja     0x408c6d
  408c2c:	popf   
  408c2d:	or     ebp,DWORD PTR [esp+ebx*2+0x29]
  408c31:	dec    ecx
  408c32:	jmp    0x21a4:0xf29d6e5e
  408c39:	test   eax,0x8117b5b4
  408c3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c3f:	and    bl,cl
  408c41:	into   
  408c42:	xchg   edi,eax
  408c43:	mov    ecx,eax
  408c45:	ins    BYTE PTR es:[edi],dx
  408c46:	jge    0x408c2e
  408c48:	loopne 0x408bde
  408c4a:	mov    eax,0x71cb0d1
  408c4f:	sbb    eax,0x848edddd
  408c54:	and    edi,DWORD PTR [edi]
  408c56:	jmp    0x984aa9d6
  408c5b:	dec    dl
  408c5d:	mov    cx,0x1a66
  408c61:	jecxz  0x408c6e
  408c63:	xchg   BYTE PTR [edx-0x5e],dh
  408c66:	sbb    al,0x17
  408c68:	shr    DWORD PTR [edi+0x7a],cl
  408c6b:	clc    
  408c6c:	stos   DWORD PTR es:[edi],eax
  408c6d:	sbb    edi,DWORD PTR [edx]
  408c6f:	xor    edi,DWORD PTR [ebx-0x3c]
  408c72:	adc    BYTE PTR [eax-0x16],bh
  408c75:	mov    ah,BYTE PTR [ecx-0xf]
  408c78:	sub    DWORD PTR [eax-0x3b],eax
  408c7b:	dec    ebx
  408c7c:	xlat   BYTE PTR ds:[ebx]
  408c7d:	aas    
  408c7e:	mov    dh,0xee
  408c80:	enter  0xf368,0xca
  408c84:	xor    al,0x12
  408c86:	xchg   ebp,eax
  408c87:	outs   dx,BYTE PTR ds:[esi]
  408c88:	cwde   
  408c89:	mov    WORD PTR [edx],gs
  408c8b:	leave  
  408c8c:	push   eax
  408c8d:	test   DWORD PTR [ebx-0x4b],ecx
  408c90:	ret    0x5efa
  408c93:	pusha  
  408c94:	in     eax,0xaa
  408c96:	mov    bl,BYTE PTR [edi+0x5544094e]
  408c9c:	push   0xffffffcf
  408c9e:	inc    ebx
  408c9f:	jnp    0x408c9d
  408ca1:	mov    edx,0x195e1c09
  408ca6:	lods   al,BYTE PTR ds:[esi]
  408ca7:	mov    dh,0x12
  408ca9:	dec    eax
  408caa:	mov    ebp,0xe679294f
  408caf:	pop    edi
  408cb0:	shl    DWORD PTR [edx+eax*1],0x6c
  408cb4:	push   es
  408cb5:	jmp    0xe1af83f1
  408cba:	mov    ch,0xbd
  408cbc:	add    dh,BYTE PTR [esi+0x57]
  408cbf:	out    0x81,al
  408cc1:	pop    ecx
  408cc2:	mov    al,0xc7
  408cc4:	push   esp
  408cc5:	ins    DWORD PTR es:[edi],dx
  408cc6:	shl    ebx,cl
  408cc8:	das    
  408cc9:	rcl    DWORD PTR [ebp-0x60],0xbc
  408ccd:	nop
  408cce:	pusha  
  408ccf:	dec    ecx
  408cd0:	pusha  
  408cd1:	jo     0x408d06
  408cd3:	xor    al,0xae
  408cd5:	jbe    0x408c5e
  408cd7:	imul   DWORD PTR [edi+0x51]
  408cda:	mov    esp,0xc03baab9
  408cdf:	out    dx,eax
  408ce0:	das    
  408ce1:	dec    ebp
  408ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ce3:	enter  0x681b,0x38
  408ce7:	in     al,0xb0
  408ce9:	xor    eax,0xed45f19e
  408cee:	adc    eax,0x2bf40c10
  408cf3:	or     eax,0x8a8cc5d5
  408cf8:	fadd   QWORD PTR [edx+0x15bc4b1f]
  408cfe:	push   ecx
  408cff:	nop
  408d00:	in     eax,dx
  408d01:	in     al,0x5f
  408d03:	mov    eax,ds:0xc6795907
  408d08:	push   edi
  408d09:	jmp    DWORD PTR [esi-0x15]
  408d0c:	and    esp,DWORD PTR [ebp+0x54]
  408d0f:	jmp    0x7a29:0x2dd68eca
  408d16:	mov    eax,0x1fa7ad6d
  408d1b:	pop    ebp
  408d1c:	shl    BYTE PTR [eax],1
  408d1e:	cmp    eax,0x5ad45914
  408d23:	les    edi,FWORD PTR [ecx+0x680d8f44]
  408d29:	mov    DWORD PTR [ebx],ebx
  408d2b:	or     DWORD PTR [ebp-0x210760ee],ecx
  408d31:	mov    ah,0x11
  408d33:	inc    edx
  408d34:	ret    0xddc1
  408d37:	mov    cl,0x1
  408d39:	inc    esp
  408d3a:	add    eax,0xfa61facf
  408d3f:	cmc    
  408d40:	(bad)  
  408d41:	repz jbe 0x408cd4
  408d44:	outs   dx,DWORD PTR ds:[esi]
  408d45:	(bad)  
  408d46:	push   edi
  408d47:	pusha  
  408d48:	push   cs
  408d49:	push   ss
  408d4a:	in     eax,dx
  408d4b:	call   0xc33:0xeb254ef
  408d52:	pop    eax
  408d53:	lds    esi,FWORD PTR [ecx+0x44]
  408d56:	jo     0x408dc5
  408d58:	mov    cs,WORD PTR [ebx-0x3e]
  408d5b:	leave  
  408d5c:	jecxz  0x408d37
  408d5e:	cmp    ah,0x8d
  408d61:	data16 cmp al,0x13
  408d64:	push   edi
  408d65:	sar    edi,1
  408d67:	dec    DWORD PTR [ebx+0x6132f3]
  408d6d:	push   ss
  408d6e:	not    DWORD PTR [eax]
  408d70:	rcr    bl,cl
  408d72:	mov    dh,0x9c
  408d74:	ja     0x408d6c
  408d76:	gs jl  0x408d0f
  408d79:	(bad)  
  408d7b:	inc    ecx
  408d7c:	cmp    dh,0xe7
  408d7f:	loop   0x408d68
  408d81:	mov    ecx,0x97aa672c
  408d86:	push   esp
  408d87:	clc    
  408d88:	loop   0x408e08
  408d8a:	jo     0x408dce
  408d8c:	scas   al,BYTE PTR es:[edi]
  408d8d:	xor    BYTE PTR [ebx],bl
  408d8f:	stos   DWORD PTR es:[edi],eax
  408d90:	inc    ecx
  408d91:	js     0x408d5b
  408d93:	test   esp,esi
  408d95:	pop    esp
  408d96:	test   DWORD PTR [eax-0x6b],0xc80b5acd
  408d9d:	shl    DWORD PTR [edi+0x2c],1
  408da0:	inc    esi
  408da1:	pop    ebp
  408da2:	aam    0x7c
  408da4:	std    
  408da5:	lods   al,BYTE PTR ds:[esi]
  408da6:	outs   dx,DWORD PTR ds:[esi]
  408da7:	mov    al,ds:0xad002c53
  408dac:	pop    ebx
  408dad:	leave  
  408dae:	or     ebp,DWORD PTR [edi]
  408db0:	(bad)  
  408db1:	sahf   
  408db2:	mov    ebp,0x3816fb7e
  408db7:	into   
  408db8:	sub    al,0x7
  408dba:	imul   esp,DWORD PTR [di],0x8cf4a83b
  408dc1:	scas   eax,DWORD PTR es:[edi]
  408dc2:	ror    DWORD PTR [ebx],1
  408dc4:	lahf   
  408dc5:	(bad)
  408dc8:	repz je 0x408d85
  408dcb:	jo     0x408e49
  408dcd:	call   0xc8e521b7
  408dd2:	and    dh,0xe4
  408dd5:	xchg   ebp,eax
  408dd6:	adc    eax,0x26b4fe8e
  408ddb:	rcl    DWORD PTR [edi],1
  408ddd:	in     eax,0xdf
  408ddf:	cmp    edx,edx
  408de1:	iret   
  408de2:	dec    eax
  408de3:	dec    ecx
  408de4:	sbb    DWORD PTR [edx],0xffffff9e
  408de7:	fwait
  408de8:	cli    
  408de9:	sbb    edi,esi
  408deb:	mov    ebp,0x8b7d3ef2
  408df0:	push   cs
  408df1:	retf   
  408df2:	mov    esi,0x5a393f96
  408df7:	or     eax,0x9b2f1a10
  408dfc:	push   ebx
  408dfd:	call   DWORD PTR [edx+0x2c3db17d]
  408e03:	cmp    al,0x93
  408e05:	add    esi,DWORD PTR [edi-0x550cdd0e]
  408e0b:	retf   
  408e0c:	push   edx
  408e0d:	cmp    BYTE PTR [eax-0x1a4aa6cb],dl
  408e13:	addr16 pop ds
  408e15:	bound  edi,QWORD PTR [ebx+ebp*1+0x38]
  408e19:	jle    0x408e88
  408e1b:	data16 cmp bl,bl
  408e1e:	nop
  408e1f:	pusha  
  408e20:	pop    ebx
  408e21:	xchg   esi,eax
  408e22:	call   0xbd8b:0xbb529772
  408e29:	mov    eax,0x18c7eecd
  408e2e:	fnstenv [edi+0x50]
  408e31:	add    DWORD PTR [esi],edx
  408e33:	add    eax,eax
  408e35:	xor    eax,0x564a5332
  408e3a:	sahf   
  408e3b:	inc    DWORD PTR [edi+0x69101a90]
  408e41:	adc    DWORD PTR [eax-0x3b],esi
  408e44:	pop    ds
  408e45:	mov    ecx,esi
  408e47:	enter  0x6c14,0x51
  408e4b:	scas   al,BYTE PTR es:[edi]
  408e4c:	xchg   esp,eax
  408e4d:	and    DWORD PTR [ebx+edi*1],0xffffffb2
  408e51:	data16 xchg BYTE PTR [ecx+ebp*8-0x41f8b4eb],bl
  408e59:	and    dl,BYTE PTR ds:0x450cd629
  408e5f:	mov    bh,0x2e
  408e61:	pop    esi
  408e62:	pop    esp
  408e63:	sbb    BYTE PTR [ebp-0x1d],cl
  408e66:	retf   
  408e67:	inc    esp
  408e68:	jmp    0xbea1677d
  408e6d:	mul    dh
  408e6f:	mov    dl,0xb2
  408e71:	sub    ecx,DWORD PTR [ecx-0x7d]
  408e74:	in     al,0x33
  408e76:	mov    eax,ds:0xc65172d1
  408e7b:	push   esi
  408e7c:	das    
  408e7d:	mov    dh,BYTE PTR [ebp-0x52]
  408e80:	sbb    BYTE PTR [ebp-0xfc1fd4b],ch
  408e86:	lahf   
  408e87:	sar    BYTE PTR [esi],cl
  408e89:	xor    edx,DWORD PTR [esp+ecx*8-0x7]
  408e8d:	mov    BYTE PTR [edx],dh
  408e8f:	add    DWORD PTR [ecx+0x69],esp
  408e92:	test   al,0x6a
  408e94:	mov    edi,0x54754835
  408e99:	pusha  
  408e9a:	mov    ch,0xc7
  408e9c:	sbb    BYTE PTR [bp+di+0x5f],0x8c
  408ea1:	data16 and BYTE PTR [ebx-0x54],dl
  408ea5:	cmp    DWORD PTR [ebx+0x2a],ebp
  408ea8:	or     al,0xa5
  408eaa:	mov    bh,0x8c
  408eac:	(bad)  
  408ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eae:	jmp    0x4972cb2d
  408eb3:	sti    
  408eb4:	imul   esi,DWORD PTR [edx],0xf4590405
  408eba:	lods   eax,DWORD PTR ds:[esi]
  408ebb:	ds push esp
  408ebd:	push   edi
  408ebe:	test   eax,0xd9f47b9a
  408ec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ec4:	outs   dx,BYTE PTR ds:[esi]
  408ec5:	xchg   edx,eax
  408ec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ec7:	ror    BYTE PTR [ecx-0x52805f6],1
  408ecd:	push   0xfffffffc
  408ecf:	dec    cl
  408ed1:	mov    DWORD PTR [ebx+0x3c9212ba],edi
  408ed7:	dec    ebp
  408ed8:	inc    esp
  408ed9:	hlt    
  408eda:	jge    0x408f1a
  408edc:	loop   0x408f0b
  408ede:	mov    al,ds:0x6d5680e2
  408ee3:	in     eax,dx
  408ee4:	xchg   ebp,eax
  408ee5:	mov    ebx,0xfb0767ca
  408eea:	in     al,dx
  408eeb:	aaa    
  408eec:	pop    esi
  408eed:	mov    ss,WORD PTR cs:[ebx+0x39]
  408ef1:	xchg   ebx,eax
  408ef2:	fs sahf 
  408ef4:	pop    ss
  408ef5:	sbb    BYTE PTR [ecx],0x45
  408ef8:	and    edi,DWORD PTR [ecx+ebp*8-0x6753b4dc]
  408eff:	mov    ebp,ebp
  408f01:	mov    ebp,0xda531bee
  408f06:	push   ds
  408f07:	mov    esi,0x14bdf6fd
  408f0c:	call   0xf460:0xc2696792
  408f13:	xor    al,0x5d
  408f15:	adc    esp,DWORD PTR [esi-0x6d836b6]
  408f1b:	repnz lds ebx,FWORD PTR [edi-0x4f7c9868]
  408f22:	outs   dx,BYTE PTR ds:[esi]
  408f23:	dec    ebp
  408f24:	or     BYTE PTR ds:0x79d5bd2a,bl
  408f2a:	and    BYTE PTR [edi-0x5864876],ch
  408f30:	dec    esi
  408f31:	fwait
  408f32:	(bad)  
  408f33:	int3   
  408f34:	rcl    ebx,cl
  408f36:	sub    bl,ah
  408f38:	repnz sub eax,0xf4da7f7a
  408f3e:	mov    ecx,DWORD PTR [ebp-0x549eec2f]
  408f44:	mov    dl,0x84
  408f46:	in     eax,0xf6
  408f48:	repnz push es
  408f4a:	imul   ecx,DWORD PTR [ebx-0x23],0x2b
  408f4e:	adc    DWORD PTR [esi+0x1169a7e1],0x8881571
  408f58:	jge    0x408f34
  408f5a:	sub    edi,edi
  408f5c:	lods   eax,DWORD PTR ds:[esi]
  408f5d:	std    
  408f5e:	xor    eax,0x16b8a6c0
  408f63:	out    0x72,eax
  408f65:	dec    esi
  408f66:	jmp    0x6392:0xcee02503
  408f6d:	xchg   ebx,eax
  408f6e:	repz jge 0x408efa
  408f71:	xchg   esi,eax
  408f72:	sbb    BYTE PTR [ebx-0x38419ac8],0x11
  408f79:	pop    ecx
  408f7a:	push   edx
  408f7b:	lods   al,BYTE PTR ds:[esi]
  408f7c:	in     al,0x86
  408f7e:	clc    
  408f7f:	add    BYTE PTR [esi-0x2d],dl
  408f82:	mov    ch,BYTE PTR [edi]
  408f84:	mov    esi,0x542e4f32
  408f89:	ja     0x408fbb
  408f8b:	push   edx
  408f8c:	pop    ds
  408f8d:	inc    eax
  408f8e:	xchg   ebp,eax
  408f8f:	cmp    al,BYTE PTR [edx-0x74]
  408f92:	outs   dx,DWORD PTR ds:[esi]
  408f93:	scas   eax,DWORD PTR es:[edi]
  408f94:	rol    DWORD PTR [eax],cl
  408f96:	push   eax
  408f97:	test   BYTE PTR [eax+0x149693da],al
  408f9d:	dec    BYTE PTR [esi+0x6137d312]
  408fa3:	into   
  408fa4:	loopne 0x408fc8
  408fa6:	pushf  
  408fa7:	mov    esp,0xf1d64062
  408fac:	inc    esp
  408fad:	bound  eax,QWORD PTR [ebp-0x52]
  408fb0:	sub    ch,dh
  408fb2:	cmp    eax,0x339a626e
  408fb7:	nop
  408fb8:	and    eax,0x2a317586
  408fbd:	ds jnp 0x408fd3
  408fc0:	xchg   ebp,eax
  408fc1:	pop    edx
  408fc2:	adc    esp,DWORD PTR [esi-0x3db01e3d]
  408fc8:	ins    DWORD PTR es:[edi],dx
  408fc9:	neg    DWORD PTR [ebp+0x1060e6f]
  408fcf:	lods   eax,DWORD PTR ds:[esi]
  408fd0:	jo     0x40900b
  408fd2:	push   ds
  408fd3:	ret    
  408fd4:	addr16 jmp 0xd6d3cfbf
  408fda:	push   edi
  408fdc:	push   0xffffffed
  408fde:	hlt    
  408fdf:	push   ecx
  408fe0:	pushf  
  408fe1:	jge    0x409026
  408fe3:	dec    ecx
  408fe4:	ins    DWORD PTR es:[edi],dx
  408fe5:	pop    ecx
  408fe6:	sub    BYTE PTR [esi],cl
  408fe8:	outs   dx,BYTE PTR ds:[esi]
  408fe9:	bound  ebp,QWORD PTR [edi+0x15f11384]
  408fef:	loope  0x408fe8
  408ff1:	mov    ecx,0x44529889
  408ff6:	out    dx,al
  408ff7:	sub    eax,0x85a14f59
  408ffc:	(bad)  
  408ffe:	shl    ecx,0x3c
  409001:	jne    0x40903c
  409003:	pop    eax
  409004:	cli    
  409005:	xchg   ecx,eax
  409006:	bound  esp,QWORD PTR [esi-0x228c030f]
  40900c:	pushf  
  40900d:	push   es
  40900e:	sub    eax,DWORD PTR [edi+0x27]
  409011:	sahf   
  409012:	lahf   
  409013:	cdq    
  409014:	dec    ebp
  409015:	mov    al,0xb4
  409017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409018:	inc    ecx
  409019:	test   DWORD PTR [ebx+0x5c92cc10],esp
  40901f:	sub    al,0x5
  409021:	test   DWORD PTR [edi-0x272bdda9],eax
  409027:	retf   
  409028:	stos   DWORD PTR es:[edi],eax
  409029:	sbb    ebx,ebx
  40902b:	cdq    
  40902c:	addr16 call 0x1b5df13b
  409032:	add    al,0x16
  409034:	xchg   BYTE PTR [eax+0x18],bl
  409037:	cwde   
  409038:	push   ecx
  409039:	test   esp,0xc981c4fb
  40903f:	mov    dh,BYTE PTR [edi]
  409041:	sbb    eax,0x34603f88
  409046:	mov    edi,0x9721db6e
  40904b:	lea    ebp,[eax-0x47]
  40904e:	enter  0x54bd,0xbd
  409052:	lds    ebx,FWORD PTR [edi]
  409054:	mov    dl,0x98
  409056:	xchg   BYTE PTR [edi-0x29fa3aee],ah
  40905c:	jmp    0xed10118a
  409061:	sub    al,0x9c
  409063:	shl    DWORD PTR [ecx],0xf1
  409066:	sub    bl,BYTE PTR [edi-0x3b]
  409069:	imul   edi,DWORD PTR [esi],0xffffff97
  40906c:	jne    0x40909e
  40906e:	fwait
  40906f:	stc    
  409070:	adc    esi,DWORD PTR [esi+0x6d]
  409073:	sbb    dl,BYTE PTR [eax+0x7ddb5e2f]
  409079:	pusha  
  40907a:	pop    ecx
  40907b:	fdiv   st(7),st
  40907d:	inc    edi
  40907e:	jecxz  0x40906e
  409080:	clc    
  409081:	inc    edi
  409082:	fnstenv [edi+0x50]
  409085:	inc    ecx
  409086:	in     eax,0x22
  409088:	dec    ebx
  409089:	lea    ebx,cs:[edi+edx*1+0x40]
  40908e:	in     al,dx
  40908f:	cld    
  409090:	inc    esi
  409091:	je     0x409091
  409093:	inc    esi
  409094:	dec    ebp
  409095:	out    0x78,eax
  409097:	mov    WORD PTR fs:[esi+0x211889f6],es
  40909e:	je     0x40911a
  4090a0:	mul    BYTE PTR [edi-0x3e8706d]
  4090a6:	fldenv fs:[edx+ecx*2]
  4090aa:	push   esp
  4090ab:	jmp    0x40905d
  4090ad:	sti    
  4090ae:	repz sub eax,0x4f58aee3
  4090b4:	fiadd  DWORD PTR [edi+0x61e5f333]
  4090ba:	dec    ecx
  4090bb:	adc    ebp,esi
  4090bd:	jbe    0x4090a0
  4090bf:	cmp    bh,al
  4090c1:	or     BYTE PTR [ecx+ecx*2-0x47],dl
  4090c5:	out    dx,eax
  4090c6:	cs ja  0x4090e2
  4090c9:	inc    eax
  4090ca:	xchg   esp,eax
  4090cb:	add    ah,BYTE PTR [ebx-0x3f]
  4090ce:	ins    BYTE PTR es:[edi],dx
  4090cf:	lea    eax,[ecx+0x10dbeffb]
  4090d5:	iret   
  4090d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090d7:	dec    edi
  4090d8:	mov    esi,DWORD PTR [eax]
  4090da:	fidiv  WORD PTR [edx]
  4090dc:	lea    edi,[eax+edi*2-0x65b75e1a]
  4090e3:	mov    DWORD PTR cs:[esi+edi*2-0x50270e96],edi
  4090eb:	or     ebx,DWORD PTR [edx]
  4090ed:	push   edx
  4090ee:	lahf   
  4090ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090f0:	push   ecx
  4090f1:	pop    es
  4090f2:	aaa    
  4090f3:	fsub   QWORD PTR [eax-0x48eadeee]
  4090f9:	int    0xc4
  4090fb:	lahf   
  4090fc:	or     edi,DWORD PTR [eax-0x78bbe76b]
  409102:	mov    eax,0x441d8f3
  409107:	xor    ecx,DWORD PTR [ebx+0x6a]
  40910a:	xchg   esi,eax
  40910b:	int3   
  40910c:	dec    ebx
  40910d:	and    al,0x81
  40910f:	jne    0x40914d
  409111:	ss (bad) 
  409113:	shl    BYTE PTR [eax-0x63],cl
  409116:	jl     0x40909b
  409118:	sbb    ecx,ecx
  40911a:	adc    DWORD PTR [eax+ebx*4-0x41301124],esi
  409121:	(bad)  
  409123:	jo     0x4091a1
  409125:	pop    ebx
  409126:	lods   eax,DWORD PTR ds:[esi]
  409127:	inc    eax
  409128:	call   0xa7438d71
  40912d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40912e:	(bad)  
  40912f:	and    dl,al
  409131:	jecxz  0x40916e
  409133:	sub    ah,BYTE PTR [ebp-0x380a5a47]
  409139:	in     eax,dx
  40913a:	and    DWORD PTR [eax+edx*4],esp
  40913d:	ins    BYTE PTR es:[edi],dx
  40913e:	stos   DWORD PTR es:[edi],eax
  40913f:	fs pop eax
  409141:	dec    edx
  409142:	mov    ds:0x63e91a9b,eax
  409147:	inc    ebp
  409148:	adc    ah,cl
  40914a:	sbb    ch,BYTE PTR [esi+eiz*8+0x380dda83]
  409151:	je     0x409199
  409153:	jmp    0x606b:0x6f97a96
  40915a:	push   esi
  40915b:	stos   BYTE PTR es:[edi],al
  40915c:	fst    DWORD PTR [eax+0x5c3adb80]
  409162:	or     DWORD PTR es:[esi-0x7b],ebx
  409166:	loopne 0x4091ca
  409168:	or     dh,BYTE PTR [edi]
  40916a:	js     0x409159
  40916c:	sbb    BYTE PTR [esi-0x9],ch
  40916f:	not    DWORD PTR [edx-0x1bf493dc]
  409175:	sbb    al,ch
  409177:	das    
  409178:	retf   0xe60b
  40917b:	jp     0x4091b5
  40917d:	push   es
  40917e:	daa    
  40917f:	mov    al,ds:0x27dd1947
  409184:	jb     0x4091aa
  409186:	push   0xffffff9e
  409188:	jno    0x4091f3
  40918a:	mov    bl,BYTE PTR [ebp+0x75]
  40918d:	dec    esp
  40918e:	(bad)  
  40918f:	jmp    0x53da6e6f
  409194:	std    
  409195:	sbb    al,dl
  409197:	out    0xc3,eax
  409199:	mov    ah,dh
  40919b:	adc    esp,ecx
  40919d:	fstp   QWORD PTR [ecx]
  40919f:	xor    esi,0xbc5a3fea
  4091a5:	add    ebx,DWORD PTR [esi+0x7ff95691]
  4091ab:	rcr    DWORD PTR [ebx+0x4c],cl
  4091ae:	aas    
  4091af:	jmp    0x55e2:0x1fa19620
  4091b6:	pop    esp
  4091b7:	in     eax,0xe3
  4091b9:	jmp    0x40922b
  4091bb:	sbb    BYTE PTR [eax+0x70],cl
  4091be:	and    BYTE PTR [ebx],dl
  4091c0:	dec    BYTE PTR [ebx+0x6e]
  4091c3:	push   es
  4091c4:	jmp    0x40af:0x1cb5fa35
  4091cb:	inc    ebp
  4091cc:	adc    esi,DWORD PTR [edi-0x7038cbdd]
  4091d2:	pop    ss
  4091d3:	test   ch,ch
  4091d5:	mov    ebx,0x34668821
  4091da:	adc    DWORD PTR [esi+0xd],ecx
  4091dd:	cld    
  4091de:	hlt    
  4091df:	(bad)  
  4091e0:	ins    BYTE PTR es:[edi],dx
  4091e1:	jecxz  0x409261
  4091e3:	mov    esi,0x2c235dab
  4091e8:	push   eax
  4091e9:	in     eax,dx
  4091ea:	loopne 0x409219
  4091ec:	mov    ah,BYTE PTR ds:0x42b64751
  4091f2:	or     DWORD PTR [esi-0x52],esp
  4091f5:	mov    esp,0x1072acbb
  4091fa:	fisttp DWORD PTR [ebx]
  4091fc:	cmp    DWORD PTR [eax],edx
  4091fe:	mov    dh,0x9a
  409200:	xchg   BYTE PTR [esi-0x7c8e1d76],dh
  409206:	lods   al,BYTE PTR ds:[esi]
  409207:	mov    edi,eax
  409209:	dec    esp
  40920a:	outs   dx,DWORD PTR ds:[esi]
  40920b:	enter  0x55d4,0x43
  40920f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409210:	pop    edx
  409211:	sbb    bl,bl
  409213:	stos   DWORD PTR es:[edi],eax
  409214:	mov    ch,0x23
  409216:	mov    al,bl
  409218:	das    
  409219:	pop    edx
  40921a:	mov    ecx,0x8fa0acef
  40921f:	stos   BYTE PTR es:[edi],al
  409220:	clc    
  409221:	je     0x4091f0
  409223:	imul   edx,edx,0x4a
  409226:	lods   eax,DWORD PTR ds:[esi]
  409227:	(bad)  
  409228:	hlt    
  409229:	stos   DWORD PTR es:[edi],eax
  40922a:	xor    eax,0x6ddebc5b
  40922f:	dec    ebp
  409230:	mov    dh,dh
  409232:	loop   0x40927d
  409234:	ds inc esi
  409236:	xor    bh,cl
  409238:	or     eax,DWORD PTR [eax]
  40923a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40923b:	inc    esp
  40923c:	cs pop ss
  40923e:	loopne 0x4092a1
  409240:	sub    cl,BYTE PTR [edi+0x5bdd1149]
  409246:	pop    esi
  409247:	push   esp
  409248:	scas   eax,DWORD PTR es:[edi]
  409249:	int3   
  40924a:	or     eax,0x87abd041
  40924f:	sbb    al,0xfa
  409251:	and    ch,BYTE PTR [eax]
  409253:	hlt    
  409254:	sbb    al,0x4a
  409256:	inc    edx
  409257:	push   esp
  409258:	add    eax,0xcae330cf
  40925d:	pop    ebx
  40925e:	xor    DWORD PTR [ebp+0x2d],ecx
  409261:	sub    bl,BYTE PTR [eax-0x5f]
  409264:	lods   al,BYTE PTR ds:[esi]
  409265:	mov    cl,0x60
  409267:	lahf   
  409268:	hlt    
  409269:	pop    ds
  40926a:	sahf   
  40926b:	test   BYTE PTR [ebx],bl
  40926d:	les    ebp,FWORD PTR [ebp+0x600d6af4]
  409273:	dec    ebp
  409274:	int    0x8b
  409276:	imul   esi,DWORD PTR [edx],0x42fd479
  40927c:	xchg   ebp,eax
  40927d:	push   ebp
  40927e:	xor    al,0xc7
  409280:	leave  
  409281:	in     eax,dx
  409282:	mul    DWORD PTR fs:[esi+eiz*1]
  409286:	jb     0x40928d
  409288:	loope  0x4092f7
  40928a:	inc    esi
  40928b:	retf   
  40928c:	add    DWORD PTR [ecx-0x7852ff1f],ecx
  409292:	sub    DWORD PTR [ebx+0x74134224],eax
  409298:	inc    ebp
  409299:	pop    es
  40929a:	aaa    
  40929b:	pop    ebp
  40929c:	stos   DWORD PTR es:[edi],eax
  40929d:	mov    edx,DWORD PTR [ebx-0x73c1acf5]
  4092a3:	inc    esi
  4092a4:	shl    dl,cl
  4092a6:	adc    bh,BYTE PTR [ebx+0x5b08e337]
  4092ac:	hlt    
  4092ad:	sub    eax,0xf4b32723
  4092b2:	lods   al,BYTE PTR ds:[esi]
  4092b4:	mov    esp,0x689af516
  4092b9:	xchg   edi,eax
  4092ba:	jno    0x40924b
  4092bc:	and    eax,0x30e168e3
  4092c1:	aad    0xfe
  4092c3:	sbb    eax,0xaf6ed329
  4092c8:	jb     0x40929b
  4092ca:	ret    
  4092cb:	je     0x409251
  4092cd:	clc    
  4092ce:	ins    DWORD PTR es:[edi],dx
  4092cf:	mov    eax,edi
  4092d1:	icebp  
  4092d2:	mov    fs,ebp
  4092d4:	fs in  eax,dx
  4092d6:	jnp    0x409325
  4092d8:	fidivr WORD PTR [ecx+0x4c]
  4092db:	push   esp
  4092dc:	dec    esi
  4092dd:	int3   
  4092de:	sbb    eax,ebx
  4092e0:	jne    0x4092bf
  4092e2:	xchg   ebp,eax
  4092e3:	mov    al,ds:0xc44ee7a6
  4092e8:	xchg   esp,eax
  4092e9:	push   0xd5824d87
  4092ee:	inc    esi
  4092ef:	stos   DWORD PTR es:[edi],eax
  4092f0:	push   cs
  4092f1:	mov    ah,0x44
  4092f3:	mov    esp,0x349495d0
  4092f8:	pop    ecx
  4092f9:	lea    ecx,[eax-0xb]
  4092fc:	das    
  4092fd:	cmp    eax,0x7d536eb1
  409302:	push   ebx
  409303:	data16 sbb BYTE PTR [ecx-0xb2c054a],ah
  40930a:	mov    al,BYTE PTR [edx-0x39fe274f]
  409310:	arpl   WORD PTR [edi],dx
  409312:	mov    dh,0x86
  409314:	mov    ebx,0xf8333b54
  409319:	or     edi,0x3576ca5
  40931f:	cmp    al,bh
  409321:	pop    ecx
  409322:	or     BYTE PTR [ebx+0xc8eb875],dl
  409328:	not    al
  40932a:	add    ah,dl
  40932c:	call   0x4896:0x8ce5eb90
  409333:	push   ss
  409334:	jl     0x4093a8
  409336:	ja     0x4093a6
  409338:	inc    edi
  409339:	stos   DWORD PTR es:[edi],eax
  40933a:	ins    BYTE PTR es:[edi],dx
  40933b:	adc    BYTE PTR [esi+0x1b0959ae],al
  409341:	mov    DWORD PTR [esi-0x110d5d8a],esp
  409347:	xchg   ebp,eax
  409348:	inc    edx
  409349:	popa   
  40934a:	fadd   DWORD PTR [esi+ebx*8]
  40934d:	fist   DWORD PTR [edi+0x1b0412b0]
  409353:	es and al,0x70
  409356:	mov    WORD PTR [edx-0x2e08c623],fs
  40935c:	mov    ebp,0x308d2807
  409361:	sbb    eax,0x4e06224d
  409366:	and    al,BYTE PTR [esi]
  409368:	sbb    al,0xb7
  40936a:	sub    eax,0x32504f6
  40936f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409370:	stos   DWORD PTR es:[edi],eax
  409371:	sbb    al,0xe8
  409373:	scas   al,BYTE PTR es:[edi]
  409374:	aam    0x2b
  409376:	rcl    esi,cl
  409378:	ret    0x915d
  40937b:	xchg   DWORD PTR es:[eax+eax*8],ebp
  40937f:	jmp    0x4093e8
  409381:	sbb    bl,ah
  409383:	lock push ecx
  409385:	cs mov dh,0x2e
  409388:	vpmacssdql ymm4,ymm0,ymm0,YMMWORD PTR [eax+0x73]
  40938f:	gs out 0x55,al
  409392:	ja     0x409343
  409394:	das    
  409395:	inc    esp
  409396:	enter  0x1526,0x25
  40939a:	outs   dx,BYTE PTR gs:[esi]
  40939c:	test   DWORD PTR [edx*2+0x23bb026b],esi
  4093a3:	xor    dl,dl
  4093a5:	lods   eax,DWORD PTR ds:[esi]
  4093a6:	dec    ebx
  4093a7:	fldlg2 
  4093a9:	pushf  
  4093aa:	push   0xffffff9d
  4093ac:	jmp    0x798:0xec7981d4
  4093b3:	xchg   BYTE PTR [ebx+eax*2+0xc],dl
  4093b7:	pop    esp
  4093b8:	and    DWORD PTR [edi-0x47],eax
  4093bb:	scas   eax,DWORD PTR es:[edi]
  4093bc:	retf   0xb4b7
  4093bf:	leave  
  4093c0:	mov    ds:0xbb488498,al
  4093c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093c6:	inc    esp
  4093c7:	fcomp  DWORD PTR [ecx-0x749fa242]
  4093cd:	nop
  4093ce:	jne    0x40942d
  4093d0:	inc    edi
  4093d1:	ret    
  4093d2:	inc    edx
  4093d3:	add    eax,0xccadcc1d
  4093d8:	out    dx,al
  4093d9:	dec    esi
  4093da:	or     al,0x55
  4093dc:	ja     0x40938e
  4093de:	test   BYTE PTR [edi+0x34],0x6e
  4093e2:	ret    0xc9c7
  4093e5:	leave  
  4093e6:	ficomp DWORD PTR [edx]
  4093e8:	push   ebx
  4093e9:	mov    edi,0xc44c7d11
  4093ee:	ins    DWORD PTR es:[edi],dx
  4093ef:	mov    dh,0x7f
  4093f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093f2:	out    dx,al
  4093f3:	jl     0x4093e2
  4093f5:	or     esi,eax
  4093f7:	ins    DWORD PTR es:[edi],dx
  4093f8:	fucomip st,st(6)
  4093fa:	adc    al,0x31
  4093fc:	imul   BYTE PTR [esi]
  4093fe:	lahf   
  4093ff:	icebp  
  409400:	lods   eax,DWORD PTR ds:[esi]
  409401:	mov    al,ds:0xc1038de7
  409406:	lock and al,0x79
  409409:	js     0x409471
  40940b:	jmp    0x72f6:0xc947aa2c
  409412:	mov    edx,0x9c84dcb3
  409417:	push   esp
  409418:	imul   esi,DWORD PTR [ebx+0x34],0xffffffa8
  40941c:	clc    
  40941d:	pop    es
  40941e:	scas   al,BYTE PTR es:[di]
  409420:	sbb    ebp,esi
  409422:	ret    
  409423:	lods   al,BYTE PTR cs:[esi]
  409425:	fcomp  st(3)
  409427:	mov    bh,0x1a
  409429:	jl     0x409408
  40942b:	lods   eax,DWORD PTR ds:[esi]
  40942c:	cs pop ss
  40942e:	mov    bl,0x1d
  409430:	ror    BYTE PTR [ebp+0x40],cl
  409433:	mov    bl,0x61
  409435:	mov    al,ds:0x55b9dacb
  40943a:	jns    0x409438
  40943c:	push   0x21
  40943e:	ds push esi
  409440:	(bad)
  409443:	scas   eax,DWORD PTR es:[edi]
  409444:	cmp    dh,BYTE PTR [edx]
  409446:	sub    eax,DWORD PTR [ebp+eax*4+0x37]
  40944a:	or     eax,0x745bc4c5
  40944f:	ds xchg ecx,eax
  409451:	pop    ebx
  409452:	clc    
  409453:	imul   esp,DWORD PTR [eax-0x64],0x8
  409457:	callw  0x8d35
  40945b:	lods   al,BYTE PTR ds:[esi]
  40945c:	inc    BYTE PTR [eax+edi*1-0x35]
  409460:	adc    eax,0xe3dc0027
  409465:	scas   al,BYTE PTR es:[edi]
  409466:	push   eax
  409467:	jecxz  0x40946f
  409469:	pop    esi
  40946a:	xor    DWORD PTR [ecx],ecx
  40946c:	sub    DWORD PTR [eax-0x554392f4],esp
  409472:	add    al,0x97
  409474:	jae    0x4094cd
  409476:	arpl   si,bx
  409478:	cmp    esp,DWORD PTR [edi]
  40947a:	mov    esp,0x2913ddc
  40947f:	lods   eax,DWORD PTR ds:[esi]
  409480:	mov    ds:0xf7b58fb6,eax
  409485:	mov    ebp,0x3c09455d
  40948a:	mov    ds:0xb61c7544,al
  40948f:	pop    es
  409490:	cmp    BYTE PTR [ecx+0x7df24874],al
  409496:	js     0x40944c
  409498:	pusha  
  409499:	ret    0x1b19
  40949c:	test   eax,0x85379961
  4094a1:	mov    al,ds:0x63298440
  4094a6:	xor    BYTE PTR [ebp-0x16],bl
  4094a9:	jp     0x4094d4
  4094ab:	test   BYTE PTR [edx-0x3d],ah
  4094ae:	scas   eax,DWORD PTR es:[edi]
  4094af:	mov    ecx,0xdbdf1640
  4094b4:	nop
  4094b5:	ja     0x4094c1
  4094b7:	and    ebx,ebx
  4094b9:	pop    edi
  4094ba:	scas   eax,DWORD PTR es:[edi]
  4094bb:	mov    ch,bl
  4094bd:	test   eax,0x9459f7e6
  4094c2:	lods   eax,DWORD PTR ds:[esi]
  4094c3:	ins    BYTE PTR es:[edi],dx
  4094c4:	push   ebp
  4094c5:	pop    eax
  4094c6:	dec    edx
  4094c7:	pushf  
  4094c8:	push   0x7450a503
  4094cd:	and    BYTE PTR [ecx],bl
  4094cf:	loope  0x409500
  4094d1:	jae    0x4094ed
  4094d3:	or     ch,dh
  4094d5:	gs inc ebx
  4094d7:	retf   0xba61
  4094da:	fcomp  QWORD PTR [edx-0x24]
  4094dd:	mov    ah,0xf9
  4094df:	adc    DWORD PTR [ebx-0x3b88dff8],esi
  4094e5:	cmc    
  4094e6:	das    
  4094e7:	inc    ebp
  4094e8:	add    eax,DWORD PTR [ebx+0x4e3b2c08]
  4094ee:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4094f0:	cli    
  4094f1:	or     BYTE PTR [edi+eax*8+0xcbbc041],ah
  4094f8:	jecxz  0x409512
  4094fa:	or     al,0xd
  4094fc:	sbb    edi,eax
  4094fe:	jno    0x4094db
  409500:	cmp    eax,0xd3f5757f
  409505:	sbb    edx,DWORD PTR [esi-0x33]
  409508:	aaa    
  409509:	addr16 out dx,al
  40950b:	fmul   DWORD PTR [edx+0x33]
  40950e:	das    
  40950f:	clc    
  409510:	xchg   ebp,eax
  409511:	call   0xb856a977
  409516:	jl     0x40956c
  409518:	jne    0x409549
  40951a:	clc    
  40951b:	mov    esp,0xc953a941
  409520:	mov    dh,0xda
  409522:	xor    bh,BYTE PTR [ebx]
  409524:	mov    BYTE PTR [edi+ebp*2-0x1],dh
  409528:	les    eax,FWORD PTR [edi+eiz*1-0x182a382e]
  40952f:	push   ss
  409530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409531:	out    dx,eax
  409532:	sub    al,0x4f
  409534:	pop    ecx
  409535:	(bad)  [ecx-0x60adee9f]
  40953b:	add    BYTE PTR [ebx],bh
  40953d:	(bad)
  409540:	mov    edx,DWORD PTR [eax+0x5b]
  409543:	dec    esi
  409544:	pop    edi
  409545:	mov    ebx,0xae114eb0
  40954a:	retf   0x5a5f
  40954d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40954e:	lods   al,BYTE PTR ds:[esi]
  40954f:	pop    ss
  409550:	inc    esi
  409551:	fwait
  409552:	sahf   
  409553:	pop    ebp
  409554:	xchg   cl,bl
  409556:	mov    ecx,0x90330600
  40955b:	dec    ebp
  40955c:	daa    
  40955d:	(bad)  
  40955f:	adc    eax,0xe3ee950a
  409564:	jae    0x40957d
  409566:	jg     0x40953d
  409568:	fbld   TBYTE PTR [ebx+0x69f6f492]
  40956e:	push   ss
  40956f:	xchg   esi,eax
  409570:	imul   eax,DWORD PTR ds:0x1f77abf1,0x59327ff1
  40957a:	and    esi,DWORD PTR [ebp+0x1]
  40957d:	cs inc edi
  40957f:	cmp    eax,0xa3841352
  409584:	mov    al,ds:0xdcf7db6b
  409589:	push   ss
  40958a:	cli    
  40958b:	mov    edi,0x1ffcb84e
  409590:	int3   
  409591:	inc    edx
  409592:	inc    ecx
  409593:	in     al,dx
  409594:	ss mov bl,0xd9
  409597:	jl     0x4095bd
  409599:	pop    ss
  40959a:	push   0xffffffce
  40959c:	jnp    0x4095c5
  40959e:	xchg   BYTE PTR ds:0xc0f54c5e,dh
  4095a4:	mov    esp,0x689ceca6
  4095a9:	or     eax,DWORD PTR [ebp+0x7c63624f]
  4095af:	imul   edi,DWORD PTR [ebx-0x2f3430bd],0x66
  4095b6:	dec    ebp
  4095b7:	or     al,0x9a
  4095b9:	xor    BYTE PTR [esi],al
  4095bb:	adc    DWORD PTR [edi+0x7b3edb64],ebx
  4095c1:	je     0x409578
  4095c3:	dec    edi
  4095c4:	ins    DWORD PTR es:[edi],dx
  4095c5:	gs cs mov ecx,0xe920630e
  4095cc:	ins    DWORD PTR es:[edi],dx
  4095cd:	repnz sub BYTE PTR [ebx+ecx*8-0x47349f96],dl
  4095d5:	jp     0x409602
  4095d7:	jmp    0x678ecfe0
  4095dc:	jns    0x40960d
  4095de:	ds push ebp
  4095e0:	jg     0x409641
  4095e2:	pop    esp
  4095e3:	xor    al,0x4c
  4095e5:	fstp   QWORD PTR [ebp+0x6b]
  4095e8:	cs into 
  4095ea:	push   0x20c42132
  4095ef:	cmp    BYTE PTR [ebx+0x36],bh
  4095f2:	xor    bh,BYTE PTR [esi]
  4095f4:	repz jns 0x4095e9
  4095f7:	rol    DWORD PTR [edx+0x5f],cl
  4095fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095fb:	repz and DWORD PTR [ecx-0x7d221817],0xffffff9b
  409603:	pop    ss
  409604:	fist   DWORD PTR [edi+0x4818f614]
  40960a:	jne    0x4095fd
  40960c:	xor    bl,BYTE PTR [esi]
  40960e:	add    BYTE PTR [edi+eiz*8+0x56],bl
  409612:	shl    BYTE PTR [ebx],cl
  409614:	jmp    FWORD PTR [edx]
  409616:	js     0x4095b2
  409618:	loopne 0x4095cd
  40961a:	push   ecx
  40961b:	scas   al,BYTE PTR es:[edi]
  40961c:	ss xchg esi,eax
  40961e:	inc    esp
  40961f:	or     BYTE PTR ds:0xbde3f9cb,bl
  409625:	jnp    0x40961a
  409627:	in     eax,0x63
  409629:	pushf  
  40962a:	cdq    
  40962b:	mov    al,0xbe
  40962d:	aad    0x54
  40962f:	hlt    
  409630:	sbb    eax,0x46971ecf
  409635:	retf   0x2699
  409638:	ins    BYTE PTR es:[edi],dx
  409639:	stc    
  40963a:	outs   dx,DWORD PTR ds:[esi]
  40963b:	clc    
  40963c:	mov    ds:0x3eed2941,eax
  409641:	call   DWORD PTR [edi]
  409643:	call   0x881:0x8125dba4
  40964a:	mov    eax,0xdebd6bb4
  40964f:	(bad)  
  409650:	retf   0x1298
  409653:	ins    BYTE PTR es:[edi],dx
  409654:	cld    
  409655:	bswap  ecx
  409657:	push   edi
  409658:	stc    
  409659:	int3   
  40965a:	or     dl,cl
  40965c:	inc    eax
  40965d:	mov    ah,0x9a
  40965f:	xchg   edx,eax
  409660:	xchg   cl,cl
  409662:	push   edx
  409663:	mov    dl,0x54
  409665:	jnp    0x40964d
  409667:	leave  
  409668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409669:	add    BYTE PTR [edi+0x7dd32acc],bh
  40966f:	lock fsub DWORD PTR [edi+0x2b705747]
  409676:	jns    0x409666
  409678:	xor    BYTE PTR [eax+0x56404016],ah
  40967e:	pop    ds
  40967f:	ds or  bh,0xa6
  409683:	outs   dx,DWORD PTR ds:[esi]
  409684:	jmp    0x4096c2
  409686:	outs   dx,BYTE PTR ds:[esi]
  409687:	fistp  DWORD PTR [ecx-0x53]
  40968a:	nop
  40968b:	rcr    DWORD PTR [edi+0x29],1
  40968e:	adc    al,0x8f
  409690:	clc    
  409691:	sti    
  409692:	scas   al,BYTE PTR es:[edi]
  409693:	sub    eax,DWORD PTR [eax+0x44]
  409696:	sub    DWORD PTR [bp+si],edx
  409699:	add    al,0xb4
  40969b:	jns    0x40962a
  40969d:	mov    edx,0x51d8bd22
  4096a2:	lds    esp,FWORD PTR [eax-0x50e367bc]
  4096a8:	leave  
  4096a9:	inc    ebx
  4096aa:	pop    eax
  4096ab:	push   esi
  4096ac:	lock and BYTE PTR [ebp+0x338161b0],dh
  4096b3:	cli    
  4096b4:	(bad)  
  4096b5:	bound  eax,QWORD PTR [ecx+0x18]
  4096b8:	out    0xa0,eax
  4096ba:	popf   
  4096bb:	push   ebp
  4096bc:	jmp    0x409704
  4096be:	push   ebx
  4096bf:	adc    DWORD PTR [ecx],ecx
  4096c1:	push   ecx
  4096c2:	dec    esi
  4096c3:	mov    dl,0x8d
  4096c5:	dec    edx
  4096c6:	mov    ecx,0x620f98e2
  4096cb:	and    ecx,DWORD PTR [esi]
  4096cd:	add    ebx,DWORD PTR [ebx+0x65]
  4096d0:	rcr    bh,0x9f
  4096d3:	or     DWORD PTR ds:[edi+edx*1-0x6b],edx
  4096d8:	mov    bl,0xc0
  4096da:	xor    eax,0xe776f951
  4096df:	sbb    al,0xdc
  4096e1:	addr16 jo 0x409666
  4096e4:	push   cs
  4096e5:	sub    ebp,ebx
  4096e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096e8:	mov    ds:0x6cb10309,al
  4096ed:	xchg   edx,eax
  4096ee:	ins    DWORD PTR es:[edi],dx
  4096ef:	and    ah,BYTE PTR [edi+0x28b7b928]
  4096f5:	mov    bh,0x53
  4096f7:	or     BYTE PTR [edx],0x3f
  4096fa:	ds jb  0x409737
  4096fd:	jg     0x40968d
  4096ff:	dec    edx
  409700:	pop    esi
  409701:	call   0xaee4:0xb5d9ab17
  409708:	pop    esp
  409709:	rol    DWORD PTR [ecx],0xef
  40970c:	rol    BYTE PTR [ebp+esi*4-0x25149fec],cl
  409713:	sbb    BYTE PTR [ebx+0x35],ah
  409716:	shl    BYTE PTR [eax+esi*2],cl
  409719:	push   edi
  40971a:	dec    esp
  40971b:	adc    al,0x1a
  40971d:	mov    WORD PTR [edi-0x1d],cs
  409720:	adc    dl,BYTE PTR [ebx+0x5e]
  409723:	lds    edi,FWORD PTR cs:[esi+0xa148335]
  40972a:	js     0x409747
  40972c:	mov    edi,0xa9919b96
  409731:	or     ebp,DWORD PTR [edx-0x5110832c]
  409737:	xchg   ecx,eax
  409738:	inc    ebp
  409739:	rcl    ecx,0xa
  40973c:	cmp    bl,BYTE PTR [eax-0x38]
  40973f:	adc    eax,0x3c6ae793
  409744:	push   edx
  409745:	sub    eax,0x7b5f5fbd
  40974a:	mov    esp,0x6378785f
  40974f:	cmp    eax,0xa3d8c8d0
  409754:	sbb    DWORD PTR [ebx-0x7f],ebx
  409757:	call   0x42449788
  40975c:	test   al,0x1c
  40975e:	pop    esi
  40975f:	jno    0x4097d0
  409761:	push   ss
  409762:	mov    ecx,0xe8384f69
  409767:	push   0xa11f99b5
  40976c:	and    BYTE PTR [edx+0x7b],bl
  40976f:	mov    dl,BYTE PTR [ecx+0x6]
  409772:	(bad)  
  409774:	mov    ebp,0x750abdc1
  409779:	fidiv  DWORD PTR [esi+0x5d]
  40977c:	push   ecx
  40977d:	cmp    DWORD PTR [eax+0x7ba2a940],ebp
  409783:	mov    eax,ds:0x6b8c5f01
  409788:	lods   al,BYTE PTR ds:[esi]
  409789:	push   esp
  40978a:	mov    ah,0x97
  40978c:	jo     0x409749
  40978e:	push   ss
  40978f:	stos   DWORD PTR es:[edi],eax
  409790:	sub    DWORD PTR [eax],0x1f
  409793:	push   ebx
  409794:	sar    BYTE PTR [ecx+0x5e7175d4],1
  40979a:	jmp    0xc64832f6
  40979f:	and    bl,BYTE PTR [esi+0x46282896]
  4097a5:	daa    
  4097a6:	jbe    0x4097bf
  4097a8:	shl    BYTE PTR [edi+0x26],1
  4097ab:	mul    DWORD PTR [ebx+0x78f11d93]
  4097b1:	add    edi,edx
  4097b3:	(bad)  
  4097b5:	mov    cl,0x94
  4097b7:	xor    ch,BYTE PTR [edi]
  4097b9:	mov    esp,0xb863b3a1
  4097be:	pushf  
  4097bf:	ds mov ch,0x17
  4097c2:	ss jbe 0x40976f
  4097c5:	gs jge 0x4097a7
  4097c8:	popf   
  4097c9:	jmp    0x4097e5
  4097cb:	xor    DWORD PTR [ecx+0x5688ff9b],0x1f
  4097d2:	int    0x9a
  4097d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097d5:	and    al,0x45
  4097d7:	add    dl,0x27
  4097da:	jge    0x4097ba
  4097dc:	xor    al,0xe8
  4097de:	fstp   DWORD PTR [ecx+0x2e9871c4]
  4097e4:	call   0x5999:0x3dcf2645
  4097eb:	push   cs
  4097ec:	mov    ch,0xf4
  4097ee:	sbb    esp,DWORD PTR [bx+di]
  4097f1:	sub    al,0x7f
  4097f3:	mov    dh,0x6c
  4097f5:	cwde   
  4097f6:	adc    bl,BYTE PTR [ebx]
  4097f8:	sub    DWORD PTR [ebp-0x31],esp
  4097fb:	fld    DWORD PTR [ebx]
  4097fd:	sbb    ecx,eax
  4097ff:	bound  eax,QWORD PTR [esi+0x7f]
  409802:	(bad)  
  409803:	retf   0x82e1
  409806:	or     BYTE PTR [eax],bl
  409808:	pop    ecx
  409809:	fnsave [esp+ebp*8]
  40980c:	fwait
  40980d:	jp     0x409876
  40980f:	inc    edx
  409810:	and    eax,0x27097875
  409815:	rol    edi,cl
  409817:	and    esi,DWORD PTR [edx]
  409819:	ja     0x40981c
  40981b:	add    al,0xc4
  40981d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40981e:	fldcw  WORD PTR [ebp+ebp*2+0xf693b70]
  409825:	lds    edx,FWORD PTR [edx+edi*2]
  409828:	push   esp
  409829:	sbb    DWORD PTR [ecx+0x39],edx
  40982c:	mov    bl,BYTE PTR [ebx-0x391c9cf2]
  409832:	xor    eax,0xf4d48c4
  409837:	push   es
  409838:	sub    dl,BYTE PTR [ebp-0x1b]
  40983b:	cmc    
  40983c:	pop    eax
  40983d:	jo     0x4097e2
  40983f:	arpl   WORD PTR [ecx+edi*8+0x7b8874ca],cx
  409846:	push   ss
  409847:	gs mov ah,0xd6
  40984a:	mov    dl,0x7b
  40984c:	or     dh,ah
  40984e:	lahf   
  40984f:	ins    DWORD PTR es:[edi],dx
  409850:	call   0xc444:0x19e01ac
  409857:	(bad)  
  409858:	aas    
  409859:	or     esi,DWORD PTR [edi+0x6a]
  40985c:	or     BYTE PTR [ebx],ah
  40985e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40985f:	mov    eax,0x51bcb0be
  409864:	mov    ch,0xe9
  409866:	add    eax,0x31154e08
  40986b:	mov    ds:0x3087b1d2,al
  409870:	pop    esp
  409871:	mov    edx,0x265c0858
  409876:	mov    al,BYTE PTR [esi-0x26]
  409879:	fs rcl esp,cl
  40987c:	pop    esp
  40987d:	je     0x4098a1
  40987f:	mov    ebp,DWORD PTR [ebp-0x528d67f4]
  409885:	call   0xd605:0xe12d6df7
  40988c:	out    dx,eax
  40988d:	jl     0x409861
  40988f:	add    eax,0x1e5237fa
  409894:	adc    BYTE PTR [ebx+0x11],ch
  409897:	inc    edx
  409898:	jecxz  0x409893
  40989a:	add    DWORD PTR [edx-0x666bf1f7],edi
  4098a0:	dec    eax
  4098a1:	cmp    BYTE PTR [ebx-0x15ca3557],dl
  4098a7:	push   ecx
  4098a8:	(bad)  
  4098a9:	(bad)  [edi]
  4098ab:	cdq    
  4098ac:	outs   dx,DWORD PTR ds:[esi]
  4098ad:	pushf  
  4098ae:	sub    edi,edi
  4098b0:	jmp    0x9ebf:0x995031dd
  4098b7:	call   0x7007:0x5a42d642
  4098be:	mov    bh,0x4c
  4098c0:	adc    al,0x21
  4098c2:	sub    dl,dl
  4098c4:	stos   DWORD PTR es:[edi],eax
  4098c5:	inc    esp
  4098c6:	push   ecx
  4098c7:	mov    edx,DWORD PTR [ebp-0x686ebf91]
  4098cd:	fmul   QWORD PTR [edi]
  4098cf:	test   BYTE PTR fs:[edx+0x5f7070a8],dl
  4098d6:	add    al,0xc4
  4098d8:	imul   BYTE PTR [esi+ecx*4]
  4098db:	pop    ebx
  4098dc:	repnz les esp,FWORD PTR [edx]
  4098df:	loopne 0x4098c3
  4098e1:	ret    0xaad2
  4098e4:	into   
  4098e5:	dec    BYTE PTR [edx-0x4313e21b]
  4098eb:	xchg   esp,eax
  4098ec:	sub    ebp,esi
  4098ee:	pop    ecx
  4098ef:	stos   DWORD PTR es:[edi],eax
  4098f0:	je     0x4098ce
  4098f2:	out    0x9,eax
  4098f4:	in     al,dx
  4098f5:	sub    dl,ah
  4098f7:	mov    ds:0xa1ba7458,eax
  4098fc:	(bad)  
  4098fd:	jnp    0x4098ed
  4098ff:	sti    
  409900:	call   0x5614aa97
  409905:	adc    ebx,ebx
  409907:	sbb    DWORD PTR [ecx-0x6d],edx
  40990a:	push   cs
  40990b:	les    eax,FWORD PTR [edi-0x4005d922]
  409911:	adc    bl,bl
  409913:	(bad)  
  409914:	or     eax,0xa4582618
  409919:	retf   0xf403
  40991c:	mov    ebp,0x59c43911
  409921:	pop    ebp
  409922:	adc    BYTE PTR [ecx+eiz*2],dh
  409925:	push   ebx
  409926:	add    BYTE PTR [edx+0x573a7dff],ch
  40992c:	js     0x40992d
  40992e:	loope  0x4098e1
  409930:	clc    
  409931:	push   eax
  409932:	in     eax,dx
  409933:	push   cs
  409934:	rcr    BYTE PTR gs:[ecx],0xac
  409938:	pop    edx
  409939:	lahf   
  40993a:	xchg   ebx,eax
  40993b:	and    dh,BYTE PTR ds:0x90779ddb
  409941:	adc    DWORD PTR [edi-0x13],esi
  409944:	test   eax,0x92ea306d
  409949:	outs   dx,DWORD PTR ds:[esi]
  40994a:	and    BYTE PTR [ebp+0x44],cl
  40994d:	stc    
  40994e:	add    eax,0x5072abe7
  409953:	retf   0x6ee6
  409956:	push   es
  409957:	adc    BYTE PTR [esi-0x6c],al
  40995a:	inc    edx
  40995b:	dec    ebp
  40995c:	and    edx,DWORD PTR [edi+0x11]
  40995f:	out    dx,eax
  409960:	cwde   
  409961:	cs jg  0x40995a
  409964:	fsubr  QWORD PTR [eax+0x0]
  409967:	xor    eax,0x4dd90695
  40996c:	push   ss
  40996d:	outs   dx,DWORD PTR ds:[esi]
  40996e:	inc    ebp
  40996f:	imul   edx,ebp,0xa47e679
  409975:	mov    ds:0x50c5b0df,eax
  40997a:	neg    BYTE PTR [edi-0x348caad7]
  409980:	lahf   
  409981:	jo     0x409997
  409983:	repz jo 0x4099f6
  409986:	mov    al,ds:0xbefb6301
  40998b:	xor    ah,BYTE PTR [eax]
  40998d:	jbe    0x4099b2
  40998f:	pop    eax
  409990:	imul   ebx,DWORD PTR [ecx-0x1788166b],0xa5154783
  40999a:	call   0x7511c028
  40999f:	lds    esi,FWORD PTR [ebp-0x1]
  4099a2:	fdiv   QWORD PTR [eax-0x5a]
  4099a5:	or     ecx,DWORD PTR [edx-0x6f1361cd]
  4099ab:	or     edx,DWORD PTR [ecx+ebx*4-0x40830dd]
  4099b2:	jmp    0x4099d1
  4099b4:	jl     0x40998b
  4099b6:	ror    BYTE PTR [ebx],1
  4099b8:	push   ebx
  4099b9:	jge    0x409a16
  4099bb:	leave  
  4099bc:	fld    QWORD PTR [esi]
  4099be:	ret    
  4099bf:	jmp    0xa317:0x3ba4
  4099c5:	xchg   edx,eax
  4099c6:	dec    esi
  4099c7:	lods   al,BYTE PTR ds:[esi]
  4099c8:	xchg   ecx,eax
  4099c9:	jae    0x409a13
  4099cb:	add    DWORD PTR [eax+0x0],ecx
  4099ce:	xchg   DWORD PTR [eax],esp
  4099d0:	(bad)
  4099d3:	lahf   
  4099d4:	push   0xf1724cdc
  4099d9:	ins    BYTE PTR es:[edi],dx
  4099da:	xchg   BYTE PTR [esi+ecx*4-0x5f],dh
  4099de:	loop   0x409a54
  4099e0:	jno    0x4099d7
  4099e2:	adc    eax,0x11003f9a
  4099e7:	jecxz  0x409a4a
  4099e9:	jg     0x40996d
  4099eb:	mov    eax,ds:0xd0412a61
  4099f0:	jb     0x409a00
  4099f2:	adc    esi,DWORD PTR [esi+0x19]
  4099f5:	mov    BYTE PTR [edx],al
  4099f7:	inc    eax
  4099f8:	retf   0xe4d6
  4099fb:	pop    eax
  4099fc:	and    dl,BYTE PTR [ecx-0xe]
  4099ff:	stos   DWORD PTR es:[edi],eax
  409a00:	stc    
  409a01:	jnp    0x4099ce
  409a03:	or     BYTE PTR [ebx],cl
  409a05:	popf   
  409a06:	test   DWORD PTR fs:[edi],eax
  409a09:	sahf   
  409a0a:	(bad)  [esi-0x44ad994d]
  409a10:	int    0x5b
  409a12:	mov    bh,0xa9
  409a14:	jno    0x4099d4
  409a16:	mov    ecx,0xadf9a482
  409a1b:	aaa    
  409a1c:	push   0xffffffbe
  409a1e:	inc    ecx
  409a1f:	lahf   
  409a20:	cwde   
  409a21:	in     al,dx
  409a22:	sbb    eax,0x1b770aa
  409a27:	ins    BYTE PTR es:[edi],dx
  409a28:	sub    edi,0xffffffbc
  409a2b:	(bad)  
  409a2c:	call   DWORD PTR [edx+0x20]
  409a2f:	lea    ebx,[edi-0x142f5b63]
  409a35:	xchg   ebp,eax
  409a36:	jbe    0x409a90
  409a38:	inc    ebx
  409a39:	je     0x409a61
  409a3b:	pop    ecx
  409a3c:	push   0x4f
  409a3e:	leave  
  409a3f:	jp     0x409ab7
  409a41:	xor    ebp,DWORD PTR [esp+ebp*2-0x6292798d]
  409a48:	mov    ds:0xb2f60f44,eax
  409a4d:	test   bl,al
  409a4f:	dec    eax
  409a50:	xor    eax,0xad0fefc0
  409a55:	sbb    al,dl
  409a57:	push   ds
  409a58:	jmp    0x97a7b25e
  409a5d:	push   ebp
  409a5e:	jne    0x409a71
  409a60:	out    dx,eax
  409a61:	xchg   DWORD PTR [esi*1+0x29ff23ab],edi
  409a68:	in     eax,0x5e
  409a6a:	xchg   esp,eax
  409a6b:	in     al,dx
  409a6c:	pop    ss
  409a6d:	loope  0x409a84
  409a6f:	sbb    ecx,DWORD PTR [ecx+0xa551b0a]
  409a75:	mov    dl,0x4e
  409a77:	aaa    
  409a78:	pop    edi
  409a79:	(bad)  
  409a7a:	fwait
  409a7b:	lock test al,0x6d
  409a7e:	call   0xeac:0xf5ce192
  409a85:	add    al,0x30
  409a87:	or     BYTE PTR [ebp+edi*1+0x2c2194b9],0x8f
  409a8f:	mov    BYTE PTR [eax+0x25],al
  409a92:	ins    DWORD PTR es:[edi],dx
  409a93:	(bad)  
  409a94:	(bad)
  409a98:	push   0x2d
  409a9a:	cmp    eax,0xce6e41e8
  409a9f:	ins    BYTE PTR es:[edi],dx
  409aa0:	xchg   esi,eax
  409aa1:	pop    DWORD PTR [ecx]
  409aa3:	inc    ebp
  409aa4:	dec    esi
  409aa5:	jnp    0x409b1b
  409aa7:	jecxz  0x409af8
  409aa9:	call   0x2e76:0xcc525945
  409ab0:	mov    WORD PTR [ebx],cs
  409ab2:	ins    BYTE PTR es:[edi],dx
  409ab3:	jg     0x409a3c
  409ab5:	mov    DWORD PTR ds:0xde62747e,ecx
  409abb:	nop
  409abc:	popf   
  409abd:	aad    0xc8
  409abf:	push   ss
  409ac0:	scas   al,BYTE PTR es:[edi]
  409ac1:	sub    al,0xf
  409ac3:	(bad)  
  409ac4:	lahf   
  409ac5:	cmp    al,0x14
  409ac7:	ror    BYTE PTR [ecx+0x312f6e73],1
  409acd:	dec    edi
  409ace:	add    al,0x97
  409ad0:	inc    ecx
  409ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ad2:	dec    edx
  409ad3:	js     0x409acc
  409ad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ad6:	imul   edx,DWORD PTR [ebp+0x2b14f901],0x22
  409add:	push   ss
  409ade:	pop    ss
  409adf:	scas   eax,DWORD PTR es:[edi]
  409ae0:	inc    ecx
  409ae1:	fcomp  QWORD PTR [eax]
  409ae3:	nop
  409ae4:	in     al,0xf7
  409ae6:	call   0xbab:0x445b4589
  409aed:	(bad)  
  409aef:	sub    esp,eax
  409af1:	hlt    
  409af2:	inc    edi
  409af3:	mov    ah,0x2
  409af5:	pop    ebx
  409af6:	cmp    bh,BYTE PTR [ebx]
  409af8:	aas    
  409af9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409afa:	xchg   DWORD PTR [ebx-0x50],edx
  409afd:	loope  0x409ad5
  409aff:	aaa    
  409b00:	out    0xf7,eax
  409b02:	int3   
  409b03:	xor    BYTE PTR [esi+0x33],0xc6
  409b07:	icebp  
  409b08:	(bad)  [edx-0x15791b63]
  409b0e:	sti    
  409b0f:	pop    ebx
  409b10:	fadd   DWORD PTR [eax-0x4f9a8012]
  409b16:	test   BYTE PTR [edi-0xb],bh
  409b19:	scas   eax,DWORD PTR es:[edi]
  409b1a:	inc    ebp
  409b1b:	mov    ecx,eax
  409b1d:	in     eax,0x59
  409b1f:	cmp    ch,cl
  409b21:	rcr    BYTE PTR [esi-0x698b6f56],0x68
  409b28:	xchg   edx,edi
  409b2a:	test   DWORD PTR [ebp+0x500a040e],edx
  409b30:	add    eax,DWORD PTR ds:0x34d5ceba
  409b36:	imul   ebp,DWORD PTR [esi],0x1c
  409b39:	cdq    
  409b3a:	pop    ecx
  409b3b:	mov    cl,0x6b
  409b3d:	jns    0x409bbd
  409b3f:	mov    bl,0x95
  409b41:	inc    edi
  409b42:	adc    al,0xfd
  409b44:	(bad)  
  409b45:	bound  ebp,QWORD PTR ds:[edi+ebx*4+0x68080db6]
  409b4d:	and    bh,ah
  409b4f:	xchg   edi,eax
  409b50:	adc    al,BYTE PTR [esi-0x47]
  409b53:	out    dx,al
  409b54:	inc    edi
  409b55:	popa   
  409b56:	adc    ecx,ecx
  409b58:	mov    DWORD PTR [esi+0x5d17114b],edi
  409b5e:	(bad)  
  409b5f:	xchg   edx,eax
  409b60:	xchg   esp,eax
  409b61:	(bad)  
  409b63:	in     eax,0xb4
  409b65:	stos   DWORD PTR es:[edi],eax
  409b66:	ins    DWORD PTR es:[edi],dx
  409b67:	(bad)  
  409b68:	push   es
  409b69:	fs push ss
  409b6b:	arpl   WORD PTR [ecx+ecx*1+0x5f],dx
  409b6f:	out    0x1e,al
  409b71:	gs pop edi
  409b73:	jge    0x409b3c
  409b75:	adc    BYTE PTR [esi],0xe
  409b78:	xchg   esp,eax
  409b79:	cs jg  0x409bb8
  409b7c:	xchg   esp,eax
  409b7d:	or     DWORD PTR [edi],0xc1a3f1c1
  409b83:	(bad)  
  409b85:	and    edi,edi
  409b87:	stos   BYTE PTR es:[edi],al
  409b88:	(bad)  
  409b89:	fs sahf 
  409b8b:	or     DWORD PTR [eax+0x5d],ecx
  409b8e:	or     edi,DWORD PTR [eax]
  409b90:	js     0x409b7b
  409b92:	retf   
  409b93:	loope  0x409b61
  409b95:	fidiv  WORD PTR [edi+edi*8+0x6c5ed079]
  409b9c:	inc    ecx
  409b9d:	pop    ss
  409b9e:	mov    edx,0xbbf10e0e
  409ba3:	lahf   
  409ba4:	test   eax,0xe07b0d88
  409ba9:	arpl   cx,bp
  409bab:	daa    
  409bac:	add    DWORD PTR [ebp+0x4e1879f9],esi
  409bb2:	imul   esi,edx,0xffffffa3
  409bb5:	icebp  
  409bb6:	sbb    eax,0x8cb95017
  409bbb:	adc    DWORD PTR [eax+0x62431b48],0x5e
  409bc2:	and    bh,BYTE PTR [esi+0x4d]
  409bc5:	loopne 0x409be4
  409bc7:	cs nop
  409bc9:	dec    eax
  409bca:	adc    DWORD PTR [esi-0x7442a86e],edi
  409bd0:	adc    dh,cl
  409bd2:	adc    DWORD PTR [eax+0x60],edi
  409bd5:	sbb    DWORD PTR [ecx-0x67],ebx
  409bd8:	push   edi
  409bd9:	mov    eax,0x4fd51e03
  409bde:	call   0x6128b432
  409be3:	daa    
  409be4:	xor    DWORD PTR [ebx-0x33],edx
  409be7:	lock mov ds:0xbe8bc27e,eax
  409bee:	sub    al,cl
  409bf0:	fs push es
  409bf2:	ds mov dl,0x93
  409bf5:	or     al,0x21
  409bf7:	ret    0xb6ac
  409bfa:	xchg   esp,eax
  409bfb:	mov    ebp,ebp
  409bfd:	sub    al,0x12
  409bff:	or     eax,0xa9252e44
  409c04:	xchg   BYTE PTR [edx+eax*2],dh
  409c07:	inc    ebx
  409c08:	pop    ss
  409c09:	and    al,BYTE PTR [edi-0x78]
  409c0c:	mov    ecx,0x3785536a
  409c11:	fwait
  409c12:	push   edx
  409c13:	rcl    BYTE PTR [edi+0x55d337d8],0x6a
  409c1a:	sub    DWORD PTR [ecx],eax
  409c1c:	xchg   edx,eax
  409c1d:	xchg   ebp,eax
  409c1e:	not    esi
  409c20:	jge    0x409bf4
  409c22:	(bad)  
  409c23:	mov    edi,0xad846bfd
  409c28:	nop
  409c29:	jne    0x409c74
  409c2b:	dec    esi
  409c2c:	lods   eax,DWORD PTR ds:[esi]
  409c2d:	fs stos BYTE PTR es:[edi],al
  409c2f:	js     0x409bc5
  409c31:	ins    BYTE PTR es:[edi],dx
  409c32:	xchg   edi,eax
  409c33:	ss xor al,0x5d
  409c36:	mov    BYTE PTR [ecx-0x1b],al
  409c39:	loop   0x409c0f
  409c3b:	jo     0x409bfa
  409c3d:	cmc    
  409c3e:	pop    ss
  409c3f:	out    dx,al
  409c40:	push   ss
  409c41:	ret    0x9a57
  409c44:	and    dl,BYTE PTR [eax]
  409c46:	sbb    edi,edx
  409c48:	lods   al,BYTE PTR ds:[esi]
  409c49:	shl    edi,0xc
  409c4c:	dec    esp
  409c4d:	ja     0x409c7c
  409c4f:	sar    BYTE PTR [edi],1
  409c51:	loope  0x409c9c
  409c53:	out    dx,al
  409c54:	aaa    
  409c55:	aam    0xb4
  409c57:	test   DWORD PTR [ebp-0x5d602e7b],edi
  409c5d:	mov    edi,0xa0b84f18
  409c62:	nop
  409c63:	repz cmp al,BYTE PTR [eax]
  409c66:	dec    ebx
  409c67:	out    dx,eax
  409c68:	ds mov bh,0x6e
  409c6b:	sub    al,cl
  409c6d:	mov    edi,0xd7b55aa6
  409c72:	scas   eax,DWORD PTR es:[edi]
  409c73:	push   es
  409c74:	mov    esi,0xd5709982
  409c79:	jge    0x409c25
  409c7b:	pop    ebp
  409c7c:	mov    ebx,0xf590a09d
  409c81:	adc    esi,DWORD PTR [esi+0x3e]
  409c84:	push   ds
  409c85:	dec    eax
  409c86:	fs hlt 
  409c88:	push   ecx
  409c89:	gs xchg esi,eax
  409c8b:	popa   
  409c8c:	push   0x655d91be
  409c91:	add    eax,0x4dba2d1b
  409c96:	ficom  WORD PTR [edi]
  409c98:	jmp    0x9951:0x63e2f710
  409c9f:	rol    dh,1
  409ca1:	mov    bh,0xad
  409ca3:	push   edi
  409ca4:	sar    DWORD PTR [edi-0x7400d834],0x9d
  409cab:	das    
  409cac:	adc    eax,0x55df81d
  409cb1:	(bad)  
  409cb2:	xor    BYTE PTR [esi+0x262bb2bc],bh
  409cb8:	stos   DWORD PTR es:[edi],eax
  409cb9:	fnstenv [ecx+0x5a79e32f]
  409cbf:	(bad)  
  409cc0:	sbb    DWORD PTR [edi-0x6a],eax
  409cc3:	outs   dx,BYTE PTR ds:[esi]
  409cc4:	retf   0xab54
  409cc7:	adc    DWORD PTR [eax-0x5d],0x4b
  409ccb:	xchg   edi,eax
  409ccc:	jno    0x409cc7
  409cce:	mov    ebx,0x7200a515
  409cd3:	scas   eax,DWORD PTR es:[edi]
  409cd4:	pop    ebp
  409cd5:	ins    DWORD PTR es:[edi],dx
  409cd6:	pop    ss
  409cd7:	jns    0x409c70
  409cd9:	jp     0x409c96
  409cdb:	lods   al,BYTE PTR ds:[esi]
  409cdc:	call   0x9d66:0xc0df3782
  409ce3:	or     al,0xf7
  409ce5:	jle    0x409c89
  409ce7:	push   esi
  409ce8:	les    ebx,FWORD PTR [ebx]
  409cea:	mov    bl,0x62
  409cec:	jb     0x409d51
  409cee:	imul   ebp,DWORD PTR [edi],0x6d337de4
  409cf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cf5:	fst    DWORD PTR [esi]
  409cf7:	popa   
  409cf8:	ja     0x409d59
  409cfa:	and    bl,BYTE PTR [edi+eax*8+0x70]
  409cfe:	mov    eax,0x6c6ff8bf
  409d03:	ss push 0x94221e67
  409d09:	ss jnp 0x409d30
  409d0c:	mov    WORD PTR [edx],?
  409d0e:	cmp    BYTE PTR [ebp-0x2ac33e37],0x69
  409d15:	ror    al,0x86
  409d18:	pushf  
  409d19:	xchg   esp,eax
  409d1a:	pop    ebp
  409d1b:	mov    ds:0x2406edae,eax
  409d20:	nop
  409d21:	mov    al,ds:0xea2c62c7
  409d26:	lds    ecx,FWORD PTR [eax]
  409d28:	shl    DWORD PTR [eax+0x2],0x7e
  409d2c:	cs push 0x16
  409d2f:	sbb    al,0x36
  409d31:	push   ebp
  409d32:	inc    edx
  409d33:	pop    esi
  409d34:	fld    st(2)
  409d36:	sbb    edx,esi
  409d38:	into   
  409d39:	(bad)  
  409d3a:	pop    ebp
  409d3b:	les    ecx,FWORD PTR [edi]
  409d3d:	mov    ds,WORD PTR [ecx+0x1d397020]
  409d43:	cmp    esp,DWORD PTR [ebp+0x7d997188]
  409d49:	hlt    
  409d4a:	pusha  
  409d4b:	sub    ebp,DWORD PTR [eax+0x55e64834]
  409d51:	ss cmc 
  409d53:	dec    ebx
  409d54:	ja     0x409db6
  409d56:	adc    edi,DWORD PTR [edi]
  409d58:	and    eax,0x1af2e3ec
  409d5d:	xchg   edi,eax
  409d5e:	loop   0x409cfe
  409d60:	gs jecxz 0x409da3
  409d63:	jmp    DWORD PTR [ecx]
  409d65:	(bad)  
  409d66:	enter  0xbdbb,0xb1
  409d6a:	shl    DWORD PTR [edi-0x68],cl
  409d6d:	fild   DWORD PTR [ebp-0x6b3a63c8]
  409d73:	cdq    
  409d74:	arpl   WORD PTR [edi],di
  409d76:	mov    al,ds:0x2e7ed89c
  409d7b:	sahf   
  409d7c:	les    edx,FWORD PTR [ebx+ebx*2+0x14abf3ef]
  409d83:	xchg   esp,eax
  409d84:	and    ebp,DWORD PTR [ebp+eiz*2-0x63]
  409d88:	dec    esp
  409d89:	push   es
  409d8a:	sar    BYTE PTR [edx-0x5b635ef4],cl
  409d90:	inc    eax
  409d91:	xlat   BYTE PTR ds:[ebx]
  409d92:	inc    esi
  409d93:	(bad)  
  409d94:	test   al,0x77
  409d96:	xchg   edx,eax
  409d97:	pop    ecx
  409d98:	repz inc esi
  409d9a:	call   0x86d4:0x2aad63a2
  409da1:	push   edi
  409da2:	cwde   
  409da3:	jnp    0x409d29
  409da5:	fist   WORD PTR [esi+0x17]
  409da8:	ds push 0x79
  409dab:	lds    esp,FWORD PTR [edx-0x5ed22f54]
  409db1:	rcr    BYTE PTR [edx-0x3c20eaf1],0x1c
  409db8:	cld    
  409db9:	lock pop esi
  409dbb:	and    esp,DWORD PTR [ebx-0x782f5bf]
  409dc1:	add    al,0x30
  409dc3:	xchg   esp,eax
  409dc4:	push   ebp
  409dc5:	push   ds
  409dc6:	nop
  409dc7:	xor    BYTE PTR [ecx+ebx*2-0x51],0xde
  409dcc:	xchg   edx,eax
  409dcd:	test   BYTE PTR [eax-0x49],bl
  409dd0:	mov    esp,0xa7cf75e9
  409dd5:	mov    esp,0xba1b9e46
  409dda:	xor    al,0xc
  409ddc:	out    dx,al
  409ddd:	shr    BYTE PTR [edi-0x44],0x78
  409de1:	mov    WORD PTR [ebx-0xb],?
  409de4:	sbb    BYTE PTR [ecx-0xea9fb8b],al
  409dea:	add    ebp,esi
  409dec:	cmp    al,0xbe
  409dee:	mov    dl,0xf1
  409df0:	fmul   QWORD PTR [ecx+0x65]
  409df3:	ss clc 
  409df5:	adc    al,bl
  409df7:	jl     0x409dd3
  409df9:	sbb    al,0x5
  409dfb:	add    al,0x65
  409dfd:	scas   eax,DWORD PTR es:[edi]
  409dfe:	xchg   DWORD PTR [ebx-0x5b],edi
  409e01:	sub    bl,BYTE PTR [ebx]
  409e03:	push   cs
  409e04:	sub    DWORD PTR [ecx-0x16],esi
  409e07:	jne    0x409dca
  409e09:	test   esp,esi
  409e0b:	pop    ebp
  409e0c:	mov    al,ds:0xc5090fe7
  409e11:	push   cs
  409e12:	cmp    al,0x68
  409e14:	std    
  409e15:	lods   al,BYTE PTR ds:[esi]
  409e16:	out    dx,al
  409e17:	mov    al,cl
  409e19:	iret   
  409e1a:	jl     0x409e39
  409e1c:	outs   dx,DWORD PTR gs:[esi]
  409e1e:	sahf   
  409e1f:	ins    BYTE PTR es:[edi],dx
  409e20:	push   edx
  409e21:	pop    ecx
  409e22:	inc    edx
  409e23:	cld    
  409e24:	push   ebp
  409e25:	or     BYTE PTR [edx+ebp*1],dl
  409e28:	ret    
  409e29:	in     al,dx
  409e2a:	push   edx
  409e2b:	call   0xfba8:0x7b22224a
  409e32:	mov    fs,edi
  409e34:	and    eax,DWORD PTR [edi-0x77e68ccc]
  409e3a:	xor    ah,ah
  409e3c:	lahf   
  409e3d:	or     BYTE PTR [edx-0x6f],bh
  409e40:	cmp    eax,0x2468eaa7
  409e45:	push   eax
  409e46:	pop    ebp
  409e47:	inc    edx
  409e48:	into   
  409e49:	rol    DWORD PTR [ebx],cl
  409e4b:	fsubr  DWORD PTR [ecx+esi*1+0x4a]
  409e4f:	inc    ebx
  409e50:	adc    ecx,DWORD PTR [ebx-0x7bb71ec4]
  409e56:	das    
  409e57:	jnp    0x409eb9
  409e59:	in     al,dx
  409e5a:	cdq    
  409e5b:	mov    DWORD PTR [ebp+0xb321136],eax
  409e61:	dec    edx
  409e62:	cwde   
  409e63:	leave  
  409e64:	sub    eax,0x242070d
  409e69:	fistp  DWORD PTR [esi+0x4656ce8d]
  409e6f:	adc    cl,BYTE PTR [edx+0x3a]
  409e72:	or     esi,DWORD PTR [ecx]
  409e74:	sbb    eax,0xbe9f6
  409e79:	sbb    al,dl
  409e7b:	test   eax,0xd8bed3c4
  409e80:	out    dx,eax
  409e81:	jle    0x409e53
  409e83:	dec    ebp
  409e84:	iret   
  409e85:	leave  
  409e86:	(bad)
  409e89:	stc    
  409e8a:	inc    edx
  409e8b:	fsub   QWORD PTR [edi]
  409e8d:	je     0x409e8e
  409e8f:	push   ebp
  409e90:	sti    
  409e91:	outs   dx,BYTE PTR ds:[esi]
  409e92:	cmp    eax,0x85eb67be
  409e97:	and    BYTE PTR [ebx-0x4b6e554],dl
  409e9d:	adc    al,0x6a
  409e9f:	out    0xce,al
  409ea1:	cdq    
  409ea2:	jp     0x409f1c
  409ea4:	push   ecx
  409ea5:	jge    0x409e36
  409ea7:	sbb    DWORD PTR [esi+0x62],ebp
  409eaa:	cld    
  409eab:	jge    0x409e39
  409ead:	mov    ds:0x4b5e84a0,eax
  409eb2:	jge    0x409e85
  409eb4:	jecxz  0x409ed8
  409eb6:	jge    0x409f07
  409eb8:	cmp    DWORD PTR [ebp+eiz*4-0x72ec924d],eax
  409ebf:	cmp    DWORD PTR [edi-0x9bc9313],ebx
  409ec5:	sbb    BYTE PTR [esi],bl
  409ec7:	pop    esp
  409ec8:	jns    0x409ebb
  409eca:	ins    DWORD PTR es:[edi],dx
  409ecb:	outs   dx,BYTE PTR ds:[esi]
  409ecc:	in     eax,0xf9
  409ece:	push   cs
  409ecf:	fdivrp st(5),st
  409ed1:	pop    ds
  409ed2:	xchg   esi,eax
  409ed3:	ins    DWORD PTR es:[edi],dx
  409ed4:	rcl    DWORD PTR [edx+0x681e8c43],1
  409eda:	mov    ecx,DWORD PTR [ecx+0x37]
  409edd:	cs leave 
  409edf:	pop    ds
  409ee0:	inc    esi
  409ee1:	cmp    ah,dl
  409ee3:	and    DWORD PTR [eax+0x49612e63],ebp
  409ee9:	push   eax
  409eea:	in     al,dx
  409eeb:	icebp  
  409eec:	cwde   
  409eed:	test   BYTE PTR [ecx-0x68d1014d],0x88
  409ef4:	xchg   dl,bl
  409ef6:	and    eax,0xd4bb643c
  409efb:	cmp    esi,DWORD PTR [ebx-0x80]
  409efe:	xchg   ecx,eax
  409eff:	pop    eax
  409f00:	(bad)  
  409f01:	cwde   
  409f02:	dec    ebp
  409f03:	or     esi,DWORD PTR [edi]
  409f05:	ins    DWORD PTR es:[edi],dx
  409f06:	xor    ecx,DWORD PTR [edx+0x35]
  409f09:	jno    0x409ea7
  409f0b:	push   esi
  409f0c:	sbb    BYTE PTR [ebx],cl
  409f0e:	pop    ecx
  409f0f:	mov    DWORD PTR [edx+eiz*2+0x7e],ecx
  409f13:	mov    ecx,0xedb32d23
  409f18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f19:	stc    
  409f1a:	inc    eax
  409f1b:	je     0x409f0e
  409f1d:	inc    ecx
  409f1e:	jne    0x409ef0
  409f20:	mov    bh,0x1d
  409f22:	call   FWORD PTR [ecx]
  409f24:	and    eax,0xdf12657f
  409f29:	add    dh,BYTE PTR [edi-0x566c3c5d]
  409f2f:	scas   al,BYTE PTR es:[edi]
  409f30:	movq   mm4,QWORD PTR [edi]
  409f33:	scas   al,BYTE PTR es:[edi]
  409f34:	leave  
  409f35:	push   ss
  409f36:	addr16 jle 0x409ec0
  409f39:	mov    fs,eax
  409f3b:	arpl   WORD PTR [edx],cx
  409f3d:	xor    BYTE PTR [edi+0x2038f46a],bl
  409f43:	int3   
  409f44:	and    edx,edi
  409f46:	scas   al,BYTE PTR es:[edi]
  409f47:	mov    edi,0xeb41bda2
  409f4c:	sub    edi,eax
  409f4e:	arpl   ax,di
  409f50:	xchg   ecx,eax
  409f51:	pop    eax
  409f52:	lea    edi,[ecx]
  409f54:	xchg   esi,eax
  409f55:	mov    ecx,0xaced0d75
  409f5a:	sub    BYTE PTR [edi-0x25],bl
  409f5d:	sar    DWORD PTR [ecx-0x80],cl
  409f60:	cli    
  409f61:	dec    eax
  409f62:	xchg   BYTE PTR [ebx],cl
  409f64:	xlat   BYTE PTR ds:[ebx]
  409f65:	dec    esp
  409f66:	test   eax,0x40cd7dc6
  409f6b:	fisub  DWORD PTR [ebp-0x103d6cf1]
  409f71:	retf   0xf622
  409f74:	out    0xf9,eax
  409f76:	mov    edi,0x344410ba
  409f7b:	rcr    edx,0x51
  409f7e:	arpl   dx,sp
  409f80:	sbb    DWORD PTR [edi-0x7b268fd],0x47522126
  409f8a:	int    0x5f
  409f8c:	cmp    bh,BYTE PTR [edx-0x1d1aa732]
  409f92:	rep stos BYTE PTR es:[edi],al
  409f94:	cmp    al,0xaa
  409f96:	xchg   dx,ax
  409f98:	mov    ecx,DWORD PTR [edx+0x1c]
  409f9b:	jo     0x409f4c
  409f9d:	daa    
  409f9e:	inc    ebp
  409f9f:	neg    BYTE PTR [esi]
  409fa1:	lock mov ch,BYTE PTR [bp+si]
  409fa5:	mov    ch,bh
  409fa7:	clc    
  409fa8:	cmp    esi,DWORD PTR [esi-0x47]
  409fab:	scas   eax,DWORD PTR es:[edi]
  409fac:	mov    ebx,0x9540a8c2
  409fb1:	mov    edi,DWORD PTR [edi-0x57]
  409fb4:	test   ah,bl
  409fb6:	adc    esp,DWORD PTR [ebx]
  409fb8:	lock test eax,0x68bc48b5
  409fbe:	pop    es
  409fbf:	add    eax,0x5165a54e
  409fc4:	jb     0x409f97
  409fc6:	repnz xlat BYTE PTR ds:[ebx]
  409fc8:	in     al,0x82
  409fca:	inc    ecx
  409fcb:	add    DWORD PTR [esi+0x5901c982],esp
  409fd1:	mov    ecx,0x1bb5f971
  409fd7:	sbb    al,0xad
  409fd9:	js     0x409f6d
  409fdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fdc:	or     BYTE PTR [ebx],cl
  409fde:	mov    eax,0x609f35d2
  409fe3:	pop    ss
  409fe4:	bound  ecx,QWORD PTR [ebx+0x5433c80d]
  409fea:	fild   DWORD PTR [eax]
  409fec:	mov    bh,0x3e
  409fee:	fisub  DWORD PTR [esi-0x62]
  409ff1:	sub    eax,0xcae26ab0
  409ff6:	pop    ecx
  409ff7:	sbb    eax,0xb8a7cb0e
  409ffc:	retf   0x7cb0
  409fff:	adc    DWORD PTR ds:0x39e83311,eax
  40a005:	mov    al,0xf1
  40a007:	out    0x56,al
  40a009:	ret    0x8a41
  40a00c:	cmp    eax,0xf03f4e47
  40a011:	xchg   edi,eax
  40a012:	retf   0x3001
  40a015:	jbe    0x409fe7
  40a017:	sub    al,0x6d
  40a019:	lds    edi,FWORD PTR [ebx]
  40a01b:	loope  0x409fba
  40a01d:	loopne 0x40a072
  40a01f:	bound  ecx,QWORD PTR [edx+0x0]
  40a022:	lea    edi,[ecx-0x7e]
  40a025:	cmp    eax,0xe19a9afe
  40a02a:	push   ebp
  40a02b:	fcom   st(6)
  40a02d:	dec    ebx
  40a02e:	(bad)  
  40a02f:	not    DWORD PTR [esi]
  40a031:	cld    
  40a032:	ret    0x7781
  40a035:	aaa    
  40a036:	sar    BYTE PTR [ebp-0x71f5db07],0xbb
  40a03d:	push   esi
  40a03e:	loopne 0x409fc3
  40a040:	jp     0x40a042
  40a042:	mov    DWORD PTR [ecx-0x14ade21a],ebx
  40a048:	int3   
  40a049:	div    DWORD PTR [ebx]
  40a04b:	mov    eax,DWORD PTR [ebp-0x3ac6ccf1]
  40a051:	out    dx,eax
  40a052:	push   0x3b2f978b
  40a057:	fwait
  40a058:	popa   
  40a059:	pop    ss
  40a05a:	mov    BYTE PTR [esp+eiz*8],bl
  40a05d:	test   al,0x7f
  40a05f:	(bad)  
  40a061:	and    DWORD PTR [ebp-0x5a],esp
  40a064:	into   
  40a065:	jg     0x40a08e
  40a067:	xchg   DWORD PTR [eax],ebx
  40a069:	pop    edx
  40a06a:	arpl   di,si
  40a06c:	ja     0x409ff2
  40a06e:	xlat   BYTE PTR ds:[ebx]
  40a06f:	mov    ebx,0xb8f5b0a1
  40a074:	outs   dx,BYTE PTR ds:[esi]
  40a075:	loop   0x40a0aa
  40a077:	inc    esi
  40a078:	in     eax,dx
  40a079:	pop    esi
  40a07a:	sub    BYTE PTR [eax-0x11bf42bf],dh
  40a080:	xor    eax,0xb986c353
  40a085:	pop    es
  40a086:	or     eax,0xe0b99119
  40a08b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a08c:	xchg   DWORD PTR [eax+0x0],eax
  40a08f:	outs   dx,DWORD PTR ds:[esi]
  40a090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a091:	xchg   edx,eax
  40a092:	std    
  40a093:	push   eax
  40a094:	add    DWORD PTR [edx-0x44de5a1b],0xfffffff5
  40a09b:	cmp    BYTE PTR [edi-0x15],cl
  40a09e:	popf   
  40a09f:	mov    bh,0x65
  40a0a1:	cld    
  40a0a2:	scas   eax,DWORD PTR es:[edi]
  40a0a3:	add    al,0x52
  40a0a5:	cwde   
  40a0a6:	dec    edi
  40a0a7:	enter  0xc44c,0x3
  40a0ab:	mov    al,0xb4
  40a0ad:	retf   
  40a0ae:	push   cs
  40a0af:	add    BYTE PTR [eax-0x12],0x98
  40a0b3:	vpsllq xmm4,xmm1,XMMWORD PTR [ebp+0x67]
  40a0b8:	out    0x19,al
  40a0ba:	push   esi
  40a0bb:	sbb    BYTE PTR [edx+0x22],al
  40a0be:	pop    edx
  40a0bf:	push   edx
  40a0c0:	and    al,0xbc
  40a0c2:	in     al,dx
  40a0c3:	jns    0x40a130
  40a0c5:	add    bl,dh
  40a0c7:	inc    esi
  40a0c8:	jle    0x40a0a0
  40a0ca:	inc    ecx
  40a0cb:	test   al,0x6a
  40a0cd:	cwde   
  40a0ce:	pop    esp
  40a0cf:	push   ecx
  40a0d0:	mov    al,0xd6
  40a0d2:	fstp   TBYTE PTR [edi-0x27]
  40a0d5:	and    DWORD PTR [ebx-0x23eb8dcf],0xfffffffa
  40a0dc:	test   DWORD PTR [eax-0x2c],esp
  40a0df:	dec    ecx
  40a0e0:	mov    BYTE PTR [esi+0x46],bh
  40a0e3:	or     al,0x4a
  40a0e5:	dec    esp
  40a0e6:	loop   0x40a0c0
  40a0e8:	sub    al,0xf4
  40a0ea:	adc    DWORD PTR [edi-0xf01fc22],ebp
  40a0f0:	jb     0x40a14b
  40a0f2:	sbb    cl,cl
  40a0f4:	rol    ecx,cl
  40a0f6:	cmp    BYTE PTR [ebx],0xa9
  40a0f9:	add    al,ch
  40a0fb:	jmp    0x948631d6
  40a100:	inc    ecx
  40a101:	aas    
  40a102:	out    0xec,eax
  40a104:	dec    edx
  40a105:	in     al,0xb6
  40a107:	call   0xa65ed242
  40a10c:	addr16 mov edx,0x868433b8
  40a112:	retf   
  40a113:	imul   esp,DWORD PTR [eax+edi*8+0x2b],0xffffffcf
  40a118:	mov    bh,0xd4
  40a11a:	fild   QWORD PTR [edi]
  40a11c:	mov    dh,0x10
  40a11e:	jae    0x40a151
  40a120:	outs   dx,BYTE PTR ds:[esi]
  40a121:	dec    ecx
  40a122:	adc    ebx,0x10
  40a125:	fwait
  40a126:	ja     0x40a105
  40a128:	push   es
  40a129:	popa   
  40a12a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a12b:	jnp    0x40a167
  40a12d:	mov    ebx,0xe6cd1945
  40a132:	pop    edi
  40a133:	cmp    ch,ah
  40a135:	xor    al,0x6d
  40a137:	add    DWORD PTR [edi+0xeb34ea6],esi
  40a13d:	fisub  WORD PTR [edi+0x62]
  40a140:	mov    al,ds:0x3232e8e
  40a145:	jecxz  0x40a0ee
  40a147:	outs   dx,BYTE PTR ds:[esi]
  40a148:	pop    ss
  40a149:	jmp    0xe97024d1
  40a14e:	aas    
  40a14f:	sbb    eax,0x82fc34bb
  40a154:	push   0x5d298afd
  40a159:	sub    al,bl
  40a15b:	call   0xf64291bf
  40a160:	jmp    FWORD PTR [edx]
  40a162:	mov    ch,0x15
  40a164:	xchg   ecx,eax
  40a165:	(bad)  
  40a166:	mov    ds:0x2a16a257,al
  40a16b:	ret    
  40a16c:	jmp    0xaca:0x884779b
  40a173:	fnsave [eax+0x1e]
  40a176:	lea    esp,[edi+0x77b73bc]
  40a17c:	(bad)  
  40a17d:	dec    esp
  40a17e:	jno    0x40a187
  40a180:	sahf   
  40a181:	or     ebp,DWORD PTR [edx+0x42745cd4]
  40a187:	xchg   esp,eax
  40a188:	and    BYTE PTR [ebx+ecx*1],dh
  40a18b:	sub    esp,DWORD PTR [edi+0x4467555e]
  40a191:	jmp    DWORD PTR [ebx-0x232e3527]
  40a197:	lock jle 0x40a14d
  40a19a:	inc    ecx
  40a19b:	push   0xfffffffb
  40a19d:	je     0x40a1c0
  40a19f:	aam    0xed
  40a1a1:	aas    
  40a1a2:	je     0x40a149
  40a1a4:	fucomip st,st(1)
  40a1a6:	int    0x5f
  40a1a8:	pop    edx
  40a1a9:	fistp  DWORD PTR [eax-0x4b2673eb]
  40a1af:	pop    esp
  40a1b0:	add    al,0x5d
  40a1b2:	mov    ds:0x8d1abf37,al
  40a1b7:	add    al,0xda
  40a1b9:	jnp    0x40a1eb
  40a1bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1bc:	sub    al,0x8
  40a1be:	ror    ch,0x22
  40a1c1:	in     al,0x8b
  40a1c3:	iret   
  40a1c4:	pop    ebx
  40a1c5:	lea    ebp,[esi-0x6ee113d2]
  40a1cb:	mov    ebx,0xa9e277d8
  40a1d0:	adc    BYTE PTR [esi],al
  40a1d2:	aaa    
  40a1d3:	mov    ds:0x11c8b29b,eax
  40a1d8:	sbb    al,0xe0
  40a1da:	(bad)
  40a1dd:	push   ds
  40a1de:	test   al,0x87
  40a1e0:	mov    edx,0x7d4f434
  40a1e5:	aam    0xe4
  40a1e7:	sub    ebp,DWORD PTR [eax-0x4f]
  40a1ea:	ret    
  40a1eb:	lods   eax,DWORD PTR ds:[esi]
  40a1ec:	add    BYTE PTR ds:[esi-0x75949ea2],0x85
  40a1f4:	fstp   DWORD PTR [edx+0x77]
  40a1f7:	test   DWORD PTR ds:0x8efd3327,ebp
  40a1fd:	bnd ret 0xf05e
  40a201:	mov    eax,fs:0xad253a38
  40a207:	ds sbb dl,ah
  40a20a:	push   esp
  40a20b:	fldenv [eax*2+0x3e0ce90]
  40a212:	es ins BYTE PTR es:[edi],dx
  40a214:	jae    0x40a286
  40a216:	inc    ebp
  40a217:	imul   esi,DWORD PTR [edx],0x12c32ce7
  40a21d:	pushf  
  40a21e:	add    ecx,edi
  40a220:	in     eax,0xcb
  40a222:	mov    ch,0x77
  40a224:	mov    esp,0xcb3a8b70
  40a229:	gs ffree st(3)
  40a22c:	sbb    DWORD PTR [esi+0x40],0x6eadd2ed
  40a233:	cs in  al,dx
  40a235:	loop   0x40a20c
  40a237:	fcom   DWORD PTR [ebx]
  40a239:	cmp    eax,0x7424cbc9
  40a23e:	ss hlt 
  40a240:	loope  0x40a27f
  40a242:	or     DWORD PTR [ebx+ebp*8-0x7592a4b5],edx
  40a249:	sar    ebp,0x18
  40a24c:	pushf  
  40a24d:	sub    eax,0x21c2646a
  40a252:	push   es
  40a253:	jne    0x40a23d
  40a255:	mov    ch,0x20
  40a257:	sbb    eax,0x8a6fbcc
  40a25c:	fmul   DWORD PTR [edx+esi*1-0x2002639e]
  40a263:	icebp  
  40a264:	imul   ecx,DWORD PTR [edx+0x74],0xffffffc6
  40a268:	mov    al,ds:0x77e7aa89
  40a26d:	out    0x8a,al
  40a26f:	jecxz  0x40a2e4
  40a271:	push   ss
  40a272:	or     BYTE PTR [edi+0x1586a81e],0x22
  40a279:	mov    ecx,0x3aa7e45a
  40a27e:	dec    esi
  40a27f:	jge    0x40a2ab
  40a281:	xlat   BYTE PTR ds:[ebx]
  40a282:	lock call DWORD PTR [eiz*8-0x5dd3d84f]
  40a28a:	cmp    cl,BYTE PTR [eax+eax*2]
  40a28d:	dec    edx
  40a28e:	fidiv  DWORD PTR [ebx-0x5ddf71f0]
  40a294:	ficomp WORD PTR [esi-0x14]
  40a297:	sbb    bl,ah
  40a299:	ret    
  40a29a:	bound  edi,QWORD PTR [edx+0x7d]
  40a29d:	jno    0x40a2e0
  40a29f:	in     eax,0x1d
  40a2a1:	mov    ch,0x7a
  40a2a3:	popfw  
  40a2a5:	cli    
  40a2a6:	popa   
  40a2a7:	cmp    DWORD PTR ds:0x386b4eb,esp
  40a2ad:	jecxz  0x40a239
  40a2af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2b0:	popf   
  40a2b1:	in     eax,0x31
  40a2b3:	pusha  
  40a2b4:	add    eax,0x7ac86b38
  40a2b9:	and    al,0xfa
  40a2bb:	xor    al,0xb8
  40a2bd:	or     BYTE PTR [ecx-0x6f],ah
  40a2c0:	push   ebx
  40a2c1:	or     al,0xd
  40a2c3:	xor    ebp,edx
  40a2c5:	adc    eax,0xaaaf09b2
  40a2ca:	jb     0x40a289
  40a2cc:	(bad)  
  40a2cd:	test   al,0x9d
  40a2cf:	ins    BYTE PTR es:[edi],dx
  40a2d0:	sti    
  40a2d1:	mov    edx,edi
  40a2d3:	test   DWORD PTR [edi-0x931c712],0x4be3c4ca
  40a2dd:	lods   al,BYTE PTR ds:[esi]
  40a2de:	imul   ecx,DWORD PTR [edi+0x51],0x10
  40a2e2:	or     ecx,DWORD PTR [edx+0x70]
  40a2e5:	adc    ebx,0x9ea18d9b
  40a2eb:	sub    bl,BYTE PTR ds:0x68b8e591
  40a2f1:	in     eax,0x82
  40a2f3:	push   es
  40a2f4:	mov    edi,0x4f4305da
  40a2f9:	adc    eax,DWORD PTR [esi+eiz*2+0x3a]
  40a2fd:	hlt    
  40a2fe:	pushf  
  40a2ff:	cs cwde 
  40a301:	xchg   esp,eax
  40a302:	mov    ebp,0x33e6ef97
  40a307:	gs pusha 
  40a309:	or     BYTE PTR [esi],dh
  40a30b:	cmp    BYTE PTR [ecx-0x1a89dd77],bh
  40a311:	add    bl,BYTE PTR [ecx-0x2ac77933]
  40a317:	pop    edx
  40a318:	push   0x56ceb00e
  40a31d:	dec    esi
  40a31e:	scas   al,BYTE PTR es:[edi]
  40a31f:	sbb    BYTE PTR [edi],bl
  40a321:	pop    eax
  40a322:	cs shr ebp,1
  40a325:	pop    eax
  40a326:	sar    BYTE PTR [ecx],cl
  40a328:	adc    ch,dh
  40a32a:	stos   BYTE PTR es:[edi],al
  40a32b:	mov    dh,0x70
  40a32d:	rcr    BYTE PTR [edi+0x44],0x18
  40a331:	inc    eax
  40a332:	rcr    BYTE PTR [edx+0x6a27be6],1
  40a338:	dec    edi
  40a339:	fsubr  DWORD PTR [ecx]
  40a33b:	scas   al,BYTE PTR es:[edi]
  40a33c:	out    0xce,eax
  40a33e:	jge    0x40a319
  40a340:	sub    BYTE PTR [ecx+0x7c4317e6],bl
  40a346:	and    bh,BYTE PTR [ebx+0x49]
  40a349:	les    edi,FWORD PTR [edx]
  40a34b:	inc    ecx
  40a34c:	jmp    DWORD PTR [ebx]
  40a34e:	cmp    DWORD PTR [ecx],ecx
  40a350:	gs dec esi
  40a352:	jno    0x40a3bf
  40a354:	dec    DWORD PTR [ebx+esi*2]
  40a357:	mov    ebx,0x971482b6
  40a35c:	ror    BYTE PTR [ebp-0x23d377d8],0xb8
  40a363:	jge    0x40a2fd
  40a365:	cwde   
  40a366:	iret   
  40a367:	xor    eax,0x5125252b
  40a36c:	mov    ebx,0x858c3b87
  40a371:	bnd jle 0x40a328
  40a374:	lahf   
  40a375:	(bad)  
  40a376:	aam    0xf6
  40a378:	jb     0x40a327
  40a37a:	pop    esi
  40a37b:	mov    eax,0xff5c098a
  40a380:	hlt    
  40a381:	push   edx
  40a382:	mov    edx,0xfa2205c
  40a387:	call   0x518c:0xc83efbd0
  40a38e:	and    DWORD PTR [eax-0x11d4994a],ebp
  40a394:	mov    esp,DWORD PTR [ebp-0x7cce76c6]
  40a39a:	scas   al,BYTE PTR es:[edi]
  40a39b:	(bad)  
  40a39c:	stos   DWORD PTR es:[edi],eax
  40a39d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a39e:	out    dx,eax
  40a39f:	popa   
  40a3a0:	push   ebx
  40a3a1:	add    DWORD PTR [esi-0x24],esp
  40a3a4:	jmp    0x40a3a1
  40a3a6:	push   0x70
  40a3a8:	loop   0x40a3ed
  40a3aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3ab:	cmc    
  40a3ac:	rcl    DWORD PTR [eax+0x5df56367],0xfe
  40a3b3:	mov    dh,0x6f
  40a3b5:	(bad)  
  40a3b6:	or     al,0xc7
  40a3b8:	fdivr  DWORD PTR [eax+edi*2]
  40a3bb:	hlt    
  40a3bc:	mov    dh,0x47
  40a3be:	sub    edx,DWORD PTR [edi-0x35]
  40a3c1:	mov    dl,0x23
  40a3c3:	ret    
  40a3c4:	jl     0x40a435
  40a3c6:	push   edx
  40a3c7:	or     edi,edi
  40a3c9:	test   BYTE PTR [ecx+eiz*2+0xe55fb4c],al
  40a3d0:	mov    eax,ds:0xe148e6cb
  40a3d5:	push   ss
  40a3d6:	retf   
  40a3d7:	dec    esi
  40a3d8:	xchg   esi,eax
  40a3d9:	xlat   BYTE PTR ds:[ebx]
  40a3da:	out    0xa0,al
  40a3dc:	test   BYTE PTR [eax],ah
  40a3de:	popa   
  40a3df:	xor    edi,esp
  40a3e1:	xor    ebp,DWORD PTR [eax-0x798d01a2]
  40a3e7:	cmp    eax,0x88d8fa42
  40a3ec:	sub    eax,0xcd9e31bb
  40a3f1:	mov    esp,0x73123cb9
  40a3f6:	fidiv  DWORD PTR ds:0x1d0130c9
  40a3fc:	clc    
  40a3fd:	rcr    DWORD PTR [edi+0x47],0x8d
  40a401:	dec    edx
  40a402:	(bad)  
  40a403:	cmp    dl,al
  40a405:	xchg   esp,eax
  40a406:	aas    
  40a407:	sub    DWORD PTR [eax],ebp
  40a409:	rol    BYTE PTR [ecx-0x5c4b204c],cl
  40a40f:	jmp    0x5aa2:0xa9522bdd
  40a416:	into   
  40a417:	scas   al,BYTE PTR es:[edi]
  40a418:	add    bh,BYTE PTR [eax-0x15]
  40a41b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a41c:	sub    BYTE PTR [ecx-0x74d1a2d0],cl
  40a422:	fdivr  DWORD PTR [esp+ebx*8]
  40a425:	add    BYTE PTR [edx-0x5ba54d7a],cl
  40a42b:	cmc    
  40a42c:	dec    edx
  40a42d:	jnp    0x40a44e
  40a42f:	mov    ah,0x63
  40a431:	lds    ebx,FWORD PTR gs:[eax-0x4fa27e4a]
  40a438:	and    ch,dh
  40a43a:	mov    edi,0x6ad8bb43
  40a43f:	push   esp
  40a440:	stc    
  40a441:	mov    al,0x29
  40a443:	cmp    BYTE PTR [ebx+edi*2],ch
  40a446:	mov    esi,0xf12fb4e3
  40a44b:	push   esp
  40a44c:	out    dx,eax
  40a44d:	(bad)  
  40a44e:	popa   
  40a44f:	or     DWORD PTR [edi-0x5868cd3],ebx
  40a455:	xchg   DWORD PTR [ecx+0xa],ebx
  40a458:	push   es
  40a459:	sbb    bh,BYTE PTR [ebx-0x4d]
  40a45c:	mov    al,0xb2
  40a45e:	test   BYTE PTR [eax],bh
  40a460:	xor    edx,DWORD PTR [ebx+0x4b786995]
  40a466:	sub    al,0xf0
  40a468:	jl     0x40a41f
  40a46a:	int    0x8e
  40a46c:	(bad)  
  40a46d:	push   esp
  40a46e:	int    0x93
  40a470:	sbb    ch,BYTE PTR [edi]
  40a472:	fldcw  WORD PTR [edx]
  40a474:	inc    edi
  40a475:	push   es
  40a476:	jl     0x40a457
  40a478:	mov    edx,0xfdc1ebe8
  40a47d:	(bad)  [bx]
  40a480:	mov    edi,0xb53f3139
  40a485:	dec    edi
  40a486:	push   esp
  40a487:	mov    WORD PTR [esi],?
  40a489:	or     esp,esi
  40a48b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a48c:	lahf   
  40a48d:	nop
  40a48e:	pop    ds
  40a48f:	ins    DWORD PTR es:[edi],dx
  40a490:	jmp    0x7312:0x599d799
  40a497:	xlat   BYTE PTR ds:[ebx]
  40a498:	imul   edx,DWORD PTR [ebp+0x66f4d0fa],0xffffff93
  40a49f:	lea    ebx,[edx]
  40a4a1:	sbb    dl,ah
  40a4a3:	popa   
  40a4a4:	test   BYTE PTR [ebx+0x1e],0xa
  40a4a8:	cmp    ch,bh
  40a4aa:	out    dx,al
  40a4ab:	pop    ebx
  40a4ac:	jp     0x40a4ec
  40a4ae:	clc    
  40a4af:	add    eax,0x8584fad7
  40a4b4:	stc    
  40a4b5:	in     eax,0xf6
  40a4b7:	jmp    0x3cfd8f6c
  40a4bc:	mov    cl,0x3a
  40a4be:	lahf   
  40a4bf:	loope  0x40a4eb
  40a4c1:	scas   eax,DWORD PTR es:[edi]
  40a4c2:	sbb    BYTE PTR [edi+0x7de653f2],cl
  40a4c8:	scas   al,BYTE PTR es:[edi]
  40a4c9:	xor    eax,0x15a4e74a
  40a4ce:	call   0xc7d61c7b
  40a4d3:	mov    ecx,0xeb5eb661
  40a4d8:	(bad)  
  40a4d9:	out    dx,al
  40a4da:	dec    ebx
  40a4db:	cwde   
  40a4dc:	xchg   ebp,eax
  40a4dd:	xchg   ebp,ebp
  40a4df:	fwait
  40a4e0:	push   ecx
  40a4e1:	pop    ss
  40a4e2:	pop    ebp
  40a4e3:	sub    DWORD PTR [esi+0x71ec866d],eax
  40a4e9:	mov    bl,BYTE PTR [edx+0x2e]
  40a4ec:	pop    edi
  40a4ed:	xchg   esi,eax
  40a4ee:	mov    ebx,DWORD PTR [edx+0x490d0116]
  40a4f4:	cwde   
  40a4f5:	jmp    0x40a52d
  40a4f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4f8:	cmp    bh,BYTE PTR [ecx+0x2d]
  40a4fb:	pop    edi
  40a4fc:	add    al,0x6a
  40a4fe:	test   eax,0x41ecc9ca
  40a503:	fcmovne st,st(2)
  40a505:	addr16 es dec esp
  40a508:	dec    ebp
  40a509:	xchg   BYTE PTR [ebx],al
  40a50b:	xchg   dh,bh
  40a50d:	ds dec edx
  40a50f:	xor    al,0x37
  40a511:	fist   WORD PTR [ebp-0x34]
  40a514:	idiv   DWORD PTR [eax]
  40a516:	test   eax,0xa5c36564
  40a51b:	adc    eax,0xfcab4020
  40a520:	sub    edi,DWORD PTR [esi-0x1f829579]
  40a526:	jmp    0x6d285348
  40a52b:	push   esi
  40a52c:	push   ecx
  40a52d:	sub    dl,BYTE PTR [ebp-0x64]
  40a530:	and    bh,BYTE PTR [edi-0x742d05fe]
  40a536:	test   eax,0xd045859c
  40a53b:	sbb    BYTE PTR [ecx+0x7c],ch
  40a53e:	in     eax,dx
  40a53f:	addr16 dec esp
  40a541:	sbb    BYTE PTR [eax+0x378d42ff],ch
  40a547:	jns    0x40a4ce
  40a549:	dec    eax
  40a54a:	and    esp,DWORD PTR [ebx]
  40a54c:	jg     0x40a544
  40a54e:	test   DWORD PTR [ebp-0x6b],0x7d49ae74
  40a555:	push   edx
  40a556:	mov    ?,edi
  40a558:	pop    edi
  40a559:	repnz ins DWORD PTR es:[edi],dx
  40a55b:	rol    cl,cl
  40a55d:	stos   BYTE PTR es:[edi],al
  40a55e:	xchg   DWORD PTR [eax],ebx
  40a560:	jmp    0x40a5bf
  40a562:	in     al,0x7f
  40a564:	pop    esp
  40a565:	mov    ebx,cr1
  40a568:	mov    BYTE PTR [eax-0x2113bc28],0x3b
  40a56f:	push   cs
  40a570:	pop    edi
  40a571:	mov    dl,0xf1
  40a573:	ss jg  0x40a532
  40a576:	cmp    ch,ch
  40a578:	(bad)  
  40a579:	mov    dh,0x60
  40a57b:	jg     0x40a544
  40a57d:	aam    0x6a
  40a57f:	sub    esp,DWORD PTR [ebx]
  40a581:	mov    edi,0xa9f8f261
  40a586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a587:	js     0x40a594
  40a589:	sbb    esp,DWORD PTR [esi-0x35]
  40a58c:	leave  
  40a58d:	ret    0x796f
  40a590:	and    al,0x79
  40a592:	jb     0x40a57b
  40a594:	inc    edx
  40a595:	rcl    DWORD PTR [edi+0x76],0xdb
  40a599:	ret    
  40a59a:	(bad)  
  40a59b:	jg     0x40a52e
  40a59d:	outs   dx,BYTE PTR ds:[esi]
  40a59e:	or     eax,0xe6280fbe
  40a5a3:	xchg   BYTE PTR [ebx-0x12],dh
  40a5a6:	loop   0x40a5a9
  40a5a8:	push   ds
  40a5a9:	fistp  DWORD PTR ds:0xfa9e5a4
  40a5af:	mov    bl,0x93
  40a5b1:	(bad)  
  40a5b2:	push   edx
  40a5b3:	jne    0x40a581
  40a5b5:	(bad)  
  40a5b6:	fmul   DWORD PTR [ecx+0x498e65bb]
  40a5bc:	xchg   ebx,eax
  40a5bd:	xor    edx,ebp
  40a5bf:	pop    ds
  40a5c0:	lods   al,BYTE PTR ds:[esi]
  40a5c1:	xchg   BYTE PTR [eax-0x7d],dh
  40a5c4:	loopne 0x40a5bb
  40a5c6:	cmp    edi,edi
  40a5c8:	test   DWORD PTR [eax-0x4a],esi
  40a5cb:	cmp    edi,DWORD PTR [ebx-0x2b9c4760]
  40a5d1:	mov    ecx,0xc9cb25a9
  40a5d6:	addr16 mov al,ds:0x4308
  40a5da:	bound  ebx,QWORD PTR [edi+0x3f71816c]
  40a5e0:	cld    
  40a5e1:	sub    ah,bh
  40a5e3:	jge    0x40a65b
  40a5e5:	sahf   
  40a5e6:	xor    esp,edx
  40a5e8:	pop    ds
  40a5e9:	add    eax,0x86470dfe
  40a5ee:	jbe    0x40a644
  40a5f0:	sub    DWORD PTR [ebp-0x595aa16a],0x61b9ffa9
  40a5fa:	stos   BYTE PTR es:[edi],al
  40a5fb:	out    dx,al
  40a5fc:	jg     0x40a5a5
  40a5fe:	in     al,dx
  40a5ff:	loopne 0x40a664
  40a601:	push   0x15cb2045
  40a606:	adc    eax,DWORD PTR [edx+edx*2]
  40a609:	jmp    0xb2a2:0x6d7f0a56
  40a610:	cmp    eax,0x6bf25ea0
  40a615:	jp     0x40a5dd
  40a617:	jnp    0x40a60f
  40a619:	ins    BYTE PTR es:[edi],dx
  40a61a:	cmc    
  40a61b:	inc    edi
  40a61c:	mov    ds:0x32fa1b59,al
  40a621:	push   edi
  40a622:	ja     0x40a5fb
  40a624:	ficomp WORD PTR [ecx+0x5a]
  40a627:	mov    al,ds:0x8bf9984d
  40a62c:	dec    ebp
  40a62d:	mov    ecx,DWORD PTR ds:0x7ecdb583
  40a633:	jnp    0x40a625
  40a635:	push   0xfffffff5
  40a637:	adc    DWORD PTR [edi-0x72],edi
  40a63a:	push   es
  40a63b:	jno    0x40a63b
  40a63d:	rol    BYTE PTR [edx],0x50
  40a640:	xor    dl,al
  40a642:	xchg   ebx,eax
  40a643:	js     0x40a60c
  40a645:	icebp  
  40a646:	lahf   
  40a647:	stos   BYTE PTR es:[edi],al
  40a648:	ja     0x40a646
  40a64a:	aaa    
  40a64b:	data16 (bad) 
  40a64d:	ins    BYTE PTR es:[edi],dx
  40a64e:	shr    DWORD PTR [ecx-0x75],0x3b
  40a652:	mov    edx,0x64152d24
  40a657:	add    DWORD PTR [ebx],0x78cd71e1
  40a65d:	sbb    edx,DWORD PTR [esi-0x54]
  40a660:	ja     0x40a66e
  40a662:	ds mov esp,0xf00e6d94
  40a668:	push   eax
  40a669:	dec    ecx
  40a66a:	frstor [edi]
  40a66c:	loop   0x40a632
  40a66e:	pop    ebx
  40a66f:	or     al,0xca
  40a671:	rol    DWORD PTR [esi+0x7dd3a563],0xd0
  40a678:	add    eax,DWORD PTR [edx-0x7]
  40a67b:	ss lock pop cx
  40a67f:	or     bl,cl
  40a681:	cmp    eax,0x669568e3
  40a686:	ja     0x40a67d
  40a688:	push   ebx
  40a689:	loope  0x40a6d1
  40a68b:	mov    ch,0xdd
  40a68d:	out    dx,eax
  40a68e:	(bad)  
  40a68f:	jg     0x40a6d3
  40a691:	pop    esi
  40a692:	and    al,0x2d
  40a694:	xor    eax,0xdcd1bb97
  40a699:	dec    eax
  40a69a:	cmp    ah,BYTE PTR [ecx-0x68]
  40a69d:	ret    
  40a69e:	ds jo  0x40a67a
  40a6a1:	jb     0x40a6c7
  40a6a3:	repz imul dh
  40a6a6:	jne    0x40a675
  40a6a8:	lods   eax,DWORD PTR ds:[esi]
  40a6a9:	ds (bad) 
  40a6ab:	shr    DWORD PTR [ebx-0x1e],1
  40a6ae:	mov    DWORD PTR [ecx+ebp*1+0x652caaa],ecx
  40a6b5:	das    
  40a6b6:	xchg   ebp,eax
  40a6b7:	sub    BYTE PTR [edi-0x5d8c3c42],ah
  40a6bd:	out    0xc3,eax
  40a6bf:	aad    0x83
  40a6c1:	cmp    al,BYTE PTR [eax-0x20]
  40a6c4:	pushw  0x19e
  40a6c8:	xor    eax,0xc63ecfdc
  40a6cd:	sahf   
  40a6ce:	mov    edi,0x2aabf04a
  40a6d3:	sbb    BYTE PTR [eax],0x8d
  40a6d6:	fisttp DWORD PTR [edx-0x5ee132e0]
  40a6dc:	in     eax,dx
  40a6dd:	dec    BYTE PTR [ecx]
  40a6df:	ins    DWORD PTR es:[edi],dx
  40a6e0:	cmp    ecx,esi
  40a6e2:	mov    ebx,0x58c16758
  40a6e7:	hlt    
  40a6e8:	aad    0x18
  40a6ea:	dec    esi
  40a6eb:	sub    DWORD PTR [edx],0xb25834c1
  40a6f1:	dec    esi
  40a6f2:	out    dx,eax
  40a6f3:	iret   
  40a6f4:	in     eax,0xbf
  40a6f6:	and    al,0xf6
  40a6f8:	fild   QWORD PTR [ebx]
  40a6fa:	ret    0xdf76
  40a6fd:	fcom   DWORD PTR [edi+eiz*2]
  40a700:	inc    ebp
  40a701:	hlt    
  40a702:	adc    DWORD PTR [ebp+0x5e],esi
  40a705:	stos   BYTE PTR es:[edi],al
  40a706:	xor    dh,BYTE PTR [edx+0x49681079]
  40a70c:	call   0x30667ac
  40a711:	sbb    eax,0xf6186cf5
  40a716:	mov    dh,dl
  40a718:	pop    eax
  40a719:	sub    al,0x2d
  40a71b:	ret    0x6b0b
  40a71e:	loope  0x40a72b
  40a720:	push   ebx
  40a721:	add    DWORD PTR [esi-0x282512bf],edi
  40a727:	inc    ecx
  40a728:	fldl2e 
  40a72a:	sub    ch,BYTE PTR [edx+0x13754ed3]
  40a730:	push   esp
  40a731:	rcl    DWORD PTR [edi+0x5bd4092f],1
  40a737:	mov    dh,0x56
  40a739:	mov    eax,ds:0x2a31d8ac
  40a73e:	ins    DWORD PTR es:[edi],dx
  40a73f:	aam    0xdd
  40a741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a742:	mov    dl,BYTE PTR ds:[ebp+0x62f272b8]
  40a749:	xor    edi,DWORD PTR [ebx-0x54224cd6]
  40a74f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a750:	call   0xc656b996
  40a755:	inc    esi
  40a756:	fimul  DWORD PTR [ecx+0x5]
  40a759:	les    ecx,FWORD PTR [ebp+0x7f]
  40a75c:	in     al,dx
  40a75d:	pop    esi
  40a75e:	cmp    DWORD PTR [ebx],0x6581919a
  40a764:	push   0xfb1c7d38
  40a769:	cwde   
  40a76a:	out    dx,al
  40a76b:	add    edx,DWORD PTR [ebp+0x5a16726]
  40a771:	pop    esp
  40a772:	mov    ds:0xa16875d7,eax
  40a777:	shl    BYTE PTR [edi],cl
  40a779:	lods   eax,DWORD PTR ds:[esi]
  40a77a:	xchg   edx,eax
  40a77b:	fwait
  40a77c:	shl    BYTE PTR [ebp+0x14],0x27
  40a780:	jmp    0x97927ba
  40a785:	sbb    dl,ch
  40a787:	add    BYTE PTR [esi+0x15],0xe
  40a78b:	(bad)  
  40a78c:	gs jne 0x40a7a6
  40a78f:	nop
  40a790:	inc    esp
  40a791:	outs   dx,DWORD PTR ds:[esi]
  40a792:	rol    ebx,0x6a
  40a795:	push   0x863e4047
  40a79a:	stos   DWORD PTR es:[edi],eax
  40a79b:	cmp    eax,0x131f737a
  40a7a0:	mov    eax,0xdacd4762
  40a7a5:	pop    ds
  40a7a6:	pushf  
  40a7a7:	or     DWORD PTR [ecx],edi
  40a7a9:	xlat   BYTE PTR ds:[ebx]
  40a7aa:	push   edi
  40a7ab:	mov    edx,0x5094aaae
  40a7b0:	mov    eax,0xa30a730f
  40a7b5:	xor    ecx,edx
  40a7b7:	cmp    DWORD PTR [esi+0x51],ebp
  40a7ba:	jmp    0x759b:0xe0464161
  40a7c1:	mul    DWORD PTR [eax+0x2dbc6bfd]
  40a7c7:	inc    edx
  40a7c8:	adc    edx,DWORD PTR [ecx+0x370c2ed]
  40a7ce:	(bad)  
  40a7d0:	cmp    al,0x28
  40a7d2:	xchg   edi,eax
  40a7d3:	int    0x50
  40a7d5:	xor    ecx,DWORD PTR [edx+0x20]
  40a7d8:	(bad)  
  40a7d9:	sub    ch,BYTE PTR [ebx-0x3db36a40]
  40a7df:	push   0xd2d10a02
  40a7e4:	out    dx,eax
  40a7e5:	lds    eax,FWORD PTR [esi-0x71b0bd9b]
  40a7eb:	jecxz  0x40a83c
  40a7ed:	cwde   
  40a7ee:	stos   DWORD PTR es:[edi],eax
  40a7ef:	test   DWORD PTR [esi+0x67e4b15b],eax
  40a7f5:	fisubr DWORD PTR [edi+0x11]
  40a7f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7f9:	dec    ebp
  40a7fa:	pop    DWORD PTR [ebp-0x3]
  40a7fd:	hlt    
  40a7fe:	addr16 imul esp,esp,0x16
  40a802:	pop    ebp
  40a803:	ja     0x40a802
  40a805:	fbstp  TBYTE PTR [ebx-0x25a5121e]
  40a80b:	mov    bh,0x17
  40a80d:	xor    ah,BYTE PTR [edx-0x67]
  40a810:	jne    0x40a7af
  40a812:	pop    edi
  40a813:	ins    BYTE PTR es:[edi],dx
  40a814:	lods   eax,DWORD PTR ds:[esi]
  40a815:	test   BYTE PTR [edi+0x21],al
  40a818:	in     al,dx
  40a819:	xor    eax,0xe51b37e3
  40a81e:	js     0x40a7f3
  40a820:	int    0xf1
  40a822:	or     DWORD PTR [eax+esi*2],edi
  40a825:	out    dx,al
  40a826:	adc    dh,BYTE PTR [esi+0x6ec9f9ea]
  40a82c:	jge    0x40a846
  40a82e:	push   es
  40a82f:	pushf  
  40a830:	push   edx
  40a831:	mov    al,0x62
  40a833:	in     eax,0xc9
  40a835:	mov    eax,0xcdea4123
  40a83a:	out    0x96,al
  40a83c:	ins    DWORD PTR es:[edi],dx
  40a83d:	xor    al,0x1d
  40a83f:	lods   eax,DWORD PTR ds:[esi]
  40a840:	xchg   BYTE PTR [ecx],bl
  40a842:	cmp    BYTE PTR [edi-0x47daf2f5],0x36
  40a849:	or     DWORD PTR [ecx],esp
  40a84b:	adc    dh,0x9a
  40a84e:	imul   eax,DWORD PTR [edi],0x48
  40a851:	cs pop edi
  40a853:	int    0xb4
  40a855:	call   0xb77ae88
  40a85a:	or     al,0x32
  40a85c:	jmp    0xf8eb4f3e
  40a861:	rol    DWORD PTR ss:[eax-0x4],1
  40a865:	cld    
  40a866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a867:	fst    QWORD PTR [esi]
  40a869:	sub    edi,ecx
  40a86b:	test   DWORD PTR [eax+0x58],edi
  40a86e:	aad    0x3c
  40a870:	rol    BYTE PTR [esi+0x1e],0x98
  40a874:	push   es
  40a875:	cli    
  40a876:	adc    bh,ch
  40a878:	and    BYTE PTR [ebx+0x536b322c],ch
  40a87e:	sbb    edx,ebx
  40a880:	lods   al,BYTE PTR ds:[esi]
  40a881:	or     eax,0x2c76acc
  40a886:	cmp    eax,0xf9c0f826
  40a88b:	inc    ebx
  40a88c:	fdiv   st(4),st
  40a88e:	sbb    eax,0xfac9c897
  40a893:	ins    DWORD PTR es:[edi],dx
  40a894:	adc    DWORD PTR [ebx],ecx
  40a896:	lds    edx,FWORD PTR [eax+0x60]
  40a899:	sub    BYTE PTR [edx+ecx*2-0x70f24d3c],ah
  40a8a0:	call   0x444a:0xf92039c7
  40a8a7:	ins    DWORD PTR es:[edi],dx
  40a8a8:	push   0x66
  40a8aa:	stos   DWORD PTR es:[edi],eax
  40a8ab:	leave  
  40a8ac:	dec    esp
  40a8ad:	imul   edi,DWORD PTR [esi+0x8],0xa12cd924
  40a8b4:	dec    eax
  40a8b5:	dec    esp
  40a8b6:	mov    ?,WORD PTR [ebp-0x7b]
  40a8b9:	xor    eax,0x6429c551
  40a8be:	push   ds
  40a8bf:	cmc    
  40a8c0:	adc    eax,0xac3a15f5
  40a8c5:	lds    edi,FWORD PTR [edi+edi*8]
  40a8c8:	mov    bl,0xc7
  40a8ca:	data16 rol BYTE PTR [edx+eiz*1-0x216d7587],0xb0
  40a8d3:	adc    ecx,ebp
  40a8d5:	jo     0x40a910
  40a8d7:	dec    ebx
  40a8d8:	ins    DWORD PTR es:[edi],dx
  40a8d9:	pop    ss
  40a8da:	pop    edx
  40a8db:	mov    cl,0x6
  40a8dd:	adc    al,BYTE PTR [edx+0x3de481d5]
  40a8e3:	loope  0x40a932
  40a8e5:	xor    BYTE PTR [ebx],0x2a
  40a8e8:	xchg   BYTE PTR [edi+0xe],bl
  40a8eb:	pop    esi
  40a8ec:	pop    ebp
  40a8ed:	and    eax,0xbe29fa1
  40a8f2:	add    eax,0x217652
  40a8f7:	in     eax,0x95
  40a8f9:	call   0xbbd6:0xdd6e15c2
  40a900:	adc    eax,0x7da04d07
  40a905:	stc    
  40a906:	sub    al,0xa7
  40a908:	outs   dx,DWORD PTR ds:[esi]
  40a909:	ret    0xe44e
  40a90c:	mov    ebp,0x64855588
  40a911:	(bad)  
  40a912:	jmp    0x40a901
  40a914:	and    BYTE PTR [edi-0x42],cl
  40a917:	mov    bl,0xcd
  40a919:	rcl    edi,0x2
  40a91c:	cld    
  40a91d:	jne    0x40a94b
  40a91f:	test   eax,0xd588e894
  40a924:	mov    ?,ebp
  40a926:	mov    dh,0x6b
  40a928:	jb     0x40a949
  40a92a:	pop    esi
  40a92b:	jecxz  0x40a8e8
  40a92d:	fldl2e 
  40a92f:	xor    bl,BYTE PTR [esi]
  40a931:	inc    ecx
  40a932:	dec    esi
  40a933:	sbb    DWORD PTR [esp+esi*8+0x2c],0x887991af
  40a93b:	and    al,0x87
  40a93d:	add    BYTE PTR [ebx-0x26525d24],cl
  40a943:	rol    BYTE PTR [esi+edi*2-0x6f965e03],0xc0
  40a94b:	xchg   BYTE PTR [ebp-0x6d],cl
  40a94e:	leave  
  40a94f:	fild   DWORD PTR [ecx+0x65]
  40a952:	jmp    0x3568:0x20deb79e
  40a959:	adc    BYTE PTR fs:[eax-0x1d],ah
  40a95d:	mov    ebx,0x24918070
  40a962:	mov    ebx,0x220aaa11
  40a967:	retf   0x372c
  40a96a:	leave  
  40a96b:	rcr    cl,0xf
  40a96e:	xor    dl,BYTE PTR [esi-0x58]
  40a971:	pop    esi
  40a972:	dec    esp
  40a973:	sub    eax,DWORD PTR [eax]
  40a975:	pop    ebp
  40a976:	and    ebp,DWORD PTR [eax+0x45]
  40a979:	push   ebx
  40a97a:	push   edx
  40a97b:	jge    0x40a9bb
  40a97d:	sar    ecx,0x37
  40a980:	pop    es
  40a981:	adc    al,0x2
  40a983:	cmp    esi,esi
  40a985:	div    DWORD PTR ds:0xc5d59af3
  40a98b:	sub    al,0xe
  40a98d:	icebp  
  40a98e:	das    
  40a98f:	mov    edi,0x316230ee
  40a994:	sub    cx,WORD PTR [edx]
  40a997:	hlt    
  40a998:	mov    al,ds:0x2a3fd26e
  40a99d:	add    esp,0xffffffd6
  40a9a0:	dec    BYTE PTR [eax]
  40a9a2:	lea    ecx,[ecx+edx*1-0x33c412d0]
  40a9a9:	or     BYTE PTR [ecx+ecx*8+0x78],cl
  40a9ad:	xor    eax,0x10d25941
  40a9b2:	das    
  40a9b3:	fwait
  40a9b4:	xor    al,0xba
  40a9b6:	dec    ecx
  40a9b7:	aaa    
  40a9b8:	adc    eax,0xe0f78e90
  40a9bd:	mov    ebx,0x99966755
  40a9c2:	ret    
  40a9c3:	aaa    
  40a9c4:	and    ebx,ebp
  40a9c6:	xor    bl,BYTE PTR [edx+0x2f130e64]
  40a9cc:	cdq    
  40a9cd:	cmp    al,0x48
  40a9cf:	retf   
  40a9d0:	fsub   st(4),st
  40a9d2:	sub    al,0x44
  40a9d4:	xlat   BYTE PTR ds:[ebx]
  40a9d5:	je     0x40a99c
  40a9d7:	dec    edi
  40a9d8:	jno    0x40aa51
  40a9da:	test   eax,0xaa12e48c
  40a9df:	and    eax,0xe102dc2a
  40a9e4:	mov    ebp,0x2e74129
  40a9e9:	dec    ebp
  40a9ea:	out    dx,eax
  40a9eb:	mov    DWORD PTR [eax+0xf],ecx
  40a9ee:	jb     0x40a9e4
  40a9f0:	xor    al,0xcf
  40a9f2:	lds    ebx,FWORD PTR [ebp-0x7cbea001]
  40a9f8:	xor    ebp,DWORD PTR [esi]
  40a9fa:	push   cs
  40a9fb:	arpl   WORD PTR [ebp-0x39],dx
  40a9fe:	mov    esi,0x9e54b57b
  40aa03:	or     DWORD PTR [edx],esp
  40aa05:	xor    al,0xd7
  40aa07:	dec    esp
  40aa08:	inc    edi
  40aa09:	mov    al,0x6d
  40aa0b:	inc    esi
  40aa0c:	sbb    DWORD PTR [edi],esp
  40aa0e:	push   0x9f61fe80
  40aa13:	js     0x40a9df
  40aa15:	dec    edx
  40aa16:	mov    eax,ds:0xbf5f5532
  40aa1b:	cs (bad) 
  40aa1d:	cmp    al,dh
  40aa1f:	mov    ecx,0x5f22ed03
  40aa24:	sub    eax,0x55407994
  40aa29:	in     al,dx
  40aa2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa2b:	scas   al,BYTE PTR es:[edi]
  40aa2c:	mov    al,0xd7
  40aa2e:	sub    ebx,ebp
  40aa30:	(bad)  
  40aa32:	leave  
  40aa33:	push   esi
  40aa34:	fcomp  DWORD PTR [ecx+0xe]
  40aa37:	push   0xcc27af0
  40aa3c:	leave  
  40aa3d:	popf   
  40aa3e:	(bad)  
  40aa3f:	ficomp WORD PTR [ebx+0x5]
  40aa42:	in     al,0xde
  40aa44:	xor    DWORD PTR ds:0x23592a3,0xffffffcb
  40aa4b:	sub    eax,0xa6b8d143
  40aa50:	retf   0x21d1
  40aa53:	mov    bh,0x5a
  40aa55:	fcomp  DWORD PTR [edx-0x37f73837]
  40aa5b:	jl     0x40a9e2
  40aa5d:	imul   ch
  40aa5f:	mov    DWORD PTR [ecx+0xd],ebp
  40aa62:	fimul  WORD PTR [ebx+edx*4+0x59fde063]
  40aa69:	test   al,0x9f
  40aa6b:	cmp    eax,0x5ba30ba
  40aa70:	add    eax,0xb7b6c639
  40aa75:	push   ecx
  40aa76:	xchg   esi,eax
  40aa77:	dec    edx
  40aa78:	jle    0x40aaca
  40aa7a:	aad    0xb8
  40aa7c:	cmp    DWORD PTR [esi-0x2f173c48],0xffffff80
  40aa83:	mov    edx,0x13116482
  40aa88:	loope  0x40aa75
  40aa8a:	mov    edx,0x1d67f65b
  40aa8f:	in     eax,dx
  40aa90:	sbb    esi,DWORD PTR [ecx-0x20]
  40aa93:	clc    
  40aa94:	pop    edx
  40aa95:	adc    ebp,DWORD PTR [edi+0x4f31b931]
  40aa9b:	inc    esp
  40aa9c:	je     0x40aa82
  40aa9e:	or     esp,DWORD PTR [edx-0x6d]
  40aaa1:	ins    DWORD PTR es:[edi],dx
  40aaa2:	sub    eax,0x6e1d70dd
  40aaa7:	dec    eax
  40aaa8:	mov    ecx,0xb2c43416
  40aaad:	test   ebx,ebx
  40aaaf:	gs push 0xffffffe4
  40aab2:	mov    esi,0xa7c0b168
  40aab7:	push   esi
  40aab8:	jo     0x40ab1e
  40aaba:	push   ecx
  40aabb:	sar    dh,1
  40aabd:	cld    
  40aabe:	fs ret 
  40aac0:	stos   DWORD PTR es:[edi],eax
  40aac1:	xor    edx,DWORD PTR [ebp-0x5450dfb8]
  40aac7:	aas    
  40aac8:	outs   dx,BYTE PTR ds:[esi]
  40aac9:	add    esp,ebx
  40aacb:	mov    DWORD PTR [ebx+ecx*2-0x57b480a8],ebx
  40aad2:	mov    DWORD PTR [eax],esp
  40aad4:	or     eax,0x80df17b4
  40aad9:	sub    ebp,DWORD PTR [eax]
  40aadb:	pop    esp
  40aadc:	retf   0x5778
  40aadf:	xlat   BYTE PTR ds:[ebx]
  40aae0:	adc    al,0x16
  40aae2:	sbb    cl,BYTE PTR [esi+0x31]
  40aae5:	icebp  
  40aae6:	xchg   ecx,eax
  40aae7:	fdivrp st(4),st
  40aae9:	dec    ecx
  40aaea:	push   0xffffffe7
  40aaec:	xor    cl,bh
  40aaee:	mov    eax,ds:0x3d217353
  40aaf3:	mov    edx,0xae4e8512
  40aaf8:	adc    DWORD PTR [edx-0x534c9b8f],ecx
  40aafe:	imul   eax,DWORD PTR [eax],0x4d02de1e
  40ab04:	leave  
  40ab05:	add    esi,DWORD PTR [edx+ebx*2+0x3e]
  40ab09:	call   0xf324:0x2d864382
  40ab10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab11:	sar    ch,cl
  40ab13:	fs adc eax,0xfd60da6e
  40ab19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab1a:	hlt    
  40ab1b:	sbb    DWORD PTR [ebx+0x4997048e],ebp
  40ab21:	pop    esi
  40ab22:	cmp    eax,0xa9dec361
  40ab27:	sub    dl,ch
  40ab29:	pop    edi
  40ab2a:	xor    al,0x22
  40ab2c:	test   BYTE PTR [edx+0x9fef318],ah
  40ab32:	pusha  
  40ab33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab34:	adc    al,0xd8
  40ab36:	ds dec ebx
  40ab38:	inc    esi
  40ab39:	fucom  st(7)
  40ab3b:	sbb    BYTE PTR [ebx],al
  40ab3d:	sbb    esi,DWORD PTR [eax+0x5b]
  40ab40:	enter  0x8065,0xee
  40ab44:	push   ebx
  40ab45:	and    bh,dl
  40ab47:	repnz fs mov bl,0x40
  40ab4b:	add    esi,eax
  40ab4d:	xor    BYTE PTR [ecx],ch
  40ab4f:	add    ch,BYTE PTR [edx+eax*4-0x3d]
  40ab53:	les    edi,FWORD PTR [eax+0x243ff382]
  40ab59:	sbb    eax,0x7797eebe
  40ab5e:	int3   
  40ab5f:	push   eax
  40ab60:	inc    dx
  40ab62:	mov    al,ds:0xcbcf2835
  40ab67:	ds push ds
  40ab69:	in     eax,dx
  40ab6a:	loopne 0x40ab48
  40ab6c:	dec    ebx
  40ab6d:	out    dx,al
  40ab6e:	jmp    0x40abe6
  40ab70:	xchg   ebp,eax
  40ab71:	sbb    ah,BYTE PTR [ebx]
  40ab73:	pushf  
  40ab74:	or     DWORD PTR [ecx],0x75
  40ab77:	pusha  
  40ab78:	pushf  
  40ab79:	push   0x494e16b2
  40ab7e:	mov    ebx,0x66868ba0
  40ab83:	ret    
  40ab84:	mov    esi,0x8c7ce6e8
  40ab89:	mov    eax,0xa789f6e3
  40ab8e:	mov    bl,0xf6
  40ab90:	cdq    
  40ab91:	mov    eax,ds:0xd7bd8977
  40ab96:	dec    esi
  40ab97:	xor    al,0x57
  40ab99:	fidivr WORD PTR [esi-0x46]
  40ab9c:	or     edi,DWORD PTR [eax-0x7e079e13]
  40aba2:	retf   
  40aba3:	pusha  
  40aba4:	jb     0x40abd7
  40aba6:	push   eax
  40aba7:	dec    esp
  40aba8:	in     al,dx
  40aba9:	and    BYTE PTR ds:0x97e44ac7,cl
  40abaf:	outs   dx,DWORD PTR ds:[esi]
  40abb0:	jp     0x40ab3c
  40abb2:	fsub   QWORD PTR [esi+eiz*2]
  40abb5:	es popf 
  40abb7:	cdq    
  40abb8:	mov    ebx,0x675fb621
  40abbd:	fadd   QWORD PTR [eax+0x7150f597]
  40abc3:	cmp    BYTE PTR [ecx+0x18],dh
  40abc6:	and    ebx,0xffffffd2
  40abc9:	sbb    al,0xab
  40abcb:	(bad)  
  40abcc:	(bad)  
  40abce:	fcomip st,st(4)
  40abd0:	std    
  40abd1:	mov    bh,0x79
  40abd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abd4:	das    
  40abd5:	and    ah,BYTE PTR [ebx]
  40abd7:	push   ebp
  40abd8:	test   BYTE PTR [edi+0x17],0x7f
  40abdc:	sub    al,0x6f
  40abde:	mov    ds:0x58aba694,al
  40abe3:	cwde   
  40abe4:	lock push ss
  40abe6:	inc    edx
  40abe7:	or     DWORD PTR [edx],edx
  40abe9:	adc    ch,BYTE PTR [ecx]
  40abeb:	outs   dx,BYTE PTR ds:[esi]
  40abec:	dec    ebx
  40abed:	in     al,dx
  40abee:	mov    ch,0xe
  40abf0:	imul   edi,DWORD PTR [ebp-0x34],0xd7e780f1
  40abf7:	data16 int 0xed
  40abfa:	not    BYTE PTR [edx]
  40abfc:	or     DWORD PTR [ebp-0x19dc05fa],ecx
  40ac02:	jl     0x40ac1b
  40ac04:	aam    0xe4
  40ac06:	inc    esi
  40ac07:	out    0x6a,al
  40ac09:	push   edi
  40ac0a:	cmp    esp,esi
  40ac0c:	pop    ss
  40ac0d:	xchg   esp,eax
  40ac0e:	cdq    
  40ac0f:	das    
  40ac10:	ret    0x79d0
  40ac13:	gs (bad) 
  40ac15:	pusha  
  40ac16:	sbb    edx,esi
  40ac18:	sub    BYTE PTR [eax+0x36],bh
  40ac1b:	repz adc cl,BYTE PTR [eax-0x594dcf16]
  40ac22:	mov    ds:0xaf1cb2f1,eax
  40ac27:	and    BYTE PTR [esi+0x37],dl
  40ac2a:	push   ecx
  40ac2b:	pop    edi
  40ac2c:	mov    cl,0x43
  40ac2e:	cmp    bl,BYTE PTR [edx+0x59ff642a]
  40ac34:	push   ecx
  40ac35:	sbb    ebp,DWORD PTR [esi+edi*2-0x72]
  40ac39:	enter  0x74ad,0xdf
  40ac3d:	retf   
  40ac3e:	je     0x40ac34
  40ac40:	push   cs
  40ac41:	(bad)  
  40ac42:	ins    DWORD PTR es:[edi],dx
  40ac43:	cli    
  40ac44:	arpl   WORD PTR [ebx+0x47],bx
  40ac47:	ss adc al,0xd7
  40ac4a:	call   0x781c:0x2b7aba
  40ac51:	dec    ebp
  40ac52:	and    bh,BYTE PTR [edi+edi*8]
  40ac55:	test   BYTE PTR [ecx+edi*8-0x4a],bl
  40ac59:	ja     0x40ac92
  40ac5b:	cmp    DWORD PTR [ebp+eax*8-0x5b],ecx
  40ac5f:	push   ds
  40ac60:	mov    eax,ds:0x8363ace5
  40ac65:	repz (bad) [eax-0x18b5220c]
  40ac6c:	test   al,0x9c
  40ac6e:	jp     0x40ac38
  40ac70:	ja     0x40acc8
  40ac72:	shl    DWORD PTR [edi],0x59
  40ac75:	mov    dh,0x4e
  40ac77:	popf   
  40ac78:	push   0x3a82ad66
  40ac7d:	jecxz  0x40ac44
  40ac7f:	push   esi
  40ac80:	nop
  40ac81:	and    al,0x78
  40ac83:	mov    bl,0x27
  40ac85:	rol    BYTE PTR [edi-0x4f],cl
  40ac88:	cmp    eax,eax
  40ac8a:	mov    ds:0x8c9ca6fa,eax
  40ac8f:	ret    0xd90b
  40ac92:	pop    ss
  40ac93:	aas    
  40ac94:	dec    eax
  40ac95:	jmp    0x40ac46
  40ac97:	jle    0x40ad10
  40ac99:	call   0xc571:0xd6c245e8
  40aca0:	je     0x40ac3b
  40aca2:	jle    0x40acd7
  40aca4:	xor    bh,ch
  40aca6:	jmp    0x9e3dcee3
  40acab:	mov    cl,0xe1
  40acad:	rcl    BYTE PTR [edx],cl
  40acaf:	scas   eax,DWORD PTR es:[edi]
  40acb0:	jg     0x40ac54
  40acb2:	outs   dx,DWORD PTR ds:[esi]
  40acb3:	sbb    DWORD PTR [ecx+edi*2],0xffffffd7
  40acb7:	call   0xbd08:0x9afcf246
  40acbe:	pop    ss
  40acbf:	in     eax,dx
  40acc0:	inc    esi
  40acc1:	jne    0x40ad1d
  40acc3:	cwde   
  40acc4:	xlat   BYTE PTR ds:[ebx]
  40acc5:	ret    
  40acc6:	fsubr  DWORD PTR [eax-0x6a06d22b]
  40accc:	xor    DWORD PTR [esi-0x44b25f51],ebp
  40acd2:	cdq    
  40acd3:	test   BYTE PTR [esi],dh
  40acd5:	test   eax,0x96b40a21
  40acda:	xchg   ebp,eax
  40acdb:	ja     0x40acc3
  40acdd:	push   0xffffffea
  40acdf:	jecxz  0x40ac82
  40ace1:	(bad)  
  40ace2:	retf   
  40ace3:	imul   esp,DWORD PTR [edx-0x34ed272e],0x11
  40acea:	(bad)
  40aced:	jge    0x40ac71
  40acef:	psrlq  mm0,QWORD PTR [edi]
  40acf2:	repnz xor esi,edx
  40acf5:	fs fsubr st,st(4)
  40acf8:	into   
  40acf9:	or     BYTE PTR [ebx+0x3e14b478],bh
  40acff:	mov    al,ds:0x39dfb74e
  40ad04:	and    ecx,esi
  40ad06:	and    al,0x14
  40ad08:	repnz push ecx
  40ad0a:	push   ebx
  40ad0b:	xchg   esp,eax
  40ad0c:	aam    0x89
  40ad0e:	inc    ebp
  40ad0f:	xchg   ebx,eax
  40ad10:	call   0x9b1f:0xa097ad9f
  40ad17:	outs   dx,DWORD PTR ds:[esi]
  40ad18:	(bad)  
  40ad19:	push   ss
  40ad1a:	jno    0x40ad8a
  40ad1c:	inc    esp
  40ad1d:	inc    eax
  40ad1e:	mov    ch,0x5c
  40ad20:	cs repz icebp 
  40ad23:	adc    al,0x75
  40ad25:	add    BYTE PTR [ebx],cl
  40ad27:	je     0x40ad05
  40ad29:	clc    
  40ad2a:	imul   edx,DWORD PTR [edx],0xffffffce
  40ad2d:	sbb    al,0x42
  40ad2f:	mov    eax,0xf72e1854
  40ad34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad35:	add    ebp,ebp
  40ad37:	test   eax,0x42ec3714
  40ad3c:	jnp    0x40acc8
  40ad3e:	in     eax,dx
  40ad3f:	cli    
  40ad40:	mov    es,ecx
  40ad42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad43:	mov    esp,0xd7039aed
  40ad48:	es pop ss
  40ad4a:	dec    edi
  40ad4b:	mov    BYTE PTR [eax],ch
  40ad4d:	cmp    BYTE PTR [edx-0x31f6f144],cl
  40ad53:	call   0xc719382d
  40ad58:	arpl   cx,bp
  40ad5a:	dec    eax
  40ad5b:	shr    bl,0x57
  40ad5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad5f:	lock cmp ch,dh
  40ad62:	mov    ecx,DWORD PTR [esp+eax*8-0xc]
  40ad66:	cmp    dl,BYTE PTR [eax+0x11]
  40ad69:	icebp  
  40ad6a:	pop    ds
  40ad6b:	dec    edi
  40ad6c:	cmp    DWORD PTR [ebx],ebp
  40ad6e:	sar    BYTE PTR [esp+esi*1-0x31],cl
  40ad72:	xlat   BYTE PTR ds:[ebx]
  40ad73:	rcl    DWORD PTR [edi+ecx*2],1
  40ad76:	xchg   esi,eax
  40ad77:	adc    eax,0xe577f4c1
  40ad7c:	iret   
  40ad7d:	test   eax,0x2c1736a7
  40ad82:	sahf   
  40ad83:	pop    ecx
  40ad84:	and    eax,0x4625a1d6
  40ad89:	inc    ecx
  40ad8a:	push   ds
  40ad8b:	lea    eax,[ebp-0x54085bc5]
  40ad91:	into   
  40ad92:	jnp    0x40ad7b
  40ad94:	inc    esi
  40ad95:	push   ds
  40ad96:	xchg   esp,eax
  40ad97:	retf   0x693a
  40ad9a:	mov    eax,DWORD PTR [ebp-0x14]
  40ad9d:	movzx  ecx,WORD PTR ds:0x42915f
  40ada4:	or     DWORD PTR ds:0x4291e7,ecx
  40adaa:	mov    ecx,DWORD PTR [ebp+0x8]
  40adad:	add    ecx,DWORD PTR [eax+0x1c]
  40adb0:	mov    DWORD PTR [ebp-0x14],ecx
  40adb3:	mov    DWORD PTR ds:0x4291d3,0x1651
  40adbd:	jmp    0x40d2ae
  40adc2:	mov    eax,DWORD PTR [ebp-0x2c]
  40adc5:	and    DWORD PTR ds:0x4291c3,0x0
  40adcf:	jmp    0x40ade1
  40add4:	mov    ecx,DWORD PTR ds:0x4291c3
  40adda:	inc    ecx
  40addb:	mov    DWORD PTR ds:0x4291c3,ecx
  40ade1:	cmp    DWORD PTR ds:0x4291c3,0x1e
  40ade8:	jae    0x40ae37
  40adee:	cmp    DWORD PTR ds:0x4291c3,0x10
  40adf5:	jbe    0x40ae37
  40adfb:	jmp    0x40ae18
  40ae00:	push   0x54af
  40ae05:	push   0x428000
  40ae0a:	push   0x42810e
  40ae0f:	push   DWORD PTR [ebp-0x10]
  40ae12:	call   DWORD PTR ds:0x42a85b
  40ae18:	cmp    DWORD PTR ds:0x4291c3,0xf
  40ae1f:	jne    0x40ae32
  40ae25:	mov    ecx,DWORD PTR ds:0x4291c3
  40ae2b:	inc    ecx
  40ae2c:	mov    DWORD PTR ds:0x4291c3,ecx
  40ae32:	jmp    0x40add4
  40ae37:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae3a:	add    ecx,DWORD PTR [eax+ebx*4]
  40ae3d:	and    DWORD PTR ds:0x4291df,0x0
  40ae47:	jmp    0x40ae57
  40ae4c:	mov    eax,ds:0x4291df
  40ae51:	inc    eax
  40ae52:	mov    ds:0x4291df,eax
  40ae57:	cmp    DWORD PTR ds:0x4291df,0x10
  40ae5e:	jae    0x40aea1
  40ae64:	cmp    DWORD PTR ds:0x4291df,0x5
  40ae6b:	jb     0x40aea1
  40ae71:	jmp    0x40ae84
  40ae76:	push   0x73ed
  40ae7b:	push   DWORD PTR [ebp-0xc]
  40ae7e:	call   DWORD PTR ds:0x42a85f
  40ae84:	cmp    DWORD PTR ds:0x4291df,0x4
  40ae8b:	jne    0x40ae9c
  40ae91:	mov    eax,ds:0x4291df
  40ae96:	inc    eax
  40ae97:	mov    ds:0x4291df,eax
  40ae9c:	jmp    0x40ae4c
  40aea1:	mov    DWORD PTR [ebp-0x28],ecx
  40aea4:	add    ecx,DWORD PTR ds:0x429183
  40aeaa:	mov    eax,DWORD PTR [ebp-0x4]
  40aead:	xor    DWORD PTR ds:0x42916b,ebx
  40aeb3:	mov    ecx,DWORD PTR [ebp-0x28]
  40aeb6:	xor    eax,esi
  40aeb8:	jmp    0x40d26c
  40aebd:	add    BYTE PTR [ecx],dh
  40aebf:	cld    
  40aec0:	sbb    esp,ecx
  40aec2:	nop
  40aec3:	and    BYTE PTR [eax],0xe5
  40aec6:	push   eax
  40aec7:	(bad)  [edi-0x4862f93]
  40aecd:	sub    al,0xf1
  40aecf:	add    DWORD PTR [ebx-0x7c7ca318],0x28
  40aed6:	mov    ebp,DWORD PTR [edi]
  40aed8:	(bad)  
  40aed9:	xlat   BYTE PTR ds:[ebx]
  40aeda:	xchg   edi,eax
  40aedb:	cmp    ecx,DWORD PTR [edx+edi*2-0x7f]
  40aedf:	cmp    ecx,0xffffffe5
  40aee2:	shl    BYTE PTR [esi-0x311c0603],0xe
  40aee9:	imul   ecx,DWORD PTR [edx+0x5f96861b],0x6e
  40aef0:	fistp  WORD PTR [ebp-0x29]
  40aef3:	dec    edx
  40aef4:	jmp    0x40af6e
  40aef6:	push   ss
  40aef7:	dec    eax
  40aef8:	inc    esi
  40aef9:	test   esi,0x67b9a5fc
  40aeff:	mov    al,ds:0x96df97fd
  40af04:	call   0x4e5c:0x619f1e9b
  40af0b:	cmp    al,0x2e
  40af0d:	mov    ebp,0x2aa8cd0f
  40af12:	(bad)  
  40af13:	call   0x6d5a9b04
  40af18:	pop    ds
  40af19:	rcl    BYTE PTR [edx],0xa2
  40af1c:	push   cs
  40af1d:	sahf   
  40af1e:	mov    edx,0xda2cea71
  40af23:	fild   DWORD PTR [edi-0x69319ae0]
  40af29:	adc    esp,esi
  40af2b:	cmp    dl,dh
  40af2d:	pusha  
  40af2e:	dec    ebp
  40af2f:	xchg   ecx,eax
  40af30:	inc    ebx
  40af31:	test   al,0xec
  40af33:	out    0xcc,eax
  40af35:	cs add eax,0x674e80a3
  40af3b:	push   cs
  40af3c:	dec    ebp
  40af3d:	and    bl,0x66
  40af40:	bound  ecx,QWORD PTR [ecx-0x28]
  40af43:	aaa    
  40af44:	xchg   esi,eax
  40af45:	shr    BYTE PTR [ecx+0x5d],1
  40af48:	mov    WORD PTR [edx],ss
  40af4a:	mov    WORD PTR [eax-0x7e0a656],?
  40af50:	xchg   esi,eax
  40af51:	jg     0x40afbb
  40af53:	outs   dx,BYTE PTR ds:[esi]
  40af54:	cdq    
  40af55:	adc    esp,esp
  40af57:	lahf   
  40af58:	shl    DWORD PTR [esi+edx*2-0x128c0b53],cl
  40af5f:	dec    edx
  40af60:	mov    dh,al
  40af62:	cdq    
  40af63:	mul    DWORD PTR [ecx-0x3d]
  40af66:	js     0x40aeff
  40af68:	or     cl,ah
  40af6a:	into   
  40af6b:	dec    esp
  40af6c:	bound  ebp,QWORD PTR [edx+eiz*8-0x57b7457a]
  40af73:	and    eax,0x1e29e441
  40af78:	add    ebp,esi
  40af7a:	enter  0xb831,0xef
  40af7e:	adc    eax,0x243002f6
  40af83:	push   esp
  40af84:	dec    esi
  40af85:	xor    BYTE PTR [eiz*1-0x42b7f282],dh
  40af8c:	xlat   BYTE PTR ds:[ebx]
  40af8d:	and    ch,BYTE PTR ds:0x53ae90ab
  40af93:	pop    eax
  40af94:	pop    es
  40af95:	adc    eax,0xb8f37280
  40af9a:	mov    bh,bl
  40af9c:	dec    ebp
  40af9d:	in     eax,0x4d
  40af9f:	mov    cl,0x29
  40afa1:	xchg   esp,eax
  40afa2:	or     DWORD PTR [edi-0x5a],ebp
  40afa5:	stos   BYTE PTR es:[edi],al
  40afa6:	push   0xc17f6e7f
  40afab:	rol    BYTE PTR [eax],0x4d
  40afae:	jmp    0x40af88
  40afb0:	xor    al,0x11
  40afb2:	sahf   
  40afb3:	pop    eax
  40afb4:	cmp    DWORD PTR [esi-0xcaf9531],ebp
  40afba:	test   bh,bh
  40afbc:	cmp    edi,DWORD PTR [ecx-0x4c2bdb04]
  40afc2:	cmp    cl,BYTE PTR [ebx+0x2c2a9a1b]
  40afc8:	stos   BYTE PTR es:[edi],al
  40afc9:	add    al,0xd1
  40afcb:	xchg   edx,eax
  40afcc:	pop    ecx
  40afcd:	xchg   BYTE PTR [ecx+0x4],cl
  40afd0:	ins    DWORD PTR es:[edi],dx
  40afd1:	les    edx,FWORD PTR [ebx-0x5a]
  40afd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afd6:	sbb    ebp,DWORD PTR [edx]
  40afd8:	(bad)  
  40afd9:	stc    
  40afda:	pop    ebp
  40afdb:	add    cl,BYTE PTR [eax]
  40afdd:	add    DWORD PTR [ecx+edi*8-0x67e4f6e9],esi
  40afe4:	add    al,0x89
  40afe6:	push   edi
  40afe7:	outs   dx,DWORD PTR ds:[esi]
  40afe8:	push   ebp
  40afe9:	not    DWORD PTR [edx-0x78]
  40afec:	sti    
  40afed:	jl     0x40b021
  40afef:	pop    ds
  40aff0:	fwait
  40aff1:	and    al,0xb
  40aff3:	mov    dl,0xca
  40aff5:	pop    ebx
  40aff6:	jg     0x40b01d
  40aff8:	jl     0x40affd
  40affa:	popf   
  40affb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40affc:	aam    0x13
  40affe:	mov    eax,ds:0x70bf5c3d
  40b003:	js     0x40b011
  40b005:	retf   0x9433
  40b008:	pop    esp
  40b009:	hlt    
  40b00a:	(bad)  
  40b00b:	fstp   DWORD PTR [edx]
  40b00d:	jbe    0x40afa4
  40b00f:	inc    dx
  40b011:	fsub   DWORD PTR [edi+0x2b]
  40b014:	sbb    ebx,esp
  40b016:	xor    ah,BYTE PTR [edx-0x4c05db13]
  40b01c:	(bad)  
  40b01d:	cmp    DWORD PTR [esi-0x7d903fae],esi
  40b023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b024:	sub    eax,DWORD PTR [ebx-0x5]
  40b027:	sbb    ebx,eax
  40b029:	jbe    0x40b096
  40b02b:	adc    ah,BYTE PTR [esi]
  40b02d:	mov    al,BYTE PTR ss:[esi]
  40b030:	ficomp WORD PTR [esi]
  40b032:	clc    
  40b033:	retf   
  40b034:	mov    ds:0x4c7e295c,eax
  40b039:	loopne 0x40afcc
  40b03b:	(bad)  
  40b03d:	dec    edi
  40b03e:	pusha  
  40b03f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b040:	in     eax,dx
  40b041:	pop    ebp
  40b042:	and    dh,BYTE PTR [eax]
  40b044:	cmc    
  40b045:	test   BYTE PTR [edx+eax*2+0x7a],dh
  40b049:	mov    ss,WORD PTR [edi-0x264e4330]
  40b04f:	mov    al,0x39
  40b051:	or     eax,0xf568d6aa
  40b056:	popa   
  40b057:	jae    0x40b0b2
  40b059:	xchg   ecx,eax
  40b05a:	cld    
  40b05b:	sbb    al,al
  40b05d:	int    0x63
  40b05f:	mov    cl,0x30
  40b061:	pushf  
  40b062:	scas   al,BYTE PTR es:[edi]
  40b063:	pop    edx
  40b064:	inc    ebx
  40b065:	mov    WORD PTR [esi],fs
  40b067:	mov    esi,0xe6ae7d3
  40b06c:	outs   dx,BYTE PTR ds:[esi]
  40b06d:	jge    0x40b0a4
  40b06f:	maskmovq mm7,(bad)
  40b070:	idiv   DWORD PTR [eax+0x4d]
  40b073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b074:	mov    dl,0xda
  40b076:	ss mov ch,0x6e
  40b079:	push   esp
  40b07a:	(bad)  
  40b07b:	xor    eax,0xffd06841
  40b080:	out    dx,eax
  40b081:	dec    ebx
  40b082:	lea    ecx,[edi]
  40b084:	and    DWORD PTR [edx-0x674d73d3],0xffffff8b
  40b08b:	test   BYTE PTR [ebx-0x4f],bl
  40b08e:	jg     0x40b051
  40b090:	jmp    FWORD PTR [edx]
  40b092:	xchg   ecx,eax
  40b093:	mov    bl,0x62
  40b095:	rcpps  xmm2,XMMWORD PTR [edi]
  40b098:	les    ebp,FWORD PTR [ecx-0x1b44239c]
  40b09e:	test   al,0x5a
  40b0a0:	fsub   st,st(7)
  40b0a2:	(bad)  
  40b0a3:	mov    bh,0x93
  40b0a5:	and    ebx,DWORD PTR ds:0xee35
  40b0aa:	xchg   ecx,eax
  40b0ab:	enter  0xcccb,0x84
  40b0af:	neg    BYTE PTR [edi]
  40b0b1:	scas   al,BYTE PTR es:[edi]
  40b0b2:	adc    al,BYTE PTR [ebx+esi*4+0x72]
  40b0b6:	push   es
  40b0b7:	loop   0x40b07c
  40b0b9:	push   ebp
  40b0ba:	fld    DWORD PTR [ebx]
  40b0bc:	in     eax,0x83
  40b0be:	call   0xb735029
  40b0c3:	pop    ebx
  40b0c4:	sub    esi,DWORD PTR [eax+0x22d07de0]
  40b0ca:	pop    edi
  40b0cb:	jae    0x40b0ac
  40b0cd:	pop    ebp
  40b0ce:	xor    BYTE PTR [ebx+eax*4],0xe5
  40b0d2:	cs daa 
  40b0d4:	or     eax,0x479dcd6b
  40b0d9:	sub    eax,0x3e770248
  40b0de:	cli    
  40b0df:	ror    DWORD PTR [ecx+edx*1+0x79],cl
  40b0e3:	jb     0x40b091
  40b0e5:	dec    edx
  40b0e6:	sub    al,0x8d
  40b0e8:	xchg   edx,eax
  40b0e9:	cmp    eax,0xc96741c1
  40b0ee:	adc    BYTE PTR [ebx],al
  40b0f0:	outs   dx,DWORD PTR ds:[esi]
  40b0f1:	loopne 0x40b0b1
  40b0f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0f4:	cmp    al,0xc2
  40b0f6:	cmp    eax,0x4fa18a6f
  40b0fb:	jcxz   0x40b09f
  40b0fe:	push   ds
  40b0ff:	dec    esi
  40b100:	pop    esi
  40b101:	sti    
  40b102:	(bad)  
  40b103:	pop    esp
  40b104:	adc    BYTE PTR [ebx],al
  40b106:	loopne 0x40b090
  40b108:	xor    ah,BYTE PTR [eax-0x12]
  40b10b:	mov    bh,bh
  40b10d:	sahf   
  40b10e:	out    dx,al
  40b10f:	inc    edi
  40b110:	cdq    
  40b111:	(bad)  
  40b112:	js     0x40b0a3
  40b114:	jge    0x40b0af
  40b116:	call   0xc7d3:0x3ae2996c
  40b11d:	xchg   edi,edx
  40b11f:	mov    WORD PTR [edi],gs
  40b121:	jmp    0x40b125
  40b123:	dec    edi
  40b124:	cmc    
  40b125:	retf   
  40b126:	out    0x12,eax
  40b128:	fimul  WORD PTR [edx+0x23]
  40b12b:	pusha  
  40b12c:	daa    
  40b12d:	mov    ecx,0x351cdbb3
  40b132:	stc    
  40b133:	je     0x40b1a9
  40b135:	push   edi
  40b136:	xchg   ebx,eax
  40b137:	fild   DWORD PTR [edx+0x5c66008a]
  40b13d:	jne    0x40b0de
  40b13f:	loopne 0x40b1ac
  40b141:	add    ebp,DWORD PTR [ecx-0x69b51d7d]
  40b147:	add    dl,dl
  40b149:	push   esi
  40b14a:	xor    cl,dl
  40b14c:	fldcw  WORD PTR [edx-0x7c05744c]
  40b152:	jl     0x40b189
  40b154:	dec    ebp
  40b155:	fmul   DWORD PTR [esi]
  40b157:	jle    0x40b186
  40b159:	mov    dl,BYTE PTR [ebx]
  40b15b:	fcomp  DWORD PTR [edi+0x3c5f143]
  40b161:	mov    ds:0xcbf20a2,al
  40b166:	test   ah,dh
  40b168:	and    ebp,esp
  40b16a:	mov    ds:0xfddec8f2,eax
  40b16f:	xchg   edx,eax
  40b170:	lea    ebx,[edi-0xe]
  40b173:	call   0xfa25b289
  40b178:	pushf  
  40b179:	out    0xd6,al
  40b17b:	sbb    eax,0x12878ef7
  40b180:	adc    BYTE PTR [esi+0x13],0x26
  40b184:	pop    ebx
  40b185:	sti    
  40b186:	sbb    al,BYTE PTR [ebx+0x11]
  40b189:	(bad)  
  40b18a:	dec    DWORD PTR [edi-0x5be4d5b9]
  40b190:	dec    ecx
  40b191:	mov    ds:0x7faad1bf,al
  40b196:	mov    ds:0x626a5de5,eax
  40b19b:	add    DWORD PTR [ecx],ecx
  40b19d:	xchg   DWORD PTR [esi+0x50],esp
  40b1a0:	jno    0x40b1b2
  40b1a2:	jbe    0x40b1e0
  40b1a4:	and    edx,esp
  40b1a6:	push   cs
  40b1a7:	mov    eax,0x1079a0f1
  40b1ac:	mov    bl,0x19
  40b1ae:	ja     0x40b155
  40b1b0:	daa    
  40b1b1:	(bad)
  40b1b5:	jmp    DWORD PTR [ebp-0x16435d2e]
  40b1bb:	mov    eax,ds:0x76fdab3b
  40b1c0:	fst    st(7)
  40b1c2:	fld    QWORD PTR [esi]
  40b1c4:	pushf  
  40b1c5:	jmp    0x40b168
  40b1c7:	add    esp,esp
  40b1c9:	out    0xda,al
  40b1cb:	ret    
  40b1cc:	xchg   edi,eax
  40b1cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1ce:	arpl   bp,si
  40b1d0:	jb     0x40b1e5
  40b1d2:	sub    BYTE PTR [eax-0x52],ch
  40b1d5:	jg     0x40b1d3
  40b1d7:	add    DWORD PTR [ebp+esi*8+0x36],ebp
  40b1db:	icebp  
  40b1dc:	xor    dl,BYTE PTR [eax]
  40b1de:	jmp    0x88f2:0xbce9e1e3
  40b1e5:	mov    edi,DWORD PTR [eax+eax*1]
  40b1e8:	pop    edi
  40b1e9:	ret    
  40b1ea:	pop    esp
  40b1eb:	dec    esi
  40b1ec:	mov    esp,DWORD PTR [edx-0x49]
  40b1ef:	ret    0x7377
  40b1f2:	mov    ds:0x2f4762b5,eax
  40b1f7:	rcl    cl,1
  40b1f9:	stos   BYTE PTR es:[edi],al
  40b1fa:	or     DWORD PTR [ebp+0x34],eax
  40b1fd:	imul   edx,DWORD PTR [ebp+0x60de4d47],0xc5c10704
  40b207:	pusha  
  40b208:	iret   
  40b209:	addr16 popa 
  40b20b:	mov    dh,0xc6
  40b20d:	ror    BYTE PTR [ebx+0x646bfbf9],0xdb
  40b214:	add    BYTE PTR [esi-0x45],ch
  40b217:	scas   eax,DWORD PTR es:[edi]
  40b218:	aas    
  40b219:	dec    eax
  40b21a:	test   al,0x60
  40b21c:	mov    BYTE PTR [eax+0x1b],cl
  40b21f:	repz inc eax
  40b221:	jmp    0xf1e7:0x1e1d3da
  40b228:	into   
  40b229:	jmp    0xf7673a4e
  40b22e:	add    BYTE PTR [eax],dl
  40b230:	nop
  40b231:	inc    ecx
  40b232:	(bad)  
  40b233:	std    
  40b234:	or     al,0x6e
  40b236:	xor    BYTE PTR [edi+edx*4],bl
  40b239:	out    dx,eax
  40b23a:	mov    ebx,DWORD PTR [edi+eax*8+0x4d]
  40b23e:	lds    ecx,FWORD PTR [esi-0x6f]
  40b241:	xchg   DWORD PTR [ebx+0x1e920287],ebp
  40b247:	push   ebx
  40b248:	sub    BYTE PTR [edi],dh
  40b24a:	mov    ds:0x7c90917d,al
  40b24f:	ss ds ins DWORD PTR es:[edi],dx
  40b252:	mov    al,ds:0x9f18afec
  40b257:	jle    0x40b2a2
  40b259:	repnz cwde 
  40b25b:	call   0x154912e
  40b260:	push   es
  40b261:	adc    DWORD PTR [esp+edx*4],ebp
  40b264:	inc    edx
  40b265:	inc    ecx
  40b266:	pop    ebp
  40b267:	cld    
  40b268:	xchg   edx,eax
  40b269:	not    DWORD PTR [ecx]
  40b26b:	push   ss
  40b26c:	stc    
  40b26d:	mov    bl,BYTE PTR [edi]
  40b26f:	sub    eax,0x3874709f
  40b274:	sahf   
  40b275:	jmp    0xfde1706b
  40b27a:	push   cs
  40b27b:	dec    eax
  40b27c:	repnz (bad) 
  40b27e:	cmp    edx,DWORD PTR ds:0xc2f4b74b
  40b284:	push   ebx
  40b285:	jne    0x40b25f
  40b287:	or     DWORD PTR [esi+0x5e872075],ebx
  40b28d:	push   ds
  40b28e:	sub    edi,eax
  40b290:	xchg   DWORD PTR [edi+eiz*8+0x43],ebp
  40b294:	mov    edx,0x419e8257
  40b299:	rcr    BYTE PTR [edi],0xbe
  40b29c:	mov    bl,BYTE PTR [esi+edi*8+0x42b00870]
  40b2a3:	xchg   DWORD PTR [edi],edx
  40b2a5:	mov    ebp,edx
  40b2a7:	inc    esp
  40b2a8:	pop    ds
  40b2a9:	xor    eax,0x9317f293
  40b2ae:	adc    eax,0x37df7aeb
  40b2b3:	mov    BYTE PTR [ecx-0x6116c183],0xc0
  40b2ba:	xor    dl,BYTE PTR [edi+0xf]
  40b2bd:	retf   0x52e7
  40b2c0:	mov    ds:0x10821fe6,eax
  40b2c5:	cmp    ecx,DWORD PTR [eax+0x77]
  40b2c8:	cmp    DWORD PTR [ebp+0x70],ebp
  40b2cb:	dec    esp
  40b2cc:	leave  
  40b2cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2ce:	xchg   esp,eax
  40b2cf:	add    ah,BYTE PTR [edi-0x5fa6166d]
  40b2d5:	pop    edx
  40b2d6:	fwait
  40b2d7:	dec    edx
  40b2d8:	pop    es
  40b2d9:	ins    DWORD PTR es:[edi],dx
  40b2da:	xlat   BYTE PTR ds:[ebx]
  40b2db:	xchg   esp,eax
  40b2dc:	xchg   DWORD PTR [eax+0x60da9416],eax
  40b2e2:	ficom  DWORD PTR [ebx]
  40b2e4:	jbe    0x40b2d2
  40b2e6:	sub    eax,esp
  40b2e8:	aaa    
  40b2e9:	dec    eax
  40b2ea:	jno    0x40b2d9
  40b2ec:	cli    
  40b2ed:	ds mov cl,0x8f
  40b2f0:	std    
  40b2f1:	mov    ch,0xfd
  40b2f3:	shl    BYTE PTR [ecx+0x63094f8],1
  40b2f9:	mov    al,0x90
  40b2fb:	retf   
  40b2fc:	rcl    BYTE PTR [edx+eiz*8-0x2b],0x33
  40b301:	cwde   
  40b302:	or     dl,BYTE PTR [edi+0x73c4143]
  40b308:	sub    DWORD PTR [ebx-0x52ff1a26],esp
  40b30e:	fdivr  QWORD PTR [eax]
  40b310:	gs cmp eax,0x59e176b6
  40b316:	sub    bh,BYTE PTR [edi+0x6a372d16]
  40b31c:	cmc    
  40b31d:	ffree  st(4)
  40b31f:	loope  0x40b352
  40b321:	xchg   bh,bh
  40b323:	add    al,0xc5
  40b325:	mov    dl,0x5c
  40b327:	xchg   esp,eax
  40b328:	aaa    
  40b329:	das    
  40b32a:	mov    edi,0x3c65c0ef
  40b32f:	jecxz  0x40b30f
  40b331:	shl    DWORD PTR [esp+edx*1-0x26],cl
  40b335:	pop    ebx
  40b336:	cdq    
  40b337:	mov    ecx,0xe53619eb
  40b33c:	arpl   WORD PTR cs:[eiz*1+0x7f10473],si
  40b344:	jmp    DWORD PTR [ecx]
  40b346:	mov    DWORD PTR [esi+0x68],eax
  40b349:	or     BYTE PTR [edx-0x5d],dh
  40b34c:	jno    0x40b2d2
  40b34e:	jecxz  0x40b3b2
  40b350:	xchg   ebx,eax
  40b351:	push   eax
  40b352:	loop   0x40b381
  40b354:	mov    edx,0xd6eefca8
  40b359:	cmp    eax,0x7b0b55bc
  40b35e:	sbb    bh,BYTE PTR [ecx-0xd9ab14d]
  40b364:	das    
  40b365:	or     dl,dl
  40b367:	mov    esp,edi
  40b369:	and    esi,DWORD PTR [ecx+eax*1+0x6d0eddc1]
  40b370:	xchg   ebx,eax
  40b371:	addr16 int 0x68
  40b374:	(bad)  
  40b375:	out    0xf7,al
  40b377:	jo     0x40b310
  40b379:	push   0xd14b5c00
  40b37e:	test   al,0x44
  40b380:	stos   BYTE PTR es:[edi],al
  40b381:	fucomip st,st(5)
  40b383:	test   BYTE PTR [edx],bl
  40b385:	ret    
  40b386:	daa    
  40b387:	pop    ss
  40b388:	inc    ecx
  40b389:	(bad)  
  40b38a:	mov    esp,0x62b1bbb6
  40b38f:	loopne 0x40b344
  40b391:	mov    esp,0x98332366
  40b396:	push   ds
  40b397:	fdiv   DWORD PTR [ebx-0x3]
  40b39a:	(bad)  [esi-0x3a43ff8b]
  40b3a0:	test   al,0x16
  40b3a2:	sahf   
  40b3a3:	jle    0x40b424
  40b3a5:	(bad)  
  40b3a6:	pop    esi
  40b3a7:	pop    ecx
  40b3a8:	xchg   ecx,eax
  40b3a9:	push   esi
  40b3aa:	ret    
  40b3ab:	daa    
  40b3ac:	(bad)
  40b3af:	and    DWORD PTR [ecx],edi
  40b3b1:	leave  
  40b3b2:	call   0x86ee:0x505c202d
  40b3b9:	pop    ss
  40b3ba:	(bad)  
  40b3bb:	fcom   DWORD PTR [edx+0x7b]
  40b3be:	jmp    FWORD PTR [esi-0x74]
  40b3c1:	fcom   DWORD PTR [esi+0x48]
  40b3c4:	xchg   esi,eax
  40b3c5:	cwde   
  40b3c6:	jle    0x40b3a6
  40b3c8:	ja     0x40b34f
  40b3ca:	xchg   ebp,eax
  40b3cb:	int    0x63
  40b3cd:	scas   al,BYTE PTR es:[edi]
  40b3ce:	ins    DWORD PTR es:[edi],dx
  40b3cf:	data16 sbb al,0x1f
  40b3d2:	das    
  40b3d3:	fidivr DWORD PTR [ebx]
  40b3d5:	jno    0x40b3b5
  40b3d7:	or     al,0xac
  40b3d9:	or     esi,esi
  40b3db:	int    0xf6
  40b3dd:	sbb    BYTE PTR [ecx+0x17],ah
  40b3e0:	scas   eax,DWORD PTR es:[edi]
  40b3e1:	and    esp,DWORD PTR [edx-0x1ed5654]
  40b3e7:	inc    eax
  40b3e8:	cmp    BYTE PTR [ebx-0x60199f2d],0x8d
  40b3ef:	add    bh,BYTE PTR [edx+0x7fb73584]
  40b3f5:	repnz add DWORD PTR [edx-0x1a78c942],esp
  40b3fc:	retf   0x9cf4
  40b3ff:	ins    BYTE PTR es:[edi],dx
  40b400:	es pop esp
  40b402:	adc    BYTE PTR [esi],dh
  40b404:	cmp    DWORD PTR [ebp+0x14175dc3],0xb56f5f4c
  40b40e:	fwait
  40b40f:	cs xor eax,0x2c3c3234
  40b415:	pushf  
  40b416:	xor    eax,0x4f533ee2
  40b41b:	sub    al,BYTE PTR [edi-0x4bb6fc50]
  40b421:	mov    edi,0x14560d25
  40b426:	jg     0x40b3ee
  40b428:	add    al,0xe4
  40b42a:	enter  0x8c6f,0xf5
  40b42e:	fidiv  WORD PTR [ecx-0x2656e799]
  40b434:	lahf   
  40b435:	popf   
  40b436:	push   edx
  40b437:	push   ss
  40b438:	imul   ebx,DWORD PTR [eax-0x44dca185],0xffffffd2
  40b43f:	jecxz  0x40b412
  40b441:	mov    ds:0xee7dc44e,eax
  40b446:	inc    ebp
  40b447:	jae    0x40b457
  40b449:	adc    ebx,DWORD PTR [eax-0x24aec291]
  40b44f:	pushf  
  40b450:	sbb    eax,0x631d2a44
  40b455:	xor    eax,0xccf34609
  40b45a:	sub    DWORD PTR [edi+0x77],esi
  40b45d:	xchg   esi,eax
  40b45e:	in     al,dx
  40b45f:	in     al,dx
  40b460:	inc    ebp
  40b461:	or     BYTE PTR [eax-0x48],bh
  40b464:	or     bp,WORD PTR [eax]
  40b467:	xchg   ebx,eax
  40b468:	mov    esp,0x6ed54773
  40b46d:	inc    ebx
  40b46e:	jnp    0x40b4d6
  40b470:	outs   dx,DWORD PTR ds:[esi]
  40b471:	repz push esp
  40b473:	jmp    0x40b44b
  40b475:	add    DWORD PTR [edi+edi*2+0x6d],eax
  40b479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b47a:	lahf   
  40b47b:	(bad)  
  40b47d:	fisubr WORD PTR [ebx]
  40b47f:	fld    DWORD PTR [esp+eax*1]
  40b482:	dec    edx
  40b483:	int    0x49
  40b485:	xlat   BYTE PTR ds:[ebx]
  40b486:	push   es
  40b487:	cmp    DWORD PTR [ebx-0x74],ecx
  40b48a:	jmp    0xcf1d:0x69126776
  40b491:	out    dx,al
  40b492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b494:	outs   dx,BYTE PTR ds:[esi]
  40b495:	dec    esp
  40b496:	ja     0x40b450
  40b498:	pop    ebx
  40b499:	mov    DWORD PTR [eax-0x23],0xb0561579
  40b4a0:	jnp    0x40b48f
  40b4a2:	pop    edi
  40b4a3:	cmp    esp,edi
  40b4a5:	shr    dh,cl
  40b4a7:	ss aaa 
  40b4a9:	call   0xedf398d5
  40b4ae:	outs   dx,BYTE PTR ds:[esi]
  40b4af:	ins    DWORD PTR es:[edi],dx
  40b4b0:	pop    ebx
  40b4b1:	cwde   
  40b4b2:	das    
  40b4b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4b4:	sub    BYTE PTR [ebx],al
  40b4b6:	ret    
  40b4b7:	jmp    0x40b4d9
  40b4b9:	mov    dl,0xf3
  40b4bb:	or     DWORD PTR [esi+0x1919beef],edx
  40b4c1:	jns    0x40b480
  40b4c3:	jg     0x40b4d7
  40b4c5:	pop    ebx
  40b4c6:	push   ebp
  40b4c7:	inc    edx
  40b4c8:	daa    
  40b4c9:	pop    ss
  40b4ca:	sub    BYTE PTR [esi-0xfb13d02],dh
  40b4d0:	jge    0x40b4bf
  40b4d2:	ins    BYTE PTR es:[edi],dx
  40b4d3:	push   esp
  40b4d4:	aam    0x27
  40b4d6:	adc    DWORD PTR ds:0x21d94381,ebp
  40b4dc:	push   esp
  40b4dd:	ret    
  40b4de:	and    DWORD PTR [edi+0x3f],0xffffffc2
  40b4e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4e3:	and    esi,DWORD PTR [edi+0x68a8be0]
  40b4e9:	js     0x40b477
  40b4eb:	(bad)  [edi-0x1dd9bdd8]
  40b4f1:	in     eax,0xa4
  40b4f3:	test   DWORD PTR [edx],eax
  40b4f5:	mov    ch,0x4b
  40b4f8:	fs cs (bad) 
  40b4fb:	loopne 0x40b54e
  40b4fd:	mov    esp,0xed073afb
  40b502:	enter  0xe524,0x2b
  40b506:	push   edx
  40b507:	dec    edx
  40b509:	sub    ch,bh
  40b50b:	mul    BYTE PTR [ecx+0x69]
  40b50e:	push   ebx
  40b50f:	fisttp QWORD PTR [edi-0xc]
  40b512:	scas   al,BYTE PTR es:[edi]
  40b513:	dec    ebp
  40b514:	push   ebp
  40b515:	mov    WORD PTR [ecx-0x23],?
  40b518:	inc    edi
  40b519:	dec    esp
  40b51a:	test   ebx,edx
  40b51c:	sbb    BYTE PTR [eax+ebx*8+0x1f],cl
  40b520:	loope  0x40b4a2
  40b522:	mov    esi,0xde618c3b
  40b527:	pop    ss
  40b528:	cmc    
  40b529:	sbb    DWORD PTR [edi-0x3ae58d1d],edx
  40b52f:	xor    al,0xda
  40b531:	(bad)  
  40b532:	add    al,dh
  40b534:	leave  
  40b535:	pop    esp
  40b536:	sub    al,0x82
  40b538:	sub    edx,DWORD PTR ds:[eax-0xc265b58]
  40b53f:	dec    edx
  40b540:	repz leave 
  40b542:	add    eax,0x10b30e78
  40b547:	int3   
  40b548:	clc    
  40b549:	mov    dl,0x1b
  40b54b:	xchg   ebp,eax
  40b54c:	mov    al,0xc4
  40b54e:	sar    BYTE PTR [eax+0x431f5288],0x3b
  40b555:	call   0x76c1469
  40b55a:	leave  
  40b55b:	sub    al,0xe5
  40b55d:	adc    esp,DWORD PTR [edx-0x4]
  40b560:	xchg   esi,eax
  40b561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b562:	dec    ebx
  40b563:	imul   eax,edx,0xffffff81
  40b566:	rol    BYTE PTR [eax+0x7f],1
  40b569:	outs   dx,DWORD PTR ds:[esi]
  40b56a:	mov    al,ds:0x7ec4dbca
  40b56f:	push   ss
  40b570:	lds    edi,FWORD PTR [edi]
  40b572:	imul   BYTE PTR [esi]
  40b574:	out    0xc3,eax
  40b576:	test   esp,eax
  40b578:	and    DWORD PTR [ecx-0x6c],eax
  40b57b:	xor    BYTE PTR [edx],0x1a
  40b57e:	sbb    BYTE PTR [eiz*4+0x1bb629de],ch
  40b585:	inc    edi
  40b586:	ds mov ah,0x9f
  40b589:	push   edi
  40b58a:	sub    DWORD PTR [ebx+0x37984d8],edi
  40b590:	sbb    edx,DWORD PTR [ebx+ebx*1-0x26687f4c]
  40b597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b598:	sbb    cl,BYTE PTR [esi]
  40b59a:	mov    ch,0xf
  40b59c:	les    edx,FWORD PTR [ebx+0x77]
  40b59f:	sbb    DWORD PTR [eax],ebp
  40b5a1:	mov    eax,0xfcf2274c
  40b5a6:	aam    0xed
  40b5a8:	mov    esp,0x5aefba7f
  40b5ad:	mov    cl,0x2f
  40b5af:	sub    eax,edi
  40b5b1:	pop    ecx
  40b5b2:	add    al,0x5c
  40b5b4:	dec    esi
  40b5b5:	(bad)  
  40b5b6:	out    dx,al
  40b5b7:	push   eax
  40b5b8:	(bad)  
  40b5b9:	hlt    
  40b5ba:	mov    cl,0xc1
  40b5bc:	data16 clc 
  40b5be:	cmp    BYTE PTR [ecx+0x0],dl
  40b5c1:	sbb    al,0xdb
  40b5c3:	jle    0x40b573
  40b5c5:	adc    BYTE PTR [edx],0x6c
  40b5c8:	rol    BYTE PTR [ecx-0x222e6cc7],cl
  40b5ce:	pop    ebx
  40b5cf:	dec    ebx
  40b5d0:	dec    eax
  40b5d1:	or     ax,0xd8c2
  40b5d5:	sbb    al,0xd6
  40b5d7:	inc    esp
  40b5d8:	mov    esp,DWORD PTR [eax]
  40b5da:	mov    esp,0xf8e36c50
  40b5df:	push   eax
  40b5e0:	gs xchg edx,eax
  40b5e2:	push   0xffffff9c
  40b5e4:	cmp    ebp,eax
  40b5e6:	outs   dx,DWORD PTR ds:[esi]
  40b5e7:	outs   dx,DWORD PTR ds:[esi]
  40b5e8:	mov    ah,0xb1
  40b5ea:	scas   al,BYTE PTR es:[edi]
  40b5eb:	inc    esp
  40b5ec:	jb     0x40b5b5
  40b5ee:	sbb    ch,BYTE PTR [ecx-0x291ae43a]
  40b5f4:	loopne 0x40b612
  40b5f6:	sbb    eax,0xbfae1322
  40b5fb:	pop    esi
  40b5fc:	jbe    0x40b63e
  40b5fe:	call   0xff1:0xcb0b55d9
  40b605:	fsubr  QWORD PTR [eax-0x8]
  40b608:	test   BYTE PTR [ecx+eax*1],bh
  40b60b:	cmp    dh,0x28
  40b60e:	pop    DWORD PTR [edx]
  40b610:	dec    ebx
  40b611:	jmp    0xbc4f380
  40b616:	adc    eax,0x90a43f73
  40b61b:	shl    dh,1
  40b61d:	and    al,0x90
  40b61f:	pop    edx
  40b620:	jns    0x40b677
  40b622:	test   DWORD PTR [ebx+ebx*4+0x37],edi
  40b626:	aaa    
  40b627:	ja     0x40b66f
  40b629:	add    DWORD PTR [ecx-0x4],ecx
  40b62c:	imul   edx,DWORD PTR [ebx+ecx*2+0x255b5e5d],0x7f
  40b634:	push   eax
  40b635:	sub    eax,0x6256c110
  40b63a:	test   DWORD PTR [edx],edx
  40b63c:	jg     0x40b62c
  40b63e:	mov    esp,0x947cc123
  40b643:	jnp    0x40b6b9
  40b645:	enter  0x4153,0xd1
  40b649:	pop    ss
  40b64a:	xchg   edx,eax
  40b64b:	test   al,0xd8
  40b64d:	inc    eax
  40b64e:	xchg   ebp,eax
  40b64f:	fdivrp st(2),st
  40b651:	add    esi,DWORD PTR [esp+ebx*1]
  40b654:	into   
  40b655:	jae    0x40b5e2
  40b657:	cmp    DWORD PTR [edi-0x16],edi
  40b65a:	inc    ebp
  40b65b:	sub    eax,0xe9b4fb9
  40b660:	aaa    
  40b661:	mov    ah,ch
  40b663:	or     ecx,esi
  40b665:	jmp    0xd202f66a
  40b66a:	pop    ebp
  40b66b:	loopne 0x40b668
  40b66d:	and    bl,BYTE PTR [edi-0x4f]
  40b670:	cmp    BYTE PTR [edx+0x19caa3ce],cl
  40b676:	jno    0x40b6e9
  40b678:	push   eax
  40b679:	(bad)  
  40b67a:	jno    0x40b631
  40b67c:	js     0x40b6bf
  40b67e:	xor    dh,bh
  40b680:	xor    eax,0x29551d1
  40b685:	ret    
  40b686:	inc    ax
  40b688:	jbe    0x40b6ba
  40b68a:	cmp    edx,DWORD PTR [edx+0x566a293e]
  40b690:	mov    cl,0xce
  40b692:	aas    
  40b693:	mov    bl,BYTE PTR [esi-0x5238d250]
  40b699:	test   eax,0x2484152
  40b69e:	cmp    esp,edx
  40b6a0:	loop   0x40b67b
  40b6a2:	push   eax
  40b6a3:	cmp    eax,0xd2dfeaf8
  40b6a8:	or     BYTE PTR ds:0xc0456c4d,dh
  40b6ae:	test   eax,0x86dc52d3
  40b6b3:	ret    
  40b6b4:	stos   DWORD PTR es:[edi],eax
  40b6b5:	jb     0x40b6c3
  40b6b7:	push   esi
  40b6b8:	sbb    al,0xca
  40b6ba:	sbb    ch,ah
  40b6bc:	leave  
  40b6bd:	stos   DWORD PTR es:[edi],eax
  40b6be:	lahf   
  40b6bf:	lsl    edi,WORD PTR ds:0x84924d1d
  40b6c6:	xchg   ebp,eax
  40b6c7:	cdq    
  40b6c8:	or     ch,BYTE PTR [edx-0x4691f45a]
  40b6ce:	add    al,ch
  40b6d0:	xchg   BYTE PTR [eax],bh
  40b6d2:	ins    DWORD PTR es:[edi],dx
  40b6d3:	pop    ebp
  40b6d4:	adc    bl,BYTE PTR [esi-0x5dab48c5]
  40b6da:	add    BYTE PTR [eax],0x28
  40b6dd:	es in  al,dx
  40b6df:	aad    0xda
  40b6e1:	inc    esp
  40b6e2:	sahf   
  40b6e3:	jmp    0x43bd:0xb9ea5319
  40b6ea:	mov    edi,0x51760446
  40b6ef:	lods   eax,DWORD PTR ds:[esi]
  40b6f0:	push   0x9eafa402
  40b6f5:	dec    esp
  40b6f6:	idiv   BYTE PTR [edx-0x2f]
  40b6f9:	sub    al,0x65
  40b6fb:	mov    al,ds:0xd572ae5b
  40b700:	mov    ah,0xf
  40b702:	mov    dh,0x5c
  40b704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b705:	jae    0x40b6d7
  40b707:	add    bh,ah
  40b709:	aam    0x26
  40b70b:	cmp    eax,0xb3295e19
  40b710:	mov    cl,0x7c
  40b712:	fistp  QWORD PTR [esi+eiz*2-0x6e7e0af7]
  40b719:	(bad)  
  40b71a:	xchg   edi,eax
  40b71b:	jne    0x40b6ca
  40b71d:	sub    BYTE PTR [edi-0x317993b9],ch
  40b723:	(bad)  
  40b725:	xor    ecx,DWORD PTR [eax+eiz*1+0x3e]
  40b729:	pop    ds
  40b72a:	addr16 nop
  40b72c:	cmp    ebp,DWORD PTR [ecx+0x1b55389f]
  40b732:	jbe    0x40b727
  40b734:	dec    ecx
  40b735:	popa   
  40b736:	inc    edx
  40b737:	cdq    
  40b738:	js     0x40b7b1
  40b73a:	push   0x48
  40b73c:	jecxz  0x40b706
  40b73e:	div    BYTE PTR [eax]
  40b740:	xchg   esp,eax
  40b741:	or     al,0x7
  40b743:	mov    eax,0xde29aafb
  40b748:	in     al,0xf8
  40b74a:	lds    ebp,FWORD PTR [edi+0x5e29735e]
  40b750:	inc    ebx
  40b751:	push   ds
  40b752:	push   ecx
  40b753:	(bad)  
  40b755:	jp     0x40b7ae
  40b757:	pusha  
  40b758:	iret   
  40b759:	or     ch,bl
  40b75b:	pushf  
  40b75c:	xchg   ebx,eax
  40b75d:	lods   eax,DWORD PTR ds:[esi]
  40b75e:	fidiv  DWORD PTR [ecx+0x71]
  40b761:	loop   0x40b7a0
  40b763:	or     BYTE PTR [ebx-0x72771cc9],cl
  40b769:	sbb    esi,DWORD PTR [edi-0x42deef3]
  40b76f:	and    ebx,ebp
  40b771:	or     edx,DWORD PTR [esi*4-0x25442056]
  40b778:	xchg   esi,eax
  40b779:	sub    al,0x9a
  40b77b:	mov    DWORD PTR [edi-0x53],edx
  40b77e:	int3   
  40b77f:	outs   dx,DWORD PTR ds:[esi]
  40b780:	mov    cs,WORD PTR [edx+edi*8]
  40b783:	jmp    0x36147c3a
  40b788:	in     al,0xaf
  40b78a:	lds    esp,FWORD PTR [eax+ebp*8-0x9]
  40b78e:	sub    DWORD PTR [eax+eiz*8-0x30a8135d],ebx
  40b795:	and    eax,0x2a131721
  40b79a:	pop    edi
  40b79b:	in     eax,dx
  40b79c:	jmp    0x213d:0x200a2ee5
  40b7a3:	mov    bl,BYTE PTR [eax+0x343bc6ab]
  40b7a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7aa:	loope  0x40b802
  40b7ac:	push   ebx
  40b7ad:	sbb    ch,dh
  40b7af:	mov    esi,0x5442d814
  40b7b4:	xchg   esp,eax
  40b7b5:	jecxz  0x40b7b6
  40b7b7:	and    BYTE PTR [eax-0x3b],0x8f
  40b7bb:	mov    WORD PTR [edi],fs
  40b7bd:	pop    ecx
  40b7be:	xchg   edx,eax
  40b7bf:	jmp    0x44d3540f
  40b7c4:	dec    esi
  40b7c5:	inc    ebp
  40b7c6:	inc    esp
  40b7c7:	pushf  
  40b7c8:	inc    edi
  40b7c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7ca:	push   cs
  40b7cb:	mov    esp,ebx
  40b7cd:	loop   0x40b75a
  40b7cf:	lea    ecx,fs:[edx]
  40b7d2:	push   ecx
  40b7d3:	xchg   DWORD PTR [esp+ebp*1+0x2286a5ab],edx
  40b7da:	out    0x20,al
  40b7dc:	mov    eax,0x76247047
  40b7e1:	pop    ds
  40b7e2:	cmp    DWORD PTR [eax],edx
  40b7e4:	push   0xffffffdd
  40b7e6:	imul   ecx,ebp,0x1c
  40b7e9:	add    eax,0x303edf81
  40b7ee:	pop    edx
  40b7ef:	or     DWORD PTR [ecx+0x4c4a0b89],eax
  40b7f5:	daa    
  40b7f6:	dec    ebp
  40b7f7:	aaa    
  40b7f8:	call   0x911d183d
  40b7fd:	mov    esi,0xf871f23
  40b802:	sbb    edi,0x1e
  40b805:	inc    esi
  40b806:	push   0xffffffb5
  40b808:	inc    edi
  40b809:	pop    esp
  40b80a:	add    bh,BYTE PTR [ebp+0x72]
  40b80d:	mov    dl,0x7d
  40b80f:	dec    edi
  40b810:	pusha  
  40b811:	in     eax,0x6
  40b813:	mov    esi,DWORD PTR [edx]
  40b815:	cli    
  40b816:	daa    
  40b817:	push   es
  40b818:	ja     0x40b7ab
  40b81a:	jge    0x40b7bc
  40b81c:	std    
  40b81d:	dec    ebx
  40b81e:	mov    bh,0x70
  40b820:	jg     0x40b7d8
  40b822:	sti    
  40b823:	dec    ebx
  40b824:	mov    ch,0xbf
  40b826:	pushf  
  40b827:	pop    edi
  40b828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b829:	data16 sahf 
  40b82b:	fdiv   QWORD PTR ds:0xb7fcd317
  40b831:	leave  
  40b832:	fs sub al,0xc4
  40b835:	lods   al,BYTE PTR ds:[esi]
  40b836:	popa   
  40b837:	push   0xb8950f10
  40b83c:	lods   al,BYTE PTR ds:[esi]
  40b83d:	xchg   esi,eax
  40b83e:	add    BYTE PTR ds:0xd7cc65a1,bl
  40b844:	jno    0x40b8b5
  40b846:	cli    
  40b847:	and    eax,0x869ec193
  40b84c:	inc    edx
  40b84d:	scas   eax,DWORD PTR es:[edi]
  40b84e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b84f:	and    dl,BYTE PTR [edx-0x2a]
  40b852:	or     dh,BYTE PTR [edx+0x75525c0d]
  40b858:	xchg   esi,eax
  40b859:	cmc    
  40b85a:	mov    esi,0x89fca56
  40b85f:	mov    eax,DWORD PTR [ecx]
  40b861:	lock fisttp QWORD PTR [eax-0x27]
  40b865:	inc    edx
  40b866:	(bad)  
  40b867:	addr16 js 0x40b845
  40b86a:	xchg   ebp,eax
  40b86b:	mov    ah,0xef
  40b86d:	inc    ebp
  40b86e:	sbb    al,0xd3
  40b870:	(bad)  
  40b871:	jnp    0x40b87e
  40b873:	enter  0x15c2,0x3d
  40b877:	add    al,0xd8
  40b879:	sbb    eax,0x435cb87c
  40b87e:	in     al,dx
  40b87f:	loope  0x40b8ce
  40b881:	push   esp
  40b882:	and    al,0xe6
  40b884:	cdq    
  40b885:	cmp    eax,0x65b5bd93
  40b88a:	and    DWORD PTR [ecx-0x24075929],edx
  40b890:	div    DWORD PTR ds:0x6c306f51
  40b896:	loope  0x40b827
  40b898:	(bad)  
  40b899:	gs pop edi
  40b89b:	xlat   BYTE PTR ds:[ebx]
  40b89c:	sub    al,0x53
  40b89e:	add    eax,0x35fb23b4
  40b8a3:	and    ebx,DWORD PTR [eax+0x53]
  40b8a6:	or     BYTE PTR [edx],ah
  40b8a8:	mov    edx,0x4e58ff14
  40b8ad:	dec    eax
  40b8ae:	or     edx,DWORD PTR [eax]
  40b8b0:	dec    edx
  40b8b1:	pop    edx
  40b8b2:	push   ds
  40b8b3:	push   esp
  40b8b4:	xlat   BYTE PTR ds:[ebx]
  40b8b5:	xchg   ebx,eax
  40b8b6:	or     DWORD PTR [edx],esp
  40b8b8:	dec    edi
  40b8b9:	dec    eax
  40b8ba:	icebp  
  40b8bb:	mov    dl,0x66
  40b8bd:	in     al,0x3d
  40b8bf:	dec    ecx
  40b8c0:	mov    cs:0xbe9a3e51,eax
  40b8c6:	je     0x40b8c4
  40b8c8:	pop    edi
  40b8c9:	mov    eax,ds:0xb9f3360e
  40b8ce:	or     esi,ebx
  40b8d0:	dec    esi
  40b8d1:	bound  edx,QWORD PTR [ecx]
  40b8d3:	mov    ds:0x5e4f0688,eax
  40b8d8:	ins    BYTE PTR es:[edi],dx
  40b8d9:	cmp    al,0x39
  40b8db:	and    cl,al
  40b8dd:	add    DWORD PTR [eax-0x30],ebp
  40b8e0:	fsubrp st(7),st
  40b8e2:	out    dx,eax
  40b8e3:	fldenv [esi+0x5c]
  40b8e6:	and    BYTE PTR [ebp-0x20],0x5d
  40b8ea:	test   DWORD PTR ds:0x6fa8e155,0x3ba840f
  40b8f4:	ss in  eax,0xd3
  40b8f7:	inc    ebx
  40b8f8:	inc    esi
  40b8f9:	push   es
  40b8fa:	cli    
  40b8fb:	pop    ecx
  40b8fc:	mov    dh,0xa8
  40b8fe:	pop    edi
  40b8ff:	xchg   ebx,eax
  40b900:	pop    ds
  40b901:	out    0x4e,al
  40b903:	lahf   
  40b904:	sbb    BYTE PTR [ebx+eiz*8+0x5810821b],ch
  40b90b:	mov    esi,0x4eef2310
  40b910:	bound  esp,QWORD PTR [esi]
  40b912:	outs   dx,BYTE PTR ds:[esi]
  40b913:	mov    ch,0x29
  40b915:	sbb    cl,0x93
  40b918:	cli    
  40b919:	lea    edi,[ebp-0x4b]
  40b91c:	pop    ss
  40b91d:	fcmovnbe st,st(0)
  40b91f:	call   0xbed05736
  40b924:	enter  0xf05b,0xac
  40b928:	out    0xe,al
  40b92a:	cmp    esi,DWORD PTR [ebx-0xd]
  40b92d:	add    eax,0x941cf692
  40b932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b933:	test   al,0x8f
  40b935:	pop    es
  40b936:	lahf   
  40b937:	cmc    
  40b938:	mov    al,0x34
  40b93a:	mov    cl,0x4
  40b93c:	aam    0x41
  40b93e:	jnp    0x40b9b9
  40b940:	jno    0x40b9a1
  40b942:	idiv   ecx
  40b944:	mov    ebp,0x58e8515c
  40b949:	xchg   ebx,eax
  40b94a:	push   edi
  40b94b:	mov    eax,0x732cac15
  40b950:	mov    dl,0x1c
  40b952:	aad    0xaa
  40b954:	jo     0x40b9c2
  40b956:	sbb    BYTE PTR [edi],ch
  40b958:	pop    ds
  40b959:	aaa    
  40b95a:	into   
  40b95b:	xor    ebx,ecx
  40b95d:	push   eax
  40b95e:	and    BYTE PTR [edx],0x0
  40b961:	mov    edx,0x17b87242
  40b966:	dec    eax
  40b967:	cmp    esi,DWORD PTR [edi-0x4ced26ec]
  40b96d:	jle    0x40b9d4
  40b96f:	sbb    bl,BYTE PTR [edx+0x54]
  40b972:	jb     0x40b9b6
  40b974:	ins    BYTE PTR es:[edi],dx
  40b975:	mov    al,ds:0x43a25627
  40b97a:	test   al,0xce
  40b97c:	lds    ecx,FWORD PTR [ecx-0x70d715e7]
  40b982:	lahf   
  40b983:	mov    di,0x2acd
  40b987:	loopne 0x40b9fc
  40b989:	mov    esp,0xa548a0f9
  40b98e:	push   esp
  40b98f:	(bad)  
  40b991:	push   esp
  40b992:	cmp    dh,BYTE PTR ds:0xea80c31e
  40b998:	sbb    BYTE PTR [edx+0x183097cd],dl
  40b99e:	add    DWORD PTR [ebp+0x52],esi
  40b9a1:	inc    edi
  40b9a2:	sub    BYTE PTR [ecx+0x70],bl
  40b9a5:	jp     0x40b9c4
  40b9a7:	int3   
  40b9a8:	mov    ah,BYTE PTR [esi-0x64b8cef0]
  40b9ae:	add    dh,dl
  40b9b0:	jecxz  0x40b95e
  40b9b2:	adc    DWORD PTR [ebx-0x4b106f15],0x44e15f27
  40b9bc:	in     al,dx
  40b9bd:	jmp    0xc23:0xee9adb46
  40b9c4:	mov    ds:0x668d8d19,al
  40b9c9:	cs test eax,0x36afccec
  40b9cf:	fst    QWORD PTR [ebx+edi*1-0xb]
  40b9d3:	inc    esp
  40b9d4:	pop    sp
  40b9d6:	dec    edx
  40b9d7:	lahf   
  40b9d8:	inc    ebp
  40b9d9:	inc    ebx
  40b9da:	jnp    0x40b99b
  40b9dc:	loopne 0x40b995
  40b9de:	cmp    al,0x7d
  40b9e0:	xchg   edx,eax
  40b9e1:	arpl   WORD PTR [ecx+0x67],bx
  40b9e4:	or     DWORD PTR [eax-0x1c],esi
  40b9e7:	in     eax,0x3d
  40b9e9:	inc    edi
  40b9ea:	std    
  40b9eb:	into   
  40b9ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9ed:	push   esp
  40b9ee:	mov    ebx,0x3b624ab4
  40b9f3:	jne    0x40ba23
  40b9f5:	or     edi,DWORD PTR [edx+eiz*2-0x73e44bd2]
  40b9fc:	and    DWORD PTR [ebx+0x439cc419],ebp
  40ba02:	jmp    0xb362:0xe63758d1
  40ba09:	cmp    eax,0xfd9ce21f
  40ba0e:	mov    fs,ebx
  40ba10:	inc    ebp
  40ba11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba12:	xchg   BYTE PTR [ebx],dh
  40ba14:	mov    DWORD PTR ds:0x1ad092e8,ebp
  40ba1a:	fdiv   QWORD PTR [edx]
  40ba1c:	lock fstp TBYTE PTR [edi]
  40ba1f:	sbb    BYTE PTR [edx-0x649fdb59],ch
  40ba25:	sbb    bh,BYTE PTR [edi-0x2b]
  40ba28:	mov    ah,0xb7
  40ba2a:	int    0xa2
  40ba2c:	in     eax,dx
  40ba2d:	cld    
  40ba2e:	add    DWORD PTR [esi],0xa41f6307
  40ba34:	push   esp
  40ba35:	jns    0x40ba43
  40ba37:	or     DWORD PTR [ebp-0x7f07c909],edx
  40ba3d:	xor    esp,DWORD PTR gs:[ecx]
  40ba40:	arpl   WORD PTR [edi],dx
  40ba42:	inc    esi
  40ba43:	xchg   edx,eax
  40ba44:	bound  ecx,QWORD PTR [edi+0x9]
  40ba47:	fnstcw WORD PTR [eax-0x469a2915]
  40ba4d:	test   al,0x43
  40ba4f:	jno    0x40bac2
  40ba51:	in     al,dx
  40ba52:	jl     0x40b9ff
  40ba54:	inc    edx
  40ba55:	cmc    
  40ba56:	and    eax,0x9e6c0de5
  40ba5b:	das    
  40ba5c:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba5e:	and    BYTE PTR [eax],0xef
  40ba61:	ss push ds
  40ba63:	mov    bh,0x8b
  40ba65:	icebp  
  40ba66:	neg    DWORD PTR [edx-0x74a3fe05]
  40ba6c:	cmp    DWORD PTR [eax],esi
  40ba6e:	out    0x53,al
  40ba70:	popf   
  40ba71:	and    ah,BYTE PTR [eax+ebp*4+0x6883eb31]
  40ba78:	pop    ds
  40ba79:	and    dl,BYTE PTR [edx-0x5fdd2595]
  40ba7f:	loopne 0x40ba70
  40ba81:	sbb    esi,ebx
  40ba83:	fadd   st,st(0)
  40ba85:	ficom  DWORD PTR [ebp+0x1c4a6521]
  40ba8b:	xor    edx,ecx
  40ba8d:	clc    
  40ba8e:	push   esp
  40ba8f:	popf   
  40ba90:	dec    ebp
  40ba91:	lock ss stos DWORD PTR es:[edi],eax
  40ba94:	std    
  40ba95:	into   
  40ba96:	add    eax,0xb9949daa
  40ba9b:	fs xor eax,0x2f3d30ad
  40baa1:	inc    esp
  40baa2:	ret    
  40baa3:	outs   dx,BYTE PTR ds:[esi]
  40baa4:	cmp    eax,0x9f041df2
  40baa9:	mov    BYTE PTR [edi-0x57],bh
  40baac:	ins    DWORD PTR es:[edi],dx
  40baad:	sub    DWORD PTR [edx],0xecdd57f0
  40bab3:	mov    cl,0x3d
  40bab5:	push   cs
  40bab6:	test   eax,0x62692dbd
  40babb:	mov    al,ds:0x834cfc7a
  40bac0:	sub    esp,DWORD PTR [ebx]
  40bac2:	aaa    
  40bac3:	sub    cl,bh
  40bac5:	sub    esp,DWORD PTR [edx-0xde5ea8d]
  40bacb:	(bad)  
  40bacc:	test   BYTE PTR [edx+0x7df9c4ad],ah
  40bad2:	mov    edi,0x3350ff56
  40bad7:	bound  edx,QWORD PTR [eax-0x1d]
  40bada:	daa    
  40badb:	fcomp  QWORD PTR [ebp-0x16576655]
  40bae1:	(bad)  
  40bae2:	push   ebx
  40bae3:	adc    DWORD PTR [edi-0x29],esi
  40bae6:	js     0x40bac9
  40bae8:	scas   eax,DWORD PTR es:[edi]
  40bae9:	mov    DWORD PTR [ebx],ebp
  40baeb:	loop   0x40bb31
  40baed:	mov    ch,0xe2
  40baef:	aad    0xad
  40baf1:	mov    ebx,esi
  40baf3:	mov    ch,al
  40baf5:	jmp    0xd159:0xe30c103e
  40bafc:	jae    0x40bb43
  40bafe:	mov    ch,0xfe
  40bb00:	inc    edi
  40bb01:	push   ecx
  40bb02:	(bad)  
  40bb03:	cld    
  40bb04:	push   ss
  40bb05:	dec    edx
  40bb06:	xchg   BYTE PTR [edi],bl
  40bb08:	add    BYTE PTR [eax-0x7ded9d5c],cl
  40bb0e:	mov    ds:0x4b2c444d,eax
  40bb13:	pusha  
  40bb14:	mov    edx,0xc4d6f566
  40bb19:	inc    ecx
  40bb1a:	sub    BYTE PTR [ebp+0x6b],bl
  40bb1d:	dec    ebp
  40bb1e:	xchg   ebp,eax
  40bb1f:	bound  edx,QWORD PTR [edx-0x3c5edeec]
  40bb25:	mov    ebp,0x640fb3c6
  40bb2a:	fld    st(2)
  40bb2c:	mov    ecx,0x507d915c
  40bb31:	pop    es
  40bb32:	sbb    DWORD PTR [ebx-0x54566bcc],0xc7f6852c
  40bb3c:	mov    cl,0xa4
  40bb3e:	cmp    BYTE PTR [ebx+0x45c3c3ea],cl
  40bb44:	std    
  40bb45:	xor    al,0xca
  40bb47:	push   ss
  40bb48:	or     BYTE PTR [ecx-0x33d33034],0xb2
  40bb4f:	jbe    0x40bbbe
  40bb51:	pop    ss
  40bb52:	lds    ecx,FWORD PTR [ecx]
  40bb54:	add    al,0x23
  40bb56:	jge    0x40bb54
  40bb58:	shr    DWORD PTR [edx],1
  40bb5a:	scas   al,BYTE PTR es:[edi]
  40bb5b:	cmp    eax,0xb6e4071d
  40bb60:	int3   
  40bb61:	test   DWORD PTR [ecx],ebp
  40bb63:	push   edx
  40bb64:	fdiv   QWORD PTR ds:0x4b796ce2
  40bb6a:	sbb    BYTE PTR [ecx-0xe6d87ce],ch
  40bb70:	or     al,BYTE PTR [eax+0x77]
  40bb73:	sub    ah,BYTE PTR [eax]
  40bb75:	les    esp,FWORD PTR [ecx+0x4328aecb]
  40bb7b:	pop    edx
  40bb7c:	jbe    0x40bb2c
  40bb7e:	call   0xda4fb9aa
  40bb83:	popf   
  40bb84:	adc    bl,BYTE PTR [edi]
  40bb86:	scas   eax,DWORD PTR es:[edi]
  40bb87:	dec    edi
  40bb88:	sub    BYTE PTR [edx-0x7d],al
  40bb8b:	mov    ebx,0xff529882
  40bb90:	adc    esp,DWORD PTR [ebp+0x4dfc0cae]
  40bb96:	push   ebx
  40bb97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb98:	out    dx,al
  40bb99:	(bad)  [edi+0x2a]
  40bb9c:	outs   dx,BYTE PTR ds:[esi]
  40bb9d:	add    ah,ah
  40bb9f:	dec    BYTE PTR ss:[ebx-0x68]
  40bba3:	ss mov eax,0x9e3ae3c0
  40bba9:	and    eax,0x6f49ef2e
  40bbae:	(bad)  
  40bbaf:	cld    
  40bbb0:	scas   al,BYTE PTR es:[edi]
  40bbb1:	(bad)  [ebx+edx*1]
  40bbb4:	repnz rcr BYTE PTR [edi+0x143515f5],1
  40bbbb:	mov    dh,0xd6
  40bbbd:	inc    edx
  40bbbe:	imul   edi,ebp,0x15
  40bbc1:	popa   
  40bbc2:	ins    BYTE PTR es:[edi],dx
  40bbc3:	sbb    al,0x5
  40bbc6:	sub    dh,BYTE PTR [ebx]
  40bbc8:	mov    cl,0x2a
  40bbca:	ror    DWORD PTR [esp+esi*8+0x2dc866fd],cl
  40bbd1:	cwde   
  40bbd2:	stos   DWORD PTR es:[edi],eax
  40bbd3:	(bad)  
  40bbd4:	pop    edi
  40bbd5:	mov    eax,ds:0xc6f50773
  40bbda:	arpl   dx,bp
  40bbdc:	je     0x40bbf9
  40bbde:	xor    al,0xf
  40bbe0:	adc    DWORD PTR [eax],0x23f90b9f
  40bbe6:	mov    WORD PTR ds:0x7ffdbe41,es
  40bbec:	shl    ch,0xb7
  40bbef:	dec    edx
  40bbf0:	repz or eax,0xe3813e92
  40bbf6:	lds    ecx,FWORD PTR [bp+di+0x1c]
  40bbfa:	js     0x40bc74
  40bbfc:	jns    0x40bb8f
  40bbfe:	xor    al,0x5d
  40bc00:	scas   al,BYTE PTR es:[edi]
  40bc01:	ss push cs
  40bc03:	cmp    bh,BYTE PTR [ebp+0x1a]
  40bc06:	loopne 0x40bc28
  40bc08:	sbb    BYTE PTR [esi+0x4],al
  40bc0b:	gs sub eax,0xed3bff76
  40bc11:	xor    eax,0x8503f0b2
  40bc16:	inc    ebp
  40bc17:	loope  0x40bc1b
  40bc19:	test   ah,0x92
  40bc1c:	xchg   edx,eax
  40bc1d:	repz and ebx,DWORD PTR [ebx+0x74bfe7b]
  40bc24:	and    dh,bh
  40bc26:	out    0xe5,al
  40bc28:	push   ds
  40bc29:	push   eax
  40bc2a:	stos   BYTE PTR es:[edi],al
  40bc2b:	inc    ebx
  40bc2c:	ret    0x213
  40bc2f:	and    bl,dl
  40bc31:	inc    edi
  40bc32:	mov    ebx,DWORD PTR [eax+0xf38822f]
  40bc38:	cmp    al,cl
  40bc3a:	adc    WORD PTR [edx+0x49],dx
  40bc3e:	mov    ecx,0xe9380b5d
  40bc43:	pop    esi
  40bc44:	xor    BYTE PTR [edx+0x12d4c037],0x28
  40bc4b:	fimul  WORD PTR [ebx-0x7f]
  40bc4e:	loope  0x40bbf4
  40bc50:	push   esp
  40bc51:	jp     0x40bc0d
  40bc53:	add    eax,0xa656c605
  40bc58:	out    0x2c,al
  40bc5a:	sub    esi,DWORD PTR [bp+si+0x4]
  40bc5e:	jne    0x40bc56
  40bc60:	push   es
  40bc61:	imul   ch
  40bc63:	and    al,0x9f
  40bc65:	xchg   ebx,eax
  40bc66:	pushf  
  40bc67:	mov    eax,ds:0xa4913c50
  40bc6c:	and    al,0x8f
  40bc6e:	scas   al,BYTE PTR es:[edi]
  40bc6f:	lock adc eax,0xe9045bbb
  40bc75:	jmp    0xa250dd56
  40bc7a:	leave  
  40bc7b:	(bad)  
  40bc7c:	out    dx,al
  40bc7d:	xor    eax,0xf32fdef0
  40bc82:	test   eax,0x149abf80
  40bc87:	leave  
  40bc88:	cmp    DWORD PTR [eax+0x6636a68f],edx
  40bc8e:	rcl    DWORD PTR [ebp+0x66bccc0e],cl
  40bc94:	push   esp
  40bc95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc96:	or     DWORD PTR [ebx-0x68],eax
  40bc99:	stos   DWORD PTR es:[edi],eax
  40bc9a:	sbb    BYTE PTR [edi-0x3e1bf8f4],ah
  40bca0:	iret   
  40bca1:	mov    esp,0xba74d650
  40bca6:	xor    eax,0xf5e3a26a
  40bcab:	lahf   
  40bcac:	cs jp  0x40bc57
  40bcaf:	repnz popf 
  40bcb1:	pop    edi
  40bcb2:	adc    DWORD PTR [ebp-0x707aa27a],ebp
  40bcb8:	and    ebx,DWORD PTR [edx-0x3b9d014e]
  40bcbe:	push   es
  40bcbf:	lea    ebp,[esi+edx*4-0x6db7cc7e]
  40bcc6:	mov    al,ds:0xa3babdfe
  40bccb:	push   0xffffffb4
  40bccd:	(bad)  
  40bcce:	mov    al,ds:0x58574f57
  40bcd3:	lods   eax,DWORD PTR ds:[esi]
  40bcd4:	enter  0x1a6d,0x2c
  40bcd8:	das    
  40bcd9:	or     al,BYTE PTR [ebx+ebx*1]
  40bcdc:	xchg   esi,eax
  40bcdd:	inc    esp
  40bcde:	xor    BYTE PTR [edi-0x60],ah
  40bce1:	aam    0x5b
  40bce3:	fnstsw WORD PTR [edi]
  40bce5:	sbb    al,0x57
  40bce7:	daa    
  40bce8:	pop    ss
  40bce9:	mov    ecx,0xba4b6409
  40bcee:	loopne 0x40bd1f
  40bcf0:	mov    esi,0xe249b473
  40bcf5:	or     eax,0x52ce398
  40bcfa:	lahf   
  40bcfb:	push   eax
  40bcfc:	and    eax,0xe16bf38f
  40bd01:	dec    eax
  40bd02:	pop    esp
  40bd03:	out    0x23,eax
  40bd05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd06:	xchg   edi,eax
  40bd07:	dec    ebx
  40bd08:	lds    ebp,FWORD PTR [ebx]
  40bd0a:	jns    0x40bd77
  40bd0c:	test   BYTE PTR [edx-0x38a1c1bd],ah
  40bd12:	adc    BYTE PTR [edx],bl
  40bd14:	sar    DWORD PTR [ebx+0x14],0x9b
  40bd18:	aam    0x76
  40bd1a:	mov    eax,DWORD PTR [eax+0x508e05b9]
  40bd20:	sub    edi,DWORD PTR [edx]
  40bd22:	sbb    BYTE PTR [ecx],0xb2
  40bd25:	daa    
  40bd26:	gs push ss
  40bd28:	ret    
  40bd29:	les    edx,FWORD PTR [ebx-0x698bcf11]
  40bd2f:	jo     0x40bceb
  40bd31:	mov    ch,0x7e
  40bd33:	sbb    eax,eax
  40bd35:	cs ret 
  40bd37:	jbe    0x40bd09
  40bd39:	push   esi
  40bd3a:	mov    ebp,0x6944f845
  40bd3f:	jmp    0xd2d1:0xcf1097
  40bd46:	idiv   BYTE PTR [esi-0x1e]
  40bd49:	sbb    esp,ecx
  40bd4b:	xor    eax,0x989d2b44
  40bd50:	outs   dx,BYTE PTR ds:[esi]
  40bd51:	xchg   edx,eax
  40bd52:	jb     0x40bd94
  40bd54:	repz clc 
  40bd56:	jbe    0x40bd08
  40bd58:	mov    eax,0x1a30ccaa
  40bd5d:	add    eax,0x2cc49655
  40bd62:	loopne 0x40bd8d
  40bd64:	gs gs icebp 
  40bd67:	xchg   ebp,eax
  40bd68:	cmp    al,0x3d
  40bd6a:	shr    DWORD PTR [edi],cl
  40bd6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd6d:	xchg   esi,eax
  40bd6e:	mov    esi,0x5433df1a
  40bd73:	mov    bl,0xfc
  40bd75:	dec    edx
  40bd76:	xor    eax,DWORD PTR [edx]
  40bd78:	mov    esi,0x8a42c20b
  40bd7d:	adc    bl,BYTE PTR [di-0xcc9]
  40bd82:	xor    esi,edx
  40bd84:	mov    DWORD PTR [edi-0x6bf6a5a6],ecx
  40bd8a:	ror    BYTE PTR ds:0xa94874c6,cl
  40bd90:	sbb    bh,ch
  40bd92:	add    DWORD PTR [eax],0xf52acabb
  40bd98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd99:	sbb    edi,ebp
  40bd9b:	xor    edx,DWORD PTR ds:[ecx-0x16]
  40bd9f:	pop    edx
  40bda0:	xor    eax,0xa25150bc
  40bda5:	push   ss
  40bda6:	lea    ebp,[edx-0x66ff921e]
  40bdac:	pusha  
  40bdad:	jo     0x40bd6d
  40bdaf:	jae    0x40bdbb
  40bdb1:	call   0x874f8b84
  40bdb6:	fidivr DWORD PTR [ebx+0x62]
  40bdb9:	aaa    
  40bdba:	test   al,0x58
  40bdbc:	retf   
  40bdbd:	pop    ebx
  40bdbe:	mov    dl,0x9b
  40bdc0:	popa   
  40bdc1:	mov    ds:0x4c2fdb6a,eax
  40bdc6:	int    0xa8
  40bdc8:	sahf   
  40bdc9:	mov    esp,0x87c44f11
  40bdce:	shr    bh,0x4e
  40bdd1:	jmp    0x38d37c69
  40bdd6:	xchg   BYTE PTR [edi+eiz*2-0x3277350c],dh
  40bddd:	icebp  
  40bdde:	loopne 0x40be15
  40bde0:	je     0x40bdb9
  40bde2:	push   0x6d
  40bde4:	and    al,0x47
  40bde6:	sbb    DWORD PTR [ebx+0x7e],ebx
  40bde9:	dec    edi
  40bdea:	ins    DWORD PTR es:[edi],dx
  40bdeb:	adc    eax,0xa59bc1d2
  40bdf0:	sub    dl,BYTE PTR ds:0x88170735
  40bdf6:	pop    esi
  40bdf7:	out    0x3e,eax
  40bdf9:	cld    
  40bdfa:	hlt    
  40bdfb:	rol    DWORD PTR [edx+0x35],1
  40bdfe:	dec    edx
  40bdff:	jmp    0x373b:0x407db6c6
  40be06:	mov    ebx,esi
  40be08:	push   esp
  40be09:	sbb    DWORD PTR [edx-0x48],0xfa6381ad
  40be10:	jnp    0x40be37
  40be12:	and    eax,0x18867423
  40be17:	imul   ecx,DWORD PTR [esi],0xa407ba5f
  40be1d:	leave  
  40be1e:	popf   
  40be1f:	jl     0x40be25
  40be21:	xor    eax,edx
  40be23:	in     eax,0x1d
  40be25:	jo     0x40be4c
  40be27:	lods   al,BYTE PTR ds:[esi]
  40be28:	mov    al,ds:0x90f4e22a
  40be2d:	(bad)  [ebp+0x3d]
  40be30:	push   0xffffffd3
  40be32:	and    DWORD PTR [esi-0x35],esp
  40be35:	jge    0x40be07
  40be37:	imul   eax,DWORD PTR [esi+0x43],0xe2de54ce
  40be3e:	mov    esi,0xf15c1ebc
  40be43:	and    BYTE PTR [edi],ah
  40be45:	call   0x62a3:0x78318e3b
  40be4c:	cmp    al,0xab
  40be4e:	mov    ch,0x77
  40be50:	or     eax,0xdcc95956
  40be55:	jmp    0x225:0xda6d0506
  40be5c:	inc    edi
  40be5d:	add    BYTE PTR [ebx-0x5e],dh
  40be60:	dec    BYTE PTR [edi-0x19]
  40be63:	xor    dl,dh
  40be65:	dec    ecx
  40be66:	cs cli 
  40be68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be69:	les    ebp,FWORD PTR [ecx-0x3b]
  40be6c:	je     0x40be75
  40be6e:	sub    al,0x60
  40be70:	xor    dh,BYTE PTR [edx-0x36]
  40be73:	es stc 
  40be75:	sbb    ecx,DWORD PTR [edx+edi*4]
  40be78:	in     eax,0x75
  40be7a:	and    al,0x92
  40be7c:	ins    DWORD PTR es:[edi],dx
  40be7d:	dec    ebp
  40be7e:	cdq    
  40be7f:	fld    st(5)
  40be81:	xchg   edi,eax
  40be82:	dec    ebx
  40be83:	adc    edx,edi
  40be85:	sub    al,0x25
  40be87:	aaa    
  40be88:	mov    eax,ds:0xc624337e
  40be8d:	dec    ebp
  40be8e:	popa   
  40be8f:	sahf   
  40be90:	cmp    DWORD PTR [edi],0x781c958e
  40be96:	jmp    0x40be87
  40be98:	xchg   DWORD PTR cs:[edi],ecx
  40be9b:	mov    ah,0xf5
  40be9d:	pusha  
  40be9e:	pop    ebx
  40be9f:	pushf  
  40bea0:	sbb    eax,0xe02ae41f
  40bea5:	mov    dh,dl
  40bea7:	cwde   
  40bea8:	add    BYTE PTR [esi],dh
  40beaa:	ja     0x40bec6
  40beac:	add    dl,BYTE PTR [ebp+0x76]
  40beaf:	adc    eax,0x60f7fade
  40beb4:	mov    ah,0x30
  40beb6:	jp     0x40be61
  40beb8:	scas   eax,DWORD PTR es:[edi]
  40beb9:	and    DWORD PTR [esi-0x69],ebx
  40bebc:	pop    esi
  40bebd:	cld    
  40bebe:	ror    edx,0xcb
  40bec1:	adc    DWORD PTR [ebp-0x16],0xffffffb2
  40bec5:	adc    DWORD PTR [ebp+0x60],edi
  40bec8:	mov    ds:0x490a0aa6,al
  40becd:	out    dx,eax
  40bece:	scas   al,BYTE PTR es:[edi]
  40becf:	inc    esi
  40bed0:	or     edx,esi
  40bed2:	push   edi
  40bed3:	sbb    esp,ecx
  40bed5:	mov    eax,ds:0x85e50e0b
  40beda:	out    0xf7,al
  40bedc:	xor    ecx,eax
  40bede:	jl     0x40be92
  40bee0:	sub    ebx,ebx
  40bee2:	mov    edx,edi
  40bee4:	sub    ebp,DWORD PTR [ebp+0x6a12162a]
  40beea:	push   esp
  40beeb:	cmp    DWORD PTR [ecx+edx*8+0x73],esi
  40beef:	cmp    al,0xa7
  40bef1:	mov    eax,0x1b779466
  40bef6:	sbb    eax,0xbc0b970a
  40befb:	fimul  WORD PTR [esi+0x10]
  40befe:	rcl    dh,1
  40bf00:	dec    ebp
  40bf01:	jae    0x40bf1e
  40bf03:	je     0x40bf1d
  40bf05:	push   ds
  40bf06:	jae    0x40bf22
  40bf08:	sub    edx,esi
  40bf0a:	push   ebx
  40bf0b:	es js  0x40bf8c
  40bf0e:	cli    
  40bf0f:	cs jnp 0x40bed3
  40bf12:	push   0xffffff8c
  40bf14:	cmp    BYTE PTR [ebx-0x7458c70e],0x31
  40bf1b:	xlat   BYTE PTR ds:[ebx]
  40bf1c:	xchg   edx,eax
  40bf1d:	sbb    DWORD PTR [ebx-0x581a4d45],esp
  40bf23:	add    DWORD PTR [eax-0x487a8bd5],esp
  40bf29:	and    ebp,DWORD PTR [esi]
  40bf2b:	mov    bl,0x25
  40bf2d:	adc    edx,DWORD PTR [ebp+0x1acf9d15]
  40bf33:	jnp    0x40bf9e
  40bf35:	dec    esi
  40bf36:	shl    BYTE PTR [ebx],1
  40bf38:	aaa    
  40bf39:	cmp    ebp,DWORD PTR [esi]
  40bf3b:	lea    esp,[edx+0x73]
  40bf3e:	dec    edx
  40bf3f:	out    dx,al
  40bf40:	xor    DWORD PTR [eax+0x3f],0xffffffe9
  40bf44:	arpl   WORD PTR [ebx-0x20],cx
  40bf47:	jp     0x40bf95
  40bf49:	sub    al,0xda
  40bf4b:	stos   BYTE PTR es:[edi],al
  40bf4c:	inc    esi
  40bf4d:	dec    edi
  40bf4e:	jne    0x40bfa6
  40bf50:	aad    0xba
  40bf52:	push   ss
  40bf53:	fwait
  40bf54:	rol    DWORD PTR [esi-0x7ff1cb9],cl
  40bf5a:	gs into 
  40bf5c:	inc    ebx
  40bf5d:	push   es
  40bf5e:	sbb    eax,0xa864180c
  40bf63:	cdq    
  40bf64:	out    0x83,al
  40bf66:	sbb    dl,bh
  40bf68:	push   ebp
  40bf69:	dec    BYTE PTR [esi+0x48]
  40bf6c:	jp     0x40bfca
  40bf6e:	repz (bad) 
  40bf70:	aam    0x16
  40bf72:	cmp    BYTE PTR [edi-0x7],dl
  40bf75:	lahf   
  40bf76:	rcr    DWORD PTR [esi+0x77],cl
  40bf79:	into   
  40bf7a:	push   ds
  40bf7b:	(bad)  [ebp+eax*1+0x98ede34]
  40bf82:	or     dh,BYTE PTR [edx-0x5c3f9d9]
  40bf88:	in     al,dx
  40bf89:	adc    cl,BYTE PTR [ebx+0x28]
  40bf8c:	mov    WORD PTR [edx],es
  40bf8e:	(bad)  
  40bf8f:	and    dh,BYTE PTR [eax+0x671d32cc]
  40bf95:	dec    ebx
  40bf97:	arpl   WORD PTR [ebp-0x5317cf37],sp
  40bf9d:	in     al,0x54
  40bf9f:	out    0x5d,al
  40bfa1:	mov    esp,0xe17cb0f8
  40bfa6:	dec    edi
  40bfa7:	or     eax,0x95d3deb
  40bfac:	ror    DWORD PTR ds:0x2245f64c,1
  40bfb2:	test   eax,0x5800a25d
  40bfb7:	and    al,0xa5
  40bfb9:	xchg   esi,eax
  40bfba:	bswap  esp
  40bfbc:	fucomp st(4)
  40bfbe:	xor    BYTE PTR [edx+0xe],0x3
  40bfc2:	adc    al,0x41
  40bfc4:	outs   dx,BYTE PTR ds:[esi]
  40bfc5:	xor    al,0x79
  40bfc7:	stc    
  40bfc8:	jbe    0x40bf7a
  40bfca:	bound  esi,QWORD PTR [edx+0x7db5985c]
  40bfd0:	add    cl,BYTE PTR [eax]
  40bfd2:	jnp    0x40bfcd
  40bfd4:	dec    edi
  40bfd5:	(bad)  
  40bfd6:	aam    0xfd
  40bfd8:	jp     0x40bf67
  40bfda:	aaa    
  40bfdb:	es push cs
  40bfdd:	xor    ebx,DWORD PTR [ebx]
  40bfdf:	out    dx,eax
  40bfe0:	mov    dl,0x9b
  40bfe2:	jmp    0x40bf6e
  40bfe4:	pop    esp
  40bfe5:	fdivr  st(6),st
  40bfe7:	adc    esi,0xffffffa3
  40bfea:	shl    bh,0x5
  40bfed:	addr16 mov ah,0xbb
  40bff0:	mov    BYTE PTR [ebp+0x20],bh
  40bff3:	adc    BYTE PTR [edx],ah
  40bff5:	xor    DWORD PTR [ebx+0x77],edx
  40bff8:	push   edi
  40bff9:	jg     0x40bfaa
  40bffb:	ret    
  40bffc:	add    BYTE PTR [eax-0x70],cl
  40bfff:	push   0x3b0ee66b
  40c004:	rol    al,cl
  40c006:	and    DWORD PTR [ecx],edx
  40c008:	not    BYTE PTR [ebx]
  40c00a:	gs cmp al,0x40
  40c00d:	sar    BYTE PTR [edx],0xa0
  40c010:	xchg   edi,eax
  40c011:	inc    esi
  40c012:	xchg   edi,eax
  40c013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c014:	sar    DWORD PTR [eax+edi*2],1
  40c017:	cmp    al,0x9b
  40c019:	in     eax,dx
  40c01a:	mov    dl,0xa6
  40c01c:	loop   0x40bfe7
  40c01e:	add    al,0x6c
  40c020:	jae    0x40bfae
  40c022:	push   ebx
  40c023:	cmp    DWORD PTR [esp+ecx*2-0x74],edi
  40c027:	push   edi
  40c028:	es jle 0x40c04f
  40c02b:	sbb    al,0x1a
  40c02e:	pop    ds
  40c02f:	push   ebx
  40c030:	fmul   st(4),st
  40c032:	mov    bh,0xf8
  40c034:	add    eax,0xdc7e7cd0
  40c039:	addr16 push ds
  40c03b:	jle    0x40c083
  40c03d:	imul   esp,DWORD PTR [eax-0x211b56a],0x7f
  40c044:	fsubr  QWORD PTR [edi]
  40c046:	xchg   esp,eax
  40c047:	leave  
  40c048:	pop    ds
  40c049:	in     ax,dx
  40c04b:	mov    edx,0xd52a77ce
  40c050:	enter  0xe74f,0xe2
  40c054:	inc    edx
  40c055:	test   DWORD PTR [ebp+0x9],eax
  40c058:	push   cs
  40c059:	add    ch,BYTE PTR [ebx+0x22739181]
  40c05f:	adc    BYTE PTR [ebp+0x14],dl
  40c062:	sti    
  40c063:	or     bh,ah
  40c065:	mov    al,0x60
  40c067:	push   0x17
  40c069:	cmp    DWORD PTR [edx-0x7a],esi
  40c06c:	je     0x40c0e9
  40c06e:	fstp   TBYTE PTR [edi+0x38]
  40c071:	jg     0x40c00c
  40c073:	dec    esp
  40c074:	jb     0x40c082
  40c076:	loope  0x40c0d9
  40c078:	arpl   ax,bx
  40c07a:	fidivr DWORD PTR [edx-0x109ac47c]
  40c080:	loope  0x40c076
  40c082:	mov    bh,BYTE PTR [edx-0x2a]
  40c085:	(bad)  
  40c086:	(bad)  
  40c087:	jecxz  0x40c053
  40c089:	lods   al,BYTE PTR ds:[esi]
  40c08a:	pop    ecx
  40c08b:	add    BYTE PTR [eax-0x4],al
  40c08e:	mov    esp,0x5fccb43c
  40c093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c094:	mov    eax,ds:0x7ccb3b64
  40c099:	mov    al,ds:0x9e90ba1a
  40c09e:	xchg   BYTE PTR [edi+0x2d4948ca],bl
  40c0a4:	repz shl BYTE PTR [edx+0x22],1
  40c0a8:	sti    
  40c0a9:	jp     0x40c0d6
  40c0ab:	add    ecx,DWORD PTR [eax-0x3db5f7da]
  40c0b1:	xor    BYTE PTR [ebx-0x64],dl
  40c0b4:	mov    dl,0xd5
  40c0b6:	cdq    
  40c0b7:	rcr    BYTE PTR [ebp-0x27],0xdb
  40c0bb:	ins    DWORD PTR es:[edi],dx
  40c0bc:	xchg   ecx,eax
  40c0bd:	xor    DWORD PTR [edi+ebx*8-0x8],eax
  40c0c1:	lds    esi,FWORD PTR [edi+0x42f207f3]
  40c0c7:	mov    BYTE PTR [edx-0x4f],bl
  40c0ca:	aas    
  40c0cb:	fisubr WORD PTR [ecx-0xbc7612b]
  40c0d1:	sbb    eax,DWORD PTR [esi]
  40c0d3:	or     al,0xf1
  40c0d5:	adc    dh,BYTE PTR [esi+0x75155725]
  40c0db:	test   al,0x5e
  40c0dd:	outs   dx,DWORD PTR ds:[esi]
  40c0de:	sbb    ch,0x8d
  40c0e1:	sar    BYTE PTR [eax-0x27267c4d],cl
  40c0e7:	stc    
  40c0e8:	xchg   BYTE PTR [edx+0x39],dl
  40c0eb:	pop    ss
  40c0ec:	xor    al,0xe7
  40c0ee:	enter  0x8bd1,0x6
  40c0f2:	push   edi
  40c0f3:	test   al,0x43
  40c0f5:	pop    ecx
  40c0f6:	push   edi
  40c0f7:	mov    esp,0x914ecd57
  40c0fc:	mov    ecx,ebp
  40c0fe:	mov    ebp,0xc586da15
  40c103:	(bad)  
  40c104:	(bad)  
  40c105:	mov    eax,0xb8bd450
  40c10a:	addr16 jge 0x40c125
  40c10d:	mov    ecx,0xda7636bf
  40c112:	xor    eax,0x5d63022
  40c117:	xchg   edi,eax
  40c118:	push   es
  40c119:	lahf   
  40c11a:	and    DWORD PTR [edi+eiz*4],0xc209cddc
  40c121:	add    DWORD PTR [edi-0x22],eax
  40c124:	jmp    0x3af2a1f7
  40c129:	mov    ecx,0x31a67f8c
  40c12e:	cmp    DWORD PTR gs:[ecx+0x7d3f7c3e],esi
  40c135:	mov    ebx,DWORD PTR [esi]
  40c137:	inc    esi
  40c138:	inc    DWORD PTR [edi+esi*8+0x67]
  40c13c:	cld    
  40c13d:	adc    BYTE PTR [edx-0x1e],bl
  40c140:	stc    
  40c141:	xchg   esi,eax
  40c142:	call   0x7f78dfac
  40c147:	and    eax,0xd6068d35
  40c14c:	pop    esp
  40c14d:	aam    0xa3
  40c14f:	and    ebp,DWORD PTR [eax]
  40c151:	sbb    eax,0x312fccd9
  40c156:	xchg   eax,ecx
  40c158:	test   al,0x5
  40c15a:	call   0xda15:0x5869aa51
  40c161:	retf   
  40c162:	adc    edx,ebx
  40c164:	xchg   BYTE PTR [edx-0x28],dl
  40c167:	out    0xc1,al
  40c169:	imul   edi,DWORD PTR [bp+si],0x388715ea
  40c170:	xor    ebx,DWORD PTR [ecx-0x6f42f0c3]
  40c176:	inc    ebp
  40c177:	das    
  40c178:	(bad)  
  40c179:	int    0xb9
  40c17b:	not    cl
  40c17d:	retf   
  40c17e:	scas   eax,DWORD PTR es:[edi]
  40c17f:	add    ah,0x1a
  40c182:	(bad)  
  40c183:	aas    
  40c184:	inc    eax
  40c185:	fsub   QWORD PTR [ebp+0x47]
  40c188:	cmp    al,0x2b
  40c18a:	push   0xc9263977
  40c18f:	in     al,0x72
  40c191:	outs   dx,DWORD PTR ds:[esi]
  40c192:	adc    esi,DWORD PTR [esi+0x1e]
  40c195:	jl     0x40c160
  40c197:	fsubr  DWORD PTR [eax]
  40c199:	fldenv [eax+0x46b1aa10]
  40c19f:	mov    bh,0x11
  40c1a1:	loope  0x40c220
  40c1a3:	xchg   eax,esi
  40c1a5:	xchg   ebp,eax
  40c1a6:	fisub  WORD PTR [edi-0x52]
  40c1a9:	aam    0x80
  40c1ab:	dec    ebp
  40c1ac:	xor    al,0xf2
  40c1ae:	ret    
  40c1af:	xchg   edx,eax
  40c1b0:	data16 mov dh,0x56
  40c1b3:	mov    DWORD PTR [eax+eiz*1-0x717d992c],ebx
  40c1ba:	sub    eax,0xf540cdcd
  40c1bf:	pop    esi
  40c1c0:	pop    ebp
  40c1c1:	sbb    cl,BYTE PTR [edx-0x18]
  40c1c4:	pop    ebp
  40c1c5:	push   0x31
  40c1c7:	pushf  
  40c1c8:	mul    DWORD PTR [ecx]
  40c1ca:	inc    eax
  40c1cb:	xor    eax,0x90c4ba07
  40c1d0:	hlt    
  40c1d1:	xor    al,0xdc
  40c1d3:	cld    
  40c1d4:	sbb    ecx,edi
  40c1d6:	imul   esp,DWORD PTR [ecx+0x1cc47510],0xa9a5996a
  40c1e0:	ds aad 0x4c
  40c1e3:	out    0x5c,eax
  40c1e5:	fstp   st(1)
  40c1e7:	or     esi,DWORD PTR [esi+0x3f]
  40c1ea:	push   cs
  40c1eb:	adc    cl,BYTE PTR [esi-0x5f]
  40c1ee:	pop    ebx
  40c1ef:	or     cl,BYTE PTR [edx]
  40c1f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1f2:	cmc    
  40c1f3:	jp     0x40c1d5
  40c1f5:	sub    al,0x17
  40c1f7:	iret   
  40c1f8:	pop    edi
  40c1f9:	lods   al,BYTE PTR ds:[esi]
  40c1fa:	test   al,0xc9
  40c1fc:	and    eax,0x3fe50350
  40c201:	xchg   ebp,eax
  40c202:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c203:	push   ds
  40c204:	loope  0x40c1ae
  40c206:	xor    eax,0xcaba1b53
  40c20b:	dec    esi
  40c20c:	retf   0xfdc3
  40c20f:	dec    DWORD PTR [edi-0x3be8b0ac]
  40c215:	pop    edi
  40c216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c217:	push   esi
  40c218:	scas   eax,DWORD PTR es:[edi]
  40c219:	aaa    
  40c21a:	pop    edx
  40c21b:	call   0xa54b:0xbee77b73
  40c222:	mov    cl,0xe0
  40c224:	mov    ebp,0xfae39160
  40c229:	mov    dl,BYTE PTR [edi+0x20b02ca9]
  40c22f:	bound  esi,QWORD PTR [edi]
  40c231:	push   esp
  40c232:	cmp    BYTE PTR [ebp+0x2ba06d5f],0xfe
  40c239:	xor    esp,eax
  40c23b:	sbb    BYTE PTR [ebp+0x1a3bde40],ch
  40c241:	daa    
  40c242:	mov    DWORD PTR [eax+ebx*2+0x65c2ee50],ebx
  40c249:	ret    
  40c24a:	push   cs
  40c24b:	push   ebp
  40c24c:	test   BYTE PTR [ebp-0x5f3a4c11],0x37
  40c253:	mov    esp,ebx
  40c255:	dec    eax
  40c256:	dec    edi
  40c257:	xlat   BYTE PTR ds:[ebx]
  40c258:	into   
  40c259:	ja     0x40c1f5
  40c25b:	or     DWORD PTR [eax+0x2c44ce27],0x75
  40c262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c263:	xor    DWORD PTR [ebx+esi*2-0x220d21d0],edi
  40c26a:	push   es
  40c26b:	dec    esi
  40c26c:	fcomp  DWORD PTR [eax+0x11ef2aa8]
  40c272:	daa    
  40c273:	add    eax,0x7ecf8959
  40c278:	inc    eax
  40c279:	test   DWORD PTR [edi],ecx
  40c27b:	lea    esp,[ebx+0x66]
  40c27e:	mov    dl,BYTE PTR ds:0xa574c651
  40c284:	push   esp
  40c285:	mov    edi,0x3f194e41
  40c28a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c28b:	int3   
  40c28c:	out    dx,eax
  40c28d:	rol    DWORD PTR [edi-0x3068df2d],1
  40c293:	call   0x3f48:0x6a9138a8
  40c29a:	fsub   st(7),st
  40c29c:	int3   
  40c29d:	call   0x44b3:0xbf8b4a65
  40c2a4:	mov    DWORD PTR [esi],ebp
  40c2a6:	(bad)  
  40c2a7:	imul   esi,DWORD PTR [esi-0x67d247d5],0x18a1b418
  40c2b1:	xchg   ecx,eax
  40c2b2:	pushf  
  40c2b3:	adc    BYTE PTR [esi+0x3a2ae608],dh
  40c2b9:	or     cl,BYTE PTR [ecx+0x3f]
  40c2bc:	(bad)  
  40c2bd:	loope  0x40c304
  40c2bf:	push   ecx
  40c2c0:	sar    BYTE PTR [esi+0x4b7d77ea],0x89
  40c2c7:	test   DWORD PTR ds:[ebp+0x18cab202],0xebc8f69f
  40c2d2:	into   
  40c2d3:	ror    DWORD PTR [ebp-0x7c520200],0xee
  40c2da:	dec    esi
  40c2db:	test   al,0x74
  40c2dd:	out    0x7,al
  40c2df:	push   ecx
  40c2e0:	mov    bh,0x95
  40c2e2:	push   esi
  40c2e3:	das    
  40c2e4:	les    ebx,FWORD PTR [ecx]
  40c2e6:	sbb    al,0xda
  40c2e8:	daa    
  40c2e9:	out    0x3e,eax
  40c2eb:	adc    al,0x71
  40c2ed:	sub    eax,0xd087c0d4
  40c2f2:	cmp    edx,DWORD PTR [ecx+0xf]
  40c2f5:	rcr    dl,cl
  40c2f7:	add    DWORD PTR [ebp-0x57180f22],esp
  40c2fd:	loope  0x40c371
  40c2ff:	mov    cs,WORD PTR [edi+ebp*8]
  40c302:	mov    eax,0xa4cc37e1
  40c307:	aas    
  40c308:	push   edx
  40c309:	mov    dl,0xb6
  40c30b:	dec    esp
  40c30c:	inc    eax
  40c30d:	xchg   edx,eax
  40c30e:	ss push esi
  40c310:	repnz cwde 
  40c312:	fild   WORD PTR [edx-0x73]
  40c315:	aaa    
  40c316:	dec    ecx
  40c317:	sbb    DWORD PTR [ebp+0x19d40768],ebp
  40c31d:	and    ebx,esp
  40c31f:	pop    ds
  40c320:	inc    esi
  40c321:	add    esp,DWORD PTR [edi+0x6d]
  40c324:	in     al,dx
  40c325:	cmp    DWORD PTR ds:0x3e14c76d,eax
  40c32b:	mov    ebx,0xddcebdac
  40c330:	std    
  40c331:	xor    BYTE PTR [eax+esi*2],ch
  40c334:	or     al,0xe7
  40c336:	adc    esi,edi
  40c338:	lea    esi,[edx+0x79]
  40c33b:	mov    cl,0xbb
  40c33d:	push   cs
  40c33e:	in     al,0x91
  40c340:	sbb    dh,BYTE PTR [ebp-0x64]
  40c343:	call   0xd7ceeabb
  40c348:	jmp    0x32e6:0x3a079201
  40c34f:	sbb    BYTE PTR [edi-0x37],dh
  40c352:	jge    0x40c2d8
  40c354:	mov    bl,0x42
  40c356:	push   edx
  40c357:	mov    dh,0xfa
  40c359:	add    al,0x42
  40c35b:	mov    esp,0x67df5ca6
  40c360:	mov    eax,0x871d9d7e
  40c365:	jbe    0x40c374
  40c367:	mov    eax,0x55f63dbf
  40c36c:	add    eax,0x2e3fe05b
  40c371:	pop    ebp
  40c372:	adc    DWORD PTR [esi+eax*2-0x213eda18],esp
  40c379:	(bad)  
  40c37a:	jmp    0x1814e28d
  40c37f:	test   eax,0x9c2e81bc
  40c384:	and    eax,0xcd558c9f
  40c389:	and    ah,BYTE PTR [edi-0x7105859b]
  40c38f:	mov    es,WORD PTR [esi+ebx*8+0x7d]
  40c393:	out    0xb2,al
  40c395:	test   DWORD PTR [ecx],eax
  40c397:	popf   
  40c398:	cdq    
  40c399:	jmp    0x40c339
  40c39b:	mov    ah,0xb0
  40c39d:	inc    ecx
  40c39e:	and    eax,DWORD PTR [edi]
  40c3a0:	push   cs
  40c3a1:	jle    0x40c377
  40c3a3:	and    al,0xcf
  40c3a5:	pushf  
  40c3a6:	push   edx
  40c3a7:	xchg   edi,eax
  40c3a8:	dec    ecx
  40c3a9:	pop    es
  40c3aa:	pop    ecx
  40c3ab:	test   DWORD PTR [esi-0x64],0x5659c0c1
  40c3b2:	ror    ebx,cl
  40c3b4:	push   esi
  40c3b5:	clc    
  40c3b6:	add    bl,BYTE PTR [edx-0x3326842]
  40c3bc:	jmp    0x40c3dc
  40c3be:	mov    ds:0x4dfa6b90,eax
  40c3c3:	dec    edx
  40c3c4:	loopne 0x40c3dc
  40c3c6:	push   ds
  40c3c7:	ins    DWORD PTR es:[edi],dx
  40c3c8:	(bad)
  40c3cb:	jl     0x40c3f2
  40c3cd:	repz mov cl,BYTE PTR [edi-0x1e]
  40c3d1:	rcr    ah,cl
  40c3d3:	push   cs
  40c3d4:	sbb    dh,ah
  40c3d6:	sub    cl,ch
  40c3d8:	sbb    BYTE PTR [eax],al
  40c3da:	inc    esp
  40c3db:	outs   dx,DWORD PTR ds:[esi]
  40c3dc:	sbb    BYTE PTR [ecx],dl
  40c3de:	and    eax,0x8077e671
  40c3e3:	loop   0x40c3e7
  40c3e5:	adc    al,0x41
  40c3e7:	xchg   esp,eax
  40c3e8:	bswap  eax
  40c3ea:	ins    DWORD PTR es:[edi],dx
  40c3eb:	ins    DWORD PTR es:[edi],dx
  40c3ec:	scas   eax,DWORD PTR es:[edi]
  40c3ed:	push   0xf1ada9db
  40c3f2:	aad    0x49
  40c3f4:	jge    0x40c3fa
  40c3f6:	mov    esi,0xce18f179
  40c3fb:	cmp    ch,bh
  40c3fd:	mov    ebp,0x9ec419a
  40c402:	mov    edi,0x7d961a16
  40c407:	add    al,0x22
  40c409:	sub    dl,BYTE PTR [edi+0x35]
  40c40c:	pop    eax
  40c40d:	push   esi
  40c40e:	pushf  
  40c40f:	mov    edi,0xaed98695
  40c414:	or     BYTE PTR [edx+0x52432abf],al
  40c41a:	pop    ebp
  40c41b:	add    ecx,DWORD PTR [ebp-0x16]
  40c41e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c41f:	(bad)  
  40c420:	out    dx,eax
  40c421:	test   al,0x47
  40c423:	jge    0x40c42b
  40c425:	xor    BYTE PTR [edx-0x2009dcb2],ch
  40c42b:	cmp    DWORD PTR [ebp+0x6b],ebp
  40c42e:	mov    esi,0x8c81536d
  40c433:	mov    WORD PTR [edx+0x10],es
  40c436:	fcomp  QWORD PTR [ebx-0x5afcecbe]
  40c43c:	rol    DWORD PTR [ebp+0x4f],cl
  40c43f:	sbb    al,0xc6
  40c441:	xor    DWORD PTR ds:0xe49657cd,ebp
  40c447:	gs lahf 
  40c449:	mov    dl,0x86
  40c44b:	cmp    eax,0x7ffc26fa
  40c450:	aaa    
  40c451:	push   ss
  40c452:	push   ebx
  40c453:	mov    ecx,0x337b440a
  40c458:	imul   DWORD PTR [edx]
  40c45a:	push   edx
  40c45b:	jne    0x40c445
  40c45d:	pop    esp
  40c45e:	leave  
  40c45f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c460:	jecxz  0x40c462
  40c462:	mov    esp,fs
  40c464:	mov    esi,0x8f7c88c2
  40c469:	push   0x896f06c5
  40c46e:	mov    dh,0x14
  40c470:	loope  0x40c4d3
  40c472:	jmp    FWORD PTR [edx-0x40746b2e]
  40c478:	cld    
  40c479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c47a:	adc    BYTE PTR [eax-0x70c5f2ba],dl
  40c480:	mov    eax,0x9af70c48
  40c485:	or     DWORD PTR [edi],esp
  40c487:	(bad)
  40c48c:	xchg   esi,edi
  40c48e:	sub    eax,0x6c84fa36
  40c493:	or     ebx,0x42
  40c496:	push   ds
  40c497:	sub    DWORD PTR [edx+edx*8+0x1c4127dd],edi
  40c49e:	lods   al,BYTE PTR ds:[esi]
  40c49f:	psllw  mm3,QWORD PTR [edx]
  40c4a2:	sub    al,0xb1
  40c4a4:	scas   al,BYTE PTR es:[edi]
  40c4a5:	cdq    
  40c4a6:	ja     0x40c504
  40c4a8:	pushf  
  40c4a9:	mov    eax,0xa054a600
  40c4ae:	popf   
  40c4af:	push   edx
  40c4b0:	das    
  40c4b1:	mov    esi,ebp
  40c4b3:	pop    ecx
  40c4b4:	pop    eax
  40c4b5:	push   eax
  40c4b7:	shr    DWORD PTR [ebx],0x7f
  40c4ba:	inc    ebx
  40c4bb:	xchg   esi,eax
  40c4bc:	and    esp,edx
  40c4be:	jle    0x40c46d
  40c4c0:	cmp    DWORD PTR [esi-0x7e],esp
  40c4c3:	popf   
  40c4c4:	retf   
  40c4c5:	cmp    esp,DWORD PTR [ebx]
  40c4c7:	cmc    
  40c4c8:	or     dl,BYTE PTR [esp+edi*2-0x63a87f3b]
  40c4cf:	daa    
  40c4d0:	in     al,0xf9
  40c4d2:	fdivr  DWORD PTR [eax]
  40c4d4:	and    al,0xfc
  40c4d6:	adc    dl,BYTE PTR [ebp-0xe3dbac6]
  40c4dc:	std    
  40c4dd:	imul   ebp,DWORD PTR [esi-0x46],0x25be8eac
  40c4e4:	test   eax,0x22d82796
  40c4e9:	cmp    eax,0xc24bb15e
  40c4ee:	fistp  DWORD PTR [ebp-0x6504479a]
  40c4f4:	aas    
  40c4f5:	dec    eax
  40c4f6:	sbb    eax,DWORD PTR [eax+0x224240d7]
  40c4fc:	test   bl,cl
  40c4fe:	xchg   ecx,eax
  40c4ff:	loope  0x40c4eb
  40c501:	int3   
  40c502:	fwait
  40c503:	mul    DWORD PTR [edi+0x18]
  40c506:	jmp    0x40c4b0
  40c508:	in     al,dx
  40c509:	rol    BYTE PTR [esi],0x9b
  40c50c:	imul   ecx,DWORD PTR [esi],0x7b3bccf8
  40c512:	pop    esp
  40c513:	mov    eax,ds:0xe7396074
  40c518:	retf   0x72a0
  40c51b:	adc    edi,DWORD PTR [ebx+0x64e1ff1]
  40c521:	cmp    ah,0x55
  40c524:	mov    ds:0xbf721e6e,eax
  40c529:	jb     0x40c57f
  40c52b:	push   ebp
  40c52c:	mov    dl,0xb0
  40c52e:	mov    BYTE PTR [ebx+0x5b],dl
  40c531:	xlat   BYTE PTR ds:[ebx]
  40c532:	lahf   
  40c533:	sbb    BYTE PTR [eax+edi*1],al
  40c536:	xchg   DWORD PTR [eax+0x25],ecx
  40c539:	xor    edx,DWORD PTR [edi+0x2c67893]
  40c53f:	dec    edi
  40c540:	repnz inc edx
  40c542:	sti    
  40c543:	sub    ebx,ebp
  40c545:	mov    bh,0x3d
  40c547:	cdq    
  40c548:	inc    esi
  40c549:	out    0x18,eax
  40c54b:	add    DWORD PTR [ecx+ecx*8],ecx
  40c54e:	sub    esp,DWORD PTR [esp+edi*2+0x654405d3]
  40c555:	inc    esp
  40c556:	adc    eax,ecx
  40c558:	xor    eax,0xf642e14c
  40c55d:	fneni(8087 only) 
  40c55f:	mov    ebx,DWORD PTR [esi-0x2]
  40c562:	rcl    cl,1
  40c564:	cs popa 
  40c566:	test   DWORD PTR [ebx-0x7c],esi
  40c569:	mov    al,0x14
  40c56b:	cmp    bl,BYTE PTR [esi-0x15]
  40c56e:	in     ax,dx
  40c570:	pop    eax
  40c571:	push   ss
  40c572:	loopne 0x40c5cf
  40c574:	in     eax,0x26
  40c576:	inc    ecx
  40c577:	cmc    
  40c578:	adc    DWORD PTR [ecx-0x6a],eax
  40c57b:	sub    ebp,DWORD PTR [edi]
  40c57d:	push   ss
  40c57e:	jno    0x40c585
  40c580:	xchg   edx,eax
  40c581:	sub    ch,BYTE PTR es:[eax]
  40c584:	ror    DWORD PTR [edx+edi*4-0x4c],1
  40c588:	or     BYTE PTR [eax+0xb],dl
  40c58b:	cmp    esp,DWORD PTR [ecx]
  40c58d:	dec    esp
  40c58e:	out    dx,eax
  40c58f:	adc    bh,BYTE PTR [esi+0x50]
  40c592:	mov    ebx,0x1a9f4c52
  40c597:	out    dx,eax
  40c598:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40c59a:	imul   ecx,DWORD PTR [esi-0x1ccbbf1a],0xffffffde
  40c5a1:	xor    BYTE PTR [eax-0x43],dl
  40c5a4:	aad    0xe7
  40c5a6:	shl    al,0x19
  40c5a9:	aad    0x76
  40c5ab:	push   0x4ad52d71
  40c5b0:	jne    0x40c56e
  40c5b2:	mov    DWORD PTR [edi-0x672db57c],ebp
  40c5b8:	stos   BYTE PTR es:[edi],al
  40c5b9:	sbb    al,0xc3
  40c5bb:	xchg   ebx,eax
  40c5bc:	pop    ss
  40c5bd:	daa    
  40c5be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5bf:	hlt    
  40c5c0:	xchg   esi,eax
  40c5c1:	orps   xmm3,XMMWORD PTR [ebp-0x219b1e1d]
  40c5c8:	mov    eax,ds:0xbb68cda9
  40c5cd:	popa   
  40c5ce:	test   al,0x60
  40c5d0:	lods   al,BYTE PTR ds:[esi]
  40c5d1:	pop    ebp
  40c5d2:	or     esi,DWORD PTR [eax+0x5dc40a22]
  40c5d8:	or     esi,DWORD PTR [edx-0x78ce8fc5]
  40c5de:	add    BYTE PTR [edi],ch
  40c5e0:	aas    
  40c5e1:	jo     0x40c5c6
  40c5e3:	sbb    al,0xea
  40c5e5:	mov    ch,0xc9
  40c5e7:	stc    
  40c5e8:	mov    BYTE PTR [edi+0x5a],al
  40c5eb:	repnz or DWORD PTR [esi+0x55],0x8eac1ea0
  40c5f3:	cmp    BYTE PTR [ebp+0x1e],cl
  40c5f6:	push   0x25e32350
  40c5fb:	xor    edx,0xffffffa9
  40c5fe:	pop    ds
  40c5ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c600:	jmp    0x40c5ec
  40c602:	xor    esp,DWORD PTR [ebp-0x3f]
  40c605:	inc    esp
  40c606:	push   0x1a
  40c608:	ins    BYTE PTR es:[edi],dx
  40c609:	sbb    BYTE PTR [ecx],bh
  40c60b:	into   
  40c60c:	add    BYTE PTR [edi-0x71],0x8f
  40c610:	or     bh,BYTE PTR [eax+edx*8-0x25bc02f9]
  40c617:	rol    DWORD PTR [edi-0x22],1
  40c61a:	dec    eax
  40c61b:	fs push esi
  40c61d:	int    0xba
  40c61f:	shl    esi,0xe6
  40c622:	mov    dh,0x4a
  40c624:	xchg   DWORD PTR [esi],eax
  40c626:	fcom   DWORD PTR [ebx+ecx*8]
  40c629:	lock mov al,ds:0x2f7400d4
  40c62f:	stc    
  40c630:	mov    ah,BYTE PTR [edx]
  40c632:	xchg   edx,eax
  40c633:	push   eax
  40c634:	mov    dl,0x41
  40c636:	shl    DWORD PTR [eax+0x61452839],0xb9
  40c63d:	mov    cl,0xdd
  40c63f:	imul   edi,DWORD PTR [ecx],0xffffffc5
  40c642:	div    DWORD PTR [ebx]
  40c644:	mov    eax,0x92136859
  40c649:	jecxz  0x40c601
  40c64b:	gs int3 
  40c64d:	inc    ebx
  40c64e:	mov    al,0xfa
  40c650:	sub    al,BYTE PTR [ebx-0x57]
  40c653:	mov    ds:0xd95b0556,al
  40c658:	test   dl,ch
  40c65a:	mov    ds,WORD PTR [ebx-0x424ceeea]
  40c660:	mov    ah,0xb9
  40c662:	push   ebx
  40c663:	inc    esp
  40c664:	hlt    
  40c665:	mov    ch,0x33
  40c667:	xchg   edx,eax
  40c668:	into   
  40c669:	retf   
  40c66a:	leave  
  40c66b:	outs   dx,DWORD PTR ds:[esi]
  40c66c:	adc    DWORD PTR [ecx],0xffffffef
  40c66f:	cmp    ecx,DWORD PTR [ecx-0x3a]
  40c672:	stos   BYTE PTR es:[edi],al
  40c673:	mov    ds:0x1a5e2eb5,eax
  40c678:	scas   al,BYTE PTR es:[edi]
  40c679:	inc    esp
  40c67a:	loop   0x40c66f
  40c67c:	ror    BYTE PTR [eax+0x34b148ee],cl
  40c682:	in     eax,0x7d
  40c684:	xor    BYTE PTR [ebp+0x29285214],dh
  40c68a:	push   ecx
  40c68b:	and    eax,0x4eda8a7
  40c690:	pop    edi
  40c691:	or     BYTE PTR [edx-0x77],bh
  40c694:	ret    0xe854
  40c697:	pop    ds
  40c698:	out    dx,al
  40c699:	add    DWORD PTR [edi-0x683dc3ac],esp
  40c69f:	inc    eax
  40c6a0:	jo     0x40c64f
  40c6a2:	ja     0x40c6cc
  40c6a4:	lds    ebp,FWORD PTR [ebp+0x71092fb]
  40c6aa:	mov    bh,0xa1
  40c6ac:	sub    dh,BYTE PTR [ebx+0x2753a9a5]
  40c6b2:	repnz xor al,0x86
  40c6b5:	and    ebx,ebp
  40c6b7:	pop    esi
  40c6b8:	loope  0x40c685
  40c6ba:	jle    0x40c6e4
  40c6bc:	jmp    0xadc3578c
  40c6c1:	mov    ecx,0xee3688c7
  40c6c6:	les    edx,FWORD PTR [eax-0x32bd0c85]
  40c6cc:	retf   
  40c6cd:	and    edi,edx
  40c6cf:	cs adc al,0x74
  40c6d2:	push   cs
  40c6d3:	call   0x443d:0xe3ab2180
  40c6da:	ret    0xc106
  40c6dd:	sub    al,0x4a
  40c6df:	jns    0x40c705
  40c6e1:	loope  0x40c723
  40c6e3:	out    dx,eax
  40c6e4:	sbb    BYTE PTR [ecx+edi*2-0x41954bd9],0x56
  40c6ec:	bound  esp,QWORD PTR [eax+0x1121c780]
  40c6f2:	dec    ebx
  40c6f3:	je     0x40c6ff
  40c6f5:	inc    edi
  40c6f6:	mov    bl,0x21
  40c6f8:	imul   ebx,edx,0x29
  40c6fb:	mov    ds:0x392ad7ac,eax
  40c700:	(bad)  
  40c701:	pushf  
  40c702:	push   esp
  40c703:	jmp    0x40c775
  40c705:	ss stos BYTE PTR es:[edi],al
  40c707:	stos   DWORD PTR es:[edi],eax
  40c708:	arpl   WORD PTR [edi-0xc2b2edf],bp
  40c70e:	sbb    ch,BYTE PTR [ecx+0x300f4417]
  40c714:	mov    BYTE PTR [eax+0x6b6c91ee],0x31
  40c71b:	add    dl,BYTE PTR [esi+0x3f2156ed]
  40c721:	mov    fs,WORD PTR [ebx-0x19]
  40c724:	dec    ebp
  40c725:	and    bl,BYTE PTR [edx+0x72]
  40c728:	mov    ecx,0xd78ceff5
  40c72d:	xor    eax,0x277a819c
  40c732:	jg     0x40c75e
  40c734:	push   edi
  40c735:	mov    ds:0x63bfbdad,al
  40c73a:	sbb    DWORD PTR [edx],ebp
  40c73c:	fidiv  DWORD PTR [edi]
  40c73e:	dec    ebp
  40c73f:	or     BYTE PTR ds:0x2e07188c,dh
  40c745:	shl    BYTE PTR [ebp+0xf3d6c45],0x8d
  40c74c:	daa    
  40c74d:	adc    DWORD PTR [esi+eax*2],esi
  40c750:	ror    BYTE PTR [ebx],0x17
  40c753:	and    eax,0xe0f31c70
  40c758:	js     0x40c7d1
  40c75a:	jnp    0x40c749
  40c75c:	enter  0x7c79,0x83
  40c760:	pop    ecx
  40c761:	pop    ecx
  40c762:	xor    BYTE PTR [ecx+0x11],ah
  40c765:	inc    eax
  40c766:	mov    ebp,0xcdebffd4
  40c76b:	mov    ebp,0xdb2b1202
  40c770:	cmc    
  40c771:	imul   ebx,ebx,0xffffffc5
  40c774:	sub    al,0x35
  40c776:	pop    ds
  40c777:	sbb    DWORD PTR [edx],0xcb6c80ff
  40c77d:	lock outs dx,DWORD PTR ds:[esi]
  40c780:	mov    esi,eax
  40c782:	cmp    DWORD PTR [ebp-0x9],eax
  40c785:	loopne 0x40c742
  40c787:	dec    ecx
  40c788:	jo     0x40c804
  40c78a:	xchg   eax,ecx
  40c78c:	jl     0x40c729
  40c78e:	mov    ebx,0xc20004d
  40c793:	test   BYTE PTR [ebx+0x4c42d5dd],cl
  40c799:	scas   eax,DWORD PTR es:[edi]
  40c79a:	pop    eax
  40c79b:	adc    al,al
  40c79d:	(bad)  
  40c79e:	push   ds
  40c79f:	test   DWORD PTR [ebp-0x1fc03a70],ebx
  40c7a5:	xchg   DWORD PTR [ebp-0xa830c3d],eax
  40c7ab:	jae    0x40c7a2
  40c7ad:	add    eax,0x934250a2
  40c7b2:	xchg   ecx,eax
  40c7b3:	hlt    
  40c7b4:	sub    DWORD PTR [ebp-0x15],eax
  40c7b7:	mov    dl,0xd
  40c7b9:	mov    dl,0xaa
  40c7bb:	das    
  40c7bc:	push   eax
  40c7bd:	data16 in al,0x98
  40c7c0:	pop    es
  40c7c1:	cdq    
  40c7c2:	cdq    
  40c7c3:	sbb    DWORD PTR gs:[esp+edi*1-0x5d91183c],0x7ba09cd3
  40c7cf:	popf   
  40c7d0:	add    ebp,DWORD PTR [ebp+edx*4+0x57e98d19]
  40c7d7:	mov    esp,0x6a12bcfd
  40c7dc:	call   0xfb41fe10
  40c7e1:	daa    
  40c7e2:	das    
  40c7e3:	jae    0x40c815
  40c7e5:	or     eax,0xa2620c3
  40c7ea:	leave  
  40c7eb:	mov    ah,0xb9
  40c7ed:	not    ah
  40c7ef:	mov    dl,0xc6
  40c7f1:	or     DWORD PTR [ebx+0x593bf381],edx
  40c7f7:	cmp    cl,BYTE PTR [eax]
  40c7f9:	mov    esp,edx
  40c7fb:	and    esp,DWORD PTR [edi+0x4b]
  40c7fe:	mov    al,ds:0xcdeae2d
  40c803:	lods   eax,DWORD PTR ds:[esi]
  40c804:	ret    0xff9d
  40c807:	and    al,0x1e
  40c809:	loopne 0x40c851
  40c80b:	outs   dx,BYTE PTR ds:[esi]
  40c80c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c80d:	test   al,0xdf
  40c80f:	call   0x5263:0xeea538b6
  40c816:	outs   dx,DWORD PTR ds:[esi]
  40c817:	mov    eax,0x4bd3d897
  40c81c:	jo     0x40c80c
  40c81e:	out    0x4a,eax
  40c820:	in     eax,dx
  40c821:	adc    cl,BYTE PTR [edi]
  40c823:	jmp    0x40c7d1
  40c825:	rcr    BYTE PTR [ecx],0x20
  40c828:	cli    
  40c829:	mov    ah,0x5d
  40c82b:	dec    DWORD PTR [edx]
  40c82d:	int    0x58
  40c82f:	ins    DWORD PTR es:[di],dx
  40c831:	mov    edx,DWORD PTR [ecx+eiz*4+0x2e]
  40c835:	jmp    0x2f8eecb7
  40c83a:	out    dx,eax
  40c83b:	cli    
  40c83c:	or     eax,DWORD PTR [edi+0x57]
  40c83f:	ds or  dh,0x70
  40c843:	aam    0xad
  40c845:	fst    QWORD PTR [ebp+esi*8-0x5f688a3c]
  40c84c:	and    ecx,edi
  40c84e:	dec    ebp
  40c84f:	adc    edx,0x62
  40c852:	repz lock cld 
  40c855:	sbb    ebp,DWORD PTR [esi]
  40c857:	popa   
  40c858:	ror    DWORD PTR [ecx-0x6e],cl
  40c85b:	dec    esi
  40c85c:	inc    edx
  40c85d:	retf   0xa7b
  40c860:	sbb    al,0xec
  40c862:	mov    ds:0x1c8ede53,al
  40c867:	mov    ah,0xec
  40c869:	dec    ecx
  40c86a:	sti    
  40c86b:	inc    edi
  40c86c:	stos   BYTE PTR es:[edi],al
  40c86d:	retf   0x9cf6
  40c870:	xchg   edi,eax
  40c871:	js     0x40c8c7
  40c873:	rdpmc  
  40c875:	popf   
  40c876:	retf   0x23ac
  40c879:	pop    ebp
  40c87a:	xchg   ebp,eax
  40c87b:	and    eax,0xc5d78fc0
  40c880:	retf   
  40c881:	popf   
  40c882:	cs arpl di,cx
  40c885:	nop
  40c886:	inc    DWORD PTR [edx+0x6e]
  40c889:	jo     0x40c835
  40c88b:	fidivr DWORD PTR es:[eax+0x1a]
  40c88f:	dec    esp
  40c890:	adc    edx,ebp
  40c892:	test   BYTE PTR [ecx-0x1987d2a5],ah
  40c898:	add    eax,0xe6a972ce
  40c89d:	inc    esp
  40c89e:	mov    bl,0x85
  40c8a0:	in     al,0x51
  40c8a2:	mov    BYTE PTR [ebx],dh
  40c8a4:	repz mov esi,0xf07e8885
  40c8aa:	or     BYTE PTR gs:[edi],cl
  40c8ad:	push   0xffffffd0
  40c8af:	mov    ebp,eax
  40c8b1:	push   es
  40c8b2:	sub    BYTE PTR [ebx],ah
  40c8b4:	addr16 push ebx
  40c8b6:	aam    0xfe
  40c8b8:	mov    edi,0x813dc5ff
  40c8bd:	icebp  
  40c8be:	cmp    DWORD PTR [edi-0xc],ecx
  40c8c1:	daa    
  40c8c2:	adc    BYTE PTR [edx],dh
  40c8c4:	(bad)  
  40c8c6:	pop    ss
  40c8c7:	aam    0x9e
  40c8c9:	and    ebx,0x49
  40c8cc:	loop   0x40c90b
  40c8ce:	imul   esi
  40c8d0:	ret    
  40c8d1:	out    0x70,eax
  40c8d3:	ror    ebp,cl
  40c8d5:	or     ah,BYTE PTR [edi]
  40c8d7:	mov    al,0x9b
  40c8d9:	adc    eax,0x1b1be57b
  40c8de:	icebp  
  40c8df:	jmp    0x40c951
  40c8e1:	loope  0x40c935
  40c8e3:	add    BYTE PTR [esi],al
  40c8e5:	jo     0x40c963
  40c8e7:	xchg   ebx,eax
  40c8e8:	fdiv   DWORD PTR [edi+ebx*8-0x25608881]
  40c8ef:	mov    al,0x24
  40c8f1:	add    ebx,esp
  40c8f3:	imul   edx,DWORD PTR [esi+ecx*1-0x7cd642a5],0x7036d503
  40c8fe:	hlt    
  40c8ff:	add    BYTE PTR [ecx+0x639fe997],ah
  40c905:	arpl   WORD PTR ds:0xdf7728c4,ax
  40c90b:	mov    eax,DWORD PTR [ecx-0x67]
  40c90e:	push   0xfffffff8
  40c910:	stos   BYTE PTR es:[edi],al
  40c911:	sub    edx,esi
  40c913:	loopne 0x40c8e2
  40c915:	iret   
  40c916:	jbe    0x40c966
  40c918:	jb     0x40c907
  40c91a:	or     DWORD PTR [esi+0x41],edx
  40c91d:	sahf   
  40c91e:	xchg   esp,esp
  40c920:	call   0x3ae8fc49
  40c925:	out    dx,eax
  40c926:	(bad)  
  40c927:	call   0x4e27ae0d
  40c92c:	arpl   WORD PTR [ecx],di
  40c92e:	xchg   DWORD PTR [ecx+0x3],ecx
  40c931:	arpl   WORD PTR [edi+0x39],cx
  40c934:	inc    ecx
  40c935:	add    DWORD PTR [edi-0x4f],edx
  40c938:	cmc    
  40c939:	rol    BYTE PTR [edx],cl
  40c93b:	jnp    0x40c8ec
  40c93d:	xor    ah,dh
  40c93f:	fidiv  DWORD PTR [ecx]
  40c941:	mov    ch,0x7d
  40c943:	fstp   TBYTE PTR [edi]
  40c945:	iret   
  40c946:	pop    esp
  40c947:	outs   dx,DWORD PTR ds:[esi]
  40c948:	hlt    
  40c949:	shl    DWORD PTR [ebp+0x187d1816],cl
  40c94f:	popa   
  40c950:	test   eax,0x6b4df555
  40c955:	sbb    al,0x82
  40c957:	pop    esi
  40c958:	mov    ecx,0x6f425405
  40c95d:	add    eax,DWORD PTR [edi+0x1b]
  40c960:	push   ss
  40c961:	jp     0x40c9ab
  40c963:	int    0x85
  40c965:	clc    
  40c966:	outs   dx,DWORD PTR ds:[esi]
  40c967:	jl     0x40c90d
  40c969:	or     BYTE PTR [ebx-0x6c05ce6b],cl
  40c96f:	cwde   
  40c970:	sub    DWORD PTR [edx-0x38ff8cb6],ebp
  40c976:	outs   dx,BYTE PTR ds:[esi]
  40c977:	jg     0x40c9c0
  40c979:	arpl   dx,ax
  40c97b:	scas   eax,DWORD PTR es:[edi]
  40c97c:	mov    dh,0x4b
  40c97e:	icebp  
  40c97f:	sbb    al,0xd
  40c981:	xor    DWORD PTR [edi+0x24],ebp
  40c984:	loop   0x40c9dc
  40c986:	pop    ebp
  40c987:	sub    eax,0x1cab3c82
  40c98c:	xchg   edx,eax
  40c98d:	test   bh,0x3e
  40c990:	add    esi,esp
  40c992:	daa    
  40c993:	pop    esi
  40c994:	push   esi
  40c995:	inc    ebx
  40c996:	push   0xffffffa4
  40c998:	ins    DWORD PTR es:[edi],dx
  40c999:	xor    bh,dl
  40c99b:	sub    eax,esi
  40c99d:	mov    bh,0x61
  40c99f:	ror    dh,cl
  40c9a1:	inc    ebx
  40c9a2:	jns    0x40c959
  40c9a4:	ret    0xbd3e
  40c9a7:	js     0x40c9ef
  40c9a9:	or     eax,0xfb78f63f
  40c9ae:	aad    0xdc
  40c9b0:	int3   
  40c9b1:	fs add al,0x8a
  40c9b4:	into   
  40c9b5:	adc    eax,0xc1e2ad5a
  40c9ba:	dec    edi
  40c9bb:	data16 loop 0x40c94a
  40c9be:	xchg   ebx,eax
  40c9bf:	push   edx
  40c9c0:	sti    
  40c9c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9c2:	fwait
  40c9c3:	sti    
  40c9c4:	test   ah,ah
  40c9c6:	inc    ebp
  40c9c7:	data16 arpl dx,ax
  40c9ca:	inc    edx
  40c9cb:	aas    
  40c9cc:	pop    ebx
  40c9cd:	pop    edx
  40c9ce:	adc    esi,ebx
  40c9d0:	sahf   
  40c9d1:	loopne 0x40c97d
  40c9d3:	int    0xee
  40c9d5:	mov    ecx,0xb3572cfc
  40c9da:	outs   dx,DWORD PTR ds:[esi]
  40c9db:	push   edi
  40c9dc:	cmovo  ebp,DWORD PTR [eax-0x65]
  40c9e0:	add    BYTE PTR [ecx+0x3c],ch
  40c9e3:	addr16 (bad) 
  40c9e5:	add    bl,BYTE PTR [edx]
  40c9e7:	js     0x40ca17
  40c9e9:	sub    al,0xda
  40c9eb:	mov    edx,0x4d21e870
  40c9f0:	push   ecx
  40c9f1:	xor    al,0xcf
  40c9f3:	sbb    BYTE PTR [edi+edi*8+0x5fb82586],0x66
  40c9fb:	pop    ds
  40c9fc:	scas   al,BYTE PTR es:[edi]
  40c9fd:	lods   al,BYTE PTR ds:[esi]
  40c9fe:	ret    
  40c9ff:	dec    ebx
  40ca00:	xchg   ecx,eax
  40ca01:	sbb    edi,DWORD PTR [edx+ebp*2+0x67]
  40ca05:	pop    ds
  40ca06:	mov    ecx,0x131e3394
  40ca0b:	stos   DWORD PTR es:[edi],eax
  40ca0c:	xor    BYTE PTR [ebp-0x2febb5c5],dl
  40ca12:	stc    
  40ca13:	rcl    DWORD PTR [ebx+0x2de0a4ca],1
  40ca19:	rcr    BYTE PTR [edx-0x73],1
  40ca1c:	or     ch,cl
  40ca1e:	push   esp
  40ca1f:	aas    
  40ca20:	test   DWORD PTR [edx-0x5d],esi
  40ca23:	vminpd ymm5,ymm2,YMMWORD PTR [eax]
  40ca27:	or     BYTE PTR [edx],bh
  40ca29:	loope  0x40c9fb
  40ca2b:	xor    eax,DWORD PTR [ecx]
  40ca2d:	sub    BYTE PTR [ecx],0x0
  40ca30:	pop    ecx
  40ca31:	aaa    
  40ca32:	sub    DWORD PTR [eax+0x50],esp
  40ca35:	aam    0x4d
  40ca37:	ret    
  40ca38:	inc    ebp
  40ca39:	bound  ebx,QWORD PTR [ebp-0xc]
  40ca3c:	add    eax,0x34cf1e85
  40ca41:	pop    edi
  40ca42:	inc    ebp
  40ca43:	and    eax,edi
  40ca45:	daa    
  40ca46:	leave  
  40ca47:	cmp    al,0xe6
  40ca49:	dec    edx
  40ca4a:	shr    BYTE PTR [esi],cl
  40ca4c:	bound  esi,QWORD PTR [esi]
  40ca4e:	ret    
  40ca4f:	sub    BYTE PTR [edi-0x41],al
  40ca52:	stc    
  40ca53:	dec    esi
  40ca54:	and    eax,0x8bd3cd48
  40ca59:	je     0x40c9e4
  40ca5b:	fldenv [edi+0x74]
  40ca5e:	inc    ecx
  40ca5f:	mov    WORD PTR [edi-0x43],cs
  40ca62:	sub    eax,0x16829129
  40ca67:	pushf  
  40ca68:	(bad)  
  40ca69:	das    
  40ca6a:	mov    cl,0x41
  40ca6c:	fwait
  40ca6d:	inc    edi
  40ca6e:	sub    edi,DWORD PTR [edi+0x3e8afdf5]
  40ca74:	jns    0x40ca3f
  40ca76:	xchg   esi,ebx
  40ca78:	clc    
  40ca79:	adc    cl,BYTE PTR [ebx]
  40ca7b:	push   ss
  40ca7c:	mov    ebx,0x28117fc3
  40ca81:	(bad)  
  40ca82:	rcl    DWORD PTR [eax-0x1b],cl
  40ca85:	cdq    
  40ca86:	mov    dl,0x6e
  40ca88:	aas    
  40ca89:	mov    ecx,DWORD PTR [ebp-0x23]
  40ca8c:	ins    BYTE PTR es:[edi],dx
  40ca8d:	pop    DWORD PTR [esi]
  40ca8f:	adc    al,0x64
  40ca91:	xchg   esp,eax
  40ca92:	inc    ebp
  40ca93:	xchg   ebp,eax
  40ca94:	aas    
  40ca95:	loope  0x40cad1
  40ca97:	fisttp WORD PTR [ebp-0x1a]
  40ca9a:	enter  0x7e03,0x9
  40ca9e:	sub    eax,0x5b87775e
  40caa3:	mov    esp,0xa29683f7
  40caa8:	rol    BYTE PTR [ebp+0x6843af2d],1
  40caae:	add    eax,0x2c782ac3
  40cab3:	xchg   DWORD PTR [esp+edi*2-0x3fa03a],edx
  40caba:	xor    al,0x4f
  40cabc:	mov    ds:0x6f0a8613,eax
  40cac1:	nop
  40cac2:	sbb    BYTE PTR [edx+edi*2+0x2bde6d74],ch
  40cac9:	mov    dl,0xd8
  40cacb:	push   ecx
  40cacc:	shl    DWORD PTR ds:0x760ed571,0x3a
  40cad3:	(bad)  
  40cad4:	hlt    
  40cad5:	popf   
  40cad6:	sbb    eax,0xe2aef8de
  40cadb:	add    DWORD PTR [eax*2+0x4ca26344],ebp
  40cae2:	lods   eax,DWORD PTR ds:[esi]
  40cae3:	rcl    DWORD PTR [edi-0x7ecc4a64],0xda
  40caea:	mov    bl,0xd2
  40caec:	mov    bh,0x38
  40caee:	ret    
  40caef:	scas   eax,DWORD PTR es:[edi]
  40caf0:	mov    WORD PTR [eax-0x7fe4b558],?
  40caf6:	out    dx,al
  40caf7:	jle    0x40cab0
  40caf9:	mov    eax,0x1cd11439
  40cafe:	into   
  40caff:	xor    al,0x2
  40cb01:	push   edi
  40cb02:	int3   
  40cb03:	xor    DWORD PTR ds:0x5c1fae02,esi
  40cb09:	push   edx
  40cb0a:	add    eax,0xe8caabb1
  40cb0f:	cwde   
  40cb10:	inc    edx
  40cb11:	out    dx,eax
  40cb12:	shl    DWORD PTR [edi+0x40abe5e8],cl
  40cb18:	ja     0x40cb5d
  40cb1a:	repnz adc eax,0x96123189
  40cb20:	mov    cl,0x39
  40cb22:	mov    al,0x4a
  40cb24:	fcomi  st,st(4)
  40cb26:	lea    ecx,[esi]
  40cb28:	xor    DWORD PTR [ebp+0x72],eax
  40cb2b:	push   ebp
  40cb2c:	pop    es
  40cb2d:	jb     0x40cb21
  40cb2f:	sbb    ebx,DWORD PTR [eax+0x77]
  40cb32:	call   0x236dbbe0
  40cb37:	(bad)  [edx]
  40cb39:	mov    ebp,0x4ef0ba74
  40cb3e:	or     eax,0x449f62bc
  40cb43:	xchg   DWORD PTR ds:0xb0a07382,edx
  40cb49:	jo     0x40cbc3
  40cb4b:	fisttp QWORD PTR [edi-0x58126455]
  40cb51:	or     BYTE PTR [ebp+0x42],cl
  40cb54:	pop    ecx
  40cb55:	xchg   esi,eax
  40cb56:	mov    dh,0x2d
  40cb58:	stos   BYTE PTR es:[edi],al
  40cb59:	nop
  40cb5a:	daa    
  40cb5b:	adc    ch,dl
  40cb5d:	xchg   esp,eax
  40cb5e:	jne    0x40cbcf
  40cb60:	pop    ss
  40cb61:	loop   0x40cbc5
  40cb63:	call   0x9f08:0x6686280e
  40cb6a:	cmp    eax,0x7d817f3a
  40cb6f:	fisub  DWORD PTR [edx-0x748b349]
  40cb75:	and    cl,bl
  40cb77:	neg    ebx
  40cb79:	out    dx,al
  40cb7a:	and    eax,0xf462abe3
  40cb7f:	fidivr WORD PTR [esi+0x70]
  40cb82:	in     eax,dx
  40cb83:	(bad)  
  40cb84:	out    dx,al
  40cb85:	call   0xd30bb58e
  40cb8a:	test   eax,0x70aba73f
  40cb8f:	popa   
  40cb90:	pop    esp
  40cb91:	or     edx,esi
  40cb93:	xchg   esp,eax
  40cb94:	and    al,0x60
  40cb96:	imul   esp,DWORD PTR [ecx],0xa899e8bc
  40cb9c:	jge    0x40cb46
  40cb9e:	jge    0x40cbef
  40cba0:	pop    edx
  40cba1:	fistp  DWORD PTR [esi]
  40cba3:	sti    
  40cba4:	cs test al,0xdb
  40cba7:	cmp    BYTE PTR [ebp+0x5a5b3355],dh
  40cbad:	inc    edx
  40cbae:	pop    edx
  40cbaf:	cdq    
  40cbb0:	xor    BYTE PTR [edx+eiz*2-0x9],bl
  40cbb4:	sti    
  40cbb5:	mov    ds:0x2a1f744e,eax
  40cbba:	retf   0x7f75
  40cbbd:	or     al,0x24
  40cbbf:	mov    cl,0x95
  40cbc1:	push   edx
  40cbc2:	jle    0x40cbb8
  40cbc4:	adc    eax,0xc0fef7b
  40cbc9:	mov    ebx,0xdf49e72c
  40cbce:	ins    BYTE PTR es:[edi],dx
  40cbcf:	and    al,0x4b
  40cbd1:	push   ebp
  40cbd2:	jae    0x40cc0f
  40cbd4:	adc    dh,BYTE PTR [ebp+ecx*4-0x267cd7e7]
  40cbdb:	cmc    
  40cbdc:	mov    ds:0x50fb91fd,al
  40cbe1:	mov    edx,0xd5c3c04e
  40cbe6:	mov    ds:0xed23288d,eax
  40cbeb:	cmp    ah,bh
  40cbed:	push   0x1
  40cbef:	in     al,dx
  40cbf0:	imul   esp,DWORD PTR [ecx-0x1aed66d8],0x99b7a9c6
  40cbfa:	into   
  40cbfb:	loop   0x40cbbe
  40cbfd:	xor    al,0xa2
  40cbff:	(bad)  
  40cc00:	pop    esp
  40cc01:	outs   dx,DWORD PTR ds:[esi]
  40cc02:	int3   
  40cc03:	sbb    eax,0xfc8c01aa
  40cc08:	add    DWORD PTR [ebp+ebx*2+0x3692aaec],esi
  40cc0f:	dec    edi
  40cc10:	and    DWORD PTR [edi-0x271cefe1],ecx
  40cc16:	xchg   esi,eax
  40cc17:	out    0x9f,al
  40cc19:	popf   
  40cc1a:	mov    ah,0x1d
  40cc1c:	cmp    al,0x12
  40cc1e:	sbb    BYTE PTR [edx*2-0x602d609a],cl
  40cc25:	cmp    eax,0x5c46685a
  40cc2a:	inc    esi
  40cc2b:	mov    bl,0x42
  40cc2d:	xor    ebp,edx
  40cc2f:	shl    esp,cl
  40cc31:	mov    bh,ch
  40cc33:	mov    ecx,0x3274dc1a
  40cc38:	adc    esp,DWORD PTR [edx+0x39a438fe]
  40cc3e:	bound  ebp,QWORD PTR [edx+0x3]
  40cc41:	das    
  40cc42:	fistp  QWORD PTR [eax+ecx*1-0x5d9f8fc5]
  40cc49:	lahf   
  40cc4a:	and    eax,0x7f1a3396
  40cc4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc50:	mov    al,ds:0xcbc5b814
  40cc55:	repnz fmul DWORD PTR [ebp+ecx*8-0x71]
  40cc5a:	pop    edx
  40cc5b:	aaa    
  40cc5c:	dec    ebx
  40cc5d:	test   DWORD PTR [ebp-0x73],ecx
  40cc60:	pop    ebp
  40cc61:	add    ah,al
  40cc63:	dec    edi
  40cc64:	(bad)  
  40cc65:	js     0x40cbf4
  40cc67:	mov    dh,bh
  40cc69:	mov    edi,0x10a030a2
  40cc6e:	jmp    0x1f946191
  40cc73:	lds    ebp,FWORD PTR [eax-0x5594b21]
  40cc79:	fld    st(5)
  40cc7b:	popa   
  40cc7c:	push   0xffffffee
  40cc7e:	shr    DWORD PTR [eax+ebp*1-0x13],cl
  40cc82:	ret    
  40cc83:	push   es
  40cc84:	and    al,0xe9
  40cc86:	mov    al,0xbc
  40cc88:	sub    bh,BYTE PTR [edi+0x18]
  40cc8b:	adc    DWORD PTR [eax+0x7477196f],esi
  40cc91:	and    cl,BYTE PTR [eax+0x6e]
  40cc94:	lods   eax,DWORD PTR ds:[esi]
  40cc95:	es inc ebx
  40cc97:	imul   ecx,edx,0x5d9aade1
  40cc9d:	loope  0x40cce4
  40cc9f:	imul   ebp,ebp,0xffffffd9
  40cca2:	or     al,ch
  40cca4:	sbb    eax,0x4016ca27
  40cca9:	mov    DWORD PTR [edi-0x2a],esi
  40ccac:	in     al,dx
  40ccad:	das    
  40ccae:	lahf   
  40ccaf:	xor    DWORD PTR [eax],esi
  40ccb1:	dec    DWORD PTR [edx+0x7b]
  40ccb4:	dec    edx
  40ccb5:	jecxz  0x40ccb0
  40ccb7:	jmp    0x34594204
  40ccbc:	add    WORD PTR [esi-0x74],bp
  40ccc0:	adc    BYTE PTR [edx+eax*8+0x1a],bl
  40ccc4:	pop    ss
  40ccc5:	(bad)  
  40ccc6:	xor    edx,edi
  40ccc8:	daa    
  40ccc9:	nop
  40ccca:	mov    eax,ds:0x3d8ea3a0
  40cccf:	outs   dx,BYTE PTR ds:[esi]
  40ccd0:	sbb    BYTE PTR [ebx+eiz*2+0x7d00d82],bh
  40ccd7:	jae    0x6fb3c874
  40ccdd:	xor    dh,BYTE PTR [edx]
  40ccdf:	sub    ecx,ecx
  40cce1:	jns    0x40ccde
  40cce3:	imul   esp,DWORD PTR [eax],0xffffffe1
  40cce6:	test   al,0xe1
  40cce8:	data16 icebp 
  40ccea:	xor    BYTE PTR [edx-0x29e5157a],bh
  40ccf0:	nop
  40ccf1:	pop    esi
  40ccf2:	jp     0x40cd04
  40ccf4:	mov    bl,0xc5
  40ccf6:	add    DWORD PTR [eax+0x48570b2e],edx
  40ccfc:	jl     0x40cc7e
  40ccfe:	lods   al,BYTE PTR ds:[esi]
  40ccff:	mov    al,ds:0x782376bb
  40cd04:	int    0x97
  40cd06:	xchg   DWORD PTR [edx+0x58f61583],edx
  40cd0c:	cdq    
  40cd0d:	fwait
  40cd0e:	out    dx,eax
  40cd0f:	lds    ebp,FWORD PTR [edi*2+0x72f474e7]
  40cd16:	mov    ecx,0x99ec52
  40cd1b:	jns    0x40cd74
  40cd1d:	jmp    0xb42c8e7d
  40cd22:	xchg   ecx,eax
  40cd23:	sub    DWORD PTR [edx],eax
  40cd25:	mov    cl,BYTE PTR [ebx-0x2a567fdf]
  40cd2b:	mov    ds:0xacc508c0,al
  40cd30:	mov    edx,0xaec7b7a6
  40cd35:	sub    DWORD PTR [ecx],ecx
  40cd37:	aaa    
  40cd38:	leave  
  40cd39:	fcomp  DWORD PTR ds:0x81ff18ae
  40cd3f:	dec    edi
  40cd40:	sbb    ch,0x1a
  40cd43:	aaa    
  40cd44:	adc    BYTE PTR [ebx],al
  40cd46:	add    dl,bh
  40cd48:	repz test eax,esi
  40cd4b:	mov    bh,0x22
  40cd4d:	and    bl,bl
  40cd4f:	jae    0x40cda4
  40cd51:	das    
  40cd52:	sbb    al,0x54
  40cd54:	(bad)
  40cd57:	jnp    0x40cd31
  40cd59:	out    dx,eax
  40cd5a:	cs jb  0x40cd0f
  40cd5d:	jmp    0xca532f1d
  40cd62:	sar    DWORD PTR [ebx+0x5b54017e],cl
  40cd68:	dec    esp
  40cd69:	lds    ebp,FWORD PTR [ebx-0xaf218a2]
  40cd6f:	in     eax,0xee
  40cd71:	adc    al,0x28
  40cd73:	jl     0x40cd52
  40cd75:	or     BYTE PTR [edi],dh
  40cd77:	mov    esi,0x6fc64ef1
  40cd7c:	push   DWORD PTR [edx-0x78]
  40cd7f:	or     BYTE PTR [eax+0x2c89b01],bl
  40cd85:	add    bl,BYTE PTR gs:[ecx]
  40cd88:	repnz mov eax,ds:0x219b4f76
  40cd8e:	push   0xe6b08ab5
  40cd93:	not    BYTE PTR [esi-0x45]
  40cd96:	ins    BYTE PTR es:[edi],dx
  40cd97:	mov    eax,0x59a650d8
  40cd9c:	push   eax
  40cd9d:	pop    edi
  40cd9e:	inc    eax
  40cd9f:	lahf   
  40cda0:	sub    eax,0xc053ccff
  40cda5:	cwde   
  40cda6:	iret   
  40cda7:	mov    eax,ds:0x8a114641
  40cdac:	mov    ds:0x307a659c,eax
  40cdb1:	ins    BYTE PTR es:[edi],dx
  40cdb2:	popa   
  40cdb3:	(bad)  
  40cdb4:	hlt    
  40cdb5:	add    al,dl
  40cdb7:	and    ah,BYTE PTR [eax-0x14426796]
  40cdbd:	mov    ds,edi
  40cdbf:	add    ebp,DWORD PTR [ecx-0x23170a7a]
  40cdc5:	mov    BYTE PTR ds:0x6debf710,ah
  40cdcb:	pop    ebp
  40cdcc:	mov    eax,0x860b613d
  40cdd1:	cmp    edx,DWORD PTR [esi+0x1f345a31]
  40cdd7:	mov    edx,DWORD PTR [eax]
  40cdd9:	std    
  40cdda:	sub    al,BYTE PTR [edx]
  40cddc:	aaa    
  40cddd:	dec    ecx
  40cdde:	sti    
  40cddf:	xor    al,0xc8
  40cde1:	call   DWORD PTR [edx]
  40cde3:	stos   DWORD PTR es:[edi],eax
  40cde4:	and    ebp,esi
  40cde6:	sub    edx,DWORD PTR [ebx+0x11]
  40cde9:	dec    eax
  40cdea:	(bad)  
  40cdeb:	test   BYTE PTR [ebx+0x2e],0x14
  40cdef:	adc    cl,BYTE PTR [ebx]
  40cdf1:	sbb    ch,bl
  40cdf3:	mov    ch,0xe1
  40cdf5:	pop    es
  40cdf6:	sub    eax,edx
  40cdf8:	push   0xb1ae09c9
  40cdfd:	fcomp  QWORD PTR [ebx]
  40cdff:	sub    BYTE PTR [ebp-0x5a4358dc],dl
  40ce05:	dec    ebx
  40ce06:	cmc    
  40ce07:	gs mov ebx,0x4d6c1e31
  40ce0d:	mov    cl,0x1d
  40ce0f:	call   0x3739:0x6d74913
  40ce16:	inc    edx
  40ce17:	xchg   edx,eax
  40ce18:	dec    esi
  40ce19:	cli    
  40ce1a:	cmp    al,0xd0
  40ce1c:	jp     0x40ce08
  40ce1e:	in     eax,dx
  40ce1f:	cmp    ebx,ecx
  40ce21:	mov    ?,WORD PTR [edx+ecx*8-0x7e]
  40ce25:	lds    esi,FWORD PTR [eax+0x53764ab1]
  40ce2b:	inc    ecx
  40ce2c:	mov    ecx,0xe7cbc9d6
  40ce31:	loop   0x40ce79
  40ce33:	arpl   WORD PTR [esi+edx*8-0x36],bp
  40ce37:	fst    QWORD PTR [edx+eax*2+0x64]
  40ce3b:	pop    ecx
  40ce3c:	add    bl,ah
  40ce3e:	scas   eax,DWORD PTR es:[edi]
  40ce3f:	push   esi
  40ce40:	imul   eax,ebp,0xa377f87
  40ce46:	or     BYTE PTR ds:0xe66b4168,ch
  40ce4c:	out    0xaf,al
  40ce4e:	push   esi
  40ce4f:	inc    edi
  40ce50:	sbb    BYTE PTR [ebp-0x74d52fe2],0x43
  40ce57:	mov    bh,0x75
  40ce59:	add    BYTE PTR [eax+0x5316b8aa],dh
  40ce5f:	inc    esi
  40ce60:	daa    
  40ce61:	jne    0x40ce41
  40ce63:	and    eax,0x38482122
  40ce68:	pop    esi
  40ce69:	aaa    
  40ce6a:	pop    esp
  40ce6b:	out    dx,eax
  40ce6c:	bound  esp,QWORD PTR [edx+edi*8-0x34]
  40ce70:	adc    dl,BYTE PTR [esi]
  40ce72:	jl     0x40ce5e
  40ce74:	xor    eax,0xc8fba945
  40ce79:	mov    bp,0xa305
  40ce7d:	jge    0x40ce5e
  40ce7f:	bndstx [edi+0x12],bnd1
  40ce83:	and    DWORD PTR [ebx],esi
  40ce85:	inc    edx
  40ce86:	ds adc al,0xac
  40ce89:	lahf   
  40ce8a:	mov    esp,0x5e5326ed
  40ce8f:	pushf  
  40ce90:	out    dx,al
  40ce91:	xchg   edi,eax
  40ce92:	bound  edx,QWORD PTR [edi+0x6b]
  40ce95:	adc    al,0x98
  40ce97:	jp     0x40cea4
  40ce99:	fwait
  40ce9a:	cs ins BYTE PTR es:[edi],dx
  40ce9c:	dec    eax
  40ce9d:	pop    ds
  40ce9e:	pop    ss
  40ce9f:	arpl   di,sp
  40cea1:	and    al,BYTE PTR [eax+0x3c2fab7e]
  40cea7:	rol    esi,0xc5
  40ceaa:	jno    0x40cf0b
  40ceac:	jecxz  0x40cee3
  40ceae:	shr    esi,1
  40ceb0:	xchg   DWORD PTR [ebx+esi*1+0x57],esi
  40ceb4:	adc    al,0x2d
  40ceb6:	shl    BYTE PTR [edx+0x6d],0x26
  40ceba:	mov    edx,DWORD PTR [eax-0x19ca566d]
  40cec0:	cmp    ecx,edx
  40cec2:	jno    0x40cead
  40cec4:	mov    ah,0x67
  40cec6:	mov    cl,dh
  40cec8:	xor    al,0x64
  40ceca:	out    dx,eax
  40cecb:	ds stos BYTE PTR es:[edi],al
  40cecd:	sub    bl,BYTE PTR [ebx]
  40cecf:	ret    
  40ced0:	adc    bh,ah
  40ced2:	xchg   DWORD PTR [edx+0x37d70a5e],eax
  40ced8:	clc    
  40ced9:	repz xchg edi,eax
  40cedb:	retf   0xb419
  40cede:	push   ecx
  40cedf:	jp     0x40cec8
  40cee1:	xchg   esp,eax
  40cee2:	test   eax,0xd9d42814
  40cee7:	mov    dl,BYTE PTR [eax]
  40cee9:	inc    ebx
  40ceea:	ja     0x40cf01
  40ceec:	in     al,dx
  40ceed:	loop   0x40cec4
  40ceef:	xchg   DWORD PTR [edx],ecx
  40cef1:	lds    edx,FWORD PTR ds:0xd4955013
  40cef7:	xchg   ebp,eax
  40cef8:	inc    ebp
  40cef9:	mov    es:0x534c73fc,eax
  40ceff:	loop   0x40cf1f
  40cf01:	retf   0x607a
  40cf04:	stc    
  40cf05:	js     0x40cf36
  40cf07:	popf   
  40cf08:	mov    bl,0x43
  40cf0a:	mov    cl,0xe3
  40cf0c:	cmp    DWORD PTR [esi-0x3506b73d],esp
  40cf12:	into   
  40cf13:	mov    gs,WORD PTR [eax]
  40cf15:	adc    eax,0xa0215691
  40cf1a:	loope  0x40cef8
  40cf1c:	jo     0x40cf11
  40cf1e:	into   
  40cf1f:	cmc    
  40cf20:	pop    es
  40cf21:	stc    
  40cf22:	aas    
  40cf23:	xchg   DWORD PTR [ebx-0xe],esp
  40cf26:	push   0xfffffff6
  40cf28:	xchg   DWORD PTR [eax+0x25589bf6],edi
  40cf2e:	jle    0x40cf53
  40cf30:	lea    edx,[esi]
  40cf32:	jecxz  0x40cf46
  40cf34:	cmp    eax,DWORD PTR [ebx+0x11]
  40cf37:	push   0x8096eff9
  40cf3c:	jg     0x40cf70
  40cf3e:	stc    
  40cf3f:	icebp  
  40cf40:	push   edi
  40cf41:	js     0x40cf61
  40cf43:	aaa    
  40cf44:	fdiv   st,st(6)
  40cf46:	jg     0x40cf4c
  40cf48:	cmp    al,BYTE PTR [ecx]
  40cf4a:	out    0xe3,eax
  40cf4c:	dec    ebp
  40cf4d:	mov    db1,esi
  40cf50:	stos   DWORD PTR es:[edi],eax
  40cf51:	mov    bh,BYTE PTR ds:0x280624b2
  40cf57:	push   cs
  40cf58:	test   eax,0xb435ba4d
  40cf5d:	mov    ebp,esp
  40cf5f:	clc    
  40cf60:	xchg   edi,eax
  40cf61:	test   BYTE PTR [edx+0x69e4eb32],al
  40cf67:	xchg   BYTE PTR [esi+ebp*4+0x44b95e7e],dh
  40cf6e:	pop    eax
  40cf6f:	mov    ds:0x3d31f8c8,eax
  40cf74:	imul   ebp,edi,0xffffffe0
  40cf77:	and    eax,0x93c17a76
  40cf7c:	push   0xffffffc8
  40cf7e:	inc    edi
  40cf7f:	repz inc ecx
  40cf81:	jle    0x40cf3e
  40cf83:	in     eax,0x99
  40cf85:	pop    esi
  40cf86:	dec    ebp
  40cf87:	push   es
  40cf88:	mov    esp,0x66a37960
  40cf8d:	pop    edx
  40cf8e:	adc    al,BYTE PTR [esi+0x262d8d73]
  40cf94:	mov    ds,edx
  40cf96:	loope  0x40cff3
  40cf98:	ins    BYTE PTR es:[edi],dx
  40cf99:	sbb    al,0xc6
  40cf9b:	in     al,0x3e
  40cf9d:	loopne 0x40cf97
  40cf9f:	sbb    BYTE PTR [edi],bh
  40cfa1:	lahf   
  40cfa2:	call   0x1bb3:0x7f36326b
  40cfa9:	test   DWORD PTR [ecx-0x27],ebp
  40cfac:	or     al,0xaa
  40cfae:	push   esp
  40cfaf:	cmp    DWORD PTR [ecx],esp
  40cfb1:	or     cl,BYTE PTR [ebp+0x3a]
  40cfb4:	dec    BYTE PTR [esi+0x5d84d0e0]
  40cfba:	adc    eax,0x18eadd69
  40cfbf:	push   cs
  40cfc0:	hlt    
  40cfc1:	dec    BYTE PTR [ecx-0x2f61c5ca]
  40cfc7:	add    BYTE PTR [edi+ebx*2+0x1b383666],dh
  40cfce:	add    BYTE PTR [ebp-0xa125c39],cl
  40cfd4:	retf   0x7edc
  40cfd7:	dec    edx
  40cfd8:	dec    edx
  40cfd9:	ins    DWORD PTR es:[edi],dx
  40cfda:	bound  ecx,QWORD PTR [esi]
  40cfdc:	jo     0x40cf8e
  40cfde:	leave  
  40cfdf:	loope  0x40cf68
  40cfe1:	stos   DWORD PTR es:[edi],eax
  40cfe2:	ss sti 
  40cfe4:	in     al,dx
  40cfe5:	push   ss
  40cfe6:	iret   
  40cfe7:	pop    edx
  40cfe8:	pusha  
  40cfe9:	or     DWORD PTR ds:0x27ffc257,0xaa5cba0
  40cff3:	inc    edi
  40cff4:	xchg   edx,eax
  40cff5:	bound  esi,QWORD PTR [edx-0x31325415]
  40cffb:	adc    ebx,DWORD PTR [edi-0x60]
  40cffe:	sbb    eax,0x61a25a57
  40d003:	jl     0x40cfab
  40d005:	xor    DWORD PTR [ecx+0x1e],esi
  40d008:	mov    al,ds:0xa2552e22
  40d00d:	js     0x40cff8
  40d00f:	or     ch,BYTE PTR [ecx]
  40d011:	(bad)  
  40d012:	je     0x40cfae
  40d014:	sub    al,0x83
  40d016:	lods   eax,DWORD PTR ds:[esi]
  40d017:	sub    al,0x2e
  40d019:	jle    0x40d08e
  40d01b:	mov    fs,WORD PTR ds:0x58dca697
  40d021:	mov    al,ds:0x8a7d47a2
  40d026:	daa    
  40d027:	mov    esi,0x432cb973
  40d02c:	push   edi
  40d02d:	pop    ebx
  40d02e:	scas   eax,DWORD PTR es:[edi]
  40d02f:	clc    
  40d030:	sbb    BYTE PTR [ebp-0x74b0bf29],dh
  40d036:	push   ecx
  40d037:	ins    BYTE PTR es:[edi],dx
  40d038:	mov    bh,0xa6
  40d03a:	xchg   edx,eax
  40d03b:	nop
  40d03c:	xor    eax,edx
  40d03e:	inc    ebx
  40d03f:	rcl    DWORD PTR ds:0x132b35b7,0xe5
  40d046:	hlt    
  40d047:	inc    esp
  40d048:	add    ch,BYTE PTR [esi]
  40d04a:	test   eax,0xbf5fb12
  40d04f:	add    BYTE PTR [esi-0x28],ah
  40d052:	imul   ebp,DWORD PTR [esi+0x3a],0x35
  40d056:	(bad)  
  40d057:	mov    DWORD PTR [edx+0x43a2eb60],edx
  40d05d:	mov    edx,0x927ec5b7
  40d062:	inc    esp
  40d063:	and    al,0x62
  40d065:	sub    eax,0x410d644e
  40d06a:	pop    edi
  40d06b:	push   eax
  40d06c:	jne    0x40d0ae
  40d06e:	add    al,0xf7
  40d070:	inc    ebx
  40d071:	icebp  
  40d072:	lods   eax,DWORD PTR ds:[esi]
  40d073:	xor    esi,DWORD PTR [edi]
  40d075:	add    edi,edx
  40d077:	xchg   esi,eax
  40d078:	out    dx,eax
  40d079:	add    ah,BYTE PTR [edx-0x4d53e856]
  40d07f:	mov    esi,0xb7aa0ded
  40d084:	pushf  
  40d085:	push   ebx
  40d086:	js     0x40d027
  40d088:	cmp    bh,bl
  40d08a:	(bad)  
  40d08b:	jns    0x40d09b
  40d08d:	lods   al,BYTE PTR ds:[esi]
  40d08e:	push   0x4a
  40d090:	in     eax,dx
  40d091:	sar    ch,0xfa
  40d094:	cmp    al,0x49
  40d096:	adc    esp,DWORD PTR [ecx+ebx*4-0x4b1ce108]
  40d09d:	cs pop esp
  40d09f:	sar    BYTE PTR [eax],cl
  40d0a1:	shr    esp,1
  40d0a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0a4:	mov    edx,0x917632d3
  40d0a9:	retf   0xa7b7
  40d0ac:	loope  0x40d0f1
  40d0ae:	xor    edx,DWORD PTR [eax-0x59eeaa5d]
  40d0b4:	jbe    0x40d071
  40d0b6:	scas   eax,DWORD PTR es:[edi]
  40d0b7:	push   ebx
  40d0b8:	lds    esi,FWORD PTR [ecx+0x1b]
  40d0bb:	les    di,DWORD PTR [ebx+ecx*1-0x1c50d50d]
  40d0c3:	bound  eax,QWORD PTR [eax-0x3a95e04f]
  40d0c9:	sbb    DWORD PTR [edi+ebx*8],0x53
  40d0cd:	pop    ebp
  40d0ce:	add    DWORD PTR [ebx-0x5f],ebp
  40d0d1:	dec    edi
  40d0d2:	js     0x40d086
  40d0d4:	mov    dl,0x28
  40d0d6:	pusha  
  40d0d7:	xchg   BYTE PTR [edi],dl
  40d0d9:	cli    
  40d0da:	mov    al,0xa9
  40d0dc:	mov    cl,0x56
  40d0de:	mov    ch,0xcb
  40d0e0:	adc    ebp,DWORD PTR [ebx+0x49]
  40d0e3:	adc    al,0x6c
  40d0e5:	mul    BYTE PTR [ecx+eiz*2+0x5288281f]
  40d0ec:	add    al,0x42
  40d0ee:	pusha  
  40d0ef:	fsubp  st(5),st
  40d0f1:	xor    cl,bl
  40d0f3:	sar    eax,cl
  40d0f5:	cmp    eax,0x41f6eccf
  40d0fa:	pop    edx
  40d0fb:	mov    ebp,0x28dff032
  40d100:	nop
  40d101:	inc    esp
  40d102:	jg     0x40d121
  40d104:	or     DWORD PTR [edx+0x1142185a],esp
  40d10a:	add    bl,BYTE PTR [edx-0x47]
  40d10d:	out    dx,eax
  40d10e:	repz out 0x38,eax
  40d111:	fstp   st(4)
  40d113:	xchg   esi,eax
  40d114:	pop    ds
  40d115:	js     0x40d14c
  40d117:	scas   eax,DWORD PTR es:[edi]
  40d118:	pop    eax
  40d119:	loop   0x40d123
  40d11b:	fwait
  40d11c:	jno    0x40d126
  40d11e:	xchg   edi,eax
  40d11f:	mov    ch,0x14
  40d121:	jne    0x40d14b
  40d123:	xor    edi,DWORD PTR [esi+0x6f]
  40d126:	loope  0x40d0d8
  40d128:	inc    edi
  40d129:	xchg   edi,eax
  40d12a:	dec    esp
  40d12b:	xchg   edx,eax
  40d12c:	mov    eax,0xd6295957
  40d131:	fisttp WORD PTR [ecx+0x2f]
  40d134:	inc    eax
  40d135:	(bad)  
  40d136:	ror    eax,1
  40d138:	or     al,0x90
  40d13a:	adc    DWORD PTR [ebx+0x20],ebp
  40d13d:	arpl   WORD PTR [edx],dx
  40d13f:	mov    dh,0xc
  40d141:	retf   0x2c59
  40d144:	add    DWORD PTR [edx-0x2c051866],0xe382d874
  40d14e:	lahf   
  40d14f:	test   al,0x89
  40d151:	rcl    BYTE PTR [edx],cl
  40d153:	hlt    
  40d154:	(bad)  
  40d155:	aad    0x5
  40d157:	inc    ecx
  40d158:	jmp    0x9b36e928
  40d15d:	mov    dl,0x28
  40d15f:	fisub  WORD PTR [eax-0x16]
  40d162:	mov    WORD PTR [edx+esi*1+0x68],cs
  40d166:	adc    BYTE PTR [ebx+ebp*1+0x68782329],cl
  40d16d:	sub    ch,ah
  40d16f:	push   esp
  40d170:	fdivr  DWORD PTR [ecx+0x7]
  40d173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d174:	jg     0x40d138
  40d176:	nop    DWORD PTR [ebp+0x62364380]
  40d17d:	cmp    eax,0xccfbba2f
  40d182:	mov    edi,0x66f8bffe
  40d187:	push   ebx
  40d188:	das    
  40d189:	pop    ds
  40d18a:	mov    al,ds:0x13f65ed
  40d18f:	or     edx,ebx
  40d191:	jno    0x40d20c
  40d193:	mov    ecx,0xeda4fda1
  40d198:	xlat   BYTE PTR ds:[ebx]
  40d199:	cli    
  40d19a:	add    bh,ch
  40d19c:	test   al,0x15
  40d19e:	(bad)  
  40d19f:	jg     0x40d1ca
  40d1a1:	neg    DWORD PTR [esi+0x369fc0d7]
  40d1a7:	push   edx
  40d1a8:	dec    ebp
  40d1a9:	pop    esp
  40d1aa:	into   
  40d1ab:	pop    es
  40d1ac:	fisubr WORD PTR [ecx+ebx*4-0x1a]
  40d1b0:	or     esp,DWORD PTR [edi+0xb]
  40d1b3:	jbe    0x40d14d
  40d1b5:	repnz and esi,DWORD PTR [ebx-0x2122ffa9]
  40d1bc:	adc    DWORD PTR [esi+edx*2],edi
  40d1bf:	add    DWORD PTR [edi+edi*1+0x1a6868ef],edx
  40d1c6:	push   esp
  40d1c7:	fnstsw WORD PTR [ebp-0xbc31649]
  40d1cd:	jp     0x40d215
  40d1cf:	xor    BYTE PTR [ebx+edi*4],al
  40d1d2:	sbb    al,0xc5
  40d1d4:	test   eax,0xa68feb5f
  40d1d9:	xlat   BYTE PTR ds:[ebx]
  40d1da:	pop    ss
  40d1db:	or     DWORD PTR [ecx-0x7da97e5b],eax
  40d1e1:	mov    esp,0xfe2845b7
  40d1e6:	jmp    0x9f8da41b
  40d1eb:	out    dx,al
  40d1ec:	add    ecx,ecx
  40d1ee:	lods   eax,DWORD PTR ds:[esi]
  40d1ef:	mov    edx,0x4462cd62
  40d1f4:	mov    bh,BYTE PTR [eax-0x35]
  40d1f7:	pop    edi
  40d1f8:	into   
  40d1f9:	mov    ds:0xdb2ef0e1,al
  40d1fe:	inc    edi
  40d1ff:	in     al,0x64
  40d201:	jnp    0x40d1fa
  40d203:	ret    
  40d204:	cs loopne 0x40d286
  40d207:	sub    al,0x2
  40d209:	dec    edi
  40d20a:	js     0x40d19e
  40d20c:	pop    esi
  40d20d:	jmp    0x40d271
  40d20f:	repz cwde 
  40d211:	aaa    
  40d212:	stos   BYTE PTR es:[edi],al
  40d213:	sub    ch,BYTE PTR [ecx-0x4b0d14f8]
  40d219:	cmc    
  40d21a:	gs xor dl,dl
  40d21d:	cmp    DWORD PTR [eax],ebp
  40d21f:	jo     0x40d29b
  40d221:	cld    
  40d222:	pushf  
  40d223:	xchg   esp,eax
  40d224:	hlt    
  40d225:	ja     0x40d1e2
  40d227:	mov    ds:0xa5ab0492,al
  40d22c:	gs pop ecx
  40d22e:	mov    ds:0x55c6bd0d,al
  40d233:	daa    
  40d234:	imul   edx,DWORD PTR [edi],0x57681d6b
  40d23a:	push   esi
  40d23b:	popf   
  40d23c:	inc    ebx
  40d23d:	(bad)  
  40d23e:	cli    
  40d23f:	inc    ecx
  40d240:	gs sti 
  40d242:	std    
  40d243:	push   ebp
  40d244:	xlat   BYTE PTR ds:[ebx]
  40d246:	or     BYTE PTR [edi-0x75],bl
  40d249:	data16 scas al,BYTE PTR es:[edi]
  40d24b:	mov    BYTE PTR [eax+0x51],cl
  40d24e:	cmc    
  40d24f:	sub    BYTE PTR [ebx],0xa8
  40d252:	and    ebp,DWORD PTR [ecx]
  40d254:	or     DWORD PTR [esi],ebp
  40d256:	(bad)  [ebp+edi*4+0x1a]
  40d25a:	or     edx,0xffffffc4
  40d25d:	arpl   bx,bp
  40d25f:	jecxz  0x40d25e
  40d261:	pop    ds
  40d262:	xor    al,0x80
  40d264:	push   ebx
  40d265:	push   esi
  40d266:	mov    esp,0x2705032d
  40d26b:	mov    esi,0xc83bc703
  40d270:	je     0x40d2ae
  40d276:	jmp    0x40d29f
  40d27b:	mov    eax,DWORD PTR [ebp-0x4]
  40d27e:	mov    ecx,DWORD PTR [ebp-0x8]
  40d281:	xor    eax,esi
  40d283:	add    eax,edi
  40d285:	cmp    ecx,eax
  40d287:	mov    eax,DWORD PTR [ebp-0x4]
  40d28a:	je     0x40d2e9
  40d290:	mov    ecx,DWORD PTR [ebp-0x30]
  40d293:	xor    eax,esi
  40d295:	add    eax,edi
  40d297:	cmp    ecx,eax
  40d299:	je     0x40f6a6
  40d29f:	lea    eax,[ebp-0x8]
  40d2a2:	push   eax
  40d2a3:	push   DWORD PTR [ebp-0x28]
  40d2a6:	push   DWORD PTR [ebp+0xc]
  40d2a9:	call   0x411c5a
  40d2ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d2b1:	mov    ecx,DWORD PTR [ebp-0x8]
  40d2b4:	xor    eax,esi
  40d2b6:	add    eax,edi
  40d2b8:	cmp    ecx,eax
  40d2ba:	je     0x40d2d5
  40d2c0:	mov    eax,DWORD PTR [ebp-0x34]
  40d2c3:	movzx  eax,WORD PTR [eax+ebx*2]
  40d2c7:	mov    ecx,DWORD PTR [ebp-0x14]
  40d2ca:	mov    eax,DWORD PTR [ecx+eax*4]
  40d2cd:	mov    DWORD PTR [ebp-0x38],eax
  40d2d0:	jmp    0x40d27b
  40d2d5:	mov    eax,DWORD PTR [ebp-0xc]
  40d2d8:	xor    eax,esi
  40d2da:	lea    ebx,[ebx+eax*1+0x3272f3]
  40d2e1:	jmp    0x4087e2
  40d2e6:	mov    eax,DWORD PTR [ebp-0x4]
  40d2e9:	xor    eax,esi
  40d2eb:	jmp    0x40f69f
  40d2f0:	add    BYTE PTR [esi],cl
  40d2f2:	mov    ch,BYTE PTR [esp+eax*4+0x5e8600a0]
  40d2f9:	hlt    
  40d2fa:	aas    
  40d2fb:	push   eax
  40d2fc:	push   0x9508da3e
  40d301:	rol    BYTE PTR [ebx-0x7ca3177d],cl
  40d307:	or     DWORD PTR [ecx+eax*2],0x58
  40d30b:	lahf   
  40d30c:	test   eax,0xbfeebd5b
  40d311:	add    DWORD PTR [ecx+0x14],ebp
  40d314:	loopne 0x40d321
  40d316:	inc    esp
  40d317:	(bad)  
  40d318:	pop    esp
  40d319:	mov    DWORD PTR [ecx],edx
  40d31b:	or     al,0xb4
  40d31d:	cs (bad) 
  40d31f:	pop    ds
  40d320:	test   BYTE PTR [edi-0x24],0x20
  40d324:	mov    cl,0x89
  40d326:	dec    esi
  40d327:	mov    ecx,0xbf62a412
  40d32c:	jge    0x40d2d2
  40d32e:	arpl   WORD PTR [ebp-0x1b28de58],si
  40d334:	jno    0x40d39d
  40d336:	loopne 0x40d2f6
  40d338:	je     0x40d2cb
  40d33a:	jge    0x40d36d
  40d33c:	pop    esp
  40d33d:	bound  esi,QWORD PTR [ebx+0x75]
  40d340:	icebp  
  40d341:	sub    dh,BYTE PTR [eax-0x1ee31f56]
  40d347:	or     BYTE PTR [ecx],cl
  40d349:	push   cs
  40d34a:	(bad)  
  40d34b:	das    
  40d34c:	ins    BYTE PTR es:[edi],dx
  40d34d:	xor    ebx,DWORD PTR [eax+0x12317a64]
  40d353:	sbb    eax,0x54a9f6f1
  40d358:	out    dx,al
  40d359:	mov    edx,0xc2a2515e
  40d35e:	out    dx,al
  40d35f:	std    
  40d360:	pushf  
  40d361:	push   ecx
  40d362:	retf   
  40d363:	imul   ebx,edx,0x43
  40d366:	pop    esi
  40d367:	and    ebx,ecx
  40d369:	xchg   edx,eax
  40d36a:	push   0xde2e3e1b
  40d36f:	sbb    BYTE PTR [ebx],ch
  40d371:	and    eax,0xc3a926c5
  40d376:	loope  0x40d3a1
  40d378:	imul   ebp,DWORD PTR [edi+0x33],0xffffffd2
  40d37c:	push   ecx
  40d37d:	mov    dh,BYTE PTR [ebp-0x7ad38898]
  40d383:	jmp    0x40d344
  40d385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d386:	inc    esi
  40d387:	out    dx,eax
  40d388:	cmc    
  40d389:	adc    ebp,DWORD PTR [ecx-0x1db9d106]
  40d38f:	popf   
  40d390:	push   ebp
  40d391:	in     al,dx
  40d392:	in     eax,0x67
  40d394:	push   es
  40d395:	cmp    DWORD PTR [ebp+0x193d03b9],edi
  40d39b:	or     eax,0xf0487177
  40d3a0:	inc    eax
  40d3a1:	mov    esi,0x222c86f0
  40d3a6:	sti    
  40d3a7:	mov    DWORD PTR [eax],edx
  40d3a9:	out    0xa0,al
  40d3ab:	iret   
  40d3ac:	shl    DWORD PTR [edi+esi*4+0x1e],1
  40d3b0:	push   ss
  40d3b1:	jbe    0x40d392
  40d3b3:	outs   dx,DWORD PTR ds:[esi]
  40d3b4:	jb     0x40d356
  40d3b6:	sub    cl,BYTE PTR [edx+0x3ac8ff11]
  40d3bc:	sbb    al,0xa
  40d3be:	pop    edi
  40d3bf:	mov    al,ds:0x5b007220
  40d3c4:	scas   al,BYTE PTR es:[edi]
  40d3c5:	push   0xe8672cf1
  40d3ca:	push   0x1d25d101
  40d3cf:	sbb    edx,DWORD PTR ds:0xd715550
  40d3d5:	dec    ebx
  40d3d6:	add    bl,BYTE PTR [ebx]
  40d3d8:	test   cl,0xa
  40d3db:	or     dh,BYTE PTR ds:0x68f9ca31
  40d3e1:	lods   al,BYTE PTR ds:[esi]
  40d3e2:	ficom  DWORD PTR [edi+0x13953a54]
  40d3e8:	jp     0x40d456
  40d3ea:	push   esp
  40d3eb:	mul    al
  40d3ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3ee:	and    bl,dl
  40d3f0:	test   DWORD PTR [edx],ebx
  40d3f2:	mov    WORD PTR [edx+0x1a15e8b9],ds
  40d3f8:	aaa    
  40d3f9:	dec    esi
  40d3fa:	fldenv [edi]
  40d3fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3fd:	call   0xfa3:0x5e71b5e3
  40d404:	aas    
  40d405:	fwait
  40d406:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d407:	push   esp
  40d408:	out    0x73,al
  40d40a:	pop    esp
  40d40b:	popa   
  40d40c:	pop    ss
  40d40d:	psubsw mm3,mm1
  40d410:	sahf   
  40d411:	xchg   ebp,eax
  40d412:	pop    es
  40d413:	(bad)  
  40d414:	pop    edx
  40d415:	and    ecx,DWORD PTR [edi-0xa]
  40d418:	dec    esp
  40d419:	addr16 sahf 
  40d41b:	jae    0x40d49a
  40d41d:	add    bh,BYTE PTR [edx-0x6216588a]
  40d423:	add    ch,BYTE PTR [eax+0x39]
  40d426:	retf   
  40d427:	mov    ebx,esi
  40d429:	int3   
  40d42a:	ds ins DWORD PTR es:[edi],dx
  40d42c:	jp     0x40d429
  40d42e:	js     0x40d3c3
  40d430:	dec    ebx
  40d431:	scas   eax,DWORD PTR es:[edi]
  40d432:	adc    eax,0xe8285478
  40d437:	mov    edi,esp
  40d439:	cmp    dl,al
  40d43b:	fdiv   QWORD PTR [ecx-0x3a]
  40d43e:	inc    ebx
  40d43f:	inc    edi
  40d440:	mov    ah,0x4e
  40d442:	sub    DWORD PTR [edi+eax*2-0x2afab1a6],esp
  40d449:	mov    ecx,0x594d2928
  40d44e:	adc    esp,0xcf76db4
  40d454:	mov    edi,0x764c8c2a
  40d459:	popa   
  40d45a:	xchg   edi,eax
  40d45b:	mov    ah,0xc8
  40d45d:	sbb    eax,0x3a787c2e
  40d462:	fldenv [ecx+0x2225ce91]
  40d468:	fs pop esi
  40d46a:	mov    bh,BYTE PTR [eax]
  40d46c:	daa    
  40d46d:	or     edi,esp
  40d46f:	fisubr DWORD PTR ds:0xbfae3c46
  40d475:	and    eax,0xc3ce4fa5
  40d47a:	jns    0x40d44c
  40d47c:	and    eax,0xddd074e1
  40d481:	mov    BYTE PTR [esp+ebx*2+0x23af4d61],dl
  40d488:	or     DWORD PTR [ecx+eiz*1+0x65],esi
  40d48c:	shl    al,cl
  40d48e:	mov    edx,0x1343a989
  40d493:	push   eax
  40d494:	xchg   ebx,eax
  40d495:	lahf   
  40d496:	fcmovnbe st,st(2)
  40d498:	pop    es
  40d499:	fild   DWORD PTR [esi-0x3d8f7379]
  40d49f:	inc    edi
  40d4a0:	ds mov edx,0x45dfd517
  40d4a6:	xchg   ecx,eax
  40d4a7:	bound  esp,QWORD PTR [edi]
  40d4a9:	pop    ecx
  40d4aa:	jl     0x40d4e5
  40d4ac:	inc    esp
  40d4ad:	cwde   
  40d4ae:	cdq    
  40d4af:	mov    ecx,0x49653f30
  40d4b4:	nop
  40d4b5:	and    ah,cl
  40d4b7:	cmp    ebp,esi
  40d4b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4ba:	or     al,BYTE PTR [ebx+0x561ae9f3]
  40d4c0:	int3   
  40d4c1:	adc    al,0x23
  40d4c3:	sbb    BYTE PTR [eax+0x32],dl
  40d4c6:	(bad)  
  40d4c7:	sub    esi,DWORD PTR [ebx+eax*1]
  40d4ca:	repnz cmc 
  40d4cc:	mov    ebp,0xf5d5f11c
  40d4d1:	mov    ?,WORD PTR [edi]
  40d4d3:	dec    eax
  40d4d4:	jb     0x40d481
  40d4d6:	jmp    0x165f17dd
  40d4db:	loopne 0x40d4d4
  40d4dd:	dec    eax
  40d4de:	fsubr  st(4),st
  40d4e0:	cwde   
  40d4e1:	adc    DWORD PTR [edi],edx
  40d4e3:	xor    eax,0xba428114
  40d4e8:	mov    ah,0x77
  40d4ea:	add    eax,0xf3b36e9
  40d4ef:	jmp    0x40d487
  40d4f1:	out    0xe2,eax
  40d4f3:	shr    BYTE PTR [esi],0x13
  40d4f6:	dec    eax
  40d4f7:	rcr    DWORD PTR [edx+0x7060be00],cl
  40d4fd:	repz out dx,al
  40d4ff:	mov    bl,0x3b
  40d501:	mov    edx,0xbd7fd8fe
  40d506:	pop    edi
  40d507:	hlt    
  40d508:	std    
  40d509:	fs icebp 
  40d50b:	not    BYTE PTR [edx]
  40d50d:	sbb    edx,DWORD PTR es:[ebx]
  40d510:	add    BYTE PTR [edi+0x62478593],0x70
  40d517:	int    0xa6
  40d519:	or     DWORD PTR [eax],eax
  40d51b:	cmpxchg DWORD PTR [ebx+0x19],edx
  40d51f:	xchg   edi,eax
  40d520:	fmul   st(0),st
  40d522:	pop    edi
  40d523:	ins    DWORD PTR es:[edi],dx
  40d524:	push   es
  40d525:	adc    DWORD PTR [esi-0x64],esi
  40d528:	dec    eax
  40d529:	sub    ebx,ebx
  40d52b:	cwde   
  40d52c:	push   cs
  40d52d:	add    edx,0x63
  40d530:	add    eax,0x71416441
  40d535:	inc    edx
  40d536:	call   0xb21c:0x83a762c4
  40d53d:	fcom   DWORD PTR [ebp-0x5d8f358]
  40d543:	lea    esp,[bp+di]
  40d546:	iret   
  40d547:	fsubp  st(0),st
  40d549:	and    DWORD PTR [ebx-0x4714a7f9],esp
  40d54f:	and    BYTE PTR [eax+0xcaf35a2],ah
  40d555:	nop
  40d556:	mov    bl,0x4a
  40d558:	(bad)  [edi+0x4c1a9387]
  40d55e:	cmc    
  40d55f:	inc    edi
  40d560:	inc    ebx
  40d561:	mov    bh,0x48
  40d563:	pop    ecx
  40d564:	jbe    0x40d5b3
  40d566:	sub    DWORD PTR [eax-0x6d],esp
  40d569:	pop    eax
  40d56a:	mov    al,al
  40d56c:	pop    esi
  40d56d:	retf   
  40d56e:	icebp  
  40d56f:	fcomp  DWORD PTR [eax+0x7e0881e0]
  40d575:	adc    bl,BYTE PTR [edi-0x64]
  40d578:	jge    0x40d5df
  40d57a:	pop    ss
  40d57b:	jp     0x40d5ed
  40d57d:	cld    
  40d57e:	xchg   edx,eax
  40d57f:	mov    eax,ds:0x90f0da0a
  40d584:	fmul   st,st(2)
  40d586:	mov    edx,0x4f302b6e
  40d58b:	(bad)  
  40d58d:	bound  esi,QWORD PTR [ebx]
  40d58f:	jns    0x40d606
  40d591:	inc    eax
  40d592:	push   eax
  40d593:	inc    eax
  40d594:	test   al,0xae
  40d596:	call   0xf720:0x1a4ad75d
  40d59d:	cmp    DWORD PTR [edx],edi
  40d59f:	inc    esp
  40d5a0:	push   ss
  40d5a1:	jns    0x40d5c9
  40d5a3:	stos   DWORD PTR es:[edi],eax
  40d5a4:	fist   WORD PTR [ecx-0x32]
  40d5a7:	ret    
  40d5a8:	ins    BYTE PTR es:[edi],dx
  40d5a9:	in     eax,dx
  40d5aa:	out    0xe3,al
  40d5ac:	sub    eax,0xa31d3fad
  40d5b1:	mov    edi,0x5c54504a
  40d5b6:	pusha  
  40d5b7:	test   eax,0x7b6db18c
  40d5bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5bd:	(bad)  
  40d5bf:	dec    edi
  40d5c0:	les    edx,FWORD PTR [ecx-0x5f]
  40d5c3:	fadd   QWORD PTR [ebx-0x36d4d4ee]
  40d5c9:	jb     0x40d5a3
  40d5cb:	lods   al,BYTE PTR ds:[esi]
  40d5cc:	in     eax,dx
  40d5cd:	in     eax,0xa0
  40d5cf:	adc    ebx,DWORD PTR ds:0xe6adc616
  40d5d5:	and    dh,dh
  40d5d7:	dec    edi
  40d5d8:	push   ds
  40d5d9:	or     esi,DWORD PTR [edi]
  40d5db:	mov    esp,0x1bea3d29
  40d5e0:	ins    DWORD PTR es:[edi],dx
  40d5e1:	jmp    0x82aa8cc
  40d5e6:	in     eax,dx
  40d5e7:	es clc 
  40d5e9:	xchg   ebx,eax
  40d5ea:	out    dx,al
  40d5eb:	mov    WORD PTR [eax],?
  40d5ed:	sub    al,0xf8
  40d5ef:	mov    edi,0x4c017ce1
  40d5f4:	loope  0x40d5c8
  40d5f6:	xor    bl,BYTE PTR [ebp+0x54]
  40d5f9:	retf   0x8bfd
  40d5fc:	enter  0x95d6,0xb
  40d600:	or     BYTE PTR [ebx+0x331ef2a2],cl
  40d606:	pop    edx
  40d607:	xchg   ecx,eax
  40d608:	inc    ecx
  40d609:	xchg   DWORD PTR [edx-0x4e],esp
  40d60c:	div    DWORD PTR [ebx-0x44]
  40d60f:	or     ch,bh
  40d611:	and    BYTE PTR [edx+0x2d],cl
  40d614:	dec    edi
  40d615:	fild   DWORD PTR [eax+0x79a901e9]
  40d61b:	out    0x49,al
  40d61d:	jo     0x40d64d
  40d61f:	mov    BYTE PTR [ebx],0x41
  40d622:	adc    BYTE PTR [edi+0x7cb796e6],ch
  40d628:	mov    ah,0xc8
  40d62a:	(bad)  
  40d62c:	psubsb mm4,QWORD PTR [esi+0x25]
  40d630:	test   al,0x6f
  40d632:	xchg   edx,eax
  40d633:	adc    al,0x5f
  40d635:	add    ch,BYTE PTR [esi-0x43]
  40d638:	or     eax,0x823f08b0
  40d63d:	fs js  0x40d6b7
  40d640:	rcl    BYTE PTR [edi-0xcf5844a],1
  40d646:	and    DWORD PTR [edi-0x7],0x69
  40d64a:	das    
  40d64b:	xor    eax,0xe97300db
  40d650:	fwait
  40d651:	ds sbb eax,0xc62b5479
  40d657:	adc    cl,BYTE PTR [ebx-0x3b128b1a]
  40d65d:	lahf   
  40d65e:	retf   0x7b41
  40d661:	call   0xde70df6f
  40d666:	adc    al,BYTE PTR [edx]
  40d668:	fistp  WORD PTR [ebx]
  40d66a:	inc    edx
  40d66b:	sub    ah,BYTE PTR [esi+0x38]
  40d66e:	iret   
  40d66f:	lahf   
  40d670:	mov    eax,ds:0x19a4c19e
  40d675:	mov    edx,0x6e8b18ab
  40d67a:	idiv   DWORD PTR [esi+0x2063cb57]
  40d680:	xor    DWORD PTR [eax+0x68],eax
  40d683:	mov    cl,0xe9
  40d685:	dec    ebp
  40d686:	iret   
  40d687:	or     edx,DWORD PTR [ecx-0x63]
  40d68a:	fist   DWORD PTR [edi-0x5b]
  40d68d:	lahf   
  40d68e:	inc    edx
  40d68f:	sbb    bl,BYTE PTR [ebp-0x2c55b77c]
  40d695:	dec    edi
  40d696:	out    0x85,al
  40d698:	dec    edx
  40d699:	xchg   ebx,eax
  40d69a:	xchg   eax,esi
  40d69c:	jns    0x40d6e1
  40d69e:	out    0xa4,eax
  40d6a0:	rol    eax,cl
  40d6a2:	xchg   esp,eax
  40d6a3:	test   BYTE PTR [ebp+0x2ae9c26d],dh
  40d6a9:	lods   al,BYTE PTR ds:[esi]
  40d6aa:	mov    DWORD PTR [esp+ebx*1],edi
  40d6ad:	mov    cl,0x8a
  40d6af:	mov    ecx,DWORD PTR [edx]
  40d6b1:	push   0xffffff99
  40d6b3:	xchg   ebx,eax
  40d6b4:	daa    
  40d6b5:	aaa    
  40d6b6:	les    eax,FWORD PTR [ebp-0x3e4c059f]
  40d6bc:	cmp    DWORD PTR [edx-0x39],esp
  40d6bf:	sub    BYTE PTR [ebx+0x730309ca],0xf4
  40d6c6:	mov    ds,WORD PTR [esi-0x5101249c]
  40d6cc:	sbb    DWORD PTR [eax+eax*2+0x3],edx
  40d6d0:	outs   dx,DWORD PTR ds:[esi]
  40d6d1:	mov    WORD PTR [edi-0x39],gs
  40d6d4:	sub    dh,BYTE PTR [edi+0x1d]
  40d6d7:	mov    BYTE PTR [ebp-0x44],ch
  40d6da:	call   0x15ec6ef4
  40d6df:	or     eax,0x1fc7e622
  40d6e4:	call   0xddb8a8f8
  40d6e9:	sti    
  40d6ea:	sbb    ch,ch
  40d6ec:	mov    bl,0xbe
  40d6ee:	pop    ds
  40d6ef:	xchg   DWORD PTR [esi-0x1700da8a],edx
  40d6f5:	stc    
  40d6f6:	imul   esp,DWORD PTR [ecx-0x3a],0x59
  40d6fa:	mov    esp,0x5a78f3bf
  40d6ff:	dec    ecx
  40d700:	pop    es
  40d701:	mov    ch,0x85
  40d703:	mov    dh,0xaf
  40d705:	add    esi,esp
  40d707:	pop    ecx
  40d708:	or     DWORD PTR gs:0x4040fe80,esi
  40d70f:	fwait
  40d710:	dec    esi
  40d711:	int3   
  40d712:	outs   dx,DWORD PTR ds:[esi]
  40d713:	sub    al,0xf2
  40d715:	ret    
  40d716:	mov    DWORD PTR [esi-0x5f4a2286],eax
  40d71c:	fisubr DWORD PTR [edx]
  40d71e:	xchg   edi,eax
  40d71f:	push   edx
  40d720:	and    BYTE PTR [edi+0x6c04f41e],cl
  40d726:	lds    ebx,FWORD PTR [ebx-0x58f4e893]
  40d72c:	out    0x39,al
  40d72e:	xor    eax,0x9e8bd44e
  40d733:	fs inc ebp
  40d735:	mov    ah,0x56
  40d737:	add    ch,BYTE PTR [edx+0x6f6a3c08]
  40d73d:	mov    eax,0x1eda9b47
  40d742:	mov    dh,0x83
  40d744:	mov    ds:0xb94139d2,al
  40d749:	jbe    0x40d6cf
  40d74b:	jae    0x40d756
  40d74d:	cmp    ah,BYTE PTR [ecx]
  40d74f:	sub    al,0x20
  40d751:	jecxz  0x40d73e
  40d753:	and    eax,0x8f1b42a0
  40d758:	frstor [ecx-0x55d2438d]
  40d75e:	pushf  
  40d75f:	jg     0x40d6f1
  40d761:	jbe    0x40d7bd
  40d763:	ja     0x40d716
  40d765:	sahf   
  40d766:	bound  edi,QWORD PTR [ebp+0x2f6abf6a]
  40d76c:	fucom  st(2)
  40d76e:	cmp    eax,DWORD PTR [edx]
  40d770:	inc    esi
  40d771:	dec    eax
  40d772:	ret    
  40d773:	bound  ecx,QWORD PTR [edx-0x70b9d493]
  40d779:	popf   
  40d77a:	scas   al,BYTE PTR es:[edi]
  40d77b:	inc    esp
  40d77c:	sahf   
  40d77d:	dec    esp
  40d77e:	into   
  40d77f:	mov    edi,0xe9e259ba
  40d784:	jae    0x40d7a5
  40d786:	adc    eax,0x397be4bb
  40d78b:	mov    ds:0xedb79d64,eax
  40d790:	adc    cl,ch
  40d792:	repz mov eax,0x1fb19ae4
  40d798:	push   ecx
  40d799:	(bad)  
  40d79a:	xchg   esp,eax
  40d79b:	push   es
  40d79c:	mov    bl,0x16
  40d79e:	dec    edi
  40d79f:	sub    dl,BYTE PTR [ecx+0x19ff0263]
  40d7a5:	cmc    
  40d7a6:	jbe    0x40d7c3
  40d7a8:	dec    esi
  40d7a9:	out    0x79,al
  40d7ab:	jge    0x40d7e6
  40d7ad:	pop    esp
  40d7ae:	xchg   esp,eax
  40d7af:	adc    ecx,DWORD PTR [edx-0x5cce15df]
  40d7b5:	cmp    BYTE PTR [ebx],bl
  40d7b7:	cmp    DWORD PTR [ecx-0x27],esi
  40d7ba:	jp     0x40d779
  40d7bc:	xor    ebx,ebx
  40d7be:	push   cs
  40d7bf:	cmp    eax,0xe981f2a3
  40d7c4:	push   es
  40d7c5:	js     0x40d767
  40d7c7:	jge    0x40d800
  40d7c9:	and    BYTE PTR [ecx+0x5e],bh
  40d7cc:	inc    ecx
  40d7cd:	jbe    0x40d79a
  40d7cf:	lods   eax,DWORD PTR ds:[esi]
  40d7d0:	test   eax,0x8b5b78db
  40d7d5:	(bad)  
  40d7d6:	fmul   st,st(3)
  40d7d8:	ficomp DWORD PTR [esi]
  40d7da:	push   0x9c2f90d1
  40d7df:	adc    al,0xd4
  40d7e1:	sbb    ebp,eax
  40d7e3:	sub    esi,DWORD PTR [ebp+0x53ef92c6]
  40d7e9:	or     esi,DWORD PTR [eax]
  40d7eb:	xchg   DWORD PTR [edx],eax
  40d7ed:	nop
  40d7ee:	jp     0x40d78f
  40d7f0:	out    dx,eax
  40d7f1:	je     0x40d7be
  40d7f3:	add    al,0xac
  40d7f5:	enter  0xf800,0xa6
  40d7f9:	jb     0x40d7f9
  40d7fb:	pop    esp
  40d7fc:	jg     0x40d860
  40d7fe:	jge    0x40d7e6
  40d800:	js     0x40d7ac
  40d802:	inc    eax
  40d803:	lahf   
  40d804:	(bad)  
  40d805:	jnp    0x40d86e
  40d807:	aaa    
  40d808:	inc    esp
  40d809:	call   0x107cecd2
  40d80e:	addr16 hlt 
  40d810:	adc    BYTE PTR [esi-0x26],ch
  40d813:	daa    
  40d814:	inc    edi
  40d815:	or     edi,DWORD PTR [ebx+0x6dba8f1b]
  40d81b:	aad    0x8
  40d81d:	push   ds
  40d81e:	fiadd  DWORD PTR [ebp+ecx*4+0x377d086f]
  40d825:	jle    0x40d822
  40d827:	push   es
  40d828:	xchg   DWORD PTR [esi-0x66e109d9],esi
  40d82e:	lea    ebx,[ecx]
  40d830:	lods   al,BYTE PTR ds:[esi]
  40d831:	adc    eax,DWORD PTR [esi]
  40d833:	std    
  40d834:	loop   0x40d896
  40d836:	lock sub eax,0x80b0c926
  40d83c:	imul   edx,edx,0xfaddd72
  40d842:	popf   
  40d843:	pop    ebx
  40d844:	call   FWORD PTR fs:[ebp-0x1b874b2d]
  40d84b:	cwde   
  40d84c:	imul   esp,DWORD PTR [esi-0x174e4746],0x38e3efb8
  40d856:	js     0x40d8ca
  40d858:	div    bl
  40d85a:	or     BYTE PTR [edx-0x20],cl
  40d85d:	mov    bl,0x15
  40d85f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d860:	enter  0xca3e,0xae
  40d864:	push   ds
  40d865:	(bad)  
  40d866:	aad    0x91
  40d868:	icebp  
  40d869:	jecxz  0x40d8a9
  40d86b:	jbe    0x40d892
  40d86d:	push   0xffce9b07
  40d872:	imul   ax,di,0xffab
  40d876:	jmp    0x22889a4a
  40d87b:	test   eax,0x9a8c41ac
  40d880:	mov    BYTE PTR ds:0xafeb7bed,0x2b
  40d887:	ret    
  40d888:	cmp    DWORD PTR [esi],0xffffffcd
  40d88b:	push   esp
  40d88c:	mov    ?,WORD PTR [eax+0x36]
  40d88f:	pop    ss
  40d890:	xor    al,0x4d
  40d892:	xor    eax,0x1582c699
  40d897:	scas   al,BYTE PTR es:[edi]
  40d898:	bnd jmp 0x41752bb
  40d89e:	sub    eax,0x96f51fff
  40d8a3:	neg    DWORD PTR [ebx+0x219c3a74]
  40d8a9:	adc    eax,0xdc061a1
  40d8ae:	xor    ah,0x3c
  40d8b1:	pop    esp
  40d8b2:	xor    BYTE PTR [esi-0x64],ah
  40d8b5:	fadd   st,st(1)
  40d8b7:	psubusb mm3,mm6
  40d8ba:	mov    al,ds:0x2b7cea87
  40d8bf:	sub    DWORD PTR [esi+0x4bcd1697],esi
  40d8c5:	aad    0x4
  40d8c7:	xchg   edi,eax
  40d8c8:	mov    cl,BYTE PTR [ebp+ebx*2+0x511c84d3]
  40d8cf:	mov    eax,0xd520e524
  40d8d4:	nop
  40d8d5:	cmp    DWORD PTR [edx],edx
  40d8d7:	arpl   WORD PTR [edi-0x1],si
  40d8da:	jbe    0x40d904
  40d8dc:	das    
  40d8dd:	xchg   DWORD PTR [esi],ecx
  40d8df:	cmp    BYTE PTR [ecx+0x24],dl
  40d8e2:	adc    ebx,edi
  40d8e4:	fsubr  st,st(0)
  40d8e6:	ror    esp,cl
  40d8e8:	pop    ecx
  40d8e9:	lods   al,BYTE PTR ss:[esi]
  40d8eb:	enter  0xe49d,0x57
  40d8ef:	lea    ebp,[ecx+0x61]
  40d8f2:	imul   esi,DWORD PTR [ecx+ebp*2-0x46],0x53
  40d8f7:	ins    DWORD PTR es:[edi],dx
  40d8f8:	test   eax,0x87470f4
  40d8fd:	and    BYTE PTR [ebp+0x5a7653df],dl
  40d903:	in     al,dx
  40d904:	xchg   esi,esi
  40d906:	pushf  
  40d907:	sub    cl,dh
  40d909:	push   ebp
  40d90a:	add    al,dh
  40d90c:	and    BYTE PTR [ebx+ecx*2],al
  40d90f:	int    0x36
  40d911:	lds    edx,FWORD PTR [edi-0x28]
  40d914:	xchg   ecx,eax
  40d915:	mov    es,WORD PTR [edx-0x485374ab]
  40d91b:	mov    esp,0x6461f291
  40d920:	or     ebp,DWORD PTR [eax]
  40d922:	rcr    DWORD PTR [ebx+0x3e3b9e7f],cl
  40d928:	dec    esi
  40d929:	mov    al,0xff
  40d92b:	repz fnstenv [ebx+0x1]
  40d92f:	mov    esp,0x4bdc0734
  40d934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d935:	push   esi
  40d936:	mov    al,BYTE PTR [ecx-0xd]
  40d939:	jo     0x40d97f
  40d93b:	aas    
  40d93c:	out    0x6,al
  40d93e:	jno    0x40d95b
  40d940:	sbb    al,0x26
  40d942:	add    ebp,DWORD PTR [eax-0x51]
  40d945:	jmp    0x5169:0x1cedea05
  40d94c:	adc    eax,0x588557fe
  40d951:	mov    ds:0xcd114ee3,al
  40d956:	sub    al,0x22
  40d958:	rol    DWORD PTR [ecx],0x77
  40d95b:	aas    
  40d95c:	pop    ebp
  40d95d:	int    0xda
  40d95f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d960:	(bad)  
  40d961:	fsub   QWORD PTR [ebx-0x72]
  40d964:	jp     0x40d9e4
  40d966:	ja     0x40d9a9
  40d968:	pop    edx
  40d969:	adc    ah,0x45
  40d96c:	push   ebx
  40d96d:	pop    eax
  40d96e:	mov    ah,0x94
  40d970:	sbb    bl,bl
  40d972:	xchg   ecx,eax
  40d973:	inc    edx
  40d974:	jb     0x40d96a
  40d976:	push   edx
  40d977:	ds pop ebp
  40d979:	(bad)  
  40d97a:	outs   dx,DWORD PTR ds:[esi]
  40d97b:	sahf   
  40d97c:	pusha  
  40d97d:	test   al,0xde
  40d97f:	shr    BYTE PTR [ecx+ebp*1],1
  40d982:	mov    edx,0x5d98078f
  40d987:	mov    al,ch
  40d989:	jnp    0x40d9de
  40d98b:	jne    0x40d980
  40d98d:	jmp    0x9693:0xa03f0549
  40d994:	imul   ebx,DWORD PTR [edi],0xb72517cd
  40d99a:	xchg   ecx,eax
  40d99b:	ins    DWORD PTR es:[edi],dx
  40d99c:	mov    ebx,esi
  40d99e:	out    dx,al
  40d99f:	repnz (bad) 
  40d9a1:	fmul   DWORD PTR [edi]
  40d9a3:	sub    BYTE PTR [esi-0x49348473],ah
  40d9a9:	neg    DWORD PTR [edx-0xb]
  40d9ac:	dec    ebp
  40d9ad:	or     BYTE PTR [ebx],0xa8
  40d9b0:	or     DWORD PTR [edx+0x1b],0xffffffba
  40d9b4:	and    al,0xb
  40d9b6:	mov    dl,0xc2
  40d9b8:	outs   dx,DWORD PTR ds:[esi]
  40d9b9:	mov    bl,0x6f
  40d9bb:	push   edi
  40d9bc:	mov    bh,0x26
  40d9be:	sti    
  40d9bf:	mov    DWORD PTR [eax-0x3b],ecx
  40d9c2:	daa    
  40d9c3:	jp     0x40d95e
  40d9c5:	add    ecx,DWORD PTR [ecx+0x30]
  40d9c8:	sti    
  40d9c9:	aad    0xaf
  40d9cb:	xor    DWORD PTR [ecx],ecx
  40d9cd:	ins    BYTE PTR es:[edi],dx
  40d9ce:	mov    ds:0x462605b7,al
  40d9d3:	push   edi
  40d9d4:	imul   edi
  40d9d6:	jae    0x40d9c4
  40d9d8:	inc    esp
  40d9d9:	adc    BYTE PTR [ebx],cl
  40d9db:	mov    esp,esi
  40d9dd:	inc    esi
  40d9de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9df:	fnstcw WORD PTR [ecx-0x28]
  40d9e2:	ror    DWORD PTR [ebx-0x1e],1
  40d9e5:	loope  0x40da3b
  40d9e7:	cli    
  40d9e8:	popa   
  40d9e9:	xchg   edx,eax
  40d9ea:	mov    ebx,0x9e27d912
  40d9ef:	sbb    BYTE PTR [esi],ah
  40d9f1:	adc    esp,DWORD PTR [edx]
  40d9f3:	fiadd  DWORD PTR [edi-0x2e]
  40d9f6:	jne    0x40da19
  40d9f8:	pushf  
  40d9f9:	cmp    BYTE PTR [ebx],al
  40d9fb:	imul   esi,DWORD PTR [ebx+0x74],0xc68b9a6f
  40da02:	stos   DWORD PTR es:[edi],eax
  40da03:	sbb    eax,0x56efdefd
  40da08:	mov    dl,dh
  40da0a:	cmp    ebp,edx
  40da0c:	cmp    DWORD PTR [esi],esi
  40da0e:	and    eax,DWORD PTR [ebx+0x123d7cc3]
  40da14:	xor    al,0xa5
  40da16:	fwait
  40da17:	repnz dec esi
  40da19:	repnz repnz mov DWORD PTR [ecx+0xa643d66],esi
  40da21:	inc    eax
  40da22:	imul   ecx,DWORD PTR [ecx+0x52],0xa8b15e85
  40da29:	dec    edx
  40da2a:	pop    eax
  40da2b:	push   ss
  40da2c:	je     0x40da0a
  40da2e:	xchg   edi,eax
  40da2f:	push   edx
  40da31:	rcl    BYTE PTR [edx],cl
  40da33:	inc    esp
  40da34:	jno    0x40d9ca
  40da36:	cmp    BYTE PTR [edx+0x6eb6b215],al
  40da3c:	fwait
  40da3d:	adc    BYTE PTR [ebx-0x3a],ch
  40da40:	les    ebp,FWORD PTR [ecx+eax*8-0x2cb9ca9e]
  40da47:	push   cs
  40da48:	dec    ecx
  40da49:	jno    0x40da92
  40da4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da4c:	into   
  40da4d:	mov    edx,0xe2b39ddb
  40da52:	cmc    
  40da53:	in     al,0xe8
  40da55:	fxch   st(1)
  40da57:	mov    DWORD PTR [esi+0x63669815],eax
  40da5d:	mov    cl,ah
  40da5f:	jae    0x40dabc
  40da61:	enter  0xa018,0xb5
  40da65:	fisttp QWORD PTR es:[edx-0x39c9266d]
  40da6c:	pop    esi
  40da6d:	clc    
  40da6e:	enter  0x88a,0x22
  40da72:	pusha  
  40da73:	enter  0x7049,0xcb
  40da77:	das    
  40da78:	and    al,0x6e
  40da7a:	cmp    cl,BYTE PTR [edi]
  40da7c:	adc    al,0x8c
  40da7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da7f:	dec    ebp
  40da80:	adc    ecx,edi
  40da82:	xchg   BYTE PTR [esi-0xe],ah
  40da85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da86:	sub    al,0xe2
  40da88:	jle    0x40dad9
  40da8a:	adc    ecx,DWORD PTR [edi+0x7f]
  40da8d:	int    0xc6
  40da8f:	repnz inc esp
  40da91:	or     BYTE PTR [edx],al
  40da93:	fsubp  st(6),st
  40da95:	jmp    0x40da84
  40da97:	adc    al,BYTE PTR ds:0x952f573f
  40da9d:	dec    edx
  40da9e:	cmp    BYTE PTR [eax-0x45653bbc],0xcd
  40daa5:	push   esp
  40daa6:	stos   DWORD PTR es:[edi],eax
  40daa7:	pop    ds
  40daa8:	ror    DWORD PTR [ebp-0x41],0xee
  40daac:	push   cs
  40daad:	push   edx
  40daae:	daa    
  40daaf:	popa   
  40dab0:	and    DWORD PTR [ebx+0x41],eax
  40dab3:	and    eax,0x4cf6b17c
  40dab8:	mov    WORD PTR [esp+ebx*4],ds
  40dabb:	xchg   esp,eax
  40dabc:	dec    ecx
  40dabd:	lock or DWORD PTR [edx],ecx
  40dac0:	out    0x49,al
  40dac2:	dec    ebx
  40dac3:	mov    al,ds:0xf17f5e9a
  40dac8:	xchg   DWORD PTR [esi],esi
  40daca:	xor    eax,0x5647170b
  40dacf:	pop    ecx
  40dad0:	rcr    BYTE PTR [edi-0x23],1
  40dad3:	push   ecx
  40dad4:	xor    DWORD PTR ds:0x6f7b8ebd,ecx
  40dada:	fistp  WORD PTR [ebp-0x71fb4701]
  40dae0:	icebp  
  40dae1:	cmp    DWORD PTR [edx+0x2d],ebp
  40dae4:	mov    ds:0x3052fc8d,eax
  40dae9:	ins    DWORD PTR es:[edi],dx
  40daea:	sub    DWORD PTR ds:0x800a0988,ebx
  40daf0:	stos   DWORD PTR es:[edi],eax
  40daf1:	fs inc edi
  40daf3:	mov    cl,0xd0
  40daf5:	xor    bl,al
  40daf7:	cmp    al,BYTE PTR [ebx]
  40daf9:	in     al,0x98
  40dafb:	fcomp  QWORD PTR [esi-0x7f]
  40dafe:	hlt    
  40daff:	outs   dx,BYTE PTR ds:[esi]
  40db00:	retf   0xc388
  40db03:	pop    esi
  40db04:	cld    
  40db05:	js     0x40db0b
  40db07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db08:	push   eax
  40db09:	mov    ch,BYTE PTR [ebx+0x4e]
  40db0c:	sub    BYTE PTR [edi-0x6521fac],ah
  40db12:	push   ss
  40db13:	mov    ds:0xa8b92fd4,al
  40db18:	cmp    esi,DWORD PTR [esi]
  40db1a:	es cwde 
  40db1c:	rol    esi,0x53
  40db1f:	test   eax,0x86de390e
  40db24:	push   ss
  40db25:	and    DWORD PTR [ebx+0x59337879],edi
  40db2b:	xor    dl,BYTE PTR [edi+0x68]
  40db2e:	xlat   BYTE PTR ds:[ebx]
  40db2f:	scas   eax,DWORD PTR es:[edi]
  40db30:	mov    ebp,0xd379a38f
  40db35:	add    DWORD PTR [eax-0x21],ebp
  40db38:	jbe    0x40db27
  40db3a:	pextrw esp,(bad),0xc5
  40db3c:	and    al,0x70
  40db3e:	mov    eax,DWORD PTR [esi]
  40db40:	test   eax,0xf256ee8c
  40db45:	adc    bl,BYTE PTR [edx]
  40db47:	pop    edx
  40db48:	mov    bh,0xe6
  40db4a:	dec    esi
  40db4b:	and    edx,DWORD PTR [ecx+0x2dca1cb9]
  40db51:	lods   al,BYTE PTR ds:[esi]
  40db52:	mov    es,WORD PTR [ecx+0x75]
  40db55:	or     ah,BYTE PTR [edi-0x41]
  40db58:	dec    edx
  40db59:	imul   ecx,DWORD PTR [eax],0xffffffeb
  40db5c:	iret   
  40db5d:	jbe    0x40db91
  40db5f:	loope  0x40dae6
  40db61:	jns    0x40dbdd
  40db63:	mov    esi,0x4e6ef731
  40db68:	cmc    
  40db69:	mov    esi,0xceb803b5
  40db6e:	mov    ecx,es
  40db70:	enter  0xdb56,0x19
  40db74:	in     eax,0x56
  40db76:	fdiv   QWORD PTR [ebx]
  40db78:	mov    ds:0x644c0617,al
  40db7d:	push   ebx
  40db7e:	fbstp  TBYTE PTR [ecx-0x3d6abb8]
  40db84:	fsubr  st,st(1)
  40db86:	xor    bl,BYTE PTR [eax]
  40db88:	inc    esp
  40db89:	inc    edi
  40db8a:	mov    al,ds:0x5a04e1d3
  40db8f:	cmp    al,0xd2
  40db91:	mov    ah,0xb2
  40db93:	outs   dx,DWORD PTR ds:[esi]
  40db94:	out    dx,al
  40db95:	retf   0xca27
  40db98:	nop
  40db99:	es (bad) 
  40db9c:	sar    DWORD PTR [edi],cl
  40db9e:	lock loop 0x40db22
  40dba1:	int3   
  40dba2:	mov    ch,0x2c
  40dba4:	inc    ebp
  40dba5:	call   0xfa4ebc5c
  40dbaa:	sbb    BYTE PTR [ebp+0x1651251d],bh
  40dbb0:	lods   eax,DWORD PTR ds:[esi]
  40dbb1:	lahf   
  40dbb2:	pop    esp
  40dbb3:	fstp   QWORD PTR [edx]
  40dbb5:	faddp  st(7),st
  40dbb7:	sbb    BYTE PTR [ebp-0x14],bh
  40dbba:	jno    0x40db91
  40dbbc:	sub    eax,DWORD PTR [edi+0x5a52b909]
  40dbc2:	rol    edi,0xa4
  40dbc5:	lds    ebx,FWORD PTR [eax-0x60]
  40dbc8:	stc    
  40dbc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbca:	mov    al,0xba
  40dbcc:	cmp    BYTE PTR [ecx+0x782b33a2],bh
  40dbd2:	or     edi,DWORD PTR [edi+ebp*8+0x5e1a5e13]
  40dbd9:	and    DWORD PTR [edx*8+0x546dbfcc],ebp
  40dbe0:	dec    esp
  40dbe1:	bound  ecx,QWORD PTR [ebx+0x9d53fae]
  40dbe7:	in     eax,0x68
  40dbe9:	add    al,BYTE PTR [ecx+0x4b]
  40dbec:	or     eax,0x41cf0be2
  40dbf1:	mov    cl,0xa4
  40dbf3:	lock jg 0x40dc11
  40dbf6:	xchg   esi,eax
  40dbf7:	mov    bh,0x36
  40dbf9:	imul   ecx,DWORD PTR [ebx+eax*4],0xa80195e3
  40dc00:	popf   
  40dc01:	jno    0x40dc26
  40dc03:	mov    DWORD PTR [ecx],ebp
  40dc05:	jns    0x40dc19
  40dc07:	xchg   ecx,eax
  40dc08:	inc    ebx
  40dc09:	jg     0x40dc89
  40dc0b:	cmp    eax,0xc9b80390
  40dc10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc11:	je     0x40dc86
  40dc13:	fdivr  DWORD PTR [ebp+0x1f96e971]
  40dc19:	out    0xee,eax
  40dc1b:	jmp    0x25a03818
  40dc20:	shl    BYTE PTR [ebx+0x6f84ab41],cl
  40dc26:	ins    BYTE PTR es:[edi],dx
  40dc27:	in     eax,0x5e
  40dc29:	das    
  40dc2a:	xchg   DWORD PTR [eax],esi
  40dc2c:	pop    esp
  40dc2d:	jp     0x40dbd6
  40dc2f:	pop    ds
  40dc30:	xchg   edi,eax
  40dc31:	stos   BYTE PTR es:[edi],al
  40dc32:	sub    bh,BYTE PTR [ebp-0x52]
  40dc35:	xchg   ecx,eax
  40dc36:	xor    BYTE PTR [edx],dl
  40dc38:	push   ss
  40dc39:	adc    al,0x8
  40dc3b:	out    dx,eax
  40dc3c:	out    0x2,eax
  40dc3e:	or     BYTE PTR ds:0x41f3ad8e,cl
  40dc44:	div    bh
  40dc46:	mov    ch,0xf1
  40dc48:	adc    ecx,DWORD PTR ds:0xbbd50891
  40dc4e:	jae    0x40dc29
  40dc50:	in     al,dx
  40dc51:	inc    edi
  40dc52:	cmp    edi,esp
  40dc54:	(bad)  
  40dc55:	aaa    
  40dc56:	retf   
  40dc57:	and    al,0x8b
  40dc59:	dec    edx
  40dc5a:	jmp    0x40dbe7
  40dc5c:	in     al,dx
  40dc5d:	fsub   DWORD PTR [eax-0x525a8052]
  40dc63:	(bad)  
  40dc64:	into   
  40dc65:	lds    esi,FWORD PTR ds:0xce675274
  40dc6b:	add    ebx,DWORD PTR [esi-0x7b]
  40dc6e:	jno    0x40dc26
  40dc70:	repnz pop ebp
  40dc72:	jbe    0x40dca2
  40dc74:	xor    DWORD PTR [eax+0x75],esi
  40dc77:	int3   
  40dc78:	jno    0x40dcd2
  40dc7a:	pop    ebp
  40dc7b:	cmp    ah,ch
  40dc7d:	or     ebp,DWORD PTR ds:0x76642cfa
  40dc83:	sti    
  40dc84:	and    ch,0x4a
  40dc87:	fadd   QWORD PTR [edx+0x4d]
  40dc8a:	pop    ebp
  40dc8b:	mov    eax,gs:0x4d61f7a1
  40dc91:	adc    BYTE PTR [esi-0x15],ch
  40dc94:	mov    ah,0xec
  40dc96:	rcr    ah,cl
  40dc98:	push   esp
  40dc99:	or     BYTE PTR [ebp-0x6c],bh
  40dc9c:	xor    eax,0x17f0ef49
  40dca1:	jo     0x40dc4f
  40dca3:	or     eax,0xc256be2
  40dca8:	xchg   ebp,eax
  40dca9:	pop    ebp
  40dcaa:	xor    eax,0xaa4edc52
  40dcaf:	ss aam 0x49
  40dcb2:	pop    esi
  40dcb3:	sbb    BYTE PTR [ebp+0x74],al
  40dcb6:	aam    0xa3
  40dcb8:	jecxz  0x40dc53
  40dcba:	inc    ecx
  40dcbb:	and    eax,0x2a15973a
  40dcc0:	push   cs
  40dcc1:	(bad)  
  40dcc2:	mov    esp,0xf50c39ef
  40dcc7:	and    esp,esi
  40dcc9:	push   edx
  40dcca:	test   BYTE PTR [edx+0x39],0x6a
  40dcce:	push   cs
  40dccf:	aam    0x4
  40dcd1:	js     0x40dd0c
  40dcd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd4:	test   esp,esi
  40dcd6:	dec    edx
  40dcd7:	push   ecx
  40dcd8:	inc    edi
  40dcd9:	(bad)  
  40dcda:	jmp    0xc398:0xe8f0d9d5
  40dce1:	je     0x40dce8
  40dce3:	adc    BYTE PTR [ecx+0x65],ch
  40dce6:	sub    ch,bh
  40dce8:	pop    ebp
  40dce9:	in     eax,dx
  40dcea:	xchg   esi,ecx
  40dcec:	out    0xac,al
  40dcee:	mov    ds:0x313638a2,eax
  40dcf3:	repnz mov ch,bh
  40dcf6:	jge    0x40dd3d
  40dcf8:	dec    ecx
  40dcf9:	sub    DWORD PTR [ebx+0x57c3a4d1],ecx
  40dcff:	test   eax,0x5ef6878e
  40dd04:	sti    
  40dd05:	ja     0x40dd69
  40dd07:	and    DWORD PTR [eax-0x1066856b],edx
  40dd0d:	jns    0x40dd72
  40dd0f:	outs   dx,DWORD PTR ds:[esi]
  40dd10:	ret    0x70c1
  40dd13:	pop    esi
  40dd14:	xchg   ecx,eax
  40dd15:	pop    esi
  40dd16:	je     0x40dc9b
  40dd18:	call   0x25b2f375
  40dd1d:	lds    esp,FWORD PTR [eax+eax*2-0x17]
  40dd21:	and    al,0x7a
  40dd23:	fwait
  40dd24:	lds    eax,FWORD PTR [eax-0x22912401]
  40dd2a:	jno    0x40dd20
  40dd2c:	stos   BYTE PTR es:[edi],al
  40dd2d:	in     al,dx
  40dd2e:	sbb    ebp,DWORD PTR [ebx]
  40dd30:	neg    BYTE PTR [ecx]
  40dd32:	pusha  
  40dd33:	bound  ebx,QWORD PTR [esi]
  40dd35:	mov    ds:0x9cc7c8a9,al
  40dd3a:	sub    al,0xb4
  40dd3c:	jmp    0x3272:0x8815a8
  40dd43:	xor    ebx,ebx
  40dd45:	and    DWORD PTR [edi+0x53],edx
  40dd48:	in     eax,0x88
  40dd4a:	push   ds
  40dd4b:	les    ebp,FWORD PTR [eax]
  40dd4d:	push   esp
  40dd4e:	js     0x40dd40
  40dd50:	je     0x40dd2a
  40dd52:	dec    eax
  40dd53:	stos   DWORD PTR es:[edi],eax
  40dd54:	sub    cl,dh
  40dd56:	ret    
  40dd57:	sub    al,0xae
  40dd59:	mov    BYTE PTR ds:0x355d6166,bl
  40dd5f:	mov    ah,0xf0
  40dd61:	imul   esp,DWORD PTR [eax+0x76961bc0],0x7d
  40dd68:	aam    0x15
  40dd6a:	out    0x80,al
  40dd6c:	iret   
  40dd6d:	imul   ecx,DWORD PTR [edi-0x64],0xffffffd2
  40dd71:	je     0x40dde8
  40dd73:	(bad)  
  40dd74:	jmp    0x40dd24
  40dd76:	jo     0x40dd9e
  40dd78:	in     al,dx
  40dd79:	sbb    edi,DWORD PTR [esp+ebp*8+0xe]
  40dd7d:	xchg   edx,eax
  40dd7e:	fsubr  QWORD PTR [ebx-0x7d2fadd4]
  40dd84:	xor    DWORD PTR [edi+0x5aa48653],edi
  40dd8a:	dec    edi
  40dd8b:	jne    0x40dd8d
  40dd8d:	add    eax,0xacf9cc44
  40dd92:	mov    ebx,0xf62d70da
  40dd97:	sahf   
  40dd98:	sbb    bl,BYTE PTR [ecx+eiz*4-0x5a2e98e2]
  40dd9f:	lahf   
  40dda0:	dec    BYTE PTR [esi+0x3c]
  40dda3:	fistp  DWORD PTR [ebp-0xde6fb26]
  40dda9:	jo     0x40ddb7
  40ddab:	pop    ebp
  40ddac:	push   ecx
  40ddad:	(bad)  
  40ddae:	in     eax,dx
  40ddaf:	jl     0x40dde9
  40ddb1:	xor    bh,ah
  40ddb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddb4:	pop    eax
  40ddb5:	and    al,0x59
  40ddb7:	dec    ebp
  40ddb8:	add    eax,0x954e65b9
  40ddbd:	xor    esi,ecx
  40ddbf:	add    al,0xa1
  40ddc1:	dec    esp
  40ddc2:	lods   al,BYTE PTR ds:[esi]
  40ddc3:	daa    
  40ddc4:	jo     0x40dd6a
  40ddc6:	popf   
  40ddc7:	stos   DWORD PTR es:[edi],eax
  40ddc8:	mov    eax,0xc2e79833
  40ddcd:	xor    eax,0xb57d9cb2
  40ddd2:	pop    ebp
  40ddd3:	(bad)  
  40ddd4:	fimul  WORD PTR [esi-0x389dea01]
  40ddda:	loope  0x40dd8a
  40dddc:	jnp    0x40ddad
  40ddde:	hlt    
  40dddf:	arpl   WORD PTR [edi],si
  40dde1:	or     al,0x49
  40dde3:	ret    
  40dde4:	xor    BYTE PTR [esi*2-0x34ceb7fb],0x66
  40ddec:	test   al,0x9b
  40ddee:	inc    esp
  40ddef:	and    dh,dh
  40ddf1:	(bad)  
  40ddf2:	into   
  40ddf3:	ja     0x40dd7f
  40ddf5:	xchg   esp,eax
  40ddf6:	xor    DWORD PTR [esi-0x3c36e07],ecx
  40ddfc:	or     eax,0x102fa2ed
  40de01:	arpl   bx,bx
  40de03:	dec    ebp
  40de04:	adc    bh,dl
  40de06:	push   edx
  40de07:	aam    0x7c
  40de09:	mov    ch,0xc7
  40de0b:	add    eax,0x19be7895
  40de10:	popf   
  40de11:	popf   
  40de12:	and    al,0xc3
  40de14:	mov    ch,0x85
  40de16:	retf   0xa174
  40de19:	imul   edi,DWORD PTR [ecx+0x53567210],0x3f
  40de20:	lahf   
  40de21:	loopne 0x40ddf2
  40de23:	push   esp
  40de24:	fldlg2 
  40de26:	shl    DWORD PTR [edx+0x4e],1
  40de29:	into   
  40de2a:	mov    bl,0x4d
  40de2c:	pop    ebx
  40de2d:	mov    cl,0x91
  40de2f:	jb     0x40de2d
  40de31:	sub    bl,BYTE PTR [eax-0x4858f46f]
  40de37:	jo     0x40de16
  40de39:	dec    edx
  40de3a:	jecxz  0x40de06
  40de3c:	add    eax,0x65181f65
  40de41:	or     edx,edx
  40de43:	test   eax,0xdfd9b270
  40de48:	xor    eax,0xa9e94999
  40de4d:	dec    esi
  40de4e:	out    0x75,eax
  40de50:	fcomp  DWORD PTR [ebx+0x22]
  40de53:	and    edx,DWORD PTR ds:0x47cac5d2
  40de59:	gs mul edi
  40de5c:	das    
  40de5d:	aam    0xfa
  40de5f:	push   esp
  40de60:	sub    DWORD PTR gs:[ecx+0xf],0x31
  40de65:	shl    DWORD PTR [edx],1
  40de67:	ror    BYTE PTR [eax-0x200c7c20],cl
  40de6d:	cs in  al,0x27
  40de70:	fmul   st,st(2)
  40de72:	push   edx
  40de73:	loop   0x40dea1
  40de75:	test   esp,0xcb820d0e
  40de7b:	es mov al,0xf3
  40de7e:	jno    0x40de71
  40de80:	aas    
  40de81:	dec    esi
  40de82:	in     al,0xa3
  40de84:	cli    
  40de85:	jae    0x40ded1
  40de87:	mul    cl
  40de89:	fnstsw WORD PTR [eax-0x40]
  40de8c:	je     0x40ded1
  40de8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de8f:	hlt    
  40de90:	jg     0x40de61
  40de92:	or     ecx,DWORD PTR [eax+0xef37a83]
  40de98:	je     0x40df09
  40de9a:	add    eax,0xa3d232b
  40de9f:	imul   edx,esp,0x2670fae4
  40dea5:	jle    0x40df0f
  40dea7:	xchg   ebx,eax
  40dea8:	imul   eax,DWORD PTR [eiz*1+0xa41aa8d],0xc039bfa4
  40deb3:	ret    0xf46e
  40deb6:	xchg   di,ax
  40deb8:	cld    
  40deb9:	add    esp,DWORD PTR [ebp+0x5d7811b2]
  40debf:	cmp    BYTE PTR [ebx-0x45],ah
  40dec2:	mov    dh,0x3a
  40dec4:	adc    eax,0x342bc817
  40dec9:	sar    BYTE PTR [edx-0x41a73069],cl
  40decf:	mov    al,ds:0x457f110d
  40ded4:	mov    dh,0x36
  40ded6:	mov    al,0xb4
  40ded8:	pop    eax
  40ded9:	mov    cl,0xba
  40dedb:	pop    ebx
  40dedc:	sub    dh,0xd0
  40dedf:	sbb    eax,0x186474d9
  40dee4:	jg     0x40ded2
  40dee6:	push   ecx
  40dee7:	icebp  
  40dee8:	lahf   
  40dee9:	jp     0x40df2a
  40deeb:	dec    eax
  40deec:	imul   ebx,DWORD PTR [ebx-0x46],0xffffffa0
  40def0:	jns    0x40deb8
  40def2:	push   eax
  40def3:	aad    0xc1
  40def5:	arpl   WORD PTR [eax+0xca8d434],cx
  40defb:	mul    BYTE PTR [ebp+ebx*2-0x5f]
  40deff:	call   0xb10dc6fd
  40df04:	rol    DWORD PTR [ecx],1
  40df06:	fcomp  st(0)
  40df08:	outs   dx,BYTE PTR ds:[esi]
  40df09:	test   DWORD PTR ds:0xb44c0ca1,ebx
  40df0f:	test   BYTE PTR [edx],dl
  40df11:	int3   
  40df12:	gs pop esp
  40df14:	mov    WORD PTR [ebx-0x2336c6c0],ss
  40df1a:	pop    ebx
  40df1b:	imul   ebp,DWORD PTR [edx-0x39650634],0xffffffd0
  40df22:	adc    eax,0xaaef4927
  40df27:	mov    DWORD PTR [edx+esi*8-0x401ca7b1],edi
  40df2e:	call   0xabdfd609
  40df33:	loop   0x40df20
  40df35:	xor    DWORD PTR [ecx+0x5721dba6],0x17
  40df3c:	xor    BYTE PTR [esi],al
  40df3e:	jb     0x40dedf
  40df40:	retf   0x8d97
  40df43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df44:	out    0xf7,al
  40df46:	out    dx,eax
  40df47:	inc    ebp
  40df48:	in     al,0x54
  40df4a:	push   ebx
  40df4b:	mov    ebx,0xaa0dd4fb
  40df50:	jmp    0x40def6
  40df52:	mov    al,0xc1
  40df54:	ins    DWORD PTR es:[edi],dx
  40df55:	cmovae ebx,ebx
  40df58:	adc    ch,BYTE PTR [eax+0x1f135944]
  40df5e:	addr16 retf 
  40df60:	outs   dx,DWORD PTR ds:[esi]
  40df61:	repz adc edi,DWORD PTR [esi+0x37]
  40df65:	shl    dl,cl
  40df67:	call   DWORD PTR [eax+ebp*4]
  40df6a:	sub    ebx,DWORD PTR [esi+0x55710df9]
  40df70:	mov    al,ds:0x90ad5bde
  40df75:	aad    0xf
  40df77:	imul   DWORD PTR [ecx-0x7d22b926]
  40df7d:	retf   0x7458
  40df80:	inc    edx
  40df81:	or     edi,DWORD PTR [edi]
  40df83:	push   0xffffff86
  40df85:	in     al,dx
  40df86:	scas   eax,DWORD PTR es:[edi]
  40df87:	call   0xc0226815
  40df8c:	xchg   ebp,eax
  40df8d:	add    eax,0xb446cf90
  40df92:	push   ss
  40df93:	addr16 jns 0x40e005
  40df96:	push   edx
  40df97:	inc    eax
  40df98:	sbb    al,0x7a
  40df9a:	scas   al,BYTE PTR es:[edi]
  40df9b:	into   
  40df9c:	mov    esp,0xa8b704c3
  40dfa1:	mov    eax,0xaa756ff0
  40dfa6:	popf   
  40dfa7:	shl    ah,0x7a
  40dfaa:	pop    ecx
  40dfab:	jbe    0x40df73
  40dfad:	retf   0x6cb0
  40dfb0:	fisttp QWORD PTR ds:0x48fe0334
  40dfb7:	shl    BYTE PTR [ebx+0x6fa49b4e],cl
  40dfbd:	dec    ebp
  40dfbe:	aam    0x9d
  40dfc0:	test   DWORD PTR [esi-0x3cbff293],ebx
  40dfc6:	sti    
  40dfc7:	jae    0x40e019
  40dfc9:	out    dx,al
  40dfca:	and    eax,0x275d3ab0
  40dfcf:	stos   BYTE PTR es:[edi],al
  40dfd0:	adc    BYTE PTR [ecx],dh
  40dfd2:	pop    ebx
  40dfd3:	jno    0x40dfa8
  40dfd5:	inc    ecx
  40dfd6:	stos   BYTE PTR es:[edi],al
  40dfd7:	pop    ss
  40dfd8:	sbb    BYTE PTR [ebx-0x49],dl
  40dfdb:	out    0xc7,eax
  40dfdd:	addr16 dec ebp
  40dfdf:	xchg   edx,eax
  40dfe0:	pop    ebp
  40dfe1:	addr16 aam 0xab
  40dfe4:	add    BYTE PTR [ecx-0x78],0xff
  40dfe8:	inc    esp
  40dfe9:	cld    
  40dfea:	xchg   ecx,eax
  40dfeb:	scas   eax,DWORD PTR es:[edi]
  40dfec:	lea    edx,[edi+0x37733835]
  40dff2:	mov    dl,0x54
  40dff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dff5:	push   cs
  40dff6:	fdivr  QWORD PTR [edx+0x4a]
  40dff9:	dec    eax
  40dffa:	jge    0x40dfeb
  40dffc:	add    al,0x6c
  40dffe:	or     DWORD PTR [edx+0xcd21b4e],edi
  40e004:	sub    eax,0x55bfa5d9
  40e009:	adc    al,0x5c
  40e00b:	jo     0x40e054
  40e00d:	shl    DWORD PTR [ebp+0x69a3da39],cl
  40e013:	into   
  40e014:	mov    dh,0xd3
  40e016:	(bad)  
  40e017:	mov    ecx,0xac6f427e
  40e01c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e01d:	push   ss
  40e01e:	(bad)
  40e022:	xchg   edi,eax
  40e023:	not    DWORD PTR [eax+0x78d1bb82]
  40e029:	aam    0x6c
  40e02b:	imul   eax,DWORD PTR [eax+0x78],0xbecf6baa
  40e032:	rcl    DWORD PTR [ebx-0x3ba3ca3],cl
  40e038:	pop    ds
  40e039:	sbb    DWORD PTR [esi+0x32690137],esp
  40e03f:	pop    ebp
  40e040:	out    0xf9,al
  40e042:	shl    BYTE PTR [edx+edx*2],0x80
  40e046:	bound  edx,QWORD PTR [ecx]
  40e048:	pop    ds
  40e049:	js     0x40e04b
  40e04b:	hlt    
  40e04c:	lea    esi,[eax]
  40e04e:	cmp    DWORD PTR [eax+ebp*8-0x2857ba9b],edx
  40e055:	inc    edx
  40e056:	mov    bl,0x82
  40e058:	push   ds
  40e059:	fisttp QWORD PTR [ebx+0x2b620d0f]
  40e05f:	lds    eax,FWORD PTR [edx+0x10c88f01]
  40e065:	lea    esp,[eax+0x15]
  40e068:	mov    dh,0x50
  40e06a:	rcl    DWORD PTR [edx+0x6e],1
  40e06d:	push   ecx
  40e06e:	xor    al,0xaf
  40e070:	dec    edi
  40e071:	mov    ?,WORD PTR [ebx]
  40e073:	add    bh,BYTE PTR [edx+0x362944ec]
  40e079:	hlt    
  40e07a:	mov    esp,0x9290e56b
  40e07f:	jb     0x40e067
  40e081:	fcmove st,st(3)
  40e083:	(bad)  
  40e084:	retf   0x62c
  40e087:	xchg   BYTE PTR [edi],cl
  40e089:	adc    ebx,DWORD PTR [ecx+ebp*4-0x7fe364db]
  40e090:	mov    esi,0xeead124b
  40e095:	cli    
  40e096:	mov    cl,0x2b
  40e098:	stos   BYTE PTR es:[edi],al
  40e099:	xor    edi,DWORD PTR [esi+0x685f6da2]
  40e09f:	mov    bl,0x82
  40e0a1:	call   0x735ff2e3
  40e0a6:	fnstcw WORD PTR [eax-0x49]
  40e0a9:	push   ds
  40e0aa:	dec    edx
  40e0ab:	inc    ecx
  40e0ac:	or     BYTE PTR [ebx-0xc],al
  40e0af:	jecxz  0x40e0d8
  40e0b1:	(bad)  
  40e0b2:	xlat   BYTE PTR ds:[ebx]
  40e0b3:	dec    edi
  40e0b4:	ss in  al,0xe0
  40e0b7:	add    bl,0xc2
  40e0ba:	ret    
  40e0bb:	in     al,dx
  40e0bc:	sahf   
  40e0bd:	mov    al,0x5b
  40e0bf:	adc    bl,ch
  40e0c1:	cmp    eax,0xee67eab7
  40e0c6:	sub    eax,0xe7c178f6
  40e0cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0cc:	jp     0x40e094
  40e0ce:	sub    eax,0xf1b3a0d4
  40e0d3:	jmp    0x40e07e
  40e0d5:	dec    esi
  40e0d6:	xchg   ecx,eax
  40e0d7:	sti    
  40e0d8:	mov    bh,0x43
  40e0da:	jmp    0x88a1d1c2
  40e0df:	and    BYTE PTR [edx],cl
  40e0e1:	loopne 0x40e06b
  40e0e3:	fwait
  40e0e4:	jae    0x40e13a
  40e0e6:	dec    ebx
  40e0e7:	cmp    eax,DWORD PTR [ebx]
  40e0e9:	sbb    DWORD PTR [eax-0x2b],edx
  40e0ec:	(bad)
  40e0f0:	aad    0x54
  40e0f2:	shr    DWORD PTR [ebx-0x5894a755],cl
  40e0f8:	mov    esp,0x26170613
  40e0fd:	pop    esi
  40e0fe:	ficomp DWORD PTR ds:0x3be0a9d0
  40e104:	mov    edi,0xfbee4a5a
  40e109:	ret    
  40e10a:	mov    eax,0xf22d1253
  40e10f:	xor    ebx,ecx
  40e111:	call   0xdcbd8de7
  40e116:	mov    dl,0xe3
  40e118:	sub    eax,0x59f59e5f
  40e11d:	inc    DWORD PTR [edx]
  40e11f:	xchg   DWORD PTR [ecx-0x68],esp
  40e122:	adc    BYTE PTR [ecx+0x1f],0x76
  40e126:	jb     0x40e12e
  40e128:	cmc    
  40e129:	inc    edi
  40e12a:	jae    0x40e123
  40e12c:	sti    
  40e12d:	mov    ah,0x89
  40e12f:	iret   
  40e130:	add    DWORD PTR [eax+0x63],edx
  40e133:	das    
  40e134:	or     eax,0xaaea60eb
  40e139:	hlt    
  40e13a:	sub    al,0x6b
  40e13c:	push   edi
  40e13d:	imul   eax,DWORD PTR [ebp-0x6707d5cc],0x5c
  40e144:	popa   
  40e145:	ret    0x169f
  40e148:	and    cl,al
  40e14a:	xor    ebx,DWORD PTR ds:[edx+0x0]
  40e14e:	mov    dh,0x6d
  40e150:	fimul  WORD PTR [ebx-0x3dcd76f9]
  40e156:	gs jb  0x40e146
  40e159:	jnp    0x40e166
  40e15b:	leave  
  40e15c:	mov    bh,0x45
  40e15e:	loopne 0x40e12a
  40e160:	popf   
  40e161:	dec    ebx
  40e162:	mov    ch,0x5
  40e164:	jl     0x40e17d
  40e166:	fdivr  QWORD PTR [esi-0x6085859]
  40e16c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e16d:	or     dh,BYTE PTR [ecx+0xad25349]
  40e173:	mov    ecx,0xae8a67c3
  40e178:	inc    BYTE PTR [edx]
  40e17a:	mov    al,ds:0x6232c56f
  40e17f:	pusha  
  40e180:	mov    eax,ds:0x94503a3a
  40e185:	ja     0x40e124
  40e187:	adc    BYTE PTR [edi+edi*4],0xb0
  40e18b:	sbb    eax,0x28aeffb1
  40e190:	pop    edx
  40e191:	or     al,BYTE PTR [ebx]
  40e193:	and    eax,0x7e05c5ca
  40e198:	xchg   esp,eax
  40e199:	xor    dh,0x89
  40e19c:	adc    eax,0xfbc137ab
  40e1a1:	lods   eax,DWORD PTR ds:[esi]
  40e1a2:	cld    
  40e1a3:	jge    0x40e217
  40e1a5:	add    eax,0x6603f2c0
  40e1aa:	(bad)  
  40e1ab:	sub    eax,0x6f6fa7e9
  40e1b0:	jo     0x40e215
  40e1b2:	or     eax,0xdbd5a5d2
  40e1b7:	vpsubsw ymm7,ymm1,ymm5
  40e1bb:	stos   BYTE PTR es:[edi],al
  40e1bc:	jns    0x40e14b
  40e1be:	push   es
  40e1bf:	inc    esp
  40e1c0:	pop    edx
  40e1c1:	and    bh,dl
  40e1c3:	xor    DWORD PTR [eax+0x3a18816e],esp
  40e1c9:	xchg   edi,eax
  40e1ca:	add    BYTE PTR [edi-0x6a],0xb0
  40e1ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1cf:	(bad)  
  40e1d0:	(bad)  [edi]
  40e1d2:	cmp    BYTE PTR [ebp-0x3f7569fe],dh
  40e1d8:	test   DWORD PTR [ebx-0x7f82e7f6],eax
  40e1de:	rcl    BYTE PTR [ebp+0x62],1
  40e1e1:	inc    esp
  40e1e2:	imul   edx,DWORD PTR [esi],0x73
  40e1e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1e6:	retf   
  40e1e7:	or     al,ch
  40e1e9:	sub    al,0x60
  40e1eb:	mov    eax,0xf0ca89fc
  40e1f0:	(bad)  
  40e1f1:	aas    
  40e1f2:	fisttp WORD PTR [ecx+0x4e]
  40e1f5:	hlt    
  40e1f6:	outs   dx,DWORD PTR ds:[esi]
  40e1f7:	or     esi,ebp
  40e1f9:	(bad)  
  40e1fa:	mov    esp,cs
  40e1fc:	mov    BYTE PTR [edx],bl
  40e1fe:	sbb    cl,BYTE PTR [ebp+0x64]
  40e201:	je     0x40e1c5
  40e203:	and    al,0x58
  40e205:	dec    eax
  40e206:	jae    0x40e255
  40e208:	mov    ds:0x3ef3a3b,eax
  40e20d:	ja     0x40e282
  40e20f:	jns    0x40e1ee
  40e211:	add    cl,BYTE PTR [ebx+edx*1-0x25b59a7e]
  40e218:	or     DWORD PTR [esi+0x72f6b498],edx
  40e21e:	mov    cl,0x10
  40e220:	sub    DWORD PTR [esp+esi*4+0x55],0xce27febb
  40e228:	shl    ch,0x61
  40e22b:	jne    0x40e1cf
  40e22d:	push   es
  40e22e:	and    DWORD PTR [esi-0x24c3c1b5],ecx
  40e234:	loop   0x40e27e
  40e236:	ror    edi,0x2e
  40e239:	push   0xffffff9b
  40e23b:	stos   BYTE PTR es:[edi],al
  40e23c:	cmc    
  40e23d:	aas    
  40e23e:	enter  0x73b,0x50
  40e242:	push   es
  40e243:	cmp    DWORD PTR gs:[eax-0x17],esi
  40e247:	fist   DWORD PTR [eax+ecx*4+0x14]
  40e24b:	mov    gs,WORD PTR [ebx-0x5a]
  40e24e:	xor    edx,DWORD PTR [edx-0x24267f99]
  40e254:	inc    esi
  40e255:	sub    DWORD PTR ds:0x7c13464,ebx
  40e25b:	cs push ecx
  40e25d:	mov    bl,0xb3
  40e25f:	lods   al,BYTE PTR ds:[esi]
  40e260:	cmp    bl,BYTE PTR [edi-0x19072d13]
  40e266:	cmp    al,0xd5
  40e268:	scas   al,BYTE PTR es:[edi]
  40e269:	cmp    DWORD PTR [eax+edi*2],0xffffffc8
  40e26d:	jo     0x40e2b2
  40e26f:	add    ebx,DWORD PTR [esi-0x7f]
  40e272:	add    bh,BYTE PTR [eax-0x35]
  40e275:	mov    ah,0xe1
  40e277:	dec    esi
  40e278:	add    bl,BYTE PTR [esi]
  40e27a:	and    BYTE PTR [ebp-0x22926e6e],al
  40e280:	push   edx
  40e281:	pop    edi
  40e282:	sub    ebp,eax
  40e284:	lds    esp,FWORD PTR [eax+ecx*2-0x5d]
  40e288:	pop    esp
  40e289:	mov    dh,0x70
  40e28b:	cmp    al,0x46
  40e28d:	int3   
  40e28e:	xchg   edi,eax
  40e28f:	sub    bl,BYTE PTR [ecx]
  40e291:	add    eax,0xc9af905b
  40e296:	xchg   esi,eax
  40e297:	mov    ebp,0x60b53880
  40e29c:	lea    esp,[eax]
  40e29e:	cmp    ebp,DWORD PTR [eax]
  40e2a0:	mov    eax,0x2351b349
  40e2a5:	std    
  40e2a6:	xchg   esi,eax
  40e2a7:	lds    esp,FWORD PTR [eax+esi*1]
  40e2aa:	fidivr WORD PTR [edx]
  40e2ac:	in     al,dx
  40e2ad:	fsubr  st(4),st
  40e2af:	call   0x3753d42c
  40e2b4:	dec    ecx
  40e2b5:	mov    al,0x7b
  40e2b7:	xor    eax,0xee17b282
  40e2bc:	adc    ah,BYTE PTR [ebx*8-0x39cd523d]
  40e2c3:	or     DWORD PTR [esi+0x22bd200a],0xfffffff8
  40e2ca:	inc    edi
  40e2cb:	sub    BYTE PTR [ebp-0x6f],0x92
  40e2cf:	daa    
  40e2d0:	inc    edi
  40e2d1:	mov    bh,0x3a
  40e2d3:	popf   
  40e2d4:	dec    esp
  40e2d5:	xchg   esi,eax
  40e2d6:	shr    ah,0x7a
  40e2d9:	std    
  40e2da:	sub    ebp,DWORD PTR [ebx-0x61]
  40e2dd:	dec    ecx
  40e2de:	bound  edx,QWORD PTR [esi-0x51cca0bb]
  40e2e4:	out    0x49,eax
  40e2e6:	fnstsw WORD PTR [esi]
  40e2e8:	ss mov ebx,0xcd07badb
  40e2ee:	adc    cl,BYTE PTR [esi+0x78969688]
  40e2f4:	daa    
  40e2f5:	enter  0xcc69,0xb4
  40e2f9:	mov    esi,0x95d1869
  40e2fe:	add    dh,dl
  40e300:	pop    esi
  40e301:	push   0x67
  40e303:	mov    WORD PTR [edx+0x1],es
  40e306:	inc    ebp
  40e307:	repnz pop edx
  40e309:	arpl   WORD PTR [ebx-0xc30fd78],bp
  40e30f:	and    BYTE PTR [esi+0x21ff80dc],0x6c
  40e316:	jae    0x40e2b6
  40e318:	outs   dx,DWORD PTR ds:[esi]
  40e319:	mov    bl,0x1a
  40e31b:	and    al,0xb9
  40e31d:	mov    esp,0x645ce920
  40e322:	rcr    DWORD PTR [eax-0x57c05927],0x3e
  40e329:	sub    edx,esi
  40e32b:	std    
  40e32c:	fnstcw WORD PTR [ebx]
  40e32e:	push   edx
  40e32f:	leave  
  40e330:	sbb    ecx,DWORD PTR [ecx-0x48e121b2]
  40e336:	sbb    al,BYTE PTR [edx+0x107a786c]
  40e33c:	push   ebp
  40e33d:	cmp    eax,0x1e0f4753
  40e342:	cmp    al,0x28
  40e344:	test   eax,0x8b9d64fa
  40e349:	mov    fs,ebp
  40e34b:	sar    dh,cl
  40e34d:	push   ss
  40e34e:	pop    eax
  40e34f:	push   ebx
  40e350:	out    dx,eax
  40e351:	ret    0xfab9
  40e354:	inc    edi
  40e355:	mov    ds:0xb3e0e4e1,al
  40e35a:	bound  esi,QWORD PTR [ecx-0x9]
  40e35d:	add    eax,0x98aa315a
  40e362:	cdq    
  40e363:	mov    dl,0x4d
  40e365:	or     BYTE PTR [ecx+edx*1-0x1d6d74e2],cl
  40e36c:	jl     0x40e33c
  40e36e:	stos   DWORD PTR es:[edi],eax
  40e36f:	nop
  40e370:	bound  edi,QWORD PTR [ecx]
  40e372:	scas   eax,DWORD PTR es:[edi]
  40e373:	sbb    al,0x85
  40e375:	or     ebx,0x56
  40e378:	push   ds
  40e379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e37a:	adc    esi,esp
  40e37c:	mov    al,0x3d
  40e37e:	xlat   BYTE PTR ds:[ebx]
  40e37f:	lods   eax,DWORD PTR ds:[esi]
  40e380:	lea    esi,[edx-0x5e]
  40e383:	or     eax,DWORD PTR [ecx-0x38741ae6]
  40e389:	or     al,0x4f
  40e38b:	ins    BYTE PTR es:[edi],dx
  40e38c:	dec    edx
  40e38d:	xor    esp,ebx
  40e38f:	sub    al,0xba
  40e391:	or     bh,dl
  40e393:	aas    
  40e394:	push   ds
  40e395:	jo     0x40e3fa
  40e397:	ins    DWORD PTR es:[edi],dx
  40e398:	add    al,0x7b
  40e39a:	shl    BYTE PTR [ecx+0x1a6124f5],0xf6
  40e3a1:	repnz pop ebx
  40e3a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3a4:	jnp    0x40e36e
  40e3a6:	jl     0x40e399
  40e3a8:	aaa    
  40e3a9:	cmp    dl,BYTE PTR [ebx+0x6d]
  40e3ac:	sub    DWORD PTR [ecx+eiz*4+0x43324a5d],esp
  40e3b3:	shl    DWORD PTR [eax],cl
  40e3b5:	cmp    eax,0x8f663a71
  40e3ba:	adc    BYTE PTR [edi-0x50],bl
  40e3bd:	loopne 0x40e34b
  40e3bf:	fld    DWORD PTR [esi+ebp*8+0x6a]
  40e3c3:	js     0x40e41d
  40e3c5:	and    ch,BYTE PTR [edx-0x23]
  40e3c8:	jg     0x40e3d7
  40e3ca:	out    0x55,al
  40e3cc:	inc    ebx
  40e3cd:	xor    DWORD PTR [ebp-0x7f3f1edf],esi
  40e3d3:	daa    
  40e3d4:	shl    eax,1
  40e3d6:	add    eax,0xd130938d
  40e3db:	sbb    DWORD PTR ds:0xe3dad1a0,ecx
  40e3e1:	popf   
  40e3e2:	test   DWORD PTR [edx-0x1bc5da7],0x51cd79ec
  40e3ec:	pop    es
  40e3ed:	repnz sub DWORD PTR [esi],esi
  40e3f0:	into   
  40e3f1:	sub    ebx,DWORD PTR [esi+0x5864e0d8]
  40e3f7:	fild   WORD PTR [edx]
  40e3f9:	push   ebp
  40e3fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3fb:	or     edi,DWORD PTR [esi]
  40e3fd:	fcmovne st,st(0)
  40e3ff:	retf   
  40e400:	or     DWORD PTR [esi],ebx
  40e402:	mov    BYTE PTR [eax+0x3b],dl
  40e405:	call   0xae0eda6b
  40e40a:	cs std 
  40e40c:	inc    eax
  40e40d:	loopne 0x40e39b
  40e40f:	neg    BYTE PTR [ebp+0x7292dc6e]
  40e415:	jb     0x40e398
  40e417:	shl    BYTE PTR [esi+ebp*2+0x50a33ec3],cl
  40e41e:	mov    dh,BYTE PTR [ebx-0x2e]
  40e421:	mov    dl,0x34
  40e423:	push   ds
  40e424:	mov    bh,0x30
  40e426:	outs   dx,DWORD PTR ds:[esi]
  40e427:	aam    0xf0
  40e429:	xor    DWORD PTR ds:0x7442031e,edi
  40e42f:	scas   eax,DWORD PTR es:[edi]
  40e430:	out    dx,eax
  40e431:	xor    al,0xaf
  40e433:	stc    
  40e434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e435:	sub    DWORD PTR [eax],ebp
  40e437:	es repnz pushf 
  40e43a:	mov    eax,ds:0x147165ba
  40e43f:	mov    bh,0x93
  40e441:	ss push ebp
  40e443:	jne    0x40e489
  40e445:	adc    eax,0xf0e8ba5c
  40e44a:	sbb    eax,0xe78f35ae
  40e44f:	inc    edx
  40e450:	into   
  40e451:	mov    ?,WORD PTR [esi+0x56336bd0]
  40e457:	pop    ecx
  40e458:	or     al,0x88
  40e45a:	adc    dh,0x25
  40e45d:	jbe    0x40e4bb
  40e45f:	leave  
  40e460:	ins    DWORD PTR es:[edi],dx
  40e461:	xchg   ebx,eax
  40e462:	add    BYTE PTR [eax+ebp*1+0x5781912b],ah
  40e469:	loopne 0x40e3ed
  40e46b:	int    0x0
  40e46d:	xor    eax,0xff4d5c78
  40e472:	loope  0x40e47a
  40e474:	iret   
  40e475:	pop    ebx
  40e476:	(bad)  
  40e477:	mov    edi,0xabc50684
  40e47c:	out    0x6a,al
  40e47e:	arpl   WORD PTR [eax],bp
  40e480:	lock or dl,ch
  40e483:	mov    edx,esi
  40e485:	inc    edx
  40e486:	cmp    al,bl
  40e488:	push   eax
  40e489:	(bad)  [ebx-0x62]
  40e48c:	push   ecx
  40e48d:	leave  
  40e48e:	hlt    
  40e48f:	aad    0xcb
  40e491:	test   bl,bh
  40e493:	shl    BYTE PTR [ecx+eax*8],cl
  40e496:	jb     0x40e433
  40e498:	out    0x50,eax
  40e49a:	xrelease mov BYTE PTR [edi+ecx*4+0x59],cl
  40e49f:	retf   
  40e4a0:	adc    DWORD PTR [ecx-0x50],0x7a53b22
  40e4a7:	sahf   
  40e4a8:	mov    DWORD PTR [ebp-0x59cc40c1],esi
  40e4ae:	rol    BYTE PTR [ebx],0xdf
  40e4b1:	pushf  
  40e4b2:	popf   
  40e4b3:	adc    edx,DWORD PTR [edx]
  40e4b5:	call   0xe0d2:0x54f3ed85
  40e4bc:	cwde   
  40e4bd:	add    BYTE PTR [edx],dh
  40e4bf:	xor    BYTE PTR [ebx-0x1d],bl
  40e4c2:	cmp    al,bh
  40e4c4:	dec    esi
  40e4c5:	test   ch,dh
  40e4c7:	xchg   DWORD PTR [edx+0x49],ecx
  40e4ca:	inc    edx
  40e4cb:	(bad)  
  40e4cc:	loop   0x40e4ed
  40e4ce:	add    DWORD PTR [ebx-0x18],edx
  40e4d1:	mov    bl,bl
  40e4d3:	mov    dl,0xd4
  40e4d5:	sbb    BYTE PTR [esi-0x2d],ah
  40e4d8:	inc    ebx
  40e4d9:	mul    DWORD PTR [edi+0x38]
  40e4dc:	call   0x2586:0xe0ddff4a
  40e4e3:	lds    ebp,FWORD PTR [edx-0x1a]
  40e4e6:	or     dl,BYTE PTR [ecx+edi*1-0xa]
  40e4ea:	jb     0x40e509
  40e4ec:	daa    
  40e4ed:	adc    BYTE PTR [eax+0x6ac730b],0x4b
  40e4f4:	stc    
  40e4f5:	int3   
  40e4f6:	mov    WORD PTR [esi-0x7e],?
  40e4f9:	ret    
  40e4fa:	inc    ebx
  40e4fb:	in     al,0x2a
  40e4fd:	aas    
  40e4fe:	or     BYTE PTR [ebx-0x51b4d709],ah
  40e504:	pop    ebx
  40e505:	in     eax,dx
  40e506:	ret    
  40e507:	into   
  40e508:	jecxz  0x40e55f
  40e50a:	mul    DWORD PTR [ecx]
  40e50c:	xchg   BYTE PTR [ecx],dh
  40e50e:	add    dl,ch
  40e510:	xor    al,0x6
  40e512:	xor    bh,al
  40e514:	mov    esi,DWORD PTR [ebx+0x3b81c90d]
  40e51a:	std    
  40e51b:	scas   al,BYTE PTR es:[edi]
  40e51c:	stos   DWORD PTR es:[edi],eax
  40e51d:	jle    0x40e58c
  40e51f:	pop    ebx
  40e520:	cmp    ch,BYTE PTR [eax]
  40e522:	shl    DWORD PTR [ebp+0x3f],1
  40e525:	and    dl,ah
  40e527:	xchg   ecx,eax
  40e528:	retf   0xff8c
  40e52b:	sub    DWORD PTR [edx-0x44e3bf0f],edi
  40e531:	push   edx
  40e532:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e533:	loope  0x40e534
  40e535:	call   0x7ab119d9
  40e53a:	loope  0x40e520
  40e53c:	sub    DWORD PTR [ecx-0x3f],ecx
  40e53f:	loop   0x40e4d0
  40e541:	jge    0x40e56d
  40e543:	sub    BYTE PTR [ebx-0x6562cfd0],0x92
  40e54a:	xchg   ebx,eax
  40e54b:	mov    bl,0x67
  40e54d:	inc    esp
  40e54e:	mov    al,ds:0x59e23e5b
  40e553:	test   eax,0xd60004b5
  40e558:	imul   DWORD PTR [ebp+0x4b]
  40e55b:	frstor [edx+0x1603144b]
  40e561:	ds int 0xf9
  40e564:	and    ah,ch
  40e566:	int3   
  40e567:	in     al,dx
  40e568:	inc    edx
  40e569:	mov    edx,edi
  40e56b:	mov    ds:0x7d4fe086,al
  40e570:	mov    eax,0xacb418c5
  40e575:	lock call 0x5f2882ad
  40e57b:	test   eax,0xdbdac236
  40e580:	fnsave [ebp+0x572e3d66]
  40e586:	mov    es,WORD PTR [ecx]
  40e588:	mov    al,ds:0x5ffb5987
  40e58d:	mov    ebp,0x2e8d917d
  40e592:	je     0x40e51e
  40e594:	into   
  40e595:	inc    ebp
  40e596:	int    0xe7
  40e598:	mov    esp,0x6fa01e7f
  40e59d:	(bad)  
  40e59e:	lahf   
  40e59f:	mov    cl,0xb5
  40e5a1:	test   dl,ch
  40e5a3:	loopne 0x40e5f9
  40e5a5:	sbb    eax,0xb4dd8b9c
  40e5aa:	ret    0x759
  40e5ad:	mov    ch,0x70
  40e5af:	and    al,0x13
  40e5b1:	imul   esp,edx,0x565abfa6
  40e5b7:	call   0x2fb5:0x562f267d
  40e5be:	sbb    al,0xfa
  40e5c0:	and    bh,bl
  40e5c2:	cs (bad) 
  40e5c4:	pop    ecx
  40e5c5:	pop    eax
  40e5c6:	lods   al,BYTE PTR ds:[esi]
  40e5c7:	repnz mov al,ds:0x859414af
  40e5cd:	lds    ebp,FWORD PTR [esp+ebx*4]
  40e5d0:	and    ah,al
  40e5d2:	dec    ecx
  40e5d3:	mov    ds:0x12c1024d,al
  40e5d8:	rcr    DWORD PTR [ebx],1
  40e5da:	in     eax,dx
  40e5db:	dec    ecx
  40e5dd:	mov    ebp,0xed29fc88
  40e5e2:	sub    esi,DWORD PTR [edi+edx*4-0x3b]
  40e5e6:	std    
  40e5e7:	retf   0xf4c2
  40e5ea:	lods   eax,DWORD PTR ds:[esi]
  40e5eb:	rol    DWORD PTR [ebx-0x4dbfed6c],0x6b
  40e5f2:	add    ecx,DWORD PTR [ebp+0x4130e02]
  40e5f8:	mov    esp,0x2b54ad0d
  40e5fd:	xchg   ecx,eax
  40e5fe:	push   bx
  40e600:	cmp    BYTE PTR [esi-0x47688a05],dl
  40e606:	out    0x70,al
  40e608:	js     0x40e5a7
  40e60a:	outs   dx,DWORD PTR ds:[esi]
  40e60b:	push   esp
  40e60c:	push   eax
  40e60d:	imul   BYTE PTR [ecx-0x56d9b497]
  40e613:	iret   
  40e614:	dec    ebp
  40e615:	out    dx,eax
  40e616:	in     al,dx
  40e617:	mov    ah,BYTE PTR [edx]
  40e619:	shl    DWORD PTR cs:[esi+0x37ec57e],1
  40e620:	fxtract 
  40e622:	mov    WORD PTR [ecx-0x60],fs
  40e625:	stos   BYTE PTR es:[edi],al
  40e626:	into   
  40e627:	mov    al,ds:0xd0d93f75
  40e62c:	jbe    0x40e5ca
  40e62e:	sbb    BYTE PTR [edx-0x4915e100],0x62
  40e635:	sub    BYTE PTR ds:0xf27bd8c2,dl
  40e63b:	call   0x8830:0x5761b9db
  40e642:	idiv   dl
  40e644:	sbb    ah,BYTE PTR [ebp-0x43]
  40e647:	add    DWORD PTR [ebx],0xa8137dcc
  40e64d:	jecxz  0x40e633
  40e64f:	add    eax,0xf0aeb26a
  40e654:	clc    
  40e655:	bound  esi,QWORD PTR [ebx]
  40e657:	dec    edx
  40e658:	fs idiv edx
  40e65b:	fcmovbe st,st(1)
  40e65d:	mov    edi,0x4b7c1d8b
  40e662:	sub    ah,ch
  40e664:	jne    0x40e6e1
  40e666:	fadd   QWORD PTR [edx-0x63]
  40e669:	inc    ebp
  40e66a:	ins    DWORD PTR es:[edi],dx
  40e66b:	mov    ch,0xcc
  40e66d:	mov    edi,0x206481d6
  40e672:	push   es
  40e673:	xor    edi,0xaa18293d
  40e679:	xlat   BYTE PTR ds:[ebx]
  40e67a:	mov    DWORD PTR [edi+0x25b22b0f],ebx
  40e680:	loopne 0x40e67f
  40e682:	(bad)  
  40e683:	dec    eax
  40e684:	jo     0x40e613
  40e686:	cli    
  40e687:	mov    ds:0xa6ce7585,eax
  40e68c:	lahf   
  40e68d:	adc    ebp,edi
  40e68f:	jmp    0xa664:0x2d0f22be
  40e696:	lods   al,BYTE PTR ds:[esi]
  40e697:	push   ebx
  40e698:	js     0x40e718
  40e69a:	out    dx,al
  40e69b:	or     eax,esp
  40e69d:	repz in al,0x65
  40e6a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6a1:	mov    al,ds:0xca0b5837
  40e6a6:	(bad)  
  40e6a7:	add    DWORD PTR [ecx],esi
  40e6a9:	push   esp
  40e6aa:	mov    esp,0x18ed8dee
  40e6af:	and    esi,DWORD PTR [ecx]
  40e6b1:	inc    edi
  40e6b2:	pop    edx
  40e6b3:	shl    dh,cl
  40e6b5:	in     eax,dx
  40e6b6:	sahf   
  40e6b7:	jl     0x40e6a4
  40e6b9:	or     BYTE PTR [ebp+ebp*2-0x5a],bl
  40e6bd:	cdq    
  40e6be:	in     eax,dx
  40e6bf:	stos   BYTE PTR es:[edi],al
  40e6c0:	or     dh,ch
  40e6c2:	adc    BYTE PTR [ebx-0x2506aacd],dl
  40e6c8:	jbe    0x40e67b
  40e6ca:	push   es
  40e6cb:	mov    bh,0x8a
  40e6cd:	push   ds
  40e6ce:	push   es
  40e6cf:	dec    eax
  40e6d0:	jge    0x40e74c
  40e6d2:	xchg   esp,eax
  40e6d3:	aad    0x36
  40e6d5:	inc    esp
  40e6d6:	test   BYTE PTR [edx+0x5e2b09f0],al
  40e6dc:	aas    
  40e6dd:	scas   eax,DWORD PTR es:[edi]
  40e6de:	jge    0x40e681
  40e6e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6e1:	fwait
  40e6e2:	mov    cl,0xcb
  40e6e4:	pusha  
  40e6e5:	inc    ecx
  40e6e6:	adc    DWORD PTR [esi-0x53f373e1],esi
  40e6ec:	xchg   edi,eax
  40e6ed:	in     eax,0xa0
  40e6ef:	ret    
  40e6f0:	push   cs
  40e6f1:	pop    ebp
  40e6f2:	pop    esp
  40e6f3:	pusha  
  40e6f4:	ror    DWORD PTR [ebx-0x17],1
  40e6f7:	xor    BYTE PTR [edi],cl
  40e6f9:	mov    al,ds:0x98787f3f
  40e6fe:	dec    ebx
  40e6ff:	pushf  
  40e700:	xor    DWORD PTR [edx-0x1e],edi
  40e703:	mov    esi,0x6ee0ae5
  40e708:	hlt    
  40e709:	(bad)
  40e70c:	dec    ebx
  40e70d:	fiadd  WORD PTR [edi+edi*8-0x3]
  40e711:	mov    fs,WORD PTR [eax]
  40e713:	imul   edx,DWORD PTR [edx+0x47],0x910e978b
  40e71a:	in     al,0xd5
  40e71c:	pextrw edi,mm2,0x1d
  40e720:	inc    edx
  40e721:	sub    eax,0xfeb0cc84
  40e726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e727:	(bad)  
  40e728:	mov    ah,0x35
  40e72a:	xlat   BYTE PTR ds:[ebx]
  40e72b:	(bad)  
  40e72c:	xchg   ebx,eax
  40e72d:	hlt    
  40e72e:	add    BYTE PTR [edx],dh
  40e730:	dec    ebx
  40e731:	jmp    0x40e720
  40e733:	adc    al,0x6b
  40e735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e736:	(bad)  
  40e737:	dec    eax
  40e738:	mov    esi,0xde117d2
  40e73d:	das    
  40e73e:	daa    
  40e73f:	mov    eax,ds:0x515bd078
  40e744:	jo     0x40e7b3
  40e746:	and    eax,0x940e9bba
  40e74b:	dec    ecx
  40e74c:	in     eax,0x3d
  40e74e:	push   ss
  40e74f:	ss jae 0x40e7bc
  40e752:	sub    BYTE PTR [eax-0x35187924],dh
  40e758:	bound  edx,QWORD PTR [edx+0x5b]
  40e75b:	clc    
  40e75c:	cld    
  40e75d:	ror    esi,cl
  40e75f:	ss jle 0x40e73e
  40e762:	test   ebx,esp
  40e764:	push   ebx
  40e765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e766:	sbb    ebp,DWORD PTR ds:0x2c9ff29d
  40e76c:	sub    ah,al
  40e76e:	xchg   ecx,eax
  40e76f:	ins    DWORD PTR es:[edi],dx
  40e770:	nop
  40e771:	fs and eax,0x8d80f891
  40e777:	ficom  DWORD PTR [ecx-0x43cba7f3]
  40e77d:	fnstenv [ebp-0x75]
  40e780:	fist   WORD PTR [edi+0x7ad50862]
  40e786:	add    DWORD PTR [eax-0x7c],edx
  40e789:	repnz mov bh,0x33
  40e78c:	jp     0x40e7e7
  40e78e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e78f:	pop    edx
  40e790:	add    al,BYTE PTR [eax-0x5d]
  40e793:	shl    BYTE PTR [esi-0x7f32d775],0x41
  40e79a:	pop    ebp
  40e79b:	mov    ds:0xa03c7c46,al
  40e7a0:	dec    eax
  40e7a1:	xchg   esi,eax
  40e7a2:	aam    0xa4
  40e7a4:	mov    esi,0x80fda077
  40e7a9:	xchg   ebp,eax
  40e7aa:	rcr    DWORD PTR [eax+edx*1],1
  40e7ad:	xlat   BYTE PTR ds:[ebx]
  40e7ae:	adc    DWORD PTR [ecx],esp
  40e7b0:	inc    eax
  40e7b1:	or     esi,DWORD PTR [edx+0x71ab8580]
  40e7b7:	add    dl,bl
  40e7b9:	jne    0x40e832
  40e7bb:	inc    esp
  40e7bc:	mov    eax,0x62963a23
  40e7c1:	xchg   ebx,eax
  40e7c2:	push   ds
  40e7c3:	sbb    DWORD PTR [edi-0x48],ebx
  40e7c6:	add    dh,BYTE PTR [esi]
  40e7c8:	sub    eax,0xa2fcfd12
  40e7cd:	(bad)  
  40e7ce:	sbb    DWORD PTR [edi+eiz*4-0x4738435f],ecx
  40e7d5:	leave  
  40e7d6:	add    eax,0xb2902464
  40e7db:	(bad)  
  40e7dc:	xchg   ecx,eax
  40e7dd:	dec    esp
  40e7de:	aaa    
  40e7df:	jo     0x40e7f0
  40e7e1:	push   ecx
  40e7e2:	popf   
  40e7e3:	push   edx
  40e7e4:	jnp    0x40e7ce
  40e7e6:	mov    ds:0xb807e9f7,al
  40e7eb:	fucomi st,st(3)
  40e7ed:	xchg   ebp,eax
  40e7ee:	add    eax,0xe622031b
  40e7f3:	js     0x40e7e2
  40e7f5:	or     DWORD PTR [ecx-0x7739922f],edi
  40e7fb:	mov    eax,0xf1082a63
  40e800:	adc    eax,0x5052a9e0
  40e805:	mov    ah,0xc7
  40e807:	mov    edi,0x8ca37378
  40e80c:	xchg   BYTE PTR [eax+edx*1-0x49d6d6f8],cl
  40e813:	aaa    
  40e814:	dec    edi
  40e815:	xchg   ebx,eax
  40e816:	add    DWORD PTR [ebx],ebx
  40e818:	pop    edi
  40e819:	fistp  QWORD PTR [edi-0xc]
  40e81c:	(bad)  
  40e81e:	mov    eax,ds:0x7a725e4e
  40e823:	dec    edi
  40e824:	inc    ecx
  40e825:	xchg   edi,eax
  40e826:	cmp    al,0xd8
  40e828:	dec    ebp
  40e829:	xor    eax,0xa6bbf55
  40e82e:	and    edi,esi
  40e830:	mov    esp,0x7b026b9c
  40e835:	nop
  40e836:	mov    dl,0x40
  40e838:	jecxz  0x40e7dc
  40e83a:	stc    
  40e83b:	or     eax,ebx
  40e83d:	stos   BYTE PTR es:[edi],al
  40e83e:	jne    0x40e7c7
  40e840:	mov    dh,BYTE PTR [ecx-0x55]
  40e843:	cs call 0x4faf:0xe51559c7
  40e84b:	cmp    ebp,DWORD PTR [edx-0x28]
  40e84e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e84f:	jbe    0x40e8a6
  40e851:	stos   BYTE PTR es:[edi],al
  40e852:	int    0x4c
  40e854:	inc    esp
  40e855:	dec    ebp
  40e856:	fadd   QWORD PTR [eax]
  40e858:	nop
  40e859:	sbb    cl,BYTE PTR [edx-0x38c1f062]
  40e85f:	mov    bh,0xf2
  40e861:	mov    dh,0x16
  40e863:	sahf   
  40e864:	fstp   TBYTE PTR [eax+0x50]
  40e867:	add    BYTE PTR [eax],dl
  40e869:	cld    
  40e86a:	jo     0x40e84e
  40e86c:	(bad)  
  40e86d:	(bad)  
  40e86f:	leavew 
  40e871:	rcr    ebx,1
  40e873:	std    
  40e874:	int    0x8
  40e876:	inc    esp
  40e877:	mov    edx,0xb1f386ea
  40e87c:	stos   BYTE PTR es:[edi],al
  40e87d:	inc    esp
  40e87e:	cmp    DWORD PTR [edx-0x32],esi
  40e881:	ja     0x40e887
  40e883:	dec    edi
  40e884:	scas   al,BYTE PTR es:[edi]
  40e885:	mov    esp,0x5c44f563
  40e88a:	stc    
  40e88b:	jecxz  0x40e8f5
  40e88d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e88e:	push   ss
  40e88f:	push   esi
  40e890:	stos   BYTE PTR es:[edi],al
  40e891:	dec    ecx
  40e892:	sub    al,0x9b
  40e894:	push   edi
  40e895:	cmp    eax,0xfc3558cd
  40e89a:	jbe    0x40e8cd
  40e89c:	push   es
  40e89d:	repnz pop ebp
  40e89f:	or     eax,0x47f70505
  40e8a4:	inc    edi
  40e8a5:	jmp    0x53cb:0xe613f9d1
  40e8ac:	jmp    DWORD PTR [eax-0x19]
  40e8af:	std    
  40e8b0:	jp     0x40e871
  40e8b2:	dec    ebp
  40e8b3:	jp     0x40e916
  40e8b5:	mov    esi,0xf8470de1
  40e8ba:	and    cl,bl
  40e8bc:	adc    edx,esi
  40e8be:	(bad)  
  40e8bf:	bnd ret 
  40e8c1:	add    al,0x68
  40e8c3:	bound  esp,QWORD PTR [edi]
  40e8c5:	sub    BYTE PTR [edi],ah
  40e8c7:	es xor al,0x74
  40e8ca:	retf   
  40e8cb:	or     al,0xd9
  40e8cd:	rol    BYTE PTR [edi+0x5e287aba],cl
  40e8d3:	push   0x65
  40e8d5:	test   DWORD PTR [ecx-0x68219c5e],ebx
  40e8db:	pop    esi
  40e8dc:	jecxz  0x40e958
  40e8de:	push   esi
  40e8df:	adc    eax,DWORD PTR [ebx-0x17bbbac]
  40e8e5:	sbb    al,ch
  40e8e7:	xchg   edi,eax
  40e8e8:	js     0x40e948
  40e8ea:	sbb    bl,BYTE PTR [ecx-0x38f1f4e1]
  40e8f0:	call   0xf43b:0x81d0fdb6
  40e8f7:	aam    0xa
  40e8f9:	add    eax,0xef7c34ae
  40e8fe:	cmp    eax,0x5d99c1ab
  40e903:	jmp    0xb32dced2
  40e908:	and    BYTE PTR [edx+0x12823812],bl
  40e90e:	sub    eax,DWORD PTR [edx+0x3c3d8185]
  40e914:	cwde   
  40e915:	mov    cl,0x78
  40e917:	mov    eax,0x5033234c
  40e91c:	dec    ebp
  40e91d:	rcr    BYTE PTR [edx+0x21],0x56
  40e921:	mov    edx,0x487aa188
  40e926:	repnz cmp bh,dl
  40e929:	jo     0x40e8cb
  40e92b:	mov    bh,BYTE PTR [edi-0x2d723c4e]
  40e931:	rcr    DWORD PTR cs:[edi+ecx*8+0x767ace9c],1
  40e939:	sbb    ch,ah
  40e93b:	sbb    BYTE PTR [esi],bl
  40e93d:	adc    al,0x23
  40e93f:	js     0x40e999
  40e941:	ja     0x40e950
  40e943:	add    edx,edx
  40e945:	push   0x3d
  40e947:	stos   BYTE PTR es:[edi],al
  40e948:	cmp    al,0xe4
  40e94a:	(bad)  
  40e94b:	es pushf 
  40e94d:	lahf   
  40e94e:	out    dx,al
  40e94f:	out    0x8f,al
  40e951:	inc    edx
  40e952:	fistp  DWORD PTR [eax-0x144396c5]
  40e958:	rcr    BYTE PTR [edx+0x2d],1
  40e95b:	add    eax,0x1fc719e7
  40e960:	(bad)  
  40e961:	out    0x60,al
  40e963:	jbe    0x40e954
  40e965:	push   cs
  40e966:	push   ss
  40e967:	lods   al,BYTE PTR ds:[esi]
  40e968:	leave  
  40e969:	dec    ebx
  40e96a:	daa    
  40e96b:	xchg   esp,eax
  40e96c:	xchg   DWORD PTR [eax+0x58],ecx
  40e96f:	xchg   BYTE PTR [edi],cl
  40e971:	cmp    dl,cl
  40e973:	arpl   WORD PTR [edx+0x5b9bf57d],bp
  40e979:	cmp    DWORD PTR ds:0x277f8174,0x7c
  40e980:	or     al,0x79
  40e982:	push   es
  40e983:	js     0x40e9d1
  40e985:	cmc    
  40e986:	add    al,0x18
  40e988:	xor    al,BYTE PTR [edx-0x51b571a3]
  40e98e:	outs   dx,BYTE PTR ds:[esi]
  40e98f:	pop    es
  40e990:	push   esp
  40e991:	mov    ecx,0x64570418
  40e996:	sar    DWORD PTR [edi],cl
  40e998:	fcmovu st,st(4)
  40e99a:	pop    ds
  40e99b:	loop   0x40e973
  40e99d:	jge    0x40e961
  40e99f:	test   ch,cl
  40e9a1:	adc    DWORD PTR ds:0x5b8eae2f,0x8e7fdeb4
  40e9ab:	cmp    al,0xaa
  40e9ad:	sub    edx,eax
  40e9af:	push   0xffffff8c
  40e9b1:	dec    esp
  40e9b2:	arpl   WORD PTR [eax],sp
  40e9b4:	sub    BYTE PTR [edx-0x68cf8327],0x3d
  40e9bb:	pushf  
  40e9bc:	pop    esi
  40e9bd:	jge    0x40e9d9
  40e9bf:	add    esp,ebx
  40e9c1:	and    eax,0x5c7b46ff
  40e9c6:	jmp    0x40e972
  40e9c8:	inc    ecx
  40e9c9:	das    
  40e9ca:	xor    BYTE PTR ds:0xe1b1416a,ah
  40e9d0:	(bad)  
  40e9d2:	inc    ebx
  40e9d3:	mul    DWORD PTR [ebp+0x1881a168]
  40e9d9:	and    bh,al
  40e9db:	fistp  DWORD PTR [esi-0x474654a3]
  40e9e1:	sub    DWORD PTR [esi+0x14],ebx
  40e9e4:	push   DWORD PTR [ebp+eiz*4-0x6a]
  40e9e8:	fisttp DWORD PTR [eax]
  40e9ea:	inc    edi
  40e9eb:	adc    ah,bh
  40e9ed:	aaa    
  40e9ee:	outs   dx,DWORD PTR ds:[esi]
  40e9ef:	jg     0x40e9a3
  40e9f1:	mov    esp,eax
  40e9f3:	scas   al,BYTE PTR es:[edi]
  40e9f4:	mov    cs,WORD PTR ds:[ebp+0xf01cef2]
  40e9fb:	push   edx
  40e9fc:	add    dh,BYTE PTR [esi-0x28]
  40e9ff:	xchg   edi,eax
  40ea00:	fidiv  DWORD PTR [ebx]
  40ea02:	adc    dl,0x42
  40ea05:	aam    0xcf
  40ea07:	ins    DWORD PTR es:[edi],dx
  40ea08:	hlt    
  40ea09:	psadbw mm4,QWORD PTR [esi]
  40ea0c:	or     bl,BYTE PTR [esi+0x3b]
  40ea0f:	inc    eax
  40ea10:	aad    0x74
  40ea12:	xor    bl,BYTE PTR [ebx-0x37]
  40ea15:	scas   al,BYTE PTR es:[edi]
  40ea16:	les    esi,FWORD PTR [edi+0x53]
  40ea19:	out    0x1f,eax
  40ea1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea1c:	(bad)  
  40ea1e:	pop    es
  40ea1f:	lods   al,BYTE PTR ds:[esi]
  40ea20:	pushf  
  40ea21:	(bad)  
  40ea22:	mov    ah,dl
  40ea24:	into   
  40ea25:	in     eax,0x5e
  40ea27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea28:	mov    ah,0x62
  40ea2a:	out    0x49,eax
  40ea2c:	dec    ebx
  40ea2d:	outs   dx,DWORD PTR ds:[esi]
  40ea2e:	clc    
  40ea2f:	push   edx
  40ea31:	dec    eax
  40ea32:	in     eax,dx
  40ea33:	lock sub DWORD PTR [edi],edx
  40ea36:	sub    al,0xdf
  40ea38:	pushf  
  40ea39:	inc    ebx
  40ea3a:	dec    ebp
  40ea3b:	out    dx,al
  40ea3c:	dec    ecx
  40ea3d:	pop    ecx
  40ea3e:	push   ds
  40ea3f:	iret   
  40ea40:	(bad)  
  40ea41:	dec    ebx
  40ea42:	jns    0x40e9f7
  40ea44:	pop    eax
  40ea45:	cdq    
  40ea46:	xlat   BYTE PTR ds:[ebx]
  40ea47:	test   BYTE PTR [ebx+0x478acb80],bh
  40ea4d:	push   edx
  40ea4e:	jbe    0x40eabc
  40ea50:	jns    0x40ea9f
  40ea52:	adc    eax,0x72aa1f9d
  40ea57:	ins    BYTE PTR es:[edi],dx
  40ea58:	adc    ebp,edi
  40ea5a:	(bad)  
  40ea5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea5c:	loope  0x40e9df
  40ea5e:	fs add al,0xc9
  40ea61:	xchg   esi,eax
  40ea62:	lock ret 
  40ea64:	data16 (bad) 
  40ea66:	pop    esp
  40ea67:	in     eax,dx
  40ea68:	push   ss
  40ea69:	loope  0x40eac2
  40ea6b:	scas   eax,DWORD PTR es:[edi]
  40ea6c:	out    dx,al
  40ea6d:	sar    DWORD PTR [edx+0x2685f99],cl
  40ea73:	mov    ebx,0x7d996d2
  40ea78:	mov    esi,0x2919bc34
  40ea7d:	not    DWORD PTR ds:0x7daca7a3
  40ea83:	(bad)  
  40ea85:	dec    ecx
  40ea86:	sbb    BYTE PTR [ebp+eiz*2+0x59],ah
  40ea8a:	out    dx,al
  40ea8b:	(bad)  
  40ea8c:	adc    eax,0x754a0a5a
  40ea91:	popf   
  40ea92:	dec    ebp
  40ea93:	(bad)  
  40ea95:	inc    edi
  40ea96:	dec    ebp
  40ea97:	aaa    
  40ea98:	sub    DWORD PTR [ecx+0x49038c47],ebx
  40ea9e:	and    al,0x3c
  40eaa0:	repnz sbb BYTE PTR [ecx],0x8
  40eaa4:	cld    
  40eaa5:	dec    ebx
  40eaa6:	push   ebx
  40eaa7:	into   
  40eaa8:	mov    bh,0x93
  40eaaa:	adc    dl,BYTE PTR [edi]
  40eaac:	popf   
  40eaad:	adc    ebx,DWORD PTR [eax+0x6f]
  40eab0:	imul   ecx,ebp,0x8
  40eab3:	repz mov cs,WORD PTR [edx+0x7a697427]
  40eaba:	mul    DWORD PTR [si]
  40eabd:	pusha  
  40eabe:	add    eax,0x4af25e2
  40eac3:	scas   eax,DWORD PTR es:[edi]
  40eac4:	mov    DWORD PTR [ecx+0x1debf6d6],ebp
  40eaca:	mov    ds:0x245f4955,al
  40eacf:	inc    eax
  40ead0:	jnp    0x40eac1
  40ead2:	sub    esp,ecx
  40ead4:	mov    ebp,0xc86cc982
  40ead9:	outs   dx,BYTE PTR ds:[esi]
  40eada:	mov    ch,0x98
  40eadc:	pop    edi
  40eadd:	pop    ebp
  40eade:	(bad)  
  40eadf:	push   ds
  40eae0:	(bad)  
  40eae1:	addr16 mov ebx,0x6920c9c3
  40eae7:	push   esi
  40eae8:	jg     0x40eaf0
  40eaea:	ins    BYTE PTR es:[edi],dx
  40eaeb:	data16 mov bh,dl
  40eaee:	idiv   DWORD PTR [edx]
  40eaf0:	ret    
  40eaf1:	arpl   WORD PTR [ecx*1+0x3fdffd9d],ax
  40eaf8:	fdiv   DWORD PTR [ebx-0x48]
  40eafb:	in     al,0x6c
  40eafd:	cs notrack jmp DWORD PTR [esi+0x41567d6f]
  40eb05:	xor    DWORD PTR [esi-0x35],esp
  40eb08:	inc    eax
  40eb09:	inc    ecx
  40eb0a:	fnstenv [ebx-0x19]
  40eb0d:	lea    esp,[ebx]
  40eb0f:	xlat   BYTE PTR ds:[ebx]
  40eb10:	rcr    BYTE PTR [edx-0x34720b21],cl
  40eb16:	aaa    
  40eb17:	or     al,0xbc
  40eb19:	jg     0x40eaf7
  40eb1b:	push   ebp
  40eb1c:	mov    eax,ds:0xe595ed31
  40eb21:	push   cs
  40eb22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb23:	mov    eax,0xdcdc5fdf
  40eb28:	mov    esi,0x3027174d
  40eb2d:	push   edi
  40eb2e:	aad    0xc8
  40eb30:	jmp    0x40eaca
  40eb32:	inc    eax
  40eb33:	push   es
  40eb34:	and    eax,0x3b14704a
  40eb39:	pop    ebp
  40eb3a:	test   eax,0x9ed3204f
  40eb3f:	mov    edx,0xcb4357b0
  40eb44:	loopne 0x40ebc3
  40eb46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb47:	cmp    al,0xe
  40eb49:	sbb    al,0x7f
  40eb4b:	jbe    0x40ead6
  40eb4d:	cwde   
  40eb4e:	adc    BYTE PTR [esi],0x79
  40eb51:	sar    BYTE PTR [esi],1
  40eb53:	xchg   ebx,eax
  40eb54:	or     BYTE PTR [edi],ch
  40eb56:	mov    ds:0xab9bb0ef,al
  40eb5b:	mov    ds:0x7ff20e19,al
  40eb60:	mov    cl,0xda
  40eb62:	jne    0x40ebd1
  40eb64:	hlt    
  40eb65:	sub    BYTE PTR [eax],0x6e
  40eb68:	add    dh,dl
  40eb6a:	xor    eax,0xf4e93496
  40eb6f:	push   0x58
  40eb71:	aam    0x9a
  40eb73:	cmp    ecx,0xa696ad4c
  40eb79:	and    ah,dh
  40eb7b:	mov    esi,0x715d74f
  40eb80:	dec    ecx
  40eb81:	rcl    DWORD PTR [edx+0x26],cl
  40eb84:	mov    esi,0x23e57bf4
  40eb89:	dec    ebx
  40eb8a:	and    esi,DWORD PTR [ecx+0x632a7082]
  40eb90:	or     BYTE PTR [eax+eax*1+0x69382ca2],ch
  40eb97:	lea    esp,[ebx+0x31]
  40eb9a:	cmp    BYTE PTR [eax+edi*4-0x7e1d90d2],al
  40eba1:	jbe    0x40ec1e
  40eba3:	nop
  40eba4:	push   eax
  40eba5:	std    
  40eba6:	aas    
  40eba7:	int3   
  40eba8:	add    esp,ebx
  40ebaa:	ins    DWORD PTR es:[edi],dx
  40ebab:	imul   bh
  40ebad:	lds    eax,FWORD PTR [edx-0x1449a0bf]
  40ebb3:	pextrw ebp,(bad),0xc5
  40ebb5:	lods   eax,DWORD PTR ds:[esi]
  40ebb6:	inc    esp
  40ebb7:	push   ecx
  40ebb8:	jb     0x40ec03
  40ebba:	fdivr  st,st(1)
  40ebbc:	sbb    al,0x5d
  40ebbe:	(bad)  
  40ebbf:	cdq    
  40ebc0:	and    DWORD PTR [esi-0x79],esp
  40ebc3:	scas   eax,DWORD PTR es:[edi]
  40ebc4:	pop    ebx
  40ebc5:	or     eax,0x14c0ea84
  40ebca:	test   al,0x2b
  40ebcc:	shl    DWORD PTR [edx+edi*4-0xf],1
  40ebd0:	jle    0x40ebdc
  40ebd2:	jp     0x40eb99
  40ebd4:	sub    eax,0x5a6b76c1
  40ebd9:	(bad)  
  40ebda:	sahf   
  40ebdb:	ins    BYTE PTR es:[edi],dx
  40ebdc:	add    al,0x45
  40ebde:	xchg   esi,eax
  40ebdf:	imul   esi
  40ebe1:	dec    esi
  40ebe2:	adc    al,0xab
  40ebe4:	call   eax
  40ebe6:	lock mov ecx,0x8ada9077
  40ebec:	mov    ds:0x1bec9291,al
  40ebf1:	mov    eax,0x2ed1a582
  40ebf6:	xchg   edi,eax
  40ebf7:	push   0xcb776acf
  40ebfc:	jnp    0x40ec15
  40ebfe:	(bad)  
  40ebff:	mov    al,ds:0x26854f34
  40ec04:	or     eax,0xde7047bc
  40ec09:	mov    WORD PTR [edx],ss
  40ec0b:	or     dh,BYTE PTR [edi-0x2f]
  40ec0e:	pop    gs
  40ec10:	fisub  WORD PTR [esi+0x3e]
  40ec13:	fimul  DWORD PTR [ebx+0x11f5df9e]
  40ec19:	cmp    BYTE PTR [esi+0x64],ch
  40ec1c:	jb     0x40ec93
  40ec1e:	mov    dl,0xa1
  40ec20:	sub    cl,BYTE PTR [ebp+edi*1+0x5e]
  40ec24:	mov    ch,0xc3
  40ec26:	mov    al,0x8d
  40ec28:	sti    
  40ec29:	fdivr  st(1),st
  40ec2b:	xchg   BYTE PTR [edx-0x6012515e],cl
  40ec31:	push   ds
  40ec32:	nop
  40ec33:	mov    ds:0x5665bc47,eax
  40ec38:	out    dx,eax
  40ec39:	xchg   DWORD PTR [esi],esi
  40ec3b:	out    0x99,al
  40ec3d:	mov    dh,0xfc
  40ec3f:	push   0xff3c190a
  40ec44:	aam    0xcc
  40ec46:	add    BYTE PTR [edi+ecx*1],bh
  40ec49:	mov    ecx,0xbc2df8a
  40ec4e:	mov    esi,0xf21898ee
  40ec53:	pop    ebp
  40ec54:	fs jmp 0x6248:0x44724782
  40ec5c:	sbb    BYTE PTR [esi-0x27],cl
  40ec5f:	add    eax,0x6597ac24
  40ec64:	stos   DWORD PTR es:[edi],eax
  40ec65:	ja     0x40ecb5
  40ec67:	loope  0x40ecb9
  40ec69:	sub    ebp,edi
  40ec6b:	hlt    
  40ec6c:	mov    esi,DWORD PTR [eax+0x6fa79867]
  40ec72:	outs   dx,DWORD PTR ds:[esi]
  40ec73:	cmp    DWORD PTR [eax-0x4145dbe4],0xae45a334
  40ec7d:	inc    edi
  40ec7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec7f:	neg    BYTE PTR [ebp-0x45fb855c]
  40ec85:	or     ch,BYTE PTR [edi+0x2a]
  40ec88:	ins    DWORD PTR es:[edi],dx
  40ec89:	addr16 dec ebp
  40ec8b:	jg     0x40ecf2
  40ec8d:	sbb    BYTE PTR [edi-0x5de4cbe8],dl
  40ec93:	mov    eax,0x23b9b7ab
  40ec98:	adc    BYTE PTR [ecx],0xf4
  40ec9b:	int    0x74
  40ec9d:	int    0x70
  40ec9f:	and    BYTE PTR [ebx-0x75],dh
  40eca2:	xchg   ebp,eax
  40eca3:	inc    esp
  40eca4:	popf   
  40eca5:	pushf  
  40eca6:	add    DWORD PTR [esi+eiz*2],edx
  40eca9:	adc    BYTE PTR [ebp+0x71510ac9],al
  40ecaf:	leave  
  40ecb0:	xor    BYTE PTR [edx-0x5936265c],cl
  40ecb6:	popf   
  40ecb7:	imul   DWORD PTR [ebp+0x1a]
  40ecba:	fnstcw WORD PTR [ebx+0x7e]
  40ecbd:	into   
  40ecbe:	jnp    0x40ec40
  40ecc0:	sbb    edx,DWORD PTR [edi+0x65308602]
  40ecc6:	add    BYTE PTR [edi],dh
  40ecc8:	xchg   edi,eax
  40ecc9:	ss or  bl,al
  40eccc:	pop    ebx
  40eccd:	pop    ebp
  40ecce:	and    DWORD PTR [esi+0x1e24941c],edi
  40ecd4:	or     dh,BYTE PTR [ebx+0x77bcc518]
  40ecda:	mov    ebp,0x26609122
  40ecdf:	jle    0x40ed47
  40ece1:	in     al,dx
  40ece2:	dec    DWORD PTR [edi+0x723a356b]
  40ece8:	xor    eax,0x9a6495b4
  40eced:	(bad)  
  40ecee:	repnz mov ?,ebx
  40ecf1:	loopne 0x40eced
  40ecf3:	std    
  40ecf4:	xor    DWORD PTR [eax],0x71
  40ecf7:	sbb    bh,dh
  40ecf9:	adc    cl,BYTE PTR gs:[ecx-0x39]
  40ecfd:	lahf   
  40ecfe:	add    BYTE PTR [ebx+0x66],ch
  40ed01:	jge    0x40ed31
  40ed03:	les    esp,FWORD PTR [esi-0x199f9db9]
  40ed09:	aas    
  40ed0a:	inc    edi
  40ed0b:	pushf  
  40ed0c:	retf   0x2f63
  40ed0f:	xchg   edi,eax
  40ed10:	int3   
  40ed11:	xchg   ecx,eax
  40ed12:	or     bl,BYTE PTR [esi-0x78]
  40ed15:	jg     0x40ed0a
  40ed17:	out    dx,eax
  40ed18:	dec    eax
  40ed19:	push   edx
  40ed1a:	nop
  40ed1b:	test   al,0x74
  40ed1d:	adc    al,0xcf
  40ed1f:	xchg   esp,eax
  40ed20:	cld    
  40ed21:	pushf  
  40ed22:	out    0xf0,eax
  40ed24:	cwde   
  40ed25:	sub    dh,ah
  40ed27:	(bad)  
  40ed28:	sub    al,0x7e
  40ed2a:	or     ecx,DWORD PTR [ebx-0x4f]
  40ed2d:	int    0x8f
  40ed2f:	std    
  40ed30:	jae    0x40ecc5
  40ed32:	pop    ebx
  40ed33:	test   al,0xeb
  40ed35:	jns    0x40ed79
  40ed37:	adc    eax,0xd0f08e65
  40ed3c:	mov    edi,0xf909bd34
  40ed41:	loop   0x40ed56
  40ed43:	cli    
  40ed44:	inc    edx
  40ed45:	xlat   BYTE PTR ds:[ebx]
  40ed46:	mov    eax,ds:0x1316edd6
  40ed4b:	cmp    al,0xe1
  40ed4d:	sbb    ecx,DWORD PTR [ebp+eiz*1+0x3]
  40ed51:	addr16 call 0x59b3:0x195e0701
  40ed59:	adc    al,BYTE PTR ds:0x8f389a0d
  40ed5f:	cdq    
  40ed60:	(bad)  
  40ed61:	cmp    dl,BYTE PTR [edx+ecx*1]
  40ed64:	cmc    
  40ed65:	int3   
  40ed66:	je     0x40ed85
  40ed68:	dec    ebx
  40ed69:	shl    BYTE PTR [esi-0x2787bb8f],0x96
  40ed70:	push   0x7b3368c4
  40ed75:	pop    esi
  40ed76:	pop    ebx
  40ed77:	cmp    DWORD PTR [eax-0x3],ecx
  40ed7a:	push   esi
  40ed7b:	pop    ebp
  40ed7c:	xchg   edx,eax
  40ed7d:	daa    
  40ed7e:	or     ah,BYTE PTR [ebx+0x489efc31]
  40ed84:	jmp    0xbc1eec1c
  40ed89:	and    cl,dh
  40ed8b:	call   0x9768897d
  40ed90:	daa    
  40ed91:	push   es
  40ed92:	add    eax,0xffc11f14
  40ed97:	xor    ch,ah
  40ed99:	or     al,0x32
  40ed9b:	push   ds
  40ed9c:	call   0x46b2:0xa3afb811
  40eda3:	pop    edi
  40eda4:	mov    cl,0x6
  40eda6:	inc    ecx
  40eda7:	lods   al,BYTE PTR ds:[esi]
  40eda8:	lock cmc 
  40edaa:	(bad)  
  40edac:	adc    edi,DWORD PTR [ecx]
  40edae:	retf   
  40edaf:	xor    bh,cl
  40edb1:	in     eax,0x7d
  40edb3:	sub    esp,DWORD PTR [ebp+0x14]
  40edb6:	pop    ecx
  40edb7:	test   BYTE PTR [edx-0x13c3069f],0xdf
  40edbe:	mov    ah,BYTE PTR [edi-0x4e]
  40edc1:	(bad)  
  40edc2:	jecxz  0x40edb6
  40edc4:	in     eax,dx
  40edc5:	xor    eax,0xb42171eb
  40edca:	inc    esp
  40edcb:	lock mov ds:0x3e677826,eax
  40edd1:	(bad)  
  40edd3:	fst    DWORD PTR [ebx]
  40edd5:	adc    eax,0x1569ba51
  40edda:	icebp  
  40eddb:	mov    ?,WORD PTR [ebx+edi*2]
  40edde:	mov    WORD PTR [ecx+0x5c],gs
  40ede1:	mov    BYTE PTR [edi-0x2b],0x54
  40ede5:	fcmovb st,st(7)
  40ede7:	test   BYTE PTR [edi+0x52],bl
  40edea:	jle    0x40ed9f
  40edec:	jl     0x40ee18
  40edee:	mov    es,WORD PTR [ecx-0x45]
  40edf1:	sbb    al,0x69
  40edf3:	dec    edx
  40edf4:	shr    BYTE PTR [esi+0x5d],cl
  40edf7:	mov    dh,0xd1
  40edf9:	mov    dl,0x0
  40edfb:	jb     0x40ee17
  40edfd:	(bad)  
  40edfe:	outs   dx,BYTE PTR ds:[esi]
  40edff:	test   DWORD PTR [esi+0x631e68db],eax
  40ee05:	es mov esi,0x1f38260f
  40ee0b:	nop
  40ee0c:	cvtps2pi mm1,QWORD PTR [esi+0xa]
  40ee10:	or     eax,0xa28e8524
  40ee15:	xor    eax,0x9785e494
  40ee1a:	bound  esp,QWORD PTR [ecx+0x788d4eea]
  40ee20:	cmp    dh,BYTE PTR [ebx-0x6a]
  40ee23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee24:	pop    es
  40ee25:	adc    DWORD PTR fs:[ebx],esi
  40ee28:	ficom  WORD PTR [ebx+ebp*8]
  40ee2b:	mov    BYTE PTR [ecx+edi*2+0x3a],ch
  40ee2f:	push   edx
  40ee30:	ror    BYTE PTR [edi-0x46],1
  40ee33:	jmp    0x47184d51
  40ee38:	scas   eax,DWORD PTR es:[edi]
  40ee39:	lock push 0x6b926ad4
  40ee3f:	mov    ebx,0xfe2f392b
  40ee44:	xchg   edi,eax
  40ee45:	push   edi
  40ee46:	in     al,dx
  40ee47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee48:	pop    edi
  40ee49:	ja     0x40ee34
  40ee4b:	jno    0x40ee07
  40ee4d:	in     eax,0x87
  40ee4f:	xchg   DWORD PTR ds:0xb1699b38,ecx
  40ee55:	push   0x6a91b043
  40ee5a:	sar    BYTE PTR [edi+0x5e],cl
  40ee5d:	pop    edx
  40ee5e:	shl    eax,cl
  40ee60:	lods   eax,DWORD PTR ds:[esi]
  40ee61:	sbb    al,0x17
  40ee63:	inc    edx
  40ee64:	xchg   edi,eax
  40ee65:	fistp  WORD PTR [ebx+0x392dea92]
  40ee6b:	stos   DWORD PTR es:[edi],eax
  40ee6c:	mov    eax,ds:0x40857d1d
  40ee71:	mov    ebp,DWORD PTR [ecx]
  40ee73:	pause  
  40ee75:	(bad)  
  40ee76:	in     eax,0x94
  40ee78:	stc    
  40ee79:	mov    esp,0xa2e7bb7
  40ee7e:	or     al,0xeb
  40ee80:	in     al,0x1a
  40ee82:	dec    edi
  40ee83:	pop    ebp
  40ee84:	into   
  40ee85:	(bad)  
  40ee86:	leave  
  40ee87:	push   edi
  40ee88:	add    DWORD PTR [edi+0x79],ecx
  40ee8b:	leave  
  40ee8c:	gs stc 
  40ee8e:	call   0xcdb64f2c
  40ee93:	in     al,0x81
  40ee95:	mov    ah,BYTE PTR [ecx]
  40ee97:	test   al,0x9c
  40ee99:	data16 jg 0x40eebf
  40ee9c:	mov    ebp,0x67738366
  40eea1:	inc    ecx
  40eea2:	jle    0x40ee5b
  40eea4:	jp     0x40eeb9
  40eea6:	sub    DWORD PTR [ebx+0x1bc0d700],edx
  40eeac:	loop   0x40ee65
  40eeae:	cmp    BYTE PTR [edi+0x57],ch
  40eeb1:	imul   edi,DWORD PTR [esi+0x55],0xc1f299a7
  40eeb8:	aas    
  40eeb9:	in     eax,dx
  40eeba:	adc    eax,0x9375767d
  40eebf:	(bad)  
  40eec0:	ss xchg ebp,eax
  40eec2:	lock xchg esp,eax
  40eec4:	mov    ds:0x787bc132,al
  40eec9:	out    0x35,eax
  40eecb:	jp     0x40eef6
  40eecd:	jns    0x40ee66
  40eecf:	adc    edx,DWORD PTR [eax-0x3b]
  40eed2:	pop    es
  40eed3:	add    esi,DWORD PTR [edi]
  40eed5:	int    0xe1
  40eed7:	adc    DWORD PTR ds:0x15a28b84,edx
  40eedd:	retf   
  40eede:	in     eax,dx
  40eedf:	cli    
  40eee0:	out    dx,eax
  40eee1:	shl    esi,cl
  40eee3:	out    0x71,eax
  40eee5:	ins    DWORD PTR es:[edi],dx
  40eee6:	imul   edi,DWORD PTR [ebx],0x61fa4350
  40eeec:	inc    ebp
  40eeed:	mov    ds:0x93d5a65,al
  40eef2:	pop    ss
  40eef3:	out    0xc0,al
  40eef5:	adc    al,0x4b
  40eef7:	cmp    DWORD PTR [eax-0x4f81cc8d],edx
  40eefd:	(bad)  
  40eefe:	dec    edi
  40eeff:	or     DWORD PTR ds:0xd487e379,ebp
  40ef05:	jbe    0x40ef2c
  40ef07:	int    0x62
  40ef09:	in     al,dx
  40ef0a:	pop    es
  40ef0b:	(bad)  
  40ef0c:	push   esp
  40ef0d:	enter  0x80cc,0x29
  40ef11:	inc    edi
  40ef12:	mov    eax,ds:0xe23b892e
  40ef17:	ror    BYTE PTR [edi+edx*4-0x22],1
  40ef1b:	stc    
  40ef1c:	jb     0x40ef5e
  40ef1e:	inc    esi
  40ef1f:	mov    bh,0x5
  40ef21:	jae    0x40ef52
  40ef23:	(bad)  
  40ef24:	push   0x27a5c558
  40ef29:	int    0x55
  40ef2b:	mov    esi,0x1611704f
  40ef30:	inc    esp
  40ef31:	fcomp  QWORD PTR [edi]
  40ef33:	icebp  
  40ef34:	lods   eax,DWORD PTR ds:[esi]
  40ef35:	jns    0x40ef13
  40ef37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef38:	fiadd  DWORD PTR [eax+0x6d]
  40ef3b:	adc    esi,DWORD PTR [edi-0x3d]
  40ef3e:	retf   0xd31c
  40ef41:	cld    
  40ef42:	push   ecx
  40ef43:	out    dx,al
  40ef44:	shr    esi,cl
  40ef46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef47:	xchg   ecx,eax
  40ef48:	mov    bl,0xfc
  40ef4a:	test   dl,dh
  40ef4c:	push   0xffffffb2
  40ef4e:	inc    edx
  40ef4f:	jecxz  0x40ef48
  40ef51:	ja     0x40ef37
  40ef53:	cmp    edi,ebx
  40ef55:	out    dx,eax
  40ef56:	scas   al,BYTE PTR es:[edi]
  40ef57:	sub    ebx,edx
  40ef59:	xor    al,0xca
  40ef5b:	mov    ch,0xe2
  40ef5d:	mov    al,ds:0x90c24c3d
  40ef62:	and    BYTE PTR [ebp-0x2e],cl
  40ef65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef66:	mov    eax,ds:0x6db9c44e
  40ef6b:	sub    DWORD PTR [ebx+0x2719b3d9],eax
  40ef71:	stos   DWORD PTR es:[edi],eax
  40ef72:	mov    ch,0xa6
  40ef74:	inc    eax
  40ef75:	sti    
  40ef76:	mov    WORD PTR [edx*4-0x508700e9],ds
  40ef7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef7e:	inc    esp
  40ef7f:	cdq    
  40ef80:	pop    esp
  40ef81:	test   al,0xe4
  40ef83:	pop    ebx
  40ef84:	sub    ah,dl
  40ef86:	jmp    0xa3b63853
  40ef8b:	jmp    DWORD PTR [edx]
  40ef8d:	sbb    ah,BYTE PTR [ebp-0x2]
  40ef90:	inc    esi
  40ef91:	sub    edx,0x49370aa8
  40ef97:	jmp    0x40ef59
  40ef99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef9a:	in     al,0x9b
  40ef9c:	icebp  
  40ef9d:	sbb    eax,edi
  40ef9f:	mov    cs,WORD PTR [ecx+0x18]
  40efa2:	mov    dh,0x35
  40efa4:	push   ebx
  40efa5:	xchg   cl,al
  40efa7:	mov    ds:0x7c5a900,al
  40efac:	and    eax,0x86d276ef
  40efb1:	jmp    0x4c55f50e
  40efb6:	mov    ebx,esp
  40efb8:	mov    ah,0xf2
  40efba:	rcl    DWORD PTR [edi-0x6dd0ee9e],cl
  40efc0:	adc    eax,0x1d32711a
  40efc5:	ret    
  40efc6:	ja     0x40ef5c
  40efc8:	mov    al,ds:0xf44c4c8e
  40efcd:	lock in al,dx
  40efcf:	adc    edi,ebp
  40efd1:	mov    BYTE PTR [ecx-0x51398eb9],ah
  40efd7:	sar    DWORD PTR [ebp-0x12],1
  40efda:	sub    dl,BYTE PTR [edi-0x30]
  40efdd:	outs   dx,BYTE PTR ds:[esi]
  40efde:	imul   ebx,DWORD PTR [esi+0x70],0x391b74b6
  40efe5:	lds    ebx,FWORD PTR [esi-0x5292f522]
  40efeb:	xchg   edi,eax
  40efec:	stc    
  40efed:	stc    
  40efee:	fcmovb st,st(3)
  40eff0:	in     eax,dx
  40eff1:	mov    DWORD PTR [ebx+0x4d1448b3],ebx
  40eff7:	xchg   BYTE PTR [esi+edx*2-0x7acfda1c],dh
  40effe:	dec    eax
  40efff:	das    
  40f000:	lods   eax,DWORD PTR ds:[esi]
  40f001:	iret   
  40f002:	icebp  
  40f003:	cmp    ch,0xac
  40f006:	sbb    DWORD PTR [eax-0x5093eb74],0x22
  40f00d:	call   0x1e73:0x95a78282
  40f014:	pusha  
  40f015:	sbb    DWORD PTR [esi+0x4],ecx
  40f018:	(bad)  
  40f019:	cmp    al,0x99
  40f01b:	sahf   
  40f01c:	jl     0x40efbb
  40f01e:	mov    edx,0x715f83aa
  40f023:	imul   ebx,DWORD PTR [esi-0x696bef8c],0xb76d27d7
  40f02d:	icebp  
  40f02e:	xor    DWORD PTR [ebp+0x75],esp
  40f031:	cmp    esp,esp
  40f033:	xchg   edx,eax
  40f034:	sub    ebx,DWORD PTR [esi]
  40f036:	sbb    BYTE PTR gs:[esi+0x2e],0x9c
  40f03b:	cli    
  40f03c:	ret    
  40f03d:	push   edi
  40f03e:	adc    bh,BYTE PTR [edi]
  40f040:	sub    esi,DWORD PTR [ebp+0x7a091129]
  40f046:	mov    esp,0x3f76d7e8
  40f04b:	sbb    ah,bl
  40f04d:	inc    edx
  40f04e:	outs   dx,DWORD PTR ds:[esi]
  40f04f:	cdq    
  40f050:	or     BYTE PTR [edx+0x41],al
  40f053:	into   
  40f054:	call   0x164df607
  40f059:	dec    eax
  40f05a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f05b:	inc    DWORD PTR ds:0x3ab6c842
  40f061:	call   0x118b5017
  40f066:	mov    bl,0x9b
  40f068:	xchg   ebx,eax
  40f069:	adc    BYTE PTR [edx+eiz*1+0x45],ah
  40f06d:	add    al,0x2c
  40f06f:	(bad)  
  40f070:	(bad)  
  40f072:	in     al,dx
  40f073:	adc    DWORD PTR [ecx-0x7f],0xffffff84
  40f077:	fisttp DWORD PTR [ebp+edx*8+0x2754c19d]
  40f07e:	pop    ebx
  40f07f:	sti    
  40f080:	imul   edi,DWORD PTR [ebp-0x76f1afe7],0xffffffac
  40f087:	loopne 0x40f08c
  40f089:	mov    ds:0x7f413dde,al
  40f08e:	or     ch,BYTE PTR [ecx]
  40f090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f091:	and    DWORD PTR [eax-0x38],edi
  40f094:	mov    cl,0x31
  40f096:	mov    dh,0x84
  40f098:	jecxz  0x40f0af
  40f09a:	rep outs dx,BYTE PTR ds:[esi]
  40f09c:	jo     0x40f0bc
  40f09e:	hlt    
  40f09f:	push   ebx
  40f0a0:	daa    
  40f0a1:	loope  0x40f0ec
  40f0a3:	xor    ah,BYTE PTR [ecx-0x2c]
  40f0a6:	les    ebp,FWORD PTR [edi+0x2]
  40f0a9:	or     dl,bh
  40f0ab:	sub    al,0xa8
  40f0ad:	test   eax,0x6eeff470
  40f0b2:	ins    BYTE PTR es:[edi],dx
  40f0b3:	and    DWORD PTR [edx+0x4215801c],edx
  40f0b9:	jmp    0x40f0f2
  40f0bb:	loop   0x40f0c8
  40f0bd:	pushf  
  40f0be:	cmp    al,0x2a
  40f0c0:	fcomp  st(0)
  40f0c2:	cs push ecx
  40f0c4:	or     eax,0x54ff77a8
  40f0c9:	aaa    
  40f0ca:	shr    DWORD PTR [edx],0x35
  40f0cd:	aam    0x39
  40f0cf:	(bad)  
  40f0d1:	and    ebp,0x2b93c6ac
  40f0d7:	add    bl,bl
  40f0d9:	mov    ds:0x983d67a0,al
  40f0de:	rcr    BYTE PTR [ebp-0x28],0x89
  40f0e2:	mov    esi,DWORD PTR [edi+0x2b]
  40f0e5:	cmp    DWORD PTR [ecx+esi*1],edi
  40f0e8:	mov    ecx,0xc9d0b1c5
  40f0ed:	pop    esp
  40f0ee:	mov    WORD PTR [esi+0x38],?
  40f0f1:	inc    esi
  40f0f2:	cmp    eax,0xe1bef352
  40f0f7:	push   edi
  40f0f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0f9:	outs   dx,BYTE PTR ds:[esi]
  40f0fa:	jg     0x40f126
  40f0fc:	ror    BYTE PTR [eax+0x49],0xed
  40f100:	sub    al,0xc8
  40f102:	sub    al,0x21
  40f104:	lock mov ecx,0x1eecbbdf
  40f10a:	das    
  40f10b:	xchg   esp,eax
  40f10c:	or     BYTE PTR [esi+0x6c7c6936],0xa4
  40f113:	scas   al,BYTE PTR es:[edi]
  40f114:	xchg   DWORD PTR [edi],ecx
  40f116:	jg     0x40f0e3
  40f118:	pop    ebx
  40f119:	lods   eax,DWORD PTR ds:[esi]
  40f11a:	push   esp
  40f11b:	pusha  
  40f11c:	js     0x40f186
  40f11e:	out    dx,eax
  40f11f:	ss dec esp
  40f121:	lds    esp,FWORD PTR [esi+0x17]
  40f124:	lods   al,BYTE PTR ds:[esi]
  40f125:	test   esi,edi
  40f127:	mov    eax,0x2a6d331b
  40f12c:	mov    DWORD PTR [edi],0xc132d6bf
  40f132:	(bad)  
  40f133:	or     al,0x73
  40f135:	cmp    BYTE PTR [edi],dl
  40f137:	dec    ebx
  40f138:	(bad)  
  40f139:	and    ch,BYTE PTR [ebx-0x3ec8f223]
  40f13f:	pusha  
  40f140:	mov    ah,0xb6
  40f142:	xchg   ebp,eax
  40f143:	add    ebp,DWORD PTR [ebx+0x54]
  40f146:	inc    eax
  40f147:	fisttp WORD PTR [eax+edx*8]
  40f14a:	mov    ecx,ebx
  40f14c:	and    eax,0xf8b031b
  40f151:	arpl   dx,bp
  40f153:	mov    dl,0xd5
  40f155:	push   ss
  40f156:	xchg   esi,eax
  40f157:	clc    
  40f158:	cmp    bh,BYTE PTR ds:0xc5aa6db1
  40f15e:	or     al,0x60
  40f160:	jae    0x40f1a5
  40f162:	scas   al,BYTE PTR es:[edi]
  40f163:	push   ebp
  40f164:	xor    DWORD PTR [eax-0x3],edi
  40f167:	data16 or al,0x5c
  40f16a:	xor    cl,cl
  40f16c:	inc    ebp
  40f16d:	rcl    BYTE PTR [eax-0x5f998d7],0x14
  40f174:	hlt    
  40f175:	aas    
  40f176:	mov    edi,0xdf09c088
  40f17b:	jmp    0x8104a396
  40f180:	scas   eax,DWORD PTR es:[edi]
  40f181:	aam    0x5a
  40f183:	(bad)  
  40f184:	dec    edi
  40f185:	sbb    eax,0x3c67f9f4
  40f18a:	in     al,0x9e
  40f18c:	nop
  40f18d:	fild   QWORD PTR [esi+0x3a94995a]
  40f193:	push   ebx
  40f194:	jmp    0x2525:0xd149ac93
  40f19b:	mov    eax,0xb6030bad
  40f1a0:	scas   al,BYTE PTR es:[edi]
  40f1a1:	loop   0x40f1a3
  40f1a3:	shl    ebp,1
  40f1a5:	push   edx
  40f1a6:	dec    ecx
  40f1a7:	inc    edi
  40f1a8:	adc    al,0xd9
  40f1aa:	out    0x2a,eax
  40f1ac:	jne    0x40f13f
  40f1ae:	add    eax,0x20029e3c
  40f1b3:	adc    ch,ah
  40f1b5:	inc    esi
  40f1b6:	cmp    bl,BYTE PTR [ebp+0x6cddd875]
  40f1bc:	mov    dl,0xda
  40f1be:	inc    ebx
  40f1bf:	test   eax,0x3a1196af
  40f1c4:	retf   
  40f1c5:	add    DWORD PTR [ebx],ecx
  40f1c7:	jae    0x40f15c
  40f1c9:	in     al,0xe5
  40f1cb:	add    al,0x4c
  40f1cd:	bnd jnp 0x40f200
  40f1d0:	cmp    bh,BYTE PTR [ecx-0x2d]
  40f1d3:	push   ss
  40f1d4:	push   ebx
  40f1d5:	jmp    0x63789eaa
  40f1da:	cmp    cl,BYTE PTR [ebx]
  40f1dc:	shr    esi,cl
  40f1de:	shl    ebx,cl
  40f1e0:	cmp    ebx,0x168f0edc
  40f1e6:	jno    0x40f1fb
  40f1e8:	js     0x40f254
  40f1ea:	adc    al,0xfd
  40f1ec:	std    
  40f1ed:	pop    eax
  40f1ee:	fs ret 0xb73
  40f1f2:	lods   al,BYTE PTR ds:[esi]
  40f1f3:	call   0xa96b:0xc3eccfc1
  40f1fa:	imul   ebp,esp,0x36360b4e
  40f200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f201:	xchg   edx,eax
  40f202:	imul   ebx,DWORD PTR [esi+0x76],0x1e480b23
  40f209:	in     eax,0xa9
  40f20b:	outs   dx,BYTE PTR ds:[esi]
  40f20c:	lods   al,BYTE PTR ds:[esi]
  40f20d:	mov    db2,esp
  40f210:	imul   esi,DWORD PTR [ebx-0x4fda55ea],0xffffffd3
  40f217:	mov    al,0x73
  40f219:	rcl    BYTE PTR [ebp-0x12],1
  40f21c:	jno    0x40f1a5
  40f21e:	outs   dx,DWORD PTR ds:[esi]
  40f21f:	sub    al,0x7f
  40f221:	jmp    DWORD PTR ds:0x6de2e6ad
  40f227:	jecxz  0x40f20a
  40f229:	mov    edi,es
  40f22b:	adc    DWORD PTR [eax],0x86fb8bc5
  40f231:	in     al,dx
  40f232:	stos   BYTE PTR es:[edi],al
  40f233:	dec    esp
  40f234:	mov    ebp,0x14110f7e
  40f239:	cli    
  40f23a:	ins    DWORD PTR es:[edi],dx
  40f23b:	nop
  40f23c:	push   0x9d978245
  40f241:	sub    DWORD PTR [ebx-0x4c783623],esp
  40f247:	pushf  
  40f248:	xchg   edi,eax
  40f249:	inc    ebp
  40f24a:	pop    edi
  40f24b:	into   
  40f24c:	loope  0x40f2c5
  40f24e:	cmp    BYTE PTR ds:0xfb832d61,al
  40f254:	xchg   ebx,eax
  40f255:	stos   BYTE PTR es:[edi],al
  40f256:	mov    eax,ds:0x7ce4929f
  40f25b:	push   ebp
  40f25c:	ja     0x40f212
  40f25e:	inc    ecx
  40f25f:	adc    bl,cl
  40f261:	lds    esp,FWORD PTR [ebp-0x14]
  40f264:	mov    esp,0x456dc81b
  40f269:	outs   dx,BYTE PTR ds:[esi]
  40f26a:	adc    eax,DWORD PTR [ebp+0x4298a5e3]
  40f270:	cmp    al,0x34
  40f272:	adc    DWORD PTR [ebx],esp
  40f274:	mov    eax,0x8f957d66
  40f279:	and    DWORD PTR [ebp+0x6b2efd78],ebp
  40f27f:	mov    ebx,0x9e84611c
  40f284:	(bad)  
  40f285:	lds    edx,FWORD PTR [edx]
  40f287:	mov    ds:0xf5161fdb,al
  40f28c:	(bad)  
  40f28d:	shl    BYTE PTR [eax+ecx*1],cl
  40f290:	data16 scas al,BYTE PTR es:[edi]
  40f292:	aas    
  40f293:	push   0x64
  40f295:	(bad)  
  40f296:	lea    ebx,[eax+0x5b]
  40f299:	leave  
  40f29a:	xchg   esp,eax
  40f29b:	ds inc ebx
  40f29d:	and    bl,BYTE PTR [edx+esi*2-0x2b3f5f75]
  40f2a4:	(bad)  
  40f2a6:	pusha  
  40f2a7:	jnp    0x40f2f8
  40f2a9:	(bad)
  40f2ad:	add    BYTE PTR [esi+0x39],0x2
  40f2b1:	or     eax,0x5ff12de0
  40f2b6:	or     al,0x2d
  40f2b8:	push   ebp
  40f2b9:	and    edx,DWORD PTR ds:0xf59140d9
  40f2bf:	(bad)  [edi]
  40f2c1:	shl    BYTE PTR [ebx-0x75],1
  40f2c4:	add    cl,BYTE PTR [ebx]
  40f2c6:	test   al,0xfc
  40f2c8:	lock jl 0x40f24b
  40f2cb:	imul   esi,DWORD PTR [edi+0x3bf2c3e2],0x30
  40f2d2:	inc    ecx
  40f2d3:	inc    ebx
  40f2d4:	cmp    al,0x20
  40f2d6:	and    eax,0x2e461399
  40f2db:	outs   dx,BYTE PTR ds:[esi]
  40f2dc:	fild   WORD PTR [edx+eiz*4]
  40f2df:	push   esi
  40f2e0:	or     eax,0x79224a69
  40f2e5:	xlat   BYTE PTR ds:[ebx]
  40f2e6:	mov    dh,0xe4
  40f2e8:	aaa    
  40f2e9:	ret    0xfd1f
  40f2ec:	lahf   
  40f2ed:	stos   BYTE PTR es:[edi],al
  40f2ee:	aas    
  40f2ef:	pop    eax
  40f2f0:	daa    
  40f2f1:	mov    esi,0xb62d70a6
  40f2f6:	sbb    bh,BYTE PTR [ebp-0x3e9703db]
  40f2fc:	or     al,0xe4
  40f2fe:	dec    esp
  40f2ff:	xchg   esi,eax
  40f300:	or     eax,0x36be967b
  40f305:	into   
  40f306:	mov    WORD PTR [eax],gs
  40f308:	aaa    
  40f309:	xchg   ebx,eax
  40f30a:	sub    eax,0x2f79118a
  40f30f:	cmp    al,0x70
  40f311:	dec    esp
  40f312:	inc    esi
  40f313:	mov    edi,0x36ceae4c
  40f318:	stos   DWORD PTR es:[edi],eax
  40f319:	mov    dh,BYTE PTR [edx-0x6]
  40f31c:	div    DWORD PTR [eax-0x4a6bf440]
  40f322:	sub    ecx,DWORD PTR [ebx+0x1dd172cb]
  40f328:	inc    edi
  40f329:	jl     0x40f393
  40f32b:	xor    al,0xce
  40f32d:	mov    ebp,DWORD PTR [ebx]
  40f32f:	jno    0x40f30e
  40f331:	mov    ch,dh
  40f333:	aas    
  40f334:	mov    ah,BYTE PTR [eax+0x68]
  40f337:	(bad)  [ebp+0x78]
  40f33a:	mov    dh,0x81
  40f33c:	sbb    bl,BYTE PTR [eax+eiz*8+0xc]
  40f340:	jecxz  0x40f382
  40f342:	pusha  
  40f343:	ja     0x40f2e5
  40f345:	inc    ecx
  40f346:	sub    esp,0x4c
  40f349:	mov    eax,ds:0xaa23a83c
  40f34e:	test   eax,0x677f662a
  40f353:	hlt    
  40f354:	fst    DWORD PTR [ecx-0x49]
  40f357:	popa   
  40f358:	add    edx,edi
  40f35a:	xor    ecx,DWORD PTR [esi+edi*1]
  40f35d:	add    eax,0xb424204f
  40f362:	pop    edx
  40f363:	sbb    al,0x64
  40f365:	lds    eax,FWORD PTR [edi+0x1e1e688c]
  40f36b:	retf   0x5de
  40f36e:	sbb    BYTE PTR ds:0x7c05a6c2,bh
  40f374:	imul   edx,DWORD PTR [esi],0x19
  40f377:	or     esp,DWORD PTR [ebx]
  40f379:	or     eax,0x32828089
  40f37e:	sub    ebp,edx
  40f380:	ins    DWORD PTR es:[edi],dx
  40f381:	fdivrp st(2),st
  40f383:	push   0xffffffcb
  40f385:	ret    0xa300
  40f388:	shl    dl,1
  40f38a:	jp     0x40f32b
  40f38c:	cs loope 0x40f39a
  40f38f:	fs push ebx
  40f391:	(bad)  
  40f392:	(bad)  
  40f393:	pop    ecx
  40f394:	add    BYTE PTR [eax+0x306b58c8],al
  40f39a:	loop   0x40f3d0
  40f39c:	repz and eax,0xa891ddff
  40f3a2:	mov    BYTE PTR [ebx],dl
  40f3a4:	mov    eax,ds:0x800ab5a9
  40f3a9:	adc    DWORD PTR [edi],0xa99556de
  40f3af:	pop    ebp
  40f3b0:	(bad)  
  40f3b1:	fst    DWORD PTR [ecx]
  40f3b3:	inc    edx
  40f3b4:	sti    
  40f3b5:	scas   al,BYTE PTR es:[edi]
  40f3b6:	imul   esp,edi,0xffffffcb
  40f3b9:	mul    esp
  40f3bb:	pop    es
  40f3bc:	xchg   esp,eax
  40f3bd:	pop    ebp
  40f3be:	xor    DWORD PTR [edi+ebx*2+0x3ae2ccd0],0xfffffffe
  40f3c6:	fcomp  QWORD PTR [ecx-0x1]
  40f3c9:	pushf  
  40f3ca:	mov    ecx,0xfa13adbe
  40f3cf:	push   ebx
  40f3d0:	stos   DWORD PTR es:[edi],eax
  40f3d1:	out    dx,eax
  40f3d2:	nop
  40f3d3:	mov    esp,0xd74a1676
  40f3d8:	sbb    al,0x99
  40f3da:	iret   
  40f3db:	std    
  40f3dc:	data16 loope 0x40f38b
  40f3df:	retf   
  40f3e0:	test   al,0xba
  40f3e2:	dec    ecx
  40f3e3:	ret    
  40f3e4:	sti    
  40f3e5:	add    BYTE PTR [ebx+0x667fa848],bl
  40f3eb:	ds nop
  40f3ed:	fsubr  DWORD PTR [ebp-0x26]
  40f3f0:	jle    0x40f403
  40f3f2:	lods   al,BYTE PTR ds:[esi]
  40f3f3:	enter  0x158e,0x5a
  40f3f7:	test   cl,0x75
  40f3fa:	or     bh,0x77
  40f3fd:	mov    bh,dh
  40f3ff:	fdiv   st(6),st
  40f401:	lahf   
  40f402:	ja     0x40f42f
  40f404:	stos   BYTE PTR es:[edi],al
  40f405:	add    dh,cl
  40f407:	inc    ecx
  40f408:	cdq    
  40f409:	push   esp
  40f40a:	pop    eax
  40f40b:	inc    edx
  40f40c:	lock and al,0xdf
  40f40f:	addr16 std 
  40f411:	scas   eax,DWORD PTR es:[edi]
  40f412:	dec    edi
  40f413:	inc    ebx
  40f414:	sbb    DWORD PTR [edi+0x531ab25b],edi
  40f41a:	jns    0x40f408
  40f41c:	jge    0x40f40e
  40f41e:	sbb    BYTE PTR [ecx+0x26],ah
  40f421:	add    eax,0x4ea11475
  40f426:	fiadd  WORD PTR ds:0xb87d11a4
  40f42c:	or     DWORD PTR [esi+esi*4],ecx
  40f42f:	mov    edx,fs
  40f431:	aam    0xb6
  40f433:	jecxz  0x40f3d7
  40f435:	xchg   DWORD PTR [edi-0x1d],ebx
  40f438:	int3   
  40f439:	ins    DWORD PTR es:[edi],dx
  40f43a:	and    BYTE PTR [edi-0x25],al
  40f43d:	or     DWORD PTR [edx],edi
  40f43f:	adc    edx,esp
  40f441:	mov    al,ds:0x2224bcf2
  40f446:	into   
  40f447:	fwait
  40f448:	cmp    ch,BYTE PTR [esi]
  40f44a:	in     eax,0x64
  40f44c:	dec    esp
  40f44d:	sar    al,cl
  40f44f:	sbb    ebp,DWORD PTR [esi+edi*8+0x44a063a7]
  40f456:	push   0x66
  40f458:	jae    0x40f487
  40f45a:	fisubr DWORD PTR [eax]
  40f45c:	and    eax,edi
  40f45e:	or     eax,0x42e270de
  40f463:	inc    esp
  40f464:	push   edi
  40f465:	xor    DWORD PTR [esp+ecx*1],edx
  40f468:	icebp  
  40f469:	push   ds
  40f46a:	cwde   
  40f46b:	mov    cl,0xa1
  40f46d:	push   edi
  40f46e:	test   BYTE PTR [edx-0x45be6dae],bl
  40f474:	jle    0x40f491
  40f476:	adc    DWORD PTR [eax],edi
  40f478:	push   esi
  40f479:	push   eax
  40f47a:	jnp    0x40f4bd
  40f47c:	or     ebp,DWORD PTR [eax]
  40f47e:	mov    edi,0xe7e1c4cb
  40f483:	cmc    
  40f484:	and    ebp,DWORD PTR [ebx]
  40f486:	stos   DWORD PTR es:[edi],eax
  40f487:	sbb    al,0xd5
  40f489:	jae    0x40f466
  40f48b:	ret    
  40f48c:	jl     0x40f476
  40f48e:	push   cs
  40f48f:	mov    ebx,0xfa456aac
  40f494:	aas    
  40f495:	jae    0x40f50a
  40f497:	popa   
  40f498:	inc    ebp
  40f499:	fnstenv [eax]
  40f49b:	inc    ecx
  40f49c:	mov    esi,0x2e6470c0
  40f4a1:	jmp    0x40f486
  40f4a3:	mov    ah,0x9c
  40f4a5:	imul   esp,DWORD PTR ds:0x6dcf9b39,0xffffff8f
  40f4ac:	pop    esp
  40f4ad:	mov    bp,0xdec7
  40f4b1:	push   es
  40f4b2:	mov    bl,0xc5
  40f4b4:	fsub   QWORD PTR [edi*2+0x51be5f93]
  40f4bb:	popa   
  40f4bc:	hlt    
  40f4bd:	jb     0x40f4dd
  40f4bf:	sti    
  40f4c0:	stos   BYTE PTR es:[edi],al
  40f4c1:	popa   
  40f4c2:	sbb    al,dl
  40f4c4:	or     al,BYTE PTR [esi]
  40f4c6:	mov    eax,ds:0x707f947a
  40f4cb:	and    al,BYTE PTR [ebx-0x6e151676]
  40f4d1:	mov    al,ds:0x7cbbcfa4
  40f4d6:	or     BYTE PTR [ebx-0x6e],bh
  40f4d9:	sub    al,0xad
  40f4db:	scas   al,BYTE PTR es:[edi]
  40f4dc:	jmp    0xd06426e0
  40f4e1:	push   es
  40f4e2:	mul    al
  40f4e4:	adc    DWORD PTR [ebx+0xc],0xd49a446a
  40f4eb:	lods   al,BYTE PTR ds:[esi]
  40f4ec:	jmp    0xe39ba216
  40f4f1:	mov    al,0xb1
  40f4f3:	or     edi,DWORD PTR [edi-0xd453278]
  40f4f9:	or     eax,0xf4decbbc
  40f4fe:	cmp    al,0x34
  40f500:	inc    ecx
  40f501:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f502:	push   ss
  40f503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f504:	shr    DWORD PTR [ebx],0x45
  40f507:	jge    0x40f507
  40f509:	dec    esi
  40f50a:	and    bh,BYTE PTR [ecx+0x61]
  40f50d:	xor    cl,dl
  40f50f:	mov    BYTE PTR [ebp-0x2c],dl
  40f512:	loopne 0x40f545
  40f514:	ja     0x40f4e6
  40f516:	inc    edx
  40f517:	pushf  
  40f518:	mov    ch,0xd9
  40f51a:	xor    al,0x7d
  40f51c:	js     0x40f4d9
  40f51e:	inc    esi
  40f51f:	and    al,0xee
  40f521:	xchg   ebx,eax
  40f522:	and    DWORD PTR [edx+ebx*4],edx
  40f525:	mov    esp,0xeb67ffa3
  40f52a:	add    al,0x5e
  40f52c:	idiv   BYTE PTR [edi-0x4a]
  40f52f:	les    esi,FWORD PTR [ecx]
  40f531:	clc    
  40f532:	ja     0x40f566
  40f534:	stos   BYTE PTR es:[edi],al
  40f535:	sub    eax,ecx
  40f537:	sbb    al,0x96
  40f539:	stos   BYTE PTR es:[edi],al
  40f53a:	test   al,0x1a
  40f53c:	sahf   
  40f53d:	jno    0x40f5b9
  40f53f:	push   0x2f71423a
  40f544:	xchg   edi,eax
  40f545:	xchg   edx,eax
  40f546:	neg    cl
  40f548:	sbb    ebp,DWORD PTR [edx]
  40f54a:	pop    esi
  40f54b:	mov    bh,BYTE PTR [edx+0x68372674]
  40f551:	(bad)  
  40f552:	fild   QWORD PTR [ecx]
  40f554:	outs   dx,BYTE PTR ds:[esi]
  40f555:	ja     0x40f564
  40f557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f558:	(bad)  
  40f559:	mov    BYTE PTR [ecx],dh
  40f55b:	jecxz  0x40f571
  40f55d:	(bad)  
  40f55f:	and    al,0x79
  40f561:	iret   
  40f562:	mov    ds:0x2489fc0a,eax
  40f567:	and    ecx,DWORD PTR [edx+0x3355e1ea]
  40f56d:	loopne 0x40f536
  40f56f:	adc    ebx,esi
  40f571:	xchg   ecx,eax
  40f572:	sti    
  40f573:	jmp    0x45c3:0x6b764f00
  40f57a:	inc    esi
  40f57b:	inc    ebp
  40f57c:	pop    esi
  40f57d:	ret    0xe6bb
  40f580:	pop    ebp
  40f581:	scas   eax,DWORD PTR es:[edi]
  40f582:	inc    eax
  40f583:	outs   dx,DWORD PTR ds:[esi]
  40f584:	into   
  40f585:	push   esp
  40f586:	retf   0x5dcb
  40f589:	cmp    DWORD PTR [ebp-0x47fc46a7],edi
  40f58f:	call   0xc43adcdb
  40f594:	mov    BYTE PTR [eax],bh
  40f596:	cli    
  40f597:	adc    BYTE PTR [ebx-0x74],al
  40f59a:	mov    bh,0xf5
  40f59c:	mov    al,ds:0x29b30ce4
  40f5a1:	inc    esi
  40f5a2:	sti    
  40f5a3:	lock jae 0x40f55b
  40f5a6:	add    al,0x1a
  40f5a8:	lods   eax,DWORD PTR ds:[esi]
  40f5a9:	mov    ebp,0x5d843a07
  40f5ae:	shr    bl,0x55
  40f5b1:	lds    ebx,FWORD PTR [esi]
  40f5b3:	in     al,0x48
  40f5b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5b6:	lahf   
  40f5b7:	gs pop ss
  40f5b9:	xchg   ebp,eax
  40f5ba:	jb     0x40f5bf
  40f5bc:	outs   dx,BYTE PTR es:[esi]
  40f5be:	jmp    0x96b5:0xaa5ee705
  40f5c5:	ret    0xc316
  40f5c8:	clc    
  40f5c9:	fdivp  st(1),st
  40f5cb:	xchg   esi,eax
  40f5cc:	xchg   esp,eax
  40f5cd:	xchg   ecx,eax
  40f5ce:	sub    DWORD PTR [ebx+0x74074107],esi
  40f5d4:	xchg   edx,eax
  40f5d5:	(bad)  
  40f5d6:	adc    esi,DWORD PTR [eax+ebx*8-0x24]
  40f5da:	loop   0x40f5c3
  40f5dc:	jae    0x40f5d2
  40f5de:	inc    esp
  40f5df:	sahf   
  40f5e0:	mul    BYTE PTR [ebx+eiz*8]
  40f5e3:	aam    0x20
  40f5e5:	mov    edi,0x6fdf1f34
  40f5ea:	les    esp,FWORD PTR [ebx]
  40f5ec:	test   esi,esi
  40f5ee:	mov    bl,0xe
  40f5f0:	add    eax,0x7355b49c
  40f5f5:	ins    BYTE PTR es:[edi],dx
  40f5f6:	adc    eax,0xeb5d46b8
  40f5fb:	mov    BYTE PTR [esi-0x1f7dd432],ch
  40f601:	outs   dx,BYTE PTR ds:[esi]
  40f602:	jbe    0x40f5e1
  40f604:	mov    ah,0x61
  40f606:	jmp    0x40f5d3
  40f608:	std    
  40f609:	inc    eax
  40f60a:	lods   al,BYTE PTR ds:[esi]
  40f60b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f60c:	ret    0xc6f5
  40f60f:	cmp    cl,BYTE PTR [edx+ebx*2]
  40f612:	in     al,0xb3
  40f614:	in     eax,dx
  40f615:	push   0xc168ba7a
  40f61a:	outs   dx,BYTE PTR ds:[esi]
  40f61b:	(bad)  
  40f61c:	fidivr DWORD PTR [ecx-0xe]
  40f61f:	aas    
  40f620:	push   ebx
  40f621:	fdiv   QWORD PTR [ebp-0x607b3432]
  40f627:	sbb    dl,cl
  40f629:	call   0xa950267d
  40f62e:	adc    eax,0x4ea3f7cd
  40f633:	mov    edx,0x9156ee76
  40f638:	les    edx,FWORD PTR [edi+ecx*8]
  40f63b:	xlat   BYTE PTR ds:[ebx]
  40f63c:	sub    al,0xb2
  40f63e:	enter  0xe3a8,0xb9
  40f642:	cwde   
  40f643:	out    dx,al
  40f644:	jmp    0x148f:0xed5e26ea
  40f64b:	pop    edi
  40f64c:	clc    
  40f64d:	pop    esp
  40f64e:	push   edi
  40f64f:	jle    0x40f5ef
  40f651:	fwait
  40f652:	push   edx
  40f653:	fdiv   QWORD PTR [ebx-0x2c]
  40f656:	cmp    ecx,esp
  40f658:	into   
  40f659:	mov    dl,0xfa
  40f65b:	fcmove st,st(2)
  40f65d:	cmp    eax,0xd156ae83
  40f662:	les    esi,FWORD PTR [ebp+0x3c8fed42]
  40f668:	jno    0x40f629
  40f66a:	mov    ecx,0x62f6984d
  40f66f:	sbb    bh,BYTE PTR [edi+0x2875814c]
  40f675:	jge    0x40f640
  40f677:	jmp    0xeacda4e1
  40f67c:	lahf   
  40f67d:	loope  0x40f697
  40f67f:	xchg   edi,eax
  40f680:	aam    0x29
  40f682:	jle    0x40f625
  40f684:	in     eax,0x9b
  40f686:	pusha  
  40f687:	daa    
  40f688:	fs sar bh,0xc1
  40f68c:	mov    ebp,0x1b218e8a
  40f691:	cmp    BYTE PTR [ecx],cl
  40f693:	adc    al,0xd7
  40f695:	mov    eax,ds:0xef96aa80
  40f69a:	inc    eax
  40f69b:	jmp    0x35ca884
  40f6a0:	(bad)  
  40f6a1:	jmp    0x411b79
  40f6a6:	mov    eax,DWORD PTR [ebp-0x38]
  40f6a9:	add    eax,DWORD PTR [ebp+0x8]
  40f6ac:	mov    DWORD PTR [ebp-0x18],eax
  40f6af:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6b2:	test   eax,eax
  40f6b4:	je     0x411b02
  40f6ba:	mov    DWORD PTR [ebp-0x20],0x0
  40f6c1:	push   0x3
  40f6c3:	xor    edx,edx
  40f6c5:	pop    edx
  40f6c6:	add    edx,0x8
  40f6c9:	push   edx
  40f6ca:	pop    ecx
  40f6cb:	push   0x6
  40f6cd:	dec    ecx
  40f6ce:	pop    ebx
  40f6cf:	dec    ebx
  40f6d0:	xchg   ebx,ecx
  40f6d2:	sub    ebx,ecx
  40f6d4:	xchg   ebx,ecx
  40f6d6:	dec    ecx
  40f6d7:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6da:	imul   eax,ecx
  40f6dd:	sub    esp,eax
  40f6df:	mov    DWORD PTR [ebp-0x20],esp
  40f6e2:	mov    eax,DWORD PTR [ebp-0x4]
  40f6e5:	xor    eax,esi
  40f6e7:	add    eax,edi
  40f6e9:	jmp    0x411adb
  40f6ee:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6f1:	mov    eax,DWORD PTR [ebp+0x8]
  40f6f4:	mov    edx,DWORD PTR [ebp+0x14]
  40f6f7:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f6fb:	xor    ecx,esi
  40f6fd:	add    ecx,edi
  40f6ff:	xor    edx,edx
  40f701:	div    ecx
  40f703:	mov    ecx,DWORD PTR [ebp-0x4]
  40f706:	jmp    0x411aba
  40f70b:	outs   dx,BYTE PTR ds:[esi]
  40f70c:	lods   al,BYTE PTR ds:[esi]
  40f70d:	or     ch,al
  40f70f:	mov    cl,al
  40f711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f712:	or     ah,0x7d
  40f715:	push   0x96e8f0
  40f71a:	jb     0x40f71e
  40f71c:	scas   al,BYTE PTR es:[edi]
  40f71d:	add    DWORD PTR [ebx-0x7c7ca318],0xffffffe4
  40f724:	mov    al,ds:0xa936ee0d
  40f729:	xor    esp,ebx
  40f72b:	xor    DWORD PTR [edx+ecx*2+0x3d],0x27dcb4bd
  40f733:	dec    edi
  40f734:	push   ebp
  40f735:	call   esp
  40f737:	aam    0x82
  40f739:	pop    edi
  40f73a:	adc    al,0x29
  40f73c:	aas    
  40f73d:	test   BYTE PTR [ebx],bl
  40f73f:	inc    edx
  40f740:	test   edx,edi
  40f742:	cmp    cl,BYTE PTR [edi-0x1f]
  40f745:	mov    al,0x93
  40f747:	div    DWORD PTR [esi]
  40f749:	or     BYTE PTR [ecx+ebp*1+0xd51aa46],cl
  40f750:	loop   0x40f75a
  40f752:	xchg   ebx,eax
  40f753:	and    DWORD PTR [ecx-0x55],eax
  40f756:	xor    esp,DWORD PTR [esi+esi*1+0x27d96038]
  40f75d:	sbb    eax,0x69454aea
  40f762:	ins    DWORD PTR es:[edi],dx
  40f763:	sub    eax,0xea701029
  40f768:	sub    al,0xe1
  40f76a:	jmp    DWORD PTR [ebx]
  40f76c:	pop    ds
  40f76d:	sub    esp,DWORD PTR [esi]
  40f76f:	test   DWORD PTR [edx+esi*1+0x64],edi
  40f773:	sbb    eax,DWORD PTR ss:[edx+0x4a]
  40f777:	adc    eax,0xd7e1aa6f
  40f77c:	jp     0x40f758
  40f77e:	test   al,bl
  40f780:	push   ebp
  40f781:	shr    BYTE PTR [ebx],0xb0
  40f784:	mov    bl,0x4d
  40f786:	(bad)
  40f789:	sub    al,0x82
  40f78b:	retf   0xd30c
  40f78e:	push   ds
  40f78f:	lahf   
  40f790:	pop    es
  40f791:	ss out 0xb2,eax
  40f794:	or     BYTE PTR [edx],ch
  40f796:	mov    esi,0x9543fd5f
  40f79b:	test   eax,0x62ffa674
  40f7a0:	aad    0xca
  40f7a2:	sahf   
  40f7a3:	jle    0x40f7b6
  40f7a5:	and    dh,0x39
  40f7a8:	bound  edx,QWORD PTR [eax]
  40f7aa:	or     DWORD PTR [ecx+ebx*1],esi
  40f7ad:	push   edi
  40f7ae:	push   esi
  40f7af:	mov    ebx,edx
  40f7b1:	sbb    DWORD PTR [ecx-0x13d06c6e],ebx
  40f7b7:	arpl   WORD PTR [ebp+0x55],dx
  40f7ba:	retf   
  40f7bb:	inc    ecx
  40f7bc:	mov    bl,0xb0
  40f7be:	(bad)  
  40f7bf:	xor    DWORD PTR [edx],edx
  40f7c1:	mov    ss,WORD PTR [esi]
  40f7c3:	push   ebp
  40f7c4:	aam    0x9
  40f7c6:	fs call 0xe4b1eaed
  40f7cc:	xor    al,0x3f
  40f7ce:	xchg   DWORD PTR [esi+0x1e],ecx
  40f7d1:	arpl   WORD PTR [ebp+0x50],sp
  40f7d4:	jle    0x40f81d
  40f7d6:	cmp    eax,0xbe85a2f5
  40f7db:	dec    ebp
  40f7dc:	jp     0x40f84e
  40f7de:	xlat   BYTE PTR ds:[ebx]
  40f7df:	sbb    bl,BYTE PTR [ebx+0x14]
  40f7e2:	jae    0x40f7df
  40f7e4:	and    ah,cl
  40f7e6:	shl    esp,cl
  40f7e8:	xor    ch,BYTE PTR [ebx+ebp*1+0x54]
  40f7ec:	(bad)  
  40f7ed:	and    edi,DWORD PTR [ebx-0x52]
  40f7f0:	jns    0x40f7c6
  40f7f2:	jno    0x40f7a8
  40f7f4:	je     0x40f805
  40f7f6:	add    BYTE PTR [esi-0x71],al
  40f7f9:	mov    al,0x41
  40f7fb:	adc    esp,esi
  40f7fd:	je     0x40f796
  40f7ff:	ss mov bl,0xff
  40f802:	es dec ecx
  40f804:	std    
  40f805:	xlat   BYTE PTR ds:[ebx]
  40f806:	dec    ecx
  40f807:	sub    DWORD PTR [esi+0x465b103e],ecx
  40f80d:	neg    esp
  40f80f:	pop    ebp
  40f810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f811:	enter  0x276f,0xb0
  40f815:	into   
  40f816:	push   ecx
  40f817:	jmp    0x683a71d4
  40f81c:	loopne 0x40f87d
  40f81e:	pop    edi
  40f81f:	mov    ebx,0x5b9d8082
  40f824:	xchg   ebx,eax
  40f825:	dec    edx
  40f827:	fst    QWORD PTR [ebp-0x3d313d3c]
  40f82d:	into   
  40f82e:	dec    edi
  40f82f:	mov    esp,0x3c9e8f3
  40f834:	dec    ebx
  40f835:	mov    ah,BYTE PTR [ebx+0x9]
  40f838:	xchg   edi,eax
  40f839:	mov    eax,ds:0x2333a8d3
  40f83e:	push   ebx
  40f83f:	and    cl,dh
  40f841:	sbb    bl,dh
  40f843:	stc    
  40f844:	mov    ebx,0x28607eba
  40f849:	sub    eax,0x957b2fc9
  40f84e:	rcl    BYTE PTR [edi-0x75],1
  40f851:	push   edx
  40f852:	adc    eax,0x4abfe2de
  40f857:	add    BYTE PTR [eax-0x1d],cl
  40f85a:	mov    al,ds:0x7de48413
  40f85f:	or     al,0x28
  40f861:	int    0x7d
  40f863:	pop    es
  40f864:	adc    eax,0x8a22ef49
  40f869:	test   BYTE PTR [edx],0x2d
  40f86c:	mov    ch,dh
  40f86e:	xor    al,0xb
  40f870:	mov    ds,esp
  40f872:	std    
  40f873:	out    dx,eax
  40f874:	loopne 0x40f806
  40f876:	rol    DWORD PTR [edx-0xf],0x18
  40f87a:	mov    ch,0x86
  40f87c:	add    eax,0x65bbaca1
  40f881:	and    esi,ebp
  40f883:	adc    dl,dl
  40f885:	das    
  40f886:	(bad)  
  40f887:	and    al,0xf7
  40f889:	dec    ecx
  40f88a:	imul   esi,DWORD PTR [ebx+edx*2],0xefe9fb66
  40f891:	aas    
  40f892:	sbb    cl,cl
  40f894:	stc    
  40f895:	imul   DWORD PTR [esi+0x70]
  40f898:	pop    ecx
  40f899:	mov    edx,0xd00ac529
  40f89e:	lds    esp,FWORD PTR [ebp+0x5d]
  40f8a1:	dec    di
  40f8a3:	(bad)  
  40f8a5:	call   0xd0237e13
  40f8aa:	adc    DWORD PTR [edx],esp
  40f8ac:	ja     0x40f8ef
  40f8ae:	test   al,0xbf
  40f8b0:	cld    
  40f8b1:	push   esi
  40f8b2:	cld    
  40f8b3:	mov    ss,WORD PTR [esi-0x41]
  40f8b6:	retf   0x288f
  40f8b9:	push   esp
  40f8ba:	fiadd  DWORD PTR [edx]
  40f8bc:	hlt    
  40f8bd:	mov    ds:0xb954af67,al
  40f8c2:	jmp    0xc64354c7
  40f8c7:	pop    esp
  40f8c8:	sbb    DWORD PTR [ebx],0x6c0ac34a
  40f8ce:	and    BYTE PTR [edx],al
  40f8d0:	jl     0x40f8ce
  40f8d2:	(bad)  
  40f8d3:	call   0x2f886dc3
  40f8d8:	sti    
  40f8d9:	fimul  DWORD PTR [ebp-0x78]
  40f8dc:	loope  0x40f905
  40f8de:	pop    edx
  40f8df:	push   ds
  40f8e0:	and    al,0x0
  40f8e2:	push   esp
  40f8e3:	xchg   ebx,eax
  40f8e4:	push   ecx
  40f8e5:	test   BYTE PTR [esi],0x69
  40f8e8:	jbe    0x40f8b1
  40f8ea:	xchg   edx,eax
  40f8eb:	scas   al,BYTE PTR es:[edi]
  40f8ec:	ss popa 
  40f8ee:	jge    0x40f8de
  40f8f0:	pop    ebp
  40f8f1:	int    0x21
  40f8f3:	xchg   esp,eax
  40f8f4:	jae    0x40f8d6
  40f8f6:	mov    esp,0x431871bc
  40f8fb:	sub    DWORD PTR [esi+0x40e6b6f6],esp
  40f901:	in     eax,dx
  40f902:	test   BYTE PTR [esi],cl
  40f904:	mov    al,0xc1
  40f906:	xchg   ecx,eax
  40f907:	daa    
  40f908:	pushf  
  40f909:	inc    esi
  40f90a:	pop    ss
  40f90b:	mov    ds:0xcb1856ac,al
  40f910:	daa    
  40f911:	ins    BYTE PTR es:[edi],dx
  40f912:	nop
  40f913:	and    eax,0x985566b9
  40f918:	ss sub bl,0xf3
  40f91c:	mov    edi,0x700463eb
  40f921:	int    0x2d
  40f923:	loop   0x40f992
  40f925:	sbb    ebp,DWORD PTR [ebp-0x4a524c38]
  40f92b:	data16 (bad) 
  40f92e:	mov    BYTE PTR [esi-0x23348b14],dl
  40f934:	dec    DWORD PTR [edx+0x3cfb884d]
  40f93a:	push   sp
  40f93c:	sahf   
  40f93d:	sbb    eax,0x7b4ae6a8
  40f942:	xchg   ebp,eax
  40f943:	and    eax,0xbfba3a13
  40f948:	and    eax,0x927936cc
  40f94d:	or     eax,0x665e3529
  40f952:	push   eax
  40f953:	xor    eax,0x2489a545
  40f958:	add    al,0x12
  40f95a:	(bad)
  40f95d:	in     al,dx
  40f95e:	pop    ebx
  40f95f:	mov    dh,0xc3
  40f961:	xchg   ecx,eax
  40f962:	push   edx
  40f963:	cld    
  40f964:	ss cwde 
  40f966:	sbb    BYTE PTR [eax+edi*2-0x8cafa3c],cl
  40f96d:	mov    dh,0x5b
  40f96f:	jne    0x40f938
  40f971:	shr    BYTE PTR [ebx+ebx*2],0x84
  40f975:	sub    bl,cl
  40f977:	sbb    bh,BYTE PTR [ebx+0x417aacb5]
  40f97d:	sub    BYTE PTR [ebx-0xb],0x9
  40f981:	xchg   ecx,eax
  40f982:	mov    bl,0xa3
  40f984:	fnsave [ecx]
  40f986:	mov    ecx,0xa93c96c8
  40f98b:	mov    edx,0x6dd545d1
  40f990:	and    DWORD PTR [edi-0x16],esp
  40f993:	in     al,0x76
  40f995:	retf   0xae7d
  40f998:	inc    edi
  40f999:	mov    bl,0xdc
  40f99b:	call   0xe06a3cc3
  40f9a0:	ja     0x40f9b1
  40f9a2:	mov    eax,ds:0x3acb3ac1
  40f9a7:	arpl   WORD PTR [edx],di
  40f9a9:	inc    esi
  40f9aa:	or     cl,bh
  40f9ac:	js     0x40f960
  40f9ae:	xchg   ecx,eax
  40f9af:	adc    cl,0x9e
  40f9b2:	ja     0x40f9b2
  40f9b4:	std    
  40f9b5:	mov    BYTE PTR [esi+0x240ddc98],cl
  40f9bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9bc:	xor    eax,0xf7bc1868
  40f9c1:	int3   
  40f9c2:	push   es
  40f9c3:	loope  0x40f98b
  40f9c5:	icebp  
  40f9c6:	inc    eax
  40f9c7:	push   esi
  40f9c8:	(bad)  
  40f9c9:	imul   esp,DWORD PTR [ebp+0x3850647],0x696b03f5
  40f9d3:	aas    
  40f9d4:	adc    al,0xf0
  40f9d6:	pop    ss
  40f9d7:	fadd   st(6),st
  40f9d9:	push   ebp
  40f9da:	shr    BYTE PTR [eax-0x7b],cl
  40f9dd:	ja     0x40f99f
  40f9df:	xor    DWORD PTR [ebx+0x712a77b4],0xffffffd6
  40f9e6:	inc    ebp
  40f9e7:	adc    al,0x97
  40f9e9:	scas   eax,DWORD PTR es:[edi]
  40f9ea:	mov    al,BYTE PTR [ebx+eiz*8+0x47]
  40f9ee:	gs xchg ebp,eax
  40f9f0:	push   esi
  40f9f1:	popf   
  40f9f2:	inc    edi
  40f9f3:	lods   eax,DWORD PTR ds:[esi]
  40f9f4:	mov    al,0x1b
  40f9f6:	mov    edi,DWORD PTR [edi-0x2]
  40f9f9:	xor    eax,esp
  40f9fb:	adc    eax,0x4971c0b2
  40fa00:	adc    al,0x73
  40fa02:	and    DWORD PTR [edi],0x7f
  40fa05:	(bad)  
  40fa07:	cmp    esi,DWORD PTR [ecx+0x128d9a91]
  40fa0d:	jmp    0x40fa11
  40fa0f:	jp     0x40f9da
  40fa11:	call   0xef19:0x72ef3bfb
  40fa18:	and    DWORD PTR [esi+0x1da63cb3],ecx
  40fa1e:	fsub   QWORD PTR [esi+edx*2]
  40fa21:	(bad)  
  40fa22:	jmp    FWORD PTR [esi+0x7900cdf7]
  40fa28:	(bad)  
  40fa29:	xor    BYTE PTR [eax],dh
  40fa2b:	dec    eax
  40fa2c:	in     eax,0x86
  40fa2e:	sbb    ebp,0x14
  40fa31:	ret    0xc3fa
  40fa34:	rol    bh,0xc
  40fa37:	jl     0x40fa18
  40fa39:	lods   al,BYTE PTR ds:[esi]
  40fa3a:	out    0x9b,eax
  40fa3c:	js     0x40f9ed
  40fa3e:	or     eax,0x6b13999f
  40fa43:	jb     0x40f9c6
  40fa45:	call   DWORD PTR [ecx+0x7f]
  40fa48:	imul   eax,DWORD PTR [edi],0xffffff8f
  40fa4b:	cmp    DWORD PTR [ecx+0x2dfd9028],edx
  40fa51:	ins    DWORD PTR es:[edi],dx
  40fa52:	add    cl,BYTE PTR [ebx-0x2077bd28]
  40fa58:	mov    WORD PTR [esi-0x5bf3777e],ss
  40fa5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa5f:	loope  0x40f9f0
  40fa61:	mov    al,0x13
  40fa63:	shrd   esp,edi,0x82
  40fa67:	add    BYTE PTR [ebx],dh
  40fa69:	cmp    edi,ecx
  40fa6b:	(bad)  
  40fa6c:	into   
  40fa6d:	push   ebp
  40fa6e:	jle    0x40fa00
  40fa70:	das    
  40fa71:	push   0x8872f353
  40fa76:	scas   eax,DWORD PTR es:[edi]
  40fa77:	jp     0x40faf4
  40fa79:	fsubr  QWORD PTR [esi+0x79]
  40fa7c:	rsm    
  40fa7e:	dec    edi
  40fa7f:	imul   esp,DWORD PTR [edx],0x94ab8a6a
  40fa85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa86:	sub    edx,DWORD PTR [edi+0x493d52d3]
  40fa8c:	test   DWORD PTR [esi-0x7b],eax
  40fa8f:	stos   DWORD PTR es:[edi],eax
  40fa90:	adc    esi,DWORD PTR [ebx*4-0x33cbe9a8]
  40fa97:	mov    WORD PTR [eax],gs
  40fa99:	jecxz  0x40fa89
  40fa9b:	ret    0x77c8
  40fa9e:	jle    0x40fa25
  40faa0:	cmp    ebp,esp
  40faa2:	ins    BYTE PTR es:[edi],dx
  40faa3:	add    eax,0x4f4b8fb8
  40faa8:	push   ecx
  40faa9:	mov    ecx,0x9b43836
  40faae:	je     0x40fb02
  40fab0:	in     al,0x2e
  40fab2:	sub    eax,0x601973d8
  40fab7:	jecxz  0x40fb0c
  40fab9:	shl    BYTE PTR [ebx+0x5],0xc2
  40fabd:	(bad)
  40fac1:	push   ss
  40fac2:	jg     0x40fb1d
  40fac4:	sbb    al,0xd1
  40fac6:	add    bl,ch
  40fac8:	dec    ebp
  40fac9:	mov    esi,0x660e0088
  40face:	sbb    eax,0x9c4024fa
  40fad3:	and    BYTE PTR [esi+0x2c],0x18
  40fad7:	imul   ecx,DWORD PTR [edi-0x5e],0x29
  40fadb:	setge  BYTE PTR [edx+0x6b431613]
  40fae2:	pop    edi
  40fae3:	push   eax
  40fae4:	push   ss
  40fae5:	inc    ebp
  40fae6:	aad    0x2d
  40fae8:	inc    esp
  40fae9:	pushf  
  40faea:	punpckhbw mm2,QWORD PTR [ebx+ebp*4+0xce4d2d3]
  40faf2:	loop   0x40fa8b
  40faf4:	jb     0x40fb74
  40faf6:	dec    edx
  40faf7:	out    dx,eax
  40faf8:	jae    0x40face
  40fafa:	and    dl,BYTE PTR [ebp+0x734af553]
  40fb00:	pop    ds
  40fb01:	bound  edx,QWORD PTR [ecx+0x1b]
  40fb04:	jmp    0xf1a1d968
  40fb09:	popa   
  40fb0a:	pop    edx
  40fb0b:	mov    esp,DWORD PTR [eax-0x7491704e]
  40fb11:	aam    0x95
  40fb13:	sbb    DWORD PTR [ebx-0x2241a333],ecx
  40fb19:	pop    edi
  40fb1a:	test   DWORD PTR [ebp-0x7d6552b7],esp
  40fb20:	leave  
  40fb21:	add    al,BYTE PTR [eax-0x6312551b]
  40fb27:	shr    DWORD PTR [ecx],cl
  40fb29:	dec    ebx
  40fb2a:	nop
  40fb2b:	pop    ebp
  40fb2c:	js     0x40fb3d
  40fb2e:	pop    edx
  40fb2f:	out    dx,al
  40fb30:	dec    ecx
  40fb31:	inc    ebp
  40fb32:	cmp    eax,0xe2dfba05
  40fb37:	lods   eax,DWORD PTR ds:[esi]
  40fb38:	jecxz  0x40fb2b
  40fb3a:	xchg   BYTE PTR [eax+0x4128d90c],ah
  40fb40:	fdivr  DWORD PTR [ecx+0x3aae0ecc]
  40fb46:	mov    dl,0xee
  40fb48:	jae    0x40fb1a
  40fb4a:	repz mov cl,0x55
  40fb4d:	test   al,0x51
  40fb4f:	js     0x40fb64
  40fb51:	pusha  
  40fb52:	inc    eax
  40fb53:	ror    DWORD PTR [edx],1
  40fb55:	xchg   ebp,eax
  40fb56:	mov    ds:0x90eaa0dc,al
  40fb5b:	sub    eax,0xea21255c
  40fb60:	jmp    0xc5c7:0x84553a7c
  40fb67:	push   ebp
  40fb68:	repnz shl BYTE PTR [ebx+0x64dcae23],1
  40fb6f:	scas   eax,DWORD PTR es:[edi]
  40fb70:	test   DWORD PTR [ebp+0x5d],0xeec8b151
  40fb77:	mov    al,0xa
  40fb79:	jno    0x40fbc9
  40fb7b:	test   eax,0x237b8728
  40fb80:	push   es
  40fb81:	jecxz  0x40fb2a
  40fb83:	mov    gs,WORD PTR [esi]
  40fb85:	xchg   ebp,eax
  40fb86:	xchg   BYTE PTR [eax+ebx*4],bl
  40fb89:	and    ecx,DWORD PTR [edi]
  40fb8b:	aad    0x11
  40fb8d:	dec    ebp
  40fb8e:	imul   edx,DWORD PTR [ebx],0x27852e18
  40fb94:	imul   ecx,DWORD PTR [ebx-0x77],0xefb95f1b
  40fb9b:	sub    DWORD PTR cs:[ecx+0x7a2cc38],ecx
  40fba2:	imul   esi,edx,0xffffff9b
  40fba5:	push   ebp
  40fba6:	retf   
  40fba7:	sub    ebp,DWORD PTR [eax]
  40fba9:	inc    esp
  40fbaa:	cld    
  40fbab:	jl     0x40fbba
  40fbad:	(bad)  
  40fbae:	sbb    al,0x36
  40fbb0:	push   es
  40fbb1:	idiv   BYTE PTR [edx+0x1c92d3f5]
  40fbb7:	push   cs
  40fbb8:	add    BYTE PTR [edx],0xc9
  40fbbb:	push   eax
  40fbbc:	lahf   
  40fbbd:	test   eax,0xb90e5b9e
  40fbc2:	das    
  40fbc3:	add    dl,BYTE PTR [edi+edi*4-0x6a]
  40fbc7:	mov    ebx,0xf9ba26f9
  40fbcc:	sub    al,0x82
  40fbce:	(bad)  
  40fbcf:	push   cs
  40fbd0:	pop    di
  40fbd2:	fist   DWORD PTR [ecx]
  40fbd4:	imul   ebp,eax,0xac6db290
  40fbda:	or     DWORD PTR [ebp+0x55889bb7],edi
  40fbe0:	mov    eax,0xa7abad5c
  40fbe5:	idiv   DWORD PTR [eax]
  40fbe7:	icebp  
  40fbe8:	add    BYTE PTR ds:0x6caf1b33,al
  40fbee:	fisubr WORD PTR [ecx]
  40fbf0:	jo     0x40fc6c
  40fbf2:	push   ds
  40fbf3:	mov    al,ds:0x328283ea
  40fbf8:	int3   
  40fbf9:	(bad)  [esi-0x5c]
  40fbfc:	inc    ebx
  40fbfd:	pop    ds
  40fbfe:	mov    ds:0x67d00a94,eax
  40fc03:	cwde   
  40fc04:	push   eax
  40fc05:	stos   DWORD PTR es:[edi],eax
  40fc06:	mov    BYTE PTR [ecx+0x37],ah
  40fc09:	dec    ebp
  40fc0a:	out    dx,eax
  40fc0b:	jmp    0x1e29:0x579cb39f
  40fc12:	cmp    bl,BYTE PTR [eax+0x3e]
  40fc15:	add    edx,DWORD PTR [ecx-0x2cfd0f9]
  40fc1b:	jp     0x40fbf2
  40fc1d:	jge    0x40fc8d
  40fc1f:	jle    0x40fbae
  40fc21:	outs   dx,DWORD PTR ds:[esi]
  40fc22:	into   
  40fc23:	nop
  40fc24:	jp     0x40fc79
  40fc26:	ss pop ecx
  40fc28:	jb     0x40fc7e
  40fc2a:	pop    eax
  40fc2b:	jo     0x40fc49
  40fc2d:	neg    DWORD PTR [ebx-0x1c]
  40fc30:	push   es
  40fc31:	or     al,0x1c
  40fc33:	push   ebx
  40fc34:	mov    esp,DWORD PTR [ebx+0x66]
  40fc37:	adc    cl,ah
  40fc39:	mov    esp,0xb34acdca
  40fc3e:	sub    al,0x90
  40fc40:	xlat   BYTE PTR ds:[ebx]
  40fc41:	popaw  
  40fc43:	test   eax,0xe2ef22e3
  40fc48:	stos   DWORD PTR es:[edi],eax
  40fc49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc4a:	into   
  40fc4b:	test   al,0x2c
  40fc4d:	out    0xd5,eax
  40fc4f:	(bad)  
  40fc50:	jbe    0x40fcb8
  40fc52:	fst    QWORD PTR [esp+ebp*2+0x71]
  40fc56:	retf   0xcccd
  40fc59:	in     eax,0x74
  40fc5b:	or     ch,dl
  40fc5d:	add    BYTE PTR [esi-0x69154fc0],bl
  40fc63:	shr    al,cl
  40fc65:	js     0x40fc84
  40fc67:	sub    DWORD PTR [ebx-0x3b],0xffffffd0
  40fc6b:	call   0x24b9:0x62759126
  40fc72:	icebp  
  40fc73:	mov    al,ds:0x3d9117d3
  40fc78:	cmp    bl,BYTE PTR [ebp-0x2ef7d614]
  40fc7e:	scas   eax,DWORD PTR es:[edi]
  40fc7f:	xchg   ebx,eax
  40fc80:	aaa    
  40fc81:	cli    
  40fc82:	cmp    BYTE PTR [edx],0x46
  40fc85:	mov    al,0x87
  40fc87:	ins    DWORD PTR es:[edi],dx
  40fc88:	das    
  40fc89:	and    DWORD PTR [ecx-0x4e],esp
  40fc8c:	inc    esp
  40fc8d:	or     bl,bl
  40fc8f:	jno    0x40fc52
  40fc91:	ins    DWORD PTR es:[edi],dx
  40fc92:	adc    BYTE PTR [ecx+0x5a8ec52],dh
  40fc98:	pop    ebp
  40fc99:	and    BYTE PTR [edx],ah
  40fc9b:	test   BYTE PTR [esi],al
  40fc9d:	xchg   DWORD PTR [edi+eiz*8+0x747e144f],esp
  40fca4:	xchg   BYTE PTR [esi-0x1a],cl
  40fca7:	mov    al,ds:0xa778665a
  40fcac:	inc    esi
  40fcad:	sub    BYTE PTR [esi-0x41c5089],ah
  40fcb3:	adc    DWORD PTR [esi],ebp
  40fcb5:	sbb    edi,DWORD PTR [ebp+0x48]
  40fcb8:	cmp    BYTE PTR [ebx+0x6e169e4c],ah
  40fcbe:	fist   WORD PTR [ebx+edx*4-0x3b]
  40fcc2:	pop    ds
  40fcc3:	pushf  
  40fcc4:	rol    DWORD PTR [edx-0x75],1
  40fcc7:	stc    
  40fcc8:	scas   eax,DWORD PTR es:[edi]
  40fcc9:	push   ss
  40fcca:	sahf   
  40fccb:	dec    BYTE PTR [eax+ecx*8]
  40fcce:	(bad)  
  40fccf:	adc    eax,0xecbcbe93
  40fcd4:	sar    DWORD PTR [ebx],0x3b
  40fcd7:	mov    al,0x80
  40fcd9:	aam    0xa3
  40fcdb:	int    0x11
  40fcdd:	pop    ss
  40fcde:	ds dec ecx
  40fce0:	cld    
  40fce1:	iret   
  40fce2:	ss pop es
  40fce4:	(bad)  
  40fce5:	push   ss
  40fce6:	out    dx,al
  40fce7:	and    ecx,edx
  40fce9:	adc    bh,bl
  40fceb:	jmp    0xb9a4c999
  40fcf0:	pop    es
  40fcf1:	hlt    
  40fcf2:	mov    DWORD PTR ds:0xe060b0e7,esi
  40fcf8:	shl    ecx,0x4c
  40fcfb:	(bad)  
  40fcfc:	mov    DWORD PTR [ebx-0x8],edi
  40fcff:	imul   ebx,DWORD PTR [eax],0x56386874
  40fd05:	les    edx,FWORD PTR [edx-0x32cb460a]
  40fd0b:	scas   eax,DWORD PTR es:[edi]
  40fd0c:	lods   eax,DWORD PTR ds:[esi]
  40fd0d:	xchg   ecx,eax
  40fd0e:	jl     0x40fc98
  40fd10:	dec    eax
  40fd11:	mov    bh,0xed
  40fd13:	xlat   BYTE PTR ds:[ebx]
  40fd14:	adc    al,0xa0
  40fd16:	mov    dl,0x55
  40fd18:	(bad)  
  40fd19:	jnp    0x40fd21
  40fd1b:	ret    0x29f7
  40fd1e:	push   DWORD PTR [ecx]
  40fd20:	fbstp  TBYTE PTR [ebx+0xa]
  40fd23:	dec    ebp
  40fd24:	cwde   
  40fd25:	gs adc al,0x3d
  40fd28:	out    0x8e,al
  40fd2a:	add    BYTE PTR [esi+ebx*4],dh
  40fd2d:	and    al,0xdd
  40fd2f:	jg     0x40fd5e
  40fd31:	(bad)  
  40fd32:	test   eax,0xe737aaea
  40fd37:	fimul  DWORD PTR [ecx+ebp*2-0x39]
  40fd3b:	imul   eax,DWORD PTR [ecx+0x3e],0xffffff81
  40fd3f:	test   DWORD PTR [ebx],0xbaff20e6
  40fd45:	test   al,0x1f
  40fd47:	pop    ss
  40fd48:	bound  edx,QWORD PTR ds:0xeb42c1f1
  40fd4e:	pop    ebx
  40fd4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd50:	daa    
  40fd51:	call   0x8789115b
  40fd56:	add    DWORD PTR [ecx],eax
  40fd58:	outs   dx,DWORD PTR ds:[esi]
  40fd59:	into   
  40fd5a:	jg     0x40fddb
  40fd5c:	add    dl,BYTE PTR [ebp+0x7bb908cc]
  40fd62:	popfw  
  40fd64:	leave  
  40fd65:	mov    ah,0xe9
  40fd67:	xor    BYTE PTR [edx-0x6],bl
  40fd6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd6b:	add    BYTE PTR [eax-0x7b],bh
  40fd6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd6f:	cli    
  40fd70:	cmp    al,0x4
  40fd72:	stos   DWORD PTR es:[edi],eax
  40fd73:	inc    ecx
  40fd74:	data16 (bad) 
  40fd76:	out    dx,al
  40fd77:	ss fcmovbe st,st(3)
  40fd7a:	icebp  
  40fd7b:	daa    
  40fd7c:	adc    ch,BYTE PTR [ebx-0x399621a8]
  40fd82:	and    al,0x4b
  40fd84:	and    eax,0xa4826cd1
  40fd89:	mov    ebp,0x1f6de07d
  40fd8e:	ins    BYTE PTR es:[edi],dx
  40fd8f:	add    BYTE PTR [ebx],dh
  40fd91:	ja     0x40fd91
  40fd93:	jmp    0xca21:0x4512f16c
  40fd9a:	retf   
  40fd9b:	adc    ebx,edi
  40fd9d:	cmp    al,0x96
  40fd9f:	inc    edi
  40fda0:	ins    DWORD PTR es:[edi],dx
  40fda1:	in     al,0x46
  40fda3:	sbb    ah,BYTE PTR [ecx]
  40fda5:	cwde   
  40fda6:	loope  0x40fdd9
  40fda8:	(bad)  [esi-0x75]
  40fdab:	bound  edx,QWORD PTR ds:0xbc9c3656
  40fdb1:	add    al,0xd1
  40fdb3:	inc    edi
  40fdb4:	pop    ebp
  40fdb5:	sub    eax,0x8d87a963
  40fdba:	loop   0x40fde5
  40fdbc:	and    eax,0xab65e70a
  40fdc1:	mov    bl,0x87
  40fdc3:	outs   dx,DWORD PTR ds:[esi]
  40fdc4:	mov    ebp,0x83ee3ccf
  40fdc9:	xchg   ebp,ebx
  40fdcb:	pop    edx
  40fdcc:	or     edx,DWORD PTR [ebp+0x84ff068]
  40fdd2:	jae    0x40fe31
  40fdd4:	fldenv [edi+0x8215dd]
  40fdda:	adc    BYTE PTR [edx-0x1a],0xc7
  40fdde:	mov    ch,0xed
  40fde0:	push   cs
  40fde1:	popf   
  40fde2:	inc    ebp
  40fde3:	add    DWORD PTR [ebx+ecx*2+0x7],esi
  40fde7:	xchg   ebx,eax
  40fde8:	sub    ebp,DWORD PTR [ecx+eax*8+0xde5069e]
  40fdef:	mov    dh,0x1e
  40fdf1:	test   eax,0x877b96e8
  40fdf6:	add    bh,BYTE PTR [esi+0x2f59ff0f]
  40fdfc:	cmp    al,0x61
  40fdfe:	xor    cl,al
  40fe00:	jne    0x40fdb8
  40fe02:	push   edx
  40fe03:	ror    BYTE PTR ss:[ebp-0x55],0x20
  40fe08:	loop   0x40fe12
  40fe0a:	fidivr WORD PTR [edx]
  40fe0c:	mov    al,ds:0x81533704
  40fe11:	sbb    eax,0x37a27cb0
  40fe16:	hlt    
  40fe17:	push   edi
  40fe18:	fmul   DWORD PTR [edi+edi*1+0x1b195632]
  40fe1f:	aam    0xb4
  40fe21:	pop    ebx
  40fe22:	(bad)  
  40fe23:	xlat   BYTE PTR ds:[ebx]
  40fe24:	fbstp  TBYTE PTR [edi+edx*4-0x207f3e41]
  40fe2b:	add    bl,cl
  40fe2d:	cli    
  40fe2e:	mov    bh,0xa5
  40fe30:	les    ebx,FWORD PTR [edx-0x12]
  40fe33:	cs push esp
  40fe35:	and    DWORD PTR [edi+0x6982e3a1],edi
  40fe3b:	xor    al,0xcf
  40fe3d:	pop    es
  40fe3e:	mov    eax,ds:0x28c094ef
  40fe43:	push   eax
  40fe44:	cmc    
  40fe45:	lods   al,BYTE PTR ds:[esi]
  40fe46:	xchg   BYTE PTR [esi],bh
  40fe48:	lahf   
  40fe49:	mov    ecx,0x168b4961
  40fe4e:	add    esi,eax
  40fe50:	and    edi,ecx
  40fe52:	mov    WORD PTR [esi],cs
  40fe54:	stc    
  40fe55:	enter  0xa6e2,0x99
  40fe59:	mov    esi,0x415aab68
  40fe5e:	jbe    0x40fe83
  40fe60:	cld    
  40fe61:	les    eax,FWORD PTR [edx+0x4b265ccb]
  40fe67:	adc    cl,BYTE PTR [ecx]
  40fe69:	dec    eax
  40fe6a:	pop    ss
  40fe6b:	push   esi
  40fe6c:	aad    0x4c
  40fe6e:	dec    edi
  40fe6f:	mov    al,ds:0xf45dacc7
  40fe74:	shl    DWORD PTR [ecx],1
  40fe76:	push   esp
  40fe77:	push   ebp
  40fe78:	(bad)  
  40fe79:	js     0x40fee1
  40fe7b:	jo     0x40fecb
  40fe7d:	cmp    ebp,DWORD PTR [ebx+0x3ff63547]
  40fe83:	or     esp,DWORD PTR [bp+di-0x7084]
  40fe88:	push   ecx
  40fe89:	mov    dh,0x21
  40fe8b:	dec    ecx
  40fe8c:	cs adc esp,ebp
  40fe8f:	loop   0x40fe2d
  40fe91:	cli    
  40fe92:	mov    esp,0x904d19c0
  40fe97:	jmp    0x40ff14
  40fe99:	xchg   esp,eax
  40fe9a:	rol    BYTE PTR [edi+0x71a9f377],0x5b
  40fea1:	(bad)  
  40fea2:	jecxz  0x40ff0a
  40fea4:	pop    esp
  40fea5:	jg     0x40fe36
  40fea7:	iret   
  40fea8:	jae    0x40ff26
  40feaa:	push   ecx
  40feab:	sub    ah,BYTE PTR [edi+0x1f375748]
  40feb1:	mov    eax,ds:0xc9d1bc14
  40feb6:	call   ebp
  40feb8:	fs in  al,dx
  40feba:	mov    edx,0x12220a59
  40febf:	sub    esi,DWORD PTR [eax-0xc]
  40fec2:	loopne 0x40fec9
  40fec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fec5:	dec    ebp
  40fec6:	mov    WORD PTR [ebp+0x11],?
  40fec9:	sahf   
  40feca:	fwait
  40fecb:	jno    0x40ff40
  40fecd:	mov    esp,0x3f9acc54
  40fed2:	pop    ebp
  40fed3:	nop
  40fed4:	aad    0x15
  40fed6:	cmp    edi,eax
  40fed8:	repnz and eax,0x28a3e437
  40fede:	push   ss
  40fedf:	cmp    edi,edx
  40fee1:	mov    ds:0x50e802e3,eax
  40fee6:	call   0xea41b4dc
  40feeb:	sahf   
  40feec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40feed:	retf   
  40feee:	dec    esp
  40feef:	or     eax,0xc7929aa7
  40fef4:	dec    ecx
  40fef5:	add    DWORD PTR [eax+ebp*8],edi
  40fef8:	adc    al,0xb1
  40fefa:	inc    ebx
  40fefb:	inc    esi
  40fefc:	cdq    
  40fefd:	out    dx,al
  40fefe:	cmc    
  40feff:	or     al,0xe1
  40ff01:	and    DWORD PTR [ecx-0x2e],0xd4e7f780
  40ff08:	aad    0x0
  40ff0a:	lea    ebp,[ebx+eax*8-0xab69a20]
  40ff11:	inc    ecx
  40ff12:	inc    edi
  40ff13:	mov    ds:0x9f494caf,al
  40ff18:	fwait
  40ff19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff1a:	dec    ebx
  40ff1b:	ins    BYTE PTR es:[edi],dx
  40ff1c:	push   ecx
  40ff1d:	call   0x33a0:0xf5eb2283
  40ff24:	jmp    0xcf64:0xe13b76f0
  40ff2b:	in     eax,dx
  40ff2c:	adc    bl,bh
  40ff2e:	call   0xfea5e89f
  40ff33:	ret    0xb1e6
  40ff36:	mov    al,0x97
  40ff38:	jb     0x40fed8
  40ff3a:	mov    al,ds:0x514d9098
  40ff3f:	aas    
  40ff40:	sbb    ecx,esi
  40ff42:	push   ebx
  40ff43:	inc    esp
  40ff44:	xlat   BYTE PTR ds:[ebx]
  40ff45:	scas   al,BYTE PTR es:[edi]
  40ff46:	xchg   ebx,eax
  40ff47:	push   0xbca02445
  40ff4c:	outs   dx,DWORD PTR ds:[esi]
  40ff4d:	dec    eax
  40ff4e:	lea    ecx,[ebx+0x3139232f]
  40ff54:	push   0x19
  40ff56:	add    edx,DWORD PTR [edi]
  40ff58:	repz push 0x458fed1
  40ff5e:	mov    eax,ds:0x41fdf12f
  40ff63:	jmp    FWORD PTR [eax+ebx*4-0x730c5016]
  40ff6a:	xchg   esi,eax
  40ff6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff6c:	retf   0xe004
  40ff6f:	xchg   ebp,eax
  40ff70:	adc    ebp,DWORD PTR [eax-0x17]
  40ff73:	retf   0xca36
  40ff76:	or     DWORD PTR ds:0x546315e6,ecx
  40ff7c:	mov    ch,0xdb
  40ff7e:	dec    eax
  40ff7f:	into   
  40ff80:	sbb    bh,BYTE PTR [esi+0x5adb3c9f]
  40ff86:	push   ebp
  40ff87:	and    al,ah
  40ff89:	push   0x1f
  40ff8b:	fucom  st(3)
  40ff8d:	inc    esi
  40ff8e:	push   ss
  40ff8f:	mov    ds:0x26548b32,al
  40ff94:	xchg   edx,eax
  40ff95:	dec    ecx
  40ff96:	ds pop es
  40ff98:	retf   
  40ff99:	xlat   BYTE PTR ds:[ebx]
  40ff9a:	loopne 0x40ff69
  40ff9c:	(bad)  
  40ff9d:	jbe    0x40ffd1
  40ff9f:	enter  0x8689,0x9e
  40ffa3:	les    esi,FWORD PTR [esi+esi*1+0x53bbba03]
  40ffaa:	out    0x34,eax
  40ffac:	cdq    
  40ffad:	push   0x25c9af26
  40ffb2:	inc    eax
  40ffb3:	xchg   edx,eax
  40ffb4:	out    dx,eax
  40ffb5:	xchg   esi,eax
  40ffb6:	out    0x84,eax
  40ffb8:	int3   
  40ffb9:	dec    eax
  40ffba:	sub    BYTE PTR [edi-0x3ff7caa],bh
  40ffc0:	rcl    BYTE PTR [edx+0x6e],0xc3
  40ffc4:	fadd   QWORD PTR [ecx+ebp*1-0x462a684e]
  40ffcb:	pop    ds
  40ffcc:	js     0x40ffbb
  40ffce:	(bad)  
  40ffcf:	mov    ds:0x9a163cca,eax
  40ffd4:	(bad)  
  40ffd5:	(bad)  
  40ffd6:	xor    BYTE PTR [ebp-0x76],ah
  40ffd9:	adc    BYTE PTR [ebx-0x11],ch
  40ffdc:	repz ffreep st(2)
  40ffdf:	cli    
  40ffe0:	out    0xab,eax
  40ffe2:	cs sub dh,ch
  40ffe5:	mov    cl,0xc3
  40ffe7:	int3   
  40ffe8:	pop    es
  40ffe9:	in     al,0x46
  40ffeb:	mov    ecx,0x7e1af504
  40fff0:	cwde   
  40fff1:	cmp    edx,DWORD PTR [edx+esi*4+0x620649aa]
  40fff8:	xor    DWORD PTR [esi+eiz*1+0x5426f572],0x185ae244
  410003:	shl    DWORD PTR [ebx],1
  410005:	repz adc DWORD PTR [eax],esi
  410008:	mov    esi,0xa67b40c7
  41000d:	fucom  st(4)
  41000f:	sbb    BYTE PTR [eax-0x7148c3b0],ch
  410015:	adc    eax,0x48a33be5
  41001a:	push   0x35
  41001c:	(bad)  
  41001d:	xchg   esi,eax
  41001e:	lock daa 
  410020:	(bad)  
  410021:	cli    
  410022:	ins    BYTE PTR es:[edi],dx
  410023:	add    al,0xf
  410025:	pop    ebp
  410026:	pop    esi
  410027:	arpl   si,bp
  410029:	loope  0x41001f
  41002b:	push   ss
  41002c:	xchg   edi,eax
  41002d:	or     dl,BYTE PTR [edx+0x76]
  410030:	cmp    al,0x92
  410032:	xchg   ecx,eax
  410033:	(bad)  [edx-0x348f8eea]
  410039:	ins    DWORD PTR es:[edi],dx
  41003a:	push   ebp
  41003b:	pop    esp
  41003c:	xchg   esp,eax
  41003d:	enter  0x6d4c,0xdb
  410041:	aaa    
  410042:	xor    ebp,DWORD PTR [ecx+0x44]
  410045:	mov    bh,0xed
  410047:	call   0x9ccc:0xa801d8af
  41004e:	aad    0x3b
  410050:	shr    BYTE PTR [ecx-0x4bc593c6],cl
  410056:	jl     0x41000d
  410058:	add    eax,0x15938b56
  41005d:	dec    DWORD PTR [edx-0x29]
  410060:	aad    0x8f
  410062:	mov    dl,cl
  410064:	(bad)  
  410065:	retf   
  410066:	sub    bh,BYTE PTR [ebp+0x5fe65971]
  41006c:	scas   al,BYTE PTR es:[edi]
  41006d:	pusha  
  41006e:	xor    al,0x1d
  410070:	jge    0x41009f
  410072:	int3   
  410073:	mov    bh,0xf5
  410075:	stos   BYTE PTR es:[edi],al
  410076:	fwait
  410077:	aad    0x7f
  410079:	lea    ebx,[ebx]
  41007b:	push   ss
  41007c:	mov    al,0x31
  41007e:	dec    ebp
  41007f:	push   esi
  410080:	cs xor eax,0xfbcea064
  410086:	mov    bl,BYTE PTR [esi-0x24]
  410089:	sar    DWORD PTR [ecx+0x3cf433b3],cl
  41008f:	or     dl,BYTE PTR [edx]
  410091:	lock cmp dl,BYTE PTR [ecx]
  410094:	adc    DWORD PTR [esi-0x143094db],0xd72adb5a
  41009e:	popa   
  41009f:	fucomp st(7)
  4100a1:	retf   0x2352
  4100a4:	test   al,0xcd
  4100a6:	test   eax,0xee8b49d4
  4100ab:	xor    ch,ch
  4100ad:	sti    
  4100ae:	ret    
  4100af:	loop   0x4100ab
  4100b1:	ins    DWORD PTR es:[edi],dx
  4100b2:	mov    al,ds:0xc6f46eb8
  4100b7:	sbb    DWORD PTR [ebp-0x70d4aeba],esi
  4100bd:	in     al,dx
  4100be:	push   esi
  4100bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100c0:	fsubrp st(3),st
  4100c2:	inc    ebp
  4100c3:	mov    ecx,es
  4100c5:	je     0x4100f7
  4100c7:	pop    ebp
  4100c8:	xor    al,0xe6
  4100ca:	sar    BYTE PTR [edi-0x53],cl
  4100cd:	sub    esi,DWORD PTR [eax+ebp*4+0x6fd6e2ea]
  4100d4:	xor    BYTE PTR [ecx+0x75],dh
  4100d7:	scas   al,BYTE PTR es:[edi]
  4100d8:	or     eax,0x36755c14
  4100dd:	or     esp,DWORD PTR [ebx]
  4100df:	mov    ax,0xc24d
  4100e3:	dec    ebp
  4100e4:	repnz ds shl ch,1
  4100e8:	in     al,0x96
  4100ea:	cmp    BYTE PTR [edx+0x4092dff9],ch
  4100f0:	ror    BYTE PTR [edx+0x731924d1],cl
  4100f6:	jmp    0x4100df
  4100f8:	arpl   WORD PTR [ebx-0x1c],ax
  4100fb:	(bad)  
  4100fc:	dec    ebx
  4100fd:	sub    bh,BYTE PTR [eax+ecx*4]
  410100:	sub    DWORD PTR ds:0x7a5c4a61,esi
  410106:	jo     0x410176
  410108:	mov    ch,0x88
  41010a:	leave  
  41010b:	imul   esp,eax,0x76
  41010e:	div    edx
  410110:	cmp    eax,esp
  410112:	popa   
  410113:	(bad)  
  410114:	int    0x43
  410116:	cli    
  410117:	mov    ah,0x6c
  410119:	(bad)  
  41011a:	jbe    0x410126
  41011c:	addr16 jmp 0xe96875c4
  410122:	fbld   TBYTE PTR [ecx+eax*1-0x66]
  410126:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410127:	and    DWORD PTR [ebp-0x7],0xd6593268
  41012e:	push   ebx
  41012f:	adc    eax,0xd65441e4
  410134:	adc    BYTE PTR [edi+0x40],dh
  410137:	cld    
  410138:	adc    ebp,DWORD PTR [ecx+esi*1-0x3dab4911]
  41013f:	mov    DWORD PTR [edi],ebx
  410141:	cmp    DWORD PTR [ecx],ecx
  410143:	ja     0x410194
  410145:	mov    esp,0x72c0fbec
  41014a:	jmp    0x2de5:0xacad5ad
  410151:	and    eax,0xc0217bb6
  410156:	shl    BYTE PTR [esi+0x1aea5616],0xbd
  41015d:	or     DWORD PTR [ecx-0x447ecf70],0x50
  410164:	sbb    BYTE PTR [ebp+0x17],bh
  410167:	add    bl,BYTE PTR [ebx]
  410169:	aam    0x7f
  41016b:	xchg   DWORD PTR [ecx+0x587d9b78],eax
  410171:	jge    0x410121
  410173:	jmp    0xdb852c0a
  410178:	retf   
  410179:	dec    esi
  41017a:	loopne 0x41013e
  41017c:	ret    
  41017d:	jno    0x4101b6
  41017f:	mov    eax,DWORD PTR [edi]
  410181:	sahf   
  410182:	mov    bh,0x15
  410184:	daa    
  410185:	enter  0xf2da,0xe
  410189:	and    DWORD PTR [edi+0x777c5260],edx
  41018f:	sub    BYTE PTR [eax+0x1630d509],bh
  410195:	or     ah,BYTE PTR [eax]
  410197:	push   esi
  410198:	mov    dl,0xd4
  41019a:	push   es
  41019b:	inc    edx
  41019c:	sti    
  41019d:	out    dx,eax
  41019e:	lods   al,BYTE PTR ds:[esi]
  41019f:	enter  0x4f19,0xa2
  4101a3:	jmp    0xfeb:0x69b72903
  4101aa:	ins    DWORD PTR es:[edi],dx
  4101ab:	fist   WORD PTR [ebx]
  4101ad:	inc    esi
  4101ae:	xchg   edi,eax
  4101af:	fistp  DWORD PTR [edx+0x60]
  4101b2:	loop   0x4101b3
  4101b4:	retf   0x28d4
  4101b7:	mov    eax,edi
  4101b9:	inc    ebx
  4101ba:	sub    BYTE PTR ds:0xe1ae3de,al
  4101c0:	jg     0x41014e
  4101c2:	dec    edi
  4101c3:	push   edi
  4101c4:	push   ebp
  4101c5:	xchg   esi,eax
  4101c6:	jne    0x410181
  4101c8:	mov    ds:0x219dccf0,eax
  4101cd:	jae    0x2955e18
  4101d3:	and    DWORD PTR [ecx+0x3ee9970b],0x9
  4101da:	shl    BYTE PTR [esi],0x86
  4101dd:	ss or  al,0xc6
  4101e0:	inc    edx
  4101e1:	fidivr WORD PTR [esi]
  4101e3:	cwde   
  4101e4:	mov    dh,0xd5
  4101e6:	pop    ds
  4101e7:	push   ebp
  4101e8:	inc    edx
  4101e9:	push   eax
  4101ea:	pop    ecx
  4101eb:	arpl   WORD PTR [eax],ax
  4101ed:	or     DWORD PTR [edi+0xea21492],esp
  4101f3:	icebp  
  4101f4:	enter  0x19c4,0x99
  4101f8:	cs test eax,0x5c79dd2e
  4101fe:	adc    DWORD PTR [edx-0x6d],edx
  410201:	mov    BYTE PTR [esi+0x75],al
  410204:	or     bh,ah
  410206:	mov    esp,0xad0aed99
  41020b:	daa    
  41020c:	xor    ebx,DWORD PTR [bx]
  41020f:	cmp    al,0x69
  410211:	sub    BYTE PTR [ebp-0x77],cl
  410214:	xchg   ecx,eax
  410215:	(bad)  
  410216:	bound  eax,QWORD PTR [edi-0x8c8c833]
  41021c:	mov    al,ds:0x87ed84f5
  410221:	scas   al,BYTE PTR es:[edi]
  410222:	sub    al,0xb3
  410224:	sti    
  410225:	(bad)  
  410226:	loopne 0x4102a5
  410228:	push   bp
  41022a:	imul   ecx,DWORD PTR [edx+0x7f],0xffffffbb
  41022e:	gs mov edi,eax
  410231:	sub    ch,dh
  410233:	xchg   edi,eax
  410234:	arpl   WORD PTR [edi],ax
  410236:	push   cs
  410237:	jl     0x410251
  410239:	mov    ds:0xa50525a4,al
  41023e:	xchg   esp,eax
  41023f:	mov    eax,ds:0xedf35c0b
  410244:	sbb    BYTE PTR [ebp-0x6a],dh
  410247:	sbb    DWORD PTR [ebx-0x11],ebx
  41024a:	push   es
  41024b:	push   cs
  41024c:	cmp    al,0xd
  41024e:	jae    0x4101e8
  410250:	nop
  410251:	mov    ah,0xa
  410253:	cwde   
  410254:	or     BYTE PTR [eax+ecx*8-0x2e],0xc6
  410259:	out    0xeb,al
  41025b:	addr16 sti 
  41025d:	stos   DWORD PTR es:[edi],eax
  41025e:	lahf   
  41025f:	aaa    
  410260:	mov    ebx,0x7d35c5dc
  410265:	adc    edx,DWORD PTR [edi+0x804bdad]
  41026b:	fistp  DWORD PTR [eax]
  41026d:	pop    esp
  41026e:	lock ss and dh,0x8a
  410273:	lods   eax,DWORD PTR ds:[esi]
  410274:	daa    
  410275:	xor    eax,0x7cdcb712
  41027a:	loope  0x410275
  41027c:	aad    0x31
  41027e:	imul   esi,DWORD PTR [edx-0x55],0x49
  410282:	jmp    0x4102cf
  410284:	adc    edi,ebx
  410286:	mov    eax,ds:0x5d657ad5
  41028b:	push   esp
  41028c:	pop    ebp
  41028d:	mov    eax,0x1981b635
  410292:	inc    esp
  410293:	sbb    al,0xf9
  410295:	push   esi
  410296:	stos   DWORD PTR es:[edi],eax
  410297:	mov    ch,0x61
  410299:	cmp    eax,0x195e8bab
  41029e:	repz inc edx
  4102a0:	pop    es
  4102a1:	out    dx,al
  4102a2:	adc    al,0x67
  4102a4:	jp     0x41027a
  4102a6:	cmp    BYTE PTR [edi-0x5c055068],bl
  4102ac:	jge    0x410323
  4102ae:	(bad)  
  4102af:	rcr    DWORD PTR [esi+0x2f],1
  4102b2:	sti    
  4102b3:	pop    edi
  4102b4:	(bad)  
  4102b5:	aad    0x91
  4102b7:	es jmp 0xbe80685d
  4102bd:	test   BYTE PTR [eax-0x68],0x1d
  4102c1:	dec    esi
  4102c2:	cs xchg ebx,ebx
  4102c5:	neg    ah
  4102c7:	ins    BYTE PTR es:[edi],dx
  4102c8:	xor    al,0xb
  4102ca:	or     eax,0x48e3fd31
  4102cf:	push   0xfffffff7
  4102d1:	sbb    eax,0xaf946f42
  4102d6:	(bad)
  4102da:	aas    
  4102db:	stos   DWORD PTR es:[edi],eax
  4102dc:	push   edi
  4102dd:	sub    DWORD PTR [edi],0x6fc6c741
  4102e3:	jns    0x410361
  4102e5:	(bad)  
  4102e6:	push   ds
  4102e7:	sbb    ah,al
  4102e9:	inc    ebx
  4102ea:	inc    edi
  4102eb:	mov    bh,0xcd
  4102ed:	pushf  
  4102ee:	pushf  
  4102ef:	push   ecx
  4102f0:	sub    al,0x94
  4102f2:	mov    ebx,DWORD PTR [edi+edi*1]
  4102f5:	lods   al,BYTE PTR ds:[esi]
  4102f6:	cld    
  4102f7:	and    ah,BYTE PTR [edx-0x53e22638]
  4102fd:	sbb    al,0xd7
  4102ff:	dec    edx
  410300:	inc    edi
  410301:	pop    es
  410302:	xchg   ebx,eax
  410303:	xor    al,dl
  410305:	es scas eax,DWORD PTR es:[edi]
  410307:	xchg   DWORD PTR [edx],ecx
  410309:	sbb    BYTE PTR [ecx],ah
  41030b:	fs das 
  41030d:	call   0xd32:0xfcde065
  410314:	ins    BYTE PTR es:[edi],dx
  410315:	rcl    ah,cl
  410317:	ror    DWORD PTR [edx+0x70],cl
  41031a:	mov    cl,0x80
  41031c:	retf   
  41031d:	sbb    DWORD PTR [ebx],esi
  41031f:	sbb    eax,0xc016af13
  410324:	sub    BYTE PTR [ebx+0x79],dh
  410327:	pop    ecx
  410328:	mov    ah,0x65
  41032a:	dec    ebp
  41032b:	popf   
  41032c:	ss das 
  41032e:	neg    DWORD PTR [ebx]
  410330:	arpl   WORD PTR [ebp-0x5],sp
  410333:	lds    ecx,FWORD PTR [esi]
  410335:	std    
  410336:	out    dx,eax
  410337:	int    0x53
  410339:	push   ebx
  41033a:	add    dl,0x6b
  41033d:	jg     0x4103b2
  41033f:	scas   eax,DWORD PTR es:[edi]
  410340:	cmp    cl,BYTE PTR [esi]
  410342:	inc    ebp
  410343:	mov    dh,cl
  410345:	or     DWORD PTR [edx+0x2e4f8876],eax
  41034b:	push   ebx
  41034c:	int3   
  41034d:	pop    ss
  41034e:	lods   al,BYTE PTR ds:[esi]
  41034f:	jmp    0x5ba633ec
  410354:	imul   edi,DWORD PTR [edi],0x1a
  410357:	rol    eax,1
  410359:	(bad)  
  41035a:	push   ecx
  41035b:	mov    edi,0x41cafe2c
  410360:	mov    eax,ds:0xfef7787
  410365:	xor    BYTE PTR [edx],al
  410367:	pop    es
  410368:	ss mov edx,edi
  41036b:	ror    DWORD PTR [edi-0x79],0x14
  41036f:	dec    edi
  410370:	jl     0x410376
  410372:	sbb    ecx,eax
  410374:	imul   ebx,esi,0x63
  410377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410378:	dec    DWORD PTR [ebx+0x1a4180be]
  41037e:	int    0x97
  410380:	adc    al,0x3d
  410382:	test   DWORD PTR [ecx+0x38],ebx
  410385:	jbe    0x410341
  410387:	retf   
  410388:	enter  0x416d,0xaa
  41038c:	xor    DWORD PTR [eax*2-0x4236deb3],0x5c60132e
  410397:	repnz lods eax,DWORD PTR ds:[esi]
  410399:	sub    edi,ebx
  41039b:	enter  0x7fb4,0x91
  41039f:	cdq    
  4103a0:	mov    ebp,DWORD PTR ds:0xa645938f
  4103a6:	outs   dx,BYTE PTR ds:[esi]
  4103a7:	mov    bh,0x8f
  4103a9:	(bad)  
  4103aa:	int    0x74
  4103ac:	sub    al,al
  4103ae:	clc    
  4103af:	and    DWORD PTR [esi-0x6b],ebx
  4103b2:	mov    edx,0x64bf607f
  4103b7:	sahf   
  4103b8:	je     0x4103bc
  4103ba:	xlat   BYTE PTR ds:[ebx]
  4103bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103bc:	jl     0x410432
  4103be:	fwait
  4103bf:	mov    DWORD PTR [esi+0x7176fe6a],ebx
  4103c5:	in     eax,0x2a
  4103c7:	in     al,0xe
  4103c9:	pop    ebx
  4103ca:	xchg   esp,ebx
  4103cc:	adc    eax,DWORD PTR [esi-0x2cfc245d]
  4103d2:	pop    es
  4103d3:	cmp    BYTE PTR [edx-0x62],0xc4
  4103d7:	push   ds
  4103d8:	mov    dl,0x10
  4103da:	adc    BYTE PTR [eax],bl
  4103dc:	or     al,0x9f
  4103de:	cmp    dl,BYTE PTR [edi]
  4103e0:	push   cs
  4103e1:	or     al,0xb8
  4103e3:	xor    eax,edx
  4103e5:	sti    
  4103e6:	and    eax,0x91efab49
  4103eb:	push   edx
  4103ec:	ret    
  4103ed:	std    
  4103ee:	shl    edi,0xd7
  4103f1:	test   al,0x89
  4103f3:	addr16 pop ebp
  4103f5:	ret    0xaf08
  4103f8:	bound  ebx,QWORD PTR [esi+0x4addb63f]
  4103fe:	or     al,0x74
  410400:	xchg   esi,eax
  410401:	lea    ecx,[ebp+0x1b306288]
  410407:	mov    ds:0x5008884c,al
  41040c:	or     BYTE PTR [ecx+eiz*8+0x47],al
  410410:	inc    edi
  410411:	imul   esi,esi,0x53
  410414:	adc    al,0x53
  410416:	cwde   
  410417:	pop    edx
  410418:	cdq    
  410419:	aas    
  41041a:	ins    BYTE PTR es:[edi],dx
  41041b:	imul   edx,DWORD PTR [edi+edx*2],0x4a
  41041f:	push   ecx
  410420:	push   ds
  410421:	adc    eax,0x841adea3
  410426:	cdq    
  410427:	lods   eax,DWORD PTR ds:[esi]
  410428:	daa    
  410429:	retf   
  41042a:	jg     0x41041c
  41042c:	stos   BYTE PTR es:[edi],al
  41042d:	inc    eax
  41042e:	paddusw mm1,QWORD PTR [edx]
  410431:	shl    DWORD PTR [esi],cl
  410433:	test   al,0x4f
  410435:	push   edi
  410436:	mov    esi,0xd1bd7eb
  41043b:	jbe    0x41041f
  41043d:	imul   DWORD PTR [ebx+esi*4]
  410440:	lods   eax,DWORD PTR ds:[esi]
  410441:	sub    BYTE PTR [ecx-0x1b],al
  410444:	test   ch,al
  410446:	(bad)  
  410447:	ja     0x410416
  410449:	cmp    BYTE PTR [esi+0x6e647a03],bl
  41044f:	jns    0x4103fc
  410451:	cmp    BYTE PTR [esp+eax*8-0x47],bl
  410455:	mov    cl,BYTE PTR [ecx-0x7c]
  410458:	mov    WORD PTR [ebx-0x6],ss
  41045b:	out    0xdb,al
  41045d:	ja     0x4103f1
  41045f:	jne    0x41040a
  410461:	mov    bh,0x98
  410463:	into   
  410464:	aad    0x57
  410466:	mov    edx,0x3690a977
  41046c:	pop    esi
  41046d:	aas    
  41046e:	mov    ch,0x1c
  410470:	and    cl,BYTE PTR [ebx]
  410472:	int    0x8
  410474:	pop    ds
  410475:	push   ss
  410476:	adc    bh,BYTE PTR [ebx]
  410478:	pushf  
  410479:	or     ah,BYTE PTR [edx]
  41047b:	pop    ebp
  41047c:	xor    ecx,DWORD PTR [eax-0x56]
  41047f:	daa    
  410480:	and    eax,0x19c40d8
  410485:	(bad)  
  410486:	push   ds
  410487:	dec    edx
  410488:	clc    
  410489:	mov    eax,ds:0x967efd68
  41048e:	test   BYTE PTR [edx+ecx*2+0x3c],dl
  410492:	icebp  
  410493:	dec    esi
  410494:	pop    esp
  410495:	or     bl,BYTE PTR [eax]
  410497:	mov    edx,0xdbfc3ac5
  41049c:	test   eax,0x59c06a3f
  4104a1:	rcl    edx,cl
  4104a3:	(bad)  
  4104a4:	(bad)  
  4104a5:	loopne 0x4104f5
  4104a7:	push   edi
  4104a8:	sbb    ebx,DWORD PTR [eax+edi*8]
  4104ab:	loop   0x4104a6
  4104ad:	dec    esi
  4104ae:	cmovl  ebx,eax
  4104b1:	popf   
  4104b2:	js     0x410510
  4104b4:	inc    ecx
  4104b5:	ins    BYTE PTR es:[edi],dx
  4104b6:	fidivr DWORD PTR [ecx]
  4104b8:	jl     0x410472
  4104ba:	jmp    FWORD PTR [esi]
  4104bc:	lds    esi,FWORD PTR [edx]
  4104be:	xor    ecx,ebp
  4104c0:	xchg   esp,eax
  4104c1:	iret   
  4104c2:	xchg   edi,eax
  4104c3:	pop    eax
  4104c4:	popf   
  4104c5:	xchg   ebp,eax
  4104c6:	cwde   
  4104c7:	call   0x9bc8f1a4
  4104cc:	mov    DWORD PTR [edi],0xafe7bdcc
  4104d2:	inc    ebp
  4104d3:	cmp    bh,0xcb
  4104d6:	lods   eax,DWORD PTR ds:[esi]
  4104d7:	xchg   ebx,eax
  4104d8:	mov    al,0x5b
  4104da:	fild   DWORD PTR [eax+0x20637fd8]
  4104e0:	mov    ah,0xc9
  4104e2:	aad    0x21
  4104e4:	out    dx,al
  4104e5:	add    BYTE PTR [edx],bl
  4104e7:	je     0x41047a
  4104e9:	push   cs
  4104ea:	sti    
  4104eb:	or     ah,dh
  4104ed:	dec    esp
  4104ee:	xor    bl,ch
  4104f0:	adc    esi,DWORD PTR [edi+0x3c57e5c3]
  4104f6:	inc    edx
  4104f7:	mov    bl,0x4f
  4104f9:	mov    ?,ecx
  4104fb:	and    eax,0xe065192
  410500:	pop    edx
  410501:	mov    eax,0x5a52969e
  410506:	cmp    cl,0xb7
  410509:	and    eax,0xb86f0b73
  41050e:	and    eax,0x9d970a45
  410513:	sbb    DWORD PTR [ecx+0xb],eax
  410516:	fst    DWORD PTR [esi-0x6df74522]
  41051c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41051d:	into   
  41051e:	cwde   
  41051f:	shl    BYTE PTR [edi+ebx*1-0x9182ae4],0x29
  410527:	mov    ch,0xa1
  410529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41052a:	aam    0x9a
  41052c:	inc    ebp
  41052d:	fdiv   QWORD PTR [ebp+0x18]
  410530:	loopne 0x4104e3
  410532:	xchg   ebx,eax
  410533:	push   0x26
  410535:	cmc    
  410536:	sar    DWORD PTR [ecx+0x95c2d1b],0x2b
  41053d:	(bad)  
  41053e:	neg    ah
  410540:	push   ss
  410541:	in     eax,dx
  410542:	pop    esi
  410543:	sbb    BYTE PTR [ecx+0x65],ch
  410546:	ds cld 
  410548:	das    
  410549:	ja     0x4104cc
  41054b:	pop    eax
  41054c:	loope  0x410525
  41054e:	fisttp DWORD PTR [eax]
  410550:	int    0x1f
  410552:	dec    ebx
  410553:	and    al,0x18
  410555:	mov    ebp,0x696840eb
  41055a:	add    BYTE PTR [esi+0x2c],ah
  41055d:	pop    ebp
  41055e:	and    eax,0xa4b8072
  410563:	sub    DWORD PTR [ebx+0x41],eax
  410566:	cmp    edi,DWORD PTR [edi-0x4e]
  410569:	jb     0x410545
  41056b:	mov    ch,0x2c
  41056d:	(bad)  
  41056e:	daa    
  41056f:	stc    
  410570:	pop    DWORD PTR [eax-0x7f]
  410573:	sub    BYTE PTR [edi-0x60e61463],0x73
  41057a:	lahf   
  41057b:	rol    bh,cl
  41057d:	cmp    bh,BYTE PTR [esi-0x3487c64f]
  410583:	cmp    al,0xf9
  410585:	xchg   bl,bh
  410587:	shr    BYTE PTR [eax+0x77],0x9f
  41058b:	push   eax
  41058c:	pushf  
  41058d:	push   eax
  41058e:	icebp  
  41058f:	and    DWORD PTR [esi+0x50994f89],edi
  410595:	test   BYTE PTR [ecx+0x50],ch
  410598:	ficom  WORD PTR [ecx-0x10e67913]
  41059e:	sbb    ah,BYTE PTR [edx]
  4105a0:	imul   ebp,DWORD PTR [ebx+edx*2-0x78a10ccf],0x6a33093c
  4105ab:	in     eax,dx
  4105ac:	fxch   st(0)
  4105ae:	not    BYTE PTR [edi+ecx*1-0x67]
  4105b2:	pusha  
  4105b3:	mov    bh,0x34
  4105b5:	mov    ebp,0x46a3a0f3
  4105ba:	or     al,0x4d
  4105bc:	mov    ah,0x7
  4105be:	mov    ds:0x21faea9,al
  4105c3:	loop   0x410629
  4105c5:	cs jge 0x4105d4
  4105c8:	and    al,0x10
  4105ca:	aam    0x21
  4105cc:	xchg   ebp,eax
  4105cd:	and    BYTE PTR [ebx+0xb],dh
  4105d0:	(bad)  [eax-0x19]
  4105d3:	repnz sbb BYTE PTR [bx+di+0x5d],dh
  4105d8:	aas    
  4105d9:	adc    ebx,ecx
  4105db:	pop    ss
  4105dc:	hlt    
  4105dd:	mov    al,ds:0xa6129cd7
  4105e2:	stos   DWORD PTR es:[edi],eax
  4105e3:	lock sbb eax,0xe43e7b04
  4105e9:	adc    edi,DWORD PTR [esi+0x16]
  4105ec:	imul   eax,edi,0xffffffa5
  4105ef:	xor    BYTE PTR [ecx+esi*2-0x69],ch
  4105f3:	jmp    0x4105eb
  4105f5:	dec    ebx
  4105f6:	(bad)  
  4105f7:	push   esi
  4105f8:	xor    esi,edi
  4105fa:	xor    DWORD PTR [ebp-0x4a2572e6],ebp
  410600:	shl    DWORD PTR cs:[ebp+0x74768348],0x6a
  410608:	add    eax,0x11c87b5d
  41060d:	xchg   ecx,eax
  41060e:	jne    0x41067c
  410610:	fcomip st,st(1)
  410612:	ror    BYTE PTR [eax-0x12b06f5a],0xe0
  410619:	mov    edx,0xde7a1d38
  41061e:	icebp  
  41061f:	les    eax,FWORD PTR [edi-0x28b8dec0]
  410625:	dec    eax
  410626:	push   ecx
  410627:	cmp    al,0x8
  410629:	sbb    dh,BYTE PTR [esi+0x682bc23d]
  41062f:	push   es
  410630:	enter  0x3b1e,0x9f
  410634:	jmp    0xf4d7:0xcb362ff9
  41063b:	lds    ebx,FWORD PTR [edx]
  41063d:	sbb    ecx,DWORD PTR [eax]
  41063f:	sub    BYTE PTR [esi+0x29],dh
  410642:	jnp    0x4106a1
  410644:	aam    0xaa
  410646:	lahf   
  410647:	pop    edi
  410648:	push   eax
  410649:	jnp    0x4106c1
  41064b:	test   BYTE PTR [ebx],dl
  41064d:	in     eax,0x45
  41064f:	inc    esi
  410650:	xor    dl,BYTE PTR [eax]
  410652:	cdq    
  410653:	inc    esi
  410654:	sub    eax,0x5dbb9046
  410659:	(bad)  
  41065a:	fcomp  DWORD PTR [ebx+0x49]
  41065d:	xchg   esp,eax
  41065e:	cdq    
  41065f:	jl     0x4106bd
  410661:	mov    DWORD PTR [eax],eax
  410663:	shr    DWORD PTR [ebp-0x5d],0x7d
  410667:	int    0xbf
  410669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41066a:	out    dx,eax
  41066b:	loope  0x410672
  41066d:	cmc    
  41066e:	push   ecx
  41066f:	mov    ah,bh
  410671:	jmp    0x98c2db6e
  410676:	repz or eax,0x3a6e65b8
  41067c:	rcr    BYTE PTR [ebx+0x0],1
  41067f:	(bad)  
  410680:	outs   dx,BYTE PTR ds:[esi]
  410681:	xor    BYTE PTR [esi],0x36
  410684:	fisttp WORD PTR [edx+0x40200ec7]
  41068a:	js     0x410706
  41068c:	fdivr  st,st(5)
  41068e:	xchg   ebx,eax
  41068f:	adc    ebx,DWORD PTR [edx]
  410691:	mov    bh,0x5b
  410693:	mov    ch,0x4a
  410695:	xlat   BYTE PTR ds:[ebx]
  410696:	xor    al,0x46
  410698:	fbstp  TBYTE PTR [edi+eax*4+0x4125dd55]
  41069f:	in     eax,0xb2
  4106a1:	mov    ecx,0x5c86a5d1
  4106a6:	stos   BYTE PTR es:[edi],al
  4106a7:	pop    eax
  4106a8:	not    BYTE PTR gs:[ebx-0x67505099]
  4106af:	push   ecx
  4106b0:	mov    ds:0x8b8fb8a2,al
  4106b5:	mov    esi,0x88417d37
  4106ba:	xchg   BYTE PTR [ebx+ebp*1],ch
  4106bd:	xor    eax,0x798dcb8c
  4106c2:	fwait
  4106c3:	inc    edi
  4106c4:	daa    
  4106c5:	fadd   QWORD PTR [eax+0x199cc60a]
  4106cb:	(bad)  
  4106cd:	jae    0x4106c7
  4106cf:	adc    DWORD PTR [ebx-0x4b0436e5],ebp
  4106d5:	push   ebp
  4106d6:	call   0x9c9694ac
  4106db:	pop    esp
  4106dc:	sti    
  4106dd:	jg     0x410723
  4106df:	popa   
  4106e0:	outs   dx,BYTE PTR ds:[esi]
  4106e1:	sbb    DWORD PTR [edi],esi
  4106e3:	xchg   edi,eax
  4106e4:	cld    
  4106e5:	push   esi
  4106e6:	push   esi
  4106e7:	cs ja  0x410709
  4106ea:	ins    BYTE PTR es:[edi],dx
  4106eb:	gs leave 
  4106ed:	fidivr WORD PTR [edi-0x67]
  4106f0:	cmp    ch,BYTE PTR [eax+0x2e]
  4106f3:	xchg   esp,ebp
  4106f5:	push   edx
  4106f6:	in     eax,0xf
  4106f8:	mov    esp,0x7e3bc657
  4106fd:	popf   
  4106fe:	(bad)  
  410700:	mov    edx,0xd3879538
  410705:	xchg   esp,eax
  410706:	push   es
  410707:	xchg   ebx,eax
  410708:	push   esi
  410709:	aad    0x1d
  41070b:	mov    cl,BYTE PTR [eax]
  41070d:	jnp    0x410694
  41070f:	mov    eax,ds:0xa4d7a6cb
  410714:	sbb    esp,DWORD PTR [ecx]
  410716:	or     eax,0xc835e522
  41071b:	fmul   DWORD PTR [ebx+0x49]
  41071e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41071f:	mov    DWORD PTR [ebx+0x59],ecx
  410722:	xor    eax,0xd9da929f
  410727:	mov    al,ds:0x47c2e946
  41072c:	mov    esp,0x61a3e241
  410731:	add    edx,0x4
  410734:	mov    eax,ds:0xae324779
  410739:	rol    DWORD PTR [edi],1
  41073b:	fistp  WORD PTR [ebx-0x2a85f13]
  410741:	mov    ch,0x97
  410743:	in     eax,dx
  410744:	cli    
  410745:	fidiv  WORD PTR [eax-0x2a]
  410748:	add    BYTE PTR [ecx-0x4f94d4e4],ch
  41074e:	scas   eax,DWORD PTR es:[edi]
  41074f:	mov    esp,edi
  410751:	addr16 mov ds:0xf52e,al
  410755:	outs   dx,DWORD PTR ds:[esi]
  410756:	repnz xlat BYTE PTR ds:[ebx]
  410758:	mov    BYTE PTR ds:0x21d5fc91,dh
  41075e:	jecxz  0x4107b0
  410760:	sub    cl,BYTE PTR [ebp-0x1aef880a]
  410766:	inc    edi
  410767:	push   esp
  410768:	push   esi
  410769:	jmp    0x1507:0x7e8112f2
  410770:	cli    
  410771:	and    ch,dl
  410773:	retf   
  410774:	xor    ebx,DWORD PTR [ecx]
  410776:	popa   
  410777:	rcl    edx,cl
  410779:	pop    edi
  41077a:	adc    esi,DWORD PTR [eax+0x13d883fc]
  410780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410781:	cmp    al,0x1
  410783:	loop   0x410771
  410785:	or     BYTE PTR [ebx-0x59],bl
  410788:	(bad)  
  410789:	jle    0x4107c0
  41078b:	inc    edi
  41078c:	sub    al,0x23
  41078e:	ja     0x4107f2
  410790:	pop    ebx
  410791:	dec    ecx
  410792:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410793:	sbb    bl,BYTE PTR [edi+edx*8+0x3371d47f]
  41079a:	dec    edx
  41079b:	sbb    bl,dh
  41079d:	cmp    DWORD PTR [esi+esi*2],esi
  4107a0:	imul   ecx,DWORD PTR [ecx+edi*8],0x14
  4107a4:	and    BYTE PTR [ebp+edx*2-0x7d],ch
  4107a8:	call   0x99fb:0xafb1276b
  4107af:	mov    edi,0x19e920fc
  4107b4:	(bad)  
  4107b6:	push   ebp
  4107b7:	jmp    0x16e64b12
  4107bc:	loop   0x410834
  4107be:	and    BYTE PTR [ebx],al
  4107c0:	fldenv [ebx]
  4107c2:	fidiv  DWORD PTR [edx]
  4107c4:	cmp    al,0xdf
  4107c6:	xchg   edx,eax
  4107c7:	(bad)  
  4107c8:	test   BYTE PTR [ebp-0x5c37a81b],0x3f
  4107cf:	inc    ebx
  4107d0:	into   
  4107d1:	ins    DWORD PTR es:[edi],dx
  4107d2:	push   es
  4107d3:	daa    
  4107d4:	shl    DWORD PTR [ecx+0x1f],1
  4107d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107d8:	jmp    0x410854
  4107da:	aaa    
  4107db:	popa   
  4107dc:	outs   dx,DWORD PTR ds:[esi]
  4107dd:	fdiv   DWORD PTR [ebx+0x47]
  4107e0:	push   esp
  4107e1:	mov    al,0xe0
  4107e3:	xchg   ebp,eax
  4107e4:	pop    eax
  4107e5:	jno    0x410813
  4107e7:	mov    bh,0x6f
  4107e9:	or     ch,BYTE PTR [ebp+0x3b7eacb9]
  4107ef:	jl     0x410840
  4107f1:	inc    edx
  4107f2:	js     0x4107be
  4107f4:	scas   al,BYTE PTR es:[edi]
  4107f5:	sub    bl,0x25
  4107f8:	jo     0x41085b
  4107fa:	out    0x63,al
  4107fc:	cmp    ebx,0xffffff92
  4107ff:	stos   BYTE PTR es:[edi],al
  410800:	add    eax,0xfb1a81cf
  410805:	xor    BYTE PTR [edi],ah
  410807:	push   ecx
  410808:	adc    dh,BYTE PTR [ecx-0x6f9ad009]
  41080e:	add    BYTE PTR [ebx],bl
  410810:	je     0x4107f6
  410812:	push   ss
  410813:	mov    esi,0x8f3a4fbe
  410818:	ins    DWORD PTR es:[edi],dx
  410819:	xchg   edx,eax
  41081a:	push   ecx
  41081b:	xor    al,0xcb
  41081d:	shl    DWORD PTR [edx+0x7e968b95],1
  410823:	out    0xf,eax
  410825:	scas   eax,DWORD PTR es:[edi]
  410826:	test   BYTE PTR [eax-0x1d],ch
  410829:	mov    ebx,0x4cafed96
  41082e:	lods   al,BYTE PTR ds:[esi]
  41082f:	(bad)  
  410830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410831:	push   eax
  410832:	sahf   
  410833:	pop    ebp
  410834:	sti    
  410835:	or     eax,0x2bb10a3d
  41083a:	call   0x6265:0x42def0a5
  410841:	icebp  
  410842:	bndstx [ecx+0x52],(bad)
  410846:	sub    al,0xb6
  410848:	call   0xaa9c77c7
  41084d:	mov    ecx,0xa093bfe4
  410852:	cs hlt 
  410854:	mov    eax,0x77b16862
  410859:	ficomp WORD PTR [esi-0x2dc09b11]
  41085f:	or     cl,BYTE PTR [ebp+0x31]
  410862:	call   0x555ef23e
  410867:	xchg   ebp,eax
  410868:	jbe    0x410832
  41086a:	in     al,0xc1
  41086c:	out    dx,al
  41086d:	(bad)  
  41086e:	jae    0x41088c
  410870:	loop   0x410839
  410872:	jl     0x4108c3
  410874:	sbb    al,0x1d
  410876:	mov    ?,WORD PTR [edi]
  410878:	push   esp
  410879:	inc    ecx
  41087a:	lahf   
  41087b:	cmp    DWORD PTR [ebx-0x2c],edi
  41087e:	clc    
  41087f:	inc    esi
  410880:	mov    ds:0x91542629,eax
  410885:	test   DWORD PTR [esi-0xbe9f2ac],ebp
  41088b:	cmc    
  41088c:	mov    ah,0x8e
  41088e:	out    0x10,al
  410890:	iret   
  410891:	outs   dx,BYTE PTR ds:[esi]
  410892:	jmp    0xf346:0x9d658562
  410899:	fcom   DWORD PTR [esi]
  41089b:	jl     0x41091c
  41089d:	push   ecx
  41089e:	mul    BYTE PTR ds:0x674bf404
  4108a4:	sub    ah,0xe8
  4108a7:	add    DWORD PTR [esi-0x2df09a02],eax
  4108ad:	(bad)  
  4108ae:	sbb    edx,ebp
  4108b0:	add    DWORD PTR [edi],eax
  4108b2:	inc    ebp
  4108b3:	mov    bh,0x60
  4108b5:	mov    edx,0x7d05efaa
  4108ba:	or     al,0xfc
  4108bc:	sbb    eax,0x4480e9d
  4108c1:	and    DWORD PTR [ebp-0x3b],ebx
  4108c4:	daa    
  4108c5:	cmc    
  4108c6:	sub    al,0x41
  4108c8:	sub    al,0x2b
  4108ca:	call   0x3527:0x253005b5
  4108d1:	(bad)  
  4108d2:	push   ss
  4108d3:	xor    bh,bl
  4108d5:	pusha  
  4108d6:	xor    BYTE PTR [ebx],ah
  4108d8:	out    0x2e,al
  4108da:	aad    0x62
  4108dc:	and    eax,DWORD PTR [eax-0x6edade1d]
  4108e2:	ja     0x410961
  4108e4:	sbb    eax,0x986adee5
  4108e9:	mov    bh,bh
  4108eb:	push   eax
  4108ec:	adc    eax,0x9d194ebc
  4108f1:	mov    bh,0xa1
  4108f3:	call   0x703a:0xda132991
  4108fa:	inc    eax
  4108fb:	sub    BYTE PTR [eax-0x48e459cd],bl
  410901:	push   0xffffffdf
  410903:	jne    0x410890
  410905:	jo     0x4108c4
  410907:	rcl    BYTE PTR [ebx-0x4d],0x42
  41090b:	jo     0x410953
  41090d:	outs   dx,DWORD PTR ds:[esi]
  41090e:	clc    
  41090f:	push   ds
  410910:	int    0x69
  410912:	adc    DWORD PTR [eax+0x4a133938],edi
  410918:	ret    0x2156
  41091b:	and    ebx,DWORD PTR [ecx]
  41091d:	adc    al,0x3e
  41091f:	pop    ecx
  410920:	out    dx,al
  410921:	rcl    BYTE PTR [edi+0x2ed05f3d],1
  410927:	outs   dx,DWORD PTR ds:[esi]
  410928:	pop    edi
  410929:	jg     0x4108ca
  41092b:	cmp    ah,BYTE PTR [edi]
  41092d:	jno    0x41093f
  41092f:	or     eax,ebx
  410931:	or     eax,DWORD PTR [eax-0x33a4a713]
  410937:	(bad)  
  410938:	or     eax,0xc7843e76
  41093d:	jae    0x4109a9
  41093f:	call   0x92c1:0x9377a8f5
  410946:	hlt    
  410947:	push   0x5f
  410949:	es dec ecx
  41094b:	dec    eax
  41094c:	adc    DWORD PTR fs:[esp+edi*2+0x316cee69],esi
  410954:	inc    ecx
  410955:	fwait
  410956:	(bad)  
  410957:	in     al,dx
  410958:	sbb    al,0xa6
  41095a:	inc    ecx
  41095b:	in     al,dx
  41095c:	add    al,0x1f
  41095e:	retf   
  41095f:	fst    st(1)
  410961:	test   BYTE PTR gs:[ebp+edi*2-0x57153e53],0x4c
  41096a:	idiv   ebx
  41096c:	sub    ebx,DWORD PTR [eax+0x16491486]
  410972:	fidivr DWORD PTR [eax+ebp*8-0x4077f12e]
  410979:	(bad)  
  41097a:	mov    eax,ds:0x409fb30d
  41097f:	inc    eax
  410980:	ins    DWORD PTR es:[edi],dx
  410981:	and    al,0xb7
  410983:	push   0xfffffff6
  410985:	outs   dx,BYTE PTR ds:[esi]
  410986:	popa   
  410987:	dec    esi
  410988:	mov    edi,0x29bfba1a
  41098d:	repz dec ecx
  41098f:	xor    dh,BYTE PTR ss:[ebp+0x51f2573e]
  410996:	(bad)  
  410997:	xor    al,ch
  410999:	pop    ds
  41099a:	pop    ebx
  41099b:	popa   
  41099c:	imul   edi,DWORD PTR [edi],0x3ff5d29d
  4109a2:	ins    DWORD PTR es:[edi],dx
  4109a3:	test   al,0xf8
  4109a5:	and    cl,0xe8
  4109a8:	out    0x8,eax
  4109aa:	xor    ebp,edx
  4109ac:	fsubr  DWORD PTR [eax]
  4109ae:	hlt    
  4109af:	push   esi
  4109b0:	daa    
  4109b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109b2:	mov    esp,0xfe52177f
  4109b7:	pop    ecx
  4109b8:	push   ecx
  4109b9:	enter  0x274,0x96
  4109bd:	enter  0x2f08,0x5d
  4109c1:	stos   BYTE PTR es:[edi],al
  4109c2:	adc    bl,ch
  4109c4:	inc    ebx
  4109c5:	adc    eax,0x1bcbf353
  4109ca:	sar    DWORD PTR [ecx-0x3a],0x83
  4109ce:	cmc    
  4109cf:	(bad)  
  4109d0:	pop    ecx
  4109d1:	loopne 0x4109ab
  4109d3:	(bad)  
  4109d4:	ins    BYTE PTR es:[edi],dx
  4109d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109d6:	pop    edx
  4109d7:	jae    0x4109ac
  4109d9:	push   0x756635f4
  4109de:	jge    0x410986
  4109e0:	jb     0x4109af
  4109e2:	sub    eax,0x6f687d6a
  4109e7:	xor    eax,0xf707f9f5
  4109ec:	ins    BYTE PTR es:[edi],dx
  4109ed:	mov    esi,0xbda1d88b
  4109f2:	in     eax,0x4f
  4109f4:	or     DWORD PTR [edi],edx
  4109f6:	jno    0x410a23
  4109f8:	push   esi
  4109f9:	bound  ebx,QWORD PTR ds:0xde57a121
  4109ff:	rcr    DWORD PTR [eax-0x6f],1
  410a02:	in     eax,dx
  410a03:	mov    al,0x91
  410a05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a06:	cmp    DWORD PTR [edx],eax
  410a08:	int3   
  410a09:	sbb    bh,BYTE PTR [ecx-0x2b]
  410a0c:	in     al,dx
  410a0d:	jb     0x4109fc
  410a0f:	jl     0x410a4d
  410a11:	mov    edi,0xaeecf87f
  410a16:	fs dec esi
  410a18:	jae    0x410a7d
  410a1a:	pusha  
  410a1b:	jns    0x410a8c
  410a1d:	lods   eax,DWORD PTR ds:[esi]
  410a1e:	and    DWORD PTR [esp+ebp*4],edx
  410a21:	xor    bh,BYTE PTR [ebp-0xd2eaa36]
  410a27:	fsub   DWORD PTR [esi-0x5dce6e7b]
  410a2d:	scas   eax,DWORD PTR es:[edi]
  410a2e:	xchg   ebp,eax
  410a2f:	cmp    BYTE PTR [ebx],cl
  410a31:	arpl   WORD PTR [ebx+0x7b0dcc1a],bp
  410a37:	les    esi,FWORD PTR [ecx]
  410a39:	mov    al,ds:0x8e460acf
  410a3e:	cs loop 0x4109f2
  410a41:	pop    edi
  410a42:	adc    edi,ebx
  410a44:	inc    ebx
  410a45:	(bad)  
  410a46:	call   0xa9d0:0x84b9a5a7
  410a4d:	leave  
  410a4e:	add    al,0xe6
  410a50:	push   eax
  410a51:	ja     0x410a4f
  410a53:	jnp    0x410a09
  410a55:	out    dx,al
  410a56:	(bad)  
  410a57:	sti    
  410a58:	stos   DWORD PTR es:[edi],eax
  410a59:	inc    esp
  410a5a:	cmp    al,0x57
  410a5c:	retf   0x84e1
  410a5f:	or     eax,0x54d060ec
  410a64:	fst    QWORD PTR [esi-0x16]
  410a67:	and    al,0x8d
  410a69:	pop    ebx
  410a6a:	adc    esp,DWORD PTR [ecx]
  410a6c:	es xor eax,0x17e05a3c
  410a72:	inc    esi
  410a73:	js     0x410a00
  410a75:	(bad)  
  410a77:	sub    cl,BYTE PTR [esi+0x3db48b71]
  410a7d:	sub    al,0x62
  410a7f:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a81:	sti    
  410a82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a83:	inc    esp
  410a84:	add    bh,BYTE PTR [edx+0x70ff82b9]
  410a8a:	jecxz  0x410acd
  410a8c:	dec    ebp
  410a8d:	imul   DWORD PTR [ecx]
  410a8f:	jnp    0x410a3f
  410a91:	xchg   esi,eax
  410a92:	mov    cl,0x24
  410a94:	xchg   ebx,eax
  410a95:	fsubr  DWORD PTR [esi-0x6e]
  410a98:	push   ecx
  410a99:	pop    edx
  410a9a:	or     BYTE PTR [eax*2-0x4acf12ac],al
  410aa1:	xor    BYTE PTR [edx],0xa7
  410aa4:	fmul   DWORD PTR [esi+0x25]
  410aa7:	and    DWORD PTR [ebx],edx
  410aa9:	dec    edx
  410aaa:	pop    esp
  410aab:	int    0xe4
  410aad:	ret    
  410aae:	pop    esi
  410aaf:	xlat   BYTE PTR ds:[ebx]
  410ab0:	ja     0x410b19
  410ab2:	pop    ebp
  410ab3:	outs   dx,DWORD PTR ds:[esi]
  410ab4:	(bad)  
  410ab5:	cmp    ebp,DWORD PTR [edx+ebx*4-0x57e094ae]
  410abc:	jnp    0x410aa2
  410abe:	adc    edi,DWORD PTR [ebp+eax*8-0x4df5be1b]
  410ac5:	jmp    0x1abd639
  410aca:	jno    0x410abb
  410acc:	xor    eax,0x39c12514
  410ad1:	(bad)  
  410ad2:	mov    WORD PTR [ebp+0x72],?
  410ad5:	fwait
  410ad6:	add    eax,DWORD PTR [eax-0x1ac7f331]
  410adc:	inc    ecx
  410add:	aas    
  410ade:	jmp    0x8bee5538
  410ae3:	jns    0x410afe
  410ae5:	das    
  410ae6:	sub    al,al
  410ae8:	jbe    0x410aac
  410aea:	sub    DWORD PTR [edi-0x78],esi
  410aed:	and    BYTE PTR [edx],bh
  410aef:	fs sbb al,dh
  410af2:	sbb    eax,0x64144b8c
  410af7:	iret   
  410af8:	dec    BYTE PTR [ebp+0x10]
  410afb:	(bad)  
  410afc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410afd:	sbb    DWORD PTR [eax+esi*4],esi
  410b00:	mov    edi,0xd7af3d9f
  410b05:	xor    DWORD PTR [ecx],ebp
  410b07:	xchg   ebp,esp
  410b09:	xchg   ebp,eax
  410b0a:	fsubr  st(4),st
  410b0c:	imul   esi,DWORD PTR [edi+0x79],0x3a
  410b10:	pop    ss
  410b11:	adc    BYTE PTR [eax+ecx*1-0x259e1030],ch
  410b18:	inc    edx
  410b19:	lods   eax,DWORD PTR ds:[esi]
  410b1a:	lods   eax,DWORD PTR ds:[esi]
  410b1b:	addr16 mov al,ds:0x62f2
  410b1f:	jge    0x410b88
  410b21:	jl     0x410af2
  410b23:	inc    ebx
  410b24:	or     ch,0x6c
  410b27:	rol    DWORD PTR [ebx],cl
  410b29:	lods   eax,DWORD PTR ds:[esi]
  410b2a:	sub    BYTE PTR [edx-0x6a],0x5c
  410b2e:	sahf   
  410b2f:	pop    ecx
  410b30:	shl    DWORD PTR [edx+0x3e],0xa4
  410b34:	popa   
  410b35:	adc    eax,0x4da63dc5
  410b3a:	sub    ebp,DWORD PTR [eax+0x2155b793]
  410b40:	leave  
  410b41:	(bad)  
  410b42:	sub    al,0x96
  410b44:	sbb    ebp,ecx
  410b46:	xlat   BYTE PTR ds:[ebx]
  410b47:	and    DWORD PTR [ebp-0x68447f7],ebp
  410b4d:	fsub   QWORD PTR [esi*1+0xf9e5d11]
  410b54:	and    DWORD PTR [ebx-0x3b],esi
  410b57:	add    bl,BYTE PTR [ecx+0x6d3082a9]
  410b5d:	cs jecxz 0x410b21
  410b60:	ret    
  410b61:	mov    ebx,0x88c61237
  410b66:	aaa    
  410b67:	pop    ds
  410b68:	xor    ch,BYTE PTR [eax]
  410b6a:	rcr    edx,1
  410b6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b6d:	sub    esi,esi
  410b6f:	inc    edi
  410b70:	cmp    esi,ebp
  410b72:	pop    esi
  410b73:	scas   eax,DWORD PTR es:[edi]
  410b74:	outs   dx,BYTE PTR ds:[esi]
  410b75:	cmp    BYTE PTR [edx-0x42067e3b],al
  410b7b:	jge    0x410b29
  410b7d:	adc    eax,0xfc872182
  410b82:	push   0xc18d598e
  410b87:	pop    ds
  410b88:	(bad)  
  410b89:	and    DWORD PTR [ebp+0x7d],ecx
  410b8c:	out    0xb6,eax
  410b8e:	push   edx
  410b8f:	xor    DWORD PTR [ecx+0x7d],eax
  410b92:	(bad)  [edx]
  410b94:	(bad)  
  410b95:	mov    edi,0xd95d3fc
  410b9a:	push   edi
  410b9b:	xchg   edx,eax
  410b9c:	shr    cl,0xd0
  410b9f:	cmp    al,0x38
  410ba1:	xor    eax,DWORD PTR [eax+0x4e7122b]
  410ba7:	and    bh,BYTE PTR [edx+0x27]
  410baa:	inc    esp
  410bab:	inc    esi
  410bac:	repz xchg esp,eax
  410bae:	pop    edi
  410baf:	adc    DWORD PTR gs:[edi],0x3c6ea75d
  410bb6:	mov    DWORD PTR [ecx-0x49112282],ecx
  410bbc:	and    al,0xdf
  410bbe:	repz or DWORD PTR [esi+edx*1+0x6b50098b],esi
  410bc6:	out    0xae,eax
  410bc8:	and    eax,0x9e260f26
  410bcd:	and    ebx,ebx
  410bcf:	adc    edx,DWORD PTR [eax]
  410bd1:	jmp    0xe531fcb6
  410bd6:	mov    ds:0xd022ad1a,eax
  410bdb:	mov    dl,0x36
  410bdd:	iret   
  410bde:	out    dx,al
  410bdf:	push   0xf1ce3d0c
  410be4:	mov    esi,0x425b5ee1
  410be9:	mov    edi,0x78f4601e
  410bee:	mov    DWORD PTR ds:0x87d91d6f,eax
  410bf4:	or     DWORD PTR [edi+ecx*2+0x3],esp
  410bf8:	mov    ds:0x8970dfb1,al
  410bfd:	cmp    esp,DWORD PTR [eax+0x5a]
  410c00:	push   ss
  410c01:	aaa    
  410c02:	inc    esi
  410c03:	daa    
  410c04:	je     0x410c68
  410c06:	ja     0x410c15
  410c08:	cs (bad) 
  410c0a:	lods   al,BYTE PTR ds:[esi]
  410c0b:	xor    DWORD PTR ds:0x1dbe619,eax
  410c11:	sar    BYTE PTR ds:0x5983458f,0xda
  410c18:	repz fcmovu st,st(7)
  410c1b:	pcmpgtw mm1,QWORD PTR [ebx]
  410c1e:	sbb    esp,esp
  410c20:	sub    ch,ah
  410c22:	ret    
  410c23:	aaa    
  410c24:	and    al,bl
  410c26:	sub    edi,ecx
  410c28:	xchg   ebx,eax
  410c29:	and    eax,0xb1f7ebe9
  410c2e:	jle    0x410c40
  410c30:	mov    bh,0x6a
  410c32:	sbb    bh,cl
  410c34:	sub    DWORD PTR [esi+0x283d2153],ebp
  410c3a:	inc    esi
  410c3b:	jl     0x410c86
  410c3d:	and    bh,BYTE PTR [edi]
  410c3f:	jns    0x410c5a
  410c41:	pop    esi
  410c42:	scas   eax,DWORD PTR es:[edi]
  410c43:	pop    esp
  410c44:	aas    
  410c45:	add    edi,DWORD PTR [edx+eax*1-0x4fa0bc68]
  410c4c:	inc    esi
  410c4d:	aad    0x5
  410c4f:	xchg   edi,eax
  410c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c51:	or     bh,BYTE PTR [eax+0x33]
  410c54:	lock dec ebx
  410c56:	inc    ebx
  410c57:	in     eax,0x27
  410c59:	pop    edi
  410c5a:	test   BYTE PTR [ebx-0x79],ch
  410c5d:	push   esp
  410c5e:	add    BYTE PTR [esi],dh
  410c60:	add    eax,0x8ece1c6f
  410c65:	outs   dx,BYTE PTR ds:[esi]
  410c66:	mov    ecx,0xb773d937
  410c6b:	(bad)  
  410c6c:	mov    ebp,0x5162f221
  410c71:	mov    esp,edx
  410c73:	addr16 jg 0x410c49
  410c76:	pushf  
  410c77:	ret    
  410c78:	xchg   ebx,eax
  410c79:	ret    0x20e2
  410c7c:	push   ecx
  410c7d:	scas   al,BYTE PTR es:[edi]
  410c7e:	into   
  410c7f:	shr    al,0x2d
  410c82:	jno    0x410c74
  410c84:	jmp    0x9740:0xcbbf2771
  410c8b:	test   eax,0x8cc7077f
  410c90:	push   0xae9f33c7
  410c95:	test   dh,0xef
  410c98:	fxch   st(2)
  410c9a:	les    ecx,FWORD PTR [eax-0x4d3a2668]
  410ca0:	pop    esp
  410ca1:	xchg   edi,eax
  410ca2:	iret   
  410ca3:	jmp    0xf369:0x7aff88b3
  410caa:	mov    bh,0x18
  410cac:	cwde   
  410cad:	out    0xb8,al
  410caf:	jmp    0x14110375
  410cb4:	fucomp st(4)
  410cb6:	ins    BYTE PTR es:[edi],dx
  410cb7:	add    bh,BYTE PTR [ebx+0x18]
  410cba:	inc    edx
  410cbb:	cli    
  410cbc:	adc    al,0x28
  410cbe:	mov    edx,ebx
  410cc0:	repz (bad) 
  410cc2:	int3   
  410cc3:	into   
  410cc4:	inc    ebp
  410cc5:	jp     0x410cdd
  410cc7:	paddb  mm2,QWORD PTR [edx]
  410cca:	int    0x61
  410ccc:	test   BYTE PTR [edi+0x11ddf693],dl
  410cd2:	pop    ecx
  410cd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cd4:	inc    esp
  410cd5:	jns    0x410cc5
  410cd7:	jmp    0x1e36:0x1e2d7981
  410cde:	hlt    
  410cdf:	sbb    al,0x2b
  410ce1:	jbe    0x410d24
  410ce3:	pop    eax
  410ce4:	mov    ebp,0x98c2c89d
  410ce9:	das    
  410cea:	mov    eax,0x66d7ddf0
  410cef:	xchg   edi,eax
  410cf0:	shl    DWORD PTR [edx-0x75],1
  410cf3:	aaa    
  410cf4:	inc    ebx
  410cf5:	shr    DWORD PTR [ecx-0x37],1
  410cf8:	push   ecx
  410cf9:	in     al,dx
  410cfa:	in     al,dx
  410cfb:	xchg   bl,ch
  410cfd:	aas    
  410cfe:	call   0x4c77fd6c
  410d03:	dec    esi
  410d04:	test   DWORD PTR [esi-0x31],0xbb858bc6
  410d0b:	cmp    al,0xb4
  410d0d:	push   ebp
  410d0e:	loope  0x410cb9
  410d10:	nop
  410d11:	or     al,0x1
  410d13:	add    ebx,DWORD PTR [eax+0x2113508e]
  410d19:	mov    edx,0x5f275fb2
  410d1e:	mov    al,0x66
  410d20:	mov    dl,0x33
  410d22:	inc    ecx
  410d23:	sub    eax,0xb63b2ff0
  410d28:	ss jp  0x410ce8
  410d2b:	xor    cl,dl
  410d2d:	dec    ebp
  410d2e:	jno    0x410cd7
  410d30:	lahf   
  410d31:	arpl   WORD PTR [edi+0x25],si
  410d34:	xchg   edi,eax
  410d35:	stc    
  410d36:	dec    edx
  410d37:	xchg   esi,eax
  410d38:	push   edx
  410d39:	je     0x410d2e
  410d3b:	adc    DWORD PTR [eax],ebp
  410d3d:	ins    BYTE PTR es:[edi],dx
  410d3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d3f:	push   ds
  410d40:	retf   
  410d41:	jnp    0x410d97
  410d43:	add    ch,al
  410d45:	sbb    DWORD PTR [esi],eax
  410d47:	dec    ecx
  410d48:	jnp    0x410ce5
  410d4a:	pop    ss
  410d4b:	mov    ebp,0x2362c6c6
  410d50:	cdq    
  410d51:	(bad)  
  410d52:	mov    al,0xf7
  410d54:	push   0xf71f109b
  410d59:	mov    dh,0x4c
  410d5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d5c:	mov    cl,0xac
  410d5e:	and    eax,0x597eb911
  410d63:	sub    al,0xe5
  410d65:	adc    edx,DWORD PTR [edi+0x43]
  410d68:	xchg   BYTE PTR [ebx],dl
  410d6a:	les    ebx,FWORD PTR [ebx-0x26ea8a55]
  410d70:	inc    esi
  410d71:	out    dx,al
  410d72:	ins    DWORD PTR es:[edi],dx
  410d73:	adc    dh,BYTE PTR [edx]
  410d75:	outs   dx,DWORD PTR ds:[esi]
  410d76:	inc    eax
  410d77:	popf   
  410d78:	dec    esp
  410d79:	hlt    
  410d7a:	outs   dx,DWORD PTR ds:[esi]
  410d7b:	pop    ds
  410d7c:	(bad)  
  410d7d:	xchg   esp,eax
  410d7e:	cld    
  410d7f:	mov    bh,dh
  410d81:	ret    
  410d82:	(bad)  
  410d83:	push   0xf3e50ac2
  410d88:	icebp  
  410d89:	xor    al,0x77
  410d8b:	jo     0x410d64
  410d8d:	sbb    bp,WORD PTR ds:0x528c6304
  410d94:	test   eax,0x87772bc0
  410d99:	adc    DWORD PTR [eax+ebx*2+0x23776867],ebx
  410da0:	jecxz  0x410e04
  410da2:	ins    DWORD PTR es:[edi],dx
  410da3:	ja     0x410d5e
  410da5:	jmp    0xfce:0xe040d75
  410dac:	add    BYTE PTR [edi+eax*1],bl
  410daf:	mov    cl,0xeb
  410db1:	sub    BYTE PTR [ebx],bl
  410db3:	mov    ds:0x92e5ced9,eax
  410db8:	jecxz  0x410deb
  410dba:	push   edx
  410dbb:	dec    ebp
  410dbc:	sbb    dh,al
  410dbe:	dec    esp
  410dbf:	jb     0x410de5
  410dc1:	sub    DWORD PTR [ebx+ebx*8+0x3],ecx
  410dc5:	arpl   WORD PTR [esi-0x66252ab3],di
  410dcb:	out    dx,eax
  410dcc:	in     al,0x9b
  410dce:	aad    0x35
  410dd0:	pushf  
  410dd1:	rol    esi,1
  410dd3:	ret    0x1827
  410dd6:	xor    eax,0x7518c907
  410ddb:	paddd  mm4,mm6
  410dde:	or     bl,ah
  410de0:	fdivr  st(0),st
  410de2:	mov    ds:0x7c657820,al
  410de7:	in     al,0xb8
  410de9:	dec    edx
  410dea:	enter  0x1abb,0x3c
  410dee:	push   0xffffff90
  410df0:	das    
  410df1:	jo     0xbdd3ff5b
  410df7:	xor    edx,eax
  410df9:	fdivr  DWORD PTR [edx-0x50f7656f]
  410dff:	mov    bh,0x50
  410e01:	add    bh,ch
  410e03:	push   edi
  410e04:	leave  
  410e05:	dec    edi
  410e06:	(bad)  
  410e07:	pop    esi
  410e08:	mov    ds,WORD PTR [edi-0x6]
  410e0b:	dec    ebx
  410e0c:	and    ch,BYTE PTR [esp+edi*1-0x7953498]
  410e13:	mov    esp,0xc60514df
  410e18:	iret   
  410e19:	jmp    FWORD PTR [eax+0x2b6d7351]
  410e1f:	dec    esp
  410e20:	mov    bl,0x7f
  410e22:	inc    ebp
  410e23:	(bad)  
  410e24:	in     al,dx
  410e25:	mov    ecx,0x8dcb47d9
  410e2a:	and    eax,0xaa909987
  410e2f:	or     dl,BYTE PTR [ecx+0xe78ae97]
  410e35:	sub    DWORD PTR [eax+0x4408eeac],esp
  410e3b:	imul   ecx,DWORD PTR [edx],0x9559d240
  410e41:	add    ecx,edi
  410e43:	cmp    DWORD PTR [edi-0x48],0x580e534b
  410e4a:	addr16 call 0x2fd02bfe
  410e50:	rcr    BYTE PTR [ebx],cl
  410e52:	push   es
  410e53:	xor    bh,BYTE PTR [edi+edi*4-0x52c053e3]
  410e5a:	and    ebx,DWORD PTR [eax+0x18]
  410e5d:	ret    0xec1b
  410e60:	ss in  eax,0xc4
  410e63:	mov    eax,0x3eef0043
  410e68:	je     0x410e6f
  410e6a:	je     0x410eaa
  410e6c:	mov    dh,0xab
  410e6e:	mov    ds:0x9fee11e6,al
  410e73:	test   BYTE PTR [eax],dh
  410e75:	les    eax,FWORD PTR [eax+0x1a]
  410e78:	pop    edi
  410e79:	pop    ds
  410e7a:	add    BYTE PTR [edi+0x6afb4e30],bh
  410e80:	pushf  
  410e81:	push   ecx
  410e82:	pushf  
  410e83:	out    dx,al
  410e84:	outs   dx,DWORD PTR ds:[esi]
  410e85:	and    DWORD PTR [eax-0x21a6cdb0],ebp
  410e8b:	sahf   
  410e8c:	popf   
  410e8d:	leave  
  410e8e:	lods   al,BYTE PTR ds:[esi]
  410e8f:	sub    ch,BYTE PTR [esi]
  410e91:	sahf   
  410e92:	fisttp QWORD PTR [ecx-0x6b485f28]
  410e98:	cmp    al,0xfa
  410e9a:	retf   0x15d4
  410e9d:	retf   0xeba
  410ea0:	or     DWORD PTR [edx+0x45876474],esi
  410ea6:	inc    ebp
  410ea7:	mov    ds:0x4547776a,eax
  410eac:	rol    BYTE PTR [ebx],cl
  410eae:	js     0x410ebd
  410eb0:	mov    fs,ebp
  410eb2:	pop    ss
  410eb3:	fistp  QWORD PTR [edi-0x58]
  410eb6:	mov    edi,0x7809f940
  410ebb:	add    al,0x8
  410ebd:	inc    ecx
  410ebe:	or     cl,BYTE PTR ds:0xf0d8d0df
  410ec4:	inc    edx
  410ec5:	sar    BYTE PTR [esp+ecx*4-0x3a],cl
  410ec9:	retf   0xc5e4
  410ecc:	mov    DWORD PTR [ebx+0x5e917de6],ebp
  410ed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ed3:	ins    BYTE PTR es:[edi],dx
  410ed4:	inc    edx
  410ed5:	and    eax,0xe577ff50
  410eda:	pop    esi
  410edb:	cmp    edx,esp
  410edd:	adc    eax,0xd579b220
  410ee2:	(bad)  
  410ee3:	(bad)  
  410ee4:	jp     0x410e99
  410ee6:	pop    ebx
  410ee7:	retf   0x6652
  410eea:	mov    esp,DWORD PTR [eax+0x52]
  410eed:	inc    eax
  410eee:	test   eax,0x60c1b26d
  410ef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ef4:	(bad)  
  410ef5:	gs mov eax,0x2ae9dbc1
  410efb:	jmp    0x410e98
  410efd:	xchg   esp,eax
  410efe:	call   0xae1e:0xad7cc508
  410f05:	sbb    eax,0x5b43c4be
  410f0a:	add    eax,0xd73f5e86
  410f0f:	xor    BYTE PTR [ecx-0x2488905],bh
  410f15:	xor    BYTE PTR ds:0x1d577c90,ah
  410f1b:	dec    ebp
  410f1c:	or     DWORD PTR [ecx+0x7d779dcd],esp
  410f22:	in     al,0xd9
  410f24:	jp     0x410f9e
  410f26:	(bad)  
  410f27:	repz retf 0xf14c
  410f2b:	es jae 0x410f7b
  410f2e:	pop    ecx
  410f2f:	jmp    0x410f5d
  410f31:	xchg   edi,eax
  410f32:	jmp    0x410f6d
  410f34:	pop    esi
  410f35:	icebp  
  410f36:	fcomp  QWORD PTR [edx+eax*2]
  410f39:	adc    DWORD PTR [ebx],esp
  410f3b:	aas    
  410f3c:	or     al,0x5c
  410f3e:	xor    DWORD PTR [eax-0x1ef61b0e],esp
  410f44:	jecxz  0x410eef
  410f46:	fild   WORD PTR [esi-0x56]
  410f49:	mov    esi,0x8106ceb4
  410f4e:	in     eax,dx
  410f4f:	sub    edx,esp
  410f51:	mov    edi,0xa5b9acf8
  410f56:	cmc    
  410f57:	mov    eax,?
  410f59:	xchg   edx,eax
  410f5a:	aas    
  410f5b:	xchg   esi,eax
  410f5c:	mov    ds:0x1195de7e,al
  410f61:	loop   0x410f64
  410f63:	cmc    
  410f64:	push   eax
  410f65:	sbb    al,0xbd
  410f67:	(bad)  
  410f69:	fbstp  TBYTE PTR es:[eax+eiz*1-0x3e]
  410f6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f6f:	push   es
  410f70:	pop    edx
  410f71:	dec    edi
  410f72:	je     0x410fe9
  410f74:	test   eax,0xf4c3d9b5
  410f79:	push   0xbf2c3bd2
  410f7e:	lock mov ds:0xd2d271d9,eax
  410f84:	push   ebx
  410f85:	data16 in al,dx
  410f87:	dec    ebx
  410f88:	out    dx,eax
  410f89:	outs   dx,DWORD PTR ds:[esi]
  410f8a:	jmp    DWORD PTR [esi]
  410f8c:	cmovns esi,DWORD PTR [edi-0x20]
  410f90:	mov    cs,WORD PTR [ecx+eiz*1]
  410f93:	jne    0x410f3a
  410f95:	imul   edi,DWORD PTR [ebx+0x708258bd],0x551b676c
  410f9f:	cmp    al,0xfe
  410fa1:	call   0xda97:0x8cf65536
  410fa8:	leave  
  410fa9:	add    BYTE PTR [eax-0x1c29dd3],0x16
  410fb0:	mov    dl,0xef
  410fb2:	sahf   
  410fb3:	inc    BYTE PTR [edx+0x580aac0c]
  410fb9:	retf   0x5f03
  410fbc:	test   eax,0x48b68250
  410fc1:	xor    eax,0x1f18271d
  410fc6:	std    
  410fc7:	fs leave 
  410fc9:	icebp  
  410fca:	ss dec ebx
  410fcc:	add    eax,0x93a39d13
  410fd1:	xor    ch,BYTE PTR [ecx+0x134f3761]
  410fd7:	shl    BYTE PTR [ebx+0x6d],1
  410fda:	xlat   BYTE PTR ds:[ebx]
  410fdb:	push   esi
  410fdc:	push   eax
  410fdd:	leave  
  410fde:	jo     0x410f72
  410fe0:	out    0x25,al
  410fe2:	mov    eax,ds:0x8a3adc32
  410fe7:	sub    bh,dh
  410fe9:	neg    DWORD PTR [edi+0x5a]
  410fec:	rol    DWORD PTR [ebx+0x29b63230],cl
  410ff2:	pushf  
  410ff3:	or     DWORD PTR [edi-0x42],edx
  410ff6:	sub    ebx,DWORD PTR [edi+0x2]
  410ff9:	out    0xa9,eax
  410ffb:	push   ebp
  410ffc:	and    BYTE PTR [ecx-0x2cfddfcf],ch
  411002:	jecxz  0x410f9b
  411004:	in     al,0xc5
  411006:	jg     0x41104d
  411008:	stos   BYTE PTR es:[edi],al
  411009:	aas    
  41100a:	lods   eax,DWORD PTR ds:[esi]
  41100b:	jo     0x410fc8
  41100d:	iret   
  41100e:	int3   
  41100f:	xchg   BYTE PTR [ebx-0x411997cd],ah
  411015:	pop    ss
  411016:	jno    0x411076
  411018:	or     al,BYTE PTR [eax]
  41101a:	or     al,0x22
  41101c:	inc    ecx
  41101d:	mov    esi,0x235f2dea
  411022:	mov    dl,0x8a
  411024:	mov    bh,0x34
  411026:	ins    BYTE PTR es:[edi],dx
  411027:	sbb    dh,al
  411029:	shl    DWORD PTR [ebp+0x25bd2e43],0x68
  411030:	jo     0x410fce
  411032:	(bad)  
  411033:	rcr    BYTE PTR [esi],1
  411035:	jo     0x410fec
  411037:	loope  0x411050
  411039:	xchg   edi,eax
  41103a:	xor    bh,BYTE PTR [ebx+0x5a]
  41103d:	pushf  
  41103e:	popf   
  41103f:	repnz push ebx
  411041:	or     BYTE PTR [ebx],0xf
  411044:	adc    BYTE PTR [edx+0x4c],0x29
  411048:	out    dx,al
  411049:	and    DWORD PTR [edi*2+0x1b1a7149],edi
  411050:	loop   0x411019
  411052:	inc    esi
  411053:	ins    BYTE PTR es:[edi],dx
  411054:	xor    al,0x79
  411056:	in     al,dx
  411057:	test   DWORD PTR [ebx+ecx*8+0x17cde407],0x8519b6b3
  411062:	enter  0xac03,0x84
  411066:	ja     0x4110a3
  411068:	push   esp
  411069:	rcl    BYTE PTR [ebp-0x14e1c31a],cl
  41106f:	dec    esi
  411070:	pop    es
  411071:	mov    ecx,0x3522a09d
  411076:	mov    eax,ds:0xc209f4a4
  41107b:	jb     0x411011
  41107d:	int    0x34
  41107f:	sub    ebp,ebp
  411081:	int    0x53
  411083:	push   cs
  411084:	dec    esp
  411085:	rol    BYTE PTR [edi+0x7],0xd1
  411089:	mov    al,ds:0xb4774543
  41108e:	scas   al,BYTE PTR es:[edi]
  41108f:	aaa    
  411090:	icebp  
  411091:	jns    0x4110c3
  411093:	aas    
  411094:	mov    eax,0xa7a2a045
  411099:	and    eax,0x4d842f4d
  41109e:	imul   esp,ebp,0xe43ffe5b
  4110a4:	push   0xffffffe5
  4110a6:	pop    edi
  4110a7:	jp     0x411085
  4110a9:	adc    DWORD PTR [esi-0xaaccac4],ebp
  4110af:	push   0xa68853f3
  4110b4:	mov    esp,DWORD PTR [edi+0x45]
  4110b7:	lock int 0x5e
  4110ba:	je     0x41108e
  4110bc:	push   0x48cc7a3f
  4110c1:	pop    ss
  4110c2:	cmp    dl,BYTE PTR [esi-0x28a606dd]
  4110c8:	jmp    0x91aa2687
  4110cd:	aam    0x70
  4110cf:	jmp    0x41109f
  4110d1:	inc    esp
  4110d2:	mov    ss,WORD PTR [esi-0x517a880c]
  4110d8:	jp     0x4110db
  4110da:	pushf  
  4110db:	int    0x62
  4110dd:	xchg   DWORD PTR [edx],ebx
  4110df:	and    edi,DWORD PTR [edi+0x50]
  4110e2:	test   al,0x73
  4110e4:	inc    ebp
  4110e5:	mov    ds:0xd290c2d1,al
  4110ea:	out    0xad,eax
  4110ec:	sub    eax,0xcf3b1e09
  4110f1:	mov    al,ds:0xd1b1870f
  4110f6:	jle    0x411081
  4110f8:	adc    esi,DWORD PTR [ebp-0x1]
  4110fb:	dec    esi
  4110fc:	jg     0x41115b
  4110fe:	aas    
  4110ff:	in     al,0x4a
  411101:	inc    ebp
  411102:	xchg   edx,eax
  411103:	or     esp,DWORD PTR [edi]
  411105:	stos   BYTE PTR es:[edi],al
  411106:	pop    ebx
  411107:	inc    edx
  411108:	mov    eax,ds:0xcffe01d0
  41110d:	(bad)  
  41110e:	jns    0x41118c
  411110:	push   ebp
  411111:	daa    
  411112:	fidivr DWORD PTR [ebp-0x3c9a998e]
  411118:	inc    ecx
  411119:	ins    DWORD PTR es:[edi],dx
  41111a:	outs   dx,BYTE PTR cs:[esi]
  41111c:	rcr    DWORD PTR [esi-0x17],0xa7
  411120:	lea    edx,[ecx+0x16]
  411123:	daa    
  411124:	adc    DWORD PTR [ecx+0x76],0xffffffb7
  411128:	pop    esi
  411129:	rcl    DWORD PTR [ecx],0x3b
  41112c:	lods   al,BYTE PTR ds:[esi]
  41112d:	mov    ds,WORD PTR [ecx+0x74]
  411130:	pushf  
  411131:	xchg   edx,eax
  411132:	dec    eax
  411133:	pop    esi
  411134:	fidivr WORD PTR [ecx-0x189df97b]
  41113a:	call   0xb6011265
  41113f:	mov    bl,0x9f
  411141:	fs loope 0x411162
  411144:	sar    eax,0xf
  411147:	or     eax,DWORD PTR [edx-0x22]
  41114a:	mov    esi,0xff7e7260
  41114f:	push   ebx
  411150:	add    BYTE PTR [esp+eiz*8-0x3765bd41],dl
  411157:	sbb    DWORD PTR [eax+esi*4],0x70229340
  41115e:	mov    esi,0xc233c1ee
  411163:	mov    ah,0x10
  411165:	cld    
  411166:	xor    ecx,DWORD PTR [ebp+0x48]
  411169:	mov    cl,0x3d
  41116b:	nop
  41116c:	mov    esi,0x4771896d
  411171:	(bad)  
  411172:	adc    edx,ebp
  411174:	clc    
  411175:	ret    0xd9fb
  411178:	repnz shl DWORD PTR [eax+0x5c4935c7],0x56
  411180:	pop    esp
  411181:	cdq    
  411182:	shr    BYTE PTR [ecx],cl
  411184:	test   eax,0x23b073a9
  411189:	cmp    edx,DWORD PTR [ebp-0x4a]
  41118c:	cli    
  41118d:	je     0x41117a
  41118f:	jb     0x411203
  411191:	pop    ebx
  411192:	jmp    0x76de3f0f
  411197:	or     edi,esp
  411199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41119a:	mov    esp,0xd85aa563
  41119f:	and    esp,DWORD PTR [edi]
  4111a1:	pop    edi
  4111a2:	in     al,0xc2
  4111a4:	push   esi
  4111a5:	pusha  
  4111a6:	or     bl,BYTE PTR [edx]
  4111a8:	hlt    
  4111a9:	sub    DWORD PTR [edi-0x1f],esp
  4111ac:	mov    esp,DWORD PTR [edx+ebx*2]
  4111af:	jecxz  0x41116a
  4111b1:	xor    eax,0x39dbe866
  4111b6:	xor    BYTE PTR [esi],ah
  4111b8:	out    0xfe,al
  4111ba:	mov    edi,0xf59df7b1
  4111bf:	mov    WORD PTR [ebp+ebx*1+0x18],es
  4111c3:	call   0x342c:0x1d6a113
  4111ca:	dec    ebx
  4111cb:	adc    BYTE PTR [edx-0x434bbdd2],bl
  4111d1:	or     esi,DWORD PTR [ebp-0x76fe78c1]
  4111d7:	and    BYTE PTR [ebx],al
  4111d9:	xor    bl,BYTE PTR [esi+0x3]
  4111dc:	sti    
  4111dd:	scas   eax,DWORD PTR es:[edi]
  4111de:	in     al,dx
  4111df:	mov    ah,0x48
  4111e1:	or     eax,0xa760273
  4111e6:	(bad)
  4111ea:	sub    BYTE PTR [ebx-0x48],bh
  4111ed:	leave  
  4111ee:	cmc    
  4111ef:	push   edx
  4111f0:	push   es
  4111f1:	clc    
  4111f2:	jbe    0x4111b2
  4111f4:	push   edx
  4111f5:	loope  0x41121e
  4111f7:	push   ebx
  4111f8:	loope  0x4111d8
  4111fa:	mov    edx,DWORD PTR [edx-0x203e0483]
  411200:	sbb    ecx,ebp
  411202:	cli    
  411203:	(bad)  
  411204:	xchg   ecx,eax
  411205:	inc    eax
  411206:	cmp    ebp,DWORD PTR [eax+eax*1-0x72]
  41120a:	lock pop edi
  41120c:	pop    esp
  41120d:	mov    DWORD PTR [edx+0x55],0x8a032fc3
  411214:	adc    BYTE PTR [ebx],cl
  411216:	sbb    bl,bh
  411218:	mov    eax,0x70dab311
  41121d:	daa    
  41121e:	xchg   DWORD PTR [edx-0x3c580ed1],edx
  411224:	mov    esi,0x2658d12f
  411229:	adc    al,0xe8
  41122b:	loope  0x411235
  41122d:	adc    esp,eax
  41122f:	in     eax,0xf6
  411231:	pop    edi
  411232:	idiv   ecx
  411234:	aaa    
  411235:	and    al,0xf6
  411237:	xchg   edx,eax
  411238:	dec    esi
  411239:	sbb    bh,0x4b
  41123c:	popa   
  41123d:	jmp    0xabf3:0x4b93f581
  411244:	add    DWORD PTR [ecx],edi
  411246:	loopne 0x41123f
  411248:	shl    BYTE PTR [ecx],1
  41124a:	ins    BYTE PTR es:[edi],dx
  41124b:	in     eax,dx
  41124c:	enter  0xec18,0x55
  411250:	xchg   esp,eax
  411251:	xchg   edx,eax
  411252:	jmp    0x4111f6
  411254:	xor    eax,0x13a4bf9d
  411259:	jg     0x41128b
  41125b:	push   ds
  41125c:	stos   BYTE PTR es:[edi],al
  41125d:	sub    DWORD PTR [ebp+0x1b21671c],eax
  411263:	fnstcw WORD PTR [edi+0x71]
  411266:	lahf   
  411267:	add    edx,eax
  411269:	hlt    
  41126a:	jmp    0xc953:0x971d86b7
  411271:	cmp    BYTE PTR [edi],dh
  411273:	fst    QWORD PTR [edx+0x7449124e]
  411279:	fsubr  QWORD PTR [edx+0x3c0d6cc1]
  41127f:	sbb    esi,ecx
  411281:	stos   DWORD PTR es:[edi],eax
  411282:	sbb    ch,bl
  411284:	push   ds
  411285:	js     0x41122e
  411287:	lea    ebp,[esi-0x2d]
  41128a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41128b:	xchg   esp,eax
  41128c:	sbb    DWORD PTR [eax],esi
  41128e:	jp     0x41128a
  411290:	pop    ds
  411291:	mov    ch,0x10
  411293:	fldcw  WORD PTR [esi-0x5d4ac76]
  411299:	mov    DWORD PTR [eax],edi
  41129b:	pop    ebx
  41129c:	mov    ds:0x87dfe9a7,al
  4112a1:	pop    ebx
  4112a2:	pop    ebp
  4112a3:	fmul   st,st(7)
  4112a5:	bound  esp,QWORD PTR [edi+0x3e]
  4112a8:	mov    ch,0xa1
  4112aa:	cwde   
  4112ab:	sub    al,BYTE PTR [ebp+eiz*2+0x5a894755]
  4112b2:	add    DWORD PTR [ebx+0x21],esi
  4112b5:	and    eax,0x588e5581
  4112ba:	sub    bl,BYTE PTR [edx]
  4112bc:	pop    esi
  4112bd:	mov    ebx,0x56c4662d
  4112c2:	xor    BYTE PTR [edi],bl
  4112c4:	dec    ebx
  4112c5:	dec    ebp
  4112c6:	popf   
  4112c7:	outs   dx,BYTE PTR ds:[esi]
  4112c8:	lods   al,BYTE PTR ds:[esi]
  4112c9:	pop    ebp
  4112ca:	pushf  
  4112cb:	(bad)  
  4112cc:	push   ds
  4112cd:	inc    edx
  4112ce:	or     al,0xd2
  4112d0:	adc    ebp,DWORD PTR [edx-0x2d]
  4112d3:	sbb    esp,ecx
  4112d5:	or     BYTE PTR [ebx+0x7f6047ad],bh
  4112db:	push   ebp
  4112dc:	xlat   BYTE PTR ds:[ebx]
  4112dd:	stos   BYTE PTR es:[edi],al
  4112de:	xchg   ebx,eax
  4112df:	adc    BYTE PTR [edx+0x37],dl
  4112e2:	fst    st(4)
  4112e4:	and    ah,BYTE PTR [esi]
  4112e6:	push   eax
  4112e7:	sahf   
  4112e8:	jno    0x4112b0
  4112ea:	mov    ebx,0x52ff91b7
  4112ef:	and    ebx,DWORD PTR [ebp+0x4]
  4112f2:	lods   eax,DWORD PTR ds:[esi]
  4112f3:	dec    eax
  4112f4:	mov    dl,0x3a
  4112f6:	(bad)  
  4112f7:	xor    BYTE PTR [ecx+eiz*2],dl
  4112fa:	cmp    ah,BYTE PTR ds:[edi]
  4112fd:	sahf   
  4112fe:	cmp    cl,dl
  411300:	push   esp
  411301:	std    
  411302:	aad    0x29
  411304:	xchg   ebp,eax
  411305:	imul   ebx,DWORD PTR [ebp+0x53401bb6],0x6169b4e1
  41130f:	mov    cl,0x24
  411311:	loop   0x4112cf
  411313:	in     eax,0xb3
  411315:	sub    ch,BYTE PTR [esi+0xb84cbc6]
  41131b:	pop    ebp
  41131c:	sahf   
  41131d:	int3   
  41131e:	pushf  
  41131f:	imul   eax,DWORD PTR [esp+eax*1+0x56],0x1a393021
  411327:	mov    edx,0x9c14f769
  41132c:	(bad)  
  41132d:	dec    ebx
  41132e:	lods   eax,DWORD PTR ds:[esi]
  41132f:	mov    ebx,0xf171bdb4
  411334:	sbb    ebx,DWORD PTR [ebx]
  411336:	xchg   DWORD PTR [ecx-0x38],eax
  411339:	mov    edx,0xb01a0cb1
  41133e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41133f:	sbb    BYTE PTR [edx-0x4c],cl
  411342:	mov    WORD PTR [ecx],cs
  411344:	lahf   
  411345:	(bad)  [edi-0x476d01c3]
  41134b:	mov    ds:0x8faa3ff6,al
  411350:	loopne 0x4113a7
  411352:	xor    al,0x3d
  411354:	push   esi
  411355:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411356:	popa   
  411357:	leave  
  411358:	call   0x6c9:0x27a578e5
  41135f:	(bad)  
  411360:	imul   esp,DWORD PTR [edx],0xffffffb1
  411363:	xchg   edx,eax
  411364:	dec    esp
  411365:	xchg   BYTE PTR [ebp-0x53d808e2],al
  41136b:	adc    esi,DWORD PTR [eax]
  41136d:	jne    0x4113df
  41136f:	rol    BYTE PTR [eax+ebx*8+0x2c89934b],1
  411376:	add    DWORD PTR [eax-0x48f052e8],edi
  41137c:	fdiv   st,st(3)
  41137e:	mov    al,dh
  411380:	ret    0x8101
  411383:	adc    BYTE PTR [ecx+0x59],0x50
  411387:	ds fwait
  411389:	popa   
  41138a:	jmp    0x9223:0x2512c820
  411391:	sub    DWORD PTR [ebp+ebx*1+0x8d73e97],edi
  411398:	ret    
  411399:	push   ds
  41139a:	adc    al,0x60
  41139c:	loope  0x411341
  41139e:	lods   eax,DWORD PTR ds:[esi]
  41139f:	add    bh,BYTE PTR [eax+ecx*8+0x52]
  4113a3:	push   ecx
  4113a4:	jg     0x4113dd
  4113a6:	jb     0x4113a3
  4113a8:	inc    ecx
  4113a9:	sbb    DWORD PTR [eax+eiz*1],esi
  4113ac:	add    edi,ecx
  4113ae:	pop    ebx
  4113af:	add    eax,0xad811e2e
  4113b4:	imul   ebx,DWORD PTR [ecx],0xf52bdbc2
  4113ba:	adc    bh,bl
  4113bc:	ror    DWORD PTR ds:0xd9462d73,cl
  4113c2:	push   0x59
  4113c4:	fwait
  4113c5:	ds es pushaw 
  4113c9:	and    eax,0x7a508bc
  4113ce:	and    BYTE PTR [esi-0x6f26cba8],al
  4113d4:	dec    eax
  4113d5:	cmp    bh,ch
  4113d7:	aaa    
  4113d8:	add    DWORD PTR [ecx],ebx
  4113da:	jns    0x411383
  4113dc:	jne    0x41139b
  4113de:	out    0xb3,eax
  4113e0:	pop    edx
  4113e1:	scas   al,BYTE PTR es:[edi]
  4113e2:	rol    dl,0xe1
  4113e5:	scas   eax,DWORD PTR es:[edi]
  4113e6:	fs inc eax
  4113e8:	test   DWORD PTR [ebx+0x7e],esp
  4113eb:	push   esi
  4113ec:	scas   eax,DWORD PTR es:[edi]
  4113ed:	dec    edx
  4113ee:	jns    0x41142e
  4113f0:	push   esp
  4113f1:	mov    edi,0xb336fdb0
  4113f6:	clc    
  4113f7:	jae    0x411476
  4113f9:	ja     0x411423
  4113fb:	div    BYTE PTR [esi-0x7e4d9b40]
  411401:	test   al,0xe3
  411403:	xchg   esp,eax
  411404:	dec    esi
  411405:	(bad)  
  411406:	repnz mov bh,0x77
  411409:	ret    
  41140a:	inc    edx
  41140b:	(bad)  
  41140c:	les    eax,FWORD PTR [edi+ebx*4]
  41140f:	jnp    0x41144b
  411411:	test   eax,0x19900514
  411416:	mov    ebx,0xe5ecc184
  41141b:	mov    BYTE PTR [ebx+0x17],al
  41141e:	mov    ebp,0xf2574ae6
  411423:	sbb    eax,0x6fc28cb7
  411428:	inc    eax
  411429:	inc    ebp
  41142a:	fcmove st,st(2)
  41142c:	popf   
  41142d:	aam    0x22
  41142f:	ja     0x411454
  411431:	adc    DWORD PTR [ecx-0x26a25303],edx
  411437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411438:	dec    esp
  411439:	sub    eax,0x9f797101
  41143e:	les    esi,FWORD PTR [esi-0x42]
  411441:	call   0xe5e31b75
  411446:	mov    eax,ds:0x59f48875
  41144b:	jo     0x41143f
  41144d:	cmp    BYTE PTR [esp+ecx*4-0x6d],ah
  411451:	xor    BYTE PTR [ebx+0x138023b5],0x2f
  411458:	pop    es
  411459:	sub    bh,BYTE PTR [edi-0x261e7973]
  41145f:	je     0x4113e8
  411461:	outs   dx,BYTE PTR ds:[esi]
  411462:	je     0x411457
  411464:	pop    ecx
  411465:	xchg   ebp,eax
  411466:	push   eax
  411467:	cdq    
  411468:	and    al,0x4b
  41146a:	xor    esi,DWORD PTR [edi]
  41146c:	or     ebx,0xf85a5f6
  411472:	jecxz  0x41142c
  411474:	imul   ecx,DWORD PTR [esi-0xaf55c84],0xb66a0bd8
  41147e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41147f:	mov    ah,0x9a
  411481:	jo     0x41146b
  411483:	sub    ah,dh
  411485:	scas   al,BYTE PTR es:[edi]
  411486:	fidivr WORD PTR [edi]
  411488:	test   DWORD PTR [esi],0xc5713033
  41148e:	paddw  mm1,QWORD PTR [ecx+0xe]
  411492:	loopne 0x4114e6
  411494:	aam    0xdd
  411496:	sub    edx,DWORD PTR [esi]
  411498:	fsubrp st(2),st
  41149a:	inc    ebp
  41149b:	and    BYTE PTR [ebx],dl
  41149d:	mov    BYTE PTR [eax],bh
  41149f:	sub    BYTE PTR [edx-0x57f19899],ah
  4114a5:	xchg   ebx,eax
  4114a6:	push   ebx
  4114a7:	pop    edx
  4114a8:	cmp    cl,BYTE PTR [ecx+0x3b]
  4114ab:	mov    eax,0xfa44bf9e
  4114b0:	in     al,0x11
  4114b2:	jb     0x41146d
  4114b4:	push   0xd9cc4a0d
  4114b9:	inc    ecx
  4114ba:	mov    bh,bh
  4114bc:	rol    DWORD PTR [esi+0x4254f6c8],cl
  4114c2:	sbb    al,0x9d
  4114c4:	jl     0x4114af
  4114c6:	test   ch,ah
  4114c8:	push   ebp
  4114c9:	push   esp
  4114ca:	aad    0x42
  4114cc:	pop    ds
  4114cd:	int    0x17
  4114cf:	arpl   WORD PTR [edx],di
  4114d1:	and    edi,ecx
  4114d3:	mov    al,ds:0xf68f9ff5
  4114d8:	mov    edx,0xf180b760
  4114dd:	ss hlt 
  4114df:	fisub  WORD PTR [ebx]
  4114e1:	jg     0x4114fb
  4114e3:	pop    es
  4114e4:	(bad)  
  4114e5:	(bad)  
  4114e6:	int3   
  4114e7:	push   ebp
  4114e8:	cmp    BYTE PTR [eax+esi*2+0x15],ah
  4114ec:	dec    ecx
  4114ed:	jnp    0x4114b0
  4114ef:	call   0x2205b9e6
  4114f4:	or     BYTE PTR [eax+0x38],dh
  4114f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114f8:	mov    eax,0xace3bd04
  4114fd:	mov    eax,ds:0x9e030adc
  411502:	fidiv  WORD PTR [edx-0x20ea3fbb]
  411508:	xor    al,0x4d
  41150a:	js     0x41148f
  41150c:	lods   al,BYTE PTR ds:[esi]
  41150d:	push   ebx
  41150e:	hlt    
  41150f:	cwde   
  411510:	mov    esp,0xddf5f714
  411515:	adc    al,0x71
  411517:	mov    edx,0x39a7e3b1
  41151c:	(bad)  
  41151d:	dec    ecx
  41151e:	add    cl,ah
  411520:	mov    ebp,DWORD PTR [ebp-0x6a]
  411523:	xor    BYTE PTR [ebx],bh
  411525:	jmp    0x7e8d:0x1bfaa4e9
  41152c:	xor    eax,0xc023fa70
  411531:	cwde   
  411532:	jmp    0x41156f
  411534:	popa   
  411535:	outs   dx,DWORD PTR ds:[esi]
  411536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411537:	popa   
  411538:	pop    ebx
  411539:	push   0x77bb8169
  41153e:	push   0xffffffaa
  411540:	(bad)  [edi]
  411542:	gs hlt 
  411544:	rcr    DWORD PTR [eax-0x36],cl
  411547:	call   0xa3411421
  41154c:	fistp  QWORD PTR [ecx-0x6c46bbdb]
  411552:	xlat   BYTE PTR ds:[ebx]
  411553:	(bad)  
  411554:	or     ebx,ebx
  411556:	adc    al,0x8d
  411558:	aam    0x93
  41155a:	mov    eax,ds:0x2349623b
  41155f:	adc    eax,0x5f1cb46e
  411564:	pusha  
  411565:	mov    ebp,DWORD PTR [edi]
  411567:	adc    DWORD PTR [esi+0x49],ebp
  41156a:	fiadd  DWORD PTR ss:[ecx-0xb]
  41156e:	fidiv  DWORD PTR [edi]
  411570:	bound  ebx,QWORD PTR [esi-0x7d]
  411573:	lahf   
  411574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411575:	es out 0xab,al
  411578:	push   edx
  411579:	adc    DWORD PTR [edi],esp
  41157b:	push   edx
  41157c:	mov    ebx,0xb4ddfcf6
  411581:	fist   DWORD PTR [edx+0x56]
  411584:	fnstsw WORD PTR [edi+0x2a5ac3be]
  41158a:	push   cs
  41158b:	(bad)  
  41158c:	out    0xa4,al
  41158e:	jge    0x41153c
  411590:	test   al,0x2f
  411592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411593:	mov    dl,0x6c
  411595:	dec    ebp
  411596:	mov    cl,0x42
  411598:	loopne 0x4115b6
  41159a:	cdq    
  41159b:	mov    ebp,0xab83beb2
  4115a0:	and    eax,0x74e14a13
  4115a5:	ror    BYTE PTR [ebp+0x48],0x8b
  4115a9:	je     0x4115bf
  4115ab:	inc    ebp
  4115ac:	mov    dh,0x64
  4115ae:	or     eax,0xa684b8bb
  4115b3:	dec    ebp
  4115b4:	(bad)  
  4115b5:	push   esp
  4115b6:	sar    BYTE PTR [ecx],cl
  4115b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115b9:	loop   0x4115ab
  4115bb:	jb     0x4115a1
  4115bd:	bound  ebp,QWORD PTR [edi-0x16]
  4115c0:	xchg   esp,eax
  4115c1:	mov    ebx,0xd6915ad
  4115c6:	xchg   ebp,eax
  4115c7:	mov    eax,ds:0x28836702
  4115cc:	dec    ebp
  4115cd:	aas    
  4115ce:	jns    0x411628
  4115d0:	dec    ecx
  4115d1:	call   0x3f04:0x54f16699
  4115d8:	push   ss
  4115d9:	arpl   cx,di
  4115db:	dec    DWORD PTR [edi-0x64]
  4115de:	mov    eax,0xb965874
  4115e3:	dec    edi
  4115e4:	and    DWORD PTR [ebx],esp
  4115e6:	xchg   ecx,eax
  4115e7:	loope  0x4115a6
  4115e9:	call   0x20affdc8
  4115ee:	loopne 0x4115e9
  4115f0:	jle    0x4115f7
  4115f2:	mov    eax,0x235d6206
  4115f7:	add    BYTE PTR [edi-0x5a],ch
  4115fa:	lds    esp,FWORD PTR [ecx+0x78bd3331]
  411600:	xchg   edi,eax
  411601:	div    DWORD PTR [ebx-0x7f]
  411604:	mov    dl,0xde
  411606:	cmp    edi,edi
  411608:	les    edx,FWORD PTR [eax+0x40]
  41160b:	lahf   
  41160c:	pusha  
  41160d:	mov    ds:0x5ce3c8c5,al
  411612:	inc    ecx
  411613:	jae    0x41163b
  411615:	in     al,dx
  411616:	pop    eax
  411617:	sub    DWORD PTR [ebx-0x2],eax
  41161a:	cli    
  41161b:	add    al,0xaa
  41161d:	lock fbstp TBYTE PTR [esi+ebx*1]
  411621:	stos   BYTE PTR es:[edi],al
  411622:	jae    0x411643
  411624:	cld    
  411625:	sub    al,0x0
  411627:	test   eax,0xa2d22a45
  41162c:	mov    bh,0x3
  41162e:	fnstenv ds:0x4040519c
  411634:	xchg   ebx,eax
  411635:	mov    bl,0xe5
  411637:	push   edx
  411638:	xchg   edi,eax
  411639:	in     al,dx
  41163a:	cld    
  41163b:	dec    esp
  41163c:	inc    ebp
  41163d:	ret    0xb1c4
  411640:	aaa    
  411641:	in     eax,0xad
  411643:	loope  0x4116b4
  411645:	(bad)
  411648:	dec    edx
  411649:	loop   0x41166b
  41164b:	mov    cl,0xf2
  41164d:	jbe    0x4116ca
  41164f:	in     eax,dx
  411650:	jno    0x411607
  411652:	ud2    
  411654:	jns    0x41160c
  411656:	sub    ah,BYTE PTR [ecx-0x784a372f]
  41165c:	xlat   BYTE PTR ds:[ebx]
  41165d:	or     BYTE PTR [esi-0x32de7a16],dh
  411663:	ret    0x6224
  411666:	pop    eax
  411667:	shr    al,0x77
  41166a:	or     dl,BYTE PTR [edi]
  41166c:	mov    dl,0x54
  41166e:	or     edi,esp
  411670:	xchg   ecx,eax
  411671:	or     al,0x16
  411673:	push   esi
  411674:	jno    0x411685
  411676:	shr    bl,1
  411678:	mov    bl,0x4f
  41167a:	test   DWORD PTR [ebx+0x378d6440],0x892ce6df
  411684:	retf   
  411685:	les    ebp,FWORD PTR [ebx-0x6392c1b5]
  41168b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41168c:	lea    esp,[ecx]
  41168e:	shl    ah,1
  411690:	sub    cl,BYTE PTR [edx]
  411692:	arpl   WORD PTR ds:0x1e4d4084,cx
  411698:	adc    al,0xe3
  41169a:	sub    BYTE PTR [ebx+0x19],dl
  41169d:	shl    BYTE PTR [ecx-0x6ed62644],1
  4116a3:	test   eax,0x3f0d1bde
  4116a8:	fild   QWORD PTR [edx+0x3aeb9902]
  4116ae:	(bad)  
  4116af:	mov    eax,0x2fd78f99
  4116b4:	aam    0x36
  4116b6:	popa   
  4116b7:	mov    esp,0xe050412f
  4116bc:	ret    
  4116bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116be:	xor    ecx,DWORD PTR [edx]
  4116c0:	iret   
  4116c1:	mov    ebp,DWORD PTR [ecx-0x77f83122]
  4116c7:	sub    ebp,DWORD PTR [ebx+ecx*2]
  4116ca:	mov    bl,ah
  4116cc:	adc    cl,bl
  4116ce:	ds adc eax,0x28559557
  4116d4:	pop    esp
  4116d5:	push   0xc626f1de
  4116da:	gs es jecxz 0x4116fa
  4116de:	add    eax,0xaec004fa
  4116e3:	sub    al,0xfd
  4116e5:	mov    BYTE PTR [eax],bh
  4116e7:	gs int 0xa0
  4116ea:	inc    eax
  4116eb:	jl     0x4116b4
  4116ed:	icebp  
  4116ee:	or     BYTE PTR [eax-0x61276bef],ah
  4116f4:	sbb    eax,ecx
  4116f6:	shl    BYTE PTR [esp+edx*2],cl
  4116f9:	push   ecx
  4116fa:	xchg   ebx,esi
  4116fc:	inc    ecx
  4116fd:	xchg   BYTE PTR cs:[ebx+0x5558e86c],dh
  411704:	lock xor esi,DWORD PTR ss:[esi+eax*1-0x47]
  41170a:	iret   
  41170b:	or     al,0x4a
  41170d:	std    
  41170e:	scas   eax,DWORD PTR es:[edi]
  41170f:	mov    esp,0x96f8fc53
  411714:	call   0xd481:0x24e563bf
  41171b:	mov    esp,0xfe71bfde
  411720:	xor    al,BYTE PTR [ecx+0x21]
  411723:	inc    ecx
  411724:	sbb    ebp,DWORD PTR [edx-0x41]
  411727:	mov    al,0xae
  411729:	and    esi,DWORD PTR [eax]
  41172b:	jge    0x4117a7
  41172d:	push   ebx
  41172e:	mov    al,ds:0x58a211d3
  411733:	repz adc eax,0xa3ed3696
  411739:	in     al,dx
  41173a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41173b:	adc    ebp,ebx
  41173d:	jmp    0x4116c7
  41173f:	es pop ds
  411741:	stos   BYTE PTR es:[edi],al
  411742:	xchg   ebp,eax
  411743:	popf   
  411744:	adc    DWORD PTR [edi+edi*2],0x2332ac90
  41174b:	inc    ebp
  41174c:	imul   esp,DWORD PTR [edx-0x41e726a3],0xffffff80
  411753:	or     esp,ecx
  411755:	gs shr bl,cl
  411758:	and    DWORD PTR ds:0x4776ee3b,ebx
  41175e:	mov    DWORD PTR [esi+0x5a2cd8b],0x1d068860
  411768:	int3   
  411769:	iret   
  41176a:	adc    eax,0x9e93acb7
  41176f:	shl    DWORD PTR [esi],0x1
  411772:	cmp    bh,bh
  411774:	clc    
  411775:	aas    
  411776:	jmp    0xd82b:0xe30413c3
  41177d:	test   DWORD PTR [ecx-0x76],edx
  411780:	int    0x40
  411782:	mov    ebx,DWORD PTR [ecx]
  411784:	push   edi
  411785:	or     ch,BYTE PTR [ecx-0x777fc186]
  41178b:	fs pop ss
  41178d:	pop    ebx
  41178e:	pop    edi
  41178f:	es xor al,0x4f
  411792:	mov    WORD PTR [eax-0x75101117],fs
  411798:	cli    
  411799:	enter  0x988c,0xb1
  41179d:	cwde   
  41179e:	ss jbe 0x411814
  4117a1:	push   es
  4117a2:	mov    al,0x71
  4117a4:	enter  0x8af1,0x85
  4117a8:	aam    0xc4
  4117aa:	repz push edx
  4117ac:	push   eax
  4117ad:	push   ebp
  4117ae:	pop    ss
  4117af:	popf   
  4117b0:	stos   BYTE PTR es:[edi],al
  4117b1:	retf   
  4117b2:	test   al,0x9d
  4117b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117b5:	push   ebx
  4117b6:	inc    ecx
  4117b7:	mov    bh,0xd7
  4117b9:	or     eax,0x2b33c31e
  4117be:	not    BYTE PTR [ebp-0x23]
  4117c1:	pop    ebx
  4117c2:	cmp    DWORD PTR [ebx+0x3c230c39],ecx
  4117c8:	inc    ecx
  4117c9:	popf   
  4117ca:	rcl    DWORD PTR [esi],1
  4117cc:	sub    DWORD PTR [ebp+0x6b],edx
  4117cf:	mov    dh,0x5c
  4117d1:	sbb    al,0x78
  4117d3:	sbb    esp,esi
  4117d5:	fwait
  4117d6:	je     0x4117bd
  4117d8:	sub    BYTE PTR [esi-0x50c9be3c],0x17
  4117df:	sbb    cl,BYTE PTR [esi-0x7e7cb845]
  4117e5:	pop    ds
  4117e6:	pop    eax
  4117e7:	jo     0x411819
  4117e9:	or     BYTE PTR [ecx-0x1c],0x6
  4117ed:	push   ss
  4117ee:	repnz mov esp,0xab0d3a90
  4117f4:	or     BYTE PTR [edx-0x47283196],bl
  4117fa:	jmp    0x41178b
  4117fc:	test   cl,ch
  4117fe:	mov    dl,0x42
  411800:	xorps  xmm4,XMMWORD PTR [esi-0x31abc338]
  411807:	add    BYTE PTR ds:0x749a059b,dl
  41180d:	les    esi,FWORD PTR [edx-0x6f]
  411810:	(bad)  
  411811:	dec    ebx
  411812:	aas    
  411813:	fistp  QWORD PTR ds:0x6f827bb6
  411819:	jle    0x411874
  41181b:	es and eax,0x19058475
  411821:	or     edx,DWORD PTR [ecx+eiz*4+0x26]
  411825:	lods   al,BYTE PTR ds:[esi]
  411826:	ud2    
  411828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411829:	fsubr  DWORD PTR [edi+0x138f5dea]
  41182f:	es inc ecx
  411831:	sbb    ebx,ebx
  411833:	xchg   BYTE PTR [ecx+0x62],ch
  411836:	sub    DWORD PTR [ebp-0x8bc80aa],0x41
  41183d:	mov    ecx,0x5d4d13b4
  411842:	out    dx,eax
  411843:	push   ss
  411844:	les    eax,FWORD PTR [ebp-0x42befda3]
  41184a:	call   0x8e1ab344
  41184f:	repz mov bh,0xec
  411852:	cwde   
  411853:	ja     0x411895
  411855:	fisubr DWORD PTR [esi+0x4582a638]
  41185b:	jnp    0x41186e
  41185d:	out    dx,al
  41185e:	arpl   WORD PTR [ecx],si
  411860:	stc    
  411861:	xchg   edi,eax
  411862:	sbb    BYTE PTR [edx+ecx*8],dh
  411865:	dec    eax
  411866:	cli    
  411867:	jmp    0x411895
  411869:	sbb    cl,0x30
  41186c:	outs   dx,DWORD PTR ds:[esi]
  41186d:	test   al,0x7d
  41186f:	(bad)  
  411870:	pop    ebp
  411871:	jmp    0x858ce253
  411876:	imul   ecx,DWORD PTR [eax],0x9f9bba98
  41187c:	loop   0x411834
  41187e:	xchg   esi,eax
  41187f:	in     al,dx
  411880:	jmp    0xb06c2bef
  411885:	adc    al,0xe7
  411887:	call   0xcbf9:0xf210ad1f
  41188e:	(bad)  
  41188f:	and    eax,0xe0482138
  411894:	sub    al,0x52
  411896:	pushf  
  411897:	mov    ah,0x73
  411899:	pop    esi
  41189a:	jecxz  0x411863
  41189c:	cmp    edx,DWORD PTR [edx-0x5b]
  41189f:	aas    
  4118a0:	into   
  4118a1:	mov    WORD PTR [edi+edx*4],ss
  4118a4:	je     0x411924
  4118a6:	mov    ecx,0x94d0435f
  4118ab:	(bad)  
  4118ac:	xor    ebx,ebx
  4118ae:	jo     0x411913
  4118b0:	or     eax,0x4d75c4a
  4118b5:	(bad)  
  4118b6:	mov    esi,0x7e69fe62
  4118bb:	xor    DWORD PTR [ebp+eiz*8+0x3d7a498c],esi
  4118c2:	push   ecx
  4118c3:	hlt    
  4118c4:	hlt    
  4118c5:	inc    eax
  4118c6:	or     BYTE PTR [ebx],dl
  4118c8:	scas   eax,DWORD PTR es:[edi]
  4118c9:	cmp    dh,0x0
  4118cc:	stos   DWORD PTR es:[edi],eax
  4118cd:	test   BYTE PTR [ebp-0x2b],0x53
  4118d1:	aaa    
  4118d2:	cwde   
  4118d3:	push   edi
  4118d4:	adc    eax,0xdafa1721
  4118d9:	fcomp  DWORD PTR ds:[ebp+ebx*2-0x37d5d489]
  4118e1:	adc    BYTE PTR [esi+0x421c5192],0xe2
  4118e8:	in     al,0x41
  4118ea:	leave  
  4118eb:	or     BYTE PTR [ebx],bl
  4118ed:	add    BYTE PTR [edi-0x34634028],ch
  4118f3:	sahf   
  4118f4:	or     al,0xc6
  4118f6:	jle    0x411902
  4118f8:	mov    al,0x2a
  4118fa:	mov    ah,0xbf
  4118fc:	sub    al,0xd3
  4118fe:	cmc    
  4118ff:	xor    esi,DWORD PTR [ecx-0x4918b1d]
  411905:	mov    ebp,0xd1c3cae
  41190a:	mov    eax,0x5cdd4bdb
  41190f:	cmc    
  411910:	mov    ds:0x859e6bf0,al
  411915:	or     DWORD PTR [edx-0x73eda87b],edi
  41191b:	sub    DWORD PTR [eax+0x44be5dd2],ecx
  411921:	mov    ds:0xf84d0174,eax
  411926:	ins    DWORD PTR es:[edi],dx
  411927:	mov    ds,WORD PTR [esi+ebx*8]
  41192a:	fs xchg esp,eax
  41192c:	add    DWORD PTR [esi-0x4f],ebx
  41192f:	xchg   esi,eax
  411930:	js     0x411989
  411932:	mov    DWORD PTR [edx],ecx
  411934:	cmp    DWORD PTR [ecx],esi
  411936:	out    dx,al
  411937:	dec    esp
  411938:	jo     0x4118bf
  41193a:	test   DWORD PTR [edi+0x7d],0x712d5783
  411941:	xchg   edi,eax
  411942:	add    al,0xeb
  411944:	dec    edx
  411945:	(bad)  
  411946:	icebp  
  411947:	test   eax,0xfb032059
  41194c:	(bad)  [esp+edx*4-0x71]
  411950:	mov    ebp,0x97eeebb0
  411955:	jmp    0xf9ae:0x9d711c22
  41195c:	add    edx,ecx
  41195e:	or     BYTE PTR [ebx+0x5e74b314],al
  411964:	xchg   esi,eax
  411965:	mov    dl,0x2b
  411967:	aam    0x51
  411969:	or     ah,BYTE PTR [eax+0x7f]
  41196c:	jb     0x411966
  41196e:	je     0x411978
  411970:	inc    edx
  411971:	dec    eax
  411972:	xor    eax,ebp
  411974:	mov    dl,0xb8
  411976:	xchg   edx,eax
  411977:	jb     0x4119ac
  411979:	pop    esp
  41197a:	(bad)  
  41197b:	adc    al,0x8a
  41197d:	cld    
  41197e:	push   ecx
  41197f:	fidivr DWORD PTR [ecx+0x76f1211c]
  411985:	retf   
  411986:	rol    BYTE PTR ds:0x533325de,0x4
  41198d:	push   0x359fab05
  411992:	sub    edx,DWORD PTR [ebx+ecx*1+0xb]
  411996:	mov    dh,0x2e
  411998:	int    0x15
  41199a:	ret    
  41199b:	adc    eax,0x7b682b86
  4119a0:	dec    ebp
  4119a1:	and    eax,0xde6358f9
  4119a6:	cmp    al,BYTE PTR [ecx]
  4119a8:	out    dx,eax
  4119a9:	jmp    0x411a1b
  4119ab:	pop    eax
  4119ac:	mov    eax,0xc7b25713
  4119b1:	ret    0x12c1
  4119b4:	jmp    0x4119a2
  4119b6:	sbb    esi,esp
  4119b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119b9:	mov    ebp,0x5f1c4387
  4119be:	adc    BYTE PTR [esi+0x7d],cl
  4119c1:	mov    WORD PTR [ecx],cs
  4119c3:	out    dx,eax
  4119c4:	fs jne 0x411982
  4119c7:	(bad)  
  4119c8:	aas    
  4119c9:	popa   
  4119ca:	ins    DWORD PTR es:[edi],dx
  4119cb:	push   ebp
  4119cc:	mov    dh,0x2e
  4119ce:	sub    DWORD PTR [eax+eiz*8-0x1],0x6
  4119d3:	nop
  4119d4:	cmp    ch,BYTE PTR [ecx]
  4119d6:	pusha  
  4119d7:	fwait
  4119d8:	rol    cl,1
  4119da:	mov    ch,0xe3
  4119dc:	or     al,0xa1
  4119de:	stos   DWORD PTR es:[edi],eax
  4119df:	and    cl,BYTE PTR [eax+0x7465cf82]
  4119e5:	add    eax,0x49f2eac0
  4119ea:	mov    ebx,0x9342410a
  4119ef:	or     al,0xb1
  4119f1:	add    eax,esi
  4119f3:	out    0x14,eax
  4119f5:	push   0x942becf0
  4119fa:	mov    ebp,0xf1495a0e
  4119ff:	popf   
  411a00:	or     bh,BYTE PTR [edi+0x21dc81c1]
  411a06:	push   ecx
  411a07:	clc    
  411a08:	and    al,0xb7
  411a0a:	dec    edx
  411a0b:	pop    edx
  411a0c:	xchg   esi,eax
  411a0d:	mov    ch,ah
  411a0f:	(bad)  
  411a10:	icebp  
  411a11:	jl     0x411a84
  411a13:	out    0x47,eax
  411a15:	push   ebx
  411a16:	mov    bh,0xb6
  411a18:	mov    al,0xd0
  411a1a:	sub    al,0x93
  411a1c:	xor    al,0x69
  411a1e:	push   cs
  411a1f:	les    ebx,FWORD PTR [ebx-0x87133b3]
  411a25:	fcom   QWORD PTR [ecx]
  411a27:	mov    ch,BYTE PTR [ecx-0x38]
  411a2a:	xor    al,0x90
  411a2c:	mov    esi,0x16f75fed
  411a31:	ja     0x411a33
  411a33:	popa   
  411a34:	inc    edi
  411a35:	adc    al,ch
  411a37:	cmp    bl,bl
  411a39:	fcomip st,st(2)
  411a3b:	popf   
  411a3c:	push   cs
  411a3d:	sub    DWORD PTR [edx-0x27f598f2],ecx
  411a43:	ffree  st(3)
  411a45:	jecxz  0x4119cd
  411a47:	xor    al,0xaa
  411a49:	sbb    DWORD PTR [ebp+0x5776f998],eax
  411a4f:	arpl   WORD PTR [esi-0x66],di
  411a52:	cmp    al,0xdb
  411a54:	retf   
  411a55:	xchg   edx,eax
  411a56:	mov    ds:0x248259bc,eax
  411a5b:	loope  0x411a3a
  411a5d:	outs   dx,DWORD PTR ds:[esi]
  411a5e:	sahf   
  411a5f:	sbb    al,0xf4
  411a61:	(bad)  
  411a62:	loopne 0x411a06
  411a64:	js     0x411a8b
  411a66:	imul   esi,DWORD PTR [esi+edi*2],0xfffffff4
  411a6a:	inc    ecx
  411a6b:	fidivr WORD PTR [ebx-0x26]
  411a6e:	xor    esi,DWORD PTR [esi-0x15480119]
  411a74:	mov    ah,0xba
  411a76:	pop    ds
  411a77:	retf   
  411a78:	(bad)  
  411a79:	jae    0x411a46
  411a7b:	sbb    DWORD PTR [eax],esi
  411a7d:	adc    eax,0x8cb28d3d
  411a82:	push   edx
  411a83:	jbe    0x411ae6
  411a85:	and    eax,0xd0b2f6d4
  411a8a:	sbb    ecx,esi
  411a8c:	jmp    0xcdd041e2
  411a91:	jae    0x411a31
  411a93:	loope  0x411ac2
  411a95:	sub    DWORD PTR [esi+0x633edcc7],eax
  411a9b:	pop    ecx
  411a9c:	test   al,0x60
  411a9e:	inc    edx
  411a9f:	sub    al,0x83
  411aa1:	nop
  411aa2:	inc    ebx
  411aa3:	xor    ah,dh
  411aa5:	adc    ah,bl
  411aa7:	jb     0x411a2f
  411aa9:	test   al,0xf9
  411aab:	jmp    0x411ae5
  411aad:	(bad)  
  411aae:	or     edx,DWORD PTR [ebp-0x58dc95d0]
  411ab4:	mov    ecx,0xcacefa08
  411ab9:	push   ss
  411aba:	xor    ecx,esi
  411abc:	lea    eax,[ecx+eax*1+0x3272f3]
  411ac3:	mov    ecx,DWORD PTR [ebp+0x8]
  411ac6:	mov    edx,DWORD PTR [ebp-0x20]
  411ac9:	mov    DWORD PTR [edx+ecx*4],eax
  411acc:	mov    eax,DWORD PTR [ebp-0xc]
  411acf:	mov    ecx,DWORD PTR [ebp+0x8]
  411ad2:	xor    eax,esi
  411ad4:	lea    eax,[eax+ecx*1+0x3272f3]
  411adb:	mov    DWORD PTR [ebp+0x8],eax
  411ade:	mov    eax,DWORD PTR [ebp-0xc]
  411ae1:	mov    ecx,DWORD PTR [ebp+0x14]
  411ae4:	xor    eax,esi
  411ae6:	add    eax,edi
  411ae8:	imul   eax,DWORD PTR [ecx]
  411aeb:	mov    ecx,DWORD PTR [ebp-0x4]
  411aee:	mov    edx,DWORD PTR [ebp+0x8]
  411af1:	xor    ecx,esi
  411af3:	lea    ecx,[ecx+edx*1+0x3272f3]
  411afa:	cmp    ecx,eax
  411afc:	jne    0x40f6ee
  411b02:	mov    eax,DWORD PTR [ebp-0x4]
  411b05:	xor    eax,esi
  411b07:	add    eax,edi
  411b09:	mov    DWORD PTR [ebp-0x10],eax
  411b0c:	mov    ebx,0x65655
  411b11:	add    ebx,0x3234
  411b17:	xchg   ebx,esi
  411b19:	xor    ebx,ebx
  411b1b:	push   esi
  411b1c:	mov    esi,ebx
  411b1e:	pop    ebx
  411b1f:	mov    edx,esi
  411b21:	add    ebx,0x1002
  411b27:	lea    eax,[ebp-0x18]
  411b2a:	add    edx,eax
  411b2c:	add    edx,0x5
  411b2f:	push   edx
  411b30:	inc    esi
  411b31:	pop    ecx
  411b32:	dec    ecx
  411b33:	xchg   ecx,eax
  411b34:	dec    eax
  411b35:	xchg   ecx,eax
  411b36:	dec    ecx
  411b37:	xchg   ecx,edx
  411b39:	dec    edx
  411b3a:	push   edx
  411b3b:	mov    edx,ebx
  411b3d:	pop    ebx
  411b3e:	dec    ebx
  411b3f:	call   DWORD PTR [ebx]
  411b41:	cmp    DWORD PTR [ebp+0x10],esi
  411b44:	je     0x411b65
  411b4a:	xchg   edx,eax
  411b4b:	push   0xc
  411b4d:	pop    ecx
  411b4e:	dec    ecx
  411b4f:	push   0x3
  411b51:	pop    ebx
  411b52:	inc    ebx
  411b53:	xchg   ebx,ecx
  411b55:	inc    ecx
  411b56:	sub    ebx,ecx
  411b58:	xchg   ebx,ecx
  411b5a:	dec    ecx
  411b5b:	dec    ecx
  411b5c:	mov    eax,DWORD PTR [ebp-0x1c]
  411b5f:	imul   eax,ecx
  411b62:	add    esp,eax
  411b64:	xchg   edx,eax
  411b65:	push   eax
  411b66:	xor    ebx,ebx
  411b68:	mov    edx,esp
  411b6a:	dec    edx
  411b6b:	inc    ebx
  411b6c:	add    ebx,DWORD PTR [edx+ebx*1]
  411b6f:	dec    ebx
  411b70:	xor    edx,edx
  411b72:	add    DWORD PTR [ebp-0x10],ebx
  411b75:	pop    ebx
  411b76:	mov    eax,DWORD PTR [ebp-0x10]
  411b79:	pop    edi
  411b7a:	pop    esi
  411b7b:	pop    ebx
  411b7c:	leave  
  411b7d:	ret    0x10
  411b80:	push   ebp
  411b81:	mov    ebp,esp
  411b83:	push   ecx
  411b84:	and    DWORD PTR ds:0x4291db,ecx
  411b8a:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  411b91:	and    DWORD PTR ds:0x4291cb,0x0
  411b9b:	mov    ecx,DWORD PTR ds:0x4291cb
  411ba1:	inc    ecx
  411ba2:	mov    DWORD PTR ds:0x4291cb,ecx
  411ba8:	cmp    DWORD PTR ds:0x4291cb,0x20
  411baf:	jbe    0x411bd2
  411bb5:	jmp    0x411bc5
  411bba:	push   0x4291cf
  411bbf:	call   DWORD PTR ds:0x42a863
  411bc5:	cmp    DWORD PTR ds:0x4291cb,0x1c
  411bcc:	jb     0x411b9b
  411bd2:	mov    eax,DWORD PTR [ebp-0x4]
  411bd5:	xor    DWORD PTR ds:0x4291d7,0x42915f
  411bdf:	mov    edx,DWORD PTR [ebp+0x10]
  411be2:	mov    ecx,0x75108ac
  411be7:	sbb    DWORD PTR ds:0x42919f,0x2976
  411bf1:	xor    eax,ecx
  411bf3:	xor    DWORD PTR ds:0x429167,0x4291ab
  411bfd:	add    eax,0x3272f3
  411c02:	mov    DWORD PTR [edx],eax
  411c04:	and    eax,DWORD PTR ds:0x4291e7
  411c0a:	mov    eax,DWORD PTR [ebp+0xc]
  411c0d:	and    DWORD PTR ds:0x4291d3,edi
  411c13:	xor    eax,ecx
  411c15:	xor    DWORD PTR ds:0x429187,0x6377
  411c1f:	push   esi
  411c20:	xor    edx,DWORD PTR ds:0x42915b
  411c26:	mov    esi,DWORD PTR [ebp+0x10]
  411c29:	mov    edx,0x3272f3
  411c2e:	add    eax,edx
  411c30:	mov    DWORD PTR [esi+0x4],eax
  411c33:	mov    eax,DWORD PTR [ebp+0x14]
  411c36:	mov    esi,DWORD PTR [ebp+0x10]
  411c39:	mov    DWORD PTR [esi+0x8],eax
  411c3c:	mov    eax,DWORD PTR [ebp+0x18]
  411c3f:	mov    esi,DWORD PTR [ebp+0x10]
  411c42:	mov    DWORD PTR [esi+0xc],eax
  411c45:	mov    eax,DWORD PTR [ebp+0x1c]
  411c48:	mov    esi,DWORD PTR [ebp+0x10]
  411c4b:	mov    DWORD PTR [esi+0x10],eax
  411c4e:	mov    eax,DWORD PTR [ebp+0x8]
  411c51:	xor    eax,ecx
  411c53:	add    eax,edx
  411c55:	pop    esi
  411c56:	leave  
  411c57:	ret    0x18
  411c5a:	push   ebp
  411c5b:	mov    ebp,esp
  411c5d:	sub    esp,0x9c
  411c63:	movzx  ecx,BYTE PTR ds:0x429187
  411c6a:	or     DWORD PTR ds:0x4291f3,ecx
  411c70:	mov    ecx,DWORD PTR [ebp+0x8]
  411c73:	mov    eax,0x8a99
  411c78:	sub    DWORD PTR ds:0x4291a7,0x19e0
  411c82:	xor    ax,WORD PTR [ecx+0x20]
  411c86:	mov    ecx,0x3b5b
  411c8b:	add    ax,cx
  411c8e:	and    DWORD PTR ds:0x4291f7,0x0
  411c98:	mov    ecx,DWORD PTR ds:0x4291f7
  411c9e:	inc    ecx
  411c9f:	mov    DWORD PTR ds:0x4291f7,ecx
  411ca5:	cmp    DWORD PTR ds:0x4291f7,0x11
  411cac:	jl     0x411cec
  411cb2:	jmp    0x411cc5
  411cb7:	push   DWORD PTR [ebp-0x28]
  411cba:	push   0x42806d
  411cbf:	call   DWORD PTR ds:0x42a867
  411cc5:	cmp    DWORD PTR ds:0x4291f7,0x10
  411ccc:	jne    0x411cdf
  411cd2:	mov    ecx,DWORD PTR ds:0x4291f7
  411cd8:	inc    ecx
  411cd9:	mov    DWORD PTR ds:0x4291f7,ecx
  411cdf:	cmp    DWORD PTR ds:0x4291f7,0x1c
  411ce6:	jb     0x411c98
  411cec:	movzx  eax,ax
  411cef:	mov    DWORD PTR [ebp-0x10],eax
  411cf2:	mov    BYTE PTR [ebp-0x1],0x82
  411cf6:	and    DWORD PTR ds:0x4291df,0x0
  411d00:	jmp    0x411d14
  411d05:	xor    ecx,ecx
  411d07:	add    ecx,DWORD PTR ds:0x4291df
  411d0d:	inc    ecx
  411d0e:	mov    DWORD PTR ds:0x4291df,ecx
  411d14:	cmp    DWORD PTR ds:0x4291df,0x1b
  411d1b:	jae    0x411d48
  411d21:	cmp    DWORD PTR ds:0x4291df,0x22
  411d28:	jge    0x411d48
  411d2e:	jmp    0x411d43
  411d33:	push   0x4280f2
  411d38:	push   0x0
  411d3a:	push   DWORD PTR [ebp-0x1c]
  411d3d:	call   DWORD PTR ds:0x42a86f
  411d43:	jmp    0x411d05
  411d48:	lea    eax,[ebp-0x1]
  411d4b:	inc    DWORD PTR ds:0x42919b
  411d51:	mov    DWORD PTR [ebp-0xc],eax
  411d54:	mov    al,BYTE PTR [ebp-0x1]
  411d57:	and    DWORD PTR ds:0x4291af,0x0
  411d61:	mov    ecx,DWORD PTR ds:0x4291af
  411d67:	inc    ecx
  411d68:	mov    DWORD PTR ds:0x4291af,ecx
  411d6e:	cmp    DWORD PTR ds:0x4291af,0x19
  411d75:	jbe    0x411d96
  411d7b:	jmp    0x411d89
  411d80:	push   DWORD PTR [ebp-0x20]
  411d83:	call   DWORD PTR ds:0x42a873
  411d89:	cmp    DWORD PTR ds:0x4291af,0x10
  411d90:	jb     0x411d61
  411d96:	mov    ecx,DWORD PTR [ebp-0xc]
  411d99:	xor    al,0x7d
  411d9b:	mov    DWORD PTR ds:0x4291bb,0x2666
  411da5:	add    al,0x2
  411da7:	and    DWORD PTR ds:0x4291c3,0x42917f
  411db1:	mov    BYTE PTR [ecx],al
  411db3:	sbb    DWORD PTR ds:0x4291eb,0x5717
  411dbd:	mov    DWORD PTR [ebp-0x18],0xf89c85a1
  411dc4:	push   ebx
  411dc5:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  411dcc:	mov    DWORD PTR ds:0x4291eb,0x16
  411dd6:	cmp    DWORD PTR ds:0x4291eb,0x0
  411ddd:	je     0x411e17
  411de3:	cmp    DWORD PTR ds:0x4291eb,0x1e
  411dea:	jl     0x411e17
  411df0:	jmp    0x411e07
  411df5:	push   0x428010
  411dfa:	push   0x0
  411dfc:	push   0x6e74
  411e01:	call   DWORD PTR ds:0x42a877
  411e07:	mov    eax,ds:0x4291eb
  411e0c:	dec    eax
  411e0d:	mov    ds:0x4291eb,eax
  411e12:	jmp    0x411dd6
  411e17:	mov    ecx,DWORD PTR [ebp-0x18]
  411e1a:	or     DWORD PTR ds:0x429153,ebx
  411e20:	push   esi
  411e21:	mov    eax,0x75108ac
  411e26:	xor    esi,esi
  411e28:	xor    esi,DWORD PTR ds:0x4291b7
  411e2e:	or     DWORD PTR ds:0x42915b,esi
  411e34:	xor    ecx,eax
  411e36:	mov    esi,DWORD PTR ds:0x4291a3
  411e3c:	sbb    esi,DWORD PTR ds:0x42914f
  411e42:	mov    DWORD PTR ds:0x4291a3,esi
  411e48:	mov    esi,0x3272f3
  411e4d:	push   edi
  411e4e:	add    ecx,esi
  411e50:	jmp    0x411e66
  411e55:	inc    DWORD PTR ds:0x429163
  411e5b:	mov    dl,BYTE PTR [ebp-0x1]
  411e5e:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e65:	inc    ecx
  411e66:	mov    DWORD PTR ds:0x42917b,0x7bd4
  411e70:	cmp    ecx,0x40
  411e73:	jb     0x411e55
  411e79:	not    edx
  411e7b:	mov    edx,DWORD PTR [ebp-0x18]
  411e7e:	xor    edx,eax
  411e80:	mov    DWORD PTR ds:0x4291f7,0x3db0
  411e8a:	add    edx,esi
  411e8c:	jmp    0x411f80
  411e91:	movzx  edi,WORD PTR ds:0x42918b
  411e98:	or     DWORD PTR ds:0x429157,edi
  411e9e:	mov    edi,DWORD PTR [ebp+0x8]
  411ea1:	adc    DWORD PTR ds:0x42917b,edx
  411ea7:	mov    ecx,0x8a99
  411eac:	adc    DWORD PTR ds:0x4291f3,0x3816
  411eb6:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ebb:	and    DWORD PTR ds:0x4291a3,0x0
  411ec5:	jmp    0x411ed7
  411eca:	mov    edi,DWORD PTR ds:0x4291a3
  411ed0:	inc    edi
  411ed1:	mov    DWORD PTR ds:0x4291a3,edi
  411ed7:	cmp    DWORD PTR ds:0x4291a3,0x1f
  411ede:	jae    0x411f1d
  411ee4:	cmp    DWORD PTR ds:0x4291a3,0xa
  411eeb:	jl     0x411f1d
  411ef1:	jmp    0x411efc
  411ef6:	call   DWORD PTR ds:0x42a87b
  411efc:	cmp    DWORD PTR ds:0x4291a3,0x9
  411f03:	jne    0x411f18
  411f09:	xor    edi,edi
  411f0b:	xor    edi,DWORD PTR ds:0x4291a3
  411f11:	inc    edi
  411f12:	mov    DWORD PTR ds:0x4291a3,edi
  411f18:	jmp    0x411eca
  411f1d:	mov    edi,0x3b5b
  411f22:	add    cx,di
  411f25:	add    DWORD PTR ds:0x4291ef,0x4291b7
  411f2f:	movzx  ecx,cx
  411f32:	sbb    DWORD PTR ds:0x42914b,0x16d8
  411f3c:	mov    DWORD PTR [ebp-0xc],ecx
  411f3f:	movzx  ecx,WORD PTR ds:0x42918f
  411f46:	and    DWORD PTR ds:0x429197,ecx
  411f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  411f4f:	sbb    DWORD PTR ds:0x42915b,0x631a
  411f59:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f5d:	xor    ecx,0x8a99
  411f63:	add    ecx,edi
  411f65:	mov    edi,DWORD PTR [ebp-0xc]
  411f68:	mov    DWORD PTR ds:0x4291f7,0x4ad9
  411f72:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f79:	mov    DWORD PTR ds:0x4291e7,ecx
  411f7f:	inc    edx
  411f80:	not    ecx
  411f82:	mov    ecx,DWORD PTR [ebp-0x10]
  411f85:	mov    DWORD PTR ds:0x42914f,0x2d30
  411f8f:	cmp    edx,ecx
  411f91:	jne    0x411e91
  411f97:	and    edx,edx
  411f99:	mov    ecx,DWORD PTR [ebp-0x18]
  411f9c:	sub    edi,DWORD PTR ds:0x42914f
  411fa2:	mov    edx,DWORD PTR [ebp+0x10]
  411fa5:	xor    DWORD PTR ds:0x4291bf,0xf9d
  411faf:	xor    ecx,eax
  411fb1:	and    DWORD PTR ds:0x4291b7,ebx
  411fb7:	add    ecx,esi
  411fb9:	mov    DWORD PTR [edx],ecx
  411fbb:	mov    ecx,DWORD PTR [ebp-0x18]
  411fbe:	sbb    DWORD PTR ds:0x42919f,0x1e81
  411fc8:	xor    ecx,eax
  411fca:	add    ecx,esi
  411fcc:	adc    DWORD PTR ds:0x4291e3,edi
  411fd2:	mov    DWORD PTR [ebp-0xc],ecx
  411fd5:	add    DWORD PTR ds:0x42914f,0x6cdc
  411fdf:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  411fe6:	mov    DWORD PTR ds:0x4291bf,0x1d36
  411ff0:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  411ff7:	mov    DWORD PTR [ebp-0x10],0xf89c95a1
  411ffe:	mov    ecx,DWORD PTR [ebp-0x14]
  412001:	mov    DWORD PTR ds:0x4291e3,0x1b
  41200b:	cmp    DWORD PTR ds:0x4291e3,0x0
  412012:	je     0x41204c
  412018:	cmp    DWORD PTR ds:0x4291e3,0x1c
  41201f:	jb     0x41204c
  412025:	jmp    0x41203a
  41202a:	push   0x42915f
  41202f:	push   0x428022
  412034:	call   DWORD PTR ds:0x42a87f
  41203a:	mov    edi,DWORD PTR ds:0x4291e3
  412040:	dec    edi
  412041:	mov    DWORD PTR ds:0x4291e3,edi
  412047:	jmp    0x41200b
  41204c:	mov    DWORD PTR [ebp+0x8],ecx
  41204f:	mov    ecx,DWORD PTR [ebp+0x8]
  412052:	xor    ecx,eax
  412054:	add    ecx,esi
  412056:	movzx  ecx,WORD PTR ds:0x4291b3
  41205d:	mov    ecx,0x242ebcd
  412062:	mov    edi,0xf641bcc
  412067:	je     0x414acc
  41206d:	mov    edx,DWORD PTR [ebp+0x8]
  412070:	sub    DWORD PTR ds:0x42917b,0x1976
  41207a:	mov    ebx,DWORD PTR [ebp-0x8]
  41207d:	xor    edx,eax
  41207f:	xor    ebx,eax
  412081:	not    DWORD PTR ds:0x4291d3
  412087:	sub    edx,ebx
  412089:	not    DWORD PTR ds:0x42918f
  41208f:	sub    edx,esi
  412091:	xor    edx,eax
  412093:	and    DWORD PTR ds:0x4291cb,0x0
  41209d:	jmp    0x4120af
  4120a2:	mov    ebx,DWORD PTR ds:0x4291cb
  4120a8:	inc    ebx
  4120a9:	mov    DWORD PTR ds:0x4291cb,ebx
  4120af:	cmp    DWORD PTR ds:0x4291cb,0x18
  4120b6:	jae    0x4120f8
  4120bc:	cmp    DWORD PTR ds:0x4291cb,0xa
  4120c3:	ja     0x4120f8
  4120c9:	jmp    0x4120d9
  4120ce:	push   0x4a1a
  4120d3:	call   DWORD PTR ds:0x42a883
  4120d9:	cmp    DWORD PTR ds:0x4291cb,0x9
  4120e0:	jne    0x4120f3
  4120e6:	mov    ebx,DWORD PTR ds:0x4291cb
  4120ec:	inc    ebx
  4120ed:	mov    DWORD PTR ds:0x4291cb,ebx
  4120f3:	jmp    0x4120a2
  4120f8:	mov    DWORD PTR [ebp+0x8],edx
  4120fb:	sub    DWORD PTR ds:0x4291e3,0x2e82
  412105:	mov    edx,DWORD PTR [ebp+0x8]
  412108:	mov    ebx,DWORD PTR [ebp-0x58]
  41210b:	mov    DWORD PTR ds:0x42919b,0x1dc1
  412115:	add    edx,0x5708e2
  41211b:	and    DWORD PTR ds:0x4291e7,0x42919f
  412125:	imul   edx,ebx
  412128:	mov    DWORD PTR [ebp-0x58],edx
  41212b:	xor    edx,0x49c6
  412131:	mov    edx,DWORD PTR [ebp+0x8]
  412134:	mov    ebx,DWORD PTR ds:0x42914b
  41213a:	add    DWORD PTR ds:0x4291e3,ebx
  412140:	mov    ebx,DWORD PTR [ebp-0x54]
  412143:	add    edx,0x64f89c
  412149:	inc    DWORD PTR ds:0x42917f
  41214f:	or     edx,ebx
  412151:	mov    DWORD PTR [ebp-0x54],edx
  412154:	mov    edx,DWORD PTR [ebp+0x8]
  412157:	mov    ebx,DWORD PTR [ebp-0x50]
  41215a:	sbb    DWORD PTR ds:0x429183,0x4291b7
  412164:	add    edx,ecx
  412166:	xor    edx,ebx
  412168:	mov    DWORD PTR [ebp-0x50],edx
  41216b:	dec    ebx
  41216c:	mov    edx,DWORD PTR [ebp+0x8]
  41216f:	add    ebx,0x68ce
  412175:	mov    ebx,DWORD PTR [ebp-0x4c]
  412178:	add    edx,edi
  41217a:	and    edx,ebx
  41217c:	and    ebx,0x35bf
  412182:	mov    DWORD PTR [ebp-0x4c],edx
  412185:	xor    DWORD PTR ds:0x4291d3,ebx
  41218b:	mov    edx,DWORD PTR [ebp+0x8]
  41218e:	sub    DWORD PTR ds:0x4291cf,0x55b5
  412198:	mov    ebx,DWORD PTR [ebp-0x48]
  41219b:	lea    edx,[ebx+edx*1+0x241fcdf]
  4121a2:	mov    DWORD PTR [ebp-0x48],edx
  4121a5:	and    DWORD PTR ds:0x429173,0x0
  4121af:	mov    ebx,DWORD PTR ds:0x429173
  4121b5:	inc    ebx
  4121b6:	mov    DWORD PTR ds:0x429173,ebx
  4121bc:	cmp    DWORD PTR ds:0x429173,0x19
  4121c3:	jge    0x4121ee
  4121c9:	jmp    0x4121e1
  4121ce:	push   0x4291f7
  4121d3:	push   0x429187
  4121d8:	push   DWORD PTR [ebp-0x10]
  4121db:	call   DWORD PTR ds:0x42a88b
  4121e1:	cmp    DWORD PTR ds:0x429173,0x12
  4121e8:	jb     0x4121af
  4121ee:	mov    edx,DWORD PTR [ebp+0x8]
  4121f1:	or     DWORD PTR ds:0x4291df,ebx
  4121f7:	mov    ebx,0xfa5e1528
  4121fc:	sub    ebx,edx
  4121fe:	movzx  edx,WORD PTR ds:0x4291c7
  412205:	and    DWORD PTR ds:0x4291f7,edx
  41220b:	add    ebx,DWORD PTR [ebp-0x44]
  41220e:	mov    DWORD PTR [ebp-0x44],ebx
  412211:	and    DWORD PTR ds:0x4291db,0x4291bf
  41221b:	mov    edx,DWORD PTR [ebp+0x8]
  41221e:	xor    edx,eax
  412220:	adc    DWORD PTR ds:0x429153,0x429187
  41222a:	add    edx,esi
  41222c:	mov    DWORD PTR ds:0x42915b,0x2aa5
  412236:	jne    0x41206d
  41223c:	mov    DWORD PTR ds:0x4291af,0x939
  412246:	jmp    0x414acc
  41224b:	xor    DWORD PTR ds:0x4291cb,0x4110
  412255:	mov    edx,DWORD PTR [ebp-0xc]
  412258:	sub    DWORD PTR ds:0x42918b,0x429163
  412262:	sub    edx,esi
  412264:	xor    edx,eax
  412266:	mov    DWORD PTR ds:0x4291b7,0x1c
  412270:	cmp    DWORD PTR ds:0x4291b7,0x0
  412277:	je     0x4122ae
  41227d:	cmp    DWORD PTR ds:0x4291b7,0x21
  412284:	jbe    0x4122ae
  41228a:	jmp    0x41229a
  41228f:	push   0x337f
  412294:	call   DWORD PTR ds:0x42a853
  41229a:	xor    ebx,ebx
  41229c:	or     ebx,DWORD PTR ds:0x4291b7
  4122a2:	dec    ebx
  4122a3:	mov    DWORD PTR ds:0x4291b7,ebx
  4122a9:	jmp    0x412270
  4122ae:	mov    DWORD PTR [ebp-0x5c],edx
  4122b1:	sub    DWORD PTR ds:0x429173,0x5ea2
  4122bb:	mov    edx,DWORD PTR [ebp-0x10]
  4122be:	mov    ebx,DWORD PTR [ebp-0x8]
  4122c1:	xor    edx,eax
  4122c3:	dec    DWORD PTR ds:0x4291b7
  4122c9:	xor    ebx,eax
  4122cb:	adc    DWORD PTR ds:0x429197,0x42917b
  4122d5:	sub    edx,ebx
  4122d7:	sub    edx,esi
  4122d9:	xor    edx,eax
  4122db:	mov    DWORD PTR [ebp-0x10],edx
  4122de:	mov    edx,DWORD PTR [ebp-0x14]
  4122e1:	mov    DWORD PTR [ebp+0x8],edx
  4122e4:	jmp    0x412527
  4122e9:	mov    edx,DWORD PTR [ebp+0x8]
  4122ec:	mov    DWORD PTR ds:0x429157,0x1c
  4122f6:	cmp    DWORD PTR ds:0x429157,0x0
  4122fd:	je     0x412341
  412303:	cmp    DWORD PTR ds:0x429157,0x21
  41230a:	jl     0x412341
  412310:	jmp    0x41232f
  412315:	push   0x4cc6
  41231a:	push   0x428152
  41231f:	push   0x428140
  412324:	push   0x400000
  412329:	call   DWORD PTR ds:0x42a85b
  41232f:	mov    ebx,DWORD PTR ds:0x429157
  412335:	dec    ebx
  412336:	mov    DWORD PTR ds:0x429157,ebx
  41233c:	jmp    0x4122f6
  412341:	mov    ebx,DWORD PTR [ebp-0x8]
  412344:	xor    edx,eax
  412346:	xor    ebx,eax
  412348:	sub    edx,ebx
  41234a:	sub    edx,esi
  41234c:	xor    edx,eax
  41234e:	mov    DWORD PTR [ebp+0x8],edx
  412351:	mov    edx,DWORD PTR [ebp+0x8]
  412354:	mov    ebx,DWORD PTR [ebp-0x58]
  412357:	add    edx,0x5708e2
  41235d:	add    DWORD PTR ds:0x42918f,0x4291b7
  412367:	imul   edx,ebx
  41236a:	mov    DWORD PTR [ebp-0x58],edx
  41236d:	and    DWORD PTR ds:0x4291df,0x0
  412377:	mov    edx,DWORD PTR ds:0x4291df
  41237d:	inc    edx
  41237e:	mov    DWORD PTR ds:0x4291df,edx
  412384:	cmp    DWORD PTR ds:0x4291df,0x9
  41238b:	jb     0x4123cb
  412391:	jmp    0x4123a4
  412396:	push   DWORD PTR [ebp-0x24]
  412399:	push   0x400000
  41239e:	call   DWORD PTR ds:0x42a85f
  4123a4:	cmp    DWORD PTR ds:0x4291df,0x8
  4123ab:	jne    0x4123be
  4123b1:	mov    edx,DWORD PTR ds:0x4291df
  4123b7:	inc    edx
  4123b8:	mov    DWORD PTR ds:0x4291df,edx
  4123be:	cmp    DWORD PTR ds:0x4291df,0x10
  4123c5:	jb     0x412377
  4123cb:	mov    edx,DWORD PTR [ebp+0x8]
  4123ce:	adc    ebx,DWORD PTR ds:0x429183
  4123d4:	mov    ebx,DWORD PTR [ebp-0x54]
  4123d7:	add    DWORD PTR ds:0x4291ef,0x468d
  4123e1:	add    edx,0x64f89c
  4123e7:	or     edx,ebx
  4123e9:	mov    DWORD PTR [ebp-0x54],edx
  4123ec:	and    DWORD PTR ds:0x429187,0x0
  4123f6:	jmp    0x412408
  4123fb:	mov    ebx,DWORD PTR ds:0x429187
  412401:	inc    ebx
  412402:	mov    DWORD PTR ds:0x429187,ebx
  412408:	cmp    DWORD PTR ds:0x429187,0x1d
  41240f:	jae    0x412437
  412415:	cmp    DWORD PTR ds:0x429187,0x1e
  41241c:	jg     0x412437
  412422:	jmp    0x412432
  412427:	push   0x4291cf
  41242c:	call   DWORD PTR ds:0x42a863
  412432:	jmp    0x4123fb
  412437:	mov    edx,DWORD PTR [ebp+0x8]
  41243a:	mov    ebx,DWORD PTR [ebp-0x50]
  41243d:	and    DWORD PTR ds:0x4291db,0x4291cf
  412447:	add    edx,ecx
  412449:	mov    DWORD PTR ds:0x42919b,0x55c4
  412453:	xor    edx,ebx
  412455:	mov    DWORD PTR [ebp-0x50],edx
  412458:	sub    DWORD PTR ds:0x42915f,0x3296
  412462:	mov    edx,DWORD PTR [ebp+0x8]
  412465:	mov    ebx,DWORD PTR [ebp-0x4c]
  412468:	xor    DWORD PTR ds:0x4291a7,0x42916b
  412472:	add    edx,edi
  412474:	xor    DWORD PTR ds:0x4291e7,0x4291af
  41247e:	and    edx,ebx
  412480:	or     DWORD PTR ds:0x42915f,edx
  412486:	mov    DWORD PTR [ebp-0x4c],edx
  412489:	mov    ebx,DWORD PTR ds:0x42918b
  41248f:	sbb    DWORD PTR ds:0x429157,ebx
  412495:	mov    edx,DWORD PTR [ebp+0x8]
  412498:	xor    DWORD PTR ds:0x429157,0x429153
  4124a2:	mov    ebx,DWORD PTR [ebp-0x48]
  4124a5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4124ac:	mov    DWORD PTR [ebp-0x48],edx
  4124af:	and    DWORD PTR ds:0x429173,0x0
  4124b9:	jmp    0x4124cb
  4124be:	mov    edx,DWORD PTR ds:0x429173
  4124c4:	inc    edx
  4124c5:	mov    DWORD PTR ds:0x429173,edx
  4124cb:	cmp    DWORD PTR ds:0x429173,0x15
  4124d2:	jae    0x412517
  4124d8:	cmp    DWORD PTR ds:0x429173,0x5
  4124df:	jle    0x412517
  4124e5:	jmp    0x4124f8
  4124ea:	push   DWORD PTR [ebp-0x18]
  4124ed:	push   0x42808a
  4124f2:	call   DWORD PTR ds:0x42a867
  4124f8:	cmp    DWORD PTR ds:0x429173,0x4
  4124ff:	jne    0x412512
  412505:	mov    edx,DWORD PTR ds:0x429173
  41250b:	inc    edx
  41250c:	mov    DWORD PTR ds:0x429173,edx
  412512:	jmp    0x4124be
  412517:	mov    edx,DWORD PTR [ebp+0x8]
  41251a:	mov    ebx,0xfa5e1528
  41251f:	sub    ebx,edx
  412521:	add    ebx,DWORD PTR [ebp-0x44]
  412524:	mov    DWORD PTR [ebp-0x44],ebx
  412527:	mov    edx,DWORD PTR [ebp+0x8]
  41252a:	xor    edx,eax
  41252c:	add    edx,esi
  41252e:	jne    0x4122e9
  412534:	mov    edx,DWORD PTR [ebp-0xc]
  412537:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41253e:	mov    bl,BYTE PTR [ebp-0x1]
  412541:	cmp    dl,bl
  412543:	je     0x412621
  412549:	mov    ecx,DWORD PTR [ebp-0x5c]
  41254c:	mov    edx,DWORD PTR [ebp-0xc]
  41254f:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412556:	mov    ebx,DWORD PTR [ebp+0xc]
  412559:	xor    ecx,eax
  41255b:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f3]
  412562:	jne    0x414ade
  412568:	mov    ecx,DWORD PTR [ebp-0x5c]
  41256b:	mov    edx,DWORD PTR [ebp+0xc]
  41256e:	xor    ecx,eax
  412570:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f3]
  412578:	mov    edx,DWORD PTR [ebp-0x18]
  41257b:	xor    edx,eax
  41257d:	add    edx,esi
  41257f:	cmp    ecx,edx
  412581:	mov    ecx,DWORD PTR [ebp-0x14]
  412584:	mov    DWORD PTR [ebp+0x8],ecx
  412587:	mov    ecx,DWORD PTR [ebp+0x8]
  41258a:	je     0x41b681
  412590:	xor    ecx,eax
  412592:	add    ecx,esi
  412594:	mov    ecx,0x242ebcd
  412599:	je     0x414a32
  41259f:	mov    edx,DWORD PTR [ebp+0x8]
  4125a2:	mov    ebx,DWORD PTR [ebp-0x8]
  4125a5:	xor    edx,eax
  4125a7:	xor    ebx,eax
  4125a9:	sub    edx,ebx
  4125ab:	sub    edx,esi
  4125ad:	xor    edx,eax
  4125af:	mov    DWORD PTR [ebp+0x8],edx
  4125b2:	mov    edx,DWORD PTR [ebp+0x8]
  4125b5:	mov    ebx,DWORD PTR [ebp-0x58]
  4125b8:	add    edx,0x5708e2
  4125be:	imul   edx,ebx
  4125c1:	mov    DWORD PTR [ebp-0x58],edx
  4125c4:	mov    edx,DWORD PTR [ebp+0x8]
  4125c7:	mov    ebx,DWORD PTR [ebp-0x54]
  4125ca:	add    edx,0x64f89c
  4125d0:	or     edx,ebx
  4125d2:	mov    DWORD PTR [ebp-0x54],edx
  4125d5:	mov    edx,DWORD PTR [ebp+0x8]
  4125d8:	mov    ebx,DWORD PTR [ebp-0x50]
  4125db:	add    edx,ecx
  4125dd:	xor    edx,ebx
  4125df:	mov    DWORD PTR [ebp-0x50],edx
  4125e2:	mov    edx,DWORD PTR [ebp+0x8]
  4125e5:	mov    ebx,DWORD PTR [ebp-0x4c]
  4125e8:	add    edx,edi
  4125ea:	and    edx,ebx
  4125ec:	mov    DWORD PTR [ebp-0x4c],edx
  4125ef:	mov    edx,DWORD PTR [ebp+0x8]
  4125f2:	mov    ebx,DWORD PTR [ebp-0x48]
  4125f5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4125fc:	mov    DWORD PTR [ebp-0x48],edx
  4125ff:	mov    edx,DWORD PTR [ebp+0x8]
  412602:	mov    ebx,0xfa5e1528
  412607:	sub    ebx,edx
  412609:	add    ebx,DWORD PTR [ebp-0x44]
  41260c:	mov    DWORD PTR [ebp-0x44],ebx
  41260f:	mov    edx,DWORD PTR [ebp+0x8]
  412612:	xor    edx,eax
  412614:	add    edx,esi
  412616:	jne    0x41259f
  41261c:	jmp    0x414a32
  412621:	mov    edx,DWORD PTR [ebp-0x14]
  412624:	jmp    0x4149ad
  412629:	rcr    ah,1
  41262b:	sbb    eax,DWORD PTR [edx+0x17]
  41262e:	mov    ah,0xd0
  412630:	nop
  412631:	cs aam 0x99
  412634:	or     dh,al
  412636:	retf   
  412637:	out    dx,eax
  412638:	int    0x6b
  41263a:	mov    al,BYTE PTR [ebx-0x7ca3e87d]
  412640:	sbb    DWORD PTR [edx+ebx*4-0x70],0x52
  412645:	adc    ah,dh
  412647:	push   ebx
  412648:	lds    eax,FWORD PTR [ebp-0x193ff5d5]
  41264e:	cmp    cl,BYTE PTR [ecx-0x40]
  412651:	addr16 jns 0x41269a
  412654:	mov    dh,0x67
  412656:	inc    ecx
  412657:	lods   al,BYTE PTR ds:[esi]
  412658:	push   ebx
  412659:	inc    edi
  41265a:	pop    ebp
  41265b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41265c:	xchg   ecx,eax
  41265d:	call   DWORD PTR [edi]
  41265f:	not    dl
  412661:	jnp    0x41265d
  412663:	in     al,dx
  412664:	shl    edi,0x57
  412667:	xchg   ebp,eax
  412668:	fisub  WORD PTR [ecx+0x26bb0d29]
  41266e:	mov    eax,ds:0x1d7d5ba9
  412673:	test   DWORD PTR [ebp-0x63],edx
  412676:	cld    
  412677:	pop    ss
  412678:	push   cs
  412679:	add    al,0x3d
  41267b:	aad    0x4a
  41267d:	xchg   BYTE PTR [edi],ch
  41267f:	cmp    BYTE PTR [edi+eiz*8-0x6d6b0243],0x24
  412687:	rcr    DWORD PTR [ebx+0xf],1
  41268a:	in     eax,dx
  41268b:	pop    esp
  41268c:	icebp  
  41268d:	xchg   esi,eax
  41268e:	pop    ds
  41268f:	mov    eax,0xfe615cd5
  412694:	add    ebp,esp
  412696:	jbe    0x41270c
  412698:	jnp    0x41269d
  41269a:	push   0x68
  41269c:	scas   eax,DWORD PTR es:[edi]
  41269d:	cmp    BYTE PTR [ecx-0x3d3dccf],bh
  4126a3:	jno    0x4126ae
  4126a5:	js     0x4126a7
  4126a7:	adc    ecx,DWORD PTR [edi+edx*8-0x21]
  4126ab:	sbb    al,0xe7
  4126ad:	loop   0x4126a1
  4126af:	fs pop ebx
  4126b1:	inc    ecx
  4126b2:	addr16 jno 0x4126a0
  4126b5:	test   DWORD PTR [esi-0xa74b89d],ebx
  4126bb:	cmp    eax,0x719a117
  4126c0:	adc    edx,DWORD PTR [esi+0x13bb416a]
  4126c6:	inc    esi
  4126c7:	imul   edi,DWORD PTR [ecx-0x68125ecf],0x54
  4126ce:	pop    esp
  4126cf:	mov    al,BYTE PTR [edi+0x17]
  4126d2:	icebp  
  4126d3:	loope  0x412681
  4126d5:	(bad)  
  4126d6:	retf   0x68a2
  4126d9:	int    0xb5
  4126db:	fdivr  DWORD PTR [edi-0x51df23c1]
  4126e1:	or     eax,0x902e9133
  4126e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126e7:	add    ah,BYTE PTR [eax+0x52083c77]
  4126ed:	add    eax,0x667a65d0
  4126f2:	loope  0x412716
  4126f4:	xor    ch,BYTE PTR [edx]
  4126f6:	mov    dh,0x67
  4126f8:	cmp    bl,ch
  4126fa:	ins    DWORD PTR es:[edi],dx
  4126fb:	mov    edi,0xd6485b65
  412700:	fwait
  412701:	xchg   DWORD PTR [ebx],ecx
  412703:	push   es
  412704:	cdq    
  412705:	(bad)  
  412706:	jnp    0x41274e
  412708:	(bad)  [ebx]
  41270a:	lock xor ebp,DWORD PTR [ecx-0x6]
  41270e:	add    esp,DWORD PTR [edi-0x314ed876]
  412714:	mov    BYTE PTR [ecx-0x73714f03],ch
  41271a:	adc    al,0xb3
  41271c:	mov    dh,0x59
  41271e:	inc    edx
  41271f:	(bad)  
  412720:	mov    dh,0xe3
  412722:	adc    dl,BYTE PTR [ecx]
  412724:	add    BYTE PTR [ebx+eax*4-0x62],bl
  412728:	jmp    0x86ba4deb
  41272d:	add    bh,BYTE PTR [ebx+edx*8-0x3f]
  412731:	pop    edi
  412732:	dec    ebp
  412733:	sub    esi,edx
  412735:	pop    esp
  412736:	xchg   ebx,eax
  412737:	dec    ebx
  412738:	mov    al,0x9b
  41273a:	bound  esp,QWORD PTR [ecx-0x5c6aefd8]
  412740:	mov    WORD PTR [eax+0x13],gs
  412743:	adc    BYTE PTR [edx-0x54fbdf1f],bl
  412749:	dec    ecx
  41274a:	xor    BYTE PTR [eax],dl
  41274c:	enter  0x3b4,0xf5
  412750:	lds    esi,FWORD PTR [esi-0x46]
  412753:	(bad)  
  412754:	aad    0xdc
  412756:	(bad)  
  412757:	or     BYTE PTR [eax+0x11283b8],al
  41275d:	pushf  
  41275e:	jnp    0x4126f1
  412760:	into   
  412761:	jns    0x4127de
  412763:	adc    al,0x7e
  412765:	retf   0xb68c
  412768:	lahf   
  412769:	cmp    dl,BYTE PTR [edx-0x7ea10ab]
  41276f:	jp     0x4127af
  412771:	cmp    ebp,edi
  412773:	push   cs
  412774:	ja     0x412776
  412776:	ds add ecx,ebx
  412779:	adc    BYTE PTR [ebp-0x55],bl
  41277c:	ror    DWORD PTR [esi],1
  41277e:	inc    eax
  41277f:	xchg   edi,eax
  412780:	pop    esp
  412781:	cmc    
  412782:	cs stos BYTE PTR es:[edi],al
  412784:	push   0x978f8a3a
  412789:	dec    ebx
  41278a:	pushf  
  41278b:	les    esi,FWORD PTR [esi]
  41278d:	jae    0x41274c
  41278f:	sbb    al,0x81
  412791:	inc    ebx
  412792:	sub    ah,dh
  412794:	add    eax,0x5398213e
  412799:	data16 int 0x79
  41279c:	lods   eax,DWORD PTR ds:[esi]
  41279d:	jne    0x4127d2
  41279f:	dec    ebp
  4127a0:	add    BYTE PTR [eax],dh
  4127a2:	xor    eax,0x242ed8ea
  4127a7:	stos   DWORD PTR es:[edi],eax
  4127a8:	or     cl,BYTE PTR [ebx+0x19b69438]
  4127ae:	stos   BYTE PTR es:[edi],al
  4127af:	add    DWORD PTR ds:0xc330782f,0x6483e321
  4127b9:	inc    edi
  4127ba:	push   edi
  4127bb:	xchg   ecx,eax
  4127bc:	pop    ebp
  4127bd:	out    0x1c,al
  4127bf:	out    dx,eax
  4127c0:	js     0x412817
  4127c2:	xchg   DWORD PTR [esi+0x4993e924],esp
  4127c8:	dec    edx
  4127c9:	imul   ebx,esi,0x5c
  4127cc:	bound  edi,QWORD PTR [esi-0x164046c0]
  4127d2:	lds    ecx,FWORD PTR [ebp+0x427327e1]
  4127d8:	mov    bh,0x84
  4127da:	das    
  4127db:	cmp    bh,BYTE PTR [esi*4-0x45c38b08]
  4127e2:	adc    BYTE PTR [edi+0xd],cl
  4127e5:	inc    ebp
  4127e6:	mov    ecx,0xab5da83c
  4127eb:	nop
  4127ec:	cld    
  4127ed:	(bad)  
  4127ee:	sbb    bl,dl
  4127f0:	cwde   
  4127f1:	sbb    esp,DWORD PTR [esi]
  4127f3:	jp     0x4127c5
  4127f5:	test   BYTE PTR [esi-0x6a9e4947],ch
  4127fb:	xchg   DWORD PTR [ecx+0x40f93d7a],eax
  412801:	fbld   TBYTE PTR [ecx]
  412803:	(bad)  
  412804:	xchg   esp,eax
  412805:	jae    0x412811
  412807:	or     ah,BYTE PTR [edx]
  412809:	dec    esp
  41280a:	mov    dh,0x55
  41280c:	jg     0x41285e
  41280e:	or     DWORD PTR [eax+0x42],0x29
  412812:	adc    ch,BYTE PTR [esi-0x3072ef9c]
  412818:	jp     0x412807
  41281a:	add    al,BYTE PTR [edx+ebx*8]
  41281d:	adc    esp,DWORD PTR ds:0x70a5ae15
  412823:	push   ss
  412824:	pop    es
  412825:	push   0x9
  412827:	mov    WORD PTR [esi+0x2d9d8ae7],fs
  41282d:	push   ss
  41282e:	call   0xdce5:0x19f59090
  412835:	aam    0x6e
  412837:	add    ebx,DWORD PTR [eax]
  412839:	adc    bl,bl
  41283b:	xor    ah,dl
  41283d:	fwait
  41283e:	das    
  41283f:	push   esp
  412840:	clc    
  412841:	lds    esp,FWORD PTR [ebp-0x1b60f08]
  412847:	call   0xe3ef:0x931174fa
  41284e:	push   0xffffffc5
  412850:	mov    ecx,gs
  412852:	jle    0x412872
  412854:	rcr    ecx,0xe6
  412857:	push   ebp
  412858:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41285a:	jae    0x412815
  41285c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41285d:	add    dh,BYTE PTR [edi+ebx*4]
  412860:	lods   al,BYTE PTR ds:[esi]
  412861:	xchg   esi,eax
  412862:	cdq    
  412863:	xchg   ebx,eax
  412864:	pop    ebx
  412865:	add    al,0xa3
  412867:	cld    
  412868:	jns    0x412883
  41286a:	scas   eax,DWORD PTR es:[edi]
  41286b:	fxch   st(0)
  41286d:	dec    esp
  41286e:	mov    al,ds:0xf49f65be
  412873:	xor    DWORD PTR [eax],edx
  412875:	pushf  
  412876:	push   ds
  412877:	jno    0x41285e
  412879:	enter  0x1b41,0xd4
  41287d:	stos   BYTE PTR es:[edi],al
  41287e:	jl     0x41280b
  412880:	rcl    esi,0x74
  412883:	dec    edi
  412884:	inc    edx
  412885:	jb     0x4128d3
  412887:	sub    DWORD PTR [ebx-0x61],ebp
  41288a:	and    DWORD PTR [edx],esp
  41288c:	bound  ecx,QWORD PTR [ebx]
  41288e:	ret    0xa1a2
  412891:	sbb    edx,edx
  412893:	icebp  
  412894:	iret   
  412895:	aaa    
  412896:	retf   0xe904
  412899:	jo     0x41283a
  41289b:	leave  
  41289c:	adc    eax,0x280cd767
  4128a1:	imul   ebx,DWORD PTR [ecx],0x10
  4128a4:	mov    esp,0x16bf8f11
  4128a9:	or     eax,0x4c87fcad
  4128ae:	sbb    dl,BYTE PTR [esi-0x5f]
  4128b1:	mov    ebp,0x8509bdf
  4128b6:	stos   BYTE PTR es:[edi],al
  4128b7:	push   edx
  4128b8:	mov    al,0xdb
  4128ba:	retf   0xf9c7
  4128bd:	retf   
  4128be:	push   cs
  4128bf:	in     eax,dx
  4128c0:	and    DWORD PTR fs:[ecx+ebx*2],esi
  4128c4:	cmp    bh,BYTE PTR [edx-0x5add72ca]
  4128ca:	xor    cl,BYTE PTR [ebp-0x71]
  4128cd:	mov    cl,0x6d
  4128cf:	fwait
  4128d0:	adc    bl,ah
  4128d2:	xor    ebx,ecx
  4128d4:	add    al,0xf4
  4128d6:	shl    BYTE PTR [esi],0x93
  4128d9:	xchg   edi,eax
  4128da:	xchg   ebx,eax
  4128db:	out    0x2b,al
  4128dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128de:	fbld   TBYTE PTR [ecx]
  4128e0:	(bad)  
  4128e1:	mov    eax,ds:0xa68dc9b6
  4128e6:	cmp    ah,BYTE PTR [ebx]
  4128e8:	adc    eax,0x4f12c7d
  4128ed:	jbe    0x4128a5
  4128ef:	cwde   
  4128f0:	pop    ds
  4128f1:	sub    dl,BYTE PTR [ebx]
  4128f3:	repnz add esp,DWORD PTR fs:[eax+0x49]
  4128f8:	mov    DWORD PTR [ebx],ebp
  4128fa:	aad    0x31
  4128fc:	xchg   edi,eax
  4128fd:	lods   eax,DWORD PTR ds:[esi]
  4128fe:	dec    esi
  4128ff:	sbb    BYTE PTR [ecx-0x3692d390],al
  412905:	jae    0x412911
  412907:	test   al,0x49
  412909:	push   cs
  41290a:	add    cl,BYTE PTR [ebp+0xdd1d1c9]
  412910:	scas   eax,DWORD PTR es:[edi]
  412911:	bound  edi,QWORD PTR [ecx+0x47c40a91]
  412917:	sub    ch,dh
  412919:	retf   0x2145
  41291c:	loopne 0x4128cb
  41291e:	or     eax,0xcd93994e
  412923:	add    eax,0x8c17058b
  412928:	jae    0x412908
  41292a:	call   0x1990:0xe877438d
  412931:	test   DWORD PTR [ebx-0x3f],edi
  412934:	lea    esi,[esi+0x3a]
  412937:	adc    eax,0x14a068a4
  41293c:	jl     0x412979
  41293e:	mov    eax,ds:0x56ab6923
  412943:	outs   dx,BYTE PTR ds:[esi]
  412944:	mov    ch,0x7a
  412946:	neg    BYTE PTR [ebx-0xe69db97]
  41294c:	aaa    
  41294d:	fisttp WORD PTR [edx+0x280b745]
  412953:	or     DWORD PTR [ebp-0x1b97b1ae],edi
  412959:	dec    ecx
  41295a:	cdq    
  41295b:	sbb    eax,0x1b596b31
  412960:	int3   
  412961:	xor    eax,0x20b6ec8
  412966:	inc    edx
  412967:	cmp    BYTE PTR [esi-0x43],cl
  41296a:	je     0x41291b
  41296c:	mov    ch,0x73
  41296e:	push   ebx
  41296f:	mov    ebp,0x461da867
  412974:	cmp    esi,esp
  412976:	and    BYTE PTR [ecx],al
  412978:	ja     0x41296b
  41297a:	fcomp  DWORD PTR [ebx+edx*1+0x3d0f9d7c]
  412981:	sub    dl,0xba
  412984:	jg     0x412930
  412986:	in     al,0x4e
  412988:	xor    ah,ch
  41298a:	in     eax,dx
  41298b:	push   ebp
  41298c:	pushf  
  41298d:	xchg   ebp,eax
  41298e:	and    cl,ch
  412990:	sbb    al,0xb2
  412992:	mov    ds:0x4f9d0b80,eax
  412997:	sbb    esi,DWORD PTR [ebp-0x46ca5727]
  41299d:	sub    dh,ah
  41299f:	push   ebx
  4129a0:	cmp    DWORD PTR [eax],0xffffffa4
  4129a3:	adc    DWORD PTR [ecx],esp
  4129a5:	push   ss
  4129a6:	int3   
  4129a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129a8:	pop    esp
  4129a9:	jecxz  0x412a21
  4129ab:	adc    al,0x72
  4129ad:	adc    eax,0xe2cf8a5
  4129b2:	int3   
  4129b3:	(bad)  
  4129b4:	jb     0x412988
  4129b6:	or     BYTE PTR [esi+0x45370dee],dl
  4129bc:	jp     0x41298d
  4129be:	mov    ds:0xd2befde,eax
  4129c3:	cmp    eax,0xba7fb970
  4129c8:	fcomp  QWORD PTR [esi]
  4129ca:	in     eax,dx
  4129cb:	mov    ecx,0x58852a81
  4129d0:	call   0x1581:0xca570323
  4129d7:	xor    esi,DWORD PTR [esi+0x50]
  4129da:	sbb    BYTE PTR [ebp+0x39],cl
  4129dd:	mov    bl,0x75
  4129df:	test   BYTE PTR [ebp+edx*4+0x43d0605e],dl
  4129e6:	pop    ss
  4129e7:	mov    ebx,0xd9ab83cd
  4129ec:	push   0x6d9b7fba
  4129f1:	mov    BYTE PTR [esi-0x4c],dl
  4129f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129f5:	or     al,0x1b
  4129f7:	fisubr WORD PTR [edi+0x2c78ae86]
  4129fd:	sub    eax,0x7c26b27b
  412a02:	out    dx,al
  412a03:	or     bl,dh
  412a05:	std    
  412a06:	fdiv   DWORD PTR [ecx+ebp*4-0x2]
  412a0a:	cs mov esi,0xf8b340c1
  412a10:	cmp    dl,bh
  412a12:	cwde   
  412a13:	or     eax,0x45a97167
  412a18:	les    ecx,FWORD PTR [ecx-0x1bdb2a0e]
  412a1e:	in     eax,dx
  412a1f:	retf   0xb2f3
  412a22:	ret    0x1de1
  412a25:	jmp    0x7e91:0x21ee9102
  412a2c:	and    DWORD PTR [edx-0x20],esi
  412a2f:	mov    edi,0x59daa342
  412a34:	stos   DWORD PTR es:[edi],eax
  412a35:	fsubr  QWORD PTR [eax+0x640e45dd]
  412a3b:	mov    bl,BYTE PTR [esi]
  412a3d:	sub    eax,edx
  412a3f:	stos   DWORD PTR es:[edi],eax
  412a40:	xchg   dh,bh
  412a42:	test   BYTE PTR [eax],0x5c
  412a45:	sbb    BYTE PTR [ebp-0x48a3e0ba],bl
  412a4b:	adc    BYTE PTR [ebx+ebp*1+0x7f24e80e],dh
  412a52:	dec    ecx
  412a53:	mov    cl,0x31
  412a55:	repz pushf 
  412a57:	mov    ds:0x13b436cb,al
  412a5c:	loopne 0x412ad1
  412a5e:	nop
  412a5f:	popf   
  412a60:	mov    al,0x60
  412a62:	cmp    DWORD PTR [eax-0x79f41aa5],esp
  412a68:	jb     0x412adb
  412a6a:	push   eax
  412a6b:	adc    al,cl
  412a6d:	outs   dx,BYTE PTR ds:[esi]
  412a6e:	cwde   
  412a6f:	mov    es:0xb0c156a0,al
  412a75:	test   al,0x68
  412a77:	and    ecx,edx
  412a79:	jl     0x412a13
  412a7b:	test   DWORD PTR [eax-0x29884998],0x7ef3f0a1
  412a85:	test   eax,0xa9e067cf
  412a8a:	push   esi
  412a8b:	ins    BYTE PTR es:[edi],dx
  412a8c:	rcl    DWORD PTR [edi+0x3b],0x78
  412a90:	sahf   
  412a91:	xor    eax,0x8518b8e0
  412a96:	inc    ebx
  412a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a98:	mov    ecx,fs
  412a9a:	out    dx,al
  412a9b:	outs   dx,BYTE PTR ds:[esi]
  412a9c:	inc    eax
  412a9d:	and    al,0xe2
  412a9f:	and    edi,0x87d098f8
  412aa5:	inc    eax
  412aa6:	or     dh,0xbf
  412aa9:	jl     0x412a35
  412aab:	jnp    0x412ab9
  412aad:	mov    edx,0xba061e
  412ab2:	mov    ebp,0x856efbf9
  412ab7:	(bad)  
  412ab8:	and    edx,DWORD PTR [ebx]
  412aba:	into   
  412abb:	ins    DWORD PTR es:[edi],dx
  412abc:	adc    DWORD PTR [edi-0x53],ebp
  412abf:	and    BYTE PTR [edi],cl
  412ac1:	push   cs
  412ac2:	mov    edi,0x426785e5
  412ac7:	mov    dl,0x38
  412ac9:	leave  
  412aca:	pusha  
  412acb:	add    BYTE PTR [esi+0xd0b3957],cl
  412ad1:	add    ch,BYTE PTR [esi]
  412ad3:	jg     0x412a90
  412ad5:	rol    BYTE PTR [edx],cl
  412ad7:	jmp    0x38eb464
  412adc:	or     ebp,DWORD PTR [edi-0x4b0f3285]
  412ae2:	daa    
  412ae3:	cmp    BYTE PTR [edx],ch
  412ae5:	shl    BYTE PTR [edi+esi*2-0x43],0x84
  412aea:	rcr    BYTE PTR [esi-0x52],1
  412aed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412aee:	hlt    
  412aef:	mov    WORD PTR [ecx-0x4b36f7f8],fs
  412af5:	add    DWORD PTR [eax-0x63],0x6d
  412af9:	dec    esi
  412afb:	mov    BYTE PTR [esi+ebx*8],ah
  412afe:	push   esi
  412aff:	loopne 0x412b3b
  412b01:	adc    BYTE PTR [ecx+0x7c24205],0xa7
  412b08:	stos   DWORD PTR es:[edi],eax
  412b09:	call   0x25516561
  412b0e:	jl     0x412b60
  412b10:	sahf   
  412b11:	jo     0x412b78
  412b13:	xchg   DWORD PTR [ebp-0x6a],edi
  412b16:	mov    DWORD PTR [esi],edx
  412b18:	inc    eax
  412b19:	icebp  
  412b1a:	mov    WORD PTR [ebx-0x28],es
  412b1d:	pushf  
  412b1e:	sub    eax,0xbe33c258
  412b23:	adc    BYTE PTR [edx+0x26],dl
  412b26:	ret    0xfad7
  412b29:	xor    dh,ch
  412b2b:	mov    ah,0xc0
  412b2d:	xchg   esp,eax
  412b2e:	sub    al,cl
  412b30:	push   eax
  412b31:	cmp    cl,BYTE PTR [edx+esi*8]
  412b34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b35:	xchg   ebp,eax
  412b36:	scas   eax,DWORD PTR es:[edi]
  412b37:	mov    edx,0x557c1057
  412b3c:	ins    DWORD PTR es:[edi],dx
  412b3d:	mov    eax,ds:0x79f136bd
  412b42:	mov    cl,0xfb
  412b44:	dec    ecx
  412b45:	xchg   BYTE PTR [ecx+0x6d58b7eb],bh
  412b4b:	adc    ebp,esp
  412b4d:	adc    al,bh
  412b4f:	inc    esi
  412b50:	gs jns 0x412ae3
  412b53:	int3   
  412b54:	jmp    0x6c2dd9b
  412b59:	inc    dl
  412b5b:	in     al,0x7f
  412b5d:	xor    ah,BYTE PTR [edi+0x58]
  412b60:	(bad)  
  412b61:	loopne 0x412b90
  412b63:	push   ebx
  412b64:	inc    esi
  412b65:	enter  0x36d0,0x46
  412b69:	stos   BYTE PTR es:[edi],al
  412b6a:	inc    esp
  412b6b:	push   ss
  412b6c:	outs   dx,DWORD PTR ds:[esi]
  412b6d:	mov    eax,0xb26e56b4
  412b72:	jb     0x412b38
  412b74:	xchg   ebx,eax
  412b75:	mov    ecx,0x754799c4
  412b7a:	popf   
  412b7b:	das    
  412b7c:	iret   
  412b7d:	cwde   
  412b7e:	cmp    edx,eax
  412b80:	pop    edx
  412b81:	push   es
  412b82:	lahf   
  412b83:	xor    bl,BYTE PTR [esi+0x5ba7da31]
  412b89:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  412b8b:	pushf  
  412b8c:	xchg   ecx,eax
  412b8d:	inc    edx
  412b8e:	(bad)  
  412b8f:	imul   edi,DWORD PTR [esi+0x30],0xffffffda
  412b93:	xor    DWORD PTR [edi-0x51],0x7a
  412b97:	pop    eax
  412b98:	add    DWORD PTR [ebx+0x365f26a9],edx
  412b9e:	test   ah,cl
  412ba0:	xor    DWORD PTR [edi-0x68],ecx
  412ba3:	test   DWORD PTR [ebp-0x1ead968f],eax
  412ba9:	add    ebp,ebx
  412bab:	test   al,0x5
  412bad:	or     DWORD PTR [eax+0x5959e129],ebp
  412bb3:	pop    edx
  412bb4:	sub    al,0x8b
  412bb6:	jg     0x412c03
  412bb8:	or     DWORD PTR [edi+0x4058baed],esi
  412bbe:	into   
  412bbf:	fimul  WORD PTR [esi]
  412bc1:	mov    cl,0xfa
  412bc3:	rcr    edx,cl
  412bc5:	test   dl,ah
  412bc7:	push   ds
  412bc8:	cmp    bh,BYTE PTR [edx+0x20]
  412bcb:	pop    edx
  412bcc:	shr    DWORD PTR [ecx+0x49f7f229],0x22
  412bd3:	(bad)  
  412bd4:	sub    edi,DWORD PTR [ecx]
  412bd6:	stos   DWORD PTR es:[edi],eax
  412bd7:	adc    al,BYTE PTR [edx+0x56]
  412bda:	(bad)  
  412bdb:	jmp    FWORD PTR [eax-0x5b68da3e]
  412be1:	stos   BYTE PTR es:[edi],al
  412be2:	in     eax,0x3d
  412be4:	fld    QWORD PTR [ebx+0x37c1e1c4]
  412bea:	cdq    
  412beb:	jl     0x412be9
  412bed:	push   es
  412bee:	xchg   ebx,eax
  412bef:	mov    dl,0x4b
  412bf1:	enter  0xfc13,0x9f
  412bf5:	inc    ebp
  412bf6:	and    BYTE PTR [eax+0x5cdcb0fe],dl
  412bfc:	push   ds
  412bfd:	jl     0x412be0
  412bff:	repz sti 
  412c01:	sbb    BYTE PTR [edx-0x60],bl
  412c04:	adc    DWORD PTR [eax+eax*2+0x34],0xbdafb83a
  412c0c:	mov    ds:0xa787a89a,eax
  412c11:	jae    0x412c1c
  412c13:	popf   
  412c14:	cs sbb ch,0x76
  412c18:	dec    ebx
  412c19:	out    0xab,eax
  412c1b:	fdivr  st(6),st
  412c1d:	popa   
  412c1e:	and    BYTE PTR ds:0xe06cbcda,0x19
  412c25:	aaa    
  412c26:	pop    ss
  412c27:	rcr    BYTE PTR [edx],cl
  412c29:	mov    ebp,0x92de84e1
  412c2e:	xor    al,0x6f
  412c30:	sbb    DWORD PTR [edi],esp
  412c32:	jmp    0x412c7d
  412c34:	dec    ecx
  412c35:	shr    BYTE PTR [eax],1
  412c37:	mov    al,ds:0x8f588ada
  412c3c:	lock mov ebx,0x58c1fb2
  412c42:	std    
  412c43:	stos   BYTE PTR es:[edi],al
  412c44:	neg    DWORD PTR [eax]
  412c46:	mov    al,0xe6
  412c48:	jne    0x412bd5
  412c4a:	pop    es
  412c4b:	mov    ds:0x966d5375,al
  412c50:	call   0x35bf2cfc
  412c55:	lock jg 0x412c6b
  412c58:	imul   ebx,DWORD PTR [esp+ebp*8-0x758955e1],0x6eb32823
  412c63:	add    DWORD PTR [ebp-0x7c],eax
  412c66:	jno    0x412cb9
  412c68:	test   ecx,eax
  412c6a:	jbe    0x412c59
  412c6c:	pop    es
  412c6d:	aam    0x3f
  412c6f:	(bad)  ds:0x14abf827
  412c75:	in     eax,dx
  412c76:	sti    
  412c77:	dec    ebp
  412c78:	and    bl,BYTE PTR [edi+0x7ad9c6eb]
  412c7e:	stc    
  412c7f:	in     al,dx
  412c80:	ret    
  412c81:	lds    ebx,FWORD PTR [eax]
  412c83:	jnp    0x412cfd
  412c85:	dec    ecx
  412c86:	out    0x18,al
  412c88:	and    bl,al
  412c8a:	cmc    
  412c8b:	mov    al,ds:0x5a5bd5e4
  412c90:	fcmovnu st,st(1)
  412c92:	xor    al,0x57
  412c94:	mov    ds:0xebc62828,al
  412c99:	retf   0x62dc
  412c9c:	or     BYTE PTR [edx+0x77],ah
  412c9f:	lea    edx,[ebp-0x41db8adf]
  412ca5:	and    cl,BYTE PTR [edi+0x22]
  412ca8:	(bad)  
  412ca9:	jecxz  0x412c7b
  412cab:	ins    BYTE PTR es:[edi],dx
  412cac:	int    0x61
  412cae:	or     edx,DWORD PTR [edx+edx*2-0xb]
  412cb2:	das    
  412cb3:	out    0xb3,al
  412cb5:	and    DWORD PTR [edx-0xb],esi
  412cb8:	je     0x412d24
  412cba:	jns    0x412c40
  412cbc:	sti    
  412cbd:	sbb    DWORD PTR [ebp+0x29],eax
  412cc0:	add    eax,0x90552a08
  412cc5:	push   esp
  412cc6:	stos   BYTE PTR es:[edi],al
  412cc7:	shl    BYTE PTR [edx],cl
  412cc9:	pop    edi
  412cca:	fstp   DWORD PTR [esi]
  412ccc:	xchg   ebx,eax
  412ccd:	jne    0x412cba
  412ccf:	jb     0x412ca1
  412cd1:	aad    0x86
  412cd3:	mov    ebp,edx
  412cd5:	pop    esp
  412cd6:	pop    edx
  412cd7:	push   eax
  412cd8:	(bad)  
  412cd9:	push   esi
  412cda:	sbb    al,ch
  412cdc:	pop    eax
  412cdd:	cmp    ebp,edi
  412cdf:	shl    ecx,1
  412ce1:	jo     0x412c8d
  412ce3:	and    ah,ah
  412ce5:	xchg   esp,esp
  412ce7:	sub    eax,0xcc6c60cf
  412ced:	mov    ds:0x213f96ef,eax
  412cf2:	sub    dl,BYTE PTR [edx-0x4f54778c]
  412cf8:	mov    ecx,0xada530b1
  412cfd:	adc    al,0x8d
  412cff:	inc    ecx
  412d00:	cdq    
  412d01:	sbb    BYTE PTR fs:[ebp-0x328c80f4],al
  412d08:	cmp    al,0x3d
  412d0a:	in     al,0x63
  412d0c:	adc    ebx,edi
  412d0e:	(bad)  
  412d0f:	test   DWORD PTR [edx+eiz*4-0x115f92a4],0x741ea87d
  412d1a:	and    DWORD PTR ds:0x9afd40a8,esi
  412d20:	call   0xa10abf30
  412d25:	jecxz  0x412d63
  412d27:	or     al,0xb1
  412d29:	sbb    edi,DWORD PTR [ebx+0x8a3724d]
  412d2f:	call   0xfdfd:0x38e833e3
  412d36:	adc    ecx,ebp
  412d38:	pop    ds
  412d39:	jl     0x412d40
  412d3b:	leave  
  412d3c:	dec    edx
  412d3d:	push   ecx
  412d3e:	pop    edi
  412d3f:	xchg   edi,eax
  412d40:	push   es
  412d41:	dec    esp
  412d42:	mov    DWORD PTR [eax-0x65],eax
  412d45:	push   esp
  412d46:	(bad)  
  412d47:	or     BYTE PTR [esi],dh
  412d49:	sbb    eax,0xf077a132
  412d4e:	shr    BYTE PTR [ebx-0x6e],0xe0
  412d52:	and    dh,BYTE PTR [edi+ebx*1-0x32b8a784]
  412d59:	sub    eax,DWORD PTR [ecx-0x45]
  412d5c:	ror    BYTE PTR [ebx+ebx*2],1
  412d5f:	xlat   BYTE PTR ds:[ebx]
  412d60:	es mov al,0x95
  412d63:	mov    fs,WORD PTR [eax]
  412d65:	add    al,0x14
  412d67:	call   0x3bd7:0x5fe44569
  412d6e:	cmp    cl,BYTE PTR [edi]
  412d70:	rcl    DWORD PTR [edx-0x77],cl
  412d73:	bound  eax,QWORD PTR [ecx-0x17]
  412d76:	inc    eax
  412d78:	inc    ebp
  412d79:	loope  0x412d74
  412d7b:	cwde   
  412d7c:	cmp    cl,0xf
  412d7f:	pushf  
  412d80:	cmp    DWORD PTR [eax+0x6fe8b1db],0x1
  412d87:	out    0xf0,al
  412d89:	and    BYTE PTR [eax],dh
  412d8b:	daa    
  412d8c:	repz fiadd DWORD PTR [ecx+0x61809ece]
  412d93:	cdq    
  412d94:	hlt    
  412d95:	imul   edi,DWORD PTR [ecx+0x6a1c2228],0xffffffed
  412d9c:	fld    TBYTE PTR [ebx+0x6ee1722d]
  412da2:	cld    
  412da3:	or     ebx,DWORD PTR ds:0x6fd9bb69
  412da9:	add    BYTE PTR [esi],0xbf
  412dac:	mov    ecx,0x8e87a257
  412db1:	jl     0x412dda
  412db3:	push   ecx
  412db4:	imul   esi,DWORD PTR [eax],0xd1a314f8
  412dba:	and    ah,BYTE PTR [ebx+0x79b2e40a]
  412dc0:	imul   edx,DWORD PTR [ebx+0x47e818f4],0x3f
  412dc7:	pop    esp
  412dc8:	ins    BYTE PTR es:[edi],dx
  412dc9:	test   eax,0xc247e53
  412dce:	jbe    0x31dee280
  412dd4:	dec    esi
  412dd5:	add    ecx,eax
  412dd7:	lahf   
  412dd8:	fidiv  WORD PTR [esi]
  412dda:	dec    eax
  412ddb:	jnp    0x412daf
  412ddd:	push   ecx
  412dde:	inc    edx
  412ddf:	add    DWORD PTR [ebx],edx
  412de1:	dec    esi
  412de2:	xor    ah,BYTE PTR [ebp+ecx*1-0x76]
  412de6:	aaa    
  412de7:	repnz pop ecx
  412de9:	lods   eax,DWORD PTR ds:[esi]
  412dea:	sbb    BYTE PTR [ecx],dl
  412dec:	add    eax,0x57eddb07
  412df1:	push   edi
  412df2:	push   edi
  412df3:	scas   al,BYTE PTR es:[edi]
  412df4:	sub    BYTE PTR [ebx+0x7efed58a],ah
  412dfa:	lahf   
  412dfb:	push   edi
  412dfc:	aaa    
  412dfd:	and    DWORD PTR [edi*4+0x6c47ae02],ecx
  412e04:	mov    al,ds:0xd0b448ed
  412e09:	scas   al,BYTE PTR es:[edi]
  412e0a:	sar    BYTE PTR [esi+0x2a2e38db],1
  412e10:	jns    0x412e69
  412e12:	in     al,dx
  412e13:	popa   
  412e14:	imul   esi,DWORD PTR [esp+ebp*1],0x90a6ba7b
  412e1b:	imul   DWORD PTR [esi]
  412e1d:	jp     0x412e3f
  412e1f:	mov    ?,WORD PTR [esi]
  412e21:	ins    DWORD PTR es:[edi],dx
  412e22:	xor    ch,BYTE PTR [esi]
  412e24:	in     al,0x51
  412e26:	ds cs es xor eax,ebx
  412e2b:	in     al,0x74
  412e2d:	retf   0xc3ef
  412e30:	xlat   BYTE PTR ds:[ebx]
  412e31:	jmp    0x412dd1
  412e33:	lock (bad) 
  412e35:	out    dx,al
  412e36:	shl    DWORD PTR [edi-0x68],0xaf
  412e3a:	pop    ds
  412e3b:	push   esp
  412e3c:	(bad)  
  412e3d:	sbb    al,0x90
  412e3f:	push   cs
  412e40:	popf   
  412e41:	gs push ds
  412e43:	mov    eax,ds:0x522519d6
  412e48:	(bad)  [eax]
  412e4a:	lods   eax,DWORD PTR ds:[esi]
  412e4b:	or     DWORD PTR [eax+0x7d55a5f8],ecx
  412e51:	mov    BYTE PTR [edx+0x53059e01],dh
  412e57:	mov    ebx,DWORD PTR [ecx+eax*2]
  412e5a:	jmp    0x5be:0xe02c18b3
  412e61:	adc    esi,DWORD PTR [esi+ebx*2+0x79]
  412e65:	(bad)  
  412e66:	in     al,dx
  412e67:	lds    ebp,FWORD PTR [esp+ebx*4-0x20713112]
  412e6e:	mov    eax,ds:0x1a8b7df0
  412e73:	inc    edx
  412e74:	(bad)  
  412e75:	in     al,dx
  412e76:	mov    ds:0x65ca07b5,eax
  412e7b:	ret    
  412e7c:	mov    eax,0xe485ac08
  412e81:	js     0x412eae
  412e83:	ficom  DWORD PTR [ebx+0x5a5027d0]
  412e89:	sbb    dh,BYTE PTR [esi-0x4e]
  412e8c:	rcr    DWORD PTR [ebx],1
  412e8e:	(bad)  
  412e8f:	lock and eax,0xb7c86491
  412e95:	inc    edi
  412e96:	cmp    ecx,DWORD PTR [edx-0x48]
  412e99:	jecxz  0x412f00
  412e9b:	cmp    eax,0x62404d0a
  412ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ea1:	xchg   edx,eax
  412ea2:	jb     0x412ee2
  412ea4:	jmp    0x412f0c
  412ea6:	mov    ebp,ds
  412ea8:	(bad)  
  412ea9:	movd   mm5,DWORD PTR [ebp-0x1b461ffd]
  412eb0:	fbstp  TBYTE PTR ds:0x40d7ee49
  412eb6:	shl    ecx,cl
  412eb8:	xchg   edi,eax
  412eb9:	clc    
  412eba:	sbb    BYTE PTR [ebp+0x48ebcbd6],ch
  412ec0:	out    dx,eax
  412ec1:	cmp    eax,DWORD PTR [esi-0x20]
  412ec4:	sbb    eax,0x2c91db03
  412ec9:	xchg   edx,eax
  412eca:	xchg   ecx,eax
  412ecb:	or     BYTE PTR [edi+0x13],ch
  412ece:	or     al,0x3f
  412ed0:	out    0xef,eax
  412ed2:	popf   
  412ed3:	adc    BYTE PTR [ecx+0x376e9986],dh
  412ed9:	sub    BYTE PTR [esi+0x139bac19],ch
  412edf:	mov    eax,ds:0xf977bdf5
  412ee4:	out    0x5c,eax
  412ee6:	call   0x3881eb96
  412eeb:	in     al,dx
  412eec:	dec    ebp
  412eed:	das    
  412eee:	adc    esp,ebp
  412ef0:	sub    cl,BYTE PTR [ebp-0x58e47a2]
  412ef6:	adc    eax,0x7a459cb5
  412efb:	pop    eax
  412efc:	push   eax
  412efd:	mov    dl,0x8a
  412eff:	aaa    
  412f00:	dec    eax
  412f01:	bound  ebx,QWORD PTR [ebx+0x52]
  412f04:	and    al,0x6a
  412f06:	push   ebp
  412f07:	imul   edi,esp,0x7ff1c5b9
  412f0d:	cmp    al,0xa8
  412f0f:	push   esp
  412f10:	or     edi,DWORD PTR ds:0xe5a1f4af
  412f16:	pusha  
  412f17:	adc    edi,ebx
  412f19:	mov    edx,0x48f1178f
  412f1e:	fisub  DWORD PTR [edx+0xc34e5d2]
  412f24:	(bad)  
  412f25:	sbb    edi,DWORD PTR [ecx-0x165ee904]
  412f2b:	pop    ebx
  412f2c:	int3   
  412f2d:	out    0x67,al
  412f2f:	dec    edi
  412f30:	inc    ebx
  412f31:	rcr    DWORD PTR [esi],cl
  412f33:	pop    es
  412f34:	(bad)  
  412f35:	cmp    al,0x4b
  412f37:	mov    cl,0xb7
  412f39:	daa    
  412f3a:	sar    DWORD PTR [eax+esi*1+0x26e305e4],0xb7
  412f42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f43:	cmp    DWORD PTR [ebx-0x3d6ec18a],esi
  412f49:	cmp    DWORD PTR [esi+ecx*1],edi
  412f4c:	push   esi
  412f4d:	ret    
  412f4e:	ror    DWORD PTR ds:[eax+ebp*2-0x8],0x9d
  412f54:	xchg   ebp,eax
  412f55:	push   ebx
  412f56:	xchg   esi,eax
  412f57:	lahf   
  412f58:	hlt    
  412f59:	pop    edx
  412f5a:	mov    DWORD PTR [ebp-0x54],edx
  412f5d:	clc    
  412f5e:	pop    edi
  412f5f:	cdq    
  412f60:	daa    
  412f61:	mov    ah,BYTE PTR [ebp+eax*2+0xc]
  412f65:	cmp    eax,DWORD PTR [ecx-0x38834d7a]
  412f6b:	ffreep st(6)
  412f6d:	cdq    
  412f6e:	pop    ecx
  412f6f:	(bad)  
  412f70:	adc    edi,esp
  412f72:	scas   eax,DWORD PTR es:[edi]
  412f73:	inc    eax
  412f74:	outs   dx,BYTE PTR ds:[esi]
  412f75:	js     0x412fc0
  412f77:	in     al,dx
  412f78:	test   al,0x74
  412f7a:	sti    
  412f7b:	jp     0x412fbc
  412f7d:	mov    WORD PTR [edx+0x6c],ds
  412f80:	out    dx,eax
  412f81:	lds    ebp,FWORD PTR [edx+0x3a12138a]
  412f87:	daa    
  412f88:	cdq    
  412f89:	xor    DWORD PTR [ecx-0x63],ebp
  412f8c:	loopne 0x412f4e
  412f8e:	jae    0x412f46
  412f90:	test   BYTE PTR ds:[ebx],al
  412f93:	enter  0xded8,0xa0
  412f97:	and    esi,ebp
  412f99:	scas   eax,DWORD PTR es:[edi]
  412f9a:	ins    BYTE PTR es:[edi],dx
  412f9b:	ror    dl,cl
  412f9d:	sahf   
  412f9e:	mov    cl,0xf9
  412fa0:	sbb    al,0xcc
  412fa2:	(bad)  [edx+eiz*1+0x64a01962]
  412fa9:	add    bh,BYTE PTR [ecx-0x6d88e6ee]
  412faf:	pop    ss
  412fb0:	push   ecx
  412fb1:	arpl   WORD PTR [edx-0x65a29aa7],ax
  412fb7:	add    esi,DWORD PTR [edi-0x66]
  412fba:	inc    edx
  412fbb:	lock xchg esp,eax
  412fbd:	push   ds
  412fbe:	mov    BYTE PTR [esi+0x4cc1d6bc],ah
  412fc4:	cmp    al,0xb0
  412fc6:	mov    ds:0x7d23a362,eax
  412fcb:	andnps xmm0,XMMWORD PTR [ebp+0x45]
  412fcf:	stos   DWORD PTR es:[edi],eax
  412fd0:	(bad)  
  412fd1:	outs   dx,DWORD PTR ds:[esi]
  412fd2:	or     DWORD PTR [esi],esi
  412fd4:	arpl   WORD PTR ds:0xa75baa24,bp
  412fda:	pop    eax
  412fdb:	ds pop edx
  412fdd:	jp     0x412f64
  412fdf:	stc    
  412fe0:	call   0xbff57f18
  412fe5:	aaa    
  412fe6:	inc    ebx
  412fe7:	ins    DWORD PTR es:[edi],dx
  412fe8:	ficomp WORD PTR [edi+edi*8]
  412feb:	cmp    al,0x16
  412fed:	mov    dl,0xe2
  412fef:	jne    0x413029
  412ff1:	out    dx,eax
  412ff2:	mov    ds:0x6b93e92f,al
  412ff7:	dec    edi
  412ff8:	jmp    0xbd2d:0x388df231
  412fff:	iret   
  413000:	lea    edx,ds:0x59893719
  413006:	popa   
  413007:	scas   eax,DWORD PTR es:[edi]
  413008:	or     eax,0x67edff67
  41300d:	cmp    al,0xeb
  41300f:	adc    al,0x98
  413011:	push   esp
  413012:	fsub   st,st(0)
  413014:	push   ecx
  413015:	(bad)  
  413016:	cmp    al,0xa7
  413018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413019:	jmp    0x7771:0xfe1566f6
  413020:	iret   
  413021:	sub    esi,DWORD PTR [esi+0x15]
  413024:	mov    dl,0x61
  413026:	rcr    BYTE PTR [esi],1
  413028:	(bad)  
  41302a:	js     0x412fb8
  41302c:	xchg   esi,eax
  41302d:	mov    ds,eax
  41302f:	adc    DWORD PTR [edi+0x4e],edx
  413032:	cmp    esi,DWORD PTR [eax+0x57]
  413035:	scas   al,BYTE PTR es:[edi]
  413036:	out    0x95,al
  413038:	scas   al,BYTE PTR es:[edi]
  413039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41303a:	pop    esp
  41303b:	push   cs
  41303c:	push   edx
  41303d:	ret    0xfd52
  413040:	pop    edi
  413041:	lods   eax,DWORD PTR ds:[esi]
  413042:	iret   
  413043:	push   ebp
  413044:	into   
  413045:	outs   dx,BYTE PTR ds:[esi]
  413046:	(bad)  
  413047:	jb     0x413027
  413049:	jge    0x4130ad
  41304b:	mov    ds:0x14746e2d,ax
  413051:	mov    ds,WORD PTR [ebp+edx*8+0x22]
  413055:	pop    esi
  413056:	fisub  WORD PTR [edi+0x36c6b3b6]
  41305c:	push   0xc25400e0
  413061:	(bad)  
  413062:	icebp  
  413063:	out    dx,eax
  413064:	sub    bh,ch
  413066:	jo     0x4130e1
  413068:	mov    ah,0xf9
  41306a:	fnstenv [ebx]
  41306c:	inc    edx
  41306d:	ret    
  41306e:	out    dx,al
  41306f:	test   dl,ah
  413071:	jp     0x4130ab
  413073:	fs pop ss
  413075:	pop    ss
  413076:	out    0x34,eax
  413078:	push   edx
  413079:	pop    esp
  41307a:	jecxz  0x41306f
  41307c:	loope  0x413073
  41307e:	ret    
  41307f:	and    ecx,DWORD PTR [edx]
  413081:	mov    al,ds:0x1245d3fd
  413086:	ins    DWORD PTR es:[edi],dx
  413087:	and    al,0xbc
  413089:	cdq    
  41308a:	jl     0x41305d
  41308c:	fwait
  41308d:	je     0x41310c
  41308f:	pop    ebx
  413090:	ret    
  413091:	mov    ax,ds:0x788442b1
  413097:	add    al,0x83
  413099:	jl     0x41301d
  41309b:	mov    cl,0xd9
  41309d:	(bad)  
  41309e:	data16 jg 0x4130f5
  4130a1:	cmp    eax,0x1358243f
  4130a6:	ficom  WORD PTR [ebx+0x6e]
  4130a9:	dec    esi
  4130aa:	pusha  
  4130ab:	mov    edi,0x4ceb4de6
  4130b0:	xlat   BYTE PTR ds:[ebx]
  4130b1:	test   BYTE PTR [ebp+edi*1+0xb480ed4],ah
  4130b8:	mov    ebp,0x7bd7da97
  4130bd:	mov    ecx,0x3c78ab0
  4130c2:	popa   
  4130c3:	mov    edi,0x5c8797a
  4130c8:	jnp    0x413051
  4130ca:	cmp    edx,DWORD PTR cs:[ebx+0x47]
  4130ce:	sub    esi,DWORD PTR [eax+0x44]
  4130d1:	pop    esi
  4130d2:	ffree  st(6)
  4130d4:	call   0xc021:0x55aabaa6
  4130db:	mov    BYTE PTR [eax-0x92dbaae],ah
  4130e1:	dec    esp
  4130e2:	sbb    BYTE PTR [edx],dh
  4130e4:	cmp    DWORD PTR [ebx],esi
  4130e6:	cs sub eax,0x8d9384fe
  4130ec:	loope  0x4130ea
  4130ee:	mov    cl,0x92
  4130f0:	pop    ebx
  4130f1:	lods   eax,DWORD PTR ds:[esi]
  4130f2:	pop    ss
  4130f3:	jmp    0x4130b4
  4130f5:	cmp    DWORD PTR [ebx-0x73],ebx
  4130f8:	dec    esp
  4130f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130fa:	stos   BYTE PTR es:[edi],al
  4130fb:	jl     0x413109
  4130fd:	scas   eax,DWORD PTR es:[edi]
  4130fe:	jae    0x413162
  413100:	inc    esp
  413101:	pop    edx
  413102:	cmp    eax,DWORD PTR [esi]
  413104:	int    0x51
  413106:	jmp    0x413137
  413108:	js     0x4130bc
  41310a:	jb     0x41309b
  41310c:	(bad)  
  41310d:	xchg   BYTE PTR [edi+eiz*8-0x5ee4e5d7],dl
  413114:	inc    ebp
  413115:	pop    esp
  413116:	lock fs in al,dx
  413119:	inc    ebp
  41311a:	loope  0x413129
  41311c:	ror    DWORD PTR [edi+eiz*1-0x7d],1
  413120:	push   ecx
  413121:	push   0x0
  413123:	aaa    
  413124:	push   0x61
  413126:	xchg   edi,eax
  413127:	add    eax,0xce8abe83
  41312c:	stos   DWORD PTR es:[edi],eax
  41312d:	pop    es
  41312e:	xchg   edi,eax
  41312f:	jle    0x413113
  413131:	(bad)  
  413133:	rcl    BYTE PTR [eax+0x10ca32f5],cl
  413139:	pop    ss
  41313a:	mov    bh,0x41
  41313c:	jo     0x4130c1
  41313e:	pop    esi
  41313f:	xlat   BYTE PTR ds:[ebx]
  413140:	push   ebx
  413141:	xchg   ebx,eax
  413142:	or     dh,BYTE PTR [ebp-0x44]
  413145:	loop   0x41316d
  413147:	bound  ecx,QWORD PTR [ebx+0x2786fa91]
  41314d:	bound  ebp,QWORD PTR [eax+ebp*2+0x6e]
  413151:	(bad)  
  413153:	add    al,0xc9
  413155:	and    cl,al
  413157:	retf   
  413158:	int3   
  413159:	ss ds dec ebp
  41315c:	sahf   
  41315d:	leave  
  41315e:	pop    ebp
  41315f:	outs   dx,DWORD PTR ds:[esi]
  413160:	ins    DWORD PTR es:[edi],dx
  413161:	add    eax,0x7ac1bad
  413166:	sbb    DWORD PTR [ecx],ebp
  413168:	call   0xc146:0x6825ecc8
  41316f:	test   DWORD PTR [eax-0x7b511b6d],0x9b4c7c23
  413179:	or     DWORD PTR [edx-0x4d],ebx
  41317c:	push   esi
  41317d:	bound  ebp,QWORD PTR [ebp+0x6fdfe350]
  413183:	addr16 ret 0xf395
  413187:	inc    ecx
  413188:	ret    
  413189:	loop   0x413156
  41318b:	imul   esi,DWORD PTR [ebx],0xbc623110
  413191:	cmp    BYTE PTR [edi-0x35bbf6be],0xda
  413198:	retf   0x1a01
  41319b:	push   es
  41319c:	xor    eax,0x3cb3b2fd
  4131a1:	(bad)  
  4131a3:	stos   DWORD PTR es:[edi],eax
  4131a4:	jg     0x41316c
  4131a6:	adc    BYTE PTR [eax],ah
  4131a8:	sbb    al,BYTE PTR [edi+0x25ebf320]
  4131ae:	dec    ecx
  4131af:	cmp    BYTE PTR [edx+0x1877862a],cl
  4131b5:	and    eax,0x654e53c5
  4131ba:	popf   
  4131bb:	mov    ecx,0x91c1bc95
  4131c0:	sub    DWORD PTR ds:0xd8c0ef12,0x693b9db7
  4131ca:	(bad)  
  4131cb:	cs mov esp,0x6724d9d8
  4131d1:	dec    esi
  4131d2:	mov    ebp,0x1c48d14c
  4131d7:	and    al,0x36
  4131d9:	adc    BYTE PTR [ecx+esi*4],dh
  4131dc:	repz pop bx
  4131df:	and    BYTE PTR ds:0xecc94f37,bl
  4131e5:	add    al,0xdb
  4131e7:	jp     0x4131b6
  4131e9:	sbb    al,0xf3
  4131eb:	jge    0x41323c
  4131ed:	sahf   
  4131ee:	shl    bh,1
  4131f0:	pop    edi
  4131f1:	aad    0x6
  4131f3:	stc    
  4131f4:	jg     0x413268
  4131f6:	or     DWORD PTR [ebx],0x3ca12e96
  4131fc:	sub    al,0xfd
  4131fe:	or     al,0xd1
  413200:	neg    DWORD PTR [eax]
  413202:	dec    eax
  413203:	bound  ecx,QWORD PTR ds:0xeb8a5cc
  413209:	div    esp
  41320b:	lods   al,BYTE PTR ds:[esi]
  41320c:	call   0xf057:0x13aa6187
  413213:	xor    ch,BYTE PTR [edi+0x4331754d]
  413219:	add    eax,DWORD PTR [eax+esi*8]
  41321c:	sbb    eax,0x6cf631d8
  413221:	pushf  
  413222:	into   
  413223:	pop    ds
  413224:	add    dh,BYTE PTR [ebp-0x4b]
  413227:	(bad)
  41322b:	(bad)  
  41322c:	call   0x11ecb3bb
  413231:	push   cs
  413232:	mov    ecx,0xa02c777a
  413237:	outs   dx,BYTE PTR ds:[esi]
  413238:	inc    esp
  413239:	adc    DWORD PTR [ecx+0x37],esp
  41323c:	sub    BYTE PTR [ecx-0x75],bl
  41323f:	retf   0x8690
  413242:	jae    0x413204
  413244:	rcr    DWORD PTR [esi+0x10b97a4f],cl
  41324a:	ins    BYTE PTR es:[edi],dx
  41324b:	pop    esi
  41324c:	xchg   edi,eax
  41324d:	mov    WORD PTR [eax+0x2853dd77],?
  413253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413254:	(bad)  
  413255:	loopne 0x41329f
  413257:	mov    eax,0x4e8b902
  41325c:	inc    edx
  41325d:	inc    ecx
  41325e:	into   
  41325f:	je     0x413265
  413261:	mov    ds:0x2808be36,al
  413266:	sub    al,0x9
  413268:	out    dx,eax
  413269:	ins    DWORD PTR es:[edi],dx
  41326a:	cld    
  41326b:	xchg   ebp,eax
  41326c:	lahf   
  41326d:	pusha  
  41326e:	cmp    dh,ch
  413270:	jp     0x4131f7
  413272:	jno    0x4132a6
  413274:	dec    ecx
  413275:	push   ebx
  413276:	adc    al,0xfd
  413278:	jp     0x4132db
  41327a:	push   cs
  41327b:	dec    esi
  41327c:	inc    ebx
  41327d:	fcmovb st,st(1)
  41327f:	xchg   ecx,eax
  413280:	xchg   BYTE PTR [edi+0x3e],ah
  413283:	out    dx,al
  413284:	adc    ecx,DWORD PTR [esi]
  413286:	clc    
  413287:	jp     0x41320c
  413289:	popf   
  41328a:	sub    edi,DWORD PTR [edi-0xc60905a]
  413290:	je     0x41330b
  413292:	scas   eax,DWORD PTR es:[edi]
  413293:	mov    dh,0x23
  413295:	pop    ebx
  413296:	call   0x7153aacf
  41329b:	call   0x53c7:0xaea4f33b
  4132a2:	retf   
  4132a3:	scas   al,BYTE PTR es:[edi]
  4132a4:	stc    
  4132a5:	cmp    edi,ebp
  4132a7:	sub    DWORD PTR ds:0xc32bf893,esp
  4132ad:	mov    ecx,0x2849811b
  4132b2:	pushf  
  4132b3:	ret    0x14b3
  4132b6:	not    BYTE PTR [edx]
  4132b8:	fmul   st(1),st
  4132ba:	adc    DWORD PTR [edx+0x68c25697],0xffffff8b
  4132c1:	in     al,0x48
  4132c3:	aad    0xad
  4132c5:	mov    BYTE PTR [ecx-0x3d],cl
  4132c8:	ss iret 
  4132ca:	lds    ecx,FWORD PTR [edx+0x3bcce13]
  4132d0:	mov    edx,0x7abb029b
  4132d5:	xchg   edi,eax
  4132d6:	pusha  
  4132d7:	adc    al,0xcd
  4132d9:	fwait
  4132da:	pmulhw mm7,mm0
  4132dd:	retf   
  4132de:	sub    BYTE PTR [ecx-0x31],al
  4132e1:	push   ds
  4132e2:	and    ebx,esp
  4132e4:	mov    cl,0xce
  4132e6:	push   ecx
  4132e7:	shl    DWORD PTR [ebx],cl
  4132e9:	xchg   ebx,eax
  4132ea:	mov    esp,0x75f0ab94
  4132ef:	mov    al,0xb8
  4132f1:	data16 mov cl,0x32
  4132f4:	test   BYTE PTR [esi+0x4d59997a],bh
  4132fa:	mov    dl,0xb0
  4132fc:	test   al,0x37
  4132fe:	add    eax,DWORD PTR [edx]
  413300:	add    al,0x3f
  413302:	lds    ebp,FWORD PTR [esi]
  413304:	pop    edx
  413305:	pop    esi
  413306:	push   cs
  413307:	push   cs
  413308:	mov    ah,0x12
  41330a:	fimul  WORD PTR [eax-0x23]
  41330d:	push   0xffffffd9
  41330f:	or     ecx,DWORD PTR [ebx-0x424411b]
  413315:	pop    esi
  413316:	and    cl,al
  413318:	mov    eax,DWORD PTR [ebx+0x37]
  41331b:	in     al,dx
  41331c:	scas   eax,DWORD PTR es:[edi]
  41331d:	jecxz  0x4132db
  41331f:	int3   
  413320:	xor    DWORD PTR [esi+0x51],eax
  413323:	mov    eax,ds:0x8bc79a78
  413328:	(bad)  
  413329:	pop    edx
  41332a:	(bad)  
  41332b:	rcr    DWORD PTR [esi-0x1c],1
  41332e:	cmc    
  41332f:	js     0x413387
  413331:	xchg   edx,eax
  413332:	or     BYTE PTR [eax+ecx*4],dh
  413335:	jl     0x4132bd
  413337:	pop    ds
  413338:	mov    DWORD PTR [edi],esi
  41333a:	call   0xfc45fbad
  41333f:	and    al,0xe1
  413341:	ins    BYTE PTR es:[edi],dx
  413342:	xchg   esp,eax
  413343:	scas   al,BYTE PTR es:[edi]
  413344:	sub    bl,dl
  413346:	xchg   ebp,eax
  413347:	retf   0x9f3c
  41334a:	jnp    0x41339b
  41334c:	(bad)  
  41334d:	cli    
  41334e:	inc    esi
  41334f:	mov    ah,0xc1
  413351:	into   
  413352:	push   ss
  413353:	sbb    al,0x76
  413355:	cdq    
  413356:	sub    edx,ecx
  413358:	jne    0x41335b
  41335a:	imul   ecx,DWORD PTR [edx],0xed3f3911
  413360:	pop    ss
  413361:	adc    ebx,DWORD PTR [ebx+0x1a91b4b1]
  413367:	sbb    DWORD PTR [edi+0x50],edx
  41336a:	outs   dx,BYTE PTR ds:[esi]
  41336b:	sahf   
  41336c:	add    eax,0x918bfd1f
  413371:	mov    edi,0xd931abfd
  413376:	add    ecx,ebx
  413378:	(bad)  
  413379:	push   0x6ec29de8
  41337e:	mov    eax,0x19172fe
  413383:	push   0xaad1fab6
  413388:	outs   dx,BYTE PTR ds:[esi]
  413389:	dec    esp
  41338a:	data16 adc di,bx
  41338e:	sub    ebp,edi
  413390:	cli    
  413391:	adc    BYTE PTR ds:0x2b106485,dh
  413397:	mov    bh,0xb2
  413399:	lods   eax,DWORD PTR ds:[esi]
  41339a:	push   ecx
  41339b:	jecxz  0x413325
  41339d:	xor    eax,0xd421c38
  4133a2:	fnstcw WORD PTR [ebx-0x6a8ba3ea]
  4133a8:	popf   
  4133a9:	push   es
  4133aa:	mov    ds:0xc8f740d3,eax
  4133af:	mov    BYTE PTR [esi],dh
  4133b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133b2:	xchg   edi,eax
  4133b3:	iret   
  4133b4:	icebp  
  4133b5:	inc    edx
  4133b6:	ror    DWORD PTR [ecx+0x6ee90c2c],1
  4133bc:	and    al,0xf7
  4133be:	pop    ds
  4133bf:	sti    
  4133c0:	or     dl,BYTE PTR [ebx+ebp*2]
  4133c3:	ret    
  4133c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133c5:	dec    edx
  4133c6:	pop    esi
  4133c7:	ret    
  4133c8:	and    DWORD PTR [ecx-0x5af97786],esi
  4133ce:	into   
  4133cf:	push   0xf3d697f4
  4133d4:	adc    ecx,DWORD PTR [edi]
  4133d6:	in     al,0xd
  4133d8:	add    al,0xd3
  4133da:	cmc    
  4133db:	fcomp  QWORD PTR [ecx]
  4133dd:	add    eax,0xa3afce1c
  4133e2:	lods   al,BYTE PTR ds:[esi]
  4133e3:	mov    eax,0x931b0fe4
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	scas   al,BYTE PTR es:[edi]
  4133ea:	push   0x2f
  4133ec:	mov    ds:0xa360c2fb,al
  4133f1:	mov    edx,0xaccb84f
  4133f6:	lods   eax,DWORD PTR ds:[esi]
  4133f7:	push   cs
  4133f8:	and    bl,al
  4133fa:	mov    ecx,0xcee6c730
  4133ff:	fstp   TBYTE PTR [eax+0x4c8855fa]
  413405:	dec    ebp
  413406:	mov    eax,ds:0x64c75095
  41340b:	icebp  
  41340c:	dec    ecx
  41340d:	out    0x78,eax
  41340f:	call   DWORD PTR [eax-0x42a7f9fc]
  413415:	js     0x4133bf
  413417:	cli    
  413418:	inc    edi
  413419:	jge    0x413443
  41341b:	fdivr  QWORD PTR ds:0xe95e3a04
  413421:	fst    DWORD PTR [ecx-0x18d02cad]
  413427:	jle    0x413420
  413429:	jmp    0xcc91:0x3a4fb8be
  413430:	mov    eax,0xbd54e1ff
  413435:	arpl   bx,cx
  413437:	xchg   BYTE PTR [ebp+0x49],ah
  41343a:	div    BYTE PTR [ecx]
  41343c:	and    edx,DWORD PTR [edi]
  41343e:	stos   DWORD PTR es:[edi],eax
  41343f:	int    0x5f
  413441:	(bad)  
  413442:	pop    edi
  413443:	push   cs
  413444:	jo     0x413465
  413446:	sbb    DWORD PTR [ecx],ebx
  413448:	pop    ds
  413449:	mov    esp,0x85d6119b
  41344f:	popf   
  413450:	repz inc esi
  413452:	or     al,0xbc
  413454:	stos   DWORD PTR es:[edi],eax
  413455:	add    edx,DWORD PTR [edx+0x14]
  413458:	cli    
  413459:	inc    esi
  41345a:	outs   dx,BYTE PTR cs:[esi]
  41345c:	mov    esi,0x98571871
  413461:	outs   dx,BYTE PTR ds:[esi]
  413462:	retf   
  413463:	adc    al,0xd9
  413465:	sbb    dh,BYTE PTR [esi+0x7b404153]
  41346b:	lock xor BYTE PTR [ebx+0x41],ah
  41346f:	xchg   ecx,eax
  413470:	mov    bl,0x79
  413472:	inc    esp
  413473:	xchg   DWORD PTR [ebx+edx*4-0x6fab4ec9],ebp
  41347a:	xor    BYTE PTR [ebx-0x23],ah
  41347d:	mov    ds:0xcef6f0f5,al
  413482:	cmp    BYTE PTR [ecx+0x8],dl
  413485:	or     ah,BYTE PTR [edx]
  413487:	fwait
  413488:	adc    al,0xf
  41348a:	sub    al,0x4
  41348c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41348d:	in     al,dx
  41348e:	mov    dl,0xdd
  413490:	sub    eax,DWORD PTR fs:[edx-0x32d35652]
  413497:	push   ds
  413498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413499:	inc    edx
  41349a:	mov    esp,0xe065c6bc
  41349f:	push   ss
  4134a0:	mov    dh,0x3a
  4134a2:	xor    eax,0x6799d70d
  4134a7:	call   0xf5c44bd6
  4134ac:	mov    ebp,0x5dfb758f
  4134b1:	pop    ebp
  4134b2:	popf   
  4134b3:	push   ss
  4134b4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134b6:	fnstenv [esi+0x49]
  4134b9:	add    al,0x92
  4134bb:	cld    
  4134bc:	(bad)  
  4134bd:	jns    0x413470
  4134bf:	inc    ecx
  4134c0:	dec    ebx
  4134c1:	cmp    DWORD PTR [edx-0x3b],0xfffffff4
  4134c5:	and    eax,0x341d33ef
  4134ca:	mov    eax,ds:0x2b6d41eb
  4134cf:	mov    bl,0x89
  4134d1:	(bad)  
  4134d2:	mov    ebp,0xb456ed48
  4134d7:	add    ch,BYTE PTR [ebp-0x14]
  4134da:	rol    DWORD PTR [edi],cl
  4134dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134dd:	pusha  
  4134de:	sub    ecx,DWORD PTR [edx-0x45]
  4134e1:	jecxz  0x4134d7
  4134e3:	lea    ecx,[edi+edx*8+0xd]
  4134e7:	xor    eax,ebx
  4134e9:	ins    BYTE PTR es:[edi],dx
  4134ea:	dec    esp
  4134eb:	dec    edx
  4134ec:	int    0x20
  4134ee:	mov    dh,0x5a
  4134f0:	adc    cl,0x14
  4134f3:	mov    esp,0xb3c5796
  4134f8:	cmp    eax,0x4f148070
  4134fd:	mov    cl,0xcb
  4134ff:	adc    BYTE PTR [esi],cl
  413501:	xchg   edi,eax
  413502:	inc    edx
  413503:	sub    edx,ecx
  413505:	mov    edi,0xfacd4b12
  41350a:	cwde   
  41350b:	or     DWORD PTR [ebx+0x52],edx
  41350e:	fisttp WORD PTR [eax-0x26]
  413511:	sub    eax,0x2443641d
  413516:	mov    dl,0x52
  413518:	mov    al,0xac
  41351a:	xchg   edi,eax
  41351b:	sub    al,0xfb
  41351d:	arpl   si,di
  41351f:	jmp    0x9653:0x9812a401
  413526:	mov    ah,0x9c
  413528:	out    0xd2,al
  41352a:	xchg   ebp,ecx
  41352c:	sbb    eax,0x70a291a3
  413531:	add    ecx,DWORD PTR [edi]
  413533:	mov    esi,0x8d6e4d5f
  413538:	cmp    DWORD PTR [ebx+0x4e],ebp
  41353b:	sbb    al,0xb6
  41353d:	pop    esp
  41353e:	fs xchg esp,eax
  413540:	cmp    esp,DWORD PTR [esi+ebx*2+0x1]
  413544:	xchg   edx,eax
  413545:	mov    BYTE PTR [ebx+0x5c],bl
  413548:	sbb    BYTE PTR [edi-0x37],dh
  41354b:	test   DWORD PTR [esi],edx
  41354d:	cmp    al,0xb0
  41354f:	ss ds sub esi,edx
  413553:	(bad)  
  413555:	xchg   esi,eax
  413556:	or     BYTE PTR [esp+ebp*8],bh
  413559:	or     al,bh
  41355b:	mov    cl,0x52
  41355d:	push   es
  41355e:	sbb    ah,BYTE PTR [edx+0x51476d58]
  413564:	pop    esi
  413565:	ins    DWORD PTR es:[edi],dx
  413566:	lods   al,BYTE PTR ds:[esi]
  413567:	mov    ch,0xab
  413569:	adc    ebx,esp
  41356b:	and    al,0xd1
  41356d:	popa   
  41356e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41356f:	clc    
  413570:	out    0x1b,eax
  413572:	push   edx
  413573:	outs   dx,BYTE PTR ds:[esi]
  413574:	(bad)  
  413575:	pop    eax
  413576:	xor    BYTE PTR ds:0x52e3db93,al
  41357c:	or     esp,DWORD PTR [edi+0x11]
  41357f:	add    eax,0x3069675e
  413584:	jle    0x4135d1
  413586:	jp     0x413538
  413588:	mov    cl,0x20
  41358a:	or     eax,0x20d6f981
  41358f:	clc    
  413590:	jl     0x413547
  413592:	or     ah,ah
  413594:	iret   
  413595:	retf   0xfe28
  413598:	ins    BYTE PTR es:[edi],dx
  413599:	fnstcw WORD PTR [eax-0x72c7ce1f]
  41359f:	xchg   edi,eax
  4135a0:	jle    0x413575
  4135a2:	sar    DWORD PTR [eax],cl
  4135a4:	neg    bh
  4135a6:	dec    edi
  4135a7:	mov    bh,0xe
  4135a9:	sub    DWORD PTR [ebx],0xb0f9ae8f
  4135af:	call   0x8e13e617
  4135b4:	test   al,0x19
  4135b6:	test   al,0x3f
  4135b8:	sbb    bl,0xc6
  4135bb:	sbb    eax,0x3dcbc9ff
  4135c0:	and    ebx,0x45
  4135c3:	int    0xfe
  4135c5:	push   es
  4135c6:	mov    edx,0x54fc14c
  4135cb:	icebp  
  4135cc:	xor    BYTE PTR [ecx+0x4f6b57f4],dl
  4135d2:	scas   al,BYTE PTR es:[edi]
  4135d3:	mov    ds:0x74b11420,eax
  4135d8:	push   ecx
  4135d9:	sbb    eax,0x26eae78b
  4135de:	xchg   ebp,eax
  4135df:	aas    
  4135e0:	outs   dx,DWORD PTR ds:[esi]
  4135e1:	sbb    BYTE PTR [eax+0x71],bl
  4135e4:	jecxz  0x413653
  4135e6:	xor    eax,0xc728a29b
  4135eb:	pop    ebp
  4135ec:	lea    edi,[eax-0x6c]
  4135ef:	cmp    al,BYTE PTR [eax+ecx*4+0x51]
  4135f3:	push   esp
  4135f4:	pop    eax
  4135f5:	mov    dh,0x79
  4135f7:	pop    ss
  4135f8:	jge    0x413634
  4135fa:	test   eax,0x159d14e8
  4135ff:	add    DWORD PTR [edi+eax*8-0x6afe9c8],esp
  413606:	inc    ecx
  413607:	mov    esi,DWORD PTR [eax+eax*4]
  41360a:	rcl    BYTE PTR [ecx-0x3a],1
  41360d:	adc    DWORD PTR [edi],ecx
  41360f:	jnp    0x4135ec
  413611:	out    dx,eax
  413612:	jle    0x4135ba
  413614:	push   es
  413615:	loopne 0x4135b5
  413617:	fdivr  QWORD PTR [esi]
  413619:	mov    eax,ds:0x73200a3b
  41361e:	es popaw 
  413621:	out    dx,eax
  413622:	not    BYTE PTR [ebx]
  413624:	test   DWORD PTR [esi+ebp*2+0x365b6bc9],eax
  41362b:	adc    dl,bl
  41362d:	sbb    cl,BYTE PTR [eax]
  41362f:	cmp    bh,al
  413631:	popf   
  413632:	mov    bh,0x41
  413634:	adc    eax,DWORD PTR [edi+0x4aab9611]
  41363a:	nop
  41363b:	das    
  41363c:	jg     0x41362a
  41363e:	xor    BYTE PTR [esi+0x7b7bf0b6],dl
  413644:	aad    0xa3
  413646:	aad    0x19
  413648:	and    dh,bl
  41364a:	adc    al,BYTE PTR [eax-0x31]
  41364d:	hlt    
  41364e:	add    bh,dh
  413650:	(bad)  
  413652:	mov    al,ch
  413654:	xchg   ebx,eax
  413655:	sub    ah,BYTE PTR [esi+0x6bdf9a59]
  41365b:	arpl   WORD PTR [eax],ax
  41365d:	jno    0x4135e5
  41365f:	popf   
  413660:	cmp    DWORD PTR [edi+0x21],0xffffffab
  413664:	fld    TBYTE PTR [esi]
  413666:	xor    edx,DWORD PTR [ebx+ecx*1-0x279e7ed4]
  41366d:	sbb    DWORD PTR [eax-0x74],0x4d0a4ea4
  413674:	push   ebp
  413675:	dec    edx
  413676:	out    0x45,eax
  413678:	mov    ds:0x5806afcb,eax
  41367d:	mov    bl,0xbb
  41367f:	scas   eax,DWORD PTR es:[edi]
  413680:	cmp    eax,0x6678b83e
  413685:	adc    esi,DWORD PTR [ebp-0x71c00de5]
  41368b:	stc    
  41368c:	stos   DWORD PTR es:[edi],eax
  41368d:	lods   al,BYTE PTR ds:[esi]
  41368e:	push   0xffffffff
  413690:	jl     0x4136a3
  413692:	ss push edi
  413694:	add    esi,eax
  413696:	mov    bl,0x9c
  413698:	pop    es
  413699:	sbb    BYTE PTR [edi+0x722fb8a3],0xf7
  4136a0:	fnsave [esi+0x3c]
  4136a3:	test   BYTE PTR [edx+0xa],0x78
  4136a7:	mov    DWORD PTR [ecx-0x3b4206b9],ebx
  4136ad:	or     BYTE PTR [edx],dl
  4136af:	es mov ah,0x54
  4136b2:	je     0x413706
  4136b4:	popa   
  4136b5:	inc    esp
  4136b6:	inc    eax
  4136b7:	lahf   
  4136b8:	call   0x276e:0x36c4d487
  4136bf:	cs pop edi
  4136c1:	(bad)  
  4136c2:	shl    DWORD PTR [ebp+0x1],cl
  4136c5:	imul   eax,DWORD PTR [edi+eax*4+0x75],0xffffffe7
  4136ca:	jmp    0x413744
  4136cc:	or     dl,BYTE PTR [esi+0x703d4f4e]
  4136d2:	sbb    dh,BYTE PTR [esp+ecx*8]
  4136d5:	stos   DWORD PTR es:[edi],eax
  4136d6:	lods   al,BYTE PTR ds:[esi]
  4136d7:	mov    sp,0x2743
  4136db:	es out 0x11,eax
  4136de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136df:	dec    eax
  4136e0:	add    ebx,edx
  4136e2:	mov    bl,0x5
  4136e4:	call   0xd7b4f2e3
  4136e9:	push   0x72b0605e
  4136ee:	xchg   edi,eax
  4136ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136f0:	mov    ds:0x418dd096,al
  4136f5:	push   ecx
  4136f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136f7:	inc    eax
  4136f8:	mov    bl,0xce
  4136fa:	add    al,BYTE PTR [edx]
  4136fc:	mov    bl,0x29
  4136fe:	adc    al,0x49
  413700:	pop    ecx
  413701:	aam    0x3c
  413703:	retf   0x6c4f
  413706:	mov    al,ds:0x602b01e1
  41370b:	xor    ecx,DWORD PTR [edi-0x2c5254d8]
  413711:	mov    al,0x5b
  413713:	or     esi,DWORD PTR [ebx+edi*2+0x7814e5d9]
  41371a:	jle    0x4136a6
  41371c:	xor    ecx,DWORD PTR [ecx+0x2e385597]
  413722:	not    BYTE PTR [ecx-0x18244568]
  413728:	stos   DWORD PTR es:[edi],eax
  413729:	and    al,0x1d
  41372b:	mov    dh,0x50
  41372d:	push   edx
  41372e:	or     BYTE PTR [edi],ah
  413730:	scas   eax,DWORD PTR es:[edi]
  413731:	sahf   
  413732:	nop
  413733:	out    0x35,al
  413735:	adc    eax,0x31ed33b
  41373a:	jno    0x4136fa
  41373c:	imul   ecx,DWORD PTR gs:[edi-0x43],0x2b
  413741:	popa   
  413742:	test   BYTE PTR [ecx+eax*1-0x28535c7a],0xbc
  41374a:	dec    ecx
  41374b:	retf   
  41374c:	jmp    0x4137a6
  41374e:	add    BYTE PTR [edi],bh
  413750:	call   0x2c82d1c2
  413755:	or     al,0x3a
  413757:	pop    esi
  413758:	sar    DWORD PTR [ebp+0x2b49d2d6],1
  41375e:	(bad)  
  41375f:	lock mov cl,dl
  413762:	cmc    
  413763:	lods   eax,DWORD PTR ds:[esi]
  413764:	loope  0x413744
  413766:	mov    dh,0xbb
  413768:	cmp    dh,BYTE PTR [esi-0x2dcbbfdc]
  41376e:	imul   edi,DWORD PTR [edx-0x2f9eae30],0x45
  413775:	push   ecx
  413776:	jae    0x4137d0
  413778:	mov    dh,0xc2
  41377a:	sti    
  41377b:	rol    ch,cl
  41377d:	add    DWORD PTR [edx],edi
  41377f:	xchg   esi,eax
  413780:	fstp   QWORD PTR [edx-0x5f]
  413783:	sbb    al,0x22
  413785:	xchg   esi,esp
  413787:	rcr    ebp,cl
  413789:	push   es
  41378a:	mov    ds:0x9cb82f0c,eax
  41378f:	out    0x61,eax
  413791:	add    al,0x90
  413793:	xlat   BYTE PTR ds:[ebx]
  413794:	ret    0xe83b
  413797:	mov    gs,WORD PTR [edx]
  413799:	mov    al,ds:0x9b4d5e13
  41379e:	dec    ecx
  41379f:	mov    eax,ds:0xac560479
  4137a4:	adc    edx,esp
  4137a6:	test   DWORD PTR [edx],ebx
  4137a8:	pop    ecx
  4137a9:	repnz pop ds
  4137ab:	out    dx,al
  4137ac:	xchg   ecx,eax
  4137ad:	push   ss
  4137ae:	mov    ebx,0xdd965f6d
  4137b3:	out    0x40,al
  4137b5:	xor    DWORD PTR [edx],eax
  4137b7:	dec    edx
  4137b8:	dec    edx
  4137b9:	dec    eax
  4137ba:	adc    BYTE PTR cs:[ebp-0x78181daa],cl
  4137c1:	int    0x9b
  4137c3:	out    0xaa,eax
  4137c5:	and    ecx,DWORD PTR [ecx+0x2b9af209]
  4137cb:	nop
  4137cc:	repnz sbb eax,0xae26a947
  4137d2:	xor    al,0x2e
  4137d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137d5:	popf   
  4137d6:	sbb    DWORD PTR [esi-0x50837245],edx
  4137dc:	sbb    esi,DWORD PTR [edi+esi*8-0x6a]
  4137e0:	xlat   BYTE PTR ds:[ebx]
  4137e1:	jno    0x413850
  4137e3:	fs push edx
  4137e5:	and    DWORD PTR [esi],0xffffffc7
  4137e8:	icebp  
  4137e9:	das    
  4137ea:	or     ebp,DWORD PTR [edi+0x47]
  4137ed:	mov    eax,ds:0x179f755d
  4137f2:	sti    
  4137f3:	xchg   DWORD PTR [bx+di-0x55],edx
  4137f7:	mov    dl,BYTE PTR [eax+0x1715fbe9]
  4137fd:	pop    ebx
  4137fe:	lahf   
  4137ff:	jne    0x4137c6
  413801:	stos   DWORD PTR es:[edi],eax
  413802:	adc    DWORD PTR [ebx+0x6d7c20aa],ecx
  413808:	shr    DWORD PTR ss:[edi+0x2e149fef],cl
  41380f:	ja     0x413867
  413811:	or     al,BYTE PTR [ebx+0xe6802e2]
  413817:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413818:	mov    ds:0xf795977,eax
  41381d:	push   ebp
  41381e:	xchg   ecx,eax
  41381f:	mov    ch,0x87
  413821:	retf   0x561f
  413824:	cli    
  413825:	cs jge 0x413895
  413828:	popa   
  413829:	shl    BYTE PTR [ecx-0x6f],1
  41382c:	lds    edx,FWORD PTR [edx-0x1e05d928]
  413832:	or     eax,0xce355fdb
  413837:	inc    eax
  413838:	je     0x413876
  41383a:	add    eax,0xa4ba3037
  41383f:	clc    
  413840:	inc    ebp
  413841:	mov    es,edi
  413843:	mov    esi,0x132385f9
  413848:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413849:	(bad)  
  41384a:	pop    ss
  41384b:	in     al,0x68
  41384d:	loopne 0x413832
  41384f:	scas   al,BYTE PTR es:[edi]
  413850:	lods   al,BYTE PTR ds:[esi]
  413851:	ss jmp 0x41386b
  413854:	jge    0x4138c7
  413856:	jmp    0xdb31cf1
  41385b:	push   ss
  41385c:	fcomp  DWORD PTR [ecx]
  41385e:	sbb    al,0x6d
  413860:	cmc    
  413861:	fstp   TBYTE PTR [ecx+0x6c]
  413864:	jge    0x4138aa
  413866:	xchg   esp,eax
  413867:	popf   
  413868:	jns    0x413867
  41386a:	push   ecx
  41386b:	sbb    ecx,DWORD PTR [ecx*8-0xb31c1fd]
  413872:	jg     0x413826
  413874:	or     eax,esi
  413876:	hlt    
  413877:	lods   eax,DWORD PTR ds:[esi]
  413878:	dec    eax
  413879:	cmc    
  41387a:	lahf   
  41387b:	in     eax,dx
  41387c:	mov    eax,0x27f95f98
  413881:	cmc    
  413882:	ins    BYTE PTR es:[edi],dx
  413883:	pop    ecx
  413884:	(bad)  
  413885:	push   di
  413887:	push   ebp
  413888:	push   cs
  413889:	enter  0x1b11,0x9a
  41388d:	call   0xe7aa2cd8
  413892:	sub    esp,ebp
  413894:	and    esp,ecx
  413896:	fcomp  DWORD PTR [ecx+0x7eba85d2]
  41389c:	jb     0x4138b7
  41389e:	scas   al,BYTE PTR es:[edi]
  41389f:	pop    edx
  4138a0:	inc    edi
  4138a1:	test   eax,0x92a14c0f
  4138a6:	mov    esi,0x7ceb6934
  4138ab:	mov    edx,0x4a300b82
  4138b0:	push   cs
  4138b1:	inc    BYTE PTR [ebp+ecx*2+0x38]
  4138b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138b6:	mov    ecx,0xf46bd88c
  4138bb:	xor    DWORD PTR [edx-0x33ad56be],ebx
  4138c1:	xchg   BYTE PTR [ebx+0x3f],bh
  4138c4:	cld    
  4138c5:	scas   eax,DWORD PTR es:[edi]
  4138c6:	ins    DWORD PTR es:[edi],dx
  4138c7:	into   
  4138c8:	fdecstp 
  4138ca:	fcmovbe st,st(2)
  4138cc:	xchg   ecx,eax
  4138cd:	and    DWORD PTR [edi+esi*1+0x701cd74a],edx
  4138d4:	jo     0x413903
  4138d6:	sti    
  4138d7:	mov    ebp,edx
  4138d9:	stc    
  4138da:	inc    eax
  4138db:	jae    0x413925
  4138dd:	test   DWORD PTR [ebx-0x27],esi
  4138e0:	mov    eax,0x8077a6c
  4138e5:	inc    ebp
  4138e6:	imul   ecx,DWORD PTR [edi-0x19031001],0xda231e7e
  4138f0:	(bad)  
  4138f1:	sbb    eax,edi
  4138f3:	pop    esi
  4138f4:	inc    eax
  4138f5:	sbb    ebx,DWORD PTR [ebx-0x4c]
  4138f8:	iret   
  4138f9:	icebp  
  4138fa:	and    al,0xbb
  4138fc:	cwde   
  4138fd:	mov    ds:0x144ad630,eax
  413902:	fisttp WORD PTR ds:0x2eceb1e9
  413908:	jae    0x4138bd
  41390a:	adc    DWORD PTR [esi+0x15a4e9b0],ebp
  413910:	cmc    
  413911:	fsubr  DWORD PTR [edx+ecx*2-0x5a]
  413915:	cli    
  413916:	cmc    
  413917:	push   esi
  413918:	mov    al,ds:0xa0b8b2a2
  41391d:	or     al,0x5b
  41391f:	sub    edx,DWORD PTR [edx+0x6c20fd53]
  413925:	cli    
  413926:	sahf   
  413927:	or     al,BYTE PTR fs:[ebp-0x24246949]
  41392e:	sbb    DWORD PTR [edi-0x4dd0ad5c],ecx
  413934:	daa    
  413935:	push   ebx
  413936:	test   eax,0x8c6ae737
  41393b:	jb     0x41397a
  41393d:	sub    dl,BYTE PTR cs:[ecx+0x1da541f2]
  413944:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413945:	mov    WORD PTR [esp+esi*1-0x3c76ee6b],?
  41394c:	outs   dx,BYTE PTR ds:[esi]
  41394d:	call   0x2d28:0x6739458f
  413954:	int    0x84
  413956:	sbb    eax,edi
  413958:	xor    DWORD PTR [eax],ebp
  41395a:	push   edx
  41395b:	loop   0x4138fa
  41395d:	cld    
  41395e:	inc    ecx
  41395f:	call   0x944c86d7
  413964:	stc    
  413965:	nop
  413966:	std    
  413967:	mov    eax,ds:0x649a6b9f
  41396c:	out    0x44,al
  41396e:	inc    edi
  41396f:	aam    0x2e
  413971:	out    dx,al
  413972:	or     eax,DWORD PTR [ebx]
  413974:	xchg   ebx,eax
  413975:	mov    ecx,0x593ab26d
  41397a:	clc    
  41397b:	mov    ds,WORD PTR [esi+0x29]
  41397e:	aas    
  41397f:	out    0x93,eax
  413981:	push   ebx
  413982:	cmp    ch,bl
  413984:	clc    
  413985:	mov    BYTE PTR [esp+eax*4-0x171b387d],al
  41398c:	mov    al,ds:0x2bb70a11
  413991:	test   al,0xef
  413993:	jle    0x4139a1
  413995:	add    bh,BYTE PTR [ebx]
  413997:	mov    edi,0x69db2532
  41399c:	push   ds
  41399d:	mov    eax,0x85e59dea
  4139a2:	jmp    0xb8ca:0x909e734c
  4139a9:	or     DWORD PTR ds:0xfedb457c,ecx
  4139af:	pop    esi
  4139b0:	and    BYTE PTR [edi-0x267cbd72],ch
  4139b6:	adc    ecx,0xffffffd1
  4139b9:	mov    eax,ds:0xcdbc8997
  4139be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139bf:	cld    
  4139c0:	mov    WORD PTR [ebx-0x319b17f6],?
  4139c6:	xor    eax,0xd6c4d251
  4139cb:	imul   DWORD PTR [ecx+eiz*2]
  4139ce:	add    al,0x1f
  4139d0:	adc    edi,DWORD PTR [edi-0x29084205]
  4139d6:	ss push edi
  4139d8:	retf   0xde9
  4139db:	repnz ins BYTE PTR es:[edi],dx
  4139dd:	jl     0x413a15
  4139df:	pop    edi
  4139e0:	les    ebx,FWORD PTR [edx-0x2a]
  4139e3:	(bad)  
  4139e4:	scas   eax,DWORD PTR es:[edi]
  4139e5:	mov    edi,0xd60c93e1
  4139ea:	xchg   esi,eax
  4139eb:	retf   
  4139ec:	add    BYTE PTR [ecx+0x6],al
  4139ef:	xchg   edx,eax
  4139f0:	jge    0x413996
  4139f2:	mov    ch,0x48
  4139f4:	jp     0x413a0b
  4139f6:	pop    eax
  4139f7:	jmp    0x413a2a
  4139f9:	test   BYTE PTR [esi-0x6bed6f48],dh
  4139ff:	rcr    DWORD PTR [edi-0x29129ecd],0xa9
  413a06:	je     0x413a63
  413a08:	fcomp  QWORD PTR ds:0xfe6946d5
  413a0e:	setbe  dl
  413a11:	out    0x22,eax
  413a13:	jmp    0x4139e8
  413a15:	mov    ecx,DWORD PTR [edx+0x4a]
  413a18:	xor    al,0x80
  413a1a:	es push esi
  413a1c:	fwait
  413a1d:	shl    BYTE PTR [ebp-0x70d276a9],cl
  413a23:	inc    edx
  413a24:	xor    esp,0xffffffa2
  413a27:	mov    esp,0xd4de75e9
  413a2c:	pushf  
  413a2d:	mov    ah,0x6d
  413a2f:	xchg   ecx,eax
  413a30:	lds    ebp,FWORD PTR [ebx]
  413a32:	pop    ebp
  413a33:	sbb    ecx,esi
  413a35:	mov    al,ds:0x5f83b9f6
  413a3a:	std    
  413a3b:	mov    esi,0x94ef9a91
  413a40:	outs   dx,DWORD PTR ds:[esi]
  413a41:	mov    BYTE PTR [eax],ah
  413a43:	call   0x5fe2:0x2aac6890
  413a4a:	xchg   ecx,eax
  413a4b:	retf   
  413a4c:	ret    0xee00
  413a4f:	push   0x541ad026
  413a54:	dec    esi
  413a55:	ins    DWORD PTR es:[edi],dx
  413a56:	push   0xd
  413a58:	xchg   edx,eax
  413a59:	std    
  413a5a:	aam    0x9
  413a5c:	stc    
  413a5d:	rcr    DWORD PTR [edi],1
  413a5f:	push   esi
  413a60:	call   0x7a94:0x288ee345
  413a67:	imul   esp,DWORD PTR [edx-0x4f4628c1],0xffffffaf
  413a6e:	pop    eax
  413a6f:	dec    eax
  413a70:	jg     0x413a2a
  413a72:	jbe    0x413a03
  413a74:	jbe    0x413a33
  413a76:	cmp    cl,BYTE PTR ds:0xffc07a84
  413a7c:	mov    al,0xbe
  413a7e:	dec    edx
  413a7f:	shr    DWORD PTR [esp+esi*1+0x842aeda],cl
  413a86:	mov    edi,0xb2642c1c
  413a8b:	jmp    DWORD PTR [esi-0x7b7bd7fb]
  413a91:	mov    ch,ah
  413a93:	gs and ebp,esp
  413a96:	repnz test DWORD PTR [esi],0x1b039f04
  413a9d:	and    BYTE PTR [ecx+ecx*8-0x7f92daa7],al
  413aa4:	mov    al,BYTE PTR [esi-0x44ef95b6]
  413aaa:	outs   dx,BYTE PTR ds:[esi]
  413aab:	adc    eax,0x9993657c
  413ab0:	addr16 clc 
  413ab2:	xchg   esp,eax
  413ab3:	les    edx,FWORD PTR [ecx-0x2c8d0052]
  413ab9:	test   al,0x4e
  413abb:	mov    bl,0xa3
  413abd:	fdivr  QWORD PTR [edx-0xe665040]
  413ac3:	adc    eax,0x46296293
  413ac8:	arpl   WORD PTR [esi-0x2f],di
  413acb:	xor    DWORD PTR [edi],esp
  413acd:	or     BYTE PTR [esi+0x47],al
  413ad0:	rcr    ch,cl
  413ad2:	(bad)  
  413ad3:	out    dx,eax
  413ad4:	mov    edi,ebp
  413ad6:	push   edx
  413ad7:	or     al,0xdf
  413ad9:	adc    dh,BYTE PTR [edx]
  413adb:	jge    0x413b43
  413add:	ja     0x413a7f
  413adf:	mov    ah,ah
  413ae1:	mov    al,ds:0xc3f1bdd3
  413ae6:	sbb    DWORD PTR [ebx],eax
  413ae8:	add    eax,0x5ef7b559
  413aed:	sbb    BYTE PTR [ebx-0x5c],bl
  413af0:	stos   BYTE PTR es:[edi],al
  413af1:	out    dx,eax
  413af2:	mov    bl,0x86
  413af4:	xor    eax,0xdb30c408
  413af9:	sti    
  413afa:	mov    ah,0x8a
  413afc:	inc    eax
  413afd:	mov    ecx,esp
  413aff:	cmp    ah,dl
  413b01:	popf   
  413b02:	pop    ss
  413b03:	test   BYTE PTR gs:0x16885f3b,bl
  413b0a:	jno    0x413b7b
  413b0c:	mov    edi,0xabf33b2
  413b11:	jl     0x413ac3
  413b13:	pop    esp
  413b14:	das    
  413b15:	mov    ds,WORD PTR [ebp-0x79]
  413b18:	rol    DWORD PTR [ebp+ebp*4+0x6495b58f],0xbf
  413b20:	pop    esi
  413b21:	call   FWORD PTR ds:0x81eaa797
  413b27:	jle    0x413b37
  413b29:	ins    BYTE PTR es:[edi],dx
  413b2a:	fadd   st,st(1)
  413b2c:	(bad)  
  413b2d:	mov    cl,0x5a
  413b2f:	mov    edx,0x477ed191
  413b34:	xchg   edx,eax
  413b35:	push   esp
  413b36:	stos   BYTE PTR es:[edi],al
  413b37:	sbb    cl,ah
  413b39:	push   esi
  413b3a:	(bad)  
  413b3b:	jle    0x413b4a
  413b3d:	daa    
  413b3e:	test   eax,0x994ef01a
  413b43:	push   cs
  413b44:	scas   al,BYTE PTR es:[edi]
  413b45:	(bad)  
  413b46:	push   ecx
  413b47:	push   esi
  413b48:	int    0xc
  413b4a:	inc    esp
  413b4b:	clc    
  413b4c:	into   
  413b4d:	fldenv ds:[edx]
  413b50:	sbb    DWORD PTR [edi-0x50],ecx
  413b53:	stc    
  413b54:	jae    0x413bce
  413b56:	int    0x18
  413b58:	fbstp  TBYTE PTR [eax+ecx*8+0x72]
  413b5c:	xchg   ebp,eax
  413b5d:	inc    eax
  413b5e:	sbb    al,0x77
  413b60:	push   eax
  413b61:	lds    edx,FWORD PTR [ecx-0x50]
  413b64:	popa   
  413b65:	mov    cl,0x24
  413b67:	adc    bl,BYTE PTR [ebx+eax*1+0x6369c909]
  413b6e:	adc    al,0xdc
  413b70:	cmp    BYTE PTR [edx],al
  413b72:	js     0x413b55
  413b74:	or     edx,DWORD PTR [ecx+0x57]
  413b77:	adc    al,0x49
  413b79:	jno    0x413b91
  413b7b:	aas    
  413b7c:	push   esi
  413b7d:	mov    ah,0x4f
  413b7f:	xchg   ch,ch
  413b81:	pop    eax
  413b82:	adc    ecx,DWORD PTR [ebx]
  413b84:	ins    BYTE PTR es:[edi],dx
  413b85:	mov    eax,ds:0x4df99d37
  413b8a:	jne    0x413b3c
  413b8c:	jle    0x413b99
  413b8e:	or     BYTE PTR [esi-0x306e5eb],ch
  413b94:	sahf   
  413b95:	test   BYTE PTR [ebp-0x305bb3f4],dh
  413b9b:	data16 aad 0xaf
  413b9e:	push   es
  413b9f:	cli    
  413ba0:	fild   QWORD PTR [ebp+edi*1+0x6]
  413ba4:	sbb    al,0x99
  413ba6:	or     esp,edx
  413ba8:	ins    BYTE PTR es:[edi],dx
  413ba9:	pop    edi
  413baa:	call   0x6d61:0x8aa90c2a
  413bb1:	push   0x2f
  413bb3:	xor    ch,BYTE PTR [eax-0x47]
  413bb6:	mov    bh,0x8a
  413bb8:	xchg   DWORD PTR [ecx+0x74],edx
  413bbb:	(bad)  
  413bbc:	push   0x1f
  413bbe:	jge    0x413b55
  413bc0:	ret    0xd394
  413bc3:	fistp  DWORD PTR [ecx-0x5e099d18]
  413bc9:	push   eax
  413bca:	cmp    bh,dh
  413bcc:	pop    ds
  413bcd:	mov    BYTE PTR [eax+0x716facae],bl
  413bd3:	(bad)  
  413bd5:	mov    esp,DWORD PTR [eax]
  413bd7:	cld    
  413bd8:	push   cs
  413bd9:	into   
  413bda:	fstp   DWORD PTR [edi]
  413bdc:	or     BYTE PTR [ebp+0x43],ah
  413bdf:	or     eax,0x717bafeb
  413be4:	(bad)  
  413be5:	das    
  413be6:	ins    DWORD PTR es:[edi],dx
  413be7:	sbb    BYTE PTR [esi+0x5c],ah
  413bea:	loop   0x413c4e
  413bec:	loop   0x413c16
  413bee:	jle    0x413c06
  413bf0:	repnz out 0xb9,al
  413bf3:	das    
  413bf4:	ret    
  413bf5:	pushf  
  413bf6:	test   al,0xec
  413bf8:	xlat   BYTE PTR ds:[ebx]
  413bf9:	mov    ebx,ebx
  413bfb:	jae    0x413c73
  413bfd:	rcl    esp,0x91
  413c00:	fld    TBYTE PTR [ebp+0x664ed301]
  413c06:	push   cs
  413c07:	dec    eax
  413c08:	call   0x1c3d:0x1408f95d
  413c0f:	push   ebp
  413c10:	pop    edi
  413c11:	push   edi
  413c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c13:	mov    ah,0x32
  413c15:	sbb    al,BYTE PTR [esi+ebx*4]
  413c18:	cmc    
  413c19:	inc    ebx
  413c1a:	add    dl,BYTE PTR [esi+0x4d6ebb0c]
  413c20:	ret    
  413c21:	enter  0x46c5,0xef
  413c25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c26:	(bad)  
  413c27:	cmp    esi,esp
  413c29:	outs   dx,BYTE PTR ds:[esi]
  413c2a:	ret    
  413c2b:	cli    
  413c2c:	fsubrp st(6),st
  413c2e:	or     eax,0x60a384f5
  413c33:	loopne 0x413be4
  413c35:	int3   
  413c36:	mov    esp,0xaa1863a5
  413c3b:	add    eax,0x9bd8a98c
  413c40:	and    DWORD PTR [ebp-0x79],ebx
  413c43:	mov    edx,0x55f2a8bb
  413c48:	daa    
  413c49:	mov    ds:0xc0682e84,al
  413c4e:	jno    0x413c0a
  413c50:	sub    DWORD PTR [edi+eiz*2],edx
  413c53:	and    al,0xd
  413c55:	xor    BYTE PTR [ecx],ah
  413c57:	xchg   esi,eax
  413c58:	jnp    0x413cc1
  413c5a:	cwde   
  413c5b:	cmp    esp,DWORD PTR [ecx+0x6d08c770]
  413c61:	rol    DWORD PTR [esi+0x44],cl
  413c64:	mov    ds:0xf3772548,al
  413c69:	rcl    DWORD PTR [ebp+0x174ae8c5],0x53
  413c70:	sahf   
  413c71:	jle    0x413cb1
  413c73:	xchg   DWORD PTR [esi-0x80],edi
  413c76:	js     0x413cf1
  413c78:	mov    eax,ds:0xcbd3d256
  413c7d:	pop    ecx
  413c7e:	jae    0x413cf4
  413c80:	mov    eax,ds:0x265f1402
  413c85:	add    bh,ch
  413c87:	test   DWORD PTR [ebx],ebp
  413c89:	or     dl,ch
  413c8b:	jo     0x413c1d
  413c8d:	inc    eax
  413c8e:	xchg   ecx,eax
  413c8f:	das    
  413c90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c91:	and    edx,edi
  413c93:	(bad)
  413c96:	adc    al,0x37
  413c98:	xchg   ebx,eax
  413c99:	les    esi,FWORD PTR [edi+0x2b]
  413c9c:	aad    0xd3
  413c9e:	test   ebx,edi
  413ca0:	add    dl,BYTE PTR [edx+eiz*1+0x7a9fe1c]
  413ca7:	add    bh,BYTE PTR [eax-0x46]
  413caa:	retf   0x993a
  413cad:	scas   eax,DWORD PTR es:[edi]
  413cae:	aaa    
  413caf:	inc    esi
  413cb0:	mov    esi,0x670b0b71
  413cb5:	xor    BYTE PTR [ebx+0x23b09674],cl
  413cbb:	adc    ch,BYTE PTR [ebx+0x3e]
  413cbe:	sub    eax,DWORD PTR [esi]
  413cc0:	and    esi,esi
  413cc2:	cmp    al,0x73
  413cc4:	inc    eax
  413cc5:	cli    
  413cc6:	adc    bh,BYTE PTR [eax]
  413cc8:	jb     0x413d36
  413cca:	pop    esi
  413ccb:	scas   eax,DWORD PTR es:[edi]
  413ccc:	ins    DWORD PTR es:[edi],dx
  413ccd:	retf   0x8490
  413cd0:	lds    ebx,FWORD PTR [eax]
  413cd2:	lods   eax,DWORD PTR ds:[esi]
  413cd3:	int    0x71
  413cd5:	cmc    
  413cd6:	stos   BYTE PTR es:[edi],al
  413cd7:	int3   
  413cd8:	inc    edi
  413cd9:	jae    0x413cd0
  413cdb:	fisttp QWORD PTR [eax+0x3e50c34d]
  413ce1:	or     ebp,DWORD PTR [edi+0x55]
  413ce4:	iret   
  413ce5:	mov    al,0xdb
  413ce7:	push   0x16a1f40b
  413cec:	push   eax
  413ced:	jae    0x413c7c
  413cef:	repnz lock mov ebp,0x7bc2c98e
  413cf6:	lods   al,BYTE PTR ds:[esi]
  413cf7:	xor    eax,eax
  413cf9:	cmp    ecx,DWORD PTR [ecx-0x135d7b8f]
  413cff:	int    0x6a
  413d01:	pushf  
  413d02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d03:	out    dx,al
  413d04:	pop    esi
  413d05:	sub    al,0xe9
  413d07:	and    BYTE PTR [esi-0x77],dh
  413d0a:	adc    ch,dl
  413d0c:	icebp  
  413d0d:	repz cdq 
  413d0f:	pop    esi
  413d10:	mov    edi,0x2584e3ee
  413d15:	fistp  DWORD PTR [edx]
  413d17:	and    esi,DWORD PTR [ebx-0x7ca6149e]
  413d1d:	popf   
  413d1e:	fbstp  TBYTE PTR [edi+0x3342192c]
  413d24:	mov    dl,0xf9
  413d26:	or     al,0xfa
  413d28:	cmp    esp,DWORD PTR [ebp+0xb]
  413d2b:	dec    esp
  413d2c:	xchg   esi,eax
  413d2d:	fsub   st(3),st
  413d2f:	and    DWORD PTR [ebp+0x3b],esp
  413d32:	mov    ebp,eax
  413d34:	xchg   esi,eax
  413d35:	shr    esp,1
  413d37:	mov    ah,0x28
  413d39:	cmp    dl,ch
  413d3b:	adc    DWORD PTR [ecx],ebx
  413d3d:	jo     0x413d4c
  413d3f:	dec    edx
  413d40:	or     cl,bl
  413d42:	push   edi
  413d43:	inc    edi
  413d44:	hlt    
  413d45:	lahf   
  413d46:	in     eax,dx
  413d47:	jge    0x413dab
  413d49:	cmp    edi,DWORD PTR [edx+0x66195fc5]
  413d4f:	push   edi
  413d50:	jno    0x413cfc
  413d52:	dec    esi
  413d53:	ss xchg edx,eax
  413d55:	xrelease xchg DWORD PTR es:[ecx+0xa],ebp
  413d5a:	stc    
  413d5b:	nop
  413d5c:	inc    esi
  413d5d:	or     BYTE PTR [ebp+0x2c099671],0xa6
  413d64:	repnz cld 
  413d66:	and    al,0xa8
  413d68:	mov    BYTE PTR [ebx+ecx*2+0x118981c1],dl
  413d6f:	shl    BYTE PTR [eax-0x77],0x1e
  413d73:	enter  0xe37,0xc1
  413d77:	repz mov bh,0xee
  413d7a:	sbb    eax,0xb28a89b3
  413d7f:	pop    ss
  413d80:	call   0x34d5:0x1ac18ff9
  413d87:	cmc    
  413d88:	inc    eax
  413d89:	loop   0x413d2e
  413d8b:	jb     0x413d9d
  413d8d:	aam    0x5c
  413d8f:	inc    edi
  413d90:	retf   0x6399
  413d93:	cmp    DWORD PTR [ecx],esp
  413d95:	adc    eax,0x70eb20e2
  413d9a:	jle    0x413daf
  413d9c:	xchg   BYTE PTR [eax],bl
  413d9e:	fmul   DWORD PTR [ebx-0xa]
  413da1:	jmp    0xfd754f79
  413da6:	dec    esp
  413da7:	cmp    bh,BYTE PTR [eax+ecx*8-0x18]
  413dab:	or     bh,BYTE PTR [ecx]
  413dad:	mov    esp,0x9e16aa3f
  413db2:	push   edx
  413db3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413db4:	cwde   
  413db5:	jge    0x413dcd
  413db7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413db8:	test   bh,ah
  413dba:	jbe    0x413dc2
  413dbc:	xor    eax,0x9ac76003
  413dc1:	lods   al,BYTE PTR ds:[esi]
  413dc2:	jnp    0x413d83
  413dc4:	outs   dx,BYTE PTR ds:[esi]
  413dc5:	jmp    0xa065:0x437214d4
  413dcc:	and    BYTE PTR [ebx+0x1b],bh
  413dcf:	retf   0x7747
  413dd2:	(bad)  
  413dd4:	jmp    0xa7709c59
  413dd9:	ins    BYTE PTR es:[edi],dx
  413dda:	aaa    
  413ddb:	mov    ah,BYTE PTR [edi+0x7f]
  413dde:	fld    st(7)
  413de0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413de1:	sub    eax,0x9086eb27
  413de6:	(bad)  
  413de7:	arpl   WORD PTR ds:0xacf72914,ax
  413ded:	fadd   DWORD PTR [ebx+0x1c]
  413df0:	mov    DWORD PTR [esi],eax
  413df2:	fnstsw WORD PTR [eax+0x2b008361]
  413df8:	xchg   DWORD PTR es:[edx+0x393276b1],esi
  413dff:	sub    bh,ch
  413e01:	adc    al,0x2d
  413e03:	dec    eax
  413e04:	mov    ds:0x69c144b9,eax
  413e09:	ins    DWORD PTR es:[edi],dx
  413e0a:	out    0x9f,al
  413e0c:	push   es
  413e0d:	and    dh,BYTE PTR [ebp-0x2d0d1d5b]
  413e13:	fistp  DWORD PTR [ebx+0x39]
  413e16:	sti    
  413e17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e18:	jmp    0xc495:0x4161c2f
  413e1f:	bound  ecx,QWORD PTR [ebp-0xa]
  413e22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e23:	fadd   QWORD PTR [ebp+0x65]
  413e26:	loop   0x413e6e
  413e28:	mov    ch,0xa9
  413e2a:	in     eax,dx
  413e2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e2c:	pushf  
  413e2d:	int3   
  413e2e:	loopne 0x413e4f
  413e30:	add    al,0x8a
  413e32:	adc    ebx,DWORD PTR [ebx]
  413e34:	js     0x413e51
  413e36:	(bad)  
  413e37:	int3   
  413e38:	push   esp
  413e39:	outs   dx,BYTE PTR ds:[esi]
  413e3a:	loop   0x413e1b
  413e3c:	in     al,0x8
  413e3e:	or     al,BYTE PTR [ebx-0x38]
  413e41:	imul   eax,DWORD PTR [ecx-0x75],0x75
  413e45:	add    eax,0x1f0ba314
  413e4a:	xchg   edi,edi
  413e4c:	(bad)  
  413e4d:	enter  0x67c2,0x4f
  413e51:	les    ecx,FWORD PTR [ebx]
  413e53:	jmp    0x6bf586ea
  413e58:	pop    ds
  413e59:	pop    esi
  413e5a:	invlpg BYTE PTR [eax-0x76]
  413e5e:	jno    0x413e4d
  413e60:	sbb    DWORD PTR [esi],ecx
  413e62:	sbb    edi,edi
  413e64:	dec    ebx
  413e65:	pop    ebx
  413e66:	ins    BYTE PTR es:[edi],dx
  413e67:	pop    ds
  413e68:	jle    0x413e3a
  413e6a:	in     al,dx
  413e6b:	push   ebx
  413e6c:	leave  
  413e6d:	mov    bl,dl
  413e6f:	ins    BYTE PTR es:[edi],dx
  413e70:	and    BYTE PTR ds:0xb5a64084,bl
  413e76:	xchg   esp,eax
  413e77:	push   cs
  413e78:	mov    dh,0x25
  413e7a:	rcr    DWORD PTR [eax-0x5],cl
  413e7d:	sbb    dh,al
  413e7f:	jnp    0x413ebb
  413e81:	push   es
  413e82:	jmp    0x413e24
  413e84:	lock cmp eax,0xa12ce311
  413e8a:	pop    ebp
  413e8b:	mov    ecx,0xfcbf44aa
  413e90:	dec    BYTE PTR [eax]
  413e92:	mov    ds,WORD PTR [esi]
  413e94:	inc    edx
  413e95:	iret   
  413e96:	mov    eax,0x7ca26622
  413e9b:	jno    0x413e72
  413e9d:	add    edi,ebp
  413e9f:	call   0xa6ac:0xaef43d97
  413ea6:	popa   
  413ea7:	add    BYTE PTR [edi+0x2ce9ecc4],bh
  413ead:	mov    esi,ebp
  413eaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413eb0:	push   ebx
  413eb1:	lock mov ds:0xd0c6fe50,eax
  413eb7:	(bad)  
  413eb8:	pop    ds
  413eb9:	fcom   DWORD PTR [edi+0x41a2f9d9]
  413ebf:	push   esi
  413ec0:	shr    DWORD PTR [ebp+0x4f],cl
  413ec3:	mov    ebx,0xa6bb3141
  413ec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ec9:	adc    al,BYTE PTR [edx+0x17808ae5]
  413ecf:	call   0x7aa0fe27
  413ed4:	jmp    0x8457:0xe9808bb4
  413edb:	in     al,dx
  413edc:	sbb    DWORD PTR [ecx],ebp
  413ede:	shr    ch,1
  413ee0:	call   0x200f2567
  413ee5:	pop    es
  413ee6:	jno    0x413f21
  413ee8:	jae    0x413f5b
  413eea:	adc    BYTE PTR ds:0x799a74e2,bh
  413ef0:	out    dx,al
  413ef1:	pushf  
  413ef2:	jecxz  0x413f25
  413ef4:	js     0x413f3a
  413ef6:	lods   eax,DWORD PTR ds:[esi]
  413ef7:	inc    esp
  413ef8:	xchg   ebx,eax
  413ef9:	cs push esp
  413efb:	fdivr  QWORD PTR [esi-0x41]
  413efe:	idiv   BYTE PTR [edi]
  413f00:	xor    BYTE PTR [ecx],0x4e
  413f03:	inc    ebp
  413f04:	loop   0x413f21
  413f06:	out    dx,eax
  413f07:	lock ins BYTE PTR es:[edi],dx
  413f09:	jns    0x413ef2
  413f0b:	pop    edi
  413f0c:	les    edx,FWORD PTR es:[edi]
  413f0f:	shl    BYTE PTR ds:0x4aa29e8b,0x44
  413f16:	inc    esp
  413f17:	dec    esp
  413f18:	adc    DWORD PTR [esi-0x68],edx
  413f1b:	or     eax,edx
  413f1d:	bound  edi,QWORD PTR [eax+0x6ae85b0b]
  413f23:	div    DWORD PTR ds:0x532f2176
  413f29:	mov    ebx,0x40690b53
  413f2e:	retf   
  413f2f:	js     0x413f17
  413f31:	test   eax,0x5626602e
  413f36:	cmp    eax,0xc2f35d14
  413f3b:	xor    al,0xfd
  413f3d:	mov    eax,gs
  413f3f:	out    0x42,al
  413f41:	inc    ebp
  413f42:	call   0x4f8858be
  413f47:	cmp    BYTE PTR [edi],dh
  413f49:	loopne 0x413f3f
  413f4b:	(bad)  
  413f4d:	xor    eax,0xffce61d9
  413f52:	shl    DWORD PTR [esi+0x6baa4dff],cl
  413f58:	xor    cl,BYTE PTR [esi+0x4]
  413f5b:	mov    ah,0x30
  413f5d:	pop    ss
  413f5e:	adc    DWORD PTR [ecx-0x4833cc1f],eax
  413f64:	inc    eax
  413f65:	and    BYTE PTR [eax+0x50],dh
  413f68:	jnp    0x413fb7
  413f6a:	mov    eax,0x7d30a1f9
  413f6f:	inc    esp
  413f70:	adc    DWORD PTR [eax],ecx
  413f72:	push   ss
  413f73:	icebp  
  413f74:	lds    ebx,FWORD PTR [ecx]
  413f76:	(bad)  
  413f77:	es inc esp
  413f79:	lock and eax,0xd734cf4d
  413f7f:	sti    
  413f80:	dec    esp
  413f81:	scas   al,BYTE PTR es:[edi]
  413f82:	clc    
  413f83:	dec    ecx
  413f84:	popf   
  413f85:	push   bx
  413f87:	mov    bl,BYTE PTR [edi+ebp*4]
  413f8a:	fwait
  413f8b:	mov    ah,0xf2
  413f8d:	(bad)  
  413f8e:	call   DWORD PTR [ecx+0x5d5b2db5]
  413f94:	test   eax,0x80be38bd
  413f99:	mov    bh,0x5d
  413f9b:	cdq    
  413f9c:	pushf  
  413f9d:	mov    dh,0xe9
  413f9f:	sahf   
  413fa0:	aam    0xa7
  413fa2:	iret   
  413fa3:	jmp    0x413fe7
  413fa5:	inc    esp
  413fa6:	or     BYTE PTR [esi],bh
  413fa8:	stos   BYTE PTR es:[edi],al
  413fa9:	das    
  413faa:	push   ds
  413fab:	lea    edx,[ebp+0x3ec84717]
  413fb1:	push   ecx
  413fb2:	(bad)  
  413fb3:	call   0xe48af1a0
  413fb8:	shr    BYTE PTR [edi-0x49b696cf],cl
  413fbe:	xor    eax,0x78099865
  413fc3:	out    dx,eax
  413fc4:	sub    al,0x10
  413fc6:	cmp    eax,0x4990a91f
  413fcb:	adc    eax,0x60c7ce5
  413fd0:	mov    dl,0xe2
  413fd2:	sub    bh,BYTE PTR [edi-0x18]
  413fd5:	scas   eax,DWORD PTR es:[edi]
  413fd6:	cmp    BYTE PTR [eax-0x7f210af8],dl
  413fdc:	adc    dh,cl
  413fde:	cmp    eax,0x3fc3a2b0
  413fe3:	or     ecx,ecx
  413fe5:	sahf   
  413fe6:	or     DWORD PTR [eax+edi*2],0xffffff8e
  413fea:	mov    bl,0x1
  413fec:	repz loop 0x413ff2
  413fef:	jae    0x414070
  413ff1:	sub    DWORD PTR [ecx-0x995a815],ecx
  413ff7:	stc    
  413ff8:	pop    edi
  413ff9:	or     eax,0x96a328d6
  413ffe:	retf   0x2d37
  414001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414002:	xor    DWORD PTR [edx],edi
  414004:	jne    0x413fe0
  414006:	mov    DWORD PTR [esi-0xcd72b1f],ebx
  41400c:	test   al,0xd3
  41400e:	mov    eax,0xe20c99b8
  414013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414014:	int3   
  414015:	loopne 0x414089
  414017:	icebp  
  414018:	cwde   
  414019:	in     al,dx
  41401a:	arpl   dx,bp
  41401c:	ret    0xaed4
  41401f:	rcr    dl,cl
  414021:	fdivr  DWORD PTR [bp+si-0x77]
  414025:	mov    cl,BYTE PTR [ebx+ebx*2+0x157d5816]
  41402c:	xchg   ebx,eax
  41402d:	imul   edi,esi,0xffffffd7
  414030:	ds daa 
  414032:	pop    ds
  414033:	add    al,0x80
  414035:	and    edi,ecx
  414037:	imul   ebp,DWORD PTR [ebp+0x7c9119f],0x70
  41403e:	in     eax,0x3e
  414040:	jp     0x414045
  414042:	mov    bh,0xdc
  414044:	inc    eax
  414045:	push   esi
  414046:	lds    edi,FWORD PTR [ebp+ecx*1-0xa]
  41404a:	and    DWORD PTR [esi-0x78],ecx
  41404d:	mov    bl,0xf7
  41404f:	(bad)  
  414050:	pushf  
  414051:	jl     0x4140c1
  414053:	xchg   edx,eax
  414054:	mov    ah,0x8
  414056:	xor    esp,edi
  414058:	sahf   
  414059:	add    ah,ah
  41405b:	sub    edx,ecx
  41405d:	cdq    
  41405e:	cmp    bl,BYTE PTR [esi-0x18]
  414061:	push   esi
  414062:	aam    0xe3
  414064:	icebp  
  414065:	jmp    0x626c7421
  41406a:	xchg   esi,eax
  41406b:	xchg   ecx,eax
  41406c:	xchg   esp,eax
  41406d:	mov    ch,0x91
  41406f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414070:	mov    eax,ds:0x36cf6e81
  414075:	xchg   edx,eax
  414076:	test   BYTE PTR [esi],dl
  414078:	sbb    edx,eax
  41407a:	(bad)  
  41407b:	push   edi
  41407c:	xor    BYTE PTR [ebx-0x7d],dl
  41407f:	push   esp
  414080:	jae    0x414050
  414082:	(bad)  
  414083:	sahf   
  414084:	add    ch,BYTE PTR [edx+0x35]
  414087:	and    dl,ah
  414089:	dec    eax
  41408a:	xor    DWORD PTR [ebx+0x39],ecx
  41408d:	or     eax,0x5dbc86e3
  414092:	sbb    eax,0xba5bc9d
  414097:	pop    ebp
  414098:	test   BYTE PTR [ebx],bh
  41409a:	int    0x25
  41409c:	rcl    DWORD PTR [edx-0x31d05750],1
  4140a2:	xchg   esi,eax
  4140a3:	jmp    0xbc7f:0x669f8de
  4140aa:	mov    edx,DWORD PTR [edi]
  4140ac:	jnp    0x41405d
  4140ae:	add    al,0xe4
  4140b0:	mov    ebx,gs
  4140b2:	sbb    dh,BYTE PTR [ebx+0x42]
  4140b5:	loopne 0x414059
  4140b7:	lahf   
  4140b8:	jg     0x41408c
  4140ba:	pusha  
  4140bb:	shl    BYTE PTR [esi-0x2c],1
  4140be:	mov    WORD PTR [esi-0x6493dc3b],cs
  4140c4:	frstor [ebx-0x121fd881]
  4140ca:	mov    WORD PTR [ebx+0x76],fs
  4140cd:	adc    DWORD PTR [ecx],edi
  4140cf:	pop    ds
  4140d0:	fwait
  4140d1:	(bad)  
  4140d2:	out    0x8d,eax
  4140d4:	sub    BYTE PTR [eax],dh
  4140d6:	(bad)  
  4140d7:	mov    cl,0x4a
  4140d9:	stos   BYTE PTR es:[edi],al
  4140da:	stos   BYTE PTR es:[edi],al
  4140db:	sub    esp,esp
  4140dd:	xor    al,0xb9
  4140df:	into   
  4140e0:	mov    ds:0xfb6eeca1,al
  4140e5:	aad    0x17
  4140e7:	adc    eax,0x11fc6675
  4140ec:	push   ds
  4140ed:	cmp    BYTE PTR [eax-0x47cd9af9],al
  4140f3:	ds jmp 0xe1818f51
  4140f9:	adc    DWORD PTR [ebx+0x6c6f8f8c],edi
  4140ff:	mov    cl,0xd7
  414101:	pop    eax
  414102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414103:	mov    edi,0x22e1d65a
  414108:	test   DWORD PTR [edx-0x51c451bc],eax
  41410e:	loope  0x414162
  414110:	nop
  414111:	aaa    
  414112:	(bad)  
  414113:	dec    ebx
  414114:	cmp    bh,bh
  414116:	mov    al,0xdc
  414118:	sub    cl,BYTE PTR [ebx+ebx*8]
  41411b:	xchg   esp,eax
  41411c:	cmp    ah,0xf3
  41411f:	cs and eax,0x9368299c
  414125:	pop    edi
  414126:	adc    eax,0xe346a78
  41412b:	cmp    BYTE PTR [esi],0x61
  41412e:	pop    ebx
  41412f:	inc    ebp
  414130:	pop    ecx
  414131:	aaa    
  414132:	fild   DWORD PTR [edx+0x75]
  414135:	push   ds
  414136:	scas   al,BYTE PTR es:[edi]
  414137:	fisub  WORD PTR [ebp-0x44]
  41413a:	xor    BYTE PTR [eax-0x13],ch
  41413d:	adc    al,0x4f
  41413f:	fld    TBYTE PTR [ecx-0x6a534739]
  414145:	push   ecx
  414146:	dec    ecx
  414147:	retf   0x673c
  41414a:	jne    0x4140fc
  41414c:	xchg   esi,eax
  41414d:	imul   esi,ebx,0x25
  414150:	add    edx,0x547b7866
  414156:	inc    ecx
  414157:	(bad)  
  414158:	push   ds
  414159:	js     0x4140ee
  41415b:	push   eax
  41415c:	xchg   edx,eax
  41415d:	push   0x7f6ddcc8
  414162:	ss jno 0x41419c
  414165:	sbb    esi,DWORD PTR [ebx-0x433661c1]
  41416b:	jp     0x414118
  41416d:	icebp  
  41416e:	sti    
  41416f:	outs   dx,DWORD PTR ds:[esi]
  414170:	(bad)  
  414171:	fwait
  414172:	mov    ch,0xea
  414174:	int    0x97
  414176:	shr    dh,cl
  414178:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414179:	rcl    BYTE PTR [edx-0x3edd495a],0x2c
  414180:	cli    
  414181:	and    dl,BYTE PTR [edx-0x2d]
  414184:	inc    esi
  414185:	adc    bh,BYTE PTR fs:[edx+0x36]
  414189:	pop    ebx
  41418a:	inc    edx
  41418b:	sub    bh,0xc2
  41418e:	call   0xdae:0x1743b115
  414195:	push   0xa6d8b30e
  41419a:	dec    ebp
  41419b:	shl    ch,0xe9
  41419e:	lds    esp,FWORD PTR [esi]
  4141a0:	push   ss
  4141a1:	(bad)  
  4141a2:	mov    ebx,0xc05ee4e8
  4141a7:	push   ebp
  4141a8:	or     bh,al
  4141aa:	xor    ebx,DWORD PTR [ecx+0x3b]
  4141ad:	xchg   ecx,eax
  4141ae:	pop    eax
  4141af:	pushf  
  4141b0:	jb     0x41420d
  4141b2:	mov    al,0xd9
  4141b4:	mov    ch,0x9b
  4141b6:	xlat   BYTE PTR ds:[ebx]
  4141b7:	jge    0x414199
  4141b9:	in     eax,dx
  4141ba:	js     0x4141db
  4141bc:	mov    bl,0x6a
  4141be:	dec    ecx
  4141bf:	pop    DWORD PTR [edi+eax*8+0x274208b5]
  4141c6:	sub    al,0xb0
  4141c8:	jae    0x414207
  4141ca:	mov    edx,0xb9c80551
  4141cf:	xchg   ebx,eax
  4141d0:	jnp    0x4141e3
  4141d2:	jns    0x414193
  4141d4:	mov    eax,0x7093b41c
  4141d9:	imul   esi,esi,0x6
  4141dc:	mov    ch,bh
  4141de:	mov    WORD PTR [eax+0x13],gs
  4141e1:	jo     0x4141a5
  4141e3:	push   ebx
  4141e4:	pop    eax
  4141e5:	add    al,0x52
  4141e7:	test   al,0x5b
  4141e9:	mov    DWORD PTR [edx-0x6dfb31d6],ecx
  4141ef:	fidiv  DWORD PTR [ebx]
  4141f1:	in     eax,0x42
  4141f3:	idiv   DWORD PTR [edx+0x29]
  4141f6:	in     eax,0xc4
  4141f8:	push   esi
  4141f9:	sub    ebp,esi
  4141fb:	mov    bl,BYTE PTR [edx-0x806afc8]
  414201:	lods   al,BYTE PTR ds:[esi]
  414202:	mov    edi,0x7203fa4f
  414207:	aad    0x19
  414209:	xor    BYTE PTR [esi+0x65],0x40
  41420d:	fxtract 
  41420f:	inc    ebp
  414210:	arpl   dx,sp
  414212:	mov    dl,0x94
  414214:	pop    ebx
  414215:	mov    edx,0x3124da0b
  41421a:	pop    ds
  41421b:	mov    ebx,0xe3fe8ab4
  414220:	fiadd  DWORD PTR [edi]
  414222:	jno    0x414201
  414224:	adc    ah,BYTE PTR [ebp+0x5f]
  414227:	das    
  414228:	test   BYTE PTR [edx],dl
  41422a:	rcr    DWORD PTR [edi],0xb6
  41422d:	inc    esp
  41422e:	adc    bh,0x92
  414231:	xor    edi,esp
  414233:	and    eax,0xdca55a84
  414238:	pusha  
  414239:	cmp    DWORD PTR [eax],ebx
  41423b:	push   0x9a99ccc5
  414240:	les    esp,FWORD PTR [edx]
  414242:	mov    eax,ds:0x1507e90
  414247:	inc    eax
  414248:	jg     0x414219
  41424a:	je     0x414214
  41424c:	jp     0x4142c4
  41424e:	pop    ss
  41424f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414250:	loopne 0x4142b7
  414252:	loopne 0x4141e7
  414254:	xor    al,0xaf
  414256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414257:	scas   eax,DWORD PTR es:[edi]
  414258:	lods   eax,DWORD PTR ds:[esi]
  414259:	xor    ch,BYTE PTR [esi]
  41425b:	ja     0x414223
  41425d:	push   es
  41425e:	(bad)  
  41425f:	dec    eax
  414260:	out    dx,eax
  414261:	ror    BYTE PTR [ecx-0x18],0x1e
  414265:	pop    ebx
  414266:	call   0x7cd8c2b6
  41426b:	cmc    
  41426c:	rol    BYTE PTR [ebp-0x7dbcee4e],1
  414272:	or     eax,esi
  414274:	ror    BYTE PTR [edx+edx*4-0x4a],cl
  414278:	mov    ebp,0x214beb3a
  41427d:	sbb    esi,DWORD PTR [ecx+edx*8-0x24]
  414281:	ficom  WORD PTR [edx-0x60]
  414284:	or     edi,0xffffffec
  414287:	xchg   di,ax
  414289:	dec    DWORD PTR [edi+eax*4-0x76]
  41428d:	std    
  41428e:	dec    ecx
  41428f:	scas   al,BYTE PTR es:[edi]
  414290:	jae    0x414265
  414292:	ja     0x41427f
  414294:	stos   BYTE PTR es:[edi],al
  414295:	shr    DWORD PTR [ecx-0x9],1
  414298:	cmp    cl,BYTE PTR [esi]
  41429a:	imul   esp,DWORD PTR [ecx],0x7858a27b
  4142a0:	test   BYTE PTR [esi-0x3b],0xc4
  4142a4:	adc    al,0x17
  4142a7:	mov    ds:0x574c0300,eax
  4142ac:	inc    ecx
  4142ad:	dec    ecx
  4142ae:	pop    edi
  4142af:	arpl   WORD PTR ds:0x5ad85421,dx
  4142b5:	scas   al,BYTE PTR es:[edi]
  4142b6:	scas   al,BYTE PTR es:[edi]
  4142b7:	call   0x8a41:0x27da89b6
  4142be:	fadd   QWORD PTR [edi-0x6035488]
  4142c4:	mov    al,0x42
  4142c6:	sbb    al,dh
  4142c8:	ds inc ebx
  4142ca:	sti    
  4142cb:	jnp    0x41425b
  4142cd:	xor    ecx,DWORD PTR [si+0x6c80]
  4142d2:	popa   
  4142d3:	sbb    BYTE PTR ds:0xd38ab6e0,bh
  4142d9:	and    eax,0xbe630e74
  4142de:	xchg   esp,eax
  4142df:	mov    ebp,gs
  4142e1:	int3   
  4142e2:	adc    al,0xf9
  4142e4:	inc    eax
  4142e5:	sti    
  4142e6:	out    0x9a,al
  4142e8:	test   al,0x51
  4142ea:	mov    cl,0x8c
  4142ec:	pop    ecx
  4142ed:	mov    ds:0x3c5dd571,eax
  4142f2:	jp     0x4142a4
  4142f4:	cwde   
  4142f5:	arpl   WORD PTR [edx],bx
  4142f7:	push   ecx
  4142f8:	test   al,0x68
  4142fa:	mov    ebp,0x43fa36e5
  4142ff:	dec    ecx
  414300:	out    dx,eax
  414301:	cmc    
  414302:	imul   esi,edx,0xffffff93
  414305:	cld    
  414306:	jl     0x414302
  414308:	inc    eax
  414309:	push   edx
  41430a:	mov    ebp,0x7d5e2f7b
  41430f:	push   eax
  414310:	icebp  
  414311:	push   eax
  414312:	imul   ecx,esp,0xffffffa3
  414315:	shl    bl,1
  414317:	lea    edx,[ecx-0x7979b914]
  41431d:	xor    ebx,DWORD PTR [esp+ebp*1]
  414320:	inc    eax
  414321:	inc    DWORD PTR [edi-0x25]
  414324:	mov    edi,0x2abe9982
  414329:	icebp  
  41432a:	aam    0xf3
  41432c:	sub    bl,bh
  41432e:	inc    edi
  41432f:	and    DWORD PTR es:[edi+0x14815c42],eax
  414336:	jle    0x414345
  414338:	out    dx,al
  414339:	jno    0x414363
  41433b:	xor    eax,DWORD PTR [esp+eiz*2]
  41433e:	pop    ds
  41433f:	neg    bh
  414341:	call   0x6961:0xf15cbd62
  414348:	dec    ebp
  414349:	and    eax,0x14104e06
  41434e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41434f:	jle    0x414360
  414351:	or     al,0xda
  414353:	push   es
  414354:	ror    BYTE PTR [ebx],cl
  414356:	xor    BYTE PTR [ebx],ah
  414358:	mov    ecx,0x36701495
  41435d:	mov    ds:0x52a03adf,eax
  414362:	inc    edi
  414363:	or     al,0xae
  414365:	sti    
  414366:	dec    esi
  414367:	aam    0xd9
  414369:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41436a:	loope  0x4143b8
  41436c:	push   ebp
  41436d:	and    bh,0xb6
  414370:	imul   eax,DWORD PTR [ecx+0x25a4988b],0xef4e89fa
  41437a:	shl    BYTE PTR [edi],cl
  41437c:	loopne 0x414377
  41437e:	lahf   
  41437f:	xchg   ebx,eax
  414380:	jp     0x414347
  414382:	pop    ebp
  414383:	jecxz  0x4143da
  414385:	sub    BYTE PTR [edi+ecx*8+0x11],dl
  414389:	loop   0x414371
  41438b:	xor    eax,0xabb1677e
  414390:	sub    bh,dh
  414392:	mov    es,WORD PTR [eax+0x7f]
  414395:	push   0xfffffff5
  414397:	push   ds
  414398:	jecxz  0x4143dd
  41439a:	sub    bl,bh
  41439c:	pop    ebp
  41439d:	inc    esi
  41439e:	imul   esi,DWORD PTR [eax],0xffffffbf
  4143a1:	gs (bad) 
  4143a4:	xor    DWORD PTR [edx-0x744b586c],ebx
  4143aa:	enter  0x9e87,0xbc
  4143ae:	jmp    0xb8c9a662
  4143b3:	jno    0x414360
  4143b5:	mov    dh,0xb2
  4143b7:	jns    0x41433e
  4143b9:	fldcw  WORD PTR [ecx-0x5352f038]
  4143bf:	pop    ds
  4143c0:	sbb    ah,BYTE PTR [edx]
  4143c2:	shl    BYTE PTR [ebx-0x17],0xa9
  4143c6:	cmp    al,0x30
  4143c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143c9:	mov    ebp,0xb4e2ff4c
  4143ce:	dec    esp
  4143cf:	or     dh,BYTE PTR [ebx]
  4143d1:	xlat   BYTE PTR ds:[ebx]
  4143d2:	jno    0x41440c
  4143d4:	xchg   BYTE PTR [ebx+0x727b482a],bh
  4143da:	(bad)  
  4143db:	mov    ah,0xa7
  4143dd:	xchg   ebx,eax
  4143de:	loope  0x414369
  4143e0:	fistp  QWORD PTR [esi+0x25]
  4143e3:	sub    cl,BYTE PTR [ecx-0x22]
  4143e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143e7:	jbe    0x414388
  4143e9:	repnz mov esi,0xcc762412
  4143ef:	dec    esp
  4143f0:	push   ecx
  4143f1:	imul   ebp
  4143f3:	std    
  4143f4:	fist   WORD PTR [edi]
  4143f6:	stos   BYTE PTR es:[edi],al
  4143f7:	dec    esp
  4143f8:	mov    ebp,0xce1a2e13
  4143fd:	cdq    
  4143fe:	and    eax,0x9cb4d248
  414403:	add    BYTE PTR [ecx+ecx*1+0x3f],bh
  414407:	pop    DWORD PTR [esp+eiz*2+0x377d536]
  41440e:	xor    BYTE PTR [esi+eax*2-0x434c1cde],cl
  414415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414416:	pusha  
  414417:	test   esi,esi
  414419:	add    BYTE PTR [edx+0x17c7af07],ch
  41441f:	sub    DWORD PTR [edx+0x9306a53],edx
  414425:	es or  al,0x9e
  414428:	aam    0xcb
  41442a:	fld    st(4)
  41442c:	shr    BYTE PTR [ecx+0x5b0d4c23],0x9d
  414433:	xor    al,0x7c
  414435:	pop    es
  414436:	fs and bl,ch
  414439:	out    0xf9,al
  41443b:	es shl ecx,1
  41443e:	clc    
  41443f:	mov    dl,0xed
  414441:	je     0x41444b
  414443:	aam    0x4c
  414445:	dec    ebx
  414446:	jb     0x414483
  414448:	jmp    0x41440e
  41444a:	sbb    al,0x8c
  41444c:	jns    0x4144ac
  41444e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41444f:	xor    eax,DWORD PTR [ecx+0x5258ce86]
  414455:	jno    0x41446d
  414457:	jge    0x4144b2
  414459:	mov    edi,0x47d21f1a
  41445e:	lock rol BYTE PTR [edi+0x510f5dda],1
  414465:	cli    
  414466:	jle    0x414409
  414468:	retf   
  414469:	lea    ecx,[ebx+ebp*1]
  41446c:	test   al,0x82
  41446e:	sar    BYTE PTR [esi-0x771fcd6],1
  414474:	add    eax,0x312092a5
  414479:	lock cmp edx,ecx
  41447c:	sbb    al,0xf7
  41447e:	dec    esi
  41447f:	sub    DWORD PTR [edi+0xfba0211],edi
  414485:	push   edx
  414486:	aam    0x84
  414488:	jge    0x414507
  41448a:	inc    ebx
  41448b:	shr    DWORD PTR [ebx-0x60],cl
  41448e:	loop   0x41448d
  414490:	and    ecx,ecx
  414492:	fwait
  414493:	adc    ebp,eax
  414495:	sbb    eax,DWORD PTR [ebx+ecx*4]
  414498:	shl    DWORD PTR [edx+0x6dcee3b3],1
  41449e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41449f:	scas   eax,DWORD PTR es:[edi]
  4144a0:	popa   
  4144a1:	dec    edx
  4144a2:	(bad)  
  4144a4:	jecxz  0x414476
  4144a6:	mov    ch,0x4b
  4144a8:	mov    DWORD PTR [ebp-0x448dd7f2],ecx
  4144ae:	adc    eax,0xc433181a
  4144b3:	dec    dx
  4144b5:	int3   
  4144b6:	or     esi,DWORD PTR [ebp+0x7c651a10]
  4144bc:	fistp  DWORD PTR [ebx]
  4144be:	or     eax,0x2e9dcab4
  4144c3:	loop   0x414488
  4144c5:	imul   esi
  4144c7:	fimul  DWORD PTR [esi]
  4144c9:	bound  ebp,QWORD PTR [edi+0x30ff1c84]
  4144cf:	jl     0x4144fe
  4144d1:	jns    0x414527
  4144d3:	retf   0x9a49
  4144d6:	in     al,0x9e
  4144d8:	mov    ?,WORD PTR [eax]
  4144da:	sahf   
  4144db:	or     al,0x4c
  4144de:	sbb    al,0x38
  4144e0:	das    
  4144e1:	xchg   esi,eax
  4144e2:	iret   
  4144e3:	add    ch,BYTE PTR [edx]
  4144e5:	dec    edi
  4144e6:	ret    
  4144e7:	mov    dh,0x6c
  4144e9:	frndint 
  4144eb:	mov    esp,0xc42704c1
  4144f0:	daa    
  4144f1:	pusha  
  4144f2:	inc    edx
  4144f3:	out    dx,eax
  4144f4:	and    eax,0xd1b53d36
  4144f9:	cli    
  4144fa:	iret   
  4144fb:	sbb    dl,BYTE PTR [edx-0x3109c091]
  414501:	inc    esp
  414502:	stos   BYTE PTR es:[edi],al
  414503:	xchg   DWORD PTR ds:0xa457b1b8,ebx
  414509:	xor    edi,DWORD PTR [edx]
  41450b:	aas    
  41450c:	mov    edi,0x95a69003
  414511:	jb     0x414520
  414513:	xchg   BYTE PTR [edx-0x6b866f1a],dh
  414519:	cmp    BYTE PTR [ebx-0x39a009dc],bl
  41451f:	mov    ah,0x28
  414521:	call   0x41c29ab2
  414526:	sub    DWORD PTR [esi+edx*4],esi
  414529:	pop    ss
  41452a:	fs iret 
  41452c:	idiv   ah
  41452e:	xchg   edi,eax
  41452f:	pop    ebp
  414530:	add    DWORD PTR [esi+ecx*2+0x2fc8ca6c],esi
  414537:	add    DWORD PTR [ebx],ebx
  414539:	(bad)
  41453c:	jg     0x414580
  41453e:	dec    edi
  41453f:	out    dx,eax
  414540:	pop    ds
  414541:	push   es
  414542:	ds std 
  414544:	in     eax,0x63
  414546:	pop    esi
  414547:	xchg   ecx,eax
  414548:	imul   edx,ebp,0x5e
  41454b:	adc    eax,esp
  41454d:	push   esi
  41454e:	jnp    0x414599
  414550:	(bad)  
  414551:	jns    0x4144e4
  414553:	sti    
  414554:	jmp    0x4144d8
  414556:	fmul   st(0),st
  414558:	call   0x3440:0xfbf2b01d
  41455f:	inc    esp
  414560:	adc    dl,dh
  414562:	repz fsub QWORD PTR [edx+0x2083aca1]
  414569:	or     BYTE PTR cs:[esi+0x6d8a9b4],bh
  414570:	jno    0x4145a4
  414572:	cmp    BYTE PTR [ecx+eax*8-0x59bacf26],bl
  414579:	mov    BYTE PTR [ebp+0x60a6251e],dh
  41457f:	daa    
  414580:	mov    bl,0xb6
  414582:	(bad)  
  414583:	mov    edx,0x6cc92577
  414588:	dec    ebx
  414589:	shr    BYTE PTR [eax-0x296d38bf],cl
  41458f:	fild   QWORD PTR [ebx+0x7d]
  414592:	repnz xchg edx,eax
  414594:	lahf   
  414595:	or     DWORD PTR [edx-0x14af382e],esp
  41459b:	inc    eax
  41459c:	mov    eax,DWORD PTR [ecx+0x75]
  41459f:	lods   eax,DWORD PTR ds:[esi]
  4145a0:	nop
  4145a1:	add    ebp,DWORD PTR [edx+edx*1]
  4145a4:	jmp    0xbdaa290e
  4145a9:	push   ds
  4145aa:	mov    ecx,0x22a83955
  4145af:	mov    ecx,0xc7db3013
  4145b4:	fs loope 0x414544
  4145b7:	dec    ecx
  4145b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145b9:	mov    esi,0x63a1ba00
  4145be:	pop    ebx
  4145bf:	pop    ss
  4145c0:	or     BYTE PTR [ebp-0x5adf9639],bl
  4145c6:	ins    BYTE PTR es:[edi],dx
  4145c7:	sbb    BYTE PTR [esi-0x6850f7ed],0x50
  4145ce:	dec    ebx
  4145cf:	mov    esp,0xc613645d
  4145d4:	xchg   esi,eax
  4145d5:	popa   
  4145d6:	xor    eax,0x52ff211b
  4145db:	sar    bl,0xcd
  4145de:	mov    al,ds:0xc70c3565
  4145e3:	dec    esp
  4145e5:	mov    ds,WORD PTR [edx-0x337ef836]
  4145eb:	add    esp,DWORD PTR [ecx+0x58f6bc39]
  4145f1:	inc    ecx
  4145f2:	mov    cl,0xc2
  4145f4:	(bad)  [ecx+0x2f197ab8]
  4145fa:	inc    ecx
  4145fb:	jecxz  0x4145db
  4145fd:	sub    al,0xec
  4145ff:	ds dec ebp
  414601:	ret    
  414602:	jns    0x4145e6
  414604:	jo     0x4145fa
  414606:	pop    ebx
  414607:	(bad)  
  414608:	in     eax,dx
  414609:	dec    ecx
  41460a:	(bad)  
  41460c:	sbb    DWORD PTR [ecx-0x673a6b5f],eax
  414612:	ds enter 0xdcc6,0x10
  414617:	mov    cl,0x6c
  414619:	mov    eax,0x94cb529a
  41461e:	xchg   ebx,eax
  41461f:	push   0x55
  414621:	mov    BYTE PTR [esi-0x6adbd756],ch
  414627:	sub    eax,0xffffffdf
  41462a:	sub    al,0x3e
  41462c:	es or  dh,dh
  41462f:	jmp    0x414633
  414631:	push   edi
  414632:	scas   al,BYTE PTR es:[edi]
  414633:	dec    ebp
  414634:	push   ss
  414635:	retf   
  414636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414637:	mov    esp,0xf85a786e
  41463c:	inc    eax
  41463d:	ds stos BYTE PTR es:[edi],al
  41463f:	repz add edx,DWORD PTR [eax-0x1707c7d]
  414646:	fwait
  414647:	sahf   
  414648:	adc    ebx,DWORD PTR [esi]
  41464a:	int    0x7b
  41464c:	mov    edx,0xd6490094
  414651:	fild   DWORD PTR [esi]
  414653:	add    eax,0x4c5f5e70
  414658:	ficom  DWORD PTR [edi]
  41465a:	aaa    
  41465b:	mov    dl,0x34
  41465d:	sahf   
  41465e:	bound  ebx,QWORD PTR [edx+eiz*8]
  414661:	xchg   esi,eax
  414662:	mov    ch,0x1c
  414664:	pop    edx
  414665:	mov    al,ds:0xa885a0e6
  41466a:	dec    edi
  41466b:	xor    DWORD PTR [eax],ebx
  41466d:	(bad)  
  41466f:	dec    esi
  414670:	bound  eax,QWORD PTR [edi-0x74e85d55]
  414676:	mov    bh,0x87
  414678:	xor    DWORD PTR [ecx+0x3cd301bf],0x50637206
  414682:	loope  0x4146d7
  414684:	pop    ebx
  414685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414686:	mov    ds:0xf623a070,al
  41468b:	sub    eax,0x7bd865a3
  414690:	enter  0x43a5,0x78
  414694:	xchg   esp,eax
  414695:	jge    0x4146bc
  414697:	sub    edx,DWORD PTR [eax+0x6d55ca1c]
  41469d:	jle    0x4146a3
  41469f:	ror    BYTE PTR [edx-0x73],0x4
  4146a3:	push   ss
  4146a4:	push   0xffffff8d
  4146a6:	std    
  4146a7:	in     eax,dx
  4146a8:	mov    bh,0x7e
  4146aa:	les    eax,FWORD PTR [ebx+0x68]
  4146ad:	in     al,0xc3
  4146af:	out    0xd3,eax
  4146b1:	mov    edi,es
  4146b3:	lahf   
  4146b4:	xor    al,0x67
  4146b6:	test   BYTE PTR [edi-0x6a06f098],ah
  4146bc:	icebp  
  4146bd:	fsubr  DWORD PTR [edx+0x46]
  4146c0:	jmp    0x7809f7a0
  4146c5:	sbb    DWORD PTR [edi-0x7f],ebx
  4146c8:	aaa    
  4146c9:	jb     0x4146cd
  4146cb:	xor    ah,dh
  4146cd:	sub    dh,BYTE PTR [ecx]
  4146cf:	das    
  4146d0:	pop    es
  4146d1:	and    al,BYTE PTR [edi-0x5167c08e]
  4146d7:	pop    ds
  4146d8:	rol    bh,cl
  4146da:	call   0x8a75075c
  4146df:	or     eax,0xbb082407
  4146e4:	ret    0x2b2
  4146e7:	adc    eax,0xe5425b3
  4146ec:	jae    0x4146b2
  4146ee:	push   esi
  4146ef:	pcmpeqd mm7,QWORD PTR ds:0x9f085faa
  4146f6:	sbb    DWORD PTR [ecx-0x4c],ebx
  4146f9:	mov    ebx,0x1ccae389
  4146fe:	icebp  
  4146ff:	shl    BYTE PTR [edi],cl
  414701:	(bad)  
  414702:	in     al,dx
  414703:	add    DWORD PTR [ebx+0x556cc3],ebx
  414709:	fwait
  41470a:	shl    BYTE PTR [edx-0x48aaaa05],1
  414710:	or     esp,DWORD PTR ds:0xbb70c968
  414716:	adc    bh,BYTE PTR [ebx]
  414718:	mov    edi,DWORD PTR [edx+0x2176110d]
  41471e:	adc    DWORD PTR [ecx],ebp
  414720:	fisttp DWORD PTR [edx]
  414722:	ins    DWORD PTR es:[edi],dx
  414723:	pop    ebp
  414724:	(bad)  
  414725:	frstor [eax]
  414727:	xchg   BYTE PTR [edx],dl
  414729:	jmp    0x41475d
  41472b:	push   edx
  41472c:	sub    BYTE PTR [eax],ch
  41472e:	hlt    
  41472f:	out    0x7,eax
  414731:	packssdw mm7,QWORD PTR [esi]
  414734:	test   al,0xb
  414736:	test   al,0x83
  414738:	adc    BYTE PTR [eax-0xf27200b],dh
  41473e:	and    eax,0x51119dc0
  414743:	int    0xc0
  414745:	(bad)  [ecx]
  414747:	imul   ebx,DWORD PTR [eax+esi*1+0x216ac3cb],0x8a6fec42
  414752:	outs   dx,BYTE PTR ds:[esi]
  414753:	mov    al,ds:0x3805fc70
  414758:	xchg   esi,eax
  414759:	in     eax,0x3e
  41475b:	mov    eax,ds:0x8fd1a56d
  414760:	mov    ebx,0xa182874c
  414765:	mov    DWORD PTR [ebx+0x4f],ebp
  414768:	sbb    cl,0x26
  41476b:	inc    ch
  41476d:	inc    esi
  41476e:	push   ss
  41476f:	inc    edx
  414770:	mov    bh,0x91
  414772:	test   al,0xe3
  414774:	sbb    esp,DWORD PTR [esi]
  414776:	stos   DWORD PTR es:[edi],eax
  414777:	adc    eax,0x25935c3
  41477c:	or     eax,0xb969cfd7
  414781:	je     0x41474b
  414783:	dec    ebp
  414784:	adc    ah,ch
  414786:	mov    al,0x72
  414788:	ror    DWORD PTR [esi],0x98
  41478b:	ret    0x3bce
  41478e:	xchg   edx,eax
  41478f:	rcr    BYTE PTR [ecx+ebx*1-0xa],0x95
  414794:	scas   eax,DWORD PTR es:[edi]
  414795:	pushf  
  414796:	leave  
  414797:	retf   
  414798:	addr16 retf 
  41479a:	xor    eax,DWORD PTR [edi+ecx*1+0x11]
  41479e:	dec    ebx
  41479f:	inc    edi
  4147a0:	jnp    0x414814
  4147a2:	into   
  4147a3:	mov    WORD PTR [ecx-0x20],ss
  4147a6:	mov    ds:0xb881cb69,eax
  4147ab:	ins    DWORD PTR es:[edi],dx
  4147ac:	clc    
  4147ad:	sbb    BYTE PTR [edx-0x5f],0x3f
  4147b1:	imul   edx,DWORD PTR [ecx-0x525fd764],0xfffffff8
  4147b8:	sub    ch,cl
  4147ba:	clc    
  4147bb:	mov    bl,0x47
  4147bd:	stc    
  4147be:	je     0x41477c
  4147c0:	or     eax,0xf186757e
  4147c5:	or     BYTE PTR [esi],dh
  4147c7:	adc    dl,cl
  4147c9:	sbb    bl,BYTE PTR [ecx]
  4147cb:	outs   dx,BYTE PTR ds:[esi]
  4147cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147cd:	xchg   ecx,eax
  4147ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147cf:	neg    BYTE PTR [ebp+0x6894cbc2]
  4147d5:	mov    ch,0xdd
  4147d7:	(bad)  
  4147d8:	aas    
  4147d9:	mov    DWORD PTR [ebx+0x9],ebp
  4147dc:	mov    BYTE PTR ds:0x3fcd78eb,dh
  4147e3:	push   0xd0ed6e9c
  4147e8:	lea    edi,[ebx]
  4147ea:	ror    BYTE PTR cs:[esi-0x9],1
  4147ee:	jmp    0x4c8:0x920f5b90
  4147f5:	sub    dl,cl
  4147f7:	and    eax,0xb8a8bdc5
  4147fc:	stos   BYTE PTR es:[edi],al
  4147fd:	xchg   edi,eax
  4147fe:	stos   BYTE PTR es:[edi],al
  4147ff:	jno    0x4147fc
  414801:	imul   esp,DWORD PTR [eax-0x40],0xc10cc241
  414808:	sub    al,0x36
  41480a:	mov    eax,ds:0x39fc00a8
  41480f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414810:	adc    dl,ch
  414812:	dec    eax
  414813:	(bad)  
  414814:	mov    eax,0xabee63ce
  414819:	lods   al,BYTE PTR ds:[esi]
  41481a:	xchg   ecx,eax
  41481b:	push   ds
  41481c:	jbe    0x414853
  41481e:	rcr    BYTE PTR [esi-0x4089e680],0xe
  414825:	lods   eax,DWORD PTR ds:[esi]
  414826:	dec    ebx
  414827:	ds icebp 
  414829:	out    dx,al
  41482a:	inc    edx
  41482b:	inc    edx
  41482c:	test   eax,0x6f3a3440
  414831:	lahf   
  414832:	dec    edi
  414833:	xchg   edx,eax
  414834:	sbb    bl,BYTE PTR [esi-0x6a]
  414837:	ins    DWORD PTR es:[edi],dx
  414838:	and    DWORD PTR [ebx-0x59],edi
  41483b:	sub    DWORD PTR [eax+0x244735f6],esi
  414841:	sti    
  414842:	xchg   dx,ax
  414844:	nop
  414845:	test   dl,dl
  414847:	fs dec edx
  414849:	jg     0x414891
  41484b:	xor    esi,eax
  41484d:	mov    ecx,fs
  41484f:	cvtdq2ps xmm6,XMMWORD PTR [edx+0x1c]
  414853:	push   0xa2eabb50
  414858:	repz and bh,0x89
  41485c:	sbb    DWORD PTR [eax+0x5e5a351e],edx
  414862:	and    bh,dh
  414864:	inc    ecx
  414865:	in     eax,0xc7
  414867:	dec    esi
  414868:	xchg   ebp,eax
  414869:	ins    BYTE PTR es:[edi],dx
  41486a:	test   eax,0x79370557
  41486f:	sti    
  414870:	dec    edx
  414871:	sbb    cl,BYTE PTR [ebx-0x25819806]
  414877:	pop    ebx
  414878:	adc    esi,esi
  41487a:	sub    BYTE PTR [ebx-0x69b3e831],dh
  414880:	cmp    al,ah
  414882:	xchg   esi,eax
  414883:	and    eax,0xebd5206b
  414888:	fwait
  414889:	sbb    al,BYTE PTR [edi]
  41488b:	add    edi,esi
  41488d:	dec    ebx
  41488e:	ret    0xde32
  414891:	leave  
  414892:	lock ret 0x9445
  414896:	mov    esp,0xa3f63ef1
  41489b:	and    eax,0x2ad9e72b
  4148a0:	xor    edi,DWORD PTR [ebx]
  4148a2:	ficomp DWORD PTR [edx+0x48355780]
  4148a8:	test   BYTE PTR [edx-0x1f75188e],bl
  4148ae:	and    eax,0xca4e1b33
  4148b3:	pushf  
  4148b4:	addr16 mov dh,0xef
  4148b7:	(bad)  
  4148b8:	or     al,0x3c
  4148ba:	mov    esp,0xab3ca006
  4148bf:	adc    DWORD PTR [edx],esi
  4148c1:	adc    eax,0xa6b12e7b
  4148c6:	sub    eax,0xd83822aa
  4148cb:	cdq    
  4148cc:	pop    ds
  4148cd:	aam    0x9a
  4148cf:	addr16 repz pop es
  4148d2:	clc    
  4148d3:	ins    BYTE PTR es:[edi],dx
  4148d4:	sbb    ah,BYTE PTR [esi+0x325aee08]
  4148da:	pop    edx
  4148db:	and    DWORD PTR [edx],edx
  4148dd:	dec    eax
  4148de:	pop    ecx
  4148df:	cwde   
  4148e0:	outs   dx,DWORD PTR ds:[esi]
  4148e1:	xor    cl,BYTE PTR [esi-0x7b31c8f4]
  4148e7:	call   0x7e7b:0x914c1398
  4148ee:	fadd   DWORD PTR [edi]
  4148f0:	and    eax,0x6e1d31d
  4148f5:	jb     0x414970
  4148f7:	outs   dx,BYTE PTR ds:[esi]
  4148f8:	xchg   esi,eax
  4148f9:	mov    ds:0x4f79306b,al
  4148fe:	enter  0xa86d,0x32
  414902:	shr    ah,cl
  414904:	xchg   ebp,eax
  414905:	fwait
  414906:	mov    ds:0xe136ef59,al
  41490b:	(bad)  
  41490e:	icebp  
  41490f:	xchg   BYTE PTR [ecx-0x385cebd5],cl
  414915:	xchg   ecx,eax
  414916:	pop    edx
  414917:	push   ecx
  414918:	pushf  
  414919:	int    0x1b
  41491b:	inc    ecx
  41491c:	pop    es
  41491d:	adc    eax,ecx
  41491f:	mov    ebx,0xa9718031
  414924:	xor    al,0xd7
  414926:	or     al,0xda
  414928:	stc    
  414929:	sbb    ah,BYTE PTR [edx+0x56]
  41492c:	mov    edx,0xfbee44cb
  414931:	add    al,0x98
  414933:	xor    ch,BYTE PTR [eax+0x26]
  414936:	and    ebx,DWORD PTR [eax+0x40]
  414939:	outs   dx,DWORD PTR ds:[esi]
  41493a:	sbb    DWORD PTR [esi+0xabe4c2a],edi
  414940:	nop
  414941:	add    dx,WORD PTR [edi+0x46ec7d89]
  414948:	jbe    0x4148f5
  41494a:	jmp    FWORD PTR [ecx+0x32]
  41494d:	adc    DWORD PTR [edx-0x63],edx
  414950:	ja     0x4148da
  414952:	pop    ebx
  414953:	retf   0x538c
  414956:	hlt    
  414957:	enter  0x48e6,0x5a
  41495b:	dec    ebx
  41495c:	adc    BYTE PTR [ebx],dl
  41495e:	dec    eax
  41495f:	scas   eax,DWORD PTR es:[edi]
  414960:	cmp    al,0x77
  414962:	pop    esi
  414963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414964:	push   ebx
  414965:	sbb    ecx,DWORD PTR [ebp-0x2ce15007]
  41496b:	aad    0xb1
  41496d:	scas   eax,DWORD PTR es:[edi]
  41496e:	mov    al,0xe7
  414970:	pusha  
  414971:	add    BYTE PTR [edx+0x3f972396],ch
  414977:	popa   
  414978:	loop   0x414913
  41497a:	or     ch,bl
  41497c:	stc    
  41497d:	bound  esi,QWORD PTR [edx-0x19]
  414980:	sbb    ch,dl
  414982:	mov    WORD PTR [ecx],ds
  414984:	es push ebx
  414986:	or     ch,BYTE PTR [edi+esi*8+0x5e]
  41498a:	bound  esi,QWORD PTR [eiz*2-0x5709bb52]
  414991:	push   ebp
  414992:	push   0xffffffc7
  414994:	add    cl,bl
  414996:	mov    eax,0x98f84143
  41499b:	in     eax,0xfc
  41499d:	sbb    dl,0xca
  4149a0:	imul   esi,DWORD PTR [ecx-0x20],0x3e
  4149a4:	repnz les esp,FWORD PTR [ebx+0x6b009c37]
  4149ab:	fstp   TBYTE PTR [ebx-0x77]
  4149ae:	push   ebp
  4149af:	or     cl,ch
  4149b1:	jo     0x4149b3
  4149b3:	add    BYTE PTR [eax],al
  4149b5:	mov    edx,DWORD PTR [ebp+0x8]
  4149b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4149bb:	xor    edx,eax
  4149bd:	xor    ebx,eax
  4149bf:	sub    edx,ebx
  4149c1:	sub    edx,esi
  4149c3:	xor    edx,eax
  4149c5:	mov    DWORD PTR [ebp+0x8],edx
  4149c8:	mov    edx,DWORD PTR [ebp+0x8]
  4149cb:	mov    ebx,DWORD PTR [ebp-0x58]
  4149ce:	add    edx,0x5708e2
  4149d4:	imul   edx,ebx
  4149d7:	mov    DWORD PTR [ebp-0x58],edx
  4149da:	mov    edx,DWORD PTR [ebp+0x8]
  4149dd:	mov    ebx,DWORD PTR [ebp-0x54]
  4149e0:	add    edx,0x64f89c
  4149e6:	or     edx,ebx
  4149e8:	mov    DWORD PTR [ebp-0x54],edx
  4149eb:	mov    edx,DWORD PTR [ebp+0x8]
  4149ee:	mov    ebx,DWORD PTR [ebp-0x50]
  4149f1:	add    edx,ecx
  4149f3:	xor    edx,ebx
  4149f5:	mov    DWORD PTR [ebp-0x50],edx
  4149f8:	mov    edx,DWORD PTR [ebp+0x8]
  4149fb:	mov    ebx,DWORD PTR [ebp-0x4c]
  4149fe:	add    edx,edi
  414a00:	and    edx,ebx
  414a02:	mov    DWORD PTR [ebp-0x4c],edx
  414a05:	mov    edx,DWORD PTR [ebp+0x8]
  414a08:	mov    ebx,DWORD PTR [ebp-0x48]
  414a0b:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a12:	mov    DWORD PTR [ebp-0x48],edx
  414a15:	mov    edx,DWORD PTR [ebp+0x8]
  414a18:	mov    ebx,0xfa5e1528
  414a1d:	sub    ebx,edx
  414a1f:	add    ebx,DWORD PTR [ebp-0x44]
  414a22:	mov    DWORD PTR [ebp-0x44],ebx
  414a25:	mov    edx,DWORD PTR [ebp+0x8]
  414a28:	xor    edx,eax
  414a2a:	add    edx,esi
  414a2c:	jne    0x4149b5
  414a32:	mov    edx,DWORD PTR [ebp-0x14]
  414a35:	mov    DWORD PTR [ebp+0x8],edx
  414a38:	jmp    0x414aad
  414a3d:	mov    edx,DWORD PTR [ebp+0x8]
  414a40:	mov    ebx,DWORD PTR [ebp-0x8]
  414a43:	xor    edx,eax
  414a45:	xor    ebx,eax
  414a47:	sub    edx,ebx
  414a49:	sub    edx,esi
  414a4b:	xor    edx,eax
  414a4d:	mov    DWORD PTR [ebp+0x8],edx
  414a50:	mov    edx,DWORD PTR [ebp+0x8]
  414a53:	mov    ebx,DWORD PTR [ebp-0x58]
  414a56:	add    edx,0x5708e2
  414a5c:	imul   edx,ebx
  414a5f:	mov    DWORD PTR [ebp-0x58],edx
  414a62:	mov    edx,DWORD PTR [ebp+0x8]
  414a65:	mov    ebx,DWORD PTR [ebp-0x54]
  414a68:	add    edx,0x64f89c
  414a6e:	or     edx,ebx
  414a70:	mov    DWORD PTR [ebp-0x54],edx
  414a73:	mov    edx,DWORD PTR [ebp+0x8]
  414a76:	mov    ebx,DWORD PTR [ebp-0x50]
  414a79:	add    edx,ecx
  414a7b:	xor    edx,ebx
  414a7d:	mov    DWORD PTR [ebp-0x50],edx
  414a80:	mov    edx,DWORD PTR [ebp+0x8]
  414a83:	mov    ebx,DWORD PTR [ebp-0x4c]
  414a86:	add    edx,edi
  414a88:	and    edx,ebx
  414a8a:	mov    DWORD PTR [ebp-0x4c],edx
  414a8d:	mov    edx,DWORD PTR [ebp+0x8]
  414a90:	mov    ebx,DWORD PTR [ebp-0x48]
  414a93:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a9a:	mov    DWORD PTR [ebp-0x48],edx
  414a9d:	mov    edx,DWORD PTR [ebp+0x8]
  414aa0:	mov    ebx,0xfa5e1528
  414aa5:	sub    ebx,edx
  414aa7:	add    ebx,DWORD PTR [ebp-0x44]
  414aaa:	mov    DWORD PTR [ebp-0x44],ebx
  414aad:	mov    edx,DWORD PTR [ebp+0x8]
  414ab0:	xor    edx,eax
  414ab2:	add    edx,esi
  414ab4:	jne    0x414a3d
  414aba:	mov    edx,DWORD PTR [ebp-0x8]
  414abd:	mov    ebx,DWORD PTR [ebp-0xc]
  414ac0:	xor    edx,eax
  414ac2:	lea    edx,[edx+ebx*1+0x3272f3]
  414ac9:	mov    DWORD PTR [ebp-0xc],edx
  414acc:	mov    edx,DWORD PTR [ebp-0x10]
  414acf:	xor    edx,eax
  414ad1:	add    edx,esi
  414ad3:	jne    0x41224b
  414ad9:	jmp    0x41b68b
  414ade:	mov    ecx,DWORD PTR [ebp-0x14]
  414ae1:	mov    DWORD PTR [ebp+0x8],ecx
  414ae4:	jmp    0x414b5d
  414ae9:	mov    ecx,DWORD PTR [ebp+0x8]
  414aec:	mov    edx,DWORD PTR [ebp-0x8]
  414aef:	xor    ecx,eax
  414af1:	xor    edx,eax
  414af3:	sub    ecx,edx
  414af5:	sub    ecx,esi
  414af7:	xor    ecx,eax
  414af9:	mov    DWORD PTR [ebp+0x8],ecx
  414afc:	mov    ecx,DWORD PTR [ebp+0x8]
  414aff:	mov    edx,DWORD PTR [ebp-0x58]
  414b02:	add    ecx,0x5708e2
  414b08:	imul   ecx,edx
  414b0b:	mov    DWORD PTR [ebp-0x58],ecx
  414b0e:	mov    ecx,DWORD PTR [ebp+0x8]
  414b11:	mov    edx,DWORD PTR [ebp-0x54]
  414b14:	add    ecx,0x64f89c
  414b1a:	or     ecx,edx
  414b1c:	mov    DWORD PTR [ebp-0x54],ecx
  414b1f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b22:	mov    edx,DWORD PTR [ebp-0x50]
  414b25:	add    ecx,0x242ebcd
  414b2b:	xor    ecx,edx
  414b2d:	mov    DWORD PTR [ebp-0x50],ecx
  414b30:	mov    ecx,DWORD PTR [ebp+0x8]
  414b33:	mov    edx,DWORD PTR [ebp-0x4c]
  414b36:	add    ecx,edi
  414b38:	and    ecx,edx
  414b3a:	mov    DWORD PTR [ebp-0x4c],ecx
  414b3d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b40:	mov    edx,DWORD PTR [ebp-0x48]
  414b43:	lea    ecx,[edx+ecx*1+0x241fcdf]
  414b4a:	mov    DWORD PTR [ebp-0x48],ecx
  414b4d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b50:	mov    edx,0xfa5e1528
  414b55:	sub    edx,ecx
  414b57:	add    edx,DWORD PTR [ebp-0x44]
  414b5a:	mov    DWORD PTR [ebp-0x44],edx
  414b5d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b60:	xor    ecx,eax
  414b62:	add    ecx,esi
  414b64:	jne    0x414ae9
  414b6a:	jmp    0x41b697
  414b6f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b72:	mov    edx,DWORD PTR [ebp-0x8]
  414b75:	xor    ecx,eax
  414b77:	jmp    0x416f00
  414b7c:	repnz mov esi,esp
  414b7f:	repz add BYTE PTR [esi+eiz*8-0x19361778],0xd3
  414b88:	mov    al,ch
  414b8a:	test   BYTE PTR [edi-0x7c7d9801],cl
  414b90:	pop    ss
  414b91:	pop    esp
  414b92:	add    DWORD PTR [ebx-0x4ac7199a],0x5d
  414b99:	add    BYTE PTR [ebp-0xc],dl
  414b9c:	repnz fisttp QWORD PTR [edi]
  414b9f:	pusha  
  414ba0:	add    BYTE PTR [ebx+eax*1+0x3092743b],bl
  414ba7:	(bad)  
  414ba8:	cli    
  414ba9:	mov    eax,ds:0x5f1bf624
  414bae:	mov    dl,0x37
  414bb0:	or     BYTE PTR [edx+0xd03b8f8],0x9d
  414bb7:	popa   
  414bb8:	fs std 
  414bba:	aam    0x6e
  414bbc:	cmp    esp,DWORD PTR ds:0xb8449f37
  414bc2:	sub    ah,0xc6
  414bc5:	jge    0x414c03
  414bc7:	out    0xf,eax
  414bc9:	pop    ds
  414bca:	les    esp,FWORD PTR [ebp+0x196cad0b]
  414bd0:	jbe    0x414be8
  414bd2:	pop    ecx
  414bd3:	aaa    
  414bd4:	and    esp,DWORD PTR [ebx+0x69]
  414bd7:	fcmovne st,st(3)
  414bd9:	push   ss
  414bda:	enter  0xb836,0x53
  414bde:	xchg   ebx,eax
  414bdf:	xchg   ebp,eax
  414be0:	cmp    al,0x38
  414be2:	mov    ebx,0x8bc26220
  414be7:	sti    
  414be8:	out    0xe0,al
  414bea:	fcomp  DWORD PTR [edx-0x2afec367]
  414bf0:	mov    ebp,0x868da903
  414bf5:	and    DWORD PTR [edi-0x147245d],edi
  414bfb:	mov    ah,0x2f
  414bfd:	adc    eax,0x69f24155
  414c02:	xchg   esp,eax
  414c03:	mov    ds:0x5b4f451,eax
  414c08:	out    0x31,al
  414c0a:	push   es
  414c0b:	jl     0x414ba9
  414c0d:	dec    esp
  414c0e:	sbb    esi,DWORD PTR [eax+eiz*8+0x7dc18d08]
  414c15:	test   eax,0x3243923
  414c1a:	pop    edx
  414c1b:	sahf   
  414c1c:	adc    DWORD PTR [edi-0x6c],0xc46d3995
  414c23:	mov    ah,dh
  414c25:	in     eax,dx
  414c26:	mov    esi,0x5123120
  414c2b:	iret   
  414c2c:	fnsave [edx-0x3c65fa81]
  414c32:	sub    ebx,DWORD PTR [esi]
  414c34:	out    dx,eax
  414c35:	push   edi
  414c36:	sub    ah,BYTE PTR ds:0x76f0550
  414c3c:	and    eax,0x54694472
  414c42:	pushf  
  414c43:	jecxz  0x414bc5
  414c45:	leave  
  414c46:	ins    BYTE PTR es:[edi],dx
  414c47:	sub    esi,DWORD PTR [eax-0x11d3d25c]
  414c4d:	loope  0x414cc7
  414c4f:	retf   
  414c50:	loope  0x414ca5
  414c52:	adc    ecx,ebp
  414c54:	leave  
  414c55:	(bad)  
  414c56:	int    0x65
  414c58:	mov    ss,WORD PTR ds:0x5f529de
  414c5e:	into   
  414c5f:	or     edx,DWORD PTR [esp+eax*1]
  414c62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c63:	ds mov ebp,0x10bf2517
  414c69:	lods   eax,DWORD PTR ds:[esi]
  414c6a:	jbe    0x414c6d
  414c6c:	or     DWORD PTR [ecx],edx
  414c6e:	(bad)  
  414c6f:	fisttp WORD PTR [esi-0x7b]
  414c72:	(bad)  
  414c73:	lock push 0x8b242bd7
  414c79:	or     al,0x62
  414c7b:	push   edi
  414c7c:	pop    edi
  414c7d:	pop    edi
  414c7e:	lods   eax,DWORD PTR ds:[esi]
  414c7f:	mov    DWORD PTR [edx+0xc809cb5],esi
  414c85:	inc    edi
  414c86:	popa   
  414c87:	addr16 adc eax,0xf1b97a67
  414c8d:	and    eax,0xaaff15e2
  414c92:	lock outs dx,DWORD PTR ds:[esi]
  414c94:	shl    ch,1
  414c96:	(bad)  [ebx]
  414c98:	jb     0x414c5c
  414c9a:	icebp  
  414c9b:	xor    ah,BYTE PTR [edx+0x905722f]
  414ca1:	or     eax,0xf3963e6f
  414ca6:	inc    ebx
  414ca7:	fadd   DWORD PTR [ebx+0x39]
  414caa:	aaa    
  414cab:	(bad)  
  414cac:	cmc    
  414cad:	aaa    
  414cae:	(bad)  
  414caf:	test   esp,0x962e1941
  414cb5:	adc    DWORD PTR ds:0x4781fed0,0xaed3c264
  414cbf:	dec    edx
  414cc0:	mov    BYTE PTR [edx],dl
  414cc2:	call   0x6a913b87
  414cc7:	pop    edx
  414cc8:	push   gs
  414cca:	cli    
  414ccb:	mov    bl,0xb1
  414ccd:	daa    
  414cce:	outs   dx,BYTE PTR ds:[esi]
  414ccf:	xchg   DWORD PTR [esi+0x4b87172c],esi
  414cd5:	pop    es
  414cd6:	aas    
  414cd7:	repnz lods eax,DWORD PTR ds:[esi]
  414cd9:	imul   eax,DWORD PTR [edx+0x4],0xf0abdb1b
  414ce0:	not    al
  414ce2:	int    0xe
  414ce4:	mov    WORD PTR [edi+0x27],?
  414ce7:	in     eax,dx
  414ce8:	(bad)  
  414ce9:	fadd   st,st(7)
  414ceb:	sahf   
  414cec:	mov    dl,0x72
  414cee:	lahf   
  414cef:	add    BYTE PTR ds:0x28e15d17,dh
  414cf5:	push   0x46
  414cf7:	inc    ecx
  414cf8:	push   esp
  414cf9:	fcomp  QWORD PTR [ebx-0x5a]
  414cfc:	dec    esi
  414cfd:	xor    DWORD PTR [esi-0x6f5810ca],edi
  414d03:	push   ss
  414d04:	jae    0x414cac
  414d06:	lods   eax,DWORD PTR ds:[esi]
  414d07:	aaa    
  414d08:	jnp    0x414ca0
  414d0a:	adc    edi,ebx
  414d0c:	cmp    DWORD PTR [ebp-0x3e],ebx
  414d0f:	mov    esp,ebp
  414d11:	jo     0x414cb0
  414d13:	retf   
  414d14:	bound  ebp,QWORD PTR [edi]
  414d16:	or     DWORD PTR [edx+0x1c],0x95105ec2
  414d1d:	or     eax,0xa99b7064
  414d22:	outs   dx,DWORD PTR ds:[esi]
  414d23:	cmp    esi,DWORD PTR [edi]
  414d25:	add    al,0x80
  414d27:	inc    eax
  414d28:	cmp    eax,0xaad18d6d
  414d2d:	pop    es
  414d2e:	and    ebp,edi
  414d30:	jmp    0xb4c37632
  414d35:	ror    DWORD PTR [esi-0x3fe81aa0],cl
  414d3b:	sub    al,0xc6
  414d3d:	cmp    esi,DWORD PTR [ebx+0x55]
  414d40:	dec    esp
  414d41:	stos   BYTE PTR es:[edi],al
  414d42:	or     al,0xa1
  414d44:	push   cs
  414d45:	rcr    bh,0x32
  414d48:	in     al,dx
  414d49:	push   cs
  414d4a:	mov    cl,BYTE PTR [esi+0xf9da536]
  414d50:	adc    eax,0x7233ac48
  414d55:	(bad)  
  414d56:	hlt    
  414d57:	mov    edx,0xdd5bf245
  414d5c:	xchg   ebx,eax
  414d5d:	arpl   cx,ax
  414d5f:	xchg   esp,eax
  414d60:	inc    edi
  414d61:	pop    ecx
  414d62:	mul    bl
  414d64:	ins    DWORD PTR es:[edi],dx
  414d65:	retf   
  414d66:	add    eax,0x37b2a294
  414d6b:	add    BYTE PTR [ecx-0x4c],cl
  414d6e:	push   eax
  414d6f:	jmp    FWORD PTR [eax]
  414d71:	ret    0x1a3
  414d74:	cld    
  414d75:	pushf  
  414d76:	xor    al,0x21
  414d78:	inc    esp
  414d79:	add    eax,0x2dd03855
  414d7e:	jle    0x414d0c
  414d80:	loope  0x414db3
  414d82:	out    dx,eax
  414d83:	lds    edx,FWORD PTR [edx]
  414d85:	push   0x69fcfe6d
  414d8a:	stc    
  414d8b:	dec    edi
  414d8c:	(bad)  
  414d8d:	jae    0x414d7a
  414d8f:	jbe    0x414db2
  414d91:	push   es
  414d92:	into   
  414d93:	xor    al,0x33
  414d95:	adc    eax,0x22860aa3
  414d9a:	or     ecx,DWORD PTR [esi+0x0]
  414d9d:	fidiv  WORD PTR [eax]
  414d9f:	sbb    eax,0xe61225bf
  414da4:	mov    ah,0x18
  414da6:	mov    bl,0x98
  414da8:	dec    edx
  414da9:	mov    ecx,0x13354248
  414dae:	adc    eax,0xff2ce276
  414db3:	mov    eax,ds:0xde8c83d2
  414db8:	out    0xb,al
  414dba:	inc    esp
  414dbb:	cmp    BYTE PTR [esp+ebp*1],bh
  414dbe:	push   esp
  414dbf:	imul   edi
  414dc1:	aaa    
  414dc2:	in     al,0x8e
  414dc4:	sub    al,0x81
  414dc6:	(bad)  
  414dc7:	sbb    ebx,esi
  414dc9:	mov    ebp,0x451e2953
  414dce:	int    0x25
  414dd0:	and    al,0xc4
  414dd2:	aas    
  414dd3:	mov    ds:0xaea4f5e3,eax
  414dd8:	inc    ebx
  414dd9:	jns    0x414db9
  414ddb:	or     ebx,ecx
  414ddd:	cmp    al,0xcb
  414ddf:	enter  0x8c53,0x4e
  414de3:	enter  0xf8d,0x90
  414de7:	mov    esi,0x786d9068
  414dec:	rcr    DWORD PTR [ebx+0x57],1
  414def:	(bad)
  414df4:	mov    dl,0xdd
  414df6:	lods   eax,DWORD PTR ds:[esi]
  414df7:	(bad)  [edx]
  414df9:	repz mov cl,0xe9
  414dfc:	cmp    DWORD PTR [ecx-0x7fe11399],esi
  414e02:	mov    ecx,0xb64253f2
  414e07:	cli    
  414e08:	cmp    edx,esi
  414e0a:	or     DWORD PTR ds:0x3ea93d02,edi
  414e10:	fisttp WORD PTR [ecx]
  414e12:	mov    ds:0xd44ec13e,al
  414e17:	inc    esi
  414e18:	sbb    ah,al
  414e1a:	mov    esi,esi
  414e1c:	or     esp,DWORD PTR [eax]
  414e1e:	or     DWORD PTR ds:0xe58ac1e5,ebp
  414e24:	and    BYTE PTR [edx-0x5cadd26],0x83
  414e2b:	push   cs
  414e2c:	adc    al,0x15
  414e2e:	leave  
  414e2f:	enter  0x35ac,0x43
  414e33:	ds ret 
  414e35:	out    dx,al
  414e36:	mov    ah,0x16
  414e38:	xor    dl,BYTE PTR [eax+ebp*8]
  414e3b:	pop    ebx
  414e3c:	mov    DWORD PTR [eax-0x6a3c11ac],esi
  414e42:	iret   
  414e43:	and    bl,BYTE PTR [ecx+0x5a]
  414e46:	pop    ebx
  414e47:	scas   eax,DWORD PTR es:[edi]
  414e48:	jnp    0x414ddb
  414e4a:	fwait
  414e4b:	jno    0x414e4c
  414e4d:	cwde   
  414e4e:	repnz rcr DWORD PTR [ecx+0x29],cl
  414e52:	jbe    0x414e91
  414e54:	cmp    dx,WORD PTR [ebp+0x67]
  414e58:	clc    
  414e59:	cmp    bh,cl
  414e5b:	dec    ebx
  414e5c:	gs (bad) 
  414e5f:	outs   dx,BYTE PTR ds:[esi]
  414e60:	xor    bh,BYTE PTR [edx+0xc]
  414e63:	jg     0x414e2e
  414e65:	jl     0x414e3a
  414e67:	push   esi
  414e68:	scas   al,BYTE PTR es:[edi]
  414e69:	sar    BYTE PTR [ecx-0x4],0xf1
  414e6d:	jmp    FWORD PTR [eax+0x5]
  414e70:	inc    edx
  414e71:	arpl   WORD PTR [edi-0x3890fee],sp
  414e77:	cmp    bh,ch
  414e79:	int3   
  414e7a:	inc    ebx
  414e7b:	sahf   
  414e7c:	clc    
  414e7d:	inc    ebp
  414e7e:	dec    edi
  414e7f:	(bad)  
  414e80:	out    0x61,al
  414e82:	cmp    BYTE PTR [edi+edx*1],ah
  414e85:	xor    eax,0xfcce4044
  414e8a:	cli    
  414e8b:	loopne 0x414ef7
  414e8d:	sbb    eax,0xfd95a71c
  414e92:	xchg   esp,eax
  414e93:	or     BYTE PTR [esi],ch
  414e95:	xor    eax,esi
  414e97:	cmc    
  414e98:	gs repz call 0x9056361f
  414e9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ea0:	sub    eax,0x4b391b27
  414ea5:	add    ah,BYTE PTR [ebx+0x3e]
  414ea8:	test   DWORD PTR [edi+0x2fc1736f],esp
  414eae:	rcr    BYTE PTR [esp+esi*2+0x78af09e3],0x72
  414eb6:	(bad)  
  414eb7:	bound  edx,QWORD PTR [edx-0x36]
  414eba:	mov    esi,DWORD PTR [edx-0xf]
  414ebd:	sub    ecx,edi
  414ebf:	mov    dl,al
  414ec1:	pop    ebx
  414ec2:	test   DWORD PTR ds:0x581cd2aa,esp
  414ec8:	pushf  
  414ec9:	data16 xor al,dh
  414ecc:	stos   DWORD PTR es:[edi],eax
  414ecd:	arpl   WORD PTR [ebp+0x10],bx
  414ed0:	add    al,0x78
  414ed2:	vpsllq ymm1,ymm4,XMMWORD PTR [eax-0xfa9cb9d]
  414eda:	and    esi,eax
  414edc:	mov    ds:0x9cc542cb,al
  414ee1:	daa    
  414ee2:	cli    
  414ee3:	add    BYTE PTR [ecx+0x9a756fe],bl
  414ee9:	pop    ebx
  414eea:	adc    eax,0xfe858192
  414eef:	inc    ecx
  414ef0:	pop    ecx
  414ef1:	push   0xffffffe8
  414ef3:	popf   
  414ef4:	push   edi
  414ef5:	(bad)  
  414ef6:	repnz cwde 
  414ef8:	sub    al,dh
  414efa:	adc    esp,ebp
  414efc:	repz int3 
  414efe:	inc    eax
  414eff:	cmp    DWORD PTR [ebx-0x68e6b0a3],esp
  414f05:	mov    ?,WORD PTR [ebx+ebp*2+0x71]
  414f09:	out    0x8f,al
  414f0b:	xchg   ebp,eax
  414f0c:	pop    edx
  414f0d:	dec    eax
  414f0e:	adc    ebx,esi
  414f10:	jae    0x414eec
  414f12:	inc    ecx
  414f13:	dec    ebx
  414f14:	aaa    
  414f15:	ret    
  414f16:	in     eax,dx
  414f17:	sbb    eax,0xdba615
  414f1c:	out    dx,eax
  414f1d:	leave  
  414f1e:	ret    
  414f1f:	dec    ecx
  414f20:	sub    al,0xab
  414f22:	push   ebx
  414f23:	push   cs
  414f24:	sbb    DWORD PTR [eax-0x3192173f],eax
  414f2a:	cdq    
  414f2b:	(bad)  
  414f2d:	enter  0x66a8,0xd3
  414f31:	aas    
  414f32:	add    BYTE PTR [edx-0x55758302],bh
  414f38:	and    al,BYTE PTR [eax]
  414f3a:	and    eax,0xc5af65b7
  414f3f:	push   ss
  414f40:	lods   eax,DWORD PTR ds:[esi]
  414f41:	xor    DWORD PTR [edi+0x14a4da95],esp
  414f47:	loopne 0x414f52
  414f49:	mov    al,ds:0x540a3703
  414f4e:	outs   dx,BYTE PTR ds:[esi]
  414f4f:	mov    al,0x57
  414f51:	sbb    eax,0x34
  414f54:	outs   dx,BYTE PTR ds:[esi]
  414f55:	lahf   
  414f56:	(bad)  
  414f57:	cld    
  414f58:	pushf  
  414f59:	jno    0x414f6e
  414f5b:	push   edx
  414f5c:	dec    ecx
  414f5d:	jne    0x414f37
  414f5f:	stc    
  414f60:	and    dh,BYTE PTR gs:[ebx]
  414f63:	pop    ds
  414f64:	push   ebx
  414f65:	ret    
  414f66:	cwde   
  414f67:	lahf   
  414f68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f69:	ds loope 0x414f6c
  414f6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f6d:	jle    0x414f92
  414f6f:	es or  eax,0x52233b9b
  414f75:	push   0x99b9620a
  414f7a:	int3   
  414f7b:	pop    esi
  414f7c:	out    dx,al
  414f7d:	pop    ecx
  414f7e:	pusha  
  414f7f:	clc    
  414f80:	sbb    dl,BYTE PTR ds:[ebx-0x33]
  414f84:	mov    esi,0x7a0d47d0
  414f89:	outs   dx,BYTE PTR ds:[esi]
  414f8a:	mov    BYTE PTR [ebx],dl
  414f8c:	pop    ecx
  414f8d:	mov    WORD PTR [eax+0x72],fs
  414f90:	pop    ebx
  414f91:	jmp    0x4eee:0xba271861
  414f98:	dec    ebx
  414f99:	imul   edi,edx,0xffffffd5
  414f9c:	clc    
  414f9d:	(bad)  
  414f9e:	imul   eax,edi,0x11
  414fa1:	icebp  
  414fa2:	lock out dx,eax
  414fa4:	jl     0x415006
  414fa6:	aaa    
  414fa7:	mov    DWORD PTR [edx],ebx
  414fa9:	jg     0x414f5e
  414fab:	or     eax,0x92b6cacc
  414fb0:	mov    cl,0xc8
  414fb2:	xchg   esi,eax
  414fb3:	pop    ebp
  414fb4:	std    
  414fb5:	add    eax,0x28649eb0
  414fba:	bound  edi,QWORD PTR [ebp-0x6200f65f]
  414fc0:	pop    ds
  414fc1:	int    0xb8
  414fc3:	out    dx,al
  414fc4:	es mov al,0x60
  414fc7:	add    eax,edi
  414fc9:	push   eax
  414fca:	mov    bl,0x29
  414fcc:	inc    ebp
  414fcd:	mov    esp,0xfc206745
  414fd2:	lock xchg edi,eax
  414fd4:	push   eax
  414fd5:	inc    ebp
  414fd6:	dec    ebp
  414fd7:	(bad)  
  414fd8:	jno    0x41504b
  414fda:	mov    ds:0x57645e24,eax
  414fdf:	jne    0x414f78
  414fe1:	sahf   
  414fe2:	pop    ebx
  414fe3:	xchg   DWORD PTR [ebx-0x7f99e8a7],ecx
  414fe9:	cmovle esp,DWORD PTR [eax]
  414fec:	call   0xb8d9:0x89b50552
  414ff3:	jp     0x41506d
  414ff5:	xchg   ecx,eax
  414ff6:	(bad)  
  414ff7:	dec    ebp
  414ff8:	fadd   DWORD PTR [eax+0x7]
  414ffb:	mov    ch,0x3
  414ffd:	retf   0xd20c
  415000:	add    DWORD PTR [ebx+0x58],eax
  415003:	xor    ebp,DWORD PTR [esi-0x563aa4c7]
  415009:	adc    bh,al
  41500b:	jl     0x41508b
  41500d:	xor    DWORD PTR [eax-0x74f694fa],0x4ffa7a1a
  415017:	shl    DWORD PTR [ebp+eiz*4+0x3e],0x2c
  41501c:	or     BYTE PTR [edx+0x45],ah
  41501f:	mov    al,0xee
  415021:	shl    esp,0x3c
  415024:	rcr    DWORD PTR [esi],1
  415026:	fsubrp st(4),st
  415028:	sti    
  415029:	adc    ebx,DWORD PTR [edi]
  41502b:	js     0x415033
  41502d:	mov    bh,0xe4
  41502f:	xchg   ecx,eax
  415030:	into   
  415031:	sub    eax,0x13589513
  415036:	mov    dl,0xfb
  415038:	add    BYTE PTR [edi-0x1c],0xe7
  41503c:	mov    bl,0x20
  41503e:	pop    esp
  41503f:	inc    edx
  415040:	adc    dl,BYTE PTR [ecx+ebp*1-0x11]
  415044:	cdq    
  415045:	mov    DWORD PTR [edx-0x2b],esi
  415048:	pop    ebx
  415049:	sub    al,0x29
  41504b:	(bad)  
  41504c:	mov    ch,BYTE PTR [edi]
  41504e:	inc    eax
  41504f:	pop    esp
  415050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415051:	sbb    BYTE PTR [edx],ch
  415053:	ds xchg esp,eax
  415056:	cmp    al,ch
  415058:	rcl    DWORD PTR [esi+0x1b],1
  41505b:	sbb    ah,0xbc
  41505e:	inc    dx
  415060:	sbb    dl,BYTE PTR [esi*1+0x2976ce94]
  415067:	shl    DWORD PTR ds:0x34c8e0f0,0x79
  41506e:	sub    eax,0xa0809e84
  415073:	xchg   ecx,eax
  415074:	repnz sbb ebp,DWORD PTR [edx]
  415077:	sbb    eax,0xc540fd9
  41507c:	int3   
  41507d:	mov    cl,0xf7
  41507f:	loopne 0x415041
  415081:	arpl   dx,ax
  415083:	in     al,dx
  415084:	in     al,0x2c
  415086:	rcl    DWORD PTR [esi],cl
  415088:	mov    dl,0x9a
  41508a:	lahf   
  41508b:	cld    
  41508c:	loop   0x41506c
  41508e:	popa   
  41508f:	and    ebp,edx
  415091:	sub    BYTE PTR [eax+0x3e],bh
  415094:	jno    0x415068
  415096:	repz cmp dh,0x55
  41509a:	lock jecxz 0x415083
  41509d:	or     edi,ebx
  41509f:	jmp    0x41502f
  4150a1:	cs xchg esp,eax
  4150a3:	add    al,0x58
  4150a5:	sbb    DWORD PTR cs:[ebp+0x718cfa44],esi
  4150ac:	mov    al,ds:0x7ae620aa
  4150b1:	(bad)  
  4150b2:	inc    ebp
  4150b3:	(bad)  
  4150b4:	mov    ebp,0x156a50a2
  4150b9:	mov    ?,WORD PTR [edx+ebx*4-0x124d9c94]
  4150c0:	add    esi,DWORD PTR [esi]
  4150c2:	inc    ecx
  4150c3:	std    
  4150c4:	in     al,0x1d
  4150c6:	(bad)  
  4150c7:	out    dx,eax
  4150c8:	ret    0x152f
  4150cb:	inc    ebp
  4150cc:	lahf   
  4150cd:	push   cs
  4150ce:	push   eax
  4150cf:	pmaxsw mm3,QWORD PTR [edi+0x11]
  4150d3:	into   
  4150d4:	imul   edi,DWORD PTR [esp+ecx*2+0x693d2944],0xffffffa4
  4150dc:	mov    bh,0xfe
  4150de:	inc    ebp
  4150df:	test   al,dh
  4150e1:	pop    edx
  4150e2:	loope  0x4150b9
  4150e4:	(bad)  
  4150e5:	jmp    DWORD PTR [ebx-0x76c200dc]
  4150eb:	loope  0x415107
  4150ed:	mov    ds:0x53f25df5,al
  4150f2:	out    dx,al
  4150f3:	mov    DWORD PTR [esi-0x15],edx
  4150f6:	dec    esi
  4150f7:	mov    dh,0x2e
  4150f9:	sub    edx,DWORD PTR [ecx+0x45]
  4150fc:	nop
  4150fd:	outs   dx,BYTE PTR ds:[esi]
  4150fe:	jecxz  0x41513c
  415100:	aas    
  415101:	hlt    
  415102:	inc    esp
  415103:	push   ecx
  415104:	push   eax
  415105:	or     eax,0x74cf0b34
  41510a:	jge    0x41511f
  41510c:	push   ebp
  41510d:	push   esp
  41510e:	loop   0x415184
  415110:	or     DWORD PTR gs:[edx],eax
  415113:	iret   
  415114:	push   es
  415115:	jp     0x4150d3
  415117:	add    edi,DWORD PTR [ebp-0x1a]
  41511a:	shr    ah,cl
  41511c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41511e:	test   DWORD PTR [ecx-0x44282e98],0x13af29d0
  415128:	xor    al,0xab
  41512a:	data16 cli 
  41512c:	call   0x931f:0x2972dba2
  415133:	idiv   BYTE PTR fs:[ebp+0x4c768b13]
  41513a:	out    0xc9,al
  41513c:	add    BYTE PTR [ebx+0x5d5137bf],ah
  415142:	xchg   DWORD PTR [edi],esi
  415144:	je     0x41517d
  415146:	fwait
  415147:	nop
  415148:	cmc    
  415149:	cmp    bh,BYTE PTR [eax]
  41514b:	jge    0x4151c9
  41514d:	mov    edi,0x97a84771
  415152:	or     ebp,edi
  415154:	push   es
  415155:	data16 aad 0x9c
  415158:	mov    bl,0x38
  41515a:	rcl    bl,0x73
  41515d:	ja     0x415168
  41515f:	pop    eax
  415160:	inc    sp
  415162:	cli    
  415163:	fiadd  DWORD PTR [edx-0x37941b1c]
  415169:	push   edi
  41516a:	xlat   BYTE PTR ds:[ebx]
  41516b:	or     eax,0x305e77db
  415170:	pop    eax
  415171:	cld    
  415172:	jmp    0xbc4d:0xe05796c0
  415179:	out    dx,eax
  41517a:	adc    bh,BYTE PTR [edx-0x12]
  41517d:	jle    0x17d5d589
  415183:	ins    DWORD PTR es:[edi],dx
  415184:	xchg   esi,eax
  415185:	push   ecx
  415186:	repz add ah,BYTE PTR [ebx+0x6a]
  41518a:	jp     0x41519e
  41518c:	cdq    
  41518d:	shl    DWORD PTR [ebx],cl
  41518f:	into   
  415190:	seta   BYTE PTR [ebx+0x37b91ee0]
  415197:	dec    edi
  415198:	sbb    ecx,DWORD PTR [edx]
  41519a:	out    dx,eax
  41519b:	das    
  41519c:	enter  0x57c1,0xa3
  4151a0:	dec    esp
  4151a1:	pop    ecx
  4151a2:	pop    ss
  4151a3:	(bad)  
  4151a4:	mov    ebx,0xc5662e2e
  4151a9:	pop    edx
  4151aa:	or     BYTE PTR [eax],ah
  4151ac:	lea    ebp,[ebx-0x2a]
  4151af:	jmp    0x4151eb
  4151b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151b2:	xchg   ebx,eax
  4151b3:	ja     0x4151be
  4151b5:	inc    esi
  4151b6:	repnz cmp BYTE PTR [ebx-0x1ad9bc92],ah
  4151bd:	cmp    eax,0x865287a8
  4151c2:	cmc    
  4151c3:	iret   
  4151c4:	repz sar BYTE PTR [eax],1
  4151c7:	sbb    bl,BYTE PTR ds:0xe4290cd
  4151cd:	js     0x4151c2
  4151cf:	cmp    bh,bl
  4151d1:	icebp  
  4151d2:	lahf   
  4151d3:	dec    ebx
  4151d4:	lods   al,BYTE PTR ds:[esi]
  4151d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151d6:	push   ebp
  4151d7:	dec    edx
  4151d8:	jns    0x41520b
  4151da:	scas   eax,DWORD PTR es:[edi]
  4151db:	xor    DWORD PTR [ebx-0x1bfeb510],edx
  4151e1:	dec    eax
  4151e2:	les    ecx,FWORD PTR [esi-0x71]
  4151e5:	pop    ecx
  4151e6:	sub    al,0xdb
  4151e8:	test   eax,0xda347cf
  4151ed:	sbb    dh,cl
  4151ef:	jle    0x41517b
  4151f1:	push   ss
  4151f2:	clc    
  4151f3:	mov    bl,0x76
  4151f5:	cdq    
  4151f6:	nop
  4151f7:	sbb    DWORD PTR cs:[eax+0x6adfaa2b],edi
  4151fe:	pop    esi
  4151ff:	mov    DWORD PTR [edx+0x19d72c3a],esi
  415205:	push   esi
  415206:	test   edi,esp
  415208:	add    al,0x9d
  41520a:	mov    bl,0xe0
  41520c:	dec    edx
  41520d:	dec    eax
  41520e:	call   0x1abdacb9
  415213:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415214:	push   edi
  415215:	ret    0x821b
  415218:	xlat   BYTE PTR ds:[ebx]
  415219:	loop   0x415244
  41521b:	imul   edx,DWORD PTR [edi],0x55972e47
  415221:	push   es
  415222:	retf   
  415223:	or     esp,ebp
  415225:	add    DWORD PTR [edx+eiz*4-0x71],esp
  415229:	dec    ebp
  41522a:	out    dx,al
  41522b:	pop    ds
  41522c:	pop    eax
  41522d:	imul   edx,esp,0xffffff87
  415230:	mov    bh,0xe6
  415232:	add    BYTE PTR [esi-0x521e4b31],0xec
  415239:	or     BYTE PTR [ebx],ch
  41523b:	pushf  
  41523c:	mov    edi,0xca0b017a
  415241:	addr16 retf 
  415243:	sub    eax,0x543b2f6
  415248:	inc    ebp
  415249:	push   ecx
  41524a:	jae    0x41524e
  41524c:	popa   
  41524d:	bound  edx,QWORD PTR [edi+esi*1-0x3c]
  415251:	jecxz  0x4152a8
  415253:	inc    esp
  415254:	dec    ecx
  415255:	sub    BYTE PTR [ecx+ebp*2+0x6f07f6a1],cl
  41525c:	sub    al,0xbb
  41525e:	sbb    cl,BYTE PTR [esi-0x2a9e5fae]
  415264:	sub    BYTE PTR [edi],ah
  415266:	xor    al,0xab
  415268:	dec    eax
  415269:	inc    ebp
  41526a:	and    BYTE PTR [ecx],bl
  41526c:	daa    
  41526d:	mov    eax,ebp
  41526f:	js     0x4152de
  415271:	mov    ah,0xfc
  415273:	adc    al,0x8a
  415275:	adc    al,0xc1
  415277:	(bad)  
  415278:	xchg   edi,eax
  415279:	xor    ch,BYTE PTR [ecx-0x63baf5d7]
  41527f:	sbb    al,BYTE PTR [ebx+0x202820f1]
  415285:	mov    al,0xb7
  415287:	and    al,BYTE PTR [eax-0x36300b4b]
  41528d:	clc    
  41528e:	dec    edx
  41528f:	push   ds
  415290:	push   esp
  415291:	sbb    dh,BYTE PTR [ecx+0xd0ce0bb]
  415297:	adc    edx,edx
  415299:	inc    ecx
  41529a:	es sbb al,0xf5
  41529d:	xchg   ebx,eax
  41529e:	bound  esi,QWORD PTR [eax]
  4152a0:	adc    BYTE PTR [edx],ah
  4152a2:	stos   DWORD PTR es:[edi],eax
  4152a3:	loop   0x4152d7
  4152a5:	loopne 0x41528c
  4152a7:	pop    ebx
  4152a8:	in     al,0xed
  4152aa:	or     eax,edi
  4152ac:	arpl   WORD PTR [esi-0x4f],si
  4152af:	mov    cl,0x6
  4152b1:	xor    al,0xb6
  4152b3:	sbb    eax,0xc84fa13a
  4152b8:	inc    edx
  4152b9:	std    
  4152ba:	pop    ebp
  4152bb:	jb     0x415267
  4152bd:	scas   al,BYTE PTR es:[edi]
  4152be:	xlat   BYTE PTR ds:[ebx]
  4152bf:	pop    ss
  4152c0:	xchg   ecx,eax
  4152c1:	repnz add al,0x1f
  4152c4:	stc    
  4152c5:	xor    DWORD PTR [ebx-0x5b279990],ecx
  4152cb:	inc    ebx
  4152cc:	repz add ah,bl
  4152cf:	scas   al,BYTE PTR es:[edi]
  4152d0:	jmp    0x10c7:0xcde385fe
  4152d7:	stos   BYTE PTR es:[edi],al
  4152d8:	sbb    cl,BYTE PTR [ecx]
  4152da:	xchg   esp,eax
  4152db:	out    0xe0,eax
  4152dd:	sub    DWORD PTR [ebx-0x73],ebx
  4152e0:	pop    edi
  4152e1:	jg     0x41532e
  4152e3:	dec    eax
  4152e4:	jmp    0x7b69835c
  4152e9:	adc    dl,BYTE PTR [esp+edi*4+0x5954bdd]
  4152f0:	sub    ebp,DWORD PTR [ecx]
  4152f2:	dec    edx
  4152f3:	xor    ax,0x2fa6
  4152f7:	lahf   
  4152f8:	int3   
  4152f9:	dec    esp
  4152fa:	test   eax,0xaa1cb86c
  4152ff:	sub    eax,0xe6727a5f
  415304:	mov    ds:0xbdc29531,eax
  415309:	mov    bh,0x10
  41530b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41530c:	mov    bh,0x43
  41530e:	mov    eax,0x76771c4a
  415313:	pop    ds
  415314:	or     DWORD PTR [edx+0x1f9545c4],edx
  41531a:	and    ebp,DWORD PTR [ecx]
  41531c:	stos   DWORD PTR es:[edi],eax
  41531d:	lods   al,BYTE PTR ds:[esi]
  41531e:	sub    DWORD PTR [ecx+0x49b53b35],esi
  415324:	mov    cl,BYTE PTR [esi+0x1627e458]
  41532a:	mov    ebp,0x11f1aa65
  41532f:	sbb    BYTE PTR [edx-0x7ae5a428],bh
  415335:	imul   esp,DWORD PTR [eax],0xf20359e9
  41533b:	adc    bh,BYTE PTR [edx]
  41533d:	out    dx,eax
  41533e:	push   0x51
  415340:	fbld   TBYTE PTR [esp+esi*8]
  415343:	pop    esi
  415344:	adc    ecx,DWORD PTR [ebp+0xe2cea7b]
  41534a:	jle    0x4153a9
  41534c:	dec    esp
  41534d:	sbb    ah,al
  41534f:	jae    0x41530a
  415351:	int    0xfb
  415353:	aaa    
  415354:	cmp    ah,BYTE PTR [ecx-0xc]
  415357:	cli    
  415358:	pop    ss
  415359:	jge    0x4152e8
  41535b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41535c:	lods   al,BYTE PTR ds:[esi]
  41535d:	loope  0x415309
  41535f:	bound  esp,QWORD PTR [esi]
  415361:	jmp    0x64da:0x863857f7
  415368:	arpl   WORD PTR [edi],ax
  41536a:	mov    ebp,0x99fe2d70
  41536f:	mov    eax,0xf32792be
  415374:	popf   
  415375:	(bad)  
  415376:	push   ss
  415377:	imul   ebx,ecx,0x96d58fa7
  41537d:	cmp    eax,0xbb0e0403
  415382:	xchg   esp,eax
  415383:	scas   eax,DWORD PTR es:[edi]
  415384:	xor    al,0x2b
  415386:	out    0x36,eax
  415388:	pop    edi
  415389:	lahf   
  41538a:	aam    0xde
  41538c:	dec    edx
  41538d:	cli    
  41538e:	lods   eax,DWORD PTR ds:[esi]
  41538f:	fdivrp st(3),st
  415391:	adc    al,0xca
  415393:	frstor [ecx]
  415395:	fucom  st(6)
  415397:	cmp    BYTE PTR [edx],bh
  415399:	jno    0x415410
  41539b:	mov    eax,ds:0x7f0d7217
  4153a0:	cdq    
  4153a1:	data16 shr cl,cl
  4153a4:	inc    edx
  4153a5:	fldenv [edi]
  4153a7:	mov    DWORD PTR [ecx],edi
  4153a9:	aaa    
  4153aa:	mov    dh,0xb0
  4153ac:	sub    esp,DWORD PTR cs:[ecx-0xa]
  4153b0:	pop    edi
  4153b1:	fcomp  DWORD PTR [ecx+0x281bd74c]
  4153b7:	sbb    al,0xd1
  4153b9:	or     dl,BYTE PTR [edx+0x78]
  4153bc:	inc    edi
  4153bd:	mov    DWORD PTR [ebx],eax
  4153bf:	mov    edi,0x4e7563c4
  4153c4:	mov    ?,WORD PTR [edi-0x72]
  4153c7:	mov    ds:0x2c581f7d,ax
  4153cd:	test   BYTE PTR [ebx+0x25],ah
  4153d0:	lds    edx,FWORD PTR [esi-0x37]
  4153d3:	in     al,0xd5
  4153d5:	rcl    ah,1
  4153d7:	mov    ds:0x12a5c8fd,eax
  4153dc:	in     eax,dx
  4153dd:	out    0x2e,al
  4153df:	adc    ch,dh
  4153e1:	sbb    al,0x6a
  4153e3:	(bad)  
  4153e4:	cs mov bh,0x6b
  4153e7:	push   ds
  4153e8:	es retf 
  4153ea:	mov    ch,BYTE PTR [ecx]
  4153ec:	imul   edx,DWORD PTR gs:[eax+edx*1+0x5a],0xc3841bf6
  4153f5:	popf   
  4153f6:	and    eax,0xba3b8e8b
  4153fb:	add    DWORD PTR [edx+0x6e6c54cb],ecx
  415401:	sub    al,0x44
  415403:	repz mov bl,0x92
  415406:	mov    eax,0xab7a090f
  41540b:	loop   0x4153be
  41540d:	dec    edx
  41540e:	out    0xc7,eax
  415410:	sub    BYTE PTR [ebx+0x5f965dab],cl
  415416:	fs punpcklbw mm3,mm7
  41541a:	inc    ecx
  41541b:	(bad)  
  41541c:	arpl   WORD PTR [ebp-0x7603665a],ax
  415422:	push   ss
  415423:	inc    ebp
  415424:	mov    DWORD PTR [edi-0x16],edi
  415427:	sub    eax,0x731956c
  41542c:	retf   0xeb56
  41542f:	ja     0x415466
  415431:	xor    eax,0x8f196cc2
  415436:	jo     0x415407
  415438:	sbb    cl,BYTE PTR [eax+0x4a6459a7]
  41543e:	xor    al,0xe2
  415440:	(bad)  
  415442:	hlt    
  415443:	jbe    0x415483
  415445:	cs bound ebx,QWORD PTR gs:[esi-0x18]
  41544a:	cdq    
  41544b:	add    bh,bh
  41544d:	repnz xchg edi,eax
  41544f:	aam    0xdd
  415451:	imul   esp,DWORD PTR [edx+0x7c91e114],0x4e57fcc8
  41545b:	xchg   ecx,eax
  41545c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41545d:	dec    eax
  41545e:	pop    ebx
  41545f:	sub    esi,DWORD PTR fs:[ecx+0x494a9f82]
  415466:	xchg   DWORD PTR [ebx+0x111bcf9f],ebx
  41546c:	jecxz  0x4154ea
  41546e:	(bad)  
  41546f:	imul   edi,DWORD PTR ds:0x2fd6595d,0x3c
  415476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415477:	mov    al,0x1b
  415479:	sbb    BYTE PTR es:[esi+esi*1-0x36],ch
  41547e:	sub    eax,0xd473f16
  415483:	add    bl,BYTE PTR [edi+ecx*8]
  415486:	mov    ebp,0x24b40bef
  41548b:	sub    dl,bl
  41548d:	test   BYTE PTR [esi-0x7c47df9],ah
  415493:	jl     0x4154a4
  415495:	nop
  415496:	aas    
  415497:	ja     0x41542d
  415499:	xor    DWORD PTR [esi+0x72],ebx
  41549c:	jmp    0x41550b
  41549e:	(bad)  
  41549f:	fdivr  DWORD PTR [edx+edx*1]
  4154a2:	fnstenv [ebx]
  4154a4:	mov    cl,0x6a
  4154a6:	xor    ah,ah
  4154a8:	pop    ecx
  4154a9:	push   0x18
  4154ab:	sahf   
  4154ac:	inc    edx
  4154ad:	js     0x41546a
  4154af:	rcr    BYTE PTR [ecx+0x40ccdd62],1
  4154b5:	ins    DWORD PTR es:[edi],dx
  4154b6:	or     eax,0xf5b4ec84
  4154bb:	push   eax
  4154bc:	adc    BYTE PTR [edx+edi*2-0x18],ah
  4154c0:	int    0xff
  4154c2:	jo     0x415447
  4154c4:	jb     0x41547f
  4154c6:	add    DWORD PTR [eax],ebx
  4154c8:	ins    BYTE PTR es:[edi],dx
  4154c9:	push   ebx
  4154ca:	xchg   ecx,eax
  4154cb:	jle    0x41550b
  4154cd:	add    dh,bh
  4154cf:	iret   
  4154d0:	(bad)  
  4154d1:	pop    ebx
  4154d2:	outs   dx,BYTE PTR ds:[esi]
  4154d3:	mov    edx,0x29e1ee38
  4154d8:	fnstcw WORD PTR ss:[ebx+0x58d6720d]
  4154df:	sbb    BYTE PTR [eax+0x28],bl
  4154e2:	or     esp,DWORD PTR [ebp+0x20a93fb1]
  4154e8:	push   edi
  4154e9:	jno    0x4154ec
  4154eb:	pop    ss
  4154ec:	and    al,0xef
  4154ee:	jp     0x4154b6
  4154f0:	inc    ebx
  4154f1:	xor    ah,bl
  4154f3:	cmp    eax,DWORD PTR [ebx]
  4154f5:	loope  0x4154f7
  4154f7:	imul   esi,DWORD PTR ds:0x6432b547,0x715739df
  415501:	or     esp,0x878469df
  415507:	or     bl,BYTE PTR ds:0x788f9769
  41550d:	mov    WORD PTR [esi-0x5597ec45],?
  415513:	lea    edi,[ebp+0x5c]
  415516:	jg     0x41556d
  415518:	adc    DWORD PTR [edx],0xffffffeb
  41551b:	jno    0x4154f2
  41551d:	dec    esi
  41551e:	fxam   
  415520:	add    eax,0x8ea287a9
  415525:	mov    ds:0x5fe6bdfa,al
  41552a:	cmp    DWORD PTR [ebx],0xffffff98
  41552d:	out    0x6c,al
  41552f:	cli    
  415530:	std    
  415531:	das    
  415532:	and    ebp,DWORD PTR [edx]
  415534:	dec    eax
  415535:	xor    DWORD PTR [esi+edi*2],esi
  415538:	sub    al,0x82
  41553a:	sar    DWORD PTR [ecx-0xa],0xe9
  41553e:	pop    eax
  41553f:	fistp  QWORD PTR [edi-0x1022c41a]
  415545:	loope  0x4155c3
  415547:	ffreep st(4)
  415549:	jae    0x4155ba
  41554b:	mov    ecx,0x33d43a55
  415550:	xchg   edi,eax
  415551:	je     0x4155b1
  415553:	clc    
  415554:	inc    edi
  415555:	sbb    BYTE PTR [ecx],0x49
  415558:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415559:	call   0xed0f25e7
  41555e:	push   cs
  41555f:	aaa    
  415560:	jne    0x4154fb
  415562:	lock mov esp,0x75e02c0a
  415568:	verr   WORD PTR [ecx]
  41556b:	mov    DWORD PTR [eax],eax
  41556d:	popa   
  41556e:	jl     0x415552
  415570:	outs   dx,DWORD PTR ds:[esi]
  415571:	jnp    0x4155a0
  415573:	cmp    eax,0x6559e7c7
  415578:	dec    edx
  415579:	dec    ecx
  41557a:	dec    ecx
  41557b:	jecxz  0x4155f6
  41557d:	retf   0x7a65
  415580:	(bad)  
  415581:	int    0x70
  415583:	mov    esi,0x1787d36d
  415588:	cmc    
  415589:	stos   BYTE PTR es:[edi],al
  41558a:	mov    edi,0x5611134d
  41558f:	es push edi
  415591:	mov    esi,0x6b0afe49
  415596:	pushf  
  415597:	or     DWORD PTR [ebx],0x8f9c38a2
  41559d:	add    esi,ebx
  41559f:	in     al,dx
  4155a0:	sbb    al,0xa9
  4155a2:	adc    DWORD PTR [edi-0x3e],edi
  4155a5:	mov    bl,0x6c
  4155a7:	scas   al,BYTE PTR es:[edi]
  4155a8:	add    cl,BYTE PTR ds:0xa452f834
  4155ae:	add    DWORD PTR [edx],ecx
  4155b0:	jge    0x415615
  4155b2:	inc    bl
  4155b4:	sbb    DWORD PTR [edi+0x52],edx
  4155b7:	xchg   ebp,eax
  4155b8:	jge    0x415603
  4155ba:	std    
  4155bb:	mov    bh,0x1f
  4155bd:	mov    esp,DWORD PTR [ebx-0x36]
  4155c0:	jnp    0x415634
  4155c2:	jge    0x415616
  4155c4:	or     BYTE PTR [eax],cl
  4155c6:	inc    esp
  4155c7:	pop    edx
  4155c8:	xor    al,0x3b
  4155ca:	int3   
  4155cb:	pop    ss
  4155cc:	addr16 addr16 cdq 
  4155cf:	call   0xec28:0x4188511c
  4155d6:	dec    esp
  4155d7:	xchg   edx,eax
  4155d8:	in     eax,dx
  4155d9:	jns    0x4155d0
  4155db:	ins    BYTE PTR es:[edi],dx
  4155dc:	xor    al,ch
  4155de:	inc    edi
  4155df:	push   cs
  4155e0:	cmp    BYTE PTR [ebx-0x49],dh
  4155e3:	cvttps2pi mm5,QWORD PTR [ebp+0x2a]
  4155e7:	mov    BYTE PTR ds:0x379f5929,cl
  4155ed:	std    
  4155ee:	inc    ebx
  4155ef:	das    
  4155f0:	push   esp
  4155f1:	add    eax,0x98bb6752
  4155f6:	jnp    0x4155cf
  4155f8:	ins    DWORD PTR es:[edi],dx
  4155f9:	sub    bl,dl
  4155fb:	sub    ebx,DWORD PTR [esi+eiz*8-0x5a]
  4155ff:	xor    al,0x63
  415601:	in     al,dx
  415602:	push   eax
  415603:	jnp    0x41565e
  415605:	adc    al,BYTE PTR [edi-0x52]
  415608:	rcl    DWORD PTR [esi-0x7b6f264],cl
  41560e:	stos   BYTE PTR es:[edi],al
  41560f:	xchg   ch,al
  415611:	jp     0x415632
  415613:	xchg   edx,eax
  415614:	push   ebx
  415615:	inc    edx
  415616:	test   al,0x62
  415618:	or     dl,BYTE PTR ds:0x9436da9f
  41561e:	dec    edx
  41561f:	jae    0x4155f7
  415621:	call   0x407eaa10
  415626:	stos   DWORD PTR es:[edi],eax
  415627:	fidiv  DWORD PTR gs:[ebp+0x11]
  41562b:	and    ecx,ecx
  41562d:	dec    esp
  41562e:	outs   dx,DWORD PTR ds:[esi]
  41562f:	cmp    DWORD PTR [ebx],esp
  415631:	xor    BYTE PTR [edx-0x62],0x9e
  415635:	mov    dl,0x48
  415637:	lock pop ebp
  415639:	sub    BYTE PTR [ebx+0x10bdacfd],0x16
  415640:	retf   0x3c9e
  415643:	out    0xbf,eax
  415645:	sbb    eax,DWORD PTR [edi+0x5f]
  415648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415649:	xchg   esi,eax
  41564a:	mov    ah,0xb6
  41564c:	fst    DWORD PTR [edx]
  41564e:	es inc ebx
  415650:	adc    bh,BYTE PTR [ecx-0x784c3cd3]
  415656:	test   eax,0x8cf47f76
  41565b:	out    0x44,eax
  41565d:	mov    al,ds:0xe55a3315
  415662:	retf   
  415663:	jbe    0x41567b
  415665:	lds    ecx,FWORD PTR [eax+0x1b5a16cb]
  41566b:	mov    BYTE PTR [ecx],ah
  41566d:	dec    eax
  41566e:	jns    0x4156cc
  415670:	inc    eax
  415671:	inc    edi
  415672:	dec    edi
  415673:	iret   
  415674:	inc    edx
  415675:	ficom  WORD PTR [ebx]
  415677:	lea    esi,[ecx]
  415679:	mov    esi,0x1333c040
  41567e:	out    dx,al
  41567f:	sbb    al,0xe4
  415681:	jle    0x4156c4
  415683:	and    bh,ch
  415685:	lods   al,BYTE PTR ds:[esi]
  415686:	sbb    eax,0x7cc8daf7
  41568b:	stos   BYTE PTR es:[edi],al
  41568c:	cmp    DWORD PTR [ebx],esp
  41568e:	addr16 push 0x2d095057
  415694:	pop    ds
  415695:	frstor [eax]
  415697:	sub    DWORD PTR [eax+0x7d56e69c],ebp
  41569d:	nop
  41569e:	imul   edi,DWORD PTR [eax],0x2ed508e4
  4156a4:	hlt    
  4156a5:	jnp    0x4156fd
  4156a7:	or     eax,0xcfb99b09
  4156ac:	(bad)  
  4156ad:	cli    
  4156ae:	loope  0x415673
  4156b0:	jno    0x4156ff
  4156b2:	das    
  4156b3:	jnp    0x415645
  4156b5:	in     eax,0x3f
  4156b7:	jle    0x415693
  4156b9:	xor    ch,BYTE PTR [eax+esi*1-0x2ed69af]
  4156c0:	mov    ebx,0x590d203f
  4156c5:	adc    dl,BYTE PTR ds:0xf734f17
  4156cb:	mov    ecx,0x7d410991
  4156d0:	inc    esi
  4156d1:	sbb    BYTE PTR [ecx+0x24],ch
  4156d4:	push   ss
  4156d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156d6:	std    
  4156d7:	enter  0x6ef5,0x8d
  4156db:	int    0xe5
  4156dd:	inc    edx
  4156de:	fwait
  4156df:	imul   ebx,DWORD PTR ds:0x14f95134,0x63
  4156e6:	nop
  4156e7:	adc    ah,BYTE PTR [eax+ebx*1-0x68]
  4156eb:	(bad)  
  4156ec:	fimul  WORD PTR [eax]
  4156ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156ef:	dec    ebp
  4156f0:	cmp    BYTE PTR [ebx-0x75faaea2],dh
  4156f6:	cmc    
  4156f7:	mov    dh,ch
  4156f9:	push   eax
  4156fa:	push   ss
  4156fb:	pop    ecx
  4156fc:	jne    0x41574f
  4156fe:	ficomp WORD PTR [ebx+0x3f1cbadf]
  415704:	inc    esp
  415705:	mov    edi,0xcee71970
  41570a:	jne    0x415777
  41570c:	mov    ecx,0x15d2519a
  415711:	pop    ecx
  415712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415713:	lds    esp,FWORD PTR [edi+ecx*1-0x425a2394]
  41571a:	cwde   
  41571b:	clc    
  41571c:	and    al,0x44
  41571e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41571f:	add    edi,0x23
  415722:	adc    BYTE PTR [ebx],bh
  415724:	push   ss
  415725:	cmp    dl,dl
  415727:	lds    edx,FWORD PTR [eax-0x38f2bfdd]
  41572d:	pop    ds
  41572e:	pop    ebp
  41572f:	scas   eax,DWORD PTR es:[edi]
  415730:	lds    edi,FWORD PTR [ebp+0x1a9d1412]
  415736:	cmp    bh,BYTE PTR [ebx+0x27]
  415739:	test   al,0xe7
  41573b:	sbb    eax,edx
  41573d:	hlt    
  41573e:	mov    WORD PTR [ecx-0x49],gs
  415741:	loopne 0x4157aa
  415743:	and    BYTE PTR [edx-0x3040f93d],ch
  415749:	mov    esi,0xcc682753
  41574e:	mov    ch,0xa8
  415750:	cmp    eax,0x4131c228
  415755:	mov    edx,0xff29fdc1
  41575a:	mov    ebp,0x9fa50b95
  41575f:	mov    ds:0xdfab431f,al
  415764:	fsubr  DWORD PTR [eax+0x26cf8f89]
  41576a:	dec    edi
  41576b:	sbb    BYTE PTR [edx-0x16],bh
  41576e:	mov    ecx,0xb5b1f6c1
  415773:	xor    bl,BYTE PTR [ebx+0x4a39e4b5]
  415779:	adc    eax,0xc6dcfecb
  41577e:	and    BYTE PTR [edx+0x1cb115d],0x47
  415785:	mov    bh,0xcc
  415787:	cmp    ecx,DWORD PTR ss:[ebx+0x0]
  41578b:	sahf   
  41578c:	retf   0x6892
  41578f:	call   0xb1ba35d0
  415794:	dec    ebp
  415795:	add    eax,0xa232834c
  41579a:	in     eax,0xc1
  41579c:	sti    
  41579d:	ret    
  41579e:	and    BYTE PTR [edi+0x23a634fd],0xf9
  4157a5:	xor    edx,esi
  4157a7:	cmovo  ebx,esi
  4157aa:	(bad)  
  4157ab:	or     al,0x25
  4157ad:	mov    al,ds:0x63a98030
  4157b2:	shl    BYTE PTR [ebx],0xb0
  4157b5:	pop    ds
  4157b6:	adc    ebp,DWORD PTR [ebp+0x1a646806]
  4157bc:	jae    0x415837
  4157be:	jbe    0x415760
  4157c0:	sub    ah,dl
  4157c2:	test   BYTE PTR [ebx],ah
  4157c4:	fwait
  4157c5:	cmp    ch,BYTE PTR [ebx]
  4157c7:	rcl    DWORD PTR [esi+0x31d1bebc],1
  4157cd:	inc    BYTE PTR es:[ebx-0x6c]
  4157d1:	data16 cld 
  4157d3:	inc    ebp
  4157d4:	or     ecx,DWORD PTR [eax-0x4d4260df]
  4157da:	push   edx
  4157db:	ficom  DWORD PTR [ecx-0x3621f450]
  4157e1:	pop    edi
  4157e2:	shr    BYTE PTR [edi],0x9e
  4157e5:	shl    BYTE PTR [ebx+0x5f],cl
  4157e8:	xchg   edx,eax
  4157e9:	popf   
  4157ea:	loopne 0x4157c1
  4157ec:	mov    ds:0xb9b893b1,eax
  4157f1:	scas   eax,DWORD PTR es:[edi]
  4157f2:	das    
  4157f3:	adc    al,0x5
  4157f5:	aad    0xf3
  4157f7:	rcr    BYTE PTR [esi-0x35],1
  4157fa:	leave  
  4157fb:	jnp    0x4157a8
  4157fd:	rcl    BYTE PTR [edx+0x60],0xee
  415801:	out    dx,eax
  415802:	mov    bh,0x60
  415804:	ja     0x4157b2
  415806:	add    ebx,edx
  415808:	fstp   QWORD PTR [edx-0x38]
  41580b:	mov    al,ds:0xd5bbc257
  415810:	mov    bl,0xb2
  415812:	cmp    al,0xb6
  415814:	and    DWORD PTR gs:[ecx],edx
  415817:	cmp    ch,BYTE PTR [ecx]
  415819:	shr    BYTE PTR [ebp+0x23f1a6b2],cl
  41581f:	jae    0x415853
  415821:	xor    DWORD PTR [edi],0xffffffe3
  415824:	xchg   edx,eax
  415825:	fs icebp 
  415827:	push   0x75
  415829:	loopne 0x41589f
  41582b:	push   cs
  41582c:	cmc    
  41582d:	call   0x41c6:0x556d30d3
  415834:	sbb    DWORD PTR [ebp+edx*2-0x646adb84],ecx
  41583b:	test   DWORD PTR [edx],ecx
  41583d:	into   
  41583e:	test   DWORD PTR [ecx-0x7125fb49],edx
  415844:	mov    dl,0x76
  415846:	(bad)  [edi+0xf24174d]
  41584c:	jecxz  0x415833
  41584e:	cmp    al,0x27
  415850:	xchg   esp,eax
  415851:	sbb    ecx,ebp
  415853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415854:	sbb    bl,BYTE PTR [esi]
  415856:	push   es
  415857:	call   FWORD PTR [edx-0x34]
  41585a:	popf   
  41585b:	js     0x415820
  41585d:	adc    BYTE PTR [ebx-0x5caa6ccc],dh
  415863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415864:	push   0x1
  415866:	mov    bh,0x69
  415868:	in     al,dx
  415869:	sub    ch,BYTE PTR [esi]
  41586b:	cmp    al,0x5c
  41586d:	call   0xd7289d09
  415872:	ds xchg esi,eax
  415874:	push   esi
  415875:	mov    ebx,0x8c437f01
  41587a:	fcomp  DWORD PTR [edi+0x43fab794]
  415880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415881:	data16 fstp DWORD PTR cs:[edx-0x5425aa5b]
  415889:	xor    DWORD PTR [ebx+edx*2+0x8],eax
  41588d:	pop    es
  41588e:	mul    BYTE PTR [ebp+0x2a]
  415891:	add    al,0x54
  415893:	fidivr WORD PTR [ebp+0x70]
  415896:	jle    0x41590e
  415898:	fwait
  415899:	jb     0x415913
  41589b:	retf   0x34a9
  41589e:	cdq    
  41589f:	shr    BYTE PTR [eax],cl
  4158a1:	enter  0x87b2,0xd6
  4158a5:	psubsw mm5,QWORD PTR [ebx-0x2d37710b]
  4158ac:	push   ebp
  4158ad:	retf   0x2fb1
  4158b0:	cmp    DWORD PTR [ebx+ecx*8],ebx
  4158b3:	dec    ebp
  4158b4:	lds    ecx,FWORD PTR [edx+ebx*1+0x1f062d83]
  4158bb:	mov    esp,0x5ed623c8
  4158c0:	and    al,0x5d
  4158c2:	ins    DWORD PTR es:[edi],dx
  4158c3:	aas    
  4158c4:	in     al,dx
  4158c5:	cwde   
  4158c6:	pop    esp
  4158c7:	mov    ds:0x511f7f12,eax
  4158cc:	mov    cl,0xef
  4158ce:	hlt    
  4158cf:	dec    BYTE PTR [edx-0x13f520fa]
  4158d5:	test   BYTE PTR [edx],0xba
  4158d8:	push   ecx
  4158d9:	xor    eax,0x9720634f
  4158de:	pop    ebx
  4158df:	dec    esp
  4158e0:	mov    BYTE PTR [ebx+0x1f],ah
  4158e3:	push   ss
  4158e4:	jp     0x4158d5
  4158e6:	scas   eax,DWORD PTR es:[edi]
  4158e7:	mul    edx
  4158e9:	sub    esi,ecx
  4158eb:	or     eax,0x68cc8896
  4158f0:	sub    eax,0x1c15c4b5
  4158f5:	mov    eax,0x3d49d9b
  4158fa:	nop
  4158fb:	scas   eax,DWORD PTR es:[edi]
  4158fc:	inc    esp
  4158fd:	call   0x14aacd66
  415902:	clc    
  415903:	adc    BYTE PTR [edx+0x3d],bh
  415906:	xor    eax,0x2756c9c3
  41590b:	mov    ecx,0x80f57012
  415910:	jbe    0x4158b2
  415912:	dec    ecx
  415913:	popf   
  415914:	dec    esp
  415915:	test   DWORD PTR [ebp+0x162cf595],edi
  41591b:	add    ebx,DWORD PTR [esi-0x16818115]
  415921:	inc    esp
  415922:	test   eax,0x51a1b541
  415927:	pusha  
  415928:	popa   
  415929:	and    DWORD PTR [ebp-0x53],eax
  41592c:	pop    ecx
  41592d:	(bad)  
  41592e:	outs   dx,DWORD PTR ds:[esi]
  41592f:	add    eax,0x12d89666
  415934:	pushf  
  415935:	gs js  0x4158f3
  415938:	fnstenv [eax-0x7e7a1bf1]
  41593e:	aaa    
  41593f:	or     BYTE PTR [edi+ebx*8+0x64db28cc],cl
  415946:	js     0x4159a0
  415948:	clc    
  415949:	inc    eax
  41594a:	mov    dh,0xc7
  41594c:	and    ecx,ecx
  41594e:	test   al,0xd2
  415950:	inc    ebx
  415951:	lea    eax,[ebp-0x4]
  415954:	sbb    BYTE PTR [ebx+0x52f27d96],bh
  41595a:	xor    al,0x62
  41595c:	rcr    DWORD PTR [edi+eiz*4],1
  41595f:	js     0x415961
  415961:	clc    
  415962:	jg     0x4159c9
  415964:	mov    bl,0x47
  415966:	loopne 0x415997
  415968:	loop   0x415987
  41596a:	aad    0x8d
  41596c:	es jb  0x4158f8
  41596f:	popf   
  415970:	cld    
  415971:	push   edx
  415972:	xor    al,0x8
  415974:	adc    eax,0xb025307
  415979:	iret   
  41597a:	(bad)  
  41597b:	xor    ecx,DWORD PTR [ebx+0x28fe971b]
  415981:	mov    bl,0x43
  415983:	ja     0x41598f
  415985:	std    
  415986:	xchg   BYTE PTR [ecx-0xf],bl
  415989:	jae    0x4159fe
  41598b:	nop
  41598c:	add    dh,BYTE PTR [ebx+0x6f]
  41598f:	in     al,dx
  415990:	xchg   edi,eax
  415991:	(bad)  [edi]
  415993:	in     eax,dx
  415994:	test   BYTE PTR [esi-0x69d76d74],ah
  41599a:	retf   0x18e
  41599d:	add    ch,dh
  41599f:	cli    
  4159a0:	sbb    ch,BYTE PTR [esi+0x2d0350e0]
  4159a6:	std    
  4159a7:	push   ebp
  4159a8:	imul   edi,DWORD PTR [ebp-0x59376d0f],0xffffff91
  4159af:	cmp    ebx,DWORD PTR [eax]
  4159b1:	xchg   esp,eax
  4159b2:	test   al,0xf3
  4159b4:	and    esp,eax
  4159b6:	xor    edx,0x39
  4159b9:	loopne 0x41599c
  4159bb:	ror    BYTE PTR [ebx-0x2d],0x13
  4159bf:	push   0x7fdfecce
  4159c4:	stos   DWORD PTR es:[edi],eax
  4159c5:	push   edx
  4159c6:	fcomp  QWORD PTR [ecx]
  4159c8:	dec    edi
  4159c9:	or     eax,0x9bf5856
  4159ce:	add    ebp,edi
  4159d0:	and    ebp,ebx
  4159d2:	jle    0x415a4c
  4159d4:	dec    esi
  4159d5:	popa   
  4159d6:	mov    edx,0xb110171d
  4159db:	adc    ebp,DWORD PTR [ecx+0xd]
  4159de:	cmp    al,0xeb
  4159e0:	jmp    0x7ccb:0xe93c7233
  4159e7:	sets   BYTE PTR [edi]
  4159ea:	out    dx,eax
  4159eb:	mov    esp,0xc63a7eb
  4159f0:	call   0x49f4ec5d
  4159f5:	xchg   ebp,eax
  4159f6:	sbb    BYTE PTR [ecx],bh
  4159f8:	pop    esp
  4159f9:	ss mov ah,cl
  4159fc:	sub    BYTE PTR [ecx-0x5b21c6f],0x19
  415a03:	jl     0x4159ce
  415a05:	in     eax,dx
  415a06:	mov    edi,0x27f8ec83
  415a0b:	enter  0xd0d1,0xae
  415a0f:	mov    edi,0x527309c3
  415a14:	sbb    BYTE PTR [esi],ah
  415a16:	adc    eax,0x4b67fe10
  415a1b:	ds mov dl,0x34
  415a1e:	sbb    al,0x2d
  415a20:	jmp    0x8edef467
  415a25:	pop    eax
  415a26:	or     BYTE PTR [eax+eiz*1],ch
  415a29:	pusha  
  415a2a:	ins    BYTE PTR es:[edi],dx
  415a2b:	mov    esi,0x639ac0fd
  415a30:	push   ebx
  415a31:	in     al,dx
  415a32:	xor    DWORD PTR [esi+0x76],ebp
  415a35:	(bad)  
  415a36:	fs sbb dh,ah
  415a39:	(bad)  
  415a3a:	xchg   edx,eax
  415a3b:	add    BYTE PTR gs:[edi+0x60],ah
  415a3f:	xchg   edx,edi
  415a41:	pop    es
  415a42:	xor    eax,0xef2b2c1c
  415a47:	dec    esi
  415a48:	je     0x415a0d
  415a4a:	push   0x69
  415a4c:	in     al,dx
  415a4d:	push   0x3af9c630
  415a52:	cs and eax,0xc43261f
  415a58:	ret    
  415a59:	test   bl,bh
  415a5b:	sub    al,0x6f
  415a5d:	push   ebx
  415a5e:	jnp    0x415a4b
  415a60:	nop
  415a61:	jl     0x415ab9
  415a63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a64:	call   DWORD PTR [ebx-0x3a]
  415a67:	(bad)  [ecx]
  415a69:	mov    al,0xe9
  415a6b:	adc    ah,BYTE PTR es:[edi]
  415a6e:	stc    
  415a6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a70:	or     al,0x37
  415a72:	cmp    al,cl
  415a74:	or     dl,BYTE PTR [esi-0x3d45c1e3]
  415a7a:	fs je  0x415a3c
  415a7d:	clc    
  415a7e:	clc    
  415a7f:	inc    esp
  415a80:	fstp   st(4)
  415a82:	(bad)
  415a85:	mov    ah,0x40
  415a87:	jne    0x415abd
  415a89:	shl    DWORD PTR [ecx],0xfd
  415a8c:	mov    edx,0xaac5ddbf
  415a91:	daa    
  415a92:	xchg   esp,eax
  415a93:	sbb    esi,DWORD PTR [ecx]
  415a95:	add    bh,BYTE PTR [ecx]
  415a97:	push   ds
  415a98:	outs   dx,DWORD PTR ds:[esi]
  415a99:	clc    
  415a9a:	stos   BYTE PTR es:[edi],al
  415a9b:	xor    BYTE PTR [ebx-0x3],0x2
  415a9f:	dec    ecx
  415aa0:	mov    al,0xfb
  415aa2:	stc    
  415aa3:	and    DWORD PTR [esi],eax
  415aa5:	or     al,0x54
  415aa7:	push   cs
  415aa8:	lds    edx,FWORD PTR [ecx+0x63b6411f]
  415aae:	lds    ecx,FWORD PTR [esi]
  415ab0:	imul   ebx,DWORD PTR fs:0xd650e21a,0xffffffc4
  415ab8:	pop    ds
  415ab9:	out    dx,eax
  415aba:	inc    eax
  415abb:	dec    ebp
  415abc:	pop    eax
  415abd:	sbb    BYTE PTR [ebp-0x758d75af],0xca
  415ac4:	enter  0x6e49,0x8e
  415ac8:	mov    edi,0x370c2ecf
  415acd:	sbb    eax,0xa4647d64
  415ad2:	jo     0x415ab7
  415ad4:	ins    DWORD PTR es:[edi],dx
  415ad5:	push   0x9bb0dac
  415ada:	lea    eax,[eax+0x8]
  415add:	fidivr DWORD PTR [esi+esi*8-0x4e]
  415ae1:	jmp    0x415af1
  415ae3:	mov    edi,0xfb758b0f
  415ae8:	pushf  
  415ae9:	jno    0x415b55
  415aeb:	push   edx
  415aec:	xlat   BYTE PTR ds:[ebx]
  415aed:	jnp    0x415ae6
  415aef:	cmp    al,0xf9
  415af1:	xchg   edi,eax
  415af2:	xchg   esi,eax
  415af3:	fwait
  415af4:	push   esp
  415af5:	and    cl,al
  415af7:	stos   DWORD PTR es:[edi],eax
  415af8:	fistp  QWORD PTR [edx-0x5876032b]
  415afe:	fcomp  QWORD PTR [ecx]
  415b00:	popa   
  415b01:	adc    al,0xfc
  415b03:	inc    ebx
  415b04:	ins    DWORD PTR es:[edi],dx
  415b05:	xchg   ecx,eax
  415b06:	cmc    
  415b07:	sub    ebp,eax
  415b09:	pop    edi
  415b0a:	mov    eax,ebx
  415b0c:	rcl    BYTE PTR [edx+0x38],1
  415b0f:	pop    edi
  415b10:	mov    dl,0x64
  415b12:	imul   edx,DWORD PTR [ebp-0x2e],0xb66f01e3
  415b19:	aam    0xb2
  415b1b:	addr16 sub eax,0x4d8d3888
  415b21:	in     eax,0x3a
  415b23:	stos   BYTE PTR es:[edi],al
  415b24:	jecxz  0x415ba2
  415b26:	test   BYTE PTR [edi],dl
  415b28:	ret    0x586a
  415b2b:	shr    DWORD PTR [edi-0xcb10369],1
  415b31:	in     al,dx
  415b32:	xor    al,BYTE PTR [eax-0x4d172ff2]
  415b38:	sbb    eax,0xe465dddb
  415b3d:	out    0xe9,al
  415b3f:	mov    eax,0xae6ea92c
  415b44:	mov    ds:0x7a209d26,al
  415b49:	das    
  415b4a:	sbb    DWORD PTR [ebx],0x5cb9529c
  415b50:	inc    DWORD PTR [ebx]
  415b52:	mov    esi,0xa51028d5
  415b57:	dec    ebx
  415b58:	push   eax
  415b59:	pop    es
  415b5a:	icebp  
  415b5b:	scas   eax,DWORD PTR es:[edi]
  415b5c:	xchg   ecx,eax
  415b5d:	or     al,0x60
  415b5f:	aam    0xe6
  415b61:	and    BYTE PTR [edi+edi*1-0x443e8d85],ah
  415b68:	rcr    dh,1
  415b6a:	bound  esi,QWORD PTR [edx]
  415b6c:	pop    es
  415b6d:	inc    eax
  415b6e:	out    dx,al
  415b6f:	call   0x5f005a10
  415b74:	js     0x415b38
  415b76:	call   0xeee1051f
  415b7b:	add    DWORD PTR [esi-0x5],esi
  415b7e:	fisub  DWORD PTR [ebp+0x38]
  415b81:	sub    al,0x73
  415b83:	xor    BYTE PTR [ecx],ah
  415b85:	inc    edx
  415b86:	sar    BYTE PTR ds:0xb9c0b560,cl
  415b8c:	fsubr  DWORD PTR [edi]
  415b8e:	fcomp  QWORD PTR [esi+0x7b]
  415b91:	call   0xd972f91e
  415b96:	sbb    DWORD PTR [ecx],esi
  415b98:	loope  0x415b53
  415b9a:	(bad)  
  415b9b:	(bad)  
  415b9c:	out    dx,eax
  415b9d:	iret   
  415b9e:	fs out 0x46,al
  415ba1:	into   
  415ba2:	(bad)  
  415ba3:	test   al,0xf6
  415ba5:	sub    eax,0x1a7172d8
  415baa:	iret   
  415bab:	lahf   
  415bac:	test   eax,0x228036e2
  415bb1:	xor    ebp,DWORD PTR [ebx+0x6c]
  415bb4:	repnz or DWORD PTR [ecx-0x587e9e03],eax
  415bbb:	sub    DWORD PTR [ecx],esp
  415bbd:	ret    
  415bbe:	out    dx,al
  415bbf:	scas   al,BYTE PTR es:[edi]
  415bc0:	dec    ebp
  415bc1:	pushf  
  415bc2:	stos   DWORD PTR es:[edi],eax
  415bc3:	gs int 0x40
  415bc6:	mov    bl,0x47
  415bc8:	xor    eax,0x934e9359
  415bcd:	mov    esp,0x675b5a8e
  415bd2:	add    BYTE PTR [eax+0x1a037c72],ah
  415bd8:	out    0xf2,al
  415bda:	cmc    
  415bdb:	pusha  
  415bdc:	sti    
  415bdd:	xchg   ebx,eax
  415bde:	aas    
  415bdf:	dec    ecx
  415be0:	test   al,0xb6
  415be2:	or     ecx,esi
  415be4:	aam    0xac
  415be6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415be7:	jecxz  0x415c3f
  415be9:	les    esp,FWORD PTR [edi+0xc8e1849]
  415bef:	jle    0x415c5a
  415bf1:	xchg   DWORD PTR ds:0x9d98130,ecx
  415bf7:	mov    ?,ebp
  415bf9:	jp     0x415c1d
  415bfb:	xor    al,0xdc
  415bfd:	jns    0x415c14
  415bff:	mov    cl,0xf7
  415c01:	jl     0x415c42
  415c03:	inc    eax
  415c04:	adc    DWORD PTR [edx-0x493f5aad],ebx
  415c0a:	mov    esp,0x4c98f03d
  415c0f:	mov    dh,0xb4
  415c11:	add    BYTE PTR [ecx+esi*2-0xd],bl
  415c15:	and    eax,edx
  415c17:	mov    ds:0xac013e5b,al
  415c1c:	dec    ebp
  415c1d:	inc    edx
  415c1e:	ss div ebp
  415c21:	push   ecx
  415c22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c23:	fisubr WORD PTR [ecx+0x4f01677d]
  415c29:	jp     0x415c2e
  415c2b:	retf   0xbddd
  415c2e:	imul   DWORD PTR [esi-0x7]
  415c31:	aam    0x81
  415c33:	dec    edx
  415c34:	out    0xc2,al
  415c36:	pop    edx
  415c37:	add    eax,0x450f1d87
  415c3c:	ins    DWORD PTR es:[edi],dx
  415c3d:	lock cdq 
  415c3f:	inc    ebp
  415c40:	outs   dx,BYTE PTR fs:[esi]
  415c42:	call   0x85a2c5c
  415c47:	out    0x5b,eax
  415c49:	dec    ecx
  415c4a:	(bad)  
  415c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c4c:	and    BYTE PTR [esi+0x56],0x99
  415c50:	test   BYTE PTR [ebp+edi*4-0x3fcb7f14],0x8e
  415c58:	cwde   
  415c59:	and    eax,0x8b89d22b
  415c5e:	pop    edi
  415c5f:	mov    ds:0x2c429f64,eax
  415c64:	lods   al,BYTE PTR ds:[esi]
  415c65:	shl    esi,cl
  415c67:	or     al,0x7e
  415c69:	push   esi
  415c6a:	(bad)  
  415c6b:	jg     0x415c87
  415c6d:	outs   dx,DWORD PTR ds:[esi]
  415c6e:	cwde   
  415c6f:	sbb    eax,0x8fc131e5
  415c74:	rol    DWORD PTR [ebx],cl
  415c76:	and    al,0x1a
  415c78:	or     al,0x50
  415c7a:	popa   
  415c7b:	pop    ecx
  415c7c:	int3   
  415c7d:	inc    esp
  415c7e:	or     eax,0xf665df4d
  415c83:	push   es
  415c84:	push   edx
  415c85:	lahf   
  415c86:	aad    0x5c
  415c88:	jnp    0x415ce7
  415c8a:	inc    eax
  415c8b:	jno    0x415c19
  415c8d:	les    ecx,FWORD PTR [esi]
  415c8f:	fbstp  TBYTE PTR [esi+0x4867c3da]
  415c95:	cli    
  415c96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c97:	and    al,0xaa
  415c99:	test   DWORD PTR [eax+0x6e535847],ecx
  415c9f:	aam    0xda
  415ca1:	inc    ebp
  415ca2:	mov    ch,0x8d
  415ca4:	jae    0x415d18
  415ca6:	jns    0x415cbc
  415ca8:	scas   eax,DWORD PTR es:[edi]
  415ca9:	addr16 es dec eax
  415cac:	sbb    al,0xab
  415cae:	sub    ebp,edi
  415cb0:	mov    DWORD PTR [ebx+ecx*2],esi
  415cb3:	je     0x415d0b
  415cb5:	mov    BYTE PTR [edi*4+0x348ee4e1],al
  415cbc:	xchg   edx,eax
  415cbd:	and    BYTE PTR [edx],bh
  415cbf:	mov    dh,0xe2
  415cc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cc2:	lds    edx,FWORD PTR [esi+0x6d]
  415cc5:	dec    ecx
  415cc6:	dec    ebx
  415cc7:	fcom   QWORD PTR [ecx-0x614755dd]
  415ccd:	scas   al,BYTE PTR es:[edi]
  415cce:	or     BYTE PTR [ecx-0x6ffa1263],bl
  415cd4:	or     BYTE PTR [ecx],ah
  415cd6:	adc    al,0x1a
  415cd8:	cmp    ebp,DWORD PTR [ecx+0x710adaa1]
  415cde:	cmp    edi,DWORD PTR [ebx]
  415ce0:	mov    edi,0xe31154cd
  415ce5:	stos   DWORD PTR es:[edi],eax
  415ce6:	or     ebp,DWORD PTR [edi+ebp*2-0x4237ac90]
  415ced:	jbe    0x415c8b
  415cef:	rcl    DWORD PTR [ecx+0xe0a0422],0x2a
  415cf6:	imul   edx,DWORD PTR [ebp-0x3f831ece],0x998190b7
  415d00:	add    eax,0x7948dfa
  415d05:	repz cdq 
  415d07:	push   0xc440c8ba
  415d0c:	scas   al,BYTE PTR es:[edi]
  415d0d:	lock jl 0x415c96
  415d10:	daa    
  415d11:	fs inc esp
  415d13:	shl    BYTE PTR [eax+0x8bc0b39],1
  415d19:	ds stos DWORD PTR es:[edi],eax
  415d1b:	sbb    DWORD PTR [eax-0x6e3c7ce4],ebp
  415d21:	xor    al,0x5c
  415d23:	or     DWORD PTR [eax+0x25258864],0xfb6daf1d
  415d2d:	fcmovnu st,st(7)
  415d2f:	std    
  415d30:	lock (bad) 
  415d32:	popf   
  415d33:	mov    ebx,0xddaa355
  415d38:	adc    eax,0xddc76208
  415d3d:	jbe    0x415d64
  415d3f:	pop    esi
  415d40:	leave  
  415d41:	ins    BYTE PTR es:[edi],dx
  415d42:	mov    ah,0xf8
  415d44:	daa    
  415d45:	sub    eax,edi
  415d47:	xchg   DWORD PTR [esi],esp
  415d49:	adc    BYTE PTR [ebp-0x52],dl
  415d4c:	das    
  415d4d:	shl    DWORD PTR [edx-0x6cd9f1dc],1
  415d53:	and    DWORD PTR [esi],edi
  415d55:	adc    edi,ebp
  415d57:	fs mov esi,0xc0820b8d
  415d5d:	enter  0x51f1,0x4a
  415d61:	scas   al,BYTE PTR es:[edi]
  415d62:	inc    edx
  415d63:	mov    bh,0x10
  415d65:	cmp    eax,0xbf5b8815
  415d6a:	pushf  
  415d6b:	push   eax
  415d6c:	mov    bh,0x92
  415d6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d6f:	cli    
  415d70:	add    al,0xd7
  415d72:	xchg   ebx,eax
  415d73:	pop    ss
  415d74:	out    dx,al
  415d75:	xor    DWORD PTR [ebp+0x70],eax
  415d78:	xchg   esp,eax
  415d79:	rcr    DWORD PTR [esi+0x64],0x5e
  415d7d:	xchg   ebp,eax
  415d7e:	fidivr DWORD PTR [edx+0x62]
  415d81:	cmp    cl,BYTE PTR [ebx-0x522f2a61]
  415d87:	loope  0x415d95
  415d89:	push   ebp
  415d8a:	or     ch,BYTE PTR [ecx]
  415d8c:	lds    ecx,FWORD PTR [ecx+esi*4-0x5a12c7ff]
  415d93:	and    dl,ch
  415d95:	in     al,dx
  415d96:	ss jae 0x415e09
  415d99:	into   
  415d9a:	mov    dh,0x1d
  415d9c:	cmp    DWORD PTR [ebx+0x2a],esp
  415d9f:	jge    0x415d4a
  415da1:	into   
  415da2:	dec    esp
  415da3:	lods   al,BYTE PTR ds:[esi]
  415da4:	mov    eax,0xbd11eb06
  415da9:	dec    edx
  415daa:	mov    edi,0x35939949
  415daf:	pusha  
  415db0:	jne    0x415d8a
  415db2:	dec    ecx
  415db3:	jmp    0x415dc9
  415db5:	pop    edx
  415db6:	sub    DWORD PTR gs:[eax+ebx*8],edi
  415dba:	std    
  415dbb:	int3   
  415dbc:	mov    ch,0xe7
  415dbe:	sbb    bh,dh
  415dc0:	adc    ch,al
  415dc2:	ds xor eax,0xbd418c5a
  415dc8:	sub    ecx,ecx
  415dca:	cli    
  415dcb:	mov    ebx,0x7c955e98
  415dd0:	or     dh,dl
  415dd2:	bound  ecx,QWORD PTR [esi]
  415dd4:	sub    ebx,DWORD PTR [ebx]
  415dd6:	push   edx
  415dd7:	adc    eax,0x2048cdfe
  415ddc:	mov    eax,0xed720903
  415de1:	cmp    al,0xef
  415de3:	dec    edi
  415de4:	pop    es
  415de5:	mov    eax,ds:0x72c55df7
  415dea:	jge    0x415e5f
  415dec:	or     ecx,DWORD PTR [ebx-0x68d3e0b5]
  415df2:	outs   dx,BYTE PTR ds:[esi]
  415df3:	aas    
  415df4:	mov    ah,0xd5
  415df6:	add    al,0x8f
  415df8:	cmp    esi,DWORD PTR [ecx+0x502cb6a7]
  415dfe:	add    cl,al
  415e00:	out    dx,al
  415e01:	shl    BYTE PTR [edx+0x2538b183],cl
  415e07:	daa    
  415e08:	adc    DWORD PTR [ebp-0x60],esi
  415e0b:	ret    
  415e0c:	icebp  
  415e0d:	lea    esi,ds:0x245d6e8d
  415e13:	jl     0x415e56
  415e15:	pop    edx
  415e16:	call   0xf7a0:0xf1fe422d
  415e1d:	adc    bl,BYTE PTR [esi+eiz*2-0x24]
  415e21:	test   DWORD PTR [eax],eax
  415e23:	jg     0x415e47
  415e25:	sub    edx,DWORD PTR [esi]
  415e27:	xchg   ebx,eax
  415e28:	add    esp,DWORD PTR [edx+0x5f]
  415e2b:	push   esp
  415e2c:	ret    
  415e2d:	pop    esp
  415e2e:	adc    edx,DWORD PTR [ebx]
  415e30:	loop   0x415e0a
  415e32:	mov    WORD PTR [ecx-0x674054aa],?
  415e38:	aaa    
  415e39:	loopne 0x415e3e
  415e3b:	lds    ebx,FWORD PTR [ecx+0x1f]
  415e3e:	mov    al,ds:0x9d4ee0f
  415e43:	adc    al,0xa9
  415e45:	iret   
  415e46:	adc    ch,BYTE PTR [ebx]
  415e48:	and    eax,0x17416e37
  415e4d:	adc    edx,DWORD PTR [ebx-0x1f]
  415e50:	sbb    BYTE PTR [edi-0x31904338],bl
  415e56:	fcmove st,st(6)
  415e58:	clc    
  415e59:	push   cs
  415e5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e5b:	fldenv [edx]
  415e5d:	ins    BYTE PTR es:[edi],dx
  415e5e:	mov    ebp,0x13143415
  415e63:	push   0x458c2796
  415e68:	scas   al,BYTE PTR es:[edi]
  415e69:	adc    BYTE PTR [eax+eiz*8+0x4c],ah
  415e6d:	mov    dl,0xe3
  415e6f:	dec    edx
  415e70:	pop    edx
  415e71:	jg     0x415ecf
  415e73:	into   
  415e74:	mov    DWORD PTR [esi],edi
  415e76:	inc    edi
  415e77:	cmc    
  415e78:	mov    eax,0xb65efbba
  415e7d:	addr16 cs inc edx
  415e80:	push   ds
  415e81:	js     0x415e67
  415e83:	add    dh,BYTE PTR [ebp-0x57ce0956]
  415e89:	push   0x1d6c105c
  415e8e:	cmp    ecx,DWORD PTR [eax]
  415e90:	in     eax,dx
  415e91:	pop    ss
  415e92:	(bad)  
  415e93:	fadd   DWORD PTR [eax]
  415e95:	mov    edi,0x931a4fda
  415e9a:	jle    0x415ee2
  415e9c:	call   DWORD PTR [esi]
  415e9e:	mov    DWORD PTR [ecx-0x14],ebx
  415ea1:	or     DWORD PTR [ecx-0x2e],ebx
  415ea4:	or     BYTE PTR [edx+0x51],al
  415ea7:	pop    esi
  415ea8:	sub    ah,BYTE PTR [edi-0xff1a6b7]
  415eae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eaf:	jmp    0x415f29
  415eb1:	ds mov ecx,0x653657e1
  415eb7:	mov    al,ds:0x8bc233a6
  415ebc:	add    BYTE PTR [edi],ch
  415ebe:	pop    edi
  415ebf:	shl    DWORD PTR [ecx],0xbc
  415ec2:	add    BYTE PTR [esi-0x42860c75],cl
  415ec8:	ficom  DWORD PTR [edx]
  415eca:	inc    ebx
  415ecb:	mov    edi,0xb8eb0533
  415ed0:	cmp    ebp,ebx
  415ed2:	pop    edx
  415ed3:	icebp  
  415ed4:	jp     0x415f29
  415ed6:	cmp    ebx,DWORD PTR [edx-0x5a72e832]
  415edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415edd:	cmc    
  415ede:	mov    ch,0x91
  415ee0:	in     al,dx
  415ee1:	cs cmc 
  415ee3:	add    eax,0xa9c9b950
  415ee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ee9:	rcr    BYTE PTR [edx+0x6b],1
  415eec:	aad    0x91
  415eee:	mov    ds:0xf2b0e0d5,al
  415ef3:	push   ebx
  415ef4:	mov    bh,0xf7
  415ef6:	mov    dl,bh
  415ef8:	adc    edi,ebx
  415efa:	in     al,dx
  415efb:	and    eax,0x3c288582
  415f00:	mov    eax,ds:0x514aebe8
  415f05:	and    al,0x21
  415f07:	js     0x415f35
  415f09:	push   ebx
  415f0a:	pop    edi
  415f0b:	loopne 0x415ee8
  415f0d:	mov    eax,ds:0x28da8720
  415f12:	xor    al,0x5
  415f14:	test   eax,0x3cacd4
  415f19:	adc    eax,0xafda2e9a
  415f1e:	push   es
  415f1f:	test   BYTE PTR [edi+0x47],ch
  415f22:	stc    
  415f23:	in     eax,0x88
  415f25:	les    edx,FWORD PTR [esi]
  415f27:	jmp    0x415ef7
  415f29:	sub    dh,bl
  415f2b:	stos   BYTE PTR es:[edi],al
  415f2c:	jno    0x415f7d
  415f2e:	popf   
  415f2f:	sahf   
  415f30:	mov    eax,ds:0xfe8ad32a
  415f35:	dec    esp
  415f36:	jp     0x415f24
  415f38:	add    eax,0x2ae46c6b
  415f3d:	pop    es
  415f3e:	fisttp WORD PTR [ecx+0x39]
  415f41:	(bad)  
  415f42:	out    0x19,eax
  415f44:	mov    ebx,0xaaffb3cb
  415f49:	les    esi,FWORD PTR [ebx-0x2f]
  415f4c:	xor    BYTE PTR [ebx],al
  415f4e:	je     0x415f8e
  415f50:	cmp    BYTE PTR [ebx+0x79c5e1f4],bl
  415f56:	neg    BYTE PTR [esi+edi*1]
  415f59:	scas   eax,DWORD PTR es:[edi]
  415f5a:	cmp    eax,0x38ae85b4
  415f5f:	and    ebx,edi
  415f61:	cmp    al,0xf2
  415f63:	jnp    0x415f4b
  415f65:	test   eax,0x2d5f55bf
  415f6a:	sub    DWORD PTR ds:0xd90edba9,edx
  415f70:	call   0xfec873e2
  415f75:	mov    cl,0x46
  415f77:	dec    esi
  415f78:	gs cli 
  415f7a:	xor    eax,0xc5e04dad
  415f7f:	push   ss
  415f80:	retf   
  415f81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f82:	nop
  415f83:	sub    BYTE PTR [edx+0x469827e3],bl
  415f89:	scas   eax,DWORD PTR es:[edi]
  415f8a:	repz faddp st(2),st
  415f8d:	shr    bh,0x5a
  415f90:	loope  0x415f4f
  415f92:	leave  
  415f93:	jae    0x415f95
  415f95:	sub    DWORD PTR [eax],ebp
  415f97:	xchg   DWORD PTR [esi-0x66e42c52],ebp
  415f9d:	cmc    
  415f9e:	scas   al,BYTE PTR es:[edi]
  415f9f:	sahf   
  415fa0:	inc    eax
  415fa1:	ins    DWORD PTR es:[edi],dx
  415fa2:	les    eax,FWORD PTR [edi+0x3942ca40]
  415fa8:	mov    edi,0xbb932e27
  415fad:	dec    esi
  415fae:	add    eax,0xe142d582
  415fb3:	sbb    BYTE PTR [ebp-0x6f],al
  415fb6:	popa   
  415fb7:	das    
  415fb8:	aaa    
  415fb9:	les    ax,DWORD PTR [ecx+ebp*8+0x16]
  415fbe:	mov    ch,0x8e
  415fc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fc1:	aam    0x64
  415fc3:	fwait
  415fc4:	in     al,0xbb
  415fc6:	dec    edi
  415fc7:	or     eax,0xf3432bbe
  415fcc:	test   BYTE PTR [esi+0x17],bl
  415fcf:	leave  
  415fd0:	cmp    eax,0x413265f2
  415fd5:	sub    bh,BYTE PTR [esi+0x42]
  415fd8:	pop    eax
  415fd9:	aaa    
  415fda:	imul   ebx,edi,0x99d63dbe
  415fe0:	lds    edi,FWORD PTR [ecx]
  415fe2:	dec    ebx
  415fe3:	call   0xbba4:0x3d8cdf9
  415fea:	dec    eax
  415feb:	fistp  WORD PTR [edi-0x7b31b31]
  415ff1:	loop   0x416002
  415ff3:	pop    ds
  415ff4:	push   ds
  415ff5:	cld    
  415ff6:	mov    WORD PTR [ecx-0x51],?
  415ff9:	or     DWORD PTR [esi],esi
  415ffb:	loop   0x415fff
  415ffd:	xchg   edx,eax
  415ffe:	cld    
  415fff:	pop    ecx
  416000:	sbb    DWORD PTR [ebx],esi
  416002:	pop    ebx
  416003:	add    DWORD PTR [edi-0x44cb56e],esp
  416009:	in     al,dx
  41600a:	add    BYTE PTR [esi+0x5cd9a5f0],ah
  416010:	mov    ch,0xe5
  416012:	adc    BYTE PTR [ecx-0x499e588f],bh
  416018:	test   al,0xfc
  41601a:	or     ecx,esi
  41601c:	mov    al,0x9d
  41601e:	xor    al,0xe5
  416020:	fs ins BYTE PTR es:[edi],dx
  416022:	jbe    0x416075
  416024:	out    0x55,eax
  416026:	shl    BYTE PTR [edi-0x45fb0a74],1
  41602c:	inc    ebx
  41602d:	pusha  
  41602e:	scas   al,BYTE PTR es:[edi]
  41602f:	push   0x42
  416031:	mov    DWORD PTR cs:[edx+eiz*8-0x7],edx
  416036:	or     ch,BYTE PTR ds:0x4f493f01
  41603c:	pop    edx
  41603d:	enter  0xed3f,0xf7
  416041:	push   esi
  416042:	push   ebx
  416043:	pusha  
  416044:	adc    esi,esi
  416046:	mov    ds:0xd871ea57,al
  41604b:	push   edi
  41604c:	jne    0x416022
  41604e:	aam    0x4e
  416050:	imul   ecx,DWORD PTR [ebp+edi*4-0x4a],0xf75ff4c3
  416058:	(bad)  
  416059:	aam    0x15
  41605b:	mov    dh,0x3e
  41605d:	jecxz  0x4160a3
  41605f:	cmp    al,0xde
  416061:	adc    al,al
  416063:	cli    
  416064:	mov    ebp,0xd7210e3e
  416069:	test   DWORD PTR [edx-0x2b],0xd3eedda
  416070:	pop    ecx
  416071:	jae    0x416061
  416073:	mov    esi,0x120b1dcb
  416078:	mov    dl,0x8d
  41607a:	loopne 0x41604f
  41607c:	push   ds
  41607d:	add    BYTE PTR [ecx],cl
  41607f:	jno    0x4160a2
  416081:	jmp    0x4160da
  416083:	stos   DWORD PTR es:[edi],eax
  416084:	push   0xd19c3ebf
  416089:	pop    ebx
  41608a:	mov    dh,0xfc
  41608c:	mov    ebp,0xb85dfc00
  416091:	fsub   st,st(7)
  416093:	scas   al,BYTE PTR es:[edi]
  416094:	and    edx,DWORD PTR [eax]
  416096:	(bad)  
  416097:	pop    esp
  416098:	mov    ch,0xbe
  41609a:	test   eax,0x45f2b647
  41609f:	in     eax,0x1c
  4160a1:	sbb    BYTE PTR [edx+0x37c5e5f],dl
  4160a7:	jno    0x41611f
  4160a9:	test   al,0x69
  4160ab:	xchg   esi,eax
  4160ac:	fwait
  4160ad:	or     al,0x2c
  4160af:	push   esi
  4160b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160b1:	adc    dh,BYTE PTR [esi]
  4160b3:	xchg   ecx,ebx
  4160b5:	xchg   esp,eax
  4160b6:	cmp    al,0xba
  4160b8:	or     ebp,DWORD PTR [ebx+0x26]
  4160bb:	mov    edi,0xfb913ff0
  4160c0:	sub    al,0x84
  4160c2:	data16 xchg BYTE PTR [ebx-0x75b8f96],ah
  4160c9:	cmp    bl,BYTE PTR [esi+0x68]
  4160cc:	into   
  4160cd:	popa   
  4160ce:	cmp    eax,0xeea4c3bd
  4160d3:	xor    dl,BYTE PTR [eax-0x78]
  4160d6:	add    ch,dl
  4160d8:	test   BYTE PTR [ecx-0x39679d52],dl
  4160de:	pop    ecx
  4160df:	hlt    
  4160e0:	push   eax
  4160e1:	cmp    dh,0xa4
  4160e4:	loop   0x4160f4
  4160e6:	and    eax,0x28bd0482
  4160eb:	inc    esi
  4160ec:	(bad)  
  4160ed:	pop    ebx
  4160ee:	bound  ecx,QWORD PTR [edx-0x2d8f2c91]
  4160f4:	cmc    
  4160f5:	dec    edx
  4160f6:	lahf   
  4160f7:	pop    ecx
  4160f8:	das    
  4160f9:	dec    ebx
  4160fa:	inc    esi
  4160fb:	jbe    0x4160c8
  4160fd:	mov    dl,0xf4
  4160ff:	or     DWORD PTR [eax+eiz*2+0x8034377],edi
  416106:	or     DWORD PTR [ebx-0x3745edde],esi
  41610c:	stc    
  41610d:	mov    ds:0x52ab9473,eax
  416112:	xlat   BYTE PTR ds:[ebx]
  416113:	test   cl,0x68
  416116:	jge    0x41616f
  416118:	xchg   DWORD PTR [ebp-0x7977c152],esi
  41611e:	pop    ecx
  41611f:	retf   
  416120:	add    BYTE PTR [edx+0x43c63ac6],ch
  416126:	(bad)  
  416128:	mov    eax,ds:0xd9761f73
  41612d:	shl    DWORD PTR [eax+ecx*8+0x2f],0xd3
  416132:	scas   eax,DWORD PTR es:[edi]
  416133:	imul   edi,DWORD PTR [eax+0x24],0x50
  416137:	data16 test al,0xde
  41613a:	push   ecx
  41613b:	pop    ds
  41613c:	jno    0x41617f
  41613e:	mov    al,0x7b
  416140:	out    0x21,al
  416142:	loope  0x41617f
  416144:	jns    0x416147
  416146:	add    bh,BYTE PTR [edx]
  416148:	mov    ch,0xde
  41614a:	adc    eax,esi
  41614c:	mov    ds:0xb06d2c48,eax
  416151:	push   ebp
  416152:	imul   eax,DWORD PTR [edx-0x7ed1b460],0xfffffffc
  416159:	daa    
  41615a:	sub    ah,bl
  41615c:	je     0x41618b
  41615e:	cmp    DWORD PTR ds:0xdf88a25d,ecx
  416164:	or     ecx,eax
  416166:	ds out 0x67,al
  416169:	jl     0x416178
  41616b:	lods   eax,DWORD PTR ds:[esi]
  41616c:	nop
  41616d:	ins    BYTE PTR es:[edi],dx
  41616e:	and    DWORD PTR [eax+0x2492b824],0x7a
  416175:	or     ebx,DWORD PTR [eax-0x6f35fd13]
  41617b:	dec    esp
  41617c:	fimul  DWORD PTR [ebp+0x1f]
  41617f:	mov    ds:0x488397c8,eax
  416184:	jmp    0x416184
  416186:	pop    ss
  416187:	(bad)  
  416188:	jnp    0x416178
  41618a:	inc    ebx
  41618b:	mov    cl,0xd7
  41618d:	repnz daa 
  41618f:	xchg   esi,eax
  416190:	or     eax,0xca4d89b1
  416195:	(bad)  
  416196:	leave  
  416197:	(bad)  
  416198:	cmp    BYTE PTR [edx-0x68477537],dh
  41619e:	dec    esp
  41619f:	shl    al,cl
  4161a1:	aas    
  4161a2:	jle    0x41613e
  4161a4:	jbe    0x416171
  4161a6:	xlat   BYTE PTR ds:[ebx]
  4161a7:	mov    fs,esi
  4161a9:	xor    eax,0xfdd5d23e
  4161ae:	inc    esi
  4161af:	aas    
  4161b0:	loopne 0x416223
  4161b2:	stc    
  4161b3:	jae    0x41621f
  4161b5:	in     al,0xcd
  4161b7:	or     ebp,DWORD PTR [ebx-0x777098aa]
  4161bd:	adc    ebx,ecx
  4161bf:	push   edx
  4161c0:	into   
  4161c1:	dec    ebp
  4161c2:	push   es
  4161c3:	inc    esi
  4161c4:	xchg   edx,eax
  4161c5:	outs   dx,BYTE PTR ds:[esi]
  4161c6:	pop    es
  4161c7:	mov    eax,ds:0xa85d7a0f
  4161cc:	in     al,dx
  4161cd:	(bad)  
  4161ce:	jecxz  0x41622e
  4161d0:	cmp    DWORD PTR [eax+edi*4],esi
  4161d3:	fst    QWORD PTR [eax]
  4161d5:	aad    0x3d
  4161d7:	mov    edx,eax
  4161d9:	or     eax,0x305fa61
  4161de:	sbb    eax,0x817f34fd
  4161e3:	popf   
  4161e4:	or     DWORD PTR [edx+0x6a35d8d4],ebx
  4161ea:	aam    0x24
  4161ec:	xchg   DWORD PTR ds:0xd4642c86,eax
  4161f2:	sbb    dl,ah
  4161f4:	xchg   BYTE PTR [ecx+edx*4+0x39b80702],cl
  4161fb:	jg     0x4161f5
  4161fd:	ja     0x41623a
  4161ff:	cdq    
  416200:	adc    al,0x93
  416202:	or     esi,0x5d1db2fa
  416208:	mov    esi,0x8c0b6abb
  41620d:	jl     0x416195
  41620f:	jg     0x4161c2
  416211:	or     dl,bl
  416213:	jmp    0x4b6c:0x2d05f897
  41621a:	pop    edx
  41621b:	fimul  WORD PTR [edx+0xdc6174d]
  416221:	sub    DWORD PTR [ebp+0x49],esi
  416224:	push   ecx
  416225:	and    edi,eax
  416227:	in     al,0xbb
  416229:	imul   ebp,DWORD PTR [ecx],0xfffffff5
  41622c:	repz test al,0xb9
  41622f:	ja     0x416297
  416231:	dec    eax
  416232:	shl    BYTE PTR [edx-0x56],1
  416235:	dec    ebp
  416236:	lods   al,BYTE PTR ds:[esi]
  416237:	cmp    al,0xc3
  416239:	push   ebp
  41623a:	imul   ebp,DWORD PTR [ebx+0x7bbfc69b],0x1039ba9b
  416244:	pop    edx
  416245:	in     al,dx
  416246:	fimul  WORD PTR [eax]
  416248:	pop    esi
  416249:	jecxz  0x416289
  41624b:	cs mov edx,0xcc72ad34
  416251:	ds inc edi
  416253:	mov    WORD PTR [eax],ss
  416255:	fisttp WORD PTR [ebp+0x5e]
  416258:	out    dx,eax
  416259:	stos   BYTE PTR es:[edi],al
  41625a:	jnp    0x416285
  41625c:	cs dec ebx
  41625e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41625f:	rcl    BYTE PTR [ebp+0xf66bf1d],cl
  416265:	out    0x3,al
  416267:	loope  0x4161f1
  416269:	in     eax,0x97
  41626b:	and    BYTE PTR [ecx],bh
  41626d:	loope  0x416275
  41626f:	aad    0x2b
  416271:	jbe    0x416225
  416273:	sub    ecx,eax
  416275:	adc    ebx,edi
  416277:	aam    0xf6
  416279:	(bad)  
  41627a:	js     0x41621c
  41627c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41627d:	and    DWORD PTR [edx+0x75369f4],esp
  416283:	fsub   st,st(1)
  416285:	sub    eax,0x568891c9
  41628a:	sti    
  41628b:	inc    ebx
  41628c:	cmc    
  41628d:	scas   eax,DWORD PTR es:[edi]
  41628e:	test   al,0x7
  416290:	cmc    
  416291:	sub    eax,0x52079ed7
  416296:	or     eax,0xd0ce117
  41629b:	and    al,0x24
  41629d:	adc    DWORD PTR [edx-0x3c],edx
  4162a0:	jmp    0x416312
  4162a2:	jle    0x4162a7
  4162a4:	jmp    0x14735f72
  4162a9:	cdq    
  4162aa:	inc    eax
  4162ab:	cld    
  4162ac:	fcom   QWORD PTR ds:0x8dcc9fc1
  4162b2:	mov    eax,ds:0xd5357c91
  4162b7:	cwde   
  4162b8:	(bad)  
  4162b9:	(bad)  
  4162ba:	outs   dx,BYTE PTR ds:[esi]
  4162bb:	xor    eax,0x27a561e8
  4162c0:	call   0xd7a2:0x6ac1f015
  4162c7:	xchg   ebx,eax
  4162c8:	shl    bh,0xc8
  4162cb:	call   0x7fc0:0x3236da87
  4162d2:	xchg   ebx,eax
  4162d3:	and    eax,0xd053a0b6
  4162d8:	(bad)  
  4162d9:	imul   ebx,DWORD PTR [ebp-0x10],0x6c
  4162dd:	pop    edi
  4162de:	jne    0x416320
  4162e0:	mov    ecx,0xae177528
  4162e5:	cwde   
  4162e6:	pop    ecx
  4162e7:	int3   
  4162e8:	jecxz  0x41634e
  4162ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162eb:	pushf  
  4162ec:	xchg   ecx,eax
  4162ed:	ret    0xcfff
  4162f0:	movzx  esp,WORD PTR [ecx]
  4162f3:	push   ebx
  4162f4:	cmp    eax,0x9baf91c7
  4162f9:	int    0x1d
  4162fb:	test   DWORD PTR cs:[edx],esi
  4162fe:	faddp  st(0),st
  416300:	jg     0x4162f1
  416302:	retf   0x9681
  416305:	mov    bh,0xf0
  416307:	popf   
  416308:	mov    edx,0xca14e64a
  41630d:	inc    edx
  41630e:	cmp    DWORD PTR [esp+ebp*2-0x1dfb7592],edi
  416315:	sub    BYTE PTR [ecx-0x358911f1],ch
  41631b:	jge    0x4162a6
  41631d:	xor    BYTE PTR [ecx+edx*2],0x8b
  416321:	lods   al,BYTE PTR ds:[esi]
  416322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416323:	mov    bh,0x8
  416325:	stos   DWORD PTR es:[edi],eax
  416326:	jns    0x4162c3
  416328:	or     edi,ecx
  41632a:	push   ss
  41632b:	jecxz  0x4162fe
  41632d:	lahf   
  41632e:	and    al,0x45
  416330:	xchg   edx,eax
  416331:	add    BYTE PTR [edi+0x7f697f22],bl
  416337:	aad    0xd2
  416339:	jo     0x4162e6
  41633b:	sar    BYTE PTR [esp+ebp*4],0xbe
  41633f:	mov    cl,0x7f
  416341:	inc    ebp
  416342:	sbb    esp,DWORD PTR [esp+ecx*2-0x7d5e1d64]
  416349:	jle    0x41633c
  41634b:	loop   0x416338
  41634d:	or     al,0x93
  41634f:	dec    ebx
  416350:	jmp    0xd0007c31
  416355:	sub    bh,BYTE PTR [ebp-0x7c]
  416358:	retf   0xf581
  41635b:	xor    BYTE PTR [ecx+0x7ebd5e11],dl
  416361:	push   es
  416362:	es mov edx,0xc3ce13fa
  416368:	xchg   ebp,eax
  416369:	xchg   esp,eax
  41636a:	shr    BYTE PTR [esi],0xa5
  41636d:	test   al,0x43
  41636f:	mov    edi,0xa030553e
  416374:	in     al,0x6
  416376:	add    edx,DWORD PTR ds:0x81d90084
  41637c:	lea    esp,[esp+eax*1-0x6c]
  416380:	in     eax,0x91
  416382:	xchg   edx,eax
  416383:	not    DWORD PTR [ebp+0x32b20b6b]
  416389:	lds    ebx,FWORD PTR [edx+0x41]
  41638c:	imul   edx,DWORD PTR [ebx+0x50],0x9bbb6b2b
  416393:	pop    ebp
  416394:	lods   al,BYTE PTR ds:[esi]
  416395:	in     al,0xce
  416397:	les    esp,FWORD PTR [edx-0x1e7479a0]
  41639d:	repnz ficomp WORD PTR [ebp-0x6f]
  4163a1:	sub    DWORD PTR [ebp+ebx*2+0x4b],eax
  4163a5:	test   BYTE PTR [edx],0xa7
  4163a8:	xor    BYTE PTR [esi-0x1a47431],dh
  4163ae:	call   0x3aef39bd
  4163b3:	push   esi
  4163b4:	inc    ecx
  4163b5:	push   eax
  4163b6:	imul   edx,esi,0xffffffb4
  4163b9:	shl    ecx,1
  4163bb:	push   ecx
  4163bc:	iret   
  4163bd:	mov    al,ds:0x38b5c6ee
  4163c2:	sar    DWORD PTR es:[eax+0x69361234],0x9
  4163ca:	xor    al,0x6a
  4163cc:	les    esi,FWORD PTR [edi]
  4163ce:	lock ret 0xb38d
  4163d2:	test   al,0xb2
  4163d4:	loopne 0x4163c1
  4163d6:	inc    edi
  4163d7:	add    WORD PTR [ebx-0x44],dx
  4163db:	inc    edx
  4163dc:	popa   
  4163dd:	mov    dl,0xec
  4163df:	ja     0x41643e
  4163e1:	sub    bl,ah
  4163e3:	pop    edx
  4163e4:	jl     0x4163fa
  4163e6:	inc    edx
  4163e7:	data16 mov bl,0xde
  4163ea:	test   BYTE PTR [edi+0x588c7c26],cl
  4163f0:	jmp    0x4163a1
  4163f2:	xchg   ebp,eax
  4163f3:	mov    esi,0x7504558f
  4163f8:	xchg   DWORD PTR [ebp+0x2fd466ad],ebp
  4163fe:	xchg   BYTE PTR [esp+esi*2+0x29],dh
  416402:	lea    esp,[ebx]
  416404:	fistp  DWORD PTR [ebp+0x43ba9a6]
  41640a:	out    0x3a,al
  41640c:	mov    edi,0x9bf6620e
  416411:	jmp    0xe198:0x816b7beb
  416418:	mov    eax,ds:0x4724805d
  41641d:	fisttp WORD PTR [ecx-0x733dd32a]
  416423:	pusha  
  416424:	sbb    al,0x82
  416426:	dec    ebx
  416427:	das    
  416428:	jmp    0x6f348a5a
  41642d:	jl     0x416477
  41642f:	std    
  416430:	add    al,0x1
  416432:	adc    esp,DWORD PTR [bp+si+0x2f]
  416436:	scas   eax,DWORD PTR es:[edi]
  416437:	push   ecx
  416438:	pop    edx
  416439:	sub    eax,0xa288fd87
  41643e:	jne    0x416493
  416440:	xchg   edi,eax
  416441:	mov    ch,0xb3
  416443:	jae    0x416485
  416445:	cmp    DWORD PTR ds:0xba238f14,eax
  41644b:	sub    eax,0x530f6516
  416450:	xor    esi,DWORD PTR [esp+eax*8]
  416453:	sub    al,0xa8
  416455:	mov    ch,0xd7
  416457:	inc    ebx
  416458:	fsub   DWORD PTR [ecx]
  41645a:	xchg   edi,eax
  41645b:	stc    
  41645c:	cmp    bh,bl
  41645e:	aad    0xe2
  416460:	mov    ebx,0x5b9b1c12
  416465:	psrlq  mm6,QWORD PTR [ebx-0x79]
  416469:	push   ebp
  41646a:	xchg   ecx,eax
  41646b:	cwde   
  41646c:	xchg   edx,eax
  41646d:	inc    ebx
  41646e:	std    
  41646f:	sub    BYTE PTR [ebx],0x58
  416472:	mov    edx,0x4e88c0d5
  416477:	loope  0x4164ad
  416479:	adc    dl,ah
  41647b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41647c:	lock pop ebx
  41647e:	das    
  41647f:	das    
  416480:	repnz dec ebx
  416482:	imul   eax,DWORD PTR [esi+0x6e678a5f],0xffffffc5
  416489:	sub    BYTE PTR [edx],bh
  41648b:	adc    al,0x30
  41648d:	lods   al,BYTE PTR ds:[esi]
  41648e:	and    al,0xfc
  416490:	fisubr DWORD PTR [ecx]
  416492:	mov    ds,WORD PTR [ebp+0x12]
  416495:	ja     0x41643b
  416497:	out    0x24,eax
  416499:	jae    0x41650f
  41649b:	aas    
  41649c:	retf   
  41649d:	out    0x6e,eax
  41649f:	jge    0x416480
  4164a1:	dec    eax
  4164a2:	inc    edi
  4164a3:	in     eax,0x84
  4164a5:	rcr    BYTE PTR [eax+0x8],1
  4164a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164a9:	aam    0xfc
  4164ab:	and    eax,0xdbb6a023
  4164b0:	mov    dl,0xf7
  4164b2:	add    al,0x0
  4164b4:	ins    BYTE PTR es:[edi],dx
  4164b5:	cmp    DWORD PTR [edi-0x7bee1cbb],edi
  4164bb:	dec    esp
  4164bc:	dec    edi
  4164bd:	pop    ss
  4164be:	pop    esp
  4164bf:	enter  0x891e,0x87
  4164c3:	push   ebx
  4164c4:	push   ss
  4164c5:	jae    0x4164e8
  4164c7:	lock lods eax,DWORD PTR ds:[esi]
  4164c9:	ret    
  4164ca:	push   0xc7fc6650
  4164cf:	in     al,0x8a
  4164d1:	adc    DWORD PTR [edx-0x6e380ca6],0x45
  4164d8:	inc    esi
  4164d9:	inc    ebp
  4164da:	inc    esp
  4164db:	aas    
  4164dc:	test   eax,0x8ce9efb4
  4164e1:	call   0xe0da:0x9c7710e9
  4164e8:	inc    esp
  4164e9:	inc    esp
  4164ea:	ins    DWORD PTR es:[edi],dx
  4164eb:	jecxz  0x41651a
  4164ed:	sbb    DWORD PTR [ebx-0x39],ecx
  4164f0:	sbb    esi,DWORD PTR [ebx-0x647bc71c]
  4164f6:	ror    BYTE PTR [esi+0x25f2842e],cl
  4164fc:	out    0x55,al
  4164fe:	test   DWORD PTR [ebp-0x97f2497],ebp
  416504:	adc    dh,BYTE PTR [ebp+eiz*4+0x4b]
  416508:	js     0x416560
  41650a:	xor    ecx,eax
  41650c:	add    ebp,eax
  41650e:	jl     0x4164f2
  416510:	or     al,0xd3
  416512:	mov    ah,0x99
  416514:	mov    ds:0x7a712c73,al
  416519:	lods   al,BYTE PTR ds:[esi]
  41651a:	loopne 0x416562
  41651c:	ds jne 0x4164cc
  41651f:	mov    eax,DWORD PTR ds:0x82246e27
  416525:	in     eax,0x1d
  416527:	or     BYTE PTR [esi-0x2e83be19],0xf7
  41652e:	sub    dh,dl
  416530:	into   
  416531:	lods   eax,DWORD PTR ds:[esi]
  416532:	lds    esi,FWORD PTR [ecx]
  416534:	jbe    0x416528
  416536:	push   0x399cae9f
  41653b:	ins    DWORD PTR es:[edi],dx
  41653c:	push   ss
  41653d:	inc    eax
  41653e:	inc    ebx
  41653f:	dec    edi
  416540:	add    al,0x2a
  416542:	clc    
  416543:	loope  0x4165b3
  416545:	iret   
  416546:	rol    DWORD PTR [ecx],1
  416548:	push   ebp
  416549:	pop    ebp
  41654a:	(bad)  
  41654b:	fsub   DWORD PTR [ebx+0x63]
  41654e:	pop    eax
  41654f:	bound  eax,QWORD PTR [eax+0x2]
  416552:	mov    cl,0x8f
  416554:	sti    
  416555:	jg     0x4165ce
  416557:	jbe    0x41656c
  416559:	jae    0x41659c
  41655b:	push   esi
  41655c:	pushf  
  41655d:	ret    0x2c55
  416560:	jo     0x4165d7
  416562:	mov    eax,0x5e098a52
  416567:	sbb    BYTE PTR [edi-0x8475fcc],bl
  41656d:	out    dx,al
  41656e:	es leave 
  416570:	mov    dh,0x1f
  416572:	pop    ebx
  416573:	cmp    ebx,0xfffffffa
  416576:	push   ds
  416577:	sbb    eax,0x7d936980
  41657c:	inc    edi
  41657d:	test   eax,0x5fe0c55b
  416582:	dec    edx
  416583:	and    DWORD PTR [ebx],ecx
  416585:	dec    ebx
  416586:	jmp    0xdd1845ff
  41658b:	inc    esi
  41658c:	imul   esp,edi,0xffffffb5
  41658f:	ins    DWORD PTR es:[edi],dx
  416590:	in     al,dx
  416591:	lds    edx,FWORD PTR [edx]
  416593:	mov    BYTE PTR [ebx-0x20],bl
  416596:	pop    eax
  416597:	xor    DWORD PTR [ebx-0x5e674492],ebp
  41659d:	xor    DWORD PTR [eax],0x3d
  4165a0:	fdiv   st,st(2)
  4165a2:	out    dx,eax
  4165a3:	jmp    0x41655c
  4165a5:	mov    ebp,0xe5bfe1f1
  4165aa:	xor    DWORD PTR [esp+edx*2],ebx
  4165ad:	stc    
  4165ae:	je     0x41659e
  4165b0:	push   0xf4cd1f3f
  4165b5:	gs mov esi,0x6771cbb4
  4165bb:	mov    esi,0x81611432
  4165c0:	jg     0x416629
  4165c2:	mov    esi,0xd55d8c24
  4165c7:	push   cs
  4165c8:	jmp    0xebcd:0x51326b78
  4165cf:	add    eax,0x97f83949
  4165d4:	or     bh,BYTE PTR [eax]
  4165d6:	pop    edi
  4165d7:	mov    bl,0x5f
  4165d9:	imul   edi,DWORD PTR [edi+eax*1-0x400c7080],0x9e142211
  4165e4:	imul   esp,DWORD PTR [edx],0x286a92f9
  4165ea:	push   eax
  4165eb:	fild   QWORD PTR [edi]
  4165ed:	cwde   
  4165ee:	loope  0x4165ed
  4165f0:	push   0xffffffba
  4165f2:	clc    
  4165f3:	scas   al,BYTE PTR es:[edi]
  4165f4:	sbb    eax,0x550fb128
  4165f9:	dec    esi
  4165fa:	fisttp DWORD PTR [edx-0x1269b84]
  416600:	ret    
  416601:	pusha  
  416602:	into   
  416603:	je     0x4165fd
  416605:	arpl   WORD PTR [ebx-0x38ce2891],si
  41660b:	aas    
  41660c:	pop    edi
  41660d:	enter  0x503f,0xbb
  416611:	cmp    eax,esi
  416613:	cmp    al,0xdd
  416615:	sahf   
  416616:	arpl   sp,di
  416618:	imul   edi
  41661a:	in     eax,0xbf
  41661c:	imul   edx,DWORD PTR ds:0x1b4a2b7c,0xfffffff6
  416623:	xlat   BYTE PTR ds:[ebx]
  416624:	lods   eax,DWORD PTR ds:[esi]
  416625:	clc    
  416626:	push   es
  416627:	jnp    0x416697
  416629:	aad    0x2
  41662b:	test   DWORD PTR [esi-0x12cd458],ebx
  416631:	pop    es
  416632:	imul   DWORD PTR [edx+0x563a3bff]
  416638:	jp     0x41665a
  41663a:	add    ecx,DWORD PTR [ecx-0x46d0d2ac]
  416640:	in     al,dx
  416641:	jmp    0x9f15bd0c
  416646:	aad    0xc7
  416648:	push   eax
  416649:	(bad)  
  41664a:	jns    0x416672
  41664c:	shr    DWORD PTR [eax],cl
  41664e:	aaa    
  41664f:	mov    dl,0xef
  416651:	stc    
  416652:	repz or edi,eax
  416655:	mov    ch,0x80
  416657:	std    
  416658:	push   edi
  416659:	sahf   
  41665a:	and    al,0x36
  41665c:	push   edi
  41665d:	mov    bh,0xe4
  41665f:	fist   DWORD PTR [edi-0x5d]
  416662:	leave  
  416663:	mov    dh,0x6d
  416665:	loopne 0x4165f3
  416667:	xor    al,0xd6
  416669:	jp     0x416672
  41666b:	dec    ebp
  41666c:	aad    0xa1
  41666e:	xchg   esi,eax
  41666f:	mov    ecx,0x1453d53f
  416674:	stos   BYTE PTR es:[edi],al
  416675:	cmp    esi,DWORD PTR [ecx+ebx*8]
  416678:	ja     0x4166a0
  41667a:	sbb    al,0xd6
  41667c:	add    BYTE PTR [ecx],0x84
  41667f:	int3   
  416680:	fiadd  WORD PTR [esi]
  416682:	sbb    DWORD PTR ds:0x17a92184,eax
  416688:	out    0x30,eax
  41668a:	or     DWORD PTR [edi+0x44d5862d],esp
  416690:	cdq    
  416691:	pushf  
  416692:	cmp    DWORD PTR [ecx-0x4],esp
  416695:	xchg   esp,eax
  416696:	les    ecx,FWORD PTR [esi+0x37]
  416699:	push   0x9c828849
  41669e:	inc    ecx
  41669f:	sbb    edi,DWORD PTR [eax+ebp*8-0x114a7b6c]
  4166a6:	ds adc al,0xd0
  4166a9:	add    bh,0x4
  4166ac:	aas    
  4166ad:	sbb    ebx,DWORD PTR [edx*1+0x1a915e76]
  4166b4:	jmp    0x828a:0x1098d2bc
  4166bb:	cwde   
  4166bc:	ror    DWORD PTR [esi+edi*4+0x353d7596],0x5b
  4166c4:	mov    ebx,ecx
  4166c6:	lock inc esp
  4166c8:	push   esp
  4166c9:	stc    
  4166ca:	sub    ah,bl
  4166cc:	dec    BYTE PTR [esp+eax*1-0x29]
  4166d0:	out    0x9b,al
  4166d2:	mov    eax,0x41acb333
  4166d7:	add    eax,0x281dfefb
  4166dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166dd:	pushf  
  4166de:	add    eax,0xc66360af
  4166e3:	pop    ebp
  4166e4:	or     dl,BYTE PTR [edi+0x1f7b2c27]
  4166ea:	dec    edx
  4166eb:	xchg   esi,eax
  4166ec:	ret    
  4166ed:	xor    esi,DWORD PTR [edi-0x15d4e082]
  4166f3:	jnp    0x416722
  4166f5:	ins    BYTE PTR es:[edi],dx
  4166f6:	shl    DWORD PTR [ecx],1
  4166f8:	push   eax
  4166f9:	inc    eax
  4166fa:	xor    cl,BYTE PTR [ebp-0xd6a5aee]
  416700:	or     BYTE PTR [ebp+0x18],ah
  416703:	aad    0x80
  416705:	dec    ecx
  416706:	fdiv   DWORD PTR [edx-0x27150da6]
  41670c:	nop
  41670d:	or     al,0x81
  41670f:	mov    ?,WORD PTR [esi+0x1d8f0bef]
  416715:	sub    BYTE PTR [eax+0x4a4c9fd3],cl
  41671b:	or     BYTE PTR [ecx+0x35],al
  41671e:	push   ss
  41671f:	rcr    BYTE PTR [edx-0x33],cl
  416722:	mov    ds:0x9609e02c,al
  416727:	imul   edi,DWORD PTR [esi+ebp*4],0x5b
  41672b:	cli    
  41672c:	and    BYTE PTR [eax+0x5e],0x87
  416730:	ja     0x41676e
  416732:	jno    0x4166f7
  416734:	call   0x778:0xc0a95fd3
  41673b:	add    dl,BYTE PTR [ecx+0x2aa64ba2]
  416741:	jo     0x4167a9
  416743:	adc    al,0xc3
  416745:	cmp    esp,DWORD PTR [edx-0x53]
  416748:	ins    DWORD PTR es:[edi],dx
  416749:	mov    es,WORD PTR [edi-0x2d]
  41674c:	pop    esi
  41674d:	cli    
  41674e:	jne    0x416763
  416750:	sbb    eax,0xebcf78a7
  416755:	add    DWORD PTR [edi+0x1cde5124],esi
  41675b:	push   ds
  41675c:	mov    esi,DWORD PTR [ecx]
  41675e:	(bad)  
  41675f:	mov    al,ds:0x8305add7
  416764:	mov    edx,0x3ba43db4
  416769:	dec    edi
  41676a:	xor    DWORD PTR [ebp+eiz*4+0x2c],esp
  41676e:	mov    al,ds:0xb50b5375
  416773:	xchg   esi,eax
  416774:	stos   DWORD PTR es:[edi],eax
  416775:	lods   al,BYTE PTR ds:[esi]
  416776:	(bad)  
  416777:	dec    ebx
  416778:	(bad)  
  416779:	jne    0x41673c
  41677b:	push   ss
  41677c:	dec    edi
  41677d:	xchg   BYTE PTR [ebx+0x35],ah
  416780:	arpl   WORD PTR [edx+0x45],ax
  416783:	outs   dx,BYTE PTR ds:[esi]
  416784:	hlt    
  416785:	into   
  416786:	fcmovb st,st(1)
  416788:	out    0x23,al
  41678a:	(bad)  
  41678b:	std    
  41678c:	xchg   edi,eax
  41678d:	mul    DWORD PTR ds:0x872c7661
  416793:	push   esi
  416794:	inc    esp
  416795:	in     eax,dx
  416796:	xor    DWORD PTR cs:[edi-0x5a],ecx
  41679a:	ja     0x416794
  41679c:	adc    DWORD PTR [edx-0x10],esi
  41679f:	shl    BYTE PTR [ecx-0xb92ee98],cl
  4167a5:	xlat   BYTE PTR ds:[ebx]
  4167a6:	xchg   ebx,eax
  4167a7:	and    BYTE PTR [ebp-0x126b9543],bh
  4167ad:	and    al,0xfd
  4167b0:	aad    0xef
  4167b2:	inc    ecx
  4167b3:	mov    ebp,0x98c50fa9
  4167b8:	jno    0x4167c4
  4167ba:	sahf   
  4167bb:	xchg   esi,eax
  4167bc:	mov    ds:0xbf4fc398,eax
  4167c1:	(bad)  
  4167c2:	jmp    0xf2c0f462
  4167c7:	xor    al,0x41
  4167c9:	sbb    edi,DWORD PTR [eax*2+0x29768429]
  4167d0:	sbb    bh,bh
  4167d2:	push   ebx
  4167d3:	cmc    
  4167d4:	sbb    eax,0x2b623c91
  4167d9:	(bad)  
  4167da:	outs   dx,BYTE PTR ds:[esi]
  4167db:	pop    edx
  4167dc:	cmp    DWORD PTR [eax-0x6cf210d7],ebp
  4167e2:	pop    es
  4167e3:	mov    edi,edi
  4167e5:	in     al,0x8b
  4167e7:	jmp    0x70467a33
  4167ec:	inc    ebx
  4167ed:	or     BYTE PTR [ecx+0x10],al
  4167f0:	inc    ebp
  4167f1:	mov    cl,0x94
  4167f3:	enter  0x8a63,0x14
  4167f7:	inc    ecx
  4167f8:	pushf  
  4167f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167fa:	out    0xb,eax
  4167fc:	dec    ebx
  4167fd:	out    dx,eax
  4167fe:	add    DWORD PTR [ecx+ebp*8],edi
  416801:	push   es
  416802:	adc    ch,bl
  416804:	xlat   BYTE PTR ds:[ebx]
  416805:	ret    
  416806:	fiadd  DWORD PTR [ebp+0x22]
  416809:	fwait
  41680a:	int3   
  41680b:	adc    BYTE PTR fs:[esi+0x41],dl
  41680f:	aas    
  416810:	repz jo 0x41680d
  416813:	leave  
  416814:	adc    eax,0x264210a8
  416819:	xchg   esi,eax
  41681a:	sbb    ebx,DWORD PTR [ebx]
  41681c:	call   0x687b93dc
  416821:	adc    ah,ah
  416823:	xchg   esp,eax
  416824:	mov    al,ds:0xb5130124
  416829:	jmp    0x416851
  41682b:	aaa    
  41682c:	add    DWORD PTR [eax],esi
  41682e:	mov    bl,bl
  416830:	aaa    
  416831:	das    
  416832:	cmp    esi,DWORD PTR [ebx-0x4afd4886]
  416838:	dec    edx
  416839:	in     al,dx
  41683a:	pop    ebx
  41683b:	add    eax,0x4fb7970
  416840:	lods   eax,DWORD PTR ds:[esi]
  416841:	mov    cl,0xf7
  416843:	fnstenv [ebp+0x73]
  416846:	pop    edx
  416847:	mov    edx,0x18e2a1e3
  41684c:	stos   BYTE PTR es:[edi],al
  41684d:	repz dec eax
  41684f:	mov    ecx,0x70f333b1
  416854:	scas   al,BYTE PTR es:[edi]
  416855:	dec    ecx
  416856:	mov    edi,0x4c77c2b7
  41685b:	in     al,dx
  41685c:	or     DWORD PTR [ecx+0xb],edi
  41685f:	and    DWORD PTR [edx],ebx
  416861:	jns    0x416867
  416863:	dec    esi
  416864:	sahf   
  416865:	pusha  
  416866:	or     al,0x5d
  416868:	sub    ebp,esi
  41686a:	push   edx
  41686b:	lods   eax,DWORD PTR ds:[esi]
  41686c:	pop    edi
  41686d:	xchg   esi,eax
  41686e:	pop    esi
  41686f:	fld    TBYTE PTR [edx-0x24e4ffe6]
  416875:	das    
  416876:	loop   0x416816
  416878:	xchg   esp,eax
  416879:	ffreep st(4)
  41687b:	dec    ebp
  41687c:	mov    edi,0xa4a5d7e7
  416881:	ret    0x2391
  416884:	mov    ah,0x3a
  416886:	fsubr  QWORD PTR [eax]
  416888:	mov    ds:0x26314dc5,al
  41688d:	jo     0x4168ec
  41688f:	loopne 0x41683f
  416891:	dec    eax
  416892:	aam    0xb5
  416894:	outs   dx,DWORD PTR ds:[esi]
  416895:	in     eax,0x5d
  416897:	or     BYTE PTR [esi],al
  416899:	fdiv   st,st(4)
  41689b:	push   cs
  41689c:	neg    BYTE PTR [edi+0x40aa05e4]
  4168a2:	mov    dh,0x25
  4168a4:	aad    0xf5
  4168a6:	add    bl,BYTE PTR [eax+0x23]
  4168a9:	cmp    edi,edi
  4168ab:	jmp    0x992f:0x93df8fff
  4168b2:	pushf  
  4168b3:	push   0x29
  4168b5:	retf   0x6b61
  4168b8:	int    0x99
  4168ba:	adc    al,0xdd
  4168bc:	xchg   edx,eax
  4168bd:	sub    al,0x57
  4168bf:	cmp    DWORD PTR [edi-0x509031f1],ebx
  4168c5:	les    edi,FWORD PTR [esi+edx*8-0x4274160c]
  4168cc:	mov    cl,ah
  4168ce:	in     eax,0x94
  4168d0:	(bad)  [eax+edi*8+0x2970822f]
  4168d7:	in     al,dx
  4168d8:	retf   
  4168d9:	fnstcw WORD PTR [esp+eiz*2-0x174520f0]
  4168e0:	or     al,0xa8
  4168e2:	and    DWORD PTR [ebx-0x20],edi
  4168e5:	mov    dl,0xe3
  4168e7:	jb     0x4168bb
  4168e9:	out    0xc,al
  4168eb:	inc    eax
  4168ec:	test   eax,0x5d65a9dd
  4168f1:	add    al,BYTE PTR [ecx]
  4168f3:	in     al,dx
  4168f4:	aaa    
  4168f5:	icebp  
  4168f6:	rcl    BYTE PTR [ecx-0x7e8677d0],cl
  4168fc:	inc    ebx
  4168fd:	inc    edx
  4168fe:	in     eax,dx
  4168ff:	sbb    al,0x2f
  416901:	(bad)  
  416902:	xor    al,0x70
  416904:	and    BYTE PTR [ebx],ch
  416906:	pop    esi
  416907:	mov    ah,0x86
  416909:	jle    0x416930
  41690b:	sbb    esp,esi
  41690d:	dec    esp
  41690e:	dec    eax
  41690f:	dec    ebx
  416910:	stos   BYTE PTR es:[edi],al
  416911:	push   ecx
  416912:	js     0x4168ab
  416914:	(bad)
  416918:	(bad)
  41691b:	push   ecx
  41691c:	push   ecx
  41691d:	scas   eax,DWORD PTR es:[edi]
  41691e:	outs   dx,DWORD PTR ds:[esi]
  41691f:	out    0x39,eax
  416921:	or     eax,DWORD PTR [edx+0x38e7c967]
  416927:	xlat   BYTE PTR ds:[ebx]
  416928:	add    al,0x9a
  41692a:	(bad)  
  41692b:	mov    ebp,0x69e338e5
  416930:	push   0xe
  416932:	(bad)  
  416934:	mov    ebx,DWORD PTR [edi+0x5a]
  416937:	loopne 0x41692d
  416939:	test   DWORD PTR [ecx+0x4b16623d],0x1fa14f04
  416943:	push   ebp
  416944:	mov    esi,0xe3c544a4
  416949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41694a:	rcl    DWORD PTR [edx],cl
  41694c:	arpl   cx,bx
  41694e:	fmul   DWORD PTR [edi+0x1d]
  416951:	jecxz  0x416950
  416953:	rol    eax,0x2
  416956:	jle    0x41693c
  416958:	fdiv   st(3),st
  41695a:	sti    
  41695b:	push   ss
  41695c:	mov    bl,0xec
  41695e:	jbe    0x4169a4
  416960:	push   eax
  416961:	adc    al,dh
  416963:	jno    0x416932
  416965:	pusha  
  416966:	mov    DWORD PTR [ebp-0x20],eax
  416969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41696a:	adc    ecx,DWORD PTR [ebp+esi*8+0x1b]
  41696e:	repnz adc BYTE PTR [ebx-0x20795485],cl
  416975:	sar    DWORD PTR [esi+0x62],1
  416978:	stos   BYTE PTR es:[edi],al
  416979:	and    al,BYTE PTR [ebp-0x67]
  41697c:	into   
  41697d:	call   FWORD PTR [edx-0x77]
  416980:	addr16 nop
  416982:	mov    cl,0xa1
  416984:	hlt    
  416985:	cs mov esi,ds
  416988:	xchg   edi,eax
  416989:	xchg   BYTE PTR [edx],dh
  41698b:	inc    edi
  41698c:	dec    esp
  41698d:	and    DWORD PTR [ebx-0x46d9687f],edx
  416993:	ret    0xf0fd
  416996:	dec    edi
  416997:	dec    edi
  416998:	mov    ah,BYTE PTR [edx]
  41699a:	in     al,0xb2
  41699c:	clc    
  41699d:	xchg   ecx,eax
  41699e:	pop    ds
  41699f:	jnp    0x4169ea
  4169a1:	clc    
  4169a2:	xchg   edi,eax
  4169a3:	sbb    esi,DWORD PTR [edx+0x1]
  4169a6:	cwde   
  4169a7:	xor    esp,DWORD PTR [ecx-0x68]
  4169aa:	call   FWORD PTR [ebp+0x4e]
  4169ad:	and    DWORD PTR ds:0x4b72cf3e,esi
  4169b3:	retf   
  4169b4:	fsub   st,st(2)
  4169b6:	ins    DWORD PTR es:[edi],dx
  4169b7:	sbb    cl,al
  4169b9:	dec    esp
  4169ba:	or     BYTE PTR [edx],al
  4169bc:	pop    ds
  4169bd:	pop    ss
  4169be:	adc    ebx,DWORD PTR [ecx]
  4169c0:	and    BYTE PTR [esi-0x3e],al
  4169c3:	mov    cl,0xa4
  4169c5:	sub    ch,bl
  4169c7:	mov    ds:0x659af9d6,eax
  4169cc:	xor    ecx,DWORD PTR [esi+0x7a5c6839]
  4169d2:	add    esp,DWORD PTR [ecx-0x19]
  4169d5:	mov    esi,0x2fc4d4cc
  4169da:	and    al,0x34
  4169dc:	out    0x76,eax
  4169de:	jo     0x4169de
  4169e0:	fbld   TBYTE PTR [ebx]
  4169e2:	push   ds
  4169e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169e4:	dec    ecx
  4169e5:	jne    0x416a18
  4169e7:	imul   edi,DWORD PTR [ebx-0x45],0xffffff80
  4169eb:	pusha  
  4169ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169ed:	xchg   ebx,eax
  4169ef:	jmp    0x416a64
  4169f1:	fstp   QWORD PTR [eax+0x69]
  4169f4:	xchg   ebp,eax
  4169f5:	bound  ebx,QWORD PTR [ebx]
  4169f7:	sub    al,0x9f
  4169f9:	add    ebx,DWORD PTR [eax-0x5d12072c]
  4169ff:	xor    eax,0x7fdace66
  416a04:	mov    bl,0x16
  416a06:	inc    esi
  416a07:	std    
  416a08:	or     BYTE PTR [ecx+0x28],0xc9
  416a0c:	dec    ebp
  416a0d:	stc    
  416a0e:	jmp    0xb674:0x615995df
  416a15:	and    bh,BYTE PTR [edx-0x1d9e8d80]
  416a1b:	sar    DWORD PTR [ecx],1
  416a1d:	in     eax,dx
  416a1e:	fwait
  416a1f:	jo     0x4169e5
  416a21:	adc    eax,0xf46c4850
  416a26:	inc    ebp
  416a27:	in     eax,0xc3
  416a29:	test   BYTE PTR [ecx+esi*2+0x5f582baa],ah
  416a30:	sub    eax,0xa0514f9a
  416a35:	cmp    DWORD PTR [edi],edx
  416a37:	mov    ds:0x5114d9e2,al
  416a3c:	jae    0x4169e8
  416a3e:	stc    
  416a3f:	jle    0x4169d9
  416a41:	out    0x21,eax
  416a43:	mov    eax,ds:0x2d7d7fa3
  416a48:	cli    
  416a49:	cmc    
  416a4a:	push   0x553a8e74
  416a4f:	aad    0xf
  416a51:	out    dx,al
  416a52:	push   0x4b54076d
  416a57:	daa    
  416a58:	inc    ecx
  416a59:	dec    ecx
  416a5a:	call   0x80f1:0x3058343d
  416a61:	adc    DWORD PTR [eax+0x9],esp
  416a64:	jns    0x416a49
  416a66:	adc    eax,0xa9981f7
  416a6b:	pop    eax
  416a6c:	xor    eax,0x482f2b03
  416a71:	and    BYTE PTR [eax-0x4b],0x6b
  416a75:	pusha  
  416a76:	cmp    al,0x5e
  416a78:	pop    edi
  416a79:	sysexit 
  416a7b:	in     eax,0xd6
  416a7d:	push   ss
  416a7e:	adc    al,0x10
  416a80:	and    esi,ebx
  416a82:	dec    esi
  416a83:	add    BYTE PTR [edi],cl
  416a85:	adc    al,0x81
  416a87:	fwait
  416a88:	ret    0xa3bd
  416a8b:	in     eax,dx
  416a8c:	mov    ecx,0xe508b9cc
  416a91:	in     al,0x62
  416a93:	and    dl,BYTE PTR [esi+ebx*4+0x4b23ef7]
  416a9a:	and    al,0xc5
  416a9c:	imul   ebp,DWORD PTR [eax+edi*2],0x2703364d
  416aa3:	ins    DWORD PTR es:[edi],dx
  416aa4:	sub    ch,BYTE PTR [ecx+esi*2+0x58398642]
  416aab:	mov    dl,0x12
  416aad:	aas    
  416aae:	push   ebp
  416aaf:	aaa    
  416ab0:	jge    0x416acb
  416ab2:	int    0xfb
  416ab4:	mov    edi,0x3c6b7d3c
  416ab9:	push   edx
  416aba:	jno    0x416a41
  416abc:	mov    esi,0x91949adc
  416ac1:	pop    ecx
  416ac2:	mov    ebp,0x84772313
  416ac7:	icebp  
  416ac8:	push   esi
  416ac9:	and    eax,0x90908f67
  416ace:	(bad)  
  416acf:	jp     0x416b4d
  416ad1:	xchg   ebx,eax
  416ad2:	jae    0x416b4f
  416ad4:	inc    esi
  416ad5:	adc    eax,0xf200ca0b
  416ada:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416adb:	adc    ecx,edx
  416add:	mov    eax,ds:0xd215a951
  416ae2:	inc    ebp
  416ae3:	mov    dh,BYTE PTR ss:[esi-0x73]
  416ae7:	or     ch,0xc
  416aea:	jmp    0xfe25:0xe0bc4788
  416af1:	shl    BYTE PTR [ecx-0x17],cl
  416af4:	fmul   st(6),st
  416af6:	(bad)  
  416af7:	xchg   edx,eax
  416af8:	xchg   edi,eax
  416af9:	sbb    eax,0x8aae6fe5
  416afe:	add    dl,BYTE PTR [ebx-0x618ad5d2]
  416b04:	jb     0x416b7a
  416b06:	inc    esi
  416b07:	rol    BYTE PTR [esi],1
  416b09:	stc    
  416b0a:	repnz or al,0x98
  416b0d:	(bad)  
  416b0e:	shl    BYTE PTR [esp+eiz*4-0x40aa4d58],cl
  416b15:	or     cl,BYTE PTR ds:0x57fa51aa
  416b1b:	test   eax,0x34e1043e
  416b20:	mov    cl,0x11
  416b22:	mov    esi,0x6cef2cba
  416b27:	mov    BYTE PTR [ebx+0x70],cl
  416b2a:	mov    ah,0xea
  416b2c:	mov    eax,ds:0xdb1e5139
  416b31:	mov    ds:0xb99137a7,al
  416b36:	adc    esi,edi
  416b38:	in     al,dx
  416b39:	sub    esp,DWORD PTR [ebx]
  416b3b:	outs   dx,BYTE PTR ds:[esi]
  416b3c:	sbb    eax,0xd2940622
  416b41:	ret    
  416b42:	dec    ecx
  416b43:	add    bl,BYTE PTR [ebp-0x5e]
  416b46:	test   DWORD PTR ds:0xa5e83887,ebx
  416b4c:	test   ebx,eax
  416b4e:	std    
  416b4f:	pop    ebp
  416b50:	jno    0x416bb2
  416b52:	test   al,0x79
  416b54:	add    BYTE PTR [esi+0x632f2c06],0x46
  416b5b:	pusha  
  416b5c:	leave  
  416b5d:	rcl    BYTE PTR [ebx+0x4dec6eab],1
  416b63:	push   esp
  416b64:	es aad 0xfa
  416b67:	add    al,0xf8
  416b69:	mov    BYTE PTR [edx],bh
  416b6b:	inc    ebp
  416b6c:	popf   
  416b6d:	(bad)  
  416b6e:	and    DWORD PTR [esi-0x71],ebx
  416b71:	xor    bh,dl
  416b73:	cli    
  416b74:	outs   dx,DWORD PTR ds:[esi]
  416b75:	pop    esp
  416b76:	fnstenv [ecx+0x755b5fec]
  416b7c:	push   ecx
  416b7d:	in     eax,dx
  416b7e:	into   
  416b7f:	jp     0x416bd9
  416b81:	jno    0x416b28
  416b83:	cmp    BYTE PTR [edi],cl
  416b85:	mov    dl,ch
  416b87:	sti    
  416b88:	fcmove st,st(4)
  416b8a:	add    ah,BYTE PTR [ecx]
  416b8c:	aam    0x6e
  416b8e:	push   cs
  416b8f:	cmp    al,0xee
  416b91:	add    esi,DWORD PTR [edi]
  416b93:	mov    ?,WORD PTR [edx-0x42]
  416b96:	sti    
  416b97:	cmp    BYTE PTR [edi],cl
  416b99:	push   es
  416b9a:	(bad)  
  416b9b:	dec    eax
  416b9c:	push   ebx
  416b9d:	jns    0x416b56
  416b9f:	cwde   
  416ba0:	fnstsw WORD PTR [ebp+0x21]
  416ba3:	mov    cl,0xc
  416ba5:	jmp    0x2bfb0a2c
  416baa:	pop    edi
  416bab:	clc    
  416bac:	fdiv   QWORD PTR [eax+0x279de654]
  416bb2:	lods   eax,DWORD PTR ds:[esi]
  416bb3:	out    dx,eax
  416bb4:	and    cl,BYTE PTR [eax+0x79]
  416bb7:	loope  0x416b4d
  416bb9:	mov    DWORD PTR [eax-0x71],edi
  416bbc:	xor    bl,ch
  416bbe:	mov    ebp,0xc3dc9820
  416bc3:	enter  0x310e,0xf6
  416bc7:	jmp    0xce46312f
  416bcc:	mov    esi,0xcf1a19e3
  416bd1:	xchg   edx,eax
  416bd2:	sub    DWORD PTR [ebp-0x265a047e],ebp
  416bd8:	ret    0xc9d2
  416bdb:	cmp    bl,dh
  416bdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bde:	inc    edx
  416bdf:	repnz cmp ebx,DWORD PTR [edx+edx*8-0x496617ee]
  416be7:	fnsave [edi]
  416be9:	push   ds
  416bea:	cmp    al,0x5
  416bec:	jp     0x416bd0
  416bee:	outs   dx,BYTE PTR ds:[esi]
  416bef:	stos   BYTE PTR es:[edi],al
  416bf0:	sbb    dh,BYTE PTR [ecx]
  416bf2:	js     0x416bbd
  416bf4:	test   DWORD PTR [eax],ebx
  416bf6:	jne    0x416c01
  416bf8:	or     eax,0x90098a4
  416bfd:	retf   
  416bfe:	dec    esi
  416bff:	ret    0xbcd6
  416c02:	jno    0x416c7d
  416c04:	pop    ds
  416c05:	inc    eax
  416c06:	mov    ss,WORD PTR [esi]
  416c08:	push   ss
  416c09:	inc    ebx
  416c0a:	cmp    bh,BYTE PTR [ecx+0x2dd25634]
  416c10:	shr    edx,cl
  416c12:	sbb    al,0xb0
  416c14:	mov    eax,ds:0xd5cd8e25
  416c19:	hlt    
  416c1a:	inc    eax
  416c1b:	jb     0x416c6e
  416c1d:	adc    al,0x95
  416c1f:	lods   eax,DWORD PTR ds:[esi]
  416c20:	inc    esi
  416c21:	mov    eax,ds:0x60454b6b
  416c26:	dec    esp
  416c27:	fwait
  416c28:	mov    dh,BYTE PTR ds:0x2e71a222
  416c2e:	xchg   ebx,eax
  416c2f:	js     0x416c06
  416c31:	jmp    0x416c7d
  416c33:	pop    ecx
  416c34:	test   ebx,esi
  416c36:	jecxz  0x416c3e
  416c38:	mov    cl,0x44
  416c3a:	sti    
  416c3b:	stos   BYTE PTR es:[edi],al
  416c3c:	mov    dl,0xbd
  416c3e:	jp     0x416c70
  416c40:	adc    edi,0x348bb47f
  416c46:	sar    esp,1
  416c48:	xchg   edx,eax
  416c49:	jmp    0x2506eac3
  416c4e:	cli    
  416c4f:	in     al,0xa8
  416c51:	cs fmul QWORD PTR ss:[eax-0x4edbe5ab]
  416c59:	adc    BYTE PTR ds:0x5743776d,0x0
  416c60:	sbb    ecx,DWORD PTR [ecx+eiz*1]
  416c63:	sti    
  416c64:	or     ecx,DWORD PTR [eax+eiz*2+0x55]
  416c68:	push   0xffffffde
  416c6a:	add    eax,0xb090c6cb
  416c6f:	push   esp
  416c70:	mov    BYTE PTR [eax-0x2bdedd80],ch
  416c76:	push   ebx
  416c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c78:	fcomp  DWORD PTR [ecx-0x16abc3c]
  416c7e:	loope  0x416c23
  416c80:	cmp    esp,DWORD PTR [ebp+0xf]
  416c83:	sahf   
  416c84:	test   al,0xd0
  416c86:	and    al,0xbb
  416c88:	inc    esp
  416c89:	scas   al,BYTE PTR es:[edi]
  416c8a:	js     0x416cf1
  416c8c:	imul   ecx,DWORD PTR [ebx+0x57],0x90122961
  416c93:	repnz ins DWORD PTR es:[edi],dx
  416c95:	fadd   QWORD PTR [ecx-0x26c7dd68]
  416c9b:	dec    edi
  416c9c:	sub    edi,esp
  416c9e:	push   0xd9d3743c
  416ca3:	cs loope 0x416d0e
  416ca6:	sbb    DWORD PTR [ecx+0x1d9fb31d],edx
  416cac:	sahf   
  416cad:	fld    QWORD PTR [esi]
  416caf:	in     al,0xc8
  416cb1:	aaa    
  416cb2:	mov    edx,0xa104f4c2
  416cb7:	mov    cs,WORD PTR [edi-0x6db9559c]
  416cbd:	mov    esp,0xf0751a27
  416cc2:	jns    0x416d0a
  416cc4:	loopne 0x416d15
  416cc6:	fisubr WORD PTR [ecx-0x7869366]
  416ccc:	sub    al,0xa2
  416cce:	jne    0x416c94
  416cd0:	mov    ah,0x0
  416cd2:	in     al,0x8
  416cd4:	outs   dx,DWORD PTR ds:[esi]
  416cd5:	(bad)  
  416cd6:	hlt    
  416cd7:	mov    ?,ecx
  416cd9:	ins    DWORD PTR es:[edi],dx
  416cda:	pop    esi
  416cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cdc:	xchg   ebp,eax
  416cdd:	mov    bh,BYTE PTR [eax-0xd]
  416ce0:	nop
  416ce1:	imul   ebp,DWORD PTR [esi+0x23],0xffffff84
  416ce5:	lea    ebp,[ecx+0x74]
  416ce8:	outs   dx,BYTE PTR ds:[esi]
  416ce9:	leave  
  416cea:	mov    edi,0xcbaf4699
  416cef:	xchg   BYTE PTR [edi+ebx*4+0x75],al
  416cf3:	test   eax,0x615017f5
  416cf8:	cs sub ebp,edx
  416cfb:	fiadd  DWORD PTR [esi+0x36]
  416cfe:	jo     0x416d34
  416d00:	es push ecx
  416d02:	pop    ebx
  416d03:	popa   
  416d04:	in     al,0xdb
  416d06:	(bad)  
  416d08:	xchg   BYTE PTR [esi+ecx*2+0x7dec6981],bl
  416d0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d10:	inc    esp
  416d11:	mov    bl,0xf
  416d13:	push   edx
  416d14:	hlt    
  416d15:	lock loopne 0x416cee
  416d18:	aas    
  416d19:	ret    0x67cb
  416d1c:	loopne 0x416cc4
  416d1e:	test   BYTE PTR [edx-0x57877f09],al
  416d24:	imul   bp,WORD PTR [ebx],0x42bf
  416d29:	jmp    0x416cd6
  416d2b:	fldenv [ebp+0x62]
  416d2e:	mov    al,ds:0x714a23b
  416d33:	dec    esi
  416d34:	cli    
  416d35:	xchg   ebp,eax
  416d36:	pop    esi
  416d37:	sub    BYTE PTR [edx+0x44dc543],dh
  416d3d:	test   al,0x47
  416d3f:	mov    eax,0xe213221f
  416d44:	sbb    eax,0x2dc56ec3
  416d49:	std    
  416d4a:	rol    DWORD PTR [esi],cl
  416d4c:	mov    esp,DWORD PTR [esi*2+0x53b14838]
  416d53:	adc    eax,DWORD PTR [edx*4-0x722a71c]
  416d5a:	(bad)  
  416d5b:	retf   0xae0f
  416d5e:	dec    BYTE PTR [eax+0x75]
  416d61:	jbe    0x416dcc
  416d63:	xchg   edi,eax
  416d64:	jg     0x416d7b
  416d66:	dec    ecx
  416d67:	fcomp  DWORD PTR [ebx]
  416d69:	out    dx,eax
  416d6a:	aaa    
  416d6b:	(bad)  
  416d6d:	jo     0x416d75
  416d6f:	sti    
  416d70:	arpl   WORD PTR [esi-0x754cdd64],bp
  416d76:	ret    0xa70f
  416d79:	imul   eax,esp,0xb019ede8
  416d7f:	pop    ebp
  416d80:	sbb    BYTE PTR [ebx+0x356e45c0],0x9b
  416d87:	push   ecx
  416d88:	(bad)  
  416d89:	(bad)  
  416d8b:	test   al,0x2c
  416d8d:	add    dh,BYTE PTR [eax-0x7b9db3e2]
  416d93:	sub    esp,0xffffffce
  416d96:	ja     0x416dca
  416d98:	push   ds
  416d99:	clc    
  416d9a:	gs jns 0x416d33
  416d9d:	cwde   
  416d9e:	js     0x416d5b
  416da0:	add    dl,BYTE PTR [edi+0x18d62d06]
  416da6:	aad    0x99
  416da8:	ja     0x416d66
  416daa:	jecxz  0x416db1
  416dac:	mov    edx,eax
  416dae:	add    DWORD PTR [edx],eax
  416db0:	mov    ds:0x1393597c,eax
  416db5:	or     eax,DWORD PTR [ebx+0x32]
  416db8:	lock sub al,0x74
  416dbb:	push   esp
  416dbc:	jg     0x416dac
  416dbe:	mov    bh,0xec
  416dc0:	jg     0x416ddc
  416dc2:	cmp    DWORD PTR [ecx+edx*4-0x36],0x8bbaab30
  416dca:	ins    BYTE PTR es:[edi],dx
  416dcb:	xchg   esp,eax
  416dcc:	mov    dl,0xe6
  416dce:	cs inc esp
  416dd0:	push   ss
  416dd1:	pop    es
  416dd2:	adc    bh,al
  416dd4:	push   edi
  416dd5:	adc    esi,esp
  416dd7:	ficom  WORD PTR [esi-0x2240abcc]
  416ddd:	mov    eax,0x735e85d9
  416de2:	inc    ecx
  416de3:	shr    DWORD PTR [edx+0x7bff3685],1
  416de9:	jle    0x416e1c
  416deb:	fld    DWORD PTR [ecx]
  416ded:	inc    ebx
  416dee:	and    BYTE PTR [edi],dl
  416df0:	sti    
  416df1:	mov    cl,0x24
  416df3:	les    ebx,FWORD PTR [edx+0x7b]
  416df6:	sbb    al,0x99
  416df8:	cmp    eax,0x4aa2a920
  416dfd:	cmc    
  416dfe:	adc    eax,0x5b0f93d
  416e03:	cld    
  416e04:	pop    ecx
  416e05:	ins    BYTE PTR es:[edi],dx
  416e06:	jmp    0x49bfb70e
  416e0b:	sbb    BYTE PTR [ebx+0x57],0xe3
  416e0f:	aam    0xb0
  416e11:	(bad)  
  416e12:	rcl    BYTE PTR [ebx+0x4],1
  416e15:	sub    BYTE PTR [ebp+0x549ee7c1],ah
  416e1b:	adc    eax,0x3c9eb16c
  416e20:	data16 and dl,BYTE PTR [edx-0x34]
  416e24:	xor    ecx,DWORD PTR [ebp-0x713f07e6]
  416e2a:	(bad)  
  416e2b:	cli    
  416e2c:	lds    ebx,FWORD PTR [ecx-0x36107616]
  416e32:	les    esi,FWORD PTR [ecx]
  416e34:	outs   dx,BYTE PTR ds:[esi]
  416e35:	int    0xb1
  416e37:	div    DWORD PTR [esi+0x23cd6c90]
  416e3d:	push   cs
  416e3e:	test   BYTE PTR [ecx+eax*1-0x4a],ah
  416e42:	repnz xchg ecx,eax
  416e44:	data16 (bad) 
  416e47:	scas   eax,DWORD PTR es:[edi]
  416e48:	lods   al,BYTE PTR ds:[esi]
  416e49:	call   0x9d9a:0x2dd8eaea
  416e50:	push   0xc6957833
  416e55:	rcr    DWORD PTR [eax],cl
  416e57:	jno    0x416de4
  416e59:	iret   
  416e5a:	cld    
  416e5b:	retf   0x7037
  416e5e:	push   ecx
  416e5f:	stc    
  416e60:	rcl    DWORD PTR [edi],1
  416e62:	jns    0x416e32
  416e64:	mov    ebp,0x915b0f40
  416e69:	ja     0x416e5e
  416e6b:	rol    DWORD PTR [eax-0x4d],1
  416e6e:	jp     0x416e12
  416e70:	lahf   
  416e71:	mov    esi,0x36515bbb
  416e76:	mov    ah,0x12
  416e78:	sub    al,0xa8
  416e7a:	dec    edx
  416e7b:	add    al,cl
  416e7d:	nop
  416e7e:	dec    ebp
  416e7f:	je     0x416e60
  416e81:	sub    ecx,ebx
  416e83:	dec    ebx
  416e84:	xchg   ecx,eax
  416e85:	xchg   ebp,eax
  416e86:	push   esi
  416e87:	push   cs
  416e88:	push   ecx
  416e89:	sub    eax,0x6f9600ce
  416e8e:	cwde   
  416e8f:	dec    eax
  416e90:	cmp    DWORD PTR [edx+0x5e39c1d7],esi
  416e96:	jmp    0x1cb437bc
  416e9b:	dec    eax
  416e9c:	outs   dx,BYTE PTR ds:[esi]
  416e9d:	js     0x416e8e
  416e9f:	ror    DWORD PTR [edx],0x8a
  416ea2:	mov    dh,0x9e
  416ea4:	pop    eax
  416ea5:	jb     0x416e59
  416ea7:	lock cwde 
  416ea9:	and    eax,0x54aa7a93
  416eae:	daa    
  416eaf:	in     eax,dx
  416eb0:	adc    BYTE PTR [eax+0x510f88a8],0xa5
  416eb7:	stc    
  416eb8:	push   edi
  416eb9:	sub    dl,BYTE PTR [edi-0x63371162]
  416ebf:	jns    0x416ec7
  416ec1:	mov    ds:0x4277ea44,eax
  416ec6:	jp     0x416f3a
  416ec8:	mov    ebp,ebx
  416eca:	pop    ss
  416ecb:	leavew 
  416ecd:	and    BYTE PTR [ebx],dl
  416ecf:	sub    al,0xf8
  416ed1:	xor    eax,0xc636b99a
  416ed6:	repz repz test DWORD PTR [ecx+0x3a],0x2625cb9b
  416edf:	xchg   edi,eax
  416ee0:	push   cx
  416ee2:	xor    BYTE PTR [ebp+0x6649bcf],dh
  416ee8:	popa   
  416ee9:	cs ds adc al,0xea
  416eed:	pop    eax
  416eee:	in     al,0x56
  416ef0:	pop    eax
  416ef1:	rcr    esi,0x14
  416ef4:	sub    al,0xe5
  416ef6:	out    0x98,eax
  416ef8:	and    eax,0x28dfef68
  416efd:	dec    ecx
  416efe:	pop    ss
  416eff:	cmp    DWORD PTR [ebx],esi
  416f01:	shr    BYTE PTR [ebx],1
  416f03:	retf   0xce2b
  416f06:	jmp    0x41928f
  416f0b:	adc    ah,BYTE PTR [edx+0xe708f7]
  416f11:	test   BYTE PTR [eax+0x9a72d6],bl
  416f17:	leave  
  416f18:	mov    esi,edx
  416f1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f1b:	xchg   ebx,eax
  416f1c:	inc    eax
  416f1d:	add    BYTE PTR [ebx-0x7c7ca3e9],0xd6
  416f24:	lock aam 0x28
  416f27:	and    eax,0x404fe0d9
  416f2c:	adc    bl,BYTE PTR [ecx+0x5f302d71]
  416f32:	lea    edi,[ebp-0x2d34eca3]
  416f38:	(bad)  
  416f39:	hlt    
  416f3a:	xor    esi,DWORD PTR [edx]
  416f3c:	xchg   BYTE PTR [edx-0x38e27549],cl
  416f42:	pop    edi
  416f43:	lock ins DWORD PTR es:[edi],dx
  416f45:	push   esp
  416f46:	sbb    BYTE PTR [eax],0x2d
  416f49:	mov    BYTE PTR [esi-0x6f],bh
  416f4c:	jae    0x416f3f
  416f4e:	and    al,0x72
  416f51:	rol    BYTE PTR ds:0x281b8a63,0x22
  416f58:	jo     0x416fcb
  416f5a:	out    dx,eax
  416f5b:	neg    DWORD PTR [ebx-0x73]
  416f5e:	push   edx
  416f5f:	mov    esi,0xfb642c73
  416f65:	cmp    eax,0xc846a522
  416f6a:	xor    dl,dl
  416f6c:	outs   dx,BYTE PTR ds:[esi]
  416f6d:	xchg   esi,eax
  416f6e:	pop    ds
  416f6f:	ret    0x8fc3
  416f72:	mov    eax,0x2355639d
  416f77:	dec    edx
  416f78:	adc    bl,BYTE PTR [esi+0x38]
  416f7b:	test   al,0x39
  416f7d:	gs dec ecx
  416f7f:	rol    DWORD PTR [esi+0x20ed29bb],cl
  416f85:	mov    al,ds:0xf6017466
  416f8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f8b:	popf   
  416f8c:	pop    esp
  416f8d:	fiadd  WORD PTR [esi+eax*4]
  416f90:	add    BYTE PTR [edx],ch
  416f92:	in     al,dx
  416f93:	xchg   edx,eax
  416f94:	mov    esi,0x4141ae88
  416f99:	push   0xffffffb4
  416f9b:	pop    esi
  416f9c:	pop    es
  416f9d:	push   ss
  416f9e:	scas   eax,DWORD PTR es:[edi]
  416f9f:	icebp  
  416fa0:	je     0x416f9c
  416fa2:	and    DWORD PTR [esi+0x3bdd3c03],0x77950fcb
  416fac:	retf   
  416fad:	dec    esi
  416fae:	lahf   
  416faf:	dec    ebp
  416fb0:	pop    es
  416fb1:	dec    esp
  416fb2:	cmp    BYTE PTR [edi-0x14dc034e],bl
  416fb8:	mov    ds:0x49e0dd0b,eax
  416fbd:	pop    esp
  416fbe:	xchg   BYTE PTR [eax],dl
  416fc0:	mov    ah,0x35
  416fc2:	push   ebp
  416fc3:	adc    eax,0x7804ce8d
  416fc8:	mov    dl,0x2d
  416fca:	clc    
  416fcb:	mov    dh,ah
  416fcd:	adc    DWORD PTR [eax+0x3f],edi
  416fd0:	icebp  
  416fd1:	mov    edx,0xf77f5b18
  416fd6:	sar    BYTE PTR ds:0x1bfe55b0,1
  416fdc:	inc    eax
  416fdd:	push   esp
  416fde:	jmp    0x8fb4:0xee7c9c58
  416fe5:	arpl   WORD PTR [ecx+ecx*8],cx
  416fe8:	sti    
  416fe9:	push   cs
  416fea:	mov    edx,0xa64f8c3b
  416fef:	loop   0x416fa6
  416ff1:	add    al,0xe2
  416ff3:	pop    edi
  416ff4:	xor    eax,0xeb67baa3
  416ff9:	add    BYTE PTR [ebx],cl
  416ffb:	out    dx,eax
  416ffc:	xlat   BYTE PTR ds:[ebx]
  416ffd:	sub    ebx,DWORD PTR [eax]
  416fff:	fwait
  417000:	pop    ecx
  417001:	out    0xd6,eax
  417003:	add    esp,DWORD PTR [ecx-0x3e]
  417006:	icebp  
  417007:	outs   dx,BYTE PTR ds:[esi]
  417008:	sub    DWORD PTR [ebp+0x54e23b9],esp
  41700e:	into   
  41700f:	xchg   DWORD PTR [eax+0x6e],edx
  417012:	addr16 shl ecx,1
  417015:	xor    al,0x25
  417017:	shl    BYTE PTR [ebx+0x53],1
  41701a:	neg    DWORD PTR [edx+0x47edc5ad]
  417020:	iret   
  417021:	or     BYTE PTR [ebp+0x54],bl
  417024:	push   eax
  417025:	mov    esp,0x558c26a9
  41702a:	dec    esi
  41702b:	cmp    eax,0x9e678e17
  417030:	daa    
  417031:	test   al,0xd0
  417033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417034:	int3   
  417035:	das    
  417036:	push   ds
  417037:	lods   eax,DWORD PTR ds:[esi]
  417038:	jecxz  0x41707c
  41703a:	sub    eax,0x1293a67e
  41703f:	call   0xa2213c0d
  417044:	push   edx
  417045:	inc    ecx
  417046:	push   cs
  417047:	mov    al,ds:0xaef1614f
  41704c:	cmp    al,0x99
  41704e:	repnz or BYTE PTR [edi+0x2d],bh
  417052:	mov    al,fs:0x9868268e
  417058:	push   esi
  417059:	ss xchg edi,eax
  41705b:	stos   DWORD PTR es:[edi],eax
  41705c:	xchg   ebx,eax
  41705d:	and    bh,BYTE PTR [eax+0x8]
  417060:	xor    eax,0x8c683bcf
  417065:	push   ecx
  417066:	dec    ebx
  417067:	scas   eax,DWORD PTR es:[edi]
  417068:	(bad)  
  417069:	push   ebx
  41706a:	sti    
  41706b:	and    DWORD PTR [edx+0x54b832d1],edi
  417071:	xchg   DWORD PTR [ecx+0x636b7733],edx
  417077:	mov    dl,BYTE PTR [ecx]
  417079:	mov    ebp,0x51eb5d85
  41707e:	mov    DWORD PTR [eax-0x6619e31b],0x126ab303
  417088:	test   BYTE PTR [eax+0x170ed438],ch
  41708e:	mov    ds:0xecedc0bd,al
  417093:	adc    ah,ch
  417095:	arpl   WORD PTR [ecx+0x70dcdf5c],sp
  41709b:	sahf   
  41709c:	out    dx,al
  41709d:	xor    eax,0x8b55ebf1
  4170a2:	cdq    
  4170a3:	pop    ds
  4170a4:	fild   QWORD PTR [edi]
  4170a6:	aaa    
  4170a7:	xchg   DWORD PTR [esi+0x27],ebp
  4170aa:	and    ch,ah
  4170ac:	ss int3 
  4170ae:	add    BYTE PTR [ebx-0xf],0x93
  4170b2:	mov    ecx,DWORD PTR [edi+0x79]
  4170b5:	jle    0x417111
  4170b7:	test   al,0x43
  4170b9:	scas   eax,DWORD PTR es:[edi]
  4170ba:	inc    esp
  4170bb:	mov    ebp,0xa8d7a551
  4170c0:	mov    bh,0xa1
  4170c2:	and    DWORD PTR [esi+0x4f9b2168],0x5f76d3c7
  4170cc:	xchg   edx,eax
  4170cd:	(bad)  
  4170ce:	add    DWORD PTR [edx+ebp*1+0x3f],ebx
  4170d2:	sub    BYTE PTR [edi+eiz*1],ch
  4170d5:	stos   DWORD PTR es:[edi],eax
  4170d6:	push   ebp
  4170d7:	push   ds
  4170d8:	xor    ah,BYTE PTR [ecx-0xabb322]
  4170de:	ins    DWORD PTR es:[edi],dx
  4170df:	(bad)  
  4170e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170e1:	in     eax,0xc
  4170e3:	mov    ebp,0xad5a4c18
  4170e8:	push   ebx
  4170e9:	jbe    0x41716a
  4170eb:	add    eax,ebx
  4170ed:	adc    DWORD PTR [esi],esp
  4170ef:	jmp    0x4ebf:0x7867fa47
  4170f6:	add    al,0x9c
  4170f8:	lods   eax,DWORD PTR ds:[esi]
  4170f9:	push   esi
  4170fa:	mov    ch,0x52
  4170fc:	mov    WORD PTR [ebx+esi*1-0x2e1ed17b],ds
  417103:	ret    0xcb69
  417106:	fwait
  417107:	mov    ecx,0xc3538986
  41710c:	jl     0x41710b
  41710e:	dec    esp
  41710f:	mov    dl,0xc2
  417111:	dec    edi
  417112:	scas   al,BYTE PTR es:[edi]
  417113:	jbe    0x4170a4
  417115:	xor    BYTE PTR [ecx+0x7639a6ad],ah
  41711b:	lods   al,BYTE PTR ds:[esi]
  41711c:	and    DWORD PTR [eax],0x5c4e75fe
  417122:	(bad)
  417125:	mov    al,ds:0x29948c3f
  41712a:	or     eax,0x9577df82
  41712f:	cmp    esp,DWORD PTR [edi-0x643f102d]
  417135:	shl    BYTE PTR [ebp-0x3f64baee],0xfc
  41713c:	jecxz  0x4170d7
  41713e:	mov    ebp,0x64c07768
  417143:	sub    esp,esi
  417145:	mov    eax,ds:0xabe826e6
  41714a:	sub    DWORD PTR [edi],esi
  41714c:	jb     0x417154
  41714e:	push   ebx
  41714f:	(bad)  
  417151:	mov    al,0xc3
  417153:	mov    eax,0x99728d63
  417158:	push   0xffffffe5
  41715a:	xchg   esi,esi
  41715c:	int3   
  41715d:	pop    ebx
  41715e:	cmp    BYTE PTR [esi],ah
  417160:	push   es
  417161:	fiadd  DWORD PTR [ebx-0x3bb59d3f]
  417167:	sub    esp,eax
  417169:	stos   DWORD PTR es:[edi],eax
  41716a:	xor    BYTE PTR [edx+0x84d6b0a],ch
  417170:	mov    eax,0x13117be4
  417175:	jl     0x41712e
  417177:	sub    bh,dl
  417179:	neg    edx
  41717b:	inc    esp
  41717c:	dec    eax
  41717d:	add    al,0x98
  41717f:	mov    ebx,0x9d00036b
  417184:	clc    
  417185:	xchg   edi,eax
  417186:	inc    edi
  417187:	or     ecx,DWORD PTR [ebp-0x49]
  41718a:	fcmovnu st,st(4)
  41718c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41718d:	enter  0x524,0x17
  417191:	lea    ecx,[ebx+0x328a220f]
  417197:	stos   BYTE PTR es:[edi],al
  417198:	xchg   ecx,eax
  417199:	sahf   
  41719a:	mov    dl,0x11
  41719c:	add    DWORD PTR [eax],0xa0280b0d
  4171a2:	pushw  0x6d
  4171a5:	hlt    
  4171a6:	int3   
  4171a7:	icebp  
  4171a8:	adc    dh,dh
  4171aa:	jns    0x41718b
  4171ac:	fnstcw WORD PTR [edx]
  4171ae:	rcl    ah,0x96
  4171b1:	js     0x4171ba
  4171b3:	outs   dx,DWORD PTR ds:[esi]
  4171b4:	mov    eax,ds:0x33284591
  4171b9:	dec    esi
  4171bb:	or     BYTE PTR [ecx],bh
  4171bd:	jge    0x4171f5
  4171bf:	sbb    ecx,DWORD PTR [ebx+0xd]
  4171c2:	mov    dh,0xe6
  4171c4:	repz adc edx,DWORD PTR [edi+0xa860df0]
  4171cb:	and    ebx,edx
  4171cd:	in     al,0xca
  4171cf:	test   DWORD PTR fs:[ebx-0x15ab39ff],ebp
  4171d6:	rdpmc  
  4171d8:	ss lock jle 0x417250
  4171dc:	cmp    DWORD PTR [ebp+eiz*8-0x66],0x4ca0f638
  4171e4:	loop   0x4171b8
  4171e6:	mov    esp,0xb924cc18
  4171eb:	hlt    
  4171ec:	adc    BYTE PTR [ebx-0x20],bl
  4171ef:	into   
  4171f0:	ror    DWORD PTR [ecx],cl
  4171f2:	iret   
  4171f3:	fwait
  4171f4:	(bad)  
  4171f5:	mov    edx,0x72a75a3c
  4171fa:	xchg   edx,eax
  4171fb:	ret    
  4171fc:	aad    0xa
  4171fe:	mov    ah,0x3d
  417200:	pop    edi
  417201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417203:	jg     0x4171ef
  417205:	stc    
  417206:	push   esp
  417207:	or     al,0xe0
  417209:	stos   BYTE PTR es:[edi],al
  41720a:	int3   
  41720b:	popf   
  41720c:	and    bl,dh
  41720e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41720f:	lds    ecx,FWORD PTR [edx]
  417211:	test   BYTE PTR [ebp+0x7961750d],cl
  417217:	(bad)  
  417218:	(bad)  
  417219:	in     al,dx
  41721a:	pop    ds
  41721b:	out    0x84,al
  41721d:	ss or  al,0xb7
  417220:	inc    esi
  417221:	test   BYTE PTR [eax-0xd1afad9],al
  417227:	dec    ebp
  417228:	clc    
  417229:	cdq    
  41722a:	popa   
  41722b:	adc    BYTE PTR [esi+eax*4-0x1c219e82],cl
  417232:	push   eax
  417233:	adc    al,0xbe
  417235:	jns    0x41725f
  417237:	test   BYTE PTR [esi-0x3a],bl
  41723a:	mov    ebx,0x67f3fe1f
  41723f:	pusha  
  417240:	mov    ebx,0xed0cab2a
  417245:	and    ecx,edx
  417247:	jge    0x4172a0
  417249:	std    
  41724a:	xor    BYTE PTR [ebp-0x43],dl
  41724d:	out    dx,eax
  41724e:	cli    
  41724f:	mov    dl,0xc1
  417251:	aas    
  417252:	imul   ebx,DWORD PTR [esi+0x2c],0x1c
  417256:	or     dh,BYTE PTR cs:[ebx-0x6179d61b]
  41725d:	sub    cl,BYTE PTR [ecx-0x3d]
  417260:	(bad)  
  417261:	fmul   QWORD PTR [edx-0x57]
  417264:	push   ss
  417265:	cmp    eax,0x279e40aa
  41726a:	mov    eax,DWORD PTR [ecx]
  41726c:	xchg   ebx,eax
  41726d:	fsub   QWORD PTR [ecx+0x6b]
  417270:	outs   dx,DWORD PTR ds:[esi]
  417271:	pop    ebx
  417272:	scas   al,BYTE PTR es:[edi]
  417273:	adc    eax,0xe1308eb9
  417278:	out    dx,eax
  417279:	xchg   esp,eax
  41727a:	lahf   
  41727b:	inc    esi
  41727c:	lahf   
  41727d:	add    al,0xf7
  41727f:	fsubr  st,st(2)
  417281:	std    
  417282:	fild   WORD PTR [edi]
  417284:	xchg   ebx,eax
  417285:	mov    dl,0x27
  417287:	dec    edi
  417288:	xchg   ebx,eax
  417289:	int    0x58
  41728b:	lahf   
  41728c:	xor    DWORD PTR [ebx+0x4e],ecx
  41728f:	mov    edi,0xa0f8fd0d
  417294:	sbb    al,0x36
  417296:	shr    BYTE PTR [eax],1
  417298:	dec    ecx
  417299:	sbb    eax,0xe2d86379
  41729e:	xor    BYTE PTR [ebx-0x4251f74b],al
  4172a4:	stc    
  4172a5:	les    ebx,FWORD PTR [edx+0x64]
  4172a8:	or     esi,DWORD PTR [eax]
  4172aa:	pop    edi
  4172ab:	inc    esp
  4172ac:	jle    0x4172f7
  4172ae:	pop    esp
  4172af:	and    edi,ecx
  4172b1:	sub    al,al
  4172b3:	nop
  4172b4:	sub    cl,bh
  4172b6:	xchg   esp,eax
  4172b7:	imul   edx,DWORD PTR [esi],0xffffffa4
  4172ba:	push   edi
  4172bb:	in     eax,dx
  4172bc:	out    0x92,eax
  4172be:	cmp    DWORD PTR ds:0xb4849d9b,ecx
  4172c4:	or     eax,0x7804899b
  4172c9:	pop    ebp
  4172ca:	(bad)  
  4172cb:	in     eax,dx
  4172cc:	xchg   edi,esi
  4172ce:	dec    edx
  4172cf:	in     eax,dx
  4172d0:	adc    DWORD PTR [edx+0x5f],ecx
  4172d3:	inc    eax
  4172d4:	bound  esi,QWORD PTR [eax+edi*2]
  4172d7:	ins    BYTE PTR es:[edi],dx
  4172d8:	in     eax,0x30
  4172da:	rcr    BYTE PTR [ebx],0xaa
  4172dd:	aas    
  4172de:	adc    DWORD PTR [ebx-0x73],ebp
  4172e1:	mov    ebx,0x5b04fbd2
  4172e6:	push   ds
  4172e7:	aam    0xfb
  4172e9:	mov    ecx,0x2e27c7e
  4172ee:	jb     0x41730e
  4172f0:	int3   
  4172f1:	daa    
  4172f2:	xor    ecx,DWORD PTR [ebx]
  4172f4:	outs   dx,BYTE PTR ds:[esi]
  4172f5:	sbb    bl,al
  4172f7:	or     DWORD PTR [edx+0x74],edx
  4172fa:	aas    
  4172fb:	test   al,0xb9
  4172fd:	xor    BYTE PTR [esi+eiz*4],bh
  417300:	mov    ah,cl
  417302:	or     dl,BYTE PTR [edi+0x655c8d0b]
  417308:	mov    ah,0xe
  41730a:	test   eax,0x83991ffa
  41730f:	pop    esp
  417310:	ins    DWORD PTR es:[edi],dx
  417311:	or     edx,0xf10c6668
  417317:	sub    al,0x81
  417319:	sbb    al,0xc0
  41731b:	in     eax,dx
  41731c:	pop    ecx
  41731d:	and    dl,BYTE PTR ds:[edi]
  417320:	ds push 0x54
  417323:	adc    BYTE PTR [edi],bl
  417325:	fldcw  WORD PTR [ebp+0x69956a8e]
  41732b:	test   eax,0x62ab9613
  417330:	mov    ebx,0x14735069
  417335:	add    al,0x31
  417337:	retf   0x766
  41733a:	rep lods eax,DWORD PTR ds:[esi]
  41733c:	mov    edx,0xdf101b6a
  417341:	jmp    0x417316
  417343:	jbe    0x41736c
  417345:	(bad)  [edi+eax*2-0x56]
  417349:	(bad)  
  41734a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41734b:	cmp    BYTE PTR [ebp-0x1e5feb0e],bh
  417351:	or     al,0x18
  417353:	test   cl,0x64
  417356:	call   0x756d70e0
  41735b:	fisubr DWORD PTR [edx+eax*8]
  41735e:	stos   BYTE PTR es:[edi],al
  41735f:	and    dl,BYTE PTR [eax-0x75]
  417362:	hlt    
  417363:	out    dx,al
  417364:	pop    esp
  417365:	push   esi
  417366:	addr16 mov edi,0x570572ab
  41736c:	rcl    DWORD PTR ds:[edx+0x18302cd2],cl
  417373:	inc    esi
  417374:	mov    bl,BYTE PTR [edx-0x57fbced5]
  41737a:	ins    DWORD PTR es:[edi],dx
  41737b:	(bad)  
  41737c:	stos   BYTE PTR es:[edi],al
  41737d:	mov    bl,0xfc
  41737f:	inc    eax
  417380:	out    0xbf,eax
  417382:	adc    ebx,edi
  417384:	mov    ss,WORD PTR [edi]
  417386:	jns    0x41731b
  417388:	scas   al,BYTE PTR es:[edi]
  417389:	and    ebp,DWORD PTR [ebp+eiz*8-0x36fe2fca]
  417390:	out    0xb3,eax
  417392:	cmc    
  417393:	cli    
  417394:	pop    eax
  417396:	and    al,0x2d
  417398:	lock adc DWORD PTR [edx+0x32d61c66],ebp
  41739f:	add    edi,DWORD PTR [edi]
  4173a1:	out    0x9d,eax
  4173a3:	adc    eax,0xcd82cdb3
  4173a8:	mov    al,0x9c
  4173aa:	jo     0x41740a
  4173ac:	sub    eax,0x7b53601a
  4173b1:	sar    DWORD PTR [eax],1
  4173b3:	xchg   esp,eax
  4173b4:	dec    esi
  4173b5:	inc    eax
  4173b6:	js     0x4173cc
  4173b8:	mov    eax,0x4445d1e1
  4173bd:	cli    
  4173be:	xor    BYTE PTR [ecx+edi*4-0x7d2e8ee],0xde
  4173c6:	xchg   ebp,eax
  4173c7:	sbb    ebx,DWORD PTR [ebx+0x6d]
  4173ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173cb:	pop    eax
  4173cc:	out    dx,eax
  4173cd:	sbb    DWORD PTR [edi-0x3e],ecx
  4173d0:	mov    bh,0x3a
  4173d2:	push   ecx
  4173d3:	xor    DWORD PTR [edx+ebp*1],0x26c3a8a5
  4173da:	xor    eax,0xc739e1fb
  4173df:	dec    edx
  4173e0:	dec    ebp
  4173e1:	loop   0x417371
  4173e3:	push   edx
  4173e4:	hlt    
  4173e5:	retf   0x9572
  4173e8:	jnp    0x4173e3
  4173ea:	ds mov esi,0xdd75fd56
  4173f0:	adc    eax,DWORD PTR [edx+0x73dbb13f]
  4173f6:	in     al,dx
  4173f7:	mov    al,ds:0xbf3a436e
  4173fc:	jb     0x417478
  4173fe:	bound  ebp,QWORD PTR [ebp-0x3cbb6da3]
  417404:	sub    DWORD PTR [eax+0x6],ebp
  417407:	mov    bl,BYTE PTR [di]
  41740a:	cmc    
  41740b:	es pop ebx
  41740d:	retf   
  41740e:	js     0x41747d
  417410:	lahf   
  417411:	rcl    DWORD PTR [ebp+eiz*2-0x80],cl
  417415:	ja     0x4173f4
  417417:	enter  0x6413,0xb
  41741b:	std    
  41741c:	xor    DWORD PTR [ebx-0x736e6188],0xf9f517bb
  417426:	mov    ch,BYTE PTR [edx+0x7601f2b9]
  41742c:	pop    ss
  41742d:	cmp    edi,0xb28f819c
  417433:	adc    bh,BYTE PTR [eax+0x4597350f]
  417439:	jle    0x4173f4
  41743b:	mov    esi,DWORD PTR [esi]
  41743d:	inc    eax
  41743e:	pop    ebx
  41743f:	ret    0x82b
  417442:	mov    dh,0xdf
  417444:	xlat   BYTE PTR ds:[ebx]
  417445:	sub    DWORD PTR [ebp+0x49],esi
  417448:	mov    edx,0xacb1ef58
  41744d:	pop    ds
  41744e:	push   ebx
  41744f:	push   ebx
  417450:	dec    ebx
  417451:	xor    DWORD PTR [esp+ebp*4],eax
  417454:	mov    esp,0x740950c6
  417459:	arpl   WORD PTR [edi+0xb7761c],cx
  41745f:	out    dx,eax
  417460:	or     ecx,esp
  417462:	outs   dx,DWORD PTR ds:[esi]
  417463:	mov    dl,BYTE PTR [edx+eiz*8-0x12]
  417467:	aad    0x56
  417469:	out    0x29,eax
  41746b:	lock (bad) 
  41746d:	lock sub DWORD PTR [di],edx
  417471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417472:	sub    esp,DWORD PTR ds:0x1971d69f
  417478:	xor    DWORD PTR [edi+0xe],eax
  41747b:	int3   
  41747c:	mov    dl,BYTE PTR [eax]
  41747e:	push   ebx
  41747f:	cmp    DWORD PTR [ebx-0x72176b71],eax
  417485:	push   ebp
  417486:	sti    
  417487:	jg     0x4174ae
  417489:	imul   eax,DWORD PTR [ebp-0x35],0xffffffe7
  41748d:	jb     0x417443
  41748f:	dec    ecx
  417490:	(bad)  
  417491:	arpl   WORD PTR [ebx+ecx*8+0x2a],bp
  417495:	out    0x9a,eax
  417497:	mov    ecx,0x5a1b72fc
  41749c:	ret    
  41749d:	pop    es
  41749e:	jmp    0x123e38b0
  4174a3:	je     0x4174ec
  4174a5:	mov    ecx,0x610b3e73
  4174aa:	test   BYTE PTR [edi-0x7e],ah
  4174ad:	jo     0x41743f
  4174af:	sti    
  4174b0:	das    
  4174b1:	fild   DWORD PTR [esi+0x779ff305]
  4174b7:	mov    bl,0x28
  4174b9:	cwde   
  4174ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174bb:	cli    
  4174bc:	mov    cl,0x82
  4174be:	xchg   esi,eax
  4174bf:	in     eax,dx
  4174c0:	or     BYTE PTR [ecx+0x58],0x1
  4174c4:	jecxz  0x417509
  4174c6:	xchg   BYTE PTR [edi+ebp*4-0x6b],bh
  4174ca:	repz jb 0x417526
  4174cd:	jmp    0xe661:0x31445989
  4174d4:	in     eax,0x2
  4174d6:	pop    es
  4174d7:	dec    edx
  4174d8:	jmp    0x417490
  4174da:	test   eax,0xf17d9a56
  4174df:	loopne 0x417545
  4174e1:	shl    BYTE PTR [ecx+0x42],0xcc
  4174e5:	out    0xa5,eax
  4174e7:	inc    edx
  4174e8:	jmp    0x93da:0x9792a965
  4174ef:	xchg   esp,eax
  4174f0:	daa    
  4174f1:	cmp    DWORD PTR [ecx-0xd],eax
  4174f4:	adc    edx,ebp
  4174f6:	mov    ?,WORD PTR [ebx-0x73427f77]
  4174fc:	jg     0x417551
  4174fe:	inc    esp
  4174ff:	jecxz  0x4174a5
  417501:	jnp    0x417513
  417503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417504:	arpl   WORD PTR [eiz*4+0x79ca76de],bp
  41750b:	mov    ch,0xc5
  41750d:	or     bl,BYTE PTR [ecx]
  41750f:	xor    ebp,DWORD PTR [ebx]
  417511:	fidiv  WORD PTR [edx-0x44a1f8e]
  417517:	out    dx,eax
  417518:	lods   al,BYTE PTR ds:[esi]
  417519:	fcom   QWORD PTR [ebp-0x7e]
  41751c:	sub    eax,0xd9da8e2
  417521:	dec    edi
  417522:	js     0x417568
  417524:	in     eax,0xc1
  417526:	(bad)
  417529:	clc    
  41752a:	pop    DWORD PTR [ecx+0x4718f228]
  417530:	xchg   ecx,eax
  417531:	jne    0x4174c5
  417533:	add    eax,0x82748ba9
  417538:	cmp    ecx,DWORD PTR [ebp+0x6f]
  41753b:	push   es
  41753c:	ins    DWORD PTR es:[edi],dx
  41753d:	shl    DWORD PTR cs:[ecx],0xd8
  417541:	xchg   ebx,eax
  417542:	mov    ah,0xaa
  417544:	cmp    eax,0xc663fd15
  417549:	fidiv  DWORD PTR [eax+0x66]
  41754c:	stos   DWORD PTR es:[edi],eax
  41754d:	repnz fwait
  41754f:	xlat   BYTE PTR ds:[ebx]
  417550:	loop   0x417548
  417552:	xor    eax,0x175ca3bc
  417557:	push   cs
  417558:	ret    0x76f
  41755b:	les    ebp,FWORD PTR [ecx+0xa988913]
  417561:	mov    bh,0xf4
  417563:	cmp    ch,dl
  417565:	pop    ebx
  417566:	xor    eax,0x1b469b7d
  41756b:	loopne 0x41756d
  41756d:	jb     0x41754d
  41756f:	sbb    DWORD PTR [ecx+0x44c0555c],ebp
  417575:	(bad)  
  417576:	xlat   BYTE PTR ds:[ebx]
  417577:	jo     0x4175b3
  417579:	jl     0x417560
  41757b:	adc    DWORD PTR [eax],ebp
  41757d:	xchg   ecx,eax
  41757e:	xchg   esp,eax
  41757f:	leave  
  417580:	jmp    0xe4a1d23d
  417585:	adc    ch,BYTE PTR ds:[edi-0x3eda263c]
  41758c:	mov    DWORD PTR [edi],edi
  41758e:	ja     0x4175d0
  417590:	push   cs
  417591:	call   0x888c:0xdd4ef29b
  417598:	clc    
  417599:	inc    esp
  41759a:	and    al,0x50
  41759c:	xor    cl,BYTE PTR [esp+eax*8+0x15]
  4175a0:	add    al,0x54
  4175a2:	cld    
  4175a3:	or     al,0x1b
  4175a5:	push   esp
  4175a6:	icebp  
  4175a7:	(bad)  
  4175a8:	in     eax,dx
  4175a9:	push   edx
  4175aa:	or     edx,esi
  4175ac:	test   cl,dl
  4175ae:	inc    edi
  4175af:	inc    ecx
  4175b0:	retf   
  4175b1:	shl    dl,1
  4175b3:	push   0x30
  4175b5:	add    DWORD PTR [eax-0x4],edi
  4175b8:	in     al,dx
  4175b9:	call   DWORD PTR [ebx-0x44]
  4175bc:	mov    edi,0xf44a2708
  4175c1:	mov    esi,0x170f00a
  4175c6:	cmp    eax,0xaab29ab7
  4175cb:	xor    BYTE PTR [edx+ebx*2+0x4451f806],bl
  4175d2:	mov    dl,dl
  4175d4:	out    0xf0,al
  4175d6:	icebp  
  4175d7:	xchg   edx,eax
  4175d8:	dec    edi
  4175d9:	gs jmp 0x4175a1
  4175dc:	jmp    0xc062:0x1620fbc9
  4175e3:	test   BYTE PTR [esi],0xb
  4175e6:	add    bh,dh
  4175e8:	orps   xmm3,XMMWORD PTR [edi+0x777c27fa]
  4175ef:	xor    DWORD PTR [eax],ecx
  4175f1:	fwait
  4175f2:	add    DWORD PTR [edx-0x45e11324],esp
  4175f8:	clc    
  4175f9:	inc    edx
  4175fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175fb:	(bad)  
  4175fc:	mov    esi,0x3bff0a2c
  417601:	sbb    eax,0x2ac1e1aa
  417606:	inc    esi
  417607:	xor    ebp,ecx
  417609:	fisubr WORD PTR [eax-0x53a0158e]
  41760f:	popf   
  417610:	add    eax,0xf8566bb0
  417615:	ins    BYTE PTR es:[edi],dx
  417616:	xchg   ecx,eax
  417617:	or     BYTE PTR [esi-0x2],0xb3
  41761b:	cdq    
  41761c:	xchg   esp,eax
  41761d:	push   edx
  41761e:	mov    ah,0xc8
  417620:	jo     0x41768f
  417622:	cmp    al,0x19
  417624:	enter  0x310,0x81
  417628:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417629:	mov    WORD PTR [ebp+0x1d],ds
  41762c:	sub    BYTE PTR [ebp+0x4b],dl
  41762f:	ss scas al,BYTE PTR es:[edi]
  417631:	dec    edx
  417632:	ret    0xa51b
  417635:	(bad)  
  417636:	pop    edx
  417637:	clc    
  417638:	aas    
  417639:	push   edi
  41763a:	mov    ah,0x4b
  41763c:	pop    ebx
  41763d:	fiadd  DWORD PTR [edx-0x66]
  417640:	(bad)  
  417641:	fwait
  417642:	sbb    eax,0x83202e7
  417647:	jecxz  0x4175cf
  417649:	cld    
  41764a:	xchg   BYTE PTR ds:0x69173c44,ah
  417650:	out    0xba,eax
  417652:	rdpmc  
  417654:	dec    eax
  417655:	pop    es
  417656:	mov    BYTE PTR [edx+0x1f6a549c],dl
  41765c:	mov    dh,0x36
  41765e:	leave  
  41765f:	clc    
  417660:	inc    eax
  417661:	dec    ebp
  417662:	ret    0xce20
  417665:	jne    0x41763e
  417667:	rcr    DWORD PTR [esi],1
  417669:	loopne 0x41764e
  41766b:	mov    edx,DWORD PTR [edi]
  41766d:	mov    ecx,0x226ee97a
  417672:	lea    edx,[eax+0xd803149]
  417678:	xchg   edi,eax
  417679:	sahf   
  41767a:	push   cs
  41767b:	inc    edx
  41767c:	pushf  
  41767d:	es cmp ebp,esp
  417680:	xor    BYTE PTR [esi-0x697c7834],bl
  417686:	fcomp  QWORD PTR [ecx+0x9030978]
  41768c:	popa   
  41768d:	jg     0x4176a1
  41768f:	data16 add al,0x5b
  417692:	push   ebp
  417693:	lock lock sbb dl,BYTE PTR [ecx-0x4f13253e]
  41769b:	ins    BYTE PTR es:[edi],dx
  41769c:	int    0xd6
  41769e:	imul   ebp,DWORD PTR [edi],0xdc038c9a
  4176a4:	jno    0x41765e
  4176a6:	fs xor al,0x81
  4176a9:	pop    esi
  4176aa:	jmp    0xde4e9e40
  4176af:	pop    eax
  4176b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176b1:	mov    ds:0x2767d3bd,eax
  4176b6:	jecxz  0x417709
  4176b8:	cmp    ebx,DWORD PTR [esi+0x600c0605]
  4176be:	mov    eax,ds:0x9ae501ff
  4176c3:	or     eax,0x29c54193
  4176c8:	pop    esi
  4176c9:	rol    DWORD PTR [eax+0x1b],cl
  4176cc:	xchg   BYTE PTR ds:0x688399fe,ch
  4176d2:	in     eax,0xa9
  4176d4:	jo     0x417734
  4176d6:	add    eax,0x63bc045a
  4176db:	jae    0x417685
  4176dd:	mov    eax,DWORD PTR [ecx-0x235efc02]
  4176e3:	mov    edx,0x32589c62
  4176e8:	pop    edi
  4176e9:	mov    edx,fs
  4176eb:	inc    ebp
  4176ec:	add    ecx,DWORD PTR [eax+0x39]
  4176ef:	fs out 0xa9,al
  4176f2:	mov    ah,0x51
  4176f4:	mov    dl,0x44
  4176f6:	jmp    0xe7b0:0xeec165ec
  4176fd:	jl     0x41769e
  4176ff:	(bad)  
  417700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417701:	push   edx
  417702:	xchg   ebx,eax
  417703:	jmp    0x7889:0x77705778
  41770a:	jns    0x6cc15c18
  417710:	mov    ecx,0x436de4bc
  417715:	add    BYTE PTR [eax-0x34],bl
  417718:	add    eax,0xd7c62bdb
  41771d:	bound  esp,QWORD PTR [ebx+esi*2]
  417720:	daa    
  417721:	sub    BYTE PTR [ecx+0x3ce35cea],bl
  417727:	fsub   DWORD PTR [eax+0x6f]
  41772a:	inc    edi
  41772b:	lds    edi,FWORD PTR [ecx+0x7c24a472]
  417731:	or     DWORD PTR [esi-0x4f076e5b],edx
  417737:	and    ah,BYTE PTR [ebx-0x55]
  41773a:	fnsave [ebx+0x30cd04c2]
  417740:	sbb    eax,0x1bbed08b
  417745:	call   DWORD PTR [esi+0x5f]
  417748:	mov    eax,ds:0x3fd6e3be
  41774d:	leave  
  41774e:	je     0x4176f0
  417750:	mov    DWORD PTR [ebx+0x5f],edi
  417753:	pop    es
  417754:	fisttp DWORD PTR [eax]
  417756:	mov    ch,0x6
  417758:	stc    
  417759:	mov    ebp,0x3143701d
  41775e:	push   edi
  41775f:	lods   eax,DWORD PTR ds:[esi]
  417760:	stos   DWORD PTR es:[edi],eax
  417761:	jmp    0x4177de
  417763:	push   ecx
  417764:	pop    ebp
  417765:	gs inc esp
  417767:	fild   DWORD PTR [ebx-0x47795a30]
  41776d:	sbb    BYTE PTR [esi-0x593e9eb0],0x77
  417774:	jl     0x417772
  417776:	and    ecx,ecx
  417778:	jle    0x4177bf
  41777a:	sbb    eax,0x2762c26c
  41777f:	fdiv   st(5),st
  417781:	dec    esp
  417782:	cmp    BYTE PTR [ebx+0x7c],0x4a
  417786:	repz adc DWORD PTR [esi+0x1f],0x267ce30a
  41778e:	out    dx,eax
  41778f:	fs xchg ecx,eax
  417791:	pop    es
  417792:	stos   DWORD PTR es:[edi],eax
  417793:	fmul   DWORD PTR [ebx+0x4be55ea7]
  417799:	dec    ecx
  41779a:	(bad)  
  41779b:	aas    
  41779c:	mov    dl,0x1d
  41779e:	pop    ebp
  41779f:	leave  
  4177a0:	inc    ebx
  4177a1:	fisub  DWORD PTR [ebp-0x4b329d06]
  4177a7:	loop   0x417778
  4177a9:	add    eax,0xa86415c3
  4177ae:	jg     0x4177fd
  4177b0:	xor    eax,0x27add5dd
  4177b5:	add    BYTE PTR [edi],0x5
  4177b8:	xor    DWORD PTR [edx],ecx
  4177ba:	cmp    dl,BYTE PTR [edx+edx*8]
  4177bd:	jb     0x417793
  4177bf:	push   0x40
  4177c1:	ds ret 
  4177c3:	push   esi
  4177c4:	sbb    ebx,DWORD PTR [esi]
  4177c6:	(bad)  
  4177c7:	stos   DWORD PTR es:[edi],eax
  4177c8:	push   esi
  4177c9:	(bad)  
  4177ca:	outs   dx,BYTE PTR ds:[esi]
  4177cb:	jl     0x417817
  4177cd:	cmp    BYTE PTR [edx],0xce
  4177d0:	(bad)  
  4177d1:	push   ebx
  4177d2:	sti    
  4177d3:	jns    0x417816
  4177d5:	jo     0x4177d5
  4177d7:	mov    ecx,fs
  4177d9:	std    
  4177da:	cli    
  4177db:	or     ah,BYTE PTR [edi+0x26707e03]
  4177e1:	jecxz  0x41778d
  4177e3:	out    dx,al
  4177e4:	push   ebp
  4177e5:	inc    ebx
  4177e6:	dec    edx
  4177e7:	lods   al,BYTE PTR ds:[esi]
  4177e8:	jbe    0x41778f
  4177ea:	(bad)  [edx-0x7c]
  4177ed:	mov    eax,ds:0x1121a94a
  4177f2:	pop    edx
  4177f3:	leave  
  4177f4:	fdivr  QWORD PTR ds:0x326ce509
  4177fa:	arpl   WORD PTR [ebx],di
  4177fc:	(bad)  
  4177fd:	pop    ss
  4177fe:	add    DWORD PTR [edi-0x2cf4fbba],ebx
  417804:	rcr    ch,0xf3
  417807:	rcr    DWORD PTR [eax],0x19
  41780a:	enter  0xd350,0xb1
  41780e:	xchg   ecx,eax
  41780f:	(bad)  
  417810:	xor    BYTE PTR [esi],bl
  417812:	pop    es
  417813:	lahf   
  417814:	dec    ecx
  417815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417816:	cmp    al,0x59
  417818:	and    DWORD PTR [edi+0x6e],esi
  41781b:	aam    0x7
  41781d:	cmp    ch,al
  41781f:	ds sub al,0x5d
  417822:	jmp    0xdedc1dee
  417827:	pop    eax
  417828:	aas    
  417829:	nop
  41782a:	pop    esi
  41782b:	jecxz  0x417804
  41782d:	sbb    al,0x89
  41782f:	daa    
  417830:	fadd   QWORD PTR [ebp-0x3c]
  417833:	sbb    DWORD PTR [ebp+0x22],ebx
  417836:	cmp    eax,0x30a8af9
  41783b:	and    esi,DWORD PTR ds:0x14f1890b
  417841:	(bad)  
  417842:	popa   
  417843:	ins    DWORD PTR es:[edi],dx
  417844:	inc    eax
  417845:	pop    ebx
  417846:	sbb    ecx,DWORD PTR [esi-0x5aee50ee]
  41784c:	es dec edi
  41784e:	inc    edi
  41784f:	inc    ecx
  417850:	lods   eax,DWORD PTR ds:[esi]
  417851:	adc    eax,0xb6b5f137
  417856:	jnp    0x4178b4
  417858:	add    al,0x9
  41785a:	mov    ds:0x9832989f,eax
  41785f:	mov    ebp,0x7c01e93b
  417864:	lahf   
  417865:	stos   DWORD PTR es:[edi],eax
  417866:	loop   0x41781d
  417868:	pop    ecx
  417869:	and    eax,edx
  41786b:	stos   BYTE PTR es:[edi],al
  41786c:	hlt    
  41786d:	sbb    al,0xb
  41786f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417870:	outs   dx,BYTE PTR ds:[esi]
  417871:	das    
  417872:	and    eax,0x15559894
  417877:	cdq    
  417878:	imul   edx,DWORD PTR [edi],0xa8cca15a
  41787e:	mov    DWORD PTR [ebp-0x2e],esi
  417881:	lea    eax,[edi-0x5a]
  417884:	scas   al,BYTE PTR es:[edi]
  417885:	xchg   esi,eax
  417886:	xchg   esp,eax
  417887:	mov    dh,0x39
  417889:	cmp    BYTE PTR [edx],cl
  41788b:	in     eax,0x6c
  41788d:	cmp    bh,dh
  41788f:	mov    ds:0xc26d7079,eax
  417894:	clc    
  417895:	and    DWORD PTR [edi-0x53],esi
  417898:	cld    
  417899:	lock jmp 0x41784a
  41789c:	(bad)  
  41789e:	cmp    BYTE PTR ds:0x53c2bf0d,0x64
  4178a5:	mov    DWORD PTR [ecx],edx
  4178a7:	std    
  4178a8:	inc    eax
  4178aa:	add    eax,0x16d55920
  4178af:	cdq    
  4178b0:	je     0x4178a4
  4178b2:	sti    
  4178b3:	fcomip st,st(2)
  4178b5:	jno    0x41788a
  4178b7:	cmp    esi,DWORD PTR [ebp+0x7607fbe]
  4178bd:	stos   BYTE PTR es:[edi],al
  4178be:	cdq    
  4178bf:	xchg   esi,eax
  4178c0:	and    ebp,edi
  4178c2:	fcmovnb st,st(2)
  4178c4:	add    BYTE PTR [eax+0x3494a9f1],al
  4178ca:	mov    al,al
  4178cc:	mov    es,WORD PTR [ebx]
  4178ce:	cmp    BYTE PTR [esi-0x753ffd5f],ah
  4178d4:	push   ds
  4178d5:	inc    ebp
  4178d6:	push   eax
  4178d7:	inc    ecx
  4178d8:	sbb    DWORD PTR [ecx-0xb8c6b62],ebp
  4178de:	loop   0x417917
  4178e0:	add    esi,eax
  4178e2:	or     eax,0x1bedf44c
  4178e7:	jmp    0xe3931532
  4178ec:	mov    al,0x53
  4178ee:	fist   WORD PTR [edi-0x4832fe15]
  4178f4:	retf   
  4178f5:	add    al,0x14
  4178f7:	push   cs
  4178f8:	mov    eax,ds:0x5b0e48f4
  4178fd:	jmp    DWORD PTR [ecx+0x50]
  417900:	nop
  417901:	jl     0x417977
  417903:	fsubp  st(2),st
  417905:	mov    fs,ebp
  417907:	jbe    0x41794c
  417909:	jp     0x4178fa
  41790b:	push   cs
  41790c:	test   al,0xbb
  41790e:	fwait
  41790f:	sub    al,0x94
  417911:	jl     0x41797b
  417913:	(bad)  
  417914:	sub    DWORD PTR [esi],esp
  417916:	lods   eax,DWORD PTR ds:[esi]
  417917:	mov    dh,0xd7
  417919:	je     0x41793e
  41791b:	loopne 0x4178f8
  41791d:	dec    edi
  41791e:	aas    
  41791f:	gs xchg esi,eax
  417921:	lahf   
  417922:	shl    bh,0x21
  417925:	test   al,0x6d
  417927:	js     0x4178c9
  417929:	cmp    edi,DWORD PTR [edx]
  41792b:	sbb    DWORD PTR [edi-0x35722937],0x730607e4
  417935:	pusha  
  417936:	(bad)  
  417937:	push   ecx
  417938:	rol    dl,cl
  41793a:	imul   DWORD PTR [ebp+0x26bba749]
  417940:	cmp    BYTE PTR ds:[ecx-0x6d],dh
  417944:	sbb    DWORD PTR [eax+0x15],ecx
  417947:	jmp    0x39dadc85
  41794c:	cmp    eax,esp
  41794e:	mov    ds:0xaecfe2bd,eax
  417953:	loopne 0x41799b
  417955:	jp     0x41790a
  417957:	call   0xbd88fbce
  41795c:	dec    edi
  41795d:	iret   
  41795e:	lock mov eax,ds:0x2feb343c
  417964:	sbb    BYTE PTR [edx+0x48],cl
  417967:	popf   
  417968:	sub    dh,BYTE PTR ds:0x92bd0d94
  41796e:	fsubr  st(0),st
  417970:	pusha  
  417971:	dec    edx
  417972:	ret    0x4f9c
  417975:	or     bl,al
  417977:	mov    esi,0x57498e44
  41797c:	adc    al,0x13
  41797e:	push   ds
  41797f:	out    dx,al
  417980:	sahf   
  417981:	xor    DWORD PTR [ebx-0x2a8a00c4],0x59f3886b
  41798b:	or     DWORD PTR [ebx-0x685db11a],edx
  417991:	jmp    FWORD PTR [esi]
  417993:	dec    eax
  417994:	gs inc esi
  417996:	loope  0x4179e8
  417998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417999:	scas   eax,DWORD PTR es:[edi]
  41799a:	add    ch,BYTE PTR [edx+0x71]
  41799d:	(bad)  
  41799e:	push   0xc1b3054f
  4179a3:	fcom   DWORD PTR [ecx+0x5a71c1b6]
  4179a9:	ret    0xfedb
  4179ac:	dec    ebp
  4179ad:	(bad)  
  4179ae:	mov    ah,0x8b
  4179b0:	jno    0x4179f5
  4179b2:	push   ds
  4179b3:	xchg   BYTE PTR [ebp+0x2016cf17],dl
  4179b9:	int3   
  4179ba:	out    0xe9,eax
  4179bc:	cmp    BYTE PTR [edx-0x7b],al
  4179bf:	and    cl,BYTE PTR [bp+di]
  4179c2:	cld    
  4179c3:	inc    ebx
  4179c4:	pop    ebx
  4179c5:	sbb    BYTE PTR [ebx],al
  4179c7:	mov    al,0x5
  4179c9:	or     eax,0xb79e48ad
  4179ce:	adc    DWORD PTR [eax+0x492b6d33],0xb
  4179d5:	pop    esi
  4179d6:	gs inc ebx
  4179d8:	add    al,0x35
  4179da:	fwait
  4179db:	push   ss
  4179dc:	js     0x4179df
  4179de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179df:	aam    0x38
  4179e1:	leave  
  4179e2:	mov    ebx,0x5f66d58e
  4179e7:	dec    edi
  4179e8:	sub    BYTE PTR [eax-0x69],dh
  4179eb:	sbb    dh,0xaf
  4179ee:	mov    WORD PTR [ecx],cs
  4179f0:	mov    edx,0xa8f0b7a
  4179f5:	jle    0x4179bd
  4179f7:	retf   
  4179f8:	pop    esp
  4179f9:	ins    DWORD PTR es:[edi],dx
  4179fa:	jno    0x417a49
  4179fc:	imul   esi,eax,0x13
  4179ff:	stc    
  417a00:	dec    edx
  417a01:	stos   DWORD PTR es:[edi],eax
  417a02:	neg    WORD PTR [esi+eiz*1-0x690141f]
  417a0a:	and    DWORD PTR [esi+0x7d],edx
  417a0d:	or     cl,0x83
  417a10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a11:	jb     0x417a21
  417a13:	mov    bh,0x84
  417a15:	inc    ecx
  417a16:	xchg   ebp,eax
  417a17:	cmp    al,0x7f
  417a19:	sbb    eax,0x4608afc6
  417a1e:	out    0xb,al
  417a20:	xor    dh,dh
  417a22:	addr16 fwait
  417a24:	pop    ecx
  417a25:	push   eax
  417a26:	add    DWORD PTR [edx-0x7a],0xc4b51149
  417a2d:	mov    ds:0x3b0dab60,eax
  417a32:	mov    eax,ds:0xd486bc
  417a37:	mov    esp,0x37ea2730
  417a3c:	fwait
  417a3d:	int3   
  417a3e:	xor    bh,0x32
  417a41:	jnp    0x417a71
  417a43:	dec    ecx
  417a44:	xor    eax,0x1872c32e
  417a49:	imul   ebp,DWORD PTR [eax],0xba6b3b74
  417a4f:	or     DWORD PTR [ebx-0x47],esi
  417a52:	mov    bl,0x95
  417a54:	dec    eax
  417a55:	mov    bl,ah
  417a57:	ja     0x417a11
  417a59:	shr    DWORD PTR [esi-0x18851485],cl
  417a5f:	or     BYTE PTR [ecx],dl
  417a61:	add    DWORD PTR [esp+edx*1],ecx
  417a64:	xor    al,0xeb
  417a66:	cli    
  417a67:	sbb    BYTE PTR [esi],al
  417a69:	dec    esi
  417a6a:	fisubr WORD PTR [eax]
  417a6c:	lods   eax,DWORD PTR ds:[esi]
  417a6d:	cdq    
  417a6e:	push   ebx
  417a6f:	jge    0x417a88
  417a71:	mov    bl,0xc5
  417a73:	inc    ebp
  417a74:	adc    eax,0xfcc005eb
  417a79:	xor    esi,esp
  417a7b:	sub    ecx,ecx
  417a7d:	add    edx,esp
  417a7f:	dec    esp
  417a80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a81:	pop    ecx
  417a82:	in     eax,dx
  417a83:	mov    edx,0x2adcb9b9
  417a88:	fcom   QWORD PTR [ecx-0x3f]
  417a8b:	pop    ebx
  417a8c:	(bad)  
  417a8d:	ins    DWORD PTR es:[edi],dx
  417a8e:	push   edi
  417a8f:	and    bh,BYTE PTR [ebx]
  417a91:	or     ecx,esi
  417a93:	retf   0x5b5d
  417a96:	stc    
  417a97:	or     DWORD PTR [edx-0x6c],esp
  417a9a:	fld    TBYTE PTR [eax]
  417a9c:	xchg   ebp,eax
  417a9d:	inc    ecx
  417a9e:	stos   DWORD PTR es:[edi],eax
  417a9f:	repnz repnz xor al,bh
  417aa3:	mov    esi,0xe7e975b3
  417aa8:	mov    esp,0xf72a1644
  417aad:	inc    esi
  417aae:	dec    eax
  417aaf:	jge    0x417b1f
  417ab1:	stos   DWORD PTR es:[edi],eax
  417ab2:	test   BYTE PTR [esi+0x69],dl
  417ab5:	cmp    DWORD PTR [edx-0x6f],esi
  417ab8:	ror    DWORD PTR [eax],1
  417aba:	xchg   DWORD PTR [esi+0x46],edi
  417abd:	mov    cl,0xe
  417abf:	mov    ch,0x76
  417ac1:	pop    ds
  417ac2:	cld    
  417ac3:	int3   
  417ac4:	sbb    bl,0x1
  417ac7:	add    BYTE PTR [ebp-0x29],bl
  417aca:	fwait
  417acb:	mov    dl,0xd8
  417acd:	dec    ebx
  417ace:	pop    ds
  417acf:	sbb    ecx,eax
  417ad1:	push   DWORD PTR [edx-0xb]
  417ad4:	xchg   esp,eax
  417ad5:	mov    ecx,esp
  417ad7:	and    DWORD PTR [edx+0x25],ecx
  417ada:	sar    BYTE PTR [edx],cl
  417adc:	mov    DWORD PTR [eax-0x54],0xb401fd5c
  417ae3:	loope  0x417afa
  417ae5:	sti    
  417ae6:	dec    esp
  417ae7:	add    esi,DWORD PTR [eax-0x44b146c5]
  417aed:	sub    dh,bh
  417aef:	mov    edi,0x1db5c860
  417af4:	pop    eax
  417af5:	fisttp WORD PTR [ebx]
  417af7:	dec    ebp
  417af8:	hlt    
  417af9:	sbb    eax,0x9f9f2e9b
  417afe:	xor    al,0x3d
  417b00:	xor    eax,0xb2c04652
  417b05:	mov    edi,0x36b4176d
  417b0a:	test   BYTE PTR [eax+0x69e3e79b],ah
  417b10:	mov    ds:0x2a4064dd,eax
  417b15:	xor    al,0x87
  417b17:	mov    ds,WORD PTR [eax-0x305eb060]
  417b1d:	jb     0x417b1f
  417b1f:	ins    DWORD PTR es:[edi],dx
  417b20:	in     al,0x74
  417b22:	test   DWORD PTR [eax],ecx
  417b24:	bound  esp,QWORD PTR [esp+ebp*1-0x253b6198]
  417b2b:	push   esp
  417b2c:	mov    ecx,0x48dbe0e7
  417b31:	lds    edx,FWORD PTR [eax]
  417b33:	cdq    
  417b34:	add    al,0xa8
  417b36:	push   edx
  417b37:	jno    0x417b23
  417b39:	jae    0x417b68
  417b3b:	adc    BYTE PTR [edi-0x5b56682b],al
  417b41:	sub    dl,BYTE PTR ds:0xf4e157d6
  417b47:	call   0x4a6d6829
  417b4c:	mov    esp,0x16b1d98a
  417b51:	pop    ds
  417b52:	das    
  417b53:	jg     0x417b11
  417b55:	and    BYTE PTR es:[esi],al
  417b58:	xor    edi,DWORD PTR [eax+0x6d0e697e]
  417b5e:	test   cl,ah
  417b60:	xchg   BYTE PTR [edi+0x67],dl
  417b63:	mov    eax,ds:0xb6fdd68f
  417b68:	leave  
  417b69:	mov    edx,fs
  417b6b:	(bad)  
  417b6d:	inc    edx
  417b6e:	lods   al,BYTE PTR ds:[esi]
  417b6f:	cmp    al,BYTE PTR [esi+0x4012b9cd]
  417b75:	dec    esi
  417b76:	xchg   esi,eax
  417b77:	xor    dl,BYTE PTR [eax]
  417b79:	pop    edx
  417b7a:	push   ebp
  417b7b:	xor    eax,0x225a3085
  417b80:	int    0xd7
  417b82:	scas   eax,DWORD PTR es:[edi]
  417b83:	inc    ebp
  417b84:	add    eax,DWORD PTR [edx+0x7cf1925b]
  417b8a:	test   BYTE PTR [esi-0x61],bl
  417b8d:	mov    cl,0x89
  417b8f:	cmp    eax,0xaea074cb
  417b94:	mov    cl,0xdb
  417b96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b97:	mov    DWORD PTR [ecx-0x5d],edx
  417b9a:	mov    cl,0x74
  417b9c:	add    eax,0xc81aea66
  417ba1:	lea    edx,[ebp-0x616fe319]
  417ba7:	xor    eax,0xbec378f9
  417bac:	dec    edx
  417bad:	call   0x6078:0xae77c796
  417bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bb5:	or     ebp,DWORD PTR [eax+0x7b]
  417bb8:	out    0x9f,al
  417bba:	xor    DWORD PTR [esi+0x301ec94e],edi
  417bc0:	sti    
  417bc1:	fld    QWORD PTR [esp+esi*1]
  417bc4:	rcl    ebx,cl
  417bc6:	or     ch,BYTE PTR [edx]
  417bc8:	or     eax,0x866e2c66
  417bcd:	add    dh,ah
  417bcf:	push   eax
  417bd0:	xchg   esi,eax
  417bd1:	xor    DWORD PTR [ebp-0x69],0xb52a6968
  417bd8:	pop    ss
  417bd9:	lods   al,BYTE PTR ds:[esi]
  417bda:	aad    0xaf
  417bdc:	in     al,dx
  417bdd:	ret    
  417bde:	arpl   WORD PTR [ebx],sp
  417be0:	js     0x417be9
  417be2:	mov    esi,ecx
  417be4:	lea    esp,[esi-0x62]
  417be7:	xchg   esi,eax
  417be8:	push   eax
  417be9:	ja     0x417b92
  417beb:	cmp    cl,BYTE PTR [edi+eiz*4]
  417bee:	push   ebx
  417bef:	jmp    0x5d36:0xa93eddec
  417bf6:	into   
  417bf7:	adc    bh,BYTE PTR ds:[edx]
  417bfa:	aam    0x45
  417bfc:	adc    eax,0x9292f217
  417c01:	retf   0xd197
  417c04:	adc    ecx,DWORD PTR [ebp+0x7c427e60]
  417c0a:	mov    ds:0x8612161,eax
  417c0f:	inc    ecx
  417c10:	stos   DWORD PTR es:[edi],eax
  417c11:	cs js  0x417bd0
  417c14:	nop
  417c15:	or     cl,BYTE PTR [edx-0xf]
  417c18:	(bad)  
  417c19:	lods   eax,DWORD PTR ds:[esi]
  417c1a:	mov    eax,0xe11ab5af
  417c1f:	sub    BYTE PTR [eax+0x50],0xd9
  417c23:	aaa    
  417c24:	lahf   
  417c25:	hlt    
  417c26:	lds    eax,FWORD PTR [ebx]
  417c28:	fs sti 
  417c2a:	xor    DWORD PTR [ebp-0x4e],eax
  417c2d:	mov    al,ds:0x5e6f90e0
  417c32:	out    0xe1,al
  417c34:	dec    ebx
  417c35:	mov    ch,0xe3
  417c37:	ds call 0xbeb8:0x4bdd13bc
  417c3f:	adc    BYTE PTR [ecx+0x6],cl
  417c42:	gs dec eax
  417c44:	mov    edx,DWORD PTR [ebp+0x68]
  417c47:	jle    0x417c0d
  417c49:	cmp    DWORD PTR [eax],ebx
  417c4b:	push   0x41
  417c4d:	mov    ds:0xaf7537e5,al
  417c52:	fild   DWORD PTR [ecx-0x46bf93d7]
  417c58:	sar    esp,cl
  417c5a:	fsubr  DWORD PTR [edx+0x6a]
  417c5d:	pop    edi
  417c5e:	push   ebx
  417c5f:	push   ebx
  417c60:	imul   ecx,DWORD PTR [esi-0x79],0x1d
  417c64:	add    eax,0xd47fa9e6
  417c69:	mov    ds:0xe3ac97e2,eax
  417c6e:	push   esp
  417c6f:	outs   dx,BYTE PTR ds:[esi]
  417c70:	mov    ebx,0xe512b054
  417c75:	or     eax,0x6037ddd8
  417c7a:	dec    ebp
  417c7b:	adc    ch,cl
  417c7d:	sub    eax,0x5772e5f2
  417c82:	(bad)  
  417c84:	dec    eax
  417c85:	test   DWORD PTR [esi],ebx
  417c87:	sbb    ah,al
  417c89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c8a:	popa   
  417c8b:	ret    
  417c8c:	jle    0x417cfa
  417c8e:	adc    ch,al
  417c90:	jle    0x417cce
  417c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c93:	add    dl,BYTE PTR [ecx+eax*4+0x639b13df]
  417c9a:	push   esi
  417c9b:	addr16 int3 
  417c9d:	(bad)  
  417c9e:	hlt    
  417c9f:	clc    
  417ca0:	fwait
  417ca1:	ret    0x8d28
  417ca4:	cld    
  417ca5:	dec    esp
  417ca6:	add    BYTE PTR [ecx-0xc],dh
  417ca9:	pop    esp
  417caa:	or     esp,esp
  417cac:	aad    0x5a
  417cae:	push   DWORD PTR ds:0x14bf0574
  417cb4:	jg     0x417c61
  417cb6:	cmp    DWORD PTR [ebx+edi*2],esp
  417cb9:	xchg   ecx,eax
  417cba:	inc    edx
  417cbb:	ret    0xc3ae
  417cbe:	xor    ecx,DWORD PTR [esi+0x56200446]
  417cc4:	call   0x383c:0xdc8abdf1
  417ccb:	repz cmc 
  417ccd:	mov    al,BYTE PTR [ecx+0x1c]
  417cd0:	retf   0x355c
  417cd3:	jno    0x417c9b
  417cd5:	sbb    dl,cl
  417cd7:	ret    
  417cd8:	cdq    
  417cd9:	cmc    
  417cda:	push   esp
  417cdb:	int3   
  417cdc:	fwait
  417cdd:	push   edi
  417cde:	aad    0xa5
  417ce0:	aam    0x6e
  417ce2:	cmp    bh,BYTE PTR [edi]
  417ce4:	call   0x4132:0x5e49fce2
  417ceb:	mov    ch,0x22
  417ced:	cdq    
  417cee:	cmp    eax,0xac0fb939
  417cf3:	(bad)  
  417cf4:	popa   
  417cf5:	adc    edx,DWORD PTR [ebx]
  417cf7:	mov    dl,0xb9
  417cf9:	add    esp,DWORD PTR [ebp-0x26]
  417cfc:	fisubr DWORD PTR [eax]
  417cfe:	scas   al,BYTE PTR es:[edi]
  417cff:	shl    edi,cl
  417d01:	sub    BYTE PTR [edi],0x18
  417d04:	push   ss
  417d05:	pushf  
  417d06:	int    0xc0
  417d08:	pop    ss
  417d09:	sahf   
  417d0a:	iret   
  417d0b:	stos   BYTE PTR es:[edi],al
  417d0c:	test   BYTE PTR [ebx+0x5a8d22df],al
  417d12:	iret   
  417d13:	mov    WORD PTR [ecx+ecx*8],fs
  417d16:	xchg   ebp,eax
  417d17:	xchg   esp,eax
  417d18:	cmp    ecx,DWORD PTR [eax+0x82952c5]
  417d1e:	(bad)  
  417d1f:	gs mov edx,0x68c95561
  417d25:	retf   0xd754
  417d28:	retf   
  417d29:	test   ax,0xd1f5
  417d2d:	or     bh,BYTE PTR [edi+0x7f]
  417d30:	sbb    esi,eax
  417d32:	dec    eax
  417d33:	arpl   bp,dx
  417d35:	sbb    eax,0x9b249e90
  417d3a:	add    ebx,DWORD PTR [edx-0x285fa8e4]
  417d40:	ror    DWORD PTR [ebp+0x1f88d2e4],0xca
  417d47:	jae    0x417d71
  417d49:	sbb    bl,dl
  417d4b:	test   BYTE PTR [eax+eiz*8],ah
  417d4e:	lods   al,BYTE PTR ds:[esi]
  417d4f:	jle    0x417dac
  417d51:	das    
  417d52:	mov    edi,DWORD PTR [esi+0x55c17f00]
  417d58:	std    
  417d59:	ret    0xd82
  417d5c:	stc    
  417d5d:	pusha  
  417d5e:	mov    dh,0x30
  417d60:	xor    edi,DWORD PTR [edi+ebx*4+0x47]
  417d64:	ficom  DWORD PTR [eax+0x7a]
  417d67:	sub    DWORD PTR [ebp+0x27875c42],eax
  417d6d:	xor    al,0xdb
  417d6f:	xchg   ecx,eax
  417d70:	lods   al,BYTE PTR ds:[esi]
  417d71:	call   0x493d4211
  417d76:	jb     0x417d29
  417d78:	mov    eax,ds:0x31e44100
  417d7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d7e:	pop    esi
  417d7f:	or     dh,BYTE PTR [ebx]
  417d81:	ret    
  417d82:	jp     0x417dac
  417d84:	add    esi,eax
  417d86:	add    DWORD PTR [edx-0x11],edx
  417d89:	test   DWORD PTR [eax+eax*8],ebp
  417d8c:	cmp    bl,0x5d
  417d8f:	mov    ds:0x743fec0b,al
  417d94:	das    
  417d95:	dec    ecx
  417d96:	add    DWORD PTR [ebx-0x78],ebx
  417d99:	jmp    0x8f5f:0x2c2406a1
  417da0:	inc    ebp
  417da1:	jmp    0xb2b3:0xb0dd695
  417da8:	sti    
  417da9:	xchg   esi,eax
  417daa:	jl     0x417d79
  417dac:	jl     0x417d89
  417dae:	inc    ebp
  417daf:	xchg   DWORD PTR [esi-0x62],ecx
  417db2:	cmp    esi,DWORD PTR [ecx+eiz*1-0x10]
  417db6:	cli    
  417db7:	sub    ch,dl
  417db9:	jge    0x417d69
  417dbb:	xchg   BYTE PTR [esi-0x61],ah
  417dbe:	mov    edx,0x36d2eb9e
  417dc3:	fs push 0xb761b5b8
  417dc9:	lods   eax,DWORD PTR ds:[esi]
  417dca:	repnz in al,0xc3
  417dcd:	cli    
  417dce:	and    ah,bl
  417dd0:	aas    
  417dd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dd2:	or     al,0x70
  417dd4:	sub    BYTE PTR [ebp+0x5a352486],bh
  417dda:	xchg   edi,eax
  417ddb:	adc    cl,BYTE PTR [ecx+0x6]
  417dde:	cmp    BYTE PTR [ecx+0x7f],al
  417de1:	and    BYTE PTR [edx-0x75],dl
  417de4:	jne    0x417de6
  417de6:	mov    eax,ds:0x2d5b2d28
  417deb:	(bad)  
  417ded:	cmp    DWORD PTR [ebx+0x7ee7358],ebx
  417df3:	mov    dh,0x35
  417df5:	adc    bh,dl
  417df7:	stos   DWORD PTR es:[edi],eax
  417df8:	fldcw  WORD PTR [eax+0x1fcdb17c]
  417dfe:	mov    al,0x3
  417e00:	rcl    DWORD PTR [edx+0x21],0xd5
  417e04:	fild   QWORD PTR [esi]
  417e06:	push   0xd094ef
  417e0b:	mov    ebx,0x4f169bc2
  417e10:	sbb    al,0xab
  417e12:	xchg   ebx,eax
  417e13:	add    al,0x5b
  417e15:	inc    ebp
  417e16:	outs   dx,DWORD PTR ds:[esi]
  417e17:	mov    ?,WORD PTR [esi+0x5f]
  417e1a:	jl     0x417e26
  417e1c:	mov    ds:0xdde77d07,al
  417e21:	lea    ecx,[ecx+0x66de3116]
  417e27:	push   esi
  417e28:	in     eax,0xe2
  417e2a:	mov    WORD PTR [ebx-0x62],?
  417e2d:	mov    ebx,0xd431f329
  417e32:	out    0xe5,al
  417e34:	out    0xb4,al
  417e36:	js     0x417eb1
  417e38:	loop   0x417e4a
  417e3a:	test   BYTE PTR [eax+ecx*2],cl
  417e3d:	(bad)  
  417e3f:	lahf   
  417e40:	lods   eax,DWORD PTR ds:[esi]
  417e41:	jecxz  0x417e1d
  417e43:	out    dx,eax
  417e44:	sbb    ecx,esi
  417e46:	pop    esp
  417e47:	jno    0x417eb4
  417e49:	in     eax,0x94
  417e4b:	xor    eax,0x639c26d1
  417e50:	and    dh,BYTE PTR [eax-0x7ed919ec]
  417e56:	fisubr WORD PTR [ecx]
  417e58:	loop   0x417ea9
  417e5a:	popf   
  417e5b:	mov    eax,ds:0x423810f5
  417e60:	(bad)  
  417e61:	push   ebx
  417e62:	adc    eax,0x8c980fc8
  417e67:	adc    eax,0x4ba759ff
  417e6c:	iret   
  417e6d:	test   DWORD PTR [eax+0x72],edi
  417e70:	push   es
  417e71:	cmp    cl,BYTE PTR [edi+ebx*8+0x23795bb5]
  417e78:	dec    edx
  417e79:	cld    
  417e7a:	mov    ebp,0xb0c19fae
  417e7f:	loope  0x417e70
  417e81:	fcmove st,st(0)
  417e83:	outs   dx,DWORD PTR ds:[esi]
  417e84:	test   al,0x55
  417e86:	adc    BYTE PTR [esi+0x1c],ch
  417e89:	push   esi
  417e8a:	sbb    DWORD PTR [ebx],ebp
  417e8c:	in     al,0x36
  417e8e:	add    al,0xf8
  417e90:	pop    esp
  417e91:	inc    ebx
  417e92:	adc    al,0x45
  417e94:	(bad)  [esi+edx*1+0x6182d734]
  417e9b:	push   esp
  417e9c:	retf   
  417e9d:	lods   al,BYTE PTR ds:[esi]
  417e9e:	xchg   esi,eax
  417e9f:	sbb    eax,0x1cb0c798
  417ea4:	imul   edi,edi,0xffffffc3
  417ea7:	(bad)  
  417ea8:	ins    DWORD PTR es:[edi],dx
  417ea9:	jp     0x417e6f
  417eab:	dec    esi
  417eac:	and    al,0x79
  417eae:	in     eax,dx
  417eaf:	shl    ebx,cl
  417eb1:	jae    0x417e78
  417eb3:	cmp    eax,0x9eeb8f19
  417eb8:	imul   ebp,DWORD PTR [ebx+0x109bc6d],0x502ecea8
  417ec2:	loope  0x417ea6
  417ec4:	xchg   edi,eax
  417ec5:	add    DWORD PTR [ebx+0x67],edi
  417ec8:	inc    ecx
  417ec9:	mov    dh,0x8
  417ecb:	outs   dx,BYTE PTR ds:[esi]
  417ecc:	je     0x417e7d
  417ece:	les    esi,FWORD PTR [edi-0x31204dde]
  417ed4:	mov    al,ds:0xef83c4aa
  417ed9:	sahf   
  417eda:	or     BYTE PTR [eax-0x37dfe67e],bh
  417ee0:	daa    
  417ee1:	inc    esi
  417ee2:	ds (bad) 
  417ee4:	mov    eax,ds:0x18de22e1
  417ee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417eea:	sbb    ah,BYTE PTR [esp+eax*2]
  417eed:	pusha  
  417eee:	(bad)  
  417eef:	dec    edi
  417ef0:	shl    DWORD PTR [ebx-0x16],1
  417ef3:	push   ebx
  417ef4:	ror    BYTE PTR [ecx],1
  417ef6:	mov    cl,dh
  417ef8:	pop    esi
  417ef9:	jnp    0x417ebd
  417efb:	and    esi,DWORD PTR [ebp-0x3530237b]
  417f01:	call   0x49e936
  417f06:	loop   0x417e8f
  417f08:	push   0xfffffff8
  417f0a:	sub    al,0xe1
  417f0c:	into   
  417f0d:	sub    al,0xf1
  417f0f:	and    DWORD PTR [eax+0x6f],ebx
  417f12:	mov    esp,0x969f6d17
  417f17:	adc    ecx,DWORD PTR ds:0x651de64d
  417f1d:	adc    eax,0x9761ca5f
  417f22:	call   0xc6e7:0xd11a6488
  417f29:	push   ss
  417f2a:	and    ah,BYTE PTR [edx-0x41f17e65]
  417f30:	mov    ah,0x7b
  417f32:	inc    esi
  417f33:	test   BYTE PTR [edi+0x360a8d3b],ch
  417f39:	imul   ebp,DWORD PTR [esi+0x2],0x92900b65
  417f40:	xor    DWORD PTR [ebp-0x562117c2],esp
  417f46:	dec    ebp
  417f47:	add    bh,BYTE PTR [edx-0x2022979c]
  417f4d:	mov    bl,0xfe
  417f4f:	js     0x417f3a
  417f51:	mov    bh,0x42
  417f53:	and    DWORD PTR [ebx],ebx
  417f55:	sbb    BYTE PTR [edi-0x38],0xfb
  417f59:	push   0xffffff87
  417f5b:	fld    DWORD PTR [edi-0x26]
  417f5e:	add    eax,0x3336f2fa
  417f63:	inc    ebx
  417f64:	pusha  
  417f65:	idiv   bl
  417f67:	pop    eax
  417f68:	(bad)  
  417f69:	outs   dx,BYTE PTR ds:[esi]
  417f6a:	fs call 0x50554ca2
  417f70:	ret    
  417f71:	out    dx,eax
  417f72:	loop   0x417f20
  417f74:	in     eax,0xa4
  417f76:	fdivr  st(4),st
  417f78:	clc    
  417f79:	dec    eax
  417f7a:	test   al,0xd3
  417f7c:	ja     0x417f8c
  417f7e:	ja     0x417f4d
  417f80:	jmp    0x85c:0xad18b3ad
  417f87:	mov    al,ds:0xcb09851b
  417f8c:	xor    ecx,ebx
  417f8e:	leave  
  417f8f:	sub    dl,bl
  417f91:	mov    ecx,0x71da0836
  417f96:	mov    bl,0x55
  417f98:	aam    0xe9
  417f9a:	and    DWORD PTR [ecx-0x652e8aa1],edi
  417fa0:	(bad)  
  417fa1:	loop   0x417fda
  417fa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fa4:	enter  0x220f,0xc0
  417fa8:	call   DWORD PTR [esi]
  417faa:	rsqrtps xmm2,xmm1
  417fad:	push   cs
  417fae:	scas   eax,DWORD PTR es:[edi]
  417faf:	xchg   ebp,eax
  417fb0:	and    eax,0x54eb71ee
  417fb5:	jb     0x418012
  417fb7:	es jne 0x417f94
  417fba:	xchg   edx,eax
  417fbb:	sbb    eax,0x71c15054
  417fc0:	int3   
  417fc1:	jecxz  0x41801e
  417fc3:	mov    cl,0xf9
  417fc5:	lea    ebx,[ecx-0x246f1468]
  417fcb:	inc    ebp
  417fcc:	add    eax,0xc5daf3e9
  417fd1:	add    al,BYTE PTR [eax+0x22a81e1d]
  417fd7:	idiv   DWORD PTR [ebp+0x59f117c6]
  417fdd:	cli    
  417fde:	ret    0x8b06
  417fe1:	inc    edi
  417fe2:	and    ah,BYTE PTR [ecx-0x47]
  417fe5:	push   eax
  417fe6:	shl    DWORD PTR [esi-0x7b954a9d],0xf2
  417fed:	jmp    0x417f9d
  417fef:	jmp    0x417f8d
  417ff1:	mov    ds:0x49bf7aa4,al
  417ff6:	test   DWORD PTR [edi],edi
  417ff8:	jnp    0x418067
  417ffa:	fld    DWORD PTR [edx+edx*8-0x1]
  417ffe:	ins    BYTE PTR es:[edi],dx
  417fff:	mov    ecx,0xcae8f0fa
  418004:	jp     0x41806b
  418006:	inc    eax
  418007:	adc    DWORD PTR [esi-0x7e],ecx
  41800a:	dec    esp
  41800b:	adc    DWORD PTR [edi-0x3e],ebp
  41800e:	int    0xfd
  418010:	std    
  418011:	hlt    
  418012:	push   cs
  418013:	mov    dl,0x12
  418015:	mov    ecx,0x2834484
  41801a:	iret   
  41801b:	dec    esi
  41801c:	inc    edx
  41801d:	push   esp
  41801e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41801f:	dec    ebx
  418020:	sub    BYTE PTR [ebx-0x36920b8a],al
  418026:	repnz int3 
  418028:	inc    ecx
  418029:	and    eax,DWORD PTR [ecx+0x6d]
  41802c:	iret   
  41802d:	loopne 0x418020
  41802f:	div    BYTE PTR [ecx-0x44579152]
  418035:	mov    esp,0xddc87950
  41803a:	xchg   ebx,eax
  41803b:	in     al,dx
  41803c:	pop    esi
  41803d:	sti    
  41803e:	lahf   
  41803f:	pop    eax
  418040:	jecxz  0x41803c
  418042:	xchg   ebx,eax
  418043:	or     BYTE PTR [esi-0x16],dh
  418046:	inc    ecx
  418047:	sub    edi,DWORD PTR [ebp+0x4c]
  41804a:	mov    bl,0xbf
  41804c:	stos   DWORD PTR es:[edi],eax
  41804d:	push   cs
  41804e:	call   0xa0cc:0x77280c27
  418055:	mov    eax,ds:0x8dd66536
  41805a:	lds    ebp,FWORD PTR [ebx+0x22]
  41805d:	mov    cl,0x1d
  41805f:	(bad)  [ecx]
  418061:	cmp    BYTE PTR [edx],bl
  418063:	push   ebp
  418064:	push   ecx
  418065:	je     0x418034
  418067:	in     eax,0x0
  418069:	pop    eax
  41806a:	(bad)  
  41806b:	fistp  WORD PTR [esi+eax*2]
  41806e:	out    0x51,eax
  418070:	ds aad 0x21
  418073:	jb     0x418082
  418075:	fdivr  st(5),st
  418077:	popf   
  418078:	and    ecx,DWORD PTR fs:[edx-0x5b898ec3]
  41807f:	repz xor al,0x33
  418082:	add    DWORD PTR [ecx],esi
  418084:	std    
  418085:	out    dx,eax
  418086:	nop
  418087:	fwait
  418088:	ret    
  418089:	les    ecx,FWORD PTR [edi+0x295fc639]
  41808f:	dec    edi
  418090:	ins    BYTE PTR es:[edi],dx
  418091:	fnsave [edx]
  418093:	stos   BYTE PTR es:[edi],al
  418094:	push   edi
  418095:	cmp    ah,BYTE PTR [edx+0x204782eb]
  41809b:	cmp    eax,0x97fe1b5c
  4180a0:	rcl    DWORD PTR ds:0x25f5d5ee,1
  4180a6:	add    esi,eax
  4180a8:	loopne 0x41808b
  4180aa:	jo     0x41805f
  4180ac:	inc    edi
  4180ad:	xchg   ebp,eax
  4180ae:	mov    fs,WORD PTR [eax]
  4180b0:	dec    esi
  4180b1:	cmp    BYTE PTR [bx+di],cl
  4180b4:	(bad)
  4180b7:	or     DWORD PTR [esi-0x31d317f3],esp
  4180bd:	ins    DWORD PTR es:[edi],dx
  4180be:	adc    BYTE PTR [ecx+0x4284c93a],bl
  4180c4:	push   ds
  4180c5:	lahf   
  4180c6:	inc    esp
  4180c7:	and    ecx,DWORD PTR [ebp+0x53a32302]
  4180cd:	cwde   
  4180ce:	es imul ecx,ebp,0xffffffb6
  4180d2:	inc    esi
  4180d3:	bound  esi,QWORD PTR [ebp+0x30]
  4180d6:	inc    esi
  4180d7:	jb     0x41812b
  4180d9:	sbb    BYTE PTR [eax-0x69],dl
  4180dc:	cdq    
  4180dd:	mov    al,0x2c
  4180df:	jne    0x41808b
  4180e1:	into   
  4180e2:	pop    ds
  4180e3:	and    DWORD PTR [esi-0x37],edi
  4180e6:	shl    BYTE PTR [ebx],1
  4180e8:	add    DWORD PTR [edx-0x313baef3],edx
  4180ee:	jbe    0x4180ad
  4180f0:	sub    DWORD PTR [eax],esi
  4180f2:	fs sub dh,bl
  4180f5:	in     eax,dx
  4180f6:	pop    eax
  4180f7:	cmc    
  4180f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180f9:	jns    0x418138
  4180fb:	xchg   BYTE PTR [esp-0x7ab84575],dh
  418102:	dec    esi
  418103:	cmp    edi,ebp
  418105:	jne    0x41813e
  418107:	mov    ecx,0x7feebe5a
  41810c:	cmp    BYTE PTR [esi+edx*4-0x39],al
  418110:	mov    ch,0x2f
  418112:	ds push esp
  418114:	mov    ah,0x39
  418116:	jecxz  0x4180e5
  418118:	pop    DWORD PTR [esi+edx*2]
  41811b:	jge    0x41810c
  41811d:	das    
  41811e:	loop   0x418123
  418120:	mov    eax,ds:0x64f0cdce
  418125:	xchg   esi,eax
  418126:	div    BYTE PTR ds:0xf8681289
  41812c:	jmp    0x84c0:0x1f2cab0c
  418133:	cmp    BYTE PTR [edx+eax*2],bl
  418136:	out    0xd3,eax
  418138:	imul   esi,esp,0xa01bdefb
  41813e:	cmp    dl,BYTE PTR [edi-0x3a49bc19]
  418144:	retf   0x7374
  418147:	lea    esp,[esi+0x742d37ba]
  41814d:	scas   al,BYTE PTR es:[edi]
  41814e:	push   0x55
  418150:	test   al,0xa2
  418152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418153:	hlt    
  418154:	lds    edi,FWORD PTR [esi]
  418156:	nop
  418157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418158:	mov    ecx,0x936f9583
  41815d:	sbb    al,0xe4
  41815f:	aaa    
  418160:	push   es
  418161:	ins    BYTE PTR es:[edi],dx
  418162:	ret    
  418163:	and    BYTE PTR [esi-0x55834db],bh
  418169:	xchg   edx,eax
  41816a:	sub    ebx,ebp
  41816c:	aaa    
  41816d:	push   esi
  41816e:	mov    bh,0xa5
  418170:	aad    0xae
  418172:	push   es
  418173:	mov    esp,0x3ad7b745
  418178:	ret    0x2f67
  41817b:	pop    es
  41817c:	and    DWORD PTR [eax-0x80],ecx
  41817f:	out    dx,al
  418180:	aaa    
  418181:	enter  0x6b3d,0x2c
  418185:	xor    BYTE PTR ds:0xeb077851,0x8d
  41818c:	pop    esp
  41818d:	mov    bl,BYTE PTR [ecx-0x6d]
  418190:	jb     0x41812e
  418192:	(bad)
  418196:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418197:	and    eax,0x3d538fcf
  41819c:	sti    
  41819d:	fistp  QWORD PTR [esi+0x4a8276e2]
  4181a3:	mov    edx,0xef7312fd
  4181a8:	aad    0x87
  4181aa:	std    
  4181ab:	adc    ebx,DWORD PTR [ebp-0x1b]
  4181ae:	dec    ebx
  4181af:	sub    eax,DWORD PTR [ebx-0x4f]
  4181b2:	int3   
  4181b3:	into   
  4181b4:	mov    ds:0xd2b4566b,eax
  4181b9:	pop    ecx
  4181ba:	mov    edx,0x94aa752f
  4181bf:	mov    eax,ds:0x94af0fc
  4181c4:	push   0x72208345
  4181c9:	test   eax,0x7e409f6a
  4181ce:	dec    ebx
  4181cf:	cmp    DWORD PTR [ebx-0x7b7499be],esi
  4181d5:	cld    
  4181d6:	mov    dl,0x56
  4181d8:	adc    esi,DWORD PTR ss:[ecx+0x34a3da0d]
  4181df:	add    eax,ebp
  4181e1:	jb     0x41817c
  4181e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181e4:	push   cs
  4181e5:	mov    eax,0xe3956711
  4181ea:	cwde   
  4181eb:	sbb    eax,DWORD PTR [ecx]
  4181ed:	lods   al,BYTE PTR ds:[esi]
  4181ee:	push   esp
  4181ef:	dec    edx
  4181f0:	jo     0x41817c
  4181f2:	retf   0x7678
  4181f5:	les    eax,FWORD PTR [esi-0x26]
  4181f8:	inc    ebp
  4181f9:	mov    al,0xff
  4181fb:	lds    edi,FWORD PTR [esi-0x91e369]
  418201:	mov    cl,0x11
  418203:	mov    ecx,0x4af52b53
  418208:	mov    al,ds:0xe6f79abc
  41820d:	loop   0x418243
  41820f:	push   ds
  418210:	jno    0x418231
  418212:	xchg   dl,dh
  418214:	(bad)  
  418215:	fadd   st,st(0)
  418217:	sti    
  418218:	cmc    
  418219:	ror    DWORD PTR [ebx+0x60],0xc8
  41821d:	jno    0x41825a
  41821f:	xor    eax,0x706b5d2a
  418224:	jg     0x418244
  418226:	xchg   edi,eax
  418227:	mov    ebp,0x6bb537cf
  41822c:	cmc    
  41822d:	xor    BYTE PTR [ebx+0x1ae6027a],0xe6
  418234:	xchg   ebx,eax
  418235:	mov    WORD PTR cs:[ecx],gs
  418238:	jg     0x418221
  41823a:	in     eax,dx
  41823b:	adc    eax,0xd1b94fdf
  418240:	dec    ebp
  418241:	mov    al,0xb6
  418243:	push   ecx
  418244:	pushf  
  418245:	jae    0x418228
  418247:	hlt    
  418248:	xchg   edx,eax
  418249:	popa   
  41824a:	mov    DWORD PTR [ebp+0x4d1ad28c],ebp
  418250:	xchg   BYTE PTR [ebp-0x2c8df4d8],ch
  418256:	(bad)  
  418258:	(bad)
  41825b:	call   0xed83c01
  418260:	or     bh,BYTE PTR [ebx+0x8446fbd]
  418266:	outs   dx,DWORD PTR ds:[esi]
  418267:	fidiv  DWORD PTR [ecx-0x1a]
  41826a:	(bad)  
  41826b:	das    
  41826c:	mov    ch,0x63
  41826e:	mov    edx,0xcd264f6a
  418273:	repnz outs dx,DWORD PTR ds:[esi]
  418275:	push   0xb0cff73
  41827a:	dec    ebx
  41827b:	lahf   
  41827c:	jge    0x4182ea
  41827e:	cmc    
  41827f:	stos   BYTE PTR es:[edi],al
  418280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418281:	clc    
  418282:	loop   0x418285
  418284:	add    esi,ebp
  418286:	test   esi,eax
  418288:	stos   BYTE PTR es:[edi],al
  418289:	push   es
  41828a:	int3   
  41828b:	pusha  
  41828c:	adc    eax,0x2cb04a41
  418291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418292:	in     eax,0x92
  418294:	jg     0x4182a9
  418296:	je     0x418219
  418298:	sti    
  418299:	mov    bl,0x92
  41829b:	inc    edx
  41829c:	lods   eax,DWORD PTR ds:[esi]
  41829d:	sahf   
  41829e:	sahf   
  41829f:	and    bl,ah
  4182a1:	in     al,dx
  4182a2:	and    al,0x7e
  4182a4:	cmp    esp,DWORD PTR [esi+0xef41340]
  4182aa:	arpl   WORD PTR ds:0x71a4520a,si
  4182b0:	fcomp  st(2)
  4182b2:	add    BYTE PTR [ebp+eiz*1-0x24fbb51c],0xa8
  4182ba:	jle    0x418275
  4182bc:	inc    ebp
  4182bd:	mov    eax,ds:0xba2cf8a8
  4182c2:	std    
  4182c3:	dec    ebp
  4182c4:	or     DWORD PTR [eax],ecx
  4182c6:	stos   DWORD PTR es:[edi],eax
  4182c7:	adc    bl,BYTE PTR [ebx-0x26]
  4182ca:	cli    
  4182cb:	cmc    
  4182cc:	adc    DWORD PTR [ecx],ebx
  4182ce:	daa    
  4182cf:	dec    edi
  4182d0:	popa   
  4182d1:	adc    eax,0x67a85b90
  4182d6:	leave  
  4182d7:	inc    ebp
  4182d8:	fnsave [ecx-0x58]
  4182db:	stos   BYTE PTR es:[edi],al
  4182dc:	lods   eax,DWORD PTR ds:[esi]
  4182dd:	retf   0xcf5a
  4182e0:	int3   
  4182e1:	pop    edx
  4182e2:	jno    0x41829d
  4182e4:	xchg   ecx,eax
  4182e5:	(bad)  
  4182e6:	js     0x4182e5
  4182e8:	enter  0x69f6,0xc4
  4182ec:	in     eax,0x85
  4182ee:	int    0xa5
  4182f0:	sub    eax,0xefc52bf
  4182f5:	pop    esp
  4182f6:	inc    esp
  4182f7:	int    0x9
  4182f9:	aas    
  4182fa:	rcl    esp,cl
  4182fc:	mov    esi,cs
  4182fe:	mov    eax,ds:0x34703697
  418303:	dec    ebx
  418304:	imul   BYTE PTR [esi-0xb]
  418307:	adc    BYTE PTR [eax-0x1a],0xd
  41830b:	inc    ebx
  41830c:	inc    ebx
  41830d:	jnp    0x41832e
  41830f:	enter  0xf4a4,0xf2
  418313:	outs   dx,BYTE PTR ds:[esi]
  418314:	ja     0x41838a
  418316:	mov    eax,0x712110a
  41831b:	iret   
  41831c:	adc    BYTE PTR [ecx+0x27],dh
  41831f:	imul   edx,DWORD PTR [edx],0x3e
  418322:	shl    DWORD PTR [ebx-0x64],cl
  418325:	and    al,0xd1
  418327:	mov    al,BYTE PTR [ebx+eax*4+0x2afee2b1]
  41832e:	cmp    eax,0x4e4753aa
  418333:	add    DWORD PTR [ebx+0x29ff8d46],edx
  418339:	xchg   edx,eax
  41833a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41833b:	cmp    DWORD PTR [ebp+0x1a38945],eax
  418341:	sbb    eax,0xe0179124
  418346:	ins    DWORD PTR es:[edi],dx
  418347:	das    
  418348:	mov    al,ds:0x8541c14c
  41834d:	push   ds
  41834e:	cmp    BYTE PTR [esp+ebp*8-0x53],dh
  418352:	sbb    ecx,DWORD PTR [eax-0x640768a6]
  418358:	sbb    eax,ecx
  41835a:	cdq    
  41835b:	inc    ebp
  41835c:	aas    
  41835d:	paddusb mm1,QWORD PTR [ebx]
  418360:	mov    eax,0x7a67a4bc
  418365:	stos   DWORD PTR es:[edi],eax
  418366:	rcl    BYTE PTR [ebx],0x67
  418369:	mov    eax,0x5a5ec355
  41836e:	test   DWORD PTR [eax-0x68],edx
  418371:	rol    BYTE PTR [ebx],0xef
  418374:	ret    0x587c
  418377:	cmp    eax,0xa49a7648
  41837c:	sbb    esp,0xffffffbc
  41837f:	adc    DWORD PTR [esi-0x25f4fcef],edx
  418385:	ins    DWORD PTR es:[edi],dx
  418386:	adc    BYTE PTR [edx+0x7c88af93],dl
  41838c:	cdq    
  41838d:	mov    ds:0x8906e61e,al
  418392:	and    eax,0xa7a07749
  418397:	div    DWORD PTR [edi]
  418399:	loope  0x4183a1
  41839b:	pop    ebx
  41839c:	and    al,BYTE PTR [ebp+0x66]
  41839f:	mov    edi,0x397cba58
  4183a4:	stos   BYTE PTR es:[edi],al
  4183a5:	ret    0x3aa5
  4183a8:	lahf   
  4183a9:	pop    edi
  4183aa:	hlt    
  4183ab:	xor    eax,DWORD PTR [esp+esi*8]
  4183ae:	repnz sbb DWORD PTR [edx+0x2d8e9600],ebx
  4183b5:	js     0x418380
  4183b7:	mov    al,ds:0x7388761d
  4183bc:	int3   
  4183bd:	imul   esp,DWORD PTR [edx-0x2894acfb],0x9bfb24b0
  4183c7:	(bad)  
  4183c8:	loop   0x418351
  4183ca:	in     al,0x7e
  4183cc:	jne    0x4183a7
  4183ce:	xchg   edx,eax
  4183cf:	bnd jnp 0x4183b2
  4183d2:	stos   BYTE PTR es:[edi],al
  4183d3:	jmp    0x9dfd:0xc5ce14
  4183da:	pusha  
  4183db:	xchg   ebx,eax
  4183dc:	dec    edi
  4183dd:	nop
  4183de:	enter  0x685e,0xb9
  4183e2:	(bad)  
  4183e3:	pop    ebp
  4183e4:	xchg   ebx,eax
  4183e5:	pop    ebx
  4183e6:	adc    al,0xb8
  4183e8:	outs   dx,DWORD PTR ds:[esi]
  4183e9:	(bad)  
  4183ea:	daa    
  4183eb:	aaa    
  4183ec:	call   0xeea3:0x4370f440
  4183f3:	(bad)  
  4183f4:	mov    ah,0x10
  4183f6:	inc    ah
  4183f8:	ds (bad) 
  4183fa:	mov    ecx,0x959c3ed8
  4183ff:	push   ebp
  418400:	out    0xad,eax
  418402:	xor    BYTE PTR [ebx+0x50354d01],bh
  418408:	mov    esi,0xc827f222
  41840d:	idiv   edi
  41840f:	cmc    
  418410:	into   
  418411:	mov    dl,0x55
  418413:	cdq    
  418414:	ja     0x418402
  418416:	sahf   
  418417:	mov    al,ds:0xd0d71f85
  41841c:	das    
  41841d:	gs cld 
  41841f:	push   es
  418420:	jp     0x4183b9
  418422:	add    BYTE PTR [ebx],dl
  418424:	inc    ebx
  418425:	sbb    edx,DWORD PTR [esi+eax*2-0x27]
  418429:	inc    DWORD PTR [esi-0x3cb7712]
  41842f:	fisub  WORD PTR ds:0xa4c064ba
  418435:	mov    eax,0xa7515c01
  41843a:	(bad)  
  41843b:	dec    edx
  41843c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41843d:	jmp    0x418414
  41843f:	lahf   
  418440:	jns    0x418434
  418442:	push   ds
  418443:	fs xor ecx,ebx
  418446:	pop    ecx
  418447:	int3   
  418448:	or     BYTE PTR [edi+0x394cf164],0x64
  41844f:	push   esp
  418450:	std    
  418451:	xchg   DWORD PTR [ecx],ebx
  418453:	je     0x418445
  418455:	cs inc esp
  418457:	cs iret 
  418459:	lds    edx,FWORD PTR [edx+0x4e]
  41845c:	pop    esp
  41845d:	push   DWORD PTR [ecx-0x2f]
  418460:	sbb    BYTE PTR [edi+0x7f9f5def],cl
  418466:	icebp  
  418467:	push   eax
  418468:	imul   eax,DWORD PTR [esi],0x2d5ca3b6
  41846e:	cmp    DWORD PTR [ebp+0x784bc33],esp
  418474:	cmp    bl,ch
  418476:	pop    esp
  418477:	mov    esi,0x79cefdaa
  41847c:	mov    ebp,0x5e694631
  418481:	sbb    al,0x1c
  418483:	push   ds
  418484:	xor    dh,bh
  418486:	mov    WORD PTR [esi],?
  418488:	mov    al,ah
  41848a:	jae    0x4184b1
  41848c:	and    esi,DWORD PTR [edx+edx*1-0xe5d0c73]
  418493:	and    ch,BYTE PTR [ebp+0x12]
  418496:	mov    bh,BYTE PTR [ecx+0x4e047e3f]
  41849c:	push   ebp
  41849d:	outs   dx,DWORD PTR ds:[esi]
  41849e:	xor    BYTE PTR [ebp+0xe],cl
  4184a1:	push   ebp
  4184a2:	mov    eax,0x56282088
  4184a7:	mov    DWORD PTR [edi-0x11],eax
  4184aa:	cli    
  4184ab:	pop    esi
  4184ac:	cmp    al,0x10
  4184ae:	mov    eax,DWORD PTR [edi-0x56]
  4184b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184b2:	sbb    bl,bl
  4184b4:	mov    esp,0x92f74c89
  4184b9:	daa    
  4184ba:	push   edx
  4184bb:	sub    al,BYTE PTR [esi-0x1a745a06]
  4184c1:	sahf   
  4184c2:	jl     0x41847e
  4184c4:	test   DWORD PTR [edx+ebx*1-0x6f],edx
  4184c8:	sub    al,0xa4
  4184ca:	aaa    
  4184cb:	push   esi
  4184cc:	fmul   QWORD PTR ds:0xec00263e
  4184d2:	pusha  
  4184d3:	fild   QWORD PTR [eax-0x3036caa7]
  4184d9:	or     cl,al
  4184db:	repnz lahf 
  4184dd:	stos   DWORD PTR es:[edi],eax
  4184de:	or     al,0x34
  4184e0:	loop   0x41850e
  4184e2:	addr16 mov dl,0xd8
  4184e5:	push   0x79e83bc2
  4184ea:	lock ds cld 
  4184ed:	(bad)  
  4184ee:	addr16 clc 
  4184f0:	cmp    DWORD PTR [edx+0x738dd6d4],0xffffffa4
  4184f7:	in     al,0x4b
  4184f9:	pop    edx
  4184fa:	jo     0x418524
  4184fc:	or     DWORD PTR [esi-0x2a],eax
  4184ff:	xchg   BYTE PTR [eax],ch
  418501:	scas   eax,DWORD PTR es:[edi]
  418502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418503:	arpl   WORD PTR [ebx-0x2e],sp
  418506:	sahf   
  418507:	mov    edi,0x52a882f
  41850c:	sub    eax,eax
  41850e:	mov    ah,0xc2
  418510:	push   cs
  418511:	dec    ebp
  418512:	jns    0x4184f4
  418514:	out    dx,al
  418515:	les    eax,FWORD PTR [edx-0x4a0f00ba]
  41851b:	fimul  DWORD PTR [eax+0x36]
  41851e:	or     esp,DWORD PTR [ecx-0x1dfe77c4]
  418524:	aad    0x49
  418526:	xchg   edx,eax
  418527:	or     ebp,DWORD PTR [ebp-0x69]
  41852a:	mov    ebp,0xc863b759
  41852f:	(bad)  
  418530:	ds lock xchg edx,eax
  418533:	jnp    0x418566
  418535:	mov    ch,0x39
  418537:	mov    cl,BYTE PTR [ecx-0x2aca222f]
  41853d:	leave  
  41853e:	out    0xca,eax
  418540:	xchg   esi,eax
  418541:	imul   edx,DWORD PTR [ebx+0x3a0fdf00],0x1f
  418548:	stos   BYTE PTR es:[edi],al
  418549:	sbb    eax,0xd342e4b9
  41854e:	pop    ecx
  41854f:	mov    dl,0x1b
  418551:	jmp    0xd22705f6
  418556:	pop    ecx
  418557:	mov    ch,0x58
  418559:	dec    ebx
  41855a:	stos   BYTE PTR es:[edi],al
  41855b:	fnsave [eax]
  41855d:	ds and edi,ebp
  418560:	pop    esi
  418561:	ret    
  418562:	test   BYTE PTR cs:[esi+0x64115d1d],al
  418569:	cmc    
  41856a:	ret    0xf63f
  41856d:	jns    0x418560
  41856f:	jns    0x4185ec
  418571:	pusha  
  418572:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418573:	adc    eax,0xdd0f30ec
  418578:	push   ebx
  418579:	xor    al,0x6a
  41857b:	into   
  41857c:	and    eax,0xc88435d7
  418581:	dec    esp
  418582:	mov    bh,0x4
  418584:	cwde   
  418585:	and    eax,0x2e767041
  41858a:	addr16 jge 0x4185f1
  41858d:	push   esi
  41858e:	adc    al,0xbd
  418590:	mov    eax,ds:0xfc914cbf
  418595:	clc    
  418596:	lds    eax,FWORD PTR [edi+eiz*2+0x348c64a0]
  41859d:	into   
  41859e:	pop    ss
  41859f:	xor    BYTE PTR [ebp+0x3d],bl
  4185a2:	sbb    BYTE PTR [ecx+eiz*4-0x50141908],ch
  4185a9:	test   eax,0xa40d1f41
  4185ae:	xchg   edi,eax
  4185af:	push   edx
  4185b0:	shr    BYTE PTR [edi],1
  4185b2:	stos   DWORD PTR es:[edi],eax
  4185b3:	cs or  al,0xef
  4185b6:	xor    BYTE PTR [eax],0x8a
  4185b9:	call   0xa5f1:0x7b2ae8bd
  4185c0:	mov    bh,0x9c
  4185c2:	cdq    
  4185c3:	jae    0x41855e
  4185c5:	pop    DWORD PTR [esi-0x4e]
  4185c8:	addr16 fwait
  4185ca:	and    BYTE PTR [eax-0x1b8afabb],cl
  4185d0:	dec    esi
  4185d1:	push   es
  4185d2:	xor    al,0x6b
  4185d4:	or     edi,DWORD PTR ds:0xdba04b88
  4185da:	sub    bh,dl
  4185dc:	mov    esi,0x8b0253ae
  4185e1:	and    BYTE PTR [eax+0x48],cl
  4185e4:	jb     0x418571
  4185e6:	js     0x41864f
  4185e8:	push   cs
  4185e9:	loopne 0x418599
  4185eb:	out    0x53,al
  4185ed:	test   BYTE PTR [edx],0x57
  4185f0:	push   ds
  4185f1:	and    BYTE PTR [eax+0x2],al
  4185f4:	xor    ebx,DWORD PTR [esi+0x7]
  4185f7:	aas    
  4185f8:	push   eax
  4185f9:	fs cld 
  4185fb:	ret    0x2ec0
  4185fe:	(bad)  
  4185ff:	out    0x5b,al
  418601:	ss ins BYTE PTR es:[edi],dx
  418603:	add    BYTE PTR ds:0xadcf84fa,bh
  418609:	dec    eax
  41860a:	inc    ecx
  41860b:	inc    edi
  41860c:	cpuid  
  41860e:	shl    DWORD PTR [eax+0x439536a4],cl
  418614:	ins    BYTE PTR es:[edi],dx
  418615:	leave  
  418616:	pop    esp
  418617:	test   BYTE PTR [edx+edx*8],bh
  41861a:	stos   BYTE PTR es:[edi],al
  41861b:	lds    ebp,FWORD PTR [ecx-0x5f]
  41861e:	cmp    BYTE PTR [ecx+edx*8+0x5d],bh
  418622:	xchg   edx,eax
  418623:	cmp    cl,BYTE PTR [ebp-0x2c]
  418626:	xor    DWORD PTR [edi-0x6f],esi
  418629:	mov    ah,BYTE PTR [edx-0x9]
  41862c:	mov    eax,ds:0xd9671452
  418631:	sub    ah,BYTE PTR [ebx+0x40]
  418634:	es (bad) 
  418636:	neg    DWORD PTR es:[ecx-0x18909006]
  41863d:	xor    bl,0x4e
  418640:	mov    gs,WORD PTR [edi+ebx*8+0x25]
  418644:	daa    
  418645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418646:	fdiv   st,st(6)
  418648:	mov    dh,0x8
  41864a:	icebp  
  41864b:	and    dl,bh
  41864d:	hlt    
  41864e:	dec    ebp
  41864f:	ds xchg ebp,eax
  418651:	jnp    0x418608
  418653:	sbb    DWORD PTR [eax+0x5fc2a2c8],ebx
  418659:	fnstenv [eax-0x2320dd44]
  41865f:	xor    ch,BYTE PTR ds:0x74e2ab02
  418665:	lds    esp,FWORD PTR [ecx-0x397d66dc]
  41866b:	cmp    DWORD PTR [ebp-0x2b900561],esi
  418671:	inc    eax
  418672:	push   cs
  418673:	lds    ebx,FWORD PTR [edx-0x337016f3]
  418679:	je     0x4186a6
  41867b:	push   ebx
  41867c:	fimul  WORD PTR [edi+0x274b7fef]
  418682:	(bad)  
  418684:	sbb    al,0xeb
  418686:	jg     0x418693
  418688:	rcl    DWORD PTR [edx],1
  41868a:	popa   
  41868b:	xor    al,0xf7
  41868d:	jge    0x41865b
  41868f:	sub    ax,0x1cc8
  418693:	push   esp
  418694:	repnz and DWORD PTR [eax+0x2e],edx
  418698:	and    ebp,ebp
  41869a:	fwait
  41869b:	mov    bh,0x4a
  41869d:	cld    
  41869e:	nop
  41869f:	push   0x2465f5e6
  4186a4:	es pop esp
  4186a6:	or     al,0x11
  4186a8:	inc    eax
  4186a9:	cmp    esi,DWORD PTR ds:0x2d0ff6f1
  4186af:	xchg   edi,eax
  4186b0:	mov    esi,0xf57e1a4f
  4186b5:	jle    0x41867b
  4186b7:	ja     0x41867a
  4186b9:	jge    0x418658
  4186bb:	dec    esp
  4186bc:	pop    esi
  4186bd:	jmp    0x418696
  4186bf:	pusha  
  4186c0:	cmp    al,0xe6
  4186c2:	and    ecx,DWORD PTR [edx+0x2e202a46]
  4186c8:	loop   0x418669
  4186ca:	in     eax,dx
  4186cb:	aam    0x54
  4186cd:	mov    edx,0x45f0a1bf
  4186d2:	mov    BYTE PTR [edx+ecx*1-0x6dc038ac],bl
  4186d9:	jo     0x418736
  4186db:	cmp    ah,BYTE PTR [esp+ebx*4+0x75f49cfe]
  4186e2:	pop    ss
  4186e3:	ins    DWORD PTR es:[edi],dx
  4186e4:	add    eax,0x6caa0e56
  4186e9:	pop    edi
  4186ea:	sub    DWORD PTR [eax+0x4c],edx
  4186ed:	dec    edi
  4186ee:	xchg   esp,eax
  4186ef:	mov    ch,bh
  4186f1:	mov    ecx,0xaed985c
  4186f6:	mov    cl,0x1b
  4186f8:	jle    0x4186c0
  4186fa:	pop    ebp
  4186fb:	dec    esp
  4186fc:	xchg   BYTE PTR [edx+0x74793545],dl
  418702:	xor    DWORD PTR [eax+ecx*8-0x7e459f50],ebp
  418709:	jle    0x4186a3
  41870b:	jb     0x4186e0
  41870d:	jge    0x418697
  41870f:	mov    ecx,DWORD PTR [ebx]
  418711:	sub    ebp,edx
  418713:	lock ds into 
  418716:	and    al,0x67
  418718:	mov    esp,0x9272a81f
  41871d:	(bad)  
  41871e:	outs   dx,DWORD PTR ds:[esi]
  41871f:	and    DWORD PTR [ebx],edx
  418721:	arpl   WORD PTR [ebp-0x3e89c17b],di
  418727:	push   eax
  418728:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418729:	inc    edx
  41872a:	cli    
  41872b:	(bad)  
  41872c:	mov    al,0xb9
  41872e:	scas   eax,DWORD PTR es:[edi]
  41872f:	dec    ebx
  418730:	retf   
  418731:	in     al,dx
  418732:	scas   al,BYTE PTR es:[edi]
  418733:	lods   al,BYTE PTR ds:[esi]
  418734:	jp     0x4187a3
  418736:	xor    esp,esp
  418738:	mov    edx,0x506e6916
  41873d:	mov    edi,0xac3cb4fb
  418742:	inc    edi
  418743:	pushf  
  418744:	jmp    0xa436147e
  418749:	mov    ebx,0xd469f122
  41874e:	jg     0x41875e
  418750:	cmp    cx,WORD PTR [esi-0x20]
  418754:	push   0xffffffe0
  418756:	repz inc edx
  418758:	test   eax,0x98a23921
  41875d:	mov    DWORD PTR [edx-0x4a5bde4e],eax
  418763:	addr16 aad 0x25
  418766:	push   esi
  418767:	loope  0x4186fb
  418769:	sbb    al,0x26
  41876b:	xchg   DWORD PTR [ebp-0x11],edx
  41876e:	lods   eax,DWORD PTR ds:[esi]
  41876f:	jmp    0xb302fcac
  418774:	xchg   esi,eax
  418775:	mov    ch,0xed
  418777:	xchg   BYTE PTR [eax+ebx*4+0x78],cl
  41877b:	xchg   ebp,eax
  41877c:	ret    0x411b
  41877f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418780:	pop    esi
  418781:	mov    ds:0x8203563d,eax
  418786:	in     eax,0xa5
  418788:	outs   dx,BYTE PTR ds:[esi]
  418789:	fsub   DWORD PTR [edi]
  41878b:	imul   eax,DWORD PTR [ebp-0x6c],0x53b710a7
  418792:	call   0xb0c951fe
  418797:	pop    eax
  418798:	xchg   edi,eax
  418799:	add    al,0xa5
  41879b:	push   ebp
  41879c:	scas   al,BYTE PTR es:[edi]
  41879d:	dec    esi
  41879e:	adc    al,0xcb
  4187a0:	adc    eax,0xeff2b199
  4187a5:	out    0xfc,al
  4187a7:	(bad)  [edi]
  4187a9:	icebp  
  4187aa:	into   
  4187ab:	or     eax,0x2c9494e0
  4187b0:	inc    edi
  4187b1:	rol    BYTE PTR [eax-0x1cac0de7],1
  4187b7:	mov    bh,0xfd
  4187b9:	sti    
  4187ba:	push   ss
  4187bb:	in     eax,0x79
  4187bd:	cmp    eax,0x4482cadf
  4187c2:	stos   DWORD PTR es:[edi],eax
  4187c3:	out    0x71,al
  4187c5:	adc    DWORD PTR ds:0x17a4115d,ecx
  4187cb:	ja     0x418791
  4187cd:	lods   eax,DWORD PTR ds:[esi]
  4187ce:	call   0xb3577f48
  4187d3:	lea    edx,[edx+0x5a145ef8]
  4187d9:	pop    ss
  4187da:	dec    ebp
  4187db:	mov    esi,0x15f24d00
  4187e0:	jmp    FWORD PTR [edi+0x72]
  4187e3:	inc    edx
  4187e4:	jae    0x41884b
  4187e6:	pop    es
  4187e7:	test   cl,bh
  4187e9:	sub    ebp,0x32
  4187ec:	daa    
  4187ed:	aas    
  4187ee:	or     dl,BYTE PTR [edx+edx*1]
  4187f1:	push   edi
  4187f2:	fcmovne st,st(5)
  4187f4:	sti    
  4187f5:	int    0xc7
  4187f7:	mov    bp,0x380b
  4187fb:	(bad)  
  4187fc:	(bad)  
  4187fd:	jb     0x4187d0
  4187ff:	mov    ah,0x8d
  418801:	das    
  418802:	jmp    0x5715b2fd
  418807:	or     ebx,DWORD PTR [eax-0x13128c4a]
  41880d:	pop    es
  41880e:	mov    edi,0x675b38ec
  418813:	out    dx,eax
  418814:	pop    edx
  418815:	push   edx
  418816:	mov    esp,0x3938a1c1
  41881b:	aas    
  41881c:	in     al,0xe3
  41881e:	test   BYTE PTR [ebp*8-0x5bd40681],al
  418825:	dec    esp
  418827:	xor    ecx,DWORD PTR [edx+eax*2-0x1c9836ff]
  41882e:	mov    edx,DWORD PTR [esi-0x340ddaf7]
  418834:	mov    ebx,0x1f78feab
  418839:	lds    ebp,FWORD PTR [edi-0xf86b32e]
  41883f:	or     BYTE PTR [esi+edx*1+0x1f906007],bl
  418846:	add    DWORD PTR [ebx+0x45f28ace],edi
  41884c:	jno    0x41881e
  41884e:	push   edx
  41884f:	(bad)  
  418850:	mov    eax,ds:0xe128eb3b
  418855:	jmp    0x46f:0x39a307db
  41885c:	ss dec ebp
  41885e:	sub    eax,0x9840b30
  418863:	pop    ds
  418864:	push   esp
  418865:	jp     0x418833
  418867:	cmp    edx,DWORD PTR [edi+0x56]
  41886a:	test   eax,0x1a794438
  41886f:	cs scas al,BYTE PTR es:[edi]
  418871:	ins    DWORD PTR es:[edi],dx
  418872:	sbb    eax,DWORD PTR [edx+0x1b]
  418875:	adc    edi,esi
  418877:	sbb    cl,BYTE PTR [ebp-0x8123471]
  41887d:	into   
  41887e:	inc    edx
  41887f:	pop    ds
  418880:	sbb    ebp,ebp
  418882:	ins    BYTE PTR es:[edi],dx
  418883:	push   eax
  418884:	hlt    
  418885:	sub    BYTE PTR [edi+0x4],0x92
  418889:	lock push ebx
  41888b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41888c:	ins    BYTE PTR es:[edi],dx
  41888d:	jnp    0x4188d2
  41888f:	int3   
  418890:	aam    0x29
  418892:	ret    0x5960
  418895:	leave  
  418896:	mov    bl,BYTE PTR [eax]
  418898:	push   cs
  418899:	pop    edi
  41889a:	and    eax,eax
  41889c:	push   ebx
  41889d:	cwde   
  41889e:	sbb    dh,BYTE PTR [edx+0x41]
  4188a1:	stos   DWORD PTR es:[edi],eax
  4188a2:	push   edi
  4188a3:	in     eax,0x1c
  4188a5:	sub    BYTE PTR [eax],dl
  4188a7:	pop    edi
  4188a8:	xchg   ch,ah
  4188aa:	rcr    BYTE PTR ds:0xf72f391,0xdb
  4188b1:	xor    al,BYTE PTR [edx-0x24389f99]
  4188b7:	scas   eax,DWORD PTR es:[edi]
  4188b8:	mov    edi,0x7dee3032
  4188bd:	fistp  QWORD PTR [edi+0x13]
  4188c0:	sbb    eax,0xd2088cc8
  4188c5:	inc    ecx
  4188c6:	add    DWORD PTR [esi],ebx
  4188c8:	or     al,BYTE PTR [esi+ebp*8-0x5]
  4188cc:	push   esp
  4188cd:	mov    DWORD PTR [ebp-0x73],eax
  4188d0:	mov    bh,0xe9
  4188d2:	push   cs
  4188d3:	retf   0x363b
  4188d6:	mov    ebp,0xa067fccd
  4188db:	or     al,0x76
  4188dd:	in     al,dx
  4188de:	stos   BYTE PTR es:[edi],al
  4188df:	shl    BYTE PTR [eax],cl
  4188e1:	retf   
  4188e2:	pop    edx
  4188e3:	arpl   WORD PTR [ebx-0x1e137932],dx
  4188e9:	jae    0x418936
  4188eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188ec:	adc    BYTE PTR [edx+0x654e8ae0],bh
  4188f2:	outs   dx,DWORD PTR ds:[esi]
  4188f3:	je     0x418879
  4188f5:	push   0x6d5c297b
  4188fa:	xchg   edx,eax
  4188fb:	jno    0x418916
  4188fd:	es adc eax,ebx
  418900:	mov    al,ds:0x1805f707
  418905:	and    DWORD PTR [eax+0x47c6f3a2],edi
  41890b:	sub    ch,ch
  41890d:	mov    dl,0x22
  41890f:	mov    eax,0x74e73371
  418914:	mov    WORD PTR [edi-0x10a4fb2d],cs
  41891a:	mov    dl,0xc5
  41891c:	pop    esp
  41891d:	into   
  41891e:	push   0xe0a7f7d7
  418923:	aam    0x8
  418925:	jmp    0x41897f
  418927:	ins    BYTE PTR es:[edi],dx
  418928:	clc    
  418929:	jecxz  0x41892a
  41892b:	and    eax,0xb7e8835a
  418930:	sbb    BYTE PTR [eax],ah
  418932:	in     eax,0xa6
  418934:	sub    ch,0x40
  418937:	loopne 0x418931
  418939:	or     al,BYTE PTR [eax]
  41893b:	rol    BYTE PTR [edx+0x3a],0x99
  41893f:	xchg   esp,eax
  418940:	cmp    eax,0x607418dd
  418945:	jle    0x4188fc
  418947:	stc    
  418948:	sahf   
  418949:	arpl   WORD PTR [edx+edx*1+0x46f2a05a],bp
  418950:	js     0x418979
  418952:	lea    edi,[ecx-0x23e60273]
  418958:	lahf   
  418959:	jns    0x4189c9
  41895b:	sbb    al,0xe2
  41895d:	or     al,0xd5
  41895f:	les    ebx,FWORD PTR [edx]
  418961:	cdq    
  418962:	adc    al,0x5e
  418964:	and    eax,0x74dba49a
  418969:	jbe    0x41895f
  41896b:	inc    esp
  41896c:	clc    
  41896d:	adc    eax,edi
  41896f:	(bad)  
  418970:	(bad)  
  418971:	ds cwde 
  418973:	mov    bh,0x91
  418975:	and    al,0xa4
  418977:	ins    DWORD PTR es:[edi],dx
  418978:	xor    esi,esi
  41897a:	scas   eax,DWORD PTR es:[edi]
  41897b:	push   DWORD PTR [edx+0x58345aa]
  418981:	and    al,0xa
  418983:	sahf   
  418984:	xchg   ebp,eax
  418985:	xchg   ebp,eax
  418986:	cmp    edx,ebp
  418988:	aas    
  418989:	xlat   BYTE PTR ds:[ebx]
  41898a:	sbb    cl,bh
  41898c:	cmp    eax,0xf397712f
  418991:	pop    esi
  418992:	jnp    0x4189b3
  418994:	or     BYTE PTR [edi],bh
  418996:	scas   al,BYTE PTR es:[edi]
  418997:	and    dl,bh
  418999:	jbe    0x418986
  41899b:	in     al,dx
  41899c:	jbe    0x418975
  41899e:	cmp    ecx,esi
  4189a0:	mov    esi,0x84e9327c
  4189a5:	mov    bh,0xd1
  4189a7:	jb     0x4189d1
  4189a9:	aam    0x6c
  4189ab:	push   es
  4189ac:	sbb    edi,DWORD PTR [ecx]
  4189ae:	push   ecx
  4189af:	idiv   edi
  4189b1:	and    esi,DWORD PTR [esi]
  4189b3:	inc    edx
  4189b4:	sbb    eax,0x310cfff9
  4189b9:	loope  0x418992
  4189bb:	addr16 enterw 0x18f1,0xb5
  4189c1:	or     al,0x4a
  4189c3:	test   DWORD PTR [ecx+ebp*1],ebx
  4189c6:	push   0xa0384bdd
  4189cb:	adc    eax,0xf0ae40a3
  4189d0:	lods   eax,DWORD PTR ds:[esi]
  4189d1:	fadd   DWORD PTR [ebx+0x5360cf09]
  4189d7:	cdq    
  4189d8:	inc    edi
  4189d9:	push   eax
  4189da:	mov    eax,0x820227e2
  4189df:	cs test al,0x9a
  4189e2:	(bad)  
  4189e3:	imul   esp,DWORD PTR ds:0x5504c400,0xffffffc5
  4189ea:	cdq    
  4189eb:	fs das 
  4189ed:	or     dh,BYTE PTR [ebp-0x2e]
  4189f0:	jg     0x418a64
  4189f2:	push   ebx
  4189f3:	dec    esp
  4189f4:	mov    edi,0x32cbced8
  4189f9:	or     eax,0x170da837
  4189fe:	mov    BYTE PTR [ebx],bl
  418a00:	cmp    bl,dh
  418a02:	or     BYTE PTR [ebx+0x9],cl
  418a05:	(bad)  
  418a06:	and    al,0x26
  418a08:	sti    
  418a09:	add    eax,0x250529d9
  418a0e:	xchg   ebp,eax
  418a0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a10:	enter  0x7f44,0x17
  418a14:	cmc    
  418a15:	jnp    0x418a83
  418a17:	push   edx
  418a18:	adc    eax,eax
  418a1a:	mov    ecx,0xfdbb67b8
  418a1f:	(bad)  
  418a20:	loopne 0x4189ed
  418a22:	push   eax
  418a23:	outs   dx,BYTE PTR ds:[esi]
  418a24:	push   esi
  418a25:	mov    esi,0xf26ef278
  418a2a:	jno    0x418a27
  418a2c:	and    DWORD PTR [ecx],esp
  418a2e:	fcom   DWORD PTR [esi+0x67]
  418a31:	bound  edx,QWORD PTR [eax+0x22]
  418a34:	push   edi
  418a35:	test   eax,esi
  418a37:	stc    
  418a38:	xchg   esi,eax
  418a39:	push   ebx
  418a3a:	push   0x8f98f0d8
  418a3f:	mov    al,ds:0x2a408b84
  418a44:	imul   edi,DWORD PTR [ebp+0x54d0c11],0xffffff8b
  418a4b:	sub    al,0x59
  418a4d:	and    BYTE PTR [ebx],ah
  418a4f:	dec    ebp
  418a50:	retf   0x4f87
  418a53:	dec    esi
  418a54:	xor    BYTE PTR [ebx-0x4],al
  418a57:	cmc    
  418a58:	sbb    bh,bl
  418a5a:	pop    eax
  418a5b:	xchg   edx,eax
  418a5c:	jg     0x418a40
  418a5e:	retf   0x15eb
  418a61:	retf   0x2cdf
  418a64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a65:	mul    BYTE PTR [edi-0x2d]
  418a68:	ret    0x6642
  418a6b:	mov    BYTE PTR [ecx+0x2],bh
  418a6e:	shr    DWORD PTR [ebx-0x4d62b993],cl
  418a74:	or     al,0xcd
  418a76:	sbb    BYTE PTR [eax+0x2f],bl
  418a79:	retf   0xbbc7
  418a7c:	mov    esi,0xc8e2d22c
  418a81:	call   0x615:0x29e4183e
  418a88:	arpl   WORD PTR [edx],si
  418a8a:	mov    dl,0xb
  418a8c:	ret    
  418a8d:	inc    edx
  418a8e:	push   edx
  418a8f:	sbb    BYTE PTR [ecx],dh
  418a91:	push   edx
  418a92:	ret    0x5c4
  418a95:	sbb    ecx,esi
  418a97:	iret   
  418a98:	lods   al,BYTE PTR ds:[esi]
  418a99:	mov    BYTE PTR [bp+si-0xaf4],bl
  418a9e:	sbb    BYTE PTR [edi+0x76e5d4e4],dl
  418aa4:	jne    0x418a91
  418aa6:	icebp  
  418aa7:	mov    DWORD PTR [edi-0x29337071],ecx
  418aad:	popa   
  418aae:	mov    al,0xca
  418ab0:	pop    ebp
  418ab1:	ins    DWORD PTR es:[edi],dx
  418ab2:	or     eax,DWORD PTR [ebx+ebx*1+0x1b]
  418ab6:	push   es
  418ab7:	fbld   TBYTE PTR [ebx+0xb6e38a6]
  418abd:	pop    es
  418abe:	mov    DWORD PTR [esi],ebx
  418ac0:	cmc    
  418ac1:	fdivr  st(1),st
  418ac3:	leave  
  418ac4:	push   ebp
  418ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ac6:	cld    
  418ac7:	and    cl,BYTE PTR [ecx-0x4d]
  418aca:	cdq    
  418acb:	xor    ebx,DWORD PTR [edx-0x64137bc2]
  418ad1:	or     BYTE PTR [esi+0x1e],cl
  418ad4:	enter  0xaefb,0x7a
  418ad8:	add    BYTE PTR [ebp+eiz*1+0x19],bh
  418adc:	push   ebx
  418add:	mov    ebp,0x8447a761
  418ae2:	sbb    eax,0x85f6b1e7
  418ae7:	push   cs
  418ae8:	pushf  
  418ae9:	push   cs
  418aea:	or     bh,BYTE PTR [ebp+esi*8+0x17ad1728]
  418af1:	scas   eax,DWORD PTR es:[edi]
  418af2:	inc    ebp
  418af3:	mov    ecx,0xedf755bd
  418af8:	xchg   ebx,eax
  418af9:	pop    es
  418afa:	xchg   esi,eax
  418afb:	mov    eax,ds:0x710278ea
  418b00:	inc    esi
  418b01:	jp     0x418b65
  418b03:	enter  0x89e0,0x92
  418b07:	in     al,dx
  418b08:	push   0x24
  418b0a:	in     eax,dx
  418b0b:	jmp    0x418b07
  418b0d:	xchg   ebp,eax
  418b0e:	aad    0x27
  418b10:	pop    ebp
  418b11:	xchg   edi,eax
  418b12:	jbe    0x418b21
  418b14:	aad    0x76
  418b16:	imul   ecx,esp,0xbbd42ca9
  418b1c:	sub    DWORD PTR [edi],0x52223743
  418b22:	int    0x32
  418b24:	pop    eax
  418b25:	dec    ebp
  418b26:	inc    esi
  418b27:	popa   
  418b28:	mov    al,0x7e
  418b2a:	call   0xef92:0x5825349c
  418b31:	sbb    ecx,DWORD PTR [eax-0xc]
  418b34:	aam    0xb
  418b36:	and    bh,ch
  418b38:	dec    edi
  418b39:	test   al,ah
  418b3b:	adc    dl,BYTE PTR [edx+0x26]
  418b3e:	pop    eax
  418b3f:	jmp    0x418ac4
  418b41:	inc    ebx
  418b42:	inc    esi
  418b43:	cld    
  418b44:	pop    ebx
  418b45:	fdivr  QWORD PTR [ebx+0x58e69aca]
  418b4b:	sub    eax,0x59a8590e
  418b50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b51:	sahf   
  418b52:	fild   QWORD PTR [edx-0x18]
  418b55:	adc    DWORD PTR [edi+0x60bf85c5],edi
  418b5b:	xchg   esp,eax
  418b5c:	shl    BYTE PTR [eax-0x42],cl
  418b5f:	in     al,0x2c
  418b61:	inc    esp
  418b62:	cmp    DWORD PTR [esi+eax*8+0x12],0x789c5b48
  418b6a:	sub    ecx,DWORD PTR [edi+0x5b]
  418b6d:	push   ebp
  418b6e:	lahf   
  418b6f:	into   
  418b70:	sub    BYTE PTR [edx-0x1a16ef02],dl
  418b76:	call   0x3150473c
  418b7b:	ret    
  418b7c:	out    dx,al
  418b7d:	push   0x28346dff
  418b82:	stos   DWORD PTR es:[edi],eax
  418b83:	inc    esi
  418b84:	in     al,0x49
  418b86:	add    edx,esp
  418b88:	xchg   ebx,eax
  418b89:	imul   eax,DWORD PTR [eax],0x49
  418b8c:	jle    0x418bd6
  418b8e:	jecxz  0x418beb
  418b90:	push   edx
  418b91:	icebp  
  418b92:	sub    dl,BYTE PTR [ecx]
  418b94:	cmc    
  418b95:	mov    edi,0xc738b1bd
  418b9a:	aaa    
  418b9b:	jb     0x418ba8
  418b9d:	fidiv  WORD PTR [eax-0x79]
  418ba0:	cmp    ch,BYTE PTR [esp+ebp*2+0x47ad1819]
  418ba7:	jbe    0x418bea
  418ba9:	or     DWORD PTR [ebx-0x5c],ebp
  418bac:	inc    esp
  418bad:	mov    ebp,ebp
  418baf:	dec    edi
  418bb0:	imul   esp,DWORD PTR [ebp+0x20],0xd7c0956c
  418bb7:	inc    esp
  418bb8:	das    
  418bb9:	mov    edi,0x2c47dcf3
  418bbe:	mov    esp,0x2ffd1ba1
  418bc3:	adc    BYTE PTR [esi+0x31c3a135],ch
  418bc9:	stc    
  418bca:	bswap  ebp
  418bcc:	push   ecx
  418bcd:	inc    bp
  418bcf:	mov    esi,DWORD PTR [edi+0x3c]
  418bd2:	enter  0x2e97,0x60
  418bd6:	pop    ds
  418bd7:	xchg   ebp,eax
  418bd8:	xchg   esi,eax
  418bd9:	out    dx,al
  418bda:	in     al,0xfd
  418bdc:	dec    edi
  418bdd:	enter  0x767,0xe4
  418be1:	and    ch,dh
  418be3:	cmp    esp,DWORD PTR [ebx]
  418be5:	int3   
  418be6:	mov    al,0x32
  418be8:	inc    esp
  418be9:	dec    ebx
  418bea:	push   0x131cf5d7
  418bef:	punpckhbw mm2,QWORD PTR [edi-0x6c72b8e7]
  418bf6:	xchg   BYTE PTR [ecx],ch
  418bf8:	sbb    esi,DWORD PTR ds:0x597868f2
  418bfe:	add    DWORD PTR [esi],ebx
  418c00:	das    
  418c01:	mov    ebx,0xb3ff0d12
  418c06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c07:	or     DWORD PTR [ecx+0x2e],0xd5527a90
  418c0e:	push   es
  418c0f:	sub    ebx,DWORD PTR [ecx+ecx*2]
  418c12:	xchg   esp,eax
  418c13:	rol    BYTE PTR [edx],1
  418c15:	clc    
  418c16:	sub    edi,esp
  418c18:	rcl    BYTE PTR [esi+ecx*2],cl
  418c1b:	pop    ds
  418c1c:	adc    DWORD PTR [ecx],ebp
  418c1e:	lds    ebp,FWORD PTR [esi]
  418c20:	(bad)  
  418c21:	jmp    0x418c3f
  418c23:	es stos DWORD PTR es:[edi],eax
  418c25:	scas   al,BYTE PTR es:[edi]
  418c26:	daa    
  418c27:	xchg   edx,eax
  418c28:	popf   
  418c29:	(bad)  
  418c2b:	push   0x2439f71a
  418c30:	xor    BYTE PTR [edi+0x1a],ah
  418c33:	hlt    
  418c34:	sbb    eax,0xfe6bd523
  418c39:	xor    BYTE PTR [esi],cl
  418c3b:	lods   al,BYTE PTR ds:[esi]
  418c3c:	stc    
  418c3d:	hlt    
  418c3e:	adc    BYTE PTR [ecx+esi*4+0x50],0x9
  418c43:	cs push ecx
  418c45:	les    edi,FWORD PTR [edx-0x3a77405a]
  418c4b:	jns    0x418bfa
  418c4d:	addr16 call 0xdeabc9d6
  418c53:	js     0x418bf6
  418c55:	rcl    DWORD PTR fs:[esi-0x77],0xad
  418c5a:	push   ebx
  418c5b:	mov    ebp,0x8af49365
  418c60:	pop    esp
  418c61:	ins    DWORD PTR es:[edi],dx
  418c62:	loop   0x418c2d
  418c64:	aam    0x93
  418c66:	inc    eax
  418c67:	(bad)  
  418c68:	scas   eax,DWORD PTR es:[edi]
  418c69:	jae    0x418cc8
  418c6b:	loop   0x418c29
  418c6d:	call   0x5f620b24
  418c72:	faddp  st(5),st
  418c74:	pop    ecx
  418c75:	pop    ebx
  418c76:	push   ebx
  418c77:	jmp    0x132f1622
  418c7c:	adc    BYTE PTR [ebp-0x13],dh
  418c7f:	xchg   ebx,eax
  418c80:	das    
  418c81:	inc    BYTE PTR [ebx+ebp*4+0xb]
  418c85:	dec    ebp
  418c86:	jmp    0x418d03
  418c88:	add    BYTE PTR [esi+0x42],ch
  418c8b:	sti    
  418c8c:	push   ss
  418c8d:	or     DWORD PTR [ebp+ebp*4-0x43907fa3],edi
  418c94:	fild   WORD PTR [eax-0x7a]
  418c97:	mov    al,ds:0x19c49441
  418c9c:	nop
  418c9d:	sbb    edi,edx
  418c9f:	push   ebx
  418ca0:	shr    BYTE PTR [esi],0x10
  418ca3:	mov    dh,0x9a
  418ca5:	add    al,0xe4
  418ca7:	dec    esp
  418ca8:	add    DWORD PTR [esi-0x73],esp
  418cab:	sbb    ecx,DWORD PTR [esp+edi*8]
  418cae:	add    al,0xf1
  418cb0:	in     al,dx
  418cb1:	outs   dx,DWORD PTR ds:[esi]
  418cb2:	sub    BYTE PTR [eax+ebp*8+0x48],ch
  418cb6:	jbe    0x418cde
  418cb8:	xor    ecx,ebx
  418cba:	and    ebp,DWORD PTR [ecx-0x36]
  418cbd:	fiadd  WORD PTR [ebx]
  418cbf:	dec    ebx
  418cc0:	icebp  
  418cc1:	daa    
  418cc2:	cmp    eax,DWORD PTR [edi+0x6620feff]
  418cc8:	outs   dx,DWORD PTR ds:[esi]
  418cc9:	add    DWORD PTR ds:0x77cbe4c5,ebx
  418ccf:	arpl   WORD PTR [ebx],bx
  418cd1:	adc    BYTE PTR [edi],0xb7
  418cd4:	(bad)  
  418cd5:	mov    al,ds:0x62a10323
  418cda:	stc    
  418cdb:	mov    ds,WORD PTR ds:0x6b8baa59
  418ce1:	ret    
  418ce2:	pop    esp
  418ce3:	mov    ds:0xae5c9c72,al
  418ce8:	adc    ebp,edi
  418cea:	lods   eax,DWORD PTR ds:[esi]
  418ceb:	lahf   
  418cec:	adc    edx,esp
  418cee:	adc    eax,0x5c6060e5
  418cf3:	fwait
  418cf4:	xchg   edx,eax
  418cf5:	push   eax
  418cf6:	mov    DWORD PTR [ebp-0x50],esi
  418cf9:	je     0x418cbc
  418cfb:	retf   
  418cfc:	xor    DWORD PTR [ebp-0x5],edi
  418cff:	sub    al,0xf9
  418d01:	pop    ebp
  418d02:	mov    WORD PTR [eax],ds
  418d04:	mov    eax,ds:0x94516b55
  418d09:	xor    ch,BYTE PTR [eax-0x3b]
  418d0c:	add    ah,ch
  418d0e:	push   esi
  418d0f:	dec    ebx
  418d10:	(bad)  
  418d11:	jl     0x418d21
  418d13:	mov    ebp,eax
  418d15:	aaa    
  418d16:	fcomp  DWORD PTR [edx-0x60]
  418d19:	push   cs
  418d1a:	lds    ebx,FWORD PTR [edx+0x3]
  418d1d:	nop
  418d1e:	je     0x418cdb
  418d20:	xchg   edx,eax
  418d21:	xchg   ch,al
  418d23:	ret    0xc8a4
  418d26:	out    0x7a,al
  418d28:	sub    dh,BYTE PTR [esi+0x19f48764]
  418d2e:	mov    BYTE PTR ds:0x7efb505a,bh
  418d34:	lods   eax,DWORD PTR ds:[esi]
  418d35:	xor    edx,DWORD PTR [ebx+ebp*2+0x1c7d4c67]
  418d3c:	fdivp  st(0),st
  418d3e:	rcl    edi,0xc6
  418d41:	pcmpeqb mm6,mm2
  418d44:	jge    0x418dc2
  418d46:	jnp    0x418d8e
  418d48:	sbb    cl,0xf1
  418d4b:	adc    al,0xd6
  418d4d:	dec    ebp
  418d4e:	xor    dh,dh
  418d50:	xchg   edx,eax
  418d51:	mov    ecx,0xb512c5ca
  418d56:	lods   al,BYTE PTR ds:[esi]
  418d57:	push   es
  418d58:	daa    
  418d59:	sbb    esi,DWORD PTR [edi-0x75]
  418d5c:	pop    esi
  418d5d:	push   ebp
  418d5e:	jmp    0x418d30
  418d60:	or     al,0xe8
  418d62:	xchg   edi,eax
  418d63:	push   esp
  418d64:	mov    DWORD PTR [ecx+0x1b],esp
  418d67:	and    al,0x7a
  418d69:	(bad)
  418d6d:	stos   DWORD PTR es:[edi],eax
  418d6e:	cld    
  418d6f:	shl    BYTE PTR [edx-0x15],cl
  418d72:	loopne 0x418ddf
  418d74:	daa    
  418d75:	xor    DWORD PTR [edx-0x9],0xb825db68
  418d7c:	mov    ds,eax
  418d7e:	push   ebp
  418d7f:	mov    dh,0xf
  418d81:	jne    0x418dea
  418d83:	js     0x418d14
  418d85:	aad    0xcb
  418d87:	(bad)  
  418d88:	xor    al,0xb2
  418d8a:	push   edx
  418d8b:	(bad)  
  418d8c:	jbe    0x418daf
  418d8e:	call   FWORD PTR [edx]
  418d90:	inc    ebp
  418d91:	jl     0x418da2
  418d93:	into   
  418d94:	adc    al,0x7e
  418d96:	sbb    ch,BYTE PTR [edi+0x39b9b2f4]
  418d9c:	pusha  
  418d9d:	mov    edi,0x63b86a6b
  418da2:	ret    
  418da3:	mov    ds:0x68931d7f,al
  418da8:	jno    0x418db7
  418daa:	outs   dx,BYTE PTR ds:[esi]
  418dab:	fsubrp st(3),st
  418dad:	push   ebp
  418dae:	jl     0x418e2e
  418db0:	add    edx,0xffffffa4
  418db3:	push   cs
  418db4:	les    esp,FWORD PTR ds:0x5b02b6ec
  418dba:	fld    TBYTE PTR [esi+0x24445963]
  418dc0:	push   ds
  418dc1:	push   edx
  418dc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dc3:	push   ecx
  418dc4:	mov    edx,0xafb50c3f
  418dc9:	dec    ebx
  418dca:	and    eax,0x2fee9970
  418dcf:	sahf   
  418dd0:	es and eax,0x66354247
  418dd6:	cmp    eax,0x9611ad83
  418ddb:	adc    ecx,DWORD PTR [ebx+0x5d]
  418dde:	jbe    0x418ddc
  418de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418de1:	or     eax,0xde6fc68d
  418de6:	add    al,0x10
  418de8:	mov    al,ds:0x723f8664
  418ded:	les    eax,FWORD PTR [esi+0x53]
  418df0:	aaa    
  418df1:	add    al,0x97
  418df3:	xchg   ecx,edi
  418df5:	arpl   WORD PTR [ecx+0x5cdc11b6],bp
  418dfb:	cmp    DWORD PTR [edx],0x630c2bfa
  418e01:	neg    BYTE PTR [esi+0x12f0a9d]
  418e07:	aad    0x58
  418e09:	pop    ds
  418e0a:	inc    esi
  418e0b:	xchg   DWORD PTR [eax-0x768ab8f9],edi
  418e11:	pop    eax
  418e12:	push   es
  418e13:	gs mov ah,0x17
  418e16:	and    edx,DWORD PTR es:[eax]
  418e19:	xor    DWORD PTR [edi+0x6],ebx
  418e1c:	cmp    al,0x28
  418e1e:	jmp    0xd37e4512
  418e23:	js     0x418df0
  418e25:	call   0x8214:0x5971d7b6
  418e2c:	dec    ecx
  418e2d:	and    ah,BYTE PTR [esi]
  418e2f:	sub    al,0x11
  418e31:	push   ecx
  418e32:	jecxz  0x418de2
  418e34:	popa   
  418e35:	mov    cl,BYTE PTR [ebx]
  418e37:	add    dl,BYTE PTR [esi]
  418e39:	mov    bl,0xb8
  418e3b:	mov    WORD PTR [ecx+0x29],es
  418e3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e3f:	jb     0x418e09
  418e41:	lods   eax,DWORD PTR ds:[esi]
  418e42:	call   0xe6ea0a6d
  418e47:	out    dx,eax
  418e48:	repnz add BYTE PTR [ecx],ch
  418e4b:	push   ebx
  418e4c:	loopne 0x418e11
  418e4e:	pop    eax
  418e4f:	sub    eax,0x730ae48e
  418e54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e55:	xchg   esp,eax
  418e56:	add    eax,0x970a66d9
  418e5b:	clc    
  418e5c:	popf   
  418e5d:	out    0x2d,al
  418e5f:	int3   
  418e60:	or     bl,BYTE PTR [edi-0x73]
  418e63:	fwait
  418e64:	ror    BYTE PTR [ecx-0x5cd26143],1
  418e6a:	jl     0x418e21
  418e6c:	sub    ecx,DWORD PTR [eax+eiz*8+0x745d5803]
  418e73:	icebp  
  418e74:	adc    dh,dl
  418e76:	lea    edx,[ebx]
  418e78:	mov    edi,0x44c4984a
  418e7d:	test   esp,ebx
  418e7f:	div    BYTE PTR [edx-0xf233126]
  418e85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e86:	jbe    0x418ed8
  418e88:	mov    al,dl
  418e8a:	push   ds
  418e8b:	sti    
  418e8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e8d:	adc    ah,ah
  418e8f:	and    al,0xeb
  418e91:	ins    BYTE PTR es:[edi],dx
  418e92:	dec    ebx
  418e93:	div    BYTE PTR [ebx]
  418e95:	mov    DWORD PTR [edx-0x62e47b64],eax
  418e9b:	inc    edx
  418e9c:	les    edi,FWORD PTR [edi+edi*2-0x58837b4d]
  418ea3:	bound  esp,QWORD PTR [ecx]
  418ea5:	in     al,dx
  418ea6:	and    DWORD PTR [esi-0x2fa5119b],edx
  418eac:	mov    eax,0xc8e757d0
  418eb1:	push   cs
  418eb2:	mov    ecx,0xad644fa6
  418eb7:	div    DWORD PTR [ecx+ebp*2]
  418eba:	nop
  418ebb:	jge    0x418f2a
  418ebd:	add    dh,al
  418ebf:	pop    edx
  418ec0:	aas    
  418ec1:	cmp    al,0x7f
  418ec3:	or     ecx,DWORD PTR [ecx]
  418ec5:	call   0x5507:0x18c48df8
  418ecc:	sub    eax,0x4d94432f
  418ed1:	test   esp,edx
  418ed3:	dec    esi
  418ed4:	xchg   esi,eax
  418ed5:	dec    esp
  418ed6:	xchg   edi,eax
  418ed7:	jge    0x418f0c
  418ed9:	inc    ebp
  418eda:	adc    BYTE PTR [esi+edx*4-0x44],cl
  418ede:	add    DWORD PTR [esi-0x1e482213],eax
  418ee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ee5:	or     BYTE PTR [esi],cl
  418ee7:	jge    0x418f39
  418ee9:	ds push 0xffffff82
  418eec:	xlat   BYTE PTR ds:[ebx]
  418eed:	xor    edi,DWORD PTR [ecx-0x5f]
  418ef0:	cmp    BYTE PTR [edx],0x6d
  418ef3:	sbb    DWORD PTR [eax],ebx
  418ef5:	arpl   bx,dx
  418ef7:	pop    es
  418ef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ef9:	pop    edx
  418efa:	cmp    ch,bh
  418efc:	nop
  418efd:	push   es
  418efe:	mov    ecx,0xd5534f0c
  418f03:	adc    al,ah
  418f05:	daa    
  418f06:	pop    ebp
  418f07:	mov    bh,0x23
  418f09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f0a:	cdq    
  418f0b:	in     al,dx
  418f0c:	mov    ecx,0xff708eb0
  418f11:	out    0x23,al
  418f13:	ins    BYTE PTR es:[edi],dx
  418f14:	loop   0x418e9f
  418f16:	push   eax
  418f17:	push   es
  418f18:	outs   dx,BYTE PTR ds:[esi]
  418f19:	and    bl,BYTE PTR [edx]
  418f1b:	xchg   ebx,eax
  418f1c:	mov    al,ds:0xb3aa03eb
  418f21:	push   0x1
  418f23:	outs   dx,DWORD PTR ds:[esi]
  418f24:	(bad)  
  418f26:	push   eax
  418f27:	test   al,0x1d
  418f29:	mov    edi,0x1ba2af85
  418f2e:	or     ah,dl
  418f30:	mov    al,0xe
  418f32:	cli    
  418f33:	aad    0xe6
  418f35:	add    esp,DWORD PTR [ecx-0x2]
  418f38:	push   0x4ade0a46
  418f3d:	lods   eax,DWORD PTR ds:[esi]
  418f3e:	mov    ebx,0xb8d082a1
  418f43:	popf   
  418f44:	addr16 mov eax,ds:0x82df
  418f48:	mov    ebp,0x42b4d288
  418f4d:	pop    eax
  418f4e:	int    0x27
  418f50:	and    bl,BYTE PTR [ebx-0x3f]
  418f53:	test   eax,0x4f2d7021
  418f58:	mov    eax,ds:0xd21aea59
  418f5d:	dec    edx
  418f5e:	jmp    0x859525a7
  418f63:	pop    ecx
  418f64:	mov    ecx,0xd8cfdcc7
  418f69:	shl    DWORD PTR [ecx+edx*4-0x75],0x10
  418f6e:	sub    bh,BYTE PTR [eax]
  418f70:	fild   WORD PTR [esi+0x333d7c8b]
  418f76:	sub    BYTE PTR [edi-0x6b],cl
  418f79:	jb     0x418f22
  418f7b:	mov    al,0x99
  418f7d:	repz call 0x7aee:0xcbb23d84
  418f85:	scas   al,BYTE PTR es:[edi]
  418f86:	ins    DWORD PTR es:[edi],dx
  418f87:	test   DWORD PTR [eax],0x1583dd70
  418f8d:	xchg   edi,eax
  418f8e:	pusha  
  418f8f:	jne    0x418f40
  418f91:	cvtdq2ps xmm1,XMMWORD PTR [eax]
  418f94:	adc    DWORD PTR [ebx-0x30ec8b55],ebp
  418f9a:	or     ah,cl
  418f9c:	mov    cl,0x1c
  418f9e:	ins    DWORD PTR es:[edi],dx
  418f9f:	adc    DWORD PTR [eax+0x21],edx
  418fa2:	imul   ebp,DWORD PTR [ebp+esi*1+0x62620d37],0x746bdd56
  418fad:	loop   0x418f67
  418faf:	dec    ebx
  418fb0:	stos   DWORD PTR es:[edi],eax
  418fb1:	or     BYTE PTR [ebx],dh
  418fb3:	fwait
  418fb4:	or     BYTE PTR [esi+0x20],ah
  418fb7:	mov    ds:0x9225fa3d,eax
  418fbc:	fucomp st(2)
  418fbe:	xlat   BYTE PTR ds:[ebx]
  418fbf:	sub    BYTE PTR [edi],0xb3
  418fc2:	xchg   ebp,eax
  418fc3:	xchg   edi,eax
  418fc4:	pop    edi
  418fc5:	in     eax,dx
  418fc6:	iret   
  418fc7:	jbe    0x418fe7
  418fc9:	call   0x28f3:0xd3d2bf4b
  418fd0:	or     DWORD PTR [edx+0x7e],0x4911813a
  418fd7:	dec    edx
  418fd8:	pop    ds
  418fd9:	mov    ebp,0x7b58b8a6
  418fde:	mov    cl,0x5d
  418fe0:	pop    ds
  418fe1:	clc    
  418fe2:	jmp    0x419009
  418fe4:	xor    BYTE PTR [ebx],0xe3
  418fe7:	cs dec ecx
  418fe9:	inc    ebp
  418fea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418feb:	retf   
  418fec:	(bad)  
  418fee:	icebp  
  418fef:	lahf   
  418ff0:	push   eax
  418ff1:	xor    bl,bh
  418ff3:	aas    
  418ff4:	mov    al,0xdc
  418ff6:	adc    al,BYTE PTR [edx+0x75]
  418ff9:	push   ds
  418ffa:	cmp    al,0x17
  418ffc:	call   0xf9a4:0x5faf0799
  419003:	jle    0x418fdc
  419005:	cdq    
  419006:	pop    ebx
  419007:	dec    edx
  419008:	mul    DWORD PTR [edx]
  41900a:	or     ecx,esp
  41900c:	or     ecx,ecx
  41900e:	std    
  41900f:	ss inc ebp
  419011:	pop    edx
  419012:	cmp    DWORD PTR [esi+ecx*1],esi
  419015:	jmp    0xb58b:0x7a2908c0
  41901c:	sub    eax,0x838fc678
  419021:	and    al,0xde
  419023:	push   ebp
  419024:	dec    ecx
  419025:	imul   eax,DWORD PTR [ebp-0x2b348a60],0x5978c34b
  41902f:	or     DWORD PTR [eax+ebp*1-0x24aa45bf],0x51
  419037:	fistp  QWORD PTR [esi+0x7c]
  41903a:	dec    ebp
  41903b:	sub    DWORD PTR [edi-0x10],ebx
  41903e:	aaa    
  41903f:	ja     0x419077
  419041:	ret    0x9813
  419044:	dec    esp
  419045:	inc    edx
  419046:	cmc    
  419047:	test   al,0x91
  419049:	fbld   TBYTE PTR [ecx-0x34f6442f]
  41904f:	pushf  
  419050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419051:	xor    ebp,ebp
  419053:	adc    DWORD PTR [eax-0x3d],0x6e8d54c3
  41905a:	adc    edx,DWORD PTR [edi]
  41905c:	jg     0x419050
  41905e:	sub    ecx,0xffffffae
  419061:	sbb    eax,0xe463406f
  419066:	push   esi
  419067:	xor    DWORD PTR [eax+ebp*8],ebp
  41906a:	jmp    0x4190dd
  41906c:	jmp    0xfa9fabc4
  419071:	jb     0x4190d7
  419073:	mov    WORD PTR [ebx-0x152acc33],fs
  419079:	or     cl,BYTE PTR [ecx+edx*8+0x7e]
  41907d:	push   cs
  41907e:	xchg   edi,eax
  41907f:	jecxz  0x4190a0
  419081:	adc    BYTE PTR [edx-0x77],ah
  419084:	sbb    ebx,DWORD PTR [edx]
  419086:	mov    ch,0x41
  419088:	jle    0x419104
  41908a:	sub    DWORD PTR [ebp-0x2b09308f],edx
  419090:	sbb    ecx,edi
  419092:	fnstsw WORD PTR [ecx-0x7843ce15]
  419098:	push   ss
  419099:	ins    BYTE PTR es:[edi],dx
  41909a:	xchg   esp,eax
  41909b:	push   edx
  41909c:	mov    ds:0x43d84016,al
  4190a1:	aaa    
  4190a2:	loope  0x4190a4
  4190a4:	sbb    BYTE PTR [ebx-0x58a18f6d],dh
  4190aa:	mov    edx,0x53c3a252
  4190af:	stos   DWORD PTR es:[edi],eax
  4190b0:	dec    ebp
  4190b1:	out    dx,eax
  4190b2:	push   0xffffff87
  4190b4:	outs   dx,BYTE PTR ds:[esi]
  4190b5:	retf   
  4190b6:	or     al,0x2f
  4190b8:	mov    edx,0x60f17a77
  4190bd:	pop    edi
  4190be:	pushf  
  4190bf:	adc    BYTE PTR [edx+0x5c6f51dc],dh
  4190c5:	(bad)  
  4190c6:	into   
  4190c7:	inc    edi
  4190c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190c9:	and    edx,ecx
  4190cb:	jge    0x4190df
  4190cd:	adc    eax,0xb50138b8
  4190d2:	and    eax,0x5e06cca0
  4190d7:	arpl   WORD PTR [ebp-0x6c54dddf],cx
  4190dd:	iret   
  4190de:	and    BYTE PTR [edx-0x6c97d192],ah
  4190e4:	iret   
  4190e5:	and    DWORD PTR [edi],eax
  4190e7:	jns    0x4190dc
  4190e9:	cdq    
  4190ea:	mov    eax,0x3f230a00
  4190f0:	xchg   edx,eax
  4190f1:	adc    eax,0xe64aca25
  4190f6:	fwait
  4190f7:	sbb    eax,0x9a890f0f
  4190fc:	dec    edx
  4190fd:	mov    edx,0xd54dccd3
  419102:	mov    ch,0xc7
  419104:	addr16 cmp ecx,ebp
  419107:	pop    ecx
  419108:	jp     0x4190d5
  41910a:	fs out dx,eax
  41910c:	jmp    0xa873:0xa2510b74
  419113:	pop    ebx
  419114:	cmp    ecx,DWORD PTR [edx-0x7f6be77c]
  41911a:	jge    0x419196
  41911c:	push   cs
  41911d:	jge    0x41915e
  41911f:	nop
  419120:	stos   BYTE PTR es:[edi],al
  419121:	dec    ebp
  419122:	mov    esp,edi
  419124:	pop    ecx
  419125:	or     ecx,DWORD PTR [edi+0x2024370a]
  41912b:	nop
  41912c:	and    ch,al
  41912e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41912f:	inc    esp
  419130:	leave  
  419131:	(bad)  
  419132:	push   ss
  419133:	jmp    0x48599c34
  419138:	inc    ecx
  419139:	xor    BYTE PTR [edi+0x5143c8a9],ch
  41913f:	fbstp  TBYTE PTR [ecx-0x3577573]
  419145:	jl     0x419184
  419147:	fstp   QWORD PTR [ebx+ebp*2+0x1]
  41914b:	ins    DWORD PTR es:[edi],dx
  41914c:	cmp    DWORD PTR [eax],0xffffffbc
  41914f:	mov    ecx,0x8d802e8d
  419154:	imul   edx,DWORD PTR [edi-0x21],0x4ae7d851
  41915b:	ret    0x7f07
  41915e:	xor    DWORD PTR [ebp+0xfa41d10],esi
  419164:	or     DWORD PTR [eax-0x7b],ebx
  419167:	inc    ecx
  419168:	icebp  
  419169:	xor    BYTE PTR [ebp+0x4f04021c],cl
  41916f:	dec    esi
  419170:	lods   eax,DWORD PTR ds:[esi]
  419171:	xchg   eax,ebp
  419173:	adc    eax,0x660e0c00
  419178:	int    0x66
  41917a:	mov    al,ds:0x9b513d14
  41917f:	shl    dh,0x2d
  419182:	adc    BYTE PTR ds:0x901b88d8,ch
  419188:	adc    DWORD PTR [edx-0x2e],ecx
  41918b:	fidivr DWORD PTR [eax]
  41918d:	xor    eax,0xd5fe2779
  419192:	dec    edi
  419193:	aad    0x8a
  419195:	repnz sbb DWORD PTR [eax-0x506f3f4],0x8244d96b
  4191a0:	mov    ah,0xae
  4191a2:	int3   
  4191a3:	loop   0x4191c1
  4191a5:	mov    DWORD PTR [eax],esp
  4191a7:	and    al,0xb8
  4191a9:	push   ebp
  4191aa:	or     al,0xb7
  4191ac:	mov    al,ds:0xb7123107
  4191b1:	in     al,0x76
  4191b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191b4:	mov    al,ds:0xc6fc19f5
  4191b9:	ins    DWORD PTR es:[edi],dx
  4191ba:	add    ebp,0x4dc21c61
  4191c0:	ror    BYTE PTR [edx-0x46],1
  4191c3:	aaa    
  4191c4:	fs jecxz 0x41917b
  4191c7:	jle    0x419151
  4191c9:	mov    ebx,0x892f7f5
  4191ce:	pop    edx
  4191cf:	call   0x10acff6b
  4191d4:	add    esp,DWORD PTR [edx+0x7b981dbb]
  4191da:	inc    edi
  4191db:	jle    0x4191d5
  4191dd:	sti    
  4191de:	push   es
  4191df:	aas    
  4191e0:	cmp    ch,BYTE PTR [eax+0x2591b2e8]
  4191e6:	xlat   BYTE PTR ds:[ebx]
  4191e7:	(bad)  
  4191e8:	fs sbb al,0x23
  4191eb:	jo     0x419256
  4191ed:	retf   0x8544
  4191f0:	cmp    al,0x10
  4191f2:	sub    BYTE PTR [ecx+0x9],dl
  4191f5:	out    0x32,eax
  4191f7:	fsub   DWORD PTR [esi+0x7a]
  4191fa:	cmc    
  4191fb:	test   DWORD PTR [eax+0x79],0xe8dd00ae
  419202:	jo     0x41926d
  419204:	push   esi
  419205:	inc    edx
  419206:	retf   
  419207:	xor    esp,esp
  419209:	add    dl,BYTE PTR ds:0x7e57d2ac
  41920f:	push   ebx
  419210:	inc    esi
  419211:	jbe    0x419260
  419213:	cmp    ecx,DWORD PTR [ecx+0x7d752a8]
  419219:	mov    edi,0x67bfb09f
  41921e:	jecxz  0x4191ce
  419220:	jb     0x419222
  419222:	arpl   WORD PTR [esi-0x3e],di
  419225:	outs   dx,BYTE PTR ds:[esi]
  419226:	in     al,0xc7
  419228:	jg     0x41925c
  41922a:	fnsave [esi+0x21]
  41922d:	retf   0xa0c2
  419230:	ss jae 0x419201
  419233:	xor    DWORD PTR [eax],0xb664881c
  419239:	inc    edx
  41923a:	js     0x419268
  41923c:	das    
  41923d:	aas    
  41923e:	mov    ah,0x15
  419240:	adc    bl,BYTE PTR [edi]
  419242:	fwait
  419243:	es out 0x6,al
  419246:	ja     0x41924f
  419248:	mov    bh,0xa9
  41924a:	(bad)  
  41924c:	lods   al,BYTE PTR ds:[esi]
  41924d:	cwde   
  41924e:	pop    eax
  41924f:	fsubr  st(1),st
  419251:	jmp    FWORD PTR [esi]
  419253:	aaa    
  419254:	jb     0x419248
  419256:	push   esi
  419257:	mov    ebx,0x51f77208
  41925c:	xchg   esi,eax
  41925d:	std    
  41925e:	push   esp
  41925f:	xchg   esp,eax
  419260:	adc    al,0x34
  419262:	mov    edi,edi
  419264:	push   0xffffffa9
  419266:	leave  
  419267:	cmovle ecx,DWORD PTR [esp+ebx*1]
  41926b:	inc    edx
  41926c:	pushf  
  41926d:	pop    eax
  41926e:	call   0xe520:0x8190cb4a
  419275:	jecxz  0x4192dc
  419277:	jp     0x4192dc
  419279:	adc    esi,esi
  41927b:	mov    dh,0xa3
  41927d:	aad    0x5
  41927f:	cld    
  419280:	stos   DWORD PTR es:[edi],eax
  419281:	rcr    BYTE PTR [edi],0xc7
  419284:	cli    
  419285:	out    0x6a,al
  419287:	push   0x3f31b0cc
  41928c:	ins    BYTE PTR es:[edi],dx
  41928d:	and    al,0xd4
  41928f:	xor    ecx,eax
  419291:	mov    DWORD PTR [ebp+0x8],ecx
  419294:	mov    ecx,DWORD PTR [ebp+0x8]
  419297:	mov    edx,DWORD PTR [ebp-0x58]
  41929a:	add    ecx,0x5708e2
  4192a0:	imul   ecx,edx
  4192a3:	mov    DWORD PTR [ebp-0x58],ecx
  4192a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4192a9:	mov    edx,DWORD PTR [ebp-0x54]
  4192ac:	add    ecx,0x64f89c
  4192b2:	or     ecx,edx
  4192b4:	mov    DWORD PTR [ebp-0x54],ecx
  4192b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4192ba:	jmp    0x41b643
  4192bf:	aad    0xa2
  4192c1:	mov    dh,0x8d
  4192c3:	mov    al,0x81
  4192c5:	ror    BYTE PTR [edx+0x26797ce2],0xd2
  4192cc:	out    dx,eax
  4192cd:	push   esi
  4192ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192cf:	daa    
  4192d0:	sbb    al,0x82
  4192d2:	adc    DWORD PTR [edi],0x5c
  4192d5:	add    DWORD PTR [ebx+0x35c03b1c],0xffffffbb
  4192dc:	mov    edx,0x12cb16a
  4192e1:	mov    edi,0xc1aa439b
  4192e6:	outs   dx,BYTE PTR ds:[esi]
  4192e7:	(bad)  
  4192e8:	lods   eax,DWORD PTR ds:[esi]
  4192e9:	mov    esi,0xa5887b9a
  4192ee:	xchg   ebp,esp
  4192f0:	call   0x9ece:0x9b7981b1
  4192f7:	fsubrp st(6),st
  4192f9:	aas    
  4192fa:	xchg   esi,eax
  4192fb:	mov    al,ds:0xebb3e1ac
  419300:	int    0x40
  419302:	mov    WORD PTR [esp],es
  419305:	fs inc ebp
  419307:	mov    eax,0x806f5d47
  41930c:	out    0x1d,eax
  41930e:	imul   ebx,ecx,0xa2a95f1
  419314:	mov    dh,0x9d
  419316:	test   ebp,ebx
  419318:	push   0xffffffa1
  41931a:	push   eax
  41931b:	pop    edi
  41931c:	and    al,0xeb
  41931e:	and    ebx,ecx
  419320:	sub    DWORD PTR ds:0xb41a34b7,edi
  419326:	xchg   ebx,eax
  419327:	xchg   ebp,eax
  419328:	pop    esi
  419329:	xchg   ah,al
  41932b:	or     BYTE PTR [ebp+0x24],al
  41932e:	xor    eax,0xc0f267d2
  419333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419334:	cmp    eax,0x78599965
  419339:	adc    ch,bl
  41933b:	loopne 0x41935c
  41933d:	dec    esp
  41933e:	or     eax,0x3374514d
  419343:	sub    eax,0x7654add5
  419348:	aad    0x42
  41934a:	ins    DWORD PTR es:[edi],dx
  41934b:	daa    
  41934c:	aaa    
  41934d:	cli    
  41934e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41934f:	jne    0x4193bb
  419351:	es sti 
  419353:	fcomp  QWORD PTR [edx]
  419355:	neg    ecx
  419357:	mov    ss,edi
  419359:	popw   ss
  41935b:	outs   dx,BYTE PTR ds:[esi]
  41935c:	mov    ebx,0xa178359f
  419361:	loope  0x41930c
  419363:	jmp    0x4596:0xa22fd41
  41936a:	cmp    eax,0x38800390
  41936f:	mov    esi,0xbe929ab8
  419374:	popa   
  419375:	mov    bl,cl
  419377:	std    
  419378:	ss jg  0x419308
  41937b:	xchg   edx,eax
  41937c:	add    DWORD PTR [edx+0x4e1d2e2],ebp
  419382:	lock inc eax
  419384:	dec    edi
  419385:	shl    bl,1
  419387:	pop    ds
  419388:	fnstsw WORD PTR [edi]
  41938a:	lock shl BYTE PTR [edi],1
  41938d:	test   BYTE PTR [edi+edi*4-0x69],ah
  419391:	add    al,0x3f
  419393:	jle    0x4193ba
  419395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419396:	jp     0x419381
  419398:	push   ds
  419399:	ret    0xe283
  41939c:	push   es
  41939d:	in     eax,dx
  41939e:	clc    
  41939f:	push   edi
  4193a0:	and    ebp,ebx
  4193a2:	aaa    
  4193a3:	pushf  
  4193a4:	push   esp
  4193a5:	mov    fs,edi
  4193a7:	sar    ebp,0x16
  4193aa:	add    eax,0xae550f89
  4193af:	fstp   QWORD PTR [ebx]
  4193b1:	clc    
  4193b2:	inc    ecx
  4193b3:	dec    ebp
  4193b4:	adc    edx,DWORD PTR ds:0x665ccb69
  4193ba:	jmp    0x4193d6
  4193bc:	dec    esp
  4193bd:	sahf   
  4193be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193bf:	mov    ah,BYTE PTR [ecx-0x77]
  4193c2:	jg     0x4193df
  4193c4:	fnstenv [esp+ebx*4-0x3e]
  4193c8:	fwait
  4193c9:	xchg   edx,eax
  4193ca:	jg     0x419360
  4193cc:	fs sbb al,0x28
  4193cf:	test   al,0x7b
  4193d1:	inc    ebp
  4193d2:	jmp    0x41937f
  4193d4:	(bad)  
  4193d5:	mov    bl,0xd7
  4193d7:	pop    eax
  4193d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193d9:	leave  
  4193da:	stc    
  4193db:	jbe    0x4193a2
  4193dd:	or     DWORD PTR [edi-0x8],esi
  4193e0:	scas   eax,DWORD PTR es:[edi]
  4193e1:	out    0x31,eax
  4193e3:	jp     0x4193c9
  4193e5:	mov    ebp,0x28b4d5b4
  4193ea:	xchg   edx,eax
  4193eb:	mov    esi,0x52c1a369
  4193f0:	std    
  4193f1:	pop    esi
  4193f2:	and    al,0x4a
  4193f4:	and    eax,0x4136f62d
  4193f9:	jns    0x419409
  4193fb:	std    
  4193fc:	inc    edx
  4193fd:	sbb    dl,BYTE PTR cs:[edi-0x30b8f833]
  419404:	test   eax,0x63bcc8bf
  419409:	mov    ds:0x31b04299,eax
  41940e:	stc    
  41940f:	imul   esp,DWORD PTR [edx-0x56919d4b],0xffffffac
  419416:	adc    eax,0x81613e27
  41941b:	and    edx,DWORD PTR [eax+0x4195b527]
  419421:	xchg   ecx,eax
  419422:	fldcw  WORD PTR [ebp-0xb6a3e5e]
  419428:	cdq    
  419429:	push   eax
  41942a:	and    bl,BYTE PTR [esp+ebx*2+0x21a70509]
  419431:	push   edx
  419432:	sub    eax,0x685d7655
  419437:	jmp    DWORD PTR [edi-0x40]
  41943a:	add    eax,0x361472d1
  41943f:	or     eax,0xa89740ba
  419444:	inc    edx
  419445:	fsub   QWORD PTR [esi]
  419447:	les    eax,FWORD PTR [ebp+0x14b446ad]
  41944d:	jecxz  0x41948c
  41944f:	jno    0x4193e1
  419451:	ss pop eax
  419453:	sub    eax,0x4213d51c
  419458:	adc    DWORD PTR [ecx-0x5],esp
  41945b:	mov    esp,DWORD PTR ds:0xbc407aa
  419461:	mov    DWORD PTR [edx-0x3c3e8fe7],edi
  419467:	call   0x9a74e50e
  41946c:	pusha  
  41946d:	icebp  
  41946e:	(bad)  
  41946f:	pop    ds
  419470:	pop    ecx
  419471:	dec    ebx
  419472:	cmp    eax,0x20d49b9f
  419477:	cwde   
  419478:	aas    
  419479:	lea    ecx,ds:0x34a3ce4
  41947f:	sub    cl,ah
  419481:	das    
  419482:	sbb    al,0x4a
  419484:	push   esi
  419485:	pop    ecx
  419486:	inc    esp
  419487:	cmp    BYTE PTR [eax-0x6a8654f4],0x9f
  41948e:	retf   
  41948f:	sbb    esp,DWORD PTR [esi+0x32]
  419492:	sahf   
  419493:	and    al,0x59
  419495:	clc    
  419496:	cmc    
  419497:	enter  0x1870,0xd3
  41949b:	jbe    0x4194fb
  41949d:	mov    ecx,0xbc172d2a
  4194a2:	clc    
  4194a3:	adc    eax,0x50e4b337
  4194a8:	loope  0x41948e
  4194aa:	jae    0x41951a
  4194ac:	push   edx
  4194ad:	bound  edi,QWORD PTR [eax-0x2b]
  4194b0:	out    0xbb,al
  4194b2:	std    
  4194b3:	pop    ebp
  4194b5:	out    dx,eax
  4194b6:	and    ebx,DWORD PTR [edx+0x937788a]
  4194bc:	js     0x419491
  4194be:	jl     0x4194d7
  4194c0:	shl    DWORD PTR [ecx+edx*1],0x64
  4194c4:	push   0xffffffa6
  4194c6:	add    bl,bl
  4194c8:	into   
  4194c9:	jmp    0x9bf78126
  4194ce:	mov    dh,0x5f
  4194d0:	push   cs
  4194d1:	inc    esp
  4194d2:	div    BYTE PTR [ebp-0x6f]
  4194d5:	xor    eax,0x592498b9
  4194da:	or     BYTE PTR [edi],al
  4194dc:	inc    ebp
  4194dd:	ror    DWORD PTR [ebx+0x10fc6e79],cl
  4194e3:	std    
  4194e4:	dec    eax
  4194e5:	rcl    BYTE PTR [edi+0x7b2df178],cl
  4194eb:	arpl   ax,ax
  4194ed:	sub    DWORD PTR [edi],0xbf39ff36
  4194f3:	sbb    al,0xa5
  4194f5:	stc    
  4194f6:	mul    ah
  4194f8:	in     al,dx
  4194f9:	inc    esp
  4194fa:	in     al,dx
  4194fb:	mov    ebp,0xc2cd976a
  419500:	and    al,0xfa
  419502:	xchg   ebx,eax
  419503:	aam    0x8f
  419505:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419506:	push   edx
  419507:	xor    eax,0x69328856
  41950c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41950d:	mov    bl,0xe
  41950f:	adc    al,0xb1
  419511:	icebp  
  419512:	sub    al,0xd8
  419514:	pop    ebp
  419515:	outs   dx,DWORD PTR ds:[esi]
  419516:	in     al,0x80
  419518:	sbb    al,0xf0
  41951a:	js     0x419571
  41951c:	or     cl,dh
  41951e:	mov    ds:0x38451b33,al
  419523:	shl    edi,cl
  419525:	int3   
  419526:	ins    DWORD PTR es:[edi],dx
  419527:	adc    eax,0x8873a436
  41952c:	push   0x9239cabe
  419531:	(bad)  
  419533:	xor    eax,0x60efc97c
  419538:	(bad)
  41953c:	sbb    BYTE PTR [ecx-0x3a],al
  41953f:	in     al,dx
  419540:	mov    edx,0xa7d7e835
  419545:	pop    ds
  419546:	xor    eax,0xaae9ce21
  41954b:	lahf   
  41954c:	sahf   
  41954d:	add    BYTE PTR [eax+edx*1],al
  419550:	pop    esi
  419551:	retf   0x27bc
  419554:	outs   dx,BYTE PTR ds:[esi]
  419555:	loope  0x4195b0
  419557:	xchg   DWORD PTR [edx-0x6a],esp
  41955a:	adc    BYTE PTR [edi],bh
  41955c:	cmp    eax,0x76fc2632
  419561:	sub    al,BYTE PTR [ecx+0x44]
  419564:	test   eax,0x88190482
  419569:	bndstx ds:0x5ed3ee7a,bnd0
  419570:	jge    0x41954d
  419572:	cmp    al,0xd4
  419574:	ds and al,0x57
  419577:	cmp    al,BYTE PTR [ebx+0x6c7d4237]
  41957d:	or     BYTE PTR [esp+edi*8],dh
  419580:	mov    eax,ds:0x21a9d33e
  419585:	call   0x33ec5aea
  41958a:	imul   eax,DWORD PTR [eax+ebp*4+0x4],0x87b26b0c
  419592:	pop    ecx
  419593:	fmul   DWORD PTR [ecx+0x4b46c390]
  419599:	in     eax,0xa3
  41959b:	fcmovnb st,st(5)
  41959d:	pop    edi
  41959e:	dec    esi
  41959f:	ret    0x3f8e
  4195a2:	out    dx,eax
  4195a3:	lods   eax,DWORD PTR ds:[esi]
  4195a4:	es and al,0xe1
  4195a7:	fcom   DWORD PTR [edx-0x78]
  4195aa:	std    
  4195ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195ac:	or     ebp,DWORD PTR [ebx]
  4195ae:	sti    
  4195af:	and    eax,0x8cd11346
  4195b4:	icebp  
  4195b5:	inc    eax
  4195b6:	mov    esp,0x5854cb60
  4195bb:	mov    ah,0x74
  4195bd:	push   ss
  4195be:	ins    DWORD PTR es:[edi],dx
  4195bf:	xchg   edx,eax
  4195c0:	xor    DWORD PTR es:[ecx+0x62b796f5],ebp
  4195c7:	sar    BYTE PTR [eax+0x5a],1
  4195ca:	jmp    0x4785:0x75571068
  4195d1:	mov    BYTE PTR [eax],cl
  4195d3:	sti    
  4195d4:	push   ds
  4195d5:	test   DWORD PTR [eax],eax
  4195d7:	jo     0x41960d
  4195d9:	shl    BYTE PTR [edi+0x4caba3f6],1
  4195df:	out    0xdf,eax
  4195e1:	or     cl,BYTE PTR [edi]
  4195e3:	(bad)  
  4195e4:	in     al,0xb
  4195e6:	gs jl  0x419595
  4195e9:	adc    DWORD PTR [ecx+0x48],edi
  4195ec:	cwde   
  4195ed:	(bad)  
  4195ee:	mov    al,0x4c
  4195f0:	push   0x9e097c46
  4195f5:	or     BYTE PTR [edx+0x7ae2c23c],dh
  4195fb:	pop    edx
  4195fc:	xchg   BYTE PTR [ebx+0x2cfa79df],dl
  419602:	rcr    dl,cl
  419604:	add    eax,0x2d686f57
  419609:	sbb    BYTE PTR [edi],cl
  41960b:	mov    ds:0xd93e9f97,eax
  419610:	jg     0x4195bd
  419612:	popf   
  419613:	in     al,0x22
  419615:	shr    BYTE PTR [eax+0x7b],1
  419618:	cmp    ah,BYTE PTR [edx-0x4eb42470]
  41961e:	pop    es
  41961f:	mov    edi,0xefd6f33c
  419624:	ret    
  419625:	fld    DWORD PTR [esp+ecx*1-0x5]
  419629:	pushf  
  41962a:	stos   DWORD PTR es:[edi],eax
  41962b:	cdq    
  41962c:	xor    BYTE PTR [edx+0xf],0x85
  419630:	lods   eax,DWORD PTR ds:[esi]
  419631:	push   edi
  419632:	test   DWORD PTR [edx+0x472a1678],esi
  419638:	fadd   DWORD PTR [esi-0x2ddce171]
  41963e:	jmp    0x8962f092
  419643:	sub    al,BYTE PTR [edx]
  419645:	test   DWORD PTR [ebx+0x7bb83104],ebx
  41964b:	pop    ds
  41964c:	fld    st(3)
  41964e:	inc    eax
  41964f:	sub    eax,0x4a777dc9
  419654:	dec    ebx
  419655:	gs in  eax,dx
  419657:	es sti 
  419659:	imul   eax,DWORD PTR [eax],0xcd19e995
  41965f:	pop    ebx
  419660:	push   edi
  419661:	jo     0x4195f1
  419663:	jl     0x419658
  419665:	dec    ebx
  419666:	ds jmp 0x419653
  419669:	out    0xe8,eax
  41966b:	arpl   WORD PTR [ecx+0x54],di
  41966e:	repz sbb BYTE PTR [edi-0x6e],bl
  419672:	test   DWORD PTR [ecx],ebp
  419674:	aaa    
  419675:	fild   WORD PTR [ebx+0xf4f6ba1]
  41967b:	mov    al,ds:0xfb701643
  419680:	loopne 0x4196dd
  419682:	cli    
  419683:	cdq    
  419684:	add    ebx,ecx
  419686:	aam    0xec
  419688:	inc    ecx
  419689:	sub    al,0x10
  41968b:	sub    edx,edi
  41968d:	sbb    DWORD PTR [edx-0x5d],esi
  419690:	sub    al,0xbd
  419692:	ins    BYTE PTR es:[edi],dx
  419693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419694:	test   al,0xad
  419696:	cdq    
  419697:	jno    0x41962b
  419699:	adc    ebp,edi
  41969b:	mov    edi,0xe1841710
  4196a0:	(bad)  
  4196a1:	mov    edi,0x3b5a92f9
  4196a6:	xchg   ebx,eax
  4196a7:	in     al,0x42
  4196a9:	shr    BYTE PTR [edi],cl
  4196ab:	xchg   ebx,eax
  4196ac:	jp     0x4196b8
  4196ae:	idiv   BYTE PTR [ebp+0x1a]
  4196b1:	fbstp  TBYTE PTR [esi]
  4196b3:	add    BYTE PTR [edi-0x6462f13f],bh
  4196b9:	(bad)  
  4196ba:	cmp    eax,0x7ef8a46a
  4196bf:	stos   BYTE PTR es:[edi],al
  4196c0:	adc    DWORD PTR [edx-0x3e01b24],eax
  4196c6:	mov    ebp,0x30eabfe2
  4196cb:	lock mov cs,WORD PTR [ebp+0x65]
  4196cf:	lods   eax,DWORD PTR ds:[esi]
  4196d0:	gs sub al,0xd3
  4196d3:	jns    0x41967c
  4196d5:	push   0x10
  4196d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196d8:	inc    edx
  4196d9:	mov    ebp,0x17f6663
  4196de:	and    al,0x4b
  4196e0:	and    al,0xc5
  4196e2:	cmp    dh,dh
  4196e4:	cmc    
  4196e5:	sti    
  4196e6:	lock and BYTE PTR [eax],dl
  4196e9:	mov    al,0x3c
  4196eb:	test   al,0x31
  4196ed:	lahf   
  4196ee:	jp     0x419676
  4196f0:	mov    ds:0x8ff7c313,al
  4196f5:	and    BYTE PTR [ebx+0x55],ah
  4196f8:	mov    ds:0x7812e71,al
  4196fd:	jns    0x419719
  4196ff:	iret   
  419700:	cld    
  419701:	mov    cl,0x9a
  419703:	sbb    ecx,0x2d
  419706:	pop    ds
  419707:	xchg   ebp,eax
  419708:	loopne 0x419763
  41970a:	test   DWORD PTR ss:[edi+0x59],0xf0fc1e4e
  419712:	and    al,0xf7
  419714:	mov    bl,0xe1
  419716:	es cmp al,0xfe
  419719:	std    
  41971a:	mov    dh,0x88
  41971c:	add    eax,0x4eae367b
  419721:	shr    edx,1
  419723:	mov    ebp,0x60f6a8ce
  419728:	jae    0x419753
  41972a:	cmp    eax,0x232deb01
  41972f:	bnd jge 0x419796
  419732:	sub    al,0xfb
  419734:	jg     0x41971a
  419736:	or     esp,ebp
  419738:	pop    ds
  419739:	inc    esi
  41973a:	cmp    DWORD PTR [edi+esi*8-0x67c774a0],0x90a363a5
  419745:	jns    0x419712
  419747:	or     cl,BYTE PTR [ecx-0x32]
  41974a:	fild   WORD PTR [esi]
  41974c:	and    eax,DWORD PTR [eax+0x46]
  41974f:	or     ecx,eax
  419751:	xor    esp,DWORD PTR [eax]
  419753:	in     al,0x6
  419755:	push   ebp
  419756:	(bad)  
  419758:	in     al,0xbb
  41975a:	cmp    eax,0x4d5f0da6
  41975f:	not    BYTE PTR [ecx-0x26b2a6ee]
  419765:	dec    edi
  419766:	enter  0xd32d,0xdb
  41976a:	cmp    dh,BYTE PTR ds:0xaca56d3b
  419770:	fbld   TBYTE PTR [eax*1+0x3903adb7]
  419777:	ja     0x4197c0
  419779:	inc    edx
  41977a:	jp     0x419755
  41977c:	(bad)  
  41977d:	out    dx,eax
  41977e:	xchg   esp,eax
  41977f:	test   DWORD PTR [eax],esp
  419781:	push   ebx
  419782:	mov    esp,0xc70676a4
  419787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419788:	cmp    dl,BYTE PTR [ebx+0x40a9128a]
  41978e:	jb     0x4197d5
  419790:	clc    
  419791:	fidivr WORD PTR [eax+0x55d8a72]
  419797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419798:	in     eax,dx
  419799:	jl     0x41980a
  41979b:	xor    al,BYTE PTR [edx-0x59dd5c1]
  4197a1:	lea    esi,[edx+ecx*1+0x9050c5]
  4197a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197a9:	push   edi
  4197aa:	sahf   
  4197ab:	pop    es
  4197ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197ad:	daa    
  4197ae:	push   esp
  4197af:	jge    0x41974b
  4197b1:	repnz mov bh,0x6b
  4197b4:	lahf   
  4197b5:	jmp    0x28ce2248
  4197ba:	pusha  
  4197bb:	cmp    edi,ecx
  4197bd:	or     BYTE PTR [esi],bh
  4197bf:	sub    DWORD PTR [ebx-0x37],ecx
  4197c2:	sbb    eax,DWORD PTR [edi+eiz*2-0x6f]
  4197c6:	stc    
  4197c7:	cld    
  4197c8:	es in  al,0xca
  4197cb:	int    0x3a
  4197cd:	sub    al,0xf9
  4197cf:	lods   eax,DWORD PTR ds:[esi]
  4197d0:	(bad)  
  4197d1:	in     al,dx
  4197d2:	jae    0x41983e
  4197d4:	aaa    
  4197d5:	mov    dl,BYTE PTR [edi]
  4197d7:	jb     0x41977f
  4197d9:	pop    es
  4197da:	repz dec edx
  4197dc:	cmp    BYTE PTR [ebx],al
  4197de:	inc    esp
  4197df:	mov    edx,0xa16ed2f6
  4197e4:	jmp    0x3791:0x981f64b3
  4197eb:	mov    ebp,0xf537b72d
  4197f0:	je     0x4197a9
  4197f2:	fnsave [ebp+0x21]
  4197f5:	retf   
  4197f6:	sahf   
  4197f7:	sub    ecx,0xcd536951
  4197fd:	mov    bl,0x48
  4197ff:	dec    edi
  419800:	xor    eax,0x5bd5d1a7
  419805:	jp     0x419809
  419807:	rcl    DWORD PTR [ecx+edx*2-0x7d],0x73
  41980c:	fimul  DWORD PTR [eax-0x12]
  41980f:	cmp    ah,BYTE PTR [ebx]
  419811:	cdq    
  419812:	jmp    0x4f04:0x1b01d73
  419819:	scas   al,BYTE PTR es:[edi]
  41981a:	and    DWORD PTR [eax],edi
  41981c:	jno    0x419855
  41981e:	sti    
  41981f:	or     ecx,esp
  419821:	inc    edx
  419822:	(bad)  
  419823:	jle    0x419803
  419825:	fild   WORD PTR [edi]
  419827:	xchg   edx,eax
  419828:	cs dec edi
  41982a:	xor    ebx,ecx
  41982c:	les    eax,FWORD PTR [esi+0x3f]
  41982f:	xor    ebx,DWORD PTR [eax+0x91a5bf7]
  419835:	push   edx
  419836:	loop   0x4197ed
  419838:	cmp    DWORD PTR [edi+edi*4-0x72],edx
  41983c:	imul   esp,DWORD PTR [esi],0xfffffff0
  41983f:	mov    ds:0xbe776c00,al
  419844:	test   eax,0x2b0fc65c
  419849:	mov    bl,0xc3
  41984b:	js     0x419816
  41984d:	std    
  41984e:	mov    dl,0x69
  419850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419851:	cld    
  419852:	dec    edx
  419853:	call   0x9d1c99eb
  419858:	stos   BYTE PTR es:[edi],al
  419859:	push   ebx
  41985a:	int    0x3f
  41985c:	rcl    cl,cl
  41985e:	retf   
  41985f:	xchg   DWORD PTR [esi+0x392168b6],ecx
  419865:	ja     0x419855
  419867:	popa   
  419868:	mov    bl,0x70
  41986a:	pop    edi
  41986b:	pop    ss
  41986c:	sbb    eax,0x195bf6f7
  419871:	ins    DWORD PTR es:[edi],dx
  419872:	xchg   ah,bh
  419874:	fnstenv [esi]
  419876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419877:	out    0x71,eax
  419879:	push   0xef081854
  41987e:	cmc    
  41987f:	ja     0x419889
  419881:	hlt    
  419882:	xor    eax,0x71f00ac4
  419887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419888:	jae    0x4198fd
  41988a:	(bad)  
  41988c:	fbstp  TBYTE PTR [edx+0x6c50edd0]
  419892:	cmp    BYTE PTR [esi-0x47],bl
  419895:	mov    al,dh
  419897:	mov    ds:0xe48c464,eax
  41989c:	and    ah,0x57
  41989f:	add    eax,0xe42e1705
  4198a4:	pop    ds
  4198a5:	ret    
  4198a6:	inc    ecx
  4198a7:	sbb    BYTE PTR [ebx+0x2dbb0e14],ch
  4198ad:	icebp  
  4198ae:	pop    ss
  4198af:	ror    BYTE PTR [eax+0x48],cl
  4198b2:	inc    edx
  4198b3:	jg     0x41991b
  4198b5:	jge    0x419872
  4198b7:	sub    al,0x14
  4198b9:	mov    ch,0xef
  4198bb:	fisub  DWORD PTR [esp+edx*1]
  4198be:	inc    edx
  4198bf:	scas   eax,DWORD PTR es:[edi]
  4198c0:	dec    ebp
  4198c1:	jp     0xe279c440
  4198c7:	push   edx
  4198c8:	pop    ss
  4198c9:	fiadd  DWORD PTR [ecx-0x35]
  4198cc:	xlat   BYTE PTR ds:[ebx]
  4198cd:	out    0xb4,eax
  4198cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198d0:	fnstcw WORD PTR [ecx+0x3]
  4198d3:	dec    edi
  4198d4:	mov    bh,0xb2
  4198d6:	mov    edx,0xc4e486df
  4198db:	sub    ch,dl
  4198dd:	shr    BYTE PTR [eax+0x69],cl
  4198e0:	inc    edx
  4198e1:	js     0x419873
  4198e3:	dec    esp
  4198e4:	xchg   edi,eax
  4198e5:	adc    esi,DWORD PTR [ebp+0x40c98323]
  4198eb:	adc    ebx,DWORD PTR ds:[eax]
  4198ee:	adc    DWORD PTR [edi],ebx
  4198f0:	dec    edx
  4198f1:	nop
  4198f2:	dec    ecx
  4198f3:	or     bl,dh
  4198f5:	test   DWORD PTR [edx+esi*4-0x2143162a],esp
  4198fc:	dec    ebp
  4198fd:	mov    WORD PTR [ebx-0x21f15d05],cs
  419903:	or     eax,0x332728d6
  419908:	cli    
  419909:	(bad)  
  41990a:	cld    
  41990b:	iret   
  41990c:	repz cmp eax,0xa0b5fe8b
  419912:	enter  0x8889,0x88
  419916:	xchg   esi,eax
  419917:	jge    0x4198bb
  419919:	inc    eax
  41991a:	pop    edx
  41991b:	inc    ebx
  41991c:	hlt    
  41991d:	in     eax,0xab
  41991f:	mov    esi,0x4c89ac00
  419924:	loop   0x4198ec
  419926:	adc    esp,edi
  419928:	push   0x232b87ac
  41992d:	push   edx
  41992e:	and    eax,0x1c6a39b3
  419933:	int    0xdf
  419935:	dec    edi
  419936:	push   eax
  419937:	les    ebx,FWORD PTR [esi+0x4e7d2ab0]
  41993d:	inc    ebx
  41993e:	aas    
  41993f:	fcomp  DWORD PTR [ecx]
  419941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419942:	and    esi,DWORD PTR [edx-0x582b9557]
  419948:	add    bh,BYTE PTR [esi+0x1c]
  41994b:	retf   0xc12f
  41994e:	loope  0x419915
  419950:	je     0x419923
  419952:	sti    
  419953:	mov    esi,0xfe692ab0
  419958:	mov    ecx,0x6db63115
  41995d:	pop    esi
  41995e:	cmp    DWORD PTR [eax+0x5e],ebp
  419961:	jnp    0x419930
  419963:	in     eax,0x4e
  419965:	das    
  419966:	and    al,0xe5
  419968:	jp     0x419992
  41996a:	dec    edx
  41996b:	adc    DWORD PTR [ecx],eax
  41996d:	sbb    DWORD PTR [ecx+ebp*4+0x26],esp
  419971:	jge    0x41998a
  419973:	repz lock jo 0x419949
  419977:	fimul  DWORD PTR gs:[ebp-0x5f3df7ea]
  41997e:	test   BYTE PTR [eax+0x19],dh
  419981:	mov    esp,0x5e26e864
  419986:	add    eax,0xa2301f4e
  41998b:	popa   
  41998c:	fcom   st(6)
  41998e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41998f:	(bad)  
  419990:	push   ss
  419991:	or     eax,0x20d5c720
  419996:	scas   al,BYTE PTR es:[edi]
  419997:	fiadd  DWORD PTR [edx+0x1f]
  41999a:	call   0x6cd:0xafa2107b
  4199a1:	hlt    
  4199a2:	push   esi
  4199a3:	sub    esp,esp
  4199a5:	lods   al,BYTE PTR ds:[esi]
  4199a6:	add    BYTE PTR [ebx+edx*8],dl
  4199a9:	or     al,BYTE PTR [edi-0x3c5c475a]
  4199af:	or     bl,al
  4199b1:	xor    al,0x79
  4199b3:	dec    ecx
  4199b4:	jne    0x419a01
  4199b6:	or     DWORD PTR [ebx-0x7d],eax
  4199b9:	sbb    eax,0x82d6a7de
  4199be:	xchg   ebp,eax
  4199bf:	jo     0x419a34
  4199c1:	cdq    
  4199c2:	or     al,0xfc
  4199c4:	imul   edx,DWORD PTR [ecx+0x5e],0x85b87948
  4199cb:	xchg   ecx,eax
  4199cc:	inc    edx
  4199cd:	cmp    DWORD PTR [edx+0x4b],edi
  4199d0:	aam    0x35
  4199d2:	push   esp
  4199d3:	adc    bl,cl
  4199d5:	sub    cl,BYTE PTR [ebx-0x60]
  4199d8:	mov    ah,0x40
  4199da:	outs   dx,DWORD PTR ds:[esi]
  4199db:	cmp    eax,0x24f55a74
  4199e0:	xchg   BYTE PTR [esi+ebx*4+0x40a4c22e],dl
  4199e7:	icebp  
  4199e8:	scas   al,BYTE PTR es:[edi]
  4199e9:	xlat   BYTE PTR ds:[ebx]
  4199ea:	mov    esi,0xf00099d5
  4199ef:	xor    bh,BYTE PTR [eax+0x3223875b]
  4199f5:	sub    al,0x8c
  4199f7:	cmp    eax,0x7a82e309
  4199fc:	sub    al,0x49
  4199fe:	clc    
  4199ff:	cmp    edi,DWORD PTR [ecx+0x4ac41315]
  419a05:	jb     0x419a50
  419a07:	popa   
  419a08:	jno    0x419a2a
  419a0a:	into   
  419a0b:	jecxz  0x419a76
  419a0d:	mov    bh,0xc6
  419a0f:	fisub  WORD PTR [ebx-0xcf328d]
  419a15:	stos   BYTE PTR es:[edi],al
  419a16:	xor    dl,dl
  419a18:	pusha  
  419a19:	add    DWORD PTR [ebx-0x46],ecx
  419a1c:	mov    ds:0x2f9d3f76,al
  419a21:	and    BYTE PTR [esi],0x92
  419a24:	fstp   DWORD PTR [ebx+edx*2]
  419a27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a28:	push   esp
  419a29:	dec    ebx
  419a2a:	out    dx,al
  419a2b:	xchg   ebp,edi
  419a2d:	mov    esp,0x2d67515
  419a32:	xchg   ebp,eax
  419a33:	add    DWORD PTR [esi],ecx
  419a35:	enter  0xa0c2,0x89
  419a39:	mov    edi,0x2ccb9735
  419a3e:	sub    eax,DWORD PTR [eax+ecx*1+0x3]
  419a42:	es sub ebp,ebx
  419a45:	xchg   ebp,eax
  419a46:	or     edi,DWORD PTR [esi]
  419a48:	(bad)  
  419a49:	mov    ebp,0x7d34dd4c
  419a4e:	gs xor ebp,ebp
  419a51:	sub    DWORD PTR [edi-0x27],0xffffff96
  419a55:	popa   
  419a56:	icebp  
  419a57:	mov    dl,0xe0
  419a59:	mov    al,ds:0xecce6408
  419a5e:	lods   eax,DWORD PTR ds:[esi]
  419a5f:	push   0x5f
  419a61:	aad    0xef
  419a63:	adc    al,0x3b
  419a65:	pushf  
  419a66:	pop    edi
  419a67:	and    DWORD PTR [ebx],0x12
  419a6a:	or     ch,BYTE PTR [esi]
  419a6c:	push   edi
  419a6d:	mov    edi,0x1bb1004
  419a72:	sub    cl,BYTE PTR [ebp-0x712d66cb]
  419a78:	mov    ds:0xda680222,al
  419a7d:	sbb    BYTE PTR [edx],bl
  419a7f:	clc    
  419a80:	loope  0x419ab1
  419a82:	mov    al,BYTE PTR [edx-0x2a]
  419a85:	scas   al,BYTE PTR es:[edi]
  419a86:	nop
  419a87:	aaa    
  419a88:	leave  
  419a89:	inc    eax
  419a8a:	(bad)  
  419a8b:	cmp    eax,0x5ad0703d
  419a90:	sbb    ecx,ebp
  419a92:	retf   0xd0b2
  419a95:	fstp   TBYTE PTR [eax]
  419a97:	sub    DWORD PTR [ebp+edx*8-0x6cb8ba2d],ecx
  419a9e:	pusha  
  419a9f:	inc    edi
  419aa0:	daa    
  419aa1:	dec    esi
  419aa2:	sti    
  419aa3:	push   es
  419aa4:	xchg   esp,eax
  419aa5:	dec    edx
  419aa6:	add    DWORD PTR ds:0xe86fa183,esp
  419aac:	ja     0x419aea
  419aae:	pop    edx
  419aaf:	mov    dl,cl
  419ab1:	cdq    
  419ab2:	or     DWORD PTR ds:0x1a207228,esi
  419ab8:	mov    BYTE PTR [esp+ebp*1+0x68e87b33],al
  419abf:	sbb    al,dh
  419ac1:	push   cs
  419ac2:	cld    
  419ac3:	xor    DWORD PTR [ebx-0x1d],edx
  419ac6:	sbb    eax,0x4858c8d9
  419acb:	das    
  419acc:	dec    ebx
  419acd:	scas   al,BYTE PTR es:[edi]
  419ace:	jmp    0x260cd44b
  419ad3:	leave  
  419ad4:	sub    eax,0xe8349425
  419ad9:	jns    0x419ac0
  419adb:	push   0x8db8ed7f
  419ae0:	and    eax,0x2fa63d29
  419ae5:	pop    ebx
  419ae6:	test   DWORD PTR [ecx+0x5eccf7d6],ecx
  419aec:	shr    BYTE PTR [edx+ecx*4],1
  419aef:	cli    
  419af0:	icebp  
  419af1:	imul   edx,esp,0xbc87b5f5
  419af7:	cmp    BYTE PTR [ebx],ch
  419af9:	mov    ebx,0x1bdc98b9
  419afe:	dec    edi
  419aff:	xlat   BYTE PTR ds:[ebx]
  419b00:	jo     0x419af6
  419b02:	pop    ds
  419b03:	test   cx,bx
  419b06:	in     eax,0x89
  419b08:	add    dl,cl
  419b0a:	lods   eax,DWORD PTR ds:[esi]
  419b0b:	cmp    eax,0x86a1c0be
  419b10:	dec    ebp
  419b11:	aam    0x0
  419b13:	not    BYTE PTR [esi-0x1d]
  419b16:	mov    edi,0x430c703
  419b1b:	xor    eax,eax
  419b1d:	test   eax,0xb9244c12
  419b22:	iret   
  419b23:	enter  0x13b2,0xc3
  419b27:	push   ebp
  419b28:	cmp    DWORD PTR [esp+eax*4-0x5f6d3c0c],edi
  419b2f:	mov    esp,0x1d1b87b4
  419b34:	cmp    al,0xab
  419b36:	test   al,0xd8
  419b38:	adc    al,0xbf
  419b3a:	lods   eax,DWORD PTR ds:[esi]
  419b3b:	das    
  419b3c:	je     0x419ad8
  419b3e:	test   al,0x80
  419b40:	(bad)  
  419b41:	lock push edx
  419b43:	sbb    ecx,edx
  419b45:	push   ss
  419b46:	dec    ebx
  419b47:	push   esp
  419b48:	out    dx,al
  419b49:	inc    edi
  419b4a:	call   0xabd72078
  419b4f:	push   es
  419b50:	repnz push ebp
  419b52:	push   esi
  419b53:	dec    bl
  419b55:	xchg   DWORD PTR [ecx-0x5acfddb3],ebp
  419b5b:	imul   eax,DWORD PTR [ecx+eax*1-0x5c7ff45],0xae421984
  419b66:	out    0x6,eax
  419b68:	cmp    ebp,DWORD PTR [edi]
  419b6a:	rcl    BYTE PTR [eax+ebp*4],1
  419b6d:	or     esp,ecx
  419b6f:	jbe    0x419bb2
  419b71:	sbb    BYTE PTR [ecx],ah
  419b73:	add    al,0x78
  419b75:	and    ebx,edx
  419b77:	dec    ebp
  419b78:	jg     0x419afa
  419b7a:	mov    ah,cl
  419b7c:	fist   WORD PTR [esi]
  419b7e:	jg     0x419b6d
  419b80:	dec    edi
  419b81:	mov    cl,0xc9
  419b83:	push   esi
  419b84:	(bad)  
  419b85:	sbb    al,0x9f
  419b87:	arpl   ax,dx
  419b89:	cli    
  419b8a:	rep lods eax,DWORD PTR ds:[esi]
  419b8c:	sbb    BYTE PTR [edx-0xe1b169],0xaf
  419b93:	jb     0x419bd8
  419b95:	fs mov esp,0xbb0e627a
  419b9b:	cmp    al,0x47
  419b9d:	in     eax,0x19
  419b9f:	cmp    al,0xd
  419ba1:	dec    ebx
  419ba2:	mov    edx,0xbe2abf80
  419ba7:	sbb    eax,0xc6a23f64
  419bac:	add    DWORD PTR [ebp-0x58860742],ecx
  419bb2:	repz dec eax
  419bb4:	mov    al,0x5c
  419bb6:	pop    edx
  419bb7:	enter  0xca9e,0x81
  419bbb:	(bad)
  419bbe:	lea    esi,[edi]
  419bc0:	sub    eax,0x367b81fc
  419bc5:	dec    ecx
  419bc6:	mov    ecx,ecx
  419bc8:	lea    esp,[edx+ebp*1-0x25]
  419bcc:	adc    DWORD PTR [eax],ecx
  419bce:	cmp    DWORD PTR cs:0x7b0f3bfd,esi
  419bd5:	xchg   edi,eax
  419bd6:	(bad)  [eax]
  419bd8:	in     eax,0x30
  419bda:	xchg   edi,eax
  419bdb:	(bad)  
  419bdc:	cmc    
  419bdd:	inc    ebx
  419bde:	adc    esp,DWORD PTR [edi]
  419be0:	enter  0xbfbc,0x97
  419be4:	fild   WORD PTR [ebx-0x7185c750]
  419bea:	(bad)  
  419bec:	ror    BYTE PTR ds:0x610f8b43,cl
  419bf2:	cdq    
  419bf3:	lods   eax,DWORD PTR ds:[esi]
  419bf4:	imul   edi,DWORD PTR [ecx-0x75],0x104cd9d4
  419bfb:	cld    
  419bfc:	cmp    bh,bl
  419bfe:	in     al,0xd3
  419c00:	or     DWORD PTR [esi+0x37],ecx
  419c03:	sbb    edx,DWORD PTR [ebp-0x3434b35f]
  419c09:	bts    DWORD PTR [esi+0x22642a16],edx
  419c10:	pop    ebp
  419c11:	sub    cl,BYTE PTR [esi-0x533deb34]
  419c17:	in     al,dx
  419c18:	lods   al,BYTE PTR ds:[esi]
  419c19:	mov    dh,0xe5
  419c1b:	xor    eax,0x6019e79c
  419c20:	out    0xc9,al
  419c22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c23:	mov    esp,0x464f994c
  419c28:	jnp    0x419c96
  419c2a:	int    0xeb
  419c2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c2d:	sar    ah,0x8d
  419c30:	and    eax,0xbfe335
  419c35:	and    edx,ecx
  419c37:	jmp    0xe0e73961
  419c3c:	sub    DWORD PTR [esi],esi
  419c3e:	xor    eax,0x4e348b99
  419c43:	mov    ecx,0x65f96c8a
  419c48:	loope  0x419cc7
  419c4a:	cdq    
  419c4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c4c:	push   ebx
  419c4d:	sub    edx,DWORD PTR [ebp+ecx*1-0x1a9d7889]
  419c54:	adc    BYTE PTR [edx-0x34acd06b],0xb5
  419c5b:	ds aas 
  419c5d:	mov    BYTE PTR [edi],bl
  419c5f:	push   0xffffffa1
  419c61:	and    al,0x5d
  419c63:	lahf   
  419c64:	shr    DWORD PTR [edi+0x2c],0x35
  419c68:	aad    0x76
  419c6a:	dec    esi
  419c6b:	hlt    
  419c6c:	xchg   ecx,eax
  419c6d:	lods   al,BYTE PTR ds:[esi]
  419c6e:	push   cs
  419c6f:	fstp   TBYTE PTR [ebx]
  419c71:	stos   BYTE PTR es:[edi],al
  419c72:	and    edi,eax
  419c74:	les    edx,FWORD PTR [eax-0x71]
  419c77:	jno    0x419ce5
  419c79:	ja     0x419c56
  419c7b:	retf   
  419c7c:	cs xor eax,0xc2065883
  419c82:	ret    0x7458
  419c85:	clc    
  419c86:	out    0x49,eax
  419c88:	lock pop esp
  419c8a:	in     eax,0xce
  419c8c:	je     0x419ccb
  419c8e:	dec    ecx
  419c8f:	xlat   BYTE PTR ds:[ebx]
  419c90:	inc    esi
  419c91:	add    ebp,0xffffffbd
  419c94:	enter  0x3001,0x2d
  419c98:	jge    0x419cac
  419c9a:	lods   al,BYTE PTR ds:[esi]
  419c9b:	xchg   edx,eax
  419c9c:	push   0xe75c7c9b
  419ca1:	aad    0x69
  419ca3:	retf   0x4dc8
  419ca6:	imul   edi,DWORD PTR ds:0x8b3338da,0x4f
  419cad:	inc    ebp
  419cae:	add    edi,DWORD PTR ds:0xebee391b
  419cb4:	push   eax
  419cb5:	adc    DWORD PTR [ecx],0x7
  419cb8:	pop    es
  419cb9:	aas    
  419cba:	loop   0x419d00
  419cbc:	sbb    esi,DWORD PTR [edx-0x2e]
  419cbf:	in     al,dx
  419cc0:	(bad)  
  419cc2:	je     0x419cd6
  419cc4:	sbb    ch,BYTE PTR ds:0x67173672
  419cca:	cs sub al,0x77
  419ccd:	and    al,0x31
  419ccf:	mov    ebx,0xb002df6d
  419cd4:	mov    al,ds:0x2e648034
  419cd9:	mov    cl,0x5a
  419cdb:	outs   dx,BYTE PTR ds:[esi]
  419cdc:	xchg   ebp,eax
  419cdd:	mov    al,0x78
  419cdf:	push   eax
  419ce0:	popf   
  419ce1:	mov    ah,0x38
  419ce3:	sar    DWORD PTR [edi],0x26
  419ce6:	jge    0x419d37
  419ce8:	stos   BYTE PTR es:[edi],al
  419ce9:	mov    edx,0x990562bc
  419cee:	sti    
  419cef:	add    bh,ah
  419cf1:	xchg   esi,eax
  419cf2:	scas   eax,DWORD PTR es:[edi]
  419cf3:	(bad)  
  419cf4:	rol    DWORD PTR [eax],1
  419cf6:	adc    al,0x4
  419cf8:	push   edi
  419cf9:	jg     0x419d28
  419cfb:	icebp  
  419cfc:	xchg   esi,eax
  419cfd:	xchg   ebx,eax
  419cfe:	jno    0x419d48
  419d00:	ja     0x419d49
  419d02:	int3   
  419d03:	sbb    DWORD PTR [ebp-0x31c1310c],ebx
  419d09:	or     BYTE PTR [esi-0xc],cl
  419d0c:	sti    
  419d0d:	jae    0x419d24
  419d0f:	lds    eax,FWORD PTR [ebx]
  419d11:	inc    eax
  419d12:	and    al,0x49
  419d14:	sub    DWORD PTR [edi+ecx*1],esp
  419d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d18:	call   0x6d5077bd
  419d1d:	pop    esp
  419d1e:	xchg   DWORD PTR [edi-0x1ea10ec4],eax
  419d24:	and    BYTE PTR [eax+0x7c],0xe5
  419d28:	cmp    al,0xa0
  419d2a:	xchg   ebx,eax
  419d2b:	inc    edi
  419d2c:	aad    0xf8
  419d2e:	jo     0x419d86
  419d30:	nop
  419d31:	fsub   QWORD PTR [ebx-0x7fd3187e]
  419d37:	mov    ds:0x225b56ab,al
  419d3c:	sbb    DWORD PTR [eax-0x7782e5f1],eax
  419d42:	hlt    
  419d43:	jmp    0x573a:0x563fc21e
  419d4a:	cld    
  419d4b:	sub    al,0xa4
  419d4d:	xchg   esp,eax
  419d4e:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  419d50:	sbb    bl,dh
  419d52:	xchg   esi,eax
  419d53:	(bad)  
  419d54:	out    dx,eax
  419d55:	dec    ebp
  419d56:	sbb    eax,0xe8b55c69
  419d5b:	xor    dl,BYTE PTR [ecx+0x29874056]
  419d61:	js     0x419d24
  419d63:	pop    edi
  419d64:	out    dx,eax
  419d65:	mov    edi,0x6e326926
  419d6a:	retf   
  419d6b:	loopne 0x419de9
  419d6d:	arpl   WORD PTR [edx+ecx*2],bx
  419d70:	mov    cl,0x9b
  419d72:	push   ebp
  419d73:	add    DWORD PTR [edx],0xd5f467e8
  419d79:	imul   bh
  419d7b:	cli    
  419d7c:	js     0x419d95
  419d7e:	xchg   esp,eax
  419d7f:	(bad)  [eax]
  419d81:	jmp    0x230deee8
  419d86:	lds    esi,FWORD PTR [eax]
  419d88:	enter  0x4d8d,0xda
  419d8c:	and    eax,0x11142d8
  419d91:	add    al,cl
  419d93:	pop    ss
  419d94:	push   ebx
  419d95:	xchg   esi,eax
  419d96:	(bad)  
  419d97:	ds pop ecx
  419d99:	jmp    0xcf77f3e2
  419d9e:	jae    0x419de4
  419da0:	pushf  
  419da1:	dec    edi
  419da2:	scas   eax,DWORD PTR es:[edi]
  419da3:	inc    ecx
  419da4:	ret    0x6ee1
  419da7:	jecxz  0x419e02
  419da9:	and    eax,0x8450c6fd
  419dae:	sbb    BYTE PTR [ebp+0x78],0x4b
  419db2:	leave  
  419db3:	mov    bl,0x88
  419db5:	fisttp QWORD PTR [esp+eiz*4-0x72]
  419db9:	js     0x419e38
  419dbb:	jno    0x419d7e
  419dbd:	pop    esi
  419dbe:	cli    
  419dbf:	loope  0x419d5d
  419dc1:	hlt    
  419dc2:	push   ecx
  419dc3:	mov    esp,0xe1f87e34
  419dc8:	imul   ecx,edx,0xffffffea
  419dcb:	adc    eax,0xb2204a0
  419dd0:	in     eax,0xe9
  419dd2:	mov    al,ds:0x7a6dee23
  419dd7:	mov    ecx,0xe5dec4e7
  419ddc:	push   edx
  419ddd:	fadd   QWORD PTR [edi+0x4ad52ecc]
  419de3:	stc    
  419de4:	xor    DWORD PTR [eax-0x5c],edx
  419de7:	gs dec ebp
  419de9:	sub    eax,0x87208269
  419dee:	das    
  419def:	cld    
  419df0:	cmp    ecx,eax
  419df2:	mov    eax,DWORD PTR [ebx]
  419df4:	es dec eax
  419df6:	shr    DWORD PTR [eax],cl
  419df8:	or     al,0x52
  419dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dfb:	ror    BYTE PTR [ebp-0x71],1
  419dfe:	fldenv [eax]
  419e00:	shl    BYTE PTR [eax-0x28],cl
  419e03:	adc    DWORD PTR [esi],0xffffffe5
  419e06:	push   edx
  419e07:	mul    DWORD PTR [ecx+0x784c573b]
  419e0d:	mov    esi,0xf619367e
  419e12:	cmp    dh,cl
  419e14:	cld    
  419e15:	ret    0x96c5
  419e18:	daa    
  419e19:	pop    ebx
  419e1a:	mov    BYTE PTR [edi+0x16],bl
  419e1d:	fwait
  419e1e:	fs mov bh,0x4
  419e21:	dec    ebp
  419e22:	test   DWORD PTR [edi-0x2a2a3a9f],esi
  419e28:	adc    BYTE PTR [ebx],dl
  419e2a:	outs   dx,DWORD PTR ds:[esi]
  419e2b:	push   0x55
  419e2d:	int    0x10
  419e2f:	out    dx,eax
  419e30:	cld    
  419e31:	mov    esi,0x83f93db
  419e36:	jo     0x419e35
  419e38:	rcl    DWORD PTR [ebp-0x785e32ff],0xac
  419e3f:	add    bh,BYTE PTR [ebp-0x76d9cc2f]
  419e45:	mov    ch,0xb7
  419e47:	js     0x419e1e
  419e49:	ret    
  419e4a:	das    
  419e4b:	stos   BYTE PTR es:[edi],al
  419e4c:	inc    edi
  419e4d:	mov    ds:0x52ae5d24,eax
  419e52:	add    al,0xd6
  419e54:	shr    DWORD PTR [ebx+0x278d5c0f],0xbf
  419e5b:	jp     0x419e90
  419e5d:	or     ebx,DWORD PTR [edi-0x56534d5b]
  419e63:	mov    esp,0x24edd2bf
  419e68:	mov    esi,0xc28c9d96
  419e6d:	(bad)  
  419e6e:	jge    0x419ead
  419e70:	pushf  
  419e71:	cwde   
  419e72:	pusha  
  419e73:	loop   0x419eba
  419e75:	inc    eax
  419e76:	fcmovu st,st(2)
  419e78:	shl    DWORD PTR [ecx],cl
  419e7a:	js     0x419e9b
  419e7c:	lds    esi,FWORD PTR [edi-0x22]
  419e7f:	aaa    
  419e80:	add    al,0x4a
  419e82:	inc    edx
  419e83:	xor    cl,BYTE PTR [ebx+ebx*4-0xc]
  419e87:	pop    ds
  419e88:	jo     0x419ef1
  419e8a:	push   0x896d54f4
  419e8f:	rcr    BYTE PTR [eax],0x61
  419e92:	test   DWORD PTR [ecx+0x46],ebx
  419e95:	cwde   
  419e96:	and    bh,bh
  419e98:	xchg   DWORD PTR ds:0xdb3b8d45,edi
  419e9e:	loope  0x419ea1
  419ea0:	pop    ebp
  419ea1:	call   0x806a:0xb6a79c5
  419ea8:	imul   ebx,DWORD PTR [edi],0x19
  419eab:	push   0x1a6c1acf
  419eb0:	into   
  419eb1:	ret    
  419eb2:	fdiv   st,st(1)
  419eb4:	adc    ch,al
  419eb6:	push   es
  419eb7:	pop    esp
  419eb8:	mov    cl,0xe0
  419eba:	dec    edx
  419ebb:	jp     0x419eee
  419ebd:	pop    ebx
  419ebe:	jbe    0x419f36
  419ec0:	xchg   esi,eax
  419ec1:	std    
  419ec2:	inc    esp
  419ec3:	dec    edx
  419ec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ec5:	(bad)  
  419ec6:	mov    edi,0xd09f5770
  419ecb:	cmp    ebx,DWORD PTR [ebx+0x29bf889a]
  419ed1:	aaa    
  419ed2:	(bad)  
  419ed3:	in     al,dx
  419ed4:	sub    eax,0x78a58aae
  419ed9:	lock lock sbb ch,bh
  419edd:	jae    0x419f21
  419edf:	xchg   BYTE PTR [eax+0x20],ch
  419ee2:	je     0x419e84
  419ee4:	mov    bh,0x5f
  419ee6:	push   ecx
  419ee7:	in     eax,0xe9
  419ee9:	push   edx
  419eea:	or     al,0xb1
  419eec:	pop    edi
  419eed:	repz sub eax,0x9c248544
  419ef3:	mov    esi,0x8229d4b6
  419ef8:	mov    ds:0xc13ba9,al
  419efd:	push   0xf6cd6bf2
  419f02:	imul   edi,DWORD PTR [edi-0x6c14a9e8],0x2
  419f09:	dec    esi
  419f0a:	jns    0x419f7a
  419f0c:	cmp    eax,0x2cf6b253
  419f11:	pop    eax
  419f12:	fs aad 0xdb
  419f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f16:	out    dx,eax
  419f17:	mov    edi,0x9cde5b99
  419f1c:	push   es
  419f1d:	fnstenv [edx+0x3152d2df]
  419f23:	mov    ebp,0xed014aa3
  419f28:	cs sbb edi,ecx
  419f2b:	pop    edx
  419f2c:	xchg   esi,eax
  419f2d:	fild   DWORD PTR [ebx+0x5e]
  419f30:	mov    ds:0x1ca4cd35,al
  419f35:	sbb    dh,bh
  419f37:	inc    esi
  419f38:	ficom  DWORD PTR [ecx-0x59]
  419f3b:	aad    0x85
  419f3d:	adc    DWORD PTR [edx+0x497f2f40],ebx
  419f43:	jl     0x419f04
  419f45:	lahf   
  419f46:	out    0xdd,al
  419f48:	mov    esi,?
  419f4a:	xchg   esp,eax
  419f4b:	les    esi,FWORD PTR [ecx-0x39]
  419f4e:	jns    0x419f00
  419f50:	or     eax,0x2946321a
  419f55:	sti    
  419f56:	xor    ch,BYTE PTR [edx-0x73786ad8]
  419f5c:	test   al,0x78
  419f5e:	outs   dx,DWORD PTR ds:[esi]
  419f5f:	(bad)  
  419f61:	aas    
  419f62:	add    ch,BYTE PTR es:[esi]
  419f65:	daa    
  419f66:	xchg   WORD PTR [eax-0x5],di
  419f6a:	xchg   esi,eax
  419f6b:	push   ecx
  419f6c:	add    esi,DWORD PTR [eax+0x50f86732]
  419f72:	push   es
  419f73:	pop    edx
  419f74:	sbb    eax,0xfab00313
  419f79:	mul    BYTE PTR [ecx]
  419f7b:	inc    ebx
  419f7c:	push   esi
  419f7d:	cdq    
  419f7e:	dec    ebp
  419f7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f80:	dec    edi
  419f81:	ret    
  419f82:	mov    dh,0x74
  419f84:	in     eax,0x94
  419f86:	inc    esp
  419f87:	pop    edi
  419f88:	or     dh,bl
  419f8a:	dec    eax
  419f8b:	and    bh,BYTE PTR [edx-0xe657f98]
  419f91:	push   esi
  419f92:	outs   dx,BYTE PTR ds:[esi]
  419f93:	mov    WORD PTR [edi-0x5f],?
  419f96:	pandn  mm5,QWORD PTR [ebp+0x73]
  419f9a:	(bad)  
  419f9c:	and    al,0xa9
  419f9e:	sbb    BYTE PTR [ecx-0x2624291b],dl
  419fa4:	add    eax,0xca599ba
  419fa9:	inc    edx
  419faa:	mov    dl,0x13
  419fac:	(bad)
  419faf:	repnz lods eax,DWORD PTR ds:[esi]
  419fb1:	mov    bh,0x5c
  419fb3:	dec    edx
  419fb4:	andnps xmm3,XMMWORD PTR [ebp+edx*2-0x13]
  419fb9:	int3   
  419fba:	adc    eax,ebx
  419fbc:	dec    ebp
  419fbd:	inc    esp
  419fbe:	mov    ecx,0x8cca86fe
  419fc3:	dec    ebp
  419fc4:	scas   al,BYTE PTR es:[edi]
  419fc5:	ds sahf 
  419fc7:	mov    esp,0x946e6d88
  419fcc:	xor    al,0xaa
  419fce:	xor    ah,BYTE PTR [ebp-0x27921cf7]
  419fd4:	cmp    ebx,0x4082dfc2
  419fda:	mov    dl,0xe4
  419fdd:	or     cl,al
  419fdf:	inc    edi
  419fe0:	cld    
  419fe1:	je     0x41a04d
  419fe3:	pusha  
  419fe4:	rcr    DWORD PTR [edi],cl
  419fe6:	loopne 0x419fd3
  419fe8:	mov    eax,0x4216b3bb
  419fed:	xchg   BYTE PTR [eax+edx*2-0x45],al
  419ff1:	js     0x419ff7
  419ff3:	sahf   
  419ff4:	inc    esi
  419ff5:	ficomp DWORD PTR [edx]
  419ff7:	and    eax,0x75684537
  419ffc:	daa    
  419ffd:	mov    dl,0x30
  419fff:	ins    DWORD PTR es:[edi],dx
  41a000:	xchg   BYTE PTR [eax-0x624b20ab],ch
  41a006:	jns    0x41a076
  41a008:	jp     0x419fdf
  41a00a:	mov    edx,0xf9dd68f5
  41a00f:	adc    ah,bh
  41a011:	mov    al,ds:0xa31bca8a
  41a016:	jmp    0xd47de842
  41a01b:	lea    edx,[eax-0x2769ac52]
  41a021:	imul   esp,DWORD PTR [ebx],0xfffffff0
  41a024:	sbb    al,0xa6
  41a026:	(bad)  
  41a027:	outs   dx,BYTE PTR ds:[esi]
  41a028:	ret    
  41a029:	cld    
  41a02a:	ja     0x419ff8
  41a02c:	lock sahf 
  41a02e:	in     al,dx
  41a02f:	xchg   ecx,eax
  41a030:	cmp    DWORD PTR [esi-0x4659496b],ecx
  41a036:	int    0x37
  41a038:	pop    eax
  41a039:	jmp    0x41a011
  41a03b:	dec    ecx
  41a03c:	jmp    0x41a0ba
  41a03e:	adc    al,0x7a
  41a040:	pop    ecx
  41a041:	xchg   DWORD PTR [edi+0x6d],ebx
  41a044:	imul   edi,esp,0xd77505e2
  41a04a:	pop    esi
  41a04b:	int3   
  41a04c:	sahf   
  41a04d:	sbb    al,0x18
  41a04f:	xor    eax,0xc55b0cc7
  41a054:	push   esp
  41a055:	sbb    WORD PTR [edi-0x195dedc0],cx
  41a05c:	push   edx
  41a05d:	ret    
  41a05e:	(bad)  [edi-0x61b5cb6b]
  41a064:	cmc    
  41a065:	xor    ebp,DWORD PTR [ebp-0x7a884e07]
  41a06b:	mov    bl,BYTE PTR [edx]
  41a06d:	jbe    0x41a0a8
  41a06f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a070:	add    DWORD PTR [eax],esp
  41a072:	retf   
  41a073:	jnp    0x41a013
  41a075:	popa   
  41a076:	dec    edx
  41a077:	add    BYTE PTR [edi+eax*4],bl
  41a07a:	mov    esi,0xc0610ce3
  41a07f:	lock cmp ebp,edx
  41a082:	adc    BYTE PTR [ebp-0x45],dl
  41a085:	sbb    esi,esi
  41a087:	push   esi
  41a088:	outs   dx,BYTE PTR ds:[esi]
  41a089:	xchg   ecx,eax
  41a08a:	mov    bh,0x14
  41a08c:	scas   al,BYTE PTR es:[edi]
  41a08d:	div    DWORD PTR [edi-0x6f6b7c3a]
  41a093:	pop    edx
  41a094:	push   0x2d5e3f0b
  41a099:	clc    
  41a09a:	test   al,0x5b
  41a09c:	mov    BYTE PTR [ebx+0x4a0dc651],al
  41a0a2:	or     DWORD PTR [ecx+0xfac8772],edi
  41a0a8:	xor    eax,0xcc367ab8
  41a0ad:	data16 sbb BYTE PTR [eax-0x7eb0b51c],0x48
  41a0b5:	leave  
  41a0b6:	or     al,0x86
  41a0b8:	xchg   edi,eax
  41a0b9:	fild   DWORD PTR [ebx+0x4f]
  41a0bc:	xchg   DWORD PTR [ebp+0x34],ebp
  41a0bf:	xor    al,0x6c
  41a0c1:	xchg   esp,eax
  41a0c2:	inc    ebx
  41a0c3:	fwait
  41a0c4:	mov    ch,0xb3
  41a0c6:	int    0x9d
  41a0c8:	pop    eax
  41a0c9:	int3   
  41a0ca:	xchg   DWORD PTR [esp+ebx*1+0x32c4a0eb],edx
  41a0d1:	fdiv   QWORD PTR [edi+edx*4-0x39]
  41a0d5:	fs out dx,eax
  41a0d7:	jge    0x41a0bc
  41a0d9:	dec    ebp
  41a0da:	and    eax,0xd8a8a7e9
  41a0df:	mov    esi,0x83b88573
  41a0e4:	jmp    0xda00:0xbd46c504
  41a0eb:	mov    dh,ah
  41a0ed:	push   ebp
  41a0ee:	mov    edx,0x3cf0b422
  41a0f3:	xchg   edi,eax
  41a0f4:	call   0xf835ea5a
  41a0f9:	call   0x23609671
  41a0fe:	ret    0x4fc6
  41a101:	scas   eax,DWORD PTR es:[edi]
  41a102:	and    ebp,DWORD PTR [edi+0x11bd307d]
  41a108:	aas    
  41a109:	dec    edi
  41a10a:	sbb    eax,0xcb344150
  41a10f:	adc    eax,DWORD PTR [eax-0x33]
  41a112:	add    eax,0xb467e7d2
  41a117:	jl     0x41a120
  41a119:	call   0x340f:0xf0f6a57b
  41a120:	pop    ebp
  41a121:	sbb    dl,ah
  41a123:	cwde   
  41a124:	lahf   
  41a125:	repz cs addr16 or al,0x62
  41a12a:	dec    edi
  41a12b:	mov    ah,0x31
  41a12d:	aaa    
  41a12e:	mov    ecx,es
  41a130:	inc    eax
  41a131:	(bad)  
  41a132:	inc    BYTE PTR [edi-0x7554ae30]
  41a138:	dec    esp
  41a139:	xlat   BYTE PTR ds:[ebx]
  41a13a:	cdq    
  41a13b:	ja     0x41a0d6
  41a13d:	push   ebx
  41a13e:	push   ebp
  41a13f:	clc    
  41a140:	push   eax
  41a141:	dec    esp
  41a142:	or     eax,0xd717fb05
  41a147:	sbb    esi,esi
  41a149:	inc    eax
  41a14a:	xor    al,0x13
  41a14c:	xchg   esi,eax
  41a14d:	popf   
  41a14e:	inc    esp
  41a14f:	sbb    al,0xf1
  41a151:	dec    edx
  41a152:	hlt    
  41a153:	and    BYTE PTR [ebp+0x2fc8e168],ch
  41a159:	aas    
  41a15a:	cmc    
  41a15b:	mov    WORD PTR [ebx+0x2beb7a93],ds
  41a161:	cdq    
  41a162:	mov    ?,WORD PTR [eax+0x57fb2867]
  41a168:	jl     0x41a102
  41a16a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a16b:	jmp    0x4816651b
  41a170:	in     al,0xfb
  41a172:	retf   
  41a173:	xchg   edi,eax
  41a174:	push   esp
  41a175:	push   ebx
  41a176:	sbb    edi,ebp
  41a178:	adc    ah,bh
  41a17a:	push   eax
  41a17b:	(bad)  
  41a17c:	sub    BYTE PTR [esi-0x69],al
  41a17f:	dec    ecx
  41a180:	pusha  
  41a181:	pop    ebx
  41a182:	xor    al,0x17
  41a184:	xchg   ebp,eax
  41a185:	jg     0x41a1b4
  41a187:	fnsave [edx]
  41a189:	push   0x3f137f9e
  41a18e:	jp     0x41a1fb
  41a190:	and    DWORD PTR [ecx],ebx
  41a192:	xchg   ebp,eax
  41a193:	lock pop ecx
  41a195:	xlat   BYTE PTR ds:[ebx]
  41a196:	dec    edi
  41a197:	mov    edx,0xba11d961
  41a19c:	xchg   edi,eax
  41a19d:	jmp    0x41a131
  41a19f:	imul   edx,DWORD PTR ds:0x9656aad0
  41a1a6:	sar    bh,1
  41a1a8:	lods   eax,DWORD PTR ds:[esi]
  41a1a9:	stc    
  41a1aa:	test   al,0x42
  41a1ac:	ss (bad) 
  41a1ae:	int    0x88
  41a1b0:	adc    BYTE PTR [esi+esi*1-0x39374d2a],bl
  41a1b7:	sub    dh,BYTE PTR [edx-0x6c]
  41a1ba:	icebp  
  41a1bb:	add    eax,0xb58ac269
  41a1c0:	scas   eax,DWORD PTR es:[edi]
  41a1c1:	aad    0xef
  41a1c3:	sub    BYTE PTR [edi-0x37fb509c],bl
  41a1c9:	mov    ?,WORD PTR [edi]
  41a1cb:	(bad)  [edx]
  41a1cd:	enter  0xd806,0xc5
  41a1d1:	mov    dl,0xd3
  41a1d3:	mov    ebp,0x57e3a908
  41a1d8:	xchg   edi,eax
  41a1d9:	or     al,0xf2
  41a1db:	inc    esi
  41a1dc:	mov    ebx,0xb4771979
  41a1e1:	cmp    dl,dh
  41a1e3:	mov    esi,0x940c878f
  41a1e8:	sbb    edi,DWORD PTR [edx-0x3b9cbd5a]
  41a1ee:	outs   dx,DWORD PTR ds:[esi]
  41a1ef:	scas   eax,DWORD PTR es:[edi]
  41a1f0:	das    
  41a1f1:	hlt    
  41a1f2:	mov    ds:0x29288070,eax
  41a1f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1f8:	pusha  
  41a1f9:	(bad)  
  41a1fa:	xchg   esi,eax
  41a1fb:	or     eax,0x1c247d22
  41a200:	ret    0x376d
  41a203:	clc    
  41a204:	sbb    al,0x40
  41a206:	clc    
  41a207:	push   esp
  41a208:	rcr    DWORD PTR [edi+0x78dd04d],cl
  41a20e:	jle    0x41a26e
  41a210:	pop    ebp
  41a211:	mov    bh,0x2a
  41a213:	cmc    
  41a214:	pop    esp
  41a215:	test   al,0xff
  41a217:	into   
  41a218:	ja     0x41a242
  41a21a:	fbld   TBYTE PTR [eax-0x72cfbfec]
  41a220:	push   es
  41a221:	jle    0x41a1de
  41a223:	add    DWORD PTR [ebp-0x40],esp
  41a226:	mov    ch,0x45
  41a228:	int3   
  41a229:	aaa    
  41a22a:	xchg   ebp,eax
  41a22b:	dec    cl
  41a22d:	or     BYTE PTR [edx+0x36],ch
  41a230:	in     al,dx
  41a231:	loope  0x41a22c
  41a233:	pop    ecx
  41a234:	sbb    DWORD PTR [edx],eax
  41a236:	pushf  
  41a237:	jmp    0x41a278
  41a239:	mov    ds,WORD PTR [ecx]
  41a23b:	jae    0x41a1bf
  41a23d:	xor    eax,DWORD PTR [ecx]
  41a23f:	jns    0x41a247
  41a241:	fs inc ebp
  41a243:	pop    ebx
  41a244:	cli    
  41a245:	pause  
  41a247:	add    bh,BYTE PTR [ebx+0x1e]
  41a24a:	mov    ecx,0xb3ebed8e
  41a24f:	and    dh,BYTE PTR [ebx]
  41a251:	fisubr DWORD PTR [ebp-0x4ffe9203]
  41a257:	dec    esi
  41a258:	repnz sti 
  41a25a:	loopne 0x41a20d
  41a25c:	iret   
  41a25d:	shl    BYTE PTR [edx],0xa4
  41a260:	cmp    ch,bh
  41a262:	(bad)  
  41a263:	push   edi
  41a264:	ret    0xd121
  41a267:	cmp    eax,0xd9afeb12
  41a26c:	inc    ecx
  41a26d:	mov    eax,ds:0xe31181d8
  41a272:	cmp    DWORD PTR [edi+0x5d912314],edx
  41a278:	popa   
  41a279:	in     al,dx
  41a27a:	test   eax,0x86f0ca51
  41a27f:	push   eax
  41a280:	add    DWORD PTR [ebp-0x3f],edi
  41a283:	pusha  
  41a284:	aaa    
  41a285:	adc    edi,ebp
  41a287:	push   0x7b79f61c
  41a28c:	mov    ebx,0x5dd518cc
  41a291:	jecxz  0x41a2a3
  41a293:	fistp  QWORD PTR ds:0xb41a44a
  41a299:	arpl   bx,dx
  41a29b:	pusha  
  41a29c:	dec    ebx
  41a29d:	add    ah,BYTE PTR [eax+0x5468f246]
  41a2a3:	ss and eax,0x415ea431
  41a2a9:	mov    ds:0xe39b8697,eax
  41a2ae:	stos   BYTE PTR es:[edi],al
  41a2af:	cmp    al,0xd0
  41a2b1:	in     al,0xaa
  41a2b3:	lahf   
  41a2b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2b5:	xor    ecx,edx
  41a2b7:	ss pop edi
  41a2b9:	mov    esi,0x3c5a32b9
  41a2be:	fadd   QWORD PTR [edx+0x60]
  41a2c1:	jg     0x41a2a6
  41a2c3:	mov    dh,0x22
  41a2c5:	js     0x41a32c
  41a2c7:	fimul  WORD PTR [edi-0x8451aac]
  41a2cd:	adc    DWORD PTR [eax+0x5ef271c1],edi
  41a2d3:	mov    dh,0x49
  41a2d5:	mov    edi,0x52873de7
  41a2da:	inc    ebp
  41a2db:	(bad)  
  41a2dc:	aam    0x37
  41a2de:	xor    eax,DWORD PTR [ebp-0x3b]
  41a2e1:	push   ss
  41a2e2:	pushf  
  41a2e3:	and    eax,0x52b7b7f4
  41a2e8:	xchg   ebp,eax
  41a2e9:	lds    edi,FWORD PTR [ecx+0x3c]
  41a2ec:	xchg   ah,al
  41a2ee:	dec    edi
  41a2ef:	or     al,BYTE PTR [esi-0x7639fda9]
  41a2f5:	or     al,0xb1
  41a2f7:	pop    ecx
  41a2f8:	jle    0x41a320
  41a2fa:	rcl    DWORD PTR ds:0x5f8b7db8,1
  41a300:	sbb    ebp,edx
  41a302:	xchg   esi,eax
  41a303:	xchg   esp,eax
  41a304:	rol    DWORD PTR [eax+0x7046635d],0x4e
  41a30b:	push   esp
  41a30c:	push   ebp
  41a30d:	dec    edi
  41a30e:	mov    ch,0x41
  41a310:	test   DWORD PTR [ebx],eax
  41a312:	pop    ss
  41a313:	out    0xbb,al
  41a315:	(bad)  
  41a316:	or     eax,DWORD PTR [ecx+0x706432ad]
  41a31c:	jg     0x41a397
  41a31e:	mov    ebp,0xbf572c6f
  41a323:	mov    bh,0xc4
  41a325:	jecxz  0x41a38f
  41a327:	dec    edi
  41a328:	mov    ch,0x1d
  41a32a:	pop    ecx
  41a32b:	int3   
  41a32c:	scas   eax,DWORD PTR es:[edi]
  41a32d:	les    ecx,FWORD PTR [ebp+0xa76403b]
  41a333:	mov    fs,WORD PTR [edi+ebp*1]
  41a336:	mov    ah,bh
  41a338:	add    eax,0xc02cc0b5
  41a33d:	mov    esi,DWORD PTR [ecx]
  41a33f:	sub    eax,0x1db2bc5b
  41a344:	nop
  41a345:	call   0x640b842b
  41a34a:	inc    eax
  41a34b:	fcmovbe st,st(1)
  41a34d:	loope  0x41a31a
  41a34f:	(bad)  
  41a350:	ficomp DWORD PTR [ebx]
  41a352:	and    edi,esi
  41a354:	shr    eax,1
  41a356:	cmp    al,BYTE PTR [edi+0x20]
  41a359:	mov    ax,ds:0xb9925b02
  41a35f:	xchg   ebp,eax
  41a360:	xor    BYTE PTR [eax+0xa],bh
  41a363:	add    eax,esp
  41a365:	fstp   DWORD PTR [eax+0x426c7345]
  41a36b:	ret    0xf03c
  41a36e:	loope  0x41a373
  41a370:	fiadd  WORD PTR [edi+0x54]
  41a373:	repnz xor bh,BYTE PTR [ebx+edx*1-0x61c247a0]
  41a37b:	inc    edi
  41a37c:	rol    esi,cl
  41a37e:	pusha  
  41a37f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a380:	cdq    
  41a381:	and    ecx,DWORD PTR [edx]
  41a383:	fnstsw WORD PTR [eax-0x1433b82e]
  41a389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a38a:	pop    esi
  41a38b:	jle    0x41a372
  41a38d:	inc    esp
  41a38e:	pop    edx
  41a38f:	in     al,0x9f
  41a391:	dec    ecx
  41a392:	xlat   BYTE PTR ds:[ebx]
  41a393:	add    cl,BYTE PTR [ecx+0x39]
  41a396:	mov    fs,WORD PTR [eax-0x51]
  41a399:	cmp    edx,edx
  41a39b:	mov    cl,0x83
  41a39d:	nop
  41a39e:	dec    edi
  41a39f:	adc    eax,0xe392c9a9
  41a3a4:	je     0x41a3f6
  41a3a6:	and    al,0x29
  41a3a8:	xchg   esp,eax
  41a3a9:	pop    ds
  41a3aa:	loopne 0x41a37e
  41a3ac:	adc    edi,eax
  41a3ae:	mov    ecx,0xebd0fc8c
  41a3b3:	retf   
  41a3b4:	icebp  
  41a3b5:	fbstp  TBYTE PTR [edx]
  41a3b7:	mov    eax,0xaa9072db
  41a3bc:	jl     0x41a427
  41a3be:	add    edi,esi
  41a3c0:	cmp    BYTE PTR [esi+eax*2-0xd],bl
  41a3c4:	xchg   ebp,eax
  41a3c5:	in     al,0x17
  41a3c7:	in     eax,dx
  41a3c8:	shl    BYTE PTR [ebx],cl
  41a3ca:	loopne 0x41a3c9
  41a3cc:	test   eax,0xf39e51e
  41a3d1:	mov    dl,0x78
  41a3d3:	xor    DWORD PTR [eax-0x1217a2cd],esp
  41a3d9:	enter  0x953d,0xf8
  41a3dd:	mov    eax,ds:0x4536f287
  41a3e2:	mov    edx,0xb6a73b25
  41a3e7:	xlat   BYTE PTR ds:[ebx]
  41a3e8:	or     al,0xa5
  41a3ea:	pop    eax
  41a3eb:	(bad)  
  41a3ec:	adc    BYTE PTR [ecx+0x713643d2],ch
  41a3f2:	pop    edx
  41a3f3:	arpl   WORD PTR [eax+0x4dd1e8ca],cx
  41a3f9:	or     DWORD PTR [ebp-0x71],eax
  41a3fc:	retf   0xbc26
  41a3ff:	sbb    al,0xe4
  41a401:	pop    ebx
  41a402:	ins    DWORD PTR es:[edi],dx
  41a403:	mov    DWORD PTR ds:0x65eb1a51,edx
  41a409:	out    dx,eax
  41a40a:	inc    esp
  41a40b:	(bad)  
  41a40c:	xchg   ecx,eax
  41a40d:	inc    ebx
  41a40e:	xchg   ecx,eax
  41a40f:	das    
  41a410:	fnstenv [eax]
  41a412:	add    al,0x23
  41a414:	rcr    BYTE PTR [edi+0x2c4f30ba],0xc5
  41a41b:	cwde   
  41a41c:	mov    bl,0x33
  41a41e:	hlt    
  41a41f:	gs mov eax,0x5d8fcca6
  41a425:	dec    esi
  41a426:	push   ebx
  41a427:	pop    ebx
  41a428:	icebp  
  41a429:	ins    BYTE PTR es:[edi],dx
  41a42a:	xchg   ebx,eax
  41a42b:	lods   eax,DWORD PTR ds:[esi]
  41a42c:	and    al,bl
  41a42e:	and    ebx,DWORD PTR fs:[edx]
  41a431:	pushf  
  41a432:	enter  0x9883,0x5a
  41a436:	ja     0x41a417
  41a438:	dec    ecx
  41a439:	mov    edi,0xab74aacd
  41a43e:	pop    ecx
  41a43f:	xchg   esp,eax
  41a440:	xor    ah,BYTE PTR [ebx]
  41a442:	mov    ds:0x16435d92,al
  41a447:	loope  0x41a456
  41a449:	fnstenv [edi+0x82d60ec]
  41a44f:	sbb    al,0x81
  41a451:	ds aad 0xe
  41a454:	add    al,0xd2
  41a456:	outs   dx,BYTE PTR ds:[esi]
  41a457:	jg     0x41a45d
  41a459:	or     DWORD PTR [ecx],esp
  41a45b:	std    
  41a45c:	jmp    0x7f97367
  41a461:	les    esi,FWORD PTR [eax-0x4c54c54b]
  41a467:	imul   esp,DWORD PTR [edi+0x63b405f5],0xffffffbd
  41a46e:	outs   dx,BYTE PTR ds:[esi]
  41a46f:	mov    bh,0xca
  41a471:	inc    esp
  41a472:	pusha  
  41a473:	mov    ecx,0xb661baeb
  41a478:	retf   0x932b
  41a47b:	and    DWORD PTR [edi+ebp*8-0x42],eax
  41a47f:	inc    ebx
  41a480:	adc    al,0x61
  41a482:	dec    edi
  41a483:	les    edx,FWORD PTR [edx-0x53]
  41a486:	add    edi,DWORD PTR [ecx+eax*1+0x5ebb34e6]
  41a48d:	addr16 hlt 
  41a48f:	mov    WORD PTR [edx],ss
  41a491:	popa   
  41a492:	push   eax
  41a493:	ja     0x41a4e8
  41a495:	shr    BYTE PTR [edi+0x27485b1f],cl
  41a49b:	out    0x72,eax
  41a49d:	dec    ebp
  41a49e:	outs   dx,DWORD PTR ds:[esi]
  41a49f:	push   ss
  41a4a0:	sub    eax,0xbae5d65a
  41a4a5:	std    
  41a4a6:	jmp    0x41a4b2
  41a4a8:	or     dh,0x1d
  41a4ab:	lds    esi,FWORD PTR [edi]
  41a4ad:	jmp    0x7a0d77b8
  41a4b2:	mov    ebp,0xf528f6d4
  41a4b7:	inc    esi
  41a4b8:	inc    ebx
  41a4b9:	inc    eax
  41a4bb:	jge    0x41a452
  41a4bd:	or     ecx,eax
  41a4bf:	push   cs
  41a4c0:	addr16 xor al,0xc5
  41a4c3:	push   ebp
  41a4c4:	nop
  41a4c5:	push   edi
  41a4c6:	test   eax,0x47697b2
  41a4cb:	dec    edi
  41a4cc:	push   ebp
  41a4cd:	inc    edi
  41a4ce:	and    edx,ebx
  41a4d0:	xor    BYTE PTR [ecx+0x66705d7a],bh
  41a4d6:	dec    esp
  41a4d7:	adc    BYTE PTR [ebx+ebx*2],bh
  41a4da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4db:	scas   eax,DWORD PTR es:[edi]
  41a4dc:	inc    DWORD PTR [esi+eax*1-0x7c]
  41a4e0:	jmp    0x5c6e:0xa5ddd3c1
  41a4e7:	adc    BYTE PTR [edx+0x2f80eb30],dh
  41a4ed:	xchg   edi,eax
  41a4ee:	fmul   QWORD PTR ds:0x435d422e
  41a4f4:	jecxz  0x41a4e8
  41a4f6:	mov    dl,0xbe
  41a4f8:	cli    
  41a4f9:	rcr    DWORD PTR [esi+0x13eadbd1],0x52
  41a500:	add    BYTE PTR [ebx+0x36f04c1a],bl
  41a506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a507:	pop    es
  41a508:	jno    0x41a580
  41a50a:	dec    ecx
  41a50b:	adc    ebx,DWORD PTR [ebp+ebx*8-0x6e]
  41a50f:	cmp    eax,DWORD PTR [eax+ebp*1]
  41a512:	imul   esi,DWORD PTR [si+0x453e],0x5f
  41a518:	add    esi,ebp
  41a51a:	loopne 0x41a51c
  41a51c:	(bad)  
  41a51d:	out    0xa8,eax
  41a51f:	dec    ecx
  41a520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a521:	cli    
  41a522:	xor    dl,BYTE PTR [edx]
  41a524:	rcl    BYTE PTR [ebp+edx*2-0x32],cl
  41a528:	neg    DWORD PTR ds:0xb798f1ea
  41a52e:	pop    ebx
  41a52f:	imul   ecx,DWORD PTR [edi+0x6e],0x95ca3cc3
  41a536:	lds    ecx,FWORD PTR [edx+esi*8]
  41a539:	adc    eax,0x9ef8abfe
  41a53e:	ror    eax,0x2e
  41a541:	cdq    
  41a542:	nop
  41a543:	das    
  41a544:	adc    ch,cl
  41a546:	and    cl,dl
  41a548:	rcr    DWORD PTR [esi-0x12],0xf0
  41a54c:	pop    esi
  41a54d:	popa   
  41a54e:	not    BYTE PTR [eax+0x267e2e54]
  41a554:	add    BYTE PTR [esi],al
  41a556:	pop    esi
  41a557:	jne    0x41a58d
  41a559:	sbb    ecx,DWORD PTR ss:[esi-0x38]
  41a55d:	sub    eax,0xe6db0685
  41a562:	xchg   dh,dl
  41a564:	sbb    cl,dl
  41a566:	add    BYTE PTR [ebp+0x6759bc8d],ch
  41a56c:	in     eax,0xf7
  41a56e:	(bad)  
  41a56f:	fist   WORD PTR [ebp-0x11]
  41a572:	add    edi,DWORD PTR [ebp+0x90c0c04]
  41a578:	cmp    BYTE PTR [edx],dh
  41a57a:	nop
  41a57b:	nop
  41a57c:	inc    edi
  41a57d:	adc    esp,ebx
  41a57f:	and    edx,DWORD PTR [ebx+esi*8+0x1737972e]
  41a586:	out    0xc3,eax
  41a588:	push   eax
  41a589:	sbb    al,0xf5
  41a58b:	in     eax,0x2b
  41a58d:	jnp    0x41a5a8
  41a58f:	ror    DWORD PTR [esi-0x49ac769b],0x82
  41a596:	or     BYTE PTR ds:0x798c1852,al
  41a59c:	cmp    al,0x81
  41a59e:	mov    ds:0x8c65a927,al
  41a5a3:	jg     0x41a546
  41a5a5:	hlt    
  41a5a6:	stos   DWORD PTR es:[edi],eax
  41a5a7:	pusha  
  41a5a8:	add    BYTE PTR [ebx],0x72
  41a5ab:	ficom  WORD PTR [edi]
  41a5ad:	mov    al,0x3e
  41a5af:	int3   
  41a5b0:	jb     0x41a5f6
  41a5b2:	pushf  
  41a5b3:	pushf  
  41a5b4:	les    esi,FWORD PTR [ebx+0x12]
  41a5b7:	adc    al,0xc0
  41a5b9:	fstp   TBYTE PTR [edi-0x72]
  41a5bc:	mov    ebp,0xf4d023d0
  41a5c1:	sub    DWORD PTR [esi+0xf],edi
  41a5c4:	pop    ss
  41a5c5:	lock ins DWORD PTR es:[edi],dx
  41a5c7:	lahf   
  41a5c8:	xchg   esi,edi
  41a5ca:	or     dl,ah
  41a5cc:	stc    
  41a5cd:	and    eax,0x5b627a9a
  41a5d2:	cdq    
  41a5d3:	sbb    ah,ch
  41a5d5:	je     0x41a5a0
  41a5d7:	push   ds
  41a5d8:	add    BYTE PTR [eax+0x28e767cf],cl
  41a5de:	in     eax,dx
  41a5df:	add    ch,BYTE PTR [ebp-0x15]
  41a5e2:	mul    edx
  41a5e4:	sar    DWORD PTR [ebp+0x73],0x1e
  41a5e8:	pop    es
  41a5e9:	push   esp
  41a5ea:	rol    DWORD PTR [ebx+0x777f531d],cl
  41a5f0:	mov    esp,0x8079065b
  41a5f5:	and    DWORD PTR [edi-0x6d3eebf3],eax
  41a5fb:	gs mov eax,0x40321a68
  41a601:	pop    ds
  41a602:	or     al,0xbe
  41a604:	ja     0x41a678
  41a606:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a607:	add    eax,0x83b50e81
  41a60c:	in     al,0xb3
  41a60e:	std    
  41a60f:	dec    eax
  41a610:	inc    eax
  41a611:	pushf  
  41a612:	or     eax,DWORD PTR [ebp+0x4bc2dc08]
  41a618:	shl    DWORD PTR [edx+0x1676756b],1
  41a61e:	jnp    0x41a63f
  41a620:	cmp    BYTE PTR [esi],dh
  41a622:	or     eax,0xf274d1ca
  41a627:	push   ss
  41a628:	inc    ecx
  41a629:	cmp    esi,ebp
  41a62b:	adc    ch,ah
  41a62d:	mov    ds:0x75f9087e,al
  41a632:	mov    ch,0xd4
  41a634:	ror    ebp,0x80
  41a637:	ror    edx,0xc5
  41a63a:	fs daa 
  41a63c:	sbb    ebx,DWORD PTR [eax]
  41a63e:	mov    ebx,0xf6d65e61
  41a643:	push   eax
  41a644:	fbstp  TBYTE PTR [eax-0x74c9ea71]
  41a64a:	addr16 sbb eax,0xc84d397b
  41a650:	shl    BYTE PTR [ebx],0x3e
  41a653:	jne    0x41a620
  41a655:	js     0x41a60e
  41a657:	mov    bh,0x2b
  41a659:	and    al,BYTE PTR [ecx-0x6e3ae21]
  41a65f:	mov    eax,ds:0x21903591
  41a664:	inc    esi
  41a665:	jmp    0x720a:0x512562fe
  41a66c:	popf   
  41a66d:	add    edi,ebx
  41a66f:	scas   al,BYTE PTR es:[edi]
  41a670:	sub    eax,0x40bb1cc8
  41a675:	retf   
  41a676:	(bad)  
  41a678:	vpaddd ymm2,ymm2,YMMWORD PTR [esi-0x38fd1a98]
  41a680:	(bad)  
  41a681:	cwde   
  41a682:	inc    ebp
  41a683:	sbb    eax,0x24021a8b
  41a688:	push   edi
  41a689:	mov    ch,0x0
  41a68b:	or     BYTE PTR [ebp-0x273f4352],bl
  41a691:	lods   eax,DWORD PTR ds:[esi]
  41a692:	and    DWORD PTR [edx-0x2c556011],0x28
  41a699:	mov    fs,eax
  41a69b:	test   eax,0x16292078
  41a6a0:	call   0xd8ad2e7f
  41a6a5:	push   edi
  41a6a6:	int    0x8e
  41a6a8:	shl    eax,0x6d
  41a6ab:	cmp    DWORD PTR [eax],edx
  41a6ad:	adc    DWORD PTR ds:0xee6846d6,edi
  41a6b3:	inc    eax
  41a6b4:	scas   eax,DWORD PTR es:[edi]
  41a6b5:	fucomp st(3)
  41a6b7:	repnz adc eax,0xc249998f
  41a6bd:	mov    ds:0xf256e3cd,al
  41a6c2:	ins    BYTE PTR es:[edi],dx
  41a6c3:	pop    ss
  41a6c4:	cmc    
  41a6c5:	dec    esi
  41a6c6:	out    dx,eax
  41a6c7:	into   
  41a6c8:	pop    esi
  41a6c9:	lock pop es
  41a6cb:	xchg   DWORD PTR [esi+0x60],ecx
  41a6ce:	test   al,bl
  41a6d0:	add    eax,0xddb6f094
  41a6d5:	jle    0x41a658
  41a6d7:	lds    edx,FWORD PTR [ebp+0x8]
  41a6da:	jecxz  0x41a6c9
  41a6dc:	inc    eax
  41a6dd:	push   eax
  41a6de:	sub    bh,BYTE PTR [ecx]
  41a6e0:	hlt    
  41a6e1:	and    eax,0xb2f707e
  41a6e6:	out    0x20,eax
  41a6e8:	xchg   dh,cl
  41a6ea:	std    
  41a6eb:	lods   eax,DWORD PTR ds:[esi]
  41a6ec:	add    ch,BYTE PTR [esi+edi*4]
  41a6ef:	inc    eax
  41a6f0:	adc    dl,dh
  41a6f2:	stos   BYTE PTR es:[edi],al
  41a6f3:	popa   
  41a6f4:	and    ebp,esp
  41a6f6:	int3   
  41a6f7:	pop    ebp
  41a6f8:	(bad)  
  41a6f9:	aas    
  41a6fa:	jecxz  0x41a6f1
  41a6fc:	jge    0x41a74c
  41a6fe:	daa    
  41a6ff:	add    edx,DWORD PTR [esi+0x709b3d39]
  41a705:	push   ebx
  41a706:	ins    DWORD PTR es:[edi],dx
  41a707:	(bad)  
  41a708:	addr16 (bad) 
  41a70a:	jno    0x41a74f
  41a70c:	sub    DWORD PTR [esi+0x43],edi
  41a70f:	cmp    al,0xd3
  41a711:	test   BYTE PTR [ecx],0xf5
  41a714:	retf   
  41a715:	mov    bh,0x5c
  41a717:	cli    
  41a718:	xchg   ecx,eax
  41a719:	jecxz  0x41a734
  41a71b:	mov    ds:0x8cb7f0bc,eax
  41a720:	sub    al,0xf
  41a722:	xor    dh,BYTE PTR [ebp+0x5f]
  41a725:	cmp    BYTE PTR [ebx-0xdb6dbc0],dl
  41a72b:	jnp    0x41a76e
  41a72d:	in     eax,dx
  41a72e:	cmp    ah,bl
  41a730:	lahf   
  41a731:	pop    ebp
  41a732:	xchg   ebp,eax
  41a733:	pop    ds
  41a734:	sahf   
  41a735:	push   es
  41a736:	imul   edi,DWORD PTR [esp+eax*4+0x7c97fd7],0x79b24723
  41a741:	sti    
  41a742:	shr    DWORD PTR [ecx-0x11be3188],0xe
  41a749:	pop    ecx
  41a74a:	out    0x62,eax
  41a74c:	in     al,dx
  41a74d:	call   0x79f7:0x1280e042
  41a754:	and    edi,DWORD PTR [esi+0x5a]
  41a757:	push   ds
  41a758:	or     eax,0x5a26a7d3
  41a75d:	mov    bh,bl
  41a75f:	sbb    al,0x6e
  41a761:	rol    DWORD PTR [eax+0x2acd5930],1
  41a767:	or     ch,BYTE PTR [ebp+ebp*4-0x1f]
  41a76b:	pusha  
  41a76c:	mov    bh,0x66
  41a76e:	sub    edi,DWORD PTR [ebx-0x5ce426dd]
  41a774:	bound  ebx,QWORD PTR [eax-0x23]
  41a777:	jns    0x41a7cf
  41a779:	enter  0x438c,0xcf
  41a77d:	dec    esp
  41a77e:	pop    es
  41a77f:	stos   BYTE PTR es:[edi],al
  41a780:	xor    BYTE PTR [edx-0x6c],0xd6
  41a784:	jl     0x41a7a4
  41a786:	dec    edx
  41a787:	repz js 0x41a773
  41a78a:	pop    eax
  41a78b:	push   ebx
  41a78c:	and    BYTE PTR [edi+esi*2],al
  41a78f:	out    0xfe,al
  41a791:	lods   al,BYTE PTR ds:[esi]
  41a792:	mov    bl,0x4f
  41a794:	push   ebp
  41a795:	pusha  
  41a796:	adc    BYTE PTR [eax+0x66],cl
  41a799:	mov    cl,0x99
  41a79b:	xchg   ebp,eax
  41a79c:	sbb    DWORD PTR [ebp+0x1af9a0b2],ebp
  41a7a2:	rol    ebx,0x38
  41a7a5:	push   esp
  41a7a6:	push   edi
  41a7a7:	pop    ss
  41a7a8:	adc    BYTE PTR [eax+esi*1+0x46],al
  41a7ac:	loopne 0x41a7d0
  41a7ae:	jecxz  0x41a792
  41a7b0:	push   esp
  41a7b1:	push   eax
  41a7b2:	repz mov al,0x4b
  41a7b5:	icebp  
  41a7b6:	fistp  QWORD PTR [ecx+0x51017f59]
  41a7bc:	aam    0xa0
  41a7be:	ror    DWORD PTR [edx+0x182ce415],1
  41a7c4:	and    cl,BYTE PTR [eax+eiz*2+0x33]
  41a7c8:	pop    es
  41a7c9:	call   0xfd08:0x5a6dc3f8
  41a7d0:	into   
  41a7d1:	and    esi,DWORD PTR [ebp-0x69b469a]
  41a7d7:	jmp    FWORD PTR [edx]
  41a7d9:	andps  xmm5,XMMWORD PTR [edx+ebx*8-0x230c7933]
  41a7e1:	inc    ecx
  41a7e2:	gs mov esp,0xdc0ed2b4
  41a7e8:	push   ebp
  41a7e9:	imul   BYTE PTR ds:0x83907325
  41a7ef:	cmp    dh,BYTE PTR [eax+0x5159df63]
  41a7f5:	sbb    eax,0x5e05d2e4
  41a7fa:	sti    
  41a7fb:	sar    DWORD PTR [edx+ecx*2+0x39],cl
  41a7ff:	and    al,0x7f
  41a801:	xor    DWORD PTR [ecx-0x79],eax
  41a804:	in     al,dx
  41a805:	xchg   esp,eax
  41a806:	in     eax,0x1b
  41a808:	push   ecx
  41a809:	adc    ah,BYTE PTR [esi-0x11b496d9]
  41a80f:	rcl    DWORD PTR [eax-0x23],cl
  41a812:	and    ebp,DWORD PTR [eax]
  41a814:	jmp    0xd76eb413
  41a819:	std    
  41a81a:	add    ah,0x39
  41a81d:	dec    edi
  41a81e:	test   al,0x3c
  41a820:	repnz xlat BYTE PTR ds:[ebx]
  41a822:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a823:	dec    ebx
  41a824:	mov    al,0xac
  41a826:	scas   eax,DWORD PTR es:[edi]
  41a827:	sbb    eax,0xaa38018e
  41a82c:	cmp    DWORD PTR [ebp+0x2d],ecx
  41a82f:	cmp    esi,DWORD PTR [ebx]
  41a831:	sbb    BYTE PTR [ebx-0x561258e2],cl
  41a837:	xchg   ebx,eax
  41a838:	pop    ds
  41a839:	push   edx
  41a83a:	imul   ebx,DWORD PTR [ebp+ebp*1+0x4e72a190],0xffffff9e
  41a842:	mov    esp,DWORD PTR [esi+0xd]
  41a845:	xchg   esp,eax
  41a846:	sub    bl,ch
  41a848:	add    BYTE PTR [ebx-0x67],al
  41a84b:	test   eax,0xd1e962bc
  41a850:	nop
  41a851:	xor    al,bh
  41a853:	nop
  41a854:	ror    DWORD PTR ds:0xd7b6443b,0x43
  41a85b:	xchg   DWORD PTR [ecx-0x6b],ebp
  41a85e:	add    edx,DWORD PTR [ebx]
  41a860:	fs pop esi
  41a862:	imul   edx,eax,0xffffffaf
  41a865:	fwait
  41a866:	and    DWORD PTR [esp+ebp*8-0x7c487e5b],esi
  41a86d:	xchg   ecx,eax
  41a86e:	or     al,BYTE PTR [ecx+0x33]
  41a871:	cmc    
  41a872:	mov    eax,DWORD PTR [ebp+0x4972f5f0]
  41a878:	mov    bx,dx
  41a87b:	jmp    0xa0daee14
  41a880:	add    eax,0x41ad3edf
  41a885:	pop    eax
  41a886:	test   ebx,esi
  41a888:	scas   eax,DWORD PTR es:[edi]
  41a889:	dec    edx
  41a88a:	jle    0x41a8e3
  41a88c:	add    bh,BYTE PTR [ebx+0x60]
  41a88f:	into   
  41a890:	in     eax,dx
  41a891:	call   0xb1a3:0x5b6848a7
  41a898:	push   0xd3ebc58a
  41a89d:	push   esi
  41a89e:	pop    edi
  41a89f:	in     al,dx
  41a8a0:	loope  0x41a824
  41a8a2:	das    
  41a8a3:	fs aad 0xa1
  41a8a6:	xlat   BYTE PTR ds:[ebx]
  41a8a7:	ins    BYTE PTR es:[edi],dx
  41a8a8:	mov    eax,0x40675c9e
  41a8ad:	and    eax,0xc510aee0
  41a8b2:	mov    cl,0x4a
  41a8b4:	inc    edi
  41a8b5:	sub    dl,BYTE PTR [edx]
  41a8b7:	xor    eax,0x26ff1042
  41a8bc:	pop    esp
  41a8bd:	add    edx,DWORD PTR [ebp-0x9320f41]
  41a8c3:	iret   
  41a8c4:	call   0x5936e22
  41a8c9:	pop    es
  41a8ca:	cwde   
  41a8cb:	mov    esp,0x99599003
  41a8d0:	sbb    ebp,DWORD PTR [edx+0x2a0ec9bd]
  41a8d6:	jp     0x41a8a7
  41a8d8:	ss mov eax,es:0xe28e503e
  41a8df:	lahf   
  41a8e0:	scas   eax,DWORD PTR es:[edi]
  41a8e1:	mov    al,ds:0x4f64ac82
  41a8e6:	xchg   DWORD PTR [ecx-0x12],edx
  41a8e9:	xlat   BYTE PTR ds:[ebx]
  41a8ea:	das    
  41a8eb:	repz inc ebp
  41a8ed:	popf   
  41a8ee:	std    
  41a8ef:	repz js 0x41a8e1
  41a8f2:	out    dx,eax
  41a8f3:	out    dx,al
  41a8f4:	leave  
  41a8f5:	imul   ebp,DWORD PTR [eax+0x2f6bef50],0x61
  41a8fc:	(bad)  
  41a8fd:	in     eax,0x86
  41a8ff:	mov    ch,0x14
  41a901:	std    
  41a902:	(bad)  
  41a903:	fwait
  41a904:	mov    dl,0x3b
  41a906:	popf   
  41a907:	nop
  41a908:	js     0x41a91d
  41a90a:	mov    esi,0x8a618bf2
  41a90f:	pushf  
  41a910:	cwde   
  41a911:	xchg   ebx,eax
  41a912:	rcl    BYTE PTR [edx],cl
  41a914:	mov    DWORD PTR [edi],0xebd00f49
  41a91a:	and    eax,0x82a92f7c
  41a91f:	add    al,0x74
  41a921:	rcr    DWORD PTR [eax-0x3d],0xe6
  41a925:	pusha  
  41a926:	shl    ah,cl
  41a928:	es adc cl,al
  41a92b:	jno    0x41a8fe
  41a92d:	ret    
  41a92e:	mov    edi,DWORD PTR [ebx+edx*4+0x72]
  41a932:	pop    edx
  41a933:	in     eax,dx
  41a934:	pop    ebx
  41a935:	(bad)  
  41a936:	ds sub al,cl
  41a939:	fld    DWORD PTR [ebx*4+0x309b5e13]
  41a940:	test   al,0xd0
  41a943:	loopne 0x41a8ed
  41a945:	inc    ecx
  41a946:	leave  
  41a947:	int3   
  41a948:	mov    ebx,0x8cd75d8e
  41a94d:	aad    0xbc
  41a94f:	jnp    0x41a8eb
  41a951:	lods   al,BYTE PTR ds:[esi]
  41a952:	or     BYTE PTR [ecx+0xc458e10],al
  41a958:	mov    edx,0x5c8b0610
  41a95d:	mov    ebx,0xe0c6d92f
  41a962:	mov    esp,0xc4761ada
  41a967:	mov    dl,0x3f
  41a969:	(bad)  
  41a96a:	out    dx,al
  41a96b:	in     al,dx
  41a96c:	(bad)  
  41a96d:	sub    al,0x1
  41a96f:	scas   eax,DWORD PTR es:[edi]
  41a970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a971:	ror    BYTE PTR [edx+0x1b],1
  41a974:	std    
  41a975:	jecxz  0x41a9cc
  41a977:	sbb    DWORD PTR [eax],0xdfc9679e
  41a97d:	pop    ecx
  41a97e:	mov    eax,0x1a5f9203
  41a983:	xor    al,BYTE PTR [edi-0xdeacaa8]
  41a989:	xchg   edi,eax
  41a98a:	push   ds
  41a98b:	xchg   edx,eax
  41a98c:	pop    edx
  41a98d:	sub    al,0xd
  41a98f:	sbb    DWORD PTR [edx],edx
  41a991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a992:	(bad)  
  41a993:	mov    esp,0x94d3e4ee
  41a998:	js     0x41a9a5
  41a99a:	in     al,0x46
  41a99c:	rcl    DWORD PTR [edx-0x64],0x99
  41a9a0:	clc    
  41a9a1:	es push esp
  41a9a3:	rcl    BYTE PTR [esi+0x5a],cl
  41a9a6:	inc    edi
  41a9a7:	dec    esp
  41a9a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9a9:	inc    ebx
  41a9aa:	push   esi
  41a9ab:	ins    DWORD PTR es:[edi],dx
  41a9ac:	jne    0x41aa1b
  41a9ae:	fstp   QWORD PTR [eax-0x6724e70b]
  41a9b4:	xchg   edx,eax
  41a9b5:	sbb    ch,BYTE PTR [edi]
  41a9b7:	add    eax,0x88508d14
  41a9bc:	xchg   esp,eax
  41a9bd:	push   ebp
  41a9be:	mov    bh,0x1c
  41a9c0:	mov    ch,0xe5
  41a9c2:	popa   
  41a9c3:	sub    al,ch
  41a9c5:	pop    edx
  41a9c6:	loopne 0x41a9eb
  41a9c8:	ss jb  0x41a983
  41a9cb:	inc    eax
  41a9cc:	jp     0x41a9dc
  41a9ce:	aad    0x23
  41a9d0:	mov    eax,ds:0x7bf6e436
  41a9d5:	fadd   st(1),st
  41a9d7:	cwde   
  41a9d8:	inc    ebx
  41a9d9:	(bad)  
  41a9da:	sub    al,0x24
  41a9dc:	cmp    bh,0x2e
  41a9df:	jne    0x41a98c
  41a9e1:	data16 cld 
  41a9e3:	mov    ecx,DWORD PTR [edi+esi*8]
  41a9e6:	popa   
  41a9e7:	iret   
  41a9e8:	das    
  41a9e9:	hlt    
  41a9ea:	xchg   BYTE PTR [ebp+0x64],ah
  41a9ed:	pop    es
  41a9ee:	repz rcl DWORD PTR [ecx-0x1e],1
  41a9f2:	jae    0x41a991
  41a9f4:	sbb    bh,al
  41a9f6:	mov    ch,0x38
  41a9f8:	cdq    
  41a9f9:	pop    ecx
  41a9fa:	pop    es
  41a9fb:	cmp    DWORD PTR [ebp-0x7b],esi
  41a9fe:	ins    BYTE PTR es:[edi],dx
  41a9ff:	mov    BYTE PTR [edi],dh
  41aa01:	lock gs sub eax,0xe5ee40f3
  41aa08:	call   0x4640:0x51603037
  41aa0f:	pop    edi
  41aa10:	jl     0x41a9be
  41aa12:	(bad)  
  41aa14:	cmp    DWORD PTR [edi],ebx
  41aa16:	sub    BYTE PTR [edx-0x4c2b5fe8],dl
  41aa1c:	inc    eax
  41aa1d:	out    0xc6,eax
  41aa1f:	pop    ecx
  41aa20:	in     al,0x35
  41aa22:	inc    ebp
  41aa23:	imul   ecx,esp,0xffffffb8
  41aa26:	cmp    dh,dl
  41aa28:	sbb    DWORD PTR [ebx-0x43e2d6f2],ebp
  41aa2e:	or     eax,0x74587c88
  41aa33:	(bad)  
  41aa34:	mov    ecx,0xb44be5c3
  41aa39:	mov    dh,0xb0
  41aa3b:	dec    ecx
  41aa3c:	(bad)  
  41aa3d:	and    eax,0xe7aca061
  41aa42:	cmp    eax,0x7bbde8c8
  41aa47:	xor    DWORD PTR cs:[ebx-0x60],ebx
  41aa4b:	mov    ds:0x2a40a7bf,eax
  41aa50:	adc    BYTE PTR [eax-0x1d],al
  41aa53:	inc    ecx
  41aa54:	fs sub al,0x12
  41aa57:	out    0x55,al
  41aa59:	ds popa 
  41aa5b:	pop    esp
  41aa5c:	(bad)  
  41aa5e:	pop    ebp
  41aa5f:	pop    esi
  41aa60:	push   esi
  41aa61:	xor    ecx,DWORD PTR [ebp+0x446d1956]
  41aa67:	and    ebp,ecx
  41aa69:	push   ecx
  41aa6a:	sub    ecx,DWORD PTR [esi]
  41aa6c:	dec    edx
  41aa6d:	adc    al,0xa0
  41aa6f:	mov    ch,0xd7
  41aa71:	dec    al
  41aa73:	cmc    
  41aa74:	int3   
  41aa75:	dec    edi
  41aa76:	jae    0x41aabe
  41aa78:	pusha  
  41aa79:	push   edx
  41aa7a:	add    eax,0x9b040b4f
  41aa7f:	adc    al,0x99
  41aa81:	adc    esi,ebp
  41aa83:	xor    eax,0x67c7ce90
  41aa88:	push   cs
  41aa89:	mov    esi,0xdae0ddf
  41aa8e:	out    0xc3,eax
  41aa90:	test   BYTE PTR [edi+0x40],ah
  41aa93:	aam    0x2e
  41aa95:	data16 lahf 
  41aa97:	sbb    eax,0x9ae1337a
  41aa9c:	fadd   DWORD PTR [edi]
  41aa9e:	xchg   esp,eax
  41aa9f:	stos   DWORD PTR es:[edi],eax
  41aaa0:	out    dx,al
  41aaa1:	outs   dx,DWORD PTR ds:[esi]
  41aaa2:	jecxz  0x41aadb
  41aaa4:	shr    DWORD PTR [esi+0xa456da],cl
  41aaaa:	pop    esi
  41aaab:	repnz cdq 
  41aaad:	add    DWORD PTR [ecx],edi
  41aaaf:	xchg   esi,eax
  41aab0:	clc    
  41aab1:	mov    dh,0x3f
  41aab3:	and    eax,0x2089a8c3
  41aab8:	ds test eax,0xe8e947cc
  41aabe:	cmp    al,0xb9
  41aac0:	push   cs
  41aac1:	imul   esi,ebp,0x36
  41aac4:	add    ebx,esi
  41aac6:	aam    0xe
  41aac8:	test   eax,0x277755cc
  41aacd:	cwde   
  41aace:	mov    dh,0x44
  41aad0:	mov    dh,0x4e
  41aad2:	mov    ebx,DWORD PTR [edi]
  41aad4:	adc    DWORD PTR [ebx-0x228c9c],ecx
  41aada:	inc    ebx
  41aadb:	sbb    esi,DWORD PTR [esi]
  41aadd:	test   al,0x85
  41aadf:	pop    ss
  41aae0:	sbb    bh,dl
  41aae2:	push   edx
  41aae3:	xchg   DWORD PTR [ebx],eax
  41aae5:	push   ax
  41aae7:	cdq    
  41aae8:	call   0x3dfb:0x35697fe7
  41aaef:	inc    ecx
  41aaf0:	ds push esi
  41aaf2:	pop    esp
  41aaf3:	or     DWORD PTR ds:0xf9db26ca,edx
  41aaf9:	xor    eax,0x7f7b0b7c
  41aafe:	cdq    
  41aaff:	rcl    BYTE PTR [edi+ebx*8-0x65],1
  41ab03:	sub    al,0xfb
  41ab05:	cld    
  41ab06:	rcl    cl,cl
  41ab08:	out    0x14,al
  41ab0a:	ins    BYTE PTR es:[edi],dx
  41ab0b:	fs inc ebx
  41ab0d:	in     eax,0xac
  41ab0f:	lea    esp,[edx+0x58ed0f4]
  41ab15:	imul   esi,DWORD PTR [edx+0x4b15d4ce],0xb97c2c1c
  41ab1f:	jne    0x41aaca
  41ab21:	retf   0x3471
  41ab24:	shl    DWORD PTR [esi+esi*4-0xc82790e],0xbb
  41ab2c:	push   0xffffff95
  41ab2e:	scas   eax,DWORD PTR es:[edi]
  41ab2f:	shl    BYTE PTR cs:[ecx],1
  41ab32:	out    dx,al
  41ab33:	inc    ebx
  41ab34:	sub    eax,0xc980c77b
  41ab39:	inc    ebp
  41ab3a:	and    al,0x6c
  41ab3c:	(bad)  
  41ab3d:	mov    ebp,DWORD PTR [esi]
  41ab3f:	div    DWORD PTR [ecx-0x53fae412]
  41ab45:	outs   dx,BYTE PTR ds:[esi]
  41ab46:	les    edx,FWORD PTR [edx]
  41ab48:	enter  0x2e29,0x54
  41ab4c:	pop    esp
  41ab4d:	aaa    
  41ab4e:	enter  0xc835,0x25
  41ab52:	in     eax,dx
  41ab53:	pusha  
  41ab54:	push   ebx
  41ab55:	pusha  
  41ab56:	out    dx,eax
  41ab57:	adc    DWORD PTR [ecx],eax
  41ab59:	(bad)  
  41ab5b:	rol    DWORD PTR [esi-0x69],0x36
  41ab5f:	jecxz  0x41ab66
  41ab61:	dec    ebx
  41ab62:	add    DWORD PTR [ecx-0x124ac351],ebx
  41ab68:	sbb    bh,BYTE PTR [edi+0x4a]
  41ab6b:	push   es
  41ab6c:	mov    ds:0x3155e3de,al
  41ab71:	rcl    DWORD PTR ds:[edi],0x55
  41ab75:	dec    eax
  41ab76:	mov    DWORD PTR [ebx-0x16],ecx
  41ab79:	xchg   edx,eax
  41ab7a:	cli    
  41ab7b:	ret    
  41ab7c:	mov    eax,ds:0xd345f0b7
  41ab81:	daa    
  41ab82:	mov    WORD PTR [eax],cs
  41ab84:	not    bl
  41ab86:	mov    BYTE PTR [eax],bh
  41ab88:	shl    DWORD PTR [ecx+0x12015ed1],cl
  41ab8e:	out    dx,eax
  41ab8f:	xor    esp,DWORD PTR [edx]
  41ab91:	imul   edi,DWORD PTR [ecx+0x9332aa7],0xf7f4ae8d
  41ab9b:	pop    edi
  41ab9c:	pushf  
  41ab9d:	(bad)  
  41ab9e:	xchg   BYTE PTR [eax-0x44],al
  41aba1:	mov    cl,0x71
  41aba3:	mov    ebx,0x3e411631
  41aba8:	jle    0x41abd7
  41abaa:	push   0xb586bbcd
  41abaf:	sar    DWORD PTR [esp+ebx*2-0x2f6bc157],cl
  41abb6:	and    eax,0x3125c505
  41abbb:	mov    eax,ds:0xc4f3f23f
  41abc0:	daa    
  41abc1:	rcl    DWORD PTR [edi-0x13],cl
  41abc4:	fwait
  41abc5:	lods   al,BYTE PTR ds:[esi]
  41abc6:	and    eax,0xffeb2c07
  41abcb:	jl     0x41ac39
  41abcd:	pop    eax
  41abce:	xchg   esi,eax
  41abcf:	repz arpl di,bx
  41abd2:	stos   BYTE PTR es:[edi],al
  41abd3:	leave  
  41abd4:	and    eax,edx
  41abd6:	push   esi
  41abd7:	dec    ebp
  41abd8:	mov    WORD PTR [ebp+0x5f7c2ad3],?
  41abde:	cmc    
  41abdf:	ret    0x9c9b
  41abe2:	(bad)  
  41abe4:	xchg   ebx,eax
  41abe5:	adc    eax,0xf41ccc3
  41abea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abeb:	xor    edi,ecx
  41abed:	std    
  41abee:	das    
  41abef:	clc    
  41abf0:	mov    al,0xf7
  41abf2:	ins    DWORD PTR es:[edi],dx
  41abf3:	mov    bl,BYTE PTR [ebx]
  41abf5:	aam    0x23
  41abf7:	push   esp
  41abf8:	mov    DWORD PTR [esi-0x3a],esi
  41abfb:	fdiv   DWORD PTR [ebp+0x50]
  41abfe:	data16 mov BYTE PTR [ebx],bh
  41ac01:	je     0x41ab8d
  41ac03:	scas   al,BYTE PTR es:[edi]
  41ac04:	mov    bl,0xbd
  41ac06:	dec    ebx
  41ac07:	cdq    
  41ac08:	push   edi
  41ac09:	pop    ds
  41ac0a:	ret    
  41ac0b:	xchg   esi,eax
  41ac0c:	mov    edx,0xde7a1a51
  41ac11:	mov    ds:0xc709a2c8,eax
  41ac16:	jmp    0x41aba0
  41ac18:	pop    edi
  41ac19:	(bad)
  41ac1e:	call   0x953dd3ba
  41ac23:	in     al,dx
  41ac24:	(bad)  
  41ac25:	pop    ss
  41ac26:	lahf   
  41ac27:	hlt    
  41ac28:	(bad)  
  41ac29:	adc    ch,BYTE PTR [edx]
  41ac2b:	fisttp QWORD PTR ds:0x5101c918
  41ac31:	mov    eax,0xa62f6f11
  41ac36:	xchg   esi,eax
  41ac37:	and    al,0x4
  41ac39:	adc    al,0xe9
  41ac3b:	mov    al,0x4
  41ac3d:	fs loopne 0x41acae
  41ac40:	dec    eax
  41ac41:	enter  0x7ab7,0x37
  41ac45:	das    
  41ac46:	int3   
  41ac47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac48:	call   0x74c0:0x16a4be83
  41ac4f:	rcl    BYTE PTR [ecx-0x50d1d4de],1
  41ac55:	cs (bad) 
  41ac57:	sbb    eax,0x2f33db7f
  41ac5c:	loop   0x41abe1
  41ac5e:	fsubrp st(6),st
  41ac60:	xor    ah,BYTE PTR [eax-0x70]
  41ac63:	sbb    eax,0xb7c5d4b8
  41ac68:	jecxz  0x41acaf
  41ac6a:	cmp    eax,0xdb3f19b3
  41ac6f:	in     al,0x9c
  41ac71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac72:	push   0xffffffdb
  41ac74:	gs dec ebx
  41ac76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac77:	dec    edx
  41ac78:	gs and eax,0x16f48393
  41ac7e:	outs   dx,DWORD PTR ds:[esi]
  41ac7f:	mov    eax,0x97bfe704
  41ac84:	sbb    DWORD PTR [edx+0x6a],eax
  41ac87:	push   0xa35ae75d
  41ac8c:	push   ds
  41ac8d:	mov    edx,ebp
  41ac8f:	sub    eax,0x59434eee
  41ac94:	and    eax,0xe4c268e
  41ac99:	(bad)  
  41ac9a:	cmc    
  41ac9b:	or     ecx,DWORD PTR [edi]
  41ac9d:	int    0x5a
  41ac9f:	and    DWORD PTR ds:0x352b7173,edx
  41aca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aca6:	push   edx
  41aca7:	inc    esi
  41aca8:	test   dl,dh
  41acaa:	iret   
  41acab:	xor    bl,BYTE PTR [ebp+0x39]
  41acae:	call   0x55939a02
  41acb3:	mov    ?,WORD PTR [edi+0x3a]
  41acb6:	push   ds
  41acb7:	fidivr WORD PTR cs:[ecx]
  41acba:	add    ebp,DWORD PTR ds:0xec0c66bc
  41acc0:	rcr    DWORD PTR [edi-0x2273e85],0xe3
  41acc7:	jg     0x41ac53
  41acc9:	add    DWORD PTR [ebx+0x509b51b],edi
  41accf:	enter  0xffb0,0x8
  41acd3:	mov    ch,0x24
  41acd5:	jae    0x41ac89
  41acd7:	fmul   DWORD PTR [eax-0x38a6fa9d]
  41acdd:	xchg   esp,eax
  41acde:	xor    al,0xc7
  41ace0:	sbb    edi,edi
  41ace2:	push   ds
  41ace3:	dec    ebx
  41ace4:	call   0x5670901f
  41ace9:	jbe    0x41acbf
  41aceb:	addr16 call 0xc320:0xb1d0f81d
  41acf3:	adc    ebx,DWORD PTR gs:[ebx]
  41acf6:	(bad)
  41acfa:	jae    0x41ad79
  41acfc:	and    eax,0xbb428398
  41ad01:	into   
  41ad02:	pushf  
  41ad03:	int    0x4d
  41ad05:	jp     0x41acf6
  41ad07:	and    ecx,ebp
  41ad09:	leave  
  41ad0a:	ins    DWORD PTR es:[edi],dx
  41ad0b:	in     eax,0x6d
  41ad0d:	sub    DWORD PTR [edx],esp
  41ad0f:	rcl    DWORD PTR [esi],1
  41ad11:	scas   al,BYTE PTR es:[edi]
  41ad12:	jp     0x41ad54
  41ad14:	sbb    BYTE PTR [eax],ah
  41ad16:	pop    ss
  41ad17:	std    
  41ad18:	mov    ecx,0xe29451d3
  41ad1d:	ins    DWORD PTR es:[edi],dx
  41ad1e:	loopne 0x41ad74
  41ad20:	mov    ds:0x7b5d7647,al
  41ad25:	in     eax,0xa7
  41ad27:	adc    esi,eax
  41ad29:	pop    ebp
  41ad2a:	dec    esi
  41ad2b:	adc    BYTE PTR [edi+edi*1-0x2209d2dd],0x36
  41ad33:	cmp    DWORD PTR [edi],eax
  41ad35:	pop    ss
  41ad36:	ret    0x7a4c
  41ad39:	loop   0x41ad4d
  41ad3b:	(bad)  
  41ad3c:	(bad)  
  41ad3d:	jns    0x41ad65
  41ad3f:	push   es
  41ad40:	inc    eax
  41ad41:	adc    dh,BYTE PTR [ebx+edi*1]
  41ad44:	push   ecx
  41ad45:	jp     0x41ace0
  41ad47:	push   0x9
  41ad49:	xchg   BYTE PTR [esi],cl
  41ad4b:	add    ch,BYTE PTR [ecx+0x402d1388]
  41ad51:	rol    DWORD PTR [ecx],0x49
  41ad54:	outs   dx,DWORD PTR ds:[esi]
  41ad55:	fnstsw WORD PTR [esi-0x66]
  41ad58:	test   al,0x41
  41ad5a:	loop   0x41ad8c
  41ad5c:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad5e:	mov    cl,0x69
  41ad60:	out    0xf2,al
  41ad62:	pop    ebp
  41ad63:	aaa    
  41ad64:	or     DWORD PTR [ebx+0xe1638a2],edx
  41ad6a:	sbb    eax,0xc2861b65
  41ad6f:	or     eax,0xa34bccd8
  41ad74:	xor    bl,cl
  41ad76:	mov    al,ds:0xa9f85bd5
  41ad7b:	mov    al,ds:0x3c15d45f
  41ad80:	(bad)  
  41ad81:	xchg   ecx,eax
  41ad82:	xor    BYTE PTR [ebp+0xd],0x6e
  41ad86:	mov    esp,0xfa82a2f0
  41ad8b:	js     0x41ad27
  41ad8d:	aas    
  41ad8e:	mov    ebp,DWORD PTR [ebx]
  41ad90:	or     eax,0x3fa9e807
  41ad95:	inc    esi
  41ad96:	sbb    eax,DWORD PTR [edi]
  41ad98:	shr    al,0xd5
  41ad9b:	push   es
  41ad9c:	das    
  41ad9d:	or     al,0x55
  41ad9f:	push   edx
  41ada0:	sbb    DWORD PTR ds:[ebp-0x18],eax
  41ada4:	imul   edi,edi,0x5
  41ada7:	push   ss
  41ada8:	cs jb  0x41addd
  41adab:	ja     0x41ad83
  41adad:	cmp    al,0x20
  41adaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adb0:	fidivr WORD PTR [ebp-0x52]
  41adb3:	xchg   esi,eax
  41adb4:	cmp    BYTE PTR [eax+0x68],dh
  41adb7:	adc    BYTE PTR [edi],ch
  41adb9:	pop    eax
  41adba:	pop    ecx
  41adbb:	daa    
  41adbc:	add    esp,DWORD PTR [eax+edx*4+0x248146a0]
  41adc3:	sbb    BYTE PTR [ebx],bh
  41adc5:	adc    DWORD PTR [edi+0xf22fc9],0xffffff8b
  41adcc:	mov    al,BYTE PTR [edx]
  41adce:	retf   
  41adcf:	mov    ah,0x48
  41add1:	into   
  41add2:	gs in  al,dx
  41add4:	shl    BYTE PTR [ebp-0x5e1c06c],1
  41adda:	xor    eax,0x7a6ff760
  41addf:	push   0xdfef539c
  41ade4:	jae    0x41ae50
  41ade6:	xchg   ebp,eax
  41ade7:	jbe    0x41ad84
  41ade9:	jge    0x41adab
  41adeb:	or     esp,DWORD PTR [edx]
  41aded:	and    DWORD PTR [edi+0x3ec4e03e],0x3f
  41adf4:	in     al,dx
  41adf5:	jae    0x41ae03
  41adf7:	xor    al,BYTE PTR [eax+ebp*8]
  41adfa:	icebp  
  41adfb:	imul   ebp,esi
  41adfe:	sar    DWORD PTR [ecx+0x733c9a82],1
  41ae04:	mov    ah,0x42
  41ae06:	adc    ecx,DWORD PTR [edx+0x142222b0]
  41ae0c:	sbb    edi,esi
  41ae0e:	fs dec edx
  41ae10:	(bad)  
  41ae11:	sbb    edi,DWORD PTR [ebp-0x967d997]
  41ae17:	popf   
  41ae18:	mov    ah,0x10
  41ae1a:	in     eax,dx
  41ae1b:	scas   eax,DWORD PTR es:[edi]
  41ae1c:	jmp    0x2d22:0x8cb693c1
  41ae23:	shl    BYTE PTR [eax],cl
  41ae25:	stos   DWORD PTR es:[edi],eax
  41ae26:	call   0x50e99eae
  41ae2b:	jg     0x41ae0c
  41ae2d:	jns    0x41adfd
  41ae2f:	mov    edx,0xf8a732f
  41ae34:	lods   al,BYTE PTR ds:[esi]
  41ae35:	xor    DWORD PTR [eax-0x40ac072a],esi
  41ae3b:	(bad)  
  41ae3c:	mov    eax,0x9bda75c6
  41ae41:	push   0xba9b04b
  41ae46:	mov    ch,0x14
  41ae48:	dec    esi
  41ae49:	sub    bh,BYTE PTR [edx+0x2d]
  41ae4c:	push   cs
  41ae4d:	pop    ecx
  41ae4e:	pop    ebx
  41ae4f:	mov    esp,0x7e928026
  41ae54:	pop    ebx
  41ae55:	pop    ss
  41ae56:	xchg   edx,eax
  41ae57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae58:	adc    BYTE PTR [esi+eax*1-0x63],0x46
  41ae5d:	adc    al,0x61
  41ae5f:	pop    ebx
  41ae60:	pop    edi
  41ae61:	je     0x41ae4d
  41ae63:	adc    eax,0xc58ce225
  41ae68:	pop    ds
  41ae69:	adc    eax,0xa248f60f
  41ae6e:	or     eax,ebx
  41ae70:	mov    esi,ebx
  41ae72:	or     al,0x16
  41ae74:	pop    edi
  41ae75:	sbb    ebx,DWORD PTR [esi-0x75b16be3]
  41ae7b:	dec    ecx
  41ae7c:	mov    esp,0x136c7032
  41ae81:	or     eax,edi
  41ae83:	ja     0x41aea1
  41ae85:	add    ecx,DWORD PTR [esi]
  41ae87:	push   ebp
  41ae88:	cdq    
  41ae89:	popf   
  41ae8a:	enter  0xcb8d,0x8c
  41ae8e:	xor    eax,0x141df3c6
  41ae93:	std    
  41ae94:	test   ax,0xeccc
  41ae98:	fidivr DWORD PTR [ebx]
  41ae9a:	push   ebx
  41ae9b:	enter  0x311,0x99
  41ae9f:	(bad)  
  41aea0:	in     eax,0x4c
  41aea2:	xor    al,0x31
  41aea4:	inc    esp
  41aea5:	mov    eax,DWORD PTR [esi+ebx*1]
  41aea8:	pop    edi
  41aea9:	mov    dh,0xf5
  41aeab:	pop    edi
  41aeac:	cmc    
  41aead:	sub    al,0x6
  41aeaf:	mov    eax,ds:0xf13fa31c
  41aeb4:	and    al,0x90
  41aeb6:	ret    
  41aeb7:	iret   
  41aeb8:	hlt    
  41aeb9:	stos   DWORD PTR es:[edi],eax
  41aeba:	mov    ebp,0x294a9360
  41aebf:	fwait
  41aec0:	jmp    0xcfd660b2
  41aec5:	xchg   DWORD PTR [edi],ebx
  41aec7:	xchg   ecx,eax
  41aec8:	sub    DWORD PTR [ecx+esi*4+0x44],edx
  41aecc:	pushf  
  41aecd:	dec    ecx
  41aece:	pop    esi
  41aecf:	jmp    0xa721:0xba6cc985
  41aed6:	add    ebp,edx
  41aed8:	das    
  41aed9:	jmp    0xafbe:0x73739e4c
  41aee0:	push   edi
  41aee1:	pop    ebx
  41aee2:	ret    
  41aee3:	or     al,0x16
  41aee5:	and    al,0x40
  41aee7:	cmp    BYTE PTR ds:0xc76eb995,dl
  41aeed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aeee:	repz add bh,bh
  41aef1:	pop    eax
  41aef2:	cld    
  41aef3:	jns    0x41af5e
  41aef5:	add    BYTE PTR cs:[edx+ebx*1-0x3099a65c],0xa8
  41aefe:	fwait
  41aeff:	scas   eax,DWORD PTR es:[edi]
  41af00:	bound  edi,QWORD PTR [edi+0x15330b44]
  41af06:	fs pusha 
  41af08:	cmovno edi,DWORD PTR [ebp-0x5163db75]
  41af0f:	mov    dh,0x75
  41af11:	call   0xe80c:0x1127bb1b
  41af18:	dec    esi
  41af19:	mov    eax,0x1ec111df
  41af1e:	inc    esi
  41af1f:	int    0x7e
  41af21:	das    
  41af22:	jmp    0x73c013dc
  41af27:	repnz cld 
  41af29:	pop    ecx
  41af2a:	retf   
  41af2b:	bound  eax,QWORD PTR [ebx-0x7696528c]
  41af31:	sub    eax,0xf5372823
  41af36:	xor    al,0x0
  41af38:	outs   dx,BYTE PTR ds:[esi]
  41af39:	inc    ebp
  41af3a:	and    al,0x4a
  41af3c:	aad    0xc3
  41af3e:	xor    ecx,DWORD PTR [edi-0x6d]
  41af41:	sub    al,0xc3
  41af43:	push   ebp
  41af44:	push   esi
  41af45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af46:	lods   eax,DWORD PTR ds:[esi]
  41af47:	push   cs
  41af48:	jmp    0x41af42
  41af4a:	stc    
  41af4b:	ret    0x61c8
  41af4e:	bound  esi,QWORD PTR [ebp+eiz*2-0x25]
  41af52:	hlt    
  41af53:	adc    BYTE PTR [eax-0x1f],ah
  41af56:	sub    eax,0x5b6c1220
  41af5b:	pmullw mm1,QWORD PTR [ebp-0x79]
  41af5f:	mov    esp,0x97223215
  41af64:	dec    edi
  41af65:	and    dl,BYTE PTR [esi+0x59]
  41af68:	mov    bh,0x74
  41af6a:	test   al,0xd6
  41af6c:	jmp    0x61a8:0x6abd6226
  41af73:	mov    ebx,0xaa95d2e8
  41af78:	mov    cl,0xa0
  41af7a:	dec    ecx
  41af7b:	xchg   edx,eax
  41af7c:	mov    al,0xc0
  41af7e:	stc    
  41af7f:	ret    
  41af80:	xchg   esp,eax
  41af81:	mov    dl,0x58
  41af83:	sahf   
  41af84:	aas    
  41af85:	pop    eax
  41af86:	mov    ds:0x56a8abf0,eax
  41af8b:	(bad)  
  41af8c:	jp     0x41af11
  41af8e:	mov    ebx,0x6521b27b
  41af93:	ins    DWORD PTR es:[edi],dx
  41af94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af95:	xor    eax,0x3b4389d3
  41af9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af9b:	ds inc ebx
  41af9d:	inc    edi
  41af9e:	mov    eax,0x4234945c
  41afa3:	xchg   ebp,eax
  41afa4:	lea    ebx,[edi+eax*1-0x22]
  41afa8:	adc    BYTE PTR [ebp+edi*2+0x42],dh
  41afac:	and    BYTE PTR [ecx-0x75bf1307],ch
  41afb2:	mov    edx,0x60b13ab3
  41afb7:	out    dx,eax
  41afb8:	xor    dh,BYTE PTR cs:[bx+di-0x2c]
  41afbd:	cmp    al,0x3b
  41afbf:	add    DWORD PTR [edi+0x6568a5a9],ebx
  41afc5:	fiadd  WORD PTR [edi-0x67dc5555]
  41afcb:	inc    edi
  41afcc:	dec    edi
  41afcd:	cld    
  41afce:	mov    esp,0x67a6e2bb
  41afd3:	iret   
  41afd4:	loop   0x41aff2
  41afd6:	dec    esp
  41afd7:	jbe    0x41afe4
  41afd9:	mov    dh,0x19
  41afdb:	imul   edi,DWORD PTR [ecx-0x19],0xe66e10e9
  41afe2:	push   ebx
  41afe3:	stos   DWORD PTR es:[edi],eax
  41afe4:	das    
  41afe5:	pop    ds
  41afe6:	inc    eax
  41afe7:	inc    esp
  41afe8:	in     al,dx
  41afe9:	mov    ds:0xd8e958e9,al
  41afee:	mov    dh,0x68
  41aff0:	dec    ebx
  41aff1:	cmp    DWORD PTR [ecx+0x5ac25d1c],ebp
  41aff7:	push   ebp
  41aff8:	jne    0x41b021
  41affa:	mov    dh,0xc
  41affc:	std    
  41affd:	adc    al,0x2
  41afff:	inc    esi
  41b000:	int3   
  41b001:	xchg   esi,eax
  41b002:	aam    0xa5
  41b004:	push   esi
  41b005:	retf   0x83ec
  41b008:	shl    DWORD PTR [edx+ebx*4+0x36f421e9],1
  41b00f:	fst    st(5)
  41b011:	ficom  WORD PTR [edi+0x72]
  41b014:	push   esi
  41b015:	mov    dh,0xc8
  41b017:	jecxz  0x41b04f
  41b019:	cmp    cl,BYTE PTR [eax-0x60]
  41b01c:	xchg   DWORD PTR [edi+0x73],ebp
  41b01f:	retf   0xa6d
  41b022:	loop   0x41b03e
  41b024:	les    ecx,FWORD PTR [ebp-0x2]
  41b027:	imul   esi,DWORD PTR [edx-0x2],0x3833b4c1
  41b02e:	mov    ecx,DWORD PTR [eax+edi*1-0x5d]
  41b032:	pop    ds
  41b033:	data16 and BYTE PTR [ecx-0x3],ah
  41b037:	xchg   ecx,eax
  41b038:	xchg   esi,eax
  41b039:	sti    
  41b03a:	lods   al,BYTE PTR ds:[esi]
  41b03b:	xchg   ecx,eax
  41b03c:	and    al,0x7a
  41b03e:	repz jl 0x41b021
  41b041:	dec    edi
  41b042:	mov    cl,0x7a
  41b044:	xor    eax,0x188bf052
  41b049:	sbb    DWORD PTR [edx],0x54
  41b04c:	jge    0x41b041
  41b04e:	inc    eax
  41b04f:	mov    bh,0x90
  41b051:	jae    0x41affd
  41b053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b054:	cld    
  41b055:	jecxz  0x41b03f
  41b057:	faddp  st(2),st
  41b059:	cmp    eax,0xe9ab40ef
  41b05e:	pop    esi
  41b05f:	lea    ecx,[edx]
  41b061:	or     esi,DWORD PTR ss:[edi-0x1e]
  41b065:	repz mov al,ds:0x91a5bd7d
  41b06b:	fcomi  st,st(3)
  41b06d:	lock ins BYTE PTR es:[edi],dx
  41b06f:	fcom   DWORD PTR [ecx+0x6]
  41b072:	ret    
  41b073:	call   0x8ab9:0xbff3cad8
  41b07a:	cdq    
  41b07b:	test   bh,0x8f
  41b07e:	div    dh
  41b080:	add    DWORD PTR [ebx+ecx*2-0x72c5d31d],0x43574b4e
  41b08b:	mov    ecx,0x250afa6a
  41b090:	call   0x686a10e5
  41b095:	mov    bh,0xac
  41b097:	mov    ds:0xef1c4bde,eax
  41b09c:	xor    al,0x27
  41b09e:	add    BYTE PTR [edx-0x55e6cb0d],bh
  41b0a4:	xor    eax,0x835a8cd8
  41b0a9:	pop    edx
  41b0aa:	rol    ebx,cl
  41b0ac:	sti    
  41b0ad:	mov    ebp,0xd4d6d7bb
  41b0b2:	cmp    bl,BYTE PTR [ebp-0x1e]
  41b0b5:	rcl    dh,1
  41b0b7:	in     eax,0xf0
  41b0b9:	mov    bh,0x44
  41b0bb:	pusha  
  41b0bc:	ss int 0x1e
  41b0bf:	mov    esp,0x2b595461
  41b0c4:	or     eax,0xb1118a0a
  41b0c9:	push   edx
  41b0ca:	pop    eax
  41b0cb:	jno    0x41b0af
  41b0cd:	clc    
  41b0ce:	add    bl,bh
  41b0d0:	mov    cl,0x8c
  41b0d2:	push   ss
  41b0d3:	fisubr DWORD PTR [ebp+0x53]
  41b0d6:	add    DWORD PTR [ebp-0x879e763],esi
  41b0dc:	(bad)  
  41b0dd:	dec    esp
  41b0de:	arpl   WORD PTR [esi+0x73],bx
  41b0e1:	iret   
  41b0e2:	mov    ebx,0x39681921
  41b0e7:	push   ds
  41b0e8:	mov    al,0xd8
  41b0ea:	sub    dl,BYTE PTR [esi+0x59126950]
  41b0f0:	cmp    al,0x65
  41b0f2:	js     0x41b161
  41b0f4:	jecxz  0x41b0ac
  41b0f6:	sbb    cl,BYTE PTR [esi]
  41b0f8:	pop    eax
  41b0fa:	(bad)  
  41b0fb:	sbb    eax,DWORD PTR [eax+0x11]
  41b0fe:	cs pop edx
  41b100:	stc    
  41b101:	sbb    esi,DWORD PTR [ecx-0x5d09d703]
  41b107:	jp     0x41b16f
  41b109:	sahf   
  41b10a:	in     eax,dx
  41b10b:	stos   BYTE PTR es:[edi],al
  41b10c:	mov    ds:0x7127ca91,ax
  41b112:	ds (bad) 
  41b114:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b115:	dec    edx
  41b116:	out    dx,eax
  41b117:	aam    0xc5
  41b119:	gs test al,0xda
  41b11c:	push   ecx
  41b11d:	dec    edx
  41b11e:	inc    ecx
  41b11f:	push   ebx
  41b120:	xchg   edi,eax
  41b121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b122:	daa    
  41b123:	arpl   WORD PTR [edx],bx
  41b125:	pop    ecx
  41b126:	add    eax,0x2a33a2f7
  41b12b:	dec    edi
  41b12c:	stos   BYTE PTR es:[edi],al
  41b12d:	pop    edi
  41b12e:	cld    
  41b12f:	cli    
  41b130:	add    al,0x4f
  41b132:	test   eax,0x254aa35e
  41b137:	mov    al,0x55
  41b139:	(bad)  
  41b13a:	popw   ds
  41b13c:	xor    DWORD PTR [ecx-0x55],0xffffffd8
  41b140:	out    dx,al
  41b141:	jb     0x41b106
  41b143:	cmp    eax,0x361842e9
  41b148:	outs   dx,BYTE PTR ds:[esi]
  41b149:	lock xor ebp,DWORD PTR [edx]
  41b14c:	into   
  41b14d:	and    eax,0xd1add76c
  41b152:	(bad)  
  41b153:	(bad)  
  41b155:	div    DWORD PTR [ebx]
  41b157:	xchg   ebp,eax
  41b158:	fdivr  QWORD PTR [edi]
  41b15a:	shr    DWORD PTR [eax],cl
  41b15c:	in     al,0x98
  41b15e:	das    
  41b15f:	loop   0x41b157
  41b161:	mov    dl,ah
  41b163:	xor    eax,0xcb19b403
  41b168:	scas   eax,DWORD PTR es:[edi]
  41b169:	xchg   ebx,eax
  41b16a:	shl    BYTE PTR [ebx-0x6d],1
  41b16d:	leave  
  41b16e:	je     0x41b148
  41b170:	xor    ecx,DWORD PTR [edi-0x1d]
  41b173:	int3   
  41b174:	sbb    BYTE PTR [ebx+0x22d03389],dh
  41b17a:	mov    ecx,0xb4b7c455
  41b17f:	sbb    eax,0x9d293483
  41b184:	fs mov ch,0x66
  41b187:	sub    edi,DWORD PTR [ebp-0x72a8e1aa]
  41b18d:	cmp    dh,BYTE PTR [ecx-0x19fd5f87]
  41b193:	mov    dh,0xaf
  41b195:	jle    0x41b1b7
  41b197:	and    edx,edx
  41b199:	jmp    DWORD PTR [esi+0x5b6c97c8]
  41b19f:	push   0x5ad128c9
  41b1a4:	out    0x79,eax
  41b1a6:	jo     0x41b1ba
  41b1a8:	pop    ecx
  41b1a9:	mov    bh,0x52
  41b1ab:	dec    esi
  41b1ac:	fild   WORD PTR [ecx+eiz*2+0x2d0f655e]
  41b1b3:	pop    ecx
  41b1b4:	mov    al,0x2b
  41b1b6:	pop    ecx
  41b1b7:	and    DWORD PTR [edi],ebp
  41b1b9:	mov    ebp,0xd9bfd489
  41b1be:	xor    eax,0x30f6ff36
  41b1c3:	stos   DWORD PTR es:[edi],eax
  41b1c4:	add    BYTE PTR [ecx-0x73],0x52
  41b1c8:	add    BYTE PTR [esi],bh
  41b1ca:	out    dx,eax
  41b1cb:	xchg   eax,ecx
  41b1cd:	cld    
  41b1ce:	and    eax,0x56ad35fa
  41b1d3:	jo     0x41b1f9
  41b1d5:	xor    DWORD PTR [eax+0x28],esi
  41b1d8:	scas   eax,DWORD PTR es:[edi]
  41b1d9:	neg    DWORD PTR [ebp+0x27]
  41b1dc:	add    DWORD PTR [eax],eax
  41b1de:	aaa    
  41b1df:	cmp    ch,BYTE PTR [edx-0x20]
  41b1e2:	xchg   edx,eax
  41b1e3:	enter  0x5e41,0x70
  41b1e7:	retf   
  41b1e8:	pop    ds
  41b1e9:	cmp    DWORD PTR [edi+0x4a7621a1],esp
  41b1ef:	pop    ss
  41b1f0:	out    0xa8,al
  41b1f2:	scas   eax,DWORD PTR es:[edi]
  41b1f3:	stos   BYTE PTR es:[edi],al
  41b1f4:	or     eax,0xdf20f6c9
  41b1f9:	sub    al,0x2c
  41b1fb:	(bad)  
  41b1fc:	imul   ecx,esi,0x6cf2c908
  41b202:	stc    
  41b203:	add    eax,0xaaef2ff5
  41b208:	dec    esi
  41b209:	sahf   
  41b20a:	pusha  
  41b20b:	jmp    0x3ab91e8f
  41b210:	or     DWORD PTR [esp+ebx*8-0x60],esp
  41b214:	pushf  
  41b215:	scas   al,BYTE PTR es:[edi]
  41b216:	adc    BYTE PTR [esi],bh
  41b218:	je     0x41b247
  41b21a:	shr    DWORD PTR [edi],1
  41b21c:	sub    ebx,DWORD PTR [edx+0x85847bb]
  41b222:	fwait
  41b223:	imul   eax,esi,0xffffffa2
  41b226:	rcl    BYTE PTR [ebx-0x62],cl
  41b229:	adc    al,0x29
  41b22b:	ins    BYTE PTR es:[edi],dx
  41b22c:	inc    edx
  41b22d:	cmp    al,0x12
  41b22f:	pop    esi
  41b230:	push   eax
  41b231:	out    dx,al
  41b232:	and    edi,eax
  41b234:	push   ecx
  41b235:	adc    dl,BYTE PTR [eax+0x2abc9357]
  41b23b:	pushf  
  41b23c:	daa    
  41b23d:	lods   al,BYTE PTR ds:[esi]
  41b23e:	push   es
  41b23f:	adc    DWORD PTR [edi],ebx
  41b241:	mov    ebx,DWORD PTR [esi-0x10d4e2bf]
  41b247:	cmp    eax,0x674508f5
  41b24c:	popa   
  41b24d:	mov    al,ds:0xc586a0d3
  41b252:	sub    al,0xaf
  41b254:	lock outs dx,DWORD PTR ds:[esi]
  41b256:	mov    esp,0x5724f8ef
  41b25b:	cmp    BYTE PTR [esi+0x7c],ah
  41b25e:	imul   DWORD PTR ds:0xec021abd
  41b264:	stos   BYTE PTR es:[edi],al
  41b265:	sbb    esi,ecx
  41b267:	dec    esi
  41b268:	pop    eax
  41b269:	pop    esp
  41b26a:	push   ebp
  41b26b:	(bad)  
  41b26c:	lods   eax,DWORD PTR ds:[esi]
  41b26d:	mov    dh,0x52
  41b26f:	adc    eax,0x8dc04b09
  41b274:	int    0xe6
  41b276:	ja     0x41b2f2
  41b278:	out    dx,eax
  41b279:	mov    bl,0x33
  41b27b:	adc    DWORD PTR [esi+0x29e8aa4f],esp
  41b281:	clc    
  41b282:	enter  0xecaf,0x40
  41b286:	add    eax,DWORD PTR [esi+eax*1-0x713e5965]
  41b28d:	cmp    cl,0xbb
  41b290:	mul    BYTE PTR [edi-0x42]
  41b293:	sub    bh,0x33
  41b296:	jo     0x41b222
  41b298:	adc    bh,0x8b
  41b29b:	mov    ah,0x99
  41b29d:	mov    al,BYTE PTR [eax]
  41b29f:	mov    esp,0xe42d958c
  41b2a4:	std    
  41b2a5:	and    eax,0x3906c75
  41b2aa:	xchg   DWORD PTR [esp+ecx*2],esp
  41b2ad:	mov    al,ds:0xd25dbaba
  41b2b2:	retf   0x599c
  41b2b5:	xchg   BYTE PTR [ecx+edx*2],al
  41b2b8:	test   BYTE PTR [esi-0x45],al
  41b2bb:	outs   dx,BYTE PTR ds:[esi]
  41b2bc:	xchg   edi,eax
  41b2bd:	pop    ebp
  41b2be:	icebp  
  41b2bf:	inc    ecx
  41b2c0:	push   ecx
  41b2c1:	ds add eax,0x1c923253
  41b2c7:	jnp    0x41b2c2
  41b2c9:	pop    esi
  41b2ca:	add    esp,DWORD PTR [eax-0x30cf223c]
  41b2d0:	call   0x25670f1d
  41b2d5:	cmp    al,0xa1
  41b2d7:	cld    
  41b2d8:	fsubr  DWORD PTR [eax-0x1d]
  41b2db:	int    0xfa
  41b2dd:	stc    
  41b2de:	xchg   edx,eax
  41b2df:	adc    esi,esp
  41b2e1:	push   esi
  41b2e2:	lock sub bl,bl
  41b2e5:	shr    DWORD PTR [ebx+edx*2-0x44],1
  41b2e9:	add    eax,0x22465f0f
  41b2ee:	sbb    al,0x4c
  41b2f0:	push   0x72
  41b2f2:	push   eax
  41b2f3:	or     eax,0xf58c89fe
  41b2f8:	mov    dh,0xad
  41b2fa:	push   es
  41b2fb:	xor    al,0x6f
  41b2fd:	push   esp
  41b2fe:	out    0x8a,al
  41b300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b301:	fwait
  41b302:	imul   ebx,DWORD PTR [esi-0x4c],0xffffffce
  41b306:	or     dh,cl
  41b308:	adc    ecx,eax
  41b30a:	les    ebp,FWORD PTR [edx-0x4c48c6b3]
  41b310:	std    
  41b311:	pop    esi
  41b312:	and    al,0xc4
  41b314:	hlt    
  41b315:	xchg   esi,eax
  41b316:	xlat   BYTE PTR ds:[ebx]
  41b317:	xchg   DWORD PTR [esi+0x6a],ecx
  41b31a:	in     al,0xa3
  41b31c:	imul   ecx,ecx,0xffffffca
  41b31f:	or     dl,BYTE PTR [edx+0x7a]
  41b322:	inc    ecx
  41b323:	adc    cl,BYTE PTR [eax-0x57]
  41b326:	sub    al,0xc2
  41b328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b329:	rol    BYTE PTR [edx],1
  41b32b:	aad    0xa1
  41b32d:	jae    0x41b330
  41b32f:	inc    ebp
  41b330:	gs jo  0x41b38a
  41b333:	arpl   si,sp
  41b335:	popa   
  41b336:	cmp    eax,0x14560d16
  41b33b:	sar    BYTE PTR [eax+ebp*1],0xe1
  41b33f:	mov    BYTE PTR [ebx],cl
  41b341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b342:	iret   
  41b343:	cmp    esi,DWORD PTR [ecx+0x1f]
  41b346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b347:	inc    edx
  41b348:	paddd  mm6,QWORD PTR [esi-0x7983cc88]
  41b34f:	sbb    eax,0x83c65947
  41b354:	out    dx,eax
  41b355:	push   esp
  41b356:	pop    esi
  41b357:	int    0x59
  41b359:	jecxz  0x41b38d
  41b35b:	lods   al,BYTE PTR ds:[esi]
  41b35c:	push   ss
  41b35d:	mov    bl,0xca
  41b35f:	mov    eax,0xee470c1d
  41b364:	mul    ebx
  41b366:	in     al,dx
  41b367:	inc    ebx
  41b368:	daa    
  41b369:	inc    ebx
  41b36a:	jno    0x41b3ad
  41b36c:	mov    ah,0xc8
  41b36e:	(bad)  
  41b36f:	mov    es,WORD PTR [esi+edx*8+0x48]
  41b373:	or     al,BYTE PTR [edx]
  41b375:	sbb    al,0x5e
  41b377:	aad    0x4d
  41b379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b37a:	(bad)  
  41b37b:	pusha  
  41b37c:	adc    al,0xa3
  41b37e:	push   esi
  41b37f:	in     al,0x5e
  41b381:	rcr    bh,cl
  41b383:	and    eax,ebp
  41b385:	add    BYTE PTR [eax],ah
  41b387:	mov    edi,0xe156af59
  41b38c:	fwait
  41b38d:	or     BYTE PTR [eax+0x4a],al
  41b390:	bound  eax,QWORD PTR [edx]
  41b392:	enter  0x17ca,0xbf
  41b396:	mov    DWORD PTR [ecx-0x20802924],ebx
  41b39c:	les    ecx,FWORD PTR [esi]
  41b39e:	adc    bl,BYTE PTR [eax+0x1e124509]
  41b3a4:	popa   
  41b3a5:	cmp    eax,edi
  41b3a7:	xchg   ebp,eax
  41b3a8:	jne    0x41b380
  41b3aa:	inc    ebp
  41b3ab:	xchg   esp,eax
  41b3ac:	pop    ecx
  41b3ad:	cwde   
  41b3ae:	sti    
  41b3af:	xor    DWORD PTR [edx-0x58],esi
  41b3b2:	xlat   BYTE PTR ds:[ebx]
  41b3b3:	xchg   ecx,eax
  41b3b4:	imul   ecx,esi,0x1edb1f06
  41b3ba:	xchg   edi,eax
  41b3bb:	fistp  WORD PTR [ecx]
  41b3bd:	and    dh,bl
  41b3bf:	xchg   ecx,eax
  41b3c0:	dec    eax
  41b3c1:	lds    ecx,FWORD PTR [ecx-0x29b2709f]
  41b3c7:	adc    DWORD PTR [esi+edi*8],0x4caa75e
  41b3ce:	pop    ecx
  41b3cf:	mov    ch,0xe
  41b3d1:	out    0x90,al
  41b3d3:	or     eax,0x79ab3525
  41b3d8:	xor    cl,BYTE PTR [edx+0x79]
  41b3db:	inc    edx
  41b3dc:	jecxz  0x41b425
  41b3de:	stc    
  41b3df:	xchg   DWORD PTR [edi+0x516db013],edx
  41b3e5:	mov    al,0x24
  41b3e7:	sar    DWORD PTR [edx],1
  41b3e9:	inc    ebp
  41b3ea:	push   ebp
  41b3eb:	mov    ah,0x89
  41b3ed:	(bad)  [edx*1+0x58242d42]
  41b3f4:	push   edx
  41b3f5:	call   0xc7a4:0xcb4e1ff8
  41b3fc:	clc    
  41b3fd:	jmp    0xa1e:0xb2d3b951
  41b404:	jg     0x41b41d
  41b406:	mov    bh,0x68
  41b408:	leave  
  41b409:	les    eax,FWORD PTR [edi]
  41b40b:	ja     0x41b433
  41b40d:	push   esi
  41b40e:	xchg   DWORD PTR [ecx-0x34],esi
  41b411:	pop    ecx
  41b412:	and    ch,BYTE PTR [edx+0x1b]
  41b415:	pop    ebx
  41b416:	aaa    
  41b417:	pushf  
  41b418:	inc    ebp
  41b419:	mov    esp,0x6a7cda23
  41b41e:	adc    BYTE PTR [edx-0x3fb3371b],cl
  41b424:	pop    edx
  41b425:	nop
  41b426:	add    al,0xa2
  41b428:	and    BYTE PTR [edi+ebp*2],al
  41b42b:	mov    edx,0x164dfc25
  41b430:	sub    eax,0xfdefc832
  41b435:	fcom   QWORD PTR [eax]
  41b437:	cmp    al,0x6c
  41b439:	mov    ah,0xb
  41b43b:	(bad)  
  41b43c:	xor    ebp,esi
  41b43e:	das    
  41b43f:	push   ss
  41b440:	inc    esi
  41b441:	int    0x17
  41b443:	in     eax,dx
  41b444:	mov    dl,BYTE PTR [ebx]
  41b446:	clc    
  41b447:	ss je  0x41b4bf
  41b44a:	inc    ecx
  41b44b:	mov    edi,0x23955d1b
  41b450:	xchg   BYTE PTR [ebp+0x239131d4],bl
  41b456:	repz (bad) 
  41b459:	dec    eax
  41b45a:	ret    0x1b53
  41b45d:	shr    DWORD PTR [esp+edx*4-0x3e22de3f],1
  41b464:	sbb    eax,0x50f6d91e
  41b469:	sbb    esp,DWORD PTR [eax-0x25]
  41b46c:	cmp    DWORD PTR ds:0xd36b3dec,esi
  41b472:	xor    esi,DWORD PTR [esi-0x65]
  41b475:	data16 fimul WORD PTR [edi]
  41b478:	mov    ecx,0xec151f8b
  41b47d:	xchg   edi,eax
  41b47e:	clc    
  41b47f:	sbb    eax,0x15344e79
  41b484:	in     al,0x42
  41b486:	(bad)  
  41b487:	fadd   QWORD PTR [ecx+0x1b7213d9]
  41b48d:	mov    ds:0xcffa10a9,eax
  41b492:	idiv   BYTE PTR [ebx+0x53f4e88f]
  41b498:	xor    al,0x76
  41b49a:	adc    DWORD PTR [esi+0x35d16e3f],eax
  41b4a0:	adc    al,ah
  41b4a2:	xlat   BYTE PTR ds:[ebx]
  41b4a3:	ins    BYTE PTR es:[edi],dx
  41b4a4:	mov    ch,0x7b
  41b4a6:	movlps QWORD PTR [ebp+ecx*2-0x3e],xmm7
  41b4ab:	dec    eax
  41b4ac:	pop    es
  41b4ad:	mov    ecx,DWORD PTR [ebx+ebx*2-0x1af5beaf]
  41b4b4:	inc    ebx
  41b4b5:	dec    ebp
  41b4b6:	imul   ebp,DWORD PTR [edx+ebx*2+0x2abf9338],0xffffff81
  41b4be:	sub    esp,DWORD PTR ds:0xe32e9fa6
  41b4c4:	popf   
  41b4c5:	adc    DWORD PTR [eax+ebx*4],edi
  41b4c8:	fcom   DWORD PTR [esi]
  41b4ca:	pop    ebp
  41b4cb:	add    al,0x31
  41b4cd:	xor    DWORD PTR [edi],ecx
  41b4cf:	pop    ecx
  41b4d0:	mov    bh,0x12
  41b4d2:	or     BYTE PTR [edx+0x5739b92f],ah
  41b4d8:	lods   eax,DWORD PTR ds:[esi]
  41b4d9:	(bad)  
  41b4db:	into   
  41b4dc:	adc    BYTE PTR [ebx-0x1941059a],al
  41b4e2:	jge    0x41b4ba
  41b4e4:	lahf   
  41b4e5:	jnp    0x41b486
  41b4e7:	dec    edx
  41b4e8:	xor    dh,BYTE PTR [eax]
  41b4ea:	xchg   BYTE PTR [edi],dl
  41b4ec:	arpl   WORD PTR [ebx],ax
  41b4ee:	xor    DWORD PTR ds:0x33fd,ebx
  41b4f3:	adc    DWORD PTR [ebx-0x6b],ebx
  41b4f6:	(bad)  
  41b4f7:	not    BYTE PTR [edi-0x6d]
  41b4fa:	push   eax
  41b4fb:	mov    es,WORD PTR [edi]
  41b4fd:	loopne 0x41b515
  41b4ff:	(bad)  
  41b500:	dec    ebx
  41b501:	dec    ebp
  41b502:	sbb    eax,0xb2db08d
  41b507:	push   0x4a
  41b509:	pusha  
  41b50a:	jl     0x41b55e
  41b50c:	sbb    BYTE PTR [ecx-0x4b10ad7a],bl
  41b512:	cs adc al,0xb
  41b515:	jle    0x41b58f
  41b517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b518:	mov    ecx,ecx
  41b51a:	dec    edx
  41b51b:	fld    QWORD PTR [eax]
  41b51d:	and    DWORD PTR [ecx-0x33],0x3e
  41b521:	sbb    eax,0xa6ccc613
  41b526:	pop    es
  41b527:	pop    ds
  41b528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b529:	fsub   QWORD PTR ds:0x15647c23
  41b52f:	cmp    cx,WORD PTR [ebx-0x5c7b7615]
  41b536:	shl    BYTE PTR [esi-0x49e556e4],cl
  41b53c:	inc    esi
  41b53d:	or     ch,BYTE PTR [eax]
  41b53f:	scas   eax,DWORD PTR es:[edi]
  41b540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b541:	arpl   WORD PTR [edx-0x725be10f],dx
  41b547:	xchg   esp,eax
  41b548:	push   esp
  41b549:	xchg   edi,eax
  41b54a:	dec    edx
  41b54b:	popa   
  41b54c:	sbb    DWORD PTR [ecx+esi*2+0x6446c8ba],0xaf28900a
  41b557:	add    dh,bh
  41b559:	retf   0x2e80
  41b55c:	ins    DWORD PTR es:[edi],dx
  41b55d:	loop   0x41b4ee
  41b55f:	push   edi
  41b560:	popf   
  41b561:	sar    BYTE PTR [edi-0x18],1
  41b564:	les    ebp,FWORD PTR [ebx+eax*4-0x17]
  41b568:	inc    edx
  41b569:	in     eax,dx
  41b56a:	inc    edi
  41b56b:	and    cl,BYTE PTR [edi-0x61e8b345]
  41b571:	cli    
  41b572:	cmp    BYTE PTR [edx+0x1fe1c996],ah
  41b578:	cli    
  41b579:	shl    DWORD PTR ds:0x832f19f6,0xa0
  41b580:	jecxz  0x41b5f9
  41b582:	ss retf 
  41b584:	stos   DWORD PTR es:[edi],eax
  41b585:	scas   al,BYTE PTR es:[edi]
  41b586:	adc    BYTE PTR [ebx],ch
  41b588:	push   cs
  41b589:	(bad)  
  41b58a:	scas   eax,DWORD PTR es:[edi]
  41b58b:	inc    edi
  41b58c:	push   esi
  41b58d:	push   ss
  41b58e:	dec    ebx
  41b58f:	fcomp  DWORD PTR [edi+0x22]
  41b592:	mov    edi,0x74bec0ab
  41b597:	lahf   
  41b598:	loop   0x41b583
  41b59a:	aad    0x22
  41b59c:	mov    ds:0x62de99b4,eax
  41b5a1:	adc    BYTE PTR [ebp+0x15f889c3],cl
  41b5a7:	fst    QWORD PTR [edx]
  41b5a9:	mov    eax,ds:0xb0d982c0
  41b5ae:	cmp    bl,BYTE PTR [esi]
  41b5b0:	sub    esp,edx
  41b5b2:	sub    dl,BYTE PTR [esi-0x6ce16c7d]
  41b5b8:	stos   BYTE PTR es:[edi],al
  41b5b9:	fwait
  41b5ba:	mov    dl,0xc5
  41b5bc:	mov    cl,0x7f
  41b5be:	into   
  41b5bf:	fsubr  DWORD PTR [ecx-0x30e06595]
  41b5c5:	and    eax,0x116c6636
  41b5ca:	inc    ebp
  41b5cb:	out    0xb5,al
  41b5cd:	fadd   st(5),st
  41b5cf:	out    0x2c,eax
  41b5d1:	mov    al,0x51
  41b5d3:	icebp  
  41b5d4:	xchg   esp,eax
  41b5d5:	and    BYTE PTR ds:0x2dd76583,dl
  41b5db:	out    0x40,eax
  41b5dd:	int3   
  41b5de:	mov    DWORD PTR gs:[ebp+0x4bcd6722],ecx
  41b5e5:	jge    0x41b5c5
  41b5e7:	lods   al,BYTE PTR ds:[esi]
  41b5e8:	and    ebp,esp
  41b5ea:	cmp    esp,DWORD PTR [edi-0xe]
  41b5ed:	pop    ecx
  41b5ee:	xor    dh,BYTE PTR [ebx-0x20]
  41b5f1:	test   al,0x76
  41b5f3:	mov    DWORD PTR [ebp-0x1],ecx
  41b5f6:	ja     0x41b5ce
  41b5f8:	sbb    al,bh
  41b5fa:	dec    eax
  41b5fb:	cmp    BYTE PTR [edi],bl
  41b5fd:	or     DWORD PTR [eax],ebx
  41b5ff:	mov    al,ds:0xe570b5a4
  41b604:	inc    ebp
  41b605:	sub    BYTE PTR [ecx-0x34],ch
  41b608:	adc    ebp,edx
  41b60a:	std    
  41b60b:	retf   0xaab5
  41b60e:	jp     0x41b5f2
  41b610:	mov    ah,0xed
  41b612:	sbb    DWORD PTR [eax+0x3fb93d0],esi
  41b618:	mov    al,0xd8
  41b61a:	inc    ecx
  41b61b:	inc    ebp
  41b61c:	std    
  41b61d:	push   ecx
  41b61e:	dec    ecx
  41b61f:	cli    
  41b620:	push   cs
  41b621:	or     ecx,DWORD PTR [edi]
  41b623:	pop    ss
  41b624:	cld    
  41b625:	loop   0x41b655
  41b627:	and    BYTE PTR [ebp+0x3134e285],bh
  41b62d:	dec    eax
  41b62e:	clc    
  41b62f:	rcl    dh,1
  41b631:	mov    ds:0xfec784a2,eax
  41b636:	sbb    bh,dl
  41b638:	iret   
  41b639:	cmp    edi,ebp
  41b63b:	fstp   DWORD PTR [ebp+0x874913]
  41b641:	outs   dx,BYTE PTR ds:[esi]
  41b642:	pop    esp
  41b643:	mov    edx,DWORD PTR [ebp-0x50]
  41b646:	add    ecx,0x242ebcd
  41b64c:	xor    ecx,edx
  41b64e:	mov    DWORD PTR [ebp-0x50],ecx
  41b651:	mov    ecx,DWORD PTR [ebp+0x8]
  41b654:	mov    edx,DWORD PTR [ebp-0x4c]
  41b657:	add    ecx,edi
  41b659:	and    ecx,edx
  41b65b:	mov    DWORD PTR [ebp-0x4c],ecx
  41b65e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b661:	mov    edx,DWORD PTR [ebp-0x48]
  41b664:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b66b:	mov    DWORD PTR [ebp-0x48],ecx
  41b66e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b671:	mov    edx,0xfa5e1528
  41b676:	sub    edx,ecx
  41b678:	add    edx,DWORD PTR [ebp-0x44]
  41b67b:	mov    DWORD PTR [ebp-0x44],edx
  41b67e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b681:	xor    ecx,eax
  41b683:	add    ecx,esi
  41b685:	jne    0x414b6f
  41b68b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b68e:	xor    ecx,eax
  41b690:	mov    eax,DWORD PTR [ebp+0x10]
  41b693:	add    ecx,esi
  41b695:	mov    DWORD PTR [eax],ecx
  41b697:	pop    edi
  41b698:	pop    esi
  41b699:	pop    ebx
  41b69a:	leave  
  41b69b:	ret    0xc
  41b69e:	push   ebp
  41b69f:	mov    ebp,esp
  41b6a1:	sub    esp,0x78
  41b6a4:	not    DWORD PTR ds:0x4291f7
  41b6aa:	push   esi
  41b6ab:	sub    eax,ecx
  41b6ad:	push   edi
  41b6ae:	sub    eax,esi
  41b6b0:	mov    eax,ds:0x42830b
  41b6b5:	mov    DWORD PTR [ebp-0x24],eax
  41b6b8:	mov    eax,ds:0x42842b
  41b6bd:	inc    ecx
  41b6be:	mov    DWORD PTR [ebp-0x30],eax
  41b6c1:	or     DWORD PTR ds:0x42919f,edi
  41b6c7:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  41b6ce:	movzx  edi,BYTE PTR ds:0x42918f
  41b6d5:	adc    DWORD PTR ds:0x42914b,edi
  41b6db:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b6e2:	adc    DWORD PTR ds:0x42918f,edx
  41b6e8:	mov    eax,DWORD PTR [ebp-0x10]
  41b6eb:	add    DWORD PTR ds:0x4291f3,ecx
  41b6f1:	mov    ecx,DWORD PTR [ebp-0x10]
  41b6f4:	adc    DWORD PTR ds:0x42915f,0x287e
  41b6fe:	sub    eax,ecx
  41b700:	adc    esi,esi
  41b702:	mov    DWORD PTR [ebp-0x10],eax
  41b705:	xor    DWORD PTR [ebp-0x10],0xf89cb5a1
  41b70c:	xor    DWORD PTR ds:0x4291ab,0x51ed
  41b716:	mov    eax,DWORD PTR [ebp-0x18]
  41b719:	and    DWORD PTR ds:0x4291a3,0x0
  41b723:	mov    edi,DWORD PTR ds:0x4291a3
  41b729:	inc    edi
  41b72a:	mov    DWORD PTR ds:0x4291a3,edi
  41b730:	cmp    DWORD PTR ds:0x4291a3,0x1b
  41b737:	jle    0x41b760
  41b73d:	jmp    0x41b753
  41b742:	push   0x4280d6
  41b747:	push   DWORD PTR [ebp-0x18]
  41b74a:	push   DWORD PTR [ebp-0x14]
  41b74d:	call   DWORD PTR ds:0x42a86f
  41b753:	cmp    DWORD PTR ds:0x4291a3,0x12
  41b75a:	jb     0x41b723
  41b760:	mov    ecx,DWORD PTR [ebp-0x18]
  41b763:	sub    eax,ecx
  41b765:	mov    DWORD PTR [ebp-0x18],eax
  41b768:	or     DWORD PTR [ebp-0x18],0xf89f05a1
  41b76f:	mov    eax,DWORD PTR [ebp-0xc]
  41b772:	and    DWORD PTR ds:0x42919f,0x1b88
  41b77c:	mov    ecx,DWORD PTR [ebp-0xc]
  41b77f:	sub    eax,ecx
  41b781:	and    DWORD PTR ds:0x429173,0x0
  41b78b:	mov    ecx,DWORD PTR ds:0x429173
  41b791:	inc    ecx
  41b792:	mov    DWORD PTR ds:0x429173,ecx
  41b798:	cmp    DWORD PTR ds:0x429173,0x1b
  41b79f:	jg     0x41b7c2
  41b7a5:	jmp    0x41b7b5
  41b7aa:	push   0x3a78
  41b7af:	call   DWORD PTR ds:0x42a873
  41b7b5:	cmp    DWORD PTR ds:0x429173,0x15
  41b7bc:	jb     0x41b78b
  41b7c2:	mov    DWORD PTR [ebp-0xc],eax
  41b7c5:	xor    DWORD PTR ds:0x4291a7,0x3902
  41b7cf:	or     DWORD PTR [ebp-0xc],0xf89c85e1
  41b7d6:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7d9:	and    DWORD PTR ds:0x4291f7,0x5581
  41b7e3:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b7e6:	and    DWORD PTR ds:0x42914b,0x0
  41b7f0:	mov    esi,DWORD PTR ds:0x42914b
  41b7f6:	inc    esi
  41b7f7:	mov    DWORD PTR ds:0x42914b,esi
  41b7fd:	cmp    DWORD PTR ds:0x42914b,0xc
  41b804:	jg     0x41b848
  41b80a:	jmp    0x41b821
  41b80f:	push   0x428010
  41b814:	push   0x0
  41b816:	push   0x6059
  41b81b:	call   DWORD PTR ds:0x42a877
  41b821:	cmp    DWORD PTR ds:0x42914b,0xb
  41b828:	jne    0x41b83b
  41b82e:	mov    esi,DWORD PTR ds:0x42914b
  41b834:	inc    esi
  41b835:	mov    DWORD PTR ds:0x42914b,esi
  41b83b:	cmp    DWORD PTR ds:0x42914b,0x13
  41b842:	jb     0x41b7f0
  41b848:	sub    eax,ecx
  41b84a:	mov    DWORD PTR ds:0x4291e7,0x17
  41b854:	cmp    DWORD PTR ds:0x4291e7,0x0
  41b85b:	je     0x41b88b
  41b861:	cmp    DWORD PTR ds:0x4291e7,0x22
  41b868:	jbe    0x41b88b
  41b86e:	jmp    0x41b879
  41b873:	call   DWORD PTR ds:0x42a87b
  41b879:	mov    edi,DWORD PTR ds:0x4291e7
  41b87f:	dec    edi
  41b880:	mov    DWORD PTR ds:0x4291e7,edi
  41b886:	jmp    0x41b854
  41b88b:	mov    DWORD PTR [ebp-0x1c],eax
  41b88e:	or     DWORD PTR [ebp-0x1c],0xf89c8581
  41b895:	add    eax,eax
  41b897:	mov    eax,DWORD PTR [ebp-0x20]
  41b89a:	mov    ecx,DWORD PTR [ebp-0x20]
  41b89d:	sub    eax,ecx
  41b89f:	and    DWORD PTR ds:0x4291b3,0x0
  41b8a9:	jmp    0x41b8bb
  41b8ae:	mov    esi,DWORD PTR ds:0x4291b3
  41b8b4:	inc    esi
  41b8b5:	mov    DWORD PTR ds:0x4291b3,esi
  41b8bb:	cmp    DWORD PTR ds:0x4291b3,0x1e
  41b8c2:	jae    0x41b8ef
  41b8c8:	cmp    DWORD PTR ds:0x4291b3,0x28
  41b8cf:	jle    0x41b8ef
  41b8d5:	jmp    0x41b8ea
  41b8da:	push   0x4291c7
  41b8df:	push   0x428047
  41b8e4:	call   DWORD PTR ds:0x42a87f
  41b8ea:	jmp    0x41b8ae
  41b8ef:	mov    DWORD PTR [ebp-0x20],eax
  41b8f2:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8f5:	mov    ecx,DWORD PTR [ebp-0x20]
  41b8f8:	neg    edi
  41b8fa:	mov    esi,0x75108ac
  41b8ff:	xor    eax,esi
  41b901:	mov    edi,0x3272f3
  41b906:	add    eax,edi
  41b908:	or     eax,ecx
  41b90a:	mov    DWORD PTR [ebp-0x20],eax
  41b90d:	mov    eax,DWORD PTR [ebp-0x4]
  41b910:	mov    ecx,DWORD PTR [ebp-0x4]
  41b913:	sub    eax,ecx
  41b915:	mov    DWORD PTR [ebp-0x4],eax
  41b918:	or     DWORD PTR [ebp-0x4],0xf89c85be
  41b91f:	mov    eax,DWORD PTR [ebp-0xc]
  41b922:	xor    eax,esi
  41b924:	add    eax,edi
  41b926:	push   eax
  41b927:	mov    eax,DWORD PTR [ebp-0x10]
  41b92a:	xor    eax,esi
  41b92c:	add    eax,edi
  41b92e:	push   eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x4]
  41b932:	xor    eax,esi
  41b934:	add    eax,edi
  41b936:	push   eax
  41b937:	lea    eax,[ebp-0x78]
  41b93a:	push   eax
  41b93b:	push   DWORD PTR [ebp-0x2c]
  41b93e:	push   DWORD PTR [ebp-0x28]
  41b941:	call   0x411b80
  41b946:	test   eax,eax
  41b948:	je     0x41b976
  41b94e:	lea    eax,[ebp-0x78]
  41b951:	push   eax
  41b952:	mov    eax,DWORD PTR [ebp-0x28]
  41b955:	xor    eax,esi
  41b957:	add    eax,edi
  41b959:	push   eax
  41b95a:	mov    eax,DWORD PTR [ebp-0x24]
  41b95d:	add    eax,0xaa
  41b962:	push   eax
  41b963:	mov    eax,DWORD PTR [ebp-0x24]
  41b966:	mov    eax,DWORD PTR [eax+0x198]
  41b96c:	push   DWORD PTR [eax]
  41b96e:	call   0x4085e5
  41b973:	mov    DWORD PTR [ebp-0x14],eax
  41b976:	mov    ecx,DWORD PTR ds:0x428403
  41b97c:	lea    eax,[ebp+0x4]
  41b97f:	mov    DWORD PTR [ecx*4+0x4283fb],eax
  41b986:	inc    DWORD PTR ds:0x428403
  41b98c:	mov    eax,DWORD PTR [ebp-0x14]
  41b98f:	test   eax,eax
  41b991:	je     0x41b9f9
  41b997:	lea    eax,[ebp-0x8]
  41b99a:	mov    DWORD PTR [ebp-0x34],eax
  41b99d:	mov    eax,DWORD PTR [ebp-0x30]
  41b9a0:	mov    DWORD PTR [ebp-0x8],eax
  41b9a3:	mov    eax,DWORD PTR [ebp-0x8]
  41b9a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9a9:	sub    eax,ecx
  41b9ab:	mov    DWORD PTR [ebp-0x8],eax
  41b9ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41b9b1:	xor    ecx,esi
  41b9b3:	mov    eax,0xffcd8d0d
  41b9b8:	sub    eax,ecx
  41b9ba:	add    DWORD PTR [ebp-0x8],eax
  41b9bd:	mov    eax,DWORD PTR [ebp-0x8]
  41b9c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9c3:	mov    DWORD PTR [ecx+0x1],eax
  41b9c6:	mov    eax,DWORD PTR [ebp-0x14]
  41b9c9:	push   DWORD PTR [ebp-0x24]
  41b9cc:	mov    BYTE PTR [eax],0xe9
  41b9cf:	mov    eax,ds:0x428187
  41b9d4:	push   DWORD PTR [eax]
  41b9d6:	push   DWORD PTR ds:0x4283eb
  41b9dc:	push   DWORD PTR ds:0x42818f
  41b9e2:	push   DWORD PTR ds:0x4283cb
  41b9e8:	push   DWORD PTR ds:0x428f4f
  41b9ee:	push   DWORD PTR [ebp-0x28]
  41b9f1:	push   DWORD PTR [ebp-0x2c]
  41b9f4:	mov    eax,DWORD PTR [ebp-0x14]
  41b9f7:	call   eax
  41b9f9:	pop    edi
  41b9fa:	pop    esi
  41b9fb:	leave  
  41b9fc:	ret    
  41b9fd:	push   ebp
  41b9fe:	mov    ebp,esp
  41ba00:	sub    esp,0x1c
  41ba03:	adc    DWORD PTR ds:0x4291bf,0x12a2
  41ba0d:	mov    DWORD PTR [ebp-0x10],0xf89f85a1
  41ba14:	sub    DWORD PTR ds:0x4291b3,0x1e28
  41ba1e:	lea    eax,[ebp+0x14]
  41ba21:	movzx  edx,BYTE PTR ds:0x4291c7
  41ba28:	sbb    edx,DWORD PTR ds:0x4291ef
  41ba2e:	mov    DWORD PTR ds:0x4291c7,edx
  41ba34:	mov    DWORD PTR [ebp-0x4],eax
  41ba37:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  41ba3e:	and    DWORD PTR ds:0x4291a3,0x0
  41ba48:	jmp    0x41ba5a
  41ba4d:	mov    edx,DWORD PTR ds:0x4291a3
  41ba53:	inc    edx
  41ba54:	mov    DWORD PTR ds:0x4291a3,edx
  41ba5a:	cmp    DWORD PTR ds:0x4291a3,0x1c
  41ba61:	jae    0x41ba87
  41ba67:	cmp    DWORD PTR ds:0x4291a3,0x2a
  41ba6e:	jb     0x41ba87
  41ba74:	jmp    0x41ba82
  41ba79:	push   DWORD PTR [ebp-0x10]
  41ba7c:	call   DWORD PTR ds:0x42a883
  41ba82:	jmp    0x41ba4d
  41ba87:	lea    eax,[ebp-0xc]
  41ba8a:	add    DWORD PTR ds:0x4291d7,ecx
  41ba90:	mov    DWORD PTR [ebp-0x14],eax
  41ba93:	xor    ecx,eax
  41ba95:	mov    eax,DWORD PTR [ebp-0xc]
  41ba98:	mov    ecx,DWORD PTR ds:0x42921f
  41ba9e:	mov    edx,DWORD PTR ds:0x4298eb
  41baa4:	sub    edx,ecx
  41baa6:	xor    ecx,DWORD PTR [ecx+edx*1]
  41baa9:	mov    edx,DWORD PTR [ebp-0x14]
  41baac:	adc    ecx,0x3c0d
  41bab2:	mov    ecx,0x75108ac
  41bab7:	adc    DWORD PTR ds:0x4291eb,0xbc
  41bac1:	xor    eax,ecx
  41bac3:	or     DWORD PTR ds:0x4291eb,0x4291d3
  41bacd:	add    eax,0x3272f3
  41bad2:	xor    DWORD PTR ds:0x4291db,0x429193
  41badc:	mov    DWORD PTR [edx],eax
  41bade:	and    DWORD PTR ds:0x429157,0x0
  41bae8:	xor    edx,edx
  41baea:	add    edx,DWORD PTR ds:0x429157
  41baf0:	inc    edx
  41baf1:	mov    DWORD PTR ds:0x429157,edx
  41baf7:	cmp    DWORD PTR ds:0x429157,0x2c
  41bafe:	jge    0x41bb29
  41bb04:	jmp    0x41bb1c
  41bb09:	push   0x4291c7
  41bb0e:	push   0x4291db
  41bb13:	push   DWORD PTR [ebp-0x20]
  41bb16:	call   DWORD PTR ds:0x42a88b
  41bb1c:	cmp    DWORD PTR ds:0x429157,0x1d
  41bb23:	jb     0x41bae8
  41bb29:	mov    eax,ds:0x428183
  41bb2e:	mov    edx,DWORD PTR [ebp-0x4]
  41bb31:	mov    eax,DWORD PTR [eax]
  41bb33:	add    eax,DWORD PTR [edx]
  41bb35:	mov    DWORD PTR ds:0x4291e7,0x17
  41bb3f:	cmp    DWORD PTR ds:0x4291e7,0x0
  41bb46:	je     0x41bb7d
  41bb4c:	cmp    DWORD PTR ds:0x4291e7,0x22
  41bb53:	ja     0x41bb7d
  41bb59:	jmp    0x41bb69
  41bb5e:	push   0x40e7
  41bb63:	call   DWORD PTR ds:0x42a853
  41bb69:	xor    edx,edx
  41bb6b:	or     edx,DWORD PTR ds:0x4291e7
  41bb71:	dec    edx
  41bb72:	mov    DWORD PTR ds:0x4291e7,edx
  41bb78:	jmp    0x41bb3f
  41bb7d:	push   esi
  41bb7e:	sub    edx,0x5425
  41bb84:	mov    DWORD PTR [ebp-0x8],eax
  41bb87:	mov    edx,DWORD PTR [ebp+0x8]
  41bb8a:	mov    eax,ds:0x42830b
  41bb8f:	mov    esi,DWORD PTR ds:0x429ccf
  41bb95:	mov    esi,DWORD PTR [esi]
  41bb97:	adc    DWORD PTR ds:0x42919f,esi
  41bb9d:	mov    eax,DWORD PTR [eax+0x198]
  41bba3:	xor    edx,ecx
  41bba5:	and    DWORD PTR ds:0x4291cf,ecx
  41bbab:	mov    esi,0x3272f3
  41bbb0:	add    edx,esi
  41bbb2:	mov    DWORD PTR ds:0x4291c7,0x7ba3
  41bbbc:	cmp    DWORD PTR [eax],edx
  41bbbe:	mov    DWORD PTR ds:0x4291df,0x7d4d
  41bbc8:	je     0x41bbdb
  41bbce:	not    DWORD PTR ds:0x42917b
  41bbd4:	mov    eax,DWORD PTR [eax]
  41bbd6:	jmp    0x4207f9
  41bbdb:	mov    eax,DWORD PTR [ebp+0x18]
  41bbde:	xor    DWORD PTR ds:0x429183,0x42919f
  41bbe8:	xor    eax,ecx
  41bbea:	push   ebx
  41bbeb:	add    eax,esi
  41bbed:	xor    DWORD PTR ds:0x429197,edi
  41bbf3:	xor    edx,edx
  41bbf5:	sub    DWORD PTR ds:0x4291e3,edi
  41bbfb:	mov    ebx,0xfabdbed6
  41bc00:	add    eax,ebx
  41bc02:	mov    DWORD PTR ds:0x4291cb,0x2663
  41bc0c:	push   edi
  41bc0d:	adc    edx,0xffffffff
  41bc10:	and    DWORD PTR ds:0x4291a3,0x0
  41bc1a:	jmp    0x41bc2e
  41bc1f:	xor    edi,edi
  41bc21:	xor    edi,DWORD PTR ds:0x4291a3
  41bc27:	inc    edi
  41bc28:	mov    DWORD PTR ds:0x4291a3,edi
  41bc2e:	cmp    DWORD PTR ds:0x4291a3,0x1f
  41bc35:	jae    0x41bc68
  41bc3b:	cmp    DWORD PTR ds:0x4291a3,0x22
  41bc42:	jl     0x41bc68
  41bc48:	jmp    0x41bc63
  41bc4d:	push   DWORD PTR [ebp-0x24]
  41bc50:	push   0x42810e
  41bc55:	push   0x42812a
  41bc5a:	push   DWORD PTR [ebp-0x1c]
  41bc5d:	call   DWORD PTR ds:0x42a85b
  41bc63:	jmp    0x41bc1f
  41bc68:	mov    edi,0x8a29a13f
  41bc6d:	xor    eax,edi
  41bc6f:	sub    DWORD PTR ds:0x429197,0x48a0
  41bc79:	xor    edx,0x0
  41bc7c:	mov    DWORD PTR ds:0x42919f,0x3301
  41bc86:	cmp    eax,0x70941fe9
  41bc8b:	mov    DWORD PTR ds:0x429167,0x2e01
  41bc95:	jne    0x41bcc2
  41bc9b:	mov    DWORD PTR ds:0x4291a3,0x73ae
  41bca5:	cmp    edx,0xffffffff
  41bca8:	jne    0x41bcc2
  41bcae:	push   0xf89c85a2
  41bcb3:	mov    DWORD PTR ds:0x4291af,0x3feb
  41bcbd:	jmp    0x4207e6
  41bcc2:	mov    eax,DWORD PTR [ebp+0x18]
  41bcc5:	xor    eax,ecx
  41bcc7:	adc    DWORD PTR ds:0x42916b,0x4291af
  41bcd1:	add    eax,esi
  41bcd3:	sub    DWORD PTR ds:0x429163,0x429173
  41bcdd:	xor    edx,edx
  41bcdf:	add    eax,ebx
  41bce1:	mov    DWORD PTR ds:0x429163,0x4b51
  41bceb:	adc    edx,0xffffffff
  41bcee:	sub    DWORD PTR ds:0x4291af,0x6866
  41bcf8:	xor    eax,edi
  41bcfa:	or     DWORD PTR ds:0x42914f,0x4291db
  41bd04:	xor    edx,0x0
  41bd07:	mov    DWORD PTR ds:0x4291eb,0x1dc4
  41bd11:	cmp    eax,0x70941fe7
  41bd16:	mov    DWORD PTR ds:0x429153,0x3724
  41bd20:	jne    0x4207d3
  41bd26:	cmp    edx,0xffffffff
  41bd29:	mov    DWORD PTR ds:0x4291ef,0x5140
  41bd33:	jne    0x4207d3
  41bd39:	add    DWORD PTR ds:0x429193,0x7d28
  41bd43:	mov    eax,DWORD PTR [ebp+0x10]
  41bd46:	mov    DWORD PTR ds:0x42916b,0x1b
  41bd50:	cmp    DWORD PTR ds:0x42916b,0x0
  41bd57:	je     0x41bd93
  41bd5d:	cmp    DWORD PTR ds:0x42916b,0x1d
  41bd64:	jl     0x41bd93
  41bd6a:	jmp    0x41bd7f
  41bd6f:	push   0x2cfc
  41bd74:	push   0x400000
  41bd79:	call   DWORD PTR ds:0x42a85f
  41bd7f:	xor    edx,edx
  41bd81:	xor    edx,DWORD PTR ds:0x42916b
  41bd87:	dec    edx
  41bd88:	mov    DWORD PTR ds:0x42916b,edx
  41bd8e:	jmp    0x41bd50
  41bd93:	xor    eax,ecx
  41bd95:	add    eax,esi
  41bd97:	mov    DWORD PTR [ebp-0x18],eax
  41bd9a:	sub    DWORD PTR ds:0x42918f,0x3e4b
  41bda4:	mov    eax,DWORD PTR [ebp+0xc]
  41bda7:	and    DWORD PTR ds:0x429183,0x0
  41bdb1:	jmp    0x41bdc5
  41bdb6:	xor    edx,edx
  41bdb8:	add    edx,DWORD PTR ds:0x429183
  41bdbe:	inc    edx
  41bdbf:	mov    DWORD PTR ds:0x429183,edx
  41bdc5:	cmp    DWORD PTR ds:0x429183,0x19
  41bdcc:	jae    0x41bdf4
  41bdd2:	cmp    DWORD PTR ds:0x429183,0x28
  41bdd9:	jbe    0x41bdf4
  41bddf:	jmp    0x41bdef
  41bde4:	push   0x429193
  41bde9:	call   DWORD PTR ds:0x42a863
  41bdef:	jmp    0x41bdb6
  41bdf4:	mov    edx,DWORD PTR [ebp-0x8]
  41bdf7:	mov    DWORD PTR ds:0x4291ab,0x2654
  41be01:	xor    eax,ecx
  41be03:	add    eax,esi
  41be05:	adc    DWORD PTR ds:0x4291e7,0x4291db
  41be0f:	imul   eax,DWORD PTR [edx]
  41be12:	mov    edx,DWORD PTR [ebp+0x8]
  41be15:	or     DWORD PTR ds:0x42914b,0x4291d3
  41be1f:	xor    edx,ecx
  41be21:	add    edx,esi
  41be23:	mov    DWORD PTR ds:0x4291e7,0x151c
  41be2d:	cmp    edx,eax
  41be2f:	mov    eax,DWORD PTR [ebp-0x4]
  41be32:	je     0x41beca
  41be38:	mov    DWORD PTR ds:0x429163,0x16
  41be42:	cmp    DWORD PTR ds:0x429163,0x0
  41be49:	je     0x41be83
  41be4f:	cmp    DWORD PTR ds:0x429163,0x1a
  41be56:	ja     0x41be83
  41be5c:	jmp    0x41be71
  41be61:	push   0x4e27
  41be66:	push   0x4280a5
  41be6b:	call   DWORD PTR ds:0x42a867
  41be71:	mov    edx,DWORD PTR ds:0x429163
  41be77:	dec    edx
  41be78:	mov    DWORD PTR ds:0x429163,edx
  41be7e:	jmp    0x41be42
  41be83:	mov    edx,DWORD PTR [ebp-0x18]
  41be86:	or     DWORD PTR ds:0x42917f,0x4f4
  41be90:	add    DWORD PTR [eax],edx
  41be92:	and    eax,0x7343
  41be97:	mov    eax,DWORD PTR [ebp-0x4]
  41be9a:	mov    edx,DWORD PTR [ebp+0xc]
  41be9d:	xor    edx,ecx
  41be9f:	add    edx,esi
  41bea1:	imul   edx,DWORD PTR [eax]
  41bea4:	sbb    DWORD PTR ds:0x429183,0x4291b3
  41beae:	mov    DWORD PTR [eax],edx
  41beb0:	mov    eax,DWORD PTR [ebp-0x4]
  41beb3:	mov    DWORD PTR [ebp-0x1c],eax
  41beb6:	mov    eax,DWORD PTR [ebp+0x10]
  41beb9:	xor    eax,ecx
  41bebb:	mov    edx,0xffcd8d0d
  41bec0:	sub    edx,eax
  41bec2:	mov    eax,DWORD PTR [ebp-0x1c]
  41bec5:	jmp    0x41bee4
  41beca:	mov    edx,DWORD PTR [ebp+0x14]
  41becd:	xor    DWORD PTR [eax],edx
  41becf:	mov    eax,DWORD PTR [ebp-0x4]
  41bed2:	mov    DWORD PTR [ebp-0x1c],eax
  41bed5:	mov    eax,DWORD PTR [ebp+0x10]
  41bed8:	xor    eax,ecx
  41beda:	mov    edx,0xffcd8d0d
  41bedf:	sub    edx,eax
  41bee1:	mov    eax,DWORD PTR [ebp-0x1c]
  41bee4:	add    DWORD PTR [eax],edx
  41bee6:	mov    eax,DWORD PTR [ebp-0x4]
  41bee9:	mov    edx,DWORD PTR [ebp-0x8]
  41beec:	add    edx,DWORD PTR [eax]
  41beee:	mov    DWORD PTR [ebp-0x8],edx
  41bef1:	mov    eax,DWORD PTR [ebp+0xc]
  41bef4:	mov    edx,DWORD PTR [ebp+0xc]
  41bef7:	xor    edx,ecx
  41bef9:	xor    eax,ecx
  41befb:	lea    eax,[eax+edx*1+0x64e5e6]
  41bf02:	mov    edx,DWORD PTR [ebp+0xc]
  41bf05:	xor    edx,ecx
  41bf07:	add    edx,esi
  41bf09:	imul   eax,edx
  41bf0c:	mov    edx,DWORD PTR [ebp+0xc]
  41bf0f:	xor    edx,ecx
  41bf11:	sub    edx,eax
  41bf13:	mov    eax,DWORD PTR [ebp-0x4]
  41bf16:	add    edx,esi
  41bf18:	cmp    DWORD PTR [eax],edx
  41bf1a:	mov    eax,DWORD PTR [ebp-0x4]
  41bf1d:	jg     0x41bf3a
  41bf23:	mov    DWORD PTR [ebp-0x1c],eax
  41bf26:	mov    eax,DWORD PTR [ebp+0x10]
  41bf29:	xor    eax,ecx
  41bf2b:	mov    edx,0xffcd8d0d
  41bf30:	sub    edx,eax
  41bf32:	mov    eax,DWORD PTR [ebp-0x1c]
  41bf35:	jmp    0x41bf41
  41bf3a:	mov    edx,DWORD PTR [ebp+0x10]
  41bf3d:	xor    edx,ecx
  41bf3f:	add    edx,esi
  41bf41:	add    DWORD PTR [eax],edx
  41bf43:	mov    eax,DWORD PTR [ebp-0x8]
  41bf46:	mov    edx,DWORD PTR [ebp-0x10]
  41bf49:	mov    eax,DWORD PTR [eax]
  41bf4b:	xor    edx,ecx
  41bf4d:	add    edx,0x3272f2
  41bf53:	not    edx
  41bf55:	and    eax,edx
  41bf57:	mov    DWORD PTR [ebp-0x4],eax
  41bf5a:	movsx  eax,BYTE PTR [eax+0x1]
  41bf5e:	cdq    
  41bf5f:	add    eax,ebx
  41bf61:	adc    edx,0xffffffff
  41bf64:	jmp    0x41e327
  41bf69:	pop    esi
  41bf6a:	push   0x85807d90
  41bf6f:	xchg   esi,eax
  41bf70:	dec    eax
  41bf71:	add    cl,BYTE PTR [ebx+0x3]
  41bf74:	rol    DWORD PTR [esi+0x23],cl
  41bf77:	int3   
  41bf78:	pop    edi
  41bf79:	mov    ebx,0xd98382f9
  41bf7e:	pop    esp
  41bf7f:	add    DWORD PTR [ebx+0x38200b26],0x3a
  41bf86:	lods   al,BYTE PTR ds:[esi]
  41bf87:	push   eax
  41bf88:	js     0x41bfe2
  41bf8a:	(bad)  
  41bf8b:	dec    eax
  41bf8c:	mov    esp,0x11620ccb
  41bf91:	(bad)  
  41bf92:	xor    dl,cl
  41bf94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf95:	dec    edx
  41bf96:	cmp    eax,0xe8919cbc
  41bf9b:	xlat   BYTE PTR ds:[ebx]
  41bf9c:	push   es
  41bf9d:	in     al,0xcb
  41bf9f:	xchg   ebp,eax
  41bfa0:	call   0xb62ed7b4
  41bfa5:	addr16 jmp 0x22a49779
  41bfab:	mov    dh,0x8f
  41bfad:	cmp    BYTE PTR [ebx+0x694a5b0b],0xfe
  41bfb4:	das    
  41bfb5:	push   ebp
  41bfb6:	shr    ah,1
  41bfb8:	lock pop edi
  41bfba:	ds aaa 
  41bfbc:	dec    edx
  41bfbd:	hlt    
  41bfbe:	pop    edx
  41bfbf:	das    
  41bfc0:	jmp    0x10ced6b5
  41bfc5:	add    al,0xc1
  41bfc7:	(bad)  
  41bfc8:	loope  0x41bfa7
  41bfca:	shl    DWORD PTR ds:[ebp-0x34f84966],1
  41bfd1:	scas   eax,DWORD PTR es:[edi]
  41bfd2:	and    esp,edi
  41bfd4:	push   0x6cf315ac
  41bfd9:	stos   DWORD PTR es:[edi],eax
  41bfda:	xchg   esp,eax
  41bfdb:	push   ecx
  41bfdc:	pop    ebp
  41bfdd:	pop    esi
  41bfde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfdf:	or     ch,BYTE PTR [ebx+edx*2]
  41bfe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfe3:	mov    ecx,0x621eadd0
  41bfe8:	jle    0x41c00a
  41bfea:	adc    dl,BYTE PTR ds:0xb260de1a
  41bff0:	mov    edx,0xcf93921
  41bff5:	enter  0xa0c,0x58
  41bff9:	lock pop ds
  41bffb:	jbe    0x41bfdd
  41bffd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bffe:	jmp    0xc74e0de1
  41c003:	sbb    edx,edi
  41c005:	mov    BYTE PTR [ecx+0xf1c9126],ch
  41c00b:	add    DWORD PTR [edx-0x6],ecx
  41c00e:	cmp    eax,DWORD PTR ds:0xf76e7464
  41c014:	mov    al,0xbf
  41c016:	and    BYTE PTR [ebx-0x51],bh
  41c019:	dec    ecx
  41c01a:	enter  0xcf5e,0x2f
  41c01e:	mov    ch,0x46
  41c020:	xor    al,0xab
  41c022:	sub    cl,BYTE PTR [edi+eiz*4-0x6b]
  41c026:	fdivr  DWORD PTR [edi-0x71]
  41c029:	and    al,0xa9
  41c02b:	imul   esi,DWORD PTR [ebx+eax*8-0x435eb9c7],0xbd764348
  41c036:	push   ebx
  41c037:	cwde   
  41c038:	fdiv   QWORD PTR [ecx+ebp*2]
  41c03b:	jmp    0xe0e0a4fd
  41c040:	pop    ds
  41c041:	push   ss
  41c042:	pop    esp
  41c043:	int    0x24
  41c045:	xor    dh,al
  41c047:	cmp    bl,al
  41c049:	dec    ebx
  41c04a:	scas   eax,DWORD PTR es:[edi]
  41c04b:	mov    esi,0xb3392a09
  41c050:	inc    ecx
  41c051:	scas   al,BYTE PTR es:[edi]
  41c052:	mov    ch,0xb
  41c054:	pop    edi
  41c055:	in     al,0x4
  41c057:	xlat   BYTE PTR ds:[ebx]
  41c058:	xor    DWORD PTR [edx-0x53],0x3c
  41c05c:	out    0x15,eax
  41c05e:	xchg   ecx,eax
  41c05f:	js     0x41c04e
  41c061:	sbb    ecx,edi
  41c063:	cmc    
  41c064:	pusha  
  41c065:	push   ebp
  41c066:	ins    DWORD PTR es:[edi],dx
  41c067:	mov    ds:0x5dfe9634,eax
  41c06c:	xchg   esp,eax
  41c06d:	jp     0x41c02a
  41c06f:	int3   
  41c070:	es mov esi,0x4953a5d1
  41c076:	ficomp DWORD PTR [eax]
  41c078:	rcr    BYTE PTR [ebx],0x23
  41c07b:	js     0x41c084
  41c07d:	pop    es
  41c07e:	add    ah,BYTE PTR [edi+0x77]
  41c081:	sar    DWORD PTR ds:0x3e757e7d,1
  41c087:	hlt    
  41c088:	sub    ah,ah
  41c08a:	int3   
  41c08b:	or     eax,0xeef3256a
  41c090:	mov    edx,0x6d66462d
  41c095:	ror    BYTE PTR ds:0x4c653b6e,1
  41c09b:	(bad)  
  41c09d:	add    ch,dl
  41c09f:	cmp    eax,0xa28f5296
  41c0a5:	cmp    al,0x4
  41c0a7:	lods   al,BYTE PTR gs:[si]
  41c0aa:	vpmulhw ymm1,ymm7,YMMWORD PTR [esp+edx*8-0x1b45fff9]
  41c0b3:	sbb    al,0x49
  41c0b5:	jge    0x41c08b
  41c0b7:	push   0x34b502fb
  41c0bc:	lea    esp,[edi]
  41c0be:	sub    DWORD PTR [ebx+0x172621c2],ecx
  41c0c4:	push   esp
  41c0c5:	or     BYTE PTR [edx],dh
  41c0c7:	push   es
  41c0c8:	mov    esi,esi
  41c0ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0cb:	mov    bh,0x7a
  41c0cd:	inc    ecx
  41c0ce:	mov    eax,DWORD PTR [edi+0xc]
  41c0d1:	fistp  DWORD PTR [eax-0x8cf6ce5]
  41c0d7:	call   0x26e10ce1
  41c0dc:	or     eax,0x770717ec
  41c0e1:	ficom  DWORD PTR [esi+0x5a]
  41c0e4:	sbb    BYTE PTR [ebx],dl
  41c0e6:	push   esp
  41c0e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0e8:	push   esi
  41c0e9:	(bad)
  41c0ec:	jb     0x41c0ea
  41c0ee:	clc    
  41c0ef:	mov    al,0x14
  41c0f1:	jle    0x41c0d9
  41c0f3:	jmp    0xa0bc:0x33036925
  41c0fa:	inc    edi
  41c0fb:	pop    esi
  41c0fc:	(bad)  
  41c0fe:	xor    dl,BYTE PTR [ebx-0x58]
  41c101:	or     cl,ah
  41c103:	in     al,dx
  41c104:	mov    dh,0xa0
  41c106:	mov    ds:0xaadeb90e,eax
  41c10b:	test   BYTE PTR [eax-0x71],0x75
  41c10f:	repz aas 
  41c111:	xor    al,0xa7
  41c113:	mov    ah,0x1c
  41c115:	test   DWORD PTR [edi+0x7297e025],esp
  41c11b:	sbb    al,BYTE PTR [edi+eax*4-0x1d]
  41c11f:	dec    esp
  41c120:	pushf  
  41c121:	jl     0x41c0c0
  41c123:	jno    0x41c151
  41c125:	aad    0xf6
  41c127:	jae    0x41c0d5
  41c129:	sbb    al,BYTE PTR [edi+eiz*4]
  41c12c:	test   eax,0x337260d4
  41c131:	pop    ss
  41c132:	push   edi
  41c133:	sbb    esp,DWORD PTR [edx+0x58]
  41c136:	pop    es
  41c137:	stos   DWORD PTR es:[edi],eax
  41c138:	shl    eax,cl
  41c13a:	test   al,0x39
  41c13c:	mov    dh,0x3f
  41c13e:	in     eax,dx
  41c13f:	jae    0x41c1a7
  41c141:	xchg   edi,eax
  41c142:	mov    al,ds:0x5cb34199
  41c147:	cmp    BYTE PTR [edi+ebp*4],bl
  41c14a:	into   
  41c14b:	(bad)  
  41c14d:	mov    bl,0x79
  41c14f:	lds    esi,FWORD PTR [ebx+0x50]
  41c152:	mov    esp,0x3f52f29e
  41c157:	int3   
  41c158:	loop   0x41c144
  41c15a:	cli    
  41c15b:	cdq    
  41c15c:	sar    dl,cl
  41c15e:	pop    ds
  41c15f:	adc    eax,0x346ee32b
  41c164:	mov    ebp,0x6e39b9d2
  41c169:	popa   
  41c16a:	push   ebx
  41c16b:	mov    dh,0x5
  41c16d:	add    edx,ebx
  41c16f:	imul   esi,DWORD PTR [edx],0x34
  41c172:	pop    si
  41c174:	imul   BYTE PTR [edx]
  41c176:	jbe    0x41c18f
  41c178:	je     0x41c177
  41c17a:	cmp    ebp,DWORD PTR [edi-0x158f15fd]
  41c180:	dec    esp
  41c181:	mov    al,ds:0xf1bcd31a
  41c186:	in     al,dx
  41c187:	out    dx,eax
  41c188:	cmp    eax,0x1c06a907
  41c18d:	dec    esp
  41c18e:	inc    esp
  41c18f:	cmp    BYTE PTR [ecx-0x5c7cdd2f],al
  41c195:	loopne 0x41c1d6
  41c197:	nop
  41c198:	inc    edx
  41c199:	(bad)  
  41c19a:	imul   edx,edx,0x17a1d9c9
  41c1a0:	jns    0x41c1f4
  41c1a2:	pop    esi
  41c1a3:	scas   eax,DWORD PTR es:[edi]
  41c1a4:	dec    esp
  41c1a5:	mov    BYTE PTR [edi+esi*8+0xc],ch
  41c1a9:	cmp    DWORD PTR [edx+0x3d],eax
  41c1ac:	inc    edi
  41c1ad:	stos   DWORD PTR es:[edi],eax
  41c1ae:	mov    esi,DWORD PTR [ebx-0x5bf52583]
  41c1b4:	aaa    
  41c1b5:	test   eax,0xa3b9dfa6
  41c1ba:	jl     0x41c1c7
  41c1bc:	bound  edi,QWORD PTR ds:0xec9fff04
  41c1c2:	in     eax,0x3c
  41c1c4:	(bad)  [eax+edi*2-0x52]
  41c1c8:	stos   BYTE PTR es:[edi],al
  41c1c9:	sub    al,0x63
  41c1cb:	sub    DWORD PTR [edi],ebx
  41c1cd:	ss sub dh,bh
  41c1d0:	add    BYTE PTR [eax-0x27],bl
  41c1d3:	push   ss
  41c1d4:	add    al,0x4d
  41c1d6:	inc    edx
  41c1d7:	mov    dh,BYTE PTR [eax-0x61d30a42]
  41c1dd:	lods   al,BYTE PTR ds:[esi]
  41c1de:	cmp    BYTE PTR [ebx+ebp*8],dl
  41c1e1:	xor    BYTE PTR [esi+0x14],dl
  41c1e4:	fwait
  41c1e5:	add    al,BYTE PTR [edi-0x1d15ab89]
  41c1eb:	hlt    
  41c1ec:	popf   
  41c1ed:	in     al,0xc9
  41c1ef:	clc    
  41c1f0:	pop    edi
  41c1f1:	fiadd  WORD PTR [eax]
  41c1f3:	xchg   esi,eax
  41c1f4:	inc    edx
  41c1f5:	push   eax
  41c1f6:	sbb    al,0x7
  41c1f8:	pop    esi
  41c1f9:	add    bh,BYTE PTR [ebp-0x19c2ad8d]
  41c1ff:	pop    ebx
  41c200:	mov    ecx,ebx
  41c202:	cwde   
  41c203:	xor    BYTE PTR [ebx],cl
  41c205:	and    cl,BYTE PTR [eax]
  41c207:	push   DWORD PTR [esi+0x7fa565b4]
  41c20d:	dec    edi
  41c20e:	dec    esi
  41c20f:	and    al,0x13
  41c211:	pop    ecx
  41c212:	jmp    0xe1e59474
  41c217:	push   0xffffffea
  41c219:	push   ebp
  41c21a:	aaa    
  41c21b:	jmp    0x41c24e
  41c21d:	or     al,0xf9
  41c21f:	pop    es
  41c220:	fldenv [edx]
  41c222:	cli    
  41c223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c224:	in     al,dx
  41c225:	das    
  41c226:	call   0xa7e9f808
  41c22b:	scas   al,BYTE PTR es:[edi]
  41c22c:	ret    
  41c22d:	lods   eax,DWORD PTR ds:[esi]
  41c22e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c22f:	pushf  
  41c230:	adc    edx,eax
  41c232:	and    DWORD PTR [ecx],ebx
  41c234:	adc    cl,BYTE PTR [eax]
  41c236:	retf   
  41c237:	fbstp  TBYTE PTR [ecx+0x8]
  41c23a:	jno    0x41c23a
  41c23c:	(bad)  
  41c23f:	pop    edx
  41c240:	lods   al,BYTE PTR ds:[esi]
  41c241:	repz jns 0x41c23f
  41c244:	lods   al,BYTE PTR ds:[esi]
  41c245:	xor    eax,0x61529983
  41c24a:	push   cs
  41c24b:	outs   dx,DWORD PTR ds:[esi]
  41c24c:	iret   
  41c24d:	pop    eax
  41c24e:	(bad)  
  41c24f:	xor    DWORD PTR [edx-0x54364f77],ecx
  41c255:	push   esp
  41c256:	and    eax,DWORD PTR [edi-0xc]
  41c259:	outs   dx,DWORD PTR ds:[esi]
  41c25a:	sub    eax,0xef09f5d2
  41c25f:	or     dl,al
  41c261:	sub    bh,cl
  41c263:	fisttp DWORD PTR [edi+ecx*1-0x5]
  41c267:	retf   0x8cd
  41c26a:	cmp    dh,BYTE PTR [edi+0x2d]
  41c26d:	fimul  DWORD PTR [eax]
  41c26f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c270:	hlt    
  41c271:	aas    
  41c272:	mov    cl,0x43
  41c274:	and    edx,ebp
  41c276:	pop    ds
  41c277:	data16 aaa 
  41c279:	out    dx,eax
  41c27a:	shr    bh,0xd9
  41c27d:	jmp    0x438f:0x15198610
  41c284:	pop    ebx
  41c285:	lea    edx,[esp+eiz*8-0x79b6dc9c]
  41c28c:	mov    dh,0x2
  41c28e:	scas   eax,DWORD PTR es:[edi]
  41c28f:	test   al,0x3f
  41c291:	out    dx,eax
  41c292:	add    al,0x2a
  41c294:	cmp    al,0x1d
  41c296:	dec    DWORD PTR [ebp+0x4b590168]
  41c29c:	mov    eax,ds:0xafad4a85
  41c2a1:	cmp    al,ah
  41c2a3:	push   edi
  41c2a4:	jne    0x41c31c
  41c2a6:	and    bl,BYTE PTR [ecx]
  41c2a8:	ficomp DWORD PTR [eax+0x34112ae8]
  41c2ae:	lods   eax,DWORD PTR ds:[esi]
  41c2af:	es ret 0xaedc
  41c2b3:	in     eax,dx
  41c2b4:	xor    BYTE PTR ds:0xe234086d,0xfa
  41c2bb:	repnz leave 
  41c2bd:	popa   
  41c2be:	mov    dl,0xd8
  41c2c0:	je     0x41c2d7
  41c2c2:	dec    eax
  41c2c3:	ja     0x41c2d4
  41c2c5:	xor    al,0x2e
  41c2c7:	jmp    DWORD PTR [edx-0x5a]
  41c2ca:	xor    DWORD PTR [ecx-0x52],ecx
  41c2cd:	or     ecx,edx
  41c2cf:	repnz add BYTE PTR [eax+eax*8],cl
  41c2d3:	bound  edi,QWORD PTR [edi+0x5a510717]
  41c2d9:	imul   edx,ebx,0x1f2018f8
  41c2df:	xor    bh,BYTE PTR [ebx+ebx*4-0x5d688720]
  41c2e6:	adc    bh,ch
  41c2e8:	fwait
  41c2e9:	popf   
  41c2ea:	push   esp
  41c2eb:	cmp    BYTE PTR [eax+0x637ae999],dh
  41c2f1:	cmp    esi,DWORD PTR [ecx+0xa221f16]
  41c2f7:	je     0x41c324
  41c2f9:	sbb    edx,0x8e6f823b
  41c2ff:	xor    ah,dl
  41c301:	ja     0x41c2f8
  41c303:	in     eax,dx
  41c304:	mov    DWORD PTR [eax+0xcf8d1b8],esi
  41c30a:	or     al,0x3a
  41c30c:	jmp    0x584f:0x97712dd
  41c313:	mov    dh,0x90
  41c315:	mov    esi,0x91df3451
  41c31a:	jge    0x41c312
  41c31c:	push   ebp
  41c31d:	pop    es
  41c31e:	lods   eax,DWORD PTR ds:[esi]
  41c31f:	xchg   esp,eax
  41c320:	mov    edx,0xa575fcc3
  41c325:	sub    DWORD PTR [ecx+0x18],ebx
  41c328:	jns    0x41c389
  41c32a:	jbe    0x41c2da
  41c32c:	dec    edi
  41c32d:	adc    ebx,eax
  41c32f:	call   0x14c2:0xb9212ce7
  41c336:	outs   dx,BYTE PTR ds:[esi]
  41c337:	ret    0xf7a0
  41c33a:	lods   eax,DWORD PTR ds:[esi]
  41c33b:	pop    ebp
  41c33c:	mov    ebx,0x965cd5a7
  41c341:	mov    ecx,0x2ba74565
  41c346:	xor    bl,BYTE PTR [ebx]
  41c348:	repnz inc edx
  41c34a:	xchg   esp,eax
  41c34b:	ds in  al,dx
  41c34d:	cmp    dh,ah
  41c34f:	and    BYTE PTR [edi],dl
  41c351:	sbb    al,0xd5
  41c353:	add    eax,edx
  41c355:	pop    esp
  41c356:	xor    al,0xf7
  41c358:	push   ecx
  41c359:	stc    
  41c35a:	loope  0x41c3a9
  41c35c:	in     eax,dx
  41c35d:	cwde   
  41c35e:	adc    eax,0xc2f9f010
  41c363:	lods   al,BYTE PTR ds:[esi]
  41c364:	add    esi,esi
  41c366:	aad    0xd4
  41c368:	scas   eax,DWORD PTR es:[edi]
  41c369:	iret   
  41c36a:	fisubr DWORD PTR [ebx+ebp*1-0x7b519fa]
  41c371:	mov    ds:0x7ede85a3,eax
  41c376:	(bad)  
  41c377:	fst    QWORD PTR [edi]
  41c379:	mul    DWORD PTR [ebx-0x335622c2]
  41c37f:	xor    DWORD PTR [eax],esp
  41c381:	fwait
  41c382:	arpl   WORD PTR [edx],di
  41c384:	push   ebp
  41c385:	stc    
  41c386:	dec    ebp
  41c387:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c388:	mov    ds:0x5557bd35,eax
  41c38d:	loop   0x41c31f
  41c38f:	sub    DWORD PTR [eax-0x40],ecx
  41c392:	lods   eax,DWORD PTR ds:[esi]
  41c393:	mov    esi,0x855d121f
  41c398:	pop    eax
  41c399:	mov    ds:0xee9f2568,al
  41c39e:	pop    es
  41c39f:	and    DWORD PTR [edi-0x17],0x3fdd2ba8
  41c3a6:	mov    ebp,0x20b3ceb7
  41c3ab:	pusha  
  41c3ac:	aaa    
  41c3ad:	xor    BYTE PTR ds:0x98e00af4,dl
  41c3b3:	fs int3 
  41c3b5:	push   ds
  41c3b6:	pushf  
  41c3b7:	test   eax,0x35a08a6d
  41c3bc:	cmp    dl,BYTE PTR [ebx]
  41c3be:	add    BYTE PTR [eax+0x2b2b9177],0xa9
  41c3c5:	popa   
  41c3c6:	data16 scas al,BYTE PTR es:[edi]
  41c3c8:	push   ss
  41c3c9:	sub    edi,DWORD PTR [ebp+0x7a]
  41c3cc:	and    al,0x7c
  41c3ce:	push   ds
  41c3cf:	mov    ebx,0x10bbeea2
  41c3d4:	sbb    DWORD PTR [ebx+edi*8],esp
  41c3d7:	stc    
  41c3d8:	jmp    0x41c35b
  41c3da:	(bad)  
  41c3dc:	mov    dl,0x88
  41c3de:	int    0x8
  41c3e0:	fiadd  DWORD PTR [ebx+eiz*4]
  41c3e3:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41c3e5:	gs lahf 
  41c3e7:	jl     0x41c3b6
  41c3e9:	sbb    BYTE PTR [edx-0x73],ch
  41c3ec:	aaa    
  41c3ed:	aam    0xb1
  41c3ef:	jle    0x41c40a
  41c3f1:	setle  dh
  41c3f4:	aam    0xda
  41c3f6:	push   es
  41c3f7:	adc    dh,BYTE PTR es:[ebx-0x58]
  41c3fb:	mov    DWORD PTR [ebp-0x586065b],ebx
  41c401:	fnsave [edi]
  41c403:	dec    edx
  41c404:	pop    edi
  41c405:	and    al,0xf9
  41c407:	sbb    BYTE PTR [edx],0xb0
  41c40a:	inc    esp
  41c40b:	fwait
  41c40c:	jmp    0xdecb:0xf1306ede
  41c413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c414:	sub    DWORD PTR [esi-0x6c],eax
  41c417:	fcomip st,st(7)
  41c419:	xor    ebp,DWORD PTR [ebx+edi*4]
  41c41c:	icebp  
  41c41d:	adc    eax,0x3a2ee060
  41c422:	or     eax,0x86366542
  41c427:	mov    ch,0xa3
  41c429:	inc    ecx
  41c42a:	jecxz  0x41c411
  41c42c:	(bad)  
  41c42f:	mov    dh,BYTE PTR [ebp+0x22]
  41c432:	jecxz  0x41c412
  41c434:	sub    eax,0xa66f6b2c
  41c439:	or     dh,0xea
  41c43c:	loopne 0x41c44a
  41c43e:	jne    0x41c490
  41c440:	sbb    BYTE PTR [ebp-0x41c40c16],dh
  41c446:	jle    0x41c430
  41c448:	sbb    DWORD PTR [edi+edx*8+0x36a1e262],ebx
  41c44f:	leave  
  41c450:	sar    DWORD PTR [eax],0xfb
  41c453:	cli    
  41c454:	cmp    al,0xe6
  41c456:	xchg   edx,eax
  41c457:	lods   al,BYTE PTR ds:[esi]
  41c458:	inc    eax
  41c459:	xchg   ebp,eax
  41c45a:	sub    DWORD PTR [esi-0x1f],ecx
  41c45d:	jmp    0x67b423ea
  41c462:	mov    DWORD PTR [ecx-0x68d130fe],edi
  41c468:	arpl   WORD PTR [ebp+0x4c],di
  41c46b:	mov    ds:0x436a9504,al
  41c470:	retf   
  41c471:	add    esi,DWORD PTR [ecx]
  41c473:	fldenv [edi+0x2389e955]
  41c479:	aad    0x6f
  41c47b:	lds    ebp,FWORD PTR [edi-0x58]
  41c47e:	fucom  st(6)
  41c480:	cmp    al,0x6b
  41c482:	mov    edi,0xaedcec93
  41c487:	inc    eax
  41c488:	or     ebx,DWORD PTR [ebp+0x9]
  41c48b:	cmp    eax,0x77043000
  41c490:	adc    eax,0xf857aa9a
  41c495:	fwait
  41c496:	cli    
  41c497:	mov    cs,ecx
  41c499:	sbb    al,0xe5
  41c49b:	cli    
  41c49c:	ret    
  41c49d:	lahf   
  41c49e:	push   eax
  41c49f:	(bad)  
  41c4a1:	mov    eax,ds:0xaabe124d
  41c4a6:	ds sub eax,0x967dd647
  41c4ac:	das    
  41c4ad:	push   ds
  41c4ae:	xchg   edi,eax
  41c4af:	add    eax,0x411459d8
  41c4b4:	jmp    0x41c4ef
  41c4b6:	mov    eax,0xe1c019d6
  41c4bb:	dec    esi
  41c4bc:	inc    eax
  41c4bd:	inc    eax
  41c4be:	jecxz  0x41c52e
  41c4c0:	and    bl,dh
  41c4c2:	xlat   BYTE PTR ds:[ebx]
  41c4c3:	addr16 inc edi
  41c4c5:	mov    edi,0xa1c5eab7
  41c4ca:	rol    BYTE PTR [ecx-0x56e16b2],0x8a
  41c4d1:	loopne 0x41c4c0
  41c4d3:	bound  edx,QWORD PTR [esi-0x17]
  41c4d6:	xchg   DWORD PTR ds:0x33c0f846,esi
  41c4dc:	jmp    0x41c4dd
  41c4de:	mov    DWORD PTR [ebx],0x723a56d6
  41c4e4:	js     0x41c4ca
  41c4e6:	jo     0x41c531
  41c4e8:	sbb    BYTE PTR [ecx+0x19a33fdb],ch
  41c4ee:	mov    DWORD PTR [esi-0x45],eax
  41c4f1:	ret    
  41c4f2:	dec    ebp
  41c4f3:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41c4f5:	inc    esp
  41c4f6:	fist   WORD PTR [esi]
  41c4f8:	jl     0x41c4d9
  41c4fa:	push   ecx
  41c4fb:	(bad)  
  41c4fc:	es mov dh,0x29
  41c4ff:	out    0xa1,al
  41c501:	mov    BYTE PTR [edx+esi*2+0x25c9a429],ch
  41c508:	aam    0x22
  41c50a:	(bad)  
  41c50b:	sub    ebx,DWORD PTR [edi-0x45]
  41c50e:	loope  0x41c4ba
  41c510:	or     BYTE PTR [ebx+0x5e],0x71
  41c514:	repnz xor al,0x62
  41c517:	bound  esp,QWORD PTR [esi]
  41c519:	pop    ebp
  41c51a:	btc    DWORD PTR [eax],edi
  41c51d:	in     eax,0x8e
  41c51f:	jge    0x41c599
  41c521:	sub    eax,0x574375f9
  41c526:	fst    DWORD PTR [eax]
  41c528:	je     0x41c505
  41c52a:	sbb    al,0x4a
  41c52c:	jbe    0x41c52f
  41c52e:	in     eax,0x9b
  41c530:	fwait
  41c531:	and    BYTE PTR [eax+0x51],ah
  41c534:	gs out 0x6b,al
  41c537:	sbb    al,0x5a
  41c539:	pop    ebp
  41c53a:	sbb    eax,0x6008d4e7
  41c53f:	sub    DWORD PTR [ebx],eax
  41c541:	addr16 sti 
  41c543:	adc    ch,BYTE PTR [edi+0x60]
  41c546:	orps   xmm0,XMMWORD PTR [esi-0x55]
  41c54a:	adc    DWORD PTR [ebp+0x3a],edx
  41c54d:	out    dx,al
  41c54e:	icebp  
  41c54f:	push   esi
  41c550:	sbb    eax,0xce5b37e5
  41c555:	fld    DWORD PTR [esi+0x43d2e68a]
  41c55b:	(bad)  
  41c55d:	adc    DWORD PTR [ebx+edx*2-0x5ccf971c],edx
  41c564:	out    dx,al
  41c565:	xchg   esp,eax
  41c566:	aam    0x15
  41c568:	push   edi
  41c569:	imul   ebp,DWORD PTR [esi],0xe3749420
  41c56f:	clc    
  41c570:	xchg   edi,eax
  41c571:	xchg   esp,ebp
  41c573:	jbe    0x41c59e
  41c575:	or     ch,BYTE PTR ds:0x756fa84a
  41c57b:	dec    esp
  41c57c:	call   0x5e3:0x6af4015b
  41c583:	clc    
  41c584:	repnz pop eax
  41c586:	(bad)  [edi]
  41c588:	xor    eax,0xd592d51f
  41c58d:	push   ecx
  41c58e:	arpl   WORD PTR [eax+ebx*1-0x642c637d],sp
  41c595:	retf   
  41c596:	or     DWORD PTR [ebx],0xffffff83
  41c599:	gs xchg edx,eax
  41c59b:	sahf   
  41c59c:	adc    ch,dh
  41c59e:	xchg   edx,eax
  41c59f:	push   ebx
  41c5a0:	out    0xd1,al
  41c5a2:	(bad)  
  41c5a3:	icebp  
  41c5a4:	and    al,0xf6
  41c5a6:	add    edi,DWORD PTR [edx-0x6e]
  41c5a9:	dec    esi
  41c5aa:	fwait
  41c5ab:	xor    DWORD PTR [ebx+0x14],edi
  41c5ae:	test   DWORD PTR [eax-0x5c],0x47a88b
  41c5b5:	imul   eax,DWORD PTR [ecx+0x2e],0x5bd4cd0b
  41c5bc:	ins    DWORD PTR es:[edi],dx
  41c5bd:	arpl   WORD PTR [esp+esi*8],bp
  41c5c0:	mov    al,ds:0x6f359aa0
  41c5c5:	mov    cl,0x99
  41c5c7:	aas    
  41c5c8:	out    dx,al
  41c5c9:	xchg   esi,eax
  41c5ca:	adc    ebx,DWORD PTR [edi-0x48]
  41c5cd:	rol    edi,cl
  41c5cf:	in     al,0xc7
  41c5d1:	push   esp
  41c5d2:	xor    esp,eax
  41c5d4:	cmp    BYTE PTR [ebx-0x63],al
  41c5d7:	mov    ah,0xed
  41c5d9:	and    esi,DWORD PTR [ebx*1+0x5d520fb5]
  41c5e0:	dec    ebx
  41c5e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5e2:	clc    
  41c5e3:	add    eax,0xea81e581
  41c5e8:	xor    al,0xd4
  41c5ea:	jae    0x41c5fe
  41c5ec:	bound  eax,QWORD PTR [ecx-0x2651a919]
  41c5f2:	sbb    al,0x67
  41c5f4:	cdq    
  41c5f5:	sub    BYTE PTR [eax],ah
  41c5f7:	mov    al,ds:0xcc4724a3
  41c5fc:	out    0x3a,al
  41c5fe:	jns    0x41c591
  41c600:	or     al,0xaf
  41c602:	jp     0x41c5a9
  41c604:	mov    DWORD PTR [esi],edi
  41c606:	inc    esi
  41c607:	xchg   esp,eax
  41c608:	push   eax
  41c609:	out    dx,al
  41c60a:	mov    ch,0x6f
  41c60c:	loopne 0x41c656
  41c60e:	lods   al,BYTE PTR ds:[esi]
  41c60f:	arpl   ax,bp
  41c611:	sbb    esi,DWORD PTR [esi+ebp*8+0x398998c2]
  41c618:	mov    eax,ds:0x67c9bec7
  41c61d:	jns    0x41c63d
  41c61f:	pop    esp
  41c620:	into   
  41c621:	pop    esi
  41c622:	push   esp
  41c623:	add    BYTE PTR [ebp+0x680e9b6c],bh
  41c629:	push   edi
  41c62a:	add    dl,dl
  41c62c:	mov    ch,bh
  41c62e:	lock inc ecx
  41c630:	call   0x73d:0xf3e5858e
  41c637:	sub    al,ah
  41c639:	mov    ds:0x54071ec8,al
  41c63e:	cld    
  41c63f:	lods   eax,DWORD PTR ds:[esi]
  41c640:	sub    BYTE PTR [ebx+0x4a],ch
  41c643:	jp     0x41c63e
  41c645:	imul   edi,DWORD PTR [ecx+0x76],0x9862df13
  41c64c:	inc    edx
  41c64d:	inc    esp
  41c64e:	icebp  
  41c64f:	mov    DWORD PTR [ebx-0x77],edi
  41c652:	das    
  41c653:	and    eax,0x5fabe040
  41c658:	lea    ebp,[esi]
  41c65a:	adc    ah,BYTE PTR [ebp-0x78]
  41c65d:	mov    eax,ds:0x76890fa2
  41c662:	ins    DWORD PTR es:[edi],dx
  41c663:	or     ebp,ecx
  41c665:	mov    bl,0x9
  41c667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c668:	sub    eax,0xca44101f
  41c66d:	sub    DWORD PTR [eax],ecx
  41c66f:	xor    BYTE PTR [ebx],dl
  41c671:	add    al,BYTE PTR [esi+eiz*8+0x64a45dde]
  41c678:	aad    0xfa
  41c67a:	add    BYTE PTR [ebp+0x7c],bh
  41c67d:	mov    ss,WORD PTR [eax-0x3db93f4c]
  41c683:	stos   BYTE PTR es:[edi],al
  41c684:	rol    BYTE PTR [ebx+0x7e247ca0],1
  41c68a:	adc    al,0x54
  41c68c:	adc    edi,DWORD PTR [ebx-0x2]
  41c68f:	repnz mov ds:0xe4fcdca5,eax
  41c695:	mov    ah,0x6b
  41c697:	daa    
  41c698:	fwait
  41c699:	sti    
  41c69a:	iret   
  41c69b:	in     al,0xb5
  41c69d:	lock rcr DWORD PTR [ecx+0x326e8987],0xae
  41c6a5:	dec    ecx
  41c6a6:	sub    DWORD PTR [ecx-0x5ebb3a9d],ebx
  41c6ac:	mov    bl,0xc8
  41c6ae:	loop   0x41c678
  41c6b0:	cld    
  41c6b1:	cmp    BYTE PTR [ebp-0x19],al
  41c6b4:	pop    edx
  41c6b5:	into   
  41c6b6:	mov    cl,0x23
  41c6b8:	je     0x41c6f4
  41c6ba:	cmp    dh,BYTE PTR [ecx]
  41c6bc:	ja     0x41c679
  41c6be:	scas   eax,DWORD PTR es:[edi]
  41c6bf:	cmp    eax,0x1e765fab
  41c6c4:	popf   
  41c6c5:	add    BYTE PTR [ebx],bh
  41c6c7:	cmp    edx,DWORD PTR [ecx-0x20]
  41c6ca:	dec    edi
  41c6cb:	lahf   
  41c6cc:	add    BYTE PTR [esi+edx*1],ch
  41c6cf:	(bad)  
  41c6d0:	(bad)  
  41c6d1:	scas   al,BYTE PTR es:[edi]
  41c6d2:	push   cs
  41c6d3:	cwde   
  41c6d4:	sub    al,0xcc
  41c6d6:	inc    ebx
  41c6d7:	sub    BYTE PTR [edx-0x66],0x8f
  41c6db:	cli    
  41c6dc:	sbb    al,0xda
  41c6de:	and    eax,0xc64d16fb
  41c6e3:	retf   
  41c6e4:	into   
  41c6e5:	lea    edi,[edx-0x35]
  41c6e8:	mov    WORD PTR [edi],ds
  41c6ea:	jns    0x41c75a
  41c6ec:	pop    esp
  41c6ed:	push   esi
  41c6ee:	mov    esp,0xafa6f87f
  41c6f3:	fwait
  41c6f4:	rcr    edi,cl
  41c6f6:	or     edi,edi
  41c6f8:	data16 in al,dx
  41c6fa:	adc    edx,DWORD PTR ds:0xd45d7010
  41c700:	mov    esp,0xf7d78d7f
  41c705:	xor    DWORD PTR [edx],edx
  41c707:	scas   al,BYTE PTR es:[edi]
  41c708:	outs   dx,BYTE PTR ds:[esi]
  41c709:	mov    ds:0x2f0d5248,eax
  41c70e:	jbe    0x41c780
  41c710:	sub    ecx,DWORD PTR [edi+0x20]
  41c713:	int    0xb6
  41c715:	inc    eax
  41c716:	popa   
  41c717:	mov    ch,0xaf
  41c719:	sub    al,0xdc
  41c71b:	push   0x4b496bfb
  41c720:	(bad)  
  41c721:	in     al,0xfc
  41c723:	pushf  
  41c724:	jo     0x41c6c7
  41c726:	ins    DWORD PTR es:[edi],dx
  41c727:	add    DWORD PTR ds:0x41393dea,esp
  41c72d:	dec    esp
  41c72e:	sbb    al,0x86
  41c730:	push   eax
  41c731:	inc    esp
  41c732:	nop
  41c733:	cmp    BYTE PTR [ebp+0x4ce2b0a8],bh
  41c739:	push   ecx
  41c73a:	fld    TBYTE PTR [edi]
  41c73c:	in     eax,dx
  41c73d:	xchg   ebx,eax
  41c73e:	enter  0x112b,0x5c
  41c742:	add    BYTE PTR [ebp+0x1c],0x70
  41c746:	or     cl,BYTE PTR [esi+0x4a]
  41c749:	aaa    
  41c74a:	jmp    0x12e7c654
  41c74f:	pop    ds
  41c750:	sbb    eax,DWORD PTR [edi+0x74]
  41c753:	jmp    0xcb0bbfa8
  41c758:	xor    al,0x57
  41c75a:	lock pop ebx
  41c75c:	xchg   edi,eax
  41c75d:	fnsave [esi-0x342dff8a]
  41c763:	jle    0x41c7d9
  41c765:	dec    esp
  41c766:	rol    BYTE PTR [edi-0x7c],cl
  41c769:	scas   al,BYTE PTR es:[edi]
  41c76a:	and    eax,0xe60e03d9
  41c76f:	jp     0x41c745
  41c771:	addr16 and al,0x8d
  41c774:	in     eax,dx
  41c775:	sub    DWORD PTR [ecx],edi
  41c777:	dec    edi
  41c778:	adc    cl,BYTE PTR [ecx]
  41c77a:	retf   0xa64
  41c77d:	out    dx,eax
  41c77e:	sbb    ebx,DWORD PTR [ebx+ecx*1-0x43]
  41c782:	lods   eax,DWORD PTR ds:[esi]
  41c783:	sub    BYTE PTR [ebx-0xf],0x1b
  41c787:	outs   dx,BYTE PTR ds:[esi]
  41c788:	xor    al,0x73
  41c78a:	and    eax,0xf9369b1a
  41c78f:	and    DWORD PTR [esi+0x47],0x80a81bdc
  41c796:	pushf  
  41c797:	and    ch,BYTE PTR [eax+0x5817fd40]
  41c79d:	lea    eax,[edx-0x7140aedf]
  41c7a3:	test   ch,ch
  41c7a5:	pop    esi
  41c7a6:	lahf   
  41c7a7:	not    BYTE PTR [eax+0x4d6aec36]
  41c7ad:	push   esp
  41c7ae:	popa   
  41c7af:	jb     0x41c7d6
  41c7b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7b2:	adc    al,0x62
  41c7b4:	adc    DWORD PTR [esi],ebx
  41c7b6:	test   DWORD PTR [eax-0x3e6f831f],ecx
  41c7bc:	ret    
  41c7bd:	loopne 0x41c76d
  41c7bf:	mov    edx,0x145aaab0
  41c7c4:	jae    0x41c794
  41c7c6:	cmp    al,0xd2
  41c7c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7c9:	mov    ds:0x86c87d08,al
  41c7ce:	or     eax,0x287fcdca
  41c7d3:	or     al,0xc2
  41c7d5:	sbb    BYTE PTR [edi-0x330cf073],ah
  41c7db:	daa    
  41c7dc:	mov    WORD PTR [edx-0x52],cs
  41c7df:	add    esp,DWORD PTR [eax+0x1c]
  41c7e2:	out    dx,eax
  41c7e3:	xor    DWORD PTR [ebp-0x1e5fe943],ecx
  41c7e9:	push   ecx
  41c7ea:	mov    ebx,0x37def293
  41c7ef:	cmp    dl,0xdc
  41c7f2:	mov    ch,0xb
  41c7f4:	jg     0x41c870
  41c7f6:	jne    0x41c7b1
  41c7f8:	fst    DWORD PTR [edi]
  41c7fa:	loopne 0x41c7b9
  41c7fc:	mov    eax,0x8bf17b66
  41c801:	sbb    al,0xd9
  41c803:	lahf   
  41c804:	repnz inc esi
  41c806:	push   0xffffffe5
  41c808:	or     al,al
  41c80a:	clc    
  41c80b:	js     0x41c800
  41c80d:	cmp    ebx,eax
  41c80f:	iret   
  41c810:	cwde   
  41c811:	sbb    eax,0x2931b079
  41c816:	mov    ebx,0xe48c2aff
  41c81b:	loope  0x41c867
  41c81d:	or     al,0x9a
  41c81f:	shl    BYTE PTR [edx+edi*4-0x6e],0x1c
  41c824:	jl     0x41c81e
  41c826:	jp     0x41c849
  41c828:	xor    ch,BYTE PTR [esi+0x5b]
  41c82b:	push   es
  41c82c:	outs   dx,BYTE PTR ds:[esi]
  41c82d:	xor    BYTE PTR [eax+0x33d45670],0xc8
  41c834:	xchg   esp,edi
  41c836:	lods   al,BYTE PTR ds:[esi]
  41c837:	(bad)
  41c83a:	inc    edx
  41c83b:	sub    al,0xff
  41c83e:	outs   dx,BYTE PTR ds:[esi]
  41c83f:	shl    DWORD PTR [eax-0xc185d67],1
  41c845:	adc    dh,BYTE PTR [ecx]
  41c847:	daa    
  41c848:	dec    ebx
  41c849:	or     ebp,DWORD PTR [ebx-0x13ab34cd]
  41c84f:	dec    eax
  41c850:	out    0xf5,eax
  41c852:	call   0xd0b2bfae
  41c857:	leave  
  41c858:	test   al,0xc8
  41c85a:	pop    ebp
  41c85b:	jne    0x41c7f7
  41c85d:	mov    edi,ss
  41c85f:	int3   
  41c860:	rcr    ebx,cl
  41c862:	js     0x41c884
  41c864:	jno    0x41c840
  41c866:	in     eax,0x63
  41c868:	into   
  41c869:	mov    ds:0x9d60e687,al
  41c86e:	ins    DWORD PTR es:[edi],dx
  41c86f:	jbe    0x41c82d
  41c871:	mov    DWORD PTR [ebx],esi
  41c873:	mov    al,0x8b
  41c875:	jae    0x41c802
  41c877:	ficomp DWORD PTR [ebx]
  41c879:	in     al,dx
  41c87a:	in     eax,dx
  41c87b:	test   DWORD PTR [edx*1+0x68f61406],esi
  41c882:	faddp  st(5),st
  41c884:	(bad)  
  41c885:	cdq    
  41c886:	add    al,BYTE PTR [esi]
  41c888:	xchg   ebp,eax
  41c889:	xlat   BYTE PTR ds:[ebx]
  41c88a:	out    dx,eax
  41c88b:	mov    edi,0x8b087da1
  41c890:	ret    
  41c891:	popf   
  41c892:	loop   0x41c89d
  41c894:	mov    DWORD PTR [ebp-0x5bb56b2d],0x8b43fbe
  41c89e:	fs xor bh,0x78
  41c8a2:	nop
  41c8a3:	loop   0x41c828
  41c8a5:	test   ebx,esp
  41c8a7:	xchg   BYTE PTR [esi-0x5bb81f30],ah
  41c8ad:	es enter 0xe804,0x73
  41c8b2:	or     ebp,ebx
  41c8b4:	cwde   
  41c8b5:	mov    ah,0x13
  41c8b7:	aaa    
  41c8b8:	jle    0x41c8d6
  41c8ba:	inc    eax
  41c8bb:	repz jge 0x41c87a
  41c8be:	out    dx,al
  41c8bf:	pop    edx
  41c8c0:	shl    ch,cl
  41c8c2:	jbe    0x41c8cf
  41c8c4:	xchg   BYTE PTR [edi-0x64],dl
  41c8c7:	mov    edx,0x3447a692
  41c8cc:	test   eax,0x78e77737
  41c8d1:	lahf   
  41c8d2:	das    
  41c8d3:	push   cs
  41c8d4:	mov    gs,WORD PTR [eax-0x2314d6f7]
  41c8da:	enter  0x4ff2,0x34
  41c8de:	push   es
  41c8df:	mov    ?,WORD PTR [ebp+0x22346943]
  41c8e5:	pop    esp
  41c8e6:	adc    ebp,DWORD PTR [ebx-0x1638eac5]
  41c8ec:	retf   
  41c8ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8ee:	cmp    DWORD PTR [esi],ecx
  41c8f0:	or     esi,ebp
  41c8f2:	mov    edx,0x4aea1c9e
  41c8f7:	inc    ebx
  41c8f8:	dec    edi
  41c8f9:	push   cs
  41c8fa:	aam    0x54
  41c8fc:	ror    DWORD PTR [ebx+0x0],cl
  41c8ff:	mov    esp,0x2daebb3e
  41c904:	es adc eax,0x98344531
  41c90a:	daa    
  41c90b:	icebp  
  41c90c:	xchg   ebp,eax
  41c90d:	push   esp
  41c90e:	inc    DWORD PTR [edi+ebx*1+0x25]
  41c912:	xchg   esp,eax
  41c913:	push   ecx
  41c914:	mov    dh,0x3c
  41c916:	and    edi,esi
  41c918:	jmp    0xaba25cce
  41c91d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c91e:	jecxz  0x41c92b
  41c920:	test   esi,ecx
  41c922:	mov    fs,WORD PTR [eax]
  41c924:	ja     0x41c96c
  41c926:	mov    esp,0x5631b0f1
  41c92b:	lods   al,BYTE PTR ds:[esi]
  41c92c:	ror    esi,0x50
  41c92f:	(bad)  
  41c930:	out    dx,eax
  41c931:	pop    edi
  41c932:	push   edi
  41c933:	hlt    
  41c934:	sti    
  41c935:	cmp    DWORD PTR [eax],eax
  41c937:	ins    BYTE PTR es:[edi],dx
  41c938:	push   esi
  41c939:	jecxz  0x41c8bd
  41c93b:	ss dec esi
  41c93d:	xchg   ebp,eax
  41c93e:	bound  ecx,QWORD PTR [eax+0x6da6a2c3]
  41c944:	jbe    0x41c90e
  41c946:	sbb    eax,0x1f2826d7
  41c94b:	mov    ss,WORD PTR [ebp+0xe219f8e]
  41c951:	xor    al,0xe5
  41c953:	ins    BYTE PTR es:[edi],dx
  41c954:	jbe    0x41c8f0
  41c956:	(bad)  
  41c957:	outs   dx,DWORD PTR ds:[esi]
  41c958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c959:	inc    eax
  41c95a:	ins    DWORD PTR es:[edi],dx
  41c95b:	mov    al,0x9b
  41c95d:	xchg   esp,eax
  41c95e:	jg     0x41c937
  41c960:	test   eax,0x8113837f
  41c965:	mov    edi,0x2d0a9802
  41c96a:	dec    esp
  41c96b:	test   al,0x3c
  41c96d:	xor    esp,DWORD PTR [ebx+0x2680bbcc]
  41c973:	mov    BYTE PTR [edx+eax*2+0x5faeee6f],cl
  41c97a:	lds    esp,FWORD PTR [eax]
  41c97c:	mov    eax,0x2d43c787
  41c981:	push   ebx
  41c982:	(bad)  
  41c983:	push   ebx
  41c984:	mov    eax,ds:0xa955e00f
  41c989:	in     al,0xca
  41c98b:	loop   0x41c9af
  41c98d:	mov    ah,0xfa
  41c98f:	jle    0x41c987
  41c991:	push   esp
  41c992:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c993:	or     DWORD PTR [ebx-0x57],edx
  41c996:	outs   dx,DWORD PTR ds:[esi]
  41c997:	or     DWORD PTR [ebp+0x32],eax
  41c99a:	adc    al,0x93
  41c99c:	(bad)
  41c9a1:	popf   
  41c9a2:	pop    ds
  41c9a3:	jg     0x41c932
  41c9a5:	fld    DWORD PTR [eax+ecx*4+0x33578f96]
  41c9ac:	push   edx
  41c9ad:	sahf   
  41c9ae:	int3   
  41c9af:	rol    DWORD PTR [ecx],cl
  41c9b1:	jno    0x41c9fa
  41c9b3:	call   0x6c2b:0xc342526f
  41c9ba:	aam    0x5b
  41c9bc:	call   0xe449:0x97dedd51
  41c9c3:	add    eax,0x4b35a686
  41c9c8:	outs   dx,DWORD PTR ds:[esi]
  41c9c9:	out    dx,al
  41c9ca:	mov    ebp,0x558cff66
  41c9cf:	fwait
  41c9d0:	sbb    ecx,eax
  41c9d2:	and    eax,0xcf6babcf
  41c9d7:	pop    eax
  41c9d8:	repz les ecx,FWORD PTR [eax-0x4b64fb23]
  41c9df:	std    
  41c9e0:	xchg   edi,eax
  41c9e1:	mov    edi,0x2d65e0f3
  41c9e6:	push   eax
  41c9e7:	fucom  st(3)
  41c9e9:	mov    ch,0xff
  41c9eb:	or     al,BYTE PTR [esi]
  41c9ed:	dec    DWORD PTR [edx+0x2]
  41c9f0:	inc    ebp
  41c9f1:	sub    dl,BYTE PTR [ebp+0x12d6b392]
  41c9f7:	xor    al,BYTE PTR [eax-0x6]
  41c9fa:	push   ebx
  41c9fb:	clc    
  41c9fc:	cmp    eax,0xb450fdb4
  41ca01:	sbb    bl,BYTE PTR [esi+0x3cb766ee]
  41ca07:	mov    esi,0x88faf056
  41ca0c:	add    bl,BYTE PTR [esi]
  41ca0e:	adc    DWORD PTR [ecx-0x53],eax
  41ca11:	cmc    
  41ca12:	push   esp
  41ca13:	fcompp 
  41ca15:	mov    eax,ds:0xe1fe5c0
  41ca1a:	data16 and al,0xb9
  41ca1d:	and    eax,0x916ced5
  41ca22:	sub    edx,esi
  41ca24:	lds    esi,FWORD PTR [edi-0x3f]
  41ca27:	stos   DWORD PTR es:[edi],eax
  41ca28:	mov    ecx,0x584abb56
  41ca2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca2e:	xor    BYTE PTR [ecx-0x7e],cl
  41ca31:	in     eax,0xef
  41ca33:	jne    0x41ca3c
  41ca35:	xor    DWORD PTR [edx-0x21d9c605],0x2c
  41ca3c:	xchg   bl,al
  41ca3e:	mov    ebp,0xf740813e
  41ca43:	leave  
  41ca44:	xlat   BYTE PTR ds:[ebx]
  41ca45:	jns    0x41ca0f
  41ca47:	inc    eax
  41ca48:	pop    ebp
  41ca49:	cmp    DWORD PTR [edx-0x50],edi
  41ca4c:	pop    edi
  41ca4e:	inc    eax
  41ca4f:	jg     0x41ca4f
  41ca51:	fimul  WORD PTR [ebx-0x75]
  41ca54:	in     eax,0xe5
  41ca56:	xor    esi,edx
  41ca58:	fimul  WORD PTR [edx-0x13107a39]
  41ca5e:	jmp    0x784b:0x9538946d
  41ca65:	les    esi,FWORD PTR [ebx+0xf1b69dd]
  41ca6b:	cs mov dl,0x26
  41ca6e:	inc    edx
  41ca6f:	popa   
  41ca70:	add    BYTE PTR [esi+0x2],bh
  41ca73:	repz xchg edi,eax
  41ca75:	int    0xe3
  41ca77:	xchg   ebp,eax
  41ca78:	loope  0x41ca4c
  41ca7a:	arpl   WORD PTR [edx],bx
  41ca7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca7d:	outs   dx,BYTE PTR ds:[esi]
  41ca7e:	push   ecx
  41ca7f:	daa    
  41ca80:	or     DWORD PTR [edx+0xe],0xfffffff8
  41ca84:	in     eax,0x19
  41ca86:	pop    ss
  41ca87:	(bad)  
  41ca88:	adc    BYTE PTR [esi+0x5bc7ced],cl
  41ca8e:	jb     0x41cae5
  41ca90:	adc    edi,eax
  41ca92:	mov    al,ds:0xf00cd75e
  41ca97:	xor    BYTE PTR [ecx],bl
  41ca99:	mov    ch,0xbb
  41ca9b:	shr    DWORD PTR [edi+0x5b4bab98],0x98
  41caa2:	je     0x41ca88
  41caa4:	loop   0x41ca88
  41caa6:	rcl    DWORD PTR [eax],cl
  41caa8:	cwde   
  41caa9:	add    al,0x40
  41caab:	mov    al,0x3f
  41caad:	hlt    
  41caae:	pop    ds
  41caaf:	mov    ebp,0xf1c9f528
  41cab4:	ret    
  41cab5:	inc    eax
  41cab6:	dec    eax
  41cab7:	push   ds
  41cab8:	int    0x0
  41caba:	rcr    DWORD PTR [ecx-0x26],cl
  41cabd:	xchg   esi,eax
  41cabe:	pusha  
  41cabf:	leave  
  41cac0:	daa    
  41cac1:	test   BYTE PTR [edx],bh
  41cac3:	pop    ds
  41cac4:	je     0x41cafb
  41cac6:	jl     0x41cb3a
  41cac8:	dec    ebp
  41cac9:	(bad)  
  41caca:	sub    dh,BYTE PTR [edi-0x18]
  41cacd:	pop    es
  41cace:	lods   al,BYTE PTR ds:[esi]
  41cacf:	cmp    DWORD PTR [ecx+0x58ad83b5],esp
  41cad5:	xlat   BYTE PTR ds:[ebx]
  41cad6:	mov    bl,0x5c
  41cad8:	nop
  41cad9:	lods   al,BYTE PTR ds:[esi]
  41cada:	sbb    al,0xf5
  41cadc:	add    BYTE PTR [ebx+0x63],al
  41cadf:	fist   DWORD PTR [ebp-0x61]
  41cae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cae3:	les    eax,FWORD PTR [edi-0x2a]
  41cae6:	les    edx,FWORD PTR [ebx+0x3]
  41cae9:	mov    edx,0x318ca26e
  41caee:	add    ebp,ebp
  41caf0:	scas   al,BYTE PTR es:[edi]
  41caf1:	inc    eax
  41caf2:	outs   dx,DWORD PTR ds:[esi]
  41caf3:	pop    es
  41caf4:	dec    eax
  41caf5:	mov    cl,0xaf
  41caf7:	sub    esi,DWORD PTR [ecx+0x65]
  41cafa:	into   
  41cafb:	sub    cl,BYTE PTR [ebx-0x3af76314]
  41cb01:	aaa    
  41cb02:	ds into 
  41cb04:	test   eax,0xafef547a
  41cb09:	pushf  
  41cb0a:	lods   eax,DWORD PTR ds:[esi]
  41cb0b:	jns    0x41cb1d
  41cb0d:	push   ebx
  41cb0e:	mov    ebx,0xb45c6b1
  41cb13:	mov    edx,0xba0fcae1
  41cb18:	jecxz  0x41cb85
  41cb1a:	out    0x9f,al
  41cb1c:	jl     0x41cb61
  41cb1e:	cmc    
  41cb1f:	mov    ecx,DWORD PTR [ecx-0x3eb9c8d]
  41cb25:	xor    al,0x16
  41cb27:	cmp    al,0x36
  41cb29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb2a:	shl    BYTE PTR [ebx-0x22788f58],0x61
  41cb31:	ins    DWORD PTR es:[edi],dx
  41cb32:	cmc    
  41cb33:	popf   
  41cb34:	inc    DWORD PTR [edx-0x10369f00]
  41cb3a:	push   cs
  41cb3b:	add    ch,ch
  41cb3d:	cmp    dl,BYTE PTR [ecx+ebx*2-0x3927447]
  41cb44:	into   
  41cb45:	lahf   
  41cb46:	mov    ds:0x7142690d,eax
  41cb4b:	rcr    DWORD PTR [edx-0x6f],cl
  41cb4e:	xor    edx,esp
  41cb50:	ss out dx,al
  41cb52:	adc    esi,DWORD PTR [esi+edi*1-0x20]
  41cb56:	imul   eax,esi,0x2a282ec9
  41cb5c:	push   ebx
  41cb5d:	in     al,dx
  41cb5e:	mov    ds:0x3d83a3d3,al
  41cb63:	fmul   DWORD PTR [ebx]
  41cb65:	nop
  41cb66:	adc    BYTE PTR [edi+0x4ae570f6],bh
  41cb6c:	les    ecx,FWORD PTR [ebp+0x51]
  41cb6f:	jb     0x41cbab
  41cb71:	cmc    
  41cb72:	jmp    0x41cb49
  41cb74:	ss mov al,0x27
  41cb77:	and    BYTE PTR [edx+0x350ef4ea],al
  41cb7d:	pop    ecx
  41cb7e:	rol    ebx,0x2a
  41cb81:	loop   0x41cb53
  41cb83:	inc    ebp
  41cb84:	test   eax,0xbf468054
  41cb89:	inc    edx
  41cb8a:	push   eax
  41cb8b:	repnz in eax,0x29
  41cb8e:	xor    BYTE PTR [eax+0x64c9f9f8],dl
  41cb94:	nop
  41cb95:	js     0x41cbc8
  41cb97:	or     eax,DWORD PTR [ebx+0x55939a54]
  41cb9d:	clc    
  41cb9e:	or     al,0xd9
  41cba0:	mov    edi,0xc718a41c
  41cba5:	jb     0x41cbcd
  41cba7:	add    al,0x66
  41cba9:	aad    0x33
  41cbab:	pop    ds
  41cbac:	aad    0x1f
  41cbae:	scas   al,BYTE PTR es:[edi]
  41cbaf:	mov    dh,0x8f
  41cbb1:	hlt    
  41cbb2:	pop    edx
  41cbb3:	jbe    0x41cbfe
  41cbb5:	std    
  41cbb6:	ret    
  41cbb7:	cmp    al,0x80
  41cbb9:	add    BYTE PTR [edi-0x45522f6a],bh
  41cbbf:	mov    dx,0x3c4f
  41cbc3:	ds lock push esi
  41cbc6:	cmp    edx,eax
  41cbc8:	mov    esp,0xe2df28c9
  41cbcd:	inc    ebx
  41cbce:	sbb    BYTE PTR [ebx+0x1],ah
  41cbd1:	xor    bl,dl
  41cbd3:	mov    eax,0xd04e2dd8
  41cbd8:	inc    ebx
  41cbd9:	and    al,0xd2
  41cbdb:	cs mov eax,0x509c8696
  41cbe1:	aas    
  41cbe2:	jg     0x41cba5
  41cbe4:	xchg   esi,eax
  41cbe5:	mov    edi,ecx
  41cbe7:	pop    eax
  41cbe8:	pop    esp
  41cbe9:	jno    0x41cc5e
  41cbeb:	xchg   DWORD PTR [edi+0x68287246],esi
  41cbf1:	dec    edx
  41cbf2:	or     ecx,0x24f6853d
  41cbf8:	jns    0x41cc74
  41cbfa:	push   esp
  41cbfb:	out    0x25,eax
  41cbfd:	dec    eax
  41cbfe:	lahf   
  41cbff:	mov    ah,0x52
  41cc01:	mov    bl,0xce
  41cc03:	lock add al,0xef
  41cc06:	repz jns 0x41cc57
  41cc09:	add    bl,BYTE PTR [esi-0x64c24c1f]
  41cc0f:	sbb    ch,BYTE PTR [edx-0x368d2965]
  41cc15:	jbe    0x41cbab
  41cc17:	mov    ebp,0x1b2ad45b
  41cc1c:	mov    edi,0xf8306dbb
  41cc21:	pop    ebp
  41cc22:	cs dec ebp
  41cc24:	mov    DWORD PTR [ecx+0x71e84a3a],edx
  41cc2a:	jge    0x41cbfb
  41cc2c:	mov    WORD PTR [edx+0x1d],cs
  41cc2f:	mov    cl,al
  41cc31:	shl    esp,cl
  41cc33:	call   0x7fc30497
  41cc38:	fcom   QWORD PTR [eax+0x38]
  41cc3b:	scas   eax,DWORD PTR es:[edi]
  41cc3c:	cmp    ecx,esi
  41cc3e:	pusha  
  41cc3f:	and    al,BYTE PTR [eax-0x6b60d3f6]
  41cc45:	adc    DWORD PTR [esi-0x14],esp
  41cc48:	push   ecx
  41cc49:	inc    esi
  41cc4a:	and    al,0x91
  41cc4c:	jp     0x41cc53
  41cc4e:	gs pop ebx
  41cc50:	xchg   ebp,eax
  41cc51:	xor    eax,0xd46b94c2
  41cc56:	xor    eax,0x1f7d5d11
  41cc5b:	clc    
  41cc5c:	(bad)  
  41cc5d:	mov    bh,0xe
  41cc5f:	inc    edx
  41cc60:	out    0x31,al
  41cc62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc63:	ins    BYTE PTR es:[edi],dx
  41cc64:	ss xchg edi,eax
  41cc66:	jno    0x41cc16
  41cc68:	xlat   BYTE PTR ds:[ebx]
  41cc69:	mov    dh,0x4c
  41cc6b:	cmp    al,ch
  41cc6d:	outs   dx,DWORD PTR ds:[esi]
  41cc6e:	clc    
  41cc6f:	mov    dl,0x29
  41cc71:	rol    DWORD PTR [ebp+0x57fe91f8],0xa0
  41cc78:	int    0x72
  41cc7a:	ja     0x41ccb5
  41cc7c:	inc    ecx
  41cc7d:	in     al,0x57
  41cc7f:	push   ds
  41cc80:	retf   
  41cc81:	ret    
  41cc82:	cwde   
  41cc83:	ss mov dh,0xc5
  41cc86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc87:	mov    dl,0x12
  41cc89:	ja     0x41cc7e
  41cc8b:	cld    
  41cc8c:	push   esp
  41cc8d:	or     DWORD PTR [esi-0x7f],ebp
  41cc90:	test   DWORD PTR [ebx+0x41],0x8dfad865
  41cc97:	lock jbe 0x41cca8
  41cc9a:	lods   eax,DWORD PTR ds:[esi]
  41cc9b:	(bad)  
  41cc9c:	bound  ebx,QWORD PTR ds:0x65206385
  41cca2:	mov    al,ds:0xe5fae7f0
  41cca7:	(bad)  
  41cca9:	xchg   ebx,eax
  41ccaa:	push   eax
  41ccab:	cmp    eax,0xc36f7790
  41ccb0:	daa    
  41ccb1:	sub    edx,DWORD PTR [ebp+0x38]
  41ccb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccb5:	cdq    
  41ccb6:	xor    dl,BYTE PTR [edx-0x74]
  41ccb9:	test   eax,0x876229de
  41ccbe:	pop    ds
  41ccbf:	out    dx,al
  41ccc0:	sbb    bh,BYTE PTR [esp+edx*4-0x4d]
  41ccc4:	add    DWORD PTR [ecx],ebp
  41ccc6:	(bad)
  41ccca:	hlt    
  41cccb:	and    eax,0x2c
  41ccce:	jmp    DWORD PTR [ebp-0x26e0d7fe]
  41ccd4:	jae    0x41cce0
  41ccd6:	mov    ch,0x35
  41ccd8:	int3   
  41ccd9:	or     DWORD PTR [esi+0x3eba0e3f],0x41b1c6c6
  41cce3:	jle    0x41cc6e
  41cce5:	cmp    DWORD PTR [edi],ecx
  41cce7:	or     eax,0xc56c434f
  41ccec:	sbb    al,0x2f
  41ccee:	shl    bh,cl
  41ccf0:	add    DWORD PTR [edi],edi
  41ccf2:	test   eax,0x49e93da0
  41ccf7:	mov    dl,0x2a
  41ccf9:	pop    edx
  41ccfa:	loope  0x41cc84
  41ccfc:	adc    al,0x7e
  41ccfe:	into   
  41ccff:	push   ebx
  41cd00:	dec    di
  41cd02:	es addr16 inc ecx
  41cd05:	mov    al,ds:0x2b1b9a50
  41cd0a:	xor    al,0x67
  41cd0c:	adc    BYTE PTR [edi],dh
  41cd0e:	mov    ebx,0xbffe362a
  41cd13:	pop    ecx
  41cd14:	mov    al,ds:0x7cd902c7
  41cd19:	call   0x1cfb60a
  41cd1e:	pop    ebx
  41cd1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd20:	test   BYTE PTR [ecx-0xbd835fd],al
  41cd26:	repnz and bp,cx
  41cd2a:	and    bh,BYTE PTR [bp+0x3b2a]
  41cd2f:	or     ecx,ecx
  41cd31:	je     0x41cd5d
  41cd33:	sub    ecx,DWORD PTR [eax-0x3f0ff090]
  41cd39:	push   edx
  41cd3a:	dec    ecx
  41cd3b:	test   ch,ah
  41cd3d:	jmp    0x6f10:0x228e2cac
  41cd44:	test   eax,0x9ec82aeb
  41cd49:	out    dx,al
  41cd4a:	loop   0x41cd0b
  41cd4c:	or     DWORD PTR [ebp+0x291eead7],edx
  41cd52:	and    al,0x2e
  41cd54:	ret    0x5af7
  41cd57:	pop    ecx
  41cd58:	lahf   
  41cd59:	xor    al,0x9c
  41cd5b:	imul   edi,DWORD PTR [eax-0x65],0x64
  41cd5f:	jge    0x41cd89
  41cd61:	mov    eax,0xcaea520
  41cd66:	jnp    0x41cd1a
  41cd68:	sub    DWORD PTR [ebp+0x1f],ebp
  41cd6b:	cmp    BYTE PTR [ecx+edx*2],bl
  41cd6e:	cmp    DWORD PTR [eax+0x58ea0f18],ebx
  41cd74:	in     al,dx
  41cd75:	cmc    
  41cd76:	inc    ecx
  41cd77:	dec    ebx
  41cd78:	rcl    DWORD PTR [ebp+0x3a7d553e],cl
  41cd7e:	in     al,0xb2
  41cd80:	loop   0x41cd42
  41cd82:	fs into 
  41cd84:	ja     0x41cdb7
  41cd86:	pop    DWORD PTR [ecx+0x1]
  41cd89:	aad    0xb
  41cd8b:	daa    
  41cd8c:	pop    eax
  41cd8d:	stos   BYTE PTR es:[edi],al
  41cd8e:	xchg   DWORD PTR [ecx+ebp*1],edx
  41cd91:	inc    ecx
  41cd92:	mov    ds:0x99ea55f3,eax
  41cd97:	push   edx
  41cd98:	inc    ebp
  41cd99:	jne    0x41cd2b
  41cd9b:	inc    eax
  41cd9c:	mov    al,ds:0xec85f8af
  41cda1:	xchg   ebp,eax
  41cda2:	xor    edi,DWORD PTR [eax+0x284e3b69]
  41cda8:	mov    esi,DWORD PTR [eax-0x43]
  41cdab:	enter  0xf41f,0xf2
  41cdaf:	jb     0x41cd99
  41cdb1:	xchg   edi,eax
  41cdb2:	dec    esp
  41cdb3:	shl    BYTE PTR [ebp+0x9],1
  41cdb6:	add    eax,0xe6d07360
  41cdbb:	data16 mov ch,BYTE PTR [ecx-0x37]
  41cdbf:	fcom   QWORD PTR [edi]
  41cdc1:	sub    ebx,DWORD PTR [edi+0x68]
  41cdc4:	pop    esp
  41cdc5:	popf   
  41cdc6:	mov    esp,0xcff03cae
  41cdcb:	ja     0x41cda9
  41cdcd:	pop    ss
  41cdce:	popf   
  41cdcf:	sbb    edx,DWORD PTR [edx-0x5e548819]
  41cdd5:	pop    ebx
  41cdd6:	dec    eax
  41cdd7:	loope  0x41cd77
  41cdd9:	(bad)  
  41cdda:	push   eax
  41cddb:	mov    eax,0x8ed88dc2
  41cde0:	xchg   esi,eax
  41cde1:	sbb    esp,esp
  41cde3:	mov    fs,WORD PTR [ecx-0x41]
  41cde6:	cmp    eax,0x19c868bf
  41cdeb:	inc    esi
  41cdec:	and    esi,DWORD PTR [edi]
  41cdee:	and    al,0xe
  41cdf0:	mov    edx,0x843943e1
  41cdf5:	(bad)  
  41cdf6:	lea    ecx,[ebx]
  41cdf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdf9:	fs xor ecx,eax
  41cdfc:	mov    cl,0x22
  41cdfe:	cmc    
  41cdff:	repnz std 
  41ce01:	mov    BYTE PTR [eax],dh
  41ce03:	out    0xa3,eax
  41ce05:	ret    0xb674
  41ce08:	mov    ds:0x4d3b1312,al
  41ce0d:	push   edx
  41ce0e:	push   edi
  41ce0f:	sbb    eax,DWORD PTR [esi-0x5e]
  41ce12:	jp     0x41ce01
  41ce14:	lds    ecx,FWORD PTR [esi-0x5f]
  41ce17:	leave  
  41ce18:	or     eax,0xec58dca9
  41ce1d:	jge    0x41ce4d
  41ce1f:	sub    DWORD PTR [ecx-0x54],0x2685ae60
  41ce26:	call   0x3c90:0x8564f38
  41ce2d:	cwde   
  41ce2e:	cmp    bl,BYTE PTR [edx-0x27]
  41ce31:	fsubr  QWORD PTR [esi-0x18]
  41ce34:	repz cmp cl,BYTE PTR ss:[ecx-0x41e5c2c8]
  41ce3c:	pop    ds
  41ce3d:	pushf  
  41ce3e:	cmc    
  41ce3f:	dec    esi
  41ce40:	or     ebp,0xe54ec8aa
  41ce46:	cmp    bl,BYTE PTR [edi]
  41ce48:	xchg   edx,eax
  41ce49:	jp     0x41ce40
  41ce4b:	mov    ah,0x95
  41ce4d:	xor    ah,BYTE PTR [edi+0x2c3d817c]
  41ce53:	cmp    edx,DWORD PTR [ecx-0x29]
  41ce56:	loopne 0x41cea2
  41ce58:	nop
  41ce59:	and    al,0xb3
  41ce5b:	pop    ds
  41ce5c:	aam    0x82
  41ce5e:	dec    ebp
  41ce5f:	inc    edi
  41ce60:	dec    ebx
  41ce61:	jecxz  0x41ce34
  41ce63:	add    al,0xe2
  41ce65:	push   ebx
  41ce66:	mov    esp,0xfbccee0c
  41ce6b:	stc    
  41ce6c:	inc    edi
  41ce6d:	ins    DWORD PTR es:[edi],dx
  41ce6e:	enter  0x834e,0xa
  41ce72:	scas   eax,DWORD PTR es:[edi]
  41ce73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce74:	inc    ebx
  41ce75:	pop    ecx
  41ce76:	mov    dh,BYTE PTR [esi+eiz*1+0x5c39b809]
  41ce7d:	cmp    esi,edx
  41ce7f:	jo     0x41ce92
  41ce81:	icebp  
  41ce82:	sbb    BYTE PTR [edi],al
  41ce84:	jg     0x41ce44
  41ce86:	nop
  41ce87:	sbb    DWORD PTR [ebx],ebp
  41ce89:	out    0x56,al
  41ce8b:	test   DWORD PTR [ebx-0x607ffaaa],ebp
  41ce91:	sbb    DWORD PTR [edx+0x60],0x7cb2b982
  41ce98:	xor    al,0xd3
  41ce9a:	sub    DWORD PTR [esi-0x6dfdfe92],esp
  41cea0:	xchg   ebp,eax
  41cea1:	xchg   BYTE PTR [ebx],dl
  41cea3:	cmp    al,0xa0
  41cea5:	dec    esi
  41cea7:	xchg   edx,eax
  41cea8:	rcl    BYTE PTR [ebp+0x512b6a5e],0x94
  41ceaf:	xlat   BYTE PTR ds:[ebx]
  41ceb0:	hlt    
  41ceb1:	loope  0x41cf1d
  41ceb3:	push   edx
  41ceb4:	inc    ecx
  41ceb5:	cs enter 0xe34c,0xef
  41ceba:	xlat   BYTE PTR ds:[ebx]
  41cebb:	adc    BYTE PTR [ebx-0x7b34746c],al
  41cec1:	call   DWORD PTR [ecx-0x3b5c81bf]
  41cec7:	mov    dh,0x19
  41cec9:	sbb    dl,BYTE PTR ds:0xead8fb06
  41cecf:	iret   
  41ced0:	and    esi,edi
  41ced2:	cwde   
  41ced3:	rcl    BYTE PTR [ebp-0x7753ed3e],1
  41ced9:	xchg   edi,eax
  41ceda:	outs   dx,DWORD PTR ds:[esi]
  41cedb:	xchg   ecx,eax
  41cedc:	fld    QWORD PTR [ebp+0x14f3f2c2]
  41cee2:	or     esp,DWORD PTR [edx+ecx*8]
  41cee5:	mov    cl,0xf2
  41cee7:	fcmovne st,st(3)
  41cee9:	lea    esp,[edi+0x5a]
  41ceec:	push   ss
  41ceed:	push   esp
  41ceee:	or     esi,DWORD PTR [ebp-0x57c8adbd]
  41cef4:	add    BYTE PTR [ebp+0xf9e3ac1],bh
  41cefa:	add    eax,0x3e4de42d
  41ceff:	call   0x41e6:0xcf80d6ac
  41cf06:	jne    0x41cf83
  41cf08:	xchg   ecx,eax
  41cf09:	add    al,0x15
  41cf0b:	mov    ch,0x5c
  41cf0d:	fmul   DWORD PTR [ebx+0x29]
  41cf10:	xchg   DWORD PTR [eax-0x2536208f],ebp
  41cf16:	outs   dx,DWORD PTR ds:[esi]
  41cf17:	ins    BYTE PTR es:[edi],dx
  41cf18:	dec    esp
  41cf19:	pop    edi
  41cf1a:	pop    esp
  41cf1b:	cld    
  41cf1c:	add    DWORD PTR [eax+eax*4],edx
  41cf1f:	cmp    ch,dl
  41cf21:	jg     0x41cef2
  41cf23:	jl     0x41cf0d
  41cf25:	cmc    
  41cf26:	inc    ebp
  41cf27:	xor    al,0x3b
  41cf29:	jmp    0xfbf3:0xc26b2681
  41cf30:	test   DWORD PTR [eax+0x45bd045b],edx
  41cf36:	adc    BYTE PTR [esi+0x45e5773b],0x12
  41cf3d:	jo     0x41cf97
  41cf3f:	retf   
  41cf40:	jo     0x41cf59
  41cf42:	cdq    
  41cf43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf44:	dec    ebx
  41cf45:	jl     0x41ced7
  41cf47:	jne    0x41cfa6
  41cf49:	sub    ch,BYTE PTR [esi-0x5d033474]
  41cf4f:	cdq    
  41cf50:	push   edx
  41cf51:	sbb    eax,0x5232518c
  41cf56:	dec    ebp
  41cf57:	dec    ebx
  41cf58:	loop   0x41cf2e
  41cf5a:	and    BYTE PTR [eax+0x3f7cf88e],dl
  41cf60:	mov    ch,BYTE PTR [esi-0x373106d0]
  41cf66:	mov    ch,0x7c
  41cf68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf69:	dec    edx
  41cf6a:	popf   
  41cf6b:	mov    esi,DWORD PTR [ebx]
  41cf6d:	mov    ?,edi
  41cf6f:	aam    0x23
  41cf71:	mov    al,ds:0x104651ef
  41cf76:	popf   
  41cf77:	in     al,dx
  41cf78:	xor    DWORD PTR [ebp+0x9],ecx
  41cf7b:	sbb    ecx,DWORD PTR [edx+0x52]
  41cf7e:	or     al,0xb6
  41cf80:	sbb    BYTE PTR [ebx-0x2745c94],bh
  41cf86:	sbb    BYTE PTR [ebx-0x1b],bl
  41cf89:	and    edi,ecx
  41cf8b:	std    
  41cf8c:	adc    eax,0xc5d44bd8
  41cf91:	xor    eax,0x9f39cb28
  41cf96:	inc    ecx
  41cf97:	xor    eax,0x345dfe0
  41cf9c:	dec    ecx
  41cf9d:	pop    eax
  41cf9e:	fucomi st,st(7)
  41cfa0:	sti    
  41cfa1:	dec    eax
  41cfa2:	adc    DWORD PTR [ebx+0xf723458],0x125ba4a8
  41cfac:	add    al,al
  41cfae:	pop    esi
  41cfaf:	inc    eax
  41cfb0:	imul   ecx,ebp,0xc3bf0886
  41cfb6:	fwait
  41cfb7:	(bad)  
  41cfb8:	cld    
  41cfb9:	jp     0x41cfa7
  41cfbb:	mov    esi,0x6a829fa3
  41cfc0:	scas   al,BYTE PTR es:[edi]
  41cfc1:	jmp    0xbeae:0xd64c43bd
  41cfc8:	leave  
  41cfc9:	sahf   
  41cfca:	dec    edi
  41cfcb:	pop    eax
  41cfcc:	clc    
  41cfcd:	jmp    0x41cff7
  41cfcf:	or     DWORD PTR [ebx-0xb],ecx
  41cfd2:	scas   al,BYTE PTR es:[edi]
  41cfd3:	addr16 je 0x41d052
  41cfd6:	adc    dl,BYTE PTR [eax+0x36]
  41cfd9:	arpl   WORD PTR ds:0xca126609,cx
  41cfdf:	nop
  41cfe0:	adc    DWORD PTR [ebx+ebx*1-0x1f],ecx
  41cfe4:	(bad)  [ecx+0x43139f9]
  41cfea:	adc    DWORD PTR [esi-0x2b],edx
  41cfed:	fiadd  DWORD PTR [ecx+esi*2-0x5]
  41cff1:	xchg   BYTE PTR [ebp-0x23],al
  41cff4:	(bad)  
  41cff6:	and    ch,BYTE PTR [edx-0x27771759]
  41cffc:	jne    0x41d066
  41cffe:	mov    ebp,0x3a1ed6ca
  41d003:	cld    
  41d004:	data16 or al,0x7b
  41d007:	mov    WORD PTR [edx],ss
  41d009:	in     eax,0xf3
  41d00b:	nop
  41d00c:	(bad)  
  41d00d:	mov    ecx,es
  41d00f:	push   es
  41d010:	and    BYTE PTR [ebx+0x5ecd02b7],al
  41d016:	cmp    DWORD PTR [ecx+0x26],edi
  41d019:	inc    esp
  41d01a:	dec    esi
  41d01b:	test   DWORD PTR [eax-0x4e],0xc9a06b34
  41d022:	(bad)  
  41d023:	jns    0x41cfab
  41d025:	sti    
  41d026:	jno    0x41d094
  41d028:	cmp    BYTE PTR [ecx],0x55
  41d02b:	fsub   QWORD PTR ss:[esi]
  41d02e:	mov    ah,BYTE PTR [edx-0x13]
  41d031:	xor    DWORD PTR [edx-0x2b9b5eee],0x9bdcf868
  41d03b:	dec    ecx
  41d03c:	(bad)  
  41d03d:	arpl   WORD PTR [ebx-0x30],di
  41d040:	push   ebp
  41d041:	jg     0x41d036
  41d043:	dec    ecx
  41d044:	dec    eax
  41d045:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d046:	mov    edx,0x8779a807
  41d04b:	int3   
  41d04c:	fld    DWORD PTR [esi-0x50]
  41d04f:	cdq    
  41d050:	addr16 sahf 
  41d052:	xor    edx,DWORD PTR [ebx-0xf53ac96]
  41d058:	mov    dh,0x2f
  41d05a:	push   esi
  41d05b:	test   eax,0x8b6e0692
  41d060:	dec    ebx
  41d061:	int3   
  41d062:	imul   BYTE PTR [ebx+esi*1+0x67e227a6]
  41d069:	sbb    DWORD PTR [eax+0xf],0x64a995e2
  41d070:	xor    DWORD PTR [eax-0x59],eax
  41d073:	push   edx
  41d074:	imul   esp,eax,0x1
  41d077:	ins    BYTE PTR es:[edi],dx
  41d078:	push   ss
  41d079:	xchg   BYTE PTR [ecx+0x64],al
  41d07c:	cmp    eax,0x9a4ef935
  41d081:	cmp    cl,ch
  41d083:	fidivr DWORD PTR [edi-0x28]
  41d086:	cwde   
  41d087:	in     al,0xd0
  41d089:	repz js 0x41d032
  41d08c:	push   ebp
  41d08d:	cmp    cl,BYTE PTR [esi+0x4]
  41d090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d091:	mov    eax,DWORD PTR [edx]
  41d093:	es out 0xe0,eax
  41d096:	sub    eax,0x50632639
  41d09b:	pop    esi
  41d09c:	jns    0x41d0e2
  41d09e:	cs scas eax,DWORD PTR es:[edi]
  41d0a0:	xchg   esp,eax
  41d0a1:	dec    eax
  41d0a2:	adc    DWORD PTR [ebx],esi
  41d0a4:	xchg   BYTE PTR [esi+0x408b066b],al
  41d0aa:	jg     0x41d08d
  41d0ac:	(bad)  
  41d0ad:	jge    0x41d064
  41d0af:	popf   
  41d0b0:	mov    bl,0x37
  41d0b2:	stos   BYTE PTR es:[edi],al
  41d0b3:	and    BYTE PTR [esi-0x2e],0x2d
  41d0b7:	in     al,0xaa
  41d0b9:	add    DWORD PTR [eax+0x42],ecx
  41d0bc:	xor    edi,DWORD PTR [ebx+eax*2+0x48a723a6]
  41d0c3:	push   0x3096a18f
  41d0c8:	push   0x4c6c503a
  41d0cd:	mov    ch,0xe
  41d0cf:	mov    ds:0x7f96c9fb,al
  41d0d4:	cdq    
  41d0d5:	add    edi,DWORD PTR [ebx+eiz*8+0x4896a136]
  41d0dc:	xchg   edx,eax
  41d0dd:	inc    edx
  41d0de:	rcr    DWORD PTR [eax+esi*4-0x6],1
  41d0e2:	mov    ch,BYTE PTR [edi-0x47]
  41d0e5:	mov    eax,ds:0x61ecf0f4
  41d0ea:	out    0x11,al
  41d0ec:	dec    edi
  41d0ed:	mov    edi,0xc98aa81e
  41d0f2:	fsubr  DWORD PTR [ecx]
  41d0f4:	outs   dx,DWORD PTR ds:[esi]
  41d0f5:	les    esi,FWORD PTR [edi+0x52ee5737]
  41d0fb:	xchg   ebx,eax
  41d0fc:	div    ah
  41d0fe:	imul   edi,DWORD PTR [eax+ebp*1-0x7bf8a459],0x119f1806
  41d109:	bound  ebp,QWORD PTR [eax+esi*2-0x2f]
  41d10d:	(bad)  
  41d10e:	or     dh,BYTE PTR [eax+0x20]
  41d111:	xchg   dx,ax
  41d113:	sahf   
  41d114:	add    dl,al
  41d116:	cmp    BYTE PTR [edx-0x75],ah
  41d119:	inc    esi
  41d11a:	sti    
  41d11b:	popa   
  41d11c:	xchg   esp,eax
  41d11d:	retf   0x5598
  41d120:	xor    edi,edi
  41d122:	xor    DWORD PTR [edi+edx*2],edi
  41d125:	push   edx
  41d126:	stos   BYTE PTR es:[edi],al
  41d127:	cmp    bl,cl
  41d129:	jno    0x41d16b
  41d12b:	push   esi
  41d12c:	imul   esp,DWORD PTR [ebx-0xf],0x189f826c
  41d133:	or     ecx,DWORD PTR [ecx+0x3c]
  41d136:	clc    
  41d137:	std    
  41d138:	hlt    
  41d139:	hlt    
  41d13a:	mov    bl,0xfe
  41d13c:	adc    dh,cl
  41d13e:	arpl   cx,dx
  41d140:	xchg   edi,eax
  41d141:	cmc    
  41d142:	mov    dh,0xfe
  41d144:	push   ecx
  41d145:	add    esp,ebp
  41d147:	neg    DWORD PTR [edi-0x72]
  41d14a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d14b:	cmp    BYTE PTR [esi-0x7],ah
  41d14e:	in     eax,dx
  41d14f:	mov    ah,0x73
  41d151:	lds    ecx,FWORD PTR [edi+0x5f170c19]
  41d157:	pop    esi
  41d158:	in     al,dx
  41d159:	mov    bh,0xdc
  41d15b:	push   edx
  41d15c:	or     ebx,eax
  41d15e:	enter  0x2de6,0xa0
  41d162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d163:	iret   
  41d164:	xchg   edi,eax
  41d165:	pop    ss
  41d166:	jmp    0xab20289d
  41d16b:	sub    eax,0xd02d9430
  41d170:	(bad)  
  41d171:	and    eax,0x86a51002
  41d176:	adc    ebp,DWORD PTR [ecx+0x3f]
  41d179:	(bad)
  41d17e:	inc    esi
  41d17f:	mov    esp,0x9b837bd4
  41d184:	mov    dh,0x55
  41d186:	icebp  
  41d187:	dec    edi
  41d188:	dec    edi
  41d189:	and    eax,0xc57c895a
  41d18e:	and    DWORD PTR [esi],ecx
  41d190:	mov    ds:0xc6043322,eax
  41d195:	dec    edx
  41d196:	jae    0x41d1a9
  41d198:	and    cl,BYTE PTR [eax]
  41d19a:	out    dx,al
  41d19b:	and    al,0x27
  41d19d:	lock fdivr DWORD PTR ds:[ebx-0x70]
  41d1a2:	dec    ecx
  41d1a3:	outs   dx,DWORD PTR ds:[esi]
  41d1a4:	push   0x99a36c2d
  41d1a9:	mov    WORD PTR [ecx-0x707086d],es
  41d1af:	lods   eax,DWORD PTR ds:[esi]
  41d1b0:	mov    eax,0xa2f37d4d
  41d1b5:	jmp    0xf867:0x42310597
  41d1bc:	arpl   bx,dx
  41d1be:	dec    DWORD PTR [eax+0x58]
  41d1c1:	pop    ss
  41d1c2:	mov    dl,0x55
  41d1c4:	mov    gs,ecx
  41d1c6:	inc    edx
  41d1c7:	callw  0x83f
  41d1cb:	mov    edi,0xb7f0d395
  41d1d0:	stc    
  41d1d1:	mov    BYTE PTR [ecx+0x7811bc0e],al
  41d1d7:	jnp    0x41d15f
  41d1d9:	push   ebx
  41d1da:	ins    BYTE PTR es:[edi],dx
  41d1db:	push   0xffffff9e
  41d1dd:	sbb    al,0xd8
  41d1df:	fdiv   DWORD PTR [esi-0x21]
  41d1e2:	test   ah,0x19
  41d1e5:	sahf   
  41d1e6:	inc    esp
  41d1e7:	vunpckhpd xmm1,xmm7,XMMWORD PTR [eax]
  41d1eb:	pop    ss
  41d1ec:	in     al,dx
  41d1ed:	lock xchg BYTE PTR [ebp+eax*2-0x4426c9],ch
  41d1f5:	mov    ds:0xaeec2676,al
  41d1fa:	or     esp,DWORD PTR [ecx-0x31427d03]
  41d200:	pop    edx
  41d201:	or     edi,DWORD PTR ds:0x5fa55358
  41d207:	repz mov dl,0x6b
  41d20a:	shl    BYTE PTR [ebp-0x39],0x5
  41d20e:	push   esp
  41d20f:	jne    0x41d216
  41d211:	and    BYTE PTR [eax],0x15
  41d214:	dec    ebp
  41d215:	mov    al,0x45
  41d217:	dec    ecx
  41d218:	scas   eax,DWORD PTR es:[edi]
  41d219:	fist   WORD PTR [edx+0x72626f4d]
  41d21f:	xchg   esp,eax
  41d220:	arpl   WORD PTR [esi+edx*2+0x5a8fc6a],sp
  41d227:	fiadd  WORD PTR [ecx]
  41d229:	pop    esi
  41d22a:	jb     0x41d21a
  41d22c:	dec    edi
  41d22d:	pop    ds
  41d22e:	mov    ah,0xfa
  41d230:	dec    ecx
  41d231:	das    
  41d232:	repz out 0xc0,al
  41d235:	jmp    0x41d26c
  41d237:	jno    0x41d2a5
  41d239:	jl     0x41d275
  41d23b:	inc    esp
  41d23c:	aaa    
  41d23d:	mov    eax,0xc694ed0c
  41d242:	sbb    BYTE PTR [edx+eiz*8],ah
  41d245:	adc    al,0xd7
  41d247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d248:	jg     0x41d223
  41d24a:	dec    esp
  41d24b:	lods   eax,DWORD PTR ds:[esi]
  41d24c:	ficom  DWORD PTR ds:0x40abd055
  41d252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d253:	push   0xffffffdc
  41d255:	repz and DWORD PTR [eax],ebp
  41d258:	mov    ecx,eax
  41d25a:	pushf  
  41d25b:	jo     0x41d221
  41d25d:	xor    edx,edx
  41d25f:	mov    eax,ds:0xca49736f
  41d264:	je     0x41d213
  41d266:	shl    ah,1
  41d268:	xchg   esi,eax
  41d269:	or     BYTE PTR [edx-0x56],cl
  41d26c:	lea    ecx,[esi+ecx*8+0x6c]
  41d270:	adc    al,0x7e
  41d272:	das    
  41d273:	adc    DWORD PTR [bx+di+0x31],ebp
  41d277:	fnstenv [ecx]
  41d279:	repnz imul esp,DWORD PTR [ecx-0x52ce77b7],0xe3e9249a
  41d284:	jae    0x41d28c
  41d286:	mov    bl,0x3f
  41d288:	ja     0x41d2af
  41d28a:	cmp    al,0x64
  41d28c:	test   BYTE PTR [edi+0x4c],bh
  41d28f:	(bad)  
  41d290:	mov    edx,0x7176e37
  41d295:	data16 out 0x35,al
  41d298:	ins    BYTE PTR es:[edi],dx
  41d299:	adc    edi,DWORD PTR [edx]
  41d29b:	cmp    esi,DWORD PTR [edx]
  41d29d:	dec    ebx
  41d29e:	in     eax,dx
  41d29f:	adc    al,0x36
  41d2a1:	js     0x41d25c
  41d2a3:	call   0x80fb:0xddd84e34
  41d2aa:	out    dx,eax
  41d2ab:	(bad)  [ebx-0x6aea0b3f]
  41d2b1:	pusha  
  41d2b2:	addr16 mov ebp,0x3782919e
  41d2b8:	scas   al,BYTE PTR es:[edi]
  41d2b9:	stos   BYTE PTR es:[edi],al
  41d2ba:	imul   edi,DWORD PTR [ebp-0x5a554887]
  41d2c1:	or     eax,0x16c80f7d
  41d2c6:	mov    ecx,DWORD PTR [ecx-0x27]
  41d2c9:	out    0xa4,al
  41d2cb:	sub    al,0x62
  41d2cd:	inc    edi
  41d2ce:	into   
  41d2cf:	(bad)  
  41d2d0:	xor    ebp,DWORD PTR [edx-0x4ac6a1e6]
  41d2d6:	dec    ebp
  41d2d7:	sbb    esi,DWORD PTR [eax+0x40]
  41d2da:	push   esi
  41d2db:	push   edi
  41d2dc:	inc    esp
  41d2dd:	sbb    eax,0x9d37e449
  41d2e2:	mov    dl,0x4b
  41d2e4:	jle    0x41d30d
  41d2e6:	lods   eax,DWORD PTR ds:[esi]
  41d2e7:	push   es
  41d2e8:	adc    al,0x43
  41d2ea:	jge    0x41d2cb
  41d2ec:	jb     0x41d2bb
  41d2ee:	call   0x1405:0x5dd7ab99
  41d2f5:	jp     0x41d2bd
  41d2f7:	inc    edi
  41d2f8:	jae    0x41d318
  41d2fa:	mov    WORD PTR [edx+edx*1+0x75fe5f7f],fs
  41d301:	adc    edi,ecx
  41d303:	sub    eax,0x783eb45e
  41d308:	rcr    ebx,1
  41d30a:	jmp    0x41d35e
  41d30c:	cmp    DWORD PTR [edi+0x40],eax
  41d30f:	sar    BYTE PTR [eax+0x47],1
  41d312:	lahf   
  41d313:	ret    0xb856
  41d316:	jo     0x41d30c
  41d318:	xor    eax,DWORD PTR [esi]
  41d31a:	mov    edi,DWORD PTR [edx-0x664dc7d2]
  41d320:	shr    DWORD PTR [eax+0x4c],0xda
  41d324:	pop    esp
  41d325:	pop    esp
  41d326:	hlt    
  41d327:	jp     0x41d389
  41d329:	int    0x8d
  41d32b:	and    ch,BYTE PTR [eax-0x5f]
  41d32e:	loop   0x41d380
  41d330:	mov    esp,0x35fdc423
  41d335:	dec    eax
  41d336:	in     al,dx
  41d337:	mov    edi,0x15dc09dd
  41d33c:	add    cl,BYTE PTR [ecx+eax*2+0x2d2896a7]
  41d343:	in     eax,dx
  41d344:	mov    ebx,0xfab6b287
  41d349:	clc    
  41d34a:	xor    al,0xfe
  41d34c:	stos   BYTE PTR es:[edi],al
  41d34d:	mov    DWORD PTR [edi+0x2c1f3596],ecx
  41d353:	mov    gs,WORD PTR [ebx+esi*8]
  41d356:	imul   ecx,DWORD PTR [ecx+0x14a6c194],0x612e8211
  41d360:	or     al,0x18
  41d362:	popa   
  41d363:	cmp    BYTE PTR [ecx],ch
  41d365:	daa    
  41d366:	cmp    BYTE PTR [esi],dh
  41d368:	jnp    0x41d2f7
  41d36a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d36b:	sbb    DWORD PTR ds:0xdcd1263,edi
  41d371:	fcomp  DWORD PTR [ecx+edx*1-0x77]
  41d375:	mov    bh,0x2
  41d377:	aas    
  41d378:	and    eax,edi
  41d37a:	clc    
  41d37b:	data16 mov dl,0xd9
  41d37e:	enter  0xe5cc,0xcc
  41d382:	jno    0x41d3d5
  41d384:	cli    
  41d385:	add    BYTE PTR [edx],0xaa
  41d388:	jmp    0xc399bbe3
  41d38d:	fisub  DWORD PTR [edi-0x215fe0d4]
  41d393:	mov    dh,BYTE PTR [edi-0x40]
  41d396:	dec    eax
  41d397:	inc    esp
  41d398:	mov    ebx,0x78eaf818
  41d39d:	(bad)  
  41d39e:	cmp    ebp,edx
  41d3a0:	das    
  41d3a1:	jae    0x41d32d
  41d3a3:	ret    0xf843
  41d3a6:	mov    ebp,0x3148fa82
  41d3ab:	or     eax,0x4364e450
  41d3b0:	mov    eax,ds:0x10dcd8d0
  41d3b5:	rcr    BYTE PTR [ecx+edi*1],0xe1
  41d3b9:	popa   
  41d3ba:	push   0x6f
  41d3bc:	scas   eax,DWORD PTR es:[edi]
  41d3bd:	cmp    bl,BYTE PTR [edi+0x4f1f4389]
  41d3c3:	scas   eax,DWORD PTR es:[edi]
  41d3c4:	(bad)  
  41d3c5:	ss or  dh,cl
  41d3c8:	dec    edi
  41d3c9:	fstp   TBYTE PTR [ebp+0x43]
  41d3cc:	pop    es
  41d3cd:	adc    eax,edx
  41d3cf:	call   0xcde8:0x84fe98cf
  41d3d6:	imul   BYTE PTR [ecx-0x48]
  41d3d9:	add    eax,0x6cd60137
  41d3de:	and    DWORD PTR [edi+ebp*8+0x667f9902],eax
  41d3e5:	mov    ebx,0xb387df7d
  41d3ea:	dec    esp
  41d3eb:	push   ds
  41d3ec:	pop    ebp
  41d3ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3ef:	leave  
  41d3f0:	jp     0x41d42c
  41d3f2:	je     0x41d464
  41d3f4:	push   ecx
  41d3f5:	popf   
  41d3f6:	dec    eax
  41d3f7:	jmp    0xc671e35
  41d3fc:	and    DWORD PTR [edx-0x17bf70ff],0x1c3e1e8
  41d406:	ja     0x41d430
  41d408:	call   0x25da7148
  41d40d:	inc    ecx
  41d40e:	push   0x45
  41d410:	setbe  BYTE PTR [esi+ebx*1-0x4683bbad]
  41d418:	(bad)  
  41d419:	pop    eax
  41d41a:	xor    ebx,DWORD PTR [ecx*2-0x44ed43e4]
  41d421:	fiadd  DWORD PTR [esi+0x5]
  41d424:	jl     0x41d416
  41d426:	dec    edx
  41d427:	adc    eax,0xbc685580
  41d42c:	xor    bh,cl
  41d42e:	push   ebp
  41d42f:	loope  0x41d4ae
  41d431:	push   eax
  41d432:	ins    DWORD PTR es:[edi],dx
  41d433:	ins    BYTE PTR es:[edi],dx
  41d434:	dec    edx
  41d435:	loopne 0x41d3d2
  41d437:	clc    
  41d438:	add    bh,bh
  41d43a:	lods   al,BYTE PTR ds:[esi]
  41d43b:	sub    al,0x7f
  41d43d:	(bad)  
  41d43e:	mov    ds:0x2ff77ef,al
  41d443:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d444:	stc    
  41d445:	sub    bl,ch
  41d447:	push   ecx
  41d448:	pusha  
  41d449:	cmp    BYTE PTR [esi],al
  41d44b:	test   eax,ebx
  41d44d:	ficom  DWORD PTR [edx-0x4bbc679a]
  41d453:	dec    edi
  41d454:	outs   dx,BYTE PTR ds:[esi]
  41d455:	push   edi
  41d456:	jge    0x41d48a
  41d458:	pusha  
  41d459:	and    ch,BYTE PTR ds:0x9fe93067
  41d45f:	and    BYTE PTR ds:0xd75000f8,bl
  41d465:	mov    cs,WORD PTR [ebp+0x7]
  41d468:	jmp    0x41d42f
  41d46a:	cmp    DWORD PTR [ebx],0x1d
  41d46d:	pop    ebx
  41d46e:	xlat   BYTE PTR ds:[ebx]
  41d46f:	leave  
  41d470:	or     DWORD PTR [edi],edi
  41d472:	adc    DWORD PTR ds:0xed489fca,eax
  41d478:	and    ch,BYTE PTR [eax+0x581435d7]
  41d47e:	inc    ebp
  41d47f:	push   ebx
  41d480:	dec    ebp
  41d481:	ins    DWORD PTR es:[edi],dx
  41d482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d483:	dec    ebp
  41d484:	ins    DWORD PTR es:[edi],dx
  41d485:	pop    ebx
  41d486:	pop    ss
  41d487:	pop    ebx
  41d488:	inc    esi
  41d489:	gs in  al,0x55
  41d48c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d48d:	cwde   
  41d48e:	jecxz  0x41d4ae
  41d490:	push   ecx
  41d491:	xor    al,0xf8
  41d493:	push   ebp
  41d494:	inc    eax
  41d495:	push   es
  41d496:	mov    esi,0x9bd1b026
  41d49b:	mov    ds:0x84126d99,eax
  41d4a0:	pop    ebp
  41d4a1:	cmp    BYTE PTR [esi+0x78],bl
  41d4a4:	out    0x3,eax
  41d4a6:	xchg   BYTE PTR [esp+esi*2-0x47],dl
  41d4aa:	cmp    DWORD PTR [ebx+0x7361b558],edx
  41d4b0:	(bad)  
  41d4b1:	lahf   
  41d4b2:	dec    ebx
  41d4b3:	and    bh,BYTE PTR [ebp+0x288cfdbe]
  41d4b9:	mov    cl,0x4b
  41d4bb:	push   0xe
  41d4bd:	aam    0x9
  41d4bf:	emms   
  41d4c1:	jp     0x41d52c
  41d4c3:	into   
  41d4c4:	mov    al,0x6f
  41d4c6:	ror    DWORD PTR [ebx-0x12],cl
  41d4c9:	pop    eax
  41d4ca:	cwde   
  41d4cb:	push   es
  41d4cc:	addr16 retf 
  41d4ce:	sub    BYTE PTR [edx-0xbc3fdc],dh
  41d4d4:	push   ebp
  41d4d5:	gs push eax
  41d4d7:	xor    dl,cl
  41d4d9:	dec    esp
  41d4da:	fidiv  WORD PTR [edi+0x2357005]
  41d4e0:	or     al,0xd2
  41d4e2:	sub    edi,DWORD PTR [esi-0x63]
  41d4e5:	repnz hlt 
  41d4e7:	mov    BYTE PTR [eax+0x66],cl
  41d4ea:	jle    0x41d489
  41d4ec:	push   esi
  41d4ed:	or     BYTE PTR [esi],ch
  41d4ef:	mov    bl,0x31
  41d4f2:	dec    ecx
  41d4f3:	ror    DWORD PTR [ebp+0x681e1893],0x92
  41d4fa:	adc    al,0xc9
  41d4fc:	mov    eax,0x5b38cac5
  41d501:	pushf  
  41d502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d503:	in     al,dx
  41d504:	out    0xf6,eax
  41d506:	bound  edi,QWORD PTR [ecx+0x38]
  41d509:	rcr    DWORD PTR [eax],cl
  41d50b:	xlat   BYTE PTR ds:[ebx]
  41d50c:	xlat   BYTE PTR ds:[ebx]
  41d50d:	xchg   ecx,eax
  41d50e:	nop
  41d50f:	xor    BYTE PTR ss:[ebx+edi*4+0x62],0x9
  41d515:	fucomi st,st(7)
  41d517:	dec    ebx
  41d518:	mov    dh,0x92
  41d51a:	dec    esp
  41d51b:	or     DWORD PTR [edx+0x7c],ecx
  41d51e:	ror    BYTE PTR [ebp-0x19],0x85
  41d522:	rcr    DWORD PTR [edi+edi*2-0x74],1
  41d526:	(bad)  
  41d527:	bound  ecx,QWORD PTR [esi]
  41d529:	add    DWORD PTR [ecx],ebx
  41d52b:	retf   0xdb44
  41d52e:	mov    edx,0x754f7aaf
  41d533:	int3   
  41d534:	pop    edi
  41d535:	or     BYTE PTR [ebx+0x19],0x3f
  41d539:	clc    
  41d53a:	rcr    edx,cl
  41d53c:	fst    DWORD PTR [ebp-0x21561f25]
  41d542:	fmul   st(2),st
  41d544:	sbb    DWORD PTR [edx],edx
  41d546:	or     BYTE PTR [ebx],cl
  41d548:	inc    ebx
  41d549:	popa   
  41d54a:	popa   
  41d54b:	cmp    BYTE PTR [esi-0x3],bl
  41d54e:	sbb    ebx,ebx
  41d550:	gs pop edx
  41d552:	mov    esi,0xdfc74e4c
  41d557:	ficom  WORD PTR [ebp+0x3b]
  41d55a:	mov    esi,0x6f03f646
  41d55f:	sub    eax,0x5bf2d6e7
  41d564:	dec    edi
  41d565:	test   BYTE PTR [ecx],dl
  41d567:	add    dl,dl
  41d569:	out    0x0,eax
  41d56b:	(bad)  
  41d56d:	cmp    al,0xcd
  41d56f:	mov    esp,0x16a1f343
  41d574:	mov    dl,BYTE PTR [edi-0x2bae7f6a]
  41d57a:	xchg   ebx,eax
  41d57b:	xchg   ecx,eax
  41d57c:	cmp    dh,dl
  41d57e:	add    eax,DWORD PTR cs:[edi]
  41d581:	xchg   ebx,eax
  41d582:	cdq    
  41d583:	push   esp
  41d584:	repnz sub eax,DWORD PTR [eax+0x57af54e]
  41d58b:	xchg   ebp,eax
  41d58c:	cld    
  41d58d:	sahf   
  41d58e:	push   es
  41d58f:	addr16 ss and al,0x69
  41d593:	popf   
  41d594:	rcr    BYTE PTR [edx+ebp*2-0x4a],cl
  41d598:	test   DWORD PTR [eax-0x11],esi
  41d59b:	daa    
  41d59c:	fwait
  41d59d:	dec    edx
  41d59e:	mul    BYTE PTR [edx-0x1c96c74]
  41d5a4:	mov    dx,0x8d3d
  41d5a8:	scas   eax,DWORD PTR es:[edi]
  41d5a9:	sbb    edi,ebx
  41d5ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5ac:	cmp    eax,0x4ab7a53e
  41d5b1:	jmp    0x650f05be
  41d5b6:	xor    ah,dl
  41d5b8:	xchg   ebp,eax
  41d5b9:	jecxz  0x41d545
  41d5bb:	xor    eax,0x36730ca9
  41d5c0:	mov    ecx,0x264f77be
  41d5c5:	mov    bl,0x59
  41d5c7:	jne    0x41d5cd
  41d5c9:	pop    ss
  41d5ca:	cmp    al,0x73
  41d5cc:	and    DWORD PTR [edx+0x6d],esi
  41d5cf:	pop    esi
  41d5d0:	xchg   BYTE PTR [esi+0x1b],dh
  41d5d3:	inc    edx
  41d5d4:	(bad)  [edx+0x21313fea]
  41d5da:	xchg   esi,eax
  41d5db:	inc    ecx
  41d5dc:	inc    edi
  41d5dd:	adc    DWORD PTR [eax-0x2970d15f],esi
  41d5e3:	mov    eax,edi
  41d5e5:	mov    ch,0xdc
  41d5e7:	int    0x33
  41d5e9:	sub    BYTE PTR [edx-0x72e29c2c],bl
  41d5ef:	adc    eax,0x60dcf5f3
  41d5f4:	push   ss
  41d5f5:	mov    ?,WORD PTR [eax+eax*8-0x75]
  41d5f9:	inc    eax
  41d5fa:	scas   eax,DWORD PTR es:[edi]
  41d5fb:	ins    BYTE PTR es:[edi],dx
  41d5fc:	pop    ebx
  41d5fd:	ror    eax,cl
  41d5ff:	pop    ecx
  41d600:	cwde   
  41d601:	shl    eax,0xdd
  41d604:	sbb    al,0xc0
  41d606:	push   ds
  41d607:	and    eax,0xa2318ef9
  41d60c:	(bad)  
  41d60d:	xchg   esp,eax
  41d60e:	sub    DWORD PTR [esi-0x1aa41d6b],esp
  41d614:	mov    ecx,0x81d92867
  41d619:	dec    esp
  41d61a:	je     0x41d636
  41d61c:	dec    esp
  41d61d:	jecxz  0x41d629
  41d61f:	jecxz  0x41d660
  41d621:	daa    
  41d622:	aam    0xf4
  41d624:	loopne 0x41d6a2
  41d626:	add    eax,0x15ce27d6
  41d62b:	(bad)  
  41d62c:	aas    
  41d62d:	fcom   st(4)
  41d62f:	dec    ebp
  41d630:	fist   DWORD PTR [edi-0x1]
  41d633:	cmp    eax,0x65a22a85
  41d638:	and    dh,al
  41d63a:	nop
  41d63b:	bound  ecx,QWORD PTR [eax+0x1d7af]
  41d641:	sub    ebx,DWORD PTR [eax-0x2587123]
  41d647:	sub    DWORD PTR [edx+0x112f34df],0xa880bf89
  41d651:	addr16 jle 0x41d68a
  41d654:	cmp    al,0x76
  41d656:	push   0x1c3e24c2
  41d65b:	ret    
  41d65c:	lods   eax,DWORD PTR ds:[esi]
  41d65d:	push   eax
  41d65e:	push   es
  41d65f:	adc    esp,ebx
  41d661:	nop
  41d662:	mov    ecx,DWORD PTR [eax+0x73]
  41d665:	rcl    DWORD PTR [ecx-0xc72072e],0x64
  41d66c:	lods   al,BYTE PTR ds:[esi]
  41d66d:	mov    ecx,0xe8902274
  41d672:	dec    ebp
  41d673:	jge    0x41d678
  41d675:	xchg   ecx,eax
  41d676:	mov    eax,0xf9230db2
  41d67b:	je     0x41d6ce
  41d67d:	cwde   
  41d67e:	mov    bl,0x3c
  41d680:	outs   dx,DWORD PTR ds:[esi]
  41d681:	les    esi,FWORD PTR [ecx]
  41d683:	lds    edx,FWORD PTR [ebp+0x56]
  41d686:	pop    edi
  41d687:	stos   BYTE PTR es:[edi],al
  41d688:	jno    0x41d6a9
  41d68a:	rcl    BYTE PTR [edi-0x4dd0a254],cl
  41d690:	pop    ebp
  41d691:	ins    DWORD PTR es:[edi],dx
  41d692:	mov    eax,ds:0xc0cf3207
  41d697:	sbb    eax,0xcf58ebfe
  41d69c:	das    
  41d69d:	adc    al,0x6f
  41d69f:	xchg   ebp,eax
  41d6a0:	mov    dl,0xd4
  41d6a2:	push   cs
  41d6a3:	mov    bl,0x8b
  41d6a5:	sbb    DWORD PTR [ebx],ebp
  41d6a7:	xlat   BYTE PTR ds:[ebx]
  41d6a8:	mov    edi,0x89b3e832
  41d6ad:	fwait
  41d6ae:	cdq    
  41d6af:	lahf   
  41d6b0:	jge    0x41d729
  41d6b2:	fcmovnu st,st(3)
  41d6b4:	mov    dl,0xb4
  41d6b6:	mov    edx,0x4fae6d1c
  41d6bb:	cmp    bl,bl
  41d6bd:	int3   
  41d6be:	push   cs
  41d6bf:	mov    ch,0x2c
  41d6c1:	pop    eax
  41d6c2:	mov    DWORD PTR [ebx],edx
  41d6c4:	inc    esp
  41d6c5:	arpl   WORD PTR [ebx-0x10],bx
  41d6c8:	pop    ecx
  41d6c9:	lock xor dh,bh
  41d6cc:	int3   
  41d6cd:	adc    al,0x40
  41d6cf:	jge    0x41d668
  41d6d1:	dec    edx
  41d6d2:	xchg   edx,eax
  41d6d3:	push   esp
  41d6d4:	into   
  41d6d5:	cmp    DWORD PTR [edx+0x34d74472],edi
  41d6db:	or     al,0x2b
  41d6dd:	xlat   BYTE PTR ds:[ebx]
  41d6de:	cmp    al,0x9d
  41d6e0:	add    edx,DWORD PTR [ebx-0x65434852]
  41d6e6:	mov    edx,eax
  41d6e8:	pop    edx
  41d6e9:	call   0xb22:0x80daa674
  41d6f0:	xor    DWORD PTR fs:[esi-0x51],ebx
  41d6f4:	inc    edx
  41d6f5:	ror    DWORD PTR [ebp+0x56],1
  41d6f8:	imul   ebx,DWORD PTR [esi+0x6042d865],0xddb9e047
  41d702:	mov    esp,0x7dee1f0f
  41d707:	adc    al,0xcc
  41d709:	mov    bl,0xcf
  41d70b:	and    esi,DWORD PTR ds:0x3f272b21
  41d711:	mul    DWORD PTR [edx+0x25]
  41d714:	jnp    0x41d73c
  41d716:	mov    DWORD PTR [esi-0x28],esp
  41d719:	fadd   QWORD PTR [edi]
  41d71b:	push   edx
  41d71c:	pop    es
  41d71d:	cmp    al,BYTE PTR [edx+ecx*1+0x72]
  41d721:	cmp    ch,BYTE PTR es:0x77db0084
  41d728:	mov    ebx,0x2fff9763
  41d72d:	lds    esp,FWORD PTR [esp+ebx*1]
  41d730:	scas   al,BYTE PTR es:[edi]
  41d731:	pop    ss
  41d732:	or     DWORD PTR [ecx-0x5b4e22a4],ebx
  41d738:	fnsave [ebx+0x3e6d124e]
  41d73e:	icebp  
  41d73f:	push   ecx
  41d740:	in     al,dx
  41d741:	test   al,0x7a
  41d743:	sbb    ch,BYTE PTR [edx]
  41d745:	ret    
  41d746:	inc    eax
  41d747:	(bad)  
  41d748:	xor    dl,al
  41d74a:	and    al,0x11
  41d74c:	mov    ecx,0xd6740ae9
  41d751:	xor    eax,0xf4856ecd
  41d756:	mov    bl,0x30
  41d758:	and    al,0x6
  41d75a:	retf   
  41d75b:	mov    WORD PTR [ebx+0x6],gs
  41d75e:	sub    eax,0xa62737c
  41d763:	jge    0x41d77b
  41d765:	fadd   DWORD PTR [edi]
  41d767:	(bad)  
  41d768:	hlt    
  41d769:	sub    eax,DWORD PTR [eax+0x15]
  41d76c:	outs   dx,DWORD PTR ds:[esi]
  41d76d:	mov    esi,DWORD PTR [esi-0x5f076254]
  41d773:	retf   0xb47d
  41d776:	das    
  41d777:	pop    ds
  41d778:	xchg   edx,eax
  41d779:	ja     0x41d77c
  41d77b:	mov    cl,0x1b
  41d77d:	ins    DWORD PTR es:[edi],dx
  41d77e:	mov    al,0x84
  41d780:	cmp    eax,0xf5cd4561
  41d785:	shl    cl,0xce
  41d788:	(bad)  
  41d789:	sbb    al,0x31
  41d78b:	push   esi
  41d78c:	inc    edi
  41d78d:	fisttp QWORD PTR [edi]
  41d78f:	mov    ebx,0xf5bc279
  41d794:	fs es retf 0x64e6
  41d799:	pop    ecx
  41d79a:	cmp    ecx,eax
  41d79c:	or     BYTE PTR [ebp+0x2a],dh
  41d79f:	jge    0x41d755
  41d7a1:	retf   
  41d7a2:	jge    0x41d764
  41d7a4:	adc    edx,DWORD PTR [ebp-0x17]
  41d7a7:	retf   0x6adc
  41d7aa:	inc    edx
  41d7ab:	imul   esp,DWORD PTR [ecx+0xbcf6e43],0x838e467b
  41d7b5:	jle    0x41d7e4
  41d7b7:	mov    edx,0xfd6fbb20
  41d7bc:	test   al,0xf8
  41d7be:	femms  
  41d7c0:	and    ebp,DWORD PTR [edi-0x23]
  41d7c3:	mov    ds:0xc6e76a77,al
  41d7c8:	fwait
  41d7c9:	sbb    DWORD PTR [esi+0x2d],esi
  41d7cc:	inc    ebp
  41d7cd:	rol    DWORD PTR [edi+ebx*2+0x5b],0x85
  41d7d2:	sub    al,0x27
  41d7d4:	in     al,dx
  41d7d5:	jbe    0x41d7e6
  41d7d7:	int3   
  41d7d8:	push   ecx
  41d7d9:	leave  
  41d7da:	imul   BYTE PTR [eax]
  41d7dc:	sbb    bl,BYTE PTR [eax+0x6a]
  41d7df:	fist   DWORD PTR [ecx+0x5fc31901]
  41d7e5:	dec    esp
  41d7e6:	cwde   
  41d7e7:	pop    edx
  41d7e8:	mov    cl,0x2b
  41d7ea:	push   ss
  41d7eb:	jg     0x41d7f5
  41d7ed:	popf   
  41d7ee:	jl     0x41d86c
  41d7f0:	xchg   ebx,eax
  41d7f1:	mov    esp,0x32856fe0
  41d7f6:	iret   
  41d7f7:	mul    DWORD PTR [eax+0x2b43a3be]
  41d7fd:	sub    ecx,DWORD PTR [ecx+0x18]
  41d800:	into   
  41d801:	mov    dl,0x24
  41d804:	jp     0x41d84e
  41d806:	div    edx
  41d808:	retf   0x2a13
  41d80b:	inc    esp
  41d80c:	jb     0x41d7a9
  41d80e:	ds or  bl,ch
  41d811:	sub    esi,DWORD PTR [ecx+esi*1+0x208ca598]
  41d818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d819:	jge    0x41d7fb
  41d81b:	aaa    
  41d81c:	pop    edx
  41d81d:	(bad)  
  41d81e:	mov    cl,0x3f
  41d820:	or     bl,al
  41d822:	push   esi
  41d823:	xor    al,0xc8
  41d825:	aad    0x23
  41d827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d828:	mov    dh,0xf1
  41d82a:	pop    esp
  41d82b:	fimul  WORD PTR [ebx-0x5b8520a1]
  41d831:	test   BYTE PTR [edx+eax*8],bl
  41d834:	jge    0x41d7f4
  41d836:	ins    BYTE PTR es:[edi],dx
  41d837:	outs   dx,DWORD PTR ds:[esi]
  41d838:	daa    
  41d839:	(bad)  
  41d83a:	outs   dx,BYTE PTR ss:[esi]
  41d83c:	repnz loop 0x41d7cb
  41d83f:	test   eax,0xadd38de0
  41d844:	cld    
  41d845:	xchg   BYTE PTR [eax+0x75],dl
  41d848:	(bad)
  41d84d:	mov    bl,0xff
  41d84f:	rcr    ch,cl
  41d851:	pop    DWORD PTR [ecx-0xd89982e]
  41d857:	mov    edi,0xd02d3755
  41d85c:	push   ds
  41d85d:	sbb    eax,DWORD PTR [edi]
  41d85f:	pop    ds
  41d860:	dec    ecx
  41d861:	lds    ebx,FWORD PTR [edx+ebp*1]
  41d864:	(bad)  
  41d866:	xor    al,0xc1
  41d868:	out    dx,al
  41d869:	dec    esi
  41d86a:	adc    al,0xec
  41d86c:	hlt    
  41d86d:	test   DWORD PTR [eax+0x1832c1c8],eax
  41d873:	mov    BYTE PTR [esi+eiz*4+0x75a7493e],ch
  41d87a:	push   ss
  41d87b:	addr16 inc eax
  41d87d:	mov    DWORD PTR [ebx-0x46],edi
  41d880:	dec    edi
  41d881:	add    edi,DWORD PTR ss:[eax]
  41d884:	mov    edx,0xd4f54531
  41d889:	test   DWORD PTR [eax+ebx*1-0x43ba2264],eax
  41d890:	in     al,0xeb
  41d892:	xchg   DWORD PTR [edx+0x42bc5b38],ecx
  41d898:	and    eax,0x43e12a64
  41d89d:	fucomp st(0)
  41d89f:	adc    ebx,ebp
  41d8a1:	push   ecx
  41d8a2:	bound  ebp,QWORD PTR [esi]
  41d8a4:	test   eax,0xb9d7c2b8
  41d8a9:	adc    DWORD PTR [ecx+ecx*1+0x58d4d57c],edi
  41d8b0:	ds loop 0x41d858
  41d8b3:	jae    0x41d858
  41d8b5:	inc    ebp
  41d8b6:	pop    es
  41d8b7:	fist   DWORD PTR [edi-0x793c783b]
  41d8bd:	adc    BYTE PTR [eax],bh
  41d8bf:	ret    0x75c9
  41d8c2:	test   BYTE PTR [ecx+0x2922f7ef],ch
  41d8c8:	mov    ebx,0x539b225c
  41d8cd:	jl     0x41d930
  41d8cf:	jmp    0xd41d:0x1e776bd9
  41d8d6:	sub    dl,BYTE PTR [esi]
  41d8d8:	sbb    BYTE PTR [esi-0xe01aa6],0xb3
  41d8df:	xor    al,0x0
  41d8e1:	pushf  
  41d8e2:	out    0x63,al
  41d8e4:	into   
  41d8e5:	pushw  cs
  41d8e7:	mov    bl,0xf3
  41d8e9:	inc    esp
  41d8ea:	retf   0xe26d
  41d8ed:	dec    esi
  41d8ee:	psrlq  mm4,QWORD PTR [esi+0x2f625e54]
  41d8f5:	push   0x3269c864
  41d8fa:	or     DWORD PTR [ebp+0x39],0xffffffe0
  41d8fe:	mov    esi,0xb9bdc579
  41d903:	call   0x1ae2a97a
  41d908:	sub    ecx,DWORD PTR [esi-0xd922b4]
  41d90e:	xlat   BYTE PTR ds:[ebx]
  41d90f:	popf   
  41d910:	push   ebp
  41d911:	aad    0x43
  41d913:	imul   DWORD PTR [eax]
  41d915:	mov    dl,0x7
  41d917:	test   DWORD PTR [ecx-0x390e013a],eax
  41d91d:	pop    ebp
  41d91e:	jp     0x41d919
  41d920:	hlt    
  41d921:	mov    ebx,0xb0bc3b3e
  41d926:	out    0xf6,al
  41d928:	jecxz  0x41d92a
  41d92a:	mov    edx,0x19e59c0f
  41d92f:	in     eax,dx
  41d930:	cmp    eax,0xa3b44033
  41d935:	(bad)  [ebx]
  41d937:	add    eax,0x789cc510
  41d93c:	add    dh,BYTE PTR [eax-0x3b8aab5b]
  41d942:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d943:	or     al,0x91
  41d945:	adc    BYTE PTR [esi],ah
  41d947:	and    esi,ebp
  41d949:	repz daa 
  41d94b:	mov    bl,BYTE PTR [esp+ebx*1+0x7bb01909]
  41d952:	cmp    ecx,DWORD PTR [edx+edi*8]
  41d955:	jp     0x41d9d5
  41d957:	repz pop ds
  41d959:	mov    WORD PTR [edi+0x1e],es
  41d95c:	retf   
  41d95d:	push   0xffffffce
  41d95f:	add    al,0xe3
  41d961:	cmp    ch,BYTE PTR [ecx+0x533c6a1b]
  41d967:	test   DWORD PTR [eax+eax*2+0x3510fa5c],ebx
  41d96e:	gs xchg ebp,eax
  41d970:	je     0x41d92a
  41d972:	jo     0x41d9a8
  41d974:	lods   al,BYTE PTR ds:[esi]
  41d975:	jmp    0x41d9c9
  41d977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d978:	and    BYTE PTR [edi-0x1597086b],ch
  41d97e:	into   
  41d97f:	pop    edx
  41d980:	outs   dx,DWORD PTR ds:[esi]
  41d981:	mov    dl,0x4e
  41d983:	mov    al,0x26
  41d985:	fcomp  st(1)
  41d987:	nop
  41d988:	mov    al,ds:0xbdf2cb90
  41d98d:	dec    edi
  41d98e:	push   ecx
  41d98f:	out    dx,eax
  41d990:	shl    DWORD PTR [ecx-0x31],1
  41d993:	test   DWORD PTR [ebx],ebx
  41d995:	idiv   dl
  41d997:	sbb    DWORD PTR [ebx],ecx
  41d999:	jno    0x41d929
  41d99b:	or     ecx,edx
  41d99d:	xor    dh,0x5f
  41d9a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9a1:	cmp    al,BYTE PTR [edi+0x3f622859]
  41d9a7:	fistp  WORD PTR [edx]
  41d9a9:	not    BYTE PTR [edx+ebx*8-0x25]
  41d9ad:	std    
  41d9ae:	jp     0x41d967
  41d9b0:	je     0x41d9b0
  41d9b2:	sbb    edx,DWORD PTR ds:0xd2ae187
  41d9b8:	fdiv   QWORD PTR [ecx+0x50009147]
  41d9be:	pop    ebx
  41d9bf:	inc    ecx
  41d9c0:	ror    bx,cl
  41d9c3:	imul   eax,eax,0x7
  41d9c6:	scas   eax,DWORD PTR es:[edi]
  41d9c7:	jle    0x41d9cb
  41d9c9:	mov    edx,0x7672a692
  41d9ce:	inc    ebx
  41d9cf:	push   edi
  41d9d0:	and    eax,edx
  41d9d2:	in     eax,0xa
  41d9d4:	mov    ebx,0x89080591
  41d9d9:	push   eax
  41d9da:	lea    edx,[edx+0x8dc2330]
  41d9e0:	inc    eax
  41d9e1:	cmp    DWORD PTR [edi+ecx*2+0x320bfa87],ecx
  41d9e8:	sub    al,0x73
  41d9ea:	mov    bh,0xbf
  41d9ec:	mov    ds:0x86bc834c,al
  41d9f1:	daa    
  41d9f2:	inc    esi
  41d9f3:	cmp    al,0xb6
  41d9f5:	pushf  
  41d9f6:	lods   eax,DWORD PTR ds:[esi]
  41d9f7:	das    
  41d9f8:	push   edi
  41d9f9:	pop    edx
  41d9fa:	in     eax,dx
  41d9fb:	xchg   eax,edx
  41d9fd:	mov    cl,0xb3
  41d9ff:	mov    ecx,0x68e6b902
  41da04:	in     eax,0xb3
  41da06:	sub    ecx,DWORD PTR [edi]
  41da08:	dec    eax
  41da09:	xchg   ebp,eax
  41da0a:	test   dl,ah
  41da0c:	cwde   
  41da0d:	jp     0x41da6b
  41da0f:	and    al,0x8b
  41da11:	inc    esp
  41da12:	xchg   BYTE PTR [edi],bh
  41da14:	sub    ah,BYTE PTR [ebx]
  41da16:	rol    DWORD PTR [ecx],cl
  41da18:	lahf   
  41da19:	lea    eax,[esi-0x5482ee00]
  41da1f:	push   0xffffffc3
  41da21:	fild   WORD PTR [eax-0x2feacb]
  41da27:	sub    DWORD PTR [esi+0x40],edx
  41da2a:	adc    ebp,DWORD PTR [ecx-0x2786730e]
  41da30:	idiv   DWORD PTR [ebx+0x3a323478]
  41da36:	adc    bl,BYTE PTR [ecx+eiz*2-0x12324c81]
  41da3d:	pop    ecx
  41da3e:	and    al,0xae
  41da40:	sbb    al,0x93
  41da42:	pop    esp
  41da43:	test   BYTE PTR [esi],ah
  41da45:	into   
  41da46:	rcr    DWORD PTR [eax-0x3],0x3c
  41da4a:	data16 icebp 
  41da4c:	sbb    dl,BYTE PTR [ebx-0x4fe1c20b]
  41da52:	addr16 gs retf 0x4142
  41da57:	push   es
  41da58:	rol    dl,0xe2
  41da5b:	cmp    ebx,DWORD PTR [ebx+esi*4]
  41da5e:	pop    esi
  41da5f:	mov    eax,0x8229c321
  41da64:	jp     0x41da16
  41da66:	inc    edi
  41da67:	stos   DWORD PTR es:[edi],eax
  41da68:	popa   
  41da69:	stos   BYTE PTR es:[edi],al
  41da6a:	lea    eax,[eax+0x6eb7e8eb]
  41da70:	push   DWORD PTR [ebx-0x34]
  41da73:	or     ecx,0x3006caaf
  41da79:	dec    edx
  41da7a:	lods   al,BYTE PTR ds:[esi]
  41da7b:	add    edx,esp
  41da7d:	xchg   ebp,eax
  41da7e:	jmp    0x5b23:0x277e2f4d
  41da85:	jmp    0x8e94ad82
  41da8a:	mov    eax,ds:0xbdb97140
  41da8f:	int    0xd0
  41da91:	popa   
  41da92:	mov    ch,0x75
  41da94:	(bad)  
  41da95:	imul   edi,DWORD PTR [ebp+0x2a507c9e],0xffffffd2
  41da9c:	mov    edx,0x990de2fb
  41daa1:	xchg   esp,eax
  41daa2:	lahf   
  41daa3:	push   ebx
  41daa4:	repz cmp eax,0x8304ec54
  41daaa:	in     eax,0xb9
  41daac:	cmc    
  41daad:	jae    0x41da38
  41daaf:	mov    ebp,0xce2177cc
  41dab4:	adc    edx,DWORD PTR [ebx-0xd]
  41dab7:	repnz mov bh,0x60
  41daba:	inc    eax
  41dabb:	jmp    0x41da9f
  41dabd:	mov    ch,0xac
  41dabf:	dec    edx
  41dac0:	add    edx,edx
  41dac2:	push   ss
  41dac3:	jns    0x41db12
  41dac5:	leave  
  41dac6:	mov    eax,DWORD PTR ds:0x6db533e4
  41dacc:	mov    al,ds:0xd5c85fa0
  41dad1:	mov    ah,0x6f
  41dad3:	popa   
  41dad4:	imul   edx,DWORD PTR [esi+0x42],0xffffffae
  41dad8:	mov    edi,0x1db885ac
  41dadd:	or     ch,dl
  41dadf:	mov    ch,0xd6
  41dae1:	xchg   esp,eax
  41dae2:	std    
  41dae3:	lahf   
  41dae4:	xchg   ebp,eax
  41dae5:	pop    ecx
  41dae6:	sub    BYTE PTR [ebx-0x4b],0xe7
  41daea:	cwde   
  41daeb:	mov    bl,0xea
  41daed:	imul   ebx,edx,0x7a
  41daf0:	mov    dh,0x29
  41daf2:	mov    bl,0xac
  41daf4:	mov    esi,0xd250c7e6
  41daf9:	call   0x7e1:0x21839ccc
  41db00:	(bad)  
  41db01:	stos   BYTE PTR es:[edi],al
  41db02:	pop    ebx
  41db03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db04:	xor    DWORD PTR [eax-0x14e97953],esi
  41db0a:	jge    0x41daf2
  41db0c:	mov    dh,BYTE PTR [esi-0x4a]
  41db0f:	pop    ebp
  41db10:	bound  ecx,QWORD PTR [ebx-0x53]
  41db13:	pusha  
  41db14:	or     ah,BYTE PTR [edi+edx*8+0x53]
  41db18:	xor    BYTE PTR [edx-0x4a571c38],al
  41db1e:	pusha  
  41db1f:	ror    DWORD PTR [ecx-0x5],1
  41db22:	repnz aas 
  41db24:	adc    BYTE PTR [ebx-0x13ab150a],0xd0
  41db2b:	jnp    0x41dacc
  41db2d:	mov    bh,cl
  41db2f:	out    0x7,eax
  41db31:	inc    edi
  41db32:	mov    esi,edx
  41db34:	imul   edx,DWORD PTR [ecx+edx*8-0x782f4a47],0x7b1933eb
  41db3f:	jl     0x41db3e
  41db41:	cmp    dh,BYTE PTR ss:[eax*8+0x19ed119b]
  41db49:	(bad)  [edx+0x6306dedc]
  41db4f:	pop    eax
  41db50:	sub    DWORD PTR [ecx+eiz*4+0x9071760],edi
  41db57:	xchg   DWORD PTR [ecx-0x4c],ebp
  41db5a:	xchg   BYTE PTR [ebx-0x44],al
  41db5d:	mov    ebp,ebx
  41db5f:	int    0x23
  41db61:	std    
  41db62:	or     eax,0x45325deb
  41db67:	ficom  WORD PTR [ebp+0x3d27dd0]
  41db6d:	arpl   WORD PTR [ecx+esi*2+0x6db3aead],bx
  41db74:	inc    esi
  41db75:	jg     0x41db38
  41db77:	inc    eax
  41db78:	test   al,0x41
  41db7a:	adc    ecx,eax
  41db7c:	xor    edx,ecx
  41db7e:	fcomp  DWORD PTR [edx+0x6fe94149]
  41db84:	repz mov cl,BYTE PTR [ebx-0x60]
  41db88:	sub    DWORD PTR ds:0xe5ec476e,ebx
  41db8e:	add    bh,cl
  41db90:	mov    ecx,0xd167719f
  41db95:	mov    al,ds:0x1638b6ce
  41db9a:	pop    esi
  41db9b:	push   ebx
  41db9c:	sar    DWORD PTR [ebp+0x56],cl
  41db9f:	push   edi
  41dba0:	jmp    0x41dbc1
  41dba2:	dec    ebp
  41dba3:	shl    bl,cl
  41dba5:	sar    BYTE PTR [ebx+eiz*2+0x47268992],cl
  41dbac:	push   cs
  41dbad:	in     eax,0x42
  41dbaf:	shr    BYTE PTR [ecx+0x1f066cbe],cl
  41dbb5:	loop   0x41db42
  41dbb7:	pop    edx
  41dbb8:	xor    BYTE PTR [eax],0x1c
  41dbbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbbc:	pop    ss
  41dbbd:	jo     0x41dc15
  41dbbf:	push   ebp
  41dbc0:	into   
  41dbc1:	(bad)  
  41dbc2:	pop    ss
  41dbc3:	popa   
  41dbc4:	outs   dx,BYTE PTR ds:[esi]
  41dbc5:	cmp    eax,0x2549077f
  41dbca:	rcr    DWORD PTR [eax+eiz*1-0x50],1
  41dbce:	mov    ebp,0x23b1a14e
  41dbd3:	in     eax,dx
  41dbd4:	jb     0x41dbb0
  41dbd6:	ins    DWORD PTR es:[edi],dx
  41dbd7:	out    0xec,al
  41dbd9:	lahf   
  41dbda:	dec    esi
  41dbdb:	push   0x5b
  41dbdd:	mov    eax,0x94fe39b8
  41dbe2:	stos   BYTE PTR es:[edi],al
  41dbe3:	cmp    al,0xe4
  41dbe5:	push   0xfffffff4
  41dbe7:	repz fdivr QWORD PTR [ecx-0x74]
  41dbeb:	xchg   BYTE PTR [eax+ecx*1+0x4a77993],al
  41dbf2:	jge    0x41dbe2
  41dbf4:	adc    eax,0x95780c54
  41dbf9:	pop    esp
  41dbfa:	mov    ecx,0x11c4959b
  41dbff:	idiv   BYTE PTR [eax]
  41dc01:	scas   al,BYTE PTR es:[edi]
  41dc02:	xor    DWORD PTR [edi-0x6],esp
  41dc05:	les    eax,FWORD PTR [esi]
  41dc07:	aaa    
  41dc08:	jnp    0x41dbe1
  41dc0a:	cmp    esp,DWORD PTR [ecx]
  41dc0c:	test   al,0x18
  41dc0e:	or     DWORD PTR [esi+0x41],0xe0674520
  41dc15:	ficom  DWORD PTR [esi+0x50be54f6]
  41dc1b:	inc    ecx
  41dc1c:	ficom  DWORD PTR [ecx]
  41dc1e:	in     eax,dx
  41dc1f:	je     0x41dbb9
  41dc21:	pop    ecx
  41dc22:	mov    ds:0xce55b059,al
  41dc27:	out    0x4c,al
  41dc29:	sbb    eax,0x6b976677
  41dc2e:	jg     0x41dbfe
  41dc30:	mov    edx,0x8273bb8
  41dc35:	mov    ecx,0xefc8448d
  41dc3a:	dec    ecx
  41dc3b:	jbe    0x41dc05
  41dc3d:	cmp    eax,0x52fea7b2
  41dc42:	js     0x41dcb5
  41dc44:	mov    gs,WORD PTR [ebx+0x2b67b5b]
  41dc4a:	popf   
  41dc4b:	jbe    0x41dc91
  41dc4d:	lods   eax,DWORD PTR ds:[esi]
  41dc4e:	xchg   DWORD PTR ds:0x4548beed,edi
  41dc54:	pusha  
  41dc55:	scas   eax,DWORD PTR es:[edi]
  41dc56:	scas   eax,DWORD PTR es:[edi]
  41dc57:	jg     0x41dc7e
  41dc59:	pop    ebx
  41dc5a:	mov    edx,0xb18ebdc1
  41dc5f:	sbb    eax,0x12258fb2
  41dc64:	out    dx,al
  41dc65:	lock jae 0x41dc85
  41dc68:	js     0x41dccf
  41dc6a:	mov    DWORD PTR [ecx],ebp
  41dc6c:	push   es
  41dc6d:	imul   ebp,DWORD PTR [ebx-0x3eeea804],0x7b848322
  41dc77:	test   eax,0xa03b8b3d
  41dc7c:	in     eax,dx
  41dc7d:	push   eax
  41dc7e:	xor    eax,0xd4fcffc
  41dc83:	jbe    0x41dc11
  41dc85:	icebp  
  41dc86:	popa   
  41dc87:	jbe    0x41dcf5
  41dc89:	push   0x25
  41dc8b:	adc    eax,0xe84aef9d
  41dc90:	clc    
  41dc91:	xor    DWORD PTR [ebp+0x5e],eax
  41dc94:	pop    ds
  41dc95:	push   edx
  41dc96:	sub    eax,0xef4ef05d
  41dc9b:	(bad)  
  41dc9c:	retf   0x3c1d
  41dc9f:	frstor [esp+eax*8+0x1e]
  41dca3:	ret    0xe3f
  41dca6:	mov    dl,0x40
  41dca8:	xchg   edx,eax
  41dca9:	out    dx,al
  41dcaa:	and    edi,DWORD PTR [edx-0x1abbabe7]
  41dcb0:	jbe    0x41dc69
  41dcb2:	pop    es
  41dcb3:	xor    DWORD PTR [esi-0x72fa306b],edi
  41dcb9:	cwde   
  41dcba:	lock ret 
  41dcbc:	shr    ecx,0xae
  41dcbf:	(bad)  
  41dcc0:	in     eax,0x6d
  41dcc2:	test   BYTE PTR [eax],al
  41dcc4:	cmp    cl,BYTE PTR [ecx]
  41dcc6:	sbb    BYTE PTR [ecx-0x7d781a36],0xe4
  41dccd:	and    dh,al
  41dccf:	sub    esp,DWORD PTR [eax+ebx*1]
  41dcd2:	retf   0x81c2
  41dcd5:	add    eax,0x8f66daa
  41dcda:	icebp  
  41dcdb:	fidiv  WORD PTR [eax+0x68]
  41dcde:	mov    eax,0x80598245
  41dce3:	clc    
  41dce4:	or     ch,ah
  41dce6:	sahf   
  41dce7:	sbb    dh,0x13
  41dcea:	jg     0x41dd0b
  41dcec:	and    DWORD PTR [ebp-0x4a],ebp
  41dcef:	jno    0x41dc94
  41dcf1:	jge    0x41dcd8
  41dcf3:	lea    edi,[edi+0x59]
  41dcf6:	lock xor BYTE PTR [eax],0x56
  41dcfa:	sub    BYTE PTR [esi-0x7c6a1aeb],cl
  41dd00:	xor    al,0x2c
  41dd02:	outs   dx,BYTE PTR ds:[esi]
  41dd03:	cdq    
  41dd04:	mov    ds,WORD PTR gs:[eax+0x14019316]
  41dd0b:	in     eax,dx
  41dd0c:	inc    edx
  41dd0d:	cdq    
  41dd0e:	cmp    dl,al
  41dd10:	daa    
  41dd11:	xchg   edi,eax
  41dd12:	inc    ebx
  41dd13:	fsub   DWORD PTR [edx-0x6ab29f10]
  41dd19:	xchg   esp,eax
  41dd1a:	xor    al,bh
  41dd1c:	(bad)  
  41dd1d:	cmp    BYTE PTR [esp+ecx*4],dl
  41dd20:	xchg   al,bh
  41dd22:	jnp    0x41dce0
  41dd24:	sbb    cl,BYTE PTR [ebx]
  41dd26:	jnp    0x41dd2d
  41dd28:	ret    
  41dd29:	xchg   esp,eax
  41dd2a:	popa   
  41dd2b:	adc    ch,BYTE PTR [ebx]
  41dd2d:	push   0xffffff87
  41dd2f:	add    BYTE PTR [ebx+0x5c],al
  41dd32:	mov    al,ds:0x585425b8
  41dd37:	add    cl,BYTE PTR [ecx]
  41dd39:	fstp   DWORD PTR [edx]
  41dd3b:	pop    eax
  41dd3c:	mov    WORD PTR [edx+0x51],?
  41dd3f:	mov    ebp,0x4c27e1fb
  41dd44:	xchg   ecx,eax
  41dd45:	cmp    DWORD PTR [edx-0x3177c36b],eax
  41dd4b:	into   
  41dd4c:	fisub  DWORD PTR ds:0x608dab39
  41dd52:	mov    ds:0xbe0098aa,eax
  41dd57:	adc    dl,BYTE PTR [edi]
  41dd59:	sub    al,0xc8
  41dd5b:	into   
  41dd5c:	inc    esp
  41dd5d:	outs   dx,BYTE PTR ds:[esi]
  41dd5e:	fs inc esp
  41dd60:	push   ss
  41dd61:	ins    BYTE PTR es:[edi],dx
  41dd62:	xchg   dl,al
  41dd64:	cmp    edx,DWORD PTR [esp+eax*4+0x4c0da5ea]
  41dd6b:	inc    ecx
  41dd6c:	out    0xcc,eax
  41dd6e:	shr    BYTE PTR ds:0x6791da32,cl
  41dd74:	dec    ebp
  41dd75:	pop    esi
  41dd76:	(bad)  
  41dd77:	and    al,0xe8
  41dd79:	rcr    dl,0x9f
  41dd7c:	jp     0x41ddac
  41dd7e:	xor    al,0x8e
  41dd80:	or     dh,ch
  41dd82:	or     eax,DWORD PTR [eax-0x2f8e295e]
  41dd88:	(bad)  
  41dd89:	mov    eax,ds:0x75e55ca6
  41dd8e:	test   cl,bl
  41dd90:	imul   ebp,DWORD PTR [ebx+0x59f5841f],0x53
  41dd97:	iret   
  41dd98:	or     BYTE PTR [esi],ah
  41dd9a:	popf   
  41dd9b:	hlt    
  41dd9c:	lea    esi,[ebp+ebx*2+0x49]
  41dda0:	pop    ecx
  41dda1:	sti    
  41dda2:	xchg   edx,eax
  41dda3:	je     0x41ddd3
  41dda5:	xlat   BYTE PTR ds:[ebx]
  41dda6:	call   0x39f1:0xf19fa7d6
  41ddad:	ja     0x41ddf6
  41ddaf:	xor    dh,bl
  41ddb1:	mov    ebx,0xbbb149b8
  41ddb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddb7:	pop    ecx
  41ddb8:	xor    BYTE PTR ds:0xda2aabc7,ch
  41ddbe:	imul   ecx,DWORD PTR [ecx+0x25a73854],0xffffffc6
  41ddc5:	fisttp WORD PTR [esi]
  41ddc7:	push   ebp
  41ddc8:	pop    edi
  41ddc9:	pushf  
  41ddca:	loop   0x41de2d
  41ddcc:	and    esp,DWORD PTR [edi+0x13]
  41ddcf:	nop
  41ddd0:	inc    edx
  41ddd1:	mov    ds:0x226e2379,al
  41ddd6:	fmul   QWORD PTR [edx+eiz*2]
  41ddd9:	mov    esi,0x59bf51b1
  41ddde:	js     0x41de19
  41dde0:	pop    ebp
  41dde1:	sbb    DWORD PTR [esi+0x7c5c5f00],ebp
  41dde7:	jb     0x41dda4
  41dde9:	out    dx,eax
  41ddea:	xor    esi,DWORD PTR [esi+0x3637c0e2]
  41ddf0:	xchg   edi,eax
  41ddf1:	inc    esp
  41ddf2:	mov    esp,0x24bf654f
  41ddf7:	push   0xd4d7de93
  41ddfc:	nop
  41ddfd:	and    BYTE PTR [eax-0x79],ch
  41de00:	inc    edi
  41de01:	jns    0x41ddfb
  41de03:	je     0x41dd8c
  41de05:	adc    DWORD PTR [ecx-0x73ea8f9],edx
  41de0b:	ins    DWORD PTR es:[edi],dx
  41de0c:	push   esp
  41de0d:	jno    0x41de4c
  41de0f:	lods   eax,DWORD PTR ds:[esi]
  41de10:	adc    edi,DWORD PTR [edi]
  41de12:	in     eax,dx
  41de13:	mov    edi,0xbef95e3a
  41de18:	inc    ebp
  41de19:	pushf  
  41de1a:	mov    es,WORD PTR [eax+0x38]
  41de1d:	int    0x41
  41de1f:	cmp    al,0xab
  41de21:	sub    al,0x3
  41de23:	or     al,0x3d
  41de25:	fsubr  QWORD PTR [edx-0x37]
  41de28:	mov    edi,0xab815b37
  41de2d:	mov    bl,0x87
  41de2f:	loopne 0x41de7c
  41de31:	sub    al,0xd3
  41de33:	inc    eax
  41de34:	add    dl,BYTE PTR [esi]
  41de36:	jno    0x41de96
  41de38:	fiadd  DWORD PTR [edi+0x73]
  41de3b:	adc    BYTE PTR [edi],dl
  41de3d:	mov    gs,WORD PTR ds:0xa8331e36
  41de43:	mov    eax,ds:0x1519a0de
  41de48:	gs push ebp
  41de4a:	ins    DWORD PTR es:[edi],dx
  41de4b:	xor    ebp,DWORD PTR [edx-0x6a483fd1]
  41de51:	rcl    DWORD PTR [edx+0x3],0x5f
  41de55:	and    dh,BYTE PTR [eax]
  41de57:	stc    
  41de58:	scas   eax,DWORD PTR es:[edi]
  41de59:	or     al,0xc0
  41de5b:	or     ah,ch
  41de5d:	xchg   ecx,eax
  41de5e:	loop   0x41de6d
  41de60:	in     eax,0xf
  41de62:	int3   
  41de63:	push   edx
  41de64:	mov    esi,DWORD PTR [esi+0x3f]
  41de67:	loopne 0x41de4c
  41de69:	inc    esi
  41de6a:	push   esi
  41de6b:	inc    ebp
  41de6c:	fsub   st(7),st
  41de6e:	aaa    
  41de6f:	jp     0x41de68
  41de71:	das    
  41de72:	mov    ds:0x3c31bf4f,eax
  41de77:	retf   
  41de78:	inc    ecx
  41de79:	mov    eax,ds:0x68037a63
  41de7e:	ins    BYTE PTR es:[edi],dx
  41de7f:	out    0x97,eax
  41de81:	mov    ebp,0x97232946
  41de86:	mov    ebx,0xd4317697
  41de8b:	cmp    eax,0xf8c3db09
  41de90:	fld    TBYTE PTR [ebp-0x4994bed4]
  41de96:	ss test al,0x3e
  41de99:	push   ebx
  41de9a:	ret    0x9de1
  41de9d:	cs xchg edx,edx
  41dea0:	sub    esp,DWORD PTR [edx-0x7abf653a]
  41dea6:	leave  
  41dea7:	outs   dx,DWORD PTR ds:[esi]
  41dea8:	mov    edx,0x77a0dce5
  41dead:	daa    
  41deae:	adc    al,0xb4
  41deb0:	jnp    0x41dec2
  41deb2:	push   0x21
  41deb4:	pop    ds
  41deb5:	sub    edx,DWORD PTR [ecx+0x1e146dca]
  41debb:	aam    0x81
  41debd:	mov    dl,0xb1
  41debf:	inc    esp
  41dec0:	dec    eax
  41dec1:	adc    eax,0x1580af9e
  41dec6:	popa   
  41dec7:	mov    ?,esp
  41dec9:	and    DWORD PTR [edi-0x46bff6ec],ebp
  41decf:	push   esi
  41ded0:	aas    
  41ded1:	pop    ebx
  41ded2:	outs   dx,DWORD PTR ds:[esi]
  41ded3:	or     bh,BYTE PTR [eax+0x7]
  41ded6:	pop    edi
  41ded7:	mov    al,0xff
  41ded9:	push   ebp
  41deda:	(bad)  
  41dedb:	addr16 pop ecx
  41dedd:	(bad)  
  41dede:	mov    esi,0xcc20ce74
  41dee3:	rcr    DWORD PTR [eax],1
  41dee5:	rol    BYTE PTR [esp+eax*1],0x15
  41dee9:	sbb    eax,0x31610d3d
  41deee:	idiv   BYTE PTR [ecx]
  41def0:	js     0x41ded7
  41def2:	out    dx,al
  41def3:	mov    al,ds:0xee012ebe
  41def8:	xchg   esi,eax
  41def9:	mov    dl,BYTE PTR [edx+esi*2-0x6d]
  41defd:	mov    bh,0x15
  41deff:	loop   0x41dec1
  41df01:	mov    cl,0x4a
  41df03:	ror    BYTE PTR [edx-0x3c],1
  41df06:	in     eax,dx
  41df07:	mov    ebx,0xff9e985b
  41df0c:	xchg   DWORD PTR ds:[eax+0xc9db336],edx
  41df13:	jmp    0xbe11:0x729cde2e
  41df1a:	jo     0x41deca
  41df1c:	lock and al,0x9c
  41df1f:	loope  0x41df32
  41df21:	mov    dl,0x33
  41df23:	and    BYTE PTR [eax+ebp*1],dh
  41df26:	xchg   ebx,eax
  41df27:	popf   
  41df28:	idiv   BYTE PTR [edx*8-0xa39ef00]
  41df2f:	arpl   WORD PTR [edx+0x7aae9731],di
  41df35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df36:	push   edi
  41df37:	or     DWORD PTR [eax-0xd6c7c1c],edi
  41df3d:	rcr    BYTE PTR [bx+di+0x5e],cl
  41df41:	and    al,0xbb
  41df43:	sub    ebx,DWORD PTR [edx+ebx*2+0x61]
  41df47:	rcr    DWORD PTR fs:[eax+0x78],1
  41df4b:	in     eax,dx
  41df4c:	cmp    al,0x80
  41df4e:	std    
  41df4f:	shl    BYTE PTR cs:[ecx+0x64],cl
  41df53:	sub    cl,BYTE PTR [edx-0x51]
  41df56:	inc    esi
  41df57:	or     DWORD PTR [esi],eax
  41df59:	arpl   WORD PTR [eax+0x61f23cf0],ax
  41df5f:	(bad)  
  41df60:	imul   BYTE PTR [ebx]
  41df62:	enter  0xedec,0xb9
  41df66:	xchg   ebp,eax
  41df67:	xor    esi,edi
  41df69:	jnp    0x41dfc5
  41df6b:	adc    DWORD PTR [eax-0x6d],ebx
  41df6e:	or     al,0xf9
  41df70:	adc    BYTE PTR [edi+0x1a],0x28
  41df74:	mov    al,BYTE PTR [ebx]
  41df76:	shl    BYTE PTR [eax],0x83
  41df79:	mov    edi,0xb5bfe15
  41df7e:	mov    ah,0x30
  41df80:	clc    
  41df81:	les    edi,FWORD PTR [esi+0x257acb81]
  41df87:	aas    
  41df88:	int3   
  41df89:	vpminsb xmm6,xmm6,XMMWORD PTR [eax+esi*2+0x28]
  41df90:	pop    ecx
  41df91:	mov    bl,0x37
  41df93:	(bad)  
  41df94:	jns    0x41df47
  41df96:	push   0xfb7b901e
  41df9b:	call   0x43e3f5d0
  41dfa0:	pop    esp
  41dfa1:	adc    DWORD PTR [ecx-0x66c13da3],eax
  41dfa7:	test   dl,0x19
  41dfaa:	aam    0x69
  41dfac:	dec    ebx
  41dfad:	cmc    
  41dfae:	push   cs
  41dfaf:	cmp    dh,0xe6
  41dfb2:	pop    ds
  41dfb3:	mov    ecx,0xb5f63da5
  41dfb8:	adc    BYTE PTR [ebx+eax*2+0x7fe98c1c],ah
  41dfbf:	aam    0x80
  41dfc1:	ret    0x41a5
  41dfc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfc5:	sbb    eax,0x3086eb04
  41dfca:	in     eax,0xf
  41dfcc:	sbb    cl,BYTE PTR [edi+edx*1-0x35]
  41dfd0:	pop    ds
  41dfd1:	sub    esi,esi
  41dfd3:	xchg   ebx,eax
  41dfd4:	(bad)  
  41dfd5:	mov    bl,dl
  41dfd7:	int    0x86
  41dfd9:	(bad)  [esi-0x67d86231]
  41dfdf:	int    0x9
  41dfe1:	std    
  41dfe2:	out    dx,eax
  41dfe3:	rol    eax,1
  41dfe5:	add    ecx,esi
  41dfe7:	cs test eax,0xd4767659
  41dfed:	mov    ebx,0x17426303
  41dff2:	mov    BYTE PTR [ecx+eax*8-0x4e8a47cb],bl
  41dff9:	fnstcw WORD PTR [ebp-0x3812f029]
  41dfff:	repnz in eax,dx
  41e001:	lds    edx,FWORD PTR [ecx+0x5c]
  41e004:	add    BYTE PTR [ebx],0x4f
  41e007:	xlat   BYTE PTR ds:[ebx]
  41e008:	imul   ecx,DWORD PTR [ebp-0x693b595b],0xffffff93
  41e00f:	pop    esp
  41e010:	pop    eax
  41e011:	leave  
  41e012:	hlt    
  41e013:	mov    ebp,edx
  41e015:	test   DWORD PTR [ebp+edi*8-0x23],0xe598cc09
  41e01d:	and    eax,eax
  41e01f:	retf   
  41e020:	test   eax,0xd8313e2f
  41e025:	and    DWORD PTR es:[edi-0x4d],0xffffff8a
  41e02a:	dec    ecx
  41e02b:	in     al,dx
  41e02c:	aas    
  41e02d:	out    dx,eax
  41e02e:	dec    edx
  41e02f:	scas   eax,DWORD PTR es:[edi]
  41e030:	adc    ch,BYTE PTR [esi]
  41e032:	dec    edi
  41e033:	mov    DWORD PTR [ecx-0x563dba81],eax
  41e039:	leave  
  41e03a:	cmp    DWORD PTR ds:0xa1036546,edi
  41e040:	int    0x3d
  41e042:	lds    edx,FWORD PTR [esi+0x2a]
  41e045:	call   0x2f43e8fe
  41e04a:	xor    DWORD PTR [edx],0xc01716c0
  41e050:	fs jns 0x41e048
  41e053:	dec    esi
  41e054:	and    eax,0x39430cd0
  41e059:	sbb    dh,BYTE PTR [edi-0x3d085de7]
  41e05f:	rcl    BYTE PTR [esi+0x35],0xc5
  41e063:	pop    ecx
  41e064:	and    eax,0x5e3d82dd
  41e069:	dec    esi
  41e06a:	lods   eax,DWORD PTR fs:[esi]
  41e06c:	fisubr DWORD PTR [esp+eiz*8+0x6ca798fd]
  41e073:	inc    ebx
  41e074:	ss pop ebp
  41e076:	lock ror al,1
  41e079:	pop    es
  41e07a:	jl     0x41e09b
  41e07c:	jmp    0x41e068
  41e07e:	mov    ebx,0x66434cfc
  41e083:	jmp    0x5c1235a0
  41e088:	push   0x3
  41e08a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e08b:	repz out dx,al
  41e08d:	xchg   edx,eax
  41e08e:	mov    ebx,0xee8914c1
  41e093:	adc    esp,DWORD PTR [edx-0x16]
  41e096:	push   eax
  41e097:	fstp   DWORD PTR [eax-0x6a06e34]
  41e09d:	test   eax,0x712aac4a
  41e0a2:	std    
  41e0a3:	outs   dx,DWORD PTR ds:[esi]
  41e0a4:	ret    0x55a5
  41e0a7:	adc    al,0xd8
  41e0a9:	ds callw 0xd441
  41e0ae:	arpl   WORD PTR [edx+0x4b],di
  41e0b1:	scas   eax,DWORD PTR es:[edi]
  41e0b2:	push   es
  41e0b3:	in     al,0x43
  41e0b5:	dec    ecx
  41e0b6:	sub    cl,BYTE PTR [ecx+eiz*8+0x61f8a472]
  41e0bd:	push   ss
  41e0be:	sbb    eax,0xe0ad153a
  41e0c3:	xchg   esp,eax
  41e0c4:	and    al,0x3c
  41e0c7:	cdq    
  41e0c8:	sub    eax,0x22c1c658
  41e0cd:	loop   0x41e148
  41e0cf:	rcl    cl,0x98
  41e0d2:	std    
  41e0d3:	ja     0x41e0b2
  41e0d5:	packsswb mm0,mm6
  41e0d8:	lods   al,BYTE PTR ds:[esi]
  41e0d9:	fisub  DWORD PTR [esi-0x57]
  41e0dc:	pop    edi
  41e0dd:	push   es
  41e0de:	pop    es
  41e0df:	pop    edx
  41e0e0:	lds    esp,FWORD PTR [esi]
  41e0e2:	pop    ss
  41e0e3:	pop    ebp
  41e0e4:	jbe    0x41e0dd
  41e0e6:	inc    esp
  41e0e7:	or     ah,BYTE PTR [ebp+0x49]
  41e0ea:	scas   eax,DWORD PTR es:[edi]
  41e0eb:	mov    esi,0xc554ef9a
  41e0f0:	fild   QWORD PTR ds:0x6b4a134e
  41e0f6:	je     0x41e105
  41e0f8:	adc    dh,BYTE PTR [edi-0x6a]
  41e0fb:	jge    0x41e172
  41e0fd:	pop    edi
  41e0fe:	inc    ebx
  41e0ff:	jno    0x41e0bc
  41e101:	sbb    BYTE PTR [esi],0x5
  41e104:	icebp  
  41e105:	cmp    dh,dh
  41e107:	push   cs
  41e108:	(bad)  
  41e109:	(bad)  
  41e10a:	add    al,0x54
  41e10c:	(bad)  ds:0x474f5d3
  41e112:	sub    BYTE PTR [ecx],bl
  41e114:	(bad)  
  41e115:	mov    ds:0x3d96c60f,al
  41e11a:	inc    ebx
  41e11b:	mov    cl,0xca
  41e11d:	test   DWORD PTR [ecx+0x28d19ad6],ebx
  41e123:	and    BYTE PTR [ebx+0x1fb7220],dl
  41e129:	and    al,0x76
  41e12b:	mov    dh,0x13
  41e12d:	push   esp
  41e12e:	dec    ebx
  41e12f:	sahf   
  41e130:	fdiv   DWORD PTR [ebx+0x57]
  41e133:	sbb    BYTE PTR [ebx+0x32],ah
  41e136:	les    edx,FWORD PTR ds:0x2534e8d0
  41e13c:	push   es
  41e13d:	adc    DWORD PTR [ebx+eax*4],ebp
  41e140:	imul   esp,DWORD PTR ds:0xab8be434,0x193b01ad
  41e14a:	push   ebx
  41e14b:	adc    al,0x66
  41e14d:	dec    esp
  41e14e:	mov    bh,0xda
  41e150:	in     eax,0xcf
  41e152:	(bad)  
  41e153:	sti    
  41e154:	lods   eax,DWORD PTR ds:[esi]
  41e155:	imul   ebp,DWORD PTR [edx-0x5d],0x71
  41e159:	mov    edx,0x4b6d0ebb
  41e15e:	imul   eax
  41e160:	mov    ebp,0x1320f096
  41e165:	sub    dl,BYTE PTR [edi-0x59]
  41e168:	adc    al,0xff
  41e16a:	test   DWORD PTR [ebp+0x3],0x17374ab8
  41e171:	mov    dl,BYTE PTR [eax-0x11d7c9e0]
  41e177:	ret    0xf33
  41e17a:	(bad)  
  41e17c:	lahf   
  41e17d:	dec    edi
  41e17e:	pop    ds
  41e17f:	mov    esi,0xab17e574
  41e184:	inc    ebx
  41e185:	imul   ecx,DWORD PTR [ebp+0x7],0x32
  41e189:	mov    dh,0x9c
  41e18b:	lods   al,BYTE PTR ds:[esi]
  41e18c:	cmp    ebx,edi
  41e18e:	mov    ebx,eax
  41e190:	push   ecx
  41e191:	mov    bh,BYTE PTR [edi-0x39]
  41e194:	ja     0x41e139
  41e196:	lods   eax,DWORD PTR ds:[esi]
  41e197:	ret    0xd007
  41e19a:	dec    ebx
  41e19b:	and    esi,DWORD PTR [esi]
  41e19d:	or     eax,0xbe4ec21e
  41e1a2:	shr    BYTE PTR [edx+0x21],1
  41e1a5:	sbb    eax,0xa19e73a
  41e1ab:	leave  
  41e1ac:	loopne 0x41e192
  41e1ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1af:	jb     0x41e225
  41e1b1:	mov    cl,0x7
  41e1b3:	mov    BYTE PTR [eax+0x2],dh
  41e1b6:	cmp    DWORD PTR [edx+0x1062b5a7],esi
  41e1bc:	icebp  
  41e1bd:	out    0x18,al
  41e1bf:	test   eax,edx
  41e1c1:	je     0x41e17c
  41e1c3:	push   ebp
  41e1c4:	(bad)  
  41e1c5:	ins    BYTE PTR es:[edi],dx
  41e1c6:	loopne 0x41e15e
  41e1c8:	fistp  WORD PTR [esi+0x1398cd0]
  41e1ce:	into   
  41e1cf:	ds mov eax,0xe900dee0
  41e1d5:	mov    esp,0x122d490a
  41e1da:	push   0xffffffd9
  41e1dc:	xor    ebx,ebp
  41e1de:	aam    0x49
  41e1e0:	cdq    
  41e1e1:	outs   dx,BYTE PTR ds:[esi]
  41e1e2:	or     al,0x46
  41e1e4:	mov    edi,0x559e4261
  41e1e9:	mov    edi,0x21d97f3a
  41e1ee:	xor    edi,DWORD PTR [ebx-0x2e]
  41e1f1:	or     DWORD PTR [ecx-0x7efb589b],0x16
  41e1f8:	(bad)  
  41e1f9:	fnsave ds:0x8407495c
  41e1ff:	pusha  
  41e200:	cmp    dl,BYTE PTR [ebx+edx*1-0xb]
  41e204:	dec    edx
  41e205:	lds    esp,FWORD PTR [ebp+0x1c]
  41e208:	out    dx,al
  41e209:	shr    BYTE PTR [eax-0x357428d2],cl
  41e20f:	push   esi
  41e210:	mov    cl,0xbb
  41e212:	pop    edx
  41e213:	rcr    DWORD PTR [edi],1
  41e215:	sahf   
  41e216:	lds    ebp,FWORD PTR cs:[eax-0x67]
  41e21a:	nop
  41e21b:	or     ah,al
  41e21d:	icebp  
  41e21e:	ins    BYTE PTR es:[edi],dx
  41e21f:	xchg   ecx,eax
  41e220:	loopne 0x41e1f8
  41e222:	inc    esp
  41e223:	stos   DWORD PTR es:[edi],eax
  41e224:	dec    ebp
  41e225:	icebp  
  41e226:	mov    cl,0xae
  41e228:	out    0x64,eax
  41e22a:	xlat   BYTE PTR ds:[ebx]
  41e22b:	pop    esi
  41e22c:	cmp    al,0x2f
  41e22e:	mov    dh,0x51
  41e230:	lods   al,BYTE PTR ds:[esi]
  41e231:	ss cmp eax,0xfe2ebf56
  41e237:	mov    edx,0xe9e652b0
  41e23c:	mov    bh,0x1e
  41e23e:	inc    edi
  41e23f:	adc    BYTE PTR [ebx+0x4b],al
  41e242:	push   ds
  41e243:	push   0xfac76661
  41e248:	fisubr DWORD PTR [edx]
  41e24a:	aaa    
  41e24b:	std    
  41e24c:	and    ah,ah
  41e24e:	bound  esp,QWORD PTR [edx]
  41e250:	sbb    DWORD PTR [ecx-0x6a0f8d4e],ebp
  41e256:	mov    dl,0x98
  41e258:	daa    
  41e259:	mov    al,ds:0x9c4a1d5
  41e25e:	fdiv   QWORD PTR [ebp+0x69]
  41e261:	push   ebx
  41e262:	dec    ecx
  41e263:	pop    edx
  41e264:	jns    0x41e282
  41e266:	cwde   
  41e267:	(bad)  
  41e268:	mov    bh,0xa5
  41e26a:	(bad)  
  41e26b:	mov    al,0xc
  41e26d:	jg     0x41e290
  41e26f:	sub    esp,DWORD PTR [edx]
  41e271:	in     eax,0xfd
  41e273:	and    bl,BYTE PTR [ebx+eiz*4]
  41e276:	sti    
  41e277:	inc    esi
  41e278:	mov    esi,0x1e7f2429
  41e27d:	inc    edi
  41e27e:	sub    eax,0x52dc68fe
  41e283:	ret    0x7f10
  41e286:	jmp    0xdc36e86b
  41e28b:	jmp    0x41e2d6
  41e28d:	jmp    0x41e222
  41e28f:	cld    
  41e290:	sbb    eax,0x6a79f8b
  41e295:	fsubr  DWORD PTR [eax-0x74]
  41e298:	adc    ah,BYTE PTR [ecx+0x53]
  41e29b:	sbb    dh,BYTE PTR [ebx]
  41e29d:	adc    DWORD PTR [edi-0x5],0x53e609f8
  41e2a4:	jge    0x41e2af
  41e2a6:	(bad)  
  41e2a7:	fistp  WORD PTR [ebx]
  41e2a9:	sahf   
  41e2aa:	test   DWORD PTR [esi],ebx
  41e2ac:	mov    BYTE PTR [ebx-0x2998afd8],ah
  41e2b2:	fldcw  WORD PTR [esi-0x41]
  41e2b5:	mov    dh,bl
  41e2b7:	mov    DWORD PTR [edx-0xd],edx
  41e2ba:	xchg   ebx,eax
  41e2bb:	inc    edx
  41e2bc:	loopne 0x41e32e
  41e2be:	loopne 0x41e2f0
  41e2c0:	fisttp DWORD PTR [edi+eiz*1+0x607bd0fe]
  41e2c7:	out    0x90,al
  41e2c9:	arpl   WORD PTR [eax-0x7d],di
  41e2cc:	adc    DWORD PTR [edi+ecx*2+0x78466428],esp
  41e2d3:	dec    ecx
  41e2d4:	mov    edi,esi
  41e2d6:	ja     0x41e2f0
  41e2d8:	lods   al,BYTE PTR ds:[esi]
  41e2d9:	bound  esi,QWORD PTR [eax*1-0x529b0a47]
  41e2e0:	add    bh,BYTE PTR [edi-0x612d4753]
  41e2e6:	scas   eax,DWORD PTR es:[edi]
  41e2e7:	xchg   BYTE PTR [eax-0x4f],dh
  41e2ea:	xchg   DWORD PTR [ebp+0xece3a46],ebx
  41e2f0:	push   ecx
  41e2f1:	mov    ?,WORD PTR [edi-0x8]
  41e2f4:	sbb    BYTE PTR [ebx],bl
  41e2f6:	and    bh,cl
  41e2f8:	shl    DWORD PTR ds:0x4c4e92bd,1
  41e2fe:	xor    dl,BYTE PTR [esi-0xc]
  41e301:	pop    es
  41e302:	mov    DWORD PTR [eax-0x139e07b3],ebx
  41e308:	mov    ebp,DWORD PTR [eax]
  41e30a:	ins    BYTE PTR es:[edi],dx
  41e30b:	jae    0x41e37e
  41e30d:	or     eax,0xa27d5ebe
  41e312:	push   ecx
  41e313:	push   ds
  41e314:	fmul   QWORD PTR [edi-0x30]
  41e317:	out    0x5,eax
  41e319:	mov    edi,0xfa0d08
  41e31e:	addr16 pop esp
  41e320:	fld    QWORD PTR [eax]
  41e322:	les    ebp,FWORD PTR [ebp+0x330fe85d]
  41e328:	mov    DWORD PTR [ebx+0xf3d00f2],0xf70941e
  41e332:	test   DWORD PTR [esi],ebp
  41e334:	add    BYTE PTR [eax],al
  41e336:	add    BYTE PTR [ebx-0x7af00006],al
  41e33c:	and    eax,0x8b000000
  41e341:	inc    ebp
  41e342:	cld    
  41e343:	movsx  eax,BYTE PTR [eax]
  41e346:	cdq    
  41e347:	add    eax,ebx
  41e349:	adc    edx,0xffffffff
  41e34c:	xor    eax,edi
  41e34e:	xor    edx,0x0
  41e351:	cmp    eax,0x70941e1c
  41e356:	jne    0x41e365
  41e35c:	cmp    edx,0xffffffff
  41e35f:	je     0x41e37c
  41e365:	mov    eax,DWORD PTR [ebp-0x10]
  41e368:	xor    eax,ecx
  41e36a:	mov    edx,0xffcd8d0d
  41e36f:	sub    edx,eax
  41e371:	add    DWORD PTR [ebp-0x4],edx
  41e374:	mov    eax,DWORD PTR [ebp-0x4]
  41e377:	jmp    0x41bf5a
  41e37c:	mov    eax,DWORD PTR [ebp-0x14]
  41e37f:	mov    eax,DWORD PTR [eax]
  41e381:	mov    edx,DWORD PTR [ebp-0x4]
  41e384:	mov    edx,DWORD PTR [edx+0x3c]
  41e387:	lea    eax,[edx+eax*8+0x78]
  41e38b:	mov    edx,DWORD PTR [ebp-0x4]
  41e38e:	mov    eax,DWORD PTR [eax+edx*1]
  41e391:	mov    DWORD PTR [ebp-0x8],eax
  41e394:	mov    eax,DWORD PTR [ebp+0x8]
  41e397:	xor    eax,ecx
  41e399:	add    eax,esi
  41e39b:	mov    DWORD PTR [ebp-0x14],eax
  41e39e:	mov    eax,DWORD PTR [ebp+0x8]
  41e3a1:	mov    edx,DWORD PTR [ebp-0x8]
  41e3a4:	xor    eax,ecx
  41e3a6:	add    eax,esi
  41e3a8:	cmp    edx,eax
  41e3aa:	jne    0x41e3c8
  41e3b0:	mov    eax,DWORD PTR [ebp+0xc]
  41e3b3:	xor    eax,ecx
  41e3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3b8:	add    eax,esi
  41e3ba:	imul   eax,ecx
  41e3bd:	mov    DWORD PTR [ebp-0x8],eax
  41e3c0:	push   DWORD PTR [ebp+0x18]
  41e3c3:	jmp    0x4207e6
  41e3c8:	mov    eax,DWORD PTR [ebp-0x8]
  41e3cb:	mov    ecx,DWORD PTR [ebp-0x4]
  41e3ce:	jmp    0x420791
  41e3d3:	test   BYTE PTR [eax+0x3d],cl
  41e3d6:	lock mov cl,0x80
  41e3d9:	or     BYTE PTR [eax],0x6f
  41e3dc:	enter  0xd93f,0xa9
  41e3e0:	test   esi,ebx
  41e3e2:	xor    edx,DWORD PTR [ecx]
  41e3e4:	aad    0x82
  41e3e6:	sbb    ecx,0x5c
  41e3e9:	add    DWORD PTR [ebx-0x7de30ace],0x2b
  41e3f0:	scas   al,BYTE PTR es:[edi]
  41e3f1:	and    BYTE PTR [eax],bl
  41e3f3:	xor    al,0xb2
  41e3f5:	jmp    0x41e3db
  41e3f7:	in     eax,dx
  41e3f8:	or     eax,0xd33d2cf3
  41e3fd:	test   dl,0x8f
  41e400:	icebp  
  41e401:	and    DWORD PTR gs:[edx],eax
  41e404:	mov    gs,WORD PTR [edi]
  41e406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e407:	mov    ebp,0xa5acbc51
  41e40c:	mov    cl,BYTE PTR [esp+eiz*8-0x27]
  41e410:	iret   
  41e411:	aad    0x11
  41e413:	in     al,0xe5
  41e415:	sbb    bh,bh
  41e417:	sub    esi,ebx
  41e419:	jae    0x41e3aa
  41e41b:	shr    BYTE PTR [edi-0x52],1
  41e41e:	mov    dl,0x7e
  41e420:	or     bl,BYTE PTR [ecx+0x16d70940]
  41e426:	mov    cl,0xd0
  41e428:	(bad)  
  41e429:	push   cs
  41e42a:	fld    DWORD PTR [edi-0x569d5865]
  41e430:	add    ebx,DWORD PTR [edi+0x53b44a99]
  41e436:	mov    ecx,0x454511fc
  41e43b:	jecxz  0x41e427
  41e43d:	cdq    
  41e43e:	or     al,0x28
  41e440:	cmp    BYTE PTR [esi],ah
  41e442:	push   eax
  41e443:	cld    
  41e444:	push   ebp
  41e445:	lock jmp 0xfb37:0x9d3e30b1
  41e44d:	push   es
  41e44e:	adc    edi,DWORD PTR [ebx+0x12eaa401]
  41e454:	xor    BYTE PTR [edi+0x7f0e30f],ch
  41e45a:	and    al,0x73
  41e45c:	gs cs push sp
  41e460:	loop   0x41e466
  41e462:	jge    0x41e4a3
  41e464:	xor    edx,esp
  41e466:	stos   BYTE PTR es:[edi],al
  41e467:	hlt    
  41e468:	imul   ebp,DWORD PTR [ebp+0x76],0x643971c
  41e46f:	fwait
  41e470:	rcl    BYTE PTR [eax],0xf1
  41e473:	out    0x65,eax
  41e475:	mov    cl,0xc3
  41e477:	xor    BYTE PTR [esi],dh
  41e479:	call   0x469ae88d
  41e47e:	xchg   esp,eax
  41e47f:	je     0x41e49b
  41e481:	xor    al,0xfe
  41e483:	push   ds
  41e484:	mov    ds:0xd63f2351,al
  41e489:	inc    esp
  41e48a:	ss out 0x90,eax
  41e48d:	xlat   BYTE PTR ds:[ebx]
  41e48e:	sub    dh,BYTE PTR [edx+0x30]
  41e491:	add    al,0xa6
  41e493:	cdq    
  41e494:	sahf   
  41e495:	sbb    BYTE PTR [ebx],dh
  41e497:	popf   
  41e498:	push   0xffffffab
  41e49a:	rol    BYTE PTR [ecx+0x1f],0x6f
  41e49e:	bound  esi,QWORD PTR [edi+0x9b7eec5]
  41e4a4:	(bad)  
  41e4a5:	fcomp  DWORD PTR [esi+ebp*4+0x1cb5b923]
  41e4ac:	mov    al,0x1b
  41e4ae:	xchg   DWORD PTR [edx],eax
  41e4b0:	icebp  
  41e4b1:	ins    BYTE PTR es:[edi],dx
  41e4b2:	inc    eax
  41e4b3:	rcr    BYTE PTR [eax],0xdf
  41e4b6:	fstp   st(7)
  41e4b8:	xchg   esp,eax
  41e4b9:	das    
  41e4ba:	or     eax,0x789876d3
  41e4bf:	fst    st(2)
  41e4c1:	inc    edi
  41e4c2:	repz xchg ecx,eax
  41e4c4:	xor    eax,0x25a40a69
  41e4c9:	int    0x6
  41e4cb:	dec    edi
  41e4cc:	push   0xb9895875
  41e4d1:	into   
  41e4d2:	hlt    
  41e4d3:	loop   0x41e48c
  41e4d5:	xchg   ebx,eax
  41e4d6:	cmp    dh,bh
  41e4d8:	mov    esp,0x5705b29e
  41e4dd:	popf   
  41e4de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4df:	push   edi
  41e4e0:	(bad)  
  41e4e1:	shl    DWORD PTR [edi-0x772d83dd],cl
  41e4e7:	cld    
  41e4e8:	loope  0x41e47f
  41e4ea:	mov    eax,ds:0xab34fd2a
  41e4ef:	mov    al,0x15
  41e4f1:	inc    ecx
  41e4f2:	jecxz  0x41e4a2
  41e4f4:	int3   
  41e4f5:	bound  eax,QWORD PTR [edi]
  41e4f7:	enter  0x99f4,0xd
  41e4fb:	mov    cl,0x9b
  41e4fd:	outs   dx,BYTE PTR ds:[esi]
  41e4fe:	xor    dl,bl
  41e500:	xchg   DWORD PTR [eax+ebp*1-0x57132eb2],edi
  41e507:	xchg   dl,bl
  41e509:	and    DWORD PTR [ecx+0x4f9ea5a3],ebp
  41e50f:	out    dx,al
  41e510:	mov    eax,0x937b096b
  41e515:	push   edx
  41e516:	dec    ecx
  41e517:	imul   eax,edi,0x1e
  41e51a:	jl     0x41e56a
  41e51c:	stos   BYTE PTR es:[edi],al
  41e51d:	add    ebp,DWORD PTR [edi]
  41e51f:	xchg   edx,eax
  41e520:	jb     0x41e4fc
  41e522:	dec    esi
  41e523:	hlt    
  41e524:	jno    0x41e4f1
  41e526:	fdiv   st(7),st
  41e528:	imul   ebp,DWORD PTR [ebx+edi*1-0x26],0xffffffdb
  41e52d:	loopne 0x41e55c
  41e52f:	pop    ds
  41e530:	rcl    DWORD PTR ds:0xf3ac8ee5,0x10
  41e537:	pop    ebx
  41e538:	mov    edi,0x64fc684d
  41e53d:	loope  0x41e4f2
  41e53f:	sub    al,0x6b
  41e541:	or     al,0x9d
  41e543:	mov    edi,0xdcbef25b
  41e548:	mov    al,ds:0x285fa298
  41e54d:	cli    
  41e54e:	jmp    0x41e50d
  41e550:	pop    ebx
  41e551:	ror    DWORD PTR [ecx+eiz*1+0x6adb5e8f],cl
  41e558:	popf   
  41e559:	(bad)  
  41e55a:	push   cs
  41e55b:	loop   0x41e4f0
  41e55d:	jmp    0x41e570
  41e55f:	adc    DWORD PTR [edi+0x76257092],ecx
  41e565:	pop    ss
  41e566:	pushf  
  41e567:	cmp    ecx,DWORD PTR [esi-0x10]
  41e56a:	imul   edx,DWORD PTR [ecx],0xffffffb5
  41e56d:	ret    0xf38c
  41e570:	pop    DWORD PTR [eax+0x43]
  41e573:	scas   al,BYTE PTR es:[edi]
  41e574:	push   edx
  41e575:	jnp    0x41e5b6
  41e577:	dec    esp
  41e578:	mov    dh,BYTE PTR [edx+0x5ddfb514]
  41e57e:	mov    ds:0x80ae022a,eax
  41e583:	push   ebx
  41e584:	mov    ecx,DWORD PTR [ebx]
  41e586:	pop    esi
  41e587:	mov    BYTE PTR [ebp+0x28],bl
  41e58a:	(bad)  
  41e58b:	cld    
  41e58c:	das    
  41e58d:	mov    eax,DWORD PTR [edi]
  41e58f:	jae    0x41e5f0
  41e591:	xchg   ecx,eax
  41e592:	fimul  WORD PTR [ebx-0xd]
  41e595:	push   0x8d952af5
  41e59a:	call   FWORD PTR [ebx+0x6f78752a]
  41e5a0:	in     eax,0x50
  41e5a2:	adc    bl,BYTE PTR ss:[eax-0x66f616a5]
  41e5a9:	jl     0x41e5fd
  41e5ab:	adc    al,0x5
  41e5ad:	int3   
  41e5ae:	mov    ds:0x655a90e0,eax
  41e5b3:	fstp   TBYTE PTR [ebx-0x31]
  41e5b6:	inc    edx
  41e5b7:	inc    ebx
  41e5b8:	(bad)  
  41e5b9:	jg     0x41e57f
  41e5bb:	inc    edi
  41e5bc:	xor    al,BYTE PTR [ecx]
  41e5be:	dec    eax
  41e5bf:	cmp    DWORD PTR [ebx+0x188fdfa8],edi
  41e5c5:	push   ebx
  41e5c6:	je     0x41e5d3
  41e5c8:	aad    0x26
  41e5ca:	pop    ebx
  41e5cb:	pop    es
  41e5cc:	inc    esp
  41e5cd:	cmp    eax,0x60938abd
  41e5d2:	push   ss
  41e5d3:	popa   
  41e5d4:	scas   al,BYTE PTR es:[edi]
  41e5d5:	xchg   dl,bh
  41e5d7:	pop    ebx
  41e5d8:	xchg   edi,eax
  41e5d9:	or     DWORD PTR [edx+eiz*4-0x541fbc47],0x77
  41e5e1:	push   esi
  41e5e2:	shl    BYTE PTR [edi+0xa],1
  41e5e5:	pop    ecx
  41e5e6:	push   edi
  41e5e7:	mov    edx,0xca14e21b
  41e5ec:	push   0xdc6e53a3
  41e5f1:	adc    DWORD PTR [eax-0x35],esp
  41e5f4:	cmc    
  41e5f5:	mov    dh,ah
  41e5f7:	or     ecx,DWORD PTR [edi-0x2b]
  41e5fa:	mov    ax,0xf1a1
  41e5fe:	sbb    eax,DWORD PTR [ecx]
  41e600:	daa    
  41e601:	(bad)  
  41e602:	iret   
  41e603:	mov    dl,0x30
  41e605:	mov    edi,edx
  41e607:	imul   edi,DWORD PTR [edi+0x627bb299],0xffffffc3
  41e60e:	fs dec ebp
  41e610:	push   ebx
  41e611:	adc    dh,BYTE PTR [ecx-0x3f]
  41e614:	pop    DWORD PTR [ecx-0x31a5959e]
  41e61a:	cmp    DWORD PTR ds:0x889a30d8,0xffffff84
  41e621:	dec    ebp
  41e622:	add    eax,0xb740252e
  41e627:	add    ch,al
  41e629:	dec    esp
  41e62a:	push   ebx
  41e62b:	(bad)  
  41e62c:	ds cmp eax,0xaa4ec676
  41e632:	aad    0x3f
  41e634:	or     DWORD PTR [eax-0x1da32767],0xa8b1f8b7
  41e63e:	mov    esi,0x8ab2ce01
  41e643:	inc    esp
  41e644:	lods   al,BYTE PTR ds:[esi]
  41e645:	(bad)  
  41e646:	(bad)  
  41e648:	daa    
  41e649:	fisubr DWORD PTR [ecx]
  41e64b:	sbb    eax,DWORD PTR [ecx]
  41e64d:	hlt    
  41e64e:	jne    0x41e62c
  41e650:	sbb    bl,ah
  41e652:	lock fwait
  41e654:	lock or bh,bh
  41e657:	jle    0x41e625
  41e659:	push   eax
  41e65a:	popf   
  41e65b:	and    DWORD PTR [ebx],esp
  41e65d:	or     edx,0xf33c7f27
  41e663:	outs   dx,DWORD PTR ds:[si]
  41e665:	add    ebp,edx
  41e667:	dec    esp
  41e668:	ret    0x2477
  41e66b:	leave  
  41e66c:	ror    DWORD PTR [ebx],1
  41e66e:	ins    DWORD PTR es:[edi],dx
  41e66f:	xor    al,BYTE PTR [ebx+0x7c]
  41e672:	cli    
  41e673:	(bad)  
  41e674:	jb     0x41e675
  41e676:	xchg   ebp,eax
  41e677:	ds inc edx
  41e679:	ror    DWORD PTR [edx-0x51],0xa3
  41e67d:	mov    bl,0x88
  41e67f:	xor    cl,BYTE PTR [edx+ebx*2]
  41e682:	rcr    esi,cl
  41e684:	pop    ebx
  41e685:	dec    edx
  41e686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e687:	inc    ecx
  41e688:	adc    al,0xb8
  41e68a:	inc    edx
  41e68b:	inc    ebp
  41e68c:	jb     0x41e661
  41e68e:	cli    
  41e68f:	or     edx,DWORD PTR ds:0x891e400e
  41e695:	add    al,0x9
  41e697:	mov    eax,0xea42c612
  41e69c:	(bad)  
  41e69d:	lock mov cl,0x15
  41e6a0:	fstp   TBYTE PTR [ecx-0x6d7dcf58]
  41e6a6:	(bad)  
  41e6a7:	pop    ecx
  41e6a8:	mov    bl,dl
  41e6aa:	add    ah,bl
  41e6ac:	or     eax,0x8ff0b584
  41e6b1:	or     eax,0x49721a50
  41e6b6:	int    0xf6
  41e6b8:	retf   
  41e6b9:	cmp    eax,0xa87a8101
  41e6be:	repz add al,0xa2
  41e6c1:	sti    
  41e6c2:	ins    BYTE PTR es:[edi],dx
  41e6c3:	popf   
  41e6c4:	add    ecx,0xffffffd3
  41e6c7:	test   ecx,edx
  41e6c9:	(bad)  
  41e6ca:	cli    
  41e6cb:	aaa    
  41e6cc:	lea    ecx,[ebx-0xe2ea3e8]
  41e6d2:	mov    BYTE PTR [ecx],bh
  41e6d4:	add    esi,DWORD PTR [ecx]
  41e6d6:	sub    dl,BYTE PTR [eax+ebp*8-0x3da12dcc]
  41e6dd:	push   eax
  41e6de:	out    0xab,eax
  41e6e0:	sar    BYTE PTR [ebx+0x14],0xa4
  41e6e4:	pop    ds
  41e6e5:	cs dec ebp
  41e6e7:	fwait
  41e6e8:	and    al,0xb
  41e6ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6eb:	push   edx
  41e6ec:	mov    al,BYTE PTR [esi+0x3390a581]
  41e6f2:	xor    DWORD PTR [edx-0x41],esi
  41e6f5:	pop    es
  41e6f6:	sub    ebx,0x2ab4024f
  41e6fc:	sub    eax,0xdec5e45b
  41e701:	loope  0x41e693
  41e703:	mov    ebx,0xc04536b9
  41e708:	xchg   ah,dl
  41e70a:	and    BYTE PTR [eax],ah
  41e70c:	push   es
  41e70d:	int3   
  41e70e:	xor    al,0x1c
  41e710:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41e712:	dec    ebx
  41e713:	and    esi,DWORD PTR [edi-0x301f31b4]
  41e719:	mov    bl,0x55
  41e71b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e71c:	cmp    eax,0xebf26239
  41e721:	mov    DWORD PTR [edx+0x50a80674],esp
  41e727:	mov    ds:0x66c66ee8,eax
  41e72c:	retf   
  41e72d:	les    edx,FWORD PTR [eax]
  41e72f:	jp     0x41e70d
  41e731:	ret    0x3083
  41e734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e735:	mov    bh,0xd7
  41e737:	ficom  WORD PTR [esp+edx*8+0x1f]
  41e73b:	aad    0xb
  41e73d:	adc    al,0x2f
  41e73f:	cli    
  41e740:	dec    esi
  41e741:	cdq    
  41e742:	or     eax,0x1dd0a3c3
  41e747:	adc    BYTE PTR [esi-0x69],al
  41e74a:	outs   dx,DWORD PTR ds:[esi]
  41e74b:	repnz imul edi,DWORD PTR [edx],0x6
  41e74f:	pop    ebp
  41e750:	shr    DWORD PTR [ebx-0x7577432],cl
  41e756:	push   esi
  41e757:	retf   
  41e758:	xchg   esp,eax
  41e759:	jae    0x41e775
  41e75b:	fst    st(4)
  41e75d:	rol    BYTE PTR [eax+0x6a],cl
  41e760:	in     al,dx
  41e761:	add    BYTE PTR [esi],bl
  41e763:	enter  0x7a02,0xce
  41e767:	and    al,0xf3
  41e769:	pusha  
  41e76a:	xor    al,0xc6
  41e76c:	lods   eax,DWORD PTR ds:[esi]
  41e76d:	retf   0xef23
  41e770:	fiadd  DWORD PTR [eax-0x2fb14768]
  41e776:	push   ds
  41e777:	nop
  41e778:	icebp  
  41e779:	jl     0x41e7e1
  41e77b:	rol    DWORD PTR [edi+0x461673f9],0xd3
  41e782:	add    eax,0x7c558437
  41e787:	add    BYTE PTR [esi+0x315b94d0],dh
  41e78d:	xchg   ebx,eax
  41e78e:	int    0xe6
  41e790:	adc    eax,0x34eb7ab7
  41e795:	dec    ebx
  41e796:	imul   edi,ebx,0x590f2437
  41e79c:	mov    edx,0xfa585cd7
  41e7a1:	pop    ss
  41e7a2:	imul   esi,DWORD PTR [eax+0x1e],0x56
  41e7a6:	jp     0x41e7a9
  41e7a8:	fwait
  41e7a9:	mov    bh,0x3a
  41e7ab:	stos   DWORD PTR es:[edi],eax
  41e7ac:	nop
  41e7ad:	fld    TBYTE PTR cs:[edi]
  41e7b0:	and    ch,al
  41e7b2:	xlat   BYTE PTR ds:[ebx]
  41e7b3:	pop    edi
  41e7b4:	setno  BYTE PTR [eax+0x31]
  41e7b8:	outs   dx,DWORD PTR ds:[esi]
  41e7b9:	rol    DWORD PTR [ebx+0x1bd6d05a],cl
  41e7bf:	mov    ebp,0x2b4b438a
  41e7c4:	int    0x4
  41e7c6:	repz popf 
  41e7c8:	int3   
  41e7c9:	sbb    edi,esp
  41e7cb:	pop    ss
  41e7cc:	mov    bl,0x7a
  41e7ce:	pop    esp
  41e7cf:	loop   0x41e82f
  41e7d1:	adc    DWORD PTR [ecx+ecx*1],edi
  41e7d4:	or     ch,cl
  41e7d6:	(bad)
  41e7da:	xchg   DWORD PTR [esi-0x3ee62f78],ebx
  41e7e0:	or     ah,BYTE PTR [esi+esi*1]
  41e7e3:	out    0x84,eax
  41e7e5:	in     eax,0xeb
  41e7e7:	and    eax,edi
  41e7e9:	inc    esi
  41e7ea:	call   0x4a8437b1
  41e7ef:	gs mov edi,0x1a6c6bfa
  41e7f5:	retf   
  41e7f6:	xchg   ebx,eax
  41e7f7:	adc    eax,0x42012f98
  41e7fc:	xchg   ebp,eax
  41e7fd:	into   
  41e7fe:	hlt    
  41e7ff:	popa   
  41e800:	xchg   ecx,eax
  41e801:	xrelease mov BYTE PTR es:[esi+0x728b4962],dl
  41e809:	rcr    BYTE PTR [edx+0x61b9b056],0x13
  41e810:	out    0x42,al
  41e812:	pop    esi
  41e813:	push   cs
  41e814:	mov    ch,0x7c
  41e816:	cmp    DWORD PTR [edi],edx
  41e818:	adc    BYTE PTR [ecx+ecx*2+0x4162e047],cl
  41e81f:	ins    DWORD PTR es:[edi],dx
  41e820:	xchg   ebx,eax
  41e821:	test   DWORD PTR [ebx-0x31],ebx
  41e824:	xor    dh,ah
  41e826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e827:	pop    DWORD PTR [esi-0x14]
  41e82a:	adc    al,0x8c
  41e82c:	or     ecx,0xffffffcf
  41e82f:	mov    al,0x9b
  41e831:	or     ebx,esp
  41e833:	sbb    DWORD PTR [edx-0x788a5c09],ebp
  41e839:	or     eax,0x982b498f
  41e83e:	into   
  41e83f:	inc    ebx
  41e840:	daa    
  41e841:	into   
  41e842:	xchg   ebp,eax
  41e843:	mov    eax,0x7fb50314
  41e848:	dec    edi
  41e849:	retf   
  41e84a:	sub    BYTE PTR [ecx],dh
  41e84c:	mov    dh,0x79
  41e84e:	enter  0x78c9,0xa2
  41e852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e853:	loope  0x41e7e2
  41e855:	call   0x9e1c:0x381d1fb
  41e85c:	dec    ecx
  41e85d:	int    0x3a
  41e85f:	xchg   edi,eax
  41e860:	inc    esi
  41e861:	lahf   
  41e862:	inc    ebx
  41e863:	and    eax,0x7c3bf53c
  41e868:	mov    bl,0x5a
  41e86a:	sbb    DWORD PTR [ebp-0x34],esp
  41e86d:	ret    0x9fac
  41e870:	mov    cl,0x4d
  41e872:	add    dl,ch
  41e874:	push   cs
  41e875:	bnd jl 0x41e8b6
  41e878:	xchg   edx,eax
  41e879:	jno    0x41e8bc
  41e87b:	(bad)  
  41e87e:	test   BYTE PTR ds:0x63ccc3ff,ch
  41e884:	sub    dl,al
  41e886:	mov    ecx,0x39f62555
  41e88b:	fsubr  QWORD PTR [edx]
  41e88d:	stos   DWORD PTR es:[edi],eax
  41e88e:	adc    eax,0x23a2f6bd
  41e893:	or     BYTE PTR gs:[edx],al
  41e896:	lock pushf 
  41e898:	jmp    0x1266:0x5dccd72
  41e89f:	jbe    0x41e833
  41e8a1:	fmulp  st(6),st
  41e8a3:	sbb    BYTE PTR [ebx-0x1a],bh
  41e8a6:	in     eax,dx
  41e8a7:	jne    0x41e82e
  41e8a9:	sti    
  41e8aa:	mov    al,ds:0xc720582f
  41e8af:	stc    
  41e8b0:	sub    eax,0x335ef460
  41e8b5:	xor    DWORD PTR [ebp-0x49],0x93759003
  41e8bc:	cmp    DWORD PTR [ebx],edi
  41e8be:	and    ch,dl
  41e8c0:	enter  0x22bd,0xc2
  41e8c4:	jmp    0x4465c6fc
  41e8c9:	and    DWORD PTR [eax],eax
  41e8cb:	mov    dl,0x2d
  41e8cd:	sub    eax,0xc1f93250
  41e8d2:	adc    bl,bh
  41e8d4:	add    DWORD PTR [ebx],edx
  41e8d6:	lds    eax,FWORD PTR [eax-0x55]
  41e8d9:	mov    edx,0xd295aae7
  41e8de:	xor    esi,edi
  41e8e0:	or     bh,bl
  41e8e2:	(bad)  
  41e8e3:	pop    edi
  41e8e4:	lea    esi,[edi-0x7a]
  41e8e7:	fidiv  DWORD PTR [edi+edi*2]
  41e8ea:	ja     0x41e8a5
  41e8ec:	out    0x17,al
  41e8ee:	add    esi,DWORD PTR [ecx]
  41e8f0:	or     BYTE PTR [esi-0x6b0b0c82],ah
  41e8f6:	sahf   
  41e8f7:	jp     0x41e927
  41e8f9:	jg     0x41e944
  41e8fb:	das    
  41e8fc:	jo     0x41e8e1
  41e8fe:	cmp    ecx,esp
  41e900:	stos   DWORD PTR es:[edi],eax
  41e901:	inc    esp
  41e902:	lods   al,BYTE PTR ds:[esi]
  41e903:	add    ch,BYTE PTR [esi-0x38eaceba]
  41e909:	into   
  41e90a:	fwait
  41e90b:	shl    DWORD PTR [esi+edx*4+0x6658098],1
  41e912:	ins    DWORD PTR es:[edi],dx
  41e913:	xchg   ebx,eax
  41e914:	push   ecx
  41e915:	or     ebp,edi
  41e917:	jne    0x41e919
  41e919:	cli    
  41e91a:	pop    edi
  41e91b:	inc    ebp
  41e91c:	mov    ss,edx
  41e91e:	fstp   QWORD PTR [edi+0x66]
  41e921:	pop    esi
  41e922:	add    DWORD PTR [ebx],edi
  41e924:	mov    eax,ds:0xfbef8ca8
  41e929:	sbb    al,0xd1
  41e92b:	lds    esi,FWORD PTR [ebx-0x6dfaa1c1]
  41e931:	aam    0x55
  41e933:	adc    BYTE PTR [ecx-0xb5f6d25],0xb3
  41e93a:	lods   al,BYTE PTR ds:[esi]
  41e93b:	sti    
  41e93c:	push   esp
  41e93d:	aad    0x9c
  41e93f:	ins    DWORD PTR es:[edi],dx
  41e940:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e941:	jmp    0xa3a010c8
  41e946:	inc    ecx
  41e947:	sti    
  41e948:	add    eax,0xf503da7c
  41e94d:	jo     0x41e8ed
  41e94f:	and    al,0x6b
  41e951:	sub    eax,0xf21dcbe6
  41e956:	cmp    cl,BYTE PTR [esi-0x63]
  41e959:	pushf  
  41e95a:	jne    0x41e95a
  41e95c:	jl     0x41e958
  41e95e:	sub    bl,0x83
  41e961:	mov    edx,0x42958b81
  41e966:	fsubr  QWORD PTR [ecx+0x25]
  41e969:	sub    esi,DWORD PTR [ebx-0x6d51fa60]
  41e96f:	adc    BYTE PTR [edx],bh
  41e971:	push   ds
  41e972:	adc    eax,DWORD PTR [edx]
  41e974:	loope  0x41e9db
  41e976:	(bad)  
  41e977:	adc    al,0x16
  41e979:	jnp    0x41e96d
  41e97b:	dec    eax
  41e97c:	seto   BYTE PTR [edx-0x78a709a]
  41e983:	ds xchg ebx,eax
  41e985:	div    BYTE PTR [ebx]
  41e987:	dec    edx
  41e988:	push   0xe76c8a61
  41e98d:	pop    edi
  41e98e:	pop    eax
  41e98f:	inc    ecx
  41e990:	enter  0xe008,0x1f
  41e994:	scas   eax,DWORD PTR es:[edi]
  41e995:	jne    0x41e956
  41e997:	mov    eax,0x497bd0a7
  41e99c:	sbb    al,0x48
  41e99e:	pop    ss
  41e99f:	hlt    
  41e9a0:	mov    cl,0xf2
  41e9a2:	(bad)  
  41e9a4:	push   edx
  41e9a5:	pop    es
  41e9a6:	stc    
  41e9a7:	inc    eax
  41e9a8:	mov    dl,BYTE PTR [edi+0x1708d9ad]
  41e9ae:	sbb    DWORD PTR [esi+eax*4+0x4f],esp
  41e9b2:	xor    eax,0xe6b1d9b5
  41e9b7:	ficomp WORD PTR [ebx+0x5da79198]
  41e9bd:	adc    DWORD PTR [edx+0x9],edx
  41e9c0:	sbb    eax,0x1d8b0e49
  41e9c5:	push   ebp
  41e9c6:	shl    DWORD PTR [edx],cl
  41e9c8:	xor    bl,BYTE PTR [edi-0xfb6f27e]
  41e9ce:	(bad)  
  41e9cf:	cs ret 
  41e9d1:	sub    eax,0x7672a334
  41e9d6:	in     al,0x36
  41e9d8:	add    dh,dh
  41e9da:	loop   0x41e992
  41e9dc:	xor    al,0x74
  41e9de:	xchg   ebp,eax
  41e9df:	ret    
  41e9e0:	dec    edi
  41e9e1:	in     eax,dx
  41e9e2:	pop    ds
  41e9e3:	inc    eax
  41e9e4:	pushf  
  41e9e5:	in     al,0xb4
  41e9e7:	js     0x41ea08
  41e9e9:	loopne 0x41ea06
  41e9eb:	inc    esp
  41e9ec:	mov    eax,0xf7e8da01
  41e9f1:	fsubr  QWORD PTR [ebp-0x7e19c071]
  41e9f7:	fidivr WORD PTR [ecx+0x52]
  41e9fa:	mov    bh,0x27
  41e9fc:	fucomi st,st(3)
  41e9fe:	hlt    
  41e9ff:	jae    0x41e9be
  41ea01:	jecxz  0x41e989
  41ea03:	mov    gs:0x9007caa9,al
  41ea09:	je     0x41ea2d
  41ea0b:	(bad)  
  41ea0c:	hlt    
  41ea0d:	out    dx,al
  41ea0e:	jbe    0x41ea1c
  41ea10:	in     al,0xb
  41ea12:	jmp    0x392a:0xbe69282b
  41ea19:	cmc    
  41ea1a:	push   ebx
  41ea1b:	outs   dx,BYTE PTR ds:[esi]
  41ea1c:	aaa    
  41ea1d:	bound  eax,QWORD PTR [esi-0x64]
  41ea20:	mov    al,0xc2
  41ea22:	or     al,0xad
  41ea24:	aad    0x8e
  41ea26:	dec    esi
  41ea27:	mov    ds:0x55a6b42c,eax
  41ea2c:	sbb    al,0x11
  41ea2e:	push   ds
  41ea2f:	enter  0x7a0a,0x63
  41ea33:	inc    ecx
  41ea34:	stos   BYTE PTR es:[edi],al
  41ea35:	push   ebp
  41ea36:	inc    ecx
  41ea37:	outs   dx,BYTE PTR ds:[esi]
  41ea38:	cmp    BYTE PTR [ebx-0x3b5e163c],bl
  41ea3e:	out    dx,al
  41ea3f:	pop    esp
  41ea40:	cdq    
  41ea41:	ret    
  41ea42:	aad    0xdb
  41ea44:	outs   dx,DWORD PTR ds:[esi]
  41ea45:	or     eax,0xbd4ba2ab
  41ea4a:	inc    esp
  41ea4b:	mov    cl,0x47
  41ea4d:	jnp    0x41e9ed
  41ea4f:	pop    esi
  41ea50:	inc    edx
  41ea51:	jmp    DWORD PTR [ebp+0x52b956b3]
  41ea57:	adc    dl,dh
  41ea59:	xchg   bh,bh
  41ea5b:	mov    ds:0xd5e3c05a,eax
  41ea60:	pop    ebp
  41ea61:	adc    al,0x39
  41ea63:	stc    
  41ea64:	add    dl,BYTE PTR [ecx]
  41ea66:	ret    
  41ea67:	xchg   esi,eax
  41ea68:	mov    esi,DWORD PTR [edx-0x4d]
  41ea6b:	outs   dx,BYTE PTR ds:[esi]
  41ea6c:	(bad)  
  41ea6d:	mul    DWORD PTR [edi+edi*2+0x1c]
  41ea71:	sbb    bh,BYTE PTR ds:[edx-0x47738bd9]
  41ea78:	aad    0x3b
  41ea7a:	pop    es
  41ea7b:	mov    ebx,0x6ba97891
  41ea80:	gs push eax
  41ea82:	ss pop esi
  41ea84:	mov    dl,0x6b
  41ea86:	cmp    bl,BYTE PTR [ebx+0x49]
  41ea89:	sbb    dh,ch
  41ea8b:	hlt    
  41ea8c:	ret    0xc0f8
  41ea8f:	(bad)  
  41ea90:	xor    ecx,DWORD PTR [edi+edi*1+0x3169070a]
  41ea97:	sub    BYTE PTR [ebx],ah
  41ea99:	loope  0x41ea1e
  41ea9b:	ror    DWORD PTR [ebp+0x37],cl
  41ea9e:	les    ebx,FWORD PTR ds:0x7daf2265
  41eaa4:	outs   dx,BYTE PTR ds:[esi]
  41eaa5:	packssdw mm5,QWORD PTR [edx]
  41eaa8:	lea    eax,ds:0x771367d3
  41eaae:	scas   al,BYTE PTR es:[edi]
  41eaaf:	fldcw  WORD PTR [edx]
  41eab1:	add    bl,BYTE PTR [edx-0x90b09c3]
  41eab7:	loop   0x41eb08
  41eab9:	outs   dx,DWORD PTR ds:[esi]
  41eaba:	sbb    al,0x2e
  41eabc:	sbb    al,0xde
  41eabe:	lock mov BYTE PTR [ebx],0xbb
  41eac2:	imul   ebx,DWORD PTR [ebp-0x62],0x65
  41eac6:	fwait
  41eac7:	iret   
  41eac8:	cmp    al,0x5c
  41eaca:	fisub  WORD PTR ds:0x8a857644
  41ead0:	sub    eax,0x3087b893
  41ead5:	push   ebx
  41ead6:	jp     0x41eb23
  41ead8:	push   es
  41ead9:	xchg   edx,eax
  41eada:	lea    esp,[eax-0xc]
  41eadd:	xchg   BYTE PTR [esi],ah
  41eadf:	outs   dx,DWORD PTR ds:[esi]
  41eae0:	out    0x99,al
  41eae2:	fdivr  QWORD PTR [ecx-0x1c641375]
  41eae8:	adc    BYTE PTR [eax-0x32],ah
  41eaeb:	bound  esi,QWORD PTR [eax+0x6a]
  41eaee:	and    BYTE PTR [ecx+eiz*4],bl
  41eaf1:	rcl    DWORD PTR [eax-0x46ad545],1
  41eaf7:	xor    eax,0xab4ac67e
  41eafc:	(bad)  
  41eafd:	pushf  
  41eafe:	mov    DWORD PTR gs:[ecx+0x46],esp
  41eb02:	gs jnp 0x41eb6e
  41eb05:	outs   dx,DWORD PTR ds:[esi]
  41eb06:	add    al,0xb2
  41eb08:	mov    es,WORD PTR ds:0x793c1f3f
  41eb0e:	and    bh,BYTE PTR [esi+0x45394aec]
  41eb14:	add    eax,0xbd3c2a31
  41eb19:	adc    bl,cl
  41eb1b:	je     0x41eab1
  41eb1d:	add    BYTE PTR [edx-0x5f974d87],ch
  41eb23:	fdiv   DWORD PTR [esi]
  41eb25:	xor    edi,DWORD PTR [esp+esi*1+0x45b00cf1]
  41eb2c:	pusha  
  41eb2d:	sub    al,0x4f
  41eb2f:	push   edi
  41eb30:	jbe    0x41eb3e
  41eb32:	jae    0x41eb1a
  41eb34:	retf   0x6ec3
  41eb37:	sub    ecx,ebp
  41eb39:	jo     0x41eb3e
  41eb3b:	scas   al,BYTE PTR es:[edi]
  41eb3c:	push   edi
  41eb3d:	fld    TBYTE PTR [eax-0x78]
  41eb40:	cmc    
  41eb41:	sti    
  41eb42:	and    dh,dh
  41eb44:	ins    BYTE PTR es:[edi],dx
  41eb45:	xchg   edi,eax
  41eb46:	mov    al,0x8a
  41eb48:	fistp  DWORD PTR [edx]
  41eb4a:	ret    
  41eb4b:	les    ebp,FWORD PTR [ebp-0x64d5a2f5]
  41eb51:	(bad)  
  41eb52:	sbb    eax,0x6529a096
  41eb57:	cld    
  41eb58:	pop    ebx
  41eb59:	pop    es
  41eb5a:	ins    DWORD PTR es:[edi],dx
  41eb5b:	or     edx,esp
  41eb5d:	or     dh,bh
  41eb5f:	aas    
  41eb60:	(bad)  
  41eb61:	loopne 0x41eb07
  41eb63:	hlt    
  41eb64:	jb     0x41eb9a
  41eb66:	pop    ebx
  41eb67:	pop    ecx
  41eb68:	or     edx,ecx
  41eb6a:	data16 fwait
  41eb6c:	mov    al,dl
  41eb6e:	test   BYTE PTR [esi+0x79],0xc4
  41eb72:	cmp    DWORD PTR [edx+edx*1+0x7d],ebp
  41eb76:	lods   eax,DWORD PTR ds:[esi]
  41eb77:	pop    edi
  41eb78:	lock cmp eax,eax
  41eb7b:	jl     0x41eb2e
  41eb7d:	outs   dx,DWORD PTR ds:[esi]
  41eb7e:	push   edx
  41eb7f:	dec    ecx
  41eb80:	adc    al,0xa7
  41eb82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb83:	pop    ebp
  41eb84:	mov    bh,0xe3
  41eb86:	repnz fnsave [esi-0x75]
  41eb8a:	cmp    cl,BYTE PTR [ebp-0x6]
  41eb8d:	or     edx,DWORD PTR [edx]
  41eb8f:	and    eax,esp
  41eb91:	(bad)  
  41eb93:	sbb    DWORD PTR [ecx],edx
  41eb95:	sbb    eax,0x8a49ff80
  41eb9a:	out    dx,eax
  41eb9b:	mov    dh,0x62
  41eb9d:	and    eax,0x5964cc73
  41eba2:	retf   
  41eba3:	mov    ebp,0x85190e62
  41eba8:	pop    ebp
  41eba9:	xor    edx,DWORD PTR [bp-0x4183]
  41ebae:	xchg   esi,eax
  41ebaf:	clc    
  41ebb0:	pushf  
  41ebb1:	sar    BYTE PTR [eax+0x6d],cl
  41ebb4:	mov    eax,0x62bab1f0
  41ebb9:	and    eax,DWORD PTR [esi+ebp*2+0x7]
  41ebbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebbe:	imul   ebx,DWORD PTR [ecx+0x11],0xffffff90
  41ebc2:	jno    0x41ebd5
  41ebc4:	inc    esi
  41ebc5:	mov    esp,0x5ef76fa9
  41ebca:	cmp    BYTE PTR [ecx+esi*2-0x29],al
  41ebce:	dec    edx
  41ebcf:	sar    BYTE PTR [edx+ebx*1-0x5],0xe
  41ebd4:	mov    ds:0x5eb57503,eax
  41ebd9:	sub    al,0x7d
  41ebdb:	rcr    BYTE PTR [ebx],1
  41ebdd:	xchg   DWORD PTR [ecx-0x5f],edx
  41ebe0:	iret   
  41ebe1:	neg    BYTE PTR [edi+esi*8]
  41ebe4:	stos   BYTE PTR es:[edi],al
  41ebe5:	cdq    
  41ebe6:	dec    ebp
  41ebe7:	test   ebx,eax
  41ebe9:	cmp    DWORD PTR [esi-0xc9fe024],0x26
  41ebf0:	dec    ecx
  41ebf1:	fst    QWORD PTR [ebp+0x3ebfa33a]
  41ebf7:	cmc    
  41ebf8:	and    esi,DWORD PTR [ebx-0x4e]
  41ebfb:	ret    
  41ebfc:	jnp    0x41ebc4
  41ebfe:	inc    ebx
  41ebff:	sub    BYTE PTR [eax+0x7037f146],al
  41ec05:	fistp  DWORD PTR [eax+0x80dead6]
  41ec0b:	das    
  41ec0c:	pop    esp
  41ec0d:	sub    BYTE PTR [edi+0x2f58dac2],cl
  41ec13:	xor    eax,0x8da3a700
  41ec18:	popa   
  41ec19:	dec    esi
  41ec1a:	pop    esp
  41ec1b:	icebp  
  41ec1c:	(bad)
  41ec21:	add    dl,BYTE PTR [edx-0x12]
  41ec24:	aam    0x6d
  41ec26:	xor    DWORD PTR [esi-0x22a1e7d8],esi
  41ec2c:	aaa    
  41ec2d:	scas   al,BYTE PTR es:[edi]
  41ec2e:	rcr    DWORD PTR ds:0x74e41887,cl
  41ec34:	gs jae 0x41ec03
  41ec37:	and    BYTE PTR [edi-0x33],bh
  41ec3a:	xor    DWORD PTR [edi-0x447394d3],ebx
  41ec40:	les    edi,FWORD PTR [edx+0xb99c6bf]
  41ec46:	sub    dl,dl
  41ec48:	sub    bh,BYTE PTR [edi]
  41ec4a:	mov    dl,0x6e
  41ec4c:	push   cs
  41ec4d:	outs   dx,BYTE PTR ds:[esi]
  41ec4e:	stos   BYTE PTR es:[edi],al
  41ec4f:	loop   0x41ecba
  41ec51:	mov    ds,WORD PTR [ebp+0x56]
  41ec54:	inc    edi
  41ec55:	enter  0x8b41,0x1
  41ec59:	loope  0x41ec64
  41ec5b:	sbb    al,0xc
  41ec5d:	push   esi
  41ec5e:	aam    0xb2
  41ec60:	neg    BYTE PTR [ebx-0xd1c2887]
  41ec66:	sub    DWORD PTR [esi-0x7ebb07d0],0x46
  41ec6d:	push   ebx
  41ec6e:	and    edx,DWORD PTR [ecx]
  41ec70:	push   0x3
  41ec72:	sbb    edx,DWORD PTR [edi+esi*4]
  41ec75:	cs or  eax,0x9b91ea7e
  41ec7b:	je     0x41ec07
  41ec7d:	call   0x4512e358
  41ec82:	add    DWORD PTR [edi+0x41],0x2600e7ac
  41ec89:	leave  
  41ec8a:	pop    es
  41ec8b:	in     al,dx
  41ec8c:	xor    al,0xa9
  41ec8e:	and    al,0x1a
  41ec90:	test   BYTE PTR [ebx-0x66b4ef9d],ch
  41ec96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec97:	jmp    0x2da2e224
  41ec9c:	xchg   esp,eax
  41ec9d:	lahf   
  41ec9e:	call   0x35dcaed8
  41eca3:	sub    al,0x16
  41eca5:	and    edi,DWORD PTR [ebx-0x2]
  41eca8:	push   0xe3da9d44
  41ecad:	mov    al,0x2
  41ecaf:	lock loopne 0x41ec7f
  41ecb2:	or     dh,BYTE PTR [ebp-0x3a37a0]
  41ecb8:	in     al,0x11
  41ecba:	enter  0x8277,0x12
  41ecbe:	xor    dh,al
  41ecc0:	add    eax,0xc1d1ef0d
  41ecc5:	pop    ds
  41ecc6:	adc    eax,0xb705eb96
  41eccb:	bound  edx,QWORD PTR [ebx-0x2b]
  41ecce:	das    
  41eccf:	ins    BYTE PTR es:[edi],dx
  41ecd0:	mul    ecx
  41ecd2:	repnz push es
  41ecd4:	adc    esp,DWORD PTR [eax]
  41ecd6:	inc    ebx
  41ecd7:	loopne 0x41ed19
  41ecd9:	jle    0x41eccf
  41ecdb:	mov    BYTE PTR [ebx],ah
  41ecdd:	fbstp  TBYTE PTR [edi]
  41ecdf:	xor    DWORD PTR [ecx+0x32],0x8fa798ab
  41ece6:	adc    DWORD PTR ds:0xc9670b6d,ebx
  41ecec:	test   BYTE PTR [esi+ebp*1],bh
  41ecef:	xor    BYTE PTR [ecx-0x62e4373d],cl
  41ecf5:	sbb    ebp,ecx
  41ecf7:	add    eax,0xf2c8cee8
  41ecfc:	daa    
  41ecfd:	push   0xa833bc85
  41ed02:	outs   dx,BYTE PTR ds:[esi]
  41ed03:	sahf   
  41ed04:	sub    DWORD PTR [esi-0x7ba790da],edx
  41ed0a:	retf   0x4fc1
  41ed0d:	into   
  41ed0e:	push   ebp
  41ed0f:	push   edx
  41ed10:	es ds jp 0x41ed05
  41ed14:	jp     0x41ed82
  41ed16:	xor    al,0x88
  41ed18:	test   BYTE PTR [ebp-0xa2747ec],bh
  41ed1e:	or     DWORD PTR [esi-0x60b76c82],esi
  41ed24:	and    cl,BYTE PTR [edx+0x4eda3a5e]
  41ed2a:	push   es
  41ed2b:	cmp    esp,DWORD PTR [ecx+0x7e]
  41ed2e:	inc    ebx
  41ed2f:	inc    esi
  41ed30:	leave  
  41ed31:	pop    edi
  41ed32:	and    dl,ah
  41ed34:	ficomp WORD PTR [edx+0xf]
  41ed37:	pusha  
  41ed38:	fs mov ah,0x4c
  41ed3b:	enter  0x5718,0x5e
  41ed3f:	test   DWORD PTR gs:[ebx-0x3c],0x5268c6b
  41ed47:	jno    0x41ed37
  41ed49:	lods   eax,DWORD PTR ds:[esi]
  41ed4a:	(bad)  
  41ed4b:	aaa    
  41ed4c:	clc    
  41ed4d:	loop   0x41ed00
  41ed4f:	out    dx,al
  41ed50:	div    DWORD PTR [ecx-0x62]
  41ed53:	mov    bh,0x7a
  41ed55:	loope  0x41ed08
  41ed57:	in     al,0x6d
  41ed59:	mov    ah,0xe0
  41ed5b:	mov    cl,0xf8
  41ed5d:	ss ret 
  41ed5f:	in     al,0xfe
  41ed61:	mov    ebx,DWORD PTR [ebp-0x8]
  41ed64:	xchg   ecx,eax
  41ed65:	add    DWORD PTR [edx],0x7bfe3098
  41ed6b:	jbe    0x41edcd
  41ed6d:	sub    ebp,esi
  41ed6f:	push   ds
  41ed70:	mov    edi,0x4e4baaf6
  41ed75:	or     eax,0x2094ed60
  41ed7a:	pop    esp
  41ed7b:	mov    dh,0xc9
  41ed7d:	mov    ds:0xe7fa0417,al
  41ed82:	pop    ebx
  41ed83:	sub    bh,bh
  41ed85:	retf   0xa1ed
  41ed88:	mov    ecx,0x58eacc43
  41ed8d:	sub    dl,BYTE PTR [edx]
  41ed8f:	(bad)  
  41ed90:	xchg   edi,eax
  41ed91:	inc    ecx
  41ed92:	fadd   st(2),st
  41ed94:	xor    BYTE PTR [ecx-0x41],dl
  41ed97:	popa   
  41ed98:	jl     0x41ed35
  41ed9a:	and    al,0x71
  41ed9c:	scas   al,BYTE PTR es:[edi]
  41ed9d:	mov    esp,0xc8309ef3
  41eda2:	dec    ebx
  41eda3:	cdq    
  41eda4:	jl     0x41ed4b
  41eda6:	or     al,0x33
  41eda8:	mov    ss:0x59aef3df,eax
  41edae:	xor    eax,0x66dfe495
  41edb3:	retf   
  41edb4:	out    dx,al
  41edb5:	dec    ecx
  41edb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edb7:	add    bh,BYTE PTR [ebx-0x6]
  41edba:	das    
  41edbb:	mov    eax,gs
  41edbd:	(bad)  [ebp+0x2e]
  41edc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edc1:	cwde   
  41edc2:	mov    ds:0x901ebd2a,eax
  41edc7:	mov    ?,WORD PTR [ebx-0x44]
  41edca:	in     al,0x3c
  41edcc:	fimul  WORD PTR [ecx-0x16fc29e1]
  41edd2:	or     al,0xf
  41edd4:	xchg   ecx,eax
  41edd5:	inc    ebp
  41edd6:	dec    esi
  41edd7:	and    esp,edi
  41edd9:	enter  0xaa61,0x28
  41eddd:	test   BYTE PTR [edi],dh
  41eddf:	xor    esp,ebx
  41ede1:	sti    
  41ede2:	fistp  DWORD PTR fs:[eax+0x4c550867]
  41ede9:	icebp  
  41edea:	outs   dx,DWORD PTR ds:[esi]
  41edeb:	and    esp,DWORD PTR [edx-0x7]
  41edee:	add    al,0x2f
  41edf0:	imul   edi,eax,0x5d
  41edf3:	not    eax
  41edf5:	push   0x74
  41edf7:	inc    ebp
  41edf8:	dec    esp
  41edf9:	push   ebp
  41edfa:	mov    ch,0x59
  41edfc:	hlt    
  41edfd:	pop    edi
  41edfe:	sub    DWORD PTR [edx],eax
  41ee00:	inc    ebp
  41ee01:	jle    0x41eda3
  41ee03:	stc    
  41ee04:	clc    
  41ee05:	clc    
  41ee06:	sbb    dh,BYTE PTR [ebp+0x63]
  41ee09:	aam    0x16
  41ee0b:	out    dx,eax
  41ee0c:	fild   DWORD PTR [esi+0x77659f42]
  41ee12:	or     esi,DWORD PTR [esi+0x32]
  41ee15:	pop    ds
  41ee16:	xchg   ecx,eax
  41ee17:	sbb    al,0xb3
  41ee19:	sbb    ebp,esi
  41ee1b:	push   0x30
  41ee1d:	js     0x41ee46
  41ee1f:	fisubr DWORD PTR [ebx]
  41ee21:	popf   
  41ee22:	jne    0x41ee76
  41ee24:	fldcw  WORD PTR [ebx+0x3ff0d468]
  41ee2a:	scas   eax,DWORD PTR es:[edi]
  41ee2b:	push   cs
  41ee2c:	retf   
  41ee2d:	jg     0x41edbc
  41ee2f:	div    BYTE PTR fs:0x95153ec7
  41ee36:	pushf  
  41ee37:	frstor [edx]
  41ee39:	ins    BYTE PTR es:[edi],dx
  41ee3a:	popf   
  41ee3b:	dec    esp
  41ee3c:	mov    ds:0x9d97d4e5,al
  41ee41:	out    0x60,eax
  41ee43:	icebp  
  41ee44:	int    0x46
  41ee46:	inc    esp
  41ee47:	pop    eax
  41ee48:	call   0x50e6:0x16aa1b42
  41ee4f:	retf   
  41ee50:	sbb    BYTE PTR [edx],bl
  41ee52:	push   eax
  41ee53:	test   al,0x22
  41ee55:	data16 js 0x41edf7
  41ee58:	adc    dl,al
  41ee5a:	xor    edi,DWORD PTR [ecx-0x4acc3289]
  41ee60:	popf   
  41ee61:	xchg   edx,eax
  41ee62:	or     eax,0x2788fc98
  41ee67:	js     0x41ee01
  41ee69:	aad    0x34
  41ee6b:	xchg   ebp,eax
  41ee6c:	or     ebp,DWORD PTR [esi+esi*2]
  41ee6f:	cmp    eax,0xeb8ae73b
  41ee74:	loope  0x41ee84
  41ee76:	fist   DWORD PTR [ebx]
  41ee78:	dec    ebx
  41ee79:	repz jne 0x41ee86
  41ee7c:	mov    ah,0x42
  41ee7e:	sub    edi,eax
  41ee80:	in     eax,0x40
  41ee82:	mov    bh,0x7b
  41ee84:	xor    ebx,0xae740630
  41ee8a:	xor    BYTE PTR [esi+0x50],al
  41ee8d:	sbb    eax,0xf07721c9
  41ee92:	(bad)  
  41ee93:	rcl    BYTE PTR [edi+0x67],cl
  41ee96:	stc    
  41ee97:	cmp    al,0x99
  41ee99:	and    BYTE PTR [edx+eiz*1-0x4d],dl
  41ee9d:	sahf   
  41ee9e:	xor    al,0x73
  41eea0:	sbb    BYTE PTR [esi],0x14
  41eea3:	cld    
  41eea4:	cmp    eax,0xf8a11bec
  41eea9:	in     al,0x4f
  41eeab:	cdq    
  41eeac:	add    esp,DWORD PTR [ecx]
  41eeae:	repnz or al,0xca
  41eeb1:	je     0x41ef17
  41eeb3:	rol    ebx,cl
  41eeb5:	xchg   BYTE PTR [esi],ah
  41eeb7:	ds mov edi,0xc6471bc0
  41eebd:	sub    DWORD PTR ds:0x6ac32044,edi
  41eec3:	shl    BYTE PTR [ebx-0x59573735],0xc4
  41eeca:	jg     0x41ef3b
  41eecc:	sar    DWORD PTR [edx-0x77],0xb2
  41eed0:	pop    ds
  41eed1:	es jnp 0x41eec9
  41eed4:	retf   
  41eed5:	adc    esp,DWORD PTR [ebp+ebx*4+0x4f29e599]
  41eedc:	push   esp
  41eedd:	jmp    DWORD PTR ds:0x53cfbd04
  41eee3:	addr16 (bad) 
  41eee5:	sbb    DWORD PTR [ecx+0x2e946acc],edx
  41eeeb:	popf   
  41eeec:	test   BYTE PTR [esi-0x58],dh
  41eeef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eef0:	pop    eax
  41eef1:	mov    dl,al
  41eef3:	repz or al,BYTE PTR [ebp-0x79]
  41eef7:	or     edi,edi
  41eef9:	push   cs
  41eefa:	cld    
  41eefb:	jge    0x41ef0d
  41eefd:	inc    edi
  41eefe:	push   ebp
  41eeff:	and    BYTE PTR ds:0x738fbdde,al
  41ef05:	mov    WORD PTR [ebp-0x6b],es
  41ef08:	ds int3 
  41ef0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef0b:	(bad)  
  41ef0c:	push   edx
  41ef0d:	jmp    0x6036:0x9b439179
  41ef14:	add    al,0x58
  41ef16:	or     BYTE PTR [ebp-0x63c81ded],0x7d
  41ef1d:	nop
  41ef1e:	gs cli 
  41ef20:	jecxz  0x41ef97
  41ef22:	imul   ebx,DWORD PTR [edi+esi*8],0x4c
  41ef26:	jns    0x41eeea
  41ef28:	(bad)  
  41ef29:	pushf  
  41ef2a:	int    0x49
  41ef2c:	pop    esp
  41ef2d:	(bad)  
  41ef2e:	pop    ebp
  41ef2f:	pop    ecx
  41ef30:	and    DWORD PTR [edi-0x49c1a2cd],ebp
  41ef36:	cmc    
  41ef37:	fld    TBYTE PTR [edi]
  41ef39:	push   edx
  41ef3a:	std    
  41ef3b:	ja     0x41ef15
  41ef3d:	in     eax,0x21
  41ef3f:	lods   eax,DWORD PTR ds:[esi]
  41ef40:	das    
  41ef41:	loop   0x41ef6e
  41ef43:	pop    esp
  41ef44:	or     DWORD PTR [ecx],ecx
  41ef46:	mov    dh,0xa7
  41ef48:	jb     0x41efa1
  41ef4a:	data16 and bh,dl
  41ef4d:	adc    dl,dh
  41ef4f:	(bad)  [edx-0x726d1b13]
  41ef55:	nop
  41ef56:	xchg   DWORD PTR [esi-0x78a237a4],ecx
  41ef5c:	rcr    esi,0xa7
  41ef5f:	sub    al,ah
  41ef61:	aam    0x1b
  41ef63:	pop    es
  41ef64:	push   edi
  41ef65:	das    
  41ef66:	xchg   ebx,eax
  41ef67:	(bad)  
  41ef69:	and    eax,0x5a38c20e
  41ef6e:	jge    0x41ef08
  41ef70:	test   eax,0x555f1e6c
  41ef75:	outs   dx,DWORD PTR ds:[esi]
  41ef76:	inc    edi
  41ef77:	sub    eax,0xde75336d
  41ef7c:	test   DWORD PTR [eax+0x52],esi
  41ef7f:	fcom   DWORD PTR [edx+0x4f9d4a22]
  41ef85:	dec    eax
  41ef86:	jmp    0xc70e:0xd1f1491b
  41ef8d:	aam    0x58
  41ef8f:	inc    edx
  41ef90:	push   ebx
  41ef91:	mov    esi,DWORD PTR [ebx+ebx*1]
  41ef94:	std    
  41ef95:	mov    dl,0x3d
  41ef97:	fistp  DWORD PTR [esi+0x5ae0631]
  41ef9d:	cmp    DWORD PTR [ebp+0x44],0x0
  41efa1:	aaa    
  41efa2:	out    dx,eax
  41efa3:	pop    ebx
  41efa4:	aam    0x25
  41efa6:	dec    esi
  41efa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efa9:	stos   BYTE PTR es:[edi],al
  41efaa:	call   0xbb54:0xeba18c40
  41efb1:	push   edx
  41efb2:	xchg   edx,eax
  41efb3:	pop    es
  41efb4:	pop    ecx
  41efb5:	push   cs
  41efb6:	sub    DWORD PTR [edx],0x8
  41efb9:	retf   0xcee7
  41efbc:	add    DWORD PTR [edx+esi*1],0x27
  41efc0:	adc    esp,DWORD PTR [esi-0x68]
  41efc3:	cli    
  41efc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efc5:	mov    ecx,0x8b7b9e42
  41efca:	inc    edi
  41efcb:	pushf  
  41efcc:	in     eax,dx
  41efcd:	add    al,0xd3
  41efcf:	cmp    bh,dh
  41efd1:	rcr    DWORD PTR [edx-0xcdcb517],cl
  41efd7:	xor    BYTE PTR [ecx-0xa272c78],0x85
  41efde:	push   ebx
  41efdf:	test   esp,ebx
  41efe1:	push   ds
  41efe2:	loop   0x41f02f
  41efe4:	lods   eax,DWORD PTR ds:[esi]
  41efe5:	xchg   esp,eax
  41efe6:	in     eax,0xfe
  41efe8:	xchg   ebp,eax
  41efe9:	inc    esp
  41efea:	cli    
  41efeb:	jns    0x41f03e
  41efed:	adc    edx,DWORD PTR [ecx+eiz*8]
  41eff0:	arpl   WORD PTR [edi+0x60],ax
  41eff3:	or     ebp,ebp
  41eff5:	pusha  
  41eff6:	dec    edx
  41eff7:	push   eax
  41eff8:	pop    ebx
  41eff9:	fldenv [edi+0x33]
  41effc:	sub    edi,ebx
  41effe:	fstp   TBYTE PTR [edi+0x7d425124]
  41f004:	addr16 out 0x3d,al
  41f007:	dec    ebx
  41f008:	cmc    
  41f009:	add    al,0x3a
  41f00b:	push   cs
  41f00c:	out    dx,al
  41f00d:	sahf   
  41f00e:	mov    cl,0xbb
  41f010:	xchg   esp,eax
  41f011:	fisub  WORD PTR [edi+0x77]
  41f014:	addr16 dec edi
  41f016:	jae    0x41f04b
  41f018:	jl     0x41efe2
  41f01a:	lea    edi,[esi-0x3b368d10]
  41f020:	add    ebp,DWORD PTR [ebx]
  41f022:	in     al,0xc3
  41f024:	ja     0x41f08c
  41f026:	js     0x41efe5
  41f028:	mov    dl,0x30
  41f02a:	pop    ss
  41f02b:	adc    bl,BYTE PTR [esi]
  41f02d:	mov    DWORD PTR [eax],edx
  41f02f:	push   ebp
  41f030:	cld    
  41f031:	repnz lahf 
  41f033:	leave  
  41f034:	idiv   DWORD PTR [esi-0x1a]
  41f037:	outs   dx,DWORD PTR ds:[esi]
  41f038:	bound  esp,QWORD PTR [esi+0x70b2f393]
  41f03e:	mov    ecx,eax
  41f040:	les    ebx,FWORD PTR [eax+0x4690a1b]
  41f046:	xor    bh,BYTE PTR [ebx+ebx*4-0x274c6a3c]
  41f04d:	push   DWORD PTR [ebx-0x373ae6ff]
  41f053:	push   ss
  41f054:	push   ss
  41f055:	or     ah,bl
  41f057:	test   dl,0x6d
  41f05a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f05b:	ja     0x41eff4
  41f05d:	fidiv  DWORD PTR [esi]
  41f05f:	push   esi
  41f060:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f061:	div    edx
  41f063:	pushf  
  41f064:	lock pushf 
  41f066:	stc    
  41f067:	shl    DWORD PTR [edx+0x3e],1
  41f06a:	mov    DWORD PTR [ebx+esi*4-0x2140ae2c],ecx
  41f071:	aam    0x33
  41f073:	inc    ecx
  41f074:	mov    esp,0x212984be
  41f079:	clc    
  41f07a:	add    BYTE PTR [ebp-0x32],ch
  41f07d:	jp     0x41f059
  41f07f:	mov    esi,0x565983d1
  41f084:	daa    
  41f085:	cmp    dh,BYTE PTR [ebp+0x604ace62]
  41f08b:	sbb    ah,bh
  41f08d:	lahf   
  41f08e:	inc    ebp
  41f08f:	push   edx
  41f090:	test   BYTE PTR [eax+0x3c],cl
  41f093:	jns    0x41f0a5
  41f095:	pop    ebx
  41f096:	pushf  
  41f097:	rol    DWORD PTR ds:0xcf4a8512,cl
  41f09d:	dec    esp
  41f09e:	(bad)
  41f0a2:	cwde   
  41f0a3:	pushf  
  41f0a4:	pop    eax
  41f0a5:	(bad)  
  41f0a6:	jmp    0x9c93:0x92ccc5d6
  41f0ad:	mov    ds:0x150ec53b,eax
  41f0b2:	fcompp 
  41f0b4:	xor    al,BYTE PTR [esp+esi*1+0x404e6660]
  41f0bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0bc:	sbb    eax,DWORD PTR [eax-0x6f06668e]
  41f0c2:	jmp    0x41f12a
  41f0c4:	loope  0x41f0f5
  41f0c6:	retf   0xd6be
  41f0c9:	in     eax,0xa9
  41f0cb:	hlt    
  41f0cc:	adc    bl,BYTE PTR [ecx+ebx*2-0x7024fbbd]
  41f0d3:	adc    al,0x8
  41f0d5:	push   edx
  41f0d6:	(bad)  
  41f0d7:	mov    esp,0xc7ad0b74
  41f0dc:	xor    eax,0xb43c92d2
  41f0e1:	(bad)  
  41f0e2:	outs   dx,DWORD PTR ds:[esi]
  41f0e3:	mov    esi,?
  41f0e5:	int    0x86
  41f0e7:	sahf   
  41f0e8:	mov    bh,0x4f
  41f0ea:	mov    ch,0x51
  41f0ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0ed:	cwde   
  41f0ee:	pop    ebp
  41f0ef:	sub    DWORD PTR ds:0x41b83633,edx
  41f0f5:	pop    es
  41f0f6:	dec    ebx
  41f0f7:	bound  edx,QWORD PTR [edx-0x1e]
  41f0fa:	add    BYTE PTR [ecx+edx*8+0x4fdb41e6],bh
  41f101:	rol    BYTE PTR [ebx-0x3],0xc9
  41f105:	scas   eax,DWORD PTR es:[edi]
  41f106:	loop   0x41f101
  41f108:	jns    0x41f146
  41f10a:	mov    BYTE PTR [edi],dl
  41f10c:	xchg   ecx,eax
  41f10d:	mov    dh,0x7
  41f10f:	enter  0xaa02,0x89
  41f113:	xchg   esp,eax
  41f114:	fbstp  TBYTE PTR [ebx]
  41f116:	pop    edi
  41f117:	sbb    DWORD PTR [ecx-0x41898c68],ebx
  41f11d:	lods   al,BYTE PTR ds:[esi]
  41f11e:	adc    BYTE PTR [edx-0x2b040a6d],bh
  41f124:	dec    edi
  41f125:	pop    ecx
  41f126:	sbb    DWORD PTR [edx-0x48],ebp
  41f129:	rcr    DWORD PTR [ecx],cl
  41f12b:	mov    esp,edx
  41f12d:	cmp    eax,0x5e8e71c
  41f132:	jno    0x41f12c
  41f134:	cmp    ecx,eax
  41f136:	cmp    al,0x74
  41f138:	push   ecx
  41f139:	fwait
  41f13a:	or     bl,BYTE PTR [ecx-0x76]
  41f13d:	xor    al,0x8
  41f13f:	or     eax,0xc04c4444
  41f144:	in     al,0x42
  41f146:	into   
  41f147:	idiv   DWORD PTR [eax-0x782b6c78]
  41f14d:	adc    eax,DWORD PTR [esi+0x790a7701]
  41f153:	fwait
  41f154:	rol    bh,cl
  41f156:	int    0x53
  41f158:	out    dx,al
  41f159:	mov    ecx,DWORD PTR [edx]
  41f15b:	addr16 mov edi,0x3f26bb04
  41f161:	call   0xcf3e:0xc7f8d0fa
  41f168:	fsub   QWORD PTR [edi+0x10]
  41f16b:	sbb    BYTE PTR [edi],bh
  41f16d:	jle    0x41f0f6
  41f16f:	gs pop esp
  41f171:	das    
  41f172:	cwde   
  41f173:	jae    0x41f1ed
  41f175:	adc    eax,0x464873cb
  41f17a:	mov    esi,0xdb63a1d7
  41f17f:	loope  0x41f164
  41f181:	jecxz  0x41f141
  41f183:	out    0x1e,al
  41f185:	or     ebp,ecx
  41f187:	stc    
  41f188:	xor    al,ch
  41f18a:	push   edi
  41f18b:	lods   eax,DWORD PTR ds:[esi]
  41f18c:	ret    0x1c83
  41f18f:	daa    
  41f190:	xor    eax,esp
  41f192:	outs   dx,BYTE PTR ds:[esi]
  41f193:	cmp    al,0x3
  41f195:	jb     0x41f1a0
  41f197:	sbb    eax,0x803d15d1
  41f19c:	jle    0x41f1a1
  41f19e:	int    0x4c
  41f1a0:	ror    DWORD PTR [esp+ebp*4],0x24
  41f1a4:	add    ah,BYTE PTR [ebx-0x38]
  41f1a7:	mov    BYTE PTR [edx-0x31faee3f],dh
  41f1ad:	mov    ah,0x5
  41f1af:	adc    BYTE PTR [eax+esi*4],0x53
  41f1b3:	xchg   edi,eax
  41f1b4:	mov    edx,0xdc58451b
  41f1b9:	loopne 0x41f199
  41f1bb:	fild   QWORD PTR [edi-0x2bff110d]
  41f1c1:	mov    cs,eax
  41f1c3:	pushf  
  41f1c4:	es mov edi,0xc7a582b0
  41f1ca:	lods   al,BYTE PTR ds:[esi]
  41f1cb:	sbb    dl,BYTE PTR [ecx+0x33]
  41f1ce:	stc    
  41f1cf:	jae    0x41f1a6
  41f1d1:	daa    
  41f1d2:	adc    eax,ebp
  41f1d4:	inc    esp
  41f1d5:	pop    eax
  41f1d6:	or     BYTE PTR [edx-0x10],ch
  41f1d9:	pop    esp
  41f1da:	mov    ds:0x8857a183,al
  41f1df:	loope  0x41f1f8
  41f1e1:	mov    esi,0x27ac340
  41f1e6:	inc    ebx
  41f1e7:	pop    edx
  41f1e8:	cmp    esp,DWORD PTR [ecx-0x4f]
  41f1eb:	xchg   ecx,eax
  41f1ec:	xchg   ebx,eax
  41f1ed:	xchg   BYTE PTR [ebx+0x13],al
  41f1f0:	mov    fs,WORD PTR [esi+0x64]
  41f1f3:	test   DWORD PTR [ebp+ebx*2+0x399fe6f5],ebp
  41f1fa:	sbb    BYTE PTR ds:0x47f1baeb,ch
  41f200:	aas    
  41f201:	or     al,bl
  41f203:	std    
  41f204:	aam    0x56
  41f206:	out    dx,al
  41f207:	cmp    DWORD PTR [ebp+0x48b6507d],ecx
  41f20d:	daa    
  41f20e:	jo     0x41f27b
  41f210:	or     BYTE PTR [eax+ebp*4-0xa],cl
  41f214:	sbb    al,BYTE PTR [ebx]
  41f216:	daa    
  41f217:	imul   ebx,DWORD PTR [eax],0xf7838072
  41f21d:	retf   0xd4ea
  41f220:	test   BYTE PTR [ebp+0x73],al
  41f223:	xchg   ebx,eax
  41f224:	sti    
  41f225:	mov    edi,0x8b704395
  41f22a:	shl    cl,cl
  41f22c:	or     BYTE PTR [edx+eiz*2-0x45],ah
  41f230:	sub    eax,0x7e379956
  41f235:	xchg   BYTE PTR [esi],bh
  41f237:	sbb    bl,0x68
  41f23a:	push   esp
  41f23b:	ds mov dh,0x69
  41f23e:	cmp    dh,cl
  41f240:	cmp    ebp,DWORD PTR [eax-0x4f]
  41f243:	add    ch,BYTE PTR [edx-0x41]
  41f246:	icebp  
  41f247:	in     eax,0x5f
  41f249:	xchg   ebp,eax
  41f24a:	jecxz  0x41f26f
  41f24c:	call   0x4dbd:0x7b3e0cfc
  41f253:	(bad)  
  41f254:	clc    
  41f255:	adc    DWORD PTR [esp+edi*1+0x76],ecx
  41f259:	pop    ebp
  41f25a:	inc    ebp
  41f25b:	psllq  mm7,mm4
  41f25e:	ja     0x41f25e
  41f260:	mov    al,bh
  41f262:	dec    esp
  41f263:	hlt    
  41f264:	loopne 0x41f252
  41f266:	js     0x41f287
  41f268:	stos   DWORD PTR es:[edi],eax
  41f269:	lea    esi,[edi+0x3cea12db]
  41f26f:	mov    ah,BYTE PTR [ebx]
  41f271:	or     esp,DWORD PTR [esp+eiz*4]
  41f274:	fisubr DWORD PTR [ecx-0x3f316512]
  41f27a:	pushf  
  41f27b:	push   cs
  41f27c:	test   BYTE PTR [ebp-0x21],ah
  41f27f:	int    0xec
  41f281:	das    
  41f282:	gs mov esi,0x9b661f14
  41f288:	and    ch,ch
  41f28a:	lds    ecx,FWORD PTR [esi]
  41f28c:	xchg   esi,eax
  41f28d:	or     BYTE PTR [ecx],bh
  41f28f:	(bad)  
  41f290:	mov    ebp,0x1caa6c43
  41f295:	mov    ds:0x7ea4e284,al
  41f29a:	or     edx,esp
  41f29c:	sub    al,bl
  41f29e:	sub    BYTE PTR ds:0x5bc2208c,dh
  41f2a4:	mov    esp,0xa998f679
  41f2a9:	mov    al,ds:0x151c5b93
  41f2ae:	(bad)
  41f2b1:	mov    ds:0x8227bc0b,al
  41f2b6:	inc    eax
  41f2b7:	inc    ebx
  41f2b8:	mov    eax,ds:0x7f8dc00b
  41f2bd:	push   esp
  41f2be:	or     bh,bh
  41f2c0:	cwde   
  41f2c1:	lahf   
  41f2c2:	mov    DWORD PTR ds:0x4e7aca73,ebx
  41f2c8:	sahf   
  41f2c9:	sbb    BYTE PTR ds:0x7c95eae2,ch
  41f2cf:	sbb    ebx,eax
  41f2d1:	pop    ecx
  41f2d2:	shl    BYTE PTR [edx],0xeb
  41f2d5:	mov    ?,esi
  41f2d7:	ja     0x41f2a4
  41f2d9:	loop   0x41f2f7
  41f2db:	mov    ds:0x3181b479,al
  41f2e0:	or     ch,BYTE PTR [edi+0x6b]
  41f2e3:	sub    ecx,ecx
  41f2e5:	ins    BYTE PTR es:[edi],dx
  41f2e6:	call   0x5cda14fb
  41f2eb:	sub    eax,0xb07e4b79
  41f2f0:	cmp    BYTE PTR [esi-0x4217bfb3],ch
  41f2f6:	loop   0x41f28a
  41f2f8:	mov    al,ds:0x23b5198c
  41f2fd:	mov    edi,0xebccedf6
  41f302:	std    
  41f303:	stc    
  41f304:	cmp    ebx,ecx
  41f306:	scas   al,BYTE PTR es:[edi]
  41f307:	or     bh,BYTE PTR [esi+0x14]
  41f30a:	dec    esi
  41f30b:	cmp    cl,cl
  41f30d:	idiv   bh
  41f30f:	inc    eax
  41f310:	pop    esp
  41f311:	sub    ecx,DWORD PTR [esi]
  41f313:	pop    ecx
  41f314:	jl     0x41f33f
  41f316:	mov    bh,0xcb
  41f318:	pop    ds
  41f319:	adc    esi,DWORD PTR [edx-0x2f]
  41f31c:	loope  0x41f2af
  41f31e:	xor    bh,dl
  41f320:	push   esp
  41f321:	div    DWORD PTR [ecx-0x2c]
  41f324:	pop    ecx
  41f325:	sbb    eax,DWORD PTR [ebx+0x1cd516d6]
  41f32b:	pop    edi
  41f32c:	sahf   
  41f32d:	xor    eax,0x92a5a204
  41f332:	and    ebx,ebp
  41f334:	mov    al,al
  41f336:	cmp    bl,bl
  41f338:	gs mov esi,0x8e722db4
  41f33e:	push   cs
  41f33f:	cli    
  41f340:	std    
  41f341:	pop    esp
  41f342:	mov    bl,0x32
  41f344:	inc    edx
  41f345:	icebp  
  41f346:	push   ss
  41f347:	mov    ch,BYTE PTR [ebx]
  41f349:	mov    bl,0x7f
  41f34b:	jg     0x41f3a9
  41f34d:	push   edx
  41f34e:	pushf  
  41f34f:	push   cs
  41f350:	jae    0x41f365
  41f352:	jmp    0xb8f:0x7f409854
  41f359:	test   DWORD PTR [ecx-0x17ee73be],0xf67f91d
  41f363:	sbb    BYTE PTR [edi],bl
  41f365:	popf   
  41f366:	cmp    eax,0x348bcc55
  41f36b:	gs daa 
  41f36d:	pop    ecx
  41f36e:	inc    ecx
  41f36f:	cwde   
  41f370:	imul   BYTE PTR [edx-0x1a1d0e01]
  41f376:	jno    0x41f3d1
  41f378:	cmp    eax,0x7b69fb4
  41f37d:	sar    BYTE PTR [esi],1
  41f37f:	lea    ebp,[edx]
  41f381:	push   esi
  41f382:	les    ebp,FWORD PTR ds:0x8e299a1e
  41f388:	sbb    eax,0x163d2d64
  41f38d:	jle    0x41f39c
  41f38f:	adc    eax,0x53069048
  41f394:	inc    ecx
  41f395:	fld    DWORD PTR [ecx+0x53]
  41f398:	daa    
  41f399:	or     bh,BYTE PTR [esi+0x7d]
  41f39c:	scas   eax,DWORD PTR es:[edi]
  41f39d:	pop    ebp
  41f39e:	mov    ah,0xf1
  41f3a0:	jns    0x41f334
  41f3a2:	fisttp DWORD PTR [ebx+eax*2+0x15]
  41f3a6:	loop   0x41f3b9
  41f3a8:	int3   
  41f3a9:	ror    DWORD PTR [edx-0x5b],1
  41f3ac:	int3   
  41f3ad:	rcl    BYTE PTR [edx],1
  41f3af:	mov    BYTE PTR [ebx+ecx*2],al
  41f3b2:	int    0xae
  41f3b4:	repz ficom WORD PTR [esi]
  41f3b7:	and    esp,DWORD PTR [edi-0x4d]
  41f3ba:	xlat   BYTE PTR ds:[ebx]
  41f3bb:	cmp    al,0x2
  41f3bd:	loope  0x41f3d8
  41f3bf:	icebp  
  41f3c0:	and    DWORD PTR [bp+si-0x5e],edi
  41f3c4:	and    BYTE PTR [ebx-0x35a5de1],al
  41f3ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3cb:	push   ebx
  41f3cc:	pop    ss
  41f3cd:	outs   dx,DWORD PTR ds:[esi]
  41f3ce:	or     edi,eax
  41f3d0:	es xor al,0x8f
  41f3d3:	xchg   esi,eax
  41f3d4:	lds    ebx,FWORD PTR [esi]
  41f3d6:	cmp    bl,BYTE PTR [ecx-0x5e3e53d1]
  41f3dc:	aad    0x7f
  41f3de:	pop    ebx
  41f3df:	hlt    
  41f3e0:	test   DWORD PTR [edi],0xc45f1054
  41f3e6:	sahf   
  41f3e7:	sahf   
  41f3e8:	test   al,0x13
  41f3ea:	or     BYTE PTR [ebp-0x1ae47738],0x62
  41f3f1:	inc    ecx
  41f3f2:	mov    ds:0x1b25e34f,eax
  41f3f7:	and    al,0xc9
  41f3f9:	xor    BYTE PTR [esi+0x31],0x68
  41f3fd:	sbb    BYTE PTR ds:0xb2b701e0,0x7b
  41f404:	mov    bl,0x7c
  41f406:	pop    esi
  41f407:	(bad)  
  41f408:	clc    
  41f409:	enter  0x303f,0x5b
  41f40d:	jae    0x41f39b
  41f40f:	std    
  41f410:	stos   BYTE PTR es:[edi],al
  41f411:	or     cl,BYTE PTR [esi-0x3e]
  41f414:	push   cs
  41f415:	hlt    
  41f416:	dec    eax
  41f417:	int    0x3
  41f419:	jmp    0x8c4b:0x59cb9827
  41f420:	sbb    esi,ecx
  41f422:	inc    ecx
  41f423:	in     eax,0x81
  41f425:	lock addr16 adc BYTE PTR gs:[bp+si-0x41],al
  41f42c:	stos   BYTE PTR es:[edi],al
  41f42d:	test   BYTE PTR [eax+0x12],ch
  41f430:	push   ecx
  41f431:	jmp    0x41f3d7
  41f433:	xlat   BYTE PTR ds:[ebx]
  41f434:	jae    0x41f3ee
  41f436:	mov    ds:0x11ed886b,eax
  41f43b:	add    eax,ebx
  41f43d:	mov    al,ds:0xe9dd735b
  41f442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f443:	xlat   BYTE PTR ds:[ebx]
  41f444:	jae    0x41f4b5
  41f446:	bound  edx,QWORD PTR [ecx-0x65c370f3]
  41f44c:	pcmpgtd mm0,QWORD PTR [edx+0x586c0c]
  41f453:	pop    ebx
  41f454:	sar    BYTE PTR [ecx+edx*8],0xad
  41f458:	(bad)  
  41f459:	dec    ebp
  41f45a:	jmp    0xf622:0x6791fb25
  41f461:	pop    ecx
  41f462:	push   ds
  41f463:	js     0x41f4cd
  41f465:	add    al,0xc0
  41f467:	icebp  
  41f468:	(bad)  
  41f469:	cwde   
  41f46a:	or     eax,esp
  41f46c:	mov    edi,DWORD PTR [edx+0x484c78f9]
  41f472:	std    
  41f473:	cld    
  41f474:	mov    dx,0x2624
  41f478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f479:	dec    edi
  41f47a:	mov    ds:0x1cdb824b,al
  41f47f:	enter  0xd42a,0x4f
  41f483:	test   eax,0x14f7b1a2
  41f488:	es sub al,0x4
  41f48b:	std    
  41f48c:	jb     0x41f4af
  41f48e:	dec    edi
  41f48f:	pop    eax
  41f490:	not    BYTE PTR [ecx]
  41f492:	mov    ebx,0x88069c36
  41f497:	xchg   edi,eax
  41f498:	sub    al,0xa6
  41f49a:	and    BYTE PTR [ebx+0xaad195d],dl
  41f4a0:	pop    esi
  41f4a1:	mov    eax,0x803b0c1c
  41f4a6:	jg     0x41f430
  41f4a8:	xlat   BYTE PTR ds:[ebx]
  41f4a9:	mov    edi,0xb1eba55d
  41f4ae:	fcomp  QWORD PTR [esi-0x2a]
  41f4b1:	sbb    ecx,esi
  41f4b3:	nop
  41f4b4:	dec    ebp
  41f4b5:	scas   al,BYTE PTR es:[edi]
  41f4b6:	mov    edx,0xfd77530
  41f4bb:	inc    ebx
  41f4bc:	mov    dl,BYTE PTR [edx-0x1005c1c4]
  41f4c2:	xchg   BYTE PTR ds:0xa535fee8,cl
  41f4c8:	std    
  41f4c9:	punpckhbw mm5,QWORD PTR [ecx]
  41f4cc:	add    edx,DWORD PTR [ebx+0x3b01ce8f]
  41f4d2:	pop    ss
  41f4d3:	lods   eax,DWORD PTR ds:[esi]
  41f4d4:	repz loope 0x41f4c4
  41f4d7:	mov    cl,0xa1
  41f4d9:	aas    
  41f4da:	mov    ebx,0x60c8a447
  41f4df:	sub    edx,DWORD PTR [edi-0x1b543fc5]
  41f4e5:	pop    edi
  41f4e6:	aam    0xf0
  41f4e8:	pop    esi
  41f4e9:	cs lahf 
  41f4eb:	lea    edx,[esi]
  41f4ed:	sbb    DWORD PTR [ebp+0x60],edx
  41f4f0:	stc    
  41f4f1:	cmp    edi,DWORD PTR [edi]
  41f4f3:	sub    BYTE PTR [eax],0xc6
  41f4f6:	push   ds
  41f4f7:	mov    esp,0x1b6f4e0d
  41f4fc:	pop    edx
  41f4fd:	pop    es
  41f4fe:	mov    edi,0x94d7070c
  41f503:	jnp    0x41f582
  41f505:	fwait
  41f506:	out    dx,al
  41f507:	loopne 0x41f4c3
  41f509:	pop    eax
  41f50a:	push   edx
  41f50b:	pop    esp
  41f50c:	stos   DWORD PTR es:[edi],eax
  41f50d:	js     0x41f4a1
  41f50f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f510:	in     eax,dx
  41f511:	inc    ecx
  41f512:	lahf   
  41f513:	lea    esi,[eax]
  41f515:	mov    ebx,0xd35809
  41f51a:	add    al,0x22
  41f51c:	push   ds
  41f51d:	(bad)  
  41f51e:	mov    esp,0x45909e3e
  41f523:	dec    esp
  41f524:	push   ecx
  41f525:	test   eax,0x344f9717
  41f52a:	imul   ecx,DWORD PTR [eax+ebx*8-0x5],0xffffffe6
  41f52f:	push   ss
  41f530:	leave  
  41f531:	xchg   ecx,eax
  41f532:	pop    ecx
  41f533:	lock add eax,0x6bca8d8a
  41f539:	lods   al,BYTE PTR ds:[esi]
  41f53a:	xchg   al,ch
  41f53c:	outs   dx,BYTE PTR ds:[esi]
  41f53d:	jg     0x41f57d
  41f53f:	shl    BYTE PTR [ebp+0x14faf55b],1
  41f545:	sub    dh,BYTE PTR [eax-0x58f489ff]
  41f54b:	lods   eax,DWORD PTR gs:[esi]
  41f54d:	fimul  DWORD PTR fs:[esi-0x35d4fe19]
  41f554:	jp     0x41f585
  41f556:	out    0x5b,eax
  41f558:	xchg   ecx,eax
  41f559:	xor    ecx,DWORD PTR [esi+0x71]
  41f55c:	and    al,0xcf
  41f55e:	pop    ebx
  41f55f:	or     ebx,DWORD PTR [edi-0x1f]
  41f562:	push   eax
  41f563:	push   ds
  41f564:	stc    
  41f565:	imul   ebp,DWORD PTR [ebp+0x8],0xffffffec
  41f569:	sub    esp,DWORD PTR [eax+ecx*4]
  41f56c:	loope  0x41f4fd
  41f56e:	icebp  
  41f56f:	mov    esi,0x11844b39
  41f574:	fprem1 
  41f576:	jecxz  0x41f59d
  41f578:	mov    cs,ecx
  41f57a:	ins    BYTE PTR es:[edi],dx
  41f57b:	xchg   ecx,eax
  41f57c:	jecxz  0x41f501
  41f57e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f57f:	pop    ds
  41f580:	pop    es
  41f581:	popa   
  41f582:	clc    
  41f583:	lock int3 
  41f585:	inc    DWORD PTR [edi-0x78]
  41f588:	or     al,0xdc
  41f58a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f58b:	out    dx,eax
  41f58c:	push   0x28bc5357
  41f591:	lods   al,BYTE PTR ds:[esi]
  41f592:	(bad)  
  41f593:	mov    ebp,0xb562a479
  41f598:	aad    0xa6
  41f59a:	dec    ebx
  41f59b:	out    0xcf,eax
  41f59d:	mov    dl,0x93
  41f59f:	dec    ecx
  41f5a0:	xchg   ecx,eax
  41f5a1:	xchg   edi,eax
  41f5a2:	imul   ebx,ecx,0x63
  41f5a5:	ja     0x41f5d2
  41f5a7:	cmp    eax,0x211f74f
  41f5ac:	out    0x78,eax
  41f5ae:	add    eax,0xe024ba9c
  41f5b3:	mov    al,0xa8
  41f5b5:	mov    dl,BYTE PTR ds:0xaf719588
  41f5bb:	mov    ch,0xee
  41f5bd:	enter  0x98c0,0xc8
  41f5c1:	fdiv   st,st(7)
  41f5c3:	test   DWORD PTR [esi-0x4e649277],ecx
  41f5c9:	mov    esi,0xfc1288f9
  41f5ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5cf:	inc    ecx
  41f5d0:	loopne 0x41f5d9
  41f5d2:	push   es
  41f5d3:	pop    ecx
  41f5d4:	out    0xe5,eax
  41f5d6:	stos   DWORD PTR es:[edi],eax
  41f5d7:	lock add BYTE PTR [ecx],cl
  41f5da:	adc    BYTE PTR [edx-0x3aa77a44],bl
  41f5e0:	or     DWORD PTR [edx-0x6f],0x8a9a0d9a
  41f5e7:	jo     0x41f5bc
  41f5e9:	push   ebp
  41f5ea:	lock adc dl,bh
  41f5ed:	fild   WORD PTR [ecx-0x22]
  41f5f0:	aad    0xc7
  41f5f2:	outs   dx,DWORD PTR ds:[esi]
  41f5f3:	inc    esi
  41f5f4:	fistp  QWORD PTR [edi+0x6cae0e4a]
  41f5fa:	imul   ebp,DWORD PTR [bx+si],0xeb087863
  41f601:	es shl al,0x72
  41f605:	push   ebx
  41f606:	push   ebx
  41f607:	push   ecx
  41f609:	js     0x41f65a
  41f60b:	arpl   WORD PTR [edx+ecx*1+0x3ec1d4ce],bp
  41f612:	pop    edi
  41f613:	sbb    BYTE PTR [ecx],0x12
  41f616:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f618:	int    0x23
  41f61a:	xchg   BYTE PTR [ebx-0x1b],ah
  41f61d:	test   eax,0xf303947a
  41f622:	push   ecx
  41f623:	mov    WORD PTR [ebp-0x48e152e5],ds
  41f629:	or     ah,BYTE PTR ds:0x17a2c61f
  41f62f:	push   0xffffff8b
  41f631:	jmp    0x41f65f
  41f633:	dec    eax
  41f634:	push   ebp
  41f635:	sub    ebp,eax
  41f637:	sub    al,0x6
  41f639:	fiadd  WORD PTR [eax]
  41f63b:	or     ch,BYTE PTR [ecx-0x2c0aa3f1]
  41f641:	cmp    al,BYTE PTR [edx+eax*4]
  41f644:	jmp    0x41f5e1
  41f646:	and    al,0xe0
  41f648:	mov    bh,0xab
  41f64a:	dec    esi
  41f64b:	add    al,0x16
  41f64d:	int3   
  41f64e:	cmp    bl,BYTE PTR [ebp+0x4b717e29]
  41f654:	stos   BYTE PTR es:[edi],al
  41f655:	lods   eax,DWORD PTR ds:[esi]
  41f656:	and    DWORD PTR [ebp+0x68],ebx
  41f659:	jge    0x41f615
  41f65b:	pushf  
  41f65c:	jae    0x41f664
  41f65e:	jne    0x41f651
  41f660:	mov    al,ds:0x834dfcbd
  41f665:	jb     0x41f68c
  41f667:	data16 loopne 0x41f65f
  41f66a:	sbb    edx,DWORD PTR [eax-0x5c]
  41f66d:	fiadd  DWORD PTR [ebx+ebx*2]
  41f670:	pushf  
  41f671:	in     eax,dx
  41f672:	sahf   
  41f673:	push   0xde7b5c6c
  41f678:	pop    ds
  41f679:	sub    al,0xaf
  41f67b:	mov    al,ds:0x523a2a48
  41f680:	js     0x41f664
  41f682:	mov    al,ds:0xc0c26f64
  41f687:	fbstp  TBYTE PTR ds:0x51399207
  41f68d:	mov    ah,0x35
  41f68f:	jae    0x41f68a
  41f691:	mov    ebp,DWORD PTR [esi+0x20c65526]
  41f697:	fst    QWORD PTR [ecx+ebp*2]
  41f69a:	retf   0x4aba
  41f69d:	scas   eax,DWORD PTR es:[edi]
  41f69e:	or     al,0xae
  41f6a0:	fidiv  WORD PTR [edx]
  41f6a2:	xchg   esp,eax
  41f6a3:	neg    ch
  41f6a5:	fld    DWORD PTR [edi-0xe]
  41f6a8:	push   esi
  41f6a9:	(bad)  
  41f6aa:	(bad)  
  41f6ab:	adc    eax,0x1d6a3e0e
  41f6b0:	or     ah,BYTE PTR [ebx+0x2]
  41f6b3:	push   0x58
  41f6b5:	cmc    
  41f6b6:	(bad)  
  41f6b7:	out    dx,eax
  41f6b8:	cwde   
  41f6b9:	fstp   DWORD PTR [eax+eax*1]
  41f6bc:	popa   
  41f6bd:	mov    eax,ds:0xe1af2f5f
  41f6c2:	add    bh,BYTE PTR [ebx]
  41f6c4:	mov    esp,0xc7b00b01
  41f6c9:	lods   eax,DWORD PTR ds:[esi]
  41f6ca:	and    al,0x77
  41f6cc:	rol    DWORD PTR [ebp-0x79],1
  41f6cf:	repnz adc ch,ch
  41f6d2:	adc    BYTE PTR [eax+0x47fe4034],0x99
  41f6d9:	adc    eax,0x161f9fc5
  41f6de:	cmp    DWORD PTR [edi+0x6e],edx
  41f6e1:	cmp    dh,ah
  41f6e3:	jae    0x41f6a1
  41f6e5:	mov    DWORD PTR [edx],esp
  41f6e7:	lds    edi,FWORD PTR [ebx-0x6ef6a2ad]
  41f6ed:	clc    
  41f6ee:	jne    0x41f69c
  41f6f0:	out    0x1a,eax
  41f6f2:	sub    al,0x57
  41f6f4:	jl     0x41f6a7
  41f6f6:	ficomp DWORD PTR fs:[edx-0x12664452]
  41f6fd:	cmp    esi,eax
  41f6ff:	int    0xd2
  41f701:	xchg   edi,eax
  41f702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f703:	aad    0x5d
  41f705:	fld    DWORD PTR [eax+0x3662d015]
  41f70b:	popf   
  41f70c:	push   es
  41f70d:	jae    0x41f6dc
  41f70f:	mov    edx,edi
  41f711:	jbe    0x41f73c
  41f713:	xchg   ebx,eax
  41f714:	pusha  
  41f715:	out    dx,eax
  41f716:	xchg   esi,eax
  41f717:	inc    edi
  41f718:	call   0x623:0xdad67083
  41f71f:	and    ecx,DWORD PTR [ebp+0x33]
  41f722:	mov    ah,0xd
  41f724:	fistp  WORD PTR [edi+0x748889a5]
  41f72a:	into   
  41f72b:	push   edx
  41f72c:	pop    ecx
  41f72d:	inc    ebx
  41f72e:	jne    0x41f792
  41f730:	xchg   ebp,eax
  41f731:	paddb  mm6,QWORD PTR [eax-0x79de4cd]
  41f738:	cmp    edx,ecx
  41f73a:	loopne 0x41f6d4
  41f73c:	push   es
  41f73d:	jg     0x41f70c
  41f73f:	jmp    0x41f775
  41f741:	loopne 0x41f7b5
  41f743:	js     0x41f6e6
  41f745:	es push cs
  41f747:	and    BYTE PTR [edx-0x1aae817c],bl
  41f74d:	pop    esp
  41f74e:	push   esi
  41f74f:	sub    edx,0xf18dd246
  41f755:	mov    dl,0x67
  41f757:	jle    0x41f77b
  41f759:	cmp    BYTE PTR [eax+0x2f],cl
  41f75c:	in     eax,dx
  41f75d:	int3   
  41f75e:	aaa    
  41f75f:	adc    bl,BYTE PTR [edi]
  41f761:	pop    edi
  41f762:	inc    esi
  41f763:	lea    edi,[ebp+0x1ceafc32]
  41f769:	jb     0x41f736
  41f76b:	cld    
  41f76c:	arpl   WORD PTR [edi-0x347c3ec9],di
  41f772:	std    
  41f773:	icebp  
  41f774:	dec    ebx
  41f775:	mov    cl,al
  41f777:	pop    eax
  41f778:	popf   
  41f779:	add    cl,BYTE PTR [ecx]
  41f77b:	cmp    al,0x84
  41f77d:	jb     0x41f73e
  41f77f:	pop    edx
  41f780:	inc    eax
  41f781:	dec    esi
  41f782:	cmp    dl,dl
  41f784:	loopne 0x41f775
  41f786:	push   esp
  41f787:	enter  0x9862,0xd3
  41f78b:	stc    
  41f78c:	and    eax,0xc2ca6b57
  41f791:	sbb    DWORD PTR [ebx+0x25],esi
  41f794:	and    esp,ecx
  41f796:	adc    DWORD PTR [ebp+0x60426866],ebp
  41f79c:	mov    ecx,DWORD PTR [ecx]
  41f79e:	jns    0x41f773
  41f7a0:	shl    ebx,0x14
  41f7a3:	dec    esp
  41f7a4:	jns    0x41f742
  41f7a6:	shl    dl,1
  41f7a8:	adc    ch,BYTE PTR [esi]
  41f7aa:	ret    
  41f7ab:	xchg   ebp,eax
  41f7ac:	rcl    DWORD PTR [ebx-0x4d],1
  41f7af:	ins    DWORD PTR es:[edi],dx
  41f7b0:	or     edx,DWORD PTR [ebx]
  41f7b2:	adc    al,BYTE PTR [esi+0x76]
  41f7b5:	mov    ah,0x15
  41f7b7:	push   ebp
  41f7b8:	mov    ah,0x20
  41f7ba:	mov    ds:0xb65e0f12,eax
  41f7bf:	and    DWORD PTR [ecx],edi
  41f7c1:	popf   
  41f7c2:	ss ss call 0xed6a:0x3fd67cea
  41f7cb:	add    al,0x3
  41f7cd:	std    
  41f7ce:	shr    DWORD PTR [ebp-0x66b167d1],1
  41f7d4:	cmp    al,0x69
  41f7d6:	mov    edi,0x86cc7b3c
  41f7db:	xor    DWORD PTR [ebx],esp
  41f7dd:	mov    esp,0x453ab932
  41f7e2:	mov    eax,0x80969b0f
  41f7e7:	sbb    BYTE PTR [edx+esi*2],bl
  41f7ea:	jb     0x41f835
  41f7ec:	int    0x4b
  41f7ee:	mov    al,0x5d
  41f7f0:	scas   eax,DWORD PTR es:[edi]
  41f7f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7f2:	push   ecx
  41f7f3:	jecxz  0x41f818
  41f7f5:	jmp    0xeb96:0x6702f0a5
  41f7fc:	add    edx,DWORD PTR [ecx+0x4bd8ef41]
  41f802:	aam    0x47
  41f804:	gs add BYTE PTR cs:[esp+ebx*2+0x605b5a10],0xd7
  41f80e:	xor    eax,0xf74d9434
  41f813:	(bad)  
  41f814:	lahf   
  41f815:	fyl2xp1 
  41f817:	sbb    edi,DWORD PTR [esi+0x2a]
  41f81a:	das    
  41f81b:	mov    dl,0x7f
  41f81d:	jbe    0x41f883
  41f81f:	and    cl,dh
  41f821:	xor    DWORD PTR [ecx+0x75],esp
  41f824:	sbb    DWORD PTR [edi],ecx
  41f826:	jp     0x41f7b5
  41f828:	cmp    ah,bh
  41f82a:	retf   
  41f82b:	mov    al,0xbb
  41f82d:	sbb    BYTE PTR [eax+0x51423973],ch
  41f833:	dec    ecx
  41f834:	mov    dh,0xfb
  41f836:	in     al,dx
  41f837:	out    0x37,al
  41f839:	shr    DWORD PTR [ebx],cl
  41f83b:	cdq    
  41f83c:	mov    bh,cl
  41f83e:	dec    ebp
  41f83f:	push   ecx
  41f840:	mov    bh,0xf
  41f842:	stos   DWORD PTR es:[edi],eax
  41f843:	inc    edx
  41f844:	stc    
  41f845:	inc    ebx
  41f846:	mov    esp,0x930df100
  41f84b:	in     al,dx
  41f84c:	nop
  41f84d:	pop    ds
  41f84e:	inc    esp
  41f84f:	dec    edi
  41f850:	jbe    0x41f8c1
  41f852:	addr16 into 
  41f854:	mov    esp,0x83137840
  41f859:	dec    esp
  41f85a:	daa    
  41f85b:	repz pop edx
  41f85d:	(bad)  
  41f85e:	fs inc esi
  41f860:	ficom  WORD PTR [edx+esi*2-0x7ae07280]
  41f867:	mov    esp,0xcff00b6
  41f86c:	cmp    bh,ah
  41f86e:	fidiv  WORD PTR [ebx+0x52]
  41f871:	stos   DWORD PTR es:[edi],eax
  41f872:	jno    0x41f8c1
  41f874:	cwde   
  41f875:	out    0x32,eax
  41f877:	shr    BYTE PTR [esi+eax*2+0x45febe8b],cl
  41f87e:	(bad)  
  41f87f:	retf   0x274f
  41f882:	sub    eax,0x2284fad7
  41f887:	repnz sub BYTE PTR [bx+0xf1f],ah
  41f88d:	mov    gs,WORD PTR [edx-0x59]
  41f890:	popf   
  41f891:	mov    ds:0xd5ca5c39,al
  41f896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f897:	sbb    DWORD PTR [ebx+edi*4],esp
  41f89a:	push   edi
  41f89b:	es sbb esi,esi
  41f89e:	in     al,dx
  41f89f:	mov    fs,WORD PTR [ecx+0xf]
  41f8a2:	js     0x41f87a
  41f8a4:	repnz (bad) 
  41f8a6:	adc    al,0xcf
  41f8a8:	jae    0x41f88c
  41f8aa:	aad    0xce
  41f8ac:	push   ebx
  41f8ad:	jae    0x41f87f
  41f8af:	pop    ebx
  41f8b0:	std    
  41f8b1:	sub    dh,BYTE PTR [ebx]
  41f8b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8b4:	xor    al,0xc7
  41f8b6:	push   edx
  41f8b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8b8:	aas    
  41f8b9:	cmp    ecx,DWORD PTR [esi]
  41f8bb:	xlat   BYTE PTR ds:[ebx]
  41f8bc:	pop    es
  41f8bd:	(bad)  
  41f8be:	sbb    dl,BYTE PTR [edi-0x75]
  41f8c1:	sbb    esp,DWORD PTR [edx-0x10566438]
  41f8c7:	ins    DWORD PTR es:[edi],dx
  41f8c8:	inc    eax
  41f8c9:	outs   dx,DWORD PTR ds:[esi]
  41f8ca:	outs   dx,BYTE PTR ds:[esi]
  41f8cb:	cwde   
  41f8cc:	enter  0x1e1a,0x10
  41f8d0:	in     al,dx
  41f8d1:	test   al,0x18
  41f8d3:	jecxz  0x41f860
  41f8d5:	dec    edi
  41f8d6:	inc    ebp
  41f8d7:	scas   al,BYTE PTR es:[edi]
  41f8d8:	ins    DWORD PTR es:[edi],dx
  41f8d9:	xor    bh,BYTE PTR [ecx]
  41f8db:	jno    0x41f8f4
  41f8dd:	push   0x33
  41f8df:	sub    eax,0x42
  41f8e2:	pop    es
  41f8e3:	lods   eax,DWORD PTR ds:[esi]
  41f8e4:	(bad)  
  41f8e5:	sbb    bh,BYTE PTR [eax+0x548a68e3]
  41f8eb:	ret    
  41f8ec:	and    eax,0x29a9b3f5
  41f8f1:	cmp    eax,0xb65d4a3a
  41f8f6:	push   0xc2ebdef9
  41f8fb:	xor    DWORD PTR [eax-0x38],ebx
  41f8fe:	cmp    DWORD PTR [eax-0x212251cd],eax
  41f904:	mov    cl,0x86
  41f906:	retf   0x545c
  41f909:	pop    ebx
  41f90a:	and    DWORD PTR [ecx-0x5e936e0a],esi
  41f910:	pop    ss
  41f911:	in     al,0x91
  41f913:	arpl   WORD PTR [ecx+esi*1],cx
  41f916:	daa    
  41f917:	aam    0xa1
  41f919:	push   esp
  41f91a:	push   esp
  41f91b:	cmp    eax,0xf328b275
  41f920:	lods   eax,DWORD PTR ds:[esi]
  41f921:	lock in eax,dx
  41f923:	daa    
  41f924:	or     eax,0x53b22ac2
  41f929:	aaa    
  41f92a:	sbb    DWORD PTR [edx+0x6c069b67],esi
  41f930:	aaa    
  41f931:	mov    al,0x22
  41f933:	push   es
  41f934:	(bad)  
  41f935:	shr    DWORD PTR [esp+eax*4],1
  41f938:	lods   eax,DWORD PTR ds:[esi]
  41f939:	adc    BYTE PTR [ebx+0x3622626b],dh
  41f93f:	adc    bl,BYTE PTR [ebx-0x64]
  41f942:	(bad)  
  41f943:	add    eax,0xa093a563
  41f948:	(bad)  
  41f949:	(bad)  
  41f94a:	cmp    dl,al
  41f94c:	dec    edx
  41f94d:	add    al,0x21
  41f94f:	ret    0x67d2
  41f952:	mov    edi,0xcd868e45
  41f957:	xchg   esp,eax
  41f959:	inc    ecx
  41f95a:	aad    0xfe
  41f95c:	add    DWORD PTR [ebp+0x2d9b5b28],0x4
  41f963:	add    BYTE PTR [ecx],bh
  41f965:	and    al,BYTE PTR [ebx]
  41f967:	or     al,0xc6
  41f96a:	pop    eax
  41f96b:	jge    0x41f933
  41f96d:	pusha  
  41f96e:	(bad)  
  41f96f:	push   ebp
  41f970:	jmp    0x3e6:0xa3635afe
  41f977:	(bad)  
  41f978:	div    BYTE PTR [ebx]
  41f97a:	push   esp
  41f97b:	xlat   BYTE PTR ds:[ebx]
  41f97c:	add    edi,eax
  41f97e:	mov    DWORD PTR cs:[eax],0x35db167b
  41f985:	sub    BYTE PTR [edx+ecx*1-0x27],cl
  41f989:	push   ebp
  41f98a:	dec    ebx
  41f98b:	adc    edi,DWORD PTR [ecx+eax*8-0x2e]
  41f98f:	sar    DWORD PTR [ebp-0x3d],0x1d
  41f993:	call   FWORD PTR [ebx-0x7f6013dd]
  41f999:	xor    al,0x78
  41f99b:	retf   
  41f99c:	lds    edx,FWORD PTR [edx+0x25]
  41f99f:	aam    0x11
  41f9a1:	or     ebp,ebx
  41f9a3:	mov    esp,?
  41f9a5:	setg   BYTE PTR [esi+edx*4]
  41f9a9:	mov    WORD PTR [ebx+0x6a86e1bc],ss
  41f9af:	adc    al,ah
  41f9b1:	dec    eax
  41f9b2:	mov    ah,0x1d
  41f9b4:	push   ss
  41f9b5:	fdivrp st(2),st
  41f9b7:	mov    dh,0xfe
  41f9b9:	pop    ebx
  41f9ba:	add    ebp,DWORD PTR [edi]
  41f9bc:	jno    0x41fa03
  41f9be:	aaa    
  41f9bf:	fwait
  41f9c0:	mov    edx,fs
  41f9c2:	mov    esp,0x3a5c465
  41f9c7:	nop
  41f9c8:	jno    0x41fa3f
  41f9ca:	jp     0x41f950
  41f9cc:	test   esp,eax
  41f9ce:	xchg   edi,eax
  41f9cf:	shl    DWORD PTR [ebx+0x45],cl
  41f9d2:	pop    ebx
  41f9d3:	mov    ecx,0x4322cd4f
  41f9d8:	cdq    
  41f9d9:	push   esp
  41f9da:	xchg   al,ch
  41f9dc:	ds dec esi
  41f9de:	enter  0x27de,0x6b
  41f9e2:	mov    cl,0x77
  41f9e4:	pop    es
  41f9e5:	stc    
  41f9e6:	xchg   BYTE PTR [esi+0x44],dh
  41f9e9:	dec    edx
  41f9ea:	jmp    0xf13e55fb
  41f9ef:	ds jle 0x41fa0d
  41f9f2:	or     al,0x0
  41f9f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9f5:	jg     0x41fa1e
  41f9f7:	inc    esp
  41f9f8:	nop
  41f9f9:	gs dec esp
  41f9fb:	mov    eax,0x120b05e8
  41fa00:	ss fs ins BYTE PTR es:[edi],dx
  41fa03:	ficom  DWORD PTR [esi]
  41fa05:	imul   ebx,DWORD PTR [ebx],0xb
  41fa08:	xlat   BYTE PTR ds:[ebx]
  41fa09:	cmovo  edx,DWORD PTR [ecx-0x74]
  41fa0d:	jge    0x41f9d9
  41fa0f:	pop    eax
  41fa10:	out    0x6,al
  41fa12:	dec    ebx
  41fa13:	mov    BYTE PTR ds:0x2494a21d,dh
  41fa19:	pop    eax
  41fa1a:	dec    esi
  41fa1b:	stos   DWORD PTR es:[edi],eax
  41fa1c:	add    BYTE PTR [ebx+0x70542ba0],ch
  41fa22:	cmc    
  41fa23:	push   ss
  41fa24:	sub    dh,ah
  41fa26:	xor    edi,DWORD PTR [eax]
  41fa28:	xor    al,BYTE PTR [ecx-0x63]
  41fa2b:	and    ebx,DWORD PTR [ebx-0x37481865]
  41fa31:	scas   eax,DWORD PTR es:[edi]
  41fa32:	mov    ebx,0x102b2fbc
  41fa37:	mov    esi,0xf16bc491
  41fa3c:	mov    eax,ds:0xc717d241
  41fa41:	repnz push esi
  41fa43:	xchg   edx,eax
  41fa44:	add    al,0xdd
  41fa46:	in     al,dx
  41fa47:	mov    ch,0x6c
  41fa49:	sar    BYTE PTR [ecx-0x4b],1
  41fa4c:	push   eax
  41fa4d:	push   0xffffffce
  41fa4f:	push   es
  41fa50:	cmp    DWORD PTR [esi+0x1f165b8f],edx
  41fa56:	fwait
  41fa57:	cli    
  41fa58:	xor    ebx,edx
  41fa5a:	mov    DWORD PTR [eax+0x2457855b],ebx
  41fa60:	and    edx,DWORD PTR es:[ebx-0x61]
  41fa64:	cmp    dh,BYTE PTR [ebx+ebp*4+0x271f618e]
  41fa6b:	std    
  41fa6c:	pop    esi
  41fa6d:	ds push ebp
  41fa6f:	dec    edx
  41fa70:	adc    edx,DWORD PTR [edi-0x73fba5ed]
  41fa76:	cmp    al,0x13
  41fa78:	aas    
  41fa79:	or     esp,edi
  41fa7b:	mov    al,0x2
  41fa7d:	mov    edx,0x66eaf897
  41fa82:	dec    edx
  41fa83:	pop    ecx
  41fa84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa85:	or     al,0x60
  41fa87:	(bad)  
  41fa88:	je     0x41faa2
  41fa8a:	mov    ch,0xe8
  41fa8c:	ror    DWORD PTR [ebp-0x69],1
  41fa8f:	dec    esp
  41fa90:	pop    ebx
  41fa91:	in     eax,0xb1
  41fa93:	sub    cl,dl
  41fa95:	clc    
  41fa96:	call   0x6a9c:0x77c7e10c
  41fa9d:	add    DWORD PTR [edx],eax
  41fa9f:	pop    ebx
  41faa0:	retf   
  41faa1:	pop    ebx
  41faa2:	adc    DWORD PTR [ebx],ecx
  41faa4:	mov    bh,0xcf
  41faa6:	add    al,0x62
  41faa8:	push   ebx
  41faa9:	sbb    DWORD PTR [esi-0x5d82a1d7],esi
  41faaf:	xchg   DWORD PTR [ecx-0x17858fc],esi
  41fab5:	sbb    eax,0x872d2f6c
  41faba:	lods   eax,DWORD PTR ds:[esi]
  41fabb:	out    dx,eax
  41fabc:	push   0x48
  41fabe:	nop
  41fabf:	rcl    ecx,cl
  41fac1:	xchg   BYTE PTR [ebp-0x7b75d997],al
  41fac7:	lods   al,BYTE PTR ds:[esi]
  41fac8:	pushf  
  41fac9:	cmp    esp,edx
  41facb:	xor    dh,BYTE PTR [ebx]
  41facd:	mov    ah,0x6
  41facf:	daa    
  41fad0:	fs mov esp,0xbcc9e1df
  41fad6:	out    0xf2,eax
  41fad8:	leave  
  41fad9:	int    0xbd
  41fadb:	addr16 pushf 
  41fadd:	pop    ecx
  41fade:	sub    eax,0xa9d777e8
  41fae3:	cld    
  41fae4:	nop
  41fae5:	out    0xe9,eax
  41fae7:	nop    DWORD PTR [edx]
  41faea:	jnp    0x41fb10
  41faec:	jmp    0x5ca9:0x62bebb46
  41faf3:	mov    dh,0xb3
  41faf5:	jg     0x41fabb
  41faf7:	push   ds
  41faf8:	mov    al,BYTE PTR [edi-0x311c02e9]
  41fafe:	sbb    al,0x8f
  41fb00:	mov    ds:0xcd6b18c1,eax
  41fb05:	pop    es
  41fb06:	dec    edi
  41fb07:	xchg   ecx,eax
  41fb08:	adc    BYTE PTR [esi+0x2d],0x90
  41fb0c:	jae    0x41fb79
  41fb0e:	mov    ds:0x4946f5d9,al
  41fb13:	mov    ch,0x79
  41fb15:	sahf   
  41fb16:	xor    al,0xe
  41fb18:	leave  
  41fb19:	jle    0x41faac
  41fb1b:	fidivr DWORD PTR [eax-0x10]
  41fb1e:	cmp    eax,0xfe428686
  41fb23:	ja     0x41fb02
  41fb25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb26:	hlt    
  41fb27:	xchg   BYTE PTR [esi+0x3d],bl
  41fb2a:	shl    dl,0xc7
  41fb2d:	loopne 0x41facd
  41fb2f:	sub    al,0x40
  41fb31:	stos   DWORD PTR es:[edi],eax
  41fb32:	inc    eax
  41fb33:	sub    DWORD PTR [eax+0x6e],ecx
  41fb36:	shr    BYTE PTR [eax+edi*4],0xd8
  41fb3a:	cmp    DWORD PTR [edx-0x1004825d],edi
  41fb40:	in     eax,dx
  41fb41:	xchg   ebp,eax
  41fb42:	sbb    eax,0x5f9339e1
  41fb47:	neg    bl
  41fb49:	in     eax,0x1e
  41fb4b:	push   edi
  41fb4c:	sub    esi,0xffffff8a
  41fb4f:	lds    esp,FWORD PTR ds:0x721ab4a6
  41fb55:	push   ds
  41fb56:	push   edi
  41fb57:	dec    edx
  41fb58:	mov    edi,0x8684b664
  41fb5d:	dec    edi
  41fb5e:	jle    0x41faec
  41fb60:	popf   
  41fb61:	pushf  
  41fb62:	adc    dh,BYTE PTR [edi]
  41fb64:	pop    edi
  41fb65:	push   edi
  41fb66:	mov    ebx,0xda980eed
  41fb6b:	retf   0xb30e
  41fb6e:	in     eax,dx
  41fb6f:	cmc    
  41fb70:	inc    ebp
  41fb71:	sbb    BYTE PTR [eax+0x53c83ca3],ch
  41fb77:	fnsave [eax]
  41fb79:	xor    eax,0x51489db6
  41fb7e:	xor    dl,BYTE PTR [ecx-0x4ae5d8b7]
  41fb84:	(bad)  
  41fb85:	jb     0x41fbe8
  41fb87:	jge    0x41fb42
  41fb89:	scas   al,BYTE PTR es:[edi]
  41fb8a:	push   cs
  41fb8b:	and    al,0xd8
  41fb8d:	or     eax,0xa296d6b0
  41fb92:	jae    0x41fbac
  41fb94:	lock fmul QWORD PTR [ecx]
  41fb97:	xchg   esp,eax
  41fb98:	sbb    al,0xd5
  41fb9a:	mov    ah,0x1
  41fb9c:	xor    eax,0xfc27595b
  41fba1:	adc    BYTE PTR ds:0x78b78fa6,ch
  41fba7:	iret   
  41fba8:	mov    ds:0x2622a85a,eax
  41fbad:	dec    dx
  41fbaf:	repnz cmp al,0x2c
  41fbb2:	push   eax
  41fbb3:	sub    DWORD PTR [ebp+0x68],ecx
  41fbb6:	jg     0x41fc12
  41fbb8:	adc    bh,dl
  41fbba:	mov    bh,0xac
  41fbbc:	mov    ds:0xc5b1bad3,al
  41fbc1:	and    edx,DWORD PTR [edx-0x738e74f9]
  41fbc7:	shr    DWORD PTR [eax],0x7
  41fbca:	jne    0x41fb53
  41fbcc:	pop    edx
  41fbcd:	mov    ebp,0xd4fb2c30
  41fbd2:	add    bh,BYTE PTR [edx-0x212419e5]
  41fbd8:	loope  0x41fbca
  41fbda:	in     al,dx
  41fbdb:	pop    ds
  41fbdc:	or     edi,ecx
  41fbde:	rcr    DWORD PTR [eax-0x64],0xe9
  41fbe2:	mov    ds:0x543216af,al
  41fbe7:	cld    
  41fbe8:	mov    BYTE PTR [edx-0x3c],ch
  41fbeb:	and    ecx,DWORD PTR [ebp-0x2663b2aa]
  41fbf1:	fsubrp st(6),st
  41fbf3:	bnd jg 0x41fb86
  41fbf6:	mov    eax,0x62dd9c23
  41fbfb:	or     ch,BYTE PTR [eax]
  41fbfd:	neg    DWORD PTR [eax-0x53]
  41fc00:	jb     0x41fbeb
  41fc02:	and    edi,edx
  41fc04:	xchg   edx,eax
  41fc05:	sub    al,dh
  41fc07:	jge    0x41fc69
  41fc09:	call   0x2a9549e7
  41fc0e:	hlt    
  41fc0f:	xchg   BYTE PTR [edx-0x33822ea6],al
  41fc15:	jae    0x41fbfb
  41fc17:	xor    bl,ch
  41fc19:	retf   0x492f
  41fc1c:	cmp    ah,BYTE PTR [edx]
  41fc1e:	add    al,0x27
  41fc20:	(bad)  
  41fc21:	mov    ah,0xd
  41fc23:	ins    BYTE PTR es:[edi],dx
  41fc24:	daa    
  41fc25:	xchg   ebx,eax
  41fc26:	leave  
  41fc27:	push   ecx
  41fc28:	dec    ebx
  41fc29:	mov    cl,0x39
  41fc2b:	stos   DWORD PTR es:[edi],eax
  41fc2c:	xor    al,0x8
  41fc2e:	daa    
  41fc2f:	dec    edx
  41fc30:	dec    esp
  41fc31:	shl    edi,0x97
  41fc34:	add    BYTE PTR [edx-0x5a],0x43
  41fc38:	mov    dh,0x56
  41fc3a:	push   es
  41fc3b:	mov    WORD PTR [eax-0x51],es
  41fc3e:	and    ch,bh
  41fc40:	fldcw  WORD PTR [ecx-0x7d]
  41fc43:	daa    
  41fc44:	out    dx,eax
  41fc45:	mov    ah,0x25
  41fc47:	mov    cl,0x28
  41fc49:	sub    al,0x2d
  41fc4b:	push   ss
  41fc4c:	xchg   esi,eax
  41fc4d:	or     DWORD PTR [esi-0x316c0cb2],ecx
  41fc53:	jno    0x41fc16
  41fc55:	inc    edx
  41fc56:	pop    ss
  41fc57:	loopne 0x41fcc6
  41fc59:	pop    edi
  41fc5a:	xor    al,0x4
  41fc5c:	lods   al,BYTE PTR ds:[esi]
  41fc5d:	and    dl,BYTE PTR [eax-0x41]
  41fc60:	fld    QWORD PTR [ebp-0x594c2edd]
  41fc66:	add    dl,ch
  41fc68:	adc    al,0x33
  41fc6a:	mov    bl,0x4c
  41fc6c:	test   BYTE PTR [ecx],0xed
  41fc6f:	(bad)  
  41fc70:	xchg   ecx,eax
  41fc71:	inc    ebx
  41fc72:	mov    edx,DWORD PTR [ecx+edi*1]
  41fc75:	inc    ecx
  41fc76:	imul   ecx,DWORD PTR [edx+eiz*2],0x7816a98f
  41fc7d:	(bad)  
  41fc7e:	je     0x41fc53
  41fc80:	gs pop es
  41fc82:	push   esi
  41fc83:	lds    edi,FWORD PTR [edx-0x31]
  41fc86:	mov    esi,0x7f23ce50
  41fc8b:	adc    DWORD PTR [eax+0x42d6d2a],ebx
  41fc91:	sti    
  41fc92:	aaa    
  41fc93:	aas    
  41fc94:	sub    DWORD PTR [edx-0x42],eax
  41fc97:	fcomp  DWORD PTR [esi+0x1956a4c]
  41fc9d:	aaa    
  41fc9e:	push   ebx
  41fc9f:	lea    edi,[ecx+0x97f372]
  41fca5:	aad    0x7
  41fca7:	ins    BYTE PTR es:[edi],dx
  41fca8:	out    0x16,eax
  41fcaa:	inc    edx
  41fcab:	add    al,0x74
  41fcad:	add    eax,0xf75d020d
  41fcb2:	dec    eax
  41fcb3:	test   eax,0xaddce5bb
  41fcb8:	jmp    0xef8f32e1
  41fcbd:	mov    cl,BYTE PTR [ebx+0x196fb898]
  41fcc3:	sub    BYTE PTR [esi+ebx*4+0x6f],dh
  41fcc7:	jge    0x41fc90
  41fcc9:	mov    ds:0xb8ec0ff5,eax
  41fcce:	mov    cl,0x1a
  41fcd0:	or     DWORD PTR [edx],ecx
  41fcd2:	loope  0x41fca3
  41fcd4:	xlat   BYTE PTR ds:[ebx]
  41fcd5:	dec    ecx
  41fcd6:	xchg   esp,ebx
  41fcd8:	icebp  
  41fcd9:	daa    
  41fcda:	pop    ebx
  41fcdb:	or     eax,DWORD PTR ds:0x1795ee33
  41fce1:	cli    
  41fce2:	jmp    0x41fd23
  41fce4:	xor    al,0x63
  41fce6:	adc    bh,BYTE PTR [eax-0x77be43a1]
  41fcec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fced:	repnz repnz mov ecx,0x5297dfc7
  41fcf4:	test   eax,0x78570b18
  41fcf9:	jge    0x41fd54
  41fcfb:	or     eax,0x9ac56ccf
  41fd00:	sti    
  41fd01:	mov    ds:0x3ee7880e,eax
  41fd06:	mov    DWORD PTR [edi+0x5e],esp
  41fd09:	call   0xdf4ca325
  41fd0e:	jmp    0xe22e:0x467dff2a
  41fd15:	push   ss
  41fd16:	(bad)  
  41fd17:	mov    esp,0x9ea361a2
  41fd1c:	add    DWORD PTR [edx+0x25],0xffffffe0
  41fd20:	rcr    dh,0xbb
  41fd23:	jge    0x41fcf3
  41fd25:	mov    ebp,0x5c1f5d16
  41fd2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd2b:	push   ebp
  41fd2c:	in     eax,0xa4
  41fd2e:	rcr    ebp,1
  41fd30:	mov    WORD PTR [ecx+0x42c1b9a6],?
  41fd36:	mov    ah,0x91
  41fd38:	loopne 0x41fdb1
  41fd3a:	xchg   edx,eax
  41fd3b:	mov    bl,0xe
  41fd3d:	mov    ah,0x19
  41fd3f:	aas    
  41fd40:	ja     0x41fd79
  41fd42:	outs   dx,BYTE PTR ds:[esi]
  41fd43:	aas    
  41fd44:	cmp    DWORD PTR [edx+0x56],eax
  41fd47:	(bad)  
  41fd48:	fbstp  TBYTE PTR [ecx-0x2a]
  41fd4b:	mov    eax,ds:0x1c324ac2
  41fd50:	xor    bh,0x28
  41fd53:	xchg   edi,eax
  41fd54:	jecxz  0x41fda3
  41fd56:	(bad)  
  41fd57:	pop    ds
  41fd58:	mov    DWORD PTR [esi+0x6282709b],esp
  41fd5e:	ja     0x41fd98
  41fd60:	sahf   
  41fd61:	(bad)
  41fd66:	lds    ebx,FWORD PTR [esi]
  41fd68:	sbb    al,0x71
  41fd6a:	push   ebx
  41fd6b:	outs   dx,DWORD PTR ds:[esi]
  41fd6c:	je     0x41fcf8
  41fd6e:	cs out dx,al
  41fd70:	jge    0x41fdc0
  41fd72:	jno    0x41fdf0
  41fd74:	cmp    al,0xdd
  41fd76:	lods   al,BYTE PTR ds:[esi]
  41fd77:	jecxz  0x41fd66
  41fd79:	add    eax,0x964ed057
  41fd7e:	lds    esp,FWORD PTR [ecx+0x24ebe713]
  41fd84:	leave  
  41fd85:	test   eax,0x298dfe2f
  41fd8a:	cmp    edx,DWORD PTR [ebx]
  41fd8c:	mov    esp,ebx
  41fd8e:	push   0xffffff8e
  41fd90:	into   
  41fd91:	out    0x3f,al
  41fd93:	or     ah,BYTE PTR ds:0x4f72fb02
  41fd99:	(bad)
  41fd9d:	imul   BYTE PTR [edi]
  41fd9f:	sub    cl,al
  41fda1:	in     al,0xc1
  41fda3:	or     BYTE PTR [edi],cl
  41fda5:	outs   dx,DWORD PTR ds:[esi]
  41fda6:	outs   dx,BYTE PTR ds:[esi]
  41fda7:	in     eax,dx
  41fda8:	rcl    BYTE PTR [edx-0x38],0xaa
  41fdac:	imul   ecx,DWORD PTR [esp+eax*4],0x64
  41fdb0:	sub    al,0x30
  41fdb2:	jns    0x41fdf0
  41fdb4:	push   0x809a6c9
  41fdb9:	int    0x32
  41fdbb:	jmp    0xe908b10e
  41fdc0:	and    DWORD PTR [ebx+0x3c6af532],0xffffffb0
  41fdc7:	add    DWORD PTR [edx+0x5856d856],0xd4cb7d3a
  41fdd1:	ins    DWORD PTR es:[edi],dx
  41fdd2:	scas   al,BYTE PTR es:[edi]
  41fdd3:	pop    ss
  41fdd4:	loope  0x41fdb8
  41fdd6:	ds data16 (bad) 
  41fdd9:	fbstp  TBYTE PTR [esi-0x384f9357]
  41fddf:	pop    edx
  41fde0:	ret    
  41fde1:	adc    BYTE PTR [ebx],cl
  41fde3:	ins    DWORD PTR es:[edi],dx
  41fde4:	mov    DWORD PTR [edi-0x7714dc],eax
  41fdea:	cld    
  41fdeb:	pusha  
  41fdec:	ds (bad) 
  41fdee:	xchg   edx,eax
  41fdef:	inc    esp
  41fdf0:	adc    ebx,DWORD PTR [edi-0x33]
  41fdf3:	pop    es
  41fdf4:	inc    ecx
  41fdf5:	mov    ebp,0x91089cb4
  41fdfa:	pop    edx
  41fdfb:	jns    0x41fda4
  41fdfd:	or     al,0x82
  41fdff:	in     eax,dx
  41fe00:	xor    al,0x73
  41fe02:	dec    ebx
  41fe03:	mov    ebp,0xb3a15d93
  41fe08:	loope  0x41fe5b
  41fe0a:	or     BYTE PTR [edi+0x665e5826],dl
  41fe10:	jae    0x41fdd6
  41fe12:	fcom   DWORD PTR [ebx]
  41fe14:	sbb    BYTE PTR [ebx-0x7eeaad58],al
  41fe1a:	sbb    eax,0x6601b364
  41fe1f:	aam    0x2f
  41fe21:	xchg   esi,eax
  41fe22:	add    ebp,ecx
  41fe24:	lock xchg ebp,eax
  41fe26:	cmp    ch,BYTE PTR [edi+0x6b91fe2a]
  41fe2c:	mov    ?,esp
  41fe2e:	jnp    0x41fdb2
  41fe30:	ss retf 
  41fe32:	fcmove st,st(2)
  41fe34:	adc    bl,BYTE PTR [ebp-0x89b904f]
  41fe3a:	addr16 lahf 
  41fe3c:	cmp    eax,0x39881688
  41fe41:	add    eax,0xfc0e4215
  41fe46:	inc    esi
  41fe47:	pop    ebx
  41fe48:	xchg   ecx,eax
  41fe49:	stos   BYTE PTR es:[edi],al
  41fe4a:	(bad)  
  41fe4c:	icebp  
  41fe4d:	inc    esp
  41fe4e:	pop    ecx
  41fe4f:	sub    al,BYTE PTR [ebp+0x2166e2c8]
  41fe55:	out    dx,al
  41fe56:	and    edi,DWORD PTR [ecx-0x4f44e37b]
  41fe5c:	xor    eax,0x221dbb32
  41fe61:	dec    eax
  41fe62:	imul   esi,esi,0x944f8faa
  41fe68:	jmp    0x41fe25
  41fe6a:	xor    DWORD PTR fs:[esi],edi
  41fe6d:	jmp    0xcef3a75c
  41fe72:	cmp    esp,DWORD PTR [ebx]
  41fe74:	ficomp DWORD PTR [esp+eax*1+0x35afac4a]
  41fe7b:	inc    ebx
  41fe7c:	rol    BYTE PTR [edi+0x57],0x8f
  41fe80:	cld    
  41fe81:	(bad)  
  41fe82:	pop    ebp
  41fe83:	mov    ecx,0xcff93cd4
  41fe88:	xchg   BYTE PTR [ecx+0x5239126d],al
  41fe8e:	and    DWORD PTR [esi-0x39f6ebbc],ebp
  41fe94:	rol    BYTE PTR [ecx+edi*4],0x9d
  41fe98:	imul   esi,ebx,0xc3d8ee02
  41fe9e:	mov    es,esp
  41fea0:	adc    DWORD PTR [edx-0xd],esi
  41fea3:	pusha  
  41fea4:	loope  0x41fe86
  41fea6:	fcomp  DWORD PTR [ebx]
  41fea8:	dec    esp
  41fea9:	fldenv [ecx+ebp*4+0x8]
  41fead:	lods   eax,DWORD PTR ds:[esi]
  41feae:	ret    
  41feaf:	leave  
  41feb0:	and    esi,DWORD PTR [esi+0x37]
  41feb3:	cmp    eax,0xe49f16d0
  41feb8:	stos   DWORD PTR es:[edi],eax
  41feb9:	outs   dx,BYTE PTR ds:[esi]
  41feba:	mov    edi,es
  41febc:	std    
  41febd:	and    eax,0x66e57c21
  41fec2:	inc    esp
  41fec3:	mov    edx,0xa1f2d147
  41fec8:	mov    ebx,0x1716bbe9
  41fecd:	(bad)  
  41fece:	aad    0x9f
  41fed0:	xchg   ebp,eax
  41fed1:	cmp    al,0xbe
  41fed3:	or     DWORD PTR [ebx-0x67],0xfffffff2
  41fed7:	imul   ecx,DWORD PTR [ebx+0x73],0x43
  41fedb:	sub    BYTE PTR ds:0x1ea6a082,dh
  41fee1:	push   esp
  41fee2:	jmp    0x41ff42
  41fee4:	mov    bh,0x2f
  41fee6:	aaa    
  41fee7:	push   esp
  41fee8:	mov    ah,0x7f
  41feea:	ret    0x5ac4
  41feed:	mov    cl,BYTE PTR gs:[ebp-0x58]
  41fef1:	js     0x41fed8
  41fef3:	shr    DWORD PTR [edi+0x52073027],0x4e
  41fefa:	pop    ebx
  41fefb:	inc    ecx
  41fefc:	and    al,0x3c
  41fefe:	dec    esi
  41feff:	add    DWORD PTR [esi+edi*1-0x1e],0x7e6dd5a2
  41ff07:	sbb    al,0xb4
  41ff09:	pop    ebp
  41ff0a:	inc    edi
  41ff0b:	mov    ch,0x4f
  41ff0d:	jmp    0xa6e86fe9
  41ff12:	ss scas al,BYTE PTR es:[edi]
  41ff14:	xchg   esp,eax
  41ff15:	test   DWORD PTR [esi],esi
  41ff17:	adc    eax,0xbee14cb7
  41ff1c:	pusha  
  41ff1d:	xchg   ecx,eax
  41ff1e:	(bad)  
  41ff20:	mov    ah,0xf1
  41ff22:	fcom   DWORD PTR [esi+0x3b]
  41ff25:	inc    ebx
  41ff26:	cmp    dh,BYTE PTR [edx+0x1f]
  41ff29:	inc    ebx
  41ff2a:	push   dx
  41ff2c:	or     edx,DWORD PTR [eax-0x5c]
  41ff2f:	xor    BYTE PTR [edi*2+0xe5b8f4f],ah
  41ff36:	pushf  
  41ff37:	mov    ds:0xb8461e10,al
  41ff3c:	inc    esi
  41ff3d:	adc    eax,0x223583cb
  41ff42:	sbb    al,0xed
  41ff44:	pushf  
  41ff45:	cmp    bl,BYTE PTR [edx+0x39]
  41ff48:	mov    esi,0x667f16b1
  41ff4d:	outs   dx,BYTE PTR cs:[esi]
  41ff4f:	je     0x41ff5e
  41ff51:	pop    ebx
  41ff52:	add    BYTE PTR [esi-0x24d83213],dl
  41ff58:	or     esi,DWORD PTR [ebx-0x31]
  41ff5b:	outs   dx,DWORD PTR ds:[esi]
  41ff5c:	stos   BYTE PTR es:[edi],al
  41ff5d:	hlt    
  41ff5e:	pop    ds
  41ff5f:	iret   
  41ff60:	dec    esi
  41ff61:	xchg   edi,eax
  41ff62:	rol    BYTE PTR [esi+0x5fe2b276],0xa9
  41ff69:	ret    0xde0
  41ff6c:	and    eax,0xfc0c4762
  41ff71:	adc    DWORD PTR [ebp+0x13],ecx
  41ff74:	adc    cl,BYTE PTR [edx+0x37]
  41ff77:	jne    0x41ffcd
  41ff79:	push   cs
  41ff7a:	cmp    al,0x6c
  41ff7c:	out    0xca,al
  41ff7e:	test   BYTE PTR [edi],0xa8
  41ff81:	clc    
  41ff82:	retf   0x5454
  41ff85:	fwait
  41ff86:	daa    
  41ff87:	sahf   
  41ff88:	nop
  41ff89:	jbe    0x41ff4f
  41ff8b:	jae    0x41ff1f
  41ff8d:	iret   
  41ff8e:	push   ebp
  41ff8f:	repz jne 0x41ffc7
  41ff92:	xchg   esp,eax
  41ff93:	sar    edi,0x64
  41ff96:	popf   
  41ff97:	jle    0x41ff7b
  41ff99:	shr    ah,cl
  41ff9b:	and    esi,edi
  41ff9d:	jbe    0x41ffa4
  41ff9f:	mov    edx,0xd58830a0
  41ffa4:	aaa    
  41ffa5:	ins    DWORD PTR es:[edi],dx
  41ffa6:	std    
  41ffa7:	inc    DWORD PTR [eax+ebp*1]
  41ffaa:	cmp    eax,0x5b503418
  41ffaf:	int    0x78
  41ffb1:	retf   0x703f
  41ffb4:	cld    
  41ffb5:	jp     0x41ffed
  41ffb7:	in     al,0x2
  41ffb9:	outs   dx,DWORD PTR ds:[esi]
  41ffba:	call   0x94f8:0x385a61b7
  41ffc1:	xchg   ecx,eax
  41ffc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffc3:	lds    ecx,FWORD PTR [edx-0xd]
  41ffc6:	call   0xac81b6a2
  41ffcb:	cs pop edi
  41ffcd:	push   edi
  41ffce:	mov    esi,0xc5b2d481
  41ffd3:	nop
  41ffd4:	xor    eax,0x8c6c3055
  41ffd9:	int    0xd0
  41ffdb:	popf   
  41ffdc:	(bad)  
  41ffdd:	cmc    
  41ffde:	dec    esp
  41ffdf:	dec    esi
  41ffe0:	sahf   
  41ffe1:	sbb    DWORD PTR [edx+0x4273f4be],ebp
  41ffe7:	test   BYTE PTR [ebp-0x29e3b13],al
  41ffed:	sti    
  41ffee:	das    
  41ffef:	cli    
  41fff0:	push   ss
  41fff1:	adc    dl,0x8d
  41fff4:	mov    WORD PTR [esi+eax*8],cs
  41fff7:	jmp    0x41ffdc
  41fff9:	xchg   esi,eax
  41fffa:	jbe    0x42006b
  41fffc:	or     dh,bl
  41fffe:	ins    DWORD PTR es:[edi],dx
  41ffff:	and    eax,0x16d114a5
  420004:	ds inc esi
  420006:	cmp    dl,BYTE PTR [ecx-0x7aca6b8]
  42000c:	lods   al,BYTE PTR ds:[esi]
  42000d:	outs   dx,BYTE PTR ds:[esi]
  42000e:	and    DWORD PTR [ebp+0x35c854f2],esi
  420014:	mov    ch,0xaa
  420016:	stos   DWORD PTR es:[edi],eax
  420017:	mov    ebp,0x3f32e93f
  42001c:	jns    0x420088
  42001e:	sub    esp,ecx
  420020:	mov    ebx,DWORD PTR [esi]
  420022:	mov    dh,0x7
  420024:	push   ebx
  420025:	sub    DWORD PTR [edi-0x50218c54],0x78d638dc
  42002f:	(bad)  
  420030:	push   cs
  420031:	ret    0x9827
  420034:	repz jnp 0x41ffe7
  420037:	add    eax,0xc9f9fa89
  42003c:	and    al,cl
  42003e:	icebp  
  42003f:	fisubr WORD PTR [esi]
  420041:	push   cs
  420042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420043:	loope  0x41ffde
  420045:	mov    esp,0x75e7c5
  42004a:	dec    ebx
  42004b:	div    DWORD PTR [edx+eax*8-0x22f81fe1]
  420052:	or     al,0x7c
  420054:	mov    dl,0x93
  420056:	or     al,0xa5
  420058:	fisubr DWORD PTR [ebx]
  42005a:	push   edx
  42005b:	mov    esp,0x320feddc
  420060:	pusha  
  420061:	sahf   
  420062:	ds inc esi
  420064:	rcl    DWORD PTR [ebx],1
  420066:	and    bl,BYTE PTR [edi+0x3c]
  420069:	js     0x41fff3
  42006b:	sub    DWORD PTR [ebp+eiz*1-0x11d5f6a7],edx
  420072:	or     eax,0x1891a9b
  420077:	ret    0xc762
  42007a:	js     0x42002f
  42007c:	xchg   edx,eax
  42007d:	addr16 int3 
  42007f:	stc    
  420080:	dec    esp
  420081:	mov    ebp,0xad83364
  420086:	push   0x323c4ef
  42008b:	fisttp WORD PTR [ebx]
  42008d:	mov    dl,0xd9
  42008f:	nop
  420090:	push   ds
  420091:	clc    
  420092:	pushf  
  420093:	in     al,dx
  420094:	jle    0x4200c5
  420096:	xor    DWORD PTR [ecx],ecx
  420098:	test   eax,0xe765af5b
  42009d:	icebp  
  42009e:	adc    dh,BYTE PTR [ebp-0x8]
  4200a1:	jnp    0x420060
  4200a3:	adc    esp,edi
  4200a5:	mov    ds:0x286ee838,eax
  4200aa:	ret    
  4200ab:	lahf   
  4200ac:	add    ebp,DWORD PTR [esi+0x47d6e6d9]
  4200b2:	inc    esp
  4200b3:	mov    dh,0x14
  4200b5:	in     eax,0xd6
  4200b7:	xor    DWORD PTR [edx+0x257ef6d4],esi
  4200bd:	test   eax,0x8d9e09d9
  4200c2:	(bad)  
  4200c3:	clc    
  4200c4:	les    edx,FWORD PTR [edi]
  4200c6:	pop    ebp
  4200c7:	pop    edi
  4200c8:	pusha  
  4200c9:	xor    edx,DWORD PTR [ecx+edi*1-0x52]
  4200cd:	inc    ecx
  4200ce:	pop    edx
  4200cf:	jne    0x4200e6
  4200d1:	pop    eax
  4200d2:	test   al,0xda
  4200d4:	retf   0xa331
  4200d7:	pop    esp
  4200d8:	in     eax,0xb4
  4200da:	test   DWORD PTR [ebp+0x39],ebp
  4200dd:	loope  0x42011a
  4200df:	dec    ebx
  4200e0:	mov    esi,0xfa64475b
  4200e5:	push   ebx
  4200e6:	popa   
  4200e7:	ins    BYTE PTR es:[edi],dx
  4200e8:	add    bh,dh
  4200ea:	sub    ebx,DWORD PTR [edi+0x43]
  4200ed:	mov    edx,0x88a06348
  4200f2:	mov    esi,0xaf824c65
  4200f7:	sub    al,al
  4200f9:	lahf   
  4200fa:	and    eax,0xf150d406
  4200ff:	jmp    0xc22e:0x935db67
  420106:	stc    
  420107:	lds    ebx,FWORD PTR ds:0x7c877cad
  42010d:	dec    BYTE PTR [edx]
  42010f:	pop    ecx
  420110:	jp     0x4200b3
  420112:	sub    DWORD PTR [ebp+0x16],0xffffffb7
  420116:	jo     0x42009c
  420118:	stc    
  420119:	add    BYTE PTR [edx+0x65],cl
  42011c:	and    esp,edi
  42011e:	iret   
  42011f:	iret   
  420120:	call   0x324b0499
  420125:	arpl   WORD PTR [eax-0x36],di
  420128:	sbb    eax,0xdbaadd19
  42012d:	ja     0x4200c0
  42012f:	push   edx
  420130:	mov    esp,0x4725b7ad
  420135:	das    
  420136:	xor    eax,0xa471a2a4
  42013b:	adc    eax,0x9201aedc
  420140:	scas   al,BYTE PTR es:[edi]
  420141:	adc    DWORD PTR [ecx-0x48f6f1e8],edx
  420147:	popf   
  420148:	dec    edx
  420149:	ret    
  42014a:	test   ebp,edx
  42014c:	retf   
  42014d:	(bad)  
  42014e:	fstp   DWORD PTR [ecx-0x7071ff98]
  420154:	or     ebx,eax
  420156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420157:	jb     0x420141
  420159:	sar    DWORD PTR [edi+esi*2],cl
  42015c:	cwde   
  42015d:	sub    eax,0xc64d2f52
  420162:	icebp  
  420163:	out    dx,al
  420164:	pop    ebx
  420165:	add    cl,BYTE PTR [esi+0x6940d6c5]
  42016b:	mov    eax,ds:0xe667594a
  420170:	(bad)  
  420171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420172:	dec    eax
  420173:	xor    al,0x32
  420175:	inc    esp
  420176:	div    ebx
  420178:	or     esi,DWORD PTR [eax+0x6e55b397]
  42017e:	lds    edx,FWORD PTR [eax]
  420180:	ins    BYTE PTR es:[edi],dx
  420181:	push   esi
  420182:	dec    edi
  420183:	hlt    
  420184:	and    al,0x94
  420186:	and    BYTE PTR ds:0x3ab62b97,cl
  42018c:	ins    BYTE PTR es:[edi],dx
  42018d:	cmp    DWORD PTR [ebx],edx
  42018f:	es jmp 0x1d44c14f
  420195:	dec    DWORD PTR [edx+0x7a51f72a]
  42019b:	repnz sub al,0x2
  42019e:	ins    DWORD PTR es:[edi],dx
  42019f:	lods   eax,DWORD PTR ds:[esi]
  4201a0:	ja     0x4201a2
  4201a2:	ins    DWORD PTR es:[edi],dx
  4201a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201a4:	jnp    0x4201f2
  4201a6:	sbb    eax,0xce7c9b79
  4201ab:	ss shl dx,0xb2
  4201b0:	pop    eax
  4201b1:	cmp    esi,DWORD PTR ss:[esi+esi*8]
  4201b5:	mov    BYTE PTR [ebx],ah
  4201b7:	lds    edx,FWORD PTR [esi]
  4201b9:	(bad)  
  4201bb:	loope  0x42023a
  4201bd:	xor    eax,0xca01e1ba
  4201c2:	xor    BYTE PTR [ecx-0x75],cl
  4201c5:	pusha  
  4201c6:	pop    ss
  4201c7:	dec    ecx
  4201c8:	shl    DWORD PTR ds:0x76a384cd,1
  4201ce:	xchg   ecx,eax
  4201cf:	in     al,dx
  4201d0:	lods   al,BYTE PTR cs:[esi]
  4201d2:	dec    ecx
  4201d3:	cmp    cl,bh
  4201d5:	cmp    al,0x0
  4201d7:	mov    edi,0x9571ff1
  4201dc:	cmp    esp,0xffffffe6
  4201df:	mov    ebp,0x6bcd1d3f
  4201e4:	aam    0x1f
  4201e6:	lock les ebx,FWORD PTR [ecx+0x6beb0a9a]
  4201ed:	mov    edi,0xae2f2bde
  4201f2:	or     BYTE PTR [ebx-0x1f],0x77
  4201f6:	jmp    0x3834:0xd2efe149
  4201fd:	xchg   edx,eax
  4201fe:	mov    dl,BYTE PTR [ebx+0x7553a31c]
  420204:	or     DWORD PTR [ebp+0x50],ebp
  420207:	test   DWORD PTR [edi-0x735fd1fa],ebx
  42020d:	add    edx,ebx
  42020f:	and    BYTE PTR [ebp-0x7c],bh
  420212:	mov    bl,al
  420214:	frstor [ebp-0xa]
  420217:	jb     0x4201f1
  420219:	inc    eax
  42021a:	retw   
  42021c:	aas    
  42021d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42021e:	call   0xdcc7:0x8e025ed1
  420225:	scas   eax,DWORD PTR es:[edi]
  420226:	xchg   DWORD PTR [edi+0x7cc8073b],eax
  42022c:	adc    eax,0x5d36b6d8
  420231:	call   0x835d6e75
  420236:	(bad)  
  420237:	mov    ah,0x4b
  420239:	or     eax,0x1c46b7fc
  42023e:	mov    ds:0x6052092c,al
  420243:	rol    BYTE PTR [ebp-0x700ff2b5],cl
  420249:	dec    edi
  42024a:	loopne 0x4202a7
  42024c:	out    dx,al
  42024d:	jle    0x420281
  42024f:	int    0x1e
  420251:	jg     0x4202c6
  420253:	xchg   ebp,eax
  420254:	inc    ebx
  420255:	push   ax
  420257:	repnz dec ebx
  420259:	or     al,0x2d
  42025b:	cmp    BYTE PTR [esi+0xb4b747a],dh
  420261:	ret    0xa1a2
  420264:	push   ebx
  420265:	sub    ah,ch
  420267:	fidivr WORD PTR [edx-0x65]
  42026a:	jg     0x420285
  42026c:	aad    0xe2
  42026e:	out    0x5b,al
  420270:	es push 0xa0649ff9
  420276:	jnp    0x42023b
  420278:	pop    ebp
  420279:	inc    edx
  42027a:	or     BYTE PTR [ecx+0x76],bl
  42027d:	cwde   
  42027e:	dec    ebp
  42027f:	dec    ebx
  420280:	data16 clc 
  420282:	cmp    cl,BYTE PTR [ecx-0x710078ab]
  420288:	mov    ch,0x60
  42028a:	or     ch,BYTE PTR [edi]
  42028c:	adc    esi,DWORD PTR [eax]
  42028e:	call   0x52ab69a1
  420293:	shl    BYTE PTR [eax+edi*1+0x2d],1
  420297:	jp     0x4202fa
  420299:	cmp    eax,0x51377e3c
  42029e:	enter  0xb07c,0x63
  4202a2:	ja     0x420283
  4202a4:	push   0x40
  4202a6:	mov    al,0xcd
  4202a8:	jl     0x4202aa
  4202aa:	mov    edx,0x5f618a12
  4202af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202b0:	(bad)  
  4202b1:	fnsave [edx+0x33]
  4202b4:	inc    ebx
  4202b5:	xor    eax,DWORD PTR [ebx+0x36519893]
  4202bb:	inc    edi
  4202bc:	retf   0x50e3
  4202bf:	fisub  WORD PTR [esi+0x53]
  4202c2:	or     eax,DWORD PTR [ecx*2+0x6eb5de94]
  4202c9:	enter  0x8330,0x81
  4202cd:	enter  0xf5e6,0x23
  4202d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202d2:	les    esp,FWORD PTR ds:0xae5faa75
  4202d8:	imul   edi,DWORD PTR [edi],0x39
  4202db:	sbb    DWORD PTR ds:0xd5f402df,ecx
  4202e1:	xor    al,0x88
  4202e3:	adc    ebx,0xed80284
  4202e9:	idiv   ebp
  4202eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202ec:	inc    eax
  4202ed:	jmp    0x420354
  4202ef:	mov    eax,ds:0x8d86a65b
  4202f4:	mov    ebx,0xf0082f77
  4202f9:	repz inc ah
  4202fc:	mov    ebx,0x49333db2
  420301:	test   al,0xad
  420303:	mov    ds:0xfd596ba1,eax
  420308:	or     dl,BYTE PTR [esi]
  42030a:	mov    bl,0x52
  42030c:	fnstsw WORD PTR [si+0x41eb]
  420311:	cli    
  420312:	ss add dl,ch
  420315:	inc    ebp
  420316:	dec    ebx
  420317:	aam    0x89
  420319:	xor    BYTE PTR [ebx+0x32],bh
  42031c:	mov    al,ds:0x63c6a142
  420321:	mov    dh,0x46
  420323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420324:	packuswb mm1,QWORD PTR [ecx+0x1c9e25d6]
  42032b:	out    dx,eax
  42032c:	sub    DWORD PTR [ebp+0x40],ecx
  42032f:	nop
  420330:	pop    es
  420331:	or     BYTE PTR [ecx+ebx*4],ah
  420334:	sub    eax,0x5d45d963
  420339:	dec    edi
  42033a:	or     ebp,DWORD PTR [eax-0x257cf930]
  420340:	xor    BYTE PTR [esi-0x6223e8b6],0x28
  420347:	xchg   DWORD PTR [ecx],ebp
  420349:	iret   
  42034a:	pop    ds
  42034b:	ins    BYTE PTR es:[edi],dx
  42034c:	pop    edi
  42034d:	js     0x420371
  42034f:	xor    esi,edx
  420351:	imul   DWORD PTR [edx]
  420353:	mov    dh,0xe7
  420355:	pop    esp
  420356:	addr16 pop ss
  420358:	mov    dl,0x10
  42035a:	pop    edi
  42035b:	aas    
  42035c:	(bad)  
  42035d:	stos   DWORD PTR es:[edi],eax
  42035e:	or     ebp,DWORD PTR [ebx]
  420360:	rol    BYTE PTR [edx],1
  420362:	loopne 0x42036c
  420364:	sbb    edx,DWORD PTR [ebx+0x488a9b6c]
  42036a:	leave  
  42036b:	ins    DWORD PTR es:[edi],dx
  42036c:	neg    BYTE PTR [eax+0x671d96bd]
  420372:	cmp    BYTE PTR [ecx+0x2857d527],al
  420378:	dec    edx
  420379:	mov    edx,0x806c8621
  42037e:	sbb    eax,0xf249a38f
  420383:	arpl   WORD PTR [ebx],si
  420385:	das    
  420386:	aas    
  420387:	lods   al,BYTE PTR ds:[esi]
  420388:	mov    bl,0xcf
  42038a:	clc    
  42038b:	aaa    
  42038c:	push   ecx
  42038d:	ret    
  42038e:	jmp    0x7d28:0x1a8e8e0a
  420395:	outs   dx,DWORD PTR ds:[esi]
  420396:	xor    DWORD PTR [esi-0x1b1ab3dc],eax
  42039c:	sbb    al,ah
  42039e:	hlt    
  42039f:	shl    DWORD PTR ds:0x253c9828,cl
  4203a5:	test   BYTE PTR fs:[ebp+ebx*4+0x14],dh
  4203aa:	lods   eax,DWORD PTR ds:[esi]
  4203ab:	cmp    eax,0x6f126e30
  4203b0:	hlt    
  4203b1:	(bad)  
  4203b2:	pop    edi
  4203b3:	cmp    al,0xbf
  4203b5:	mov    ah,0x3
  4203b7:	push   ecx
  4203b8:	mov    al,BYTE PTR [ecx-0x6d]
  4203bb:	hlt    
  4203bc:	pop    esp
  4203bd:	aaa    
  4203be:	hlt    
  4203bf:	addr16 push cs
  4203c1:	dec    ebx
  4203c2:	push   ebx
  4203c3:	test   eax,0xa741cc9
  4203c8:	imul   esp
  4203ca:	ret    0xf78f
  4203cd:	fsubp  st(6),st
  4203cf:	jecxz  0x4203b8
  4203d1:	cmp    edi,DWORD PTR [eax]
  4203d3:	jno    0x4203ac
  4203d5:	inc    ebx
  4203d6:	jo     0x420365
  4203d8:	or     ebx,DWORD PTR [edi-0x4b27a31f]
  4203de:	jp     0x42040d
  4203e0:	inc    edi
  4203e1:	and    DWORD PTR [eax-0x76],esp
  4203e4:	mov    al,ds:0xc5ccf8db
  4203e9:	add    BYTE PTR [ecx+0x5d36bb4a],cl
  4203ef:	or     BYTE PTR [eax],0xd1
  4203f2:	mov    dh,BYTE PTR [esi-0x70]
  4203f5:	inc    ecx
  4203f6:	arpl   WORD PTR [ebp+0x17db06b3],dx
  4203fc:	jnp    0x42043d
  4203fe:	cs jp  0x42046d
  420401:	inc    ebp
  420402:	add    al,0xbe
  420404:	rol    esi,cl
  420406:	jp     0x420413
  420408:	or     ch,ah
  42040a:	mov    esp,0x949fdcb2
  42040f:	inc    ecx
  420410:	cmp    al,BYTE PTR [edx]
  420412:	dec    esi
  420413:	fldenv [edi-0x2881e8d3]
  420419:	mov    edx,0x3552a04f
  42041e:	push   ebx
  42041f:	sbb    eax,0x8a5752aa
  420424:	(bad)  
  420425:	stc    
  420426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420427:	cwde   
  420428:	push   0xa90f7083
  42042d:	sub    ch,BYTE PTR [edi-0x766714b1]
  420433:	and    BYTE PTR [ecx+0x2aae67c0],bh
  420439:	adc    esi,DWORD PTR [edi+0x43239d12]
  42043f:	adc    BYTE PTR [ebx],dh
  420441:	or     al,0x69
  420443:	test   BYTE PTR [ebx+0x21c7fdf],ch
  420449:	shl    DWORD PTR [ebx+ecx*8+0x4d],cl
  42044d:	cmp    cl,BYTE PTR [ecx]
  42044f:	mov    ch,0x97
  420451:	xor    eax,0x896861b4
  420456:	push   ecx
  420457:	xchg   esp,eax
  420458:	shr    DWORD PTR [edi+0x1a],1
  42045b:	add    eax,0xc66f6053
  420460:	jg     0x420406
  420462:	mov    dh,0x49
  420464:	fst    QWORD PTR [edi]
  420466:	push   ecx
  420467:	cmp    dl,ah
  420469:	inc    esi
  42046a:	mov    ds:0x6500cee5,al
  42046f:	mov    dh,0xb3
  420471:	outs   dx,DWORD PTR ds:[esi]
  420472:	add    al,0xdd
  420474:	pmaxsw mm1,QWORD PTR [ecx]
  420477:	xchg   edx,eax
  420478:	xchg   ebx,eax
  420479:	xchg   esp,ebp
  42047b:	iret   
  42047c:	pop    esp
  42047d:	into   
  42047e:	shl    DWORD PTR [edi],0x37
  420481:	xor    al,BYTE PTR [edx+esi*8]
  420484:	fs icebp 
  420486:	daa    
  420487:	popf   
  420488:	cld    
  420489:	dec    ebx
  42048a:	(bad)  
  42048c:	dec    esp
  42048d:	in     eax,0x73
  42048f:	ja     0x420488
  420491:	lods   eax,DWORD PTR ds:[esi]
  420492:	cwde   
  420493:	iret   
  420494:	daa    
  420495:	pop    edi
  420496:	pop    es
  420497:	mov    ebp,0x1e5be3c3
  42049c:	sbb    esp,DWORD PTR [ebp+ebp*8+0x65c914f5]
  4204a3:	jmp    DWORD PTR [esi+0x9228e6a]
  4204a9:	loope  0x4204da
  4204ab:	mov    cl,0x28
  4204ad:	jecxz  0x42043d
  4204af:	and    DWORD PTR [eax+0x69],0x4245b7b9
  4204b6:	sbb    bh,ah
  4204b8:	les    ebp,FWORD PTR [edi]
  4204ba:	sub    al,0x6e
  4204bc:	into   
  4204bd:	xchg   esp,eax
  4204be:	fs test eax,0xf19f439
  4204c4:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204c6:	out    0xd4,al
  4204c8:	jl     0x4204ca
  4204ca:	fcomp  QWORD PTR [edi]
  4204cc:	jae    0x420523
  4204ce:	sub    ebp,DWORD PTR ss:[ebp-0x7e]
  4204d2:	xchg   esp,eax
  4204d3:	mov    ch,0xcf
  4204d5:	and    al,0x7b
  4204d7:	iret   
  4204d8:	fnstcw WORD PTR [ebx]
  4204da:	push   ebp
  4204db:	xchg   ebp,eax
  4204dc:	or     BYTE PTR [esi],bh
  4204de:	and    dh,BYTE PTR [ecx+0x321b18fa]
  4204e4:	mov    ebx,0x393183c2
  4204e9:	inc    edi
  4204ea:	push   ebp
  4204eb:	xor    BYTE PTR ds:[edx-0x35026ade],bh
  4204f2:	fidivr WORD PTR [ebx+0x6f]
  4204f5:	push   0xccc2c442
  4204fa:	pop    edi
  4204fb:	push   ecx
  4204fc:	jae    0x420578
  4204fe:	leave  
  4204ff:	test   BYTE PTR [ebp-0x5981acf0],dl
  420505:	dec    eax
  420506:	push   ss
  420507:	fcom   QWORD PTR [esi]
  420509:	retf   0x7b2e
  42050c:	or     BYTE PTR [edi+ebp*2],0xad
  420510:	sbb    ah,0xa6
  420513:	sub    BYTE PTR [eax],0x79
  420516:	push   ds
  420517:	test   BYTE PTR [ebp+0x30a2ad59],bl
  42051d:	rcl    ah,cl
  42051f:	mov    DWORD PTR fs:[edi],ebp
  420522:	fld    QWORD PTR [esi]
  420524:	mov    eax,0xfa1c3312
  420529:	jnp    0x4204b2
  42052b:	out    0x22,eax
  42052d:	adc    DWORD PTR [esi-0x5b085c83],edx
  420533:	test   al,0xa6
  420535:	imul   esp,DWORD PTR [edx],0x2beb9055
  42053b:	jl     0x420579
  42053d:	out    dx,al
  42053e:	inc    edi
  42053f:	mov    bh,0xe5
  420541:	or     BYTE PTR [eax+0x6e],bh
  420544:	pop    es
  420545:	adc    al,0x1f
  420547:	or     ebp,DWORD PTR [ecx+eax*2]
  42054a:	xchg   ebx,eax
  42054b:	inc    ecx
  42054c:	out    dx,eax
  42054d:	(bad)  
  42054e:	aam    0x6f
  420550:	call   0x86e26f25
  420555:	pushf  
  420556:	jge    0x420546
  420558:	inc    ebx
  420559:	sbb    DWORD PTR [eax-0x43],edi
  42055c:	test   BYTE PTR [ecx+edx*1+0xbc414c3],dh
  420563:	mov    ds:0xf02e6d2f,eax
  420568:	ins    DWORD PTR es:[edi],dx
  420569:	push   cs
  42056a:	mov    WORD PTR gs:[edx],cs
  42056d:	call   0x53c7:0xd5246711
  420574:	out    0x1b,al
  420576:	jmp    0x8224d235
  42057b:	push   cs
  42057c:	jae    0x4205b7
  42057e:	jl     0x420524
  420580:	addr16 fs lahf 
  420583:	xor    ebx,edi
  420585:	mov    cl,bl
  420587:	sub    ch,cl
  420589:	sub    al,0x8
  42058b:	dec    edx
  42058c:	xor    ebp,ecx
  42058e:	mov    esp,0xd1864ef5
  420593:	jp     0x42051d
  420595:	rol    DWORD PTR [ebx-0x1e],cl
  420598:	mov    edx,0xdafed291
  42059d:	sub    BYTE PTR [edx-0x26],al
  4205a0:	jno    0x420530
  4205a2:	hlt    
  4205a3:	cld    
  4205a4:	aam    0xb4
  4205a6:	ret    0x7cba
  4205a9:	inc    ebx
  4205aa:	mov    edi,0x5bfda40e
  4205af:	inc    eax
  4205b0:	mov    ecx,0x68d1d477
  4205b5:	shr    ah,0x57
  4205b8:	call   0x2fcd:0x6ade7ca3
  4205bf:	bound  esi,QWORD PTR [ecx-0x2bec274c]
  4205c5:	fucomp st(7)
  4205c7:	add    ebx,DWORD PTR [ebp-0x6c]
  4205ca:	(bad)  
  4205cb:	out    dx,eax
  4205cc:	cmc    
  4205cd:	scas   al,BYTE PTR es:[edi]
  4205ce:	and    ebp,DWORD PTR [esp+edx*8-0x199aca6a]
  4205d5:	mov    bh,0x1a
  4205d7:	sahf   
  4205d8:	inc    esi
  4205d9:	aas    
  4205da:	dec    edx
  4205db:	mov    fs,WORD PTR ds:0x2fac1b5f
  4205e1:	jno    0x420625
  4205e3:	mov    esp,fs
  4205e5:	dec    edi
  4205e6:	jp     0x42056c
  4205e8:	xor    esi,ebx
  4205ea:	push   esi
  4205eb:	jbe    0x4205d8
  4205ed:	aaa    
  4205ee:	jae    0x4205f0
  4205f0:	cli    
  4205f1:	inc    ecx
  4205f2:	gs inc esp
  4205f4:	and    DWORD PTR [eax-0x61],edx
  4205f7:	or     dh,BYTE PTR [esi-0x4e]
  4205fa:	adc    BYTE PTR [ebp+edi*2+0x2310ddb5],ah
  420601:	mov    ds:0x54fd9320,eax
  420606:	aas    
  420607:	ss push esi
  420609:	mov    al,ds:0xe0e3aaba
  42060e:	adc    eax,0xd0ba0826
  420613:	or     BYTE PTR [edi+0x1d9c0e78],cl
  420619:	cmc    
  42061a:	mov    al,0x70
  42061c:	fld    st(2)
  42061e:	cmp    DWORD PTR [edx+0x73],eax
  420621:	xchg   DWORD PTR [ebx],edi
  420623:	in     eax,dx
  420624:	les    esp,FWORD PTR [edx+0x2f]
  420627:	xor    BYTE PTR [edi],dh
  420629:	sub    BYTE PTR [eax],ch
  42062b:	shl    ch,cl
  42062d:	loope  0x420608
  42062f:	test   DWORD PTR [edx],eax
  420631:	adc    al,0x8c
  420633:	xor    ch,BYTE PTR [ecx-0xbc3f2b7]
  420639:	inc    ecx
  42063a:	or     eax,0x46462133
  42063f:	xchg   ebp,eax
  420640:	stos   DWORD PTR es:[edi],eax
  420641:	push   0xfffffff0
  420643:	sti    
  420644:	pop    ebp
  420645:	cs (bad) 
  420647:	adc    cl,bh
  420649:	in     al,dx
  42064a:	mov    ebx,0xfd40d046
  42064f:	repnz xchg esp,eax
  420651:	aas    
  420652:	retf   
  420653:	pop    ecx
  420654:	inc    ebp
  420655:	in     eax,dx
  420656:	dec    esi
  420657:	add    DWORD PTR [ebp+edx*1+0x20],edx
  42065b:	or     DWORD PTR [ebx-0x3ed3c3b0],ebp
  420661:	gs xor BYTE PTR cs:[edx-0x212f12f],al
  420669:	inc    ebp
  42066a:	pop    esi
  42066b:	mov    ds:0x70107b10,al
  420670:	fcmovbe st,st(6)
  420672:	pop    edi
  420673:	pop    edx
  420674:	jmp    0x420644
  420676:	mov    edi,0x50040c2d
  42067b:	sahf   
  42067c:	sbb    BYTE PTR [eax],bl
  42067e:	jecxz  0x42066e
  420680:	imul   al
  420682:	cli    
  420683:	leave  
  420684:	dec    edx
  420685:	jne    0x4206cc
  420687:	gs sbb eax,0x4f768504
  42068d:	aaa    
  42068e:	test   DWORD PTR [edi],0x8bf65b05
  420694:	cs sbb al,0xbb
  420697:	pop    eax
  420698:	jl     0x42068e
  42069a:	mov    edx,0x1a35724d
  42069f:	xlat   BYTE PTR ds:[ebx]
  4206a0:	fsub   QWORD PTR [eax]
  4206a2:	push   ebx
  4206a3:	push   0x2fad510
  4206a8:	inc    edx
  4206a9:	mov    ch,0x6d
  4206ab:	and    eax,0x21b707b
  4206b0:	lods   eax,DWORD PTR ds:[esi]
  4206b1:	mov    eax,ds:0x4c70dbae
  4206b6:	push   0x623c8afd
  4206bb:	mov    dh,0xa0
  4206bd:	push   edi
  4206be:	gs in  al,0xf2
  4206c1:	(bad)  
  4206c2:	push   ds
  4206c3:	jae    0x42067b
  4206c5:	and    bl,BYTE PTR [esi]
  4206c7:	dec    edx
  4206c8:	and    eax,0x9865b824
  4206cd:	rcr    BYTE PTR [edi+0x64d50a40],cl
  4206d3:	sub    DWORD PTR [ebp+0x5b],esi
  4206d6:	push   ebx
  4206d7:	stc    
  4206d8:	dec    edx
  4206d9:	es adc ebp,eax
  4206dc:	and    DWORD PTR [ebx],edx
  4206de:	cld    
  4206df:	(bad)  
  4206e0:	cmp    ch,BYTE PTR [eax*1+0x41732031]
  4206e7:	not    edx
  4206e9:	gs icebp 
  4206eb:	push   ebx
  4206ec:	aas    
  4206ed:	cdq    
  4206ee:	mov    ebp,0x2ef0df37
  4206f3:	cli    
  4206f4:	bound  ecx,QWORD PTR [esi+0xb]
  4206f7:	fld    QWORD PTR [ecx+ecx*2-0x46302a01]
  4206fe:	ss sub dl,ah
  420701:	jmp    0x420765
  420703:	add    BYTE PTR [edx+ebp*2-0x6a],al
  420707:	out    0xb,eax
  420709:	out    dx,eax
  42070a:	mov    ds:0xff3fd49b,eax
  42070f:	in     eax,dx
  420710:	pop    edx
  420711:	push   ss
  420712:	jns    0x42071c
  420714:	or     eax,0x1fa8a02d
  420719:	ja     0x420704
  42071b:	xor    BYTE PTR [edi-0x9f705e5],0x43
  420722:	ins    BYTE PTR es:[edi],dx
  420723:	mov    esp,0x54cd3f7a
  420728:	inc    edx
  420729:	jbe    0x420733
  42072b:	mov    dl,0xcb
  42072d:	sub    eax,0x7474b11c
  420732:	fsubp  st(2),st
  420734:	adc    WORD PTR [ebp+esi*1-0x4b],si
  420739:	loope  0x420764
  42073b:	sub    BYTE PTR [edi],dl
  42073d:	into   
  42073e:	scas   al,BYTE PTR es:[edi]
  42073f:	fstp   DWORD PTR [ebx+0xd94ed67]
  420745:	fwait
  420746:	pop    ecx
  420747:	call   0x4f99:0xa4cba2f1
  42074e:	mov    ds:0xb36bc074,al
  420753:	inc    esi
  420754:	fidiv  DWORD PTR [ebp-0x6adf9493]
  42075a:	mov    edx,0xc0d1aec6
  42075f:	ins    BYTE PTR es:[edi],dx
  420760:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420761:	shl    BYTE PTR [edi],cl
  420763:	jp     0x4206f3
  420765:	clc    
  420766:	sbb    eax,0x3f70fc36
  42076b:	xchg   esi,eax
  42076c:	aaa    
  42076d:	aad    0x2
  42076f:	mov    dh,0x7b
  420771:	sbb    cl,dh
  420773:	or     al,0xde
  420775:	sti    
  420776:	adc    eax,DWORD PTR [ecx*4-0xbf60836]
  42077d:	and    dl,BYTE PTR [ecx+0x12]
  420780:	dec    ecx
  420781:	mov    ebx,0xfb0b7035
  420786:	enter  0x6d0,0xe3
  42078a:	fiadd  DWORD PTR ds:0x82c28158
  420791:	add    eax,ecx
  420793:	mov    DWORD PTR [ebp-0x14],eax
  420796:	mov    eax,DWORD PTR [ebp-0x14]
  420799:	mov    eax,DWORD PTR [eax+0xc]
  42079c:	movsx  eax,BYTE PTR [eax+ecx*1]
  4207a0:	cdq    
  4207a1:	add    eax,ebx
  4207a3:	adc    edx,0xffffffff
  4207a6:	xor    eax,edi
  4207a8:	xor    edx,0x0
  4207ab:	cmp    eax,0x70941e1e
  4207b0:	jne    0x41e3c0
  4207b6:	cmp    edx,0xffffffff
  4207b9:	jne    0x41e3c0
  4207bf:	mov    eax,ds:0x42830b
  4207c4:	mov    eax,DWORD PTR [eax+0x198]
  4207ca:	mov    DWORD PTR [eax],ecx
  4207cc:	mov    eax,ecx
  4207ce:	jmp    0x4207f7
  4207d3:	mov    eax,DWORD PTR [ebp+0x18]
  4207d6:	cmp    eax,0xf89c85a2
  4207db:	jne    0x4207f7
  4207e1:	push   0xf89c85a3
  4207e6:	push   DWORD PTR [ebp+0x14]
  4207e9:	push   DWORD PTR [ebp+0x10]
  4207ec:	push   DWORD PTR [ebp+0xc]
  4207ef:	push   DWORD PTR [ebp+0x8]
  4207f2:	call   0x41b9fd
  4207f7:	pop    edi
  4207f8:	pop    ebx
  4207f9:	pop    esi
  4207fa:	leave  
  4207fb:	ret    0x14
  4207fe:	push   ebp
  4207ff:	mov    ebp,esp
  420801:	and    esp,0xfffffff8
  420804:	or     DWORD PTR ds:0x42918f,0x225c
  42080e:	sub    esp,0x3fc
  420814:	sbb    DWORD PTR ds:0x4291a7,0x4291f3
  42081e:	push   ebx
  42081f:	push   esi
  420820:	push   edi
  420821:	and    DWORD PTR ds:0x42915f,0x397e
  42082b:	push   0x42842f
  420830:	or     DWORD PTR ds:0x4291af,0x2ff8
  42083a:	push   0x7876867
  42083f:	or     DWORD PTR ds:0x4291b7,0x20a1
  420849:	call   DWORD PTR ds:0x42a84b
  42084f:	sub    DWORD PTR ds:0x42915f,0x5681
  420859:	mov    DWORD PTR [esp+0x30],eax
  42085d:	lea    eax,[esp+0x78]
  420861:	push   eax
  420862:	sub    DWORD PTR ds:0x42919b,0x4291d3
  42086c:	push   0x428447
  420871:	mov    DWORD PTR ds:0x4291e3,0x3a46
  42087b:	call   DWORD PTR ds:0x42a86b
  420881:	cmp    eax,0xffffffff
  420884:	je     0x42089b
  42088a:	xor    DWORD PTR ds:0x42915f,0x150a
  420894:	xor    eax,eax
  420896:	jmp    0x421b36
  42089b:	mov    esi,DWORD PTR ds:0x42a887
  4208a1:	xor    DWORD PTR ds:0x4291d3,0x3930
  4208ab:	push   0xf
  4208ad:	lea    eax,[esp+0x44]
  4208b1:	push   eax
  4208b2:	push   0x42845b
  4208b7:	push   0x42846f
  4208bc:	sub    DWORD PTR ds:0x42915f,0x4291d7
  4208c6:	push   0x42848f
  4208cb:	adc    DWORD PTR ds:0x429183,0x3c8a
  4208d5:	call   esi
  4208d7:	imul   eax,eax,0x300000
  4208dd:	cmp    eax,0x1b00000
  4208e2:	mov    DWORD PTR ds:0x4291bf,0x78b4
  4208ec:	jne    0x42088a
  4208f2:	or     DWORD PTR ds:0x4291b3,0x42915b
  4208fc:	lea    eax,[esp+0x1b8]
  420903:	and    DWORD PTR ds:0x42919f,0x5d3c
  42090d:	push   eax
  42090e:	add    DWORD PTR ds:0x4291e3,0x4291af
  420918:	push   0x4284cb
  42091d:	and    DWORD PTR ds:0x429153,0x42915b
  420927:	call   DWORD PTR ds:0x42a857
  42092d:	cmp    eax,0xffffffff
  420930:	jne    0x42088a
  420936:	add    DWORD PTR ds:0x42914b,0x6e9d
  420940:	mov    DWORD PTR [esp+0x30],0x0
  420948:	or     ecx,ecx
  42094a:	mov    ecx,0xf89c85a1
  42094f:	mov    DWORD PTR ds:0x4291af,0x17
  420959:	cmp    DWORD PTR ds:0x4291af,0x0
  420960:	je     0x4209b6
  420966:	cmp    DWORD PTR ds:0x4291af,0x4
  42096d:	jge    0x4209b6
  420973:	jmp    0x420988
  420978:	push   0x4280d6
  42097d:	push   0x1
  42097f:	push   DWORD PTR [ebp-0x24]
  420982:	call   DWORD PTR ds:0x42a86f
  420988:	cmp    DWORD PTR ds:0x4291af,0x5
  42098f:	jne    0x4209a2
  420995:	mov    ebx,DWORD PTR ds:0x4291af
  42099b:	dec    ebx
  42099c:	mov    DWORD PTR ds:0x4291af,ebx
  4209a2:	xor    ebx,ebx
  4209a4:	xor    ebx,DWORD PTR ds:0x4291af
  4209aa:	dec    ebx
  4209ab:	mov    DWORD PTR ds:0x4291af,ebx
  4209b1:	jmp    0x420959
  4209b6:	mov    DWORD PTR [esp+0x18],ecx
  4209ba:	add    DWORD PTR ds:0x429167,0x3918
  4209c4:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  4209cc:	mov    edx,DWORD PTR ds:0x4291af
  4209d2:	or     DWORD PTR ds:0x429163,edx
  4209d8:	lea    eax,[esp+0x3c]
  4209dc:	mov    DWORD PTR [esp+0x30],eax
  4209e0:	xor    edi,edx
  4209e2:	lea    eax,[esp+0x38]
  4209e6:	sbb    edx,DWORD PTR ds:0x4291c3
  4209ec:	mov    DWORD PTR [esp+0x20],eax
  4209f0:	or     edi,0x5972
  4209f6:	mov    eax,ds:0x42830b
  4209fb:	mov    DWORD PTR ds:0x42917f,0x17
  420a05:	cmp    DWORD PTR ds:0x42917f,0x0
  420a0c:	je     0x420a43
  420a12:	cmp    DWORD PTR ds:0x42917f,0x21
  420a19:	jl     0x420a43
  420a1f:	jmp    0x420a2f
  420a24:	push   0x3972
  420a29:	call   DWORD PTR ds:0x42a873
  420a2f:	xor    edi,edi
  420a31:	add    edi,DWORD PTR ds:0x42917f
  420a37:	dec    edi
  420a38:	mov    DWORD PTR ds:0x42917f,edi
  420a3e:	jmp    0x420a05
  420a43:	mov    eax,DWORD PTR [eax+0x1c8]
  420a49:	mov    eax,DWORD PTR [eax]
  420a4b:	mov    edx,DWORD PTR [esp+0x20]
  420a4f:	mov    edi,0x75108ac
  420a54:	mov    ebx,DWORD PTR ds:0x4291db
  420a5a:	sbb    DWORD PTR ds:0x429153,ebx
  420a60:	xor    eax,edi
  420a62:	adc    DWORD PTR ds:0x4291f3,0x37f0
  420a6c:	mov    ebx,0x3272f3
  420a71:	add    DWORD PTR ds:0x4291a3,0x4291a7
  420a7b:	add    eax,ebx
  420a7d:	not    DWORD PTR ds:0x4291a3
  420a83:	mov    DWORD PTR [edx],eax
  420a85:	mov    DWORD PTR ds:0x4291cb,0x5252
  420a8f:	mov    eax,ds:0x42901f
  420a94:	cmp    eax,0x445cecf9
  420a99:	mov    DWORD PTR ds:0x4291bb,0x4b3f
  420aa3:	jne    0x420b94
  420aa9:	mov    eax,DWORD PTR [esp+0x18]
  420aad:	and    DWORD PTR ds:0x4291ab,0x0
  420ab7:	jmp    0x420acb
  420abc:	xor    edx,edx
  420abe:	add    edx,DWORD PTR ds:0x4291ab
  420ac4:	inc    edx
  420ac5:	mov    DWORD PTR ds:0x4291ab,edx
  420acb:	cmp    DWORD PTR ds:0x4291ab,0x1e
  420ad2:	jae    0x420b1c
  420ad8:	cmp    DWORD PTR ds:0x4291ab,0xe
  420adf:	jl     0x420b1c
  420ae5:	jmp    0x420afd
  420aea:	push   0x4280a5
  420aef:	push   DWORD PTR [ebp-0x1c]
  420af2:	push   0x3b7d
  420af7:	call   DWORD PTR ds:0x42a877
  420afd:	cmp    DWORD PTR ds:0x4291ab,0xd
  420b04:	jne    0x420b17
  420b0a:	mov    edx,DWORD PTR ds:0x4291ab
  420b10:	inc    edx
  420b11:	mov    DWORD PTR ds:0x4291ab,edx
  420b17:	jmp    0x420abc
  420b1c:	mov    edx,DWORD PTR ds:0x42830b
  420b22:	adc    DWORD PTR ds:0x4291b3,0x4291a7
  420b2c:	mov    edx,DWORD PTR [edx+0x198]
  420b32:	adc    DWORD PTR ds:0x4291a3,0x42918f
  420b3c:	xor    eax,edi
  420b3e:	sub    DWORD PTR ds:0x42916f,0x429197
  420b48:	add    eax,ebx
  420b4a:	add    DWORD PTR ds:0x42915f,0x42915b
  420b54:	mov    DWORD PTR [edx],eax
  420b56:	mov    eax,DWORD PTR [esp+0x18]
  420b5a:	xor    eax,edi
  420b5c:	not    DWORD PTR ds:0x4291b3
  420b62:	add    eax,ebx
  420b64:	sbb    DWORD PTR ds:0x4291eb,0x4291d3
  420b6e:	mov    ds:0x42901f,eax
  420b73:	mov    eax,DWORD PTR [esp+0x18]
  420b77:	sbb    DWORD PTR ds:0x42917b,0x42915f
  420b81:	xor    eax,edi
  420b83:	sub    DWORD PTR ds:0x429167,0x5dcc
  420b8d:	add    eax,ebx
  420b8f:	mov    ds:0x428403,eax
  420b94:	and    DWORD PTR ds:0x4291c3,0x0
  420b9e:	xor    eax,eax
  420ba0:	xor    eax,DWORD PTR ds:0x4291c3
  420ba6:	inc    eax
  420ba7:	mov    ds:0x4291c3,eax
  420bac:	cmp    DWORD PTR ds:0x4291c3,0x10
  420bb3:	jb     0x420be9
  420bb9:	jmp    0x420bc4
  420bbe:	call   DWORD PTR ds:0x42a87b
  420bc4:	cmp    DWORD PTR ds:0x4291c3,0xf
  420bcb:	jne    0x420bdc
  420bd1:	mov    eax,ds:0x4291c3
  420bd6:	inc    eax
  420bd7:	mov    ds:0x4291c3,eax
  420bdc:	cmp    DWORD PTR ds:0x4291c3,0x1a
  420be3:	jb     0x420b9e
  420be9:	mov    eax,ds:0x42830b
  420bee:	xor    DWORD PTR ds:0x4291bb,0x4291bf
  420bf8:	mov    eax,DWORD PTR [eax+0x18c]
  420bfe:	add    DWORD PTR ds:0x4291e7,0x4bf9
  420c08:	mov    eax,DWORD PTR [eax]
  420c0a:	mov    DWORD PTR [esp+0x60],eax
  420c0e:	mov    eax,0xf89c85bd
  420c13:	mov    DWORD PTR [esp+0x10],eax
  420c17:	add    DWORD PTR ds:0x429193,0x4291c7
  420c21:	mov    DWORD PTR [esp+0x10],eax
  420c25:	or     DWORD PTR ds:0x42917f,0x429187
  420c2f:	mov    DWORD PTR [esp+0x10],eax
  420c33:	mov    DWORD PTR [esp+0x10],ecx
  420c37:	dec    DWORD PTR ds:0x429167
  420c3d:	mov    DWORD PTR [esp+0x20],eax
  420c41:	and    DWORD PTR ds:0x4291d7,0x0
  420c4b:	xor    eax,eax
  420c4d:	add    eax,DWORD PTR ds:0x4291d7
  420c53:	inc    eax
  420c54:	mov    ds:0x4291d7,eax
  420c59:	cmp    DWORD PTR ds:0x4291d7,0xc
  420c60:	jge    0x420ca3
  420c66:	jmp    0x420c7b
  420c6b:	push   0x4291a7
  420c70:	push   0x4280a5
  420c75:	call   DWORD PTR ds:0x42a87f
  420c7b:	cmp    DWORD PTR ds:0x4291d7,0xb
  420c82:	jne    0x420c96
  420c88:	xor    eax,eax
  420c8a:	xor    eax,DWORD PTR ds:0x4291d7
  420c90:	inc    eax
  420c91:	mov    ds:0x4291d7,eax
  420c96:	cmp    DWORD PTR ds:0x4291d7,0x18
  420c9d:	jb     0x420c4b
  420ca3:	mov    DWORD PTR [esp+0x20],0xf89c85b9
  420cab:	sbb    eax,0x733e
  420cb0:	mov    eax,DWORD PTR [esp+0x18]
  420cb4:	xor    eax,edi
  420cb6:	xor    DWORD PTR ds:0x429167,0x2364
  420cc0:	add    eax,ebx
  420cc2:	jmp    0x420ea1
  420cc7:	lea    eax,[esp+0x78]
  420ccb:	sub    DWORD PTR ds:0x42918f,0x2bd1
  420cd5:	push   eax
  420cd6:	add    DWORD PTR ds:0x4291af,0x4291bb
  420ce0:	push   0x4284b7
  420ce5:	add    DWORD PTR ds:0x42916f,0x62a2
  420cef:	call   DWORD PTR ds:0x42a86b
  420cf5:	mov    DWORD PTR ds:0x4291ef,0x479f
  420cff:	cmp    eax,0xffffffff
  420d02:	jne    0x42088a
  420d08:	push   0xf
  420d0a:	lea    eax,[esp+0x44]
  420d0e:	add    DWORD PTR ds:0x42918f,0x71aa
  420d18:	push   eax
  420d19:	adc    DWORD PTR ds:0x4291bb,0x429187
  420d23:	push   0x42850b
  420d28:	push   0x42851f
  420d2d:	or     DWORD PTR ds:0x4291ef,0x259a
  420d37:	push   0x42853f
  420d3c:	call   esi
  420d3e:	imul   eax,eax,0x300000
  420d44:	mov    DWORD PTR ds:0x42914f,0x7610
  420d4e:	cmp    eax,0x1b00000
  420d53:	mov    DWORD PTR ds:0x429157,0x1024
  420d5d:	jne    0x42088a
  420d63:	sbb    DWORD PTR ds:0x4291c3,0x4291d7
  420d6d:	lea    eax,[esp+0x1b8]
  420d74:	push   eax
  420d75:	push   0x42857b
  420d7a:	sbb    DWORD PTR ds:0x42918f,0x1a84
  420d84:	call   DWORD PTR ds:0x42a857
  420d8a:	mov    DWORD PTR ds:0x4291b3,0x1d41
  420d94:	cmp    eax,0xffffffff
  420d97:	jne    0x42088a
  420d9d:	mov    eax,DWORD PTR [esp+0xc]
  420da1:	xor    ecx,DWORD PTR ds:0x42914f
  420da7:	mov    ecx,DWORD PTR [esp+0x20]
  420dab:	sbb    DWORD PTR ds:0x429197,0x5641
  420db5:	xor    eax,edi
  420db7:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  420dc1:	lea    eax,[eax+ecx*1+0x3272f3]
  420dc8:	inc    DWORD PTR ds:0x4291e7
  420dce:	push   eax
  420dcf:	add    DWORD PTR ds:0x4291b3,ebx
  420dd5:	mov    eax,DWORD PTR [esp+0x14]
  420dd9:	xor    eax,edi
  420ddb:	lea    eax,[ebp+eax*1+0x3272fb]
  420de2:	xor    DWORD PTR ds:0x429197,0x3901
  420dec:	push   eax
  420ded:	mov    DWORD PTR ds:0x429153,0x5a0a
  420df7:	mov    eax,ds:0x42830b
  420dfc:	xor    DWORD PTR ds:0x4291c3,0x2a62
  420e06:	push   DWORD PTR [eax+0x1bc]
  420e0c:	adc    DWORD PTR ds:0x429153,0x42915f
  420e16:	call   0x421b3f
  420e1b:	and    DWORD PTR ds:0x4291af,0x0
  420e25:	jmp    0x420e37
  420e2a:	mov    edx,DWORD PTR ds:0x4291af
  420e30:	inc    edx
  420e31:	mov    DWORD PTR ds:0x4291af,edx
  420e37:	cmp    DWORD PTR ds:0x4291af,0x15
  420e3e:	jae    0x420e7e
  420e44:	cmp    DWORD PTR ds:0x4291af,0xd
  420e4b:	jl     0x420e7e
  420e51:	jmp    0x420e5f
  420e56:	push   DWORD PTR [ebp-0x1c]
  420e59:	call   DWORD PTR ds:0x42a883
  420e5f:	cmp    DWORD PTR ds:0x4291af,0xc
  420e66:	jne    0x420e79
  420e6c:	mov    edx,DWORD PTR ds:0x4291af
  420e72:	inc    edx
  420e73:	mov    DWORD PTR ds:0x4291af,edx
  420e79:	jmp    0x420e2a
  420e7e:	mov    eax,DWORD PTR [esp+0xc]
  420e82:	mov    ecx,DWORD PTR [esp+0x20]
  420e86:	mov    edx,DWORD PTR ds:0x429167
  420e8c:	adc    DWORD PTR ds:0x4291b3,edx
  420e92:	xor    eax,edi
  420e94:	and    edx,DWORD PTR ds:0x4291b3
  420e9a:	lea    eax,[ecx+eax*1+0x3272f3]
  420ea1:	mov    ecx,DWORD PTR [esp+0xc]
  420ea5:	neg    edx
  420ea7:	mov    edx,DWORD PTR [esp+0xc]
  420eab:	or     DWORD PTR ds:0x42917b,0x429157
  420eb5:	xor    edx,edi
  420eb7:	or     DWORD PTR ds:0x4291c7,0x1707
  420ec1:	xor    ecx,edi
  420ec3:	xor    DWORD PTR ds:0x42916f,0x6f67
  420ecd:	add    ecx,edx
  420ecf:	mov    edx,DWORD PTR [esp+0xc]
  420ed3:	add    DWORD PTR ds:0x429193,0xde7
  420edd:	xor    edx,edi
  420edf:	mov    DWORD PTR ds:0x429197,0x79ec
  420ee9:	lea    ecx,[ecx+edx*1+0x9758d9]
  420ef0:	mov    DWORD PTR ds:0x42917b,0x463d
  420efa:	mov    DWORD PTR [esp+0x20],eax
  420efe:	cmp    eax,ecx
  420f00:	jbe    0x420cc7
  420f06:	xor    ecx,ecx
  420f08:	or     ecx,DWORD PTR ds:0x4291a3
  420f0e:	or     DWORD PTR ds:0x4291b3,ecx
  420f14:	mov    eax,DWORD PTR [ebp+0xc]
  420f17:	and    DWORD PTR ds:0x4291e3,0x0
  420f21:	mov    ecx,DWORD PTR ds:0x4291e3
  420f27:	inc    ecx
  420f28:	mov    DWORD PTR ds:0x4291e3,ecx
  420f2e:	cmp    DWORD PTR ds:0x4291e3,0x18
  420f35:	jge    0x420f62
  420f3b:	jmp    0x420f55
  420f40:	push   0x4291ab
  420f45:	push   0x4291db
  420f4a:	push   0x4566
  420f4f:	call   DWORD PTR ds:0x42a88b
  420f55:	cmp    DWORD PTR ds:0x4291e3,0x17
  420f5c:	jb     0x420f21
  420f62:	mov    ds:0x42818f,eax
  420f67:	mov    eax,DWORD PTR [ebp+0x10]
  420f6a:	mov    ds:0x4283eb,eax
  420f6f:	mov    DWORD PTR ds:0x4291af,0x18
  420f79:	cmp    DWORD PTR ds:0x4291af,0x0
  420f80:	je     0x420fd1
  420f86:	cmp    DWORD PTR ds:0x4291af,0x4
  420f8d:	ja     0x420fd1
  420f93:	jmp    0x420fa3
  420f98:	push   0x82c1
  420f9d:	call   DWORD PTR ds:0x42a853
  420fa3:	cmp    DWORD PTR ds:0x4291af,0x5
  420faa:	jne    0x420fbf
  420fb0:	xor    ecx,ecx
  420fb2:	or     ecx,DWORD PTR ds:0x4291af
  420fb8:	dec    ecx
  420fb9:	mov    DWORD PTR ds:0x4291af,ecx
  420fbf:	mov    ecx,DWORD PTR ds:0x4291af
  420fc5:	dec    ecx
  420fc6:	mov    DWORD PTR ds:0x4291af,ecx
  420fcc:	jmp    0x420f79
  420fd1:	mov    eax,ds:0x42818f
  420fd6:	movzx  ecx,BYTE PTR ds:0x429183
  420fdd:	adc    DWORD PTR ds:0x4291d7,ecx
  420fe3:	mov    ecx,DWORD PTR [esp+0x30]
  420fe7:	sub    DWORD PTR ds:0x4291ab,0x2768
  420ff1:	sub    eax,ebx
  420ff3:	and    DWORD PTR ds:0x42919f,0x51d9
  420ffd:	xor    eax,edi
  420fff:	mov    DWORD PTR [ecx],eax
  421001:	lea    eax,[esp+0x2c]
  421005:	mov    DWORD PTR [esp+0x6c],eax
  421009:	xor    DWORD PTR ds:0x4291cf,0x6aa
  421013:	lea    eax,[ebp+0x4]
  421016:	sub    DWORD PTR ds:0x42915b,0x4291af
  421020:	mov    DWORD PTR [esp+0x2c],eax
  421024:	lea    eax,[esp+0x78]
  421028:	sub    DWORD PTR ds:0x429153,0x6538
  421032:	push   eax
  421033:	add    DWORD PTR ds:0x4291a3,0x4291f3
  42103d:	push   0x428567
  421042:	call   DWORD PTR ds:0x42a86b
  421048:	mov    DWORD PTR ds:0x4291e3,0x1cd6
  421052:	cmp    eax,0xffffffff
  421055:	mov    DWORD PTR ds:0x4291b7,0x32c8
  42105f:	jne    0x42088a
  421065:	push   0xf
  421067:	lea    eax,[esp+0x44]
  42106b:	xor    DWORD PTR ds:0x429193,0x42919b
  421075:	push   eax
  421076:	push   0x4285bb
  42107b:	adc    DWORD PTR ds:0x429193,0x7895
  421085:	push   0x4285cf
  42108a:	push   0x4285ef
  42108f:	call   esi
  421091:	imul   eax,eax,0x300000
  421097:	cmp    eax,0x1b00000
  42109c:	jne    0x42088a
  4210a2:	lea    eax,[esp+0x1b8]
  4210a9:	push   eax
  4210aa:	push   0x42862b
  4210af:	sub    DWORD PTR ds:0x4291bf,0x42918b
  4210b9:	call   DWORD PTR ds:0x42a857
  4210bf:	mov    DWORD PTR ds:0x429187,0x3d95
  4210c9:	cmp    eax,0xffffffff
  4210cc:	mov    DWORD PTR ds:0x42917f,0x79ad
  4210d6:	jne    0x42088a
  4210dc:	lea    eax,[esp+0x78]
  4210e0:	add    DWORD PTR ds:0x42914f,0x6022
  4210ea:	push   eax
  4210eb:	neg    DWORD PTR ds:0x42917f
  4210f1:	push   0x428617
  4210f6:	add    DWORD PTR ds:0x42917b,0x4291e7
  421100:	call   DWORD PTR ds:0x42a86b
  421106:	mov    DWORD PTR ds:0x42916f,0x4f36
  421110:	cmp    eax,0xffffffff
  421113:	mov    DWORD PTR ds:0x429197,0x71f8
  42111d:	jne    0x42088a
  421123:	xor    DWORD PTR ds:0x4291b7,0x540c
  42112d:	push   0xf
  42112f:	or     DWORD PTR ds:0x42914b,0x42916b
  421139:	lea    eax,[esp+0x44]
  42113d:	and    DWORD PTR ds:0x4291ab,0x3361
  421147:	push   eax
  421148:	sub    DWORD PTR ds:0x4291bb,0x5c7b
  421152:	push   0x42866b
  421157:	adc    DWORD PTR ds:0x4291ab,0x4291cf
  421161:	push   0x42867f
  421166:	xor    DWORD PTR ds:0x429183,0x4291b7
  421170:	push   0x42869f
  421175:	or     DWORD PTR ds:0x4291af,0x4291cf
  42117f:	call   esi
  421181:	imul   eax,eax,0x300000
  421187:	mov    DWORD PTR ds:0x429157,0x112c
  421191:	cmp    eax,0x1b00000
  421196:	jne    0x42088a
  42119c:	or     DWORD PTR ds:0x42914f,0x1a1c
  4211a6:	lea    eax,[esp+0x1b8]
  4211ad:	push   eax
  4211ae:	sub    DWORD PTR ds:0x4291eb,0xb4e
  4211b8:	push   0x4286db
  4211bd:	not    DWORD PTR ds:0x429153
  4211c3:	call   DWORD PTR ds:0x42a857
  4211c9:	mov    DWORD PTR ds:0x4291d7,0x34b9
  4211d3:	cmp    eax,0xffffffff
  4211d6:	mov    DWORD PTR ds:0x4291bb,0x68d6
  4211e0:	jne    0x42088a
  4211e6:	lea    eax,[esp+0x78]
  4211ea:	push   eax
  4211eb:	sub    DWORD PTR ds:0x4291a7,0x429183
  4211f5:	push   0x4286c7
  4211fa:	sub    DWORD PTR ds:0x42919f,0xfe
  421204:	call   DWORD PTR ds:0x42a86b
  42120a:	mov    DWORD PTR ds:0x4291a3,0x162e
  421214:	cmp    eax,0xffffffff
  421217:	jne    0x42088a
  42121d:	add    DWORD PTR ds:0x42918f,0x39d
  421227:	push   0xf
  421229:	lea    eax,[esp+0x44]
  42122d:	push   eax
  42122e:	sbb    DWORD PTR ds:0x4291df,0x4c8c
  421238:	push   0x42871b
  42123d:	push   0x42872f
  421242:	push   0x42874f
  421247:	call   esi
  421249:	sub    DWORD PTR ds:0x42914f,0x429163
  421253:	imul   eax,eax,0x300000
  421259:	mov    DWORD PTR ds:0x42918b,0x5962
  421263:	cmp    eax,0x1b00000
  421268:	jne    0x42088a
  42126e:	add    DWORD PTR ds:0x4291a3,0x4291cb
  421278:	lea    eax,[esp+0x1b8]
  42127f:	or     DWORD PTR ds:0x4291ab,0x4619
  421289:	push   eax
  42128a:	push   0x42878b
  42128f:	and    DWORD PTR ds:0x42916f,0x4291ef
  421299:	call   DWORD PTR ds:0x42a857
  42129f:	mov    DWORD PTR ds:0x4291ef,0x2004
  4212a9:	cmp    eax,0xffffffff
  4212ac:	mov    DWORD PTR ds:0x42918b,0x62c6
  4212b6:	jne    0x42088a
  4212bc:	and    DWORD PTR ds:0x4291d3,0x5eb4
  4212c6:	lea    eax,[esp+0x78]
  4212ca:	adc    DWORD PTR ds:0x42917f,0x4918
  4212d4:	push   eax
  4212d5:	or     DWORD PTR ds:0x42919b,0x429153
  4212df:	push   0x428777
  4212e4:	sbb    DWORD PTR ds:0x429197,0x429157
  4212ee:	call   DWORD PTR ds:0x42a86b
  4212f4:	mov    DWORD PTR ds:0x42914f,0x13e7
  4212fe:	cmp    eax,0xffffffff
  421301:	mov    DWORD PTR ds:0x4291cf,0xa62
  42130b:	jne    0x42088a
  421311:	xor    DWORD PTR ds:0x42915b,0x4291bb
  42131b:	push   0xf
  42131d:	lea    eax,[esp+0x44]
  421321:	or     DWORD PTR ds:0x4291b3,0x2cef
  42132b:	push   eax
  42132c:	push   0x4287cb
  421331:	push   0x4287df
  421336:	sub    DWORD PTR ds:0x4291a3,0x42918f
  421340:	push   0x4287ff
  421345:	call   esi
  421347:	imul   eax,eax,0x300000
  42134d:	mov    DWORD PTR ds:0x429193,0x43ec
  421357:	cmp    eax,0x1b00000
  42135c:	mov    DWORD PTR ds:0x4291c7,0x18cb
  421366:	jne    0x42088a
  42136c:	add    DWORD PTR ds:0x4291af,0x5057
  421376:	lea    eax,[esp+0x1b8]
  42137d:	or     DWORD PTR ds:0x4291c3,0x48df
  421387:	push   eax
  421388:	and    DWORD PTR ds:0x4291e3,0x7c0c
  421392:	push   0x42883b
  421397:	and    DWORD PTR ds:0x4291f7,0x4291d7
  4213a1:	call   DWORD PTR ds:0x42a857
  4213a7:	cmp    eax,0xffffffff
  4213aa:	jne    0x42088a
  4213b0:	or     DWORD PTR ds:0x4291cb,0x5541
  4213ba:	lea    eax,[esp+0x78]
  4213be:	sub    DWORD PTR ds:0x4291f7,0x686a
  4213c8:	push   eax
  4213c9:	xor    DWORD PTR ds:0x4291ef,0x4291eb
  4213d3:	push   0x428827
  4213d8:	add    DWORD PTR ds:0x4291bb,0x4894
  4213e2:	call   DWORD PTR ds:0x42a86b
  4213e8:	mov    DWORD PTR ds:0x42914b,0x5d36
  4213f2:	cmp    eax,0xffffffff
  4213f5:	mov    DWORD PTR ds:0x42918b,0x63d2
  4213ff:	jne    0x42088a
  421405:	adc    DWORD PTR ds:0x4291d3,0x6d
  42140f:	push   0xf
  421411:	xor    DWORD PTR ds:0x4291df,0x4291b3
  42141b:	lea    eax,[esp+0x44]
  42141f:	xor    DWORD PTR ds:0x42914f,0x245a
  421429:	push   eax
  42142a:	adc    DWORD PTR ds:0x42915f,0x29d1
  421434:	push   0x42887b
  421439:	push   0x42888f
  42143e:	sbb    DWORD PTR ds:0x42914f,0x429163
  421448:	push   0x4288af
  42144d:	adc    DWORD PTR ds:0x42917f,0x4291a3
  421457:	call   esi
  421459:	imul   eax,eax,0x300000
  42145f:	cmp    eax,0x1b00000
  421464:	jne    0x42088a
  42146a:	mov    DWORD PTR ds:0x4291cf,0x5dc8
  421474:	lea    eax,[esp+0x1b8]
  42147b:	add    DWORD PTR ds:0x42919b,0x4291ab
  421485:	push   eax
  421486:	not    DWORD PTR ds:0x429153
  42148c:	push   0x4288eb
  421491:	call   DWORD PTR ds:0x42a857
  421497:	mov    DWORD PTR ds:0x4291e7,0x183e
  4214a1:	cmp    eax,0xffffffff
  4214a4:	jne    0x42088a
  4214aa:	lea    eax,[esp+0x78]
  4214ae:	xor    DWORD PTR ds:0x4291d7,0x57b8
  4214b8:	push   eax
  4214b9:	push   0x4288d7
  4214be:	add    DWORD PTR ds:0x4291af,0x1e81
  4214c8:	call   DWORD PTR ds:0x42a86b
  4214ce:	mov    DWORD PTR ds:0x4291c3,0x328a
  4214d8:	cmp    eax,0xffffffff
  4214db:	mov    DWORD PTR ds:0x4291f7,0x13f0
  4214e5:	jne    0x42088a
  4214eb:	push   0xf
  4214ed:	lea    eax,[esp+0x44]
  4214f1:	adc    DWORD PTR ds:0x4291c3,0x429173
  4214fb:	push   eax
  4214fc:	xor    DWORD PTR ds:0x4291cf,0x725b
  421506:	push   0x42892b
  42150b:	adc    DWORD PTR ds:0x4291bb,0x39d7
  421515:	push   0x42893f
  42151a:	xor    DWORD PTR ds:0x42918b,0x4291a7
  421524:	push   0x42895f
  421529:	call   esi
  42152b:	adc    DWORD PTR ds:0x4291ab,0x4291f7
  421535:	imul   eax,eax,0x300000
  42153b:	mov    DWORD PTR ds:0x4291cf,0x3d0e
  421545:	cmp    eax,0x1b00000
  42154a:	jne    0x42088a
  421550:	lea    eax,[esp+0x1b8]
  421557:	xor    DWORD PTR ds:0x429197,0x42919f
  421561:	push   eax
  421562:	push   0x42899b
  421567:	or     DWORD PTR ds:0x42915b,0x3d87
  421571:	call   DWORD PTR ds:0x42a857
  421577:	mov    DWORD PTR ds:0x4291bf,0x3132
  421581:	cmp    eax,0xffffffff
  421584:	jne    0x42088a
  42158a:	add    DWORD PTR ds:0x4291df,0x6129
  421594:	lea    eax,[esp+0x78]
  421598:	mov    DWORD PTR ds:0x42915b,0x7683
  4215a2:	push   eax
  4215a3:	push   0x428987
  4215a8:	adc    DWORD PTR ds:0x4291d3,0x4f30
  4215b2:	call   DWORD PTR ds:0x42a86b
  4215b8:	mov    DWORD PTR ds:0x42918f,0x2474
  4215c2:	cmp    eax,0xffffffff
  4215c5:	jne    0x42088a
  4215cb:	and    DWORD PTR ds:0x4291c3,0x7c44
  4215d5:	push   0xf
  4215d7:	lea    eax,[esp+0x44]
  4215db:	push   eax
  4215dc:	push   0x4289db
  4215e1:	sub    DWORD PTR ds:0x42914f,0x6ca1
  4215eb:	push   0x4289ef
  4215f0:	sbb    DWORD PTR ds:0x42916f,0x4291cf
  4215fa:	push   0x428a0f
  4215ff:	call   esi
  421601:	xor    DWORD PTR ds:0x4291eb,0x4291a3
  42160b:	imul   eax,eax,0x300000
  421611:	mov    DWORD PTR ds:0x4291a7,0x6fd3
  42161b:	cmp    eax,0x1b00000
  421620:	mov    DWORD PTR ds:0x4291f7,0x26fc
  42162a:	jne    0x42088a
  421630:	lea    eax,[esp+0x1b8]
  421637:	push   eax
  421638:	push   0x428a4b
  42163d:	call   DWORD PTR ds:0x42a857
  421643:	cmp    eax,0xffffffff
  421646:	jne    0x42088a
  42164c:	lea    eax,[esp+0x78]
  421650:	push   eax
  421651:	push   0x428a37
  421656:	call   DWORD PTR ds:0x42a86b
  42165c:	cmp    eax,0xffffffff
  42165f:	jne    0x42088a
  421665:	push   0xf
  421667:	lea    eax,[esp+0x44]
  42166b:	push   eax
  42166c:	push   0x428a8b
  421671:	push   0x428a9f
  421676:	push   0x428abf
  42167b:	call   esi
  42167d:	imul   eax,eax,0x300000
  421683:	cmp    eax,0x1b00000
  421688:	jne    0x42088a
  42168e:	lea    eax,[esp+0x1b8]
  421695:	push   eax
  421696:	push   0x428afb
  42169b:	call   DWORD PTR ds:0x42a857
  4216a1:	cmp    eax,0xffffffff
  4216a4:	jne    0x42088a
  4216aa:	lea    eax,[esp+0x78]
  4216ae:	push   eax
  4216af:	push   0x428ae7
  4216b4:	call   DWORD PTR ds:0x42a86b
  4216ba:	cmp    eax,0xffffffff
  4216bd:	jne    0x42088a
  4216c3:	push   0xf
  4216c5:	lea    eax,[esp+0x44]
  4216c9:	push   eax
  4216ca:	push   0x428b3b
  4216cf:	push   0x428b4f
  4216d4:	push   0x428b6f
  4216d9:	call   esi
  4216db:	imul   eax,eax,0x300000
  4216e1:	cmp    eax,0x1b00000
  4216e6:	jne    0x42088a
  4216ec:	lea    eax,[esp+0x1b8]
  4216f3:	push   eax
  4216f4:	push   0x428bab
  4216f9:	call   DWORD PTR ds:0x42a857
  4216ff:	cmp    eax,0xffffffff
  421702:	jne    0x42088a
  421708:	lea    eax,[esp+0x78]
  42170c:	push   eax
  42170d:	push   0x428b97
  421712:	call   DWORD PTR ds:0x42a86b
  421718:	cmp    eax,0xffffffff
  42171b:	jne    0x42088a
  421721:	push   0xf
  421723:	lea    eax,[esp+0x44]
  421727:	push   eax
  421728:	push   0x428beb
  42172d:	push   0x428bff
  421732:	push   0x428c1f
  421737:	call   esi
  421739:	imul   eax,eax,0x300000
  42173f:	cmp    eax,0x1b00000
  421744:	jne    0x42088a
  42174a:	lea    eax,[esp+0x1b8]
  421751:	push   eax
  421752:	push   0x428c5b
  421757:	call   DWORD PTR ds:0x42a857
  42175d:	cmp    eax,0xffffffff
  421760:	jne    0x42088a
  421766:	lea    eax,[esp+0x78]
  42176a:	push   eax
  42176b:	push   0x428c47
  421770:	call   DWORD PTR ds:0x42a86b
  421776:	cmp    eax,0xffffffff
  421779:	jne    0x42088a
  42177f:	push   0xf
  421781:	lea    eax,[esp+0x44]
  421785:	push   eax
  421786:	push   0x428c9b
  42178b:	push   0x428caf
  421790:	push   0x428ccf
  421795:	call   esi
  421797:	imul   eax,eax,0x300000
  42179d:	cmp    eax,0x1b00000
  4217a2:	jne    0x42088a
  4217a8:	lea    eax,[esp+0x1b8]
  4217af:	push   eax
  4217b0:	push   0x428d0b
  4217b5:	call   DWORD PTR ds:0x42a857
  4217bb:	cmp    eax,0xffffffff
  4217be:	jne    0x42088a
  4217c4:	lea    eax,[esp+0x78]
  4217c8:	push   eax
  4217c9:	push   0x428cf7
  4217ce:	call   DWORD PTR ds:0x42a86b
  4217d4:	cmp    eax,0xffffffff
  4217d7:	jne    0x42088a
  4217dd:	push   0xf
  4217df:	lea    eax,[esp+0x44]
  4217e3:	push   eax
  4217e4:	push   0x428d4b
  4217e9:	push   0x428d5f
  4217ee:	push   0x428d7f
  4217f3:	call   esi
  4217f5:	imul   eax,eax,0x300000
  4217fb:	cmp    eax,0x1b00000
  421800:	jne    0x42088a
  421806:	lea    eax,[esp+0x1b8]
  42180d:	push   eax
  42180e:	push   0x428dbb
  421813:	call   DWORD PTR ds:0x42a857
  421819:	cmp    eax,0xffffffff
  42181c:	jne    0x42088a
  421822:	mov    eax,DWORD PTR [esp+0x3c]
  421826:	cmp    eax,0xf89c85a2
  42182b:	je     0x42188a
  421831:	mov    eax,DWORD PTR [esp+0x18]
  421835:	mov    ecx,DWORD PTR [esp+0x38]
  421839:	xor    eax,edi
  42183b:	add    eax,ebx
  42183d:	cmp    eax,ecx
  42183f:	je     0x42188a
  421845:	mov    eax,ds:0x42830b
  42184a:	mov    eax,DWORD PTR [eax+0x194]
  421850:	mov    ecx,DWORD PTR [eax]
  421852:	mov    eax,DWORD PTR [ecx+0x3c]
  421855:	push   DWORD PTR ds:0x4283eb
  42185b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  42185f:	push   DWORD PTR ds:0x42818f
  421865:	add    eax,ecx
  421867:	mov    ecx,DWORD PTR ds:0x42830b
  42186d:	mov    ecx,DWORD PTR [ecx+0x194]
  421873:	push   DWORD PTR [ecx]
  421875:	call   eax
  421877:	mov    ecx,DWORD PTR ds:0x42830b
  42187d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421883:	mov    DWORD PTR [ecx],eax
  421885:	jmp    0x421ab7
  42188a:	mov    eax,DWORD PTR [esp+0x18]
  42188e:	mov    ecx,DWORD PTR [esp+0x60]
  421892:	xor    eax,edi
  421894:	add    eax,ebx
  421896:	cmp    eax,ecx
  421898:	jne    0x421901
  42189e:	mov    eax,DWORD PTR [esp+0x18]
  4218a2:	mov    ecx,DWORD PTR ds:0x42830b
  4218a8:	mov    ecx,DWORD PTR [ecx+0x198]
  4218ae:	xor    eax,edi
  4218b0:	add    eax,ebx
  4218b2:	cmp    eax,DWORD PTR [ecx]
  4218b4:	jne    0x4218da
  4218ba:	mov    eax,DWORD PTR [esp+0x18]
  4218be:	push   0xf89c85a1
  4218c3:	xor    eax,edi
  4218c5:	add    eax,ebx
  4218c7:	push   eax
  4218c8:	push   0xf89c85bd
  4218cd:	push   DWORD PTR [esp+0x18]
  4218d1:	push   DWORD PTR [esp+0x28]
  4218d5:	call   0x41b9fd
  4218da:	push   DWORD PTR [esp+0xc]
  4218de:	push   DWORD PTR [esp+0x1c]
  4218e2:	call   0x401000
  4218e7:	mov    eax,DWORD PTR [esp+0x18]
  4218eb:	xor    eax,edi
  4218ed:	add    eax,ebx
  4218ef:	mov    ds:0x428397,eax
  4218f4:	mov    eax,DWORD PTR [esp+0x18]
  4218f8:	xor    eax,edi
  4218fa:	add    eax,ebx
  4218fc:	mov    ds:0x42838f,eax
  421901:	mov    eax,DWORD PTR [esp+0x2c]
  421905:	test   eax,eax
  421907:	je     0x421ab7
  42190d:	lea    eax,[esp+0x78]
  421911:	mov    DWORD PTR [esp+0x64],0xf152c3a
  421919:	push   eax
  42191a:	mov    DWORD PTR [esp+0x78],0x712ed2f
  421922:	mov    DWORD PTR [esp+0x74],0x373fc09
  42192a:	push   0x428da7
  42192f:	mov    DWORD PTR [esp+0x70],0x72670ad9
  421937:	call   DWORD PTR ds:0x42a86b
  42193d:	cmp    eax,0xffffffff
  421940:	jne    0x42088a
  421946:	push   0xf
  421948:	lea    eax,[esp+0x44]
  42194c:	push   eax
  42194d:	push   0x428dfb
  421952:	push   0x428e0f
  421957:	push   0x428e2f
  42195c:	call   esi
  42195e:	imul   eax,eax,0x300000
  421964:	cmp    eax,0x1b00000
  421969:	jne    0x42088a
  42196f:	lea    eax,[esp+0x1b8]
  421976:	push   eax
  421977:	push   0x428e6b
  42197c:	call   DWORD PTR ds:0x42a857
  421982:	cmp    eax,0xffffffff
  421985:	jne    0x42088a
  42198b:	call   0x41b69e
  421990:	mov    eax,DWORD PTR [esp+0x34]
  421994:	mov    eax,DWORD PTR [esp+0xc]
  421998:	mov    DWORD PTR [esp+0x30],eax
  42199c:	mov    eax,DWORD PTR [esp+0x18]
  4219a0:	mov    DWORD PTR [esp+0xc],eax
  4219a4:	mov    eax,eax
  4219a6:	mov    eax,ds:0x42830b
  4219ab:	mov    ecx,DWORD PTR [eax+0x1c0]
  4219b1:	mov    edx,DWORD PTR [ecx]
  4219b3:	and    DWORD PTR [esp+0x14],0x0
  4219b8:	mov    esi,0xfabdbed6
  4219bd:	add    edx,esi
  4219bf:	adc    DWORD PTR [esp+0x14],0xffffffff
  4219c4:	mov    ecx,0x8a29a13f
  4219c9:	xor    edx,ecx
  4219cb:	mov    DWORD PTR [esp+0x20],edx
  4219cf:	mov    edx,DWORD PTR [esp+0x14]
  4219d3:	xor    edx,0x0
  4219d6:	cmp    DWORD PTR [esp+0x20],0x70941fe8
  4219de:	mov    DWORD PTR [esp+0x24],edx
  4219e2:	jne    0x4219f1
  4219e8:	cmp    edx,0xffffffff
  4219eb:	je     0x421a5a
  4219f1:	mov    eax,DWORD PTR [eax+0x1c8]
  4219f7:	mov    eax,DWORD PTR [eax]
  4219f9:	cdq    
  4219fa:	add    eax,esi
  4219fc:	adc    edx,0xffffffff
  4219ff:	and    DWORD PTR [esp+0x14],0x0
  421a04:	xor    edx,0x0
  421a07:	mov    DWORD PTR [esp+0x1c],edx
  421a0b:	mov    edx,DWORD PTR [esp+0xc]
  421a0f:	mov    DWORD PTR [esp+0x10],edx
  421a13:	xor    eax,ecx
  421a15:	add    DWORD PTR [esp+0x10],esi
  421a19:	mov    edx,DWORD PTR [esp+0x10]
  421a1d:	adc    DWORD PTR [esp+0x14],0xffffffff
  421a22:	xor    edx,ecx
  421a24:	mov    DWORD PTR [esp+0x20],edx
  421a28:	mov    edx,DWORD PTR [esp+0x14]
  421a2c:	xor    edx,0x0
  421a2f:	mov    DWORD PTR [esp+0x24],edx
  421a33:	cmp    DWORD PTR [esp+0x20],eax
  421a37:	jne    0x421a49
  421a3d:	mov    eax,DWORD PTR [esp+0x1c]
  421a41:	cmp    edx,eax
  421a43:	je     0x421a5a
  421a49:	mov    eax,DWORD PTR [esp+0xc]
  421a4d:	add    eax,DWORD PTR [esp+0x30]
  421a51:	mov    DWORD PTR [esp+0xc],eax
  421a55:	jmp    0x421ab7
  421a5a:	mov    eax,ds:0x42838f
  421a5f:	mov    edx,DWORD PTR ds:0x428397
  421a65:	xor    eax,edx
  421a67:	mov    ds:0x42838f,eax
  421a6c:	mov    edx,DWORD PTR ds:0x42838f
  421a72:	mov    eax,DWORD PTR [esp+0x2c]
  421a76:	add    DWORD PTR [eax],edx
  421a78:	mov    edx,DWORD PTR [esp+0xc]
  421a7c:	mov    eax,ds:0x42838f
  421a81:	xor    edx,edi
  421a83:	add    edx,ebx
  421a85:	xor    ebx,ebx
  421a87:	add    edx,esi
  421a89:	adc    ebx,0xffffffff
  421a8c:	xor    edi,edi
  421a8e:	xor    edx,ecx
  421a90:	xor    ebx,0x0
  421a93:	add    eax,esi
  421a95:	adc    edi,0xffffffff
  421a98:	xor    eax,ecx
  421a9a:	xor    edi,0x0
  421a9d:	cmp    eax,edx
  421a9f:	jne    0x421ab7
  421aa5:	cmp    edi,ebx
  421aa7:	jne    0x421ab7
  421aad:	mov    eax,ds:0x42838f
  421ab2:	mov    ds:0x428397,eax
  421ab7:	lea    eax,[esp+0x78]
  421abb:	push   eax
  421abc:	push   0x428e57
  421ac1:	call   DWORD PTR ds:0x42a86b
  421ac7:	cmp    eax,0xffffffff
  421aca:	jne    0x42088a
  421ad0:	push   0xf
  421ad2:	lea    eax,[esp+0x44]
  421ad6:	push   eax
  421ad7:	push   0x428eab
  421adc:	push   0x428ebf
  421ae1:	push   0x428edf
  421ae6:	call   DWORD PTR ds:0x42a887
  421aec:	imul   eax,eax,0x300000
  421af2:	cmp    eax,0x1b00000
  421af7:	jne    0x42088a
  421afd:	lea    eax,[esp+0x1b8]
  421b04:	push   eax
  421b05:	push   0x428f0b
  421b0a:	call   DWORD PTR ds:0x42a857
  421b10:	cmp    eax,0xffffffff
  421b13:	jne    0x42088a
  421b19:	mov    eax,ds:0x42830b
  421b1e:	push   0x4
  421b20:	add    eax,0x1cc
  421b25:	push   eax
  421b26:	lea    eax,[esp+0x3c]
  421b2a:	push   eax
  421b2b:	call   0x421b3f
  421b30:	mov    eax,DWORD PTR [esp+0x34]
  421b34:	mov    eax,DWORD PTR [eax]
  421b36:	pop    edi
  421b37:	pop    esi
  421b38:	pop    ebx
  421b39:	mov    esp,ebp
  421b3b:	pop    ebp
  421b3c:	ret    0xc
  421b3f:	push   ebp
  421b40:	mov    ebp,esp
  421b42:	sub    esp,0x10
  421b45:	sub    DWORD PTR ds:0x429153,ebx
  421b4b:	mov    eax,0xf89c85a1
  421b50:	and    ecx,DWORD PTR ds:0x42914b
  421b56:	mov    DWORD PTR [ebp-0x4],eax
  421b59:	and    DWORD PTR ds:0x429167,0x0
  421b63:	jmp    0x421b75
  421b68:	mov    edx,DWORD PTR ds:0x429167
  421b6e:	inc    edx
  421b6f:	mov    DWORD PTR ds:0x429167,edx
  421b75:	cmp    DWORD PTR ds:0x429167,0x1c
  421b7c:	jae    0x421bcb
  421b82:	cmp    DWORD PTR ds:0x429167,0xc
  421b89:	jge    0x421bcb
  421b8f:	jmp    0x421bac
  421b94:	push   DWORD PTR [ebp-0x28]
  421b97:	push   0x428152
  421b9c:	push   0x42810e
  421ba1:	push   0x400000
  421ba6:	call   DWORD PTR ds:0x42a85b
  421bac:	cmp    DWORD PTR ds:0x429167,0xb
  421bb3:	jne    0x421bc6
  421bb9:	mov    edx,DWORD PTR ds:0x429167
  421bbf:	inc    edx
  421bc0:	mov    DWORD PTR ds:0x429167,edx
  421bc6:	jmp    0x421b68
  421bcb:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  421bd2:	or     edx,0x5b7d
  421bd8:	mov    ecx,DWORD PTR [ebp-0x4]
  421bdb:	push   esi
  421bdc:	mov    DWORD PTR ds:0x42918b,0x1a
  421be6:	cmp    DWORD PTR ds:0x42918b,0x0
  421bed:	je     0x421c25
  421bf3:	cmp    DWORD PTR ds:0x42918b,0x26
  421bfa:	ja     0x421c25
  421c00:	jmp    0x421c13
  421c05:	push   0x4386
  421c0a:	push   DWORD PTR [ebp-0x14]
  421c0d:	call   DWORD PTR ds:0x42a85f
  421c13:	mov    edx,DWORD PTR ds:0x42918b
  421c19:	dec    edx
  421c1a:	mov    DWORD PTR ds:0x42918b,edx
  421c20:	jmp    0x421be6
  421c25:	mov    edx,0x75108ac
  421c2a:	xor    ecx,edx
  421c2c:	mov    esi,0x3272f3
  421c31:	push   edi
  421c32:	mov    edi,DWORD PTR [ebp+0x10]
  421c35:	add    ecx,esi
  421c37:	cmp    ecx,edi
  421c39:	mov    DWORD PTR ds:0x42916f,0x60ec
  421c43:	je     0x42414b
  421c49:	movzx  ecx,WORD PTR ds:0x4291f7
  421c50:	adc    DWORD PTR ds:0x4291cf,ecx
  421c56:	mov    ecx,DWORD PTR [ebp-0x4]
  421c59:	mov    edi,DWORD PTR [ebp+0x10]
  421c5c:	inc    DWORD PTR ds:0x4291d3
  421c62:	xor    eax,eax
  421c64:	and    DWORD PTR ds:0x4291b7,0x2b27
  421c6e:	xor    ecx,edx
  421c70:	add    ecx,esi
  421c72:	add    DWORD PTR ds:0x42914b,0x714
  421c7c:	add    edi,0xfabdbed6
  421c82:	mov    DWORD PTR ds:0x429173,0x79de
  421c8c:	adc    eax,0xffffffff
  421c8f:	or     DWORD PTR ds:0x4291b3,0x42917f
  421c99:	xor    eax,0x0
  421c9c:	adc    DWORD PTR ds:0x4291e7,0x4ab7
  421ca6:	mov    DWORD PTR [ebp-0xc],eax
  421ca9:	mov    DWORD PTR ds:0x42914b,0x1e
  421cb3:	cmp    DWORD PTR ds:0x42914b,0x0
  421cba:	je     0x421d0b
  421cc0:	cmp    DWORD PTR ds:0x42914b,0x8
  421cc7:	jge    0x421d0b
  421ccd:	jmp    0x421cdd
  421cd2:	push   0x4291eb
  421cd7:	call   DWORD PTR ds:0x42a863
  421cdd:	cmp    DWORD PTR ds:0x42914b,0x9
  421ce4:	jne    0x421cf8
  421cea:	xor    eax,eax
  421cec:	add    eax,DWORD PTR ds:0x42914b
  421cf2:	dec    eax
  421cf3:	mov    ds:0x42914b,eax
  421cf8:	xor    eax,eax
  421cfa:	xor    eax,DWORD PTR ds:0x42914b
  421d00:	dec    eax
  421d01:	mov    ds:0x42914b,eax
  421d06:	jmp    0x421cb3
  421d0b:	push   ebx
  421d0c:	xor    ebx,ebx
  421d0e:	xor    edi,0x8a29a13f
  421d14:	mov    eax,ecx
  421d16:	add    eax,0xfabdbed6
  421d1b:	adc    ebx,0xffffffff
  421d1e:	xor    eax,0x8a29a13f
  421d23:	xor    ebx,0x0
  421d26:	cmp    eax,edi
  421d28:	jne    0x421d41
  421d2e:	cmp    ebx,DWORD PTR [ebp-0xc]
  421d31:	je     0x424145
  421d37:	jmp    0x421d41
  421d3c:	mov    esi,0x3272f3
  421d41:	mov    eax,DWORD PTR [ebp-0x4]
  421d44:	mov    edi,DWORD PTR [ebp-0x8]
  421d47:	xor    edi,edx
  421d49:	add    edi,esi
  421d4b:	mov    esi,DWORD PTR [ebp+0x8]
  421d4e:	imul   edi,ecx
  421d51:	mov    ebx,DWORD PTR [ebp+0xc]
  421d54:	xor    eax,edx
  421d56:	add    eax,ecx
  421d58:	mov    al,BYTE PTR [ebx+eax*1+0x3272f3]
  421d5f:	mov    BYTE PTR [edi+esi*1],al
  421d62:	mov    eax,DWORD PTR [ebp-0x8]
  421d65:	mov    esi,DWORD PTR [ebp+0x10]
  421d68:	xor    eax,edx
  421d6a:	xor    ebx,ebx
  421d6c:	add    esi,0xfabdbed6
  421d72:	adc    ebx,0xffffffff
  421d75:	lea    ecx,[ecx+eax*1+0x3272f3]
  421d7c:	xor    edi,edi
  421d7e:	xor    esi,0x8a29a13f
  421d84:	xor    ebx,0x0
  421d87:	mov    eax,ecx
  421d89:	add    eax,0xfabdbed6
  421d8e:	adc    edi,0xffffffff
  421d91:	xor    eax,0x8a29a13f
  421d96:	xor    edi,0x0
  421d99:	cmp    eax,esi
  421d9b:	jne    0x421d3c
  421da1:	cmp    edi,ebx
  421da3:	jne    0x421d3c
  421da9:	jmp    0x424145
  421dae:	sbb    ah,bl
  421db0:	cmp    ch,BYTE PTR [edi-0x46]
  421db3:	xchg   BYTE PTR [esi],al
  421db5:	xchg   BYTE PTR [edx-0x68],bl
  421db8:	dec    esi
  421db9:	push   esp
  421dba:	mov    eax,ds:0x6f8d8534
  421dbf:	mov    cl,0x82
  421dc1:	add    DWORD PTR [eax],0x5c
  421dc4:	add    DWORD PTR [ebx-0x3966d1f2],0x59
  421dcb:	xor    edi,DWORD PTR [ecx+edi*8]
  421dce:	push   0xffffffad
  421dd0:	jno    0x421d6f
  421dd2:	push   ecx
  421dd4:	out    dx,eax
  421dd5:	sbb    DWORD PTR [ecx],edx
  421dd7:	lahf   
  421dd8:	jno    0x421e46
  421dda:	push   0xffffffe2
  421ddc:	test   BYTE PTR ds:0xedc66cf9,ah
  421de2:	enter  0xc170,0x0
  421de6:	mov    cl,0x3c
  421de8:	sub    edi,DWORD PTR [ecx+0x1b]
  421deb:	sub    dl,BYTE PTR ds:0x8d23c081
  421df1:	dec    edi
  421df2:	add    al,0xdd
  421df4:	sbb    edi,eax
  421df6:	cdq    
  421df7:	loop   0x421dbe
  421df9:	xchg   DWORD PTR [eax+ebp*8],ebp
  421dfc:	dec    ebx
  421dfd:	iret   
  421dfe:	or     ecx,DWORD PTR [edx+0x7f523c1c]
  421e04:	scas   al,BYTE PTR es:[edi]
  421e05:	test   DWORD PTR [edx+eiz*4-0x38],ebx
  421e09:	dec    ecx
  421e0a:	mov    ebp,0x2638e356
  421e0f:	data16 adc al,0xea
  421e12:	cdq    
  421e13:	ret    
  421e14:	fisub  WORD PTR [edi+edi*1-0xc]
  421e18:	es jecxz 0x421e83
  421e1b:	inc    ebx
  421e1c:	cmc    
  421e1d:	cmc    
  421e1e:	ins    DWORD PTR es:[edi],dx
  421e1f:	mov    BYTE PTR [eax+0x5237d474],cl
  421e25:	mov    ?,WORD PTR [ebp-0x18]
  421e28:	dec    eax
  421e29:	cmp    eax,0x5af151cd
  421e2e:	and    eax,ebx
  421e30:	jmp    0x5ea4142a
  421e35:	aaa    
  421e36:	mov    esp,0xbe5f97d6
  421e3b:	jmp    0x12c2:0x9ee4a215
  421e42:	inc    edx
  421e43:	dec    ebx
  421e44:	(bad)
  421e48:	bound  esi,QWORD PTR [eax+0x6cd7cc65]
  421e4e:	dec    edx
  421e4f:	cmc    
  421e50:	add    DWORD PTR [edx+0x4f],0xfffffffa
  421e54:	xchg   ebp,eax
  421e55:	add    dl,dl
  421e57:	fsub   DWORD PTR [ecx+0x12]
  421e5a:	(bad)  
  421e5b:	std    
  421e5c:	dec    ebp
  421e5d:	or     BYTE PTR [ecx+0x57832c23],dl
  421e63:	or     cl,BYTE PTR [eax]
  421e65:	stc    
  421e66:	fbld   TBYTE PTR [ebp+0x4ad0e19]
  421e6c:	jno    0x421eca
  421e6e:	scas   eax,DWORD PTR es:[edi]
  421e6f:	fistp  QWORD PTR [ecx+eax*8+0x3f]
  421e73:	ja     0x421e70
  421e75:	dec    ebp
  421e76:	lods   al,BYTE PTR ds:[esi]
  421e77:	fidiv  WORD PTR [edi]
  421e79:	dec    edi
  421e7a:	cmc    
  421e7b:	cs xchg cl,ch
  421e7e:	push   eax
  421e7f:	push   0x3a3adff1
  421e84:	xchg   DWORD PTR [edx+0x55],esi
  421e87:	push   0x4d1be9f8
  421e8c:	mov    cl,0x22
  421e8e:	dec    eax
  421e8f:	popa   
  421e90:	gs push edi
  421e92:	dec    ebp
  421e93:	call   0x6192:0x76cd945d
  421e9a:	jl     0x421e37
  421e9c:	js     0x421f07
  421e9e:	push   ebp
  421e9f:	adc    dh,BYTE PTR [eax]
  421ea1:	sbb    ah,0x47
  421ea4:	jl     0x421e4b
  421ea6:	retf   0x3900
  421ea9:	ror    bh,cl
  421eab:	std    
  421eac:	sub    al,ah
  421eae:	adc    DWORD PTR [ecx],ebp
  421eb0:	or     eax,0xecac91be
  421eb5:	pop    es
  421eb6:	jle    0x421ecc
  421eb8:	iret   
  421eb9:	mov    ch,ch
  421ebb:	ins    DWORD PTR es:[edi],dx
  421ebc:	mov    edi,0x82158e44
  421ec1:	push   0xffffffdb
  421ec3:	loop   0x421e8c
  421ec5:	jne    0x421ea6
  421ec7:	inc    esp
  421ec8:	lods   al,BYTE PTR ds:[esi]
  421ec9:	dec    eax
  421eca:	xchg   ecx,eax
  421ecb:	mov    esi,0xdcf0140d
  421ed0:	aad    0x85
  421ed2:	sub    eax,0x4e60f7f6
  421ed7:	sub    BYTE PTR [esp+0x39f427a3],0xcb
  421edf:	cld    
  421ee0:	mov    WORD PTR [ebx],gs
  421ee2:	jecxz  0x421f35
  421ee4:	outs   dx,BYTE PTR ds:[esi]
  421ee5:	int3   
  421ee6:	push   es
  421ee7:	xchg   edx,eax
  421ee8:	(bad)  
  421eea:	mov    dl,BYTE PTR [ebx]
  421eec:	or     BYTE PTR [ebx+0x5a01a2df],bh
  421ef2:	pop    edx
  421ef3:	push   eax
  421ef4:	fisub  DWORD PTR [esi-0x74]
  421ef7:	dec    esp
  421ef8:	sahf   
  421ef9:	and    edi,ecx
  421efb:	mov    eax,DWORD PTR [ebx+eiz*4]
  421efe:	adc    BYTE PTR [esp+eiz*2],ch
  421f01:	addr16 mov ebp,0x54a61a24
  421f07:	dec    edx
  421f08:	rcr    al,cl
  421f0a:	add    al,0x66
  421f0c:	mov    bh,0xc8
  421f0e:	out    0x1c,al
  421f10:	mov    eax,ds:0xa8a39c7f
  421f15:	hlt    
  421f16:	inc    ecx
  421f17:	cmp    BYTE PTR [eax+0x65dfab09],bh
  421f1d:	dec    ebp
  421f1e:	lahf   
  421f1f:	rol    BYTE PTR [ecx],cl
  421f21:	fs dec edi
  421f23:	(bad)  
  421f24:	setp   bh
  421f27:	or     BYTE PTR [edi+0x78b3f0ff],0xa1
  421f2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f2f:	xchg   ecx,eax
  421f30:	lods   al,BYTE PTR ds:[esi]
  421f31:	mov    edx,0xdff09c93
  421f36:	xchg   ecx,eax
  421f37:	xor    dh,cl
  421f39:	aam    0x2
  421f3b:	inc    ebx
  421f3c:	add    al,0x1d
  421f3e:	les    ebx,FWORD PTR [esi-0x32]
  421f41:	mov    BYTE PTR [ecx],bl
  421f43:	push   edx
  421f44:	sbb    DWORD PTR [ebx],esp
  421f46:	and    ax,0xf777
  421f4a:	or     edx,DWORD PTR [ebp+0x4a]
  421f4d:	or     DWORD PTR ds:0x8c6e8ce4,edx
  421f53:	push   edx
  421f54:	jbe    0x421f84
  421f56:	out    dx,eax
  421f57:	test   al,0x71
  421f59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f5a:	stos   DWORD PTR es:[edi],eax
  421f5b:	cld    
  421f5c:	mov    edi,esi
  421f5e:	inc    ebp
  421f5f:	push   cs
  421f60:	add    dl,BYTE PTR [eax+eiz*8]
  421f63:	dec    cx
  421f65:	dec    esi
  421f66:	je     0x421f24
  421f68:	iret   
  421f69:	jmp    0xccb10e9e
  421f6e:	fld    TBYTE PTR [ebp+0x44d45205]
  421f74:	inc    eax
  421f75:	(bad)  
  421f76:	cli    
  421f77:	push   esi
  421f78:	pusha  
  421f79:	jl     0x421f5b
  421f7b:	and    eax,0xc194abdc
  421f80:	rcr    dl,1
  421f82:	mov    bl,0x8
  421f84:	dec    ebp
  421f85:	js     0x421f0a
  421f87:	xor    BYTE PTR [ecx-0x14],0xfe
  421f8b:	cld    
  421f8c:	sub    BYTE PTR [edi],ch
  421f8e:	jg     0x421fdf
  421f90:	aas    
  421f91:	ja     0x421f5a
  421f93:	xor    dh,BYTE PTR [edx]
  421f95:	and    ebp,DWORD PTR [eax]
  421f97:	test   eax,0xca581e8d
  421f9c:	jecxz  0x421fb8
  421f9e:	jmp    0x7a1a14db
  421fa3:	out    dx,eax
  421fa4:	push   0xbd3c4d24
  421fa9:	std    
  421faa:	pop    ds
  421fab:	ficom  DWORD PTR [ebx-0x7ebcddfa]
  421fb1:	cmp    eax,0xf22542f1
  421fb6:	and    ebx,esi
  421fb8:	pop    edx
  421fb9:	(bad)  
  421fba:	dec    eax
  421fbb:	inc    esi
  421fbc:	xchg   BYTE PTR [ebx],dl
  421fbe:	jnp    0x421fed
  421fc0:	test   esi,esp
  421fc2:	js     0x42203c
  421fc4:	jno    0x421fd6
  421fc6:	mov    esp,0xf4782998
  421fcb:	call   0xaf8b2987
  421fd0:	mov    BYTE PTR [edi-0x49cc72b7],al
  421fd6:	xchg   ebp,eax
  421fd7:	mov    al,ds:0x91386c9d
  421fdc:	daa    
  421fdd:	das    
  421fde:	mov    bl,0x4f
  421fe1:	bound  edx,QWORD PTR [edx+eiz*8]
  421fe4:	retf   
  421fe5:	sub    cl,BYTE PTR [eax-0x53]
  421fe8:	mov    eax,ds:0xf83b0568
  421fed:	push   0xffffff9b
  421fef:	jmp    0x422038
  421ff1:	outs   dx,DWORD PTR ds:[esi]
  421ff2:	or     DWORD PTR [edx+0x1357e40b],ebp
  421ff8:	icebp  
  421ff9:	fisttp WORD PTR [edi+0x1e]
  421ffc:	push   cs
  421ffd:	imul   esp,DWORD PTR [edi+0x27],0x7137898c
  422004:	adc    al,dh
  422006:	xchg   esp,eax
  422007:	dec    ebx
  422008:	dec    eax
  422009:	sbb    BYTE PTR [edx],ch
  42200b:	mov    ebx,0x23399f7d
  422010:	mov    al,0x1f
  422012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422013:	mov    ecx,0x812a0a5c
  422018:	sti    
  422019:	mov    edi,0x65120f9b
  42201e:	hlt    
  42201f:	rcr    BYTE PTR [edi*2+0x43a57b93],0xed
  422027:	in     eax,0x7d
  422029:	cmp    DWORD PTR [edx+0x32],esi
  42202c:	mov    dl,dh
  42202e:	xchg   ebp,eax
  42202f:	outs   dx,DWORD PTR ds:[esi]
  422030:	aam    0x4e
  422032:	call   0xd2f8:0x497f5e65
  422039:	leave  
  42203a:	in     al,dx
  42203b:	int    0xd5
  42203d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42203e:	out    0xee,al
  422040:	xor    al,0xda
  422042:	fild   WORD PTR [ebx+ebp*1+0x21]
  422046:	cli    
  422047:	scas   eax,DWORD PTR es:[edi]
  422048:	xor    eax,0x859bded1
  42204d:	dec    esp
  42204e:	gs retf 
  422050:	mov    dl,BYTE PTR [eax-0x2c]
  422053:	outs   dx,BYTE PTR ds:[esi]
  422054:	in     eax,0xdf
  422056:	stos   DWORD PTR es:[edi],eax
  422057:	jb     0x42201a
  422059:	cs faddp st(7),st
  42205c:	jle    0x422002
  42205e:	fld    TBYTE PTR [ebx+0x9]
  422061:	sub    eax,0x81891d9a
  422066:	dec    esp
  422067:	lock sbb al,0xc4
  42206a:	xchg   esi,eax
  42206b:	into   
  42206c:	xor    cl,BYTE PTR [esp+esi*1+0x5ce7623e]
  422073:	cmp    al,0xa9
  422075:	enter  0xdc23,0x55
  422079:	fadd   DWORD PTR [eax+0xd47f681]
  42207f:	popf   
  422080:	cli    
  422081:	xchg   esp,eax
  422082:	mov    cl,0xfa
  422084:	cmc    
  422085:	clc    
  422086:	inc    esi
  422087:	mov    edx,0xbd95c60a
  42208c:	in     eax,dx
  42208d:	ja     0x422054
  42208f:	ins    BYTE PTR es:[edi],dx
  422090:	add    DWORD PTR [esi+0x24e561f2],ecx
  422096:	std    
  422097:	mov    esi,0x5d479a73
  42209c:	gs pop esi
  42209e:	mov    dh,0x18
  4220a0:	pop    es
  4220a1:	add    esp,esi
  4220a3:	rcl    BYTE PTR [edi+0x12339fe7],cl
  4220a9:	data16 and al,0xf
  4220ac:	mov    ss,WORD PTR [ecx+0x1781c32]
  4220b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220b3:	mov    bl,0xbe
  4220b5:	mov    dl,BYTE PTR [eax+0xde43e12]
  4220bb:	push   cs
  4220bc:	out    dx,al
  4220bd:	arpl   WORD PTR [ebp+0x660cc0db],bp
  4220c3:	pop    esp
  4220c4:	mov    ch,dl
  4220c6:	and    al,0xd3
  4220c8:	cdq    
  4220c9:	and    BYTE PTR [eax+0x6a],dl
  4220cc:	in     al,dx
  4220cd:	stos   BYTE PTR es:[edi],al
  4220ce:	dec    ebp
  4220cf:	cld    
  4220d0:	cmp    edi,DWORD PTR [di+0x50c1]
  4220d5:	push   ebp
  4220d6:	ja     0x422091
  4220d8:	lea    esp,[ebp-0x4c]
  4220db:	push   0xffffffda
  4220dd:	push   cs
  4220de:	out    dx,al
  4220df:	push   ebx
  4220e0:	inc    ebx
  4220e1:	adc    esi,DWORD PTR [edx+0x31]
  4220e4:	sar    esi,1
  4220e6:	push   es
  4220e7:	pop    eax
  4220e8:	imul   ebp,DWORD PTR [ebx],0xf2db940f
  4220ee:	mov    eax,0x58c90a2d
  4220f3:	and    DWORD PTR [edx+0x496b7f2b],edx
  4220f9:	sbb    ah,ch
  4220fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220fc:	mov    edi,edx
  4220fe:	mov    eax,0x6bbc68d0
  422103:	xor    eax,0x1bfc1e7f
  422108:	cli    
  422109:	lods   ax,WORD PTR ds:[esi]
  42210b:	sub    al,dl
  42210d:	jmp    0x42212e
  42210f:	lock or al,BYTE PTR [ecx-0x30]
  422113:	sbb    DWORD PTR [edx+0x6d30a3ef],esp
  422119:	jp     0x42216b
  42211b:	fsubr  st,st(5)
  42211d:	outs   dx,BYTE PTR ds:[esi]
  42211e:	inc    eax
  42211f:	arpl   WORD PTR [edi-0x7b224cb7],dx
  422125:	rcl    DWORD PTR [edx+0x443e52c3],cl
  42212b:	or     al,0x77
  42212d:	cwde   
  42212e:	mov    ds:0x20087413,al
  422133:	add    BYTE PTR [ecx],cl
  422135:	das    
  422136:	push   ss
  422137:	retf   0x6e42
  42213a:	mov    ch,0x9b
  42213c:	rol    BYTE PTR [edi],0x5d
  42213f:	jns    0x42210f
  422141:	mov    bh,dh
  422143:	adc    eax,0x6635accb
  422148:	leave  
  422149:	shl    eax,0x48
  42214c:	jmp    0x422152
  42214e:	lods   eax,DWORD PTR ds:[esi]
  42214f:	in     eax,dx
  422150:	push   esp
  422151:	repnz xchg ebp,eax
  422153:	xchg   edx,eax
  422154:	pop    ebx
  422155:	jp     0x42214b
  422157:	cmp    ecx,DWORD PTR [eax+0x4e]
  42215a:	pusha  
  42215b:	(bad)  
  42215c:	sub    ebx,DWORD PTR [ebp+0x2e]
  42215f:	push   ebx
  422160:	and    DWORD PTR [edx+0x67d005e8],ecx
  422166:	inc    ecx
  422167:	ins    DWORD PTR es:[edi],dx
  422168:	or     al,0x88
  42216a:	stos   BYTE PTR es:[edi],al
  42216b:	ds mov cl,0x94
  42216e:	fsubp  st(0),st
  422170:	pushf  
  422171:	je     0x422156
  422173:	pop    ss
  422174:	mov    dh,0xaf
  422176:	fcmovbe st,st(6)
  422178:	nop
  422179:	xor    BYTE PTR [ecx-0x2e],0xab
  42217d:	jecxz  0x42218b
  42217f:	xchg   edi,eax
  422180:	out    0xc7,al
  422182:	ins    BYTE PTR es:[edi],dx
  422183:	inc    esp
  422184:	dec    esp
  422185:	mov    al,ds:0x2a5021ec
  42218a:	dec    esi
  42218b:	inc    ebx
  42218c:	rol    BYTE PTR [edx-0x282a73e7],0xe0
  422193:	inc    ecx
  422194:	pop    esi
  422195:	cli    
  422196:	out    0xf4,eax
  422198:	mov    ds:0x34b7e3e9,eax
  42219d:	shr    BYTE PTR [ecx+0x5e8bd9cf],0xf1
  4221a4:	dec    ebp
  4221a5:	pusha  
  4221a6:	cmp    eax,DWORD PTR [ebx-0x40bf94f0]
  4221ac:	les    ecx,FWORD PTR [ecx-0x60a1bb92]
  4221b2:	sub    ebp,0x3dd8eb85
  4221b8:	int    0x22
  4221ba:	sub    bl,ch
  4221bc:	data16 aad 0x82
  4221bf:	xchg   edx,eax
  4221c0:	outs   dx,BYTE PTR ds:[esi]
  4221c1:	push   0x3310d15a
  4221c6:	outs   dx,DWORD PTR ds:[esi]
  4221c7:	or     eax,0x5254485b
  4221cc:	xchg   edi,eax
  4221cd:	in     al,0x1a
  4221cf:	clc    
  4221d0:	sub    BYTE PTR [edi],0x9f
  4221d3:	ret    
  4221d4:	wbinvd 
  4221d6:	ins    DWORD PTR es:[edi],dx
  4221d7:	inc    DWORD PTR [esi]
  4221d9:	pop    ebp
  4221da:	adc    DWORD PTR [edx+eiz*8-0x72575870],ebp
  4221e1:	lock shr BYTE PTR [eax],1
  4221e4:	or     ch,BYTE PTR [eax+0x22945c7d]
  4221ea:	mov    ah,0x2a
  4221ec:	xlat   BYTE PTR ds:[ebx]
  4221ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221ee:	adc    BYTE PTR [eax],ah
  4221f0:	inc    esi
  4221f1:	and    al,0xb5
  4221f3:	adc    DWORD PTR [esi+0x2b23389b],ebx
  4221f9:	adc    esp,edx
  4221fb:	mov    eax,0x3230ef2
  422200:	xlat   BYTE PTR ds:[ebx]
  422201:	mov    bh,0xe8
  422203:	std    
  422204:	jne    0x422273
  422206:	dec    ebx
  422207:	xchg   ebx,eax
  422208:	sub    ebx,DWORD PTR [ecx]
  42220a:	ins    BYTE PTR es:[edi],dx
  42220b:	test   DWORD PTR [ebp-0x67],0x29567517
  422212:	sub    DWORD PTR [ecx+ebx*1],edx
  422215:	dec    esp
  422216:	arpl   WORD PTR [eax-0x33],si
  422219:	test   eax,0xcc32f2a9
  42221e:	cwde   
  42221f:	inc    ebp
  422220:	ret    0xca65
  422223:	jl     0x4222a4
  422225:	nop
  422226:	dec    edi
  422227:	mov    al,0x3b
  422229:	sub    eax,DWORD PTR [esi-0x21a531bf]
  42222f:	jnp    0x4221b6
  422231:	inc    esp
  422232:	fs mov ebp,0x905895d5
  422238:	or     DWORD PTR [eax],0x8d745c0f
  42223e:	xchg   edx,eax
  42223f:	xor    DWORD PTR [edx],edx
  422241:	outs   dx,DWORD PTR ds:[esi]
  422242:	int3   
  422243:	mov    al,0xdc
  422245:	and    al,0xea
  422247:	sbb    eax,0x35619a23
  42224c:	popf   
  42224d:	jecxz  0x4222c7
  42224f:	ss jmp 0x3761bcb3
  422255:	js     0x4221fa
  422257:	jae    0x422285
  422259:	xchg   DWORD PTR [esi+0x1495d842],ecx
  42225f:	pop    ecx
  422260:	dec    ebp
  422261:	xchg   esp,eax
  422262:	sub    DWORD PTR [esi],esi
  422264:	push   esi
  422265:	retf   0xd9f5
  422268:	fwait
  422269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42226a:	xchg   esi,eax
  42226b:	add    esp,ebx
  42226d:	rcl    ch,cl
  42226f:	ds or  eax,0xbb5bfe6d
  422275:	imul   ebp,ebp,0xffffffe7
  422278:	cmc    
  422279:	inc    esi
  42227a:	push   esi
  42227b:	sub    edx,edx
  42227d:	pop    edx
  42227e:	mov    al,0xd0
  422280:	call   0xcc997f84
  422285:	push   ebp
  422286:	icebp  
  422287:	sub    ah,cl
  422289:	enter  0x556f,0xb2
  42228d:	stc    
  42228e:	in     eax,0x4d
  422290:	fldenv [ebx-0x2]
  422293:	cmc    
  422294:	inc    edi
  422295:	dec    edi
  422296:	in     eax,dx
  422297:	mov    DWORD PTR [esi-0x512a8626],edx
  42229d:	iret   
  42229e:	jb     0x4222ee
  4222a0:	push   esi
  4222a1:	dec    esi
  4222a2:	inc    esp
  4222a3:	out    dx,al
  4222a4:	test   BYTE PTR [edx-0x2],0xb4
  4222a8:	push   ds
  4222a9:	mov    ch,0x80
  4222ab:	dec    eax
  4222ac:	pop    edi
  4222ad:	bound  ebx,QWORD PTR [edi+0x107d1052]
  4222b3:	fld    DWORD PTR [ebx]
  4222b5:	or     al,0xd7
  4222b7:	arpl   WORD PTR [ebx],cx
  4222b9:	ret    
  4222ba:	xchg   edx,eax
  4222bb:	outs   dx,BYTE PTR ds:[esi]
  4222bc:	rcr    BYTE PTR [edi+0x4977ac37],1
  4222c2:	loopne 0x422325
  4222c4:	pop    eax
  4222c5:	outs   dx,BYTE PTR ds:[esi]
  4222c6:	inc    eax
  4222c7:	cmp    eax,0x952e3bfc
  4222cc:	fcmovbe st,st(0)
  4222ce:	or     eax,0xc3b97680
  4222d3:	pop    eax
  4222d4:	je     0x422303
  4222d6:	lds    ebx,FWORD PTR ds:0xdb18ad90
  4222dc:	push   DWORD PTR [ebp-0x2149ff7f]
  4222e2:	dec    eax
  4222e3:	push   cs
  4222e4:	dec    ebx
  4222e5:	hlt    
  4222e6:	jmp    0xc5a54d04
  4222eb:	lods   ax,WORD PTR ds:[esi]
  4222ed:	nop
  4222ee:	adc    DWORD PTR [edi-0x2c],ebx
  4222f1:	jge    0x4222e4
  4222f3:	mov    al,ds:0x7f3fcacf
  4222f8:	popa   
  4222f9:	xchg   DWORD PTR [ecx+0x72],edi
  4222fc:	rcr    DWORD PTR [eax-0x3ca492ab],0x84
  422303:	mov    ds:0x8611c84,al
  422308:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422309:	call   0xb89a6c55
  42230e:	push   0xbf0f07c0
  422313:	sub    DWORD PTR [edx],0x62395f81
  422319:	out    0x12,al
  42231b:	or     ebp,ebx
  42231d:	adc    BYTE PTR [ebp+0xb8e0930],0x1b
  422324:	inc    edi
  422325:	adc    DWORD PTR [eax+0x249925e8],esi
  42232b:	sub    BYTE PTR [edi],dl
  42232d:	int    0x5b
  42232f:	call   0x2f7a:0x7fa5236b
  422336:	test   ah,cl
  422338:	test   DWORD PTR [eax-0x1b],esp
  42233b:	call   0x3d2d:0x54a0ce4c
  422342:	push   ds
  422343:	dec    ebp
  422344:	adc    bh,BYTE PTR [eax+0x18]
  422347:	push   ecx
  422348:	or     esi,esi
  42234a:	mov    eax,ds:0xa0b2eaea
  42234f:	fcomp  st(7)
  422351:	cdq    
  422352:	and    dh,BYTE PTR [esi+0x51]
  422355:	or     edi,DWORD PTR [esi+eax*2+0x42b97bc4]
  42235c:	mov    DWORD PTR [edx+eax*4+0x1a],0x81c040e9
  422364:	cmp    BYTE PTR [ebx],cl
  422366:	sbb    eax,0x779ea7e4
  42236b:	cdq    
  42236c:	cmp    BYTE PTR [ecx+ebx*8],ch
  42236f:	fist   WORD PTR [edi-0x7]
  422372:	push   0xa74f45aa
  422377:	pop    ds
  422378:	adc    ecx,DWORD PTR [ebx-0x6b0aac98]
  42237e:	jo     0x42237a
  422380:	imul   ecx,DWORD PTR [esi+0x15],0xba8cbb8f
  422387:	inc    esi
  422388:	call   0x8cc4:0x15bdc6cc
  42238f:	sbb    edx,DWORD PTR [eax-0x57]
  422392:	and    DWORD PTR [edx-0x6ace59bd],edi
  422398:	outs   dx,DWORD PTR ds:[esi]
  422399:	dec    ebp
  42239a:	mov    ds:0x9559cf49,al
  42239f:	in     al,0xe0
  4223a1:	(bad)
  4223a4:	add    dh,dl
  4223a6:	push   ds
  4223a7:	(bad)  
  4223a8:	jmp    0x1373:0xe2e1c029
  4223af:	daa    
  4223b0:	xchg   BYTE PTR [eax+0x310aad39],ch
  4223b6:	pop    ebp
  4223b7:	(bad)  
  4223b8:	in     al,dx
  4223b9:	fsub   QWORD PTR [eax-0x77]
  4223bc:	sub    eax,edi
  4223be:	mov    edi,0xd0af0cd6
  4223c3:	enter  0x64a9,0x5b
  4223c7:	push   ds
  4223c8:	xchg   ebp,eax
  4223c9:	fdivp  st(6),st
  4223cb:	mov    al,0xfc
  4223cd:	and    ebp,DWORD PTR [edx+0x376dca3b]
  4223d3:	push   0x269650af
  4223d8:	inc    ebp
  4223d9:	ret    0xc469
  4223dc:	sahf   
  4223dd:	sbb    DWORD PTR [ecx],esi
  4223df:	hlt    
  4223e0:	mov    ah,0xb8
  4223e2:	adc    eax,0x6edd114f
  4223e7:	cmovns eax,DWORD PTR ds:0x243a6189
  4223ee:	fidivr DWORD PTR [edx+0x3d]
  4223f1:	inc    edi
  4223f2:	pop    eax
  4223f3:	fistp  WORD PTR [edi]
  4223f5:	clc    
  4223f6:	test   al,0x2d
  4223f8:	(bad)  
  4223fa:	mov    ss,WORD PTR [edx+0x386b17f7]
  422400:	pop    esp
  422401:	lea    eax,[edx]
  422403:	sbb    bh,ch
  422405:	pop    ebp
  422406:	repz jmp 0x7a93:0xfb6e4a9d
  42240e:	stos   BYTE PTR es:[edi],al
  42240f:	jnp    0x422481
  422411:	in     al,0xa5
  422413:	mov    DWORD PTR [ebx+0x7331202b],esi
  422419:	adc    DWORD PTR [edi+0x18],ebp
  42241c:	sti    
  42241d:	add    al,0x31
  42241f:	mov    ebp,0xeda7865b
  422424:	inc    esp
  422425:	loope  0x422485
  422427:	pop    eax
  422428:	repz retf 0xa44b
  42242c:	stos   DWORD PTR es:[edi],eax
  42242d:	loope  0x422403
  42242f:	mov    dl,0x34
  422431:	fisttp QWORD PTR [edx+ebx*2-0x2bef9d7d]
  422438:	aam    0x73
  42243a:	xchg   edx,eax
  42243b:	jno    0x4223d0
  42243d:	sbb    esi,0xc94d1d32
  422443:	aaa    
  422444:	sar    DWORD PTR [edi],0x4c
  422447:	dec    eax
  422448:	and    dh,bh
  42244a:	xchg   al,ch
  42244c:	xchg   esi,eax
  42244d:	mov    dh,0xdf
  42244f:	in     al,0xc2
  422451:	dec    edi
  422452:	jne    0x4223e3
  422454:	aad    0x9d
  422456:	mov    bl,0x9
  422458:	stos   DWORD PTR es:[edi],eax
  422459:	cwde   
  42245a:	mov    WORD PTR [ebp+0x36811552],?
  422460:	daa    
  422461:	imul   ebx,edi,0xc887accb
  422467:	add    BYTE PTR [edi],ah
  422469:	lahf   
  42246a:	and    al,0xa2
  42246c:	sub    ah,ch
  42246e:	adc    eax,esi
  422470:	ret    
  422471:	add    al,0x70
  422473:	arpl   WORD PTR [ebp+ecx*8-0x44],bx
  422477:	adc    ecx,DWORD PTR [edi+0x63]
  42247a:	mov    ah,0xfd
  42247c:	mov    dl,bl
  42247e:	in     al,0x7b
  422480:	stos   BYTE PTR es:[edi],al
  422481:	ret    
  422482:	fs mov bh,0x1
  422485:	push   cs
  422486:	push   ebp
  422487:	mov    ds:0x6c20873d,eax
  42248c:	jno    0x422424
  42248e:	mov    ds:0x4c831272,al
  422493:	sub    DWORD PTR [edi+0x11c8fc75],edi
  422499:	mov    BYTE PTR [esi-0x5044f65d],ch
  42249f:	push   ecx
  4224a0:	dec    eax
  4224a1:	inc    esp
  4224a2:	jmp    0x26cd:0x9767064d
  4224a9:	into   
  4224aa:	jecxz  0x42251e
  4224ac:	cmp    al,0xd9
  4224ae:	mov    di,0xbfe6
  4224b2:	mov    edi,0xda77bc31
  4224b7:	ret    0x8e9f
  4224ba:	adc    eax,0x1bb0d325
  4224bf:	cmp    ah,dh
  4224c1:	into   
  4224c2:	mov    eax,0xf5904f30
  4224c7:	mov    esp,DWORD PTR [edi+0x5e]
  4224ca:	or     DWORD PTR [edi+0x5e],0xffffffd7
  4224ce:	ds push ebx
  4224d0:	mov    esi,DWORD PTR [edx]
  4224d2:	out    0xb6,al
  4224d4:	stos   DWORD PTR es:[edi],eax
  4224d5:	add    al,0xa7
  4224d7:	pop    ecx
  4224d8:	mov    edx,0x77df6784
  4224dd:	pop    ebp
  4224de:	aaa    
  4224df:	(bad)  
  4224e0:	jle    0x4224d8
  4224e2:	ja     0x422502
  4224e4:	cmp    ebx,DWORD PTR [eax+0x18e9f77c]
  4224ea:	mov    ds:0xbd1b8392,al
  4224ef:	push   0x13d0a6fa
  4224f4:	push   edi
  4224f5:	jae    0x4224bb
  4224f7:	cs int3 
  4224f9:	daa    
  4224fa:	lods   al,BYTE PTR ds:[esi]
  4224fb:	fild   WORD PTR [eax-0x5b]
  4224fe:	inc    esi
  4224ff:	and    bh,BYTE PTR [ecx+0x2b]
  422502:	adc    ebx,ecx
  422504:	cli    
  422505:	xchg   ebx,eax
  422506:	addr16 jnp 0x422531
  422509:	push   esi
  42250a:	leave  
  42250b:	test   ah,dh
  42250d:	iret   
  42250e:	cli    
  42250f:	jge    0x4224bd
  422511:	and    DWORD PTR [ecx],ecx
  422513:	cmp    al,0xd7
  422515:	push   ds
  422516:	adc    dh,BYTE PTR [esi+0x1d]
  422519:	int3   
  42251a:	pop    esi
  42251b:	mov    WORD PTR [ecx],fs
  42251d:	fstp   DWORD PTR [edi+ecx*4+0x19edd2a1]
  422524:	arpl   WORD PTR [edi+0x4f0a1468],bp
  42252a:	jl     0x422510
  42252c:	outs   dx,DWORD PTR ds:[esi]
  42252d:	cmp    ebp,DWORD PTR [edx+0x50c3dab]
  422533:	jmp    0xcf14efae
  422538:	lods   eax,DWORD PTR ds:[esi]
  422539:	call   0x24767128
  42253e:	mov    cl,0x74
  422540:	mov    bh,0x98
  422542:	xchg   edx,eax
  422543:	xor    DWORD PTR [edi-0x7332d7dd],edx
  422549:	clc    
  42254a:	test   BYTE PTR [edi+0x21e552c8],0xfe
  422551:	icebp  
  422552:	dec    BYTE PTR [ebp-0x7730f5a1]
  422558:	mov    al,ds:0x68716452
  42255d:	lahf   
  42255e:	scas   eax,DWORD PTR es:[edi]
  42255f:	rcr    DWORD PTR [esi+0x6635777d],cl
  422565:	cmove  ebx,DWORD PTR [edx]
  422568:	les    ecx,FWORD PTR [edx]
  42256a:	cmc    
  42256b:	jo     0x4225e3
  42256d:	fwait
  42256e:	xor    DWORD PTR [eax],0xffffff80
  422571:	fmul   st,st(5)
  422573:	and    bl,0xf2
  422576:	sub    eax,0x4163dc50
  42257b:	ds gs dec esp
  42257e:	popf   
  42257f:	xchg   DWORD PTR [ecx-0x19200965],eax
  422585:	fcomi  st,st(0)
  422587:	xchg   BYTE PTR [edi],ah
  422589:	push   esp
  42258a:	jbe    0x42251a
  42258c:	out    dx,al
  42258d:	fiadd  WORD PTR [esp+ecx*8]
  422590:	mov    eax,0x4b2adc3e
  422595:	inc    BYTE PTR [ecx+0x40bcc3cf]
  42259b:	shl    BYTE PTR [ebp+edx*8-0x70],cl
  42259f:	in     al,dx
  4225a0:	push   esp
  4225a1:	pop    ss
  4225a2:	call   0x8cd1b4ca
  4225a7:	add    edi,DWORD PTR [ecx-0xa1a87d4]
  4225ad:	fs stc 
  4225af:	sbb    edi,eax
  4225b1:	clc    
  4225b2:	push   esp
  4225b3:	push   ebx
  4225b4:	or     eax,0x8a8f8261
  4225b9:	(bad)  
  4225ba:	not    DWORD PTR [ecx+0x2e]
  4225bd:	cdq    
  4225be:	cwde   
  4225bf:	mov    eax,ds:0x2702bf3e
  4225c4:	push   ebx
  4225c5:	pop    ebp
  4225c6:	ret    
  4225c7:	lds    ecx,FWORD PTR [ebp-0x5649bbca]
  4225cd:	(bad)  
  4225ce:	or     DWORD PTR [edi],eax
  4225d0:	sub    edx,DWORD PTR [ecx+0x3f258727]
  4225d6:	jmp    0x83ee:0x62fe7a97
  4225dd:	daa    
  4225de:	xchg   dh,dh
  4225e0:	inc    ebx
  4225e1:	stos   DWORD PTR es:[edi],eax
  4225e2:	sbb    BYTE PTR [ecx-0x21],cl
  4225e5:	les    ebp,FWORD PTR [edx-0x37]
  4225e8:	xchg   ecx,eax
  4225e9:	repz dec edx
  4225eb:	jl     0x4225d7
  4225ed:	cld    
  4225ee:	hlt    
  4225ef:	push   esp
  4225f0:	daa    
  4225f1:	mov    al,ds:0xf9f723f1
  4225f6:	shr    BYTE PTR [eax],0x15
  4225f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225fa:	jbe    0x42262a
  4225fc:	add    al,dh
  4225fe:	sbb    esp,DWORD PTR [ecx-0x6e146cc2]
  422604:	rcr    DWORD PTR [ebp-0x6019a479],cl
  42260a:	jae    0x422650
  42260c:	sbb    ebp,DWORD PTR [eax]
  42260e:	aas    
  42260f:	stos   BYTE PTR es:[edi],al
  422610:	pop    ecx
  422611:	into   
  422612:	stc    
  422613:	sub    al,BYTE PTR [esi-0xb9eb683]
  422619:	mov    edx,ecx
  42261b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42261c:	into   
  42261d:	add    BYTE PTR [ebp+0x2f],al
  422620:	mov    WORD PTR [esi],?
  422622:	mov    ebx,esp
  422624:	test   dl,al
  422626:	test   DWORD PTR [edx-0x75eb189d],esp
  42262c:	repnz out dx,al
  42262e:	(bad)  
  422630:	xchg   edi,eax
  422631:	dec    edx
  422632:	jmp    0xf4c53c1
  422637:	mov    ebp,0x6bc1e9c1
  42263c:	ja     0x42268f
  42263e:	cld    
  42263f:	xchg   ebp,eax
  422640:	ss and dh,ch
  422643:	ror    BYTE PTR [edx-0x977c2eb],cl
  422649:	jle    0x422684
  42264b:	mov    dh,0x65
  42264d:	xchg   ebp,eax
  42264e:	inc    ebx
  42264f:	(bad)  
  422650:	in     al,0x43
  422652:	mov    ds:0x2c8ad9d5,eax
  422657:	iret   
  422658:	pop    esi
  422659:	inc    eax
  42265a:	imul   esp,DWORD PTR [edx],0xc14cd50e
  422660:	adc    dh,BYTE PTR [edi+0x8]
  422663:	mov    bl,0x7d
  422665:	inc    ebp
  422666:	and    eax,0x6bf75ff0
  42266b:	add    al,BYTE PTR [ecx]
  42266d:	jae    0x42262e
  42266f:	dec    edi
  422670:	shl    BYTE PTR [edi-0x32],1
  422673:	xchg   edx,eax
  422674:	cmp    DWORD PTR [ebp+0x1fbab3e4],0xffffff99
  42267b:	push   0xa8016f3d
  422680:	cmp    bl,ah
  422682:	cs hlt 
  422684:	call   0x4362:0x1a981b1
  42268b:	lock adc DWORD PTR [ebp-0x53],ebp
  42268f:	mov    bl,0xb9
  422691:	push   ss
  422692:	lods   al,BYTE PTR ds:[esi]
  422693:	icebp  
  422694:	es enter 0x251e,0xeb
  422699:	cmp    al,0x9e
  42269b:	retf   0xaa41
  42269e:	int3   
  42269f:	push   es
  4226a0:	loopne 0x422635
  4226a2:	add    eax,0x5793e39a
  4226a7:	clc    
  4226a8:	and    DWORD PTR [ebp-0x7a],0xffffff86
  4226ac:	mov    ebp,0x8ab0c436
  4226b1:	jb     0x422677
  4226b3:	shl    BYTE PTR [ebx-0x342c4b44],0x2f
  4226ba:	pcmpeqw mm6,QWORD PTR [ecx]
  4226bd:	xor    DWORD PTR [esi+0x59],edx
  4226c0:	xchg   ecx,eax
  4226c1:	cmc    
  4226c2:	and    dh,cl
  4226c4:	dec    edi
  4226c5:	ret    
  4226c6:	test   al,0x96
  4226c8:	adc    ch,dh
  4226ca:	sar    ah,cl
  4226cc:	xchg   ebp,eax
  4226cd:	dec    edi
  4226ce:	mov    cl,0x15
  4226d0:	repnz pop ebp
  4226d2:	or     DWORD PTR [edx+0x65fc3395],ebp
  4226d8:	xor    DWORD PTR [esi-0x41bd82db],ecx
  4226de:	pop    edx
  4226df:	mov    ah,0x5a
  4226e1:	dec    ebx
  4226e2:	call   0xcd4437e9
  4226e7:	fild   WORD PTR [esi-0x6e]
  4226ea:	inc    edi
  4226eb:	sub    al,0xfd
  4226ed:	cmp    ebp,ecx
  4226ef:	outs   dx,DWORD PTR ds:[esi]
  4226f0:	je     0x4226b8
  4226f2:	mov    bl,0xfd
  4226f4:	inc    esp
  4226f5:	pop    ds
  4226f6:	(bad)  
  4226f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226f9:	stos   DWORD PTR es:[edi],eax
  4226fa:	scas   eax,DWORD PTR es:[edi]
  4226fb:	jbe    0x4226d1
  4226fd:	mov    eax,DWORD PTR [eax-0x2a]
  422700:	es pop esi
  422702:	fmul   st,st(3)
  422704:	cmp    esp,DWORD PTR [edx+0x67]
  422707:	aaa    
  422708:	mov    edx,0xa068d1f7
  42270d:	cwde   
  42270e:	in     al,dx
  42270f:	sub    ch,0x59
  422712:	push   ds
  422713:	mov    ds:0x9f3ff549,al
  422718:	pop    ds
  422719:	out    dx,al
  42271a:	mov    al,0x29
  42271c:	jbe    0x422755
  42271e:	outs   dx,DWORD PTR ds:[esi]
  42271f:	jns    0x42273f
  422721:	cli    
  422722:	sub    DWORD PTR [ebx],esp
  422724:	cs fcmovnbe st,st(4)
  422727:	pop    ss
  422728:	pop    esp
  422729:	mov    eax,ds:0x9dfed67b
  42272e:	xor    eax,0x8cfe9e46
  422733:	mov    ds:0x82ac9ea1,al
  422738:	(bad)  
  42273a:	fst    DWORD PTR [esi]
  42273c:	sbb    DWORD PTR ds:0x59ade41c,esi
  422742:	les    edx,FWORD PTR [ebp-0x41]
  422745:	dec    esi
  422746:	add    DWORD PTR [eax],ebp
  422748:	adc    DWORD PTR [edi-0x66050ea3],ebx
  42274e:	int3   
  42274f:	sbb    eax,edi
  422751:	lea    ebx,[edx+0x3c]
  422754:	rcr    ah,1
  422756:	adc    BYTE PTR [eax-0x1096556d],al
  42275c:	fnstenv [edi]
  42275e:	rcr    BYTE PTR [eax-0x140f1c9d],0x89
  422765:	mov    bx,0x5d99
  422769:	dec    esp
  42276a:	pop    es
  42276b:	(bad)  [eax-0x58ac6034]
  422771:	call   0x560989e6
  422776:	ja     0x422743
  422778:	ror    DWORD PTR [edx+esi*8-0x5c],cl
  42277c:	in     eax,dx
  42277d:	inc    BYTE PTR [ecx-0x2c5d3c54]
  422783:	add    eax,0x4e7c0f23
  422788:	dec    edi
  422789:	aam    0x4c
  42278b:	out    0x55,eax
  42278d:	pop    ecx
  42278e:	pop    es
  42278f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422790:	imul   ecx,DWORD PTR [edx-0x6fa3a916],0xffffffc0
  422797:	aas    
  422798:	outs   dx,BYTE PTR es:[esi]
  42279a:	into   
  42279b:	mov    dl,0xb7
  42279d:	test   al,0x1e
  42279f:	retf   0xba3b
  4227a2:	call   0x545d:0xa4d5a592
  4227a9:	push   0xffffff8f
  4227ab:	das    
  4227ac:	lock mov bh,0xea
  4227af:	adc    BYTE PTR [edx-0x61675bda],dl
  4227b5:	dec    esi
  4227b6:	inc    ebx
  4227b7:	jl     0x4227b8
  4227b9:	adc    eax,0x49cf4e3f
  4227be:	push   edi
  4227bf:	jmp    0x422814
  4227c1:	mov    eax,0x54724e29
  4227c6:	sbb    esp,DWORD PTR [ebp-0x5b166cb4]
  4227cc:	nop
  4227cd:	ins    BYTE PTR es:[edi],dx
  4227ce:	fdiv   DWORD PTR [edi]
  4227d0:	lahf   
  4227d1:	repz cwde 
  4227d3:	push   0x77
  4227d5:	mov    ds:0x9c7dfde5,al
  4227da:	xor    DWORD PTR [ebx+0x7b4d13dd],ebx
  4227e0:	jg     0x4227cb
  4227e2:	mov    edx,0x751fd831
  4227e7:	loope  0x4227d5
  4227e9:	xor    eax,0xd2cc7c51
  4227ee:	fucomi st,st(4)
  4227f0:	lds    eax,FWORD PTR [edx-0x5061ba15]
  4227f6:	xchg   ebp,eax
  4227f7:	mov    eax,ds:0x418fc722
  4227fc:	xchg   ebp,eax
  4227fd:	lods   eax,DWORD PTR ds:[esi]
  4227fe:	leave  
  4227ff:	in     eax,dx
  422800:	mov    ds:0x611c7604,al
  422805:	scas   al,BYTE PTR es:[edi]
  422806:	push   0xbf75ab59
  42280b:	outs   dx,BYTE PTR ds:[esi]
  42280c:	call   0xbc61ed4a
  422811:	cmp    BYTE PTR [ebp-0x693d3fb5],0x3a
  422818:	test   eax,0x41ed4800
  42281d:	xor    edx,DWORD PTR [ecx+0x7080f452]
  422823:	and    al,0x5
  422825:	sub    eax,DWORD PTR [ebp-0x2d]
  422828:	nop
  422829:	mov    dh,0x4b
  42282b:	leave  
  42282c:	pop    edi
  42282d:	dec    ecx
  42282e:	sahf   
  42282f:	(bad)  
  422830:	out    dx,al
  422831:	sbb    DWORD PTR [esi],ebp
  422833:	dec    eax
  422834:	(bad)  
  422835:	neg    BYTE PTR [edi+0x20]
  422838:	jecxz  0x42284c
  42283a:	test   edi,esp
  42283c:	mov    ah,0x1d
  42283e:	add    al,0xc0
  422840:	ins    DWORD PTR es:[edi],dx
  422841:	mov    ah,0x29
  422843:	(bad)  
  422844:	fadd   st,st(4)
  422846:	mov    WORD PTR [eax-0x5a],?
  422849:	xor    eax,DWORD PTR [eax]
  42284b:	sub    BYTE PTR [eax+0x66d5baaa],ch
  422851:	push   edx
  422852:	es jnp 0x422871
  422855:	not    BYTE PTR [esi]
  422857:	jmp    0x375e5b22
  42285c:	pushf  
  42285d:	repnz pusha 
  42285f:	in     al,0xec
  422861:	neg    bl
  422863:	fwait
  422864:	mov    ch,0x6a
  422866:	retf   
  422867:	loop   0x4227ea
  422869:	neg    DWORD PTR ds:0xd6e577c2
  42286f:	pusha  
  422870:	lea    edx,[esi-0x3c]
  422873:	jp     0x4227fe
  422875:	loopne 0x4228a3
  422877:	mov    eax,ds:0x9be44ad
  42287c:	outs   dx,DWORD PTR ds:[esi]
  42287d:	pop    edi
  42287e:	jbe    0x422844
  422880:	sub    al,0x5f
  422882:	xchg   ebp,eax
  422883:	dec    esp
  422884:	add    al,0x99
  422886:	outs   dx,DWORD PTR ds:[esi]
  422887:	push   ecx
  422888:	xchg   edi,eax
  422889:	and    ecx,DWORD PTR [ecx]
  42288b:	cmp    BYTE PTR [edx],0xc2
  42288e:	out    dx,al
  42288f:	popf   
  422890:	jp     0x422900
  422892:	sbb    ecx,ecx
  422894:	lds    eax,FWORD PTR [ecx+0x3b]
  422897:	fisub  DWORD PTR [ebx+0x3c2dc3fa]
  42289d:	loope  0x4228f1
  42289f:	mov    ebp,0xdbe09b2c
  4228a4:	ret    0x6c63
  4228a7:	mov    DWORD PTR [ecx+0x66],ebp
  4228aa:	add    BYTE PTR [ecx-0x46],dh
  4228ad:	icebp  
  4228ae:	mov    ecx,0x90fd014d
  4228b3:	jno    0x42287d
  4228b5:	push   eax
  4228b6:	pop    ss
  4228b7:	jb     0x42291b
  4228b9:	icebp  
  4228ba:	push   ecx
  4228bb:	adc    DWORD PTR [edx-0x66],eax
  4228be:	xor    eax,DWORD PTR [edx]
  4228c0:	pop    ds
  4228c1:	mov    DWORD PTR [ecx],edx
  4228c3:	pop    ecx
  4228c4:	in     al,dx
  4228c5:	sar    BYTE PTR [esp+ebp*4+0x2340b353],0xfa
  4228cd:	(bad)  
  4228ce:	test   al,ch
  4228d0:	fwait
  4228d1:	add    eax,0x7c71c59f
  4228d6:	cmc    
  4228d7:	out    dx,al
  4228d8:	push   ss
  4228d9:	or     eax,ecx
  4228db:	or     al,0xd
  4228dd:	loop   0x4228d3
  4228df:	adc    DWORD PTR [edi+ebx*8],ebx
  4228e2:	mov    fs,WORD PTR [ebx-0xc]
  4228e5:	pop    eax
  4228e6:	inc    ebp
  4228e7:	fisttp WORD PTR [si+0x19e8]
  4228ec:	mov    ds:0x9194f81f,eax
  4228f1:	clc    
  4228f2:	pcmpeqw mm2,mm2
  4228f5:	inc    edi
  4228f6:	dec    edi
  4228f7:	fadd   DWORD PTR [eax+0x5c6fd030]
  4228fd:	popa   
  4228fe:	mov    al,bh
  422900:	push   edx
  422901:	pop    esp
  422902:	nop
  422903:	je     0x42295c
  422905:	ins    BYTE PTR es:[edi],dx
  422906:	or     al,0x24
  422908:	hlt    
  422909:	mov    ds:0xccc9f7d8,eax
  42290e:	aaa    
  42290f:	mov    dh,0xca
  422911:	jg     0x42297e
  422913:	sbb    ebp,DWORD PTR [edi-0x584afa7]
  422919:	or     esi,DWORD PTR [edi]
  42291b:	aad    0xc
  42291d:	xchg   ebp,eax
  42291e:	pop    eax
  42291f:	icebp  
  422920:	push   ds
  422921:	fucomi st,st(2)
  422923:	add    eax,0x85dcbf47
  422928:	and    ch,BYTE PTR [edi]
  42292a:	pusha  
  42292b:	or     bh,ah
  42292d:	xchg   edi,eax
  42292e:	mov    esi,0x5c6f8368
  422933:	xchg   edi,eax
  422934:	pop    ebx
  422935:	jno    0x4228cd
  422937:	or     bl,BYTE PTR [ebx+0x6996cfae]
  42293d:	stos   BYTE PTR es:[edi],al
  42293e:	inc    ecx
  42293f:	inc    ecx
  422940:	or     eax,0x78916405
  422945:	mov    bh,0xaf
  422947:	adc    BYTE PTR [edx+eiz*4],0x1c
  42294b:	dec    esp
  42294c:	mov    ds:0x1eb97dc6,al
  422951:	fisubr DWORD PTR [eiz*8-0x105f7e71]
  422958:	rcl    DWORD PTR [edi+ecx*1+0x4b],0xae
  42295d:	jmp    DWORD PTR [edx-0x2213c44c]
  422963:	jno    0x422923
  422965:	or     DWORD PTR [ecx+0x59],0x4
  422969:	jle    0x4229e8
  42296b:	dec    esp
  42296c:	xchg   ebp,eax
  42296d:	mov    ebx,DWORD PTR [esi-0x1cf6b769]
  422973:	xor    BYTE PTR [ecx],0xc8
  422976:	das    
  422977:	mov    esp,0xe893e49a
  42297c:	inc    ecx
  42297d:	mov    DWORD PTR [ecx+0x15],edi
  422980:	cmp    al,0x34
  422982:	inc    ebp
  422983:	mov    cl,0x43
  422985:	fdiv   QWORD PTR [ecx-0x6e]
  422988:	in     al,dx
  422989:	push   edx
  42298a:	push   edx
  42298b:	inc    esp
  42298c:	rol    ebx,1
  42298e:	(bad)  
  422990:	je     0x4229b4
  422992:	jnp    0x4229da
  422994:	adc    al,0x82
  422996:	nop
  422997:	lods   al,BYTE PTR ds:[esi]
  422998:	adc    DWORD PTR [edx+0x6b],esp
  42299b:	scas   eax,DWORD PTR es:[edi]
  42299c:	pop    esi
  42299d:	sti    
  42299e:	cld    
  42299f:	adc    ah,BYTE PTR [ebp+0x48]
  4229a2:	(bad)  
  4229a3:	jns    0x42293e
  4229a5:	xor    bh,BYTE PTR [esi]
  4229a7:	mov    edx,0x92c57065
  4229ac:	and    DWORD PTR [ecx],edx
  4229ae:	arpl   si,si
  4229b0:	jb     0x422a08
  4229b2:	je     0x422995
  4229b4:	mov    edi,0xd5b5373d
  4229b9:	mov    eax,ds:0xa55f7a41
  4229be:	fistp  WORD PTR [ebp-0x5ce5d76e]
  4229c4:	cmp    eax,0x25cf858b
  4229c9:	or     eax,0x18580eb9
  4229ce:	je     0x422969
  4229d0:	arpl   WORD PTR [ecx+0x0],cx
  4229d3:	jp     0x422999
  4229d5:	mov    BYTE PTR [edx-0xa0d1b10],ah
  4229db:	leave  
  4229dc:	loopne 0x422a12
  4229de:	mov    si,0xfafa
  4229e2:	test   dl,0x4b
  4229e5:	and    BYTE PTR [eax],dh
  4229e7:	out    0xf6,eax
  4229e9:	out    dx,al
  4229ea:	in     al,dx
  4229eb:	xchg   ebx,eax
  4229ec:	das    
  4229ed:	dec    ebp
  4229ee:	mov    ds,WORD PTR [edx+edi*1-0x1fc59923]
  4229f5:	xor    dh,BYTE PTR [edi+0x2a234d06]
  4229fb:	leave  
  4229fc:	rcr    eax,1
  4229fe:	fldl2t 
  422a00:	and    DWORD PTR [ebx+0x62],ecx
  422a03:	jno    0x4229c8
  422a05:	(bad)  
  422a06:	xchg   esp,eax
  422a07:	mov    dl,BYTE PTR [eax]
  422a09:	jns    0x422a34
  422a0b:	nop
  422a0c:	add    al,0x2d
  422a0e:	push   ss
  422a0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a10:	jno    0x422a60
  422a12:	loopne 0x4229ea
  422a14:	sbb    BYTE PTR [edx],ch
  422a16:	loop   0x422a2f
  422a18:	je     0x422a20
  422a1a:	cmp    esi,DWORD PTR [edx]
  422a1c:	popa   
  422a1d:	mov    al,ds:0x5d53f7d8
  422a22:	ret    0x20b7
  422a25:	in     eax,dx
  422a26:	cvtdq2ps xmm5,XMMWORD PTR [ebp-0x17d234c5]
  422a2d:	and    dl,BYTE PTR [edi]
  422a2f:	mov    eax,ds:0x26c4e013
  422a34:	gs mov fs,esp
  422a37:	nop
  422a38:	sub    ch,BYTE PTR [esi+0x7d154e20]
  422a3e:	outs   dx,DWORD PTR ds:[esi]
  422a3f:	popa   
  422a40:	push   cs
  422a41:	div    DWORD PTR [edx]
  422a43:	push   ebp
  422a44:	sub    DWORD PTR [edi],esp
  422a46:	outs   dx,BYTE PTR ds:[esi]
  422a47:	ret    
  422a48:	mov    ch,0x87
  422a4a:	fistp  DWORD PTR [edi]
  422a4c:	lock std 
  422a4e:	shl    esi,0x7d
  422a51:	shl    DWORD PTR [esi+0x8],1
  422a54:	popf   
  422a55:	dec    edx
  422a56:	ss arpl si,dx
  422a59:	outs   dx,DWORD PTR ds:[esi]
  422a5a:	adc    esp,DWORD PTR [edx-0x583963d7]
  422a60:	sbb    ecx,DWORD PTR [ecx+0x79]
  422a63:	pop    ebx
  422a64:	mov    al,ds:0xb7b3c339
  422a69:	pop    edx
  422a6a:	gs fs xchg edx,eax
  422a6d:	mov    dh,0xc8
  422a6f:	push   esi
  422a70:	ret    0xf150
  422a73:	sbb    esp,0x2b
  422a76:	pop    ss
  422a77:	mov    ds:0xbaefb464,eax
  422a7c:	loop   0x422a9d
  422a7e:	cmp    eax,0xffffff9c
  422a81:	xchg   esi,eax
  422a82:	ins    BYTE PTR es:[edi],dx
  422a83:	loop   0x422abd
  422a85:	pushf  
  422a86:	push   esi
  422a88:	(bad)  
  422a89:	std    
  422a8a:	js     0x422a53
  422a8c:	je     0x422a1c
  422a8e:	mov    esp,0x49e1c293
  422a93:	pop    edx
  422a94:	pop    es
  422a95:	add    BYTE PTR [ebp-0x67],0x16
  422a99:	retf   0xc638
  422a9c:	stc    
  422a9d:	out    dx,eax
  422a9e:	push   0x19
  422aa0:	mov    esi,0x60d0ad57
  422aa5:	dec    edx
  422aa6:	sbb    al,0x86
  422aa8:	mov    dl,0xb3
  422aaa:	repz jnp 0x422a31
  422aad:	in     eax,dx
  422aae:	sub    eax,0xab1f8153
  422ab3:	or     al,0xe2
  422ab5:	adc    al,0x5b
  422ab7:	pop    es
  422ab8:	jne    0x422aa2
  422aba:	or     BYTE PTR [ebx+0x6ce25ecb],dl
  422ac0:	ds lods al,BYTE PTR cs:[esi]
  422ac3:	xchg   BYTE PTR [eax+0x12],ch
  422ac6:	out    dx,eax
  422ac7:	imul   ebx,edi,0xb0d191c6
  422acd:	add    DWORD PTR [ebp+0x554fb9a7],esp
  422ad3:	or     ah,BYTE PTR [ecx+esi*2-0x34]
  422ad7:	pop    es
  422ad8:	call   0x9bb:0x37c94cd3
  422adf:	push   ds
  422ae0:	pop    eax
  422ae1:	sub    al,0xa6
  422ae3:	mov    ch,0xab
  422ae5:	cmp    eax,0x1722a73f
  422aea:	aam    0x82
  422aec:	push   es
  422aed:	push   0xffffffcd
  422aef:	test   eax,0x32de984f
  422af4:	cs stc 
  422af6:	cmc    
  422af7:	fcmovb st,st(7)
  422af9:	pop    es
  422afa:	fiadd  DWORD PTR [edx]
  422afc:	and    DWORD PTR [ebp-0x2117f6cd],0x74ef369
  422b06:	and    ah,0x7d
  422b09:	js     0x422b19
  422b0b:	retf   0x4e4b
  422b0e:	(bad)  
  422b0f:	sub    eax,0x31969c5f
  422b14:	icebp  
  422b15:	mov    dh,0xd6
  422b17:	fs or  esi,ecx
  422b1a:	je     0x422b1d
  422b1c:	out    dx,eax
  422b1d:	xor    DWORD PTR [esi-0x2a],edi
  422b20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b21:	mov    edi,DWORD PTR [edx]
  422b23:	shr    DWORD PTR [eax+0x7e4d4a86],cl
  422b29:	je     0x422b64
  422b2b:	xor    edx,ecx
  422b2d:	jmp    0x422abd
  422b2f:	out    0xc4,eax
  422b31:	fucomp st(6)
  422b33:	aas    
  422b34:	aaa    
  422b35:	mov    esi,0x3fddc180
  422b3a:	dec    edi
  422b3b:	jns    0x422b56
  422b3d:	jns    0x422af7
  422b3f:	jmp    0x422b17
  422b41:	cmp    edx,esi
  422b43:	outs   dx,BYTE PTR ds:[esi]
  422b44:	pxor   mm2,QWORD PTR [ecx-0x787a1552]
  422b4b:	repz cmc 
  422b4d:	int    0x38
  422b4f:	cmp    BYTE PTR [esi],dl
  422b51:	lods   al,BYTE PTR ds:[esi]
  422b52:	add    al,ah
  422b54:	mov    DWORD PTR [edi-0x50],ebx
  422b57:	push   0xffffffba
  422b59:	ds push cs
  422b5b:	adc    ecx,ecx
  422b5d:	push   ebx
  422b5e:	cs pop ecx
  422b60:	cs jp  0x422ba8
  422b63:	imul   ebp,ecx,0x62
  422b66:	mov    cl,0x9e
  422b68:	cmc    
  422b69:	scas   al,BYTE PTR es:[edi]
  422b6a:	stos   BYTE PTR es:[edi],al
  422b6b:	cmp    ah,BYTE PTR [edx]
  422b6d:	jmp    0xe0cfbf51
  422b72:	(bad)  
  422b73:	push   ebp
  422b74:	cmc    
  422b75:	les    ebp,FWORD PTR [eax]
  422b77:	sbb    eax,0x389a84eb
  422b7c:	dec    ecx
  422b7d:	(bad)  
  422b7e:	aad    0x64
  422b80:	mov    al,0x3
  422b82:	lahf   
  422b83:	in     al,0x36
  422b85:	cmp    ebx,DWORD PTR [ebx-0x7e]
  422b88:	jecxz  0x422b91
  422b8a:	jne    0x422b38
  422b8c:	int    0x5c
  422b8e:	in     al,dx
  422b8f:	sbb    dl,BYTE PTR [ebx+0x73]
  422b92:	jp     0x422b1f
  422b94:	push   esi
  422b95:	retf   0x112e
  422b98:	hlt    
  422b99:	xchg   ebp,eax
  422b9a:	jecxz  0x422baa
  422b9c:	mov    ecx,0xbbf70bc3
  422ba1:	mov    bh,BYTE PTR [eax+0x41]
  422ba4:	(bad)  
  422ba5:	xor    BYTE PTR [edi+eax*4-0x24d761ec],ch
  422bac:	sbb    bh,ah
  422bae:	jo     0x422bee
  422bb0:	mov    ch,0x70
  422bb2:	mov    eax,ds:0xcee57d2f
  422bb7:	hlt    
  422bb8:	stc    
  422bb9:	xor    dl,BYTE PTR [edx+0x31fcdfa0]
  422bbf:	stc    
  422bc0:	fs push ds
  422bc2:	jmp    0x89f6:0xc1fcd948
  422bc9:	lahf   
  422bca:	and    eax,0xa6205b59
  422bcf:	jbe    0x422b86
  422bd1:	adc    eax,0x955c48f9
  422bd6:	mov    ecx,0x441405cf
  422bdb:	push   cs
  422bdc:	pop    ecx
  422bdd:	pop    ecx
  422bde:	loope  0x422bca
  422be0:	hlt    
  422be1:	mov    esp,0xf726e141
  422be6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422be7:	pop    eax
  422be8:	inc    ebp
  422be9:	dec    ebp
  422bea:	cli    
  422beb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bec:	sti    
  422bed:	fimul  DWORD PTR [esi]
  422bef:	loope  0x422b84
  422bf1:	push   es
  422bf2:	lods   eax,DWORD PTR ds:[esi]
  422bf3:	jl     0x422bdc
  422bf5:	mov    esi,0x406c250b
  422bfa:	inc    ebp
  422bfb:	adc    eax,0x78ee41f7
  422c00:	sub    BYTE PTR [esi+0x14],bl
  422c03:	push   ebp
  422c04:	imul   esi,DWORD PTR [edx-0x2ae66b1d],0x54
  422c0b:	push   eax
  422c0c:	fmul   st(5),st
  422c0e:	imul   DWORD PTR ds:0x2d104222
  422c14:	inc    edx
  422c15:	jp     0x422c6b
  422c17:	sets   BYTE PTR [eax]
  422c1a:	dec    ebx
  422c1b:	mov    ah,0x24
  422c1d:	fcomp  DWORD PTR [edi]
  422c1f:	ror    BYTE PTR [eax],1
  422c21:	mov    edx,fs
  422c23:	ret    
  422c24:	push   ds
  422c25:	sbb    eax,0xe45e8ac
  422c2a:	shr    BYTE PTR [ebp-0x43859a40],1
  422c30:	push   cs
  422c31:	int    0xe5
  422c33:	pop    ecx
  422c34:	jmp    0x4e58745a
  422c39:	or     ebx,esp
  422c3b:	aas    
  422c3c:	dec    ecx
  422c3d:	fwait
  422c3e:	in     eax,0xd7
  422c40:	cmp    al,BYTE PTR [ecx-0x71]
  422c43:	outs   dx,DWORD PTR ds:[esi]
  422c44:	iret   
  422c45:	sahf   
  422c46:	and    DWORD PTR [ecx],edx
  422c48:	ds push eax
  422c4a:	push   esi
  422c4b:	mov    BYTE PTR [esi-0x5eca4f44],ah
  422c51:	popf   
  422c52:	push   esp
  422c53:	mov    bh,0x3c
  422c55:	imul   ebx,esi,0xbc10bba9
  422c5b:	sbb    al,BYTE PTR [ebp+0x7b98720d]
  422c61:	xor    dh,BYTE PTR [edi-0x6a1e86da]
  422c67:	out    dx,eax
  422c68:	and    eax,0x531180ce
  422c6d:	add    eax,0x81986e1f
  422c72:	and    DWORD PTR [eax+0x57],0x16
  422c76:	hlt    
  422c77:	pop    ss
  422c78:	cmp    eax,0x548b7b9
  422c7d:	push   0xffffffed
  422c7f:	repnz or al,0x4
  422c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c83:	fidivr DWORD PTR [edi+0x61]
  422c86:	mov    ds:0x6fba805b,al
  422c8b:	jg     0x422c1a
  422c8d:	sbb    BYTE PTR [edx+ecx*1],cl
  422c90:	(bad)
  422c93:	aam    0xf3
  422c95:	or     BYTE PTR ds:0xa5a95ee9,0x63
  422c9c:	shr    BYTE PTR [ebp+0x1],cl
  422c9f:	mov    dh,0x5
  422ca1:	loop   0x422c38
  422ca3:	push   0x13b19d0f
  422ca8:	(bad)  
  422ca9:	mov    esp,0x8a18d85b
  422cae:	dec    ecx
  422caf:	ds out dx,eax
  422cb1:	pop    ebx
  422cb2:	loopne 0x422d15
  422cb4:	xor    DWORD PTR [edi-0x67],ebp
  422cb7:	push   ecx
  422cb8:	jp     0x422cfc
  422cba:	popf   
  422cbb:	test   al,0x4e
  422cbd:	lods   al,BYTE PTR ds:[esi]
  422cbe:	pop    es
  422cbf:	jmp    0xf0873425
  422cc4:	mul    DWORD PTR [esi+0x76]
  422cc7:	enter  0xe23a,0x7e
  422ccb:	cmp    ch,ch
  422ccd:	bnd jl 0x422cc7
  422cd0:	clc    
  422cd1:	or     BYTE PTR [edx],dh
  422cd3:	and    al,0x47
  422cd5:	mov    WORD PTR [ebp-0x12e55bed],cs
  422cdb:	mov    al,ds:0x7a97d69d
  422ce0:	fdivrp st(5),st
  422ce2:	cs int3 
  422ce4:	pop    ds
  422ce5:	mov    eax,ds:0xec3271a9
  422cea:	fnstenv [ebx-0x6b]
  422ced:	shl    BYTE PTR [esi+0x29f8af35],cl
  422cf3:	inc    edi
  422cf4:	and    al,0x0
  422cf6:	mov    bh,0xcf
  422cf8:	mov    esp,0x10da20c
  422cfd:	pop    esi
  422cfe:	push   ebp
  422cff:	xchg   ecx,eax
  422d00:	test   eax,0x1b462a8b
  422d05:	inc    eax
  422d06:	pop    ds
  422d07:	sub    BYTE PTR [esi+eiz*8+0x30],bh
  422d0b:	or     dl,BYTE PTR [ebp-0x2d]
  422d0e:	enter  0xa3a4,0xf1
  422d12:	mov    dl,0x60
  422d14:	test   DWORD PTR [ebp-0x9],eax
  422d17:	imul   eax,DWORD PTR [edi-0x75],0xcada034
  422d1e:	add    bl,BYTE PTR [edi+0x4]
  422d21:	mov    edi,0x3c977aab
  422d26:	add    BYTE PTR [ecx-0x6a5c5e],bh
  422d2c:	pop    ss
  422d2d:	pop    esi
  422d2e:	(bad)  
  422d2f:	fcom   DWORD PTR [edx+0x48ca6079]
  422d35:	push   esp
  422d36:	int3   
  422d37:	dec    ecx
  422d38:	(bad)  
  422d39:	test   al,0x2
  422d3b:	imul   eax,DWORD PTR [edi+0x39],0x3a
  422d3f:	jnp    0x422d45
  422d41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d42:	cwde   
  422d43:	cmp    DWORD PTR [ebx-0xb],ebx
  422d46:	sub    eax,0xaf05cba0
  422d4b:	mov    esp,0x13a31b04
  422d50:	xlat   BYTE PTR ds:[ebx]
  422d51:	push   0x80d82ec
  422d56:	int    0x4f
  422d58:	jecxz  0x422da8
  422d5a:	ror    bh,cl
  422d5c:	repnz sub al,0x64
  422d5f:	pop    esp
  422d60:	jmp    esp
  422d62:	(bad)  
  422d63:	push   ebx
  422d64:	nop
  422d65:	fist   WORD PTR [edi+ecx*8+0x7c]
  422d69:	outs   dx,BYTE PTR ds:[esi]
  422d6a:	aas    
  422d6b:	dec    ebx
  422d6c:	jcxz   0x422d0f
  422d6f:	mov    dl,0x24
  422d71:	add    al,BYTE PTR [edx+0x1f]
  422d74:	int3   
  422d75:	or     al,0x53
  422d77:	(bad)  
  422d78:	jmp    0xe3c53ad
  422d7d:	pop    esp
  422d7e:	push   0x4e
  422d80:	rcl    dh,1
  422d82:	and    al,0x47
  422d84:	mov    edi,0xbb7d9e63
  422d89:	xor    al,0x22
  422d8b:	dec    edx
  422d8c:	pop    edi
  422d8d:	les    esi,FWORD PTR [ecx+0x16]
  422d90:	jl     0x422d6d
  422d92:	mov    dl,0xcd
  422d94:	push   esi
  422d95:	test   eax,0x9600f018
  422d9a:	xor    cl,BYTE PTR [eax]
  422d9c:	shl    ebx,1
  422d9e:	inc    edi
  422d9f:	cmp    eax,0xd21f5c57
  422da4:	mov    cl,0xac
  422da6:	in     eax,dx
  422da7:	xchg   ebx,eax
  422da8:	adc    al,0x7f
  422daa:	sub    BYTE PTR ds:[edx+edi*8+0x31],ch
  422daf:	mov    eax,cs
  422db1:	mov    dh,BYTE PTR [edx+0x4c]
  422db4:	xor    eax,DWORD PTR [ecx-0x3d]
  422db7:	inc    esp
  422db8:	push   ecx
  422db9:	outs   dx,BYTE PTR ds:[esi]
  422dba:	jge    0x422e25
  422dbc:	push   ebx
  422dbd:	test   ebp,ebp
  422dbf:	xor    al,0xdd
  422dc1:	push   esi
  422dc2:	adc    eax,DWORD PTR cs:[esi-0x12]
  422dc6:	je     0x422e39
  422dc8:	push   0xffffff9e
  422dca:	test   ebp,0x59837394
  422dd0:	jns    0x422e3f
  422dd2:	jns    0x422e02
  422dd4:	nop
  422dd5:	rol    DWORD PTR [ecx+eax*8],1
  422dd8:	lahf   
  422dd9:	test   eax,0xd0b8094c
  422dde:	sub    ah,BYTE PTR [edi]
  422de0:	(bad)  
  422de1:	xor    al,0x7d
  422de3:	jge    0x422d92
  422de5:	pop    es
  422de6:	cdq    
  422de7:	cmp    esi,DWORD PTR [edx]
  422de9:	sbb    bh,BYTE PTR [ecx-0x6bf69e5e]
  422def:	mov    dl,0x6c
  422df1:	mov    edi,0x628f908b
  422df6:	mov    esp,0xa7571b86
  422dfb:	inc    ebp
  422dfc:	push   ebx
  422dfd:	in     al,dx
  422dfe:	mov    eax,0xd96f254
  422e03:	pusha  
  422e04:	punpcklwd mm7,mm7
  422e07:	mov    DWORD PTR [esi-0x2c],ebx
  422e0a:	das    
  422e0b:	(bad)  
  422e0c:	sbb    eax,0xae5869d1
  422e11:	fisubr WORD PTR [esi-0x3e5831aa]
  422e17:	jmp    0x422e10
  422e19:	call   esp
  422e1b:	test   DWORD PTR [ecx-0x1],0xd09edf35
  422e22:	adc    DWORD PTR [edx],ecx
  422e24:	mov    ah,0xc8
  422e26:	jb     0x422e27
  422e28:	pop    esp
  422e29:	pop    esp
  422e2a:	xchg   DWORD PTR [ebp+0xf5b4820],ebx
  422e30:	jo     0x422ded
  422e32:	rol    DWORD PTR ds:0x5ac30ccd,0xd4
  422e39:	add    BYTE PTR [ebp-0x2cde774a],cl
  422e3f:	fdivr  DWORD PTR [edi+ebp*8-0x4]
  422e43:	mov    bh,0xc8
  422e45:	fwait
  422e46:	and    cl,bl
  422e48:	or     DWORD PTR [edi-0x33723d3b],edi
  422e4e:	sub    al,0x2d
  422e50:	into   
  422e51:	jp     0x422e5a
  422e53:	repnz in al,dx
  422e55:	fnstcw WORD PTR [edi]
  422e57:	es mov dh,0x82
  422e5a:	mov    ecx,0xe6eede05
  422e5f:	and    DWORD PTR [eax+ebp*2],eax
  422e62:	dec    DWORD PTR ds:[ebx+0x57]
  422e66:	push   edi
  422e67:	in     al,dx
  422e68:	jmp    0x422e02
  422e6a:	test   DWORD PTR [edi-0x73b94941],ebx
  422e70:	mov    esp,0x621641d4
  422e75:	cmp    al,0xe1
  422e77:	out    0x47,al
  422e79:	inc    esp
  422e7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e7b:	ds iret 
  422e7d:	xchg   esi,eax
  422e7e:	mov    ebx,0x3adf647e
  422e83:	xchg   edx,eax
  422e84:	push   0x72
  422e86:	mov    esi,0xea350c17
  422e8b:	pop    esp
  422e8c:	loopne 0x422e20
  422e8e:	cmp    BYTE PTR [edi-0x7d2f6d31],ch
  422e94:	sub    bl,ch
  422e96:	rol    DWORD PTR ds:0x3be854a7,0xfc
  422e9d:	loop   0x422eda
  422e9f:	inc    ebx
  422ea0:	pop    esi
  422ea1:	dec    ebp
  422ea2:	fldcw  WORD PTR [ecx]
  422ea4:	sti    
  422ea5:	outs   dx,DWORD PTR ds:[esi]
  422ea6:	je     0x422f17
  422ea8:	call   0x211f:0x55acefed
  422eaf:	jmp    0xfea00a52
  422eb4:	popf   
  422eb5:	adc    ebp,esi
  422eb7:	loop   0x422e45
  422eb9:	shl    DWORD PTR [edx-0x1b],cl
  422ebc:	scas   al,BYTE PTR es:[edi]
  422ebd:	iret   
  422ebe:	sub    eax,0x3d5d817a
  422ec3:	xchg   ebp,eax
  422ec4:	test   al,0x6c
  422ec6:	ja     0x422e8f
  422ec8:	fldcw  WORD PTR [ebx+0x2147bc11]
  422ece:	adc    ch,ah
  422ed0:	std    
  422ed1:	mov    cl,0x5c
  422ed3:	data16 mov dh,0x46
  422ed6:	jo     0x422f15
  422ed8:	xchg   DWORD PTR [ebx-0x26],eax
  422edb:	mov    al,ds:0xdaf02cd7
  422ee0:	pop    edi
  422ee1:	xchg   DWORD PTR [bx],esp
  422ee4:	(bad)  
  422ee5:	xchg   ecx,eax
  422ee6:	popa   
  422ee7:	daa    
  422ee8:	or     DWORD PTR [edi+0x3e],ecx
  422eeb:	xor    dh,ah
  422eed:	(bad)  
  422eef:	or     BYTE PTR [edx-0x6c605cef],ah
  422ef5:	sbb    BYTE PTR [eax-0x3c6d5ff2],0x37
  422efc:	cwde   
  422efd:	jbe    0x422f5c
  422eff:	jns    0x422eec
  422f01:	or     DWORD PTR [edi+0x19],ecx
  422f04:	stos   BYTE PTR es:[edi],al
  422f05:	jnp    0x422f20
  422f07:	fstp   st(7)
  422f09:	pushf  
  422f0a:	pop    ebx
  422f0b:	jno    0x422f33
  422f0d:	and    cl,BYTE PTR [eax+ebp*8+0x1]
  422f11:	jne    0x422f40
  422f13:	(bad)  
  422f14:	xor    ch,al
  422f16:	mov    ch,0xd9
  422f18:	aam    0x7
  422f1a:	out    dx,al
  422f1b:	ror    DWORD PTR [eax],1
  422f1d:	mov    esi,0x54ca51f7
  422f22:	scas   al,BYTE PTR es:[edi]
  422f23:	xor    BYTE PTR [eax*2-0x75b805e3],ah
  422f2a:	xchg   esi,eax
  422f2b:	sbb    DWORD PTR [ecx+0x547fc21],edx
  422f31:	std    
  422f32:	pop    eax
  422f33:	sub    eax,0x1e6194e1
  422f38:	and    bh,BYTE PTR [edi-0x7f]
  422f3b:	out    dx,eax
  422f3c:	movaps XMMWORD PTR [eax+eiz*4+0x11e377af],xmm5
  422f44:	mov    edx,0x2bb4f035
  422f49:	scas   eax,DWORD PTR es:[edi]
  422f4a:	(bad)  
  422f4b:	fwait
  422f4c:	dec    edx
  422f4d:	add    al,0x47
  422f4f:	xor    ah,cl
  422f51:	inc    eax
  422f52:	in     al,0xed
  422f54:	dec    ebp
  422f55:	je     0x422f20
  422f57:	adc    eax,0x26add3ec
  422f5c:	(bad)  
  422f5d:	push   esi
  422f5e:	stc    
  422f5f:	xor    BYTE PTR [esi+0x3b819026],0x26
  422f66:	aas    
  422f67:	dec    ecx
  422f68:	or     DWORD PTR [eax],0xfffffff4
  422f6b:	pop    esi
  422f6c:	cmp    ch,BYTE PTR [esi-0x75]
  422f6f:	lea    eax,[ebp-0x2b]
  422f72:	dec    ebp
  422f73:	dec    eax
  422f74:	imul   edx,DWORD PTR [eax],0xaaea445f
  422f7a:	stc    
  422f7b:	cld    
  422f7c:	pop    edi
  422f7d:	retf   0x248e
  422f80:	inc    ecx
  422f81:	fwait
  422f82:	std    
  422f83:	les    esi,FWORD PTR [ebp+eax*2+0xf]
  422f87:	(bad)  
  422f88:	or     eax,0x789080de
  422f8d:	std    
  422f8e:	loopne 0x422f7e
  422f90:	mov    cl,0xc0
  422f92:	mov    bl,0xc8
  422f94:	jnp    0x422fb2
  422f96:	popf   
  422f97:	dec    edx
  422f98:	lods   al,BYTE PTR ds:[esi]
  422f99:	js     0x422f48
  422f9b:	rcl    DWORD PTR [eax],1
  422f9d:	outs   dx,DWORD PTR ds:[esi]
  422f9e:	std    
  422f9f:	xchg   ebp,eax
  422fa0:	out    dx,al
  422fa1:	js     0x422f42
  422fa3:	enter  0x1664,0x1c
  422fa7:	sub    ah,0x4
  422faa:	in     al,0xb4
  422fac:	(bad)  
  422fad:	addr16 mov dh,0x4d
  422fb0:	xchg   ebx,eax
  422fb1:	push   esp
  422fb2:	mov    ch,0x36
  422fb4:	lahf   
  422fb5:	mov    esi,0xf5d824d7
  422fba:	mov    ebx,0xa6faae05
  422fbf:	mov    ds:0x788daf29,al
  422fc4:	in     al,dx
  422fc5:	cdq    
  422fc6:	dec    edx
  422fc7:	mov    bh,0x2d
  422fc9:	cs inc eax
  422fcb:	inc    ecx
  422fcc:	out    dx,eax
  422fcd:	mov    ds:0x67f2384c,al
  422fd2:	fimul  DWORD PTR [edi+0x57cc0cc0]
  422fd8:	scas   eax,DWORD PTR es:[edi]
  422fd9:	fbstp  TBYTE PTR [esi+0x40f40cf9]
  422fdf:	fisttp QWORD PTR [ebp-0x7b50262e]
  422fe5:	mov    bh,dh
  422fe7:	jne    0x423063
  422fe9:	ror    BYTE PTR [ebp+0x4a],0x9c
  422fed:	mov    ebp,0xdb9f0aff
  422ff2:	imul   edi,eax,0xb09bf694
  422ff8:	xor    eax,0x403c32e6
  422ffd:	xlat   BYTE PTR ds:[ebx]
  422ffe:	or     al,0x21
  423000:	jbe    0x42300c
  423002:	xor    esp,DWORD PTR [ebp-0x5ef583f2]
  423008:	jecxz  0x423047
  42300a:	push   ss
  42300b:	cmp    dl,bh
  42300d:	sbb    ebx,DWORD PTR [ebx-0x29]
  423010:	push   ds
  423011:	test   eax,0xe2a27b22
  423016:	add    cx,WORD PTR [eax-0x7]
  42301a:	or     al,0x19
  42301c:	rcr    BYTE PTR [ecx],cl
  42301e:	or     eax,0x6b6c793d
  423023:	inc    esp
  423024:	jp     0x42303c
  423026:	xchg   esp,eax
  423027:	pop    edx
  423028:	sbb    DWORD PTR [esp+ebp*4+0x10],esp
  42302c:	adc    DWORD PTR [ebp+0x5407243b],esp
  423032:	call   FWORD PTR [edi+0x1b]
  423035:	mov    ebx,0xad440627
  42303a:	js     0x42301c
  42303c:	jbe    0x42301e
  42303e:	and    BYTE PTR [edi],cl
  423040:	push   0x5f34f2e9
  423045:	sti    
  423046:	xchg   BYTE PTR [ecx],ah
  423048:	(bad)  
  423049:	sub    eax,DWORD PTR [esi]
  42304b:	pop    ebx
  42304c:	push   ss
  42304d:	fisubr DWORD PTR [edi-0x74]
  423050:	aam    0xe8
  423052:	inc    esp
  423053:	je     0x42307d
  423055:	mov    dl,BYTE PTR [ebx-0x28]
  423058:	stos   DWORD PTR es:[edi],eax
  423059:	pusha  
  42305a:	retf   0xd846
  42305d:	and    ch,cl
  42305f:	inc    ecx
  423060:	mov    edx,0xb8e6821b
  423065:	shl    BYTE PTR [esi],1
  423067:	cmp    ah,ah
  423069:	inc    esi
  42306a:	(bad)  
  42306b:	out    dx,al
  42306c:	and    al,0xda
  42306e:	push   ebp
  42306f:	fisubr WORD PTR [ecx+edx*4-0x5142b4f0]
  423076:	add    al,0x31
  423078:	sar    BYTE PTR [edi],cl
  42307a:	pop    edi
  42307b:	cmp    al,0xe5
  42307d:	cld    
  42307e:	xchg   DWORD PTR [ebp-0x1006aa2a],esi
  423084:	out    0x4b,al
  423086:	lds    esi,FWORD PTR [ebp+0x2c]
  423089:	ret    0xb3c3
  42308c:	stos   DWORD PTR es:[edi],eax
  42308d:	clc    
  42308e:	add    al,0xaf
  423090:	jae    0x423046
  423092:	mov    WORD PTR [eax+0x38b28e88],gs
  423098:	cmp    al,0x7a
  42309a:	sbb    eax,0x76168e46
  42309f:	jmp    0xa5971bb4
  4230a4:	jno    0x423115
  4230a6:	stc    
  4230a7:	mov    esp,0xeb02bcc4
  4230ac:	mov    edi,0x241b8874
  4230b1:	retf   
  4230b2:	fistp  QWORD PTR [edx-0x14f11cce]
  4230b8:	sub    DWORD PTR [ebp+0x70],esi
  4230bb:	std    
  4230bc:	sahf   
  4230bd:	push   cs
  4230be:	test   eax,0x45fda89f
  4230c3:	test   eax,0x6c583831
  4230c8:	mov    esi,0x85c83523
  4230cd:	dec    edx
  4230ce:	(bad)  
  4230cf:	sbb    eax,0x1cd21a9b
  4230d4:	sahf   
  4230d5:	nop
  4230d6:	pop    esp
  4230d7:	lock in eax,dx
  4230d9:	pop    ds
  4230da:	cmp    edi,esi
  4230dc:	pusha  
  4230dd:	dec    ebx
  4230de:	and    BYTE PTR [ecx+0x67],bh
  4230e1:	repz inc esi
  4230e3:	dec    bx
  4230e5:	test   al,0x38
  4230e7:	or     DWORD PTR ds:0xc903491c,eax
  4230ed:	pop    esi
  4230ee:	push   ebp
  4230ef:	lods   al,BYTE PTR ds:[esi]
  4230f0:	mov    es,eax
  4230f2:	pop    ecx
  4230f3:	and    ecx,ebp
  4230f5:	les    ebx,FWORD PTR [esi-0x58]
  4230f8:	or     DWORD PTR [esi+0x7ca84917],ecx
  4230fe:	cmp    cl,BYTE PTR [ecx+0x6d]
  423101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423102:	iret   
  423103:	mov    bl,0x16
  423105:	mov    ebx,0xf7715177
  42310a:	xchg   edi,eax
  42310b:	ss jo  0x4230ee
  42310e:	out    dx,eax
  42310f:	adc    BYTE PTR [ecx+0x1c],ch
  423112:	jecxz  0x423099
  423114:	lods   al,BYTE PTR ds:[esi]
  423115:	inc    ebp
  423116:	sbb    BYTE PTR [edx-0x6a],cl
  423119:	xchg   ebp,eax
  42311a:	mov    ch,0x1e
  42311c:	ins    BYTE PTR es:[edi],dx
  42311d:	dec    edi
  42311e:	mov    ah,0x80
  423120:	fimul  WORD PTR [esi+eax*8]
  423123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423124:	in     al,dx
  423125:	test   al,0x8
  423127:	cwde   
  423128:	test   dl,cl
  42312a:	pop    ecx
  42312b:	push   edx
  42312c:	pop    ss
  42312d:	retf   0xbfc
  423130:	lods   al,BYTE PTR ds:[esi]
  423131:	xchg   ebx,eax
  423132:	and    cl,bh
  423134:	jbe    0x423113
  423136:	xor    eax,0xcc167903
  42313b:	(bad)
  42313f:	int3   
  423140:	in     al,dx
  423141:	xor    ecx,DWORD PTR [edi+ebx*2]
  423144:	hlt    
  423145:	in     al,0xbb
  423147:	dec    esp
  423148:	or     eax,0xa82bfc40
  42314d:	jecxz  0x42319e
  42314f:	(bad)  [ebx]
  423151:	loop   0x42315d
  423153:	lea    esi,[edi-0x2450e60]
  423159:	lock lea edx,[eax+eax*2+0x52]
  42315e:	into   
  42315f:	xchg   esp,eax
  423160:	jmp    0x423123
  423162:	mov    bh,0x9d
  423164:	pop    ds
  423165:	idiv   BYTE PTR [ebx+0x2ca96896]
  42316b:	lods   al,BYTE PTR ds:[esi]
  42316c:	(bad)  
  42316e:	jmp    esp
  423170:	in     eax,0xc5
  423172:	js     0x42317b
  423174:	xchg   edi,eax
  423175:	popf   
  423176:	sbb    al,0x84
  423178:	mov    al,0x6d
  42317a:	(bad)
  42317d:	sar    DWORD PTR [ebp+0x1564c1cc],cl
  423183:	fidivr DWORD PTR [ebp+0x1e]
  423186:	inc    eax
  423187:	cmp    edx,edi
  423189:	cmp    ah,BYTE PTR [eax-0x32]
  42318c:	inc    edx
  42318d:	mov    ds:0x414d0df7,al
  423192:	pop    ds
  423193:	enter  0x8790,0x8d
  423197:	jae    0x423183
  423199:	outs   dx,BYTE PTR ds:[esi]
  42319a:	iret   
  42319b:	repz xchg ecx,eax
  42319d:	stos   DWORD PTR es:[edi],eax
  42319e:	mov    es,WORD PTR [ebp+0x10]
  4231a1:	loope  0x423146
  4231a3:	neg    BYTE PTR [ebp-0x68229857]
  4231a9:	stos   BYTE PTR es:[edi],al
  4231aa:	xor    al,0x79
  4231ac:	test   bl,dl
  4231ae:	sbb    dh,cl
  4231b0:	nop
  4231b1:	call   0x70613451
  4231b6:	cmp    al,0x30
  4231b8:	adc    ebx,ebp
  4231ba:	add    al,BYTE PTR ds:0x9fa76389
  4231c0:	je     0x423237
  4231c2:	xchg   edi,eax
  4231c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231c5:	cmp    DWORD PTR [ebx-0x5bca12c1],ecx
  4231cb:	mov    BYTE PTR [esi+0x1e],0x3f
  4231cf:	pop    esi
  4231d0:	mov    eax,0x562cca8f
  4231d5:	cdq    
  4231d6:	adc    eax,0xf7d24e39
  4231db:	mov    DWORD PTR [ebp-0x2f],eax
  4231de:	inc    esi
  4231df:	jmp    0x7ac2:0xf4a40a85
  4231e6:	pop    edi
  4231e7:	loope  0x4231cf
  4231e9:	sbb    eax,0xb4df469b
  4231ee:	inc    eax
  4231ef:	mov    esp,0x36dc33ba
  4231f4:	adc    eax,0x71adb3da
  4231f9:	pushf  
  4231fa:	mov    ds:0x5e23e77e,al
  4231ff:	pop    edi
  423200:	mov    bh,0x6a
  423202:	or     DWORD PTR [edi-0x77],ebx
  423205:	gs jmp 0x4231da
  423208:	mov    cl,al
  42320a:	xor    eax,0x52ce3bcb
  42320f:	jno    0x4231dc
  423211:	xchg   esp,eax
  423212:	jo     0x4231eb
  423214:	add    al,0x6c
  423216:	sub    ecx,DWORD PTR [eax+0x6a]
  423219:	rcr    DWORD PTR [bp+di],0x11
  42321d:	adc    DWORD PTR [edi+0x4e53cc65],ebx
  423223:	push   0x8a9d7c28
  423228:	rol    DWORD PTR [ebx*4+0x308e60fd],cl
  42322f:	add    DWORD PTR [edi+esi*4+0x13],esp
  423233:	in     eax,dx
  423234:	rol    BYTE PTR [ecx-0x53],1
  423237:	add    DWORD PTR [ebx-0x1bc7c5b0],ebp
  42323d:	inc    ebp
  42323e:	retf   0xec0e
  423241:	add    edx,ecx
  423243:	mov    cl,0x87
  423245:	ins    BYTE PTR es:[edi],dx
  423246:	fwait
  423247:	sbb    bh,ch
  423249:	cmp    DWORD PTR ds:0xada526b5,esp
  42324f:	stos   DWORD PTR es:[edi],eax
  423250:	(bad)  
  423252:	inc    esp
  423253:	or     al,0xea
  423255:	sbb    esp,DWORD PTR [edx-0x53a41eb]
  42325b:	ins    DWORD PTR es:[edi],dx
  42325c:	lds    ebp,FWORD PTR [esp+eax*8-0x4e0a7e1f]
  423263:	fist   WORD PTR [esi-0x35]
  423266:	sbb    eax,0x6f1c5871
  42326b:	(bad)  
  42326c:	(bad)  
  42326d:	pop    esi
  42326e:	nop
  42326f:	sahf   
  423270:	int    0xad
  423272:	xchg   edx,eax
  423273:	outs   dx,BYTE PTR ds:[esi]
  423274:	lods   eax,DWORD PTR ds:[esi]
  423275:	ins    BYTE PTR es:[edi],dx
  423276:	js     0x4232e6
  423278:	(bad)  
  423279:	inc    eax
  42327a:	or     ch,BYTE PTR [ecx]
  42327c:	jl     0x42326e
  42327e:	cli    
  42327f:	call   0x541d:0xc7d2bc2d
  423286:	xor    al,0x6f
  423288:	std    
  423289:	sub    edx,DWORD PTR [eax-0x7c]
  42328c:	adc    al,0xd
  42328e:	enter  0x293,0xce
  423292:	mov    ah,0xdd
  423294:	push   0xd15fb906
  423299:	push   cs
  42329a:	push   ss
  42329b:	mov    ch,0xe6
  42329d:	or     BYTE PTR [edi-0x470ee646],al
  4232a3:	and    ah,dh
  4232a5:	enter  0x4348,0xd3
  4232a9:	addr16 push edi
  4232ab:	dec    edx
  4232ac:	and    DWORD PTR [ecx],0xffffff9b
  4232af:	cmp    DWORD PTR [esi-0x44],esp
  4232b2:	dec    ebp
  4232b3:	popf   
  4232b4:	or     BYTE PTR ds:0xa4f57c47,dh
  4232ba:	aam    0x1f
  4232bc:	fcmovnu st,st(3)
  4232be:	jle    0x4232eb
  4232c0:	es pop esp
  4232c2:	data16 mov ch,0xac
  4232c5:	add    DWORD PTR [esi],ebx
  4232c7:	in     al,0x30
  4232c9:	loopne 0x42333d
  4232cb:	pop    esp
  4232cc:	ret    
  4232cd:	xlat   BYTE PTR ds:[ebx]
  4232ce:	test   DWORD PTR [esi],ebp
  4232d0:	fidiv  DWORD PTR [edi]
  4232d2:	inc    esi
  4232d3:	or     eax,0x4f1578ea
  4232d8:	xchg   ebx,eax
  4232d9:	daa    
  4232da:	aam    0x75
  4232dc:	lock lods al,BYTE PTR ds:[esi]
  4232de:	mov    bh,BYTE PTR [eax]
  4232e0:	inc    esi
  4232e1:	iret   
  4232e2:	adc    BYTE PTR [esi-0x2f6d0dc7],0x41
  4232e9:	(bad)  
  4232ea:	jp     0x423350
  4232ec:	test   eax,0x3ccef8e9
  4232f1:	fsubr  QWORD PTR [ebp+0x2b80751]
  4232f7:	lds    edx,FWORD PTR [ebp-0xb]
  4232fa:	xchg   cx,ax
  4232fc:	push   ecx
  4232fd:	pop    edx
  4232fe:	lds    edi,FWORD PTR [ebx]
  423300:	in     al,dx
  423301:	call   0xdfa10868
  423306:	jae    0x42335e
  423308:	mov    edx,0x7025f741
  42330d:	outs   dx,DWORD PTR ds:[esi]
  42330e:	(bad)  
  42330f:	jle    0x423343
  423311:	add    BYTE PTR [ebp-0x2e],bh
  423314:	xor    BYTE PTR [ebx-0x72],dl
  423317:	jmp    0x528b:0x99ee6c00
  42331e:	dec    esi
  42331f:	out    0xe6,eax
  423321:	push   0x38a453fb
  423326:	sti    
  423327:	sub    eax,0xba731285
  42332c:	pop    ds
  42332d:	popa   
  42332e:	call   0x857deed5
  423333:	adc    BYTE PTR [edi+0x39587384],0x8a
  42333a:	push   esi
  42333b:	scas   al,BYTE PTR es:[edi]
  42333c:	push   ss
  42333d:	and    dh,BYTE PTR [edx+0x33]
  423340:	cs scas al,BYTE PTR es:[edi]
  423342:	cmp    cl,dl
  423344:	mov    eax,0xb5b554c2
  423349:	pop    edx
  42334a:	imul   edx,DWORD PTR [ebx-0x7],0xee36af40
  423351:	pop    es
  423352:	cld    
  423353:	adc    BYTE PTR [ecx-0x1],0xe6
  423357:	mov    BYTE PTR [edx],bh
  423359:	add    al,0x20
  42335b:	mov    bh,0xc0
  42335d:	xor    al,0x19
  42335f:	ret    0x1df6
  423362:	xchg   ebx,eax
  423363:	pop    ebp
  423364:	call   0x2fe6925b
  423369:	mov    ah,0x1e
  42336b:	jl     0x423362
  42336d:	cmc    
  42336e:	push   eax
  42336f:	mov    ds:0x8d56bb67,al
  423374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423375:	rcl    DWORD PTR ds:0x98b3ab08,1
  42337b:	sahf   
  42337c:	xor    eax,0xaff91036
  423381:	and    DWORD PTR [edi+0x1],edi
  423384:	dec    esi
  423385:	fdiv   DWORD PTR [ebp+esi*2+0x9a6841a]
  42338c:	cs faddp st(3),st
  42338f:	sbb    al,0xa9
  423391:	ss loop 0x4233bd
  423394:	pop    edi
  423395:	lock enter 0x9d4b,0x70
  42339a:	pop    ebp
  42339b:	ins    DWORD PTR es:[edi],dx
  42339c:	xchg   esi,eax
  42339d:	mov    bh,0x3e
  42339f:	pop    es
  4233a0:	jge    0x4233ba
  4233a2:	add    ebp,DWORD PTR [edx]
  4233a4:	cmp    al,0x90
  4233a6:	into   
  4233a7:	aam    0xa
  4233a9:	hlt    
  4233aa:	sti    
  4233ab:	xor    DWORD PTR [ebx-0x7d],esp
  4233ae:	pop    eax
  4233af:	icebp  
  4233b0:	pop    ds
  4233b1:	int    0xf9
  4233b3:	gs aad 0xa9
  4233b6:	test   DWORD PTR [edi],eax
  4233b8:	xchg   edi,eax
  4233b9:	adc    dh,BYTE PTR [edx+ecx*1+0x413d1b96]
  4233c0:	pop    esp
  4233c1:	dec    esi
  4233c2:	jns    0x423353
  4233c4:	cmc    
  4233c5:	jp     0x4233dc
  4233c7:	jmp    0x3598:0xb0aff757
  4233ce:	nop
  4233cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233d0:	push   esi
  4233d1:	inc    edx
  4233d2:	(bad)  
  4233d3:	in     eax,0xfb
  4233d5:	js     0x42343e
  4233d7:	and    dl,BYTE PTR [edx+0x4c1913c5]
  4233dd:	out    dx,eax
  4233de:	lods   eax,DWORD PTR ds:[esi]
  4233df:	jne    0x4233b9
  4233e1:	test   BYTE PTR [eax-0x6e],ah
  4233e4:	jae    0x4233cb
  4233e6:	push   edi
  4233e7:	adc    edi,0xffffff8d
  4233ea:	lock mov cl,0xdd
  4233ed:	fdivr  QWORD PTR [ebp-0x3b]
  4233f0:	dec    eax
  4233f1:	pop    ecx
  4233f2:	mov    al,BYTE PTR [esi+ecx*2+0x3b]
  4233f6:	retf   0x690c
  4233f9:	jmp    0x423422
  4233fb:	inc    edx
  4233fc:	repnz sub BYTE PTR [edx+0x3187f969],ch
  423403:	sbb    esi,DWORD PTR [ebx+edx*1-0x6959d44f]
  42340a:	mov    bl,0x8c
  42340c:	lods   al,BYTE PTR ds:[esi]
  42340d:	mov    gs,WORD PTR [eax]
  42340f:	sbb    eax,0x8281f212
  423414:	or     dl,BYTE PTR [ebx-0x5b7d8c30]
  42341a:	cli    
  42341b:	jp     0x4233a3
  42341d:	retf   
  42341e:	dec    ecx
  42341f:	in     eax,dx
  423420:	jnp    0x4233c1
  423422:	inc    eax
  423423:	adc    al,0x1c
  423425:	rol    BYTE PTR [ebx],1
  423427:	mov    esp,0xad345944
  42342c:	(bad)  
  42342d:	and    eax,0x2313a256
  423432:	pusha  
  423433:	outs   dx,DWORD PTR ds:[esi]
  423434:	xor    eax,0x280570ad
  423439:	mov    cl,0x87
  42343b:	in     eax,dx
  42343c:	mov    esi,DWORD PTR [eax+0x69]
  42343f:	into   
  423440:	outs   dx,DWORD PTR ds:[esi]
  423441:	fcom   DWORD PTR [eax+ecx*2+0x4bcc93bf]
  423448:	pop    esp
  423449:	(bad)  
  42344a:	shr    BYTE PTR [eax+eax*8],cl
  42344d:	fild   DWORD PTR [esi+ebx*8-0x64008725]
  423454:	out    0x65,eax
  423456:	stos   DWORD PTR es:[edi],eax
  423457:	dec    eax
  423458:	jle    0x4233e2
  42345a:	clc    
  42345b:	or     DWORD PTR [ebx-0x58],esp
  42345e:	int3   
  42345f:	out    dx,al
  423460:	ins    BYTE PTR es:[edi],dx
  423461:	xor    dh,cl
  423463:	(bad)  
  423464:	jecxz  0x4234ad
  423466:	addr16 inc edi
  423468:	fucom  st(2)
  42346a:	jne    0x42347b
  42346c:	cmp    eax,0x3bb38e6
  423471:	jne    0x4234eb
  423473:	push   ebp
  423474:	pop    esp
  423475:	mov    DWORD PTR [edx-0x49],esp
  423478:	mov    bl,0x7a
  42347a:	fwait
  42347b:	inc    ebx
  42347c:	aam    0xd5
  42347e:	jecxz  0x4234d5
  423480:	pop    ss
  423481:	in     al,0x53
  423483:	cmp    eax,0xf74cc731
  423488:	push   esp
  423489:	je     0x4234d6
  42348b:	cmp    ecx,edx
  42348d:	dec    esi
  42348e:	call   0x5ca2c41d
  423493:	(bad)  
  423494:	xlat   BYTE PTR ds:[ebx]
  423495:	and    eax,0xa0be21c7
  42349a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42349b:	fild   WORD PTR [edx+0x5917993b]
  4234a1:	and    eax,0xbe10e4d4
  4234a6:	aaa    
  4234a7:	jecxz  0x423526
  4234a9:	or     dh,ch
  4234ab:	rcr    DWORD PTR [ebx+eiz*4+0x5c775fe3],0x83
  4234b3:	add    ch,BYTE PTR [ecx-0x74]
  4234b6:	xchg   ebx,eax
  4234b7:	arpl   WORD PTR [edi-0x11],ax
  4234ba:	pop    ebp
  4234bb:	xchg   DWORD PTR [edi+edi*8],ecx
  4234be:	mov    eax,ds:0xf9de470
  4234c3:	mov    ch,0x71
  4234c5:	inc    edi
  4234c6:	jmp    0x83774c7c
  4234cb:	popf   
  4234cc:	push   0x1c
  4234ce:	lock cmp BYTE PTR [ebx+0x59294970],cl
  4234d5:	out    0x9b,al
  4234d7:	add    BYTE PTR [edi+0x31],bh
  4234da:	xor    bl,bh
  4234dc:	scas   eax,DWORD PTR es:[edi]
  4234dd:	add    cl,ch
  4234df:	dec    ecx
  4234e0:	and    cl,bl
  4234e2:	loop   0x4234bf
  4234e4:	or     ebp,DWORD PTR [ebx+0x26d8702f]
  4234ea:	mov    al,ds:0x853c0607
  4234ef:	sbb    ebp,esp
  4234f1:	fwait
  4234f2:	cli    
  4234f3:	sbb    ecx,DWORD PTR [ecx-0x36eb70ff]
  4234f9:	aam    0xc6
  4234fb:	add    eax,0x2efa1821
  423500:	aaa    
  423501:	std    
  423502:	jg     0x4234d6
  423504:	cli    
  423505:	sub    ecx,DWORD PTR ds:0x2b671605
  42350b:	cld    
  42350c:	clc    
  42350d:	cdq    
  42350e:	pop    ecx
  42350f:	mov    bl,0x42
  423511:	repz loopne 0x4234bc
  423514:	push   edi
  423515:	push   ds
  423516:	mov    esp,0x5c60b844
  42351b:	cmp    bh,BYTE PTR [ecx+0x487f0e41]
  423521:	(bad)  
  423522:	mov    ebx,0x513b3fbd
  423527:	test   al,0x57
  423529:	push   ss
  42352a:	jae    0x4234ee
  42352c:	push   esp
  42352d:	rol    BYTE PTR [di+0x5612],cl
  423532:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423533:	sbb    eax,0x9e583510
  423538:	idiv   DWORD PTR [eax-0x67]
  42353b:	les    ecx,FWORD PTR [edi]
  42353d:	das    
  42353e:	fild   DWORD PTR [ebp+0x55]
  423541:	test   al,0x68
  423543:	pop    esp
  423544:	sbb    ebx,DWORD PTR [esi+edx*4-0x7e8a806a]
  42354b:	shr    DWORD PTR [ecx-0x1d4eaaf4],1
  423551:	ret    0x2946
  423554:	mov    esp,0xd950bd79
  423559:	gs aaa 
  42355b:	out    dx,al
  42355c:	fisub  WORD PTR [esi+0x649d5f8e]
  423562:	sub    cl,ch
  423564:	cs xchg ebx,eax
  423566:	mov    DWORD PTR ds:0x26fd6dad,ecx
  42356c:	xor    BYTE PTR [ebp+0x447662a5],cl
  423572:	pusha  
  423573:	ins    DWORD PTR es:[edi],dx
  423574:	cld    
  423575:	push   edx
  423576:	les    edx,FWORD PTR [ebx-0xc19efa6]
  42357c:	fstp   DWORD PTR [ecx+0x31]
  42357f:	jg     0x4235e4
  423581:	jge    0x423539
  423583:	shr    cl,cl
  423585:	cmp    al,0xc3
  423587:	sbb    DWORD PTR [esi],edi
  423589:	mov    ds:0xaf8f0849,eax
  42358e:	xchg   edi,eax
  42358f:	cs cli 
  423591:	aad    0xb5
  423593:	ret    0xbe72
  423596:	test   al,0xab
  423598:	scas   al,BYTE PTR es:[edi]
  423599:	push   0xffffff9c
  42359b:	mov    ds:0xf0643b43,eax
  4235a0:	add    BYTE PTR [eax],cl
  4235a2:	xor    cl,BYTE PTR [edi]
  4235a4:	push   esp
  4235a5:	xchg   esp,eax
  4235a6:	daa    
  4235a7:	cmc    
  4235a8:	or     al,0x53
  4235aa:	mov    ebp,0xc5b21a10
  4235af:	stc    
  4235b0:	xchg   ecx,eax
  4235b1:	and    ebp,DWORD PTR [ebp+0x66]
  4235b4:	mov    ds:0xf5241ee7,al
  4235b9:	sub    dh,BYTE PTR [ecx-0x6b12449f]
  4235bf:	call   0x7850a877
  4235c4:	das    
  4235c5:	fld    TBYTE PTR [esi+0x3b8a102e]
  4235cb:	and    BYTE PTR [eax],cl
  4235cd:	mov    eax,ds:0x22db14f8
  4235d2:	xor    eax,0xdab8f7d3
  4235d7:	cmp    DWORD PTR [edi-0xc],ebx
  4235da:	xchg   esi,eax
  4235db:	dec    ebp
  4235dc:	inc    edi
  4235dd:	dec    ebp
  4235de:	je     0x423593
  4235e0:	adc    DWORD PTR [esi+0x78],eax
  4235e3:	push   es
  4235e4:	mov    ebp,0x79f50a13
  4235e9:	retf   0x3ae8
  4235ec:	pop    esp
  4235ed:	add    esp,DWORD PTR [ebp-0x25c307ea]
  4235f3:	aad    0xf
  4235f5:	adc    BYTE PTR [edx],bh
  4235f7:	cdq    
  4235f8:	daa    
  4235f9:	rol    BYTE PTR [edx],1
  4235fb:	and    DWORD PTR [ebx+eax*2+0x6f],0x28
  423600:	std    
  423601:	cmp    esp,DWORD PTR [eax-0x53]
  423604:	sub    eax,0xb1c51a7f
  423609:	mov    esp,0x2f9c64f0
  42360e:	sbb    BYTE PTR [edi+0x345802c9],cl
  423614:	cwde   
  423615:	push   ebp
  423616:	cld    
  423617:	add    DWORD PTR [esi+ebx*2-0x7fd619f8],0xffffffb6
  42361f:	push   ebx
  423620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423621:	jnp    0x423613
  423623:	scas   eax,DWORD PTR es:[edi]
  423624:	(bad)  
  423625:	fldcw  WORD PTR [ecx-0x4b086894]
  42362b:	mov    ds:0xf4b434ab,eax
  423630:	fldenv [esi+0x6]
  423633:	mov    esp,0xdbdf7541
  423638:	cmp    eax,0xefd31300
  42363d:	add    bl,BYTE PTR [bp+si]
  423640:	arpl   WORD PTR ds:0xc7aa2d66,bp
  423646:	ss cmc 
  423648:	pop    esi
  423649:	push   esi
  42364a:	ds pop esp
  42364c:	addr16 daa 
  42364e:	ror    DWORD PTR [ebp-0x3e],1
  423651:	int    0x9
  423653:	mov    dl,BYTE PTR [edx+esi*4+0x1e6526e5]
  42365a:	cmp    al,0xe1
  42365c:	repnz mov esi,0xbfea387
  423662:	mov    al,ds:0xb3e16152
  423667:	push   ebx
  423668:	cs popa 
  42366a:	jecxz  0x4236d3
  42366c:	or     al,0x82
  42366e:	cmp    BYTE PTR [esi-0x76],ah
  423671:	xchg   ebx,eax
  423672:	pusha  
  423673:	iret   
  423674:	les    ecx,FWORD PTR [ebp+0xa41c10]
  42367a:	xor    esp,edx
  42367c:	inc    ecx
  42367d:	lods   eax,DWORD PTR ds:[esi]
  42367e:	cmp    al,BYTE PTR [eax+0x20]
  423681:	xor    eax,0xd3ad801b
  423686:	and    bl,dh
  423688:	jmp    0xd76334ff
  42368d:	fwait
  42368e:	jl     0x4236c9
  423690:	sahf   
  423691:	and    ebp,DWORD PTR [ebx*2+0x1a7830cf]
  423698:	xchg   DWORD PTR [ebp+0x61],esi
  42369b:	sti    
  42369c:	repnz mov eax,0x3faa2bcb
  4236a2:	fs jnp 0x423647
  4236a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236a6:	mov    ah,0xb8
  4236a8:	sbb    bl,cl
  4236aa:	jmp    0xee0c94d5
  4236af:	scas   al,BYTE PTR es:[edi]
  4236b0:	loope  0x4236ec
  4236b2:	or     DWORD PTR [eax+0x7c698604],ecx
  4236b8:	adc    al,0x50
  4236ba:	sub    eax,0x452aef64
  4236bf:	fwait
  4236c0:	sbb    BYTE PTR [ecx-0x55],al
  4236c3:	outs   dx,BYTE PTR ds:[esi]
  4236c4:	sbb    ecx,DWORD PTR [edi-0x7eeffc0e]
  4236ca:	xchg   edi,eax
  4236cb:	in     eax,dx
  4236cc:	pop    es
  4236cd:	out    0x8f,al
  4236cf:	(bad)  
  4236d0:	dec    esi
  4236d1:	jno    0x42367b
  4236d3:	ficomp WORD PTR [ecx]
  4236d5:	xlat   BYTE PTR ds:[ebx]
  4236d6:	or     DWORD PTR [ebx-0x36d03b2],eax
  4236dc:	rcr    DWORD PTR [ecx-0x24],cl
  4236df:	cs lahf 
  4236e1:	in     al,0xfa
  4236e3:	push   edx
  4236e4:	or     BYTE PTR [ebp+0x738de35c],dl
  4236ea:	jb     0x423725
  4236ec:	repz rol edx,0x9b
  4236f0:	dec    esp
  4236f1:	or     BYTE PTR [edx-0x52],al
  4236f4:	jle    0x42371e
  4236f6:	push   cs
  4236f7:	fwait
  4236f8:	pop    ss
  4236f9:	outs   dx,BYTE PTR ds:[esi]
  4236fa:	sbb    bh,BYTE PTR [edi-0x5a]
  4236fd:	out    dx,al
  4236fe:	aam    0xe6
  423700:	lock cmc 
  423702:	stos   DWORD PTR es:[edi],eax
  423703:	mov    ds:0x1d52cbee,al
  423708:	ja     0x4236c5
  42370a:	shl    DWORD PTR [ecx],0x23
  42370d:	out    dx,al
  42370e:	add    BYTE PTR [esi-0x13c54990],dl
  423714:	in     al,0x2c
  423716:	daa    
  423717:	ret    0xaeaa
  42371a:	mov    ebx,0xeba17157
  42371f:	mov    al,ds:0x16dc2565
  423724:	(bad)  
  423725:	outs   dx,DWORD PTR ds:[esi]
  423726:	xchg   cl,al
  423728:	(bad)  
  423729:	or     DWORD PTR [eax+0x2b],ebp
  42372c:	add    dl,BYTE PTR [edi+0x20f6d603]
  423732:	dec    edx
  423733:	jecxz  0x42374a
  423735:	mov    al,0x98
  423737:	jmp    0x8f808fe5
  42373c:	daa    
  42373d:	cwde   
  42373e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42373f:	mov    al,0x1b
  423741:	stc    
  423742:	rcl    DWORD PTR [edx+0x60],cl
  423745:	popa   
  423746:	dec    ebx
  423747:	dec    edi
  423748:	adc    dl,BYTE PTR [edi+0x4e30da74]
  42374e:	popf   
  42374f:	lods   al,BYTE PTR ds:[esi]
  423750:	mov    eax,0xeb29110e
  423755:	xchg   BYTE PTR [esi],dh
  423757:	inc    eax
  423758:	(bad)  [ecx]
  42375a:	mov    ebx,0xc21f2eaf
  42375f:	cmp    al,0x4d
  423761:	lods   eax,DWORD PTR ds:[esi]
  423762:	lock test al,0x1c
  423765:	or     ebx,ebp
  423767:	out    0xef,eax
  423769:	xor    eax,DWORD PTR [edx]
  42376b:	xchg   ecx,eax
  42376c:	pop    ecx
  42376d:	dec    esi
  42376e:	add    al,0x22
  423770:	call   0xd97d:0xa954935f
  423777:	lods   eax,DWORD PTR ds:[esi]
  423778:	pop    eax
  423779:	mov    ah,bl
  42377b:	sbb    edi,esi
  42377d:	stc    
  42377e:	(bad)
  423781:	cwde   
  423782:	ret    
  423783:	(bad)  
  423784:	jns    0x42377e
  423786:	push   ecx
  423787:	arpl   WORD PTR [edx+0x11ad13df],bp
  42378d:	and    DWORD PTR [edx+0x61b49a4],esi
  423793:	add    ah,BYTE PTR [edi+0x10f3ad3f]
  423799:	jnp    0x42372d
  42379b:	push   edx
  42379c:	lods   al,BYTE PTR ds:[esi]
  42379d:	mov    ebp,0x7a8c3a4c
  4237a2:	addr16 sbb eax,0x85d6af57
  4237a8:	mov    ecx,0x8eb283b
  4237ad:	loopne 0x423753
  4237af:	loop   0x423799
  4237b1:	xlat   BYTE PTR ds:[ebx]
  4237b2:	xchg   ebx,eax
  4237b3:	push   es
  4237b4:	xchg   esp,eax
  4237b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237b6:	add    al,0x22
  4237b8:	rcl    DWORD PTR [esi+esi*8+0x1],1
  4237bc:	(bad)
  4237c0:	jecxz  0x423828
  4237c2:	push   0xfffffff9
  4237c4:	data16 mov ah,0xa3
  4237c7:	ins    BYTE PTR es:[edi],dx
  4237c8:	or     bl,BYTE PTR [ebp+0x51]
  4237cb:	in     eax,dx
  4237cc:	lock test al,0x75
  4237cf:	push   edi
  4237d0:	mov    bl,BYTE PTR [esi-0x186450b3]
  4237d6:	or     BYTE PTR [ebp+0x32],dh
  4237d9:	rol    DWORD PTR [ecx],cl
  4237db:	jge    0x42377e
  4237dd:	popf   
  4237de:	(bad)  
  4237df:	loop   0x423777
  4237e1:	ins    BYTE PTR es:[edi],dx
  4237e2:	jne    0x4237ad
  4237e4:	sbb    eax,0x6dfae9d7
  4237e9:	clc    
  4237ea:	sbb    bl,BYTE PTR [ebp-0x5d]
  4237ed:	sub    DWORD PTR ds:0xccd921e7,edi
  4237f3:	mov    edx,0x8199d133
  4237f8:	and    al,0x9a
  4237fa:	jmp    0x4237e1
  4237fc:	enter  0x6b80,0x4a
  423800:	push   esi
  423801:	jmp    0x4237c9
  423803:	cdq    
  423804:	inc    ecx
  423805:	sub    edx,ecx
  423807:	sub    ebx,0xffffffcd
  42380a:	dec    ecx
  42380b:	jnp    0x423813
  42380d:	jns    0x4237a4
  42380f:	inc    edi
  423810:	(bad)  
  423811:	and    dl,ah
  423813:	lahf   
  423814:	mov    dl,0xe2
  423816:	sub    eax,0xac90e444
  42381b:	dec    ecx
  42381c:	xor    dh,BYTE PTR [ebx+0x44]
  42381f:	push   0x4f312b3a
  423824:	out    dx,al
  423825:	jmp    0x42381e
  423827:	fcmovb st,st(5)
  423829:	fwait
  42382a:	ret    
  42382b:	jae    0x423834
  42382d:	in     al,0xb5
  42382f:	mov    ch,BYTE PTR [edx+0xee070fb]
  423835:	push   edx
  423836:	xchg   BYTE PTR [edi],dh
  423838:	int    0xa9
  42383a:	ja     0x423841
  42383c:	mov    al,0x57
  42383e:	jecxz  0x42388d
  423840:	lods   eax,DWORD PTR ds:[esi]
  423841:	cmp    DWORD PTR [esi+0x16fa300b],esp
  423847:	mov    dl,0xbb
  423849:	cs out dx,al
  42384b:	dec    DWORD PTR [eax-0x65a4a9bc]
  423851:	mov    ebx,0x5af9cc9
  423856:	cmp    DWORD PTR [ebp-0x41],ebx
  423859:	mov    ch,0x57
  42385b:	push   edi
  42385c:	jb     0x42389d
  42385e:	pop    edx
  42385f:	inc    ebp
  423860:	xchg   ebp,eax
  423861:	mov    esp,0x19755e8a
  423866:	jae    0x4238d6
  423868:	xor    DWORD PTR [edi+0x2513e5cb],esp
  42386e:	adc    ebp,esi
  423870:	int3   
  423871:	aad    0x9b
  423873:	mov    ds:0x7fffee,eax
  423878:	sub    esp,DWORD PTR [edx]
  42387a:	cwde   
  42387b:	out    0x47,eax
  42387d:	add    DWORD PTR [eax-0x7b],0xffffffd8
  423881:	in     al,0xf8
  423883:	dec    esi
  423884:	sub    DWORD PTR [eax],ebx
  423886:	fld    QWORD PTR ds:0xa7087c04
  42388c:	ds xchg edi,eax
  42388e:	jbe    0x423833
  423890:	imul   dh
  423892:	and    dh,BYTE PTR [edx-0x7b]
  423895:	shl    cl,1
  423897:	or     eax,DWORD PTR [ebp-0x2001d1dc]
  42389d:	xchg   ecx,eax
  42389e:	fadd   QWORD PTR [esi+0x1fbba516]
  4238a4:	mov    ds:0x5f27688c,eax
  4238a9:	add    ecx,DWORD PTR [esi+0x133c1ff9]
  4238af:	inc    eax
  4238b0:	xchg   esp,eax
  4238b1:	test   al,0x6b
  4238b3:	fist   DWORD PTR ss:[eax]
  4238b6:	xchg   esp,eax
  4238b7:	pop    ds
  4238b8:	dec    esi
  4238b9:	fmul   QWORD PTR [ebp+0x77]
  4238bc:	mov    esi,DWORD PTR [ecx+0x1b88a1b]
  4238c2:	jmp    0x423909
  4238c4:	fdivr  QWORD PTR [ebx]
  4238c6:	add    al,0xb1
  4238c8:	mov    ds:0x1b61a76f,al
  4238cd:	lods   eax,DWORD PTR ds:[esi]
  4238ce:	xchg   BYTE PTR [edx],bl
  4238d0:	scas   eax,DWORD PTR es:[edi]
  4238d1:	shl    cl,cl
  4238d3:	fcompp 
  4238d5:	aad    0xf3
  4238d7:	add    eax,0xaed5a738
  4238dc:	push   0x95c4dc90
  4238e1:	jbe    0x423868
  4238e3:	xor    al,0x5c
  4238e5:	(bad)  [ecx-0x36086157]
  4238eb:	daa    
  4238ec:	addr16 enter 0x142d,0xb0
  4238f1:	adc    edi,DWORD PTR [edi-0x41]
  4238f4:	enter  0x7ded,0x5c
  4238f8:	addr16 xchg edx,eax
  4238fa:	mov    cl,0x42
  4238fc:	js     0x4238bb
  4238fe:	sub    esp,ebp
  423900:	push   ds
  423901:	enter  0xcaa2,0x0
  423905:	mov    esi,0x31e49c4
  42390a:	add    eax,0x7691f9c5
  42390f:	xor    DWORD PTR [ecx-0x6a],0x36
  423913:	jo     0x423983
  423915:	fmul   st,st(0)
  423917:	sub    al,0xe6
  423919:	shl    BYTE PTR [esi],cl
  42391b:	or     BYTE PTR [ebx],ch
  42391d:	call   0x3bf2f7a0
  423922:	int    0xee
  423924:	xlat   BYTE PTR ds:[ebx]
  423925:	mov    esi,0x7e661c95
  42392a:	push   0xa
  42392c:	jne    0x4238f0
  42392e:	ins    DWORD PTR es:[edi],dx
  42392f:	aas    
  423930:	dec    ebp
  423931:	sar    BYTE PTR [esi],1
  423933:	fild   DWORD PTR [ebp-0x2ade6bfd]
  423939:	int3   
  42393a:	xor    eax,edi
  42393c:	xlat   BYTE PTR ds:[ebx]
  42393d:	pop    esp
  42393e:	fld    DWORD PTR [esi+0x7c]
  423941:	xor    eax,0x69036991
  423946:	push   ebx
  423947:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423948:	jge    0x4238f7
  42394a:	pop    ebx
  42394b:	in     al,0xd4
  42394d:	loop   0x42396d
  42394f:	or     ebx,DWORD PTR [edi-0x33f5cdd1]
  423955:	stos   DWORD PTR es:[edi],eax
  423956:	xor    al,0x16
  423958:	into   
  423959:	jecxz  0x423902
  42395b:	cmp    BYTE PTR [ebx+0x58],cl
  42395e:	test   al,0x1
  423960:	cs das 
  423962:	(bad)  
  423964:	sub    al,0x25
  423966:	sub    BYTE PTR [ebx-0x19bdbb49],dl
  42396c:	or     DWORD PTR [edi-0x4e932da],edx
  423972:	mov    ss,edi
  423974:	(bad)  
  423975:	clc    
  423976:	mov    edi,0xeb26e85f
  42397b:	push   esp
  42397c:	cmp    BYTE PTR [edi],al
  42397e:	push   ebp
  42397f:	aaa    
  423980:	dec    ebp
  423981:	or     BYTE PTR [edi+0x18],bh
  423984:	jmp    0x4239f7
  423986:	jge    0x4239bf
  423988:	fucomip st,st(3)
  42398a:	pop    edx
  42398b:	fisttp DWORD PTR [ebx+0x247674a8]
  423991:	xchg   DWORD PTR [esi+esi*2-0x3fce5e72],edi
  423998:	mov    al,ds:0x81891dbc
  42399d:	and    al,0x8f
  42399f:	ja     0x4239e9
  4239a1:	js     0x4239d9
  4239a3:	popf   
  4239a4:	shl    DWORD PTR [esi+0x6e],0xb8
  4239a8:	repnz add eax,0x489dd0f2
  4239ae:	xchg   ecx,eax
  4239af:	ja     0x423a0a
  4239b1:	jo     0x4239aa
  4239b3:	jnp    0x423a14
  4239b5:	add    eax,DWORD PTR [ecx]
  4239b7:	mov    ecx,0xd694cba7
  4239bc:	mov    ebp,DWORD PTR [ebx-0x8]
  4239bf:	fisubr DWORD PTR [eax]
  4239c1:	(bad)  
  4239c5:	push   cs
  4239c6:	xor    dh,BYTE PTR [eax-0x3d]
  4239c9:	js     0x423a2e
  4239cb:	or     dh,BYTE PTR [esi]
  4239cd:	add    eax,0xefabe0c5
  4239d2:	cmp    eax,0x57eaf824
  4239d7:	dec    esi
  4239d8:	(bad)  
  4239da:	stos   DWORD PTR es:[edi],eax
  4239db:	sbb    ah,BYTE PTR [edi-0x419c5eca]
  4239e1:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239e3:	jg     0x423a39
  4239e5:	loope  0x423971
  4239e7:	sbb    eax,0xbf21ed51
  4239ec:	inc    ebx
  4239ed:	pop    ebx
  4239ee:	xchg   ecx,eax
  4239ef:	jl     0x4239f3
  4239f1:	pop    ecx
  4239f2:	xor    eax,0x799c4e8
  4239f7:	jae    0x42398b
  4239f9:	outs   dx,DWORD PTR ds:[esi]
  4239fa:	fs jns 0x4239c3
  4239fd:	stos   DWORD PTR es:[edi],eax
  4239fe:	mov    ch,0xba
  423a00:	cli    
  423a01:	dec    ebx
  423a02:	enter  0x8025,0x70
  423a06:	adc    al,0xba
  423a08:	xchg   DWORD PTR [edx-0x5c088ba],esi
  423a0e:	push   esp
  423a0f:	mov    bh,0x82
  423a11:	or     esi,ebp
  423a13:	fst    DWORD PTR [esp+ebp*8-0x69]
  423a17:	stos   BYTE PTR es:[edi],al
  423a18:	(bad)  
  423a1a:	dec    edi
  423a1b:	jmp    0xffe0520
  423a20:	xchg   edx,eax
  423a21:	mov    ebx,0x4b71e22a
  423a26:	retf   0x6a77
  423a29:	push   edx
  423a2a:	jge    0x4239ee
  423a2c:	(bad)  [edx+0x1b]
  423a2f:	push   esi
  423a30:	retf   
  423a31:	sbb    BYTE PTR [eax+0x1c],ch
  423a34:	xor    ch,BYTE PTR [eax]
  423a36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a37:	xor    ebp,edi
  423a39:	mov    bh,0x91
  423a3b:	xor    ebp,DWORD PTR [edi-0x693aa615]
  423a41:	sub    edx,DWORD PTR [edi-0x29]
  423a44:	xor    eax,0x3f352e35
  423a49:	sub    eax,0x9d1870e3
  423a4e:	scas   eax,DWORD PTR es:[edi]
  423a4f:	mov    DWORD PTR [ebx+0x1386c292],edi
  423a55:	lds    edx,FWORD PTR [ecx]
  423a57:	into   
  423a58:	clc    
  423a59:	pavgb  mm2,QWORD PTR [ebx-0x5af274f5]
  423a60:	loopne 0x423a28
  423a62:	clc    
  423a63:	xlat   BYTE PTR ds:[ebx]
  423a64:	pop    edi
  423a65:	in     al,dx
  423a66:	sbb    esi,0xffffffeb
  423a69:	test   al,0x7c
  423a6b:	div    edx
  423a6d:	popa   
  423a6e:	ret    
  423a6f:	shr    DWORD PTR [eax+0x64346203],cl
  423a75:	jns    0x4239ff
  423a77:	cwde   
  423a78:	test   eax,0x24e8c7ba
  423a7d:	jmp    0x423a8d
  423a7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a80:	fist   DWORD PTR [eax]
  423a82:	test   eax,0xd1725dd1
  423a87:	call   0xc9e883f5
  423a8c:	or     eax,ebx
  423a8e:	and    al,0xd7
  423a90:	(bad)  
  423a91:	sub    bl,BYTE PTR [ecx-0x9ba07c5]
  423a97:	arpl   WORD PTR [esi],si
  423a99:	xor    ecx,DWORD PTR [ecx-0x6]
  423a9c:	out    dx,eax
  423a9d:	mov    ch,0xa9
  423a9f:	dec    esi
  423aa0:	fiadd  WORD PTR [eax-0x67a7078c]
  423aa6:	mov    esp,0x4051b22
  423aab:	and    eax,0x91e07919
  423ab0:	into   
  423ab1:	adc    BYTE PTR [esi+0x75d75c27],0x95
  423ab8:	sbb    ah,BYTE PTR [esi]
  423aba:	and    eax,0x99c447a1
  423abf:	xor    BYTE PTR [edx-0x6e],dh
  423ac2:	(bad)  
  423ac3:	in     eax,0xce
  423ac5:	lahf   
  423ac6:	fiadd  WORD PTR [edi]
  423ac8:	xor    eax,0x10b97b52
  423acd:	jo     0x423a91
  423acf:	or     cl,BYTE PTR [edi-0x4]
  423ad2:	sbb    ecx,eax
  423ad4:	ficomp DWORD PTR [edi-0x4acda560]
  423ada:	clc    
  423adb:	out    0xc9,al
  423add:	adc    BYTE PTR [edi],0x89
  423ae0:	jl     0x423b23
  423ae2:	repz ror BYTE PTR [ebp+ebx*1-0x68f3a18b],cl
  423aea:	(bad)  
  423aeb:	adc    eax,ecx
  423aed:	push   ds
  423aee:	pop    ss
  423aef:	test   al,0x18
  423af1:	imul   esp,DWORD PTR [edx+edi*4+0x1d],0x1f45291f
  423af9:	xor    edx,DWORD PTR [ebx+0x2b]
  423afc:	ret    0xa58c
  423aff:	ds sbb BYTE PTR ds:[eax-0x41],bl
  423b04:	push   ds
  423b05:	pop    es
  423b06:	arpl   WORD PTR [edi+0x4bf0a1da],dx
  423b0c:	xchg   ecx,eax
  423b0d:	sbb    eax,0x1541fce7
  423b12:	xor    eax,0x8964abee
  423b17:	add    DWORD PTR [ecx+0x4d],ecx
  423b1a:	jmp    0xd79e992a
  423b1f:	jo     0x423af6
  423b21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b22:	jl     0x423aa4
  423b24:	int3   
  423b25:	dec    esi
  423b26:	shl    ecx,cl
  423b28:	jg     0x423af5
  423b2a:	ins    BYTE PTR es:[edi],dx
  423b2b:	jecxz  0x423b37
  423b2d:	push   eax
  423b2e:	scas   al,BYTE PTR es:[edi]
  423b2f:	ins    DWORD PTR es:[edi],dx
  423b30:	les    edx,FWORD PTR [edx+eiz*2]
  423b33:	sahf   
  423b34:	mov    ?,esi
  423b36:	jbe    0x423b33
  423b38:	test   eax,0xd105126b
  423b3d:	sub    al,0x1d
  423b3f:	mov    DWORD PTR [ebp-0x6679d37c],ebx
  423b45:	push   ebx
  423b46:	mov    edi,0x35858af
  423b4b:	add    al,0xfa
  423b4d:	push   esi
  423b4e:	lods   eax,DWORD PTR ds:[esi]
  423b4f:	or     al,0xf9
  423b51:	in     eax,dx
  423b52:	(bad)  
  423b53:	div    DWORD PTR [ebp-0x6edf9490]
  423b59:	popf   
  423b5a:	inc    esi
  423b5b:	loope  0x423b4e
  423b5d:	xchg   ebx,eax
  423b5e:	add    esp,DWORD PTR [ecx-0x872121c]
  423b64:	int    0xd0
  423b66:	(bad)  
  423b67:	sub    ch,BYTE PTR [esi]
  423b69:	xchg   ecx,eax
  423b6a:	push   es
  423b6b:	pop    ds
  423b6c:	int3   
  423b6d:	mov    eax,ds:0xfef7fff6
  423b72:	stc    
  423b73:	lea    eax,[ebx]
  423b75:	test   eax,0xba68aa3c
  423b7a:	lods   eax,DWORD PTR ds:[esi]
  423b7b:	popa   
  423b7c:	neg    DWORD PTR [ebp-0x29]
  423b7f:	lock xchg esp,eax
  423b81:	aad    0x7e
  423b83:	sub    DWORD PTR [edi+0x77],0xf8ef9ef1
  423b8a:	jae    0x423b1b
  423b8c:	jl     0x423bbe
  423b8e:	test   BYTE PTR [ebp-0x51],dh
  423b91:	stos   BYTE PTR es:[edi],al
  423b92:	out    0x88,al
  423b94:	mov    eax,ds:0xc83a8628
  423b99:	in     al,dx
  423b9a:	in     al,0x62
  423b9c:	(bad)  
  423b9d:	cdq    
  423b9e:	js     0x423b9f
  423ba0:	aad    0x30
  423ba2:	inc    esi
  423ba3:	push   edx
  423ba4:	inc    ebp
  423ba5:	repnz xor dh,BYTE PTR [eax-0x1d]
  423ba9:	js     0x423bb2
  423bab:	and    DWORD PTR [edx-0x3683b9e1],0x1408d634
  423bb5:	push   es
  423bb6:	ss cmp al,0xa0
  423bb9:	in     eax,0x35
  423bbb:	fisttp QWORD PTR [ecx-0x64ba54d6]
  423bc1:	std    
  423bc2:	and    DWORD PTR [ebx],ebx
  423bc4:	lods   eax,DWORD PTR ds:[esi]
  423bc5:	jmp    0xe9a4c67d
  423bca:	es xchg edi,eax
  423bcc:	add    DWORD PTR [ebx-0x181b14b1],eax
  423bd2:	or     BYTE PTR [edx],cl
  423bd4:	test   BYTE PTR [esi+esi*2-0x6d2fc3d7],dl
  423bdb:	repnz push edx
  423bdd:	mov    WORD PTR [eax+0x54],?
  423be0:	pop    edx
  423be1:	retf   
  423be2:	outs   dx,DWORD PTR ds:[esi]
  423be3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423be4:	cmp    ecx,esi
  423be6:	cli    
  423be7:	out    dx,eax
  423be8:	jmp    0x423c51
  423bea:	sub    al,0xbf
  423bec:	popa   
  423bed:	lea    ebx,[esi+0x1e818f26]
  423bf3:	inc    BYTE PTR [ecx-0x3066eaa5]
  423bf9:	shl    ebp,0x2b
  423bfc:	stos   BYTE PTR es:[edi],al
  423bfd:	cmp    ch,al
  423bff:	adc    cl,bl
  423c01:	lock mov esi,DWORD PTR [ecx]
  423c04:	mov    ebp,0x81155d7e
  423c09:	add    ebp,DWORD PTR [ebx]
  423c0b:	sub    al,0x3
  423c0d:	xchg   DWORD PTR [ebp-0x74],ebp
  423c10:	xchg   esp,eax
  423c11:	lahf   
  423c12:	add    BYTE PTR [eax],ah
  423c14:	ret    
  423c15:	fcomp  DWORD PTR [edx-0x5b0fd17d]
  423c1b:	mov    ds:0x1b8ab7cc,eax
  423c20:	or     ebx,ecx
  423c22:	adc    eax,0x4c00f241
  423c27:	dec    esp
  423c28:	(bad)  
  423c29:	call   0x3c11:0xb6b5655e
  423c30:	mov    esi,0xc990fdb2
  423c35:	loop   0x423be5
  423c37:	push   eax
  423c38:	pop    ebp
  423c39:	mov    ds:0xc66ce2a1,eax
  423c3e:	fs and bh,ah
  423c41:	and    cl,BYTE PTR [ecx]
  423c43:	cwde   
  423c44:	jg     0x423c4c
  423c46:	mov    al,0xc1
  423c48:	stc    
  423c49:	pop    ebp
  423c4a:	pop    esp
  423c4b:	test   DWORD PTR [esi+0x63b2616],ecx
  423c51:	fiadd  DWORD PTR [eax-0x237e5def]
  423c57:	mov    esi,0x1c583061
  423c5c:	in     al,dx
  423c5d:	sub    al,0xff
  423c60:	mov    ebp,0x3f4d4ab7
  423c65:	rcr    DWORD PTR [eax-0x5],1
  423c68:	cmp    eax,0x90f0d6d5
  423c6d:	sbb    BYTE PTR [esi-0x2ae66c2c],0x9a
  423c74:	data16 rcr ch,0x97
  423c78:	push   ss
  423c79:	mov    WORD PTR [eax-0x56],cs
  423c7c:	ins    DWORD PTR es:[edi],dx
  423c7d:	fs cdq 
  423c7f:	test   eax,0x94ce0599
  423c84:	aas    
  423c85:	das    
  423c86:	(bad)  
  423c87:	push   ss
  423c88:	test   BYTE PTR [esi-0x18],bh
  423c8b:	dec    edi
  423c8c:	loopne 0x423d08
  423c8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c8f:	fisub  DWORD PTR [ebp-0x54ea0e1]
  423c95:	sub    DWORD PTR [eax-0x5fcb22ba],esp
  423c9b:	mov    edi,0xb2a6facc
  423ca0:	pop    eax
  423ca1:	enter  0x877d,0x8d
  423ca5:	xor    eax,0x445ecb35
  423caa:	xor    al,0xfe
  423cac:	aam    0x3d
  423cae:	(bad)  [edx+0x4f]
  423cb1:	sbb    esp,edi
  423cb3:	jae    0x423c97
  423cb5:	mov    ah,0x10
  423cb7:	repnz into 
  423cb9:	sbb    BYTE PTR [ecx],ch
  423cbb:	pusha  
  423cbc:	and    BYTE PTR [edx],dh
  423cbe:	jb     0x423c76
  423cc0:	inc    eax
  423cc1:	(bad)  
  423cc2:	xchg   edx,eax
  423cc3:	adc    eax,0x2335421b
  423cc8:	mov    bh,0x1e
  423cca:	repnz das 
  423ccc:	cmp    DWORD PTR [ecx],edi
  423cce:	aaa    
  423ccf:	jo     0x423cca
  423cd1:	pop    ebx
  423cd2:	fwait
  423cd3:	adc    ch,BYTE PTR [edi-0x7e]
  423cd6:	mov    ebx,0x3e7953ae
  423cdb:	jbe    0x423c69
  423cdd:	mov    edx,0xfc8848ca
  423ce2:	mov    esp,0x31bedadd
  423ce7:	jmp    0x423d37
  423ce9:	cmc    
  423cea:	int3   
  423ceb:	dec    edx
  423cec:	in     al,dx
  423ced:	ins    DWORD PTR es:[edi],dx
  423cee:	sbb    eax,0x99cc716e
  423cf3:	jle    0x423d54
  423cf5:	daa    
  423cf6:	into   
  423cf7:	jecxz  0x423d01
  423cf9:	out    dx,al
  423cfa:	push   ecx
  423cfb:	and    ah,BYTE PTR [edx+0x1a489990]
  423d01:	sub    BYTE PTR [ecx],bl
  423d03:	in     al,dx
  423d04:	leave  
  423d05:	adc    ecx,eax
  423d07:	mov    bh,0xd
  423d09:	jno    0x423d68
  423d0b:	(bad)  
  423d0d:	push   ebp
  423d0e:	iret   
  423d0f:	lds    eax,FWORD PTR [ebx+0x5205cafb]
  423d15:	mov    esp,0xde0f8914
  423d1a:	or     ecx,ecx
  423d1c:	inc    esp
  423d1d:	loopne 0x423ce9
  423d1f:	out    0xff,eax
  423d21:	dec    ecx
  423d22:	mov    ds:0x7f639be7,eax
  423d27:	jl     0x423cef
  423d29:	aad    0xd9
  423d2b:	adc    ecx,DWORD PTR [ebx+0x26]
  423d2e:	sub    eax,0xeef049a6
  423d33:	nop
  423d34:	sub    esi,edx
  423d36:	frstor [ecx-0x32e2f670]
  423d3c:	sbb    BYTE PTR [edx+0x6a99d9f2],dl
  423d42:	sti    
  423d43:	sar    DWORD PTR [edi-0x15fa0c35],1
  423d49:	int    0x7
  423d4b:	int3   
  423d4c:	add    ebp,eax
  423d4e:	cli    
  423d4f:	cmp    edx,ecx
  423d51:	aad    0x78
  423d53:	mov    ecx,edx
  423d55:	dec    esp
  423d56:	mov    ds:0x5383bf8e,al
  423d5b:	xchg   edi,eax
  423d5c:	stc    
  423d5d:	pop    eax
  423d5e:	xchg   esi,eax
  423d5f:	(bad)  
  423d61:	xchg   ebp,eax
  423d62:	ret    
  423d63:	call   0xd0bcde2
  423d68:	pop    esp
  423d69:	imul   ebx,edi,0xffffffb4
  423d6c:	push   ebx
  423d6d:	sub    DWORD PTR [eax-0x3d3c0fe8],ecx
  423d73:	inc    edx
  423d74:	addr16 pushw 0x7a28
  423d79:	sbb    eax,0xa5110739
  423d7e:	test   al,0x9c
  423d80:	mov    ds:0xd0483b72,eax
  423d85:	sub    eax,0xc9b41f55
  423d8a:	mov    ah,0x44
  423d8c:	mov    edi,0x83077626
  423d91:	xor    al,BYTE PTR [ecx]
  423d93:	jbe    0x423d2f
  423d95:	push   ss
  423d96:	ficomp DWORD PTR [eax-0xf38b75c]
  423d9c:	dec    eax
  423d9d:	xor    esi,ecx
  423d9f:	dec    eax
  423da0:	ret    
  423da1:	adc    BYTE PTR [eax],0x96
  423da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423da5:	jge    0x423d37
  423da7:	(bad)  
  423da8:	imul   eax,ebx,0xca102a3a
  423dae:	aaa    
  423daf:	sbb    DWORD PTR [edx+0x7e],ebx
  423db2:	inc    ecx
  423db3:	sbb    al,0x64
  423db5:	ja     0x423db5
  423db7:	es int 0x50
  423dba:	iret   
  423dbb:	jno    0x423d3d
  423dbd:	add    DWORD PTR [ebx-0x28f524d8],ebx
  423dc3:	xor    DWORD PTR [eax+0x655eb44a],ebp
  423dc9:	nop
  423dca:	xchg   ecx,eax
  423dcb:	jne    0x423d8f
  423dcd:	out    dx,eax
  423dce:	fisub  WORD PTR [ecx-0x75]
  423dd1:	sbb    DWORD PTR [ebp-0x302ae4d1],ecx
  423dd7:	xor    al,0xae
  423dd9:	or     BYTE PTR [ecx+0x1c],ah
  423ddc:	fs or  eax,0x9ada5d70
  423de2:	test   eax,0x3ea9bd1
  423de7:	sub    esi,DWORD PTR [ecx+0x7c]
  423dea:	mov    ah,0x42
  423dec:	jle    0x423d90
  423dee:	dec    edi
  423def:	push   esi
  423df0:	mov    ebx,0x2f5f2ef7
  423df5:	inc    ecx
  423df6:	or     BYTE PTR [esi],0xa6
  423df9:	add    esi,DWORD PTR [ebx+0x668ea8d]
  423dff:	or     DWORD PTR [eax+0x2a3a96d3],esp
  423e05:	out    0x40,al
  423e07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e08:	push   0x13ecac0f
  423e0d:	in     eax,0xf0
  423e0f:	push   ecx
  423e10:	fadd   DWORD PTR [eax+ebx*1-0xbdb38ae]
  423e17:	iret   
  423e18:	sbb    cl,BYTE PTR [ebp-0x73]
  423e1b:	and    al,BYTE PTR [ecx]
  423e1d:	jl     0x423de2
  423e1f:	dec    ebp
  423e20:	dec    ebp
  423e21:	pop    ecx
  423e22:	adc    eax,0xb3ceec6d
  423e27:	int3   
  423e28:	xor    eax,0xab1c8936
  423e2d:	in     al,dx
  423e2e:	push   edi
  423e2f:	fistp  DWORD PTR [edi+0x11b90fbc]
  423e35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e36:	scas   eax,DWORD PTR es:[edi]
  423e37:	adc    edx,edx
  423e39:	pop    ebx
  423e3a:	mov    ch,0xc3
  423e3c:	mov    ebx,0x53006949
  423e41:	xchg   BYTE PTR [edx+0x2bf29289],ah
  423e47:	sahf   
  423e48:	dec    esi
  423e49:	arpl   WORD PTR [ebx-0x387299a7],cx
  423e4f:	inc    edi
  423e50:	cmp    dh,cl
  423e52:	test   BYTE PTR [edx-0x7d],bh
  423e55:	pop    edx
  423e56:	daa    
  423e57:	dec    esp
  423e58:	shl    DWORD PTR [esi+0x5e8f168b],1
  423e5e:	rcl    BYTE PTR [edi-0xf],cl
  423e61:	mov    DWORD PTR [esi+0x4fa7e2b3],esi
  423e67:	sub    al,0xee
  423e69:	scas   al,BYTE PTR es:[edi]
  423e6a:	mov    ecx,0x53b9e89
  423e6f:	cmp    edx,DWORD PTR [ecx-0x17]
  423e72:	pop    edx
  423e73:	mov    ah,0x3a
  423e75:	xor    ecx,DWORD PTR [ecx+ebx*2-0x29]
  423e79:	out    dx,al
  423e7a:	pop    ds
  423e7b:	xor    eax,esp
  423e7d:	sbb    bh,ch
  423e7f:	and    eax,0xf480b957
  423e84:	add    al,0x4b
  423e86:	sbb    cl,ah
  423e88:	lock add DWORD PTR [ecx],esi
  423e8b:	jg     0x423eee
  423e8d:	dec    eax
  423e8e:	aad    0x70
  423e90:	sub    ebp,ecx
  423e92:	pop    ecx
  423e93:	bound  esi,QWORD PTR [ebx]
  423e95:	xlat   BYTE PTR ds:[ebx]
  423e96:	jbe    0x423f11
  423e98:	lods   eax,DWORD PTR ds:[esi]
  423e99:	mul    BYTE PTR [eax+0xf]
  423e9c:	and    BYTE PTR [eax+0x15],0xc
  423ea0:	push   cs
  423ea1:	xor    DWORD PTR [ebx-0x6344b63e],edx
  423ea7:	lea    edi,[edi+0x5a]
  423eaa:	push   ebp
  423eab:	adc    bh,BYTE PTR [esi]
  423ead:	dec    ebp
  423eae:	pop    esp
  423eaf:	xor    DWORD PTR [ebx+0x74694efa],0xfffffffa
  423eb6:	shr    DWORD PTR [ecx+0x48],0x3
  423eba:	pop    esi
  423ebb:	mov    cs,edx
  423ebd:	mov    esp,0x1d5a8a25
  423ec2:	adc    eax,0xf40a1cec
  423ec7:	lock inc esp
  423ec9:	push   eax
  423eca:	adc    ch,bl
  423ecc:	int3   
  423ecd:	xchg   DWORD PTR [ecx+0x7],eax
  423ed0:	enter  0x6a14,0x63
  423ed4:	lea    ebp,[edi-0x63]
  423ed7:	cs in  eax,dx
  423ed9:	rcr    DWORD PTR [eax],0x7b
  423edc:	adc    al,0xc3
  423ede:	imul   esp,DWORD PTR [ebx-0x178447c],0x212662f6
  423ee8:	mov    eax,0xefefb6b9
  423eed:	cmp    BYTE PTR [esi+edi*8+0x63],0x69
  423ef2:	xchg   esi,eax
  423ef3:	aaa    
  423ef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ef5:	bound  edi,QWORD PTR [edi-0x61]
  423ef8:	outs   dx,BYTE PTR ds:[esi]
  423ef9:	test   BYTE PTR [ecx-0x4c69b5a7],dl
  423eff:	fisub  DWORD PTR [esi+ecx*8-0x17fdbcf3]
  423f06:	inc    ebx
  423f07:	jl     0x423ec5
  423f09:	repz cmc 
  423f0b:	mov    dh,bl
  423f0d:	shl    BYTE PTR [ebx],0x3f
  423f10:	sub    al,0x17
  423f12:	mov    bh,0x2a
  423f14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f15:	mov    dl,0xb9
  423f17:	fadd   st,st(1)
  423f19:	cmp    eax,0x563d3a02
  423f1e:	cwde   
  423f1f:	gs push ecx
  423f21:	mov    eax,ds:0xbc4a0be7
  423f26:	push   es
  423f27:	jp     0x423f0a
  423f29:	xlat   BYTE PTR ds:[ebx]
  423f2a:	mov    bh,0x11
  423f2c:	neg    ecx
  423f2e:	cmp    BYTE PTR [ebp-0x80],bl
  423f31:	add    eax,0xff5a0682
  423f36:	cmp    al,0x80
  423f38:	mov    al,0xff
  423f3a:	sbb    BYTE PTR [edx-0x16107198],bh
  423f40:	loope  0x423f61
  423f42:	aam    0x54
  423f44:	mov    dl,0xaf
  423f47:	out    0xc3,al
  423f49:	adc    bl,ch
  423f4b:	enter  0xbf1e,0x27
  423f4f:	push   edi
  423f50:	rcl    DWORD PTR [edx],1
  423f52:	dec    esi
  423f53:	or     BYTE PTR [esi-0x27],0xb1
  423f57:	mov    esp,0xf448eaac
  423f5c:	(bad)  
  423f5d:	jbe    0x423fd9
  423f5f:	adc    eax,0x251daa04
  423f64:	aaa    
  423f65:	lea    eax,[ebx+0x46d20def]
  423f6b:	mov    ebx,0x630491cc
  423f70:	add    dl,bl
  423f72:	push   ecx
  423f73:	add    DWORD PTR [ecx+0x1],ebp
  423f76:	addr16 popa 
  423f78:	add    ecx,esi
  423f7a:	out    dx,eax
  423f7b:	repnz pop es
  423f7d:	sbb    ecx,ebp
  423f7f:	or     DWORD PTR [edi+0x30],ebp
  423f82:	test   dl,dl
  423f84:	sahf   
  423f85:	cmp    bh,BYTE PTR [eax-0x5e]
  423f88:	sti    
  423f89:	pop    ebp
  423f8a:	jmp    0x423ff5
  423f8c:	xchg   ebx,eax
  423f8d:	test   DWORD PTR [ecx],0x71ff6631
  423f93:	jge    0x423f30
  423f95:	loop   0x423f28
  423f97:	cmp    BYTE PTR [edx+0x5f375b33],cl
  423f9d:	div    BYTE PTR [edx+0x14]
  423fa0:	xchg   esp,eax
  423fa1:	cdq    
  423fa2:	mov    eax,ds:0xa5c4f6cd
  423fa7:	rol    dh,cl
  423fa9:	and    DWORD PTR [ebx-0x29],0x59
  423fad:	ror    DWORD PTR [ebp+0x30b3bdd8],cl
  423fb3:	out    0xef,eax
  423fb5:	dec    ebp
  423fb6:	pop    ebx
  423fb7:	xchg   BYTE PTR [esi+0x687b719],dl
  423fbd:	stc    
  423fbe:	es dec edx
  423fc0:	lock pop ds
  423fc2:	cmp    BYTE PTR [esi],0xb5
  423fc5:	adc    esi,ebp
  423fc7:	in     eax,dx
  423fc8:	push   ss
  423fc9:	cli    
  423fca:	add    eax,DWORD PTR [esi+0x7e]
  423fcd:	je     0x423fd1
  423fcf:	std    
  423fd0:	xor    al,0x8f
  423fd2:	xchg   edi,eax
  423fd3:	arpl   WORD PTR [ecx-0x28],bx
  423fd6:	jno    0x423fb2
  423fd8:	cmp    eax,DWORD PTR [ebx]
  423fda:	dec    edx
  423fdb:	(bad)  
  423fdc:	push   ss
  423fdd:	xlat   BYTE PTR ds:[ebx]
  423fde:	add    DWORD PTR [esi+0x1],eax
  423fe1:	stos   DWORD PTR es:[edi],eax
  423fe2:	pop    ecx
  423fe3:	mov    dh,0x4f
  423fe5:	data16 or al,0xc5
  423fe8:	popa   
  423fe9:	psubusb mm5,QWORD PTR [eax]
  423fec:	pop    ds
  423fed:	lods   al,BYTE PTR ds:[esi]
  423fee:	retf   0x1dc0
  423ff1:	mov    ch,0x26
  423ff3:	pop    ebx
  423ff4:	daa    
  423ff5:	sub    bh,ah
  423ff7:	pop    ecx
  423ff8:	fld    DWORD PTR [eax+0x678287cf]
  423ffe:	mov    ecx,0xf744c6ec
  424003:	jmp    0x423fc0
  424005:	push   edi
  424006:	or     al,0x6c
  424008:	sub    dh,BYTE PTR [eax-0xe998920]
  42400e:	lahf   
  42400f:	adc    eax,DWORD PTR [ecx+0x37]
  424012:	ins    BYTE PTR es:[edi],dx
  424013:	or     esp,DWORD PTR [esi+0x31]
  424016:	xchg   edx,eax
  424017:	mov    dl,BYTE PTR [edi]
  424019:	adc    esp,ebx
  42401b:	mul    ebx
  42401d:	mov    edi,DWORD PTR [eax]
  42401f:	adc    esp,DWORD PTR [edx]
  424021:	cmp    BYTE PTR [edi+0x49],dh
  424024:	mov    ecx,0x5c9d0e90
  424029:	in     al,dx
  42402a:	lods   al,BYTE PTR ds:[esi]
  42402b:	push   edi
  42402c:	add    al,0x4b
  42402e:	or     esi,DWORD PTR [ecx-0x1b]
  424031:	sbb    ecx,DWORD PTR [edi]
  424033:	fcmovnbe st,st(2)
  424035:	push   ds
  424036:	popf   
  424037:	stos   DWORD PTR es:[edi],eax
  424038:	jl     0x42402e
  42403a:	pop    ebp
  42403b:	jb     0x423feb
  42403d:	inc    esi
  42403e:	jo     0x424035
  424040:	enter  0x7bb0,0xf6
  424044:	adc    DWORD PTR [edx-0x21],edi
  424047:	ins    DWORD PTR es:[edi],dx
  424048:	shl    DWORD PTR [ebx-0x69],cl
  42404b:	push   edi
  42404c:	hlt    
  42404d:	jb     0x423fdc
  42404f:	mov    esp,0xc5edb8df
  424054:	(bad)  
  424055:	jb     0x423fed
  424057:	push   ds
  424058:	sbb    BYTE PTR [eax],cl
  42405a:	sub    cl,BYTE PTR [ebx]
  42405c:	xor    al,0x5a
  42405e:	jecxz  0x4240c3
  424060:	std    
  424061:	mov    edi,0x651848d0
  424066:	ins    DWORD PTR es:[edi],dx
  424067:	cmp    DWORD PTR [edx-0x7c04227a],edi
  42406d:	sub    eax,ecx
  42406f:	push   es
  424070:	leave  
  424071:	cdq    
  424072:	sub    BYTE PTR [edi+ebx*4],0x53
  424076:	inc    ebp
  424077:	ss adc ah,bh
  42407a:	or     BYTE PTR [ecx],bh
  42407c:	cli    
  42407d:	cmp    bh,BYTE PTR [ecx+0x67]
  424080:	add    ah,dl
  424082:	test   eax,0xf218f9c0
  424087:	cmp    BYTE PTR [eax-0xed5824e],bl
  42408d:	repz and bl,BYTE PTR [eax-0xe68a4ff]
  424094:	xchg   ebx,eax
  424095:	out    0xb3,al
  424097:	loop   0x42403f
  424099:	leave  
  42409a:	sbb    edi,ebp
  42409c:	jg     0x424031
  42409e:	inc    BYTE PTR [esi]
  4240a0:	clc    
  4240a1:	adc    DWORD PTR [edi+0xc],0xf4a24f2c
  4240a8:	dec    ebp
  4240a9:	jmp    0x424123
  4240ab:	lods   eax,DWORD PTR cs:[esi]
  4240ad:	mov    dh,0x79
  4240af:	(bad)  
  4240b0:	sbb    eax,0xf57a1831
  4240b5:	shl    DWORD PTR [esi-0x2d],0x79
  4240b9:	in     al,0xa7
  4240bb:	and    al,0x12
  4240bd:	add    BYTE PTR [ecx-0x64],ch
  4240c0:	(bad)  
  4240c1:	ins    BYTE PTR es:[edi],dx
  4240c2:	mov    bh,0xe0
  4240c4:	push   ebp
  4240c5:	lock inc ebp
  4240c7:	mov    ebx,fs
  4240c9:	pop    esp
  4240ca:	jnp    0x424114
  4240cc:	fadd   QWORD PTR ds:0xc863e68e
  4240d2:	mov    ah,0x46
  4240d4:	test   eax,0xdcbb16fa
  4240d9:	push   edx
  4240da:	retf   
  4240db:	and    ah,BYTE PTR [edx-0x7958b10e]
  4240e1:	int    0xa
  4240e3:	pop    esi
  4240e4:	dec    esp
  4240e5:	fbstp  TBYTE PTR [edx]
  4240e7:	adc    ah,BYTE PTR [ecx+0x28]
  4240ea:	pop    ds
  4240eb:	ret    0xa818
  4240ee:	sub    DWORD PTR [edi-0x6c95f3cb],ecx
  4240f4:	ins    DWORD PTR es:[edi],dx
  4240f5:	jl     0x424164
  4240f7:	leave  
  4240f8:	int3   
  4240f9:	and    ebp,edx
  4240fb:	sbb    esi,0x7c349ebd
  424101:	fst    DWORD PTR [eax+0xe11a318]
  424107:	fisttp QWORD PTR [edi-0x305f61ce]
  42410d:	xor    eax,0xdcc5f320
  424112:	push   ds
  424113:	mov    ebp,0xdcf5af09
  424118:	sub    BYTE PTR [ecx+esi*2-0x5a26f2b5],ah
  42411f:	or     BYTE PTR [edi-0x15fb499f],al
  424125:	lds    ebp,FWORD PTR [eax+0x66d3e693]
  42412b:	xchg   BYTE PTR [edx+0x33],bl
  42412e:	bound  ebx,QWORD PTR [edx-0x4d2133bd]
  424134:	sbb    dl,al
  424136:	cmp    ebx,edi
  424138:	sbb    esi,DWORD PTR [ecx]
  42413a:	xor    al,BYTE PTR [eax+0x75108813]
  424140:	mov    esp,DWORD PTR [edi]
  424142:	jmp    FWORD PTR [ebx+edi*4-0x48]
  424146:	mov    ds:0x5bf89c85,al
  42414b:	pop    edi
  42414c:	pop    esi
  42414d:	leave  
  42414e:	ret    0xc
  424151:	push   ebp
  424152:	mov    ebp,esp
  424154:	push   ecx
  424155:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42415c:	mov    DWORD PTR ds:0x4291bb,0x19
  424166:	cmp    DWORD PTR ds:0x4291bb,0x0
  42416d:	je     0x4241c3
  424173:	cmp    DWORD PTR ds:0x4291bb,0x5
  42417a:	jb     0x4241c3
  424180:	jmp    0x424195
  424185:	push   0x6cdd
  42418a:	push   0x428019
  42418f:	call   DWORD PTR ds:0x42a867
  424195:	cmp    DWORD PTR ds:0x4291bb,0x6
  42419c:	jne    0x4241b1
  4241a2:	xor    ecx,ecx
  4241a4:	xor    ecx,DWORD PTR ds:0x4291bb
  4241aa:	dec    ecx
  4241ab:	mov    DWORD PTR ds:0x4291bb,ecx
  4241b1:	mov    ecx,DWORD PTR ds:0x4291bb
  4241b7:	dec    ecx
  4241b8:	mov    DWORD PTR ds:0x4291bb,ecx
  4241be:	jmp    0x424166
  4241c3:	mov    eax,DWORD PTR [ebp+0x8]
  4241c6:	or     ecx,ecx
  4241c8:	movsx  eax,BYTE PTR [eax]
  4241cb:	or     ecx,0x305b
  4241d1:	mov    edx,0x3272f3
  4241d6:	add    DWORD PTR ds:0x4291c7,0x4291f7
  4241e0:	sub    eax,edx
  4241e2:	mov    DWORD PTR ds:0x4291a7,0x1e
  4241ec:	cmp    DWORD PTR ds:0x4291a7,0x0
  4241f3:	je     0x42424b
  4241f9:	cmp    DWORD PTR ds:0x4291a7,0x6
  424200:	jl     0x42424b
  424206:	jmp    0x42421d
  42420b:	push   0x4280f2
  424210:	push   0x1
  424212:	push   0x8730
  424217:	call   DWORD PTR ds:0x42a86f
  42421d:	cmp    DWORD PTR ds:0x4291a7,0x7
  424224:	jne    0x424237
  42422a:	mov    ecx,DWORD PTR ds:0x4291a7
  424230:	dec    ecx
  424231:	mov    DWORD PTR ds:0x4291a7,ecx
  424237:	xor    ecx,ecx
  424239:	add    ecx,DWORD PTR ds:0x4291a7
  42423f:	dec    ecx
  424240:	mov    DWORD PTR ds:0x4291a7,ecx
  424246:	jmp    0x4241ec
  42424b:	mov    ecx,0x75108ac
  424250:	xor    eax,ecx
  424252:	cmp    eax,0xf89c85f6
  424257:	jne    0x424286
  42425d:	mov    eax,DWORD PTR [ebp+0x8]
  424260:	push   esi
  424261:	mov    esi,DWORD PTR [ebp+0x8]
  424264:	add    esi,DWORD PTR [eax+0x3c]
  424267:	mov    DWORD PTR [ebp+0x8],esi
  42426a:	mov    eax,DWORD PTR [ebp-0x4]
  42426d:	mov    esi,DWORD PTR [ebp+0x8]
  424270:	xor    eax,ecx
  424272:	add    eax,edx
  424274:	cmp    DWORD PTR [esi+0x54],eax
  424277:	pop    esi
  424278:	je     0x424286
  42427e:	mov    eax,DWORD PTR [ebp+0x8]
  424281:	jmp    0x42428d
  424286:	mov    eax,DWORD PTR [ebp-0x4]
  424289:	xor    eax,ecx
  42428b:	add    eax,edx
  42428d:	leave  
  42428e:	ret    0x4
  424291:	push   ebp
  424292:	mov    ebp,esp
  424294:	sub    esp,0xc
  424297:	and    DWORD PTR ds:0x429157,0x0
  4242a1:	mov    edx,DWORD PTR ds:0x429157
  4242a7:	inc    edx
  4242a8:	mov    DWORD PTR ds:0x429157,edx
  4242ae:	cmp    DWORD PTR ds:0x429157,0x16
  4242b5:	jl     0x4242d6
  4242bb:	jmp    0x4242c9
  4242c0:	push   DWORD PTR [ebp-0x14]
  4242c3:	call   DWORD PTR ds:0x42a873
  4242c9:	cmp    DWORD PTR ds:0x429157,0x13
  4242d0:	jb     0x4242a1
  4242d6:	push   esi
  4242d7:	mov    esi,0xf89c85a1
  4242dc:	mov    edx,DWORD PTR ds:0x42a0bf
  4242e2:	mov    ecx,DWORD PTR ds:0x42a0c7
  4242e8:	sub    edx,ecx
  4242ea:	sub    edx,DWORD PTR [edx+ecx*1]
  4242ed:	mov    DWORD PTR [ebp-0x8],esi
  4242f0:	and    DWORD PTR ds:0x4291bf,0x59ca
  4242fa:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424301:	sub    edx,DWORD PTR ds:0x4291df
  424307:	push   edi
  424308:	and    DWORD PTR ds:0x4291c7,0x0
  424312:	jmp    0x424326
  424317:	xor    ecx,ecx
  424319:	or     ecx,DWORD PTR ds:0x4291c7
  42431f:	inc    ecx
  424320:	mov    DWORD PTR ds:0x4291c7,ecx
  424326:	cmp    DWORD PTR ds:0x4291c7,0x1f
  42432d:	jae    0x42435b
  424333:	cmp    DWORD PTR ds:0x4291c7,0x20
  42433a:	jbe    0x42435b
  424340:	jmp    0x424356
  424345:	push   0x42803d
  42434a:	push   DWORD PTR [ebp-0x20]
  42434d:	push   DWORD PTR [ebp-0x24]
  424350:	call   DWORD PTR ds:0x42a877
  424356:	jmp    0x424317
  42435b:	mov    eax,eax
  42435d:	and    DWORD PTR ds:0x42919b,0x3c1b
  424367:	mov    eax,DWORD PTR [ebp-0x4]
  42436a:	add    DWORD PTR ds:0x4291df,0x7092
  424374:	mov    edi,DWORD PTR [ebp-0x8]
  424377:	adc    DWORD PTR ds:0x429193,edx
  42437d:	mov    ecx,0x75108ac
  424382:	mov    edx,DWORD PTR ds:0x42917b
  424388:	and    DWORD PTR ds:0x4291e7,edx
  42438e:	xor    eax,ecx
  424390:	add    DWORD PTR ds:0x4291df,0x314e
  42439a:	xor    edi,ecx
  42439c:	mov    edx,DWORD PTR ds:0x42a0ab
  4243a2:	mov    edx,DWORD PTR [edx]
  4243a4:	adc    DWORD PTR ds:0x4291ab,edx
  4243aa:	mov    edx,0x3272f3
  4243af:	add    edi,edx
  4243b1:	add    eax,edx
  4243b3:	imul   eax,edi
  4243b6:	mov    edi,DWORD PTR [ebp+0xc]
  4243b9:	cmp    edi,eax
  4243bb:	je     0x424410
  4243c1:	mov    DWORD PTR [ebp-0xc],esi
  4243c4:	mov    eax,DWORD PTR [ebp-0xc]
  4243c7:	mov    esi,DWORD PTR [ebp+0xc]
  4243ca:	xor    eax,ecx
  4243cc:	lea    eax,[eax*8+0x1939810]
  4243d3:	mov    eax,DWORD PTR [esi+eax*1]
  4243d6:	mov    DWORD PTR [ebp+0xc],eax
  4243d9:	mov    eax,DWORD PTR [ebp-0x4]
  4243dc:	mov    esi,DWORD PTR [ebp-0x8]
  4243df:	xor    eax,ecx
  4243e1:	xor    esi,ecx
  4243e3:	add    esi,edx
  4243e5:	add    eax,edx
  4243e7:	imul   eax,esi
  4243ea:	mov    esi,DWORD PTR [ebp+0xc]
  4243ed:	cmp    esi,eax
  4243ef:	je     0x424410
  4243f5:	mov    eax,DWORD PTR [ebp-0x4]
  4243f8:	xor    eax,ecx
  4243fa:	mov    ecx,DWORD PTR [ebp+0xc]
  4243fd:	add    eax,edx
  4243ff:	imul   eax,ecx
  424402:	add    eax,DWORD PTR [ebp+0x8]
  424405:	mov    DWORD PTR [ebp+0xc],eax
  424408:	mov    eax,DWORD PTR [ebp+0xc]
  42440b:	jmp    0x424421
  424410:	mov    eax,DWORD PTR [ebp-0x4]
  424413:	mov    esi,DWORD PTR [ebp-0x8]
  424416:	xor    esi,ecx
  424418:	xor    eax,ecx
  42441a:	add    esi,edx
  42441c:	add    eax,edx
  42441e:	imul   eax,esi
  424421:	pop    edi
  424422:	pop    esi
  424423:	leave  
  424424:	ret    0x8
	...
  424433:	add    BYTE PTR [ebx],dl
  424435:	push   esp
  424436:	test   BYTE PTR [ebp+0x0],cl
  424439:	add    BYTE PTR [eax],al
  42443b:	add    BYTE PTR [edx],al
  42443d:	add    BYTE PTR [eax],al
  42443f:	add    BYTE PTR [eax],dh
  424441:	add    BYTE PTR [eax],al
  424443:	add    BYTE PTR [eax+0x44],dl
  424446:	add    al,BYTE PTR [eax]
  424448:	push   eax
  424449:	cmp    BYTE PTR [edx],al
  42444b:	add    BYTE PTR [eax],al
  42444d:	add    BYTE PTR [eax],al
  42444f:	add    BYTE PTR [edx+0x53],dl
  424452:	inc    esp
  424453:	push   ebx
  424454:	call   DWORD PTR [esi+0x4d]
  424457:	jmp    0x424410
  424459:	retf   
  42445a:	repz dec eax
  42445c:	lea    esp,[ebx]
  42445e:	sub    BYTE PTR [ebx+0x2a],ah
  424461:	mov    ah,0xa
  424463:	fld    QWORD PTR [ecx]
  424465:	add    BYTE PTR [eax],al
  424467:	add    BYTE PTR [esi+0x3a],al
  42446a:	pop    esp
  42446b:	push   edi
  42446c:	imul   ebp,DWORD PTR [esi+0x64],0x2073776f
  424473:	inc    esp
  424474:	imul   esi,DWORD PTR [edx+0x5c],0x656c6946
  42447b:	inc    ebp
  42447c:	js     0x4244e3
  42447e:	arpl   WORD PTR [eax],ax
  424480:	mov    edx,DWORD PTR [ebp-0x14]
  424483:	sub    esp,0x108
  424489:	push   ebx
  42448a:	mov    eax,ebx
  42448c:	xchg   ecx,eax
  42448d:	mov    eax,DWORD PTR [ebp+0x8]
  424490:	cmp    eax,0xf89c85a1
  424495:	jne    0x424952
  42449b:	mov    eax,DWORD PTR [ebp+0xc]
  42449e:	cmp    eax,0xf89c85a2
  4244a3:	jne    0x424952
  4244a9:	mov    eax,DWORD PTR [ebp+0x24]
  4244ac:	mov    DWORD PTR [ebp-0x4],eax
  4244af:	mov    eax,DWORD PTR [ebp-0x4]
  4244b2:	mov    eax,DWORD PTR [eax+0x1d8]
  4244b8:	mov    eax,DWORD PTR [eax]
  4244ba:	mov    eax,DWORD PTR [eax]
  4244bc:	mov    DWORD PTR [ebp-0x8],eax
  4244bf:	mov    BYTE PTR [ebp-0x18],0x18
  4244c3:	mov    BYTE PTR [ebp-0x17],0x1f
  4244c7:	mov    BYTE PTR [ebp-0x16],0x1a
  4244cb:	mov    BYTE PTR [ebp-0x15],0x4c
  4244cf:	mov    BYTE PTR [ebp-0x14],0x4d
  4244d3:	mov    BYTE PTR [ebp-0x13],0x83
  4244d7:	mov    BYTE PTR [ebp-0x20],0xe
  4244db:	mov    BYTE PTR [ebp-0x1f],0xc
  4244df:	mov    BYTE PTR [ebp-0x1e],0x1e
  4244e3:	mov    BYTE PTR [ebp-0x1d],0xd
  4244e7:	mov    BYTE PTR [ebp-0x1c],0x4c
  4244eb:	mov    BYTE PTR [ebp-0x1b],0x4d
  4244ef:	mov    BYTE PTR [ebp-0x1a],0x83
  4244f3:	mov    BYTE PTR [ebp-0x28],0xc
  4244f7:	mov    BYTE PTR [ebp-0x27],0x1b
  4244fb:	mov    BYTE PTR [ebp-0x26],0x17
  4244ff:	mov    BYTE PTR [ebp-0x25],0x8
  424503:	mov    BYTE PTR [ebp-0x24],0x22
  424507:	mov    BYTE PTR [ebp-0x23],0x13
  42450b:	mov    BYTE PTR [ebp-0x22],0x1a
  42450f:	mov    BYTE PTR [ebp-0x21],0x83
  424513:	xor    ecx,ecx
  424515:	lea    eax,[ebp+ecx*1-0x18]
  424519:	movzx  edx,BYTE PTR [eax]
  42451c:	xor    edx,0x7d
  42451f:	add    edx,0x2
  424522:	inc    ecx
  424523:	mov    BYTE PTR [eax],dl
  424525:	cmp    ecx,0x6
  424528:	jb     0x424515
  42452a:	xor    ecx,ecx
  42452c:	lea    eax,[ebp+ecx*1-0x20]
  424530:	movzx  edx,BYTE PTR [eax]
  424533:	xor    edx,0x7d
  424536:	add    edx,0x2
  424539:	inc    ecx
  42453a:	mov    BYTE PTR [eax],dl
  42453c:	cmp    ecx,0x7
  42453f:	jb     0x42452c
  424541:	xor    ecx,ecx
  424543:	lea    eax,[ebp+ecx*1-0x28]
  424547:	movzx  edx,BYTE PTR [eax]
  42454a:	xor    edx,0x7d
  42454d:	add    edx,0x2
  424550:	inc    ecx
  424551:	mov    BYTE PTR [eax],dl
  424553:	cmp    ecx,0x8
  424556:	jb     0x424543
  424558:	lea    eax,[ebp-0x2c]
  42455b:	mov    DWORD PTR [ebp-0x8],eax
  42455e:	mov    ecx,DWORD PTR [ebp-0x8]
  424561:	mov    eax,0x7113fccf
  424566:	mov    DWORD PTR [ecx],eax
  424568:	mov    ecx,DWORD PTR [ebp-0x2c]
  42456b:	push   esi
  42456c:	push   edi
  42456d:	mov    esi,0x4e3c
  424572:	mov    ebx,0x3272f3
  424577:	cmp    ecx,eax
  424579:	jne    0x424644
  42457f:	lea    eax,[esi+0x3b]
  424582:	mov    WORD PTR [ebp-0x78],ax
  424586:	mov    eax,esi
  424588:	mov    WORD PTR [ebp-0x76],ax
  42458c:	add    eax,0x35
  42458f:	mov    WORD PTR [ebp-0x74],ax
  424593:	lea    eax,[esi+0x2]
  424596:	mov    WORD PTR [ebp-0x72],ax
  42459a:	add    eax,0x41
  42459d:	mov    ecx,eax
  42459f:	lea    eax,[esi-0x13]
  4245a2:	mov    WORD PTR [ebp-0x66],ax
  4245a6:	mov    eax,esi
  4245a8:	mov    WORD PTR [ebp-0x64],ax
  4245ac:	add    eax,0xffffffec
  4245af:	mov    WORD PTR [ebp-0x62],ax
  4245b3:	mov    eax,0x443
  4245b8:	mov    WORD PTR [ebp-0x60],ax
  4245bc:	mov    eax,0x5672
  4245c1:	mov    WORD PTR [ebp-0x5e],ax
  4245c5:	mov    eax,0x6112
  4245ca:	mov    WORD PTR [ebp-0x5c],ax
  4245ce:	lea    eax,[ebp-0xe0]
  4245d4:	push   eax
  4245d5:	mov    eax,DWORD PTR [ebp+0xc]
  4245d8:	mov    edi,0x75108ac
  4245dd:	xor    eax,edi
  4245df:	add    eax,ebx
  4245e1:	push   eax
  4245e2:	mov    WORD PTR [ebp-0x70],cx
  4245e6:	lea    ecx,[esi-0xa]
  4245e9:	mov    edx,ecx
  4245eb:	lea    eax,[ebp-0x78]
  4245ee:	push   eax
  4245ef:	mov    eax,DWORD PTR [ebp-0x4]
  4245f2:	mov    eax,DWORD PTR [eax+0x198]
  4245f8:	mov    WORD PTR [ebp-0x6e],dx
  4245fc:	mov    edx,0x4f88
  424601:	mov    WORD PTR [ebp-0x6c],dx
  424605:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  42460c:	mov    DWORD PTR [ebp-0x5a],0x4e32f1e4
  424613:	mov    DWORD PTR [ebp-0xe0],0x1
  42461d:	mov    DWORD PTR [ebp-0xdc],0x255
  424627:	push   DWORD PTR [eax]
  424629:	mov    eax,DWORD PTR [ebp+0x10]
  42462c:	call   eax
  42462e:	mov    DWORD PTR [ebp-0x8],eax
  424631:	mov    eax,DWORD PTR [ebp-0x8]
  424634:	test   eax,eax
  424636:	je     0x424649
  424638:	xor    DWORD PTR ds:0x76586876,0x87687666
  424642:	jmp    0x424649
  424644:	mov    edi,0x75108ac
  424649:	mov    eax,DWORD PTR [ebp-0x4]
  42464c:	mov    ecx,DWORD PTR [eax+0x18c]
  424652:	xor    eax,eax
  424654:	cmp    DWORD PTR [ecx],eax
  424656:	jne    0x4248c5
  42465c:	mov    ecx,DWORD PTR [ebp-0x4]
  42465f:	mov    ecx,DWORD PTR [ecx+0x17c]
  424665:	mov    DWORD PTR [ecx],eax
  424667:	mov    ecx,DWORD PTR [ebp-0x4]
  42466a:	mov    ecx,DWORD PTR [ecx+0x180]
  424670:	mov    DWORD PTR [ecx],eax
  424672:	mov    eax,0x4e61
  424677:	mov    WORD PTR [ebp-0x9c],ax
  42467e:	mov    eax,esi
  424680:	mov    WORD PTR [ebp-0x9a],ax
  424687:	mov    eax,0x4e71
  42468c:	mov    WORD PTR [ebp-0x98],ax
  424693:	add    eax,0xffffffc0
  424696:	mov    WORD PTR [ebp-0x96],ax
  42469d:	mov    eax,0x4f8c
  4246a2:	mov    WORD PTR [ebp-0x94],ax
  4246a9:	mov    eax,0x4e30
  4246ae:	mov    WORD PTR [ebp-0x92],ax
  4246b5:	add    eax,0x4f
  4246b8:	mov    WORD PTR [ebp-0x90],ax
  4246bf:	mov    eax,0x4e32
  4246c4:	mov    WORD PTR [ebp-0x8e],ax
  4246cb:	mov    eax,esi
  4246cd:	mov    WORD PTR [ebp-0x8c],ax
  4246d4:	mov    eax,0x4e35
  4246d9:	mov    WORD PTR [ebp-0x8a],ax
  4246e0:	mov    eax,0x99f1
  4246e5:	mov    WORD PTR [ebp-0x88],ax
  4246ec:	mov    eax,0x8d60
  4246f1:	mov    WORD PTR [ebp-0x86],ax
  4246f8:	mov    eax,0xd66f
  4246fd:	mov    WORD PTR [ebp-0x84],ax
  424704:	mov    eax,0xd783
  424709:	mov    WORD PTR [ebp-0x82],ax
  424710:	mov    eax,0x2782
  424715:	mov    WORD PTR [ebp-0x80],ax
  424719:	mov    eax,0x4782
  42471e:	mov    WORD PTR [ebp-0x7e],ax
  424722:	mov    eax,0x4e33
  424727:	push   0x8
  424729:	mov    WORD PTR [ebp-0x7c],ax
  42472d:	mov    DWORD PTR [ebp-0x10],0x8171b0c
  424734:	mov    DWORD PTR [ebp-0xc],0x831a1322
  42473b:	lea    eax,[ebp-0x10]
  42473e:	pop    ecx
  42473f:	mov    dl,BYTE PTR [eax]
  424741:	xor    dl,0x7d
  424744:	add    dl,0x2
  424747:	mov    BYTE PTR [eax],dl
  424749:	inc    eax
  42474a:	dec    ecx
  42474b:	jne    0x42473f
  42474d:	lea    eax,[ebp-0x10]
  424750:	mov    DWORD PTR [ebp-0xdc],eax
  424756:	lea    eax,[ebp-0xe0]
  42475c:	push   eax
  42475d:	mov    eax,DWORD PTR [ebp+0xc]
  424760:	xor    eax,edi
  424762:	add    eax,ebx
  424764:	push   eax
  424765:	mov    eax,DWORD PTR [ebp-0x4]
  424768:	add    eax,0x66
  42476b:	push   eax
  42476c:	mov    eax,DWORD PTR [ebp-0x4]
  42476f:	mov    eax,DWORD PTR [eax+0x198]
  424775:	mov    DWORD PTR [ebp-0xe0],0x1
  42477f:	push   DWORD PTR [eax]
  424781:	mov    eax,DWORD PTR [ebp+0x10]
  424784:	call   eax
  424786:	mov    ecx,DWORD PTR [ebp+0x8]
  424789:	xor    ecx,edi
  42478b:	add    ecx,ebx
  42478d:	mov    DWORD PTR [ebp-0x8],eax
  424790:	cmp    eax,ecx
  424792:	jne    0x4247ad
  424794:	mov    eax,ds:0x33730bc8
  424799:	or     eax,0x22150bcf
  42479e:	mov    ds:0x33730bc8,eax
  4247a3:	add    eax,0x3372e92f
  4247a8:	mov    ds:0x33730bc8,eax
  4247ad:	mov    ecx,0x4e64
  4247b2:	mov    eax,ecx
  4247b4:	mov    WORD PTR [ebp-0x40],ax
  4247b8:	add    eax,0x7
  4247bb:	mov    edx,eax
  4247bd:	mov    WORD PTR [ebp-0x3e],dx
  4247c1:	mov    edx,0x4f93
  4247c6:	mov    WORD PTR [ebp-0x3c],dx
  4247ca:	add    edx,0xfffffff8
  4247cd:	mov    WORD PTR [ebp-0x3a],dx
  4247d1:	mov    edx,0x4f8d
  4247d6:	mov    WORD PTR [ebp-0x38],dx
  4247da:	inc    edx
  4247db:	mov    WORD PTR [ebp-0x36],dx
  4247df:	mov    edx,0x4f87
  4247e4:	mov    WORD PTR [ebp-0x34],dx
  4247e8:	mov    WORD PTR [ebp-0x32],cx
  4247ec:	mov    ecx,esi
  4247ee:	mov    WORD PTR [ebp-0x30],cx
  4247f2:	lea    ecx,[edx-0x3]
  4247f5:	mov    edx,ecx
  4247f7:	mov    WORD PTR [ebp-0x54],dx
  4247fb:	mov    edx,eax
  4247fd:	mov    WORD PTR [ebp-0x52],dx
  424801:	mov    edx,0x4e73
  424806:	mov    WORD PTR [ebp-0x50],dx
  42480a:	mov    WORD PTR [ebp-0x4e],ax
  42480e:	lea    eax,[edx-0x6]
  424811:	mov    WORD PTR [ebp-0x4c],ax
  424815:	inc    eax
  424816:	mov    WORD PTR [ebp-0x4a],ax
  42481a:	lea    eax,[edx-0xc]
  42481d:	mov    WORD PTR [ebp-0x48],ax
  424821:	mov    WORD PTR [ebp-0x46],cx
  424825:	mov    WORD PTR [ebp-0x44],si
  424829:	mov    eax,DWORD PTR [ebp+0x8]
  42482c:	movzx  ecx,WORD PTR [ebp-0x54]
  424830:	xor    eax,edi
  424832:	add    eax,ebx
  424834:	xor    eax,ecx
  424836:	mov    WORD PTR [ebp-0x54],ax
  42483a:	mov    eax,DWORD PTR [ebp+0x8]
  42483d:	movzx  ecx,WORD PTR [ebp-0x40]
  424841:	xor    eax,edi
  424843:	add    eax,ebx
  424845:	xor    eax,ecx
  424847:	mov    WORD PTR [ebp-0x40],ax
  42484b:	xor    eax,eax
  42484d:	mov    WORD PTR [ebp-0xf4],ax
  424854:	mov    WORD PTR [ebp-0x108],ax
  42485b:	mov    edi,DWORD PTR [ebp+0x24]
  42485e:	lea    eax,[ebp-0xf4]
  424864:	lea    edx,[ebp-0x54]
  424867:	mov    DWORD PTR [ebp-0xe0],0x2
  424871:	mov    DWORD PTR [ebp-0xdc],eax
  424877:	call   0x4272b1
  42487c:	mov    DWORD PTR [ebp-0xd8],eax
  424882:	lea    eax,[ebp-0xe0]
  424888:	push   eax
  424889:	mov    eax,DWORD PTR [ebp+0xc]
  42488c:	xor    eax,0x75108ac
  424891:	add    eax,ebx
  424893:	push   eax
  424894:	lea    eax,[ebp-0x9c]
  42489a:	push   eax
  42489b:	push   DWORD PTR [ebp-0x8]
  42489e:	mov    eax,DWORD PTR [ebp+0x10]
  4248a1:	call   eax
  4248a3:	mov    edi,DWORD PTR [ebp+0x24]
  4248a6:	lea    eax,[ebp-0x108]
  4248ac:	lea    edx,[ebp-0x40]
  4248af:	mov    DWORD PTR [ebp-0xdc],eax
  4248b5:	call   0x4272b1
  4248ba:	mov    DWORD PTR [ebp-0xd8],eax
  4248c0:	mov    edi,0x75108ac
  4248c5:	mov    eax,DWORD PTR [ebp+0x14]
  4248c8:	push   DWORD PTR [ebp-0x4]
  4248cb:	push   DWORD PTR [ebp+0x20]
  4248ce:	push   DWORD PTR [ebp+0x1c]
  4248d1:	push   DWORD PTR [ebp+0x18]
  4248d4:	push   DWORD PTR [ebp+0x10]
  4248d7:	push   DWORD PTR [ebp+0x8]
  4248da:	push   DWORD PTR [ebp+0xc]
  4248dd:	call   0x425b50
  4248e2:	test   eax,eax
  4248e4:	je     0x424928
  4248e6:	add    DWORD PTR [ebp-0x4],eax
  4248e9:	push   DWORD PTR [ebp-0x4]
  4248ec:	lea    esi,[ebp+0x4]
  4248ef:	call   0x424d40
  4248f4:	mov    eax,DWORD PTR [ebp-0x4]
  4248f7:	mov    eax,DWORD PTR [eax+0x1c8]
  4248fd:	mov    eax,DWORD PTR [eax]
  4248ff:	xor    eax,edi
  424901:	add    eax,ebx
  424903:	mov    eax,DWORD PTR [ebp-0x4]
  424906:	jne    0x42491e
  424908:	mov    ecx,DWORD PTR [ebp-0x4]
  42490b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424911:	push   DWORD PTR [ecx]
  424913:	mov    eax,DWORD PTR [eax+0x1e0]
  424919:	call   DWORD PTR [eax+0x28]
  42491c:	jmp    0x424928
  42491e:	mov    eax,DWORD PTR [eax+0x17c]
  424924:	mov    eax,DWORD PTR [eax]
  424926:	add    DWORD PTR [esi],eax
  424928:	mov    eax,DWORD PTR [ebp-0x4]
  42492b:	mov    eax,DWORD PTR [eax+0x1dc]
  424931:	dec    DWORD PTR [eax]
  424933:	mov    ecx,DWORD PTR [ebp-0x4]
  424936:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42493c:	mov    eax,DWORD PTR [eax]
  42493e:	lea    eax,[ecx+eax*4]
  424941:	mov    ecx,DWORD PTR [ebp-0x4]
  424944:	mov    ecx,DWORD PTR [ecx+0x17c]
  42494a:	mov    eax,DWORD PTR [eax]
  42494c:	mov    ecx,DWORD PTR [ecx]
  42494e:	add    DWORD PTR [eax],ecx
  424950:	pop    edi
  424951:	pop    esi
  424952:	pop    ebx
  424953:	leave  
  424954:	ret    0x20
  424957:	push   edi
  424958:	push   esi
  424959:	push   ebx
  42495a:	push   ebp
  42495b:	mov    ebp,esp
  42495d:	mov    eax,DWORD PTR [ebp+0x24]
  424960:	add    DWORD PTR [ebp+0x28],eax
  424963:	push   eax
  424964:	cld    
  424965:	mov    esi,DWORD PTR [ebp+0x18]
  424968:	add    DWORD PTR [ebp+0x1c],esi
  42496b:	push   esi
  42496c:	mov    esi,DWORD PTR [ebp+0x14]
  42496f:	lods   eax,DWORD PTR ds:[esi]
  424970:	xchg   edx,eax
  424971:	push   edx
  424972:	mov    cl,BYTE PTR [esi-0x2]
  424975:	or     eax,0xffffffff
  424978:	shl    eax,cl
  42497a:	not    eax
  42497c:	push   eax
  42497d:	mov    cl,dh
  42497f:	or     eax,0xffffffff
  424982:	shl    eax,cl
  424984:	not    eax
  424986:	push   eax
  424987:	add    cl,dl
  424989:	mov    edi,esi
  42498b:	sub    esp,0xc
  42498e:	sub    eax,eax
  424990:	inc    eax
  424991:	push   eax
  424992:	push   eax
  424993:	push   eax
  424994:	push   eax
  424995:	push   eax
  424996:	push   edi
  424997:	sub    esi,esi
  424999:	push   esi
  42499a:	or     ebx,0xffffffff
  42499d:	mov    eax,0x300
  4249a2:	shl    eax,cl
  4249a4:	lea    ecx,[eax+0x736]
  4249aa:	mov    eax,0x4000400
  4249af:	shr    ecx,1
  4249b1:	rep stos DWORD PTR es:[edi],eax
  4249b3:	push   0x5
  4249b5:	pop    ecx
  4249b6:	call   0x424ca1
  4249bb:	loop   0x4249b6
  4249bd:	lea    esi,[esi]
  4249bf:	lea    edi,[edi]
  4249c1:	mov    edi,DWORD PTR [ebp-0x4]
  4249c4:	mov    eax,DWORD PTR [ebp-0x10]
  4249c7:	sub    edi,DWORD PTR [ebp+0x24]
  4249ca:	and    eax,edi
  4249cc:	mov    DWORD PTR [ebp-0x18],eax
  4249cf:	mov    al,0x0
  4249d1:	call   0x424cb9
  4249d6:	jne    0x424a71
  4249dc:	mov    cl,BYTE PTR [ebp-0xc]
  4249df:	and    edi,DWORD PTR [ebp-0x14]
  4249e2:	shl    edi,cl
  4249e4:	sub    cl,0x8
  4249e7:	neg    cl
  4249e9:	shr    esi,cl
  4249eb:	pop    eax
  4249ec:	add    edi,esi
  4249ee:	pop    esi
  4249ef:	lea    edi,[edi+edi*2]
  4249f2:	shl    edi,0x8
  4249f5:	cmp    al,0x7
  4249f7:	pop    edx
  4249f8:	lea    ecx,[esi+edi*2+0xe6c]
  4249ff:	push   ecx
  424a00:	push   esi
  424a01:	mov    esi,0x100
  424a06:	push   eax
  424a07:	mov    al,0x1
  424a09:	jb     0x424a3f
  424a0b:	mov    edi,DWORD PTR [ebp-0x4]
  424a0e:	sub    edi,DWORD PTR [ebp-0x24]
  424a11:	movzx  edi,BYTE PTR [edi]
  424a14:	mov    ebp,DWORD PTR [ebp-0x34]
  424a17:	shl    edi,1
  424a19:	mov    ecx,esi
  424a1b:	and    esi,edi
  424a1d:	add    ecx,esi
  424a1f:	lea    ebp,[ebp+ecx*2+0x0]
  424a23:	call   0x424cd8
  424a28:	mov    ecx,eax
  424a2a:	shr    esi,0x8
  424a2d:	and    ecx,0x1
  424a30:	cmp    esi,ecx
  424a32:	mov    esi,0x100
  424a37:	jne    0x424a47
  424a39:	cmp    eax,esi
  424a3b:	jb     0x424a14
  424a3d:	jmp    0x424a53
  424a3f:	mov    ebp,DWORD PTR [ebp-0x34]
  424a42:	call   0x424cd8
  424a47:	inc    eax
  424a48:	inc    esi
  424a49:	sub    eax,0x1
  424a4c:	sub    esi,0x1
  424a4f:	cmp    eax,esi
  424a51:	jb     0x424a3f
  424a53:	pop    edx
  424a54:	inc    edx
  424a55:	cmp    edx,0x5
  424a58:	dec    edx
  424a59:	mov    ecx,edx
  424a5b:	jb     0x424a6c
  424a5d:	inc    edx
  424a5e:	cmp    edx,0xb
  424a61:	dec    edx
  424a62:	mov    cl,0x4
  424a64:	dec    cl
  424a66:	jb     0x424a6c
  424a68:	mov    cl,0x7
  424a6a:	dec    cl
  424a6c:	sub    edx,ecx
  424a6e:	push   edx
  424a6f:	jmp    0x424ac0
  424a71:	mov    al,0xc1
  424a73:	dec    al
  424a75:	call   0x424cc9
  424a7a:	jne    0x424a90
  424a7c:	pop    eax
  424a7d:	pop    edi
  424a7e:	pop    edx
  424a7f:	pop    ecx
  424a80:	pop    edx
  424a81:	pop    ecx
  424a82:	push   DWORD PTR [esp]
  424a85:	push   ecx
  424a86:	push   edx
  424a87:	mov    edx,0x664
  424a8c:	mov    cl,0x0
  424a8e:	jmp    0x424b03
  424a90:	mov    al,0xcd
  424a92:	dec    al
  424a94:	call   0x424cc9
  424a99:	jne    0x424ac9
  424a9b:	mov    al,0xf1
  424a9d:	dec    al
  424a9f:	call   0x424cb9
  424aa4:	jne    0x424af9
  424aa6:	pop    eax
  424aa7:	cmp    al,0x7
  424aa9:	mov    al,0x9
  424aab:	jb     0x424aaf
  424aad:	mov    al,0xb
  424aaf:	push   eax
  424ab0:	mov    esi,DWORD PTR [ebp-0x4]
  424ab3:	sub    esi,DWORD PTR [ebp-0x24]
  424ab6:	cmp    esi,DWORD PTR [ebp+0x24]
  424ab9:	jb     0x424c90
  424abf:	lods   al,BYTE PTR ds:[esi]
  424ac0:	mov    edi,DWORD PTR [ebp-0x4]
  424ac3:	stos   BYTE PTR es:[edi],al
  424ac4:	jmp    0x424c57
  424ac9:	mov    al,0xd8
  424acb:	call   0x424cc9
  424ad0:	mov    esi,DWORD PTR [ebp-0x28]
  424ad3:	je     0x424af0
  424ad5:	mov    al,0xe4
  424ad7:	call   0x424cc9
  424adc:	mov    esi,DWORD PTR [ebp-0x2c]
  424adf:	je     0x424aea
  424ae1:	mov    esi,DWORD PTR [ebp-0x30]
  424ae4:	mov    ecx,DWORD PTR [ebp-0x2c]
  424ae7:	mov    DWORD PTR [ebp-0x30],ecx
  424aea:	mov    ecx,DWORD PTR [ebp-0x28]
  424aed:	mov    DWORD PTR [ebp-0x2c],ecx
  424af0:	mov    ecx,DWORD PTR [ebp-0x24]
  424af3:	mov    DWORD PTR [ebp-0x28],ecx
  424af6:	mov    DWORD PTR [ebp-0x24],esi
  424af9:	pop    eax
  424afa:	pop    edi
  424afb:	pop    ecx
  424afc:	mov    edx,0xa68
  424b01:	mov    cl,0x8
  424b03:	add    edx,edi
  424b05:	push   edx
  424b06:	push   edi
  424b07:	cmp    al,0x7
  424b09:	mov    al,cl
  424b0b:	jb     0x424b0f
  424b0d:	add    al,0x3
  424b0f:	push   eax
  424b10:	mov    ebp,DWORD PTR [ebp-0x34]
  424b13:	call   0x424cd6
  424b18:	jne    0x424b2e
  424b1a:	mov    eax,DWORD PTR [ebp-0x18]
  424b1d:	mov    edi,DWORD PTR [ebp-0x34]
  424b20:	shl    eax,0x3
  424b23:	sub    ecx,ecx
  424b25:	push   0x8
  424b27:	pop    esi
  424b28:	lea    edi,[edi+eax*2+0x4]
  424b2c:	jmp    0x424b63
  424b2e:	mov    ebp,DWORD PTR [ebp-0x34]
  424b31:	add    ebp,0x2
  424b34:	call   0x424cd6
  424b39:	jne    0x424b53
  424b3b:	mov    eax,DWORD PTR [ebp-0x18]
  424b3e:	mov    edi,DWORD PTR [ebp-0x34]
  424b41:	shl    eax,0x3
  424b44:	push   0x8
  424b46:	pop    ecx
  424b47:	push   0x8
  424b49:	pop    esi
  424b4a:	lea    edi,[edi+eax*2+0x104]
  424b51:	jmp    0x424b63
  424b53:	mov    edi,0x204
  424b58:	add    edi,DWORD PTR [ebp-0x34]
  424b5b:	push   0x10
  424b5d:	pop    ecx
  424b5e:	mov    esi,0x100
  424b63:	mov    DWORD PTR [ebp-0x1c],ecx
  424b66:	sub    eax,eax
  424b68:	inc    eax
  424b69:	mov    ebp,edi
  424b6b:	call   0x424cd8
  424b70:	mov    ecx,eax
  424b72:	sub    ecx,esi
  424b74:	jb     0x424b69
  424b76:	add    DWORD PTR [ebp-0x1c],ecx
  424b79:	cmp    DWORD PTR [ebp-0x3c],0x4
  424b7d:	jae    0x424c33
  424b83:	add    DWORD PTR [ebp-0x3c],0x7
  424b87:	mov    ecx,DWORD PTR [ebp-0x1c]
  424b8a:	cmp    ecx,0x4
  424b8d:	jb     0x424b92
  424b8f:	push   0x3
  424b91:	pop    ecx
  424b92:	mov    edi,DWORD PTR [ebp-0x38]
  424b95:	shl    ecx,0x6
  424b98:	sub    eax,eax
  424b9a:	inc    eax
  424b9b:	push   0x40
  424b9d:	pop    esi
  424b9e:	lea    edi,[edi+ecx*2+0x360]
  424ba5:	mov    ebp,edi
  424ba7:	call   0x424cd8
  424bac:	mov    ecx,eax
  424bae:	sub    ecx,esi
  424bb0:	jb     0x424ba5
  424bb2:	mov    DWORD PTR [ebp-0x18],ecx
  424bb5:	mov    DWORD PTR [ebp-0x24],ecx
  424bb8:	cmp    ecx,0x4
  424bbb:	jb     0x424c30
  424bbd:	mov    esi,ecx
  424bbf:	and    DWORD PTR [ebp-0x24],0x1
  424bc3:	shr    esi,1
  424bc5:	or     DWORD PTR [ebp-0x24],0x2
  424bc9:	dec    esi
  424bca:	cmp    ecx,0xe
  424bcd:	jae    0x424be8
  424bcf:	mov    eax,0x2af
  424bd4:	sub    eax,ecx
  424bd6:	mov    ecx,esi
  424bd8:	shl    BYTE PTR [ebp-0x24],cl
  424bdb:	add    eax,DWORD PTR [ebp-0x24]
  424bde:	shl    eax,1
  424be0:	add    eax,DWORD PTR [ebp-0x38]
  424be3:	mov    DWORD PTR [ebp-0x34],eax
  424be6:	jmp    0x424c15
  424be8:	sub    esi,0x4
  424beb:	call   0x424c95
  424bf0:	shr    ebx,1
  424bf2:	shl    DWORD PTR [ebp-0x24],1
  424bf5:	cmp    DWORD PTR [ebp-0x20],ebx
  424bf8:	jb     0x424c00
  424bfa:	inc    DWORD PTR [ebp-0x24]
  424bfd:	sub    DWORD PTR [ebp-0x20],ebx
  424c00:	dec    esi
  424c01:	jne    0x424beb
  424c03:	mov    eax,0x644
  424c08:	add    eax,DWORD PTR [ebp-0x38]
  424c0b:	mov    DWORD PTR [ebp-0x34],eax
  424c0e:	shl    DWORD PTR [ebp-0x24],0x4
  424c12:	push   0x4
  424c14:	pop    esi
  424c15:	sub    edi,edi
  424c17:	inc    edi
  424c18:	mov    eax,edi
  424c1a:	mov    ebp,DWORD PTR [ebp-0x34]
  424c1d:	call   0x424cd8
  424c22:	test   al,0x1
  424c24:	je     0x424c29
  424c26:	or     DWORD PTR [ebp-0x24],edi
  424c29:	shl    edi,1
  424c2b:	dec    esi
  424c2c:	jne    0x424c1a
  424c2e:	jmp    0x424c30
  424c30:	inc    DWORD PTR [ebp-0x24]
  424c33:	mov    ecx,DWORD PTR [ebp-0x1c]
  424c36:	add    ecx,0x2
  424c39:	mov    edi,DWORD PTR [ebp-0x4]
  424c3c:	mov    eax,edi
  424c3e:	sub    eax,DWORD PTR [ebp+0x24]
  424c41:	cmp    DWORD PTR [ebp-0x24],eax
  424c44:	ja     0x424c90
  424c46:	mov    esi,edi
  424c48:	sub    esi,DWORD PTR [ebp-0x24]
  424c4b:	mov    edx,DWORD PTR [ebp+0x28]
  424c4e:	lods   al,BYTE PTR ds:[esi]
  424c4f:	stos   BYTE PTR es:[edi],al
  424c50:	cmp    edi,edx
  424c52:	jae    0x424c57
  424c54:	dec    ecx
  424c55:	jne    0x424c4e
  424c57:	mov    DWORD PTR [ebp-0x4],edi
  424c5a:	movzx  esi,al
  424c5d:	cmp    edi,DWORD PTR [ebp+0x28]
  424c60:	jb     0x4249c1
  424c66:	call   0x424c95
  424c6b:	sub    eax,eax
  424c6d:	lea    ebp,[esp+0x3c]
  424c71:	mov    edx,DWORD PTR [ebp+0x20]
  424c74:	mov    esi,DWORD PTR [ebp-0x8]
  424c77:	sub    esi,DWORD PTR [ebp+0x18]
  424c7a:	mov    DWORD PTR [edx],esi
  424c7c:	mov    edx,DWORD PTR [ebp+0x2c]
  424c7f:	mov    edi,DWORD PTR [edx+edi*2+0x33]
  424c83:	jl     0x424c9c
  424c85:	lods   eax,DWORD PTR ds:[esi]
  424c86:	outs   dx,DWORD PTR ds:[esi]
  424c87:	scas   al,BYTE PTR es:[edi]
  424c88:	hlt    
  424c89:	add    BYTE PTR [edx+edx*4],al
  424c8c:	test   DWORD PTR [edi-0x75cc1800],0x8dea3688
  424c96:	jbe    0x424c1f
  424c98:	xchg   DWORD PTR [edi-0x6974af75],eax
  424c9e:	mov    ss,WORD PTR [esi]
  424ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ca1:	loopne 0x424c58
  424ca3:	pop    esp
  424ca4:	push   0x73
  424ca6:	pop    esp
  424ca7:	not    DWORD PTR [edx+ebx*1-0x4b]
  424cab:	pushf  
  424cac:	or     cl,BYTE PTR [esi-0x52c658f6]
  424cb2:	pushf  
  424cb3:	or     ch,BYTE PTR [ebp-0x69ff95a4]
  424cb9:	mov    ch,0xbc
  424cbb:	call   0x970e:0x8e8a61c3
  424cc2:	xchg   ebx,eax
  424cc3:	pushf  
  424cc4:	sub    dl,BYTE PTR [ebx-0x3c60c972]
  424cca:	popa   
  424ccb:	mov    dl,BYTE PTR [ebx+0x3cb59a9c]
  424cd1:	stos   BYTE PTR es:[edi],al
  424cd2:	mov    ebp,0x33879c38
  424cd7:	mov    bh,BYTE PTR [ebp-0x727863c8]
  424cdd:	jbe    0x424c66
  424cdf:	xchg   DWORD PTR [edi-0x4a08ab75],eax
  424ce5:	mov    eax,0x188e6717
  424cea:	pop    ss
  424ceb:	pop    es
  424cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ced:	jae    0x424ca7
  424cef:	pop    ss
  424cf0:	clc    
  424cf1:	push   esp
  424cf2:	stc    
  424cf3:	mov    cl,0xcb
  424cf5:	xchg   BYTE PTR [eax+0x168e6717],bl
  424cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cfc:	test   eax,0x8b0717d8
  424d01:	retf   
  424d02:	movzx  edx,WORD PTR [ebp+0x0]
  424d06:	shr    ecx,0xb
  424d09:	imul   ecx,edx
  424d0c:	cmp    DWORD PTR [esp+0x20],ecx
  424d10:	jae    0x424d29
  424d12:	mov    ebx,ecx
  424d14:	mov    ecx,0x800
  424d19:	sub    ecx,edx
  424d1b:	shr    ecx,0x5
  424d1e:	add    WORD PTR [ebp+0x0],cx
  424d22:	add    eax,eax
  424d24:	lea    ebp,[esp+0x40]
  424d28:	ret    
  424d29:	shr    edx,0x5
  424d2c:	sub    DWORD PTR [esp+0x20],ecx
  424d30:	sub    ebx,ecx
  424d32:	sub    WORD PTR [ebp+0x0],dx
  424d36:	add    eax,eax
  424d38:	add    eax,0x1
  424d3b:	lea    ebp,[esp+0x40]
  424d3f:	ret    
  424d40:	push   ebp
  424d41:	mov    ebp,esp
  424d43:	sub    esp,0x12c
  424d49:	push   ebx
  424d4a:	push   esi
  424d4b:	push   edi
  424d4c:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  424d53:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  424d5a:	mov    eax,DWORD PTR [ebp+0x8]
  424d5d:	mov    DWORD PTR [ebp+0x8],eax
  424d60:	mov    ecx,DWORD PTR [ebp-0x10]
  424d63:	mov    ebx,0x75108ac
  424d68:	xor    ecx,ebx
  424d6a:	mov    eax,0x3272f3
  424d6f:	add    ecx,eax
  424d71:	mov    DWORD PTR [ebp-0x24],ecx
  424d74:	mov    ecx,DWORD PTR [ebp-0x10]
  424d77:	xor    ecx,ebx
  424d79:	add    ecx,eax
  424d7b:	mov    DWORD PTR [ebp-0x40],ecx
  424d7e:	mov    ecx,DWORD PTR [ebp-0x10]
  424d81:	xor    ecx,ebx
  424d83:	add    ecx,eax
  424d85:	mov    DWORD PTR [ebp-0x3c],ecx
  424d88:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8b:	xor    ecx,ebx
  424d8d:	add    ecx,eax
  424d8f:	mov    DWORD PTR [ebp-0xd8],ecx
  424d95:	mov    DWORD PTR [ebp-0x50],0xf89f05a1
  424d9c:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a1
  424da3:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  424daa:	push   0x25
  424dac:	pop    ecx
  424dad:	mov    DWORD PTR [ebp-0x30],ecx
  424db0:	mov    DWORD PTR [ebp-0x30],ecx
  424db3:	push   0x65
  424db5:	pop    ecx
  424db6:	mov    DWORD PTR [ebp-0x30],ecx
  424db9:	mov    DWORD PTR [ebp-0x30],ecx
  424dbc:	mov    DWORD PTR [ebp-0x30],0x4d
  424dc3:	mov    DWORD PTR [ebp-0x30],0x43
  424dca:	mov    ecx,DWORD PTR [ebp-0x10]
  424dcd:	xor    ecx,ebx
  424dcf:	add    ecx,eax
  424dd1:	mov    DWORD PTR [ebp-0x30],ecx
  424dd4:	mov    ecx,DWORD PTR [ebp-0x10]
  424dd7:	xor    ecx,ebx
  424dd9:	add    ecx,eax
  424ddb:	mov    DWORD PTR [ebp-0x30],ecx
  424dde:	mov    DWORD PTR [ebp-0x28],0x258
  424de5:	mov    DWORD PTR [ebp-0x34],0x36
  424dec:	mov    DWORD PTR [ebp-0x14],0x7a
  424df3:	lea    edi,[ebp-0x10c]
  424df9:	lea    esi,[ebp-0x12c]
  424dff:	call   0x425abf
  424e04:	dec    DWORD PTR [ebp-0x14]
  424e07:	jne    0x424df3
  424e09:	dec    DWORD PTR [ebp-0x34]
  424e0c:	jne    0x424dec
  424e0e:	dec    DWORD PTR [ebp-0x28]
  424e11:	jne    0x424de5
  424e13:	mov    DWORD PTR [ebp-0x28],0x400e
  424e1a:	mov    eax,DWORD PTR [ebp-0x10]
  424e1d:	xor    eax,ebx
  424e1f:	mov    esi,0x3272f3
  424e24:	add    eax,esi
  424e26:	mov    DWORD PTR [ebp-0x1c],eax
  424e29:	mov    eax,DWORD PTR [ebp-0x10]
  424e2c:	and    DWORD PTR [ebp-0x94],0x0
  424e33:	xor    eax,ebx
  424e35:	add    eax,esi
  424e37:	mov    DWORD PTR [ebp-0x38],eax
  424e3a:	mov    eax,fs:0x18
  424e40:	mov    DWORD PTR [ebp-0x94],eax
  424e46:	mov    eax,DWORD PTR [eax+0x30]
  424e49:	mov    DWORD PTR [ebp-0xcc],eax
  424e4f:	mov    eax,DWORD PTR [eax+0xc]
  424e52:	mov    DWORD PTR [ebp-0xc0],eax
  424e58:	mov    eax,DWORD PTR [ebp+0x8]
  424e5b:	lea    ecx,[ebp-0x94]
  424e61:	mov    DWORD PTR [eax+0x1a0],ecx
  424e67:	mov    eax,DWORD PTR [ebp+0x8]
  424e6a:	lea    ecx,[ebp-0xcc]
  424e70:	mov    DWORD PTR [eax+0x1a4],ecx
  424e76:	mov    eax,DWORD PTR [ebp+0x8]
  424e79:	push   DWORD PTR [ebp+0x8]
  424e7c:	lea    ecx,[ebp-0xc0]
  424e82:	mov    DWORD PTR [eax+0x1a8],ecx
  424e88:	call   0x427282
  424e8d:	mov    ecx,DWORD PTR [ebp-0x10]
  424e90:	xor    ecx,ebx
  424e92:	add    ecx,esi
  424e94:	cmp    ecx,eax
  424e96:	je     0x425219
  424e9c:	mov    eax,DWORD PTR [ebp+0x8]
  424e9f:	mov    eax,DWORD PTR [eax+0x194]
  424ea5:	mov    ecx,DWORD PTR [eax]
  424ea7:	mov    eax,DWORD PTR [ebp+0x8]
  424eaa:	mov    eax,DWORD PTR [eax+0x194]
  424eb0:	mov    eax,DWORD PTR [eax]
  424eb2:	add    eax,DWORD PTR [ecx+0x3c]
  424eb5:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424ebe:	lea    edx,[ebp-0xec]
  424ec4:	push   edx
  424ec5:	mov    edx,DWORD PTR [ebp+0x8]
  424ec8:	mov    edx,DWORD PTR [edx+0x18c]
  424ece:	mov    edx,DWORD PTR [edx]
  424ed0:	add    edx,DWORD PTR [eax+0x88]
  424ed6:	push   0x4
  424ed8:	push   DWORD PTR [eax+0x8c]
  424ede:	push   edx
  424edf:	call   DWORD PTR [ecx+0x1c]
  424ee2:	push   DWORD PTR [ebp+0x8]
  424ee5:	xor    eax,eax
  424ee7:	mov    DWORD PTR [ebp-0xa8],0x1b3c0c3a
  424ef1:	mov    DWORD PTR [ebp-0xa4],0x10370d22
  424efb:	mov    DWORD PTR [ebp-0xa0],0x420d1e08
  424f05:	mov    BYTE PTR [ebp-0x9c],0x83
  424f0c:	lea    edi,[ebp-0x9b]
  424f12:	stos   DWORD PTR es:[edi],eax
  424f13:	stos   WORD PTR es:[edi],ax
  424f15:	stos   BYTE PTR es:[edi],al
  424f16:	xor    eax,eax
  424f18:	mov    DWORD PTR [ebp-0xbc],0x1b3c0c3a
  424f22:	mov    DWORD PTR [ebp-0xb8],0x10370d22
  424f2c:	mov    DWORD PTR [ebp-0xb4],0x280d1e08
  424f36:	mov    BYTE PTR [ebp-0xb0],0x83
  424f3d:	lea    edi,[ebp-0xaf]
  424f43:	stos   DWORD PTR es:[edi],eax
  424f44:	stos   WORD PTR es:[edi],ax
  424f46:	stos   BYTE PTR es:[edi],al
  424f47:	mov    edi,DWORD PTR [ebp+0x8]
  424f4a:	mov    eax,DWORD PTR [ebp+0x8]
  424f4d:	mov    edx,DWORD PTR [eax+0x1b8]
  424f53:	mov    DWORD PTR [ebp-0x68],0xd0f0c17
  424f5a:	mov    DWORD PTR [ebp-0x64],0x1a13161c
  424f61:	mov    WORD PTR [ebp-0x60],0x8342
  424f67:	mov    DWORD PTR [ebp-0x90],0x1b3c0c3a
  424f71:	mov    DWORD PTR [ebp-0x8c],0x17420d22
  424f7b:	mov    DWORD PTR [ebp-0x88],0x31221b13
  424f85:	mov    DWORD PTR [ebp-0x84],0xd1e160e
  424f8f:	mov    DWORD PTR [ebp-0x80],0x83421c1a
  424f96:	mov    DWORD PTR [ebp-0x7c],0x1b3c0c3a
  424f9d:	mov    DWORD PTR [ebp-0x78],0x17420d22
  424fa4:	mov    DWORD PTR [ebp-0x74],0x31221b13
  424fab:	mov    DWORD PTR [ebp-0x70],0xd1e160e
  424fb2:	mov    DWORD PTR [ebp-0x6c],0x83281c1a
  424fb9:	call   0x4272b1
  424fbe:	push   eax
  424fbf:	mov    eax,DWORD PTR [ebp+0x8]
  424fc2:	mov    eax,DWORD PTR [eax+0x1a8]
  424fc8:	push   DWORD PTR [eax]
  424fca:	call   0x426f52
  424fcf:	test   eax,eax
  424fd1:	jne    0x425023
  424fd3:	mov    eax,DWORD PTR [ebp+0x8]
  424fd6:	mov    eax,DWORD PTR [eax+0x1e0]
  424fdc:	mov    edi,DWORD PTR [ebp+0x8]
  424fdf:	add    eax,0x4
  424fe2:	mov    DWORD PTR [ebp-0x20],eax
  424fe5:	mov    eax,DWORD PTR [ebp+0x8]
  424fe8:	mov    edx,DWORD PTR [eax+0x1b8]
  424fee:	call   0x4272b1
  424ff3:	push   eax
  424ff4:	mov    eax,DWORD PTR [ebp-0x20]
  424ff7:	call   DWORD PTR [eax]
  424ff9:	test   eax,eax
  424ffb:	jne    0x425023
  424ffd:	mov    eax,DWORD PTR [ebp+0x8]
  425000:	mov    eax,DWORD PTR [eax+0x1e0]
  425006:	mov    edi,DWORD PTR [ebp+0x8]
  425009:	add    eax,0x10
  42500c:	mov    DWORD PTR [ebp-0x20],eax
  42500f:	mov    eax,DWORD PTR [ebp+0x8]
  425012:	mov    edx,DWORD PTR [eax+0x1b8]
  425018:	call   0x4272b1
  42501d:	push   eax
  42501e:	mov    eax,DWORD PTR [ebp-0x20]
  425021:	call   DWORD PTR [eax]
  425023:	mov    eax,DWORD PTR [ebp-0x10]
  425026:	mov    ecx,DWORD PTR [ebp-0x28]
  425029:	xor    eax,ebx
  42502b:	add    eax,esi
  42502d:	cmp    eax,ecx
  42502f:	je     0x4251f2
  425035:	mov    eax,DWORD PTR [ebp-0x18]
  425038:	xor    eax,ebx
  42503a:	mov    ecx,0xffcd8d0d
  42503f:	sub    ecx,eax
  425041:	add    ecx,DWORD PTR [ebp-0x28]
  425044:	mov    eax,DWORD PTR [ebp-0x1c]
  425047:	cmp    eax,ecx
  425049:	ja     0x4251f2
  42504f:	mov    DWORD PTR [ebp-0x34],0x0
  425056:	push   DWORD PTR [ebp+0x8]
  425059:	mov    edi,DWORD PTR [ebp+0x8]
  42505c:	mov    eax,DWORD PTR [ebp+0x8]
  42505f:	mov    edx,DWORD PTR [eax+0x1b4]
  425065:	call   0x4272b1
  42506a:	push   eax
  42506b:	mov    eax,DWORD PTR [ebp+0x8]
  42506e:	mov    eax,DWORD PTR [eax+0x1a8]
  425074:	push   DWORD PTR [eax]
  425076:	call   0x426f52
  42507b:	mov    ecx,DWORD PTR [ebp+0x8]
  42507e:	mov    ecx,DWORD PTR [ecx+0x19c]
  425084:	mov    DWORD PTR [ecx],eax
  425086:	mov    eax,DWORD PTR [ebp+0x8]
  425089:	mov    edi,DWORD PTR [eax+0x1e0]
  42508f:	mov    esi,DWORD PTR [ebp+0x8]
  425092:	xor    eax,eax
  425094:	lea    edx,[ebp-0x7c]
  425097:	call   0x4272e7
  42509c:	push   eax
  42509d:	mov    eax,DWORD PTR [ebp+0x8]
  4250a0:	mov    eax,DWORD PTR [eax+0x19c]
  4250a6:	push   DWORD PTR [eax]
  4250a8:	call   DWORD PTR [edi+0x8]
  4250ab:	mov    DWORD PTR [ebp-0x20],eax
  4250ae:	mov    eax,DWORD PTR [ebp+0x8]
  4250b1:	mov    edi,DWORD PTR [eax+0x1e0]
  4250b7:	mov    esi,DWORD PTR [ebp+0x8]
  4250ba:	xor    eax,eax
  4250bc:	lea    edx,[ebp-0x90]
  4250c2:	call   0x4272e7
  4250c7:	push   eax
  4250c8:	mov    eax,DWORD PTR [ebp+0x8]
  4250cb:	mov    eax,DWORD PTR [eax+0x19c]
  4250d1:	push   DWORD PTR [eax]
  4250d3:	call   DWORD PTR [edi+0x8]
  4250d6:	mov    eax,DWORD PTR [ebp+0x8]
  4250d9:	mov    edi,DWORD PTR [eax+0x1e0]
  4250df:	mov    esi,DWORD PTR [ebp+0x8]
  4250e2:	xor    eax,eax
  4250e4:	lea    edx,[ebp-0xa8]
  4250ea:	call   0x4272e7
  4250ef:	push   eax
  4250f0:	mov    eax,DWORD PTR [ebp+0x8]
  4250f3:	mov    eax,DWORD PTR [eax+0x19c]
  4250f9:	push   DWORD PTR [eax]
  4250fb:	call   DWORD PTR [edi+0x8]
  4250fe:	and    DWORD PTR [ebp-0x8],0x0
  425102:	mov    DWORD PTR [ebp-0x48],eax
  425105:	mov    eax,DWORD PTR [ebp-0x8]
  425108:	and    eax,0x7
  42510b:	add    eax,0x31
  42510e:	push   eax
  42510f:	call   DWORD PTR [ebp-0x20]
  425112:	test   eax,eax
  425114:	je     0x425158
  425116:	mov    eax,DWORD PTR [ebp-0x8]
  425119:	push   0x19
  42511b:	xor    edx,edx
  42511d:	pop    ecx
  42511e:	div    ecx
  425120:	add    dl,0x41
  425123:	movzx  eax,dl
  425126:	push   eax
  425127:	call   DWORD PTR [ebp-0x48]
  42512a:	test   eax,eax
  42512c:	jne    0x425158
  42512e:	mov    eax,DWORD PTR [ebp+0x8]
  425131:	mov    edi,DWORD PTR [eax+0x1e0]
  425137:	mov    esi,DWORD PTR [ebp+0x8]
  42513a:	xor    eax,eax
  42513c:	lea    edx,[ebp-0x68]
  42513f:	call   0x4272e7
  425144:	push   eax
  425145:	mov    eax,DWORD PTR [ebp+0x8]
  425148:	mov    eax,DWORD PTR [eax+0x198]
  42514e:	push   DWORD PTR [eax]
  425150:	call   DWORD PTR [edi+0x8]
  425153:	mov    DWORD PTR [ebp-0x14],eax
  425156:	jmp    0x42515c
  425158:	and    DWORD PTR [ebp-0x14],0x0
  42515c:	inc    DWORD PTR [ebp-0x8]
  42515f:	cmp    DWORD PTR [ebp-0x8],0x10
  425163:	jb     0x425105
  425165:	mov    eax,DWORD PTR [ebp-0x18]
  425168:	mov    esi,DWORD PTR [ebp+0x8]
  42516b:	xor    eax,ebx
  42516d:	mov    edi,0x3272f3
  425172:	add    eax,edi
  425174:	lea    edx,[ebp-0x10c]
  42517a:	call   0x4272e7
  42517f:	push   eax
  425180:	mov    eax,DWORD PTR [ebp-0x10]
  425183:	mov    esi,DWORD PTR [ebp+0x8]
  425186:	xor    eax,ebx
  425188:	add    eax,edi
  42518a:	lea    edx,[ebp-0x12c]
  425190:	call   0x4272e7
  425195:	push   eax
  425196:	call   DWORD PTR [ebp-0x14]
  425199:	mov    ecx,DWORD PTR [ebp-0x10]
  42519c:	xor    ecx,ebx
  42519e:	add    ecx,edi
  4251a0:	cmp    ecx,eax
  4251a2:	jne    0x4251ab
  4251a4:	mov    DWORD PTR [ebp-0x34],0x1
  4251ab:	mov    eax,DWORD PTR [ebp-0x18]
  4251ae:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251b1:	xor    eax,ebx
  4251b3:	lea    eax,[eax+ecx*1+0x3272f3]
  4251ba:	mov    DWORD PTR [ebp-0x1c],eax
  4251bd:	mov    eax,DWORD PTR [ebp-0x34]
  4251c0:	test   eax,eax
  4251c2:	je     0x4251d6
  4251c4:	mov    eax,DWORD PTR [ebp-0x18]
  4251c7:	mov    ecx,DWORD PTR [ebp-0x38]
  4251ca:	xor    eax,ebx
  4251cc:	lea    eax,[eax+ecx*1+0x3272f3]
  4251d3:	mov    DWORD PTR [ebp-0x38],eax
  4251d6:	mov    eax,DWORD PTR [ebp-0x18]
  4251d9:	xor    eax,ebx
  4251db:	mov    ecx,0xffcd8d0d
  4251e0:	sub    ecx,eax
  4251e2:	add    ecx,DWORD PTR [ebp-0x28]
  4251e5:	mov    eax,DWORD PTR [ebp-0x1c]
  4251e8:	cmp    eax,ecx
  4251ea:	jbe    0x42504f
  4251f0:	mov    esi,edi
  4251f2:	mov    eax,DWORD PTR [ebp-0x38]
  4251f5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251f8:	cmp    ecx,eax
  4251fa:	jne    0x42520d
  4251fc:	push   DWORD PTR [ebp+0x8]
  4251ff:	lea    eax,[ebp-0x40]
  425202:	push   eax
  425203:	call   0x427d56
  425208:	mov    DWORD PTR [ebp-0x24],eax
  42520b:	jmp    0x425219
  42520d:	mov    eax,DWORD PTR [ebp-0x24]
  425210:	mov    ecx,DWORD PTR [ebp-0x18]
  425213:	xor    ecx,ebx
  425215:	add    ecx,esi
  425217:	xor    DWORD PTR [eax],ecx
  425219:	mov    eax,DWORD PTR [ebp-0x10]
  42521c:	mov    ecx,DWORD PTR [ebp-0x24]
  42521f:	xor    eax,ebx
  425221:	add    eax,esi
  425223:	cmp    eax,ecx
  425225:	je     0x42599d
  42522b:	mov    eax,DWORD PTR [ebp-0x10]
  42522e:	mov    ecx,DWORD PTR [ebp-0x40]
  425231:	xor    eax,ebx
  425233:	add    eax,esi
  425235:	cmp    eax,ecx
  425237:	je     0x42599d
  42523d:	mov    eax,DWORD PTR [ebp-0x10]
  425240:	xor    eax,ebx
  425242:	add    eax,esi
  425244:	jmp    0x425262
  425246:	mov    edi,DWORD PTR [ebp-0x24]
  425249:	mov    cl,al
  42524b:	and    cl,0x1f
  42524e:	or     dl,0xff
  425251:	sub    dl,cl
  425253:	add    BYTE PTR [edi+eax*1],dl
  425256:	mov    ecx,DWORD PTR [ebp-0x18]
  425259:	xor    ecx,ebx
  42525b:	lea    eax,[eax+ecx*1+0x3272f3]
  425262:	mov    ecx,DWORD PTR [ebp-0x40]
  425265:	cmp    eax,ecx
  425267:	jb     0x425246
  425269:	mov    eax,DWORD PTR [ebp-0x40]
  42526c:	mov    DWORD PTR [ebp-0x28],eax
  42526f:	mov    eax,DWORD PTR [ebp-0x24]
  425272:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  425279:	mov    DWORD PTR [ebp-0xd4],eax
  42527f:	mov    edi,0xf89c85a2
  425284:	mov    DWORD PTR [ebp-0x2c],edi
  425287:	mov    eax,DWORD PTR [ebp-0x38]
  42528a:	xor    eax,ebx
  42528c:	add    eax,esi
  42528e:	mov    DWORD PTR [ebp-0xc],eax
  425291:	mov    eax,DWORD PTR [ebp-0x38]
  425294:	xor    eax,ebx
  425296:	add    eax,esi
  425298:	mov    DWORD PTR [ebp-0x8],eax
  42529b:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  4252a2:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  4252a9:	mov    eax,DWORD PTR [ebp-0x38]
  4252ac:	mov    ecx,DWORD PTR [ebp-0x28]
  4252af:	xor    eax,ebx
  4252b1:	add    eax,esi
  4252b3:	cmp    ecx,eax
  4252b5:	je     0x4254b4
  4252bb:	jmp    0x425490
  4252c0:	mov    ecx,DWORD PTR [ebp-0xc]
  4252c3:	mov    eax,DWORD PTR [ebp-0x28]
  4252c6:	sub    eax,ecx
  4252c8:	mov    ecx,DWORD PTR [ebp-0x48]
  4252cb:	xor    ecx,ebx
  4252cd:	add    ecx,esi
  4252cf:	xor    edx,edx
  4252d1:	div    ecx
  4252d3:	mov    DWORD PTR [ebp-0x8],eax
  4252d6:	mov    eax,DWORD PTR [ebp-0x4c]
  4252d9:	mov    ecx,DWORD PTR [ebp-0x8]
  4252dc:	xor    eax,ebx
  4252de:	add    eax,esi
  4252e0:	cmp    ecx,eax
  4252e2:	jbe    0x4252ee
  4252e4:	mov    eax,DWORD PTR [ebp-0x4c]
  4252e7:	xor    eax,ebx
  4252e9:	add    eax,esi
  4252eb:	mov    DWORD PTR [ebp-0x8],eax
  4252ee:	mov    eax,DWORD PTR [ebp-0x48]
  4252f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4252f4:	xor    eax,ebx
  4252f6:	add    eax,esi
  4252f8:	imul   eax,ecx
  4252fb:	mov    DWORD PTR [ebp-0x8],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x38]
  425301:	mov    ecx,DWORD PTR [ebp-0x8]
  425304:	xor    eax,ebx
  425306:	add    eax,esi
  425308:	cmp    ecx,eax
  42530a:	je     0x42547e
  425310:	mov    eax,DWORD PTR [ebp-0x8]
  425313:	mov    DWORD PTR [ebp-0x14],eax
  425316:	mov    eax,DWORD PTR [ebp-0xc]
  425319:	add    eax,DWORD PTR [ebp-0xd4]
  42531f:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  425326:	mov    DWORD PTR [ebp-0x34],edi
  425329:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  425333:	mov    DWORD PTR [ebp-0x8],eax
  425336:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  42533d:	mov    DWORD PTR [ebp-0x1c],edi
  425340:	mov    eax,DWORD PTR [ebp-0x20]
  425343:	xor    eax,ebx
  425345:	add    eax,esi
  425347:	jmp    0x42543d
  42534c:	mov    DWORD PTR [ebp-0xe0],0xf89c85b4
  425356:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  425360:	mov    eax,DWORD PTR [ebp-0x1c]
  425363:	mov    ecx,DWORD PTR [ebp-0x44]
  425366:	xor    eax,ebx
  425368:	add    eax,esi
  42536a:	imul   eax,ecx
  42536d:	mov    ecx,DWORD PTR [ebp-0x8]
  425370:	mov    al,BYTE PTR [eax+ecx*1]
  425373:	mov    BYTE PTR [ebp-0x2],al
  425376:	mov    eax,DWORD PTR [ebp-0x1c]
  425379:	mov    ecx,DWORD PTR [ebp-0x44]
  42537c:	xor    eax,ebx
  42537e:	add    eax,esi
  425380:	imul   eax,ecx
  425383:	mov    ecx,DWORD PTR [ebp-0xe8]
  425389:	xor    ecx,ebx
  42538b:	add    eax,ecx
  42538d:	mov    ecx,DWORD PTR [ebp-0x8]
  425390:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  425398:	mov    ecx,DWORD PTR [ebp-0xe0]
  42539e:	xor    ecx,ebx
  4253a0:	lea    eax,[ecx+eax*1+0x3272f3]
  4253a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4253ab:	xor    ecx,eax
  4253ad:	mov    BYTE PTR [ebp-0x2],cl
  4253b0:	mov    al,BYTE PTR [ebp-0x2]
  4253b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4253b6:	mov    edx,DWORD PTR [ebp-0x44]
  4253b9:	xor    ecx,ebx
  4253bb:	add    ecx,esi
  4253bd:	imul   ecx,edx
  4253c0:	mov    edx,DWORD PTR [ebp-0x8]
  4253c3:	mov    BYTE PTR [ecx+edx*1],al
  4253c6:	mov    eax,DWORD PTR [ebp-0x1c]
  4253c9:	mov    ecx,DWORD PTR [ebp-0x44]
  4253cc:	xor    eax,ebx
  4253ce:	add    eax,esi
  4253d0:	imul   eax,ecx
  4253d3:	mov    ecx,DWORD PTR [ebp-0x8]
  4253d6:	mov    al,BYTE PTR [eax+ecx*1]
  4253d9:	mov    BYTE PTR [ebp-0x2],al
  4253dc:	mov    eax,DWORD PTR [ebp-0x1c]
  4253df:	mov    ecx,DWORD PTR [ebp-0x44]
  4253e2:	xor    eax,ebx
  4253e4:	add    eax,esi
  4253e6:	imul   eax,ecx
  4253e9:	mov    ecx,DWORD PTR [ebp-0x34]
  4253ec:	xor    ecx,ebx
  4253ee:	add    eax,ecx
  4253f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4253f3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4253fb:	mov    ecx,DWORD PTR [ebp-0xc4]
  425401:	xor    ecx,ebx
  425403:	lea    eax,[ecx+eax*1+0x3272f3]
  42540a:	movzx  ecx,BYTE PTR [ebp-0x2]
  42540e:	xor    ecx,eax
  425410:	mov    BYTE PTR [ebp-0x2],cl
  425413:	mov    al,BYTE PTR [ebp-0x2]
  425416:	mov    ecx,DWORD PTR [ebp-0x1c]
  425419:	mov    edx,DWORD PTR [ebp-0x44]
  42541c:	xor    ecx,ebx
  42541e:	add    ecx,esi
  425420:	imul   ecx,edx
  425423:	mov    edx,DWORD PTR [ebp-0x8]
  425426:	mov    BYTE PTR [ecx+edx*1],al
  425429:	mov    eax,DWORD PTR [ebp-0x30]
  42542c:	mov    ecx,DWORD PTR [ebp-0x34]
  42542f:	xor    eax,ebx
  425431:	xor    ecx,ebx
  425433:	add    eax,esi
  425435:	add    ecx,esi
  425437:	imul   eax,ecx
  42543a:	add    eax,DWORD PTR [ebp-0x44]
  42543d:	mov    DWORD PTR [ebp-0x44],eax
  425440:	mov    eax,DWORD PTR [ebp-0x44]
  425443:	mov    ecx,DWORD PTR [ebp-0x14]
  425446:	cmp    ecx,eax
  425448:	jb     0x42534c
  42544e:	mov    eax,DWORD PTR [ebp-0x34]
  425451:	mov    ecx,DWORD PTR [ebp-0x14]
  425454:	xor    eax,ebx
  425456:	add    eax,esi
  425458:	imul   eax,ecx
  42545b:	mov    ecx,DWORD PTR [ebp-0x20]
  42545e:	xor    ecx,ebx
  425460:	add    ecx,esi
  425462:	or     eax,ecx
  425464:	mov    ecx,DWORD PTR [ebp-0x2c]
  425467:	xor    ecx,ebx
  425469:	add    eax,ecx
  42546b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42546e:	xor    ecx,ebx
  425470:	add    eax,ecx
  425472:	mov    ecx,DWORD PTR [ebp-0xc]
  425475:	lea    eax,[eax+ecx*1+0x64e5e6]
  42547c:	jmp    0x42548d
  42547e:	mov    eax,DWORD PTR [ebp-0x2c]
  425481:	mov    ecx,DWORD PTR [ebp-0xc]
  425484:	xor    eax,ebx
  425486:	lea    eax,[eax+ecx*1+0x3272f3]
  42548d:	mov    DWORD PTR [ebp-0xc],eax
  425490:	mov    eax,DWORD PTR [ebp-0x2c]
  425493:	xor    eax,ebx
  425495:	mov    ecx,0xffcd8d0d
  42549a:	sub    ecx,eax
  42549c:	add    ecx,DWORD PTR [ebp-0x28]
  42549f:	mov    eax,DWORD PTR [ebp-0x2c]
  4254a2:	mov    edx,DWORD PTR [ebp-0xc]
  4254a5:	xor    eax,ebx
  4254a7:	add    eax,esi
  4254a9:	imul   eax,edx
  4254ac:	cmp    eax,ecx
  4254ae:	jbe    0x4252c0
  4254b4:	mov    eax,DWORD PTR [ebp-0x10]
  4254b7:	mov    ecx,DWORD PTR [ebp-0x40]
  4254ba:	mov    eax,DWORD PTR [ebp+0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x54]
  4254c0:	mov    eax,DWORD PTR [eax+0x1e0]
  4254c6:	xor    edx,ebx
  4254c8:	add    edx,esi
  4254ca:	push   edx
  4254cb:	mov    edx,DWORD PTR [ebp-0x3c]
  4254ce:	xor    edx,ebx
  4254d0:	add    edx,esi
  4254d2:	push   edx
  4254d3:	push   ecx
  4254d4:	mov    DWORD PTR [ebp-0x30],ecx
  4254d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4254da:	xor    ecx,ebx
  4254dc:	add    ecx,esi
  4254de:	push   ecx
  4254df:	call   DWORD PTR [eax+0x14]
  4254e2:	mov    edi,eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x10]
  4254e7:	xor    eax,ebx
  4254e9:	add    eax,esi
  4254eb:	cmp    eax,edi
  4254ed:	je     0x425548
  4254ef:	mov    eax,DWORD PTR [ebp-0x10]
  4254f2:	jmp    0x425515
  4254f4:	mov    ecx,DWORD PTR [ebp-0x24]
  4254f7:	xor    eax,ebx
  4254f9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f3]
  425500:	mov    BYTE PTR [eax+edi*1+0x3272f3],cl
  425507:	mov    ecx,DWORD PTR [ebp-0x18]
  42550a:	xor    ecx,ebx
  42550c:	lea    eax,[ecx+eax*1+0x3272f3]
  425513:	xor    eax,ebx
  425515:	mov    ecx,DWORD PTR [ebp-0x40]
  425518:	sub    ecx,esi
  42551a:	xor    ecx,ebx
  42551c:	cmp    eax,ecx
  42551e:	jne    0x4254f4
  425520:	mov    eax,DWORD PTR [ebp+0x8]
  425523:	mov    ecx,DWORD PTR [ebp-0x50]
  425526:	mov    eax,DWORD PTR [eax+0x1e0]
  42552c:	xor    ecx,ebx
  42552e:	add    ecx,esi
  425530:	push   ecx
  425531:	mov    ecx,DWORD PTR [ebp-0x10]
  425534:	xor    ecx,ebx
  425536:	add    ecx,esi
  425538:	push   ecx
  425539:	push   DWORD PTR [ebp-0x24]
  42553c:	call   DWORD PTR [eax+0x18]
  42553f:	mov    eax,DWORD PTR [ebp-0x30]
  425542:	mov    DWORD PTR [ebp-0x24],edi
  425545:	mov    DWORD PTR [ebp-0x40],eax
  425548:	mov    edi,DWORD PTR [ebp-0x24]
  42554b:	mov    eax,DWORD PTR [ebp-0x18]
  42554e:	mov    ecx,DWORD PTR [ebp-0x10]
  425551:	xor    eax,ebx
  425553:	mov    DWORD PTR [ebp-0x30],edi
  425556:	add    eax,esi
  425558:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42555f:	mov    DWORD PTR [ebp-0x58],0x342b3c2b
  425566:	jmp    0x42559a
  425568:	xor    ecx,ebx
  42556a:	mov    dl,BYTE PTR [ebp+ecx*1+0x327297]
  425571:	xor    dl,0x7d
  425574:	add    dl,0x2
  425577:	mov    DWORD PTR [ebp-0x3c],ecx
  42557a:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f3]
  425582:	movzx  edx,dl
  425585:	cmp    ecx,edx
  425587:	jne    0x4255a4
  425589:	mov    ecx,DWORD PTR [ebp-0x18]
  42558c:	mov    edx,DWORD PTR [ebp-0x3c]
  42558f:	xor    ecx,ebx
  425591:	lea    ecx,[ecx+edx*1+0x3272f3]
  425598:	xor    ecx,ebx
  42559a:	cmp    ecx,0xf89c85b9
  4255a0:	jne    0x425568
  4255a2:	jmp    0x4255ab
  4255a4:	mov    eax,DWORD PTR [ebp-0x10]
  4255a7:	xor    eax,ebx
  4255a9:	add    eax,esi
  4255ab:	mov    ecx,DWORD PTR [ebp-0x10]
  4255ae:	xor    ecx,ebx
  4255b0:	add    ecx,esi
  4255b2:	cmp    ecx,eax
  4255b4:	je     0x425727
  4255ba:	mov    eax,DWORD PTR [edi+0x8]
  4255bd:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  4255c4:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d0
  4255cb:	mov    DWORD PTR [ebp-0x48],0xf89cb5a1
  4255d2:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4255d9:	mov    DWORD PTR [ebp-0x14],eax
  4255dc:	mov    eax,DWORD PTR [ebp+0x8]
  4255df:	mov    ecx,DWORD PTR [ebp-0x20]
  4255e2:	xor    ecx,ebx
  4255e4:	add    ecx,esi
  4255e6:	push   ecx
  4255e7:	mov    ecx,DWORD PTR [ebp-0x48]
  4255ea:	mov    eax,DWORD PTR [eax+0x1e0]
  4255f0:	xor    ecx,ebx
  4255f2:	add    ecx,esi
  4255f4:	push   ecx
  4255f5:	mov    ecx,DWORD PTR [ebp-0x3c]
  4255f8:	xor    ecx,ebx
  4255fa:	add    ecx,esi
  4255fc:	push   ecx
  4255fd:	mov    ecx,DWORD PTR [ebp-0xc]
  425600:	xor    ecx,ebx
  425602:	add    ecx,esi
  425604:	push   ecx
  425605:	call   DWORD PTR [eax+0x14]
  425608:	mov    edi,eax
  42560a:	mov    eax,DWORD PTR [ebp+0x8]
  42560d:	mov    ecx,DWORD PTR [ebp-0x20]
  425610:	mov    eax,DWORD PTR [eax+0x1e0]
  425616:	xor    ecx,ebx
  425618:	add    ecx,esi
  42561a:	push   ecx
  42561b:	mov    ecx,DWORD PTR [ebp-0x48]
  42561e:	xor    ecx,ebx
  425620:	add    ecx,esi
  425622:	push   ecx
  425623:	mov    ecx,DWORD PTR [ebp-0xc]
  425626:	push   DWORD PTR [ebp-0x14]
  425629:	xor    ecx,ebx
  42562b:	add    ecx,esi
  42562d:	push   ecx
  42562e:	call   DWORD PTR [eax+0x14]
  425631:	mov    ecx,DWORD PTR [ebp-0xc]
  425634:	xor    ecx,ebx
  425636:	add    ecx,esi
  425638:	mov    DWORD PTR [ebp-0x20],eax
  42563b:	cmp    ecx,edi
  42563d:	je     0x4259ca
  425643:	mov    ecx,DWORD PTR [ebp-0xc]
  425646:	xor    ecx,ebx
  425648:	add    ecx,esi
  42564a:	cmp    ecx,eax
  42564c:	je     0x4259ca
  425652:	mov    DWORD PTR [ebp-0x3c],0xf89c85bc
  425659:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425660:	mov    ecx,DWORD PTR [ebp-0x3c]
  425663:	xor    cl,0xac
  425666:	sub    cl,0xd
  425669:	mov    BYTE PTR [edi],cl
  42566b:	mov    ecx,DWORD PTR [ebp-0xc]
  42566e:	xor    cl,0xac
  425671:	sub    cl,0xd
  425674:	mov    BYTE PTR [edi+0x1],cl
  425677:	mov    ecx,DWORD PTR [ebp-0x54]
  42567a:	xor    cl,0xac
  42567d:	sub    cl,0xd
  425680:	mov    BYTE PTR [edi+0x2],cl
  425683:	and    DWORD PTR [ebp-0xc8],0x0
  42568a:	and    DWORD PTR [ebp-0xdc],0x0
  425691:	lea    ecx,[ebp-0xdc]
  425697:	push   ecx
  425698:	push   DWORD PTR [ebp-0x14]
  42569b:	push   eax
  42569c:	lea    eax,[ebp-0xc8]
  4256a2:	push   eax
  4256a3:	mov    eax,DWORD PTR [ebp-0x30]
  4256a6:	push   DWORD PTR [eax+0xc]
  4256a9:	mov    eax,DWORD PTR [ebp-0x24]
  4256ac:	add    eax,0x10
  4256af:	push   eax
  4256b0:	push   edi
  4256b1:	call   0x424957
  4256b6:	mov    DWORD PTR [ebp-0x3c],eax
  4256b9:	mov    eax,DWORD PTR [ebp+0x8]
  4256bc:	mov    ecx,DWORD PTR [ebp-0x50]
  4256bf:	mov    eax,DWORD PTR [eax+0x1e0]
  4256c5:	xor    ecx,ebx
  4256c7:	add    ecx,esi
  4256c9:	push   ecx
  4256ca:	mov    ecx,DWORD PTR [ebp-0xc]
  4256cd:	xor    ecx,ebx
  4256cf:	add    ecx,esi
  4256d1:	push   ecx
  4256d2:	push   edi
  4256d3:	call   DWORD PTR [eax+0x18]
  4256d6:	mov    eax,DWORD PTR [ebp-0x3c]
  4256d9:	add    eax,0xffcd8d0d
  4256de:	xor    eax,ebx
  4256e0:	cmp    eax,0xf89c85a1
  4256e5:	mov    eax,DWORD PTR [ebp+0x8]
  4256e8:	mov    eax,DWORD PTR [eax+0x1e0]
  4256ee:	mov    ecx,DWORD PTR [ebp-0x50]
  4256f1:	jne    0x425714
  4256f3:	xor    ecx,ebx
  4256f5:	add    ecx,esi
  4256f7:	push   ecx
  4256f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4256fb:	xor    ecx,ebx
  4256fd:	add    ecx,esi
  4256ff:	push   ecx
  425700:	push   DWORD PTR [ebp-0x24]
  425703:	call   DWORD PTR [eax+0x18]
  425706:	mov    eax,DWORD PTR [ebp-0x20]
  425709:	mov    DWORD PTR [ebp-0x24],eax
  42570c:	mov    eax,DWORD PTR [ebp-0x14]
  42570f:	mov    DWORD PTR [ebp-0x40],eax
  425712:	jmp    0x425727
  425714:	xor    ecx,ebx
  425716:	add    ecx,esi
  425718:	push   ecx
  425719:	mov    ecx,DWORD PTR [ebp-0xc]
  42571c:	xor    ecx,ebx
  42571e:	add    ecx,esi
  425720:	push   ecx
  425721:	push   DWORD PTR [ebp-0x20]
  425724:	call   DWORD PTR [eax+0x18]
  425727:	mov    eax,DWORD PTR [ebp-0x40]
  42572a:	mov    DWORD PTR [ebp-0x38],eax
  42572d:	mov    eax,DWORD PTR [ebp-0x24]
  425730:	mov    DWORD PTR [ebp-0x28],0xf89c85a1
  425737:	mov    DWORD PTR [ebp-0x3c],eax
  42573a:	mov    edi,0xf89c85a2
  42573f:	mov    DWORD PTR [ebp-0x2c],edi
  425742:	mov    eax,DWORD PTR [ebp-0x28]
  425745:	xor    eax,ebx
  425747:	add    eax,esi
  425749:	mov    DWORD PTR [ebp-0xc],eax
  42574c:	mov    eax,DWORD PTR [ebp-0x28]
  42574f:	xor    eax,ebx
  425751:	add    eax,esi
  425753:	mov    DWORD PTR [ebp-0x14],eax
  425756:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  42575d:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  425764:	mov    eax,DWORD PTR [ebp-0x28]
  425767:	mov    ecx,DWORD PTR [ebp-0x38]
  42576a:	xor    eax,ebx
  42576c:	add    eax,esi
  42576e:	cmp    ecx,eax
  425770:	je     0x425966
  425776:	jmp    0x425942
  42577b:	mov    ecx,DWORD PTR [ebp-0xc]
  42577e:	mov    eax,DWORD PTR [ebp-0x38]
  425781:	sub    eax,ecx
  425783:	mov    ecx,DWORD PTR [ebp-0x48]
  425786:	xor    ecx,ebx
  425788:	add    ecx,esi
  42578a:	xor    edx,edx
  42578c:	div    ecx
  42578e:	mov    DWORD PTR [ebp-0x14],eax
  425791:	mov    eax,DWORD PTR [ebp-0x20]
  425794:	mov    ecx,DWORD PTR [ebp-0x14]
  425797:	xor    eax,ebx
  425799:	add    eax,esi
  42579b:	cmp    ecx,eax
  42579d:	jbe    0x4257a9
  42579f:	mov    eax,DWORD PTR [ebp-0x20]
  4257a2:	xor    eax,ebx
  4257a4:	add    eax,esi
  4257a6:	mov    DWORD PTR [ebp-0x14],eax
  4257a9:	mov    eax,DWORD PTR [ebp-0x48]
  4257ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4257af:	xor    eax,ebx
  4257b1:	add    eax,esi
  4257b3:	imul   eax,ecx
  4257b6:	mov    DWORD PTR [ebp-0x14],eax
  4257b9:	mov    eax,DWORD PTR [ebp-0x28]
  4257bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4257bf:	xor    eax,ebx
  4257c1:	add    eax,esi
  4257c3:	cmp    ecx,eax
  4257c5:	je     0x425930
  4257cb:	mov    eax,DWORD PTR [ebp-0x14]
  4257ce:	mov    DWORD PTR [ebp-0x34],eax
  4257d1:	mov    eax,DWORD PTR [ebp-0xc]
  4257d4:	add    eax,DWORD PTR [ebp-0x3c]
  4257d7:	mov    DWORD PTR [ebp-0x4c],0xf89c85a1
  4257de:	mov    DWORD PTR [ebp-0x14],edi
  4257e1:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4257e8:	mov    DWORD PTR [ebp-0x1c],eax
  4257eb:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  4257f2:	mov    DWORD PTR [ebp-0x8],edi
  4257f5:	mov    eax,DWORD PTR [ebp-0x4c]
  4257f8:	xor    eax,ebx
  4257fa:	add    eax,esi
  4257fc:	jmp    0x4258ef
  425801:	mov    DWORD PTR [ebp-0xe4],0xf89c85b4
  42580b:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425815:	mov    eax,DWORD PTR [ebp-0x8]
  425818:	mov    ecx,DWORD PTR [ebp-0x18]
  42581b:	xor    eax,ebx
  42581d:	add    eax,esi
  42581f:	imul   eax,ecx
  425822:	mov    ecx,DWORD PTR [ebp-0x1c]
  425825:	mov    al,BYTE PTR [eax+ecx*1]
  425828:	mov    BYTE PTR [ebp-0x1],al
  42582b:	mov    eax,DWORD PTR [ebp-0x8]
  42582e:	mov    ecx,DWORD PTR [ebp-0x18]
  425831:	xor    eax,ebx
  425833:	add    eax,esi
  425835:	imul   eax,ecx
  425838:	mov    ecx,DWORD PTR [ebp-0x54]
  42583b:	xor    ecx,ebx
  42583d:	add    eax,ecx
  42583f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425842:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  42584a:	mov    ecx,DWORD PTR [ebp-0xe4]
  425850:	xor    ecx,ebx
  425852:	lea    eax,[ecx+eax*1+0x3272f3]
  425859:	movzx  ecx,BYTE PTR [ebp-0x1]
  42585d:	xor    ecx,eax
  42585f:	mov    BYTE PTR [ebp-0x1],cl
  425862:	mov    al,BYTE PTR [ebp-0x1]
  425865:	mov    ecx,DWORD PTR [ebp-0x8]
  425868:	mov    edx,DWORD PTR [ebp-0x18]
  42586b:	xor    ecx,ebx
  42586d:	add    ecx,esi
  42586f:	imul   ecx,edx
  425872:	mov    edx,DWORD PTR [ebp-0x1c]
  425875:	mov    BYTE PTR [ecx+edx*1],al
  425878:	mov    eax,DWORD PTR [ebp-0x8]
  42587b:	mov    ecx,DWORD PTR [ebp-0x18]
  42587e:	xor    eax,ebx
  425880:	add    eax,esi
  425882:	imul   eax,ecx
  425885:	mov    ecx,DWORD PTR [ebp-0x1c]
  425888:	mov    al,BYTE PTR [eax+ecx*1]
  42588b:	mov    BYTE PTR [ebp-0x1],al
  42588e:	mov    eax,DWORD PTR [ebp-0x8]
  425891:	mov    ecx,DWORD PTR [ebp-0x18]
  425894:	xor    eax,ebx
  425896:	add    eax,esi
  425898:	imul   eax,ecx
  42589b:	mov    ecx,DWORD PTR [ebp-0x14]
  42589e:	xor    ecx,ebx
  4258a0:	add    eax,ecx
  4258a2:	mov    ecx,DWORD PTR [ebp-0x1c]
  4258a5:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4258ad:	mov    ecx,DWORD PTR [ebp-0xd0]
  4258b3:	xor    ecx,ebx
  4258b5:	lea    eax,[ecx+eax*1+0x3272f3]
  4258bc:	movzx  ecx,BYTE PTR [ebp-0x1]
  4258c0:	xor    ecx,eax
  4258c2:	mov    BYTE PTR [ebp-0x1],cl
  4258c5:	mov    al,BYTE PTR [ebp-0x1]
  4258c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4258cb:	mov    edx,DWORD PTR [ebp-0x18]
  4258ce:	xor    ecx,ebx
  4258d0:	add    ecx,esi
  4258d2:	imul   ecx,edx
  4258d5:	mov    edx,DWORD PTR [ebp-0x1c]
  4258d8:	mov    BYTE PTR [ecx+edx*1],al
  4258db:	mov    eax,DWORD PTR [ebp-0x30]
  4258de:	mov    ecx,DWORD PTR [ebp-0x14]
  4258e1:	xor    eax,ebx
  4258e3:	xor    ecx,ebx
  4258e5:	add    eax,esi
  4258e7:	add    ecx,esi
  4258e9:	imul   eax,ecx
  4258ec:	add    eax,DWORD PTR [ebp-0x18]
  4258ef:	mov    DWORD PTR [ebp-0x18],eax
  4258f2:	mov    eax,DWORD PTR [ebp-0x18]
  4258f5:	mov    ecx,DWORD PTR [ebp-0x34]
  4258f8:	cmp    ecx,eax
  4258fa:	jb     0x425801
  425900:	mov    eax,DWORD PTR [ebp-0x14]
  425903:	mov    ecx,DWORD PTR [ebp-0x34]
  425906:	xor    eax,ebx
  425908:	add    eax,esi
  42590a:	imul   eax,ecx
  42590d:	mov    ecx,DWORD PTR [ebp-0x4c]
  425910:	xor    ecx,ebx
  425912:	add    ecx,esi
  425914:	or     eax,ecx
  425916:	mov    ecx,DWORD PTR [ebp-0x2c]
  425919:	xor    ecx,ebx
  42591b:	add    eax,ecx
  42591d:	mov    ecx,DWORD PTR [ebp-0x2c]
  425920:	xor    ecx,ebx
  425922:	add    eax,ecx
  425924:	mov    ecx,DWORD PTR [ebp-0xc]
  425927:	lea    eax,[eax+ecx*1+0x64e5e6]
  42592e:	jmp    0x42593f
  425930:	mov    eax,DWORD PTR [ebp-0x2c]
  425933:	mov    ecx,DWORD PTR [ebp-0xc]
  425936:	xor    eax,ebx
  425938:	lea    eax,[eax+ecx*1+0x3272f3]
  42593f:	mov    DWORD PTR [ebp-0xc],eax
  425942:	mov    eax,DWORD PTR [ebp-0x2c]
  425945:	xor    eax,ebx
  425947:	mov    ecx,0xffcd8d0d
  42594c:	sub    ecx,eax
  42594e:	add    ecx,DWORD PTR [ebp-0x38]
  425951:	mov    eax,DWORD PTR [ebp-0x2c]
  425954:	mov    edx,DWORD PTR [ebp-0xc]
  425957:	xor    eax,ebx
  425959:	add    eax,esi
  42595b:	imul   eax,edx
  42595e:	cmp    eax,ecx
  425960:	jbe    0x42577b
  425966:	push   DWORD PTR [ebp+0x8]
  425969:	mov    eax,DWORD PTR [ebp+0x8]
  42596c:	push   DWORD PTR [eax+0x1cc]
  425972:	lea    eax,[ebp-0xd8]
  425978:	push   eax
  425979:	mov    eax,DWORD PTR [ebp+0x8]
  42597c:	mov    eax,DWORD PTR [eax+0x1c4]
  425982:	push   DWORD PTR [eax]
  425984:	mov    eax,DWORD PTR [ebp+0x8]
  425987:	mov    eax,DWORD PTR [eax+0x1c0]
  42598d:	push   DWORD PTR [eax]
  42598f:	push   DWORD PTR [ebp-0x40]
  425992:	push   DWORD PTR [ebp-0x24]
  425995:	call   0x42642c
  42599a:	mov    DWORD PTR [ebp-0x3c],eax
  42599d:	mov    eax,DWORD PTR [ebp-0x10]
  4259a0:	mov    ecx,DWORD PTR [ebp-0x24]
  4259a3:	xor    eax,ebx
  4259a5:	add    eax,esi
  4259a7:	cmp    eax,ecx
  4259a9:	je     0x4259ca
  4259ab:	mov    eax,DWORD PTR [ebp+0x8]
  4259ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4259b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4259b7:	xor    ecx,ebx
  4259b9:	add    ecx,esi
  4259bb:	push   ecx
  4259bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4259bf:	xor    ecx,ebx
  4259c1:	add    ecx,esi
  4259c3:	push   ecx
  4259c4:	push   DWORD PTR [ebp-0x24]
  4259c7:	call   DWORD PTR [eax+0x18]
  4259ca:	pop    edi
  4259cb:	pop    esi
  4259cc:	pop    ebx
  4259cd:	leave  
  4259ce:	ret    0x4
  4259d1:	push   ebp
  4259d2:	mov    ebp,esp
  4259d4:	push   ecx
  4259d5:	push   ecx
  4259d6:	lea    eax,[ebp-0x8]
  4259d9:	mov    DWORD PTR [ebp-0x4],eax
  4259dc:	push   esi
  4259dd:	mov    esi,DWORD PTR [ebp-0x4]
  4259e0:	mov    eax,0xf881ba2f
  4259e5:	mov    DWORD PTR [esi],eax
  4259e7:	mov    esi,DWORD PTR [ebp-0x8]
  4259ea:	cmp    esi,eax
  4259ec:	pop    esi
  4259ed:	jne    0x4259f7
  4259ef:	mov    BYTE PTR [ecx+0xa],0x83
  4259f3:	mov    BYTE PTR [edx+0x8],0x2c
  4259f7:	mov    BYTE PTR [edx+0xa],0x83
  4259fb:	mov    BYTE PTR [ecx+0x2],0x11
  4259ff:	leave  
  425a00:	ret    
  425a01:	push   ebp
  425a02:	mov    ebp,esp
  425a04:	push   ecx
  425a05:	push   ecx
  425a06:	lea    eax,[ebp-0x8]
  425a09:	mov    DWORD PTR [ebp-0x4],eax
  425a0c:	mov    edx,DWORD PTR [ebp-0x4]
  425a0f:	mov    eax,0xf88b0bcb
  425a14:	mov    DWORD PTR [edx],eax
  425a16:	mov    edx,DWORD PTR [ebp-0x8]
  425a19:	cmp    edx,eax
  425a1b:	jne    0x425a2c
  425a1d:	mov    eax,DWORD PTR [ebp+0x8]
  425a20:	mov    BYTE PTR [ecx+0x9],0xf
  425a24:	mov    BYTE PTR [eax+0x7],0x54
  425a28:	mov    BYTE PTR [ecx+0x6],0xc
  425a2c:	mov    BYTE PTR [ecx+0x3],0x1f
  425a30:	leave  
  425a31:	ret    0x4
  425a34:	push   ebp
  425a35:	mov    ebp,esp
  425a37:	push   ecx
  425a38:	push   ecx
  425a39:	lea    eax,[ebp-0x8]
  425a3c:	mov    DWORD PTR [ebp-0x4],eax
  425a3f:	mov    edx,DWORD PTR [ebp-0x4]
  425a42:	mov    eax,0x7e0da2f
  425a47:	mov    DWORD PTR [edx],eax
  425a49:	mov    edx,DWORD PTR [ebp-0x8]
  425a4c:	cmp    edx,eax
  425a4e:	jne    0x425a54
  425a50:	mov    BYTE PTR [ecx+0x7],0x54
  425a54:	mov    eax,DWORD PTR [ebp+0x8]
  425a57:	mov    BYTE PTR [ecx+0x1],0x1a
  425a5b:	mov    BYTE PTR [eax+0x9],0x2f
  425a5f:	leave  
  425a60:	ret    0x4
  425a63:	push   ebp
  425a64:	mov    ebp,esp
  425a66:	push   ecx
  425a67:	push   ecx
  425a68:	lea    eax,[ebp-0x8]
  425a6b:	mov    DWORD PTR [ebp-0x4],eax
  425a6e:	push   esi
  425a6f:	mov    esi,DWORD PTR [ebp-0x4]
  425a72:	mov    eax,0x7060e38
  425a77:	mov    DWORD PTR [esi],eax
  425a79:	mov    esi,DWORD PTR [ebp-0x8]
  425a7c:	cmp    esi,eax
  425a7e:	pop    esi
  425a7f:	jne    0x425a8b
  425a81:	mov    BYTE PTR [edx+0x4],0x10
  425a85:	mov    WORD PTR [ecx+0x3],0x101f
  425a8b:	mov    BYTE PTR [edx],0x3c
  425a8e:	leave  
  425a8f:	ret    
  425a90:	push   ebp
  425a91:	mov    ebp,esp
  425a93:	push   ecx
  425a94:	push   ecx
  425a95:	lea    eax,[ebp-0x8]
  425a98:	mov    DWORD PTR [ebp-0x4],eax
  425a9b:	mov    edx,DWORD PTR [ebp-0x4]
  425a9e:	mov    eax,0xf8870b3f
  425aa3:	mov    DWORD PTR [edx],eax
  425aa5:	mov    edx,DWORD PTR [ebp-0x8]
  425aa8:	cmp    edx,eax
  425aaa:	jne    0x425ab7
  425aac:	mov    eax,DWORD PTR [ebp+0x8]
  425aaf:	mov    BYTE PTR [ecx+0x8],0xc
  425ab3:	mov    BYTE PTR [eax+0x1],0x1a
  425ab7:	mov    BYTE PTR [ecx+0x5],0x8
  425abb:	leave  
  425abc:	ret    0x4
  425abf:	push   esi
  425ac0:	mov    ecx,edi
  425ac2:	call   0x425a90
  425ac7:	mov    edx,edi
  425ac9:	mov    ecx,esi
  425acb:	mov    BYTE PTR [esi],0x1c
  425ace:	call   0x425a63
  425ad3:	push   esi
  425ad4:	mov    ecx,edi
  425ad6:	mov    BYTE PTR [esi+0x5],0x8
  425ada:	call   0x425a34
  425adf:	push   esi
  425ae0:	mov    BYTE PTR [esi+0x6],0xc
  425ae4:	call   0x425a01
  425ae9:	mov    BYTE PTR [esi+0x2],0x11
  425aed:	mov    edx,esi
  425aef:	jmp    0x4259d1
  425af4:	push   ebp
  425af5:	mov    ebp,esp
  425af7:	push   ecx
  425af8:	mov    ecx,DWORD PTR [edx+0x194]
  425afe:	push   esi
  425aff:	mov    esi,DWORD PTR [ebp+0x8]
  425b02:	mov    esi,DWORD PTR [esi]
  425b04:	mov    DWORD PTR [ecx],esi
  425b06:	mov    ecx,DWORD PTR [edx+0x194]
  425b0c:	mov    ecx,DWORD PTR [ecx]
  425b0e:	mov    esi,DWORD PTR [edx+0x190]
  425b14:	mov    DWORD PTR [esi],ecx
  425b16:	mov    eax,DWORD PTR [edx+0x194]
  425b1c:	mov    ecx,DWORD PTR [eax]
  425b1e:	mov    ecx,DWORD PTR [ecx+0x3c]
  425b21:	add    ecx,DWORD PTR [eax]
  425b23:	mov    DWORD PTR [ebp-0x4],0xf89ca5a1
  425b2a:	mov    eax,DWORD PTR [ebp-0x4]
  425b2d:	movzx  ecx,WORD PTR [ecx+0x16]
  425b31:	xor    eax,0x75108ac
  425b36:	add    eax,0x3272f3
  425b3b:	pop    esi
  425b3c:	test   ecx,eax
  425b3e:	je     0x425b4c
  425b40:	mov    eax,DWORD PTR [edx+0x1c8]
  425b46:	mov    DWORD PTR [eax],0xf89c85a2
  425b4c:	leave  
  425b4d:	ret    0x4
  425b50:	push   ebp
  425b51:	mov    ebp,esp
  425b53:	sub    esp,0x70
  425b56:	and    DWORD PTR [ebp-0x20],0x0
  425b5a:	mov    DWORD PTR [ebp-0x18],0xf89cb5a1
  425b61:	mov    DWORD PTR [ebp-0x1c],0xf89c85e1
  425b68:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  425b6f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425b76:	mov    DWORD PTR [ebp-0x2c],0xf89f05a1
  425b7d:	mov    eax,DWORD PTR [ebp+0x20]
  425b80:	mov    eax,DWORD PTR [eax+0x194]
  425b86:	mov    DWORD PTR [ebp-0xc],eax
  425b89:	mov    eax,DWORD PTR [ebp+0x20]
  425b8c:	push   ebx
  425b8d:	push   esi
  425b8e:	mov    esi,DWORD PTR [eax+0x190]
  425b94:	mov    eax,DWORD PTR [ebp+0x20]
  425b97:	mov    eax,DWORD PTR [eax+0x18c]
  425b9d:	mov    DWORD PTR [ebp-0x8],eax
  425ba0:	mov    eax,DWORD PTR [eax]
  425ba2:	push   edi
  425ba3:	mov    DWORD PTR [ebp-0x4],esi
  425ba6:	test   eax,eax
  425ba8:	jne    0x425bb5
  425baa:	push   DWORD PTR [ebp+0x1c]
  425bad:	mov    edx,DWORD PTR [ebp+0x20]
  425bb0:	call   0x425af4
  425bb5:	mov    eax,DWORD PTR [esi]
  425bb7:	mov    ebx,DWORD PTR [esi]
  425bb9:	add    ebx,DWORD PTR [eax+0x3c]
  425bbc:	mov    eax,DWORD PTR [ebp+0xc]
  425bbf:	mov    ecx,DWORD PTR [ebp-0x8]
  425bc2:	mov    ecx,DWORD PTR [ecx]
  425bc4:	mov    esi,0x75108ac
  425bc9:	xor    eax,esi
  425bcb:	mov    edi,0x3272f3
  425bd0:	add    eax,edi
  425bd2:	cmp    eax,ecx
  425bd4:	jne    0x425e0c
  425bda:	mov    eax,DWORD PTR [ebp-0xc]
  425bdd:	mov    eax,DWORD PTR [eax]
  425bdf:	mov    DWORD PTR [ebp-0x10],eax
  425be2:	mov    eax,DWORD PTR [ebx+0x50]
  425be5:	mov    DWORD PTR [ebp-0x68],eax
  425be8:	mov    eax,DWORD PTR [ebp-0x18]
  425beb:	xor    eax,esi
  425bed:	add    eax,edi
  425bef:	mov    DWORD PTR [ebp-0x64],eax
  425bf2:	mov    eax,DWORD PTR [ebp-0x14]
  425bf5:	and    DWORD PTR [ebp-0x6c],0x0
  425bf9:	xor    eax,esi
  425bfb:	add    eax,edi
  425bfd:	mov    DWORD PTR [ebp-0x60],eax
  425c00:	lea    eax,[ebp-0x70]
  425c03:	push   eax
  425c04:	mov    eax,DWORD PTR [ebp+0x8]
  425c07:	xor    eax,esi
  425c09:	add    eax,edi
  425c0b:	push   eax
  425c0c:	mov    eax,DWORD PTR [ebp+0x20]
  425c0f:	add    eax,0xaa
  425c14:	push   eax
  425c15:	mov    eax,DWORD PTR [ebp+0x20]
  425c18:	mov    eax,DWORD PTR [eax+0x198]
  425c1e:	mov    DWORD PTR [ebp-0x70],0x4
  425c25:	push   DWORD PTR [eax]
  425c27:	mov    eax,DWORD PTR [ebp+0x10]
  425c2a:	call   eax
  425c2c:	mov    ecx,DWORD PTR [ebp-0xc]
  425c2f:	mov    ecx,DWORD PTR [ecx]
  425c31:	mov    edx,DWORD PTR [ebp-0x8]
  425c34:	mov    DWORD PTR [ebp-0x6c],eax
  425c37:	mov    DWORD PTR [ebp+0x1c],eax
  425c3a:	mov    DWORD PTR [edx],ecx
  425c3c:	mov    ecx,DWORD PTR [ebp-0x4]
  425c3f:	mov    DWORD PTR [ecx],eax
  425c41:	mov    eax,DWORD PTR [ebx+0x50]
  425c44:	mov    DWORD PTR [ebp-0x68],eax
  425c47:	mov    eax,DWORD PTR [ebp-0x1c]
  425c4a:	xor    eax,esi
  425c4c:	add    eax,edi
  425c4e:	mov    DWORD PTR [ebp-0x64],eax
  425c51:	lea    eax,[ebp-0x20]
  425c54:	mov    DWORD PTR [ebp-0x60],eax
  425c57:	lea    eax,[ebp-0x70]
  425c5a:	push   eax
  425c5b:	mov    eax,DWORD PTR [ebp+0x8]
  425c5e:	xor    eax,esi
  425c60:	add    eax,edi
  425c62:	push   eax
  425c63:	mov    eax,DWORD PTR [ebp+0x20]
  425c66:	add    eax,0xee
  425c6b:	push   eax
  425c6c:	mov    eax,DWORD PTR [ebp+0x20]
  425c6f:	mov    eax,DWORD PTR [eax+0x198]
  425c75:	mov    DWORD PTR [ebp-0x70],0x4
  425c7c:	push   DWORD PTR [eax]
  425c7e:	mov    eax,DWORD PTR [ebp+0x10]
  425c81:	call   eax
  425c83:	test   eax,eax
  425c85:	je     0x425caa
  425c87:	and    DWORD PTR [ebp+0xc],0x0
  425c8b:	cmp    DWORD PTR [ebx+0x50],0x0
  425c8f:	jbe    0x425caa
  425c91:	mov    eax,DWORD PTR [ebp+0x1c]
  425c94:	mov    ecx,DWORD PTR [ebp-0x10]
  425c97:	sub    ecx,eax
  425c99:	mov    dl,BYTE PTR [ecx+eax*1]
  425c9c:	inc    DWORD PTR [ebp+0xc]
  425c9f:	mov    BYTE PTR [eax],dl
  425ca1:	mov    edx,DWORD PTR [ebp+0xc]
  425ca4:	inc    eax
  425ca5:	cmp    edx,DWORD PTR [ebx+0x50]
  425ca8:	jb     0x425c99
  425caa:	mov    edx,DWORD PTR [ebp+0x1c]
  425cad:	mov    ecx,DWORD PTR [edx+0x3c]
  425cb0:	add    ecx,edx
  425cb2:	mov    eax,DWORD PTR [ecx+0xa0]
  425cb8:	mov    ebx,DWORD PTR [ecx+0x28]
  425cbb:	add    eax,edx
  425cbd:	sub    edx,DWORD PTR [ebp-0x10]
  425cc0:	add    ebx,DWORD PTR [ebp+0x1c]
  425cc3:	mov    DWORD PTR [ebp+0xc],edx
  425cc6:	mov    DWORD PTR [ebp-0x2c],ecx
  425cc9:	mov    DWORD PTR [ebp-0x14],ebx
  425ccc:	mov    DWORD PTR [ebp-0x8],0x0
  425cd3:	jmp    0x425d4f
  425cd5:	add    edx,0xfffffff8
  425cd8:	shr    edx,1
  425cda:	mov    DWORD PTR [ebp-0x18],edx
  425cdd:	je     0x425d3b
  425cdf:	lea    edx,[eax+0x8]
  425ce2:	mov    DWORD PTR [ebp-0x4],edx
  425ce5:	mov    edx,DWORD PTR [ebp-0x18]
  425ce8:	mov    DWORD PTR [ebp-0x18],edx
  425ceb:	mov    edx,DWORD PTR [ebp-0x4]
  425cee:	movzx  edx,WORD PTR [edx]
  425cf1:	mov    DWORD PTR [ebp-0x24],edx
  425cf4:	and    edx,0xfff
  425cfa:	mov    DWORD PTR [ebp-0x28],edx
  425cfd:	mov    edx,DWORD PTR [ebp-0x24]
  425d00:	shr    edx,0xc
  425d03:	add    edx,0xffcd8d0d
  425d09:	xor    edx,esi
  425d0b:	cmp    edx,0xf89c85bc
  425d11:	jne    0x425d32
  425d13:	mov    edx,DWORD PTR [ebp-0x28]
  425d16:	add    edx,DWORD PTR [ebp+0x1c]
  425d19:	mov    ebx,DWORD PTR [eax]
  425d1b:	cmp    DWORD PTR [ebx+edx*1],0x0
  425d1f:	je     0x425d2f
  425d21:	mov    ecx,DWORD PTR [ebp+0xc]
  425d24:	add    ecx,DWORD PTR [ebx+edx*1]
  425d27:	mov    ebx,DWORD PTR [eax]
  425d29:	mov    DWORD PTR [edx+ebx*1],ecx
  425d2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  425d2f:	mov    ebx,DWORD PTR [ebp-0x14]
  425d32:	add    DWORD PTR [ebp-0x4],0x2
  425d36:	dec    DWORD PTR [ebp-0x18]
  425d39:	jne    0x425ceb
  425d3b:	mov    edx,DWORD PTR [ebp-0xc]
  425d3e:	add    DWORD PTR [ebp-0x8],edx
  425d41:	mov    edx,DWORD PTR [ebp-0x8]
  425d44:	cmp    edx,DWORD PTR [ecx+0xa4]
  425d4a:	jae    0x425d5d
  425d4c:	add    eax,DWORD PTR [ebp-0xc]
  425d4f:	mov    edx,DWORD PTR [eax+0x4]
  425d52:	mov    DWORD PTR [ebp-0xc],edx
  425d55:	test   edx,edx
  425d57:	jne    0x425cd5
  425d5d:	mov    eax,DWORD PTR [ebp-0x10]
  425d60:	mov    DWORD PTR [ebp-0x6c],eax
  425d63:	mov    DWORD PTR [ebp-0x70],0x4
  425d6a:	mov    eax,DWORD PTR [ecx+0x50]
  425d6d:	mov    DWORD PTR [ebp-0x68],eax
  425d70:	mov    eax,DWORD PTR [ebp-0x1c]
  425d73:	xor    eax,esi
  425d75:	add    eax,edi
  425d77:	mov    DWORD PTR [ebp-0x64],eax
  425d7a:	lea    eax,[ebp-0x20]
  425d7d:	mov    DWORD PTR [ebp-0x60],eax
  425d80:	lea    eax,[ebp-0x70]
  425d83:	push   eax
  425d84:	mov    eax,DWORD PTR [ebp+0x8]
  425d87:	xor    eax,esi
  425d89:	add    eax,edi
  425d8b:	push   eax
  425d8c:	mov    eax,DWORD PTR [ebp+0x20]
  425d8f:	add    eax,0xee
  425d94:	push   eax
  425d95:	mov    eax,DWORD PTR [ebp+0x20]
  425d98:	mov    eax,DWORD PTR [eax+0x198]
  425d9e:	push   DWORD PTR [eax]
  425da0:	mov    eax,DWORD PTR [ebp+0x10]
  425da3:	call   eax
  425da5:	mov    eax,DWORD PTR [ebp+0x20]
  425da8:	mov    eax,DWORD PTR [eax+0x180]
  425dae:	add    eax,DWORD PTR [ebp+0xc]
  425db1:	mov    ecx,DWORD PTR [ebp+0xc]
  425db4:	push   DWORD PTR [ebp+0x18]
  425db7:	mov    DWORD PTR [eax],ecx
  425db9:	push   DWORD PTR [ebp+0x14]
  425dbc:	push   DWORD PTR [ebp+0x1c]
  425dbf:	call   ebx
  425dc1:	mov    ecx,DWORD PTR [ebp+0xc]
  425dc4:	add    ecx,DWORD PTR [ebp+0x20]
  425dc7:	lea    eax,[ebp+0x4]
  425dca:	mov    DWORD PTR [ebp+0x20],ecx
  425dcd:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd0:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd3:	mov    edx,DWORD PTR [ecx+0x190]
  425dd9:	mov    ecx,DWORD PTR [ebp+0x20]
  425ddc:	mov    ecx,DWORD PTR [ecx+0x18c]
  425de2:	mov    esi,DWORD PTR [ecx]
  425de4:	cmp    DWORD PTR [eax],esi
  425de6:	jb     0x425e07
  425de8:	mov    esi,DWORD PTR [edx]
  425dea:	mov    edi,DWORD PTR [edx]
  425dec:	mov    esi,DWORD PTR [esi+0x3c]
  425def:	lea    esi,[edi+esi*1+0x50]
  425df3:	mov    edi,DWORD PTR [ecx]
  425df5:	add    edi,DWORD PTR [esi]
  425df7:	cmp    DWORD PTR [eax],edi
  425df9:	jae    0x425e07
  425dfb:	mov    esi,DWORD PTR [ecx]
  425dfd:	mov    ecx,DWORD PTR [eax]
  425dff:	mov    edx,DWORD PTR [edx]
  425e01:	sub    ecx,esi
  425e03:	add    edx,ecx
  425e05:	mov    DWORD PTR [eax],edx
  425e07:	mov    eax,DWORD PTR [ebp+0xc]
  425e0a:	jmp    0x425e0e
  425e0c:	xor    eax,eax
  425e0e:	pop    edi
  425e0f:	pop    esi
  425e10:	pop    ebx
  425e11:	leave  
  425e12:	ret    0x1c
  425e15:	push   ebp
  425e16:	mov    ebp,esp
  425e18:	sub    esp,0x1c
  425e1b:	push   esi
  425e1c:	mov    esi,eax
  425e1e:	mov    eax,DWORD PTR [ecx+0x190]
  425e24:	cmp    DWORD PTR [eax],0x0
  425e27:	je     0x425f37
  425e2d:	test   edx,edx
  425e2f:	je     0x425f37
  425e35:	test   esi,esi
  425e37:	je     0x425f37
  425e3d:	mov    eax,DWORD PTR [esi+0x88]
  425e43:	test   eax,eax
  425e45:	je     0x425f32
  425e4b:	cmp    DWORD PTR [esi+0x8c],0x10
  425e52:	je     0x425f32
  425e58:	cmp    DWORD PTR [esi+0x34],edx
  425e5b:	je     0x425f32
  425e61:	mov    esi,DWORD PTR [ecx+0x18c]
  425e67:	and    DWORD PTR [ebp-0x10],0x0
  425e6b:	mov    ecx,edx
  425e6d:	sub    ecx,DWORD PTR [esi]
  425e6f:	add    eax,edx
  425e71:	movzx  edx,WORD PTR [eax+0xc]
  425e75:	mov    DWORD PTR [ebp-0x1c],ecx
  425e78:	movzx  ecx,WORD PTR [eax+0xe]
  425e7c:	add    ecx,edx
  425e7e:	je     0x425f32
  425e84:	lea    ecx,[eax+0x14]
  425e87:	push   ebx
  425e88:	mov    DWORD PTR [ebp-0x18],ecx
  425e8b:	mov    esi,0x7fffffff
  425e90:	push   edi
  425e91:	test   DWORD PTR [ecx],esi
  425e93:	je     0x425f14
  425e95:	mov    edx,DWORD PTR [ecx]
  425e97:	and    DWORD PTR [ebp-0xc],0x0
  425e9b:	and    edx,esi
  425e9d:	add    edx,eax
  425e9f:	movzx  edi,WORD PTR [edx+0xe]
  425ea3:	movzx  ebx,WORD PTR [edx+0xc]
  425ea7:	add    edi,ebx
  425ea9:	je     0x425f14
  425eab:	lea    ecx,[edx+0x14]
  425eae:	mov    DWORD PTR [ebp-0x14],ecx
  425eb1:	test   DWORD PTR [ecx],esi
  425eb3:	je     0x425ef6
  425eb5:	mov    ecx,DWORD PTR [ecx]
  425eb7:	and    DWORD PTR [ebp-0x8],0x0
  425ebb:	and    ecx,esi
  425ebd:	add    ecx,eax
  425ebf:	movzx  edi,WORD PTR [ecx+0xe]
  425ec3:	movzx  ebx,WORD PTR [ecx+0xc]
  425ec7:	add    edi,ebx
  425ec9:	je     0x425ef6
  425ecb:	lea    edi,[ecx+0x14]
  425ece:	mov    DWORD PTR [ebp-0x4],edi
  425ed1:	mov    edi,DWORD PTR [ebp-0x4]
  425ed4:	mov    edi,DWORD PTR [edi]
  425ed6:	test   edi,edi
  425ed8:	je     0x425ee0
  425eda:	mov    ebx,DWORD PTR [ebp-0x1c]
  425edd:	add    DWORD PTR [edi+eax*1],ebx
  425ee0:	movzx  edi,WORD PTR [ecx+0xe]
  425ee4:	movzx  ebx,WORD PTR [ecx+0xc]
  425ee8:	inc    DWORD PTR [ebp-0x8]
  425eeb:	add    DWORD PTR [ebp-0x4],0x8
  425eef:	add    edi,ebx
  425ef1:	cmp    DWORD PTR [ebp-0x8],edi
  425ef4:	jb     0x425ed1
  425ef6:	movzx  edi,WORD PTR [edx+0xe]
  425efa:	movzx  ebx,WORD PTR [edx+0xc]
  425efe:	mov    ecx,DWORD PTR [ebp-0x14]
  425f01:	inc    DWORD PTR [ebp-0xc]
  425f04:	add    ecx,0x8
  425f07:	add    edi,ebx
  425f09:	mov    DWORD PTR [ebp-0x14],ecx
  425f0c:	cmp    DWORD PTR [ebp-0xc],edi
  425f0f:	jb     0x425eb1
  425f11:	mov    ecx,DWORD PTR [ebp-0x18]
  425f14:	movzx  edx,WORD PTR [eax+0xe]
  425f18:	movzx  edi,WORD PTR [eax+0xc]
  425f1c:	inc    DWORD PTR [ebp-0x10]
  425f1f:	add    ecx,0x8
  425f22:	add    edx,edi
  425f24:	mov    DWORD PTR [ebp-0x18],ecx
  425f27:	cmp    DWORD PTR [ebp-0x10],edx
  425f2a:	jb     0x425e91
  425f30:	pop    edi
  425f31:	pop    ebx
  425f32:	xor    eax,eax
  425f34:	inc    eax
  425f35:	jmp    0x425f39
  425f37:	xor    eax,eax
  425f39:	pop    esi
  425f3a:	leave  
  425f3b:	ret    
  425f3c:	push   ebp
  425f3d:	mov    ebp,esp
  425f3f:	mov    ecx,DWORD PTR [ecx+0x190]
  425f45:	mov    eax,DWORD PTR [ebp+0xc]
  425f48:	sub    esp,0x10
  425f4b:	push   ebx
  425f4c:	xor    ebx,ebx
  425f4e:	push   esi
  425f4f:	push   edi
  425f50:	cmp    DWORD PTR [ecx],ebx
  425f52:	je     0x425fda
  425f58:	cmp    eax,ebx
  425f5a:	je     0x425fda
  425f5c:	cmp    DWORD PTR [eax+0x78],ebx
  425f5f:	jne    0x425f66
  425f61:	xor    eax,eax
  425f63:	inc    eax
  425f64:	jmp    0x425fdc
  425f66:	mov    eax,DWORD PTR [eax+0x78]
  425f69:	add    eax,DWORD PTR [ebp+0x8]
  425f6c:	mov    ecx,DWORD PTR [eax+0x1c]
  425f6f:	mov    edx,DWORD PTR [eax+0x24]
  425f72:	mov    esi,DWORD PTR [eax+0x14]
  425f75:	mov    edi,DWORD PTR [eax+0x18]
  425f78:	add    ecx,DWORD PTR [ebp+0x8]
  425f7b:	add    edx,DWORD PTR [ebp+0x8]
  425f7e:	mov    DWORD PTR [ebp-0x4],esi
  425f81:	cmp    esi,edi
  425f83:	ja     0x425f88
  425f85:	mov    DWORD PTR [ebp-0x4],edi
  425f88:	mov    DWORD PTR [ebp-0x8],ebx
  425f8b:	cmp    DWORD PTR [ebp-0x4],ebx
  425f8e:	jbe    0x425f61
  425f90:	cmp    ebx,DWORD PTR [eax+0x14]
  425f93:	jae    0x425f9b
  425f95:	movzx  esi,WORD PTR [edx+ebx*2]
  425f99:	jmp    0x425f9d
  425f9b:	mov    esi,ebx
  425f9d:	lea    esi,[ecx+esi*4]
  425fa0:	mov    edi,DWORD PTR [esi]
  425fa2:	test   edi,edi
  425fa4:	je     0x425fcf
  425fa6:	add    edi,DWORD PTR [ebp+0x8]
  425fa9:	mov    DWORD PTR [ebp-0x10],edi
  425fac:	cmp    edi,eax
  425fae:	jbe    0x425fc0
  425fb0:	mov    ebx,DWORD PTR [ebp+0xc]
  425fb3:	mov    ebx,DWORD PTR [ebx+0x7c]
  425fb6:	add    ebx,eax
  425fb8:	cmp    edi,ebx
  425fba:	jae    0x425fc0
  425fbc:	mov    esi,DWORD PTR [esi]
  425fbe:	jmp    0x425fc8
  425fc0:	sub    edi,DWORD PTR [ebp+0x8]
  425fc3:	mov    DWORD PTR [esi],edi
  425fc5:	mov    esi,DWORD PTR [ebp-0x10]
  425fc8:	test   esi,esi
  425fca:	je     0x425fda
  425fcc:	mov    ebx,DWORD PTR [ebp-0x8]
  425fcf:	inc    ebx
  425fd0:	mov    DWORD PTR [ebp-0x8],ebx
  425fd3:	cmp    ebx,DWORD PTR [ebp-0x4]
  425fd6:	jb     0x425f90
  425fd8:	jmp    0x425f61
  425fda:	xor    eax,eax
  425fdc:	pop    edi
  425fdd:	pop    esi
  425fde:	pop    ebx
  425fdf:	leave  
  425fe0:	ret    0x8
  425fe3:	push   ebp
  425fe4:	mov    ebp,esp
  425fe6:	sub    esp,0x2c
  425fe9:	mov    edx,0xf89c85a1
  425fee:	mov    DWORD PTR [ebp-0x4],edx
  425ff1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  425ff8:	mov    eax,DWORD PTR [ebp-0x4]
  425ffb:	mov    ecx,DWORD PTR [ebp-0x4]
  425ffe:	mov    ecx,DWORD PTR [ebp-0x4]
  426001:	mov    ecx,DWORD PTR [ebp-0x4]
  426004:	mov    ecx,DWORD PTR [ebp-0x4]
  426007:	mov    ecx,DWORD PTR [ebp-0x4]
  42600a:	push   ebx
  42600b:	mov    ebx,DWORD PTR [ebp+0x10]
  42600e:	push   esi
  42600f:	mov    esi,0x75108ac
  426014:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  42601b:	mov    ecx,DWORD PTR [ebp-0x4]
  42601e:	mov    ebx,DWORD PTR [ebx+0x190]
  426024:	push   edi
  426025:	mov    edi,0x3272f3
  42602a:	xor    ecx,esi
  42602c:	xor    eax,esi
  42602e:	add    eax,edi
  426030:	add    ecx,edi
  426032:	mov    DWORD PTR [ebp-0x18],eax
  426035:	cmp    ecx,DWORD PTR [ebx]
  426037:	je     0x4262b8
  42603d:	mov    ebx,DWORD PTR [ebp-0x4]
  426040:	mov    ecx,DWORD PTR [ebp+0xc]
  426043:	xor    ebx,esi
  426045:	add    ebx,edi
  426047:	cmp    ebx,ecx
  426049:	je     0x4262b8
  42604f:	mov    ebx,DWORD PTR [ebp-0x4]
  426052:	mov    ecx,DWORD PTR [ecx+0x80]
  426058:	xor    ebx,esi
  42605a:	add    ebx,edi
  42605c:	cmp    ecx,ebx
  42605e:	je     0x4262b3
  426064:	add    ecx,DWORD PTR [ebp+0x8]
  426067:	mov    DWORD PTR [ebp-0x2c],ecx
  42606a:	mov    ebx,edx
  42606c:	xor    ebx,esi
  42606e:	add    ebx,edi
  426070:	mov    DWORD PTR [ebp-0x10],ebx
  426073:	mov    ebx,DWORD PTR [ebp-0x10]
  426076:	cmp    ebx,edx
  426078:	je     0x42608c
  42607a:	mov    edx,DWORD PTR [ebp-0x10]
  42607d:	mov    ebx,DWORD PTR [ebp-0x4]
  426080:	imul   edx,edx,0x14
  426083:	xor    ebx,esi
  426085:	add    ebx,edi
  426087:	cmp    DWORD PTR [edx+ecx*1],ebx
  42608a:	jne    0x4260a3
  42608c:	mov    edx,DWORD PTR [ebp-0x10]
  42608f:	mov    ebx,DWORD PTR [ebp-0x4]
  426092:	imul   edx,edx,0x14
  426095:	xor    ebx,esi
  426097:	add    ebx,edi
  426099:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  42609d:	je     0x4262a5
  4260a3:	mov    eax,DWORD PTR [ebp-0x4]
  4260a6:	mov    ebx,DWORD PTR [ebp-0x4]
  4260a9:	mov    eax,DWORD PTR [ebp-0x10]
  4260ac:	imul   eax,eax,0x14
  4260af:	add    eax,ecx
  4260b1:	mov    ecx,DWORD PTR [eax+0x10]
  4260b4:	add    ecx,DWORD PTR [ebp+0x8]
  4260b7:	xor    ebx,esi
  4260b9:	mov    DWORD PTR [ebp-0x1c],ecx
  4260bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4260bf:	mov    edx,DWORD PTR [ebp-0x4]
  4260c2:	xor    ecx,esi
  4260c4:	add    ecx,edi
  4260c6:	xor    edx,esi
  4260c8:	mov    DWORD PTR [ebp-0x24],ecx
  4260cb:	mov    ecx,DWORD PTR [eax]
  4260cd:	add    edx,edi
  4260cf:	add    ebx,edi
  4260d1:	cmp    ecx,edx
  4260d3:	je     0x4260db
  4260d5:	add    ecx,DWORD PTR [ebp+0x8]
  4260d8:	mov    DWORD PTR [ebp-0x24],ecx
  4260db:	mov    ecx,DWORD PTR [ebp-0x4]
  4260de:	xor    ecx,esi
  4260e0:	add    ecx,DWORD PTR [eax+0xc]
  4260e3:	mov    eax,DWORD PTR [ebp+0x8]
  4260e6:	lea    eax,[ecx+eax*1+0x3272f3]
  4260ed:	mov    DWORD PTR [ebp+0xc],eax
  4260f0:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4260f7:	mov    eax,DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	mov    eax,DWORD PTR [eax+0x1e0]
  426103:	call   DWORD PTR [eax]
  426105:	mov    ecx,DWORD PTR [ebp-0x4]
  426108:	xor    ecx,esi
  42610a:	add    ecx,edi
  42610c:	mov    DWORD PTR [ebp-0xc],eax
  42610f:	cmp    ecx,eax
  426111:	jne    0x426125
  426113:	mov    eax,DWORD PTR [ebp+0x10]
  426116:	push   DWORD PTR [ebp+0xc]
  426119:	mov    eax,DWORD PTR [eax+0x1e0]
  42611f:	call   DWORD PTR [eax+0xc]
  426122:	mov    DWORD PTR [ebp-0xc],eax
  426125:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  42612c:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  426133:	mov    eax,DWORD PTR [ebp-0x4]
  426136:	xor    eax,esi
  426138:	add    eax,edi
  42613a:	cmp    eax,DWORD PTR [ebp-0xc]
  42613d:	jne    0x426162
  42613f:	mov    eax,DWORD PTR [ebp-0x8]
  426142:	mov    ecx,DWORD PTR [ebp-0x20]
  426145:	xor    eax,esi
  426147:	xor    ecx,esi
  426149:	lea    ebx,[ebx+eax*1+0x3272f3]
  426150:	mov    eax,DWORD PTR [ebp+0x10]
  426153:	mov    eax,DWORD PTR [eax+0x1e0]
  426159:	add    ecx,edi
  42615b:	imul   ecx,ebx
  42615e:	push   ecx
  42615f:	call   DWORD PTR [eax+0x24]
  426162:	mov    eax,DWORD PTR [ebp-0x4]
  426165:	xor    eax,esi
  426167:	add    eax,edi
  426169:	cmp    eax,DWORD PTR [ebp-0xc]
  42616c:	jne    0x42617d
  42616e:	mov    eax,DWORD PTR [ebp-0x28]
  426171:	xor    eax,esi
  426173:	add    eax,edi
  426175:	cmp    ebx,eax
  426177:	jbe    0x4260f7
  42617d:	mov    eax,DWORD PTR [ebp-0x4]
  426180:	xor    eax,esi
  426182:	add    eax,edi
  426184:	cmp    eax,DWORD PTR [ebp-0xc]
  426187:	jne    0x4261a0
  426189:	mov    eax,DWORD PTR [ebp-0x8]
  42618c:	mov    ecx,DWORD PTR [ebp-0x18]
  42618f:	xor    eax,esi
  426191:	lea    eax,[ecx+eax*1+0x3272f3]
  426198:	mov    DWORD PTR [ebp-0x18],eax
  42619b:	jmp    0x42628f
  4261a0:	mov    DWORD PTR [ebp-0x14],0x1121b29
  4261a7:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  4261ae:	mov    ebx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ebx,esi
  4261b3:	add    ebx,edi
  4261b5:	jmp    0x42627c
  4261ba:	mov    eax,DWORD PTR [ebp-0x4]
  4261bd:	xor    eax,esi
  4261bf:	add    eax,edi
  4261c1:	mov    DWORD PTR [ebp-0x14],eax
  4261c4:	mov    eax,DWORD PTR [ebp-0x4]
  4261c7:	xor    eax,esi
  4261c9:	add    eax,edi
  4261cb:	mov    DWORD PTR [ebp+0xc],eax
  4261ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4261d1:	mov    eax,DWORD PTR [ebp-0x24]
  4261d4:	xor    ecx,esi
  4261d6:	add    ecx,edi
  4261d8:	cmp    ecx,eax
  4261da:	je     0x4261e2
  4261dc:	mov    eax,DWORD PTR [eax+ebx*4]
  4261df:	mov    DWORD PTR [ebp-0x14],eax
  4261e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e5:	mov    eax,DWORD PTR [eax+ebx*4]
  4261e8:	mov    DWORD PTR [ebp+0xc],eax
  4261eb:	mov    eax,DWORD PTR [ebp-0x4]
  4261ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4261f1:	xor    eax,esi
  4261f3:	add    eax,edi
  4261f5:	cmp    eax,ecx
  4261f7:	je     0x426222
  4261f9:	mov    eax,DWORD PTR [ebp-0x4]
  4261fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4261ff:	xor    eax,esi
  426201:	add    eax,edi
  426203:	shr    ecx,0x1f
  426206:	cmp    eax,ecx
  426208:	je     0x426222
  42620a:	mov    ecx,DWORD PTR [ebp-0x14]
  42620d:	mov    eax,DWORD PTR [ebp+0x10]
  426210:	mov    eax,DWORD PTR [eax+0x1e0]
  426216:	movzx  ecx,cx
  426219:	push   ecx
  42621a:	push   DWORD PTR [ebp-0xc]
  42621d:	call   DWORD PTR [eax+0x8]
  426220:	jmp    0x42623b
  426222:	mov    eax,DWORD PTR [ebp+0xc]
  426225:	add    eax,DWORD PTR [ebp+0x8]
  426228:	mov    ecx,DWORD PTR [ebp+0x10]
  42622b:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426231:	add    eax,0x2
  426234:	push   eax
  426235:	push   DWORD PTR [ebp-0xc]
  426238:	call   DWORD PTR [ecx+0x8]
  42623b:	mov    DWORD PTR [ebp+0xc],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x4]
  426241:	mov    ecx,DWORD PTR [ebp+0xc]
  426244:	xor    eax,esi
  426246:	add    eax,edi
  426248:	cmp    eax,ecx
  42624a:	mov    eax,DWORD PTR [ebp-0x8]
  42624d:	jne    0x426260
  42624f:	mov    ecx,DWORD PTR [ebp-0x18]
  426252:	xor    eax,esi
  426254:	lea    eax,[ecx+eax*1+0x3272f3]
  42625b:	mov    DWORD PTR [ebp-0x18],eax
  42625e:	jmp    0x426270
  426260:	mov    ecx,DWORD PTR [ebp+0xc]
  426263:	xor    eax,esi
  426265:	add    eax,edi
  426267:	imul   eax,ecx
  42626a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42626d:	mov    DWORD PTR [ecx+ebx*4],eax
  426270:	mov    eax,DWORD PTR [ebp-0x8]
  426273:	xor    eax,esi
  426275:	lea    ebx,[ebx+eax*1+0x3272f3]
  42627c:	mov    eax,DWORD PTR [ebp-0x4]
  42627f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426282:	xor    eax,esi
  426284:	add    eax,edi
  426286:	cmp    DWORD PTR [ecx+ebx*4],eax
  426289:	jne    0x4261ba
  42628f:	mov    edx,DWORD PTR [ebp-0x10]
  426292:	mov    eax,DWORD PTR [ebp-0x18]
  426295:	mov    ecx,DWORD PTR [ebp-0x2c]
  426298:	sub    edx,0x3272f2
  42629e:	xor    edx,esi
  4262a0:	jmp    0x42606a
  4262a5:	mov    ecx,DWORD PTR [ebp-0x4]
  4262a8:	xor    ecx,esi
  4262aa:	add    ecx,edi
  4262ac:	cmp    eax,ecx
  4262ae:	mov    eax,DWORD PTR [ebp-0x4]
  4262b1:	jne    0x4262bb
  4262b3:	mov    eax,DWORD PTR [ebp-0x8]
  4262b6:	jmp    0x4262bb
  4262b8:	mov    eax,DWORD PTR [ebp-0x4]
  4262bb:	xor    eax,esi
  4262bd:	add    eax,edi
  4262bf:	pop    edi
  4262c0:	pop    esi
  4262c1:	pop    ebx
  4262c2:	leave  
  4262c3:	ret    0xc
  4262c6:	push   ebp
  4262c7:	mov    ebp,esp
  4262c9:	sub    esp,0x28
  4262cc:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  4262d3:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  4262da:	mov    eax,DWORD PTR [ebp+0xc]
  4262dd:	mov    DWORD PTR [ebp+0xc],eax
  4262e0:	push   esi
  4262e1:	mov    eax,eax
  4262e3:	mov    eax,DWORD PTR [ebp-0x4]
  4262e6:	mov    esi,DWORD PTR [ebp+0x8]
  4262e9:	mov    ecx,0x75108ac
  4262ee:	xor    eax,ecx
  4262f0:	mov    edx,0x3272f3
  4262f5:	add    eax,edx
  4262f7:	cmp    esi,eax
  4262f9:	je     0x426420
  4262ff:	mov    eax,DWORD PTR [ebp+0x8]
  426302:	mov    esi,DWORD PTR [ebp+0x8]
  426305:	add    esi,DWORD PTR [eax+0x3c]
  426308:	push   edi
  426309:	mov    DWORD PTR [ebp+0xc],esi
  42630c:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  426313:	mov    eax,DWORD PTR [ebp-0x1c]
  426316:	mov    esi,DWORD PTR [ebp-0x4]
  426319:	mov    edi,DWORD PTR [ebp+0xc]
  42631c:	xor    esi,ecx
  42631e:	xor    eax,ecx
  426320:	add    esi,edx
  426322:	cmp    DWORD PTR [edi+eax*8+0x1939810],esi
  426329:	je     0x42641a
  42632f:	mov    esi,DWORD PTR [ebp+0xc]
  426332:	mov    eax,DWORD PTR [ebp+0x8]
  426335:	add    eax,DWORD PTR [esi+0xa0]
  42633b:	mov    esi,DWORD PTR [ebp+0x8]
  42633e:	mov    edi,DWORD PTR [ebp+0xc]
  426341:	sub    esi,DWORD PTR [edi+0x34]
  426344:	mov    edi,DWORD PTR [ebp-0x4]
  426347:	xor    edi,ecx
  426349:	add    edi,edx
  42634b:	mov    DWORD PTR [ebp-0x24],esi
  42634e:	cmp    esi,edi
  426350:	je     0x42641a
  426356:	mov    esi,DWORD PTR [ebp-0x4]
  426359:	xor    esi,ecx
  42635b:	add    esi,edx
  42635d:	mov    DWORD PTR [ebp-0x8],esi
  426360:	push   ebx
  426361:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  426368:	jmp    0x426404
  42636d:	mov    esi,DWORD PTR [ebp-0x4]
  426370:	xor    esi,ecx
  426372:	lea    edi,[ebx-0x8]
  426375:	add    esi,edx
  426377:	shr    edi,1
  426379:	cmp    esi,edi
  42637b:	jae    0x4263ea
  42637d:	sub    edi,esi
  42637f:	lea    ebx,[eax+esi*2+0x8]
  426383:	mov    DWORD PTR [ebp-0x18],edi
  426386:	movzx  esi,WORD PTR [ebx]
  426389:	and    esi,0xfff
  42638f:	mov    DWORD PTR [ebp-0x14],esi
  426392:	mov    edi,DWORD PTR [ebp-0x14]
  426395:	mov    esi,DWORD PTR [eax]
  426397:	sub    esi,edx
  426399:	add    edi,esi
  42639b:	movzx  esi,WORD PTR [ebx]
  42639e:	shr    esi,0xc
  4263a1:	xor    edi,ecx
  4263a3:	mov    DWORD PTR [ebp-0x20],edi
  4263a6:	mov    DWORD PTR [ebp-0x14],esi
  4263a9:	mov    esi,DWORD PTR [ebp-0x20]
  4263ac:	mov    edi,DWORD PTR [ebp+0x8]
  4263af:	xor    esi,ecx
  4263b1:	lea    esi,[esi+edi*1+0x3272f3]
  4263b8:	mov    DWORD PTR [ebp-0x20],esi
  4263bb:	mov    esi,DWORD PTR [ebp-0x10]
  4263be:	mov    edi,DWORD PTR [ebp-0x14]
  4263c1:	xor    esi,ecx
  4263c3:	add    esi,edx
  4263c5:	cmp    edi,esi
  4263c7:	jne    0x4263df
  4263c9:	mov    esi,DWORD PTR [ebp-0x10]
  4263cc:	mov    edi,DWORD PTR [ebp-0x14]
  4263cf:	xor    esi,ecx
  4263d1:	add    esi,edx
  4263d3:	cmp    edi,esi
  4263d5:	jne    0x4263df
  4263d7:	mov    esi,DWORD PTR [ebp-0x20]
  4263da:	mov    edi,DWORD PTR [ebp-0x24]
  4263dd:	add    DWORD PTR [esi],edi
  4263df:	add    ebx,0x2
  4263e2:	dec    DWORD PTR [ebp-0x18]
  4263e5:	jne    0x426386
  4263e7:	mov    ebx,DWORD PTR [ebp-0xc]
  4263ea:	add    DWORD PTR [ebp-0x8],ebx
  4263ed:	mov    esi,DWORD PTR [ebp-0x1c]
  4263f0:	mov    edi,DWORD PTR [ebp-0x8]
  4263f3:	mov    ebx,DWORD PTR [ebp+0xc]
  4263f6:	xor    esi,ecx
  4263f8:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939814]
  4263ff:	jae    0x426419
  426401:	add    eax,DWORD PTR [ebp-0xc]
  426404:	mov    esi,DWORD PTR [ebp-0x4]
  426407:	mov    ebx,DWORD PTR [eax+0x4]
  42640a:	xor    esi,ecx
  42640c:	add    esi,edx
  42640e:	mov    DWORD PTR [ebp-0xc],ebx
  426411:	cmp    ebx,esi
  426413:	jne    0x42636d
  426419:	pop    ebx
  42641a:	mov    eax,DWORD PTR [ebp-0x28]
  42641d:	pop    edi
  42641e:	jmp    0x426423
  426420:	mov    eax,DWORD PTR [ebp-0x4]
  426423:	xor    eax,ecx
  426425:	add    eax,edx
  426427:	pop    esi
  426428:	leave  
  426429:	ret    0x8
  42642c:	push   ebp
  42642d:	mov    ebp,esp
  42642f:	sub    esp,0xd8
  426435:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42643c:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  426443:	mov    eax,DWORD PTR [ebp-0x4]
  426446:	push   ebx
  426447:	push   esi
  426448:	mov    esi,0x75108ac
  42644d:	xor    eax,esi
  42644f:	push   edi
  426450:	mov    edi,0x3272f3
  426455:	add    eax,edi
  426457:	mov    DWORD PTR [ebp-0x18],eax
  42645a:	mov    eax,DWORD PTR [ebp-0x4]
  42645d:	xor    eax,esi
  42645f:	add    eax,edi
  426461:	mov    DWORD PTR [ebp-0x8],eax
  426464:	mov    ebx,DWORD PTR [ebp+0x20]
  426467:	mov    eax,DWORD PTR [ebp-0x1c]
  42646a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42646d:	xor    eax,ecx
  42646f:	mov    DWORD PTR [ebp-0x1c],eax
  426472:	add    DWORD PTR [ebp-0x1c],0xf89cb5a1
  426479:	mov    eax,DWORD PTR [ebp-0xc]
  42647c:	mov    ecx,DWORD PTR [ebp-0xc]
  42647f:	xor    eax,ecx
  426481:	mov    DWORD PTR [ebp-0xc],eax
  426484:	add    DWORD PTR [ebp-0xc],0xf89c85e1
  42648b:	mov    eax,DWORD PTR [ebp-0x10]
  42648e:	mov    ecx,DWORD PTR [ebp-0x10]
  426491:	xor    eax,ecx
  426493:	mov    DWORD PTR [ebp-0x10],eax
  426496:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  42649d:	mov    eax,DWORD PTR [ebp-0x28]
  4264a0:	mov    ecx,DWORD PTR [ebp-0x28]
  4264a3:	xor    eax,ecx
  4264a5:	mov    DWORD PTR [ebp-0x28],eax
  4264a8:	add    DWORD PTR [ebp-0x28],0xf89f05a1
  4264af:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4264b6:	mov    eax,DWORD PTR [ebp+0x8]
  4264b9:	test   eax,eax
  4264bb:	je     0x426944
  4264c1:	mov    eax,DWORD PTR [ebp+0xc]
  4264c4:	test   eax,eax
  4264c6:	je     0x426944
  4264cc:	mov    eax,DWORD PTR [ebp+0x18]
  4264cf:	test   eax,eax
  4264d1:	je     0x426944
  4264d7:	mov    eax,DWORD PTR [ebp+0x20]
  4264da:	mov    ecx,DWORD PTR [ebp+0x8]
  4264dd:	xor    eax,0x8ac
  4264e2:	add    eax,0x72f3
  4264e7:	cmp    WORD PTR [ecx],ax
  4264ea:	jne    0x426944
  4264f0:	mov    eax,DWORD PTR [ebp-0x4]
  4264f3:	xor    eax,esi
  4264f5:	add    eax,edi
  4264f7:	mov    DWORD PTR [ebp-0x30],eax
  4264fa:	mov    eax,DWORD PTR [ebp-0x4]
  4264fd:	mov    ecx,DWORD PTR [ebp+0x8]
  426500:	mov    eax,DWORD PTR [ebp+0x8]
  426503:	add    eax,DWORD PTR [ecx+0x3c]
  426506:	mov    DWORD PTR [ebp+0xc],eax
  426509:	mov    eax,DWORD PTR [eax+0x50]
  42650c:	test   eax,eax
  42650e:	je     0x426944
  426514:	mov    DWORD PTR [ebp-0x2c],0xf88c85a1
  42651b:	mov    eax,DWORD PTR [ebp-0x2c]
  42651e:	xor    eax,esi
  426520:	add    eax,edi
  426522:	mov    DWORD PTR [ebp-0x2c],eax
  426525:	mov    eax,DWORD PTR [ebp-0x4]
  426528:	mov    eax,DWORD PTR [ebx+0x190]
  42652e:	mov    ecx,DWORD PTR [eax]
  426530:	mov    ecx,DWORD PTR [ecx+0x3c]
  426533:	add    ecx,DWORD PTR [eax]
  426535:	mov    eax,DWORD PTR [ebp-0x4]
  426538:	mov    eax,DWORD PTR [ebx+0x18c]
  42653e:	mov    edx,DWORD PTR [eax]
  426540:	mov    DWORD PTR [ebp-0x20],ecx
  426543:	mov    DWORD PTR [ebp+0x20],edx
  426546:	cmp    edx,edx
  426548:	jne    0x42657c
  42654a:	mov    eax,DWORD PTR [ebx+0x1e0]
  426550:	lea    edx,[ebp-0x18]
  426553:	push   edx
  426554:	mov    edx,DWORD PTR [ebp-0xc]
  426557:	xor    edx,esi
  426559:	add    edx,edi
  42655b:	push   edx
  42655c:	push   DWORD PTR [ecx+0x50]
  42655f:	push   DWORD PTR [ebp+0x20]
  426562:	call   DWORD PTR [eax+0x1c]
  426565:	mov    eax,DWORD PTR [ebp-0x20]
  426568:	mov    ecx,DWORD PTR [eax+0x54]
  42656b:	mov    eax,DWORD PTR [eax+0x50]
  42656e:	sub    eax,ecx
  426570:	add    ecx,DWORD PTR [ebp+0x20]
  426573:	push   ecx
  426574:	call   0x426ee1
  426579:	mov    edx,DWORD PTR [ebp+0x20]
  42657c:	mov    eax,DWORD PTR [ebx+0x194]
  426582:	mov    DWORD PTR [eax],edx
  426584:	mov    eax,DWORD PTR [ebp+0xc]
  426587:	push   DWORD PTR [eax+0x54]
  42658a:	push   DWORD PTR [ebp+0x8]
  42658d:	push   edx
  42658e:	call   0x426dd7
  426593:	mov    ecx,DWORD PTR [ebp+0x20]
  426596:	mov    eax,DWORD PTR [ecx+0x3c]
  426599:	add    eax,ecx
  42659b:	movzx  ecx,WORD PTR [eax+0x14]
  42659f:	lea    ecx,[ecx+eax*1+0x18]
  4265a3:	mov    DWORD PTR [ebp+0x18],ecx
  4265a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4265a9:	movzx  edx,WORD PTR [eax+0x6]
  4265ad:	xor    ecx,esi
  4265af:	add    ecx,edi
  4265b1:	mov    DWORD PTR [ebp+0xc],eax
  4265b4:	cmp    edx,ecx
  4265b6:	je     0x426663
  4265bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4265bf:	xor    ecx,esi
  4265c1:	add    ecx,edi
  4265c3:	mov    DWORD PTR [ebp-0x8],ecx
  4265c6:	mov    ecx,DWORD PTR [ebp-0x24]
  4265c9:	movzx  edx,WORD PTR [eax+0x6]
  4265cd:	xor    ecx,esi
  4265cf:	sub    edx,ecx
  4265d1:	sub    edx,edi
  4265d3:	cmp    DWORD PTR [ebp-0x8],edx
  4265d6:	ja     0x426663
  4265dc:	mov    edx,DWORD PTR [ebp+0x18]
  4265df:	add    edx,0x8
  4265e2:	mov    DWORD PTR [ebp+0x18],edx
  4265e5:	jmp    0x4265ea
  4265e7:	mov    edx,DWORD PTR [ebp+0x18]
  4265ea:	mov    eax,DWORD PTR [eax+0x38]
  4265ed:	lea    ecx,[eax-0x1]
  4265f0:	mov    DWORD PTR [ebp-0x38],eax
  4265f3:	mov    eax,DWORD PTR [edx]
  4265f5:	test   eax,ecx
  4265f7:	je     0x426600
  4265f9:	not    ecx
  4265fb:	and    eax,ecx
  4265fd:	add    eax,DWORD PTR [ebp-0x38]
  426600:	mov    ecx,DWORD PTR [edx+0x4]
  426603:	add    ecx,DWORD PTR [ebp+0x20]
  426606:	push   ecx
  426607:	call   0x426ee1
  42660c:	mov    edx,DWORD PTR [ebp-0x4]
  42660f:	mov    eax,DWORD PTR [ebp+0x18]
  426612:	mov    ecx,DWORD PTR [eax+0x8]
  426615:	xor    edx,esi
  426617:	add    edx,edi
  426619:	cmp    ecx,edx
  42661b:	je     0x426634
  42661d:	push   ecx
  42661e:	mov    ecx,DWORD PTR [ebp+0x8]
  426621:	add    ecx,DWORD PTR [eax+0xc]
  426624:	mov    eax,DWORD PTR [eax+0x4]
  426627:	add    eax,DWORD PTR [ebp+0x20]
  42662a:	push   ecx
  42662b:	push   eax
  42662c:	call   0x426dd7
  426631:	mov    eax,DWORD PTR [ebp+0x18]
  426634:	mov    ecx,DWORD PTR [ebp-0x24]
  426637:	mov    edx,DWORD PTR [ebp-0x8]
  42663a:	add    eax,0x28
  42663d:	xor    ecx,esi
  42663f:	lea    ecx,[edx+ecx*1+0x3272f3]
  426646:	mov    edx,DWORD PTR [ebp+0xc]
  426649:	mov    DWORD PTR [ebp+0x18],eax
  42664c:	mov    eax,DWORD PTR [ebp-0x24]
  42664f:	movzx  edx,WORD PTR [edx+0x6]
  426653:	xor    eax,esi
  426655:	sub    edx,eax
  426657:	mov    eax,DWORD PTR [ebp+0xc]
  42665a:	sub    edx,edi
  42665c:	mov    DWORD PTR [ebp-0x8],ecx
  42665f:	cmp    ecx,edx
  426661:	jbe    0x4265e7
  426663:	mov    edx,DWORD PTR [ebx+0x18c]
  426669:	mov    ecx,DWORD PTR [ebp+0x20]
  42666c:	cmp    ecx,DWORD PTR [edx]
  42666e:	jne    0x426697
  426670:	mov    eax,DWORD PTR [ebx+0x1e0]
  426676:	lea    edx,[ebp-0x18]
  426679:	push   edx
  42667a:	mov    edx,DWORD PTR [ebp-0x10]
  42667d:	xor    edx,esi
  42667f:	add    edx,edi
  426681:	push   edx
  426682:	mov    edx,DWORD PTR [ebp-0x20]
  426685:	push   DWORD PTR [edx+0x54]
  426688:	push   ecx
  426689:	call   DWORD PTR [eax+0x1c]
  42668c:	test   eax,eax
  42668e:	je     0x426935
  426694:	mov    eax,DWORD PTR [ebp+0xc]
  426697:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42669d:	mov    ecx,DWORD PTR [ecx]
  42669f:	xor    ecx,esi
  4266a1:	add    ecx,edi
  4266a3:	je     0x426860
  4266a9:	mov    eax,DWORD PTR [ebp-0x4]
  4266ac:	xor    eax,esi
  4266ae:	add    eax,edi
  4266b0:	and    DWORD PTR [ebp+0x8],0x0
  4266b4:	mov    DWORD PTR [ebp-0x14],eax
  4266b7:	mov    eax,0xf89c85dd
  4266bc:	lea    ecx,[eax-0x8]
  4266bf:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4266c6:	mov    DWORD PTR [ebp-0x54],0xf89c852d
  4266cd:	mov    DWORD PTR [ebp-0x50],eax
  4266d0:	mov    DWORD PTR [ebp-0x4c],ecx
  4266d3:	mov    DWORD PTR [ebp-0x48],ecx
  4266d6:	mov    DWORD PTR [ebp-0x44],0xf89c85a1
  4266dd:	mov    edx,DWORD PTR [ebp+0x8]
  4266e0:	mov    ecx,0x8ac
  4266e5:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4266ea:	mov    edx,0x72f3
  4266ef:	add    cx,dx
  4266f2:	mov    edx,DWORD PTR [ebp+0x8]
  4266f5:	inc    DWORD PTR [ebp+0x8]
  4266f8:	cmp    DWORD PTR [ebp+0x8],0x6
  4266fc:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426704:	jb     0x4266dd
  426706:	mov    ecx,0xf89c85d3
  42670b:	mov    DWORD PTR [ebp-0xb0],eax
  426711:	mov    DWORD PTR [ebp-0x9c],eax
  426717:	mov    DWORD PTR [ebp-0x74],eax
  42671a:	mov    DWORD PTR [ebp-0x70],eax
  42671d:	mov    eax,0xf89c852c
  426722:	lea    edx,[ecx+0x2c]
  426725:	mov    DWORD PTR [ebp-0x64],eax
  426728:	mov    DWORD PTR [ebp-0x60],eax
  42672b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  426735:	mov    DWORD PTR [ebp-0xac],ecx
  42673b:	mov    DWORD PTR [ebp-0xa8],edx
  426741:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  42674b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426755:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  42675f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426769:	mov    DWORD PTR [ebp-0x90],0xf89c852d
  426773:	mov    DWORD PTR [ebp-0x8c],ecx
  426779:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  426783:	mov    DWORD PTR [ebp-0x84],edx
  426789:	mov    DWORD PTR [ebp-0x80],0xf89c85d0
  426790:	mov    DWORD PTR [ebp-0x7c],ecx
  426793:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  42679a:	mov    DWORD PTR [ebp-0x6c],ecx
  42679d:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  4267a4:	mov    DWORD PTR [ebp-0x5c],0xf89c85a1
  4267ab:	xor    eax,eax
  4267ad:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4267b4:	xor    cl,0xac
  4267b7:	sub    cl,0xd
  4267ba:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4267c1:	inc    eax
  4267c2:	cmp    eax,0x17
  4267c5:	jb     0x4267ad
  4267c7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4267cd:	lea    ecx,[ebp-0xc0]
  4267d3:	push   ecx
  4267d4:	call   DWORD PTR [eax+0x4]
  4267d7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4267dd:	lea    edx,[ebp-0xd8]
  4267e3:	push   edx
  4267e4:	push   eax
  4267e5:	call   DWORD PTR [ecx+0x8]
  4267e8:	mov    DWORD PTR [ebp-0x40],eax
  4267eb:	lea    eax,[ebp-0x14]
  4267ee:	push   eax
  4267ef:	mov    eax,DWORD PTR [ebx+0x18c]
  4267f5:	push   DWORD PTR [eax]
  4267f7:	mov    eax,DWORD PTR [ebp-0x40]
  4267fa:	call   eax
  4267fc:	mov    eax,DWORD PTR [ebp-0x4]
  4267ff:	xor    eax,esi
  426801:	add    eax,edi
  426803:	mov    DWORD PTR [ebp-0x34],eax
  426806:	mov    ecx,DWORD PTR [ebp-0x4]
  426809:	mov    eax,DWORD PTR [ebp-0x14]
  42680c:	xor    ecx,esi
  42680e:	add    ecx,edi
  426810:	cmp    eax,ecx
  426812:	je     0x42685d
  426814:	mov    DWORD PTR [ebp-0x3c],eax
  426817:	jmp    0x426828
  426819:	mov    eax,DWORD PTR [eax]
  42681b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42681e:	mov    DWORD PTR [ebp-0x14],eax
  426821:	mov    eax,DWORD PTR [ebp-0x14]
  426824:	cmp    eax,ecx
  426826:	je     0x426835
  426828:	mov    edx,DWORD PTR [eax+0x18]
  42682b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426831:	cmp    edx,DWORD PTR [ecx]
  426833:	jne    0x426819
  426835:	mov    ecx,DWORD PTR [ebx+0x18c]
  42683b:	mov    edx,DWORD PTR [eax+0x18]
  42683e:	cmp    edx,DWORD PTR [ecx]
  426840:	jne    0x42685d
  426842:	mov    ecx,DWORD PTR [ebx+0x190]
  426848:	mov    edx,DWORD PTR [ebp-0x20]
  42684b:	mov    edx,DWORD PTR [edx+0x28]
  42684e:	add    edx,DWORD PTR [ecx]
  426850:	mov    DWORD PTR [eax+0x1c],edx
  426853:	mov    eax,DWORD PTR [ebp-0x24]
  426856:	xor    eax,esi
  426858:	add    eax,edi
  42685a:	mov    DWORD PTR [ebp-0x34],eax
  42685d:	mov    eax,DWORD PTR [ebp+0xc]
  426860:	push   ebx
  426861:	push   eax
  426862:	push   DWORD PTR [ebp+0x20]
  426865:	call   0x425fe3
  42686a:	test   eax,eax
  42686c:	je     0x426935
  426872:	push   DWORD PTR [ebp+0xc]
  426875:	mov    ecx,ebx
  426877:	push   DWORD PTR [ebp+0x20]
  42687a:	call   0x425f3c
  42687f:	test   eax,eax
  426881:	je     0x426935
  426887:	mov    eax,DWORD PTR [ebp+0xc]
  42688a:	mov    edx,DWORD PTR [ebp+0x20]
  42688d:	mov    ecx,ebx
  42688f:	call   0x425e15
  426894:	test   eax,eax
  426896:	je     0x426935
  42689c:	push   ebx
  42689d:	push   DWORD PTR [ebp+0x20]
  4268a0:	call   0x4262c6
  4268a5:	test   eax,eax
  4268a7:	je     0x426935
  4268ad:	mov    eax,DWORD PTR [ebx+0x18c]
  4268b3:	mov    edx,DWORD PTR [ebp+0x20]
  4268b6:	cmp    edx,DWORD PTR [eax]
  4268b8:	jne    0x4268d4
  4268ba:	mov    eax,DWORD PTR [ebx+0x1e0]
  4268c0:	lea    ecx,[ebp-0x18]
  4268c3:	push   ecx
  4268c4:	push   DWORD PTR [ebp-0x18]
  4268c7:	mov    ecx,DWORD PTR [ebp-0x20]
  4268ca:	push   DWORD PTR [ecx+0x54]
  4268cd:	push   edx
  4268ce:	call   DWORD PTR [eax+0x1c]
  4268d1:	mov    edx,DWORD PTR [ebp+0x20]
  4268d4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4268da:	mov    eax,DWORD PTR [eax]
  4268dc:	xor    eax,esi
  4268de:	add    eax,edi
  4268e0:	je     0x426919
  4268e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4268e5:	mov    eax,DWORD PTR [ecx+0x28]
  4268e8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a1
  4268ef:	mov    esi,DWORD PTR [ebp+0x8]
  4268f2:	push   DWORD PTR [ebp+0x14]
  4268f5:	xor    esi,0x8ac
  4268fb:	push   DWORD PTR [ebp+0x10]
  4268fe:	add    esi,0x72f3
  426904:	or     WORD PTR [ecx+0x16],si
  426908:	add    eax,edx
  42690a:	push   edx
  42690b:	call   eax
  42690d:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  426917:	jmp    0x426923
  426919:	mov    eax,DWORD PTR [ebp+0xc]
  42691c:	mov    eax,DWORD PTR [eax+0x28]
  42691f:	add    eax,edx
  426921:	call   eax
  426923:	mov    DWORD PTR [ebp-0x8],eax
  426926:	mov    eax,DWORD PTR [ebp-0x8]
  426929:	mov    ecx,DWORD PTR [ebp+0x1c]
  42692c:	mov    DWORD PTR [ecx],eax
  42692e:	mov    DWORD PTR [ebp-0x30],0x1
  426935:	cmp    DWORD PTR [ebp-0x30],0x0
  426939:	jne    0x42693f
  42693b:	and    DWORD PTR [ebp+0x20],0x0
  42693f:	mov    eax,DWORD PTR [ebp+0x20]
  426942:	jmp    0x426946
  426944:	xor    eax,eax
  426946:	pop    edi
  426947:	pop    esi
  426948:	pop    ebx
  426949:	leave  
  42694a:	ret    0x1c
  42694d:	push   ebp
  42694e:	mov    ebp,esp
  426950:	movzx  edx,WORD PTR [ecx+0x6]
  426954:	movzx  eax,WORD PTR [ecx+0x14]
  426958:	push   ebx
  426959:	push   edi
  42695a:	xor    edi,edi
  42695c:	lea    eax,[eax+ecx*1+0x18]
  426960:	test   edx,edx
  426962:	je     0x426983
  426964:	mov    ecx,DWORD PTR [eax+0xc]
  426967:	lea    ebx,[ecx+esi*1]
  42696a:	cmp    DWORD PTR [ebp+0x8],ebx
  42696d:	jb     0x42697b
  42696f:	mov    ebx,DWORD PTR [eax+0x8]
  426972:	add    ebx,ecx
  426974:	add    ebx,esi
  426976:	cmp    DWORD PTR [ebp+0x8],ebx
  426979:	jb     0x426985
  42697b:	add    eax,0x28
  42697e:	inc    edi
  42697f:	cmp    edi,edx
  426981:	jb     0x426964
  426983:	xor    eax,eax
  426985:	pop    edi
  426986:	pop    ebx
  426987:	pop    ebp
  426988:	ret    0x4
  42698b:	push   ebp
  42698c:	mov    ebp,esp
  42698e:	sub    esp,0x34
  426991:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  426998:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  42699f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  4269a6:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  4269ad:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  4269b4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4269bb:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4269c2:	mov    DWORD PTR [ebp-0x10],eax
  4269c5:	mov    eax,DWORD PTR [ebp+0x8]
  4269c8:	mov    DWORD PTR [ebp-0x14],eax
  4269cb:	mov    eax,DWORD PTR [ebp-0xc]
  4269ce:	push   ebx
  4269cf:	mov    ecx,0x75108ac
  4269d4:	xor    eax,ecx
  4269d6:	push   esi
  4269d7:	mov    esi,DWORD PTR [ebp-0x10]
  4269da:	mov    edx,0x3272f3
  4269df:	add    eax,edx
  4269e1:	push   edi
  4269e2:	cmp    esi,eax
  4269e4:	je     0x426bc3
  4269ea:	mov    eax,DWORD PTR [ebp-0xc]
  4269ed:	mov    esi,DWORD PTR [ebp-0x14]
  4269f0:	xor    eax,ecx
  4269f2:	add    eax,edx
  4269f4:	cmp    esi,eax
  4269f6:	je     0x426bc3
  4269fc:	mov    eax,DWORD PTR [ebp-0xc]
  4269ff:	xor    eax,ecx
  426a01:	add    eax,edx
  426a03:	mov    DWORD PTR [ebp-0x24],eax
  426a06:	mov    eax,DWORD PTR [ebp-0xc]
  426a09:	xor    eax,ecx
  426a0b:	add    eax,edx
  426a0d:	mov    DWORD PTR [ebp-0x28],eax
  426a10:	mov    edi,DWORD PTR [ebp-0x20]
  426a13:	mov    ebx,DWORD PTR [ebp-0x8]
  426a16:	mov    esi,0x8ac
  426a1b:	xor    edi,esi
  426a1d:	mov    eax,0x72f3
  426a22:	xor    ebx,esi
  426a24:	add    edi,eax
  426a26:	add    ebx,eax
  426a28:	sub    ebx,edi
  426a2a:	mov    WORD PTR [ebp-0x8],bx
  426a2e:	jmp    0x426af3
  426a33:	mov    edi,DWORD PTR [ebp-0xc]
  426a36:	mov    bx,WORD PTR [ebp-0x4]
  426a3a:	xor    edi,esi
  426a3c:	add    edi,eax
  426a3e:	cmp    bx,di
  426a41:	je     0x426b35
  426a47:	mov    edi,DWORD PTR [ebp-0xc]
  426a4a:	mov    ebx,DWORD PTR [ebp+0xc]
  426a4d:	xor    edi,ecx
  426a4f:	add    edi,edx
  426a51:	cmp    ebx,edi
  426a53:	mov    di,WORD PTR [ebp-0x4]
  426a57:	mov    bx,WORD PTR [ebp+0x8]
  426a5b:	je     0x426ac6
  426a5d:	cmp    bx,di
  426a60:	je     0x426acf
  426a62:	mov    edi,DWORD PTR [ebp-0x20]
  426a65:	mov    bx,WORD PTR [ebp+0x8]
  426a69:	xor    edi,esi
  426a6b:	add    edi,eax
  426a6d:	cmp    bx,di
  426a70:	jb     0x426a90
  426a72:	mov    edi,DWORD PTR [ebp-0x2c]
  426a75:	mov    bx,WORD PTR [ebp+0x8]
  426a79:	xor    edi,esi
  426a7b:	add    edi,eax
  426a7d:	cmp    bx,di
  426a80:	ja     0x426a90
  426a82:	movzx  edi,WORD PTR [ebp+0x8]
  426a86:	movzx  ebx,WORD PTR [ebp-0x8]
  426a8a:	add    edi,ebx
  426a8c:	mov    WORD PTR [ebp+0x8],di
  426a90:	mov    edi,DWORD PTR [ebp-0x20]
  426a93:	mov    bx,WORD PTR [ebp-0x4]
  426a97:	xor    edi,esi
  426a99:	add    edi,eax
  426a9b:	cmp    bx,di
  426a9e:	jb     0x426abe
  426aa0:	mov    edi,DWORD PTR [ebp-0x2c]
  426aa3:	mov    bx,WORD PTR [ebp-0x4]
  426aa7:	xor    edi,esi
  426aa9:	add    edi,eax
  426aab:	cmp    bx,di
  426aae:	ja     0x426abe
  426ab0:	movzx  edi,WORD PTR [ebp-0x4]
  426ab4:	movzx  ebx,WORD PTR [ebp-0x8]
  426ab8:	add    edi,ebx
  426aba:	mov    WORD PTR [ebp-0x4],di
  426abe:	mov    di,WORD PTR [ebp-0x4]
  426ac2:	mov    bx,WORD PTR [ebp+0x8]
  426ac6:	cmp    bx,di
  426ac9:	jne    0x426bc3
  426acf:	mov    edi,DWORD PTR [ebp-0x1c]
  426ad2:	mov    ebx,DWORD PTR [ebp-0x10]
  426ad5:	xor    edi,ecx
  426ad7:	lea    edi,[edi+ebx*1+0x3272f3]
  426ade:	mov    DWORD PTR [ebp-0x10],edi
  426ae1:	mov    edi,DWORD PTR [ebp-0x1c]
  426ae4:	mov    ebx,DWORD PTR [ebp-0x14]
  426ae7:	xor    edi,ecx
  426ae9:	lea    edi,[edi+ebx*1+0x3272f3]
  426af0:	mov    DWORD PTR [ebp-0x14],edi
  426af3:	mov    edi,DWORD PTR [ebp-0x24]
  426af6:	mov    ebx,DWORD PTR [ebp-0x10]
  426af9:	mov    di,WORD PTR [ebx+edi*2]
  426afd:	mov    WORD PTR [ebp+0x8],di
  426b01:	mov    edi,DWORD PTR [ebp-0x28]
  426b04:	mov    ebx,DWORD PTR [ebp-0x14]
  426b07:	mov    di,WORD PTR [ebx+edi*2]
  426b0b:	mov    WORD PTR [ebp-0x4],di
  426b0f:	mov    edi,DWORD PTR [ebp-0xc]
  426b12:	mov    bx,WORD PTR [ebp+0x8]
  426b16:	xor    edi,esi
  426b18:	add    edi,eax
  426b1a:	cmp    bx,di
  426b1d:	jne    0x426a33
  426b23:	mov    eax,DWORD PTR [ebp-0x18]
  426b26:	mov    esi,DWORD PTR [ebp-0xc]
  426b29:	xor    eax,ecx
  426b2b:	add    eax,edx
  426b2d:	imul   eax,esi
  426b30:	mov    DWORD PTR [ebp-0xc],eax
  426b33:	jmp    0x426b47
  426b35:	mov    eax,DWORD PTR [ebp-0xc]
  426b38:	mov    esi,DWORD PTR [ebp-0x18]
  426b3b:	xor    eax,ecx
  426b3d:	lea    eax,[eax+esi*1+0x3272f3]
  426b44:	mov    DWORD PTR [ebp-0x18],eax
  426b47:	mov    eax,DWORD PTR [ebp-0x24]
  426b4a:	sub    eax,edx
  426b4c:	xor    eax,ecx
  426b4e:	mov    DWORD PTR [ebp-0x30],eax
  426b51:	mov    eax,DWORD PTR [ebp-0x28]
  426b54:	sub    eax,edx
  426b56:	xor    eax,ecx
  426b58:	mov    DWORD PTR [ebp-0x34],eax
  426b5b:	mov    eax,DWORD PTR [ebp-0x34]
  426b5e:	mov    esi,DWORD PTR [ebp-0x1c]
  426b61:	xor    esi,ecx
  426b63:	add    esi,edx
  426b65:	xor    eax,ecx
  426b67:	add    eax,0x3272f3
  426b6c:	imul   esi,eax
  426b6f:	mov    eax,DWORD PTR [ebp-0x14]
  426b72:	movzx  eax,WORD PTR [esi+eax*1]
  426b76:	mov    esi,DWORD PTR [ebp-0x30]
  426b79:	mov    edi,DWORD PTR [ebp-0x1c]
  426b7c:	xor    esi,ecx
  426b7e:	add    esi,edx
  426b80:	xor    edi,ecx
  426b82:	add    edi,edx
  426b84:	imul   edi,esi
  426b87:	mov    esi,DWORD PTR [ebp-0x10]
  426b8a:	movzx  esi,WORD PTR [edi+esi*1]
  426b8e:	sub    eax,edx
  426b90:	sub    esi,edx
  426b92:	xor    eax,ecx
  426b94:	xor    esi,ecx
  426b96:	cmp    esi,eax
  426b98:	jne    0x426bc3
  426b9a:	mov    eax,DWORD PTR [ebp-0x30]
  426b9d:	mov    esi,DWORD PTR [ebp-0x1c]
  426ba0:	xor    eax,ecx
  426ba2:	add    eax,0x3272f3
  426ba7:	xor    esi,ecx
  426ba9:	add    esi,edx
  426bab:	imul   esi,eax
  426bae:	mov    eax,DWORD PTR [ebp-0x10]
  426bb1:	movzx  eax,WORD PTR [esi+eax*1]
  426bb5:	mov    esi,DWORD PTR [ebp-0xc]
  426bb8:	sub    eax,edx
  426bba:	xor    eax,ecx
  426bbc:	cmp    eax,esi
  426bbe:	mov    eax,DWORD PTR [ebp-0xc]
  426bc1:	je     0x426bc6
  426bc3:	mov    eax,DWORD PTR [ebp-0x18]
  426bc6:	pop    edi
  426bc7:	xor    eax,ecx
  426bc9:	pop    esi
  426bca:	add    eax,edx
  426bcc:	pop    ebx
  426bcd:	leave  
  426bce:	ret    0x8
  426bd1:	push   ebp
  426bd2:	mov    ebp,esp
  426bd4:	push   ecx
  426bd5:	mov    cx,WORD PTR [eax]
  426bd8:	push   esi
  426bd9:	mov    esi,0x3b5b
  426bde:	sub    cx,si
  426be1:	mov    esi,0x8a99
  426be6:	xor    cx,si
  426be9:	mov    esi,0x4e3c
  426bee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426bf5:	mov    edx,0xf89c85a1
  426bfa:	cmp    cx,si
  426bfd:	je     0x426c5c
  426bff:	push   ebx
  426c00:	push   edi
  426c01:	movzx  ecx,cx
  426c04:	mov    edi,0xffcd8d0d
  426c09:	mov    esi,0x75108ac
  426c0e:	mov    ebx,0x4f98
  426c13:	cmp    cx,bx
  426c16:	jne    0x426c1b
  426c18:	mov    DWORD PTR [ebp-0x4],edx
  426c1b:	lea    edx,[edi+0x1]
  426c1e:	xor    edx,esi
  426c20:	mov    edi,edx
  426c22:	xor    edi,esi
  426c24:	mov    cx,WORD PTR [eax+edi*2+0x64e5e6]
  426c2c:	mov    ebx,0x3b5b
  426c31:	sub    cx,bx
  426c34:	mov    ebx,0x8a99
  426c39:	xor    cx,bx
  426c3c:	mov    ebx,0x4e3c
  426c41:	cmp    cx,bx
  426c44:	jne    0x426c0e
  426c46:	mov    ecx,DWORD PTR [ebp-0x4]
  426c49:	pop    edi
  426c4a:	pop    ebx
  426c4b:	cmp    ecx,0xf89c85a0
  426c51:	je     0x426c5c
  426c53:	xor    ecx,esi
  426c55:	lea    eax,[eax+ecx*2+0x64e5e8]
  426c5c:	pop    esi
  426c5d:	leave  
  426c5e:	ret    
  426c5f:	push   ebp
  426c60:	mov    ebp,esp
  426c62:	push   ecx
  426c63:	push   esi
  426c64:	push   edi
  426c65:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426c6c:	mov    esi,0xf89c85a1
  426c71:	call   0x426bd1
  426c76:	mov    edi,eax
  426c78:	mov    al,BYTE PTR [edi]
  426c7a:	sub    al,0x2
  426c7c:	xor    al,0x7d
  426c7e:	cmp    al,0x83
  426c80:	je     0x426ce3
  426c82:	mov    eax,edi
  426c84:	mov    edx,0xffcd8d0d
  426c89:	mov    ecx,0x75108ac
  426c8e:	push   ebx
  426c8f:	mov    ax,WORD PTR [eax]
  426c92:	mov    ebx,0x3b5b
  426c97:	sub    ax,bx
  426c9a:	mov    ebx,0x8a99
  426c9f:	xor    ax,bx
  426ca2:	mov    ebx,0x4e4a
  426ca7:	cmp    ax,bx
  426caa:	jne    0x426caf
  426cac:	mov    DWORD PTR [ebp-0x4],esi
  426caf:	lea    esi,[edx+0x1]
  426cb2:	xor    esi,ecx
  426cb4:	mov    edx,esi
  426cb6:	xor    edx,ecx
  426cb8:	lea    eax,[edi+edx*2+0x64e5e6]
  426cbf:	mov    bl,BYTE PTR [eax]
  426cc1:	sub    bl,0x2
  426cc4:	xor    bl,0x7d
  426cc7:	cmp    bl,0x83
  426cca:	jne    0x426c8f
  426ccc:	mov    eax,DWORD PTR [ebp-0x4]
  426ccf:	pop    ebx
  426cd0:	cmp    eax,0xf89c85a0
  426cd5:	je     0x426ce3
  426cd7:	xor    eax,ecx
  426cd9:	xor    ecx,ecx
  426cdb:	mov    WORD PTR [edi+eax*2+0x64e5e6],cx
  426ce3:	mov    eax,edi
  426ce5:	pop    edi
  426ce6:	pop    esi
  426ce7:	leave  
  426ce8:	ret    
  426ce9:	push   ebp
  426cea:	mov    ebp,esp
  426cec:	push   ecx
  426ced:	push   esi
  426cee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426cf5:	mov    esi,0xf89c85a1
  426cfa:	call   0x426bd1
  426cff:	mov    cx,WORD PTR [eax]
  426d02:	mov    edx,0x3b5b
  426d07:	sub    cx,dx
  426d0a:	mov    edx,0x8a99
  426d0f:	xor    cx,dx
  426d12:	mov    edx,0x4e3c
  426d17:	cmp    cx,dx
  426d1a:	je     0x426d73
  426d1c:	push   ebx
  426d1d:	push   edi
  426d1e:	movzx  ecx,cx
  426d21:	mov    edx,0xffcd8d0d
  426d26:	mov    edi,0x75108ac
  426d2b:	mov    ebx,0x4e4a
  426d30:	cmp    cx,bx
  426d33:	jne    0x426d38
  426d35:	mov    DWORD PTR [ebp-0x4],esi
  426d38:	lea    esi,[edx+0x1]
  426d3b:	xor    esi,edi
  426d3d:	mov    edx,esi
  426d3f:	xor    edx,edi
  426d41:	mov    cx,WORD PTR [eax+edx*2+0x64e5e6]
  426d49:	mov    ebx,0x3b5b
  426d4e:	sub    cx,bx
  426d51:	mov    ebx,0x8a99
  426d56:	xor    cx,bx
  426d59:	mov    ebx,0x4e3c
  426d5e:	cmp    cx,bx
  426d61:	jne    0x426d2b
  426d63:	cmp    DWORD PTR [ebp-0x4],0xf89c85a0
  426d6a:	pop    edi
  426d6b:	pop    ebx
  426d6c:	je     0x426d73
  426d6e:	xor    eax,eax
  426d70:	inc    eax
  426d71:	jmp    0x426d75
  426d73:	xor    eax,eax
  426d75:	pop    esi
  426d76:	leave  
  426d77:	ret    
  426d78:	push   ebp
  426d79:	mov    ebp,esp
  426d7b:	push   ecx
  426d7c:	mov    eax,DWORD PTR [ebp+0x8]
  426d7f:	movzx  ecx,WORD PTR [eax]
  426d82:	push   esi
  426d83:	lea    eax,[ecx-0x3b5b]
  426d89:	mov    esi,0x8a99
  426d8e:	push   edi
  426d8f:	xor    eax,esi
  426d91:	mov    edi,0x4e3c
  426d96:	mov    DWORD PTR [ebp-0x4],edx
  426d99:	cmp    ax,di
  426d9c:	je     0x426dc9
  426d9e:	mov    eax,DWORD PTR [ebp+0x8]
  426da1:	sub    eax,edx
  426da3:	mov    DWORD PTR [ebp+0x8],eax
  426da6:	jmp    0x426dab
  426da8:	mov    eax,DWORD PTR [ebp+0x8]
  426dab:	mov    WORD PTR [edx],cx
  426dae:	add    edx,0x2
  426db1:	movzx  edi,WORD PTR [eax+edx*1]
  426db5:	mov    ecx,edi
  426db7:	add    edi,0xffffc4a5
  426dbd:	xor    edi,esi
  426dbf:	mov    eax,0x4e3c
  426dc4:	cmp    di,ax
  426dc7:	jne    0x426da8
  426dc9:	xor    eax,eax
  426dcb:	pop    edi
  426dcc:	mov    WORD PTR [edx],ax
  426dcf:	mov    eax,DWORD PTR [ebp-0x4]
  426dd2:	pop    esi
  426dd3:	leave  
  426dd4:	ret    0x4
  426dd7:	push   ebp
  426dd8:	mov    ebp,esp
  426dda:	sub    esp,0x18
  426ddd:	mov    DWORD PTR [ebp-0x8],0xf89c85a1
  426de4:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426deb:	mov    ecx,DWORD PTR [ebp-0x8]
  426dee:	push   esi
  426def:	mov    eax,0x75108ac
  426df4:	xor    ecx,eax
  426df6:	mov    esi,0x3272f3
  426dfb:	add    ecx,esi
  426dfd:	mov    DWORD PTR [ebp-0x4],ecx
  426e00:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426e07:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  426e0e:	push   edi
  426e0f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426e16:	jmp    0x426eb7
  426e1b:	mov    ecx,DWORD PTR [ebp-0x4]
  426e1e:	mov    edx,DWORD PTR [ebp+0x10]
  426e21:	sub    edx,ecx
  426e23:	mov    ecx,DWORD PTR [ebp-0xc]
  426e26:	xor    ecx,eax
  426e28:	add    ecx,esi
  426e2a:	cmp    edx,ecx
  426e2c:	jbe    0x426e49
  426e2e:	mov    edx,DWORD PTR [ebp-0x4]
  426e31:	add    edx,DWORD PTR [ebp+0x8]
  426e34:	mov    ecx,DWORD PTR [ebp-0x4]
  426e37:	add    ecx,DWORD PTR [ebp+0xc]
  426e3a:	mov    edi,DWORD PTR [ecx]
  426e3c:	mov    DWORD PTR [edx],edi
  426e3e:	mov    ecx,DWORD PTR [ecx+0x4]
  426e41:	mov    DWORD PTR [edx+0x4],ecx
  426e44:	mov    ecx,DWORD PTR [ebp-0xc]
  426e47:	jmp    0x426e96
  426e49:	mov    ecx,DWORD PTR [ebp-0x4]
  426e4c:	mov    edx,DWORD PTR [ebp+0x10]
  426e4f:	sub    edx,ecx
  426e51:	mov    ecx,DWORD PTR [ebp-0x10]
  426e54:	xor    ecx,eax
  426e56:	add    ecx,esi
  426e58:	cmp    edx,ecx
  426e5a:	mov    ecx,DWORD PTR [ebp-0x4]
  426e5d:	jbe    0x426e71
  426e5f:	add    ecx,DWORD PTR [ebp+0x8]
  426e62:	mov    edx,DWORD PTR [ebp-0x4]
  426e65:	add    edx,DWORD PTR [ebp+0xc]
  426e68:	mov    edx,DWORD PTR [edx]
  426e6a:	mov    DWORD PTR [ecx],edx
  426e6c:	mov    ecx,DWORD PTR [ebp-0x10]
  426e6f:	jmp    0x426e96
  426e71:	mov    edx,DWORD PTR [ebp+0x10]
  426e74:	sub    edx,ecx
  426e76:	mov    ecx,DWORD PTR [ebp-0x14]
  426e79:	xor    ecx,eax
  426e7b:	add    ecx,esi
  426e7d:	cmp    edx,ecx
  426e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  426e82:	jbe    0x426ea7
  426e84:	add    ecx,DWORD PTR [ebp+0x8]
  426e87:	mov    edx,DWORD PTR [ebp-0x4]
  426e8a:	add    edx,DWORD PTR [ebp+0xc]
  426e8d:	mov    dx,WORD PTR [edx]
  426e90:	mov    WORD PTR [ecx],dx
  426e93:	mov    ecx,DWORD PTR [ebp-0x14]
  426e96:	mov    edx,DWORD PTR [ebp-0x4]
  426e99:	xor    ecx,eax
  426e9b:	lea    ecx,[ecx+edx*1+0x3272f3]
  426ea2:	mov    DWORD PTR [ebp-0x4],ecx
  426ea5:	jmp    0x426eb7
  426ea7:	add    ecx,DWORD PTR [ebp+0x8]
  426eaa:	mov    edx,DWORD PTR [ebp-0x4]
  426ead:	add    edx,DWORD PTR [ebp+0xc]
  426eb0:	mov    dl,BYTE PTR [edx]
  426eb2:	mov    BYTE PTR [ecx],dl
  426eb4:	inc    DWORD PTR [ebp-0x4]
  426eb7:	mov    ecx,DWORD PTR [ebp-0x18]
  426eba:	mov    edx,DWORD PTR [ebp+0x10]
  426ebd:	xor    ecx,eax
  426ebf:	add    ecx,esi
  426ec1:	imul   ecx,edx
  426ec4:	mov    edx,DWORD PTR [ebp-0x8]
  426ec7:	mov    edi,DWORD PTR [ebp-0x4]
  426eca:	xor    edx,eax
  426ecc:	lea    edx,[edx+edi*1+0x3272f3]
  426ed3:	cmp    edx,ecx
  426ed5:	jb     0x426e1b
  426edb:	pop    edi
  426edc:	pop    esi
  426edd:	leave  
  426ede:	ret    0xc
  426ee1:	push   ebp
  426ee2:	mov    ebp,esp
  426ee4:	sub    esp,0xc
  426ee7:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426eee:	push   esi
  426eef:	mov    esi,eax
  426ef1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  426ef8:	mov    edx,DWORD PTR [ebp-0x4]
  426efb:	mov    eax,0x75108ac
  426f00:	xor    edx,eax
  426f02:	mov    ecx,0x3272f3
  426f07:	add    edx,ecx
  426f09:	cmp    esi,edx
  426f0b:	je     0x426f4d
  426f0d:	push   ebx
  426f0e:	push   edi
  426f0f:	mov    edx,DWORD PTR [ebp-0x8]
  426f12:	mov    ebx,DWORD PTR [ebp+0x8]
  426f15:	xor    edx,eax
  426f17:	mov    edi,0xffcd8d0d
  426f1c:	sub    edi,edx
  426f1e:	add    esi,edi
  426f20:	lea    edx,[esi-0x3272f3]
  426f26:	xor    edx,eax
  426f28:	mov    DWORD PTR [ebp-0xc],edx
  426f2b:	mov    edx,DWORD PTR [ebp-0x4]
  426f2e:	mov    edi,DWORD PTR [ebp-0xc]
  426f31:	xor    dl,0xac
  426f34:	sub    dl,0xd
  426f37:	xor    edi,eax
  426f39:	mov    BYTE PTR [edi+ebx*1+0x3272f3],dl
  426f40:	mov    edx,DWORD PTR [ebp-0x4]
  426f43:	xor    edx,eax
  426f45:	add    edx,ecx
  426f47:	cmp    esi,edx
  426f49:	jne    0x426f0f
  426f4b:	pop    edi
  426f4c:	pop    ebx
  426f4d:	pop    esi
  426f4e:	leave  
  426f4f:	ret    0x4
  426f52:	push   ebp
  426f53:	mov    ebp,esp
  426f55:	sub    esp,0x21c
  426f5b:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426f62:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  426f69:	mov    eax,DWORD PTR [ebp+0x10]
  426f6c:	mov    eax,DWORD PTR [ebp-0x4]
  426f6f:	mov    ecx,DWORD PTR [ebp+0x8]
  426f72:	push   esi
  426f73:	push   edi
  426f74:	mov    edi,0x75108ac
  426f79:	xor    eax,edi
  426f7b:	mov    esi,0x3272f3
  426f80:	add    eax,esi
  426f82:	cmp    eax,ecx
  426f84:	mov    eax,DWORD PTR [ebp-0x4]
  426f87:	jne    0x426f92
  426f89:	xor    eax,edi
  426f8b:	add    eax,esi
  426f8d:	jmp    0x42703e
  426f92:	mov    ecx,DWORD PTR [ebp+0xc]
  426f95:	xor    eax,edi
  426f97:	add    eax,esi
  426f99:	cmp    eax,ecx
  426f9b:	jne    0x426fa2
  426f9d:	mov    eax,DWORD PTR [ebp-0x4]
  426fa0:	jmp    0x426f89
  426fa2:	lea    eax,[ebp-0x21c]
  426fa8:	mov    DWORD PTR [ebp-0x8],eax
  426fab:	mov    eax,DWORD PTR [ebp+0xc]
  426fae:	mov    DWORD PTR [ebp-0x10],eax
  426fb1:	mov    eax,DWORD PTR [ebp-0x4]
  426fb4:	xor    eax,edi
  426fb6:	add    eax,esi
  426fb8:	mov    DWORD PTR [ebp+0x10],eax
  426fbb:	mov    eax,DWORD PTR [ebp+0xc]
  426fbe:	push   ebx
  426fbf:	call   0x426ce9
  426fc4:	mov    ebx,eax
  426fc6:	mov    eax,DWORD PTR [ebp+0x8]
  426fc9:	mov    eax,DWORD PTR [eax+0x14]
  426fcc:	jmp    0x427026
  426fce:	mov    eax,DWORD PTR [ebp+0xc]
  426fd1:	sub    eax,0x8
  426fd4:	mov    DWORD PTR [ebp-0xc],eax
  426fd7:	mov    eax,DWORD PTR [ebp-0xc]
  426fda:	mov    eax,DWORD PTR [eax+0x28]
  426fdd:	call   0x426bd1
  426fe2:	mov    DWORD PTR [ebp+0x10],eax
  426fe5:	push   DWORD PTR [ebp+0x10]
  426fe8:	mov    edx,DWORD PTR [ebp-0x8]
  426feb:	call   0x426d78
  426ff0:	mov    eax,DWORD PTR [ebp-0x4]
  426ff3:	xor    eax,edi
  426ff5:	add    eax,esi
  426ff7:	cmp    eax,ebx
  426ff9:	jne    0x427003
  426ffb:	mov    eax,DWORD PTR [ebp-0x8]
  426ffe:	call   0x426c5f
  427003:	mov    eax,DWORD PTR [ebp-0x14]
  427006:	xor    eax,edi
  427008:	add    eax,esi
  42700a:	push   eax
  42700b:	push   DWORD PTR [ebp-0x10]
  42700e:	mov    eax,DWORD PTR [ebp-0x8]
  427011:	call   0x42698b
  427016:	mov    ecx,DWORD PTR [ebp-0x4]
  427019:	xor    ecx,edi
  42701b:	add    ecx,esi
  42701d:	cmp    eax,ecx
  42701f:	je     0x427044
  427021:	mov    eax,DWORD PTR [ebp+0xc]
  427024:	mov    eax,DWORD PTR [eax]
  427026:	mov    DWORD PTR [ebp+0xc],eax
  427029:	mov    eax,DWORD PTR [ebp+0x8]
  42702c:	mov    ecx,DWORD PTR [ebp+0xc]
  42702f:	add    eax,0x14
  427032:	cmp    ecx,eax
  427034:	jne    0x426fce
  427036:	mov    eax,DWORD PTR [ebp-0x4]
  427039:	xor    eax,edi
  42703b:	add    eax,esi
  42703d:	pop    ebx
  42703e:	pop    edi
  42703f:	pop    esi
  427040:	leave  
  427041:	ret    0xc
  427044:	mov    eax,DWORD PTR [ebp-0xc]
  427047:	mov    eax,DWORD PTR [eax+0x18]
  42704a:	jmp    0x42703d
  42704c:	push   ebp
  42704d:	mov    ebp,esp
  42704f:	mov    eax,DWORD PTR [ebp+0xc]
  427052:	sub    esp,0x10
  427055:	cmp    DWORD PTR [ebp+0x8],0x0
  427059:	push   ebx
  42705a:	push   esi
  42705b:	push   edi
  42705c:	je     0x427111
  427062:	test   eax,eax
  427064:	je     0x427111
  42706a:	movzx  eax,WORD PTR [eax+0x20]
  42706e:	mov    ecx,eax
  427070:	mov    DWORD PTR [ebp-0x10],eax
  427073:	xor    edx,edx
  427075:	and    DWORD PTR [ebp-0x8],edx
  427078:	mov    eax,0x8a99
  42707d:	xor    ecx,eax
  42707f:	add    ecx,0x3b5b
  427085:	mov    DWORD PTR [ebp-0xc],ecx
  427088:	and    DWORD PTR [ebp-0x4],0x0
  42708c:	xor    ecx,ecx
  42708e:	push   0x7d
  427090:	pop    edi
  427091:	cmp    cx,WORD PTR [ebp-0xc]
  427095:	jae    0x4270fb
  427097:	lea    esi,[edx-0x3b5b]
  42709d:	xor    esi,eax
  42709f:	movzx  ecx,WORD PTR [ebp-0x4]
  4270a3:	mov    ebx,DWORD PTR [ebp+0xc]
  4270a6:	lea    ecx,[ebx+ecx*4]
  4270a9:	cmp    WORD PTR [ecx+0x2],si
  4270ad:	jne    0x4270e6
  4270af:	movzx  ecx,WORD PTR [ecx]
  4270b2:	mov    edi,0x4e3c
  4270b7:	cmp    cx,di
  4270ba:	jne    0x4270c8
  4270bc:	mov    ebx,DWORD PTR [ebp+0x8]
  4270bf:	movzx  edi,dx
  4270c2:	cmp    BYTE PTR [edi+ebx*1],0x0
  4270c6:	je     0x4270f5
  4270c8:	mov    ebx,DWORD PTR [ebp+0x8]
  4270cb:	movzx  edi,dx
  4270ce:	movsx  di,BYTE PTR [edi+ebx*1]
  4270d3:	mov    ebx,0x3b5b
  4270d8:	sub    di,bx
  4270db:	xor    di,ax
  4270de:	cmp    cx,di
  4270e1:	je     0x4270f5
  4270e3:	push   0xffffff83
  4270e5:	pop    edi
  4270e6:	inc    DWORD PTR [ebp-0x4]
  4270e9:	mov    cx,WORD PTR [ebp-0xc]
  4270ed:	cmp    WORD PTR [ebp-0x4],cx
  4270f1:	jb     0x42709f
  4270f3:	jmp    0x4270fb
  4270f5:	inc    DWORD PTR [ebp-0x8]
  4270f8:	push   0xffffff82
  4270fa:	pop    edi
  4270fb:	mov    esi,DWORD PTR [ebp+0x8]
  4270fe:	movzx  ecx,dx
  427101:	cmp    BYTE PTR [ecx+esi*1],0x0
  427105:	je     0x42711a
  427107:	inc    edx
  427108:	cmp    edi,0xffffff83
  42710b:	jne    0x427088
  427111:	xor    eax,eax
  427113:	pop    edi
  427114:	pop    esi
  427115:	pop    ebx
  427116:	leave  
  427117:	ret    0x8
  42711a:	mov    ecx,DWORD PTR [ebp-0x8]
  42711d:	add    ecx,0xffffc4a5
  427123:	xor    cx,ax
  427126:	xor    eax,eax
  427128:	cmp    cx,WORD PTR [ebp-0x10]
  42712c:	sete   al
  42712f:	jmp    0x427113
  427131:	push   ebp
  427132:	mov    ebp,esp
  427134:	sub    esp,0x50
  427137:	push   edi
  427138:	mov    edi,eax
  42713a:	mov    eax,DWORD PTR [edi+0x1a8]
  427140:	cmp    DWORD PTR [eax],0x0
  427143:	jne    0x42714c
  427145:	xor    eax,eax
  427147:	jmp    0x42727d
  42714c:	push   DWORD PTR [ebp+0x8]
  42714f:	push   0x2c
  427151:	pop    eax
  427152:	call   0x426ee1
  427157:	mov    edx,DWORD PTR [edi+0x1ac]
  42715d:	lea    eax,[edi+0x22]
  427160:	mov    DWORD PTR [ebp-0x4c],eax
  427163:	lea    eax,[edi+0x44]
  427166:	mov    DWORD PTR [ebp-0x48],eax
  427169:	lea    eax,[edi+0x66]
  42716c:	mov    DWORD PTR [ebp-0x44],eax
  42716f:	lea    eax,[edi+0x88]
  427175:	mov    DWORD PTR [ebp-0x40],eax
  427178:	lea    eax,[edi+0xaa]
  42717e:	mov    DWORD PTR [ebp-0x3c],eax
  427181:	lea    eax,[edi+0xcc]
  427187:	mov    DWORD PTR [ebp-0x38],eax
  42718a:	lea    eax,[edi+0xee]
  427190:	mov    DWORD PTR [ebp-0x34],eax
  427193:	lea    eax,[edi+0x110]
  427199:	mov    DWORD PTR [ebp-0x30],eax
  42719c:	lea    eax,[edi+0x132]
  4271a2:	mov    DWORD PTR [ebp-0x2c],eax
  4271a5:	lea    eax,[edi+0x154]
  4271ab:	push   edi
  4271ac:	mov    DWORD PTR [ebp-0x50],edi
  4271af:	mov    DWORD PTR [ebp-0x28],eax
  4271b2:	call   0x4272b1
  4271b7:	push   eax
  4271b8:	mov    eax,DWORD PTR [edi+0x1a8]
  4271be:	push   DWORD PTR [eax]
  4271c0:	call   0x426f52
  4271c5:	mov    DWORD PTR [ebp-0x10],eax
  4271c8:	test   eax,eax
  4271ca:	je     0x42727d
  4271d0:	mov    ecx,DWORD PTR [eax+0x3c]
  4271d3:	push   ebx
  4271d4:	push   esi
  4271d5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4271d9:	add    esi,eax
  4271db:	mov    edi,DWORD PTR [esi+0x24]
  4271de:	mov    ecx,DWORD PTR [esi+0x1c]
  4271e1:	mov    edx,DWORD PTR [esi+0x20]
  4271e4:	mov    ebx,DWORD PTR [esi+0x18]
  4271e7:	add    edi,eax
  4271e9:	mov    DWORD PTR [ebp-0x20],edi
  4271ec:	mov    edi,DWORD PTR [esi+0x14]
  4271ef:	add    ecx,eax
  4271f1:	add    edx,eax
  4271f3:	mov    DWORD PTR [ebp-0xc],ecx
  4271f6:	mov    DWORD PTR [ebp-0x1c],edx
  4271f9:	mov    DWORD PTR [ebp-0x8],edi
  4271fc:	cmp    edi,ebx
  4271fe:	ja     0x427203
  427200:	mov    DWORD PTR [ebp-0x8],ebx
  427203:	xor    ebx,ebx
  427205:	mov    DWORD PTR [ebp-0x18],ebx
  427208:	cmp    DWORD PTR [ebp-0x8],ebx
  42720b:	jbe    0x42727b
  42720d:	jmp    0x427212
  42720f:	mov    edx,DWORD PTR [ebp-0x1c]
  427212:	mov    edi,DWORD PTR [ebp-0x20]
  427215:	movzx  edi,WORD PTR [edi+ebx*2]
  427219:	cmp    ebx,DWORD PTR [esi+0x18]
  42721c:	jae    0x42727b
  42721e:	cmp    edi,DWORD PTR [esi+0x14]
  427221:	jae    0x42727b
  427223:	mov    ebx,DWORD PTR [edx+ebx*4]
  427226:	mov    edx,DWORD PTR [ebp+0x8]
  427229:	mov    edi,DWORD PTR [ecx+edi*4]
  42722c:	mov    DWORD PTR [ebp-0x4],edx
  42722f:	lea    edx,[ebp-0x50]
  427232:	add    ebx,eax
  427234:	add    edi,eax
  427236:	sub    edx,DWORD PTR [ebp+0x8]
  427239:	mov    DWORD PTR [ebp-0x14],0xb
  427240:	mov    DWORD PTR [ebp-0x24],edx
  427243:	mov    edx,DWORD PTR [ebp-0x4]
  427246:	cmp    DWORD PTR [edx],0x0
  427249:	jne    0x427266
  42724b:	mov    eax,DWORD PTR [ebp-0x24]
  42724e:	push   DWORD PTR [eax+edx*1]
  427251:	push   ebx
  427252:	call   0x42704c
  427257:	mov    ecx,DWORD PTR [ebp-0xc]
  42725a:	test   eax,eax
  42725c:	je     0x427263
  42725e:	mov    eax,DWORD PTR [ebp-0x4]
  427261:	mov    DWORD PTR [eax],edi
  427263:	mov    eax,DWORD PTR [ebp-0x10]
  427266:	add    DWORD PTR [ebp-0x4],0x4
  42726a:	dec    DWORD PTR [ebp-0x14]
  42726d:	jne    0x427243
  42726f:	mov    ebx,DWORD PTR [ebp-0x18]
  427272:	inc    ebx
  427273:	mov    DWORD PTR [ebp-0x18],ebx
  427276:	cmp    ebx,DWORD PTR [ebp-0x8]
  427279:	jb     0x42720f
  42727b:	pop    esi
  42727c:	pop    ebx
  42727d:	pop    edi
  42727e:	leave  
  42727f:	ret    0x4
  427282:	push   ebp
  427283:	mov    ebp,esp
  427285:	mov    eax,DWORD PTR [ebp+0x8]
  427288:	push   esi
  427289:	push   DWORD PTR [eax+0x1e0]
  42728f:	lea    esi,[eax+0x198]
  427295:	mov    eax,DWORD PTR [ebp+0x8]
  427298:	call   0x427131
  42729d:	mov    ecx,DWORD PTR [esi]
  42729f:	mov    DWORD PTR [ecx],eax
  4272a1:	mov    eax,DWORD PTR [esi]
  4272a3:	xor    ecx,ecx
  4272a5:	cmp    DWORD PTR [eax],ecx
  4272a7:	pop    esi
  4272a8:	setne  cl
  4272ab:	mov    eax,ecx
  4272ad:	pop    ebp
  4272ae:	ret    0x4
  4272b1:	mov    ecx,DWORD PTR [edi+0x188]
  4272b7:	push   ebx
  4272b8:	jmp    0x4272cd
  4272ba:	xor    eax,0x8a99
  4272bf:	add    eax,0x3b5b
  4272c4:	mov    WORD PTR [ecx],ax
  4272c7:	add    ecx,0x2
  4272ca:	add    edx,0x2
  4272cd:	movzx  eax,WORD PTR [edx]
  4272d0:	mov    ebx,0x4e3c
  4272d5:	cmp    ax,bx
  4272d8:	jne    0x4272ba
  4272da:	xor    eax,eax
  4272dc:	mov    WORD PTR [ecx],ax
  4272df:	mov    eax,DWORD PTR [edi+0x188]
  4272e5:	pop    ebx
  4272e6:	ret    
  4272e7:	push   edi
  4272e8:	mov    edi,eax
  4272ea:	mov    eax,DWORD PTR [esi+0x188]
  4272f0:	shl    edi,0x6
  4272f3:	add    eax,edi
  4272f5:	jmp    0x427301
  4272f7:	xor    cl,0x7d
  4272fa:	add    cl,0x2
  4272fd:	mov    BYTE PTR [eax],cl
  4272ff:	inc    eax
  427300:	inc    edx
  427301:	mov    cl,BYTE PTR [edx]
  427303:	cmp    cl,0x83
  427306:	jne    0x4272f7
  427308:	mov    BYTE PTR [eax],0x0
  42730b:	mov    eax,DWORD PTR [esi+0x188]
  427311:	add    eax,edi
  427313:	pop    edi
  427314:	ret    
  427315:	push   ebp
  427316:	mov    ebp,esp
  427318:	sub    esp,0x14
  42731b:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  427322:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  427329:	mov    eax,DWORD PTR [ebx]
  42732b:	mov    DWORD PTR [ebp-0x8],eax
  42732e:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  427335:	push   esi
  427336:	push   edi
  427337:	mov    DWORD PTR [ebp-0x14],0xead71881
  42733e:	mov    edi,DWORD PTR [ebp-0x4]
  427341:	mov    ecx,DWORD PTR [ebp-0x10]
  427344:	mov    eax,0x75108ac
  427349:	xor    edi,eax
  42734b:	mov    edx,0x3272f3
  427350:	xor    ecx,eax
  427352:	add    edi,edx
  427354:	add    ecx,edx
  427356:	imul   edi,ecx
  427359:	jmp    0x4273a1
  42735b:	mov    ecx,DWORD PTR [ebp-0x8]
  42735e:	mov    esi,DWORD PTR [ebp-0x4]
  427361:	xor    ecx,eax
  427363:	xor    esi,eax
  427365:	add    ecx,edx
  427367:	add    esi,edx
  427369:	test   esi,ecx
  42736b:	mov    esi,DWORD PTR [ebp-0x8]
  42736e:	mov    ecx,DWORD PTR [ebp-0x4]
  427371:	je     0x427388
  427373:	xor    ecx,eax
  427375:	xor    esi,eax
  427377:	add    ecx,edx
  427379:	add    esi,edx
  42737b:	shr    esi,cl
  42737d:	mov    ecx,DWORD PTR [ebp-0x14]
  427380:	xor    ecx,eax
  427382:	add    ecx,edx
  427384:	xor    esi,ecx
  427386:	jmp    0x427392
  427388:	xor    esi,eax
  42738a:	xor    ecx,eax
  42738c:	add    esi,edx
  42738e:	add    ecx,edx
  427390:	shr    esi,cl
  427392:	mov    DWORD PTR [ebp-0x8],esi
  427395:	mov    ecx,DWORD PTR [ebp-0x4]
  427398:	xor    ecx,eax
  42739a:	lea    edi,[edi+ecx*1+0x3272f3]
  4273a1:	mov    ecx,DWORD PTR [ebp-0xc]
  4273a4:	mov    esi,DWORD PTR [ebp-0x4]
  4273a7:	xor    esi,eax
  4273a9:	xor    ecx,eax
  4273ab:	sub    ecx,esi
  4273ad:	cmp    edi,ecx
  4273af:	jbe    0x42735b
  4273b1:	mov    eax,DWORD PTR [ebp-0x8]
  4273b4:	pop    edi
  4273b5:	mov    DWORD PTR [ebx],eax
  4273b7:	mov    eax,DWORD PTR [ebp-0x8]
  4273ba:	pop    esi
  4273bb:	leave  
  4273bc:	ret    
  4273bd:	push   ebp
  4273be:	mov    ebp,esp
  4273c0:	sub    esp,0x38
  4273c3:	push   ebx
  4273c4:	mov    ebx,0xf89c85a1
  4273c9:	mov    DWORD PTR [ebp-0x4],ebx
  4273cc:	lea    ecx,[ebx+0x1]
  4273cf:	mov    DWORD PTR [ebp-0x24],ecx
  4273d2:	mov    eax,DWORD PTR [ebp-0x4]
  4273d5:	mov    edx,DWORD PTR [ebp+0x8]
  4273d8:	push   esi
  4273d9:	mov    esi,0x75108ac
  4273de:	xor    eax,esi
  4273e0:	push   edi
  4273e1:	mov    edi,0x3272f3
  4273e6:	add    eax,edi
  4273e8:	cmp    edx,eax
  4273ea:	mov    eax,DWORD PTR [ebp-0x4]
  4273ed:	je     0x427552
  4273f3:	mov    edx,DWORD PTR [ebp+0xc]
  4273f6:	xor    eax,esi
  4273f8:	add    eax,edi
  4273fa:	cmp    edx,eax
  4273fc:	je     0x42754f
  427402:	mov    eax,DWORD PTR [ebp+0x10]
  427405:	mov    edx,DWORD PTR [ebp+0xc]
  427408:	mov    DWORD PTR [ebp-0x14],eax
  42740b:	mov    eax,DWORD PTR [ebp+0x8]
  42740e:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  427415:	mov    DWORD PTR [ebp-0xc],eax
  427418:	lea    eax,[ebx+0x2]
  42741b:	mov    DWORD PTR [ebp-0x1c],eax
  42741e:	mov    DWORD PTR [ebp-0x10],ebx
  427421:	mov    DWORD PTR [ebp+0xc],ecx
  427424:	mov    DWORD PTR [ebp+0x10],eax
  427427:	mov    eax,DWORD PTR [ebp+0xc]
  42742a:	xor    eax,esi
  42742c:	mov    DWORD PTR [ebp-0x20],edx
  42742f:	sub    edx,eax
  427431:	sub    edx,edi
  427433:	mov    DWORD PTR [ebp+0x8],edx
  427436:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  42743d:	jmp    0x42753f
  427442:	mov    eax,DWORD PTR [ebp+0xc]
  427445:	mov    ecx,DWORD PTR [ebp+0xc]
  427448:	xor    eax,esi
  42744a:	xor    ecx,esi
  42744c:	lea    ecx,[eax+ecx*1+0x64e5e6]
  427453:	mov    eax,DWORD PTR [ebp+0x8]
  427456:	xor    edx,edx
  427458:	div    ecx
  42745a:	mov    eax,DWORD PTR [ebp+0x10]
  42745d:	mov    ecx,DWORD PTR [ebp+0xc]
  427460:	xor    eax,esi
  427462:	xor    ecx,esi
  427464:	sub    eax,ecx
  427466:	cmp    edx,eax
  427468:	jne    0x4274fe
  42746e:	mov    eax,DWORD PTR [ebp+0x8]
  427471:	mov    ecx,DWORD PTR [ebp-0xc]
  427474:	mov    dl,BYTE PTR [eax+ecx*1]
  427477:	mov    eax,DWORD PTR [ebp-0x10]
  42747a:	mov    ecx,DWORD PTR [ebp-0x8]
  42747d:	xor    eax,esi
  42747f:	xor    ecx,esi
  427481:	add    eax,edi
  427483:	add    ecx,edi
  427485:	cmp    eax,ecx
  427487:	jae    0x4274cf
  427489:	lea    ecx,[eax-0x3272f3]
  42748f:	mov    DWORD PTR [ebp-0x4],ecx
  427492:	mov    ebx,DWORD PTR [ebp-0x4]
  427495:	xor    ebx,esi
  427497:	add    ebx,0x7f55d8e3
  42749d:	lea    ecx,[ebp+eax*4-0x38]
  4274a1:	mov    DWORD PTR [ecx],ebx
  4274a3:	mov    ebx,DWORD PTR [ecx]
  4274a5:	cmp    ebx,0x244ecb9c
  4274ab:	jbe    0x4274b5
  4274ad:	add    DWORD PTR [ecx],0x405fcdd
  4274b3:	jmp    0x4274bb
  4274b5:	add    DWORD PTR [ecx],0xfdaf4323
  4274bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4274be:	xor    ecx,esi
  4274c0:	inc    eax
  4274c1:	inc    DWORD PTR [ebp-0x4]
  4274c4:	add    ecx,edi
  4274c6:	cmp    eax,ecx
  4274c8:	jb     0x427492
  4274ca:	mov    ebx,0xf89c85a1
  4274cf:	cmp    DWORD PTR [ebp-0x14],0x0
  4274d3:	jne    0x4274dd
  4274d5:	xor    dl,0x7d
  4274d8:	add    dl,0x2
  4274db:	jmp    0x4274f3
  4274dd:	mov    eax,DWORD PTR [ebp-0x18]
  4274e0:	xor    al,0xac
  4274e2:	mov    cl,0xd
  4274e4:	sub    cl,al
  4274e6:	add    dl,cl
  4274e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4274eb:	xor    cl,0xac
  4274ee:	sub    cl,0xd
  4274f1:	ror    dl,cl
  4274f3:	xor    eax,eax
  4274f5:	mov    eax,DWORD PTR [ebp+0x8]
  4274f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4274fb:	mov    BYTE PTR [eax+ecx*1],dl
  4274fe:	mov    eax,DWORD PTR [ebp+0x8]
  427501:	mov    ecx,DWORD PTR [ebp-0x10]
  427504:	sub    eax,edi
  427506:	xor    eax,esi
  427508:	cmp    eax,ecx
  42750a:	jne    0x42752d
  42750c:	mov    eax,DWORD PTR [ebp+0x10]
  42750f:	mov    ecx,DWORD PTR [ebp+0xc]
  427512:	xor    eax,esi
  427514:	xor    ecx,esi
  427516:	sub    eax,ecx
  427518:	mov    ecx,DWORD PTR [ebp-0x20]
  42751b:	sub    eax,edi
  42751d:	xor    eax,esi
  42751f:	mov    DWORD PTR [ebp+0x10],eax
  427522:	mov    eax,DWORD PTR [ebp+0xc]
  427525:	xor    eax,esi
  427527:	sub    ecx,eax
  427529:	sub    ecx,edi
  42752b:	jmp    0x42753c
  42752d:	mov    eax,DWORD PTR [ebp+0xc]
  427530:	xor    eax,esi
  427532:	mov    ecx,0xffcd8d0d
  427537:	sub    ecx,eax
  427539:	add    ecx,DWORD PTR [ebp+0x8]
  42753c:	mov    DWORD PTR [ebp+0x8],ecx
  42753f:	mov    eax,DWORD PTR [ebp+0x10]
  427542:	cmp    eax,ebx
  427544:	jne    0x427442
  42754a:	mov    eax,DWORD PTR [ebp-0x24]
  42754d:	jmp    0x427552
  42754f:	mov    eax,DWORD PTR [ebp-0x4]
  427552:	xor    eax,esi
  427554:	add    eax,edi
  427556:	pop    edi
  427557:	pop    esi
  427558:	pop    ebx
  427559:	leave  
  42755a:	ret    0xc
  42755d:	push   ebp
  42755e:	mov    ebp,esp
  427560:	sub    esp,0x420
  427566:	mov    DWORD PTR [ebp-0x14],0xf89c85a1
  42756d:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427574:	mov    DWORD PTR [ebp-0x18],0xf89c86a1
  42757b:	push   ebx
  42757c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  427583:	mov    eax,DWORD PTR [ebp-0x14]
  427586:	push   esi
  427587:	mov    esi,0x75108ac
  42758c:	push   edi
  42758d:	xor    eax,esi
  42758f:	mov    edi,0x3272f3
  427594:	add    eax,edi
  427596:	mov    DWORD PTR [ebp-0x8],eax
  427599:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4275a0:	mov    DWORD PTR [ebp-0x4],0xead71881
  4275a7:	mov    DWORD PTR [ebp-0x10],0x8
  4275ae:	mov    ecx,ecx
  4275b0:	mov    eax,DWORD PTR [ebp-0xc]
  4275b3:	mov    ecx,DWORD PTR [ebp-0x14]
  4275b6:	xor    eax,esi
  4275b8:	xor    ecx,esi
  4275ba:	add    eax,edi
  4275bc:	add    ecx,edi
  4275be:	imul   eax,ecx
  4275c1:	jmp    0x4275f4
  4275c3:	mov    eax,DWORD PTR [ebp-0x4]
  4275c6:	sub    eax,edi
  4275c8:	xor    eax,esi
  4275ca:	mov    DWORD PTR [ebp-0x8],eax
  4275cd:	lea    ebx,[ebp-0x8]
  4275d0:	call   0x427315
  4275d5:	mov    DWORD PTR [ebp-0x8],eax
  4275d8:	mov    eax,DWORD PTR [ebp-0x8]
  4275db:	mov    ecx,DWORD PTR [ebp-0x4]
  4275de:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4275e5:	mov    eax,DWORD PTR [ebp-0xc]
  4275e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4275eb:	xor    eax,esi
  4275ed:	lea    eax,[eax+ecx*1+0x3272f3]
  4275f4:	mov    DWORD PTR [ebp-0x4],eax
  4275f7:	mov    eax,DWORD PTR [ebp-0x18]
  4275fa:	mov    ecx,DWORD PTR [ebp-0xc]
  4275fd:	xor    ecx,esi
  4275ff:	xor    eax,esi
  427601:	sub    eax,ecx
  427603:	mov    ecx,DWORD PTR [ebp-0x4]
  427606:	cmp    ecx,eax
  427608:	jbe    0x4275c3
  42760a:	mov    eax,DWORD PTR [ebp-0x1c]
  42760d:	xor    eax,esi
  42760f:	add    eax,edi
  427611:	mov    DWORD PTR [ebp-0x8],eax
  427614:	mov    DWORD PTR [ebp-0x18],0xf89c86a0
  42761b:	mov    ebx,ebx
  42761d:	jmp    0x427680
  42761f:	mov    ecx,DWORD PTR [ebp-0x20]
  427622:	mov    eax,DWORD PTR [ebp-0x8]
  427625:	xor    ecx,esi
  427627:	add    ecx,edi
  427629:	shr    eax,cl
  42762b:	mov    DWORD PTR [ebp-0x4],eax
  42762e:	mov    eax,DWORD PTR [ebp+0x8]
  427631:	mov    cl,BYTE PTR [eax]
  427633:	mov    BYTE PTR [ebp+0xb],cl
  427636:	mov    cl,BYTE PTR [ebp+0xb]
  427639:	mov    edx,DWORD PTR [ebp-0x8]
  42763c:	movzx  ecx,cl
  42763f:	xor    ecx,edx
  427641:	mov    DWORD PTR [ebp+0x8],ecx
  427644:	mov    ecx,DWORD PTR [ebp-0x18]
  427647:	mov    edx,DWORD PTR [ebp+0x8]
  42764a:	xor    ecx,esi
  42764c:	add    ecx,edi
  42764e:	and    ecx,edx
  427650:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427657:	mov    edx,DWORD PTR [ebp-0x4]
  42765a:	xor    ecx,edx
  42765c:	mov    DWORD PTR [ebp-0x8],ecx
  42765f:	mov    ecx,DWORD PTR [ebp-0xc]
  427662:	xor    ecx,esi
  427664:	lea    eax,[eax+ecx*1+0x3272f3]
  42766b:	mov    DWORD PTR [ebp+0x8],eax
  42766e:	mov    eax,DWORD PTR [ebp-0xc]
  427671:	xor    eax,esi
  427673:	mov    ecx,0xffcd8d0d
  427678:	sub    ecx,eax
  42767a:	add    ecx,DWORD PTR [ebp-0x10]
  42767d:	mov    DWORD PTR [ebp-0x10],ecx
  427680:	mov    eax,DWORD PTR [ebp-0x14]
  427683:	mov    ecx,DWORD PTR [ebp-0x10]
  427686:	xor    eax,esi
  427688:	add    eax,edi
  42768a:	cmp    ecx,eax
  42768c:	jne    0x42761f
  42768e:	mov    eax,DWORD PTR [ebp-0x1c]
  427691:	mov    ecx,DWORD PTR [ebp-0x8]
  427694:	xor    eax,esi
  427696:	add    eax,edi
  427698:	pop    edi
  427699:	pop    esi
  42769a:	xor    eax,ecx
  42769c:	pop    ebx
  42769d:	leave  
  42769e:	ret    0x4
  4276a1:	push   ebp
  4276a2:	mov    ebp,esp
  4276a4:	mov    eax,DWORD PTR [ebp+0x1c]
  4276a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4276aa:	mov    edx,DWORD PTR [ebp+0x10]
  4276ad:	mov    eax,DWORD PTR [eax+0x190]
  4276b3:	mov    eax,DWORD PTR [eax]
  4276b5:	sub    esp,0x64
  4276b8:	push   ebx
  4276b9:	push   esi
  4276ba:	push   edi
  4276bb:	mov    edi,0x75108ac
  4276c0:	xor    ecx,edi
  4276c2:	mov    ebx,0x3272f3
  4276c7:	add    ecx,ebx
  4276c9:	cmp    ecx,edx
  4276cb:	jne    0x4276dc
  4276cd:	or     DWORD PTR ds:0x3750c3f,0x4263eb28
  4276d7:	jmp    0x427bd8
  4276dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4276df:	mov    esi,DWORD PTR [ebp+0x14]
  4276e2:	mov    edx,DWORD PTR [esi]
  4276e4:	xor    ecx,edi
  4276e6:	add    ecx,ebx
  4276e8:	cmp    edx,ecx
  4276ea:	je     0x427b93
  4276f0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276f3:	mov    DWORD PTR [ebp-0x1c],eax
  4276f6:	mov    DWORD PTR [ebp+0x1c],ecx
  4276f9:	mov    ecx,DWORD PTR [ebp+0x18]
  4276fc:	mov    eax,DWORD PTR [esi]
  4276fe:	mov    DWORD PTR [ebp-0x20],eax
  427701:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  427708:	mov    edx,0xf89c85a2
  42770d:	mov    DWORD PTR [ebp-0x8],edx
  427710:	mov    eax,DWORD PTR [ebp+0x1c]
  427713:	mov    DWORD PTR [ebp+0x1c],eax
  427716:	mov    eax,DWORD PTR [ebp+0x1c]
  427719:	mov    eax,DWORD PTR [eax+0x190]
  42771f:	mov    eax,DWORD PTR [eax]
  427721:	mov    DWORD PTR [ebp-0x24],ecx
  427724:	mov    ecx,DWORD PTR [ebp+0x1c]
  427727:	mov    ecx,DWORD PTR [ecx+0x190]
  42772d:	mov    ecx,DWORD PTR [ecx]
  42772f:	add    ecx,DWORD PTR [eax+0x3c]
  427732:	mov    DWORD PTR [ebp+0x10],ecx
  427735:	mov    eax,DWORD PTR [ebp+0x8]
  427738:	xor    eax,edi
  42773a:	add    eax,ebx
  42773c:	mov    DWORD PTR [ebp-0x4],eax
  42773f:	mov    eax,DWORD PTR [ebp+0x8]
  427742:	xor    eax,edi
  427744:	add    eax,ebx
  427746:	mov    DWORD PTR [ebp+0x18],eax
  427749:	mov    eax,DWORD PTR [ebp+0x10]
  42774c:	mov    eax,DWORD PTR [eax+0x50]
  42774f:	sub    eax,0xc
  427752:	mov    DWORD PTR [ebp-0x28],eax
  427755:	mov    eax,DWORD PTR [ebp+0x10]
  427758:	mov    eax,DWORD PTR [eax+0x38]
  42775b:	mov    ecx,DWORD PTR [ebp+0x10]
  42775e:	dec    eax
  42775f:	test   DWORD PTR [ecx+0x54],eax
  427762:	mov    eax,DWORD PTR [ebp+0x10]
  427765:	je     0x42777f
  427767:	mov    eax,DWORD PTR [eax+0x38]
  42776a:	mov    ecx,DWORD PTR [ebp+0x10]
  42776d:	mov    ecx,DWORD PTR [ecx+0x54]
  427770:	dec    eax
  427771:	not    eax
  427773:	and    ecx,eax
  427775:	mov    eax,DWORD PTR [ebp+0x10]
  427778:	mov    eax,DWORD PTR [eax+0x38]
  42777b:	add    eax,ecx
  42777d:	jmp    0x427782
  42777f:	mov    eax,DWORD PTR [eax+0x54]
  427782:	mov    DWORD PTR [ebp+0x1c],eax
  427785:	mov    eax,DWORD PTR [ebp+0x8]
  427788:	xor    eax,edi
  42778a:	add    eax,ebx
  42778c:	mov    DWORD PTR [ebp+0x18],eax
  42778f:	mov    eax,DWORD PTR [ebp+0x8]
  427792:	xor    eax,edi
  427794:	add    eax,ebx
  427796:	mov    DWORD PTR [ebp+0x18],eax
  427799:	mov    eax,DWORD PTR [ebp+0x8]
  42779c:	mov    ecx,DWORD PTR [ebp-0x24]
  42779f:	xor    eax,edi
  4277a1:	add    eax,ebx
  4277a3:	mov    DWORD PTR [ecx],eax
  4277a5:	mov    DWORD PTR [ebp+0x18],edx
  4277a8:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  4277af:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  4277b6:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  4277bd:	mov    eax,DWORD PTR [ebp-0x8]
  4277c0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4277c3:	xor    eax,edi
  4277c5:	add    eax,ebx
  4277c7:	imul   eax,ecx
  4277ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4277cd:	mov    edx,DWORD PTR [ebp-0x28]
  4277d0:	xor    ecx,edi
  4277d2:	lea    ecx,[ecx+edx*1+0x3272f3]
  4277d9:	cmp    eax,ecx
  4277db:	jae    0x427b8c
  4277e1:	mov    eax,DWORD PTR [ebp+0x8]
  4277e4:	xor    eax,edi
  4277e6:	add    eax,ebx
  4277e8:	mov    DWORD PTR [ebp+0x18],eax
  4277eb:	mov    eax,DWORD PTR [ebp+0x1c]
  4277ee:	add    eax,DWORD PTR [ebp-0x1c]
  4277f1:	mov    DWORD PTR [ebp-0x4],eax
  4277f4:	push   DWORD PTR [ebp-0x4]
  4277f7:	mov    esi,DWORD PTR [ebp-0x1c]
  4277fa:	mov    ecx,DWORD PTR [ebp+0x10]
  4277fd:	call   0x42694d
  427802:	mov    DWORD PTR [ebp+0xc],eax
  427805:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  42780c:	mov    eax,DWORD PTR [ebp-0x18]
  42780f:	xor    eax,edi
  427811:	lea    ecx,[ebp-0x40]
  427814:	add    eax,ebx
  427816:	push   ecx
  427817:	call   0x426ee1
  42781c:	mov    eax,DWORD PTR [ebp+0xc]
  42781f:	test   eax,eax
  427821:	je     0x427871
  427823:	mov    eax,DWORD PTR [ebp-0x18]
  427826:	xor    eax,edi
  427828:	add    eax,ebx
  42782a:	push   eax
  42782b:	push   DWORD PTR [ebp+0xc]
  42782e:	lea    eax,[ebp-0x40]
  427831:	push   eax
  427832:	call   0x426dd7
  427837:	mov    eax,DWORD PTR [ebp-0x4]
  42783a:	mov    DWORD PTR [ebp-0x18],eax
  42783d:	mov    eax,DWORD PTR [ebp-0x18]
  427840:	mov    ecx,DWORD PTR [ebp-0x1c]
  427843:	sub    eax,ecx
  427845:	mov    DWORD PTR [ebp-0x18],eax
  427848:	mov    eax,DWORD PTR [ebp+0xc]
  42784b:	mov    ecx,DWORD PTR [ebp+0xc]
  42784e:	mov    eax,DWORD PTR [eax+0x10]
  427851:	add    eax,DWORD PTR [ecx+0xc]
  427854:	mov    ecx,DWORD PTR [ebp-0x18]
  427857:	cmp    ecx,eax
  427859:	jb     0x427871
  42785b:	mov    eax,DWORD PTR [ebp+0xc]
  42785e:	mov    eax,DWORD PTR [eax+0xc]
  427861:	mov    ecx,DWORD PTR [ebp+0xc]
  427864:	add    eax,DWORD PTR [ecx+0x8]
  427867:	mov    ecx,DWORD PTR [ebp-0x18]
  42786a:	sub    eax,ecx
  42786c:	jmp    0x427b5f
  427871:	push   0xc
  427873:	push   DWORD PTR [ebp-0x4]
  427876:	lea    eax,[ebp-0x4c]
  427879:	push   eax
  42787a:	call   0x426dd7
  42787f:	mov    eax,0xf89c85a1
  427884:	mov    DWORD PTR [ebp-0x2c],eax
  427887:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  42788e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427895:	mov    DWORD PTR [ebp-0x38],0xf89c85bc
  42789c:	lea    ecx,[ebp-0x2c]
  42789f:	mov    DWORD PTR [ebp-0xc],ecx
  4278a2:	lea    ecx,[ebp-0x30]
  4278a5:	mov    DWORD PTR [ebp-0x10],ecx
  4278a8:	lea    ecx,[ebp-0x34]
  4278ab:	mov    DWORD PTR [ebp+0xc],ecx
  4278ae:	lea    ecx,[ebp-0x38]
  4278b1:	mov    DWORD PTR [ebp-0x14],ecx
  4278b4:	mov    ecx,DWORD PTR [ebp+0x8]
  4278b7:	xor    ecx,edi
  4278b9:	add    ecx,ebx
  4278bb:	mov    DWORD PTR [ebp-0x18],ecx
  4278be:	jmp    0x427aba
  4278c3:	cmp    eax,0xf89c85a3
  4278c8:	je     0x427acc
  4278ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4278d1:	xor    ecx,edi
  4278d3:	mov    esi,eax
  4278d5:	add    ecx,ebx
  4278d7:	mov    DWORD PTR [ebp+0x18],ecx
  4278da:	mov    eax,DWORD PTR [ebp-0x18]
  4278dd:	xor    esi,edi
  4278df:	lea    eax,[eax+esi*1+0x3272f3]
  4278e6:	mov    DWORD PTR [ebp-0x18],eax
  4278e9:	mov    eax,DWORD PTR [ebp-0x8]
  4278ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4278ef:	xor    eax,edi
  4278f1:	add    eax,ebx
  4278f3:	cmp    ecx,eax
  4278f5:	jne    0x42790a
  4278f7:	mov    eax,DWORD PTR [ebp+0x8]
  4278fa:	xor    eax,edi
  4278fc:	add    eax,ebx
  4278fe:	push   eax
  4278ff:	push   0xc
  427901:	lea    eax,[ebp-0x4c]
  427904:	push   eax
  427905:	call   0x4273bd
  42790a:	mov    eax,DWORD PTR [ebp-0xc]
  42790d:	mov    eax,DWORD PTR [eax]
  42790f:	xor    eax,edi
  427911:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427918:	mov    ecx,DWORD PTR [ebp+0x8]
  42791b:	xor    ecx,edi
  42791d:	movzx  eax,al
  427920:	add    ecx,ebx
  427922:	cmp    eax,ecx
  427924:	je     0x427aa2
  42792a:	mov    eax,DWORD PTR [ebp-0x10]
  42792d:	mov    eax,DWORD PTR [eax]
  42792f:	xor    eax,edi
  427931:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427938:	mov    ecx,DWORD PTR [ebp+0x8]
  42793b:	xor    ecx,edi
  42793d:	movzx  eax,al
  427940:	add    ecx,ebx
  427942:	cmp    eax,ecx
  427944:	je     0x427aa2
  42794a:	mov    eax,DWORD PTR [ebp+0xc]
  42794d:	mov    eax,DWORD PTR [eax]
  42794f:	xor    eax,edi
  427951:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427958:	mov    ecx,DWORD PTR [ebp+0x8]
  42795b:	xor    ecx,edi
  42795d:	movzx  eax,al
  427960:	add    ecx,ebx
  427962:	cmp    eax,ecx
  427964:	je     0x427aa2
  42796a:	mov    eax,DWORD PTR [ebp-0x14]
  42796d:	mov    eax,DWORD PTR [eax]
  42796f:	xor    eax,edi
  427971:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427978:	mov    ecx,DWORD PTR [ebp+0x8]
  42797b:	xor    ecx,edi
  42797d:	movzx  eax,al
  427980:	add    ecx,ebx
  427982:	cmp    eax,ecx
  427984:	je     0x427aa2
  42798a:	mov    eax,DWORD PTR [ebp-0x10]
  42798d:	mov    eax,DWORD PTR [eax]
  42798f:	xor    eax,edi
  427991:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427998:	mov    ecx,DWORD PTR [ebp-0xc]
  42799b:	mov    ecx,DWORD PTR [ecx]
  42799d:	xor    ecx,edi
  42799f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279a6:	xor    al,cl
  4279a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4279ab:	mov    ecx,DWORD PTR [ecx]
  4279ad:	xor    ecx,edi
  4279af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279b6:	or     al,cl
  4279b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4279bb:	mov    ecx,DWORD PTR [ecx]
  4279bd:	xor    ecx,edi
  4279bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  4279c6:	cmp    cl,al
  4279c8:	jne    0x427aa2
  4279ce:	mov    eax,DWORD PTR [ebp+0xc]
  4279d1:	mov    eax,DWORD PTR [eax]
  4279d3:	xor    eax,edi
  4279d5:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  4279dc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279df:	mov    ecx,DWORD PTR [ecx]
  4279e1:	xor    ecx,edi
  4279e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279ea:	xor    al,cl
  4279ec:	mov    ecx,DWORD PTR [ebp-0x14]
  4279ef:	mov    ecx,DWORD PTR [ecx]
  4279f1:	xor    ecx,edi
  4279f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279fa:	or     al,cl
  4279fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279ff:	mov    ecx,DWORD PTR [ecx]
  427a01:	xor    ecx,edi
  427a03:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a0a:	cmp    cl,al
  427a0c:	jne    0x427aa2
  427a12:	mov    eax,DWORD PTR [ebp-0x14]
  427a15:	mov    eax,DWORD PTR [eax]
  427a17:	xor    eax,edi
  427a19:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a20:	mov    ecx,DWORD PTR [ebp+0xc]
  427a23:	mov    ecx,DWORD PTR [ecx]
  427a25:	xor    ecx,edi
  427a27:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a2e:	xor    al,cl
  427a30:	mov    ecx,DWORD PTR [ebp-0xc]
  427a33:	mov    ecx,DWORD PTR [ecx]
  427a35:	xor    ecx,edi
  427a37:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a3e:	or     al,cl
  427a40:	mov    ecx,DWORD PTR [ebp+0xc]
  427a43:	mov    ecx,DWORD PTR [ecx]
  427a45:	xor    ecx,edi
  427a47:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a4e:	cmp    cl,al
  427a50:	jne    0x427aa2
  427a52:	mov    eax,DWORD PTR [ebp-0x14]
  427a55:	mov    eax,DWORD PTR [eax]
  427a57:	xor    eax,edi
  427a59:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a60:	mov    ecx,DWORD PTR [ebp-0xc]
  427a63:	mov    ecx,DWORD PTR [ecx]
  427a65:	xor    ecx,edi
  427a67:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a6e:	xor    al,cl
  427a70:	mov    ecx,DWORD PTR [ebp-0x10]
  427a73:	mov    ecx,DWORD PTR [ecx]
  427a75:	xor    ecx,edi
  427a77:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a7e:	or     al,cl
  427a80:	mov    ecx,DWORD PTR [ebp-0x14]
  427a83:	mov    ecx,DWORD PTR [ecx]
  427a85:	xor    ecx,edi
  427a87:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a8e:	cmp    cl,al
  427a90:	jne    0x427aa2
  427a92:	lea    eax,[ebp-0x4c]
  427a95:	push   eax
  427a96:	call   0x42755d
  427a9b:	mov    ecx,DWORD PTR [ebp-0x44]
  427a9e:	cmp    eax,ecx
  427aa0:	je     0x427aac
  427aa2:	mov    eax,DWORD PTR [ebp+0x8]
  427aa5:	xor    eax,edi
  427aa7:	add    eax,ebx
  427aa9:	mov    DWORD PTR [ebp+0x18],eax
  427aac:	mov    eax,DWORD PTR [ebp-0x8]
  427aaf:	xor    eax,edi
  427ab1:	lea    eax,[eax+esi*1+0x3272f3]
  427ab8:	xor    eax,edi
  427aba:	mov    ecx,DWORD PTR [ebp+0x8]
  427abd:	mov    edx,DWORD PTR [ebp+0x18]
  427ac0:	xor    ecx,edi
  427ac2:	add    ecx,ebx
  427ac4:	cmp    edx,ecx
  427ac6:	je     0x4278c3
  427acc:	mov    eax,DWORD PTR [ebp+0x8]
  427acf:	mov    ecx,DWORD PTR [ebp+0x18]
  427ad2:	xor    eax,edi
  427ad4:	add    eax,ebx
  427ad6:	cmp    ecx,eax
  427ad8:	jne    0x427aeb
  427ada:	mov    eax,DWORD PTR [ebp-0x8]
  427add:	mov    ecx,DWORD PTR [ebp+0x1c]
  427ae0:	xor    eax,edi
  427ae2:	lea    eax,[eax+ecx*1+0x3272f3]
  427ae9:	jmp    0x427b62
  427aeb:	push   0x18
  427aed:	push   DWORD PTR [ebp-0x4]
  427af0:	lea    eax,[ebp-0x64]
  427af3:	push   eax
  427af4:	call   0x426dd7
  427af9:	mov    eax,DWORD PTR [ebp+0x8]
  427afc:	mov    ecx,DWORD PTR [ebp-0x18]
  427aff:	xor    eax,edi
  427b01:	add    eax,ebx
  427b03:	cmp    eax,ecx
  427b05:	je     0x427b1a
  427b07:	mov    eax,DWORD PTR [ebp+0x8]
  427b0a:	xor    eax,edi
  427b0c:	add    eax,ebx
  427b0e:	push   eax
  427b0f:	push   0x18
  427b11:	lea    eax,[ebp-0x64]
  427b14:	push   eax
  427b15:	call   0x4273bd
  427b1a:	mov    eax,DWORD PTR [ebp-0x4]
  427b1d:	add    eax,0x18
  427b20:	mov    DWORD PTR [ebp+0x18],eax
  427b23:	push   DWORD PTR [ebp-0x50]
  427b26:	push   DWORD PTR [ebp+0x18]
  427b29:	mov    eax,DWORD PTR [ebp-0x54]
  427b2c:	add    eax,DWORD PTR [ebp-0x20]
  427b2f:	push   eax
  427b30:	call   0x426dd7
  427b35:	mov    eax,DWORD PTR [ebp+0x8]
  427b38:	mov    ecx,DWORD PTR [ebp-0x18]
  427b3b:	xor    eax,edi
  427b3d:	add    eax,ebx
  427b3f:	cmp    eax,ecx
  427b41:	je     0x427b54
  427b43:	push   0x0
  427b45:	push   DWORD PTR [ebp-0x50]
  427b48:	mov    eax,DWORD PTR [ebp-0x54]
  427b4b:	add    eax,DWORD PTR [ebp-0x20]
  427b4e:	push   eax
  427b4f:	call   0x4273bd
  427b54:	mov    eax,DWORD PTR [ebp-0x24]
  427b57:	mov    ecx,DWORD PTR [ebp-0x50]
  427b5a:	add    DWORD PTR [eax],ecx
  427b5c:	mov    eax,DWORD PTR [ebp-0x50]
  427b5f:	add    eax,DWORD PTR [ebp+0x1c]
  427b62:	mov    DWORD PTR [ebp+0x1c],eax
  427b65:	mov    eax,DWORD PTR [ebp-0x8]
  427b68:	mov    ecx,DWORD PTR [ebp+0x1c]
  427b6b:	xor    eax,edi
  427b6d:	add    eax,ebx
  427b6f:	imul   eax,ecx
  427b72:	mov    ecx,DWORD PTR [ebp+0x8]
  427b75:	mov    edx,DWORD PTR [ebp-0x28]
  427b78:	xor    ecx,edi
  427b7a:	lea    ecx,[ecx+edx*1+0x3272f3]
  427b81:	cmp    eax,ecx
  427b83:	jb     0x4277e1
  427b89:	mov    esi,DWORD PTR [ebp+0x14]
  427b8c:	mov    eax,DWORD PTR [ebp-0x20]
  427b8f:	mov    DWORD PTR [esi],eax
  427b91:	jmp    0x427bd8
  427b93:	mov    ecx,DWORD PTR [ebp+0x8]
  427b96:	mov    edx,DWORD PTR [ebp+0xc]
  427b99:	xor    ecx,edi
  427b9b:	xor    edx,edi
  427b9d:	add    ecx,ebx
  427b9f:	add    edx,ebx
  427ba1:	cmp    ecx,edx
  427ba3:	jne    0x427bb7
  427ba5:	mov    eax,ds:0x7f642dd8
  427baa:	imul   eax,eax,0x9f15fccf
  427bb0:	mov    ds:0x7f642dd8,eax
  427bb5:	jmp    0x427bd8
  427bb7:	mov    ecx,DWORD PTR [ebp+0x8]
  427bba:	xor    ecx,edi
  427bbc:	add    ecx,ebx
  427bbe:	cmp    eax,ecx
  427bc0:	je     0x427bce
  427bc2:	sub    DWORD PTR ds:0xf861e38,0x709beac8
  427bcc:	jmp    0x427bd8
  427bce:	and    DWORD PTR ds:0x3343fad8,0x5265ec3f
  427bd8:	pop    edi
  427bd9:	pop    esi
  427bda:	pop    ebx
  427bdb:	leave  
  427bdc:	ret    0x18
  427bdf:	push   ebp
  427be0:	mov    ebp,esp
  427be2:	and    esp,0xfffffff8
  427be5:	mov    eax,DWORD PTR [ebp+0x20]
  427be8:	sub    esp,0x14
  427beb:	push   ebx
  427bec:	mov    ebx,DWORD PTR [ebp+0x14]
  427bef:	push   esi
  427bf0:	push   edi
  427bf1:	cmp    eax,0xf89c85a1
  427bf6:	jne    0x427c02
  427bf8:	push   0xf89c85a2
  427bfd:	jmp    0x427d34
  427c02:	mov    eax,DWORD PTR [ebp+0x20]
  427c05:	cmp    eax,0xf89c85a2
  427c0a:	jne    0x427c16
  427c0c:	push   0xf89c85a3
  427c11:	jmp    0x427d34
  427c16:	mov    eax,DWORD PTR [ebp+0x20]
  427c19:	cmp    eax,0xf89c85a3
  427c1e:	jne    0x427c2a
  427c20:	push   0xf89c85bc
  427c25:	jmp    0x427d34
  427c2a:	mov    eax,DWORD PTR [ebp+0x20]
  427c2d:	cmp    eax,0xf89c85bc
  427c32:	jne    0x427c3e
  427c34:	push   0xf89c85bd
  427c39:	jmp    0x427d34
  427c3e:	mov    ecx,DWORD PTR [ebp+0x20]
  427c41:	mov    eax,0xf89c85b8
  427c46:	cmp    ecx,eax
  427c48:	jne    0x427d04
  427c4e:	mov    eax,DWORD PTR [ebp+0x10]
  427c51:	mov    DWORD PTR [esp+0xc],eax
  427c55:	mov    eax,DWORD PTR [ebp+0x18]
  427c58:	mov    DWORD PTR [esp+0x14],eax
  427c5c:	mov    eax,DWORD PTR [ebp+0xc]
  427c5f:	mov    DWORD PTR [esp+0x18],eax
  427c63:	mov    eax,DWORD PTR [ebp+0x8]
  427c66:	mov    DWORD PTR [esp+0x10],eax
  427c6a:	mov    eax,DWORD PTR [esp+0x10]
  427c6e:	mov    ecx,DWORD PTR [esp+0x14]
  427c72:	mov    edi,0x75108ac
  427c77:	xor    eax,edi
  427c79:	mov    esi,0x3272f3
  427c7e:	add    eax,esi
  427c80:	mov    DWORD PTR [ecx],eax
  427c82:	mov    eax,DWORD PTR [esp+0xc]
  427c86:	mov    eax,DWORD PTR [eax+0x194]
  427c8c:	mov    ecx,DWORD PTR [eax]
  427c8e:	mov    eax,DWORD PTR [esp+0xc]
  427c92:	mov    eax,DWORD PTR [eax+0x194]
  427c98:	mov    eax,DWORD PTR [eax]
  427c9a:	add    eax,DWORD PTR [ecx+0x3c]
  427c9d:	mov    ecx,DWORD PTR [esp+0xc]
  427ca1:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427ca7:	mov    ecx,DWORD PTR [ecx+0x14]
  427caa:	push   0x4
  427cac:	push   0x3000
  427cb1:	push   DWORD PTR [eax+0x50]
  427cb4:	push   0x0
  427cb6:	call   ecx
  427cb8:	mov    DWORD PTR [ebx],eax
  427cba:	mov    eax,DWORD PTR [esp+0x10]
  427cbe:	push   DWORD PTR [esp+0xc]
  427cc2:	xor    eax,edi
  427cc4:	add    eax,esi
  427cc6:	mov    DWORD PTR [esp+0x20],eax
  427cca:	lea    eax,[esp+0x20]
  427cce:	push   eax
  427ccf:	push   ebx
  427cd0:	push   DWORD PTR [esp+0x20]
  427cd4:	push   DWORD PTR [esp+0x28]
  427cd8:	push   DWORD PTR [esp+0x24]
  427cdc:	call   0x4276a1
  427ce1:	mov    eax,DWORD PTR [esp+0x10]
  427ce5:	mov    ecx,DWORD PTR [ebx]
  427ce7:	xor    eax,edi
  427ce9:	add    eax,esi
  427ceb:	cmp    ecx,eax
  427ced:	je     0x427d4b
  427cef:	mov    eax,DWORD PTR [esp+0x18]
  427cf3:	mov    ecx,DWORD PTR [esp+0x14]
  427cf7:	xor    eax,edi
  427cf9:	add    eax,esi
  427cfb:	imul   eax,DWORD PTR [esp+0x1c]
  427d00:	mov    DWORD PTR [ecx],eax
  427d02:	jmp    0x427d4b
  427d04:	mov    ecx,DWORD PTR [ebp+0x20]
  427d07:	cmp    ecx,0xf89c85bd
  427d0d:	jne    0x427d16
  427d0f:	push   0xf89c85be
  427d14:	jmp    0x427d34
  427d16:	mov    ecx,DWORD PTR [ebp+0x20]
  427d19:	cmp    ecx,0xf89c85be
  427d1f:	jne    0x427d28
  427d21:	push   0xf89c85bf
  427d26:	jmp    0x427d34
  427d28:	mov    ecx,DWORD PTR [ebp+0x20]
  427d2b:	cmp    ecx,0xf89c85bf
  427d31:	jne    0x427d4b
  427d33:	push   eax
  427d34:	push   DWORD PTR [ebp+0x1c]
  427d37:	push   DWORD PTR [ebp+0x18]
  427d3a:	push   ebx
  427d3b:	push   DWORD PTR [ebp+0x10]
  427d3e:	push   DWORD PTR [ebp+0xc]
  427d41:	push   DWORD PTR [ebp+0x8]
  427d44:	call   0x427bdf
  427d49:	mov    DWORD PTR [ebx],eax
  427d4b:	mov    eax,DWORD PTR [ebx]
  427d4d:	pop    edi
  427d4e:	pop    esi
  427d4f:	pop    ebx
  427d50:	mov    esp,ebp
  427d52:	pop    ebp
  427d53:	ret    0x1c
  427d56:	push   ebp
  427d57:	mov    ebp,esp
  427d59:	sub    esp,0xc
  427d5c:	mov    eax,0xf89c85a1
  427d61:	mov    DWORD PTR [ebp-0x8],eax
  427d64:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427d6b:	mov    ecx,DWORD PTR [ebp-0x8]
  427d6e:	xor    ecx,0x75108ac
  427d74:	add    ecx,0x3272f3
  427d7a:	mov    DWORD PTR [ebp-0x4],ecx
  427d7d:	mov    ecx,DWORD PTR [ebp+0xc]
  427d80:	push   eax
  427d81:	mov    DWORD PTR [ebp+0xc],ecx
  427d84:	push   DWORD PTR [ebp+0xc]
  427d87:	lea    eax,[ebp-0x4]
  427d8a:	push   DWORD PTR [ebp+0x8]
  427d8d:	push   eax
  427d8e:	push   DWORD PTR [ebp+0xc]
  427d91:	push   DWORD PTR [ebp-0xc]
  427d94:	push   DWORD PTR [ebp-0x8]
  427d97:	call   0x427bdf
  427d9c:	mov    DWORD PTR [ebp-0x4],eax
  427d9f:	mov    eax,DWORD PTR [ebp-0x4]
  427da2:	leave  
  427da3:	ret    0x8
