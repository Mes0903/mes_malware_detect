
64eb9b999f090d184b97fd7255bb2e235eb8a8b47f5d8ee98abac66b8d3bbd4a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,ds:0x42920b
  40100e:	mov    eax,DWORD PTR [eax]
  401010:	and    DWORD PTR ds:0x429157,eax
  401016:	mov    eax,DWORD PTR [ebp+0x8]
  401019:	and    DWORD PTR ds:0x4291e7,0x0
  401023:	mov    ecx,DWORD PTR ds:0x4291e7
  401029:	inc    ecx
  40102a:	mov    DWORD PTR ds:0x4291e7,ecx
  401030:	cmp    DWORD PTR ds:0x4291e7,0xe
  401037:	jle    0x401072
  40103d:	jmp    0x40104b
  401042:	push   DWORD PTR [ebp-0x20]
  401045:	call   DWORD PTR ds:0x42a663
  40104b:	cmp    DWORD PTR ds:0x4291e7,0xd
  401052:	jne    0x401065
  401058:	mov    ecx,DWORD PTR ds:0x4291e7
  40105e:	inc    ecx
  40105f:	mov    DWORD PTR ds:0x4291e7,ecx
  401065:	cmp    DWORD PTR ds:0x4291e7,0x1c
  40106c:	jb     0x401023
  401072:	push   ebx
  401073:	sub    DWORD PTR ds:0x429157,0x3bd6
  40107d:	push   esi
  40107e:	mov    esi,DWORD PTR ds:0x429897
  401084:	mov    ecx,DWORD PTR ds:0x429f23
  40108a:	sub    ecx,esi
  40108c:	add    esi,DWORD PTR [esi+ecx*1]
  40108f:	push   edi
  401090:	mov    esi,0x75108ac
  401095:	xor    DWORD PTR ds:0x4291af,ebx
  40109b:	xor    eax,esi
  40109d:	mov    edi,0x3272f3
  4010a2:	sbb    DWORD PTR ds:0x4291f3,0x4c4b
  4010ac:	add    eax,edi
  4010ae:	and    DWORD PTR ds:0x429163,0x59cd
  4010b8:	mov    DWORD PTR [ebp-0x40],eax
  4010bb:	mov    eax,ds:0x42915f
  4010c0:	sbb    eax,DWORD PTR ds:0x42919f
  4010c6:	mov    ds:0x42915f,eax
  4010cb:	mov    eax,ds:0x42818b
  4010d0:	and    DWORD PTR ds:0x42918b,0x0
  4010da:	jmp    0x4010ee
  4010df:	xor    ecx,ecx
  4010e1:	xor    ecx,DWORD PTR ds:0x42918b
  4010e7:	inc    ecx
  4010e8:	mov    DWORD PTR ds:0x42918b,ecx
  4010ee:	cmp    DWORD PTR ds:0x42918b,0x1e
  4010f5:	jae    0x401144
  4010fb:	cmp    DWORD PTR ds:0x42918b,0xe
  401102:	ja     0x401144
  401108:	jmp    0x401123
  40110d:	push   DWORD PTR [ebp-0x24]
  401110:	push   0x428152
  401115:	push   0x4280c4
  40111a:	push   DWORD PTR [ebp-0x20]
  40111d:	call   DWORD PTR ds:0x42a66b
  401123:	cmp    DWORD PTR ds:0x42918b,0xd
  40112a:	jne    0x40113f
  401130:	xor    ecx,ecx
  401132:	or     ecx,DWORD PTR ds:0x42918b
  401138:	inc    ecx
  401139:	mov    DWORD PTR ds:0x42918b,ecx
  40113f:	jmp    0x4010df
  401144:	mov    eax,DWORD PTR [eax]
  401146:	mov    ecx,DWORD PTR ds:0x4291bf
  40114c:	sbb    DWORD PTR ds:0x42914f,ecx
  401152:	mov    DWORD PTR [ebp-0x3c],eax
  401155:	mov    eax,ds:0x429223
  40115a:	mov    ecx,DWORD PTR ds:0x429f33
  401160:	sub    eax,ecx
  401162:	add    eax,DWORD PTR [eax+ecx*1]
  401165:	mov    eax,ds:0x42839b
  40116a:	mov    DWORD PTR ds:0x429167,0x18
  401174:	cmp    DWORD PTR ds:0x429167,0x0
  40117b:	je     0x4011cb
  401181:	cmp    DWORD PTR ds:0x429167,0x3
  401188:	jle    0x4011cb
  40118e:	jmp    0x40119f
  401193:	push   DWORD PTR [ebp-0x24]
  401196:	push   DWORD PTR [ebp-0x14]
  401199:	call   DWORD PTR ds:0x42a66f
  40119f:	cmp    DWORD PTR ds:0x429167,0x4
  4011a6:	jne    0x4011b9
  4011ac:	mov    ecx,DWORD PTR ds:0x429167
  4011b2:	dec    ecx
  4011b3:	mov    DWORD PTR ds:0x429167,ecx
  4011b9:	mov    ecx,DWORD PTR ds:0x429167
  4011bf:	dec    ecx
  4011c0:	mov    DWORD PTR ds:0x429167,ecx
  4011c6:	jmp    0x401174
  4011cb:	mov    eax,DWORD PTR [eax]
  4011cd:	or     DWORD PTR ds:0x4291b7,0x5973
  4011d7:	mov    DWORD PTR [ebp-0x1c],eax
  4011da:	mov    DWORD PTR [ebp-0x34],0xf89c87a1
  4011e1:	sbb    ecx,ecx
  4011e3:	mov    eax,DWORD PTR [ebp-0x34]
  4011e6:	and    DWORD PTR ds:0x4291bf,ecx
  4011ec:	xor    eax,esi
  4011ee:	add    eax,edi
  4011f0:	adc    DWORD PTR ds:0x42919f,0x1e2a
  4011fa:	mov    DWORD PTR [ebp-0x40],eax
  4011fd:	mov    eax,ds:0x42830b
  401202:	mov    DWORD PTR [ebp-0x40],eax
  401205:	mov    eax,ds:0x429f2f
  40120a:	mov    eax,DWORD PTR [eax]
  40120c:	and    DWORD PTR ds:0x4291f7,eax
  401212:	mov    eax,DWORD PTR [ebp-0x3c]
  401215:	adc    DWORD PTR ds:0x42914b,0x2509
  40121f:	mov    DWORD PTR [ebp-0x14],eax
  401222:	and    ecx,ecx
  401224:	mov    eax,DWORD PTR [ebp-0x14]
  401227:	xor    DWORD PTR ds:0x42918f,ecx
  40122d:	push   0x4
  40122f:	neg    ecx
  401231:	pop    ecx
  401232:	sub    ecx,eax
  401234:	and    DWORD PTR ds:0x42916b,0x0
  40123e:	jmp    0x40124e
  401243:	mov    eax,ds:0x42916b
  401248:	inc    eax
  401249:	mov    ds:0x42916b,eax
  40124e:	cmp    DWORD PTR ds:0x42916b,0x1e
  401255:	jae    0x40127d
  40125b:	cmp    DWORD PTR ds:0x42916b,0x27
  401262:	ja     0x40127d
  401268:	jmp    0x401278
  40126d:	push   0x4291bb
  401272:	call   DWORD PTR ds:0x42a673
  401278:	jmp    0x401243
  40127d:	add    ecx,DWORD PTR [ebp-0x1c]
  401280:	and    DWORD PTR ds:0x42915b,0x0
  40128a:	jmp    0x40129d
  40128f:	xor    eax,eax
  401291:	xor    eax,DWORD PTR ds:0x42915b
  401297:	inc    eax
  401298:	mov    ds:0x42915b,eax
  40129d:	cmp    DWORD PTR ds:0x42915b,0x1a
  4012a4:	jae    0x4012ec
  4012aa:	cmp    DWORD PTR ds:0x42915b,0xe
  4012b1:	jle    0x4012ec
  4012b7:	jmp    0x4012cc
  4012bc:	push   0x1df3
  4012c1:	push   0x428062
  4012c6:	call   DWORD PTR ds:0x42a677
  4012cc:	cmp    DWORD PTR ds:0x42915b,0xd
  4012d3:	jne    0x4012e7
  4012d9:	xor    eax,eax
  4012db:	xor    eax,DWORD PTR ds:0x42915b
  4012e1:	inc    eax
  4012e2:	mov    ds:0x42915b,eax
  4012e7:	jmp    0x40128f
  4012ec:	mov    DWORD PTR [ebp-0x2c],0xf89c85e1
  4012f3:	mov    DWORD PTR ds:0x4291d7,0x3a8d
  4012fd:	mov    DWORD PTR [ebp-0x18],ecx
  401300:	and    DWORD PTR ds:0x42916f,ecx
  401306:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  401310:	mov    eax,DWORD PTR [ebp-0x14]
  401313:	xor    DWORD PTR ds:0x4291e7,0x69e7
  40131d:	mov    DWORD PTR [ebp-0x9c],eax
  401323:	mov    eax,DWORD PTR [ebp-0x18]
  401326:	or     DWORD PTR ds:0x42916f,0x429173
  401330:	mov    DWORD PTR [ebp-0x98],eax
  401336:	and    DWORD PTR ds:0x429187,ecx
  40133c:	mov    eax,DWORD PTR [ebp-0x2c]
  40133f:	xor    eax,esi
  401341:	mov    DWORD PTR ds:0x4291ab,0x4dc6
  40134b:	add    eax,edi
  40134d:	mov    DWORD PTR [ebp-0x94],eax
  401353:	adc    DWORD PTR ds:0x429193,0x429197
  40135d:	lea    eax,[ebp-0x48]
  401360:	sbb    DWORD PTR ds:0x42914f,0x4291c3
  40136a:	mov    DWORD PTR [ebp-0x90],eax
  401370:	mov    eax,ds:0x42917f
  401375:	or     DWORD PTR ds:0x4291bf,eax
  40137b:	mov    eax,DWORD PTR [ebp-0xa0]
  401381:	adc    DWORD PTR ds:0x429187,0x4291df
  40138b:	xor    eax,esi
  40138d:	add    eax,edi
  40138f:	mov    DWORD PTR [ebp-0xa0],eax
  401395:	lea    eax,[ebp-0xa0]
  40139b:	and    DWORD PTR ds:0x42919f,0x4291a7
  4013a5:	push   eax
  4013a6:	mov    eax,DWORD PTR [ebp+0xc]
  4013a9:	mov    DWORD PTR ds:0x42917b,0x524d
  4013b3:	xor    eax,esi
  4013b5:	add    eax,edi
  4013b7:	and    DWORD PTR ds:0x429183,0x429193
  4013c1:	push   eax
  4013c2:	sub    DWORD PTR ds:0x429173,0x45d8
  4013cc:	mov    eax,ds:0x42832b
  4013d1:	xor    DWORD PTR ds:0x42917b,0x37ec
  4013db:	push   0x428281
  4013e0:	sub    DWORD PTR ds:0x4291e3,0x5ee0
  4013ea:	push   DWORD PTR [eax]
  4013ec:	xor    DWORD PTR ds:0x42916b,0x429197
  4013f6:	call   0x4085e5
  4013fb:	and    DWORD PTR ds:0x429153,0x0
  401405:	mov    edx,DWORD PTR ds:0x429153
  40140b:	inc    edx
  40140c:	mov    DWORD PTR ds:0x429153,edx
  401412:	cmp    DWORD PTR ds:0x429153,0x24
  401419:	jb     0x401442
  40141f:	jmp    0x401435
  401424:	push   0x4280d6
  401429:	push   DWORD PTR [ebp-0x18]
  40142c:	push   DWORD PTR [ebp-0x14]
  40142f:	call   DWORD PTR ds:0x42a67f
  401435:	cmp    DWORD PTR ds:0x429153,0x15
  40143c:	jb     0x401405
  401442:	mov    ebx,DWORD PTR [ebp-0x14]
  401445:	add    DWORD PTR ds:0x42914f,edx
  40144b:	mov    eax,DWORD PTR [ebp-0x18]
  40144e:	and    DWORD PTR ds:0x42916b,0x0
  401458:	jmp    0x40146a
  40145d:	mov    edx,DWORD PTR ds:0x42916b
  401463:	inc    edx
  401464:	mov    DWORD PTR ds:0x42916b,edx
  40146a:	cmp    DWORD PTR ds:0x42916b,0x17
  401471:	jae    0x4014b1
  401477:	cmp    DWORD PTR ds:0x42916b,0xc
  40147e:	ja     0x4014b1
  401484:	jmp    0x401492
  401489:	push   DWORD PTR [ebp-0x24]
  40148c:	call   DWORD PTR ds:0x42a683
  401492:	cmp    DWORD PTR ds:0x42916b,0xb
  401499:	jne    0x4014ac
  40149f:	mov    edx,DWORD PTR ds:0x42916b
  4014a5:	inc    edx
  4014a6:	mov    DWORD PTR ds:0x42916b,edx
  4014ac:	jmp    0x40145d
  4014b1:	mov    DWORD PTR [ebp-0x58],eax
  4014b4:	add    DWORD PTR ds:0x4291c7,edi
  4014ba:	mov    DWORD PTR [ebp-0x34],0xf89c8538
  4014c1:	mov    eax,0xf89c85a3
  4014c6:	inc    DWORD PTR ds:0x42916f
  4014cc:	mov    DWORD PTR [ebp-0x1c],eax
  4014cf:	lea    ecx,[eax-0x2]
  4014d2:	inc    DWORD PTR ds:0x42919b
  4014d8:	mov    DWORD PTR [ebp-0x28],ecx
  4014db:	movzx  edx,BYTE PTR ds:0x429163
  4014e2:	or     DWORD PTR ds:0x4291e7,edx
  4014e8:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  4014ef:	mov    DWORD PTR [ebp-0x8],eax
  4014f2:	and    DWORD PTR ds:0x4291e7,0x0
  4014fc:	jmp    0x40150c
  401501:	mov    eax,ds:0x4291e7
  401506:	inc    eax
  401507:	mov    ds:0x4291e7,eax
  40150c:	cmp    DWORD PTR ds:0x4291e7,0x11
  401513:	jae    0x401543
  401519:	cmp    DWORD PTR ds:0x4291e7,0x13
  401520:	jge    0x401543
  401526:	jmp    0x40153e
  40152b:	push   0x4280b5
  401530:	push   DWORD PTR [ebp-0x28]
  401533:	push   0x738c
  401538:	call   DWORD PTR ds:0x42a687
  40153e:	jmp    0x401501
  401543:	mov    eax,DWORD PTR [ebp-0x10]
  401546:	sbb    DWORD PTR ds:0x429193,edi
  40154c:	xor    eax,esi
  40154e:	sub    edx,DWORD PTR ds:0x429193
  401554:	mov    edx,0xffcd8d8d
  401559:	sub    edx,eax
  40155b:	mov    DWORD PTR ds:0x42915b,edx
  401561:	mov    DWORD PTR [ebp-0xc],edx
  401564:	movzx  eax,WORD PTR ds:0x4291f7
  40156b:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  401572:	mov    eax,DWORD PTR [ebp-0x8]
  401575:	mov    DWORD PTR [ebp-0x3c],ebx
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x4291d3,0x104a
  401584:	je     0x403bad
  40158a:	add    ecx,0x327f
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	mov    ecx,DWORD PTR [ebp-0x10]
  401596:	sbb    DWORD PTR ds:0x4291b3,0x52cd
  4015a0:	xor    eax,esi
  4015a2:	xor    ecx,esi
  4015a4:	lea    ecx,[eax+ecx*1+0x64e5e6]
  4015ab:	mov    eax,DWORD PTR [ebp-0xc]
  4015ae:	or     DWORD PTR ds:0x429153,0x67db
  4015b8:	xor    edx,edx
  4015ba:	div    ecx
  4015bc:	mov    eax,DWORD PTR [ebp-0x8]
  4015bf:	xor    ecx,0x4574
  4015c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4015c8:	xor    eax,esi
  4015ca:	or     DWORD PTR ds:0x4291df,0xa4f
  4015d4:	xor    ecx,esi
  4015d6:	or     DWORD PTR ds:0x42915f,0x4291eb
  4015e0:	sub    eax,ecx
  4015e2:	cmp    edx,eax
  4015e4:	jne    0x401764
  4015ea:	mov    eax,DWORD PTR [ebp-0xc]
  4015ed:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4015f4:	add    ecx,DWORD PTR ds:0x4291d7
  4015fa:	mov    eax,DWORD PTR [ebp-0x28]
  4015fd:	mov    ecx,DWORD PTR [ebp-0x18]
  401600:	sub    DWORD PTR ds:0x42916f,0x2374
  40160a:	xor    eax,esi
  40160c:	add    DWORD PTR ds:0x429197,0x6412
  401616:	xor    ecx,esi
  401618:	add    eax,edi
  40161a:	add    ecx,edi
  40161c:	mov    DWORD PTR ds:0x42914f,0x798e
  401626:	mov    BYTE PTR [ebp-0x21],dl
  401629:	mov    DWORD PTR ds:0x42916f,0x52dc
  401633:	cmp    eax,ecx
  401635:	mov    DWORD PTR ds:0x42918f,0x1786
  40163f:	jae    0x401707
  401645:	and    DWORD PTR ds:0x42915b,ecx
  40164b:	lea    ecx,[eax-0x3272f3]
  401651:	not    edx
  401653:	mov    DWORD PTR [ebp-0x14],ecx
  401656:	mov    edx,DWORD PTR [ebp-0x14]
  401659:	xor    edx,esi
  40165b:	xor    DWORD PTR ds:0x4291a7,0x52cf
  401665:	add    edx,0x7f55d8e3
  40166b:	lea    ecx,[ebp+eax*4-0xb4]
  401672:	mov    DWORD PTR [ecx],edx
  401674:	mov    edx,DWORD PTR ds:0x429193
  40167a:	mov    edx,DWORD PTR [ecx]
  40167c:	cmp    edx,0x244ecb9c
  401682:	jbe    0x4016a7
  401688:	add    DWORD PTR ds:0x42916b,0x3ac8
  401692:	add    DWORD PTR [ecx],0x405fcdd
  401698:	mov    DWORD PTR ds:0x42919f,0x6763
  4016a2:	jmp    0x4016b7
  4016a7:	add    DWORD PTR ds:0x42914f,0x4291af
  4016b1:	add    DWORD PTR [ecx],0xfdaf4323
  4016b7:	sub    ecx,0x38f7
  4016bd:	mov    ecx,DWORD PTR [ebp-0x18]
  4016c0:	xor    DWORD PTR ds:0x4291c7,0x8c7
  4016ca:	xor    ecx,esi
  4016cc:	dec    DWORD PTR ds:0x42915b
  4016d2:	inc    eax
  4016d3:	sbb    DWORD PTR ds:0x4291cf,0x4291df
  4016dd:	inc    DWORD PTR [ebp-0x14]
  4016e0:	add    DWORD PTR ds:0x4291f3,0x429193
  4016ea:	add    ecx,edi
  4016ec:	cmp    eax,ecx
  4016ee:	mov    DWORD PTR ds:0x4291d3,0x74e1
  4016f8:	jb     0x401656
  4016fe:	not    DWORD PTR ds:0x4291af
  401704:	mov    dl,BYTE PTR [ebp-0x21]
  401707:	xor    DWORD PTR ds:0x429153,edi
  40170d:	mov    eax,DWORD PTR [ebp-0x34]
  401710:	mov    DWORD PTR ds:0x429173,0x31f7
  40171a:	xor    al,0xac
  40171c:	xor    DWORD PTR ds:0x429157,0x429193
  401726:	mov    cl,0xd
  401728:	sub    cl,al
  40172a:	add    dl,cl
  40172c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40172f:	adc    DWORD PTR ds:0x4291c3,0x11c9
  401739:	xor    cl,0xac
  40173c:	sub    cl,0xd
  40173f:	and    DWORD PTR ds:0x4291ef,0x4291b7
  401749:	ror    dl,cl
  40174b:	movzx  ecx,WORD PTR ds:0x4291e3
  401752:	sbb    DWORD PTR ds:0x4291ef,ecx
  401758:	xor    eax,eax
  40175a:	mov    eax,DWORD PTR [ebp-0xc]
  40175d:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  401764:	mov    eax,DWORD PTR [ebp-0xc]
  401767:	adc    ecx,0x7a4f
  40176d:	mov    ecx,DWORD PTR [ebp-0x28]
  401770:	or     DWORD PTR ds:0x42918f,0x42919b
  40177a:	jmp    0x403b2b
  40177f:	pop    ss
  401780:	mov    eax,0x80c4d8c4
  401785:	pop    es
  401786:	mov    al,0x4
  401788:	add    eax,0x47c192fe
  40178d:	scas   al,BYTE PTR es:[edi]
  40178e:	into   
  40178f:	add    DWORD PTR [ebx+0x5cef8383],0xffffff83
  401796:	sub    DWORD PTR [edx],0x2d
  401799:	and    al,0x3e
  40179b:	cmp    ah,BYTE PTR es:[eax]
  40179e:	sub    al,0x7a
  4017a0:	cmp    eax,0x77e17776
  4017a5:	jae    0x40181a
  4017a7:	jb     0x4017f4
  4017a9:	fcmovu st,st(5)
  4017ab:	(bad)  
  4017ac:	imul   edx,DWORD PTR [ecx+0x70],0x79a9607e
  4017b3:	jb     0x40181b
  4017b5:	int3   
  4017b6:	bound  edx,QWORD PTR [ebx+0x39]
  4017b9:	lea    eax,[ebx]
  4017bb:	xchg   esp,eax
  4017bc:	xchg   DWORD PTR [edx+edx*2+0x7c],esp
  4017c0:	inc    esp
  4017c1:	mov    DWORD PTR [edi+0x40bbb97c],esi
  4017c7:	sub    eax,0x3dd77fc
  4017cc:	push   0x46f21f7c
  4017d1:	rol    bl,cl
  4017d3:	repnz xchg esp,eax
  4017d5:	sub    bh,bl
  4017d7:	nop
  4017d8:	ss or  al,0x66
  4017db:	mov    al,0x93
  4017dd:	aad    0x4
  4017df:	jb     0x4017c3
  4017e1:	adc    eax,0x37030fe5
  4017e6:	and    DWORD PTR [ecx+0xd],edx
  4017e9:	aaa    
  4017ea:	jo     0x40185d
  4017ec:	(bad)  
  4017ed:	lods   al,BYTE PTR ds:[esi]
  4017ee:	sub    BYTE PTR [esi+0x1a],bl
  4017f1:	mov    bh,0xfc
  4017f3:	not    BYTE PTR [esi+0x30]
  4017f6:	test   DWORD PTR [ebx-0x2f],ecx
  4017f9:	pusha  
  4017fa:	push   es
  4017fb:	and    eax,DWORD PTR [ebx]
  4017fd:	cmp    DWORD PTR [esi+0x5ca1e278],0x2514be90
  401807:	fwait
  401808:	dec    esi
  401809:	or     BYTE PTR [edi+0x10888b3d],bl
  40180f:	jecxz  0x401843
  401811:	imul   edx,DWORD PTR [edx-0x79ab7bb],0xffffffcc
  401818:	xchg   ebx,eax
  401819:	ss xchg esi,eax
  40181b:	leave  
  40181c:	(bad)  
  40181d:	int    0x91
  40181f:	outs   dx,BYTE PTR ds:[esi]
  401820:	cmc    
  401821:	pop    edx
  401822:	imul   ecx,DWORD PTR [ebp+0xd],0x3f
  401826:	or     BYTE PTR [edi+0x18],al
  401829:	mov    dl,0x50
  40182b:	shl    DWORD PTR [ecx+ecx*2+0x26715d9],cl
  401832:	imul   esp,DWORD PTR [edi-0x46],0x6
  401836:	jno    0x4017f4
  401838:	add    DWORD PTR [ebx+0x26],ebx
  40183b:	jae    0x4017ea
  40183d:	push   0xffffffbd
  40183f:	mov    esi,0xe94d62cc
  401844:	sti    
  401845:	fadd   QWORD PTR [edx+0x2bce158f]
  40184b:	outs   dx,BYTE PTR ds:[esi]
  40184c:	push   ecx
  40184d:	xor    ebp,DWORD PTR ds:[ebx+0x267fe3be]
  401854:	xchg   BYTE PTR [ebx],bl
  401856:	push   0xffffffac
  401858:	or     BYTE PTR [esp+ebx*2+0xc80b494],0x32
  401860:	push   ds
  401861:	pop    ecx
  401862:	xchg   BYTE PTR [edx+0x1a7c2399],bl
  401868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401869:	stos   DWORD PTR es:[edi],eax
  40186a:	jbe    0x401824
  40186c:	call   0x5f67b56f
  401871:	cs mul bh
  401874:	retf   
  401875:	popf   
  401876:	arpl   bp,si
  401878:	xchg   DWORD PTR [esi+0x409e63b2],edx
  40187e:	cmp    BYTE PTR [eax+0xd],cl
  401881:	hlt    
  401882:	sub    eax,0xf676e167
  401887:	mov    esp,DWORD PTR [edi]
  401889:	add    esp,ecx
  40188b:	int3   
  40188c:	(bad)  [ecx]
  40188e:	iret   
  40188f:	sub    BYTE PTR [edx*8+0x2a4561ba],bh
  401896:	mov    edi,DWORD PTR [eax+0x20922062]
  40189c:	mov    dh,0x44
  40189e:	arpl   WORD PTR [eax],di
  4018a0:	dec    edi
  4018a1:	mov    ch,bh
  4018a3:	icebp  
  4018a4:	mov    dh,0x6f
  4018a6:	xchg   ebp,eax
  4018a7:	pop    esi
  4018a8:	leave  
  4018a9:	mov    esi,0x5bb489b3
  4018ae:	iret   
  4018af:	push   ds
  4018b0:	clc    
  4018b1:	and    DWORD PTR [edi],0xffffffe0
  4018b4:	icebp  
  4018b5:	es mov esi,0x4b8e1ca2
  4018bb:	clc    
  4018bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018bd:	jno    0x4018ed
  4018bf:	xchg   esi,eax
  4018c0:	rcl    DWORD PTR [esi-0x1e],cl
  4018c3:	ror    DWORD PTR [edi],cl
  4018c5:	mov    dh,BYTE PTR [esi]
  4018c7:	xor    dl,BYTE PTR [eax-0x27]
  4018ca:	pop    ecx
  4018cb:	sbb    bh,BYTE PTR [ebp-0x3fbf978d]
  4018d1:	addr16 sub al,0x2
  4018d4:	aam    0x4f
  4018d6:	test   BYTE PTR [esi+0x59b1d8b1],ch
  4018dc:	dec    DWORD PTR [edx]
  4018de:	stos   DWORD PTR es:[edi],eax
  4018df:	and    bl,dh
  4018e1:	mov    ecx,0x2a54ccd3
  4018e6:	imul   ecx,DWORD PTR [ecx+edx*8+0xb],0xffffffaf
  4018eb:	imul   edx,DWORD PTR [edi],0x7e
  4018ee:	cmp    al,BYTE PTR [edx+0x93cf876]
  4018f4:	popa   
  4018f5:	xor    cl,BYTE PTR [ebp+0x14]
  4018f8:	dec    BYTE PTR ds:0x17fd7cdb
  4018fe:	daa    
  4018ff:	cs stos DWORD PTR es:[edi],eax
  401901:	pop    edx
  401902:	int    0x7e
  401904:	loop   0x401935
  401906:	mul    BYTE PTR [ebx-0x2d]
  401909:	add    DWORD PTR [edx],edx
  40190b:	dec    ebp
  40190c:	add    dl,bl
  40190e:	cmp    BYTE PTR [esi],cl
  401910:	dec    ebp
  401911:	fadd   st,st(5)
  401913:	out    0xb4,eax
  401915:	jmp    0x40189e
  401917:	inc    ebx
  401918:	mov    esp,0x1eced38c
  40191d:	pop    esi
  40191e:	mov    edi,0x2e668986
  401923:	sbb    ch,BYTE PTR [edx]
  401925:	fcomp  st(5)
  401927:	das    
  401928:	push   cs
  401929:	fist   DWORD PTR [edx+0x1ed9becf]
  40192f:	in     al,dx
  401930:	push   ecx
  401931:	std    
  401932:	xchg   esp,eax
  401933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401935:	leave  
  401936:	aas    
  401937:	arpl   si,sp
  401939:	add    dl,BYTE PTR [edx]
  40193b:	sbb    DWORD PTR [ebp+0x44],0xda035478
  401942:	fisttp QWORD PTR [ebx+0x1a]
  401945:	rcl    DWORD PTR cs:[edi],1
  401948:	cmp    DWORD PTR [esi],ebx
  40194a:	xor    al,0xa6
  40194c:	sbb    al,0x18
  40194e:	push   edi
  40194f:	lock iret 
  401951:	pop    edx
  401952:	jmp    0xd768:0x30e88ae7
  401959:	inc    edi
  40195a:	(bad)  
  40195b:	loopne 0x4019d6
  40195d:	test   dh,bh
  40195f:	and    edx,DWORD PTR [esi+0x32a14c40]
  401965:	das    
  401966:	add    DWORD PTR [ebp+0x6e],ecx
  401969:	test   eax,0x2fd045e1
  40196e:	sub    BYTE PTR [edx+edi*2+0x53],al
  401972:	(bad)  
  401973:	or     al,0x30
  401975:	xchg   esp,eax
  401977:	sbb    esp,DWORD PTR [edx+eax*2-0x3d58b36d]
  40197e:	inc    ecx
  40197f:	(bad)  
  401980:	jno    0x4019bb
  401982:	pop    esp
  401983:	aad    0x9f
  401985:	jno    0x401963
  401987:	or     cl,bl
  401989:	dec    ebx
  40198a:	push   eax
  40198b:	xchg   edx,eax
  40198c:	adc    BYTE PTR ds:0x248e82ab,al
  401992:	pop    ebp
  401993:	retf   0x40f5
  401996:	mov    ebx,0xf52d6322
  40199b:	jg     0x4019e7
  40199d:	dec    ebx
  40199e:	addr16 pop ebx
  4019a0:	scas   al,BYTE PTR es:[edi]
  4019a1:	bound  edx,QWORD PTR [esi-0x36fd177]
  4019a7:	push   ds
  4019a8:	dec    esp
  4019a9:	add    ebx,DWORD PTR [eax-0x5f86d112]
  4019af:	mov    al,0x7
  4019b1:	mov    bl,0xa9
  4019b3:	outs   dx,BYTE PTR ds:[esi]
  4019b4:	sbb    DWORD PTR [eax-0x77],ebp
  4019b7:	mov    bh,BYTE PTR [esp+ecx*4-0x40920ff8]
  4019be:	push   eax
  4019bf:	retf   0xe195
  4019c2:	jne    0x401a08
  4019c4:	mov    esi,0xbe0bedea
  4019c9:	inc    ebx
  4019ca:	adc    al,0x4c
  4019cc:	adc    al,bl
  4019ce:	xchg   edi,eax
  4019cf:	push   edi
  4019d0:	ficom  WORD PTR [esi+0x4c]
  4019d3:	mov    edi,0xd7e576e0
  4019d8:	(bad)  [eax]
  4019da:	mov    al,0x2a
  4019dc:	jb     0x4019cf
  4019de:	sbb    DWORD PTR [esi],edi
  4019e0:	retf   0x64a5
  4019e3:	xlat   BYTE PTR ds:[bx]
  4019e5:	push   eax
  4019e6:	mov    ebx,0xb6c6215a
  4019eb:	sar    BYTE PTR [eax],cl
  4019ed:	fucomip st,st(1)
  4019ef:	push   esi
  4019f0:	dec    ebx
  4019f1:	pop    edi
  4019f2:	adc    edi,DWORD PTR [esi+0x6630dc33]
  4019f8:	ins    BYTE PTR es:[edi],dx
  4019f9:	gs push esi
  4019fc:	push   es
  4019fd:	mov    edi,0x2eb9ff86
  401a02:	xchg   esi,eax
  401a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a04:	test   eax,0xcad7b698
  401a09:	jbe    0x401a63
  401a0b:	adc    dh,ah
  401a0d:	or     al,0x66
  401a0f:	daa    
  401a10:	sbb    DWORD PTR [ebx],esp
  401a12:	xchg   ebp,eax
  401a13:	lahf   
  401a14:	xor    dh,BYTE PTR [edx+0x2d]
  401a17:	inc    edi
  401a18:	cmp    esi,ebx
  401a1a:	jbe    0x401a30
  401a1c:	jg     0x401a27
  401a1e:	loop   0x4019a8
  401a20:	dec    esp
  401a21:	jl     0x401a16
  401a23:	inc    ebx
  401a24:	cmp    eax,DWORD PTR [edx+0x52]
  401a27:	les    ebp,FWORD PTR [edi+0x660ad084]
  401a2d:	daa    
  401a2e:	std    
  401a2f:	sbb    DWORD PTR fs:[esp+edi*1-0x27],0x7fc11fe8
  401a38:	(bad)  
  401a39:	mov    DWORD PTR [ebx-0x28],ecx
  401a3c:	call   0xe1ddc8a7
  401a41:	push   ecx
  401a42:	push   esi
  401a43:	and    esp,esp
  401a45:	jns    0x401a18
  401a47:	xor    bh,BYTE PTR [ebp-0x2eeaf5a]
  401a4d:	mov    ah,0x20
  401a4f:	push   esp
  401a50:	clc    
  401a51:	cmp    BYTE PTR [ecx+0xc],bl
  401a54:	out    0xf9,al
  401a56:	clc    
  401a57:	mov    edi,0x53712983
  401a5c:	and    ah,BYTE PTR [ecx-0x3365819c]
  401a62:	mov    al,ds:0x7ca81ccf
  401a67:	mov    esi,fs
  401a69:	ss mov bh,0xda
  401a6c:	cmp    esp,DWORD PTR [ebx-0x5a]
  401a6f:	pop    es
  401a70:	(bad)  
  401a71:	adc    DWORD PTR [eax],ebx
  401a73:	xor    edi,DWORD PTR [edx]
  401a75:	mov    dl,0xb5
  401a77:	sahf   
  401a78:	lahf   
  401a79:	inc    ebx
  401a7a:	jg     0x401a68
  401a7c:	enter  0xfa12,0x57
  401a80:	push   eax
  401a81:	test   al,0xb9
  401a83:	retf   0x8e1b
  401a86:	ja     0x401a96
  401a88:	sub    al,0x74
  401a8a:	cwde   
  401a8b:	cmp    DWORD PTR [edi],esp
  401a8d:	cmc    
  401a8e:	cmp    eax,0x529ec33f
  401a93:	jge    0x401a6e
  401a95:	sbb    BYTE PTR [edx-0x71ce1009],bh
  401a9b:	adc    cl,dl
  401a9d:	inc    edi
  401a9e:	jmp    0x17044b6
  401aa3:	mov    ah,0xa2
  401aa5:	(bad)  
  401aa6:	jmp    0x401acd
  401aa8:	mov    ebp,0x4360b6dc
  401aad:	xchg   edx,eax
  401aae:	push   ebp
  401aaf:	xchg   BYTE PTR [ebp-0x187dc7d3],dl
  401ab5:	aaa    
  401ab6:	dec    eax
  401ab7:	jbe    0x401a5d
  401ab9:	ror    ecx,0xf0
  401abc:	aaa    
  401abd:	std    
  401abe:	xor    DWORD PTR [edx],eax
  401ac0:	dec    eax
  401ac1:	adc    eax,0xb179034c
  401ac6:	cld    
  401ac7:	ins    BYTE PTR es:[edi],dx
  401ac8:	rcr    ebx,0x87
  401acb:	dec    ebx
  401acc:	jg     0x401aa8
  401ace:	jno    0x401a99
  401ad0:	and    DWORD PTR [edx-0x7a90c5cd],esp
  401ad6:	adc    ebp,DWORD PTR [esi+0x7]
  401ad9:	leave  
  401ada:	xor    eax,DWORD PTR [edx+0x21]
  401add:	adc    BYTE PTR [ebp+ecx*2+0x4e],ah
  401ae1:	hlt    
  401ae2:	add    BYTE PTR [ecx],0x9c
  401ae5:	cdq    
  401ae6:	mov    dl,0xd2
  401ae8:	inc    ebp
  401ae9:	call   0x2afc:0x84d39e7d
  401af0:	cmp    ebp,DWORD PTR [eax+0x4153c62d]
  401af6:	test   BYTE PTR [ebx-0x7f69be80],dh
  401afc:	(bad)  
  401afd:	or     al,0x14
  401aff:	mov    cl,0x9b
  401b01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b02:	retf   0xf01b
  401b05:	pop    ds
  401b06:	cmp    cl,BYTE PTR [ecx-0xa]
  401b09:	fwait
  401b0a:	dec    ecx
  401b0b:	xchg   esp,eax
  401b0c:	jmp    0x401b50
  401b0e:	lods   al,BYTE PTR ds:[esi]
  401b0f:	add    al,0x24
  401b11:	add    eax,0xbd7e7543
  401b16:	pop    eax
  401b17:	or     esp,esi
  401b19:	mov    ch,0x7f
  401b1b:	sub    BYTE PTR [esi],ah
  401b1d:	scas   eax,DWORD PTR es:[edi]
  401b1e:	sub    al,BYTE PTR [ecx+0x4]
  401b21:	test   DWORD PTR [ebx+0x1b],0x59dda79d
  401b28:	dec    edx
  401b29:	loopne 0x401b26
  401b2b:	mov    esi,DWORD PTR [ebx]
  401b2d:	call   esi
  401b2f:	test   al,0xe
  401b31:	sbb    DWORD PTR [edx],ebx
  401b33:	mov    ch,0x95
  401b35:	in     eax,0x56
  401b37:	iret   
  401b38:	cdq    
  401b39:	pop    es
  401b3a:	add    eax,0xdca6e8d3
  401b3f:	sub    eax,0x67dea91f
  401b44:	shr    eax,cl
  401b46:	(bad)  
  401b47:	xor    BYTE PTR [eax+0x44],al
  401b4a:	cmp    eax,0x75577cb6
  401b4f:	dec    ebx
  401b50:	inc    ebx
  401b51:	iret   
  401b52:	mov    esi,0xd6500566
  401b57:	pop    es
  401b58:	nop
  401b59:	pop    ds
  401b5a:	icebp  
  401b5b:	mov    ah,0xd8
  401b5d:	rep stos DWORD PTR es:[edi],eax
  401b5f:	shl    BYTE PTR [edx+0x6c],1
  401b62:	shl    BYTE PTR [eax+0x29],0x18
  401b66:	and    ecx,esi
  401b68:	xchg   ecx,eax
  401b69:	sbb    al,0xd0
  401b6b:	or     DWORD PTR [edx+ebx*4+0x4d82426],edi
  401b72:	(bad)  
  401b73:	arpl   ax,cx
  401b75:	cmc    
  401b76:	call   0x1971:0x7d3e4efa
  401b7d:	pop    ds
  401b7e:	fistp  WORD PTR [ebx]
  401b80:	pop    edx
  401b81:	call   0x6e2b:0x25197f32
  401b88:	retf   
  401b89:	js     0x401c09
  401b8b:	in     al,0xc2
  401b8d:	ret    0xb948
  401b90:	adc    ebp,DWORD PTR [edi]
  401b92:	sar    BYTE PTR [edx],1
  401b94:	loop   0x401b6b
  401b96:	fdiv   QWORD PTR ds:0x23939965
  401b9c:	imul   edx,DWORD PTR [eax+0x1a],0x4f5d40c7
  401ba3:	fs aas 
  401ba5:	jno    0x401ba3
  401ba7:	into   
  401ba8:	and    BYTE PTR [edi+0x391e6624],al
  401bae:	dec    ebx
  401baf:	not    BYTE PTR [ecx+0x36]
  401bb2:	push   ebp
  401bb3:	inc    eax
  401bb4:	fmul   st(0),st
  401bb6:	sbb    esp,DWORD PTR [edi+0x1a]
  401bb9:	repnz push edi
  401bbb:	aaa    
  401bbc:	outs   dx,DWORD PTR ds:[esi]
  401bbd:	imul   DWORD PTR [ecx]
  401bbf:	xor    eax,0x73055921
  401bc4:	lods   eax,DWORD PTR ds:[esi]
  401bc5:	lds    ebp,FWORD PTR [edx-0x3a]
  401bc8:	sbb    edi,ecx
  401bca:	add    cl,BYTE PTR [ecx+ebp*2]
  401bcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bce:	add    eax,0x955e017f
  401bd3:	outs   dx,BYTE PTR ds:[esi]
  401bd4:	xchg   esp,eax
  401bd5:	imul   edi,DWORD PTR [esi]
  401bd8:	std    
  401bd9:	(bad)  
  401bdb:	ins    BYTE PTR es:[edi],dx
  401bdc:	fist   DWORD PTR fs:[edx+0x72]
  401be0:	shr    BYTE PTR [eax-0x41bcecd],cl
  401be6:	mov    ecx,0x55e04ab5
  401beb:	mov    ebp,0x70dfd055
  401bf0:	push   eax
  401bf1:	sbb    bh,ah
  401bf3:	or     DWORD PTR [eax-0x1e],ecx
  401bf6:	gs jmp 0x8d127e27
  401bfc:	mov    eax,DWORD PTR [ebx-0x4e2b1774]
  401c02:	stc    
  401c03:	lahf   
  401c04:	or     edx,ebx
  401c06:	cmp    eax,0x89a601e
  401c0b:	aas    
  401c0c:	loopne 0x401c72
  401c0e:	and    BYTE PTR [edx-0x6],0x5d
  401c12:	ins    BYTE PTR es:[edi],dx
  401c13:	sub    al,0x97
  401c15:	push   ds
  401c16:	jae    0x401c41
  401c18:	pop    ecx
  401c19:	adc    BYTE PTR [ecx+0x67],ah
  401c1c:	mov    ds:0x7bcca9c2,eax
  401c21:	dec    edx
  401c22:	xchg   edx,eax
  401c23:	dec    edi
  401c24:	fs mov bh,0x3b
  401c27:	dec    ebx
  401c28:	pop    esi
  401c29:	push   edx
  401c2a:	enter  0x78a8,0x4
  401c2e:	and    DWORD PTR [esi+ebp*4],0xe83fc9b1
  401c35:	adc    eax,0x65044cfc
  401c3a:	push   ds
  401c3b:	sub    eax,0x5eafa1a9
  401c40:	cmp    DWORD PTR [edx+esi*4+0x7d],ebp
  401c44:	fidiv  WORD PTR [ecx-0x2e]
  401c47:	mov    ecx,0x4125cf02
  401c4c:	adc    edi,DWORD PTR [edi+0x50ba2a41]
  401c52:	mov    edx,0x97ec89df
  401c57:	cmp    BYTE PTR [eax+0x7a],dh
  401c5a:	icebp  
  401c5b:	rcl    DWORD PTR [ebx-0x69],0x19
  401c5f:	sbb    dl,BYTE PTR [esi-0x49]
  401c62:	mov    ch,0x4d
  401c64:	xor    ebx,DWORD PTR es:[eax+ebp*2]
  401c68:	imul   ecx,DWORD PTR [ecx],0xff8e28c
  401c6e:	inc    edi
  401c6f:	pop    ebx
  401c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c71:	scas   al,BYTE PTR es:[edi]
  401c72:	xor    dh,ch
  401c74:	mov    ds:0x2d9c44ab,al
  401c79:	stos   DWORD PTR es:[edi],eax
  401c7a:	push   ebp
  401c7b:	std    
  401c7c:	push   ds
  401c7d:	lods   al,BYTE PTR ds:[esi]
  401c7e:	pop    ebx
  401c7f:	leave  
  401c80:	jle    0x401c17
  401c82:	pop    ecx
  401c83:	mov    al,0xa2
  401c85:	dec    esi
  401c86:	dec    esi
  401c87:	imul   ebp,DWORD PTR [edi+0x41],0x928ee814
  401c8e:	pop    ebp
  401c8f:	pop    eax
  401c90:	in     eax,dx
  401c91:	loop   0x401c1a
  401c93:	or     al,0x43
  401c95:	out    0xe7,al
  401c97:	push   ecx
  401c98:	aad    0x4a
  401c9a:	js     0x401d18
  401c9c:	jne    0x401c71
  401c9e:	xchg   BYTE PTR [edi+0x20],dl
  401ca1:	aas    
  401ca2:	test   al,0x9d
  401ca4:	inc    ebx
  401ca5:	mov    dh,0x79
  401ca7:	or     eax,eax
  401ca9:	pushf  
  401caa:	cmp    BYTE PTR [edi-0x1d02714a],cl
  401cb0:	adc    bh,bl
  401cb2:	jbe    0x401cfd
  401cb4:	cs xor ebp,edx
  401cb7:	cmc    
  401cb8:	push   esi
  401cb9:	sub    BYTE PTR [esi+0x71de95ac],bl
  401cbf:	in     al,0x74
  401cc1:	sbb    BYTE PTR [ecx+0x7e],dh
  401cc4:	sahf   
  401cc5:	and    dh,ch
  401cc7:	aas    
  401cc8:	jns    0x401ce5
  401cca:	and    esp,ebp
  401ccc:	push   cs
  401ccd:	and    eax,0xf20ee09b
  401cd2:	cld    
  401cd3:	clc    
  401cd4:	jno    0x401ceb
  401cd6:	outs   dx,BYTE PTR ds:[esi]
  401cd7:	xlat   BYTE PTR ds:[ebx]
  401cd8:	and    DWORD PTR [edi+0x6ba186dd],ebx
  401cde:	cdq    
  401cdf:	sbb    al,BYTE PTR ds:0x2c1e185b
  401ce5:	or     eax,edx
  401ce7:	pop    ds
  401ce8:	xchg   edx,eax
  401ce9:	fcomp  st(2)
  401ceb:	cld    
  401cec:	cmp    ah,ch
  401cee:	ror    BYTE PTR [ecx+0x7ed8a776],0xa3
  401cf5:	push   ss
  401cf6:	(bad)  
  401cf7:	and    BYTE PTR [ecx+0x593a7f5e],0xf3
  401cfe:	js     0x401cb8
  401d00:	pop    ebp
  401d01:	inc    esi
  401d02:	adc    BYTE PTR [ebx+0x15d8d8fb],dl
  401d08:	aaa    
  401d09:	and    ecx,DWORD PTR [edi-0x1d]
  401d0c:	in     al,dx
  401d0d:	iret   
  401d0e:	or     eax,0x73dbeffe
  401d13:	mov    dh,0x27
  401d15:	or     al,0x2b
  401d17:	jnp    0x401d51
  401d19:	(bad)  
  401d1b:	push   cs
  401d1c:	mov    ebx,0xd1f2c473
  401d21:	and    eax,0x1416b0aa
  401d26:	inc    ebx
  401d27:	mov    dl,0xb4
  401d29:	out    0x9f,al
  401d2b:	mov    WORD PTR [ecx-0x7c940fe3],?
  401d31:	sub    edx,eax
  401d33:	and    al,0x69
  401d35:	and    BYTE PTR [edi-0x7170b5a1],al
  401d3b:	jl     0x401d3f
  401d3d:	jg     0x401d96
  401d3f:	sub    al,0xf1
  401d41:	dec    eax
  401d42:	stc    
  401d43:	int    0xc0
  401d45:	retf   0x67a6
  401d48:	mov    ch,0xc6
  401d4a:	add    BYTE PTR [eax-0x5618dba3],0x85
  401d51:	bound  esp,QWORD PTR [esp+ecx*4-0xe]
  401d55:	add    edi,DWORD PTR [esi]
  401d57:	mov    ecx,0x26cbc59d
  401d5c:	or     bl,ch
  401d5e:	test   al,0xe4
  401d60:	shl    DWORD PTR [esi],1
  401d62:	outs   dx,BYTE PTR ds:[esi]
  401d63:	xor    eax,0x74d7c2b7
  401d68:	jb     0x401d8f
  401d6a:	es dec ebx
  401d6c:	dec    eax
  401d6d:	dec    esp
  401d6e:	jmp    0xf54b22eb
  401d73:	enter  0xddf8,0x9f
  401d77:	mov    bh,0x59
  401d79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d7a:	mov    edi,0xab096dd9
  401d7f:	adc    DWORD PTR [eax+edi*1],esp
  401d82:	add    eax,0x35e8f300
  401d87:	icebp  
  401d88:	fcmovu st,st(5)
  401d8a:	jnp    0x401d91
  401d8c:	pop    es
  401d8d:	loope  0x401d41
  401d8f:	sbb    eax,0x9bff4478
  401d94:	pop    esp
  401d95:	aad    0xdd
  401d97:	fwait
  401d98:	xchg   esi,eax
  401d99:	push   es
  401d9a:	data16 (bad) 
  401d9c:	mov    eax,ds:0x5d2628b4
  401da1:	sbb    BYTE PTR [ebx+0x10552bc5],cl
  401da7:	dec    esi
  401da8:	jmp    0x401dec
  401daa:	add    DWORD PTR [eax+0x48],esp
  401dad:	jecxz  0x401dc4
  401daf:	jns    0x401e22
  401db1:	out    dx,al
  401db2:	xchg   ebx,eax
  401db3:	mov    ah,0x39
  401db5:	mov    esp,0xa70cc3d7
  401dba:	repz sbb BYTE PTR [eax+0x6f9421fa],bl
  401dc1:	mov    bl,0x32
  401dc3:	imul   ebp
  401dc5:	add    esi,eax
  401dc7:	stos   BYTE PTR es:[edi],al
  401dc8:	jmp    0x690a47a9
  401dcd:	cmp    DWORD PTR [eax-0x57c86091],0x50a88730
  401dd7:	(bad)  
  401dd8:	sub    ah,ch
  401dda:	jmp    0x401d7c
  401ddc:	pop    ecx
  401ddd:	(bad)  [esi-0x2d]
  401de0:	push   ebp
  401de1:	cli    
  401de2:	push   eax
  401de3:	shr    bh,0x4e
  401de6:	jmp    0x401e46
  401de8:	add    al,0x41
  401dea:	stos   DWORD PTR es:[edi],eax
  401deb:	rcr    DWORD PTR [esi+0xe194366],0xcd
  401df2:	push   ebp
  401df3:	and    al,0xc2
  401df5:	cmp    ebp,DWORD PTR [esi-0x55]
  401df8:	les    ecx,FWORD PTR [esi-0x18]
  401dfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401dfc:	jle    0x401d9e
  401dfe:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  401e00:	and    BYTE PTR [edi],ch
  401e02:	mov    BYTE PTR [eax],ah
  401e04:	jg     0x401e4d
  401e06:	es std 
  401e08:	cmp    edx,ebp
  401e0a:	cmp    ah,bl
  401e0c:	mov    edx,0x7c53acf0
  401e11:	idiv   BYTE PTR [ebx+0x3a]
  401e14:	adc    cl,ch
  401e16:	add    DWORD PTR [edx-0x4],ebx
  401e19:	leave  
  401e1a:	or     eax,0x13d1add7
  401e1f:	mov    edx,0xab5f069f
  401e24:	stos   BYTE PTR es:[edi],al
  401e25:	pop    ss
  401e26:	jmp    0x401de2
  401e28:	push   es
  401e29:	in     al,dx
  401e2a:	scas   al,BYTE PTR es:[edi]
  401e2b:	in     al,dx
  401e2c:	inc    ecx
  401e2d:	jle    0x401e54
  401e2f:	iret   
  401e30:	es jno 0x401e7a
  401e33:	por    mm1,QWORD PTR [ecx+edi*4-0x55db5ae0]
  401e3b:	cwde   
  401e3c:	inc    eax
  401e3d:	jl     0x401e58
  401e3f:	xor    al,0x5c
  401e41:	xor    BYTE PTR [eax],0x4
  401e44:	pop    ss
  401e45:	xlat   BYTE PTR ds:[ebx]
  401e46:	mov    ah,0x78
  401e48:	inc    esi
  401e49:	inc    ecx
  401e4a:	sar    BYTE PTR [ebx],1
  401e4c:	ins    BYTE PTR es:[edi],dx
  401e4d:	cdq    
  401e4e:	jg     0x401ead
  401e50:	jb     0x401ddd
  401e52:	ret    
  401e53:	pop    ds
  401e54:	jbe    0x401dee
  401e56:	or     BYTE PTR [edx+0x9],ah
  401e59:	xor    BYTE PTR [edx+0x20],dl
  401e5c:	lods   eax,DWORD PTR ds:[esi]
  401e5d:	or     edx,DWORD PTR [ecx]
  401e5f:	mov    esp,0x25621208
  401e64:	imul   esi,esp,0x3ce0bb46
  401e6a:	scas   eax,DWORD PTR es:[edi]
  401e6b:	arpl   WORD PTR [ebx],sp
  401e6d:	adc    al,BYTE PTR [ecx+edi*8-0x2d35d02b]
  401e74:	loop   0x401e49
  401e76:	mov    ds:0xc4690ba5,eax
  401e7b:	mov    ebx,0xa67c3e1f
  401e80:	call   0x1a732dd5
  401e85:	add    cl,BYTE PTR [esi-0x6]
  401e88:	pushf  
  401e89:	push   0xffffffe8
  401e8b:	add    dh,cl
  401e8d:	nop    ecx
  401e90:	sbb    edi,DWORD PTR [esi+0x7ab98c98]
  401e96:	(bad)  
  401e97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e98:	sahf   
  401e99:	jbe    0x401e92
  401e9b:	and    BYTE PTR [ebx+0x1a],dl
  401e9e:	mov    esi,0x3dc6ddac
  401ea3:	add    al,0x90
  401ea5:	inc    ebp
  401ea6:	push   ebp
  401ea7:	sahf   
  401ea8:	std    
  401ea9:	jecxz  0x401eb6
  401eab:	jmp    0x9ec906d7
  401eb0:	push   esi
  401eb1:	repz shl BYTE PTR [edx-0x6d],0x81
  401eb6:	shl    BYTE PTR cs:[ecx],cl
  401eb9:	jo     0x401e7a
  401ebb:	stos   DWORD PTR es:[edi],eax
  401ebc:	mov    bh,0x1c
  401ebe:	test   BYTE PTR [ebx-0x4cb65c9d],cl
  401ec4:	add    BYTE PTR [edi],0xe5
  401ec7:	and    edx,DWORD PTR [ebp+0x76]
  401eca:	call   0x19fc6859
  401ecf:	out    0x66,eax
  401ed1:	mov    ch,0x6e
  401ed3:	icebp  
  401ed4:	test   eax,0xbf07f19d
  401ed9:	add    al,0xa2
  401edb:	push   ss
  401edc:	dec    edx
  401edd:	lods   eax,DWORD PTR ds:[esi]
  401ede:	pop    ebp
  401edf:	call   0x5aea:0x98cf81e0
  401ee6:	aas    
  401ee7:	sbb    eax,0xb2c94d9a
  401eec:	icebp  
  401eed:	hlt    
  401eee:	(bad)  
  401eef:	dec    ebx
  401ef0:	stos   DWORD PTR es:[edi],eax
  401ef1:	rol    edx,0x3
  401ef4:	mov    edx,edx
  401ef6:	mov    ch,0xa1
  401ef8:	(bad)  
  401ef9:	dec    edx
  401efa:	xchg   eax,edi
  401efc:	es lahf 
  401efe:	push   esi
  401eff:	xchg   ecx,eax
  401f00:	lahf   
  401f01:	jne    0x401ebe
  401f03:	mov    cl,0x4d
  401f05:	data16 into 
  401f07:	sub    BYTE PTR [eax],cl
  401f09:	pop    eax
  401f0a:	push   ds
  401f0b:	push   ebp
  401f0c:	data16 fldcw WORD PTR [edi+0x145b11c8]
  401f13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f14:	(bad)  
  401f15:	ja     0x401f0d
  401f17:	jmp    0x401f28
  401f19:	xchg   BYTE PTR [eax],dh
  401f1b:	pop    ebx
  401f1c:	add    esi,edi
  401f1e:	ret    0x2c56
  401f21:	pop    ds
  401f22:	xchg   ebp,eax
  401f23:	lds    edi,FWORD PTR [edx-0x15]
  401f26:	jno    0x401edd
  401f28:	mov    eax,ds:0x619a374d
  401f2d:	cs shr ch,0xe1
  401f31:	mov    esi,0x6921d2a8
  401f36:	lea    ebp,[eax+0x57]
  401f39:	ficomp DWORD PTR [ebp-0x22e4cd9b]
  401f3f:	push   eax
  401f40:	mov    ah,0x13
  401f42:	jge    0x401f4f
  401f44:	loopne 0x401fb4
  401f46:	in     eax,dx
  401f47:	dec    ebx
  401f48:	leave  
  401f49:	push   ds
  401f4a:	cwde   
  401f4b:	in     al,0xa0
  401f4d:	dec    ebp
  401f4e:	loop   0x401f49
  401f50:	cmp    eax,0x7e99a2cc
  401f55:	xchg   edi,eax
  401f56:	push   ds
  401f57:	jmp    0x401f54
  401f59:	out    dx,al
  401f5a:	pop    eax
  401f5b:	lds    esp,FWORD PTR [ecx+0x6b]
  401f5e:	inc    ebp
  401f5f:	pusha  
  401f60:	shl    DWORD PTR [esi],1
  401f62:	in     al,0x25
  401f64:	call   0x2f664382
  401f69:	shr    dh,1
  401f6b:	stos   DWORD PTR es:[edi],eax
  401f6c:	pop    es
  401f6d:	add    esp,0x57d2b99e
  401f73:	jle    0x401f32
  401f75:	stos   DWORD PTR es:[edi],eax
  401f76:	cmc    
  401f77:	sbb    edi,ebx
  401f79:	and    BYTE PTR [edx-0x80],dl
  401f7c:	inc    ebx
  401f7d:	mov    esi,ebx
  401f7f:	fwait
  401f80:	jg     0x402001
  401f82:	out    dx,al
  401f83:	std    
  401f84:	(bad)  
  401f85:	lea    esp,[edx+0x2ec6be06]
  401f8b:	mov    bl,0x1e
  401f8d:	daa    
  401f8e:	ds cmc 
  401f90:	lds    esp,FWORD PTR [edx]
  401f92:	mov    ebx,0x81689d6b
  401f97:	jns    0x401fa7
  401f99:	xchg   BYTE PTR [esp+ebp*4-0x7f8d08f1],cl
  401fa0:	mov    cl,0xa6
  401fa2:	loop   0x401f32
  401fa4:	mov    eax,ds:0xa00eadf3
  401fa9:	jecxz  0x402000
  401fab:	adc    BYTE PTR [edx+0x1c],al
  401fae:	cld    
  401faf:	out    dx,al
  401fb0:	mov    ebp,ebp
  401fb2:	sbb    edx,esi
  401fb4:	push   esp
  401fb5:	jmp    0xb5880ab4
  401fba:	loop   0x40201d
  401fbc:	sbb    DWORD PTR [edx-0x7a],ebx
  401fbf:	enter  0xa3ff,0x21
  401fc3:	jecxz  0x401fe5
  401fc5:	or     al,0x8f
  401fc7:	jmp    0xa965:0x56f49be0
  401fce:	xor    DWORD PTR [edx+0x16],eax
  401fd1:	(bad)  
  401fd2:	mov    ds:0x59395f05,eax
  401fd7:	sbb    DWORD PTR [edi+0x2c],ebx
  401fda:	jno    0x402054
  401fdc:	dec    esp
  401fdd:	clc    
  401fde:	jecxz  0x40201e
  401fe0:	mov    bl,0xce
  401fe2:	xchg   ebp,eax
  401fe3:	inc    ebp
  401fe4:	test   BYTE PTR [edi+0x7f],al
  401fe7:	mov    eax,esi
  401fe9:	jae    0x401ff8
  401feb:	jp     0x401ff2
  401fed:	std    
  401fee:	inc    edi
  401fef:	lods   al,BYTE PTR ds:[esi]
  401ff0:	popf   
  401ff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ff2:	mov    eax,ds:0x4f38f19
  401ff7:	add    edi,DWORD PTR [ebp-0x49]
  401ffa:	xor    eax,0x36f9e421
  401fff:	dec    esi
  402000:	inc    esp
  402001:	arpl   WORD PTR [ebx+edx*8+0x1546c684],bp
  402008:	cld    
  402009:	mov    edi,eax
  40200b:	iret   
  40200c:	(bad)  
  40200d:	je     0x401ffd
  40200f:	push   0x1e
  402011:	dec    edx
  402013:	xor    DWORD PTR [esi-0x11],edx
  402016:	arpl   WORD PTR [edi+0x4a35642b],ax
  40201c:	add    bh,BYTE PTR [esi+0x62ab628c]
  402022:	and    esp,ebp
  402024:	leave  
  402025:	mov    ch,0x9a
  402027:	adc    eax,0x9cfb989c
  40202c:	mov    ds:0xef78c370,al
  402031:	les    ebx,FWORD PTR [esi-0x5e296c05]
  402037:	popf   
  402038:	jmp    0x4311f0de
  40203d:	inc    ecx
  40203e:	push   ecx
  40203f:	leave  
  402040:	outs   dx,DWORD PTR ds:[esi]
  402041:	mov    bl,0xfb
  402043:	shl    BYTE PTR [ecx+0x7],0x7
  402047:	jno    0x4020b0
  402049:	test   al,0xe2
  40204b:	pop    ds
  40204c:	gs iret 
  40204e:	sti    
  40204f:	scas   al,BYTE PTR es:[edi]
  402050:	stos   DWORD PTR es:[edi],eax
  402051:	cs cli 
  402053:	pushf  
  402054:	test   DWORD PTR [edi-0x1d],edi
  402057:	sar    BYTE PTR [esi-0x568f607d],1
  40205d:	inc    ecx
  40205e:	mov    esi,0x879c5636
  402063:	inc    edi
  402064:	in     al,0x56
  402066:	mov    esp,0xf7a9566e
  40206b:	pop    ds
  40206c:	push   ecx
  40206d:	pop    esp
  40206e:	imul   esp,DWORD PTR [edx-0x18dd484f],0xe
  402075:	mov    ah,0x78
  402077:	jno    0x4020ae
  402079:	nop
  40207a:	inc    esi
  40207b:	sbb    DWORD PTR [edx-0x5e86d067],0x66
  402082:	add    dh,BYTE PTR [ecx+ecx*4]
  402085:	cdq    
  402086:	(bad)  
  402087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402088:	mov    ds:0xb5af300f,al
  40208d:	or     bl,ch
  40208f:	sbb    DWORD PTR [edi+eax*4],edi
  402092:	xchg   DWORD PTR [edi+0x6e],edx
  402095:	imul   ecx,DWORD PTR [eax+0x224f6d87],0x32a5aa69
  40209f:	sbb    al,0xcc
  4020a1:	stos   DWORD PTR es:[edi],eax
  4020a2:	mov    DWORD PTR [eax],ebp
  4020a4:	imul   edi,DWORD PTR [eax],0x4f79906e
  4020aa:	shl    BYTE PTR [edi+0x10],1
  4020ad:	ja     0x40209a
  4020af:	sub    ch,BYTE PTR [ebx+0x37]
  4020b2:	outs   dx,BYTE PTR ds:[esi]
  4020b3:	(bad)  
  4020b4:	mov    dh,0xb0
  4020b6:	ins    DWORD PTR es:[edi],dx
  4020b7:	xchg   ecx,eax
  4020b8:	scas   eax,DWORD PTR es:[edi]
  4020b9:	ret    0x5c87
  4020bc:	stc    
  4020bd:	sbb    dl,BYTE PTR [eax+0x1a]
  4020c0:	bound  esi,QWORD PTR ss:[edi-0x29]
  4020c4:	push   edx
  4020c5:	int3   
  4020c6:	mov    ebx,0x39a37629
  4020cb:	cwde   
  4020cc:	mov    ebx,0x5d3fc39f
  4020d1:	out    dx,eax
  4020d2:	push   ebp
  4020d3:	xor    DWORD PTR ds:0xe0fa48b1,edi
  4020d9:	sbb    ax,0xaa7d
  4020dd:	retf   
  4020de:	sbb    eax,esi
  4020e0:	adc    eax,0xc3071f82
  4020e5:	mov    esp,edi
  4020e7:	add    eax,0x11eaf279
  4020ec:	mov    esi,0x93fc6512
  4020f1:	jmp    0xf20f:0xa104fd76
  4020f8:	xchg   ecx,eax
  4020f9:	in     eax,0x65
  4020fb:	das    
  4020fc:	push   ebx
  4020fd:	repnz cmp BYTE PTR [eax],0xd6
  402101:	shr    BYTE PTR [edx],0x2f
  402104:	clc    
  402105:	adc    cl,0x54
  402108:	loopne 0x4020de
  40210a:	pusha  
  40210b:	fldcw  WORD PTR [eax+edx*2]
  40210e:	mov    dl,0xdd
  402110:	xchg   edx,eax
  402111:	lea    edx,[ebx-0xf]
  402114:	mov    dh,0xfc
  402116:	add    ebx,ebx
  402118:	dec    ecx
  402119:	sbb    dl,cl
  40211b:	jecxz  0x40212a
  40211d:	loope  0x402199
  40211f:	jg     0x4020f9
  402121:	ds sub al,0x65
  402124:	cli    
  402125:	leave  
  402126:	mov    ds:0x4ebeb737,eax
  40212b:	stc    
  40212c:	mov    al,0x4d
  40212e:	test   al,0x52
  402130:	lds    esp,FWORD PTR [eax+eiz*8+0x5ad1619c]
  402137:	dec    eax
  402138:	ins    BYTE PTR es:[edi],dx
  402139:	pop    ss
  40213a:	in     al,0x90
  40213c:	mov    ah,0xa0
  40213e:	stos   BYTE PTR es:[edi],al
  40213f:	cmp    ebp,edx
  402141:	enter  0xf14c,0x3f
  402145:	sbb    dh,BYTE PTR [esi-0x591c3e33]
  40214b:	mov    dl,0xe7
  40214d:	jg     0x4020e7
  40214f:	call   0xd6ac328b
  402154:	in     al,0x9e
  402156:	xor    eax,DWORD PTR [edi+0x22]
  402159:	fdiv   DWORD PTR [edx+0x59b78efc]
  40215f:	and    bl,bh
  402161:	sbb    BYTE PTR ds:0x264f8385,cl
  402167:	pop    esp
  402168:	in     eax,0x3b
  40216a:	or     edi,DWORD PTR [ebx]
  40216c:	call   0x4b4b948b
  402171:	adc    ah,BYTE PTR [esi+0x33]
  402174:	mov    ebx,0x924b3cdc
  402179:	and    BYTE PTR [eax*2+0x72ccf567],ch
  402180:	in     eax,0x69
  402182:	sahf   
  402183:	clc    
  402184:	mov    bl,0x69
  402186:	(bad)  
  402187:	pop    edi
  402188:	clc    
  402189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40218a:	test   BYTE PTR [ecx+0x32b424fb],al
  402190:	in     al,dx
  402191:	and    eax,0xf07abde0
  402196:	xor    BYTE PTR [edi],bl
  402198:	neg    BYTE PTR [edx]
  40219a:	dec    edi
  40219b:	fisttp WORD PTR [ebx-0x3f980578]
  4021a1:	and    al,0x61
  4021a3:	and    al,0x6e
  4021a5:	mov    edx,0x4b48d119
  4021aa:	mov    cs,WORD PTR [ecx]
  4021ac:	adc    DWORD PTR [ebx-0x67],esp
  4021af:	mov    eax,ds:0x524998c0
  4021b4:	int    0xc2
  4021b6:	xlat   BYTE PTR ds:[ebx]
  4021b7:	scas   al,BYTE PTR es:[edi]
  4021b8:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4021ba:	add    dl,BYTE PTR [esi+0x4f]
  4021bd:	test   BYTE PTR [ecx-0x10],bl
  4021c0:	jmp    0xe7ef:0xe2861e97
  4021c7:	or     DWORD PTR [edi-0x3d],edx
  4021ca:	adc    bl,BYTE PTR [ebx-0x45]
  4021cd:	dec    edx
  4021ce:	xor    BYTE PTR [edi+0x6a8fb43c],cl
  4021d4:	(bad)  
  4021d5:	out    0x8c,eax
  4021d7:	xor    eax,0xee02dd74
  4021dc:	fsubrp st(1),st
  4021de:	jnp    0x4021d9
  4021e0:	or     dl,BYTE PTR [esi]
  4021e2:	cmc    
  4021e3:	leave  
  4021e4:	pop    esi
  4021e5:	pop    ebx
  4021e6:	les    ebp,FWORD PTR [edx+0x7e]
  4021e9:	into   
  4021ea:	inc    eax
  4021eb:	jbe    0x4021c2
  4021ed:	and    eax,0xdb29dd8b
  4021f2:	inc    edx
  4021f3:	mov    edx,0xf31409c0
  4021f8:	loope  0x402207
  4021fa:	imul   esi,edx,0x4aa1a9a9
  402200:	repz ds pop ds
  402203:	push   ecx
  402204:	mov    al,BYTE PTR [edx]
  402206:	bnd jne 0x40220f
  402209:	cli    
  40220a:	out    dx,eax
  40220b:	adc    al,cl
  40220d:	mov    BYTE PTR [ebx-0x75],ch
  402210:	ret    
  402211:	mov    DWORD PTR [esi-0x5a],ebp
  402214:	es push edi
  402216:	or     ch,0xd0
  402219:	sbb    ebp,DWORD PTR [esi-0x297e245b]
  40221f:	hlt    
  402220:	or     bl,BYTE PTR [edi+0x38]
  402223:	mov    esi,0x5f5be4ab
  402228:	call   0x69702555
  40222d:	or     BYTE PTR [ecx+0x5],dl
  402230:	in     al,dx
  402231:	sub    edx,edi
  402233:	sub    eax,0xa826858f
  402238:	pop    edx
  402239:	fisub  WORD PTR [eax]
  40223b:	loopne 0x402265
  40223d:	jmp    0xcb80310f
  402242:	imul   ecx,DWORD PTR [ecx],0x50
  402245:	(bad)  
  402246:	out    dx,eax
  402247:	xor    eax,0xe186e41a
  40224c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40224d:	cmp    edi,DWORD PTR [edi-0x5c9c1598]
  402253:	sub    ah,BYTE PTR [ecx-0x7c]
  402256:	cli    
  402257:	fdiv   QWORD PTR [esi]
  402259:	push   esp
  40225a:	leave  
  40225b:	sbb    DWORD PTR [edi+0x475993a1],ebx
  402261:	push   edi
  402262:	loope  0x402234
  402264:	int    0x90
  402266:	mul    BYTE PTR [esi]
  402268:	sub    BYTE PTR [esi+0x48adedb8],ch
  40226e:	xchg   DWORD PTR [eax-0x3f],ecx
  402271:	mov    DWORD PTR [ecx],edi
  402273:	test   DWORD PTR [edi-0xabc5f11],ebx
  402279:	jb     0x4022f4
  40227b:	pop    ebp
  40227c:	fsub   DWORD PTR [ecx+0x6ac39727]
  402282:	scas   al,BYTE PTR es:[edi]
  402283:	adc    al,0x11
  402285:	pop    esi
  402286:	adc    BYTE PTR [esi+esi*8+0x43],ch
  40228a:	pop    esi
  40228b:	lock ins DWORD PTR es:[edi],dx
  40228d:	push   cs
  40228e:	jge    0x402263
  402290:	pusha  
  402291:	inc    edi
  402292:	sub    BYTE PTR [edx+0x160630a8],bl
  402298:	xor    DWORD PTR [ebx+0x69c0881e],esi
  40229e:	mov    dh,0x5f
  4022a0:	jbe    0x4022bf
  4022a2:	lods   al,BYTE PTR ds:[esi]
  4022a3:	leave  
  4022a4:	and    BYTE PTR [ecx+0x5a3574a5],al
  4022aa:	(bad)  
  4022ab:	aad    0xf3
  4022ad:	mov    eax,0x90a30092
  4022b2:	and    edx,DWORD PTR [ecx-0x79]
  4022b5:	lods   al,BYTE PTR ds:[esi]
  4022b6:	(bad)  
  4022b7:	pop    ds
  4022b8:	sbb    ebx,DWORD PTR [ecx+0x24]
  4022bb:	add    al,dh
  4022bd:	daa    
  4022be:	jne    0x4022eb
  4022c0:	mov    dl,BYTE PTR [edx-0x6d3cce52]
  4022c6:	hlt    
  4022c7:	pop    esi
  4022c8:	jp     0x40224f
  4022ca:	pop    ss
  4022cb:	ja     0x4022a0
  4022cd:	pop    es
  4022ce:	fwait
  4022cf:	mov    ebp,0xf5241d82
  4022d4:	loope  0x402329
  4022d6:	repz leave 
  4022d8:	pop    ebp
  4022d9:	sub    eax,0xb769e5b8
  4022de:	mov    dh,0x3f
  4022e0:	xchg   edi,eax
  4022e1:	bt     DWORD PTR [edx],ebp
  4022e4:	mov    dl,0x75
  4022e6:	std    
  4022e7:	and    bh,BYTE PTR [ebx+eax*1]
  4022ea:	xchg   edx,ebp
  4022ec:	fistp  WORD PTR [esi+0x236185b4]
  4022f2:	test   eax,0x3cbbf04c
  4022f7:	xchg   ebx,eax
  4022f8:	jae    0x40233a
  4022fa:	and    eax,esi
  4022fc:	jp     0x4022e0
  4022fe:	push   ds
  4022ff:	in     eax,0x2b
  402301:	jb     0x402311
  402303:	int3   
  402304:	loope  0x40233f
  402306:	or     eax,0xa92b465b
  40230b:	lds    ebx,FWORD PTR [edx+0x1f0938e4]
  402311:	and    al,0x1e
  402313:	iret   
  402314:	(bad)  
  402315:	mov    ebp,0x9d9a9b26
  40231a:	add    esi,DWORD PTR [ebx+0x40ce5e2]
  402320:	push   ebx
  402321:	lock sbb dh,BYTE PTR ss:[ebp+0xc]
  402326:	jo     0x402315
  402328:	lahf   
  402329:	mov    al,ds:0x4fe43a98
  40232e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40232f:	push   ebx
  402330:	mov    edx,0xfd86f345
  402335:	sbb    bh,0x76
  402338:	pop    eax
  402339:	pop    eax
  40233a:	adc    bl,BYTE PTR [edx]
  40233c:	add    bh,bh
  40233e:	mov    edi,0x92d0c4bd
  402343:	js     0x402371
  402345:	shl    DWORD PTR [edi+ebp*2],cl
  402348:	out    dx,al
  402349:	call   0xad3d272a
  40234e:	mov    ch,0xaf
  402350:	or     eax,0x2f8ec2bc
  402355:	and    BYTE PTR [eax+0x50f18516],bl
  40235b:	dec    ebx
  40235c:	fxch   st(4)
  40235e:	sub    al,0x4c
  402360:	cld    
  402361:	xchg   ecx,eax
  402362:	in     eax,0xcd
  402364:	in     eax,dx
  402365:	imul   ebp,eax,0x1fef7b8e
  40236b:	in     eax,0x1b
  40236d:	mov    esi,0x38ef1ca7
  402372:	das    
  402373:	lea    ebx,[ebp-0x55]
  402376:	gs test ch,ch
  402379:	neg    DWORD PTR [ebx]
  40237b:	outs   dx,DWORD PTR ds:[esi]
  40237c:	jge    0x40239a
  40237e:	pop    eax
  40237f:	cmp    bl,BYTE PTR [edi-0xc]
  402382:	pop    eax
  402383:	pushf  
  402384:	enter  0x7d25,0x7b
  402388:	aaa    
  402389:	mov    BYTE PTR [esi+0x68655537],cl
  40238f:	pop    ebx
  402390:	mov    dl,0x46
  402392:	popf   
  402393:	xchg   esp,eax
  402394:	(bad)  
  402395:	in     al,0xc7
  402397:	rol    BYTE PTR [edx+0x63],cl
  40239a:	sub    bh,BYTE PTR [edi+0x4d]
  40239d:	pop    ss
  40239e:	inc    esp
  40239f:	stos   BYTE PTR es:[edi],al
  4023a0:	pop    ds
  4023a1:	cmp    DWORD PTR [ebp+0x2c],ebx
  4023a4:	push   eax
  4023a5:	fisttp DWORD PTR [eax]
  4023a7:	mov    dl,BYTE PTR [ecx-0x68]
  4023aa:	mov    cl,0x7c
  4023ac:	es jbe 0x4023b9
  4023af:	xlat   BYTE PTR ds:[ebx]
  4023b0:	test   eax,0x46823b1b
  4023b5:	push   esi
  4023b6:	mov    eax,es
  4023b8:	aam    0xa5
  4023ba:	mov    ds:0xb0bd9697,eax
  4023bf:	dec    esi
  4023c0:	add    BYTE PTR [esi+ebx*2+0x2],dh
  4023c4:	pop    es
  4023c5:	pop    edi
  4023c6:	push   esp
  4023c7:	xchg   dl,dl
  4023c9:	cmp    bh,BYTE PTR [edi+0x7bc4fbb6]
  4023cf:	push   0xffffff9a
  4023d1:	lods   eax,DWORD PTR ds:[esi]
  4023d2:	leave  
  4023d3:	mov    ch,0x18
  4023d5:	jne    0x4023e2
  4023d7:	scas   eax,DWORD PTR es:[edi]
  4023d8:	(bad)
  4023db:	loopne 0x4023f2
  4023dd:	dec    eax
  4023de:	in     al,0x0
  4023e0:	push   edx
  4023e1:	das    
  4023e2:	nop
  4023e3:	imul   eax,DWORD PTR [edx-0x60e53553],0x1e382988
  4023ed:	mov    esi,0xdefe6940
  4023f2:	jle    0x40244e
  4023f4:	xchg   esi,eax
  4023f5:	popf   
  4023f6:	call   DWORD PTR [esi-0x2dd3bebf]
  4023fc:	ss dec esp
  4023fe:	mov    ebp,0x7edae2b9
  402403:	pop    esp
  402404:	jl     0x4023d5
  402406:	mov    dl,0xa4
  402408:	xchg   ecx,eax
  402409:	fstp   DWORD PTR [ecx+edx*8+0x265d9272]
  402410:	je     0x402441
  402412:	lock data16 icebp 
  402415:	mov    ds:0x27963774,al
  40241a:	and    edi,edx
  40241c:	inc    esp
  40241d:	push   ebp
  40241e:	ds pop es
  402420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402421:	lahf   
  402422:	jb     0x402446
  402424:	xchg   ebp,eax
  402425:	or     al,0xe0
  402427:	cs std 
  402429:	xor    BYTE PTR [ebx+0x35],al
  40242c:	mov    BYTE PTR [eax-0x14035a9f],bl
  402432:	dec    eax
  402433:	or     BYTE PTR [ebp+0x53],bh
  402436:	mov    edx,0xdbc11830
  40243b:	mov    dl,0x55
  40243d:	out    dx,eax
  40243e:	inc    esp
  40243f:	inc    esi
  402440:	retf   0xee
  402443:	jle    0x402472
  402445:	mov    esp,0x9602c08e
  40244a:	imul   ebp,DWORD PTR [esi],0x944a4cf
  402450:	inc    ebp
  402451:	pop    ebx
  402452:	jg     0x4024cf
  402454:	and    al,0x2e
  402456:	ja     0x4023ef
  402458:	(bad)  
  402459:	out    dx,al
  40245a:	and    eax,0x3938dfd2
  40245f:	xchg   edx,eax
  402460:	sub    edx,DWORD PTR [edx]
  402462:	in     eax,dx
  402463:	stos   DWORD PTR es:[edi],eax
  402464:	mov    al,ds:0x4e6bba15
  402469:	shl    ch,0xa5
  40246c:	ja     0x40240f
  40246e:	ret    
  40246f:	or     BYTE PTR [ebx-0x2f],cl
  402472:	fldcw  WORD PTR [eax]
  402474:	cmp    al,0xd3
  402476:	(bad)  
  402477:	adc    BYTE PTR [ebp-0x67],ch
  40247a:	in     eax,0x63
  40247c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40247d:	mov    ecx,0x7b39eb7b
  402482:	xchg   BYTE PTR [ecx-0x6336ff01],cl
  402488:	cld    
  402489:	adc    al,BYTE PTR [ebx]
  40248b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40248c:	push   0xb1d626ff
  402491:	in     eax,dx
  402492:	inc    edi
  402493:	mov    esp,0xe1bece09
  402498:	js     0x40246f
  40249a:	mov    WORD PTR [edi+0x66929c09],fs
  4024a0:	dec    ebx
  4024a1:	out    0x51,al
  4024a3:	xchg   BYTE PTR [ebx],dh
  4024a5:	cld    
  4024a6:	xor    DWORD PTR [ebp-0x50],0x4c07fabb
  4024ad:	xchg   esp,eax
  4024ae:	or     esp,DWORD PTR [edx]
  4024b0:	push   0x9e8a6a93
  4024b5:	retf   0x16ec
  4024b8:	(bad)  
  4024ba:	dec    ebp
  4024bb:	add    al,0x1b
  4024bd:	repz inc eax
  4024bf:	sbb    DWORD PTR [eax],eax
  4024c1:	hlt    
  4024c2:	inc    ecx
  4024c3:	ror    ah,cl
  4024c5:	(bad)  
  4024c7:	sbb    BYTE PTR [esi-0x2f],ch
  4024ca:	in     eax,0x2d
  4024cc:	test   eax,edx
  4024ce:	imul   edx,DWORD PTR [ebx-0x102341f6],0x16
  4024d5:	cmp    ecx,edi
  4024d7:	push   ds
  4024d8:	jnp    0x402554
  4024da:	jl     0x4024c2
  4024dc:	add    ebp,DWORD PTR [esi+0x268f9cb7]
  4024e2:	ficomp WORD PTR [ecx-0x566cbb9a]
  4024e8:	pushf  
  4024e9:	sub    ebx,DWORD PTR [edx]
  4024eb:	aaa    
  4024ec:	jns    0x402544
  4024ee:	sbb    al,0x97
  4024f0:	addr16 rcr al,cl
  4024f3:	in     eax,0xe5
  4024f5:	clc    
  4024f6:	inc    ecx
  4024f7:	ror    BYTE PTR [ecx-0x70ae51da],0x68
  4024fe:	rcl    BYTE PTR [edx],0x94
  402501:	or     BYTE PTR [eax-0x78502f2e],dh
  402507:	xchg   esp,eax
  402508:	add    al,dl
  40250a:	xor    ah,dh
  40250c:	shl    BYTE PTR [edx],0x2b
  40250f:	int3   
  402510:	jmp    0x6210:0x28e4cc1d
  402517:	cli    
  402518:	inc    edi
  402519:	xchg   DWORD PTR [edi-0x11],ecx
  40251c:	push   ebp
  40251d:	fisttp WORD PTR [ebx]
  40251f:	pusha  
  402520:	jns    0x40254b
  402522:	in     eax,0xb9
  402524:	jp     0x40255c
  402526:	in     eax,dx
  402527:	mov    al,ds:0xabc84008
  40252c:	stc    
  40252d:	mov    ah,0x55
  40252f:	jb     0x4024bb
  402531:	imul   DWORD PTR [esi]
  402533:	mov    ebp,0x254f643e
  402538:	stos   DWORD PTR es:[edi],eax
  402539:	jl     0x402540
  40253b:	pop    ebp
  40253c:	imul   ebp,DWORD PTR [ebx-0x5e],0x7643323b
  402543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402544:	in     eax,0x1d
  402546:	inc    eax
  402547:	push   es
  402548:	and    eax,0xcc16e8ce
  40254d:	jae    0x4025b3
  40254f:	icebp  
  402550:	ror    BYTE PTR [ecx+edx*2],1
  402553:	loope  0x40251d
  402555:	mov    edi,0xd18505a7
  40255a:	mov    esp,fs
  40255c:	inc    esi
  40255d:	cmp    dl,ah
  40255f:	mov    ecx,edi
  402561:	mov    bl,0x92
  402563:	cwde   
  402564:	dec    edx
  402565:	loope  0x4024ec
  402567:	push   edi
  402568:	nop
  402569:	aas    
  40256a:	fldenv [edx]
  40256c:	fdivr  DWORD PTR ss:[edi-0x57]
  402570:	xchg   edi,eax
  402571:	pop    ebx
  402572:	hlt    
  402573:	jae    0x4025c3
  402575:	ss push es
  402577:	mov    al,BYTE PTR [eax]
  402579:	les    esp,FWORD PTR ds:0xf7c13991
  40257f:	and    esp,DWORD PTR [edi]
  402581:	add    ebx,esp
  402583:	push   edx
  402584:	pop    esi
  402585:	fsubr  QWORD PTR [eax]
  402587:	mov    bl,0x58
  402589:	shr    DWORD PTR [esi-0x3e],0x30
  40258d:	xchg   edx,eax
  40258e:	pushf  
  40258f:	std    
  402590:	call   0x7fc5abb6
  402595:	outs   dx,DWORD PTR ds:[esi]
  402596:	jmp    0x4025b0
  402598:	sub    dl,BYTE PTR [esi-0x65ee9a34]
  40259e:	out    dx,eax
  40259f:	arpl   WORD PTR [ecx+edi*4+0x65],cx
  4025a3:	jmp    0xda39a29c
  4025a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025a9:	aaa    
  4025aa:	hlt    
  4025ab:	push   eax
  4025ac:	mov    esp,0xd542b8a6
  4025b1:	xor    BYTE PTR [edi],dh
  4025b3:	sub    BYTE PTR [ebx],0x77
  4025b6:	jb     0x402581
  4025b8:	jb     0x40253f
  4025ba:	stos   DWORD PTR es:[edi],eax
  4025bb:	adc    BYTE PTR [edi-0x74],dl
  4025be:	lods   al,BYTE PTR ds:[esi]
  4025bf:	and    eax,ebx
  4025c1:	cli    
  4025c2:	dec    esi
  4025c3:	fcom   QWORD PTR [ebx+eax*4-0x39]
  4025c7:	popa   
  4025c8:	inc    ebx
  4025c9:	fstp   DWORD PTR [edx]
  4025cb:	retf   0x812
  4025ce:	jns    0x402560
  4025d0:	jb     0x402570
  4025d2:	xor    al,0x14
  4025d4:	dec    ebp
  4025d5:	inc    ecx
  4025d6:	(bad)
  4025da:	sub    al,0x11
  4025dc:	daa    
  4025dd:	jnp    0x402632
  4025df:	sub    bl,ch
  4025e1:	stos   DWORD PTR es:[edi],eax
  4025e2:	or     eax,0x9bcaf0e8
  4025e7:	call   0xc6325b26
  4025ec:	lock or dh,ah
  4025ef:	loop   0x402637
  4025f1:	push   ss
  4025f2:	adc    esp,DWORD PTR [edi]
  4025f4:	(bad)  
  4025f5:	not    eax
  4025f7:	fimul  WORD PTR ds:0x5b9a2e41
  4025fd:	fld    QWORD PTR [edi+0x6000efd7]
  402603:	and    eax,0x23628e89
  402608:	repnz and bl,BYTE PTR [ebp-0x2d]
  40260c:	inc    esp
  40260d:	(bad)  
  40260e:	sbb    eax,0x6390f8d6
  402613:	retf   
  402614:	addr16 (bad) 
  402616:	jmp    0x4d33eb44
  40261b:	outs   dx,DWORD PTR ds:[esi]
  40261c:	cdq    
  40261d:	lds    sp,DWORD PTR [ebx]
  402620:	or     bl,bl
  402622:	pop    ebp
  402623:	and    ebx,DWORD PTR [edx+0x3d]
  402626:	mov    edi,0x66f0031
  40262b:	mov    esp,0x4d6d2cd8
  402630:	sbb    DWORD PTR [esi+ebx*1],0xdb168bbd
  402637:	jae    0x402636
  402639:	les    edx,FWORD PTR [edx+0x75]
  40263c:	sub    ecx,0x31602df4
  402642:	outs   dx,DWORD PTR ds:[esi]
  402643:	test   edi,ecx
  402645:	xor    BYTE PTR [eax-0x147b4486],ch
  40264b:	and    ebx,DWORD PTR [esi-0x41]
  40264e:	pop    edx
  40264f:	jnp    0x4025d9
  402651:	xchg   edi,eax
  402652:	int3   
  402653:	neg    DWORD PTR [ecx-0x1c]
  402656:	out    dx,al
  402657:	add    cl,BYTE PTR [eax]
  402659:	stos   DWORD PTR es:[edi],eax
  40265a:	sub    ecx,DWORD PTR [eax]
  40265c:	sub    al,0x5f
  40265e:	inc    esi
  40265f:	fldcw  WORD PTR [ebx]
  402661:	and    bh,BYTE PTR [edi+ebx*1+0x68]
  402665:	dec    ebp
  402666:	cmp    BYTE PTR [eax+0x55],al
  402669:	or     eax,DWORD PTR ds:0xe2e9897e
  40266f:	sbb    eax,0x5baf8557
  402674:	loop   0x4026ca
  402676:	mov    edi,DWORD PTR [ebp-0x21]
  402679:	ret    
  40267a:	clc    
  40267b:	imul   esp,DWORD PTR [ebp+0x5ee82d06],0x413ebd92
  402685:	(bad)  
  402686:	and    DWORD PTR [eax+0x3e],ecx
  402689:	jno    0x402655
  40268b:	out    dx,al
  40268c:	icebp  
  40268d:	xor    al,0x49
  40268f:	cmc    
  402690:	call   0x4712b514
  402695:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402696:	cli    
  402697:	imul   edx,DWORD PTR [edi-0x70b455d3],0x3b
  40269e:	fisttp QWORD PTR [ebx+esi*8]
  4026a1:	mov    ebp,0x31f06876
  4026a6:	inc    esp
  4026a7:	ins    BYTE PTR es:[edi],dx
  4026a8:	mov    bl,0x5b
  4026aa:	xchg   ecx,eax
  4026ab:	sub    eax,esp
  4026ad:	clc    
  4026ae:	and    dl,BYTE PTR [eax-0x4db005f2]
  4026b4:	aaa    
  4026b5:	outs   dx,DWORD PTR ds:[esi]
  4026b6:	pop    ds
  4026b7:	ret    
  4026b8:	mov    edx,0x7c27fecc
  4026bd:	ror    BYTE PTR [esi-0x46ec0bc1],0x84
  4026c4:	sub    BYTE PTR [edi-0x44],0xa
  4026c8:	lahf   
  4026c9:	mov    bh,0x83
  4026cb:	ficom  DWORD PTR [ebp-0x127e55c6]
  4026d1:	(bad)  
  4026d2:	push   ebp
  4026d3:	adc    ecx,DWORD PTR [ebp+eiz*4+0xc]
  4026d7:	repz jo 0x402756
  4026da:	xchg   ecx,eax
  4026db:	pop    esi
  4026dc:	push   cs
  4026dd:	xlat   BYTE PTR ds:[ebx]
  4026de:	push   edi
  4026df:	fistp  QWORD PTR [eax-0x58]
  4026e2:	jp     0x4026f8
  4026e4:	fistp  DWORD PTR [ecx]
  4026e6:	mov    dh,0xb3
  4026e8:	shl    DWORD PTR [ecx-0x34],0xfe
  4026ec:	mov    ebx,edi
  4026ee:	push   ds
  4026ef:	inc    ebp
  4026f0:	adc    al,0x64
  4026f2:	jns    0x402720
  4026f4:	and    bh,bh
  4026f6:	jmp    0x8aa36e9c
  4026fb:	sub    cl,BYTE PTR [edx+esi*4-0x15]
  4026ff:	imul   esp,DWORD PTR [edi-0x51],0xffffffd4
  402703:	gs mov esi,eax
  402706:	xchg   ebx,eax
  402707:	sub    esi,DWORD PTR [ecx+0x301d7390]
  40270d:	mov    eax,0x225fcd04
  402712:	in     al,0xd5
  402714:	push   ss
  402715:	imul   edx,DWORD PTR [ecx+0x2e],0xaceea2c1
  40271c:	outs   dx,BYTE PTR ds:[esi]
  40271d:	pop    ebp
  40271e:	sar    DWORD PTR [ecx+0x3203af2b],0xe
  402725:	push   cs
  402726:	fsub   QWORD PTR [esi]
  402728:	lea    ebx,ds:0x58f5f53b
  40272e:	out    0x34,eax
  402730:	inc    BYTE PTR [edi-0x44]
  402733:	jmp    0x678e:0x7936c387
  40273a:	inc    edx
  40273b:	out    dx,eax
  40273c:	aas    
  40273d:	mov    edx,0x899e80d7
  402742:	lds    ebx,FWORD PTR [ebp+0x6b59bc1e]
  402748:	push   eax
  402749:	mov    bh,0x3d
  40274b:	cmp    al,0x18
  40274d:	(bad)  
  40274e:	sbb    eax,0x744c3a8c
  402753:	add    BYTE PTR ss:[ebx+0x7ca5661],ah
  40275a:	jb     0x402700
  40275c:	and    al,0xe3
  40275e:	or     al,0xc9
  402760:	stos   DWORD PTR es:[edi],eax
  402761:	mov    edx,0x3de5daf1
  402766:	push   edx
  402767:	mov    esp,0x8cfceca7
  40276c:	hlt    
  40276d:	outs   dx,DWORD PTR ds:[esi]
  40276e:	out    dx,eax
  40276f:	inc    esp
  402770:	xor    DWORD PTR [ecx],edi
  402772:	into   
  402773:	mov    DWORD PTR [ebx],edi
  402775:	lea    esi,[ebx-0x7c]
  402778:	pop    eax
  402779:	push   cs
  40277a:	push   ebx
  40277b:	sbb    eax,0x4d86160c
  402780:	pop    esp
  402781:	jb     0x402792
  402783:	mov    al,0xef
  402785:	cs jl  0x402785
  402788:	mov    cl,0xde
  40278a:	mov    ebx,0xedf98e46
  40278f:	test   BYTE PTR [ecx],cl
  402791:	ds in  al,0xbf
  402794:	imul   esp,DWORD PTR [ecx+0x28d67614],0x1d
  40279b:	aam    0x43
  40279d:	rol    BYTE PTR [edi],cl
  40279f:	and    esi,DWORD PTR [edi-0x5eaf1545]
  4027a5:	mov    al,0xcf
  4027a7:	xchg   edx,eax
  4027a8:	xchg   edi,eax
  4027a9:	push   edx
  4027aa:	not    ch
  4027ac:	jne    0x4027d2
  4027ae:	add    esp,DWORD PTR [esi]
  4027b0:	ret    
  4027b1:	mov    dl,BYTE PTR [edx]
  4027b3:	pop    es
  4027b4:	aam    0x9e
  4027b6:	outs   dx,DWORD PTR ds:[esi]
  4027b7:	xchg   BYTE PTR [esi],dh
  4027b9:	xlat   BYTE PTR ds:[ebx]
  4027ba:	sbb    ebp,edx
  4027bc:	test   BYTE PTR [ebp+0x26],0xb8
  4027c0:	sbb    DWORD PTR [ebp+0x3b557f21],esp
  4027c6:	xor    ch,ah
  4027c8:	mov    ebp,0xa2a41148
  4027cd:	jmp    DWORD PTR [edx+ebp*1-0x7f]
  4027d1:	adc    al,0x7e
  4027d3:	xor    eax,0xeb89d019
  4027d8:	mov    ebx,0xd67d7492
  4027dd:	popf   
  4027de:	mov    edx,0x9d128106
  4027e3:	ds mov ecx,0x5c6f523d
  4027e9:	in     al,dx
  4027ea:	xchg   ecx,eax
  4027eb:	clc    
  4027ec:	cmp    BYTE PTR [ecx+0x19],dh
  4027ef:	enter  0x269d,0x94
  4027f3:	xor    BYTE PTR [esp+edx*1],bl
  4027f6:	adc    ecx,DWORD PTR [edx+ebp*8+0x6bc146b5]
  4027fd:	pop    es
  4027fe:	scas   al,BYTE PTR es:[edi]
  4027ff:	mov    eax,ds:0x6eb68a93
  402804:	or     eax,0xe8e7279
  402809:	xchg   DWORD PTR [edx+edi*1-0x4b],esi
  40280d:	(bad)  
  40280e:	dec    ebx
  40280f:	repnz ror BYTE PTR [ecx-0x1d],1
  402813:	add    al,0x5b
  402815:	push   ecx
  402816:	cmp    bh,bl
  402818:	sahf   
  402819:	lods   eax,DWORD PTR ds:[esi]
  40281a:	sti    
  40281b:	inc    ebp
  40281c:	mov    bh,0xdc
  40281e:	fmul   DWORD PTR [edi-0x51]
  402821:	sub    DWORD PTR [ebx+edx*2-0x2dea0956],esp
  402828:	sub    al,0xe2
  40282a:	push   0x509f6f5a
  40282f:	in     al,0x7a
  402831:	pop    ebp
  402832:	stos   DWORD PTR es:[edi],eax
  402833:	pop    ebp
  402834:	popa   
  402835:	sbb    ecx,esi
  402837:	hlt    
  402838:	shl    BYTE PTR [ebp+0x404f792b],1
  40283e:	scas   al,BYTE PTR es:[edi]
  40283f:	push   edi
  402840:	push   es
  402841:	mov    ?,ecx
  402843:	sub    bh,BYTE PTR [edi-0x11]
  402846:	jno    0x40287b
  402848:	int3   
  402849:	mov    bh,0x30
  40284b:	lods   eax,DWORD PTR ds:[esi]
  40284c:	in     al,dx
  40284d:	loopne 0x402820
  40284f:	mov    dh,0x45
  402851:	ins    DWORD PTR es:[edi],dx
  402852:	(bad)  
  402853:	gs and al,bl
  402856:	mov    esi,DWORD PTR [ebp+0x7485a4ed]
  40285c:	or     ah,BYTE PTR [esp]
  40285f:	ja     0x4027f2
  402861:	aam    0x1e
  402863:	mov    bh,0x8f
  402865:	xchg   edi,eax
  402866:	clc    
  402867:	mov    dh,0x69
  402869:	ds jae 0x40281b
  40286c:	mov    BYTE PTR [edi],0xf3
  40286f:	or     ebp,DWORD PTR [esi+0x59]
  402872:	out    0xfd,al
  402874:	bound  edx,QWORD PTR [edi]
  402876:	jno    0x402825
  402878:	xchg   edi,eax
  402879:	xor    ebx,ebp
  40287b:	mov    eax,ds:0xce5e5619
  402880:	jne    0x40282e
  402882:	push   0xffffffa5
  402884:	mov    edi,0xf9c009e1
  402889:	jmp    0x4028b9
  40288b:	pop    edi
  40288c:	out    0xcb,al
  40288e:	dec    edi
  40288f:	and    DWORD PTR [ebp+0x79],edx
  402892:	sbb    bh,BYTE PTR [ebx]
  402894:	push   0xd
  402896:	das    
  402897:	add    ah,ah
  402899:	retf   0x5a01
  40289c:	sub    dh,al
  40289e:	aad    0x2e
  4028a0:	jg     0x402900
  4028a2:	or     edx,DWORD PTR [ecx+0x2ffdce6d]
  4028a8:	add    BYTE PTR [ebx],bh
  4028aa:	push   esi
  4028ab:	add    eax,0xfb64ab12
  4028b0:	mov    bl,0x67
  4028b2:	jge    0x402837
  4028b4:	xchg   ebx,edi
  4028b6:	icebp  
  4028b7:	ret    
  4028b8:	and    cl,BYTE PTR [edx]
  4028ba:	(bad)  
  4028bb:	jns    0x4028dd
  4028bd:	(bad)
  4028c0:	pop    edi
  4028c1:	xchg   edi,eax
  4028c2:	stos   DWORD PTR es:[edi],eax
  4028c3:	shl    bh,0x18
  4028c6:	sub    cl,BYTE PTR [edx-0x2257e99a]
  4028cc:	xchg   edx,eax
  4028cd:	inc    eax
  4028ce:	adc    al,0x79
  4028d0:	pop    esp
  4028d1:	in     al,dx
  4028d2:	inc    esp
  4028d3:	xor    BYTE PTR [edi-0x68b3a724],ch
  4028d9:	adc    ebp,DWORD PTR [edi]
  4028db:	outs   dx,BYTE PTR ds:[esi]
  4028dc:	cmp    eax,0x9d06a40d
  4028e1:	lods   al,BYTE PTR ds:[esi]
  4028e2:	jecxz  0x402955
  4028e4:	mov    ecx,0x5483bd22
  4028e9:	dec    esi
  4028ea:	sahf   
  4028eb:	pop    edi
  4028ec:	and    eax,esp
  4028ee:	(bad)  
  4028ef:	fcmove st,st(5)
  4028f1:	add    BYTE PTR [ecx-0x23],bh
  4028f4:	iret   
  4028f5:	mov    esp,0x8569261d
  4028fa:	sub    edi,DWORD PTR [ebp+0x16f23995]
  402900:	dec    edi
  402901:	stc    
  402902:	adc    al,dh
  402904:	sub    ebx,DWORD PTR [eax-0x58]
  402907:	xchg   ebp,eax
  402908:	test   DWORD PTR [ecx+0x21],ebp
  40290b:	xchg   DWORD PTR [ecx+0x6b4dc00],esi
  402911:	pop    edx
  402912:	mov    ebx,esp
  402914:	mov    esp,0x65bbb3ad
  402919:	push   ecx
  40291a:	ret    
  40291b:	test   eax,0xde5fe772
  402920:	repnz cmp DWORD PTR [eax+0x7b],0x1b
  402925:	repnz shr DWORD PTR [edi-0xa3817b7],1
  40292c:	cdq    
  40292d:	and    BYTE PTR ds:0x761c94f9,al
  402933:	in     eax,0x14
  402935:	call   0x7cc5:0xb3bb7966
  40293c:	cmc    
  40293d:	jg     0x402994
  40293f:	xchg   BYTE PTR [edx+0x7b33324],ah
  402945:	in     al,0x71
  402947:	or     esi,DWORD PTR [edi-0x2a8ff074]
  40294d:	mov    edx,0xf35717c8
  402952:	cmp    esp,edx
  402954:	bound  ecx,QWORD PTR [esi-0x7d7f4537]
  40295a:	mov    esi,0x75aee1af
  40295f:	(bad)  
  402960:	gs (bad) 
  402962:	fdiv   st,st(5)
  402964:	inc    ecx
  402965:	pop    esp
  402966:	sub    al,0xac
  402968:	es pop edi
  40296a:	inc    BYTE PTR [ebx]
  40296c:	push   0x2f827d23
  402971:	(bad)  
  402972:	leave  
  402973:	jmp    0x40293e
  402975:	into   
  402976:	(bad)  
  402977:	xor    BYTE PTR [ecx],ch
  402979:	xor    bl,BYTE PTR [eax+0x38]
  40297c:	adc    dl,0xd6
  40297f:	sub    DWORD PTR [esi],esi
  402981:	sub    al,0x8f
  402983:	jne    0x4029b9
  402985:	jb     0x4029c7
  402987:	call   0x3677:0xc645597d
  40298e:	add    DWORD PTR [ebp-0x57],0xffffffe2
  402992:	int    0x62
  402994:	xor    BYTE PTR [eax+esi*4+0x6ca6ff9c],dh
  40299b:	pop    ds
  40299c:	test   al,0x30
  40299e:	(bad)  
  40299f:	push   ebp
  4029a0:	push   edi
  4029a1:	xor    dh,BYTE PTR [edi]
  4029a3:	add    cl,BYTE PTR [edi+0x4262fc0a]
  4029a9:	add    DWORD PTR ds:0x1f5bbc10,0xb7153643
  4029b3:	inc    edi
  4029b4:	mov    dl,0xa
  4029b6:	popa   
  4029b7:	or     BYTE PTR [edi-0x49],dl
  4029ba:	pop    dx
  4029bc:	jae    0x402a19
  4029be:	and    bl,BYTE PTR [esi]
  4029c0:	mov    edx,0xe15dd5f8
  4029c5:	dec    ecx
  4029c6:	push   0xb35c7fe8
  4029cb:	mov    al,0xb7
  4029cd:	sub    esi,DWORD PTR [edx]
  4029cf:	inc    BYTE PTR [edi+0x1e05714b]
  4029d5:	test   eax,0x4fd5273e
  4029da:	ds push esi
  4029dc:	fld    TBYTE PTR ds:0x5228fa16
  4029e2:	ficomp DWORD PTR [ecx]
  4029e4:	add    al,0x63
  4029e6:	pop    edi
  4029e7:	cmp    al,0x76
  4029e9:	js     0x402a5a
  4029eb:	fidiv  DWORD PTR [ecx-0x35]
  4029ee:	pop    esp
  4029ef:	xchg   ebx,eax
  4029f0:	jbe    0x4029f0
  4029f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029f3:	adc    eax,0x9f7a944f
  4029f8:	xchg   al,ch
  4029fa:	retf   
  4029fb:	add    BYTE PTR [ecx],dl
  4029fd:	cdq    
  4029fe:	into   
  4029ff:	js     0x4029f2
  402a01:	in     al,dx
  402a02:	mov    ecx,0x878e1f7f
  402a07:	xchg   dh,ch
  402a09:	sbb    BYTE PTR [esi+0x27],cl
  402a0c:	xchg   edi,eax
  402a0d:	(bad)  
  402a0f:	jb     0x4029b8
  402a11:	test   DWORD PTR [ecx-0xd],edi
  402a14:	adc    eax,0x589a36f
  402a19:	nop
  402a1a:	mov    WORD PTR [edi*4+0x48e0017f],cs
  402a21:	int3   
  402a22:	out    dx,al
  402a23:	test   BYTE PTR [edi],bl
  402a25:	repz sti 
  402a27:	pusha  
  402a28:	fdivr  QWORD PTR [ebx+0x40]
  402a2b:	aad    0xc2
  402a2d:	out    dx,al
  402a2e:	push   ebp
  402a2f:	aaa    
  402a30:	and    edx,DWORD PTR [esi-0x47]
  402a33:	fwait
  402a34:	neg    BYTE PTR [ebp-0x25]
  402a37:	fnstsw WORD PTR [ecx+0xddd4797]
  402a3d:	and    al,0x62
  402a3f:	stos   BYTE PTR es:[edi],al
  402a40:	ret    0x4c4
  402a43:	cmp    ah,BYTE PTR [edx+0x63]
  402a46:	add    eax,0xf262830c
  402a4b:	mov    al,ds:0x34cb541a
  402a50:	pushf  
  402a51:	shr    cl,cl
  402a53:	adc    ah,BYTE PTR [edi+edx*4]
  402a56:	arpl   WORD PTR [esi+0x19],cx
  402a59:	jns    0x402a89
  402a5b:	out    0xcd,eax
  402a5d:	pop    ecx
  402a5e:	repnz xchg ebp,eax
  402a60:	cld    
  402a61:	xchg   esp,eax
  402a62:	push   ss
  402a63:	aas    
  402a64:	inc    esp
  402a65:	clc    
  402a66:	push   edx
  402a67:	add    eax,0xa64807f0
  402a6c:	pop    ss
  402a6d:	into   
  402a6e:	pop    ds
  402a6f:	inc    ecx
  402a70:	(bad)  
  402a71:	retf   
  402a72:	retf   
  402a73:	aad    0x8e
  402a75:	hlt    
  402a76:	out    dx,eax
  402a77:	sub    dh,BYTE PTR [ebp+0x44]
  402a7a:	fxch   st(5)
  402a7c:	arpl   cx,dx
  402a7e:	mov    ?,WORD PTR [eax+ecx*4-0x52]
  402a82:	inc    ebx
  402a83:	lods   al,BYTE PTR ds:[esi]
  402a84:	popa   
  402a85:	push   DWORD PTR [eax-0x5eccf8ec]
  402a8b:	popf   
  402a8c:	rcl    DWORD PTR [ebp-0x3db445cc],0x69
  402a93:	call   0x3f78:0xdded3b3c
  402a9a:	loopne 0x402ae0
  402a9c:	xchg   esi,eax
  402a9d:	ins    DWORD PTR es:[edi],dx
  402a9e:	jmp    0xe5fd:0x862f0976
  402aa5:	or     edx,DWORD PTR [ebx+0x5a]
  402aa8:	call   0xb4e5:0xc97049f2
  402aaf:	ins    BYTE PTR es:[edi],dx
  402ab0:	dec    ebp
  402ab1:	int3   
  402ab2:	(bad)  
  402ab3:	popa   
  402ab4:	dec    edx
  402ab5:	retf   0x75c2
  402ab8:	lock xchg BYTE PTR [esi-0x2a3db4d1],ch
  402abf:	cmp    bh,BYTE PTR [edi]
  402ac1:	inc    esp
  402ac2:	xor    eax,0xc8c9348b
  402ac7:	aaa    
  402ac8:	pop    eax
  402ac9:	jns    0x402aee
  402acb:	inc    edx
  402acc:	sti    
  402acd:	and    bl,al
  402acf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ad0:	xchg   ebp,eax
  402ad1:	call   0xe2e4226c
  402ad6:	adc    al,dh
  402ad8:	call   0x472c:0x987c01af
  402adf:	mov    bh,0x9a
  402ae1:	outs   dx,BYTE PTR ds:[esi]
  402ae2:	loope  0x402aff
  402ae4:	(bad)
  402ae7:	out    0x63,eax
  402ae9:	jg     0x402afd
  402aeb:	add    ebx,DWORD PTR [eax]
  402aed:	(bad)  
  402aee:	hlt    
  402aef:	xor    DWORD PTR [edx+0xe],esp
  402af2:	scas   eax,DWORD PTR es:[edi]
  402af3:	pop    esp
  402af4:	fist   DWORD PTR [ebx+0x42]
  402af7:	loope  0x402aa1
  402af9:	(bad)  
  402afa:	stc    
  402afb:	shl    BYTE PTR [ebx],cl
  402afd:	or     edi,DWORD PTR [eax+0x13b32df6]
  402b03:	scas   eax,DWORD PTR es:[edi]
  402b04:	nop
  402b05:	loopne 0x402b37
  402b07:	sub    eax,0x4e0a4e7c
  402b0c:	push   ss
  402b0d:	(bad)  [ebx+eiz*1+0x633e296b]
  402b14:	icebp  
  402b15:	mov    BYTE PTR [edx+0x6d],bl
  402b18:	jnp    0x402b18
  402b1a:	shl    DWORD PTR [esi-0x541c2af4],0x5c
  402b21:	shl    DWORD PTR [ebx-0x2f7a309a],cl
  402b27:	push   0xf212903
  402b2c:	xchg   ebp,eax
  402b2d:	or     BYTE PTR [edx+0x2b],dl
  402b30:	dec    ebx
  402b31:	test   eax,0x27a54591
  402b36:	push   0x56efa777
  402b3b:	fwait
  402b3c:	clc    
  402b3d:	jmp    0x51d0:0x2d820854
  402b44:	mov    esp,0xfba7131c
  402b49:	or     cl,BYTE PTR [ebp+0x549a12d0]
  402b4f:	and    BYTE PTR ds:0x7054463b,0xfc
  402b56:	in     al,dx
  402b57:	mov    ebx,0x7f7d3a38
  402b5c:	test   eax,0x292bcee7
  402b61:	inc    edx
  402b62:	cdq    
  402b63:	mov    bl,0xf1
  402b65:	add    ecx,DWORD PTR [ebp-0x14c99b39]
  402b6b:	fdivr  st,st(2)
  402b6d:	mov    al,0x8b
  402b6f:	adc    eax,0xc13b2513
  402b74:	repnz ins DWORD PTR es:[edi],dx
  402b76:	adc    DWORD PTR [edi],edi
  402b78:	enter  0x9891,0x80
  402b7c:	mov    es,WORD PTR [ecx]
  402b7e:	shl    BYTE PTR [edi],1
  402b80:	mov    ch,0xaa
  402b82:	fadd   st,st(7)
  402b84:	sbb    dl,BYTE PTR [ebx]
  402b86:	or     DWORD PTR [edx-0x6a904cfa],0x3646989f
  402b90:	test   DWORD PTR [edx-0x23],ebx
  402b93:	or     ch,dl
  402b95:	push   eax
  402b96:	dec    ebp
  402b97:	jmp    0xedbf01a0
  402b9c:	(bad)  
  402b9d:	jo     0x402bd4
  402b9f:	in     eax,0x3b
  402ba1:	inc    ebp
  402ba2:	inc    ebp
  402ba3:	jl     0x402b81
  402ba5:	mov    ch,0xbf
  402ba7:	mov    ebp,0x5daadbc7
  402bac:	push   ecx
  402bad:	aam    0xba
  402baf:	fimul  DWORD PTR gs:[edx+edx*8-0x48e826e6]
  402bb7:	xor    eax,0xbbd2e53b
  402bbc:	or     dl,BYTE PTR [ecx]
  402bbe:	pop    ss
  402bbf:	xor    BYTE PTR [eax-0x56],0x42
  402bc3:	xchg   BYTE PTR [ecx],dh
  402bc5:	lods   eax,DWORD PTR ds:[esi]
  402bc6:	add    al,0x9c
  402bc8:	lods   eax,DWORD PTR ds:[esi]
  402bc9:	mov    ebx,0x775f6864
  402bce:	ins    DWORD PTR es:[edi],dx
  402bcf:	nop
  402bd0:	adc    eax,0xb4628111
  402bd5:	push   ebx
  402bd6:	pop    ebp
  402bd7:	daa    
  402bd8:	out    dx,eax
  402bd9:	mov    edx,0x51627aa5
  402bde:	mov    esp,0x2d6aa19
  402be3:	and    DWORD PTR [esp+ebx*2],eax
  402be6:	call   0xee32e9b5
  402beb:	repnz mul BYTE PTR ss:[esp+esi*4+0x5b]
  402bf1:	sub    bl,BYTE PTR [ebp+0x612187ed]
  402bf7:	xchg   DWORD PTR [ebx],ecx
  402bf9:	push   ecx
  402bfa:	loope  0x402b86
  402bfc:	sub    BYTE PTR [esi+0x0],dl
  402bff:	mov    ecx,gs
  402c01:	cs push ebp
  402c03:	jae    0x402b87
  402c05:	cmp    eax,0x760ac7c9
  402c0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c0b:	sub    BYTE PTR [edx+0x49f39759],dh
  402c11:	data16 mov ds,WORD PTR fs:[ecx-0x55]
  402c16:	mov    dh,0xa3
  402c18:	imul   ecx,DWORD PTR [edx+0x77],0xc8376f43
  402c1f:	cmp    ch,al
  402c21:	push   ecx
  402c22:	jmp    0x402ca1
  402c24:	dec    ebx
  402c25:	xor    DWORD PTR [ebp+0x22],ebx
  402c28:	sbb    eax,0x7a11731a
  402c2d:	pusha  
  402c2e:	jle    0x402c23
  402c30:	pop    esi
  402c31:	xor    al,0x4a
  402c33:	js     0x402cb4
  402c35:	(bad)  [edx]
  402c37:	dec    ecx
  402c38:	lock pop edi
  402c3a:	jo     0x402c6c
  402c3c:	or     DWORD PTR [esi+ecx*1-0x18],ebx
  402c40:	retf   0x7a3a
  402c43:	cmp    BYTE PTR [edx],bh
  402c45:	jmp    0x80222319
  402c4a:	adc    dl,BYTE PTR [eax+0x20]
  402c4d:	mov    ds:0xb95a4de6,eax
  402c52:	jnp    0x402c07
  402c54:	retf   0x8e83
  402c57:	mov    ebx,0xfd5e8db1
  402c5c:	(bad)  
  402c5d:	sbb    ah,al
  402c5f:	xchg   edx,eax
  402c60:	outs   dx,DWORD PTR ds:[esi]
  402c61:	pop    esp
  402c62:	ss jno 0x402cce
  402c65:	aad    0x11
  402c67:	in     al,0xe7
  402c69:	cmp    al,0xca
  402c6b:	mov    edi,0xaae2dcbb
  402c70:	cmp    DWORD PTR [edi-0x5019229d],esi
  402c76:	ins    BYTE PTR es:[edi],dx
  402c77:	pop    ds
  402c78:	mov    ecx,0x8a2964c0
  402c7d:	call   0x5f7fdd18
  402c82:	sub    BYTE PTR [edi],0x4f
  402c85:	test   BYTE PTR ds:0x51a31cc,0x85
  402c8c:	mov    esi,0x6a762e4c
  402c91:	or     DWORD PTR [edi],edi
  402c93:	outs   dx,DWORD PTR ds:[esi]
  402c94:	mov    ss,WORD PTR [edx]
  402c96:	cld    
  402c97:	xor    BYTE PTR [eax],bl
  402c99:	and    BYTE PTR es:[eax],0xf5
  402c9d:	pop    edx
  402c9e:	add    al,0x1f
  402ca0:	imul   esi,eax,0xffffff85
  402ca3:	stc    
  402ca4:	out    0xa2,al
  402ca6:	jg     0x402cdc
  402ca8:	xor    dl,BYTE PTR [ecx+eax*2+0x3a]
  402cac:	lea    edx,[ecx-0x10]
  402caf:	push   ebp
  402cb0:	pop    esp
  402cb1:	or     ah,bh
  402cb3:	inc    edx
  402cb4:	jmp    0x1f43:0xab099547
  402cbb:	pop    ds
  402cbc:	stc    
  402cbd:	pop    es
  402cbe:	fcomp  DWORD PTR [edi+0x203c97be]
  402cc4:	xchg   edx,eax
  402cc5:	dec    edi
  402cc6:	stos   BYTE PTR es:[edi],al
  402cc7:	pop    es
  402cc8:	push   edi
  402cc9:	idiv   BYTE PTR [ebp-0x33b2a697]
  402ccf:	(bad)  
  402cd0:	dec    esp
  402cd1:	mov    esi,DWORD PTR [ebp+0x22a5093f]
  402cd7:	cld    
  402cd8:	out    0x6e,al
  402cda:	cmp    al,0x2b
  402cdc:	cmp    esi,edx
  402cde:	in     eax,dx
  402cdf:	js     0x402ce4
  402ce1:	push   esp
  402ce2:	cmp    eax,0x93b122d8
  402ce7:	adc    BYTE PTR [esi+eax*1],bl
  402cea:	or     DWORD PTR [ecx],esi
  402cec:	jle    0x402cd3
  402cee:	jmp    0x3c7a:0xbf734570
  402cf5:	out    0x78,eax
  402cf7:	adc    BYTE PTR [ebx-0x5d104ffb],ch
  402cfd:	idiv   ebp
  402cff:	retf   
  402d00:	mov    eax,ds:0xa6304258
  402d05:	cdq    
  402d06:	js     0x402d0f
  402d08:	pop    es
  402d09:	ret    0xd1b0
  402d0c:	or     dl,BYTE PTR [ebx+0x3c02aee9]
  402d12:	xor    al,0x1a
  402d14:	adc    eax,0xdfb24f2e
  402d19:	mov    dl,0xd6
  402d1b:	int    0x77
  402d1d:	les    ebx,FWORD PTR [eax]
  402d1f:	add    DWORD PTR ds:[eax-0x286b81be],edi
  402d26:	mov    ch,0xc1
  402d28:	push   0xb80d3631
  402d2d:	in     eax,0x34
  402d2f:	push   0x40
  402d31:	jne    0x402d54
  402d33:	cdq    
  402d34:	pusha  
  402d35:	jl     0x402cf7
  402d37:	aad    0x0
  402d39:	bound  ebx,QWORD PTR [edx+0x28]
  402d3c:	shl    DWORD PTR [esi+0x771e4970],cl
  402d42:	xor    al,0xf4
  402d44:	adc    BYTE PTR [ebx-0x1777f01f],ah
  402d4a:	mov    ebp,0x5cac44b5
  402d4f:	(bad)  
  402d50:	aam    0x48
  402d52:	ret    0x2943
  402d55:	dec    ecx
  402d56:	cld    
  402d57:	popa   
  402d58:	jns    0x402d0d
  402d5a:	adc    DWORD PTR [eax-0xc4d7b5e],esp
  402d60:	xor    BYTE PTR [ebx],ch
  402d62:	and    ch,BYTE PTR [ecx+esi*1-0x3]
  402d66:	pop    ds
  402d67:	dec    ebp
  402d68:	dec    ecx
  402d69:	jp     0x402d31
  402d6b:	mov    eax,0xc7d95b69
  402d70:	sbb    eax,eax
  402d72:	daa    
  402d73:	push   0x1
  402d75:	mov    ecx,0x67f0d980
  402d7a:	inc    esi
  402d7b:	adc    ah,BYTE PTR [ecx+0x6d]
  402d7e:	leave  
  402d7f:	mov    BYTE PTR [edx],dl
  402d81:	sub    al,0x45
  402d83:	mov    esi,0xeed81f4f
  402d88:	fsqrt  
  402d8a:	add    cl,dh
  402d8c:	sub    BYTE PTR [eax+0x3c],dl
  402d8f:	das    
  402d90:	mov    al,0x27
  402d92:	fisubr WORD PTR [eax+0x15c89fc5]
  402d98:	in     al,0xa9
  402d9a:	jmp    0x402d77
  402d9c:	and    ecx,edi
  402d9e:	push   ds
  402d9f:	xchg   ebp,eax
  402da0:	pop    es
  402da1:	mov    WORD PTR [ebp+ecx*4-0x27503e58],fs
  402da8:	lahf   
  402da9:	fadd   DWORD PTR [edi-0x62e98d92]
  402daf:	sbb    DWORD PTR [ecx+0x51],ecx
  402db2:	dec    ecx
  402db3:	pop    edx
  402db4:	push   edx
  402db5:	pusha  
  402db6:	fidiv  DWORD PTR [esi+0x7ef605c1]
  402dbc:	aaa    
  402dbd:	ret    0x20e2
  402dc0:	repz xchg ebx,eax
  402dc2:	mov    ss,WORD PTR [esi]
  402dc4:	stos   DWORD PTR es:[edi],eax
  402dc5:	dec    ecx
  402dc6:	cmc    
  402dc7:	jae    0x402e0f
  402dc9:	mov    BYTE PTR [esi],bh
  402dcb:	imul   ebp,DWORD PTR [ecx+0x5e],0x31e863c0
  402dd2:	retf   
  402dd3:	imul   edi,DWORD PTR [edi-0x2f],0xffffffdb
  402dd7:	ss pushw ss
  402dda:	test   eax,0xab9c98b7
  402ddf:	cmp    eax,0xee81af35
  402de4:	and    ah,bl
  402de6:	add    al,0x4
  402de8:	and    ah,dh
  402dea:	inc    ebp
  402deb:	and    al,0x48
  402ded:	fnstsw WORD PTR [edx]
  402def:	(bad)  
  402df1:	jno    0x402d80
  402df3:	retf   0xaf26
  402df6:	retf   0x7b12
  402df9:	and    al,0x46
  402dfb:	sbb    ebp,ebp
  402dfd:	js     0x402db1
  402dff:	sub    edi,DWORD PTR [edi-0x37]
  402e02:	and    esp,edx
  402e04:	dec    esp
  402e05:	mov    edx,0x17e9339c
  402e0a:	adc    DWORD PTR [esi+0x3a8ab07c],edi
  402e10:	sbb    BYTE PTR [eax],al
  402e12:	mov    dl,0xa4
  402e14:	sar    al,0xe6
  402e17:	fadd   DWORD PTR [esi-0x73885dda]
  402e1d:	push   eax
  402e1e:	(bad)  
  402e1f:	push   0xb672c570
  402e24:	xor    DWORD PTR [ecx-0x6ef40883],esi
  402e2a:	ins    BYTE PTR es:[edi],dx
  402e2b:	daa    
  402e2c:	dec    ebx
  402e2d:	outs   dx,BYTE PTR ds:[si]
  402e2f:	xchg   ecx,eax
  402e30:	push   esp
  402e31:	std    
  402e32:	or     eax,0x5afe163c
  402e37:	xchg   edi,esi
  402e39:	sub    bh,al
  402e3b:	rol    BYTE PTR [ebp-0x37],cl
  402e3e:	fcmovnu st,st(1)
  402e40:	cwde   
  402e41:	xor    al,BYTE PTR [ecx+0x51ca7d6f]
  402e47:	ret    0xaf2b
  402e4a:	repnz pop ss
  402e4c:	div    BYTE PTR [edx+0x51eddbe2]
  402e52:	cmp    edi,edi
  402e54:	push   0x22
  402e56:	loop   0x402e07
  402e58:	add    eax,0xbb9ba039
  402e5d:	ja     0x402ea5
  402e5f:	mov    ds:0x4469ac48,al
  402e64:	loope  0x402e46
  402e66:	mov    cl,0xdd
  402e68:	call   0xc33c2309
  402e6d:	inc    edi
  402e6e:	push   ecx
  402e6f:	lods   al,BYTE PTR ds:[esi]
  402e70:	jp     0x402e82
  402e72:	pop    ebx
  402e73:	cmp    edx,DWORD PTR [esi-0xd67881c]
  402e79:	xor    BYTE PTR [eax],ah
  402e7b:	(bad)  
  402e7d:	xchg   ecx,eax
  402e7e:	sbb    DWORD PTR [ebp+0x47],edi
  402e81:	out    dx,al
  402e82:	ret    
  402e83:	mov    eax,ds:0x8c5ae4df
  402e88:	mov    eax,ds:0x2a6e1d81
  402e8d:	mov    eax,ds:0x42122c21
  402e92:	imul   ecx,DWORD PTR [eax-0x4],0x14
  402e96:	mov    fs,WORD PTR [ecx-0x68c92dd]
  402e9c:	xor    ecx,ecx
  402e9e:	addr16 into 
  402ea0:	push   esp
  402ea1:	adc    DWORD PTR [esi+0x3b],esi
  402ea4:	mov    ds:0xacc75993,eax
  402ea9:	add    al,0xd1
  402eab:	leave  
  402eac:	push   0x6b
  402eae:	pop    ebx
  402eaf:	and    al,0x6
  402eb1:	add    edx,ebx
  402eb3:	push   es
  402eb4:	jmp    0xc7b5:0x2f6f3f75
  402ebb:	xor    al,dh
  402ebd:	and    eax,0xa82c075e
  402ec2:	(bad)  
  402ec3:	adc    al,al
  402ec5:	pop    edx
  402ec6:	mov    ecx,0xfb6c0a24
  402ecb:	sub    eax,0xb20c3497
  402ed0:	sub    BYTE PTR [eax],dl
  402ed2:	es addr16 push eax
  402ed5:	mov    bh,0x2b
  402ed7:	jns    0x402f18
  402ed9:	(bad)  
  402eda:	std    
  402edb:	pop    es
  402edc:	sbb    al,0xeb
  402ede:	fs aad 0x4
  402ee1:	fild   WORD PTR ds:0x7f6c4a4a
  402ee7:	dec    esi
  402ee8:	xor    al,dl
  402eea:	neg    BYTE PTR [ebx]
  402eec:	pop    ss
  402eed:	shl    BYTE PTR [ebx+edi*1],1
  402ef0:	mov    ebp,0xfefd63b7
  402ef5:	xchg   ecx,eax
  402ef6:	add    al,0x5a
  402ef8:	in     al,0xdc
  402efa:	inc    esp
  402efb:	faddp  st(5),st
  402efd:	mov    eax,ds:0x89a555f6
  402f02:	cmp    DWORD PTR ds:0xbffcbb79,ebx
  402f08:	int    0x7a
  402f0a:	lahf   
  402f0b:	sub    bl,BYTE PTR [edx]
  402f0d:	jg     0x402f31
  402f0f:	ss nop
  402f11:	stos   BYTE PTR es:[edi],al
  402f12:	cmp    ebx,DWORD PTR [eax]
  402f14:	dec    DWORD PTR [ecx-0x6421ac0c]
  402f1a:	popf   
  402f1b:	sbb    bh,ah
  402f1d:	cld    
  402f1e:	cs (bad) 
  402f20:	loope  0x402f29
  402f22:	shl    DWORD PTR [edi+0x606065b5],1
  402f28:	lock mov ch,0x42
  402f2b:	ret    0x50dc
  402f2e:	cmp    BYTE PTR [eax],bh
  402f30:	or     edx,edx
  402f32:	xchg   ebx,eax
  402f33:	pop    esi
  402f34:	cmc    
  402f35:	(bad)  
  402f36:	sar    BYTE PTR [ecx+0x37781c8e],1
  402f3c:	and    eax,0xfc54d064
  402f41:	mov    ebp,0x6cd85821
  402f46:	test   DWORD PTR ds:0x645cae56,ebx
  402f4c:	adc    al,0xf5
  402f4e:	jmp    0x402f3a
  402f50:	popa   
  402f51:	pop    ebp
  402f52:	pop    ecx
  402f53:	xor    BYTE PTR [esi-0x1d695805],dh
  402f59:	imul   ecx,edx,0x0
  402f5c:	pop    esp
  402f5d:	arpl   WORD PTR [edi-0x35f25621],sp
  402f63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f64:	xor    BYTE PTR [edi-0x27],dl
  402f67:	push   cs
  402f68:	push   cs
  402f69:	push   ebx
  402f6a:	push   es
  402f6b:	push   ebx
  402f6c:	scas   ax,WORD PTR es:[edi]
  402f6e:	daa    
  402f6f:	mov    ebx,0xd5180e77
  402f74:	push   edx
  402f75:	fldcw  WORD PTR [eax]
  402f77:	sahf   
  402f78:	jnp    0x402faf
  402f7a:	addr16 inc edi
  402f7c:	inc    eax
  402f7d:	and    BYTE PTR [esi+eax*2+0x3e],dl
  402f81:	inc    ebp
  402f82:	push   eax
  402f83:	xor    eax,0xae5f9c84
  402f88:	mov    DWORD PTR [ecx+0x3979e27c],ebp
  402f8e:	cld    
  402f8f:	mov    ch,0x81
  402f91:	jbe    0x402f2a
  402f93:	pushf  
  402f94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f95:	adc    eax,0xcaee5ef1
  402f9a:	into   
  402f9b:	xchg   ecx,eax
  402f9c:	xchg   ebp,eax
  402f9d:	mov    bl,0xbd
  402f9f:	xor    BYTE PTR [ebx-0x61],dh
  402fa2:	sbb    BYTE PTR [edx+0x73266763],bl
  402fa8:	cdq    
  402fa9:	ds mov fs,esi
  402fac:	mov    cl,0x19
  402fae:	aaa    
  402faf:	retf   0xb6a9
  402fb2:	mov    cl,0x9
  402fb4:	pusha  
  402fb5:	fs mov al,0xd4
  402fb8:	xchg   ebx,eax
  402fb9:	daa    
  402fba:	fdivp  st(7),st
  402fbc:	clc    
  402fbd:	inc    edx
  402fbe:	mov    bh,0x14
  402fc0:	(bad)  
  402fc1:	ror    DWORD PTR [edx],cl
  402fc3:	js     0x403028
  402fc5:	push   ebx
  402fc6:	dec    esi
  402fc7:	outs   dx,BYTE PTR ds:[esi]
  402fc8:	cmp    eax,0x14070888
  402fcd:	inc    edi
  402fce:	inc    BYTE PTR [esi]
  402fd0:	mov    ds:0xdbc07dd3,al
  402fd5:	ret    
  402fd6:	(bad)  
  402fd7:	mov    dl,0xec
  402fd9:	xor    al,0x1b
  402fdb:	jne    0x403037
  402fdd:	mov    esi,0xb5ada8a0
  402fe2:	sti    
  402fe3:	outs   dx,BYTE PTR ds:[esi]
  402fe4:	fldenv [ebp+0x89409a1]
  402fea:	add    BYTE PTR [edx+ebx*1+0x7c],ah
  402fee:	jb     0x403062
  402ff0:	popf   
  402ff1:	push   edx
  402ff2:	das    
  402ff3:	or     eax,0xc643ee0b
  402ff8:	enter  0x678e,0xa5
  402ffc:	cld    
  402ffd:	xchg   ecx,eax
  402ffe:	mov    DWORD PTR [ebx-0x1],edi
  403001:	jne    0x403070
  403003:	daa    
  403004:	and    al,0xc0
  403006:	jae    0x402fcc
  403008:	(bad)  
  403009:	xchg   edx,eax
  40300a:	aam    0xb6
  40300c:	push   ebx
  40300d:	imul   ecx,DWORD PTR [ecx-0x30],0xffffff95
  403011:	pop    ecx
  403012:	inc    esp
  403013:	jns    0x402fa3
  403015:	mov    bh,0xbd
  403017:	(bad)  
  403019:	cmp    eax,0x4f7d5f2e
  40301e:	mov    esp,0xeee535dd
  403023:	inc    ecx
  403024:	adc    eax,0xc43ae7d2
  403029:	add    eax,0xe2b7e5ea
  40302e:	mov    esi,ebp
  403030:	hlt    
  403031:	jg     0x402ff5
  403033:	dec    esi
  403035:	lock ror dl,1
  403038:	loopne 0x402fd3
  40303a:	lds    ecx,FWORD PTR [edx]
  40303c:	cmp    eax,0xa5756eb3
  403041:	daa    
  403042:	stos   DWORD PTR es:[edi],eax
  403043:	aam    0xbf
  403045:	and    al,0x1c
  403047:	dec    ecx
  403048:	and    eax,0x10851570
  40304d:	mov    BYTE PTR [ebx-0x52],bl
  403050:	sbb    BYTE PTR [esi],al
  403052:	inc    DWORD PTR [edx]
  403054:	scas   eax,DWORD PTR es:[edi]
  403055:	or     al,0x2d
  403057:	stos   BYTE PTR es:[edi],al
  403058:	ret    0xb66
  40305b:	or     BYTE PTR [ebp+0x78efe915],dl
  403061:	test   al,0xbd
  403063:	xchg   ebx,eax
  403064:	jecxz  0x402fea
  403066:	in     al,0xf8
  403068:	int    0xf9
  40306a:	cmp    BYTE PTR [ecx-0xeb59276],bh
  403070:	retf   
  403071:	xchg   esi,eax
  403072:	xchg   BYTE PTR [edx],dh
  403074:	mov    eax,ds:0x5ca2836
  403079:	jnp    0x403093
  40307b:	inc    ecx
  40307c:	out    0xd5,al
  40307e:	inc    ebx
  40307f:	ins    BYTE PTR es:[edi],dx
  403080:	scas   al,BYTE PTR es:[edi]
  403081:	out    0xc6,al
  403083:	push   ebx
  403084:	jmp    0x4030d7
  403086:	xchg   ebx,eax
  403088:	add    al,0x1b
  40308a:	pushf  
  40308b:	hlt    
  40308c:	dec    esi
  40308d:	xor    eax,DWORD PTR [ebx]
  40308f:	fiadd  WORD PTR [ecx-0x53c3af90]
  403095:	or     al,0xad
  403097:	and    esp,DWORD PTR [ebx-0x2b3dada0]
  40309d:	imul   ecx,DWORD PTR [edi-0x69a97a04],0x66b97072
  4030a7:	push   ebp
  4030a8:	dec    edx
  4030a9:	test   DWORD PTR [ebx],0x96ad5e70
  4030af:	add    ch,BYTE PTR [edx+0x12]
  4030b2:	pop    edx
  4030b3:	xor    al,0x3f
  4030b5:	(bad)  
  4030b6:	ins    DWORD PTR es:[edi],dx
  4030b7:	sub    BYTE PTR [ebx+0x47203d34],bl
  4030bd:	mov    bl,0x78
  4030bf:	leave  
  4030c0:	leave  
  4030c1:	ret    
  4030c2:	cwde   
  4030c3:	call   0x90e2:0x97b51d73
  4030ca:	and    al,cl
  4030cc:	jg     0x403079
  4030ce:	or     eax,0x3ad3da1
  4030d3:	call   0x2105:0xf841bce
  4030da:	retf   
  4030db:	or     ecx,DWORD PTR [ebx+0x1e]
  4030de:	imul   esp,DWORD PTR [edi-0x55423877],0x70
  4030e5:	clc    
  4030e6:	js     0x403159
  4030e8:	in     al,dx
  4030e9:	out    dx,eax
  4030ea:	in     eax,dx
  4030eb:	aam    0x9c
  4030ed:	pop    es
  4030ee:	es aaa 
  4030f0:	jp     0x4030b9
  4030f2:	test   esi,edi
  4030f4:	fistp  WORD PTR [edi]
  4030f6:	pushf  
  4030f7:	adc    ecx,DWORD PTR [edi+0x5aa802b9]
  4030fd:	adc    ebp,DWORD PTR [ebx]
  4030ff:	aad    0x9c
  403101:	(bad)  
  403102:	xor    ah,ah
  403104:	scas   eax,DWORD PTR es:[edi]
  403105:	in     eax,dx
  403106:	nop
  403107:	into   
  403108:	ret    0xe8e
  40310b:	push   ebp
  40310c:	sahf   
  40310d:	(bad)  
  403110:	retf   
  403111:	ins    BYTE PTR es:[edi],dx
  403112:	dec    edx
  403113:	imul   edx,DWORD PTR ds:0xb812306d,0x6306f56b
  40311d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40311e:	mov    bh,0xf0
  403120:	sbb    BYTE PTR [esp+edi*2+0x17776413],bl
  403127:	mov    al,ds:0xb4744a40
  40312c:	add    eax,0xbd431833
  403131:	ins    BYTE PTR es:[edi],dx
  403132:	push   es
  403133:	ret    0x92c1
  403136:	sub    eax,0x786ffa01
  40313b:	stc    
  40313c:	and    ebp,esi
  40313e:	jnp    0x40310b
  403140:	pop    es
  403141:	loopne 0x403187
  403143:	scas   eax,DWORD PTR es:[edi]
  403144:	jnp    0x403163
  403146:	xchg   edx,eax
  403147:	push   ebp
  403148:	rcr    ch,0x5d
  40314b:	jle    0x4030e1
  40314d:	cmp    ebx,DWORD PTR [edx+0x66f74340]
  403153:	lea    ebx,fs:[eax+ecx*4]
  403157:	scas   al,BYTE PTR es:[edi]
  403158:	push   ebx
  403159:	jp     0x4031c5
  40315b:	sub    BYTE PTR [edx],ah
  40315d:	(bad)  
  40315e:	push   eax
  40315f:	mov    al,0x68
  403161:	mov    edi,0x715c93b9
  403166:	xchg   ecx,eax
  403167:	(bad)  [ecx+0x62]
  40316a:	jge    0x40313b
  40316c:	test   DWORD PTR [ebx-0x2e14645b],ebx
  403172:	mov    eax,0x9afd0411
  403177:	retf   
  403178:	sbb    dh,BYTE PTR ds:0xcea97f3a
  40317e:	shl    DWORD PTR [ebx-0x4213a7a4],1
  403184:	out    dx,eax
  403185:	(bad)  
  403186:	pop    eax
  403187:	loop   0x403125
  403189:	adc    ecx,ecx
  40318b:	int3   
  40318c:	lods   eax,DWORD PTR ds:[esi]
  40318d:	cmc    
  40318e:	push   0xf05c7689
  403193:	xlat   BYTE PTR ds:[ebx]
  403194:	adc    DWORD PTR [edx-0x4f],esi
  403197:	or     eax,DWORD PTR [ecx-0x14]
  40319a:	dec    ebx
  40319b:	ret    0x2aae
  40319e:	adc    al,BYTE PTR [ebp-0x7eeb0ba0]
  4031a4:	xchg   ecx,eax
  4031a5:	ret    0xcba3
  4031a8:	(bad)  
  4031a9:	cmp    eax,0xb4bfdd42
  4031ae:	out    0xf2,eax
  4031b0:	es lock stos DWORD PTR es:[edi],eax
  4031b3:	or     eax,0xd38b9ba9
  4031b8:	mov    ebx,0xfd1d09f6
  4031bd:	or     DWORD PTR [eax+0x17],ebp
  4031c0:	test   al,0xd6
  4031c2:	arpl   WORD PTR [ebx+0x39],bp
  4031c5:	aaa    
  4031c6:	xchg   ecx,eax
  4031c7:	and    esp,0xffffff91
  4031ca:	sub    al,BYTE PTR ds:0x9ff54d66
  4031d0:	sbb    al,0xf4
  4031d2:	in     eax,0x73
  4031d4:	int3   
  4031d5:	cmp    eax,0xcdc9cc12
  4031da:	push   0x76
  4031dc:	popa   
  4031dd:	cmp    edi,DWORD PTR [ecx-0x1e8f819b]
  4031e3:	cmp    al,0xd
  4031e5:	pushf  
  4031e6:	adc    al,0x6d
  4031e8:	or     ebp,DWORD PTR [edi+edi*4]
  4031eb:	push   edx
  4031ec:	pop    ecx
  4031ed:	xchg   esi,edx
  4031ef:	push   ss
  4031f0:	ret    
  4031f1:	test   eax,0x45394cdc
  4031f6:	and    al,0x2b
  4031f8:	mov    BYTE PTR [esi],0x9a
  4031fb:	repz mov esi,0xff0f82f3
  403201:	cs xchg edx,eax
  403203:	dec    esp
  403204:	popa   
  403205:	and    esp,edi
  403207:	dec    ebp
  403208:	in     al,0x5c
  40320a:	add    ecx,edx
  40320c:	dec    ecx
  40320d:	xor    DWORD PTR [ebx+0x2b],edx
  403210:	push   ss
  403211:	dec    ebp
  403212:	push   esp
  403213:	xchg   esi,eax
  403214:	pop    ebp
  403215:	sub    al,0xe5
  403217:	sbb    eax,0xe68ce0f4
  40321c:	icebp  
  40321d:	(bad)  
  40321e:	cmp    ecx,DWORD PTR [ebx]
  403220:	jbe    0x4031c4
  403222:	fadd   st,st(3)
  403224:	sti    
  403225:	xor    esi,0x4dc45da0
  40322b:	add    al,ch
  40322d:	jb     0x4031b3
  40322f:	test   DWORD PTR [ebp-0x3c],0x793ad6a4
  403236:	jb     0x4031bb
  403238:	pop    edi
  403239:	mov    ds:0x8d8eaec8,al
  40323e:	adc    ch,BYTE PTR [edi-0x25214ea0]
  403244:	dec    ebx
  403245:	(bad)  
  403246:	adc    al,0xfa
  403248:	inc    esp
  403249:	jp     0x403291
  40324b:	adc    DWORD PTR [edi],ecx
  40324d:	jno    0x4031fe
  40324f:	(bad)  
  403250:	or     eax,0x392340b4
  403255:	mov    edx,0xaf481141
  40325a:	push   edx
  40325b:	into   
  40325c:	je     0x403266
  40325e:	pushf  
  40325f:	xchg   edi,eax
  403260:	or     eax,0xe481a28a
  403265:	push   es
  403266:	pop    edi
  403267:	enter  0x33b8,0xac
  40326b:	not    DWORD PTR [eax+0x56]
  40326e:	xchg   esp,eax
  40326f:	cs pop ss
  403271:	cmp    bh,0x57
  403274:	aas    
  403275:	pop    ebp
  403276:	jae    0x403274
  403278:	pop    ecx
  403279:	xor    ebp,DWORD PTR [esp+ecx*4+0x29b54c1e]
  403280:	lock sbb al,BYTE PTR [edx+eax*2]
  403284:	aas    
  403285:	mov    ds:0x136b800d,eax
  40328a:	add    al,BYTE PTR [edx+0x6819944]
  403290:	pop    ds
  403291:	lods   eax,DWORD PTR ds:[esi]
  403292:	ja     0x403233
  403294:	aad    0x71
  403296:	(bad)
  403299:	mov    al,ds:0xcd8154e
  40329e:	ins    BYTE PTR es:[edi],dx
  40329f:	arpl   WORD PTR [edx+0x70],cx
  4032a2:	retf   0xcdff
  4032a5:	dec    ebx
  4032a6:	dec    esp
  4032a7:	and    ch,BYTE PTR [eax-0x2cfb4ed1]
  4032ad:	and    ebx,esi
  4032af:	push   ds
  4032b0:	push   ebx
  4032b1:	stos   BYTE PTR es:[edi],al
  4032b2:	out    0xdf,eax
  4032b4:	stc    
  4032b5:	jne    0x403308
  4032b7:	int3   
  4032b8:	lock dec esp
  4032ba:	adc    ah,ch
  4032bc:	cmp    DWORD PTR [ebx-0x47],0xffffff94
  4032c0:	add    DWORD PTR [edx],0x3
  4032c3:	and    edi,DWORD PTR [ebx+eiz*4-0x31]
  4032c7:	sub    BYTE PTR es:0xc6d193f2,ah
  4032ce:	outs   dx,DWORD PTR ds:[esi]
  4032cf:	ins    DWORD PTR es:[edi],dx
  4032d0:	shl    BYTE PTR [ebp-0x4c],1
  4032d3:	mov    ch,0x16
  4032d5:	dec    ebp
  4032d6:	jecxz  0x4032b4
  4032d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032d9:	out    0x51,al
  4032db:	mov    BYTE PTR [edi],bl
  4032dd:	data16 jge 0x403313
  4032e0:	or     ah,BYTE PTR [esi-0x31]
  4032e3:	shl    DWORD PTR [edx],0x67
  4032e6:	inc    ecx
  4032e7:	fs cld 
  4032e9:	leave  
  4032ea:	mov    ebx,0x16f60739
  4032ef:	stc    
  4032f0:	push   ss
  4032f1:	fbld   TBYTE PTR [ebp-0x7be2a728]
  4032f7:	jp     0x403362
  4032f9:	call   0x917a49a6
  4032fe:	cwde   
  4032ff:	(bad)  
  403300:	outs   dx,BYTE PTR ds:[esi]
  403301:	adc    ebx,DWORD PTR [esi+0x39]
  403304:	bound  edi,QWORD PTR [esp+edi*8+0x23]
  403308:	int3   
  403309:	pop    esi
  40330a:	mov    ds:0xdf799402,al
  40330f:	jb     0x4032d3
  403311:	sbb    BYTE PTR [eax-0x14],dl
  403314:	and    BYTE PTR [edx-0x27],ah
  403317:	mov    dh,0xc4
  403319:	ficomp DWORD PTR [ebx+0x32]
  40331c:	sahf   
  40331d:	scas   eax,DWORD PTR es:[edi]
  40331e:	pop    es
  40331f:	imul   ch
  403321:	push   ds
  403322:	pop    es
  403323:	pushf  
  403324:	mov    ah,0x6c
  403326:	mov    ebp,0x5cc2c0fb
  40332b:	mov    ch,0x19
  40332d:	repnz push ss
  40332f:	fld    st(3)
  403331:	add    BYTE PTR [edi-0x2e],ah
  403334:	fidivr DWORD PTR ss:[ebx-0x5b]
  403338:	aaa    
  403339:	adc    al,0x65
  40333b:	aas    
  40333c:	lock xchg ecx,eax
  40333e:	mov    BYTE PTR [edx-0x176f164d],cl
  403344:	clc    
  403345:	lock sbb DWORD PTR [edx+ebx*8+0x69],ebp
  40334a:	fldenv [esi+0x2e]
  40334d:	pop    esp
  40334e:	sbb    ecx,DWORD PTR [eax+eax*8-0x39]
  403352:	repnz xchg edi,eax
  403354:	(bad)  
  403355:	es scas al,BYTE PTR es:[edi]
  403357:	repnz outs dx,DWORD PTR ds:[esi]
  403359:	icebp  
  40335a:	push   es
  40335b:	mov    ds:0x36ce0270,al
  403360:	mov    dh,0x4b
  403362:	gs data16 mov bh,0x15
  403366:	add    BYTE PTR [ecx+0x15],ah
  403369:	loop   0x40334e
  40336b:	adc    esp,esp
  40336d:	mov    dl,BYTE PTR [edx]
  40336f:	sub    al,0x72
  403371:	or     al,0x5
  403373:	fadd   QWORD PTR [ecx-0x12e74040]
  403379:	or     al,0x63
  40337b:	daa    
  40337c:	lwpins ecx,DWORD PTR ds:0xd600b849,0x71047762
  403389:	push   ds
  40338a:	leave  
  40338b:	or     eax,0x658e1c92
  403390:	adc    bh,BYTE PTR [ebx+esi*4-0x1b3e82c4]
  403397:	mov    esp,0x94cefe83
  40339c:	es jg  0x40334e
  40339f:	push   es
  4033a0:	outs   dx,DWORD PTR ds:[esi]
  4033a1:	push   ds
  4033a2:	sahf   
  4033a3:	or     DWORD PTR [ebx],0xafaa15b3
  4033a9:	xchg   BYTE PTR [eax],ch
  4033ab:	xchg   esi,eax
  4033ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033ae:	jne    0x40334e
  4033b0:	add    esp,DWORD PTR [eax+eiz*8-0x34]
  4033b4:	in     al,0xeb
  4033b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033b7:	ins    DWORD PTR es:[edi],dx
  4033b8:	push   ds
  4033b9:	mov    dl,0x53
  4033bb:	in     eax,dx
  4033bc:	sub    DWORD PTR [edx],0x20
  4033bf:	cmp    al,0x69
  4033c1:	cwde   
  4033c2:	xchg   ecx,eax
  4033c3:	(bad)  
  4033c5:	push   ebx
  4033c6:	mov    BYTE PTR [ecx],cl
  4033c8:	ss ffree st(5)
  4033cb:	clc    
  4033cc:	(bad)  
  4033cd:	jecxz  0x403402
  4033cf:	add    BYTE PTR [ebp-0x79],bh
  4033d2:	push   0xd3da1fd7
  4033d7:	(bad)  
  4033d8:	xor    BYTE PTR [esi-0x38],cl
  4033db:	adc    BYTE PTR cs:0xdf40042b,bl
  4033e2:	nop
  4033e3:	rcr    DWORD PTR [esi-0x12],0x37
  4033e7:	and    BYTE PTR [edx-0x57],dh
  4033ea:	or     BYTE PTR [ecx+edi*2-0x58],0x43
  4033ef:	cwde   
  4033f0:	or     BYTE PTR [ebx-0x3ec4bc3f],bh
  4033f6:	mov    al,0xab
  4033f8:	sbb    cl,ah
  4033fa:	adc    bh,BYTE PTR [ecx]
  4033fc:	xor    BYTE PTR ss:[edx-0x25],dh
  403400:	jmp    0x834b:0x168420a8
  403407:	(bad)  
  403408:	call   0xf30f3bba
  40340d:	push   eax
  40340e:	ret    0xa751
  403411:	sub    eax,0x70841647
  403416:	cmp    DWORD PTR [ecx+0x50ca8b63],esi
  40341c:	push   ds
  40341d:	pop    esp
  40341e:	mov    eax,0x8c1c9222
  403423:	popf   
  403424:	mov    ah,0xa7
  403426:	sbb    al,0xd2
  403428:	or     ch,bh
  40342a:	call   0x3e4a7ce8
  40342f:	fcom   DWORD PTR [esi+ebp*4+0x1a]
  403433:	push   ds
  403434:	out    0x24,al
  403436:	addr16 mov al,ds:0x7a8f
  40343a:	mov    ecx,0xe427d633
  40343f:	mov    esi,0x995e2309
  403444:	inc    esi
  403445:	sar    BYTE PTR [ebx+0x8],cl
  403448:	jnp    0x4033d5
  40344a:	jmp    0x216:0x832da26a
  403451:	and    BYTE PTR [ecx-0x4b],bh
  403454:	xchg   ecx,eax
  403455:	cs icebp 
  403457:	std    
  403458:	inc    edx
  403459:	sti    
  40345a:	mov    gs,WORD PTR [esi-0x2b0df029]
  403460:	sub    eax,0xed539fab
  403465:	sti    
  403466:	into   
  403467:	inc    ebx
  403468:	adc    dl,BYTE PTR [esi-0x22ebf420]
  40346e:	popa   
  40346f:	xchg   ebx,eax
  403470:	rcr    BYTE PTR [ecx+0x320fadeb],1
  403476:	lds    ebp,FWORD PTR [ebx]
  403478:	add    al,al
  40347a:	clc    
  40347b:	adc    eax,0x317a87f3
  403480:	mov    ds:0x6e9c4d1a,eax
  403485:	xor    ebp,DWORD PTR [ebp+ebx*1+0x61]
  403489:	sysret 
  40348b:	dec    eax
  40348c:	test   eax,0x7e20ea0c
  403491:	pusha  
  403492:	ins    BYTE PTR es:[edi],dx
  403493:	xor    ch,ah
  403495:	jle    0x4034b9
  403497:	cmp    al,0xcf
  403499:	ins    DWORD PTR es:[edi],dx
  40349a:	cli    
  40349b:	push   edi
  40349c:	inc    BYTE PTR [eax-0xc]
  40349f:	das    
  4034a0:	add    DWORD PTR [edi-0x634cefd0],edi
  4034a6:	xor    DWORD PTR [edi+0x73bb9d59],edx
  4034ac:	sbb    BYTE PTR [eax+0x64],ch
  4034af:	js     0x403478
  4034b1:	sar    edx,1
  4034b3:	cdq    
  4034b4:	inc    ebp
  4034b5:	rol    BYTE PTR [ebp+0x5e],1
  4034b8:	(bad)  
  4034ba:	sti    
  4034bb:	div    DWORD PTR [edi]
  4034bd:	retf   
  4034be:	cld    
  4034bf:	mov    dl,0xcb
  4034c1:	mov    WORD PTR [edi],ss
  4034c3:	ret    0x878
  4034c6:	ja     0x40345a
  4034c8:	adc    BYTE PTR ds:[edi-0x6d],bh
  4034cc:	add    eax,0x135dd793
  4034d1:	imul   esi,DWORD PTR [ecx-0x42],0x99a68d74
  4034d8:	push   ebx
  4034d9:	sti    
  4034da:	sub    BYTE PTR [esi],ah
  4034dc:	pop    ds
  4034dd:	adc    ah,BYTE PTR [edi-0x1b1b1c14]
  4034e3:	es adc eax,0x4a7b7680
  4034e9:	cmp    esp,esi
  4034eb:	bsr    ebp,DWORD PTR [esi-0x788905f]
  4034f2:	ss ins DWORD PTR es:[edi],dx
  4034f4:	fst    DWORD PTR [edi]
  4034f6:	sub    eax,0xf2270547
  4034fb:	in     eax,0x7e
  4034fd:	add    al,0xac
  4034ff:	test   ebp,esp
  403501:	fs aaa 
  403503:	mov    eax,0xccbdc637
  403508:	fnstcw WORD PTR [ebp+0x4c]
  40350b:	xchg   ecx,eax
  40350c:	aaa    
  40350d:	cmp    esi,esp
  40350f:	icebp  
  403510:	nop
  403511:	xlat   BYTE PTR ds:[ebx]
  403512:	sub    al,BYTE PTR [edi+0x6aa77c92]
  403518:	adc    al,0x6c
  40351a:	imul   edx,DWORD PTR ds:0xf1267399,0x42
  403521:	and    ch,BYTE PTR [ecx-0x7e]
  403524:	loopne 0x403513
  403526:	jns    0x40358d
  403528:	(bad)  
  403529:	jmp    0x403523
  40352b:	loopne 0x4034fd
  40352d:	sub    BYTE PTR [eax],dh
  40352f:	mov    ah,0x91
  403531:	in     eax,0xa2
  403533:	(bad)  
  403534:	pop    eax
  403535:	dec    esi
  403536:	in     eax,0x2e
  403538:	jmp    0x9a338163
  40353d:	and    eax,0x2f51092f
  403542:	mov    WORD PTR [eax+0x79],?
  403545:	in     eax,0xd2
  403547:	push   edx
  403548:	jbe    0x403517
  40354a:	jnp    0x403524
  40354c:	cwde   
  40354d:	fsub   st(4),st
  40354f:	pop    ds
  403550:	ja     0x4035b1
  403552:	pop    ss
  403553:	sub    eax,0xcfd3da1a
  403558:	push   ebp
  403559:	push   0xffffffc7
  40355b:	push   esi
  40355c:	clc    
  40355d:	jmp    0x9614a8cf
  403562:	scas   eax,DWORD PTR es:[edi]
  403563:	outs   dx,BYTE PTR ds:[esi]
  403564:	ret    0xef29
  403567:	pop    ecx
  403568:	xor    BYTE PTR ds:0x730d401b,cl
  40356e:	pop    ebp
  40356f:	mov    ebp,0x395cbbcd
  403574:	iret   
  403575:	inc    eax
  403576:	dec    eax
  403577:	(bad)  
  403578:	scas   al,BYTE PTR es:[edi]
  403579:	pop    edi
  40357a:	test   eax,0xad03b4d3
  40357f:	pushf  
  403580:	pop    ss
  403581:	mov    ch,0x76
  403583:	dec    ebp
  403584:	stos   DWORD PTR es:[edi],eax
  403585:	xor    ah,BYTE PTR [ebp+0x39]
  403588:	test   DWORD PTR [esi],0x3f84b676
  40358e:	pop    es
  40358f:	fistp  DWORD PTR [edi-0x8]
  403592:	rcl    DWORD PTR [esi+0x49],0x27
  403596:	mov    ebx,0xd7de69f9
  40359b:	call   0x67d1:0x638bf16c
  4035a2:	out    0x9c,eax
  4035a4:	shr    ebx,1
  4035a6:	(bad)  
  4035a7:	mov    ss,esp
  4035a9:	movzx  eax,WORD PTR [edx]
  4035ac:	(bad)  
  4035ad:	mov    al,ds:0xca67fddf
  4035b2:	call   0xe3cd6b02
  4035b7:	xchg   DWORD PTR [esi+0x4f7f2497],esi
  4035bd:	aad    0xf6
  4035bf:	les    esp,FWORD PTR [ecx]
  4035c1:	jo     0x4035a9
  4035c3:	shl    DWORD PTR [ebx-0x29],0x7e
  4035c7:	(bad)  
  4035c8:	mov    eax,0x50cea673
  4035cd:	mov    edi,0x9b85147c
  4035d2:	jle    0x4035cd
  4035d4:	mov    edx,0x23891138
  4035d9:	fs mov ecx,0xa8381df2
  4035df:	mov    dh,0xef
  4035e1:	fiadd  WORD PTR [edx]
  4035e3:	jb     0x4035d2
  4035e5:	pop    esp
  4035e6:	sub    ecx,DWORD PTR [ecx]
  4035e8:	add    eax,0xbcce89bb
  4035ed:	fnsave [ebp-0x2c2c13ea]
  4035f3:	arpl   WORD PTR [ebx],sp
  4035f5:	inc    esp
  4035f6:	add    ah,cl
  4035f8:	jge    0x40366f
  4035fa:	cdq    
  4035fb:	(bad)  
  4035fc:	push   cs
  4035fd:	mov    cl,0xa6
  4035ff:	(bad)  
  403600:	mov    edi,0x240939fd
  403605:	inc    ebp
  403606:	inc    eax
  403607:	add    dl,ah
  403609:	sub    bl,BYTE PTR [ebp+eax*8+0x72]
  40360d:	fstp   DWORD PTR [ecx]
  40360f:	inc    esp
  403610:	add    eax,0x87312a3c
  403615:	cwde   
  403616:	cs clc 
  403618:	mov    esi,0xccf99818
  40361d:	sbb    eax,DWORD PTR [ecx]
  40361f:	test   al,cl
  403621:	ja     0x40360b
  403623:	cli    
  403624:	xchg   edi,eax
  403625:	pop    ebx
  403626:	mov    eax,0xec662192
  40362b:	inc    ebx
  40362c:	mov    cl,0x39
  40362e:	or     al,0x81
  403630:	or     eax,0x69019286
  403635:	pop    es
  403636:	pop    edx
  403637:	add    ch,BYTE PTR [ebp+ecx*8-0x69]
  40363b:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40363d:	aaa    
  40363e:	xchg   esp,eax
  403640:	jp     0x40365e
  403642:	in     al,dx
  403643:	stos   DWORD PTR es:[edi],eax
  403644:	ins    BYTE PTR es:[edi],dx
  403645:	dec    eax
  403646:	scas   eax,DWORD PTR es:[edi]
  403647:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403648:	in     al,0x5e
  40364a:	add    bh,BYTE PTR [ebx-0x71d5e120]
  403650:	dec    edi
  403651:	push   ebx
  403652:	cli    
  403653:	pop    ds
  403654:	aas    
  403655:	je     0x403654
  403657:	sub    DWORD PTR ds:0x538c01e7,0xabe271de
  403661:	test   ecx,esi
  403663:	mov    dl,0xe
  403665:	jnp    0x403679
  403667:	sbb    cl,ah
  403669:	scas   eax,DWORD PTR es:[edi]
  40366a:	lods   al,BYTE PTR ds:[esi]
  40366b:	jecxz  0x4035f0
  40366d:	outs   dx,BYTE PTR ds:[esi]
  40366e:	push   eax
  40366f:	mov    al,0xc6
  403671:	jnp    0x4036a3
  403673:	mov    ebp,0x9825a878
  403678:	iret   
  403679:	or     DWORD PTR [ecx],esp
  40367b:	adc    al,0xb3
  40367d:	jb     0x4036bc
  40367f:	gs xchg ebp,eax
  403681:	adc    dh,bh
  403683:	scas   eax,DWORD PTR es:[edi]
  403684:	inc    edi
  403685:	push   ds
  403686:	pop    edx
  403687:	or     eax,0x8c788ba9
  40368c:	xor    dh,BYTE PTR [esi]
  40368e:	fbstp  TBYTE PTR [ecx-0x66]
  403691:	sbb    al,0xc5
  403693:	clc    
  403694:	retf   
  403695:	mov    ebp,0x478e9f05
  40369a:	ss loop 0x4036a5
  40369d:	sahf   
  40369e:	aas    
  40369f:	sub    DWORD PTR ds:0x9db0047e,0x7cea1bcb
  4036a9:	xlat   BYTE PTR ds:[ebx]
  4036aa:	mov    dh,0x67
  4036ac:	inc    ebp
  4036ad:	push   esp
  4036ae:	mov    eax,0x784d5324
  4036b3:	push   esi
  4036b4:	jge    0x4036c8
  4036b6:	fstp   st(6)
  4036b8:	mov    al,0x2
  4036ba:	pop    ebp
  4036bb:	mov    ah,0x77
  4036bd:	fst    st(1)
  4036bf:	inc    ecx
  4036c0:	jbe    0x40371c
  4036c2:	jp     0x4036eb
  4036c4:	cmp    esp,DWORD PTR [ebx-0x31171fee]
  4036ca:	xchg   esi,eax
  4036cb:	sbb    BYTE PTR [esi+eax*2-0x3d],0xbe
  4036d0:	mov    eax,?
  4036d2:	icebp  
  4036d3:	inc    bx
  4036d5:	pop    ecx
  4036d6:	out    dx,eax
  4036d7:	sti    
  4036d8:	pop    edi
  4036d9:	adc    al,0x89
  4036db:	and    al,0xe3
  4036dd:	mov    ds:0x439a7a33,eax
  4036e2:	mov    DWORD PTR [esi],ebx
  4036e4:	inc    esi
  4036e5:	mov    ebp,0xfb9e403
  4036ea:	ds ret 
  4036ec:	and    ah,cl
  4036ee:	or     DWORD PTR [edi+0x5e6f4125],esi
  4036f4:	jmp    0x403756
  4036f6:	mov    ds:0x29c1e110,al
  4036fb:	imul   edi,DWORD PTR [esi-0x186dd5e4],0x71b740b4
  403705:	inc    esp
  403706:	test   DWORD PTR [ecx+0x2f41716c],0x42d77505
  403710:	ins    DWORD PTR es:[edi],dx
  403711:	adc    DWORD PTR [edx+ebx*4-0x20],eax
  403715:	inc    esp
  403716:	mov    edx,ebx
  403718:	adc    bl,0x94
  40371b:	fldenv [ebp+0x2c]
  40371e:	fcmovnbe st,st(2)
  403720:	mov    ah,0xbb
  403722:	push   0xa7ae8214
  403727:	shrd   DWORD PTR [ebx+0x2d],esi,cl
  40372b:	dec    edi
  40372c:	(bad)  
  40372d:	cmp    ch,al
  40372f:	xchg   ecx,eax
  403730:	retf   0xd35c
  403733:	dec    edx
  403734:	mov    ds:0x7ed1876f,al
  403739:	repnz xor BYTE PTR [edi+0x417b4a92],0x78
  403741:	bound  edx,QWORD PTR [ebx]
  403743:	and    al,0x90
  403745:	push   ds
  403746:	push   cs
  403747:	push   0xffffffbb
  403749:	mov    edx,0x2aef6245
  40374e:	sbb    DWORD PTR [edx],esp
  403750:	jne    0x40375f
  403752:	imul   esi,DWORD PTR [esi+0x11a9a4dc],0x5a
  403759:	push   es
  40375a:	in     al,dx
  40375b:	enter  0x39d1,0x4f
  40375f:	mov    al,ds:0x4cacb3d0
  403764:	sub    DWORD PTR [edi+0x60],edx
  403767:	ret    0x5f8
  40376a:	test   DWORD PTR [ebp+0x35],ebp
  40376d:	push   esi
  40376e:	(bad)  
  40376f:	jmp    0xb7e1:0x3d8985b5
  403776:	cmp    al,0xca
  403778:	pop    eax
  403779:	and    BYTE PTR [ecx],bh
  40377b:	mov    ds:0xf7a3e878,al
  403780:	in     eax,dx
  403781:	fimul  WORD PTR [esi+0x54]
  403784:	mov    WORD PTR [edx],gs
  403786:	xor    BYTE PTR es:[esi-0xc3dd4b2],ch
  40378d:	pop    eax
  40378e:	push   esi
  40378f:	sub    DWORD PTR [ebx+0x23],0x5a047acc
  403796:	sbb    esp,esi
  403798:	ins    BYTE PTR es:[edi],dx
  403799:	xlat   BYTE PTR ds:[ebx]
  40379a:	mov    edi,0x76fbefb5
  40379f:	imul   ebx,DWORD PTR [eax],0xf44d83e5
  4037a5:	loope  0x403818
  4037a7:	mov    ah,0x4a
  4037a9:	jno    0x4037e4
  4037ab:	hlt    
  4037ac:	pop    ebx
  4037ad:	aaa    
  4037ae:	add    esi,DWORD PTR [edi]
  4037b0:	sahf   
  4037b1:	pop    esp
  4037b2:	(bad)  
  4037b3:	inc    ebp
  4037b4:	jne    0x4037bd
  4037b6:	xor    ecx,DWORD PTR ds:0xeba88f5e
  4037bc:	cmp    BYTE PTR [esi-0x2a],0x2a
  4037c0:	aaa    
  4037c1:	dec    ebx
  4037c2:	loopne 0x403750
  4037c4:	jns    0x40379c
  4037c6:	or     al,0x44
  4037c8:	mov    eax,0x4797724a
  4037cd:	pop    edi
  4037ce:	rcl    DWORD PTR [edi+0x7336ccbc],0xe3
  4037d5:	add    BYTE PTR [ebp-0x67a7502b],bh
  4037db:	repnz mov cl,0x6c
  4037de:	outs   dx,BYTE PTR ds:[esi]
  4037df:	popa   
  4037e0:	cld    
  4037e1:	mov    ah,0x81
  4037e3:	and    esp,DWORD PTR [ebx+0x2273fa5c]
  4037e9:	jno    0x403830
  4037eb:	iret   
  4037ec:	(bad)  
  4037ed:	pop    edi
  4037ee:	fcomi  st,st(4)
  4037f0:	cmp    ecx,DWORD PTR [edx+0x299c6d7b]
  4037f6:	adc    al,0xa1
  4037f8:	outs   dx,DWORD PTR ds:[esi]
  4037f9:	popa   
  4037fa:	clc    
  4037fb:	test   BYTE PTR [esi+0x36],dl
  4037fe:	push   esi
  4037ff:	sbb    DWORD PTR [ebp-0x4b7473a7],edi
  403805:	dec    esi
  403806:	call   0x6981:0x2832cde3
  40380d:	into   
  40380e:	jne    0x4037d0
  403810:	cmp    eax,0x9d2169b9
  403815:	frstor ds:0x2f07997
  40381b:	cmp    ecx,0x74
  40381e:	adc    al,0x7e
  403820:	cld    
  403821:	sub    DWORD PTR [ebx+0x79],ebx
  403824:	hlt    
  403825:	pop    ecx
  403826:	in     eax,0x30
  403828:	pop    esi
  403829:	mov    esp,0x3626c803
  40382e:	in     al,dx
  40382f:	fdivr  QWORD PTR [eax+ebx*4-0x1ee58d5a]
  403836:	mov    bl,BYTE PTR [edx+0x50db0217]
  40383c:	add    eax,0xb34200bd
  403841:	pop    ds
  403842:	add    DWORD PTR [ecx+0x4ed3c6f7],ecx
  403848:	adc    al,0xb7
  40384a:	iret   
  40384b:	sub    edi,esp
  40384d:	(bad)  
  40384e:	int    0x55
  403850:	mov    dl,0xc7
  403852:	pusha  
  403853:	add    DWORD PTR [esi+0x14],esi
  403856:	push   es
  403857:	(bad)  
  403858:	sub    eax,0xf882e5f3
  40385d:	loopne 0x4038ba
  40385f:	fwait
  403860:	popf   
  403861:	imul   edi,DWORD PTR [ecx+0x6c2bc977],0x6c
  403868:	xchg   edi,eax
  403869:	mov    ds:0x18b2fe13,eax
  40386e:	div    edi
  403870:	cwde   
  403871:	icebp  
  403872:	pop    es
  403873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403874:	jg     0x40387d
  403876:	cmp    BYTE PTR [ecx],0x3a
  403879:	jo     0x403833
  40387b:	add    BYTE PTR [ecx+0x7eaa439d],ch
  403881:	add    edx,ebp
  403883:	in     al,0x6
  403885:	cmp    al,0xc1
  403887:	add    bl,BYTE PTR [ebx-0x3274b834]
  40388d:	pop    ecx
  40388e:	fild   WORD PTR [eax]
  403890:	ins    BYTE PTR es:[edi],dx
  403891:	scas   eax,DWORD PTR es:[edi]
  403892:	push   eax
  403893:	adc    BYTE PTR [ebx],bh
  403895:	in     al,0x8c
  403897:	ins    BYTE PTR es:[edi],dx
  403898:	cdq    
  403899:	jecxz  0x4038eb
  40389b:	aam    0xd1
  40389d:	leave  
  40389e:	pop    ebx
  40389f:	inc    edi
  4038a0:	ds cld 
  4038a2:	xchg   ebx,eax
  4038a3:	sub    BYTE PTR [ebx],dh
  4038a5:	xor    DWORD PTR [ebx],ecx
  4038a7:	adc    al,0x31
  4038a9:	adc    ah,BYTE PTR [eax]
  4038ab:	test   eax,0xb9e563fb
  4038b0:	rcl    DWORD PTR [ebx+0x670d4afe],cl
  4038b6:	and    DWORD PTR [esi-0x2a5b9d7a],ebx
  4038bc:	jo     0x403924
  4038be:	dec    esi
  4038bf:	aam    0x74
  4038c1:	pop    ecx
  4038c2:	xor    al,0x65
  4038c4:	xchg   ecx,eax
  4038c5:	outs   dx,DWORD PTR ds:[esi]
  4038c6:	fsubp  st(2),st
  4038c8:	jecxz  0x4038ea
  4038ca:	jge    0x403862
  4038cc:	cmp    esp,DWORD PTR [ebp+0x0]
  4038cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038d0:	sub    DWORD PTR [eax],ebp
  4038d2:	mov    eax,ds:0x54010efc
  4038d7:	pop    edx
  4038d8:	div    BYTE PTR [ecx-0x67]
  4038db:	in     al,dx
  4038dc:	cmp    eax,0xfac47811
  4038e1:	mov    edi,0x8638df5a
  4038e6:	in     eax,dx
  4038e7:	pop    es
  4038e8:	arpl   WORD PTR [ebp+ebp*1-0x36],ax
  4038ec:	add    ch,BYTE PTR [edx+0x557de303]
  4038f2:	xchg   ebp,eax
  4038f3:	jae    0x4038ef
  4038f5:	sar    DWORD PTR [esp+ecx*1],1
  4038f8:	mov    al,0xc0
  4038fa:	pushf  
  4038fb:	dec    ecx
  4038fc:	pop    ebp
  4038fd:	jno    0x403913
  4038ff:	in     al,dx
  403900:	sub    eax,0xcc2cc3c6
  403905:	loop   0x4038fc
  403907:	xchg   ebx,eax
  403908:	aam    0xa7
  40390a:	in     eax,0x96
  40390c:	bound  ebx,QWORD PTR [edi]
  40390e:	rcl    DWORD PTR [edi-0x7b9672a],cl
  403914:	loop   0x40394d
  403916:	ja     0x4038bb
  403918:	add    eax,0x1addc56b
  40391d:	repz cmp BYTE PTR [eax],dl
  403920:	push   esi
  403921:	fbstp  TBYTE PTR [ebx]
  403923:	jg     0x403951
  403925:	retf   
  403926:	mov    bl,0x1
  403928:	jmp    0xa7bf:0x16762fe9
  40392f:	cli    
  403930:	add    al,0x80
  403932:	or     BYTE PTR [edi+0xc],bl
  403935:	daa    
  403936:	div    BYTE PTR [ebp-0x6e4720d]
  40393c:	int3   
  40393d:	adc    al,0x4f
  40393f:	mov    cl,BYTE PTR [edx-0x3]
  403942:	sahf   
  403943:	mov    al,ds:0x9bfcff6f
  403948:	jno    0x40399d
  40394a:	or     ebx,DWORD PTR [esi-0x708ef60b]
  403950:	(bad)  
  403951:	pop    esp
  403952:	ret    0x6221
  403955:	retf   0x2ef6
  403958:	push   0x50e0468c
  40395d:	sub    eax,0x489dc4a9
  403962:	ror    DWORD PTR [edi-0x56],cl
  403965:	push   ebx
  403966:	daa    
  403967:	xchg   ch,al
  403969:	jae    0x4039e3
  40396b:	cmp    BYTE PTR [ebx],dh
  40396d:	jbe    0x4039ce
  40396f:	fsubr  st,st(2)
  403971:	pusha  
  403972:	mov    ds:0x65cb45e6,al
  403977:	lods   eax,DWORD PTR ds:[esi]
  403978:	lds    ecx,FWORD PTR [edi+ecx*8+0xf499fd4]
  40397f:	dec    edi
  403980:	push   edi
  403981:	sbb    dl,bh
  403983:	js     0x40391a
  403985:	mov    edx,0x6cdff5d5
  40398a:	je     0x4039cb
  40398c:	mov    fs,WORD PTR [edi]
  40398e:	gs pop ecx
  403990:	dec    edx
  403991:	mov    al,0x90
  403993:	adc    eax,0xc0451579
  403998:	cmc    
  403999:	mov    esi,0x8e2a3837
  40399e:	jnp    0x403a0b
  4039a0:	add    dl,al
  4039a2:	fidiv  DWORD PTR [ecx-0x7ce90e7a]
  4039a8:	sub    DWORD PTR [edx-0x80],esp
  4039ab:	(bad)  
  4039ac:	mov    esi,0x5ec9731a
  4039b1:	sbb    al,0xe1
  4039b3:	xlat   BYTE PTR ds:[ebx]
  4039b4:	xor    al,0x53
  4039b6:	daa    
  4039b7:	cli    
  4039b8:	(bad)  
  4039b9:	dec    ebx
  4039ba:	shl    BYTE PTR [ecx+0x531c279f],0x1
  4039c1:	or     BYTE PTR [ebx],bh
  4039c3:	aas    
  4039c4:	and    edi,DWORD PTR [ebx+0x6e]
  4039c7:	pop    ebx
  4039c8:	and    bl,BYTE PTR [eax-0x5dc423fb]
  4039ce:	lea    eax,[ecx-0x73]
  4039d1:	test   DWORD PTR [ebx+0xb],ecx
  4039d4:	imul   edi,DWORD PTR [ebp-0x27a71d31],0xfe6922e4
  4039de:	and    ecx,DWORD PTR [ecx]
  4039e0:	arpl   WORD PTR [esi],ax
  4039e2:	aaa    
  4039e3:	mov    cl,0x70
  4039e5:	adc    esp,DWORD PTR [ebx+0x28]
  4039e8:	scas   al,BYTE PTR es:[edi]
  4039e9:	adc    eax,0xd4cf2eb7
  4039ee:	ss cmc 
  4039f0:	imul   edx,DWORD PTR [ebx+edi*8],0x1
  4039f4:	cwde   
  4039f5:	push   0x36ca0e0b
  4039fa:	jge    0x4039f9
  4039fc:	adc    edx,ebp
  4039fe:	mov    ds:0x2342a35b,al
  403a03:	std    
  403a04:	push   0x96593964
  403a09:	push   ds
  403a0a:	repz scas al,BYTE PTR es:[edi]
  403a0c:	loopne 0x403a76
  403a0e:	sbb    BYTE PTR [ebp-0x40],ah
  403a11:	mul    BYTE PTR [edi+ebx*4-0x4e29ff4c]
  403a18:	push   es
  403a19:	jmp    0x90f4:0xc47c5e1a
  403a20:	daa    
  403a21:	aam    0x7a
  403a23:	daa    
  403a24:	and    DWORD PTR ds:0xd5ba0f32,0xab78d17c
  403a2e:	(bad)  
  403a2f:	mov    esi,0xb0066740
  403a34:	dec    ebx
  403a35:	or     dl,ch
  403a37:	pop    edx
  403a38:	aaa    
  403a39:	sti    
  403a3a:	in     al,dx
  403a3b:	seto   BYTE PTR [ecx]
  403a3e:	iret   
  403a3f:	pop    ds
  403a40:	imul   BYTE PTR [ecx+eax*8]
  403a43:	cwde   
  403a44:	retf   0x63f6
  403a47:	fst    QWORD PTR ds:0xd901f7c3
  403a4d:	inc    ebx
  403a4e:	cmc    
  403a4f:	rcl    DWORD PTR [eax],1
  403a51:	mov    ah,0xc
  403a53:	rol    BYTE PTR [edi+edi*1],cl
  403a56:	inc    ecx
  403a57:	mov    eax,ds:0x91abcce2
  403a5c:	cli    
  403a5d:	repnz mov ebp,0x4130a60c
  403a63:	or     BYTE PTR [edx],0x7
  403a66:	xor    bl,dh
  403a68:	mov    bl,0xdc
  403a6a:	retf   
  403a6b:	outs   dx,DWORD PTR ds:[esi]
  403a6c:	fidivr DWORD PTR [ebx-0x4dfedba0]
  403a72:	in     al,0x51
  403a74:	int    0x19
  403a76:	mov    ds:0x2345bd4a,al
  403a7b:	arpl   WORD PTR [ebx],sp
  403a7d:	mov    al,0x27
  403a7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a80:	(bad)  
  403a81:	jae    0x403ad9
  403a83:	and    bh,cl
  403a85:	call   0xbd86:0xdd744402
  403a8c:	xchg   esi,eax
  403a8d:	adc    esi,DWORD PTR [bx+di+0x467a]
  403a92:	int3   
  403a93:	or     DWORD PTR [ebx],0x52
  403a96:	aam    0xc5
  403a98:	push   ss
  403a99:	mov    ?,WORD PTR [bp+di-0x8]
  403a9d:	es jbe 0x403a22
  403aa0:	mov    ch,0x66
  403aa2:	loop   0x403a90
  403aa4:	cmp    ebx,DWORD PTR [eax]
  403aa6:	adc    dh,bh
  403aa8:	xlat   BYTE PTR ds:[ebx]
  403aa9:	pop    edx
  403aaa:	sbb    al,0xed
  403aac:	mov    edx,0x5890dbf0
  403ab1:	ror    BYTE PTR [eiz*2+0x5c682ada],1
  403ab8:	mov    eax,0xdb593ffe
  403abd:	fwait
  403abe:	cld    
  403abf:	enter  0x8670,0x7b
  403ac3:	in     eax,dx
  403ac4:	bound  ebp,QWORD PTR [ecx]
  403ac6:	lahf   
  403ac7:	into   
  403ac8:	inc    edi
  403ac9:	rcl    BYTE PTR [ebp+ecx*4+0x3cf3267e],0xa3
  403ad1:	cmp    BYTE PTR [eax-0x4733552a],0xb0
  403ad8:	dec    esp
  403ad9:	shl    al,cl
  403adb:	adc    al,0x43
  403add:	sub    ch,BYTE PTR [ebx]
  403adf:	jns    0x403b13
  403ae1:	enter  0xc609,0x7
  403ae5:	sbb    eax,DWORD PTR [ebx-0x4048729a]
  403aeb:	inc    DWORD PTR [esi]
  403aed:	mov    ds:0xa134f6d8,eax
  403af2:	xor    ebx,DWORD PTR [edx]
  403af4:	lock jmp 0x403a91
  403af7:	pop    edx
  403af8:	push   edi
  403af9:	add    al,0xf3
  403afb:	cmp    al,0xf5
  403afd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403afe:	fnsave [edi-0x4b7e6061]
  403b04:	in     eax,0x27
  403b06:	lods   al,BYTE PTR ds:[esi]
  403b07:	mov    bh,BYTE PTR [edx-0x61fc9521]
  403b0d:	sbb    ah,ah
  403b0f:	sbb    al,0xf7
  403b11:	or     ecx,DWORD PTR [ebx+0x60]
  403b14:	je     0x403b60
  403b16:	add    bl,BYTE PTR [edx-0x6b]
  403b19:	lahf   
  403b1a:	jg     0x403b89
  403b1c:	add    bh,bl
  403b1e:	mov    fs,WORD PTR [esi+0x2c]
  403b21:	mov    ebp,0xfdac528a
  403b26:	push   esp
  403b27:	xchg   esi,eax
  403b28:	retf   0x9e7d
  403b2b:	sub    eax,edi
  403b2d:	xor    eax,esi
  403b2f:	cmp    eax,ecx
  403b31:	jne    0x403b8d
  403b37:	or     ecx,0x18fd
  403b3d:	mov    eax,DWORD PTR [ebp-0x8]
  403b40:	and    DWORD PTR ds:0x42916b,0x3a4c
  403b4a:	mov    ecx,DWORD PTR [ebp-0x10]
  403b4d:	adc    DWORD PTR ds:0x42916b,0x4291f3
  403b57:	xor    eax,esi
  403b59:	xor    DWORD PTR ds:0x4291d3,0x4291f7
  403b63:	xor    ecx,esi
  403b65:	sub    eax,ecx
  403b67:	sub    eax,edi
  403b69:	mov    ecx,DWORD PTR ds:0x429b9f
  403b6f:	mov    ecx,DWORD PTR [ecx]
  403b71:	xor    DWORD PTR ds:0x429163,ecx
  403b77:	xor    eax,esi
  403b79:	mov    DWORD PTR [ebp-0x8],eax
  403b7c:	mov    eax,DWORD PTR [ebp-0x10]
  403b7f:	xor    eax,esi
  403b81:	mov    ecx,0xffcd8d8d
  403b86:	sub    ecx,eax
  403b88:	jmp    0x403b9c
  403b8d:	mov    eax,DWORD PTR [ebp-0x10]
  403b90:	xor    eax,esi
  403b92:	mov    ecx,0xffcd8d0d
  403b97:	sub    ecx,eax
  403b99:	add    ecx,DWORD PTR [ebp-0xc]
  403b9c:	mov    DWORD PTR [ebp-0xc],ecx
  403b9f:	mov    eax,DWORD PTR [ebp-0x8]
  403ba2:	cmp    eax,0xf89c85a1
  403ba7:	jne    0x40158a
  403bad:	mov    DWORD PTR [ebp-0x34],0x9
  403bb4:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb7:	xor    ecx,esi
  403bb9:	add    ecx,edi
  403bbb:	jmp    0x40857d
  403bc0:	lea    eax,[ecx+ebx*1]
  403bc3:	mov    DWORD PTR [ebp-0x2c],eax
  403bc6:	mov    eax,DWORD PTR [ebp-0x58]
  403bc9:	sub    eax,ecx
  403bcb:	mov    DWORD PTR [ebp-0x1c],eax
  403bce:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd1:	mov    DWORD PTR [ebp-0x14],eax
  403bd4:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd7:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  403bde:	mov    DWORD PTR [ebp-0x54],eax
  403be1:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  403be8:	mov    eax,DWORD PTR [ebp-0x38]
  403beb:	xor    eax,esi
  403bed:	add    eax,edi
  403bef:	mov    DWORD PTR [ebp-0x10],eax
  403bf2:	mov    eax,DWORD PTR [ebp-0x38]
  403bf5:	xor    eax,esi
  403bf7:	add    eax,edi
  403bf9:	mov    DWORD PTR [ebp-0x8],eax
  403bfc:	mov    DWORD PTR [ebp-0x2c],0xf89c8581
  403c03:	mov    DWORD PTR [ebp-0x44],0xf89c85b8
  403c0a:	mov    eax,DWORD PTR [ebp-0x38]
  403c0d:	mov    edx,DWORD PTR [ebp-0x14]
  403c10:	xor    eax,esi
  403c12:	add    eax,edi
  403c14:	cmp    edx,eax
  403c16:	je     0x408571
  403c1c:	mov    eax,DWORD PTR [ebp-0x20]
  403c1f:	xor    eax,esi
  403c21:	mov    edx,0xffcd8d0d
  403c26:	sub    edx,eax
  403c28:	add    edx,DWORD PTR [ebp-0x14]
  403c2b:	mov    eax,DWORD PTR [ebp-0x20]
  403c2e:	mov    ebx,DWORD PTR [ebp-0x10]
  403c31:	xor    eax,esi
  403c33:	add    eax,edi
  403c35:	imul   eax,ebx
  403c38:	cmp    eax,edx
  403c3a:	ja     0x40856e
  403c40:	mov    edx,DWORD PTR [ebp-0x10]
  403c43:	mov    eax,DWORD PTR [ebp-0x14]
  403c46:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c49:	sub    eax,edx
  403c4b:	xor    ebx,esi
  403c4d:	xor    edx,edx
  403c4f:	add    ebx,edi
  403c51:	div    ebx
  403c53:	mov    DWORD PTR [ebp-0x8],eax
  403c56:	mov    eax,DWORD PTR [ebp-0x44]
  403c59:	mov    edx,DWORD PTR [ebp-0x8]
  403c5c:	xor    eax,esi
  403c5e:	add    eax,edi
  403c60:	cmp    edx,eax
  403c62:	jbe    0x403c72
  403c68:	mov    eax,DWORD PTR [ebp-0x44]
  403c6b:	xor    eax,esi
  403c6d:	add    eax,edi
  403c6f:	mov    DWORD PTR [ebp-0x8],eax
  403c72:	mov    eax,DWORD PTR [ebp-0x2c]
  403c75:	mov    edx,DWORD PTR [ebp-0x8]
  403c78:	xor    eax,esi
  403c7a:	add    eax,edi
  403c7c:	imul   eax,edx
  403c7f:	mov    DWORD PTR [ebp-0x8],eax
  403c82:	mov    eax,DWORD PTR [ebp-0x38]
  403c85:	mov    edx,DWORD PTR [ebp-0x8]
  403c88:	jmp    0x406039
  403c8d:	mov    eax,0xa02c6f67
  403c92:	and    al,0xb8
  403c94:	out    0x12,eax
  403c96:	mov    bh,0x24
  403c98:	fucomp st(6)
  403c9a:	and    DWORD PTR [esp+ecx*1-0x11],0xef83835c
  403ca2:	pop    esp
  403ca3:	add    DWORD PTR [ebx+0x680ada1],0xfffffff7
  403caa:	scas   eax,DWORD PTR es:[edi]
  403cab:	aam    0x8e
  403cad:	xor    ebp,DWORD PTR [ebp+0x3a2f01e8]
  403cb3:	mov    ch,0xd
  403cb5:	jo     0x403d29
  403cb7:	aam    0x45
  403cb9:	std    
  403cba:	mov    bl,BYTE PTR ds:0xbae58409
  403cc0:	into   
  403cc1:	xor    eax,0x4dc9cba0
  403cc6:	and    al,0x59
  403cc8:	pusha  
  403cc9:	pop    eax
  403cca:	sar    BYTE PTR [ebx-0x21453fcd],0xd5
  403cd1:	out    0x4d,al
  403cd3:	sbb    ah,bh
  403cd5:	outs   dx,DWORD PTR ds:[esi]
  403cd6:	sbb    DWORD PTR [edx-0x48],ecx
  403cd9:	(bad)  
  403cda:	adc    cl,0xad
  403cdd:	arpl   ax,ax
  403cdf:	pop    esp
  403ce0:	inc    edx
  403ce1:	jmp    0xc1c9350d
  403ce6:	mov    ebx,0x380141d5
  403ceb:	out    0x20,eax
  403ced:	add    eax,DWORD PTR [edx-0x5aeae753]
  403cf3:	adc    ch,BYTE PTR [ebx-0x7159c301]
  403cf9:	fwait
  403cfa:	mov    DWORD PTR ds:0x7a661847,edx
  403d00:	ret    0xb5fc
  403d03:	pusha  
  403d04:	mov    dh,0xef
  403d06:	pushf  
  403d07:	mov    esi,0x5af6476e
  403d0c:	inc    ebx
  403d0d:	push   es
  403d0e:	push   0xffffffd5
  403d10:	int    0xe2
  403d12:	call   0xf6f7:0x1e47af5e
  403d19:	mov    eax,0x4e10105c
  403d1e:	and    esi,DWORD PTR [edi+0x39]
  403d21:	inc    edx
  403d22:	ja     0x403d06
  403d24:	xchg   ebp,eax
  403d25:	daa    
  403d26:	lods   al,BYTE PTR ds:[esi]
  403d27:	lea    eax,[ebp-0x6c]
  403d2a:	xor    ah,BYTE PTR [edx]
  403d2c:	dec    eax
  403d2d:	ret    0x8b7
  403d30:	mov    esi,0x492328c6
  403d35:	lea    ecx,[ebx+ebp*1+0x77]
  403d39:	jecxz  0x403d5b
  403d3b:	mov    ecx,DWORD PTR [ebp+0x4b897a6a]
  403d41:	js     0x403d50
  403d43:	gs inc esi
  403d45:	sbb    DWORD PTR [edi-0x1d47b64c],esp
  403d4b:	(bad)  
  403d4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d4d:	jl     0x403d24
  403d4f:	sbb    al,0xbd
  403d51:	ret    0xcf2a
  403d54:	adc    eax,0xc8233bf
  403d59:	aad    0xce
  403d5b:	push   ss
  403d5c:	cmc    
  403d5d:	lea    edx,[esi]
  403d5f:	(bad)  
  403d61:	mov    ecx,0xdddc019e
  403d66:	sub    BYTE PTR [ecx],ch
  403d68:	sbb    DWORD PTR [eax+0x33],edi
  403d6b:	bound  ecx,QWORD PTR [ecx+ebx*8-0x6d]
  403d6f:	out    0x30,eax
  403d71:	and    DWORD PTR [esi-0x8db98a],ecx
  403d77:	dec    esi
  403d78:	(bad)  
  403d79:	pop    edi
  403d7a:	dec    esp
  403d7b:	pop    esi
  403d7c:	mov    esi,0x79299d5f
  403d81:	cmp    eax,0x64d5460a
  403d86:	fdivr  QWORD PTR [ebx+0x5e]
  403d89:	or     al,0x9c
  403d8b:	cmp    bl,al
  403d8d:	dec    ebx
  403d8e:	cmp    bl,dl
  403d90:	pop    eax
  403d91:	jnp    0x403d2e
  403d93:	jnp    0x403dc6
  403d95:	rcl    DWORD PTR [eax+0x498e7eee],0xfb
  403d9c:	arpl   WORD PTR ds:0x2077674f,bp
  403da2:	xor    DWORD PTR [eax-0x21],esp
  403da5:	jl     0x403dc6
  403da7:	cmp    al,0x6b
  403da9:	pop    esp
  403daa:	test   BYTE PTR [ebx],ch
  403dac:	in     al,dx
  403dad:	adc    al,0xde
  403daf:	add    eax,0xbb66ab89
  403db4:	adc    dl,BYTE PTR [eax+0x3e]
  403db7:	mov    edi,0xbfb049f
  403dbc:	jmp    0x997ed017
  403dc1:	imul   ecx,ebp,0x99c3a03b
  403dc7:	or     cl,bl
  403dc9:	popa   
  403dca:	fild   WORD PTR [ecx+0x4f0491b]
  403dd0:	and    al,0x11
  403dd2:	dec    eax
  403dd3:	pop    ecx
  403dd4:	xchg   esi,eax
  403dd5:	ins    BYTE PTR es:[edi],dx
  403dd6:	std    
  403dd7:	jae    0x403d9e
  403dd9:	rcl    esp,0x15
  403ddc:	int3   
  403ddd:	(bad)  
  403dde:	jo     0x403df0
  403de0:	mov    ecx,0x9ae358ea
  403de5:	cdq    
  403de6:	sbb    BYTE PTR [esi-0x3c90d886],dh
  403dec:	xchg   edx,eax
  403ded:	ds inc ebx
  403def:	adc    eax,eax
  403df1:	xor    eax,0x6dd88d3
  403df6:	push   es
  403df7:	nop
  403df8:	fs jb  0x403e0c
  403dfb:	push   es
  403dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dfd:	jnp    0x403dcc
  403dff:	cmp    al,0xc4
  403e01:	push   ebp
  403e02:	jmp    0x403d93
  403e04:	out    dx,eax
  403e05:	mov    cl,0xa7
  403e07:	add    eax,0xef667f88
  403e0c:	xor    esi,DWORD PTR [ebx]
  403e0e:	add    bh,dh
  403e10:	out    0xe4,al
  403e12:	or     eax,0x183da47
  403e17:	aad    0xa4
  403e19:	aas    
  403e1a:	mov    bh,0xea
  403e1c:	inc    ecx
  403e1d:	out    0x63,al
  403e1f:	retf   0x99b9
  403e22:	xchg   esi,eax
  403e23:	inc    esi
  403e24:	(bad)  
  403e26:	jmp    0xc7c3292f
  403e2b:	lds    ebp,FWORD PTR [ebp+0x6e]
  403e2e:	rcr    ch,1
  403e30:	push   ebx
  403e31:	add    eax,0x3240ac28
  403e36:	ret    0x214d
  403e39:	add    eax,0x23541d77
  403e3e:	dec    esp
  403e3f:	inc    esp
  403e40:	dec    esi
  403e41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e42:	cmp    BYTE PTR [ebx],al
  403e44:	call   0xe0c:0xa018cf10
  403e4b:	xor    eax,0x3cc5f6b9
  403e50:	test   al,0x88
  403e52:	cmp    al,0xee
  403e54:	mov    ecx,0xa26102f4
  403e59:	pusha  
  403e5a:	scas   al,BYTE PTR es:[edi]
  403e5b:	inc    edi
  403e5c:	or     DWORD PTR [eax],ebx
  403e5e:	xor    BYTE PTR [edx+0xadb44f5],0x78
  403e65:	ins    DWORD PTR es:[edi],dx
  403e66:	mov    edx,0x5c51f38c
  403e6b:	test   ch,bh
  403e6d:	push   esp
  403e6e:	mov    bh,0x13
  403e70:	pop    ecx
  403e71:	cmp    ah,BYTE PTR [esi-0x41]
  403e74:	mov    al,ds:0x217aa847
  403e79:	adc    DWORD PTR [ecx-0x5cfadb11],ecx
  403e7f:	stos   BYTE PTR es:[edi],al
  403e80:	int3   
  403e81:	push   edi
  403e82:	aam    0x35
  403e84:	ja     0x403eb3
  403e86:	aaa    
  403e87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e88:	sbb    ebp,DWORD PTR [ebp-0x77]
  403e8b:	stos   BYTE PTR es:[edi],al
  403e8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e8d:	xor    eax,0xc30d31e5
  403e92:	dec    BYTE PTR [ecx+0x12899f9]
  403e98:	enter  0xa520,0xb7
  403e9c:	mov    ds:0x82a8b01d,eax
  403ea1:	mov    ebp,0x8bbb93d4
  403ea6:	xchg   DWORD PTR [edi+0x276f1e47],ebp
  403eac:	adc    esi,DWORD PTR [esi+0x1b3a9d0b]
  403eb2:	adc    al,0x2c
  403eb4:	xlat   BYTE PTR ds:[ebx]
  403eb5:	mov    bl,0x1b
  403eb7:	(bad)  
  403eb9:	enter  0xa838,0x74
  403ebd:	fstp   DWORD PTR [esi-0x1d41a97a]
  403ec3:	std    
  403ec4:	(bad)  
  403ec5:	adc    eax,0x550c581f
  403eca:	push   cs
  403ecb:	int3   
  403ecc:	clc    
  403ecd:	add    eax,0xf2dd2c6f
  403ed2:	test   al,0x31
  403ed4:	xor    al,0x23
  403ed6:	mov    eax,0x413d0ae9
  403edb:	pop    es
  403edc:	mov    ebx,DWORD PTR [esi+0x3c]
  403edf:	adc    BYTE PTR [ebx-0x54b0bb52],bl
  403ee5:	(bad)  
  403ee6:	aad    0xb5
  403ee8:	call   0xa5b5:0x2d74a93a
  403eef:	cmc    
  403ef0:	ficomp WORD PTR [eax]
  403ef2:	into   
  403ef3:	sbb    BYTE PTR [ebx+0x35ced258],al
  403ef9:	adc    eax,DWORD PTR [eax]
  403efb:	inc    esp
  403efc:	push   eax
  403efd:	(bad)  
  403efe:	or     bl,ch
  403f00:	add    BYTE PTR [edi-0x34e5afb4],ah
  403f06:	pop    ebx
  403f07:	sbb    DWORD PTR [edx+0x699d5d14],edi
  403f0d:	test   BYTE PTR [eax],al
  403f0f:	pop    ss
  403f10:	out    0xdd,al
  403f12:	loopne 0x403f93
  403f14:	rcr    dh,0xb3
  403f17:	das    
  403f18:	rcl    BYTE PTR [ecx],1
  403f1a:	mov    edx,0x82e94fb5
  403f1f:	addr16 (bad) 
  403f21:	into   
  403f22:	jmp    0x403f4d
  403f24:	cdq    
  403f25:	xlat   BYTE PTR ds:[ebx]
  403f26:	icebp  
  403f27:	test   ebx,0x65b840c5
  403f2d:	cmc    
  403f2e:	and    ebp,ecx
  403f30:	inc    eax
  403f31:	dec    esi
  403f32:	test   BYTE PTR [ebp+0x37e9e9d5],bl
  403f38:	ret    
  403f39:	call   0x31de:0x96f7b81b
  403f40:	mov    ds:0xe5db0718,eax
  403f45:	adc    eax,0xb1eaa538
  403f4a:	mov    ebx,ebx
  403f4c:	jl     0x403f7b
  403f4e:	pop    ebx
  403f4f:	cmc    
  403f50:	enter  0x5452,0x97
  403f54:	jb     0x403fd1
  403f56:	pop    eax
  403f57:	pop    es
  403f58:	jne    0x403f96
  403f5a:	fst    QWORD PTR [edi+0x25]
  403f5d:	sbb    bl,ah
  403f5f:	rol    DWORD PTR [esi],cl
  403f61:	(bad)  
  403f62:	cmp    DWORD PTR [eax+0x70],ebp
  403f65:	data16 (bad) 
  403f67:	pop    ss
  403f68:	rcr    esp,1
  403f6a:	leave  
  403f6b:	lds    edx,FWORD PTR [esi+0x44]
  403f6e:	ins    BYTE PTR es:[edi],dx
  403f6f:	cmc    
  403f70:	jno    0x403f3a
  403f72:	arpl   WORD PTR [ebp-0x76e041b8],ax
  403f78:	add    esp,ebx
  403f7a:	pop    edx
  403f7b:	popa   
  403f7c:	ja     0x403fa5
  403f7e:	fcom   QWORD PTR [eax+ebx*1+0x67]
  403f82:	adc    al,0xd8
  403f84:	or     eax,0x6efebec5
  403f89:	sub    eax,0x2d6ea3f3
  403f8e:	inc    edi
  403f8f:	es mov dl,al
  403f92:	or     eax,0xf4d29e59
  403f97:	xchg   edx,eax
  403f98:	dec    eax
  403f99:	xor    DWORD PTR [eax-0x26bda397],esp
  403f9f:	mov    esi,0x48470324
  403fa4:	cli    
  403fa5:	adc    DWORD PTR [edx+0x5bd8ab4c],edi
  403fab:	pop    es
  403fac:	add    edx,esi
  403fae:	lahf   
  403faf:	adc    BYTE PTR [esi+0x65],0x11
  403fb3:	aad    0x4c
  403fb5:	leave  
  403fb6:	xor    bl,BYTE PTR [eax+0x58]
  403fb9:	pop    ecx
  403fba:	jo     0x403f8b
  403fbc:	pop    ebx
  403fbd:	push   cs
  403fbe:	iret   
  403fbf:	push   ecx
  403fc0:	daa    
  403fc1:	scas   eax,DWORD PTR es:[di]
  403fc3:	std    
  403fc4:	xor    al,0x5f
  403fc6:	ror    ebp,0x27
  403fc9:	pop    esi
  403fca:	lock dec ecx
  403fcc:	outs   dx,DWORD PTR ds:[esi]
  403fcd:	pop    ds
  403fce:	adc    ah,BYTE PTR [esi]
  403fd0:	(bad)
  403fd3:	jns    0x403fd3
  403fd5:	pop    esp
  403fd6:	arpl   WORD PTR [ecx+0x3d99f3f3],ax
  403fdc:	es sub eax,0x496f006e
  403fe2:	daa    
  403fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fe4:	js     0x404015
  403fe6:	mov    ebp,0x57938684
  403feb:	enter  0xf105,0x72
  403fef:	xor    al,0x3a
  403ff1:	jmp    0xd099f613
  403ff6:	xchg   esi,eax
  403ff7:	lea    esp,[esi+0x7a110bcd]
  403ffd:	test   BYTE PTR [eax-0x43],dh
  404000:	mov    edx,0x464bafe3
  404005:	repnz std 
  404007:	inc    edi
  404008:	cli    
  404009:	into   
  40400a:	(bad)  
  40400b:	fisubr WORD PTR [edx+0x64e96280]
  404011:	xor    eax,0xbc10d2a2
  404016:	and    ebp,ecx
  404018:	popa   
  404019:	rcr    DWORD PTR [edi+edi*1+0x3],cl
  40401d:	sbb    al,0x71
  40401f:	inc    edi
  404020:	retf   0xcee2
  404023:	push   cs
  404024:	test   eax,0x9e49ce73
  404029:	jno    0x403faf
  40402b:	push   ecx
  40402c:	add    al,0x22
  40402e:	in     eax,0xf5
  404030:	mov    edi,0xb3a1caae
  404035:	adc    al,0x35
  404037:	ficomp DWORD PTR ds:0x12d8d731
  40403d:	jns    0x403fdb
  40403f:	retf   
  404040:	mov    bh,BYTE PTR [ebx+ecx*4]
  404043:	out    dx,al
  404044:	dec    eax
  404045:	and    al,0x4f
  404047:	cmp    BYTE PTR [edi-0x54b80afc],ch
  40404d:	data16 or al,0xc2
  404050:	sbb    esp,DWORD PTR [edi+0x4f083d71]
  404056:	xor    ecx,ebp
  404058:	pop    edx
  404059:	push   ebp
  40405a:	sbb    edi,ebx
  40405c:	sar    DWORD PTR ds:0x48285160,1
  404062:	push   0x65
  404064:	das    
  404065:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  404067:	sbb    BYTE PTR [ebx],dl
  404069:	retf   
  40406a:	lock jge 0x40404e
  40406d:	mov    ch,0xbb
  40406f:	mov    bl,BYTE PTR [edi]
  404071:	sub    ah,BYTE PTR [ebx+ebx*2]
  404074:	btc    DWORD PTR [edi-0x9e08b79],edx
  40407b:	shl    BYTE PTR [edi],1
  40407d:	xchg   DWORD PTR [ecx-0x41],edi
  404080:	add    edi,0x2c
  404083:	aam    0x69
  404085:	cld    
  404086:	in     eax,0xa2
  404088:	enter  0x4f45,0x18
  40408c:	fistp  WORD PTR ds:0x4fb2ffb6
  404092:	in     eax,dx
  404093:	adc    dh,BYTE PTR [ebx+0x7f]
  404096:	(bad)  
  404097:	xchg   edi,eax
  404098:	js     0x404046
  40409a:	ret    
  40409b:	sub    ecx,edx
  40409d:	xchg   ebx,eax
  40409e:	sbb    eax,0xce10f14d
  4040a3:	sub    BYTE PTR [ebx-0x18],al
  4040a6:	xor    eax,0x460290ee
  4040ab:	mov    cl,BYTE PTR [edi+0x67]
  4040ae:	add    ecx,edi
  4040b0:	cmp    eax,0x52726e76
  4040b5:	xchg   ebp,eax
  4040b6:	in     al,dx
  4040b7:	dec    ecx
  4040b8:	dec    ebp
  4040b9:	int    0x28
  4040bb:	inc    edx
  4040bc:	jl     0x404084
  4040be:	inc    ebx
  4040c0:	(bad)  
  4040c1:	loop   0x40411d
  4040c3:	inc    esp
  4040c4:	jl     0x40408c
  4040c6:	pusha  
  4040c7:	je     0x4040fa
  4040c9:	gs dec edi
  4040cb:	lahf   
  4040cc:	dec    ecx
  4040cd:	jns    0x404125
  4040cf:	arpl   WORD PTR [edi],di
  4040d1:	jecxz  0x40414c
  4040d3:	iret   
  4040d4:	inc    ebx
  4040d5:	lods   al,BYTE PTR ds:[esi]
  4040d6:	ror    BYTE PTR gs:[ecx],cl
  4040d9:	sbb    al,0xac
  4040db:	push   eax
  4040dc:	cmp    al,0x11
  4040de:	ds stos DWORD PTR es:[edi],eax
  4040e0:	pushf  
  4040e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040e2:	sub    edx,esp
  4040e4:	idiv   DWORD PTR [eax+0x6d1aac5c]
  4040ea:	and    BYTE PTR [esi-0x7b],ch
  4040ed:	stos   DWORD PTR es:[edi],eax
  4040ee:	and    al,BYTE PTR [edx]
  4040f0:	(bad)  
  4040f1:	in     eax,dx
  4040f2:	xchg   ebx,eax
  4040f3:	dec    ebp
  4040f4:	cmp    eax,0x76d64215
  4040f9:	mov    al,bl
  4040fb:	xor    eax,0x6116bed9
  404100:	mov    eax,ds:0x890953cd
  404105:	out    dx,eax
  404106:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404107:	ins    BYTE PTR es:[edi],dx
  404108:	ror    BYTE PTR [esi-0x41016e58],1
  40410e:	xchg   ebp,eax
  40410f:	stos   DWORD PTR es:[edi],eax
  404110:	dec    ebx
  404111:	pop    ecx
  404112:	push   es
  404113:	mov    al,BYTE PTR [ebx+0x668396c6]
  404119:	fs mov esi,0xef7643c9
  40411f:	push   cs
  404120:	adc    eax,0xe0291aa1
  404125:	xchg   edx,eax
  404126:	mov    bl,0xcc
  404128:	add    al,0xe1
  40412a:	mov    cl,0xb
  40412c:	sbb    eax,0x72c057c2
  404131:	mov    esp,0xf2240141
  404136:	jl     0x4041a9
  404138:	out    0x51,al
  40413a:	retf   0xea4b
  40413d:	add    ch,ch
  40413f:	stos   DWORD PTR es:[edi],eax
  404140:	push   cs
  404141:	xchg   edx,eax
  404142:	push   ebx
  404143:	call   0x1014:0x4b26b0f
  40414a:	aad    0xf8
  40414c:	mov    ds:0xb7d6e854,al
  404151:	jb     0x40414b
  404153:	xor    al,cl
  404155:	xor    al,0xea
  404157:	ror    DWORD PTR [ecx],cl
  404159:	mov    eax,0xb0cff2ec
  40415e:	xchg   edx,eax
  40415f:	push   ebx
  404160:	add    eax,DWORD PTR [ecx+0x54]
  404163:	loop   0x4040f9
  404165:	mov    ds:0x400eec32,al
  40416a:	ins    BYTE PTR es:[edi],dx
  40416b:	sbb    eax,0x61160299
  404170:	mov    esi,0xbb4816f4
  404175:	inc    ecx
  404176:	pusha  
  404177:	out    0xaf,eax
  404179:	sub    BYTE PTR [eax-0x13],0x8
  40417d:	xchg   edx,eax
  40417e:	jl     0x40418d
  404180:	call   0x3fb5:0x1238024a
  404187:	shr    DWORD PTR [edx-0x66],cl
  40418a:	or     edx,edi
  40418c:	ins    BYTE PTR es:[edi],dx
  40418d:	sbb    al,0x5
  40418f:	jb     0x4041ab
  404191:	pop    esp
  404192:	aaa    
  404193:	repnz cmp edi,DWORD PTR [ebx+0x34978307]
  40419a:	hlt    
  40419b:	les    ebp,FWORD PTR [edi-0x2a]
  40419e:	jbe    0x4041c9
  4041a0:	xchg   esp,eax
  4041a1:	sub    eax,0xb04bc6bd
  4041a6:	xchg   esi,eax
  4041a7:	sbb    ebp,DWORD PTR [edx+0x5c592717]
  4041ad:	out    0x4c,eax
  4041af:	sub    eax,0xaacaf538
  4041b4:	fld    st(0)
  4041b6:	adc    ch,BYTE PTR [esi-0xe]
  4041b9:	push   edx
  4041ba:	adc    eax,0xa686e625
  4041bf:	jae    0x4041dd
  4041c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041c2:	call   0x4c0e6624
  4041c7:	js     0x404156
  4041c9:	pushf  
  4041ca:	into   
  4041cb:	fsubr  DWORD PTR [edx-0x70]
  4041ce:	mov    ebp,0xe393f8b8
  4041d3:	xchg   ebp,eax
  4041d4:	daa    
  4041d5:	mov    edi,esp
  4041d7:	push   edi
  4041d8:	pop    edx
  4041d9:	ins    BYTE PTR es:[edi],dx
  4041da:	cmp    bl,BYTE PTR [ecx+0x3efda868]
  4041e0:	mov    eax,0x7cd2072a
  4041e5:	aaa    
  4041e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041e7:	das    
  4041e8:	jne    0x404185
  4041ea:	mov    eax,ds:0x8a33b5f0
  4041ef:	cwde   
  4041f0:	sub    DWORD PTR [esp+edx*8-0x3c797f65],0xffffff8e
  4041f8:	inc    DWORD PTR [ecx+eax*8+0x6345cbe0]
  4041ff:	and    al,0x8f
  404201:	push   ebp
  404202:	push   ebp
  404203:	pop    ecx
  404204:	mov    bh,0x23
  404206:	loopne 0x404285
  404208:	ficom  WORD PTR [esi-0x246568e7]
  40420e:	mov    al,ds:0x3ea133ce
  404213:	push   ebx
  404214:	dec    ebp
  404215:	jnp    0x404284
  404217:	jmp    0x404202
  404219:	jmp    0x404233
  40421b:	mov    bh,0x9
  40421d:	pop    es
  40421e:	call   0x570a:0x2bb1d6c6
  404225:	or     al,BYTE PTR [edx+0x444cd05a]
  40422b:	fild   QWORD PTR [ebx-0x59571c]
  404231:	jl     0x404258
  404233:	fidivr WORD PTR ds:0xfe6f5e6c
  404239:	mov    ds:0x8e2dcf9b,al
  40423e:	addr16 retf 
  404240:	add    eax,0x5b1749b2
  404245:	outs   dx,DWORD PTR ds:[esi]
  404246:	xor    BYTE PTR [edi+ecx*1-0x6e94b6d2],ah
  40424d:	cmp    DWORD PTR [eax-0x66eb3187],esp
  404253:	jb     0x4042b8
  404255:	mov    al,ds:0xbcfdfe4e
  40425a:	mov    ebx,es
  40425c:	sbb    al,0xb4
  40425e:	nop
  40425f:	mov    eax,0xcd318918
  404264:	repnz shr BYTE PTR [edx-0x70],1
  404268:	xlat   BYTE PTR ds:[ebx]
  404269:	mov    ds:0x8163f9a8,eax
  40426e:	iret   
  40426f:	inc    esi
  404270:	mov    dl,0x40
  404272:	mov    esi,0x283825cc
  404277:	xchg   esi,eax
  404278:	js     0x404233
  40427a:	cmp    al,BYTE PTR [ecx+0x3ce1678d]
  404280:	xor    eax,0xd1de2bbf
  404285:	leave  
  404286:	in     al,dx
  404287:	test   BYTE PTR [esi-0x75],0xe5
  40428b:	adc    BYTE PTR [ecx],dh
  40428d:	and    DWORD PTR [edx-0x2b],edx
  404290:	or     edi,DWORD PTR [edi-0x38]
  404293:	mov    ds:0x8837c914,al
  404298:	inc    ebp
  404299:	mov    edx,0xb9330ce8
  40429e:	push   esi
  40429f:	test   al,0x74
  4042a1:	out    dx,eax
  4042a2:	jnp    0x4042a2
  4042a4:	and    dl,BYTE PTR [eax-0x43]
  4042a7:	jnp    0x404298
  4042a9:	ins    DWORD PTR es:[edi],dx
  4042aa:	mov    ebp,0xb42fc537
  4042af:	push   0x73
  4042b1:	dec    esp
  4042b2:	retf   0x152c
  4042b5:	int    0x42
  4042b7:	inc    esi
  4042b8:	hlt    
  4042b9:	inc    edi
  4042ba:	push   0x28
  4042bc:	cmp    ebx,eax
  4042be:	call   0xfce6:0xaca56278
  4042c5:	scas   al,BYTE PTR es:[edi]
  4042c6:	dec    ebx
  4042c7:	mov    al,0x5a
  4042c9:	(bad)  
  4042ca:	cmp    BYTE PTR [ebx+edx*1],al
  4042cd:	fmul   DWORD PTR [eax+edx*1-0x43]
  4042d1:	xor    eax,0x81bb316c
  4042d6:	pop    es
  4042d7:	mov    dh,0xd5
  4042d9:	and    DWORD PTR [ebp-0xc],0x5f
  4042dd:	jb     0x404297
  4042df:	hlt    
  4042e0:	mov    al,0x0
  4042e2:	and    cl,BYTE PTR [eax]
  4042e4:	xchg   edi,eax
  4042e5:	scas   eax,DWORD PTR es:[edi]
  4042e6:	jecxz  0x4042e4
  4042e8:	adc    al,0x1e
  4042ea:	push   esp
  4042ec:	cwde   
  4042ed:	ret    0x29af
  4042f0:	mov    edx,0x52666ca9
  4042f5:	jl     0x40436d
  4042f7:	mov    DWORD PTR [eax],ecx
  4042f9:	rol    BYTE PTR [esi-0x2042ae04],1
  4042ff:	mov    bh,0x82
  404301:	dec    esi
  404302:	je     0x404382
  404304:	int3   
  404305:	xchg   esp,eax
  404306:	or     dl,BYTE PTR [ecx]
  404308:	test   eax,0xbd33bdc9
  40430d:	pop    esp
  40430e:	stc    
  40430f:	outs   dx,BYTE PTR ds:[esi]
  404310:	jg     0x404297
  404312:	cmp    ebx,esp
  404314:	inc    esi
  404315:	hlt    
  404316:	or     esi,DWORD PTR [eax-0x72]
  404319:	mov    ebp,0x3470cab3
  40431e:	push   0x38
  404320:	xchg   DWORD PTR [ebp-0x12],ecx
  404323:	dec    esi
  404324:	adc    al,0xda
  404326:	aaa    
  404327:	jmp    0x42966691
  40432c:	and    bl,ch
  40432e:	loop   0x4043ad
  404330:	leave  
  404331:	fcmovnu st,st(5)
  404333:	xchg   DWORD PTR [ebp-0x15],esi
  404336:	jp     0x4042e4
  404338:	pop    edx
  404339:	pusha  
  40433a:	jo     0x404361
  40433c:	jbe    0x4043a2
  40433e:	sub    ecx,DWORD PTR [eax+0x7f]
  404341:	lods   eax,DWORD PTR ds:[esi]
  404342:	add    al,0x5c
  404344:	xor    DWORD PTR ds:0x6d37b214,ebx
  40434a:	mov    ecx,0x4aad4e1c
  40434f:	and    eax,0xc35777c3
  404354:	jp     0x404366
  404356:	dec    esp
  404357:	(bad)  
  404358:	aad    0x4c
  40435a:	inc    ecx
  40435b:	jecxz  0x40435a
  40435d:	jp     0x40433f
  40435f:	mov    eax,ds:0xcd373b2
  404364:	imul   esp,DWORD PTR [edi-0x3a],0xffffffb8
  404368:	ins    BYTE PTR es:[edi],dx
  404369:	add    esi,DWORD PTR [eax-0x71aed1]
  40436f:	cmp    ah,ch
  404371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404372:	fadd   st,st(0)
  404374:	iret   
  404375:	rcl    BYTE PTR [edi+0x5e],1
  404378:	test   dh,bl
  40437a:	cmp    al,0x49
  40437c:	into   
  40437d:	add    DWORD PTR [esi],ebx
  40437f:	and    edi,ecx
  404381:	ds pusha 
  404383:	loope  0x404361
  404385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404386:	sub    bh,BYTE PTR [ebp+0x5e3a21d6]
  40438c:	mov    dh,0x2
  40438e:	fmul   DWORD PTR [ecx]
  404390:	aaa    
  404391:	jns    0x404348
  404393:	xchg   esp,eax
  404394:	test   DWORD PTR [edx-0x2ef9a060],edi
  40439a:	add    eax,0x379149f1
  40439f:	xor    DWORD PTR [ecx+edi*2+0x1],edi
  4043a3:	je     0x4043be
  4043a5:	mov    esp,0x7c0bf04f
  4043aa:	mov    edi,0x2221caa2
  4043af:	xor    BYTE PTR [edi-0x475bf3d5],ch
  4043b5:	mov    ch,0x20
  4043b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043b8:	push   ebp
  4043b9:	mov    edx,0x1acf4471
  4043be:	sub    ecx,edx
  4043c0:	outs   dx,BYTE PTR ds:[esi]
  4043c1:	or     BYTE PTR [edx+0x50],dh
  4043c4:	je     0x4043d8
  4043c6:	inc    eax
  4043c7:	cli    
  4043c8:	pop    ecx
  4043c9:	int3   
  4043ca:	gs jmp 0x404389
  4043cd:	loop   0x404407
  4043cf:	sar    BYTE PTR [ecx+0x7f],1
  4043d2:	loop   0x4043cc
  4043d4:	cs fucomi st,st(6)
  4043d7:	inc    ebp
  4043d8:	ret    
  4043d9:	push   edx
  4043da:	mov    al,0xea
  4043dc:	lds    edx,FWORD PTR [ecx-0x37]
  4043df:	aam    0x75
  4043e1:	pushf  
  4043e2:	jmp    0x66b8:0xeee69ba3
  4043e9:	iret   
  4043ea:	mov    ebx,0x9697162a
  4043ef:	adc    eax,0x88ff4b65
  4043f4:	mov    ds:0x1ea5648c,al
  4043f9:	js     0x4043c8
  4043fb:	add    ecx,DWORD PTR [bp+di+0x3e7c]
  404400:	je     0x404449
  404402:	test   eax,0xd5061bcf
  404407:	retf   0x5b99
  40440a:	jmp    0x4d9684d6
  40440f:	add    DWORD PTR [esi+0x3d],esp
  404412:	cs inc eax
  404414:	mov    bh,0x7
  404416:	add    ebp,DWORD PTR [edi-0x333ece6b]
  40441c:	cli    
  40441d:	cs jl  0x4043e8
  404420:	test   BYTE PTR [ebp-0x15c930],cl
  404426:	lds    esi,FWORD PTR [ebx]
  404428:	call   0x2eb0:0xcbd9c062
  40442f:	add    BYTE PTR [edx],dl
  404431:	xlat   BYTE PTR ds:[ebx]
  404432:	shl    ecx,0xa3
  404435:	or     DWORD PTR [eax],esp
  404437:	or     bh,bh
  404439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40443a:	test   BYTE PTR ss:[ebx+0x5a6f992],dl
  404441:	mov    eax,0x8cad9fad
  404446:	xchg   edi,eax
  404447:	jae    0x40445c
  404449:	icebp  
  40444a:	dec    esi
  40444b:	call   0xd48c5ea3
  404450:	in     al,0xc6
  404452:	mov    eax,0xd856f6ba
  404457:	xor    DWORD PTR [ebp-0x14],edi
  40445a:	sbb    esp,edx
  40445c:	lea    ebx,[ebx+0x7a]
  40445f:	jg     0x4043e9
  404461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404462:	sbb    dh,dh
  404464:	cs out dx,al
  404466:	repnz push es
  404468:	clc    
  404469:	and    BYTE PTR [edi+0x6df50288],bl
  40446f:	cmc    
  404470:	pop    ebp
  404471:	add    BYTE PTR [edi+0x5af5ed7c],bl
  404477:	add    BYTE PTR [eax],cl
  404479:	push   ebp
  40447a:	lock sub DWORD PTR [edi+0x3e4f382b],ecx
  404481:	push   edi
  404482:	xchg   bx,ax
  404484:	ins    BYTE PTR es:[edi],dx
  404485:	fsub   DWORD PTR ds:[edx]
  404488:	retf   
  404489:	mov    cl,0x73
  40448b:	lea    esi,[eax+0x5237c8dc]
  404491:	cld    
  404492:	xor    DWORD PTR [edi],edi
  404494:	xor    BYTE PTR [ebx],0x4e
  404497:	loop   0x404491
  404499:	outs   dx,DWORD PTR ds:[esi]
  40449a:	push   esp
  40449b:	adc    esi,DWORD PTR [esi-0x6a637f95]
  4044a1:	lods   eax,DWORD PTR ds:[esi]
  4044a2:	xchg   DWORD PTR [edi-0x19],ecx
  4044a5:	cmp    ebp,DWORD PTR [edx+0x6a]
  4044a8:	jb     0x4044a6
  4044aa:	push   edx
  4044ab:	add    edi,ecx
  4044ad:	pop    esi
  4044ae:	add    cl,al
  4044b0:	lods   al,BYTE PTR ds:[esi]
  4044b1:	in     eax,dx
  4044b2:	or     al,0x4a
  4044b4:	xor    eax,0xe738079b
  4044b9:	(bad)  
  4044ba:	pop    edx
  4044bb:	scas   eax,DWORD PTR es:[edi]
  4044bc:	or     al,0x3f
  4044be:	lea    esp,ds:[ebx]
  4044c1:	dec    ecx
  4044c2:	stc    
  4044c3:	mov    cl,0xf1
  4044c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044c6:	ins    DWORD PTR es:[edi],dx
  4044c7:	hlt    
  4044c8:	jo     0x40452d
  4044ca:	mov    WORD PTR ds:0x2859ecf0,cs
  4044d0:	fcomp  DWORD PTR [ebx+ebx*8+0x5e]
  4044d4:	das    
  4044d5:	arpl   si,di
  4044d7:	add    BYTE PTR [edx-0x3800c23],bh
  4044dd:	mov    ?,edx
  4044df:	pushf  
  4044e0:	retf   0x6792
  4044e3:	ret    0x6283
  4044e6:	push   edx
  4044e7:	xchg   ecx,eax
  4044e8:	into   
  4044e9:	stos   DWORD PTR es:[edi],eax
  4044ea:	repz or eax,0x1d052965
  4044f0:	fcom   QWORD PTR [esi+eax*1-0xe65f87]
  4044f7:	enter  0x3c1,0x2c
  4044fb:	aam    0x45
  4044fd:	mov    esi,0xe6720c98
  404502:	dec    ebx
  404503:	pop    ebp
  404504:	sbb    DWORD PTR [edi+eiz*4],ecx
  404507:	and    DWORD PTR [edi],ebx
  404509:	adc    eax,0xf795492a
  40450e:	daa    
  40450f:	retf   0xa47f
  404512:	push   cs
  404513:	fbstp  TBYTE PTR [ebp-0x7e]
  404516:	cmc    
  404517:	mov    WORD PTR [edx],ds
  404519:	(bad)  
  40451a:	adc    al,0x2d
  40451c:	mov    ebp,0x406ba829
  404521:	mov    ebp,0xadac280e
  404526:	xor    DWORD PTR [esi-0x6c],0xd6485ee4
  40452d:	sub    al,0xd3
  40452f:	mov    bh,0xbe
  404531:	dec    edx
  404532:	sti    
  404533:	push   esi
  404534:	xlat   BYTE PTR ds:[ebx]
  404535:	mov    ds:0x1b3b55c1,eax
  40453a:	dec    edx
  40453b:	scas   al,BYTE PTR es:[edi]
  40453c:	(bad)  [esi-0x2c]
  40453f:	das    
  404540:	jecxz  0x404519
  404542:	retf   0xe867
  404545:	and    eax,0xfded06cc
  40454a:	adc    eax,0x2aabb76d
  40454f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404550:	scas   al,BYTE PTR es:[edi]
  404551:	mov    gs,ebx
  404553:	cli    
  404554:	mov    edi,DWORD PTR [eax+0x1c]
  404557:	sub    al,0xd2
  404559:	int    0xbb
  40455b:	pop    ss
  40455c:	push   ecx
  40455d:	test   al,0x2a
  40455f:	mov    dh,0xbe
  404561:	inc    ebp
  404562:	fldenv ds:0x2607f3ab
  404568:	mov    dl,bh
  40456a:	sahf   
  40456b:	leave  
  40456c:	pop    edx
  40456d:	leave  
  40456e:	sbb    BYTE PTR [eax],cl
  404570:	pop    ds
  404571:	ffree  st(0)
  404573:	mov    esp,0xa0b7de78
  404578:	out    0x8a,eax
  40457a:	inc    DWORD PTR [eax+0x18]
  40457d:	sub    eax,0x66d4d5d
  404582:	add    ebx,DWORD PTR [edx]
  404584:	add    bh,BYTE PTR [edi+0x6]
  404587:	or     eax,0x6a321aa
  40458c:	outs   dx,DWORD PTR ds:[esi]
  40458d:	rol    DWORD PTR [di+0x6c],cl
  404591:	cmp    ah,ch
  404593:	inc    edx
  404594:	psrlq  mm0,QWORD PTR [edx-0x62253999]
  40459b:	ror    edi,1
  40459d:	les    ebp,FWORD PTR [edx]
  40459f:	cmp    DWORD PTR [esi-0x64],ecx
  4045a2:	scas   al,BYTE PTR es:[edi]
  4045a3:	dec    ecx
  4045a4:	int    0x60
  4045a6:	dec    edi
  4045a7:	cmp    bl,BYTE PTR [eax]
  4045a9:	dec    esp
  4045aa:	sbb    BYTE PTR [ecx-0x54],dl
  4045ad:	pop    esi
  4045ae:	sub    esi,DWORD PTR [ebx]
  4045b0:	mov    al,ds:0x43d0225b
  4045b5:	or     eax,0x8b6e2b46
  4045ba:	inc    ecx
  4045bb:	jno    0x404595
  4045bd:	cmp    dl,BYTE PTR [eax+0x67274d10]
  4045c3:	push   edx
  4045c4:	or     eax,0x99d8cbdc
  4045c9:	rcr    bl,0x47
  4045cc:	lahf   
  4045cd:	mov    bl,0x5f
  4045cf:	add    dl,dl
  4045d1:	mov    bh,0xc8
  4045d3:	cmp    bh,BYTE PTR [esi-0x534ab84a]
  4045d9:	inc    ecx
  4045da:	fld    TBYTE PTR [esi-0x718e83cb]
  4045e0:	hlt    
  4045e1:	mov    dl,dh
  4045e3:	call   0x6444d88
  4045e8:	mov    esi,0x6104b290
  4045ed:	les    ebp,FWORD PTR [edx-0x22]
  4045f0:	sbb    BYTE PTR [ecx+0x7c3fcf2e],bl
  4045f6:	out    dx,eax
  4045f7:	mov    eax,ds:0x7ca87835
  4045fc:	iret   
  4045fd:	pop    ebx
  4045fe:	dec    ebp
  4045ff:	bound  edi,QWORD PTR [ebx+0x4b]
  404602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404603:	pop    ss
  404604:	or     ecx,DWORD PTR [eax]
  404606:	mov    bh,0x38
  404608:	inc    edi
  404609:	fs push esi
  40460b:	(bad)  
  40460d:	(bad)
  404610:	push   0x32be7f47
  404615:	outs   dx,BYTE PTR ds:[esi]
  404616:	stc    
  404617:	std    
  404618:	icebp  
  404619:	mov    ecx,0x58207be3
  40461e:	jo     0x4045a1
  404620:	mov    dl,0xd4
  404622:	xor    eax,0x7c5cb171
  404627:	and    DWORD PTR [ecx+0x26],ecx
  40462a:	leave  
  40462b:	mov    WORD PTR [eax+0x46],ss
  40462e:	hlt    
  40462f:	mov    ds:0xfa7cc5ed,eax
  404634:	and    al,0x7f
  404636:	jae    0x40460f
  404638:	sbb    eax,0x39c473d3
  40463d:	out    0xc0,eax
  40463f:	inc    ebx
  404640:	pop    ss
  404641:	adc    ebp,ebp
  404643:	out    0xb5,al
  404645:	push   edi
  404646:	fcomp  DWORD PTR [eax+0x809312b]
  40464c:	mov    ebp,0x12a17dc4
  404651:	into   
  404652:	inc    ebp
  404653:	je     0x4046b2
  404655:	ror    DWORD PTR [edi],cl
  404657:	jl     0x404643
  404659:	xchg   ebx,eax
  40465a:	out    dx,eax
  40465b:	loop   0x404670
  40465d:	int3   
  40465e:	rcpps  xmm5,XMMWORD PTR [edx+eiz*2+0x73]
  404663:	push   esi
  404664:	dec    ecx
  404665:	out    dx,al
  404666:	jmp    0x404699
  404668:	sub    edi,edx
  40466a:	and    eax,0x799974c3
  40466f:	sub    BYTE PTR [eax-0x239210f3],cl
  404675:	jge    0x4046e4
  404677:	jle    0x4046c5
  404679:	cmovge ebx,DWORD PTR [edi-0x5451b7e9]
  404680:	sub    al,0x13
  404682:	fnsave [ecx]
  404684:	in     eax,0xd8
  404686:	lgs    ebp,FWORD PTR gs:[ecx-0x6599c097]
  40468e:	xor    BYTE PTR [ecx],dh
  404690:	repnz add al,0x0
  404693:	hlt    
  404694:	cld    
  404695:	xchg   ebx,eax
  404696:	in     al,dx
  404697:	sbb    al,0x22
  404699:	je     0x404706
  40469b:	adc    eax,ecx
  40469d:	sbb    eax,0x78d95fec
  4046a2:	jmp    0xf05f9e6e
  4046a7:	inc    ecx
  4046a8:	idiv   DWORD PTR [esi-0x45]
  4046ab:	fnstenv [edx-0x21]
  4046ae:	repz pop esi
  4046b0:	fwait
  4046b1:	dec    edi
  4046b2:	cmp    edx,esi
  4046b4:	mov    ds:0x3f963b15,eax
  4046b9:	fbld   TBYTE PTR ss:[esi+edi*8]
  4046bd:	and    DWORD PTR [edx+eiz*8+0x45],0xe02b2684
  4046c5:	add    al,BYTE PTR [eax]
  4046c7:	inc    eax
  4046c8:	arpl   WORD PTR [esi+0x4b],dx
  4046cb:	xchg   edi,eax
  4046cc:	mov    al,ds:0x5da9d2a6
  4046d1:	aam    0xef
  4046d3:	jo     0x404682
  4046d5:	bound  ebx,QWORD PTR [ebx]
  4046d7:	mov    cs,esp
  4046d9:	test   eax,0xbcb0e8ea
  4046de:	adc    dl,BYTE PTR [esi]
  4046e0:	in     eax,0xc4
  4046e2:	jp     0x4046ea
  4046e4:	mov    eax,0xe6afcd5a
  4046e9:	mov    WORD PTR [ecx-0x5a],ds
  4046ec:	inc    ecx
  4046ed:	fwait
  4046ee:	cwde   
  4046ef:	fisubr WORD PTR [edi]
  4046f1:	sub    ecx,ebp
  4046f3:	and    al,al
  4046f5:	jmp    0x7cb9:0x9dfb838b
  4046fc:	push   ds
  4046fd:	and    ebp,esp
  4046ff:	aas    
  404700:	imul   ebp,DWORD PTR [ebx+ebp*4-0x2d],0xffffffec
  404705:	ss or  eax,0x5f57269e
  40470b:	fdivr  DWORD PTR [ecx]
  40470d:	dec    edx
  40470e:	(bad)  
  40470f:	mov    edx,0x2117df88
  404714:	adc    BYTE PTR [eax],0x83
  404717:	sar    BYTE PTR ds:0xe7612426,cl
  40471d:	outs   dx,DWORD PTR ds:[esi]
  40471e:	jae    0x40474c
  404720:	inc    edx
  404721:	jp     0x404717
  404723:	test   al,0x7e
  404725:	push   ss
  404726:	xchg   esi,eax
  404727:	adc    ebp,DWORD PTR [edi-0x5b0b7a37]
  40472d:	out    dx,al
  40472e:	push   ebx
  40472f:	in     al,dx
  404730:	mov    DWORD PTR [eax+edi*1+0x29],ebp
  404734:	jmp    0x408eb677
  404739:	dec    edi
  40473a:	mov    bh,0x4f
  40473c:	add    dh,BYTE PTR [eax+0x79183f05]
  404742:	mov    dl,al
  404744:	xchg   esi,eax
  404745:	imul   ecx,DWORD PTR [esi+eax*1+0x400fec6a],0xfffffff1
  40474d:	mov    BYTE PTR [ebx-0x169fdfb0],al
  404753:	jecxz  0x4047a7
  404755:	mov    DWORD PTR [edx+0x63b67ecf],eax
  40475b:	jno    0x4047ba
  40475d:	sub    DWORD PTR [edx-0x68f7f1a1],esp
  404763:	push   esp
  404764:	leave  
  404765:	jmp    0x40477d
  404767:	test   eax,0xd0682f76
  40476c:	and    bl,BYTE PTR [ebx]
  40476e:	retf   0x19b4
  404771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404772:	inc    edx
  404773:	retf   0xdbc4
  404776:	cmp    BYTE PTR [edx+esi*8+0x62],ch
  40477a:	mov    ds:0x262d354c,eax
  40477f:	sub    ecx,DWORD PTR [esi]
  404781:	push   0xffffff98
  404783:	mov    ds:0xc3f4e2b6,eax
  404788:	lods   al,BYTE PTR ds:[esi]
  404789:	inc    esi
  40478a:	xchg   esp,eax
  40478b:	fmul   QWORD PTR [ecx-0x55b9ad1b]
  404791:	jmp    0x8e4397eb
  404796:	push   esi
  404797:	mov    ch,ah
  404799:	or     bl,BYTE PTR [edx]
  40479b:	inc    edx
  40479c:	jl     0x40479e
  40479e:	jno    0x40472a
  4047a0:	out    0x97,eax
  4047a2:	xchg   ebp,eax
  4047a3:	les    ecx,FWORD PTR [eax+0x75]
  4047a6:	out    0x7c,eax
  4047a8:	pop    ebp
  4047a9:	cwde   
  4047aa:	ret    
  4047ab:	ffree  st(3)
  4047ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047ae:	cmc    
  4047af:	mov    cl,BYTE PTR [ebx+0x22]
  4047b2:	mov    al,0xa8
  4047b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047b5:	inc    ebx
  4047b6:	inc    edi
  4047b7:	jno    0x40473e
  4047b9:	ins    DWORD PTR es:[edi],dx
  4047ba:	pop    edi
  4047bb:	jnp    0x404839
  4047bd:	nop
  4047be:	dec    eax
  4047bf:	ficom  DWORD PTR ss:[esi]
  4047c2:	loope  0x4047ad
  4047c4:	mov    esp,0x6c360e5f
  4047c9:	xchg   esp,eax
  4047ca:	outs   dx,BYTE PTR ds:[esi]
  4047cb:	cli    
  4047cc:	pop    ebp
  4047cd:	(bad)  
  4047ce:	addr16 ss es sahf 
  4047d2:	pop    ebp
  4047d3:	cmp    al,0xe
  4047d5:	sbb    al,0x0
  4047d7:	dec    edx
  4047d8:	or     al,BYTE PTR [edx]
  4047da:	mov    dl,0x37
  4047dc:	add    al,0x8a
  4047de:	and    DWORD PTR [ebx+0x57],0xffffffd5
  4047e2:	sub    eax,0x723ff3a
  4047e7:	repz xchg esp,eax
  4047e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047ea:	mov    dh,0x19
  4047ec:	mov    edx,0x293d766f
  4047f1:	cmp    esp,DWORD PTR [ebx+0x5d3197e3]
  4047f7:	xor    edi,DWORD PTR [esi-0x64]
  4047fa:	and    ah,bl
  4047fc:	cmp    al,0x89
  4047fe:	add    cl,BYTE PTR [ebx+0x86039e8]
  404804:	ins    DWORD PTR es:[edi],dx
  404805:	(bad)  
  404806:	test   al,0xb1
  404808:	and    ah,BYTE PTR [ebx+0x598a728]
  40480e:	nop
  40480f:	sbb    bl,BYTE PTR [eax-0x488d8106]
  404815:	jmp    0x4047c6
  404817:	ret    
  404818:	(bad)  
  404819:	cwde   
  40481a:	call   0x8578d4e3
  40481f:	mov    DWORD PTR [esi],edx
  404821:	push   esp
  404822:	pop    edx
  404823:	jmp    0x8ccf29b9
  404828:	jmp    0xef56:0xc87c126a
  40482f:	pusha  
  404830:	and    ebx,DWORD PTR [ecx-0x67]
  404833:	fiadd  DWORD PTR [edx+eiz*1-0x7]
  404837:	cdq    
  404838:	push   esi
  404839:	jns    0x4047c2
  40483b:	push   ebx
  40483c:	jnp    0x404816
  40483e:	mov    dl,0x78
  404840:	xchg   ebx,eax
  404841:	stos   DWORD PTR es:[edi],eax
  404842:	sub    ebp,DWORD PTR [ecx+0x23]
  404845:	sbb    dh,bl
  404847:	push   0xb
  404849:	test   DWORD PTR [ebx-0x18],0xea9db5f4
  404850:	mov    esp,0xad6a84c9
  404855:	outs   dx,BYTE PTR ds:[esi]
  404856:	pop    ecx
  404857:	xchg   BYTE PTR [edx-0x8440ba8],al
  40485d:	cs test eax,0x6bc0f881
  404863:	mov    DWORD PTR [ebp+0x7d5c5815],eax
  404869:	inc    ebp
  40486a:	cld    
  40486b:	cmp    ebp,DWORD PTR [ecx-0x1f]
  40486e:	into   
  40486f:	cdq    
  404870:	ret    
  404871:	(bad)  
  404872:	rcr    BYTE PTR [esi],cl
  404874:	jle    0x4048db
  404876:	pop    ds
  404877:	repz iret 
  404879:	loop   0x40485b
  40487b:	mov    ebx,0x54375811
  404880:	rcl    BYTE PTR [edx-0x7a66e5d3],1
  404886:	aad    0x26
  404888:	neg    DWORD PTR [ebx-0x36092c0b]
  40488e:	jge    0x40486f
  404890:	jmp    0x59130979
  404895:	int    0xe
  404897:	cs inc eax
  404899:	push   0xf2f6aa61
  40489e:	cld    
  40489f:	mov    al,0xf5
  4048a1:	jmp    0x8a2:0x9404cee6
  4048a8:	jp     0x40490d
  4048aa:	in     eax,0x4c
  4048ac:	out    0x9e,eax
  4048ae:	ret    
  4048af:	dec    edx
  4048b0:	in     al,0xc0
  4048b2:	inc    ebx
  4048b3:	xor    ch,BYTE PTR [edi]
  4048b5:	gs (bad) 
  4048b7:	rcr    DWORD PTR [ebp+0x1edd164],0x8b
  4048be:	inc    esp
  4048bf:	(bad)  
  4048c0:	out    0x73,eax
  4048c2:	hlt    
  4048c3:	jl     0x4048ab
  4048c5:	xor    eax,edx
  4048c7:	mov    ah,0x4e
  4048c9:	adc    BYTE PTR [edi-0x7551e8a],ah
  4048cf:	pushf  
  4048d0:	popa   
  4048d1:	push   esi
  4048d2:	jmp    0x40490a
  4048d4:	cmc    
  4048d5:	mov    bl,0x12
  4048d7:	outs   dx,BYTE PTR ds:[esi]
  4048d8:	dec    edi
  4048d9:	cmp    DWORD PTR [ebp-0x1],ebp
  4048dc:	pushf  
  4048dd:	cmp    DWORD PTR [ecx+0x4f],ecx
  4048e0:	test   BYTE PTR [eax],ch
  4048e2:	mov    edi,0x737f652
  4048e7:	sub    ebp,DWORD PTR [ecx+0x582e6004]
  4048ed:	lods   eax,DWORD PTR ds:[esi]
  4048ee:	lahf   
  4048ef:	fist   WORD PTR [esi-0x558bb88e]
  4048f5:	push   ebp
  4048f6:	js     0x40488c
  4048f8:	fcomi  st,st(3)
  4048fa:	fnstsw WORD PTR [ebx+esi*2+0x36]
  4048fe:	adc    esi,DWORD PTR [ebp+esi*2+0x70]
  404902:	mov    cl,0x74
  404904:	push   esp
  404905:	shl    ecx,cl
  404907:	inc    edi
  404908:	dec    ebp
  404909:	repz pop edx
  40490b:	inc    esi
  40490c:	sbb    eax,ebx
  40490e:	mov    bh,0xca
  404910:	xchg   edx,eax
  404911:	push   ecx
  404912:	(bad)  
  404913:	imul   ebx,DWORD PTR [edx+edx*8-0x2f347167],0xffffff98
  40491b:	xor    al,0x1f
  40491d:	cmc    
  40491e:	out    dx,al
  40491f:	jbe    0x4048b2
  404921:	ret    0xeee5
  404924:	fnsave [ecx-0x36f70611]
  40492a:	daa    
  40492b:	xor    DWORD PTR [ebx+0x2d],0x12
  40492f:	push   ss
  404930:	jg     0x40497c
  404932:	sbb    esp,DWORD PTR [edi]
  404934:	cmp    eax,0x664fe85e
  404939:	cmp    ah,BYTE PTR [edx-0x2d]
  40493c:	out    0xcd,al
  40493e:	or     BYTE PTR [eax+0x19000e46],cl
  404944:	cmp    ebp,eax
  404946:	aaa    
  404947:	jecxz  0x40494d
  404949:	add    edx,DWORD PTR [edi-0x1a21ed8a]
  40494f:	mov    fs,WORD PTR [eax+0xa3fc45b]
  404955:	jmp    0x4048db
  404957:	mov    dh,BYTE PTR [esi-0x8]
  40495a:	addr16 ror ebp,1
  40495d:	xor    eax,0xdeee0444
  404962:	or     BYTE PTR [esi+0x243d6d76],0xa8
  404969:	xchg   esp,eax
  40496a:	dec    esi
  40496b:	sub    al,0xaf
  40496d:	pop    eax
  40496e:	sbb    BYTE PTR [edx+0x523ea844],0x6a
  404975:	imul   ebp,ebp,0xffffffa8
  404978:	pop    ebp
  404979:	dec    eax
  40497a:	in     eax,dx
  40497b:	and    ecx,DWORD PTR ds:0xe7c4d890
  404981:	adc    esi,ebx
  404983:	(bad)  
  404984:	xor    edx,DWORD PTR [edi+ebp*4]
  404987:	jmp    0x404985
  404989:	sbb    BYTE PTR [ebx+0x23fd4138],cl
  40498f:	rcl    ch,cl
  404991:	jle    0x4049bf
  404993:	and    DWORD PTR gs:[ebx],esp
  404996:	ret    
  404997:	imul   eax
  404999:	faddp  st(4),st
  40499b:	test   al,0x4f
  40499d:	mov    ch,0x84
  40499f:	jg     0x4049a5
  4049a1:	and    ch,BYTE PTR [eax-0x7c]
  4049a4:	xor    al,0x12
  4049a6:	sti    
  4049a7:	loope  0x404a10
  4049a9:	push   0x44
  4049ab:	pusha  
  4049ac:	pop    edx
  4049ad:	cmc    
  4049ae:	in     eax,0x60
  4049b0:	popa   
  4049b1:	inc    edi
  4049b2:	mov    WORD PTR [edi],ss
  4049b4:	test   BYTE PTR [ebx-0x26b9f65f],dl
  4049ba:	xchg   edi,eax
  4049bb:	bound  eax,QWORD PTR [esi+esi*8-0x5f]
  4049bf:	cld    
  4049c0:	xlat   BYTE PTR ds:[ebx]
  4049c1:	je     0x4049cf
  4049c3:	push   ecx
  4049c4:	fmul   st(5),st
  4049c6:	icebp  
  4049c7:	in     al,0x40
  4049c9:	fstp   TBYTE PTR [ecx+edi*4-0x22]
  4049cd:	xchg   esi,eax
  4049ce:	cli    
  4049cf:	int3   
  4049d0:	add    cl,dh
  4049d2:	shl    DWORD PTR [edi+0x4b1368db],1
  4049d8:	in     al,dx
  4049d9:	fist   DWORD PTR [ebx+0x3b]
  4049dc:	sti    
  4049dd:	std    
  4049de:	test   al,0xf3
  4049e0:	mov    WORD PTR [esi+0x5db971e3],fs
  4049e6:	enter  0x1061,0x65
  4049ea:	inc    esi
  4049eb:	das    
  4049ec:	jl     0x4049a0
  4049ee:	pop    ss
  4049ef:	mov    edi,0x17b2028
  4049f4:	test   BYTE PTR [ebx],al
  4049f6:	sub    cl,bh
  4049f8:	sbb    eax,DWORD PTR [edx+eiz*8+0x40c7119c]
  4049ff:	cld    
  404a00:	add    BYTE PTR [ebx],0x99
  404a03:	push   edi
  404a04:	test   eax,ebp
  404a06:	xchg   ecx,eax
  404a07:	jno    0x404a79
  404a09:	je     0x404a44
  404a0b:	into   
  404a0c:	clc    
  404a0d:	div    BYTE PTR [ebx+0x23]
  404a10:	adc    eax,eax
  404a12:	mov    esi,0x382ce007
  404a17:	cmp    dh,dl
  404a19:	xor    BYTE PTR [ecx],bl
  404a1b:	push   edx
  404a1c:	jns    0x404a91
  404a1e:	(bad)  [esi+0x79fe1496]
  404a24:	test   BYTE PTR [ebx+0x1d69134c],bh
  404a2a:	jo     0x404a2c
  404a2c:	test   BYTE PTR [edi-0x628b0b6e],dh
  404a32:	fsub   DWORD PTR [esi]
  404a34:	call   0x4290:0x2cb513ab
  404a3b:	cld    
  404a3c:	repnz cmc 
  404a3e:	pop    esp
  404a3f:	jnp    0x404a1b
  404a41:	mov    al,ds:0xbe6376b3
  404a46:	arpl   WORD PTR [ebp-0x249f206f],bp
  404a4c:	mov    esi,0xce9ff4b5
  404a51:	sub    bh,al
  404a53:	mov    ah,0x43
  404a55:	outs   dx,BYTE PTR ds:[esi]
  404a56:	mov    bh,0x17
  404a58:	add    eax,0x746a5daa
  404a5d:	mov    ah,0xd2
  404a5f:	aam    0x2
  404a61:	xor    esp,DWORD PTR [ecx+0x79169379]
  404a67:	pop    edx
  404a68:	repnz pop esi
  404a6a:	cmp    dh,BYTE PTR [edi+0x3f33746f]
  404a70:	inc    esi
  404a71:	cmp    ebx,eax
  404a73:	inc    edx
  404a74:	add    al,0x97
  404a76:	dec    eax
  404a77:	sbb    al,0x28
  404a79:	fistp  WORD PTR [eax-0x38]
  404a7c:	xchg   edi,eax
  404a7d:	sar    al,0x74
  404a80:	imul   ecx,edi,0x845ab6d5
  404a86:	loope  0x404ae9
  404a88:	xor    DWORD PTR [ebx],edx
  404a8a:	and    ah,ch
  404a8c:	xchg   esi,eax
  404a8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a8e:	add    BYTE PTR [ebx-0x3c],ah
  404a91:	or     BYTE PTR [edx],0x68
  404a94:	sub    BYTE PTR [edx+0x41],bl
  404a97:	aas    
  404a98:	nop
  404a99:	push   0xffffffa9
  404a9b:	push   ecx
  404a9c:	dec    esi
  404a9d:	dec    ebx
  404a9e:	push   ebp
  404a9f:	lock bound ebp,QWORD PTR [esi+0x3a]
  404aa3:	ins    DWORD PTR es:[edi],dx
  404aa4:	sub    dh,BYTE PTR [ebp-0xac5c75c]
  404aaa:	add    DWORD PTR [ebp+esi*4-0x4ec3727e],0x2d
  404ab2:	xor    dl,BYTE PTR [eax-0x79]
  404ab5:	xchg   ecx,eax
  404ab6:	loope  0x404ae4
  404ab8:	sbb    eax,0xda28cd5b
  404abd:	jp     0x404b22
  404abf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ac0:	imul   edx,DWORD PTR [ebp-0x16],0xffffff98
  404ac4:	popf   
  404ac5:	fist   DWORD PTR [eax]
  404ac7:	cs mov edi,0x279dab8e
  404acd:	loope  0x404b47
  404acf:	fnsave ds:0xdd5292b7
  404ad5:	loop   0x404ad6
  404ad7:	sahf   
  404ad8:	daa    
  404ad9:	mov    eax,ds:0x8f30162f
  404ade:	and    eax,0x7460c5eb
  404ae3:	jle    0x404b3e
  404ae5:	in     eax,dx
  404ae6:	push   edx
  404ae7:	xor    al,0x30
  404ae9:	xchg   ecx,eax
  404aea:	pop    es
  404aeb:	inc    ebx
  404aec:	sub    ah,ah
  404aee:	mov    eax,ds:0x8becf3b
  404af3:	push   eax
  404af4:	mov    al,0x5a
  404af6:	or     ch,BYTE PTR [eax-0x726c63ca]
  404afc:	sbb    eax,0x9fac6c7f
  404b01:	cld    
  404b02:	sub    DWORD PTR [ecx+0x7bc2a69a],eax
  404b08:	les    edx,FWORD PTR [eax-0x70]
  404b0b:	mov    ebx,DWORD PTR ds:0x31a2bb0b
  404b11:	je     0x404aa7
  404b13:	inc    ebp
  404b14:	add    ebp,DWORD PTR [esp+ecx*1-0x5]
  404b18:	pop    ecx
  404b19:	dec    esi
  404b1a:	icebp  
  404b1b:	pop    edx
  404b1c:	push   esi
  404b1d:	sub    ecx,DWORD PTR [edx+0x6d043a7d]
  404b23:	push   cs
  404b24:	adc    bl,BYTE PTR [esi-0x753875a2]
  404b2a:	xchg   edx,eax
  404b2b:	pop    ds
  404b2c:	mov    ebp,esi
  404b2e:	in     eax,dx
  404b2f:	push   0xffffffc9
  404b31:	xor    DWORD PTR [esi+0x2],0x2306ec1f
  404b38:	scas   eax,DWORD PTR es:[edi]
  404b39:	mov    ecx,0xee0ca1d5
  404b3e:	push   cs
  404b3f:	clc    
  404b40:	sbb    eax,0x476f9564
  404b45:	lahf   
  404b46:	test   eax,0x752e4b62
  404b4b:	stos   BYTE PTR es:[edi],al
  404b4c:	retf   
  404b4d:	mov    ebp,0xe012ad1e
  404b52:	cmp    ecx,eax
  404b54:	fwait
  404b55:	cdq    
  404b56:	pop    edi
  404b57:	loopne 0x404b9a
  404b59:	in     ax,0x45
  404b5c:	sbb    bl,dh
  404b5e:	mov    ds:0xda5352a2,al
  404b63:	or     BYTE PTR [edx+0x53],al
  404b66:	mov    esi,0x91610533
  404b6b:	jecxz  0x404b59
  404b6d:	inc    edi
  404b6e:	lahf   
  404b6f:	push   0xffffffdb
  404b71:	inc    ebx
  404b72:	call   0x487:0x89fa1076
  404b79:	add    eax,0xbe1b4dc9
  404b7e:	push   ebx
  404b7f:	cmp    eax,0x8a1ceb7f
  404b84:	mov    bl,BYTE PTR [eax]
  404b86:	mov    DWORD PTR [ebx+edi*2],edi
  404b89:	arpl   WORD PTR [edx+ebp*8-0x5cd59057],dx
  404b90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b91:	cmp    DWORD PTR [edx],ecx
  404b93:	dec    edx
  404b94:	pop    ebp
  404b95:	fs and al,0xec
  404b98:	(bad)  
  404b99:	std    
  404b9a:	pushf  
  404b9b:	ret    
  404b9c:	sbb    bh,BYTE PTR [edi]
  404b9e:	iret   
  404b9f:	xchg   edx,eax
  404ba0:	and    eax,0x96206a9a
  404ba5:	add    al,0x62
  404ba7:	clc    
  404ba8:	jg     0x404bdd
  404baa:	mov    ch,0xc9
  404bac:	xlat   BYTE PTR ds:[ebx]
  404bad:	in     al,dx
  404bae:	mov    al,0x15
  404bb0:	lds    eax,FWORD PTR ds:0x4c0ec65
  404bb6:	jb     0x404bd3
  404bb8:	xchg   ebx,eax
  404bb9:	mov    BYTE PTR [eax],bl
  404bbb:	sub    bh,BYTE PTR [eax+0x7b73b20e]
  404bc1:	repnz mov cl,0xc7
  404bc4:	xchg   esp,eax
  404bc5:	jmp    0x404bf9
  404bc7:	shl    BYTE PTR [edi-0x6dd240e6],0xfa
  404bce:	cmp    eax,0xb39c24fc
  404bd3:	out    dx,al
  404bd4:	stos   BYTE PTR es:[edi],al
  404bd5:	sub    BYTE PTR [ebx+0x58],0x60
  404bd9:	addr16 jo 0x404b66
  404bdc:	mov    BYTE PTR [esi-0x7cf08544],bl
  404be2:	push   ebp
  404be3:	or     eax,0xb2dc75e8
  404be8:	jne    0x404c0e
  404bea:	into   
  404beb:	push   edi
  404bec:	add    ecx,esp
  404bee:	sub    DWORD PTR [ecx],ebp
  404bf0:	jno    0x404b9a
  404bf2:	loop   0x404c57
  404bf4:	in     eax,dx
  404bf5:	add    al,0xc
  404bf7:	mov    eax,ds:0xd74e2089
  404bfc:	or     dh,BYTE PTR [edx+0x51953a]
  404c02:	lock in al,dx
  404c04:	mov    edi,0xf851464f
  404c09:	pop    ecx
  404c0a:	xor    al,BYTE PTR [ecx]
  404c0c:	in     al,0xb9
  404c0e:	test   edi,eax
  404c10:	outs   dx,DWORD PTR ds:[esi]
  404c11:	dec    edi
  404c12:	sub    bh,BYTE PTR [esi-0x34]
  404c15:	addr16 (bad) 
  404c17:	cmp    esi,ebp
  404c19:	xchg   esp,eax
  404c1a:	sub    al,0xec
  404c1c:	add    esp,esp
  404c1e:	xchg   ebx,eax
  404c1f:	imul   edx,DWORD PTR [edi+0x7d],0x41ef9ff3
  404c26:	inc    edi
  404c27:	mov    ah,0x38
  404c29:	scas   al,BYTE PTR es:[edi]
  404c2a:	cs jo  0x404c67
  404c2d:	and    eax,0x51cc087b
  404c32:	ret    0xe139
  404c35:	jecxz  0x404bd6
  404c37:	ror    BYTE PTR ds:0x14eabac0,cl
  404c3d:	xchg   DWORD PTR [esi-0x35],eax
  404c40:	add    dh,BYTE PTR [edx-0x679ff879]
  404c46:	pop    ds
  404c47:	cmp    al,0xa4
  404c49:	jae    0x404c5e
  404c4b:	mov    ebp,0x842cfa8c
  404c50:	sbb    DWORD PTR [ebp+0x14],ecx
  404c53:	sbb    DWORD PTR [ebp+0x54],ebp
  404c56:	arpl   WORD PTR [ecx+0x52],cx
  404c59:	xchg   edx,eax
  404c5a:	pop    ss
  404c5b:	dec    ecx
  404c5c:	xchg   edx,eax
  404c5d:	jmp    0x404c65
  404c5f:	xor    cl,bh
  404c61:	cmp    DWORD PTR [eax],edx
  404c63:	shrd   DWORD PTR [ecx-0x142f7861],edi,0xb5
  404c6b:	ret    0x981
  404c6e:	je     0x404c01
  404c70:	xor    esi,DWORD PTR es:[ebp-0x691da65a]
  404c77:	push   ds
  404c78:	inc    edx
  404c79:	and    dh,BYTE PTR [ebx+edx*1-0x2ac0cfd9]
  404c80:	xor    BYTE PTR [ebx],ah
  404c82:	sbb    eax,0xfafaee05
  404c87:	scas   eax,DWORD PTR es:[edi]
  404c88:	retf   
  404c89:	outs   dx,DWORD PTR ds:[esi]
  404c8a:	int    0x85
  404c8c:	shl    DWORD PTR [ecx+0x48471dbf],1
  404c92:	out    dx,eax
  404c93:	sahf   
  404c94:	test   BYTE PTR [edx-0x2d],ah
  404c97:	loop   0x404ce1
  404c99:	mul    BYTE PTR [ecx+0x71]
  404c9c:	jle    0x404cb5
  404c9e:	jl     0x404c2e
  404ca0:	fistp  QWORD PTR [edx+0x16]
  404ca3:	call   FWORD PTR [edi-0x4]
  404ca6:	xor    DWORD PTR ds:0x5556a363,0xa
  404cad:	jmp    0xbeef3fc6
  404cb2:	jae    0x404cb7
  404cb4:	push   ebx
  404cb5:	je     0x404d28
  404cb7:	pushf  
  404cb8:	sbb    edx,DWORD PTR [eax-0x4e]
  404cbb:	xor    eax,0xd7b60ad2
  404cc0:	sub    eax,0xa4b7c54b
  404cc5:	sbb    ah,BYTE PTR [edi]
  404cc7:	out    0x4a,eax
  404cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cca:	mov    esp,0x57be1a1
  404ccf:	scas   al,BYTE PTR es:[edi]
  404cd0:	fnstcw WORD PTR [ebp-0x679a6b28]
  404cd6:	fld    TBYTE PTR [edx-0x43fc098b]
  404cdc:	call   FWORD PTR [edi]
  404cde:	xor    cl,ah
  404ce0:	dec    si
  404ce2:	fist   DWORD PTR [edx-0xa]
  404ce5:	hlt    
  404ce6:	jmp    0x404c9b
  404ce8:	sar    BYTE PTR [eax],0xef
  404ceb:	gs xchg esi,eax
  404ced:	jle    0x404c93
  404cef:	mov    eax,DWORD PTR [edi]
  404cf1:	daa    
  404cf2:	xor    al,0x2a
  404cf4:	add    edx,ebp
  404cf6:	mov    DWORD PTR [edi+0x39],edi
  404cf9:	cmp    al,0x52
  404cfb:	outs   dx,DWORD PTR ds:[esi]
  404cfc:	dec    esp
  404cfd:	jge    0x404d00
  404cff:	popf   
  404d00:	pop    edi
  404d01:	test   al,0xbc
  404d03:	xor    eax,edx
  404d05:	lock or al,0x63
  404d08:	mov    dl,0xa9
  404d0a:	ins    BYTE PTR es:[edi],dx
  404d0b:	clc    
  404d0c:	xor    eax,0xc32f305a
  404d11:	stos   DWORD PTR es:[edi],eax
  404d12:	fld    QWORD PTR [edi+0x1f]
  404d15:	das    
  404d16:	jmp    0x404caa
  404d18:	add    eax,0xd2afa7b3
  404d1d:	mov    edx,0xa362aef2
  404d22:	xor    eax,0x91db9e6a
  404d27:	leave  
  404d28:	jle    0x404d96
  404d2a:	pop    edi
  404d2b:	not    BYTE PTR [edi+0xf4587ec]
  404d31:	cmp    eax,0x1ceeb46c
  404d36:	imul   edx,DWORD PTR [ebx+0x4811ebed],0xce9b051f
  404d40:	pop    es
  404d41:	sahf   
  404d42:	xchg   edx,eax
  404d43:	js     0x404d6b
  404d45:	and    al,0x35
  404d47:	icebp  
  404d48:	lods   eax,DWORD PTR ds:[esi]
  404d49:	in     eax,dx
  404d4a:	(bad)  
  404d4b:	fstp   QWORD PTR [eax+0x5]
  404d4e:	nop
  404d4f:	jns    0x404ce4
  404d51:	sub    al,0x7b
  404d53:	and    al,0x45
  404d55:	mov    ch,0x8c
  404d57:	pop    eax
  404d58:	sahf   
  404d59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d5a:	adc    al,0xff
  404d5c:	add    al,0x73
  404d5e:	stos   DWORD PTR es:[edi],eax
  404d5f:	xchg   edx,eax
  404d60:	jno    0x404d30
  404d62:	lods   al,BYTE PTR ds:[esi]
  404d63:	mov    al,0x9
  404d65:	add    al,0x77
  404d67:	or     eax,esp
  404d69:	add    eax,0x6d199456
  404d6e:	pop    ds
  404d6f:	nop
  404d70:	retf   
  404d71:	fdivp  st(7),st
  404d73:	fsubr  DWORD PTR [eax+0x213a528]
  404d79:	icebp  
  404d7a:	pop    ss
  404d7b:	dec    ebp
  404d7c:	pop    edi
  404d7d:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d7f:	jno    0x404d1d
  404d81:	sbb    edi,DWORD PTR [ebp-0x3d5a29fd]
  404d87:	inc    ebx
  404d88:	push   edx
  404d89:	mov    ecx,0xfa5879ad
  404d8e:	jae    0x404dca
  404d90:	cmp    DWORD PTR [edi-0x44003620],esp
  404d96:	pop    ebx
  404d97:	(bad)
  404d9b:	sub    BYTE PTR [ebp+edi*1+0x68],ch
  404d9f:	sub    ebx,DWORD PTR ds:0xa096b302
  404da5:	scas   eax,DWORD PTR es:[edi]
  404da6:	mov    ds:0x192b7ccd,eax
  404dab:	in     al,0xa1
  404dad:	adc    DWORD PTR [ebx],ecx
  404daf:	lds    ebp,FWORD PTR [esi-0x3c]
  404db2:	sti    
  404db3:	jecxz  0x404dff
  404db5:	lods   al,BYTE PTR ds:[esi]
  404db6:	mov    esi,0xff0cbea3
  404dbb:	fwait
  404dbc:	in     al,dx
  404dbd:	and    al,BYTE PTR [ecx-0x12e34f01]
  404dc3:	stos   BYTE PTR es:[di],al
  404dc5:	ret    0x8299
  404dc8:	sub    cl,dh
  404dca:	rol    DWORD PTR [ebp-0x45dfcba7],1
  404dd0:	sub    ah,BYTE PTR [ebx-0x413f02e2]
  404dd6:	xchg   ecx,eax
  404dd7:	pop    edi
  404dd8:	loop   0x404dc5
  404dda:	jmp    0x8722:0xf977174
  404de1:	aaa    
  404de2:	and    ch,BYTE PTR [edx+0x3c]
  404de5:	imul   eax,DWORD PTR [eax+edi*4],0xffffffde
  404de9:	mov    cl,0x6b
  404deb:	push   0x5b
  404ded:	inc    esi
  404dee:	out    dx,eax
  404def:	pop    ebp
  404df0:	cwde   
  404df1:	sar    BYTE PTR [eax-0x24],0xc5
  404df5:	cmc    
  404df6:	push   cs
  404df7:	jl     0x404d96
  404df9:	dec    edi
  404dfa:	push   esi
  404dfb:	and    bh,BYTE PTR [ebx-0x1f24d67d]
  404e01:	fsubrp st(3),st
  404e03:	jo     0x404e70
  404e05:	inc    esp
  404e06:	adc    al,0x20
  404e08:	mov    cl,BYTE PTR [eax+0x3a9ffbde]
  404e0e:	(bad)  
  404e0f:	mov    bl,0x52
  404e11:	test   eax,0x86aafd02
  404e16:	mov    esp,0x9883a50a
  404e1b:	cmp    al,BYTE PTR [eax]
  404e1d:	dec    eax
  404e1e:	push   cs
  404e1f:	icebp  
  404e20:	mov    DWORD PTR [eax+edx*2],ecx
  404e23:	mov    ds:0x7a5b7392,eax
  404e28:	(bad)  
  404e29:	shl    ch,1
  404e2b:	xor    cl,bh
  404e2d:	sub    DWORD PTR [edi-0x1fa597b7],ecx
  404e33:	fdiv   DWORD PTR [edx+ebp*4-0x1]
  404e37:	mov    ds:0x914f169f,al
  404e3c:	jno    0x404e77
  404e3e:	mov    ah,0x7e
  404e40:	(bad)  
  404e41:	mov    cl,0xcb
  404e43:	or     bh,dl
  404e45:	jns    0x404e04
  404e47:	sub    eax,0x900437b9
  404e4c:	cs inc edi
  404e4e:	and    al,0xbe
  404e50:	sar    edi,0x96
  404e53:	test   al,0x3
  404e55:	cld    
  404e56:	lds    ebx,FWORD PTR ss:[edi+0x7e484823]
  404e5d:	popf   
  404e5e:	leave  
  404e5f:	and    BYTE PTR [edx+0x4a],cl
  404e62:	xor    ch,dl
  404e64:	(bad)  
  404e65:	ja     0x404e2a
  404e67:	mov    esp,0xa6709dd0
  404e6c:	jp     0x404eac
  404e6e:	lods   eax,DWORD PTR ds:[esi]
  404e6f:	call   0x8d89ee25
  404e74:	mov    edi,0x8436dff9
  404e79:	fisubr WORD PTR [ebx+ecx*8+0x6a360ef2]
  404e80:	mov    ds:0x20341c79,eax
  404e85:	inc    esi
  404e86:	mov    esp,0x5e4169ff
  404e8b:	and    DWORD PTR [eax-0x6b],esp
  404e8e:	call   0xcbf1f0bc
  404e93:	push   esp
  404e94:	or     BYTE PTR [ecx+edi*8-0xd499aa3],dl
  404e9b:	and    BYTE PTR [edi-0x450ac8d4],bh
  404ea1:	popf   
  404ea2:	add    eax,0x97cad590
  404ea7:	inc    esi
  404ea8:	(bad)  
  404ea9:	(bad)  
  404eab:	cmp    al,BYTE PTR [ebx+0x7c]
  404eae:	push   ecx
  404eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eb0:	mov    dl,BYTE PTR [eax+0x10]
  404eb3:	or     DWORD PTR [esi],0xf64c5d7e
  404eb9:	xor    DWORD PTR ss:[edi-0x4f5f168c],eax
  404ec0:	(bad)  
  404ec2:	imul   edx,DWORD PTR [esi],0xb536bfaf
  404ec8:	inc    esi
  404ec9:	and    esi,DWORD PTR [edi+0x51]
  404ecc:	sbb    bh,BYTE PTR [edx]
  404ece:	pop    esp
  404ecf:	sub    eax,0xd4cd2c2f
  404ed4:	sbb    al,0x3e
  404ed6:	std    
  404ed7:	lods   al,BYTE PTR ds:[esi]
  404ed8:	data16 add al,al
  404edb:	int    0xc7
  404edd:	jmp    0x404e9e
  404edf:	gs retf 
  404ee1:	mov    ecx,0x9e985ed4
  404ee6:	xor    al,0xc4
  404ee8:	mov    ch,0xda
  404eea:	in     eax,0xe5
  404eec:	push   edi
  404eed:	ror    bh,cl
  404eef:	pop    edi
  404ef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ef1:	out    0xe,al
  404ef3:	(bad)  
  404ef4:	loop   0x404e9c
  404ef6:	inc    esp
  404ef7:	call   0x2c922f29
  404efc:	xor    BYTE PTR [esi+0x4b04ac31],0x6e
  404f03:	adc    al,BYTE PTR [ecx+0x55e719de]
  404f09:	add    al,0x52
  404f0b:	les    ecx,FWORD PTR [ebx]
  404f0d:	adc    DWORD PTR [edx],edi
  404f0f:	and    al,ch
  404f11:	retf   0x9377
  404f14:	in     eax,0xa6
  404f16:	dec    ebp
  404f17:	in     eax,0xcd
  404f19:	das    
  404f1a:	bnd jbe 0x404f86
  404f1d:	xchg   esi,eax
  404f1e:	pusha  
  404f1f:	mov    al,ds:0x188108e
  404f24:	retf   0xec6e
  404f27:	push   ebp
  404f28:	and    esi,0x4b
  404f2b:	sub    BYTE PTR [ebp+0x2eac19de],0x22
  404f32:	js     0x404ee5
  404f34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f35:	dec    edi
  404f36:	(bad)  
  404f37:	idiv   cl
  404f39:	and    edx,edi
  404f3b:	pop    ebp
  404f3c:	lea    edx,[edi-0x10]
  404f3f:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  404f41:	in     eax,0xd8
  404f43:	add    BYTE PTR [eax+0x3d],bh
  404f46:	sti    
  404f47:	or     esp,DWORD PTR [esi-0x75a22570]
  404f4d:	out    0x18,al
  404f4f:	scas   eax,DWORD PTR es:[edi]
  404f50:	sar    BYTE PTR [ebx-0x50f85745],1
  404f56:	fwait
  404f57:	test   eax,0x295518e4
  404f5c:	aaa    
  404f5d:	sub    eax,0xc32eb2a9
  404f62:	or     eax,0xf3b4224a
  404f67:	repz dec esp
  404f69:	mov    al,0x61
  404f6b:	gs push cs
  404f6d:	push   cs
  404f6e:	cmp    DWORD PTR [ecx+ebp*4],0xebd43b16
  404f75:	ds test al,0xb9
  404f78:	addr16 cdq 
  404f7a:	shl    DWORD PTR [esi-0x16675484],cl
  404f80:	jb     0x404f11
  404f82:	ffree  st(5)
  404f84:	mov    dh,0x5
  404f86:	enter  0x6689,0x86
  404f8a:	xlat   BYTE PTR ds:[ebx]
  404f8b:	dec    ecx
  404f8c:	and    eax,0xd7af53d2
  404f91:	xchg   esp,eax
  404f92:	xor    al,0x34
  404f94:	ja     0x404f30
  404f96:	adc    eax,0x4f1fb296
  404f9b:	pop    ebx
  404f9c:	popf   
  404f9d:	and    esi,esi
  404f9f:	imul   edi,DWORD PTR ds:0x1102397e,0x967b2b58
  404fa9:	dec    ebx
  404faa:	xor    eax,0x18d44706
  404faf:	and    BYTE PTR [edi-0x2645a9f1],cl
  404fb5:	jecxz  0x404fe7
  404fb7:	pop    eax
  404fb8:	popf   
  404fb9:	push   eax
  404fba:	std    
  404fbb:	push   ebp
  404fbc:	js     0x405020
  404fbe:	inc    ebx
  404fbf:	(bad)  [eax]
  404fc1:	jo     0x404f9e
  404fc3:	mov    ah,0x2b
  404fc5:	aas    
  404fc6:	in     al,0xb8
  404fc8:	mov    cl,0x79
  404fca:	cmp    eax,0x8bb6b99f
  404fcf:	clc    
  404fd0:	push   0x4d
  404fd2:	call   0x19bd:0x58968203
  404fd9:	inc    edi
  404fda:	jnp    0x404fc7
  404fdc:	repz mov ch,0x57
  404fdf:	stos   BYTE PTR es:[edi],al
  404fe0:	add    al,0x5b
  404fe3:	sbb    ecx,DWORD PTR [esi-0xe470c3d]
  404fe9:	jmp    0x404fb2
  404feb:	imul   edi,DWORD PTR [eax+0x530fc75c],0xb
  404ff2:	call   0xd60f5456
  404ff7:	or     al,0x62
  404ffa:	fst    DWORD PTR [ebp-0x1]
  404ffd:	(bad)  
  404ffe:	jl     0x404f8a
  405000:	loope  0x404fbc
  405002:	aad    0x83
  405004:	mov    BYTE PTR [eax-0x61c7143a],bl
  40500a:	out    0xba,al
  40500c:	and    al,0x5
  40500e:	push   edx
  40500f:	pop    ebx
  405010:	or     BYTE PTR [ebx-0x4d],bl
  405013:	pop    esi
  405014:	imul   edx,DWORD PTR [eax-0x4c88c62d],0xffffffcb
  40501b:	scas   al,BYTE PTR es:[edi]
  40501c:	adc    DWORD PTR [ebx-0x56e965a9],edi
  405022:	ss leave 
  405024:	cwde   
  405025:	xchg   ebp,eax
  405026:	xchg   edi,eax
  405027:	or     al,0xc2
  405029:	imul   eax,DWORD PTR [edi],0x88ba4c85
  40502f:	push   edi
  405030:	or     BYTE PTR ds:0xc0e43e7a,0xa0
  405037:	bound  esi,QWORD PTR [ebp-0x7fd57351]
  40503d:	in     al,dx
  40503e:	cdq    
  40503f:	sbb    DWORD PTR [ecx],esi
  405041:	push   ss
  405042:	ror    DWORD PTR [edx-0x72c5ddfe],cl
  405048:	mov    ah,0x73
  40504a:	add    BYTE PTR [ebp+0x5cfdb104],dl
  405050:	mov    cs,WORD PTR [edx+0x7e]
  405053:	and    ecx,DWORD PTR [ecx-0x66]
  405056:	push   0x175eb029
  40505b:	sub    DWORD PTR [edi],eax
  40505d:	mov    ch,0x8e
  40505f:	sub    DWORD PTR [edi],ebx
  405061:	bound  ecx,QWORD PTR [edx-0x1dc96d6f]
  405067:	ss push ecx
  405069:	jne    0x405050
  40506b:	shr    BYTE PTR [ebp-0x664f3045],0x95
  405072:	jbe    0x40506f
  405074:	xor    ch,ch
  405076:	inc    esi
  405077:	mov    edx,0x774bc4b9
  40507c:	arpl   di,bx
  40507e:	lea    esp,[ecx-0x47]
  405081:	dec    esi
  405082:	call   DWORD PTR [ecx+0x2e5abb13]
  405088:	aad    0xff
  40508a:	test   al,0xd2
  40508c:	add    DWORD PTR [edi-0x39],esp
  40508f:	stos   DWORD PTR es:[edi],eax
  405090:	push   ds
  405091:	jecxz  0x405084
  405093:	jns    0x405033
  405095:	jns    0x12b6cf20
  40509b:	pop    edx
  40509c:	fisttp WORD PTR [esi+0x546ea06c]
  4050a2:	and    ebp,ebx
  4050a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050a5:	mov    ?,esi
  4050a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050a8:	and    DWORD PTR [edx+0x35],esp
  4050ab:	mov    ds:0x18c1fa0e,eax
  4050b0:	in     eax,dx
  4050b1:	fsub   DWORD PTR [ecx+0x30]
  4050b4:	jmp    0x7e16:0x75021878
  4050bb:	fisttp DWORD PTR [eax+0x59]
  4050be:	out    dx,al
  4050bf:	add    al,0x1b
  4050c1:	xchg   edi,eax
  4050c2:	jmp    0xfd8a4588
  4050c7:	mov    eax,0xa94b78b
  4050cc:	mov    edi,0x62136628
  4050d1:	sahf   
  4050d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050d3:	imul   eax,ebp,0xe95b4395
  4050d9:	fidivr WORD PTR [esi+edi*2+0x51]
  4050dd:	adc    bl,0x80
  4050e0:	xor    eax,0xc87364c3
  4050e5:	popa   
  4050e6:	mov    bh,BYTE PTR [eax]
  4050e8:	loopne 0x40512f
  4050ea:	sahf   
  4050eb:	leave  
  4050ec:	fnstsw WORD PTR [eax]
  4050ee:	sbb    cl,BYTE PTR [edx-0x13]
  4050f1:	add    eax,0xd966c5a7
  4050f6:	xchg   DWORD PTR [ebp+0x7d224ab6],ebp
  4050fc:	clc    
  4050fd:	loop   0x405141
  4050ff:	inc    edi
  405100:	faddp  st(7),st
  405102:	mov    cl,0xec
  405104:	mov    ds:0xfb59e970,eax
  405109:	adc    eax,edi
  40510b:	sbb    ebx,DWORD PTR [ebp+0x6]
  40510e:	jp     0x40512e
  405110:	pusha  
  405111:	inc    ebx
  405112:	outs   dx,BYTE PTR ds:[esi]
  405113:	(bad)  
  405114:	test   eax,0x3182323e
  405119:	dec    eax
  40511a:	cwde   
  40511b:	add    BYTE PTR [esi+edx*4],0x1d
  40511f:	stc    
  405120:	xor    eax,0xcdc86396
  405125:	add    ebp,edx
  405127:	inc    ebp
  405128:	retf   
  405129:	xchg   esi,eax
  40512a:	leave  
  40512b:	shr    cl,0xe1
  40512e:	in     eax,dx
  40512f:	loopne 0x405144
  405131:	push   edx
  405132:	xor    DWORD PTR [edx-0x383c543c],edi
  405138:	adc    bl,ch
  40513a:	push   0xffffffd1
  40513c:	mov    ds:0xa9286fa5,al
  405141:	xchg   esi,eax
  405142:	or     eax,0xaf53390a
  405147:	call   0x2907:0xd28172d9
  40514e:	in     eax,0xd2
  405150:	call   0xf0ed5e9
  405155:	dec    edx
  405156:	fld    TBYTE PTR [ebp-0x1c]
  405159:	(bad)  
  40515a:	ja     0x40512f
  40515c:	in     al,0x46
  40515e:	dec    eax
  40515f:	xor    BYTE PTR [ebp+0x23],dh
  405162:	jle    0x40519d
  405164:	push   0xffffff96
  405166:	clc    
  405167:	sbb    DWORD PTR [esi],0x6c10b286
  40516d:	xchg   esi,eax
  40516e:	ret    0xaba9
  405171:	xor    ch,dl
  405173:	test   eax,0x8e70901e
  405178:	leave  
  405179:	(bad)  
  40517b:	jbe    0x4051b7
  40517d:	adc    dl,al
  40517f:	push   ecx
  405180:	lods   eax,DWORD PTR ds:[esi]
  405181:	out    0xa6,eax
  405183:	out    dx,al
  405184:	ja     0x405158
  405186:	pop    ds
  405187:	xor    ecx,DWORD PTR [edx+0xd]
  40518a:	push   0x1d7de5ab
  40518f:	ins    DWORD PTR es:[edi],dx
  405190:	xor    DWORD PTR [ecx],ecx
  405192:	xor    al,0xee
  405194:	mov    al,ds:0x9577491
  405199:	push   cs
  40519a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40519b:	add    ebp,edx
  40519d:	xor    al,0x73
  40519f:	idiv   BYTE PTR [ecx]
  4051a1:	int3   
  4051a2:	cmp    BYTE PTR [edx-0x150c7716],bh
  4051a8:	out    dx,eax
  4051a9:	push   edi
  4051aa:	pop    ebx
  4051ab:	je     0x4051d9
  4051ad:	jbe    0x4051c4
  4051af:	pop    ebx
  4051b0:	sbb    al,0x69
  4051b2:	ret    
  4051b3:	xchg   DWORD PTR [ebp+0x3dd4a72],edi
  4051b9:	out    0x29,al
  4051bb:	outs   dx,DWORD PTR ds:[esi]
  4051bc:	mov    esp,0xe3e540a9
  4051c1:	dec    edx
  4051c2:	loope  0x4051e8
  4051c4:	int    0x8e
  4051c6:	in     al,dx
  4051c7:	inc    esp
  4051c8:	(bad)  
  4051c9:	aam    0x53
  4051cb:	mov    al,0xf7
  4051cd:	push   0xffffffb9
  4051cf:	bound  esp,QWORD PTR [ecx+edx*2]
  4051d2:	jmp    0x405185
  4051d4:	mov    dl,0xf6
  4051d6:	les    edi,FWORD PTR [ebx]
  4051d8:	icebp  
  4051d9:	test   DWORD PTR [esi+ebp*2],edi
  4051dc:	aad    0x87
  4051de:	pop    es
  4051df:	mov    es,edi
  4051e1:	sub    al,0x7b
  4051e3:	adc    BYTE PTR [edi],dl
  4051e5:	sbb    BYTE PTR [ebx+edx*1-0x6945b3c8],al
  4051ec:	inc    ecx
  4051ed:	imul   ecx,esi,0x72
  4051f0:	pop    ds
  4051f1:	xor    DWORD PTR [esi+ebp*2-0x3f797b37],esp
  4051f8:	rol    DWORD PTR [ecx],cl
  4051fa:	push   esi
  4051fb:	inc    ecx
  4051fc:	loope  0x40526b
  4051fe:	ret    0xd2a9
  405201:	push   ds
  405202:	mov    DWORD PTR [esi],ebx
  405204:	xchg   esp,eax
  405205:	cmp    bh,BYTE PTR [ecx-0x24980923]
  40520b:	out    0xa3,al
  40520d:	out    0x83,al
  40520f:	adc    eax,0x9c2629a7
  405214:	bnd jns 0x4051f7
  405217:	mov    ecx,0x3277c33e
  40521c:	fs push 0x284c6a91
  405222:	loope  0x405233
  405224:	cdq    
  405225:	in     al,dx
  405226:	push   ebx
  405227:	scas   al,BYTE PTR es:[edi]
  405228:	inc    ebp
  405229:	adc    eax,0x2ebc2642
  40522e:	or     dh,cl
  405230:	sub    al,0xe4
  405232:	push   es
  405233:	xchg   edi,eax
  405234:	push   esi
  405235:	dec    esp
  405236:	and    DWORD PTR [eax+0x41],ebp
  405239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40523a:	lahf   
  40523b:	bound  esp,QWORD PTR [edx-0x5b65142]
  405241:	mov    ch,0x92
  405243:	int3   
  405244:	cmp    al,0x7b
  405246:	ins    BYTE PTR es:[edi],dx
  405247:	cld    
  405248:	sti    
  405249:	mov    edx,0xf1a23d60
  40524e:	sub    BYTE PTR [edx],ch
  405250:	pop    edi
  405251:	mov    esp,0x96e70129
  405256:	imul   edi,DWORD PTR [eax-0x75d50146],0xfffffff9
  40525d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40525e:	(bad)  
  40525f:	mov    DWORD PTR [edx+eiz*8-0x409ad16f],ebx
  405266:	mov    edx,0x8c2ed9c8
  40526b:	imul   esi,ebp,0xffffffc4
  40526e:	mov    bh,0xff
  405270:	xchg   esi,eax
  405271:	dec    esi
  405272:	int3   
  405273:	mov    esi,0x8d5a1b3b
  405278:	(bad)  
  405279:	mov    al,ds:0xa6f65b46
  40527e:	mov    ch,cl
  405280:	cmp    eax,0xda8e9c53
  405285:	sub    eax,0x608e8ad5
  40528a:	pop    esi
  40528b:	enter  0xa4ee,0xf2
  40528f:	push   ss
  405290:	sbb    ecx,DWORD PTR [ebx]
  405292:	and    BYTE PTR [eax],ch
  405294:	jne    0x405264
  405296:	retf   0x7b02
  405299:	fwait
  40529a:	add    DWORD PTR [edi-0x67],edi
  40529d:	sbb    BYTE PTR [ebp-0x2a],0x6
  4052a1:	adc    ch,bh
  4052a3:	(bad)  
  4052a4:	pop    ds
  4052a5:	mov    dh,0x41
  4052a7:	dec    ebp
  4052a8:	jmp    0x405298
  4052aa:	pushf  
  4052ab:	mov    bh,0xf4
  4052ad:	mov    ah,0x36
  4052af:	data16 jns 0x405287
  4052b2:	adc    ch,al
  4052b4:	dec    esp
  4052b5:	sbb    DWORD PTR [eax],0x5e
  4052b8:	fld    TBYTE PTR [edi+0x45]
  4052bb:	push   es
  4052bc:	sub    dh,BYTE PTR [esp+esi*2]
  4052bf:	jle    0x4052bf
  4052c1:	cmp    WORD PTR [edi],si
  4052c4:	js     0x4052fd
  4052c6:	outs   dx,DWORD PTR ds:[esi]
  4052c7:	sbb    eax,0x8dc0673b
  4052cd:	add    ch,BYTE PTR ds:0xb9e952ab
  4052d3:	ds xchg ebx,eax
  4052d5:	es out dx,eax
  4052d7:	sbb    dl,BYTE PTR [ebx-0x26]
  4052da:	data16 add BYTE PTR [edx+ebp*4+0x17],bl
  4052df:	xor    edi,DWORD PTR [edx+0x443bc27a]
  4052e5:	adc    DWORD PTR [ebx],ebx
  4052e7:	dec    ebx
  4052e8:	jl     0x40528e
  4052ea:	adc    ecx,DWORD PTR [ecx+edi*1+0x1e]
  4052ee:	or     BYTE PTR [eax+0x381e1781],dl
  4052f4:	iret   
  4052f5:	ds clc 
  4052f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052f8:	and    esi,DWORD PTR [edi+0x55842603]
  4052fe:	sub    eax,0x20e5565c
  405303:	stos   DWORD PTR es:[edi],eax
  405304:	or     BYTE PTR [edx-0x24061b43],ch
  40530a:	call   0xb5f1db2a
  40530f:	cld    
  405310:	mov    ds:0x8021f1ca,eax
  405315:	xchg   esi,eax
  405316:	cmp    DWORD PTR [ecx+0x361c121a],edx
  40531c:	aam    0x2a
  40531e:	(bad)  
  40531f:	scas   al,BYTE PTR es:[edi]
  405320:	fist   WORD PTR [ecx]
  405322:	mov    cs,esp
  405324:	sbb    al,0x4d
  405326:	and    eax,0x67a67600
  40532b:	test   al,0x62
  40532d:	fld    QWORD PTR [ecx-0x1879c6c]
  405333:	sbb    al,BYTE PTR [esi-0x75]
  405336:	mov    edi,0x4f75593c
  40533b:	(bad)  
  40533c:	int    0x8b
  40533e:	or     al,0xe
  405340:	loopne 0x405341
  405342:	imul   edi,DWORD PTR [esi],0x5a
  405345:	xor    DWORD PTR [ecx+0x2e375e4a],ebx
  40534b:	ret    
  40534c:	(bad)  
  40534d:	data16 (bad) 
  40534f:	and    bh,BYTE PTR [ecx+0x32]
  405352:	adc    DWORD PTR [ebx+0x2b],edi
  405355:	(bad)  
  405356:	mov    edi,0xcc31e354
  40535b:	lahf   
  40535c:	push   0xa88321aa
  405361:	(bad)  
  405362:	add    DWORD PTR [edi],ecx
  405364:	fadd   QWORD PTR [eax]
  405366:	inc    esi
  405367:	(bad)  [ecx-0x6f]
  40536a:	sar    BYTE PTR [edi-0x59],cl
  40536d:	sar    BYTE PTR [ecx],0xc9
  405370:	jb     0x405386
  405372:	dec    eax
  405373:	dec    ebx
  405374:	dec    ebx
  405375:	mov    bl,0x46
  405377:	and    ebx,esi
  405379:	or     al,0x47
  40537b:	scas   eax,DWORD PTR es:[edi]
  40537c:	sub    DWORD PTR [ebp-0x10e9c103],edi
  405382:	mov    ?,WORD PTR [edx-0x5c06927]
  405388:	ins    BYTE PTR es:[edi],dx
  405389:	xchg   BYTE PTR [esi-0x70],dl
  40538c:	popa   
  40538d:	or     eax,esp
  40538f:	mov    DWORD PTR [ebp-0x26],ebp
  405392:	xor    esi,0x5f289376
  405398:	(bad)  
  405399:	mov    eax,0x4d8e2c8f
  40539e:	enter  0x2967,0xdb
  4053a2:	loopne 0x4053ae
  4053a4:	pop    edx
  4053a5:	sub    BYTE PTR [ebx+0x4],bl
  4053a8:	sbb    eax,0x54dc58d7
  4053ad:	mov    bl,0x78
  4053af:	mov    dl,0x35
  4053b1:	mov    ecx,0x7a0719d1
  4053b6:	inc    edi
  4053b7:	popf   
  4053b8:	or     DWORD PTR [edi+0x78],eax
  4053bb:	test   eax,0x13f4ea1e
  4053c0:	not    ch
  4053c2:	retf   
  4053c3:	les    edx,FWORD PTR [edx]
  4053c5:	dec    edi
  4053c6:	in     eax,dx
  4053c7:	xor    dl,BYTE PTR [edx+0x76]
  4053ca:	fstp   QWORD PTR [edx]
  4053cc:	out    dx,eax
  4053cd:	in     al,dx
  4053ce:	cmp    edi,DWORD PTR [esi]
  4053d0:	iret   
  4053d1:	cs or  al,0x53
  4053d4:	outs   dx,DWORD PTR ds:[esi]
  4053d5:	sub    BYTE PTR [edi-0x16d5f86d],ch
  4053db:	fwait
  4053dc:	test   edi,esi
  4053de:	pop    ss
  4053df:	pop    es
  4053e0:	or     dl,BYTE PTR [esi-0x61]
  4053e3:	pop    ecx
  4053e4:	jno    0x4053cd
  4053e6:	fldcw  WORD PTR [edx-0x41]
  4053e9:	push   es
  4053ea:	sub    al,BYTE PTR [ebx]
  4053ec:	inc    ebx
  4053ed:	xchg   ecx,eax
  4053ee:	addr16 inc esp
  4053f0:	aad    0x5d
  4053f2:	fs sub al,0xdb
  4053f5:	inc    esi
  4053f6:	add    al,0x99
  4053f8:	sub    bh,ch
  4053fa:	mov    bl,0x6b
  4053fc:	loopne 0x4053bd
  4053fe:	jo     0x4053b2
  405400:	cmp    al,0x5d
  405402:	stos   BYTE PTR es:[edi],al
  405403:	push   edx
  405404:	rol    al,cl
  405406:	mov    ds:0x3e95fa64,eax
  40540b:	sbb    al,0x2a
  40540d:	lods   eax,DWORD PTR ds:[esi]
  40540e:	or     eax,0x715527e2
  405413:	xchg   ebx,eax
  405414:	add    al,0xd5
  405416:	(bad)  
  405417:	sbb    ah,BYTE PTR [esi-0x47a8bf20]
  40541d:	icebp  
  40541e:	add    bl,cl
  405420:	aaa    
  405421:	push   ebx
  405422:	iret   
  405423:	sbb    bh,bl
  405425:	or     DWORD PTR [eax-0x21],eax
  405428:	sahf   
  405429:	stos   DWORD PTR es:[edi],eax
  40542a:	fstp   TBYTE PTR [ebx+ecx*8]
  40542d:	sbb    ebx,edi
  40542f:	aam    0x89
  405431:	and    BYTE PTR [eax-0x3eaf73f8],dl
  405437:	sar    DWORD PTR [ecx-0x6f],0xe5
  40543b:	stc    
  40543c:	adc    eax,DWORD PTR [si-0x4e28]
  405441:	cmp    DWORD PTR [eax],ecx
  405443:	stos   BYTE PTR es:[edi],al
  405444:	push   esp
  405445:	pop    edi
  405446:	mov    ecx,0x426a569f
  40544b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40544c:	jo     0x405436
  40544e:	dec    edi
  40544f:	add    edx,DWORD PTR [esi-0xc]
  405452:	inc    ebx
  405453:	jle    0x4054c7
  405455:	xor    edx,DWORD PTR [edi-0x60ea55c3]
  40545b:	iret   
  40545c:	xchg   esp,eax
  40545d:	adc    eax,0x56072521
  405462:	mov    gs:0xe3650337,al
  405468:	xor    al,0x1b
  40546a:	sub    eax,DWORD PTR [edi]
  40546c:	xlat   BYTE PTR ds:[ebx]
  40546d:	js     0x40543e
  40546f:	pop    ds
  405470:	adc    BYTE PTR [eax-0x2eb48f98],ch
  405476:	sub    ch,BYTE PTR [edx]
  405478:	dec    ebp
  405479:	and    eax,0x86fa2adf
  40547e:	push   esp
  40547f:	fcmovnbe st,st(7)
  405481:	in     al,dx
  405482:	add    cl,BYTE PTR ds:0x151406e9
  405489:	push   0xffffffeb
  40548b:	dec    esp
  40548c:	jbe    0x40544e
  40548e:	loope  0x4054b2
  405490:	aad    0x45
  405492:	dec    ebp
  405493:	outs   dx,DWORD PTR ds:[esi]
  405494:	adc    edx,DWORD PTR [esi+0x77]
  405497:	or     ah,cl
  405499:	and    BYTE PTR [edi+0x16],0x58
  40549d:	and    al,0xbe
  40549f:	pop    edx
  4054a0:	push   esp
  4054a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054a2:	xor    edx,DWORD PTR [ebp+0x6d]
  4054a5:	jb     0x4054cb
  4054a7:	shr    DWORD PTR [eax-0x4b],0x8c
  4054ab:	xor    BYTE PTR [ebx+ecx*8+0xa519d4e],dl
  4054b2:	and    eax,0x4480cd9e
  4054b7:	dec    edi
  4054b8:	mov    ds:0x90ee6cec,al
  4054bd:	mov    DWORD PTR [ebp+esi*8+0x7f09212],ebx
  4054c4:	ficom  DWORD PTR ds:0xac8119ca
  4054ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054cb:	jae    0x405538
  4054cd:	rcl    BYTE PTR [ebp+eax*1+0x24285170],1
  4054d4:	adc    eax,0xeebd4b8f
  4054d9:	sub    eax,0x50b09f91
  4054de:	mov    esp,0x22975b40
  4054e3:	mov    cs,WORD PTR [ebp+0x72f09f6]
  4054e9:	add    al,BYTE PTR [ecx+0x7]
  4054ec:	inc    eax
  4054ed:	imul   ebp,DWORD PTR [esi],0xa676b848
  4054f3:	push   esi
  4054f4:	push   0xffffffc9
  4054f6:	fdiv   QWORD PTR [edx-0x12f8ddcd]
  4054fc:	cmp    esi,edx
  4054fe:	add    ebp,eax
  405500:	add    DWORD PTR [ecx+0x41c8d004],ebx
  405506:	iret   
  405507:	shr    ah,1
  405509:	xchg   edi,eax
  40550a:	mov    bh,0x98
  40550c:	push   ecx
  40550d:	jnp    0x4054be
  40550f:	test   BYTE PTR [ecx-0x5a501ddb],0x88
  405516:	xchg   esp,eax
  405517:	ja     0x4054bb
  405519:	sbb    dl,BYTE PTR [ebx-0x55007eb1]
  40551f:	inc    edx
  405520:	push   ecx
  405521:	pusha  
  405522:	fnsetpm(287 only) 
  405524:	(bad)  
  405525:	test   DWORD PTR [esi-0x645654a0],0x6dce6dae
  40552f:	(bad)  [ebx+0x5d]
  405532:	loop   0x405531
  405534:	jg     0x405544
  405536:	fild   WORD PTR [ecx-0x69e2aa64]
  40553c:	stc    
  40553d:	imul   esp,DWORD PTR [esp+edi*4+0x27],0xc46fe86a
  405545:	(bad)  
  405546:	aam    0xc0
  405548:	retf   
  405549:	mov    esp,ebx
  40554b:	repz mov edx,0x4d5b1903
  405551:	fisub  DWORD PTR [edi-0x6e31cd84]
  405557:	or     DWORD PTR [bx],edx
  40555a:	(bad)  
  40555b:	fadd   DWORD PTR [ebp+edi*4-0x736f49f6]
  405562:	inc    edi
  405563:	es fild QWORD PTR gs:[edi-0x3cf0346f]
  40556b:	cmp    ebp,ebx
  40556d:	xlat   BYTE PTR ds:[ebx]
  40556e:	in     eax,dx
  40556f:	or     bl,0x39
  405572:	fld    st(1)
  405575:	mov    edi,0xfcb6f31f
  40557a:	(bad)  
  40557b:	pop    eax
  40557c:	(bad)  
  40557d:	xchg   edi,eax
  40557e:	dec    ecx
  40557f:	push   ecx
  405580:	ins    BYTE PTR es:[edi],dx
  405581:	fdiv   st,st(1)
  405583:	fwait
  405584:	sub    eax,0x7cae8aa4
  405589:	pop    edi
  40558a:	mov    eax,ds:0x3f916190
  40558f:	pop    ds
  405590:	call   0xde21:0x3955ab73
  405597:	(bad)  
  405598:	xchg   ebx,eax
  405599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40559a:	jae    0x40554a
  40559c:	xor    eax,esi
  40559e:	mov    eax,0x221851fe
  4055a3:	rcr    cl,1
  4055a5:	add    ebx,eax
  4055a7:	push   ebx
  4055a8:	jge    0x405550
  4055aa:	or     al,0x50
  4055ac:	and    dh,ah
  4055ae:	xchg   edi,eax
  4055af:	mov    edx,0x8604d6e4
  4055b4:	add    eax,0x5b1e9df
  4055b9:	arpl   WORD PTR [ebp+0x2a],ax
  4055bc:	lock jge 0x4055ba
  4055bf:	mov    bl,0xa7
  4055c1:	in     al,0x45
  4055c3:	mov    eax,0x3b1d8adc
  4055c8:	mov    ebx,0x5286a8f8
  4055cd:	(bad)  
  4055ce:	in     al,dx
  4055cf:	pop    edi
  4055d0:	fimul  WORD PTR [ecx+edi*8+0x557493ab]
  4055d7:	sahf   
  4055d8:	test   eax,0x859350c5
  4055dd:	xor    BYTE PTR [eax],dl
  4055df:	rcl    DWORD PTR [ecx+0x2521f31d],cl
  4055e5:	mov    ecx,0xd107ce4a
  4055ea:	mov    cl,0xa
  4055ec:	out    0x87,eax
  4055ee:	imul   ebp,DWORD PTR [esp+ebp*2],0x7e7f1a99
  4055f5:	jb     0x405617
  4055f7:	xor    DWORD PTR [edx+0x2ecb3cf1],0x72
  4055fe:	mov    eax,0x803eae37
  405603:	or     eax,0xafa6ac27
  405608:	cmp    DWORD PTR [ebp-0x7813340f],eax
  40560e:	fild   QWORD PTR [esi-0x2c]
  405611:	pop    ebx
  405612:	mov    cl,0xb9
  405614:	adc    DWORD PTR [edi],0x6a
  405617:	nop
  405618:	xchg   edi,eax
  405619:	push   esp
  40561a:	jmp    0x6e22:0x159c8dbc
  405621:	into   
  405622:	cmp    DWORD PTR [esi-0x1d5d1a37],edi
  405628:	leave  
  405629:	or     ecx,esp
  40562b:	mov    dl,0x6e
  40562d:	fisub  WORD PTR [eax]
  40562f:	neg    esp
  405631:	fidivr WORD PTR [esi-0x7894e90f]
  405637:	popf   
  405638:	adc    BYTE PTR [ecx+esi*4+0x3c05f84c],dl
  40563f:	xor    dl,ch
  405641:	(bad)  
  405642:	rcl    al,cl
  405644:	jnp    0x405699
  405646:	scas   eax,DWORD PTR es:[edi]
  405647:	or     BYTE PTR [esi+0x3f],bl
  40564a:	sete   dl
  40564d:	jle    0x40566b
  40564f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405650:	jno    0x405689
  405652:	movaps xmm2,XMMWORD PTR [esi+esi*4+0x1e]
  405657:	jmp    0x2f54fd9e
  40565c:	fs dec edi
  40565e:	in     al,0xbd
  405660:	scas   eax,DWORD PTR es:[edi]
  405661:	add    DWORD PTR [eax-0x59c3382c],0x5b
  405668:	mov    edi,DWORD PTR [eax-0x4249836d]
  40566e:	add    ebp,esp
  405670:	test   al,0x75
  405672:	sub    DWORD PTR [ebx],edi
  405674:	jnp    0x4055f8
  405676:	daa    
  405677:	adc    al,0x66
  405679:	mov    ds:0xbb117ed0,al
  40567e:	out    0x78,eax
  405680:	and    al,0xa6
  405682:	iret   
  405683:	gs pop ecx
  405685:	imul   esi,DWORD PTR [esi+0x44a230c4],0x44
  40568c:	aad    0x17
  40568e:	mov    bl,0xd6
  405690:	and    dh,ch
  405692:	stos   DWORD PTR es:[edi],eax
  405693:	pusha  
  405694:	call   0x4111:0x2a9125bf
  40569b:	cmp    eax,0x9c4a35c9
  4056a0:	(bad)  
  4056a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056a2:	sbb    BYTE PTR [ebp-0x43f0e397],ch
  4056a8:	adc    BYTE PTR [ebx+edi*8-0x3e],ch
  4056ac:	jno    0x4056de
  4056ae:	add    eax,0x9ac22d08
  4056b3:	sbb    BYTE PTR [esi],bh
  4056b5:	jl     0x4056cf
  4056b7:	imul   BYTE PTR ds:[edx+0x5d]
  4056bb:	xchg   edx,eax
  4056bc:	lea    eax,[ebp-0x80]
  4056bf:	data16 fbld TBYTE PTR [ecx+0x4685cbbc]
  4056c6:	mov    esp,0x9a7e9710
  4056cb:	pop    eax
  4056cc:	xlat   BYTE PTR ds:[ebx]
  4056cd:	and    BYTE PTR ds:0x3aa8b760,cl
  4056d3:	inc    edi
  4056d4:	jle    0x405703
  4056d6:	mov    ebx,0x39a7a0bb
  4056db:	daa    
  4056dc:	into   
  4056dd:	es add al,0x36
  4056e0:	mov    esi,0x318713be
  4056e5:	inc    edx
  4056e6:	jae    0x4056ec
  4056e8:	loope  0x40569b
  4056ea:	pop    ebx
  4056eb:	sbb    DWORD PTR [ecx+eax*1-0x3ab003db],ebx
  4056f2:	xor    al,BYTE PTR [edi]
  4056f4:	icebp  
  4056f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f6:	and    ecx,esp
  4056f8:	mov    dh,0xeb
  4056fa:	ins    BYTE PTR es:[edi],dx
  4056fb:	js     0x40568d
  4056fd:	jo     0x4056fe
  4056ff:	mov    bh,0x43
  405701:	es lock and eax,0xd5fa1417
  405708:	out    0x65,eax
  40570a:	pop    ds
  40570b:	in     al,dx
  40570c:	xchg   ecx,eax
  40570d:	dec    ecx
  40570e:	pop    ds
  40570f:	adc    eax,0x2281a137
  405714:	xor    edx,DWORD PTR [ebp-0x17]
  405717:	sub    BYTE PTR [eax],bh
  405719:	jno    0x405718
  40571b:	mov    dh,0xa2
  40571d:	or     ecx,edx
  40571f:	or     BYTE PTR [eax],bh
  405721:	(bad)  
  405722:	adc    eax,0xbafdef66
  405727:	retf   
  405728:	mov    edx,0x7317324c
  40572d:	hlt    
  40572e:	add    bl,ah
  405730:	cmp    esp,esp
  405732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405733:	and    DWORD PTR [edx+ebx*8+0x535d91cf],esi
  40573a:	sbb    DWORD PTR [ebx-0x7],0x4ee316ff
  405741:	jno    0x405765
  405743:	jne    0x405753
  405745:	enter  0x1e36,0x47
  405749:	(bad)  
  40574a:	push   cs
  40574b:	hlt    
  40574c:	fcomp  QWORD PTR [esi]
  40574e:	cmp    eax,0x76b9efa0
  405753:	push   ecx
  405754:	lea    esi,[ecx+0x164aff73]
  40575a:	xchg   edx,eax
  40575b:	xchg   ebp,eax
  40575c:	(bad)  
  40575d:	ins    DWORD PTR es:[edi],dx
  40575e:	adc    dh,dh
  405760:	mov    al,ds:0x801f8b3e
  405765:	adc    bl,BYTE PTR [esi+0x3b]
  405768:	stc    
  405769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40576a:	test   al,0xf1
  40576c:	fist   WORD PTR [edi+0x67]
  40576f:	and    DWORD PTR [eax],0xffffff85
  405772:	nop
  405773:	add    ch,BYTE PTR ds:0xfbb4bd07
  405779:	in     eax,0x5d
  40577b:	scas   al,BYTE PTR es:[edi]
  40577c:	jae    0x405709
  40577e:	out    0xc9,al
  405780:	xchg   edi,eax
  405781:	cmp    bl,BYTE PTR ds:0xd54d5291
  405787:	add    bl,BYTE PTR [ebx-0x68dbeab2]
  40578d:	xchg   esp,eax
  40578e:	push   ecx
  40578f:	retf   0x7b9b
  405792:	inc    ebx
  405793:	jge    0x4057e5
  405795:	jle    0x40576a
  405797:	jg     0x4057ce
  405799:	jo     0x4057f5
  40579b:	push   es
  40579c:	pop    eax
  40579d:	dec    edi
  40579e:	test   DWORD PTR [edx+0x60b04d7b],0x59152483
  4057a8:	cmp    al,0x47
  4057aa:	mov    ch,0x48
  4057ac:	mov    esp,0x25763924
  4057b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057b3:	sbb    BYTE PTR [eax+0x5c32b41b],al
  4057b9:	cmp    al,0xa7
  4057bb:	and    eax,0x82c9e225
  4057c0:	add    al,0x64
  4057c2:	mov    ch,0x6c
  4057c4:	scas   al,BYTE PTR es:[edi]
  4057c5:	daa    
  4057c6:	fimul  DWORD PTR [ebp-0x6b133140]
  4057cc:	mov    dl,0x2c
  4057ce:	adc    DWORD PTR [eax*8+0x2d4668b6],0xe3cc19f7
  4057d9:	lock iret 
  4057db:	jnp    0x40584f
  4057dd:	add    eax,0xccd76325
  4057e2:	aam    0x76
  4057e4:	inc    BYTE PTR [ebx-0x45]
  4057e7:	dec    edx
  4057e8:	add    esi,DWORD PTR [eax+0x70]
  4057eb:	aam    0x3a
  4057ed:	push   0x850795ea
  4057f2:	xchg   ecx,eax
  4057f3:	sub    ebx,DWORD PTR [ebx-0x2a]
  4057f6:	pop    eax
  4057f7:	out    0xc1,eax
  4057f9:	mov    ecx,0x8a56fb56
  4057fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057ff:	dec    ecx
  405800:	arpl   WORD PTR [eax-0x22774d49],bx
  405806:	jle    0x4057d8
  405808:	lds    edx,FWORD PTR [edx+0x6e]
  40580b:	lods   al,BYTE PTR ds:[esi]
  40580c:	aam    0xb6
  40580e:	and    DWORD PTR [ecx],esi
  405810:	int    0x91
  405812:	arpl   WORD PTR [eax+eiz*4-0x4865826],dx
  405819:	aas    
  40581a:	push   ss
  40581b:	mov    bh,ah
  40581d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40581e:	push   ecx
  40581f:	cdq    
  405820:	scas   al,BYTE PTR es:[edi]
  405821:	cmp    DWORD PTR ds:0x4875df80,ebx
  405827:	fwait
  405828:	rcl    BYTE PTR [esi+0x60],cl
  40582b:	push   es
  40582c:	rcr    BYTE PTR [ecx-0x1a],cl
  40582f:	fcomp  DWORD PTR ds:0x2179c791
  405835:	outs   dx,BYTE PTR ds:[esi]
  405836:	adc    esi,DWORD PTR [ebx+edx*1-0x46a66676]
  40583d:	call   0xbb636c6b
  405842:	mov    ecx,0x2a59187f
  405847:	adc    eax,0x30fa8ed0
  40584c:	rol    ch,cl
  40584e:	retf   
  40584f:	imul   ebx
  405851:	gs out dx,al
  405853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405854:	xor    eax,0xea736f4f
  405859:	mul    BYTE PTR [edx]
  40585b:	sub    al,0x29
  40585d:	push   ecx
  40585e:	dec    ebx
  40585f:	inc    ebx
  405860:	lods   eax,DWORD PTR ds:[esi]
  405861:	jbe    0x40586f
  405863:	xchg   edx,eax
  405864:	test   ebp,0x61afc68c
  40586a:	arpl   di,di
  40586c:	add    DWORD PTR ds:0x4fceacd,0x40116909
  405876:	inc    ebp
  405877:	jo     0x4058f4
  405879:	adc    ah,BYTE PTR [ebp-0x61b170a9]
  40587f:	pop    ecx
  405880:	fst    QWORD PTR [edi]
  405882:	sbb    bh,BYTE PTR [edi+0x37]
  405885:	pop    ebx
  405886:	(bad)  
  405887:	xor    BYTE PTR [esi-0xb7c7e03],bl
  40588d:	scas   al,BYTE PTR es:[edi]
  40588e:	mov    ebx,0x7f968ccf
  405893:	and    BYTE PTR [edx-0x1392c480],al
  405899:	jmp    0x40587a
  40589b:	xor    al,0x7
  40589d:	mov    dh,BYTE PTR [ebp-0xf1d67a5]
  4058a3:	dec    ecx
  4058a4:	scas   al,BYTE PTR es:[edi]
  4058a5:	cli    
  4058a6:	dec    ebp
  4058a7:	int3   
  4058a8:	xchg   esp,eax
  4058a9:	scas   eax,DWORD PTR es:[edi]
  4058aa:	fisub  DWORD PTR [ebx-0x51]
  4058ad:	div    BYTE PTR [ebx-0x6a095e05]
  4058b3:	push   es
  4058b4:	push   ebx
  4058b5:	lods   al,BYTE PTR ds:[esi]
  4058b6:	dec    edi
  4058b7:	cmp    DWORD PTR [edx+0x695c409c],edi
  4058bd:	in     eax,0x57
  4058bf:	jnp    0x4058d3
  4058c1:	or     cl,ch
  4058c3:	addr16 sahf 
  4058c5:	sub    eax,0x1e75614d
  4058ca:	pop    edx
  4058cb:	or     eax,0x7e8f4c27
  4058d0:	add    eax,DWORD PTR [ecx-0x387acf73]
  4058d6:	push   ebp
  4058d7:	(bad)  
  4058d8:	dec    edi
  4058d9:	lods   al,BYTE PTR ds:[esi]
  4058da:	icebp  
  4058db:	mov    ds:0xce6c8fe2,eax
  4058e0:	mov    ah,0xdf
  4058e2:	ret    
  4058e3:	fild   DWORD PTR [ebx]
  4058e5:	pop    es
  4058e6:	mov    ebp,0xfc336ba2
  4058eb:	xor    BYTE PTR [edi],0x10
  4058ee:	sub    eax,0xd3274ec5
  4058f3:	pop    eax
  4058f4:	dec    DWORD PTR [ecx-0x271e8247]
  4058fa:	fistp  QWORD PTR [ebx-0x28]
  4058fd:	(bad)
  405901:	pop    edx
  405902:	pop    ss
  405903:	(bad)  
  405904:	hlt    
  405905:	ffreep st(4)
  405907:	add    eax,0xbec18209
  40590c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40590d:	popf   
  40590e:	jns    0x405941
  405910:	jns    0x405990
  405912:	cmp    ch,ah
  405914:	and    eax,0x4a5cc0e7
  405919:	xor    eax,0x7416b4c4
  40591e:	or     al,0xc2
  405920:	les    ecx,FWORD PTR [eax-0x12]
  405923:	dec    ecx
  405924:	jae    0x40595d
  405926:	iret   
  405927:	jmp    0x6e9b:0x982df731
  40592e:	cmp    BYTE PTR [esi],al
  405930:	das    
  405931:	es adc eax,0x48d1ec03
  405937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405938:	xchg   edx,eax
  405939:	cwde   
  40593a:	sub    cl,ch
  40593c:	psrlq  mm6,QWORD PTR [edi+esi*1-0x36]
  405941:	mov    DWORD PTR [ecx+0x49d8c7d4],eax
  405947:	(bad)  
  405948:	and    edx,DWORD PTR [ecx-0x6e]
  40594b:	fist   DWORD PTR [edi]
  40594d:	sbb    BYTE PTR [ebx+eiz*1+0x3b],0xee
  405952:	out    dx,eax
  405953:	aas    
  405954:	or     BYTE PTR [eax+0x2d],ah
  405957:	in     eax,dx
  405958:	and    esp,edi
  40595a:	addr16 push ecx
  40595c:	or     ebp,ebp
  40595e:	add    al,0xf7
  405960:	cmp    edi,DWORD PTR [eax-0x7f]
  405963:	out    dx,al
  405964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405965:	push   ebx
  405966:	cmp    al,0x73
  405968:	cmovs  ebp,DWORD PTR [edx+0x47]
  40596c:	fwait
  40596d:	scas   al,BYTE PTR es:[edi]
  40596e:	push   ebx
  40596f:	pop    ebp
  405970:	sbb    al,0x3d
  405972:	mov    ecx,0x203911e8
  405977:	(bad)  
  405978:	(bad)  
  405979:	jg     0x405931
  40597b:	ficom  WORD PTR [ecx+0x10139102]
  405981:	and    edx,ebx
  405983:	sbb    DWORD PTR [edx],esi
  405985:	cwde   
  405986:	sub    BYTE PTR [eax-0xfdca0b6],bl
  40598c:	dec    esp
  40598d:	mov    ah,0x96
  40598f:	mov    ecx,DWORD PTR [ebx-0x6bf5bf37]
  405995:	jg     0x40594d
  405997:	push   edi
  405998:	fmul   QWORD PTR [ebx+edx*4+0x5b]
  40599c:	or     cl,BYTE PTR [ecx+0x29a02c52]
  4059a2:	or     edx,DWORD PTR [esi]
  4059a4:	hlt    
  4059a5:	(bad)  [ecx+0x291d7c04]
  4059ab:	data16 mov BYTE PTR [esi-0x30aeda55],al
  4059b2:	(bad)  
  4059b3:	(bad)  
  4059b4:	mov    WORD PTR [eax],gs
  4059b6:	jmp    0xc7ea4363
  4059bb:	add    esi,ecx
  4059bd:	lahf   
  4059be:	cmp    esi,DWORD PTR [edi-0x13cd0c82]
  4059c4:	mov    cl,0xe2
  4059c6:	jns    0x405a24
  4059c8:	add    al,0x50
  4059ca:	cld    
  4059cb:	mov    al,0x53
  4059cd:	push   ebx
  4059ce:	fisubr DWORD PTR [esi-0x3d]
  4059d1:	pop    ebx
  4059d2:	adc    al,0x62
  4059d4:	dec    edi
  4059d5:	inc    ecx
  4059d6:	fistp  QWORD PTR [ebp+0x56]
  4059d9:	push   0x2d0a880a
  4059de:	imul   edi
  4059e0:	stos   DWORD PTR es:[edi],eax
  4059e1:	(bad)  
  4059e2:	imul   eax,edx,0xffffffd2
  4059e5:	pushfw 
  4059e7:	mov    WORD PTR [edx+0x35],ds
  4059ea:	repnz fsubrp st(2),st
  4059ed:	dec    esi
  4059ee:	pop    ds
  4059ef:	fidivr WORD PTR [ebx-0x21]
  4059f2:	xor    eax,0x9cac9d02
  4059f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059f8:	cs pop edx
  4059fa:	push   eax
  4059fb:	pop    ecx
  4059fc:	add    eax,0xe8dfcc7a
  405a01:	adc    eax,0x7e2bcb8d
  405a06:	adc    bh,bh
  405a08:	xor    edi,DWORD PTR [esi+eax*8+0x14]
  405a0c:	(bad)  
  405a0d:	outs   dx,BYTE PTR ds:[esi]
  405a0e:	inc    ebp
  405a0f:	mov    dh,0x65
  405a11:	xor    DWORD PTR [ecx-0x113681b3],esp
  405a17:	aam    0xb1
  405a19:	dec    ecx
  405a1a:	mov    dl,0x9e
  405a1c:	lods   eax,DWORD PTR cs:[esi]
  405a1e:	push   cs
  405a1f:	lods   al,BYTE PTR ds:[esi]
  405a20:	pop    esi
  405a21:	int    0x6a
  405a23:	daa    
  405a24:	test   al,0xc9
  405a26:	cmp    BYTE PTR [edx-0x64f9dda5],ch
  405a2c:	nop
  405a2d:	and    cl,BYTE PTR [ebx-0x2fe8ca0d]
  405a33:	mov    al,0xcc
  405a35:	adc    dh,BYTE PTR ds:0x73ddb2a
  405a3b:	shl    DWORD PTR [ecx-0x24e39586],0xa0
  405a42:	dec    esp
  405a43:	int3   
  405a44:	jg     0x405ab6
  405a46:	mov    ebp,0x375bdaa9
  405a4b:	push   ebp
  405a4c:	lods   al,BYTE PTR ds:[esi]
  405a4d:	xchg   edx,eax
  405a4e:	jb     0x405aab
  405a50:	inc    esp
  405a51:	add    ch,BYTE PTR [esi-0x6b944694]
  405a57:	les    ebx,FWORD PTR [esi+0x382eaaf8]
  405a5d:	mov    dh,0xbf
  405a5f:	xchg   esi,eax
  405a60:	pop    ebx
  405a61:	and    al,0x24
  405a63:	ret    0xf4cc
  405a66:	rol    dh,1
  405a68:	and    esi,ecx
  405a6a:	imul   edi,DWORD PTR [ebx+esi*2+0x60],0x78
  405a6f:	xchg   edx,eax
  405a70:	stos   BYTE PTR es:[edi],al
  405a71:	cmp    al,0x4b
  405a73:	pop    edx
  405a74:	and    eax,0xa4b9f41f
  405a79:	mov    bh,0xc8
  405a7b:	mov    esp,0x25af6356
  405a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a81:	mov    ch,0x3c
  405a83:	adc    ecx,ebx
  405a85:	das    
  405a86:	dec    edx
  405a87:	(bad)  
  405a88:	cmp    eax,0xc18cb1be
  405a8d:	test   DWORD PTR cs:0xa952432c,esp
  405a94:	call   0xd790a272
  405a99:	aas    
  405a9a:	jmp    0xa29d56c
  405a9f:	mov    eax,0xf4baa318
  405aa4:	cmp    eax,DWORD PTR [ecx]
  405aa6:	leave  
  405aa7:	int3   
  405aa8:	lea    ecx,[esp+edx*4+0x1d3dc6da]
  405aaf:	inc    eax
  405ab0:	sub    eax,0x951965a
  405ab5:	add    DWORD PTR [edi],eax
  405ab7:	fsin   
  405ab9:	mov    ebx,0x2eab6266
  405abe:	lods   al,BYTE PTR ds:[esi]
  405abf:	sub    al,0xc2
  405ac1:	inc    eax
  405ac2:	test   DWORD PTR [edi+0x7eb1ed7a],edx
  405ac8:	jl     0x405a54
  405aca:	cwde   
  405acb:	rcl    DWORD PTR ds:0xcb1f2b18,cl
  405ad1:	pop    ss
  405ad2:	xchg   DWORD PTR [esi+0x26],ebx
  405ad5:	xor    al,dl
  405ad7:	test   eax,0xc12bc98c
  405adc:	sub    BYTE PTR [edx],cl
  405ade:	inc    ecx
  405adf:	retf   
  405ae0:	adc    al,0xa2
  405ae2:	or     BYTE PTR [esi+0x55],0x98
  405ae6:	lods   al,BYTE PTR ds:[esi]
  405ae7:	call   0x2d63:0x1da191ad
  405aee:	pop    esi
  405aef:	xor    cl,BYTE PTR [ecx-0x5c615d58]
  405af5:	jge    0x405a7e
  405af7:	inc    edx
  405af8:	xor    al,BYTE PTR [edi+0x45c10b77]
  405afe:	not    DWORD PTR [edx+0x410c272a]
  405b04:	push   edi
  405b05:	iret   
  405b06:	cdq    
  405b07:	jmp    0x56310440
  405b0c:	cmp    al,0xf2
  405b0e:	jae    0x405b41
  405b10:	or     eax,0x1f4a431
  405b15:	inc    ebx
  405b16:	mov    ah,0xdc
  405b18:	cmp    BYTE PTR [eax],bh
  405b1a:	arpl   WORD PTR [esp+eiz*2-0x70],si
  405b1e:	push   cs
  405b1f:	add    dl,BYTE PTR [ebx-0x50]
  405b22:	pop    edi
  405b23:	not    ch
  405b25:	jmp    0xf9d4918
  405b2a:	out    dx,eax
  405b2b:	icebp  
  405b2c:	pop    edi
  405b2d:	push   edx
  405b2e:	lds    ebp,FWORD PTR [edi]
  405b30:	pop    edx
  405b31:	imul   ecx,DWORD PTR [edi-0x1b102d79],0xccf4d00
  405b3b:	out    dx,al
  405b3c:	out    dx,eax
  405b3d:	retf   
  405b3e:	cmc    
  405b3f:	gs lock add eax,0xcb42a75
  405b46:	pop    eax
  405b47:	bsr    edi,DWORD PTR [ebx-0x7bc24678]
  405b4e:	mov    al,0xc9
  405b50:	sub    esi,ebp
  405b52:	bound  ebx,QWORD PTR [esi+0x5b7e1a1b]
  405b58:	shr    ecx,cl
  405b5a:	jbe    0x405bab
  405b5c:	daa    
  405b5d:	mov    ds:0x3d713e97,eax
  405b62:	test   al,0x8f
  405b64:	sbb    ah,ch
  405b66:	ins    BYTE PTR es:[edi],dx
  405b67:	sbb    al,dh
  405b69:	sbb    dh,BYTE PTR [eax+0x730165ac]
  405b6f:	or     BYTE PTR [edx+0x5],dl
  405b72:	rcr    DWORD PTR [edi+edx*8],cl
  405b75:	in     eax,dx
  405b76:	pop    es
  405b77:	mov    edi,0x835948c3
  405b7c:	mov    DWORD PTR ds:0x4c0b4b8e,ecx
  405b82:	in     al,dx
  405b83:	pop    ebx
  405b84:	jo     0x405be3
  405b86:	mov    edi,0x8f4acf08
  405b8b:	pop    esp
  405b8c:	clc    
  405b8d:	mov    BYTE PTR [ecx+0x6c23010c],dh
  405b93:	inc    ebp
  405b94:	xchg   ecx,eax
  405b95:	jnp    0x405b6f
  405b97:	mov    ebx,0x7de60a01
  405b9c:	call   0x6640:0xdd4dc9c
  405ba3:	mov    al,0x38
  405ba5:	icebp  
  405ba6:	or     eax,0x8f4c41b2
  405bab:	sbb    al,0xe6
  405bad:	inc    ebp
  405bae:	xor    dh,BYTE PTR [eax+0x37b3f323]
  405bb4:	sbb    al,ch
  405bb6:	imul   ebp,DWORD PTR [edi],0x43a03e0c
  405bbc:	cs jmp 0x61c4f51a
  405bc2:	ins    DWORD PTR es:[edi],dx
  405bc3:	xchg   esp,eax
  405bc4:	loopne 0x405bb5
  405bc6:	cmp    al,0x12
  405bc8:	mov    ch,0xda
  405bca:	cwde   
  405bcb:	sub    eax,0x4948bf84
  405bd0:	and    al,0x4a
  405bd2:	mov    ecx,DWORD PTR [ebx-0x6ec2e219]
  405bd8:	test   DWORD PTR [eax-0x76],0x35cc2b8a
  405bdf:	lods   al,BYTE PTR ds:[esi]
  405be0:	ja     0x405bc5
  405be2:	cmp    DWORD PTR [eax-0x5a5d7a1d],0xffffffe7
  405be9:	pop    edi
  405bea:	fdivr  QWORD PTR [edi]
  405bec:	dec    edx
  405bed:	or     bh,al
  405bef:	data16 aaa 
  405bf1:	stos   BYTE PTR es:[edi],al
  405bf2:	sub    BYTE PTR ds:0x3303d502,0x29
  405bf9:	lods   eax,DWORD PTR ds:[esi]
  405bfa:	cli    
  405bfb:	fistp  DWORD PTR [eax+0x41]
  405bfe:	(bad)  [edx+0x3e]
  405c01:	sub    esp,esp
  405c03:	and    eax,0xc1038fe9
  405c08:	pusha  
  405c09:	nop
  405c0a:	adc    al,0x32
  405c0c:	(bad)  
  405c0d:	mov    es,ebp
  405c0f:	mov    bh,0xc7
  405c11:	dec    ebp
  405c12:	push   0x6c
  405c14:	inc    ebx
  405c15:	xor    dl,bl
  405c17:	or     DWORD PTR [ecx+0x2e],edi
  405c1a:	pop    ecx
  405c1b:	cld    
  405c1c:	pop    ebx
  405c1d:	mov    eax,ds:0xfaab1bad
  405c22:	dec    bl
  405c24:	add    bl,BYTE PTR [edx]
  405c26:	inc    esp
  405c27:	jne    0x405c16
  405c29:	pop    ecx
  405c2a:	jnp    0x405ca5
  405c2c:	fmul   DWORD PTR ds:0x313654af
  405c32:	adc    esp,DWORD PTR [esi+0x7f]
  405c35:	dec    edi
  405c36:	mov    ebx,0xe6e77d3
  405c3b:	cmp    ebp,DWORD PTR [ebx-0x15]
  405c3e:	inc    ebx
  405c3f:	jge    0x405c65
  405c41:	and    eax,0x5418a3dc
  405c46:	idiv   BYTE PTR [edi+ebx*2]
  405c49:	rol    BYTE PTR [edi],1
  405c4b:	je     0x405c8f
  405c4d:	clc    
  405c4e:	dec    edx
  405c4f:	jg     0x405c56
  405c51:	or     al,BYTE PTR [ebx+0x385d187d]
  405c57:	test   DWORD PTR [ecx+0x8],edi
  405c5a:	pushf  
  405c5b:	push   ebx
  405c5c:	xchg   DWORD PTR [ebx+0xf],ebx
  405c5f:	jnp    0x405c43
  405c61:	pop    esi
  405c62:	jecxz  0x405c26
  405c64:	or     al,0xa4
  405c66:	sub    edi,DWORD PTR [ecx+0x5379cc7a]
  405c6c:	cli    
  405c6d:	fdivr  QWORD PTR [ecx]
  405c6f:	cdq    
  405c70:	xor    eax,0x6c4af30f
  405c75:	jmp    0x1dc20932
  405c7a:	ficomp WORD PTR [eax-0x41]
  405c7d:	sub    bl,BYTE PTR [edi+0x68]
  405c80:	inc    eax
  405c81:	push   es
  405c82:	dec    ecx
  405c83:	out    0x7a,eax
  405c85:	(bad)  
  405c87:	mov    bl,0x7
  405c89:	add    eax,0xd23dcf4
  405c8e:	test   DWORD PTR [bp-0x8],ecx
  405c92:	(bad)  
  405c93:	rcr    BYTE PTR [eax+0x7b61a0a1],1
  405c99:	stos   DWORD PTR es:[edi],eax
  405c9a:	jns    0x405d1b
  405c9c:	jns    0x405ccc
  405c9e:	aaa    
  405c9f:	sti    
  405ca0:	bound  esi,QWORD PTR [edi+0x17]
  405ca3:	int    0x53
  405ca5:	lods   al,BYTE PTR ds:[esi]
  405ca6:	(bad)  
  405ca7:	jbe    0x405ca7
  405ca9:	pop    edx
  405caa:	sbb    edi,esp
  405cac:	cdq    
  405cad:	(bad)  
  405cae:	cmc    
  405caf:	fimul  DWORD PTR [edi-0x17700d7e]
  405cb5:	pop    ss
  405cb6:	in     eax,dx
  405cb7:	pop    es
  405cb8:	or     DWORD PTR [esi+0x73],0xd8db1c
  405cbf:	cmp    al,0x89
  405cc1:	adc    bh,ah
  405cc3:	sub    ebp,0xf901705a
  405cc9:	inc    ecx
  405cca:	mov    ebp,DWORD PTR [ebx+0x3338b130]
  405cd0:	in     eax,dx
  405cd1:	cmp    ebp,eax
  405cd3:	fbstp  TBYTE PTR ds:0xb27b1ed1
  405cd9:	fs stc 
  405cdb:	push   0xffffffa7
  405cdd:	inc    esp
  405cde:	xor    dl,BYTE PTR [esi+0x7e]
  405ce1:	sub    ebp,DWORD PTR [ecx+edi*8]
  405ce4:	stc    
  405ce5:	jns    0x405cf3
  405ce7:	dec    ebp
  405ce8:	cld    
  405ce9:	sub    dh,BYTE PTR [ecx+ebp*8]
  405cec:	mov    edi,0xbd4f6497
  405cf1:	rcl    DWORD PTR [edx+ebx*2+0x11fd9c47],cl
  405cf8:	xchg   esp,eax
  405cf9:	inc    ebp
  405cfa:	jo     0x405d5c
  405cfc:	scas   eax,DWORD PTR es:[edi]
  405cfd:	cmp    BYTE PTR [edi],al
  405cff:	and    al,0xc
  405d01:	dec    esi
  405d02:	and    eax,0xc56f98e9
  405d07:	jmp    0x3c0c:0xcb5d798c
  405d0e:	shl    al,cl
  405d10:	mov    edi,0x4d23a9c9
  405d15:	scas   al,BYTE PTR es:[edi]
  405d16:	aas    
  405d17:	mov    eax,ds:0xa0f949c3
  405d1c:	daa    
  405d1d:	push   0x9e6d0523
  405d22:	cmp    al,0x40
  405d24:	ficomp DWORD PTR ds:0xd02b374e
  405d2a:	fcom   QWORD PTR [esi]
  405d2c:	nop
  405d2d:	mov    esi,0x45aeb2ff
  405d32:	inc    ebp
  405d33:	or     DWORD PTR [ebx],edx
  405d35:	fwait
  405d36:	or     DWORD PTR [edi+edi*8],esp
  405d39:	scas   eax,DWORD PTR es:[edi]
  405d3a:	and    DWORD PTR [edx],ebp
  405d3c:	pcmpgtw mm0,QWORD PTR [edi-0x55]
  405d40:	mov    ds:0xc3c39bb8,eax
  405d45:	jmp    0xeea5:0x96e77f02
  405d4c:	push   esp
  405d4d:	jg     0x405d16
  405d4f:	sti    
  405d50:	sar    DWORD PTR ds:0x4a55d0c4,cl
  405d56:	sbb    BYTE PTR [edx-0x7e],ch
  405d59:	cmp    cl,BYTE PTR [esi-0xd2d91b2]
  405d5f:	imul   esp,DWORD PTR [edi-0xe],0x7
  405d63:	xor    al,0x57
  405d65:	xchg   ecx,eax
  405d66:	out    dx,eax
  405d67:	dec    ecx
  405d68:	xchg   ebx,eax
  405d69:	test   BYTE PTR [edx],al
  405d6b:	jo     0x405d2e
  405d6d:	mov    ds:0xc7b15eaf,al
  405d72:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  405d74:	xchg   edx,eax
  405d75:	fisubr DWORD PTR [edx]
  405d77:	lds    ebx,FWORD PTR [ebx]
  405d79:	mov    dl,0x4e
  405d7b:	(bad)  
  405d7d:	popa   
  405d7e:	dec    eax
  405d7f:	jae    0x405d98
  405d81:	sub    cl,BYTE PTR [ecx+0x5950ca8a]
  405d87:	frstor [ebx+0x1f]
  405d8a:	push   eax
  405d8b:	das    
  405d8c:	adc    eax,0xeadc61bf
  405d91:	inc    edi
  405d92:	sbb    edx,DWORD PTR [eax+0x4ac17b3c]
  405d98:	loop   0x405e0a
  405d9a:	jmp    0x405d1e
  405d9c:	pop    esi
  405d9d:	stc    
  405d9e:	jle    0x405d25
  405da0:	xchg   esp,eax
  405da1:	sahf   
  405da2:	or     ebp,edi
  405da4:	dec    ebx
  405da5:	inc    eax
  405da6:	and    eax,0x410517a
  405dab:	pop    ebx
  405dac:	inc    ebp
  405dad:	ins    DWORD PTR es:[edi],dx
  405dae:	fidiv  WORD PTR [ebp+0x599a353]
  405db4:	cmp    esi,eax
  405db6:	sub    DWORD PTR [ecx+0x2a],edi
  405db9:	mov    bh,0xd0
  405dbb:	add    BYTE PTR [ebx],dl
  405dbd:	sbb    ebp,DWORD PTR [esi+edx*4+0x18aef798]
  405dc4:	dec    edi
  405dc5:	in     al,0xb9
  405dc7:	pop    esp
  405dc8:	xor    eax,0xb6809a7
  405dcd:	out    0x96,al
  405dcf:	enter  0x813c,0x43
  405dd3:	punpckldq mm7,DWORD PTR [ebx+0x7f]
  405dd7:	mov    esi,0x94511fd1
  405ddc:	imul   ecx,DWORD PTR [ebx],0x91198f59
  405de2:	icebp  
  405de3:	mov    al,ds:0x91ebfa3f
  405de8:	lea    eax,[esi-0x7c]
  405deb:	jg     0x405df0
  405ded:	out    dx,al
  405dee:	cmp    edx,DWORD PTR [esi]
  405df0:	lods   eax,DWORD PTR ds:[esi]
  405df1:	icebp  
  405df2:	mov    ds:0x23ed3509,eax
  405df7:	mov    ebp,0x3f0646f7
  405dfc:	ins    DWORD PTR es:[edi],dx
  405dfd:	(bad)  
  405dfe:	sub    bh,BYTE PTR [edi+0x74]
  405e01:	cmp    DWORD PTR [ecx+ebp*4-0x11],0x49099a67
  405e09:	mov    al,ds:0x7fe36448
  405e0e:	xor    dl,bh
  405e10:	aad    0xbb
  405e12:	(bad)  [ebx+0x6be43995]
  405e18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e19:	aaa    
  405e1a:	xchg   ecx,eax
  405e1b:	adc    ah,BYTE PTR [ebx-0x5e761eb1]
  405e21:	aad    0x7e
  405e23:	xchg   ecx,eax
  405e24:	sub    eax,0xdfba1338
  405e29:	aas    
  405e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e2b:	jo     0x405e38
  405e2d:	(bad)
  405e31:	into   
  405e32:	dec    ebp
  405e33:	ror    BYTE PTR [ecx-0x74ca28d],1
  405e39:	mov    ebp,0xaefd3551
  405e3e:	jbe    0x405e1e
  405e40:	lea    esp,[ecx-0x75d2036b]
  405e46:	mov    bh,0xc4
  405e48:	cmp    eax,ebp
  405e4a:	(bad)  
  405e4b:	int3   
  405e4c:	push   ss
  405e4d:	pushw  cs
  405e4f:	in     eax,dx
  405e50:	xor    BYTE PTR [esp+eax*2-0x27],0x5e
  405e55:	inc    ecx
  405e56:	retf   0x47a
  405e59:	mov    dl,0x35
  405e5b:	out    0xeb,al
  405e5d:	xchg   edi,eax
  405e5e:	adc    BYTE PTR [ebx-0x46],bl
  405e61:	mov    ds:0xa6b1772a,al
  405e66:	and    ch,ah
  405e68:	mov    ds:0xde88cbba,al
  405e6d:	fdivr  st(4),st
  405e6f:	mov    bh,BYTE PTR [edx]
  405e71:	inc    ebp
  405e72:	inc    esp
  405e73:	push   ebp
  405e74:	pop    ebx
  405e75:	inc    ebx
  405e76:	rcl    BYTE PTR [edx+0x288aee2],0x93
  405e7d:	fs add al,0x31
  405e80:	dec    edx
  405e81:	pushf  
  405e82:	ret    
  405e83:	jg     0x405e76
  405e85:	pop    ebx
  405e86:	adc    esp,DWORD PTR [ebx]
  405e88:	pop    es
  405e89:	lea    edi,[edi+0x4e]
  405e8c:	and    al,0xfd
  405e8e:	and    esi,edi
  405e90:	dec    edx
  405e91:	inc    edi
  405e92:	imul   esi,DWORD PTR [ebp-0x286c3953],0x305b6ede
  405e9c:	ret    0xc1c0
  405e9f:	jb     0x405eba
  405ea1:	mov    eax,0x19034078
  405ea6:	fisub  DWORD PTR [ebx+ebp*2+0x2dd0ca86]
  405ead:	lahf   
  405eae:	cdq    
  405eaf:	push   0xd37cea22
  405eb4:	push   cs
  405eb5:	ds ret 0x7109
  405eb9:	adc    dl,BYTE PTR [ebp-0x68895d50]
  405ebf:	inc    eax
  405ec0:	adc    eax,0xabb6ac5a
  405ec5:	push   esi
  405ec6:	sub    ch,ah
  405ec8:	dec    ecx
  405ec9:	push   ds
  405eca:	sbb    BYTE PTR [ecx],ah
  405ecc:	jne    0x405ed1
  405ece:	push   ss
  405ecf:	fst    QWORD PTR [ecx]
  405ed1:	and    esi,edi
  405ed3:	aam    0x4
  405ed5:	add    eax,0x38a7f313
  405eda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405edb:	mov    dl,0x9b
  405edd:	retf   
  405ede:	xchg   edx,eax
  405edf:	mov    esi,0x878b3bd6
  405ee4:	adc    DWORD PTR [eax],ecx
  405ee6:	(bad)  
  405ee7:	mov    edi,0x3b9d6c51
  405eec:	pop    ss
  405eed:	xchg   esp,eax
  405eee:	sar    dl,0xe6
  405ef1:	jmp    0xab43825c
  405ef6:	hlt    
  405ef7:	jecxz  0x405eda
  405ef9:	xchg   esp,eax
  405efa:	xchg   edx,eax
  405efb:	ins    DWORD PTR es:[edi],dx
  405efc:	jecxz  0x405e93
  405efe:	xor    eax,0x62419a77
  405f03:	mov    dh,0xfb
  405f05:	pop    ebx
  405f06:	loop   0x405f83
  405f08:	cs test ecx,edx
  405f0b:	inc    edi
  405f0c:	jnp    0x405f4a
  405f0e:	outs   dx,DWORD PTR ds:[esi]
  405f0f:	comiss xmm3,DWORD PTR [edx-0x16]
  405f13:	inc    eax
  405f14:	xor    DWORD PTR [edx],eax
  405f16:	loopne 0x405eb4
  405f18:	xchg   edx,eax
  405f19:	mov    ch,0xac
  405f1b:	add    esi,DWORD PTR [ebp-0x5439ad2b]
  405f21:	test   eax,0xa1c107d1
  405f26:	jp     0x405fa6
  405f28:	cmp    dh,BYTE PTR [ebp-0x55]
  405f2b:	sahf   
  405f2c:	not    BYTE PTR [edi+0x6d]
  405f2f:	cmp    esi,DWORD PTR [edx-0x269f4436]
  405f35:	jne    0x405edb
  405f37:	inc    edx
  405f38:	call   0xd15:0x937b6da9
  405f3f:	or     BYTE PTR [ebx*2+0x726cf2a9],dh
  405f46:	or     DWORD PTR [eax],ecx
  405f48:	pop    esp
  405f49:	mov    ecx,0xe73dc7de
  405f4e:	sub    bl,BYTE PTR [ebp+eiz*8-0x7ca72b7c]
  405f55:	cmp    al,0xfb
  405f57:	push   edi
  405f58:	addr16 ss xchg edi,eax
  405f5b:	pushf  
  405f5c:	xlat   BYTE PTR ds:[ebx]
  405f5d:	push   es
  405f5e:	or     al,0x2f
  405f60:	imul   edi,DWORD PTR [ebx],0x91681ef8
  405f66:	jecxz  0x405fa8
  405f68:	sahf   
  405f69:	xchg   DWORD PTR [esi+ecx*2-0x19],eax
  405f6d:	dec    esp
  405f6e:	jne    0x405f81
  405f70:	pop    ecx
  405f71:	xchg   esi,eax
  405f72:	sub    BYTE PTR [edi+0x3642a21e],0x77
  405f79:	dec    edx
  405f7a:	mov    ecx,DWORD PTR ds:[ecx+0x442cebd2]
  405f81:	mov    ?,WORD PTR [edi-0x45d2bb14]
  405f87:	out    dx,eax
  405f88:	aad    0x18
  405f8a:	cmp    DWORD PTR [ebp+0x4d],edx
  405f8d:	daa    
  405f8e:	push   0xae2ac384
  405f93:	xor    eax,0xe9cbcd99
  405f98:	pop    DWORD PTR [edi-0x58abe919]
  405f9e:	xor    DWORD PTR [ebx-0x5b],edx
  405fa1:	pop    esi
  405fa2:	leave  
  405fa3:	js     0x406013
  405fa5:	hlt    
  405fa6:	dec    edi
  405fa7:	push   ebp
  405fa8:	jb     0x405f9a
  405faa:	test   DWORD PTR [edx],ebx
  405fac:	out    0xb1,eax
  405fae:	les    esp,FWORD PTR [ecx]
  405fb0:	jecxz  0x405f6b
  405fb2:	dec    ebx
  405fb3:	or     eax,ebp
  405fb5:	ss addr16 or al,0x87
  405fb9:	mov    ecx,0x2c096619
  405fbe:	int    0x54
  405fc0:	sub    DWORD PTR ds:0xd651ce24,esp
  405fc6:	and    al,0x8e
  405fc8:	test   BYTE PTR [esi-0x2b],0x55
  405fcc:	cmp    BYTE PTR [edx-0x6b294e3b],ah
  405fd2:	xor    DWORD PTR [eax],edi
  405fd4:	pop    ds
  405fd5:	pop    ebp
  405fd6:	dec    ebx
  405fd7:	enter  0xce79,0xef
  405fdb:	sar    BYTE PTR [ebp+0x57118a46],1
  405fe1:	jle    0x405fbc
  405fe3:	aas    
  405fe4:	push   edi
  405fe5:	cmc    
  405fe6:	inc    ebp
  405fe7:	pop    ds
  405fe8:	repnz lods eax,DWORD PTR ds:[esi]
  405fea:	adc    bh,bl
  405fec:	dec    ebx
  405fed:	dec    ebp
  405fee:	inc    ecx
  405fef:	loope  0x405fda
  405ff1:	or     al,0x4
  405ff3:	pop    ss
  405ff4:	pop    ds
  405ff5:	leave  
  405ff6:	in     al,dx
  405ff7:	xlat   BYTE PTR ds:[ebx]
  405ff8:	scas   eax,DWORD PTR es:[edi]
  405ff9:	push   es
  405ffa:	mov    edi,ecx
  405ffc:	mov    ch,0xc
  405ffe:	leave  
  405fff:	loopne 0x40601f
  406001:	jo     0x405fc1
  406003:	lods   eax,DWORD PTR ds:[esi]
  406004:	sbb    ecx,edi
  406006:	cmc    
  406007:	cs mov ebx,0x6d55a40b
  40600d:	pop    ebx
  40600e:	pop    ds
  40600f:	inc    ebx
  406010:	repnz mov esp,ecx
  406013:	and    BYTE PTR [ebp+0x23],dh
  406016:	(bad)  
  406018:	sbb    al,0x65
  40601a:	push   0xaba96bdd
  40601f:	inc    ebx
  406020:	xchg   ebp,eax
  406021:	cs jmp 0xa71e87cb
  406027:	xor    al,0xaf
  406029:	inc    eax
  40602a:	jnp    0x4060a9
  40602c:	gs dec edx
  40602e:	test   DWORD PTR [ecx+esi*2+0x45872809],esp
  406035:	dec    eax
  406036:	in     eax,dx
  406037:	lods   al,BYTE PTR ds:[esi]
  406038:	ds xor eax,esi
  40603b:	add    eax,edi
  40603d:	cmp    edx,eax
  40603f:	je     0x408557
  406045:	mov    eax,DWORD PTR [ebp-0x8]
  406048:	mov    DWORD PTR [ebp-0x18],eax
  40604b:	mov    eax,DWORD PTR [ebp-0x10]
  40604e:	add    eax,DWORD PTR [ebp-0x54]
  406051:	mov    DWORD PTR [ebp-0x1c],0xf89c85a1
  406058:	mov    DWORD PTR [ebp-0x8],eax
  40605b:	mov    eax,0xf89c85a2
  406060:	mov    DWORD PTR [ebp-0x28],eax
  406063:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  40606a:	mov    DWORD PTR [ebp-0x40],0xf89c85bc
  406071:	mov    DWORD PTR [ebp-0x30],eax
  406074:	mov    eax,DWORD PTR [ebp-0x1c]
  406077:	xor    eax,esi
  406079:	add    eax,edi
  40607b:	jmp    0x408513
  406080:	mov    DWORD PTR [ebp-0x4c],0xf89c85b4
  406087:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40608e:	mov    eax,DWORD PTR [ebp-0x30]
  406091:	mov    edx,DWORD PTR [ebp-0xc]
  406094:	xor    eax,esi
  406096:	add    eax,edi
  406098:	imul   eax,edx
  40609b:	mov    edx,DWORD PTR [ebp-0x8]
  40609e:	mov    al,BYTE PTR [eax+edx*1]
  4060a1:	mov    BYTE PTR [ebp-0x1],al
  4060a4:	mov    eax,DWORD PTR [ebp-0x30]
  4060a7:	mov    edx,DWORD PTR [ebp-0xc]
  4060aa:	xor    eax,esi
  4060ac:	add    eax,edi
  4060ae:	imul   eax,edx
  4060b1:	mov    edx,DWORD PTR [ebp-0x5c]
  4060b4:	xor    edx,esi
  4060b6:	add    eax,edx
  4060b8:	mov    edx,DWORD PTR [ebp-0x8]
  4060bb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  4060c3:	mov    edx,DWORD PTR [ebp-0x4c]
  4060c6:	xor    edx,esi
  4060c8:	lea    eax,[edx+eax*1+0x3272f3]
  4060cf:	movzx  edx,BYTE PTR [ebp-0x1]
  4060d3:	xor    edx,eax
  4060d5:	mov    BYTE PTR [ebp-0x1],dl
  4060d8:	mov    al,BYTE PTR [ebp-0x1]
  4060db:	mov    edx,DWORD PTR [ebp-0x30]
  4060de:	mov    ebx,DWORD PTR [ebp-0xc]
  4060e1:	xor    edx,esi
  4060e3:	add    edx,edi
  4060e5:	imul   edx,ebx
  4060e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4060eb:	mov    BYTE PTR [edx+ebx*1],al
  4060ee:	mov    eax,DWORD PTR [ebp-0x30]
  4060f1:	mov    edx,DWORD PTR [ebp-0xc]
  4060f4:	xor    eax,esi
  4060f6:	add    eax,edi
  4060f8:	imul   eax,edx
  4060fb:	mov    edx,DWORD PTR [ebp-0x8]
  4060fe:	mov    al,BYTE PTR [eax+edx*1]
  406101:	mov    BYTE PTR [ebp-0x1],al
  406104:	mov    eax,DWORD PTR [ebp-0x30]
  406107:	mov    edx,DWORD PTR [ebp-0xc]
  40610a:	xor    eax,esi
  40610c:	add    eax,edi
  40610e:	imul   eax,edx
  406111:	mov    edx,DWORD PTR [ebp-0x28]
  406114:	xor    edx,esi
  406116:	add    eax,edx
  406118:	mov    edx,DWORD PTR [ebp-0x8]
  40611b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  406123:	mov    edx,DWORD PTR [ebp-0x50]
  406126:	xor    edx,esi
  406128:	lea    eax,[edx+eax*1+0x3272f3]
  40612f:	movzx  edx,BYTE PTR [ebp-0x1]
  406133:	xor    edx,eax
  406135:	mov    BYTE PTR [ebp-0x1],dl
  406138:	mov    al,BYTE PTR [ebp-0x1]
  40613b:	mov    edx,DWORD PTR [ebp-0x30]
  40613e:	mov    ebx,DWORD PTR [ebp-0xc]
  406141:	xor    edx,esi
  406143:	add    edx,edi
  406145:	imul   edx,ebx
  406148:	mov    ebx,DWORD PTR [ebp-0x8]
  40614b:	jmp    0x4084fc
  406150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406151:	mov    dh,0x7b
  406153:	sbb    eax,0x86859860
  406158:	scas   eax,DWORD PTR es:[edi]
  406159:	mov    cl,0xac
  40615b:	nop
  40615c:	xchg   esp,eax
  40615d:	mov    edi,0x385b1f33
  406162:	add    DWORD PTR [ebx-0x7c7ca311],0x70
  406169:	and    BYTE PTR [edi],dl
  40616b:	popf   
  40616c:	inc    edi
  40616d:	xchg   ebx,eax
  40616e:	repz pop esp
  406170:	sub    DWORD PTR [ebx+0x56749a89],0xd7141f99
  40617a:	cli    
  40617b:	mov    dh,0x8c
  40617d:	mov    bh,0x95
  40617f:	arpl   WORD PTR ds:0x7c87c43,di
  406185:	xor    DWORD PTR [eax+0x2e51a6c7],ebx
  40618b:	enter  0x921f,0xd3
  40618f:	into   
  406190:	or     dl,al
  406192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406193:	inc    eax
  406194:	mov    ebp,0x8f50b4f2
  406199:	add    al,0x14
  40619b:	(bad)  
  40619c:	test   eax,0x5a328284
  4061a1:	out    0x64,eax
  4061a3:	mov    ds:0x95774501,eax
  4061a8:	mov    eax,0xc8dabe1a
  4061ad:	stos   DWORD PTR es:[edi],eax
  4061ae:	mov    ?,WORD PTR [edx]
  4061b0:	(bad)  
  4061b1:	xor    eax,0x8af5483d
  4061b6:	fst    DWORD PTR [esi-0x33e68a8f]
  4061bc:	add    ebx,DWORD PTR [ebx+0x4b]
  4061bf:	and    DWORD PTR [eax],ebp
  4061c1:	push   0xe4be6047
  4061c6:	mov    ah,0x3c
  4061c8:	pop    ecx
  4061c9:	add    BYTE PTR [eax-0x5ece27a8],ch
  4061cf:	stc    
  4061d0:	fsubr  st(2),st
  4061d2:	scas   al,BYTE PTR es:[edi]
  4061d3:	push   edi
  4061d4:	xor    BYTE PTR [esi+eiz*2-0x30],al
  4061d8:	cdq    
  4061d9:	sbb    eax,0x24c43b9c
  4061de:	std    
  4061df:	in     eax,0x91
  4061e1:	fadd   st,st(7)
  4061e3:	mov    ch,bl
  4061e5:	jg     0x4061fe
  4061e7:	sub    eax,0x9be43296
  4061ec:	loopne 0x4061f9
  4061ee:	dec    ebx
  4061ef:	rol    DWORD PTR [edi+0x5a],1
  4061f2:	aaa    
  4061f3:	clc    
  4061f4:	dec    esi
  4061f5:	pusha  
  4061f6:	sbb    eax,0x1f7d5a46
  4061fb:	inc    ecx
  4061fc:	xor    dh,BYTE PTR [esp+eax*8+0x7ac53075]
  406203:	out    0x1c,eax
  406205:	loopne 0x40621e
  406207:	je     0x406190
  406209:	mov    ch,0x78
  40620b:	cmp    DWORD PTR [edi+0x58b8720e],ebx
  406211:	mov    BYTE PTR [eax-0x7a],cl
  406214:	adc    al,0x5b
  406216:	aaa    
  406217:	mov    ebx,0x68249a1
  40621c:	(bad)  
  40621d:	mov    ebx,0xd969e07f
  406222:	adc    esi,ecx
  406224:	xchg   BYTE PTR [ebp-0x5f],bl
  406227:	enter  0x3042,0xd6
  40622b:	mov    bh,0x51
  40622d:	lods   eax,DWORD PTR ds:[esi]
  40622e:	ja     0x40624c
  406230:	inc    edx
  406231:	arpl   di,ax
  406233:	imul   esi,DWORD PTR [eax],0xffffffac
  406236:	inc    edx
  406237:	sub    DWORD PTR [edi-0x28],ecx
  40623a:	sbb    ebp,ebp
  40623c:	(bad)  
  40623e:	inc    edx
  40623f:	pushf  
  406240:	adc    al,0x8f
  406242:	aam    0x21
  406244:	sub    al,0xeb
  406246:	pop    edx
  406247:	adc    eax,0x7bc54c92
  40624c:	or     eax,0x15f531ca
  406251:	cld    
  406252:	aas    
  406253:	les    ecx,FWORD PTR [ebp-0x41]
  406256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406257:	push   ebx
  406258:	test   BYTE PTR [edx+eiz*4],bh
  40625b:	in     al,0xb9
  40625d:	test   al,0x6c
  40625f:	loopne 0x406220
  406261:	enter  0xdab6,0x12
  406265:	mov    ebx,0xf7fb1ddb
  40626a:	mov    cs,WORD PTR [edx]
  40626c:	rdmsr  
  40626e:	scas   eax,DWORD PTR es:[edi]
  40626f:	xchg   ebp,eax
  406270:	push   cs
  406271:	add    BYTE PTR [edx+ebx*1-0x63],0x7e
  406276:	into   
  406277:	cdq    
  406278:	rcl    BYTE PTR [ebx-0x7c],cl
  40627b:	push   edi
  40627c:	xchg   BYTE PTR [esi-0x2e424db9],dh
  406282:	(bad)  
  406283:	mov    edi,0x35390e92
  406288:	push   0xfffffffa
  40628a:	call   0x3c0b:0xdf381835
  406291:	nop    ebp
  406294:	push   es
  406295:	jns    0x4062ca
  406297:	or     ebx,DWORD PTR [edi-0x68]
  40629a:	adc    BYTE PTR [edi],cl
  40629c:	xor    al,0x65
  40629e:	cmp    BYTE PTR ds:0xbffc379a,ah
  4062a4:	jl     0x406251
  4062a6:	jmp    0x8e68:0x459e6f7a
  4062ad:	push   0x49
  4062af:	fucomi st,st(2)
  4062b1:	sbb    al,0x35
  4062b3:	rcl    DWORD PTR [edi+0x1413fa36],0xcc
  4062ba:	jo     0x4062c5
  4062bc:	mov    BYTE PTR [ecx+0xf],cl
  4062bf:	mov    cl,bh
  4062c1:	jge    0x4062e2
  4062c3:	les    ebp,FWORD PTR [ebx+ebp*1-0x21]
  4062c7:	dec    edi
  4062c8:	add    eax,0x97fb9a78
  4062cd:	sbb    bl,ah
  4062cf:	int    0x5
  4062d1:	out    0xd0,eax
  4062d3:	rcr    DWORD PTR [ebp+0x5f461b47],0xcd
  4062da:	cmp    bh,BYTE PTR [esi+0x6bed1773]
  4062e0:	dec    ecx
  4062e1:	call   0x7992:0x5ae33e4
  4062e8:	gs push 0xddd1008
  4062ee:	and    DWORD PTR [ebx+ecx*8-0xe],edi
  4062f2:	iret   
  4062f3:	pop    esi
  4062f4:	adc    BYTE PTR [edx*2+0x650930a4],al
  4062fb:	lods   eax,DWORD PTR ds:[esi]
  4062fc:	fnsave [ebx-0x70]
  4062ff:	cmp    al,0x42
  406301:	addr16 (bad) 
  406303:	mov    ah,0x95
  406305:	ret    0x7ebc
  406308:	sti    
  406309:	inc    esi
  40630a:	or     al,0x2a
  40630c:	add    DWORD PTR [ebp-0x2e],ecx
  40630f:	(bad)  
  406310:	repz out 0x60,al
  406313:	mov    ebp,0x61109840
  406318:	jle    0x40629c
  40631a:	dec    edx
  40631b:	enter  0x7225,0xfc
  40631f:	retf   
  406320:	pop    esi
  406321:	xchg   ebx,eax
  406322:	lods   eax,DWORD PTR ds:[esi]
  406323:	push   ds
  406324:	xlat   BYTE PTR ds:[ebx]
  406325:	dec    esi
  406326:	cmp    eax,edi
  406328:	xor    ecx,DWORD PTR [edi-0x772c1075]
  40632e:	out    dx,eax
  40632f:	in     eax,0xdc
  406331:	inc    eax
  406332:	adc    al,0x63
  406334:	mov    cl,0xa6
  406336:	inc    ebx
  406337:	and    al,0xb6
  406339:	pop    edi
  40633a:	mov    ebp,0x4b668020
  40633f:	cmp    al,0x16
  406341:	xchg   ebp,eax
  406342:	(bad)  
  406343:	adc    eax,0xeab62347
  406348:	push   eax
  406349:	pop    ebp
  40634a:	loopne 0x4062ef
  40634c:	add    eax,0xbf04d093
  406351:	push   edi
  406352:	jg     0x4062fe
  406354:	daa    
  406355:	push   ds
  406356:	xchg   ebp,eax
  406358:	mov    BYTE PTR [ebp+0x6facadae],ch
  40635e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40635f:	mov    ebx,0x2bb3c394
  406364:	sbb    bl,BYTE PTR [eax+0x55]
  406367:	sbb    DWORD PTR [esi+0x68048fb6],esp
  40636d:	mov    dl,bl
  40636f:	test   eax,0x252cfe03
  406374:	dec    eax
  406375:	popf   
  406376:	out    dx,al
  406377:	dec    esi
  406378:	fisttp DWORD PTR [ebx-0x777b1603]
  40637e:	mov    dl,BYTE PTR [edx+0x7986c050]
  406384:	mov    ah,0x4a
  406387:	pop    ss
  406388:	je     0x406315
  40638a:	fidivr DWORD PTR [ebp-0x36d370a5]
  406390:	mov    edx,0x7427c6f8
  406395:	xor    bl,BYTE PTR [edx-0x1b]
  406398:	mov    ds:0x9d7e8eb0,al
  40639d:	leave  
  40639e:	mov    ds:0xa4d34520,eax
  4063a3:	xor    al,0xef
  4063a5:	jge    0x406348
  4063a7:	push   esi
  4063a8:	pop    ss
  4063a9:	ds dec ecx
  4063ab:	push   es
  4063ac:	aas    
  4063ad:	push   ecx
  4063ae:	inc    edi
  4063af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063b0:	ror    DWORD PTR [ecx+0xd63c74e],cl
  4063b6:	jae    0x40637a
  4063b8:	fadd   st,st(5)
  4063ba:	(bad)  [ebp-0x2fb0f171]
  4063c0:	adc    BYTE PTR [edx+0x57592668],bh
  4063c6:	cmp    al,0x67
  4063c8:	jns    0x406396
  4063ca:	test   al,0x75
  4063cc:	and    al,0xd7
  4063ce:	rcl    BYTE PTR cs:[ecx],1
  4063d1:	ins    BYTE PTR es:[edi],dx
  4063d2:	pusha  
  4063d3:	stos   BYTE PTR es:[edi],al
  4063d4:	test   DWORD PTR [edx+ebp*4],edi
  4063d7:	add    BYTE PTR [edx+0x3d8a4b6f],bl
  4063dd:	in     al,dx
  4063de:	loopne 0x40641b
  4063e0:	popf   
  4063e1:	push   0xffffff97
  4063e3:	ret    
  4063e4:	mov    eax,0x3aa86dc2
  4063e9:	jl     0x40640b
  4063eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063ec:	dec    esp
  4063ed:	idiv   DWORD PTR [edi]
  4063ef:	ror    BYTE PTR [eax],cl
  4063f1:	lea    ebx,[ecx]
  4063f3:	jmp    0xdfc85cef
  4063f8:	dec    esp
  4063f9:	cli    
  4063fa:	and    al,0x5d
  4063fc:	enter  0x3f20,0x61
  406400:	xchg   ebp,eax
  406401:	inc    esi
  406402:	jp     0x406395
  406404:	cdq    
  406405:	mov    ch,ch
  406407:	dec    ecx
  406408:	jmp    0xb6436712
  40640d:	adc    eax,0xb456242e
  406412:	xor    eax,DWORD PTR [edi-0x226e54cb]
  406418:	call   0xce4c:0xcd118ba
  40641f:	inc    ebp
  406420:	sar    edi,0x2a
  406423:	iret   
  406424:	mov    eax,ds:0xb91bbcbf
  406429:	cmp    eax,0xb30d3dda
  40642e:	test   eax,0x368aea5d
  406433:	inc    edx
  406434:	push   ebx
  406435:	sbb    eax,0x9a7c1363
  40643a:	adc    DWORD PTR [esi+edi*8],0x213856ce
  406441:	adc    eax,0xeadef03a
  406446:	cmp    ebx,0x3555f6a3
  40644c:	dec    cl
  40644e:	mov    ah,0xac
  406450:	ret    0xd0bb
  406453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406454:	out    dx,al
  406455:	jbe    0x406467
  406457:	push   ss
  406458:	xchg   edx,eax
  406459:	mov    eax,ds:0x12a10fc4
  40645e:	scas   eax,DWORD PTR es:[edi]
  40645f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406460:	ins    DWORD PTR es:[edi],dx
  406461:	in     eax,dx
  406462:	lods   al,BYTE PTR ds:[esi]
  406463:	cli    
  406464:	rcr    DWORD PTR [ecx-0x5ce8c456],0x0
  40646b:	mov    DWORD PTR [esi+0x50],0xb25e731c
  406472:	adc    al,ch
  406474:	cmp    DWORD PTR [eax-0x154ae8e5],esi
  40647a:	stos   DWORD PTR es:[edi],eax
  40647b:	call   0x4ee8:0x108e02d2
  406482:	jmp    0xd87f5e54
  406487:	jmp    0x40644b
  406489:	xchg   edi,eax
  40648a:	shl    DWORD PTR [esi+0x69],0xe9
  40648e:	mov    edi,0x99356de0
  406493:	ins    BYTE PTR es:[edi],dx
  406494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406495:	pop    ds
  406496:	pop    ss
  406497:	clc    
  406498:	xor    al,0x29
  40649a:	and    ch,BYTE PTR [esi+0x78]
  40649d:	std    
  40649e:	inc    edi
  40649f:	je     0x4064ab
  4064a1:	mov    ds:0xf1ae01b8,eax
  4064a6:	xor    BYTE PTR [eax-0x64],bl
  4064a9:	cmc    
  4064aa:	fsubr  DWORD PTR [edx+0x3b8ca92c]
  4064b0:	mov    edi,0x2378516e
  4064b5:	fdiv   QWORD PTR [ecx-0x2f7631a0]
  4064bb:	adc    dh,BYTE PTR [esi]
  4064bd:	add    esi,ebp
  4064bf:	cmp    al,0x37
  4064c1:	jle    0x406467
  4064c3:	stc    
  4064c4:	hlt    
  4064c5:	pop    es
  4064c6:	leave  
  4064c7:	shl    DWORD PTR [edi-0x40],0xda
  4064cb:	cmp    eax,0x433ec96e
  4064d0:	into   
  4064d1:	add    al,0xe4
  4064d3:	ja     0x406493
  4064d5:	push   0x420b4064
  4064da:	fcmovu st,st(6)
  4064dc:	jl     0x4064f2
  4064de:	push   ds
  4064df:	(bad)  
  4064e0:	mov    ebx,0x822306a0
  4064e5:	push   0xcec3505c
  4064ea:	loop   0x406510
  4064ec:	and    BYTE PTR [eax-0x546d2dd9],0xc8
  4064f3:	enter  0x51a9,0x1f
  4064f7:	add    dl,ch
  4064f9:	dec    esp
  4064fa:	test   BYTE PTR [eax],dh
  4064fc:	ins    BYTE PTR es:[edi],dx
  4064fd:	gs jle 0x406556
  406500:	add    eax,0x5e5b59bf
  406505:	in     al,0xc0
  406507:	sbb    BYTE PTR [edi],bl
  406509:	adc    BYTE PTR [edi+edi*4-0x248c3a7b],ch
  406510:	dec    ebp
  406511:	lahf   
  406512:	add    esi,DWORD PTR ds:0x5e56c190
  406518:	(bad)  
  406519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40651a:	adc    cl,BYTE PTR [ecx+0x2e]
  40651d:	sub    BYTE PTR [ecx+0x4311916b],cl
  406523:	or     eax,0x15ce99d2
  406528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406529:	stos   BYTE PTR es:[edi],al
  40652a:	call   0xb3d6df9a
  40652f:	adc    ch,0x3c
  406532:	enter  0x6387,0x3e
  406536:	jae    0x40650b
  406538:	push   esi
  406539:	stos   BYTE PTR es:[edi],al
  40653a:	xchg   ebx,eax
  40653b:	call   0x5baff652
  406540:	stos   DWORD PTR es:[edi],eax
  406541:	xchg   ebx,eax
  406542:	lods   eax,DWORD PTR ds:[esi]
  406543:	inc    ebx
  406544:	add    esp,ebx
  406546:	pop    eax
  406547:	jmp    0x406505
  406549:	in     eax,0x14
  40654b:	or     edx,DWORD PTR [ecx-0x7dc60abf]
  406551:	retf   0x2e35
  406554:	in     al,0xfa
  406556:	out    dx,al
  406557:	sub    bl,ch
  406559:	and    DWORD PTR [ebp-0xb],eax
  40655c:	jb     0x406598
  40655e:	adc    esp,DWORD PTR [ebx+0x779026e]
  406564:	cmp    BYTE PTR [eax-0x685ee7c1],0xdd
  40656b:	call   0x4cd43977
  406570:	icebp  
  406571:	es jmp 0x2711f3fb
  406577:	icebp  
  406578:	rcr    BYTE PTR [ebx],cl
  40657a:	aas    
  40657b:	cmp    al,0x10
  40657d:	rcl    al,0x23
  406580:	jmp    0xf65dafea
  406585:	mov    WORD PTR [ecx+0x33],?
  406588:	in     al,0x7b
  40658a:	test   esi,ecx
  40658c:	stos   DWORD PTR es:[edi],eax
  40658d:	mov    al,ds:0xb399180a
  406592:	lahf   
  406593:	fistp  DWORD PTR [esi]
  406595:	(bad)  
  406596:	das    
  406597:	sbb    ah,BYTE PTR [ecx]
  406599:	(bad)  ds:0x6f9ca888
  40659f:	and    ch,bh
  4065a1:	pop    ebx
  4065a2:	fwait
  4065a3:	das    
  4065a4:	test   al,0xb1
  4065a6:	ins    BYTE PTR es:[edi],dx
  4065a7:	ror    ebp,1
  4065a9:	dec    esi
  4065aa:	jecxz  0x406548
  4065ac:	call   0xccfd:0xcd34e808
  4065b3:	jne    0x4065bc
  4065b5:	xor    DWORD PTR ds:0x7b14aaf3,esp
  4065bb:	jp     0x40662f
  4065bd:	cmp    bl,bh
  4065bf:	jmp    0x352fc369
  4065c4:	mov    al,ds:0x8580ca64
  4065c9:	aas    
  4065ca:	xor    eax,0xda49b1a5
  4065cf:	pop    ds
  4065d0:	xor    al,0xbc
  4065d2:	outs   dx,BYTE PTR ds:[esi]
  4065d3:	rdmsr  
  4065d5:	sub    al,0x19
  4065d7:	push   ebp
  4065d8:	push   edx
  4065d9:	ins    BYTE PTR es:[edi],dx
  4065da:	sub    bl,0xa8
  4065dd:	inc    ebx
  4065de:	mov    ebp,DWORD PTR [ecx-0x5d]
  4065e1:	call   0xcb7c:0x94cb459d
  4065e8:	mov    ds:0x667eeb9b,eax
  4065ed:	cmp    BYTE PTR [edi+ebx*2-0x12],0x5d
  4065f2:	pop    ss
  4065f3:	mov    bl,0x65
  4065f5:	out    0x32,eax
  4065f7:	(bad)  
  4065f9:	popa   
  4065fa:	jb     0x40665f
  4065fc:	inc    esp
  4065fd:	lds    ecx,FWORD PTR [ebp+0x7d]
  406600:	push   ds
  406601:	lods   eax,DWORD PTR ds:[esi]
  406602:	adc    eax,0xf0b5c1c2
  406607:	addr16 jns 0x4065f6
  40660a:	jp     0x406607
  40660c:	fucomip st,st(5)
  40660e:	or     eax,DWORD PTR [edx+0x1e]
  406611:	cmp    BYTE PTR [edi-0x3d],dh
  406614:	jle    0x4065f2
  406616:	clc    
  406617:	and    DWORD PTR ds:0xa3343464,edx
  40661d:	popa   
  40661e:	inc    esp
  40661f:	dec    ebx
  406620:	push   ebp
  406621:	add    esi,DWORD PTR [esi]
  406623:	js     0x4065ad
  406625:	ret    0x1a64
  406628:	inc    ebx
  406629:	pop    edx
  40662a:	loope  0x406612
  40662c:	pop    es
  40662d:	mov    cl,0x52
  40662f:	jmp    0xd2bde33e
  406634:	push   0xb62cffc0
  406639:	loope  0x406652
  40663b:	sub    al,0xde
  40663d:	mov    al,ds:0x9362c5ae
  406642:	pop    edx
  406643:	fstp   st(4)
  406645:	out    dx,al
  406646:	fist   WORD PTR [ebp-0x1]
  406649:	je     0x406638
  40664b:	data16 fstp DWORD PTR [edi+0x2]
  40664f:	mov    ebp,0xf72b86c0
  406654:	adc    DWORD PTR [eax-0x1c],ebx
  406657:	(bad)  
  406658:	mov    bl,0xa8
  40665a:	jl     0x4066a2
  40665c:	push   ecx
  40665d:	loop   0x406666
  40665f:	mov    ds:0x988b50b9,eax
  406664:	fldenv [edx+0x2b93c969]
  40666a:	imul   eax,ebp,0x5
  40666d:	dec    esi
  40666e:	pop    esp
  40666f:	das    
  406670:	outs   dx,DWORD PTR ds:[esi]
  406671:	lock inc edx
  406673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406674:	and    cl,BYTE PTR [ebp-0x665a1b71]
  40667a:	push   ss
  40667b:	jle    0x40665a
  40667d:	inc    ebp
  40667e:	pop    esi
  40667f:	(bad)  
  406680:	das    
  406681:	and    ecx,DWORD PTR [edi]
  406683:	stos   BYTE PTR es:[edi],al
  406684:	int    0x48
  406686:	mov    fs,WORD PTR [edi+0x51]
  406689:	jmp    0x406673
  40668b:	int3   
  40668c:	and    al,dh
  40668e:	cld    
  40668f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406690:	or     BYTE PTR [eax-0x2a0a9e19],0x79
  406697:	dec    ecx
  406698:	adc    al,0x2d
  40669a:	jecxz  0x4066cd
  40669c:	dec    ebx
  40669d:	(bad)  
  40669e:	mov    cs,ebp
  4066a0:	xchg   bh,al
  4066a2:	sbb    eax,DWORD PTR [edx+0x34554f26]
  4066a8:	pusha  
  4066a9:	xchg   ebp,eax
  4066aa:	mov    ds:0x956910cf,eax
  4066af:	fldenv [ebx+0x58]
  4066b2:	push   0x7531e15
  4066b7:	bound  ebp,QWORD PTR ds:0x277cfb7e
  4066bd:	int    0x2b
  4066bf:	jae    0x406690
  4066c1:	sub    DWORD PTR [ebp+0x62ef70f6],edi
  4066c7:	mov    ah,0x20
  4066c9:	ja     0x406723
  4066cb:	cwde   
  4066cc:	jb     0x406720
  4066ce:	(bad)  
  4066d0:	mov    esi,0xc520d9ca
  4066d5:	cmp    esi,DWORD PTR es:[edx]
  4066d8:	xchg   ecx,eax
  4066d9:	xor    DWORD PTR cs:0x78de750a,esi
  4066e0:	call   0xe063:0xdf9252db
  4066e7:	dec    ebx
  4066e8:	retf   
  4066e9:	(bad)
  4066ec:	cmp    DWORD PTR [ebx-0x72],ebx
  4066ef:	cmc    
  4066f0:	dec    edx
  4066f1:	lods   al,BYTE PTR ds:[esi]
  4066f2:	mov    esi,0x89efe69a
  4066f7:	mov    ecx,0x79b78740
  4066fc:	div    BYTE PTR [ebp+0x71]
  4066ff:	rol    DWORD PTR [eax],cl
  406701:	inc    edx
  406702:	xchg   ebp,esi
  406704:	sti    
  406705:	mov    WORD PTR [edx+eax*4],ds
  406708:	jb     0x40669f
  40670a:	mov    bl,0x3a
  40670c:	xchg   ebx,eax
  40670d:	je     0x4066d3
  40670f:	iret   
  406710:	push   ecx
  406711:	mov    ebx,0x6106d087
  406716:	mov    WORD PTR [edx],cs
  406718:	adc    ebp,ebx
  40671a:	and    DWORD PTR [edi+edx*1-0x8],eax
  40671e:	das    
  40671f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406720:	adc    DWORD PTR [edx+0x5a0348ca],eax
  406726:	inc    ebp
  406727:	pop    ecx
  406728:	iret   
  406729:	xlat   BYTE PTR ds:[ebx]
  40672a:	(bad)  
  40672b:	rol    edi,1
  40672d:	out    0xaa,al
  40672f:	sbb    DWORD PTR [eax-0x53],edi
  406732:	fsub   QWORD PTR [esi+0xb]
  406735:	repz jne 0x406726
  406738:	aaa    
  406739:	adc    dh,ah
  40673b:	call   0x7dad205e
  406740:	mov    ah,0xb5
  406742:	icebp  
  406743:	sbb    DWORD PTR gs:[ecx],eax
  406746:	addr16 and al,0x3c
  406749:	loope  0x406719
  40674b:	data16 jae 0x406742
  40674e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40674f:	enter  0x8412,0xd5
  406753:	xchg   esi,eax
  406754:	xchg   edi,eax
  406755:	mov    cl,BYTE PTR [ebx+0x31]
  406758:	pop    eax
  406759:	sahf   
  40675a:	enter  0xbf00,0x2
  40675e:	pop    ecx
  40675f:	fimul  DWORD PTR [edx+eiz*8-0x2466ff3e]
  406766:	mov    ebp,DWORD PTR [edx+edi*4-0x2a84a508]
  40676d:	xchg   ebp,eax
  40676e:	mov    cl,0x9a
  406770:	je     0x4067ad
  406772:	outs   dx,DWORD PTR ds:[esi]
  406773:	push   edx
  406774:	bound  ecx,QWORD PTR [esp+eiz*4]
  406777:	mov    dl,0x62
  406779:	or     edx,0x2976f3f4
  40677f:	dec    esp
  406780:	add    BYTE PTR [edx],dl
  406782:	push   ebx
  406783:	adc    bh,0x97
  406786:	stc    
  406787:	bound  esp,QWORD PTR [ecx+0x3722939d]
  40678d:	sbb    DWORD PTR [edx-0xbeffb16],esp
  406793:	or     BYTE PTR [ebp-0x5],ch
  406796:	jae    0x4067ca
  406798:	sahf   
  406799:	dec    ebp
  40679a:	dec    esi
  40679b:	push   cs
  40679c:	pop    ecx
  40679d:	or     bh,dh
  40679f:	or     esi,edx
  4067a1:	mov    al,ds:0xe5b30cf7
  4067a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067a7:	retf   
  4067a8:	sbb    edi,edi
  4067aa:	icebp  
  4067ab:	push   0x6f
  4067ad:	jle    0x40674d
  4067af:	lahf   
  4067b0:	add    al,0x4c
  4067b2:	retf   0xa59c
  4067b5:	rcl    edi,cl
  4067b7:	pop    es
  4067b8:	outs   dx,BYTE PTR ds:[esi]
  4067b9:	inc    edx
  4067ba:	imul   ebp,DWORD PTR [edx],0xffffffbb
  4067bd:	retf   0x16c9
  4067c0:	or     eax,0xb77f3566
  4067c5:	sar    DWORD PTR [edx+0x73f7855a],1
  4067cb:	rol    ecx,cl
  4067cd:	mov    al,ds:0x54a36148
  4067d2:	imul   BYTE PTR [edx+0x1f4a73ac]
  4067d8:	push   ebp
  4067d9:	sbb    ah,ah
  4067db:	adc    DWORD PTR [ecx-0x43b56b57],0x4d601316
  4067e5:	fcom   DWORD PTR [eax-0x36f43997]
  4067eb:	mov    esp,0xd6d8a8e1
  4067f0:	sbb    dl,ch
  4067f2:	push   0xcf38074c
  4067f7:	loop   0x406847
  4067f9:	scas   eax,DWORD PTR es:[edi]
  4067fa:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4067fd:	jmp    0xe10b5fd1
  406802:	rcl    DWORD PTR [ebx],cl
  406804:	jle    0x4067b8
  406806:	jnp    0x40685b
  406808:	mov    ebp,0x14647761
  40680d:	xchg   edi,eax
  40680e:	loopne 0x406805
  406810:	pop    ecx
  406811:	add    edx,eax
  406813:	daa    
  406814:	jnp    0x4067f3
  406816:	aas    
  406817:	arpl   WORD PTR [ecx+0x27a3397e],cx
  40681d:	jb     0x40680d
  40681f:	xor    bl,BYTE PTR [ecx-0x21]
  406822:	xor    DWORD PTR [ebx+0x4713419d],0x7c319a
  40682c:	out    dx,al
  40682d:	mov    eax,0x1f06a53a
  406832:	add    eax,0xb605357a
  406837:	in     eax,0xe4
  406839:	pop    eax
  40683a:	mov    esp,0xfe4df6ef
  40683f:	test   BYTE PTR [ecx-0x22],ah
  406842:	jne    0x406819
  406844:	fcomp  QWORD PTR [ebp+0x560e28a7]
  40684a:	cmp    DWORD PTR [ebx],ebp
  40684c:	outs   dx,DWORD PTR ds:[esi]
  40684d:	xchg   ecx,eax
  40684e:	sub    cl,BYTE PTR [ecx+0x13bd0943]
  406854:	and    eax,0xf256655
  406859:	sbb    BYTE PTR [eax+0x7c8703b],bl
  40685f:	xchg   edx,eax
  406860:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406861:	dec    esp
  406862:	cld    
  406863:	push   ds
  406864:	push   eax
  406865:	fadd   st(2),st
  406867:	xchg   esi,eax
  406868:	ins    DWORD PTR es:[edi],dx
  406869:	out    dx,eax
  40686a:	xchg   edx,eax
  40686b:	sbb    al,0x55
  40686d:	retf   
  40686e:	add    cl,dh
  406870:	fstp   QWORD PTR [ebx+0x133894f2]
  406876:	jo     0x4068f7
  406878:	adc    edi,DWORD PTR [esi-0x35]
  40687b:	outs   dx,DWORD PTR ds:[esi]
  40687c:	nop
  40687d:	push   ebx
  40687e:	ss mov esp,0xf94c23fb
  406884:	retf   
  406885:	mov    bh,0x28
  406887:	aad    0xa9
  406889:	cwde   
  40688a:	ins    DWORD PTR es:[edi],dx
  40688b:	push   eax
  40688c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40688d:	pop    ss
  40688e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40688f:	and    eax,0x7a4a967c
  406894:	xor    DWORD PTR [edx],edx
  406896:	push   ss
  406897:	ja     0x4068c2
  406899:	pop    ecx
  40689a:	aam    0x61
  40689c:	les    esp,FWORD PTR [ebp+0x70]
  40689f:	out    0xea,eax
  4068a1:	jp     0x4068ba
  4068a3:	lea    ebp,[ebx-0x3e017481]
  4068a9:	call   0xdc185ff0
  4068ae:	(bad)  
  4068af:	aad    0x3
  4068b1:	pop    esp
  4068b2:	push   0xd94b4071
  4068b7:	adc    eax,0x8ecc425b
  4068bc:	jp     0x406878
  4068be:	push   ecx
  4068bf:	mov    ebx,0x94e502a9
  4068c4:	cld    
  4068c5:	addr16 mov ecx,0x88d0309d
  4068cb:	xchg   ebp,eax
  4068cc:	retf   
  4068cd:	je     0x406926
  4068cf:	dec    edi
  4068d0:	and    edx,DWORD PTR [ebx+eiz*1]
  4068d3:	push   eax
  4068d4:	adc    BYTE PTR [edx+0x3e847275],0x4c
  4068db:	test   al,0x97
  4068dd:	jbe    0x4068b1
  4068df:	addr16 mov ebp,0xbd041f98
  4068e5:	jmp    0x4068dd
  4068e7:	push   edi
  4068e8:	jg     0x40688e
  4068ea:	push   edi
  4068eb:	sbb    ebp,DWORD PTR [edx+0x110d1edc]
  4068f1:	add    cl,BYTE PTR [esi]
  4068f3:	(bad)  
  4068f5:	fsubp  st(6),st
  4068f7:	outs   dx,BYTE PTR ds:[esi]
  4068f8:	mul    BYTE PTR [ebp+0x19af3bac]
  4068fe:	pop    edx
  4068ff:	ret    0x1191
  406902:	out    dx,eax
  406903:	or     al,0xfc
  406905:	icebp  
  406906:	add    bl,ch
  406908:	add    al,0xe4
  40690a:	adc    cl,ch
  40690c:	and    al,0x4c
  40690e:	sti    
  40690f:	cli    
  406910:	inc    eax
  406911:	jge    0x406965
  406913:	lock ffreep st(2)
  406916:	jecxz  0x406931
  406918:	shr    DWORD PTR [ecx],0x6c
  40691b:	cmp    al,al
  40691d:	or     BYTE PTR [eax-0x42],ah
  406920:	dec    esp
  406921:	xor    ch,al
  406923:	push   eax
  406924:	add    DWORD PTR [esi+edx*8+0x4c],ecx
  406928:	je     0x406964
  40692a:	push   cs
  40692b:	les    ebp,FWORD PTR [edi]
  40692d:	loop   0x4069ad
  40692f:	scas   al,BYTE PTR es:[edi]
  406930:	push   ebp
  406931:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406932:	xlat   BYTE PTR ds:[ebx]
  406933:	mov    bl,0xfd
  406935:	imul   edi,DWORD PTR [eax],0x50
  406938:	pop    ds
  406939:	int3   
  40693a:	in     al,dx
  40693b:	push   esi
  40693c:	mov    bh,0xd
  40693e:	adc    DWORD PTR [edx+0x45],edx
  406941:	dec    edx
  406942:	icebp  
  406943:	stc    
  406944:	test   BYTE PTR [edi+0x63352b4e],dh
  40694a:	or     ebp,DWORD PTR [ebp-0x132a9d74]
  406950:	push   edi
  406951:	mov    edi,0x7b275905
  406956:	adc    eax,0x1e469a59
  40695b:	adc    edi,DWORD PTR [eax-0x3ea0a2d7]
  406961:	pop    ebp
  406962:	pop    ss
  406963:	add    al,0x38
  406965:	add    DWORD PTR [ebx],0xb154d9b5
  40696b:	out    dx,al
  40696c:	scas   eax,DWORD PTR es:[edi]
  40696d:	pop    ebp
  40696e:	add    BYTE PTR [ecx+0x61],cl
  406971:	adc    BYTE PTR [esp],bh
  406974:	xor    ch,BYTE PTR [ebx]
  406976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406977:	pop    DWORD PTR ds:0xc462dae
  40697d:	jp     0x406959
  40697f:	adc    eax,DWORD PTR [ebx-0x7e]
  406982:	push   esi
  406983:	adc    DWORD PTR [ebp-0x5aed3ec3],ecx
  406989:	push   ecx
  40698a:	xor    ah,dl
  40698c:	sbb    eax,ebp
  40698e:	cs test bl,dh
  406991:	sub    ebx,eax
  406993:	and    eax,0xdabed548
  406998:	push   ecx
  406999:	aas    
  40699a:	enter  0xfffb,0xb8
  40699e:	es dec eax
  4069a0:	adc    ch,BYTE PTR [ecx-0x5f06aedc]
  4069a6:	and    al,dh
  4069a8:	mov    edx,0x7c0849e6
  4069ad:	sub    edi,DWORD PTR [esi-0x4fd93816]
  4069b3:	xor    al,0xd5
  4069b5:	xor    al,cl
  4069b7:	adc    eax,esp
  4069b9:	(bad)  
  4069ba:	xor    dl,BYTE PTR [ebp-0x74]
  4069bd:	xchg   ebx,eax
  4069be:	fmul   DWORD PTR [esi]
  4069c0:	jecxz  0x4069ef
  4069c2:	out    0x71,eax
  4069c4:	repnz mov eax,ds:0x686b74bc
  4069ca:	mov    ah,0x3b
  4069cc:	pop    eax
  4069cd:	sbb    eax,0x79663c89
  4069d2:	cld    
  4069d3:	fwait
  4069d4:	xor    BYTE PTR [ebp+0x3c],dh
  4069d7:	popa   
  4069d8:	cld    
  4069d9:	jbe    0x406961
  4069db:	add    DWORD PTR [eax],esi
  4069dd:	aaa    
  4069de:	cmp    eax,0x9b80fb98
  4069e3:	lods   eax,DWORD PTR ds:[esi]
  4069e4:	inc    eax
  4069e5:	out    0x8c,al
  4069e7:	(bad)  
  4069e8:	outs   dx,BYTE PTR ds:[esi]
  4069e9:	sub    edi,eax
  4069eb:	js     0x406a69
  4069ed:	sub    dl,bl
  4069ef:	ficomp WORD PTR [ecx-0x40a40bde]
  4069f5:	inc    edi
  4069f6:	cmp    ebx,ebp
  4069f8:	pop    eax
  4069f9:	dec    esi
  4069fa:	fld    QWORD PTR [edx+0x657b8a22]
  406a00:	test   al,0xb2
  406a02:	retf   
  406a03:	sahf   
  406a04:	mov    ah,0x3
  406a06:	out    0x12,al
  406a08:	jno    0x406a35
  406a0a:	add    al,0x5f
  406a0c:	or     eax,0xdc6b99ec
  406a11:	dec    ecx
  406a12:	pop    ebx
  406a13:	push   esi
  406a14:	das    
  406a15:	lahf   
  406a16:	xchg   esi,eax
  406a17:	jb     0x4069e1
  406a19:	cdq    
  406a1a:	nop
  406a1b:	arpl   WORD PTR [esi+eiz*8-0x6d0ccf05],cx
  406a22:	imul   edi
  406a24:	or     ecx,esp
  406a26:	js     0x406a98
  406a28:	xchg   esi,eax
  406a29:	mov    ebx,0x434927d5
  406a2e:	aaa    
  406a2f:	sahf   
  406a30:	or     eax,0x3a09724b
  406a35:	cmp    eax,0x5cc1683
  406a3a:	xchg   ebx,eax
  406a3c:	mov    ebx,0x3533989e
  406a41:	xor    al,0x78
  406a43:	ret    0xfd26
  406a46:	sub    DWORD PTR [esi+0x14e6a3c9],esi
  406a4c:	mov    edi,0x828e21f2
  406a51:	mov    ch,0xea
  406a53:	mov    al,ds:0x135849fa
  406a58:	out    dx,al
  406a59:	inc    ebp
  406a5a:	loop   0x4069ef
  406a5c:	mov    esp,0x5a888aa9
  406a61:	rcr    bh,0xa9
  406a64:	cmp    ah,BYTE PTR [edi-0x5ed0b3e1]
  406a6a:	imul   esi,DWORD PTR [ebx+0x4c],0x5e
  406a6e:	push   edi
  406a6f:	or     eax,0x74aa061a
  406a74:	dec    ecx
  406a75:	jns    0x406a5a
  406a77:	lods   eax,DWORD PTR ds:[esi]
  406a78:	jno    0x4069ff
  406a7a:	dec    edx
  406a7b:	xchg   edi,eax
  406a7c:	ja     0x406a86
  406a7e:	stc    
  406a7f:	or     BYTE PTR [ebx],dh
  406a81:	(bad)  
  406a82:	in     al,dx
  406a83:	fcomp  QWORD PTR [ebx+eiz*8-0x265225d4]
  406a8a:	jb     0x406acb
  406a8c:	dec    ecx
  406a8d:	imul   ecx,DWORD PTR [ecx-0x5bee5a2e],0xaac04b47
  406a97:	sbb    BYTE PTR [esi+0xdd8f1e6],0x57
  406a9e:	aas    
  406a9f:	loopne 0x406ade
  406aa1:	jge    0x406ac8
  406aa3:	add    DWORD PTR [ebx],0x4b
  406aa6:	mov    eax,ds:0x78758c31
  406aab:	mov    ds:0x3a7d1918,eax
  406ab0:	pushf  
  406ab1:	dec    edi
  406ab2:	jns    0x406b26
  406ab4:	es jmp 0xd77e8377
  406aba:	outs   dx,DWORD PTR ds:[esi]
  406abb:	ror    DWORD PTR [ebx+0x6c],1
  406abe:	out    dx,eax
  406abf:	dec    ebp
  406ac0:	scas   eax,DWORD PTR es:[edi]
  406ac1:	ins    BYTE PTR es:[edi],dx
  406ac2:	cwde   
  406ac3:	sub    BYTE PTR [ecx+0x1b],ah
  406ac6:	mov    cl,0x5
  406ac8:	fidivr WORD PTR [eax-0x39c35b99]
  406ace:	mov    ch,0xf9
  406ad0:	test   BYTE PTR [edx],bh
  406ad2:	xchg   esi,eax
  406ad3:	in     eax,0x72
  406ad5:	leave  
  406ad6:	mov    al,ds:0x5221713e
  406adb:	mov    ebp,0x5fd014c
  406ae0:	std    
  406ae1:	xchg   edx,eax
  406ae2:	push   cs
  406ae3:	lea    ebx,[ecx+0x7e21a4ba]
  406ae9:	mov    edx,0x4972e744
  406aee:	popf   
  406aef:	mov    ds:0x32e2f856,eax
  406af4:	mov    bl,ch
  406af6:	fidivr WORD PTR [ebx]
  406af8:	ins    DWORD PTR es:[edi],dx
  406af9:	(bad)  
  406afa:	cmc    
  406afb:	jg     0x406b47
  406afd:	int3   
  406afe:	sub    bl,bl
  406b00:	sbb    BYTE PTR [ecx-0x3f9becce],0x94
  406b07:	ins    BYTE PTR es:[edi],dx
  406b08:	jp     0x406abb
  406b0a:	xchg   edi,eax
  406b0b:	mov    ds:0x59e52708,eax
  406b10:	aam    0xf3
  406b12:	mov    edx,0xec7b35fb
  406b17:	int3   
  406b18:	fs dec edi
  406b1a:	sbb    BYTE PTR [ecx-0xd51b68a],cl
  406b20:	fistp  QWORD PTR [eax-0x2a]
  406b23:	addr16 js 0x406b1d
  406b26:	outs   dx,BYTE PTR ds:[esi]
  406b27:	ret    
  406b28:	mov    esp,?
  406b2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b2b:	mov    ecx,0x28bbabf5
  406b30:	push   esp
  406b31:	mov    es,WORD PTR [ebp-0x321cead8]
  406b37:	lods   al,BYTE PTR ds:[esi]
  406b38:	sub    DWORD PTR [ecx+0x4498775b],esi
  406b3e:	push   0xffffffd5
  406b40:	xadd   bl,bl
  406b43:	sub    ebp,edi
  406b45:	aam    0x81
  406b47:	mov    al,ds:0xd4a5ce0e
  406b4c:	mov    eax,0x51a7e224
  406b51:	mov    WORD PTR [edx],ds
  406b53:	cs jno 0x406ad9
  406b56:	xchg   edi,eax
  406b57:	fdivr  QWORD PTR [ebx]
  406b59:	xor    ch,cl
  406b5b:	push   edx
  406b5c:	retf   
  406b5d:	xor    BYTE PTR [esp+esi*1],al
  406b60:	jae    0x406af6
  406b62:	in     eax,0x7b
  406b64:	fcomp  QWORD PTR [ebp-0xd1016af]
  406b6a:	add    eax,0x12c7d4ec
  406b6f:	sti    
  406b70:	(bad)  
  406b71:	into   
  406b72:	sbb    ch,cl
  406b74:	ret    0xd6c
  406b77:	jecxz  0x406b29
  406b79:	xchg   ebp,eax
  406b7a:	aaa    
  406b7b:	(bad)  
  406b7c:	and    eax,0x6de5e73a
  406b81:	inc    eax
  406b82:	mov    bl,0xae
  406b84:	jl     0x406b56
  406b86:	add    eax,0xd77bf56e
  406b8b:	xlat   BYTE PTR ds:[ebx]
  406b8c:	jg     0x406bf2
  406b8e:	mov    bl,0x9a
  406b90:	sti    
  406b91:	dec    ebp
  406b92:	scas   al,BYTE PTR es:[edi]
  406b93:	xchg   ebx,eax
  406b94:	dec    eax
  406b95:	xchg   BYTE PTR [ebp+0x30],cl
  406b98:	jecxz  0x406c15
  406b9a:	pop    ds
  406b9b:	xchg   BYTE PTR [ebp+0x5c],al
  406b9e:	aad    0x26
  406ba0:	dec    eax
  406ba1:	fisub  DWORD PTR [esp+edi*8+0x45e956b1]
  406ba8:	ret    0xad29
  406bab:	int3   
  406bac:	pop    ds
  406bad:	mov    ah,BYTE PTR [edi]
  406baf:	lock inc esi
  406bb1:	cwde   
  406bb2:	fsubr  st(5),st
  406bb4:	pop    ss
  406bb5:	fadd   st(0),st
  406bb7:	pop    esp
  406bb8:	(bad)  
  406bb9:	out    dx,al
  406bba:	popa   
  406bbb:	gs cs adc bh,cl
  406bbf:	pop    esi
  406bc0:	dec    edx
  406bc1:	mov    bl,dh
  406bc3:	int    0xc8
  406bc5:	pop    ds
  406bc6:	adc    eax,0x17ce9570
  406bcb:	and    ch,BYTE PTR [eax]
  406bcd:	sbb    esi,ecx
  406bcf:	stos   DWORD PTR es:[edi],eax
  406bd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bd1:	mov    al,ds:0x21800dc4
  406bd6:	aaa    
  406bd7:	or     BYTE PTR [esi],cl
  406bd9:	out    dx,eax
  406bda:	xlat   BYTE PTR ds:[ebx]
  406bdb:	jnp    0x406c09
  406bdd:	mov    bl,0x6e
  406bdf:	jmp    0x55a5aee0
  406be4:	mov    eax,ds:0x1a369b70
  406be9:	adc    al,0x84
  406beb:	nop
  406bec:	pop    ss
  406bed:	repnz push ebp
  406bef:	sbb    edx,eax
  406bf1:	mov    eax,0x7ca46e8e
  406bf6:	lock mov bl,0x72
  406bf9:	push   esp
  406bfa:	jnp    0x406be6
  406bfc:	push   esi
  406bfd:	fmul   st(5),st
  406bff:	dec    edx
  406c00:	(bad)  
  406c02:	popa   
  406c03:	dec    esp
  406c04:	mov    ecx,0xd00c02a4
  406c09:	out    dx,eax
  406c0a:	xchg   ebx,eax
  406c0b:	gs scas al,BYTE PTR es:[edi]
  406c0d:	fild   WORD PTR [ebx-0x31b74148]
  406c13:	ins    DWORD PTR es:[edi],dx
  406c14:	sti    
  406c15:	sbb    DWORD PTR ds:0xd95a5e44,esp
  406c1b:	or     al,0x7b
  406c1d:	and    ecx,DWORD PTR [ebp-0x64]
  406c20:	stc    
  406c21:	pop    ebp
  406c22:	dec    esp
  406c23:	out    0x6e,al
  406c25:	and    eax,0x103b009b
  406c2a:	mov    gs,WORD PTR [esp+ecx*8]
  406c2d:	mov    dl,0x9e
  406c2f:	cmp    bl,BYTE PTR [ecx-0x8]
  406c32:	je     0x406c2e
  406c34:	cmp    al,0x14
  406c36:	sbb    al,0x15
  406c38:	mov    eax,ds:0xeac3b740
  406c3d:	mov    cl,0x91
  406c3f:	fcom   st(7)
  406c41:	cmp    BYTE PTR [ecx+0x22fe1762],ah
  406c47:	sub    cl,cl
  406c49:	(bad)
  406c4c:	or     eax,0x2be4e6d6
  406c51:	xor    al,0x70
  406c53:	add    ch,cl
  406c55:	pop    eax
  406c56:	sbb    eax,0xc53a1e0
  406c5b:	int3   
  406c5c:	jg     0x406c77
  406c5e:	lods   eax,DWORD PTR ds:[esi]
  406c5f:	add    edi,ebx
  406c61:	fiadd  DWORD PTR [ebx+0x2e]
  406c64:	retf   0xffae
  406c67:	and    DWORD PTR [ebx-0x14],ecx
  406c6a:	and    edx,DWORD PTR [ecx+0x55]
  406c6d:	(bad)  
  406c6f:	mov    ds:0x4477b0b7,eax
  406c74:	cmp    al,0x29
  406c76:	ds jp  0x406c75
  406c79:	shl    ch,0xf8
  406c7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c7d:	test   eax,0xa29873c8
  406c82:	mov    cl,0x3c
  406c84:	ss int 0xd9
  406c87:	aad    0x8b
  406c89:	jno    0x406c72
  406c8b:	xchg   ebx,eax
  406c8c:	jl     0x406cd4
  406c8e:	punpckhbw mm6,mm5
  406c91:	icebp  
  406c92:	sbb    BYTE PTR [ecx-0x47c73027],ah
  406c98:	cld    
  406c99:	inc    edx
  406c9a:	pop    ds
  406c9b:	xor    al,0xf3
  406c9d:	in     al,0xd4
  406c9f:	jp     0x406d0f
  406ca1:	pop    ebx
  406ca2:	push   ecx
  406ca3:	loopne 0x406c5e
  406ca5:	pop    ebx
  406ca6:	and    eax,0x2280f1b3
  406cab:	mov    BYTE PTR [ecx-0x74],bh
  406cae:	xchg   esi,eax
  406caf:	xchg   ebx,eax
  406cb0:	loopne 0x406d21
  406cb2:	adc    DWORD PTR ds:0x226df9c2,0xf1dde6da
  406cbc:	pop    edi
  406cbd:	fisttp WORD PTR [ebp+0x17]
  406cc0:	adc    edi,DWORD PTR ss:[ebx]
  406cc3:	cld    
  406cc4:	mov    ebx,0xce7aa149
  406cc9:	nop
  406cca:	sub    BYTE PTR [ebx+0x46],bl
  406ccd:	jmp    0x406c62
  406ccf:	cs lahf 
  406cd1:	ficomp WORD PTR [esi]
  406cd3:	and    al,bh
  406cd5:	test   DWORD PTR [eax+eax*2],ebp
  406cd8:	and    ebx,DWORD PTR [edx+0x5b]
  406cdb:	pop    es
  406cdc:	xor    esi,DWORD PTR [edx+ebp*1+0x2888e8c6]
  406ce3:	jns    0x406c7e
  406ce5:	pop    edi
  406ce6:	adc    cl,BYTE PTR [ebx]
  406ce8:	sub    dl,0xc7
  406ceb:	jle    0x406ce5
  406ced:	es pushf 
  406cef:	fld    DWORD PTR [ebp+0xbacef3c]
  406cf5:	aad    0xd9
  406cf7:	stos   DWORD PTR es:[edi],eax
  406cf8:	stos   BYTE PTR es:[edi],al
  406cf9:	loop   0x406cf2
  406cfb:	push   ss
  406cfc:	cs dec esi
  406cfe:	xor    dh,BYTE PTR [eax]
  406d00:	adc    BYTE PTR [esi-0x3682de69],ah
  406d06:	xchg   esi,eax
  406d07:	gs dec esi
  406d09:	xor    DWORD PTR [esi-0x55],0xcb24a92d
  406d10:	fbstp  TBYTE PTR [esi+0x1f699fb7]
  406d16:	cdq    
  406d17:	fidiv  DWORD PTR [edi+0x4f]
  406d1a:	jle    0x406cd1
  406d1c:	les    ebx,FWORD PTR [ecx-0x7740f9fb]
  406d22:	push   ds
  406d23:	idiv   DWORD PTR ds:0x8bb434b8
  406d29:	xlat   BYTE PTR ds:[ebx]
  406d2a:	dec    ebp
  406d2b:	repnz popa 
  406d2d:	xor    BYTE PTR [edi+0x32],dl
  406d30:	pushf  
  406d31:	mov    esp,0x86893975
  406d36:	xlat   BYTE PTR ds:[ebx]
  406d37:	jmp    0x406d82
  406d39:	mov    ah,0x76
  406d3b:	sbb    al,0x7f
  406d3d:	(bad)  
  406d3e:	repz popa 
  406d40:	inc    edi
  406d41:	shr    DWORD PTR [ecx+eiz*4-0x4a6a5ae4],0x13
  406d49:	push   0x7c
  406d4b:	push   ebx
  406d4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d4d:	mov    ah,0x42
  406d4f:	daa    
  406d50:	ret    
  406d51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d52:	sbb    cl,ah
  406d54:	adc    ch,BYTE PTR [ebp+0x38]
  406d57:	add    al,0x29
  406d59:	xchg   BYTE PTR [edx-0x1f],al
  406d5c:	fisttp DWORD PTR [ebp-0x5c3d21c7]
  406d62:	add    BYTE PTR [eax],ah
  406d64:	ror    BYTE PTR [eax+0x231878],0x76
  406d6b:	jp     0x406cf6
  406d6d:	lahf   
  406d6e:	adc    al,0xf4
  406d70:	mov    ebx,0x5dd9de96
  406d75:	test   BYTE PTR [ebp+0x623d5da3],dh
  406d7b:	pop    esp
  406d7c:	out    dx,eax
  406d7d:	xor    BYTE PTR [ecx-0x4b2900c9],0x9
  406d84:	int3   
  406d85:	fs adc eax,0xecbf6c91
  406d8b:	jg     0x406d61
  406d8d:	enter  0xc604,0xe9
  406d91:	xchg   ebp,eax
  406d92:	stc    
  406d93:	iret   
  406d94:	les    eax,FWORD PTR [eax-0x25]
  406d97:	jne    0x406dea
  406d99:	test   al,0x59
  406d9b:	push   ds
  406d9c:	pop    eax
  406d9d:	(bad)  
  406d9e:	and    ebx,ebx
  406da0:	hlt    
  406da1:	dec    ecx
  406da2:	and    BYTE PTR [esi+eax*4-0x10],bl
  406da6:	pop    ss
  406da7:	push   esp
  406da8:	mov    ah,0x12
  406daa:	int    0x30
  406dac:	mov    edx,0x939d4ef5
  406db1:	sub    DWORD PTR [esi-0x7c],0xffffffb8
  406db5:	jb     0x406e2c
  406db7:	ds leave 
  406db9:	cmp    eax,0xd8563e5c
  406dbe:	cmc    
  406dbf:	in     al,dx
  406dc0:	pop    ebx
  406dc1:	das    
  406dc2:	jb     0x406d54
  406dc4:	fisttp QWORD PTR [eax+0xd]
  406dc7:	adc    BYTE PTR [edx+edi*4],ah
  406dca:	dec    esp
  406dcb:	xchg   esp,eax
  406dcc:	push   edx
  406dcd:	sub    eax,0xdb1f1525
  406dd2:	xchg   edx,eax
  406dd3:	adc    edx,DWORD PTR [edx+0x73]
  406dd6:	push   ebx
  406dd7:	dec    edi
  406dd8:	pop    edi
  406dd9:	mov    esp,0x7f18032f
  406dde:	push   esp
  406ddf:	add    eax,0xcb50505d
  406de4:	mov    ch,0xca
  406de6:	(bad)  
  406de7:	mov    ds:0xb8983369,al
  406dec:	mov    ds:0x369c6f3a,al
  406df1:	push   ebx
  406df2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406df3:	in     al,dx
  406df4:	push   ebp
  406df5:	sub    esp,edx
  406df7:	mov    ?,eax
  406df9:	mov    DWORD PTR [esi],esp
  406dfb:	inc    edx
  406dfc:	inc    esi
  406dfd:	ffree  st(0)
  406dff:	or     cl,BYTE PTR [ecx]
  406e01:	sub    eax,0xd6ac4c95
  406e06:	and    esi,ecx
  406e08:	dec    edi
  406e09:	mov    edx,0x80381438
  406e0e:	sbb    bh,dl
  406e10:	je     0x406e5b
  406e12:	xlat   BYTE PTR ds:[ebx]
  406e13:	add    esp,ebx
  406e15:	mov    ebx,0x3d24adcb
  406e1a:	es dec eax
  406e1c:	ret    
  406e1d:	sub    esp,DWORD PTR [esi]
  406e1f:	and    al,0xcc
  406e21:	sbb    dh,BYTE PTR [edi+0x5a]
  406e24:	data16 or BYTE PTR ds:0x75fe50a7,al
  406e2b:	fild   QWORD PTR [edx]
  406e2d:	mov    ?,WORD PTR [eax+0x6f81547e]
  406e33:	into   
  406e34:	and    ah,BYTE PTR [edx]
  406e36:	add    edi,DWORD PTR [esi]
  406e38:	push   ebx
  406e39:	cmp    BYTE PTR [eax-0x320054bd],al
  406e3f:	daa    
  406e40:	mov    ebp,0x5afddc25
  406e45:	fnstenv [ecx+edi*8-0x79]
  406e49:	xchg   BYTE PTR [edi],dh
  406e4b:	(bad)  
  406e4c:	in     al,0x27
  406e4e:	fcom   DWORD PTR [ecx-0x1b]
  406e51:	or     BYTE PTR [eax+esi*1],dl
  406e54:	add    BYTE PTR [esi+edi*4],bh
  406e57:	jo     0x406e4a
  406e59:	out    dx,eax
  406e5a:	cmp    ch,BYTE PTR [ebp+eax*4+0x7e2fff50]
  406e61:	dec    edi
  406e62:	mov    ebx,0xa3f8b11d
  406e67:	add    bl,bh
  406e69:	arpl   bp,di
  406e6b:	mov    ecx,0x4fb4491f
  406e70:	sub    eax,edx
  406e72:	fsub   QWORD PTR [edx-0x56]
  406e75:	into   
  406e76:	enter  0xf050,0x48
  406e7a:	sbb    bh,BYTE PTR [esi-0x3c95480e]
  406e80:	mov    ?,WORD PTR [edi]
  406e82:	fsub   QWORD PTR [esi-0x72]
  406e85:	mov    al,0xd6
  406e87:	icebp  
  406e88:	xchg   edx,eax
  406e89:	fldenv [ecx+0x20]
  406e8c:	sbb    al,0x43
  406e8e:	ds fwait
  406e90:	ret    0xbeda
  406e93:	or     al,0xba
  406e95:	dec    ebp
  406e96:	and    DWORD PTR [edi],0x34
  406e99:	mov    al,ds:0x4dd6fa41
  406e9e:	pop    ds
  406e9f:	pop    esi
  406ea0:	jge    0x406eba
  406ea2:	mov    dl,0xf3
  406ea4:	mov    edi,0xdc17ef24
  406ea9:	push   ebp
  406eaa:	fwait
  406eab:	cmp    BYTE PTR [edi],cl
  406ead:	push   ds
  406eae:	mov    esi,0x9fdfd46c
  406eb3:	rcl    DWORD PTR [ecx],0x19
  406eb6:	inc    ebp
  406eb7:	das    
  406eb8:	lahf   
  406eb9:	cdq    
  406eba:	jp     0x406ebd
  406ebc:	leave  
  406ebd:	push   cs
  406ebe:	dec    esi
  406ebf:	pop    esp
  406ec0:	pushf  
  406ec1:	(bad)  
  406ec2:	es pushf 
  406ec4:	push   ds
  406ec5:	fwait
  406ec6:	mov    ebx,0x636064e6
  406ecb:	pushf  
  406ecc:	sbb    DWORD PTR [edi+0x1629bda4],0xfffffff9
  406ed3:	or     BYTE PTR [ebx-0x75],ah
  406ed6:	ret    
  406ed7:	fstp   TBYTE PTR [edx-0x261f8c82]
  406edd:	aaa    
  406ede:	mov    ?,WORD PTR [eax+0x12]
  406ee1:	lds    esp,FWORD PTR [esi]
  406ee3:	std    
  406ee4:	stos   DWORD PTR es:[edi],eax
  406ee5:	stos   BYTE PTR es:[edi],al
  406ee6:	ja     0x406eab
  406ee8:	jnp    0x406f1f
  406eea:	cdq    
  406eeb:	mov    ah,0x88
  406eed:	ins    BYTE PTR es:[edi],dx
  406eee:	pop    ebx
  406eef:	loop   0x406ef3
  406ef1:	jbe    0x406f0f
  406ef3:	(bad)  
  406ef4:	mov    ah,0x64
  406ef6:	mov    bh,BYTE PTR [esi-0x72]
  406ef9:	cmp    dh,BYTE PTR cs:[ebp+0x24]
  406efd:	fs pop ebx
  406eff:	addr16 out dx,eax
  406f01:	test   al,0x7f
  406f03:	sub    dh,al
  406f05:	gs dec esi
  406f07:	jecxz  0x406f36
  406f09:	out    dx,eax
  406f0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f0b:	push   ds
  406f0c:	aaa    
  406f0d:	jo     0x406e96
  406f0f:	retf   0x89ff
  406f12:	out    dx,eax
  406f13:	push   esp
  406f14:	outs   dx,BYTE PTR ds:[esi]
  406f15:	das    
  406f16:	rol    DWORD PTR ds:0xa52b29a5,1
  406f1c:	cmp    esi,edx
  406f1e:	xchg   esi,eax
  406f1f:	mov    ecx,0x9a9aac40
  406f24:	xor    ecx,DWORD PTR [eax+0x7a92a5f]
  406f2a:	inc    ebp
  406f2b:	mov    eax,0xa0fcbb03
  406f30:	push   0x1b
  406f32:	test   BYTE PTR [ecx-0x4220d6da],dh
  406f38:	std    
  406f39:	xchg   ecx,eax
  406f3a:	sbb    eax,0x8b0b3522
  406f3f:	mov    bh,0x95
  406f41:	int    0x84
  406f43:	hlt    
  406f44:	inc    edx
  406f45:	shr    DWORD PTR [ebx],1
  406f47:	or     BYTE PTR [esi-0x335901d1],cl
  406f4d:	xlat   BYTE PTR ds:[ebx]
  406f4e:	jge    0x406f6a
  406f50:	add    ebx,esi
  406f52:	and    BYTE PTR [ebp+0x2e],dh
  406f55:	fnstcw WORD PTR [ecx+0x506065a9]
  406f5b:	pop    edi
  406f5c:	std    
  406f5d:	cdq    
  406f5e:	fnstenv [eax]
  406f60:	jl     0x406f49
  406f62:	test   DWORD PTR [ebx-0x4b9118a9],ebx
  406f68:	and    ah,ch
  406f6a:	xchg   ebp,eax
  406f6b:	dec    BYTE PTR [edx+eax*4+0x57c50fca]
  406f72:	adc    DWORD PTR [ebp-0x45],0xffffff9d
  406f76:	bound  esp,QWORD PTR [eax+0x48]
  406f79:	js     0x406f2b
  406f7b:	(bad)  
  406f7d:	cs dec edi
  406f7f:	shl    BYTE PTR [edi],1
  406f81:	and    eax,0xdc672e63
  406f86:	outs   dx,DWORD PTR ds:[esi]
  406f87:	pop    edi
  406f88:	out    0x92,al
  406f8a:	mov    edi,0x569bd705
  406f8f:	or     BYTE PTR [edi],ch
  406f91:	push   eax
  406f92:	adc    cl,BYTE PTR [eax+0x23]
  406f95:	bound  ebx,QWORD PTR [ebp+0x63]
  406f98:	pop    es
  406f99:	ror    BYTE PTR [eax-0x3a],0xe8
  406f9d:	rcr    DWORD PTR [edx],1
  406f9f:	lock hlt 
  406fa1:	mov    esp,0xfc382cfe
  406fa6:	inc    esp
  406fa7:	push   es
  406fa8:	xchg   edi,eax
  406fa9:	call   0x2dfc15d
  406fae:	mov    ecx,edx
  406fb0:	xchg   edx,eax
  406fb1:	pusha  
  406fb2:	jbe    0x406f7e
  406fb4:	scas   eax,DWORD PTR es:[edi]
  406fb5:	mov    esi,0x361fa9a5
  406fba:	or     bl,BYTE PTR [edi]
  406fbc:	cwde   
  406fbd:	fcomi  st,st(0)
  406fbf:	lock aaa 
  406fc1:	adc    eax,0x680fa717
  406fc6:	mov    edi,0xbde29872
  406fcb:	sub    eax,0x7cb87354
  406fd0:	lods   al,BYTE PTR ds:[esi]
  406fd1:	push   ds
  406fd2:	xchg   DWORD PTR [edx-0x618ee984],ecx
  406fd8:	xchg   ebx,eax
  406fd9:	mov    edx,0x67f28a31
  406fde:	jle    0x406fbb
  406fe0:	inc    edx
  406fe1:	pop    esi
  406fe2:	add    esp,DWORD PTR [eax+0x60]
  406fe5:	fisttp QWORD PTR [ebx-0x506fcb65]
  406feb:	aam    0x93
  406fed:	or     DWORD PTR [ecx+0x3e910f95],edx
  406ff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ff4:	stc    
  406ff5:	test   BYTE PTR [edi],ch
  406ff7:	xor    edi,ecx
  406ff9:	xchg   edx,eax
  406ffa:	or     al,0x9
  406ffc:	mov    cl,0x42
  406ffe:	push   esp
  406fff:	fidivr DWORD PTR [ebx-0x23]
  407002:	daa    
  407003:	clc    
  407004:	add    dl,ch
  407006:	mov    eax,ds:0x7e26d09a
  40700b:	xor    DWORD PTR [edx+eiz*4-0x558347e9],esp
  407012:	(bad)
  407016:	and    edi,DWORD PTR ds:0x972b600e
  40701c:	jb     0x40709c
  40701e:	jno    0x406ffc
  407020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407022:	push   esi
  407023:	cdq    
  407024:	adc    edx,DWORD PTR [ebx-0x532d2d83]
  40702a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40702b:	push   0x1092cc6c
  407030:	mov    bh,0xba
  407032:	adc    dl,al
  407034:	call   0xf17d:0x99fdf650
  40703b:	fwait
  40703c:	hlt    
  40703d:	push   edx
  40703e:	push   ebp
  40703f:	enter  0xd449,0xb5
  407043:	in     eax,0xec
  407045:	jmp    0x5e08:0xce66f747
  40704c:	jp     0x407023
  40704e:	cmp    cl,BYTE PTR [eax]
  407050:	rcl    bh,0xa7
  407053:	mov    ebp,0xbc95017f
  407058:	loop   0x407051
  40705a:	retf   0x662c
  40705d:	xlat   BYTE PTR ds:[ebx]
  40705e:	adc    DWORD PTR [ebx],ecx
  407060:	xlat   BYTE PTR ds:[ebx]
  407061:	sbb    ecx,DWORD PTR [esi-0x16cf223c]
  407067:	xor    bl,BYTE PTR [ecx]
  407069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40706a:	mov    esp,0xd16eac90
  40706f:	outs   dx,DWORD PTR ds:[esi]
  407070:	cmp    bl,bh
  407072:	adc    al,0x28
  407074:	repz loop 0x4070bc
  407077:	ja     0x4070b8
  407079:	(bad)  
  40707a:	ss mov edx,0x433a56f2
  407080:	add    al,0xa6
  407082:	mov    cl,0x4
  407084:	pushf  
  407085:	shl    esi,1
  407087:	fild   WORD PTR [ebp+0x4ca294dc]
  40708d:	dec    ecx
  40708e:	jno    0x4070d5
  407090:	jp     0x407088
  407092:	inc    edx
  407093:	jmp    0xe4ac:0x7e339ec8
  40709a:	pop    esi
  40709b:	sti    
  40709c:	adc    eax,0x4c45a00a
  4070a1:	lock and DWORD PTR [esi+eax*1-0x444d8366],ebp
  4070a9:	adc    BYTE PTR [edi+0x23],ch
  4070ac:	dec    ecx
  4070ad:	cwde   
  4070ae:	and    bl,BYTE PTR [edx-0x1a5a5442]
  4070b4:	(bad)  
  4070b5:	sub    esp,ebx
  4070b7:	adc    esp,DWORD PTR [eax-0x6d]
  4070ba:	dec    ebx
  4070bb:	pop    esp
  4070bc:	pop    ebx
  4070bd:	pop    edx
  4070be:	lods   eax,DWORD PTR ds:[esi]
  4070bf:	mov    ebx,0x4589d3d1
  4070c4:	daa    
  4070c5:	or     BYTE PTR [ecx+0x35],al
  4070c8:	dec    ebp
  4070c9:	push   ebx
  4070ca:	pop    ebp
  4070cb:	repz enter 0xc29c,0x1d
  4070d0:	jne    0x4070b8
  4070d2:	popf   
  4070d3:	cwde   
  4070d4:	jecxz  0x407107
  4070d6:	stc    
  4070d7:	ja     0x4070f0
  4070d9:	cmp    esp,DWORD PTR [esi+0x5962bd07]
  4070df:	outs   dx,DWORD PTR ds:[esi]
  4070e0:	xor    DWORD PTR [esi],0xffffff8b
  4070e3:	mov    edi,0x4ffbefb1
  4070e8:	imul   ecx,DWORD PTR [edx],0xffffffc8
  4070eb:	mov    ch,0x43
  4070ed:	mov    eax,DWORD PTR [esi-0xe7e047d]
  4070f3:	push   ebx
  4070f4:	mov    ecx,0xcb60b5d
  4070f9:	adc    DWORD PTR [edx+0x43],ecx
  4070fc:	sbb    esp,DWORD PTR [edx+0x53bc7bff]
  407102:	loop   0x40712e
  407104:	mov    eax,ds:0x9ba7d53d
  407109:	and    eax,0x1c4ff034
  40710e:	sub    al,0x8
  407110:	hlt    
  407111:	jns    0x40716b
  407113:	pop    DWORD PTR [ebp-0x61507418]
  407119:	sbb    DWORD PTR ds:0x9b9ca52a,0xffaa4164
  407123:	bound  ebp,QWORD PTR [ebp-0x48]
  407126:	dec    ebp
  407127:	in     eax,0xc5
  407129:	outs   dx,BYTE PTR ds:[esi]
  40712a:	sbb    bh,bl
  40712c:	mov    eax,0x306b6500
  407131:	cli    
  407132:	sbb    eax,0xd686bd7a
  407137:	das    
  407138:	xchg   ecx,eax
  407139:	cmp    edx,DWORD PTR [ebp+0x2da89df8]
  40713f:	fimul  WORD PTR [ebp-0x25]
  407142:	adc    ebx,DWORD PTR [edi+0x4fd4387a]
  407148:	stos   BYTE PTR es:[edi],al
  407149:	add    DWORD PTR [ecx-0x3ecc4dc9],ebp
  40714f:	add    eax,0x11dc683e
  407154:	inc    ebp
  407155:	xchg   esi,eax
  407156:	aaa    
  407157:	(bad)  
  407158:	fdiv   DWORD PTR [ebp-0x3df79e68]
  40715e:	stos   DWORD PTR es:[edi],eax
  40715f:	sub    esi,DWORD PTR ds:0x58a9fc8
  407165:	data16 adc bl,bl
  407168:	pop    es
  407169:	mov    al,ds:0x9e2ad931
  40716e:	or     BYTE PTR [edi],bl
  407170:	sbb    ah,BYTE PTR [edi]
  407172:	pop    ebx
  407173:	jmp    0xee792611
  407178:	push   ss
  407179:	imul   edi,ecx,0xf42556c1
  40717f:	sub    bl,BYTE PTR [edx+0x487986dc]
  407185:	push   edx
  407186:	jecxz  0x40716f
  407188:	adc    DWORD PTR [edi-0xe5fdb17],edi
  40718e:	jns    0x407125
  407190:	xchg   ebp,esp
  407192:	sub    bl,bl
  407194:	setae  BYTE PTR [ecx+edi*1+0x65]
  407199:	stos   BYTE PTR es:[edi],al
  40719a:	stos   DWORD PTR es:[edi],eax
  40719b:	xchg   ebp,eax
  40719c:	mov    eax,cs
  40719e:	out    0x95,eax
  4071a0:	jo     0x407218
  4071a2:	sbb    DWORD PTR [eax],eax
  4071a4:	popa   
  4071a5:	adc    ebp,esp
  4071a7:	ins    BYTE PTR es:[edi],dx
  4071a8:	lods   al,BYTE PTR ds:[esi]
  4071a9:	mov    edi,0xc3326e8c
  4071ae:	(bad)  
  4071b0:	das    
  4071b1:	or     al,0xb5
  4071b3:	sti    
  4071b4:	cmp    DWORD PTR [ebx-0x1821041a],esp
  4071ba:	mov    bl,0x94
  4071bc:	(bad)  [edx+esi*2-0x38]
  4071c0:	sub    dl,ch
  4071c2:	fwait
  4071c3:	mov    ds:0x1ca3852,eax
  4071c8:	pushf  
  4071c9:	into   
  4071ca:	in     eax,dx
  4071cb:	push   eax
  4071cc:	inc    eax
  4071cd:	sbb    BYTE PTR [edx+0x42],0xc8
  4071d1:	push   eax
  4071d2:	mov    esp,0xc03a0d2d
  4071d7:	sbb    cl,BYTE PTR [ebx-0x4c]
  4071da:	lahf   
  4071db:	out    0xb9,al
  4071dd:	dec    edi
  4071de:	inc    ebx
  4071df:	xchg   DWORD PTR [esi+0x62533483],esi
  4071e5:	cmp    al,0x4c
  4071e7:	(bad)  
  4071e8:	jmp    0x4071b3
  4071ea:	cmp    BYTE PTR [edi-0x4e],dh
  4071ed:	push   edx
  4071ee:	xchg   ebx,eax
  4071ef:	addr16 xchg cl,al
  4071f2:	icebp  
  4071f3:	push   cs
  4071f4:	ins    DWORD PTR es:[edi],dx
  4071f5:	mov    edx,0xcde1bf77
  4071fa:	lea    eax,[ebx-0x1d]
  4071fd:	sbb    esi,edx
  4071ff:	and    BYTE PTR [ecx],bh
  407201:	sbb    BYTE PTR [esp+edi*1+0x57],bh
  407205:	mov    WORD PTR [ebx-0x488dd113],cs
  40720b:	pop    edi
  40720c:	ins    BYTE PTR es:[edi],dx
  40720d:	mov    dl,0x65
  40720f:	aam    0xeb
  407211:	sub    BYTE PTR [edx-0x1],ah
  407214:	mov    ch,0x45
  407216:	popf   
  407217:	push   edx
  407218:	enter  0xa250,0x9e
  40721c:	cmp    ch,BYTE PTR [edi-0xf]
  40721f:	fimul  WORD PTR [ebp-0x2289ae64]
  407225:	cmp    al,0xa8
  407227:	or     DWORD PTR [ebx],ebp
  407229:	jno    0x40722e
  40722b:	push   ss
  40722c:	or     al,BYTE PTR [edx-0x8]
  40722f:	daa    
  407230:	das    
  407231:	mov    cl,0x48
  407233:	stos   DWORD PTR es:[edi],eax
  407234:	and    ah,BYTE PTR [ecx+0x1d]
  407237:	test   al,0x6e
  407239:	ins    DWORD PTR es:[edi],dx
  40723a:	or     BYTE PTR [edx],bh
  40723c:	sbb    BYTE PTR ds:[esi+edi*2+0x45a98a31],dh
  407244:	test   BYTE PTR [eax+ebx*8+0x661ef24d],ah
  40724b:	or     al,0x9c
  40724d:	stc    
  40724e:	jmp    0x4072ac
  407250:	sbb    al,0x59
  407252:	dec    edx
  407253:	cmp    edx,ebx
  407255:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407257:	leave  
  407258:	retf   
  407259:	mov    ch,0xdb
  40725b:	adc    al,0xc5
  40725d:	(bad)  
  40725e:	data16 sub al,0xf7
  407261:	mov    ecx,0x4dcaa956
  407266:	mov    ebx,0xa06b0612
  40726b:	xchg   ecx,eax
  40726c:	or     BYTE PTR [ebx],bl
  40726e:	cmp    BYTE PTR [esi+0xe086b1],bl
  407274:	jns    0x4072c5
  407276:	outs   dx,DWORD PTR ds:[esi]
  407277:	xchg   ebx,eax
  407278:	sub    al,cl
  40727a:	xchg   esp,eax
  40727b:	test   BYTE PTR [edx-0x76],bl
  40727e:	cli    
  40727f:	outs   dx,DWORD PTR gs:[esi]
  407281:	sub    eax,0x60424185
  407286:	or     DWORD PTR [ecx-0x38],ebp
  407289:	(bad)  
  40728a:	mov    ds:0x3bec15fe,eax
  40728f:	push   ss
  407290:	je     0x407290
  407292:	adc    BYTE PTR [esi-0x67df949e],cl
  407298:	shl    DWORD PTR [edi-0x5e82219c],0xb5
  40729f:	jnp    0x40730a
  4072a1:	add    DWORD PTR [ebx],ecx
  4072a3:	xchg   ecx,eax
  4072a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072a5:	push   esp
  4072a6:	mov    ecx,0xe27974d1
  4072ab:	leave  
  4072ac:	imul   esi
  4072ae:	repnz test al,0x26
  4072b1:	(bad)  
  4072b2:	mov    DWORD PTR [ebx-0x6adea06c],edx
  4072b8:	and    dl,bh
  4072ba:	(bad)  
  4072bb:	jnp    0x407268
  4072bd:	or     BYTE PTR [edi+esi*4],al
  4072c0:	xlat   BYTE PTR ds:[ebx]
  4072c1:	jl     0x40733f
  4072c3:	adc    al,BYTE PTR [edi+0x385a8f79]
  4072c9:	push   esi
  4072ca:	les    edi,FWORD PTR [edi]
  4072cc:	and    ah,BYTE PTR [ebp+edx*4+0x74]
  4072d0:	dec    esp
  4072d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072d2:	push   0xffffffcb
  4072d4:	in     al,0x96
  4072d6:	or     edx,DWORD PTR [edi-0x741d38c4]
  4072dc:	jmp    esi
  4072de:	in     eax,0x9c
  4072e0:	cmp    DWORD PTR [esi],eax
  4072e2:	ror    ah,cl
  4072e4:	push   edi
  4072e5:	rcr    BYTE PTR [esi-0x76],1
  4072e8:	cli    
  4072e9:	int3   
  4072ea:	xor    al,0xa4
  4072ec:	popf   
  4072ed:	push   esp
  4072ee:	mov    BYTE PTR [edx+0x27],0x58
  4072f2:	fwait
  4072f3:	inc    edi
  4072f4:	lds    edi,FWORD PTR [ebx+0x48]
  4072f7:	vunpckhpd ymm2,ymm2,YMMWORD PTR [edi-0x76]
  4072fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072fd:	call   0xed072b06
  407302:	popf   
  407303:	push   0x32
  407305:	je     0x407361
  407307:	sub    cl,cl
  407309:	aas    
  40730a:	je     0x407344
  40730c:	cmp    al,0x87
  40730e:	clc    
  40730f:	icebp  
  407310:	or     esp,DWORD PTR [esi+0x7fefd8a]
  407316:	pop    esp
  407317:	loopne 0x407322
  407319:	icebp  
  40731a:	js     0x4072dd
  40731c:	and    edx,DWORD PTR [eax+0xf]
  40731f:	ret    0x9aa8
  407322:	add    ebp,0x29
  407325:	xchg   esp,eax
  407326:	daa    
  407327:	sbb    eax,0x8615eb03
  40732c:	pop    ebp
  40732d:	xchg   esi,eax
  40732e:	jmp    0x6556:0xf038a2a6
  407335:	pop    esi
  407336:	arpl   sp,bp
  407338:	adc    BYTE PTR [esp+ebp*2],dh
  40733b:	pop    eax
  40733c:	xor    dh,bl
  40733e:	(bad)  
  40733f:	xchg   ebx,eax
  407340:	rcl    cl,cl
  407342:	outs   dx,BYTE PTR ds:[esi]
  407343:	xchg   esi,eax
  407344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407345:	cmp    al,0xf9
  407347:	fdivrp st(6),st
  407349:	imul   ebx,DWORD PTR [ecx+0x24],0xffffffac
  40734d:	adc    esi,DWORD PTR [eax+esi*2-0x57903d4b]
  407354:	mov    al,0xc5
  407356:	push   edx
  407357:	mov    al,ds:0x391cc2d8
  40735c:	add    eax,0x177fec3
  407361:	ret    0x5eea
  407364:	test   eax,0x927fb423
  407369:	mov    al,ds:0xbd274490
  40736e:	(bad)  
  40736f:	sti    
  407370:	xor    eax,0xbc8a8d30
  407375:	inc    ebp
  407376:	int3   
  407377:	fdivr  DWORD PTR [eax+0x66]
  40737a:	xor    DWORD PTR [esp+eax*8],esp
  40737d:	loopne 0x4073ce
  40737f:	mov    al,0x98
  407381:	cld    
  407382:	adc    al,0xcf
  407384:	mov    ch,0x60
  407386:	and    edi,DWORD PTR [edi-0x22]
  407389:	add    al,0xff
  40738b:	sbb    al,0x8c
  40738d:	jmp    0x40734e
  40738f:	outs   dx,BYTE PTR ds:[esi]
  407390:	or     DWORD PTR [esi],ebx
  407392:	add    bh,ch
  407394:	ret    
  407395:	sbb    bl,cl
  407397:	push   DWORD PTR [edx-0x5f]
  40739a:	push   esi
  40739b:	push   cs
  40739c:	int    0xe0
  40739e:	je     0x407365
  4073a0:	or     BYTE PTR [edi],0x3
  4073a3:	dec    ebp
  4073a4:	cmc    
  4073a5:	sub    al,0x26
  4073a7:	and    DWORD PTR [ebp-0x1feb7f5],esp
  4073ad:	jmp    0xe8c66ba4
  4073b2:	or     dh,BYTE PTR [edx]
  4073b4:	xchg   ebx,eax
  4073b5:	fdiv   st,st(0)
  4073b7:	jmp    DWORD PTR [edx+0x5e]
  4073ba:	add    dl,BYTE PTR [edi+0x64]
  4073bd:	in     eax,0x2f
  4073bf:	rcl    DWORD PTR [ebp-0x79729f61],1
  4073c5:	add    eax,0xbbcd9ad7
  4073ca:	inc    ecx
  4073cb:	pusha  
  4073cc:	hlt    
  4073cd:	dec    ebp
  4073ce:	lahf   
  4073cf:	in     eax,0x78
  4073d1:	inc    ebx
  4073d2:	add    ebx,ebx
  4073d4:	and    al,0x2b
  4073d6:	add    al,0x5d
  4073d8:	iret   
  4073d9:	(bad)  
  4073da:	stos   DWORD PTR es:[edi],eax
  4073db:	nop
  4073dc:	push   ebx
  4073dd:	xor    eax,0x6d56e711
  4073e2:	mov    dh,0xf4
  4073e4:	fisubr WORD PTR [ecx]
  4073e6:	gs loopne 0x4073f4
  4073e9:	scas   al,BYTE PTR es:[edi]
  4073ea:	xor    DWORD PTR [edx],eax
  4073ec:	dec    ebx
  4073ed:	adc    bh,ch
  4073ef:	cld    
  4073f0:	jmp    0x407398
  4073f2:	xchg   esi,edx
  4073f4:	jge    0x407423
  4073f6:	in     eax,0xb
  4073f8:	mov    DWORD PTR ds:[edx+edx*1+0x31c19e4f],eax
  407400:	sti    
  407401:	gs xchg ebp,eax
  407403:	out    0xdc,eax
  407405:	lar    eax,cx
  407408:	(bad)  
  407409:	in     eax,0xb6
  40740b:	push   ebp
  40740c:	addr16 retf 0xb970
  407410:	into   
  407411:	mov    dh,0x88
  407413:	and    ah,BYTE PTR [edx]
  407415:	push   edi
  407416:	mov    WORD PTR [esi+0x2a],cs
  407419:	xchg   ecx,eax
  40741a:	test   BYTE PTR [edi+0x6ce12d7f],al
  407420:	jp     0x407441
  407422:	inc    eax
  407423:	push   ss
  407424:	adc    esp,ecx
  407426:	mov    esp,0xe456fbf9
  40742b:	mov    dh,0x2
  40742d:	jo     0x407432
  40742f:	inc    esi
  407430:	add    DWORD PTR [esi-0x76],0x2
  407434:	int3   
  407435:	rcl    DWORD PTR [edx],0x4e
  407438:	add    ecx,DWORD PTR [eax-0x42e7983d]
  40743e:	cmp    ch,BYTE PTR [edx]
  407440:	jns    0x407482
  407442:	and    dh,BYTE PTR [eax]
  407444:	pop    edx
  407445:	in     al,0x78
  407447:	push   es
  407448:	inc    ecx
  407449:	push   esi
  40744a:	test   al,0xbe
  40744c:	mov    bl,0x57
  40744e:	jae    0x4073d4
  407450:	std    
  407451:	add    DWORD PTR [ebp-0x1d],edi
  407454:	mul    BYTE PTR [eax+ecx*1-0x6589fcf9]
  40745b:	jne    0x40745a
  40745d:	gs mov ebp,0xaa908382
  407463:	and    BYTE PTR [edi],0x58
  407466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407467:	fwait
  407468:	hlt    
  407469:	push   es
  40746a:	mov    al,0xb
  40746c:	xor    al,0x25
  40746e:	sbb    al,BYTE PTR [ebp-0x6fe4b9f]
  407474:	pop    ebx
  407475:	mov    al,ds:0x9434fec6
  40747a:	sti    
  40747b:	and    BYTE PTR [ecx-0x4f],al
  40747e:	out    0x27,eax
  407480:	push   0xb0e77a43
  407485:	and    eax,0xb7c7cdd5
  40748a:	jp     0x40744b
  40748c:	push   cs
  40748d:	push   es
  40748e:	sbb    eax,0x8b7a5b96
  407493:	and    DWORD PTR [edi],0xffffffd2
  407496:	mov    WORD PTR [ecx-0x52],gs
  407499:	cmc    
  40749a:	out    dx,eax
  40749b:	iret   
  40749c:	or     DWORD PTR [eax-0x602fad45],esp
  4074a2:	push   esi
  4074a3:	add    eax,edi
  4074a5:	(bad)  
  4074a6:	sbb    ecx,DWORD PTR [eax-0x25541af7]
  4074ac:	xchg   dh,al
  4074ae:	in     eax,0x94
  4074b0:	dec    esi
  4074b1:	ins    DWORD PTR es:[edi],dx
  4074b2:	fcomp  DWORD PTR [ecx-0x29]
  4074b5:	fcmovb st,st(4)
  4074b7:	push   cs
  4074b8:	out    0x67,al
  4074ba:	les    ecx,FWORD PTR [eax-0x35]
  4074bd:	sbb    eax,DWORD PTR [edx+0x92633b5]
  4074c3:	je     0x407534
  4074c5:	out    0xad,al
  4074c7:	dec    eax
  4074c8:	daa    
  4074c9:	mov    esp,0x393eaa2a
  4074ce:	add    al,0x24
  4074d0:	fld    DWORD PTR [ebp+0x26]
  4074d3:	jle    0x4074a2
  4074d5:	pop    ebp
  4074d6:	dec    esp
  4074d7:	into   
  4074d8:	and    DWORD PTR [ebx+0x1f26e5b],edx
  4074de:	aaa    
  4074df:	add    BYTE PTR ds:0xe6b0dd14,ch
  4074e5:	dec    ebp
  4074e6:	add    eax,DWORD PTR [eax]
  4074e8:	pop    esp
  4074e9:	je     0x40755f
  4074eb:	ret    
  4074ec:	js     0x4074f0
  4074ee:	in     al,0xc
  4074f0:	repnz (bad) 
  4074f2:	je     0x40756d
  4074f4:	leave  
  4074f5:	mov    al,BYTE PTR [eax+ecx*2]
  4074f8:	xor    ebx,DWORD PTR [ecx-0x10410a29]
  4074fe:	sahf   
  4074ff:	push   eax
  407500:	push   edx
  407501:	inc    esp
  407502:	je     0x4074a3
  407504:	mov    al,ds:0xc86ac151
  407509:	inc    edi
  40750a:	xor    DWORD PTR [ecx-0x4e],edx
  40750d:	sbb    bh,BYTE PTR [eax+edi*2]
  407510:	push   esp
  407511:	cmp    ch,BYTE PTR ds:0x3274aa6a
  407517:	cli    
  407518:	mov    ch,0xa
  40751a:	sahf   
  40751b:	stos   BYTE PTR es:[edi],al
  40751c:	shr    DWORD PTR [eax],1
  40751e:	pusha  
  40751f:	mov    DWORD PTR [ecx],ebp
  407521:	test   DWORD PTR [edx],0x136e7b35
  407527:	sbb    al,0x40
  407529:	ret    
  40752a:	fbld   TBYTE PTR [esi]
  40752c:	das    
  40752d:	fadd   QWORD PTR [ebx+eiz*1-0x189feb3b]
  407534:	nop
  407535:	je     0x407517
  407537:	push   es
  407538:	add    al,0xa9
  40753a:	in     eax,dx
  40753b:	shl    edi,cl
  40753d:	sar    BYTE PTR [edx-0x5d777e10],1
  407543:	pop    esi
  407544:	addr16 mov ch,0x45
  407547:	aaa    
  407548:	sub    al,0xfb
  40754a:	mov    al,ds:0x190fac90
  40754f:	rcr    DWORD PTR [ebx+ecx*1-0x35],0xd5
  407554:	(bad)  
  407555:	aas    
  407556:	bound  edx,QWORD PTR [esi+0x27]
  407559:	xchg   edx,eax
  40755a:	retf   0xefc5
  40755d:	sbb    dh,al
  40755f:	pushf  
  407560:	push   eax
  407561:	test   al,0xf9
  407563:	es push ebp
  407565:	inc    ebx
  407566:	jle    0x4075a2
  407568:	lods   al,BYTE PTR ds:[esi]
  407569:	mov    bl,0xe3
  40756b:	inc    esp
  40756c:	mov    ch,0x7d
  40756e:	in     al,dx
  40756f:	fmul   st,st(6)
  407571:	aaa    
  407572:	mov    edx,0x69a6907e
  407577:	dec    edx
  407578:	inc    esp
  407579:	jno    0x407593
  40757b:	sub    DWORD PTR [ecx],eax
  40757d:	jecxz  0x407502
  40757f:	push   0xed7cd1dc
  407584:	adc    al,0x0
  407586:	popf   
  407587:	pop    edx
  407588:	push   ecx
  407589:	cld    
  40758a:	stc    
  40758b:	sbb    al,cl
  40758d:	fistp  DWORD PTR ds:0xb3b37db3
  407593:	mov    ds:0x248868a,al
  407598:	int3   
  407599:	iret   
  40759a:	add    al,0x24
  40759c:	cdq    
  40759d:	dec    BYTE PTR [esi+eax*1-0x65]
  4075a1:	imul   ecx,DWORD PTR [ebx+eiz*1],0x7a00eee5
  4075a8:	outs   dx,DWORD PTR ds:[esi]
  4075a9:	lods   al,BYTE PTR ds:[esi]
  4075aa:	xor    eax,0xd5bd3a4d
  4075af:	scas   eax,DWORD PTR es:[edi]
  4075b0:	and    ebp,esp
  4075b2:	fidivr WORD PTR [eax-0x40a60677]
  4075b8:	(bad)  ds:0x8e475606
  4075be:	lahf   
  4075bf:	sub    al,0x84
  4075c1:	pushf  
  4075c2:	jne    0x407603
  4075c4:	add    eax,0xb421d2fd
  4075c9:	xor    esp,esp
  4075cb:	push   DWORD PTR [edi-0x3015fad1]
  4075d1:	or     eax,0xb51992ba
  4075d6:	imul   ecx,eax,0x8ab0b29b
  4075dc:	xchg   DWORD PTR [edx-0x34],ebx
  4075df:	xor    al,BYTE PTR [esi]
  4075e1:	inc    eax
  4075e2:	test   al,0xa
  4075e4:	in     al,dx
  4075e5:	cmp    DWORD PTR [edi+0x39ad61d5],ebp
  4075eb:	adc    ebx,DWORD PTR ds:0x2ef70f00
  4075f1:	add    cl,BYTE PTR [di-0x2026]
  4075f6:	call   0xddaf:0xdeacbad6
  4075fd:	pop    es
  4075fe:	sub    BYTE PTR [edi-0x6f6e8b40],0x27
  407605:	push   0x6633e93b
  40760a:	test   ebx,ecx
  40760c:	inc    esi
  40760d:	fwait
  40760e:	pop    edi
  40760f:	in     eax,0xe2
  407611:	xor    BYTE PTR [eax],0x70
  407614:	sbb    DWORD PTR [edx+0x4c],edi
  407617:	ja     0x40768e
  407619:	lods   al,BYTE PTR ds:[esi]
  40761a:	ret    0x4ee4
  40761d:	add    ch,BYTE PTR [edi+0x70]
  407620:	ds in  al,dx
  407622:	stos   BYTE PTR es:[edi],al
  407623:	and    edx,DWORD PTR [ebp-0x7668e0f1]
  407629:	pop    edi
  40762a:	or     BYTE PTR [edi+eiz*1],ch
  40762d:	adc    ecx,DWORD PTR [esi]
  40762f:	aam    0xd8
  407631:	add    esp,DWORD PTR [edx+0x32]
  407634:	call   0x4567aac0
  407639:	cmp    BYTE PTR [ecx+esi*4-0x3f],bl
  40763d:	sbb    DWORD PTR [eax-0x47],esi
  407640:	mov    esp,0x81064eb5
  407645:	xchg   edx,eax
  407646:	inc    edi
  407647:	retf   
  407648:	mov    edx,gs
  40764a:	mov    eax,cs:0x24d3288d
  407650:	mov    eax,0x66aa4c42
  407655:	dec    esp
  407656:	mov    al,ds:0xe9d7014d
  40765b:	gs mov ah,0x7d
  40765e:	mov    edi,ss
  407660:	lods   al,BYTE PTR ds:[esi]
  407661:	or     DWORD PTR ds:0x7fc53d41,esi
  407667:	gs xor ebx,ebp
  40766a:	jne    0x407621
  40766c:	clc    
  40766d:	mov    ch,0xed
  40766f:	loop   0x4076c8
  407671:	sub    eax,0xf453e02
  407676:	sahf   
  407677:	dec    edi
  407678:	push   ss
  407679:	retf   
  40767a:	add    al,0xea
  40767c:	cmp    esi,ebx
  40767e:	out    dx,al
  40767f:	mov    BYTE PTR [esi+eax*1+0x17154ee2],dh
  407686:	and    edi,DWORD PTR [ebx-0x15]
  407689:	pusha  
  40768a:	xchg   ecx,eax
  40768b:	pusha  
  40768c:	rol    BYTE PTR [ebp+0x72962e0c],1
  407692:	adc    DWORD PTR [eax-0x14],esi
  407695:	repnz clc 
  407697:	jecxz  0x407718
  407699:	js     0x4076bb
  40769b:	or     DWORD PTR [eax+0x48],edi
  40769e:	sub    ebp,DWORD PTR [edi]
  4076a0:	sti    
  4076a1:	mul    DWORD PTR [edi-0x78]
  4076a4:	cli    
  4076a5:	mul    DWORD PTR [edi+0x4]
  4076a8:	or     esi,DWORD PTR [ebx-0x18]
  4076ab:	adc    eax,0x6c5efc4f
  4076b0:	stos   BYTE PTR es:[edi],al
  4076b1:	ja     0x407703
  4076b3:	fiadd  DWORD PTR [eax+0x4896bf5e]
  4076b9:	fnstcw WORD PTR [esi]
  4076bb:	ret    0x7924
  4076be:	pop    ebx
  4076bf:	or     edx,esp
  4076c1:	adc    al,0xa8
  4076c3:	pusha  
  4076c4:	jp     0x4076c2
  4076c6:	ret    0x2009
  4076c9:	shl    DWORD PTR [ebx-0x2b4b7618],0x5d
  4076d0:	(bad)  
  4076d1:	scas   eax,DWORD PTR es:[edi]
  4076d2:	(bad)  
  4076d3:	out    0xb8,eax
  4076d5:	push   cs
  4076d6:	mov    eax,0x4fb2e1cc
  4076db:	call   0x2235b509
  4076e0:	mov    BYTE PTR [edi],dh
  4076e2:	mov    ds:0xa6e54747,eax
  4076e7:	sbb    al,0x3d
  4076e9:	adc    DWORD PTR [ecx+ebp*8+0x48],ebx
  4076ed:	or     BYTE PTR [eax+0x188c62c9],ah
  4076f3:	push   es
  4076f4:	out    0xba,al
  4076f6:	xlat   BYTE PTR ds:[ebx]
  4076f7:	fidiv  DWORD PTR [ebp-0x7d81a9c7]
  4076fd:	sar    esi,cl
  4076ff:	gs mov ebx,0x942621c5
  407705:	or     bh,BYTE PTR [eax+0x5ed84c2f]
  40770b:	sbb    eax,0x34b41832
  407710:	push   ecx
  407711:	sahf   
  407712:	xor    ebx,DWORD PTR [ebx+0x76dd6bc9]
  407718:	or     eax,0x14cbd5fc
  40771d:	xchg   edx,eax
  40771e:	mov    edi,0xc6eda2d6
  407723:	add    al,bh
  407725:	popf   
  407726:	pop    eax
  407727:	and    al,0x2e
  407729:	fisub  WORD PTR [edi-0x1]
  40772c:	sub    ebp,eax
  40772e:	xchg   esp,eax
  40772f:	and    ebp,DWORD PTR ds:0xd060d1e6
  407735:	popf   
  407736:	inc    ebp
  407737:	xchg   edx,eax
  407738:	xchg   BYTE PTR [eax+0x6420c8ad],al
  40773e:	data16 mov dh,0x15
  407741:	loopne 0x407778
  407743:	iret   
  407744:	dec    ebp
  407745:	mov    ebx,0xc481d9c8
  40774a:	cmc    
  40774b:	dec    ebx
  40774c:	dec    esp
  40774d:	xchg   DWORD PTR [ebx+0x22],eax
  407750:	out    0xb1,al
  407752:	mov    dl,0x4b
  407754:	stos   BYTE PTR es:[edi],al
  407755:	adc    DWORD PTR [ebx],ebp
  407757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407758:	cmp    BYTE PTR [eax-0x3cd6c1df],dl
  40775e:	pop    edx
  40775f:	xlat   BYTE PTR ds:[ebx]
  407760:	cs pop esp
  407762:	test   BYTE PTR ds:0x9bd49cf2,cl
  407768:	call   0x9423:0x1949ec1d
  40776f:	or     DWORD PTR [ecx+edi*2+0x18],0x343a9472
  407777:	dec    edx
  407778:	adc    dh,BYTE PTR [ecx-0x7b]
  40777b:	or     ah,BYTE PTR [edi+ebx*2-0x6beb17be]
  407782:	push   es
  407783:	rcl    DWORD PTR [ebp+esi*2+0x1f],0x83
  407788:	dec    esi
  407789:	add    DWORD PTR [eax],edi
  40778b:	add    ch,ch
  40778d:	out    dx,eax
  40778e:	cmp    DWORD PTR [eax],esi
  407790:	das    
  407791:	dec    esp
  407792:	lods   eax,DWORD PTR ds:[esi]
  407793:	pop    eax
  407794:	fild   DWORD PTR [eax+0x33]
  407797:	dec    edi
  407798:	jl     0x407741
  40779a:	in     eax,0x2b
  40779c:	loopne 0x40772b
  40779e:	sub    BYTE PTR [ebx+0xd],ch
  4077a1:	xchg   ecx,eax
  4077a2:	cwde   
  4077a3:	xchg   ebp,ebx
  4077a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077a6:	mov    eax,ds:0x1cfe6a22
  4077ab:	xor    dl,bh
  4077ad:	mov    cs,WORD PTR [edi+esi*1+0x3eb180f2]
  4077b4:	jne    0x40775c
  4077b6:	sub    esp,DWORD PTR [edi+ebp*4+0x74289135]
  4077bd:	add    BYTE PTR ds:0x6c03fac8,bh
  4077c3:	retf   
  4077c4:	push   ebx
  4077c5:	outs   dx,BYTE PTR ds:[esi]
  4077c6:	ret    0xb5b4
  4077c9:	call   0xc1e49238
  4077ce:	adc    eax,0xcf630d34
  4077d3:	push   0xdcb13f64
  4077d8:	mov    dl,0xea
  4077da:	in     al,dx
  4077db:	dec    ebx
  4077dc:	adc    DWORD PTR [edx],ecx
  4077de:	cmp    dh,ch
  4077e0:	cld    
  4077e1:	push   ebp
  4077e2:	das    
  4077e3:	outs   dx,BYTE PTR ds:[esi]
  4077e4:	sub    DWORD PTR [esi-0x47],0xffffffd8
  4077e8:	pop    ecx
  4077e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077ea:	pop    eax
  4077eb:	jecxz  0x40785f
  4077ed:	inc    esp
  4077ee:	ret    
  4077ef:	xor    BYTE PTR ds:0x26967081,cl
  4077f5:	gs cmc 
  4077f7:	xor    BYTE PTR [edi+0x33],bl
  4077fa:	leave  
  4077fb:	push   esi
  4077fc:	mov    ds:0xebb052a3,eax
  407801:	jo     0x407865
  407803:	retf   0x55d8
  407806:	(bad)  
  407807:	(bad)  [ecx]
  407809:	or     eax,0xc0fa13e0
  40780e:	arpl   WORD PTR [eax],bx
  407810:	dec    eax
  407811:	or     dh,BYTE PTR ds:0xaf199093
  407817:	mov    DWORD PTR [eax],eax
  407819:	daa    
  40781a:	inc    edi
  40781b:	sub    al,0x1c
  40781d:	int    0x4b
  40781f:	push   ebx
  407820:	icebp  
  407821:	test   ch,al
  407823:	cmp    al,0xdf
  407825:	int    0xd0
  407827:	jne    0x4078a2
  407829:	shr    ch,0x6c
  40782c:	inc    ecx
  40782d:	mov    edx,ss
  40782f:	add    edx,esi
  407831:	dec    eax
  407832:	xor    al,0xe2
  407834:	pop    ecx
  407835:	lahf   
  407836:	cwde   
  407837:	push   ecx
  407838:	into   
  407839:	mov    ah,0xa9
  40783b:	int3   
  40783c:	jb     0x4077c9
  40783e:	retf   
  40783f:	adc    DWORD PTR [ebx+0x15],0x7676ad3f
  407846:	ins    BYTE PTR es:[edi],dx
  407847:	adc    esi,0x7cf07ec0
  40784d:	lock xchg ecx,eax
  40784f:	in     al,0x7e
  407851:	mov    al,ds:0xb39570e2
  407856:	mov    ch,0xa8
  407858:	ficom  WORD PTR cs:[ebp+0xa]
  40785c:	in     al,0x50
  40785e:	cmp    dh,dl
  407860:	fcom   QWORD PTR [edx-0x6d00fc3b]
  407866:	dec    ebx
  407867:	out    dx,al
  407868:	popa   
  407869:	or     BYTE PTR ds:0xb9bb0a0e,dl
  40786f:	loopne 0x40780d
  407871:	push   cs
  407872:	and    esi,0xcdbcba04
  407878:	mov    WORD PTR [ebx],es
  40787a:	cmp    esi,DWORD PTR [ebx-0x59]
  40787d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40787e:	push   ds
  40787f:	cmp    eax,0xdd21fe85
  407884:	clc    
  407885:	cmp    al,cl
  407887:	mov    ds:0x96bf4c58,al
  40788c:	mov    ebp,0x1128ebcb
  407891:	lds    eax,FWORD PTR [edi+ecx*2-0x63b42314]
  407898:	pusha  
  407899:	cmp    eax,0x5b1b2ba
  40789e:	cmp    al,0xe6
  4078a0:	in     eax,dx
  4078a1:	push   eax
  4078a2:	push   0x535e0b08
  4078a7:	sbb    ebx,DWORD PTR [ecx-0x23]
  4078aa:	in     eax,dx
  4078ab:	daa    
  4078ac:	jno    0x4078cb
  4078ae:	mov    WORD PTR [edx],cs
  4078b0:	xchg   edi,eax
  4078b1:	aad    0x21
  4078b3:	nop
  4078b4:	shl    eax,1
  4078b6:	aad    0x32
  4078b8:	jge    0x40789b
  4078ba:	popf   
  4078bb:	push   ds
  4078bc:	fldcw  WORD PTR [eax-0x28308e48]
  4078c2:	push   0xf39e34e3
  4078c7:	dec    edi
  4078c8:	stos   BYTE PTR es:[edi],al
  4078c9:	(bad)  
  4078ca:	add    dl,BYTE PTR [ebx+0x1f]
  4078cd:	aaa    
  4078ce:	adc    ecx,DWORD PTR [esi-0x4b]
  4078d1:	mov    ch,dh
  4078d3:	jl     0x4078e4
  4078d5:	je     0x40792d
  4078d7:	pop    edx
  4078d8:	xchg   ebp,eax
  4078d9:	stos   DWORD PTR es:[edi],eax
  4078da:	mov    al,ds:0x7bf93ee3
  4078df:	mov    DWORD PTR [esi],ecx
  4078e1:	cwde   
  4078e2:	popa   
  4078e3:	xlat   BYTE PTR ds:[ebx]
  4078e5:	or     ebx,ebx
  4078e7:	adc    ebx,edx
  4078e9:	cmp    DWORD PTR [ebp+ebp*2+0x6d],ebx
  4078ed:	push   ecx
  4078ee:	idiv   DWORD PTR [edx-0x63514f62]
  4078f4:	or     BYTE PTR [ecx+eiz*4-0x53794ddf],bl
  4078fb:	xchg   edx,eax
  4078fc:	inc    esp
  4078fd:	aaa    
  4078fe:	push   ds
  4078ff:	(bad)  
  407900:	xlat   BYTE PTR ds:[ebx]
  407901:	dec    edi
  407902:	mov    ecx,0x80c1224f
  407907:	test   al,0xbc
  407909:	ds jg  0x4078a7
  40790c:	dec    edi
  40790d:	cwde   
  40790e:	add    al,0x77
  407910:	or     ah,BYTE PTR [eax+0x33]
  407913:	fidiv  WORD PTR [ebp+0x58]
  407916:	push   esp
  407917:	in     al,0xad
  407919:	cmp    edi,ebp
  40791b:	sahf   
  40791c:	(bad)  
  40791d:	(bad)  
  40791e:	jmp    0x4750:0xafbea235
  407925:	ror    DWORD PTR [edx-0x758fed7f],1
  40792b:	test   BYTE PTR [ecx+0x15],bl
  40792e:	xchg   ebp,eax
  40792f:	sub    ebp,DWORD PTR [eax-0x55f92f6]
  407935:	test   DWORD PTR [edi],edi
  407937:	(bad)  
  407938:	jbe    0x4078e0
  40793a:	test   BYTE PTR ds:0x89ccf86b,al
  407940:	and    BYTE PTR [edx-0x677a552d],ah
  407946:	sub    DWORD PTR [ebx-0xcfa440e],edx
  40794c:	xchg   esi,eax
  40794d:	outs   dx,DWORD PTR ds:[esi]
  40794e:	pop    es
  40794f:	mov    ds:0xe5228691,al
  407954:	stos   DWORD PTR es:[edi],eax
  407955:	adc    al,0xde
  407957:	jmp    0x407937
  407959:	rcr    BYTE PTR [esi+0x75bd12ce],cl
  40795f:	outs   dx,DWORD PTR ds:[esi]
  407960:	test   DWORD PTR [ebp+0x11],esp
  407963:	fld    TBYTE PTR [esp+edx*4-0x3608bc3c]
  40796a:	and    ebx,DWORD PTR [eax-0x679d950b]
  407970:	mov    ah,0xff
  407972:	stos   BYTE PTR es:[edi],al
  407973:	jno    0x4079af
  407975:	jmp    0x888b:0x67f791b5
  40797c:	mov    BYTE PTR [ebx-0x12],al
  40797f:	cmc    
  407980:	jl     0x407a00
  407982:	test   DWORD PTR [ecx+0x6523c833],eax
  407988:	jle    0x407954
  40798a:	imul   ebx,DWORD PTR [eax-0x41],0xb1b09d0
  407991:	xchg   BYTE PTR [edx+0x2b],ch
  407994:	fcomp  st(7)
  407996:	(bad)  
  407997:	aam    0x51
  407999:	mov    al,ds:0x6e9219ee
  40799e:	xchg   ebp,eax
  40799f:	sbb    dl,BYTE PTR [edx-0x4b]
  4079a2:	mov    ebp,0xa375940
  4079a7:	and    eax,0x7f1a6e33
  4079ac:	adc    ebp,DWORD PTR [ebx+0x7e]
  4079af:	push   ss
  4079b0:	mov    cl,0x2
  4079b2:	xchg   edi,eax
  4079b3:	js     0x4079a0
  4079b5:	fiadd  WORD PTR [ecx]
  4079b7:	mov    ds:0x6b939972,eax
  4079bc:	pop    eax
  4079bd:	scas   al,BYTE PTR es:[edi]
  4079be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079bf:	sub    BYTE PTR ds:0xebd1f249,0x61
  4079c6:	cs ret 
  4079c8:	sbb    al,0x8f
  4079ca:	adc    DWORD PTR [edi],ecx
  4079cc:	inc    edx
  4079cd:	sub    BYTE PTR [eax-0x5f],cl
  4079d0:	push   cs
  4079d1:	push   ss
  4079d2:	mov    edx,0xa6716a09
  4079d7:	inc    eax
  4079d8:	enter  0x5b31,0xef
  4079dc:	clc    
  4079dd:	ret    
  4079de:	test   edx,edx
  4079e0:	xor    bl,cl
  4079e2:	or     ah,ah
  4079e4:	leave  
  4079e5:	mov    bh,0xb7
  4079e7:	dec    ebx
  4079e8:	cs ret 0xf33e
  4079ec:	sbb    bl,al
  4079ee:	mov    ecx,0xa1f2cca2
  4079f3:	mov    cl,BYTE PTR [ebx-0x12]
  4079f6:	adc    esi,DWORD PTR [edi-0x443bd381]
  4079fc:	xor    ch,ch
  4079fe:	clc    
  4079ff:	add    ebx,DWORD PTR [edx-0x1e69404f]
  407a05:	call   0x6d3c3aa7
  407a0a:	out    dx,al
  407a0b:	mov    WORD PTR ss:[esi],gs
  407a0e:	or     BYTE PTR fs:[edx-0x2fae60c0],0x29
  407a16:	mul    BYTE PTR [ebx-0x1d2ef3d2]
  407a1c:	mov    dl,0x4a
  407a1e:	ja     0x4079f5
  407a20:	xor    DWORD PTR [eax+eiz*8+0x7fd1f0a2],ebx
  407a27:	scas   eax,DWORD PTR es:[edi]
  407a28:	sub    al,0x8f
  407a2a:	mov    DWORD PTR [ebp+0x48],esi
  407a2d:	test   al,0xef
  407a2f:	add    bl,cl
  407a31:	ds es (bad) 
  407a34:	sub    eax,0xdc2710a3
  407a39:	fstp   TBYTE PTR fs:[ecx-0x659b5b0e]
  407a40:	xor    BYTE PTR [ebx-0x743c5d59],dl
  407a46:	jno    0x4079e4
  407a48:	stos   DWORD PTR es:[edi],eax
  407a49:	push   0xcb446917
  407a4e:	repz mov ebp,0xb153c5d1
  407a54:	sbb    dh,dh
  407a56:	sahf   
  407a57:	fidiv  WORD PTR [edi+eax*1-0x5edf8a82]
  407a5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a5f:	xor    al,0x8d
  407a61:	in     eax,dx
  407a62:	sub    eax,0xf183b734
  407a67:	jl     0x407a09
  407a69:	paddq  mm1,QWORD PTR [ecx]
  407a6c:	adc    DWORD PTR [ecx+0x52],eax
  407a6f:	mov    ds:0xf3934299,eax
  407a74:	push   ds
  407a75:	fwait
  407a76:	push   esi
  407a77:	pop    ebp
  407a78:	(bad)  
  407a79:	out    0x82,al
  407a7b:	mov    al,0x5
  407a7d:	(bad)  
  407a7e:	push   0x15
  407a80:	enter  0x57f,0x1c
  407a84:	push   esp
  407a85:	sbb    eax,ebp
  407a87:	xor    BYTE PTR ds:0x9afe22d8,ah
  407a8d:	(bad)  
  407a8e:	ror    DWORD PTR [esi-0x16],0x76
  407a92:	call   0x4c86983f
  407a97:	and    DWORD PTR [edx-0x1f645b71],ebx
  407a9d:	call   0x1000:0x89efe5ca
  407aa4:	cli    
  407aa5:	bound  ecx,QWORD PTR [esi+0x2f]
  407aa8:	cmp    al,0xf5
  407aaa:	jo     0x407abc
  407aac:	mov    al,ds:0x22eca051
  407ab1:	xor    BYTE PTR [ecx+eiz*8],dh
  407ab4:	add    al,ch
  407ab6:	cmp    al,0x1e
  407ab8:	push   ds
  407ab9:	ds dec eax
  407abb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407abc:	pushf  
  407abd:	cmp    bl,BYTE PTR [ebp+0x36c4adbc]
  407ac3:	clc    
  407ac4:	fwait
  407ac5:	inc    esi
  407ac6:	push   0x4fbf5996
  407acb:	shr    BYTE PTR [eax],0x67
  407ace:	mov    BYTE PTR [ebx+0xb40ac9d],ah
  407ad4:	mov    eax,ds:0xb91f92cf
  407ad9:	xchg   ebx,eax
  407ada:	scas   eax,DWORD PTR es:[edi]
  407adb:	ret    
  407adc:	(bad)
  407adf:	jecxz  0x407af4
  407ae1:	dec    ebx
  407ae2:	je     0x407b2b
  407ae4:	clc    
  407ae5:	test   BYTE PTR [eax+edi*2+0x667cecdd],ah
  407aec:	add    al,0x55
  407aee:	mov    edi,0x195e90f3
  407af3:	lods   al,BYTE PTR ds:[esi]
  407af4:	mov    DWORD PTR [edi+0x38bd15bf],ebx
  407afa:	push   ebx
  407afb:	inc    esi
  407afc:	pop    esp
  407afd:	push   edx
  407afe:	xchg   ebx,eax
  407aff:	ins    BYTE PTR es:[edi],dx
  407b00:	icebp  
  407b01:	push   edx
  407b02:	xchg   edx,eax
  407b03:	clc    
  407b04:	sbb    bl,BYTE PTR [edx-0x73805509]
  407b0a:	mov    cl,0x16
  407b0c:	add    eax,DWORD PTR [edx+esi*8]
  407b0f:	sub    al,0x99
  407b11:	push   ebx
  407b12:	inc    ebp
  407b13:	and    bl,BYTE PTR [ebp+0x50]
  407b16:	or     al,BYTE PTR [ebp+0x222a5ee3]
  407b1c:	in     al,dx
  407b1d:	mov    al,0x29
  407b1f:	jno    0x407ad9
  407b21:	dec    ecx
  407b22:	xor    eax,0x1e7405a1
  407b27:	xor    DWORD PTR es:[ebp+0x1d],eax
  407b2b:	jns    0x407b0e
  407b2d:	aaa    
  407b2e:	ins    DWORD PTR es:[edi],dx
  407b2f:	adc    bl,BYTE PTR [edx-0x2c]
  407b32:	scas   eax,DWORD PTR es:[edi]
  407b33:	cmp    esi,DWORD PTR [ecx-0x3eec6c29]
  407b39:	pop    edi
  407b3a:	cdq    
  407b3b:	adc    BYTE PTR [ebp+0x32],al
  407b3e:	push   ebx
  407b3f:	push   edx
  407b40:	adc    ebx,esp
  407b42:	xchg   ebp,eax
  407b43:	dec    edi
  407b44:	and    ebp,DWORD PTR [edi+0x42]
  407b47:	pop    edi
  407b48:	jmp    0x4ded:0x364e49f5
  407b4f:	jno    0x407b02
  407b51:	or     BYTE PTR [edx+0x5a],cl
  407b54:	mov    ah,0xf2
  407b56:	xchg   esi,eax
  407b57:	pop    edx
  407b58:	out    dx,eax
  407b59:	pop    edx
  407b5a:	jg     0x407bcf
  407b5c:	ror    ebp,1
  407b5e:	mov    cl,0x8a
  407b60:	rcr    cl,cl
  407b62:	ret    
  407b63:	or     al,0x80
  407b65:	or     eax,0xae14628f
  407b6a:	bound  eax,QWORD PTR [edx-0x4532c41c]
  407b70:	inc    edx
  407b71:	jmp    0xc6ce1492
  407b76:	jp     0x407bbd
  407b78:	jno    0x407b5d
  407b7a:	out    0x74,al
  407b7c:	push   ebx
  407b7d:	push   ss
  407b7e:	dec    eax
  407b7f:	dec    esp
  407b80:	mov    al,0x15
  407b82:	popf   
  407b83:	mov    esp,0x877834cb
  407b88:	std    
  407b89:	and    dh,BYTE PTR [ecx+0x46b0040a]
  407b8f:	into   
  407b90:	mov    esi,0x42feced4
  407b95:	xchg   ebx,eax
  407b96:	lock cmp DWORD PTR [ecx],edx
  407b99:	sbb    al,ah
  407b9b:	popa   
  407b9c:	test   eax,0xf49cdda1
  407ba1:	rcl    edx,0xa7
  407ba4:	ret    0xc240
  407ba7:	rol    DWORD PTR [ebx+0xb],1
  407baa:	(bad)  
  407bab:	mov    BYTE PTR [ecx+0x6e],al
  407bae:	xchg   esi,eax
  407baf:	imul   ebx,esi,0x247d39f4
  407bb5:	or     al,0xa
  407bb7:	pop    es
  407bb8:	xchg   ecx,eax
  407bb9:	xchg   esp,eax
  407bba:	jmp    0x407b98
  407bbc:	jne    0x407b4e
  407bbe:	int3   
  407bbf:	aam    0x3d
  407bc1:	cmp    eax,0x415931e3
  407bc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bc7:	lock in al,dx
  407bc9:	add    eax,0x4fe9dcc6
  407bce:	mov    eax,ds:0x5f037dcf
  407bd3:	out    dx,al
  407bd4:	and    bh,BYTE PTR [edx-0x7e9ffd2]
  407bda:	addr16 inc esp
  407bdc:	cmp    ch,BYTE PTR [ebp-0x2998336a]
  407be2:	out    0xfd,al
  407be4:	jne    0x407c4f
  407be6:	adc    eax,DWORD PTR [eax-0x339c4f4f]
  407bec:	pop    eax
  407bed:	jae    0x407c39
  407bef:	mov    DWORD PTR [edx],edx
  407bf1:	push   ebx
  407bf2:	hlt    
  407bf3:	ret    
  407bf4:	out    dx,eax
  407bf5:	outs   dx,BYTE PTR ds:[esi]
  407bf6:	inc    ebx
  407bf7:	dec    esp
  407bf8:	jge    0x407bcb
  407bfa:	jae    0x407c67
  407bfc:	popa   
  407bfd:	pop    edi
  407bfe:	mov    ds:0x5bde3c08,al
  407c03:	xchg   esi,eax
  407c04:	out    dx,al
  407c05:	sub    BYTE PTR [ebp+0x7b],bh
  407c08:	push   esi
  407c09:	push   eax
  407c0a:	jmp    0x407bf9
  407c0c:	xchg   DWORD PTR ds:0x58f6def2,ecx
  407c12:	pop    edi
  407c13:	shl    DWORD PTR [ebx+0x16],1
  407c16:	push   0x33e4565a
  407c1b:	xchg   esi,eax
  407c1c:	jmp    0x9937a7f1
  407c21:	pop    ss
  407c22:	(bad)  
  407c26:	aad    0x3c
  407c28:	pop    edi
  407c29:	push   cs
  407c2a:	cmp    bh,BYTE PTR [edi]
  407c2c:	lock pop eax
  407c2e:	cdq    
  407c2f:	imul   ebx,esi,0x28
  407c32:	mov    BYTE PTR [eax+0x5d],dl
  407c35:	pop    ds
  407c36:	call   0x6d6e16f9
  407c3b:	mov    al,0xeb
  407c3d:	outs   dx,BYTE PTR ds:[esi]
  407c3e:	imul   BYTE PTR [ebx]
  407c40:	mov    esp,0x337d01eb
  407c45:	int3   
  407c46:	int    0xcd
  407c48:	jge    0x407c3a
  407c4a:	mov    gs,WORD PTR [ecx]
  407c4c:	inc    ecx
  407c4d:	out    dx,eax
  407c4e:	sbb    ecx,DWORD PTR [ebp+0x1b]
  407c51:	retf   
  407c52:	xlat   BYTE PTR ds:[ebx]
  407c53:	add    al,0x9c
  407c55:	mov    dl,0x35
  407c57:	dec    ebx
  407c58:	ins    BYTE PTR es:[edi],dx
  407c59:	test   DWORD PTR [eax+ebx*2-0x5f497e41],0x23a19983
  407c64:	jne    0x407c7c
  407c66:	adc    eax,0xa0027ce5
  407c6b:	add    DWORD PTR [esi+0x139d4ed7],0x50
  407c72:	pop    ebp
  407c73:	js     0x407c77
  407c75:	sbb    esi,0x9
  407c78:	fld    QWORD PTR [ecx+edx*1+0x608d5b47]
  407c7f:	and    cl,dl
  407c81:	nop
  407c82:	push   eax
  407c83:	xchg   esi,eax
  407c84:	leave  
  407c85:	hlt    
  407c86:	mov    edx,0x6945b8e3
  407c8b:	gs jecxz 0x407cab
  407c8e:	push   edx
  407c8f:	cmp    al,0x8b
  407c91:	pop    eax
  407c92:	jmp    0xe76b:0x562ae8ab
  407c99:	or     ebp,eax
  407c9b:	ret    
  407c9c:	arpl   WORD PTR ds:0x4ce5b790,si
  407ca2:	xor    al,0x2a
  407ca4:	test   al,0xf5
  407ca6:	mov    ds:0x140284bf,eax
  407cab:	pusha  
  407cac:	adc    esi,DWORD PTR [eax]
  407cae:	in     eax,0xe6
  407cb0:	pop    DWORD PTR [edx-0x7a]
  407cb3:	daa    
  407cb4:	lea    ecx,[eax-0x7215ae9b]
  407cba:	out    0x9a,eax
  407cbc:	add    dl,BYTE PTR [edx-0x78]
  407cbf:	lahf   
  407cc0:	xchg   ecx,eax
  407cc1:	out    dx,al
  407cc2:	xlat   BYTE PTR ds:[ebx]
  407cc3:	aas    
  407cc4:	mov    eax,0x46f5883c
  407cc9:	mov    ?,esi
  407ccb:	sahf   
  407ccc:	mov    ?,WORD PTR [ecx-0xe]
  407ccf:	adc    dh,BYTE PTR [esi]
  407cd1:	cld    
  407cd2:	sbb    DWORD PTR [edx+eax*4+0x2a],ecx
  407cd6:	ins    BYTE PTR es:[edi],dx
  407cd7:	dec    esp
  407cd8:	outs   dx,DWORD PTR ds:[esi]
  407cd9:	xchg   edx,eax
  407cda:	mov    dh,0xa4
  407cdc:	mov    eax,ds:0x476d8a21
  407ce1:	(bad)  
  407ce2:	sbb    DWORD PTR [di-0x510b],0xffffffab
  407ce8:	das    
  407ce9:	push   edi
  407cea:	push   ss
  407ceb:	dec    ebp
  407cec:	in     al,dx
  407ced:	dec    edi
  407cee:	or     BYTE PTR [esi+ebx*2-0x16b95730],0x2f
  407cf6:	gs adc al,0xce
  407cf9:	sbb    bh,bh
  407cfb:	popf   
  407cfc:	mov    bl,0x45
  407cfe:	fbstp  TBYTE PTR [edi+eiz*8-0x42]
  407d02:	or     ch,BYTE PTR ds:0x9009f76c
  407d08:	add    eax,0x9282b047
  407d0d:	mov    ch,0xb
  407d0f:	nop
  407d10:	adc    eax,0x283a372c
  407d15:	bound  edi,QWORD PTR [edi-0x2eec138f]
  407d1b:	pusha  
  407d1c:	pop    esi
  407d1d:	xor    DWORD PTR [ebp-0x63],ebp
  407d20:	dec    ebx
  407d21:	pop    edi
  407d22:	xchg   ebx,eax
  407d23:	loop   0x407d9a
  407d25:	or     DWORD PTR [eax+0x7389e8e3],ebp
  407d2b:	inc    esi
  407d2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d2d:	sbb    eax,ebx
  407d2f:	lds    edi,FWORD PTR [edx]
  407d31:	pop    es
  407d32:	xchg   bp,ax
  407d34:	and    BYTE PTR [ebp+0x4f],cl
  407d37:	lock adc ebx,DWORD PTR ss:[ecx]
  407d3b:	xchg   edi,eax
  407d3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d3d:	sbb    DWORD PTR [esi+eiz*8-0x22],edi
  407d41:	pop    edi
  407d42:	retf   
  407d43:	push   edi
  407d44:	adc    al,0x51
  407d46:	or     esi,eax
  407d48:	jo     0x407db6
  407d4a:	jnp    0x407cfa
  407d4c:	sbb    al,0x1d
  407d4e:	inc    esp
  407d4f:	mov    ecx,0x6b8ad19c
  407d54:	cmp    eax,0xc8638d53
  407d59:	ins    DWORD PTR es:[edi],dx
  407d5a:	stc    
  407d5b:	cld    
  407d5c:	shl    bh,0xc
  407d5f:	mov    ds:0x178d818e,al
  407d64:	sbb    DWORD PTR [esi],0xf66403b5
  407d6a:	mov    ds:0x69d2a10c,eax
  407d6f:	(bad)  
  407d71:	inc    ecx
  407d72:	mov    esp,0x96880fc4
  407d77:	pop    eax
  407d78:	in     al,dx
  407d79:	cmc    
  407d7a:	lds    ebx,FWORD PTR [edx-0x77]
  407d7d:	adc    al,0x3e
  407d7f:	out    dx,al
  407d80:	adc    al,BYTE PTR [ecx]
  407d82:	enter  0x8856,0xe8
  407d86:	cdq    
  407d87:	test   DWORD PTR [ebx+0xf9db34d],esi
  407d8d:	pop    ss
  407d8e:	and    ebp,edx
  407d90:	std    
  407d91:	loop   0x407d47
  407d93:	add    eax,0x6a20b50c
  407d98:	jo     0x407d39
  407d9a:	out    0x48,al
  407d9c:	sbb    al,0xd8
  407d9e:	out    dx,al
  407d9f:	mov    cl,0xd9
  407da1:	xchg   edx,eax
  407da2:	fsubp  st(4),st
  407da4:	std    
  407da5:	nop
  407da6:	das    
  407da7:	int    0xd6
  407da9:	call   0xce28fb22
  407dae:	jmp    0xef561ffe
  407db3:	lea    edi,[ecx+0x397f6470]
  407db9:	dec    ebx
  407dba:	repz sbb dh,0x29
  407dbe:	sti    
  407dbf:	add    eax,0xece7fd50
  407dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dc5:	or     al,0x19
  407dc7:	add    DWORD PTR [ebp+0x64d1d9b0],esi
  407dcd:	stos   DWORD PTR es:[edi],eax
  407dce:	adc    BYTE PTR [ecx],bl
  407dd0:	dec    eax
  407dd1:	xchg   ebx,eax
  407dd2:	(bad)  
  407dd3:	push   ebp
  407dd4:	xchg   DWORD PTR [ebp-0x40],ecx
  407dd7:	mov    BYTE PTR [ebx+0x60],al
  407dda:	sub    DWORD PTR fs:[edi-0x23],eax
  407dde:	jnp    0x407e53
  407de0:	clc    
  407de1:	xchg   edi,eax
  407de2:	lahf   
  407de3:	and    BYTE PTR [ebx+0x3995d4a3],0xec
  407dea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407deb:	mov    al,0x63
  407ded:	or     al,0xa3
  407def:	sub    al,0x29
  407df1:	aad    0xa2
  407df3:	and    al,0xf5
  407df5:	sbb    eax,0xdf4cfa47
  407dfa:	pop    ebp
  407dfb:	mov    dl,0x0
  407dfd:	add    eax,0x703acae4
  407e02:	or     bh,BYTE PTR [edx-0x355aaa81]
  407e08:	add    DWORD PTR [edi+0x6f],ebp
  407e0b:	and    edi,DWORD PTR [esi]
  407e0d:	loope  0x407dab
  407e0f:	in     al,dx
  407e10:	retf   
  407e11:	mov    dh,0xeb
  407e13:	mov    al,0x41
  407e15:	or     eax,0xea006392
  407e1a:	inc    ecx
  407e1b:	inc    ecx
  407e1c:	mov    al,ds:0xa2802665
  407e21:	je     0x407e22
  407e23:	xchg   esi,eax
  407e24:	jl     0x407e0d
  407e26:	add    DWORD PTR [edx+ecx*4+0x6355ba20],eax
  407e2d:	dec    edx
  407e2e:	dec    ecx
  407e2f:	sbb    al,0xe0
  407e31:	xchg   BYTE PTR [ecx+edi*1],dl
  407e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e35:	fst    DWORD PTR [edx]
  407e37:	loope  0x407e55
  407e39:	xor    BYTE PTR [edi-0x4e9aebef],bl
  407e3f:	pop    esi
  407e40:	lods   al,BYTE PTR ds:[esi]
  407e41:	loopne 0x407e3d
  407e43:	repz clc 
  407e45:	dec    edx
  407e46:	dec    ebp
  407e47:	arpl   WORD PTR [edi+0x7315bb44],cx
  407e4d:	and    DWORD PTR [edi-0x30],eax
  407e50:	lods   eax,DWORD PTR ds:[esi]
  407e51:	aas    
  407e52:	pop    ss
  407e53:	xor    eax,0x64855cf0
  407e58:	pop    esp
  407e59:	pop    ecx
  407e5a:	mov    cl,0x33
  407e5c:	gs retf 
  407e5e:	popf   
  407e5f:	xchg   esp,eax
  407e60:	call   0x402c22c
  407e65:	or     dl,bh
  407e67:	pop    ss
  407e68:	and    BYTE PTR [eax+eax*8+0x671dac49],ah
  407e6f:	pop    es
  407e70:	je     0x407e2e
  407e72:	jmp    0xe594d7cd
  407e77:	sub    edi,DWORD PTR [eax+edx*2+0x2ffba6e1]
  407e7e:	fwait
  407e7f:	mov    edi,0x309c5fa8
  407e84:	outs   dx,DWORD PTR ds:[esi]
  407e85:	pop    ebx
  407e86:	xor    al,0xea
  407e88:	push   ebp
  407e89:	mov    eax,0x377ddd2a
  407e8e:	bound  edx,QWORD PTR [ebp+0x75df235f]
  407e94:	loopne 0x407e2f
  407e96:	sbb    BYTE PTR [ecx],dh
  407e98:	es loop 0x407e9c
  407e9b:	and    BYTE PTR [eax-0x4520f62a],0x51
  407ea2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ea3:	inc    edx
  407ea4:	dec    edx
  407ea5:	and    cl,al
  407ea7:	adc    esi,eax
  407ea9:	sar    BYTE PTR [ebx-0x242dd818],0x10
  407eb0:	xor    DWORD PTR [edi+0xbdd4798],edx
  407eb6:	or     cl,BYTE PTR [ecx]
  407eb8:	mov    edx,0x26a4d5c4
  407ebd:	mov    ebp,0x86b62313
  407ec2:	xor    eax,0x84c3d7b3
  407ec7:	xchg   ebp,eax
  407ec8:	test   BYTE PTR [edx],al
  407eca:	jno    0x407f39
  407ecc:	sub    edx,DWORD PTR [edi-0x7408b1db]
  407ed2:	mov    ebx,0xd2e8fb40
  407ed7:	sbb    al,0x72
  407ed9:	bound  ecx,QWORD PTR [ecx+0x48]
  407edc:	sar    DWORD PTR [ecx+0x532dec2f],cl
  407ee2:	retf   
  407ee3:	call   0x235aa150
  407ee8:	mov    bh,0xf6
  407eea:	test   BYTE PTR [edi+edx*4-0x14],cl
  407eee:	(bad)  
  407eef:	push   esp
  407ef0:	scas   al,BYTE PTR es:[edi]
  407ef1:	es cs xor al,0xbc
  407ef5:	fnstcw WORD PTR [ebx]
  407ef7:	popa   
  407ef8:	sbb    al,0x1f
  407efa:	cs ret 0xc5d3
  407efe:	jbe    0x407ef2
  407f00:	jl     0x407f4f
  407f02:	aaa    
  407f03:	ds retf 
  407f05:	xor    BYTE PTR [eax-0x5cdd93f9],0xd7
  407f0c:	sti    
  407f0d:	shl    DWORD PTR [ebx+0x38997bc],1
  407f13:	xor    BYTE PTR [esi+eax*4+0x50b3a0e7],cl
  407f1a:	xchg   edi,eax
  407f1b:	adc    BYTE PTR [eax+0x9],ch
  407f1e:	jbe    0x407ed6
  407f20:	retf   
  407f21:	sbb    ch,bl
  407f23:	les    esi,FWORD PTR [eax-0x5a10b11a]
  407f29:	lea    edi,[edi]
  407f2b:	shl    BYTE PTR [ebp-0x62],0xb7
  407f2f:	inc    edx
  407f30:	in     al,dx
  407f31:	dec    edi
  407f32:	es int 0x45
  407f35:	outs   dx,BYTE PTR ds:[esi]
  407f36:	jnp    0x407edb
  407f38:	mov    esp,0xe7d9b7ca
  407f3d:	mov    ebp,0x63a54b5e
  407f42:	test   BYTE PTR [ebp-0x28022e74],0x59
  407f49:	out    0x1e,eax
  407f4b:	jmp    0x8c1e:0x11130062
  407f52:	mov    al,ds:0x40b837f
  407f57:	push   0xffffffe1
  407f59:	scas   eax,DWORD PTR es:[edi]
  407f5a:	repz inc edi
  407f5c:	test   al,0xd2
  407f5e:	icebp  
  407f5f:	jbe    0x407f32
  407f61:	mov    al,ds:0xb1adda30
  407f66:	(bad)  
  407f67:	push   es
  407f68:	fmul   QWORD PTR [eax-0x21]
  407f6b:	sbb    BYTE PTR [ebp+0x4cadf7c7],dl
  407f71:	push   0xc9048559
  407f76:	popf   
  407f77:	pop    esi
  407f78:	in     eax,0x77
  407f7a:	mov    esp,0x4bfd694e
  407f7f:	adc    al,0xff
  407f81:	or     esi,DWORD PTR [edi+0x161277af]
  407f87:	std    
  407f88:	cmp    eax,DWORD PTR [edx+0x657fb084]
  407f8e:	and    DWORD PTR [ebx+ecx*2],edi
  407f91:	(bad)  
  407f92:	aas    
  407f93:	sbb    eax,0x49e38f90
  407f98:	jl     0x407fba
  407f9a:	inc    esp
  407f9b:	in     al,0x2f
  407f9d:	jnp    0x407fb2
  407f9f:	repnz adc eax,0x607fe942
  407fa5:	adc    eax,0x4687615b
  407faa:	cmp    dh,BYTE PTR gs:[esi]
  407fad:	gs jmp 0x8f73:0x20e3a20
  407fb5:	retf   0xe4e
  407fb8:	pop    edi
  407fb9:	add    DWORD PTR ds:0x74c20a6d,ebp
  407fbf:	add    bl,BYTE PTR fs:[edi-0x77]
  407fc3:	push   ecx
  407fc4:	sahf   
  407fc5:	lahf   
  407fc6:	add    al,BYTE PTR [ecx-0x3ffe515d]
  407fcc:	arpl   sp,si
  407fce:	jae    0x407f54
  407fd0:	adc    eax,0x526ab1f1
  407fd5:	fdiv   DWORD PTR [ebx-0x64]
  407fd8:	in     eax,dx
  407fd9:	push   cs
  407fda:	pop    ds
  407fdb:	pop    esp
  407fdc:	out    0x5,al
  407fde:	jno    0x408042
  407fe0:	mov    ds:0x84a8543b,eax
  407fe5:	add    eax,0xd04cb4fb
  407fea:	jl     0x408030
  407fec:	loop   0x407fd4
  407fee:	pop    ecx
  407fef:	mov    ds:0xf4a602de,eax
  407ff4:	add    al,0x76
  407ff6:	cmp    ecx,DWORD PTR [edi-0x4c]
  407ff9:	int    0x94
  407ffb:	dec    ebp
  407ffc:	add    edx,DWORD PTR [esi]
  407ffe:	cmp    al,0xe9
  408000:	aaa    
  408001:	xchg   edx,eax
  408002:	call   0xe5f1:0xcfa5dcbc
  408009:	mov    ebp,DWORD PTR [edx+eiz*1+0xc68eeef]
  408010:	int    0x94
  408012:	inc    ecx
  408013:	shr    DWORD PTR [eax],0xc
  408016:	imul   eax,DWORD PTR [ebx-0x70ab77e5],0xffffffc0
  40801d:	cmp    BYTE PTR [edi+0x19b7c025],dh
  408023:	cwde   
  408024:	mov    dh,0x51
  408026:	std    
  408027:	mov    ah,0xc3
  408029:	test   BYTE PTR [esp+ebp*4],ch
  40802c:	inc    eax
  40802d:	iret   
  40802e:	aaa    
  40802f:	xor    eax,0xbb736d7b
  408034:	add    al,BYTE PTR [edx-0x2f4e4b78]
  40803a:	aad    0x1f
  40803c:	sbb    DWORD PTR [eax-0x10],ebx
  40803f:	sbb    DWORD PTR [esi],esp
  408041:	inc    ebp
  408042:	adc    ecx,DWORD PTR [ecx-0x34]
  408045:	shl    al,cl
  408047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408048:	ret    0x671e
  40804b:	arpl   WORD PTR [ebx-0x29c645fa],sp
  408051:	jno    0x40802f
  408053:	daa    
  408054:	mov    dh,0xbe
  408056:	test   eax,0xbad8d764
  40805b:	dec    edi
  40805c:	add    BYTE PTR [ecx],ch
  40805e:	shl    BYTE PTR [eax+edx*1],0xa8
  408062:	std    
  408063:	loop   0x40800b
  408065:	jmp    0x512e:0x4c16368f
  40806c:	call   0x45ee9266
  408071:	xchg   DWORD PTR [edx-0x7c],ebp
  408074:	jp     0x40806f
  408076:	xor    eax,0xbc277b76
  40807b:	hlt    
  40807c:	sbb    bl,BYTE PTR [ecx+0x1d]
  40807f:	adc    DWORD PTR [bp+0x3ee8],ebp
  408084:	jmp    0x408038
  408086:	cdq    
  408087:	mov    ah,0x34
  408089:	cmp    eax,0x959cd04b
  40808e:	jnp    0x4080e1
  408090:	(bad)  [edi-0x6b537067]
  408096:	enter  0x31b2,0xd1
  40809a:	add    al,0xe4
  40809c:	fbstp  TBYTE PTR [edx]
  40809e:	bound  esi,QWORD PTR [edx+0x16]
  4080a1:	stos   DWORD PTR es:[edi],eax
  4080a2:	bound  eax,QWORD PTR [eax]
  4080a4:	test   al,0x69
  4080a6:	in     eax,dx
  4080a7:	rcr    al,1
  4080a9:	mov    esp,0x1ffc69d3
  4080ae:	mov    es,WORD PTR [esi]
  4080b0:	shl    dh,0x97
  4080b3:	cmc    
  4080b4:	and    al,0x34
  4080b6:	jl     0x4080ed
  4080b8:	cmp    DWORD PTR [esi-0x2a565f60],esp
  4080be:	nop
  4080bf:	call   0x18ae4e1d
  4080c4:	(bad)  
  4080c5:	stos   BYTE PTR es:[edi],al
  4080c6:	or     eax,0x5a057949
  4080cb:	fisub  DWORD PTR [ebx+edx*2]
  4080ce:	out    dx,al
  4080cf:	push   esi
  4080d0:	ja     0x4080e0
  4080d2:	xchg   esi,eax
  4080d3:	or     eax,0x712e109c
  4080d8:	and    eax,0xad9e33f0
  4080dd:	adc    edi,ecx
  4080df:	dec    edi
  4080e0:	test   DWORD PTR [ecx+0x52],eax
  4080e3:	leave  
  4080e4:	inc    esp
  4080e5:	inc    eax
  4080e6:	repnz aad 0x1b
  4080e9:	mov    al,ds:0x76edc37b
  4080ee:	cmp    DWORD PTR [ecx+0x4a],0x7f06dd8c
  4080f5:	fisub  DWORD PTR [eax+0x4396d0b2]
  4080fb:	cmp    DWORD PTR [edi-0x32],ecx
  4080fe:	jnp    0x4080b7
  408100:	adc    ch,BYTE PTR [edi-0x71]
  408103:	int    0x95
  408105:	retf   0x48ff
  408108:	jnp    0x4080bb
  40810a:	push   esi
  40810b:	xlat   BYTE PTR fs:[ebx]
  40810d:	mov    esp,0x5be60c00
  408112:	in     al,0xa1
  408114:	(bad)  
  408115:	and    al,0x78
  408117:	ins    BYTE PTR es:[edi],dx
  408118:	pop    esp
  408119:	adc    eax,0x87d806df
  40811e:	inc    ecx
  40811f:	xchg   DWORD PTR [esi-0x22e69800],esp
  408125:	mov    ds:0x5071396d,eax
  40812a:	call   0x7ba40c
  40812f:	jne    0x40818f
  408131:	gs dec esp
  408133:	xor    eax,0x76fba928
  408138:	push   cs
  408139:	cli    
  40813a:	mov    ebp,0xcd55cb70
  40813f:	sahf   
  408140:	or     DWORD PTR [esi+0x72720300],ecx
  408146:	jno    0x408140
  408148:	push   ebp
  408149:	jmp    0x872f0dc4
  40814e:	sahf   
  40814f:	aad    0xd1
  408151:	in     eax,dx
  408152:	sub    ebp,DWORD PTR [eax]
  408154:	push   ds
  408155:	pop    eax
  408156:	jnp    0x408185
  408158:	push   edx
  408159:	mov    cl,0x79
  40815b:	data16 je 0x408119
  40815e:	sbb    BYTE PTR [ebp*1+0x431c7414],dh
  408165:	out    dx,al
  408166:	ror    DWORD PTR [eax+0x199feed2],0x9a
  40816d:	adc    eax,0x79064b94
  408172:	pop    ebp
  408173:	popf   
  408174:	xchg   edi,eax
  408175:	pusha  
  408176:	and    al,0x66
  408178:	push   cs
  408179:	sar    DWORD PTR [edx+0x7076bfdf],1
  40817f:	call   0xc7f5c44b
  408184:	repnz dec ebx
  408186:	cmp    DWORD PTR [edx],edi
  408188:	push   ecx
  408189:	mov    ebx,0xc18eb39b
  40818e:	xor    DWORD PTR [ebx-0xc],ecx
  408191:	mov    edi,0x4ab2d43e
  408196:	int    0x70
  408198:	sbb    ah,BYTE PTR [ebx]
  40819a:	out    dx,al
  40819b:	mov    WORD PTR [esi+0x7f],?
  40819e:	inc    edx
  40819f:	(bad)  
  4081a0:	push   ss
  4081a1:	sbb    bl,bl
  4081a3:	inc    ebx
  4081a4:	js     0x4081cc
  4081a6:	cmp    dh,bh
  4081a8:	arpl   WORD PTR [esi+esi*2],di
  4081ab:	ins    DWORD PTR es:[edi],dx
  4081ac:	xchg   esi,eax
  4081ad:	adc    al,0x13
  4081af:	mov    esi,0xe041562c
  4081b4:	jbe    0x408196
  4081b6:	call   0x10bb2e4f
  4081bb:	push   ds
  4081bc:	aaa    
  4081bd:	les    edi,FWORD PTR [eax+0x6a]
  4081c0:	inc    esp
  4081c1:	fcmovne st,st(7)
  4081c3:	fs clc 
  4081c5:	stos   DWORD PTR es:[edi],eax
  4081c6:	enter  0x2d59,0x50
  4081ca:	stos   BYTE PTR es:[edi],al
  4081cb:	cdq    
  4081cc:	fs enter 0xba2d,0xd2
  4081d1:	aas    
  4081d2:	mov    ds:0xc7027f41,eax
  4081d7:	mov    ds:0xee016afd,al
  4081dc:	mov    al,ds:0xd79a7694
  4081e1:	sbb    DWORD PTR ds:0xf4eb6a76,esp
  4081e7:	clc    
  4081e8:	ins    BYTE PTR es:[edi],dx
  4081e9:	aad    0x8c
  4081eb:	cmp    ebp,0xffffffa4
  4081ee:	out    0x50,al
  4081f0:	pop    eax
  4081f1:	and    eax,0xce1285e0
  4081f6:	(bad)  
  4081f7:	or     BYTE PTR ds:0x64669241,al
  4081fd:	int3   
  4081fe:	xchg   BYTE PTR [ecx-0x228f48ab],cl
  408204:	clc    
  408205:	dec    esi
  408206:	test   eax,0x692cc3b4
  40820b:	repz sbb edx,esp
  40820e:	call   DWORD PTR [edi+eax*2+0x44]
  408212:	pop    edx
  408213:	sahf   
  408214:	out    dx,eax
  408215:	or     DWORD PTR [edx],esi
  408217:	xchg   ebx,eax
  408218:	fist   DWORD PTR ds:0x3c5c8783
  40821e:	mov    bh,0xb7
  408220:	stc    
  408221:	pop    ebp
  408222:	mov    al,BYTE PTR [ebx]
  408224:	or     BYTE PTR [ebx-0x1c79b95],al
  40822a:	sbb    al,0xf8
  40822c:	out    0x18,al
  40822e:	int    0x54
  408230:	mov    eax,0xac35af4c
  408235:	neg    BYTE PTR [edi-0x4950f77d]
  40823b:	div    BYTE PTR [esi]
  40823d:	xchg   edi,eax
  40823e:	nop
  40823f:	sub    al,0xa6
  408241:	scas   al,BYTE PTR es:[edi]
  408242:	mov    dl,0xd4
  408244:	in     al,0xd4
  408246:	mov    al,0x72
  408248:	push   edx
  408249:	sbb    BYTE PTR [esi+ebx*4+0x20059e12],dh
  408250:	xlat   BYTE PTR ds:[ebx]
  408251:	iret   
  408252:	mul    DWORD PTR [ecx-0x5d180d37]
  408258:	hlt    
  408259:	cmp    al,0x72
  40825b:	out    dx,eax
  40825c:	adc    al,0xd8
  40825e:	jg     0x40822f
  408260:	aad    0x79
  408262:	sub    DWORD PTR [eax+0x39],ebp
  408265:	aad    0x5b
  408267:	dec    edi
  408268:	add    al,0xb1
  40826a:	adc    BYTE PTR [ecx+0xfb15061],ah
  408270:	push   esi
  408271:	adc    al,0xd4
  408273:	repnz lahf 
  408275:	pop    es
  408276:	cld    
  408277:	fs jns 0x40828c
  40827a:	inc    esi
  40827b:	ret    0xfcff
  40827e:	loope  0x408205
  408280:	ror    al,1
  408282:	jge    0x4082b4
  408284:	fwait
  408285:	iret   
  408286:	xor    BYTE PTR [ebp-0x21ae2064],0xb1
  40828d:	pusha  
  40828e:	pop    ss
  40828f:	xchg   esi,eax
  408290:	fisub  WORD PTR [eax]
  408292:	mov    ecx,?
  408294:	and    esp,DWORD PTR [edx+0x5ace688e]
  40829a:	sub    DWORD PTR [ecx],edi
  40829c:	rol    DWORD PTR [esi],0xf7
  40829f:	or     eax,0xa5b32e25
  4082a4:	aas    
  4082a5:	shr    DWORD PTR [eax],0x8b
  4082a8:	ja     0x408295
  4082aa:	mov    al,0xf2
  4082ac:	scas   al,BYTE PTR es:[edi]
  4082ad:	sbb    esi,esi
  4082af:	icebp  
  4082b0:	jge    0x4082ed
  4082b2:	pop    eax
  4082b3:	inc    edi
  4082b4:	and    DWORD PTR [edx],0xf273d822
  4082ba:	add    bl,BYTE PTR [ecx+edx*2]
  4082bd:	fsubr  DWORD PTR [eax]
  4082bf:	sbb    ebp,DWORD PTR [eax]
  4082c1:	clc    
  4082c2:	sbb    DWORD PTR [eax+0x10690422],0x2bf873d4
  4082cc:	dec    esp
  4082cd:	clc    
  4082ce:	shl    DWORD PTR [esi-0x7a70b698],cl
  4082d4:	cld    
  4082d5:	and    DWORD PTR cs:[ebx-0x45],edi
  4082d9:	jp     0x408286
  4082db:	jge    0x40825f
  4082dd:	or     BYTE PTR [ecx-0x2865de4c],ah
  4082e3:	adc    DWORD PTR [esi+0x31421168],0x32326b29
  4082ed:	in     al,dx
  4082ee:	fmul   QWORD PTR [esi+0x82a8691]
  4082f4:	sti    
  4082f5:	outs   dx,BYTE PTR ds:[esi]
  4082f6:	cmp    al,0xf5
  4082f8:	xchg   ebx,eax
  4082f9:	xchg   DWORD PTR [edx],ebx
  4082fb:	dec    edi
  4082fc:	dec    esp
  4082fd:	xor    bh,BYTE PTR [eax+ebp*1-0x65]
  408301:	mov    ebp,0x4fce6757
  408306:	sub    al,0xb3
  408308:	rcl    BYTE PTR [eax+0x5b],0x45
  40830c:	sub    eax,0xc70386cc
  408311:	aam    0xf5
  408313:	sbb    al,0xcc
  408315:	cs jo  0x4082db
  408318:	test   BYTE PTR [esi-0xfee0a66],al
  40831e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40831f:	es sahf 
  408321:	sahf   
  408322:	lds    ecx,FWORD PTR gs:[ebp+0x39fd7971]
  408329:	mov    bh,0xdb
  40832b:	xor    al,0x87
  40832d:	pop    ds
  40832e:	jb     0x4082e0
  408330:	dec    ecx
  408331:	scas   eax,DWORD PTR es:[edi]
  408332:	inc    edx
  408333:	push   ecx
  408334:	dec    esi
  408335:	cli    
  408336:	mov    dl,0xa9
  408338:	ins    BYTE PTR es:[edi],dx
  408339:	(bad)
  40833c:	test   al,0x1d
  40833e:	inc    ebx
  40833f:	jo     0x4083aa
  408341:	gs jge 0x40830b
  408344:	sub    bh,BYTE PTR [esi-0x18]
  408347:	loope  0x40839f
  408349:	or     DWORD PTR [eax],eax
  40834b:	mov    DWORD PTR [eax],ebx
  40834d:	sbb    al,dh
  40834f:	xor    al,0xe
  408351:	mov    ah,0xd6
  408353:	inc    ebp
  408354:	xor    ecx,DWORD PTR [esi-0x2e]
  408357:	sbb    BYTE PTR [edx],0x4
  40835a:	lods   al,BYTE PTR ds:[esi]
  40835b:	dec    edi
  40835c:	xor    cl,ch
  40835e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40835f:	sub    bl,BYTE PTR [eax+0x6c]
  408362:	push   cs
  408363:	jne    0x4082fa
  408365:	add    al,dl
  408367:	xchg   esp,eax
  408368:	inc    edx
  408369:	mov    ebp,0x6e1a9950
  40836e:	mov    esi,0x5494560c
  408373:	lods   eax,DWORD PTR ds:[esi]
  408374:	sub    al,0x97
  408376:	out    dx,eax
  408377:	mov    ebx,0xe6400601
  40837c:	xor    BYTE PTR [edx],dh
  40837e:	mov    edx,0xa55f1753
  408383:	rcr    al,0x18
  408386:	call   0xd819c9a4
  40838b:	xor    eax,0xb9e9ef1f
  408390:	xchg   ecx,esp
  408392:	xchg   edx,eax
  408393:	adc    al,0x69
  408395:	test   BYTE PTR [ebx+ecx*8-0x6a],0x5d
  40839a:	mov    fs:0xba1b909d,al
  4083a0:	and    DWORD PTR [ecx-0x763d5aaf],0xdb2e4cfe
  4083aa:	or     dl,BYTE PTR [edi-0x113e358c]
  4083b0:	add    BYTE PTR [esi+0xa9303af],0x99
  4083b7:	lods   al,BYTE PTR ds:[esi]
  4083b8:	jbe    0x40842f
  4083ba:	dec    edi
  4083bb:	jbe    0x408389
  4083bd:	or     DWORD PTR [eax-0x4a],0xfffffff8
  4083c1:	inc    ebp
  4083c2:	(bad)  
  4083c3:	in     al,dx
  4083c4:	adc    edx,DWORD PTR [esi+0x7]
  4083c7:	push   0x1d
  4083c9:	inc    esp
  4083ca:	js     0x408435
  4083cc:	or     eax,0xc47a00d3
  4083d1:	(bad)  
  4083d2:	arpl   ax,bp
  4083d4:	inc    eax
  4083d5:	fucom  st(2)
  4083d7:	cmc    
  4083d8:	retf   
  4083d9:	lea    ebx,[esi-0x4f]
  4083dc:	arpl   WORD PTR [esi-0x379db896],dx
  4083e2:	ins    BYTE PTR es:[edi],dx
  4083e3:	das    
  4083e4:	mov    ch,0xdd
  4083e6:	pop    edx
  4083e7:	(bad)  
  4083e8:	mov    ds:0x81b45239,eax
  4083ed:	loop   0x40842a
  4083ef:	loope  0x40840c
  4083f1:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4083f3:	es pop edx
  4083f5:	call   0x3483:0xbbfe7af1
  4083fc:	in     eax,dx
  4083fd:	xchg   DWORD PTR [eax+esi*2],edx
  408400:	leave  
  408401:	mov    dh,0xbe
  408403:	gs (bad) 
  408406:	jno    0x4083bf
  408408:	push   cs
  408409:	adc    edi,DWORD PTR [ecx+ecx*1-0x2d]
  40840d:	imul   dh
  40840f:	fild   QWORD PTR [ebx+0x31]
  408412:	popa   
  408413:	xchg   ebx,eax
  408414:	add    BYTE PTR [edi-0x43],0xe8
  408418:	jae    0x4083a2
  40841a:	cdq    
  40841b:	mov    edi,0x65419c14
  408420:	dec    ecx
  408421:	loop   0x40843f
  408423:	in     eax,0x33
  408425:	lea    ecx,[esi+0x22]
  408428:	in     al,0x74
  40842a:	cli    
  40842b:	fnstenv [ebx+0x7d]
  40842e:	mov    cl,0xd1
  408430:	ss push edi
  408432:	cmc    
  408433:	push   0xffffffd2
  408435:	pop    edi
  408436:	jmp    0xd1f9ddce
  40843b:	les    esi,FWORD PTR [esi]
  40843d:	hlt    
  40843e:	inc    ecx
  40843f:	inc    ebp
  408440:	fcomp  QWORD PTR [edx-0x5f235404]
  408446:	sub    BYTE PTR [edi-0x804a1da],al
  40844c:	or     al,BYTE PTR [ebp+0x79]
  40844f:	add    ebx,esi
  408451:	and    bh,dl
  408453:	fwait
  408454:	(bad)  
  408455:	push   esp
  408456:	mov    ebp,DWORD PTR [esi]
  408458:	or     al,0xb9
  40845a:	jp     0x40843a
  40845c:	mov    al,0x5c
  40845e:	cmp    al,0x3e
  408460:	rcl    DWORD PTR [eax+0x4d],0xea
  408464:	imul   edx,ebp,0x49682ac1
  40846a:	frstor [ecx+0x65]
  40846d:	addr16 cmp edi,ebp
  408470:	loop   0x4083f6
  408472:	imul   ecx,ecx,0xb78d74e2
  408478:	jae    0x408423
  40847a:	dec    ecx
  40847b:	(bad)  [eax]
  40847d:	cmp    bl,BYTE PTR [ebp-0x7b79f1e1]
  408483:	dec    edx
  408484:	or     eax,0x8508a32e
  408489:	push   ebp
  40848a:	inc    ebp
  40848b:	int    0x7a
  40848d:	(bad)  
  40848e:	aam    0xe
  408490:	daa    
  408491:	push   ebp
  408492:	and    DWORD PTR [esi+0x1108ec84],0xfffffff4
  408499:	dec    ebp
  40849a:	mov    ecx,0xd8e668dd
  40849f:	adc    bl,bl
  4084a1:	fsub   QWORD PTR [eax-0x9]
  4084a4:	jbe    0x408477
  4084a6:	cmp    cl,BYTE PTR [esi+0x69f2b677]
  4084ac:	retf   0x9afc
  4084af:	xchg   esp,eax
  4084b0:	and    DWORD PTR [edx+0x44e03653],0xb91050b1
  4084ba:	push   es
  4084bb:	jg     0x40852e
  4084bd:	test   al,0x31
  4084bf:	fiadd  DWORD PTR [ebx]
  4084c1:	pop    eax
  4084c2:	push   es
  4084c3:	pop    ecx
  4084c4:	sbb    ecx,DWORD PTR [ebx+0x1a]
  4084c7:	into   
  4084c8:	je     0x4084c8
  4084ca:	lds    edi,FWORD PTR [esi-0x6a]
  4084cd:	or     ch,dh
  4084cf:	mov    ah,0x9c
  4084d1:	mov    WORD PTR [esi-0x3863f098],ds
  4084d7:	das    
  4084d8:	dec    ebx
  4084d9:	lock imul edi,DWORD PTR [ecx-0x25],0xffffffd3
  4084de:	or     DWORD PTR [edi+eax*4],eax
  4084e1:	leave  
  4084e2:	and    ah,BYTE PTR [edx+0x1167812f]
  4084e8:	mov    DWORD PTR [esi],0x141a6888
  4084ee:	sbb    dh,BYTE PTR [ebx-0x13b48590]
  4084f4:	cmc    
  4084f5:	or     bh,BYTE PTR [ebp+0x579aeb4b]
  4084fb:	jmp    0x408485
  4084fd:	add    al,0x1a
  4084ff:	mov    eax,DWORD PTR [ebp-0x40]
  408502:	mov    edx,DWORD PTR [ebp-0x28]
  408505:	xor    eax,esi
  408507:	xor    edx,esi
  408509:	add    eax,edi
  40850b:	add    edx,edi
  40850d:	imul   eax,edx
  408510:	add    eax,DWORD PTR [ebp-0xc]
  408513:	mov    DWORD PTR [ebp-0xc],eax
  408516:	mov    eax,DWORD PTR [ebp-0xc]
  408519:	mov    edx,DWORD PTR [ebp-0x18]
  40851c:	cmp    edx,eax
  40851e:	jb     0x406080
  408524:	mov    eax,DWORD PTR [ebp-0x28]
  408527:	mov    edx,DWORD PTR [ebp-0x18]
  40852a:	xor    eax,esi
  40852c:	add    eax,edi
  40852e:	imul   eax,edx
  408531:	mov    edx,DWORD PTR [ebp-0x1c]
  408534:	xor    edx,esi
  408536:	add    edx,edi
  408538:	or     eax,edx
  40853a:	mov    edx,DWORD PTR [ebp-0x20]
  40853d:	xor    edx,esi
  40853f:	add    eax,edx
  408541:	mov    edx,DWORD PTR [ebp-0x20]
  408544:	xor    edx,esi
  408546:	add    eax,edx
  408548:	mov    edx,DWORD PTR [ebp-0x10]
  40854b:	lea    eax,[eax+edx*1+0x64e5e6]
  408552:	jmp    0x408566
  408557:	mov    eax,DWORD PTR [ebp-0x20]
  40855a:	mov    edx,DWORD PTR [ebp-0x10]
  40855d:	xor    eax,esi
  40855f:	lea    eax,[eax+edx*1+0x3272f3]
  408566:	mov    DWORD PTR [ebp-0x10],eax
  408569:	jmp    0x403c1c
  40856e:	mov    ebx,DWORD PTR [ebp-0x3c]
  408571:	mov    eax,DWORD PTR [ebp+0xc]
  408574:	xor    eax,esi
  408576:	lea    ecx,[ecx+eax*1+0x3272f3]
  40857d:	lea    eax,[ecx-0x3272f3]
  408583:	xor    eax,esi
  408585:	cmp    eax,0xf89c95a1
  40858a:	jne    0x403bc0
  408590:	dec    DWORD PTR [ebp-0x34]
  408593:	jne    0x403bb4
  408599:	mov    eax,DWORD PTR [ebp+0x8]
  40859c:	mov    ecx,DWORD PTR [ebp+0xc]
  40859f:	mov    edx,DWORD PTR [ebp+0x8]
  4085a2:	xor    ecx,esi
  4085a4:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f3]
  4085ab:	xor    eax,esi
  4085ad:	mov    al,BYTE PTR [eax+ebx*1+0x3272f3]
  4085b4:	xor    edx,esi
  4085b6:	mov    BYTE PTR [edx+ebx*1+0x3272f3],cl
  4085bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4085c0:	xor    ecx,esi
  4085c2:	mov    BYTE PTR [ecx+ebx*1+0x3272f3],al
  4085c9:	mov    eax,DWORD PTR [ebp+0xc]
  4085cc:	xor    eax,esi
  4085ce:	add    eax,edi
  4085d0:	pop    edi
  4085d1:	pop    esi
  4085d2:	pop    ebx
  4085d3:	leave  
  4085d4:	ret    0x8
  4085d7:	xor    eax,eax
  4085d9:	and    DWORD PTR ds:0x4291db,0x42914b
  4085e3:	inc    eax
  4085e4:	ret    
  4085e5:	push   ebp
  4085e6:	mov    ebp,esp
  4085e8:	sub    esp,0x38
  4085eb:	and    DWORD PTR ds:0x429167,0x0
  4085f5:	mov    eax,ds:0x429167
  4085fa:	inc    eax
  4085fb:	mov    ds:0x429167,eax
  408600:	cmp    DWORD PTR ds:0x429167,0x23
  408607:	jle    0x408625
  40860d:	jmp    0x408618
  408612:	call   DWORD PTR ds:0x42a68b
  408618:	cmp    DWORD PTR ds:0x429167,0x1d
  40861f:	jb     0x4085f5
  408625:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40862c:	push   ebx
  40862d:	adc    DWORD PTR ds:0x4291ef,ecx
  408633:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40863a:	sub    DWORD PTR ds:0x429167,0x723d
  408644:	mov    eax,DWORD PTR [ebp-0x4]
  408647:	push   esi
  408648:	mov    esi,0x75108ac
  40864d:	adc    DWORD PTR ds:0x429153,0x4291d3
  408657:	xor    eax,esi
  408659:	push   edi
  40865a:	and    DWORD PTR ds:0x42915f,0x0
  408664:	jmp    0x408676
  408669:	mov    edi,DWORD PTR ds:0x42915f
  40866f:	inc    edi
  408670:	mov    DWORD PTR ds:0x42915f,edi
  408676:	cmp    DWORD PTR ds:0x42915f,0x18
  40867d:	jae    0x4086c6
  408683:	cmp    DWORD PTR ds:0x42915f,0xb
  40868a:	jg     0x4086c6
  408690:	jmp    0x4086a5
  408695:	push   0x4291bf
  40869a:	push   0x428022
  40869f:	call   DWORD PTR ds:0x42a68f
  4086a5:	cmp    DWORD PTR ds:0x42915f,0xa
  4086ac:	jne    0x4086c1
  4086b2:	xor    edi,edi
  4086b4:	or     edi,DWORD PTR ds:0x42915f
  4086ba:	inc    edi
  4086bb:	mov    DWORD PTR ds:0x42915f,edi
  4086c1:	jmp    0x408669
  4086c6:	mov    edi,0x3272f3
  4086cb:	or     DWORD PTR ds:0x429173,0x4291df
  4086d5:	add    eax,edi
  4086d7:	and    DWORD PTR ds:0x4291cb,0x4291b7
  4086e1:	mov    DWORD PTR [ebp-0x1c],eax
  4086e4:	mov    eax,DWORD PTR [ebp+0x14]
  4086e7:	add    DWORD PTR ds:0x42919b,0xffd
  4086f1:	test   eax,eax
  4086f3:	mov    DWORD PTR ds:0x4291c7,0x550e
  4086fd:	je     0x408761
  408703:	mov    DWORD PTR ds:0x4291c3,0x10
  40870d:	cmp    DWORD PTR ds:0x4291c3,0x0
  408714:	je     0x408749
  40871a:	cmp    DWORD PTR ds:0x4291c3,0x1a
  408721:	jle    0x408749
  408727:	jmp    0x408737
  40872c:	push   0x8b39
  408731:	call   DWORD PTR ds:0x42a693
  408737:	mov    ebx,DWORD PTR ds:0x4291c3
  40873d:	dec    ebx
  40873e:	mov    DWORD PTR ds:0x4291c3,ebx
  408744:	jmp    0x40870d
  408749:	mov    eax,DWORD PTR [ebp+0x14]
  40874c:	sbb    DWORD PTR ds:0x4291db,ebx
  408752:	mov    eax,DWORD PTR [eax]
  408754:	add    DWORD PTR ds:0x4291b3,0x4291cf
  40875e:	mov    DWORD PTR [ebp-0x1c],eax
  408761:	mov    eax,DWORD PTR [ebp-0x4]
  408764:	xor    eax,esi
  408766:	xor    DWORD PTR ds:0x429193,edi
  40876c:	add    eax,edi
  40876e:	and    ebx,DWORD PTR ds:0x42918b
  408774:	mov    DWORD PTR [ebp-0x8],eax
  408777:	mov    eax,DWORD PTR [ebp-0xc]
  40877a:	and    ebx,DWORD PTR ds:0x4291f3
  408780:	xor    eax,esi
  408782:	mov    ebx,DWORD PTR ds:0x429167
  408788:	and    ebx,DWORD PTR ds:0x4291b7
  40878e:	mov    DWORD PTR ds:0x429167,ebx
  408794:	add    eax,edi
  408796:	sbb    ebx,0x2c4d
  40879c:	mov    DWORD PTR [ebp-0x24],eax
  40879f:	mov    eax,DWORD PTR [ebp-0x4]
  4087a2:	xor    eax,esi
  4087a4:	mov    ebx,DWORD PTR ds:0x42919b
  4087aa:	or     ebx,DWORD PTR ds:0x429183
  4087b0:	mov    DWORD PTR ds:0x42919b,ebx
  4087b6:	add    eax,edi
  4087b8:	or     DWORD PTR ds:0x4291df,edx
  4087be:	mov    DWORD PTR [ebp-0x30],eax
  4087c1:	or     DWORD PTR ds:0x42914b,0x176b
  4087cb:	mov    ebx,DWORD PTR [ebp-0x4]
  4087ce:	xor    ebx,esi
  4087d0:	mov    eax,ds:0x429173
  4087d5:	xor    eax,DWORD PTR ds:0x42916f
  4087db:	mov    ds:0x429173,eax
  4087e0:	add    ebx,edi
  4087e2:	mov    eax,DWORD PTR [ebp-0x24]
  4087e5:	sub    eax,edi
  4087e7:	sbb    DWORD PTR ds:0x429157,0x4291c7
  4087f1:	lea    ecx,[ebx-0x3272f3]
  4087f7:	xor    eax,esi
  4087f9:	xor    DWORD PTR ds:0x4291bb,0x42917b
  408803:	xor    ecx,esi
  408805:	mov    DWORD PTR ds:0x429153,0x47e0
  40880f:	cmp    ecx,eax
  408811:	mov    DWORD PTR ds:0x429187,0x3279
  40881b:	je     0x40d27b
  408821:	xor    DWORD PTR ds:0x42915b,0x508b
  40882b:	mov    eax,DWORD PTR [ebp-0x4]
  40882e:	sub    DWORD PTR ds:0x42919b,0x58b3
  408838:	xor    eax,esi
  40883a:	adc    DWORD PTR ds:0x429173,0x4291f7
  408844:	add    eax,edi
  408846:	cmp    ebx,eax
  408848:	mov    DWORD PTR ds:0x42915f,0x75e2
  408852:	jne    0x40adc2
  408858:	push   DWORD PTR [ebp+0x8]
  40885b:	call   0x424151
  408860:	mov    DWORD PTR [ebp-0x14],eax
  408863:	not    eax
  408865:	mov    eax,DWORD PTR [ebp-0x4]
  408868:	adc    DWORD PTR ds:0x429153,0x66a3
  408872:	mov    ecx,DWORD PTR [ebp-0x14]
  408875:	add    DWORD PTR ds:0x4291af,0x7712
  40887f:	xor    eax,esi
  408881:	add    eax,edi
  408883:	mov    DWORD PTR ds:0x4291cb,0x7d26
  40888d:	cmp    ecx,eax
  40888f:	mov    DWORD PTR ds:0x42916f,0x6080
  408899:	je     0x40d2e6
  40889f:	push   DWORD PTR [ebp-0x14]
  4088a2:	sbb    DWORD PTR ds:0x4291c3,0x2326
  4088ac:	push   DWORD PTR [ebp+0x8]
  4088af:	call   0x424291
  4088b4:	mov    DWORD PTR [ebp-0x14],eax
  4088b7:	xor    DWORD PTR ds:0x42919f,edx
  4088bd:	mov    eax,DWORD PTR [ebp-0x4]
  4088c0:	xor    DWORD PTR ds:0x42918f,ecx
  4088c6:	mov    ecx,DWORD PTR [ebp-0x14]
  4088c9:	xor    eax,esi
  4088cb:	add    eax,edi
  4088cd:	mov    DWORD PTR ds:0x42917b,0x355b
  4088d7:	cmp    ecx,eax
  4088d9:	mov    DWORD PTR ds:0x429157,0x7399
  4088e3:	je     0x40d2e6
  4088e9:	mov    eax,DWORD PTR [ebp-0x14]
  4088ec:	mov    eax,DWORD PTR [eax+0x18]
  4088ef:	and    DWORD PTR ds:0x4291f3,0x0
  4088f9:	jmp    0x40890b
  4088fe:	mov    ecx,DWORD PTR ds:0x4291f3
  408904:	inc    ecx
  408905:	mov    DWORD PTR ds:0x4291f3,ecx
  40890b:	cmp    DWORD PTR ds:0x4291f3,0x1b
  408912:	jae    0x40895e
  408918:	cmp    DWORD PTR ds:0x4291f3,0xc
  40891f:	ja     0x40895e
  408925:	jmp    0x40893f
  40892a:	push   0x429197
  40892f:	push   0x429187
  408934:	push   0x5f54
  408939:	call   DWORD PTR ds:0x42a69b
  40893f:	cmp    DWORD PTR ds:0x4291f3,0xb
  408946:	jne    0x408959
  40894c:	mov    ecx,DWORD PTR ds:0x4291f3
  408952:	inc    ecx
  408953:	mov    DWORD PTR ds:0x4291f3,ecx
  408959:	jmp    0x4088fe
  40895e:	mov    DWORD PTR [ebp-0x24],eax
  408961:	xor    DWORD PTR ds:0x42916f,ebx
  408967:	mov    eax,DWORD PTR [ebp-0x14]
  40896a:	and    DWORD PTR ds:0x42916b,0x0
  408974:	jmp    0x408986
  408979:	mov    ecx,DWORD PTR ds:0x42916b
  40897f:	inc    ecx
  408980:	mov    DWORD PTR ds:0x42916b,ecx
  408986:	cmp    DWORD PTR ds:0x42916b,0x1c
  40898d:	jae    0x4089b3
  408993:	cmp    DWORD PTR ds:0x42916b,0x2a
  40899a:	jge    0x4089b3
  4089a0:	jmp    0x4089ae
  4089a5:	push   DWORD PTR [ebp-0x14]
  4089a8:	call   DWORD PTR ds:0x42a663
  4089ae:	jmp    0x408979
  4089b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4089b6:	add    ecx,DWORD PTR [eax+0x20]
  4089b9:	sbb    DWORD PTR ds:0x429183,0x7fc6
  4089c3:	mov    DWORD PTR [ebp-0x2c],ecx
  4089c6:	mov    eax,DWORD PTR [ebp-0x14]
  4089c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4089cc:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  4089d6:	add    ecx,DWORD PTR [eax+0x24]
  4089d9:	or     DWORD PTR ds:0x4291ef,0x4291f3
  4089e3:	mov    DWORD PTR [ebp-0x34],ecx
  4089e6:	jmp    0x40ad9a
  4089eb:	push   ecx
  4089ec:	mov    dl,BYTE PTR [ecx+esi*1]
  4089ef:	and    BYTE PTR [ecx+0x58598a50],0x67
  4089f6:	test   BYTE PTR [ecx],dl
  4089f8:	shr    DWORD PTR [ebx-0xf],1
  4089fb:	(bad)  
  4089fc:	adc    eax,0x5ce88383
  408a01:	add    DWORD PTR [ebx+0x1aed0fd3],0x2
  408a08:	push   esi
  408a09:	adc    ax,0xec99
  408a0d:	hlt    
  408a0e:	mov    ebp,0xd62474e8
  408a13:	or     esi,DWORD PTR [edx-0x580d40d6]
  408a19:	sti    
  408a1a:	sbb    BYTE PTR [ebx],dl
  408a1c:	jmp    0x408a97
  408a1e:	cmp    eax,0xc18d5b6b
  408a23:	mov    ds:0xed2b2764,eax
  408a28:	pop    ecx
  408a29:	rcl    ah,cl
  408a2b:	mov    edx,0x5050d65f
  408a30:	(bad)  
  408a31:	(bad)  
  408a33:	xchg   ebx,eax
  408a34:	out    dx,al
  408a35:	mov    al,ds:0xd0900a5a
  408a3a:	pusha  
  408a3b:	sub    eax,0x4229faac
  408a40:	dec    edx
  408a41:	pop    eax
  408a42:	pop    esp
  408a43:	and    ecx,DWORD PTR [ebx-0x47]
  408a46:	scas   al,BYTE PTR es:[edi]
  408a47:	cs pop esp
  408a49:	and    al,0x69
  408a4b:	stos   DWORD PTR es:[edi],eax
  408a4c:	dec    esi
  408a4d:	pop    eax
  408a4e:	mov    esi,DWORD PTR [ebp-0x42712d70]
  408a54:	inc    ecx
  408a55:	pop    ds
  408a56:	sbb    DWORD PTR [ebp-0x66ff626f],esp
  408a5c:	mov    ah,0xab
  408a5e:	dec    ebp
  408a5f:	mov    cs,ebp
  408a61:	push   ebp
  408a62:	mov    eax,0x8769ef7b
  408a67:	dec    esi
  408a68:	push   ss
  408a69:	mov    WORD PTR [edx],cs
  408a6b:	mov    ah,0xb0
  408a6d:	lea    esi,[ebp+eax*8-0x6b]
  408a71:	inc    esi
  408a72:	addr16 add al,0x3
  408a75:	mov    cl,BYTE PTR [ebp+eax*1-0x50c1ed3a]
  408a7c:	inc    ebx
  408a7d:	les    edx,FWORD PTR [ecx+0x5b4a0b5e]
  408a83:	push   ss
  408a84:	out    dx,eax
  408a85:	stc    
  408a86:	test   eax,0x8658484f
  408a8b:	mov    ds,WORD PTR [edi+eax*8]
  408a8e:	jae    0x408a9c
  408a90:	out    0x8e,al
  408a92:	sub    BYTE PTR ds:0xff46c5a,al
  408a98:	add    ebx,DWORD PTR [esi]
  408a9a:	popf   
  408a9b:	test   edi,edx
  408a9d:	add    ebp,ecx
  408a9f:	fwait
  408aa0:	out    0xb8,al
  408aa2:	sbb    ah,BYTE PTR [ecx+0x2b]
  408aa5:	dec    esp
  408aa6:	dec    ecx
  408aa7:	add    al,0x3a
  408aa9:	push   esi
  408aaa:	int3   
  408aab:	xchg   ebx,eax
  408aac:	shr    BYTE PTR [ecx+ebp*8+0x3d083a0d],0x4d
  408ab4:	cmp    esp,ebp
  408ab6:	xor    esi,edi
  408ab8:	(bad)  
  408ab9:	jmp    0x9468:0x20a8e50f
  408ac0:	push   eax
  408ac1:	adc    ebx,DWORD PTR [esi]
  408ac3:	mov    ebx,0x6701bb1a
  408ac8:	retf   
  408ac9:	out    dx,eax
  408aca:	xchg   DWORD PTR [ecx+0x6ad242c8],edx
  408ad0:	jmp    0x6782:0xb2c0d43b
  408ad7:	xchg   esp,eax
  408ad8:	sub    DWORD PTR [eax-0x7c4911db],ebx
  408ade:	adc    BYTE PTR [ebp+0x3d],0xb0
  408ae2:	loope  0x408b14
  408ae4:	and    bh,dh
  408ae6:	ror    DWORD PTR [edx],1
  408ae8:	mov    al,ds:0x9aa71e71
  408aed:	cs xchg ebx,eax
  408aef:	jnp    0x408b6c
  408af1:	mov    ah,0x17
  408af3:	into   
  408af4:	outs   dx,DWORD PTR ds:[esi]
  408af5:	data16 sbb al,0x80
  408af8:	fwait
  408af9:	xchg   ecx,eax
  408afa:	mov    eax,0xb8851eb3
  408aff:	test   eax,0xb29937bf
  408b04:	and    eax,0xf4beb641
  408b09:	pop    ds
  408b0a:	fcom   QWORD PTR [ebp-0x27]
  408b0d:	cmp    al,BYTE PTR [ebp+0x66]
  408b10:	or     al,0xba
  408b12:	test   al,0x9f
  408b14:	inc    esi
  408b15:	xchg   esp,eax
  408b16:	call   0xa2a7a17d
  408b1b:	lods   eax,DWORD PTR ds:[esi]
  408b1c:	or     BYTE PTR [esp+ecx*4+0x20],dh
  408b20:	mov    cl,0x2e
  408b22:	jbe    0x408b3a
  408b24:	sub    al,0x3f
  408b26:	arpl   WORD PTR [edi-0x40],cx
  408b29:	push   es
  408b2a:	leave  
  408b2b:	inc    edx
  408b2c:	inc    ebp
  408b2d:	(bad)  
  408b2e:	dec    ebp
  408b2f:	addr16 lock push edi
  408b32:	mov    esi,0x6fc2611c
  408b37:	jo     0x408b6c
  408b39:	out    0x5c,al
  408b3b:	in     al,0xa2
  408b3d:	push   edi
  408b3e:	jp     0x408b03
  408b40:	lods   al,BYTE PTR ds:[esi]
  408b41:	cmp    al,0xa1
  408b43:	or     ah,bh
  408b45:	sahf   
  408b46:	mov    cs,WORD PTR ds:0xb4471c8b
  408b4c:	xchg   ebp,eax
  408b4d:	(bad)  
  408b4e:	pushf  
  408b4f:	jns    0x408bc9
  408b51:	test   eax,0x2c34fc3b
  408b56:	(bad)  
  408b57:	cwde   
  408b58:	out    dx,al
  408b59:	fwait
  408b5a:	outs   dx,BYTE PTR ds:[esi]
  408b5b:	cmp    al,0x12
  408b5d:	bound  ebp,QWORD PTR [ebp+ebp*4-0x7]
  408b61:	pop    es
  408b62:	dec    esp
  408b63:	enter  0xe1db,0x4d
  408b67:	pusha  
  408b68:	xchg   esp,eax
  408b69:	aas    
  408b6a:	imul   edx,ecx,0x23
  408b6d:	ins    BYTE PTR es:[edi],dx
  408b6e:	bound  eax,QWORD PTR [esi-0x251f12d8]
  408b74:	shl    BYTE PTR [ebx],cl
  408b76:	mov    BYTE PTR [ecx+esi*1-0x49b1d803],ah
  408b7d:	sahf   
  408b7e:	mov    esp,DWORD PTR [esi+0x455f747d]
  408b84:	dec    DWORD PTR [eax-0x93b150b]
  408b8a:	inc    edi
  408b8b:	jecxz  0x408b56
  408b8d:	lahf   
  408b8e:	xor    BYTE PTR [ecx+0x2112f5e0],ah
  408b94:	sbb    bh,0x27
  408b97:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  408b99:	lds    edx,FWORD PTR [edi-0x21a56924]
  408b9f:	jno    0x408c1d
  408ba1:	repz xchg ebx,eax
  408ba3:	gs dec esi
  408ba5:	push   ebx
  408ba6:	fisttp DWORD PTR [edi+eiz*2]
  408ba9:	sbb    al,0xca
  408bab:	adc    dl,BYTE PTR [ebp-0x6bed9509]
  408bb1:	mov    esp,0xdd561021
  408bb6:	jns    0x408b93
  408bb8:	js     0x408b6a
  408bba:	jg     0x408b68
  408bbc:	jne    0x408b5a
  408bbe:	inc    ecx
  408bbf:	mov    ecx,0x290b3715
  408bc4:	std    
  408bc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bc6:	sub    bl,BYTE PTR [ebx-0x73f3fb44]
  408bcc:	mov    BYTE PTR [eax+0x6e],ah
  408bcf:	dec    esi
  408bd0:	mov    WORD PTR [edx+0x40],?
  408bd3:	(bad)  
  408bd4:	not    DWORD PTR [ebx-0xc]
  408bd7:	stos   BYTE PTR es:[edi],al
  408bd8:	jmp    0x6bda073c
  408bdd:	push   0x74
  408bdf:	mov    ds:0x605722ff,al
  408be4:	pusha  
  408be5:	jne    0x408bd6
  408be7:	ror    BYTE PTR [ecx+0x3ef1d710],1
  408bed:	bound  esi,QWORD PTR [ecx+0x4]
  408bf0:	out    dx,al
  408bf1:	sbb    eax,0xa16b8765
  408bf6:	and    al,0xa8
  408bf8:	aam    0xe1
  408bfa:	xlat   BYTE PTR ds:[ebx]
  408bfb:	dec    ecx
  408bfc:	xlat   BYTE PTR ds:[ebx]
  408bfd:	clc    
  408bfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bff:	div    BYTE PTR [edi-0x18]
  408c02:	scas   eax,DWORD PTR es:[edi]
  408c03:	out    dx,al
  408c04:	fwait
  408c05:	add    DWORD PTR [edx-0x5c40bb20],0x23750105
  408c0f:	dec    ecx
  408c10:	rol    DWORD PTR [ebx],1
  408c12:	jmp    0x408baf
  408c14:	xor    ch,BYTE PTR ds:0x403858f3
  408c1a:	lock jne 0x408c0c
  408c1d:	inc    edx
  408c1e:	in     eax,dx
  408c1f:	jg     0x408c55
  408c21:	mov    ebp,0x45f4b3a3
  408c26:	enter  0xcd60,0xe7
  408c2a:	pop    ebp
  408c2b:	aad    0xeb
  408c2d:	cmc    
  408c2e:	cmp    BYTE PTR [ebp+edx*2-0x5cc9e7e9],bh
  408c35:	fld    DWORD PTR [ebx-0x1f]
  408c38:	xlat   BYTE PTR ds:[ebx]
  408c39:	das    
  408c3a:	mov    BYTE PTR [ebx],ah
  408c3c:	out    dx,al
  408c3d:	and    al,0xc2
  408c3f:	add    eax,0xcd484a89
  408c44:	mov    dh,0x86
  408c46:	or     ch,BYTE PTR [ebx-0x59]
  408c49:	push   cs
  408c4a:	test   eax,0x4dd86ea2
  408c4f:	jb     0x408cc3
  408c51:	in     eax,dx
  408c52:	fadd   QWORD PTR [ecx+0x62670a75]
  408c58:	inc    esi
  408c59:	and    eax,0xc35ffda6
  408c5e:	inc    esp
  408c5f:	pop    ebx
  408c60:	jno    0x408bf7
  408c62:	push   ds
  408c63:	retf   0x7e9c
  408c66:	rcl    BYTE PTR es:[ebp+ebp*2-0x6a1afe95],0xd
  408c6f:	or     al,0xca
  408c71:	sub    esp,DWORD PTR [ebp-0x3731aa5e]
  408c77:	lods   eax,DWORD PTR ds:[esi]
  408c78:	sub    BYTE PTR [ecx+0x5e],0x82
  408c7c:	and    eax,0x98115dd3
  408c81:	retf   
  408c82:	rol    BYTE PTR [eax],0x80
  408c85:	jecxz  0x408c3c
  408c87:	xchg   DWORD PTR [edx],esi
  408c89:	pop    ebx
  408c8a:	retf   0x2ebd
  408c8d:	xor    ch,bl
  408c8f:	les    ecx,FWORD PTR [esi-0x6f]
  408c92:	popf   
  408c93:	leave  
  408c94:	fdivr  DWORD PTR [eax]
  408c96:	sbb    BYTE PTR [ebx+0x33],dl
  408c99:	call   0x45ad:0xd03dff6b
  408ca0:	mov    ds:0x47814f90,eax
  408ca5:	cmc    
  408ca6:	push   ss
  408ca7:	push   cs
  408ca8:	stos   BYTE PTR es:[edi],al
  408ca9:	add    ch,BYTE PTR [edx-0x62b7ac42]
  408caf:	pcmpeqb mm6,QWORD PTR [ebp+0x50211c98]
  408cb6:	xor    BYTE PTR [ebx-0x796ea23b],al
  408cbc:	mov    bl,0x49
  408cbe:	test   al,0x45
  408cc0:	mov    bl,0x36
  408cc2:	and    al,BYTE PTR ds:0xd3769129
  408cc8:	adc    BYTE PTR [ecx],0x1c
  408ccb:	jecxz  0x408c97
  408ccd:	mov    ecx,0xd0d3bbc6
  408cd2:	(bad)  
  408cd3:	bound  edx,QWORD PTR [edi+ecx*8]
  408cd6:	ja     0x408c88
  408cd8:	repz xor eax,edi
  408cdb:	(bad)  
  408cdc:	ficom  DWORD PTR [ebx-0x29fc57e9]
  408ce2:	iret   
  408ce3:	jp     0x408c9a
  408ce5:	gs push es
  408ce7:	mov    ecx,0x7b7f7a
  408cec:	pop    edx
  408ced:	dec    ecx
  408cee:	or     al,0x61
  408cf0:	fwait
  408cf1:	and    DWORD PTR [ebx-0x1],0x1f
  408cf5:	xor    bh,BYTE PTR [esi]
  408cf7:	cs jne 0x408d2a
  408cfa:	test   DWORD PTR [esi-0x4e],0x60b72347
  408d01:	xchg   BYTE PTR [eax+0x30],ah
  408d04:	push   es
  408d05:	cli    
  408d06:	cmp    BYTE PTR ds:0xa50e8412,bl
  408d0c:	dec    ecx
  408d0d:	xchg   edi,eax
  408d0e:	mov    edi,0xb7b7ac50
  408d13:	jo     0x408cc9
  408d15:	xchg   ecx,eax
  408d16:	icebp  
  408d17:	adc    ebp,DWORD PTR es:[esi]
  408d1a:	int    0x21
  408d1c:	cs dec esp
  408d1e:	push   esp
  408d1f:	rol    BYTE PTR [ebx],cl
  408d21:	jl     0x408cd9
  408d23:	jns    0x408d7c
  408d25:	adc    al,BYTE PTR [esi-0x33]
  408d28:	sub    DWORD PTR [edx],edi
  408d2a:	dec    edi
  408d2b:	mov    bh,0xfc
  408d2d:	repz sub ch,bl
  408d30:	inc    edi
  408d31:	push   ds
  408d32:	inc    eax
  408d33:	xor    esp,DWORD PTR [eax+0x2fc7c25c]
  408d39:	nop
  408d3a:	dec    esp
  408d3b:	sbb    dl,ah
  408d3d:	test   eax,0x1ba5192e
  408d42:	out    dx,eax
  408d43:	fwait
  408d44:	in     eax,0x88
  408d46:	mov    BYTE PTR [eax],ah
  408d48:	xchg   edi,eax
  408d49:	jecxz  0x408d76
  408d4b:	mov    ah,0xc4
  408d4d:	or     dh,dh
  408d4f:	outs   dx,BYTE PTR ds:[esi]
  408d50:	jmp    0x408dba
  408d52:	loop   0x408dce
  408d54:	sbb    al,BYTE PTR [eax]
  408d56:	push   ss
  408d57:	iret   
  408d58:	ss jmp 0xbe2c:0xa834566a
  408d60:	jnp    0x408db6
  408d62:	es cwde 
  408d64:	aad    0x4f
  408d66:	jge    0x408d27
  408d68:	ret    0x26b2
  408d6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d6c:	sbb    eax,0xba224ba9
  408d71:	cli    
  408d72:	mov    WORD PTR [edx-0x80],?
  408d75:	iret   
  408d76:	pusha  
  408d77:	adc    eax,0x7ee81d7f
  408d7c:	iret   
  408d7d:	mov    esp,0xba70f88
  408d82:	ficom  DWORD PTR [esi]
  408d84:	and    esp,eax
  408d86:	xlat   BYTE PTR ds:[ebx]
  408d87:	in     eax,dx
  408d88:	imul   BYTE PTR [edx+0x6226710e]
  408d8e:	push   ebp
  408d8f:	xchg   esp,eax
  408d90:	cmp    eax,0x95dc6d1b
  408d95:	scas   eax,DWORD PTR es:[edi]
  408d96:	and    DWORD PTR [ebp-0x4c],esp
  408d99:	sbb    esi,DWORD PTR [ebp-0x6788c0ee]
  408d9f:	add    al,0x59
  408da1:	mov    bh,0x9f
  408da3:	mov    esi,0x6d5bcdec
  408da8:	inc    edx
  408da9:	pop    ds
  408daa:	adc    al,0xa9
  408dac:	popf   
  408dad:	mov    al,0x1
  408daf:	sub    al,dl
  408db1:	pop    eax
  408db2:	mov    ebx,0x9108199b
  408db7:	inc    esi
  408db8:	nop
  408db9:	pop    esi
  408dba:	mov    eax,0x872f21ff
  408dbf:	sbb    BYTE PTR [ecx+edi*4+0x201f1aa2],dl
  408dc6:	repnz and al,bh
  408dc9:	jnp    0x408d82
  408dcb:	mov    WORD PTR [esi],es
  408dcd:	(bad)  
  408dce:	jbe    0x408df9
  408dd0:	pop    ss
  408dd1:	cdq    
  408dd2:	(bad)  
  408dd3:	enter  0x4a8a,0xe
  408dd7:	aaa    
  408dd8:	sbb    al,0xb
  408dda:	ret    0x71d4
  408ddd:	xor    eax,0x99345bd5
  408de2:	xchg   DWORD PTR [edi+edx*4-0x25],ecx
  408de6:	jp     0x408e5c
  408de8:	arpl   WORD PTR [esi-0x37],bx
  408deb:	(bad)  
  408dec:	out    dx,eax
  408ded:	xchg   edi,eax
  408dee:	int    0xb1
  408df0:	stos   BYTE PTR es:[edi],al
  408df1:	push   0x8698ac4f
  408df6:	xchg   ebp,eax
  408df7:	repz inc ebp
  408df9:	in     al,0x59
  408dfb:	adc    dh,bh
  408dfd:	add    al,0x7c
  408dff:	jmp    0x1bca2f7
  408e04:	mov    bl,bl
  408e06:	xchg   ebx,eax
  408e07:	test   DWORD PTR [ecx-0x79],edi
  408e0a:	cmp    eax,0x8870b087
  408e0f:	imul   edi,DWORD PTR [edx+0x71],0x24fc6198
  408e16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e17:	or     al,0x7c
  408e19:	aad    0xe6
  408e1b:	xchg   edi,eax
  408e1c:	cmp    DWORD PTR [ecx+edx*1+0x1a],0x5b82bb13
  408e24:	ins    DWORD PTR es:[edi],dx
  408e25:	repnz pop esp
  408e27:	xlat   BYTE PTR ds:[ebx]
  408e28:	shl    ch,1
  408e2a:	(bad)  
  408e2c:	dec    ecx
  408e2d:	jmp    0x78dd:0x62b9a7cf
  408e34:	sub    eax,0xec184490
  408e39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e3a:	sub    DWORD PTR [ebx+0x3710189d],ebp
  408e40:	xchg   edx,eax
  408e41:	icebp  
  408e42:	sahf   
  408e43:	pop    ecx
  408e44:	ins    BYTE PTR es:[edi],dx
  408e45:	inc    esp
  408e46:	mov    bh,0x4f
  408e48:	mov    edi,0xea31213e
  408e4d:	lods   eax,DWORD PTR ds:[esi]
  408e4e:	fwait
  408e4f:	pop    edx
  408e50:	push   0x19a7383a
  408e55:	inc    eax
  408e56:	push   ss
  408e57:	pop    ebx
  408e58:	fist   WORD PTR [edx-0x1c9df084]
  408e5e:	lahf   
  408e5f:	adc    eax,0x6c11bca
  408e64:	xchg   ebx,eax
  408e65:	(bad)  
  408e66:	(bad)  
  408e67:	xlat   BYTE PTR ds:[ebx]
  408e68:	xchg   esp,eax
  408e69:	jle    0x408ec0
  408e6b:	cwde   
  408e6c:	popa   
  408e6d:	push   0x5149c066
  408e72:	test   BYTE PTR ds:0x68bfd9c2,bl
  408e78:	xchg   edx,eax
  408e79:	fdivp  st(1),st
  408e7b:	fild   QWORD PTR [eax-0x41ac0411]
  408e81:	sbb    DWORD PTR [edi],0x15c2005b
  408e87:	xchg   dh,dl
  408e89:	push   edx
  408e8a:	xchg   ecx,eax
  408e8b:	mov    ds:0x853a74b8,eax
  408e90:	aad    0xf1
  408e92:	test   al,cl
  408e94:	cli    
  408e95:	cmp    dh,BYTE PTR [ebp+0x37]
  408e98:	and    al,0x43
  408e9a:	imul   edi,DWORD PTR [edi+0x56c04458],0xc9776ac4
  408ea4:	push   edi
  408ea5:	push   es
  408ea6:	mov    edi,0x9489bd9
  408eab:	fwait
  408eac:	push   ebp
  408ead:	loopne 0x408e71
  408eaf:	stos   DWORD PTR es:[edi],eax
  408eb0:	inc    ecx
  408eb1:	adc    eax,DWORD PTR cs:[eax+ebx*2]
  408eb5:	mov    dh,0xa0
  408eb7:	sub    esp,ebp
  408eb9:	cmp    al,bl
  408ebb:	loopne 0x408f14
  408ebd:	xlat   BYTE PTR ds:[ebx]
  408ebe:	xor    al,0x30
  408ec0:	pushf  
  408ec1:	xchg   esp,eax
  408ec2:	or     DWORD PTR [esi],0xb
  408ec5:	aaa    
  408ec6:	push   esp
  408ec7:	or     bl,al
  408ec9:	pusha  
  408eca:	test   BYTE PTR [edi+0x3a],bh
  408ecd:	xor    cl,BYTE PTR [ebp-0x41]
  408ed0:	jo     0x408eab
  408ed2:	inc    edx
  408ed3:	mov    esi,0xb2b2ee78
  408ed8:	push   0x37d77b73
  408edd:	pop    es
  408ede:	dec    esp
  408edf:	xor    BYTE PTR [edi+0x47050f20],bh
  408ee5:	daa    
  408ee6:	and    eax,0x42b92665
  408eeb:	sbb    al,0x6
  408eed:	mov    bh,al
  408eef:	in     eax,dx
  408ef0:	cwde   
  408ef1:	test   al,0x9a
  408ef3:	xchg   edi,edi
  408ef5:	in     eax,dx
  408ef6:	outs   dx,BYTE PTR ds:[esi]
  408ef7:	jnp    0x408f4a
  408ef9:	fsubr  st(4),st
  408efb:	shr    BYTE PTR [ecx-0x9],1
  408efe:	sub    al,0x32
  408f00:	push   eax
  408f01:	ret    0x24a5
  408f04:	sti    
  408f05:	sub    ch,cl
  408f07:	fbstp  TBYTE PTR [ebp-0x6d1262a8]
  408f0d:	xchg   ecx,eax
  408f0e:	dec    ebx
  408f0f:	xor    bl,BYTE PTR ds:0x8fb4a7c1
  408f15:	pop    eax
  408f16:	push   edi
  408f17:	and    eax,0x7704bae3
  408f1c:	out    0x22,al
  408f1e:	add    al,0xff
  408f20:	pop    ss
  408f21:	and    BYTE PTR [edi+0x792399f3],dh
  408f27:	sub    dl,BYTE PTR ds:0xa9f5a73e
  408f2d:	dec    ebp
  408f2e:	ret    0xdd66
  408f31:	jb     0x408f79
  408f33:	jmp    0xb183a484
  408f38:	push   eax
  408f39:	in     eax,0x42
  408f3b:	jl     0x408f87
  408f3d:	imul   eax,DWORD PTR [ebx+0x41],0x31
  408f41:	outs   dx,BYTE PTR ds:[esi]
  408f42:	push   ss
  408f43:	aaa    
  408f44:	push   ebp
  408f45:	ja     0x408f49
  408f47:	sub    al,0xea
  408f49:	add    edi,esi
  408f4b:	test   eax,0x3d690e13
  408f50:	xor    esp,ecx
  408f52:	cmp    DWORD PTR [ebx-0x60691283],edx
  408f58:	xor    dl,BYTE PTR [ecx-0x2f]
  408f5b:	fdiv   DWORD PTR [edi]
  408f5d:	je     0x408faf
  408f5f:	iret   
  408f60:	adc    esp,ebx
  408f62:	jmp    0xd0d81ebd
  408f67:	and    ch,BYTE PTR ds:0xf307e3a2
  408f6d:	clc    
  408f6e:	call   0x844a:0xdfeaf7f1
  408f75:	retf   
  408f76:	pop    eax
  408f77:	inc    esp
  408f78:	retf   
  408f79:	test   esi,esp
  408f7b:	retf   0xe9a0
  408f7e:	sahf   
  408f7f:	inc    eax
  408f80:	push   edi
  408f81:	add    ch,al
  408f83:	mov    eax,ds:0x870c8a75
  408f88:	pop    ebp
  408f89:	ja     0x408f9f
  408f8b:	pop    edx
  408f8c:	add    ebp,DWORD PTR ds:0x38d8aa67
  408f92:	mov    dl,0xe1
  408f94:	int3   
  408f95:	(bad)  
  408f96:	(bad)  
  408f98:	jecxz  0x408f23
  408f9a:	sub    al,0xf5
  408f9c:	aad    0x72
  408f9e:	fidivr WORD PTR [edx]
  408fa0:	sub    esi,esp
  408fa2:	int    0x63
  408fa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fa5:	add    al,BYTE PTR [edi+0xeb715ca]
  408fab:	jle    0x408f6b
  408fad:	out    dx,al
  408fae:	push   ebp
  408faf:	push   es
  408fb0:	loope  0x408f91
  408fb2:	jns    0x408ffd
  408fb4:	jecxz  0x409001
  408fb6:	add    edi,DWORD PTR [ebp-0x9]
  408fb9:	dec    ecx
  408fba:	xor    eax,0x10c4c7a2
  408fbf:	fsub   QWORD PTR [edi]
  408fc1:	scas   al,BYTE PTR es:[edi]
  408fc2:	sbb    DWORD PTR [eax+0x53],0x67bdbf41
  408fc9:	and    DWORD PTR [edx],edi
  408fcb:	xor    DWORD PTR [ecx-0x3187e4a6],esi
  408fd1:	fild   QWORD PTR [ecx*4+0x48c683bd]
  408fd8:	pop    es
  408fd9:	adc    eax,0x2199023b
  408fde:	into   
  408fdf:	out    0xc,eax
  408fe1:	xor    al,0x2
  408fe3:	or     al,0x9
  408fe5:	(bad)  
  408fe6:	jmp    0x97d7ee89
  408feb:	pop    edx
  408fec:	pop    es
  408fed:	mov    dh,0x28
  408fef:	jo     0x40905f
  408ff1:	and    DWORD PTR ds:0x4c661497,0x602d9bfe
  408ffb:	inc    ebp
  408ffc:	rol    DWORD PTR [edi-0x35b560ad],1
  409002:	mov    DWORD PTR [esi],edi
  409004:	cmp    edx,DWORD PTR [eax]
  409006:	xchg   DWORD PTR [ebp+eax*8-0x14],ebp
  40900a:	jcxz   0x408fe3
  40900d:	push   cs
  40900e:	es sub al,0xe9
  409011:	jmp    0xa53cbb21
  409016:	pop    es
  409017:	inc    esp
  409018:	int    0xed
  40901a:	pop    esi
  40901b:	add    ebx,esp
  40901d:	xor    BYTE PTR [ebx],bh
  40901f:	xchg   ecx,eax
  409020:	sub    eax,0x69458a29
  409025:	sbb    BYTE PTR [ecx-0x4b572fea],ch
  40902b:	call   0xcd6c:0x42063660
  409032:	cs ret 
  409034:	and    eax,0xab0a2328
  409039:	les    ecx,FWORD PTR [edi+0x1b054eca]
  40903f:	jmp    0xc6ed7f3
  409044:	sub    eax,0x70d3001
  409049:	mov    edi,0x35e6f90d
  40904e:	cmc    
  40904f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409050:	pop    eax
  409051:	mov    esi,0xde2d75b4
  409056:	xor    al,BYTE PTR [edx]
  409058:	(bad)  
  409059:	mov    cl,0x3a
  40905b:	sub    al,BYTE PTR [esp+ebx*8-0x3063c0cb]
  409062:	jmp    0x1bd64fb1
  409067:	mov    dh,0x3
  409069:	sbb    ebx,ebp
  40906b:	into   
  40906c:	cwde   
  40906d:	ins    BYTE PTR es:[edi],dx
  40906e:	ins    DWORD PTR es:[edi],dx
  40906f:	sub    dl,BYTE PTR [edx]
  409071:	and    DWORD PTR [ebx],ecx
  409073:	sahf   
  409074:	add    al,0x75
  409076:	xchg   DWORD PTR [edx+0x9],esi
  409079:	jo     0x409019
  40907b:	sbb    al,0xef
  40907d:	aad    0x1f
  40907f:	(bad)  
  409080:	jmp    0x4090e8
  409082:	fild   QWORD PTR [edx-0x60833164]
  409088:	push   esi
  409089:	retf   
  40908a:	xor    eax,0x4c5aeab2
  40908f:	jns    0x409092
  409091:	in     al,0x98
  409093:	or     BYTE PTR [eax+0x30],0x67
  409097:	rol    DWORD PTR [ebx+eax*4+0x21],1
  40909b:	mov    bh,ah
  40909d:	rol    al,1
  40909f:	cmp    al,0x7f
  4090a1:	push   0xffffffd3
  4090a3:	or     dl,al
  4090a5:	sbb    al,0x2
  4090a7:	sbb    BYTE PTR [ecx+0x66a22594],ah
  4090ad:	and    al,0xff
  4090af:	in     al,0xe9
  4090b1:	sbb    BYTE PTR [edx],ah
  4090b3:	test   DWORD PTR fs:[edx+eax*8-0x6d],eax
  4090b8:	mov    gs,WORD PTR [esp+esi*2]
  4090bb:	aad    0x2a
  4090bd:	jnp    0x40909c
  4090bf:	mov    cl,0x19
  4090c1:	cs js  0x40906c
  4090c4:	jg     0x40904e
  4090c6:	pop    ecx
  4090c7:	xchg   esp,eax
  4090c8:	mov    eax,0xae6799bc
  4090cd:	cmp    DWORD PTR [edx+eiz*4],ebx
  4090d0:	int    0x6
  4090d2:	add    edx,ebp
  4090d4:	popa   
  4090d5:	dec    ecx
  4090d6:	aaa    
  4090d7:	add    ch,ch
  4090d9:	jae    0x409117
  4090db:	ss sahf 
  4090dd:	fld    st(4)
  4090df:	push   0x1315ceee
  4090e4:	mov    es,WORD PTR [esi-0x2c]
  4090e7:	and    edx,DWORD PTR [eax]
  4090e9:	inc    esp
  4090ea:	jl     0x4090af
  4090ec:	or     eax,0x37269f5b
  4090f1:	push   eax
  4090f2:	push   ecx
  4090f3:	sahf   
  4090f4:	test   al,0x2e
  4090f6:	dec    ebp
  4090f7:	pop    edx
  4090f8:	adc    al,0x28
  4090fa:	dec    ebx
  4090fb:	push   ecx
  4090fc:	ja     0x40911d
  4090fe:	in     al,dx
  4090ff:	sbb    BYTE PTR [edx],al
  409101:	cld    
  409102:	dec    ebx
  409103:	adc    DWORD PTR [ebx+0x57],ebx
  409106:	int    0xc6
  409108:	and    al,0x76
  40910a:	mov    ch,0xfb
  40910c:	cmp    ecx,DWORD PTR [esi-0x64731fa2]
  409112:	add    al,0x50
  409114:	shl    DWORD PTR [edi+0xf],0x4b
  409118:	loopne 0x409128
  40911a:	pop    edx
  40911b:	test   BYTE PTR [esi+0x70],cl
  40911e:	push   edi
  40911f:	or     edx,ebp
  409121:	stos   DWORD PTR es:[edi],eax
  409122:	scas   al,BYTE PTR es:[edi]
  409123:	fnsave [ecx+ebp*2]
  409126:	pop    ecx
  409127:	cmp    al,0x40
  409129:	jo     0x4090cb
  40912b:	jmp    0xcd2f:0x8697a1df
  409132:	(bad)
  409135:	xchg   BYTE PTR [edx+ebx*2+0x630e3ec8],al
  40913c:	leave  
  40913d:	dec    edx
  40913e:	shr    DWORD PTR [eax],1
  409140:	mov    bl,0x98
  409142:	mov    bl,0xed
  409144:	push   esi
  409145:	test   DWORD PTR [ebp+0x480f3f23],edx
  40914b:	sti    
  40914c:	mov    eax,0xc57e9c9
  409151:	cwde   
  409152:	loop   0x409195
  409154:	xor    eax,DWORD PTR [eax-0x54]
  409157:	or     al,ah
  409159:	push   cs
  40915a:	or     al,0x92
  40915c:	bound  esp,QWORD PTR [eax-0x5b]
  40915f:	push   esi
  409160:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  409162:	fidivr DWORD PTR [ecx-0x138a3b2e]
  409168:	lock adc ah,BYTE PTR [edx+esi*2+0x6d5ff268]
  409170:	xchg   esi,eax
  409171:	bound  edx,QWORD PTR [edx-0x2c]
  409174:	stos   BYTE PTR es:[edi],al
  409175:	push   edi
  409176:	push   ds
  409177:	push   edx
  409178:	in     eax,0x6d
  40917a:	jmp    0x855dc4d2
  40917f:	es sub eax,edx
  409182:	imul   edx,ebp,0x53
  409185:	bound  edi,QWORD PTR [eax]
  409187:	xchg   ebp,eax
  409188:	sar    DWORD PTR cs:[ecx],cl
  40918b:	mov    edx,0x7ecf5e01
  409190:	ffreep st(2)
  409192:	fsub   QWORD PTR [esi+ebx*8-0x33]
  409196:	in     eax,0x8d
  409198:	(bad)  
  409199:	cdq    
  40919a:	mov    al,0x8d
  40919c:	jmp    0x409190
  40919e:	xchg   esi,eax
  40919f:	dec    esp
  4091a0:	sbb    esi,DWORD PTR [edx+ecx*2-0x3973a73]
  4091a7:	mov    edi,0xd137b721
  4091ac:	icebp  
  4091ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091ae:	push   ecx
  4091af:	test   eax,0x94459b4c
  4091b4:	cmp    bh,dh
  4091b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091b7:	out    0x3,eax
  4091b9:	rcr    BYTE PTR [edi+0x69],cl
  4091bc:	mov    bl,BYTE PTR [edx+0x6f1a2593]
  4091c2:	inc    eax
  4091c3:	cmp    bl,bl
  4091c5:	xchg   ecx,eax
  4091c6:	in     eax,dx
  4091c7:	mov    al,ds:0xa73a504e
  4091cd:	jbe    0x409199
  4091cf:	mov    esp,0x8e4864aa
  4091d4:	repnz test DWORD PTR [ebx-0x12],edx
  4091d8:	outs   dx,BYTE PTR ds:[esi]
  4091d9:	repz cmp al,0x7b
  4091dc:	ja     0x409192
  4091de:	gs xchg edi,eax
  4091e0:	shl    BYTE PTR [edx],0x2a
  4091e3:	inc    ebp
  4091e4:	mov    ebx,ebp
  4091e6:	xor    bl,dl
  4091e8:	in     al,0x62
  4091ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091eb:	(bad)  
  4091ed:	ins    DWORD PTR es:[edi],dx
  4091ee:	ret    
  4091ef:	pop    ds
  4091f0:	aam    0xcb
  4091f2:	fcmove st,st(1)
  4091f4:	pop    ecx
  4091f5:	sti    
  4091f6:	pop    esi
  4091f7:	dec    edx
  4091f8:	sahf   
  4091f9:	fstp   TBYTE PTR ds:0x1e63294f
  4091ff:	mov    cs,WORD PTR ds:0xb23244f5
  409205:	pop    ebx
  409206:	or     eax,DWORD PTR cs:[ebx+ebp*4]
  40920a:	fwait
  40920b:	inc    esi
  40920c:	out    0xc5,al
  40920e:	sbb    eax,0x35229961
  409213:	sbb    dh,dl
  409215:	cmp    edx,ecx
  409217:	dec    ebp
  409218:	pop    ss
  409219:	push   esp
  40921a:	pop    ebp
  40921b:	leave  
  40921c:	cmp    eax,DWORD PTR [ebx]
  40921e:	mov    bl,0x31
  409220:	inc    ebp
  409221:	mov    bl,0xdd
  409223:	push   eax
  409224:	pop    ebp
  409225:	add    ebx,ebx
  409227:	adc    eax,0xcc82ec5
  40922c:	sbb    esp,DWORD PTR [esp+ebp*8-0x1a]
  409230:	(bad)  
  409232:	lds    edx,FWORD PTR ds:[ebp-0x4e46d9e9]
  409239:	in     al,dx
  40923a:	js     0x409207
  40923c:	outs   dx,DWORD PTR ds:[esi]
  40923d:	loop   0x409213
  40923f:	js     0x40926e
  409241:	dec    ebx
  409242:	shr    ebp,1
  409244:	out    dx,al
  409245:	out    dx,al
  409246:	dec    edx
  409247:	ret    
  409248:	fstp   st(3)
  40924a:	inc    edx
  40924b:	stc    
  40924c:	int    0x6
  40924e:	jl     0x4092b6
  409250:	jg     0x40922a
  409252:	imul   edx,DWORD PTR [edi],0x11ca1dbc
  409258:	popf   
  409259:	sar    BYTE PTR [ebp-0x47b3ba2e],0x1d
  409260:	push   ebp
  409261:	lods   al,BYTE PTR ds:[esi]
  409262:	xor    edx,DWORD PTR [ebx+0x32]
  409265:	aas    
  409266:	lea    ebx,[ebp-0x71]
  409269:	sbb    ah,BYTE PTR [edx]
  40926b:	(bad)  ds:0xd29e2186
  409271:	fnstcw WORD PTR [ebx-0x57]
  409274:	mov    eax,0x3b9b9467
  409279:	mov    ds:0xe2d46233,eax
  40927e:	mov    bl,0xe
  409280:	sub    DWORD PTR [edx],0xb1978de8
  409286:	(bad)  
  409287:	div    BYTE PTR [eax+0x3d5a3cfd]
  40928d:	clc    
  40928e:	sbb    eax,0x55c2befb
  409293:	retf   
  409294:	jae    0x409300
  409296:	test   eax,0xd2f5d3b1
  40929b:	loop   0x4092b4
  40929d:	imul   eax,DWORD PTR [esp+edi*2+0x3a],0x67
  4092a2:	(bad)  
  4092a3:	stos   BYTE PTR es:[edi],al
  4092a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092a5:	mov    ebp,0xcc8184d8
  4092aa:	int3   
  4092ab:	xor    DWORD PTR [edi],esp
  4092ad:	cmp    ebx,esp
  4092af:	xlat   BYTE PTR ds:[ebx]
  4092b0:	fistp  WORD PTR [edx+esi*1-0x50ad5104]
  4092b7:	jae    0x4092bf
  4092b9:	push   ss
  4092ba:	jbe    0x40929b
  4092bc:	jl     0x4092fb
  4092be:	sub    eax,0x67a954dc
  4092c3:	inc    esi
  4092c4:	loop   0x409274
  4092c6:	dec    ecx
  4092c7:	push   ds
  4092c8:	pop    ecx
  4092c9:	loopne 0x4092ee
  4092cb:	cmp    DWORD PTR [eax+0x69],esi
  4092ce:	pushf  
  4092cf:	add    al,0xc
  4092d1:	test   eax,0x8b3151ff
  4092d6:	es inc ebp
  4092d8:	clc    
  4092d9:	call   0x62755fd4
  4092de:	das    
  4092df:	or     al,0xa9
  4092e1:	inc    esi
  4092e2:	dec    esp
  4092e3:	push   es
  4092e4:	and    BYTE PTR [edx-0x2941ac88],0x98
  4092eb:	mov    ecx,0xa2e11e44
  4092f0:	cmp    BYTE PTR [ecx],dl
  4092f2:	dec    edx
  4092f3:	adc    ch,bl
  4092f5:	push   ebp
  4092f6:	jge    0x4092a1
  4092f8:	dec    ecx
  4092f9:	stc    
  4092fa:	inc    edi
  4092fb:	pop    edi
  4092fc:	dec    edx
  4092fd:	mov    bh,0xb7
  4092ff:	sbb    DWORD PTR [ecx+0x401a0c0b],ebp
  409305:	imul   DWORD PTR [ebx+0x3394190c]
  40930b:	inc    eax
  40930c:	sar    dl,cl
  40930e:	cmp    ebx,DWORD PTR [ebx+edx*8-0x2a1426fb]
  409315:	out    0x4e,eax
  409317:	out    dx,eax
  409318:	cmp    DWORD PTR [ecx-0x3f],eax
  40931b:	(bad)  
  40931c:	div    esi
  40931e:	adc    esi,DWORD PTR [edi-0x2baff683]
  409324:	popa   
  409325:	xor    eax,DWORD PTR [ecx-0x19f3b7c9]
  40932b:	sar    edi,1
  40932d:	cmp    dh,BYTE PTR [ecx]
  40932f:	(bad)  
  409330:	gs lahf 
  409332:	cmp    eax,edx
  409334:	sbb    eax,0x6e023f0d
  409339:	icebp  
  40933a:	aaa    
  40933b:	ret    0xc01f
  40933e:	ret    0x415a
  409341:	mov    ah,0xb9
  409343:	mov    ch,0xf1
  409345:	pop    edi
  409346:	fst    QWORD PTR [edi+0x2e]
  409349:	sub    ecx,DWORD PTR [esi-0x6b5ee62]
  40934f:	rcr    BYTE PTR [ebx+0x3b],0x41
  409353:	adc    DWORD PTR [eax-0x61c74ef9],esp
  409359:	shl    BYTE PTR [edi+0x47],0x60
  40935d:	mov    ebp,0xbd63e982
  409362:	adc    al,0xb3
  409364:	call   0x3b25a978
  409369:	cmp    bl,BYTE PTR [ebx+0x5bf40aca]
  40936f:	call   0xf080:0xea3ebd4e
  409376:	jg     0x409328
  409378:	pop    ecx
  409379:	ficom  WORD PTR [eax]
  40937b:	xchg   ebx,eax
  40937c:	pushw  ss
  40937e:	dec    ebp
  40937f:	ficomp DWORD PTR ds:0xcafa9690
  409385:	mov    ecx,0xa5464744
  40938a:	adc    al,0x68
  40938c:	(bad)
  409390:	rcl    BYTE PTR [edx+0x5b],cl
  409393:	addr16 test eax,0x7c458e24
  409399:	add    al,0x77
  40939b:	jne    0x40938a
  40939d:	jb     0x40936a
  40939f:	fs stos BYTE PTR es:[edi],al
  4093a1:	scas   eax,DWORD PTR es:[edi]
  4093a2:	mov    bl,0x9f
  4093a4:	mov    ah,BYTE PTR [ebx]
  4093a6:	inc    esi
  4093a7:	and    BYTE PTR [edi],ah
  4093a9:	cld    
  4093aa:	push   eax
  4093ab:	int3   
  4093ac:	fcom   QWORD PTR [ebp-0x7ce7f79a]
  4093b2:	out    dx,eax
  4093b3:	xchg   edi,eax
  4093b4:	mov    eax,0xe9e890ff
  4093b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093ba:	jp     0x40940b
  4093bc:	dec    edx
  4093bd:	mov    edi,0xa2b50a15
  4093c2:	popa   
  4093c3:	ins    BYTE PTR es:[edi],dx
  4093c4:	es test al,0xb8
  4093c7:	xchg   edx,eax
  4093c8:	int    0x8a
  4093ca:	jmp    0x4093fb
  4093cc:	lods   al,BYTE PTR ds:[esi]
  4093cd:	dec    ecx
  4093ce:	jbe    0x409415
  4093d0:	ja     0x4093da
  4093d2:	push   edx
  4093d3:	mov    ah,0x98
  4093d5:	sub    DWORD PTR [ecx+0x2],edi
  4093d8:	push   ebp
  4093d9:	shr    DWORD PTR [eax+ebp*1],cl
  4093dc:	cmp    al,cl
  4093de:	push   es
  4093df:	add    DWORD PTR [ecx],esi
  4093e1:	mov    eax,ds:0x9835b69
  4093e6:	lods   al,BYTE PTR ds:[esi]
  4093e7:	inc    ecx
  4093e8:	ins    BYTE PTR es:[edi],dx
  4093e9:	loope  0x409469
  4093eb:	jne    0x409398
  4093ed:	call   0xbb61:0xfa4d496b
  4093f4:	loopne 0x4093a6
  4093f6:	xor    BYTE PTR [edi+0x102a4d59],dl
  4093fc:	sub    BYTE PTR [ebp-0x5d400e0b],dh
  409402:	adc    eax,0xfbc81eeb
  409407:	ror    DWORD PTR [ebx],1
  409409:	das    
  40940a:	or     al,0xe2
  40940c:	pop    ds
  40940d:	imul   ebp,esp,0xffffffad
  409410:	hlt    
  409411:	mov    bl,0xf2
  409413:	or     cl,ah
  409415:	cmova  ebp,edi
  409418:	aas    
  409419:	sbb    bl,BYTE PTR [ebp-0x37f1394f]
  40941f:	adc    dh,BYTE PTR [esi]
  409421:	(bad)  
  409422:	xchg   esp,eax
  409423:	push   0x10
  409425:	push   eax
  409426:	int    0x5
  409428:	mov    ds:0x255b84b4,al
  40942d:	out    0xfa,al
  40942f:	mov    edx,0xf3663c05
  409434:	and    esi,DWORD PTR [ebx-0x1f365635]
  40943a:	jno    0x4094b9
  40943c:	sahf   
  40943d:	push   0x99690625
  409442:	push   es
  409443:	or     bl,BYTE PTR [edx-0x7b]
  409446:	dec    ecx
  409447:	iret   
  409448:	push   esp
  409449:	sub    ah,BYTE PTR [ecx+edi*4-0x2d8a6ef8]
  409450:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409451:	add    eax,0x35eac721
  409456:	imul   eax,DWORD PTR [esi+0x7a],0x4
  40945a:	aam    0x77
  40945c:	push   0xfffffffb
  40945e:	and    esp,esi
  409460:	jne    0x4094d1
  409462:	push   edx
  409463:	mov    cl,0x7f
  409465:	xor    DWORD PTR [ebx-0x23],esp
  409468:	pop    ebx
  409469:	cwde   
  40946a:	jmp    0xbed76c75
  40946f:	xor    al,0xa0
  409471:	inc    esi
  409472:	add    eax,0x120ae1d
  409477:	adc    DWORD PTR [ebx+ecx*8+0x122da5e7],esp
  40947e:	mov    esi,0xaebc5006
  409483:	(bad)  
  409484:	mov    bl,0xc9
  409486:	adc    al,0x24
  409488:	fisubr DWORD PTR [ebp+ecx*1-0x52e2d397]
  40948f:	loop   0x409496
  409491:	into   
  409492:	cs mov ecx,0xc2615784
  409498:	mov    dl,0xcd
  40949a:	ins    DWORD PTR es:[edi],dx
  40949b:	popa   
  40949c:	(bad)  
  40949d:	pop    ds
  40949e:	jne    0x40945a
  4094a0:	inc    ecx
  4094a1:	inc    esp
  4094a2:	aaa    
  4094a3:	aad    0xa1
  4094a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094a6:	adc    DWORD PTR cs:[edx+0x72],0xc5c3e0fc
  4094ae:	into   
  4094af:	adc    BYTE PTR [esi+0x671245b8],bl
  4094b5:	dec    edx
  4094b6:	sbb    bl,BYTE PTR [edi+0x38]
  4094b9:	fsub   QWORD PTR [edi]
  4094bb:	add    DWORD PTR [eax+0x40],ebp
  4094be:	mov    dh,0xf4
  4094c0:	and    BYTE PTR [ebp+0x37],cl
  4094c3:	push   ebp
  4094c4:	pop    ebp
  4094c5:	dec    esp
  4094c6:	fimul  WORD PTR [ebp+esi*8-0x74257f32]
  4094cd:	call   0x90d7:0x1552321d
  4094d4:	neg    BYTE PTR [edi-0x17]
  4094d7:	in     al,0xd7
  4094d9:	dec    edi
  4094da:	arpl   WORD PTR [edi],cx
  4094dc:	mov    eax,0x3ba2e4e9
  4094e1:	ja     0x4094c5
  4094e3:	sub    al,0xcc
  4094e5:	inc    ebx
  4094e6:	push   es
  4094e7:	pop    eax
  4094e8:	mov    bl,0xc4
  4094ea:	xchg   esp,eax
  4094eb:	mov    ds:0xeeec0ec6,al
  4094f0:	and    eax,0xec0973ce
  4094f5:	daa    
  4094f6:	fcom   DWORD PTR [edx+ebx*2+0x14]
  4094fa:	and    esi,DWORD PTR [esi]
  4094fc:	(bad)  
  4094fd:	mov    ah,0xdf
  4094ff:	pop    ecx
  409500:	jbe    0x409542
  409502:	lods   al,BYTE PTR ds:[esi]
  409503:	out    dx,al
  409504:	in     eax,dx
  409505:	imul   eax,edi,0x3f
  409508:	in     al,dx
  409509:	mov    ds:0x91596240,eax
  40950e:	retf   0x89fd
  409511:	xor    ebx,eax
  409513:	pop    ss
  409514:	xlat   BYTE PTR ds:[ebx]
  409515:	sub    eax,0xb9c6e1b2
  40951a:	inc    edi
  40951b:	bswap  edx
  40951d:	xchg   ebx,eax
  40951e:	adc    eax,0xf113510
  409523:	xchg   DWORD PTR [ebp-0x4105c9d6],edi
  409529:	idiv   BYTE PTR [ecx+edi*8]
  40952c:	xchg   ecx,eax
  40952d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40952e:	out    0x60,al
  409530:	test   cl,ah
  409532:	popf   
  409533:	popf   
  409534:	sbb    cl,BYTE PTR [edi-0x7f]
  409537:	add    dh,BYTE PTR [edi-0x3873a43c]
  40953d:	stos   DWORD PTR es:[edi],eax
  40953e:	or     DWORD PTR [ecx+0x37e6fa51],ebp
  409544:	sbb    edi,edi
  409546:	mov    eax,0x95896fe0
  40954b:	xor    esi,DWORD PTR [eax-0x4c00b933]
  409551:	scas   al,BYTE PTR es:[edi]
  409552:	mov    WORD PTR [eax+0x5],gs
  409555:	and    BYTE PTR [ecx+edx*2-0x254aab13],al
  40955c:	add    ecx,DWORD PTR [eax+0x61]
  40955f:	mov    ah,0x79
  409561:	jbe    0x409555
  409563:	popf   
  409564:	aam    0x1c
  409566:	push   es
  409567:	mov    cl,0x8b
  409569:	mov    ah,0x8
  40956b:	mov    BYTE PTR [esi-0xb117e86],bl
  409571:	aad    0x78
  409573:	adc    eax,0x7db9909f
  409578:	dec    ebx
  409579:	out    dx,eax
  40957a:	xchg   ebx,eax
  40957b:	adc    BYTE PTR [edi-0x465a2317],ah
  409581:	stos   DWORD PTR es:[edi],eax
  409582:	pop    ebp
  409583:	add    ah,BYTE PTR [ebx-0x2b]
  409586:	or     DWORD PTR [esp+esi*1],ecx
  409589:	stos   BYTE PTR es:[edi],al
  40958a:	adc    ah,BYTE PTR [ebp-0x16]
  40958d:	inc    esi
  40958e:	sar    DWORD PTR [edx+ecx*2-0x7eb40b17],cl
  409595:	xor    DWORD PTR [esi+0x4c],esi
  409598:	addr16 sbb al,0x52
  40959b:	adc    BYTE PTR [esp+ecx*4],0x15
  40959f:	and    al,0x3b
  4095a1:	cmp    BYTE PTR [esp+edx*2-0x2030492a],al
  4095a8:	lock aas 
  4095aa:	and    esp,DWORD PTR [edx+0x47]
  4095ad:	lea    esp,[esi]
  4095af:	loope  0x4095a4
  4095b1:	dec    eax
  4095b2:	pop    esi
  4095b3:	mov    dl,0x93
  4095b5:	cmp    eax,0xabca407f
  4095ba:	pop    ss
  4095bb:	sub    dl,al
  4095bd:	int    0x1
  4095bf:	and    BYTE PTR [edi],bh
  4095c1:	xchg   ecx,eax
  4095c2:	or     DWORD PTR [edx+0x3a],eax
  4095c5:	loope  0x4095af
  4095c7:	or     bh,BYTE PTR [ebx+0x343c376d]
  4095cd:	(bad)  
  4095cf:	or     cl,BYTE PTR [edx]
  4095d1:	jo     0x4095a8
  4095d3:	sar    BYTE PTR [edx+0x61],1
  4095d6:	test   al,0x85
  4095d8:	fidiv  WORD PTR [ebp-0x33]
  4095db:	xor    eax,0x1dd97dcf
  4095e0:	inc    edx
  4095e1:	mov    ecx,0x9d245cb7
  4095e6:	cld    
  4095e7:	pop    ebp
  4095e8:	jmp    0x1a07:0x493ec11d
  4095ef:	sbb    DWORD PTR [edx-0x205f73d0],ebp
  4095f5:	and    DWORD PTR [edx],0x2ce47b96
  4095fb:	push   edi
  4095fc:	xor    DWORD PTR [edx],ecx
  4095fe:	xchg   ecx,eax
  4095ff:	pop    ds
  409600:	je     0x409645
  409602:	fadd   st,st(6)
  409604:	add    ebp,DWORD PTR [edx+edx*4+0x59]
  409608:	mov    esp,0x94c81291
  40960d:	jbe    0x4095ff
  40960f:	mov    dl,0x6f
  409611:	mov    ecx,0x519dcd60
  409616:	lock cli 
  409618:	xlat   BYTE PTR ds:[ebx]
  409619:	pop    ds
  40961a:	sbb    eax,0xd10a3fef
  40961f:	das    
  409620:	hlt    
  409621:	mov    al,0x62
  409623:	test   BYTE PTR [eax+0x54],ch
  409626:	xchg   ebx,eax
  409627:	in     al,0x45
  409629:	adc    bl,BYTE PTR [esi-0x78ae5e5f]
  40962f:	push   ss
  409630:	dec    ebx
  409631:	scas   al,BYTE PTR es:[edi]
  409632:	fsub   DWORD PTR [edx-0x3e]
  409635:	sub    eax,0x2ecb7797
  40963a:	mov    esi,0x894c22d0
  40963f:	loop   0x4096ad
  409641:	mov    ds:0x926f25c4,eax
  409646:	shr    DWORD PTR [ebx-0x7b25a27a],0x4c
  40964d:	je     0x4096cc
  40964f:	push   eax
  409650:	and    ebp,ecx
  409652:	xor    eax,0x2ebbcce4
  409657:	dec    esp
  409658:	jmp    0x3476:0x9ff55765
  40965f:	aas    
  409660:	dec    ecx
  409661:	ja     0x409658
  409663:	ret    0x8b67
  409666:	mov    esp,0x45915306
  40966b:	not    BYTE PTR [esi]
  40966d:	cld    
  40966e:	sahf   
  40966f:	mov    ebx,0xcbbbbf54
  409674:	inc    edx
  409675:	rol    BYTE PTR [edi],cl
  409677:	aad    0x32
  409679:	sub    edx,0xca8baedb
  40967f:	clc    
  409680:	aam    0xc7
  409682:	scas   al,BYTE PTR es:[edi]
  409683:	dec    eax
  409684:	das    
  409685:	mov    DWORD PTR [edx+0x49],esi
  409688:	mov    esp,ecx
  40968a:	clc    
  40968b:	or     BYTE PTR [ecx+0x303fa787],ah
  409691:	mov    BYTE PTR [esi-0x62d39c25],bh
  409697:	(bad)  
  409698:	out    0xa7,eax
  40969a:	out    dx,al
  40969b:	fbstp  TBYTE PTR [edx+0x68]
  40969e:	pushf  
  40969f:	pushw  ds
  4096a1:	div    DWORD PTR [eax+ebp*8-0x54]
  4096a5:	mov    edx,DWORD PTR [esi-0x66]
  4096a8:	pushf  
  4096a9:	sub    eax,0x8b0296c
  4096ae:	push   ebp
  4096af:	call   0x5935:0x938a54f7
  4096b6:	add    DWORD PTR [edi-0x2b],ebp
  4096b9:	loope  0x409709
  4096bb:	imul   edx,DWORD PTR [ecx-0x42b5a975],0x1c1c8c03
  4096c5:	clc    
  4096c6:	sbb    eax,0xf3f39b97
  4096cb:	(bad)  
  4096cc:	jns    0x409695
  4096ce:	ds inc ecx
  4096d0:	adc    al,0x5f
  4096d2:	shl    DWORD PTR [ebp-0x73],cl
  4096d5:	mov    BYTE PTR [esi],cl
  4096d7:	xor    DWORD PTR [ecx-0x40],ebx
  4096da:	aam    0x1a
  4096dc:	enter  0x8d68,0xd0
  4096e0:	push   0xffffffd3
  4096e2:	sar    DWORD PTR [edx+0x2a7c13eb],cl
  4096e8:	mov    esp,0xcf3b24bb
  4096ed:	mov    cs,esp
  4096ef:	(bad)  
  4096f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096f1:	or     dh,BYTE PTR [ebx+eiz*8-0x35]
  4096f5:	dec    ebp
  4096f6:	ja     0x409720
  4096f8:	pushf  
  4096f9:	repnz add eax,0x2280307a
  4096ff:	dec    edx
  409700:	mov    ebp,0x257cda5e
  409705:	mov    ch,0xc9
  409707:	bound  ebx,QWORD PTR [edi+0x54d7f19b]
  40970d:	loope  0x40969c
  40970f:	(bad)  
  409710:	xor    ah,ah
  409712:	xchg   edx,eax
  409713:	sti    
  409714:	mov    DWORD PTR [edx-0x66],0x59cfef2b
  40971b:	out    dx,eax
  40971c:	fstp   QWORD PTR [ecx-0x75]
  40971f:	push   ebp
  409720:	cli    
  409721:	pop    ss
  409722:	and    DWORD PTR [esi-0x3d],esp
  409725:	ins    DWORD PTR es:[edi],dx
  409726:	test   BYTE PTR [esi],ch
  409728:	inc    edi
  409729:	jmp    0x404c:0xa2066eea
  409730:	mov    eax,ds:0x2f86389c
  409735:	mov    ds:0xc63d79a9,eax
  40973b:	push   es
  40973c:	test   BYTE PTR [eax+0x7d],ah
  40973f:	jp     0x4097a4
  409741:	xchg   ecx,eax
  409742:	aam    0x9c
  409744:	stos   DWORD PTR es:[edi],eax
  409745:	ds inc ecx
  409747:	and    DWORD PTR [esi-0x3b],esi
  40974a:	cld    
  40974b:	bound  ecx,QWORD PTR [esi+0x2305bee]
  409751:	call   0xed9bb400
  409756:	clc    
  409757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409758:	xchg   esi,eax
  409759:	sub    eax,0x86c1f7fd
  40975e:	pop    es
  40975f:	mov    al,0x88
  409761:	js     0x409718
  409763:	fucomi st,st(0)
  409765:	inc    ecx
  409766:	xlat   BYTE PTR ds:[ebx]
  409767:	rcl    BYTE PTR [esi+0x258add8b],0x2c
  40976e:	popf   
  40976f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409770:	jnp    0x409796
  409772:	cwde   
  409773:	ins    BYTE PTR es:[edi],dx
  409774:	xchg   ebp,eax
  409775:	inc    eax
  409776:	in     al,0xc7
  409778:	bound  esp,QWORD PTR ds:0x49a3597c
  40977e:	inc    edx
  40977f:	add    dl,al
  409781:	push   0xc2287ed
  409786:	stc    
  409787:	jge    0x409791
  409789:	jmp    DWORD PTR [ebx-0x492987d9]
  40978f:	sub    al,BYTE PTR [ebp+0x7b]
  409792:	and    dl,BYTE PTR [edi-0x32a39fe8]
  409798:	mov    DWORD PTR [eax+ebp*4],0x83384b80
  40979f:	cmp    esp,DWORD PTR [edi+0x65]
  4097a2:	lock pop ss
  4097a4:	js     0x409790
  4097a6:	or     eax,0xf5fbec2
  4097ab:	dec    esi
  4097ac:	jae    0x4097d5
  4097ae:	ftst   
  4097b0:	test   BYTE PTR [esi+ebx*2],cl
  4097b3:	mov    ecx,0x419b14e1
  4097b8:	cmp    al,0x2f
  4097ba:	sahf   
  4097bb:	xor    DWORD PTR [edi],0x2c0901b2
  4097c1:	or     al,ah
  4097c3:	push   ebx
  4097c4:	icebp  
  4097c5:	mov    cl,0xfc
  4097c7:	aas    
  4097c8:	jmp    0xfdd45712
  4097cd:	in     al,dx
  4097ce:	pop    ecx
  4097cf:	rcr    ebx,cl
  4097d1:	fidivr WORD PTR [ebx+0x34256626]
  4097d7:	jmp    0x7e1d:0xf14bbc9
  4097de:	add    ecx,DWORD PTR [edx+0x3033a742]
  4097e4:	sbb    DWORD PTR [eax],ebp
  4097e6:	mov    WORD PTR ds:0xaaceba48,?
  4097ec:	add    BYTE PTR [eax+0x52],cl
  4097ef:	iret   
  4097f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097f1:	xchg   cl,cl
  4097f3:	mov    ss,WORD PTR [eax+0x78]
  4097f6:	xchg   ebx,eax
  4097f7:	test   al,0xf3
  4097fa:	ror    BYTE PTR [esi+ebx*4+0xe],cl
  4097fe:	cmc    
  4097ff:	lods   eax,DWORD PTR ds:[esi]
  409800:	test   DWORD PTR [edx-0x8],ebx
  409803:	popa   
  409804:	pop    edx
  409805:	fbld   TBYTE PTR [eax+0x5e]
  409808:	clc    
  409809:	lock mov BYTE PTR [esi-0x31],bh
  40980d:	enter  0x36d0,0x5
  409811:	(bad)  
  409813:	mov    al,ds:0x34ee0b1c
  409818:	in     al,0x8e
  40981a:	mov    BYTE PTR [ebp-0x8],0xa6
  40981e:	mov    edx,0xcdb172d8
  409823:	xor    eax,DWORD PTR [ebp+0x8]
  409826:	icebp  
  409827:	jb     0x40982c
  409829:	and    eax,0x60ab794e
  40982e:	fisubr DWORD PTR [ecx+0x47]
  409831:	stc    
  409832:	lock add eax,0xa4a4dbfd
  409838:	jg     0x409863
  40983a:	sbb    BYTE PTR [ebx],bl
  40983c:	sub    cl,BYTE PTR ds:0x1484ef7a
  409842:	(bad)  
  409843:	sbb    BYTE PTR [edx],ah
  409845:	xchg   ebx,eax
  409846:	add    eax,ebp
  409848:	sub    al,0xcb
  40984a:	mov    ebp,0xc92fbd78
  40984f:	iret   
  409850:	gs jecxz 0x40989e
  409853:	inc    ebx
  409854:	(bad)  
  409855:	fstp   QWORD PTR [ebx-0x76]
  409858:	shl    DWORD PTR [ecx],0x8c
  40985b:	mov    BYTE PTR [edx+0x4d],ah
  40985e:	out    dx,al
  40985f:	push   es
  409860:	stc    
  409861:	cwde   
  409862:	jg     0x4098c3
  409864:	mov    edx,0x1a612fdd
  409869:	scas   eax,DWORD PTR es:[edi]
  40986a:	add    BYTE PTR [ebx],dl
  40986c:	shl    DWORD PTR [ecx],0x7d
  40986f:	or     esp,DWORD PTR [edx-0x18700026]
  409875:	or     DWORD PTR [edi-0x40],esp
  409878:	cdq    
  409879:	sub    BYTE PTR [esp+ebp*4+0x4c],dl
  40987d:	into   
  40987e:	out    dx,eax
  40987f:	fisubr WORD PTR [ebx-0x7259c4fd]
  409885:	neg    BYTE PTR [esi+0x1b9c4780]
  40988b:	pop    ebp
  40988c:	or     al,0x4c
  40988e:	cvtpi2ps xmm2,QWORD PTR [esi]
  409891:	xor    bl,BYTE PTR [ecx]
  409893:	push   0xffffffdf
  409895:	xchg   esp,edx
  409897:	inc    ebp
  409898:	jmp    DWORD PTR [edi+0x26184d71]
  40989e:	test   DWORD PTR [ebx],esi
  4098a0:	jmp    0x40984f
  4098a2:	or     BYTE PTR [ecx+0x3c],dh
  4098a5:	js     0x4098fb
  4098a7:	popf   
  4098a8:	push   ss
  4098a9:	sub    edi,DWORD PTR [ebp+edi*1+0x54]
  4098ad:	lea    eax,[edx-0x52719d11]
  4098b3:	inc    edi
  4098b4:	(bad)  
  4098b5:	fwait
  4098b6:	mov    ebx,0x100ba5a6
  4098bb:	add    DWORD PTR [ebx],ebp
  4098bd:	sti    
  4098be:	mov    eax,0xa5b8970a
  4098c3:	mov    BYTE PTR [ecx],0x9f
  4098c6:	xor    al,0x16
  4098c8:	ficom  DWORD PTR [eax-0x56b9779b]
  4098ce:	lock fdiv QWORD PTR ds:0x427b126c
  4098d5:	test   BYTE PTR [esp+ebx*4],0x59
  4098d9:	inc    ebp
  4098da:	add    ch,BYTE PTR [ebx]
  4098dc:	ds mov eax,edi
  4098df:	sar    DWORD PTR [ecx+0x2f],1
  4098e2:	ja     0x409907
  4098e4:	adc    ah,BYTE PTR [edi]
  4098e6:	dec    edx
  4098e7:	dec    esp
  4098e8:	or     eax,eax
  4098ea:	dec    ebp
  4098eb:	outs   dx,DWORD PTR ds:[esi]
  4098ec:	jo     0x4098fa
  4098ee:	xor    ecx,esi
  4098f0:	int3   
  4098f1:	jo     0x409894
  4098f3:	cmp    ebp,DWORD PTR [ecx-0x2ea627fb]
  4098f9:	jmp    0x776d5320
  4098fe:	enter  0xe77d,0xbd
  409902:	adc    DWORD PTR [esi+0x67],edx
  409905:	out    dx,eax
  409906:	sti    
  409907:	cmc    
  409908:	xchg   BYTE PTR [esi],bh
  40990a:	sbb    eax,0x60c608ec
  40990f:	mov    ah,0xce
  409911:	gs jbe 0x409945
  409914:	inc    edi
  409915:	mov    cl,0x82
  409917:	push   ds
  409918:	jge    0x40992c
  40991a:	jne    0x409943
  40991c:	lea    edi,[eax+0x6b]
  40991f:	jo     0x4098fc
  409921:	adc    bl,dh
  409923:	sbb    ah,BYTE PTR [ecx-0x5e]
  409926:	push   ss
  409927:	cmp    al,0xfa
  409929:	in     al,dx
  40992a:	ficomp WORD PTR [edi-0x4be85f23]
  409930:	sbb    al,0x8f
  409932:	mov    dl,0x74
  409934:	add    eax,0x9e3bb022
  409939:	sub    al,0x73
  40993b:	push   esp
  40993c:	retf   0x87a2
  40993f:	xchg   ecx,eax
  409940:	jp     0x4098f3
  409942:	jb     0x4098e9
  409944:	push   ss
  409945:	pop    ss
  409946:	push   ebx
  409947:	cmp    ebp,DWORD PTR [eax]
  409949:	jmp    0xabdc:0xa3582c1d
  409950:	jl     0x409911
  409952:	pop    ds
  409953:	es loop 0x40991f
  409956:	push   ecx
  409957:	ja     0x4098ee
  409959:	adc    BYTE PTR [esi-0x238db0e0],al
  40995f:	out    dx,al
  409960:	stos   BYTE PTR es:[edi],al
  409961:	add    al,0x7e
  409963:	mov    bh,0xd
  409965:	sbb    DWORD PTR [eax+0x7168e93d],eax
  40996b:	cdq    
  40996c:	mov    eax,0xa7d7a6a3
  409971:	sbb    BYTE PTR [ebx-0x78],dl
  409974:	push   es
  409975:	jno    0x409929
  409977:	inc    edx
  409978:	cmp    eax,0x17b06669
  40997d:	xor    esp,DWORD PTR [edi]
  40997f:	imul   eax,eax,0x23
  409982:	inc    esp
  409983:	jmp    0x409993
  409985:	xor    edi,edi
  409987:	xchg   ebp,eax
  409988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409989:	fs loope 0x4099fb
  40998c:	scas   al,BYTE PTR es:[edi]
  40998d:	mov    ds:0x51c2a974,eax
  409992:	in     eax,dx
  409993:	push   ss
  409994:	jmp    0x40998c
  409996:	mov    ds:0x95b84edf,al
  40999b:	jne    0x4099d0
  40999d:	iret   
  40999e:	sub    al,0x1f
  4099a0:	inc    esp
  4099a1:	mov    bl,0x37
  4099a3:	pop    eax
  4099a4:	fnstenv [ebp+0x7c9fb0c1]
  4099aa:	xchg   ebx,eax
  4099ab:	pop    ebp
  4099ac:	jbe    0x40994c
  4099ae:	test   edx,ebx
  4099b0:	jno    0x4099ba
  4099b2:	mov    eax,0x8cb1039b
  4099b7:	add    ah,BYTE PTR [edi+0x75]
  4099ba:	repnz imul eax,DWORD PTR [edi+0x15],0x2eed4e5f
  4099c2:	sub    ebx,DWORD PTR ds:0xa5b56940
  4099c8:	sub    eax,0xfb6f6ea7
  4099cd:	cmp    eax,0x61c90886
  4099d2:	and    bh,BYTE PTR [edx]
  4099d4:	cmp    ecx,DWORD PTR [esi]
  4099d6:	jae    0x4099e4
  4099d8:	jmp    FWORD PTR [ebp-0x24]
  4099db:	dec    ebp
  4099dc:	stos   BYTE PTR es:[edi],al
  4099dd:	mov    gs,WORD PTR [ebx+esi*8]
  4099e0:	pop    eax
  4099e1:	inc    ebx
  4099e2:	xchg   dl,dl
  4099e4:	mov    BYTE PTR [edx+0x35924d4e],dl
  4099ea:	neg    BYTE PTR [eax+0x51]
  4099ed:	xor    edx,esp
  4099ef:	mov    esp,0xf1a98424
  4099f4:	jbe    0x409987
  4099f6:	or     eax,0xaea4e5a9
  4099fb:	outs   dx,BYTE PTR ds:[esi]
  4099fc:	gs inc edi
  4099fe:	in     al,0xd3
  409a00:	das    
  409a01:	inc    edi
  409a02:	test   ah,0xc
  409a05:	xor    edi,DWORD PTR [ebp-0x60]
  409a08:	jmp    0x4099d6
  409a0a:	mov    dh,0xca
  409a0c:	lock mov ebp,0x338c2ea9
  409a12:	jle    0x4099d1
  409a14:	fwait
  409a15:	popf   
  409a16:	pop    ebp
  409a17:	call   0xf05dfb0c
  409a1c:	mov    ds:0xbe826497,eax
  409a21:	jmp    0xf82c:0x4fbc681b
  409a28:	pop    ds
  409a29:	mov    ds:0x482d422c,al
  409a2e:	push   edx
  409a2f:	ins    BYTE PTR es:[edi],dx
  409a30:	or     eax,0x22122d0e
  409a35:	mov    ch,0xaf
  409a37:	daa    
  409a38:	nop
  409a39:	xchg   esi,eax
  409a3a:	xor    DWORD PTR [eax],edi
  409a3c:	and    al,0x4b
  409a3e:	pop    ss
  409a3f:	out    0x3d,eax
  409a41:	xor    DWORD PTR [edi],ebp
  409a43:	mov    esi,0x2611eacd
  409a48:	fmul   QWORD PTR [ebx-0x37]
  409a4b:	pop    DWORD PTR [ebx]
  409a4d:	jecxz  0x409a53
  409a4f:	push   0x2a
  409a51:	push   esi
  409a52:	add    DWORD PTR [eax-0x3032c0f5],0xc05ba68d
  409a5c:	mov    ecx,0xcfa5b258
  409a61:	mov    ecx,0xdecc6c49
  409a66:	xchg   esp,eax
  409a67:	mov    bl,BYTE PTR [eax-0x7460d692]
  409a6d:	jl     0x409ae7
  409a6f:	lea    esi,[ebx]
  409a71:	adc    al,0x45
  409a73:	loop   0x409ad5
  409a75:	ja     0x409a4a
  409a77:	cs jbe 0x409a11
  409a7a:	stos   BYTE PTR es:[edi],al
  409a7b:	rol    BYTE PTR [ebx-0x3ad3a2c8],1
  409a81:	lahf   
  409a82:	mov    WORD PTR [ecx+ebx*2+0x743ab9bd],es
  409a89:	lahf   
  409a8a:	retf   
  409a8b:	xlat   BYTE PTR ds:[ebx]
  409a8c:	fmul   DWORD PTR [eax]
  409a8e:	dec    ebp
  409a8f:	lods   eax,DWORD PTR ds:[esi]
  409a90:	push   cs
  409a91:	or     ah,al
  409a93:	xor    BYTE PTR [eax+ecx*1],bh
  409a96:	imul   ebp,DWORD PTR [ebx+esi*4+0x43abcd5b],0xe00e772
  409aa1:	push   0x4
  409aa3:	imul   eax,edi,0xffffff80
  409aa6:	inc    ecx
  409aa7:	(bad)  
  409aa9:	pop    esp
  409aaa:	and    edi,DWORD PTR [ebp+ebx*2-0x1b79bc49]
  409ab1:	test   BYTE PTR [edx-0x5e],0x9
  409ab5:	fdiv   QWORD PTR [edi]
  409ab7:	pushf  
  409ab8:	data16 fiadd WORD PTR [esi]
  409abb:	js     0x409ac4
  409abd:	es aas 
  409abf:	and    esi,DWORD PTR [esi]
  409ac1:	jae    0x409b34
  409ac3:	ins    BYTE PTR es:[edi],dx
  409ac4:	dec    esi
  409ac5:	sub    ah,dh
  409ac7:	jns    0x409aa2
  409ac9:	out    0xa1,al
  409acb:	pop    edx
  409acc:	push   ebp
  409acd:	sub    al,0x15
  409acf:	out    dx,eax
  409ad0:	push   ecx
  409ad1:	js     0x409a6a
  409ad3:	in     al,0x85
  409ad5:	mov    bh,0xc3
  409ad7:	xchg   ecx,eax
  409ad8:	daa    
  409ad9:	(bad)  
  409adb:	push   esp
  409adc:	xor    BYTE PTR [eax-0x5e672794],0x88
  409ae3:	mov    ?,esi
  409ae5:	ret    0x4268
  409ae8:	mov    bh,ah
  409aea:	xchg   ebp,eax
  409aeb:	push   ds
  409aec:	add    al,0xaa
  409aee:	jle    0x409b4f
  409af0:	sub    bh,BYTE PTR [esi-0x73a78be0]
  409af6:	or     ch,ah
  409af8:	mov    bl,BYTE PTR [ebp-0x1c]
  409afb:	jmp    0x409b25
  409afd:	xchg   esp,eax
  409afe:	sub    al,0xfb
  409b00:	hlt    
  409b01:	mov    cl,0x65
  409b03:	cmp    bl,BYTE PTR [esi]
  409b05:	jp     0x409afe
  409b07:	add    ch,BYTE PTR [eax]
  409b09:	lods   al,BYTE PTR ds:[esi]
  409b0a:	add    DWORD PTR ds:0x4ba04bfd,esp
  409b10:	cmp    eax,0x4ec9d7cb
  409b15:	lock sub BYTE PTR [ebp+0x3189a304],dh
  409b1c:	mov    ah,0xb6
  409b1e:	pushf  
  409b1f:	xlat   BYTE PTR ds:[ebx]
  409b20:	xor    ebp,esi
  409b22:	adc    esp,0x5f
  409b25:	call   DWORD PTR [edi+0x214a7030]
  409b2b:	dec    edx
  409b2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b2d:	add    DWORD PTR [ebx],0x927e165e
  409b33:	loopne 0x409bac
  409b35:	mov    al,0x82
  409b37:	mov    bh,0xfd
  409b39:	pop    eax
  409b3a:	je     0x409b1c
  409b3c:	push   0xffffff86
  409b3e:	mov    ah,0xfa
  409b40:	addr16 xchg ebp,eax
  409b42:	daa    
  409b43:	mov    ebp,0xc25cb079
  409b48:	sub    ebx,DWORD PTR [ebx+0xa]
  409b4b:	pop    edx
  409b4c:	imul   ebp,DWORD PTR [esi+edi*4],0x1
  409b50:	(bad)  
  409b51:	mov    dh,0x43
  409b53:	stos   BYTE PTR es:[edi],al
  409b54:	fsub   st,st(5)
  409b56:	dec    ebp
  409b57:	cwde   
  409b58:	js     0x409af5
  409b5a:	jns    0x409bdb
  409b5c:	and    dh,BYTE PTR [edx+0x6d6c7258]
  409b62:	xchg   edx,eax
  409b63:	inc    ebx
  409b64:	jmp    0xe0a01939
  409b69:	gs fs dec esp
  409b6c:	nop
  409b6d:	cwde   
  409b6e:	lahf   
  409b6f:	and    edi,ecx
  409b71:	ret    0xc7f2
  409b74:	add    dl,bh
  409b76:	cmp    DWORD PTR [edi+0x4b],ebx
  409b79:	mov    ebp,0xe23a8cd8
  409b7e:	inc    edx
  409b7f:	dec    esp
  409b80:	arpl   WORD PTR [esi+0x41fd16a2],dx
  409b86:	push   esp
  409b87:	jecxz  0x409b0b
  409b89:	and    ebx,ebp
  409b8b:	test   al,0xce
  409b8d:	les    eax,FWORD PTR [eax-0x20039cb1]
  409b93:	mov    dh,0x18
  409b95:	nop
  409b96:	aad    0xcb
  409b98:	cmc    
  409b99:	fcomp  DWORD PTR [ebp+0xa]
  409b9c:	add    eax,esp
  409b9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b9f:	aas    
  409ba0:	xchg   ebp,eax
  409ba1:	cmp    al,0xf6
  409ba3:	outs   dx,DWORD PTR ds:[esi]
  409ba4:	mov    WORD PTR ss:0x3d503b18,ss
  409bab:	(bad)  
  409bac:	nop
  409bad:	fdiv   st,st(3)
  409baf:	je     0x409b91
  409bb1:	daa    
  409bb2:	jecxz  0x409b49
  409bb4:	lods   eax,DWORD PTR ds:[esi]
  409bb5:	leave  
  409bb6:	enter  0xd0f,0xf1
  409bba:	add    al,0x2d
  409bbc:	pop    ebx
  409bbd:	arpl   WORD PTR [esi],di
  409bbf:	jns    0x409c2d
  409bc1:	imul   esp,eax,0x4e5ba747
  409bc7:	call   0xc10f:0x1cb7319
  409bce:	cmp    DWORD PTR [esi+0xec7b151],ecx
  409bd4:	aaa    
  409bd5:	rcl    BYTE PTR ds:0xc77c8ff0,1
  409bdb:	or     DWORD PTR gs:[ecx],esi
  409bde:	in     eax,dx
  409bdf:	cmp    eax,0x1148c209
  409be4:	pop    esi
  409be5:	shl    DWORD PTR [edx+ebx*8],cl
  409be8:	cmp    eax,0x8ec0b2ba
  409bed:	test   DWORD PTR [edi+0x44004434],esi
  409bf3:	dec    ebx
  409bf4:	cmp    cl,ah
  409bf6:	push   ss
  409bf7:	mov    ah,BYTE PTR [edx+0x50ada013]
  409bfd:	popf   
  409bfe:	dec    eax
  409bff:	push   eax
  409c00:	outs   dx,BYTE PTR ds:[esi]
  409c01:	pop    esp
  409c02:	mov    ds:0x11b975d5,eax
  409c07:	sbb    ecx,eax
  409c09:	sub    eax,0x5db07016
  409c0e:	mov    al,ds:0xfe7570f
  409c13:	mov    esi,edx
  409c15:	jnp    0x409c21
  409c17:	inc    ecx
  409c18:	sub    DWORD PTR [ecx-0x769ffc49],0x4c
  409c1f:	mov    WORD PTR [ebx+0x17],?
  409c22:	push   edx
  409c23:	xor    BYTE PTR [ebx-0x131149b7],ch
  409c29:	lock popa 
  409c2b:	mov    BYTE PTR [esi],al
  409c2d:	popa   
  409c2e:	jno    0x409c22
  409c30:	jns    0x409c6d
  409c32:	je     0x409c37
  409c34:	jnp    0x409c52
  409c36:	ja     0x409bdc
  409c38:	jo     0x409ca9
  409c3a:	(bad)  
  409c3b:	aad    0xee
  409c3d:	inc    edi
  409c3e:	scas   al,BYTE PTR es:[edi]
  409c3f:	mov    dl,dl
  409c41:	sub    dl,cl
  409c43:	nop
  409c44:	(bad)  
  409c46:	rol    edx,cl
  409c48:	adc    esp,edi
  409c4a:	xchg   ebx,eax
  409c4b:	arpl   cx,ax
  409c4d:	fxtract 
  409c4f:	mov    edi,0xf7c4c548
  409c54:	fs into 
  409c56:	fsubr  QWORD PTR [eax+0x46]
  409c59:	aad    0xe7
  409c5b:	out    0x18,eax
  409c5d:	and    edi,DWORD PTR [ecx]
  409c5f:	cmp    BYTE PTR [ecx-0x41ebf47c],0x30
  409c66:	or     DWORD PTR [esi-0x4a],ebx
  409c69:	push   cs
  409c6a:	xchg   edx,eax
  409c6b:	shl    edi,1
  409c6d:	fwait
  409c6e:	mov    bh,0x10
  409c70:	gs ret 0xf48a
  409c74:	repnz arpl cx,ax
  409c77:	popa   
  409c78:	test   BYTE PTR ds:0xdab8e60e,al
  409c7e:	sub    BYTE PTR [ebp+esi*4+0x19],cl
  409c82:	xchg   esi,eax
  409c83:	mov    ds:0x2a20954c,eax
  409c88:	js     0x409d07
  409c8a:	out    0xea,al
  409c8c:	sti    
  409c8d:	fwait
  409c8e:	mov    DWORD PTR [esi],edx
  409c90:	popf   
  409c91:	mov    ah,0x60
  409c93:	mov    esi,0x4539af73
  409c98:	rcr    cl,cl
  409c9a:	sub    ah,BYTE PTR [edx+0x4c]
  409c9d:	add    BYTE PTR [ecx-0x11861817],al
  409ca3:	cmp    ch,BYTE PTR [ebp+ebx*4+0x68]
  409ca7:	fisub  DWORD PTR [edi-0x5218194]
  409cad:	add    DWORD PTR [esi+ecx*1+0x6a],ebx
  409cb1:	fsub   DWORD PTR [ecx+0x6368c8e1]
  409cb7:	test   DWORD PTR [edx+0x3b8f2ea3],0x57772375
  409cc1:	pushf  
  409cc2:	enter  0x6da2,0xb3
  409cc6:	dec    edi
  409cc7:	xchg   ebp,eax
  409cc8:	mov    ch,0x38
  409cca:	test   WORD PTR [edi],si
  409ccd:	dec    ecx
  409cce:	cmp    al,0x46
  409cd0:	pop    ebp
  409cd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cd2:	scas   eax,DWORD PTR es:[edi]
  409cd3:	inc    edx
  409cd4:	dec    BYTE PTR [edx+edx*1+0x7eadf28f]
  409cdb:	xlat   BYTE PTR ds:[ebx]
  409cdc:	dec    ebp
  409cdd:	add    al,0x20
  409cdf:	out    dx,al
  409ce0:	and    dh,BYTE PTR [edx+0x20]
  409ce3:	mul    DWORD PTR [esp+ebx*8-0x29a51672]
  409cea:	jp     0x409d65
  409cec:	and    eax,0xd883c008
  409cf1:	pusha  
  409cf2:	pop    ebp
  409cf3:	and    ebp,ecx
  409cf5:	sub    eax,0x3588477a
  409cfa:	pop    edi
  409cfb:	sub    BYTE PTR [edx+0x1132340e],cl
  409d01:	mov    al,0xaf
  409d03:	call   0xfc4478bf
  409d08:	sub    esi,DWORD PTR [ebp-0xd]
  409d0b:	das    
  409d0c:	call   0x879e:0xaf7c674a
  409d13:	push   edi
  409d14:	dec    edx
  409d15:	push   0x760c62c0
  409d1a:	or     DWORD PTR [ebx+eiz*8-0x74],ebp
  409d1e:	sub    eax,0x71299e91
  409d23:	ret    
  409d24:	adc    ah,cl
  409d26:	add    ebp,eax
  409d28:	shr    DWORD PTR ds:[esi],0x3b
  409d2c:	shr    BYTE PTR [edi],cl
  409d2e:	jns    0x409cf1
  409d30:	and    DWORD PTR ds:0x5f2f92c5,esi
  409d36:	jns    0x409cea
  409d38:	pop    esp
  409d39:	mov    ds:0xba41b6c6,eax
  409d3e:	pop    ebp
  409d3f:	fld    DWORD PTR ds:0xcd30b5cf
  409d45:	imul   eax,DWORD PTR [eax],0x1673bfbf
  409d4b:	mov    bh,0xa5
  409d4d:	mov    ds:0x7d5fcc90,al
  409d52:	cmp    BYTE PTR [ecx+0x38a51b10],ch
  409d58:	fdiv   QWORD PTR [ebp-0x6e]
  409d5b:	loope  0x409d02
  409d5d:	fwait
  409d5e:	cld    
  409d5f:	in     eax,0x5c
  409d61:	std    
  409d62:	test   BYTE PTR [eax-0x1c],al
  409d65:	add    BYTE PTR [edx+0x4bc7dbd],bl
  409d6b:	test   BYTE PTR [esi-0x394123ae],bl
  409d71:	add    BYTE PTR [edi+0x159b73e0],dl
  409d77:	ins    DWORD PTR es:[edi],dx
  409d78:	cs jnp 0x409d4a
  409d7b:	inc    esi
  409d7c:	xor    edi,DWORD PTR [eax+edx*4-0x71]
  409d80:	push   ebp
  409d81:	jecxz  0x409d03
  409d83:	fwait
  409d84:	add    eax,0x1f433d91
  409d89:	jo     0x409d52
  409d8b:	dec    esi
  409d8c:	jae    0x409db2
  409d8e:	imul   esi,DWORD PTR [edx+edx*4+0x77138fe9],0x3792d953
  409d99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d9a:	ror    DWORD PTR [esi+eax*2],0xf7
  409d9e:	nop
  409d9f:	mov    bl,0xe9
  409da1:	aaa    
  409da2:	addr16 sar ch,0xa2
  409da6:	mov    ch,0x56
  409da8:	xor    DWORD PTR [ecx],edi
  409daa:	shl    DWORD PTR [esp+ebx*1+0x5626635b],0x6d
  409db2:	fs out dx,al
  409db4:	jmp    0xdab6:0x666cf4cf
  409dbb:	loopne 0x409d96
  409dbd:	push   edx
  409dbe:	push   ss
  409dbf:	lods   al,BYTE PTR ds:[esi]
  409dc0:	ds dec edi
  409dc2:	adc    al,0x3
  409dc4:	cs sub al,0xec
  409dc7:	(bad)  
  409dc9:	cmc    
  409dca:	xchg   BYTE PTR [edi+0x41],al
  409dcd:	mov    gs,WORD PTR [edx+eax*1-0x7031b6b3]
  409dd4:	push   cs
  409dd5:	out    dx,eax
  409dd6:	call   0x201e5ad0
  409ddb:	fs sub edi,edx
  409dde:	bound  ebp,QWORD PTR [edx-0x6ce2195b]
  409de4:	repnz test eax,0xd9ffd1b6
  409dea:	div    edx
  409dec:	dec    esi
  409ded:	adc    eax,DWORD PTR [ebx+0x56]
  409df0:	fistp  WORD PTR [ecx-0x58e9a7ee]
  409df6:	int    0x22
  409df8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409df9:	xlat   BYTE PTR ds:[ebx]
  409dfa:	sar    BYTE PTR [ecx+esi*2-0x3a72c2f8],1
  409e01:	rol    DWORD PTR [esp+ebx*1-0xe],1
  409e05:	stos   DWORD PTR es:[edi],eax
  409e06:	bound  edx,QWORD PTR [ecx-0x1cf2f120]
  409e0c:	fistp  DWORD PTR [edx]
  409e0e:	pop    esp
  409e0f:	cld    
  409e10:	adc    ah,ah
  409e12:	mov    edx,0x7d0267d1
  409e17:	jge    0x409e74
  409e19:	div    ebx
  409e1b:	lods   eax,DWORD PTR ds:[esi]
  409e1c:	pop    esi
  409e1d:	sub    al,0x78
  409e1f:	scas   al,BYTE PTR es:[edi]
  409e20:	jmp    0xfcd4:0x6e328fb3
  409e27:	add    DWORD PTR [ebx-0x1c969b8d],ebx
  409e2d:	and    DWORD PTR [ecx],0xb
  409e30:	push   ecx
  409e31:	mov    ch,0x44
  409e33:	fwait
  409e34:	shr    edi,1
  409e36:	outs   dx,BYTE PTR ds:[esi]
  409e37:	test   al,0xb8
  409e39:	stos   BYTE PTR es:[edi],al
  409e3a:	xchg   ecx,eax
  409e3b:	out    0xbd,eax
  409e3d:	ror    DWORD PTR [eax],cl
  409e3f:	mul    DWORD PTR [ebx+0x32]
  409e42:	adc    bl,0x62
  409e45:	inc    eax
  409e46:	pop    ds
  409e47:	xchg   esp,eax
  409e48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e49:	xor    al,0x9f
  409e4b:	mov    WORD PTR [eax+0x4d],ss
  409e4e:	mov    bl,bh
  409e50:	repz cmp DWORD PTR [esi],edi
  409e53:	nop
  409e54:	fst    QWORD PTR [ecx+0x65efdb4f]
  409e5a:	cld    
  409e5b:	(bad)  
  409e5c:	(bad)  
  409e5d:	ror    BYTE PTR [ebx-0x7f],0x1
  409e61:	outs   dx,BYTE PTR ds:[esi]
  409e62:	mov    dh,0xfc
  409e64:	leave  
  409e65:	fs in  eax,dx
  409e67:	outs   dx,DWORD PTR ds:[esi]
  409e68:	fisubr DWORD PTR [edi-0x494ae0f3]
  409e6e:	adc    DWORD PTR [edi-0x37f18994],0x11ecf909
  409e78:	and    DWORD PTR [ebx-0x15],edx
  409e7b:	jae    0x409e5e
  409e7d:	sti    
  409e7e:	adc    dl,bl
  409e80:	inc    ebx
  409e81:	mov    esi,DWORD PTR [ebx+0x34]
  409e84:	cwde   
  409e85:	mov    edx,0xbec3b0cb
  409e8a:	push   0xffffffdf
  409e8c:	mov    dh,BYTE PTR [ebp-0x1f]
  409e8f:	xchg   BYTE PTR [ebx-0x270670b7],bh
  409e95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e96:	ret    0xbe3b
  409e99:	hlt    
  409e9a:	scas   eax,DWORD PTR es:[edi]
  409e9b:	bound  ebp,QWORD PTR [ebp-0x34]
  409e9e:	lahf   
  409e9f:	sbb    DWORD PTR [eax+ecx*1],0x4c
  409ea3:	jmp    0x409f07
  409ea5:	repz xchg esi,eax
  409ea7:	in     eax,dx
  409ea8:	hlt    
  409ea9:	push   ds
  409eaa:	mov    dh,0x22
  409eac:	fdivr  QWORD PTR [edi+0x5ae72231]
  409eb2:	int    0xa9
  409eb4:	pop    ds
  409eb5:	cmp    ch,0xe
  409eb8:	pushf  
  409eb9:	adc    ebp,DWORD PTR [edx+0x9]
  409ebc:	push   esi
  409ebd:	xchg   ebx,eax
  409ebe:	ins    DWORD PTR es:[edi],dx
  409ebf:	jne    0x409ea0
  409ec1:	pop    es
  409ec2:	xchg   ebx,eax
  409ec3:	(bad)  [ebp+0x42447339]
  409ec9:	sbb    ah,al
  409ecb:	mov    dh,0x1f
  409ecd:	mov    edx,0x8ffb4d31
  409ed2:	lods   al,BYTE PTR ds:[esi]
  409ed3:	mov    esi,0x73e00321
  409ed8:	inc    edx
  409ed9:	sbb    BYTE PTR [ebp-0x1fc7056e],0x49
  409ee0:	dec    dx
  409ee2:	or     bh,BYTE PTR [esi]
  409ee4:	sbb    ebx,eax
  409ee6:	not    DWORD PTR [edi-0x648d3508]
  409eec:	dec    eax
  409eed:	inc    esi
  409eee:	mov    dl,BYTE PTR [ebx]
  409ef0:	mov    ch,0x5b
  409ef2:	ins    BYTE PTR es:[edi],dx
  409ef3:	imul   BYTE PTR [edx-0x7f]
  409ef6:	ds das 
  409ef8:	push   ecx
  409ef9:	out    0x1d,al
  409efb:	inc    edi
  409efc:	aam    0x7e
  409efe:	daa    
  409eff:	jns    0x409edb
  409f01:	test   ah,al
  409f03:	xchg   ebp,eax
  409f04:	leave  
  409f05:	int    0x46
  409f07:	fcom   DWORD PTR [ecx+eax*8]
  409f0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f0b:	jne    0x409f28
  409f0d:	mov    edx,0xf295cb89
  409f12:	jle    0x409ea5
  409f14:	loopne 0x409f89
  409f16:	xchg   edx,eax
  409f17:	pop    ss
  409f18:	imul   ecx,esi,0xfffffff6
  409f1b:	jb     0x409eef
  409f1d:	inc    ebp
  409f1e:	xchg   edi,eax
  409f1f:	outs   dx,DWORD PTR ds:[esi]
  409f20:	test   ah,bl
  409f22:	pop    ebp
  409f23:	push   0x1d
  409f25:	mov    dl,0xaa
  409f27:	and    eax,0xae7bb6f1
  409f2c:	aaa    
  409f2d:	xor    eax,0x9a4e0ade
  409f32:	and    eax,0x5511af21
  409f37:	jmp    0xfcc:0x3e1741bb
  409f3e:	or     ebp,DWORD PTR [edi+0x3a]
  409f41:	jnp    0x409f5d
  409f43:	jge    0x409ec7
  409f45:	xor    bh,BYTE PTR [ecx]
  409f47:	sbb    ah,al
  409f49:	xchg   ebp,eax
  409f4a:	dec    edi
  409f4b:	out    dx,al
  409f4c:	cmp    eax,0x694c43dd
  409f51:	aaa    
  409f52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f53:	cmp    edx,esp
  409f55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f56:	jns    0x409fcf
  409f58:	jbe    0x409f1c
  409f5a:	push   0x765aed3c
  409f5f:	sti    
  409f60:	add    bl,BYTE PTR [ebp-0xb]
  409f63:	xchg   ecx,eax
  409f64:	or     eax,0x183615ca
  409f69:	mov    ecx,0x4eec3a72
  409f6e:	sbb    eax,0xc986a072
  409f73:	fwait
  409f74:	ins    BYTE PTR es:[edi],dx
  409f75:	jbe    0x409f01
  409f77:	xchg   ebx,eax
  409f78:	lods   al,BYTE PTR ds:[esi]
  409f79:	fsubp  st(0),st
  409f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f7c:	adc    BYTE PTR [ecx+ebx*8],bh
  409f7f:	fisttp DWORD PTR [edx-0x79]
  409f82:	lods   al,BYTE PTR ds:[esi]
  409f83:	aam    0xd9
  409f85:	call   0x26b8b3b0
  409f8a:	repz in eax,0x89
  409f8d:	adc    BYTE PTR [esi+ebp*1-0x3],0xa5
  409f92:	inc    edi
  409f93:	(bad)  
  409f94:	iret   
  409f95:	fstp   QWORD PTR [esi+0x940859e]
  409f9b:	xor    al,0xb7
  409f9d:	out    0xe,eax
  409f9f:	sub    DWORD PTR [eax+0x4e],0xe4027415
  409fa6:	jmp    0x409f2b
  409fa8:	fst    DWORD PTR [ebx+0x6d]
  409fab:	loopne 0x40a023
  409fad:	hlt    
  409fae:	cmp    ebx,DWORD PTR [esi]
  409fb0:	sub    eax,DWORD PTR [edx]
  409fb2:	mov    ds:0xdea1b7e0,eax
  409fb7:	loopne 0x409f77
  409fb9:	and    DWORD PTR [ecx-0x6d3e130],esp
  409fbf:	or     al,0xdd
  409fc1:	sbb    eax,0x66eb9551
  409fc6:	pusha  
  409fc7:	jmp    0x3ec5:0xdc16d236
  409fce:	mov    bl,BYTE PTR [ebx]
  409fd0:	mov    ch,0x37
  409fd2:	xor    DWORD PTR [edx-0x7b],0xffffffdd
  409fd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fd7:	repz popf 
  409fd9:	sbb    eax,0x82c08f2d
  409fde:	push   0xb
  409fe0:	pop    ds
  409fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fe2:	mov    DWORD PTR [edi+edx*4+0x44],ebp
  409fe6:	and    DWORD PTR [eax+0x3],esp
  409fe9:	fisubr WORD PTR [ebx]
  409feb:	dec    eax
  409fec:	dec    esp
  409fed:	frstpm(287 only) 
  409fef:	int    0x4
  409ff1:	lahf   
  409ff2:	pop    es
  409ff3:	js     0x409ffe
  409ff5:	or     bh,BYTE PTR [esi]
  409ff7:	in     eax,dx
  409ff8:	cli    
  409ff9:	sbb    ecx,ebp
  409ffb:	not    DWORD PTR [ebx+0x386aaac8]
  40a001:	sub    al,0x7f
  40a003:	(bad)  
  40a004:	fidiv  DWORD PTR [edx+0x77]
  40a007:	xchg   edx,eax
  40a008:	dec    eax
  40a009:	lods   al,BYTE PTR ds:[esi]
  40a00a:	mov    ebp,cs
  40a00c:	sub    ch,BYTE PTR [esi-0x993fc38]
  40a012:	loopne 0x40a04f
  40a014:	mov    bl,0xe5
  40a016:	pop    eax
  40a017:	mov    edi,0xa72a04ec
  40a01c:	call   0x4075:0x49f1f03a
  40a023:	popf   
  40a024:	push   eax
  40a025:	popa   
  40a026:	in     al,dx
  40a027:	jno    0x40a07e
  40a029:	push   esi
  40a02a:	popa   
  40a02b:	std    
  40a02c:	push   edx
  40a02d:	mov    dl,0x8f
  40a02f:	retf   
  40a030:	ins    DWORD PTR es:[edi],dx
  40a031:	in     al,dx
  40a032:	out    dx,eax
  40a033:	pop    ss
  40a034:	or     al,0x6d
  40a036:	mov    edx,0x9c3bc8a0
  40a03b:	and    ebx,DWORD PTR [eax-0x3d]
  40a03e:	sbb    bl,BYTE PTR [esi+0x31e8d4d9]
  40a044:	cs push eax
  40a046:	push   eax
  40a047:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a048:	repz leave 
  40a04a:	mov    edx,esp
  40a04c:	or     dh,BYTE PTR [ebx+eiz*1+0x46]
  40a050:	xor    DWORD PTR [edi+0x2c],esp
  40a053:	push   cs
  40a054:	sub    eax,0xdf21c6fc
  40a059:	mov    BYTE PTR [ebx+0x52],ch
  40a05c:	ds inc eax
  40a05e:	out    dx,eax
  40a05f:	scas   eax,DWORD PTR es:[edi]
  40a060:	outs   dx,DWORD PTR ds:[esi]
  40a061:	out    0xde,al
  40a063:	add    ah,ah
  40a065:	repnz imul edi,esp,0xffffff88
  40a069:	frstor [edi+0x3e92a8dd]
  40a06f:	pushf  
  40a070:	xor    BYTE PTR [eax+eiz*2-0x68],al
  40a074:	in     eax,dx
  40a075:	mov    dl,0x3b
  40a077:	(bad)  
  40a078:	enter  0x789a,0xe8
  40a07c:	mov    edx,0xf0ac7f60
  40a081:	or     eax,0xa49fba8a
  40a086:	sub    edx,DWORD PTR [ebp+0x75d1f96b]
  40a08c:	dec    ebx
  40a08d:	push   es
  40a08e:	add    eax,0x6c0292e3
  40a093:	add    dl,BYTE PTR [edx+0x50919cd4]
  40a099:	test   al,0x60
  40a09b:	push   esp
  40a09c:	xor    DWORD PTR [ecx],esi
  40a09e:	add    esp,edx
  40a0a0:	fs inc ebx
  40a0a2:	lock jp 0x40a0cb
  40a0a5:	push   0x18
  40a0a7:	(bad)  
  40a0a8:	call   FWORD PTR [eax+0x70d61c9c]
  40a0ae:	pop    ss
  40a0af:	dec    esp
  40a0b0:	es dec ebp
  40a0b2:	cmp    ecx,DWORD PTR [edx-0x6c4273c2]
  40a0b8:	outs   dx,DWORD PTR ds:[esi]
  40a0b9:	sub    ch,0x49
  40a0bc:	mov    BYTE PTR [ebp+0x9],bh
  40a0bf:	jnp    0x40a060
  40a0c1:	retf   
  40a0c2:	sbb    BYTE PTR [ecx-0x2202d173],ah
  40a0c8:	and    al,BYTE PTR [edx-0x55047b5a]
  40a0ce:	xor    al,0x97
  40a0d0:	arpl   WORD PTR [eax+edx*4+0x553170fd],bx
  40a0d7:	les    esi,FWORD PTR [ebx+0x56c8eea2]
  40a0dd:	dec    edi
  40a0de:	sbb    bl,BYTE PTR [ebp-0x5a3a597c]
  40a0e4:	stc    
  40a0e5:	nop
  40a0e6:	stos   BYTE PTR es:[edi],al
  40a0e7:	pop    ds
  40a0e8:	leave  
  40a0e9:	pop    ecx
  40a0ea:	mov    ebx,DWORD PTR [esi-0x3780319]
  40a0f0:	sub    ebp,ebx
  40a0f2:	sub    edx,0xde0d407d
  40a0f8:	stc    
  40a0f9:	cdq    
  40a0fa:	icebp  
  40a0fb:	inc    esi
  40a0fd:	xchg   BYTE PTR [edx-0x88c36bc],bl
  40a103:	ins    DWORD PTR es:[edi],dx
  40a104:	lods   al,BYTE PTR ds:[esi]
  40a105:	test   al,0xe7
  40a107:	stos   BYTE PTR es:[edi],al
  40a108:	es pop ebp
  40a10a:	ss xchg edi,eax
  40a10c:	popf   
  40a10d:	push   ds
  40a10e:	addr16 xor al,0x8d
  40a111:	rol    BYTE PTR [ecx+eax*4],0x4e
  40a115:	shl    ebx,0xa2
  40a118:	mov    cl,0xa6
  40a11a:	std    
  40a11b:	fdiv   QWORD PTR [ebx+eax*8+0x47bd4c0e]
  40a122:	sub    DWORD PTR [ecx+0x1f],edi
  40a125:	cmp    ebx,DWORD PTR [eax-0x5]
  40a128:	mov    eax,ds:0x29be2b2e
  40a12d:	pushf  
  40a12e:	je     0x40a15d
  40a130:	or     al,0x9d
  40a132:	xor    edx,0x136eeeac
  40a138:	test   DWORD PTR [ebp+0xe],0xff004745
  40a13f:	(bad)  
  40a140:	mov    cl,0x9a
  40a142:	(bad)  
  40a144:	mov    edi,0x7bf6032c
  40a149:	arpl   WORD PTR ds:0x5c6f27bd,si
  40a14f:	mov    ds:0x5efce8a5,al
  40a154:	pop    edx
  40a155:	pop    edi
  40a156:	call   0xd1b6:0xa652fa86
  40a15d:	add    DWORD PTR [esi-0x11],esp
  40a160:	mov    WORD PTR [ecx],ds
  40a162:	adc    ebx,DWORD PTR [ebx]
  40a164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a165:	sahf   
  40a166:	adc    eax,0xc14d5bd8
  40a16b:	into   
  40a16c:	jp     0x40a1bf
  40a16e:	pop    edi
  40a16f:	jnp    0x40a10f
  40a171:	push   esi
  40a172:	fwait
  40a173:	push   ecx
  40a174:	fimul  DWORD PTR [esi+0x2b0751d3]
  40a17a:	or     al,0xc7
  40a17c:	js     0x40a123
  40a17e:	fistp  QWORD PTR [esi-0x30]
  40a181:	nop
  40a182:	jae    0x40a18f
  40a184:	cmp    esi,ebx
  40a186:	cmp    DWORD PTR [esi-0x329a92a7],0xffffffe1
  40a18d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a18e:	outs   dx,DWORD PTR ds:[esi]
  40a18f:	mov    dh,0x9e
  40a191:	pushf  
  40a192:	add    dh,BYTE PTR [esi]
  40a194:	dec    esp
  40a195:	fwait
  40a196:	mov    DWORD PTR [ebx],ebp
  40a198:	jo     0x40a1b9
  40a19a:	cli    
  40a19b:	or     DWORD PTR [ecx],edx
  40a19d:	push   ds
  40a19e:	fnstcw WORD PTR ds:0xc489f79e
  40a1a4:	sti    
  40a1a5:	xchg   ecx,eax
  40a1a6:	dec    esp
  40a1a7:	jmp    0x40a1e3
  40a1a9:	test   edi,ecx
  40a1ab:	retf   0x9833
  40a1ae:	je     0x40a1b5
  40a1b0:	inc    edi
  40a1b1:	(bad)  
  40a1b2:	mov    ecx,0x5eebef8b
  40a1b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1b9:	aaa    
  40a1ba:	clc    
  40a1bb:	cmp    eax,0x555780c7
  40a1c0:	dec    edi
  40a1c1:	jbe    0x40a22c
  40a1c3:	and    DWORD PTR [ecx-0x26],edx
  40a1c6:	xor    bh,BYTE PTR [eax+0x71b0f13f]
  40a1cc:	push   sp
  40a1ce:	sub    al,0x13
  40a1d0:	je     0x40a242
  40a1d2:	inc    esp
  40a1d3:	dec    ebx
  40a1d4:	mov    ebp,0xac5d7772
  40a1d9:	(bad)  
  40a1da:	mov    cl,0x61
  40a1dc:	sub    dh,dl
  40a1de:	call   0xbf46c67e
  40a1e3:	pop    ss
  40a1e4:	push   ebx
  40a1e5:	dec    edx
  40a1e6:	push   ebx
  40a1e7:	ret    
  40a1e8:	sbb    ebx,DWORD PTR [ebp+0x28bcb5f]
  40a1ee:	in     eax,0x62
  40a1f0:	stos   BYTE PTR es:[edi],al
  40a1f1:	stos   DWORD PTR es:[edi],eax
  40a1f2:	iret   
  40a1f3:	lahf   
  40a1f4:	cs inc edx
  40a1f6:	mov    al,0x4a
  40a1f8:	in     al,dx
  40a1f9:	into   
  40a1fa:	ja     0x40a20a
  40a1fc:	es mov bh,0xa8
  40a1ff:	stos   BYTE PTR es:[edi],al
  40a200:	or     DWORD PTR [ebx+0x60],0x2
  40a204:	xchg   ebp,eax
  40a205:	aaa    
  40a206:	ins    BYTE PTR es:[edi],dx
  40a207:	xlat   BYTE PTR ds:[ebx]
  40a208:	mov    ah,0x4c
  40a20a:	push   ebp
  40a20b:	stc    
  40a20c:	xor    dh,BYTE PTR [esi]
  40a20e:	and    eax,0x37dc4d79
  40a213:	add    DWORD PTR [edx*2-0x518a206d],ebp
  40a21a:	inc    ebx
  40a21b:	or     DWORD PTR [eax+ebx*2+0x526233e8],ecx
  40a222:	arpl   WORD PTR [edx-0x1440b2bd],dx
  40a228:	jmp    0xa0b2:0xd9fe42a0
  40a22f:	xlat   BYTE PTR ds:[ebx]
  40a230:	stc    
  40a231:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a232:	(bad)  
  40a233:	and    ecx,DWORD PTR [ecx]
  40a235:	das    
  40a236:	jo     0x40a212
  40a238:	inc    eax
  40a239:	add    bl,al
  40a23b:	imul   edx,DWORD PTR [eax],0xffffffeb
  40a23e:	xor    al,0x4
  40a240:	daa    
  40a241:	mov    bl,0xe2
  40a243:	or     BYTE PTR [edi+0x21b0c2d2],al
  40a249:	pop    esp
  40a24a:	push   ebp
  40a24b:	jmp    0x4bb1caa2
  40a250:	pop    es
  40a251:	ja     0x40a2cd
  40a253:	in     al,dx
  40a254:	mov    WORD PTR [edx],gs
  40a256:	or     bh,BYTE PTR [esi-0x11]
  40a259:	cmp    DWORD PTR [esi+0x6e],ebp
  40a25c:	dec    edi
  40a25d:	mov    al,0x7b
  40a25f:	mov    eax,0xd6eee627
  40a264:	sbb    DWORD PTR [eax],eax
  40a266:	push   edx
  40a267:	push   ss
  40a268:	dec    edi
  40a269:	out    dx,al
  40a26a:	inc    ebp
  40a26b:	out    dx,al
  40a26c:	jmp    0x16d84dfb
  40a271:	adc    cl,0xd6
  40a274:	push   edi
  40a275:	fwait
  40a276:	loop   0x40a2ec
  40a278:	push   ebp
  40a279:	lock jecxz 0x40a1fc
  40a27c:	cmp    edi,DWORD PTR [esi]
  40a27e:	inc    ebp
  40a27f:	xor    eax,0x42b4ed79
  40a284:	shr    BYTE PTR [edx-0x4d],1
  40a287:	dec    eax
  40a288:	sbb    bl,BYTE PTR [edx+0x18]
  40a28b:	mov    ds:0xeb19b9ea,al
  40a290:	in     eax,0x5
  40a292:	inc    edx
  40a293:	out    dx,al
  40a294:	sub    al,0x26
  40a296:	cli    
  40a297:	adc    dl,bl
  40a299:	mov    ebp,0xad187b71
  40a29e:	dec    esp
  40a29f:	inc    eax
  40a2a0:	clc    
  40a2a1:	lods   al,BYTE PTR ds:[esi]
  40a2a2:	or     eax,0x2fcbef84
  40a2a7:	cmp    esp,esi
  40a2a9:	fsub   DWORD PTR [edx+0x2c5ccb16]
  40a2af:	mov    WORD PTR [ebx],ss
  40a2b1:	stc    
  40a2b2:	fs mov ah,0x43
  40a2b5:	cmc    
  40a2b6:	call   0x1097:0x54f48bff
  40a2bd:	sti    
  40a2be:	js     0x40a258
  40a2c0:	adc    al,0xe1
  40a2c2:	or     dh,dh
  40a2c4:	jle    0x40a2e5
  40a2c6:	dec    esp
  40a2c7:	dec    ecx
  40a2c8:	fwait
  40a2c9:	add    bl,dl
  40a2cb:	jae    0x40a318
  40a2cd:	inc    ebp
  40a2ce:	cmp    al,0xef
  40a2d0:	add    ch,BYTE PTR ds:0xd1d476f
  40a2d6:	sbb    al,bl
  40a2d8:	mov    ds,WORD PTR [edx-0x15e506e9]
  40a2de:	arpl   WORD PTR [ecx+0x4a7b388],bp
  40a2e4:	data16 icebp 
  40a2e6:	outs   dx,DWORD PTR ds:[esi]
  40a2e7:	bnd jae 0x40a2c7
  40a2ea:	js     0x40a357
  40a2ec:	inc    edx
  40a2ed:	daa    
  40a2ee:	adc    bl,BYTE PTR [esi-0x37]
  40a2f1:	loop   0x40a351
  40a2f3:	and    BYTE PTR [edi+ecx*8+0x322bca8a],dl
  40a2fa:	jne    0x40a32e
  40a2fc:	sbb    DWORD PTR [edi+0x5e],0x6e
  40a300:	sub    al,BYTE PTR [eax]
  40a302:	mov    esi,0x644cdd1c
  40a307:	adc    ebx,edx
  40a309:	lock jge 0x40a32f
  40a30c:	ja     0x40a339
  40a30e:	adc    DWORD PTR [eax-0x6b12b555],ecx
  40a314:	push   ebp
  40a315:	inc    esi
  40a316:	sahf   
  40a317:	mov    dl,0xf2
  40a319:	mov    eax,0xbe23b251
  40a31e:	sbb    bl,BYTE PTR [edx+0x5dc07742]
  40a324:	je     0x40a2e1
  40a326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a327:	dec    edi
  40a328:	add    BYTE PTR [ebx-0x45],bh
  40a32b:	and    BYTE PTR [eax+0x19eeca66],dh
  40a331:	xchg   DWORD PTR [ecx],ebx
  40a333:	push   es
  40a334:	jnp    0x40a2bb
  40a336:	(bad)  
  40a337:	or     BYTE PTR [eax-0x5],ch
  40a33a:	xor    al,0xc7
  40a33c:	adc    DWORD PTR ds:0x3b22553c,esi
  40a342:	xor    BYTE PTR [ebp+ebx*4+0x38bcfb32],al
  40a349:	data16 aad 0xda
  40a34c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a34d:	(bad)  
  40a34f:	mov    eax,0x594d5324
  40a354:	das    
  40a355:	adc    edi,esi
  40a357:	in     al,dx
  40a358:	scas   eax,DWORD PTR es:[edi]
  40a359:	fsubr  DWORD PTR [edx]
  40a35b:	sbb    ebx,DWORD PTR [esi+ecx*2+0x63]
  40a35f:	push   esp
  40a360:	mov    esp,0x90ad9dff
  40a365:	xchg   DWORD PTR [ecx],ebx
  40a367:	in     eax,dx
  40a368:	(bad)  
  40a369:	jne    0x40a3c7
  40a36b:	sbb    eax,0x9809cfd5
  40a370:	or     eax,0x9bfecc12
  40a375:	mov    ch,0xd0
  40a377:	dec    ecx
  40a378:	fsubr  QWORD PTR [edi-0x2726ae06]
  40a37e:	mov    bl,0x8c
  40a380:	mov    ebx,0xb11f62d6
  40a385:	xchg   esi,eax
  40a386:	jp     0x40a38e
  40a388:	jno    0x40a32e
  40a38a:	mov    ebp,0x56aa6e42
  40a38f:	rcl    BYTE PTR [esi+0x12],0xa8
  40a393:	idiv   BYTE PTR [esp+ecx*4]
  40a396:	sub    esi,0xffffffe6
  40a399:	and    eax,0xcfad16c2
  40a39e:	sahf   
  40a39f:	mov    DWORD PTR ds:0x973b457,eax
  40a3a5:	enter  0x6112,0x9f
  40a3a9:	aam    0x54
  40a3ab:	imul   esi,esp,0xffffffcf
  40a3ae:	pop    esi
  40a3af:	lock aad 0x54
  40a3b2:	push   0x76
  40a3b4:	mov    DWORD PTR [ebx-0x4cfa8f6f],edx
  40a3ba:	data16 fcomi st,st(5)
  40a3bd:	in     al,dx
  40a3be:	pop    esp
  40a3bf:	aad    0x1c
  40a3c1:	call   0xd15d7c2
  40a3c6:	mov    cs,WORD PTR [ebx+0x6258a428]
  40a3cc:	cmp    BYTE PTR [ebx-0x3e579ac5],ch
  40a3d2:	jmp    0x40a3e5
  40a3d4:	and    eax,0x234243ff
  40a3d9:	and    ecx,DWORD PTR [ecx]
  40a3db:	ret    0x6440
  40a3de:	push   esp
  40a3df:	adc    BYTE PTR [edi-0x5d],bl
  40a3e2:	dec    edi
  40a3e3:	ss out dx,eax
  40a3e5:	dec    ebp
  40a3e6:	cmp    eax,0xc1c73387
  40a3eb:	loop   0x40a405
  40a3ed:	pop    eax
  40a3ee:	in     eax,dx
  40a3ef:	dec    esp
  40a3f0:	pop    ds
  40a3f1:	cdq    
  40a3f2:	jne    0x40a3ea
  40a3f4:	adc    dh,BYTE PTR [ebp+eiz*4+0x61a25829]
  40a3fb:	les    ebp,FWORD PTR [esi+0x3d1d2aca]
  40a401:	sti    
  40a402:	mov    ebp,DWORD PTR [ebp+0x31]
  40a405:	add    DWORD PTR [ebp+0x5f],ecx
  40a408:	add    edx,esi
  40a40a:	scas   al,BYTE PTR es:[edi]
  40a40b:	pushf  
  40a40c:	int    0x89
  40a40e:	xchg   BYTE PTR [edx+0x4b96e2cc],dl
  40a414:	jo     0x40a409
  40a416:	xchg   ecx,eax
  40a417:	fdivr  DWORD PTR [edi-0x73069f0e]
  40a41d:	push   ebp
  40a41e:	retf   0x72d3
  40a421:	or     bl,BYTE PTR [esi]
  40a423:	adc    DWORD PTR [edx],ebp
  40a425:	mov    ecx,0x11535557
  40a42a:	sbb    al,0xc8
  40a42c:	test   BYTE PTR [edx+esi*4+0x72],bh
  40a430:	mov    eax,cs
  40a432:	xchg   BYTE PTR fs:[eax+0x3c],bl
  40a436:	add    al,0x5c
  40a438:	push   ss
  40a439:	or     eax,0xe7bd0173
  40a43e:	sbb    eax,0x2a42f553
  40a443:	xchg   edi,eax
  40a444:	mov    edi,0x5567381f
  40a449:	lahf   
  40a44a:	fisubr WORD PTR [ecx]
  40a44c:	scas   al,BYTE PTR es:[edi]
  40a44d:	das    
  40a44e:	jnp    0x40a415
  40a450:	sahf   
  40a451:	xor    eax,0x11debfa3
  40a456:	idiv   DWORD PTR [esi+0x17cb746e]
  40a45c:	add    al,ch
  40a45e:	out    0xac,al
  40a460:	pop    esp
  40a461:	xor    cl,BYTE PTR [ecx+0x37]
  40a464:	jns    0x40a47a
  40a466:	sub    al,0xde
  40a468:	xchg   DWORD PTR [ebp+0x79],eax
  40a46b:	lahf   
  40a46c:	jg     0x40a43f
  40a46e:	out    0xbd,eax
  40a470:	cmp    ebx,DWORD PTR [edi+0x4c6f23e8]
  40a476:	mov    ds:0xb22172a5,eax
  40a47b:	outs   dx,BYTE PTR ds:[esi]
  40a47c:	xor    DWORD PTR [edx+esi*4+0x513a9fd9],ecx
  40a483:	ret    0xd82e
  40a486:	pushf  
  40a487:	int3   
  40a488:	mov    ss,WORD PTR [esi-0xc]
  40a48b:	(bad)  
  40a48c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a48d:	scas   al,BYTE PTR es:[edi]
  40a48e:	aaa    
  40a48f:	out    0xb,eax
  40a491:	shl    BYTE PTR [ecx-0x41],cl
  40a494:	(bad)  
  40a495:	pusha  
  40a496:	adc    DWORD PTR [ebp-0x5f02844c],ebx
  40a49c:	std    
  40a49d:	sbb    BYTE PTR [edi],bl
  40a49f:	jp     0x40a489
  40a4a1:	fisub  DWORD PTR [ebp+0x3]
  40a4a4:	loope  0x40a4c2
  40a4a6:	idiv   ah
  40a4a8:	clc    
  40a4a9:	xor    ch,BYTE PTR [edx]
  40a4ab:	or     esp,DWORD PTR [eax+0x6b15867b]
  40a4b1:	mov    ch,0xe8
  40a4b3:	sbb    esp,DWORD PTR [ebp-0x8]
  40a4b6:	pop    edx
  40a4b7:	(bad)  
  40a4b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4ba:	mov    ebx,0x76a208a4
  40a4bf:	mov    ds:0x473f24d6,al
  40a4c4:	scas   eax,DWORD PTR es:[edi]
  40a4c5:	pushf  
  40a4c6:	das    
  40a4c7:	pop    esp
  40a4c8:	aas    
  40a4c9:	lods   eax,DWORD PTR ds:[esi]
  40a4ca:	adc    bl,bh
  40a4cc:	inc    edi
  40a4cd:	mul    DWORD PTR [edx-0x2ec2b009]
  40a4d3:	dec    ebx
  40a4d4:	mov    bh,0x4d
  40a4d6:	dec    ebx
  40a4d7:	and    al,0x62
  40a4d9:	sub    dl,bl
  40a4db:	ins    DWORD PTR es:[edi],dx
  40a4dc:	sahf   
  40a4dd:	jb     0x40a49a
  40a4df:	and    DWORD PTR [eax],edi
  40a4e1:	sub    bh,bl
  40a4e3:	imul   esi,DWORD PTR [ecx-0x1ab06109],0x53
  40a4ea:	cdq    
  40a4eb:	push   edi
  40a4ec:	jnp    0x40a550
  40a4ee:	mov    al,ds:0x99f8a92e
  40a4f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4f4:	dec    esp
  40a4f5:	mov    edi,0xe19d7876
  40a4fa:	jne    0x40a50e
  40a4fc:	test   al,0xb2
  40a4fe:	fimul  DWORD PTR [ecx+0x65]
  40a501:	jae    0x40a536
  40a503:	push   esi
  40a504:	(bad)  
  40a505:	mov    edi,0x2536e8f0
  40a50a:	ds lahf 
  40a50c:	and    al,0xaf
  40a50e:	int    0x20
  40a510:	inc    ebx
  40a511:	push   ecx
  40a512:	mov    ecx,0xa16030f
  40a517:	push   edi
  40a518:	pop    ss
  40a519:	mov    ebp,0xd5e5756f
  40a51e:	push   esi
  40a51f:	jg     0x40a510
  40a521:	stos   BYTE PTR es:[edi],al
  40a522:	mov    gs,WORD PTR [ebx+0x4e336795]
  40a528:	test   BYTE PTR [eax],dl
  40a52a:	add    ebx,edx
  40a52c:	xor    eax,0x27266905
  40a531:	push   esp
  40a532:	int    0x2d
  40a534:	mov    eax,ds:0x88e4181c
  40a539:	jb     0x40a59e
  40a53b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a53c:	pop    esi
  40a53d:	cmp    BYTE PTR [eax-0x42],cl
  40a540:	cli    
  40a541:	ds xchg ecx,eax
  40a543:	lahf   
  40a544:	aaa    
  40a545:	imul   eax,DWORD PTR [ecx],0xea539a87
  40a54b:	aaa    
  40a54c:	in     al,dx
  40a54d:	sub    al,0xd3
  40a54f:	ss jmp 0x40a4f2
  40a552:	pop    ebx
  40a553:	test   BYTE PTR [edi],al
  40a555:	adc    eax,0x5c0ac9ac
  40a55a:	xchg   edi,eax
  40a55b:	mov    al,ds:0xe613345b
  40a560:	jae    0x40a4f8
  40a562:	sub    al,0xe8
  40a564:	pop    ebx
  40a565:	rol    ch,0x35
  40a568:	ins    DWORD PTR es:[edi],dx
  40a569:	pop    es
  40a56a:	cld    
  40a56b:	xchg   ebx,eax
  40a56c:	repz mov ah,0xe0
  40a56f:	ins    DWORD PTR es:[edi],dx
  40a570:	add    esp,DWORD PTR [ebp-0x169a7a43]
  40a576:	push   ss
  40a577:	lock lds esi,FWORD PTR [edi]
  40a57a:	xlat   BYTE PTR ds:[ebx]
  40a57b:	shld   DWORD PTR [edx+0x33],eax,0x41
  40a580:	rcl    DWORD PTR [ecx+0x3c03bafe],1
  40a586:	mov    bl,ch
  40a588:	push   ebp
  40a589:	pop    ebx
  40a58a:	and    bh,BYTE PTR [edx]
  40a58c:	or     BYTE PTR [edx+0x24],bl
  40a58f:	clc    
  40a590:	mov    bh,0xb4
  40a592:	adc    esi,ebp
  40a594:	jb     0x40a54c
  40a596:	shl    DWORD PTR ss:[eax-0x56],1
  40a59a:	fstp   TBYTE PTR [eax-0x7eca57a8]
  40a5a0:	call   0x1a14:0x46068ddb
  40a5a7:	sub    BYTE PTR [edx+edx*1],ah
  40a5aa:	loopne 0x40a600
  40a5ac:	jmp    0xbded:0x57608a87
  40a5b3:	loope  0x40a5fa
  40a5b5:	pop    ecx
  40a5b6:	in     eax,0xd0
  40a5b8:	mov    ecx,0x91998359
  40a5bd:	fs dec ebx
  40a5bf:	rcr    DWORD PTR [ecx+eax*4],cl
  40a5c2:	inc    esp
  40a5c3:	cmc    
  40a5c4:	aam    0x6
  40a5c6:	jo     0x40a5d9
  40a5c8:	mov    WORD PTR [ebx],?
  40a5ca:	fist   WORD PTR [eax-0x74]
  40a5cd:	call   0x64d23028
  40a5d2:	mov    ch,0x9a
  40a5d4:	(bad)  
  40a5d5:	in     al,0x3d
  40a5d7:	add    eax,0x67c504e1
  40a5dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5dd:	add    eax,ecx
  40a5df:	ret    0x8dbd
  40a5e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5e3:	push   ecx
  40a5e4:	shr    DWORD PTR [edi+0x53],1
  40a5e7:	leave  
  40a5e8:	add    BYTE PTR [ebx+ecx*1+0x6c],cl
  40a5ec:	popf   
  40a5ed:	add    bh,BYTE PTR [esi]
  40a5ef:	push   ebx
  40a5f0:	mov    al,ds:0xc8189c53
  40a5f5:	push   esp
  40a5f6:	dec    ebp
  40a5f7:	scas   eax,DWORD PTR es:[edi]
  40a5f8:	stos   DWORD PTR es:[edi],eax
  40a5f9:	dec    ebp
  40a5fa:	es test eax,0x235c5e52
  40a600:	mov    ah,0xf0
  40a602:	cld    
  40a603:	pop    esp
  40a604:	popfw  
  40a606:	shl    ch,cl
  40a608:	push   es
  40a609:	fucomi st,st(3)
  40a60b:	clc    
  40a60c:	arpl   WORD PTR [ebp+0x49bea8f4],di
  40a612:	call   0xf20d28ea
  40a617:	cdq    
  40a618:	xchg   DWORD PTR [edx],ecx
  40a61a:	and    ebp,ecx
  40a61c:	or     eax,0x8cb8d6ed
  40a621:	pop    esi
  40a622:	test   DWORD PTR [edi],eax
  40a624:	xor    al,0xcb
  40a626:	adc    DWORD PTR [esi-0x7a8c9442],esp
  40a62c:	jne    0x40a666
  40a62e:	mov    ch,0xf0
  40a630:	arpl   WORD PTR [ebp-0x23],di
  40a633:	xlat   BYTE PTR ds:[ebx]
  40a634:	xor    al,0xc2
  40a636:	shl    DWORD PTR [ecx+eiz*4-0x67],1
  40a63a:	push   ds
  40a63b:	pop    ds
  40a63c:	addr16 mov bl,0xb9
  40a63f:	sbb    al,0x76
  40a641:	ret    
  40a642:	ret    0x33ca
  40a645:	js     0x40a6c6
  40a647:	repnz cmp BYTE PTR [esp+ebx*8-0x2b],0xc4
  40a64d:	push   0xffffff90
  40a64f:	inc    ebp
  40a650:	out    dx,al
  40a651:	add    DWORD PTR [eax],edx
  40a653:	mov    WORD PTR [eax+0x76],?
  40a656:	mov    BYTE PTR [eax+0x3114a4e5],dl
  40a65c:	out    0x8d,eax
  40a65e:	js     0x40a644
  40a660:	imul   edx,DWORD PTR [ebx+0x50],0xfffffff1
  40a664:	je     0x40a6a6
  40a666:	inc    eax
  40a667:	adc    DWORD PTR ds:0xe33566d3,eax
  40a66d:	cmp    dh,bl
  40a66f:	aad    0x1d
  40a671:	sbb    BYTE PTR [ebp+0xa],dl
  40a674:	mov    WORD PTR [esi],cs
  40a676:	mov    edi,0xfa95c1c
  40a67b:	les    esi,FWORD PTR [edx+0x22]
  40a67e:	add    ah,bh
  40a680:	sbb    bl,BYTE PTR [esi]
  40a682:	cli    
  40a683:	test   DWORD PTR [esi+0x7b],edi
  40a686:	xchg   dh,cl
  40a688:	cdq    
  40a689:	gs ins DWORD PTR es:[edi],dx
  40a68b:	mov    esi,0x9df3aa1d
  40a690:	push   esi
  40a691:	dec    edi
  40a692:	sub    eax,0xd1fd30fb
  40a697:	sub    eax,0xc7909681
  40a69c:	add    al,dl
  40a69e:	dec    edx
  40a69f:	jbe    0x40a6cc
  40a6a1:	sbb    ebx,DWORD PTR [eax]
  40a6a3:	xor    BYTE PTR ds:0x2e7d1c82,ch
  40a6a9:	dec    edx
  40a6aa:	clc    
  40a6ab:	push   0x52bef9ac
  40a6b0:	pop    edx
  40a6b1:	jno    0x40a636
  40a6b3:	xchg   edi,eax
  40a6b4:	xor    eax,DWORD PTR [ebp+0x7b69d8c5]
  40a6ba:	cpuid  
  40a6bc:	clc    
  40a6bd:	inc    esi
  40a6be:	jae    0x40a708
  40a6c0:	adc    DWORD PTR [edx+0xb],edx
  40a6c3:	mul    BYTE PTR ds:0x4e7ee83f
  40a6c9:	aam    0xb8
  40a6cb:	cmp    ah,bl
  40a6cd:	rcl    bh,cl
  40a6cf:	jle    0x40a70f
  40a6d1:	mov    gs,WORD PTR [edx]
  40a6d3:	(bad)  
  40a6d4:	repnz sub BYTE PTR [esi],0x8e
  40a6d8:	sub    al,0x3d
  40a6da:	pop    eax
  40a6db:	xor    ebp,0x4bc73bbf
  40a6e1:	arpl   WORD PTR [eax+0x1cfc793a],ax
  40a6e7:	fcom   st(6)
  40a6e9:	pop    es
  40a6ea:	popa   
  40a6eb:	xor    al,BYTE PTR [eax-0x6890b142]
  40a6f1:	test   DWORD PTR cs:[esi-0x5120cd96],esi
  40a6f8:	push   esi
  40a6f9:	in     al,0x2a
  40a6fb:	mov    ebp,0xf07378e7
  40a700:	fild   WORD PTR [ebx+0xf51a182]
  40a706:	mov    bh,BYTE PTR [ebx+eiz*8]
  40a709:	and    DWORD PTR [edx],0x69db2535
  40a70f:	push   ebx
  40a710:	mov    dl,ch
  40a712:	add    edx,0xffffffdc
  40a715:	in     al,0x3a
  40a717:	sbb    esi,eax
  40a719:	inc    ebp
  40a71a:	adc    eax,0x7091e63f
  40a71f:	mov    ?,WORD PTR [edx-0x4]
  40a722:	cmp    BYTE PTR [esi],ch
  40a724:	in     eax,dx
  40a725:	xor    ebp,ebp
  40a727:	sbb    ch,BYTE PTR [edx-0x3b70f5b2]
  40a72d:	mov    edx,esi
  40a72f:	nop
  40a730:	adc    BYTE PTR [ecx+0x39ead2dd],cl
  40a736:	in     al,0xd3
  40a738:	jno    0x40a6e0
  40a73a:	add    ecx,ebp
  40a73c:	out    dx,eax
  40a73d:	lods   al,BYTE PTR ds:[esi]
  40a73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a73f:	icebp  
  40a740:	pop    es
  40a741:	outs   dx,DWORD PTR ds:[esi]
  40a742:	jle    0x40a778
  40a744:	xchg   edx,eax
  40a745:	std    
  40a746:	addr16 mov ds:0xd4c3,eax
  40a74a:	les    edx,FWORD PTR ss:[edx]
  40a74d:	popa   
  40a74e:	jmp    0x40a700
  40a750:	mov    edi,0xd48f3728
  40a755:	fnstsw WORD PTR [edi-0x30]
  40a758:	adc    DWORD PTR [edx-0x3e961f26],ebp
  40a75e:	fldcw  WORD PTR [eax-0x4b46c588]
  40a764:	dec    di
  40a766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a767:	adc    bh,BYTE PTR [eax+0x28df1942]
  40a76d:	push   esp
  40a76e:	pop    ecx
  40a76f:	pop    es
  40a770:	and    al,ah
  40a772:	or     ebp,DWORD PTR [ebx+0x1d]
  40a775:	fsub   QWORD PTR [esi-0x1a6089ca]
  40a77b:	ffree  st(7)
  40a77d:	adc    dh,BYTE PTR [esi-0x37]
  40a780:	imul   ecx,DWORD PTR [eax],0xffffff91
  40a783:	mov    WORD PTR [esi],gs
  40a785:	mov    al,0xe6
  40a787:	and    eax,0x5efcfc3a
  40a78c:	icebp  
  40a78d:	push   edx
  40a78e:	mov    cs,WORD PTR [ebx-0x1a976095]
  40a794:	addr16 jo 0x40a7e7
  40a797:	ret    0xe5c9
  40a79a:	int3   
  40a79b:	pop    edx
  40a79c:	mov    al,0x22
  40a79e:	fmul   QWORD PTR [ebx+eiz*8]
  40a7a1:	cmp    DWORD PTR [eax-0x5f9c9c7b],edi
  40a7a7:	cmp    al,BYTE PTR [ebp+0x37]
  40a7aa:	nop
  40a7ab:	test   eax,0x3b7a5887
  40a7b0:	push   es
  40a7b1:	inc    DWORD PTR [ebx+0x20a0e32b]
  40a7b7:	mov    al,ds:0x39890731
  40a7bc:	rcr    DWORD PTR [ebx+0x5a],0x81
  40a7c0:	cs nop
  40a7c2:	fsubr  DWORD PTR [eax-0x611fedbb]
  40a7c8:	jecxz  0x40a803
  40a7ca:	cld    
  40a7cb:	es call 0x8dd0:0x2e9f863c
  40a7d3:	inc    bh
  40a7d5:	xor    al,0x24
  40a7d7:	pusha  
  40a7d8:	lahf   
  40a7d9:	jge    0x40a79e
  40a7db:	xchg   esp,eax
  40a7dc:	ds das 
  40a7de:	inc    esi
  40a7df:	ins    BYTE PTR es:[edi],dx
  40a7e0:	push   es
  40a7e1:	xchg   esp,eax
  40a7e2:	mov    DWORD PTR [ebx+0x21],eax
  40a7e5:	lods   al,BYTE PTR ds:[esi]
  40a7e6:	out    0x2e,al
  40a7e8:	stos   BYTE PTR es:[edi],al
  40a7e9:	mov    ch,BYTE PTR [ebx-0x3f]
  40a7ec:	cli    
  40a7ed:	push   ebx
  40a7ee:	repz mov ah,dh
  40a7f1:	test   BYTE PTR [ebp+0x186b7f4d],dh
  40a7f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7f8:	and    ebx,ebp
  40a7fa:	xlat   BYTE PTR ds:[ebx]
  40a7fb:	aam    0x7a
  40a7fd:	je     0x40a7be
  40a7ff:	jo     0x40a7f9
  40a801:	or     BYTE PTR [ecx-0x5ca074b6],dl
  40a807:	push   edx
  40a808:	leave  
  40a809:	pop    ds
  40a80a:	shl    DWORD PTR [ebx],1
  40a80c:	popf   
  40a80d:	mov    ah,0xb1
  40a80f:	inc    ebx
  40a810:	fnstsw WORD PTR [edx-0x6a4aa70e]
  40a816:	test   BYTE PTR [ebx-0x65],0x1f
  40a81a:	(bad)  
  40a81b:	mov    al,0xe4
  40a81d:	nop
  40a81e:	ds lock mov ebp,0xcdb9a4c6
  40a825:	xchg   DWORD PTR [esi-0x3828785c],ebp
  40a82b:	out    dx,al
  40a82c:	lds    esp,FWORD PTR [edi+0x2e]
  40a82f:	icebp  
  40a830:	sbb    ebx,edi
  40a832:	push   ss
  40a833:	jnp    0x40a839
  40a835:	inc    ebp
  40a836:	dec    esi
  40a837:	shl    BYTE PTR [eax],1
  40a839:	imul   DWORD PTR [edx-0x5f]
  40a83c:	xchg   edx,eax
  40a83d:	jb     0x40a86c
  40a83f:	call   0xf88d:0x41ecadb0
  40a846:	sbb    BYTE PTR [edx+0x6c],cl
  40a849:	pop    esp
  40a84a:	pop    ecx
  40a84b:	mov    ebx,0xe741c445
  40a850:	sub    eax,0x122948c8
  40a855:	hlt    
  40a856:	xchg   esp,eax
  40a857:	lea    ebx,[edi]
  40a859:	fsubr  DWORD PTR [ebx+0x69]
  40a85c:	lds    ecx,FWORD PTR [ecx+0x1715a88b]
  40a862:	ins    DWORD PTR es:[edi],dx
  40a863:	mov    esi,0x8760276d
  40a868:	imul   ebp,DWORD PTR [eax-0x6d],0xffffffcd
  40a86c:	lds    edx,FWORD PTR ds:0xfb002947
  40a872:	lock mov cl,0xbd
  40a875:	aaa    
  40a876:	push   0xc4e2b12f
  40a87b:	pushf  
  40a87c:	shr    BYTE PTR [eax-0x760238e1],0x9d
  40a883:	xor    al,0x9a
  40a885:	sbb    dl,ah
  40a887:	repnz sub al,0x27
  40a88a:	out    dx,al
  40a88b:	dec    esi
  40a88c:	dec    esi
  40a88d:	xchg   edi,eax
  40a88e:	inc    eax
  40a88f:	jle    0x40a89d
  40a891:	sub    DWORD PTR [edx],edx
  40a893:	jl     0x40a8d4
  40a895:	jl     0x40a893
  40a897:	push   0xa67de0fd
  40a89c:	cmc    
  40a89d:	add    al,0xa2
  40a89f:	int    0x15
  40a8a1:	adc    eax,0xa9b191d5
  40a8a6:	or     eax,0x42baccde
  40a8ab:	fimul  DWORD PTR [eax+0x1f]
  40a8ae:	push   edi
  40a8af:	jne    0x40a83b
  40a8b1:	ins    BYTE PTR es:[edi],dx
  40a8b2:	out    dx,al
  40a8b3:	hlt    
  40a8b4:	daa    
  40a8b5:	push   edi
  40a8b6:	lods   eax,DWORD PTR ds:[esi]
  40a8b7:	push   esp
  40a8b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8b9:	fild   QWORD PTR gs:[ebx+ebp*4+0x56]
  40a8be:	or     eax,DWORD PTR [edi-0xa6e1ea2]
  40a8c4:	push   edi
  40a8c5:	mov    cl,0x11
  40a8c7:	ins    DWORD PTR es:[edi],dx
  40a8c8:	or     bh,ah
  40a8ca:	sbb    edi,ecx
  40a8cc:	add    edx,DWORD PTR [ebx-0x6b22facf]
  40a8d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8d3:	jno    0x40a917
  40a8d5:	sbb    esi,DWORD PTR [ebx+0x3945f42d]
  40a8db:	outs   dx,BYTE PTR ds:[esi]
  40a8dc:	or     dl,BYTE PTR [ecx]
  40a8de:	daa    
  40a8df:	add    ch,bl
  40a8e1:	fimul  WORD PTR [edi]
  40a8e3:	jecxz  0x40a95b
  40a8e5:	lea    eax,[esi+eiz*1-0x34]
  40a8e9:	mov    cl,0x57
  40a8eb:	ficomp DWORD PTR [edx+0x33ee8949]
  40a8f1:	ins    DWORD PTR es:[edi],dx
  40a8f2:	pop    ss
  40a8f3:	rol    bh,1
  40a8f5:	ja     0x40a8f3
  40a8f7:	rcl    ch,cl
  40a8f9:	push   ebx
  40a8fa:	inc    ebp
  40a8fb:	bound  esp,QWORD PTR [edx-0x25]
  40a8fe:	sub    al,BYTE PTR [ebx+ebx*8-0x74ef2d24]
  40a905:	mov    eax,0x42f6279e
  40a90a:	jo     0x40a915
  40a90c:	out    0xaa,al
  40a90e:	adc    ecx,DWORD PTR [esi+0x2bfb0ab9]
  40a914:	mov    esp,0xf4f29bca
  40a919:	xchg   esi,eax
  40a91a:	(bad)  
  40a91b:	cld    
  40a91c:	fld    QWORD PTR [edi+0x56]
  40a91f:	jp     0x40a8bd
  40a921:	rcr    edi,cl
  40a923:	sub    eax,0xc98edff2
  40a928:	repz mov ah,0xe5
  40a92b:	lds    esp,FWORD PTR [ecx]
  40a92d:	mov    ah,BYTE PTR [edx-0x7a]
  40a930:	sub    eax,0xa484c5bb
  40a935:	shl    eax,cl
  40a937:	push   eax
  40a938:	repz push ecx
  40a93a:	or     BYTE PTR [edx+eiz*4+0x67f8a9a0],cl
  40a941:	sti    
  40a942:	inc    edi
  40a943:	shr    BYTE PTR [edi],0xd4
  40a946:	xchg   edx,eax
  40a947:	inc    ebx
  40a948:	mov    WORD PTR [ecx],cs
  40a94a:	push   cs
  40a94b:	mov    al,ds:0xb6efe0ea
  40a950:	hlt    
  40a951:	adc    esi,DWORD PTR [edx-0x3eac5129]
  40a957:	stc    
  40a958:	test   eax,0x40ed0f23
  40a95d:	inc    ebp
  40a95e:	adc    eax,0x52d77d59
  40a963:	add    al,0x24
  40a965:	cmc    
  40a966:	daa    
  40a967:	les    ebx,FWORD PTR [ecx+0x7f40a2b4]
  40a96d:	cmc    
  40a96e:	mov    dh,0x49
  40a970:	scas   eax,DWORD PTR es:[edi]
  40a971:	rol    BYTE PTR [edi+0x2b],0x9f
  40a975:	sub    bh,ah
  40a977:	or     eax,0xbaf028be
  40a97c:	mov    fs,WORD PTR [ebp-0x11951ae0]
  40a982:	sbb    esp,DWORD PTR [esi]
  40a984:	and    eax,0x9d2720e4
  40a989:	into   
  40a98a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a98b:	out    dx,eax
  40a98c:	mov    dl,0xe0
  40a98e:	nop
  40a98f:	xchg   ebp,eax
  40a990:	ja     0x40a9ba
  40a992:	xchg   ebx,eax
  40a993:	je     0x40a9e7
  40a995:	xor    al,0x5a
  40a997:	jb     0x40a927
  40a999:	lds    edi,FWORD PTR [esi+0x38]
  40a99c:	push   ecx
  40a99d:	pop    es
  40a99e:	(bad)  [eax-0x3c021cf5]
  40a9a4:	repnz shl DWORD PTR [esp+edx*8-0x7c],cl
  40a9a9:	arpl   WORD PTR [ecx-0x3aa73107],di
  40a9af:	and    al,BYTE PTR [ecx+0x7503ea13]
  40a9b5:	mov    ch,0x37
  40a9b7:	add    DWORD PTR [edx+0x45],ebp
  40a9ba:	push   cs
  40a9bb:	popa   
  40a9bc:	cld    
  40a9bd:	das    
  40a9be:	jnp    0x40a9c7
  40a9c0:	mov    ebx,0xe877c79c
  40a9c5:	shl    cl,0x36
  40a9c8:	lods   al,BYTE PTR ds:[esi]
  40a9c9:	add    DWORD PTR [eax+0x7c],edi
  40a9cc:	out    0xcb,al
  40a9ce:	lods   eax,DWORD PTR ds:[esi]
  40a9cf:	js     0x40a978
  40a9d1:	inc    edx
  40a9d2:	ja     0x40a9d6
  40a9d4:	inc    ebp
  40a9d5:	shr    ebx,cl
  40a9d7:	loope  0x40a9f0
  40a9d9:	stos   BYTE PTR es:[edi],al
  40a9da:	and    al,0x75
  40a9dc:	dec    edx
  40a9dd:	pop    edi
  40a9de:	mov    bh,0x41
  40a9e0:	(bad)  
  40a9e1:	and    DWORD PTR [ebp-0x900505e],edi
  40a9e7:	pushf  
  40a9e8:	into   
  40a9e9:	sub    al,0xd2
  40a9eb:	pop    ss
  40a9ec:	push   ebp
  40a9ed:	xchg   DWORD PTR [ebp-0x494f7f9b],esi
  40a9f3:	jno    0x40a9a0
  40a9f5:	dec    edi
  40a9f6:	cmp    BYTE PTR [ebp+0x51],0x90
  40a9fa:	aam    0xd8
  40a9fc:	add    al,0xe9
  40a9fe:	fwait
  40a9ff:	ret    
  40aa00:	retf   
  40aa01:	inc    edi
  40aa02:	aad    0x25
  40aa04:	xor    DWORD PTR [esi-0x22],edx
  40aa07:	sub    ah,BYTE PTR gs:[edi-0x199b1479]
  40aa0e:	(bad)  
  40aa0f:	leave  
  40aa10:	mov    ecx,0x7d42a212
  40aa15:	mov    esp,ecx
  40aa17:	scas   eax,DWORD PTR es:[edi]
  40aa18:	(bad)  
  40aa19:	and    DWORD PTR [ecx+ebx*8-0x1c],0x42
  40aa1e:	hlt    
  40aa1f:	in     al,0x37
  40aa21:	jl     0x40aa69
  40aa23:	shl    DWORD PTR [ebx],1
  40aa25:	adc    ah,BYTE PTR [ebx]
  40aa27:	or     eax,0x908c3cc3
  40aa2c:	and    esi,ebx
  40aa2e:	push   esi
  40aa2f:	shr    BYTE PTR [esi],cl
  40aa31:	push   edi
  40aa32:	sbb    DWORD PTR [ebp+eiz*8+0x1e],esp
  40aa36:	loop   0x40a9c4
  40aa38:	jb     0x40a9f7
  40aa3a:	lods   al,BYTE PTR ds:[esi]
  40aa3b:	jg     0x40aab1
  40aa3d:	mov    dh,BYTE PTR [edx-0x2d]
  40aa40:	addr16 add bl,ah
  40aa43:	push   0xffffffe1
  40aa45:	shl    DWORD PTR [edi],1
  40aa47:	xor    BYTE PTR [ebx+0x21083b20],ah
  40aa4d:	pop    edx
  40aa4e:	(bad)  
  40aa4f:	ficomp WORD PTR [esi-0x13]
  40aa52:	sbb    dl,ah
  40aa54:	std    
  40aa55:	or     eax,DWORD PTR [edi*4-0x267f92b7]
  40aa5c:	cmp    eax,0x4d82af47
  40aa61:	mov    ecx,esp
  40aa63:	mov    dl,0xf2
  40aa65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa66:	inc    esp
  40aa67:	clc    
  40aa68:	xor    ebp,DWORD PTR [edi+0x2dfeae9c]
  40aa6e:	adc    DWORD PTR [edx-0x2],ebx
  40aa71:	das    
  40aa72:	popa   
  40aa73:	nop
  40aa74:	cmp    al,BYTE PTR gs:[esi]
  40aa77:	cs in  al,0xab
  40aa7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa7b:	mov    edi,0x732d1360
  40aa80:	push   edi
  40aa81:	add    al,0x17
  40aa83:	push   0x749f2368
  40aa88:	outs   dx,DWORD PTR ds:[esi]
  40aa89:	pop    esp
  40aa8a:	ss inc esi
  40aa8c:	inc    ebx
  40aa8d:	ds mov ?,edi
  40aa90:	(bad)  
  40aa91:	aaa    
  40aa92:	pushf  
  40aa93:	ret    
  40aa94:	or     al,0x88
  40aa96:	cmc    
  40aa97:	sub    cl,BYTE PTR [esi+ebp*2-0x1ec73513]
  40aa9e:	mov    bh,0x11
  40aaa0:	retf   
  40aaa1:	mov    al,BYTE PTR [esi]
  40aaa3:	cmp    ebx,DWORD PTR [edx]
  40aaa5:	inc    esi
  40aaa6:	repnz or BYTE PTR [ebp-0x528ecf6e],bh
  40aaad:	ret    
  40aaae:	cdq    
  40aaaf:	or     cl,bh
  40aab1:	cs jo  0x40ab04
  40aab4:	cmc    
  40aab5:	mov    ah,0xa8
  40aab7:	(bad)  
  40aab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aab9:	aad    0xd4
  40aabb:	push   edx
  40aabc:	mov    edi,0xd6500892
  40aac1:	inc    dl
  40aac3:	sub    ch,ch
  40aac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aac6:	add    BYTE PTR [edi+0x6b],0x6d
  40aaca:	imul   esi,DWORD PTR [ebx-0x2ad2a186],0xfffffff8
  40aad1:	stos   DWORD PTR es:[edi],eax
  40aad2:	jns    0x40aaf5
  40aad4:	jnp    0x40aae4
  40aad6:	js     0x40aaf0
  40aad8:	neg    esi
  40aada:	loope  0x40aafd
  40aadc:	mov    ch,0xa9
  40aade:	push   ds
  40aadf:	and    eax,0x500ee676
  40aae4:	ins    DWORD PTR es:[edi],dx
  40aae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aae6:	push   esi
  40aae7:	push   0xda9f6d9a
  40aaec:	mov    ch,0x25
  40aaee:	xor    BYTE PTR [esi+edx*1-0x17],bl
  40aaf2:	adc    al,0xec
  40aaf4:	push   ebx
  40aaf5:	push   0x33a93575
  40aafa:	gs sub al,0x25
  40aafd:	push   ebp
  40aafe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaff:	pop    esp
  40ab00:	out    dx,al
  40ab01:	adc    ebx,DWORD PTR [esi]
  40ab03:	mov    eax,ds:0xda21e4c2
  40ab08:	ret    0xc5bd
  40ab0b:	out    dx,al
  40ab0c:	ja     0x40aaea
  40ab0e:	mov    edx,DWORD PTR [edx-0x17]
  40ab11:	or     eax,0xb9ec74e1
  40ab16:	adc    ebx,eax
  40ab18:	pop    ds
  40ab19:	(bad)  
  40ab1a:	lods   al,BYTE PTR ds:[esi]
  40ab1b:	pop    eax
  40ab1c:	add    ecx,DWORD PTR [ecx+0x1a5bbecf]
  40ab22:	xchg   ebx,eax
  40ab23:	fbld   TBYTE PTR [eax-0x80]
  40ab26:	pop    ebp
  40ab27:	sahf   
  40ab28:	cli    
  40ab29:	aas    
  40ab2a:	test   eax,0x5688556b
  40ab2f:	test   eax,0x3be77077
  40ab34:	out    dx,al
  40ab35:	adc    dl,BYTE PTR [ecx+0x13]
  40ab38:	call   0xa76b1d6b
  40ab3d:	data16 and al,0x21
  40ab40:	push   ss
  40ab41:	sbb    eax,ecx
  40ab43:	or     eax,0x2a
  40ab46:	mov    esp,0x3de9c0fa
  40ab4b:	nop
  40ab4c:	and    DWORD PTR [esi],esi
  40ab4e:	pop    esi
  40ab4f:	dec    edi
  40ab50:	(bad)  
  40ab51:	(bad)
  40ab54:	addr16 push esi
  40ab56:	inc    ebx
  40ab57:	mov    ebx,0x9f672df5
  40ab5c:	shl    ebp,cl
  40ab5e:	xchg   edx,eax
  40ab5f:	push   edx
  40ab60:	xchg   esi,eax
  40ab61:	mov    eax,0x6b322b7d
  40ab66:	enter  0xccc5,0x3f
  40ab6a:	fwait
  40ab6b:	cmp    DWORD PTR ds:0x15da4b3,0x48
  40ab72:	or     edx,edi
  40ab74:	cmp    edi,DWORD PTR [edx+ebx*4+0x73a037bf]
  40ab7b:	sbb    dl,dh
  40ab7d:	push   es
  40ab7e:	(bad)  [edx]
  40ab80:	mov    ds:0x2faff7b3,al
  40ab85:	mov    esi,0x8dfd2402
  40ab8a:	mov    al,ds:0xe41785ee
  40ab8f:	jb     0x40abe9
  40ab91:	pop    edx
  40ab92:	in     al,0x88
  40ab94:	enter  0x191a,0x7a
  40ab98:	pop    ss
  40ab99:	xor    DWORD PTR [esi+0x5a],ecx
  40ab9c:	das    
  40ab9d:	sbb    bh,bl
  40ab9f:	mov    ebx,0x9e8fa756
  40aba4:	repz repnz sub edx,ebx
  40aba8:	mov    ecx,0x5fb367
  40abad:	dec    ebx
  40abae:	out    0x84,al
  40abb0:	mov    esp,0x1aec3305
  40abb5:	jle    0x40ac05
  40abb7:	xchg   ecx,eax
  40abb8:	aad    0xec
  40abba:	arpl   WORD PTR [eax-0x45],di
  40abbd:	rol    BYTE PTR [edx+0x26],cl
  40abc0:	ficomp DWORD PTR [ebx+0x48]
  40abc3:	sub    BYTE PTR [ebp-0x2407dbad],bl
  40abc9:	mov    bl,0x4b
  40abcb:	cdq    
  40abcc:	push   cs
  40abcd:	fld    TBYTE PTR [eax-0xc]
  40abd0:	in     eax,0x5
  40abd2:	retf   
  40abd3:	add    DWORD PTR [edx+0x50640dfd],0xffffff8f
  40abda:	mov    eax,0xe93cf87d
  40abdf:	in     al,dx
  40abe0:	cdq    
  40abe1:	cmp    esp,eax
  40abe3:	test   BYTE PTR [eax-0x64],dh
  40abe6:	dec    eax
  40abe7:	sbb    BYTE PTR [ebx+0x1c3d55f],cl
  40abed:	sbb    BYTE PTR [esp+eax*1-0x5a1e61f],ah
  40abf4:	or     eax,0xd96a678d
  40abf9:	and    ah,cl
  40abfb:	aaa    
  40abfc:	or     al,0xde
  40abfe:	out    dx,al
  40abff:	ss cmc 
  40ac01:	out    dx,eax
  40ac02:	push   cs
  40ac03:	(bad)  
  40ac04:	jae    0x40ac79
  40ac06:	rol    DWORD PTR [ecx],cl
  40ac08:	xor    ch,bl
  40ac0a:	xchg   ebx,eax
  40ac0b:	push   0x27
  40ac0d:	inc    edx
  40ac0e:	icebp  
  40ac0f:	ja     0x40aba2
  40ac11:	outs   dx,BYTE PTR ds:[esi]
  40ac12:	jae    0x40abfd
  40ac14:	push   ebp
  40ac15:	sub    bl,BYTE PTR [edx-0x3eca17aa]
  40ac1b:	pop    ebx
  40ac1c:	pop    edx
  40ac1d:	mov    DWORD PTR [edi-0x1f],edx
  40ac20:	jbe    0x40ac43
  40ac22:	mov    edx,0x59759cbe
  40ac27:	fld    TBYTE PTR [esi]
  40ac29:	adc    DWORD PTR [edx-0x62],ebp
  40ac2c:	push   ebx
  40ac2d:	leave  
  40ac2e:	jmp    0xe8e5:0xdd69b45f
  40ac35:	jmp    0xa46d26c0
  40ac3a:	lds    esp,FWORD PTR [ebx]
  40ac3c:	call   0x9587:0x366dca5
  40ac43:	(bad)  
  40ac44:	cmc    
  40ac45:	call   0xf48d:0x441df0d
  40ac4c:	dec    edx
  40ac4d:	(bad)  
  40ac4e:	mov    gs,WORD PTR [ebp-0x188dc705]
  40ac54:	leave  
  40ac55:	push   ss
  40ac56:	outs   dx,DWORD PTR ds:[esi]
  40ac57:	xchg   ebp,eax
  40ac58:	scas   eax,DWORD PTR es:[edi]
  40ac59:	push   esi
  40ac5a:	push   ebp
  40ac5b:	mov    ds:0x65b3d5d1,al
  40ac60:	call   0x5cf5:0x2ecdf3ad
  40ac67:	fs adc al,0x7c
  40ac6a:	push   edx
  40ac6b:	fdiv   QWORD PTR [eax-0x3bacb596]
  40ac71:	and    al,0x63
  40ac73:	and    esp,DWORD PTR ds:0x2164652a
  40ac79:	or     ebp,esp
  40ac7b:	xor    DWORD PTR [edx-0x1186224],edi
  40ac81:	mov    ds:0x8a6c1da3,eax
  40ac86:	lds    edx,FWORD PTR [edi+0x322a61ba]
  40ac8c:	adc    eax,0x84f758b6
  40ac91:	mov    ebp,0xe4338c44
  40ac96:	stc    
  40ac97:	ins    DWORD PTR es:[edi],dx
  40ac98:	cmp    eax,0xb3af97ca
  40ac9d:	stos   BYTE PTR es:[edi],al
  40ac9e:	jae    0x40acae
  40aca0:	jp     0x40ac3e
  40aca2:	jp     0x40aca5
  40aca4:	adc    cl,cl
  40aca6:	push   0x5e
  40aca8:	cmp    BYTE PTR [edi+0x0],dl
  40acab:	pop    edx
  40acac:	in     eax,dx
  40acad:	out    dx,eax
  40acae:	icebp  
  40acaf:	cmp    cl,bh
  40acb1:	mov    ebx,0xbbaa6994
  40acb6:	jb     0x40ad24
  40acb8:	xchg   esi,eax
  40acb9:	test   DWORD PTR [edx+eax*2+0x6f664129],0xe946ab2c
  40acc4:	fisttp QWORD PTR [edi]
  40acc6:	out    dx,eax
  40acc7:	adc    al,BYTE PTR [esi-0x76222355]
  40accd:	test   BYTE PTR ds:0xa33cd381,0x8b
  40acd4:	hlt    
  40acd5:	in     eax,dx
  40acd6:	xor    DWORD PTR [edx+0x4272c6c0],eax
  40acdc:	mov    al,0x58
  40acde:	pop    es
  40acdf:	repz push cs
  40ace1:	aaa    
  40ace2:	sub    al,0x6b
  40ace4:	push   0xd1b43eb
  40ace9:	push   ds
  40acea:	arpl   WORD PTR [ecx],bp
  40acec:	aam    0x34
  40acee:	imul   ebp,DWORD PTR [ebx],0xffffffee
  40acf1:	adc    esi,DWORD PTR [ecx+0x46899682]
  40acf7:	fist   WORD PTR [edi]
  40acf9:	arpl   WORD PTR [ebx+0x624074e3],cx
  40acff:	pop    ss
  40ad00:	aam    0x70
  40ad02:	sbb    bh,BYTE PTR [ecx-0x1c]
  40ad05:	sub    BYTE PTR ds:0xfff5e94,dl
  40ad0b:	and    al,0x9
  40ad0d:	or     DWORD PTR [edx+0x34bb2c21],ebx
  40ad13:	adc    esi,DWORD PTR [eax+edx*2-0x1b280a7e]
  40ad1a:	mov    bl,0x58
  40ad1c:	push   ebx
  40ad1d:	std    
  40ad1e:	mov    dh,0x96
  40ad20:	xchg   ebp,eax
  40ad21:	cld    
  40ad22:	repz jmp 0xa3fe:0xc799548c
  40ad2a:	(bad)  
  40ad2c:	std    
  40ad2d:	(bad)  
  40ad2e:	into   
  40ad2f:	popf   
  40ad30:	inc    edx
  40ad31:	dec    BYTE PTR [esi+0x3c167420]
  40ad37:	sbb    al,0x10
  40ad39:	jnp    0x40ad06
  40ad3b:	or     bh,BYTE PTR [ebp+0x49982e05]
  40ad41:	enter  0x4252,0xff
  40ad45:	hlt    
  40ad46:	pop    ds
  40ad47:	push   es
  40ad48:	mov    dl,0xc0
  40ad4a:	add    eax,0x29aff65f
  40ad4f:	call   0x45109b69
  40ad54:	adc    al,0xbc
  40ad56:	sbb    al,0xdd
  40ad58:	dec    ebp
  40ad59:	xchg   ebp,eax
  40ad5a:	adc    cl,BYTE PTR [ebx-0x3b4f71a5]
  40ad60:	(bad)
  40ad64:	mov    ds:0x634cbd9f,eax
  40ad69:	stc    
  40ad6a:	jge    0x40ade8
  40ad6c:	es inc ecx
  40ad6e:	into   
  40ad6f:	cmp    DWORD PTR [esi+0x42bc3366],ebx
  40ad75:	xlat   BYTE PTR ds:[ebx]
  40ad76:	ret    
  40ad77:	pop    ebp
  40ad78:	xchg   ebx,eax
  40ad79:	data16 and al,0xf9
  40ad7c:	xchg   ecx,eax
  40ad7d:	jle    0x40adaa
  40ad7f:	test   al,0x29
  40ad81:	mov    edx,0x58039fb9
  40ad86:	outs   dx,BYTE PTR ds:[esi]
  40ad87:	call   0x7a8d75cc
  40ad8c:	jg     0x40adfd
  40ad8e:	jmp    0x40adcc
  40ad90:	inc    ebx
  40ad91:	and    al,BYTE PTR [eax-0x2]
  40ad94:	sub    eax,0xc2eb55cc
  40ad99:	sub    cl,BYTE PTR [ebx-0x48f013bb]
  40ad9f:	or     eax,0x42915f
  40ada4:	or     DWORD PTR ds:0x4291e7,ecx
  40adaa:	mov    ecx,DWORD PTR [ebp+0x8]
  40adad:	add    ecx,DWORD PTR [eax+0x1c]
  40adb0:	mov    DWORD PTR [ebp-0x14],ecx
  40adb3:	mov    DWORD PTR ds:0x4291d3,0x1651
  40adbd:	jmp    0x40d2ae
  40adc2:	mov    eax,DWORD PTR [ebp-0x2c]
  40adc5:	and    DWORD PTR ds:0x4291c3,0x0
  40adcf:	jmp    0x40ade1
  40add4:	mov    ecx,DWORD PTR ds:0x4291c3
  40adda:	inc    ecx
  40addb:	mov    DWORD PTR ds:0x4291c3,ecx
  40ade1:	cmp    DWORD PTR ds:0x4291c3,0x1e
  40ade8:	jae    0x40ae37
  40adee:	cmp    DWORD PTR ds:0x4291c3,0x10
  40adf5:	jbe    0x40ae37
  40adfb:	jmp    0x40ae18
  40ae00:	push   0x54af
  40ae05:	push   0x428000
  40ae0a:	push   0x42810e
  40ae0f:	push   DWORD PTR [ebp-0x10]
  40ae12:	call   DWORD PTR ds:0x42a66b
  40ae18:	cmp    DWORD PTR ds:0x4291c3,0xf
  40ae1f:	jne    0x40ae32
  40ae25:	mov    ecx,DWORD PTR ds:0x4291c3
  40ae2b:	inc    ecx
  40ae2c:	mov    DWORD PTR ds:0x4291c3,ecx
  40ae32:	jmp    0x40add4
  40ae37:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae3a:	add    ecx,DWORD PTR [eax+ebx*4]
  40ae3d:	and    DWORD PTR ds:0x4291df,0x0
  40ae47:	jmp    0x40ae57
  40ae4c:	mov    eax,ds:0x4291df
  40ae51:	inc    eax
  40ae52:	mov    ds:0x4291df,eax
  40ae57:	cmp    DWORD PTR ds:0x4291df,0x10
  40ae5e:	jae    0x40aea1
  40ae64:	cmp    DWORD PTR ds:0x4291df,0x5
  40ae6b:	jb     0x40aea1
  40ae71:	jmp    0x40ae84
  40ae76:	push   0x73ed
  40ae7b:	push   DWORD PTR [ebp-0xc]
  40ae7e:	call   DWORD PTR ds:0x42a66f
  40ae84:	cmp    DWORD PTR ds:0x4291df,0x4
  40ae8b:	jne    0x40ae9c
  40ae91:	mov    eax,ds:0x4291df
  40ae96:	inc    eax
  40ae97:	mov    ds:0x4291df,eax
  40ae9c:	jmp    0x40ae4c
  40aea1:	mov    DWORD PTR [ebp-0x28],ecx
  40aea4:	add    ecx,DWORD PTR ds:0x429183
  40aeaa:	mov    eax,DWORD PTR [ebp-0x4]
  40aead:	xor    DWORD PTR ds:0x42916b,ebx
  40aeb3:	mov    ecx,DWORD PTR [ebp-0x28]
  40aeb6:	xor    eax,esi
  40aeb8:	jmp    0x40d26c
  40aebd:	add    BYTE PTR [ecx],dh
  40aebf:	cld    
  40aec0:	sbb    esp,ecx
  40aec2:	nop
  40aec3:	and    BYTE PTR [eax],0xe5
  40aec6:	push   eax
  40aec7:	(bad)  [edi-0x7e442743]
  40aecd:	sub    al,0xf1
  40aecf:	add    DWORD PTR [ebx-0x7c7ca318],0x17
  40aed6:	retf   
  40aed7:	mov    DWORD PTR [esi-0x1e],eax
  40aeda:	lods   al,BYTE PTR ds:[esi]
  40aedb:	mov    ds:0xd63f6ee8,al
  40aee0:	das    
  40aee1:	lods   al,BYTE PTR ds:[esi]
  40aee2:	xchg   esp,eax
  40aee3:	test   DWORD PTR [edi+ebx*8+0xc],ebx
  40aee7:	inc    esp
  40aee8:	and    BYTE PTR [ebp+ebp*4+0x73],cl
  40aeec:	sbb    eax,0x14
  40aeef:	lock add BYTE PTR [ecx-0x16541fe3],cl
  40aef6:	in     al,0x53
  40aef8:	enter  0x1066,0x79
  40aefc:	pop    ecx
  40aefd:	push   ebx
  40aefe:	xchg   BYTE PTR [ebx],dl
  40af00:	sub    al,0x5a
  40af02:	int3   
  40af03:	jae    0x40ae90
  40af05:	shl    bl,0xa
  40af08:	sti    
  40af09:	ja     0x40aeed
  40af0b:	cmp    DWORD PTR [edx+ebp*8-0x7c0eb5bc],esi
  40af12:	(bad)  
  40af13:	adc    eax,0x292c3afc
  40af18:	fs daa 
  40af1a:	pop    es
  40af1b:	xchg   edx,eax
  40af1c:	lods   eax,DWORD PTR ds:[esi]
  40af1d:	push   ebx
  40af1e:	mov    bh,BYTE PTR [esi+edx*2+0x14e041c3]
  40af25:	jne    0x40af00
  40af27:	or     BYTE PTR [edx-0x41421567],dh
  40af2d:	aaa    
  40af2e:	popa   
  40af2f:	mov    ah,0x6a
  40af31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af32:	(bad)  
  40af34:	mov    WORD PTR [esi],fs
  40af36:	mov    edx,esi
  40af38:	inc    esp
  40af39:	jmp    0xdeb6:0xad7cbbc5
  40af40:	or     bl,bl
  40af42:	mov    dh,0xeb
  40af44:	pop    edx
  40af45:	jmp    DWORD PTR [ebp-0x266593cd]
  40af4b:	loope  0x40af0e
  40af4d:	push   edx
  40af4e:	and    al,0x5a
  40af50:	rcr    ah,1
  40af52:	inc    edx
  40af53:	ret    
  40af54:	cli    
  40af55:	enter  0x3435,0x7
  40af59:	pop    eax
  40af5a:	test   BYTE PTR [ebx-0x6142e965],bl
  40af60:	xor    DWORD PTR [ecx+0xf3d185b],esi
  40af66:	fldcw  WORD PTR [eax]
  40af68:	xchg   BYTE PTR [esi-0x13],dh
  40af6b:	dec    ebp
  40af6c:	mov    cl,0xae
  40af6e:	adc    al,0xdf
  40af70:	add    eax,0x28aa7229
  40af75:	(bad)  
  40af76:	imul   ebx,ebx,0xe06191ca
  40af7c:	mov    dl,0x58
  40af7e:	imul   ebx,DWORD PTR [ebp+ebp*8+0x32960f6e],0xffffffe3
  40af86:	dec    edi
  40af87:	push   ebp
  40af88:	inc    ebx
  40af89:	mov    edx,0x85bb3375
  40af8e:	push   cs
  40af8f:	ins    DWORD PTR es:[edi],dx
  40af90:	stc    
  40af91:	stc    
  40af92:	mov    dh,0x6c
  40af94:	jns    0x40af22
  40af96:	std    
  40af97:	mov    ebx,0x301b2a3b
  40af9c:	jo     0x40af63
  40af9e:	sbb    edi,DWORD PTR [edi]
  40afa0:	mov    ds:0x1dfa6e77,al
  40afa5:	sub    al,0xb0
  40afa7:	stos   DWORD PTR es:[edi],eax
  40afa8:	mov    dl,BYTE PTR [eax-0x2f]
  40afab:	cmp    DWORD PTR [eax],0x22c7a362
  40afb1:	gs in  eax,dx
  40afb3:	outs   dx,BYTE PTR gs:[esi]
  40afb5:	jbe    0x40b000
  40afb7:	iret   
  40afb8:	loope  0x40af96
  40afba:	jne    0x40afe0
  40afbc:	cdq    
  40afbd:	aam    0x9f
  40afbf:	adc    cl,dl
  40afc1:	(bad)  
  40afc2:	pop    edi
  40afc3:	aad    0x9d
  40afc5:	pusha  
  40afc6:	into   
  40afc7:	xor    eax,0x9d6e12b6
  40afcc:	jmp    0x4168:0xa328a27b
  40afd3:	inc    esi
  40afd4:	gs sub eax,0x490c155b
  40afda:	xchg   ebx,eax
  40afdb:	push   0x7730274c
  40afe0:	lock mov ds:0xc5e6e070,eax
  40afe6:	cmc    
  40afe7:	jns    0x40b034
  40afe9:	sbb    DWORD PTR [ebx-0x1c],edi
  40afec:	ret    
  40afed:	out    0x20,eax
  40afef:	cmp    dl,0xea
  40aff2:	mov    ds,ebp
  40aff4:	mov    ds:0xd70b04fb,eax
  40aff9:	out    0x5e,al
  40affb:	test   DWORD PTR [ebp-0xbfff1e4],ebx
  40b001:	push   ds
  40b002:	xor    edx,DWORD PTR [ebx+0x2d928fb0]
  40b008:	sub    al,0xb3
  40b00a:	add    ebp,eax
  40b00c:	jp     0x40b048
  40b00e:	(bad)  
  40b00f:	inc    ecx
  40b010:	out    0xf5,al
  40b012:	shr    DWORD PTR [edi],0x3d
  40b015:	add    al,0x93
  40b017:	cmp    BYTE PTR [edx+0x67ef4d99],ah
  40b01d:	stos   DWORD PTR es:[edi],eax
  40b01e:	pusha  
  40b01f:	cdq    
  40b020:	mov    esi,0x9b95d4e1
  40b025:	stc    
  40b026:	ret    0x47b4
  40b029:	inc    ebx
  40b02a:	and    edi,DWORD PTR [esi+0x73]
  40b02d:	rcl    DWORD PTR [ebp-0x6f],cl
  40b030:	int    0x67
  40b032:	rol    edi,1
  40b034:	ret    0xda19
  40b037:	int3   
  40b038:	sub    DWORD PTR [ecx],eax
  40b03a:	inc    edi
  40b03b:	jbe    0x40b052
  40b03d:	aam    0xe5
  40b03f:	sti    
  40b040:	ja     0x40b0b6
  40b042:	jnp    0x40b006
  40b044:	xor    ch,ah
  40b046:	xchg   edi,eax
  40b047:	mov    ebp,cs
  40b049:	lock sbb eax,esi
  40b04c:	xchg   ebp,eax
  40b04d:	mov    al,0xe9
  40b04f:	pop    esp
  40b050:	shl    DWORD PTR [edx-0x74efd067],cl
  40b056:	adc    BYTE PTR [edi-0x12],cl
  40b059:	inc    ecx
  40b05a:	push   ss
  40b05b:	or     eax,0xd846eef3
  40b060:	push   ss
  40b061:	and    eax,0x2908e853
  40b066:	jecxz  0x40b0e0
  40b068:	pop    ss
  40b069:	fs xchg ebx,eax
  40b06b:	stc    
  40b06c:	jmp    0x3ed3d70f
  40b071:	sbb    ebx,DWORD PTR [ebx+0x71]
  40b074:	test   eax,0xc06d20f9
  40b079:	ins    BYTE PTR es:[edi],dx
  40b07a:	mov    bh,0x56
  40b07c:	inc    ebx
  40b07d:	dec    ebx
  40b07e:	or     dl,BYTE PTR [ecx]
  40b080:	das    
  40b081:	and    DWORD PTR [esi-0x3d],edi
  40b084:	dec    DWORD PTR [ebp-0x2a]
  40b087:	and    edx,ebx
  40b089:	jge    0x40b00c
  40b08b:	inc    edx
  40b08c:	mov    edi,0xb347e83e
  40b091:	daa    
  40b092:	xchg   BYTE PTR [edx],dl
  40b094:	(bad)  
  40b095:	mov    ch,0x78
  40b097:	lods   al,BYTE PTR ds:[esi]
  40b098:	sbb    ecx,0xac706c8f
  40b09e:	cmc    
  40b09f:	js     0x40b117
  40b0a1:	mov    ah,0xca
  40b0a3:	sub    DWORD PTR [edi],esi
  40b0a5:	push   esi
  40b0a6:	adc    BYTE PTR [esi+0x4c],ah
  40b0a9:	xchg   DWORD PTR [ecx+0x3],eax
  40b0ac:	add    al,ch
  40b0ae:	add    eax,0xe5a24c9d
  40b0b3:	lods   al,BYTE PTR ds:[esi]
  40b0b4:	fwait
  40b0b5:	ja     0x40b0f4
  40b0b7:	mov    eax,ds:0x214ad0e3
  40b0bc:	pushf  
  40b0bd:	pop    eax
  40b0be:	test   eax,0x9b732057
  40b0c3:	fmulp  st(4),st
  40b0c5:	mov    ah,ah
  40b0c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0c8:	and    dl,ch
  40b0ca:	add    ecx,DWORD PTR [eax+esi*1+0x7365beb3]
  40b0d1:	mov    WORD PTR ds:0x4d6a502,fs
  40b0d7:	xchg   esp,eax
  40b0d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0d9:	ret    0x4936
  40b0dc:	not    DWORD PTR [edi+0x53]
  40b0df:	ficomp WORD PTR [eax]
  40b0e1:	mov    ebx,0x3265e435
  40b0e6:	(bad)  
  40b0e7:	repz (bad) 
  40b0e9:	adc    eax,0x7b12b05a
  40b0ee:	inc    ebx
  40b0ef:	xchg   BYTE PTR [edi-0x48],dh
  40b0f2:	sbb    edx,DWORD PTR [eax+0x56]
  40b0f5:	dec    eax
  40b0f6:	or     cl,BYTE PTR [ebx-0x63da716c]
  40b0fc:	xor    DWORD PTR [edx],eax
  40b0fe:	test   BYTE PTR [eax-0x7cf9e206],dl
  40b104:	add    dl,BYTE PTR [eax+eax*2-0x2b]
  40b108:	loopne 0x40b12e
  40b10a:	xchg   eax,eax
  40b10c:	out    dx,al
  40b10d:	mov    bh,0xcd
  40b10f:	ret    
  40b110:	pop    edx
  40b111:	jle    0x40b133
  40b113:	(bad)  
  40b114:	adc    DWORD PTR [eax+0x14515735],ebx
  40b11a:	fdiv   QWORD PTR [ebx+0x5f]
  40b11d:	call   0x3cba:0x1dfc8851
  40b124:	jnp    0x40b0de
  40b126:	stc    
  40b127:	arpl   WORD PTR [ecx+0x5b],di
  40b12a:	pusha  
  40b12b:	mov    ds:0xa2b53,eax
  40b130:	pop    es
  40b131:	push   ebx
  40b132:	sahf   
  40b133:	ss add al,0x5e
  40b136:	inc    esi
  40b137:	sahf   
  40b138:	dec    edx
  40b139:	sbb    BYTE PTR [esi-0x5a3cc99c],bh
  40b13f:	pop    ebx
  40b140:	clc    
  40b141:	mov    ebx,0x4daa363b
  40b146:	in     eax,0x93
  40b148:	into   
  40b149:	test   al,0xc9
  40b14b:	dec    ecx
  40b14c:	cmp    BYTE PTR [edi+0x965f5e5],0xa9
  40b153:	(bad)  [esi-0x44]
  40b156:	mov    ecx,0x1779d1dc
  40b15b:	into   
  40b15c:	or     esp,eax
  40b15e:	jae    0x40b1bb
  40b160:	outs   dx,BYTE PTR ds:[esi]
  40b161:	aad    0x97
  40b163:	dec    edx
  40b164:	ss loopne 0x40b0fa
  40b167:	jmp    0x40b166
  40b169:	or     cl,BYTE PTR [ebp+0x4e]
  40b16c:	fild   WORD PTR [eax-0xff2c9c3]
  40b172:	into   
  40b173:	dec    eax
  40b174:	add    DWORD PTR [esi+0xcb5e3d7],ebx
  40b17a:	dec    eax
  40b17b:	test   eax,0x53c38305
  40b180:	int    0xc6
  40b182:	out    dx,eax
  40b183:	retf   
  40b184:	pushf  
  40b185:	mov    ds:0x91893ed6,al
  40b18a:	call   0x3f83:0x3488a932
  40b191:	das    
  40b192:	sub    DWORD PTR [ebx-0x1ace59b9],ecx
  40b198:	test   eax,0x91dc1122
  40b19d:	ss js  0x40b138
  40b1a0:	inc    ecx
  40b1a1:	adc    eax,0x8533cbae
  40b1a6:	in     eax,dx
  40b1a7:	scas   al,BYTE PTR es:[edi]
  40b1a8:	jmp    0x40b155
  40b1aa:	(bad)  
  40b1ab:	imul   al
  40b1ad:	or     al,0x48
  40b1af:	push   0x11cc3bc1
  40b1b4:	inc    edi
  40b1b5:	xchg   ebx,eax
  40b1b6:	call   0x99ab:0x60c36c1d
  40b1bd:	push   cs
  40b1be:	je     0x40b194
  40b1c0:	nop
  40b1c1:	pop    ecx
  40b1c2:	int    0x21
  40b1c4:	jp     0x40b23a
  40b1c6:	ret    0xac5d
  40b1c9:	mov    edx,0x2e00a998
  40b1ce:	test   eax,0xf3d0851
  40b1d3:	cli    
  40b1d4:	mov    bl,0xbb
  40b1d6:	lahf   
  40b1d7:	in     eax,dx
  40b1d8:	dec    edx
  40b1d9:	mov    fs,eax
  40b1db:	icebp  
  40b1dc:	pop    es
  40b1dd:	call   0xea05779f
  40b1e2:	jle    0x40b1d0
  40b1e4:	sahf   
  40b1e5:	mov    ecx,0x4b45d025
  40b1ea:	std    
  40b1eb:	leave  
  40b1ec:	xlat   BYTE PTR ds:[ebx]
  40b1ed:	ffreep st(6)
  40b1ef:	daa    
  40b1f0:	mov    es,WORD PTR [edx+0x6d]
  40b1f3:	xchg   edi,eax
  40b1f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1f5:	call   DWORD PTR [ebp+0x4209e946]
  40b1fb:	cmp    al,0x62
  40b1fd:	lds    ebx,FWORD PTR [eax-0x6c]
  40b200:	add    BYTE PTR [edx-0x1f872c4b],ah
  40b206:	retf   0x636a
  40b209:	push   ss
  40b20a:	mov    edx,0x118678bf
  40b20f:	int    0xca
  40b211:	ins    DWORD PTR es:[edi],dx
  40b212:	into   
  40b213:	mov    ch,0x3c
  40b215:	loope  0x40b26e
  40b217:	popw   ss
  40b219:	jecxz  0x40b1b4
  40b21b:	ss mov esp,0xaf220959
  40b221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b222:	aas    
  40b223:	jne    0x40b220
  40b225:	dec    ebp
  40b226:	outs   dx,BYTE PTR ds:[esi]
  40b227:	push   esi
  40b228:	scas   eax,DWORD PTR es:[edi]
  40b229:	xor    al,0x88
  40b22b:	and    BYTE PTR [eax],al
  40b22d:	call   0x124c:0x604c805
  40b234:	mov    ds:0x8c19eb27,eax
  40b239:	push   edi
  40b23a:	and    al,0x66
  40b23c:	outs   dx,BYTE PTR ds:[esi]
  40b23d:	shl    DWORD PTR [eax-0x1d0f21c5],0x4a
  40b244:	dec    edi
  40b245:	inc    ebp
  40b246:	rcr    esp,cl
  40b248:	mov    es,WORD PTR [ebp-0x1855d793]
  40b24e:	pushf  
  40b24f:	xchg   DWORD PTR [esp+ebp*4],ecx
  40b252:	scas   al,BYTE PTR es:[edi]
  40b253:	adc    al,0x10
  40b255:	jmp    0xebc37d1c
  40b25a:	mov    bl,0xc3
  40b25c:	sbb    dh,bh
  40b25e:	(bad)  
  40b25f:	xor    al,BYTE PTR [edi+0x1e]
  40b262:	ret    
  40b263:	push   eax
  40b264:	addr16 mov esp,0xed8574af
  40b26a:	inc    esp
  40b26b:	loope  0x40b250
  40b26d:	int3   
  40b26e:	pop    es
  40b26f:	add    BYTE PTR [ecx],cl
  40b271:	xchg   ebx,eax
  40b272:	inc    ebp
  40b273:	loope  0x40b2f0
  40b275:	xor    ebp,DWORD PTR [edi-0x2b250938]
  40b27b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b27c:	imul   esi,DWORD PTR [ebx],0x8cca1ce
  40b282:	shl    DWORD PTR [edi],cl
  40b284:	stc    
  40b285:	xor    DWORD PTR [esi-0x51],esp
  40b288:	imul   esi,DWORD PTR [eax+0x7de2648f],0x3e
  40b28f:	inc    esp
  40b290:	inc    ecx
  40b291:	js     0x40b221
  40b293:	outs   dx,DWORD PTR ds:[esi]
  40b294:	dec    ebx
  40b295:	jg     0x40b2de
  40b297:	fisub  DWORD PTR [ebx-0x3b890c39]
  40b29d:	test   BYTE PTR [esi+0x2a46df0],dh
  40b2a3:	xor    DWORD PTR [ecx-0x7b],edi
  40b2a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2a7:	fs sub al,0xb6
  40b2aa:	push   edx
  40b2ab:	mov    WORD PTR [esi+0x2b],?
  40b2ae:	sti    
  40b2af:	(bad)  
  40b2b1:	xchg   edx,eax
  40b2b2:	xor    BYTE PTR [edi-0x5a],ah
  40b2b5:	leave  
  40b2b6:	add    eax,0x6451e29b
  40b2bb:	rol    DWORD PTR [eax+0xd77f7cd],1
  40b2c1:	ja     0x40b24e
  40b2c3:	nop
  40b2c4:	mov    dh,0x71
  40b2c6:	fstp   QWORD PTR [edi-0x800da11]
  40b2cc:	popf   
  40b2cd:	xchg   esp,eax
  40b2ce:	ins    BYTE PTR es:[edi],dx
  40b2cf:	push   es
  40b2d0:	mov    esp,0x9adf0265
  40b2d5:	pop    ebp
  40b2d6:	xchg   esp,eax
  40b2d7:	fidiv  DWORD PTR [edi-0x65]
  40b2da:	stos   DWORD PTR es:[edi],eax
  40b2db:	ds daa 
  40b2dd:	adc    al,0xb9
  40b2df:	push   ds
  40b2e0:	inc    ecx
  40b2e1:	cwde   
  40b2e2:	adc    eax,0xf2083542
  40b2e7:	ffree  st(7)
  40b2e9:	push   edi
  40b2ea:	fisttp DWORD PTR [ecx+ebp*1]
  40b2ed:	jge    0x40b30d
  40b2ef:	jg     0x40b32e
  40b2f1:	out    0x38,eax
  40b2f3:	and    bl,bl
  40b2f5:	fcom   QWORD PTR [ecx]
  40b2f7:	mov    edi,ecx
  40b2f9:	xchg   esi,eax
  40b2fa:	scas   al,BYTE PTR es:[edi]
  40b2fb:	ret    0x59e2
  40b2fe:	not    BYTE PTR [ecx+0x2e]
  40b301:	adc    al,0xdf
  40b303:	lea    ebp,[esi]
  40b305:	push   ebx
  40b306:	xor    al,0xfa
  40b308:	cwde   
  40b309:	repz call 0x3326:0x5e4ab992
  40b311:	(bad)  
  40b312:	xchg   edx,eax
  40b313:	mov    BYTE PTR [eax-0x30],ah
  40b316:	shl    BYTE PTR [ebx+0x1c],cl
  40b319:	pop    ss
  40b31a:	iret   
  40b31b:	rol    esp,cl
  40b31d:	inc    esp
  40b31e:	inc    esi
  40b31f:	pop    ds
  40b320:	dec    DWORD PTR [ebp-0x5a]
  40b323:	sbb    DWORD PTR [esi+0x2c],0x42
  40b327:	pop    edi
  40b328:	adc    dh,al
  40b32a:	retf   0xaf95
  40b32d:	and    al,0x6e
  40b32f:	(bad)  
  40b330:	aad    0xb7
  40b332:	mov    ecx,0xe174bab0
  40b337:	push   0x17
  40b339:	fucomi st,st(3)
  40b33b:	sub    DWORD PTR [esi-0x1793f54d],eax
  40b341:	pop    ebp
  40b342:	ins    BYTE PTR es:[edi],dx
  40b343:	rol    DWORD PTR [ebx+ebx*8],1
  40b346:	out    0x9,al
  40b348:	bound  esp,QWORD PTR [esi+eax*2]
  40b34b:	mov    ebx,0xb454872f
  40b350:	ret    
  40b351:	daa    
  40b352:	jle    0x40b3c4
  40b354:	push   ebx
  40b355:	loope  0x40b38b
  40b357:	mov    al,BYTE PTR [ebx]
  40b359:	xor    eax,0xf523feef
  40b35e:	mov    dh,0xa7
  40b360:	pop    edi
  40b361:	sub    eax,0x26456b35
  40b366:	adc    edx,ebx
  40b368:	and    eax,0xd464e3e9
  40b36d:	cmp    eax,ebx
  40b36f:	xor    eax,0x58d605c9
  40b374:	nop
  40b375:	sahf   
  40b376:	ss add al,0x90
  40b379:	xor    eax,0xe0583aec
  40b37e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b37f:	repnz arpl WORD PTR [ebp+eiz*2-0x234f6b4a],si
  40b387:	cs cld 
  40b389:	jno    0x40b3ee
  40b38b:	lds    esi,FWORD PTR [edi-0x106081d2]
  40b391:	int    0x27
  40b393:	cmp    DWORD PTR [esi+0x36],edx
  40b396:	jg     0x40b40a
  40b398:	repz mul DWORD PTR [eax]
  40b39b:	stc    
  40b39c:	je     0x40b342
  40b39e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b39f:	adc    al,0xa1
  40b3a1:	repnz inc esi
  40b3a3:	push   ecx
  40b3a4:	fst    DWORD PTR [ecx-0x79b5b345]
  40b3aa:	lock and al,BYTE PTR ds:0x241a4e81
  40b3b1:	repz sti 
  40b3b3:	cmp    DWORD PTR [ebx-0x2e0c7038],edx
  40b3b9:	rcr    BYTE PTR [edi+ecx*4+0x6ade251e],0x6
  40b3c1:	fcmovne st,st(0)
  40b3c3:	wbinvd 
  40b3c5:	sub    al,0x50
  40b3c7:	fsubr  QWORD PTR [eax-0x5b]
  40b3ca:	outs   dx,BYTE PTR ds:[esi]
  40b3cb:	jecxz  0x40b42b
  40b3cd:	adc    ah,0x7b
  40b3d0:	leave  
  40b3d1:	lock sbb DWORD PTR [esi+ebx*2+0x45],ecx
  40b3d6:	mov    edx,0x9abcd769
  40b3db:	push   ds
  40b3dc:	pop    edi
  40b3dd:	jg     0x40b405
  40b3df:	in     al,0x55
  40b3e1:	and    eax,DWORD PTR [eax+ebx*2]
  40b3e4:	lods   eax,DWORD PTR ds:[esi]
  40b3e5:	int3   
  40b3e6:	jg     0x40b40b
  40b3e8:	xchg   ebx,eax
  40b3e9:	cmp    al,BYTE PTR [ebx+0x75ccc200]
  40b3ef:	imul   BYTE PTR [esi-0x72bd21c1]
  40b3f5:	or     DWORD PTR [edi-0x5f],esi
  40b3f8:	popf   
  40b3f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3fa:	inc    edx
  40b3fb:	mov    dh,0xf3
  40b3fd:	sub    eax,0xf06b4725
  40b402:	jo     0x40b41c
  40b404:	dec    esi
  40b405:	mov    BYTE PTR [edi-0x7e],dl
  40b408:	inc    eax
  40b409:	push   eax
  40b40a:	dec    ebp
  40b40b:	inc    ecx
  40b40c:	cmp    dh,BYTE PTR [esi]
  40b40e:	mov    ebp,0x7171a2b8
  40b413:	cmp    dh,BYTE PTR [edi+edi*8+0x27c21a47]
  40b41a:	loopne 0x40b3c4
  40b41c:	cmp    dh,BYTE PTR [ecx+0x4e4c5ca3]
  40b422:	into   
  40b423:	stos   BYTE PTR es:[edi],al
  40b424:	adc    DWORD PTR [edx-0x6d5c3889],ebp
  40b42a:	sahf   
  40b42b:	(bad)  [edx]
  40b42d:	cwde   
  40b42e:	inc    esi
  40b42f:	jmp    0x1085:0x7ab231f5
  40b436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b437:	cdq    
  40b438:	jle    0x40b4b1
  40b43a:	push   esi
  40b43b:	sbb    dl,dl
  40b43d:	sbb    esi,DWORD PTR [edi+0x221f16fc]
  40b443:	mov    edx,0xf0682d76
  40b448:	mov    esp,0xa0ed640b
  40b44d:	test   DWORD PTR [esp+ecx*8-0x30381f6a],esp
  40b454:	(bad)  
  40b455:	pusha  
  40b456:	dec    ebx
  40b457:	in     al,0xa3
  40b459:	jg     0x40b449
  40b45b:	(bad)  
  40b45c:	fadd   DWORD PTR [ecx-0x9]
  40b45f:	add    eax,0xc636c7c1
  40b464:	lea    ebp,[ebx]
  40b466:	sbb    ebp,ebx
  40b468:	pusha  
  40b469:	jno    0x40b3eb
  40b46b:	shl    BYTE PTR [eax],cl
  40b46d:	ds loope 0x40b46f
  40b470:	ss jmp 0x9e3b:0xfbedf807
  40b478:	bound  ebp,QWORD PTR [esi-0x605d02a4]
  40b47e:	mov    ebx,0x5f8e0501
  40b483:	(bad)  
  40b485:	ds rol esp,1
  40b488:	(bad)  
  40b48a:	and    cl,BYTE PTR [ecx]
  40b48c:	mov    al,0x5c
  40b48e:	lds    ebx,FWORD PTR [ebp-0x59950af0]
  40b494:	xor    eax,0xc00fb41f
  40b499:	in     eax,0xea
  40b49b:	or     DWORD PTR [ecx-0x4e],edi
  40b49e:	xchg   dl,ah
  40b4a0:	add    esi,ebx
  40b4a2:	inc    edx
  40b4a3:	adc    eax,ebp
  40b4a5:	xchg   esi,eax
  40b4a6:	pop    ebx
  40b4a7:	inc    ebx
  40b4a8:	xor    ch,bl
  40b4aa:	and    DWORD PTR [edx+0x79],esp
  40b4ad:	xchg   dh,al
  40b4af:	xchg   edx,eax
  40b4b0:	inc    ebp
  40b4b1:	retf   0xd6c9
  40b4b4:	scas   eax,DWORD PTR es:[edi]
  40b4b5:	and    BYTE PTR [edx-0x17a3b6a1],bh
  40b4bb:	in     al,0x37
  40b4bd:	int    0x77
  40b4bf:	rcl    BYTE PTR ds:0x6ff5ae3e,cl
  40b4c5:	jne    0x40b50f
  40b4c7:	sbb    DWORD PTR [edx-0x6fd677d8],ebx
  40b4cd:	push   esp
  40b4ce:	jp     0x40b450
  40b4d0:	data16 loop 0x40b462
  40b4d3:	mov    ch,0x51
  40b4d5:	popw   ss
  40b4d7:	lds    edi,FWORD PTR [edx-0x1798178d]
  40b4dd:	add    cl,BYTE PTR [edx]
  40b4df:	adc    bh,BYTE PTR ds:0xef889d61
  40b4e5:	mov    ah,0xfd
  40b4e7:	sub    al,0x1c
  40b4e9:	jns    0x40b478
  40b4eb:	popa   
  40b4ec:	inc    eax
  40b4ed:	mov    ebx,0x1c39f885
  40b4f2:	sbb    al,0xa3
  40b4f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4f5:	stos   DWORD PTR es:[edi],eax
  40b4f6:	ja     0x40b4ab
  40b4f8:	jmp    0x1d44314a
  40b4fd:	js     0x40b518
  40b4ff:	xchg   esp,eax
  40b500:	fisttp QWORD PTR [eax-0xdec9903]
  40b506:	cmp    BYTE PTR [esi+0xa],0x83
  40b50a:	or     BYTE PTR [ecx+0x36],0xd3
  40b50e:	not    DWORD PTR [esi]
  40b510:	(bad)  
  40b511:	cmp    al,0x79
  40b513:	jp     0x40b4c3
  40b515:	or     DWORD PTR [edi-0x32],esi
  40b518:	sub    ecx,esp
  40b51a:	xor    ebp,ecx
  40b51c:	inc    eax
  40b51d:	jge    0x40b52f
  40b51f:	out    dx,al
  40b520:	lock sub al,0x3e
  40b523:	jecxz  0x40b51e
  40b525:	add    eax,0x44368683
  40b52a:	pushf  
  40b52b:	test   al,0xe3
  40b52d:	add    edi,DWORD PTR [edx-0x33]
  40b530:	clc    
  40b531:	mov    ds:0xa0421aff,al
  40b536:	add    cl,BYTE PTR [eax]
  40b538:	call   DWORD PTR [esi-0x63]
  40b53b:	fdivr  QWORD PTR [eax-0x57]
  40b53e:	mov    ds:0x4522ab3d,eax
  40b543:	out    dx,al
  40b544:	in     al,0xb
  40b546:	inc    esi
  40b547:	pop    esi
  40b548:	int    0xdf
  40b54a:	mov    DWORD PTR [edi],ebx
  40b54c:	in     eax,dx
  40b54d:	sbb    al,0xf7
  40b54f:	push   0x40
  40b551:	mov    al,0x4c
  40b553:	das    
  40b554:	sbb    ecx,ebp
  40b556:	retf   0x4d83
  40b559:	pop    edx
  40b55a:	mov    ah,0x2e
  40b55c:	mov    ecx,0x881ef769
  40b561:	icebp  
  40b562:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b563:	enter  0x3dbb,0x2e
  40b567:	fst    DWORD PTR [edx+0x487f9a20]
  40b56d:	sbb    eax,0x591200e5
  40b572:	addr16 sti 
  40b574:	pop    ebp
  40b575:	adc    al,0x51
  40b577:	ja     0x40b59f
  40b579:	sub    al,0xed
  40b57b:	jno    0x40b563
  40b57d:	mov    eax,ds:0x41ea5d0b
  40b582:	pop    ebp
  40b583:	mov    ch,BYTE PTR [ebp+0x63]
  40b586:	outs   dx,DWORD PTR ds:[esi]
  40b587:	call   0xee48:0xc972763d
  40b58e:	xor    cl,BYTE PTR [esi+0x42]
  40b591:	lds    edx,FWORD PTR [esi]
  40b593:	out    dx,eax
  40b594:	xchg   ebx,eax
  40b595:	cmp    bl,BYTE PTR [edx]
  40b597:	adc    BYTE PTR [eax+0x5fd81c08],dl
  40b59d:	clc    
  40b59e:	lahf   
  40b59f:	xor    BYTE PTR ds:0x9f7c3be9,ah
  40b5a5:	call   FWORD PTR [ebx+0x60]
  40b5a8:	ds test al,0x6f
  40b5ab:	adc    BYTE PTR [esi+0x795b8764],al
  40b5b1:	test   al,0xf0
  40b5b3:	dec    ebp
  40b5b4:	outs   dx,BYTE PTR ds:[esi]
  40b5b5:	fwait
  40b5b6:	ds jne 0x40b5b2
  40b5b9:	jnp    0x40b556
  40b5bb:	push   0xf269ccbe
  40b5c0:	pop    eax
  40b5c1:	add    DWORD PTR [eax],esi
  40b5c3:	(bad)  
  40b5c4:	inc    edx
  40b5c5:	pop    esp
  40b5c6:	push   0xffffffe9
  40b5c8:	imul   esi,DWORD PTR [ecx],0xffffffa2
  40b5cb:	dec    edx
  40b5cc:	sbb    eax,0xced69f00
  40b5d1:	jns    0x40b5ce
  40b5d3:	inc    ebx
  40b5d4:	pop    ebp
  40b5d5:	mov    al,ds:0x23aa550a
  40b5da:	or     DWORD PTR [esi-0x4ee5047f],0xfffffffc
  40b5e1:	adc    ebp,DWORD PTR [edi-0x7d2edbac]
  40b5e7:	cmp    edx,edx
  40b5e9:	aam    0xad
  40b5eb:	ins    DWORD PTR es:[edi],dx
  40b5ec:	pop    esp
  40b5ed:	ins    BYTE PTR es:[edi],dx
  40b5ee:	mov    ds:0xf7b28a83,al
  40b5f3:	into   
  40b5f4:	jmp    0x8b1b:0xfb3a7713
  40b5fb:	fcmovnu st,st(3)
  40b5fd:	push   edx
  40b5fe:	sbb    eax,0xa5302e16
  40b603:	jns    0x40b594
  40b605:	cmp    DWORD PTR [eax],eax
  40b607:	hlt    
  40b608:	mov    eax,0x879d8968
  40b60d:	pop    edi
  40b60e:	imul   ebp,DWORD PTR [eax],0xa914da85
  40b614:	adc    BYTE PTR [eax],cl
  40b616:	inc    esi
  40b617:	sbb    eax,0x7e7da54c
  40b61c:	jecxz  0x40b5a7
  40b61e:	inc    edi
  40b61f:	push   edx
  40b620:	aam    0x90
  40b622:	sbb    DWORD PTR [edi+0x6de2b702],0x930880e
  40b62c:	mov    DWORD PTR [esi+0x51],ecx
  40b62f:	mov    ds:0x56fe085b,eax
  40b634:	retf   0x7abb
  40b637:	rcr    ch,1
  40b639:	out    dx,eax
  40b63a:	sbb    DWORD PTR [esi+0x17352ff9],esp
  40b640:	xchg   ebx,eax
  40b641:	sub    BYTE PTR [ecx+edi*1+0x7e],dh
  40b645:	vucomiss xmm0,xmm1
  40b649:	push   edx
  40b64a:	sbb    al,0x40
  40b64c:	cwde   
  40b64d:	cmp    al,BYTE PTR [ecx-0x630bfdb5]
  40b653:	pushf  
  40b654:	jo     0x40b6bb
  40b656:	jmp    0x40b5e8
  40b658:	sbb    eax,0xe2cb03b8
  40b65d:	inc    esp
  40b65e:	and    ah,BYTE PTR ds:0x925b61cf
  40b664:	daa    
  40b665:	imul   esp,DWORD PTR [eax-0x1d],0x1f6fb0f5
  40b66c:	adc    dl,0x8
  40b66f:	jae    0x40b6a2
  40b671:	xor    al,BYTE PTR [ebx-0x258a48a5]
  40b677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b678:	aas    
  40b679:	xor    esp,edx
  40b67b:	cdq    
  40b67c:	and    BYTE PTR [esi],ch
  40b67e:	inc    eax
  40b67f:	xor    bl,al
  40b681:	pop    ebx
  40b682:	arpl   WORD PTR [ebp+0x43019cf],di
  40b688:	mov    BYTE PTR [ecx+0x6f382dc6],dl
  40b68e:	add    al,0xc3
  40b690:	sbb    BYTE PTR [ebx+0x6730ebf2],0xb8
  40b697:	test   BYTE PTR [ecx-0x1fb79a5e],bl
  40b69d:	mov    bl,0xaf
  40b69f:	clc    
  40b6a0:	push   ebp
  40b6a1:	push   0x6db96ce4
  40b6a6:	out    dx,eax
  40b6a7:	cwde   
  40b6a8:	xor    DWORD PTR [ebx],eax
  40b6aa:	dec    ecx
  40b6ab:	mov    edx,0x807ed4a3
  40b6b0:	sbb    eax,0xaf6ca3b9
  40b6b5:	cmp    al,0x54
  40b6b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6b8:	ret    
  40b6b9:	inc    edx
  40b6ba:	or     DWORD PTR [ebp-0x37],edx
  40b6bd:	push   edi
  40b6be:	sbb    eax,0x9c2c0694
  40b6c3:	stos   BYTE PTR es:[edi],al
  40b6c4:	xchg   edi,ebp
  40b6c6:	rcl    DWORD PTR [edi+eax*4-0x2fc50187],0xa1
  40b6ce:	push   0x3a
  40b6d0:	mov    bl,0x4f
  40b6d2:	cmc    
  40b6d3:	frstpm(287 only) 
  40b6d5:	mov    WORD PTR [ecx-0x1652d521],ds
  40b6db:	and    ecx,esi
  40b6dd:	inc    esi
  40b6de:	xor    BYTE PTR [ebp+0x50],dl
  40b6e1:	inc    ebx
  40b6e2:	aam    0x57
  40b6e4:	push   ss
  40b6e5:	aaa    
  40b6e6:	(bad)  
  40b6e7:	std    
  40b6e8:	inc    eax
  40b6e9:	je     0x40b6da
  40b6eb:	lock out 0x54,eax
  40b6ee:	dec    edx
  40b6ef:	rol    BYTE PTR [eax+0x48],1
  40b6f2:	sti    
  40b6f3:	push   edi
  40b6f4:	cld    
  40b6f5:	fistp  WORD PTR [ecx+0x1846c535]
  40b6fb:	sbb    eax,0xbf395d2
  40b700:	mov    dh,0x1c
  40b702:	jns    0x40b77b
  40b704:	sub    al,0x43
  40b706:	jb     0x40b6e5
  40b708:	and    al,0x9f
  40b70a:	sbb    bl,BYTE PTR [ecx+ebx*2+0x6d]
  40b70e:	mov    dl,0xe0
  40b710:	pop    ss
  40b711:	outs   dx,DWORD PTR ds:[esi]
  40b712:	repnz and al,0xb0
  40b715:	fnstenv [ecx+0x4c559c1b]
  40b71b:	xor    eax,0x6664633e
  40b720:	add    cl,dh
  40b722:	xchg   edi,eax
  40b723:	fcmovnb st,st(0)
  40b725:	cmp    al,al
  40b727:	loopne 0x40b720
  40b729:	dec    ebp
  40b72a:	test   DWORD PTR [edx+0x3202e644],ebp
  40b730:	jae    0x40b729
  40b732:	ret    
  40b733:	inc    dl
  40b735:	pop    ecx
  40b736:	shl    DWORD PTR [esi+0x47],0x9e
  40b73a:	xchg   edx,eax
  40b73b:	jae    0x40b702
  40b73d:	xchg   edx,eax
  40b73e:	rcr    al,0xe3
  40b741:	mov    dl,BYTE PTR [edi+0x2a]
  40b744:	mov    esi,DWORD PTR [edx+0x4cbed727]
  40b74a:	add    BYTE PTR [eax],ch
  40b74c:	outs   dx,BYTE PTR ds:[esi]
  40b74d:	dec    ecx
  40b74e:	inc    edi
  40b74f:	(bad)  
  40b750:	jmp    0x40b706
  40b752:	add    BYTE PTR [ebp+0x7c],0x2
  40b756:	mov    ch,0x13
  40b758:	xor    eax,0x61ba396f
  40b75d:	sti    
  40b75e:	ret    0x206a
  40b761:	shl    BYTE PTR [edx-0x5563bd45],1
  40b767:	or     esp,DWORD PTR [ebx]
  40b769:	das    
  40b76a:	int3   
  40b76b:	sbb    al,0xd0
  40b76d:	jmp    0x308df99f
  40b772:	ficom  DWORD PTR [ecx-0x66]
  40b775:	call   0xacf6:0x1057efe6
  40b77c:	dec    esi
  40b77d:	dec    BYTE PTR [esi]
  40b77f:	cs adc eax,0x541fe0a5
  40b785:	sahf   
  40b786:	lahf   
  40b787:	fdivr  DWORD PTR [edx+0x20e0845b]
  40b78d:	push   ebx
  40b78e:	es addr16 pop edi
  40b791:	inc    eax
  40b792:	or     eax,edx
  40b794:	inc    eax
  40b795:	or     al,0x11
  40b797:	mov    WORD PTR [edx-0x49828d06],ds
  40b79d:	inc    edx
  40b79e:	jns    0x40b743
  40b7a0:	lock jnp 0x40b7b0
  40b7a3:	push   cs
  40b7a4:	pop    ss
  40b7a5:	pop    ds
  40b7a6:	int3   
  40b7a7:	std    
  40b7a8:	in     al,0xd1
  40b7aa:	xchg   ecx,eax
  40b7ab:	pop    edx
  40b7ac:	outs   dx,BYTE PTR ds:[esi]
  40b7ad:	cwde   
  40b7ae:	nop
  40b7af:	inc    edx
  40b7b0:	enter  0xffd,0xb
  40b7b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7b5:	push   0xaf37a4f8
  40b7ba:	in     al,dx
  40b7bb:	das    
  40b7bc:	in     al,0xf1
  40b7be:	mov    ch,0x17
  40b7c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7c1:	ja     0x40b74e
  40b7c3:	fidivr DWORD PTR [edi+0x1465206]
  40b7c9:	scas   eax,DWORD PTR es:[edi]
  40b7ca:	(bad)  
  40b7cb:	pop    ebp
  40b7cc:	adc    ah,ch
  40b7ce:	sub    DWORD PTR [edx-0x1f],ebx
  40b7d1:	jge    0x40b7e0
  40b7d3:	add    DWORD PTR [ebp+0x39],0x5ba1b16d
  40b7da:	pmaxsw mm4,QWORD PTR [esi-0x38]
  40b7de:	sbb    DWORD PTR [esi+0x69],edx
  40b7e1:	lods   eax,DWORD PTR ds:[esi]
  40b7e2:	mov    eax,ds:0x9b142125
  40b7e7:	adc    edx,ebp
  40b7e9:	push   ecx
  40b7ea:	test   al,0x24
  40b7ec:	mov    eax,ds:0xd773aba1
  40b7f1:	jmp    0x40b807
  40b7f3:	shl    DWORD PTR [edx],0xa6
  40b7f6:	pushf  
  40b7f7:	mov    bh,0x20
  40b7f9:	xchg   esp,eax
  40b7fa:	sub    BYTE PTR [ecx-0x61],cl
  40b7fd:	pop    ebp
  40b7fe:	out    dx,al
  40b7ff:	aaa    
  40b800:	push   esi
  40b801:	fisttp WORD PTR [edi]
  40b803:	call   0xe1ef8dbe
  40b808:	mov    cl,0xe5
  40b80a:	pop    eax
  40b80b:	mov    bl,0x89
  40b80d:	int3   
  40b80e:	push   eax
  40b80f:	push   esp
  40b810:	jno    0x40b80a
  40b812:	pop    esp
  40b813:	sbb    al,0x75
  40b815:	test   eax,0xdc5e7171
  40b81a:	inc    ebp
  40b81b:	cs cwde 
  40b81d:	repz bts DWORD PTR [edx-0x61a398ea],eax
  40b825:	aad    0xc9
  40b827:	int3   
  40b828:	das    
  40b829:	add    dl,BYTE PTR [ebp+0x4dfa2d26]
  40b82f:	inc    eax
  40b830:	sub    DWORD PTR [edi],eax
  40b832:	dec    esp
  40b833:	and    BYTE PTR ds:[esi],ch
  40b836:	(bad)
  40b83b:	cwde   
  40b83c:	jae    0x40b89e
  40b83e:	imul   esp,eax,0xffffff99
  40b841:	(bad)  
  40b842:	int    0x39
  40b844:	cmp    BYTE PTR ds:0x9f3a2a36,bl
  40b84a:	dec    esp
  40b84b:	mov    bh,0xb6
  40b84d:	or     bh,cl
  40b84f:	fimul  WORD PTR [eax]
  40b851:	cmp    eax,0x9778d530
  40b856:	div    BYTE PTR [eax+esi*4-0x300a0d]
  40b85d:	lock adc eax,0x68afe332
  40b863:	(bad)  
  40b864:	outs   dx,DWORD PTR es:[esi]
  40b866:	lock test dh,al
  40b869:	repnz mov esp,ecx
  40b86c:	dec    ecx
  40b86d:	lods   al,BYTE PTR ds:[esi]
  40b86e:	jmp    0x40b80c
  40b870:	dec    eax
  40b871:	fwait
  40b872:	xor    ecx,DWORD PTR [eax-0xac57c04]
  40b878:	shr    DWORD PTR [esi],1
  40b87a:	imul   eax,DWORD PTR [edx],0x11
  40b87d:	cmp    eax,0xbafc101
  40b882:	mov    BYTE PTR [esi+0x5c32d16e],bh
  40b888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b889:	pushf  
  40b88a:	bound  ebx,QWORD PTR [esi-0x3988a1cc]
  40b890:	sbb    esi,edi
  40b892:	push   ebx
  40b893:	pop    ebx
  40b894:	ret    0x32f0
  40b897:	or     edi,ebp
  40b899:	inc    ebp
  40b89a:	(bad)  
  40b89c:	scas   al,BYTE PTR es:[edi]
  40b89d:	mov    cl,0xd2
  40b89f:	xchg   ebp,eax
  40b8a0:	and    al,0x10
  40b8a2:	outs   dx,DWORD PTR ds:[esi]
  40b8a3:	into   
  40b8a4:	push   cs
  40b8a5:	push   es
  40b8a6:	jmp    0xd1b47b96
  40b8ab:	or     ebp,0x33bd61f3
  40b8b1:	std    
  40b8b2:	or     eax,0x87b2c60c
  40b8b7:	dec    esi
  40b8b8:	mov    esp,0x4779f82a
  40b8bd:	sub    esi,ebp
  40b8bf:	sub    DWORD PTR [edi-0x72],esp
  40b8c2:	and    ecx,DWORD PTR [ecx+0x605e657b]
  40b8c8:	xor    DWORD PTR [ebx-0x2f1a1d35],0x381bebbb
  40b8d2:	stos   BYTE PTR es:[di],al
  40b8d4:	inc    DWORD PTR [edx]
  40b8d6:	xchg   esi,eax
  40b8d7:	and    ch,BYTE PTR [ecx+0x4145288d]
  40b8dd:	cmp    BYTE PTR [ebx],0x67
  40b8e0:	rcr    DWORD PTR [ecx+ebx*1+0x110882db],0xd0
  40b8e8:	(bad)  
  40b8e9:	hlt    
  40b8ea:	sbb    BYTE PTR ds:0x776eda80,cl
  40b8f0:	cmp    DWORD PTR ds:0x7b24caad,ecx
  40b8f6:	aam    0x42
  40b8f8:	cdq    
  40b8f9:	and    eax,0x422da686
  40b8fe:	iret   
  40b8ff:	sar    BYTE PTR [edx-0x66],1
  40b902:	test   eax,0xe2103091
  40b907:	add    al,0x93
  40b909:	xchg   ebx,eax
  40b90a:	jb     0x40b97d
  40b90c:	shl    ebp,1
  40b90e:	daa    
  40b90f:	jno    0x40b958
  40b911:	mov    eax,ds:0x603d1cb3
  40b916:	mov    ecx,0xd7c7bbed
  40b91b:	cmp    BYTE PTR [eax-0x7d],0xac
  40b91f:	add    eax,0x8de086fb
  40b924:	push   0x61b48b3b
  40b929:	int    0x14
  40b92b:	add    eax,0xf6281038
  40b930:	pop    esi
  40b931:	outs   dx,BYTE PTR ds:[esi]
  40b932:	push   esi
  40b933:	ins    DWORD PTR es:[edi],dx
  40b934:	xchg   ebp,eax
  40b935:	fmul   DWORD PTR [ebx]
  40b938:	push   ss
  40b939:	xor    al,0xfb
  40b93b:	pop    ecx
  40b93c:	pop    ss
  40b93d:	jmp    0xccba7b2e
  40b942:	and    dh,al
  40b944:	int    0xe7
  40b946:	adc    BYTE PTR [ecx-0x17],dh
  40b949:	sub    al,0xf
  40b94b:	cmp    dh,BYTE PTR [ecx-0x70c25243]
  40b951:	or     al,0x5b
  40b953:	xchg   ecx,eax
  40b954:	push   eax
  40b955:	push   0xd37c54d1
  40b95a:	xchg   edx,eax
  40b95b:	pop    edi
  40b95c:	imul   ebp,eax,0x39
  40b95f:	imul   ebx,DWORD PTR [eax+0x56d2041a],0xb1ffffb5
  40b969:	mov    ch,0xa1
  40b96b:	outs   dx,BYTE PTR ds:[esi]
  40b96c:	scas   al,BYTE PTR es:[edi]
  40b96d:	dec    edx
  40b96e:	arpl   WORD PTR [esi],dx
  40b970:	repz cmp eax,0xa2c3c1aa
  40b976:	and    ebx,esp
  40b978:	(bad)  
  40b979:	sar    dh,1
  40b97b:	jbe    0x40b9a8
  40b97d:	daa    
  40b97e:	jmp    0x3c8:0xf98da4fa
  40b985:	jo     0x40b96a
  40b987:	cmp    dl,bh
  40b989:	mov    al,ds:0x3d2746fc
  40b98e:	in     al,0x4f
  40b990:	daa    
  40b991:	lods   eax,DWORD PTR ds:[esi]
  40b992:	jmp    0xfc1e54c6
  40b997:	push   esp
  40b998:	out    0x12,al
  40b99a:	pop    ebp
  40b99b:	pop    edx
  40b99c:	xor    eax,0xcee42a19
  40b9a1:	sbb    ebp,DWORD PTR [edx-0x57]
  40b9a4:	clc    
  40b9a5:	dec    eax
  40b9a6:	sub    ebx,eax
  40b9a8:	inc    esp
  40b9a9:	inc    edi
  40b9aa:	sahf   
  40b9ab:	test   al,0x5f
  40b9ad:	int3   
  40b9ae:	mov    ah,0x98
  40b9b0:	mov    eax,ds:0x6c3dcd54
  40b9b5:	pop    ss
  40b9b6:	mov    esi,0x70d1e40a
  40b9bb:	inc    ebp
  40b9bc:	mov    edx,0xb199892b
  40b9c1:	ds inc edi
  40b9c3:	ins    DWORD PTR es:[edi],dx
  40b9c4:	xchg   ecx,eax
  40b9c5:	mov    dh,0x12
  40b9c7:	mov    cl,0x59
  40b9c9:	push   es
  40b9ca:	sbb    al,0xbb
  40b9cc:	hlt    
  40b9cd:	push   cs
  40b9ce:	jne    0x40b9b5
  40b9d0:	jb     0x40ba4a
  40b9d2:	cld    
  40b9d3:	cwde   
  40b9d4:	jle    0x40b9aa
  40b9d6:	jnp    0x40b9aa
  40b9d8:	adc    al,0x1b
  40b9da:	nop
  40b9db:	out    0x92,al
  40b9dd:	fld    st(7)
  40b9df:	or     ch,ah
  40b9e1:	jp     0x40b97b
  40b9e3:	aam    0x9b
  40b9e5:	cdq    
  40b9e6:	and    al,0xd3
  40b9e8:	xchg   DWORD PTR [ebx],esp
  40b9ea:	sbb    edx,DWORD PTR [ecx]
  40b9ec:	xchg   ebx,eax
  40b9ed:	pop    esp
  40b9ee:	jl     0x40ba41
  40b9f0:	xchg   esp,eax
  40b9f1:	pusha  
  40b9f2:	or     eax,DWORD PTR [ecx]
  40b9f4:	lahf   
  40b9f5:	dec    ecx
  40b9f6:	mov    WORD PTR [esi-0x7bde4d89],es
  40b9fc:	sbb    al,0x12
  40b9fe:	(bad)  
  40b9ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba00:	mov    edx,0x7c9b0e51
  40ba05:	outs   dx,DWORD PTR ds:[esi]
  40ba06:	test   BYTE PTR [eax+ecx*4],0x3a
  40ba0a:	inc    DWORD PTR [eax+0x6408d981]
  40ba10:	inc    ebx
  40ba11:	xchg   edx,eax
  40ba12:	data16 fwait
  40ba14:	and    ch,BYTE PTR [edx-0x76]
  40ba17:	rcl    BYTE PTR [eax-0x1f05269],1
  40ba1d:	scas   al,BYTE PTR es:[edi]
  40ba1e:	xor    al,0xed
  40ba20:	popa   
  40ba21:	push   ds
  40ba22:	sbb    eax,ebp
  40ba24:	sti    
  40ba25:	out    0x46,eax
  40ba27:	in     eax,0x2c
  40ba29:	aaa    
  40ba2a:	pushf  
  40ba2b:	popa   
  40ba2c:	jle    0x40ba69
  40ba2e:	out    dx,al
  40ba2f:	test   eax,0x13858a2c
  40ba34:	pop    ebp
  40ba35:	popa   
  40ba36:	adc    ch,BYTE PTR [ecx-0x284be7b7]
  40ba3c:	pop    ecx
  40ba3d:	daa    
  40ba3e:	int3   
  40ba3f:	xchg   al,dl
  40ba41:	test   DWORD PTR [edx],ebp
  40ba43:	cs dec esp
  40ba45:	lds    eax,FWORD PTR [ebp-0x7329b89d]
  40ba4b:	je     0x40b9e9
  40ba4d:	test   DWORD PTR [edi-0x5f],esp
  40ba50:	aaa    
  40ba51:	mov    DWORD PTR [edx],eax
  40ba53:	sbb    DWORD PTR [edi],edi
  40ba55:	jp     0x40bac0
  40ba57:	loop   0x40ba02
  40ba59:	popf   
  40ba5a:	sub    eax,DWORD PTR [ebx-0x3f]
  40ba5d:	add    DWORD PTR [esi+0x65],edx
  40ba60:	pusha  
  40ba61:	cdq    
  40ba62:	ins    BYTE PTR es:[edi],dx
  40ba63:	inc    ecx
  40ba64:	inc    ebp
  40ba65:	arpl   si,bp
  40ba67:	shr    BYTE PTR [edi+0x289f76ca],1
  40ba6d:	loop   0x40ba8b
  40ba6f:	mov    dh,0x69
  40ba71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba72:	jmp    0x40bab1
  40ba74:	cmp    BYTE PTR [ecx-0x68f6d755],cl
  40ba7a:	adc    cl,dh
  40ba7c:	int    0x74
  40ba7e:	shl    DWORD PTR [edx-0x5d],cl
  40ba81:	push   esi
  40ba82:	jmp    0x825cc5ea
  40ba87:	mov    ds:0xb4cf2123,eax
  40ba8c:	sub    eax,0x33b21755
  40ba91:	or     eax,DWORD PTR [eax]
  40ba93:	mov    bl,0xc6
  40ba95:	frstor [eax+0x3954fa85]
  40ba9b:	sub    ah,cl
  40ba9d:	(bad)  
  40ba9e:	call   0xa73a:0x5f25f06b
  40baa5:	loope  0x40ba3e
  40baa7:	lods   al,BYTE PTR ds:[esi]
  40baa8:	test   DWORD PTR [ecx],ebp
  40baaa:	sbb    dl,BYTE PTR [ebx]
  40baac:	cwde   
  40baad:	or     eax,0x8ba3b19c
  40bab2:	arpl   WORD PTR [eax],bx
  40bab4:	cmp    al,0x6c
  40bab6:	add    al,cl
  40bab8:	push   DWORD PTR [ebx+edx*1]
  40babb:	and    esi,eax
  40babd:	cld    
  40babe:	stos   DWORD PTR es:[edi],eax
  40babf:	or     ecx,edx
  40bac1:	icebp  
  40bac2:	push   eax
  40bac3:	push   es
  40bac4:	mov    bl,0xd9
  40bac6:	sbb    DWORD PTR [edi-0x727441de],eax
  40bacc:	pop    ss
  40bacd:	pop    ds
  40bace:	push   es
  40bacf:	dec    edi
  40bad0:	xchg   BYTE PTR [eax+0x9a25bbb],dl
  40bad6:	ret    
  40bad7:	in     eax,0x8b
  40bad9:	lock or BYTE PTR [eax],0x70
  40badd:	mov    ds:0x161e4c37,al
  40bae2:	(bad)  
  40bae3:	fldenv [eax-0x6]
  40bae6:	jae    0x40bb3f
  40bae8:	daa    
  40bae9:	shr    BYTE PTR [esi+0x65],0xc3
  40baed:	fnstcw WORD PTR [edi+0x18]
  40baf0:	mov    esi,0x6f704b3d
  40baf5:	cmc    
  40baf6:	stc    
  40baf7:	add    DWORD PTR [ebx],esp
  40baf9:	outs   dx,BYTE PTR ds:[esi]
  40bafa:	in     al,dx
  40bafb:	mov    ds:0xc21a89e0,eax
  40bb00:	dec    esi
  40bb01:	add    DWORD PTR ds:0xcd1ce803,esi
  40bb07:	adc    al,0x25
  40bb09:	push   edx
  40bb0a:	pushf  
  40bb0b:	outs   dx,DWORD PTR fs:[esi]
  40bb0d:	dec    esi
  40bb0e:	clc    
  40bb0f:	fs loopne 0x40bb62
  40bb12:	ja     0x40bacc
  40bb14:	ins    BYTE PTR es:[edi],dx
  40bb15:	jns    0x40bac5
  40bb17:	pop    esp
  40bb18:	mov    esp,0x7aaf9ef7
  40bb1d:	or     al,0x8c
  40bb1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb20:	xor    eax,0x99e2ad4f
  40bb25:	in     eax,0x85
  40bb27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb28:	scas   eax,DWORD PTR es:[edi]
  40bb29:	cmp    BYTE PTR [ebx-0x7b],ah
  40bb2c:	lods   al,BYTE PTR ds:[esi]
  40bb2d:	cwde   
  40bb2e:	mov    ds:0x6b7a2207,eax
  40bb33:	pop    ebx
  40bb34:	aad    0x33
  40bb36:	pop    edi
  40bb37:	push   esp
  40bb38:	add    cl,BYTE PTR ds:[edi+0x72]
  40bb3c:	fld    QWORD PTR [edi+0x147147cd]
  40bb42:	xor    DWORD PTR [ecx],ebx
  40bb44:	sbb    esp,eax
  40bb46:	fdiv   QWORD PTR [edx]
  40bb48:	mov    dh,0xb8
  40bb4a:	and    eax,0xda00f94
  40bb4f:	fisttp WORD PTR ds:0x2c6d7974
  40bb55:	pop    eax
  40bb56:	jns    0x40bbcc
  40bb58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb59:	out    0x6e,eax
  40bb5b:	ret    
  40bb5c:	push   0x26
  40bb5e:	out    dx,eax
  40bb5f:	dec    ecx
  40bb60:	pushf  
  40bb61:	sbb    eax,0xa1a72208
  40bb66:	fimul  WORD PTR [ecx+0x31]
  40bb6a:	jmp    0x40bb90
  40bb6c:	ja     0x40bbe2
  40bb6e:	icebp  
  40bb6f:	jmp    0xd201:0xb39acff4
  40bb76:	jg     0x40bb2b
  40bb78:	mov    cl,0x89
  40bb7a:	xor    BYTE PTR [ecx-0x4bd265c5],ah
  40bb80:	sub    BYTE PTR gs:[ebx+eax*2-0x79],0xf5
  40bb86:	sbb    eax,0x2c6dbb55
  40bb8b:	out    dx,eax
  40bb8c:	mov    dl,0xbb
  40bb8e:	out    0x18,al
  40bb90:	inc    edx
  40bb91:	xlat   BYTE PTR ds:[ebx]
  40bb92:	mov    edi,0xb3d0ea27
  40bb97:	mov    ebx,0x3a50782b
  40bb9c:	shr    esi,1
  40bb9e:	xor    DWORD PTR [edi+0x6977463],edi
  40bba4:	jo     0x84316234
  40bbaa:	ss aas 
  40bbac:	in     eax,dx
  40bbad:	push   ecx
  40bbae:	xchg   ebx,eax
  40bbaf:	pop    edi
  40bbb0:	dec    esi
  40bbb1:	fldl2t 
  40bbb3:	iret   
  40bbb4:	or     BYTE PTR [esi],ch
  40bbb6:	repnz xchg esi,eax
  40bbb8:	push   edx
  40bbb9:	jge    0x40bbd3
  40bbbb:	or     al,0xf5
  40bbbd:	mov    al,0x63
  40bbbf:	push   cs
  40bbc0:	(bad)  
  40bbc1:	pop    ecx
  40bbc2:	or     DWORD PTR [ecx],edi
  40bbc4:	in     al,0xc6
  40bbc6:	jmp    0x40bb75
  40bbc8:	xor    eax,0x707d16d3
  40bbcd:	sub    ah,bl
  40bbcf:	or     al,0xeb
  40bbd1:	js     0x40bc4d
  40bbd3:	sbb    al,0x82
  40bbd5:	cmp    BYTE PTR [edi],bh
  40bbd7:	shl    BYTE PTR [edi],cl
  40bbd9:	push   esp
  40bbda:	es or  eax,0x7be2c0b
  40bbe0:	into   
  40bbe1:	dec    ebp
  40bbe2:	mov    dh,0x52
  40bbe4:	cli    
  40bbe5:	sub    edi,DWORD PTR [eax+edx*4+0x5d]
  40bbe9:	(bad)  
  40bbea:	or     al,0x61
  40bbec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbed:	mul    BYTE PTR [edi]
  40bbef:	gs loop 0x40bc31
  40bbf2:	cmp    eax,0x6e4c4929
  40bbf7:	popa   
  40bbf8:	jno    0x40bc30
  40bbfa:	inc    DWORD PTR [ebx-0x6442ae70]
  40bc00:	les    ecx,FWORD PTR [edx-0x14]
  40bc03:	lods   eax,DWORD PTR ds:[esi]
  40bc04:	(bad)  
  40bc05:	outs   dx,BYTE PTR ds:[esi]
  40bc06:	fs mov ah,0xcc
  40bc09:	sub    dh,BYTE PTR [ecx]
  40bc0b:	dec    ebp
  40bc0c:	ins    BYTE PTR es:[edi],dx
  40bc0d:	adc    dl,BYTE PTR [eax]
  40bc0f:	jo     0x40bc03
  40bc11:	jp     0x40bc2c
  40bc13:	xor    al,0xc9
  40bc15:	add    ebp,ebx
  40bc17:	dec    edi
  40bc18:	sbb    al,0xef
  40bc1a:	inc    eax
  40bc1b:	sub    ecx,DWORD PTR [ebx+0x7a]
  40bc1e:	sbb    cl,BYTE PTR [edi]
  40bc20:	dec    ebx
  40bc21:	push   edx
  40bc22:	(bad)  
  40bc23:	mov    al,ds:0xc0c9e363
  40bc28:	mov    al,0x15
  40bc2a:	outs   dx,BYTE PTR ds:[esi]
  40bc2b:	xchg   esi,eax
  40bc2c:	stos   BYTE PTR es:[edi],al
  40bc2d:	sbb    al,0x49
  40bc2f:	mov    ecx,0x972e82ed
  40bc34:	and    BYTE PTR [ebx-0x28],dl
  40bc37:	loope  0x40bbbd
  40bc39:	sub    eax,0xa6082cc3
  40bc3e:	or     al,0xeb
  40bc40:	fadd   QWORD PTR [edx+0x6f6cf00]
  40bc46:	call   0xd905:0xf61c149c
  40bc4d:	inc    esi
  40bc4e:	and    DWORD PTR [edx],esp
  40bc50:	and    DWORD PTR [eax],ebp
  40bc52:	int    0xc8
  40bc54:	mov    ebp,0xd9d21483
  40bc59:	pop    esp
  40bc5a:	call   0xfb9a:0xee485292
  40bc61:	add    DWORD PTR [ebx+edi*4-0x70a08e09],ecx
  40bc68:	ins    BYTE PTR es:[edi],dx
  40bc69:	mov    DWORD PTR [edx],ebp
  40bc6b:	mov    ebp,0x96e5a213
  40bc70:	in     eax,dx
  40bc71:	js     0x40bc86
  40bc73:	push   esi
  40bc74:	js     0x40bc8e
  40bc76:	jmp    0x37cf34f7
  40bc7b:	add    ebx,ebp
  40bc7d:	js     0x40bc3f
  40bc7f:	push   es
  40bc80:	push   ds
  40bc81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc82:	jne    0x40bc73
  40bc84:	mov    bl,dl
  40bc86:	imul   ebx,DWORD PTR [eax+0x1e08656b],0xffffffe4
  40bc8d:	push   ecx
  40bc8e:	xchg   esi,eax
  40bc8f:	pop    esi
  40bc90:	dec    edi
  40bc91:	jno    0x40bcd0
  40bc93:	fadd   QWORD PTR [edx+0x2a]
  40bc96:	or     ecx,edi
  40bc98:	out    dx,eax
  40bc99:	mov    edx,0x5039f490
  40bc9e:	repnz lahf 
  40bca0:	shl    esi,0x85
  40bca3:	cwde   
  40bca4:	sub    al,0xca
  40bca6:	xor    DWORD PTR [edi+0x6f],esp
  40bca9:	(bad)  
  40bcaa:	gs cwde 
  40bcac:	daa    
  40bcad:	je     0x40bc43
  40bcaf:	ret    0x3a07
  40bcb2:	int3   
  40bcb3:	ds leave 
  40bcb5:	inc    esi
  40bcb6:	into   
  40bcb7:	mov    ?,WORD PTR [ebp-0x3d49ae89]
  40bcbd:	repnz test DWORD PTR [ecx+edi*8+0x1a],0x4524a718
  40bcc6:	shl    bh,1
  40bcc8:	or     BYTE PTR [ebx+0x31],dl
  40bccb:	cmp    BYTE PTR [esi+0x7d],al
  40bcce:	adc    BYTE PTR [edx-0x47c348ae],bh
  40bcd4:	cmp    eax,0x44b03f2e
  40bcd9:	adc    al,0x2a
  40bcdb:	mov    DWORD PTR [edi],0x31ae8b66
  40bce1:	lods   al,BYTE PTR ds:[esi]
  40bce2:	xchg   BYTE PTR [esi+ebp*2+0x2065bd],dl
  40bce9:	aam    0xcb
  40bceb:	sub    BYTE PTR [eax+0x34],bl
  40bcee:	pop    ebx
  40bcef:	loop   0x40bd2c
  40bcf1:	jge    0x40bcfd
  40bcf3:	mul    esi
  40bcf5:	jmp    0xb6edc28a
  40bcfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcfb:	rcl    BYTE PTR [ebx+0xd952e51],0x36
  40bd02:	call   0x39a22a51
  40bd07:	cmp    BYTE PTR [eax],bl
  40bd09:	fwait
  40bd0a:	pop    ebx
  40bd0b:	jns    0x40bcf6
  40bd0d:	xchg   edi,eax
  40bd0e:	adc    BYTE PTR [eax-0x5f4248a5],dl
  40bd14:	mov    ds:0x88246b1e,eax
  40bd19:	xor    al,0x9e
  40bd1c:	lods   eax,DWORD PTR ds:[esi]
  40bd1d:	push   ebx
  40bd1e:	or     BYTE PTR [eax-0x3d],0x9c
  40bd22:	icebp  
  40bd23:	shl    BYTE PTR [ebx],0x46
  40bd26:	jmp    0x9955:0xf1ed8df7
  40bd2d:	pop    ds
  40bd2e:	mov    ss,edi
  40bd30:	pop    eax
  40bd31:	mov    ah,0xde
  40bd33:	adc    ah,BYTE PTR [ecx+eiz*2+0x70]
  40bd37:	stos   BYTE PTR es:[edi],al
  40bd38:	mov    BYTE PTR [ecx-0x20],0x27
  40bd3c:	ins    BYTE PTR es:[edi],dx
  40bd3d:	repz (bad) 
  40bd3f:	adc    al,0xde
  40bd41:	js     0x40bdb0
  40bd43:	xor    edi,ecx
  40bd45:	ins    DWORD PTR es:[edi],dx
  40bd46:	dec    esp
  40bd47:	push   eax
  40bd48:	inc    edi
  40bd49:	js     0x40bd2c
  40bd4b:	leave  
  40bd4c:	addr16 xchg esp,eax
  40bd4e:	stos   BYTE PTR es:[edi],al
  40bd4f:	leave  
  40bd50:	pop    ss
  40bd51:	mov    bl,0xdb
  40bd53:	mov    WORD PTR [ebx+0x38121c76],fs
  40bd59:	or     eax,0x49565e2f
  40bd5e:	sbb    ecx,DWORD PTR es:[edx-0x22]
  40bd62:	add    eax,0xe4b1db21
  40bd67:	lods   al,BYTE PTR ds:[esi]
  40bd68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd69:	jecxz  0x40bde1
  40bd6b:	mov    ch,0xfe
  40bd6d:	out    0x3f,al
  40bd6f:	mov    WORD PTR [esi+0x7e],gs
  40bd72:	shl    DWORD PTR ds:[eax],cl
  40bd75:	ja     0x40bdaf
  40bd77:	xor    al,0xa5
  40bd79:	dec    edx
  40bd7a:	pop    eax
  40bd7b:	add    DWORD PTR ds:[ebp-0x5b8ca5e],ecx
  40bd82:	jg     0x40bd85
  40bd84:	aam    0x4
  40bd86:	les    ebx,FWORD PTR [esi+0x77]
  40bd89:	xchg   esi,eax
  40bd8a:	in     al,dx
  40bd8b:	xchg   ch,al
  40bd8d:	sbb    BYTE PTR [edx+0x47],0xc8
  40bd91:	int    0x5d
  40bd93:	das    
  40bd94:	fdivp  st(6),st
  40bd96:	cs leave 
  40bd98:	or     eax,0x5957deb9
  40bd9d:	xchg   ecx,eax
  40bd9e:	mov    ds:0xcf5352f0,al
  40bda3:	sbb    al,0xe2
  40bda5:	jmp    0x40bd47
  40bda7:	mov    ds:0x518b7186,al
  40bdac:	out    0xe0,al
  40bdae:	cmp    al,BYTE PTR [ebx+0x79]
  40bdb1:	xchg   DWORD PTR [esp+edx*1-0x24],edi
  40bdb5:	pop    esp
  40bdb6:	push   edx
  40bdb7:	mov    esi,DWORD PTR [ecx+0x63]
  40bdba:	faddp  st(2),st
  40bdbc:	push   edx
  40bdbd:	mov    eax,0x824cc0ac
  40bdc2:	mov    eax,ds:0x378a58b6
  40bdc7:	lods   eax,DWORD PTR ds:[esi]
  40bdc8:	aaa    
  40bdc9:	sbb    eax,DWORD PTR [ebp-0x2bbcd3ec]
  40bdcf:	loope  0x40be28
  40bdd1:	xchg   ebp,eax
  40bdd2:	mov    ch,BYTE PTR [eax-0x7c]
  40bdd5:	scas   al,BYTE PTR es:[edi]
  40bdd6:	je     0x40bda0
  40bdd8:	jb     0x40be21
  40bdda:	xchg   BYTE PTR [ebx],dl
  40bddc:	mov    eax,0x62cf754e
  40bde1:	ja     0x40be4e
  40bde3:	test   eax,0xacf4cc56
  40bde8:	jb     0x40be01
  40bdea:	xor    dh,BYTE PTR ds:0x52f576f2
  40bdf0:	adc    DWORD PTR [eax+0x25],0x1b
  40bdf4:	cmp    dh,BYTE PTR [edx+0x1f]
  40bdf7:	mov    BYTE PTR [ebp+eiz*8-0x43],cl
  40bdfb:	lods   al,BYTE PTR ds:[esi]
  40bdfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdfd:	scas   eax,DWORD PTR es:[edi]
  40bdfe:	(bad)  
  40bdff:	dec    ebp
  40be00:	unpckhps xmm6,XMMWORD PTR [ebx+0x6fd09f4d]
  40be07:	cmp    BYTE PTR [ebp-0x48],ah
  40be0a:	mov    ah,0x49
  40be0c:	or     al,0x9a
  40be0e:	and    al,0x9b
  40be10:	jo     0x40bdfc
  40be12:	mov    ecx,0xd1e49854
  40be17:	(bad)  
  40be18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be19:	cmp    ecx,DWORD PTR [ebp-0x64]
  40be1c:	sbb    ch,bl
  40be1e:	add    BYTE PTR [ebp+0x41eff755],dl
  40be24:	test   eax,0x40435c66
  40be29:	adc    esp,eax
  40be2b:	out    0x4a,al
  40be2d:	push   DWORD PTR [edx+0xa]
  40be30:	xor    cl,ah
  40be32:	adc    eax,0x9d5a7d3c
  40be37:	pop    ebx
  40be38:	inc    edx
  40be39:	dec    esi
  40be3a:	and    ecx,edi
  40be3c:	ret    0x2e4
  40be3f:	aas    
  40be40:	fwait
  40be41:	retf   0xc9a3
  40be44:	mov    bl,0xee
  40be46:	enter  0x3b11,0xa0
  40be4a:	(bad)  
  40be4b:	xchg   esi,eax
  40be4c:	or     BYTE PTR [ecx-0x3e],0x45
  40be50:	and    eax,0xceb6f48a
  40be55:	fwait
  40be56:	dec    edx
  40be57:	ins    DWORD PTR es:[edi],dx
  40be58:	retf   0xca30
  40be5b:	mov    esp,0x3d38b44f
  40be60:	push   0xffffff96
  40be62:	int    0xb6
  40be64:	aad    0xee
  40be66:	adc    dh,BYTE PTR cs:[esi+0x10d779a5]
  40be6d:	jns    0x40beae
  40be6f:	retf   0xe01b
  40be72:	xchg   esp,eax
  40be73:	ret    
  40be74:	daa    
  40be75:	lds    ecx,FWORD PTR [eax]
  40be77:	mov    esi,0x5f86d4e0
  40be7c:	or     DWORD PTR [esi],0x6c
  40be7f:	sbb    eax,0x8bc74e63
  40be84:	adc    eax,DWORD PTR [ebx]
  40be86:	xchg   edx,eax
  40be87:	xor    al,0x21
  40be89:	adc    eax,0x377545d1
  40be8e:	mov    eax,esi
  40be90:	lods   eax,DWORD PTR ds:[esi]
  40be91:	sahf   
  40be92:	faddp  st(5),st
  40be94:	mov    al,0x21
  40be96:	add    al,0x20
  40be98:	enter  0x2b99,0xd7
  40be9c:	(bad)  
  40be9d:	aam    0xd3
  40be9f:	pcmpgtb mm6,mm4
  40bea2:	cmp    esp,eax
  40bea4:	repz jecxz 0x40bea7
  40bea7:	fisttp DWORD PTR [ecx-0x6]
  40beaa:	mov    edi,0x3da8444f
  40beaf:	cwde   
  40beb0:	test   DWORD PTR [ebx-0x4c],eax
  40beb3:	inc    ebp
  40beb4:	daa    
  40beb5:	je     0x40be96
  40beb7:	adc    al,0x9b
  40beb9:	cs mov edx,0xcf1ee5ad
  40bebf:	push   ds
  40bec0:	pop    edi
  40bec1:	and    dl,BYTE PTR [eax+0x2f]
  40bec4:	inc    ebx
  40bec5:	sar    DWORD PTR [esi+0x30d3033c],0xc
  40becc:	out    0x13,eax
  40bece:	mov    bh,0xe5
  40bed0:	retf   
  40bed1:	into   
  40bed2:	jo     0x40bedd
  40bed4:	pop    es
  40bed5:	in     al,dx
  40bed6:	jecxz  0x40beeb
  40bed8:	imul   ebp,DWORD PTR [esi-0x16bda28a],0xfffffffc
  40bedf:	mov    ch,0x75
  40bee1:	sbb    cl,ah
  40bee3:	loop   0x40bf2f
  40bee5:	mov    bl,0xbb
  40bee7:	mov    edx,0xf686b95f
  40beec:	enter  0x9d39,0x28
  40bef0:	vsqrtps xmm7,XMMWORD PTR [eax]
  40bef4:	sbb    ch,dl
  40bef6:	jo     0x40bf43
  40bef8:	sbb    al,0x56
  40befa:	out    dx,al
  40befb:	lock pop esp
  40befd:	dec    ebx
  40befe:	sub    bl,BYTE PTR [edi-0x7e6d80d2]
  40bf04:	jnp    0x40beab
  40bf06:	mov    esp,0x9014f4d8
  40bf0b:	neg    DWORD PTR [eax+0x559237e6]
  40bf11:	sub    DWORD PTR [edx],0xbea8770b
  40bf17:	mov    BYTE PTR [ebx+eiz*4+0x785793dd],dh
  40bf1e:	stos   BYTE PTR es:[edi],al
  40bf1f:	push   esi
  40bf20:	xor    eax,0xf47b0a89
  40bf25:	leave  
  40bf26:	sbb    eax,0xafd7e240
  40bf2b:	xlat   BYTE PTR ds:[ebx]
  40bf2c:	sbb    cl,BYTE PTR [eax+0x2a9f2886]
  40bf32:	pop    esi
  40bf33:	shr    bl,0x60
  40bf36:	inc    esp
  40bf37:	xor    ch,BYTE PTR [edi]
  40bf39:	(bad)  
  40bf3a:	xchg   esi,eax
  40bf3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf3c:	fisttp QWORD PTR [esi-0x47]
  40bf3f:	pop    edx
  40bf40:	(bad)  
  40bf41:	jecxz  0x40bf9f
  40bf43:	xlat   BYTE PTR ds:[ebx]
  40bf44:	fwait
  40bf45:	mov    ds:0x5d43e12a,al
  40bf4a:	scas   eax,DWORD PTR es:[edi]
  40bf4b:	push   ebp
  40bf4c:	inc    ebx
  40bf4d:	idiv   DWORD PTR [ebp+0x7512fa80]
  40bf53:	sub    ebx,DWORD PTR [eax]
  40bf55:	hlt    
  40bf56:	mov    ds:0x6e6bd39,eax
  40bf5b:	mov    al,ds:0x8de1d646
  40bf60:	lods   eax,DWORD PTR ds:[esi]
  40bf61:	mov    ecx,esi
  40bf63:	ss daa 
  40bf65:	jge    0x40bf17
  40bf67:	lock cmp dl,bl
  40bf6a:	dec    ebp
  40bf6b:	mov    bl,0x4f
  40bf6d:	cmp    ebx,DWORD PTR [edx+0x5b]
  40bf70:	cli    
  40bf71:	inc    ebx
  40bf72:	dec    esp
  40bf73:	test   DWORD PTR [ecx+0x4b],0x858c88fa
  40bf7a:	aam    0x1f
  40bf7c:	jp     0x40bf36
  40bf7e:	rcr    BYTE PTR [eax-0x47],cl
  40bf81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf82:	outs   dx,BYTE PTR ds:[esi]
  40bf83:	out    0x3a,eax
  40bf85:	or     dl,BYTE PTR [eax]
  40bf87:	ja     0x40bfce
  40bf89:	add    eax,0x3860f02
  40bf8e:	or     DWORD PTR [edx+0x2daef281],ecx
  40bf94:	popa   
  40bf95:	or     edx,0x46076fec
  40bf9b:	mov    esi,ecx
  40bf9d:	ins    DWORD PTR es:[edi],dx
  40bf9e:	push   esp
  40bf9f:	sahf   
  40bfa0:	in     eax,dx
  40bfa1:	das    
  40bfa2:	clc    
  40bfa3:	mov    WORD PTR [eax],?
  40bfa5:	dec    ecx
  40bfa6:	pop    edx
  40bfa7:	push   eax
  40bfa8:	pop    eax
  40bfa9:	mov    edx,0xe091e4a2
  40bfae:	push   edi
  40bfaf:	iret   
  40bfb0:	jmp    0x594b1d0
  40bfb5:	scas   eax,DWORD PTR es:[edi]
  40bfb6:	cs add bh,cl
  40bfb9:	imul   ebx,DWORD PTR ds:[edi-0x12420c21],0x48
  40bfc1:	fldenv [ecx+edx*2-0x3c47e870]
  40bfc8:	xchg   edi,eax
  40bfc9:	das    
  40bfca:	dec    ebx
  40bfcb:	mov    ebp,0xceb0054f
  40bfd0:	mov    cl,BYTE PTR [ebp-0x1d]
  40bfd3:	stc    
  40bfd4:	arpl   WORD PTR [ebx],ax
  40bfd6:	in     eax,0x62
  40bfd8:	dec    eax
  40bfd9:	jl     0x40bff3
  40bfdb:	in     eax,dx
  40bfdc:	lahf   
  40bfdd:	add    ebp,DWORD PTR ds:0xf6765c25
  40bfe3:	push   esi
  40bfe4:	cmp    cl,BYTE PTR [esi]
  40bfe6:	int3   
  40bfe7:	xchg   ebp,eax
  40bfe8:	aam    0x4e
  40bfea:	ret    0x2543
  40bfed:	rcl    DWORD PTR [edx+edx*4-0x182db6fa],cl
  40bff4:	mov    dh,0x6d
  40bff6:	fisttp DWORD PTR [ecx+0x6366d1ec]
  40bffc:	xlat   BYTE PTR ds:[ebx]
  40bffd:	mov    esi,0xbdcd1afa
  40c002:	mov    ebx,0x26201b58
  40c007:	jmp    0xe2f492f1
  40c00c:	mov    ebp,0x1602f46c
  40c011:	sbb    al,0xd3
  40c013:	mov    DWORD PTR fs:[ecx],ebx
  40c016:	pop    edx
  40c017:	xchg   esp,eax
  40c018:	outs   dx,DWORD PTR ds:[esi]
  40c019:	stc    
  40c01a:	or     edx,DWORD PTR [bx+si]
  40c01d:	mov    bh,BYTE PTR [esi]
  40c01f:	cmp    eax,0x68dec92c
  40c024:	and    esp,esi
  40c026:	js     0x40c03b
  40c028:	mov    eax,DWORD PTR [esp+ecx*1+0x71986ca4]
  40c02f:	xchg   BYTE PTR [eax+ebp*2-0x5d9411ae],bl
  40c036:	cmp    ch,BYTE PTR [ecx+0x55]
  40c039:	mov    ecx,DWORD PTR [eax-0x6b772281]
  40c03f:	lock std 
  40c041:	sbb    eax,0x34a32338
  40c046:	xor    BYTE PTR [ebp+0x164ebef9],al
  40c04c:	icebp  
  40c04d:	push   edi
  40c04e:	leave  
  40c04f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c050:	loop   0x40c0a4
  40c052:	and    DWORD PTR [edx-0x71],esi
  40c055:	mov    eax,ds:0x41894ae2
  40c05a:	sub    DWORD PTR [ecx+0x7eb35529],esi
  40c060:	sbb    bh,BYTE PTR [edx+0x24ef941f]
  40c066:	jmp    0x9f52:0x70644183
  40c06d:	add    eax,DWORD PTR [ebp-0x5e]
  40c070:	pop    ebp
  40c071:	(bad)  
  40c073:	leave  
  40c074:	dec    edx
  40c075:	pushf  
  40c076:	mov    ah,0xd9
  40c078:	cmp    ch,cl
  40c07a:	xchg   esp,eax
  40c07b:	out    0x5e,al
  40c07d:	into   
  40c07e:	mov    ch,BYTE PTR [eax]
  40c080:	fwait
  40c081:	scas   al,BYTE PTR es:[edi]
  40c082:	inc    edi
  40c083:	dec    ecx
  40c084:	or     BYTE PTR [edi+0x19f6ce17],0x12
  40c08b:	retf   0xe497
  40c08e:	push   edx
  40c08f:	out    dx,eax
  40c090:	jp     0x40c0c7
  40c092:	das    
  40c093:	pop    ds
  40c094:	adc    DWORD PTR [ebx],eax
  40c096:	pop    ds
  40c097:	push   ss
  40c098:	mov    al,ds:0xa1eca9a7
  40c09d:	clc    
  40c09e:	fsub   QWORD PTR [edi]
  40c0a0:	lfs    edi,FWORD PTR [edi-0x60a711d]
  40c0a7:	pop    esi
  40c0a8:	in     eax,dx
  40c0a9:	test   al,0xc6
  40c0ab:	and    eax,0x64a4872
  40c0b0:	mov    ch,BYTE PTR [edx+ebx*1-0x6c]
  40c0b4:	sub    al,0x7a
  40c0b6:	inc    esp
  40c0b7:	mov    eax,ds:0x6e411599
  40c0bc:	jmp    DWORD PTR [eax+0x9302fbf]
  40c0c2:	push   ds
  40c0c3:	adc    edi,DWORD PTR [ebx]
  40c0c5:	cld    
  40c0c6:	call   0x31ac:0x91ea1623
  40c0cd:	popa   
  40c0ce:	dec    ebp
  40c0cf:	add    eax,0x5c50bba6
  40c0d4:	lock or DWORD PTR [edx+0xcb4c31c],esi
  40c0db:	sbb    DWORD PTR [esi-0x4c],eax
  40c0de:	mov    edx,0x8cdf72f3
  40c0e3:	pmuludq mm7,mm6
  40c0e6:	mov    fs,WORD PTR [edx]
  40c0e8:	ja     0x40c0fa
  40c0ea:	push   eax
  40c0eb:	pop    edi
  40c0ec:	test   al,0x9e
  40c0ee:	mov    cl,0xab
  40c0f0:	push   0x871dde01
  40c0f5:	mov    ds:0xbb4bf8b,al
  40c0fa:	jno    0x40c095
  40c0fc:	std    
  40c0fd:	inc    ecx
  40c0fe:	lds    edi,FWORD PTR [esi+0x285e2783]
  40c104:	jmp    FWORD PTR [edi]
  40c106:	sub    edi,DWORD PTR [esi+0x2c]
  40c109:	das    
  40c10a:	xchg   ebp,eax
  40c10b:	test   DWORD PTR [eax-0x57],eax
  40c10e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c10f:	popf   
  40c110:	push   0xf32ed74f
  40c115:	add    cl,BYTE PTR [ebp-0x31fc728e]
  40c11b:	mov    ebx,0xec6a6ae3
  40c120:	add    al,0x91
  40c122:	jns    0x40c0d9
  40c124:	pop    esi
  40c125:	cmp    cl,BYTE PTR [edi]
  40c127:	outs   dx,DWORD PTR ds:[esi]
  40c128:	mov    bh,0xca
  40c12a:	out    dx,eax
  40c12b:	pop    esp
  40c12c:	mov    ecx,0xc5a2f858
  40c131:	sbb    al,dl
  40c133:	adc    bl,BYTE PTR [edi]
  40c135:	jns    0x40c110
  40c137:	neg    ecx
  40c139:	int3   
  40c13a:	jmp    0x40c11f
  40c13c:	loop   0x40c19a
  40c13e:	rol    DWORD PTR [ecx],0xf1
  40c141:	popa   
  40c142:	sahf   
  40c143:	mov    esp,0x72722b32
  40c148:	xor    eax,0x797e16ff
  40c14d:	xchg   esi,ebx
  40c14f:	mov    esp,0xbee43af7
  40c154:	in     al,dx
  40c155:	sub    ah,BYTE PTR [esi-0x34b84138]
  40c15b:	cmc    
  40c15c:	sub    edx,DWORD PTR [eax]
  40c15e:	and    ebx,ebp
  40c160:	lea    esp,[edx]
  40c162:	and    al,0x4e
  40c164:	scas   al,BYTE PTR es:[edi]
  40c165:	pop    DWORD PTR [ebp-0xf]
  40c168:	mov    al,0xc
  40c16a:	bound  esp,QWORD PTR [esi-0x3342a3da]
  40c170:	jno    0x40c1d6
  40c172:	cli    
  40c173:	mov    esi,0x42dafeef
  40c178:	in     eax,0xed
  40c17a:	mov    ecx,0xc3c18992
  40c17f:	adc    edx,eax
  40c181:	pop    esi
  40c182:	sbb    bh,BYTE PTR [esi-0xaceefcd]
  40c188:	aad    0x5b
  40c18a:	mov    dl,BYTE PTR [eax]
  40c18c:	test   eax,0xcbe6067f
  40c191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c192:	jl     0x40c185
  40c194:	out    dx,al
  40c195:	add    BYTE PTR [ebp-0x56029f76],0xfd
  40c19c:	adc    DWORD PTR [ecx-0x2b9ecd6b],ecx
  40c1a2:	test   BYTE PTR [eax],al
  40c1a4:	pop    ebp
  40c1a5:	adc    DWORD PTR [esi+0x75],edi
  40c1a8:	adc    edi,ebx
  40c1aa:	out    0x9b,eax
  40c1ac:	nop
  40c1ad:	adc    esp,DWORD PTR [esi]
  40c1af:	fidiv  DWORD PTR [ebx+0x65]
  40c1b2:	retf   
  40c1b3:	jbe    0x40c1b3
  40c1b5:	pop    esi
  40c1b6:	ret    0x78eb
  40c1b9:	sbb    al,0x98
  40c1bb:	fwait
  40c1bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1bd:	add    eax,0x8a1e6ffb
  40c1c2:	retf   
  40c1c3:	popa   
  40c1c4:	hlt    
  40c1c5:	cs sbb edi,ebp
  40c1c8:	out    0xec,eax
  40c1ca:	mov    ebx,0x53ce1ce5
  40c1cf:	add    BYTE PTR [ecx-0x453babe6],cl
  40c1d5:	inc    esp
  40c1d6:	mov    edx,0xea05131a
  40c1db:	sbb    ebx,DWORD PTR [edx]
  40c1dd:	inc    edi
  40c1de:	repnz pop ecx
  40c1e0:	xchg   ecx,eax
  40c1e1:	sbb    al,0x99
  40c1e3:	shr    BYTE PTR ds:0xdcabb7ec,0x38
  40c1ea:	add    al,0x2a
  40c1ec:	mov    esp,DWORD PTR [edx+0x49fe67c7]
  40c1f2:	push   ds
  40c1f3:	or     ebx,ebp
  40c1f5:	je     0x40c250
  40c1f7:	sbb    DWORD PTR [ebx],0x6
  40c1fa:	iret   
  40c1fb:	jg     0x40c1cb
  40c1fd:	cmp    al,0x44
  40c1ff:	push   es
  40c200:	inc    ebx
  40c201:	push   esi
  40c202:	add    BYTE PTR [ebx],bl
  40c204:	mov    al,0xfe
  40c206:	push   eax
  40c207:	jle    0x40c27c
  40c209:	jns    0x40c19e
  40c20b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c20c:	inc    ebx
  40c20d:	mov    BYTE PTR [edi-0x4d70e8e0],ch
  40c213:	out    dx,eax
  40c214:	in     al,0x6b
  40c216:	sbb    dh,BYTE PTR [eax+eiz*2]
  40c219:	aas    
  40c21a:	sbb    ah,BYTE PTR [ebx-0x2c8f5bfa]
  40c220:	jge    0x40c1db
  40c222:	dec    edx
  40c223:	jge    0x40c260
  40c225:	inc    ecx
  40c226:	aad    0x9b
  40c228:	push   es
  40c229:	mov    dh,0x40
  40c22b:	jbe    0x40c24b
  40c22d:	push   ss
  40c22e:	sbb    di,WORD PTR [ebx-0x1722d2f8]
  40c235:	out    0x8a,eax
  40c237:	jbe    0x40c1da
  40c239:	je     0x40c27c
  40c23b:	das    
  40c23c:	and    eax,0xfe5e7ed7
  40c241:	xchg   edi,eax
  40c242:	(bad)  
  40c243:	scas   al,BYTE PTR es:[edi]
  40c244:	and    ebx,DWORD PTR ds:0x61cd2e92
  40c24a:	pusha  
  40c24b:	popa   
  40c24c:	sub    al,0x7e
  40c24e:	add    BYTE PTR [ecx+0x55],cl
  40c251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c252:	fadd   DWORD PTR [edx+ebp*4-0x63b7a8f7]
  40c259:	nop
  40c25a:	xchg   esi,eax
  40c25b:	mov    ds:0x78859860,eax
  40c260:	and    eax,0x516704d0
  40c265:	sub    DWORD PTR [eax+0x3a],edx
  40c268:	es das 
  40c26a:	ja     0x40c292
  40c26c:	add    DWORD PTR [edi],ecx
  40c26e:	test   eax,0xdc314dd2
  40c273:	xchg   ecx,eax
  40c274:	daa    
  40c275:	jno    0x40c23f
  40c277:	pop    esp
  40c278:	mov    esi,0xe0b3698a
  40c27d:	cld    
  40c27e:	daa    
  40c27f:	jne    0x40c26f
  40c281:	outs   dx,DWORD PTR ds:[esi]
  40c282:	pop    edi
  40c283:	or     al,0x66
  40c285:	add    bh,BYTE PTR [eax-0x2a]
  40c288:	pop    ds
  40c289:	rcr    DWORD PTR [ebp-0x3a93241a],0x92
  40c290:	dec    ebp
  40c291:	cmc    
  40c292:	pop    esp
  40c293:	jecxz  0x40c2eb
  40c295:	std    
  40c296:	sbb    al,0x1c
  40c298:	scas   al,BYTE PTR es:[edi]
  40c299:	fstp   QWORD PTR [eax+0x21]
  40c29c:	adc    ch,al
  40c29e:	dec    ebx
  40c29f:	ja     0x40c2d1
  40c2a1:	jbe    0x40c2e4
  40c2a3:	mov    al,0xd5
  40c2a5:	(bad)  
  40c2a7:	(bad)  
  40c2a8:	mov    dh,0xdf
  40c2aa:	pop    ss
  40c2ab:	xor    ch,dl
  40c2ad:	in     eax,dx
  40c2ae:	or     BYTE PTR [edx],ah
  40c2b0:	xchg   DWORD PTR [ebx],esp
  40c2b2:	mov    ecx,0xc1ce4b48
  40c2b7:	pop    edx
  40c2b8:	jg     0x40c305
  40c2ba:	stos   BYTE PTR es:[edi],al
  40c2bb:	xchg   ebp,eax
  40c2bc:	(bad)  [eax]
  40c2be:	jmp    0x5c62a404
  40c2c3:	push   0xfffffff4
  40c2c5:	dec    edx
  40c2c6:	sbb    al,0xb7
  40c2c8:	outs   dx,DWORD PTR ds:[esi]
  40c2c9:	outs   dx,BYTE PTR ds:[esi]
  40c2ca:	push   esp
  40c2cb:	popa   
  40c2cc:	jle    0x40c347
  40c2ce:	imul   esp,edi,0x58
  40c2d1:	jl     0x40c2d0
  40c2d3:	lods   eax,DWORD PTR ds:[esi]
  40c2d4:	loope  0x40c2ae
  40c2d6:	or     esp,edx
  40c2d8:	es add eax,0xa600425d
  40c2de:	call   0xb638:0x6a2167c7
  40c2e5:	std    
  40c2e6:	sub    al,BYTE PTR [ebp+esi*4-0x1a189bff]
  40c2ed:	retf   0x92cb
  40c2f0:	mov    ds:0xc87082e,eax
  40c2f5:	pop    ebx
  40c2f6:	daa    
  40c2f7:	mov    esi,0xd8f3a737
  40c2fc:	sbb    al,0x2e
  40c2fe:	scas   eax,DWORD PTR es:[edi]
  40c2ff:	ds xchg ecx,eax
  40c301:	stc    
  40c302:	retf   0xe3b1
  40c305:	rcr    BYTE PTR [ebx+0x37],0xba
  40c309:	mov    ds:0xf86a96ad,eax
  40c30e:	jnp    0x40c2e8
  40c310:	ja     0x40c374
  40c312:	inc    ebp
  40c313:	sbb    BYTE PTR [edx-0x2b],0x9b
  40c317:	pop    ebx
  40c318:	aas    
  40c319:	adc    edi,DWORD PTR [edi-0x26]
  40c31c:	cli    
  40c31d:	cbw    
  40c31f:	cmp    edx,ecx
  40c321:	fst    QWORD PTR [ecx]
  40c323:	fdiv   QWORD PTR [ebp-0x24]
  40c326:	jo     0x40c347
  40c328:	(bad)  
  40c329:	adc    dh,cl
  40c32b:	xchg   ebp,eax
  40c32c:	push   eax
  40c32d:	dec    edx
  40c32e:	int    0x22
  40c330:	push   ebp
  40c331:	pop    ebp
  40c332:	ss repnz aas 
  40c335:	data16 jge 0x40c2e9
  40c338:	(bad)  
  40c339:	aad    0x33
  40c33b:	dec    esp
  40c33c:	rol    BYTE PTR [ecx-0x1f],cl
  40c33f:	add    eax,0x454e1a37
  40c344:	push   edi
  40c345:	hlt    
  40c346:	gs scas al,BYTE PTR es:[edi]
  40c348:	aam    0x36
  40c34a:	fmul   DWORD PTR [ebp+0x6c]
  40c34d:	sbb    eax,0xac0d7c6a
  40c352:	mov    ds:0xdce15d5,al
  40c357:	xchg   esi,ebp
  40c359:	imul   ebp,DWORD PTR [edi-0xf],0xffffffeb
  40c35d:	mov    ecx,0x4d434ccc
  40c362:	div    DWORD PTR [eax+ecx*8]
  40c365:	and    eax,0x2f6ab9e7
  40c36a:	fwait
  40c36b:	jb     0x40c3a5
  40c36d:	xchg   esi,eax
  40c36e:	push   cs
  40c36f:	cmc    
  40c370:	pop    ebp
  40c371:	bt     DWORD PTR [ecx],ecx
  40c374:	sub    eax,0x24cc4dac
  40c379:	in     al,0xfc
  40c37b:	pop    es
  40c37c:	pushf  
  40c37d:	push   ebp
  40c37e:	cs xchg edx,edi
  40c381:	nop
  40c382:	test   DWORD PTR [edx-0x348666da],0xd882cc66
  40c38c:	nop
  40c38d:	(bad)  
  40c38e:	repz icebp 
  40c390:	jae    0x40c3af
  40c392:	fst    QWORD PTR [edx-0x7d]
  40c395:	in     al,dx
  40c396:	loop   0x40c37e
  40c398:	lods   eax,DWORD PTR ds:[esi]
  40c399:	add    esp,edi
  40c39b:	jl     0x40c346
  40c39d:	in     al,dx
  40c39e:	xchg   BYTE PTR [ebx-0x59e492ea],cl
  40c3a4:	(bad)  
  40c3a5:	icebp  
  40c3a6:	mov    ch,0x20
  40c3a8:	adc    BYTE PTR [ebp-0x6f],dh
  40c3ab:	cs popa 
  40c3ad:	pop    eax
  40c3ae:	xor    eax,0x40081367
  40c3b3:	(bad)  
  40c3b5:	mov    bh,BYTE PTR [esi]
  40c3b7:	stc    
  40c3b8:	sbb    ebx,esi
  40c3ba:	xchg   DWORD PTR [eax],esp
  40c3bc:	aam    0x96
  40c3be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3bf:	clc    
  40c3c0:	icebp  
  40c3c1:	pop    eax
  40c3c2:	xor    edi,DWORD PTR [esi-0x38]
  40c3c5:	adc    dh,BYTE PTR [ecx-0x6729a88f]
  40c3cb:	dec    eax
  40c3cc:	lahf   
  40c3cd:	addr16 mov ds:0x216d,eax
  40c3d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3d2:	mov    cl,BYTE PTR [eax+0x54eb2d58]
  40c3d8:	cld    
  40c3d9:	stos   DWORD PTR es:[edi],eax
  40c3da:	cmc    
  40c3db:	inc    ecx
  40c3dc:	sub    DWORD PTR ds:0xfe699f73,edx
  40c3e2:	rol    ah,0x7d
  40c3e5:	jnp    0x40c3ff
  40c3e7:	out    0xb2,eax
  40c3e9:	mov    dh,0x89
  40c3eb:	enter  0xab9b,0xb
  40c3ef:	hlt    
  40c3f0:	test   esi,eax
  40c3f2:	int    0xd1
  40c3f4:	sbb    DWORD PTR [ecx+esi*8],0x65
  40c3f8:	sub    al,0xe9
  40c3fa:	cdq    
  40c3fb:	call   0xefa6:0xb46c7106
  40c402:	jecxz  0x40c3a2
  40c404:	sbb    BYTE PTR [edi+edi*1-0x4f4186b0],ch
  40c40b:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40c40d:	mov    al,ah
  40c40f:	jno    0x40c46c
  40c411:	sar    BYTE PTR [ecx],1
  40c413:	adc    DWORD PTR [ebp+0x1bf61251],0x7b
  40c41a:	xchg   esi,eax
  40c41b:	inc    edx
  40c41c:	sub    esi,0x22
  40c41f:	mov    ds:0xdee2ad7f,al
  40c424:	iret   
  40c425:	adc    eax,0x4ca8db41
  40c42a:	add    esi,ebp
  40c42c:	xor    al,0xca
  40c42e:	inc    eax
  40c42f:	xlat   BYTE PTR ds:[ebx]
  40c430:	cli    
  40c431:	in     eax,dx
  40c432:	dec    edi
  40c433:	hlt    
  40c434:	imul   edx,DWORD PTR [ebx-0x4c3dd297],0xffffffcf
  40c43b:	rol    eax,0xbe
  40c43e:	mov    ebp,0x752cca9c
  40c443:	push   es
  40c444:	xchg   BYTE PTR [edi],dl
  40c446:	or     BYTE PTR [ecx+0x77],bh
  40c449:	mov    edx,esi
  40c44b:	in     al,dx
  40c44c:	jb     0x40c432
  40c44e:	pop    esi
  40c44f:	popf   
  40c450:	jno    0x40c3e6
  40c452:	shr    BYTE PTR [esi+0x11],cl
  40c455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c456:	mov    ebp,0x17d97cfe
  40c45b:	sar    BYTE PTR [ebp-0x7badde65],1
  40c461:	aas    
  40c462:	push   ecx
  40c463:	mov    cl,0x5
  40c465:	in     eax,dx
  40c466:	in     al,dx
  40c467:	push   es
  40c468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c469:	adc    edx,DWORD PTR [edi-0x5c31eff1]
  40c46f:	and    DWORD PTR [esi-0x4e],ecx
  40c472:	jp     0x40c4bd
  40c474:	fs loope 0x40c4ce
  40c477:	data16 stos BYTE PTR es:[edi],al
  40c479:	jb     0x40c441
  40c47b:	test   cl,ch
  40c47d:	pusha  
  40c47e:	scas   eax,DWORD PTR es:[edi]
  40c47f:	loope  0x40c4e6
  40c481:	inc    eax
  40c482:	test   eax,0x58a1c9f9
  40c487:	loop   0x40c4df
  40c489:	sbb    al,0x31
  40c48b:	hlt    
  40c48c:	add    ecx,DWORD PTR [edx]
  40c48e:	mov    eax,ds:0x30de61db
  40c493:	pop    ebx
  40c494:	or     esp,ecx
  40c496:	inc    ecx
  40c497:	sar    BYTE PTR [ebx+0xf],cl
  40c49a:	inc    esi
  40c49b:	add    al,0x4
  40c49d:	leave  
  40c49e:	push   0x14b88987
  40c4a3:	fnstcw WORD PTR [eax+esi*2-0x5e]
  40c4a7:	icebp  
  40c4a8:	pop    ecx
  40c4a9:	call   0xfb3d:0xefc9f995
  40c4b0:	jne    0x40c47b
  40c4b2:	jns    0x40c517
  40c4b4:	fisubr DWORD PTR [ecx+edi*8+0x45b84890]
  40c4bb:	or     DWORD PTR [edx+0xc],ecx
  40c4be:	shl    DWORD PTR [ebp-0x24],1
  40c4c1:	jp     0x40c521
  40c4c3:	dec    esp
  40c4c4:	loopne 0x40c45d
  40c4c6:	pop    ebx
  40c4c7:	or     WORD PTR [esi+0x56],sp
  40c4cb:	scas   al,BYTE PTR es:[edi]
  40c4cc:	bound  esi,QWORD PTR [edx]
  40c4ce:	or     cl,BYTE PTR [ebx+0x6b]
  40c4d1:	dec    eax
  40c4d2:	scas   eax,DWORD PTR es:[edi]
  40c4d3:	repnz dec edx
  40c4d5:	int    0x23
  40c4d7:	ins    BYTE PTR es:[edi],dx
  40c4d8:	inc    ebx
  40c4d9:	adc    ebx,ecx
  40c4db:	ret    
  40c4dc:	jecxz  0x40c54e
  40c4de:	dec    eax
  40c4df:	in     al,dx
  40c4e0:	loopne 0x40c4fc
  40c4e2:	ret    
  40c4e3:	(bad)  
  40c4e5:	xchg   edi,eax
  40c4e6:	fwait
  40c4e7:	outs   dx,BYTE PTR ds:[esi]
  40c4e8:	jno    0x40c497
  40c4ea:	aaa    
  40c4eb:	popa   
  40c4ec:	dec    ecx
  40c4ed:	mov    al,0x45
  40c4ef:	inc    esi
  40c4f0:	pop    ebp
  40c4f1:	retf   0xd150
  40c4f4:	or     ebx,DWORD PTR [esi+0x79]
  40c4f7:	xchg   esp,eax
  40c4f8:	rol    edi,cl
  40c4fa:	sbb    al,ah
  40c4fc:	cmp    DWORD PTR [ecx-0x63],esp
  40c4ff:	into   
  40c500:	or     dl,BYTE PTR [eax+esi*2+0x2033cc45]
  40c507:	mov    bh,0x97
  40c509:	mov    edi,0xa7bd5d17
  40c50e:	sar    al,0x47
  40c511:	stc    
  40c512:	sbb    al,0x48
  40c514:	mov    dl,0x21
  40c516:	lea    edx,[edi+0x2e]
  40c519:	mov    ch,0xe8
  40c51b:	sub    BYTE PTR [esi+0x11],0xdc
  40c51f:	ds iret 
  40c521:	jg     0x40c548
  40c523:	dec    BYTE PTR [ebx]
  40c525:	cs int 0x94
  40c528:	test   al,0x86
  40c52a:	in     al,dx
  40c52b:	mov    ds:0x59aca0e0,eax
  40c530:	leave  
  40c531:	cs jnp 0x40c4d3
  40c534:	ss stos DWORD PTR es:[edi],eax
  40c536:	imul   DWORD PTR [edi-0x1b]
  40c539:	fisub  DWORD PTR [ecx]
  40c53b:	mov    esp,0x512e73c2
  40c540:	retf   
  40c541:	ins    BYTE PTR es:[edi],dx
  40c542:	and    ch,BYTE PTR [ebp+ebp*2-0x51]
  40c546:	je     0x40c52b
  40c548:	les    ebx,FWORD PTR [ebp+0x13070172]
  40c54e:	cld    
  40c54f:	ret    0xfa97
  40c552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c553:	aaa    
  40c554:	lods   eax,DWORD PTR ds:[esi]
  40c555:	or     eax,0xf686aebb
  40c55a:	fmul   DWORD PTR [edx-0x5e]
  40c55d:	lods   eax,DWORD PTR ds:[esi]
  40c55e:	pop    ecx
  40c55f:	dec    BYTE PTR [ebx]
  40c561:	gs ins BYTE PTR es:[edi],dx
  40c563:	scas   eax,DWORD PTR es:[edi]
  40c564:	mov    dh,0xc6
  40c566:	cmp    eax,0x68
  40c569:	push   ebp
  40c56a:	sbb    eax,0xcd852908
  40c56f:	outs   dx,BYTE PTR ds:[esi]
  40c570:	out    0x1,eax
  40c572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c573:	mov    ecx,0xfbec7405
  40c578:	cmp    al,dh
  40c57a:	pop    es
  40c57b:	ins    BYTE PTR es:[edi],dx
  40c57c:	xchg   edi,eax
  40c57d:	jb     0x40c5a8
  40c57f:	sub    eax,0x867e61fd
  40c584:	adc    dl,BYTE PTR [ebx+edi*1-0x3c]
  40c588:	pushf  
  40c589:	call   FWORD PTR [eax-0x5bc4be2]
  40c58f:	rcr    DWORD PTR [edx-0x52a44cee],0xae
  40c596:	fwait
  40c597:	or     al,ch
  40c599:	aam    0x75
  40c59b:	mov    ebx,esp
  40c59d:	and    DWORD PTR [edx],0x0
  40c5a0:	add    ebp,esp
  40c5a2:	repz push ds
  40c5a4:	aas    
  40c5a5:	loopne 0x40c537
  40c5a7:	pop    edi
  40c5a8:	adc    ch,BYTE PTR [esi+eiz*2]
  40c5ab:	imul   ebp,DWORD PTR [edi+0x78481ae7],0x800c8914
  40c5b5:	out    dx,eax
  40c5b6:	mov    ebx,0x170c350
  40c5bb:	inc    edx
  40c5bc:	scas   al,BYTE PTR es:[edi]
  40c5bd:	sbb    eax,0xf3c8c391
  40c5c2:	cdq    
  40c5c3:	push   ds
  40c5c4:	into   
  40c5c5:	fisub  WORD PTR gs:[eax+edx*8]
  40c5c9:	xlat   BYTE PTR ds:[ebx]
  40c5ca:	mov    al,ds:0x480718ee
  40c5cf:	imul   esp,edx,0x70
  40c5d2:	les    eax,FWORD PTR [ecx-0x1a]
  40c5d5:	cmp    ebx,DWORD PTR [ebx-0x55]
  40c5d8:	push   ebx
  40c5d9:	mov    edi,DWORD PTR [edx-0x3cb35e46]
  40c5df:	loope  0x40c5a4
  40c5e1:	adc    eax,eax
  40c5e3:	pop    ebx
  40c5e4:	les    eax,FWORD PTR [ebx]
  40c5e6:	pop    ds
  40c5e7:	sbb    eax,0x928d4818
  40c5ec:	test   eax,0xe80994dd
  40c5f1:	popa   
  40c5f2:	sbb    eax,0xa7be3445
  40c5f7:	out    0xab,eax
  40c5f9:	hlt    
  40c5fa:	sbb    DWORD PTR [esi-0x10a3cc91],0xffffffaf
  40c601:	pop    es
  40c602:	inc    esp
  40c603:	cli    
  40c604:	pop    ebp
  40c605:	mov    dh,0xc9
  40c607:	sub    eax,0x81bd658e
  40c60c:	xchg   edx,eax
  40c60d:	icebp  
  40c60e:	mov    bh,0xf6
  40c610:	mov    BYTE PTR [edi-0x48],bl
  40c613:	mov    ebp,0x90e8db9f
  40c618:	fdiv   QWORD PTR [eax]
  40c61a:	les    ebp,FWORD PTR [ebp+ebx*8-0x7e22058d]
  40c621:	fs push eax
  40c623:	(bad)  
  40c624:	xor    eax,0xf453b99d
  40c629:	xchg   ebp,eax
  40c62a:	adc    DWORD PTR [ebp-0x3b],ebp
  40c62d:	xor    DWORD PTR [ebx-0x5b],edx
  40c630:	arpl   cx,sp
  40c632:	jle    0x40c694
  40c634:	mov    ch,0x44
  40c636:	pop    esi
  40c637:	and    al,0xcd
  40c639:	ret    
  40c63a:	mov    ah,0x36
  40c63c:	xor    al,0xd0
  40c63e:	cs xor esi,DWORD PTR fs:[eax-0x10]
  40c643:	pop    es
  40c644:	adc    edi,DWORD PTR [eax+0x4d0ad937]
  40c64a:	or     ah,BYTE PTR [edi]
  40c64c:	or     eax,0x1c040533
  40c651:	jecxz  0x40c5dd
  40c653:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c654:	xor    ch,0x2a
  40c657:	idiv   BYTE PTR [ecx]
  40c659:	jae    0x40c6ba
  40c65b:	out    0x44,eax
  40c65d:	add    eax,DWORD PTR [eax+0x15cbc398]
  40c663:	out    dx,al
  40c664:	leave  
  40c665:	fsub   DWORD PTR [edi+0x49]
  40c668:	sbb    bl,dh
  40c66a:	mov    ds:0xf05deb3b,al
  40c66f:	xor    DWORD PTR [eax-0x6d],esi
  40c672:	sub    DWORD PTR [edi-0x1d50ba62],ebp
  40c678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c679:	(bad)  
  40c67b:	mov    dl,0x59
  40c67d:	sub    cl,BYTE PTR [esi+edi*1-0x7ead19e]
  40c684:	out    0xc1,eax
  40c686:	call   0x4d9098be
  40c68b:	daa    
  40c68c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c68d:	rol    DWORD PTR [ebx+edx*4-0x7f],cl
  40c691:	dec    esp
  40c692:	mov    ds:0xf27530fe,al
  40c697:	mov    BYTE PTR [esi+0x28],bh
  40c69a:	fdiv   DWORD PTR [eax+0x7a9388aa]
  40c6a0:	xor    BYTE PTR [ebx],0x5c
  40c6a3:	and    esp,DWORD PTR [ecx+0x29c56435]
  40c6a9:	jne    0x40c69c
  40c6ab:	pop    eax
  40c6ac:	mov    eax,ds:0x57eb0f9b
  40c6b1:	lahf   
  40c6b2:	pminsw mm4,QWORD PTR [edx-0x353a1dc4]
  40c6b9:	xchg   ecx,eax
  40c6ba:	xchg   edx,eax
  40c6bb:	sbb    eax,esi
  40c6bd:	cmp    DWORD PTR [ebp+0x1d],0x94dad2a2
  40c6c4:	test   al,0xe1
  40c6c6:	jmp    0xa9e7b3b9
  40c6cb:	rcl    DWORD PTR [ecx-0x7430f485],cl
  40c6d1:	loop   0x40c6a3
  40c6d3:	inc    ebx
  40c6d4:	outs   dx,DWORD PTR ds:[esi]
  40c6d5:	mov    edx,0xe0197bb1
  40c6da:	sub    DWORD PTR [eax+edx*4+0x17556a46],edx
  40c6e1:	test   BYTE PTR [edx],dh
  40c6e3:	push   eax
  40c6e4:	rol    BYTE PTR [edi],0xe1
  40c6e7:	dec    ebp
  40c6e8:	xlat   BYTE PTR ds:[ebx]
  40c6e9:	shl    DWORD PTR [ebx-0x3c2c7439],cl
  40c6ef:	or     DWORD PTR [ecx],ebx
  40c6f1:	inc    edi
  40c6f2:	jnp    0x40c679
  40c6f4:	ss mov ss,eax
  40c6f7:	fdiv   DWORD PTR [edx-0x77]
  40c6fa:	fsubp  st(6),st
  40c6fc:	xor    BYTE PTR [ecx+ecx*1-0x8],bl
  40c700:	push   0xffffffbd
  40c702:	sbb    cl,BYTE PTR [eax+0x236cd466]
  40c708:	cmp    esi,DWORD PTR [eax]
  40c70a:	bound  eax,QWORD PTR [ecx-0x3b]
  40c70d:	stos   DWORD PTR es:[edi],eax
  40c70e:	gs add dh,ch
  40c711:	in     al,dx
  40c712:	pop    ebp
  40c713:	mov    dl,0xfc
  40c715:	(bad)  
  40c717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c718:	shl    DWORD PTR [edi],1
  40c71a:	dec    esi
  40c71b:	iret   
  40c71c:	push   ecx
  40c71d:	jno    0x40c777
  40c71f:	outs   dx,BYTE PTR ds:[esi]
  40c720:	add    BYTE PTR [edi+edi*8],ch
  40c723:	lahf   
  40c724:	push   ebp
  40c725:	jns    0x40c6e7
  40c727:	jmp    DWORD PTR [edi+0x7afadfdd]
  40c72e:	ins    DWORD PTR es:[edi],dx
  40c72f:	loop   0x40c762
  40c731:	push   0xffffffb3
  40c733:	pop    ds
  40c734:	les    esp,FWORD PTR [ebx+0x711b5bb0]
  40c73a:	fwait
  40c73b:	mov    BYTE PTR [esi+0x1d],bh
  40c73e:	add    eax,DWORD PTR [edi+0x42b46724]
  40c744:	pop    ss
  40c745:	xor    cl,cl
  40c747:	xlat   BYTE PTR ds:[ebx]
  40c748:	and    BYTE PTR [ebx-0x78ba6cfb],al
  40c74e:	nop
  40c74f:	ret    0x1127
  40c752:	adc    DWORD PTR [ebx-0xb5b42ca],0x9aca9f01
  40c75c:	add    al,0x43
  40c75e:	push   edx
  40c75f:	gs and eax,0xd09caf5b
  40c765:	(bad)  
  40c766:	fwait
  40c767:	sbb    eax,0x8543a424
  40c76c:	mov    eax,0x1e8f391a
  40c771:	es out dx,eax
  40c773:	cmp    bh,BYTE PTR [ecx-0x5d48f16e]
  40c779:	bswap  ecx
  40c77b:	mov    ebp,DWORD PTR [esi-0x120c599a]
  40c781:	and    BYTE PTR [esi-0x7f],ch
  40c784:	test   al,0xe4
  40c786:	out    dx,al
  40c787:	inc    esi
  40c788:	out    dx,eax
  40c789:	shr    DWORD PTR ds:0xb868d4e,cl
  40c78f:	push   cs
  40c790:	mov    cl,0xd5
  40c792:	nop
  40c793:	inc    edx
  40c794:	and    DWORD PTR [edi],edi
  40c796:	or     BYTE PTR [ecx],0x4e
  40c799:	mov    eax,ds:0xd3e2efd
  40c79e:	mov    ds:0xa839c976,al
  40c7a3:	dec    edx
  40c7a4:	loop   0x40c811
  40c7a6:	sahf   
  40c7a7:	mov    dl,0x6e
  40c7a9:	sbb    esi,ebp
  40c7ab:	jno    0x40c7dc
  40c7ad:	mov    dh,0x46
  40c7af:	imul   ecx,DWORD PTR [esi+ebx*1+0x6589e3eb],0x24
  40c7b7:	jecxz  0x40c755
  40c7b9:	mov    al,ds:0x9b4444c0
  40c7be:	jns    0x40c75e
  40c7c0:	xchg   ebp,eax
  40c7c1:	stos   DWORD PTR es:[edi],eax
  40c7c2:	rol    edi,0x5f
  40c7c5:	clc    
  40c7c6:	scas   eax,DWORD PTR es:[edi]
  40c7c7:	cli    
  40c7c8:	ins    DWORD PTR es:[edi],dx
  40c7c9:	mov    eax,0x9bdec5bc
  40c7cf:	pop    ebp
  40c7d0:	jmp    0x40c82e
  40c7d2:	ret    
  40c7d3:	adc    eax,0x481fe476
  40c7d8:	adc    ch,BYTE PTR [edi-0x40]
  40c7db:	inc    eax
  40c7dc:	enter  0x8be0,0xd3
  40c7e0:	pusha  
  40c7e1:	aas    
  40c7e2:	mov    esp,0xe25da0db
  40c7e7:	jl     0x40c846
  40c7e9:	in     eax,0x3e
  40c7eb:	adc    eax,ebp
  40c7ed:	mov    ch,0xa2
  40c7ef:	retf   
  40c7f0:	cmp    bl,al
  40c7f2:	adc    eax,0xcab81acc
  40c7f7:	por    mm0,QWORD PTR [ecx+eax*8+0x6b54832a]
  40c7ff:	mov    ch,0x67
  40c801:	mov    ds:0x9fdfbbf9,al
  40c806:	add    DWORD PTR [ecx+edi*4-0x7e587faf],0xffffffb9
  40c80e:	outs   dx,DWORD PTR ds:[esi]
  40c80f:	mov    bl,0xd7
  40c811:	jns    0x40c81d
  40c813:	add    bh,bl
  40c815:	push   es
  40c816:	bound  ebx,QWORD PTR [eax]
  40c818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c819:	push   ecx
  40c81a:	jno    0x40c7e0
  40c81c:	jge    0x40c7a3
  40c81e:	mov    ecx,DWORD PTR gs:[esi]
  40c821:	push   0xffffffd7
  40c823:	push   edx
  40c824:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c825:	neg    BYTE PTR [bp+si]
  40c828:	fidiv  WORD PTR [edi+0x33]
  40c82b:	cmp    bh,BYTE PTR [edx]
  40c82d:	mov    ecx,ebp
  40c82f:	imul   ebp,ebx,0xaaf55939
  40c835:	pop    eax
  40c836:	mov    edx,0xc9e6621b
  40c83b:	xchg   ebp,eax
  40c83c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c83d:	mov    ch,0xdf
  40c83f:	or     edi,DWORD PTR [edx-0x4b]
  40c842:	inc    esi
  40c843:	cmp    BYTE PTR [esi],0x63
  40c846:	pop    ecx
  40c847:	jno    0x40c827
  40c849:	xchg   BYTE PTR [esi+0xd],dh
  40c84c:	(bad)  
  40c84d:	in     al,0xfb
  40c84f:	std    
  40c850:	es fxch st(4)
  40c853:	fcmovu st,st(4)
  40c855:	imul   esi,ebx,0xffffffca
  40c858:	stos   DWORD PTR es:[edi],eax
  40c859:	neg    BYTE PTR [ecx+0x11696e4b]
  40c85f:	test   eax,0xdda2429d
  40c864:	out    dx,al
  40c865:	xchg   al,dh
  40c867:	mov    dl,0x55
  40c869:	or     DWORD PTR [eax],ebx
  40c86b:	adc    ebx,eax
  40c86d:	or     DWORD PTR [esi],edx
  40c86f:	jecxz  0x40c888
  40c871:	fs inc ecx
  40c873:	stc    
  40c874:	imul   esi,DWORD PTR ds:0xd399b299,0x8f1719a
  40c87e:	push   eax
  40c87f:	icebp  
  40c880:	call   0x1b4644c3
  40c885:	dec    ebp
  40c886:	std    
  40c887:	fmul   DWORD PTR [edi]
  40c889:	inc    esp
  40c88a:	jne    0x40c85f
  40c88c:	test   BYTE PTR [esi+0x38],0x5b
  40c890:	or     dl,BYTE PTR [edi-0x4e60390b]
  40c896:	imul   ebx,DWORD PTR [ebp+0x319166ae],0x3b
  40c89d:	and    eax,0xe14919ae
  40c8a2:	test   al,0x3a
  40c8a4:	jp     0x40c881
  40c8a6:	aam    0x86
  40c8a8:	dec    esi
  40c8a9:	je     0x40c926
  40c8ab:	cmp    BYTE PTR [esi-0x466b8605],bl
  40c8b1:	lds    esp,FWORD PTR [edx+0x43]
  40c8b4:	outs   dx,BYTE PTR ds:[esi]
  40c8b5:	lods   al,BYTE PTR ds:[esi]
  40c8b6:	(bad)
  40c8b9:	fistp  QWORD PTR [eax]
  40c8bb:	aaa    
  40c8bc:	out    dx,eax
  40c8bd:	adc    eax,0x7de606a3
  40c8c2:	stos   DWORD PTR es:[edi],eax
  40c8c3:	xchg   ebx,eax
  40c8c4:	mov    DWORD PTR [ecx-0x3d],ecx
  40c8c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8c8:	cmc    
  40c8c9:	pop    edi
  40c8ca:	mov    ebx,0x726c47dc
  40c8cf:	push   edx
  40c8d0:	in     al,0x20
  40c8d2:	and    ebp,DWORD PTR [ebx]
  40c8d4:	out    dx,al
  40c8d5:	cmc    
  40c8d6:	fwait
  40c8d7:	pop    esi
  40c8d8:	add    DWORD PTR ss:[eax],esp
  40c8db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8dc:	(bad)  
  40c8dd:	cmc    
  40c8de:	imul   edi,DWORD PTR [edx+0x70],0x9ca86e61
  40c8e5:	lds    edi,FWORD PTR [ebp+0x5311f015]
  40c8eb:	clc    
  40c8ec:	pop    ecx
  40c8ed:	push   ds
  40c8ee:	(bad)
  40c8f1:	loope  0x40c93a
  40c8f3:	pop    eax
  40c8f4:	inc    edi
  40c8f5:	rcr    DWORD PTR [ebx-0x6899eba0],cl
  40c8fb:	dec    esp
  40c8fc:	mov    al,0x32
  40c8fe:	gs push ss
  40c900:	lea    edi,[esi+0x766e3685]
  40c906:	sub    esp,esp
  40c908:	inc    eax
  40c909:	push   ecx
  40c90a:	fs push ebp
  40c90c:	sbb    eax,esp
  40c90e:	test   al,0x99
  40c910:	mov    bh,0x49
  40c912:	dec    esi
  40c913:	jbe    0x40c8dd
  40c915:	(bad)  
  40c916:	xchg   ecx,eax
  40c917:	mov    eax,0x41802457
  40c91c:	xor    bl,BYTE PTR [esp+ebp*2-0x2ce91baf]
  40c923:	jo     0x40c8bd
  40c925:	mov    ?,WORD PTR [ecx+0x45cc6ae9]
  40c92b:	xor    DWORD PTR [eax+0x54046440],esi
  40c931:	dec    edx
  40c932:	jg     0x40c96b
  40c934:	ds push ebx
  40c936:	jg     0x40c933
  40c938:	frstor [eax]
  40c93a:	mov    cl,0x23
  40c93c:	fldcw  WORD PTR [ebx]
  40c93e:	sub    eax,0xdef6111f
  40c943:	or     BYTE PTR [edx-0x2e],bh
  40c946:	ret    0x1437
  40c949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c94a:	mov    ebp,0xb76e5930
  40c94f:	icebp  
  40c950:	(bad)  
  40c951:	mov    ah,0x77
  40c953:	sub    al,0x41
  40c955:	popf   
  40c956:	fs mov ecx,0x95c0b483
  40c95c:	cmc    
  40c95d:	lock (bad) 
  40c960:	mov    esi,ebp
  40c962:	daa    
  40c963:	jmp    0xe524607c
  40c968:	jns    0x40c9d7
  40c96a:	or     eax,0x2fb81940
  40c96f:	scas   al,BYTE PTR es:[edi]
  40c970:	pop    ds
  40c971:	pop    ss
  40c972:	jo     0x40c946
  40c974:	cwde   
  40c975:	pop    eax
  40c976:	imul   edi,DWORD PTR [eax-0x51],0xffffffbc
  40c97a:	cs lock push edx
  40c97d:	sub    DWORD PTR [edi],ebx
  40c97f:	out    dx,eax
  40c980:	cmc    
  40c981:	clc    
  40c982:	and    ecx,ecx
  40c984:	jmp    0x40c9bd
  40c986:	cmp    al,0x0
  40c988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c989:	ret    
  40c98a:	push   ss
  40c98b:	jno    0x40c9d9
  40c98d:	inc    eax
  40c98e:	mov    bl,0xd1
  40c990:	retf   0xdc25
  40c993:	jl     0x40c9a7
  40c995:	clc    
  40c996:	push   ecx
  40c997:	sbb    DWORD PTR [edx+0x299a289e],ebp
  40c99d:	stos   BYTE PTR es:[edi],al
  40c99e:	cmp    dl,0xb7
  40c9a1:	ds pop ebp
  40c9a3:	lahf   
  40c9a4:	jb     0x40c9bf
  40c9a6:	jge    0x40c93c
  40c9a8:	xor    al,0xc9
  40c9aa:	pop    edx
  40c9ab:	pop    ecx
  40c9ac:	inc    esp
  40c9ad:	mov    ds:0xe765c99b,eax
  40c9b2:	mov    WORD PTR [edx+0x6a0fd669],fs
  40c9b8:	cmovg  esi,DWORD PTR [edi]
  40c9bb:	jge    0x40c9e7
  40c9bd:	or     ebp,DWORD PTR [esi+0x6600d32]
  40c9c3:	push   0x3a
  40c9c5:	stos   BYTE PTR es:[edi],al
  40c9c6:	popa   
  40c9c7:	lods   al,BYTE PTR ds:[esi]
  40c9c8:	xchg   edi,eax
  40c9c9:	dec    esi
  40c9ca:	das    
  40c9cb:	sub    eax,0xc152fe18
  40c9d0:	into   
  40c9d1:	pusha  
  40c9d2:	push   cs
  40c9d3:	cmp    DWORD PTR [esi],eax
  40c9d5:	sbb    bh,BYTE PTR [edi+ebp*1-0x27]
  40c9d9:	fs jbe 0x40c9fb
  40c9dc:	call   0x8e109f1c
  40c9e1:	jbe    0x40c9b5
  40c9e3:	mov    bh,0x6
  40c9e5:	mov    cl,0xe6
  40c9e7:	leave  
  40c9e8:	adc    eax,eax
  40c9ea:	cmp    bh,BYTE PTR [edx-0x1]
  40c9ed:	pop    ds
  40c9ee:	push   edx
  40c9ef:	xchg   esi,eax
  40c9f0:	sbb    BYTE PTR [esp+edx*4+0xdf6224a],bl
  40c9f7:	fisttp WORD PTR [eax]
  40c9f9:	xor    edx,DWORD PTR [eax-0x44]
  40c9fc:	adc    DWORD PTR [edi],edi
  40c9fe:	fwait
  40c9ff:	in     al,dx
  40ca00:	in     al,dx
  40ca01:	jnp    0x40ca35
  40ca03:	push   ebp
  40ca04:	neg    edx
  40ca06:	imul   edi,DWORD PTR [esi+0x7d],0xfffffffe
  40ca0a:	mov    bh,BYTE PTR [edi]
  40ca0c:	call   0x8827eca6
  40ca11:	emms   
  40ca13:	pop    edi
  40ca14:	ss mov ah,0x8
  40ca17:	jno    0x40ca00
  40ca19:	cwde   
  40ca1a:	int    0xfa
  40ca1c:	mov    WORD PTR [esi+0x10],?
  40ca1f:	cs (bad) 
  40ca21:	xchg   esp,eax
  40ca22:	fsub   QWORD PTR ss:[ebx-0x5d]
  40ca26:	ins    BYTE PTR es:[edi],dx
  40ca27:	xchg   edx,eax
  40ca28:	jmp    0x40ca62
  40ca2a:	mov    ecx,0xd04f0a44
  40ca2f:	xor    al,0xa9
  40ca31:	test   DWORD PTR [edx-0x15aab9b0],edi
  40ca37:	add    al,0x98
  40ca39:	adc    edx,esi
  40ca3b:	cmp    edx,DWORD PTR ds:0x97b53184
  40ca41:	jb     0x40c9e9
  40ca43:	lods   eax,DWORD PTR ds:[esi]
  40ca44:	jmp    0x446bbde7
  40ca49:	retf   0xfa7
  40ca4c:	and    ebx,DWORD PTR [ebp+0x66]
  40ca4f:	scas   al,BYTE PTR es:[edi]
  40ca50:	inc    DWORD PTR [edi+0x41dc48ef]
  40ca56:	jg     0x40c9e6
  40ca58:	mov    dl,0x45
  40ca5a:	jnp    0x40ca9a
  40ca5c:	adc    eax,0x868f1c24
  40ca61:	test   BYTE PTR [ebp-0x38],bl
  40ca64:	out    0x2a,al
  40ca66:	sbb    ebx,0xab81290
  40ca6c:	(bad)  
  40ca6d:	in     al,dx
  40ca6e:	lock adc DWORD PTR ss:[esi-0x76],0x2465440b
  40ca77:	imul   ecx,DWORD PTR [edi-0x3a1c3078],0x6cd73cd7
  40ca81:	das    
  40ca82:	daa    
  40ca83:	or     ch,BYTE PTR [ecx+0x73]
  40ca86:	out    dx,al
  40ca87:	icebp  
  40ca88:	sub    eax,0xd1d4edb3
  40ca8d:	ins    DWORD PTR es:[edi],dx
  40ca8e:	fsubr  DWORD PTR [ecx+0x3f]
  40ca91:	and    al,0x4
  40ca93:	pop    ebx
  40ca94:	sbb    al,0x7e
  40ca96:	xor    BYTE PTR [ecx+edx*4],0x2c
  40ca9a:	test   eax,0x9da5bb38
  40caa0:	sub    eax,0x1f77ba4d
  40caa5:	fwait
  40caa6:	es in  al,0xd6
  40caa9:	js     0x40ca6b
  40caab:	xor    edi,edx
  40caad:	scas   eax,DWORD PTR es:[edi]
  40caae:	mov    esp,0x6a0f9528
  40cab3:	lock add DWORD PTR [esi+0x4b],ebp
  40cab7:	and    eax,0x52416e5b
  40cabc:	in     al,0xe8
  40cabe:	ret    0x97b6
  40cac1:	cwde   
  40cac2:	ds (bad) 
  40cac4:	push   ecx
  40cac5:	fnop   
  40cac7:	xchg   esp,eax
  40cac8:	adc    bh,BYTE PTR gs:[edx-0x4dbf6c66]
  40cacf:	aaa    
  40cad0:	and    DWORD PTR [eax+0x73],0xffffffa7
  40cad4:	shr    BYTE PTR [eax],1
  40cad6:	gs inc esp
  40cad8:	adc    dl,BYTE PTR [edi+0x8]
  40cadb:	lds    edi,FWORD PTR [ebx+0x64]
  40cade:	adc    dl,0x17
  40cae1:	sub    ch,al
  40cae3:	sbb    al,dh
  40cae5:	aas    
  40cae6:	mov    esp,0xe4abe0eb
  40caeb:	sub    edi,ecx
  40caed:	add    dh,cl
  40caef:	lea    edi,[ecx+edi*1]
  40caf2:	sub    eax,DWORD PTR [ecx]
  40caf4:	jecxz  0x40cac3
  40caf6:	mov    ch,0x8d
  40caf8:	inc    BYTE PTR [esi]
  40cafa:	or     edx,DWORD PTR [ebp-0x62]
  40cafd:	call   0x1e76:0x612ae4ae
  40cb04:	cwde   
  40cb05:	push   edx
  40cb06:	arpl   WORD PTR [edi-0x5f],dx
  40cb09:	add    dh,dl
  40cb0b:	dec    esp
  40cb0c:	push   edx
  40cb0d:	test   al,0x52
  40cb0f:	lock dec esi
  40cb11:	cmp    DWORD PTR ds:0x34d0889d,0x11
  40cb18:	mov    dh,0x7f
  40cb1a:	pop    es
  40cb1b:	mov    al,0xa1
  40cb1d:	and    BYTE PTR [edi+0x496ec590],bh
  40cb23:	aad    0x7b
  40cb25:	lock stos DWORD PTR es:[edi],eax
  40cb27:	int3   
  40cb28:	xchg   ebx,eax
  40cb29:	retf   
  40cb2a:	mov    bh,0xf1
  40cb2c:	ja     0x40cba9
  40cb2e:	sbb    DWORD PTR [eax-0xf7318aa],ebp
  40cb34:	test   BYTE PTR [ebx],dh
  40cb36:	lods   al,BYTE PTR ds:[esi]
  40cb37:	sub    esp,ebp
  40cb39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb3a:	cld    
  40cb3b:	shl    BYTE PTR [esi+0x68],0x68
  40cb3f:	cs cmp ebp,ebx
  40cb42:	fsubr  DWORD PTR [eax]
  40cb44:	nop
  40cb45:	leave  
  40cb46:	lea    esi,[edi]
  40cb48:	push   edi
  40cb49:	push   edx
  40cb4a:	dec    esp
  40cb4b:	(bad)  
  40cb4c:	cmp    dh,BYTE PTR [edx-0x62]
  40cb4f:	add    eax,0xd309c607
  40cb54:	sar    BYTE PTR gs:[ebp+edi*8+0x74581eaa],cl
  40cb5c:	xor    BYTE PTR [esi+0x4e02d849],al
  40cb62:	sar    DWORD PTR [esi],0xe7
  40cb65:	mov    cl,0xd4
  40cb67:	xchg   BYTE PTR [esi],ah
  40cb69:	in     al,dx
  40cb6a:	dec    eax
  40cb6b:	fmul   QWORD PTR [eax+0x26]
  40cb6e:	mov    cl,0xa8
  40cb70:	mov    eax,0xe37b9e34
  40cb75:	fs lock mov dl,0x46
  40cb79:	push   cs
  40cb7a:	adc    al,BYTE PTR [ecx-0x25]
  40cb7d:	rcl    DWORD PTR [ecx+0x35],1
  40cb80:	cld    
  40cb81:	mov    eax,ds:0x407e7423
  40cb86:	or     ah,BYTE PTR [edx+0x46]
  40cb89:	push   ds
  40cb8a:	xchg   edi,eax
  40cb8b:	leave  
  40cb8c:	xor    al,dh
  40cb8e:	mov    DWORD PTR [eax+0x78],esp
  40cb91:	dec    edi
  40cb92:	hlt    
  40cb93:	mov    bh,0x15
  40cb95:	cdq    
  40cb96:	fiadd  WORD PTR [edx+0x5b]
  40cb99:	mov    DWORD PTR [eax+0x25],esp
  40cb9c:	test   eax,0xeec7021c
  40cba1:	sahf   
  40cba2:	adc    eax,0x5117b384
  40cba7:	jecxz  0x40cb96
  40cba9:	loopne 0x40cb42
  40cbab:	push   edx
  40cbac:	pop    ebp
  40cbad:	retf   0x3cf2
  40cbb0:	dec    ecx
  40cbb1:	sub    dl,bh
  40cbb3:	popa   
  40cbb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbb5:	cmp    bl,dh
  40cbb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbb8:	mov    dh,0x3f
  40cbba:	or     eax,0xc33b0555
  40cbbf:	and    esi,DWORD PTR [edx+edx*4-0x27]
  40cbc3:	aad    0x5c
  40cbc5:	and    ch,BYTE PTR [ecx]
  40cbc7:	push   ecx
  40cbc8:	clc    
  40cbc9:	sbb    BYTE PTR [edx+0x3e],bh
  40cbcc:	jmp    0x40cbc6
  40cbce:	xor    dh,BYTE PTR [edi-0x35b157e5]
  40cbd4:	mov    al,0xf3
  40cbd6:	pop    ecx
  40cbd7:	pop    eax
  40cbd8:	mov    ecx,0x2d4a8229
  40cbdd:	rcl    ebx,cl
  40cbdf:	jno    0x40cbe0
  40cbe1:	int3   
  40cbe2:	js     0x40cb6d
  40cbe4:	push   ebx
  40cbe5:	xchg   ah,dl
  40cbe7:	test   dh,ah
  40cbe9:	xchg   DWORD PTR [esi*1+0x560b3983],ecx
  40cbf0:	dec    ebx
  40cbf1:	imul   ecx,DWORD PTR ds:0x28c668fa,0xffffffb8
  40cbf8:	lods   al,BYTE PTR ds:[esi]
  40cbf9:	inc    ebx
  40cbfa:	xor    dh,BYTE PTR [ecx+ebp*1]
  40cbfd:	adc    ecx,eax
  40cbff:	(bad)  
  40cc00:	xchg   esi,eax
  40cc01:	pushf  
  40cc02:	aad    0x58
  40cc04:	add    al,0x7e
  40cc06:	cwde   
  40cc07:	loope  0x40cbf9
  40cc09:	jno    0x40cc58
  40cc0b:	jb     0x40cc6c
  40cc0d:	sbb    esi,DWORD PTR [eax]
  40cc0f:	mov    bh,0x53
  40cc11:	pop    ebx
  40cc12:	neg    BYTE PTR [ecx]
  40cc14:	and    bl,ch
  40cc16:	add    ebx,DWORD PTR [esp+ebp*8-0x53775017]
  40cc1d:	cmp    eax,DWORD PTR [ebx-0x20]
  40cc20:	sbb    cl,BYTE PTR [edx-0x2761e877]
  40cc26:	xlat   BYTE PTR ds:[ebx]
  40cc27:	xchg   ebp,eax
  40cc28:	and    ebp,DWORD PTR [eax]
  40cc2a:	mov    ecx,db3
  40cc2d:	call   0xcb2aadad
  40cc32:	add    eax,0xaa874d61
  40cc37:	adc    edi,DWORD PTR [edi+0x1d8f4e6d]
  40cc3d:	jne    0x40ccad
  40cc3f:	addr16 push edi
  40cc41:	push   edx
  40cc42:	push   eax
  40cc43:	jmp    0x40cc38
  40cc45:	(bad)  
  40cc46:	aas    
  40cc47:	lahf   
  40cc48:	mov    dl,0x54
  40cc4a:	imul   esp,eax,0x20396ec4
  40cc50:	rcl    DWORD PTR [ebx+ebx*1],cl
  40cc53:	cmp    BYTE PTR ds:0x128d2251,bl
  40cc59:	(bad)  
  40cc5a:	xchg   esp,eax
  40cc5b:	add    bl,BYTE PTR [eax+0x65]
  40cc5e:	jno    0x40cc54
  40cc60:	sahf   
  40cc61:	cld    
  40cc62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc63:	push   edi
  40cc64:	sahf   
  40cc65:	or     ah,BYTE PTR [eax+eax*2-0x6d3b7c80]
  40cc6c:	test   ebx,ebx
  40cc6e:	das    
  40cc6f:	push   0x96519d49
  40cc74:	cmp    bh,dl
  40cc76:	imul   ecx,DWORD PTR [ebx+0x47c35e44],0x1a
  40cc7d:	pop    DWORD PTR [ecx-0x50c8e82]
  40cc83:	push   edx
  40cc84:	in     eax,dx
  40cc85:	and    BYTE PTR [ecx-0x66],bh
  40cc88:	mov    bl,0x23
  40cc8a:	dec    esi
  40cc8b:	cmp    bh,dl
  40cc8d:	jns    0x40cc20
  40cc8f:	ret    0x1d1c
  40cc92:	in     al,0x1
  40cc94:	cmc    
  40cc95:	xchg   ebp,eax
  40cc96:	cmp    ebx,DWORD PTR [eax+esi*1-0x4f]
  40cc9a:	repnz mov bh,0x2d
  40cc9d:	and    al,0x37
  40cc9f:	fst    st(7)
  40cca1:	outs   dx,DWORD PTR ds:[esi]
  40cca2:	add    eax,0xdb33de22
  40cca7:	add    al,BYTE PTR [eax]
  40cca9:	and    DWORD PTR [ebp+0x67],0x792d69fd
  40ccb0:	push   edx
  40ccb1:	fsub   QWORD PTR [ebp+ebp*1+0x7c8d1550]
  40ccb8:	xchg   ebx,eax
  40ccb9:	lods   al,BYTE PTR ds:[esi]
  40ccba:	rol    edi,1
  40ccbc:	out    0x6c,al
  40ccbe:	sbb    dl,BYTE PTR [ebx-0x47]
  40ccc1:	pop    edi
  40ccc2:	fild   DWORD PTR [ecx+0x4f]
  40ccc5:	jae    0x40cc63
  40ccc7:	jae    0x40cc5b
  40ccc9:	xchg   ebx,eax
  40ccca:	in     al,0xa4
  40cccc:	jb     0x40cce7
  40ccce:	repz mov edi,0xa9bf497e
  40ccd4:	mov    esi,ebx
  40ccd6:	add    al,0xa9
  40ccd8:	aam    0xc1
  40ccda:	push   ecx
  40ccdb:	sbb    al,0xb1
  40ccdd:	leave  
  40ccde:	enter  0xe977,0xd4
  40cce2:	push   edi
  40cce3:	outs   dx,BYTE PTR ds:[esi]
  40cce4:	sbb    DWORD PTR [ebx],0x56
  40cce7:	pop    ss
  40cce8:	pop    esi
  40cce9:	dec    ebx
  40ccea:	outs   dx,DWORD PTR ds:[esi]
  40cceb:	stos   BYTE PTR es:[edi],al
  40ccec:	sub    ebx,DWORD PTR [esi]
  40ccee:	add    dh,BYTE PTR [edi+edx*1-0x40]
  40ccf2:	push   es
  40ccf3:	xchg   edi,eax
  40ccf4:	xchg   esi,eax
  40ccf5:	mov    dh,0xd4
  40ccf7:	cld    
  40ccf8:	mov    ebp,0x5ba8c3c6
  40ccfd:	add    BYTE PTR [ebx],0xae
  40cd00:	and    al,0x81
  40cd02:	and    BYTE PTR [ecx],dh
  40cd04:	dec    ebx
  40cd05:	out    dx,al
  40cd06:	push   ds
  40cd07:	adc    ebx,DWORD PTR [edi]
  40cd09:	cs enter 0x646d,0xea
  40cd0e:	adc    DWORD PTR [esi],edx
  40cd10:	pop    ds
  40cd11:	inc    ebp
  40cd12:	and    dl,BYTE PTR gs:[eax+0x74]
  40cd16:	adc    ecx,DWORD PTR [ecx]
  40cd18:	pop    ds
  40cd19:	dec    edx
  40cd1a:	jae    0x40ccde
  40cd1c:	mov    ebp,0xf848e2a7
  40cd21:	in     eax,0x3c
  40cd23:	cld    
  40cd24:	sub    esp,DWORD PTR [ecx-0x126ca80d]
  40cd2a:	nop
  40cd2b:	aaa    
  40cd2c:	inc    ecx
  40cd2d:	or     BYTE PTR [edx],bl
  40cd2f:	sub    edx,DWORD PTR [eax+0x32f21046]
  40cd35:	je     0x40cd5d
  40cd37:	mov    WORD PTR [esi],gs
  40cd39:	sub    eax,0xc50dd1d5
  40cd3e:	lock jle 0x40cda5
  40cd41:	cmp    al,0x7a
  40cd43:	ins    BYTE PTR es:[edi],dx
  40cd44:	dec    ebx
  40cd45:	into   
  40cd46:	pop    ebx
  40cd47:	adc    BYTE PTR [edx+0x4640f0fd],bl
  40cd4d:	push   0xb
  40cd4f:	rcr    bh,0x18
  40cd52:	fsubr  DWORD PTR [edx-0x429665e7]
  40cd58:	int    0x8b
  40cd5a:	icebp  
  40cd5b:	sbb    eax,0x43fbb26a
  40cd60:	xchg   ebp,eax
  40cd61:	sbb    cl,ah
  40cd63:	pop    ebp
  40cd64:	dec    eax
  40cd65:	push   eax
  40cd66:	repnz push 0xf4be4279
  40cd6c:	stos   BYTE PTR es:[edi],al
  40cd6d:	les    ecx,FWORD PTR [edi+eax*2-0x5c]
  40cd71:	sti    
  40cd72:	adc    eax,0x3f190f4c
  40cd77:	jl     0x40cd3e
  40cd79:	pop    edx
  40cd7a:	out    0xa1,al
  40cd7c:	sbb    edx,edi
  40cd7e:	adc    al,0x80
  40cd80:	mov    cl,0x47
  40cd82:	arpl   WORD PTR [edx],sp
  40cd84:	xchg   ebx,eax
  40cd85:	inc    eax
  40cd86:	add    edx,DWORD PTR [edx]
  40cd88:	sti    
  40cd89:	xor    BYTE PTR [ecx],ch
  40cd8b:	sbb    ebx,DWORD PTR [edi]
  40cd8d:	scas   al,BYTE PTR es:[edi]
  40cd8e:	or     bl,BYTE PTR [esp+eax*8+0x2ebf10a3]
  40cd95:	rol    esp,0xf5
  40cd98:	pop    edi
  40cd99:	imul   esp,DWORD PTR [ebx-0x55752a1b],0x16b0c72b
  40cda3:	or     al,0xf8
  40cda5:	push   esi
  40cda6:	mov    ds,WORD PTR [ecx-0x2e3a51b7]
  40cdac:	mov    esp,0xd781f2a4
  40cdb1:	jo     0x40cd75
  40cdb3:	mov    bl,0xe4
  40cdb5:	dec    edx
  40cdb6:	fild   WORD PTR [esi+0x263e0bbc]
  40cdbc:	lea    ebp,[esi+0x17]
  40cdbf:	shl    DWORD PTR [esi+0x5],0x9
  40cdc3:	xor    edx,eax
  40cdc5:	push   edx
  40cdc6:	pusha  
  40cdc7:	mov    ebp,0xd092c20d
  40cdcc:	inc    dh
  40cdce:	mov    edi,0xb95ae1f6
  40cdd3:	xor    BYTE PTR [eax-0x29],bh
  40cdd6:	mov    ds:0xed2093d7,eax
  40cddb:	jl     0x40cdbc
  40cddd:	loopne 0x40cde1
  40cddf:	pusha  
  40cde0:	xor    al,0x77
  40cde2:	gs push ds
  40cde4:	enter  0xdc35,0x37
  40cde8:	fsub   QWORD PTR [ecx]
  40cdea:	stos   BYTE PTR es:[edi],al
  40cdeb:	or     al,0xf3
  40cded:	pushf  
  40cdee:	or     dh,BYTE PTR [ebx]
  40cdf0:	mov    edi,0xd64e2a7d
  40cdf5:	sbb    BYTE PTR [esp+ecx*1],bl
  40cdf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdf9:	sbb    eax,0x18e8ca24
  40cdfe:	push   es
  40cdff:	push   0xffffff9d
  40ce01:	in     eax,0x0
  40ce03:	adc    al,BYTE PTR [ebx]
  40ce05:	adc    DWORD PTR gs:[ebx-0x57],eax
  40ce09:	fimul  DWORD PTR [ebp+0x5689e58a]
  40ce0f:	mov    ecx,0xa17ab5c
  40ce14:	pop    ds
  40ce15:	popa   
  40ce16:	aad    0x2e
  40ce18:	cmp    BYTE PTR [esi+0x17],dh
  40ce1b:	pop    ecx
  40ce1c:	sbb    BYTE PTR [edi-0x6a],ch
  40ce1f:	outs   dx,BYTE PTR ds:[esi]
  40ce20:	add    ah,BYTE PTR [ebp-0x319a4de9]
  40ce26:	xor    al,BYTE PTR [ebx-0x1e580c13]
  40ce2c:	xchg   DWORD PTR [ecx+0x4a],eax
  40ce2f:	je     0x40cdec
  40ce31:	lea    edx,[edx+edx*2+0x17174bce]
  40ce38:	pop    esp
  40ce39:	dec    ebp
  40ce3a:	ins    DWORD PTR es:[edi],dx
  40ce3b:	cli    
  40ce3c:	(bad)  
  40ce3d:	repnz fist DWORD PTR [ebx-0x3f]
  40ce41:	popa   
  40ce42:	xor    ch,ah
  40ce44:	(bad)  
  40ce46:	jne    0x40ce07
  40ce48:	adc    dh,0xd4
  40ce4b:	dec    edi
  40ce4c:	pusha  
  40ce4d:	xchg   esi,eax
  40ce4e:	mov    edi,0x6cb24cdc
  40ce53:	jg     0x40ce6b
  40ce55:	xor    cl,BYTE PTR [ebp+0x25]
  40ce58:	imul   esi,DWORD PTR ds:0x6eea089c,0x3d
  40ce5f:	push   ecx
  40ce60:	in     al,dx
  40ce61:	ins    DWORD PTR es:[edi],dx
  40ce62:	dec    edi
  40ce63:	rcl    DWORD PTR [ecx],1
  40ce65:	out    dx,al
  40ce66:	cmp    dl,BYTE PTR [ebp+0x65]
  40ce69:	jne    0x40cece
  40ce6b:	rcr    DWORD PTR [edx-0x7e5dcb9f],1
  40ce71:	js     0x40ce73
  40ce73:	ds mov ebx,0x40a10b03
  40ce79:	dec    esp
  40ce7a:	adc    ah,BYTE PTR [edx]
  40ce7c:	cmp    dh,BYTE PTR [edi]
  40ce7e:	js     0x40ced4
  40ce80:	addr16 mov esi,0x4baabec7
  40ce86:	jge    0x40ce78
  40ce88:	mov    ds:0xfbe3f764,eax
  40ce8d:	(bad)  
  40ce8e:	sub    dh,al
  40ce90:	lods   al,BYTE PTR ds:[esi]
  40ce91:	adc    esi,DWORD PTR [ecx]
  40ce93:	xchg   ecx,eax
  40ce94:	cmp    dl,dl
  40ce96:	test   DWORD PTR [eax-0x44dd24db],esp
  40ce9c:	add    DWORD PTR [edi-0x193b5aef],edi
  40cea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cea3:	mov    esp,0xdb08307f
  40cea8:	int    0xb2
  40ceaa:	cwde   
  40ceab:	ins    BYTE PTR es:[edi],dx
  40ceac:	jl     0x40cf00
  40ceae:	call   0x4c26e62a
  40ceb3:	dec    esi
  40ceb4:	in     eax,0x71
  40ceb6:	pop    ecx
  40ceb7:	inc    esi
  40ceb8:	repnz pop eax
  40ceba:	sbb    BYTE PTR [ebx-0x340aa1fe],0x16
  40cec1:	inc    ebp
  40cec2:	enter  0xbfcb,0xb3
  40cec6:	or     al,0x5d
  40cec8:	(bad)  
  40cec9:	out    0x80,eax
  40cecb:	mov    esp,0x8f1ad851
  40ced0:	fs (bad) 
  40ced2:	xor    BYTE PTR [eax],bl
  40ced4:	adc    BYTE PTR [eax],cl
  40ced6:	jo     0x40ced2
  40ced8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ced9:	rol    DWORD PTR [edx],0x8f
  40cedc:	lock and DWORD PTR [esi+0x43],ebx
  40cee0:	xchg   BYTE PTR [ecx-0x8],dh
  40cee3:	inc    edx
  40cee4:	leave  
  40cee5:	cwde   
  40cee6:	pop    ss
  40cee7:	call   0x79c7:0x1c8b6565
  40ceee:	or     eax,0x91dcb118
  40cef3:	cmp    al,0x5a
  40cef5:	push   eax
  40cef6:	fucomi st,st(5)
  40cef8:	icebp  
  40cef9:	fcom   QWORD PTR [eax-0x37]
  40cefc:	sub    DWORD PTR [ebx],ecx
  40cefe:	dec    esi
  40ceff:	(bad)  
  40cf00:	mov    ecx,0xef4c3ec8
  40cf05:	pop    es
  40cf06:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40cf08:	sub    BYTE PTR [eax],0xb5
  40cf0b:	(bad)  
  40cf0c:	push   0xffffffa5
  40cf0e:	ja     0x40cf41
  40cf10:	jge    0x40cecb
  40cf12:	dec    esi
  40cf13:	ret    0xd0
  40cf16:	into   
  40cf17:	fwait
  40cf18:	sar    DWORD PTR [ebx+0x1e],0x5b
  40cf1c:	fistp  DWORD PTR [eax-0x726b7d58]
  40cf22:	cli    
  40cf23:	pusha  
  40cf24:	pop    ss
  40cf25:	xchg   ebp,eax
  40cf26:	sub    BYTE PTR [ebx-0x2a],0x71
  40cf2a:	xchg   DWORD PTR [edx],esi
  40cf2c:	in     eax,dx
  40cf2d:	xor    eax,0x728051b8
  40cf32:	xchg   ebp,eax
  40cf33:	retf   
  40cf34:	or     BYTE PTR [edx-0xea2d897],dl
  40cf3a:	dec    eax
  40cf3b:	mov    ecx,0xd040af76
  40cf40:	nop
  40cf41:	loop   0x40cf66
  40cf43:	setns  cl
  40cf46:	ffreep st(5)
  40cf48:	call   0x4268:0xd2ec41f2
  40cf4f:	jo     0x40cf75
  40cf51:	push   ebp
  40cf52:	sbb    DWORD PTR [ebx-0x6808288],ebx
  40cf58:	aam    0x9c
  40cf5a:	mov    dl,0xd2
  40cf5c:	shr    ch,cl
  40cf5e:	sub    al,0x13
  40cf60:	out    0x52,eax
  40cf62:	pop    ebp
  40cf63:	ins    BYTE PTR es:[edi],dx
  40cf64:	loopne 0x40cf52
  40cf66:	dec    edx
  40cf67:	adc    eax,0x5078750d
  40cf6c:	lea    edi,[edx+0x57]
  40cf6f:	sbb    DWORD PTR [ebp-0x79cc0de],eax
  40cf75:	mov    WORD PTR [ebx+0x9f57576],cs
  40cf7b:	cmp    DWORD PTR [ecx-0xf4ea47c],ebx
  40cf81:	and    eax,0x1d110642
  40cf86:	mov    dh,0x23
  40cf88:	mov    ah,0x2b
  40cf8a:	addr16 aam 0x47
  40cf8d:	lea    eax,[ecx+edx*8]
  40cf90:	pop    esi
  40cf91:	cmp    al,BYTE PTR [edx]
  40cf93:	dec    esi
  40cf94:	mov    ds:0xd4945320,al
  40cf99:	nop
  40cf9a:	aas    
  40cf9b:	pop    es
  40cf9c:	loopne 0x40d003
  40cf9e:	sbb    ecx,edx
  40cfa0:	mov    ch,0x48
  40cfa2:	mov    ds:0x6910211f,al
  40cfa7:	fidivr WORD PTR [ebx+ebx*8]
  40cfaa:	pop    edx
  40cfab:	mov    bh,0x8e
  40cfad:	test   DWORD PTR [edi+0x56],ecx
  40cfb0:	and    ch,cl
  40cfb2:	add    eax,0xfbbfa241
  40cfb7:	sub    BYTE PTR [edi-0x44],dh
  40cfba:	pop    ebp
  40cfbb:	and    DWORD PTR [esi+eax*2],eax
  40cfbe:	daa    
  40cfbf:	xor    BYTE PTR [edx],dh
  40cfc1:	mov    al,ds:0x63746d33
  40cfc6:	inc    eax
  40cfc7:	iret   
  40cfc8:	dec    edi
  40cfc9:	inc    BYTE PTR [edx+edx*4+0x7f8e46b8]
  40cfd0:	add    BYTE PTR [edx+0x208f7769],0x1a
  40cfd7:	xchg   edx,eax
  40cfd8:	ret    
  40cfd9:	jecxz  0x40d015
  40cfdb:	shl    BYTE PTR ds:0xc7ea7071,cl
  40cfe1:	push   0x83ae3d1b
  40cfe6:	(bad)  
  40cfe7:	mov    cl,0x82
  40cfe9:	xor    eax,0xaabde208
  40cfee:	das    
  40cfef:	sub    eax,0xe7c918da
  40cff4:	ror    BYTE PTR [eax-0x6c],cl
  40cff7:	(bad)  
  40cff8:	out    dx,al
  40cff9:	pop    edi
  40cffa:	xchg   ecx,esp
  40cffc:	and    edx,edx
  40cffe:	data16 ror BYTE PTR [ebp+0x7c1ee4e4],cl
  40d005:	gs sbb eax,0x35e16fef
  40d00b:	leave  
  40d00c:	inc    esi
  40d00d:	jecxz  0x40cfaf
  40d00f:	cs es adc al,0x70
  40d013:	shr    esp,0xee
  40d016:	add    bh,BYTE PTR [esi+0x675c2649]
  40d01c:	sub    ah,dl
  40d01e:	(bad)  
  40d01f:	icebp  
  40d020:	in     al,0xa3
  40d022:	push   esi
  40d023:	jl     0x40cff5
  40d025:	in     eax,0x8d
  40d027:	pop    ecx
  40d028:	lahf   
  40d029:	ins    DWORD PTR es:[edi],dx
  40d02a:	out    0x39,eax
  40d02c:	repnz into 
  40d02e:	mov    bh,0x30
  40d030:	cmc    
  40d031:	cmp    DWORD PTR [esp+esi*1-0x53c06f4e],esi
  40d038:	adc    dl,ah
  40d03a:	xor    dl,bl
  40d03c:	fldln2 
  40d03e:	call   0xbe84:0xb98750e0
  40d045:	mov    dh,0xab
  40d047:	add    al,0x89
  40d049:	out    dx,eax
  40d04a:	jne    0x40d086
  40d04c:	or     dl,bh
  40d04e:	add    cl,BYTE PTR [edx-0x7d02f714]
  40d054:	js     0x40d063
  40d056:	mov    esi,0x9a170028
  40d05b:	push   ds
  40d05c:	fldenv [eax]
  40d05e:	aaa    
  40d05f:	xchg   edx,eax
  40d060:	jmp    0x40d06b
  40d062:	dec    eax
  40d063:	stc    
  40d064:	pop    edi
  40d065:	push   edi
  40d066:	fcomp  DWORD PTR [ecx+eax*1+0x20]
  40d06a:	test   al,0xc5
  40d06c:	gs cwde 
  40d06e:	jl     0x40d069
  40d070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d071:	aad    0xff
  40d073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d074:	sbb    al,0x6a
  40d076:	mov    ah,0xd5
  40d078:	xlat   BYTE PTR ds:[ebx]
  40d079:	cmp    DWORD PTR [ebx+0x70],eax
  40d07c:	mov    eax,ds:0x87cf4051
  40d081:	cwde   
  40d082:	enter  0x476b,0xf3
  40d086:	mov    bl,0xb
  40d088:	pop    edx
  40d089:	stos   BYTE PTR es:[edi],al
  40d08a:	mov    esp,0xca4a6ed5
  40d08f:	icebp  
  40d090:	mov    al,ds:0x3829b98
  40d095:	adc    ah,dl
  40d097:	and    al,0x5c
  40d099:	shl    BYTE PTR [edi+ebp*8-0x14],cl
  40d09d:	out    dx,al
  40d09e:	les    ebp,FWORD PTR [edi+0x28]
  40d0a1:	pop    ebp
  40d0a2:	sub    BYTE PTR [edi+0x59],bl
  40d0a5:	in     eax,dx
  40d0a6:	mov    edi,0xa24e10b2
  40d0ab:	lock enter 0x1b4c,0x3a
  40d0b0:	dec    esi
  40d0b1:	adc    esi,DWORD PTR [edx-0x9]
  40d0b4:	rcl    DWORD PTR [ecx+0x55],0x12
  40d0b8:	ret    0xb5ee
  40d0bb:	push   ebx
  40d0bc:	push   edx
  40d0bd:	repz loopne 0x40d095
  40d0c0:	fdivr  QWORD PTR [ecx+0x69c29565]
  40d0c6:	adc    esi,esp
  40d0c8:	lock mov ch,0x62
  40d0cb:	call   0x186a:0xfdd7ad32
  40d0d2:	push   0xb228ada1
  40d0d7:	lahf   
  40d0d8:	ret    
  40d0d9:	sub    dh,BYTE PTR [ecx]
  40d0db:	adc    eax,edi
  40d0dd:	pop    ebp
  40d0de:	sbb    DWORD PTR [eax-0xdba9fc],ebp
  40d0e4:	mov    WORD PTR [edx],fs
  40d0e6:	cli    
  40d0e7:	mov    ch,0x31
  40d0e9:	adc    BYTE PTR [edx-0x71ae1bdf],0xaa
  40d0f0:	je     0x40d091
  40d0f2:	js     0x40d158
  40d0f4:	adc    eax,0xf57642c9
  40d0f9:	pusha  
  40d0fa:	cmc    
  40d0fb:	push   es
  40d0fc:	sbb    dl,BYTE PTR ds:0x39a0206b
  40d102:	mov    al,0xba
  40d104:	imul   dl
  40d106:	sub    BYTE PTR [eax+esi*4+0x53],dh
  40d10a:	int3   
  40d10b:	mov    eax,ds:0xe187d48e
  40d110:	fnstcw WORD PTR [esi+0x33]
  40d113:	in     eax,dx
  40d114:	nop
  40d115:	stos   BYTE PTR es:[edi],al
  40d116:	or     al,0x23
  40d118:	stos   DWORD PTR es:[edi],eax
  40d119:	mov    BYTE PTR [ebp-0xf],bh
  40d11c:	xchg   edx,eax
  40d11d:	in     eax,0xc8
  40d11f:	not    BYTE PTR [eiz*1-0xa419e2]
  40d126:	daa    
  40d127:	pop    ebx
  40d128:	sti    
  40d129:	cmp    DWORD PTR [ebx+0x607dc747],edx
  40d12f:	jle    0x40d183
  40d131:	push   ebx
  40d132:	punpckhbw mm4,QWORD PTR [esi-0x69]
  40d136:	add    ch,BYTE PTR [ebx]
  40d138:	fidiv  WORD PTR [esi-0xbff88c0]
  40d13e:	out    dx,al
  40d13f:	outs   dx,DWORD PTR ds:[esi]
  40d140:	inc    ebp
  40d141:	(bad)  
  40d143:	xchg   eax,edi
  40d145:	adc    al,0x3b
  40d147:	push   cs
  40d148:	cmc    
  40d149:	loop   0x40d19a
  40d14b:	jecxz  0x40d1aa
  40d14d:	mov    eax,ds:0xe1a5cc51
  40d152:	sbb    dl,BYTE PTR [edx+ecx*8]
  40d155:	mov    al,0xae
  40d157:	cmp    al,0xb3
  40d159:	cmc    
  40d15a:	ret    0x4162
  40d15d:	xchg   edi,eax
  40d15e:	mov    dh,0x9d
  40d160:	add    al,0x60
  40d162:	daa    
  40d163:	dec    eax
  40d164:	or     ecx,DWORD PTR [esi-0x455e7b34]
  40d16a:	repnz mov bl,0x59
  40d16d:	xchg   DWORD PTR [eax],edi
  40d16f:	jnp    0x40d119
  40d171:	pop    ss
  40d172:	mov    bh,0xdf
  40d174:	xor    eax,0x32a282a9
  40d179:	ja     0x40d151
  40d17b:	test   al,0x65
  40d17d:	mov    al,ds:0x242e0b77
  40d182:	push   esi
  40d183:	hlt    
  40d184:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d185:	and    dl,cl
  40d187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d188:	jmp    DWORD PTR [ecx+0x109f8c46]
  40d18e:	push   edx
  40d18f:	shr    WORD PTR [edx+0x252ee121],1
  40d196:	xor    BYTE PTR [esi+0x16],dl
  40d199:	call   0xbba5:0x53d3dbed
  40d1a0:	mov    ah,0x65
  40d1a2:	lds    ebp,FWORD PTR [eax+0x5e]
  40d1a5:	loop   0x40d1a8
  40d1a7:	dec    edi
  40d1a8:	ins    DWORD PTR es:[edi],dx
  40d1a9:	bound  esp,QWORD PTR [eax+0x70]
  40d1ac:	and    al,0xa0
  40d1ae:	add    al,0xc3
  40d1b0:	cmp    ebx,DWORD PTR [eax]
  40d1b2:	jb     0x40d223
  40d1b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1b5:	std    
  40d1b6:	inc    eax
  40d1b7:	or     DWORD PTR [ebp-0x2176efa],ebp
  40d1bd:	add    eax,DWORD PTR [edx]
  40d1bf:	mov    eax,0x222370d2
  40d1c4:	adc    eax,0xde540496
  40d1c9:	lock lock or ah,BYTE PTR [eax+0x1e]
  40d1ce:	xchg   ecx,eax
  40d1cf:	mov    edi,0x50ef74c7
  40d1d4:	shl    DWORD PTR [eax],1
  40d1d6:	push   0xe2c4c945
  40d1db:	repz lahf 
  40d1dd:	je     0x40d212
  40d1df:	out    dx,eax
  40d1e0:	test   DWORD PTR [edx-0x6456d190],edi
  40d1e6:	lock sub esp,DWORD PTR [edi]
  40d1e9:	mov    esi,0x8cd4f518
  40d1ee:	stc    
  40d1ef:	jle    0x40d245
  40d1f1:	cmp    dl,bl
  40d1f3:	push   ebx
  40d1f4:	(bad)  
  40d1f5:	repz in al,0x37
  40d1f8:	or     al,0x5
  40d1fa:	das    
  40d1fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1fc:	push   esi
  40d1fd:	push   es
  40d1fe:	arpl   WORD PTR [ebx],bx
  40d200:	mov    ebx,ebp
  40d202:	xchg   ecx,eax
  40d203:	pop    ecx
  40d204:	fadd   QWORD PTR [ecx-0x1b]
  40d207:	ror    DWORD PTR [ecx],0x58
  40d20a:	rcr    BYTE PTR [ebx+ebx*8+0x6319ac47],1
  40d211:	xlat   BYTE PTR ds:[ebx]
  40d212:	data16 fcmovbe st,st(3)
  40d215:	sbb    DWORD PTR [edi-0x57],0xffffffec
  40d219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d21a:	mov    esi,0x1c1397bf
  40d21f:	call   0xc62e:0x5677babb
  40d226:	or     esi,DWORD PTR [edi]
  40d228:	dec    edi
  40d229:	mov    ds:0x14255a1b,al
  40d22e:	hlt    
  40d22f:	push   edi
  40d230:	out    dx,eax
  40d231:	repnz adc BYTE PTR [eax+0x775367a7],0x1c
  40d239:	sti    
  40d23a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d23b:	adc    bl,BYTE PTR [eax+ecx*1-0x4d]
  40d23f:	(bad)  
  40d240:	in     al,dx
  40d241:	clc    
  40d242:	into   
  40d243:	int    0x1e
  40d245:	xchg   edi,eax
  40d246:	in     al,0x63
  40d248:	pop    ebx
  40d249:	mov    al,ds:0x822403e3
  40d24e:	jne    0x40d286
  40d250:	jl     0x40d293
  40d252:	lds    edi,FWORD PTR [ebx+0x69]
  40d255:	xchg   esp,eax
  40d256:	sbb    bh,ch
  40d258:	fwait
  40d259:	xor    al,0xf7
  40d25b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d25c:	mov    ds:0xba9f56,eax
  40d261:	test   al,0x57
  40d263:	rcl    BYTE PTR [edi-0x41],cl
  40d266:	xor    BYTE PTR [edi],dh
  40d268:	cmp    eax,0x3ead70d
  40d26d:	(bad)  
  40d26e:	cmp    ecx,eax
  40d270:	je     0x40d2ae
  40d276:	jmp    0x40d29f
  40d27b:	mov    eax,DWORD PTR [ebp-0x4]
  40d27e:	mov    ecx,DWORD PTR [ebp-0x8]
  40d281:	xor    eax,esi
  40d283:	add    eax,edi
  40d285:	cmp    ecx,eax
  40d287:	mov    eax,DWORD PTR [ebp-0x4]
  40d28a:	je     0x40d2e9
  40d290:	mov    ecx,DWORD PTR [ebp-0x30]
  40d293:	xor    eax,esi
  40d295:	add    eax,edi
  40d297:	cmp    ecx,eax
  40d299:	je     0x40f6a6
  40d29f:	lea    eax,[ebp-0x8]
  40d2a2:	push   eax
  40d2a3:	push   DWORD PTR [ebp-0x28]
  40d2a6:	push   DWORD PTR [ebp+0xc]
  40d2a9:	call   0x411c5a
  40d2ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d2b1:	mov    ecx,DWORD PTR [ebp-0x8]
  40d2b4:	xor    eax,esi
  40d2b6:	add    eax,edi
  40d2b8:	cmp    ecx,eax
  40d2ba:	je     0x40d2d5
  40d2c0:	mov    eax,DWORD PTR [ebp-0x34]
  40d2c3:	movzx  eax,WORD PTR [eax+ebx*2]
  40d2c7:	mov    ecx,DWORD PTR [ebp-0x14]
  40d2ca:	mov    eax,DWORD PTR [ecx+eax*4]
  40d2cd:	mov    DWORD PTR [ebp-0x38],eax
  40d2d0:	jmp    0x40d27b
  40d2d5:	mov    eax,DWORD PTR [ebp-0xc]
  40d2d8:	xor    eax,esi
  40d2da:	lea    ebx,[ebx+eax*1+0x3272f3]
  40d2e1:	jmp    0x4087e2
  40d2e6:	mov    eax,DWORD PTR [ebp-0x4]
  40d2e9:	xor    eax,esi
  40d2eb:	jmp    0x40f69f
  40d2f0:	add    BYTE PTR [esi],cl
  40d2f2:	mov    ch,BYTE PTR [esp+eax*4+0x5e8600a0]
  40d2f9:	hlt    
  40d2fa:	aas    
  40d2fb:	push   eax
  40d2fc:	mov    eax,ds:0x950cea35
  40d301:	rol    BYTE PTR [ebx-0x7ca3177d],cl
  40d307:	add    DWORD PTR [esi-0x1a],0xffffff90
  40d30b:	gs xor al,0xc8
  40d30e:	ret    
  40d30f:	outs   dx,BYTE PTR ds:[esi]
  40d310:	je     0x40d37e
  40d312:	retf   
  40d313:	cmp    DWORD PTR [ecx+0x7b],edi
  40d316:	lea    ecx,[edi-0x44]
  40d319:	jnp    0x40d2d4
  40d31b:	push   0xcb20f0fc
  40d320:	jne    0x40d34f
  40d322:	push   edx
  40d323:	loope  0x40d316
  40d325:	fidivr DWORD PTR [edx-0x162887a1]
  40d32b:	ss ss adc eax,0xfabbfe84
  40d332:	xor    BYTE PTR [ecx-0x25a0aa0b],ah
  40d338:	lahf   
  40d339:	pop    es
  40d33a:	inc    ecx
  40d33b:	scas   al,BYTE PTR es:[edi]
  40d33c:	pusha  
  40d33d:	fwait
  40d33e:	adc    BYTE PTR [ebp+0x40],0x8d
  40d342:	aad    0x88
  40d344:	call   0xce86ba0d
  40d349:	pop    esi
  40d34a:	add    edi,ecx
  40d34c:	sar    DWORD PTR es:[ecx-0x6cb34401],0xb0
  40d354:	rcl    DWORD PTR [edi+0x64],cl
  40d357:	mov    edi,cs
  40d359:	enter  0xdfc0,0x15
  40d35d:	je     0x40d3bc
  40d35f:	dec    esi
  40d360:	pop    eax
  40d361:	xchg   edx,eax
  40d362:	imul   edx,DWORD PTR [eax+0x73],0x3793ecc8
  40d369:	in     al,0xe5
  40d36b:	(bad)  [edx+eax*1+0x25]
  40d36f:	call   0xb0c9f94b
  40d374:	sub    BYTE PTR [edx],cl
  40d376:	and    eax,0x5ac51398
  40d37b:	out    0x9d,al
  40d37d:	es mov ebx,0x704c3acb
  40d383:	mov    edx,DWORD PTR [edx-0x3]
  40d386:	cmc    
  40d387:	add    eax,0xbd077308
  40d38c:	gs pop ecx
  40d38e:	sti    
  40d38f:	jo     0x40d407
  40d391:	(bad)  
  40d393:	fs jg  0x40d3c3
  40d396:	add    eax,ebx
  40d398:	je     0x40d32a
  40d39a:	push   0xf78b62e4
  40d39f:	imul   eax,DWORD PTR cs:[eax],0x6c
  40d3a3:	or     bl,bh
  40d3a5:	pop    eax
  40d3a6:	std    
  40d3a7:	(bad)  
  40d3a9:	push   0x6c
  40d3ab:	sti    
  40d3ac:	imul   DWORD PTR [esi-0x7b87fb41]
  40d3b2:	es in  eax,0x8
  40d3b5:	jg     0x40d415
  40d3b7:	stc    
  40d3b8:	inc    cx
  40d3ba:	mov    dl,0x15
  40d3bc:	mov    ah,0x13
  40d3be:	pop    edi
  40d3bf:	imul   ebp,DWORD PTR [edx],0xec8a3331
  40d3c5:	lock lods al,BYTE PTR gs:[esi]
  40d3c8:	fist   DWORD PTR ds:0x45529ce9
  40d3ce:	xor    bh,dh
  40d3d0:	cli    
  40d3d1:	faddp  st(7),st
  40d3d3:	leave  
  40d3d4:	shl    al,cl
  40d3d6:	cmp    al,0x6a
  40d3d8:	fwait
  40d3d9:	out    0x10,eax
  40d3db:	dec    esi
  40d3dc:	jo     0x40d3df
  40d3de:	sub    ah,BYTE PTR [edx+ecx*4]
  40d3e1:	in     eax,0xfb
  40d3e3:	rcl    DWORD PTR [ecx],0x96
  40d3e6:	call   0xadcb:0x2b468066
  40d3ed:	jge    0x40d444
  40d3ef:	imul   edi,esp,0xfffffff5
  40d3f2:	adc    eax,0xf457ac0e
  40d3f7:	dec    esp
  40d3f8:	icebp  
  40d3f9:	or     al,0x2a
  40d3fb:	int    0xef
  40d3fd:	or     BYTE PTR [ebp+0x45],ch
  40d400:	daa    
  40d401:	mov    esi,0xdec1b0dd
  40d406:	sub    eax,0x4ed32522
  40d40b:	inc    ebp
  40d40c:	xor    DWORD PTR [ebp-0x29],0x68a113f6
  40d413:	sbb    DWORD PTR [edx-0x43],esp
  40d416:	out    0x7f,eax
  40d418:	int    0x99
  40d41a:	pop    edi
  40d41b:	in     eax,dx
  40d41c:	hlt    
  40d41d:	sbb    dh,al
  40d41f:	jmp    0x58ff3de1
  40d424:	push   0xb916a232
  40d429:	xchg   BYTE PTR [esi+0x253c0ff6],cl
  40d42f:	call   0x3e12e5d1
  40d434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d435:	sub    BYTE PTR [edi+0x7d],0x4d
  40d439:	pop    edi
  40d43a:	mov    cs,ebx
  40d43c:	sbb    ch,BYTE PTR [ebx]
  40d43e:	dec    ebx
  40d43f:	ror    BYTE PTR [bx+si-0x24a8],cl
  40d444:	cmp    BYTE PTR [ebx],dh
  40d446:	mov    WORD PTR [ebx-0x2d231279],fs
  40d44c:	outs   dx,BYTE PTR ds:[esi]
  40d44d:	repz and BYTE PTR [esp-0x780a58dc],dl
  40d455:	cmp    al,0x5f
  40d457:	mov    es,WORD PTR [esi]
  40d459:	mov    ds:0xe211729e,eax
  40d45e:	mov    ch,0xd6
  40d460:	dec    edx
  40d461:	push   0x8
  40d463:	imul   ebp,DWORD PTR [edi+0x8c00134],0x1cf6defe
  40d46d:	add    ebx,ebx
  40d46f:	leave  
  40d470:	test   eax,0xd14d6264
  40d475:	push   0x5a
  40d477:	add    BYTE PTR [edx+0x6fc9d258],bh
  40d47d:	jmp    0x40d4da
  40d47f:	sbb    BYTE PTR [ecx-0x4a],bh
  40d482:	rol    ebp,0xec
  40d485:	pop    ebx
  40d486:	out    0x72,al
  40d488:	push   ecx
  40d489:	add    DWORD PTR [ebp-0x35910119],edx
  40d48f:	xchg   esi,eax
  40d490:	push   cs
  40d491:	retf   0xaf19
  40d494:	mov    al,ds:0xd2d2e5c6
  40d499:	adc    BYTE PTR [ecx+0x7bade4dc],0x6e
  40d4a0:	xchg   edx,eax
  40d4a1:	sub    eax,0x20ba67c8
  40d4a6:	nop
  40d4a7:	xchg   ecx,eax
  40d4a8:	mov    dh,0xde
  40d4aa:	clc    
  40d4ab:	adc    eax,0xf1eeabe8
  40d4b0:	push   esi
  40d4b1:	lock jge 0x40d478
  40d4b4:	push   eax
  40d4b5:	mov    dh,0x6e
  40d4b7:	ficomp WORD PTR [ecx-0x162fe87c]
  40d4bd:	and    ch,BYTE PTR [esi]
  40d4bf:	retf   
  40d4c0:	lods   eax,DWORD PTR ds:[esi]
  40d4c1:	push   eax
  40d4c2:	mov    al,ds:0x9d7110c0
  40d4c7:	aam    0x42
  40d4c9:	pop    edi
  40d4ca:	jbe    0x40d4bb
  40d4cc:	xchg   ebx,eax
  40d4cd:	ret    0x1071
  40d4d0:	pop    ebp
  40d4d1:	mov    bh,0xac
  40d4d3:	repz sahf 
  40d4d5:	inc    ebx
  40d4d6:	push   0x965f7254
  40d4db:	(bad)  [esi]
  40d4dd:	outs   dx,BYTE PTR ds:[esi]
  40d4de:	leave  
  40d4df:	sbb    al,0xf5
  40d4e2:	(bad)  
  40d4e3:	(bad)  
  40d4e4:	or     edx,edi
  40d4e6:	test   BYTE PTR [ebx+0x23],bl
  40d4e9:	je     0x40d553
  40d4eb:	add    edx,eax
  40d4ed:	popa   
  40d4ee:	add    DWORD PTR [ebp+0x1f],esi
  40d4f1:	(bad)  [ebx+ebp*1+0x118f836a]
  40d4f8:	or     ch,BYTE PTR [ecx+esi*1]
  40d4fb:	sbb    DWORD PTR [eax-0x36],ebp
  40d4fe:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40d500:	lds    edi,FWORD PTR [edi-0x6b]
  40d503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d504:	xchg   edi,eax
  40d505:	call   DWORD PTR [ebx-0x57]
  40d508:	inc    ebx
  40d509:	(bad)  
  40d50a:	adc    BYTE PTR [ebp+0x3a5ecbd9],ah
  40d510:	sbb    ah,BYTE PTR [eax]
  40d512:	loope  0x40d4d5
  40d514:	hlt    
  40d515:	imul   edi,ebp,0x7d
  40d518:	jmp    0x3073:0x9c7f93aa
  40d51f:	pop    es
  40d520:	in     al,0xe6
  40d522:	jge    0x40d4b7
  40d524:	cmp    eax,0xd8f827ed
  40d529:	cwde   
  40d52a:	jb     0x40d4f1
  40d52c:	sahf   
  40d52d:	es shl dl,1
  40d530:	xchg   ebx,eax
  40d531:	xchg   edi,eax
  40d532:	pop    eax
  40d533:	and    ch,0x80
  40d536:	xlat   BYTE PTR ds:[ebx]
  40d537:	and    ecx,DWORD PTR [ecx]
  40d539:	lods   eax,DWORD PTR ds:[esi]
  40d53a:	adc    eax,0xeb03ea1c
  40d53f:	jo     0x40d5aa
  40d541:	sub    ebx,eax
  40d543:	test   WORD PTR [edx],ax
  40d546:	out    0x98,al
  40d548:	dec    DWORD PTR [edx-0x2f]
  40d54b:	or     BYTE PTR [eax+0x66d4077c],ah
  40d551:	aaa    
  40d552:	rcr    DWORD PTR ds:0x7898401f,1
  40d558:	cmp    eax,DWORD PTR [ecx-0x61]
  40d55b:	(bad)  
  40d55c:	sti    
  40d55d:	test   BYTE PTR [ebx+0x32],dl
  40d560:	ret    
  40d561:	aas    
  40d562:	push   ebp
  40d563:	je     0x40d5a5
  40d565:	push   es
  40d566:	outs   dx,DWORD PTR ds:[esi]
  40d567:	icebp  
  40d568:	xor    al,BYTE PTR [esi+0x798213b1]
  40d56e:	jmp    0xe2a041af
  40d573:	inc    esi
  40d574:	mov    esi,0xaf0ae774
  40d579:	mov    ch,BYTE PTR [ebx]
  40d57b:	or     dh,dl
  40d57d:	pop    esi
  40d57e:	loopne 0x40d5b6
  40d580:	pop    ebp
  40d581:	sbb    DWORD PTR ds:0x77a2e600,edi
  40d587:	sar    BYTE PTR ds:[ecx],0xae
  40d58b:	fst    QWORD PTR [edi+ebp*2-0x33fa2f0d]
  40d592:	push   es
  40d593:	jne    0x40d599
  40d595:	dec    esi
  40d596:	fdivr  DWORD PTR [eax]
  40d598:	sbb    dl,ch
  40d59a:	in     eax,dx
  40d59b:	cli    
  40d59c:	or     bh,BYTE PTR [ebx-0x5e]
  40d59f:	test   eax,0xb86b94b9
  40d5a4:	(bad)  
  40d5a5:	lea    ecx,[edx+ebp*2]
  40d5a8:	aad    0x46
  40d5aa:	xlat   BYTE PTR ds:[ebx]
  40d5ab:	div    DWORD PTR [edi+0x22726a8d]
  40d5b1:	cmc    
  40d5b2:	push   edi
  40d5b3:	int    0xef
  40d5b5:	call   0x7b51:0x703b82ae
  40d5bc:	sbb    eax,0xf18785b1
  40d5c1:	push   ds
  40d5c2:	pop    esp
  40d5c3:	cmp    eax,0x456d84c6
  40d5c8:	rcr    BYTE PTR [edx+0x23563fe4],cl
  40d5ce:	xor    eax,0x97137825
  40d5d3:	es pop edi
  40d5d5:	call   DWORD PTR [eax+0x6]
  40d5d8:	mov    ds:0x6e704fa9,al
  40d5dd:	push   0xffffffbb
  40d5df:	dec    edi
  40d5e0:	xchg   ebx,eax
  40d5e1:	and    eax,DWORD PTR [esi]
  40d5e3:	inc    esp
  40d5e4:	test   DWORD PTR [edi],ecx
  40d5e6:	pop    ds
  40d5e7:	mov    fs,WORD PTR [ebx]
  40d5e9:	out    dx,al
  40d5ea:	cmp    cl,BYTE PTR [eax-0x4c2aa77d]
  40d5f0:	pop    ecx
  40d5f1:	and    eax,0x5dff6ee0
  40d5f6:	inc    edi
  40d5f7:	push   ebp
  40d5f8:	adc    al,0x50
  40d5fa:	pop    ecx
  40d5fb:	xor    ecx,DWORD PTR [ebx]
  40d5fd:	js     0x40d637
  40d5ff:	loop   0x40d5d3
  40d601:	test   eax,0xfd03b105
  40d606:	es sbb eax,0x58f44c42
  40d60c:	adc    ebx,DWORD PTR [ebx]
  40d60e:	shr    BYTE PTR [ebx+0x64],cl
  40d611:	iret   
  40d612:	push   esp
  40d613:	aas    
  40d614:	sbb    ebx,edi
  40d616:	mov    ebx,0xc7466e6e
  40d61b:	mov    dl,0x2a
  40d61d:	jns    0x40d68f
  40d61f:	sar    ebp,0x1d
  40d622:	jno    0x40d624
  40d624:	rcl    BYTE PTR [edi],cl
  40d626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d627:	aam    0x64
  40d629:	lds    edi,FWORD PTR [eax]
  40d62b:	inc    ebp
  40d62c:	test   BYTE PTR [ecx+0x46],bh
  40d62f:	pop    edi
  40d630:	push   esi
  40d631:	(bad)  
  40d632:	jns    0x40d614
  40d634:	adc    eax,0x28242a7d
  40d639:	popa   
  40d63a:	mov    cl,0x72
  40d63c:	cmc    
  40d63d:	mov    bh,0x44
  40d63f:	ss data16 xor al,0xa0
  40d643:	std    
  40d644:	jle    0x40d630
  40d646:	adc    dl,BYTE PTR [edi+eiz*2+0x62e46397]
  40d64d:	sub    ecx,0x33
  40d650:	mov    bh,0x5e
  40d652:	inc    esp
  40d653:	sbb    BYTE PTR [esi+0x70],0xe5
  40d657:	jmp    0x40d63b
  40d659:	push   esp
  40d65a:	jge    0x40d673
  40d65c:	xor    BYTE PTR [edi],dl
  40d65e:	push   0x75
  40d660:	and    edi,DWORD PTR [ebp+0x56]
  40d663:	les    edx,FWORD PTR [ecx-0x31]
  40d666:	test   BYTE PTR [edi-0x1c],ah
  40d669:	add    al,0x94
  40d66b:	cmp    al,0x51
  40d66d:	adc    al,0x6c
  40d66f:	test   eax,0x1f35903b
  40d674:	rcr    DWORD PTR [edi-0x393ac33d],1
  40d67a:	mov    eax,0x6f3569e5
  40d67f:	lea    eax,[esi]
  40d681:	clc    
  40d682:	sbb    DWORD PTR [edi-0x8],edi
  40d685:	nop    edx
  40d688:	daa    
  40d689:	and    eax,0x72e0ab0d
  40d68e:	pop    esp
  40d68f:	loop   0x40d6e0
  40d691:	outs   dx,BYTE PTR ds:[esi]
  40d692:	pusha  
  40d693:	pminsw mm4,QWORD PTR [esi-0x4cf6c889]
  40d69a:	and    DWORD PTR [esi],ebp
  40d69c:	xchg   ecx,eax
  40d69d:	xchg   ebp,eax
  40d69e:	sbb    DWORD PTR [ebx-0x29],ecx
  40d6a1:	pushf  
  40d6a2:	dec    esp
  40d6a3:	mov    al,ds:0xaf50d8b
  40d6a8:	add    bl,BYTE PTR [ebx-0x11d2ab55]
  40d6ae:	(bad)  
  40d6b0:	out    dx,al
  40d6b1:	or     ax,0xc5f6
  40d6b5:	int3   
  40d6b6:	mov    eax,ds:0x7bb7aee0
  40d6bb:	(bad)  
  40d6bd:	sahf   
  40d6be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6bf:	push   ebx
  40d6c0:	adc    DWORD PTR [ecx-0x7b],0x3e3904b
  40d6c7:	fwait
  40d6c8:	cmp    eax,0x198083ae
  40d6cd:	sbb    eax,0x646129ff
  40d6d2:	mov    ds:0xe5c97a1e,eax
  40d6d7:	dec    ebp
  40d6d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6d9:	and    DWORD PTR [eax],0x30f8b93d
  40d6df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6e0:	jno    0x40d68b
  40d6e2:	aaa    
  40d6e3:	add    al,0x43
  40d6e5:	(bad)  
  40d6e6:	dec    esi
  40d6e7:	nop
  40d6e8:	mov    edi,0xe089c055
  40d6ed:	pop    es
  40d6ee:	clc    
  40d6ef:	mov    WORD PTR [ebp-0x350b8a26],ds
  40d6f5:	jmp    0xadf62419
  40d6fa:	jg     0x40d67f
  40d6fc:	push   0x7b
  40d6fe:	mov    esp,0xf0e330fc
  40d703:	mov    ds:0xb6830435,eax
  40d708:	mov    dl,0x26
  40d70a:	pop    ds
  40d70b:	fadd   QWORD PTR gs:[ecx+eax*2+0x9]
  40d710:	call   0xe9d1ece8
  40d715:	xor    bl,BYTE PTR [ebp+edx*8-0x60]
  40d719:	loope  0x40d768
  40d71b:	(bad)  
  40d71c:	mov    esi,0x697873bd
  40d721:	aaa    
  40d722:	bound  ebp,QWORD PTR [edi-0x47]
  40d725:	mov    al,0x25
  40d727:	out    0x6c,eax
  40d729:	ja     0x40d749
  40d72b:	xchg   ebx,eax
  40d72c:	sti    
  40d72d:	sub    eax,0xf8899ec7
  40d732:	hlt    
  40d733:	das    
  40d734:	and    BYTE PTR [ecx-0x677f0600],ch
  40d73a:	cmc    
  40d73b:	add    DWORD PTR [edi+ebp*8-0x2b],ebx
  40d73f:	rcl    DWORD PTR [eax+0x32018372],cl
  40d745:	fdivr  QWORD PTR [ebp-0x44]
  40d748:	jne    0x40d7a6
  40d74a:	xor    DWORD PTR [eax-0xc],ecx
  40d74d:	xchg   esp,eax
  40d74e:	xor    BYTE PTR [esi+0x3438a930],ch
  40d754:	dec    esi
  40d755:	out    dx,eax
  40d756:	addr16 push ss
  40d758:	pop    ss
  40d759:	xor    bl,al
  40d75b:	pop    esi
  40d75c:	in     al,dx
  40d75d:	xor    dh,BYTE PTR [edx]
  40d75f:	cdq    
  40d760:	pop    ecx
  40d761:	add    al,BYTE PTR [eax-0x22c59294]
  40d767:	fbld   TBYTE PTR [ebp-0x2e]
  40d76a:	gs scas al,BYTE PTR es:[edi]
  40d76c:	adc    al,0x1b
  40d76e:	push   edi
  40d76f:	jmp    0xdd00549e
  40d774:	mov    dh,0x30
  40d776:	push   0x7c62b65
  40d77b:	sar    ebp,0x75
  40d77e:	je     0x40d785
  40d780:	add    DWORD PTR [edi-0x28164602],edx
  40d786:	inc    eax
  40d787:	adc    DWORD PTR [edi+0x1a65c886],ebp
  40d78d:	sbb    BYTE PTR [ebp-0x55],ch
  40d790:	inc    eax
  40d791:	jo     0x40d80e
  40d793:	lods   eax,DWORD PTR ds:[esi]
  40d794:	jg     0x40d79e
  40d796:	pop    es
  40d797:	adc    al,0xc0
  40d799:	stos   DWORD PTR es:[edi],eax
  40d79a:	aaa    
  40d79b:	fistp  QWORD PTR [esi-0x47]
  40d79e:	addr16 pusha 
  40d7a0:	je     0x40d7a8
  40d7a2:	mov    al,ds:0x7bb472d6
  40d7a7:	inc    eax
  40d7a8:	stos   BYTE PTR es:[edi],al
  40d7a9:	push   es
  40d7aa:	nop
  40d7ab:	adc    BYTE PTR [eax],al
  40d7ad:	pushf  
  40d7ae:	xchg   DWORD PTR [edx+0x40],ebx
  40d7b1:	dec    edi
  40d7b2:	popa   
  40d7b3:	inc    edx
  40d7b5:	mov    BYTE PTR [ebp-0x2c],ah
  40d7b8:	jno    0x40d74f
  40d7ba:	jmp    0x40d73e
  40d7bc:	push   cs
  40d7bd:	sahf   
  40d7be:	xchg   edi,eax
  40d7bf:	ret    0xa630
  40d7c2:	cmp    esi,DWORD PTR [ecx-0xb]
  40d7c5:	loopne 0x40d7a0
  40d7c7:	(bad)  
  40d7c8:	push   esp
  40d7c9:	pop    es
  40d7ca:	data16 add al,0x3a
  40d7cd:	mov    esi,0x8025471e
  40d7d2:	bound  ecx,QWORD PTR [edx]
  40d7d4:	push   edi
  40d7d5:	jp     0x40d7f7
  40d7d7:	addr16 push ebx
  40d7d9:	imul   esi,DWORD PTR gs:[ebx],0x8a879de7
  40d7e0:	lods   al,BYTE PTR ds:[esi]
  40d7e1:	scas   eax,DWORD PTR es:[edi]
  40d7e2:	or     BYTE PTR [eax+0x5b],0x87
  40d7e6:	push   eax
  40d7e7:	dec    edi
  40d7e8:	mov    ah,0x1d
  40d7ea:	out    dx,eax
  40d7eb:	xchg   ebx,eax
  40d7ec:	push   ds
  40d7ed:	cmp    al,0xdd
  40d7ef:	fs sbb dl,bl
  40d7f2:	ja     0x40d7b2
  40d7f4:	mov    esp,0x9272109e
  40d7f9:	int    0x32
  40d7fb:	fwait
  40d7fc:	pop    ebp
  40d7fd:	xor    esi,DWORD PTR [ebp+0x648b5165]
  40d803:	sub    eax,0xc6b8221d
  40d808:	sti    
  40d809:	bound  ebp,QWORD PTR [edx-0x1b]
  40d80c:	mov    dl,0x90
  40d80e:	jno    0x40d7fe
  40d810:	xor    BYTE PTR [eax+0x67],bh
  40d813:	fnsave [ecx+0x71]
  40d816:	cmp    edi,DWORD PTR [esi+0x60]
  40d819:	lods   eax,DWORD PTR ds:[esi]
  40d81a:	mov    DWORD PTR [ecx],0xc6190859
  40d820:	out    0x4f,al
  40d822:	sub    al,0x54
  40d824:	test   al,0x30
  40d826:	xchg   ebx,eax
  40d827:	stc    
  40d828:	inc    ebx
  40d829:	gs pop es
  40d82b:	fldenv [ecx+0x8]
  40d82e:	sti    
  40d82f:	retf   0xff89
  40d832:	dec    ecx
  40d833:	addps  xmm6,XMMWORD PTR [ebp+0x254c0874]
  40d83a:	imul   ebx,ebx,0x7bf3651a
  40d840:	xor    BYTE PTR ds:0x80394d68,dl
  40d846:	lahf   
  40d847:	inc    eax
  40d848:	test   DWORD PTR [eax],ebx
  40d84a:	ins    BYTE PTR es:[edi],dx
  40d84b:	out    dx,al
  40d84c:	push   edi
  40d84d:	sub    dh,BYTE PTR gs:[ebx-0x4a926771]
  40d854:	cmp    al,0xe
  40d856:	mov    ?,WORD PTR [esi+0x1d]
  40d859:	adc    bl,BYTE PTR [ebp-0x5]
  40d85c:	pop    ecx
  40d85d:	mov    esi,ebp
  40d85f:	xor    ecx,DWORD PTR [edx-0x6a]
  40d862:	dec    edi
  40d863:	dec    esp
  40d864:	test   al,0xa1
  40d866:	cmp    eax,0x8a09fd33
  40d86b:	jmp    0x65130b8
  40d870:	sub    eax,0x60112f8f
  40d875:	in     al,0xad
  40d877:	sbb    eax,0xb2182d6
  40d87c:	sub    BYTE PTR [eax],cl
  40d87e:	lahf   
  40d87f:	bound  edi,QWORD PTR [edx+esi*4]
  40d882:	and    BYTE PTR [ecx-0x45],0x39
  40d886:	jmp    0x3a0b:0x5e7a18b4
  40d88d:	jecxz  0x40d856
  40d88f:	retf   0x6db4
  40d892:	bound  edi,QWORD PTR [esi+0x76]
  40d895:	bound  esi,QWORD PTR [ecx+0x78]
  40d898:	cdq    
  40d899:	pop    ss
  40d89a:	push   edx
  40d89b:	mov    dl,0x4b
  40d89d:	call   0x86fa7ffe
  40d8a2:	fldcw  WORD PTR [edi-0x467f544b]
  40d8a8:	add    BYTE PTR [ebx-0x3eab2dfc],dh
  40d8ae:	fiadd  WORD PTR [ebx]
  40d8b0:	cmp    eax,0xf315cd78
  40d8b5:	dec    esi
  40d8b6:	push   eax
  40d8b7:	push   eax
  40d8b8:	add    BYTE PTR [ebx+0x76],dl
  40d8bb:	mov    cl,0x87
  40d8bd:	xor    DWORD PTR [ebx],edx
  40d8bf:	cld    
  40d8c0:	or     ah,cl
  40d8c2:	imul   ecx,DWORD PTR ds:0x4323eaab,0xe3aa816e
  40d8cc:	cmp    ebx,esi
  40d8ce:	dec    esi
  40d8cf:	cli    
  40d8d0:	pop    es
  40d8d1:	cld    
  40d8d2:	(bad)  
  40d8d3:	sbb    DWORD PTR [ebx],edi
  40d8d5:	mov    edx,DWORD PTR [ebp-0x40]
  40d8d8:	or     dh,BYTE PTR [edx]
  40d8da:	mov    DWORD PTR [ebp+0x6e],ecx
  40d8dd:	pushf  
  40d8de:	jmp    0x712673f
  40d8e3:	out    dx,al
  40d8e4:	jnp    0x40d95e
  40d8e6:	fwait
  40d8e7:	or     al,0x10
  40d8e9:	sbb    al,0xe0
  40d8eb:	mov    al,ds:0x6006549c
  40d8f0:	mov    dl,0x27
  40d8f2:	xlat   BYTE PTR ds:[ebx]
  40d8f3:	fisttp WORD PTR [esi+0x3caf88f2]
  40d8f9:	pop    ss
  40d8fa:	mov    DWORD PTR [edi+0x2f],ecx
  40d8fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8ff:	sbb    BYTE PTR [ebx-0x39acac4d],0xba
  40d906:	inc    ecx
  40d907:	jae    0x40d947
  40d909:	(bad)  
  40d90a:	stc    
  40d90b:	xchg   ebx,eax
  40d90c:	mov    bh,0x23
  40d90e:	add    eax,0xc71fa74e
  40d913:	mov    ah,0xd1
  40d915:	push   ds
  40d916:	jmp    FWORD PTR [edx]
  40d918:	add    al,0xd3
  40d91a:	aas    
  40d91b:	adc    eax,0xcd5706d5
  40d920:	inc    eax
  40d921:	cwde   
  40d922:	lods   al,BYTE PTR ds:[esi]
  40d923:	mov    fs,WORD PTR [ecx-0x5f48dc6c]
  40d929:	(bad)  
  40d92a:	fsubr  QWORD PTR [edx-0x36a4f379]
  40d930:	pop    ebx
  40d931:	mov    edx,0x54950787
  40d936:	out    dx,eax
  40d937:	pop    edx
  40d938:	push   esp
  40d939:	inc    ebx
  40d93a:	dec    eax
  40d93b:	cdq    
  40d93c:	mov    bl,0xcc
  40d93e:	ja     0x40d99f
  40d940:	add    eax,0xeb9a130e
  40d945:	mov    ds:0xcca72a4,eax
  40d94a:	(bad)  
  40d94b:	mov    ds:0x6a34af4d,al
  40d950:	int3   
  40d951:	mov    cl,0xe6
  40d953:	inc    eax
  40d954:	scas   eax,DWORD PTR es:[edi]
  40d955:	shr    BYTE PTR [ebx],cl
  40d957:	jl     0x40d930
  40d959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d95a:	add    DWORD PTR [ecx+ebp*1+0x32],0xea73cd09
  40d962:	or     edi,DWORD PTR [ebx]
  40d964:	out    dx,eax
  40d965:	sbb    edx,esi
  40d967:	ins    BYTE PTR es:[edi],dx
  40d968:	pop    edx
  40d969:	mov    BYTE PTR [ecx],dl
  40d96b:	and    cl,BYTE PTR [esi+edx*8+0x77]
  40d96f:	pop    ds
  40d970:	cld    
  40d971:	jmp    0xb8bf:0xe695680e
  40d978:	std    
  40d979:	mov    ebp,0x13863767
  40d97e:	dec    edx
  40d97f:	add    cl,bh
  40d981:	scas   al,BYTE PTR es:[edi]
  40d982:	test   eax,0xe127c72d
  40d987:	add    dl,BYTE PTR [ebx-0x6]
  40d98a:	cmp    DWORD PTR [edx-0x64d88eeb],ecx
  40d990:	addr16 xchg esp,eax
  40d992:	mov    ebx,0x61aadef1
  40d997:	imul   eax,DWORD PTR [esi+0x41d04004],0xffffffe5
  40d99e:	add    DWORD PTR [ebx],ebp
  40d9a0:	(bad)  
  40d9a1:	das    
  40d9a2:	es pop esp
  40d9a4:	push   esp
  40d9a5:	adc    eax,0x9a9bf88b
  40d9aa:	sbb    dl,cl
  40d9ac:	ret    
  40d9ad:	lea    ecx,[eax+0x13]
  40d9b0:	dec    ebp
  40d9b1:	(bad)  
  40d9b2:	daa    
  40d9b3:	mov    gs,WORD PTR [ecx+0x50ccf59c]
  40d9b9:	jle    0x40da23
  40d9bb:	dec    edx
  40d9bc:	fwait
  40d9bd:	mov    ebp,0x596d2cff
  40d9c2:	inc    edi
  40d9c3:	or     ebp,DWORD PTR [esi-0x65]
  40d9c6:	adc    dh,al
  40d9c8:	mov    ds:0x9b6aef99,al
  40d9cd:	adc    al,BYTE PTR [ebp+eax*4+0x28529dbd]
  40d9d4:	mul    DWORD PTR [ecx+0x79]
  40d9d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9d8:	or     eax,0xa201ce8
  40d9dd:	lea    ebx,[esi+eax*8-0x43]
  40d9e1:	ins    DWORD PTR es:[edi],dx
  40d9e2:	js     0x40d983
  40d9e4:	push   cs
  40d9e5:	fdiv   QWORD PTR [ebp-0x68]
  40d9e8:	outs   dx,DWORD PTR ds:[esi]
  40d9e9:	xor    eax,0xd6ef7839
  40d9ee:	dec    ebx
  40d9ef:	(bad)  
  40d9f1:	sub    dh,bl
  40d9f3:	dec    esp
  40d9f4:	mov    bl,cl
  40d9f6:	xchg   ebx,eax
  40d9f7:	pushf  
  40d9f8:	in     al,dx
  40d9f9:	mov    ds:0x97c8d33,eax
  40d9fe:	xor    esi,DWORD PTR [ebx]
  40da00:	into   
  40da01:	sub    eax,0xead8e261
  40da06:	daa    
  40da07:	fs cs out dx,eax
  40da0a:	ins    DWORD PTR es:[edi],dx
  40da0b:	mov    dh,0xd6
  40da0d:	cmp    esp,DWORD PTR [ecx-0x7baac7a9]
  40da13:	jno    0x40d9a0
  40da15:	mov    edi,0x5d1e848d
  40da1a:	loope  0x40da7c
  40da1c:	or     BYTE PTR [ecx+eax*8+0x44],0x85
  40da21:	adc    al,0xed
  40da23:	sti    
  40da24:	shr    BYTE PTR [ecx],cl
  40da26:	jmp    0x5d99f7e3
  40da2b:	mov    bl,0xae
  40da2d:	jns    0x40da5c
  40da2f:	mov    edx,0x239b9020
  40da34:	scas   al,BYTE PTR es:[edi]
  40da35:	hlt    
  40da36:	inc    edx
  40da37:	jl     0x40da2a
  40da39:	jb     0x40da74
  40da3b:	or     eax,0x9e5b67cd
  40da40:	push   ss
  40da41:	addr16 jne 0x40da18
  40da44:	sbb    al,0x33
  40da46:	push   es
  40da47:	lods   al,BYTE PTR ds:[esi]
  40da48:	mov    ah,0x30
  40da4a:	pop    esi
  40da4c:	dec    edi
  40da4d:	cmp    eax,0x3e386cfd
  40da52:	jmp    0x40da53
  40da54:	push   esi
  40da55:	cwde   
  40da56:	sub    DWORD PTR [edx],edi
  40da58:	or     dl,ah
  40da5a:	cld    
  40da5b:	adc    esi,eax
  40da5d:	ins    BYTE PTR es:[edi],dx
  40da5e:	leave  
  40da5f:	shl    BYTE PTR [edi+0x14e07bc9],0x20
  40da66:	ror    DWORD PTR [ebx],0x6e
  40da69:	push   ebx
  40da6a:	in     al,0x43
  40da6c:	inc    eax
  40da6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da6e:	or     esi,ecx
  40da70:	sti    
  40da71:	(bad)  
  40da72:	cli    
  40da73:	jne    0x40da4c
  40da75:	or     al,BYTE PTR [eax-0x49]
  40da78:	adc    al,0xbb
  40da7b:	xchg   edi,eax
  40da7c:	fidivr DWORD PTR [ecx-0x6601f7bc]
  40da82:	xlat   BYTE PTR ds:[ebx]
  40da83:	adc    ebx,eax
  40da85:	or     eax,0x6551f6cd
  40da8a:	loopne 0x40daca
  40da8c:	add    al,0xbc
  40da8e:	retf   0x6cf9
  40da91:	mov    al,ds:0x451ea98b
  40da96:	lock cli 
  40da98:	sahf   
  40da99:	test   eax,0xcc35ffdf
  40da9e:	aaa    
  40da9f:	rol    ebp,1
  40daa1:	neg    BYTE PTR [edx+eax*2+0x4cbb72b5]
  40daa8:	ss je  0x40db27
  40daab:	dec    ebp
  40daac:	cmp    al,0xfb
  40daae:	dec    edx
  40daaf:	push   eax
  40dab0:	pop    esp
  40dab1:	fsub   DWORD PTR [edx-0x11]
  40dab4:	adc    eax,0x74cbaadb
  40dab9:	push   esp
  40daba:	mov    ch,0x7e
  40dabc:	lahf   
  40dabd:	ret    0x62c1
  40dac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dac1:	lds    esi,FWORD PTR [edi]
  40dac3:	or     BYTE PTR [ecx-0x60da253d],bh
  40dac9:	or     cl,BYTE PTR [ebp-0x72]
  40dacc:	sti    
  40dacd:	mov    bh,0x38
  40dacf:	pop    esi
  40dad0:	cwde   
  40dad1:	cdq    
  40dad2:	xchg   esi,eax
  40dad3:	xor    eax,0xf125066b
  40dad8:	arpl   di,cx
  40dada:	je     0x40db1a
  40dadc:	in     eax,0x1f
  40dade:	sahf   
  40dadf:	jmp    0xb1b919ad
  40dae4:	ret    0x4ef
  40dae7:	test   al,0x26
  40dae9:	mov    dh,0x8f
  40daeb:	cmp    bl,BYTE PTR [ebx+0x27]
  40daee:	aam    0x7c
  40daf0:	and    DWORD PTR [ebx],0x2f
  40daf3:	pop    ebp
  40daf4:	push   edx
  40daf5:	bound  esp,QWORD PTR [eax-0x6b]
  40daf8:	ret    0xd7fd
  40dafb:	jns    0x40daa6
  40dafd:	iret   
  40dafe:	cmp    al,0x50
  40db00:	jmp    0xac59:0x8bc14657
  40db07:	xor    BYTE PTR [edi+0x34c4f5d7],0xb3
  40db0e:	mov    ch,0x22
  40db10:	mov    esi,0x17e133b0
  40db15:	mov    esp,0xaf0f6795
  40db1a:	jp     0x40db3e
  40db1c:	and    DWORD PTR [ebp+0x3fb696f7],ebp
  40db22:	xor    cl,BYTE PTR [ebp-0xf749077]
  40db28:	push   edi
  40db29:	out    dx,eax
  40db2a:	mov    ebp,0xdd560200
  40db2f:	shr    BYTE PTR [ebx+0x12],1
  40db32:	je     0x40db12
  40db34:	jmp    0x40db71
  40db36:	jns    0x40db2c
  40db38:	das    
  40db39:	and    BYTE PTR [ecx+ecx*2],ah
  40db3c:	mov    edx,0xd07e6bb9
  40db41:	push   ss
  40db42:	mov    ds:0x405efce7,al
  40db47:	pop    ds
  40db48:	daa    
  40db49:	clc    
  40db4a:	call   0x22fd:0xa1f5407a
  40db51:	inc    edx
  40db52:	adc    dl,ch
  40db54:	popf   
  40db55:	jp     0x40db1e
  40db57:	xchg   ebx,eax
  40db58:	pushf  
  40db59:	jg     0x40dba5
  40db5b:	jmp    0x40db49
  40db5d:	outs   dx,BYTE PTR ds:[esi]
  40db5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db5f:	aaa    
  40db60:	push   0x94a4b4af
  40db65:	sbb    BYTE PTR [edx+0x4d],0x16
  40db69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db6a:	sbb    DWORD PTR [esi+0x1857bf10],ecx
  40db70:	mov    edx,0xfd059b77
  40db75:	jb     0x40dbb6
  40db77:	xchg   esi,eax
  40db78:	push   0xfffffff6
  40db7a:	jnp    0x40db61
  40db7c:	mov    edi,0xe11507ab
  40db81:	mov    ?,WORD PTR [edi]
  40db83:	call   0x59e43a2e
  40db88:	push   ds
  40db89:	arpl   WORD PTR [esi+0x2cdbb6a4],dx
  40db8f:	cmc    
  40db90:	mov    eax,0x11f94e5d
  40db95:	in     eax,dx
  40db96:	ret    0xfc0f
  40db99:	add    ecx,DWORD PTR [edx+0x23423ca7]
  40db9f:	push   ds
  40dba0:	out    0x89,al
  40dba2:	stc    
  40dba3:	cmp    esi,DWORD PTR [edx+0x51576d05]
  40dba9:	sar    BYTE PTR [edx+0x304ca96e],cl
  40dbaf:	adc    eax,0x44ad1670
  40dbb4:	and    al,0x5
  40dbb6:	xchg   BYTE PTR [eax-0x7d32ca84],dl
  40dbbc:	ins    DWORD PTR es:[edi],dx
  40dbbd:	pop    edi
  40dbbe:	mov    edi,0xa4e63c30
  40dbc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbc4:	or     al,0x89
  40dbc6:	adc    BYTE PTR [ecx-0x27e69c88],dh
  40dbcc:	dec    edx
  40dbcd:	sbb    cl,BYTE PTR [ebx+ebp*2-0x39b14148]
  40dbd4:	pop    eax
  40dbd5:	mov    esi,0x63d53c9b
  40dbda:	mov    bh,0x4a
  40dbdc:	mov    ecx,0xe769925f
  40dbe1:	and    BYTE PTR [edi],al
  40dbe3:	mov    ds:0xe347505d,eax
  40dbe8:	fbld   TBYTE PTR [ebx]
  40dbea:	fst    st(7)
  40dbec:	mov    ah,0x46
  40dbee:	add    edi,esi
  40dbf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbf1:	jae    0x40dc35
  40dbf3:	imul   ebp,DWORD PTR [ecx+0x61],0xffffffb4
  40dbf7:	xchg   edx,eax
  40dbf8:	(bad)  
  40dbf9:	jns    0x40db97
  40dbfb:	sbb    bh,bl
  40dbfd:	aas    
  40dbfe:	ret    0xb2c6
  40dc01:	mov    eax,ds:0x6de34531
  40dc06:	pop    ebp
  40dc07:	pop    es
  40dc08:	jae    0x40dc18
  40dc0a:	or     al,0x50
  40dc0c:	hlt    
  40dc0d:	gs inc edx
  40dc0f:	in     al,dx
  40dc10:	xlat   BYTE PTR ds:[ebx]
  40dc11:	dec    ebx
  40dc12:	les    esi,FWORD PTR [ebp+edx*2-0x11]
  40dc16:	retf   0xbff6
  40dc19:	push   ebx
  40dc1a:	or     BYTE PTR [ebx+0x72],0xf
  40dc1e:	lods   eax,DWORD PTR ds:[esi]
  40dc1f:	push   ds
  40dc20:	pop    ebx
  40dc21:	dec    eax
  40dc22:	in     al,dx
  40dc23:	test   esi,esp
  40dc25:	xor    eax,0xdc34cee9
  40dc2a:	loop   0x40dc15
  40dc2c:	mov    dl,0x50
  40dc2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc2f:	retf   
  40dc30:	push   eax
  40dc31:	in     al,0x5f
  40dc33:	push   ebx
  40dc34:	sub    DWORD PTR [ebx-0x4b],ecx
  40dc37:	and    edi,DWORD PTR [edx-0x29]
  40dc3a:	cdq    
  40dc3b:	mov    edi,0x6e9773e5
  40dc40:	xchg   esi,eax
  40dc41:	mov    bl,0xe6
  40dc43:	imul   eax,DWORD PTR cs:[ecx-0xb73af1b],0x14
  40dc4b:	js     0x40dbf6
  40dc4d:	cmc    
  40dc4e:	adc    eax,0xb6004edb
  40dc53:	sbb    edx,DWORD PTR [eax-0x52ea528e]
  40dc59:	sub    DWORD PTR [eax-0x68e9e900],0xc0143fe5
  40dc63:	(bad)  
  40dc65:	dec    edx
  40dc66:	(bad)  
  40dc67:	jbe    0x40dc18
  40dc69:	add    dl,BYTE PTR [ebp+ecx*4+0x30c7e35a]
  40dc70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc71:	push   ss
  40dc72:	xor    al,0x72
  40dc74:	into   
  40dc75:	rcr    DWORD PTR [ecx-0x3a],cl
  40dc78:	xchg   edi,eax
  40dc79:	das    
  40dc7a:	call   0x4e6:0xb6aa9878
  40dc81:	(bad)  
  40dc82:	sub    cl,BYTE PTR [ebp+0x74ab9e72]
  40dc88:	(bad)  
  40dc89:	(bad)  
  40dc8a:	cdq    
  40dc8b:	dec    ebx
  40dc8c:	inc    esi
  40dc8d:	repnz pop ss
  40dc8f:	data16 das 
  40dc91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc92:	dec    edx
  40dc93:	je     0x40dc64
  40dc95:	xchg   BYTE PTR [eax],dl
  40dc97:	popa   
  40dc98:	adc    esp,edx
  40dc9a:	mov    al,0xb5
  40dc9c:	in     eax,0x4a
  40dc9e:	test   DWORD PTR [ebx-0x5e939d2d],ebx
  40dca4:	mov    ds:0xc50fda49,al
  40dca9:	mov    al,0x65
  40dcab:	push   esi
  40dcac:	ins    BYTE PTR es:[edi],dx
  40dcad:	xchg   BYTE PTR [esi-0x6d],al
  40dcb0:	xor    dl,BYTE PTR [eax]
  40dcb2:	xor    al,0x86
  40dcb4:	mov    ecx,0xa13bdc87
  40dcb9:	dec    eax
  40dcba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcbb:	(bad)  
  40dcbc:	loopne 0x40dd2a
  40dcbe:	cmp    ecx,DWORD PTR [ecx+0x165f6a8b]
  40dcc4:	je     0x40dd22
  40dcc6:	ret    
  40dcc7:	sbb    ebx,DWORD PTR [ecx-0x3ee98b39]
  40dccd:	(bad)  
  40dcce:	imul   BYTE PTR [ebx+0x2c74957e]
  40dcd4:	add    esi,DWORD PTR [edi+eax*1+0x4ec38aa6]
  40dcdb:	jo     0x40dd3f
  40dcdd:	cmp    dh,ch
  40dcdf:	xchg   ecx,eax
  40dce0:	push   ebx
  40dce1:	push   edx
  40dce2:	xor    ebx,DWORD PTR [ecx]
  40dce4:	dec    esi
  40dce5:	mov    ds:0xde911005,eax
  40dcea:	mov    ebx,0x67941615
  40dcef:	jle    0x40dc94
  40dcf1:	xlat   BYTE PTR ds:[ebx]
  40dcf2:	lea    ebx,[edx+0x176e32a]
  40dcf8:	fcomp  QWORD PTR [ebx+0x72c3888]
  40dcfe:	sbb    al,0x4a
  40dd00:	pop    edi
  40dd01:	fld    QWORD PTR [ebp-0x228be45]
  40dd07:	xor    eax,0xc1169d1d
  40dd0c:	mov    al,0x29
  40dd0e:	dec    ecx
  40dd0f:	xchg   edi,eax
  40dd10:	test   BYTE PTR [edx+esi*4-0x7fc8f190],0x63
  40dd18:	popf   
  40dd19:	mov    ebp,0x8df077c6
  40dd1e:	ins    BYTE PTR es:[edi],dx
  40dd1f:	enter  0x35d6,0x7c
  40dd23:	iret   
  40dd24:	idiv   DWORD PTR [edx+0x53]
  40dd27:	adc    ch,dl
  40dd29:	inc    edx
  40dd2a:	dec    ecx
  40dd2b:	imul   eax,DWORD PTR [edx-0x44943d6],0xffffffb0
  40dd32:	inc    ebp
  40dd33:	ins    DWORD PTR es:[edi],dx
  40dd34:	xchg   ecx,eax
  40dd35:	out    0x3,al
  40dd37:	or     eax,0x9bbf1c20
  40dd3c:	mov    esi,0x1ebd6a9b
  40dd41:	ins    BYTE PTR es:[edi],dx
  40dd42:	das    
  40dd43:	into   
  40dd44:	sbb    dl,bh
  40dd46:	lods   al,BYTE PTR ds:[esi]
  40dd47:	int    0x2e
  40dd49:	sbb    cl,ah
  40dd4b:	and    al,0xcf
  40dd4d:	xor    DWORD PTR [edi-0x2c],eax
  40dd50:	mov    BYTE PTR [ebx-0x158ccef4],al
  40dd56:	retf   0x57f9
  40dd59:	(bad)  
  40dd5a:	sbb    BYTE PTR [ebp-0x16],dl
  40dd5d:	(bad)  
  40dd5e:	icebp  
  40dd5f:	push   es
  40dd60:	xor    al,0x87
  40dd62:	jecxz  0x40dde2
  40dd64:	sub    eax,esi
  40dd66:	add    eax,0x4cd01cf9
  40dd6b:	sbb    eax,0x88e381f8
  40dd70:	add    bh,BYTE PTR [ecx+0x29]
  40dd73:	mov    ebx,esp
  40dd75:	xor    edi,DWORD PTR [edx-0x1f]
  40dd78:	xor    ah,BYTE PTR [ebx]
  40dd7a:	jmp    0x6d86:0xfd6152b8
  40dd81:	adc    edi,DWORD PTR [esi-0x59cb4492]
  40dd87:	stc    
  40dd88:	test   DWORD PTR [edx-0x58e1f961],edi
  40dd8e:	jl     0x40dda0
  40dd90:	xchg   ebp,eax
  40dd91:	in     eax,0x5
  40dd93:	retf   
  40dd94:	jae    0x40ddcb
  40dd96:	jae    0x40dd26
  40dd98:	add    DWORD PTR [edi+0x1f1b22a6],0xfffffffc
  40dd9f:	inc    ebp
  40dda0:	inc    ebx
  40dda1:	adc    eax,0x81ff1dd6
  40dda6:	mov    ds:0x51935293,al
  40ddab:	mov    eax,0x2c6a96c
  40ddb0:	jecxz  0x40dd87
  40ddb2:	xchg   dx,ax
  40ddb4:	sub    eax,DWORD PTR [ebp+0x242c807d]
  40ddba:	push   0xbbe1b84c
  40ddbf:	xchg   DWORD PTR [eax+0x40],edi
  40ddc2:	imul   edx,DWORD PTR [edx-0x30],0x2a
  40ddc6:	xor    edx,DWORD PTR [eax+edi*2-0x2c]
  40ddca:	dec    eax
  40ddcb:	stos   BYTE PTR es:[edi],al
  40ddcc:	cld    
  40ddcd:	add    BYTE PTR [edx+0x18303b8f],cl
  40ddd3:	rcr    DWORD PTR [eax-0x68],cl
  40ddd6:	test   esi,0x6d1f723e
  40dddc:	or     al,0x91
  40ddde:	mov    dl,0xfa
  40dde0:	out    dx,al
  40dde1:	lds    ebx,FWORD PTR [esi]
  40dde3:	mov    ds:0x77aa68af,eax
  40dde8:	cmp    eax,0x8455a287
  40dded:	test   eax,edx
  40ddef:	fiadd  DWORD PTR [ecx-0x3e]
  40ddf2:	mov    cs,WORD PTR [ecx]
  40ddf4:	lods   al,BYTE PTR es:[esi]
  40ddf6:	push   es
  40ddf7:	int3   
  40ddf8:	in     al,dx
  40ddf9:	push   ecx
  40ddfa:	sub    al,0x34
  40ddfc:	or     eax,0x511c3c55
  40de01:	jmp    0x342b:0x23d395e4
  40de08:	sub    al,ah
  40de0a:	icebp  
  40de0b:	cld    
  40de0c:	add    BYTE PTR [ecx+edi*8],dh
  40de0f:	ret    
  40de10:	cmp    BYTE PTR [edi+0x6ad5b359],bl
  40de16:	xchg   esi,eax
  40de17:	mov    dh,BYTE PTR [ecx+0x30241dca]
  40de1d:	pop    edx
  40de1e:	pop    esi
  40de1f:	fsub   DWORD PTR [ebx]
  40de21:	adc    al,ah
  40de23:	sbb    ecx,ebp
  40de25:	out    0x7e,al
  40de27:	sub    al,0x1c
  40de29:	jns    0x40dea0
  40de2b:	and    al,0xb0
  40de2d:	std    
  40de2e:	in     eax,dx
  40de2f:	xlat   BYTE PTR ds:[ebx]
  40de30:	adc    DWORD PTR [ecx-0x534a5d06],esi
  40de36:	inc    eax
  40de37:	retf   0x7a07
  40de3a:	push   cs
  40de3b:	jmp    0x9acb:0x84b9d246
  40de42:	pop    edx
  40de43:	jle    0x40ddf8
  40de45:	jne    0x40de01
  40de47:	mov    bl,0xd2
  40de49:	mov    bl,ah
  40de4b:	cmp    ebp,eax
  40de4d:	cmc    
  40de4e:	push   ss
  40de4f:	mov    eax,0x7a90aa20
  40de54:	pop    esp
  40de55:	dec    esi
  40de56:	pop    edx
  40de57:	icebp  
  40de58:	push   esp
  40de59:	loopne 0x40de22
  40de5b:	adc    ah,BYTE PTR [edx-0x68b93224]
  40de61:	loope  0x40de48
  40de63:	or     BYTE PTR [esi+0x5f],0x15
  40de67:	dec    eax
  40de68:	adc    cl,BYTE PTR [esi-0x65]
  40de6b:	jg     0x40dea5
  40de6d:	fdivr  QWORD PTR [ecx-0x752dae70]
  40de73:	mov    ds:0xb6eef258,eax
  40de78:	call   0x83ed753
  40de7d:	sbb    ebx,DWORD PTR [esi]
  40de7f:	pop    es
  40de80:	adc    BYTE PTR [esi],bh
  40de82:	or     bh,BYTE PTR [eax]
  40de84:	mov    esi,DWORD PTR [eax-0x3a]
  40de87:	mov    bh,0xb8
  40de89:	sar    edx,cl
  40de8b:	ins    DWORD PTR es:[edi],dx
  40de8c:	std    
  40de8d:	sub    DWORD PTR [ebx+0x27c6c304],edi
  40de93:	test   al,0xcb
  40de95:	push   cs
  40de96:	cmp    al,0x80
  40de98:	lods   al,BYTE PTR ds:[esi]
  40de99:	mov    ds:0x8d73b028,al
  40de9e:	mov    cl,0x1d
  40dea0:	addr16 pop ecx
  40dea2:	pop    esp
  40dea3:	mov    bl,0x36
  40dea5:	mov    ds:0xbf113102,al
  40deaa:	fiadd  DWORD PTR [esi]
  40deac:	cmp    eax,0xf0ddd403
  40deb1:	jmp    0xc9b5:0x29b1f641
  40deb8:	fisttp DWORD PTR [edx+0x60b049b0]
  40debe:	int3   
  40debf:	mov    ds:0x6acc2945,al
  40dec4:	mov    eax,ds:0x8aaa57bf
  40dec9:	loop   0x40deee
  40decb:	addr16 mov ch,0x22
  40dece:	cmp    eax,0x5f747916
  40ded3:	cmp    DWORD PTR fs:[ecx],edx
  40ded6:	pop    eax
  40ded7:	sar    BYTE PTR [ebp+0x75],1
  40deda:	or     bh,BYTE PTR [ebx+edx*8-0x61512b58]
  40dee1:	es hlt 
  40dee3:	push   0x62
  40dee5:	xchg   ebp,eax
  40dee6:	jo     0x40df3b
  40dee8:	sub    al,0xec
  40deea:	fcom   st(6)
  40deec:	(bad)  
  40deed:	ins    BYTE PTR es:[edi],dx
  40deee:	lods   eax,DWORD PTR ds:[esi]
  40deef:	add    esi,esp
  40def1:	mov    dl,0x62
  40def3:	(bad)  
  40def4:	inc    ebx
  40def5:	cmp    edi,DWORD PTR [eax+0x6d]
  40def8:	les    edi,FWORD PTR [di-0x59b2]
  40defd:	fisttp DWORD PTR [ecx+ebp*2]
  40df00:	data16 or ch,BYTE PTR [eax+0x2]
  40df04:	pusha  
  40df05:	bound  ecx,QWORD PTR [edi-0x73]
  40df08:	inc    eax
  40df09:	jmp    0x3af4:0xd1487025
  40df10:	ins    BYTE PTR es:[edi],dx
  40df11:	jmp    0x9dd6f995
  40df16:	fwait
  40df17:	pop    ebx
  40df18:	rcr    ah,1
  40df1a:	fsubr  QWORD PTR [esi+ebx*1-0x16]
  40df1e:	jb     0x40df56
  40df20:	mov    bh,0x72
  40df22:	(bad)  
  40df23:	les    esp,FWORD PTR [edi+0x51]
  40df26:	call   0x9ae7:0x49cf47ab
  40df2d:	sub    BYTE PTR [ecx],cl
  40df2f:	mov    bh,0x23
  40df31:	inc    cx
  40df33:	iret   
  40df34:	ss je  0x40df4f
  40df37:	leave  
  40df38:	in     al,0x49
  40df3a:	nop
  40df3b:	cmp    al,0x1f
  40df3d:	mov    DWORD PTR [esi+eiz*2-0x4c],edi
  40df41:	mov    ds:0xb981dd47,al
  40df46:	inc    ecx
  40df47:	mov    WORD PTR [ecx],?
  40df49:	mov    DWORD PTR [ebx+0x37],ebx
  40df4c:	cwde   
  40df4d:	push   esi
  40df4e:	sub    al,0x3d
  40df50:	xchg   edx,eax
  40df51:	(bad)  
  40df52:	mov    ah,0x78
  40df54:	(bad)  
  40df55:	sbb    DWORD PTR [edi+0x61379c30],ecx
  40df5b:	xchg   ebp,eax
  40df5c:	repnz rcl BYTE PTR [edi],cl
  40df5f:	push   0xdfbeca9c
  40df64:	into   
  40df65:	pop    ds
  40df66:	int3   
  40df67:	adc    edi,esi
  40df69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df6a:	enter  0xb326,0xc2
  40df6e:	je     0x40dfd3
  40df70:	xchg   ch,al
  40df72:	mov    ebp,0xe5409c67
  40df77:	sbb    al,0x6c
  40df79:	jnp    0x40dfe0
  40df7b:	sar    DWORD PTR [eax],1
  40df7d:	push   ss
  40df7e:	sbb    bh,bh
  40df80:	jle    0x40df33
  40df82:	sub    bl,cl
  40df84:	and    bh,cl
  40df86:	or     BYTE PTR [ecx+eiz*4+0x3e],dh
  40df8a:	je     0x40dfd4
  40df8c:	push   ss
  40df8d:	jg     0x40df26
  40df8f:	xchg   ecx,eax
  40df90:	adc    eax,0xc9fabee6
  40df95:	mov    esp,0xd038468c
  40df9a:	shr    BYTE PTR [edi+0x14ec4d8a],1
  40dfa0:	jp     0x40df77
  40dfa2:	clc    
  40dfa3:	sti    
  40dfa4:	jmp    0x40df2b
  40dfa6:	iret   
  40dfa7:	das    
  40dfa8:	jl     0x40df58
  40dfaa:	scas   eax,DWORD PTR es:[edi]
  40dfab:	cmp    bh,BYTE PTR [ecx]
  40dfad:	push   ebp
  40dfae:	jno    0x40e01e
  40dfb0:	pusha  
  40dfb1:	sub    esi,ecx
  40dfb3:	cmp    eax,0xd6a6edf
  40dfb8:	mov    ds:0xa8ad26bb,eax
  40dfbd:	push   0xcb49b7aa
  40dfc2:	into   
  40dfc3:	push   esi
  40dfc4:	push   ebp
  40dfc5:	outs   dx,BYTE PTR ds:[esi]
  40dfc6:	mov    BYTE PTR [ecx],cl
  40dfc8:	outs   dx,BYTE PTR ds:[esi]
  40dfc9:	push   cs
  40dfca:	pop    ds
  40dfcb:	fist   WORD PTR [ebp+0x242fa279]
  40dfd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfd2:	enter  0x95b1,0x82
  40dfd6:	add    edi,DWORD PTR [esi-0x71297cbc]
  40dfdc:	push   ebp
  40dfdd:	sub    esp,DWORD PTR [esi]
  40dfdf:	mov    edx,esp
  40dfe1:	aas    
  40dfe2:	ss push ecx
  40dfe4:	aad    0xba
  40dfe6:	pop    ebp
  40dfe7:	mov    cl,BYTE PTR [esi]
  40dfe9:	mov    edx,0x66ffaf3f
  40dfee:	(bad)  
  40dff0:	jle    0x40dfef
  40dff2:	pop    eax
  40dff3:	sbb    edi,DWORD PTR [ecx+0x65]
  40dff6:	sbb    DWORD PTR [edx+ebp*8-0x76],edi
  40dffa:	test   BYTE PTR [edx],bl
  40dffc:	push   cs
  40dffd:	mov    esi,ebx
  40dfff:	(bad)  [ecx+0x4cc1cec4]
  40e005:	bound  eax,QWORD PTR [edx]
  40e007:	retf   0xeef
  40e00a:	out    dx,eax
  40e00b:	iret   
  40e00c:	rcl    DWORD PTR [edx],cl
  40e00e:	jne    0x40dff0
  40e010:	ss mov ah,0x89
  40e013:	sbb    ah,0x38
  40e016:	jno    0x40e076
  40e018:	push   0x90db261d
  40e01d:	(bad)  
  40e01e:	jmp    0x40e02b
  40e020:	(bad)  
  40e021:	hlt    
  40e022:	lds    edi,FWORD PTR [edi-0x5a2e07f1]
  40e028:	add    BYTE PTR [ecx],bl
  40e02a:	dec    ecx
  40e02b:	inc    ebp
  40e02c:	test   ebp,edi
  40e02e:	fst    st(4)
  40e030:	div    BYTE PTR [edx+0x70]
  40e033:	sbb    esp,DWORD PTR [ebx]
  40e035:	sub    cl,BYTE PTR [ebx-0x6a]
  40e038:	adc    esp,0x942acd79
  40e03e:	mov    bl,ch
  40e040:	sbb    al,0xf5
  40e042:	daa    
  40e043:	mov    edx,DWORD PTR [ecx]
  40e045:	rcr    BYTE PTR [edx-0x3d],cl
  40e048:	arpl   sp,ax
  40e04a:	or     DWORD PTR [esi-0x2369ba4a],edi
  40e050:	xlat   BYTE PTR ds:[ebx]
  40e051:	pusha  
  40e052:	inc    ecx
  40e053:	lods   eax,DWORD PTR ds:[esi]
  40e054:	jae    0x40e039
  40e056:	xor    edi,0xd8c11803
  40e05c:	out    0x11,al
  40e05e:	ficom  WORD PTR [ebp-0x52107b8]
  40e064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e065:	jns    0x40e0cc
  40e067:	cli    
  40e068:	in     al,dx
  40e069:	inc    ebp
  40e06a:	pop    ss
  40e06b:	pop    eax
  40e06c:	adc    ch,0x1a
  40e06f:	and    eax,0x64b3fa87
  40e074:	xchg   DWORD PTR [edi+ebx*8-0x33f6c629],edi
  40e07b:	dec    eax
  40e07c:	add    bl,BYTE PTR [ecx-0x590fd92c]
  40e082:	std    
  40e083:	sahf   
  40e084:	stos   DWORD PTR es:[edi],eax
  40e085:	pushf  
  40e086:	ins    DWORD PTR es:[edi],dx
  40e087:	ds mov edi,0x8564f94e
  40e08d:	pop    edi
  40e08e:	pop    ebx
  40e08f:	cld    
  40e090:	or     DWORD PTR [ecx+0x54],0x8
  40e094:	sbb    BYTE PTR [ebp+0x5a],ch
  40e097:	or     eax,0x7c35f56
  40e09c:	mul    DWORD PTR [esi+0x7ab4d386]
  40e0a2:	loopne 0x40e0b8
  40e0a4:	scas   al,BYTE PTR es:[edi]
  40e0a5:	mov    bh,BYTE PTR [ecx]
  40e0a7:	cmp    al,0xef
  40e0a9:	mov    edx,0x90f07ad
  40e0ae:	mov    edx,0x1570a8ad
  40e0b3:	push   edx
  40e0b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0b5:	dec    edi
  40e0b6:	in     eax,0xea
  40e0b8:	pop    ss
  40e0b9:	mov    ah,BYTE PTR [eax]
  40e0bb:	stc    
  40e0bc:	dec    esi
  40e0bd:	and    edx,DWORD PTR [edx-0x65fc8a9e]
  40e0c3:	or     al,0xdb
  40e0c5:	lods   eax,DWORD PTR ds:[esi]
  40e0c6:	push   bx
  40e0c8:	call   0x4c20:0x54bfb16c
  40e0cf:	or     BYTE PTR [edi+0x23863531],0x58
  40e0d6:	ror    DWORD PTR [ecx+0x68],1
  40e0d9:	in     eax,0x49
  40e0db:	jno    0x40e060
  40e0dd:	push   cs
  40e0de:	retf   
  40e0df:	cwde   
  40e0e0:	add    DWORD PTR [eax+ecx*4+0x578740b0],0x55
  40e0e8:	leave  
  40e0e9:	pop    ebx
  40e0ea:	mov    bh,0x5c
  40e0ec:	ss stos DWORD PTR es:[edi],eax
  40e0ee:	in     al,0xf7
  40e0f0:	sbb    dh,BYTE PTR [esi+0x17]
  40e0f3:	(bad)  
  40e0f4:	mov    ebx,0x7db9765
  40e0f9:	sar    esp,1
  40e0fb:	loope  0x40e10c
  40e0fd:	sbb    al,0x6a
  40e0ff:	aad    0x1e
  40e101:	jecxz  0x40e152
  40e103:	add    BYTE PTR [ecx+0x49eef351],bl
  40e109:	mov    dh,0x97
  40e10b:	jne    0x40e0e3
  40e10d:	mov    BYTE PTR [ebx+esi*4-0x7243ca7e],0x99
  40e115:	fcom   QWORD PTR [edi-0x38]
  40e118:	lahf   
  40e119:	pop    esp
  40e11a:	mov    ch,0xc1
  40e11c:	jbe    0x40e182
  40e11e:	push   esi
  40e11f:	(bad)  
  40e122:	push   cs
  40e123:	retf   0xea49
  40e126:	or     eax,0x77e63062
  40e12b:	popf   
  40e12c:	xor    DWORD PTR [esp+ecx*4-0x61],0x41f4c75e
  40e134:	add    BYTE PTR [edx-0x14],0x85
  40e138:	repnz in al,0x4e
  40e13b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e13c:	xchg   si,ax
  40e13e:	xor    ebx,ebx
  40e140:	mov    ds:0x3fc72cfa,eax
  40e145:	sti    
  40e146:	xchg   ecx,eax
  40e147:	cmp    bh,BYTE PTR [ebx]
  40e149:	dec    ebp
  40e14a:	inc    eax
  40e14b:	jnp    0x40e153
  40e14d:	cmp    DWORD PTR [edi+0x75293a10],ebx
  40e153:	imul   eax,edi,0xffffffb9
  40e156:	dec    eax
  40e157:	xor    eax,0xa9a269d3
  40e15c:	push   es
  40e15d:	dec    esp
  40e15e:	add    BYTE PTR [edi+0x3cd6be5e],bh
  40e164:	mov    DWORD PTR [ecx],edi
  40e166:	and    dl,cl
  40e168:	sub    bh,bl
  40e16a:	ja     0x40e15c
  40e16c:	stos   BYTE PTR es:[edi],al
  40e16d:	pop    eax
  40e16e:	nop
  40e16f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e170:	mov    ch,0x2c
  40e172:	sub    DWORD PTR [edi],ecx
  40e174:	outs   dx,BYTE PTR ds:[esi]
  40e175:	push   ebx
  40e176:	jge    0x40e1c1
  40e178:	imul   esp,DWORD PTR [ecx-0x41],0x610531e9
  40e17f:	jge    0x40e1e3
  40e181:	xor    DWORD PTR [ebp-0x26],edi
  40e184:	scas   eax,DWORD PTR es:[edi]
  40e185:	inc    eax
  40e186:	dec    BYTE PTR [edx-0x7bfe26b4]
  40e18c:	imul   edx
  40e18e:	pop    edi
  40e18f:	ins    DWORD PTR es:[edi],dx
  40e190:	clc    
  40e191:	mov    eax,0x51f32dc1
  40e196:	ss sub al,0x34
  40e199:	xchg   ecx,esi
  40e19b:	sub    DWORD PTR [ebp-0xa],edx
  40e19e:	fcmovu st,st(0)
  40e1a0:	fnstcw WORD PTR [edi]
  40e1a2:	mov    ebx,0x8e3f0dd6
  40e1a7:	mov    al,ds:0xa5a9609d
  40e1ac:	call   0x670a1da6
  40e1b1:	push   ss
  40e1b2:	dec    esp
  40e1b3:	cmp    bh,dl
  40e1b5:	int    0xe8
  40e1b7:	cli    
  40e1b8:	mov    al,BYTE PTR [ebx-0x10b3d37c]
  40e1be:	mov    edi,0x846a432c
  40e1c3:	or     ch,BYTE PTR [edi]
  40e1c5:	jmp    0xb333:0x3e970db9
  40e1cc:	or     dh,dh
  40e1ce:	mov    fs:0x9316598,al
  40e1d4:	jp     0x40e252
  40e1d6:	sti    
  40e1d7:	mov    ch,ch
  40e1d9:	inc    ebx
  40e1da:	xor    DWORD PTR [ebx+0xc],0x6a
  40e1de:	inc    esi
  40e1df:	sub    edx,ebp
  40e1e1:	fmulp  st(4),st
  40e1e3:	jo     0x40e238
  40e1e5:	mov    esi,gs
  40e1e7:	outs   dx,BYTE PTR ds:[esi]
  40e1e8:	push   ecx
  40e1e9:	cmp    al,0x5d
  40e1eb:	sti    
  40e1ec:	add    BYTE PTR [ebp-0x7a4b33db],cl
  40e1f2:	adc    al,BYTE PTR [eax+0x5d]
  40e1f5:	ja     0x40e24b
  40e1f7:	mov    ebx,0xd10cfc33
  40e1fc:	jmp    0x40e25f
  40e1fe:	fdivr  QWORD PTR [esi-0x5d]
  40e201:	stc    
  40e202:	sbb    ebx,DWORD PTR [ebx]
  40e204:	cld    
  40e205:	cld    
  40e206:	mov    ecx,DWORD PTR [eax]
  40e208:	dec    ebp
  40e209:	or     ch,bl
  40e20b:	call   0x684a:0xdb6eac0d
  40e212:	fst    QWORD PTR [ebx+0x30]
  40e215:	and    eax,0x1efefea3
  40e21a:	loope  0x40e1de
  40e21c:	test   DWORD PTR [ebx+edi*1-0x7b80b283],ecx
  40e223:	adc    edi,DWORD PTR [esi+eax*1]
  40e226:	sbb    ebx,0x97e78bb8
  40e22c:	cmp    bh,dh
  40e22e:	cwde   
  40e22f:	pop    ebx
  40e230:	or     cl,dl
  40e232:	shl    BYTE PTR [edi-0x5e],cl
  40e235:	icebp  
  40e236:	or     DWORD PTR [ecx],0x22514092
  40e23c:	ss neg dl
  40e23f:	mov    esi,0x743f1951
  40e244:	mov    bh,0x80
  40e246:	dec    eax
  40e247:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40e249:	es aas 
  40e24b:	xor    ah,BYTE PTR [eax+0x21]
  40e24e:	std    
  40e24f:	es out 0xf7,al
  40e252:	nop
  40e253:	stos   BYTE PTR es:[edi],al
  40e254:	fdiv   DWORD PTR [edx-0x7d]
  40e257:	jg     0x40e29a
  40e259:	jmp    0x26a8:0xaa75cf48
  40e260:	cwde   
  40e261:	and    al,BYTE PTR ds:0x94805f30
  40e267:	pop    ecx
  40e268:	(bad)  
  40e269:	out    0x4,al
  40e26b:	push   edi
  40e26c:	adc    al,0xd2
  40e26e:	mov    ch,0xb2
  40e270:	inc    ebx
  40e271:	adc    eax,0xb71bbec2
  40e276:	out    0x3a,al
  40e278:	sbb    al,0x44
  40e27a:	cli    
  40e27b:	inc    ebx
  40e27c:	mov    eax,0xf77342c6
  40e281:	stos   DWORD PTR es:[edi],eax
  40e282:	nop
  40e283:	and    dh,dl
  40e285:	ret    
  40e286:	std    
  40e287:	(bad)  [esi+0x25]
  40e28a:	jle    0x40e2a2
  40e28c:	mov    esp,0xf60e27dd
  40e291:	iret   
  40e292:	retf   0x36b2
  40e295:	adc    eax,0xc3f08dc9
  40e29a:	fisttp DWORD PTR [ebx]
  40e29c:	mov    ds:0x8072f3c2,al
  40e2a1:	out    dx,al
  40e2a2:	xchg   DWORD PTR [esi+0x17],esi
  40e2a5:	or     ch,ch
  40e2a7:	test   BYTE PTR [ecx],bh
  40e2a9:	fdiv   QWORD PTR [edi-0x60]
  40e2ac:	arpl   bp,bp
  40e2ae:	imul   ebp,DWORD PTR [edx-0x2c28de3c],0x73
  40e2b5:	cmp    eax,0xb78b5174
  40e2ba:	gs xchg ebp,eax
  40e2bc:	jne    0x40e266
  40e2be:	clc    
  40e2bf:	or     eax,0xc37ca4a3
  40e2c4:	dec    eax
  40e2c5:	test   al,0xf5
  40e2c8:	outs   dx,DWORD PTR ds:[esi]
  40e2c9:	cwde   
  40e2ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2cb:	xchg   ebp,eax
  40e2cc:	inc    edx
  40e2cd:	pop    ebp
  40e2ce:	retf   
  40e2cf:	dec    eax
  40e2d0:	jg     0x40e318
  40e2d2:	or     BYTE PTR [ebx],0x1b
  40e2d5:	adc    al,0xe0
  40e2d7:	push   edx
  40e2d8:	es sbb eax,0x117573a
  40e2de:	call   0x39f0c942
  40e2e3:	xor    ax,0x6f4b
  40e2e7:	fsub   QWORD PTR [eax-0x7b4df4fb]
  40e2ed:	in     al,dx
  40e2ee:	mov    eax,0x6adc40f9
  40e2f3:	xor    al,0x8f
  40e2f5:	lock repnz clc 
  40e2f8:	fwait
  40e2f9:	pop    ebp
  40e2fa:	push   esi
  40e2fb:	pushf  
  40e2fc:	fisubr WORD PTR ds:0x79e3cd2a
  40e302:	fs mov ecx,0xe04cbe57
  40e308:	test   DWORD PTR [ecx+0x280d362b],ebp
  40e30e:	push   esi
  40e30f:	mov    eax,0xf7f111d4
  40e314:	sub    esi,DWORD PTR [ebx+0x11]
  40e317:	dec    ebx
  40e318:	mov    eax,0x916ebd04
  40e31d:	(bad)  
  40e31e:	mov    ecx,0xee118252
  40e323:	leave  
  40e324:	mov    ds:0x5bd2f050,al
  40e329:	repz or BYTE PTR [eax],bl
  40e32c:	addr16 mov eax,ds:0xc390
  40e330:	dec    esi
  40e331:	mov    dl,BYTE PTR [ecx]
  40e333:	push   cs
  40e334:	(bad)  
  40e335:	scas   eax,DWORD PTR es:[edi]
  40e336:	mov    dh,dl
  40e338:	jae    0x40e3aa
  40e33a:	rol    BYTE PTR [ecx+0x2e],0x4b
  40e33e:	sti    
  40e33f:	mov    ds:0x4fa1794a,al
  40e344:	ins    BYTE PTR es:[edi],dx
  40e345:	scas   eax,DWORD PTR es:[edi]
  40e346:	jbe    0x40e2ca
  40e348:	je     0x40e3a9
  40e34a:	adc    BYTE PTR [ecx-0x7e],al
  40e34d:	fst    QWORD PTR [ecx-0x7b]
  40e350:	xor    al,0xe
  40e352:	cwde   
  40e353:	jnp    0x40e389
  40e355:	pusha  
  40e356:	or     al,0x7e
  40e358:	arpl   WORD PTR [edi],di
  40e35a:	ins    BYTE PTR es:[edi],dx
  40e35b:	mov    dl,0x21
  40e35d:	jb     0x40e345
  40e35f:	xchg   ebp,eax
  40e360:	pushf  
  40e361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e362:	ja     0x40e3cf
  40e364:	jg     0x40e365
  40e366:	jns    0x40e2f2
  40e368:	ds mov ecx,0x923941b1
  40e36e:	push   ss
  40e36f:	stos   DWORD PTR es:[edi],eax
  40e370:	dec    esp
  40e371:	jmp    0x32b7baea
  40e376:	add    eax,0x5ef5cec3
  40e37b:	sti    
  40e37c:	mov    dl,BYTE PTR [eax-0x18]
  40e37f:	nop
  40e380:	jnp    0x40e3ae
  40e382:	mov    bl,0x78
  40e384:	push   ebp
  40e385:	pop    edx
  40e386:	dec    eax
  40e387:	jmp    0x2d19:0x281b4add
  40e38e:	mov    ebx,0x9550f9ec
  40e393:	popa   
  40e394:	cwde   
  40e395:	cmc    
  40e396:	xchg   ebx,eax
  40e397:	out    dx,al
  40e398:	adc    dl,BYTE PTR [eax+eiz*2]
  40e39b:	pop    ss
  40e39c:	mov    DWORD PTR [edx],esp
  40e39e:	ffree  st(6)
  40e3a0:	xor    bh,BYTE PTR [esi]
  40e3a2:	cmc    
  40e3a3:	out    dx,eax
  40e3a4:	or     eax,0xcbf0c869
  40e3a9:	mov    DWORD PTR [edx-0x2df6ecb],ebp
  40e3af:	mov    edi,0xbe003d98
  40e3b4:	js     0x40e3da
  40e3b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3b7:	sub    dh,BYTE PTR [eax]
  40e3b9:	loop   0x40e3eb
  40e3bb:	xor    BYTE PTR [edi-0x37],cl
  40e3be:	inc    eax
  40e3bf:	popf   
  40e3c0:	in     eax,0xf1
  40e3c2:	out    dx,al
  40e3c3:	lea    esp,[ebx-0x5f]
  40e3c6:	addr16 lahf 
  40e3c8:	xor    al,0xe7
  40e3ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3cb:	leave  
  40e3cc:	pop    es
  40e3cd:	pop    eax
  40e3ce:	mov    edx,0xca671f50
  40e3d3:	shl    BYTE PTR [edi],cl
  40e3d5:	jle    0x40e413
  40e3d7:	lea    esp,[edx-0x6edcef6d]
  40e3dd:	sbb    al,0x9c
  40e3df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3e0:	popf   
  40e3e1:	in     eax,0x6d
  40e3e3:	cmp    dl,BYTE PTR [ebx+0x6ad5db0f]
  40e3e9:	sub    BYTE PTR [esi+eiz*2-0x18e780f8],0x8c
  40e3f1:	jno    0x40e3e9
  40e3f3:	cdq    
  40e3f4:	jbe    0x40e42d
  40e3f6:	sub    eax,0x4c4fb972
  40e3fb:	ins    DWORD PTR es:[edi],dx
  40e3fc:	aaa    
  40e3fd:	dec    ebx
  40e3fe:	jg     0x40e40b
  40e400:	jle    0x40e3ed
  40e402:	jg     0x40e429
  40e404:	jnp    0x40e3f5
  40e406:	fwait
  40e407:	pushf  
  40e408:	popf   
  40e409:	xchg   edi,eax
  40e40a:	xlat   BYTE PTR ds:[ebx]
  40e40b:	inc    edi
  40e40c:	enter  0x84d4,0x4e
  40e410:	jl     0x40e3cc
  40e412:	iret   
  40e413:	push   ebp
  40e414:	cld    
  40e415:	daa    
  40e416:	out    dx,eax
  40e417:	(bad)  
  40e418:	jbe    0x40e474
  40e41a:	jb     0x40e3eb
  40e41c:	push   eax
  40e41d:	xchg   esi,eax
  40e41e:	or     eax,0x595c1eef
  40e423:	test   DWORD PTR [esi],ebp
  40e425:	jae    0x40e3d7
  40e427:	lods   al,BYTE PTR ds:[esi]
  40e428:	out    0x6e,eax
  40e42a:	test   DWORD PTR [ecx+0x17a070f7],ecx
  40e430:	jp     0x40e3bd
  40e432:	imul   edx,edi,0xe5086fd1
  40e438:	mov    edi,0x56471f9f
  40e43d:	inc    ecx
  40e43e:	or     ebx,ebp
  40e440:	add    eax,0xf18a7ac
  40e445:	mov    al,ds:0xd0489f1b
  40e44a:	mov    ecx,0x7e24784d
  40e44f:	sub    ch,dh
  40e451:	add    al,0xf8
  40e453:	dec    ecx
  40e454:	sub    BYTE PTR fs:[eax],0x46
  40e458:	sub    DWORD PTR ds:[ecx],ebp
  40e45b:	jp     0x40e45c
  40e45d:	and    eax,0x29377789
  40e462:	mov    ebp,0xb21b9d22
  40e467:	add    ah,BYTE PTR [edx+0x2047ec7a]
  40e46d:	pop    edi
  40e46e:	dec    eax
  40e46f:	dec    ecx
  40e470:	cmc    
  40e471:	test   DWORD PTR [ecx+0x42194a8f],ebx
  40e477:	daa    
  40e478:	jb     0x40e4e9
  40e47a:	icebp  
  40e47b:	std    
  40e47c:	xor    al,0x8c
  40e47e:	out    dx,al
  40e47f:	mov    ?,WORD PTR [edx]
  40e481:	xor    al,0x77
  40e483:	das    
  40e484:	xchg   ebx,eax
  40e485:	sar    BYTE PTR [ecx],0xeb
  40e488:	stos   DWORD PTR es:[edi],eax
  40e489:	mov    cl,0x51
  40e48b:	adc    esp,edx
  40e48d:	mov    edi,0xf3127dd0
  40e492:	mov    esi,0x13817e27
  40e497:	and    eax,DWORD PTR [edi-0x476e8f21]
  40e49d:	or     edi,DWORD PTR [eax+0x2acf0691]
  40e4a3:	mov    dl,0x50
  40e4a5:	inc    esi
  40e4a6:	dec    edx
  40e4a7:	dec    edx
  40e4a8:	nop
  40e4a9:	jns    0x40e4de
  40e4ab:	dec    eax
  40e4ac:	mov    cl,0x97
  40e4ae:	stos   BYTE PTR es:[edi],al
  40e4af:	cmp    dl,BYTE PTR [esi]
  40e4b1:	mov    al,ds:0xbc9823dc
  40e4b6:	jno    0x40e472
  40e4b8:	inc    esi
  40e4b9:	stc    
  40e4ba:	push   ebp
  40e4bb:	xchg   edx,eax
  40e4bc:	add    bh,ch
  40e4be:	test   BYTE PTR [ebp+0x62286ed2],al
  40e4c4:	(bad)  
  40e4c5:	popf   
  40e4c6:	mov    dh,0xe4
  40e4c8:	or     DWORD PTR [edx+0x38790a95],eax
  40e4ce:	xor    dl,bl
  40e4d0:	xchg   edi,eax
  40e4d1:	inc    edx
  40e4d2:	adc    ah,bl
  40e4d4:	add    ecx,ebx
  40e4d6:	outs   dx,DWORD PTR ds:[esi]
  40e4d7:	cmp    esp,DWORD PTR [edi+0x6574d4bc]
  40e4dd:	mov    edx,0xcb0e6357
  40e4e2:	sub    ebx,DWORD PTR [ebx-0x45]
  40e4e5:	cmp    bh,BYTE PTR [ebp+0x3b]
  40e4e8:	add    al,0x4f
  40e4ea:	push   edx
  40e4eb:	call   0x99c0b047
  40e4f0:	int3   
  40e4f1:	or     eax,0x5dec6580
  40e4f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4f7:	inc    esi
  40e4f8:	(bad)  
  40e4f9:	repnz enter 0x7651,0x38
  40e4fe:	inc    ebp
  40e4ff:	mov    edx,0x65434611
  40e504:	sub    bl,0x45
  40e507:	xor    eax,0xd9c10020
  40e50c:	lds    edi,FWORD PTR [ebx+0x7151c3de]
  40e512:	popa   
  40e513:	je     0x40e4a0
  40e515:	dec    esp
  40e516:	sub    cl,BYTE PTR [esi]
  40e518:	call   0x6201442a
  40e51d:	dec    ecx
  40e51e:	cmp    eax,0xdb373a6e
  40e523:	es std 
  40e525:	mov    bh,0x43
  40e527:	sbb    al,0xc4
  40e529:	add    DWORD PTR [edx],edx
  40e52b:	arpl   di,di
  40e52d:	mov    bl,0x8c
  40e52f:	outs   dx,DWORD PTR ds:[esi]
  40e530:	clc    
  40e531:	fistp  DWORD PTR [ebx+edi*2-0x1b]
  40e535:	sbb    BYTE PTR [esi-0x4f],ch
  40e538:	shl    BYTE PTR [edi],0x21
  40e53b:	push   edx
  40e53c:	sub    dh,ah
  40e53e:	fnstcw WORD PTR [edi+0x56]
  40e541:	jp     0x40e579
  40e543:	dec    ebp
  40e544:	jecxz  0x40e539
  40e546:	mov    ds:0xcb8500b9,al
  40e54b:	(bad)  
  40e54c:	xor    al,0x92
  40e54e:	fcomp  QWORD PTR [ecx]
  40e550:	dec    edi
  40e551:	jns    0x40e50e
  40e553:	nop
  40e554:	pcmpeqd mm2,QWORD PTR [esi+ebx*1+0x24]
  40e559:	jp     0x40e5ae
  40e55b:	lds    esi,FWORD PTR [esi]
  40e55d:	xor    bh,BYTE PTR [ebx-0x7277568e]
  40e563:	clc    
  40e564:	dec    ebp
  40e565:	out    dx,al
  40e566:	outs   dx,DWORD PTR ds:[esi]
  40e567:	mov    al,ds:0xeea5cbbd
  40e56c:	popa   
  40e56d:	mov    ecx,DWORD PTR [ecx+edi*1-0x498b3fd2]
  40e574:	ins    DWORD PTR es:[edi],dx
  40e575:	mov    bl,0xcf
  40e577:	pop    ebx
  40e578:	mov    ds:0x7974eee1,al
  40e57d:	mov    es,ecx
  40e57f:	mov    WORD PTR [ebx-0xcdd1d0c],gs
  40e585:	out    0x78,al
  40e587:	or     DWORD PTR [eax],edi
  40e589:	arpl   WORD PTR [ecx-0x13],ax
  40e58c:	retf   0xd4c0
  40e58f:	xor    DWORD PTR [ebp-0x30],edi
  40e592:	out    dx,al
  40e593:	mov    ds:0x87562b14,al
  40e598:	test   DWORD PTR [ecx-0x68],ebp
  40e59b:	stos   BYTE PTR es:[edi],al
  40e59c:	add    eax,0x2e64be5f
  40e5a1:	jg     0x40e592
  40e5a3:	adc    al,0x82
  40e5a5:	les    ebp,FWORD PTR [ecx+edi*1+0x29]
  40e5a9:	cld    
  40e5aa:	sub    ebp,DWORD PTR [esi+ebp*1+0x6e]
  40e5ae:	fsub   DWORD PTR [ebx+0x19]
  40e5b1:	ins    BYTE PTR es:[edi],dx
  40e5b2:	popf   
  40e5b3:	xlat   BYTE PTR ds:[ebx]
  40e5b4:	inc    ecx
  40e5b5:	bound  ebp,QWORD PTR [ecx-0x5f]
  40e5b8:	in     al,dx
  40e5b9:	out    dx,eax
  40e5ba:	jp     0x40e5f3
  40e5bc:	mov    ecx,0xb2769931
  40e5c1:	enter  0xfb87,0xe4
  40e5c5:	dec    esp
  40e5c6:	ficom  WORD PTR [esi+0x67]
  40e5c9:	out    0xcc,al
  40e5cb:	test   eax,0xd8bab195
  40e5d0:	cmp    al,0x2d
  40e5d2:	sub    eax,0xcae4cf5a
  40e5d7:	pop    ss
  40e5d8:	jecxz  0x40e5bc
  40e5da:	out    0xbf,eax
  40e5dc:	xor    dl,ch
  40e5de:	xor    DWORD PTR [ebx],0xffffffaa
  40e5e1:	xor    bl,ah
  40e5e3:	aas    
  40e5e4:	mov    al,0x11
  40e5e6:	cdq    
  40e5e7:	add    BYTE PTR [eax],dl
  40e5e9:	fs ffreep st(1)
  40e5ec:	mov    dh,0x93
  40e5ee:	jg     0x40e66d
  40e5f0:	dec    esp
  40e5f1:	icebp  
  40e5f2:	test   al,0xbd
  40e5f4:	pop    ds
  40e5f5:	daa    
  40e5f6:	mov    ebp,0x1c81e756
  40e5fb:	xchg   edx,eax
  40e5fc:	popf   
  40e5fd:	or     ah,BYTE PTR ds:[edx]
  40e600:	mov    ebx,0xb0f421dc
  40e605:	push   edi
  40e606:	xor    BYTE PTR [edx],bh
  40e608:	pop    edx
  40e609:	mov    cl,0x64
  40e60b:	in     eax,0x17
  40e60d:	and    BYTE PTR [edx],dh
  40e60f:	push   cs
  40e610:	test   eax,0xa8b90fe8
  40e615:	push   esi
  40e616:	mov    dl,0x18
  40e618:	ins    BYTE PTR es:[edi],dx
  40e619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e61a:	push   edi
  40e61b:	pop    eax
  40e61c:	lock daa 
  40e61e:	or     al,0x8d
  40e620:	dec    edi
  40e621:	retf   0x22f0
  40e624:	fdivr  st,st(6)
  40e626:	das    
  40e627:	fisttp WORD PTR [ebx]
  40e629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e62a:	fsub   st,st(3)
  40e62c:	cmp    DWORD PTR [eax+0x2f],esi
  40e62f:	push   edx
  40e630:	push   edx
  40e631:	stos   BYTE PTR es:[edi],al
  40e632:	mov    dl,0x97
  40e634:	pop    edx
  40e635:	mov    DWORD PTR [esi],ebp
  40e637:	call   0x5b34:0x925645fa
  40e63e:	adc    DWORD PTR ds:0xc64a509f,ecx
  40e644:	xchg   edi,eax
  40e645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e646:	jmp    DWORD PTR [ebx+0x1b58f027]
  40e64c:	push   0xd
  40e64e:	jmp    0xc76baa90
  40e653:	pop    esp
  40e654:	adc    DWORD PTR [ecx-0x7475a793],ebp
  40e65a:	repz (bad) 
  40e65c:	mov    ecx,0xa6bcbe62
  40e661:	in     eax,dx
  40e662:	jmp    0x4c6a61d7
  40e667:	fldcw  WORD PTR [edx+0x3ebba105]
  40e66d:	xchg   DWORD PTR [esi+0x78adb1d9],eax
  40e673:	pop    ss
  40e674:	cmp    ecx,DWORD PTR [ebx+edx*2-0x3f29f0a1]
  40e67b:	adc    al,0x4
  40e67d:	push   es
  40e67e:	hlt    
  40e67f:	jecxz  0x40e633
  40e681:	aas    
  40e682:	mov    eax,0x9bc48135
  40e687:	xchg   ecx,eax
  40e688:	xchg   esp,eax
  40e689:	ret    
  40e68a:	inc    esi
  40e68b:	and    al,0x36
  40e68d:	jle    0x40e61c
  40e68f:	jecxz  0x40e6dc
  40e691:	mov    al,0x6e
  40e693:	stos   DWORD PTR es:[edi],eax
  40e694:	push   0x62de170d
  40e699:	and    esi,DWORD PTR [edi-0x30653b6b]
  40e69f:	mov    al,ds:0x56467750
  40e6a4:	pop    esi
  40e6a5:	xchg   edi,eax
  40e6a6:	xchg   esi,eax
  40e6a7:	adc    ch,BYTE PTR [edi-0x1e]
  40e6aa:	dec    esi
  40e6ab:	ficomp WORD PTR [edx+0x7d]
  40e6ae:	nop
  40e6af:	aaa    
  40e6b0:	jp     0x40e6a1
  40e6b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6b3:	or     DWORD PTR [edx+ebx*1-0x51],esi
  40e6b7:	fs jp  0x40e736
  40e6ba:	sbb    esi,DWORD PTR [eax+0x560aa2df]
  40e6c0:	retf   
  40e6c1:	aad    0x50
  40e6c3:	push   esi
  40e6c4:	inc    edi
  40e6c5:	and    al,0x26
  40e6c7:	imul   edx,DWORD PTR [eax],0x5279d3fd
  40e6cd:	and    esi,esp
  40e6cf:	into   
  40e6d0:	jl     0x40e670
  40e6d2:	xchg   ebp,eax
  40e6d3:	out    dx,al
  40e6d4:	jnp    0x40e6bf
  40e6d6:	mov    bl,0x3b
  40e6d8:	idiv   DWORD PTR [esi-0x514e0386]
  40e6de:	dec    ecx
  40e6e0:	cmp    al,0x48
  40e6e2:	xor    bh,bl
  40e6e4:	sar    esp,0xab
  40e6e7:	fdiv   DWORD PTR [bx+0x44]
  40e6eb:	test   BYTE PTR [edx],dh
  40e6ed:	(bad)  
  40e6ee:	leave  
  40e6ef:	add    ch,al
  40e6f1:	dec    edi
  40e6f2:	push   edi
  40e6f3:	push   esp
  40e6f4:	push   ecx
  40e6f5:	inc    esi
  40e6f6:	nop
  40e6f7:	and    eax,0x1c559d17
  40e6fc:	in     eax,0xd7
  40e6fe:	xchg   edx,eax
  40e6ff:	mov    dh,0xfc
  40e701:	outs   dx,DWORD PTR ds:[esi]
  40e702:	sub    al,0x25
  40e704:	retf   0xda65
  40e707:	popf   
  40e708:	out    dx,eax
  40e709:	jmp    0x40e6a6
  40e70b:	rcr    DWORD PTR [edi-0x2a84ef4d],0x7c
  40e712:	pop    es
  40e713:	xchg   ebp,eax
  40e714:	aas    
  40e715:	pop    ecx
  40e716:	push   ebx
  40e717:	mov    dh,0x3c
  40e719:	fs (bad) 
  40e71b:	js     0x40e6c7
  40e71d:	jmp    0xa7bbc628
  40e722:	int    0x64
  40e724:	mov    ch,0x3c
  40e726:	add    eax,0x628fd54f
  40e72b:	pop    edx
  40e72c:	xchg   esi,eax
  40e72d:	test   bl,bh
  40e72f:	or     ebp,DWORD PTR [esi+0x3f]
  40e732:	xchg   ecx,eax
  40e733:	mov    ebp,0x6e0ebe9e
  40e738:	imul   ebp,DWORD PTR [ecx+0x72b5c09c],0x3e
  40e73f:	je     0x40e74e
  40e741:	dec    ecx
  40e742:	rcl    eax,1
  40e744:	repz and esp,DWORD PTR [esi+eiz*8+0x50f44a3a]
  40e74c:	push   edx
  40e74d:	mov    ds:0x64751e23,eax
  40e752:	ficomp DWORD PTR [ecx]
  40e754:	scas   al,BYTE PTR es:[edi]
  40e755:	hlt    
  40e756:	cmp    eax,0x1e41303
  40e75b:	cdq    
  40e75c:	sbb    esp,DWORD PTR [ebp+ecx*4+0x3a0032ee]
  40e763:	jb     0x40e7cf
  40e765:	leave  
  40e766:	and    BYTE PTR [ebx+edi*1-0x75923344],ch
  40e76d:	aaa    
  40e76e:	outs   dx,DWORD PTR ds:[esi]
  40e76f:	jl     0x40e783
  40e771:	or     dh,BYTE PTR [edi-0x27f11603]
  40e777:	adc    al,0xa2
  40e77a:	loope  0x40e74d
  40e77c:	test   eax,0xe6b7ae8c
  40e781:	dec    ebx
  40e782:	xchg   edx,eax
  40e783:	or     al,0x5
  40e785:	mov    ds:0x56e044f7,al
  40e78a:	sti    
  40e78b:	or     eax,ecx
  40e78d:	ror    BYTE PTR [edi],1
  40e78f:	(bad)  
  40e790:	out    0x26,al
  40e792:	gs sahf 
  40e794:	cli    
  40e795:	cmp    bl,bh
  40e797:	adc    BYTE PTR [ecx],bl
  40e799:	in     eax,0xef
  40e79b:	arpl   WORD PTR [edi],di
  40e79d:	mov    eax,ds:0x74003531
  40e7a2:	loopne 0x40e78b
  40e7a4:	mov    bl,0x1c
  40e7a6:	in     eax,0xd5
  40e7a8:	ja     0x40e81b
  40e7aa:	pushf  
  40e7ab:	lods   eax,DWORD PTR ds:[esi]
  40e7ac:	std    
  40e7ad:	and    eax,0xa4a85b09
  40e7b2:	jg     0x40e79c
  40e7b4:	out    0x19,eax
  40e7b6:	sbb    edi,ebx
  40e7b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7b9:	jae    0x40e73c
  40e7bb:	push   0xffffffa9
  40e7bd:	xor    bl,BYTE PTR [eax]
  40e7bf:	out    0x7f,al
  40e7c1:	into   
  40e7c2:	push   esi
  40e7c3:	push   esi
  40e7c4:	or     al,0x63
  40e7c6:	cmp    BYTE PTR ds:0x19a328bf,0x53
  40e7cd:	mov    ds:0x3895d99e,eax
  40e7d2:	jmp    0xd395:0xeb8709bb
  40e7d9:	gs neg ebp
  40e7dc:	ds pushf 
  40e7de:	int3   
  40e7df:	mov    eax,0x9766c5d6
  40e7e4:	rcr    DWORD PTR [ecx+ebx*8-0x1d],1
  40e7e8:	leave  
  40e7e9:	mov    esp,0xa837a5a4
  40e7ee:	jmp    0x40e7ff
  40e7f0:	dec    esi
  40e7f1:	push   esi
  40e7f2:	mov    bh,0x7e
  40e7f4:	shl    DWORD PTR [edi-0x5b],0xba
  40e7f8:	adc    DWORD PTR ds:0x8eaea673,ecx
  40e7fe:	aad    0x92
  40e800:	arpl   ax,bp
  40e802:	arpl   sp,di
  40e804:	push   cs
  40e805:	xor    ch,BYTE PTR [ecx]
  40e807:	inc    ebp
  40e808:	cld    
  40e809:	ins    BYTE PTR es:[edi],dx
  40e80a:	or     BYTE PTR [ebp-0x728446ae],0xe3
  40e811:	sti    
  40e812:	fdiv   DWORD PTR [edi+0x190e3818]
  40e818:	cmp    esp,DWORD PTR [edi]
  40e81a:	mov    DWORD PTR [eax+0x1896aad8],esi
  40e820:	sub    edi,ebx
  40e822:	push   DWORD PTR [edx+eax*4]
  40e825:	mov    dl,BYTE PTR [eax]
  40e827:	inc    eax
  40e828:	jae    0x40e83b
  40e82a:	ss xchg edi,eax
  40e82c:	push   es
  40e82d:	fwait
  40e82e:	push   ss
  40e82f:	fcomp  DWORD PTR [eax+0x65]
  40e832:	jne    0x40e83b
  40e834:	mov    ds:0xf30c7f64,al
  40e839:	dec    esp
  40e83a:	dec    esi
  40e83b:	sub    al,0xac
  40e83d:	pop    es
  40e83e:	test   al,0x51
  40e840:	std    
  40e841:	xchg   ecx,eax
  40e842:	dec    esi
  40e843:	lods   al,BYTE PTR ds:[esi]
  40e844:	add    cl,bh
  40e846:	inc    esp
  40e847:	mov    eax,0xa9cf91e2
  40e84c:	mov    edi,0xd75df791
  40e851:	and    BYTE PTR [ecx+0x3f],bh
  40e854:	mov    DWORD PTR ss:[ecx],edi
  40e857:	pushf  
  40e858:	push   0x2d518c5b
  40e85d:	jmp    0x40e841
  40e85f:	sti    
  40e860:	mov    al,ds:0x5e48f0f9
  40e865:	leave  
  40e866:	xor    al,0xab
  40e868:	xchg   ebp,eax
  40e869:	add    bh,ah
  40e86b:	les    edi,FWORD PTR [esi-0x23]
  40e86e:	jp     0x40e8e8
  40e870:	add    DWORD PTR [ebp-0x1652896c],edi
  40e876:	das    
  40e877:	(bad)  
  40e878:	mov    ebp,0x54dc48d9
  40e87d:	loope  0x40e844
  40e87f:	mov    cl,BYTE PTR [edx]
  40e881:	(bad)  
  40e882:	lahf   
  40e883:	push   ecx
  40e884:	xchg   edi,eax
  40e885:	lods   eax,DWORD PTR ds:[esi]
  40e886:	call   0x3679:0xf10186cf
  40e88d:	cs mov esp,0xa6d87a67
  40e893:	jl     0x40e8d7
  40e895:	cdq    
  40e896:	push   ds
  40e897:	jno    0x40e856
  40e899:	shl    ah,cl
  40e89b:	out    0xc1,eax
  40e89d:	and    BYTE PTR [esi+0x1a1f5b11],ch
  40e8a3:	nop
  40e8a4:	(bad)  
  40e8a5:	(bad)  
  40e8a6:	shr    BYTE PTR [esi],cl
  40e8a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8a9:	dec    ebp
  40e8aa:	inc    eax
  40e8ab:	and    al,0xfb
  40e8ad:	(bad)  
  40e8ae:	mov    edx,0x24fbf2f5
  40e8b3:	dec    eax
  40e8b4:	ins    DWORD PTR es:[edi],dx
  40e8b5:	cmp    BYTE PTR [esi+0x14],0x86
  40e8b9:	je     0x40e8bd
  40e8bb:	jmp    0xa0b5:0x240935ba
  40e8c2:	xor    al,0x97
  40e8c4:	sbb    BYTE PTR [ecx],bh
  40e8c6:	(bad)  
  40e8c7:	add    DWORD PTR [eax],0x54
  40e8ca:	das    
  40e8cb:	sbb    al,0x46
  40e8cd:	mul    BYTE PTR [edx]
  40e8cf:	jl     0x40e88d
  40e8d1:	test   al,0x2d
  40e8d3:	pusha  
  40e8d4:	ret    
  40e8d5:	shl    DWORD PTR ds:0x33b2b8a3,0x4b
  40e8dc:	in     al,0x8d
  40e8de:	dec    ecx
  40e8df:	or     eax,DWORD PTR [ecx+0x3fc8cb7f]
  40e8e5:	inc    edx
  40e8e6:	sbb    dl,BYTE PTR [ebx-0x3626bcc5]
  40e8ec:	push   eax
  40e8ed:	cmp    DWORD PTR [eax+0x1a],0x53
  40e8f1:	adc    BYTE PTR [edx],0x2c
  40e8f4:	ins    DWORD PTR es:[edi],dx
  40e8f5:	xchg   edi,eax
  40e8f6:	xchg   ebx,eax
  40e8f7:	cmp    al,0x62
  40e8f9:	jae    0x40e8db
  40e8fb:	imul   ebp,DWORD PTR [eax-0x58e6d917],0x24211080
  40e905:	pop    es
  40e906:	fnstsw WORD PTR [edx-0x2c]
  40e909:	sbb    esp,DWORD PTR [edi-0xa]
  40e90c:	xchg   ecx,eax
  40e90d:	inc    edi
  40e90e:	add    ebx,esi
  40e910:	sub    DWORD PTR [ecx+0x2080f460],esi
  40e916:	or     cl,BYTE PTR ds:0x4ba7d226
  40e91c:	sbb    BYTE PTR [eax*4-0x36b10c20],0xe6
  40e924:	(bad)  
  40e925:	xchg   edi,eax
  40e926:	neg    BYTE PTR [edx-0x13]
  40e929:	sub    dh,ch
  40e92b:	int    0x8b
  40e92d:	fadd   DWORD PTR [edx]
  40e92f:	and    DWORD PTR [eax],edx
  40e931:	xor    BYTE PTR [ebx+edx*2],cl
  40e934:	dec    ecx
  40e935:	xor    bl,dh
  40e937:	pop    ebx
  40e938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e939:	rol    DWORD PTR [ecx+0x46e065c3],1
  40e93f:	mov    edx,0xe95b0593
  40e944:	ret    
  40e945:	push   eax
  40e946:	pop    eax
  40e947:	mov    di,0x47f4
  40e94b:	mov    bh,0x9c
  40e94d:	dec    eax
  40e94e:	jl     0x40e998
  40e950:	or     BYTE PTR [ecx-0x6c0fae48],dl
  40e956:	call   0xbeef14c1
  40e95b:	adc    DWORD PTR [esi-0x418f86cd],ecx
  40e961:	inc    ebx
  40e962:	rcr    BYTE PTR [ebx+0x1e330856],cl
  40e968:	mov    ch,0x53
  40e96a:	push   cx
  40e96c:	xchg   edi,eax
  40e96d:	dec    ebp
  40e96e:	in     eax,0x35
  40e970:	pop    edx
  40e971:	and    al,0x7e
  40e973:	xchg   edi,eax
  40e974:	inc    esp
  40e975:	and    al,0xa2
  40e977:	loope  0x40e9d8
  40e979:	call   FWORD PTR ds:0xbab8acca
  40e97f:	repz push esp
  40e981:	(bad)  
  40e982:	push   ecx
  40e983:	add    bh,BYTE PTR [ecx+0x11]
  40e986:	xor    ah,BYTE PTR [edx]
  40e988:	push   esp
  40e989:	sub    eax,0xe0dd9e99
  40e98e:	jg     0x40e9fb
  40e990:	jle    0x40e9d7
  40e992:	dec    eax
  40e993:	dec    ebx
  40e994:	ja     0x40e9a0
  40e996:	sar    ch,1
  40e998:	int    0x6d
  40e99a:	lods   al,BYTE PTR ds:[esi]
  40e99b:	in     eax,dx
  40e99c:	push   cs
  40e99d:	loopne 0x40e9e8
  40e99f:	xor    eax,0x20430012
  40e9a4:	aas    
  40e9a5:	sbb    BYTE PTR [ecx-0x12],cl
  40e9a8:	jo     0x40ea04
  40e9aa:	inc    ecx
  40e9ab:	mov    ebp,DWORD PTR [ebx+ebx*8+0x49]
  40e9af:	mov    al,ds:0x3ef7328b
  40e9b4:	pop    eax
  40e9b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9b6:	popf   
  40e9b7:	arpl   WORD PTR [esi+edi*1],sp
  40e9ba:	in     al,dx
  40e9bb:	rep outs dx,BYTE PTR ds:[esi]
  40e9bd:	inc    edi
  40e9be:	push   0x6f
  40e9c0:	inc    edi
  40e9c1:	xor    DWORD PTR [ecx+eiz*2-0x65],edx
  40e9c5:	int    0xd9
  40e9c7:	adc    eax,0x7790a57d
  40e9cc:	retf   
  40e9cd:	addr16 jae 0x40ea05
  40e9d0:	sub    eax,0x82f0455d
  40e9d5:	stos   DWORD PTR es:[edi],eax
  40e9d6:	mov    ah,0x93
  40e9d8:	aam    0xa7
  40e9da:	sar    DWORD PTR [esi+0x338724ed],cl
  40e9e0:	mov    ebx,esp
  40e9e2:	adc    ebp,edx
  40e9e4:	in     eax,0x2e
  40e9e6:	jnp    0x40e999
  40e9e8:	push   edx
  40e9e9:	mov    cl,0x8c
  40e9eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9ec:	cmp    eax,0xd250b191
  40e9f1:	adc    edi,DWORD PTR [edi+0x7b]
  40e9f4:	inc    ebp
  40e9f5:	test   al,0xc2
  40e9f7:	(bad)  
  40e9f8:	adc    ch,0x9c
  40e9fb:	repz mov gs,WORD PTR [esi+0x4175e7d9]
  40ea02:	nop
  40ea03:	repz je 0x40e9e6
  40ea06:	jno    0x40ea1a
  40ea08:	stc    
  40ea09:	dec    esi
  40ea0a:	jne    0x40e9c7
  40ea0c:	dec    edx
  40ea0d:	pop    eax
  40ea0e:	adc    eax,0xfd4962c7
  40ea13:	add    cl,ch
  40ea15:	and    BYTE PTR [eax-0x33632506],0xe0
  40ea1c:	les    edx,FWORD PTR [ecx+0x5b]
  40ea1f:	push   es
  40ea20:	pop    ds
  40ea21:	loopne 0x40ea88
  40ea23:	and    ebp,eax
  40ea25:	mov    ds:0x64f70625,al
  40ea2a:	das    
  40ea2b:	or     al,0xa1
  40ea2d:	add    al,BYTE PTR [ecx]
  40ea2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea30:	sbb    ebx,DWORD PTR [esi-0x7b]
  40ea33:	mov    ds,WORD PTR [ebp+0x20306d06]
  40ea39:	sbb    eax,0x3b76cdbc
  40ea3e:	shl    DWORD PTR [ebx+0x7df5afde],cl
  40ea44:	test   BYTE PTR [edx-0xe],0x13
  40ea48:	aaa    
  40ea49:	push   es
  40ea4a:	dec    edx
  40ea4b:	loope  0x40ea00
  40ea4d:	popf   
  40ea4e:	sub    bh,cl
  40ea50:	jae    0x40ea68
  40ea52:	sti    
  40ea53:	out    0x84,al
  40ea55:	popa   
  40ea56:	arpl   WORD PTR [ecx+0x5e142a43],di
  40ea5c:	sub    esp,DWORD PTR [edx+0x23507636]
  40ea62:	xor    eax,ebx
  40ea64:	lods   al,BYTE PTR ds:[esi]
  40ea65:	ins    BYTE PTR es:[edi],dx
  40ea66:	fldl2t 
  40ea68:	xchg   ecx,eax
  40ea69:	stos   BYTE PTR es:[edi],al
  40ea6a:	out    0x28,eax
  40ea6c:	shl    ebp,1
  40ea6e:	dec    ebx
  40ea6f:	in     eax,0x35
  40ea71:	sti    
  40ea72:	inc    ebp
  40ea73:	aas    
  40ea74:	xor    al,0x8a
  40ea76:	ins    DWORD PTR es:[edi],dx
  40ea77:	in     al,0x86
  40ea79:	mov    al,ds:0xd502c0b4
  40ea7e:	xor    eax,0x7d8a0e82
  40ea83:	xor    ebp,DWORD PTR [edx+0x4f]
  40ea86:	dec    edi
  40ea87:	mov    eax,ds:0x10728b51
  40ea8c:	popf   
  40ea8d:	lods   al,BYTE PTR ds:[esi]
  40ea8e:	pop    ecx
  40ea8f:	shl    DWORD PTR [ebx+0x13d32019],1
  40ea95:	cmp    DWORD PTR [ebx],eax
  40ea97:	loopne 0x40ea73
  40ea99:	jb     0x40ea7a
  40ea9b:	mov    eax,0x8ae099d
  40eaa0:	cmp    ebp,DWORD PTR [eax]
  40eaa2:	push   eax
  40eaa3:	mov    esp,0xf78aefc6
  40eaa8:	sbb    ebx,DWORD PTR [edx]
  40eaaa:	fs inc eax
  40eaac:	dec    ebx
  40eaad:	mov    eax,0x990e6b68
  40eab2:	clc    
  40eab3:	(bad)  
  40eab5:	fisttp WORD PTR [ebx+esi*4-0x31]
  40eab9:	add    DWORD PTR [ebx-0x33],ecx
  40eabc:	xor    DWORD PTR [edi],ecx
  40eabe:	cdq    
  40eabf:	mov    ah,0x24
  40eac1:	push   ecx
  40eac2:	mov    cs,WORD PTR [ebx+0x78]
  40eac5:	mov    WORD PTR [eax+0x2f],ds
  40eac8:	jb     0x40ea73
  40eaca:	cmp    eax,0x86af134c
  40eacf:	and    ecx,edi
  40ead1:	mov    DWORD PTR [esi+0x74],ebp
  40ead4:	or     al,0x47
  40ead6:	pop    ebx
  40ead7:	cli    
  40ead8:	imul   edi,DWORD PTR [edi],0xffffffeb
  40eadb:	outs   dx,BYTE PTR ds:[esi]
  40eadc:	addr16 (bad) 
  40eade:	pop    esp
  40eadf:	ins    BYTE PTR es:[edi],dx
  40eae0:	dec    edx
  40eae1:	push   0x75f43123
  40eae6:	sub    eax,0xf8a1697d
  40eaeb:	add    al,0x91
  40eaed:	push   ss
  40eaee:	sub    dh,BYTE PTR cs:[eax-0x32597e04]
  40eaf5:	dec    esi
  40eaf6:	mov    BYTE PTR [eax+0x5a260b27],ch
  40eafc:	xchg   ecx,eax
  40eafd:	adc    cl,BYTE PTR [eax+0x1b]
  40eb00:	leavew 
  40eb02:	push   edx
  40eb03:	out    dx,eax
  40eb04:	pop    edi
  40eb05:	sub    ah,al
  40eb07:	cdq    
  40eb08:	int3   
  40eb09:	cmp    ebp,ecx
  40eb0b:	mov    bh,0x70
  40eb0d:	mov    dh,0x8a
  40eb0f:	clc    
  40eb10:	addr16 cdq 
  40eb12:	pop    ebx
  40eb13:	int3   
  40eb14:	scas   al,BYTE PTR es:[edi]
  40eb15:	imul   esi,DWORD PTR [edi*8-0x1c1b5de0],0x41
  40eb1d:	sbb    bl,BYTE PTR [ecx+0x13]
  40eb20:	fmul   st,st(4)
  40eb22:	jecxz  0x40eb27
  40eb24:	push   eax
  40eb25:	(bad)  
  40eb26:	into   
  40eb27:	cdq    
  40eb28:	retf   
  40eb29:	jl     0x40eb87
  40eb2b:	jae    0x40eafd
  40eb2d:	jp     0x40eafe
  40eb2f:	push   0xffffff9c
  40eb31:	js     0x40eb09
  40eb33:	push   es
  40eb34:	cmp    ebx,DWORD PTR [eax]
  40eb36:	in     al,0x31
  40eb38:	call   0x1421:0x4e43c857
  40eb3f:	sar    BYTE PTR [esi+0x4b83c302],0x74
  40eb46:	xor    DWORD PTR [esi+0x15],ecx
  40eb49:	std    
  40eb4a:	out    dx,eax
  40eb4b:	push   esi
  40eb4c:	cmp    al,0x7b
  40eb4e:	(bad)  
  40eb4f:	mov    ah,0x59
  40eb51:	out    dx,al
  40eb52:	inc    ecx
  40eb53:	mov    ds:0xacbf0385,al
  40eb58:	shl    DWORD PTR [eax+0x1a],0x17
  40eb5c:	js     0x40eb60
  40eb5e:	outs   dx,BYTE PTR ds:[esi]
  40eb5f:	leave  
  40eb60:	xchg   edx,eax
  40eb61:	aas    
  40eb62:	mov    ch,0x7a
  40eb64:	jle    0x40ebe1
  40eb66:	xchg   edx,eax
  40eb67:	push   cs
  40eb68:	cmp    eax,0x1cb4ef27
  40eb6d:	(bad)  
  40eb6f:	xchg   DWORD PTR [esi-0x16],esi
  40eb72:	fiadd  DWORD PTR [ebx]
  40eb74:	mov    edx,0xa248dbeb
  40eb79:	test   DWORD PTR [edi-0x70d8b6fb],eax
  40eb7f:	cmp    cl,BYTE PTR [ebx-0x5300f317]
  40eb85:	pop    edx
  40eb86:	jp     0x40eb57
  40eb88:	cwde   
  40eb89:	lods   eax,DWORD PTR ds:[esi]
  40eb8a:	call   0x9045:0x18bbe017
  40eb91:	adc    ecx,DWORD PTR [edi+0x5fa6f22c]
  40eb97:	sti    
  40eb98:	loope  0x40ebbd
  40eb9a:	xor    al,0xf3
  40eb9c:	pop    edi
  40eb9d:	push   eax
  40eb9e:	scas   eax,DWORD PTR es:[edi]
  40eb9f:	push   es
  40eba0:	(bad)  
  40eba1:	mov    ds:0x9d19fd65,al
  40eba6:	jae    0x40ebf2
  40eba8:	xchg   DWORD PTR ds:0xf8a41867,eax
  40ebae:	outs   dx,BYTE PTR ds:[esi]
  40ebaf:	mov    ecx,0x5ea6c4dc
  40ebb4:	xchg   BYTE PTR [ebp+0x33],cl
  40ebb7:	jecxz  0x40eb43
  40ebb9:	ins    BYTE PTR es:[edi],dx
  40ebba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebbb:	xchg   esi,eax
  40ebbc:	jbe    0x40ec28
  40ebbe:	fs dec ecx
  40ebc0:	xchg   bh,dl
  40ebc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebc3:	pop    esp
  40ebc4:	js     0x40eb9d
  40ebc6:	es dec ebp
  40ebc8:	mov    ebp,0x1684a2d9
  40ebcd:	jecxz  0x40ec0c
  40ebcf:	mov    dh,0xc8
  40ebd1:	sbb    DWORD PTR fs:0x36e71d51,edx
  40ebd8:	fst    DWORD PTR ds:0x1d01307f
  40ebde:	jb     0x40ec57
  40ebe0:	(bad)  
  40ebe1:	sar    BYTE PTR [ecx+0x2f0cddbd],1
  40ebe7:	mov    eax,0x7c94458d
  40ebec:	(bad)  
  40ebed:	adc    ecx,DWORD PTR [ebx+ecx*1-0xa]
  40ebf1:	sbb    al,0xfd
  40ebf3:	into   
  40ebf4:	mov    ebp,0x9884c03c
  40ebf9:	mov    al,ds:0x663bbe87
  40ebfe:	inc    ebp
  40ebff:	xor    dh,cl
  40ec01:	and    cl,BYTE PTR [ecx+0x66840416]
  40ec07:	inc    ebx
  40ec08:	jnp    0x40ec67
  40ec0a:	cwde   
  40ec0b:	pop    eax
  40ec0c:	test   DWORD PTR [ecx],ecx
  40ec0e:	xchg   edx,eax
  40ec0f:	dec    ebx
  40ec10:	(bad)  
  40ec11:	mov    eax,0x12f5f660
  40ec16:	push   edx
  40ec17:	sub    BYTE PTR [edi+ecx*2-0x65],bh
  40ec1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec1c:	in     eax,dx
  40ec1d:	jns    0x40ebed
  40ec1f:	shl    ecx,0x64
  40ec22:	outs   dx,DWORD PTR ds:[esi]
  40ec23:	loop   0x40ec52
  40ec25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec26:	add    dh,BYTE PTR [eax]
  40ec28:	ror    BYTE PTR [edx],cl
  40ec2a:	stos   BYTE PTR es:[edi],al
  40ec2b:	aam    0xbb
  40ec2d:	add    DWORD PTR [edi+eiz*2],edx
  40ec30:	jg     0x40ec50
  40ec32:	add    al,0x1f
  40ec34:	dec    ebx
  40ec35:	sbb    BYTE PTR [ebx-0x6b],al
  40ec38:	jg     0x40ebf1
  40ec3a:	call   0xb50f:0x5b03f0de
  40ec41:	pop    ebp
  40ec42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec43:	test   al,0x89
  40ec45:	test   BYTE PTR [edx],dh
  40ec47:	sar    BYTE PTR [ebp-0x3b],1
  40ec4a:	mov    esi,0xbbf0c8fc
  40ec4f:	xor    al,BYTE PTR [ebx+0x23]
  40ec52:	bound  ebp,QWORD PTR ds:0x19c528bc
  40ec58:	xor    BYTE PTR [ecx],ah
  40ec5a:	and    DWORD PTR [ebp-0x23],ebx
  40ec5d:	sbb    eax,0x1f97c8a6
  40ec62:	and    eax,0xcded2919
  40ec67:	(bad)  
  40ec68:	in     al,0xe
  40ec6a:	out    dx,eax
  40ec6b:	sub    eax,0xc0c7c02b
  40ec70:	inc    eax
  40ec71:	jge    0x40ec64
  40ec73:	jp     0x40ec09
  40ec75:	or     DWORD PTR [esi+0x67],ebx
  40ec78:	and    edx,DWORD PTR [edx-0x3e863e98]
  40ec7e:	dec    ecx
  40ec7f:	push   edx
  40ec80:	gs or  dl,ch
  40ec83:	add    DWORD PTR [edx+eiz*4],0xffffffaf
  40ec87:	fistp  WORD PTR [ebx+0x79]
  40ec8a:	push   ebp
  40ec8b:	jbe    0x40ec3c
  40ec8d:	sbb    bh,BYTE PTR [edx-0x5e]
  40ec90:	add    BYTE PTR [edx],0x4a
  40ec93:	out    0x80,al
  40ec95:	gs stos BYTE PTR es:[edi],al
  40ec97:	xchg   esp,eax
  40ec98:	arpl   WORD PTR ss:[ebp-0x12],cx
  40ec9c:	push   0x33e2b950
  40eca1:	cmp    al,0xb8
  40eca3:	mov    BYTE PTR [edi+0x5c7c9c5f],cl
  40eca9:	push   esi
  40ecaa:	pop    esp
  40ecab:	and    eax,0x49b06a53
  40ecb0:	popa   
  40ecb1:	and    al,0xf2
  40ecb3:	call   0x82a871cc
  40ecb8:	ins    DWORD PTR es:[edi],dx
  40ecb9:	push   esp
  40ecba:	sub    eax,DWORD PTR [esi+ecx*2+0x5e828680]
  40ecc1:	hlt    
  40ecc2:	idiv   BYTE PTR [esi+0x58]
  40ecc5:	ins    BYTE PTR es:[edi],dx
  40ecc6:	adc    al,0xd1
  40ecc8:	aas    
  40ecc9:	jo     0x40ec60
  40eccb:	add    al,0x3b
  40eccd:	mov    dh,bh
  40eccf:	mov    ebp,0x554afe29
  40ecd4:	ja     0x40ec9f
  40ecd6:	femms  
  40ecd8:	aas    
  40ecd9:	adc    eax,esi
  40ecdb:	fdivr  DWORD PTR [edi+eax*8+0xcf51ba6]
  40ece2:	mov    BYTE PTR [edx+0x67],ah
  40ece5:	(bad)  
  40ece6:	add    al,0x13
  40ece8:	hlt    
  40ece9:	add    BYTE PTR [edx-0x5b],dh
  40ecec:	or     DWORD PTR [eax],edx
  40ecee:	idiv   BYTE PTR [eax+0x536417e]
  40ecf4:	loope  0x40ed19
  40ecf6:	adc    eax,0xb7b5b4b4
  40ecfb:	in     al,0x2a
  40ecfd:	jae    0x40ed11
  40ecff:	test   dh,ch
  40ed01:	in     al,0xa4
  40ed03:	add    eax,0xf5168943
  40ed08:	inc    eax
  40ed09:	test   DWORD PTR [ebp+0x7c9e5d89],ebp
  40ed0f:	clc    
  40ed10:	fcmovnbe st,st(3)
  40ed12:	cmc    
  40ed13:	add    BYTE PTR [edx],0x76
  40ed16:	test   eax,esi
  40ed18:	add    DWORD PTR [edx-0x71205eac],ebp
  40ed1e:	push   cs
  40ed1f:	and    bl,BYTE PTR [edi+ecx*2-0x4839992c]
  40ed26:	std    
  40ed27:	in     al,0x24
  40ed29:	lea    eax,[edx]
  40ed2b:	and    ah,BYTE PTR [eax+esi*4-0x4]
  40ed2f:	inc    ebp
  40ed30:	xchg   esi,eax
  40ed31:	cmp    al,0xe2
  40ed33:	iret   
  40ed34:	mov    cs,WORD PTR [edi+edi*8+0x3]
  40ed38:	mov    ebp,0x7d95d849
  40ed3d:	imul   esp,DWORD PTR [ecx+ebx*2-0x2cc4035a],0xe059cbff
  40ed48:	mov    ds:0xb0effcd4,al
  40ed4d:	inc    ecx
  40ed4e:	jo     0x40ed48
  40ed50:	xchg   esp,eax
  40ed51:	call   0x3368b4c9
  40ed56:	inc    esp
  40ed57:	stos   DWORD PTR es:[edi],eax
  40ed58:	call   0x52aa3614
  40ed5d:	push   ebp
  40ed5e:	int    0x51
  40ed60:	or     bl,BYTE PTR [esi-0x65cb4804]
  40ed66:	sti    
  40ed67:	xchg   edx,eax
  40ed68:	repz cmp edx,0xffffffc4
  40ed6c:	outs   dx,BYTE PTR ds:[esi]
  40ed6d:	enter  0x6ed7,0x12
  40ed71:	sbb    DWORD PTR [edx],0x217d2f64
  40ed77:	rol    ch,0x84
  40ed7a:	lahf   
  40ed7b:	fisub  WORD PTR [eax]
  40ed7d:	cli    
  40ed7e:	mov    bh,0xa
  40ed80:	shl    dh,cl
  40ed82:	sbb    eax,0x81ddbfc9
  40ed87:	out    dx,al
  40ed88:	in     al,dx
  40ed89:	js     0x40edfd
  40ed8b:	mov    ah,0xeb
  40ed8d:	sub    BYTE PTR [edi+0x5e0e48ef],bl
  40ed93:	(bad)  
  40ed94:	dec    esi
  40ed95:	cld    
  40ed96:	outs   dx,BYTE PTR ds:[esi]
  40ed97:	daa    
  40ed98:	sahf   
  40ed99:	mov    dl,0xe7
  40ed9b:	dec    esi
  40ed9c:	mov    ecx,0xdb7731ca
  40eda1:	sbb    al,cl
  40eda3:	sub    BYTE PTR [ebp+0x54],dh
  40eda6:	mov    ch,0xf0
  40eda8:	cli    
  40eda9:	hlt    
  40edaa:	pop    ds
  40edab:	cs or  al,0x33
  40edae:	loop   0x40ee25
  40edb0:	lock pop ds
  40edb2:	pusha  
  40edb3:	aad    0xe4
  40edb5:	stc    
  40edb6:	lods   eax,DWORD PTR ds:[esi]
  40edb7:	cli    
  40edb8:	das    
  40edb9:	cmp    al,0x15
  40edbb:	sub    DWORD PTR [eax],edx
  40edbd:	mov    edx,0xc0b5def0
  40edc2:	ss add dh,0x70
  40edc6:	lock cmc 
  40edc8:	cmp    al,0xa1
  40edca:	retf   0x2ba0
  40edcd:	adc    DWORD PTR [ebx],eax
  40edcf:	add    esp,DWORD PTR [edx-0x6aaecdcd]
  40edd5:	stos   DWORD PTR es:[edi],eax
  40edd6:	mov    al,ds:0x2fa6e9b9
  40eddb:	in     al,dx
  40eddc:	push   ss
  40eddd:	inc    eax
  40edde:	not    BYTE PTR [ebp-0x749370e8]
  40ede4:	xor    al,0x53
  40ede6:	xor    BYTE PTR [esi+ecx*4],cl
  40ede9:	arpl   WORD PTR [edi],ax
  40edeb:	pop    esi
  40edec:	xor    BYTE PTR [edi],bl
  40edee:	stc    
  40edef:	lods   eax,DWORD PTR ds:[esi]
  40edf0:	inc    esi
  40edf1:	adc    dh,BYTE PTR [ecx]
  40edf3:	pop    ds
  40edf4:	call   0x61f0:0x865b4bb2
  40edfb:	push   eax
  40edfc:	ror    DWORD PTR [esi+0x8],cl
  40edff:	xchg   ecx,eax
  40ee00:	pop    esp
  40ee01:	xchg   DWORD PTR [edi+0x2aff2bf4],ecx
  40ee07:	xor    bh,cl
  40ee09:	mov    edx,DWORD PTR [esi-0x34]
  40ee0c:	idiv   BYTE PTR [esi+edx*4+0x5240f76c]
  40ee13:	cld    
  40ee14:	mov    ebp,0x57cbf3f7
  40ee19:	and    esi,esp
  40ee1b:	inc    esp
  40ee1c:	retf   0x1528
  40ee1f:	imul   eax,DWORD PTR [edi-0x17],0xe3018f8b
  40ee26:	shr    esi,0x18
  40ee29:	test   al,0x17
  40ee2b:	cmp    BYTE PTR [ebx],dh
  40ee2d:	jle    0x40ee9c
  40ee2f:	bound  ebp,QWORD PTR [ebx]
  40ee31:	lods   al,BYTE PTR ds:[esi]
  40ee32:	retf   
  40ee33:	or     BYTE PTR [edi+0x3e],dh
  40ee36:	add    eax,0x3ac406b0
  40ee3b:	adc    BYTE PTR ds:0x7c01d1f7,0xac
  40ee42:	test   esi,esp
  40ee44:	addr16 aam 0x96
  40ee47:	mov    ds,WORD PTR [edi]
  40ee49:	clc    
  40ee4a:	les    edx,FWORD PTR [ebp+edi*8+0x48be02db]
  40ee51:	aas    
  40ee52:	fstp   QWORD PTR [ecx+0x48]
  40ee55:	pop    ss
  40ee56:	mov    ch,0xf5
  40ee58:	mov    esp,0x4ebe7f66
  40ee5d:	js     0x40ee4b
  40ee5f:	sub    al,0xfe
  40ee61:	push   cs
  40ee62:	jecxz  0x40ee6d
  40ee64:	and    DWORD PTR [eax],ecx
  40ee66:	xor    al,0xa7
  40ee68:	cmp    dh,BYTE PTR [ebp+0x1a69c87a]
  40ee6e:	cli    
  40ee6f:	test   esi,esi
  40ee71:	pop    esi
  40ee72:	inc    sp
  40ee74:	leave  
  40ee75:	or     eax,0x45a962a7
  40ee7a:	xchg   esp,eax
  40ee7b:	jno    0x40ee6a
  40ee7d:	ja     0x40ee1d
  40ee7f:	sub    DWORD PTR [edi],ebx
  40ee81:	jbe    0x40ee3d
  40ee83:	push   0x2ddef43e
  40ee88:	sub    BYTE PTR [edi],0x43
  40ee8b:	sub    al,0x52
  40ee8d:	dec    eax
  40ee8e:	and    BYTE PTR [ebx+eax*1+0x54],0xce
  40ee93:	pop    ebp
  40ee94:	xchg   ebp,eax
  40ee95:	dec    eax
  40ee96:	popf   
  40ee97:	mov    ds:0xcf958039,eax
  40ee9c:	add    eax,0x3d316ed1
  40eea1:	(bad)  
  40eea2:	rol    ebx,1
  40eea4:	popf   
  40eea5:	and    BYTE PTR [ebx],bl
  40eea7:	pop    ss
  40eea8:	jne    0x40ef0a
  40eeaa:	popa   
  40eeab:	inc    esi
  40eeac:	loopne 0x40eeb0
  40eeae:	mov    eax,?
  40eeb0:	inc    edx
  40eeb1:	mov    al,0x44
  40eeb3:	fs pop ebp
  40eeb5:	cdq    
  40eeb6:	icebp  
  40eeb7:	into   
  40eeb8:	clc    
  40eeb9:	shr    eax,1
  40eebb:	mov    ah,0xfc
  40eebd:	fwait
  40eebe:	xor    DWORD PTR [eax],edi
  40eec0:	pop    es
  40eec1:	adc    ebp,edx
  40eec3:	or     BYTE PTR [ecx+ebx*4+0x3f],dl
  40eec7:	cdq    
  40eec8:	mov    dl,0xb2
  40eeca:	nop
  40eecb:	xchg   esi,eax
  40eecc:	mov    eax,ds:0xe67a9158
  40eed1:	push   edx
  40eed2:	or     ecx,edx
  40eed4:	xchg   edx,eax
  40eed5:	ins    BYTE PTR es:[edi],dx
  40eed6:	(bad)  
  40eed7:	sti    
  40eed8:	repz scas al,BYTE PTR es:[edi]
  40eeda:	sub    edx,DWORD PTR [ecx+0xa556ba5]
  40eee0:	add    dl,ah
  40eee2:	retf   0x3585
  40eee5:	pop    es
  40eee6:	sub    esi,ecx
  40eee8:	shr    DWORD PTR ds:0x18736b55,0x6b
  40eeef:	iret   
  40eef0:	dec    edi
  40eef1:	arpl   sp,si
  40eef3:	jo     0x40ef70
  40eef5:	das    
  40eef6:	cmp    ebp,ebx
  40eef8:	daa    
  40eef9:	mov    edi,0xe13fc517
  40eefe:	aas    
  40eeff:	test   BYTE PTR [ebp+0x60],bl
  40ef02:	(bad)  ss:[edi+0x52]
  40ef06:	pop    eax
  40ef07:	popa   
  40ef08:	or     ch,BYTE PTR [esi+0x779463]
  40ef0e:	imul   edx,DWORD PTR [esi-0x11],0x96b63b72
  40ef15:	jns    0x40ef3b
  40ef17:	test   eax,0xe5443725
  40ef1c:	xchg   ebx,eax
  40ef1d:	out    dx,eax
  40ef1e:	adc    ch,ch
  40ef20:	and    DWORD PTR [ebx-0x30c7ddf7],edi
  40ef26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef27:	push   esi
  40ef28:	xchg   ebp,eax
  40ef29:	cmc    
  40ef2a:	dec    edx
  40ef2b:	adc    DWORD PTR [eax+0x4866bf4a],ecx
  40ef31:	ds out dx,al
  40ef33:	mov    ch,0x48
  40ef35:	ror    ch,0xb3
  40ef38:	dec    ebp
  40ef39:	add    eax,0x46a7da64
  40ef3e:	jb     0x40eecf
  40ef40:	push   ss
  40ef41:	pop    ss
  40ef42:	mov    esp,0x767eaef3
  40ef47:	and    edi,esi
  40ef49:	sar    BYTE PTR [edi+eax*8+0x52c20be3],1
  40ef50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef51:	mov    al,ds:0x7d2a46db
  40ef56:	and    DWORD PTR [ebp+0xf],esi
  40ef59:	sub    cl,BYTE PTR [eax]
  40ef5b:	mov    ds:0x38e64da1,eax
  40ef60:	in     eax,dx
  40ef61:	scas   eax,DWORD PTR es:[edi]
  40ef62:	xchg   DWORD PTR [ebx],ebx
  40ef64:	adc    ebx,esi
  40ef66:	pop    ebx
  40ef67:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40ef69:	ret    
  40ef6a:	mov    esi,0xdff2792a
  40ef6f:	test   esi,esi
  40ef71:	pushf  
  40ef72:	mov    eax,ds:0xfb416f20
  40ef77:	push   ebx
  40ef78:	sub    ah,BYTE PTR [edx+0x52716f04]
  40ef7e:	stos   DWORD PTR es:[edi],eax
  40ef7f:	sub    edx,DWORD PTR ds:0x3e0eab70
  40ef85:	cmc    
  40ef86:	not    BYTE PTR [ebp-0x3e766f92]
  40ef8c:	mov    eax,0x66c1b412
  40ef91:	js     0x40efa6
  40ef93:	gs xchg esp,eax
  40ef95:	sub    ecx,edi
  40ef97:	inc    BYTE PTR [edi+0x7e63749b]
  40ef9d:	fimul  DWORD PTR [ecx]
  40ef9f:	punpckhdq mm3,QWORD PTR [esi-0x6457caef]
  40efa6:	cmp    DWORD PTR [ebx+0x3d],eax
  40efa9:	sub    ecx,esp
  40efab:	and    DWORD PTR [ebx-0x3c],ecx
  40efae:	ror    DWORD PTR [eax],0x1d
  40efb1:	test   eax,0xb4cb21c0
  40efb6:	mov    DWORD PTR [edi+0x6e444931],ecx
  40efbc:	imul   DWORD PTR [edi-0x65]
  40efbf:	or     edi,DWORD PTR [ebx]
  40efc1:	ds jns 0x40ef74
  40efc4:	pop    ds
  40efc5:	jmp    0x7219:0x11e893b3
  40efcc:	inc    edi
  40efcd:	push   ecx
  40efce:	jbe    0x40ef9d
  40efd0:	sub    BYTE PTR [eax+0x6a],ah
  40efd3:	jg     0x40ef58
  40efd5:	cmc    
  40efd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efd7:	cmp    al,0x61
  40efd9:	cmp    BYTE PTR [edx],ah
  40efdb:	loopne 0x40efbc
  40efdd:	out    dx,eax
  40efde:	jle    0x40efe2
  40efe0:	pop    es
  40efe1:	pop    es
  40efe2:	test   DWORD PTR [eax],edi
  40efe4:	adc    DWORD PTR [ecx+eiz*1-0x70],eax
  40efe8:	ffreep st(2)
  40efea:	dec    edi
  40efeb:	adc    al,0x8c
  40efed:	and    dl,BYTE PTR [ecx+0x3e]
  40eff0:	pushf  
  40eff1:	jbe    0x40efd2
  40eff3:	mov    ebp,ds
  40eff5:	mov    cl,0xc0
  40eff7:	lock add eax,0x5445c975
  40effd:	mov    eax,0xd2d9e101
  40f002:	shr    BYTE PTR [esi+0x536202b8],cl
  40f008:	aad    0x31
  40f00a:	cmp    ebp,DWORD PTR [esi]
  40f00c:	adc    BYTE PTR [ebp-0xe],bl
  40f00f:	addr16 icebp 
  40f011:	clc    
  40f012:	aas    
  40f013:	pop    ebx
  40f014:	fcomp  st(4)
  40f016:	mov    bl,0x34
  40f018:	call   0xa953:0xe7852862
  40f01f:	fist   WORD PTR [esi]
  40f021:	inc    edi
  40f022:	inc    BYTE PTR ds:0x179c4b9d
  40f028:	xor    dl,ah
  40f02a:	in     al,dx
  40f02b:	(bad)  
  40f02d:	test   al,0x28
  40f02f:	cmp    dh,dl
  40f031:	sar    DWORD PTR [ebp+0x66db5ae2],0xc6
  40f038:	add    eax,DWORD PTR [ecx+edi*4]
  40f03b:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40f03d:	je     0x40efd8
  40f03f:	scas   eax,DWORD PTR es:[edi]
  40f040:	jg     0x40f0a7
  40f042:	cmp    ebx,edi
  40f044:	retf   0x58a1
  40f047:	jae    0x40f04c
  40f049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f04a:	outs   dx,DWORD PTR ds:[esi]
  40f04b:	or     DWORD PTR [edx],ebp
  40f04d:	fistp  DWORD PTR [esp+esi*2+0x36]
  40f051:	daa    
  40f052:	mov    esp,0x4bba47c7
  40f057:	xchg   ebp,eax
  40f058:	cmp    esi,ecx
  40f05a:	push   ecx
  40f05b:	out    0xab,eax
  40f05d:	shl    DWORD PTR ds:0x91c4ff7,cl
  40f063:	aas    
  40f064:	imul   eax,ebp,0x69
  40f067:	ret    
  40f068:	jbe    0x40f0c5
  40f06a:	inc    ebp
  40f06b:	jae    0x40f0d3
  40f06d:	retf   
  40f06e:	mov    WORD PTR [edi],es
  40f070:	or     al,0x61
  40f072:	les    ebx,FWORD PTR [esi]
  40f074:	pop    ecx
  40f075:	cli    
  40f076:	inc    ebx
  40f077:	aad    0x72
  40f079:	inc    edx
  40f07a:	stos   DWORD PTR es:[edi],eax
  40f07b:	std    
  40f07c:	mov    ds:0x376246cf,al
  40f081:	repnz aad 0xea
  40f084:	dec    edi
  40f085:	pop    esp
  40f086:	shl    DWORD PTR [esp+eiz*4+0x17],1
  40f08a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f08b:	sub    ebx,eax
  40f08d:	popf   
  40f08e:	int3   
  40f08f:	and    DWORD PTR [ecx+0x5],0x9e8a8f6
  40f096:	pop    ecx
  40f097:	mov    dh,0xe4
  40f099:	xor    DWORD PTR [ebx-0x6b],0xbac90eee
  40f0a0:	(bad)  
  40f0a1:	push   ebx
  40f0a2:	and    ch,dl
  40f0a4:	arpl   WORD PTR [esi-0x632ee3f2],cx
  40f0aa:	jbe    0x40f0b7
  40f0ac:	stos   DWORD PTR es:[edi],eax
  40f0ad:	fist   DWORD PTR [eax+0x3a491034]
  40f0b3:	enter  0xdc9b,0x30
  40f0b7:	inc    edi
  40f0b8:	and    bh,ah
  40f0ba:	nop/reserved BYTE PTR [edi]
  40f0bd:	inc    ebp
  40f0be:	or     edi,DWORD PTR ds:0x91b236e3
  40f0c4:	pop    ebx
  40f0c5:	call   0x46c5963e
  40f0ca:	mov    ebp,0xfa79006a
  40f0cf:	bound  ebx,QWORD PTR [edx-0x34d94aef]
  40f0d5:	ficomp DWORD PTR [eax+0x4b8790d]
  40f0db:	pop    ebx
  40f0dc:	fidiv  DWORD PTR [esi-0x5d2827a6]
  40f0e2:	nop
  40f0e3:	ret    
  40f0e4:	and    BYTE PTR [ecx-0x5b782d66],0xa1
  40f0eb:	jge    0x40f0b2
  40f0ed:	cli    
  40f0ee:	pop    ebp
  40f0ef:	sub    BYTE PTR [ebp-0xa71a14b],ah
  40f0f5:	enter  0xb361,0x32
  40f0f9:	icebp  
  40f0fa:	pop    esp
  40f0fb:	dec    esp
  40f0fc:	lahf   
  40f0fd:	xchg   esp,edi
  40f0ff:	add    BYTE PTR es:[ebx],0x77
  40f103:	mov    ah,0x62
  40f105:	scas   al,BYTE PTR es:[edi]
  40f106:	fcomi  st,st(6)
  40f109:	or     eax,0x170f026f
  40f10e:	(bad)  
  40f10f:	sbb    al,BYTE PTR [esi]
  40f111:	frstor [edx-0x3]
  40f114:	push   ss
  40f115:	dec    eax
  40f116:	adc    al,0xa6
  40f118:	dec    bp
  40f11a:	cdq    
  40f11b:	dec    ecx
  40f11c:	sub    ebp,DWORD PTR [ebx+0x48a0044f]
  40f122:	cmp    DWORD PTR [ebx+ecx*8+0x40],0xffffffdf
  40f127:	sbb    dh,BYTE PTR [esi-0x395659b6]
  40f12d:	repz jns 0x40f19f
  40f130:	lods   al,BYTE PTR ds:[esi]
  40f131:	ss enter 0x3f4,0xf2
  40f136:	adc    dl,BYTE PTR [esi]
  40f138:	sub    esi,DWORD PTR [edi+ebp*2-0x21]
  40f13c:	push   ebx
  40f13d:	and    BYTE PTR [ecx+0x3592dfbf],al
  40f143:	xchg   esi,eax
  40f144:	lock dec ebp
  40f146:	sub    eax,0x96088af1
  40f14b:	mov    al,ds:0x3266b053
  40f150:	call   0xb361:0x2ee5fc1c
  40f157:	iret   
  40f158:	jb     0x40f170
  40f15a:	xchg   DWORD PTR [esi+ebx*8-0x5d02422f],eax
  40f161:	jne    0x40f1d3
  40f163:	fisub  DWORD PTR [ebx+0x706c7257]
  40f169:	push   edi
  40f16a:	cmp    bl,BYTE PTR [esi]
  40f16c:	out    0x35,al
  40f16e:	mov    ?,WORD PTR [eax-0x46]
  40f171:	(bad)  
  40f172:	nop
  40f173:	clc    
  40f174:	jle    0x40f1c0
  40f176:	sbb    dl,bl
  40f178:	sbb    dl,BYTE PTR [ebx-0x6fbeb310]
  40f17e:	clc    
  40f17f:	jns    0x40f13b
  40f181:	xlat   BYTE PTR ds:[ebx]
  40f182:	stc    
  40f183:	mov    BYTE PTR [edx-0x1f5b58d3],dh
  40f189:	mov    dh,0x33
  40f18b:	hlt    
  40f18c:	mov    ebx,0x4878b721
  40f191:	push   ebp
  40f192:	retf   0x729a
  40f195:	cdq    
  40f196:	stos   BYTE PTR es:[edi],al
  40f197:	lods   al,BYTE PTR ds:[esi]
  40f198:	jae    0x40f135
  40f19a:	out    dx,al
  40f19b:	xchg   esp,eax
  40f19c:	mov    edx,0xd38c468
  40f1a1:	mov    eax,ds:0x17eeeb66
  40f1a6:	inc    ebp
  40f1a7:	mov    gs,WORD PTR [ebx]
  40f1a9:	dec    ebp
  40f1aa:	pop    esi
  40f1ab:	icebp  
  40f1ac:	dec    edi
  40f1ad:	sbb    esi,eax
  40f1af:	lock shl DWORD PTR [edi-0x70],cl
  40f1b3:	xor    ebx,esp
  40f1b5:	imul   ecx,DWORD PTR gs:[esi-0x33566cba],0x4c
  40f1bd:	mov    cl,0x2e
  40f1bf:	inc    edi
  40f1c0:	repz push ebx
  40f1c2:	fidiv  WORD PTR [ecx+0x58dbd4e1]
  40f1c8:	mov    WORD PTR [edi-0x46],es
  40f1cb:	and    DWORD PTR [ebp+esi*1+0x78cbc904],edx
  40f1d2:	rol    DWORD PTR [eax+0x65],1
  40f1d5:	mov    cl,0x4b
  40f1d7:	mov    edi,ebp
  40f1d9:	jp     0x40f1ac
  40f1db:	in     al,0x7f
  40f1dd:	aad    0x71
  40f1df:	sub    ah,BYTE PTR [ebp+0x34]
  40f1e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1e3:	jns    0x40f23d
  40f1e5:	add    al,0xe0
  40f1e7:	jl     0x40f1d4
  40f1e9:	or     edx,edi
  40f1eb:	lock push ds
  40f1ed:	mov    ebp,0xb8b135da
  40f1f2:	add    ecx,DWORD PTR [ecx+0x5]
  40f1f5:	lods   eax,DWORD PTR ds:[esi]
  40f1f6:	mov    al,ds:0x94fd5274
  40f1fb:	xor    al,0x25
  40f1fd:	out    dx,eax
  40f1fe:	mov    BYTE PTR [ebx-0x2a],ch
  40f201:	mov    ?,WORD PTR [eax]
  40f203:	pushf  
  40f204:	repnz mov DWORD PTR [eax+0x798d3b3d],0x7f31e842
  40f20f:	pop    ebx
  40f210:	aad    0x4d
  40f212:	imul   esi,DWORD PTR [edi+edi*4+0x540e9b6c],0x814b1e14
  40f21d:	data16 aad 0x67
  40f220:	(bad)  
  40f221:	adc    eax,0x71a1eaff
  40f226:	push   esp
  40f227:	icebp  
  40f228:	ffreep st(4)
  40f22a:	mov    cl,0x59
  40f22c:	jns    0x40f222
  40f22e:	cli    
  40f22f:	jae    0x40f201
  40f231:	sar    BYTE PTR [edi+0x57],cl
  40f234:	stos   BYTE PTR es:[edi],al
  40f235:	jns    0x40f202
  40f237:	ds xchg edi,eax
  40f239:	(bad)  
  40f23d:	int3   
  40f23e:	jmp    0x62b65a30
  40f243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f244:	pop    eax
  40f245:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f246:	out    0xf,eax
  40f248:	xchg   DWORD PTR [ebp+0x13c7b528],esp
  40f24e:	adc    esp,DWORD PTR [edx-0x5f]
  40f251:	ja     0x40f26b
  40f253:	mov    fs,WORD PTR [ecx]
  40f255:	aas    
  40f256:	stos   BYTE PTR es:[edi],al
  40f257:	xchg   esp,eax
  40f258:	(bad)  
  40f259:	adc    eax,0xbf49d0c
  40f25e:	xor    al,BYTE PTR [ebp-0x2201fac5]
  40f264:	imul   esp,DWORD PTR [edx-0xe],0x11
  40f268:	imul   esp,DWORD PTR [ebp+0x1d],0x3ce3fbd1
  40f26f:	fcom   DWORD PTR [esi]
  40f271:	jae    0x40f2ba
  40f273:	xchg   esi,eax
  40f274:	pop    edx
  40f275:	adc    al,0x8a
  40f277:	add    eax,0x79483fdd
  40f27c:	retf   0x22b8
  40f27f:	jmp    0xc98e:0x551ec66e
  40f286:	push   0x19
  40f288:	mov    eax,esi
  40f28a:	mov    ebp,0x9ad87ef0
  40f28f:	dec    ecx
  40f290:	int    0xd
  40f292:	xor    eax,ebx
  40f294:	addr16 enter 0xed34,0x2c
  40f299:	mov    dh,0x63
  40f29b:	cs ss cwde 
  40f29e:	lahf   
  40f29f:	outs   dx,BYTE PTR ds:[esi]
  40f2a0:	retf   
  40f2a1:	cmp    DWORD PTR [ecx+0x34a150f1],0x50976517
  40f2ab:	lea    ebx,[ebx-0x7a]
  40f2ae:	sbb    al,0xdf
  40f2b0:	out    dx,al
  40f2b1:	push   esp
  40f2b2:	jge    0x40f23a
  40f2b4:	leave  
  40f2b5:	cs aas 
  40f2b7:	jbe    0x40f2e9
  40f2b9:	in     eax,0x67
  40f2bb:	sub    al,0xf9
  40f2bd:	pop    eax
  40f2be:	out    dx,al
  40f2bf:	xor    cl,BYTE PTR [eax-0x5714e1bf]
  40f2c5:	ret    
  40f2c6:	clc    
  40f2c7:	leave  
  40f2c8:	out    0xa7,al
  40f2ca:	retf   0xe220
  40f2cd:	cdq    
  40f2ce:	das    
  40f2cf:	mov    cl,BYTE PTR [ecx]
  40f2d1:	aad    0xe1
  40f2d3:	ror    DWORD PTR [ebx+0x64344d93],0x6
  40f2da:	cmc    
  40f2db:	sahf   
  40f2dc:	lds    edx,FWORD PTR [ebp+ebp*1+0x5f]
  40f2e0:	retf   0x6851
  40f2e3:	sbb    esp,DWORD PTR [ecx]
  40f2e5:	push   esp
  40f2e6:	mul    BYTE PTR [ebp+0x650c6e84]
  40f2ec:	sub    edi,DWORD PTR [ebx]
  40f2ee:	jle    0x40f2cc
  40f2f0:	das    
  40f2f1:	dec    ebx
  40f2f2:	loope  0x40f305
  40f2f4:	call   0x1953a192
  40f2f9:	jae    0x40f378
  40f2fb:	pop    ecx
  40f2fc:	repz test al,0x58
  40f2ff:	and    BYTE PTR [ecx],bl
  40f301:	(bad)  
  40f302:	push   ss
  40f303:	pop    ds
  40f304:	cmp    al,0x37
  40f306:	sub    edx,DWORD PTR [esp+eax*1+0x5493ee5f]
  40f30d:	cld    
  40f30e:	loop   0x40f387
  40f310:	ror    DWORD PTR [ebx],cl
  40f312:	jecxz  0x40f307
  40f314:	inc    ebp
  40f315:	paddsw mm7,QWORD PTR [esi]
  40f318:	fild   WORD PTR [ebx+edx*1-0x5a9797e0]
  40f31f:	shl    ah,0xae
  40f322:	test   eax,0xf8828f54
  40f327:	and    DWORD PTR [edx],0x7f
  40f32a:	arpl   si,ax
  40f32c:	outs   dx,BYTE PTR ds:[esi]
  40f32d:	or     al,0x86
  40f32f:	fs and al,0x55
  40f332:	fisubr DWORD PTR [edx+0x60d6887c]
  40f338:	pop    ss
  40f339:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f33a:	out    dx,al
  40f33b:	adc    esi,DWORD PTR [esi+0x48a9e5fe]
  40f341:	das    
  40f342:	test   eax,0xc81e19b4
  40f347:	xor    BYTE PTR [edi],ah
  40f349:	shr    BYTE PTR [ecx-0x675edd1f],1
  40f34f:	add    al,0x97
  40f351:	(bad)  
  40f352:	(bad)  
  40f353:	jg     0x40f397
  40f355:	idiv   DWORD PTR [esi-0x21]
  40f358:	neg    BYTE PTR [ebp-0x49]
  40f35b:	cmp    edx,edi
  40f35d:	rcr    DWORD PTR [ecx+0x4c],0x3d
  40f361:	dec    ebx
  40f362:	retf   
  40f363:	inc    edi
  40f364:	push   edi
  40f365:	pop    ecx
  40f366:	js     0x40f3c1
  40f368:	push   edi
  40f369:	out    dx,eax
  40f36a:	sbb    al,0xc7
  40f36c:	pushf  
  40f36d:	xchg   BYTE PTR [ecx+0x6909d8b4],ah
  40f373:	lods   eax,DWORD PTR ds:[esi]
  40f374:	ss inc esi
  40f376:	xor    al,0x19
  40f378:	xchg   ebp,eax
  40f379:	jecxz  0x40f33b
  40f37b:	or     BYTE PTR [edi],ah
  40f37d:	push   edi
  40f37e:	mov    bl,0xa
  40f380:	loop   0x40f338
  40f382:	scas   eax,DWORD PTR es:[edi]
  40f383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f384:	imul   DWORD PTR [esi]
  40f386:	inc    ecx
  40f387:	(bad)  
  40f388:	neg    BYTE PTR [ecx+0x54302f86]
  40f38e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f38f:	inc    ebx
  40f390:	push   esp
  40f391:	dec    eax
  40f392:	imul   ebp,DWORD PTR [esi+0x1e],0xc4ca3ce9
  40f399:	lahf   
  40f39a:	pop    ebp
  40f39b:	aam    0xff
  40f39d:	adc    BYTE PTR [ecx+ebp*2-0x60],cl
  40f3a1:	cli    
  40f3a2:	adc    eax,0x8c76fee8
  40f3a7:	sub    esi,DWORD PTR [ecx-0x62327623]
  40f3ad:	xchg   ecx,eax
  40f3ae:	and    eax,0x6bbe0da1
  40f3b3:	in     eax,dx
  40f3b4:	mov    dl,BYTE PTR [esi+ecx*2+0x76]
  40f3b8:	enter  0x9c64,0x16
  40f3bc:	jmp    0xa157:0xf3efd605
  40f3c3:	add    BYTE PTR [edx],0x8
  40f3c6:	andps  xmm2,xmm0
  40f3c9:	aas    
  40f3ca:	xchg   edi,eax
  40f3cb:	push   esp
  40f3cc:	mov    ch,0x73
  40f3ce:	cs and al,0xc1
  40f3d1:	popf   
  40f3d2:	aad    0xcf
  40f3d4:	gs inc edx
  40f3d6:	out    0x40,eax
  40f3d8:	xchg   ecx,eax
  40f3d9:	cld    
  40f3da:	pop    esp
  40f3db:	fsubr  st,st(5)
  40f3dd:	dec    BYTE PTR [eax]
  40f3df:	outs   dx,BYTE PTR ds:[esi]
  40f3e0:	stos   DWORD PTR es:[edi],eax
  40f3e1:	das    
  40f3e2:	mov    edi,0x23a8e55c
  40f3e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3e8:	aaa    
  40f3e9:	out    0x21,al
  40f3eb:	or     BYTE PTR [edi-0x3753e0f3],ah
  40f3f1:	mov    ebp,DWORD PTR [ebx-0x75aed0ee]
  40f3f7:	push   ebx
  40f3f8:	jmp    0x40f3f5
  40f3fa:	lods   eax,DWORD PTR ds:[esi]
  40f3fb:	dec    ebp
  40f3fc:	(bad)  
  40f3fd:	ss and cl,dh
  40f400:	icebp  
  40f401:	mov    esi,0x2ca10650
  40f406:	outs   dx,BYTE PTR ds:[esi]
  40f407:	mov    dh,0x6b
  40f409:	arpl   WORD PTR [esi-0x76d3b956],si
  40f40f:	stos   DWORD PTR es:[edi],eax
  40f410:	mov    edi,0xd9f3d26a
  40f415:	or     BYTE PTR [eax-0x4db3ffcc],ah
  40f41b:	add    al,0x22
  40f41d:	call   DWORD PTR [ebp+0x613733fc]
  40f423:	sahf   
  40f424:	pop    ecx
  40f425:	stos   BYTE PTR es:[edi],al
  40f426:	test   eax,0xfba3a29f
  40f42b:	fimul  WORD PTR [esi-0xa7b9128]
  40f431:	push   ebp
  40f432:	sbb    ch,0x20
  40f435:	imul   edx,DWORD PTR [eax+edx*1+0x69],0xffffffb8
  40f43a:	lods   eax,DWORD PTR ds:[esi]
  40f43b:	or     eax,0x2bc6f254
  40f440:	add    ch,bl
  40f442:	sub    cl,BYTE PTR [ecx]
  40f444:	adc    BYTE PTR [edi+0x14357fc8],cl
  40f44a:	push   eax
  40f44b:	pop    ecx
  40f44c:	xchg   edi,eax
  40f44d:	mov    ebp,0x73c64468
  40f452:	pop    ebx
  40f453:	push   0x3
  40f455:	(bad)  
  40f457:	icebp  
  40f458:	push   ebx
  40f459:	cdq    
  40f45a:	nop
  40f45b:	or     eax,0x6d8705ae
  40f460:	jno    0x40f455
  40f462:	xor    DWORD PTR [edx],0x6420cc04
  40f468:	inc    eax
  40f469:	scas   eax,DWORD PTR es:[edi]
  40f46a:	(bad)  
  40f46b:	in     eax,dx
  40f46c:	cmp    bl,BYTE PTR [ebp+0x3e]
  40f46f:	pop    ebp
  40f470:	xchg   DWORD PTR fs:[esi-0x72],edi
  40f474:	cmp    ah,dl
  40f476:	add    cl,BYTE PTR [ecx+0x46]
  40f479:	icebp  
  40f47a:	lods   al,BYTE PTR ds:[esi]
  40f47b:	cmp    BYTE PTR ds:0xc35b12fa,dl
  40f481:	jno    0x40f49e
  40f483:	mov    ds:0xf176d6dd,al
  40f488:	or     eax,DWORD PTR ds:0x5225ef25
  40f48e:	push   0x43a6e8ae
  40f493:	daa    
  40f494:	mov    ds:0x4969064d,al
  40f499:	leave  
  40f49a:	cmp    DWORD PTR [esi],ebx
  40f49c:	lds    ebx,FWORD PTR [eax+0x64480384]
  40f4a2:	std    
  40f4a3:	sbb    esi,0x91016e9f
  40f4a9:	push   eax
  40f4aa:	or     BYTE PTR ds:0x55adb3fb,bl
  40f4b0:	push   ds
  40f4b1:	push   ecx
  40f4b2:	das    
  40f4b3:	mov    eax,ds:0xc2b8ea9d
  40f4b9:	sub    eax,0xd4160d76
  40f4be:	push   edi
  40f4bf:	mov    ch,0x90
  40f4c1:	and    eax,0xf0f536c5
  40f4c6:	call   0x53f4:0x38eebf79
  40f4cd:	pop    es
  40f4ce:	in     eax,0xf5
  40f4d0:	xchg   edx,eax
  40f4d1:	mov    ecx,DWORD PTR [eax+edi*8-0x29]
  40f4d5:	cdq    
  40f4d6:	sub    BYTE PTR [edi-0x67e13d16],0x43
  40f4dd:	mov    DWORD PTR [edx+ebp*2+0x66],edi
  40f4e1:	xor    dl,BYTE PTR [esi]
  40f4e3:	retf   
  40f4e4:	inc    edx
  40f4e5:	push   esp
  40f4e6:	mov    eax,0x948d2e27
  40f4eb:	mul    DWORD PTR [eax-0x57]
  40f4ee:	push   0xbfd01db4
  40f4f3:	(bad)  
  40f4f4:	mov    ds:0x2c30d37f,al
  40f4f9:	loope  0x40f4a0
  40f4fb:	mov    dh,0xc3
  40f4fd:	movd   mm5,edx
  40f500:	cmc    
  40f501:	or     esp,ecx
  40f503:	out    0x94,al
  40f505:	sbb    DWORD PTR [edx-0x74c103cf],esi
  40f50b:	ins    BYTE PTR es:[edi],dx
  40f50c:	sahf   
  40f50d:	sub    edx,DWORD PTR [ebx]
  40f50f:	push   ss
  40f510:	fwait
  40f511:	sub    bl,BYTE PTR [ebx]
  40f513:	jno    0xc7c12029
  40f519:	push   edi
  40f51a:	mov    cl,0xb1
  40f51c:	mov    esp,0x11572c45
  40f521:	sub    cl,BYTE PTR [ebp+esi*2-0x7]
  40f525:	cmc    
  40f526:	scas   al,BYTE PTR es:[edi]
  40f527:	mov    eax,ds:0x55e7954f
  40f52c:	push   cs
  40f52d:	out    dx,al
  40f52e:	clc    
  40f52f:	pop    esi
  40f530:	aad    0xd3
  40f532:	push   ecx
  40f533:	xor    bh,BYTE PTR [edx+esi*8]
  40f536:	mov    bl,0x4a
  40f538:	retf   
  40f539:	mov    al,0x90
  40f53b:	dec    edx
  40f53c:	xor    ebx,ebp
  40f53e:	dec    ebp
  40f53f:	jecxz  0x40f527
  40f541:	test   eax,0x5bb67634
  40f546:	push   cs
  40f547:	push   esp
  40f548:	and    eax,0x2103ed8b
  40f54d:	(bad)  
  40f54f:	push   ss
  40f550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f551:	fldenv [ecx]
  40f553:	pop    es
  40f554:	call   0xa3830471
  40f559:	jp     0x40f4eb
  40f55b:	lods   eax,DWORD PTR ds:[esi]
  40f55c:	dec    eax
  40f55d:	sub    ch,bh
  40f55f:	loopne 0x40f526
  40f561:	add    DWORD PTR [edi-0x11],0xffffffca
  40f565:	retf   
  40f566:	sub    ch,BYTE PTR [edx-0x5edc3a5d]
  40f56c:	ret    0x7bc7
  40f56f:	cmp    al,0x2f
  40f571:	rol    ah,1
  40f573:	mov    edx,0xbc31102c
  40f578:	pop    esp
  40f579:	inc    edx
  40f57a:	add    edi,DWORD PTR [edi+0x18]
  40f57d:	push   eax
  40f57e:	cs pop ebp
  40f580:	mov    esi,0xdd6485eb
  40f585:	(bad)
  40f588:	jnp    0x40f591
  40f58a:	lahf   
  40f58b:	outs   dx,DWORD PTR ds:[esi]
  40f58c:	mov    edi,0xa8295bdd
  40f591:	add    esp,esi
  40f593:	or     al,0xe5
  40f595:	push   ecx
  40f596:	sbb    DWORD PTR [ebx],esp
  40f598:	js     0x40f548
  40f59a:	or     DWORD PTR [eax-0x392578d],0x69
  40f5a1:	aaa    
  40f5a2:	mov    al,0xb7
  40f5a4:	mov    ch,0xe6
  40f5a6:	loope  0x40f583
  40f5a8:	or     al,0x27
  40f5aa:	mov    bl,0x73
  40f5ac:	xor    dh,ch
  40f5ae:	test   BYTE PTR [ecx+ecx*8],ch
  40f5b1:	adc    ecx,DWORD PTR [edx+0x3384c4a6]
  40f5b7:	lods   eax,DWORD PTR ds:[esi]
  40f5b8:	les    eax,FWORD PTR [ebp-0x6ac2a34c]
  40f5be:	bound  eax,QWORD PTR [ecx+0x48]
  40f5c1:	cld    
  40f5c2:	repz (bad)
  40f5c5:	jg     0x40f565
  40f5c7:	xlat   BYTE PTR ds:[ebx]
  40f5c8:	add    BYTE PTR [edx],ch
  40f5ca:	bound  ebp,QWORD PTR [ebx-0x4a2db6e1]
  40f5d0:	add    BYTE PTR [eax+0x3371cba9],bh
  40f5d6:	sahf   
  40f5d7:	arpl   WORD PTR [eax-0x67],sp
  40f5da:	jno    0x40f5c7
  40f5dc:	scas   eax,DWORD PTR es:[edi]
  40f5dd:	jo     0x40f63e
  40f5df:	cmp    esp,DWORD PTR [edx+0x73]
  40f5e2:	cmp    BYTE PTR [ebx-0x3e47ef8f],bh
  40f5e8:	or     ebx,DWORD PTR [eax-0x50b06ce5]
  40f5ee:	mov    ds:0x7d8ac43c,eax
  40f5f3:	cmp    bh,dl
  40f5f5:	jne    0x40f63a
  40f5f7:	xchg   esp,eax
  40f5f8:	push   0x1943cab4
  40f5fd:	inc    esp
  40f5fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5ff:	mov    ecx,DWORD PTR [edi]
  40f601:	scas   eax,DWORD PTR es:[edi]
  40f602:	scas   al,BYTE PTR es:[edi]
  40f603:	daa    
  40f604:	xchg   edi,eax
  40f605:	pushf  
  40f606:	ins    DWORD PTR es:[edi],dx
  40f607:	adc    ebx,DWORD PTR [eax-0x14aaafc5]
  40f60d:	popf   
  40f60e:	xor    DWORD PTR [edx],ecx
  40f610:	mov    ch,0x7c
  40f612:	push   edi
  40f613:	sub    ecx,DWORD PTR [edx+0x34]
  40f616:	jle    0x40f5c6
  40f618:	cld    
  40f619:	test   eax,0xc0a0770e
  40f61e:	jne    0x40f5a9
  40f620:	out    dx,eax
  40f621:	mov    cl,BYTE PTR [ecx-0x10]
  40f624:	stc    
  40f625:	cmp    eax,0x3f6fa8f1
  40f62a:	push   ebx
  40f62b:	sbb    BYTE PTR [esi+0x59],ah
  40f62e:	rcl    al,cl
  40f630:	gs xor bl,cl
  40f633:	xor    al,0x91
  40f635:	push   es
  40f636:	xchg   BYTE PTR [ebx+ebx*8+0x68a9401a],dl
  40f63d:	xor    eax,0x75d3a545
  40f642:	sbb    BYTE PTR [esi+0x7c],bl
  40f645:	push   0x7c
  40f647:	pop    ebp
  40f648:	fs cld 
  40f64a:	push   eax
  40f64b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f64c:	outs   dx,DWORD PTR ds:[esi]
  40f64d:	jle    0x40f64c
  40f64f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f650:	inc    esi
  40f651:	xchg   edi,esp
  40f653:	aam    0xa2
  40f655:	push   esp
  40f656:	cmp    BYTE PTR [edx+0x2a854782],bh
  40f65c:	jge    0x40f69e
  40f65e:	mov    al,0x6
  40f660:	fwait
  40f661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f662:	retf   0x4f9f
  40f665:	jns    0x40f5f0
  40f667:	dec    ebx
  40f668:	sub    al,0x2e
  40f66a:	mov    bh,0x23
  40f66c:	outs   dx,BYTE PTR ds:[esi]
  40f66d:	jle    0x40f62d
  40f66f:	sub    al,0xa4
  40f671:	sbb    BYTE PTR gs:[ebp-0x64],bh
  40f675:	cli    
  40f676:	xchg   edx,eax
  40f677:	icebp  
  40f678:	movaps xmm1,XMMWORD PTR [edx+0x4d]
  40f67c:	push   cs
  40f67d:	ret    0x6d00
  40f680:	mov    bl,0xbd
  40f682:	imul   ebx,ecx,0xffffffab
  40f685:	xchg   esi,eax
  40f686:	mov    edi,0xa1bb69a
  40f68b:	ror    ebp,1
  40f68d:	fnsave [ebx]
  40f68f:	push   ebp
  40f690:	push   bx
  40f692:	(bad)  
  40f693:	hlt    
  40f694:	in     al,0x86
  40f696:	test   eax,0xac41f469
  40f69b:	dec    edi
  40f69c:	and    esp,DWORD PTR [eax-0x1638fca5]
  40f6a2:	shl    DWORD PTR [eax+eax*1],cl
  40f6a5:	add    BYTE PTR [ebx+0x4503c845],cl
  40f6ab:	or     BYTE PTR [ecx+0x458be845],cl
  40f6b1:	in     al,0x85
  40f6b3:	ror    BYTE PTR [edi],0x84
  40f6b6:	dec    eax
  40f6b7:	and    al,0x0
  40f6b9:	add    bh,al
  40f6bb:	inc    ebp
  40f6bc:	loopne 0x40f6be
  40f6be:	add    BYTE PTR [eax],al
  40f6c0:	add    BYTE PTR [edx+0x3],ch
  40f6c3:	xor    edx,edx
  40f6c5:	pop    edx
  40f6c6:	add    edx,0x8
  40f6c9:	push   edx
  40f6ca:	pop    ecx
  40f6cb:	push   0x6
  40f6cd:	dec    ecx
  40f6ce:	pop    ebx
  40f6cf:	dec    ebx
  40f6d0:	xchg   ebx,ecx
  40f6d2:	sub    ebx,ecx
  40f6d4:	xchg   ebx,ecx
  40f6d6:	dec    ecx
  40f6d7:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6da:	imul   eax,ecx
  40f6dd:	sub    esp,eax
  40f6df:	mov    DWORD PTR [ebp-0x20],esp
  40f6e2:	mov    eax,DWORD PTR [ebp-0x4]
  40f6e5:	xor    eax,esi
  40f6e7:	add    eax,edi
  40f6e9:	jmp    0x411adb
  40f6ee:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6f1:	mov    eax,DWORD PTR [ebp+0x8]
  40f6f4:	mov    edx,DWORD PTR [ebp+0x14]
  40f6f7:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f6fb:	xor    ecx,esi
  40f6fd:	add    ecx,edi
  40f6ff:	xor    edx,edx
  40f701:	div    ecx
  40f703:	mov    ecx,DWORD PTR [ebp-0x4]
  40f706:	jmp    0x411aba
  40f70b:	outs   dx,BYTE PTR ds:[esi]
  40f70c:	lods   al,BYTE PTR ds:[esi]
  40f70d:	or     ch,al
  40f70f:	mov    cl,al
  40f711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f712:	or     ah,0x7d
  40f715:	push   0x8495ebf0
  40f71a:	jbe    0x40f71e
  40f71c:	scas   al,BYTE PTR es:[edi]
  40f71d:	add    DWORD PTR [ebx-0x7c7ca318],0xffffffc6
  40f724:	test   al,0x9c
  40f726:	lahf   
  40f727:	push   es
  40f728:	dec    edx
  40f729:	test   DWORD PTR [ecx],ecx
  40f72b:	daa    
  40f72c:	mov    esi,0x2de9aea1
  40f731:	aaa    
  40f732:	popf   
  40f733:	jo     0x40f6f7
  40f735:	cmp    al,0xaa
  40f737:	pop    ss
  40f738:	xor    al,bl
  40f73a:	inc    edi
  40f73b:	cmp    al,0xc8
  40f73d:	push   0xffffffee
  40f73f:	into   
  40f740:	daa    
  40f741:	ins    BYTE PTR es:[edi],dx
  40f742:	aam    0xc9
  40f744:	outs   dx,BYTE PTR ds:[esi]
  40f745:	sbb    BYTE PTR [esi+ebx*4],cl
  40f748:	cs mov cl,0xa9
  40f74b:	pop    edx
  40f74c:	cli    
  40f74d:	fs pop ds
  40f74f:	ja     0x40f717
  40f751:	dec    ebp
  40f752:	not    bl
  40f754:	ror    DWORD PTR [edi+0x26],1
  40f757:	pop    esp
  40f758:	gs dec esi
  40f75b:	js     0x40f7ac
  40f75d:	dec    edx
  40f75e:	dec    ecx
  40f75f:	jmp    0x5064:0x13aa0e4d
  40f766:	data16 cli 
  40f768:	dec    esp
  40f769:	dec    ebp
  40f76a:	cmc    
  40f76b:	sub    al,0x7
  40f76d:	in     al,0x45
  40f76f:	push   edx
  40f770:	iret   
  40f771:	stos   BYTE PTR es:[edi],al
  40f772:	add    BYTE PTR [ebx-0x12eaea15],0xe0
  40f779:	cmovl  ebx,DWORD PTR [edx]
  40f77c:	sti    
  40f77d:	push   es
  40f77e:	jnp    0x40f705
  40f780:	jb     0x40f7a9
  40f782:	ins    BYTE PTR es:[edi],dx
  40f783:	mov    ah,0x8d
  40f785:	mul    DWORD PTR [eax+eiz*1+0x4d090fcf]
  40f78c:	xchg   ebx,eax
  40f78d:	inc    esi
  40f78e:	jge    0x40f753
  40f790:	je     0x40f7d1
  40f792:	pop    ebp
  40f793:	enter  0x7eed,0xe0
  40f797:	test   eax,0xe7502459
  40f79c:	lods   eax,DWORD PTR ds:[esi]
  40f79d:	jp     0x40f778
  40f79f:	ja     0x40f810
  40f7a1:	cs jle 0x40f779
  40f7a4:	test   al,0x6a
  40f7a6:	add    ah,BYTE PTR [edi+eiz*4+0x7e]
  40f7aa:	aam    0x28
  40f7ac:	sub    DWORD PTR [esi+0x3c2775c4],0xffffff9e
  40f7b3:	pushf  
  40f7b4:	ins    BYTE PTR es:[edi],dx
  40f7b5:	dec    eax
  40f7b6:	ins    BYTE PTR es:[edi],dx
  40f7b7:	ja     0x40f739
  40f7b9:	cdq    
  40f7ba:	add    esp,ebp
  40f7bc:	iret   
  40f7bd:	xor    DWORD PTR [eax+0x3a],ebp
  40f7c0:	fscale 
  40f7c2:	fwait
  40f7c3:	bound  edx,QWORD PTR [ebx]
  40f7c5:	pop    edi
  40f7c6:	dec    esi
  40f7c7:	outs   dx,DWORD PTR ds:[esi]
  40f7c8:	test   eax,0x24a1f478
  40f7cd:	xor    bh,BYTE PTR [edx+ecx*8+0x7f]
  40f7d1:	lahf   
  40f7d2:	cdq    
  40f7d3:	push   es
  40f7d4:	addr16 fwait
  40f7d6:	je     0x40f84b
  40f7d8:	dec    ebp
  40f7d9:	imul   ebp,DWORD PTR [edi],0xbe99aef5
  40f7df:	add    BYTE PTR ds:0x8e8d7497,bl
  40f7e5:	iret   
  40f7e6:	mov    bh,0xd7
  40f7e8:	xor    BYTE PTR [ecx-0x6f],dh
  40f7eb:	pop    esp
  40f7ec:	mov    eax,ds:0x406e5c0b
  40f7f1:	push   ecx
  40f7f2:	mov    WORD PTR [ebx],?
  40f7f4:	mov    ecx,0xae1ce514
  40f7f9:	sbb    al,0x34
  40f7fb:	inc    esi
  40f7fc:	jae    0x40f854
  40f7fe:	aam    0xb5
  40f800:	test   BYTE PTR [ecx-0x38be9242],dh
  40f806:	das    
  40f807:	inc    edx
  40f808:	mov    bl,al
  40f80a:	scas   al,BYTE PTR es:[edi]
  40f80b:	sub    bh,BYTE PTR [edi+edi*2-0x71]
  40f80f:	imul   ebx,DWORD PTR [eax+0x8],0x7b513403
  40f816:	fimul  DWORD PTR [esp+esi*4-0x7b3d9c23]
  40f81d:	mov    ebp,ebx
  40f81f:	mov    BYTE PTR [edi],dh
  40f821:	fcomi  st,st(4)
  40f823:	or     edx,edi
  40f825:	xchg   esp,eax
  40f826:	loope  0x40f7f9
  40f828:	sahf   
  40f829:	ins    BYTE PTR es:[edi],dx
  40f82a:	lds    esp,FWORD PTR [eax-0x67578fe0]
  40f830:	or     BYTE PTR ss:0x69de0ddf,dl
  40f837:	add    BYTE PTR gs:[eax+0x19db4360],al
  40f83e:	mov    bl,0x71
  40f840:	and    ah,ah
  40f842:	data16 sti 
  40f844:	and    DWORD PTR fs:[eax+edi*4+0x212c1f80],ecx
  40f84c:	pop    eax
  40f84d:	je     0x40f8c0
  40f84f:	pop    eax
  40f850:	pop    eax
  40f851:	or     eax,0xb0beaed2
  40f856:	mov    dl,0xe2
  40f858:	mov    ds:0xbb30b5d4,al
  40f85d:	jge    0x40f8b0
  40f85f:	sahf   
  40f860:	neg    dl
  40f862:	mov    dh,0x19
  40f864:	aaa    
  40f865:	je     0x40f85f
  40f867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f868:	(bad)  
  40f869:	loopne 0x40f85c
  40f86b:	xchg   bh,cl
  40f86d:	push   ebx
  40f86e:	xchg   ebp,eax
  40f86f:	cmp    cl,0xad
  40f872:	(bad)
  40f875:	jecxz  0x40f86e
  40f877:	jbe    0x40f87c
  40f879:	repz pop ebx
  40f87b:	lahf   
  40f87c:	xor    al,0xd8
  40f87e:	test   DWORD PTR ss:[esi+edx*4+0x4],ecx
  40f883:	icebp  
  40f884:	pop    ebp
  40f885:	es stc 
  40f887:	sub    eax,0xa4e6fb9b
  40f88c:	lods   al,BYTE PTR ds:[esi]
  40f88d:	mov    ebx,0x2b1da8dc
  40f892:	sub    eax,0x47bc0206
  40f897:	mov    eax,ds:0xff006a48
  40f89c:	rcr    BYTE PTR [eax-0x34],0x42
  40f8a0:	xor    al,0x8a
  40f8a2:	jne    0x40f82d
  40f8a4:	add    al,0xc4
  40f8a6:	fcom   DWORD PTR [ecx-0x50084c65]
  40f8ac:	jbe    0x40f90e
  40f8ae:	pusha  
  40f8af:	sub    BYTE PTR [edx-0xdaeaf45],dh
  40f8b5:	fld    DWORD PTR [ebx]
  40f8b7:	inc    eax
  40f8b8:	mov    ch,bl
  40f8ba:	cmp    al,0xc1
  40f8bc:	sub    eax,0x7d9c660
  40f8c1:	test   DWORD PTR [esi+0x228e0e77],edx
  40f8c7:	mov    esp,0xa50da010
  40f8cc:	out    0xd7,al
  40f8ce:	mov    ds:0xba526174,eax
  40f8d3:	enter  0xc30f,0x55
  40f8d7:	sbb    eax,0x733ee589
  40f8dc:	push   esi
  40f8dd:	ss int 0xd3
  40f8e0:	mov    ecx,0x961ba1ce
  40f8e5:	repz das 
  40f8e7:	push   edi
  40f8e8:	mov    ds:0xaa1e7897,al
  40f8ed:	mov    ebx,0x8a49f79c
  40f8f2:	or     esi,edi
  40f8f4:	aas    
  40f8f5:	hlt    
  40f8f6:	add    al,0x4f
  40f8f8:	mov    edx,0x1e61956a
  40f8fd:	leave  
  40f8fe:	sar    bl,1
  40f900:	js     0x40f883
  40f902:	add    eax,0xaba0eda8
  40f907:	sub    dl,BYTE PTR [edx+0x51]
  40f90a:	push   es
  40f90b:	mov    esi,0xd5548d6
  40f910:	add    BYTE PTR [ecx+0x3facda01],bh
  40f916:	and    BYTE PTR [ebx+ebx*1],bl
  40f919:	int    0x93
  40f91b:	mov    DWORD PTR [eax+0x6f1ca4f9],ebx
  40f921:	adc    eax,0x449e800f
  40f926:	mov    eax,ds:0x52a93cba
  40f92b:	adc    BYTE PTR [edi-0x7531fd38],ch
  40f931:	mov    ds:0x91ce26e0,al
  40f936:	mov    ds:0x2f30018a,al
  40f93b:	pop    ebx
  40f93c:	lahf   
  40f93d:	mov    esi,0x2b8d3299
  40f942:	ja     0x40f96b
  40f944:	jae    0x40f976
  40f946:	xor    eax,0x1b65d7ef
  40f94b:	scas   eax,DWORD PTR es:[edi]
  40f94c:	mov    esi,0x216e2231
  40f951:	jo     0x40f9ce
  40f953:	pop    ebp
  40f954:	mov    ebp,0xefea2f87
  40f959:	cs mov ah,0x9f
  40f95c:	mov    esp,0x6da3ee96
  40f961:	cmp    BYTE PTR [ebp-0x7c],dh
  40f964:	(bad)  
  40f965:	iret   
  40f966:	push   edi
  40f967:	mov    ds:0x8c3c4dda,al
  40f96c:	mov    al,ds:0x30baba4d
  40f971:	(bad)  
  40f972:	mov    cl,0x73
  40f974:	fwait
  40f975:	inc    ebp
  40f976:	(bad)  
  40f977:	int    0xa5
  40f979:	mov    dh,0x46
  40f97b:	mov    ah,0x74
  40f97d:	nop
  40f97e:	xor    al,ch
  40f980:	sub    DWORD PTR [ebx+0x78bdc216],edi
  40f986:	cmp    edi,ebp
  40f988:	jbe    0x40f999
  40f98a:	mov    ebx,ebx
  40f98c:	jecxz  0x40f927
  40f98e:	sbb    eax,0x1e859e9d
  40f993:	dec    ebx
  40f994:	test   DWORD PTR [ebp+eax*2-0x11],eax
  40f998:	jge    0x40f9fe
  40f99a:	xor    eax,0xad7233c
  40f99f:	xchg   esi,eax
  40f9a0:	push   0xffffffb1
  40f9a2:	dec    ecx
  40f9a3:	jo     0x40f9f7
  40f9a5:	(bad)  
  40f9a6:	fstp   DWORD PTR [edi+eiz*2-0x79]
  40f9aa:	push   ss
  40f9ab:	mov    esi,0x4fe7c2de
  40f9b0:	into   
  40f9b1:	and    al,0x68
  40f9b3:	xlat   BYTE PTR ds:[ebx]
  40f9b4:	bound  ebp,QWORD PTR [edx+0x74]
  40f9b7:	push   esp
  40f9b8:	jo     0x40f994
  40f9ba:	fsubr  QWORD PTR [edi+0x6693da9e]
  40f9c0:	fnstcw WORD PTR [ebp-0x7988de83]
  40f9c6:	xor    ah,al
  40f9c8:	in     al,0xac
  40f9ca:	push   esi
  40f9cb:	aaa    
  40f9cc:	push   es
  40f9cd:	mov    dh,0xfe
  40f9cf:	stos   DWORD PTR es:[edi],eax
  40f9d0:	(bad)  
  40f9d1:	fiadd  WORD PTR [ebp+0x2d2d5664]
  40f9d7:	push   ss
  40f9d8:	mov    BYTE PTR [edi],dh
  40f9da:	arpl   WORD PTR [ecx-0xf],dx
  40f9dd:	dec    ecx
  40f9de:	dec    ecx
  40f9df:	out    dx,al
  40f9e0:	mov    bl,0x76
  40f9e2:	(bad)  
  40f9e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9e5:	leave  
  40f9e6:	stc    
  40f9e7:	mov    ecx,0xf578cb3a
  40f9ec:	into   
  40f9ed:	inc    esi
  40f9ee:	scas   al,BYTE PTR es:[edi]
  40f9ef:	push   edi
  40f9f0:	popa   
  40f9f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9f2:	(bad)
  40f9f6:	xor    DWORD PTR [esi-0x16],eax
  40f9f9:	pop    edx
  40f9fa:	in     eax,0x59
  40f9fc:	nop
  40f9fd:	enter  0xba6a,0xd7
  40fa01:	mov    ebp,0xf9b17ee1
  40fa06:	push   esp
  40fa07:	mov    WORD PTR [edi+0x7d],ss
  40fa0a:	or     DWORD PTR [ebp+0x6a],esi
  40fa0d:	rcr    BYTE PTR [edi+0x17],1
  40fa10:	out    dx,al
  40fa11:	fldenv [ecx+0x2b]
  40fa14:	fisub  DWORD PTR [eax]
  40fa16:	scas   al,BYTE PTR es:[edi]
  40fa17:	or     ch,BYTE PTR [esi+eax*8-0x45]
  40fa1b:	cmp    BYTE PTR [esi],ah
  40fa1d:	xor    DWORD PTR [ebp-0x673fc143],esi
  40fa23:	fist   DWORD PTR [edx+0x26]
  40fa26:	call   0xc7690f8f
  40fa2b:	dec    esi
  40fa2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa2d:	jb     0x40f9e2
  40fa2f:	fwait
  40fa30:	inc    ecx
  40fa31:	mov    ds:0x4719c0fd,eax
  40fa36:	es pop esi
  40fa38:	add    al,0x46
  40fa3a:	lods   eax,DWORD PTR ds:[esi]
  40fa3b:	mov    ch,0x9
  40fa3d:	xchg   edx,eax
  40fa3e:	call   0x6f270fa6
  40fa43:	pop    edi
  40fa44:	add    DWORD PTR [ebx*8+0x479fff7f],0xfb314eba
  40fa4f:	push   edi
  40fa50:	mov    ds:0xae48f031,al
  40fa55:	add    ebp,edi
  40fa57:	xor    ebp,DWORD PTR [ebx+0x43]
  40fa5a:	jecxz  0x40fa07
  40fa5c:	add    al,0x5d
  40fa5e:	or     DWORD PTR [ecx],ebx
  40fa60:	cld    
  40fa61:	push   edx
  40fa62:	es jl  0x40fa20
  40fa65:	pop    ebp
  40fa66:	sub    BYTE PTR [ecx-0x48],0x92
  40fa6a:	loope  0x40fa3e
  40fa6c:	ret    0x78db
  40fa6f:	adc    eax,0x5f190242
  40fa74:	mov    esp,0x31be0c2f
  40fa79:	ret    0xb3d7
  40fa7c:	push   eax
  40fa7d:	sub    BYTE PTR [ebp-0x7fce6363],0x99
  40fa84:	jnp    0x40fa30
  40fa86:	add    dl,BYTE PTR [ecx]
  40fa88:	adc    al,0xd
  40fa8a:	xchg   esi,eax
  40fa8b:	(bad)  
  40fa8c:	jbe    0x40fad6
  40fa8e:	add    eax,0xa80e3eeb
  40fa93:	out    0x9b,eax
  40fa95:	xchg   BYTE PTR ds:0x7970d071,bl
  40fa9b:	lahf   
  40fa9c:	adc    DWORD PTR [ebx+0x71],0x4df51243
  40faa3:	add    eax,0x1a679c24
  40faa8:	popf   
  40faa9:	pop    esp
  40faaa:	shr    bl,0xb0
  40faad:	push   0x245464e6
  40fab2:	add    ebx,DWORD PTR [eax-0x63]
  40fab5:	fdiv   st(3),st
  40fab7:	aad    0xc
  40fab9:	inc    eax
  40faba:	cmp    ebp,edx
  40fabc:	jbe    0x40faa4
  40fabe:	repz dec ebp
  40fac0:	dec    ebx
  40fac1:	pcmpgtb mm1,mm4
  40fac4:	pop    esi
  40fac5:	mov    bh,BYTE PTR [ebx-0x1cf0a9bc]
  40facb:	cmp    dl,BYTE PTR [esi]
  40facd:	cmp    DWORD PTR [edx],eax
  40facf:	shl    DWORD PTR [esi-0x2c8333a1],1
  40fad5:	sahf   
  40fad6:	sub    ecx,ecx
  40fad8:	sub    BYTE PTR [ecx+0x20],0xcf
  40fadc:	jl     0x40fb35
  40fade:	test   al,0xd2
  40fae0:	adc    DWORD PTR [ebx],ebx
  40fae2:	out    0x4a,al
  40fae4:	in     al,0xda
  40fae6:	mov    ebx,0x94f63eae
  40faeb:	xchg   DWORD PTR ds:[edi],ebp
  40faee:	dec    ebx
  40faef:	xlat   BYTE PTR ds:[ebx]
  40faf0:	out    0xf4,eax
  40faf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40faf3:	jne    0x40fb15
  40faf5:	push   ss
  40faf6:	jnp    0x40fa81
  40faf8:	mov    ah,0x46
  40fafa:	pop    eax
  40fafb:	lods   al,BYTE PTR ds:[esi]
  40fafc:	in     al,0xdf
  40fafe:	mov    al,ds:0x90ebbf7f
  40fb03:	push   0x4debfb7d
  40fb08:	pop    eax
  40fb09:	out    0x3c,al
  40fb0b:	repnz pop es
  40fb0d:	cmp    BYTE PTR [ecx+0x5],bl
  40fb10:	xchg   esp,eax
  40fb11:	or     al,bh
  40fb13:	(bad)  
  40fb14:	(bad)  
  40fb15:	dec    BYTE PTR [edx+0x566204cb]
  40fb1b:	mov    ebp,0xd35958ee
  40fb20:	jmp    0x40fb8e
  40fb22:	push   0x49
  40fb24:	cs iret 
  40fb26:	inc    eax
  40fb27:	push   0xffffffdc
  40fb29:	pop    eax
  40fb2a:	cmp    ah,BYTE PTR [eax+ebp*4-0x44]
  40fb2e:	sbb    al,BYTE PTR [ecx+0x133f386f]
  40fb34:	stc    
  40fb35:	jo     0x40fb7d
  40fb37:	mov    BYTE PTR [ebx],ch
  40fb39:	ret    
  40fb3a:	mov    bl,0x6c
  40fb3c:	xlat   BYTE PTR ds:[ebx]
  40fb3d:	sub    ah,bh
  40fb3f:	cmp    al,0xa3
  40fb41:	xlat   BYTE PTR ds:[ebx]
  40fb42:	in     al,dx
  40fb43:	or     eax,0x2b94356e
  40fb48:	sbb    BYTE PTR [esi-0x34994aaf],0xa3
  40fb4f:	push   edi
  40fb50:	fsubr  QWORD PTR [edi-0x2e567dce]
  40fb56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb57:	inc    esi
  40fb58:	scas   al,BYTE PTR es:[edi]
  40fb59:	jbe    0x40fbb2
  40fb5b:	pusha  
  40fb5c:	repnz and DWORD PTR [ecx-0x5463a104],ebp
  40fb63:	push   0xffffffe2
  40fb65:	in     eax,dx
  40fb66:	lock sbb eax,0xa5587a13
  40fb6c:	xchg   ebx,eax
  40fb6d:	dec    ebx
  40fb6e:	dec    ebx
  40fb6f:	push   edi
  40fb70:	mov    dh,0xcf
  40fb72:	add    al,0x8c
  40fb74:	mov    eax,ds:0x8a391a79
  40fb79:	ret    0xf2a
  40fb7c:	adc    al,0xaf
  40fb7e:	lock add eax,DWORD PTR [edi-0x7d]
  40fb82:	jp     0x40fb1e
  40fb84:	les    ebx,FWORD PTR [edx]
  40fb86:	fnstenv ds:0x981668c2
  40fb8c:	pushf  
  40fb8d:	add    DWORD PTR [edx-0x3c],esp
  40fb90:	enter  0x3aa1,0xaa
  40fb94:	fisttp WORD PTR [ebx]
  40fb96:	push   esi
  40fb97:	xchg   edi,eax
  40fb98:	in     eax,dx
  40fb99:	fisub  DWORD PTR [edi+0x165de7ae]
  40fb9f:	push   ebp
  40fba0:	retf   
  40fba1:	cmp    BYTE PTR [edi],bh
  40fba3:	pop    esi
  40fba4:	xchg   esp,eax
  40fba5:	or     eax,ecx
  40fba7:	sub    ebp,DWORD PTR [edx]
  40fba9:	mov    edx,0x985e78ef
  40fbae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbaf:	fmul   st(1),st
  40fbb1:	gs mov ebp,0xa0b9c0dd
  40fbb7:	add    BYTE PTR [edx+0x2a],ah
  40fbba:	inc    ebx
  40fbbb:	jo     0x40fb76
  40fbbd:	inc    esp
  40fbbe:	daa    
  40fbbf:	jecxz  0x40fbad
  40fbc1:	loop   0x40fb7c
  40fbc3:	aam    0x93
  40fbc5:	cmp    ch,bl
  40fbc7:	iret   
  40fbc8:	cmp    cl,BYTE PTR [edx+0x38]
  40fbcb:	xor    BYTE PTR [ebx],dh
  40fbcd:	jmp    0x40fb8f
  40fbcf:	or     BYTE PTR [ebx+0x4d],bl
  40fbd2:	int3   
  40fbd3:	push   cs
  40fbd4:	adc    dl,BYTE PTR [esi+eiz*2-0x28]
  40fbd8:	lods   eax,DWORD PTR ds:[esi]
  40fbd9:	in     al,0xfa
  40fbdb:	sbb    cl,BYTE PTR [ebx+ebx*2]
  40fbde:	add    edx,edi
  40fbe0:	push   eax
  40fbe1:	lds    edx,FWORD PTR [esi+0x51b6fae2]
  40fbe7:	ret    0x3f9d
  40fbea:	repz xchg esp,eax
  40fbec:	test   BYTE PTR [esi],cl
  40fbee:	loop   0x40fbb5
  40fbf0:	shr    BYTE PTR [ecx],1
  40fbf2:	mov    ecx,DWORD PTR [edx]
  40fbf4:	imul   ecx,DWORD PTR [esi+0x44],0x4fc7f83a
  40fbfb:	test   al,0x52
  40fbfd:	fscale 
  40fbff:	or     eax,0x2251d052
  40fc04:	mov    esi,0x4c4fd697
  40fc09:	mov    al,0x85
  40fc0b:	in     eax,0x78
  40fc0d:	pop    ds
  40fc0e:	mov    ch,0x94
  40fc10:	add    ebp,esi
  40fc12:	xlat   BYTE PTR ds:[ebx]
  40fc13:	xchg   DWORD PTR [ecx+0x7d],esp
  40fc16:	xor    al,0x2e
  40fc18:	sar    BYTE PTR [ecx],1
  40fc1a:	pop    eax
  40fc1b:	jmp    DWORD PTR [ecx-0xe8164dd]
  40fc21:	shl    DWORD PTR [esi+edx*1-0x63],0xd4
  40fc26:	or     al,0x38
  40fc28:	outs   dx,BYTE PTR ds:[esi]
  40fc29:	jg     0x40fc13
  40fc2b:	xchg   ebx,eax
  40fc2c:	retf   0xe717
  40fc2f:	push   cs
  40fc30:	xadd   ch,bh
  40fc33:	adc    ecx,DWORD PTR [esp+eax*1-0x9450442]
  40fc3a:	out    0x8a,al
  40fc3c:	push   ebx
  40fc3d:	xchg   ebx,eax
  40fc3e:	mov    bl,0xf6
  40fc40:	jl     0x40fc65
  40fc42:	rol    DWORD PTR [edx+eiz*4+0x58d78c23],1
  40fc49:	sbb    eax,0xc565720
  40fc4e:	mov    al,0x83
  40fc50:	fistp  DWORD PTR [ecx-0x6835d320]
  40fc56:	enter  0xcc02,0xaa
  40fc5a:	dec    esp
  40fc5b:	mov    edi,0x34ae3641
  40fc60:	daa    
  40fc61:	dec    eax
  40fc62:	ss xor al,dh
  40fc65:	mov    esi,edx
  40fc67:	enter  0x40e8,0x76
  40fc6b:	not    cl
  40fc6d:	stos   BYTE PTR es:[edi],al
  40fc6e:	inc    ebp
  40fc6f:	mov    ?,WORD PTR [ebp-0x31054194]
  40fc75:	push   eax
  40fc76:	rcl    ebx,1
  40fc78:	and    eax,0x79f7385e
  40fc7d:	cs mov esp,0x7a7ce3ea
  40fc83:	rcl    DWORD PTR [ecx+0x52fbdf0f],cl
  40fc89:	out    0x30,eax
  40fc8b:	and    eax,0x6b86369e
  40fc90:	push   esi
  40fc91:	jmp    0x5c0e:0xa41f783c
  40fc98:	sbb    ah,BYTE PTR [esi-0x583ff1ec]
  40fc9e:	jle    0x40fcc7
  40fca0:	push   0xffffffa1
  40fca2:	jecxz  0x40fcfd
  40fca4:	and    BYTE PTR [edx+esi*8-0x7d9b2cf9],0xe7
  40fcac:	mov    ecx,0x8a23bbce
  40fcb1:	mov    esi,0x3267e0ed
  40fcb6:	push   ss
  40fcb7:	pop    eax
  40fcb8:	retf   
  40fcb9:	fisub  DWORD PTR [ebp+0x3f541c4c]
  40fcbf:	push   eax
  40fcc0:	xchg   ebx,eax
  40fcc1:	sub    eax,DWORD PTR [ebp+0x1c]
  40fcc4:	js     0x40fc60
  40fcc6:	inc    edi
  40fcc7:	cmp    BYTE PTR [ecx+0xcb517dd],bl
  40fccd:	in     al,0xab
  40fccf:	adc    eax,0x37eb8723
  40fcd4:	out    dx,eax
  40fcd5:	push   ebp
  40fcd6:	mov    esi,0x4e8baac5
  40fcdb:	pop    ds
  40fcdc:	dec    ecx
  40fcdd:	shr    dl,1
  40fcdf:	jbe    0x40fd5f
  40fce1:	xchg   edx,eax
  40fce2:	cwde   
  40fce3:	std    
  40fce4:	xchg   esi,eax
  40fce5:	and    ebx,DWORD PTR [eax-0x1724b276]
  40fceb:	lods   al,BYTE PTR ds:[esi]
  40fcec:	pop    ebp
  40fced:	ja     0x40fca4
  40fcef:	dec    ebx
  40fcf0:	xchg   esi,eax
  40fcf1:	xor    edi,ebp
  40fcf3:	ins    DWORD PTR es:[edi],dx
  40fcf4:	jl     0x40fd71
  40fcf6:	js     0x40fd3b
  40fcf8:	imul   edi,DWORD PTR [edi],0x12ea68
  40fcfe:	sub    al,0xa6
  40fd00:	and    eax,0x28a44a35
  40fd05:	pop    ebp
  40fd06:	in     al,0x3
  40fd08:	sahf   
  40fd09:	mov    bh,0x57
  40fd0b:	frstor [eax]
  40fd0d:	ins    BYTE PTR es:[edi],dx
  40fd0e:	call   0x6369:0x7e5ebff7
  40fd15:	imul   DWORD PTR [ebp+0x29]
  40fd18:	ret    0xbe
  40fd1b:	lods   al,BYTE PTR ds:[esi]
  40fd1c:	sbb    eax,0xab1d407b
  40fd21:	cmp    edx,DWORD PTR [ebx+edx*2]
  40fd24:	in     eax,dx
  40fd25:	or     cl,bh
  40fd27:	sub    BYTE PTR [ebx-0x41],ch
  40fd2a:	pop    ebx
  40fd2b:	(bad)  
  40fd2c:	sar    dl,1
  40fd2e:	push   ss
  40fd2f:	push   0x26a1251b
  40fd34:	mov    esp,0xe1e327d7
  40fd39:	cmp    bl,cl
  40fd3b:	and    al,0x42
  40fd3d:	push   esp
  40fd3e:	shr    DWORD PTR [ecx-0x6c],1
  40fd41:	xor    al,0xd9
  40fd43:	xor    BYTE PTR [edx+0x49],dl
  40fd46:	scas   eax,DWORD PTR es:[edi]
  40fd47:	jle    0x40fd8e
  40fd49:	mov    WORD PTR ds:0x10644391,es
  40fd4f:	push   0xffffffb7
  40fd51:	xor    DWORD PTR [ebp-0x7d],0x35
  40fd55:	icebp  
  40fd56:	jl     0x40fdb1
  40fd58:	cmc    
  40fd59:	add    DWORD PTR [ebx],eax
  40fd5b:	or     edx,edx
  40fd5d:	cmp    eax,0x3ef7b6f3
  40fd62:	sbb    BYTE PTR [ecx-0x35],ch
  40fd65:	pop    edi
  40fd66:	jl     0x40fdc2
  40fd68:	retf   0x707d
  40fd6b:	xchg   ebx,eax
  40fd6c:	push   esp
  40fd6d:	xor    ah,BYTE PTR [eax+0x12]
  40fd70:	scas   eax,DWORD PTR es:[edi]
  40fd71:	pushf  
  40fd72:	push   edx
  40fd73:	xor    ah,BYTE PTR [ecx]
  40fd75:	cwde   
  40fd76:	dec    edi
  40fd77:	pop    ebp
  40fd78:	icebp  
  40fd79:	push   edi
  40fd7a:	jne    0x40fd44
  40fd7c:	mov    dh,0x76
  40fd7e:	call   0x66471482
  40fd83:	jmp    0xbedd320e
  40fd88:	mov    DWORD PTR [esi-0x5c],esi
  40fd8b:	xor    eax,0xeac89032
  40fd90:	jmp    0x64570962
  40fd95:	dec    esp
  40fd96:	fcmovnbe st,st(0)
  40fd98:	dec    edi
  40fd99:	pop    edx
  40fd9a:	pop    ebp
  40fd9b:	stos   DWORD PTR es:[edi],eax
  40fd9c:	out    dx,al
  40fd9d:	push   esp
  40fd9e:	fmul   QWORD PTR [edx+0x7a]
  40fda1:	jnp    0x40fda0
  40fda3:	aam    0x1e
  40fda5:	add    esi,ecx
  40fda7:	inc    esp
  40fda8:	in     al,0x41
  40fdaa:	add    DWORD PTR [esp+eiz*8+0x4e7359d0],edi
  40fdb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdb2:	ds out 0x43,al
  40fdb5:	sbb    eax,0xb4b5ef2e
  40fdba:	sub    ah,BYTE PTR [eax+0x3ed70b72]
  40fdc0:	jo     0x40fdab
  40fdc2:	mov    eax,0x3b3d9d5b
  40fdc7:	aas    
  40fdc8:	stos   DWORD PTR es:[edi],eax
  40fdc9:	enter  0xf4d7,0x7c
  40fdcd:	mov    ds:0xe22c6461,al
  40fdd2:	in     eax,dx
  40fdd3:	sub    al,0xcb
  40fdd5:	dec    eax
  40fdd6:	ins    DWORD PTR es:[edi],dx
  40fdd7:	ret    
  40fdd8:	mul    BYTE PTR ds:0x2ba45378
  40fdde:	xor    eax,0xa810d5a0
  40fde3:	hlt    
  40fde4:	fstp   DWORD PTR [ebx+eax*2]
  40fde7:	outs   dx,BYTE PTR ds:[esi]
  40fde8:	mov    ss,ecx
  40fdea:	(bad)  
  40fdeb:	push   cs
  40fdec:	retf   
  40fded:	(bad)  
  40fdee:	dec    eax
  40fdef:	std    
  40fdf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdf1:	dec    edi
  40fdf2:	mov    bh,bl
  40fdf4:	xor    eax,0x4d0178a5
  40fdf9:	outs   dx,DWORD PTR ds:[esi]
  40fdfa:	add    BYTE PTR [edx+0x4952890],0x47
  40fe01:	mov    edx,0xa84acddf
  40fe06:	or     eax,0xe675efca
  40fe0b:	out    dx,al
  40fe0c:	sti    
  40fe0d:	(bad)  
  40fe0f:	xor    al,0xb7
  40fe11:	das    
  40fe12:	mov    ch,0x28
  40fe14:	jo     0x40fe13
  40fe16:	adc    al,0x27
  40fe18:	mov    bh,0x78
  40fe1a:	loop   0x40fe80
  40fe1c:	sub    bl,BYTE PTR [ebx-0xe9054bf]
  40fe22:	test   al,0xbf
  40fe24:	jmp    0x40fdc6
  40fe26:	jo     0x40fdee
  40fe28:	fild   DWORD PTR [edi]
  40fe2a:	adc    eax,0xb4ca31dc
  40fe2f:	mov    eax,0x38557f94
  40fe34:	sar    BYTE PTR [ebx],cl
  40fe36:	ret    0x1112
  40fe39:	aaa    
  40fe3a:	mov    bh,0x45
  40fe3c:	mov    ds:0xc2835e46,eax
  40fe41:	in     al,dx
  40fe42:	xor    eax,0x49978620
  40fe47:	inc    esp
  40fe48:	shl    BYTE PTR [ebx+0x70872b15],1
  40fe4e:	lds    ebp,FWORD PTR [edx+ebp*2-0x54951379]
  40fe55:	sbb    DWORD PTR [ebp-0x4d5f01d4],0x996f6886
  40fe5f:	sub    al,0xc5
  40fe61:	xlat   BYTE PTR ds:[ebx]
  40fe62:	sbb    edi,0x49a03f46
  40fe68:	call   0xa31:0x5fd7ebf9
  40fe6f:	pop    eax
  40fe70:	sbb    DWORD PTR [ecx],eax
  40fe72:	pop    edx
  40fe73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe74:	test   BYTE PTR [edx-0x3822f435],0x13
  40fe7b:	fdiv   DWORD PTR [edi]
  40fe7d:	xchg   ebp,eax
  40fe7e:	not    DWORD PTR [edi+ecx*4-0x387fe1db]
  40fe85:	scas   eax,DWORD PTR es:[edi]
  40fe86:	cwde   
  40fe87:	js     0x40fef5
  40fe89:	fstp   QWORD PTR [esi-0x726a29d2]
  40fe8f:	mov    al,ds:0x1537e368
  40fe94:	xchg   ebx,eax
  40fe95:	arpl   WORD PTR [ebp+eax*2-0x3ad22f0a],bx
  40fe9c:	inc    ebp
  40fe9d:	sbb    al,0xbd
  40fe9f:	dec    ecx
  40fea0:	adc    eax,0xd6cab5f7
  40fea5:	xlat   BYTE PTR ds:[ebx]
  40fea6:	xchg   DWORD PTR [esi-0x783d8ed7],eax
  40feac:	xchg   esp,eax
  40fead:	and    DWORD PTR [edx+ebx*1+0x35],ebx
  40feb1:	sub    DWORD PTR [ebx+0x48753120],esi
  40feb7:	into   
  40feb8:	out    dx,al
  40feb9:	ror    edi,0x34
  40febc:	sti    
  40febd:	and    eax,0xba40f922
  40fec2:	rcr    ah,cl
  40fec4:	jbe    0x40feb2
  40fec6:	add    al,0x5f
  40fec8:	sbb    eax,0x89aec6d2
  40fecd:	add    al,0xb1
  40fecf:	or     cx,WORD PTR [ebx-0x608a2dd2]
  40fed6:	lahf   
  40fed7:	pop    esp
  40fed8:	cmp    edi,DWORD PTR [eax+ebx*4]
  40fedb:	sub    ch,dl
  40fedd:	add    bh,BYTE PTR [edi]
  40fedf:	mov    edi,0x1bc58cae
  40fee4:	leave  
  40fee5:	(bad)  
  40fee6:	fcmovnb st,st(4)
  40fee8:	pop    ecx
  40fee9:	inc    esp
  40feea:	adc    cl,BYTE PTR [edi+0x7c87fb5c]
  40fef0:	push   ss
  40fef1:	and    DWORD PTR [ecx+esi*2-0x58cdbf04],edi
  40fef8:	or     al,0xb1
  40fefa:	push   esp
  40fefb:	hlt    
  40fefc:	icebp  
  40fefd:	and    DWORD PTR [esi],esi
  40feff:	loop   0x40ff51
  40ff01:	dec    ebx
  40ff02:	dec    ebx
  40ff03:	xor    edi,DWORD PTR [esi]
  40ff05:	xchg   ebp,ebx
  40ff07:	ret    0x619c
  40ff0a:	add    eax,DWORD PTR [ecx+0x29]
  40ff0d:	add    al,0x8f
  40ff0f:	vhaddpd xmm5,xmm1,XMMWORD PTR [eax+0x62e15113]
  40ff17:	adc    BYTE PTR [edx],bl
  40ff19:	aas    
  40ff1a:	dec    ecx
  40ff1b:	out    0x84,al
  40ff1d:	(bad)  [edx-0x520e641c]
  40ff23:	jmp    0x40feba
  40ff25:	icebp  
  40ff26:	addr16 int3 
  40ff28:	(bad)  
  40ff29:	cli    
  40ff2a:	data16 and BYTE PTR [eax],0x18
  40ff2e:	push   ebx
  40ff2f:	xor    edi,DWORD PTR [ecx+0x16]
  40ff32:	cwde   
  40ff33:	leave  
  40ff34:	das    
  40ff35:	gs ins DWORD PTR es:[edi],dx
  40ff37:	(bad)  
  40ff38:	or     DWORD PTR [bp+di-0x4],esp
  40ff3c:	dec    esi
  40ff3d:	test   DWORD PTR [ebp-0x2d934cc8],ebp
  40ff43:	nop
  40ff44:	and    al,0x77
  40ff46:	cdq    
  40ff47:	and    BYTE PTR [esi],0x3b
  40ff4a:	out    0xb4,al
  40ff4c:	jmp    0xd05d:0xd793cbf2
  40ff53:	jo     0x40ff60
  40ff55:	and    al,0x16
  40ff57:	pop    edx
  40ff58:	push   ds
  40ff59:	and    eax,DWORD PTR [esi]
  40ff5b:	or     DWORD PTR [edi],edx
  40ff5d:	add    eax,0x4736b667
  40ff62:	jns    0x40ff7f
  40ff64:	gs push edi
  40ff66:	jmp    FWORD PTR [edx]
  40ff68:	xchg   bx,ax
  40ff6a:	mov    ah,0x64
  40ff6c:	mov    dl,0x86
  40ff6e:	xchg   ebp,eax
  40ff6f:	lds    eax,FWORD PTR [edx-0x11]
  40ff72:	jmp    0x87182547
  40ff77:	mov    eax,0x83e1953c
  40ff7c:	ret    
  40ff7d:	sub    esp,edx
  40ff7f:	cld    
  40ff80:	xor    al,0x6e
  40ff82:	add    BYTE PTR [ebx+0x6aeadd55],0x22
  40ff89:	jmp    0x58fc89e7
  40ff8e:	push   ecx
  40ff8f:	aaa    
  40ff90:	inc    esp
  40ff91:	addr16 inc ebp
  40ff93:	nop
  40ff94:	mov    BYTE PTR [ecx+0x7cfc4daf],bh
  40ff9a:	cdq    
  40ff9b:	in     al,0xdf
  40ff9d:	cmp    eax,0x786c988b
  40ffa2:	inc    eax
  40ffa3:	add    eax,0x80c83f3b
  40ffa8:	dec    ebx
  40ffa9:	push   ds
  40ffaa:	xchg   ebx,eax
  40ffab:	in     eax,0x33
  40ffad:	test   eax,0x540f72ac
  40ffb2:	loop   0x40ff3c
  40ffb4:	js     0x41002e
  40ffb6:	cld    
  40ffb7:	outs   dx,BYTE PTR ds:[esi]
  40ffb8:	in     eax,dx
  40ffb9:	inc    eax
  40ffba:	jae    0x40ff7c
  40ffbc:	lea    esp,[ebp+0x7e4980c8]
  40ffc2:	push   es
  40ffc3:	pop    ecx
  40ffc4:	popf   
  40ffc5:	aas    
  40ffc6:	(bad)  
  40ffc7:	test   BYTE PTR [ecx-0x36],0xa4
  40ffcb:	iret   
  40ffcc:	sbb    al,0x37
  40ffce:	sub    ebx,DWORD PTR [edx+ebp*2-0x4c]
  40ffd2:	or     eax,0x4e6513e4
  40ffd7:	neg    BYTE PTR [edi-0x47cc6b0]
  40ffdd:	cli    
  40ffde:	icebp  
  40ffdf:	and    DWORD PTR [ebp-0x61],edx
  40ffe2:	jecxz  0x410031
  40ffe4:	in     al,dx
  40ffe5:	hlt    
  40ffe6:	pop    esi
  40ffe7:	dec    bl
  40ffe9:	mov    eax,0x5c14b615
  40ffee:	test   ebx,edx
  40fff0:	int    0xc4
  40fff2:	pusha  
  40fff3:	inc    edx
  40fff4:	fwait
  40fff5:	sbb    edi,edi
  40fff7:	mov    DWORD PTR [edx+0x3f],ebx
  40fffa:	sub    DWORD PTR [ecx+0x1f],ebp
  40fffd:	ret    0x8edd
  410000:	repz add edi,DWORD PTR [edx-0x661a240c]
  410007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410008:	outs   dx,DWORD PTR ds:[esi]
  410009:	scas   al,BYTE PTR es:[edi]
  41000a:	xchg   esi,eax
  41000b:	gs dec ebx
  41000d:	stc    
  41000e:	femms  
  410010:	pop    es
  410011:	shr    dh,0x3
  410014:	fisubr DWORD PTR ds:0xe2d35fb8
  41001a:	and    bl,BYTE PTR [eax+0x40]
  41001d:	xor    al,0x10
  41001f:	in     eax,0xe4
  410021:	or     ebx,DWORD PTR ds:0x14510e30
  410027:	mov    ebx,0xea585ce7
  41002c:	pusha  
  41002d:	mov    ch,0x49
  41002f:	lods   eax,DWORD PTR ds:[esi]
  410030:	dec    edx
  410031:	add    DWORD PTR fs:[eax+0x6566796b],0x327b8b6a
  41003c:	xchg   ebp,eax
  41003d:	cmp    BYTE PTR [ebp-0x1c01b24],bl
  410043:	sti    
  410044:	jle    0x410068
  410046:	aas    
  410047:	mov    ebx,gs
  410049:	in     al,dx
  41004a:	ficomp DWORD PTR [esi-0x47]
  41004d:	and    esp,0xac50877c
  410053:	xchg   BYTE PTR [edx],ah
  410055:	aad    0xc3
  410057:	mov    bh,0xa9
  410059:	add    BYTE PTR [ebp-0x6e4f5c26],0xe4
  410060:	sub    edi,DWORD PTR [ebp+0x2b]
  410063:	aaa    
  410064:	test   DWORD PTR [eax],eax
  410066:	das    
  410067:	nop
  410068:	stc    
  410069:	mov    ebp,0xf55ce58f
  41006e:	repnz imul esi,DWORD PTR [eax-0x2db5eae5],0x393224e2
  410079:	leave  
  41007a:	adc    eax,DWORD PTR [edx+0x1ee87964]
  410080:	adc    bh,bl
  410082:	data16 std 
  410084:	aam    0x8c
  410086:	jo     0x410048
  410088:	jp     0x4100df
  41008a:	mul    DWORD PTR [ebp+ebx*2+0x2fa2efca]
  410091:	shr    BYTE PTR [edx],1
  410093:	repnz lods al,BYTE PTR ds:[esi]
  410095:	xor    dl,al
  410097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410098:	lea    edi,[eax+ebp*4+0x55390ac]
  41009f:	pop    DWORD PTR [esp+edx*1-0xf]
  4100a3:	ss sub al,0xcc
  4100a6:	xlat   BYTE PTR ds:[ebx]
  4100a7:	dec    ebx
  4100a8:	cmp    al,0x24
  4100aa:	jnp    0x410086
  4100ac:	lea    esi,[ecx-0x6c8d4192]
  4100b2:	mov    eax,ds:0xc80e8c4f
  4100b7:	push   es
  4100b8:	pop    ecx
  4100b9:	mov    ebx,0x945440f1
  4100be:	mov    ?,esp
  4100c0:	jae    0x4100c3
  4100c2:	shr    BYTE PTR [edi],1
  4100c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100c5:	adc    BYTE PTR [ecx-0x27],0x22
  4100c9:	xor    BYTE PTR [edi+edi*2-0x6e44d461],cl
  4100d0:	jb     0x4100e2
  4100d2:	ins    BYTE PTR es:[edi],dx
  4100d3:	out    0xf1,al
  4100d5:	test   BYTE PTR [edx+eiz*1-0x13],al
  4100d9:	test   eax,0x594717b6
  4100de:	and    DWORD PTR ds:0x29d7a68f,0x498da3cd
  4100e8:	and    eax,0x7e0c9d61
  4100ed:	fs or  bl,cl
  4100f0:	repz clc 
  4100f2:	add    eax,0x2cd2175e
  4100f7:	xchg   ebx,eax
  4100f8:	adc    eax,0x2492e003
  4100fd:	pop    ecx
  4100fe:	push   edx
  4100ff:	xchg   ecx,eax
  410100:	ret    0x99a4
  410103:	aad    0xc6
  410105:	pop    eax
  410106:	test   al,0xe5
  410108:	test   BYTE PTR [ebp-0x48117b2],0x2f
  41010f:	std    
  410110:	(bad)  
  410112:	push   0xffffffc9
  410114:	inc    edx
  410115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410116:	or     al,0xad
  410118:	sbb    eax,0x8022e0c6
  41011d:	inc    esp
  41011e:	fidivr DWORD PTR ds:0x61458f06
  410124:	jecxz  0x41011a
  410126:	inc    ecx
  410127:	dec    ecx
  410128:	ficom  WORD PTR [edx+0x370b109c]
  41012e:	out    dx,eax
  41012f:	mov    esi,0x93cce785
  410134:	inc    edi
  410135:	inc    edi
  410136:	das    
  410137:	iret   
  410138:	(bad)  
  410139:	and    dl,BYTE PTR ds:0x32876451
  41013f:	push   eax
  410140:	int    0x1e
  410142:	or     DWORD PTR [edx+0x5049c99f],esp
  410148:	arpl   WORD PTR [ebx],si
  41014a:	addr16 mov cl,0xa8
  41014d:	and    ecx,ecx
  41014f:	push   esi
  410150:	cwde   
  410151:	inc    esi
  410152:	cmp    al,BYTE PTR [eax]
  410154:	inc    ecx
  410155:	fadd   QWORD PTR [ebx+0x0]
  410158:	mov    edi,0xde87c6c9
  41015d:	push   cs
  41015e:	and    edx,DWORD PTR [edi]
  410160:	inc    eax
  410161:	lahf   
  410162:	ret    
  410163:	cmp    dh,BYTE PTR [eax+0xf6a8ffa]
  410169:	(bad)  
  41016b:	pop    ebp
  41016c:	pop    ds
  41016d:	sub    ch,BYTE PTR [ecx-0x55]
  410170:	or     bl,BYTE PTR [edx]
  410172:	mov    ch,BYTE PTR [eax-0x13e0c510]
  410178:	adc    edx,ebp
  41017a:	shl    BYTE PTR [edi-0x6ebd7e76],1
  410180:	stos   BYTE PTR es:[di],al
  410182:	inc    eax
  410183:	adc    DWORD PTR [eax+0x2a410c9b],edx
  410189:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41018a:	inc    esp
  41018b:	pop    esi
  41018c:	sub    cl,BYTE PTR [edi]
  41018e:	retf   0x8b14
  410191:	sub    esp,ebx
  410193:	mov    ebx,0x7caf3929
  410198:	fist   DWORD PTR [edx]
  41019a:	sub    DWORD PTR [ecx+0x30d961f8],edi
  4101a0:	xor    BYTE PTR [edi-0x39],bl
  4101a3:	sbb    eax,0x86d4822
  4101a8:	jno    0x410211
  4101aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101ab:	dec    edx
  4101ac:	in     al,0xa8
  4101ae:	ins    DWORD PTR es:[edi],dx
  4101af:	xor    BYTE PTR [edi+ebx*1-0x6e],cl
  4101b3:	mov    BYTE PTR [esi-0x5c],al
  4101b6:	jae    0x410193
  4101b8:	jmp    0x41013c
  4101ba:	mov    dh,0xb5
  4101bc:	scas   eax,DWORD PTR es:[edi]
  4101bd:	or     bl,BYTE PTR [ebx-0x7bc3a4e4]
  4101c3:	out    0x6e,eax
  4101c5:	mov    ebp,0xb19b4bbc
  4101ca:	pop    edx
  4101cb:	push   ds
  4101cc:	sar    BYTE PTR [eax],1
  4101ce:	inc    ecx
  4101cf:	push   eax
  4101d0:	ror    dh,cl
  4101d2:	or     ebx,DWORD PTR [eax+0x6a]
  4101d5:	outs   dx,BYTE PTR ds:[esi]
  4101d6:	add    BYTE PTR ds:0x8094123b,bl
  4101dc:	sub    esp,ecx
  4101de:	pop    eax
  4101df:	iret   
  4101e0:	shl    BYTE PTR [ebx+eiz*8-0x6e],1
  4101e4:	pop    edi
  4101e5:	jne    0x410181
  4101e7:	add    ecx,ecx
  4101e9:	cwde   
  4101ea:	jmp    0x41019e
  4101ec:	inc    ch
  4101ee:	pusha  
  4101ef:	(bad)  
  4101f0:	(bad)  
  4101f1:	sub    ebp,ecx
  4101f3:	and    BYTE PTR [ebx+ebp*4-0x7],0x88
  4101f8:	or     al,0x1
  4101fa:	xchg   DWORD PTR ds:[ebx],eax
  4101fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101fe:	fcomp  DWORD PTR [edi-0x7b]
  410201:	mov    dl,0x4
  410203:	bound  ebx,QWORD PTR [edi+esi*8-0x33]
  410207:	mov    dh,cl
  410209:	xor    BYTE PTR [ebx],ch
  41020b:	enter  0x3e64,0xdb
  41020f:	dec    ebp
  410210:	and    al,0x30
  410212:	jo     0x41028d
  410214:	test   edx,esi
  410216:	mov    cl,0xa5
  410218:	pop    ss
  410219:	pop    esi
  41021a:	inc    edx
  41021b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41021c:	xlat   BYTE PTR ds:[ebx]
  41021d:	sar    DWORD PTR [ebx+0x2f0ecf55],1
  410223:	mov    dh,0x60
  410225:	arpl   WORD PTR ds:0x6dff7849,di
  41022b:	mov    WORD PTR [ebx],?
  41022d:	xchg   esp,eax
  41022e:	pusha  
  41022f:	jnp    0x410213
  410231:	call   0x86143411
  410236:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410237:	imul   edx
  410239:	in     eax,0x74
  41023b:	shl    DWORD PTR [ebx],0x56
  41023e:	retf   0xb813
  410241:	sbb    eax,DWORD PTR [ecx+0x703025be]
  410247:	arpl   WORD PTR [edi],cx
  410249:	push   ss
  41024a:	lods   al,BYTE PTR ds:[esi]
  41024b:	inc    edi
  41024c:	and    al,al
  41024e:	jbe    0x410264
  410250:	pop    ds
  410251:	out    0x29,al
  410253:	pop    esi
  410254:	(bad)  
  410255:	sub    eax,0xdb1229db
  41025a:	xor    cl,BYTE PTR [esi]
  41025c:	dec    ebp
  41025d:	mov    DWORD PTR [esi+edx*1+0x3d],ecx
  410261:	aam    0x81
  410263:	cmc    
  410264:	push   edx
  410265:	ret    0xfe11
  410268:	mov    ds:0x5b3fbed,eax
  41026d:	inc    esi
  41026e:	fnstcw WORD PTR [eax-0x2d]
  410271:	dec    edi
  410272:	mov    ebp,0xa8253d86
  410277:	mov    bl,0xd5
  410279:	add    eax,0xefeaada
  41027e:	sub    al,0x77
  410280:	push   es
  410281:	mov    bl,bl
  410283:	add    al,0xde
  410285:	pop    ecx
  410286:	jns    0x4102a4
  410288:	inc    ebx
  410289:	adc    BYTE PTR [edx],bl
  41028b:	xchg   DWORD PTR [ebp-0x13],edi
  41028e:	fstp   TBYTE PTR [eax+0x55]
  410291:	fs jge 0x4102ef
  410294:	or     ch,al
  410296:	adc    edi,edi
  410298:	sbb    ecx,DWORD PTR [edi]
  41029a:	pop    ecx
  41029b:	(bad)  
  41029c:	jp     0x4102ce
  41029e:	cld    
  41029f:	inc    edi
  4102a0:	sub    eax,0xe71f0b87
  4102a5:	jnp    0x410286
  4102a7:	jge    0x4102eb
  4102a9:	mov    ds:0x77f8ec63,eax
  4102ae:	or     BYTE PTR [edi+0x42ff5b7d],bl
  4102b4:	mov    esi,0xdf6275d6
  4102b9:	stc    
  4102ba:	repz push ebx
  4102bc:	dec    DWORD PTR [ebx-0x39]
  4102bf:	iret   
  4102c0:	mov    bh,0x86
  4102c2:	pop    edx
  4102c3:	push   es
  4102c4:	mov    bh,0x11
  4102c6:	gs gs fcmovnu st,st(0)
  4102ca:	pushf  
  4102cb:	lods   al,BYTE PTR ds:[esi]
  4102cc:	pop    edx
  4102cd:	xor    eax,0x3b141747
  4102d2:	cdq    
  4102d3:	pop    ds
  4102d4:	call   FWORD PTR [esi+0x15]
  4102d7:	xor    bl,BYTE PTR [esi-0x65]
  4102da:	inc    eax
  4102db:	addr16 lahf 
  4102dd:	call   0x5625ab02
  4102e2:	mov    edi,ebx
  4102e4:	push   edi
  4102e5:	mov    esp,?
  4102e7:	(bad)  
  4102e8:	cwde   
  4102e9:	xchg   ecx,eax
  4102ea:	xchg   edx,eax
  4102eb:	inc    ebx
  4102ec:	out    0x9e,eax
  4102ee:	add    BYTE PTR [ebx+0xe590426],dh
  4102f4:	leave  
  4102f5:	nop
  4102f6:	cmp    eax,0xbc80e2f7
  4102fb:	sbb    esp,ecx
  4102fd:	mov    al,cs:0x85c62c77
  410303:	add    ah,bl
  410305:	in     eax,0x4a
  410307:	adc    eax,0x43ae32e6
  41030c:	in     al,dx
  41030d:	fnstenv [edx+0x39]
  410310:	push   0xffffffe4
  410312:	inc    eax
  410313:	lds    esi,FWORD PTR [esi-0x75f042f5]
  410319:	data16 sti 
  41031b:	push   ds
  41031c:	push   esi
  41031d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41031e:	das    
  41031f:	nop
  410320:	jb     0x41036c
  410322:	adc    DWORD PTR [edi],esp
  410324:	jb     0x4102ee
  410326:	test   DWORD PTR [ecx+0x4b],edx
  410329:	adc    al,0xaa
  41032b:	fcomp  QWORD PTR [edx-0x25c1f959]
  410331:	and    ch,BYTE PTR [ecx+0x4ecc486f]
  410337:	ret    0x342a
  41033a:	repz sub BYTE PTR [edx+0x6dc1be70],dl
  410341:	mov    dl,BYTE PTR [ebx+0x1b]
  410344:	jle    0x4103a9
  410346:	ja     0x41031f
  410348:	add    esp,DWORD PTR [edx+0x5d]
  41034b:	xchg   DWORD PTR gs:[ebx],ebx
  41034e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41034f:	mov    al,ds:0xc1010db8
  410354:	dec    eax
  410355:	sub    ch,BYTE PTR [edi+0x75b40c97]
  41035b:	push   cs
  41035c:	inc    esp
  41035d:	repz fiadd DWORD PTR [edi-0x68]
  410361:	lock add DWORD PTR [esi-0x63104452],edx
  410368:	lock adc al,0xdd
  41036b:	add    eax,DWORD PTR [ecx+0x16]
  41036e:	fcomp  QWORD PTR [edi+0x6b20291f]
  410374:	aam    0x9
  410376:	push   ss
  410377:	popa   
  410378:	sbb    DWORD PTR [esi],eax
  41037a:	xor    eax,0x2d8c6f0
  41037f:	xor    al,0x15
  410381:	(bad)  
  410382:	and    ch,ah
  410384:	mov    ds,WORD PTR [edx]
  410386:	loop   0x410395
  410388:	es push ebp
  41038a:	xor    ch,dh
  41038c:	fisub  WORD PTR [eax+0x55]
  41038f:	ins    BYTE PTR es:[edi],dx
  410390:	fst    QWORD PTR [ecx-0x3a]
  410393:	icebp  
  410394:	ficom  WORD PTR [ecx-0x5c6b550b]
  41039a:	jmp    0xa86f797
  41039f:	mov    eax,0x65ba6b39
  4103a4:	shl    BYTE PTR [edx],cl
  4103a6:	jne    0x4103d5
  4103a8:	loop   0x4103b0
  4103aa:	cwde   
  4103ab:	pop    ds
  4103ac:	adc    al,0x64
  4103ae:	adc    DWORD PTR [edi+0x7c23f1bb],0xec654ca0
  4103b8:	mov    esp,0x3ff4a197
  4103bd:	and    ch,BYTE PTR [ebx-0x5c]
  4103c0:	mov    bl,0x4b
  4103c2:	add    eax,DWORD PTR [edx+ecx*1]
  4103c5:	pop    edi
  4103c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103c7:	cld    
  4103c8:	sbb    DWORD PTR [ecx],ecx
  4103ca:	cmp    eax,0x6e988997
  4103cf:	ins    DWORD PTR es:[edi],dx
  4103d0:	iret   
  4103d1:	das    
  4103d2:	mov    ebx,0x38a1e7fc
  4103d7:	sub    eax,0x33736f30
  4103dc:	in     al,0x82
  4103de:	repz sbb dl,cl
  4103e1:	push   ecx
  4103e2:	pop    es
  4103e3:	adc    esi,edi
  4103e5:	cdq    
  4103e6:	mov    ch,0xf5
  4103e8:	push   esi
  4103e9:	dec    edi
  4103ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103eb:	mov    eax,0x841d41fd
  4103f0:	ins    BYTE PTR es:[edi],dx
  4103f1:	out    0xbe,al
  4103f3:	stos   DWORD PTR es:[edi],eax
  4103f4:	scas   eax,DWORD PTR es:[edi]
  4103f5:	nop
  4103f6:	ins    BYTE PTR es:[edi],dx
  4103f7:	push   eax
  4103f8:	rol    BYTE PTR [ecx-0x7761f1b2],0x1e
  4103ff:	xchg   ebx,eax
  410400:	xchg   DWORD PTR [edx-0x27df86e9],edi
  410406:	pop    esi
  410407:	cmc    
  410408:	ins    BYTE PTR es:[edi],dx
  410409:	pop    esp
  41040a:	cli    
  41040b:	dec    esp
  41040c:	inc    esi
  41040d:	cli    
  41040e:	adc    eax,0x404bb310
  410413:	jno    0x41041a
  410415:	or     esp,DWORD PTR [edi-0x209f0213]
  41041b:	push   cs
  41041c:	stos   DWORD PTR es:[edi],eax
  41041d:	cld    
  41041e:	jbe    0x4103a2
  410420:	rcr    ecx,1
  410422:	or     eax,0xb035d8fd
  410427:	jbe    0x4103d3
  410429:	imul   ebx,eax,0xffffffa6
  41042c:	test   eax,0xeec3e37c
  410431:	stos   BYTE PTR es:[edi],al
  410432:	cmp    eax,0xe55d7070
  410437:	dec    esp
  410438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410439:	inc    ebp
  41043a:	xrelease mov BYTE PTR [esi],bh
  41043d:	popa   
  41043e:	xor    al,0xef
  410440:	retf   0x669d
  410443:	and    ah,BYTE PTR [ebp+ebp*1-0x7d]
  410447:	dec    ebx
  410448:	jbe    0x410477
  41044a:	or     ebp,DWORD PTR [ebx+0x237941e4]
  410450:	mov    al,0x87
  410452:	cwde   
  410453:	adc    ebx,ecx
  410455:	inc    DWORD PTR [esi+0x58]
  410458:	jg     0x410488
  41045a:	call   0x6b8d:0xbf0d782f
  410461:	sbb    BYTE PTR [eax+eiz*4+0x6fc37ed9],ah
  410468:	fadd   st,st(4)
  41046a:	sbb    bl,BYTE PTR [edi+0x66847d1c]
  410470:	rol    edi,cl
  410472:	(bad)  
  410474:	cmp    BYTE PTR [ecx-0x7ee91048],bl
  41047a:	jge    0x41043a
  41047c:	or     al,BYTE PTR [edx+0x50a716ae]
  410482:	loopne 0x4104b5
  410484:	ins    DWORD PTR es:[edi],dx
  410485:	pop    es
  410486:	popa   
  410487:	xor    eax,0x8d859578
  41048c:	or     dl,bl
  41048e:	xchg   edi,eax
  41048f:	sub    dl,BYTE PTR [eax]
  410491:	in     eax,dx
  410492:	jb     0x4104a6
  410494:	mov    dl,0x52
  410496:	aas    
  410497:	pop    esi
  410498:	retf   0xa81f
  41049b:	inc    ebx
  41049c:	jne    0x410430
  41049e:	dec    ecx
  4104a0:	sub    eax,0x9b8535a6
  4104a5:	jnp    0x410478
  4104a7:	out    dx,eax
  4104a8:	push   eax
  4104a9:	or     ebp,DWORD PTR [edi-0x60]
  4104ac:	sub    al,0x9a
  4104ae:	dec    ebx
  4104af:	stc    
  4104b0:	or     eax,esp
  4104b2:	in     al,0x4
  4104b4:	add    eax,0xef222cf
  4104b9:	pop    ss
  4104ba:	pop    edi
  4104bb:	les    esp,FWORD PTR [ecx+eax*8]
  4104be:	dec    esp
  4104bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104c0:	adc    DWORD PTR [eax-0x45],esp
  4104c3:	out    0x46,eax
  4104c5:	sub    al,ch
  4104c7:	adc    al,0x32
  4104c9:	xchg   ebx,eax
  4104ca:	cli    
  4104cb:	je     0x41053b
  4104cd:	and    bh,BYTE PTR [ebx+0x26]
  4104d0:	call   0x57cdd4f4
  4104d5:	leave  
  4104d6:	push   0x6f
  4104d8:	ret    0x1f59
  4104db:	gs fsub st(6),st
  4104de:	(bad)  
  4104df:	iret   
  4104e0:	jle    0x4104e5
  4104e2:	gs adc al,0xa2
  4104e5:	dec    ebp
  4104e6:	call   0x7baa:0xfce9b2ce
  4104ed:	fist   WORD PTR [ebx-0x11]
  4104f0:	jae    0x410546
  4104f2:	mov    al,0x36
  4104f4:	(bad)  
  4104f5:	std    
  4104f6:	push   edi
  4104f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104f8:	lahf   
  4104f9:	scas   al,BYTE PTR es:[edi]
  4104fa:	xchg   BYTE PTR [edx],dh
  4104fc:	push   0x5a
  4104fe:	jnp    0x41050b
  410500:	lea    edi,[ebp+0x6f29fdd1]
  410506:	push   ebp
  410507:	mov    eax,0x51f84d17
  41050c:	fs xchg edx,eax
  41050e:	jl     0x410532
  410510:	js     0x410536
  410512:	pop    ebx
  410513:	imul   esi,DWORD PTR [edi],0xffffffb1
  410516:	dec    ebx
  410517:	dec    eax
  410518:	lahf   
  410519:	(bad)  
  41051a:	retf   
  41051b:	stos   DWORD PTR es:[edi],eax
  41051c:	add    BYTE PTR [edi+0xe],bh
  41051f:	inc    edx
  410520:	cdq    
  410521:	popa   
  410522:	sbb    DWORD PTR [edx-0x2c],eax
  410525:	adc    al,0xaf
  410527:	mov    ah,0x1b
  410529:	push   edi
  41052a:	push   es
  41052b:	xchg   edx,eax
  41052c:	nop
  41052d:	add    bh,bl
  41052f:	les    edi,FWORD PTR [esi+0x1eab4042]
  410535:	ds push esi
  410537:	mov    DWORD PTR [edx+0x32],edi
  41053a:	pop    edx
  41053b:	jge    0x41053e
  41053d:	xor    BYTE PTR [ebp+0x4b],ch
  410540:	jns    0x4104e7
  410542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410543:	clc    
  410544:	adc    BYTE PTR [esi],bl
  410546:	adc    ebx,esi
  410548:	xor    al,BYTE PTR [esi-0x10c70d25]
  41054e:	icebp  
  41054f:	xor    eax,0xa9e34966
  410555:	icebp  
  410556:	(bad)  
  410557:	aaa    
  410558:	shl    DWORD PTR [esp+eax*1-0x1c],cl
  41055c:	ja     0x41055e
  41055e:	ror    ah,cl
  410560:	cmove  esi,DWORD PTR [edx]
  410563:	and    DWORD PTR [edi-0x5a8dd6a7],ecx
  410569:	rcl    DWORD PTR [edx],0xfa
  41056c:	add    DWORD PTR [edx+ebx*4+0x18e4a814],0x53
  410574:	nop
  410575:	scas   al,BYTE PTR es:[edi]
  410576:	mov    ch,0x8a
  410578:	dec    ebx
  410579:	ror    DWORD PTR ss:[esi],1
  41057c:	pop    ds
  41057d:	mov    ebp,0x19233cda
  410582:	scas   ax,WORD PTR es:[edi]
  410584:	test   BYTE PTR [esp+ebx*1+0xac3a186],cl
  41058b:	pop    ecx
  41058c:	push   eax
  41058d:	(bad)  
  41058e:	arpl   bp,ax
  410590:	lods   eax,DWORD PTR ds:[esi]
  410591:	mov    ebp,0x23fc3c8d
  410596:	scas   eax,DWORD PTR es:[edi]
  410597:	aam    0x9
  410599:	cmp    eax,0xb679d6b4
  41059e:	pop    esi
  41059f:	ror    DWORD PTR [ebx-0x2f],0x30
  4105a3:	inc    esp
  4105a4:	sub    bh,BYTE PTR [edi]
  4105a6:	(bad)  
  4105a7:	icebp  
  4105a8:	data16 xor al,0x27
  4105ab:	scas   eax,DWORD PTR es:[edi]
  4105ac:	stos   DWORD PTR es:[edi],eax
  4105ad:	clc    
  4105ae:	mov    eax,0x2f187a57
  4105b3:	adc    al,0x1b
  4105b5:	and    DWORD PTR [eax+eax*1-0x7c],edx
  4105b9:	xor    BYTE PTR [ebx+edi*2-0x13],dh
  4105bd:	mov    ch,0x6c
  4105bf:	adc    eax,0xa7055a1c
  4105c4:	and    DWORD PTR fs:[esi],ecx
  4105c7:	pop    ebx
  4105c8:	and    BYTE PTR [edx+0x68368e3e],ch
  4105ce:	add    DWORD PTR [ebx-0x5b],edx
  4105d1:	test   eax,0xc2937058
  4105d6:	cmp    dh,BYTE PTR [ecx-0x79]
  4105d9:	scas   al,BYTE PTR es:[edi]
  4105da:	les    ecx,FWORD PTR [edx+esi*2+0x41e74e86]
  4105e1:	div    edi
  4105e3:	mov    edi,0xf97aea73
  4105e8:	or     eax,0x5e494d9e
  4105ed:	adc    al,bh
  4105ef:	pop    esp
  4105f0:	repz xchg ebp,eax
  4105f2:	stc    
  4105f3:	push   edx
  4105f4:	das    
  4105f5:	cmp    DWORD PTR [ecx+0x4212ee46],0x2cce0b1d
  4105ff:	jae    0x410651
  410601:	out    0x91,al
  410603:	out    dx,al
  410604:	(bad)  
  410605:	(bad)  
  410607:	sbb    al,0xb5
  410609:	cmp    BYTE PTR [edx+0xc0f07b8],cl
  41060f:	out    dx,al
  410610:	call   0x8b90:0x8b5b22c9
  410617:	or     eax,0x79f2a793
  41061c:	int3   
  41061d:	jg     0x4105f9
  41061f:	adc    DWORD PTR [ebx-0x46b9c3d6],eax
  410625:	test   BYTE PTR [ebx-0x1e486b0],cl
  41062b:	sub    al,0xfa
  41062d:	inc    ebp
  41062e:	push   ecx
  41062f:	xchg   ecx,eax
  410630:	cdq    
  410631:	test   al,bl
  410633:	pop    esi
  410634:	pop    edi
  410635:	sti    
  410636:	ss mov bl,ch
  410639:	push   edi
  41063a:	cmc    
  41063b:	lahf   
  41063c:	xor    al,0x59
  41063e:	dec    edi
  41063f:	pop    ebp
  410640:	loop   0x410687
  410642:	call   0x81b6:0x3da43cea
  410649:	dec    esi
  41064a:	lea    esi,[esi-0x508b05e6]
  410650:	xchg   esp,eax
  410651:	and    BYTE PTR ds:0x6647d84a,bh
  410657:	sbb    BYTE PTR [ecx+esi*2-0x531a8],dl
  41065e:	mov    edi,0x4af78d23
  410663:	out    0xc1,al
  410665:	xor    BYTE PTR [edi-0x15c16696],dl
  41066b:	xchg   edi,eax
  41066c:	js     0x410629
  41066e:	sub    BYTE PTR [edi+0x13],ah
  410671:	(bad)
  410674:	mov    esi,0xaed50db7
  410679:	xor    al,0xc9
  41067b:	clc    
  41067c:	aad    0x8c
  41067e:	cmp    al,0xd5
  410680:	add    al,0x97
  410682:	cdq    
  410683:	mov    bl,ch
  410685:	ret    0x93c3
  410688:	popf   
  410689:	mov    dh,ch
  41068b:	mov    edx,DWORD PTR [ecx-0x1d1c7cae]
  410691:	push   eax
  410692:	cmp    ch,BYTE PTR ds:0xef288fc6
  410698:	ins    BYTE PTR es:[edi],dx
  410699:	or     eax,0xa157f2f3
  41069e:	or     BYTE PTR [ebp+0xb00e39a],bh
  4106a4:	lock xchg DWORD PTR [edi-0x1e2f0db3],ebp
  4106ab:	idiv   DWORD PTR [ebp-0x52]
  4106ae:	cmp    al,0x89
  4106b0:	fidiv  WORD PTR [edi]
  4106b2:	mov    cl,BYTE PTR ss:[ebx]
  4106b5:	adc    BYTE PTR [ebx+0x49],ah
  4106b8:	call   0xe2ad:0xaa40349e
  4106bf:	xchg   edx,eax
  4106c0:	ds inc ebx
  4106c2:	in     al,0xc9
  4106c4:	mov    al,ds:0xad55c2a1
  4106c9:	scas   eax,DWORD PTR es:[edi]
  4106ca:	push   edi
  4106cb:	out    dx,al
  4106cc:	and    al,0xa9
  4106ce:	sbb    dl,cl
  4106d0:	dec    ecx
  4106d1:	ror    DWORD PTR [ecx+0x435dd9d3],0x26
  4106d8:	cmp    eax,0x69421057
  4106dd:	xor    al,0x1e
  4106df:	mov    eax,0x144714cb
  4106e4:	cmp    eax,0xd64e6c1f
  4106e9:	scas   al,BYTE PTR es:[edi]
  4106ea:	and    eax,0x4034a2c0
  4106ef:	xor    al,BYTE PTR [eax]
  4106f1:	inc    ebx
  4106f2:	pop    esp
  4106f3:	fwait
  4106f4:	loope  0x41076e
  4106f6:	xchg   esi,eax
  4106f7:	or     BYTE PTR [ecx+0x298bc073],0x84
  4106fe:	inc    eax
  4106ff:	push   edx
  410700:	out    0x0,al
  410702:	mov    dh,al
  410704:	ja     0x41072e
  410706:	dec    ebp
  410707:	sbb    BYTE PTR [edi-0x62],al
  41070a:	das    
  41070b:	lds    edx,FWORD PTR [esi+0x78]
  41070e:	sbb    BYTE PTR [ebx+0x79],al
  410711:	xor    al,0xd0
  410713:	ret    
  410714:	adc    BYTE PTR [eax+0x5],ch
  410717:	sub    ebp,eax
  410719:	jnp    0x41078b
  41071b:	int    0xee
  41071d:	jbe    0x410720
  41071f:	dec    ecx
  410720:	pusha  
  410721:	jecxz  0x4106be
  410723:	jle    0x41074a
  410725:	sbb    DWORD PTR [ebx],ecx
  410727:	sbb    al,0x65
  410729:	or     BYTE PTR [ebx+eiz*4+0x5],0xf
  41072e:	sbb    edx,DWORD PTR [eax-0x575127c2]
  410734:	push   0xcc8fd282
  410739:	ret    0xfecc
  41073c:	clc    
  41073d:	mov    edi,0x6122c2f
  410742:	jns    0x4107c2
  410744:	ja     0x4107ac
  410746:	mov    DWORD PTR [bp+si-0x1b],eax
  41074a:	mov    esi,0x76d3b76d
  41074f:	in     eax,0x87
  410751:	sub    cx,WORD PTR [esi+eax*8]
  410755:	loopne 0x410752
  410757:	mov    bh,0xb
  410759:	fmul   DWORD PTR [edi+0x28]
  41075c:	sti    
  41075d:	add    DWORD PTR [ecx+0x22],esi
  410760:	gs jno 0x410732
  410763:	and    eax,0x7e8fe331
  410768:	idiv   edx
  41076a:	jo     0x41071b
  41076c:	out    dx,al
  41076d:	mov    al,0x5e
  41076f:	cmp    BYTE PTR [edi],dh
  410771:	sti    
  410772:	mov    al,ds:0xffbc0524
  410777:	stc    
  410778:	(bad)  
  410779:	xchg   edi,eax
  41077a:	repz jmp 0x41074e
  41077d:	xor    DWORD PTR [ebp+0x27cccc8b],ebp
  410783:	sub    DWORD PTR [ebp-0x23],ecx
  410786:	mov    eax,ds:0x5f5a4a11
  41078b:	mov    ?,WORD PTR [ebp-0x1070d728]
  410791:	push   es
  410792:	jg     0x4107cd
  410794:	pop    ebx
  410795:	pop    eax
  410796:	je     0x410762
  410798:	pop    ecx
  410799:	mov    WORD PTR [edx],?
  41079b:	xchg   ebp,eax
  41079c:	add    eax,0xe20e93b
  4107a1:	sbb    ch,BYTE PTR [eax+0x4c47be3e]
  4107a7:	fadd   QWORD PTR [eax+0xbfc797c]
  4107ad:	xchg   ecx,eax
  4107ae:	jg     0x41077d
  4107b0:	shl    ah,cl
  4107b2:	in     eax,dx
  4107b3:	neg    BYTE PTR [ebp-0x22c80e08]
  4107b9:	frstor fs:[esi+ecx*4]
  4107bd:	mov    eax,DWORD PTR [ecx+0x2728f8f1]
  4107c3:	out    dx,al
  4107c4:	imul   edi,DWORD PTR [edi+0x7e],0xe4c544f0
  4107cb:	adc    dh,al
  4107cd:	dec    ebp
  4107ce:	retf   0xee79
  4107d1:	push   ecx
  4107d2:	fwait
  4107d3:	cs and edi,edi
  4107d6:	adc    edi,DWORD PTR [ebp-0x30]
  4107d9:	jnp    0x41076f
  4107db:	push   ds
  4107dc:	adc    DWORD PTR [esp+edx*8],edx
  4107df:	imul   ebx,DWORD PTR [ecx+0x6e999adf],0xffffffe8
  4107e6:	xchg   ebx,eax
  4107e7:	sub    eax,0x9234839b
  4107ec:	sub    BYTE PTR [esi-0x348d7658],bh
  4107f2:	pop    eax
  4107f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107f4:	mov    eax,ds:0x12b0965e
  4107f9:	scas   al,BYTE PTR es:[edi]
  4107fa:	xor    eax,0x1198b71c
  4107ff:	add    bh,BYTE PTR [edi+0x3d]
  410802:	ret    0xdf11
  410805:	and    al,bh
  410807:	loop   0x4107f4
  410809:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41080a:	adc    DWORD PTR [ebx-0x24a4d168],esi
  410810:	mov    ebx,0x36527ec7
  410815:	dec    eax
  410816:	mov    gs,WORD PTR [edi+ebx*4]
  410819:	les    eax,FWORD PTR [esp+edi*4+0x6d51e6ba]
  410820:	fistp  WORD PTR [esi-0x1d7cf338]
  410826:	fsubr  QWORD PTR [ebx]
  410828:	xor    DWORD PTR [edi],0xaaba4713
  41082e:	mov    BYTE PTR [edx],bl
  410830:	inc    ebx
  410831:	adc    BYTE PTR [esp+edi*4],ah
  410834:	sub    eax,0xe73c8596
  410839:	inc    esp
  41083a:	sahf   
  41083b:	xor    dh,dh
  41083d:	mov    bh,bl
  41083f:	sub    cl,dl
  410841:	cmp    bh,ch
  410843:	cdq    
  410844:	lods   eax,DWORD PTR ds:[esi]
  410845:	dec    ebp
  410846:	fs int3 
  410848:	xchg   ebp,eax
  410849:	cmp    BYTE PTR [edx],bh
  41084b:	in     eax,dx
  41084c:	push   es
  41084d:	xor    BYTE PTR [edx],0xaa
  410850:	lds    ebx,FWORD PTR [ecx]
  410852:	stos   BYTE PTR es:[edi],al
  410853:	add    al,0x3c
  410855:	sub    eax,0xbec173be
  41085a:	add    DWORD PTR [eax+0x67],0x7c1b9474
  410861:	add    eax,0x3ef19d14
  410866:	inc    esp
  410867:	push   0x1ebf154b
  41086c:	push   ebx
  41086d:	add    BYTE PTR [eax+0x23],al
  410870:	cmp    al,0x39
  410872:	in     al,dx
  410873:	outs   dx,DWORD PTR ds:[esi]
  410874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410875:	inc    ecx
  410876:	dec    ebp
  410877:	ins    DWORD PTR es:[edi],dx
  410878:	js     0x4108b5
  41087a:	jne    0x410821
  41087c:	div    DWORD PTR [eax+edi*8+0x62c939b9]
  410883:	xchg   ebx,eax
  410884:	popa   
  410885:	fs inc esp
  410887:	int3   
  410888:	jmp    0x967c7e72
  41088d:	cmc    
  41088e:	cmp    eax,0xf3a1bc8c
  410893:	pop    esi
  410894:	add    eax,0x4db324d5
  410899:	add    DWORD PTR [ebp-0x7d],ebp
  41089c:	or     al,0x2
  41089e:	push   esp
  41089f:	jp     0x4108a5
  4108a1:	cmp    esp,edi
  4108a3:	cli    
  4108a4:	out    dx,eax
  4108a5:	inc    esi
  4108a6:	repnz lahf 
  4108a8:	test   BYTE PTR [ebp-0x16631fbe],cl
  4108ae:	cmp    edi,DWORD PTR [edi]
  4108b0:	sbb    ah,0x1f
  4108b3:	out    0xfd,eax
  4108b5:	je     0x4108f2
  4108b7:	pop    es
  4108b8:	shl    BYTE PTR [ebx],1
  4108ba:	stos   BYTE PTR es:[edi],al
  4108bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108bc:	cmp    DWORD PTR [edx+0x4b],edx
  4108bf:	test   eax,0x630972c
  4108c4:	adc    dh,BYTE PTR [ecx+0x3f793604]
  4108ca:	mov    ah,0x55
  4108cc:	pop    esi
  4108cd:	(bad)  
  4108ce:	arpl   WORD PTR [eax],ax
  4108d0:	and    edx,DWORD PTR [ebp-0x6c]
  4108d3:	adc    BYTE PTR [esi+0x59],cl
  4108d6:	je     0x410915
  4108d8:	sahf   
  4108d9:	setae  bl
  4108dc:	clc    
  4108dd:	cmp    eax,0xdf79d80e
  4108e2:	pop    edi
  4108e3:	sub    ebp,eax
  4108e5:	or     dl,cl
  4108e7:	or     bh,BYTE PTR [esi]
  4108e9:	and    al,0x32
  4108eb:	mov    dl,0xc2
  4108ed:	and    DWORD PTR [edx+ebx*8+0x25e1f82],0xffffffa8
  4108f5:	dec    ebp
  4108f6:	mov    eax,ds:0xbc6cd0ef
  4108fb:	fdivr  st(0),st
  4108fd:	sbb    al,0x4f
  4108ff:	fadd   QWORD PTR [esi+0x55e86bf]
  410905:	fsubp  st(1),st
  410907:	loopne 0x4108ac
  410909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41090a:	das    
  41090b:	out    dx,al
  41090c:	stos   DWORD PTR es:[edi],eax
  41090d:	sbb    eax,0x79
  410910:	sbb    eax,DWORD PTR [ecx]
  410912:	jmp    0x4108b2
  410914:	gs add esi,eax
  410917:	cmp    BYTE PTR [esi+eax*2-0x38],ah
  41091b:	dec    BYTE PTR [edx+0x68d5d60a]
  410921:	in     al,0x6b
  410923:	test   BYTE PTR [ecx+0x4e],ch
  410926:	and    dh,dh
  410928:	ret    0xca09
  41092b:	es daa 
  41092d:	(bad)  
  41092e:	mov    al,ds:0xa1498cc3
  410933:	or     dh,bl
  410935:	imul   ebx,DWORD PTR [edx],0xffffffe1
  410938:	pop    edi
  410939:	xchg   edx,eax
  41093a:	mov    ds:0x95264522,al
  41093f:	sbb    al,al
  410941:	and    eax,0xff7ec09d
  410946:	inc    eax
  410947:	neg    DWORD PTR [ecx+esi*4-0x30]
  41094b:	inc    ecx
  41094c:	inc    eax
  41094d:	xchg   ebx,eax
  41094e:	rcl    DWORD PTR [esp+edi*4+0x41],0x68
  410953:	sbb    BYTE PTR [ebx],al
  410955:	call   0x97c58258
  41095a:	sbb    ebp,DWORD PTR [edi*4+0x3f16ef3b]
  410961:	adc    bh,BYTE PTR ds:[edi]
  410964:	popa   
  410965:	arpl   WORD PTR [esi+eax*4],di
  410968:	rcl    dh,0x3b
  41096b:	mov    ds:0xbc1fe316,eax
  410970:	fsubr  QWORD PTR [esi+edx*2]
  410973:	mov    dl,cl
  410975:	jo     0x41093f
  410977:	cmp    DWORD PTR [edi],ebp
  410979:	mov    es,WORD PTR [edi]
  41097b:	and    BYTE PTR [ecx+0x4b],ch
  41097e:	pop    es
  41097f:	pop    eax
  410980:	stos   BYTE PTR es:[edi],al
  410981:	mov    al,ds:0x241ab3c8
  410986:	push   ebx
  410987:	sub    ebp,DWORD PTR [eax]
  410989:	test   al,0x79
  41098b:	jmp    0xeb588070
  410990:	inc    ebp
  410991:	daa    
  410992:	cmp    al,0x3b
  410994:	xor    edi,DWORD PTR [ebx+0x54]
  410997:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410998:	xor    bh,BYTE PTR [eax-0xb]
  41099b:	daa    
  41099c:	xchg   ebp,eax
  41099d:	sbb    al,0x6b
  41099f:	sub    DWORD PTR [esi],eax
  4109a1:	ficomp DWORD PTR [ebp+0x74392a50]
  4109a7:	jg     0x410994
  4109a9:	(bad)  
  4109aa:	jl     0x410946
  4109ac:	test   edi,edi
  4109ae:	inc    eax
  4109af:	out    0x5f,eax
  4109b1:	xor    al,0x93
  4109b3:	mov    ebp,0xc89be55b
  4109b8:	xor    eax,0x1636fe71
  4109bd:	sti    
  4109be:	aam    0xe1
  4109c0:	sbb    al,0x6d
  4109c2:	cmp    BYTE PTR ds:0x3ca78a3a,0x95
  4109c9:	mov    eax,ds:0x26857578
  4109ce:	lds    ebp,FWORD PTR [eax-0x67]
  4109d1:	sbb    eax,0x4de75585
  4109d6:	add    al,0x9c
  4109d8:	pop    es
  4109d9:	mov    ecx,0x9447b23e
  4109de:	pusha  
  4109df:	test   DWORD PTR [ebx],edi
  4109e1:	or     eax,0x98610945
  4109e6:	or     edi,ebx
  4109e8:	add    bh,BYTE PTR [ebx]
  4109ea:	mov    ds:0xa22b38f5,eax
  4109ef:	inc    ebp
  4109f0:	push   ebx
  4109f1:	pop    DWORD PTR [edi]
  4109f3:	mov    esi,0x4349485
  4109f8:	push   ebp
  4109f9:	or     DWORD PTR [edi+0x26],edi
  4109fc:	jb     0x4109d6
  4109fe:	cmp    esp,DWORD PTR [edi+0x3db6de67]
  410a04:	jecxz  0x410a54
  410a06:	daa    
  410a07:	aas    
  410a08:	dec    esi
  410a09:	and    al,0x3f
  410a0b:	xor    DWORD PTR [ebx-0x2e348d67],ebx
  410a11:	pop    eax
  410a12:	cmp    al,0xbc
  410a14:	sbb    ebx,edi
  410a16:	mov    ch,0xbe
  410a18:	and    al,dl
  410a1a:	dec    eax
  410a1b:	imul   ebp,DWORD PTR [edx],0x8a5dc278
  410a21:	adc    ecx,DWORD PTR [ebp+0x7f]
  410a24:	and    cl,BYTE PTR [edi+0x3a]
  410a27:	jno    0x4109ca
  410a29:	and    ebp,DWORD PTR [edx+ecx*2-0x4d]
  410a2d:	mov    esi,0xfeb46b24
  410a32:	mov    bh,0xbb
  410a34:	es aas 
  410a36:	mov    eax,0x8f6b5d25
  410a3b:	mov    dx,WORD PTR ds:0x2e0657e9
  410a42:	mov    esp,0x3b9f91dc
  410a47:	dec    ecx
  410a48:	and    al,0x14
  410a4a:	sub    al,0x9d
  410a4c:	push   edi
  410a4d:	aas    
  410a4e:	jge    0x410a86
  410a50:	addr16 loopne 0x410a18
  410a53:	xchg   dh,bh
  410a55:	rol    bh,1
  410a57:	dec    ebx
  410a58:	sbb    DWORD PTR [ebp+0x60],ecx
  410a5b:	stos   BYTE PTR es:[edi],al
  410a5c:	fldcw  WORD PTR [esi]
  410a5e:	cmp    ecx,DWORD PTR [esp+ebx*4+0x2e]
  410a62:	jle    0x410a94
  410a64:	sub    bl,bh
  410a66:	in     eax,dx
  410a67:	rol    DWORD PTR [ebx],1
  410a69:	je     0x410ac5
  410a6b:	mov    dl,BYTE PTR [eax+0x2b]
  410a6e:	sbb    BYTE PTR [ebp+0x7df4f1d0],bh
  410a74:	sbb    ebp,esp
  410a76:	pusha  
  410a77:	or     al,0x46
  410a79:	mov    dl,BYTE PTR [ebx+0x6e80c8b2]
  410a7f:	(bad)  
  410a81:	rol    DWORD PTR [edi-0x65],1
  410a84:	lahf   
  410a85:	cld    
  410a86:	push   es
  410a87:	lock ret 0x92f7
  410a8b:	sub    ebp,DWORD PTR [ebp+0x4a378678]
  410a91:	into   
  410a92:	shr    DWORD PTR [eax-0x6f691f8e],0x53
  410a99:	and    BYTE PTR [ebp+0x2c],al
  410a9c:	push   DWORD PTR [ebp-0x72]
  410a9f:	fistp  WORD PTR [eax]
  410aa1:	es push ss
  410aa3:	sub    ecx,DWORD PTR [edi-0x65]
  410aa6:	push   ss
  410aa7:	add    ch,bh
  410aa9:	cwde   
  410aaa:	jb     0x410a67
  410aac:	daa    
  410aad:	fs push ebx
  410aaf:	sub    eax,0xa8f9b848
  410ab4:	test   edx,0x702d041e
  410aba:	xchg   esp,eax
  410abb:	scas   al,BYTE PTR es:[edi]
  410abc:	pop    ecx
  410abd:	ret    0x46ab
  410ac0:	adc    al,0xd4
  410ac2:	pop    edx
  410ac3:	adc    eax,0x8ca9e2ef
  410ac8:	cmp    DWORD PTR [esi-0x46a0e917],esi
  410ace:	ret    0x5d0b
  410ad1:	pop    ebp
  410ad2:	imul   ecx,DWORD PTR [edi],0xffffffee
  410ad5:	les    ebx,FWORD PTR [edi]
  410ad7:	mov    dl,0x14
  410ad9:	aaa    
  410ada:	inc    esi
  410adb:	mov    ch,bh
  410add:	cmp    bh,BYTE PTR [eax-0xe52d82e]
  410ae3:	imul   esi,DWORD PTR [edx+0x7a],0x10
  410ae7:	mov    ah,0x8b
  410ae9:	mov    ebx,0xd6ef12bd
  410aee:	out    0xfd,eax
  410af0:	sub    eax,0xbe03c757
  410af5:	call   0x151c:0xba0813ad
  410afc:	add    eax,0x54d8833b
  410b01:	out    0xfd,al
  410b03:	pop    ss
  410b04:	into   
  410b05:	pop    edi
  410b06:	cwde   
  410b07:	push   ds
  410b08:	add    dl,BYTE PTR [eax+0x45476081]
  410b0e:	(bad)  
  410b0f:	arpl   WORD PTR [eax+0x42b8de6a],bp
  410b15:	cmp    BYTE PTR [edx+0x29efc4e],bl
  410b1b:	mov    dl,BYTE PTR [ebx+0x77]
  410b1e:	or     DWORD PTR [ebx-0x19],edx
  410b21:	ret    0xf20f
  410b24:	jle    0x410b03
  410b26:	fdivr  QWORD PTR [ecx+0x1720c434]
  410b2c:	jb     0x410ba0
  410b2e:	fild   QWORD PTR [edi-0xad4ed0e]
  410b34:	or     dh,cl
  410b36:	or     ecx,ebx
  410b38:	push   ecx
  410b39:	sti    
  410b3a:	and    eax,0xe803c386
  410b40:	outs   dx,BYTE PTR ds:[esi]
  410b41:	mov    DWORD PTR [eax-0x5e56adf1],ebp
  410b47:	adc    DWORD PTR ds:0xd33b41dd,edx
  410b4d:	lea    esp,ds:0x49c7541b
  410b53:	dec    eax
  410b54:	popf   
  410b55:	call   0xe3191f75
  410b5a:	stc    
  410b5b:	repnz int 0x1e
  410b5e:	push   ebx
  410b5f:	mov    eax,DWORD PTR [eax+eiz*2-0x4b2205be]
  410b66:	adc    eax,0xa9bdc56c
  410b6b:	jne    0x410be1
  410b6d:	or     BYTE PTR [ebx+0x24],ch
  410b70:	or     al,0xd0
  410b72:	pop    ecx
  410b73:	mov    ch,BYTE PTR [edx-0xf]
  410b76:	cmp    eax,0xa0b06a7c
  410b7b:	mov    eax,ds:0xb66da1de
  410b80:	mov    esi,0x10f392b5
  410b85:	jge    0x410b69
  410b87:	int    0xa4
  410b89:	and    eax,0x289d4391
  410b8e:	or     bl,dl
  410b90:	mov    bl,al
  410b92:	out    dx,al
  410b93:	das    
  410b94:	mov    bh,0x79
  410b96:	jae    0x410b50
  410b98:	mov    ch,0xf3
  410b9a:	xchg   ebx,eax
  410b9b:	xchg   ebx,eax
  410b9c:	outs   dx,BYTE PTR ds:[esi]
  410b9d:	mov    eax,0xd7bb741f
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	js     0x410b26
  410ba5:	dec    ecx
  410ba6:	shr    DWORD PTR [ecx-0x695e8aa9],0x88
  410bad:	cld    
  410bae:	sub    esp,DWORD PTR [ebx-0x46aaf25a]
  410bb4:	pop    ecx
  410bb5:	out    dx,al
  410bb6:	sub    BYTE PTR [edi*1+0x3ff5237],0x5b
  410bbe:	daa    
  410bbf:	ins    BYTE PTR es:[edi],dx
  410bc0:	test   BYTE PTR [eax-0x1fb38145],bl
  410bc6:	cwde   
  410bc7:	adc    BYTE PTR [esi-0x5a8d487a],dh
  410bcd:	fild   WORD PTR [esi+0x432b1087]
  410bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bd4:	mov    eax,DWORD PTR [edx+0x77]
  410bd7:	das    
  410bd8:	add    al,BYTE PTR [ebx]
  410bda:	xchg   edi,eax
  410bdb:	sbb    eax,0xe40171b7
  410be0:	fdivrp st(1),st
  410be2:	mov    cl,BYTE PTR cs:[ebx+eiz*2]
  410be6:	inc    edx
  410be7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410be8:	out    dx,al
  410be9:	sub    edi,DWORD PTR [ebp-0x289661d2]
  410bef:	and    DWORD PTR [ebx+0x26],ecx
  410bf2:	mov    eax,ds:0x310d8a17
  410bf7:	rcr    DWORD PTR [esi+eiz*2+0x1c],1
  410bfb:	std    
  410bfc:	ret    
  410bfd:	add    BYTE PTR [ebx-0x11f4f698],cl
  410c03:	adc    eax,0x68a411f3
  410c08:	cs push ss
  410c0a:	inc    edx
  410c0b:	xor    ebp,esp
  410c0d:	and    al,0x8f
  410c0f:	mov    edi,0xb794a4d0
  410c14:	push   ds
  410c15:	mov    ah,0x54
  410c17:	adc    al,0xd8
  410c19:	je     0x410c15
  410c1b:	pop    eax
  410c1c:	retf   0x87f2
  410c1f:	sub    bl,ah
  410c21:	leave  
  410c22:	cmp    cl,BYTE PTR [ebx]
  410c24:	ss out 0x42,al
  410c27:	outs   dx,DWORD PTR ds:[esi]
  410c28:	scas   eax,DWORD PTR es:[edi]
  410c29:	ins    BYTE PTR es:[edi],dx
  410c2a:	cmp    eax,eax
  410c2c:	xchg   edx,eax
  410c2d:	leave  
  410c2e:	and    eax,0xce16db51
  410c33:	jns    0x410c78
  410c35:	jns    0x410ca1
  410c37:	jmp    0x410c4e
  410c39:	into   
  410c3a:	pop    ecx
  410c3b:	sub    ah,dl
  410c3d:	mov    al,ds:0xcf182ca5
  410c42:	retf   0x100b
  410c45:	mov    ebx,0xbfb9c197
  410c4a:	std    
  410c4b:	or     BYTE PTR [ebx-0x7961e631],ah
  410c51:	(bad)
  410c54:	in     eax,dx
  410c55:	cmp    ecx,DWORD PTR [ebx-0x12]
  410c58:	xor    DWORD PTR [esi+0x77],ebp
  410c5b:	or     ebp,DWORD PTR [ebx+ebp*2+0x5519c387]
  410c62:	rcr    esp,1
  410c64:	dec    ecx
  410c65:	pop    ss
  410c66:	fnstcw WORD PTR [ecx-0xd]
  410c69:	sbb    cl,BYTE PTR [esi+0x5c4a58a0]
  410c6f:	add    ecx,DWORD PTR [ecx]
  410c71:	and    esp,DWORD PTR [ecx]
  410c73:	cmp    al,0xa1
  410c75:	ret    0xe6c6
  410c78:	bound  eax,QWORD PTR [edi+0x75]
  410c7b:	xor    edi,eax
  410c7d:	outs   dx,BYTE PTR ds:[esi]
  410c7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c7f:	mov    dh,0x71
  410c81:	out    dx,al
  410c82:	rcl    dh,1
  410c84:	cmp    DWORD PTR [eax+edx*1],ebx
  410c87:	xchg   esp,eax
  410c88:	jl     0x410c39
  410c8a:	jg     0x410cad
  410c8c:	push   eax
  410c8d:	add    al,0xa2
  410c8f:	mov    ecx,0x6e97213c
  410c94:	fidiv  DWORD PTR [edx+0x2a]
  410c97:	cmp    DWORD PTR [ecx+0x25],edx
  410c9a:	push   cs
  410c9b:	into   
  410c9c:	push   cs
  410c9d:	cmp    al,0x91
  410c9f:	pop    edi
  410ca0:	(bad)  [esi+0x41a48598]
  410ca6:	stc    
  410ca7:	sbb    BYTE PTR [ebx-0x6d51848],bl
  410cad:	lods   al,BYTE PTR ds:[esi]
  410cae:	hlt    
  410caf:	outs   dx,DWORD PTR ds:[esi]
  410cb0:	inc    esi
  410cb1:	jb     0x410ca5
  410cb3:	adc    DWORD PTR [esi+0x59],eax
  410cb6:	mov    ebp,DWORD PTR [ebx+0x71]
  410cb9:	dec    edx
  410cba:	ret    
  410cbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cbc:	push   cs
  410cbd:	cmp    al,BYTE PTR [ebp+0x106aa306]
  410cc3:	jo     0x410c9f
  410cc5:	outs   dx,BYTE PTR ds:[esi]
  410cc6:	jmp    0xa64f53b3
  410ccb:	jmp    DWORD PTR [ebx]
  410ccd:	push   ecx
  410cce:	xchg   edx,eax
  410ccf:	jp     0x410d23
  410cd1:	ror    BYTE PTR [esi],1
  410cd3:	retf   
  410cd4:	lods   al,BYTE PTR ds:[esi]
  410cd5:	test   BYTE PTR [edx-0xfd90c16],0x20
  410cdc:	cwde   
  410cdd:	cmp    eax,DWORD PTR [ebp-0x59351314]
  410ce3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ce4:	std    
  410ce5:	mov    al,ds:0x135d3a24
  410cea:	pop    esi
  410ceb:	xor    eax,0xb202290c
  410cf0:	rcl    bl,1
  410cf2:	mov    edx,DWORD PTR [edx]
  410cf4:	sar    ebx,1
  410cf6:	mov    ds:0x8f9274a9,eax
  410cfb:	cmc    
  410cfc:	shl    eax,0x81
  410cff:	ss js  0x410c87
  410d02:	popf   
  410d03:	inc    esp
  410d04:	sub    eax,0x9bda1a6b
  410d09:	mov    BYTE PTR [esi],ah
  410d0b:	inc    edx
  410d0c:	ror    DWORD PTR [esi+0x30f401a3],1
  410d12:	sub    dl,cl
  410d14:	fidivr DWORD PTR [ebx-0xb]
  410d17:	adc    BYTE PTR [eax],al
  410d19:	(bad)  
  410d1b:	xchg   DWORD PTR [ebx],esp
  410d1d:	lahf   
  410d1e:	(bad)  
  410d1f:	lods   al,BYTE PTR ds:[esi]
  410d20:	jmp    0x94e1:0x352e5b07
  410d27:	lea    esi,[ebp-0x476200b4]
  410d2d:	cld    
  410d2e:	add    esp,ebp
  410d30:	ror    eax,1
  410d32:	xchg   esi,eax
  410d33:	xor    eax,0xcd76bba2
  410d38:	xchg   esp,eax
  410d39:	push   cs
  410d3a:	dec    esp
  410d3b:	outs   dx,DWORD PTR ds:[esi]
  410d3c:	fmul   st(4),st
  410d3e:	push   eax
  410d3f:	ss in  eax,dx
  410d41:	jbe    0x410d3c
  410d43:	fs inc ecx
  410d45:	ins    BYTE PTR es:[edi],dx
  410d46:	push   edi
  410d47:	pop    esi
  410d48:	push   edx
  410d49:	fmul   QWORD PTR [edi]
  410d4b:	daa    
  410d4c:	xor    edi,DWORD PTR [esi+0x7f]
  410d4f:	jo     0x410d52
  410d51:	sub    eax,DWORD PTR [esi]
  410d53:	add    dh,0xf1
  410d56:	mov    bl,0x55
  410d58:	iret   
  410d59:	out    dx,al
  410d5a:	pushf  
  410d5b:	or     ebx,eax
  410d5d:	stos   BYTE PTR es:[edi],al
  410d5e:	in     eax,0xeb
  410d60:	adc    edi,ebx
  410d62:	cwde   
  410d63:	mov    eax,0x19aeb03
  410d68:	shr    ecx,1
  410d6a:	sbb    ecx,DWORD PTR [edi]
  410d6c:	mov    WORD PTR [esi],es
  410d6e:	call   0xdf86bef9
  410d73:	aad    0xdd
  410d75:	cdq    
  410d76:	out    dx,al
  410d77:	fadd   QWORD PTR [esi-0x22430b30]
  410d7d:	jns    0x410d2d
  410d7f:	out    0x37,eax
  410d81:	and    eax,0x8080021f
  410d86:	fwait
  410d87:	and    BYTE PTR [edx+0x435c3cf1],ch
  410d8d:	into   
  410d8e:	mov    BYTE PTR [esi],dh
  410d90:	leave  
  410d91:	dec    edi
  410d92:	sbb    al,0xe1
  410d94:	mov    ebx,0xea856edf
  410d99:	adc    edi,DWORD PTR [edi]
  410d9b:	inc    ecx
  410d9c:	push   eax
  410d9d:	pop    esi
  410d9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d9f:	mul    DWORD PTR [eax+0x30]
  410da2:	call   0xa7e5eb75
  410da7:	loopne 0x410d2d
  410da9:	ja     0x410d3c
  410dab:	rcr    eax,1
  410dad:	ret    0xf096
  410db0:	call   0xe212:0xe00195f6
  410db7:	mov    DWORD PTR [esi-0x26fda80e],ecx
  410dbd:	xchg   ebp,eax
  410dbe:	jge    0x410dc2
  410dc0:	stos   DWORD PTR es:[edi],eax
  410dc1:	jmp    0x410db8
  410dc3:	mov    ecx,0xd86cf966
  410dc8:	ret    0xffca
  410dcb:	xchg   edx,eax
  410dcc:	mov    DWORD PTR [eax+ebp*8-0x7a],esi
  410dd0:	or     eax,esi
  410dd2:	dec    esp
  410dd3:	sub    BYTE PTR [eax],dl
  410dd5:	sbb    BYTE PTR [eax+0x63],bh
  410dd8:	sub    eax,0xe2c4ac4d
  410ddd:	out    dx,al
  410dde:	clc    
  410ddf:	push   0x1d
  410de1:	add    eax,DWORD PTR [esi]
  410de3:	mov    ebx,0xb8d19916
  410de8:	sbb    BYTE PTR [edi-0x2d],dh
  410deb:	push   ds
  410dec:	push   0x725d7866
  410df1:	push   eax
  410df2:	add    esi,DWORD PTR [eax-0x172c05ee]
  410df8:	sbb    BYTE PTR [ebx-0x7d4cbc45],dh
  410dfe:	dec    ebp
  410dff:	arpl   WORD PTR [edi+0x5685797d],bp
  410e05:	sub    al,0xc0
  410e07:	and    esi,edx
  410e09:	cmp    DWORD PTR [ecx+eiz*4+0x2eee1da4],esi
  410e10:	je     0x410e29
  410e12:	popf   
  410e13:	pop    DWORD PTR [edx]
  410e15:	rcr    eax,0xa0
  410e18:	mov    ds:0x705a943b,al
  410e1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e1e:	mov    eax,ds:0xa23756a5
  410e23:	cmp    edx,DWORD PTR [ecx-0x4e]
  410e26:	clc    
  410e27:	cmp    dl,BYTE PTR [edx+0x2d]
  410e2a:	xor    BYTE PTR [eax-0x3b],ch
  410e2d:	dec    esp
  410e2e:	mov    eax,ds:0xa9706a0b
  410e33:	sbb    DWORD PTR [edi-0x6c],ebp
  410e36:	xlat   BYTE PTR ds:[ebx]
  410e37:	jae    0x410dcd
  410e39:	jmp    0x410e49
  410e3b:	push   0x35
  410e3d:	int    0xc2
  410e3f:	popa   
  410e40:	sub    dx,ax
  410e43:	adc    DWORD PTR [ecx],ecx
  410e45:	mov    fs,esi
  410e47:	sar    DWORD PTR [eax-0x7c],1
  410e4a:	jle    0x410df9
  410e4c:	out    0x40,eax
  410e4e:	push   cs
  410e4f:	ficomp DWORD PTR [ecx+eiz*1-0x48efec16]
  410e56:	or     BYTE PTR [edi-0x5d154b5c],cl
  410e5c:	lods   al,BYTE PTR ds:[esi]
  410e5d:	jmp    0x6980:0xb939638a
  410e64:	add    esp,ecx
  410e66:	cmp    al,0x65
  410e68:	(bad)  
  410e69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e6a:	fbstp  TBYTE PTR [eax-0x66]
  410e6d:	mov    ss,WORD PTR [ebx+0x5b]
  410e70:	mov    al,0xa9
  410e72:	bndldx bnd1,[eax]
  410e75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e76:	jmp    0x410e8f
  410e78:	dec    esp
  410e79:	nop
  410e7a:	and    BYTE PTR [ecx+0x2d],ah
  410e7d:	pop    ss
  410e7e:	xlat   BYTE PTR ds:[ebx]
  410e7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e80:	stos   DWORD PTR es:[edi],eax
  410e81:	mov    ecx,0xb8507d04
  410e86:	scas   al,BYTE PTR es:[edi]
  410e87:	scas   eax,DWORD PTR es:[edi]
  410e88:	inc    edx
  410e89:	mov    ds:0x251ca1eb,eax
  410e8e:	add    eax,0xd42c15cc
  410e93:	je     0x410f07
  410e95:	in     eax,dx
  410e96:	rcr    ecx,0x37
  410e99:	in     eax,0xb0
  410e9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e9c:	(bad)  
  410e9d:	aam    0xf
  410e9f:	inc    ebx
  410ea0:	xor    bh,cl
  410ea2:	lods   al,BYTE PTR ds:[esi]
  410ea3:	lock xor DWORD PTR [ebx+0x24],edx
  410ea7:	fsubr  DWORD PTR ds:0xd326e4bf
  410ead:	mov    edi,0x42d6967f
  410eb2:	pop    ss
  410eb3:	sub    ebp,DWORD PTR [eax+0x5dc5c5b6]
  410eb9:	jne    0x410ed1
  410ebb:	pop    es
  410ebc:	jl     0x410eda
  410ebe:	or     al,0x7a
  410ec0:	or     DWORD PTR [edi+0x67],esp
  410ec3:	lods   al,BYTE PTR ds:[esi]
  410ec4:	das    
  410ec5:	sbb    DWORD PTR ds:0x421845a,eax
  410ecb:	sub    eax,0xe92508f7
  410ed0:	iret   
  410ed1:	mov    al,ds:0xd974e2a6
  410ed6:	gs js  0x410f14
  410ed9:	(bad)  
  410edb:	in     al,dx
  410edc:	fld    TBYTE PTR [ecx]
  410ede:	jb     0x410eaa
  410ee0:	sub    DWORD PTR [eax],esi
  410ee2:	sbb    bl,BYTE PTR ds:0xefb8000e
  410ee8:	add    ebx,ebp
  410eea:	pop    edx
  410eeb:	jg     0x410eef
  410eed:	xor    ah,BYTE PTR [eax]
  410eef:	jecxz  0x410f56
  410ef1:	sti    
  410ef2:	push   ebp
  410ef3:	jl     0x410eaa
  410ef5:	cmp    ch,ah
  410ef7:	cwde   
  410ef8:	ins    BYTE PTR es:[edi],dx
  410ef9:	fldcw  WORD PTR [edx]
  410efb:	push   ds
  410efc:	icebp  
  410efd:	xchg   edi,eax
  410efe:	mov    eax,0x25f8323e
  410f03:	pusha  
  410f04:	add    dh,BYTE PTR [ecx+0x5b94bcf3]
  410f0a:	xor    ebx,0x21
  410f0d:	(bad)  
  410f0e:	dec    ebx
  410f10:	mov    al,0x33
  410f12:	iret   
  410f13:	mov    esi,0x7062680c
  410f18:	inc    ebp
  410f19:	scas   al,BYTE PTR es:[edi]
  410f1a:	aad    0xd3
  410f1c:	sti    
  410f1d:	pop    es
  410f1e:	sub    eax,0xb0a3afca
  410f23:	jo     0x410f54
  410f25:	repnz imul ebx,DWORD PTR [esi+0x4fb83314],0xffffffb1
  410f2d:	sbb    DWORD PTR [ebx],edx
  410f2f:	mov    ecx,DWORD PTR [esi-0x6e64f4eb]
  410f35:	sbb    bl,dh
  410f37:	adc    BYTE PTR [edx+edx*8],0xbd
  410f3b:	dec    ebp
  410f3c:	mov    edx,0xabee28b6
  410f41:	leave  
  410f42:	lods   eax,DWORD PTR ds:[esi]
  410f43:	add    eax,DWORD PTR [eax+ebp*8]
  410f46:	cmp    al,0x68
  410f48:	addr16 inc ebp
  410f4a:	sbb    eax,0x860a9b06
  410f4f:	mov    dh,0x6a
  410f51:	ficomp WORD PTR [ebx-0x31ef0238]
  410f57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f59:	or     esp,DWORD PTR [eax]
  410f5b:	into   
  410f5c:	jb     0x410ef7
  410f5e:	lock stos DWORD PTR es:[edi],eax
  410f60:	cmp    esp,ebx
  410f62:	mov    esi,0x23fd8429
  410f67:	pop    edx
  410f68:	xabort 0x6e
  410f6b:	jl     0x410f5a
  410f6d:	rol    BYTE PTR es:[ecx+ebx*4-0x621ae15f],cl
  410f75:	loope  0x410f22
  410f77:	test   DWORD PTR [ecx+ebp*1-0x69],0xc795fb7a
  410f7f:	(bad)  
  410f80:	aad    0xd2
  410f82:	cwde   
  410f83:	in     al,dx
  410f84:	mov    ?,WORD PTR [ecx+ecx*1]
  410f87:	(bad)  
  410f88:	push   ebx
  410f89:	mov    dh,0x77
  410f8b:	mov    bh,0xc3
  410f8d:	inc    esp
  410f8e:	sub    esp,DWORD PTR [ecx+edx*4-0xc7b15d]
  410f95:	mov    esi,0x5d86b56a
  410f9a:	retf   
  410f9b:	ret    0x45e5
  410f9e:	lock mov al,0x6a
  410fa1:	call   0x7980:0x419dab5a
  410fa8:	cmp    ecx,esp
  410faa:	sbb    eax,0x62340c68
  410fb0:	inc    esp
  410fb1:	and    bl,BYTE PTR [edx+edi*1+0x2f]
  410fb5:	cs dec esp
  410fb7:	dec    esp
  410fb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fb9:	add    eax,0xb102549f
  410fbe:	pop    eax
  410fbf:	cmp    dl,BYTE PTR [esi+0x45bd492f]
  410fc5:	sub    al,0x70
  410fc7:	dec    esp
  410fc8:	xchg   al,cl
  410fca:	clc    
  410fcb:	mov    dl,0xaa
  410fcd:	loop   0x411028
  410fcf:	pop    ebp
  410fd0:	or     eax,0xc01fda28
  410fd5:	and    BYTE PTR [ebx],0x3b
  410fd8:	jbe    0x41103b
  410fda:	in     al,0x2a
  410fdc:	push   ecx
  410fdd:	adc    ecx,ebx
  410fdf:	inc    ecx
  410fe0:	mul    DWORD PTR [eax-0x5a]
  410fe3:	mov    ch,0xc5
  410fe5:	pop    es
  410fe6:	imul   esi,DWORD PTR [edx],0xd4cb87bd
  410fec:	lock xor ebp,esp
  410fef:	int3   
  410ff0:	push   esi
  410ff1:	cdq    
  410ff2:	inc    ebp
  410ff3:	and    bl,dh
  410ff5:	cmp    eax,0x3186ddc6
  410ffa:	cmp    DWORD PTR [ecx-0x3d],edx
  410ffd:	jp     0x410f87
  410fff:	inc    esp
  411000:	jae    0x41104d
  411002:	xor    DWORD PTR [esi],ebp
  411004:	and    al,0x38
  411006:	jb     0x41102f
  411008:	sbb    al,BYTE PTR [esi+0x600dacd6]
  41100e:	(bad)  
  41100f:	out    0xed,eax
  411011:	jne    0x411071
  411013:	repnz xchg esp,eax
  411015:	sar    esi,0xc0
  411018:	clc    
  411019:	sub    ecx,DWORD PTR [eax]
  41101b:	dec    edi
  41101c:	inc    ebx
  41101d:	push   ebx
  41101e:	mov    al,ds:0x122db8f9
  411023:	(bad)  
  411024:	sbb    al,0x1
  411026:	sar    BYTE PTR [esi+0x2d],1
  411029:	add    BYTE PTR [eax],cl
  41102b:	mov    ds:0x1e46ac4c,al
  411030:	call   0xdc5:0x1d7ba18d
  411037:	mov    dl,0x99
  411039:	xchg   edi,eax
  41103a:	adc    eax,esi
  41103c:	jb     0x4110ab
  41103e:	lahf   
  41103f:	jo     0x411056
  411041:	fbstp  TBYTE PTR [ebx-0x43f30a99]
  411047:	sub    bh,BYTE PTR [ebp+edi*1-0x65e3cc93]
  41104e:	dec    ecx
  41104f:	(bad)  
  411050:	dec    esp
  411051:	in     al,dx
  411052:	jbe    0x411033
  411054:	rol    DWORD PTR [edx+0x38c7972c],1
  41105a:	mov    al,0x7
  41105c:	pop    esi
  41105d:	imul   edx,eax,0xb3408909
  411063:	push   0x76
  411065:	fld    QWORD PTR [edi-0x2d0e312c]
  41106b:	sbb    BYTE PTR [edx+edx*1+0x6417a713],dl
  411072:	out    dx,al
  411073:	add    BYTE PTR [eax],0x89
  411076:	ja     0x411068
  411078:	adc    al,0xb3
  41107a:	ins    BYTE PTR es:[edi],dx
  41107b:	and    BYTE PTR [edi-0x7dccb6a2],ch
  411081:	jmp    0x41106e
  411083:	fs (bad) 
  411085:	and    al,0x6
  411087:	(bad)  
  411089:	cs (bad) 
  41108b:	lods   eax,DWORD PTR ds:[esi]
  41108c:	xor    esp,DWORD PTR [ecx+0x32aec9ce]
  411092:	pop    DWORD PTR [ebx+0x2c]
  411095:	(bad)  
  411096:	push   eax
  411097:	and    bl,bl
  411099:	and    edi,DWORD PTR [edx]
  41109b:	clc    
  41109c:	inc    esi
  41109d:	pop    es
  41109e:	repnz sbb bh,BYTE PTR [eax]
  4110a1:	xchg   DWORD PTR [esi+edi*8],ebx
  4110a4:	pop    es
  4110a5:	ins    BYTE PTR es:[edi],dx
  4110a6:	or     DWORD PTR [edi],ebp
  4110a8:	sub    esp,esp
  4110aa:	push   esi
  4110ab:	jo     0x411111
  4110ad:	push   ecx
  4110ae:	cmp    BYTE PTR [esi+0x32],cl
  4110b1:	jns    0x4110af
  4110b3:	test   edx,ecx
  4110b5:	inc    edx
  4110b6:	arpl   WORD PTR [edi],cx
  4110b8:	add    al,0x9a
  4110ba:	mov    edi,0x360b3dff
  4110bf:	push   ecx
  4110c0:	dec    eax
  4110c1:	mov    eax,ds:0x7c976bc5
  4110c6:	dec    esp
  4110c7:	sti    
  4110c8:	xor    edx,DWORD PTR [edx-0x17]
  4110cb:	loopne 0x411055
  4110cd:	add    al,0x5b
  4110cf:	cmpxchg eax,esi
  4110d2:	fidiv  DWORD PTR [esi-0x78f6011c]
  4110d8:	sar    dl,cl
  4110da:	lea    ecx,[edx+0x5214c95d]
  4110e0:	mov    esi,0x11e767cc
  4110e5:	push   0x37
  4110e7:	and    eax,DWORD PTR [ebx-0x3dfdd043]
  4110ed:	push   eax
  4110ee:	push   cs
  4110ef:	imul   esp,DWORD PTR [esi-0x62],0x5edf9617
  4110f6:	adc    al,0x99
  4110f8:	or     al,0x14
  4110fa:	push   ebp
  4110fb:	add    edx,DWORD PTR [ecx+ebx*2-0x5e]
  4110ff:	mov    BYTE PTR [edi+0x3],bl
  411102:	(bad)  
  411103:	sti    
  411104:	mov    dl,0xdf
  411106:	in     al,dx
  411107:	and    ah,BYTE PTR [esi-0x1d]
  41110a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41110b:	and    ch,0xa
  41110e:	sahf   
  41110f:	jb     0x411148
  411111:	push   ecx
  411112:	dec    BYTE PTR [edx+0x79]
  411115:	leave  
  411116:	dec    eax
  411117:	js     0x411187
  411119:	aas    
  41111a:	out    0xe9,al
  41111c:	call   DWORD PTR [edx+0x45d917aa]
  411122:	push   ebx
  411123:	xchg   edi,eax
  411124:	mov    esp,0x336d07c3
  411129:	adc    DWORD PTR [ebp-0x6a641264],esp
  41112f:	shl    BYTE PTR [ebx+edi*4-0x3e],cl
  411133:	adc    esi,0x5c584f5e
  411139:	mov    WORD PTR [edi-0x4a],fs
  41113c:	std    
  41113d:	test   DWORD PTR [edi+0x3],ebp
  411140:	or     dl,ch
  411142:	mov    ch,0xf8
  411144:	push   0xffffffc8
  411146:	cs gs sbb al,cl
  41114a:	pop    ss
  41114b:	cmp    ecx,DWORD PTR [esp+eax*8+0x73c365f5]
  411152:	in     al,dx
  411153:	dec    ebp
  411154:	jge    0x4111cf
  411156:	push   esp
  411157:	outs   dx,DWORD PTR ds:[esi]
  411158:	popf   
  411159:	in     al,dx
  41115a:	jmp    0x4111a6
  41115c:	mov    bl,0x10
  41115e:	push   ebx
  41115f:	dec    edx
  411160:	das    
  411161:	cmp    DWORD PTR [ebx-0x3],esi
  411164:	add    al,BYTE PTR [ecx+0x3ea2fd9f]
  41116a:	ja     0x411167
  41116c:	shr    BYTE PTR [edx+0x5a276259],1
  411172:	pop    ebp
  411173:	in     eax,dx
  411174:	sbb    DWORD PTR [ebp-0x67],esp
  411177:	div    BYTE PTR ds:0xc85fcebb
  41117d:	pop    esp
  41117e:	jno    0x411157
  411180:	scas   eax,DWORD PTR es:[edi]
  411181:	cs (bad) 
  411183:	jl     0x411194
  411185:	ins    DWORD PTR es:[edi],dx
  411186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411187:	ss cmp bh,cl
  41118a:	mov    ebx,0x79f711bc
  41118f:	and    eax,0xcb77cff0
  411194:	and    eax,0x3e9b5778
  411199:	lods   eax,DWORD PTR ds:[esi]
  41119a:	sub    eax,ebx
  41119c:	sbb    ecx,DWORD PTR [edx-0x33]
  41119f:	aas    
  4111a0:	mov    cl,0x7
  4111a2:	and    al,BYTE PTR [ecx]
  4111a4:	adc    ecx,DWORD PTR [ecx+edx*4-0x6a6f1210]
  4111ab:	adc    edx,DWORD PTR [edx]
  4111ad:	imul   edi,edx,0x3b0cb163
  4111b3:	retf   
  4111b4:	dec    ecx
  4111b5:	xchg   ecx,eax
  4111b6:	pushf  
  4111b7:	adc    al,BYTE PTR [eax]
  4111b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111ba:	leave  
  4111bb:	int    0x27
  4111bd:	js     0x411225
  4111bf:	sbb    al,0x9a
  4111c1:	shl    DWORD PTR [eax-0x7b],0x2b
  4111c5:	inc    ebx
  4111c6:	aam    0x89
  4111c8:	sahf   
  4111c9:	int    0x42
  4111cb:	mov    edi,0xfa49acb8
  4111d0:	dec    esp
  4111d1:	aas    
  4111d2:	hlt    
  4111d3:	(bad)  [eax]
  4111d5:	jg     0x4111b3
  4111d7:	push   esp
  4111d8:	shl    DWORD PTR [eax+0x61afd035],1
  4111de:	js     0x4111d4
  4111e0:	push   ds
  4111e1:	xor    DWORD PTR [edx-0x71],edx
  4111e4:	jns    0x4111e2
  4111e6:	mov    dl,BYTE PTR [ebp-0x60398f22]
  4111ec:	fs dec ebp
  4111ee:	sub    edx,DWORD PTR [esi+0x22]
  4111f1:	inc    ecx
  4111f2:	sub    eax,0xa49712c5
  4111f7:	sub    eax,0x1028d441
  4111fc:	out    0xb0,al
  4111fe:	ins    BYTE PTR es:[edi],dx
  4111ff:	cmc    
  411200:	cld    
  411201:	pop    ebx
  411202:	sbb    dh,BYTE PTR [eax-0x7da16807]
  411208:	push   ds
  411209:	jno    0x4111a8
  41120b:	jp     0x4111d0
  41120d:	jnp    0x4111e7
  41120f:	in     eax,0x5a
  411211:	addr16 pop esi
  411213:	push   0xa38b0bfd
  411218:	adc    BYTE PTR [edx],bl
  41121a:	lahf   
  41121b:	ror    BYTE PTR [edi+0x6082da20],1
  411221:	loopne 0x4111c0
  411223:	mov    eax,es:0xc3d54868
  411229:	stos   BYTE PTR es:[edi],al
  41122a:	inc    ecx
  41122b:	popf   
  41122c:	jge    0x411244
  41122e:	cdq    
  41122f:	cmp    al,0x62
  411231:	adc    BYTE PTR [edx-0x4b7b5d70],ah
  411237:	aam    0x34
  411239:	jae    0x4111de
  41123b:	push   es
  41123c:	pop    ebp
  41123d:	std    
  41123e:	rcr    BYTE PTR [edx-0x43],0xb8
  411242:	mov    dh,0x1f
  411244:	pop    ebx
  411245:	cdq    
  411246:	xchg   ebx,eax
  411247:	hlt    
  411248:	sub    BYTE PTR [esi+0x44],al
  41124b:	mov    ebx,0xaf63621f
  411250:	icebp  
  411251:	mov    ds,WORD PTR [eax+0x3b]
  411254:	jo     0x411262
  411256:	or     BYTE PTR [ebx-0x1930ef94],0x31
  41125d:	out    0x1c,al
  41125f:	ret    
  411260:	add    edx,DWORD PTR [ebp-0x2f]
  411263:	and    eax,0xd655a19f
  411268:	arpl   sp,si
  41126a:	mov    ah,0x5e
  41126c:	and    dl,0xa2
  41126f:	dec    DWORD PTR [esi-0x44]
  411272:	popf   
  411273:	mov    BYTE PTR [ecx+0x5f69e976],ah
  411279:	ss nop
  41127b:	pop    esi
  41127c:	shl    DWORD PTR [edx],cl
  41127e:	sbb    eax,0x86d49cc9
  411283:	fiadd  WORD PTR [ebp-0x6]
  411286:	jne    0x411284
  411288:	sahf   
  411289:	arpl   WORD PTR [esi-0x1bc5a350],bx
  41128f:	aam    0xf8
  411291:	ret    0x4eb8
  411294:	dec    esp
  411295:	std    
  411296:	mov    ah,0xcc
  411298:	jne    0x4112ed
  41129a:	psrlq  mm6,mm4
  41129d:	sub    edi,eax
  41129f:	jae    0x411259
  4112a1:	mov    esi,0x1495b98d
  4112a6:	pushf  
  4112a7:	adc    eax,0xc67bb875
  4112ac:	(bad)  [ebp+0x6b282cf5]
  4112b2:	jbe    0x411318
  4112b4:	or     BYTE PTR [edi+edx*4-0x32],ah
  4112b8:	xlat   BYTE PTR ds:[ebx]
  4112b9:	ins    DWORD PTR es:[edi],dx
  4112ba:	sub    ecx,edx
  4112bc:	call   0x30f9:0xa8d4c6c9
  4112c3:	mov    ebx,0xbf8b5ed0
  4112c8:	pop    edx
  4112c9:	sub    ebp,edi
  4112cb:	push   ecx
  4112cc:	shl    BYTE PTR [esi+0x13],0x9a
  4112d0:	ret    
  4112d1:	in     al,0x3f
  4112d3:	inc    edi
  4112d4:	push   edx
  4112d5:	fwait
  4112d6:	es iret 
  4112d8:	repz repnz adc BYTE PTR [edi+0x56746059],dl
  4112e0:	sbb    DWORD PTR [ebp-0x1e],ecx
  4112e3:	mov    al,0xa
  4112e5:	cmp    esi,DWORD PTR [esp+ecx*1]
  4112e8:	ins    BYTE PTR es:[edi],dx
  4112e9:	inc    ebp
  4112ea:	clc    
  4112eb:	jmp    0x5e04ae40
  4112f0:	or     ch,ah
  4112f2:	cwde   
  4112f3:	popf   
  4112f4:	jp     0x41130b
  4112f6:	fisttp WORD PTR [eax+0x78]
  4112f9:	xchg   edx,eax
  4112fa:	fdivp  st(2),st
  4112fc:	(bad)  
  4112fd:	and    al,BYTE PTR [eax]
  4112ff:	pop    esp
  411300:	push   ebp
  411301:	mov    ?,WORD PTR [esi-0x7040f4c3]
  411307:	loopne 0x411346
  411309:	add    DWORD PTR [esi-0x7b18583a],esi
  41130f:	ins    DWORD PTR es:[edi],dx
  411310:	xor    ch,BYTE PTR [ecx+0x62]
  411313:	xchg   ebp,eax
  411314:	icebp  
  411315:	pop    ebp
  411316:	dec    esp
  411317:	sbb    eax,DWORD PTR [ebp+0x17bec7f2]
  41131d:	xchg   BYTE PTR [esi+eax*1],ch
  411320:	push   eax
  411321:	enter  0x9708,0xb
  411325:	int    0x1d
  411327:	cmp    DWORD PTR [ecx+ecx*8+0x33cc7040],ecx
  41132e:	adc    al,0x15
  411330:	mov    ds:0xb835de4,al
  411335:	cmp    eax,0xde469fcf
  41133a:	in     al,dx
  41133b:	pop    ebp
  41133c:	pop    ebx
  41133d:	cmp    al,0x22
  41133f:	(bad)  
  411340:	fbstp  TBYTE PTR [eax+0x43425c73]
  411346:	cmp    ah,BYTE PTR [ecx+edx*8-0x15]
  41134a:	bound  ebx,QWORD PTR [ebx+0x369c29d5]
  411350:	mov    eax,0x160e007f
  411355:	xchg   edx,eax
  411356:	sti    
  411357:	dec    esi
  411358:	(bad)  
  411359:	pop    bp
  41135b:	lahf   
  41135c:	jmp    0x4483:0xa5247f6c
  411363:	fs jb  0x411359
  411366:	std    
  411367:	(bad)  
  411368:	out    dx,eax
  411369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41136a:	cs jle 0x411348
  41136d:	pop    ds
  41136e:	mov    esp,0x6af4e980
  411373:	xchg   ebp,eax
  411374:	icebp  
  411375:	mov    ecx,0xe18ffe33
  41137a:	and    al,0xd7
  41137c:	inc    edx
  41137d:	ds pop edi
  41137f:	push   ecx
  411380:	or     al,0x5c
  411382:	mov    ecx,0xe39d0898
  411387:	mov    ss,WORD PTR [edx-0x546ad40e]
  41138d:	lock jbe 0x411333
  411390:	sub    DWORD PTR [ebx-0x11],esi
  411393:	shr    DWORD PTR [ebp-0x76],cl
  411396:	bound  esp,QWORD PTR [eax-0x71]
  411399:	mov    ds:0x9de30807,eax
  41139e:	shl    BYTE PTR [ecx-0x37],0xf6
  4113a2:	mov    eax,ds:0x901fdda5
  4113a7:	mov    ch,0x7c
  4113a9:	cmp    DWORD PTR [ebx+ecx*1-0x570c16c8],ebp
  4113b0:	jmp    0xd264e109
  4113b5:	push   edi
  4113b6:	rcl    DWORD PTR [esi+esi*8],cl
  4113b9:	out    0xcd,eax
  4113bb:	and    esp,eax
  4113bd:	cmp    BYTE PTR [edi+0x9],al
  4113c0:	jns    0x4113a9
  4113c2:	je     0x4113a6
  4113c4:	or     eax,DWORD PTR [eax-0x270e7260]
  4113ca:	loop   0x411417
  4113cc:	xchg   ebp,eax
  4113cd:	dec    eax
  4113ce:	int    0x62
  4113d0:	out    dx,al
  4113d1:	rol    DWORD PTR [ebx],1
  4113d3:	loopne 0x411391
  4113d5:	sbb    al,0xa1
  4113d7:	push   esp
  4113d8:	push   edx
  4113d9:	test   al,0xc6
  4113db:	dec    esi
  4113dc:	xchg   cl,bl
  4113de:	add    BYTE PTR [ecx],dh
  4113e0:	and    bh,bh
  4113e2:	in     eax,dx
  4113e3:	hlt    
  4113e4:	cli    
  4113e5:	leave  
  4113e6:	push   0xfffffff4
  4113e8:	cmp    edi,DWORD PTR [eax+0x1aa13568]
  4113ee:	mov    ds:0xda4d357c,eax
  4113f3:	mov    eax,esi
  4113f5:	and    ecx,DWORD PTR [ebp*2-0x24f653c9]
  4113fc:	gs xchg esp,eax
  4113fe:	rol    BYTE PTR [ebx+ecx*1+0x1c],0x6d
  411403:	out    dx,al
  411404:	lea    ebx,[ecx-0x72d028ea]
  41140a:	jb     0x411472
  41140c:	shr    BYTE PTR [edx+0x23],0x25
  411410:	or     BYTE PTR [eax+0x7fcc938a],al
  411416:	push   edx
  411417:	fcmovu st,st(5)
  411419:	jp     0x4113e5
  41141b:	push   edx
  41141c:	fiadd  DWORD PTR [eax+0xd]
  41141f:	sbb    bl,cl
  411421:	xor    al,0xfa
  411423:	dec    ebp
  411424:	das    
  411425:	push   esp
  411426:	ror    BYTE PTR [edx-0x59],0xc8
  41142a:	stos   BYTE PTR es:[edi],al
  41142b:	aaa    
  41142c:	ins    BYTE PTR es:[edi],dx
  41142d:	icebp  
  41142e:	fstp   TBYTE PTR [ebp-0xe]
  411431:	rol    BYTE PTR [edi-0x233ffe47],cl
  411437:	or     ch,bh
  411439:	inc    eax
  41143a:	les    eax,FWORD PTR [edx-0x521c74ee]
  411440:	adc    al,0x44
  411442:	fwait
  411443:	cmp    eax,0x62d659fe
  411448:	jmp    0x411427
  41144a:	inc    edi
  41144b:	rcl    BYTE PTR [esi-0x58],cl
  41144e:	mov    edi,0x621de940
  411453:	lods   al,BYTE PTR ds:[esi]
  411454:	adc    esi,DWORD PTR [ebp+0x537cdfef]
  41145a:	and    DWORD PTR [ecx-0x68d850a6],0xffffffe7
  411461:	jge    0x4114ca
  411463:	fstp   QWORD PTR [eax+ebx*2-0x60]
  411467:	cmp    ebx,DWORD PTR [eax+0x6a]
  41146a:	xlat   BYTE PTR ds:[ebx]
  41146b:	cmp    eax,0x52a4c9bb
  411470:	mov    cl,0xa2
  411472:	fmul   DWORD PTR [edx+0x6]
  411475:	(bad)  
  411476:	int3   
  411477:	ror    DWORD PTR [ecx-0x4b],0xde
  41147b:	stc    
  41147c:	rcr    DWORD PTR [esi],1
  41147e:	mov    cl,0x1c
  411480:	inc    esp
  411481:	pop    ebx
  411482:	ror    BYTE PTR [edi],0xc6
  411485:	mov    al,ds:0xd29d6708
  41148a:	outs   dx,BYTE PTR ds:[esi]
  41148b:	lds    ebp,FWORD PTR [ecx+0x9]
  41148e:	or     esp,ebx
  411490:	(bad)  
  411491:	pop    ds
  411492:	je     0x41147b
  411494:	or     eax,0xe5d056a6
  411499:	push   0xfffffff7
  41149b:	dec    esi
  41149c:	outs   dx,DWORD PTR ds:[si]
  41149e:	arpl   cx,ax
  4114a0:	jae    0x4114ea
  4114a2:	xor    DWORD PTR [edx+0x3c9ff3de],0xffffffbe
  4114a9:	outs   dx,DWORD PTR ds:[esi]
  4114ab:	dec    edx
  4114ac:	stc    
  4114ad:	and    cl,BYTE PTR [ecx-0x3e9fd126]
  4114b3:	lock shl DWORD PTR [esi-0x45],1
  4114b7:	leave  
  4114b8:	scas   al,BYTE PTR es:[edi]
  4114b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114ba:	arpl   WORD PTR [ebp+ecx*2-0x46],ax
  4114be:	enter  0xdf8a,0x44
  4114c2:	sbb    bh,BYTE PTR [ebp-0x55aba842]
  4114c8:	lahf   
  4114c9:	inc    esi
  4114ca:	add    ebp,DWORD PTR [ebx+0x77123f7]
  4114d0:	fs jl  0x4114ab
  4114d3:	mov    ds:0xb05ed323,al
  4114d8:	inc    ebx
  4114d9:	or     BYTE PTR [ecx-0x3feeb261],al
  4114df:	inc    edi
  4114e0:	sub    al,0xc5
  4114e2:	jecxz  0x4114fb
  4114e4:	or     al,0x53
  4114e6:	call   FWORD PTR [ebp+0x45]
  4114e9:	mov    al,0xaf
  4114eb:	inc    esp
  4114ec:	mov    dh,0x4f
  4114ee:	ret    
  4114ef:	push   edx
  4114f0:	mov    eax,ds:0x2afd8d50
  4114f5:	cmp    al,0x3d
  4114f7:	stc    
  4114f8:	inc    edx
  4114f9:	add    esp,eax
  4114fb:	add    eax,0xf9a87254
  411500:	cmp    BYTE PTR [edx-0x62],bl
  411503:	or     bh,BYTE PTR [ecx-0x9187a7c]
  411509:	pop    esi
  41150a:	push   es
  41150b:	adc    dl,BYTE PTR [esi]
  41150d:	sbb    ch,dl
  41150f:	xchg   BYTE PTR [esi+ecx*1+0x3c],bl
  411513:	push   ss
  411514:	and    esp,edi
  411516:	fstp   TBYTE PTR [ebx]
  411518:	xor    bh,ah
  41151a:	aad    0x72
  41151c:	xchg   edi,eax
  41151d:	and    ebp,edx
  41151f:	add    al,0xe3
  411521:	daa    
  411522:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  411524:	sbb    ebp,edx
  411526:	clc    
  411527:	add    dl,BYTE PTR [ecx-0x14ce6ff3]
  41152d:	out    0xb2,eax
  41152f:	push   ebp
  411530:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411531:	(bad)  
  411532:	int3   
  411533:	in     al,0x69
  411535:	out    dx,ax
  411537:	clc    
  411538:	push   cs
  411539:	daa    
  41153a:	pop    ebp
  41153b:	jl     0x411551
  41153d:	mov    esi,DWORD PTR ds:0x357d1ee5
  411543:	xchg   edx,eax
  411544:	outs   dx,BYTE PTR ds:[esi]
  411545:	jo     0x4115a7
  411547:	push   ss
  411548:	arpl   WORD PTR [edi-0x36],sp
  41154b:	pop    edi
  41154c:	call   DWORD PTR [edx+0xa]
  41154f:	jmp    0x4114e1
  411551:	mov    eax,ds:0xe5c3a322
  411556:	mov    dl,0xe8
  411558:	push   eax
  411559:	push   esi
  41155a:	dec    eax
  41155b:	jb     0x4114f4
  41155d:	and    ecx,0x71
  411560:	pop    ecx
  411561:	dec    edi
  411562:	jg     0x411589
  411564:	les    ecx,FWORD PTR [ebp-0x2c]
  411567:	push   0x48
  411569:	inc    edi
  41156a:	pop    es
  41156b:	stc    
  41156c:	je     0x4115af
  41156e:	add    al,0x55
  411570:	jmp    0x4115e5
  411572:	push   ds
  411573:	shl    BYTE PTR [ebx+esi*1+0x40],cl
  411577:	rcr    BYTE PTR [ecx+ecx*1+0x22],1
  41157b:	sbb    eax,0x1827f80f
  411580:	rol    DWORD PTR es:[ebp+0x29],cl
  411584:	in     eax,0x33
  411586:	stos   BYTE PTR es:[edi],al
  411587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411588:	test   cl,0xc9
  41158b:	sub    eax,0xe657d56e
  411590:	in     eax,dx
  411591:	push   edx
  411592:	ss ja  0x411530
  411595:	mov    esi,0x2770863a
  41159a:	add    cl,BYTE PTR [edi+0x3c]
  41159d:	aaa    
  41159e:	xchg   edx,eax
  41159f:	pusha  
  4115a0:	sub    eax,0x6d2bda5
  4115a5:	sbb    DWORD PTR [eax+ecx*1],ecx
  4115a8:	jbe    0x4115b3
  4115aa:	mov    cl,0x94
  4115ac:	pop    ebp
  4115ad:	pop    esp
  4115ae:	adc    BYTE PTR [ecx-0x6cbd50ba],al
  4115b4:	outs   dx,BYTE PTR ds:[esi]
  4115b5:	inc    esi
  4115b6:	cli    
  4115b7:	push   es
  4115b8:	dec    edi
  4115b9:	mov    dl,0xb1
  4115bb:	cmp    esi,esp
  4115bd:	adc    DWORD PTR ds:0x9ea9ad6b,eax
  4115c3:	fild   QWORD PTR [esi+0xd]
  4115c6:	xor    cl,bl
  4115c8:	jge    0x4115bf
  4115ca:	pop    ecx
  4115cb:	mov    WORD PTR [edi],cs
  4115cd:	mov    dh,0x8
  4115cf:	call   0x1b03:0xf3a82e11
  4115d6:	inc    ebx
  4115d7:	hlt    
  4115d8:	fist   WORD PTR [eax-0x66d604c2]
  4115de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115df:	jb     0x4115d9
  4115e1:	pop    esp
  4115e2:	inc    ebp
  4115e3:	mov    al,ds:0x89acc4e1
  4115e8:	call   0x19cc:0xdf12054a
  4115ef:	add    cl,bl
  4115f1:	call   0x760cf09e
  4115f6:	push   esp
  4115f7:	pop    eax
  4115f8:	mov    ah,0xf5
  4115fa:	sub    al,0xb6
  4115fc:	or     eax,0x7d6b2b
  411601:	lock push ds
  411603:	dec    ebx
  411604:	cmp    esi,0xffffffdd
  411607:	add    DWORD PTR [ecx-0x18e2f884],eax
  41160d:	xchg   esp,eax
  41160e:	pop    ss
  41160f:	mov    ch,al
  411611:	int3   
  411612:	lds    edi,FWORD PTR [edi]
  411614:	das    
  411615:	test   BYTE PTR [edi+ebp*4],0x4e
  411619:	pop    ebp
  41161a:	icebp  
  41161b:	sub    dh,BYTE PTR [esi]
  41161d:	adc    BYTE PTR ds:0xfa11c2bd,bl
  411623:	or     BYTE PTR [ebp-0x6c],cl
  411626:	fs adc al,0xd2
  411629:	nop
  41162a:	mov    al,0xf1
  41162c:	out    dx,al
  41162d:	(bad)  
  41162f:	xor    eax,0x7114ef5b
  411634:	jp     0x411618
  411636:	mov    ds:0x9d3768d2,al
  41163b:	inc    edx
  41163c:	in     al,0xe2
  41163e:	and    eax,DWORD PTR [ecx+0x1b0de95c]
  411644:	push   ds
  411645:	or     ch,BYTE PTR [ebx+0x14b27b32]
  41164b:	xchg   esi,eax
  41164c:	cdq    
  41164d:	sub    BYTE PTR [ebp-0x8],dl
  411650:	jmp    0xf2b7:0x678bbf2b
  411657:	bound  edi,QWORD PTR [edx]
  411659:	shl    BYTE PTR [ebp-0x2cd262f4],1
  41165f:	daa    
  411660:	cwde   
  411661:	sub    ecx,DWORD PTR [esi]
  411663:	cmp    DWORD PTR [ecx+0x4838d8da],eax
  411669:	ins    BYTE PTR es:[edi],dx
  41166a:	xchg   ebp,eax
  41166b:	sbb    eax,0xa115661e
  411670:	inc    ecx
  411671:	adc    al,0x84
  411673:	(bad)  [ecx+0x62]
  411676:	jns    0x4116c4
  411678:	mov    eax,ds:0x42516190
  41167d:	add    BYTE PTR [ecx-0x69cfc4d6],dl
  411683:	(bad)  
  411684:	fwait
  411685:	push   esi
  411686:	cs jge 0x4116c9
  411689:	test   eax,0xbcc20600
  41168e:	les    ebx,FWORD PTR [ecx-0x70]
  411691:	pop    ds
  411692:	(bad)  
  411694:	xor    ah,al
  411696:	jo     0x411697
  411698:	add    BYTE PTR [edi+0x6],dh
  41169b:	add    ebx,DWORD PTR [esi+ebx*8]
  41169e:	test   ebx,ecx
  4116a0:	pushf  
  4116a1:	imul   ebp,DWORD PTR [edi-0x32],0xc39a0eb5
  4116a8:	xchg   BYTE PTR [ecx-0x5f8a2650],dh
  4116ae:	pop    es
  4116af:	int    0x3f
  4116b1:	cmp    al,0x12
  4116b3:	push   0x47
  4116b5:	dec    edx
  4116b6:	test   al,0x23
  4116b8:	mov    dl,0xb
  4116ba:	in     al,0xfa
  4116bc:	out    0xc3,eax
  4116be:	std    
  4116bf:	xchg   edi,eax
  4116c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116c1:	sti    
  4116c2:	lods   al,BYTE PTR ds:[esi]
  4116c3:	imul   esp,DWORD PTR [esi-0x46],0x86e21fe9
  4116ca:	ror    eax,0x82
  4116cd:	pop    edx
  4116ce:	jmp    0x2762:0x1391e257
  4116d5:	push   0x4c
  4116d7:	and    eax,0xbf8405fe
  4116dc:	push   esp
  4116dd:	jmp    0x411758
  4116df:	fidiv  DWORD PTR [edi]
  4116e1:	jns    0x4116d4
  4116e3:	xchg   BYTE PTR [edx-0x74],ch
  4116e6:	lea    esp,[ebp-0x2d7da305]
  4116ec:	inc    esp
  4116ed:	in     eax,dx
  4116ee:	mov    eax,0xff483b91
  4116f3:	or     eax,0x39499777
  4116f8:	push   es
  4116f9:	(bad)  
  4116fa:	mov    ecx,0x219ec202
  4116ff:	aad    0x8f
  411701:	jge    0x4116bc
  411703:	fwait
  411704:	idiv   DWORD PTR [esi-0x21]
  411707:	push   0xd89efaeb
  41170c:	inc    ecx
  41170d:	in     al,dx
  41170e:	mov    bh,BYTE PTR [esi+0x5c3c9d3a]
  411714:	jle    0x411705
  411716:	xchg   edx,eax
  411717:	mov    BYTE PTR [esp+ebp*2+0x72c2908d],al
  41171e:	xor    esi,ecx
  411720:	ret    
  411721:	call   0x46ec:0x52b372af
  411728:	pop    edi
  411729:	sbb    eax,0x6dd71ee6
  41172e:	loopne 0x41173a
  411730:	hlt    
  411731:	sti    
  411732:	rol    BYTE PTR [eax+0x42],1
  411735:	mov    dh,0x75
  411737:	dec    ebp
  411738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411739:	add    BYTE PTR [ebp-0x56],bh
  41173c:	shl    BYTE PTR gs:[ebp+edi*8-0x282fe31c],cl
  411744:	sbb    ecx,ebx
  411746:	dec    edi
  411747:	or     al,0xcb
  411749:	jle    0x4117b6
  41174b:	mov    al,0xd5
  41174d:	enter  0xcc06,0x8a
  411751:	cwde   
  411752:	hlt    
  411753:	loop   0x41171b
  411755:	pop    ecx
  411756:	ret    0x3f7a
  411759:	sti    
  41175a:	push   ds
  41175b:	cmp    al,0x1b
  41175d:	jb     0x411722
  41175f:	jnp    0x411782
  411761:	jmp    0xe377:0xc545a216
  411768:	dec    edx
  411769:	stc    
  41176a:	mov    DWORD PTR [ebx],edi
  41176c:	lods   al,BYTE PTR ds:[esi]
  41176d:	add    eax,0x5a5f4258
  411772:	inc    eax
  411773:	cwde   
  411774:	adc    eax,0x262a483e
  411779:	std    
  41177a:	in     eax,dx
  41177b:	repz mov edx,DWORD PTR [edi+edx*4+0x5e]
  411780:	push   edi
  411781:	stos   BYTE PTR es:[edi],al
  411782:	mov    ecx,0xc75a65d
  411787:	div    BYTE PTR [ecx+0x28]
  41178a:	(bad)  
  41178b:	mov    ebx,0xdcdde763
  411790:	in     al,dx
  411791:	call   0xe42a56c
  411796:	sahf   
  411797:	sbb    BYTE PTR [edi],bl
  411799:	xchg   ecx,eax
  41179a:	mov    ds:0xb4dc9b90,eax
  41179f:	and    ebx,DWORD PTR [edx*2+0x580a0385]
  4117a6:	(bad)  
  4117a7:	outs   dx,DWORD PTR ds:[esi]
  4117a8:	dec    ebp
  4117a9:	mov    eax,0x24f57137
  4117ae:	sub    al,0x2
  4117b0:	adc    dl,BYTE PTR [esi]
  4117b2:	repz jg 0x41173c
  4117b5:	not    BYTE PTR [ebp-0x16]
  4117b8:	(bad)  
  4117b9:	out    0x72,al
  4117bb:	mov    esi,DWORD PTR [esi]
  4117bd:	call   0x9408:0xddc30098
  4117c4:	and    al,0x7
  4117c6:	or     ch,BYTE PTR ds:0x86c610e0
  4117cc:	sub    DWORD PTR [ebx+0x4c863926],ebx
  4117d2:	mov    bl,0xbf
  4117d4:	loopne 0x411775
  4117d6:	sub    al,0x23
  4117d8:	fst    DWORD PTR [eax-0x419a64a5]
  4117de:	pop    ebp
  4117df:	mov    edi,0x5a5cf47f
  4117e4:	sbb    eax,0x41282d0
  4117e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117ea:	test   bl,ah
  4117ec:	jge    0x41178b
  4117ee:	icebp  
  4117ef:	ror    BYTE PTR [eax+0x6ef23a86],cl
  4117f5:	fcomp  DWORD PTR [ecx+0x6ebe598d]
  4117fb:	into   
  4117fc:	adc    BYTE PTR [esi*4-0x12bc0781],bh
  411803:	cs out dx,eax
  411805:	and    bl,BYTE PTR [ecx-0x23f62e14]
  41180b:	test   eax,0xcbc61162
  411810:	bound  ebp,QWORD PTR [edi]
  411812:	inc    edi
  411813:	push   0x3e2351fc
  411818:	pop    ebp
  411819:	push   0xffffff9c
  41181b:	icebp  
  41181c:	sbb    dh,BYTE PTR [ebp+0x28]
  41181f:	imul   ebp,ebx,0x4768e97f
  411825:	int3   
  411826:	das    
  411827:	jb     0x4117e7
  411829:	sub    DWORD PTR [ecx+0x77fcdbf1],ebp
  41182f:	pop    edi
  411830:	fidiv  WORD PTR [ebp+0x2a]
  411833:	push   ax
  411835:	test   eax,0xf1633f71
  41183a:	mov    esp,0xd9292ea8
  41183f:	sti    
  411840:	hlt    
  411841:	pushf  
  411842:	xchg   edi,eax
  411843:	adc    dl,ch
  411845:	loopne 0x4117f6
  411847:	dec    esp
  411848:	data16 (bad) 
  41184a:	xlat   BYTE PTR ds:[ebx]
  41184b:	or     BYTE PTR [edx+0x6d],dl
  41184e:	add    BYTE PTR [esi+0x7e1827b1],al
  411854:	mov    eax,DWORD PTR [esi+0x68]
  411857:	repnz mov ds:0xe240bb25,al
  41185d:	in     eax,dx
  41185e:	jbe    0x411816
  411860:	sub    edx,ebx
  411862:	retf   
  411863:	adc    edi,DWORD PTR [esi+0x2d30a1a9]
  411869:	push   eax
  41186a:	sbb    eax,0x8e8a5a01
  41186f:	int    0xd7
  411871:	fwait
  411872:	loopne 0x4118d3
  411874:	fst    st(0)
  411876:	rcl    DWORD PTR [ebx],1
  411878:	ret    
  411879:	dec    eax
  41187a:	das    
  41187b:	int    0x84
  41187d:	sub    dl,bl
  41187f:	dec    edi
  411880:	je     0x4118f7
  411882:	popa   
  411883:	sti    
  411884:	aam    0x11
  411886:	aas    
  411887:	nop
  411888:	jno    0x4118c9
  41188a:	das    
  41188b:	or     esi,edi
  41188d:	jae    0x4118a4
  41188f:	in     eax,0x88
  411891:	adc    al,0xa2
  411893:	xor    al,cl
  411895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411896:	les    ebp,FWORD PTR [ebx]
  411898:	sbb    al,0xdc
  41189a:	mov    ecx,edx
  41189c:	or     DWORD PTR [edx],esp
  41189e:	jmp    0xb945c214
  4118a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118a4:	test   BYTE PTR [edx+eax*8+0x20f212b5],ah
  4118ab:	repnz pop ss
  4118ad:	mov    esp,0xc173451b
  4118b2:	data16 into 
  4118b4:	daa    
  4118b5:	mov    al,0xb4
  4118b7:	pop    ebx
  4118b8:	gs pop ecx
  4118ba:	dec    edi
  4118bb:	push   eax
  4118bc:	sbb    eax,0xf72591e
  4118c1:	fisubr WORD PTR [edi]
  4118c3:	outs   dx,BYTE PTR ds:[esi]
  4118c4:	aad    0x37
  4118c6:	(bad)  
  4118c7:	sbb    al,0xf7
  4118c9:	or     edx,esi
  4118cb:	push   esi
  4118cc:	mov    DWORD PTR [ebp+ebx*8-0x2c9e106e],ebp
  4118d3:	test   al,0x23
  4118d5:	in     eax,dx
  4118d6:	out    dx,al
  4118d7:	(bad)  
  4118d8:	stc    
  4118d9:	inc    eax
  4118da:	dec    ebp
  4118db:	int    0xa8
  4118dd:	das    
  4118de:	cmc    
  4118df:	cmp    ch,0x47
  4118e2:	push   esp
  4118e3:	inc    ecx
  4118e4:	iret   
  4118e5:	jge    0x411892
  4118e7:	scas   al,BYTE PTR es:[edi]
  4118e8:	pop    ds
  4118e9:	es leave 
  4118eb:	mov    bh,0x49
  4118ed:	inc    edx
  4118ee:	int3   
  4118ef:	cwde   
  4118f0:	rcl    DWORD PTR [esi-0x4cc5c8f7],1
  4118f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118f7:	sti    
  4118f8:	push   ss
  4118f9:	adc    edi,ecx
  4118fb:	jmp    0x80985e91
  411900:	and    BYTE PTR [ebx+0xf],bh
  411903:	in     eax,0x13
  411905:	jo     0x4118f8
  411907:	pop    ds
  411908:	sub    bl,ch
  41190a:	jg     0x411924
  41190c:	xchg   ecx,eax
  41190d:	fistp  QWORD PTR [eax-0x7a248f45]
  411913:	into   
  411914:	jno    0x4118da
  411916:	cmp    al,0x8f
  411918:	pop    esp
  411919:	cmp    al,0x23
  41191b:	sub    ecx,DWORD PTR [edx-0x49]
  41191e:	mov    dl,0x29
  411920:	(bad)  
  411922:	sbb    eax,0x6f76bd8b
  411927:	cmp    eax,0x96a43651
  41192c:	call   DWORD PTR [eax]
  41192e:	pop    esi
  41192f:	cmp    esp,edx
  411931:	jge    0x4118dd
  411933:	icebp  
  411934:	sti    
  411935:	lahf   
  411936:	scas   al,BYTE PTR es:[edi]
  411937:	inc    edx
  411938:	mov    cl,0x4
  41193a:	or     DWORD PTR [edx+0x24],0xb
  41193e:	in     al,0x27
  411940:	or     al,0x9d
  411942:	or     DWORD PTR [ebp+0x31],esi
  411945:	add    BYTE PTR [ebx+0x4c],dh
  411948:	push   eax
  411949:	mov    ecx,0x2a27a87
  41194e:	aaa    
  41194f:	or     DWORD PTR [esi-0x41],0x62489eb5
  411956:	(bad)  
  411957:	stc    
  411958:	push   edx
  411959:	mov    bl,0xf
  41195b:	popf   
  41195c:	or     DWORD PTR [edi-0x5accf159],0x6d
  411963:	sub    al,0x4e
  411965:	scas   eax,DWORD PTR es:[edi]
  411966:	pop    ecx
  411967:	and    ah,ah
  411969:	inc    ecx
  41196a:	out    dx,al
  41196b:	jae    0x4119af
  41196d:	add    DWORD PTR [esi+0x5be450d9],0x23
  411974:	sub    eax,0x4239b2c7
  411979:	addr16 pop ds
  41197b:	add    ah,al
  41197d:	fnstenv [ebx+esi*4-0x1c20588e]
  411984:	iret   
  411985:	test   DWORD PTR [edx+eiz*8+0x5bfd159d],edi
  41198c:	inc    edi
  41198d:	pop    es
  41198e:	nop
  41198f:	cmp    DWORD PTR [eax-0x49640939],0x26
  411996:	and    bh,BYTE PTR [eax-0x77]
  411999:	mov    al,ds:0x3c022f92
  41199e:	sbb    eax,0xd684a325
  4119a3:	dec    esi
  4119a4:	(bad)  
  4119a5:	xor    ecx,DWORD PTR [edx+esi*4-0x163f228e]
  4119ac:	xchg   ebx,eax
  4119ad:	dec    edi
  4119ae:	call   0x356c78b6
  4119b3:	rcl    edx,1
  4119b5:	or     edx,ebx
  4119b7:	fisub  WORD PTR [edi-0x33]
  4119ba:	jne    0x4119c0
  4119bc:	addr16 inc esi
  4119be:	sub    cl,BYTE PTR [edx-0x90c6f52]
  4119c4:	push   ebx
  4119c5:	ud0    ebx,DWORD PTR [ebx-0x1d48a21c]
  4119cc:	mov    ch,0x98
  4119ce:	xor    eax,0x65e6c00f
  4119d3:	push   edi
  4119d4:	in     al,0x20
  4119d6:	mov    al,0x6b
  4119d8:	sti    
  4119d9:	loope  0x4119ab
  4119db:	in     eax,dx
  4119dc:	xor    esp,eax
  4119de:	out    dx,eax
  4119df:	scas   eax,DWORD PTR es:[edi]
  4119e0:	xor    DWORD PTR [ebx],eax
  4119e2:	cmp    DWORD PTR [eax+ebp*4-0x45307fb6],ebp
  4119e9:	and    BYTE PTR [esi+esi*4-0x1],0xbb
  4119ee:	pop    edi
  4119ef:	int    0x49
  4119f1:	sub    esi,DWORD PTR [edi+ebp*8+0x35]
  4119f5:	mov    esp,0xbd2fda95
  4119fa:	ret    
  4119fb:	pop    ebp
  4119fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119fd:	cmp    BYTE PTR [ebx+0x50],cl
  411a00:	jae    0x411a34
  411a02:	sahf   
  411a03:	pop    ss
  411a04:	pop    ecx
  411a05:	enter  0x47c0,0x4d
  411a09:	pop    ecx
  411a0a:	cs dec ebp
  411a0c:	std    
  411a0d:	aaa    
  411a0e:	test   al,0xbe
  411a10:	jae    0x4119a6
  411a12:	mov    ebx,DWORD PTR [edi]
  411a14:	cmc    
  411a15:	jmp    0x4512:0xdbb595e9
  411a1c:	jns    0x411a87
  411a1e:	and    eax,0xb976380e
  411a23:	jp     0x411a48
  411a25:	and    esp,DWORD PTR [esi+ebx*8-0x4f]
  411a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a2a:	mov    ebx,0xebd8037b
  411a2f:	jle    0x411a64
  411a31:	ficomp DWORD PTR [ebp-0x6c584f10]
  411a37:	or     al,0x23
  411a39:	and    ebx,esp
  411a3b:	in     eax,0x5b
  411a3d:	jmp    0x87ce:0xef6bcc2c
  411a44:	fisubr WORD PTR [esi-0x32]
  411a47:	xchg   DWORD PTR [ebp+0x20a684ae],esi
  411a4d:	pop    edi
  411a4e:	pop    es
  411a4f:	adc    esi,DWORD PTR [edx]
  411a51:	cmp    bh,BYTE PTR [edx-0x41688988]
  411a57:	pop    esi
  411a58:	mov    ds:0x84cdb490,eax
  411a5d:	mov    bl,0x94
  411a5f:	int    0x3a
  411a61:	das    
  411a62:	sub    BYTE PTR cs:[ecx],cl
  411a65:	stos   DWORD PTR es:[edi],eax
  411a66:	adc    BYTE PTR ds:0x3c10b815,ch
  411a6c:	pop    es
  411a6d:	aam    0xca
  411a6f:	clc    
  411a70:	pop    edx
  411a71:	cli    
  411a72:	or     BYTE PTR [eax],ah
  411a74:	jnp    0x4119fa
  411a76:	adc    al,0xa2
  411a78:	mov    ebp,0x8629d84a
  411a7d:	mov    BYTE PTR [ecx-0xe],ch
  411a80:	cli    
  411a81:	rol    DWORD PTR [ecx+0x75f8f0fc],cl
  411a87:	pop    ecx
  411a88:	xchg   BYTE PTR ds:0x2da4f18,bh
  411a8e:	lahf   
  411a8f:	bound  edi,QWORD PTR [ebx-0x66]
  411a92:	sti    
  411a93:	mov    BYTE PTR es:[esi-0x3d],dl
  411a97:	test   BYTE PTR [ecx],dl
  411a99:	mov    bl,0x97
  411a9b:	sbb    BYTE PTR [ebp-0x2be349e4],al
  411aa1:	xchg   DWORD PTR [ebx-0x7384ed33],edx
  411aa7:	sub    eax,0xb66e5c3e
  411aac:	mov    esp,0xc51b8a3d
  411ab1:	pop    es
  411ab2:	push   0x8b2a392
  411ab7:	shl    BYTE PTR [ecx],cl
  411ab9:	das    
  411aba:	xor    ecx,esi
  411abc:	lea    eax,[ecx+eax*1+0x3272f3]
  411ac3:	mov    ecx,DWORD PTR [ebp+0x8]
  411ac6:	mov    edx,DWORD PTR [ebp-0x20]
  411ac9:	mov    DWORD PTR [edx+ecx*4],eax
  411acc:	mov    eax,DWORD PTR [ebp-0xc]
  411acf:	mov    ecx,DWORD PTR [ebp+0x8]
  411ad2:	xor    eax,esi
  411ad4:	lea    eax,[eax+ecx*1+0x3272f3]
  411adb:	mov    DWORD PTR [ebp+0x8],eax
  411ade:	mov    eax,DWORD PTR [ebp-0xc]
  411ae1:	mov    ecx,DWORD PTR [ebp+0x14]
  411ae4:	xor    eax,esi
  411ae6:	add    eax,edi
  411ae8:	imul   eax,DWORD PTR [ecx]
  411aeb:	mov    ecx,DWORD PTR [ebp-0x4]
  411aee:	mov    edx,DWORD PTR [ebp+0x8]
  411af1:	xor    ecx,esi
  411af3:	lea    ecx,[ecx+edx*1+0x3272f3]
  411afa:	cmp    ecx,eax
  411afc:	jne    0x40f6ee
  411b02:	mov    eax,DWORD PTR [ebp-0x4]
  411b05:	xor    eax,esi
  411b07:	add    eax,edi
  411b09:	mov    DWORD PTR [ebp-0x10],eax
  411b0c:	mov    ebx,0x65655
  411b11:	add    ebx,0x3234
  411b17:	xchg   ebx,esi
  411b19:	xor    ebx,ebx
  411b1b:	push   esi
  411b1c:	mov    esi,ebx
  411b1e:	pop    ebx
  411b1f:	mov    edx,esi
  411b21:	add    ebx,0x1002
  411b27:	lea    eax,[ebp-0x18]
  411b2a:	add    edx,eax
  411b2c:	add    edx,0x5
  411b2f:	push   edx
  411b30:	inc    esi
  411b31:	pop    ecx
  411b32:	dec    ecx
  411b33:	xchg   ecx,eax
  411b34:	dec    eax
  411b35:	xchg   ecx,eax
  411b36:	dec    ecx
  411b37:	xchg   ecx,edx
  411b39:	dec    edx
  411b3a:	push   edx
  411b3b:	mov    edx,ebx
  411b3d:	pop    ebx
  411b3e:	dec    ebx
  411b3f:	call   DWORD PTR [ebx]
  411b41:	cmp    DWORD PTR [ebp+0x10],esi
  411b44:	je     0x411b65
  411b4a:	xchg   edx,eax
  411b4b:	push   0xc
  411b4d:	pop    ecx
  411b4e:	dec    ecx
  411b4f:	push   0x3
  411b51:	pop    ebx
  411b52:	inc    ebx
  411b53:	xchg   ebx,ecx
  411b55:	inc    ecx
  411b56:	sub    ebx,ecx
  411b58:	xchg   ebx,ecx
  411b5a:	dec    ecx
  411b5b:	dec    ecx
  411b5c:	mov    eax,DWORD PTR [ebp-0x1c]
  411b5f:	imul   eax,ecx
  411b62:	add    esp,eax
  411b64:	xchg   edx,eax
  411b65:	push   eax
  411b66:	xor    ebx,ebx
  411b68:	mov    edx,esp
  411b6a:	dec    edx
  411b6b:	inc    ebx
  411b6c:	add    ebx,DWORD PTR [edx+ebx*1]
  411b6f:	dec    ebx
  411b70:	xor    edx,edx
  411b72:	add    DWORD PTR [ebp-0x10],ebx
  411b75:	pop    ebx
  411b76:	mov    eax,DWORD PTR [ebp-0x10]
  411b79:	pop    edi
  411b7a:	pop    esi
  411b7b:	pop    ebx
  411b7c:	leave  
  411b7d:	ret    0x10
  411b80:	push   ebp
  411b81:	mov    ebp,esp
  411b83:	push   ecx
  411b84:	and    DWORD PTR ds:0x4291db,ecx
  411b8a:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  411b91:	and    DWORD PTR ds:0x4291cb,0x0
  411b9b:	mov    ecx,DWORD PTR ds:0x4291cb
  411ba1:	inc    ecx
  411ba2:	mov    DWORD PTR ds:0x4291cb,ecx
  411ba8:	cmp    DWORD PTR ds:0x4291cb,0x20
  411baf:	jbe    0x411bd2
  411bb5:	jmp    0x411bc5
  411bba:	push   0x4291cf
  411bbf:	call   DWORD PTR ds:0x42a673
  411bc5:	cmp    DWORD PTR ds:0x4291cb,0x1c
  411bcc:	jb     0x411b9b
  411bd2:	mov    eax,DWORD PTR [ebp-0x4]
  411bd5:	xor    DWORD PTR ds:0x4291d7,0x42915f
  411bdf:	mov    edx,DWORD PTR [ebp+0x10]
  411be2:	mov    ecx,0x75108ac
  411be7:	sbb    DWORD PTR ds:0x42919f,0x2976
  411bf1:	xor    eax,ecx
  411bf3:	xor    DWORD PTR ds:0x429167,0x4291ab
  411bfd:	add    eax,0x3272f3
  411c02:	mov    DWORD PTR [edx],eax
  411c04:	and    eax,DWORD PTR ds:0x4291e7
  411c0a:	mov    eax,DWORD PTR [ebp+0xc]
  411c0d:	and    DWORD PTR ds:0x4291d3,edi
  411c13:	xor    eax,ecx
  411c15:	xor    DWORD PTR ds:0x429187,0x6377
  411c1f:	push   esi
  411c20:	xor    edx,DWORD PTR ds:0x42915b
  411c26:	mov    esi,DWORD PTR [ebp+0x10]
  411c29:	mov    edx,0x3272f3
  411c2e:	add    eax,edx
  411c30:	mov    DWORD PTR [esi+0x4],eax
  411c33:	mov    eax,DWORD PTR [ebp+0x14]
  411c36:	mov    esi,DWORD PTR [ebp+0x10]
  411c39:	mov    DWORD PTR [esi+0x8],eax
  411c3c:	mov    eax,DWORD PTR [ebp+0x18]
  411c3f:	mov    esi,DWORD PTR [ebp+0x10]
  411c42:	mov    DWORD PTR [esi+0xc],eax
  411c45:	mov    eax,DWORD PTR [ebp+0x1c]
  411c48:	mov    esi,DWORD PTR [ebp+0x10]
  411c4b:	mov    DWORD PTR [esi+0x10],eax
  411c4e:	mov    eax,DWORD PTR [ebp+0x8]
  411c51:	xor    eax,ecx
  411c53:	add    eax,edx
  411c55:	pop    esi
  411c56:	leave  
  411c57:	ret    0x18
  411c5a:	push   ebp
  411c5b:	mov    ebp,esp
  411c5d:	sub    esp,0x9c
  411c63:	movzx  ecx,BYTE PTR ds:0x429187
  411c6a:	or     DWORD PTR ds:0x4291f3,ecx
  411c70:	mov    ecx,DWORD PTR [ebp+0x8]
  411c73:	mov    eax,0x8a99
  411c78:	sub    DWORD PTR ds:0x4291a7,0x19e0
  411c82:	xor    ax,WORD PTR [ecx+0x20]
  411c86:	mov    ecx,0x3b5b
  411c8b:	add    ax,cx
  411c8e:	and    DWORD PTR ds:0x4291f7,0x0
  411c98:	mov    ecx,DWORD PTR ds:0x4291f7
  411c9e:	inc    ecx
  411c9f:	mov    DWORD PTR ds:0x4291f7,ecx
  411ca5:	cmp    DWORD PTR ds:0x4291f7,0x11
  411cac:	jl     0x411cec
  411cb2:	jmp    0x411cc5
  411cb7:	push   DWORD PTR [ebp-0x28]
  411cba:	push   0x42806d
  411cbf:	call   DWORD PTR ds:0x42a677
  411cc5:	cmp    DWORD PTR ds:0x4291f7,0x10
  411ccc:	jne    0x411cdf
  411cd2:	mov    ecx,DWORD PTR ds:0x4291f7
  411cd8:	inc    ecx
  411cd9:	mov    DWORD PTR ds:0x4291f7,ecx
  411cdf:	cmp    DWORD PTR ds:0x4291f7,0x1c
  411ce6:	jb     0x411c98
  411cec:	movzx  eax,ax
  411cef:	mov    DWORD PTR [ebp-0x10],eax
  411cf2:	mov    BYTE PTR [ebp-0x1],0x82
  411cf6:	and    DWORD PTR ds:0x4291df,0x0
  411d00:	jmp    0x411d14
  411d05:	xor    ecx,ecx
  411d07:	add    ecx,DWORD PTR ds:0x4291df
  411d0d:	inc    ecx
  411d0e:	mov    DWORD PTR ds:0x4291df,ecx
  411d14:	cmp    DWORD PTR ds:0x4291df,0x1b
  411d1b:	jae    0x411d48
  411d21:	cmp    DWORD PTR ds:0x4291df,0x22
  411d28:	jge    0x411d48
  411d2e:	jmp    0x411d43
  411d33:	push   0x4280f2
  411d38:	push   0x0
  411d3a:	push   DWORD PTR [ebp-0x1c]
  411d3d:	call   DWORD PTR ds:0x42a67f
  411d43:	jmp    0x411d05
  411d48:	lea    eax,[ebp-0x1]
  411d4b:	inc    DWORD PTR ds:0x42919b
  411d51:	mov    DWORD PTR [ebp-0xc],eax
  411d54:	mov    al,BYTE PTR [ebp-0x1]
  411d57:	and    DWORD PTR ds:0x4291af,0x0
  411d61:	mov    ecx,DWORD PTR ds:0x4291af
  411d67:	inc    ecx
  411d68:	mov    DWORD PTR ds:0x4291af,ecx
  411d6e:	cmp    DWORD PTR ds:0x4291af,0x19
  411d75:	jbe    0x411d96
  411d7b:	jmp    0x411d89
  411d80:	push   DWORD PTR [ebp-0x20]
  411d83:	call   DWORD PTR ds:0x42a683
  411d89:	cmp    DWORD PTR ds:0x4291af,0x10
  411d90:	jb     0x411d61
  411d96:	mov    ecx,DWORD PTR [ebp-0xc]
  411d99:	xor    al,0x7d
  411d9b:	mov    DWORD PTR ds:0x4291bb,0x2666
  411da5:	add    al,0x2
  411da7:	and    DWORD PTR ds:0x4291c3,0x42917f
  411db1:	mov    BYTE PTR [ecx],al
  411db3:	sbb    DWORD PTR ds:0x4291eb,0x5717
  411dbd:	mov    DWORD PTR [ebp-0x18],0xf89c85a1
  411dc4:	push   ebx
  411dc5:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  411dcc:	mov    DWORD PTR ds:0x4291eb,0x16
  411dd6:	cmp    DWORD PTR ds:0x4291eb,0x0
  411ddd:	je     0x411e17
  411de3:	cmp    DWORD PTR ds:0x4291eb,0x1e
  411dea:	jl     0x411e17
  411df0:	jmp    0x411e07
  411df5:	push   0x428010
  411dfa:	push   0x0
  411dfc:	push   0x6e74
  411e01:	call   DWORD PTR ds:0x42a687
  411e07:	mov    eax,ds:0x4291eb
  411e0c:	dec    eax
  411e0d:	mov    ds:0x4291eb,eax
  411e12:	jmp    0x411dd6
  411e17:	mov    ecx,DWORD PTR [ebp-0x18]
  411e1a:	or     DWORD PTR ds:0x429153,ebx
  411e20:	push   esi
  411e21:	mov    eax,0x75108ac
  411e26:	xor    esi,esi
  411e28:	xor    esi,DWORD PTR ds:0x4291b7
  411e2e:	or     DWORD PTR ds:0x42915b,esi
  411e34:	xor    ecx,eax
  411e36:	mov    esi,DWORD PTR ds:0x4291a3
  411e3c:	sbb    esi,DWORD PTR ds:0x42914f
  411e42:	mov    DWORD PTR ds:0x4291a3,esi
  411e48:	mov    esi,0x3272f3
  411e4d:	push   edi
  411e4e:	add    ecx,esi
  411e50:	jmp    0x411e66
  411e55:	inc    DWORD PTR ds:0x429163
  411e5b:	mov    dl,BYTE PTR [ebp-0x1]
  411e5e:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e65:	inc    ecx
  411e66:	mov    DWORD PTR ds:0x42917b,0x7bd4
  411e70:	cmp    ecx,0x40
  411e73:	jb     0x411e55
  411e79:	not    edx
  411e7b:	mov    edx,DWORD PTR [ebp-0x18]
  411e7e:	xor    edx,eax
  411e80:	mov    DWORD PTR ds:0x4291f7,0x3db0
  411e8a:	add    edx,esi
  411e8c:	jmp    0x411f80
  411e91:	movzx  edi,WORD PTR ds:0x42918b
  411e98:	or     DWORD PTR ds:0x429157,edi
  411e9e:	mov    edi,DWORD PTR [ebp+0x8]
  411ea1:	adc    DWORD PTR ds:0x42917b,edx
  411ea7:	mov    ecx,0x8a99
  411eac:	adc    DWORD PTR ds:0x4291f3,0x3816
  411eb6:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ebb:	and    DWORD PTR ds:0x4291a3,0x0
  411ec5:	jmp    0x411ed7
  411eca:	mov    edi,DWORD PTR ds:0x4291a3
  411ed0:	inc    edi
  411ed1:	mov    DWORD PTR ds:0x4291a3,edi
  411ed7:	cmp    DWORD PTR ds:0x4291a3,0x1f
  411ede:	jae    0x411f1d
  411ee4:	cmp    DWORD PTR ds:0x4291a3,0xa
  411eeb:	jl     0x411f1d
  411ef1:	jmp    0x411efc
  411ef6:	call   DWORD PTR ds:0x42a68b
  411efc:	cmp    DWORD PTR ds:0x4291a3,0x9
  411f03:	jne    0x411f18
  411f09:	xor    edi,edi
  411f0b:	xor    edi,DWORD PTR ds:0x4291a3
  411f11:	inc    edi
  411f12:	mov    DWORD PTR ds:0x4291a3,edi
  411f18:	jmp    0x411eca
  411f1d:	mov    edi,0x3b5b
  411f22:	add    cx,di
  411f25:	add    DWORD PTR ds:0x4291ef,0x4291b7
  411f2f:	movzx  ecx,cx
  411f32:	sbb    DWORD PTR ds:0x42914b,0x16d8
  411f3c:	mov    DWORD PTR [ebp-0xc],ecx
  411f3f:	movzx  ecx,WORD PTR ds:0x42918f
  411f46:	and    DWORD PTR ds:0x429197,ecx
  411f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  411f4f:	sbb    DWORD PTR ds:0x42915b,0x631a
  411f59:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f5d:	xor    ecx,0x8a99
  411f63:	add    ecx,edi
  411f65:	mov    edi,DWORD PTR [ebp-0xc]
  411f68:	mov    DWORD PTR ds:0x4291f7,0x4ad9
  411f72:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f79:	mov    DWORD PTR ds:0x4291e7,ecx
  411f7f:	inc    edx
  411f80:	not    ecx
  411f82:	mov    ecx,DWORD PTR [ebp-0x10]
  411f85:	mov    DWORD PTR ds:0x42914f,0x2d30
  411f8f:	cmp    edx,ecx
  411f91:	jne    0x411e91
  411f97:	and    edx,edx
  411f99:	mov    ecx,DWORD PTR [ebp-0x18]
  411f9c:	sub    edi,DWORD PTR ds:0x42914f
  411fa2:	mov    edx,DWORD PTR [ebp+0x10]
  411fa5:	xor    DWORD PTR ds:0x4291bf,0xf9d
  411faf:	xor    ecx,eax
  411fb1:	and    DWORD PTR ds:0x4291b7,ebx
  411fb7:	add    ecx,esi
  411fb9:	mov    DWORD PTR [edx],ecx
  411fbb:	mov    ecx,DWORD PTR [ebp-0x18]
  411fbe:	sbb    DWORD PTR ds:0x42919f,0x1e81
  411fc8:	xor    ecx,eax
  411fca:	add    ecx,esi
  411fcc:	adc    DWORD PTR ds:0x4291e3,edi
  411fd2:	mov    DWORD PTR [ebp-0xc],ecx
  411fd5:	add    DWORD PTR ds:0x42914f,0x6cdc
  411fdf:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  411fe6:	mov    DWORD PTR ds:0x4291bf,0x1d36
  411ff0:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  411ff7:	mov    DWORD PTR [ebp-0x10],0xf89c95a1
  411ffe:	mov    ecx,DWORD PTR [ebp-0x14]
  412001:	mov    DWORD PTR ds:0x4291e3,0x1b
  41200b:	cmp    DWORD PTR ds:0x4291e3,0x0
  412012:	je     0x41204c
  412018:	cmp    DWORD PTR ds:0x4291e3,0x1c
  41201f:	jb     0x41204c
  412025:	jmp    0x41203a
  41202a:	push   0x42915f
  41202f:	push   0x428022
  412034:	call   DWORD PTR ds:0x42a68f
  41203a:	mov    edi,DWORD PTR ds:0x4291e3
  412040:	dec    edi
  412041:	mov    DWORD PTR ds:0x4291e3,edi
  412047:	jmp    0x41200b
  41204c:	mov    DWORD PTR [ebp+0x8],ecx
  41204f:	mov    ecx,DWORD PTR [ebp+0x8]
  412052:	xor    ecx,eax
  412054:	add    ecx,esi
  412056:	movzx  ecx,WORD PTR ds:0x4291b3
  41205d:	mov    ecx,0x242ebcd
  412062:	mov    edi,0xf641bcc
  412067:	je     0x414acc
  41206d:	mov    edx,DWORD PTR [ebp+0x8]
  412070:	sub    DWORD PTR ds:0x42917b,0x1976
  41207a:	mov    ebx,DWORD PTR [ebp-0x8]
  41207d:	xor    edx,eax
  41207f:	xor    ebx,eax
  412081:	not    DWORD PTR ds:0x4291d3
  412087:	sub    edx,ebx
  412089:	not    DWORD PTR ds:0x42918f
  41208f:	sub    edx,esi
  412091:	xor    edx,eax
  412093:	and    DWORD PTR ds:0x4291cb,0x0
  41209d:	jmp    0x4120af
  4120a2:	mov    ebx,DWORD PTR ds:0x4291cb
  4120a8:	inc    ebx
  4120a9:	mov    DWORD PTR ds:0x4291cb,ebx
  4120af:	cmp    DWORD PTR ds:0x4291cb,0x18
  4120b6:	jae    0x4120f8
  4120bc:	cmp    DWORD PTR ds:0x4291cb,0xa
  4120c3:	ja     0x4120f8
  4120c9:	jmp    0x4120d9
  4120ce:	push   0x4a1a
  4120d3:	call   DWORD PTR ds:0x42a693
  4120d9:	cmp    DWORD PTR ds:0x4291cb,0x9
  4120e0:	jne    0x4120f3
  4120e6:	mov    ebx,DWORD PTR ds:0x4291cb
  4120ec:	inc    ebx
  4120ed:	mov    DWORD PTR ds:0x4291cb,ebx
  4120f3:	jmp    0x4120a2
  4120f8:	mov    DWORD PTR [ebp+0x8],edx
  4120fb:	sub    DWORD PTR ds:0x4291e3,0x2e82
  412105:	mov    edx,DWORD PTR [ebp+0x8]
  412108:	mov    ebx,DWORD PTR [ebp-0x58]
  41210b:	mov    DWORD PTR ds:0x42919b,0x1dc1
  412115:	add    edx,0x5708e2
  41211b:	and    DWORD PTR ds:0x4291e7,0x42919f
  412125:	imul   edx,ebx
  412128:	mov    DWORD PTR [ebp-0x58],edx
  41212b:	xor    edx,0x49c6
  412131:	mov    edx,DWORD PTR [ebp+0x8]
  412134:	mov    ebx,DWORD PTR ds:0x42914b
  41213a:	add    DWORD PTR ds:0x4291e3,ebx
  412140:	mov    ebx,DWORD PTR [ebp-0x54]
  412143:	add    edx,0x64f89c
  412149:	inc    DWORD PTR ds:0x42917f
  41214f:	or     edx,ebx
  412151:	mov    DWORD PTR [ebp-0x54],edx
  412154:	mov    edx,DWORD PTR [ebp+0x8]
  412157:	mov    ebx,DWORD PTR [ebp-0x50]
  41215a:	sbb    DWORD PTR ds:0x429183,0x4291b7
  412164:	add    edx,ecx
  412166:	xor    edx,ebx
  412168:	mov    DWORD PTR [ebp-0x50],edx
  41216b:	dec    ebx
  41216c:	mov    edx,DWORD PTR [ebp+0x8]
  41216f:	add    ebx,0x68ce
  412175:	mov    ebx,DWORD PTR [ebp-0x4c]
  412178:	add    edx,edi
  41217a:	and    edx,ebx
  41217c:	and    ebx,0x35bf
  412182:	mov    DWORD PTR [ebp-0x4c],edx
  412185:	xor    DWORD PTR ds:0x4291d3,ebx
  41218b:	mov    edx,DWORD PTR [ebp+0x8]
  41218e:	sub    DWORD PTR ds:0x4291cf,0x55b5
  412198:	mov    ebx,DWORD PTR [ebp-0x48]
  41219b:	lea    edx,[ebx+edx*1+0x241fcdf]
  4121a2:	mov    DWORD PTR [ebp-0x48],edx
  4121a5:	and    DWORD PTR ds:0x429173,0x0
  4121af:	mov    ebx,DWORD PTR ds:0x429173
  4121b5:	inc    ebx
  4121b6:	mov    DWORD PTR ds:0x429173,ebx
  4121bc:	cmp    DWORD PTR ds:0x429173,0x19
  4121c3:	jge    0x4121ee
  4121c9:	jmp    0x4121e1
  4121ce:	push   0x4291f7
  4121d3:	push   0x429187
  4121d8:	push   DWORD PTR [ebp-0x10]
  4121db:	call   DWORD PTR ds:0x42a69b
  4121e1:	cmp    DWORD PTR ds:0x429173,0x12
  4121e8:	jb     0x4121af
  4121ee:	mov    edx,DWORD PTR [ebp+0x8]
  4121f1:	or     DWORD PTR ds:0x4291df,ebx
  4121f7:	mov    ebx,0xfa5e1528
  4121fc:	sub    ebx,edx
  4121fe:	movzx  edx,WORD PTR ds:0x4291c7
  412205:	and    DWORD PTR ds:0x4291f7,edx
  41220b:	add    ebx,DWORD PTR [ebp-0x44]
  41220e:	mov    DWORD PTR [ebp-0x44],ebx
  412211:	and    DWORD PTR ds:0x4291db,0x4291bf
  41221b:	mov    edx,DWORD PTR [ebp+0x8]
  41221e:	xor    edx,eax
  412220:	adc    DWORD PTR ds:0x429153,0x429187
  41222a:	add    edx,esi
  41222c:	mov    DWORD PTR ds:0x42915b,0x2aa5
  412236:	jne    0x41206d
  41223c:	mov    DWORD PTR ds:0x4291af,0x939
  412246:	jmp    0x414acc
  41224b:	xor    DWORD PTR ds:0x4291cb,0x4110
  412255:	mov    edx,DWORD PTR [ebp-0xc]
  412258:	sub    DWORD PTR ds:0x42918b,0x429163
  412262:	sub    edx,esi
  412264:	xor    edx,eax
  412266:	mov    DWORD PTR ds:0x4291b7,0x1c
  412270:	cmp    DWORD PTR ds:0x4291b7,0x0
  412277:	je     0x4122ae
  41227d:	cmp    DWORD PTR ds:0x4291b7,0x21
  412284:	jbe    0x4122ae
  41228a:	jmp    0x41229a
  41228f:	push   0x337f
  412294:	call   DWORD PTR ds:0x42a663
  41229a:	xor    ebx,ebx
  41229c:	or     ebx,DWORD PTR ds:0x4291b7
  4122a2:	dec    ebx
  4122a3:	mov    DWORD PTR ds:0x4291b7,ebx
  4122a9:	jmp    0x412270
  4122ae:	mov    DWORD PTR [ebp-0x5c],edx
  4122b1:	sub    DWORD PTR ds:0x429173,0x5ea2
  4122bb:	mov    edx,DWORD PTR [ebp-0x10]
  4122be:	mov    ebx,DWORD PTR [ebp-0x8]
  4122c1:	xor    edx,eax
  4122c3:	dec    DWORD PTR ds:0x4291b7
  4122c9:	xor    ebx,eax
  4122cb:	adc    DWORD PTR ds:0x429197,0x42917b
  4122d5:	sub    edx,ebx
  4122d7:	sub    edx,esi
  4122d9:	xor    edx,eax
  4122db:	mov    DWORD PTR [ebp-0x10],edx
  4122de:	mov    edx,DWORD PTR [ebp-0x14]
  4122e1:	mov    DWORD PTR [ebp+0x8],edx
  4122e4:	jmp    0x412527
  4122e9:	mov    edx,DWORD PTR [ebp+0x8]
  4122ec:	mov    DWORD PTR ds:0x429157,0x1c
  4122f6:	cmp    DWORD PTR ds:0x429157,0x0
  4122fd:	je     0x412341
  412303:	cmp    DWORD PTR ds:0x429157,0x21
  41230a:	jl     0x412341
  412310:	jmp    0x41232f
  412315:	push   0x4cc6
  41231a:	push   0x428152
  41231f:	push   0x428140
  412324:	push   0x400000
  412329:	call   DWORD PTR ds:0x42a66b
  41232f:	mov    ebx,DWORD PTR ds:0x429157
  412335:	dec    ebx
  412336:	mov    DWORD PTR ds:0x429157,ebx
  41233c:	jmp    0x4122f6
  412341:	mov    ebx,DWORD PTR [ebp-0x8]
  412344:	xor    edx,eax
  412346:	xor    ebx,eax
  412348:	sub    edx,ebx
  41234a:	sub    edx,esi
  41234c:	xor    edx,eax
  41234e:	mov    DWORD PTR [ebp+0x8],edx
  412351:	mov    edx,DWORD PTR [ebp+0x8]
  412354:	mov    ebx,DWORD PTR [ebp-0x58]
  412357:	add    edx,0x5708e2
  41235d:	add    DWORD PTR ds:0x42918f,0x4291b7
  412367:	imul   edx,ebx
  41236a:	mov    DWORD PTR [ebp-0x58],edx
  41236d:	and    DWORD PTR ds:0x4291df,0x0
  412377:	mov    edx,DWORD PTR ds:0x4291df
  41237d:	inc    edx
  41237e:	mov    DWORD PTR ds:0x4291df,edx
  412384:	cmp    DWORD PTR ds:0x4291df,0x9
  41238b:	jb     0x4123cb
  412391:	jmp    0x4123a4
  412396:	push   DWORD PTR [ebp-0x24]
  412399:	push   0x400000
  41239e:	call   DWORD PTR ds:0x42a66f
  4123a4:	cmp    DWORD PTR ds:0x4291df,0x8
  4123ab:	jne    0x4123be
  4123b1:	mov    edx,DWORD PTR ds:0x4291df
  4123b7:	inc    edx
  4123b8:	mov    DWORD PTR ds:0x4291df,edx
  4123be:	cmp    DWORD PTR ds:0x4291df,0x10
  4123c5:	jb     0x412377
  4123cb:	mov    edx,DWORD PTR [ebp+0x8]
  4123ce:	adc    ebx,DWORD PTR ds:0x429183
  4123d4:	mov    ebx,DWORD PTR [ebp-0x54]
  4123d7:	add    DWORD PTR ds:0x4291ef,0x468d
  4123e1:	add    edx,0x64f89c
  4123e7:	or     edx,ebx
  4123e9:	mov    DWORD PTR [ebp-0x54],edx
  4123ec:	and    DWORD PTR ds:0x429187,0x0
  4123f6:	jmp    0x412408
  4123fb:	mov    ebx,DWORD PTR ds:0x429187
  412401:	inc    ebx
  412402:	mov    DWORD PTR ds:0x429187,ebx
  412408:	cmp    DWORD PTR ds:0x429187,0x1d
  41240f:	jae    0x412437
  412415:	cmp    DWORD PTR ds:0x429187,0x1e
  41241c:	jg     0x412437
  412422:	jmp    0x412432
  412427:	push   0x4291cf
  41242c:	call   DWORD PTR ds:0x42a673
  412432:	jmp    0x4123fb
  412437:	mov    edx,DWORD PTR [ebp+0x8]
  41243a:	mov    ebx,DWORD PTR [ebp-0x50]
  41243d:	and    DWORD PTR ds:0x4291db,0x4291cf
  412447:	add    edx,ecx
  412449:	mov    DWORD PTR ds:0x42919b,0x55c4
  412453:	xor    edx,ebx
  412455:	mov    DWORD PTR [ebp-0x50],edx
  412458:	sub    DWORD PTR ds:0x42915f,0x3296
  412462:	mov    edx,DWORD PTR [ebp+0x8]
  412465:	mov    ebx,DWORD PTR [ebp-0x4c]
  412468:	xor    DWORD PTR ds:0x4291a7,0x42916b
  412472:	add    edx,edi
  412474:	xor    DWORD PTR ds:0x4291e7,0x4291af
  41247e:	and    edx,ebx
  412480:	or     DWORD PTR ds:0x42915f,edx
  412486:	mov    DWORD PTR [ebp-0x4c],edx
  412489:	mov    ebx,DWORD PTR ds:0x42918b
  41248f:	sbb    DWORD PTR ds:0x429157,ebx
  412495:	mov    edx,DWORD PTR [ebp+0x8]
  412498:	xor    DWORD PTR ds:0x429157,0x429153
  4124a2:	mov    ebx,DWORD PTR [ebp-0x48]
  4124a5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4124ac:	mov    DWORD PTR [ebp-0x48],edx
  4124af:	and    DWORD PTR ds:0x429173,0x0
  4124b9:	jmp    0x4124cb
  4124be:	mov    edx,DWORD PTR ds:0x429173
  4124c4:	inc    edx
  4124c5:	mov    DWORD PTR ds:0x429173,edx
  4124cb:	cmp    DWORD PTR ds:0x429173,0x15
  4124d2:	jae    0x412517
  4124d8:	cmp    DWORD PTR ds:0x429173,0x5
  4124df:	jle    0x412517
  4124e5:	jmp    0x4124f8
  4124ea:	push   DWORD PTR [ebp-0x18]
  4124ed:	push   0x42808a
  4124f2:	call   DWORD PTR ds:0x42a677
  4124f8:	cmp    DWORD PTR ds:0x429173,0x4
  4124ff:	jne    0x412512
  412505:	mov    edx,DWORD PTR ds:0x429173
  41250b:	inc    edx
  41250c:	mov    DWORD PTR ds:0x429173,edx
  412512:	jmp    0x4124be
  412517:	mov    edx,DWORD PTR [ebp+0x8]
  41251a:	mov    ebx,0xfa5e1528
  41251f:	sub    ebx,edx
  412521:	add    ebx,DWORD PTR [ebp-0x44]
  412524:	mov    DWORD PTR [ebp-0x44],ebx
  412527:	mov    edx,DWORD PTR [ebp+0x8]
  41252a:	xor    edx,eax
  41252c:	add    edx,esi
  41252e:	jne    0x4122e9
  412534:	mov    edx,DWORD PTR [ebp-0xc]
  412537:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41253e:	mov    bl,BYTE PTR [ebp-0x1]
  412541:	cmp    dl,bl
  412543:	je     0x412621
  412549:	mov    ecx,DWORD PTR [ebp-0x5c]
  41254c:	mov    edx,DWORD PTR [ebp-0xc]
  41254f:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412556:	mov    ebx,DWORD PTR [ebp+0xc]
  412559:	xor    ecx,eax
  41255b:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f3]
  412562:	jne    0x414ade
  412568:	mov    ecx,DWORD PTR [ebp-0x5c]
  41256b:	mov    edx,DWORD PTR [ebp+0xc]
  41256e:	xor    ecx,eax
  412570:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f3]
  412578:	mov    edx,DWORD PTR [ebp-0x18]
  41257b:	xor    edx,eax
  41257d:	add    edx,esi
  41257f:	cmp    ecx,edx
  412581:	mov    ecx,DWORD PTR [ebp-0x14]
  412584:	mov    DWORD PTR [ebp+0x8],ecx
  412587:	mov    ecx,DWORD PTR [ebp+0x8]
  41258a:	je     0x41b681
  412590:	xor    ecx,eax
  412592:	add    ecx,esi
  412594:	mov    ecx,0x242ebcd
  412599:	je     0x414a32
  41259f:	mov    edx,DWORD PTR [ebp+0x8]
  4125a2:	mov    ebx,DWORD PTR [ebp-0x8]
  4125a5:	xor    edx,eax
  4125a7:	xor    ebx,eax
  4125a9:	sub    edx,ebx
  4125ab:	sub    edx,esi
  4125ad:	xor    edx,eax
  4125af:	mov    DWORD PTR [ebp+0x8],edx
  4125b2:	mov    edx,DWORD PTR [ebp+0x8]
  4125b5:	mov    ebx,DWORD PTR [ebp-0x58]
  4125b8:	add    edx,0x5708e2
  4125be:	imul   edx,ebx
  4125c1:	mov    DWORD PTR [ebp-0x58],edx
  4125c4:	mov    edx,DWORD PTR [ebp+0x8]
  4125c7:	mov    ebx,DWORD PTR [ebp-0x54]
  4125ca:	add    edx,0x64f89c
  4125d0:	or     edx,ebx
  4125d2:	mov    DWORD PTR [ebp-0x54],edx
  4125d5:	mov    edx,DWORD PTR [ebp+0x8]
  4125d8:	mov    ebx,DWORD PTR [ebp-0x50]
  4125db:	add    edx,ecx
  4125dd:	xor    edx,ebx
  4125df:	mov    DWORD PTR [ebp-0x50],edx
  4125e2:	mov    edx,DWORD PTR [ebp+0x8]
  4125e5:	mov    ebx,DWORD PTR [ebp-0x4c]
  4125e8:	add    edx,edi
  4125ea:	and    edx,ebx
  4125ec:	mov    DWORD PTR [ebp-0x4c],edx
  4125ef:	mov    edx,DWORD PTR [ebp+0x8]
  4125f2:	mov    ebx,DWORD PTR [ebp-0x48]
  4125f5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4125fc:	mov    DWORD PTR [ebp-0x48],edx
  4125ff:	mov    edx,DWORD PTR [ebp+0x8]
  412602:	mov    ebx,0xfa5e1528
  412607:	sub    ebx,edx
  412609:	add    ebx,DWORD PTR [ebp-0x44]
  41260c:	mov    DWORD PTR [ebp-0x44],ebx
  41260f:	mov    edx,DWORD PTR [ebp+0x8]
  412612:	xor    edx,eax
  412614:	add    edx,esi
  412616:	jne    0x41259f
  41261c:	jmp    0x414a32
  412621:	mov    edx,DWORD PTR [ebp-0x14]
  412624:	jmp    0x4149ad
  412629:	rcr    ah,1
  41262b:	sbb    eax,DWORD PTR [edx+0x17]
  41262e:	mov    ah,0xd0
  412630:	nop
  412631:	cs aam 0x99
  412634:	or     BYTE PTR [edi+0x6bdf350f],ah
  41263a:	mov    al,BYTE PTR [ebx-0x7ca3e87d]
  412640:	or     DWORD PTR [edi+0x66bfd7f0],0x7e
  412647:	cmp    dl,dh
  412649:	aas    
  41264a:	test   eax,0x8e6c4c32
  41264f:	jmp    DWORD PTR [edx]
  412651:	test   eax,0x742ada6
  412656:	add    ah,bh
  412658:	adc    edi,ecx
  41265a:	mov    ds:0xa6fc1a08,al
  41265f:	lods   al,BYTE PTR ds:[esi]
  412660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412661:	push   ebx
  412662:	popf   
  412663:	sbb    ecx,edx
  412665:	lahf   
  412666:	or     al,BYTE PTR [ebp-0x38a829a2]
  41266c:	fcom   st(7)
  41266f:	push   0xffffff9a
  412671:	outs   dx,DWORD PTR ds:[esi]
  412672:	das    
  412673:	aam    0xac
  412675:	xchg   ebp,eax
  412676:	fidivr DWORD PTR [eax-0x72]
  412679:	out    0x6e,eax
  41267b:	or     eax,0x666af16
  412680:	mov    dl,0xed
  412682:	in     al,0x11
  412684:	arpl   WORD PTR [edx-0x3],bx
  412687:	mov    bl,0xba
  412689:	repnz push edi
  41268b:	xchg   ebx,eax
  41268c:	retf   
  41268d:	mov    dl,0xf
  41268f:	scas   al,BYTE PTR es:[edi]
  412690:	mov    bh,0x74
  412692:	test   al,0xab
  412694:	gs enter 0xdaf8,0xf7
  412699:	sbb    al,0x43
  41269b:	jns    0x4126fe
  41269d:	sar    BYTE PTR [ebp-0x55],1
  4126a0:	xor    DWORD PTR [ecx+eiz*1-0x63],eax
  4126a4:	xchg   ebx,eax
  4126a5:	mov    esi,0xc8dca0e2
  4126aa:	fldcw  WORD PTR [edi]
  4126ac:	stos   BYTE PTR es:[edi],al
  4126ad:	jne    0x41268b
  4126af:	jns    0x4126a6
  4126b1:	ret    
  4126b2:	mov    ecx,0x715e2474
  4126b7:	jp     0x41266f
  4126b9:	mov    esp,0x65a6c704
  4126be:	mov    esi,0x4d940d38
  4126c3:	dec    ebp
  4126c4:	inc    esi
  4126c5:	sbb    ah,BYTE PTR [edx-0x1]
  4126c8:	and    BYTE PTR [ebx-0x55],dl
  4126cb:	cmp    DWORD PTR [ecx+0x47],edi
  4126ce:	mov    dh,0xc8
  4126d0:	sbb    al,BYTE PTR [ecx]
  4126d2:	or     DWORD PTR [ebx+0x185ac06],ebx
  4126d8:	out    dx,eax
  4126d9:	sbb    edi,DWORD PTR [edi+0x29]
  4126dc:	and    ebp,DWORD PTR [eax+esi*4-0x18]
  4126e0:	aam    0x23
  4126e2:	add    al,0x5a
  4126e4:	repz xchg ebx,eax
  4126e6:	call   0x436ac685
  4126eb:	ins    BYTE PTR es:[edi],dx
  4126ec:	or     eax,0x305c0359
  4126f1:	daa    
  4126f2:	pop    edi
  4126f3:	cmc    
  4126f4:	xchg   esi,eax
  4126f5:	dec    edi
  4126f6:	dec    ebp
  4126f7:	adc    DWORD PTR [edi],eax
  4126f9:	xor    ebp,esi
  4126fb:	dec    eax
  4126fc:	pop    eax
  4126fd:	inc    esp
  4126fe:	(bad)  [ebx+0x27]
  412701:	jle    0x4126ae
  412703:	push   eax
  412704:	xchg   esp,eax
  412705:	popa   
  412706:	dec    esp
  412707:	dec    ebx
  412708:	popf   
  412709:	sub    bl,BYTE PTR [bp+0x25e6]
  41270e:	push   esp
  41270f:	out    dx,eax
  412710:	test   BYTE PTR [edi],bl
  412712:	push   esi
  412713:	cmc    
  412714:	sti    
  412715:	xor    ch,BYTE PTR [edi]
  412717:	cmp    ebx,esp
  412719:	stos   BYTE PTR es:[edi],al
  41271a:	out    0x2,eax
  41271c:	pop    eax
  41271d:	push   edx
  41271e:	das    
  41271f:	mov    ds:0x3a5d310d,al
  412724:	aaa    
  412725:	inc    esp
  412726:	add    al,0x80
  412728:	in     al,dx
  412729:	jge    0x412716
  41272b:	(bad)  
  41272d:	mov    edx,0x656ff201
  412732:	(bad)  
  412733:	out    dx,al
  412734:	or     al,0xfa
  412736:	or     eax,0xae871a4b
  41273b:	add    ecx,esp
  41273d:	pop    edi
  41273e:	int    0xa2
  412740:	adc    dl,ch
  412742:	out    dx,eax
  412743:	xor    al,0xdc
  412745:	ds jecxz 0x412721
  412748:	cmc    
  412749:	clc    
  41274a:	cli    
  41274b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41274c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41274d:	in     eax,0xaf
  41274f:	and    eax,0xc47629d1
  412754:	cmp    eax,0x19fe1dfa
  412759:	shl    DWORD PTR [edx+0x57],0xd3
  41275d:	dec    ebp
  41275e:	add    bh,BYTE PTR [eax]
  412760:	xchg   ebx,eax
  412761:	outs   dx,DWORD PTR ds:[esi]
  412762:	shl    esi,cl
  412764:	test   al,0xb4
  412766:	popf   
  412767:	push   ss
  412768:	sar    al,1
  41276a:	bound  ebp,QWORD PTR [eax+0x4f0e21aa]
  412770:	fimul  DWORD PTR [ecx+ebp*8-0x36]
  412775:	loop   0x4127ea
  412777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412778:	push   esp
  412779:	call   0x84f6:0x4448a0e8
  412780:	cmp    esi,ebp
  412782:	cmp    eax,DWORD PTR [edi+0x6e6bef46]
  412788:	sub    edx,DWORD PTR [edi]
  41278a:	imul   ecx,ebx,0x7e
  41278d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41278e:	(bad)  
  41278f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412790:	xor    eax,0x46febb2a
  412795:	push   ds
  412796:	push   ecx
  412797:	fisub  WORD PTR [ebp-0x59]
  41279a:	adc    esp,DWORD PTR [ebx-0x6]
  41279d:	push   esp
  41279e:	cmp    DWORD PTR [ecx+0x43],ebx
  4127a1:	and    al,BYTE PTR ds:0xdb62a72b
  4127a7:	outs   dx,DWORD PTR ds:[esi]
  4127a8:	call   FWORD PTR [ecx+0x64]
  4127ab:	jle    0x4127d0
  4127ad:	(bad)
  4127b1:	xchg   DWORD PTR [ecx+0x4d],esi
  4127b4:	add    ah,al
  4127b6:	sub    al,0x58
  4127b8:	mov    ds:0x816b3c3b,eax
  4127bd:	mov    ds:0x491af0f,eax
  4127c2:	xor    eax,0x1cf27e28
  4127c7:	mov    esi,0xb2f3c3b2
  4127cc:	dec    ecx
  4127cd:	mov    ecx,DWORD PTR ds:0x367e5146
  4127d3:	rcl    cl,0x5c
  4127d6:	sbb    DWORD PTR [edi],eax
  4127d8:	mov    eax,ds:0xbc425df2
  4127dd:	dec    eax
  4127de:	add    DWORD PTR [eax-0x13],ebx
  4127e1:	ret    0x799b
  4127e4:	neg    BYTE PTR [esi-0x59a9fd9b]
  4127ea:	lods   al,BYTE PTR ds:[esi]
  4127eb:	out    0x4,eax
  4127ed:	mov    al,ds:0xbfbfcd66
  4127f2:	sub    al,0x65
  4127f4:	fxch   st(3)
  4127f6:	lock and BYTE PTR [ecx],bl
  4127f9:	adc    al,ch
  4127fb:	mov    ebp,0x78253d87
  412800:	xchg   ebx,eax
  412801:	mov    ebp,gs
  412803:	or     edi,eax
  412805:	inc    esp
  412806:	mov    ebx,ds
  412808:	fst    DWORD PTR [esi+edi*1]
  41280b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41280c:	pop    ecx
  41280d:	push   cs
  41280e:	retf   0x6b5d
  412811:	jg     0x4127cd
  412813:	into   
  412814:	xchg   esi,eax
  412815:	mov    cl,0x9e
  412817:	repnz dec ecx
  412819:	ret    
  41281a:	outs   dx,DWORD PTR ds:[esi]
  41281b:	ret    0xe0a0
  41281e:	mov    bl,dh
  412820:	and    eax,0x53aefddb
  412825:	cmp    al,0xb7
  412827:	(bad)  
  412828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412829:	mov    BYTE PTR [ecx],bh
  41282b:	or     ebx,esp
  41282d:	shl    DWORD PTR [ebp-0x1316b051],1
  412833:	sub    ebp,DWORD PTR [ebp-0x32147620]
  412839:	test   eax,0xe88d1e1c
  41283e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41283f:	cmp    al,0xc2
  412841:	and    al,0xe
  412843:	jmp    0x5fd692ca
  412848:	jg     0x412846
  41284a:	mov    ebp,0xd21a5202
  41284f:	push   ss
  412850:	mov    esi,0x9c3c45c
  412855:	add    ch,al
  412857:	sub    BYTE PTR [ebp+esi*2+0xf9a97b0],dh
  41285e:	add    ecx,DWORD PTR [edi+edx*2]
  412861:	ffreep st(1)
  412863:	ja     0x41289f
  412865:	mov    DWORD PTR [edi],ebx
  412867:	ja     0x412899
  412869:	fadd   QWORD PTR [ecx-0x9ac3540]
  412870:	int3   
  412871:	popa   
  412872:	sbb    esi,eax
  412874:	sar    DWORD PTR [edx],cl
  412876:	jg     0x41285b
  412878:	fnsave [edi]
  41287a:	scas   al,BYTE PTR es:[edi]
  41287b:	mov    edx,0x37e385a4
  412880:	push   edi
  412881:	pop    ebp
  412882:	nop
  412883:	fild   WORD PTR [ebx-0x73]
  412886:	hlt    
  412887:	dec    esi
  412888:	into   
  412889:	inc    edx
  41288a:	je     0x41281f
  41288c:	mov    esp,0x473388e4
  412891:	cwde   
  412892:	test   al,0x17
  412894:	pop    edx
  412895:	cmp    eax,0x37d0bfc8
  41289a:	add    BYTE PTR [ebx],bh
  41289c:	cmp    DWORD PTR [esi+0x54],edx
  41289f:	sub    BYTE PTR [esi+0x4d821d42],0xde
  4128a6:	stos   BYTE PTR es:[edi],al
  4128a7:	ds in  eax,dx
  4128a9:	adc    bh,BYTE PTR [edx-0x21]
  4128ac:	push   ss
  4128ad:	mov    dh,0x26
  4128af:	call   0xba0b:0x6345c194
  4128b6:	inc    esp
  4128b7:	pop    edi
  4128b8:	sub    al,0xbe
  4128ba:	or     DWORD PTR [ebp+ebx*2-0x176276b3],esi
  4128c1:	push   ecx
  4128c2:	jno    0x412905
  4128c4:	dec    ebx
  4128c5:	or     edi,DWORD PTR [eax]
  4128c7:	test   BYTE PTR [edi-0x23deef24],cl
  4128cd:	stc    
  4128ce:	int    0x7a
  4128d0:	jmp    0x8870:0x8612ae0
  4128d7:	gs add al,0x2e
  4128da:	pop    ss
  4128db:	xchg   DWORD PTR [eax+0x61],ebp
  4128de:	jl     0x4128cb
  4128e0:	imul   edi,DWORD PTR [esi],0x6b
  4128e3:	(bad)  
  4128e4:	pop    ecx
  4128e5:	leave  
  4128e6:	inc    edx
  4128e7:	aam    0xf5
  4128e9:	in     eax,dx
  4128ea:	(bad)  
  4128eb:	mov    fs:0xa712e548,eax
  4128f1:	das    
  4128f2:	inc    edx
  4128f3:	cdq    
  4128f4:	pop    ecx
  4128f5:	es push edx
  4128f7:	dec    esp
  4128f8:	pop    edx
  4128f9:	push   esi
  4128fa:	add    esp,ebx
  4128fc:	push   ds
  4128fd:	xor    BYTE PTR [ebx+0x62],0x3d
  412901:	adc    eax,0xa4764e8d
  412906:	push   0x803b8cae
  41290b:	imul   esi,DWORD PTR ds:0x8b671f17,0x92e224df
  412915:	adc    al,0xed
  412917:	sbb    BYTE PTR [ebx],bh
  412919:	cmp    eax,0x72b144f6
  41291e:	push   edi
  41291f:	add    ecx,0x7a
  412922:	pop    es
  412923:	dec    esp
  412924:	(bad)  
  412925:	icebp  
  412926:	aaa    
  412927:	cmp    BYTE PTR [edx],0xcb
  41292a:	xchg   edx,eax
  41292b:	pop    esp
  41292c:	mov    esi,0x6ae1f558
  412931:	aam    0x9f
  412933:	fs sbb esi,esi
  412936:	and    ebp,DWORD PTR [eax]
  412938:	daa    
  412939:	js     0x41294e
  41293b:	les    ebp,FWORD PTR ds:0x708401b
  412942:	mov    ah,0xdf
  412944:	sub    DWORD PTR [edx-0x42],ecx
  412947:	mov    dh,0x87
  412949:	mov    ah,0xd
  41294b:	xchg   ecx,eax
  41294c:	hlt    
  41294d:	enter  0xca4b,0xd5
  412951:	ja     0x412979
  412953:	neg    DWORD PTR [ecx+0x12564b6]
  412959:	in     al,0x78
  41295b:	xchg   DWORD PTR [ebp*1-0x2dcd6186],ebp
  412962:	push   0xcb466f85
  412967:	lea    ecx,[ebp-0x54b08bfd]
  41296d:	les    esi,FWORD PTR [edi-0x4a]
  412970:	add    dl,BYTE PTR ds:0x56c59730
  412976:	mov    ch,0xa0
  412978:	lods   al,BYTE PTR ds:[esi]
  412979:	ret    
  41297a:	sbb    ecx,edi
  41297c:	adc    esp,esi
  41297e:	lds    eax,FWORD PTR [esp+0x35]
  412982:	adc    al,0xb6
  412985:	jo     0x412967
  412987:	mov    dh,0x22
  412989:	adc    dl,dl
  41298b:	and    dh,BYTE PTR [ecx+esi*2-0x38006d45]
  412992:	dec    edi
  412993:	fidivr DWORD PTR [ebx]
  412995:	lods   al,BYTE PTR ds:[esi]
  412996:	sbb    DWORD PTR [edx-0x48],ebp
  412999:	sbb    DWORD PTR [edx-0x4a],ecx
  41299c:	fisttp WORD PTR [eax]
  41299e:	(bad)  
  41299f:	inc    ebx
  4129a0:	and    esp,DWORD PTR [eax]
  4129a2:	pushf  
  4129a3:	jge    0x412986
  4129a5:	rcr    DWORD PTR [ebx-0x1f17576f],cl
  4129ab:	popa   
  4129ac:	jp     0x412a04
  4129ae:	ret    
  4129af:	push   ss
  4129b0:	pop    esi
  4129b1:	cmp    eax,0x59782ef6
  4129b6:	stc    
  4129b7:	xlat   BYTE PTR ds:[ebx]
  4129b8:	lds    esi,FWORD PTR [esi+0x5f9fb998]
  4129be:	(bad)
  4129c2:	stos   BYTE PTR es:[edi],al
  4129c3:	in     eax,dx
  4129c4:	ror    BYTE PTR [edi-0xb],0xe5
  4129c8:	nop
  4129c9:	xchg   edx,eax
  4129ca:	mov    al,0xbb
  4129cc:	fisubr WORD PTR [ecx+0xee53817]
  4129d2:	ficomp WORD PTR [ebp+0x3]
  4129d5:	into   
  4129d6:	loopne 0x412999
  4129d8:	aaa    
  4129d9:	cmp    BYTE PTR [ecx-0x22],0xe6
  4129dd:	sub    DWORD PTR [ebx-0x53],ecx
  4129e0:	push   0x2791423a
  4129e5:	test   esp,ebx
  4129e7:	mov    dh,0x90
  4129e9:	nop
  4129ea:	pop    es
  4129eb:	(bad)  
  4129ec:	retf   
  4129ed:	std    
  4129ee:	jmp    0x81f8:0x4f07558b
  4129f5:	loop   0x41299f
  4129f7:	and    BYTE PTR [edi+0x46e57410],bh
  4129fd:	mov    esi,0x25e2a402
  412a02:	es pop eax
  412a04:	ja     0x412a2f
  412a06:	adc    DWORD PTR [esi+0x6f],0xffffffb9
  412a0a:	punpckhwd mm4,QWORD PTR [ebp+ebp*8-0x7f]
  412a0f:	sbb    cl,cl
  412a11:	xor    eax,0xd17be61c
  412a16:	fcom   DWORD PTR [ecx-0x4c]
  412a19:	or     ecx,DWORD PTR [edx+eiz*8-0x18]
  412a1d:	mov    WORD PTR [ecx-0x1de4b8ea],?
  412a23:	sub    dl,0x70
  412a26:	mov    al,0x81
  412a28:	ret    0x4d82
  412a2b:	mov    ebp,0xa1ba290
  412a30:	test   al,0x43
  412a32:	dec    esi
  412a33:	test   DWORD PTR [edi+eiz*4+0x26],eax
  412a37:	inc    eax
  412a38:	into   
  412a39:	int    0x3
  412a3b:	pop    ss
  412a3c:	aam    0x46
  412a3e:	and    eax,esi
  412a40:	push   edi
  412a41:	jae    0x412a69
  412a43:	pop    edi
  412a44:	pop    edx
  412a45:	inc    eax
  412a46:	jne    0x412aa3
  412a48:	push   ecx
  412a49:	push   edi
  412a4a:	loop   0x412ab8
  412a4c:	js     0x412ac0
  412a4e:	jl     0x412a76
  412a50:	fst    QWORD PTR [edi+0x24074ffe]
  412a56:	stos   BYTE PTR es:[edi],al
  412a57:	inc    ecx
  412a58:	fisttp DWORD PTR [edi+0x31]
  412a5b:	out    dx,eax
  412a5c:	mov    al,0x75
  412a5e:	push   ds
  412a5f:	mov    ebx,0xd5cb4ada
  412a64:	aam    0x8c
  412a66:	stc    
  412a67:	jge    0x412a78
  412a69:	or     esi,DWORD PTR [ecx]
  412a6b:	fidivr DWORD PTR [esi]
  412a6d:	sar    DWORD PTR [ecx-0x71],cl
  412a70:	nop
  412a71:	and    dl,BYTE PTR [ebp-0x9fc22d2]
  412a77:	ror    DWORD PTR [eax-0x2a6097a2],cl
  412a7d:	mov    eax,ds:0x81a7590a
  412a82:	push   ds
  412a83:	adc    eax,0xeff24097
  412a88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a89:	aaa    
  412a8a:	aam    0xaa
  412a8c:	or     edx,DWORD PTR [ebx+0x4454ecf9]
  412a92:	jno    0x412ae7
  412a94:	pop    ebp
  412a95:	lea    esi,[edx+0x22bc2b40]
  412a9b:	sar    ah,cl
  412a9d:	mov    ch,0xa9
  412a9f:	add    al,BYTE PTR [ebp-0x3d]
  412aa2:	push   ecx
  412aa3:	pop    ebp
  412aa4:	add    esi,DWORD PTR [esi-0x4e]
  412aa7:	push   ebp
  412aa8:	cmp    eax,0xc8b8dca7
  412aad:	fcmovu st,st(4)
  412aaf:	jbe    0x412aa3
  412ab1:	lahf   
  412ab2:	(bad)  
  412ab3:	pop    eax
  412ab4:	sub    ch,BYTE PTR [edx-0x771ba66e]
  412aba:	dec    ebp
  412abb:	lahf   
  412abc:	mov    ebx,0xbc688337
  412ac1:	add    ah,BYTE PTR [edi+0x10]
  412ac4:	adc    BYTE PTR [ecx+0x59],dl
  412ac7:	push   0x76
  412ac9:	pop    edx
  412aca:	sar    BYTE PTR ds:0xa732026e,cl
  412ad0:	adc    al,0x27
  412ad2:	jg     0x412a86
  412ad4:	mov    ch,0xce
  412ad6:	rcr    BYTE PTR [ebp+eiz*1-0x3f],cl
  412ada:	in     al,dx
  412adb:	add    eax,0x710d640
  412ae0:	rcr    ah,0x4f
  412ae3:	rcr    BYTE PTR [edx-0x2d380e86],cl
  412ae9:	call   0x111bfe0c
  412aee:	retf   0x65ba
  412af1:	sub    DWORD PTR [esi+0x75],edx
  412af4:	mov    es,edi
  412af6:	jmp    0xa94:0x925094b2
  412afd:	jnp    0x412a98
  412aff:	pop    ss
  412b00:	mov    bl,0xa0
  412b02:	xor    cl,dh
  412b04:	rol    DWORD PTR [ebx-0x419838d0],0x9e
  412b0b:	or     esi,DWORD PTR [ecx+0x7825d545]
  412b11:	in     eax,0xe9
  412b13:	and    BYTE PTR [esi+0x31b11833],al
  412b19:	loopne 0x412af9
  412b1b:	cld    
  412b1c:	sti    
  412b1d:	stc    
  412b1e:	in     eax,dx
  412b1f:	ins    BYTE PTR es:[edi],dx
  412b20:	popa   
  412b21:	mov    edi,edi
  412b23:	or     BYTE PTR [ebp+0x24419493],0xa9
  412b2a:	adc    BYTE PTR ds:0x2ff92c39,0xb3
  412b31:	mov    bl,BYTE PTR es:[ebp+ebx*2+0x58028d9]
  412b39:	pop    eax
  412b3a:	and    esp,eax
  412b3c:	imul   ecx,DWORD PTR [ecx],0x7
  412b3f:	test   eax,0x5f8872ad
  412b44:	pop    es
  412b45:	and    DWORD PTR [ebx-0x1e],ecx
  412b48:	sub    esi,DWORD PTR [ebp-0x40]
  412b4b:	xchg   edi,eax
  412b4c:	outs   dx,BYTE PTR ds:[esi]
  412b4d:	loopne 0x412b0f
  412b4f:	pop    esi
  412b50:	sbb    ebp,0xffffffc5
  412b53:	push   0xffffffb3
  412b55:	(bad)  
  412b56:	mov    ds:0x843eaf37,eax
  412b5b:	retf   
  412b5c:	adc    dl,bl
  412b5e:	shl    DWORD PTR [edi],1
  412b60:	(bad)  
  412b61:	(bad)  
  412b62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b63:	icebp  
  412b64:	xor    bh,BYTE PTR [esi-0x3c310c47]
  412b6a:	xor    ebx,DWORD PTR [eax]
  412b6c:	addr16 jo 0x412bc6
  412b6f:	scas   eax,DWORD PTR es:[edi]
  412b70:	mov    ebp,0x91875d2a
  412b75:	imul   ebp,edx,0x3e
  412b78:	pusha  
  412b79:	sub    eax,0x700a7a0e
  412b7e:	dec    ecx
  412b7f:	sub    al,0x37
  412b81:	das    
  412b82:	push   esi
  412b83:	jo     0x412b2c
  412b85:	lds    edi,FWORD PTR [edi]
  412b87:	dec    edi
  412b88:	cmp    BYTE PTR [esi-0x12b9b7c9],0xdf
  412b8f:	jae    0x412bd4
  412b91:	xchg   edx,eax
  412b92:	mov    ?,WORD PTR [ebx]
  412b94:	repz fwait
  412b96:	jbe    0x412b88
  412b98:	xchg   ecx,eax
  412b99:	out    0x7c,al
  412b9b:	xchg   bh,ah
  412b9d:	ja     0x412b88
  412b9f:	ret    0xdbe5
  412ba2:	jo     0x412c14
  412ba4:	dec    ebx
  412ba5:	jmp    0xc86bf2c9
  412baa:	and    al,0xcf
  412bac:	lea    ebp,[ebx-0x2a]
  412baf:	call   0x1964:0x7fc4160c
  412bb6:	xor    eax,0x5605f00
  412bbb:	out    dx,eax
  412bbc:	cmp    al,0xc9
  412bbe:	mov    edx,0xe9f8d333
  412bc3:	test   esp,ebp
  412bc5:	scas   eax,DWORD PTR es:[edi]
  412bc6:	add    al,0x2d
  412bc8:	dec    edx
  412bc9:	xchg   esp,eax
  412bca:	ss pushaw 
  412bcd:	(bad)  
  412bce:	pop    eax
  412bcf:	lds    esp,FWORD PTR [eax]
  412bd1:	sbb    al,0x4a
  412bd3:	xchg   esp,eax
  412bd4:	and    esp,DWORD PTR [ebp-0x3c6c3d47]
  412bda:	enter  0x75af,0x19
  412bde:	cmp    BYTE PTR [edx],bh
  412be0:	push   ds
  412be1:	sbb    ebx,DWORD PTR [esp+edx*2-0x77]
  412be5:	popf   
  412be6:	jno    0x412c26
  412be8:	mov    fs,WORD PTR [edi]
  412bea:	push   eax
  412beb:	jns    0x412be2
  412bed:	sub    eax,0x9431bc66
  412bf2:	daa    
  412bf3:	xchg   ecx,eax
  412bf4:	dec    edx
  412bf5:	out    0xb,al
  412bf7:	or     ah,dl
  412bf9:	mov    ah,0x2b
  412bfb:	xor    ebx,DWORD PTR [edi-0x58]
  412bfe:	push   ecx
  412bff:	call   0xb125d6cb
  412c04:	inc    esi
  412c05:	fnstcw WORD PTR [edi+0x46]
  412c08:	lods   al,BYTE PTR ds:[esi]
  412c09:	push   edi
  412c0a:	in     eax,dx
  412c0b:	aad    0x3e
  412c0d:	sbb    DWORD PTR [edx],ebx
  412c0f:	dec    edi
  412c10:	fistp  DWORD PTR [esi-0x52]
  412c13:	jge    0x412c04
  412c15:	mov    esi,0x4ea2682
  412c1a:	xchg   edi,eax
  412c1b:	adc    DWORD PTR ds:0xb0672496,eax
  412c21:	in     al,dx
  412c22:	or     BYTE PTR [eax+0x74c39d40],al
  412c28:	cmp    ecx,DWORD PTR [ecx-0x1]
  412c2b:	and    BYTE PTR [ebx+0x1e99e1ba],dl
  412c31:	ret    
  412c32:	mov    BYTE PTR [edx],bl
  412c34:	das    
  412c35:	lock xchg ebx,eax
  412c37:	pop    esp
  412c38:	dec    bl
  412c3a:	xchg   DWORD PTR [eax+0x7b6eec43],edi
  412c40:	jnp    0x412cb7
  412c42:	cld    
  412c43:	neg    DWORD PTR [ebx]
  412c45:	cmp    esp,DWORD PTR [ebp-0x2b]
  412c48:	std    
  412c49:	dec    ebp
  412c4a:	sbb    esp,DWORD PTR [edx]
  412c4c:	adc    DWORD PTR [ebx+0x2363b504],0x301821a1
  412c56:	sar    esp,1
  412c58:	mov    ds:0x960e2415,eax
  412c5d:	and    al,0x88
  412c5f:	ror    ebx,cl
  412c61:	(bad)  
  412c62:	loopne 0x412caf
  412c64:	xchg   edi,eax
  412c65:	in     al,dx
  412c66:	rcl    BYTE PTR [ecx+ecx*2+0x30e7dc1c],0xc2
  412c6e:	loop   0x412cdd
  412c70:	mov    bl,0x2
  412c72:	(bad)  
  412c73:	fldenv [ebp-0x44]
  412c76:	mov    al,ch
  412c78:	jg     0x412cbb
  412c7a:	ins    DWORD PTR es:[edi],dx
  412c7b:	arpl   WORD PTR [ecx+0x3b04ad55],di
  412c81:	pusha  
  412c82:	xchg   BYTE PTR [edi-0xd],ch
  412c85:	out    0x78,eax
  412c87:	std    
  412c88:	test   eax,0x1dc74d20
  412c8d:	mov    al,0x2f
  412c8f:	push   ds
  412c90:	push   edx
  412c91:	mov    eax,ds:0x1e99aa9b
  412c96:	pop    es
  412c97:	ja     0x412cbc
  412c99:	pusha  
  412c9a:	xchg   esp,ecx
  412c9c:	push   ss
  412c9d:	xchg   BYTE PTR [eax],al
  412c9f:	add    edx,DWORD PTR [ebx]
  412ca1:	add    DWORD PTR [ebx],eax
  412ca3:	mov    eax,0x86582223
  412ca8:	xchg   ebp,eax
  412ca9:	pushf  
  412caa:	clc    
  412cab:	(bad)  
  412cac:	in     eax,dx
  412cad:	adc    ecx,DWORD PTR [edi]
  412caf:	sbb    BYTE PTR [ebp+0x33be3215],ch
  412cb5:	movlhps xmm0,xmm6
  412cb8:	stos   BYTE PTR es:[edi],al
  412cb9:	inc    esp
  412cba:	(bad)  
  412cbb:	test   eax,0xb59aadf3
  412cc0:	or     esi,DWORD PTR [edx]
  412cc2:	push   ds
  412cc3:	and    DWORD PTR [esi],esp
  412cc5:	cdq    
  412cc6:	icebp  
  412cc7:	or     DWORD PTR [edi+edi*8+0x17],esp
  412ccb:	test   DWORD PTR [ebp+0x72],eax
  412cce:	lods   al,BYTE PTR ds:[esi]
  412ccf:	adc    bh,BYTE PTR [ecx-0x18011b61]
  412cd5:	sub    al,0x31
  412cd7:	pop    DWORD PTR [eax+0x782d444d]
  412cdd:	inc    esi
  412cde:	fistp  QWORD PTR [ecx+0x4b]
  412ce1:	mov    ebx,0xd2530b4b
  412ce6:	scas   eax,DWORD PTR es:[edi]
  412ce7:	add    dl,BYTE PTR [eax-0x6]
  412cea:	mov    dh,bl
  412cec:	ret    0xf57a
  412cef:	xchg   ecx,eax
  412cf0:	cmp    al,0x8a
  412cf2:	mov    ebx,0xe0620bb7
  412cf7:	fwait
  412cf8:	xchg   esp,eax
  412cf9:	lds    ebp,FWORD PTR [eax+0x32]
  412cfc:	cmp    al,0x4c
  412cfe:	jp     0x412d49
  412d00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d01:	sub    edx,eax
  412d03:	xor    edi,edi
  412d05:	sbb    BYTE PTR [eax+0x5c],ah
  412d08:	pusha  
  412d09:	add    edx,DWORD PTR [ecx-0x27]
  412d0c:	mov    es,WORD PTR [ebp-0x66d114f8]
  412d12:	cmp    al,0x9c
  412d14:	xor    DWORD PTR [ecx+0x1691998],0x4240b9d
  412d1e:	retf   
  412d1f:	pop    es
  412d20:	xchg   BYTE PTR [edx-0x6f557147],cl
  412d26:	leave  
  412d27:	mov    ch,0x89
  412d29:	fild   WORD PTR [ecx-0x24]
  412d2c:	add    DWORD PTR ds:[ecx+0x26af5ec5],eax
  412d33:	pop    ds
  412d34:	or     dl,BYTE PTR [edi+ebp*8+0xac674fe]
  412d3b:	inc    ecx
  412d3c:	nop
  412d3d:	out    dx,al
  412d3e:	mov    edx,0xe4b07a33
  412d43:	and    al,0x9f
  412d45:	push   edi
  412d46:	inc    esi
  412d47:	mov    al,0xe3
  412d49:	push   ecx
  412d4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d4b:	inc    esi
  412d4c:	nop
  412d4d:	pop    ebx
  412d4e:	xor    BYTE PTR [ebx-0x35],dl
  412d51:	and    esp,edx
  412d53:	xlat   BYTE PTR ds:[ebx]
  412d54:	pushf  
  412d55:	addr16 je 0x412d10
  412d58:	imul   ecx,DWORD PTR [edx],0xe3b8983b
  412d5e:	inc    ecx
  412d5f:	ins    BYTE PTR es:[edi],dx
  412d60:	pop    esp
  412d61:	sbb    dl,BYTE PTR [edi+edx*1]
  412d64:	mov    al,ds:0xd499a618
  412d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d6a:	mov    edi,edi
  412d6c:	xchg   ebp,eax
  412d6d:	cmp    al,0x63
  412d6f:	cmp    BYTE PTR [edx],0xf6
  412d72:	pop    ecx
  412d73:	mov    esp,cs
  412d75:	adc    cl,BYTE PTR [esi-0x50]
  412d78:	mov    ah,0x7a
  412d7a:	outs   dx,BYTE PTR ds:[esi]
  412d7b:	xchg   BYTE PTR [eax+0x28],dl
  412d7e:	mov    dl,0x2a
  412d80:	das    
  412d81:	int3   
  412d82:	ret    0x122
  412d85:	sub    eax,0x220b8166
  412d8a:	leave  
  412d8b:	mov    ah,0x54
  412d8d:	or     BYTE PTR [ebx+0x6a],al
  412d90:	push   si
  412d92:	xchg   ebp,eax
  412d93:	dec    edi
  412d94:	push   0xffffffd0
  412d96:	adc    BYTE PTR [ebx-0x2cdd6908],bh
  412d9c:	std    
  412d9d:	push   ds
  412d9e:	xor    dl,cl
  412da0:	sbb    al,0x10
  412da2:	jns    0x412d46
  412da4:	push   cs
  412da5:	mov    ecx,0x53fe354a
  412daa:	fwait
  412dab:	cdq    
  412dac:	jg     0x412d47
  412dae:	pop    esi
  412daf:	mov    cl,0xb6
  412db1:	mov    ds:0x62a09aa4,al
  412db6:	push   0x62
  412db8:	sub    edx,edx
  412dba:	xlat   BYTE PTR ds:[ebx]
  412dbb:	pop    eax
  412dbc:	test   BYTE PTR [edx],0xb0
  412dbf:	jge    0x412d4b
  412dc1:	sub    DWORD PTR [esi],esp
  412dc3:	push   ecx
  412dc4:	adc    bl,BYTE PTR [bp+di-0x6c7d]
  412dc9:	add    BYTE PTR [edi-0x62],0xa8
  412dcd:	jmp    0xde79:0x7a9b251
  412dd4:	cmc    
  412dd5:	ss push ds
  412dd7:	sub    eax,0xde00d54d
  412ddc:	aad    0xb5
  412dde:	jbe    0x412e4a
  412de0:	(bad)  
  412de1:	in     eax,dx
  412de2:	pushf  
  412de3:	jge    0x412de3
  412de5:	data16 sub al,0xb6
  412de8:	or     al,0x4f
  412dea:	into   
  412deb:	outs   dx,BYTE PTR ds:[si]
  412ded:	or     ah,BYTE PTR [ebx+0x17c74e7e]
  412df3:	mov    edx,0x4879375
  412df8:	mov    ebx,edx
  412dfa:	ja     0x412dbc
  412dfc:	retf   
  412dfd:	cmp    DWORD PTR [edi],edi
  412dff:	push   es
  412e00:	popf   
  412e01:	pop    ebx
  412e02:	and    bh,cl
  412e04:	retf   
  412e05:	pop    edx
  412e06:	push   edx
  412e07:	push   esi
  412e08:	pop    esi
  412e09:	out    0xcf,al
  412e0b:	mov    al,ds:0xbabc3d3c
  412e10:	inc    esp
  412e11:	adc    eax,0xe1257245
  412e16:	mov    ebp,0xb64f928e
  412e1b:	test   DWORD PTR [edi+0x2287ebf9],esp
  412e21:	sub    DWORD PTR [edx+0x6b937a8a],eax
  412e27:	sbb    ah,cl
  412e29:	mov    ah,0xe5
  412e2b:	in     eax,dx
  412e2c:	pop    esi
  412e2d:	pop    esi
  412e2e:	mov    bh,0x89
  412e30:	inc    edx
  412e31:	dec    edx
  412e32:	cld    
  412e33:	dec    edx
  412e34:	leave  
  412e35:	inc    eax
  412e36:	dec    esi
  412e37:	jmp    0x4d9f7dfc
  412e3c:	push   0x6d
  412e3e:	rcr    DWORD PTR [ecx+esi*4],1
  412e41:	in     eax,0xfe
  412e43:	add    al,0x8a
  412e45:	lods   al,BYTE PTR ds:[esi]
  412e46:	cmc    
  412e47:	cmp    DWORD PTR [esp+edi*1-0x61e10295],edi
  412e4e:	lahf   
  412e4f:	sub    ecx,eax
  412e51:	leave  
  412e52:	cmp    BYTE PTR [ebp-0x21316727],cl
  412e58:	aam    0x36
  412e5a:	or     ch,al
  412e5c:	and    BYTE PTR ds:0xf185b367,bl
  412e62:	out    dx,eax
  412e63:	push   edx
  412e64:	dec    ebx
  412e65:	test   DWORD PTR [ebp+0x3c787de4],eax
  412e6b:	push   0xad221279
  412e70:	mov    al,0x98
  412e72:	fcmovnbe st,st(0)
  412e74:	adc    DWORD PTR [edi],0x3cf67dea
  412e7a:	sbb    bl,BYTE PTR [ebx-0x41]
  412e7d:	ficomp DWORD PTR [ecx-0x71]
  412e80:	stc    
  412e81:	jns    0x412ec1
  412e83:	fld    DWORD PTR [eax]
  412e85:	jno    0x412ebe
  412e87:	pop    ds
  412e88:	push   0xffffff89
  412e8a:	push   edi
  412e8b:	push   ebp
  412e8c:	ins    BYTE PTR es:[edi],dx
  412e8d:	je     0x412ef6
  412e8f:	xchg   ecx,eax
  412e90:	or     al,0x5b
  412e92:	imul   ebp,DWORD PTR [eax],0x22
  412e95:	push   ebp
  412e96:	std    
  412e97:	or     DWORD PTR [eax+0x2b],esi
  412e9a:	or     ch,BYTE PTR [esi-0x32411845]
  412ea0:	int    0xc4
  412ea2:	pop    es
  412ea3:	stos   DWORD PTR es:[edi],eax
  412ea4:	jno    0x412e70
  412ea6:	push   edi
  412ea7:	imul   edi,eax,0x2429158a
  412ead:	mov    BYTE PTR [edx-0x4c],bh
  412eb0:	psrad  mm2,mm4
  412eb3:	cmp    eax,0x54aaa3a2
  412eb8:	js     0x412e6e
  412eba:	mov    ds:0x17ba5eeb,eax
  412ebf:	push   cs
  412ec0:	inc    esp
  412ec1:	das    
  412ec2:	(bad)
  412ec5:	aaa    
  412ec6:	ss in  al,0x79
  412ec9:	in     eax,0x22
  412ecb:	in     al,dx
  412ecc:	xchg   ecx,eax
  412ecd:	push   DWORD PTR [ebx-0x5451bc74]
  412ed3:	sub    ebp,DWORD PTR [ecx+0x7e]
  412ed6:	das    
  412ed7:	mov    al,ds:0x17d4578a
  412edc:	mov    cl,0x6a
  412ede:	cmc    
  412edf:	shl    BYTE PTR [eax+0x56d8c56f],cl
  412ee5:	dec    ebp
  412ee6:	dec    edi
  412ee7:	and    BYTE PTR [ebx+0x1f04562c],0x56
  412eee:	inc    ecx
  412eef:	jae    0x412ecf
  412ef1:	mov    esp,0xa8262730
  412ef6:	test   bl,ch
  412ef8:	arpl   WORD PTR [ebp+0x1e],si
  412efb:	sbb    DWORD PTR [ecx+eax*1+0x75],ebp
  412eff:	adc    ebx,ebp
  412f01:	mov    eax,ds:0xf6b10fbf
  412f06:	idiv   eax
  412f08:	fiadd  DWORD PTR [ebx-0x6d]
  412f0b:	push   0xffffffc8
  412f0d:	pop    edx
  412f0e:	fs mov ah,0x3
  412f11:	fstp   st(1)
  412f13:	pop    esi
  412f14:	cs in  eax,0x4f
  412f17:	cmp    edx,0x28e1338c
  412f1d:	aas    
  412f1e:	dec    esi
  412f1f:	xchg   ebp,eax
  412f20:	push   esi
  412f21:	aaa    
  412f22:	or     BYTE PTR [ebp+0xc],dh
  412f25:	in     eax,dx
  412f26:	jmp    0x412f78
  412f28:	mov    esp,0xb86597a3
  412f2d:	stos   DWORD PTR es:[edi],eax
  412f2e:	push   cs
  412f2f:	inc    DWORD PTR [ecx]
  412f31:	xlat   BYTE PTR ds:[ebx]
  412f32:	or     dl,BYTE PTR [edi+ebp*8-0x26]
  412f36:	in     eax,0xc0
  412f38:	dec    ebx
  412f39:	add    edx,DWORD PTR [eax]
  412f3b:	mov    bh,0x4
  412f3d:	or     ebx,eax
  412f3f:	stos   DWORD PTR es:[edi],eax
  412f40:	clc    
  412f41:	or     DWORD PTR [eax-0x40a6d8ec],esp
  412f47:	and    ecx,DWORD PTR [esi+0x20f354c]
  412f4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f4e:	or     al,BYTE PTR ds:0x59a8996f
  412f54:	mov    esi,0x9826ddb
  412f59:	mov    WORD PTR [ecx+0x22a2363],gs
  412f5f:	inc    ecx
  412f60:	fadd   st,st(2)
  412f62:	jb     0x412f60
  412f64:	cmp    BYTE PTR [esi+0x73],0x52
  412f68:	xchg   esi,eax
  412f69:	call   0x9add:0xc4158535
  412f70:	xchg   ebp,eax
  412f71:	xchg   edx,eax
  412f72:	add    DWORD PTR [ebp+0x1b9c4796],0x9125cf88
  412f7c:	xchg   eax,ecx
  412f7e:	xor    BYTE PTR [ebx+edx*8],0xd6
  412f82:	pop    ebx
  412f83:	(bad)  
  412f84:	fidivr DWORD PTR [edi+ebp*2]
  412f87:	out    dx,al
  412f88:	sbb    BYTE PTR [eax],0xf2
  412f8b:	mov    dl,0x4e
  412f8d:	(bad)  
  412f8e:	test   eax,0xe096b868
  412f93:	sbb    al,0x8c
  412f95:	icebp  
  412f96:	add    bh,BYTE PTR ds:0x2be8fd26
  412f9c:	pop    esp
  412f9d:	mov    ecx,0x39aba9af
  412fa2:	mov    ecx,ecx
  412fa4:	sub    al,0xde
  412fa6:	inc    eax
  412fa7:	push   eax
  412fa8:	sbb    ebp,ecx
  412faa:	pop    ss
  412fab:	xchg   BYTE PTR [ebx+0x1a],al
  412fae:	out    0x73,eax
  412fb0:	inc    edi
  412fb1:	call   0x41deb4ef
  412fb6:	idiv   DWORD PTR [edx+eax*4]
  412fb9:	sub    al,0x40
  412fbb:	jbe    0x412fa7
  412fbd:	or     ebp,DWORD PTR [ecx+0x19008c0c]
  412fc3:	scas   eax,DWORD PTR es:[edi]
  412fc4:	dec    esi
  412fc5:	sbb    DWORD PTR [ebp-0x39],ebp
  412fc8:	push   0xe260d80c
  412fcd:	cmp    al,0x89
  412fcf:	sahf   
  412fd0:	enter  0x6eb6,0x12
  412fd4:	push   eax
  412fd5:	fwait
  412fd6:	push   ebp
  412fd7:	xchg   ebp,eax
  412fd8:	xchg   BYTE PTR [edi+0x24],ch
  412fdb:	mov    ds:0x6aba184c,al
  412fe0:	test   al,0x6b
  412fe2:	fwait
  412fe3:	mov    eax,0x4e2dc196
  412fe8:	test   eax,0x61b85c78
  412fed:	(bad)  
  412fee:	mov    al,0x55
  412ff0:	cld    
  412ff1:	repnz fdiv DWORD PTR [edx]
  412ff4:	ret    
  412ff5:	sbb    dx,WORD PTR [esi]
  412ff8:	pop    ebx
  412ff9:	mov    ebp,DWORD PTR [esi]
  412ffb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ffc:	popf   
  412ffd:	dec    esp
  412ffe:	xchg   edi,eax
  412fff:	dec    esp
  413000:	lea    edx,ds:0x821121d4
  413006:	inc    edx
  413007:	call   0x4a04:0xa6af938a
  41300e:	jp     0x412fbd
  413010:	rcr    DWORD PTR [eax],0x12
  413013:	cmp    BYTE PTR [eax],ch
  413015:	rol    DWORD PTR [eax-0x7cf6743c],1
  41301b:	jne    0x412fd5
  41301d:	push   cs
  41301e:	gs cdq 
  413020:	repnz mov bl,0x86
  413023:	jge    0x412fb8
  413025:	xchg   ecx,ebx
  413027:	mov    dl,0xf8
  413029:	push   ebx
  41302a:	in     al,dx
  41302b:	in     al,0x79
  41302d:	jge    0x412fc7
  41302f:	jp     0x273f7043
  413035:	mov    esp,fs
  413037:	(bad)  
  413038:	stc    
  413039:	xlat   BYTE PTR ds:[ebx]
  41303a:	jecxz  0x41302a
  41303c:	(bad)  
  41303d:	xchg   ecx,eax
  41303e:	xchg   edx,eax
  41303f:	aam    0x2f
  413041:	sbb    eax,0xe38739a9
  413046:	stc    
  413047:	xchg   ebp,eax
  413048:	sbb    BYTE PTR [edx+0x3f5bc500],al
  41304e:	inc    edi
  41304f:	sbb    DWORD PTR [ecx],ecx
  413051:	rol    BYTE PTR [edx+0x20c92719],1
  413057:	add    eax,0xcca94e98
  41305c:	inc    ebp
  41305d:	lock and DWORD PTR [esi-0x67],ebx
  413061:	dec    ecx
  413062:	repnz daa 
  413064:	jmp    0xf8628198
  413069:	xor    DWORD PTR [esi+0x1b],eax
  41306c:	xor    DWORD PTR [ebx+0x22],esi
  41306f:	cwde   
  413070:	in     eax,dx
  413071:	popf   
  413072:	pop    esp
  413073:	fld    DWORD PTR [ebx+edi*2]
  413076:	test   ebx,esp
  413078:	fimul  DWORD PTR [ecx]
  41307a:	push   0x7a
  41307c:	mov    dh,0x68
  41307e:	or     eax,0xf38ad942
  413083:	mov    BYTE PTR [eax+0x3fe6dc62],al
  413089:	(bad)  
  41308a:	out    0x29,al
  41308c:	sbb    esp,DWORD PTR [edi+eax*8+0xe72398]
  413093:	jg     0x4130f7
  413095:	cmp    DWORD PTR [ecx],ebp
  413097:	retf   
  413098:	shr    BYTE PTR [ebx+0x1f],1
  41309b:	adc    ecx,DWORD PTR [edi+0x4e]
  41309e:	imul   ebx,ecx,0xfffffff1
  4130a1:	mov    DWORD PTR [edi+0x6eb03034],esp
  4130a7:	out    dx,eax
  4130a8:	enter  0x9f83,0x62
  4130ac:	adc    BYTE PTR [esi+0x5017261a],dh
  4130b2:	lods   eax,DWORD PTR ds:[esi]
  4130b3:	or     dl,BYTE PTR [ecx-0x72]
  4130b6:	jp     0x413130
  4130b8:	sahf   
  4130b9:	fs out dx,al
  4130bb:	ins    DWORD PTR es:[edi],dx
  4130bc:	xchg   DWORD PTR [esi],ebp
  4130be:	mov    ch,0xbf
  4130c0:	xor    eax,0xdb238ce6
  4130c5:	ret    
  4130c6:	in     al,0xf2
  4130c8:	and    ebx,DWORD PTR [edi+0x5b]
  4130cb:	fistp  QWORD PTR [edx+0x262c1c21]
  4130d1:	dec    ebp
  4130d2:	out    dx,eax
  4130d3:	je     0x413057
  4130d5:	jmp    0x7f5501e9
  4130da:	int    0x55
  4130dc:	cwde   
  4130dd:	call   0x1abe:0x9f98809d
  4130e4:	sub    DWORD PTR [edi],0xd7123c5d
  4130ea:	pop    ebx
  4130eb:	ror    DWORD PTR [ebx-0x6e62851f],cl
  4130f1:	shr    BYTE PTR [edi],0x71
  4130f4:	repnz mov esp,0xbfe51f28
  4130fa:	in     al,0x2f
  4130fc:	cmp    DWORD PTR [ecx+0x4],edi
  4130ff:	push   ds
  413100:	adc    DWORD PTR [edi],esp
  413102:	xchg   esi,eax
  413103:	jl     0x41310a
  413105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413106:	mov    ebp,0xee8cd07d
  41310b:	inc    ecx
  41310c:	push   ebp
  41310d:	mov    eax,ds:0x3fa0f1e
  413112:	dec    esi
  413113:	dec    eax
  413114:	jmp    0x4582:0xcef7842d
  41311b:	mov    ah,0x82
  41311d:	jmp    0xb1e6d63d
  413122:	push   esi
  413123:	call   0x2fc17b37
  413128:	nop
  413129:	mov    eax,ds:0xa70ed115
  41312e:	jns    0x4130be
  413130:	jg     0x4131a5
  413132:	or     DWORD PTR [edx+0x5c],esi
  413135:	sbb    ebp,edx
  413137:	jmp    0xab42:0xb81b4c66
  41313e:	inc    esp
  41313f:	xchg   edx,eax
  413140:	retf   
  413141:	pop    esi
  413142:	mov    DWORD PTR [ebp-0x5e],edx
  413145:	sub    DWORD PTR [ecx],eax
  413147:	push   esi
  413148:	(bad)  
  41314a:	push   ebx
  41314b:	sar    DWORD PTR [edx+0x22439c0d],1
  413151:	adc    BYTE PTR [ecx+0x7ed7d70f],ch
  413157:	push   esi
  413158:	jbe    0x413167
  41315a:	and    eax,DWORD PTR [edi+0x62]
  41315d:	cwde   
  41315e:	pusha  
  41315f:	xlat   BYTE PTR ds:[ebx]
  413160:	hlt    
  413161:	push   ds
  413162:	sub    eax,0x6ddf80a7
  413167:	xlat   BYTE PTR ds:[ebx]
  413168:	adc    ebx,0xffffffaf
  41316b:	scas   al,BYTE PTR es:[edi]
  41316c:	adc    bl,cl
  41316e:	dec    ebp
  41316f:	mov    cl,ah
  413171:	sbb    edx,ebx
  413173:	cmp    ch,BYTE PTR [ecx]
  413175:	dec    eax
  413176:	mov    eax,0x3a7abe87
  41317b:	sub    bh,ch
  41317d:	repz (bad) 
  41317f:	fcom   QWORD PTR [edi]
  413181:	test   al,0xc
  413183:	stc    
  413184:	out    dx,eax
  413185:	jb     0x413158
  413187:	scas   eax,DWORD PTR es:[edi]
  413188:	jns    0x413111
  41318a:	fmul   DWORD PTR [bp+si]
  41318d:	mov    al,BYTE PTR [eax]
  41318f:	scas   al,BYTE PTR es:[edi]
  413190:	sub    ebx,0xffffff9a
  413193:	rol    DWORD PTR [edi-0x62cc2bdc],1
  413199:	push   edx
  41319a:	ret    
  41319b:	mov    ebp,0xe6c29dce
  4131a0:	jne    0x413176
  4131a2:	je     0x41315a
  4131a4:	add    DWORD PTR [ebx],0xc82f0e8
  4131aa:	dec    eax
  4131ab:	pop    ebx
  4131ac:	lods   eax,DWORD PTR ds:[esi]
  4131ad:	test   al,0x5b
  4131af:	in     al,0xe5
  4131b1:	or     DWORD PTR [eax-0x9],0xffffff99
  4131b5:	jl     0x4131f5
  4131b7:	outs   dx,DWORD PTR ds:[esi]
  4131b8:	add    al,0x64
  4131ba:	cmc    
  4131bb:	jecxz  0x413224
  4131bd:	test   al,0xaf
  4131bf:	ficomp WORD PTR [ecx+0x62960ae]
  4131c5:	shr    DWORD PTR [edi+0x51],cl
  4131c8:	sbb    DWORD PTR [eax+edx*4],ebp
  4131cb:	imul   ebp,eax,0x48
  4131ce:	sub    DWORD PTR [edi+0x2d92c831],0xffffffe1
  4131d5:	push   ecx
  4131d6:	pop    ebx
  4131d7:	jo     0x413214
  4131d9:	cli    
  4131da:	imul   esp,DWORD PTR [eax+0x76],0xffffffa2
  4131de:	aas    
  4131df:	pop    ebp
  4131e0:	adc    BYTE PTR [esi+0x52b05fe8],0x64
  4131e7:	ficomp WORD PTR [ecx-0x64]
  4131ea:	dec    edx
  4131eb:	lds    esp,FWORD PTR [eax]
  4131ed:	in     eax,dx
  4131ee:	sahf   
  4131ef:	inc    esi
  4131f0:	lea    ecx,[eax+0x209d10f0]
  4131f6:	fcomp  QWORD PTR [ebx]
  4131f8:	push   edx
  4131f9:	das    
  4131fa:	jmp    0xaf918463
  4131ff:	mov    bh,0x55
  413201:	mov    esi,0x4c8c3068
  413206:	fdivr  QWORD PTR [ecx-0x15]
  413209:	dec    esp
  41320a:	pop    ebp
  41320b:	fidiv  DWORD PTR [eax+edi*8-0x1d]
  41320f:	push   cs
  413210:	into   
  413211:	loopne 0x4131de
  413213:	test   al,0x79
  413215:	inc    ecx
  413216:	ins    BYTE PTR es:[edi],dx
  413217:	into   
  413218:	fsubr  st,st(1)
  41321a:	pushf  
  41321b:	aas    
  41321c:	fisttp WORD PTR gs:[esi-0x57e592c]
  413223:	inc    ecx
  413224:	int    0xeb
  413226:	shl    DWORD PTR [ebp-0x69],0xb7
  41322a:	int    0xd7
  41322c:	xor    ebx,DWORD PTR [eax-0x6c2e4667]
  413232:	sub    eax,DWORD PTR [edx+eiz*2]
  413235:	or     eax,0x14893156
  41323a:	and    esp,DWORD PTR [ebp+0x61aabab0]
  413240:	xchg   esi,eax
  413241:	dec    esp
  413242:	push   ebp
  413243:	mov    bl,0x5f
  413245:	mov    eax,0xd013ea70
  41324a:	dec    esi
  41324b:	jmp    0xf5c2:0xee1b6830
  413252:	mov    ds:0xfd5c99f6,al
  413257:	inc    ebp
  413258:	jge    0x4132c2
  41325a:	cmp    eax,0xba97b3ee
  41325f:	cli    
  413260:	ins    DWORD PTR es:[edi],dx
  413261:	push   edi
  413262:	scas   eax,DWORD PTR es:[edi]
  413263:	ja     0x413263
  413265:	sub    DWORD PTR [ebx-0x63275ae],edx
  41326b:	add    edx,esp
  41326d:	mov    esp,0x947cebaa
  413272:	fmul   DWORD PTR [edx+0x321ee315]
  413278:	jae    0x413267
  41327a:	mov    dh,0x82
  41327c:	aaa    
  41327d:	rcr    DWORD PTR [ebp-0x64],cl
  413280:	cmp    al,0xa1
  413282:	xor    ebp,eax
  413284:	and    ch,bh
  413286:	xlat   BYTE PTR ds:[ebx]
  413287:	xchg   esi,eax
  413288:	mov    al,0xb9
  41328a:	mov    esp,0x89a70e72
  41328f:	and    al,BYTE PTR [edx+ebx*8-0x28]
  413293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413294:	pavgb  mm6,QWORD PTR [eax+ebp*8-0x19]
  413299:	sub    BYTE PTR [ebx+0x43],0xa0
  41329d:	ins    BYTE PTR es:[edi],dx
  41329e:	mov    dh,0xe9
  4132a0:	inc    ebp
  4132a1:	bswap  esi
  4132a3:	mov    bh,0xe0
  4132a5:	in     al,0x14
  4132a7:	sti    
  4132a8:	inc    ebx
  4132a9:	sti    
  4132aa:	repnz xchg esi,eax
  4132ac:	mov    al,0x2b
  4132ae:	pop    esi
  4132af:	mov    ch,0x8d
  4132b1:	cmp    eax,0x6b28bb27
  4132b6:	jo     0x4132af
  4132b8:	pop    es
  4132b9:	arpl   si,bp
  4132bb:	ret    0xd7d6
  4132be:	inc    edx
  4132bf:	mov    edx,esp
  4132c1:	mov    gs,WORD PTR [esi-0x63]
  4132c4:	push   es
  4132c5:	sbb    BYTE PTR [ecx+0x762c4d57],al
  4132cb:	ror    edx,1
  4132cd:	cmp    BYTE PTR [edi+eiz*4+0x2dbc6d42],ah
  4132d4:	and    esp,DWORD PTR [eax+0x327b8f7f]
  4132da:	dec    esp
  4132db:	inc    eax
  4132dc:	test   BYTE PTR [esi],dh
  4132de:	ror    DWORD PTR [edi-0x7d],1
  4132e1:	inc    esp
  4132e2:	ss scas eax,DWORD PTR es:[edi]
  4132e4:	push   esp
  4132e5:	jp     0x4132ec
  4132e7:	repz leave 
  4132e9:	out    dx,al
  4132ea:	or     BYTE PTR [esi],cl
  4132ec:	fcomip st,st(7)
  4132ee:	pop    ss
  4132ef:	call   0x7e6:0x4bc5725e
  4132f6:	pop    eax
  4132f7:	scas   al,BYTE PTR es:[edi]
  4132f8:	pop    edi
  4132f9:	bound  ecx,QWORD PTR [edx+edi*2]
  4132fc:	cli    
  4132fd:	xchg   ecx,eax
  4132fe:	mov    edi,0x716654bd
  413303:	je     0x4132b7
  413305:	mov    edx,DWORD PTR [edi-0x6add1c76]
  41330b:	aad    0x88
  41330d:	jnp    0x413384
  41330f:	mov    edx,0xb4b8cdb0
  413314:	xchg   esp,eax
  413315:	xchg   esi,eax
  413316:	bound  esi,QWORD PTR [esi-0x6eb290ac]
  41331c:	and    BYTE PTR [edi],al
  41331e:	dec    edx
  41331f:	ss jbe 0x413337
  413322:	push   edi
  413323:	push   edi
  413324:	mov    eax,fs
  413326:	das    
  413327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413328:	cmp    DWORD PTR [edx],eax
  41332a:	mov    al,ds:0x2bea8fe9
  41332f:	mov    bh,0x3
  413331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413332:	and    dh,BYTE PTR [ecx-0x10d3c59e]
  413338:	fild   QWORD PTR [eax+0x16fa17d6]
  41333e:	jns    0x4133b0
  413340:	fsub   st,st(2)
  413342:	dec    esp
  413343:	sbb    BYTE PTR [esi-0x41],bh
  413346:	int3   
  413347:	jmp    0x4133a8
  413349:	sbb    al,0xbc
  41334b:	mov    ds:0x4ba16bc5,eax
  413350:	cs push edx
  413352:	sbb    al,0x21
  413354:	or     BYTE PTR [edx-0x768e267],ah
  41335a:	adc    BYTE PTR [ebp+0x42],dh
  41335d:	pop    DWORD PTR [eax+0x6a]
  413360:	mov    bh,0xa1
  413362:	pop    es
  413363:	mov    ebp,esi
  413365:	ja     0x413399
  413367:	cmp    al,0x5a
  413369:	out    0x6e,eax
  41336b:	dec    ebp
  41336c:	sub    DWORD PTR [ecx+0x21],0x78
  413370:	leave  
  413371:	mov    WORD PTR [edi-0x63],ds
  413374:	je     0x413368
  413376:	outs   dx,DWORD PTR ds:[esi]
  413377:	lea    eax,[ebp-0x70d55693]
  41337d:	repnz cmp edi,0xffffff9a
  413381:	push   0x4bb5731b
  413386:	aam    0xd
  413388:	adc    dh,BYTE PTR [ebx]
  41338a:	loopne 0x41331e
  41338c:	lds    ebx,FWORD PTR [edx-0x63]
  41338f:	jno    0x4133a4
  413391:	or     eax,0x56c16633
  413396:	sbb    esi,DWORD PTR [eax+esi*1+0x3f]
  41339a:	cwde   
  41339b:	scas   eax,DWORD PTR es:[edi]
  41339c:	out    dx,eax
  41339d:	mov    ebx,0xd551eed0
  4133a2:	cmp    eax,0xe06b4240
  4133a7:	lahf   
  4133a8:	aas    
  4133a9:	imul   esp,DWORD PTR [edi],0x801b3a36
  4133af:	inc    esi
  4133b0:	loope  0x4133d0
  4133b2:	mov    ecx,0xad4a200d
  4133b7:	ins    DWORD PTR es:[edi],dx
  4133b8:	xchg   ebp,eax
  4133b9:	xchg   edi,eax
  4133ba:	mov    eax,0xa1780be9
  4133bf:	xchg   edi,eax
  4133c0:	adc    eax,0x4dd3cfae
  4133c5:	fld    TBYTE PTR [esi+0xc2e556]
  4133cb:	or     BYTE PTR [ebp-0x29c1b80],0xf0
  4133d2:	in     al,0x9a
  4133d4:	leave  
  4133d5:	sub    eax,0xddf6dd87
  4133da:	mov    al,0x4c
  4133dc:	jg     0x41337c
  4133de:	push   esi
  4133df:	test   eax,0x903f8dff
  4133e5:	jae    0x4133ed
  4133e7:	mov    cl,0x4f
  4133e9:	xchg   ebp,eax
  4133ea:	fisub  WORD PTR [esi]
  4133ec:	aad    0xb5
  4133ee:	cwde   
  4133ef:	mov    ebp,0x484685de
  4133f4:	cli    
  4133f5:	popa   
  4133f6:	jae    0x413395
  4133f8:	inc    edx
  4133f9:	jno    0x41337f
  4133fb:	or     ebx,ebx
  4133fd:	out    dx,al
  4133fe:	mov    bl,0x71
  413400:	jecxz  0x4133a1
  413402:	fmul   QWORD PTR [edx+0x6e]
  413405:	jnp    0x413451
  413407:	(bad)  
  413408:	shl    ecx,1
  41340a:	fldcw  WORD PTR [esi]
  41340c:	repz sbb al,BYTE PTR [ebx+0x2ec9850]
  413413:	jecxz  0x4133a5
  413415:	mov    ebp,0xb045911a
  41341a:	push   ecx
  41341b:	sub    eax,0x122b1b22
  413420:	mov    DWORD PTR [ebx+eiz*1+0x65],edi
  413424:	and    BYTE PTR [eax],al
  413426:	(bad)  
  413427:	push   ss
  413428:	daa    
  413429:	fadd   st,st(3)
  41342b:	sar    BYTE PTR [ebx+0x1a],1
  41342e:	gs cmc 
  413430:	xchg   ecx,eax
  413431:	mov    dh,0x62
  413433:	mov    WORD PTR [ecx-0x500d1d95],?
  413439:	lock cmp al,0xff
  41343c:	sub    edx,DWORD PTR [ebx+eax*2]
  41343f:	jo     0x413463
  413441:	push   eax
  413442:	rol    DWORD PTR [esi+esi*4+0x79e47163],0xda
  41344a:	sub    al,0xe2
  41344c:	push   eax
  41344d:	repz mov WORD PTR [ecx],gs
  413450:	adc    eax,0x10d25a17
  413455:	sahf   
  413456:	or     cl,dl
  413458:	call   0x7cdcc9c0
  41345d:	push   ecx
  41345e:	into   
  41345f:	xchg   edx,eax
  413460:	add    dl,BYTE PTR [ecx]
  413462:	dec    esi
  413463:	les    ebx,FWORD PTR [ebp-0x14f1a28c]
  413469:	xchg   edx,eax
  41346a:	dec    ebx
  41346b:	mov    ebx,0x6ccd6c7c
  413470:	shl    DWORD PTR [esi-0x6ed8ae61],0x85
  413477:	push   es
  413478:	inc    ebx
  413479:	pop    esi
  41347a:	mov    edi,0xe754038b
  41347f:	push   ss
  413480:	int3   
  413481:	push   edi
  413482:	inc    esi
  413483:	aaa    
  413484:	scas   eax,DWORD PTR es:[edi]
  413485:	(bad)  
  413486:	rol    DWORD PTR [esp+esi*2-0x54cad432],1
  41348d:	or     edi,0xcdc70df
  413493:	cmp    DWORD PTR [ebx],esi
  413495:	popf   
  413496:	call   0x9f91:0x49206669
  41349d:	inc    edi
  41349e:	or     ah,cl
  4134a0:	or     DWORD PTR [edx],esp
  4134a2:	mov    ebx,DWORD PTR [edi+0x18]
  4134a5:	and    al,0xd4
  4134a7:	mov    dh,0xb2
  4134a9:	enter  0x69cd,0x29
  4134ad:	jnp    0x413469
  4134af:	sub    DWORD PTR [edx+0x77],0x38
  4134b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134b4:	sub    esi,edi
  4134b6:	xor    BYTE PTR [edi-0x65],dl
  4134b9:	sti    
  4134ba:	(bad)  
  4134bb:	jmp    0x41348c
  4134bd:	or     al,BYTE PTR [eax+0x2eb28c5e]
  4134c3:	dec    ebx
  4134c4:	(bad)  
  4134c5:	aam    0x56
  4134c7:	bound  eax,QWORD PTR ss:[ebx-0x5f5afe74]
  4134ce:	mov    ecx,0x221b09b6
  4134d3:	and    cl,BYTE PTR [esi+ebx*8+0xdcd7b9f]
  4134da:	mov    ds:0x1c974398,eax
  4134df:	ret    0x875
  4134e2:	dec    esi
  4134e3:	(bad)  
  4134e4:	enter  0x87c,0x94
  4134e8:	iret   
  4134e9:	xchg   edi,eax
  4134ea:	in     al,dx
  4134eb:	xor    BYTE PTR [ebp-0x50],bl
  4134ee:	loopne 0x413472
  4134f0:	sbb    ecx,ecx
  4134f2:	test   cl,ah
  4134f4:	bound  edx,QWORD PTR gs:[edx+0x53]
  4134f8:	xchg   eax,eax
  4134fa:	inc    esp
  4134fb:	mov    dl,0x1a
  4134fd:	fcmovb st,st(5)
  4134ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413500:	inc    edx
  413501:	pop    esp
  413502:	adc    bh,BYTE PTR [ebp-0x45a09da2]
  413508:	sub    esp,edx
  41350a:	jnp    0x4134b4
  41350c:	adc    DWORD PTR [edi],ebp
  41350e:	fucomip st,st(0)
  413510:	das    
  413511:	rcr    DWORD PTR [ecx+0x5d],1
  413514:	add    dl,ch
  413516:	inc    ecx
  413517:	jp     0x413554
  413519:	je     0x413516
  41351b:	pusha  
  41351c:	retf   
  41351d:	add    al,0x83
  41351f:	retf   0x41ec
  413522:	aam    0x3d
  413524:	nop
  413525:	imul   cx,dx,0xffce
  413529:	mov    edi,0xa6aaf585
  41352e:	or     al,0x4f
  413530:	popa   
  413531:	sub    DWORD PTR [edx+edx*1+0x4dbb12bb],0x13
  413539:	jne    0x41351c
  41353b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41353c:	mov    ah,0x5b
  41353e:	data16 xchg BYTE PTR [ecx+0x78],al
  413542:	pop    ds
  413543:	inc    ebx
  413544:	mov    al,0xb1
  413546:	mov    ch,BYTE PTR [ebp-0x43c49417]
  41354c:	fs dec ebx
  41354e:	xchg   edx,eax
  41354f:	shl    ch,1
  413551:	mov    edx,0xe08221b7
  413556:	(bad)  
  413557:	pop    ds
  413558:	jb     0x41353e
  41355a:	mov    ch,0xf
  41355c:	xor    eax,0x70b6b354
  413561:	add    DWORD PTR [ebx-0x632bd4ae],edi
  413567:	ins    BYTE PTR es:[edi],dx
  413568:	inc    ebp
  413569:	leave  
  41356a:	xor    BYTE PTR [esi],bh
  41356c:	stos   DWORD PTR es:[edi],eax
  41356d:	adc    al,0x19
  41356f:	jle    0x4135b8
  413571:	mov    bh,0xbe
  413573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413574:	jmp    0x41357a
  413576:	sbb    esi,DWORD PTR [esi-0x62]
  413579:	out    dx,al
  41357a:	int3   
  41357b:	xchg   edx,eax
  41357c:	mov    DWORD PTR ds:0x9a0bd3e1,eax
  413582:	or     BYTE PTR [esi+0x6e3845b3],dl
  413588:	int3   
  413589:	cmp    BYTE PTR [ebp+0x34],bh
  41358c:	push   0xb630f105
  413591:	in     al,0x50
  413593:	loope  0x4135f4
  413595:	jo     0x413550
  413597:	adc    dl,bh
  413599:	sbb    ch,BYTE PTR [edi-0xe8d7ffc]
  41359f:	adc    ebp,DWORD PTR [eax]
  4135a1:	adc    BYTE PTR [ebx+0x65a5612f],ch
  4135a7:	sbb    eax,0x5d0a9082
  4135ac:	aam    0x18
  4135ae:	mov    DWORD PTR [edx],edi
  4135b0:	es sahf 
  4135b2:	xchg   edx,eax
  4135b3:	add    ah,dh
  4135b5:	pop    ss
  4135b6:	aam    0x77
  4135b8:	jne    0x41357a
  4135ba:	test   BYTE PTR [esi],dh
  4135bc:	lds    edx,FWORD PTR [edi+0x332c2dd4]
  4135c2:	std    
  4135c3:	dec    edx
  4135c4:	or     eax,ebp
  4135c6:	sahf   
  4135c7:	arpl   ax,si
  4135c9:	push   cs
  4135ca:	imul   ebx,DWORD PTR [esi+0x30167c35],0x7f
  4135d1:	jl     0x413627
  4135d3:	pop    edi
  4135d4:	sti    
  4135d5:	xchg   ebp,eax
  4135d6:	fld    DWORD PTR [ecx+0x46]
  4135d9:	cwde   
  4135da:	inc    edi
  4135db:	jecxz  0x4135f6
  4135dd:	inc    esi
  4135de:	imul   edi,DWORD PTR [edx],0x9
  4135e1:	sti    
  4135e2:	mov    ch,0x7
  4135e4:	leave  
  4135e5:	xchg   ecx,eax
  4135e6:	mov    ds:0x907ed0e9,eax
  4135eb:	sbb    edi,DWORD PTR [esi+eax*8-0x52]
  4135ef:	push   ss
  4135f0:	dec    esp
  4135f1:	mov    WORD PTR [eax],ds
  4135f3:	pop    edi
  4135f4:	dec    esp
  4135f5:	arpl   WORD PTR gs:[ecx],ax
  4135f8:	push   cs
  4135f9:	ret    0x4d2d
  4135fc:	outs   dx,BYTE PTR ds:[esi]
  4135fd:	inc    esp
  4135fe:	mov    bl,0x2
  413600:	shr    BYTE PTR [ebp+0x226907f7],cl
  413606:	adc    eax,DWORD PTR [esi+edx*4-0x10]
  41360a:	fisubr DWORD PTR [ebp+0x1328f842]
  413610:	sub    esp,DWORD PTR [edi-0x70]
  413613:	nop
  413614:	mov    ebp,0xa8273fcc
  413619:	sub    cl,dh
  41361b:	fwait
  41361c:	adc    ch,bl
  41361e:	push   0xffffffb2
  413620:	gs push edi
  413622:	pop    eax
  413623:	push   eax
  413624:	jg     0x413650
  413626:	pop    ss
  413627:	jp     0x41369a
  413629:	xchg   esi,eax
  41362a:	jbe    0x413674
  41362c:	out    dx,al
  41362d:	xor    al,0x9b
  41362f:	mov    BYTE PTR [ebx+0x7ca223d0],0xf5
  413636:	push   es
  413637:	mov    al,0x72
  413639:	out    0x8b,eax
  41363b:	iret   
  41363c:	rcr    BYTE PTR [ecx+0x49c005e4],cl
  413642:	(bad)  
  413643:	fsub   st(6),st
  413645:	shl    BYTE PTR [esi*1-0x256f0565],0xf4
  41364d:	mov    esi,0xee29295a
  413652:	dec    esi
  413653:	pop    es
  413654:	sub    eax,0xd3e6029b
  413659:	(bad)  
  41365a:	mov    ecx,0x83a2fe94
  41365f:	inc    esi
  413660:	mov    eax,0x7331b7e6
  413665:	mov    ebp,0xba1aa6db
  41366a:	popf   
  41366b:	outs   dx,BYTE PTR ds:[esi]
  41366c:	outs   dx,BYTE PTR ds:[esi]
  41366d:	sti    
  41366e:	test   edx,esp
  413670:	xchg   edi,eax
  413671:	rol    ecx,1
  413673:	adc    edx,edx
  413675:	(bad)  
  413676:	xchg   ecx,eax
  413677:	call   eax
  413679:	jmp    0x4136a6
  41367b:	and    bl,BYTE PTR [edx+0x0]
  41367e:	loope  0x41365f
  413680:	test   al,0xf
  413682:	aam    0xcf
  413684:	mov    esp,0x2535d4f4
  413689:	jp     0x413625
  41368b:	stc    
  41368c:	(bad)  
  41368d:	aam    0x9a
  41368f:	mov    al,ds:0x3a1dae6e
  413694:	(bad)  
  413695:	mov    dl,0xcf
  413697:	pop    edi
  413698:	xor    ah,ch
  41369a:	lds    ebp,FWORD PTR ds:0x1763cf3f
  4136a0:	xlat   BYTE PTR ds:[ebx]
  4136a1:	inc    edi
  4136a2:	mov    ch,dl
  4136a4:	pop    es
  4136a5:	in     al,dx
  4136a6:	sub    dh,ch
  4136a8:	pop    edi
  4136a9:	pop    eax
  4136aa:	rol    DWORD PTR [eax],0x57
  4136ad:	enter  0x58a9,0x8d
  4136b1:	inc    edx
  4136b2:	out    dx,eax
  4136b3:	stc    
  4136b4:	fstp   DWORD PTR [eax+edx*8]
  4136b7:	xor    cl,bh
  4136b9:	add    eax,0x871ab
  4136be:	mov    esp,0x1e9ed3ef
  4136c3:	stos   DWORD PTR es:[edi],eax
  4136c4:	fnstenv [esi]
  4136c6:	repnz pusha 
  4136c8:	jecxz  0x41369b
  4136ca:	mov    dh,0x2c
  4136cc:	sub    bl,ah
  4136ce:	xchg   bh,cl
  4136d0:	popf   
  4136d1:	shl    BYTE PTR [ebx-0x58fdfa9],1
  4136d7:	xor    DWORD PTR [ebx+0x38edcd65],edi
  4136dd:	or     ebx,DWORD PTR [ecx+0x1]
  4136e0:	pop    esi
  4136e1:	ret    
  4136e2:	ja     0x413747
  4136e4:	scas   al,BYTE PTR es:[edi]
  4136e5:	pop    esp
  4136e6:	jg     0x4136fb
  4136e8:	out    0x6b,al
  4136ea:	sahf   
  4136eb:	into   
  4136ec:	fiadd  WORD PTR [edi+eax*4]
  4136ef:	stc    
  4136f0:	cmp    DWORD PTR [ecx-0x62],ecx
  4136f3:	out    dx,al
  4136f4:	rol    ebp,0x60
  4136f7:	nop
  4136f8:	cdq    
  4136f9:	mov    ?,esi
  4136fb:	bound  ebp,QWORD PTR [esp+edi*1]
  4136fe:	dec    edi
  4136ff:	mov    ds:0x7b3aaee4,eax
  413704:	ret    0xaeab
  413707:	jle    0x413693
  413709:	mov    ebx,0xf9ccb3bf
  41370e:	xchg   ebp,eax
  41370f:	mov    edi,0x6e5c284d
  413714:	cdq    
  413715:	stos   BYTE PTR es:[edi],al
  413716:	aad    0x65
  413718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413719:	pop    edi
  41371a:	ja     0x413735
  41371c:	mov    eax,ds:0xba0b2340
  413721:	cmp    ah,ch
  413723:	cmp    ebx,esi
  413725:	test   eax,0x39ac2ac7
  41372a:	ins    DWORD PTR es:[edi],dx
  41372b:	adc    BYTE PTR [esi+0x39f36af0],0xbe
  413732:	cmp    al,bl
  413734:	fmul   QWORD PTR [ecx+0x3]
  413737:	pop    eax
  413738:	pop    ecx
  413739:	lds    eax,FWORD PTR [esi+0x74]
  41373c:	cmp    al,0x81
  41373e:	sti    
  41373f:	in     al,0x21
  413741:	loopne 0x4136d2
  413743:	push   ecx
  413744:	fldcw  WORD PTR [edi]
  413746:	je     0x413727
  413748:	inc    edi
  413749:	pop    ds
  41374a:	iret   
  41374b:	and    DWORD PTR [ecx+esi*2],edi
  41374e:	shl    DWORD PTR [esp+edx*8+0x4c],cl
  413752:	pop    ebp
  413753:	sub    DWORD PTR [esi-0x7],0xf9ddc635
  41375a:	pop    esi
  41375b:	dec    edi
  41375c:	fwait
  41375d:	shl    BYTE PTR [eax+0x614f50f7],cl
  413763:	and    DWORD PTR [esi],esp
  413765:	or     eax,0xeeb1f090
  41376a:	or     al,0x6
  41376c:	push   edx
  41376d:	stos   DWORD PTR es:[edi],eax
  41376e:	idiv   DWORD PTR [ebx-0x14]
  413771:	adc    eax,0x976b8525
  413776:	and    ch,al
  413778:	push   ebp
  413779:	lods   al,BYTE PTR ds:[esi]
  41377a:	repz cmp ecx,DWORD PTR [esi]
  41377d:	stos   BYTE PTR es:[edi],al
  41377e:	or     eax,0x3466d312
  413783:	ja     0x4137a3
  413785:	jmp    0x39ccc76b
  41378a:	stos   BYTE PTR es:[edi],al
  41378b:	mov    eax,0xbd2a2c2a
  413790:	das    
  413791:	inc    ecx
  413792:	mov    esi,DWORD PTR [ecx+eiz*2]
  413795:	gs das 
  413797:	inc    ecx
  413798:	repnz popa 
  41379a:	mov    eax,0xce709ded
  4137a0:	add    dl,bl
  4137a2:	jp     0x4137e4
  4137a4:	mov    bl,0x5f
  4137a6:	lds    ebp,FWORD PTR [esi+0x7c694e02]
  4137ac:	push   0xffffffbb
  4137ae:	jecxz  0x413784
  4137b0:	shl    BYTE PTR [edx+0x43b2b72c],1
  4137b6:	(bad)  
  4137b7:	into   
  4137b8:	mov    ds:0x377f42e9,al
  4137bd:	aad    0x26
  4137bf:	(bad)  
  4137c0:	xor    ah,cl
  4137c2:	adc    al,0xdd
  4137c4:	add    eax,0x387aca00
  4137c9:	or     BYTE PTR [edx+edx*1],ah
  4137cc:	push   0x7f4b440b
  4137d1:	out    dx,eax
  4137d2:	in     al,0x81
  4137d4:	call   0x1d6a61bc
  4137d9:	jno    0x41377b
  4137db:	mov    bl,0x8e
  4137dd:	xor    BYTE PTR [eax],0xce
  4137e0:	addr16 pop ecx
  4137e2:	mov    WORD PTR [edx+0x6f],fs
  4137e5:	test   bh,bh
  4137e7:	push   ss
  4137e8:	clc    
  4137e9:	cwde   
  4137ea:	jnp    0x41385d
  4137ec:	or     eax,DWORD PTR ds:0x2555b24b
  4137f2:	mov    dh,0xd0
  4137f5:	dec    ebx
  4137f6:	(bad)
  4137fa:	xor    BYTE PTR ds:0xbcaeb2b5,0xeb
  413801:	dec    esp
  413802:	pusha  
  413803:	cmp    DWORD PTR [esi-0x412bf988],ebp
  413809:	repnz sti 
  41380b:	cmp    ah,BYTE PTR [edi+ecx*1]
  41380e:	xor    ah,dl
  413810:	lea    eax,[edi+ebp*1-0x61]
  413814:	std    
  413815:	loopne 0x4137e0
  413817:	dec    DWORD PTR [esi]
  413819:	pop    ebx
  41381a:	and    BYTE PTR [eax],bl
  41381c:	sbb    BYTE PTR [ecx+ebx*8-0x2a],al
  413820:	aad    0xb5
  413822:	test   al,0xfb
  413824:	sub    ecx,DWORD PTR [ebx+0x35bd05c5]
  41382a:	xchg   ebp,eax
  41382b:	inc    esp
  41382c:	mov    edx,0xac5fb0fe
  413831:	pop    esp
  413832:	cmp    dh,BYTE PTR [esp+ebp*1-0xe]
  413836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413837:	cmp    ecx,ecx
  413839:	dec    dl
  41383b:	mov    esi,0x8b43577b
  413840:	popf   
  413841:	test   eax,0xa5bd9bc
  413846:	cmp    esi,ebp
  413848:	sub    dh,BYTE PTR [eax-0x4d]
  41384b:	xchg   esi,eax
  41384c:	loopne 0x413829
  41384e:	add    eax,DWORD PTR [edi]
  413850:	iret   
  413851:	jns    0x4137db
  413853:	push   ecx
  413854:	adc    ch,BYTE PTR [eax-0x4d782b01]
  41385a:	clc    
  41385b:	ins    BYTE PTR es:[edi],dx
  41385c:	jg     0x41380a
  41385e:	retf   0xc649
  413861:	add    dh,BYTE PTR [esi+edx*8-0x3d]
  413865:	and    BYTE PTR [ecx-0x2d024429],bl
  41386b:	jp     0x4138d7
  41386d:	sbb    ah,0x7
  413870:	std    
  413871:	mov    edi,0xd97b589b
  413876:	pop    ds
  413877:	add    BYTE PTR gs:[bx-0x55],cl
  41387c:	push   eax
  41387d:	retf   
  41387e:	add    al,0xd8
  413880:	mov    ds:0xe6882ea,eax
  413885:	in     eax,dx
  413886:	add    DWORD PTR [esp+edx*2-0x2d],0x11
  41388b:	xlat   BYTE PTR ds:[ebx]
  41388c:	pusha  
  41388d:	mov    al,0x14
  41388f:	push   esp
  413890:	mul    BYTE PTR [ebp+0x76]
  413893:	push   0x3bf9d197
  413898:	jge    0x413828
  41389a:	xchg   esp,eax
  41389b:	xchg   edi,eax
  41389c:	mov    esp,0xb9e0377c
  4138a1:	mov    bh,0x9a
  4138a3:	fild   DWORD PTR [ecx]
  4138a5:	or     BYTE PTR ds:0x15726ddf,dh
  4138ab:	jge    0x413921
  4138ad:	out    0x5d,al
  4138af:	les    edi,FWORD PTR [eax]
  4138b1:	out    dx,al
  4138b2:	fsubr  DWORD PTR [ebx-0x34]
  4138b5:	sti    
  4138b6:	cwde   
  4138b7:	mov    al,0xd4
  4138b9:	retf   
  4138ba:	lahf   
  4138bb:	sub    al,0x95
  4138bd:	adc    BYTE PTR [ebx],cl
  4138bf:	and    eax,0x863acb2f
  4138c4:	aad    0xc4
  4138c6:	and    BYTE PTR [edi-0x60],0xea
  4138ca:	sbb    eax,0x65204745
  4138cf:	push   eax
  4138d0:	iret   
  4138d1:	iret   
  4138d2:	jmp    0x9b33ed5
  4138d7:	icebp  
  4138d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138d9:	adc    eax,0x6d5fa0a1
  4138de:	sbb    ch,dl
  4138e0:	enter  0x8197,0x22
  4138e4:	and    DWORD PTR [edi],0x529beb53
  4138ea:	je     0x4138bb
  4138ec:	jmp    0xdf63:0xccd7a2d8
  4138f3:	cs jle 0x413932
  4138f6:	xchg   BYTE PTR [edi],dl
  4138f8:	adc    eax,DWORD PTR [edx-0xc4a56e4]
  4138fe:	jecxz  0x413970
  413900:	mov    eax,0x32476829
  413905:	gs xor al,0x7f
  413908:	test   BYTE PTR [edi-0x53],al
  41390b:	mov    ah,0x11
  41390d:	mov    ds:0x15dd78e3,al
  413912:	sub    eax,0xf3ff43d8
  413917:	pop    ebp
  413918:	dec    ecx
  413919:	mov    edi,0x1884652c
  41391e:	scas   al,BYTE PTR es:[edi]
  41391f:	leave  
  413920:	out    0xf1,al
  413922:	int3   
  413923:	cmovne ebp,DWORD PTR ds:0x87c307b2
  41392a:	fisubr DWORD PTR [eax+0x4532eeed]
  413930:	and    cl,0x98
  413933:	xor    bl,dh
  413935:	adc    esi,edi
  413937:	(bad)  
  413938:	jo     0x41399a
  41393a:	pop    es
  41393b:	cld    
  41393c:	xor    DWORD PTR [eax+0x40],ecx
  41393f:	xchg   BYTE PTR [ebx-0xe],dh
  413942:	xchg   edi,eax
  413943:	mov    bh,0xf7
  413945:	test   al,0x70
  413947:	and    eax,0x1f001ffd
  41394c:	cmp    BYTE PTR [ebx],dh
  41394e:	adc    bh,bl
  413950:	pop    edi
  413951:	inc    esp
  413952:	jne    0x4138e3
  413954:	mov    ebp,ebp
  413956:	cli    
  413957:	xor    DWORD PTR [edx+0x41],0x14
  41395b:	mov    dh,0x2a
  41395d:	or     eax,edx
  41395f:	je     0x4138f2
  413961:	xor    BYTE PTR [ebp+0x14],0xd1
  413965:	push   edi
  413966:	or     ch,dl
  413968:	cmp    esp,DWORD PTR [eax]
  41396a:	sub    eax,0x6f54ea7f
  41396f:	jne    0x413935
  413971:	jmp    0x2a5:0xad8b6f4e
  413978:	packuswb mm0,mm3
  41397b:	retf   0x92f2
  41397e:	jno    0x413948
  413980:	stos   BYTE PTR es:[edi],al
  413981:	lea    esi,[edi+ebp*2-0x35]
  413985:	stos   DWORD PTR es:[edi],eax
  413986:	xchg   edi,eax
  413987:	push   ebp
  413988:	dec    edi
  413989:	sbb    DWORD PTR [esi-0xb],esp
  41398c:	outs   dx,DWORD PTR ds:[esi]
  41398d:	leave  
  41398e:	inc    esp
  41398f:	stos   BYTE PTR es:[edi],al
  413990:	adc    DWORD PTR [ebx-0x59],eax
  413993:	mov    eax,0xfbeb47a2
  413998:	imul   eax,DWORD PTR [esi-0x29],0x2753d001
  41399f:	pop    esi
  4139a0:	xor    al,0x24
  4139a2:	fwait
  4139a3:	adc    BYTE PTR [ebp-0x566a9fe9],bl
  4139a9:	jno    0x41392e
  4139ab:	lods   al,BYTE PTR ds:[esi]
  4139ac:	push   0xf8f5a5fd
  4139b1:	pop    eax
  4139b2:	ja     0x413953
  4139b4:	pop    ebx
  4139b5:	call   0x4fce1072
  4139ba:	sbb    BYTE PTR [eax],dh
  4139bc:	(bad)  
  4139bd:	xlat   BYTE PTR ds:[ebx]
  4139be:	sbb    DWORD PTR [ebx-0x62d2638a],0x92f80cc3
  4139c8:	inc    ecx
  4139c9:	jle    0x413997
  4139cb:	mov    dh,al
  4139cd:	adc    edx,DWORD PTR [ecx+0x7ad2f729]
  4139d3:	xchg   edx,eax
  4139d4:	xor    al,0x66
  4139d6:	fs sub eax,0xceeb1c0
  4139dc:	push   ecx
  4139dd:	pop    esp
  4139de:	cmp    DWORD PTR [esi+edi*8-0x511c76b1],edi
  4139e5:	xor    BYTE PTR [ebp-0x43f24cd3],dl
  4139eb:	les    edi,FWORD PTR [edi]
  4139ed:	sahf   
  4139ee:	mov    es,WORD PTR [eax-0x7f]
  4139f1:	jnp    0x413a1d
  4139f3:	rcl    bl,0x9d
  4139f6:	or     eax,0xc06bf1c7
  4139fb:	sub    ah,bl
  4139fd:	mov    bh,0x87
  4139ff:	aaa    
  413a00:	aas    
  413a01:	adc    eax,0x6412ac23
  413a06:	nop
  413a07:	jae    0x4139d6
  413a09:	jns    0x413a7d
  413a0b:	sbb    DWORD PTR [eax],ecx
  413a0d:	pusha  
  413a0e:	dec    esp
  413a0f:	mov    ch,0xe0
  413a11:	aam    0x8a
  413a13:	in     al,dx
  413a14:	mov    al,0x3c
  413a16:	je     0x413a8c
  413a18:	or     DWORD PTR [ebp-0x8],ebp
  413a1b:	pop    ebx
  413a1c:	int3   
  413a1d:	jp     0x413a8b
  413a1f:	enter  0x969,0x19
  413a23:	inc    ebx
  413a24:	scas   al,BYTE PTR es:[edi]
  413a25:	mov    ah,0xba
  413a27:	xchg   BYTE PTR [ebx+0x1886c95e],ah
  413a2d:	pop    edx
  413a2e:	or     eax,0xb7776d2a
  413a33:	aas    
  413a34:	popa   
  413a35:	mov    edx,0x342e5dbc
  413a3a:	jns    0x413a2d
  413a3c:	data16 (bad) 
  413a3e:	loopne 0x413aac
  413a40:	adc    BYTE PTR [edi-0x6d50bf64],ah
  413a46:	xchg   edi,eax
  413a47:	dec    ebp
  413a48:	(bad)  
  413a4a:	arpl   WORD PTR [edi],bx
  413a4c:	out    0x91,eax
  413a4e:	pop    ss
  413a4f:	out    dx,al
  413a50:	pushf  
  413a51:	dec    ecx
  413a52:	(bad)  
  413a53:	les    esp,FWORD PTR [eax+0x3b]
  413a56:	jle    0x413a74
  413a58:	pop    ebp
  413a59:	or     eax,0xcd364079
  413a5e:	pop    eax
  413a5f:	sbb    ah,BYTE PTR [ecx]
  413a61:	test   BYTE PTR [ecx],cl
  413a63:	sbb    ch,bl
  413a65:	stc    
  413a66:	call   0x529c:0xecba9ea5
  413a6d:	lods   eax,DWORD PTR ds:[esi]
  413a6e:	pop    ds
  413a6f:	mov    eax,0x95aa18a1
  413a74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a75:	xlat   BYTE PTR ds:[ebx]
  413a76:	iret   
  413a77:	das    
  413a78:	(bad)  [edi+0x64]
  413a7b:	mov    ecx,0xe42b7a61
  413a80:	dec    esi
  413a81:	add    al,0xde
  413a83:	std    
  413a84:	stc    
  413a85:	pop    eax
  413a86:	(bad)  
  413a87:	retf   0xd14f
  413a8a:	scas   eax,DWORD PTR es:[edi]
  413a8b:	mov    dh,BYTE PTR [ebx-0x393be3ae]
  413a91:	push   eax
  413a92:	mov    eax,ds:0x7ae0febb
  413a97:	icebp  
  413a98:	xor    BYTE PTR [ebx-0x25],al
  413a9b:	jbe    0x413aa2
  413a9d:	pop    ebp
  413a9e:	mov    edx,0xb503eac0
  413aa3:	cmp    ecx,esp
  413aa5:	xchg   ebp,eax
  413aa6:	mov    BYTE PTR [ebx],cl
  413aa8:	mov    esi,DWORD PTR [edi-0x3e]
  413aab:	shl    ah,cl
  413aad:	cmp    esp,DWORD PTR ds:0xf324eac0
  413ab3:	cdq    
  413ab4:	loope  0x413ad6
  413ab6:	push   0xbc386cfd
  413abb:	add    dl,0x79
  413abe:	gs int3 
  413ac0:	jnp    0x413b27
  413ac2:	shl    esi,1
  413ac4:	sbb    al,0x91
  413ac6:	sti    
  413ac7:	cld    
  413ac8:	xchg   ebx,eax
  413ac9:	aas    
  413aca:	inc    ecx
  413acb:	jne    0x413b3a
  413acd:	or     al,BYTE PTR [ebp+0x37]
  413ad0:	jp     0x413b06
  413ad2:	call   0xbc8a:0x517f985
  413ad9:	ins    DWORD PTR es:[edi],dx
  413ada:	push   es
  413adb:	outs   dx,DWORD PTR ds:[esi]
  413adc:	jo     0x413a84
  413ade:	push   edx
  413adf:	hlt    
  413ae0:	ret    0x607
  413ae3:	call   0xd541a688
  413ae8:	jo     0x413b46
  413aea:	jns    0x413afb
  413aec:	cmp    BYTE PTR [eax+eiz*2-0x392d3815],ah
  413af3:	cmp    cl,BYTE PTR [eax]
  413af5:	mov    ch,0x7
  413af7:	cmp    BYTE PTR [esi],dh
  413af9:	mov    al,0xe0
  413afb:	jmp    0x35e22384
  413b00:	jb     0x413aba
  413b02:	xor    DWORD PTR ds:[ebp+0x34],edx
  413b06:	xchg   esp,eax
  413b07:	adc    DWORD PTR [esi-0x1d],ecx
  413b0a:	mov    ebx,0x1e2b8857
  413b0f:	cmp    ch,ch
  413b11:	shl    BYTE PTR [esi+0x334d9267],1
  413b17:	add    BYTE PTR [ebx],dl
  413b19:	sbb    al,0xa2
  413b1b:	out    dx,al
  413b1c:	jns    0x413b58
  413b1e:	into   
  413b1f:	pop    edx
  413b20:	loope  0x413b37
  413b22:	push   0x1478057d
  413b27:	in     eax,0x24
  413b29:	lock sbb al,0x35
  413b2c:	scas   al,BYTE PTR es:[edi]
  413b2d:	push   ebp
  413b2e:	adc    DWORD PTR [ebp+0xc2ed1af],ebx
  413b34:	pop    esi
  413b35:	mov    edx,cs
  413b37:	jnp    0x413ac7
  413b39:	sahf   
  413b3a:	mov    ecx,0x538a7374
  413b3f:	nop
  413b40:	ss aas 
  413b42:	pop    esp
  413b43:	in     al,0xd5
  413b45:	sbb    edx,DWORD PTR [ebx+0x6c]
  413b48:	mov    bl,0xc0
  413b4a:	addr16 sti 
  413b4c:	jbe    0x413b8e
  413b4e:	xor    DWORD PTR [edi-0x66fe5f3],edx
  413b54:	js     0x413b79
  413b56:	add    bl,BYTE PTR [esp+eiz*8+0x33c3d60a]
  413b5d:	loope  0x413af7
  413b5f:	xchg   DWORD PTR [eax],edi
  413b61:	cmp    BYTE PTR [edi+0x3cb5cf39],0xa5
  413b68:	or     al,0xfe
  413b6a:	das    
  413b6b:	lahf   
  413b6c:	cmp    cl,bl
  413b6e:	ds pop eax
  413b70:	pushf  
  413b71:	fs and al,0xb2
  413b74:	jo     0x413b7b
  413b76:	add    ah,BYTE PTR [ebx+eax*1+0x1d]
  413b7a:	mov    ds:0x890d1824,al
  413b7f:	je     0x413bad
  413b81:	fdiv   QWORD PTR [esi+0xeb984cc]
  413b87:	add    ebx,edi
  413b89:	mov    eax,ds:0xea35d848
  413b8e:	ret    
  413b8f:	add    ebp,DWORD PTR [esi-0x4e]
  413b92:	outs   dx,DWORD PTR ds:[esi]
  413b93:	hlt    
  413b94:	nop
  413b95:	sbb    DWORD PTR [edi],ebx
  413b97:	dec    esi
  413b98:	pop    ss
  413b99:	in     al,dx
  413b9a:	adc    eax,0x564521f
  413b9f:	lahf   
  413ba0:	es jge 0x413b96
  413ba3:	daa    
  413ba4:	arpl   WORD PTR [ecx],dx
  413ba6:	repnz into 
  413ba8:	out    dx,al
  413ba9:	xor    ebx,DWORD PTR [ecx-0x1f36aa54]
  413baf:	or     BYTE PTR [edx],dl
  413bb1:	mov    es,WORD PTR [esi]
  413bb3:	jg     0x413c00
  413bb5:	mov    ?,WORD PTR [eax+eiz*2+0x357d98a2]
  413bbc:	adc    ah,BYTE PTR [eax+0x56]
  413bbf:	inc    eax
  413bc0:	jne    0x413bb2
  413bc2:	dec    eax
  413bc3:	imul   esp,esi,0x5607c42b
  413bc9:	scas   eax,DWORD PTR es:[edi]
  413bca:	jl     0x413bb9
  413bcc:	daa    
  413bcd:	in     eax,dx
  413bce:	or     al,0x3e
  413bd0:	xor    al,0xba
  413bd2:	dec    ebx
  413bd3:	sar    BYTE PTR [ecx-0x3e],1
  413bd6:	push   ds
  413bd7:	in     al,dx
  413bd8:	fs jo  0x413c25
  413bdb:	stos   DWORD PTR es:[edi],eax
  413bdc:	call   0xed20e6f6
  413be1:	dec    ecx
  413be2:	lds    eax,FWORD PTR [ebx-0x191eb2ed]
  413be8:	inc    esp
  413be9:	loopne 0x413bf1
  413beb:	mov    ebp,0x34c7808c
  413bf0:	xchg   eax,edx
  413bf2:	cmc    
  413bf3:	arpl   WORD PTR [edx-0x3f],dx
  413bf6:	and    eax,0xae6280a2
  413bfb:	into   
  413bfc:	cs in  eax,0xb5
  413bff:	daa    
  413c00:	mov    esi,0xe4a9b986
  413c05:	add    ecx,ebx
  413c07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c08:	stos   BYTE PTR es:[edi],al
  413c09:	aad    0x18
  413c0b:	shl    bl,1
  413c0d:	adc    esp,ecx
  413c0f:	sbb    al,BYTE PTR [edi]
  413c11:	call   0xb49f2c97
  413c16:	cli    
  413c17:	pushf  
  413c18:	add    eax,0xd995fb6f
  413c1d:	fnsave [ebx]
  413c1f:	lea    edx,[eax+0x3be126f4]
  413c25:	cmp    al,0x44
  413c27:	and    eax,0x58c94a1a
  413c2c:	xor    eax,0x2d7088f9
  413c31:	ficomp WORD PTR [ebx+0x6b]
  413c34:	mov    dh,0x69
  413c36:	add    BYTE PTR [ebx],ah
  413c38:	(bad)  
  413c39:	xor    al,0x44
  413c3b:	and    eax,0x61b916a7
  413c40:	out    dx,eax
  413c41:	sub    eax,0x177fd183
  413c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c47:	pop    ss
  413c48:	cwde   
  413c49:	xor    edx,DWORD PTR ds:0x282d406
  413c4f:	sahf   
  413c50:	dec    eax
  413c51:	pushf  
  413c52:	push   edi
  413c53:	test   eax,0x1fdc7f7c
  413c58:	shr    BYTE PTR [edx-0x41],cl
  413c5b:	fisttp DWORD PTR [edi]
  413c5d:	sbb    dl,BYTE PTR [ecx+eax*4]
  413c60:	jae    0x413cac
  413c62:	add    dl,dl
  413c64:	inc    ebx
  413c65:	out    0x5,eax
  413c67:	sbb    cl,BYTE PTR [edx-0x27e41bb]
  413c6d:	push   esp
  413c6e:	jne    0x413c22
  413c70:	add    DWORD PTR [ebx],ecx
  413c72:	push   edx
  413c73:	int    0xec
  413c75:	and    ecx,0x490cbf9e
  413c7b:	out    dx,al
  413c7c:	sub    BYTE PTR [esi+0x782530d1],dh
  413c82:	lods   al,BYTE PTR gs:[esi]
  413c84:	outs   dx,BYTE PTR ds:[esi]
  413c85:	jmp    0x2d5a68f5
  413c8a:	jb     0x413cc4
  413c8c:	mov    bh,0x79
  413c8e:	sti    
  413c8f:	jmp    0xbef07690
  413c94:	ror    BYTE PTR [ebp+0x61],1
  413c97:	add    ebx,DWORD PTR [ecx+0x668027bf]
  413c9d:	std    
  413c9e:	out    dx,eax
  413c9f:	imul   DWORD PTR [ecx+0x22164d16]
  413ca5:	ror    DWORD PTR [ebp+eiz*8+0x1897e423],cl
  413cac:	xchg   DWORD PTR [ebp+0xb],ebx
  413caf:	sahf   
  413cb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cb1:	ja     0x413ca7
  413cb3:	cmp    DWORD PTR [eax+ebx*8],ebx
  413cb6:	out    dx,eax
  413cb7:	mov    BYTE PTR [edx],bh
  413cb9:	sub    DWORD PTR [eax+0x6fcb5d94],edi
  413cbf:	jmp    0x346a8c99
  413cc4:	mov    ch,0xd3
  413cc6:	jns    0x413d25
  413cc8:	(bad)  
  413cc9:	loop   0x413ccc
  413ccb:	mov    ebx,DWORD PTR [ebp-0x32ad86b4]
  413cd1:	fimul  WORD PTR [edi+0x47192764]
  413cd7:	fwait
  413cd8:	fs (bad) 
  413cda:	mov    ?,WORD PTR [ebx]
  413cdc:	jge    0x413d1f
  413cde:	imul   esp,esi,0x6
  413ce1:	int    0x56
  413ce3:	inc    eax
  413ce4:	cmp    ch,bl
  413ce6:	call   FWORD PTR [eax]
  413ce8:	clc    
  413ce9:	cmp    BYTE PTR [edx],0xd8
  413cec:	push   cs
  413ced:	mov    ecx,0xd73e3ce9
  413cf2:	jne    0x413d36
  413cf4:	xchg   ecx,eax
  413cf5:	pop    edi
  413cf6:	rcl    bh,0xe9
  413cf9:	imul   ecx,ebx,0xffffffd8
  413cfc:	sub    BYTE PTR [ebx],dl
  413cfe:	jo     0x413c8c
  413d00:	inc    edi
  413d01:	in     eax,dx
  413d02:	fcom   QWORD PTR [edx]
  413d04:	repnz cmc 
  413d06:	adc    BYTE PTR [edi+0x10],bh
  413d09:	pop    ecx
  413d0a:	mov    al,ds:0xcb8349ff
  413d0f:	mov    esi,0x4d5f0a40
  413d14:	adc    dh,0x97
  413d17:	cmp    bl,bh
  413d19:	test   al,0x61
  413d1b:	mov    ah,BYTE PTR [ecx-0x1851d478]
  413d21:	mov    edx,0x3a05831e
  413d26:	inc    ebp
  413d27:	sbb    esp,DWORD PTR [ecx-0x7f7a60f0]
  413d2d:	xchg   ebp,eax
  413d2e:	ss ins DWORD PTR es:[edi],dx
  413d30:	jo     0x413d99
  413d32:	sub    DWORD PTR [esi-0x5f],esp
  413d35:	stos   BYTE PTR es:[edi],al
  413d36:	fld    TBYTE PTR [esi+0x41]
  413d39:	test   eax,0xa79b3fa8
  413d3e:	jne    0x413dbe
  413d40:	adc    al,bh
  413d42:	add    al,0x19
  413d44:	xchg   esi,eax
  413d45:	js     0x413d87
  413d47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d48:	or     ax,0xf35c
  413d4c:	jmp    0x887cfb70
  413d51:	scas   eax,DWORD PTR es:[edi]
  413d52:	iret   
  413d53:	and    BYTE PTR [eax],al
  413d55:	cli    
  413d56:	not    ah
  413d58:	mov    ah,0x8
  413d5a:	jg     0x413dc8
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	(bad)  
  413d5e:	retf   
  413d5f:	or     eax,0xaa3b03ec
  413d64:	or     al,BYTE PTR [edx+0x15]
  413d67:	dec    edi
  413d68:	and    DWORD PTR [ebx],0xffffffd8
  413d6b:	xchg   BYTE PTR [ebx+esi*4-0x3331ec89],al
  413d72:	std    
  413d73:	test   DWORD PTR [edx-0x57a206e7],ebp
  413d79:	sbb    DWORD PTR [ebp-0x11],ebx
  413d7c:	push   0x2
  413d7e:	jne    0x413d06
  413d80:	mov    ebp,0x5537efb7
  413d85:	xor    DWORD PTR [esi-0x57],ecx
  413d88:	and    edi,DWORD PTR [ebp-0x1015f19f]
  413d8e:	ins    BYTE PTR es:[edi],dx
  413d8f:	xor    eax,0xab17fcb2
  413d94:	in     eax,0x3
  413d96:	pop    edi
  413d97:	add    BYTE PTR [ecx],0x0
  413d9a:	pop    ds
  413d9b:	xchg   esi,eax
  413d9c:	fidivr DWORD PTR [ebx-0x28ec68a0]
  413da2:	jle    0x413d3f
  413da4:	(bad)  
  413da5:	stc    
  413da6:	push   ss
  413da7:	xchg   ebx,eax
  413da8:	xchg   ecx,eax
  413da9:	push   0xffffff93
  413dab:	out    0x13,al
  413dad:	push   cs
  413dae:	pop    ebx
  413daf:	mov    dl,BYTE PTR [eax-0x6f]
  413db2:	data16 stc 
  413db4:	jb     0x413d69
  413db6:	jmp    0x9129:0xb77a89e0
  413dbd:	mov    cl,0xd7
  413dbf:	popa   
  413dc0:	dec    esp
  413dc1:	dec    ebx
  413dc2:	or     eax,0x10d9a55c
  413dc7:	pusha  
  413dc8:	inc    edx
  413dc9:	cdq    
  413dca:	sub    bl,BYTE PTR [edx+ebx*4+0x53e10c25]
  413dd1:	(bad)  
  413dd2:	in     al,dx
  413dd3:	mov    ch,0xa2
  413dd5:	scas   eax,DWORD PTR es:[edi]
  413dd6:	or     DWORD PTR [edi+0x18e6f9ea],edi
  413ddc:	daa    
  413ddd:	adc    al,0xcc
  413ddf:	sub    al,0x58
  413de1:	inc    ebp
  413de2:	scas   al,BYTE PTR es:[edi]
  413de3:	jne    0x413dbd
  413de5:	imul   ebp,esi,0xffffffba
  413de8:	xor    DWORD PTR [edi+edx*4+0x7b],0x4c3c2f69
  413df0:	cmp    edx,esp
  413df2:	fisttp DWORD PTR [esi+0x1ae90948]
  413df8:	sub    ecx,ebx
  413dfa:	idiv   al
  413dfc:	addr16 and eax,0xb063694c
  413e02:	mov    edi,0x1faf5e
  413e07:	inc    edi
  413e08:	js     0x413dea
  413e0a:	nop
  413e0b:	xchg   ebx,eax
  413e0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e0d:	mov    edx,0x22bb9a26
  413e12:	sub    al,0x6c
  413e14:	retf   
  413e15:	popf   
  413e16:	ds in  eax,dx
  413e18:	push   ds
  413e19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e1a:	or     esi,edi
  413e1c:	xchg   ebp,eax
  413e1d:	icebp  
  413e1e:	fist   WORD PTR [ecx-0x32cd5bad]
  413e24:	shl    DWORD PTR [eax-0x49],0x31
  413e28:	jo     0x413e36
  413e2a:	xor    al,0x69
  413e2c:	repnz mov ebx,0x52c8de59
  413e32:	jbe    0x413e8b
  413e34:	loopne 0x413e5f
  413e36:	ja     0x413e72
  413e38:	push   0x5b30add1
  413e3d:	dec    esp
  413e3e:	test   DWORD PTR [eax],0x65696e8f
  413e44:	push   eax
  413e45:	test   al,0x34
  413e47:	cmp    BYTE PTR [ecx],dl
  413e49:	mov    ebp,0xad488dc9
  413e4e:	xor    eax,0x314ba4cb
  413e53:	aam    0x18
  413e55:	pop    ebp
  413e56:	sbb    al,0xe0
  413e58:	mov    cl,BYTE PTR [esp+ebx*8]
  413e5b:	or     DWORD PTR [edi+0x3f3ccea2],edx
  413e61:	add    edi,edi
  413e63:	rcl    DWORD PTR [eax+edi*4-0x75b4ecc4],cl
  413e6a:	mov    ah,BYTE PTR [edx+ebp*8+0xc]
  413e6e:	xchg   edi,eax
  413e6f:	push   edx
  413e70:	mov    bh,0x79
  413e72:	jmp    0x1119:0x10fd5ced
  413e79:	push   ds
  413e7a:	mov    WORD PTR [ebx-0x38866e07],gs
  413e80:	fsub   QWORD PTR [ebx-0x6d]
  413e83:	in     al,0xc9
  413e85:	push   edx
  413e86:	mov    ch,0xe3
  413e88:	pop    esi
  413e89:	int    0xed
  413e8b:	jnp    0x413e32
  413e8d:	push   edx
  413e8e:	xchg   esp,esi
  413e90:	push   ebx
  413e91:	add    al,0x5c
  413e93:	hlt    
  413e94:	repz or ebp,DWORD PTR gs:[esi-0x6d]
  413e99:	inc    edx
  413e9a:	push   edx
  413e9b:	xor    al,0x6a
  413e9d:	jmp    0x413e1f
  413e9f:	jo     0x413ec0
  413ea1:	mov    cl,BYTE PTR [eax-0x5dc0e5f]
  413ea7:	jb     0x413e54
  413ea9:	inc    esp
  413eaa:	cld    
  413eab:	scas   eax,DWORD PTR es:[edi]
  413eac:	push   esi
  413ead:	cwde   
  413eae:	shl    DWORD PTR [eax+0x205c1adf],1
  413eb4:	fld    DWORD PTR [edi+0x34978bd7]
  413eba:	dec    esp
  413ebb:	aad    0x74
  413ebd:	shl    BYTE PTR [ecx+0x6b],1
  413ec0:	mov    ds:0xbb6f18c4,eax
  413ec5:	loope  0x413e97
  413ec7:	lahf   
  413ec8:	push   ebx
  413ec9:	cdq    
  413eca:	in     al,dx
  413ecb:	ret    0x7adb
  413ece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ecf:	out    0x39,eax
  413ed1:	cmp    ebp,DWORD PTR [esi-0x1ebb054]
  413ed7:	adc    DWORD PTR [esi-0x31],eax
  413eda:	jp     0x413e8d
  413edc:	retf   
  413edd:	fwait
  413ede:	inc    edi
  413edf:	cwde   
  413ee0:	pusha  
  413ee1:	xor    DWORD PTR [eax+0x57fe4996],ebx
  413ee7:	xor    eax,0x6c151162
  413eec:	xchg   ebp,eax
  413eed:	lea    ecx,gs:[ebx-0x5a]
  413ef1:	pushf  
  413ef2:	xchg   dh,al
  413ef4:	(bad)  
  413ef5:	mov    al,0xc9
  413ef7:	dec    esi
  413ef8:	outs   dx,BYTE PTR ds:[esi]
  413ef9:	(bad)  
  413efa:	adc    BYTE PTR [edx],bh
  413efc:	ja     0x413f44
  413efe:	lahf   
  413eff:	paddusw mm0,QWORD PTR [esp+ecx*8+0x76]
  413f04:	adc    cl,BYTE PTR fs:[edx-0x7]
  413f08:	in     al,0x45
  413f0a:	push   eax
  413f0b:	cld    
  413f0c:	adc    BYTE PTR ds:[ebx+0x15],0x99
  413f11:	dec    ebx
  413f12:	sti    
  413f13:	fimul  WORD PTR [eax-0x4c]
  413f16:	adc    BYTE PTR [edi-0x12afa374],0xdf
  413f1d:	xor    eax,0xbf534fae
  413f22:	mov    ecx,0x455f5ed3
  413f27:	cs sti 
  413f29:	sbb    esp,DWORD PTR [ebx-0x5c]
  413f2c:	push   ebx
  413f2d:	data16 sub dh,dh
  413f30:	test   BYTE PTR [edi-0xc34fe59],bl
  413f36:	inc    esi
  413f37:	inc    esp
  413f38:	xor    BYTE PTR [esi+0x37cf2c7a],dh
  413f3e:	inc    edi
  413f3f:	jp     0x413f1b
  413f41:	fwait
  413f42:	dec    ecx
  413f43:	and    al,BYTE PTR [ebp+0x15]
  413f46:	clc    
  413f47:	mov    ebx,0xb5a7bbff
  413f4c:	and    eax,0x4bae0687
  413f51:	call   0xdda550d8
  413f56:	in     eax,dx
  413f57:	xchg   ecx,eax
  413f58:	mov    al,ds:0xb9e80a91
  413f5d:	sbb    al,0xc
  413f5f:	repz mov cl,BYTE PTR [edi-0x2934682a]
  413f66:	lods   eax,DWORD PTR ds:[esi]
  413f67:	xchg   BYTE PTR [ebx],bl
  413f69:	(bad)
  413f6c:	shl    DWORD PTR [ebx],0xf9
  413f6f:	cmp    eax,0x43bce1ed
  413f74:	fs jge 0x413f76
  413f77:	mov    eax,ebx
  413f79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f7a:	pop    ebp
  413f7b:	icebp  
  413f7c:	pop    ds
  413f7d:	into   
  413f7e:	sub    al,0x5f
  413f80:	mov    bl,0xfc
  413f82:	pushf  
  413f83:	int    0xb4
  413f85:	jmp    0x52d7:0x4cfb27ce
  413f8c:	adc    DWORD PTR [esi],ecx
  413f8e:	inc    edx
  413f8f:	xchg   edx,eax
  413f90:	mov    BYTE PTR [ecx+0x18434ea3],bh
  413f96:	mov    eax,0x1b9ea15b
  413f9b:	retf   0xe9a2
  413f9e:	jp     0x413fe9
  413fa0:	xchg   ebx,eax
  413fa1:	cmp    BYTE PTR [ebx+0x42],dl
  413fa4:	sub    ecx,ebp
  413fa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fa7:	inc    esp
  413fa8:	out    dx,al
  413fa9:	es ds pop edx
  413fac:	fs push ss
  413fae:	mov    al,ds:0xa40a16c0
  413fb3:	push   edi
  413fb4:	xor    bl,BYTE PTR [edx+0x2cd9222]
  413fba:	mov    dl,0x6d
  413fbc:	jnp    0x413f5f
  413fbe:	inc    ebx
  413fbf:	mov    ch,0x81
  413fc1:	sub    edi,DWORD PTR [edi+ecx*8+0x398a7da2]
  413fc8:	sbb    edx,edi
  413fca:	xor    eax,0x78cadb4f
  413fcf:	or     BYTE PTR ss:[esi-0x4fbdefb7],0x70
  413fd7:	jmp    FWORD PTR [ebp-0x589461bc]
  413fdd:	sbb    bh,BYTE PTR [ecx+0x23]
  413fe0:	jmp    0x8970:0x46443932
  413fe7:	lods   eax,DWORD PTR ds:[esi]
  413fe8:	jmp    0xbbf7:0xf76ad4f1
  413fef:	xor    DWORD PTR [edi],esi
  413ff1:	int    0xf4
  413ff3:	or     al,0xbd
  413ff5:	into   
  413ff6:	pop    ebp
  413ff7:	push   ds
  413ff8:	or     esi,esi
  413ffa:	outs   dx,BYTE PTR ds:[esi]
  413ffb:	dec    ebp
  413ffc:	dec    esp
  413ffd:	xor    bh,ch
  413fff:	xchg   esp,eax
  414000:	rcr    BYTE PTR [ebx],1
  414002:	pop    edi
  414003:	mov    ecx,0xfbbd13fb
  414008:	or     BYTE PTR [esi],bl
  41400a:	test   eax,0x545c84bd
  41400f:	mov    esi,ecx
  414011:	(bad)  
  414012:	pop    eax
  414013:	stc    
  414014:	repnz mov al,0xdd
  414017:	stos   DWORD PTR es:[edi],eax
  414018:	dec    esp
  414019:	lea    ebp,[ecx-0x4b070c49]
  41401f:	(bad)
  414024:	inc    ecx
  414025:	add    ah,BYTE PTR [esi]
  414027:	mov    ch,0xcb
  414029:	push   cs
  41402a:	sub    ah,BYTE PTR [ecx]
  41402c:	inc    eax
  41402d:	(bad)  
  41402e:	mov    ch,0x86
  414030:	das    
  414031:	inc    eax
  414032:	xchg   ebx,eax
  414033:	lea    ecx,[edx-0x723fc3cb]
  414039:	es mov ah,0x71
  41403c:	jns    0x414043
  41403e:	pop    es
  41403f:	xchg   ecx,eax
  414040:	mov    eax,0xf8005fd5
  414045:	pop    es
  414046:	adc    bh,BYTE PTR [eax+0x50]
  414049:	(bad)  
  41404a:	pushf  
  41404b:	out    0xb4,eax
  41404d:	mov    ecx,0xed12840e
  414052:	arpl   cx,bx
  414054:	or     eax,0xca90f8af
  414059:	bound  ecx,QWORD PTR [eax+0x1c]
  41405c:	mov    BYTE PTR [eax+0x5b],dl
  41405f:	jns    0x414060
  414061:	fcmove st,st(0)
  414063:	pop    esi
  414064:	pop    es
  414065:	sahf   
  414066:	outs   dx,DWORD PTR ds:[esi]
  414067:	ficomp DWORD PTR [edx-0x6f]
  41406a:	push   esi
  41406b:	or     eax,0x993e8c36
  414070:	push   ecx
  414071:	in     al,dx
  414072:	dec    ecx
  414073:	mov    eax,ds:0xaa568187
  414078:	add    BYTE PTR [eax],ch
  41407a:	jnp    0x414078
  41407c:	add    al,0x2d
  41407e:	jecxz  0x4140e0
  414080:	aaa    
  414081:	jo     0x41406d
  414083:	stos   BYTE PTR es:[edi],al
  414084:	cwde   
  414085:	cmp    eax,0x9af83ad6
  41408a:	mov    ebx,0xf50455e0
  41408f:	popf   
  414090:	pushf  
  414091:	je     0x4140c1
  414093:	pop    esp
  414094:	dec    esp
  414095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414096:	add    ecx,0x2e
  414099:	cwde   
  41409a:	jnp    0x4140e3
  41409c:	fidiv  DWORD PTR [esi+0x3113b605]
  4140a2:	and    BYTE PTR [ecx+edx*1],ch
  4140a5:	mov    ah,0x6
  4140a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140a8:	stos   DWORD PTR es:[edi],eax
  4140a9:	mov    dl,BYTE PTR [ebp+0x3ea75b4f]
  4140af:	imul   esi,DWORD PTR [edx+edx*1-0x23],0x21
  4140b4:	add    al,0xa
  4140b6:	adc    al,0x8e
  4140b8:	push   esi
  4140b9:	xlat   BYTE PTR ds:[ebx]
  4140ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140bb:	mov    dl,0x86
  4140bd:	and    al,0xad
  4140bf:	jno    0x4140ff
  4140c1:	nop
  4140c2:	frstor [ebx]
  4140c4:	(bad)  
  4140c5:	cmp    BYTE PTR [edi],dh
  4140c7:	fcomp  QWORD PTR [ebp+0x25]
  4140ca:	xor    al,0xd2
  4140cc:	mov    gs,edx
  4140ce:	xor    dl,bh
  4140d0:	push   edi
  4140d1:	push   0xa1cf088b
  4140d6:	loop   0x41410a
  4140d8:	cs jbe 0x414060
  4140db:	popa   
  4140dc:	pop    ebp
  4140dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140de:	scas   al,BYTE PTR es:[edi]
  4140df:	jno    0x4140a9
  4140e1:	mov    bl,BYTE PTR [ecx-0x23]
  4140e4:	jbe    0x414093
  4140e6:	call   0xc064:0xf4fb6fd4
  4140ed:	cmc    
  4140ee:	and    dh,BYTE PTR [esi+eax*2+0x2c]
  4140f2:	push   esi
  4140f3:	sub    dl,BYTE PTR [edx]
  4140f5:	clc    
  4140f6:	lods   al,BYTE PTR ds:[esi]
  4140f7:	or     al,0x3d
  4140f9:	push   0xdaebb1c1
  4140fe:	fisttp DWORD PTR [esi]
  414100:	mov    DWORD PTR [edx-0x59],edx
  414103:	add    edx,DWORD PTR [ebx]
  414105:	xchg   esi,eax
  414106:	(bad)  
  414107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414108:	les    esi,FWORD PTR [ebx]
  41410a:	mov    ecx,0x34428ada
  41410f:	pop    ebp
  414110:	icebp  
  414111:	and    BYTE PTR [edx+0x2e],dl
  414114:	sbb    eax,0x8610a0e0
  414119:	mov    edi,0xfdb44dee
  41411e:	outs   dx,BYTE PTR ds:[esi]
  41411f:	adc    DWORD PTR [eax],edi
  414121:	mov    dl,0xd8
  414123:	cmp    al,BYTE PTR [eax-0x6905ac86]
  414129:	adc    al,0xac
  41412b:	imul   DWORD PTR cs:[ebx-0x5288c5e4]
  414132:	inc    ebx
  414133:	or     DWORD PTR [edx+0x162f41cb],ebx
  414139:	aam    0x46
  41413b:	cs pop ebx
  41413d:	fild   DWORD PTR ds:0x4d0dce88
  414143:	mov    WORD PTR ds:0x6d3e3730,?
  414149:	jne    0x41415d
  41414b:	aam    0x76
  41414d:	jge    0x41414e
  41414f:	cdq    
  414150:	jecxz  0x414167
  414152:	sub    DWORD PTR [edi-0x4d736396],0xffffff9f
  414159:	jne    0x414173
  41415b:	cmp    BYTE PTR [edi],bl
  41415d:	xor    edi,DWORD PTR [ecx+0x205b7fb1]
  414163:	pop    esi
  414164:	outs   dx,DWORD PTR ds:[esi]
  414165:	or     eax,0x15b35dab
  41416a:	(bad)  
  41416b:	mov    ebx,0xc3a53203
  414170:	adc    al,0x9b
  414172:	jns    0x414184
  414174:	dec    esi
  414175:	jnp    0x414160
  414177:	std    
  414178:	loope  0x4140fb
  41417a:	aaa    
  41417b:	outs   dx,DWORD PTR ds:[esi]
  41417c:	cmp    bl,dl
  41417e:	stos   DWORD PTR es:[edi],eax
  41417f:	inc    edi
  414180:	stos   DWORD PTR es:[edi],eax
  414181:	pop    edx
  414182:	or     BYTE PTR [ecx],bl
  414184:	call   0xc929041f
  414189:	jl     0x41415f
  41418b:	sbb    DWORD PTR [edi-0x340382d1],eax
  414191:	not    bh
  414193:	imul   edi,DWORD PTR [edx+edi*8+0x6089a281],0xffffffb0
  41419b:	adc    edx,DWORD PTR [esi+ecx*8-0x6c9eeb1d]
  4141a2:	fcomp  QWORD PTR [edx]
  4141a4:	xchg   DWORD PTR [eax+0x4b],ecx
  4141a7:	out    dx,al
  4141a8:	jecxz  0x41412a
  4141aa:	add    al,0xc4
  4141ac:	inc    esp
  4141ad:	sbb    edi,esi
  4141af:	test   al,0x81
  4141b1:	mov    cl,0xdf
  4141b3:	in     al,dx
  4141b4:	push   ecx
  4141b5:	repz pop es
  4141b7:	jne    0x414153
  4141b9:	dec    edi
  4141ba:	sub    DWORD PTR [edx+0x27103e97],esp
  4141c0:	jno    0x4141dc
  4141c2:	mov    ebx,0x2087dc55
  4141c7:	mov    ds:0x6f0f3ee8,eax
  4141cc:	ret    
  4141cd:	mov    bh,BYTE PTR [edx-0x10de4530]
  4141d3:	xlat   BYTE PTR ds:[ebx]
  4141d4:	das    
  4141d5:	fldenv [edx+0x71]
  4141d8:	add    al,0x28
  4141da:	push   edx
  4141db:	mov    esp,0x759a46c3
  4141e0:	fistp  WORD PTR [esi]
  4141e2:	jnp    0x414248
  4141e4:	cdq    
  4141e5:	nop
  4141e6:	mov    bl,0xa
  4141e8:	push   0xffffffc1
  4141ea:	jge    0x414184
  4141ec:	jb     0x41418b
  4141ee:	sbb    eax,0x5b0906ad
  4141f3:	xor    edx,DWORD PTR [edx-0x14]
  4141f6:	sub    al,ah
  4141f8:	jo     0x414229
  4141fa:	ret    0x95a5
  4141fd:	mov    edx,DWORD PTR [ebp-0x4a]
  414200:	lock icebp 
  414202:	pushf  
  414203:	outs   dx,DWORD PTR ds:[esi]
  414204:	push   ss
  414205:	test   al,0xe5
  414207:	xchg   DWORD PTR [eax-0x7e69d666],ebp
  41420d:	add    eax,DWORD PTR [ecx]
  41420f:	push   es
  414210:	pop    edx
  414211:	and    BYTE PTR [edx],bl
  414213:	idiv   BYTE PTR [ebx+0x4f1c6d2d]
  414219:	dec    esi
  41421a:	ror    BYTE PTR [edi+0x40102e79],cl
  414220:	lds    ebp,FWORD PTR ds:0xca6cd703
  414226:	jne    0x414239
  414228:	jp     0x414231
  41422a:	sahf   
  41422b:	stos   DWORD PTR es:[edi],eax
  41422c:	add    al,0xde
  41422e:	ja     0x4141ea
  414230:	nop
  414231:	(bad)  
  414232:	push   DWORD PTR [edi-0x48ceb046]
  414238:	push   0x33
  41423a:	iret   
  41423b:	cwde   
  41423c:	in     eax,dx
  41423d:	pop    eax
  41423e:	inc    ebx
  41423f:	rol    DWORD PTR [ecx],0x5d
  414242:	into   
  414243:	test   ah,bh
  414245:	ror    BYTE PTR [ebx+0x31],1
  414248:	mov    DWORD PTR [esi+0x55],0xd2d3689b
  41424f:	inc    ecx
  414250:	loop   0x414236
  414252:	adc    edi,edi
  414254:	out    0x85,eax
  414256:	cdq    
  414257:	scas   al,BYTE PTR es:[edi]
  414258:	xor    bh,dl
  41425a:	mov    bh,0x78
  41425c:	rcl    BYTE PTR [eax+0x58],1
  41425f:	mov    dl,0x99
  414261:	nop
  414262:	mov    al,0x2a
  414264:	jecxz  0x414216
  414266:	mov    esi,DWORD PTR [ebx]
  414268:	jnp    0x4142dc
  41426a:	ins    DWORD PTR es:[edi],dx
  41426b:	mov    cl,0x7c
  41426d:	jmp    0x414255
  41426f:	add    DWORD PTR [ecx-0x5],edi
  414272:	push   eax
  414273:	push   esp
  414274:	jns    0x41423d
  414276:	push   ds
  414277:	and    eax,0xbf2ff24d
  41427c:	fwait
  41427d:	mov    ah,0x4b
  41427f:	sub    DWORD PTR [edx+ebp*1-0x6f8464b4],ebx
  414286:	cmc    
  414287:	mov    cl,0x7e
  414289:	mov    ?,WORD PTR [ecx+0x7348d9ac]
  41428f:	pop    esi
  414290:	lds    ecx,FWORD PTR [edx]
  414292:	lds    edx,FWORD PTR [ecx-0x6e]
  414295:	fnstcw WORD PTR [edi+0x35]
  414298:	mov    ebx,0xf663c6cd
  41429d:	mov    edi,ebp
  41429f:	mov    esi,0x4e2bbf78
  4142a4:	(bad)  
  4142a5:	fsubr  DWORD PTR [edi+0x5f]
  4142a8:	sub    dh,dl
  4142aa:	sbb    ch,BYTE PTR [edx-0x29]
  4142ad:	sti    
  4142ae:	rcr    BYTE PTR ds:0x89b1e14c,cl
  4142b4:	pop    ebp
  4142b5:	xchg   esp,eax
  4142b6:	sub    al,0x25
  4142b8:	xor    al,ch
  4142ba:	push   esp
  4142bb:	jno    0x41425f
  4142bd:	mov    al,ds:0x1a2504ae
  4142c2:	mov    al,ds:0x5f232f50
  4142c7:	cdq    
  4142c8:	dec    edx
  4142c9:	xchg   ebx,eax
  4142ca:	mov    ch,0x60
  4142cc:	icebp  
  4142cd:	mov    ecx,0x4468b700
  4142d2:	lds    ecx,FWORD PTR [eax-0x2928ee21]
  4142d8:	fnstcw WORD PTR [ecx+0x47b83d58]
  4142de:	inc    ebx
  4142df:	xchg   ebx,eax
  4142e0:	push   cs
  4142e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142e2:	or     DWORD PTR [ecx],ebp
  4142e4:	into   
  4142e5:	sahf   
  4142e6:	pop    es
  4142e7:	int3   
  4142e8:	jg     0x414333
  4142ea:	xchg   edx,eax
  4142eb:	out    0xc8,eax
  4142ed:	mov    bl,0xe4
  4142ef:	out    0xfa,eax
  4142f1:	cmp    ebx,DWORD PTR [edi+0x3c]
  4142f4:	das    
  4142f5:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4142f7:	rol    BYTE PTR [edi+0xf6677c],0x40
  4142fe:	aaa    
  4142ff:	(bad)  
  414300:	out    0x38,al
  414302:	(bad)  
  414303:	xchg   ebx,eax
  414304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414305:	xor    BYTE PTR [edx-0x6c],ah
  414308:	ror    DWORD PTR [eiz*4+0xa11cf1a],cl
  41430f:	rep outs dx,DWORD PTR ds:[esi]
  414311:	cmp    ecx,DWORD PTR ds:0x361380a8
  414317:	jl     0x414339
  414319:	mov    ebp,0x7e1d5669
  41431e:	fisttp DWORD PTR [ebp+edx*2+0x1a]
  414322:	mov    ebx,0xd0cf691a
  414327:	push   esi
  414328:	mov    ebp,0xd900730
  41432d:	out    0x86,eax
  41432f:	(bad)  
  414330:	mov    eax,ds:0xccd80b3c
  414335:	push   0xffffffb8
  414337:	adc    cl,BYTE PTR [edx]
  414339:	out    0xec,al
  41433b:	popf   
  41433c:	mov    dh,0x46
  41433e:	repnz mov ds,WORD PTR [edi]
  414341:	sahf   
  414342:	dec    edi
  414343:	jnp    0x414307
  414345:	sahf   
  414346:	mov    al,0x1d
  414348:	push   eax
  414349:	test   ch,ah
  41434b:	pop    eax
  41434c:	inc    edi
  41434d:	sub    edi,DWORD PTR [bx+si+0x7e40]
  414352:	fcomp  DWORD PTR [eax-0x6670693f]
  414358:	xor    DWORD PTR [esi],edi
  41435a:	mov    cl,0x1e
  41435c:	pop    ebp
  41435d:	leave  
  41435e:	sub    edx,ebx
  414360:	je     0x414336
  414362:	ins    BYTE PTR es:[edi],dx
  414363:	iret   
  414364:	and    DWORD PTR [edx+0x4de6a837],ecx
  41436a:	or     BYTE PTR [esi],0x45
  41436d:	shl    ebp,0x87
  414370:	inc    ecx
  414371:	push   edx
  414372:	lock (bad) 
  414376:	loopne 0x4142f9
  414378:	xchg   esp,eax
  414379:	mov    edx,0x54c84418
  41437e:	(bad)  
  41437f:	into   
  414380:	stc    
  414381:	xchg   ebx,eax
  414382:	std    
  414383:	test   al,0xe8
  414385:	cli    
  414386:	scas   eax,DWORD PTR es:[edi]
  414387:	xchg   edx,eax
  414388:	test   al,0xc6
  41438a:	arpl   sp,bx
  41438c:	leave  
  41438d:	xlat   BYTE PTR ds:[ebx]
  41438e:	xchg   edi,eax
  41438f:	in     eax,dx
  414390:	std    
  414391:	sar    dl,cl
  414393:	loopne 0x414383
  414395:	ja     0x41435c
  414397:	cli    
  414398:	retf   0x4d7a
  41439b:	je     0x4143ad
  41439d:	pusha  
  41439e:	add    al,0xa7
  4143a0:	and    DWORD PTR [ebp+0x4652bafd],esp
  4143a6:	ret    
  4143a7:	(bad)
  4143aa:	sbb    ebx,ebp
  4143ac:	stos   BYTE PTR es:[edi],al
  4143ad:	imul   edx,DWORD PTR [ebx-0x3fb2abb7],0xffffffa0
  4143b4:	adc    eax,0x8710a0f3
  4143b9:	out    dx,eax
  4143ba:	sub    dh,cl
  4143bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143bd:	ins    BYTE PTR es:[edi],dx
  4143be:	cli    
  4143bf:	leave  
  4143c0:	in     al,0x4d
  4143c2:	sti    
  4143c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143c4:	pushf  
  4143c5:	jb     0x4143f0
  4143c7:	inc    esi
  4143c8:	int    0x47
  4143ca:	ins    DWORD PTR es:[edi],dx
  4143cb:	jnp    0x414424
  4143cd:	mov    edx,DWORD PTR [esi+0x30]
  4143d0:	shl    cl,1
  4143d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143d3:	xor    eax,0xc84e6119
  4143d8:	nop
  4143d9:	jmp    0x4143f5
  4143db:	jns    0x4143db
  4143dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143de:	int3   
  4143df:	jg     0x4143d6
  4143e1:	jne    0x414436
  4143e3:	faddp  st(3),st
  4143e5:	(bad)  
  4143e6:	fcmovne st,st(4)
  4143e8:	mov    ebx,0xe9f33523
  4143ed:	out    0x8b,eax
  4143ef:	nop
  4143f0:	add    eax,0xb3e222a4
  4143f5:	pushf  
  4143f6:	daa    
  4143f7:	or     eax,0xeca6eb9f
  4143fc:	mov    ebx,0xc6fa706b
  414401:	xchg   ebx,eax
  414402:	mov    eax,0xe0c95adf
  414407:	lds    ebp,FWORD PTR [ebp-0x68c57b21]
  41440d:	xchg   ebp,eax
  41440e:	and    edi,DWORD PTR [ebx+ecx*2-0xae1d301]
  414415:	pushf  
  414416:	fst    st(0)
  414418:	sbb    dl,BYTE PTR [eax+0x5a]
  41441b:	stos   BYTE PTR es:[edi],al
  41441c:	ds mov ebp,0xea60563a
  414422:	and    BYTE PTR [ecx-0x22cb9edd],ah
  414428:	inc    ecx
  414429:	out    dx,al
  41442a:	or     dh,bh
  41442c:	xchg   ecx,eax
  41442d:	fisubr DWORD PTR [ebx-0x6c]
  414430:	sub    cl,BYTE PTR [edx+ebx*8]
  414433:	and    DWORD PTR [ebp+0x405b1eab],0xffffff87
  41443a:	sub    DWORD PTR [ecx+edi*2],esi
  41443d:	clc    
  41443e:	mov    esi,DWORD PTR [eax-0x12]
  414441:	mov    bl,0x32
  414443:	jb     0x4144a0
  414445:	pop    es
  414446:	push   edi
  414447:	xlat   BYTE PTR ds:[ebx]
  414448:	and    al,0x5f
  41444a:	mov    DWORD PTR ds:0xc0bb8e74,0x37d881e7
  414454:	add    eax,0xbbbf60f1
  414459:	mov    BYTE PTR [ecx-0xb],0x2
  41445d:	push   eax
  41445e:	outs   dx,BYTE PTR ds:[esi]
  41445f:	mov    esi,0xa13ba1d2
  414464:	mov    gs,WORD PTR [ebx+0x517e6f03]
  41446a:	and    dl,cl
  41446c:	add    esi,DWORD PTR [esi-0x675132ed]
  414472:	pop    ebp
  414473:	mov    edi,0x51624935
  414478:	fidiv  WORD PTR [ecx+0x14f8c54f]
  41447e:	xor    BYTE PTR [ebx+0xb271655],ch
  414484:	lods   al,BYTE PTR ds:[esi]
  414485:	ja     0x4144d3
  414487:	call   0x6263338a
  41448c:	adc    al,0x26
  41448e:	mov    ah,0x69
  414490:	dec    ecx
  414491:	push   esi
  414492:	dec    eax
  414493:	out    0xe7,al
  414495:	ret    0x4e71
  414498:	xchg   esp,eax
  414499:	call   0xe0b07090
  41449e:	jge    0x4144d2
  4144a0:	ja     0x414423
  4144a2:	sub    BYTE PTR [esi-0x47052022],ah
  4144a8:	mov    bh,0x57
  4144aa:	aas    
  4144ab:	dec    ebp
  4144ac:	mov    al,0xe2
  4144ae:	push   esp
  4144af:	adc    eax,0xbb552ee3
  4144b4:	mov    ch,0xc2
  4144b6:	int3   
  4144b7:	mov    ebp,0xf77ff9a5
  4144bc:	fmul   st,st(6)
  4144be:	bound  ecx,QWORD PTR [ecx]
  4144c0:	arpl   WORD PTR [ebp-0xc2000db],sp
  4144c6:	or     DWORD PTR [edx+ebp*8],esp
  4144c9:	test   dh,al
  4144cb:	add    DWORD PTR [edi],eax
  4144cd:	ret    
  4144ce:	hlt    
  4144cf:	xor    bh,BYTE PTR [edi+0x4cc36066]
  4144d5:	mov    eax,esp
  4144d7:	xlat   BYTE PTR ds:[ebx]
  4144d8:	loop   0x414527
  4144da:	add    DWORD PTR [ecx+0x59],eax
  4144dd:	sbb    eax,0x5e89d4b9
  4144e2:	in     eax,0xe
  4144e4:	iret   
  4144e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144e7:	jno    0x414539
  4144e9:	pop    edx
  4144ea:	inc    ecx
  4144eb:	scas   al,BYTE PTR es:[edi]
  4144ec:	int3   
  4144ed:	dec    eax
  4144ee:	(bad)  
  4144ef:	adc    BYTE PTR [ecx+0x2e],ch
  4144f2:	fwait
  4144f3:	mov    ds:0xd7e82974,eax
  4144f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144fa:	pop    edx
  4144fb:	push   ds
  4144fc:	cmp    edi,DWORD PTR [ecx+0x396266d4]
  414502:	adc    BYTE PTR [edx+esi*2],dl
  414505:	jle    0x414505
  414507:	ja     0x414503
  414509:	mov    ah,0x26
  41450b:	mov    ecx,?
  41450d:	inc    edx
  41450e:	and    DWORD PTR [edx],eax
  414510:	or     DWORD PTR [edi-0x13eec196],edx
  414516:	pop    ds
  414517:	in     al,dx
  414518:	cmp    al,0x8a
  41451a:	sub    ch,BYTE PTR [esi-0x11b36d34]
  414520:	std    
  414521:	inc    esi
  414522:	fs dec esi
  414524:	neg    DWORD PTR [ecx-0x25]
  414527:	ins    BYTE PTR es:[edi],dx
  414528:	or     eax,0x27a820f6
  41452d:	adc    BYTE PTR [ebx+0x158e5a3],cl
  414533:	mov    cl,0x2e
  414535:	imul   esp,DWORD PTR [esi+0x1aa7a74f],0x73a70936
  41453f:	adc    eax,0x539864c6
  414544:	daa    
  414545:	fisttp WORD PTR [edx-0x7b]
  414548:	mov    esp,0xee4a44de
  41454d:	cmp    al,0x94
  41454f:	mov    ebp,es
  414551:	push   ss
  414552:	xor    BYTE PTR [ebx],dl
  414554:	cs in  al,dx
  414556:	iret   
  414557:	sbb    dl,BYTE PTR [ebx]
  414559:	repz pop esp
  41455b:	add    BYTE PTR [eax-0x600e43f7],al
  414561:	stos   BYTE PTR es:[edi],al
  414562:	int    0x3b
  414564:	fcom   QWORD PTR ss:[ebp+0x44]
  414568:	data16 xlat BYTE PTR ds:[ebx]
  41456a:	add    DWORD PTR [edi+eiz*1-0x24],0xdb48136f
  414572:	xchg   ecx,eax
  414573:	push   ebx
  414574:	shr    DWORD PTR [edx],1
  414576:	not    BYTE PTR [eax*8-0x660bfeaa]
  41457d:	scas   eax,DWORD PTR es:[edi]
  41457e:	cmp    eax,0x1617a160
  414583:	mov    dh,0x6a
  414585:	loope  0x414593
  414587:	mov    esi,0xfb4cdad9
  41458c:	lahf   
  41458d:	mov    ds:0xb572fdd2,al
  414592:	and    DWORD PTR [edi+0x2e],ecx
  414595:	sar    cl,0x76
  414598:	in     al,0x2f
  41459a:	push   esi
  41459b:	cmp    DWORD PTR [eax],0xc000cee8
  4145a1:	cmp    bh,0xd4
  4145a4:	mov    al,ss:0xe2e434a2
  4145aa:	lea    ebx,[edi-0x16]
  4145ad:	sbb    al,BYTE PTR [ebp+0x36]
  4145b0:	retf   0xed2e
  4145b3:	push   esp
  4145b4:	mov    es,WORD PTR [edx]
  4145b6:	fwait
  4145b7:	out    dx,al
  4145b8:	cli    
  4145b9:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145bb:	popa   
  4145bc:	mov    dl,0x3c
  4145be:	aad    0x51
  4145c0:	bound  edi,QWORD PTR [esi]
  4145c2:	ret    0x482c
  4145c5:	pop    ecx
  4145c6:	les    ecx,FWORD PTR [esi]
  4145c8:	mov    ds:0xbda19242,eax
  4145ce:	or     esp,DWORD PTR [esi+eiz*8+0x6cdbc45a]
  4145d5:	and    esp,esi
  4145d7:	and    al,BYTE PTR [esi+0x7c]
  4145da:	jb     0x4145ff
  4145dc:	push   0xa3a448c4
  4145e1:	dec    esi
  4145e2:	xor    BYTE PTR [esp+eiz*4],ch
  4145e5:	cmp    bh,BYTE PTR [ebx+0x758ca6d2]
  4145eb:	scas   al,BYTE PTR es:[edi]
  4145ec:	sbb    edx,eax
  4145ee:	call   DWORD PTR [edi+0x28]
  4145f1:	lods   eax,DWORD PTR ds:[esi]
  4145f2:	fstp   TBYTE PTR [ebx+0x45]
  4145f5:	outs   dx,BYTE PTR ds:[esi]
  4145f7:	xor    edi,DWORD PTR [esp+ebx*4]
  4145fa:	fnstcw WORD PTR [ebx]
  4145fc:	sahf   
  4145fd:	mov    dh,0x4c
  4145ff:	je     0x414607
  414601:	ins    DWORD PTR es:[edi],dx
  414602:	imul   esp
  414604:	xor    al,0xaa
  414606:	nop
  414607:	mov    ah,0xbf
  414609:	pop    es
  41460a:	out    dx,al
  41460b:	sbb    BYTE PTR [edi+0x1f40cc8d],al
  414611:	fidivr WORD PTR [eax+esi*2+0x1f]
  414615:	cmc    
  414616:	dec    ecx
  414618:	test   al,0x5b
  41461a:	int3   
  41461b:	dec    edi
  41461c:	repnz scas al,BYTE PTR es:[edi]
  41461e:	call   0x81d6:0xc5a97d96
  414625:	(bad)  
  414626:	sti    
  414627:	out    0x98,al
  414629:	dec    ebp
  41462a:	inc    edx
  41462b:	mov    esi,0x75305e59
  414630:	push   esi
  414631:	dec    ecx
  414632:	xchg   ecx,eax
  414633:	ss jb  0x41468a
  414636:	push   es
  414637:	pop    ebx
  414638:	xor    al,0xad
  41463a:	pop    eax
  41463b:	xchg   DWORD PTR [edx-0x71],ebp
  41463e:	in     al,0x8a
  414640:	pop    ds
  414641:	dec    edi
  414642:	add    al,BYTE PTR [bx+0x2ee0]
  414647:	ins    BYTE PTR es:[edi],dx
  414648:	and    DWORD PTR [esi],ebx
  41464a:	sub    DWORD PTR [edi-0x24],edx
  41464d:	mov    ebx,0xc0942c8
  414652:	xor    eax,0xc29175f7
  414657:	sbb    ecx,esi
  414659:	add    DWORD PTR ds:0xa036f88d,esp
  41465f:	dec    edi
  414660:	in     eax,dx
  414661:	jmp    0xa714:0xcd74bc26
  414668:	sub    al,0xd2
  41466a:	enter  0xa514,0x18
  41466e:	inc    edx
  41466f:	(bad)  
  414671:	mov    bh,BYTE PTR [ebx]
  414673:	daa    
  414674:	arpl   WORD PTR ds:0x7132d571,dx
  41467a:	hlt    
  41467b:	gs xchg edi,eax
  41467d:	sub    DWORD PTR [eax-0x56],ecx
  414680:	add    al,0x43
  414682:	mov    ds:0x12a694fa,al
  414687:	adc    ah,BYTE PTR [esi+0x22]
  41468a:	int3   
  41468b:	sub    al,BYTE PTR [edi-0x3]
  41468e:	test   DWORD PTR [edx],esi
  414690:	and    BYTE PTR [ebx+ebx*2],0xe4
  414694:	aad    0x9e
  414696:	xor    eax,0x4ef7edca
  41469b:	rcr    BYTE PTR [edx],1
  41469d:	mov    ecx,0x9972c80e
  4146a2:	sub    BYTE PTR [ebx-0x6b2ee49a],al
  4146a8:	pop    eax
  4146a9:	daa    
  4146aa:	psadbw mm6,QWORD PTR [esi-0x19c976ef]
  4146b1:	xor    edi,DWORD PTR [eax+0x7c]
  4146b4:	nop
  4146b5:	repz mov ebx,0xbf2c06e4
  4146bb:	icebp  
  4146bc:	push   ds
  4146bd:	inc    edx
  4146be:	mov    cs,WORD PTR [edi-0x1aa99691]
  4146c4:	test   DWORD PTR [ebp+0x57],ecx
  4146c7:	imul   edi,DWORD PTR [ebx-0x5a4d323c],0xffffff85
  4146ce:	data16 sub dl,BYTE PTR [edi-0x16]
  4146d2:	test   eax,0xc8a1d098
  4146d7:	stos   BYTE PTR es:[edi],al
  4146d8:	fidiv  WORD PTR [esi]
  4146da:	sub    DWORD PTR [ecx-0x18],ecx
  4146dd:	retf   
  4146de:	adc    DWORD PTR [ecx+0x2b13a721],esp
  4146e4:	mov    al,0xf
  4146e6:	mov    ds:0x8cdc5e0e,al
  4146eb:	aam    0xaf
  4146ed:	jmp    0xfe6b:0xd8212846
  4146f4:	adc    DWORD PTR [ebx+0x5a],eax
  4146f7:	cmp    esi,0x79
  4146fa:	mov    esp,0xf70711ca
  4146ff:	push   ecx
  414700:	jle    0x414689
  414702:	jge    0x4146d3
  414704:	xchg   DWORD PTR [ebp-0x70],esi
  414707:	adc    ecx,DWORD PTR [ebx+0x51]
  41470a:	mov    edi,0x4de3de7d
  41470f:	sahf   
  414710:	mov    ah,0x79
  414712:	aas    
  414713:	les    ebp,FWORD PTR [esi]
  414715:	adc    eax,0xbde7dd08
  41471a:	aam    0xf7
  41471c:	cmp    al,BYTE PTR [esi+0x42]
  41471f:	sub    al,BYTE PTR [esi+edx*2-0x32]
  414723:	jmp    0xb170d2df
  414728:	mov    bh,0x7b
  41472a:	in     al,dx
  41472b:	ret    
  41472c:	and    ecx,eax
  41472e:	sbb    ebx,DWORD PTR [ebp+0x2797af4b]
  414734:	leave  
  414735:	add    eax,0xdf872cd9
  41473a:	sub    dl,BYTE PTR [ecx+0x7f]
  41473d:	fadd   st(4),st
  41473f:	add    bh,cl
  414741:	dec    ebx
  414742:	std    
  414743:	(bad)  
  414745:	sbb    al,0x31
  414747:	fcomp  QWORD PTR [esi+0x56]
  41474a:	jnp    0x414794
  41474c:	leave  
  41474d:	sbb    ah,0x5a
  414750:	bound  ebx,QWORD PTR [ebp+0x28e73624]
  414756:	popf   
  414757:	jnp    0x414783
  414759:	cli    
  41475a:	jbe    0x414751
  41475c:	mov    ebp,0x98098c7b
  414761:	rcr    ebx,1
  414763:	mov    dl,bl
  414765:	rol    BYTE PTR [esi+0xa],cl
  414768:	addr16 (bad) 
  41476a:	out    0xaf,eax
  41476c:	xor    eax,0x9f66507d
  414771:	push   ebx
  414772:	loope  0x4147d1
  414774:	(bad)  [ebx+0x544de573]
  41477a:	popf   
  41477b:	and    eax,0x55687184
  414780:	stos   DWORD PTR es:[edi],eax
  414781:	stos   DWORD PTR es:[edi],eax
  414782:	hlt    
  414783:	cmp    BYTE PTR [edx],bh
  414785:	sbb    BYTE PTR [edi],al
  414787:	sbb    BYTE PTR [ecx+eax*4],bh
  41478a:	stos   DWORD PTR es:[edi],eax
  41478b:	enter  0x6290,0xc1
  41478f:	push   esi
  414790:	adc    edx,DWORD PTR [eax+0x7e]
  414793:	and    edx,DWORD PTR [ecx]
  414795:	stc    
  414796:	jns    0x4147f2
  414798:	or     DWORD PTR [edx-0x4eed0ccb],0x30
  41479f:	test   BYTE PTR [esi-0x43f26b5f],al
  4147a5:	cmp    eax,0x3a34e7ee
  4147aa:	(bad)  
  4147ab:	sti    
  4147ac:	fist   DWORD PTR [edx+0x2a]
  4147af:	push   0xe0b5c880
  4147b4:	stos   DWORD PTR es:[edi],eax
  4147b5:	pusha  
  4147b6:	push   eax
  4147b7:	mov    eax,0xb2117d3b
  4147bc:	pushf  
  4147bd:	mov    ds:0x7919f0df,al
  4147c2:	sbb    al,0x0
  4147c4:	inc    esi
  4147c5:	sahf   
  4147c6:	adc    edx,ebp
  4147c8:	(bad)  [ebx-0x5c]
  4147cb:	push   cs
  4147cc:	pop    ebp
  4147cd:	fbstp  TBYTE PTR [esi+0x1f]
  4147d0:	inc    ebp
  4147d1:	jb     0x4147fe
  4147d3:	inc    edi
  4147d4:	in     al,dx
  4147d5:	xchg   edx,eax
  4147d6:	aaa    
  4147d7:	sub    DWORD PTR [ebx+edx*8+0x23],edi
  4147db:	and    DWORD PTR [esi-0x4cc4d809],ebp
  4147e1:	pop    ecx
  4147e2:	adc    dh,BYTE PTR [ecx+eax*1-0x48110174]
  4147e9:	lods   al,BYTE PTR ds:[esi]
  4147ea:	pop    ebx
  4147eb:	xlat   BYTE PTR ds:[ebx]
  4147ec:	inc    esi
  4147ed:	mov    WORD PTR [edx+0x9],ds
  4147f0:	sbb    DWORD PTR [edx+0x57],esi
  4147f3:	int    0x61
  4147f5:	jg     0x4147c2
  4147f7:	pop    ds
  4147f8:	loopne 0x41477a
  4147fa:	je     0x414832
  4147fc:	jae    0x41486f
  4147fe:	mov    ebp,DWORD PTR [esi+0x64]
  414801:	pop    esp
  414802:	sbb    al,0x9e
  414804:	call   0xef29:0xf40d84ed
  41480b:	ret    
  41480c:	mov    esi,0xdeb27121
  414811:	jmp    0xb6e5:0x4f05197b
  414818:	stos   BYTE PTR es:[edi],al
  414819:	int3   
  41481a:	sti    
  41481b:	mov    dl,0x88
  41481d:	loope  0x4147a3
  41481f:	leave  
  414820:	cmc    
  414821:	mov    ebp,0x70d947f3
  414826:	xchg   edi,eax
  414827:	fs out dx,eax
  414829:	jp     0x4147dd
  41482b:	sbb    eax,0xb79fc8ff
  414830:	pop    es
  414831:	mov    ebp,ecx
  414833:	and    cl,ch
  414835:	dec    ebx
  414836:	xchg   ebp,eax
  414837:	es push es
  414839:	mov    bh,0xfa
  41483b:	sti    
  41483c:	mov    eax,0x29d01109
  414841:	lock bound ebp,QWORD PTR [esi-0x2b89e182]
  414848:	(bad)  ds:0x6ab8c5d0
  41484e:	pop    esp
  41484f:	push   edx
  414850:	das    
  414851:	mov    edx,0x59dc88cd
  414856:	xor    eax,0xd27c1c2e
  41485b:	shr    DWORD PTR [esi],0xb8
  41485e:	xchg   DWORD PTR [edi-0x56],edi
  414861:	into   
  414862:	dec    edi
  414863:	jo     0x41480a
  414865:	push   eax
  414866:	xor    ebp,esp
  414868:	jmp    0xf37f6c45
  41486d:	jge    0x4148e1
  41486f:	sbb    ebp,esp
  414871:	icebp  
  414872:	dec    eax
  414873:	xabort 0x63
  414876:	out    0x21,al
  414878:	jmp    0x67adc850
  41487d:	outs   dx,DWORD PTR ds:[esi]
  41487e:	mov    al,0xc3
  414880:	mov    bl,0xd8
  414882:	inc    esp
  414883:	sub    bh,bh
  414885:	xlat   BYTE PTR ds:[ebx]
  414886:	adc    esi,edi
  414888:	in     al,0x5f
  41488a:	in     eax,dx
  41488b:	test   al,0x94
  41488d:	nop
  41488e:	xor    al,BYTE PTR [esi]
  414890:	mov    bh,BYTE PTR [edx+0x7c84fdfa]
  414896:	push   0x72c0a7a1
  41489b:	push   esi
  41489c:	xlat   BYTE PTR ds:[ebx]
  41489d:	pop    ds
  41489e:	cmp    al,0xfd
  4148a0:	sahf   
  4148a1:	rcl    BYTE PTR [edi+0x5f3f8326],cl
  4148a7:	sub    esi,esp
  4148a9:	or     esi,eax
  4148ab:	call   0xa74eb98e
  4148b0:	cmp    DWORD PTR [ecx-0x619d71ba],0x42efd454
  4148ba:	xchg   BYTE PTR [ecx],bh
  4148bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148be:	dec    ebx
  4148bf:	pusha  
  4148c0:	ret    0x17d8
  4148c3:	push   edx
  4148c4:	std    
  4148c5:	out    dx,al
  4148c6:	mov    dl,0x48
  4148c8:	cli    
  4148c9:	shrd   DWORD PTR ds:0xe4cb680a,ecx,cl
  4148d0:	retf   
  4148d1:	inc    eax
  4148d2:	out    dx,eax
  4148d3:	inc    edx
  4148d4:	pop    ebp
  4148d5:	loopne 0x41487b
  4148d7:	sbb    ebp,DWORD PTR [ebx-0x1ac3ab88]
  4148dd:	add    ecx,DWORD PTR ds:0x3b5b90f8
  4148e3:	ins    DWORD PTR es:[edi],dx
  4148e4:	fisttp WORD PTR [edi+0x191cbab]
  4148ea:	mov    eax,0xb81af635
  4148ef:	xchg   ebp,eax
  4148f0:	adc    edi,ebx
  4148f2:	in     al,dx
  4148f3:	adc    al,0xa
  4148f5:	cmp    al,0xdb
  4148f7:	or     eax,0x4513f74d
  4148fc:	dec    eax
  4148fd:	jge    0x41494d
  4148ff:	and    bl,BYTE PTR [esi]
  414901:	dec    esi
  414902:	cld    
  414903:	mov    al,0xe
  414905:	jecxz  0x414954
  414907:	add    al,0x4
  414909:	mov    ebx,edi
  41490b:	push   eax
  41490c:	inc    ecx
  41490d:	std    
  41490e:	loope  0x41495f
  414910:	adc    dl,BYTE PTR [eax]
  414912:	pushf  
  414913:	cmp    bh,0x48
  414916:	add    BYTE PTR [edx+0x4e],0x84
  41491a:	mov    esi,DWORD PTR [esi+ebx*8]
  41491d:	es stos DWORD PTR es:[edi],eax
  41491f:	sbb    ah,BYTE PTR [esi]
  414921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414922:	out    dx,eax
  414923:	stc    
  414924:	mov    edx,0xbb4185b1
  414929:	pop    ss
  41492a:	mov    bh,0x1d
  41492c:	inc    esp
  41492d:	pop    edi
  41492e:	dec    ebp
  414930:	inc    ecx
  414931:	jo     0x41498c
  414933:	or     BYTE PTR [esi],0x68
  414936:	ret    
  414937:	js     0x4148fd
  414939:	into   
  41493a:	push   0x5b
  41493c:	cmp    DWORD PTR [edi],edx
  41493e:	pop    eax
  41493f:	inc    edi
  414940:	fidiv  DWORD PTR [eax+0x21c5dd0f]
  414946:	sar    DWORD PTR [edi],1
  414948:	jmp    0xe9d0:0x950a7aea
  41494f:	jne    0x414975
  414951:	in     al,dx
  414952:	(bad)  
  414953:	xchg   edi,eax
  414954:	mov    eax,0xa960bf56
  414959:	lock stos DWORD PTR es:[edi],eax
  41495b:	dec    esi
  41495c:	mov    ah,0x39
  41495e:	(bad)  
  41495f:	imul   esi,DWORD PTR [edi-0x5dfe141f],0x685bb006
  414969:	ins    DWORD PTR es:[edi],dx
  41496a:	sub    al,0xdb
  41496c:	or     eax,0xf5f6d090
  414971:	or     BYTE PTR [edx],bh
  414973:	jmp    0x41490d
  414975:	pop    ss
  414976:	(bad)  
  414978:	or     BYTE PTR [edi+0x34],bh
  41497b:	int    0x34
  41497d:	mov    al,ds:0x7a453c15
  414982:	lock mov esp,0x94e6e916
  414988:	add    eax,0xb8a0bdf9
  41498d:	xchg   di,ax
  41498f:	jg     0x4149e7
  414991:	inc    edi
  414992:	call   0x592a:0x361b9d7c
  414999:	cmp    ah,BYTE PTR [edi]
  41499b:	cli    
  41499c:	jmp    0x4149c0
  41499e:	and    eax,0xfffffffe
  4149a1:	les    eax,FWORD PTR [edx-0x1272daf1]
  4149a7:	ret    0x7b5b
  4149aa:	mov    cl,0x4
  4149ac:	pop    ss
  4149ad:	mov    DWORD PTR [ebp+0x8],edx
  4149b0:	jmp    0x414a25
  4149b5:	mov    edx,DWORD PTR [ebp+0x8]
  4149b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4149bb:	xor    edx,eax
  4149bd:	xor    ebx,eax
  4149bf:	sub    edx,ebx
  4149c1:	sub    edx,esi
  4149c3:	xor    edx,eax
  4149c5:	mov    DWORD PTR [ebp+0x8],edx
  4149c8:	mov    edx,DWORD PTR [ebp+0x8]
  4149cb:	mov    ebx,DWORD PTR [ebp-0x58]
  4149ce:	add    edx,0x5708e2
  4149d4:	imul   edx,ebx
  4149d7:	mov    DWORD PTR [ebp-0x58],edx
  4149da:	mov    edx,DWORD PTR [ebp+0x8]
  4149dd:	mov    ebx,DWORD PTR [ebp-0x54]
  4149e0:	add    edx,0x64f89c
  4149e6:	or     edx,ebx
  4149e8:	mov    DWORD PTR [ebp-0x54],edx
  4149eb:	mov    edx,DWORD PTR [ebp+0x8]
  4149ee:	mov    ebx,DWORD PTR [ebp-0x50]
  4149f1:	add    edx,ecx
  4149f3:	xor    edx,ebx
  4149f5:	mov    DWORD PTR [ebp-0x50],edx
  4149f8:	mov    edx,DWORD PTR [ebp+0x8]
  4149fb:	mov    ebx,DWORD PTR [ebp-0x4c]
  4149fe:	add    edx,edi
  414a00:	and    edx,ebx
  414a02:	mov    DWORD PTR [ebp-0x4c],edx
  414a05:	mov    edx,DWORD PTR [ebp+0x8]
  414a08:	mov    ebx,DWORD PTR [ebp-0x48]
  414a0b:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a12:	mov    DWORD PTR [ebp-0x48],edx
  414a15:	mov    edx,DWORD PTR [ebp+0x8]
  414a18:	mov    ebx,0xfa5e1528
  414a1d:	sub    ebx,edx
  414a1f:	add    ebx,DWORD PTR [ebp-0x44]
  414a22:	mov    DWORD PTR [ebp-0x44],ebx
  414a25:	mov    edx,DWORD PTR [ebp+0x8]
  414a28:	xor    edx,eax
  414a2a:	add    edx,esi
  414a2c:	jne    0x4149b5
  414a32:	mov    edx,DWORD PTR [ebp-0x14]
  414a35:	mov    DWORD PTR [ebp+0x8],edx
  414a38:	jmp    0x414aad
  414a3d:	mov    edx,DWORD PTR [ebp+0x8]
  414a40:	mov    ebx,DWORD PTR [ebp-0x8]
  414a43:	xor    edx,eax
  414a45:	xor    ebx,eax
  414a47:	sub    edx,ebx
  414a49:	sub    edx,esi
  414a4b:	xor    edx,eax
  414a4d:	mov    DWORD PTR [ebp+0x8],edx
  414a50:	mov    edx,DWORD PTR [ebp+0x8]
  414a53:	mov    ebx,DWORD PTR [ebp-0x58]
  414a56:	add    edx,0x5708e2
  414a5c:	imul   edx,ebx
  414a5f:	mov    DWORD PTR [ebp-0x58],edx
  414a62:	mov    edx,DWORD PTR [ebp+0x8]
  414a65:	mov    ebx,DWORD PTR [ebp-0x54]
  414a68:	add    edx,0x64f89c
  414a6e:	or     edx,ebx
  414a70:	mov    DWORD PTR [ebp-0x54],edx
  414a73:	mov    edx,DWORD PTR [ebp+0x8]
  414a76:	mov    ebx,DWORD PTR [ebp-0x50]
  414a79:	add    edx,ecx
  414a7b:	xor    edx,ebx
  414a7d:	mov    DWORD PTR [ebp-0x50],edx
  414a80:	mov    edx,DWORD PTR [ebp+0x8]
  414a83:	mov    ebx,DWORD PTR [ebp-0x4c]
  414a86:	add    edx,edi
  414a88:	and    edx,ebx
  414a8a:	mov    DWORD PTR [ebp-0x4c],edx
  414a8d:	mov    edx,DWORD PTR [ebp+0x8]
  414a90:	mov    ebx,DWORD PTR [ebp-0x48]
  414a93:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a9a:	mov    DWORD PTR [ebp-0x48],edx
  414a9d:	mov    edx,DWORD PTR [ebp+0x8]
  414aa0:	mov    ebx,0xfa5e1528
  414aa5:	sub    ebx,edx
  414aa7:	add    ebx,DWORD PTR [ebp-0x44]
  414aaa:	mov    DWORD PTR [ebp-0x44],ebx
  414aad:	mov    edx,DWORD PTR [ebp+0x8]
  414ab0:	xor    edx,eax
  414ab2:	add    edx,esi
  414ab4:	jne    0x414a3d
  414aba:	mov    edx,DWORD PTR [ebp-0x8]
  414abd:	mov    ebx,DWORD PTR [ebp-0xc]
  414ac0:	xor    edx,eax
  414ac2:	lea    edx,[edx+ebx*1+0x3272f3]
  414ac9:	mov    DWORD PTR [ebp-0xc],edx
  414acc:	mov    edx,DWORD PTR [ebp-0x10]
  414acf:	xor    edx,eax
  414ad1:	add    edx,esi
  414ad3:	jne    0x41224b
  414ad9:	jmp    0x41b68b
  414ade:	mov    ecx,DWORD PTR [ebp-0x14]
  414ae1:	mov    DWORD PTR [ebp+0x8],ecx
  414ae4:	jmp    0x414b5d
  414ae9:	mov    ecx,DWORD PTR [ebp+0x8]
  414aec:	mov    edx,DWORD PTR [ebp-0x8]
  414aef:	xor    ecx,eax
  414af1:	xor    edx,eax
  414af3:	sub    ecx,edx
  414af5:	sub    ecx,esi
  414af7:	xor    ecx,eax
  414af9:	mov    DWORD PTR [ebp+0x8],ecx
  414afc:	mov    ecx,DWORD PTR [ebp+0x8]
  414aff:	mov    edx,DWORD PTR [ebp-0x58]
  414b02:	add    ecx,0x5708e2
  414b08:	imul   ecx,edx
  414b0b:	mov    DWORD PTR [ebp-0x58],ecx
  414b0e:	mov    ecx,DWORD PTR [ebp+0x8]
  414b11:	mov    edx,DWORD PTR [ebp-0x54]
  414b14:	add    ecx,0x64f89c
  414b1a:	or     ecx,edx
  414b1c:	mov    DWORD PTR [ebp-0x54],ecx
  414b1f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b22:	mov    edx,DWORD PTR [ebp-0x50]
  414b25:	add    ecx,0x242ebcd
  414b2b:	xor    ecx,edx
  414b2d:	mov    DWORD PTR [ebp-0x50],ecx
  414b30:	mov    ecx,DWORD PTR [ebp+0x8]
  414b33:	mov    edx,DWORD PTR [ebp-0x4c]
  414b36:	add    ecx,edi
  414b38:	and    ecx,edx
  414b3a:	mov    DWORD PTR [ebp-0x4c],ecx
  414b3d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b40:	mov    edx,DWORD PTR [ebp-0x48]
  414b43:	lea    ecx,[edx+ecx*1+0x241fcdf]
  414b4a:	mov    DWORD PTR [ebp-0x48],ecx
  414b4d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b50:	mov    edx,0xfa5e1528
  414b55:	sub    edx,ecx
  414b57:	add    edx,DWORD PTR [ebp-0x44]
  414b5a:	mov    DWORD PTR [ebp-0x44],edx
  414b5d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b60:	xor    ecx,eax
  414b62:	add    ecx,esi
  414b64:	jne    0x414ae9
  414b6a:	jmp    0x41b697
  414b6f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b72:	mov    edx,DWORD PTR [ebp-0x8]
  414b75:	xor    ecx,eax
  414b77:	jmp    0x416f00
  414b7c:	repnz mov esi,esp
  414b7f:	repz add BYTE PTR [esi+eiz*8-0x19361778],0xd3
  414b88:	jge    0x414b0e
  414b8a:	cmp    BYTE PTR [ebp-0x7c7d9801],ch
  414b90:	pop    ss
  414b91:	pop    esp
  414b92:	add    DWORD PTR [ebx-0x2e080301],0xffffffbf
  414b99:	sub    dl,BYTE PTR [esi]
  414b9b:	cwde   
  414b9c:	dec    ebx
  414b9d:	outs   dx,DWORD PTR ds:[esi]
  414b9e:	dec    ebx
  414b9f:	push   0xffffffd0
  414ba1:	jns    0x414b8f
  414ba3:	and    eax,0x4a5ee4b
  414ba8:	inc    ecx
  414ba9:	and    eax,0xd3db844b
  414bae:	sahf   
  414baf:	scas   eax,DWORD PTR es:[edi]
  414bb0:	nop
  414bb1:	js     0x414b44
  414bb3:	push   eax
  414bb4:	lahf   
  414bb5:	inc    edx
  414bb6:	jmp    0xf1a2:0x9e952b98
  414bbd:	inc    edx
  414bbe:	push   cs
  414bbf:	pop    ss
  414bc0:	mov    ah,0x3f
  414bc2:	xor    eax,0xace3c016
  414bc7:	pushf  
  414bc8:	pop    edi
  414bc9:	(bad)  
  414bca:	outs   dx,DWORD PTR ds:[esi]
  414bcb:	stos   BYTE PTR es:[edi],al
  414bcc:	fidivr DWORD PTR [eax-0x3a7c2ad2]
  414bd2:	adc    ch,ch
  414bd4:	repnz and bl,bl
  414bd7:	mov    ecx,0xa81e41ae
  414bdc:	push   esi
  414bdd:	jns    0x414c14
  414bdf:	jecxz  0x414b6c
  414be1:	xchg   esi,eax
  414be2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414be3:	mov    ah,0x1a
  414be5:	or     DWORD PTR [edi+edx*2+0x7a],ebp
  414be9:	cmp    eax,0xdc99abf2
  414bee:	pushf  
  414bef:	into   
  414bf0:	cmp    DWORD PTR [ebp-0x27a07930],0x5c
  414bf7:	inc    ebx
  414bf8:	in     al,dx
  414bf9:	ins    DWORD PTR es:[edi],dx
  414bfa:	cmp    al,0x36
  414bfc:	ror    BYTE PTR [ecx],1
  414bfe:	cs idiv esi
  414c01:	jle    0x414c5d
  414c03:	fsubp  st(6),st
  414c05:	or     BYTE PTR [edi+ecx*2],0x8b
  414c09:	pop    esp
  414c0a:	out    dx,eax
  414c0b:	lock mov dh,0x25
  414c0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c0f:	pop    edi
  414c10:	mov    esi,0x876ab9cc
  414c15:	dec    eax
  414c16:	xor    BYTE PTR [esi-0x47],dl
  414c19:	popf   
  414c1a:	adc    dl,dl
  414c1c:	mov    dh,dh
  414c1e:	ret    0x8684
  414c21:	rcl    DWORD PTR [esi+0x44456c23],cl
  414c27:	fldenv [eax+0x7b26e0ba]
  414c2d:	das    
  414c2e:	mov    ah,0xdf
  414c30:	cld    
  414c31:	in     eax,0x79
  414c33:	pop    edx
  414c34:	dec    BYTE PTR [eax+ebx*2]
  414c37:	jge    0x414c94
  414c39:	retf   
  414c3a:	jb     0x414c91
  414c3c:	jo     0x414c10
  414c3e:	xchg   ecx,eax
  414c3f:	xchg   BYTE PTR [esi+0x59836f9f],al
  414c45:	cmp    DWORD PTR [edi+0x17],0xfffffffc
  414c49:	repz leave 
  414c4b:	jge    0x414c5c
  414c4d:	ja     0x414ca6
  414c4f:	sub    DWORD PTR [esi-0x64],edi
  414c52:	scas   al,BYTE PTR es:[edi]
  414c53:	xchg   edi,eax
  414c54:	scas   eax,DWORD PTR es:[edi]
  414c55:	dec    edi
  414c56:	xchg   edi,eax
  414c57:	rol    BYTE PTR [edx-0x1b],0x2f
  414c5b:	dec    eax
  414c5c:	add    al,0x4
  414c5e:	stos   BYTE PTR es:[edi],al
  414c5f:	daa    
  414c60:	push   edx
  414c61:	loope  0x414bf6
  414c63:	cmp    edi,DWORD PTR [esi+0x66]
  414c66:	jle    0x414bf7
  414c68:	jl     0x414c60
  414c6a:	jns    0x414c44
  414c6c:	cmc    
  414c6d:	shr    BYTE PTR [edx-0x4],cl
  414c70:	cmp    BYTE PTR [ecx],al
  414c72:	mov    al,ds:0x61f5a6f1
  414c77:	mov    BYTE PTR [ebp-0x1e1977fd],0xcb
  414c7e:	daa    
  414c7f:	add    DWORD PTR [edx+0x3],ebx
  414c82:	pop    ss
  414c83:	out    0xdd,eax
  414c85:	sbb    eax,ebx
  414c87:	std    
  414c88:	bound  ebp,QWORD PTR [esi]
  414c8a:	inc    eax
  414c8b:	pop    DWORD PTR [ebp-0x1df6ced0]
  414c91:	push   ecx
  414c92:	xor    al,ch
  414c94:	out    dx,al
  414c95:	push   ebx
  414c96:	aaa    
  414c97:	outs   dx,DWORD PTR ds:[esi]
  414c98:	iret   
  414c99:	mov    edi,ss
  414c9b:	imul   ecx,DWORD PTR [edi+0xf],0x8d993686
  414ca2:	iret   
  414ca3:	mov    ebx,0x366eb39d
  414ca8:	add    ch,BYTE PTR [ecx]
  414caa:	cli    
  414cab:	ret    0xbf16
  414cae:	pop    ebx
  414caf:	loopne 0x414c98
  414cb1:	loop   0x414c39
  414cb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cb4:	out    dx,al
  414cb5:	sbb    eax,0x2c02cdf4
  414cba:	imul   ebx,DWORD PTR [ebp-0x301027f4],0x40c22a74
  414cc4:	mov    dl,0x18
  414cc6:	jnp    0x414c6b
  414cc8:	push   ecx
  414cc9:	or     al,0xd1
  414ccb:	rep lods eax,DWORD PTR ds:[esi]
  414ccd:	sub    ch,al
  414ccf:	push   ebx
  414cd0:	shl    BYTE PTR [ecx],1
  414cd2:	fiadd  DWORD PTR [edi-0x54]
  414cd5:	popa   
  414cd6:	retf   0x5b91
  414cd9:	lahf   
  414cda:	pusha  
  414cdb:	sub    al,0x9
  414cdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cde:	mov    dh,0x36
  414ce0:	pop    ebx
  414ce1:	bound  ebp,QWORD PTR ds:0xd1f143b1
  414ce7:	sub    al,0x76
  414ce9:	repnz jmp FWORD PTR [esi]
  414cec:	stos   BYTE PTR es:[edi],al
  414ced:	jns    0x414d6d
  414cef:	mov    edx,0x2a7902b0
  414cf4:	mov    esi,0x50389024
  414cf9:	test   eax,0x9fde03a4
  414cfe:	and    ebp,DWORD PTR [edx-0x3a]
  414d01:	mov    eax,0x87708283
  414d06:	mov    DWORD PTR [ebp+0x3b],esi
  414d09:	dec    esp
  414d0a:	xchg   esi,eax
  414d0b:	and    ebx,DWORD PTR [ecx]
  414d0d:	jg     0x414d56
  414d0f:	std    
  414d10:	add    ecx,ebx
  414d12:	lock push ss
  414d14:	xchg   esp,eax
  414d15:	mov    edi,0x67f4a53b
  414d1a:	sbb    BYTE PTR [ebx-0x73],dl
  414d1d:	mul    bh
  414d1f:	jmp    0x414cf4
  414d21:	mov    ss,WORD PTR [ebx]
  414d23:	data16 jo 0x414d89
  414d26:	sbb    ebp,DWORD PTR [eax]
  414d28:	in     eax,dx
  414d29:	jp     0x414d79
  414d2b:	repnz dec ebx
  414d2d:	jbe    0x414cc0
  414d2f:	enter  0x657d,0x79
  414d33:	stos   BYTE PTR es:[edi],al
  414d34:	inc    esi
  414d35:	lods   eax,DWORD PTR ds:[esi]
  414d36:	mov    bl,0x11
  414d38:	sahf   
  414d39:	dec    esi
  414d3a:	jecxz  0x414d5c
  414d3c:	mov    DWORD PTR [ebx+eiz*4-0x2],ebp
  414d40:	inc    esp
  414d41:	cmp    ebp,DWORD PTR [ebx+esi*8+0x5f]
  414d45:	pop    ebx
  414d46:	cmp    al,0x6f
  414d48:	push   ecx
  414d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d4a:	jmp    0x81a1:0x5f09b414
  414d51:	inc    ecx
  414d52:	xchg   esi,eax
  414d53:	cmp    BYTE PTR [edi+0x45],0x62
  414d57:	mov    eax,ds:0xa59ea842
  414d5c:	pop    edi
  414d5d:	push   ebp
  414d5e:	add    al,0xbb
  414d60:	sbb    cl,BYTE PTR [ecx-0x6b0a8664]
  414d66:	repnz sub dl,BYTE PTR [eax+0x3a]
  414d6a:	movsx  ecx,BYTE PTR [ecx]
  414d6d:	mov    DWORD PTR [esi],eax
  414d6f:	jno    0x414d5d
  414d71:	call   0xcc7afcda
  414d76:	stos   BYTE PTR es:[edi],al
  414d77:	sub    eax,ecx
  414d79:	push   cs
  414d7a:	mov    ecx,0x636b3797
  414d7f:	cmp    al,0xc2
  414d81:	dec    esp
  414d82:	daa    
  414d83:	xor    eax,DWORD PTR [esi]
  414d85:	mov    ds:0xbdb7df9,eax
  414d8a:	mov    BYTE PTR [ebp+0x2e],bl
  414d8d:	jmp    0x4bf6963d
  414d92:	jno    0x414d3b
  414d94:	mov    cl,0x74
  414d96:	xor    DWORD PTR [esi-0x29],esp
  414d99:	(bad)  
  414d9a:	push   edx
  414d9b:	sbb    BYTE PTR [ebx-0x4],ah
  414d9e:	shl    BYTE PTR [edi-0x7d],0x50
  414da2:	mov    al,ah
  414da4:	push   0x13fa081c
  414da9:	mov    BYTE PTR [edi-0x3b164f56],cl
  414daf:	xchg   ecx,eax
  414db0:	pop    edi
  414db1:	jnp    0x414d6a
  414db3:	call   0x9ebe:0xbcef55b5
  414dba:	(bad)  
  414dbc:	test   DWORD PTR [eax],ebx
  414dbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dbf:	pushf  
  414dc0:	mov    ecx,0x9a5a8766
  414dc5:	lods   al,BYTE PTR ds:[esi]
  414dc6:	icebp  
  414dc7:	jmp    0x3108:0xdd331f48
  414dce:	jle    0x414ddf
  414dd0:	fsub   st(2),st
  414dd2:	cmp    BYTE PTR [esi-0x44a89dae],0x6a
  414dd9:	stos   BYTE PTR es:[edi],al
  414dda:	adc    edx,0xffffffd5
  414ddd:	add    DWORD PTR [edi+0x3c],ebp
  414de0:	and    eax,0xc167a7d3
  414de5:	add    bl,0x4a
  414de8:	jbe    0x414da1
  414dea:	das    
  414deb:	xchg   esi,eax
  414dec:	dec    eax
  414ded:	out    0x55,eax
  414def:	cmp    eax,0x83b16501
  414df4:	ret    
  414df5:	in     al,dx
  414df6:	cld    
  414df7:	inc    ebx
  414df8:	pusha  
  414df9:	sbb    ah,BYTE PTR [eax-0x5b]
  414dfc:	sbb    al,0x57
  414dfe:	inc    ebp
  414dff:	sahf   
  414e00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e01:	mov    dh,0x43
  414e03:	clc    
  414e04:	push   ebp
  414e05:	push   edi
  414e06:	xor    al,0x52
  414e08:	pop    ds
  414e09:	add    eax,0x2f97e16e
  414e0e:	ror    esp,0x26
  414e11:	xor    eax,0x67cb4436
  414e16:	imul   esp,DWORD PTR [eax+ecx*2],0x697c115a
  414e1d:	and    al,0xf
  414e1f:	jl     0x414e77
  414e21:	cli    
  414e22:	mov    bh,0xa9
  414e24:	sub    edi,DWORD PTR [esi-0x14]
  414e27:	popa   
  414e28:	mov    dh,0xa4
  414e2a:	xor    al,0x57
  414e2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e2d:	xor    al,0x2e
  414e2f:	jno    0x414e0f
  414e31:	lock mov edi,0xa4ea7e2c
  414e37:	push   ss
  414e38:	jnp    0x414e92
  414e3a:	sbb    edx,esp
  414e3c:	aaa    
  414e3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e3e:	cmp    ebp,DWORD PTR [ebx]
  414e40:	ret    0x81dd
  414e43:	ror    DWORD PTR [ebx-0x22ff2219],cl
  414e49:	fcmovb st,st(5)
  414e4b:	mov    ds:0x6a67d81a,al
  414e50:	rcl    DWORD PTR [eax+0x5d5b2cc],cl
  414e56:	pop    eax
  414e57:	scas   eax,DWORD PTR es:[edi]
  414e58:	dec    ebx
  414e59:	sbb    eax,0xb2cced80
  414e5e:	pop    ebx
  414e5f:	repnz mov ebp,0xaccf988a
  414e65:	loope  0x414e52
  414e67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e68:	pop    ss
  414e69:	pop    esi
  414e6a:	sbb    eax,0x55a213db
  414e6f:	loopne 0x414ee9
  414e71:	adc    eax,0xf8952255
  414e76:	imul   edi,DWORD PTR [ebp-0x74b7c514],0x33
  414e7d:	jp     0x414e81
  414e7f:	(bad)  
  414e80:	daa    
  414e81:	rol    DWORD PTR [ecx-0x272f18e3],0xce
  414e88:	fmul   st(5),st
  414e8a:	sar    BYTE PTR ds:0x233d057f,0x2a
  414e91:	mov    bl,0xbc
  414e93:	cmc    
  414e94:	lock inc eax
  414e96:	cmp    eax,0x2490c24c
  414e9b:	pop    ecx
  414e9c:	push   ebx
  414e9d:	mov    bl,0x75
  414e9f:	adc    ah,BYTE PTR [eax-0x62]
  414ea2:	shr    DWORD PTR [edi+0x24acc75d],1
  414ea8:	ja     0x414e74
  414eaa:	lea    ecx,[esi]
  414eac:	(bad)
  414eaf:	(bad)  
  414eb0:	fsub   DWORD PTR [eax]
  414eb2:	hlt    
  414eb3:	dec    esi
  414eb4:	push   ds
  414eb5:	inc    DWORD PTR [ebx]
  414eb7:	xchg   ecx,eax
  414eb8:	sbb    dh,BYTE PTR [edi]
  414eba:	ds pushf 
  414ebc:	cmp    esp,DWORD PTR [ebp-0x15]
  414ebf:	push   ebx
  414ec0:	mov    ch,0xfb
  414ec2:	and    ebp,DWORD PTR [ebx+0x2591cb48]
  414ec8:	pop    esi
  414ec9:	imul   ecx,ebp,0x8f852603
  414ecf:	popf   
  414ed0:	pop    ds
  414ed1:	jle    0x414ef0
  414ed3:	inc    esi
  414ed4:	push   ebx
  414ed5:	and    ebp,DWORD PTR [esi+ebx*4]
  414ed8:	and    BYTE PTR [edx],bh
  414eda:	add    cl,ch
  414edc:	loopne 0x414eaa
  414ede:	mov    ebx,0xe2b4efe7
  414ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ee4:	popa   
  414ee5:	gs ss jns 0x414f3c
  414ee9:	pop    esi
  414eea:	leave  
  414eeb:	fwait
  414eec:	xlat   BYTE PTR ds:[ebx]
  414eed:	or     esp,0x72e0975e
  414ef3:	mov    dl,0xa6
  414ef5:	inc    ebx
  414ef6:	jp     0x414f09
  414ef8:	sbb    eax,0x392cef94
  414efe:	adc    dh,BYTE PTR [ebp-0xc]
  414f01:	repnz hlt 
  414f03:	ins    DWORD PTR es:[edi],dx
  414f04:	fcmovb st,st(6)
  414f06:	mov    bh,BYTE PTR [eax+0x7f511691]
  414f0c:	jl     0x414ed9
  414f0e:	in     al,0xbd
  414f10:	in     al,dx
  414f11:	sbb    al,0x25
  414f13:	je     0x414ea5
  414f15:	es or  al,0x1d
  414f18:	fwait
  414f19:	(bad)  
  414f1a:	cmp    eax,0x46496895
  414f1f:	xor    eax,0xc616975c
  414f24:	int3   
  414f25:	ja     0x414f6a
  414f27:	inc    eax
  414f28:	dec    DWORD PTR [eax+0x289666ef]
  414f2e:	and    DWORD PTR [ecx-0x498c988a],edx
  414f34:	pop    ebp
  414f35:	loop   0x414f8c
  414f37:	iret   
  414f38:	test   eax,0x76c47b12
  414f3d:	sub    BYTE PTR [ebx],ah
  414f3f:	pop    edx
  414f40:	enter  0xe5b6,0x6a
  414f44:	in     al,0xad
  414f46:	inc    esp
  414f47:	push   0x6a
  414f49:	or     ebx,DWORD PTR [ebx-0xc]
  414f4c:	push   ecx
  414f4d:	repnz arpl sp,di
  414f50:	adc    eax,0x5a791ba0
  414f55:	sub    eax,0xa26d670c
  414f5a:	out    0xfc,eax
  414f5c:	or     al,0x5
  414f5e:	aad    0x35
  414f60:	mov    ds:0x68d6fbb4,eax
  414f65:	cmp    eax,0xc38b726c
  414f6a:	into   
  414f6b:	mov    cl,0x8e
  414f6d:	ja     0x414f71
  414f6f:	punpcklwd mm4,mm1
  414f72:	mov    WORD PTR [esi],?
  414f74:	or     ebx,esp
  414f76:	push   ebp
  414f77:	xchg   BYTE PTR [ecx-0x7b],ch
  414f7a:	iret   
  414f7b:	push   0xe3a50904
  414f80:	jae    0x414f91
  414f82:	mov    fs,WORD PTR [edx]
  414f84:	mov    ebp,0x97dda27
  414f89:	xor    eax,0xdef395e8
  414f8e:	cli    
  414f8f:	aas    
  414f90:	xchg   edx,eax
  414f91:	mov    DWORD PTR [edi+0x5d68b4cc],0x363b3897
  414f9b:	push   edx
  414f9c:	test   ch,0xa1
  414f9f:	jns    0x414f3e
  414fa1:	push   ss
  414fa2:	aas    
  414fa3:	popa   
  414fa4:	cmp    DWORD PTR [edx],ebp
  414fa6:	mov    esp,0x52eaface
  414fab:	cmp    al,0x5e
  414fad:	pop    ecx
  414fae:	or     bl,BYTE PTR [ebx-0x35]
  414fb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fb2:	ret    0x810f
  414fb5:	and    bh,BYTE PTR [edx-0x124cbfa1]
  414fbb:	ja     0x414fc1
  414fbd:	and    eax,0xdd90b87
  414fc2:	lods   eax,DWORD PTR ds:[esi]
  414fc3:	test   eax,0x409a8551
  414fc8:	aas    
  414fc9:	fstp   QWORD PTR [eax+eiz*1]
  414fcc:	aas    
  414fcd:	mov    ch,0x95
  414fcf:	inc    ebx
  414fd0:	xchg   eax,ecx
  414fd2:	into   
  414fd3:	xchg   esp,eax
  414fd4:	dec    edi
  414fd5:	sbb    bh,dh
  414fd7:	aas    
  414fd8:	daa    
  414fd9:	stos   WORD PTR es:[edi],ax
  414fdb:	retf   0xd88
  414fde:	or     cl,BYTE PTR [ecx+0x1e]
  414fe1:	ins    BYTE PTR es:[edi],dx
  414fe2:	push   0xffffff9a
  414fe4:	sbb    al,ch
  414fe6:	pop    eax
  414fe7:	mov    ebp,DWORD PTR [ebx+edi*1]
  414fea:	loopne 0x414fab
  414fec:	cs sub al,0xd0
  414fef:	bound  esp,QWORD PTR [edi-0x3fbc9d44]
  414ff5:	pop    esp
  414ff6:	imul   ebx,DWORD PTR [edi],0x1eee99e
  414ffc:	sar    BYTE PTR [esi],1
  414ffe:	push   ecx
  414fff:	push   eax
  415000:	neg    DWORD PTR [ecx]
  415002:	cmp    edx,DWORD PTR ds:0x15672ccf
  415008:	test   edx,ebx
  41500a:	sbb    ah,bh
  41500c:	xor    eax,0xdd7edc2d
  415011:	xchg   DWORD PTR [esi+0x18],ebp
  415014:	test   BYTE PTR [ecx-0x2f848275],ch
  41501a:	mov    dh,0xec
  41501d:	out    0x13,eax
  41501f:	pop    es
  415020:	inc    esp
  415021:	sub    cl,ch
  415023:	push   cs
  415024:	retf   
  415025:	js     0x414ff2
  415027:	lea    edi,[edi]
  415029:	in     eax,dx
  41502a:	push   edx
  41502b:	push   edx
  41502c:	inc    edx
  41502d:	or     dl,ch
  41502f:	jl     0x414fb4
  415031:	push   eax
  415032:	adc    eax,DWORD PTR [edx-0x54]
  415035:	bound  eax,QWORD PTR [ecx+0x6d]
  415038:	jle    0x41500a
  41503a:	add    edi,esp
  41503c:	pop    edi
  41503d:	xchg   esp,eax
  41503e:	xchg   DWORD PTR [esi+edi*1],ebx
  415041:	rol    ah,0x5f
  415044:	ffreep st(1)
  415046:	aad    0xed
  415048:	mov    edi,0x1d34331
  41504d:	test   eax,esp
  41504f:	(bad)  
  415050:	mov    eax,0x35ecc68
  415055:	fwait
  415056:	sar    BYTE PTR [edi+edi*8],0x31
  41505a:	fdivp  st(2),st
  41505c:	add    al,0x10
  41505e:	retf   
  41505f:	loop   0x41504a
  415061:	fs add BYTE PTR gs:[esi-0x7f],0x22
  415067:	jne    0x4150a9
  415069:	push   eax
  41506a:	in     eax,dx
  41506b:	aad    0xfe
  41506d:	outs   dx,BYTE PTR ss:[esi]
  41506f:	lahf   
  415070:	and    ebp,eax
  415072:	aas    
  415073:	add    eax,0xc2724e0e
  415078:	push   es
  415079:	mul    BYTE PTR [ebp-0x77]
  41507c:	and    DWORD PTR [ecx-0x724322b6],0x19792dcf
  415086:	cmp    ch,ch
  415088:	pop    esp
  415089:	inc    eax
  41508a:	or     esi,DWORD PTR ds:[eax]
  41508d:	push   0x30
  41508f:	jno    0x4150a9
  415091:	add    al,BYTE PTR [eax+0x45569cab]
  415097:	pop    edi
  415098:	call   0x32c5:0x6aae8282
  41509f:	jmp    0x25b94844
  4150a4:	lods   al,BYTE PTR ds:[esi]
  4150a5:	pop    ds
  4150a6:	pop    edx
  4150a7:	out    dx,al
  4150a8:	xor    BYTE PTR [esi-0x6b59ee3a],al
  4150ae:	sbb    eax,0x1f14e7db
  4150b3:	push   es
  4150b4:	addr16 int3 
  4150b6:	xor    edi,DWORD PTR [ecx+0x665c23ad]
  4150bc:	mov    ds:0x8d70aca5,eax
  4150c1:	popa   
  4150c2:	xor    DWORD PTR ds:0x4e2260aa,esi
  4150c8:	je     0x41506d
  4150ca:	xchg   edi,eax
  4150cb:	sub    BYTE PTR ds:0x4c957418,bl
  4150d1:	std    
  4150d2:	mov    eax,0x31babf8b
  4150d7:	imul   eax,DWORD PTR [ebx],0x38e805bd
  4150dd:	and    BYTE PTR [edx+eiz*1-0x12],bh
  4150e1:	lahf   
  4150e2:	in     al,0xeb
  4150e4:	and    eax,0xe1e8fae
  4150e9:	dec    ebx
  4150ea:	stc    
  4150eb:	lods   eax,DWORD PTR ds:[esi]
  4150ec:	lds    edx,FWORD PTR [ebp+eax*8-0x21]
  4150f0:	push   ss
  4150f1:	(bad)  
  4150f3:	and    edx,DWORD PTR [ecx-0xc]
  4150f6:	xchg   BYTE PTR [edx],al
  4150f8:	fistp  QWORD PTR [ecx]
  4150fa:	fldenv [esi]
  4150fc:	ja     0x41511c
  4150fe:	add    DWORD PTR [ecx],edi
  415100:	nop
  415101:	lea    edx,[edx+0x12e1f8aa]
  415107:	les    ebx,FWORD PTR [ecx]
  415109:	(bad)  
  41510a:	fadd   QWORD PTR [eax]
  41510c:	fmul   DWORD PTR [ecx]
  41510e:	cmp    cl,al
  415110:	adc    edx,DWORD PTR [esi+0xa299d12]
  415116:	pop    ds
  415117:	pop    edi
  415118:	pusha  
  415119:	stos   DWORD PTR es:[edi],eax
  41511a:	inc    esp
  41511b:	cmp    ebx,esi
  41511d:	and    bl,cl
  41511f:	add    eax,0x6ff37046
  415124:	sbb    al,0x95
  415126:	ja     0x41513e
  415128:	mov    BYTE PTR [eax],dl
  41512a:	jae    0x415107
  41512c:	in     eax,dx
  41512d:	in     al,dx
  41512e:	push   edx
  41512f:	fmul   QWORD PTR [edx-0x4a]
  415132:	sub    edx,edx
  415134:	add    ebx,ebx
  415136:	shr    ecx,0x3
  415139:	sub    eax,0xf1fdc18e
  41513e:	in     al,0xf3
  415140:	mov    ch,0x9c
  415142:	xchg   ebp,eax
  415143:	out    0xc8,al
  415145:	test   al,0x3a
  415147:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415148:	inc    ecx
  415149:	xor    DWORD PTR [eax+0x59],ebp
  41514c:	mov    eax,ds:0x5ad0bd65
  415151:	sub    dl,BYTE PTR [esi+edx*4-0x73]
  415155:	xor    bh,BYTE PTR [eax+0x51255a26]
  41515b:	in     al,dx
  41515c:	sub    eax,0x6daa9fb0
  415161:	sahf   
  415162:	bound  ebx,QWORD PTR [esi]
  415164:	adc    DWORD PTR [edi+0x74],ecx
  415167:	dec    eax
  415168:	stos   BYTE PTR es:[edi],al
  415169:	inc    edx
  41516a:	imul   DWORD PTR [eax+eiz*1-0x27724149]
  415171:	loopne 0x41517a
  415173:	mov    ebx,0xa0697490
  415178:	inc    esp
  415179:	jmp    0x4151d0
  41517b:	pop    esi
  41517c:	mov    al,0x9f
  41517e:	fwait
  41517f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415180:	mov    ds:0x7da656ff,eax
  415185:	pop    ecx
  415186:	push   eax
  415187:	sub    DWORD PTR [ebx+0x59854e45],edx
  41518d:	sbb    dh,BYTE PTR [esi+0x5a]
  415190:	jnp    0x4151e5
  415192:	aad    0x2a
  415194:	fwait
  415195:	pushf  
  415196:	retf   
  415197:	sbb    ebx,DWORD PTR [eax]
  415199:	cs aad 0xf4
  41519c:	in     eax,0xef
  41519e:	lods   al,BYTE PTR ds:[esi]
  41519f:	mov    ch,0xa7
  4151a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151a2:	push   es
  4151a3:	cmp    al,0x50
  4151a5:	test   al,0x5e
  4151a7:	pop    ecx
  4151a8:	cmp    DWORD PTR [eax-0x520dd3ba],edi
  4151ae:	and    bh,0xa8
  4151b1:	dec    esp
  4151b2:	mov    al,0xfb
  4151b4:	scas   eax,DWORD PTR es:[edi]
  4151b5:	mov    BYTE PTR [ebx+ebx*8+0x5b23fe19],cl
  4151bc:	adc    al,BYTE PTR [ecx]
  4151be:	ror    esi,0xef
  4151c1:	fisubr WORD PTR [esi+0x58]
  4151c4:	stos   BYTE PTR es:[edi],al
  4151c5:	shl    dh,0x71
  4151c8:	pop    edx
  4151c9:	and    eax,0x1db42b0a
  4151ce:	mov    ch,0xc3
  4151d0:	(bad)  
  4151d1:	sahf   
  4151d2:	add    DWORD PTR [edi+ecx*1],esi
  4151d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151d6:	dec    ebp
  4151d7:	(bad)  
  4151d8:	jmp    DWORD PTR [esi+0x4d96048a]
  4151de:	into   
  4151df:	add    ebx,DWORD PTR [esi]
  4151e1:	test   DWORD PTR [ebx-0x4fb60420],0x98871968
  4151eb:	pop    esp
  4151ec:	or     DWORD PTR [edi-0x4f],edi
  4151ef:	inc    ebp
  4151f0:	stos   DWORD PTR es:[edi],eax
  4151f1:	sub    DWORD PTR [eax],ebp
  4151f3:	sub    eax,0xb9fd8593
  4151f8:	lods   al,BYTE PTR ds:[esi]
  4151f9:	daa    
  4151fa:	cmp    ecx,DWORD PTR [edi+0x71]
  4151fd:	xchg   ebp,eax
  4151fe:	out    0x54,eax
  415200:	pop    esi
  415201:	xchg   esi,eax
  415202:	jle    0x41523e
  415204:	sar    DWORD PTR [ebp-0x74],1
  415207:	inc    ebx
  415208:	inc    edx
  415209:	fld    st(2)
  41520b:	jo     0x415217
  41520d:	jb     0x415238
  41520f:	xor    eax,ecx
  415211:	fcomp  DWORD PTR [esi+0x53f582f2]
  415217:	retf   0x7381
  41521a:	and    ecx,eax
  41521c:	pop    ecx
  41521d:	or     ch,BYTE PTR [esi]
  41521f:	add    al,0xce
  415221:	mov    esi,0x8e81f66
  415226:	sub    ah,BYTE PTR [edx+eiz*8-0x26]
  41522a:	out    dx,eax
  41522b:	cs cld 
  41522d:	push   ss
  41522e:	clc    
  41522f:	inc    esi
  415230:	xor    eax,0xa561e549
  415235:	aas    
  415236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415237:	xchg   esi,eax
  415238:	push   ebp
  415239:	fisttp WORD PTR [esi]
  41523b:	outs   dx,DWORD PTR ds:[esi]
  41523c:	inc    eax
  41523d:	cmc    
  41523e:	pop    edi
  41523f:	mov    cl,0xab
  415241:	sub    al,0x9c
  415243:	pop    ebx
  415244:	mov    eax,ds:0xe6d6054c
  415249:	and    ah,BYTE PTR [ecx]
  41524b:	jmp    DWORD PTR [edx]
  41524d:	inc    ebp
  41524e:	inc    eax
  41524f:	add    BYTE PTR [ebp+0x71],dh
  415252:	jb     0x41522e
  415254:	je     0x415283
  415256:	ja     0x415250
  415258:	inc    esp
  415259:	push   edi
  41525a:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41525c:	cmp    eax,0xa9b6304d
  415261:	mov    ds:0x6f5bfe53,al
  415266:	repz dec esi
  415268:	arpl   di,bp
  41526a:	mov    al,0xc5
  41526c:	loope  0x415278
  41526e:	xor    DWORD PTR [bx+si-0x6c],edx
  415272:	int3   
  415273:	not    edi
  415275:	push   ecx
  415276:	sbb    BYTE PTR [edx-0x17],0xbd
  41527a:	es std 
  41527c:	push   ebx
  41527d:	push   0xffffffbb
  41527f:	loope  0x4152fa
  415281:	adc    al,0xc7
  415283:	ins    BYTE PTR es:[edi],dx
  415284:	rcl    DWORD PTR [edi+0x1f],0x9a
  415288:	lods   eax,DWORD PTR ds:[esi]
  415289:	mov    ah,BYTE PTR [ebp+0x9ec29f7]
  41528f:	clc    
  415290:	inc    esp
  415291:	xchg   BYTE PTR [eax-0xfeaa46c],al
  415297:	imul   ebx,DWORD PTR [edx+esi*4-0x19],0xffffffd3
  41529c:	out    dx,eax
  41529d:	sub    al,0x66
  41529f:	clc    
  4152a0:	cmp    eax,0x3ace15fa
  4152a5:	(bad)  [eax+eiz*1-0x4c]
  4152a9:	fwait
  4152aa:	repz cmc 
  4152ac:	(bad)  
  4152ad:	xor    eax,0x6aa5c062
  4152b2:	push   ds
  4152b3:	sub    al,0xa
  4152b5:	jne    0x4152c4
  4152b7:	adc    al,0xa
  4152b9:	dec    edi
  4152ba:	stos   DWORD PTR es:[edi],eax
  4152bb:	(bad)  [esi-0xf58eae2]
  4152c1:	fstp   QWORD PTR [edi]
  4152c3:	ins    DWORD PTR es:[edi],dx
  4152c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152c5:	mov    esi,0xbfc6556a
  4152ca:	stos   BYTE PTR es:[edi],al
  4152cb:	mov    edx,0xc936bbc9
  4152d0:	fstp   TBYTE PTR [edx]
  4152d2:	add    al,BYTE PTR [eax+ecx*1]
  4152d5:	out    0xbc,eax
  4152d7:	sbb    BYTE PTR [ebx-0x6],cl
  4152da:	jge    0x415276
  4152dc:	pop    esi
  4152dd:	jmp    0x2e690239
  4152e2:	retf   0x4529
  4152e5:	inc    esi
  4152e6:	xchg   ebx,eax
  4152e7:	(bad)  
  4152e8:	sub    BYTE PTR [edi-0xc],al
  4152eb:	xchg   esp,eax
  4152ec:	or     al,0xc6
  4152ee:	push   edx
  4152ef:	sbb    eax,0x7e787ce0
  4152f4:	sbb    eax,0x2146d7dd
  4152f9:	add    DWORD PTR [eax],edx
  4152fb:	mov    al,ds:0x2d1c11ad
  415300:	mov    ebx,ecx
  415302:	ret    
  415303:	scas   eax,DWORD PTR es:[edi]
  415304:	adc    edi,ebp
  415306:	push   edi
  415307:	pusha  
  415308:	int3   
  415309:	sbb    eax,0x1c09c202
  41530e:	cs (bad) 
  415310:	adc    BYTE PTR [eax+0x6b],dl
  415313:	sub    eax,0x602a3c33
  415318:	fincstp 
  41531a:	mov    edi,0xaeabd447
  41531f:	test   DWORD PTR [eax-0x2aa089f4],0x45daf1da
  415329:	sbb    eax,DWORD PTR [eax-0x31594384]
  41532f:	mov    ebp,0x672ef8ac
  415334:	jno    0x415312
  415336:	lock shr DWORD PTR [eax],0xca
  41533a:	mov    bh,0xf4
  41533c:	add    al,0x40
  41533e:	nop
  41533f:	test   eax,0xe2f6cf22
  415344:	mov    ch,0xd2
  415346:	push   edx
  415347:	je     0x41531a
  415349:	leave  
  41534a:	sub    al,0x33
  41534c:	stc    
  41534d:	dec    eax
  41534e:	or     eax,0xa9be47c2
  415353:	cmp    eax,0x2cfb8713
  415358:	test   al,0xbc
  41535a:	add    dl,BYTE PTR [esi]
  41535c:	mov    esi,edi
  41535e:	mov    ebx,0xefaf2fcd
  415363:	jmp    DWORD PTR [edx+eax*2]
  415366:	dec    esi
  415367:	dec    eax
  415368:	push   esi
  415369:	jno    0x4153b8
  41536b:	add    BYTE PTR [edi-0x43245c83],ah
  415371:	lods   al,BYTE PTR ds:[esi]
  415372:	clc    
  415373:	adc    al,BYTE PTR [ebp-0x35]
  415376:	leave  
  415377:	push   ss
  415378:	dec    ecx
  415379:	ins    BYTE PTR es:[edi],dx
  41537a:	pushf  
  41537b:	sbb    al,0x41
  41537d:	scas   al,BYTE PTR es:[edi]
  41537e:	and    edx,DWORD PTR [ebx+0x29]
  415381:	jecxz  0x415352
  415383:	lods   al,BYTE PTR ds:[esi]
  415384:	pop    ebp
  415385:	add    bl,BYTE PTR [esp+edx*4]
  415388:	xor    edi,DWORD PTR es:[edi]
  41538b:	retf   0x92fc
  41538e:	mov    dl,0x1d
  415390:	xchg   edx,eax
  415391:	jp     0x415343
  415393:	sbb    esp,DWORD PTR ds:[esi]
  415396:	jge    0x415376
  415398:	dec    esp
  415399:	sub    DWORD PTR cs:[esi],0x3eb5a31
  4153a0:	mov    ecx,0x7222adf2
  4153a5:	push   esi
  4153a6:	loope  0x41534a
  4153a8:	jns    0x4153ee
  4153aa:	inc    BYTE PTR [edi+0x3e]
  4153ad:	rcr    DWORD PTR [edi+ebx*4-0x6d],0x42
  4153b2:	jnp    0x4153d4
  4153b4:	fdivr  DWORD PTR [edx]
  4153b6:	rcl    BYTE PTR [eax-0x1162a62a],cl
  4153bc:	call   0x1a35:0x6e2bf76
  4153c3:	inc    ebx
  4153c4:	std    
  4153c5:	inc    edi
  4153c6:	ret    
  4153c7:	in     al,dx
  4153c8:	addr16 clc 
  4153ca:	jmp    0x9949:0x2e36304
  4153d1:	in     al,0xf7
  4153d3:	pop    ecx
  4153d4:	jae    0x4153cd
  4153d6:	ins    DWORD PTR es:[edi],dx
  4153d7:	xor    dh,dl
  4153d9:	cmp    DWORD PTR [esi+ebp*4],edi
  4153dc:	in     al,dx
  4153dd:	je     0x415455
  4153df:	sub    dl,bh
  4153e1:	or     DWORD PTR [esi+0x6027159],ebx
  4153e7:	shrd   DWORD PTR [esi],esp,cl
  4153ea:	xchg   DWORD PTR [eax-0x2dd1581f],ecx
  4153f0:	(bad)  
  4153f1:	imul   ebp,DWORD PTR [esi],0xffffffff
  4153f4:	and    eax,esi
  4153f6:	sub    ch,cl
  4153f8:	cmp    bl,dh
  4153fa:	out    0xbc,al
  4153fc:	dec    ebx
  4153fd:	sub    DWORD PTR [edx+0xe771d69],esp
  415403:	jle    0x41542b
  415405:	lock sub DWORD PTR [ebp-0x240ebd90],ebp
  41540c:	popa   
  41540d:	dec    edi
  41540e:	dec    ecx
  41540f:	dec    ebx
  415410:	pop    edx
  415411:	stos   BYTE PTR es:[edi],al
  415412:	test   dl,dh
  415414:	push   edx
  415415:	mov    cl,BYTE PTR [esi+0x21b79fcf]
  41541b:	jmp    0xe6edbfec
  415420:	sbb    eax,0x5045f42b
  415425:	push   es
  415426:	sub    edx,DWORD PTR [esi+0x68]
  415429:	jge    0x415408
  41542b:	xchg   ebx,eax
  41542c:	sbb    eax,0x4d05f553
  415431:	lahf   
  415432:	sar    dh,0x9e
  415435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415436:	ret    0x8807
  415439:	sub    al,0x45
  41543b:	mov    bl,0xd4
  41543d:	call   0xb8db:0x25b77747
  415444:	jne    0x415425
  415446:	les    eax,FWORD PTR [edi+0x4b]
  415449:	jno    0x4153de
  41544b:	(bad)  
  41544c:	aad    0xdb
  41544e:	fisubr WORD PTR [edx+0x1428241d]
  415454:	arpl   WORD PTR [ecx],ax
  415456:	nop
  415457:	mov    ecx,0x7f006c3a
  41545c:	mov    ch,0x45
  41545e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41545f:	into   
  415460:	push   ss
  415461:	or     ecx,DWORD PTR [ebx+edx*4]
  415464:	fwait
  415465:	pop    eax
  415466:	repnz or al,0xdd
  415469:	dec    edx
  41546a:	xlat   BYTE PTR ds:[ebx]
  41546b:	inc    eax
  41546c:	les    ebp,FWORD PTR ds:0x6aa16cd0
  415472:	iret   
  415473:	pop    edi
  415474:	ror    BYTE PTR [eax+0x3db9d183],cl
  41547a:	jbe    0x4154a4
  41547c:	bound  ebx,QWORD PTR [ecx+0x1d]
  41547f:	pop    ss
  415480:	imul   edx,DWORD PTR ds:0x9a943205,0x41e652da
  41548a:	stos   DWORD PTR es:[edi],eax
  41548b:	push   eax
  41548c:	jns    0x4154f0
  41548e:	aad    0x72
  415490:	cmc    
  415491:	xchg   ecx,eax
  415492:	sub    BYTE PTR [esi],ah
  415494:	ja     0x415425
  415496:	mov    al,ds:0x98bac26c
  41549b:	imul   ebp,DWORD PTR [ecx],0x19ec06ed
  4154a1:	popa   
  4154a2:	mov    ch,dl
  4154a4:	das    
  4154a5:	stos   BYTE PTR es:[edi],al
  4154a6:	xor    esi,DWORD PTR [esi+0x39e5374c]
  4154ac:	mov    edx,0x190ad125
  4154b1:	dec    ebp
  4154b2:	lock jne 0x4154af
  4154b5:	xchg   esi,esi
  4154b7:	ins    DWORD PTR es:[edi],dx
  4154b8:	xor    al,0xb2
  4154ba:	out    dx,eax
  4154bb:	in     eax,dx
  4154bc:	(bad)  [edi-0x45]
  4154bf:	fidiv  WORD PTR [ebx]
  4154c1:	mov    al,0x48
  4154c3:	outs   dx,DWORD PTR ds:[esi]
  4154c4:	arpl   di,cx
  4154c6:	enter  0xe169,0xf9
  4154ca:	adc    eax,0xf70f9468
  4154cf:	jb     0x4154a1
  4154d1:	out    dx,al
  4154d2:	outs   dx,DWORD PTR ds:[esi]
  4154d3:	in     al,0xa9
  4154d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154d6:	mov    edx,0xbbbacc98
  4154db:	test   DWORD PTR [bp+si-0x54],0x4cb75793
  4154e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154e4:	xchg   edx,eax
  4154e5:	aas    
  4154e6:	sbb    eax,0x128c01a5
  4154eb:	dec    edx
  4154ec:	sub    al,0x4a
  4154ee:	scas   eax,DWORD PTR es:[edi]
  4154ef:	lods   eax,DWORD PTR ds:[esi]
  4154f0:	sub    BYTE PTR [edi],bl
  4154f2:	push   esp
  4154f3:	mov    esp,0x6215650e
  4154f8:	std    
  4154f9:	inc    eax
  4154fa:	loopne 0x4154e5
  4154fc:	cmc    
  4154fd:	loopne 0x4154b9
  4154ff:	jne    0x415540
  415501:	xchg   edx,eax
  415502:	mov    ds:0xd4669444,al
  415507:	pushf  
  415508:	and    DWORD PTR [esi-0x49],edx
  41550b:	(bad)  [edi+ecx*8-0x3b]
  41550f:	dec    esi
  415510:	rcr    DWORD PTR [esi-0x57a01c9f],1
  415516:	cmp    eax,edi
  415518:	repz mov al,ds:0x1c5e9c7e
  41551e:	icebp  
  41551f:	shl    DWORD PTR [ecx+0x76271ff1],cl
  415525:	fsub   DWORD PTR ds:0xade5dc73
  41552b:	sub    eax,DWORD PTR [ecx+0x31]
  41552e:	pop    ebx
  41552f:	push   edx
  415530:	jecxz  0x41551e
  415532:	xchg   ebx,eax
  415533:	pop    ecx
  415534:	sbb    eax,0xa0b01795
  415539:	aaa    
  41553a:	mov    dh,0xb5
  41553c:	mov    ch,0xbe
  41553e:	mov    ebx,0x65235c44
  415543:	mov    ds:0xb3a8cd50,al
  415548:	and    esi,DWORD PTR [esp+eax*8-0x36]
  41554c:	and    esp,DWORD PTR [ecx+0x47]
  41554f:	pop    esp
  415550:	test   DWORD PTR [eax],ebp
  415552:	fimul  WORD PTR [esp+ebx*4+0x27f23971]
  415559:	fstp   QWORD PTR ds:[edx+esi*4]
  41555d:	scas   al,BYTE PTR es:[edi]
  41555e:	mov    edi,0x8e72442f
  415563:	dec    esp
  415564:	jl     0x4154f3
  415566:	rol    BYTE PTR [ecx],cl
  415568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415569:	mov    esp,0xd7840c37
  41556e:	int3   
  41556f:	fisttp WORD PTR [edi+0x2ac50177]
  415575:	push   esi
  415576:	leave  
  415577:	xchg   esi,eax
  415578:	fcomp  QWORD PTR [esi]
  41557a:	fcom   st(1)
  41557c:	xchg   DWORD PTR [ebp+eax*1+0x22],esi
  415580:	or     BYTE PTR [ebx-0x50],ah
  415583:	lea    edi,[edi]
  415585:	cmp    eax,0x60
  415588:	shr    ch,0xbf
  41558b:	jae    0x41555d
  41558d:	ds mul cl
  415590:	mov    eax,ds:0xe0a53279
  415595:	jns    0x415560
  415597:	jmp    0x5c9e:0xdf7dd1c1
  41559e:	mov    ebp,0x2d6e9841
  4155a3:	dec    ebx
  4155a4:	imul   edx,DWORD PTR [ebx],0x29
  4155a7:	fld    QWORD PTR [ecx]
  4155a9:	and    al,dl
  4155ab:	ins    DWORD PTR es:[edi],dx
  4155ac:	rol    DWORD PTR [esi],1
  4155ae:	fsub   QWORD PTR [edi+eax*4+0x3a]
  4155b2:	sar    al,0x56
  4155b5:	sbb    eax,0xf88cd7f3
  4155ba:	xor    bl,dh
  4155bc:	shl    dl,1
  4155be:	add    ecx,DWORD PTR [esi]
  4155c0:	outs   dx,DWORD PTR ds:[esi]
  4155c1:	adc    ch,dh
  4155c3:	sbb    eax,0x3c14f2c1
  4155c8:	xor    eax,0x6a7ce39
  4155cd:	mov    edx,0xca4f2250
  4155d2:	xor    esp,ebp
  4155d4:	(bad)  
  4155d5:	imul   eax,DWORD PTR [ebp+ebp*8+0x29d63d59],0x3c7bcfbe
  4155e0:	neg    BYTE PTR [ebp-0x45]
  4155e3:	push   ss
  4155e4:	adc    eax,0x33a3c3f2
  4155e9:	mov    edx,DWORD PTR [edx+eax*4]
  4155ec:	pop    ebp
  4155ed:	in     al,dx
  4155ee:	xchg   ebx,eax
  4155ef:	cdq    
  4155f0:	test   al,0x10
  4155f2:	or     edx,edi
  4155f4:	jo     0x415613
  4155f6:	jns    0x415660
  4155f8:	aam    0x61
  4155fa:	nop
  4155fb:	std    
  4155fc:	daa    
  4155fd:	mov    dl,0x54
  4155ff:	add    ch,BYTE PTR [edi]
  415601:	mov    ch,0x70
  415603:	mov    al,0xd
  415605:	jmp    0x79c542d3
  41560a:	add    ch,BYTE PTR [esi+0x40]
  41560d:	add    ebx,ebp
  41560f:	(bad)  
  415610:	iret   
  415611:	mov    bl,0x4e
  415613:	cdq    
  415614:	jge    0x415658
  415616:	scas   eax,DWORD PTR es:[edi]
  415617:	(bad)  
  415618:	xchg   edx,eax
  415619:	aas    
  41561a:	mov    ah,bh
  41561c:	neg    ch
  41561e:	fild   DWORD PTR ds:0x75a3d365
  415624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415625:	call   0x40d4:0xfa30e748
  41562c:	(bad)  
  41562d:	out    0x1d,eax
  41562f:	add    BYTE PTR [ecx+eiz*1-0x10fdb521],dl
  415636:	lods   eax,DWORD PTR ds:[esi]
  415637:	inc    edi
  415638:	sbb    esp,DWORD PTR [edx+0x188324cb]
  41563e:	sub    eax,ebp
  415640:	mov    ah,0x86
  415642:	cdq    
  415643:	mov    edx,0x1c03ff86
  415648:	(bad)  
  41564a:	js     0x4156a9
  41564c:	rol    BYTE PTR [esi],cl
  41564e:	xor    eax,0xccc522b8
  415653:	bound  eax,QWORD PTR [eax]
  415655:	ds out 0x9,al
  415658:	mov    bl,0x14
  41565a:	push   edx
  41565b:	jmp    0x41561a
  41565d:	xor    eax,0x915776e7
  415662:	loopne 0x4156b0
  415664:	mov    edi,0x729e90cb
  415669:	mov    dl,cl
  41566b:	mov    ch,0xe8
  41566d:	outs   dx,DWORD PTR ds:[esi]
  41566e:	push   ebp
  41566f:	xchg   ebx,eax
  415670:	mov    ds:0x29f6353a,eax
  415675:	mov    esp,0xa7003735
  41567a:	or     esp,DWORD PTR [ebx]
  41567c:	mov    bp,0x41a0
  415680:	cmc    
  415681:	push   ebx
  415682:	ss and bh,dl
  415685:	ficomp DWORD PTR [ebx]
  415687:	js     0x41565d
  415689:	popa   
  41568a:	daa    
  41568b:	fbld   TBYTE PTR [edx]
  41568d:	lahf   
  41568e:	fnstcw WORD PTR [edi]
  415690:	xor    dh,BYTE PTR [esi+0x3154433e]
  415696:	addr16 lock ds or ecx,esi
  41569b:	cmc    
  41569c:	sub    ch,dh
  41569e:	ss add edx,eax
  4156a1:	mov    edx,0x4452bc1f
  4156a6:	xor    BYTE PTR [esp+esi*2-0x62],dh
  4156aa:	and    bl,dh
  4156ac:	loopne 0x41563e
  4156ae:	and    BYTE PTR [esi],0xa8
  4156b1:	sahf   
  4156b2:	repnz bound ebp,QWORD PTR [ebp-0x6a]
  4156b6:	cmp    esp,eax
  4156b8:	sti    
  4156b9:	xlat   BYTE PTR ds:[ebx]
  4156ba:	stos   DWORD PTR es:[edi],eax
  4156bb:	sub    al,0xff
  4156bd:	pushf  
  4156be:	lods   al,BYTE PTR ds:[esi]
  4156bf:	mov    BYTE PTR [ebx],cl
  4156c1:	xchg   BYTE PTR [edx],dh
  4156c3:	lods   al,BYTE PTR ds:[esi]
  4156c4:	mov    esi,DWORD PTR [edx+0x7e]
  4156c7:	clc    
  4156c8:	out    0x9e,al
  4156ca:	shr    dl,cl
  4156cc:	mov    eax,0x4a90aec1
  4156d1:	shl    dh,1
  4156d3:	and    edi,DWORD PTR [ecx+0x242221d6]
  4156d9:	inc    esp
  4156da:	mov    ebx,0x9ff2319
  4156df:	daa    
  4156e0:	xchg   ecx,eax
  4156e1:	iret   
  4156e2:	les    ebp,FWORD PTR [ecx+0x28364cb8]
  4156e8:	pop    eax
  4156e9:	(bad)  
  4156ea:	push   esi
  4156eb:	xor    bl,BYTE PTR [eax+eiz*8-0x5c]
  4156ef:	cmp    dh,BYTE PTR [esi]
  4156f1:	push   ds
  4156f2:	and    bh,BYTE PTR [ecx]
  4156f4:	std    
  4156f5:	int3   
  4156f6:	sub    eax,0x856901bc
  4156fb:	out    dx,eax
  4156fc:	inc    esp
  4156fd:	je     0x4156d4
  4156ff:	test   eax,0x85f880a
  415704:	xor    eax,0x353c1dc9
  415709:	bound  ebx,QWORD PTR [ebp-0x17]
  41570c:	cmp    DWORD PTR [edi+0x51803911],0xc92e3d7b
  415716:	enter  0x4869,0x16
  41571a:	test   DWORD PTR [edx],edx
  41571c:	std    
  41571d:	jmp    0x6fd2d751
  415722:	or     eax,0xecb8b3db
  415727:	mov    al,ds:0x395e06f7
  41572c:	imul   esi,DWORD PTR [esi],0xffffffb1
  41572f:	dec    edx
  415730:	sub    al,0x8d
  415732:	push   esi
  415733:	pop    eax
  415734:	inc    edx
  415735:	stos   DWORD PTR es:[edi],eax
  415736:	sbb    BYTE PTR [edi-0x35a4973b],al
  41573c:	ss add BYTE PTR gs:[edi+edi*8+0x24],0x33
  415743:	loopne 0x415728
  415745:	addr16 push edx
  415747:	(bad)  
  415748:	xchg   ebp,eax
  415749:	iret   
  41574a:	ret    
  41574b:	js     0x4156d0
  41574d:	sahf   
  41574e:	jp     0x41577c
  415750:	xchg   ebx,eax
  415751:	icebp  
  415752:	adc    al,0x9
  415754:	xor    al,0x6b
  415756:	aas    
  415757:	ror    BYTE PTR [ebp+0xcb81a91],cl
  41575d:	std    
  41575e:	in     eax,dx
  41575f:	and    eax,0x4db44ec5
  415764:	ret    
  415765:	adc    BYTE PTR [edi+0x57],ch
  415768:	add    BYTE PTR [edi],al
  41576a:	enter  0xb4a,0x74
  41576e:	rcl    bl,0x1f
  415771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415772:	xlat   BYTE PTR ds:[ebx]
  415773:	push   edi
  415774:	push   ds
  415775:	push   ebx
  415776:	fwait
  415777:	and    bl,BYTE PTR [edx+0x64b94418]
  41577d:	pop    esp
  41577e:	hlt    
  41577f:	sbb    esp,DWORD PTR [edi+ecx*1-0x1a461d90]
  415786:	mov    ds:0xa4cf796e,al
  41578b:	and    ah,BYTE PTR [ebx-0x2f]
  41578e:	mov    ecx,0x15c2b067
  415793:	(bad)  
  415794:	jns    0x415769
  415796:	pusha  
  415797:	jo     0x4157de
  415799:	jo     0x415730
  41579b:	xchg   edi,eax
  41579c:	pusha  
  41579d:	test   al,0x94
  41579f:	repz xchg ebp,eax
  4157a1:	imul   edi,esp,0xf1d090f6
  4157a7:	cmp    BYTE PTR ds:[ecx-0x71],al
  4157ab:	xor    eax,0x74f3572
  4157b0:	stos   BYTE PTR es:[edi],al
  4157b1:	into   
  4157b2:	dec    edi
  4157b3:	push   cs
  4157b4:	xor    edx,DWORD PTR [edx+0x7d51532a]
  4157ba:	xchg   bx,ax
  4157bc:	xchg   edx,eax
  4157bd:	into   
  4157be:	aam    0xc1
  4157c0:	out    dx,al
  4157c1:	or     dh,BYTE PTR [ebp+0x263f489d]
  4157c7:	outs   dx,DWORD PTR ds:[esi]
  4157c8:	(bad)  
  4157c9:	sti    
  4157ca:	dec    edx
  4157cb:	rcr    DWORD PTR [ebx],0xf7
  4157ce:	or     BYTE PTR [eax],al
  4157d0:	test   BYTE PTR [eax],al
  4157d2:	je     0x41577f
  4157d4:	fnstenv [edi]
  4157d6:	jb     0x415851
  4157d8:	sub    DWORD PTR [edi+0x4a],0xcbcb5a83
  4157df:	lahf   
  4157e0:	rcr    DWORD PTR [edi],cl
  4157e2:	pop    edx
  4157e3:	jl     0x4157c5
  4157e5:	pop    es
  4157e6:	xchg   esp,eax
  4157e7:	xchg   ecx,eax
  4157e8:	lock js 0x415849
  4157eb:	push   ds
  4157ec:	adc    DWORD PTR [ecx+0x61216bb3],edx
  4157f2:	fcmovnbe st,st(6)
  4157f4:	je     0x415810
  4157f6:	es jle 0x4157aa
  4157f9:	push   0x6fed804
  4157fe:	pop    ecx
  4157ff:	(bad)  
  415800:	bound  ecx,QWORD PTR [esi]
  415802:	lods   al,BYTE PTR ds:[esi]
  415803:	popa   
  415804:	ja     0x4157e6
  415806:	iret   
  415807:	push   es
  415808:	ins    DWORD PTR es:[edi],dx
  415809:	sti    
  41580a:	push   ss
  41580b:	dec    esi
  41580c:	mov    ds:0xbed199ad,eax
  415811:	xchg   edi,eax
  415812:	(bad)  
  415813:	cmp    al,BYTE PTR [edx+0x75]
  415816:	in     eax,dx
  415817:	push   0xffffffd7
  415819:	push   0x55
  41581b:	mul    BYTE PTR [esi]
  41581d:	fidivr WORD PTR [eax-0x44675c78]
  415823:	add    esi,DWORD PTR [edi+ecx*1+0x26b32416]
  41582a:	or     eax,0xa2ac3134
  41582f:	push   esp
  415830:	pop    ecx
  415831:	mov    al,0xef
  415833:	mov    ah,0x4
  415835:	or     cl,BYTE PTR [eax-0x43]
  415838:	adc    DWORD PTR [eax-0x57],ecx
  41583b:	mov    cl,0x69
  41583d:	cwde   
  41583e:	cli    
  41583f:	retf   0x6396
  415842:	and    eax,0x5d7b063c
  415847:	gs sub al,0x8e
  41584a:	ja     0x415861
  41584c:	and    ah,al
  41584e:	sbb    DWORD PTR [esi+0x1e],esi
  415851:	mov    ebx,DWORD PTR [edx-0x24]
  415854:	mov    al,ds:0xb807ada7
  415859:	pusha  
  41585a:	jp     0x4158d9
  41585c:	out    dx,eax
  41585d:	mov    al,cl
  41585f:	(bad)  
  415860:	adc    bl,BYTE PTR [eax+0x55]
  415863:	mov    cs,esp
  415865:	ss push ebx
  415867:	cmp    al,0x71
  415869:	jae    0x4157ec
  41586b:	mov    bh,0x34
  41586d:	sti    
  41586e:	imul   edx,DWORD PTR [edi-0xe],0x32
  415872:	or     edi,DWORD PTR [eax]
  415874:	jmp    0x415819
  415876:	mov    dl,0x8
  415878:	mov    esi,0x27295194
  41587d:	push   edi
  41587e:	xor    ebp,DWORD PTR [edx+0x42]
  415881:	mov    ds:0x970711c4,al
  415886:	fs inc esp
  415888:	xchg   ah,al
  41588a:	and    BYTE PTR [esi-0x3d7f885e],dh
  415890:	out    dx,eax
  415891:	mov    BYTE PTR [ebp-0x735207ff],ah
  415897:	sbb    eax,0xbf0d008b
  41589c:	ins    DWORD PTR es:[edi],dx
  41589d:	jo     0x41583c
  41589f:	shl    BYTE PTR [edx+0x681fcb85],0x75
  4158a6:	inc    esi
  4158a7:	mov    ebx,0x580a6ab
  4158ac:	mov    DWORD PTR [ebx+edi*8],0x7f8b6f92
  4158b3:	(bad)  
  4158b4:	adc    BYTE PTR [esi-0x5b],al
  4158b7:	add    bl,BYTE PTR [edi]
  4158b9:	in     al,0x13
  4158bb:	mov    ds:0xdc251933,al
  4158c0:	xchg   ebx,eax
  4158c1:	mov    edi,0xa36dfaeb
  4158c6:	jle    0x415941
  4158c8:	and    BYTE PTR [ebx+ebp*1+0x45ca6a3],0x5c
  4158d0:	pop    ss
  4158d1:	fild   QWORD PTR [edi+ebp*4-0x3c]
  4158d5:	in     eax,dx
  4158d6:	or     al,0x1b
  4158d8:	pop    es
  4158d9:	jecxz  0x41589e
  4158db:	ins    DWORD PTR es:[edi],dx
  4158dc:	mov    esi,DWORD PTR [eax-0x60]
  4158df:	or     edi,DWORD PTR [esi+0x41b4b644]
  4158e5:	cmp    ecx,DWORD PTR [eax+0x5aa040cd]
  4158eb:	dec    ebp
  4158ec:	(bad)  
  4158ed:	jecxz  0x4158e0
  4158ef:	in     eax,0x91
  4158f1:	sub    dh,BYTE PTR [esi-0x4]
  4158f4:	pop    ecx
  4158f5:	xchg   ebx,eax
  4158f6:	jp     0x4158e7
  4158f8:	xor    eax,edx
  4158fa:	test   eax,0x4523c615
  4158ff:	fcom   QWORD PTR [ebx]
  415901:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415902:	adc    eax,0x29dbc8ec
  415907:	mov    edx,0xd99e25e2
  41590c:	xchg   ecx,eax
  41590d:	gs retf 0x24ba
  415911:	adc    esi,DWORD PTR [edi+0x2b]
  415914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415915:	outs   dx,DWORD PTR ds:[esi]
  415916:	out    dx,al
  415917:	pop    esi
  415918:	fsubr  DWORD PTR [eax-0x7187c24f]
  41591e:	mov    ebp,0x7c429d01
  415923:	fisttp DWORD PTR [edi+0x49467efa]
  415929:	adc    esi,0xffffffa3
  41592c:	int3   
  41592d:	loop   0x41598e
  41592f:	mov    al,0xeb
  415931:	retf   
  415932:	mov    ah,0xb7
  415934:	gs aaa 
  415936:	mov    BYTE PTR [ebx+0x6dafe45b],ah
  41593c:	mov    dh,0xfb
  41593e:	mov    ecx,0xbb9c4ba6
  415943:	pop    ebx
  415944:	sub    ch,ch
  415946:	xchg   edx,eax
  415947:	das    
  415948:	gs test eax,0x11e3776e
  41594e:	stc    
  41594f:	inc    ecx
  415950:	stos   BYTE PTR es:[edi],al
  415951:	out    dx,eax
  415952:	test   al,0xfe
  415954:	xor    edi,esp
  415956:	stc    
  415957:	inc    esp
  415958:	idiv   BYTE PTR [ebx+0x50]
  41595b:	pop    esi
  41595c:	fst    st(6)
  41595e:	aas    
  41595f:	add    DWORD PTR [ebp-0x25c62fd2],0xb1e8b4a7
  415969:	pushf  
  41596a:	imul   ebx,DWORD PTR [esi+0x26],0x25
  41596e:	dec    eax
  41596f:	pop    ecx
  415970:	test   al,dl
  415972:	inc    esp
  415973:	iret   
  415974:	and    BYTE PTR [ecx],dl
  415976:	xor    al,0x5c
  415978:	imul   esi,DWORD PTR [ebp-0x1633c6e1],0x7b173822
  415982:	aam    0xb9
  415984:	cmp    DWORD PTR [edx],esi
  415986:	push   ebp
  415987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415988:	(bad)  
  415989:	and    DWORD PTR [ecx],ecx
  41598b:	sbb    dl,dl
  41598d:	aad    0xe0
  41598f:	mov    esi,0x4c3bc363
  415994:	aas    
  415995:	add    eax,0x4b882cf0
  41599a:	retf   
  41599b:	es test al,0x30
  41599e:	scas   al,BYTE PTR es:[edi]
  41599f:	jge    0x4159af
  4159a1:	daa    
  4159a2:	pop    ss
  4159a3:	cmc    
  4159a4:	xchg   ebx,eax
  4159a5:	div    DWORD PTR [ecx-0x4c]
  4159a8:	add    eax,0xaf2a3a01
  4159ad:	cdq    
  4159ae:	fcom   QWORD PTR [edi+0x4e4bf052]
  4159b4:	repnz dec ecx
  4159b6:	fwait
  4159b7:	out    dx,al
  4159b8:	bound  esi,QWORD PTR [ecx+0x5f]
  4159bb:	aaa    
  4159bc:	jne    0x4159cb
  4159be:	dec    esp
  4159bf:	push   eax
  4159c0:	out    0x67,eax
  4159c2:	dec    edx
  4159c3:	cmp    DWORD PTR [edi+edx*8-0x2d],edx
  4159c7:	mov    edx,0xc16452dd
  4159cc:	cmc    
  4159cd:	mov    ebp,0xb9fc2e28
  4159d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159d3:	aaa    
  4159d4:	idiv   BYTE PTR [ebp-0x4e]
  4159d7:	ror    BYTE PTR [edx-0x53],1
  4159da:	sbb    eax,0xadb61103
  4159df:	out    dx,al
  4159e0:	cmp    edx,esi
  4159e2:	iret   
  4159e3:	call   0x3cf71383
  4159e8:	add    ch,al
  4159ea:	adc    eax,0x32a6391a
  4159ef:	cmc    
  4159f0:	cmp    cl,al
  4159f2:	jo     0x415a10
  4159f4:	fimul  WORD PTR [eax+edi*8]
  4159f7:	imul   eax
  4159f9:	adc    cl,dh
  4159fb:	pop    bp
  4159fd:	xor    BYTE PTR [edx-0x2bddf579],dl
  415a03:	inc    edx
  415a04:	les    eax,FWORD PTR [edx-0x5ffe4e6c]
  415a0a:	xchg   BYTE PTR [esi+ecx*1],dh
  415a0d:	shl    edi,1
  415a0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a10:	inc    esp
  415a11:	dec    esi
  415a12:	fdiv   st(5),st
  415a14:	test   bl,bh
  415a16:	popfw  
  415a18:	cmp    eax,0xf34cc6b
  415a1d:	in     al,0xd3
  415a1f:	xor    ebx,DWORD PTR [edi]
  415a21:	mov    ds:0x74985fa,al
  415a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a27:	in     al,dx
  415a28:	xchg   edi,eax
  415a29:	push   es
  415a2a:	adc    ebp,DWORD PTR [esi]
  415a2c:	and    dh,BYTE PTR [ebp+0x5b]
  415a2f:	sbb    eax,0x4844cc89
  415a34:	in     eax,dx
  415a35:	in     al,dx
  415a36:	jg     0x415a10
  415a38:	cmp    dh,BYTE PTR [ebx-0x4f]
  415a3b:	mov    ds:0xea8ebf7f,al
  415a40:	dec    edi
  415a41:	xor    esp,DWORD PTR [ebx+0x6a]
  415a44:	sbb    bl,BYTE PTR [ebx]
  415a46:	sub    DWORD PTR [ebp+0x59],esi
  415a49:	xchg   BYTE PTR [edx-0x66e1d27],bl
  415a4f:	das    
  415a50:	dec    ebp
  415a51:	(bad)  
  415a52:	fnstcw WORD PTR [esi-0x6108c954]
  415a58:	sbb    esi,DWORD PTR [eax+esi*8-0xcc9fb7d]
  415a5f:	xor    al,0xbf
  415a61:	xchg   esp,eax
  415a62:	and    eax,0xa7573d5a
  415a67:	cdq    
  415a68:	sub    al,0x51
  415a6a:	inc    edi
  415a6b:	adc    DWORD PTR [edx-0x75],ebp
  415a6e:	in     eax,dx
  415a6f:	repnz shr dl,cl
  415a72:	iret   
  415a73:	jo     0x415ad4
  415a75:	iret   
  415a76:	retf   0x4e18
  415a79:	pop    es
  415a7a:	rcl    DWORD PTR [edi-0x16391e0c],0xf
  415a81:	lds    ebp,FWORD PTR [ecx]
  415a83:	add    al,0x4f
  415a85:	into   
  415a86:	test   eax,0x1cd86965
  415a8b:	jmp    0x9e07c732
  415a90:	inc    edx
  415a91:	or     bh,BYTE PTR [edi]
  415a93:	ja     0x415a5a
  415a95:	pop    edx
  415a96:	or     eax,0x41bc5d60
  415a9b:	jmp    0x77d7:0x6fcce18c
  415aa2:	or     eax,0x5045da49
  415aa7:	outs   dx,DWORD PTR ds:[esi]
  415aa8:	mov    bh,BYTE PTR [ecx-0x348ee190]
  415aae:	neg    edx
  415ab0:	sub    bl,BYTE PTR [esi]
  415ab2:	adc    al,0x8b
  415ab4:	popf   
  415ab5:	hlt    
  415ab6:	add    al,0xa9
  415ab8:	dec    esp
  415ab9:	fsubrp st(5),st
  415abb:	or     BYTE PTR [ebp+ebp*1+0x1e],ch
  415abf:	add    eax,0x43ea007d
  415ac4:	icebp  
  415ac5:	ins    BYTE PTR es:[edi],dx
  415ac6:	sub    DWORD PTR [edi-0x76],0xc41279f4
  415acd:	arpl   WORD PTR [edi-0x7e7bb700],di
  415ad3:	fimul  DWORD PTR [ecx-0x1bf3b15b]
  415ad9:	pop    edx
  415ada:	pop    edx
  415adb:	sbb    ecx,DWORD PTR [edx+ebx*4-0x37]
  415adf:	repnz adc al,0xdd
  415ae2:	xor    ebp,DWORD PTR [eax]
  415ae4:	popa   
  415ae5:	cmp    ch,bh
  415ae7:	jno    0x415b60
  415ae9:	sub    eax,0x8c552fa6
  415aee:	xor    ah,BYTE PTR [ebx+0x4019f9a6]
  415af4:	cdq    
  415af5:	les    eax,FWORD PTR [esi-0x1ed81dbe]
  415afb:	adc    al,0xcd
  415afd:	push   es
  415afe:	int    0x89
  415b00:	test   esi,eax
  415b02:	nop
  415b03:	mov    ch,0x88
  415b05:	cmp    bh,ch
  415b07:	(bad)  
  415b09:	inc    ebp
  415b0a:	test   eax,0x33bedbb8
  415b0f:	jne    0x415b37
  415b11:	lods   eax,DWORD PTR ds:[esi]
  415b12:	js     0x415ac9
  415b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b16:	les    ebx,FWORD PTR [ecx+0x3]
  415b19:	add    al,0x50
  415b1b:	test   DWORD PTR [ebp-0x1e],ecx
  415b1e:	mov    dh,0x1
  415b20:	mov    eax,ds:0xed77c072
  415b25:	and    BYTE PTR [ebx-0x80],0x76
  415b29:	lds    ebp,FWORD PTR [eax+0x65b1366c]
  415b2f:	fcomp  DWORD PTR [eax+edx*2]
  415b32:	adc    BYTE PTR [ecx+edi*8-0x157116e9],bh
  415b39:	test   BYTE PTR [ecx],bl
  415b3b:	xchg   ecx,eax
  415b3c:	add    BYTE PTR [ecx+0x352f0026],dl
  415b42:	mov    ?,WORD PTR [ebp-0x66b4de4f]
  415b48:	lods   eax,DWORD PTR ds:[esi]
  415b49:	xchg   ecx,eax
  415b4a:	pop    cx
  415b4c:	scas   eax,DWORD PTR es:[edi]
  415b4d:	stos   BYTE PTR es:[edi],al
  415b4e:	jb     0x415b69
  415b50:	aaa    
  415b51:	imul   esp,DWORD PTR [edi+0x10],0x45
  415b55:	sbb    cl,ah
  415b57:	stos   BYTE PTR es:[edi],al
  415b58:	aaa    
  415b59:	jp     0x415bb3
  415b5b:	sub    eax,0x69fca2fd
  415b60:	enter  0xfe93,0xd2
  415b64:	mov    eax,0xc532a167
  415b69:	call   FWORD PTR [esi-0x47]
  415b6c:	imul   edi,DWORD PTR [ecx+0x2c49ee8b],0xffffffd2
  415b73:	sub    DWORD PTR [ecx],0xffffff85
  415b76:	push   cs
  415b77:	mov    ebp,0x273105f4
  415b7c:	out    dx,al
  415b7d:	add    DWORD PTR [ebx-0x6ea5f477],edi
  415b83:	dec    ebp
  415b84:	test   al,0x98
  415b86:	int3   
  415b87:	mov    ah,0x1e
  415b89:	jmp    0x671d:0x529eaebc
  415b90:	xchg   edi,eax
  415b91:	push   esp
  415b92:	or     DWORD PTR [edx+0x6e021367],edx
  415b98:	shl    DWORD PTR [esi-0x13],1
  415b9b:	pop    eax
  415b9c:	jns    0x415b91
  415b9e:	into   
  415b9f:	mov    cl,0x1
  415ba1:	jmp    0x459a9b27
  415ba6:	push   edx
  415ba7:	jno    0x415b59
  415ba9:	or     eax,0xf34fd90e
  415bae:	int    0x8e
  415bb0:	sbb    eax,0x6187c83b
  415bb5:	repnz daa 
  415bb7:	lods   eax,DWORD PTR ds:[esi]
  415bb8:	jne    0x415b42
  415bba:	in     al,0x4a
  415bbc:	xchg   esi,eax
  415bbd:	retf   0x236c
  415bc0:	mov    WORD PTR [edi+0x94487a2],?
  415bc6:	or     esi,0xffffff98
  415bc9:	pop    ebx
  415bca:	inc    ecx
  415bcb:	sub    bl,BYTE PTR [edx-0x50]
  415bce:	add    BYTE PTR [eax-0x3f],bl
  415bd1:	xchg   ebx,eax
  415bd2:	dec    ebx
  415bd3:	jmp    0xb0af:0x184f505
  415bda:	mov    al,0xea
  415bdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bdd:	cmp    DWORD PTR [ebp-0x6d617721],ecx
  415be3:	dec    eax
  415be4:	gs inc esi
  415be6:	gs jge 0x415b9c
  415be9:	mov    edx,0x46e90745
  415bee:	pusha  
  415bef:	fbstp  TBYTE PTR [ebx+0x5d3dc45e]
  415bf5:	outs   dx,BYTE PTR ds:[esi]
  415bf6:	iret   
  415bf7:	imul   edx,DWORD PTR [ecx+0x1b4a9624],0xffffff9a
  415bfe:	rcl    BYTE PTR [edx],cl
  415c00:	adc    eax,0x5471ca4f
  415c05:	mov    edi,0x41b2de71
  415c0a:	adc    dl,al
  415c0c:	into   
  415c0d:	(bad)  
  415c0f:	or     al,0xd7
  415c11:	dec    edi
  415c12:	out    0xa9,eax
  415c14:	lock dec ebp
  415c16:	push   esp
  415c17:	pop    esp
  415c18:	sbb    BYTE PTR [ebp-0x53],0xf3
  415c1c:	scas   al,BYTE PTR es:[edi]
  415c1d:	sub    al,0xfc
  415c1f:	push   ebp
  415c20:	(bad)  
  415c21:	xor    bl,al
  415c23:	pusha  
  415c24:	ds xchg ebp,eax
  415c26:	add    bl,BYTE PTR [edx+ebp*2-0x7a]
  415c2a:	inc    ebp
  415c2b:	xor    al,BYTE PTR [esi]
  415c2d:	mov    WORD PTR [esi+0x1e5027a7],?
  415c33:	push   edx
  415c34:	(bad)  
  415c35:	and    al,0x6c
  415c37:	ins    DWORD PTR es:[edi],dx
  415c38:	mov    esi,0x4243b6b9
  415c3d:	sar    dl,1
  415c3f:	xchg   ebx,eax
  415c40:	xchg   ebx,eax
  415c41:	pop    ds
  415c42:	pop    ss
  415c43:	dec    ebx
  415c45:	push   esp
  415c46:	xchg   ebx,eax
  415c47:	xchg   BYTE PTR [ebx+0x1a613325],dh
  415c4d:	addr16 jmp 0xc7a1c305
  415c53:	jl     0x415bef
  415c55:	add    dl,BYTE PTR [edx+0x6]
  415c58:	sbb    bl,bl
  415c5a:	inc    ebp
  415c5b:	retf   0xbcde
  415c5e:	retf   
  415c5f:	xor    DWORD PTR [eax-0x52],eax
  415c62:	loop   0x415c7a
  415c64:	xor    DWORD PTR [ecx+0x34edb0e4],0x20e182a8
  415c6e:	les    ecx,FWORD PTR [edx+0x68]
  415c71:	sub    BYTE PTR [ebx],bh
  415c73:	enter  0xb967,0x39
  415c77:	jns    0x415cec
  415c79:	xchg   edx,eax
  415c7a:	push   esi
  415c7b:	retf   
  415c7c:	cmc    
  415c7d:	out    0x1b,eax
  415c7f:	rcl    esp,1
  415c81:	in     eax,0xef
  415c83:	into   
  415c84:	lock xchg esi,eax
  415c86:	and    bl,bl
  415c88:	ret    
  415c89:	fwait
  415c8a:	inc    esi
  415c8b:	cmp    BYTE PTR [ecx+0x1a06504e],ch
  415c91:	sbb    al,0xa5
  415c93:	and    eax,0x8915a768
  415c98:	sbb    al,0xec
  415c9a:	jns    0x415c76
  415c9c:	imul   eax
  415c9e:	retf   0xa1c4
  415ca1:	daa    
  415ca2:	cmp    dl,0xae
  415ca5:	stc    
  415ca6:	(bad)  
  415ca7:	(bad)  
  415ca9:	xor    bl,BYTE PTR [ebp+edi*8+0x15775d98]
  415cb0:	outs   dx,DWORD PTR ds:[esi]
  415cb1:	fistp  DWORD PTR [ecx-0x5]
  415cb4:	outs   dx,BYTE PTR ds:[esi]
  415cb5:	sub    dh,BYTE PTR [ebx+0x46]
  415cb8:	lods   al,BYTE PTR ds:[esi]
  415cb9:	sub    eax,0x7db4986d
  415cbe:	xor    al,0x49
  415cc0:	cld    
  415cc1:	xor    esi,ebx
  415cc3:	test   al,0x91
  415cc5:	mov    esp,0xf237dd05
  415cca:	mov    ebp,0x5ffae2da
  415ccf:	mov    ds:0xa315edc9,al
  415cd4:	sub    ah,BYTE PTR [eax+ecx*1+0x585b4255]
  415cdb:	and    eax,edi
  415cdd:	push   0xffffff9f
  415cdf:	sub    eax,0xec25fd29
  415ce4:	loope  0x415c8d
  415ce6:	neg    DWORD PTR [edi+0x2e066987]
  415cec:	mov    ah,0x90
  415cee:	xor    eax,0xf0cd0d67
  415cf3:	ds nop
  415cf5:	add    ebx,DWORD PTR [esi-0x6e]
  415cf8:	sub    BYTE PTR [edi+ebx*1],cl
  415cfb:	jecxz  0x415cc9
  415cfd:	aad    0x3a
  415cff:	inc    edi
  415d00:	pop    esp
  415d01:	int3   
  415d02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d03:	imul   esi,DWORD PTR [ebx-0x18],0x65
  415d07:	xchg   esi,eax
  415d08:	sub    al,0x28
  415d0a:	sbb    eax,0x85aa0148
  415d0f:	fistp  DWORD PTR [esp+edx*8+0x1d]
  415d13:	mov    edx,DWORD PTR [edi+0x16]
  415d16:	jbe    0x415d19
  415d18:	jg     0x4170e3e
  415d1e:	or     DWORD PTR [edx-0x2fcd0ef2],ebx
  415d24:	push   eax
  415d25:	xchg   ebx,eax
  415d26:	outs   dx,DWORD PTR ds:[esi]
  415d27:	adc    esp,DWORD PTR [eax+0xe]
  415d2a:	clc    
  415d2b:	ret    0x76f3
  415d2e:	fs ret 0x65d0
  415d32:	loop   0x415da5
  415d34:	add    ebx,DWORD PTR [eax-0x57d9ccc2]
  415d3a:	adc    al,0xad
  415d3c:	imul   edx,esp,0x95d1e021
  415d42:	push   edx
  415d43:	xlat   BYTE PTR ds:[ebx]
  415d44:	xchg   edx,eax
  415d45:	mov    ch,ch
  415d47:	pop    eax
  415d48:	jmp    0xad7b509d
  415d4d:	scas   eax,DWORD PTR es:[edi]
  415d4e:	adc    eax,DWORD PTR [edi-0x11]
  415d51:	sub    edx,DWORD PTR [edi-0x5e88738]
  415d57:	sahf   
  415d58:	lahf   
  415d59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d5a:	mov    esi,0xb4c09a35
  415d5f:	push   ebx
  415d60:	fsubr  QWORD PTR [esi-0x6b]
  415d63:	pop    edx
  415d64:	repz mov edi,0x3aaf4832
  415d6a:	push   0x12
  415d6c:	pop    edi
  415d6d:	add    eax,0x18ee5d23
  415d72:	sbb    BYTE PTR [eax-0x59],0x3
  415d76:	mov    bl,0xd6
  415d78:	mov    ch,0x65
  415d7a:	inc    ebp
  415d7b:	push   es
  415d7c:	ins    BYTE PTR es:[edi],dx
  415d7d:	dec    ecx
  415d7e:	and    al,BYTE PTR [ebx-0x5d05014]
  415d84:	add    al,0x4c
  415d86:	scas   al,BYTE PTR es:[edi]
  415d87:	add    al,0xe5
  415d89:	inc    edi
  415d8a:	sub    BYTE PTR [ebx+ebp*1],0x99
  415d8e:	sti    
  415d8f:	sti    
  415d90:	arpl   WORD PTR [eax-0xf],si
  415d93:	(bad)  
  415d94:	mov    ebx,0xe22686ea
  415d99:	out    0x50,al
  415d9b:	cmp    al,0xf0
  415d9d:	in     al,0x21
  415d9f:	daa    
  415da0:	adc    esi,DWORD PTR es:[ecx-0x6282bb3e]
  415da7:	retf   
  415da8:	ss cmc 
  415daa:	rcr    DWORD PTR [esi+0x22],cl
  415dad:	jp     0x415dae
  415daf:	jp     0x415df4
  415db1:	push   0x509e3bc7
  415db6:	test   eax,0x87781018
  415dbb:	stos   DWORD PTR es:[edi],eax
  415dbc:	aaa    
  415dbd:	add    al,0xaa
  415dbf:	cli    
  415dc0:	stc    
  415dc1:	or     dl,BYTE PTR [edi+0x507fdbb8]
  415dc7:	xchg   edi,eax
  415dc8:	push   ebx
  415dc9:	std    
  415dca:	push   cs
  415dcb:	scas   eax,DWORD PTR es:[edi]
  415dcc:	stos   DWORD PTR es:[edi],eax
  415dcd:	push   0x26d1cda5
  415dd2:	push   ss
  415dd3:	mov    ch,0x17
  415dd5:	loop   0x415e12
  415dd7:	push   ebp
  415dd8:	pop    esp
  415dd9:	les    ebp,FWORD PTR [edx-0x9]
  415ddc:	add    BYTE PTR [ebx+0x15],bl
  415ddf:	dec    ecx
  415de0:	jp     0x415dcf
  415de2:	pop    ds
  415de3:	mov    ch,0x66
  415de5:	aaa    
  415de6:	cld    
  415de7:	push   eax
  415de8:	sub    eax,0x4ce67e36
  415ded:	inc    ebp
  415dee:	jns    0x415dac
  415df0:	or     edi,ecx
  415df2:	or     ebp,DWORD PTR [ecx]
  415df4:	sti    
  415df5:	cmc    
  415df6:	push   esp
  415df7:	ret    
  415df8:	adc    BYTE PTR [ebp-0x3d],al
  415dfb:	arpl   WORD PTR [ebx],dx
  415dfd:	ret    
  415dfe:	mov    esp,0xdc5a028
  415e03:	mov    DWORD PTR cs:[edx],ebp
  415e06:	icebp  
  415e07:	mov    edi,cs
  415e09:	in     al,dx
  415e0a:	xchg   esp,eax
  415e0b:	addr16 xchg ebp,eax
  415e0d:	sub    edi,DWORD PTR [ebx]
  415e0f:	fs jp  0x415da2
  415e12:	fcmovnbe st,st(3)
  415e14:	pop    esi
  415e15:	sbb    eax,0xebc4f804
  415e1a:	or     eax,0x3aebc168
  415e1f:	jmp    0x415e59
  415e21:	retf   0xed1c
  415e24:	push   esp
  415e25:	into   
  415e26:	daa    
  415e27:	cdq    
  415e28:	stos   BYTE PTR es:[edi],al
  415e29:	sbb    DWORD PTR [esi],eax
  415e2b:	mov    ds:0x315d808,eax
  415e30:	or     BYTE PTR [esi+0x4ada40ed],al
  415e36:	das    
  415e37:	in     al,0xe1
  415e39:	fs lahf 
  415e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e3c:	xlat   BYTE PTR ds:[ebx]
  415e3d:	or     esi,DWORD PTR gs:[eax+edx*4-0x1]
  415e42:	in     al,0x4b
  415e44:	mul    ebx
  415e46:	inc    ecx
  415e47:	jnp    0x415dca
  415e49:	ins    DWORD PTR es:[edi],dx
  415e4a:	push   ecx
  415e4b:	repnz std 
  415e4d:	stc    
  415e4e:	cli    
  415e4f:	nop
  415e50:	mov    ss,WORD PTR [ebx+0x35d464de]
  415e56:	inc    ebx
  415e57:	cmp    al,0x1c
  415e59:	fistp  QWORD PTR [ebx+0x7b579305]
  415e5f:	ror    ebp,0x51
  415e62:	inc    ebp
  415e63:	int    0x13
  415e65:	add    ch,BYTE PTR [edx]
  415e67:	jb     0x415e5e
  415e69:	mov    bh,0xe0
  415e6b:	sub    al,0xf2
  415e6d:	sub    al,dl
  415e6f:	sbb    BYTE PTR ds:0x7c154b88,0xa8
  415e76:	jnp    0x415ec8
  415e78:	pop    edi
  415e79:	rcl    BYTE PTR [esi-0x40fe6bdc],cl
  415e7f:	mov    dl,0x37
  415e81:	inc    esi
  415e82:	jns    0x415e48
  415e84:	mov    esp,0xc6a6733b
  415e89:	nop
  415e8a:	sub    eax,0xdfad6dd6
  415e8f:	push   eax
  415e90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e91:	add    esi,DWORD PTR [esi-0x68]
  415e94:	xlat   BYTE PTR ds:[ebx]
  415e95:	cdq    
  415e96:	jle    0x415eed
  415e98:	ins    BYTE PTR es:[edi],dx
  415e99:	xchg   esi,eax
  415e9a:	sbb    BYTE PTR [ecx-0x7763c4b7],dh
  415ea0:	(bad)
  415ea3:	adc    bl,ch
  415ea5:	sbb    eax,0x303f170d
  415eaa:	xchg   esp,eax
  415eab:	lds    ecx,FWORD PTR [ecx+0x28]
  415eae:	shl    BYTE PTR [esi],1
  415eb0:	mov    ch,0xd9
  415eb2:	nop
  415eb3:	jns    0x415f04
  415eb5:	jb     0x415ef7
  415eb7:	enter  0xc2bf,0x99
  415ebb:	xchg   ecx,eax
  415ebc:	mov    ds:0x73cdbdf,eax
  415ec1:	or     DWORD PTR [eax+edx*4-0x4b],esi
  415ec5:	clc    
  415ec6:	das    
  415ec7:	ds mov edx,0xa588553e
  415ecd:	popa   
  415ece:	outs   dx,BYTE PTR ds:[esi]
  415ecf:	stos   DWORD PTR es:[edi],eax
  415ed0:	and    BYTE PTR [ecx],dl
  415ed2:	(bad)  
  415ed3:	out    dx,al
  415ed4:	dec    esp
  415ed5:	push   ecx
  415ed6:	add    eax,DWORD PTR [esi+0x9]
  415ed9:	and    DWORD PTR [edx+0x77],ebp
  415edc:	mov    ch,0x77
  415ede:	in     eax,dx
  415edf:	popf   
  415ee0:	xor    dh,0xaf
  415ee3:	ins    DWORD PTR es:[edi],dx
  415ee4:	dec    ebp
  415ee5:	dec    eax
  415ee6:	push   0x1b
  415ee8:	(bad)  
  415ee9:	jmp    0x415e82
  415eeb:	adc    eax,0x7215c74c
  415ef0:	and    cl,BYTE PTR [eax]
  415ef2:	cs mov bl,0x4c
  415ef5:	pusha  
  415ef6:	push   ecx
  415ef7:	addr16 mov bh,0xfb
  415efa:	and    ebp,ecx
  415efc:	mov    edx,ecx
  415efe:	cdq    
  415eff:	xor    eax,0xb0074fc8
  415f04:	dec    esp
  415f05:	push   edx
  415f06:	ds xor eax,0x7cfb8c2
  415f0c:	sbb    dl,BYTE PTR [ebx]
  415f0e:	mov    dl,0xe4
  415f10:	out    0x92,eax
  415f12:	pop    ecx
  415f13:	xor    bh,BYTE PTR [ebp+0x5c]
  415f16:	ins    DWORD PTR es:[edi],dx
  415f17:	or     eax,0x586402c7
  415f1c:	leave  
  415f1d:	js     0x415f15
  415f1f:	add    eax,0xa6a1e88b
  415f24:	adc    DWORD PTR [edx],ecx
  415f26:	inc    eax
  415f27:	aad    0x70
  415f29:	sub    edx,DWORD PTR [esi+0x55]
  415f2c:	je     0x415f68
  415f2e:	or     eax,0xf1348012
  415f33:	mov    ebp,0x3ac469dc
  415f38:	cld    
  415f39:	ins    DWORD PTR es:[edi],dx
  415f3a:	adc    eax,DWORD PTR [ecx+eax*2]
  415f3d:	test   al,0x60
  415f3f:	xlat   BYTE PTR ds:[ebx]
  415f40:	sub    ch,BYTE PTR [edx]
  415f42:	pop    edx
  415f43:	sti    
  415f44:	rol    DWORD PTR [esi],1
  415f46:	cwde   
  415f47:	push   edx
  415f48:	scas   eax,DWORD PTR es:[edi]
  415f49:	daa    
  415f4a:	das    
  415f4b:	(bad)  
  415f4c:	int    0x29
  415f4e:	or     DWORD PTR [edi+0x633778af],ebp
  415f54:	jnp    0x415f52
  415f56:	arpl   WORD PTR [eax+ebx*4],sp
  415f59:	in     eax,dx
  415f5a:	jg     0x415fcb
  415f5c:	xchg   ecx,eax
  415f5d:	ins    BYTE PTR es:[edi],dx
  415f5e:	mov    bh,0x2d
  415f60:	pop    ss
  415f61:	shr    DWORD PTR [edi-0x6b],0xb4
  415f65:	push   0x5748c5d5
  415f6a:	dec    esi
  415f6b:	add    edi,0x66
  415f6e:	dec    edx
  415f6f:	int    0x0
  415f71:	dec    ecx
  415f72:	mov    dl,0x34
  415f74:	and    al,0xa8
  415f76:	push   ds
  415f77:	ss in  al,0x18
  415f7a:	cli    
  415f7b:	js     0x415f5b
  415f7d:	xor    esp,ebx
  415f7f:	hlt    
  415f80:	or     eax,0xbdb4486f
  415f85:	inc    edi
  415f86:	fwait
  415f87:	iret   
  415f88:	xor    BYTE PTR [esi+ebx*1-0x33],ch
  415f8c:	and    bl,dl
  415f8e:	xchg   edx,eax
  415f8f:	push   esp
  415f90:	stos   DWORD PTR es:[edi],eax
  415f91:	push   esp
  415f92:	out    dx,eax
  415f93:	xchg   ecx,eax
  415f94:	mov    edi,DWORD PTR ds:0xcad09add
  415f9a:	leave  
  415f9b:	or     ch,BYTE PTR [eax+0xd485004]
  415fa1:	test   BYTE PTR [ebp+0x1f],bh
  415fa4:	stc    
  415fa5:	test   dh,bh
  415fa7:	mov    ah,0xac
  415fa9:	gs test eax,0x4b3be18d
  415faf:	or     eax,0x28e7f5f
  415fb4:	(bad)  
  415fb5:	hlt    
  415fb6:	or     ecx,eax
  415fb8:	aas    
  415fb9:	lods   al,BYTE PTR ds:[esi]
  415fba:	mov    ds:0xe3f10b8a,al
  415fbf:	xchg   BYTE PTR [esi],dh
  415fc1:	xchg   DWORD PTR [ebp+0x104229d0],esp
  415fc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fc8:	or     eax,0x687ac534
  415fcd:	(bad)  
  415fce:	lods   al,BYTE PTR ds:[esi]
  415fcf:	add    eax,0x4cd9df3e
  415fd4:	leave  
  415fd5:	ja     0x416039
  415fd7:	fs (bad) 
  415fd9:	test   al,0x7d
  415fdb:	lods   al,BYTE PTR cs:[esi]
  415fdd:	jmp    0x3561e2a2
  415fe2:	mov    ch,0x2f
  415fe4:	daa    
  415fe5:	pop    esi
  415fe6:	xchg   ecx,eax
  415fe7:	in     al,0xbf
  415fe9:	xchg   edi,eax
  415fea:	(bad)  
  415feb:	jae    0x415ff9
  415fed:	add    eax,0xd80699c4
  415ff2:	sbb    DWORD PTR [ebx-0x589ee81],ebx
  415ff8:	es mov cl,0xff
  415ffb:	add    edi,DWORD PTR [edx+0x61034ce4]
  416001:	or     DWORD PTR [ebp+0x79815462],esi
  416007:	jmp    0x41605d
  416009:	sub    al,0x4b
  41600b:	adc    al,0xa9
  41600d:	loop   0x416089
  41600f:	fwait
  416010:	mov    ebp,0xf268ec99
  416015:	shl    ebx,0x80
  416018:	cwde   
  416019:	xchg   ebp,eax
  41601a:	imul   esi,DWORD PTR ds:0x4550aa30,0x62
  416021:	mov    bl,0x76
  416023:	jmp    0xc66c:0x2615069d
  41602a:	dec    ebx
  41602b:	ss test al,0x51
  41602e:	(bad)  
  41602f:	mov    bh,BYTE PTR [edx]
  416031:	popa   
  416032:	fdiv   QWORD PTR [ecx-0x3cac20db]
  416038:	lods   eax,DWORD PTR ds:[esi]
  416039:	cmp    edx,ecx
  41603b:	sbb    ecx,DWORD PTR [eax-0x685eb6f]
  416041:	pushf  
  416042:	jmp    0x415fff
  416044:	stos   DWORD PTR es:[edi],eax
  416045:	mov    ah,0x32
  416047:	in     eax,0x9f
  416049:	out    0x3f,eax
  41604b:	rcl    cl,1
  41604d:	mov    bh,0xc4
  41604f:	xchg   BYTE PTR [eax+0x37ace403],bl
  416055:	mov    cl,0xbc
  416057:	xchg   DWORD PTR [edi-0x7047c85b],esi
  41605d:	ret    0xaeab
  416060:	int    0x68
  416062:	xor    DWORD PTR [esp+edi*2+0x50],0x626355ba
  41606a:	fmul   QWORD PTR [ecx-0x6e289c6b]
  416070:	fs je  0x416048
  416073:	pop    edx
  416074:	xor    ah,BYTE PTR [edi+0x39]
  416077:	fsubr  DWORD PTR [ebp+eiz*8-0x27]
  41607b:	sub    eax,0x3996e90d
  416080:	mov    dl,BYTE PTR [eax+eax*8+0x2]
  416084:	test   DWORD PTR [edi+eax*8],esi
  416087:	xor    DWORD PTR [eax-0x4ef6dd9e],ebp
  41608d:	in     eax,dx
  41608e:	test   esi,edi
  416090:	pop    edi
  416091:	neg    DWORD PTR [ebx]
  416093:	imul   esp,DWORD PTR [ebx+0x70],0x3b
  416097:	or     eax,0x58565511
  41609c:	cli    
  41609d:	mov    esi,0xb5434a09
  4160a2:	out    0x24,al
  4160a4:	push   ebx
  4160a5:	xchg   DWORD PTR [edi+0x13],esp
  4160a8:	mov    ds:0xe3c81d53,al
  4160ad:	mov    bh,0x14
  4160af:	int    0x7
  4160b1:	jnp    0x4160df
  4160b3:	pop    ss
  4160b4:	aaa    
  4160b5:	inc    edi
  4160b6:	xor    ah,BYTE PTR [ebx]
  4160b8:	mov    eax,0x3a9fc7b6
  4160bd:	push   edx
  4160be:	dec    eax
  4160bf:	sbb    al,0x68
  4160c1:	cdq    
  4160c2:	std    
  4160c3:	jmp    0x416048
  4160c5:	xor    cl,BYTE PTR [eax+0x6e55a802]
  4160cb:	mov    al,BYTE PTR [eax+0x19]
  4160ce:	xchg   esi,esi
  4160d0:	pop    es
  4160d1:	in     al,0xb7
  4160d3:	into   
  4160d4:	mov    al,0x4a
  4160d6:	les    esi,FWORD PTR ds:0x99b5529a
  4160dc:	mov    dh,0x48
  4160de:	mov    edx,DWORD PTR [edx+0x4b]
  4160e1:	xchg   esp,eax
  4160e2:	adc    ecx,DWORD PTR [ecx+esi*4-0x28]
  4160e6:	mov    esi,0xe44a11f0
  4160eb:	sbb    ecx,DWORD PTR [ecx]
  4160ed:	add    DWORD PTR [esp+ebx*1],eax
  4160f0:	into   
  4160f1:	cs aaa 
  4160f3:	fsubr  DWORD PTR [eax+0x30]
  4160f6:	sub    DWORD PTR [esi-0x59],edi
  4160f9:	pop    ds
  4160fa:	and    al,0xaf
  4160fc:	adc    al,0x50
  4160fe:	jp     0x41615e
  416100:	mov    esp,0xb2b43b4c
  416105:	js     0x416139
  416107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416108:	inc    eax
  416109:	fwait
  41610a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41610b:	aam    0x3c
  41610d:	cmp    eax,0x587b73c5
  416112:	cmc    
  416113:	cwde   
  416114:	xlat   BYTE PTR ds:[ebx]
  416115:	and    ch,BYTE PTR [ecx+0x2]
  416118:	in     al,0x74
  41611a:	jmp    0x90dbc3ed
  41611f:	and    DWORD PTR [esi],ebp
  416121:	jle    0x41615c
  416123:	repz cmp al,0x5a
  416126:	mov    ebp,0x41cb901b
  41612b:	inc    ebp
  41612c:	test   DWORD PTR [ebx+0x26d9ac81],edi
  416132:	add    ecx,eax
  416134:	mov    edx,0xe9fa3ad6
  416139:	ja     0x416106
  41613b:	and    edi,edi
  41613d:	mov    ebx,0xef69567f
  416142:	ins    DWORD PTR es:[edi],dx
  416143:	dec    ebx
  416144:	rcl    DWORD PTR [esi+0x73696e86],cl
  41614a:	pop    esi
  41614b:	and    BYTE PTR [ebx],ch
  41614d:	lahf   
  41614e:	push   ss
  41614f:	xor    esp,edx
  416151:	pop    ds
  416152:	ret    0xc141
  416155:	sbb    eax,0x7f2ad0c9
  41615a:	push   ebx
  41615b:	xlat   BYTE PTR ds:[ebx]
  41615c:	nop
  41615d:	arpl   WORD PTR [esi+0x19],sp
  416160:	repz mov bl,0x91
  416163:	jecxz  0x416167
  416165:	lahf   
  416166:	(bad)  
  416167:	sub    dh,BYTE PTR [ebx+0x4b]
  41616a:	pop    ecx
  41616b:	inc    ebp
  41616c:	js     0x4161af
  41616e:	inc    esi
  41616f:	and    dh,BYTE PTR [edx-0x69fc9c50]
  416175:	fs ret 0xe8dc
  416179:	or     bh,BYTE PTR [edi]
  41617b:	jo     0x416165
  41617d:	imul   esp,esp,0xf1bbbf28
  416183:	ror    DWORD PTR [ebx],0xd7
  416186:	into   
  416187:	mov    es,WORD PTR [eax]
  416189:	jns    0x416194
  41618b:	nop
  41618c:	jo     0x4161b3
  41618e:	push   ecx
  41618f:	(bad)  
  416190:	mov    ah,0x11
  416192:	stc    
  416193:	jns    0x416206
  416195:	inc    edi
  416196:	jbe    0x4161ea
  416198:	sbb    BYTE PTR ds:0x867488e3,0xc0
  41619f:	adc    eax,0xa685500e
  4161a4:	and    eax,0x3373a633
  4161a9:	aaa    
  4161aa:	pop    eax
  4161ab:	ds fwait
  4161ad:	mov    ah,0xe7
  4161af:	jne    0x416169
  4161b1:	push   ds
  4161b2:	xchg   dl,bl
  4161b4:	xor    cl,BYTE PTR [esi]
  4161b6:	repnz pop es
  4161b8:	mov    dl,0x44
  4161ba:	ins    BYTE PTR es:[edi],dx
  4161bb:	push   ss
  4161bc:	inc    edi
  4161bd:	adc    eax,0x2e31f852
  4161c3:	cmp    al,0x2e
  4161c5:	pop    ebx
  4161c6:	sbb    al,0xaa
  4161c8:	aaa    
  4161c9:	test   eax,0xa5d517e2
  4161ce:	rcl    DWORD PTR [esi+0xf174a72],cl
  4161d4:	inc    esp
  4161d5:	mov    dl,0x9e
  4161d7:	push   0xd084e792
  4161dc:	sbb    DWORD PTR [edx+0x33],eax
  4161df:	std    
  4161e0:	or     BYTE PTR [esi+0x4e],cl
  4161e3:	cmp    al,al
  4161e5:	jbe    0x4161fc
  4161e7:	mov    esp,0xac7eaf22
  4161ed:	sub    eax,0xcf43ada
  4161f2:	push   ebx
  4161f3:	and    al,0xb9
  4161f5:	and    dl,0xdf
  4161f8:	adc    BYTE PTR [edx],dh
  4161fa:	stc    
  4161fb:	scas   eax,DWORD PTR es:[edi]
  4161fc:	mov    eax,DWORD PTR [edx+0x76]
  4161ff:	(bad)  
  416200:	stos   DWORD PTR es:[edi],eax
  416201:	pop    ecx
  416202:	iret   
  416203:	test   eax,0x4654d6eb
  416208:	sub    BYTE PTR [edx+0x13],al
  41620b:	fwait
  41620c:	in     al,dx
  41620d:	push   esi
  41620e:	mov    edi,0x2754c639
  416213:	iret   
  416214:	mov    ?,WORD PTR [esi-0x46f5b349]
  41621a:	dec    edx
  41621b:	cli    
  41621c:	in     eax,0xd0
  41621e:	xor    edx,DWORD PTR ds:0xc4e55e70
  416224:	fmulp  st(6),st
  416226:	jecxz  0x416216
  416228:	sbb    al,0xa5
  41622a:	ss cmc 
  41622c:	clc    
  41622d:	cmp    eax,DWORD PTR [ecx]
  41622f:	mov    WORD PTR [esi],fs
  416231:	xchg   ah,bh
  416233:	push   es
  416234:	fwait
  416235:	mov    cl,0x1c
  416237:	xor    DWORD PTR [eax-0x2320bd53],0xffffff98
  41623e:	imul   ebp,DWORD PTR [ebp-0x577bedcf],0x49
  416245:	pop    ss
  416246:	lea    ecx,ds:0xa0275535
  41624c:	pop    esp
  41624d:	out    0xba,eax
  41624f:	push   edx
  416250:	mov    gs,WORD PTR [edi]
  416252:	fistp  WORD PTR [ebx-0x2]
  416255:	and    esi,ebp
  416257:	ret    
  416258:	push   eax
  416259:	push   ax
  41625b:	pop    edi
  41625c:	fisubr DWORD PTR [ecx+edi*8]
  41625f:	mov    WORD PTR [ebx+ebp*1],?
  416262:	shr    DWORD PTR [ecx],1
  416264:	adc    ebp,0xffffffcd
  416267:	xor    al,0xdc
  416269:	adc    bl,BYTE PTR [esi-0x6fd095ef]
  41626f:	ins    DWORD PTR es:[edi],dx
  416270:	xor    DWORD PTR [eax-0x18],ebp
  416273:	sub    DWORD PTR [eax],ebp
  416275:	xor    BYTE PTR [esi-0x65],ch
  416278:	test   al,0x5b
  41627a:	jp     0x4162b2
  41627c:	dec    edi
  41627d:	or     al,0xff
  41627f:	and    BYTE PTR [ecx+edi*1-0x6a],al
  416283:	sti    
  416284:	(bad)  
  416285:	mov    bh,0xec
  416287:	addr16 push esp
  416289:	cmp    BYTE PTR [ebx-0x390ccc4c],ah
  41628f:	dec    esp
  416290:	inc    ebp
  416291:	add    eax,0xc5d05ac3
  416296:	jl     0x4162be
  416298:	cs or  ebx,eax
  41629b:	or     al,0x5e
  41629d:	popa   
  41629e:	mov    cl,0xa5
  4162a0:	mov    dh,0xef
  4162a2:	cmp    DWORD PTR [edi-0x1377acac],esp
  4162a8:	in     eax,0x28
  4162aa:	iret   
  4162ab:	lods   eax,DWORD PTR ds:[esi]
  4162ac:	imul   ebp,esi,0x690fc653
  4162b2:	scas   al,BYTE PTR es:[edi]
  4162b3:	pop    eax
  4162b4:	inc    esp
  4162b5:	loop   0x416279
  4162b7:	ja     0x4162fc
  4162b9:	jmp    0x6e9f2b79
  4162be:	rcl    BYTE PTR [edx-0x33f9b185],1
  4162c4:	retf   
  4162c5:	cwde   
  4162c6:	jp     0x4162cb
  4162c8:	or     BYTE PTR [ebx-0x5d],0x8d
  4162cc:	inc    ecx
  4162cd:	xor    esp,esi
  4162cf:	test   edi,edx
  4162d1:	retf   0x7f0a
  4162d4:	fimul  WORD PTR [ecx-0x77]
  4162d7:	pop    ecx
  4162d8:	(bad)  
  4162d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162da:	ins    BYTE PTR es:[edi],dx
  4162db:	aas    
  4162dc:	push   0x680779d1
  4162e1:	je     0x416291
  4162e3:	les    esp,FWORD PTR [eax+edx*2-0x10a2aa02]
  4162ea:	stos   BYTE PTR es:[edi],al
  4162eb:	xchg   edx,eax
  4162ec:	inc    ebx
  4162ed:	sub    al,0x3c
  4162ef:	outs   dx,DWORD PTR ds:[esi]
  4162f0:	jo     0x41631c
  4162f2:	push   edi
  4162f3:	iret   
  4162f4:	xchg   DWORD PTR [esi-0x36],ebp
  4162f7:	sti    
  4162f8:	add    al,0xc7
  4162fa:	mov    ebp,0xd6bc06f4
  4162ff:	inc    edx
  416300:	sbb    BYTE PTR [edi+0x56],0x42
  416304:	out    dx,eax
  416305:	in     al,dx
  416306:	sbb    eax,0xc4306f0e
  41630b:	add    ch,ah
  41630d:	lock cmp BYTE PTR [ebp+0x3],0x7e
  416312:	mov    ecx,0x57728f4a
  416317:	ret    0x483b
  41631a:	out    0xd6,al
  41631c:	lds    esi,FWORD PTR [ecx+0x659dc76b]
  416322:	add    al,0x7f
  416324:	inc    esi
  416325:	jl     0x416369
  416327:	leave  
  416328:	into   
  416329:	adc    bl,BYTE PTR [esi]
  41632b:	xor    DWORD PTR [ebx-0x62],ebx
  41632e:	inc    ebp
  41632f:	dec    esp
  416330:	in     al,0xf7
  416332:	lods   eax,DWORD PTR ds:[esi]
  416333:	inc    ebp
  416334:	sti    
  416335:	(bad)  
  416336:	jbe    0x416390
  416338:	mov    WORD PTR [eax-0x11],ss
  41633b:	inc    esp
  41633c:	pusha  
  41633d:	add    dh,al
  41633f:	jg     0x41637f
  416341:	cmp    BYTE PTR [ebp-0x17],cl
  416344:	mov    ch,0xc2
  416346:	popf   
  416347:	cs in  eax,dx
  416349:	xchg   esp,eax
  41634a:	jmp    0x1fd8ff5d
  41634f:	mov    eax,0x12da1742
  416354:	jae    0x416346
  416356:	sub    BYTE PTR [edi-0x6b],al
  416359:	je     0x4163c7
  41635b:	jge    0x416384
  41635d:	fistp  DWORD PTR [edx-0x4c6706b7]
  416363:	out    dx,eax
  416364:	or     BYTE PTR [ecx],ch
  416366:	mov    ebx,0xe239b134
  41636b:	(bad)  
  41636c:	lahf   
  41636d:	inc    edx
  41636e:	ja     0x41633f
  416370:	cmp    BYTE PTR [esi+0x45],0xd7
  416374:	adc    al,0x6c
  416376:	std    
  416377:	fimul  DWORD PTR [esi]
  416379:	xor    edi,DWORD PTR [esi-0x2e3e1f0a]
  41637f:	daa    
  416380:	stc    
  416381:	loopne 0x416366
  416383:	cwde   
  416384:	fidiv  DWORD PTR [eax-0x52]
  416387:	ds jb  0x416405
  41638a:	repz imul edx,DWORD PTR [eax+0xa1b1928],0x7224522a
  416395:	paddq  mm2,QWORD PTR [ecx]
  416398:	jmp    0x6785fbd1
  41639d:	ds int 0xef
  4163a0:	test   al,0x3f
  4163a2:	retf   
  4163a3:	scas   eax,DWORD PTR es:[edi]
  4163a4:	lds    edi,FWORD PTR [eax]
  4163a6:	cmp    DWORD PTR [ecx-0x36a1075b],eax
  4163ac:	test   al,0x9
  4163ae:	fs out dx,eax
  4163b0:	mov    bh,0x2f
  4163b2:	sahf   
  4163b3:	(bad)  
  4163b4:	pop    ebp
  4163b5:	int3   
  4163b6:	xchg   esi,eax
  4163b7:	or     al,0x90
  4163b9:	(bad)  
  4163ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163bb:	hlt    
  4163bc:	xchg   edx,eax
  4163bd:	jne    0x416394
  4163bf:	sub    ch,ch
  4163c1:	adc    eax,0xf0480fbf
  4163c6:	popf   
  4163c7:	jp     0x4163a8
  4163c9:	pop    es
  4163ca:	sbb    ecx,DWORD PTR [ebx-0x17]
  4163cd:	mov    ah,0xf4
  4163cf:	loop   0x41643e
  4163d1:	jne    0x416367
  4163d3:	fwait
  4163d4:	xor    DWORD PTR [ecx+edx*4-0x10],ebp
  4163d8:	jae    0x4163e8
  4163da:	jecxz  0x4163e7
  4163dc:	push   0x827bbcdd
  4163e1:	pop    esp
  4163e2:	sub    al,0x3e
  4163e4:	mov    bl,0xb1
  4163e6:	(bad)  
  4163e8:	and    BYTE PTR [esi],0xb
  4163eb:	clc    
  4163ec:	or     eax,0x74a9b702
  4163f1:	and    ch,BYTE PTR [eax+0x36]
  4163f4:	sahf   
  4163f5:	sub    eax,0x55885dc2
  4163fa:	aam    0x1b
  4163fc:	jl     0x4163dc
  4163fe:	mov    al,0xb
  416400:	and    bh,BYTE PTR [esp+ebp*2-0x720ebc2f]
  416407:	or     bh,BYTE PTR [ecx-0x5f]
  41640a:	add    eax,0x346e482c
  41640f:	outs   dx,BYTE PTR ds:[esi]
  416410:	mov    dh,0x9d
  416412:	xor    dh,BYTE PTR [ecx]
  416414:	jbe    0x416484
  416416:	stos   BYTE PTR es:[edi],al
  416417:	mov    ds:0x334d2031,eax
  41641c:	test   eax,0x67110fdc
  416421:	lahf   
  416422:	call   0x8247:0xfa6b0038
  416429:	jecxz  0x416495
  41642b:	mov    edx,0xa4c87860
  416430:	fist   DWORD PTR [esi-0x73f45b6e]
  416436:	stos   DWORD PTR es:[edi],eax
  416437:	push   es
  416438:	inc    esi
  416439:	in     al,0x20
  41643b:	push   eax
  41643c:	aam    0xe6
  41643e:	sahf   
  41643f:	es inc edi
  416441:	out    dx,eax
  416442:	loopne 0x4163e7
  416444:	div    DWORD PTR [edx]
  416446:	push   eax
  416447:	inc    esp
  416448:	sub    cl,BYTE PTR [edx-0x2fd44099]
  41644e:	mov    esi,0x9fc64666
  416453:	cmp    BYTE PTR [edi+0x19],bh
  416456:	mov    ebx,0x4406dc79
  41645b:	adc    eax,0x8aa90530
  416460:	and    BYTE PTR [eax+0x4d],bl
  416463:	call   0x24e6458
  416468:	pop    esp
  416469:	inc    BYTE PTR [esi+0x53]
  41646c:	rcr    DWORD PTR [eax+0x4cbf3e5a],cl
  416472:	sub    al,0xe9
  416474:	cld    
  416475:	ja     0x41643e
  416477:	into   
  416478:	(bad)  
  416479:	xchg   ebx,eax
  41647a:	mov    al,0xf8
  41647c:	and    eax,0x4172a2b7
  416481:	jne    0x4164fc
  416483:	xor    al,0x79
  416485:	sbb    ecx,ecx
  416487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416488:	push   esp
  416489:	in     eax,dx
  41648a:	sti    
  41648b:	mov    BYTE PTR [eax+0x388ec062],0xac
  416492:	jp     0x416467
  416494:	jb     0x416476
  416496:	das    
  416497:	and    edx,DWORD PTR [edi+esi*8+0x7b]
  41649b:	jb     0x41648e
  41649d:	mov    BYTE PTR [ecx-0x10],cl
  4164a0:	into   
  4164a1:	mov    DWORD PTR [esi-0x34f62f84],esp
  4164a7:	test   DWORD PTR [esi-0x75],edx
  4164aa:	mov    bh,0x3
  4164ac:	xchg   esp,esp
  4164ae:	aas    
  4164af:	pusha  
  4164b0:	bound  edx,QWORD PTR [edi+0x48247f9f]
  4164b6:	repnz adc al,0x1c
  4164b9:	push   cs
  4164ba:	clc    
  4164bb:	add    DWORD PTR [edi+0x7ae28d27],eax
  4164c1:	sub    edi,DWORD PTR [eax+ebp*8]
  4164c4:	das    
  4164c5:	in     al,dx
  4164c6:	xor    BYTE PTR [edx+eax*1-0x56],bl
  4164ca:	push   ebx
  4164cb:	jne    0x416497
  4164cd:	loop   0x416479
  4164cf:	jnp    0x4164cd
  4164d1:	imul   eax,DWORD PTR [eax],0x1cb0da3c
  4164d7:	pop    eax
  4164d8:	push   ebx
  4164d9:	aad    0xc9
  4164db:	mov    ch,0x33
  4164dd:	lods   eax,DWORD PTR ds:[esi]
  4164de:	mov    bh,0x55
  4164e0:	mov    ebx,0x4d551104
  4164e5:	and    al,0x41
  4164e7:	ret    
  4164e8:	push   esp
  4164e9:	adc    ebp,DWORD PTR ds:0xfd6e07e0
  4164ef:	xchg   edi,eax
  4164f0:	mov    WORD PTR [ebx+eax*4-0x55],ds
  4164f4:	and    DWORD PTR [edx+0x28201f13],ebx
  4164fa:	and    DWORD PTR [edi+edi*1],esp
  4164fd:	mov    DWORD PTR [eax+0x2c],ebp
  416500:	sub    eax,0x4ffccccf
  416505:	sbb    BYTE PTR [ecx+0x67],0xb6
  416509:	adc    BYTE PTR [ebx+0x716e9318],bh
  41650f:	pushf  
  416510:	adc    al,0x0
  416512:	leave  
  416513:	sbb    cl,BYTE PTR [ebp+0x27223845]
  416519:	sbb    BYTE PTR [ecx],ah
  41651b:	push   0x3d85aa9
  416520:	mov    al,0x5a
  416522:	add    DWORD PTR [edi+0x6b7a90a8],0x70cf073d
  41652c:	mov    esi,0x945d6045
  416531:	imul   ebp,DWORD PTR [si],0xee1ad9a4
  416538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416539:	mov    BYTE PTR [eax-0x6d],ah
  41653c:	pop    eax
  41653d:	mov    edx,0xc4e8cba3
  416542:	test   BYTE PTR [edx-0x3ba149e9],ah
  416548:	sub    ebx,ecx
  41654a:	retf   0xbdd8
  41654d:	imul   eax,DWORD PTR [edx+0x730a20fd],0x50793d7d
  416557:	dec    edx
  416558:	or     BYTE PTR [esi],bh
  41655a:	jns    0x41653a
  41655c:	xor    DWORD PTR [ebx+ecx*2+0x4d],ecx
  416560:	and    edi,DWORD PTR [ebx-0x13387982]
  416566:	daa    
  416567:	mov    ds:0xf4ee5868,al
  41656c:	mov    al,0x26
  41656e:	xor    eax,0x5c610e54
  416573:	and    eax,0x5d640d16
  416578:	dec    esp
  416579:	dec    BYTE PTR [ecx-0x11]
  41657c:	mov    eax,0xccd1fb61
  416581:	fimul  DWORD PTR [ecx+0x52bb75e6]
  416587:	lea    esi,[ecx]
  416589:	dec    ecx
  41658a:	sahf   
  41658b:	nop
  41658c:	mov    edi,0x92d5204c
  416591:	adc    edi,edi
  416593:	mov    bl,0x51
  416595:	sbb    al,0x5a
  416597:	(bad)  
  416598:	mov    edx,0xb68a9fcd
  41659d:	cmp    esp,DWORD PTR [edi+0x786ffb0e]
  4165a3:	jae    0x4165f7
  4165a5:	push   0x13
  4165a7:	std    
  4165a8:	lock xor DWORD PTR [ecx+0x303fb99a],0xa567cb76
  4165b3:	mov    ch,0xe3
  4165b5:	jnp    0x41660b
  4165b7:	and    eax,0x9b20beb2
  4165bc:	cld    
  4165bd:	and    BYTE PTR [esi-0x3aa88e60],ah
  4165c3:	mov    dh,0x11
  4165c5:	into   
  4165c6:	mov    bl,0xc6
  4165c8:	jecxz  0x416595
  4165ca:	jg     0x4165ce
  4165cc:	adc    dh,BYTE PTR [edi]
  4165ce:	(bad)  [edi+0x64]
  4165d1:	add    eax,ecx
  4165d3:	push   edi
  4165d4:	sub    eax,0x822b18d6
  4165d9:	test   BYTE PTR [edx+0x179d9023],dl
  4165df:	dec    ebp
  4165e0:	add    bl,bh
  4165e2:	pop    esi
  4165e3:	adc    DWORD PTR [esi-0x927cf96],ebp
  4165e9:	jns    0x41661e
  4165eb:	inc    edx
  4165ec:	mov    eax,ds:0x7d0c9ae1
  4165f1:	ss xor al,0x9f
  4165f4:	jle    0x416644
  4165f6:	mov    dl,0x96
  4165f8:	loop   0x4165a4
  4165fa:	xor    eax,0x32b41b38
  4165ff:	test   eax,0x1b3ee430
  416604:	push   0xffffffcb
  416606:	(bad)  
  416607:	and    bl,BYTE PTR [ecx+0x16a85d41]
  41660d:	mov    dh,0xd7
  41660f:	push   esi
  416610:	push   cs
  416611:	mov    ch,0x1c
  416613:	sub    DWORD PTR [ecx-0xd],ecx
  416616:	mov    ch,0xfa
  416618:	sbb    ah,BYTE PTR [edi+0x2b0ec982]
  41661e:	cwde   
  41661f:	sahf   
  416620:	lock shl edx,1
  416623:	mov    ch,0x27
  416625:	out    0x1e,al
  416627:	test   eax,0x227ad825
  41662c:	and    DWORD PTR [ebp+0x50],0xffffffb0
  416630:	push   esi
  416631:	sbb    DWORD PTR [ebx],ecx
  416633:	aad    0x34
  416635:	mov    DWORD PTR [edx],ecx
  416637:	js     0x41663d
  416639:	xchg   ebp,eax
  41663a:	xlat   BYTE PTR ds:[ebx]
  41663b:	pcmpgtb mm5,mm6
  41663e:	popf   
  41663f:	cld    
  416640:	es mov edi,ecx
  416643:	and    BYTE PTR [edi],ah
  416645:	pop    edi
  416646:	cmp    al,0xdd
  416648:	adc    al,0xcd
  41664a:	repz add eax,0xc1d2e593
  416650:	fldenv [eax-0x6bcd1ca9]
  416656:	ss mov eax,0x1411b7c0
  41665c:	je     0x4166b9
  41665e:	xchg   DWORD PTR [eax],edx
  416660:	stos   BYTE PTR es:[edi],al
  416661:	scas   al,BYTE PTR es:[edi]
  416662:	dec    esp
  416663:	fs mov ebx,0xf4203b5
  416669:	jb     0x4165fc
  41666b:	outs   dx,BYTE PTR ds:[esi]
  41666c:	pop    es
  41666d:	xor    BYTE PTR [edi+0x71],ch
  416670:	xlat   BYTE PTR ds:[ebx]
  416671:	leave  
  416672:	mov    eax,DWORD PTR [edi]
  416674:	dec    esp
  416675:	pop    eax
  416676:	and    al,0x67
  416678:	aaa    
  416679:	retf   0x8bc
  41667c:	enter  0x3077,0xbd
  416680:	fisub  DWORD PTR [edx+edx*2-0x1c22f9fc]
  416687:	sub    eax,DWORD PTR [eax+0x502e2d41]
  41668d:	inc    edx
  41668e:	pop    ss
  41668f:	loope  0x4166c9
  416691:	mov    ah,0xac
  416693:	mov    eax,eax
  416695:	mov    bl,0xba
  416697:	aaa    
  416698:	mov    ah,0x3
  41669a:	push   0x67f6326c
  41669f:	ja     0x41671c
  4166a1:	gs add al,0xa4
  4166a4:	jg     0x41664e
  4166a6:	ja     0x4166d1
  4166a8:	std    
  4166a9:	mov    edi,DWORD PTR ds:0x4cefbf91
  4166af:	cmp    DWORD PTR [ebx+0x53],edi
  4166b2:	pop    ds
  4166b3:	add    al,BYTE PTR [ebp-0xc]
  4166b6:	movhps xmm5,QWORD PTR [esi]
  4166b9:	rol    DWORD PTR [esi-0x2fa104ad],0x89
  4166c0:	xrelease mov DWORD PTR [ebp+0x5d6bc04f],eax
  4166c7:	and    al,BYTE PTR [eax]
  4166c9:	dec    esp
  4166ca:	and    al,0x10
  4166cc:	mov    edi,0xef54bad4
  4166d1:	mov    cs,WORD PTR [esi+0x66]
  4166d4:	push   ax
  4166d6:	sahf   
  4166d7:	mov    ds:0xe845ae09,al
  4166dc:	mov    gs,WORD PTR [edx+0x33f11dae]
  4166e2:	push   0x57
  4166e4:	inc    eax
  4166e5:	inc    ebx
  4166e6:	or     BYTE PTR [edx+0x52944b22],al
  4166ec:	loopne 0x416745
  4166ee:	sti    
  4166ef:	sbb    edx,DWORD PTR [esi+0x67fb67bd]
  4166f5:	stos   DWORD PTR es:[edi],eax
  4166f6:	loop   0x416741
  4166f8:	dec    edi
  4166f9:	jge    0x416743
  4166fb:	pop    eax
  4166fc:	ret    
  4166fd:	xchg   ecx,eax
  4166fe:	sbb    esp,DWORD PTR [eax]
  416700:	sub    al,BYTE PTR ds:0x4830201f
  416706:	test   eax,0x57a59ca0
  41670b:	hlt    
  41670c:	pop    eax
  41670d:	add    bh,BYTE PTR [edx]
  41670f:	add    edi,DWORD PTR [ebp+edx*8-0x24]
  416713:	mov    bl,0x10
  416715:	mov    al,ds:0xf03bb841
  41671a:	mov    eax,0xb4fa803a
  41671f:	test   DWORD PTR gs:[ebp+0x1e],0x51ee5212
  416727:	shl    eax,cl
  416729:	imul   edi,DWORD PTR [esi-0x383a3785],0xffffffed
  416730:	xchg   BYTE PTR [eax+0x56],al
  416733:	pop    ebx
  416734:	dec    esp
  416735:	cmp    BYTE PTR [edi],cl
  416737:	ret    0x8a5b
  41673a:	dec    esp
  41673b:	and    esi,DWORD PTR [esi]
  41673d:	mov    al,0x63
  41673f:	sub    BYTE PTR [edx-0x18d1725c],0xf3
  416746:	lods   eax,DWORD PTR ds:[esi]
  416747:	fisttp DWORD PTR [ebx]
  416749:	lock retf 
  41674b:	pusha  
  41674c:	js     0x4167c2
  41674e:	ret    
  41674f:	jp     0x416739
  416751:	push   edx
  416752:	adc    BYTE PTR [eax],cl
  416754:	xchg   ebx,eax
  416756:	stos   BYTE PTR es:[edi],al
  416757:	bound  esp,QWORD PTR [ebx+edi*2+0x56]
  41675b:	jmp    DWORD PTR [esi]
  41675d:	sbb    DWORD PTR [edx-0x7b72c79],esp
  416763:	fsubp  st(6),st
  416765:	pop    es
  416766:	mov    WORD PTR [edx+0x36],ss
  416769:	lods   eax,DWORD PTR ds:[esi]
  41676a:	dec    ebp
  41676b:	pop    ebx
  41676c:	ins    DWORD PTR es:[edi],dx
  41676d:	jae    0x416751
  41676f:	jecxz  0x41671f
  416771:	pop    esp
  416773:	cmp    eax,0xe1115c55
  416778:	fs std 
  41677a:	jne    0x4167dc
  41677c:	jg     0x4167b1
  41677e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41677f:	push   ebp
  416780:	jb     0x416714
  416782:	(bad)  [esi-0x60]
  416785:	fnstsw WORD PTR [ecx+0x55]
  416788:	sbb    eax,0xd552c783
  41678d:	adc    BYTE PTR [edx-0x63bd0311],al
  416793:	pop    ds
  416794:	mov    ebp,ecx
  416796:	sub    eax,0xf54f2155
  41679b:	jmp    0x41681c
  41679d:	sbb    DWORD PTR [edi+0x71d08cd9],ebx
  4167a3:	xor    al,0x33
  4167a5:	sbb    BYTE PTR [edx],0x78
  4167a8:	ret    
  4167a9:	cmp    dl,ah
  4167ab:	imul   esi,ecx,0x49
  4167ae:	in     al,dx
  4167af:	clc    
  4167b0:	aaa    
  4167b1:	and    eax,0x5730c3cb
  4167b6:	jmp    0x468e:0x2cf902d6
  4167bd:	in     eax,dx
  4167be:	bound  edi,QWORD PTR [edx+ebx*8-0x33543ae7]
  4167c5:	jns    0x41683d
  4167c7:	xor    eax,0x4b23764a
  4167cc:	arpl   WORD PTR [esi-0x72],sp
  4167cf:	retf   
  4167d0:	mov    gs:0x1c3050eb,eax
  4167d6:	adc    BYTE PTR [ebx],ch
  4167d8:	loopne 0x4167f7
  4167da:	stos   DWORD PTR es:[edi],eax
  4167db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167dc:	push   ebp
  4167dd:	outs   dx,BYTE PTR ds:[esi]
  4167de:	jl     0x4167a0
  4167e0:	mov    eax,ds:0x49d6b334
  4167e5:	mov    ebp,?
  4167e7:	cmp    dh,BYTE PTR [edi]
  4167e9:	mov    ds:0x87614e82,eax
  4167ee:	jnp    0x4167a9
  4167f0:	jns    0x4167de
  4167f2:	stos   BYTE PTR es:[edi],al
  4167f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167f4:	shl    BYTE PTR [edi+0x5334d241],cl
  4167fa:	lods   al,BYTE PTR ds:[esi]
  4167fb:	sbb    ebx,DWORD PTR [ebx+0x1]
  4167fe:	icebp  
  4167ff:	rol    BYTE PTR [ecx],1
  416801:	and    al,0x1c
  416803:	dec    esp
  416804:	popf   
  416805:	in     al,0x2
  416807:	push   es
  416808:	fld    DWORD PTR [esi-0x64]
  41680b:	jge    0x416843
  41680d:	cs mov edx,0xbd34f325
  416813:	cmp    DWORD PTR [edx],ecx
  416815:	sar    bl,cl
  416817:	and    al,0xc1
  416819:	pop    edx
  41681a:	outs   dx,DWORD PTR ds:[esi]
  41681b:	call   0x232ef813
  416820:	add    DWORD PTR [edx],esi
  416822:	frstor [esi+0x52]
  416825:	out    dx,eax
  416826:	fstp   DWORD PTR [edx+edx*8+0x3f]
  41682a:	mov    ebp,0x23a44c00
  41682f:	xor    eax,0x31b7f89a
  416834:	xchg   ecx,ecx
  416836:	stc    
  416837:	shl    eax,1
  416839:	lock aam 0xee
  41683c:	push   edx
  41683d:	test   al,0x38
  41683f:	pop    ebx
  416840:	xor    BYTE PTR [esi],bl
  416842:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416843:	jns    0x416820
  416845:	std    
  416846:	std    
  416847:	arpl   WORD PTR [edx+0x38],sp
  41684a:	les    edi,FWORD PTR [edi-0x7a]
  41684d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41684f:	pop    ebx
  416850:	icebp  
  416851:	mov    edx,0x55be5e18
  416856:	adc    DWORD PTR [edi],esi
  416858:	add    bh,dh
  41685a:	stos   BYTE PTR es:[edi],al
  41685b:	jl     0x41683a
  41685d:	mov    ch,0x8b
  41685f:	cdq    
  416860:	ret    0xe317
  416863:	les    eax,FWORD PTR [esi+0x72]
  416866:	fs int 0xe4
  416869:	add    eax,ebx
  41686b:	mov    eax,0xfd2b3d3
  416870:	fsub   DWORD PTR [eax]
  416872:	or     al,0x9c
  416874:	cmp    DWORD PTR [ebx+0x63],0x4c017e10
  41687b:	cmp    edi,DWORD PTR [edx-0x45]
  41687e:	push   esp
  41687f:	push   es
  416880:	loop   0x416876
  416882:	pop    ds
  416883:	cmp    ebx,DWORD PTR [edx+0x7]
  416886:	mov    BYTE PTR [eax+0x75fe30d],al
  41688c:	out    dx,al
  41688d:	adc    ch,BYTE PTR [ebp+eiz*8-0x37]
  416891:	jb     0x416876
  416893:	mov    cl,0x7f
  416895:	jmp    0xfa4:0x3265bb69
  41689c:	mov    WORD PTR [edi-0x57f080c4],fs
  4168a2:	jns    0x4168ac
  4168a4:	jecxz  0x4168c0
  4168a6:	ret    
  4168a7:	or     al,0x41
  4168a9:	call   0x1fea:0x34e57e37
  4168b0:	push   ebp
  4168b1:	rcl    BYTE PTR [ebp+eax*8-0x789552d1],0x7f
  4168b9:	xor    eax,0x3c4728f8
  4168be:	push   eax
  4168bf:	(bad)  
  4168c0:	or     eax,0xc3d87ccf
  4168c5:	jp     0x416851
  4168c7:	xchg   ebp,eax
  4168c8:	jmp    0x4168fa
  4168ca:	pop    edi
  4168cb:	mov    ebx,0x2ffd9d99
  4168d0:	cmp    eax,0xc26fc2bd
  4168d5:	data16 (bad) 
  4168d7:	aas    
  4168d8:	jns    0x416870
  4168da:	int3   
  4168db:	cmp    DWORD PTR ds:0x46cb6609,ebp
  4168e1:	mov    edx,0x65db763b
  4168e6:	inc    edx
  4168e7:	cmp    eax,0x6f9572d7
  4168ec:	es jg  0x4168c3
  4168ef:	fimul  WORD PTR [ecx]
  4168f1:	dec    ecx
  4168f2:	xchg   DWORD PTR [ebx-0x5beaf635],esp
  4168f8:	rcl    DWORD PTR [ecx-0x44],0x18
  4168fc:	sbb    DWORD PTR [edi+0x619b39bc],edi
  416902:	pop    ecx
  416903:	pop    edx
  416904:	jmp    0x41691c
  416906:	sahf   
  416907:	cld    
  416908:	stos   BYTE PTR es:[edi],al
  416909:	sbb    dx,sp
  41690c:	jns    0x416986
  41690e:	sbb    ecx,eax
  416910:	fld    QWORD PTR [ebx+0x44c12955]
  416916:	ss arpl bx,dx
  416919:	sub    eax,DWORD PTR [ecx-0x56fc15d0]
  41691f:	shrd   DWORD PTR ds:0x5ee0f07f,esp,cl
  416926:	sahf   
  416927:	mov    al,ds:0x6eecb964
  41692c:	dec    edx
  41692d:	ja     0x416968
  41692f:	add    DWORD PTR [ebx+edi*8-0x27],esi
  416933:	xchg   ebp,eax
  416934:	jg     0x4168cc
  416936:	sub    al,bh
  416938:	fisub  WORD PTR [ebp-0xf]
  41693b:	fisubr WORD PTR [ebx]
  41693d:	sub    eax,0x94350f79
  416942:	adc    dh,BYTE PTR [esi+0x77867fb2]
  416948:	stc    
  416949:	fisubr WORD PTR [ecx-0x34]
  41694c:	inc    eax
  41694d:	xor    ah,BYTE PTR [ebx]
  41694f:	iret   
  416950:	outs   dx,BYTE PTR ds:[esi]
  416951:	ins    DWORD PTR es:[edi],dx
  416952:	int3   
  416953:	aam    0xa9
  416955:	xor    al,0xf4
  416957:	lahf   
  416958:	sub    al,0x94
  41695a:	sbb    ah,BYTE PTR [ebx]
  41695c:	call   0xfb94:0xed93e76d
  416963:	jecxz  0x416907
  416965:	int    0xf3
  416967:	ins    DWORD PTR es:[edi],dx
  416968:	into   
  416969:	push   ds
  41696a:	xor    edi,DWORD PTR [ecx+0xc]
  41696d:	mov    cl,0x33
  41696f:	test   DWORD PTR [ebp-0x1e],eax
  416972:	add    al,0xfd
  416974:	test   al,0x91
  416976:	in     eax,dx
  416977:	test   eax,0x4552a90
  41697c:	cld    
  41697d:	dec    esi
  41697e:	cs xchg edi,eax
  416980:	outs   dx,BYTE PTR ds:[esi]
  416981:	pop    ecx
  416982:	je     0x416928
  416984:	outs   dx,DWORD PTR ds:[esi]
  416985:	mov    bl,0x49
  416987:	stos   BYTE PTR es:[edi],al
  416988:	and    BYTE PTR [edx],cl
  41698a:	ins    BYTE PTR es:[edi],dx
  41698b:	sbb    ecx,DWORD PTR [edi+0x7490c3ce]
  416991:	(bad)  
  416992:	mov    al,ds:0x57aa6576
  416997:	fisub  DWORD PTR [ebp+0x797307c4]
  41699d:	jmp    DWORD PTR [edi+ebp*1]
  4169a0:	sahf   
  4169a1:	and    DWORD PTR [ebx-0x74],ebx
  4169a4:	dec    esp
  4169a5:	inc    BYTE PTR es:[edx]
  4169a8:	push   eax
  4169a9:	mov    BYTE PTR [eax],ah
  4169ab:	adc    ah,ah
  4169ad:	aaa    
  4169ae:	addr16 mov ch,0x10
  4169b1:	or     DWORD PTR [esi+0x872691],esp
  4169b7:	dec    esi
  4169b8:	inc    edi
  4169b9:	push   ebp
  4169ba:	cmp    DWORD PTR [esi],edx
  4169bc:	mov    esp,0xb7db4747
  4169c1:	repnz (bad) 
  4169c3:	mov    BYTE PTR [eax-0x34a8a56d],ah
  4169c9:	(bad)  
  4169ca:	xchg   ecx,eax
  4169cb:	xchg   ecx,eax
  4169cc:	lock daa 
  4169ce:	or     eax,0x1bb04dc9
  4169d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169d4:	jp     0x4169b3
  4169d6:	out    dx,al
  4169d7:	sbb    bh,0x32
  4169da:	mov    dl,0xb0
  4169dc:	pop    eax
  4169dd:	jge    0x416a13
  4169df:	add    BYTE PTR fs:[ebp+eax*2+0x75],al
  4169e4:	push   ebp
  4169e5:	rol    DWORD PTR [ecx],cl
  4169e7:	push   ebp
  4169e8:	jae    0x416996
  4169ea:	inc    cx
  4169ec:	test   eax,0xb25ad117
  4169f1:	lock mov cl,0xf5
  4169f4:	pushf  
  4169f5:	cld    
  4169f6:	xor    edx,DWORD PTR [eax]
  4169f8:	xor    BYTE PTR [ecx-0x54172742],dh
  4169fe:	add    BYTE PTR [ebx],bh
  416a00:	jnp    0x416a77
  416a02:	push   ss
  416a03:	shr    BYTE PTR ds:0xd40c5659,cl
  416a09:	popf   
  416a0a:	div    ah
  416a0c:	dec    ebp
  416a0d:	sti    
  416a0e:	pop    ecx
  416a0f:	dec    esp
  416a10:	inc    esi
  416a11:	mov    dh,0x1c
  416a13:	xchg   esp,eax
  416a14:	sbb    esp,DWORD PTR [eax]
  416a16:	(bad)  
  416a17:	out    0xf3,al
  416a19:	mov    bl,0x2
  416a1b:	add    DWORD PTR [edi+0x65b6710d],0xffffffd7
  416a22:	adc    dl,BYTE PTR ds:0x20181bd1
  416a28:	(bad)  
  416a2a:	rol    BYTE PTR [edx-0x29],0x54
  416a2e:	and    esp,DWORD PTR [ecx+0x45bf699c]
  416a34:	shl    BYTE PTR [edi+0x6aa59840],1
  416a3a:	stc    
  416a3b:	push   ecx
  416a3c:	push   ebx
  416a3d:	pop    ss
  416a3e:	cs push esp
  416a40:	or     DWORD PTR [esi-0x69275b16],edx
  416a46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a47:	mov    ch,0xbf
  416a49:	call   0xb3353a98
  416a4e:	sbb    al,0xb6
  416a50:	test   DWORD PTR [edx+0x25a89cd0],ebp
  416a56:	js     0x416a33
  416a58:	(bad)  
  416a59:	sbb    esp,edi
  416a5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a5c:	fimul  DWORD PTR [ebx-0x4b2db800]
  416a62:	call   0x263251d6
  416a67:	jae    0x416a55
  416a69:	adc    BYTE PTR [ecx-0x67],0x3c
  416a6d:	push   edx
  416a6e:	push   0xd1db8822
  416a73:	inc    ebp
  416a74:	jl     0x416a65
  416a76:	stos   DWORD PTR es:[edi],eax
  416a77:	(bad)  
  416a78:	mov    ebp,ebp
  416a7a:	jecxz  0x416a09
  416a7c:	mov    edi,DWORD PTR [eax]
  416a7e:	aam    0x41
  416a80:	cmp    esi,0x32
  416a83:	mov    al,ds:0xe81eb1bc
  416a88:	js     0x416ac1
  416a8a:	mov    fs,ebp
  416a8c:	test   BYTE PTR [esi],al
  416a8e:	mov    ecx,DWORD PTR [ebp+0xf41e554]
  416a94:	cmp    esi,ebx
  416a96:	lods   eax,DWORD PTR ds:[esi]
  416a97:	fld    DWORD PTR [ebp+0x22ec10a2]
  416a9d:	or     eax,0xbfdd7172
  416aa2:	or     ah,bh
  416aa4:	inc    DWORD PTR [eax-0x1]
  416aa7:	out    0x59,al
  416aa9:	rcl    BYTE PTR [ebx+0x4c89fd30],cl
  416aaf:	push   ebx
  416ab0:	lahf   
  416ab1:	pop    edx
  416ab2:	xor    DWORD PTR [edx],0xffffffb9
  416ab5:	mov    ch,0x32
  416ab7:	adc    ecx,edx
  416ab9:	cmp    al,0xad
  416abb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416abc:	shr    cl,0xa2
  416abf:	xor    bh,BYTE PTR [edx+0x5f441e8a]
  416ac5:	leave  
  416ac6:	jge    0x416aef
  416ac8:	and    al,bl
  416aca:	(bad)  
  416acc:	mov    esi,0x6edeafe0
  416ad1:	add    cl,ch
  416ad3:	aas    
  416ad4:	push   ebx
  416ad5:	jmp    0x416aab
  416ad7:	add    dl,BYTE PTR [esi+0x43]
  416ada:	xchg   esi,eax
  416adb:	mov    ds:0xb8acca0f,al
  416ae0:	xor    DWORD PTR [ebx-0x79b715bf],ebp
  416ae6:	ret    0x94cb
  416ae9:	xor    BYTE PTR ds:0x85ed95e4,al
  416aef:	pop    eax
  416af0:	xchg   esi,eax
  416af1:	jne    0x416a8a
  416af3:	pushf  
  416af4:	adc    BYTE PTR [eax+0x77],cl
  416af7:	in     al,dx
  416af8:	mov    esi,0x48071874
  416afd:	inc    eax
  416afe:	jae    0x416b3b
  416b00:	mov    dl,0x68
  416b02:	mul    DWORD PTR [eax-0x42]
  416b05:	pop    edx
  416b06:	push   esi
  416b07:	leave  
  416b08:	jae    0x416b6a
  416b0a:	push   ecx
  416b0b:	pop    ds
  416b0c:	mov    eax,0xb3e93ed4
  416b11:	cmp    edx,DWORD PTR [ebx-0x60]
  416b14:	lea    esp,[edx*8-0xd06146]
  416b1b:	mov    edi,0x281fcd8b
  416b20:	cmp    BYTE PTR [ecx],bh
  416b22:	ret    
  416b23:	sbb    BYTE PTR [esi+0x2fca19fa],al
  416b29:	xchg   ebx,eax
  416b2a:	test   al,0x67
  416b2c:	ins    BYTE PTR es:[edi],dx
  416b2d:	(bad)  
  416b2f:	xor    eax,0xcfea2951
  416b34:	imul   esp,DWORD PTR [ecx+0x6e],0xac849491
  416b3b:	les    ebx,FWORD PTR [esi+0x726faa96]
  416b41:	dec    ecx
  416b42:	int    0xf7
  416b44:	xor    DWORD PTR [eax+0xd0f1ca4],ebp
  416b4a:	fist   DWORD PTR [ecx-0x2a937ea7]
  416b50:	sub    DWORD PTR [ebx],0xd1b57617
  416b56:	outs   dx,DWORD PTR ds:[esi]
  416b57:	and    DWORD PTR [eax+ebx*2],esp
  416b5a:	jo     0x416b12
  416b5c:	pop    edi
  416b5d:	pusha  
  416b5e:	sub    DWORD PTR [esi],ebp
  416b60:	(bad)  
  416b61:	aam    0x90
  416b63:	xchg   ecx,eax
  416b64:	jmp    0xd920:0x620bb97d
  416b6b:	xlat   BYTE PTR ds:[ebx]
  416b6c:	dec    ebx
  416b6d:	imul   esp,ebx,0xc1be6b42
  416b73:	aam    0x3
  416b75:	sti    
  416b76:	ja     0x416b67
  416b78:	mov    DWORD PTR [edx-0x7e],esp
  416b7b:	leave  
  416b7c:	rcr    BYTE PTR [esi-0x2033469c],cl
  416b82:	in     al,dx
  416b83:	clc    
  416b84:	cwde   
  416b85:	aas    
  416b86:	adc    eax,0xc2e9676
  416b8b:	cmp    BYTE PTR [eax],0xa3
  416b8e:	xor    DWORD PTR [esp+esi*1],esi
  416b91:	fld    DWORD PTR [edx+0xa6020d1]
  416b97:	mov    eax,0xd1dee83
  416b9c:	xchg   BYTE PTR [edi+0x13],bl
  416b9f:	mov    edx,0x64272fe3
  416ba4:	popa   
  416ba5:	lahf   
  416ba6:	dec    esp
  416ba7:	es cli 
  416ba9:	push   edi
  416baa:	jmp    0x416c04
  416bac:	mov    bh,0xf
  416bae:	pusha  
  416baf:	test   DWORD PTR [ecx-0x7],0x83816134
  416bb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bb7:	es inc ecx
  416bb9:	add    edi,DWORD PTR [eax-0x4bd7fadc]
  416bbf:	ret    0x9181
  416bc2:	ins    DWORD PTR es:[edi],dx
  416bc3:	xor    DWORD PTR [esp+ecx*8+0x5b79162b],edx
  416bca:	add    ebp,DWORD PTR [eax+0x1982b55c]
  416bd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bd1:	and    eax,0x37d2e25
  416bd6:	mov    ebx,0x6e5ae6e6
  416bdb:	in     eax,0xf5
  416bdd:	sbb    ecx,DWORD PTR [edi]
  416bdf:	dec    DWORD PTR [esi+0x2a53fb0d]
  416be5:	stc    
  416be6:	mov    al,0x45
  416be8:	dec    ebp
  416be9:	lods   al,BYTE PTR ds:[esi]
  416bea:	jg     0x416be0
  416bec:	mov    BYTE PTR ds:0x2080baac,dl
  416bf2:	and    dh,dh
  416bf4:	jne    0x416c10
  416bf6:	jmp    0xe297:0xaa94643d
  416bfd:	jmp    0x416bd9
  416bff:	mov    DWORD PTR [ebx-0xd],edi
  416c02:	cmp    edx,DWORD PTR [eax-0x76df22a9]
  416c08:	mov    bl,BYTE PTR ds:0xc564af2a
  416c0e:	hlt    
  416c0f:	js     0x416bd2
  416c11:	addr16 lock cs xchg edi,esp
  416c16:	jb     0x416b9d
  416c18:	mov    ds:0x1a34ae4a,al
  416c1d:	pop    ds
  416c1e:	leave  
  416c1f:	stc    
  416c20:	test   esp,esp
  416c22:	inc    esi
  416c23:	xchg   ecx,eax
  416c24:	icebp  
  416c25:	push   cs
  416c26:	mov    ecx,DWORD PTR [ecx-0x3f]
  416c29:	or     DWORD PTR [esp+ebx*1],edi
  416c2c:	ss adc eax,0xdc4dc1a5
  416c32:	(bad)  [edi+esi*2]
  416c35:	aaa    
  416c36:	popf   
  416c37:	cld    
  416c38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c39:	les    edi,FWORD PTR [ecx*1+0x5e0c7421]
  416c40:	loope  0x416c69
  416c42:	sub    eax,0x48baa14f
  416c47:	push   es
  416c48:	in     eax,dx
  416c49:	mov    dh,BYTE PTR [edx-0x3b]
  416c4c:	int    0x9a
  416c4e:	cmp    al,0x82
  416c50:	sub    eax,0xcbbe9964
  416c55:	sub    ch,BYTE PTR [esi-0x3d]
  416c58:	(bad)  
  416c59:	lds    esp,FWORD PTR [ecx+edi*8]
  416c5c:	push   edx
  416c5d:	jl     0x416c4c
  416c5f:	cdq    
  416c60:	dec    esi
  416c61:	adc    esp,DWORD PTR [ebp+0x5c]
  416c64:	jg     0x416c67
  416c66:	(bad)
  416c69:	mov    dl,0x55
  416c6b:	ja     0x416ccd
  416c6d:	push   edx
  416c6e:	repz sub al,ch
  416c71:	fsubr  DWORD PTR [ecx+0x58b209ca]
  416c77:	cmp    BYTE PTR [edi+edi*8-0x42],ah
  416c7b:	mov    BYTE PTR [edx],bh
  416c7d:	add    BYTE PTR [edi-0x64],ah
  416c80:	dec    eax
  416c81:	fadd   QWORD PTR [edx+eiz*8-0x668ce215]
  416c88:	stos   DWORD PTR es:[edi],eax
  416c89:	push   0x9
  416c8b:	xor    ch,bh
  416c8d:	sar    BYTE PTR [edx-0x6d],1
  416c90:	aad    0xd2
  416c92:	sbb    al,0x16
  416c94:	or     eax,DWORD PTR [ecx-0x38]
  416c97:	xor    eax,DWORD PTR [edi+0xa]
  416c9a:	xchg   esi,eax
  416c9b:	cwde   
  416c9c:	xchg   BYTE PTR ds:0x3add942a,bh
  416ca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ca3:	xor    bl,0x4d
  416ca6:	sub    BYTE PTR [eax-0x6e],0x16
  416caa:	adc    eax,esp
  416cac:	stos   DWORD PTR es:[edi],eax
  416cad:	sbb    edi,DWORD PTR [edx+ecx*2+0x56]
  416cb1:	sub    DWORD PTR [edi],ebp
  416cb3:	sbb    al,0xc6
  416cb5:	cld    
  416cb6:	int3   
  416cb7:	xlat   BYTE PTR ds:[ebx]
  416cb8:	retf   
  416cb9:	mov    dh,BYTE PTR [eax+eiz*2]
  416cbc:	mov    ds:0xc21cde96,al
  416cc1:	inc    ebx
  416cc2:	mov    edi,0x631ecd88
  416cc7:	push   ebx
  416cc8:	test   eax,0x4e4a8189
  416ccd:	cdq    
  416cce:	add    bh,BYTE PTR [eax+0x3665450b]
  416cd4:	pop    ebp
  416cd5:	std    
  416cd6:	inc    ebx
  416cd7:	inc    eax
  416cd8:	sbb    esp,edi
  416cda:	mov    cl,0x50
  416cdc:	dec    esi
  416cdd:	xor    eax,0x7317341c
  416ce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ce3:	ins    BYTE PTR es:[edi],dx
  416ce4:	dec    eax
  416ce5:	push   ebx
  416ce6:	mov    esp,esi
  416ce8:	int    0x7f
  416cea:	adc    eax,0x67e6a0f3
  416cef:	sub    BYTE PTR [ebp-0x6b20ef4b],ah
  416cf5:	test   eax,0x1ef726f7
  416cfa:	in     al,0xef
  416cfc:	shr    DWORD PTR [esi],0x22
  416cff:	jo     0x416d30
  416d01:	cmp    DWORD PTR [eax],ebx
  416d03:	sub    BYTE PTR [edi+0xf],dl
  416d06:	leave  
  416d07:	dec    esi
  416d08:	xor    al,0x7e
  416d0a:	rcl    BYTE PTR [ebx],0x42
  416d0d:	iret   
  416d0e:	fcmove st,st(0)
  416d10:	aas    
  416d11:	out    0xea,al
  416d13:	mov    esi,0xa1e60e5
  416d18:	jl     0x416d6b
  416d1a:	es popa 
  416d1c:	jmp    0x416d9a
  416d1e:	inc    ecx
  416d1f:	mov    ds:0xb75347ad,al
  416d24:	(bad)
  416d27:	pop    ebp
  416d28:	jle    0x416d05
  416d2a:	imul   edx,DWORD PTR ss:[ebx+ebp*4-0x2841b4c5],0x32
  416d33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d34:	sub    DWORD PTR [eax],0xb47bb1c2
  416d3a:	mov    eax,0x8baada7d
  416d3f:	lods   al,BYTE PTR ds:[esi]
  416d40:	sub    BYTE PTR [ecx+0x76],dl
  416d43:	push   ebp
  416d44:	push   es
  416d45:	in     al,dx
  416d46:	loope  0x416d7d
  416d48:	pop    eax
  416d49:	ret    0xf921
  416d4c:	dec    eax
  416d4d:	and    esi,DWORD PTR [eax+0x2c]
  416d50:	jnp    0x416ce6
  416d52:	es mov eax,0x39bd28aa
  416d58:	lds    ebx,FWORD PTR [edx+eiz*2-0x122fd24f]
  416d5f:	scas   eax,DWORD PTR es:[edi]
  416d60:	cmp    esp,esp
  416d62:	or     ebx,ebx
  416d64:	dec    edx
  416d65:	rcl    DWORD PTR [edi],1
  416d67:	push   ebx
  416d68:	neg    BYTE PTR [si+0x1d]
  416d6c:	out    dx,al
  416d6d:	xchg   ecx,edi
  416d6f:	mov    bl,0x7f
  416d71:	mov    eax,0xba37ce4b
  416d76:	mov    esi,0xae685daa
  416d7b:	and    esi,edi
  416d7d:	ds jmp 0x4d7e:0x5a8f864
  416d85:	mov    es,WORD PTR [esi+0x62230fd2]
  416d8b:	je     0x416d7d
  416d8d:	adc    ebx,edi
  416d8f:	pop    ecx
  416d90:	fcomp  QWORD PTR [esi]
  416d92:	mov    cl,0x8a
  416d94:	sbb    ch,dl
  416d96:	loop   0x416d27
  416d98:	in     al,dx
  416d99:	jl     0x416d57
  416d9b:	dec    esp
  416d9c:	into   
  416d9d:	outs   dx,BYTE PTR ds:[esi]
  416d9e:	add    BYTE PTR [ebp-0x6a],dh
  416da1:	fcom   QWORD PTR [ebp+esi*1-0x32]
  416da5:	sar    ecx,cl
  416da7:	fadd   st(7),st
  416da9:	jp     0x416de3
  416dab:	iret   
  416dac:	dec    eax
  416dad:	(bad)  
  416dae:	mov    esi,0xf8b9786e
  416db3:	sub    DWORD PTR ds:0xe9892fd8,esi
  416db9:	push   edx
  416dba:	cmp    eax,DWORD PTR [ebx-0x1dc32dd2]
  416dc0:	rol    BYTE PTR [ecx-0x2c69d803],cl
  416dc6:	rcr    ebp,1
  416dc8:	das    
  416dc9:	loope  0x416daa
  416dcb:	mov    cs,WORD PTR [eax]
  416dcd:	dec    ebp
  416dce:	xor    eax,0xe941fca7
  416dd3:	out    0xb2,eax
  416dd5:	nop
  416dd6:	rol    BYTE PTR [ecx],0x88
  416dd9:	jmp    0x416e3b
  416ddb:	punpckhwd mm5,QWORD PTR [edx-0x23]
  416ddf:	mov    ebx,?
  416de1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416de2:	pop    ebx
  416de3:	adc    al,0x2c
  416de5:	jbe    0x416d74
  416de7:	add    DWORD PTR [ecx-0x3d],esi
  416dea:	loop   0x416e09
  416dec:	outs   dx,DWORD PTR ds:[esi]
  416ded:	gs rol edx,cl
  416df0:	pop    ds
  416df1:	fist   WORD PTR [esp+edx*8-0x1a508224]
  416df8:	sbb    ah,BYTE PTR [ebp+0x49deb261]
  416dfe:	dec    edi
  416dff:	nop
  416e00:	inc    edx
  416e01:	jae    0x416e17
  416e03:	mov    esp,0x73f41f29
  416e08:	add    al,0x62
  416e0a:	daa    
  416e0b:	add    ecx,DWORD PTR [esi]
  416e0d:	shl    DWORD PTR [esi-0x36b4b532],0x10
  416e14:	mov    ecx,0x4acde070
  416e19:	and    DWORD PTR [edi+eiz*1-0x50fa6eb6],esi
  416e20:	add    ecx,ecx
  416e22:	mov    dh,0x1
  416e24:	xor    al,0xb4
  416e26:	lods   al,BYTE PTR ds:[esi]
  416e27:	adc    al,0xc3
  416e29:	test   eax,0x778ec98c
  416e2e:	mov    al,ds:0xd92a33aa
  416e33:	xor    al,0x50
  416e35:	in     al,dx
  416e36:	push   esi
  416e37:	xor    DWORD PTR [eax*2+0xffc958c],eax
  416e3e:	inc    eax
  416e3f:	ins    DWORD PTR es:[edi],dx
  416e40:	(bad)  
  416e41:	mov    ebp,0xb636275c
  416e46:	add    esi,DWORD PTR [ebx-0x15]
  416e49:	jge    0x416ddb
  416e4b:	lds    ecx,FWORD PTR [edx+0x33ce8568]
  416e51:	and    DWORD PTR [ebx+0x4997ab68],0x1aeca1b5
  416e5b:	lods   al,BYTE PTR ds:[esi]
  416e5c:	jle    0x416ed0
  416e5e:	mov    DWORD PTR [eax],esi
  416e60:	jl     0x416e57
  416e62:	cmp    eax,0x3d99ec7e
  416e67:	xchg   DWORD PTR [ecx],ebp
  416e69:	add    BYTE PTR [eax+0x3055344f],0x4c
  416e70:	fxch   st(4)
  416e72:	mov    cs,ebp
  416e74:	dec    esi
  416e75:	(bad)  
  416e77:	sahf   
  416e78:	jecxz  0x416eb1
  416e7a:	adc    BYTE PTR [ebp+0x4],bh
  416e7d:	jno    0x416e42
  416e7f:	dec    ecx
  416e80:	outs   dx,DWORD PTR ds:[esi]
  416e81:	and    BYTE PTR [esi+edi*2-0x16],dl
  416e85:	aad    0x36
  416e87:	dec    esi
  416e88:	ret    
  416e89:	jl     0x416e5c
  416e8b:	xor    ebx,edx
  416e8d:	xor    edx,DWORD PTR [ebx+eiz*1+0x6681ffaf]
  416e94:	pop    dx
  416e96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e97:	mov    esi,0x6e6caf99
  416e9c:	ficomp WORD PTR [edx+0x21]
  416e9f:	and    eax,0xe91f4da1
  416ea4:	and    BYTE PTR [edi-0x73a23f32],0x64
  416eab:	fisttp WORD PTR [esi+0x42200b6e]
  416eb1:	dec    ebp
  416eb2:	push   ebp
  416eb3:	mov    al,ds:0x68b7d93f
  416eb8:	cmp    eax,0x13d696dd
  416ebd:	out    dx,al
  416ebe:	lods   eax,DWORD PTR ds:[esi]
  416ebf:	je     0x416f2a
  416ec1:	in     eax,0xb8
  416ec3:	inc    eax
  416ec4:	pop    edi
  416ec5:	pusha  
  416ec6:	and    cl,0x30
  416ec9:	(bad)  
  416eca:	imul   eax,DWORD PTR [edx-0x7fcbe3af],0xffffffcb
  416ed1:	mov    ds:0x33c0c1ea,al
  416ed6:	add    dh,cl
  416ed8:	pop    edx
  416ed9:	out    0x5b,eax
  416edb:	mov    al,0xe3
  416edd:	sbb    eax,0xa34cac57
  416ee2:	dec    edx
  416ee3:	(bad)  
  416ee4:	mov    al,0xa5
  416ee6:	mov    edi,edx
  416ee8:	std    
  416ee9:	sub    BYTE PTR [edx],cl
  416eeb:	adc    dl,dl
  416eed:	add    DWORD PTR [edx+eax*4+0x3d],0x2e
  416ef2:	stos   DWORD PTR es:[edi],eax
  416ef3:	int    0xac
  416ef5:	hlt    
  416ef6:	pop    eax
  416ef7:	cld    
  416ef8:	push   eax
  416ef9:	pop    eax
  416efa:	es ss inc ecx
  416efd:	xchg   DWORD PTR [ebp+0x2],esp
  416f00:	xor    edx,eax
  416f02:	sub    ecx,edx
  416f04:	sub    ecx,esi
  416f06:	jmp    0x41928f
  416f0b:	adc    ah,BYTE PTR [edx+0xe708f7]
  416f11:	test   BYTE PTR [eax+0x9a72d6],bl
  416f17:	(bad)  
  416f18:	pop    eax
  416f19:	mov    dl,0x99
  416f1b:	xchg   ebx,eax
  416f1c:	inc    eax
  416f1d:	add    BYTE PTR [ebx-0x7c7ca3e9],0xc7
  416f24:	cmp    DWORD PTR [eax-0x5b],esi
  416f27:	loopne 0x416ef2
  416f29:	in     eax,0x9e
  416f2b:	dec    edi
  416f2c:	in     eax,dx
  416f2d:	(bad)  
  416f2e:	es adc eax,0x39259325
  416f34:	jmp    0x5be2cc8b
  416f39:	or     BYTE PTR [ebx-0x50621273],dh
  416f3f:	(bad)  
  416f40:	mov    ds:0x2785b979,eax
  416f45:	call   0x5532b8e6
  416f4a:	loopne 0x416f9c
  416f4c:	gs mov edi,0xddea5aa7
  416f52:	mov    eax,ds:0xef909f44
  416f57:	add    bl,ah
  416f59:	push   ebx
  416f5a:	cmp    dh,al
  416f5c:	int3   
  416f5d:	add    al,0xaf
  416f5f:	dec    ebp
  416f60:	es jns 0x416f37
  416f63:	shr    ch,1
  416f65:	add    esi,DWORD PTR ss:[ebx+ebp*8]
  416f69:	adc    eax,0xc25a3693
  416f6e:	push   ds
  416f6f:	fnsave [eax+0x6f]
  416f72:	imul   ebp,esp,0x78
  416f75:	pop    eax
  416f76:	cld    
  416f77:	add    DWORD PTR [edx],0x9c976682
  416f7d:	stc    
  416f7e:	mov    eax,0x2fdf8953
  416f83:	push   ss
  416f84:	jbe    0x416fc2
  416f86:	add    cl,BYTE PTR [ebx]
  416f88:	or     BYTE PTR [edi-0x5c],dl
  416f8b:	scas   eax,DWORD PTR es:[edi]
  416f8c:	call   0xeaaa92e8
  416f91:	push   esp
  416f92:	int3   
  416f93:	cwde   
  416f94:	jmp    0x141bb49b
  416f99:	mov    BYTE PTR [ebp+0x73773208],al
  416f9f:	jae    0x416f81
  416fa1:	cmp    edi,0xf6f7dcda
  416fa7:	jl     0x416f31
  416fa9:	xor    ch,cl
  416fab:	loope  0x416f9e
  416fad:	pop    ds
  416fae:	cmp    dl,BYTE PTR [ebp+esi*1-0x73d849ed]
  416fb5:	repnz imul esp,DWORD PTR [ecx],0xffffff84
  416fb9:	sub    ch,al
  416fbb:	mov    esi,0xc521924a
  416fc0:	les    edi,FWORD PTR [eax+0x7ad8a85b]
  416fc6:	xor    eax,ecx
  416fc8:	js     0x416f97
  416fca:	jno    0x416f7d
  416fcc:	ds fdivrp st(7),st
  416fcf:	mov    dh,0xac
  416fd1:	stos   BYTE PTR es:[edi],al
  416fd2:	push   ebp
  416fd3:	mov    esp,0x8c2c7943
  416fd8:	push   edi
  416fd9:	test   BYTE PTR [edi-0x59f198a6],cl
  416fdf:	sub    al,BYTE PTR [esi]
  416fe1:	pop    es
  416fe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fe3:	mov    dl,0xf2
  416fe5:	sbb    dh,BYTE PTR [ebx]
  416fe7:	js     0x416ff0
  416fe9:	fstp   QWORD PTR [edi-0x662b43da]
  416fef:	xor    BYTE PTR [eax],ch
  416ff1:	sub    bh,bh
  416ff3:	rcl    BYTE PTR [ecx+0x4c],1
  416ff6:	bound  eax,QWORD PTR [ecx-0x1c270dd]
  416ffc:	aas    
  416ffd:	mov    BYTE PTR [ebx],bh
  416fff:	sub    al,0x76
  417001:	push   edx
  417002:	dec    eax
  417003:	inc    esi
  417004:	and    al,0x46
  417006:	(bad)  
  417007:	or     bh,ah
  417009:	imul   ebp,DWORD PTR [edi+0x4f87c690],0x87dbe607
  417013:	dec    esp
  417014:	ffree  st(5)
  417016:	retf   
  417017:	test   BYTE PTR [ebx-0x6afb3a63],0x6f
  41701e:	xchg   DWORD PTR [ecx+ecx*2+0x187edf82],esp
  417025:	adc    BYTE PTR [edi+0x59],0xff
  417029:	cmp    eax,0xc2ceecdd
  41702e:	cwde   
  41702f:	aad    0x89
  417031:	pop    esi
  417032:	gs inc ecx
  417034:	inc    esp
  417035:	xor    al,0x17
  417037:	xor    DWORD PTR [eax+eax*2],ebp
  41703a:	retf   
  41703b:	mov    ebx,0xafcd1b5d
  417040:	iret   
  417041:	jp     0x41703a
  417043:	loop   0x41703f
  417045:	xchg   esp,eax
  417047:	dec    edx
  417048:	mov    ah,0xf4
  41704a:	adc    BYTE PTR [ebx-0x6d9649f4],dh
  417050:	sub    eax,0x652e1749
  417055:	add    eax,0x82f4fa88
  41705a:	std    
  41705b:	add    DWORD PTR [ecx+0x29],0xffffff8b
  41705f:	inc    ebx
  417060:	fistp  DWORD PTR [ebx+0x2a78329d]
  417066:	push   ecx
  417067:	stc    
  417068:	cmp    bl,BYTE PTR [eax-0x4f42e437]
  41706e:	or     BYTE PTR [edi-0x5db4fc9c],bl
  417074:	xchg   edx,eax
  417075:	aaa    
  417076:	lods   al,BYTE PTR ds:[esi]
  417077:	sbb    al,0x8e
  41707a:	adc    dh,BYTE PTR [eax-0x2c9a7732]
  417080:	add    DWORD PTR [ecx],edx
  417082:	cli    
  417083:	jno    0x4170e8
  417085:	aam    0xd4
  417087:	xchg   DWORD PTR [edx+ebp*4-0x4c91d7fd],ebx
  41708e:	add    eax,0xc4c73ab1
  417093:	sti    
  417094:	sub    DWORD PTR [edx],edi
  417096:	(bad)  
  417097:	jb     0x4170f7
  417099:	or     al,al
  41709b:	inc    ebx
  41709c:	adc    al,0x46
  41709e:	mov    ds:0xf96d9f76,al
  4170a3:	in     al,0xfd
  4170a5:	adc    eax,0x4f518f6f
  4170aa:	jmp    0x1d3d:0x5aa9b8ac
  4170b1:	xchg   bl,bh
  4170b3:	jg     0x417132
  4170b5:	jo     0x4170a2
  4170b7:	pop    edi
  4170b8:	and    al,0xea
  4170ba:	loopne 0x417087
  4170bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170bd:	sub    ebp,DWORD PTR [edi-0x52]
  4170c0:	sbb    al,0x7d
  4170c2:	adc    DWORD PTR ds:0x4c19fd50,ebp
  4170c8:	push   ebx
  4170c9:	pop    es
  4170ca:	cdq    
  4170cb:	pop    edi
  4170cc:	xchg   di,ax
  4170ce:	inc    ecx
  4170cf:	inc    dl
  4170d1:	in     eax,dx
  4170d2:	aad    0x10
  4170d4:	lods   al,BYTE PTR ds:[esi]
  4170d5:	push   esp
  4170d6:	lods   al,BYTE PTR ds:[esi]
  4170d7:	push   cs
  4170d8:	mov    eax,0xa4340fd
  4170dd:	pop    ds
  4170de:	mov    dl,0x6d
  4170e0:	fimul  WORD PTR [ebx]
  4170e2:	addr16 dec ecx
  4170e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170e5:	adc    eax,0x82223667
  4170ea:	adc    ah,BYTE PTR [ecx+0x52]
  4170ed:	stos   DWORD PTR es:[edi],eax
  4170ee:	cmp    cl,0x96
  4170f1:	pop    edx
  4170f2:	stc    
  4170f3:	and    al,0xc0
  4170f5:	neg    BYTE PTR [ebx+0x557e57cc]
  4170fb:	cmc    
  4170fc:	dec    ecx
  4170fd:	pushw  ds
  4170ff:	aas    
  417100:	iret   
  417101:	out    dx,al
  417102:	pop    ss
  417103:	sub    al,0x6
  417105:	cmp    dh,BYTE PTR [esi-0xe]
  417108:	jg     0x417131
  41710a:	jae    0x417172
  41710c:	cmp    al,0xd0
  41710e:	lds    esp,FWORD PTR [edi+0x11]
  417111:	sar    edx,cl
  417113:	and    bl,dh
  417115:	lea    edi,[edi+eax*2-0xc]
  417119:	je     0x41715e
  41711b:	hlt    
  41711c:	pop    ds
  41711d:	cmp    DWORD PTR [ebp+0x35396b51],ebp
  417123:	dec    eax
  417124:	data16 icebp 
  417126:	or     BYTE PTR [esi+0x5e],dl
  417129:	pop    ecx
  41712a:	popa   
  41712b:	mov    edx,DWORD PTR [ecx-0x2]
  41712e:	stc    
  41712f:	arpl   WORD PTR [ebx-0xd],si
  417132:	xchg   ebx,eax
  417133:	dec    edx
  417134:	ds (bad) 
  417136:	fcomp  QWORD PTR [ecx]
  417138:	pop    es
  417139:	mov    cl,0x95
  41713b:	outs   dx,DWORD PTR ss:[esi]
  41713d:	sahf   
  41713e:	arpl   di,bx
  417140:	mov    ecx,0x5689f5b
  417145:	stos   DWORD PTR es:[edi],eax
  417146:	xor    DWORD PTR [esi+0x4d01d1d1],0x24
  41714d:	add    BYTE PTR [ebx],dh
  41714f:	neg    edx
  417151:	mov    ch,0x85
  417153:	cmp    BYTE PTR [eax],0x53
  417156:	inc    edx
  417157:	mov    al,0x65
  417159:	lods   eax,DWORD PTR ds:[esi]
  41715a:	pop    ds
  41715b:	retf   0x73d1
  41715e:	dec    edi
  41715f:	push   cs
  417160:	and    esp,DWORD PTR [eax+ecx*4]
  417163:	jae    0x417163
  417165:	sub    ah,dh
  417167:	repnz or BYTE PTR [esp+ebx*1-0x5a86107e],0x60
  417170:	inc    esp
  417171:	test   eax,0x88f12b80
  417176:	sub    esp,ebx
  417178:	lods   eax,DWORD PTR ds:[esi]
  417179:	inc    ecx
  41717a:	mul    DWORD PTR [esi]
  41717c:	sti    
  41717d:	xor    BYTE PTR [ecx],bl
  41717f:	sti    
  417180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417181:	out    dx,al
  417182:	sub    ebp,DWORD PTR [ecx+0x57]
  417185:	std    
  417186:	bound  eax,QWORD PTR [ecx-0x612a7a6c]
  41718c:	aad    0xef
  41718e:	iret   
  41718f:	int    0x14
  417191:	jbe    0x417120
  417193:	scas   eax,DWORD PTR es:[edi]
  417194:	(bad)
  417198:	cmc    
  417199:	push   edx
  41719a:	in     eax,0x77
  41719c:	fsubp  st(1),st
  41719e:	dec    DWORD PTR [ecx-0x60cd7026]
  4171a4:	in     eax,0xaf
  4171a6:	test   edi,ebx
  4171a8:	icebp  
  4171a9:	and    dl,BYTE PTR [ecx]
  4171ab:	jle    0x4171eb
  4171ad:	int    0x1c
  4171af:	add    al,0xfa
  4171b1:	stc    
  4171b2:	push   ecx
  4171b3:	jmp    0x32ef56ba
  4171b8:	mov    ds:0xd490f0c2,al
  4171bd:	jbe    0x4171c4
  4171bf:	sbb    BYTE PTR [edi+0x66],al
  4171c2:	retf   0xc22c
  4171c5:	dec    ecx
  4171c6:	sti    
  4171c7:	lea    esp,[edi-0x63a7eb4d]
  4171cd:	xchg   esi,eax
  4171ce:	jno    0x417241
  4171d0:	pop    eax
  4171d1:	mov    cl,0xcf
  4171d3:	loop   0x4171de
  4171d5:	cli    
  4171d6:	mov    esi,DWORD PTR [ebx+0x2bef6b5c]
  4171dc:	mov    edx,0xa059d9c2
  4171e1:	jbe    0x41724a
  4171e3:	jmp    0x41723b
  4171e5:	ret    
  4171e6:	dec    ebp
  4171e7:	mov    ebx,0xdf41fd3c
  4171ec:	sub    eax,0xcdcdda3
  4171f1:	test   eax,0x4e01b6e1
  4171f6:	or     DWORD PTR [eax],0x16c9827a
  4171fc:	(bad)  
  4171fd:	xchg   ebp,eax
  4171fe:	jno    0x4171c9
  417200:	call   0xbe7093b9
  417205:	mov    edx,0x64b8950f
  41720a:	imul   edi,DWORD PTR [ebp-0x4f],0x83c964a6
  417211:	adc    BYTE PTR [edi],dl
  417213:	call   0x5af5:0xf7939651
  41721a:	sub    bh,al
  41721c:	std    
  41721d:	push   ebx
  41721e:	dec    esp
  41721f:	ret    
  417220:	mov    ds:0x4e309b6c,eax
  417225:	loopne 0x417214
  417227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417228:	cld    
  417229:	repnz outs dx,DWORD PTR ds:[esi]
  41722b:	ins    DWORD PTR es:[edi],dx
  41722c:	adc    BYTE PTR [ecx],0x68
  41722f:	jecxz  0x417255
  417231:	sbb    BYTE PTR [edi-0x1cccb298],dl
  417237:	aam    0x67
  417239:	jle    0x41728a
  41723b:	rcl    BYTE PTR [edi+0x35],1
  41723e:	ja     0x41729f
  417240:	dec    ebp
  417241:	aaa    
  417242:	mov    ebp,0x31769766
  417247:	iret   
  417248:	outs   dx,BYTE PTR ds:[esi]
  417249:	fsub   QWORD PTR [esi+0x73]
  41724c:	(bad)  [ebp-0x32]
  41724f:	cmp    dl,BYTE PTR [edx+0x1782da70]
  417255:	inc    ecx
  417256:	lods   al,BYTE PTR ds:[esi]
  417257:	push   0xb76e1a05
  41725c:	cli    
  41725d:	xor    DWORD PTR [ecx],ebx
  41725f:	jle    0x41724f
  417261:	mov    BYTE PTR ds:0xfe7549ca,bl
  417267:	pushf  
  417268:	adc    eax,0x788de28f
  41726d:	sbb    eax,0x68a17087
  417272:	inc    ebp
  417273:	inc    eax
  417274:	jno    0x417257
  417276:	and    al,BYTE PTR [ebx+0x2070da44]
  41727c:	je     0x417247
  41727e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41727f:	aaa    
  417280:	dec    ecx
  417281:	push   ebx
  417282:	mov    ds:0x4219c8c7,al
  417287:	out    dx,eax
  417288:	call   0x9f13821e
  41728d:	adc    DWORD PTR ds:0xdfadb6ae,edx
  417293:	test   DWORD PTR [ebx],ecx
  417295:	dec    esi
  417296:	push   0x3a
  417298:	loope  0x4172bb
  41729a:	into   
  41729b:	sub    al,BYTE PTR [edi-0xe]
  41729e:	adc    eax,0x82f0c4ff
  4172a3:	imul   edi,edi,0xd7bf1198
  4172a9:	push   eax
  4172aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172ab:	mov    ds:0x97794a56,al
  4172b0:	and    DWORD PTR [edx-0x2f4f3c23],eax
  4172b6:	cwde   
  4172b7:	out    dx,eax
  4172b8:	pop    ebp
  4172b9:	nop
  4172ba:	push   edi
  4172bb:	sbb    eax,DWORD PTR [eax-0x105fde6d]
  4172c1:	pop    esp
  4172c2:	retf   
  4172c3:	outs   dx,DWORD PTR ds:[esi]
  4172c4:	adc    eax,0x5b3178c
  4172c9:	mov    ds:0x71ac60ba,al
  4172ce:	in     eax,dx
  4172cf:	call   0x355b:0xd7213a40
  4172d6:	aas    
  4172d7:	inc    esp
  4172d8:	mov    ds:0x914d2ec0,eax
  4172dd:	shl    DWORD PTR [eax+0x3d],cl
  4172e0:	dec    edi
  4172e1:	ret    
  4172e2:	jo     0x41726d
  4172e4:	sti    
  4172e5:	adc    BYTE PTR [eax+ebp*4+0x11],0x32
  4172ea:	int    0x3d
  4172ec:	adc    dl,ah
  4172ee:	mov    BYTE PTR [ecx+0x500efa74],cl
  4172f4:	lar    esp,WORD PTR [ebx]
  4172f7:	xor    esp,DWORD PTR [esi-0x74944c42]
  4172fd:	adc    al,0x6a
  4172ff:	pop    ebx
  417300:	or     dl,BYTE PTR [ebx]
  417302:	test   eax,0xa0f42499
  417307:	cmp    al,bh
  417309:	push   esp
  41730a:	pop    ss
  41730b:	scas   eax,DWORD PTR es:[edi]
  41730c:	or     eax,DWORD PTR [ecx]
  41730e:	and    ebp,DWORD PTR [edi+0x183e5b68]
  417314:	or     al,0x15
  417316:	pop    esp
  417317:	rol    al,cl
  417319:	xor    bh,BYTE PTR [ecx-0x1bc750a0]
  41731f:	inc    DWORD PTR [eax]
  417321:	dec    esp
  417322:	add    ch,BYTE PTR [ebx+0x42]
  417325:	int3   
  417326:	or     eax,0x697ba3b7
  41732b:	jns    0x417396
  41732d:	sub    BYTE PTR [ecx],al
  41732f:	aaa    
  417330:	add    ebx,DWORD PTR [edx]
  417332:	pop    es
  417333:	mov    eax,ds:0xce7de0
  417338:	in     al,0xe1
  41733a:	xchg   ebp,eax
  41733b:	jge    0x417387
  41733d:	lds    edx,FWORD PTR [edi+0x5b]
  417340:	jbe    0x417396
  417342:	iret   
  417343:	jae    0x4172fe
  417345:	add    DWORD PTR [ebx+eiz*8-0x6cff6169],0x1c
  41734d:	mov    dh,0xbd
  41734f:	sub    al,BYTE PTR [esi+0x50]
  417352:	sub    cl,BYTE PTR [edx+0x51b8fb4c]
  417358:	push   0x13
  41735a:	(bad)  
  41735b:	rcr    ebx,1
  41735d:	add    ah,ch
  41735f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417360:	xchg   esi,eax
  417361:	push   es
  417362:	into   
  417363:	sbb    al,0xf6
  417365:	out    0x47,eax
  417367:	popf   
  417368:	adc    ah,BYTE PTR [ebx-0x7ef07a77]
  41736e:	into   
  41736f:	inc    edi
  417370:	sbb    BYTE PTR [edi-0x30],dh
  417373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417374:	adc    al,0x5b
  417376:	mov    bh,0x35
  417378:	mov    ebx,0x3bfad784
  41737d:	(bad)  
  41737e:	popf   
  41737f:	push   ebp
  417380:	loope  0x417361
  417382:	push   ds
  417383:	jl     0x41732c
  417385:	mov    edi,0x4d19c5a6
  41738a:	or     BYTE PTR [esi-0x29430ac6],bl
  417390:	test   ecx,edx
  417392:	pop    DWORD PTR ds:0x6eed0d5b
  417398:	pop    ds
  417399:	loopne 0x41736a
  41739b:	cld    
  41739c:	pop    esi
  41739d:	xchg   esi,eax
  41739e:	fnstsw WORD PTR [esi-0x28]
  4173a1:	cld    
  4173a2:	(bad)  
  4173a3:	mov    dl,0x60
  4173a5:	or     al,0x22
  4173a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173a8:	inc    esi
  4173a9:	pop    eax
  4173aa:	jg     0x417382
  4173ac:	mov    bl,dh
  4173ae:	inc    edx
  4173af:	call   0x58d7:0x9840ae70
  4173b6:	daa    
  4173b7:	adc    cl,BYTE PTR cs:[ebx]
  4173ba:	adc    dh,BYTE PTR [edx+0x448d0dcb]
  4173c0:	repz out 0xeb,eax
  4173c3:	in     al,dx
  4173c4:	sub    ecx,eax
  4173c6:	pusha  
  4173c7:	push   ebp
  4173c8:	xchg   BYTE PTR [ebx+eax*8+0x595d4679],bh
  4173cf:	cmp    ecx,eax
  4173d1:	mov    cl,0x2f
  4173d3:	cli    
  4173d4:	fs into 
  4173d6:	adc    esi,DWORD PTR [ebx-0x4d44f94e]
  4173dc:	xor    DWORD PTR [edx],ebp
  4173de:	add    al,0xe3
  4173e0:	(bad)  
  4173e1:	sub    eax,0x98918fda
  4173e6:	nop    DWORD PTR [esi]
  4173e9:	xchg   esp,eax
  4173ea:	xchg   BYTE PTR [esi-0x4df621ca],al
  4173f0:	cmp    BYTE PTR [esi-0x1ffed64e],al
  4173f6:	mov    eax,0xa56392d0
  4173fb:	test   DWORD PTR [edi+0x4a832eca],ebp
  417401:	shl    DWORD PTR [ebx+0x50],0xdd
  417405:	adc    al,0x97
  417407:	mov    cs,WORD PTR [esi-0x47]
  41740a:	push   es
  41740b:	stc    
  41740c:	in     al,0x8a
  41740e:	das    
  41740f:	lahf   
  417410:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417411:	pop    ebx
  417412:	cdq    
  417413:	push   es
  417414:	pop    ss
  417415:	jo     0x417413
  417417:	cdq    
  417418:	or     dh,BYTE PTR [esi-0x7a110b25]
  41741e:	hlt    
  41741f:	mov    ch,0x36
  417421:	ins    DWORD PTR es:[edi],dx
  417422:	sub    al,BYTE PTR [esi+0x5]
  417425:	es or  al,0x69
  417428:	nop
  417429:	lods   eax,DWORD PTR ds:[esi]
  41742a:	cli    
  41742b:	cli    
  41742c:	xchg   esp,eax
  41742d:	cdq    
  41742e:	sbb    ah,BYTE PTR [eax+0x3ad596d6]
  417434:	out    dx,eax
  417435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417436:	jge    0x4173e9
  417438:	fidivr DWORD PTR [edx]
  41743a:	mov    ds:0xea6f1927,eax
  41743f:	jne    0x417479
  417441:	push   0xa49b8b98
  417446:	xchg   BYTE PTR [ebx+eiz*2],bl
  417449:	into   
  41744a:	sti    
  41744b:	jmp    0x4174c2
  41744d:	mov    al,BYTE PTR [esi-0x303d81b9]
  417453:	nop
  417454:	mov    ebp,0x9ed36db7
  417459:	(bad)  
  41745a:	test   al,0xb5
  41745c:	jg     0x41748b
  41745e:	loopne 0x4173e0
  417460:	shl    DWORD PTR [esi+0x191b347d],0xb1
  417467:	lea    esp,[esi-0x62]
  41746a:	jb     0x417414
  41746c:	fs pop ecx
  41746e:	icebp  
  41746f:	sub    al,BYTE PTR [ebp-0x53]
  417472:	mov    al,BYTE PTR [ebx+0x48cd4d83]
  417478:	mov    ds:0x822bc541,eax
  41747d:	xor    BYTE PTR [edi-0x42],bh
  417480:	out    dx,eax
  417481:	cli    
  417482:	push   0x81418f0b
  417487:	clc    
  417488:	add    eax,0xf4045567
  41748d:	xchg   esp,eax
  41748e:	and    ebp,edx
  417490:	inc    esp
  417491:	enter  0x8869,0x4d
  417495:	add    al,0x1e
  417497:	xchg   edx,eax
  417498:	fptan  
  41749a:	jnp    0x417497
  41749c:	jge    0x4174e4
  41749e:	adc    al,0xdd
  4174a0:	dec    edi
  4174a1:	loope  0x4174f9
  4174a3:	adc    al,0xdb
  4174a5:	mul    DWORD PTR [ebx-0x52]
  4174a8:	enter  0xda2f,0x97
  4174ac:	pop    ebp
  4174ad:	sti    
  4174ae:	inc    DWORD PTR [ecx+0x72]
  4174b1:	jge    0x4174f0
  4174b3:	mov    ecx,0xf6a121eb
  4174b8:	dec    edi
  4174b9:	cmp    eax,0x750f07d6
  4174be:	dec    ebx
  4174bf:	add    DWORD PTR [ebp+0x371860a],esi
  4174c5:	ss xchg ebp,eax
  4174c7:	jmp    0x30aa:0x6e8d6b25
  4174ce:	data16 add cl,BYTE PTR [edi+0xaba0071]
  4174d5:	fcomp  DWORD PTR [ecx+0x56]
  4174d8:	or     ch,BYTE PTR [edx+ecx*8-0x19618c09]
  4174df:	loop   0x41748c
  4174e1:	or     DWORD PTR [eax-0x79b32fbe],eax
  4174e7:	out    0xd5,al
  4174e9:	sub    BYTE PTR [esi],bh
  4174eb:	push   cs
  4174ec:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174ee:	jge    0x417521
  4174f0:	mov    eax,ds:0xc9a49e2e
  4174f5:	dec    edx
  4174f6:	xchg   ecx,eax
  4174f7:	loop   0x417548
  4174f9:	inc    ecx
  4174fa:	ja     0x41749d
  4174fc:	aaa    
  4174fd:	mov    edx,0x67a29821
  417502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417503:	sbb    ebx,esi
  417505:	inc    ecx
  417506:	cwde   
  417507:	fdiv   DWORD PTR [edi+0x2c]
  41750a:	adc    edi,edi
  41750c:	pop    ds
  41750d:	adc    DWORD PTR [edi-0x2c5b045a],0x574e59f5
  417517:	and    DWORD PTR [edx-0x9],eax
  41751a:	mov    edi,0xec54acd0
  41751f:	int3   
  417520:	or     DWORD PTR [edi],0x8a756a82
  417526:	jae    0x417563
  417528:	clc    
  417529:	sahf   
  41752a:	add    DWORD PTR [edi],eax
  41752c:	add    eax,0xb9a7d91d
  417531:	shr    DWORD PTR [ebp+0x22],0x2e
  417535:	mov    ch,BYTE PTR [edx+eax*4-0x50]
  417539:	in     al,0x46
  41753b:	ret    
  41753c:	sbb    eax,0x2da3c180
  417541:	fild   DWORD PTR [edi]
  417543:	cli    
  417544:	out    dx,al
  417545:	dec    ebx
  417546:	sbb    edx,esp
  417548:	jge    0x41755f
  41754a:	or     eax,0xa89b44e7
  41754f:	add    ch,BYTE PTR [ecx-0x3c63380a]
  417555:	add    ch,bh
  417557:	std    
  417558:	xchg   ebp,eax
  417559:	data16 aam 0xd5
  41755c:	repnz xchg esp,eax
  41755e:	int3   
  41755f:	xchg   ebx,ecx
  417561:	aaa    
  417562:	sub    al,BYTE PTR [ecx+0x1159fd58]
  417568:	pop    edi
  417569:	mov    ecx,DWORD PTR [ecx+0x1d98370a]
  41756f:	sub    al,0x36
  417571:	mov    ecx,ds
  417573:	xchg   edx,eax
  417574:	add    al,0x41
  417576:	scas   eax,DWORD PTR es:[edi]
  417577:	dec    edi
  417578:	imul   ecx,esp,0x6a
  41757b:	rcl    BYTE PTR [ecx+edx*2],1
  41757e:	shl    BYTE PTR [edx-0xb71062f],1
  417584:	in     eax,dx
  417585:	mov    edi,?
  417587:	push   ss
  417588:	inc    esp
  417589:	pop    esp
  41758a:	loope  0x417567
  41758c:	loopne 0x4175e3
  41758e:	xchg   ecx,eax
  41758f:	ss es jge 0x41758e
  417593:	loopne 0x4175b7
  417595:	sbb    al,cl
  417597:	(bad)  fs:[esi]
  41759a:	mov    ds:0x3d8a5b35,eax
  41759f:	mov    ch,0xd1
  4175a1:	cmp    bh,cl
  4175a3:	cli    
  4175a4:	outs   dx,BYTE PTR ds:[esi]
  4175a5:	mov    dh,0x59
  4175a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175a8:	xchg   esp,eax
  4175a9:	mov    DWORD PTR [ecx],edx
  4175ab:	lea    edx,[ebx+edx*4-0x5c]
  4175af:	cs adc ch,dh
  4175b2:	sbb    dl,BYTE PTR [ecx]
  4175b4:	ror    ecx,0x55
  4175b7:	retf   
  4175b8:	mov    WORD PTR [ebx+0x46],gs
  4175bb:	or     DWORD PTR [edi],esi
  4175bd:	or     cl,0x3a
  4175c0:	push   ds
  4175c1:	aaa    
  4175c2:	sub    ecx,edx
  4175c4:	ret    
  4175c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175c6:	xor    al,0x64
  4175c8:	xchg   esp,eax
  4175c9:	leave  
  4175ca:	int    0xb5
  4175cc:	retf   
  4175cd:	push   ds
  4175ce:	cs mov cl,0x94
  4175d1:	and    al,0xaa
  4175d3:	cli    
  4175d4:	int    0xb
  4175d6:	fnstcw WORD PTR [eax+0x5a]
  4175d9:	mov    esp,0x3f13742
  4175de:	adc    dh,al
  4175e0:	jl     0x4175d4
  4175e2:	sbb    DWORD PTR [ebx+esi*1-0x40],0xffffffe6
  4175e7:	test   eax,0x62ac35d0
  4175ec:	(bad)  
  4175ed:	rcr    BYTE PTR [edi],1
  4175ef:	inc    edx
  4175f0:	sbb    eax,0x4e89a0ec
  4175f5:	sbb    DWORD PTR [ecx+0x316747b3],eax
  4175fb:	xor    BYTE PTR [edi],cl
  4175fd:	jp     0x417632
  4175ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417600:	and    eax,0x954cbc38
  417605:	icebp  
  417606:	sub    DWORD PTR [edi],ecx
  417608:	out    dx,eax
  417609:	nop
  41760a:	imul   edi,DWORD PTR [ebx+0x51b12d62],0xab136e22
  417614:	ret    0xfcf0
  417617:	jl     0x4175e8
  417619:	inc    esi
  41761a:	fistp  QWORD PTR [ebx+0x76af02a4]
  417620:	(bad)  
  417621:	mov    al,ds:0x139e13e6
  417626:	adc    al,ch
  417628:	ret    
  417629:	sbb    ebx,DWORD PTR [ebx+eax*2-0xe0a0409]
  417630:	mov    bl,0xd8
  417632:	inc    ebp
  417633:	push   ecx
  417634:	shl    DWORD PTR [eax+0x75],cl
  417637:	inc    edx
  417638:	retf   0x96c0
  41763b:	mov    ch,0x67
  41763d:	sub    ecx,DWORD PTR [ebp+0x79e1c58e]
  417643:	je     0x4175e9
  417645:	inc    edi
  417646:	aam    0x77
  417648:	push   es
  417649:	out    dx,eax
  41764a:	and    BYTE PTR [eax],bl
  41764c:	jecxz  0x417664
  41764e:	inc    ecx
  41764f:	lsl    ecx,WORD PTR [ebp-0x2c4d642d]
  417656:	add    edx,DWORD PTR [edx-0x690a7ba7]
  41765c:	xchg   esp,eax
  41765d:	push   es
  41765e:	sbb    ah,bh
  417660:	sbb    cl,bh
  417662:	push   edi
  417663:	mov    ebx,0x8735f9b4
  417668:	cs nop
  41766a:	adc    dl,BYTE PTR [si-0x28dc]
  41766f:	sar    DWORD PTR [eax+0x4a],0xf1
  417673:	aaa    
  417674:	pop    ebx
  417675:	pop    es
  417676:	call   DWORD PTR [ebx]
  417678:	jne    0x4176e0
  41767a:	xchg   ebp,eax
  41767b:	imul   ecx,ebp,0x54
  41767e:	fadd   DWORD PTR ds:0xba78cbe1
  417684:	or     BYTE PTR [esi-0x41],0x19
  417688:	fdiv   DWORD PTR [esi-0xd4846c6]
  41768e:	mov    ch,0x50
  417690:	dec    edi
  417691:	pop    eax
  417692:	push   es
  417693:	mov    ch,0x30
  417695:	mov    dh,0xe2
  417697:	adc    BYTE PTR ds:0xe042b594,bl
  41769d:	test   eax,0x70926da0
  4176a2:	jg     0x417624
  4176a4:	add    al,0x92
  4176a6:	inc    edx
  4176a7:	cli    
  4176a8:	sub    al,0xb4
  4176aa:	or     al,dh
  4176ac:	inc    edi
  4176ad:	sbb    DWORD PTR [edi+0x62da3a5],edx
  4176b3:	dec    ebp
  4176b4:	data16 (bad) 
  4176b6:	bound  ebp,QWORD PTR [esi+0x29]
  4176b9:	xchg   esp,eax
  4176ba:	add    ebx,DWORD PTR [ecx*1-0x5a02f0b0]
  4176c1:	xchg   esp,eax
  4176c2:	ja     0x417705
  4176c4:	pop    ss
  4176c5:	dec    esi
  4176c6:	lock cmp dh,BYTE PTR [ebp+0x22]
  4176ca:	outs   dx,DWORD PTR ds:[esi]
  4176cb:	ret    0xbffb
  4176ce:	js     0x417661
  4176d0:	xor    al,0x52
  4176d2:	idiv   DWORD PTR [edi-0x1c]
  4176d5:	lock pop es
  4176d7:	or     eax,0x201e5cf5
  4176dc:	inc    edi
  4176dd:	mov    bl,BYTE PTR [edi]
  4176df:	mov    dl,0x72
  4176e1:	mov    dl,0x1
  4176e3:	daa    
  4176e4:	cmp    BYTE PTR [ebp-0x243b25b1],dh
  4176ea:	inc    esp
  4176eb:	fnstenv [ebp-0x3d]
  4176ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176ef:	mov    esi,0xc87b782a
  4176f4:	push   0x10156651
  4176f9:	aad    0x56
  4176fb:	ins    BYTE PTR es:[edi],dx
  4176fc:	add    edx,DWORD PTR [edx+0x51d39fc4]
  417702:	call   0xab50:0xfc3439c4
  417709:	xor    DWORD PTR [ebp+0x34],0x2d426a29
  417710:	push   edi
  417711:	data16 (bad) 
  417713:	idiv   BYTE PTR [esi+0x7d]
  417716:	rol    DWORD PTR [ebp+0x114b49df],cl
  41771c:	pop    eax
  41771d:	repz mov bh,0x66
  417720:	aam    0xc4
  417722:	std    
  417723:	call   0xe341:0x273a307f
  41772a:	mov    ebp,0x64851667
  41772f:	jns    0x4176d4
  417731:	int    0xa1
  417733:	mov    edi,0x1b23407a
  417738:	sub    al,0xd5
  41773a:	(bad)  [ebp+0x72b6a887]
  417740:	jns    0x4177bd
  417742:	fist   WORD PTR [edx+0x32f15996]
  417748:	cmp    DWORD PTR [esi-0x40],ebp
  41774b:	mov    edi,DWORD PTR [esi+0x67f25832]
  417751:	call   0x7dfa17de
  417756:	pusha  
  417757:	fs (bad) 
  417759:	scas   eax,DWORD PTR es:[edi]
  41775a:	retf   
  41775b:	cmp    BYTE PTR [edi+0x5d],bl
  41775e:	test   DWORD PTR [edx-0x312d34e7],0x677a7b68
  417768:	cld    
  417769:	jge    0x4177ca
  41776b:	sub    ebx,DWORD PTR [ebx+0x6]
  41776e:	mov    ebx,?
  417770:	and    edi,eax
  417772:	mov    DWORD PTR [eax+0x2ded1e88],ebp
  417778:	stc    
  417779:	mov    ch,0x3e
  41777b:	push   0xffffffbf
  41777d:	mov    bh,0xa0
  41777f:	pop    edi
  417780:	in     al,dx
  417781:	pop    ebx
  417782:	mov    dh,0x82
  417785:	xor    ecx,DWORD PTR [ebp+edi*2-0x74d3eabd]
  41778c:	adc    DWORD PTR [ebp-0x6b29ab3a],ebx
  417792:	(bad)  
  417793:	scas   al,BYTE PTR es:[edi]
  417794:	jge    0x417764
  417796:	scas   eax,DWORD PTR es:[edi]
  417797:	sub    ecx,DWORD PTR [ecx+ebp*2-0x4eeafb63]
  41779e:	imul   edx,DWORD PTR [eax-0x4f],0x5e
  4177a2:	(bad)  
  4177a4:	cmp    DWORD PTR [edx+0x3c],ebx
  4177a7:	bnd jb 0x41779a
  4177aa:	cmp    edi,DWORD PTR [esp+esi*2+0x37]
  4177ae:	xor    edi,edx
  4177b0:	and    al,0xa0
  4177b2:	xchg   ecx,eax
  4177b3:	add    al,0xe5
  4177b5:	mov    dl,0xf9
  4177b7:	mov    ds:0x29becb15,eax
  4177bc:	dec    eax
  4177bd:	call   FWORD PTR [edi+eiz*2+0x15]
  4177c1:	js     0x4177b0
  4177c3:	popf   
  4177c4:	js     0x417791
  4177c6:	inc    ebx
  4177c7:	ror    eax,0x3e
  4177ca:	xor    DWORD PTR [ebp+0x65c92b81],edx
  4177d0:	sub    dl,dl
  4177d2:	xor    eax,0xb8d63a4b
  4177d7:	stos   WORD PTR es:[edi],ax
  4177d9:	rol    al,0xda
  4177dc:	dec    ebp
  4177dd:	shr    BYTE PTR [edx+0x20],0x21
  4177e1:	(bad)  
  4177e2:	xor    al,0x7f
  4177e4:	or     DWORD PTR [esi],edx
  4177e6:	jbe    0x4177d4
  4177e8:	or     DWORD PTR [ecx+0x6831ab8d],edx
  4177ee:	push   eax
  4177ef:	cli    
  4177f0:	xchg   esi,eax
  4177f1:	inc    ecx
  4177f2:	outs   dx,BYTE PTR ds:[esi]
  4177f3:	cli    
  4177f4:	jmp    0xdbde:0x9e9b6917
  4177fb:	sbb    BYTE PTR [edi-0x4a],cl
  4177fe:	pop    edi
  4177ff:	push   edi
  417800:	jbe    0x41785a
  417802:	mov    ch,0x2c
  417804:	out    dx,al
  417805:	pop    edi
  417806:	jp     0x41778f
  417808:	mov    ebx,0x1b299bf9
  41780d:	sub    edx,DWORD PTR [edx+0x55]
  417810:	repz aam 0x25
  417813:	sub    DWORD PTR [esi-0x46257b98],edi
  417819:	push   esp
  41781a:	sub    ebp,DWORD PTR [edx+0x70e39c6e]
  417820:	jno    0x417839
  417822:	xchg   ebp,eax
  417823:	mov    WORD PTR [ebx],?
  417825:	push   ss
  417826:	cwde   
  417827:	dec    ecx
  417828:	jmp    0x41787b
  41782a:	out    0x40,al
  41782c:	mov    al,ds:0x1a74a40a
  417831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417832:	cmp    al,0x80
  417834:	lods   al,BYTE PTR ds:[esi]
  417835:	lods   eax,DWORD PTR ds:[esi]
  417836:	sbb    bl,0xae
  417839:	std    
  41783a:	and    al,0x8f
  41783c:	inc    ebp
  41783d:	mov    esp,0x22ea00c6
  417842:	inc    DWORD PTR [ecx]
  417844:	ret    
  417845:	fisub  WORD PTR [edi+0x55f0b345]
  41784b:	push   ax
  41784d:	mov    dl,bl
  41784f:	mov    bl,0x41
  417852:	ins    BYTE PTR es:[edi],dx
  417853:	pop    edx
  417854:	and    eax,0xace7cf9c
  417859:	(bad)  
  41785a:	stos   DWORD PTR es:[edi],eax
  41785b:	out    dx,eax
  41785c:	push   esi
  41785d:	ror    DWORD PTR [ecx-0x6a2a6d7c],1
  417863:	jbe    0x417866
  417865:	cmp    BYTE PTR [ebp-0x18],ch
  417868:	pop    edx
  417869:	xor    ecx,ebp
  41786b:	mov    esi,0x96608bd9
  417870:	test   BYTE PTR [edx+0xa8e4820],ch
  417876:	xor    BYTE PTR [ecx+0x66],0xeb
  41787a:	ds aaa 
  41787c:	js     0x41787a
  41787e:	fidiv  DWORD PTR [ebp+0xd472199]
  417884:	add    dh,dh
  417886:	adc    al,0xd8
  417888:	pop    ecx
  417889:	fidiv  WORD PTR [esi]
  41788b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41788c:	sub    BYTE PTR [eax+0x54],0x84
  417890:	push   0xffffff91
  417892:	push   cs
  417893:	mov    al,0x3d
  417895:	lahf   
  417896:	ror    esi,cl
  417898:	lahf   
  417899:	je     0x417821
  41789b:	lods   eax,DWORD PTR ds:[esi]
  41789c:	das    
  41789d:	add    DWORD PTR [ebp+0x3e47a7c9],eax
  4178a3:	mov    ecx,0xfbb33c8c
  4178a8:	adc    DWORD PTR [esp+ebx*1],ebx
  4178ab:	jb     0x4178ce
  4178ad:	mov    ebp,0xd4e5fb36
  4178b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178b3:	and    BYTE PTR [esi],ah
  4178b5:	push   ecx
  4178b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178b7:	leave  
  4178b8:	fild   DWORD PTR [ebx+0xae1daef]
  4178be:	bound  ebx,QWORD PTR [ebp-0x65]
  4178c1:	and    eax,0xc7584f5c
  4178c6:	mov    edi,fs
  4178c8:	lods   al,BYTE PTR ds:[esi]
  4178c9:	mov    bh,0x21
  4178cb:	xchg   ecx,eax
  4178cc:	inc    DWORD PTR [ebx]
  4178ce:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4178d0:	jl     0x417857
  4178d2:	mov    bh,0x91
  4178d4:	pop    edi
  4178d5:	and    dh,BYTE PTR [ecx]
  4178d7:	mov    WORD PTR [ebp+ebp*2-0x67],ds
  4178db:	retf   0x33a0
  4178de:	test   DWORD PTR [edx-0x457bbc3e],ecx
  4178e4:	xor    eax,0x93367c74
  4178e9:	xor    DWORD PTR [edx-0x27],edi
  4178ec:	jns    0x41790d
  4178ee:	pop    es
  4178ef:	loope  0x417911
  4178f1:	cmp    BYTE PTR [ecx],ah
  4178f3:	mov    bl,0x36
  4178f5:	and    eax,0x3e80112d
  4178fa:	(bad)  
  4178fb:	rcr    BYTE PTR [edi+0x21],0x2d
  4178ff:	ror    DWORD PTR [ecx-0x58],cl
  417902:	sub    BYTE PTR [edi-0x7f02d2fa],dh
  417908:	hlt    
  417909:	pop    ebp
  41790a:	mov    ch,0x93
  41790c:	(bad)  
  41790d:	sub    esi,ebp
  41790f:	mov    al,0xf5
  417911:	pop    ds
  417912:	pop    eax
  417913:	sbb    dh,BYTE PTR [ebx+0x23ed564e]
  417919:	cli    
  41791a:	jmp    0x4178ca
  41791c:	jle    0x417980
  41791e:	cdq    
  41791f:	outs   dx,DWORD PTR ds:[esi]
  417920:	dec    ecx
  417921:	fwait
  417922:	nop
  417923:	jge    0x417956
  417925:	sahf   
  417926:	xchg   esp,eax
  417927:	sbb    ch,0x7
  41792a:	shl    edi,cl
  41792c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41792d:	jae    0x4178fe
  41792f:	dec    edx
  417930:	sahf   
  417931:	and    BYTE PTR [esi-0x13],bl
  417934:	les    esi,FWORD PTR [ebx+0x3ecbd42c]
  41793a:	xchg   esp,eax
  41793b:	fbstp  TBYTE PTR [ebx]
  41793d:	xchg   ebp,eax
  41793e:	push   0xa9fea248
  417943:	stos   BYTE PTR es:[edi],al
  417944:	sub    dl,ch
  417946:	sbb    BYTE PTR [ecx+0x5a],al
  417949:	adc    ecx,DWORD PTR [edi-0x2729cdf6]
  41794f:	lods   eax,DWORD PTR ds:[esi]
  417950:	and    dh,BYTE PTR [edi+0x53]
  417953:	es pusha 
  417955:	jge    0x4178ec
  417957:	pop    ebp
  417958:	cwde   
  417959:	fcom   QWORD PTR [ecx+0x3b]
  41795c:	push   0x2c
  41795e:	or     BYTE PTR [ebx-0x63fdaa6],bl
  417964:	mov    DWORD PTR [esi],ebp
  417966:	xchg   DWORD PTR [esi],ebp
  417968:	jmp    0x417903
  41796a:	mov    edi,0xb19cae1f
  41796f:	cwde   
  417970:	mov    al,0x26
  417972:	or     al,0xf
  417974:	(bad)  
  417975:	jp     0x98b6a60d
  41797b:	dec    esi
  41797c:	mov    esp,0x8c4a1e67
  417981:	fsubr  DWORD PTR [edi-0x3fd6e08f]
  417987:	je     0x4179fe
  417989:	test   al,0x48
  41798b:	pop    ds
  41798c:	ss xor al,0xf5
  41798f:	sub    BYTE PTR [edi],bh
  417991:	mov    eax,ds:0x768e3cb1
  417996:	ret    0x3a3a
  417999:	cld    
  41799a:	jmp    0xe11ebc91
  41799f:	out    dx,eax
  4179a0:	pop    esi
  4179a1:	xor    dh,0x77
  4179a4:	sbb    DWORD PTR [ebx+ecx*8-0x58d48023],0x22cfe042
  4179af:	sub    al,0x1c
  4179b1:	push   eax
  4179b2:	mov    bl,0x55
  4179b4:	mov    esi,0x57994429
  4179b9:	sub    al,0x9e
  4179bb:	aas    
  4179bc:	jecxz  0x41799f
  4179be:	(bad)  
  4179bf:	arpl   WORD PTR [ecx+0x4],di
  4179c2:	into   
  4179c3:	mov    ecx,DWORD PTR [edx]
  4179c5:	jmp    0x4179dd
  4179c7:	gs mov esi,fs
  4179ca:	outs   dx,BYTE PTR ds:[esi]
  4179cb:	mov    bl,0x66
  4179cd:	mov    esp,0x22d79e13
  4179d2:	sub    ebp,DWORD PTR [edi+eax*4-0x2606c0b9]
  4179d9:	jb     0x4179dd
  4179db:	pop    ss
  4179dc:	std    
  4179dd:	mov    esi,0x5a01543d
  4179e2:	scas   eax,DWORD PTR es:[edi]
  4179e3:	push   0x5
  4179e5:	addr16 jmp 0xeaae:0xe04dd918
  4179ed:	sub    DWORD PTR cs:[ebx+0x5a736627],ebp
  4179f4:	mov    eax,ds:0x41b5f4a5
  4179f9:	retf   
  4179fa:	pop    eax
  4179fb:	loopne 0x417a4d
  4179fd:	inc    ecx
  4179fe:	test   DWORD PTR [edi],0x288a1fac
  417a04:	clc    
  417a05:	pop    ds
  417a06:	jnp    0x417a66
  417a08:	mov    ebx,0x45cf4385
  417a0d:	fdiv   st(2),st
  417a0f:	push   eax
  417a10:	xchg   esi,eax
  417a11:	lahf   
  417a12:	fsubr  QWORD PTR [edx+eiz*8]
  417a15:	loopne 0x4179ce
  417a17:	rol    DWORD PTR [ebx-0x3bf2f98d],1
  417a1d:	xchg   DWORD PTR [eax],edi
  417a1f:	add    dh,ah
  417a21:	pop    ebp
  417a22:	push   ebp
  417a23:	ror    DWORD PTR [esi+0x14],1
  417a26:	sub    BYTE PTR [edi],al
  417a28:	mov    DWORD PTR [esi+0xf653aeb],esi
  417a2e:	push   ecx
  417a2f:	push   0xffffffbd
  417a31:	add    bh,al
  417a33:	sbb    cl,BYTE PTR [edx+0x62]
  417a36:	nop
  417a37:	inc    esi
  417a38:	dec    ebp
  417a39:	or     edx,esp
  417a3b:	adc    eax,0x15bf8fde
  417a40:	cmp    ah,BYTE PTR [esp+esi*2-0x32]
  417a44:	cmp    bl,BYTE PTR [ebp+0x10e99506]
  417a4a:	add    eax,0x3ebe4a04
  417a4f:	loopne 0x417acf
  417a51:	dec    eax
  417a52:	push   ebp
  417a53:	mov    bl,0x2e
  417a55:	push   cs
  417a56:	cmp    cl,al
  417a58:	rcl    DWORD PTR [edi-0x50],1
  417a5b:	cmp    esp,DWORD PTR [esi-0x17f9d003]
  417a61:	mov    al,ds:0x1fc8bdeb
  417a66:	sbb    al,0x98
  417a68:	mov    bh,0x20
  417a6a:	enter  0xf156,0x11
  417a6e:	mov    dh,0x37
  417a70:	xchg   ecx,eax
  417a71:	xor    dh,dl
  417a73:	test   eax,0xcf2eb5c2
  417a78:	xor    al,0x8c
  417a7a:	outs   dx,DWORD PTR ds:[esi]
  417a7b:	sti    
  417a7c:	retf   0xb800
  417a7f:	mov    dh,0xf3
  417a81:	xchg   ebx,eax
  417a82:	jmp    0x417a7d
  417a84:	test   cl,cl
  417a86:	pop    ebp
  417a87:	gs call 0xb587:0xdfa3f623
  417a8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a90:	jle    0x417a85
  417a92:	push   edx
  417a93:	mov    WORD PTR [ebx+0x2e0cf465],ds
  417a99:	cmp    DWORD PTR [esp+edx*8],eax
  417a9c:	push   edi
  417a9d:	cwde   
  417a9e:	mov    bl,0x17
  417aa0:	xor    al,0x52
  417aa2:	pushf  
  417aa3:	mov    ebp,0x74343a8e
  417aa8:	xchg   ecx,eax
  417aa9:	aaa    
  417aaa:	inc    esi
  417aab:	mov    esi,0xb2fa3519
  417ab0:	mov    ds:0xbe8f5235,al
  417ab5:	mov    edi,0x17d48ad3
  417aba:	mov    dl,0xd7
  417abc:	retf   
  417abd:	out    dx,al
  417abe:	pop    eax
  417abf:	xor    al,bl
  417ac1:	mov    ds:0xf8188b30,eax
  417ac6:	add    DWORD PTR [ecx-0x7a],edi
  417ac9:	fisubr WORD PTR [edi+eax*4-0x668d43bc]
  417ad0:	push   0xf3021ce
  417ad5:	push   esi
  417ad6:	xlat   BYTE PTR ds:[ebx]
  417ad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ad8:	jno    0x417b25
  417ada:	icebp  
  417adb:	call   0xa4a5:0x67fbf961
  417ae2:	cli    
  417ae3:	mov    edx,0x534d850
  417ae8:	test   DWORD PTR [ebp-0x30],edx
  417aeb:	(bad)  
  417aec:	xchg   esi,eax
  417aed:	loop   0x417a8f
  417aef:	xor    esi,DWORD PTR [edx+0x27e47ef3]
  417af5:	sub    al,0xd3
  417af7:	repz (bad) 
  417af9:	push   eax
  417afa:	jno    0x417b38
  417afc:	add    dl,bh
  417afe:	popf   
  417aff:	mov    esp,0xe461d9d5
  417b04:	icebp  
  417b05:	outs   dx,DWORD PTR ds:[esi]
  417b06:	loope  0x417b6e
  417b08:	mov    ds:0x49257815,eax
  417b0d:	dec    edi
  417b0e:	and    al,0xa8
  417b10:	les    edx,FWORD PTR [ebp+0x2a]
  417b13:	inc    ebx
  417b14:	out    dx,al
  417b15:	(bad)  
  417b16:	mov    ah,0x5e
  417b18:	dec    ebp
  417b19:	repnz xchg esi,eax
  417b1b:	jno    0x417ac3
  417b1d:	test   ebx,ecx
  417b1f:	iret   
  417b20:	in     al,0x9
  417b22:	and    ebx,DWORD PTR [eax-0x7a]
  417b25:	rol    DWORD PTR ds:0x80bfbd49,0x50
  417b2c:	xor    edi,DWORD PTR [edi-0x265c3524]
  417b32:	jg     0x417ba4
  417b34:	loop   0x417b17
  417b36:	mov    WORD PTR [edx-0x5c0d1eb7],ss
  417b3c:	mov    ebp,ebx
  417b3e:	push   edi
  417b3f:	pop    es
  417b40:	push   esp
  417b41:	(bad)  
  417b42:	xchg   ebp,eax
  417b43:	jns    0x417b17
  417b45:	retf   
  417b46:	jb     0x417b24
  417b48:	stos   BYTE PTR es:[edi],al
  417b49:	sub    edx,ecx
  417b4b:	inc    edi
  417b4c:	test   eax,0x684504a
  417b51:	in     eax,0x70
  417b53:	mov    ecx,0x6487a899
  417b58:	jno    0x417b6b
  417b5a:	std    
  417b5b:	icebp  
  417b5c:	and    DWORD PTR [edx-0x17],ebx
  417b5f:	imul   esi,DWORD PTR [edx-0x80],0x1b1dd6de
  417b66:	mov    edi,ebx
  417b68:	inc    esi
  417b69:	add    bh,dl
  417b6b:	lahf   
  417b6c:	mov    ch,0x30
  417b6e:	push   edi
  417b6f:	cmp    al,0x67
  417b71:	repz push es
  417b73:	fild   QWORD PTR [esi]
  417b75:	or     ch,BYTE PTR [esi-0x5737383]
  417b7b:	jge    0x417ba4
  417b7d:	dec    ebx
  417b7e:	and    ecx,ecx
  417b80:	jns    0x417b49
  417b82:	xchg   BYTE PTR ds:0x93049ab0,ah
  417b88:	(bad)  
  417b89:	mov    edx,0xf89ce8ed
  417b8e:	retf   
  417b8f:	fbstp  TBYTE PTR [edx-0x2f102da8]
  417b95:	(bad)  
  417b96:	mov    ecx,ebx
  417b98:	dec    esi
  417b99:	push   0xffffff96
  417b9b:	lahf   
  417b9c:	lahf   
  417b9d:	std    
  417b9e:	dec    ebp
  417b9f:	xchg   BYTE PTR [edi-0x73],ah
  417ba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ba3:	mov    edi,0x24927533
  417ba8:	xchg   esi,eax
  417ba9:	les    edx,FWORD PTR [ebx+0xe]
  417bac:	or     al,0x22
  417bae:	or     al,0xf7
  417bb0:	rol    BYTE PTR [ecx],0xd3
  417bb3:	jnp    0x417ba3
  417bb5:	inc    ebx
  417bb6:	add    ebx,esp
  417bb8:	es xor eax,0xee716be3
  417bbe:	jne    0x417b82
  417bc0:	fldcw  WORD PTR [eax-0x6e7d6815]
  417bc6:	dec    esi
  417bc7:	or     DWORD PTR [esp+esi*4+0x594ea2bc],eax
  417bce:	sbb    al,0x9e
  417bd0:	fwait
  417bd1:	shr    DWORD PTR [eax-0x19bb2633],cl
  417bd7:	adc    BYTE PTR [edi-0x3ba1dce6],dl
  417bdd:	lds    ecx,FWORD PTR [edx+0x46]
  417be0:	push   0x24ae663d
  417be5:	dec    edx
  417be6:	std    
  417be7:	xor    BYTE PTR [edi-0xe],0x11
  417beb:	fld    QWORD PTR [ebx-0x7d]
  417bee:	inc    esp
  417bef:	sbb    eax,0x4f8c6bbb
  417bf4:	(bad)  
  417bf5:	or     al,0x95
  417bf7:	mov    eax,0xbc3d3c0d
  417bfc:	repz mov eax,ds:0x4db2f41a
  417c02:	xchg   edx,eax
  417c03:	retf   
  417c04:	outs   dx,DWORD PTR ds:[esi]
  417c05:	and    ebx,DWORD PTR [esi+eiz*1+0x55de9e6a]
  417c0c:	xchg   ecx,eax
  417c0d:	outs   dx,DWORD PTR ds:[esi]
  417c0e:	mov    al,0x1d
  417c10:	cmp    DWORD PTR [eax-0x4c],esp
  417c13:	mov    esp,0xa0d497c6
  417c18:	xchg   edi,eax
  417c19:	xchg   ebx,ebp
  417c1b:	sbb    eax,0xd17b7233
  417c20:	xchg   ebp,eax
  417c21:	scas   eax,DWORD PTR es:[edi]
  417c22:	out    dx,eax
  417c23:	lock sub dh,BYTE PTR [edi]
  417c26:	push   ds
  417c27:	inc    ebp
  417c28:	jno    0x417c97
  417c2a:	mov    bh,0x26
  417c2c:	(bad)  
  417c2d:	retf   0x991c
  417c30:	cld    
  417c31:	pop    es
  417c32:	fbstp  TBYTE PTR [eax+eiz*1-0x6dc35b71]
  417c39:	mov    ebx,0x9a8c20e3
  417c3e:	arpl   WORD PTR [esi],sp
  417c40:	das    
  417c41:	int3   
  417c42:	jnp    0x417c85
  417c44:	dec    eax
  417c45:	or     al,0x97
  417c47:	xchg   esp,eax
  417c48:	int3   
  417c49:	xchg   cl,dh
  417c4b:	ret    
  417c4c:	sub    dl,BYTE PTR [esi-0x6b688a0a]
  417c52:	sub    BYTE PTR [ebx+0x17],dh
  417c55:	sbb    BYTE PTR [eax-0x80],ah
  417c58:	sub    al,al
  417c5a:	gs push 0xf2c7ea20
  417c60:	inc    edx
  417c61:	dec    eax
  417c62:	xlat   BYTE PTR ds:[ebx]
  417c63:	adc    eax,0x1ad587c5
  417c68:	dec    esi
  417c69:	push   0xffffffeb
  417c6b:	mov    cl,0x3b
  417c6d:	jbe    0x417c46
  417c6f:	mov    esp,0xcc30fd6c
  417c74:	pop    eax
  417c75:	add    eax,0xb1ff9040
  417c7a:	mov    esi,0x820ed976
  417c7f:	retf   
  417c80:	sbb    al,dl
  417c82:	cmp    esp,DWORD PTR [ecx+0x4d37658a]
  417c88:	sti    
  417c89:	sahf   
  417c8a:	xchg   esi,eax
  417c8b:	shl    BYTE PTR [ebp+0x79],cl
  417c8e:	sub    eax,0x79687260
  417c93:	jge    0x417c27
  417c95:	adc    al,0x21
  417c97:	and    bl,BYTE PTR [ebp-0x5e4990c3]
  417c9d:	outs   dx,DWORD PTR ds:[esi]
  417c9e:	je     0x417d1b
  417ca0:	scas   eax,DWORD PTR es:[edi]
  417ca1:	scas   eax,DWORD PTR es:[edi]
  417ca2:	mov    bh,0x11
  417ca4:	add    DWORD PTR [eax],esp
  417ca6:	dec    edx
  417ca7:	shl    BYTE PTR [ebx],0xd9
  417caa:	inc    esi
  417cab:	mov    ds:0xf8a1a4d5,eax
  417cb0:	xor    bl,bl
  417cb2:	adc    BYTE PTR [eax-0x675cc515],ah
  417cb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cb9:	pop    ds
  417cba:	mov    dl,0x36
  417cbc:	in     eax,dx
  417cbd:	dec    eax
  417cbe:	cdq    
  417cbf:	call   0x6cbba315
  417cc4:	adc    eax,0x4a0b324
  417cc9:	fsubr  QWORD PTR [esi+0x77]
  417ccc:	jg     0x417cbe
  417cce:	repnz (bad) 
  417cd1:	fwait
  417cd2:	in     eax,dx
  417cd3:	or     ecx,DWORD PTR [edi]
  417cd5:	pusha  
  417cd6:	inc    ecx
  417cd7:	repz mov eax,DWORD PTR [edi+ebx*4-0x45]
  417cdc:	not    esi
  417cde:	sub    esi,DWORD PTR [edi+0x2732712]
  417ce4:	xlat   BYTE PTR ds:[ebx]
  417ce5:	fwait
  417ce6:	sub    eax,0xfe580303
  417ceb:	mov    esp,DWORD PTR [ecx-0x11a9e1a]
  417cf1:	push   ds
  417cf2:	in     al,0x32
  417cf4:	cmp    DWORD PTR [eax-0x770a7f33],ebp
  417cfa:	addr16 fcmovu st,st(5)
  417cfd:	adc    ch,BYTE PTR [edx-0x73]
  417d00:	iret   
  417d01:	xchg   ecx,eax
  417d02:	xchg   ebp,eax
  417d03:	xor    eax,0xb28739a9
  417d08:	and    al,0x3e
  417d0a:	sub    al,0x63
  417d0c:	inc    esi
  417d0d:	shr    ah,1
  417d0f:	ss fwait
  417d11:	mov    ebp,0xdd6b6ca2
  417d16:	iret   
  417d17:	mov    bl,0x68
  417d19:	in     eax,dx
  417d1a:	sbb    eax,0xb122efa6
  417d1f:	sub    eax,0x2c7fb997
  417d24:	or     dh,bl
  417d26:	add    al,0xc8
  417d28:	out    0x51,al
  417d2a:	jno    0x417d01
  417d2c:	outs   dx,BYTE PTR ds:[esi]
  417d2d:	jecxz  0x417da6
  417d2f:	push   0x76
  417d31:	dec    ecx
  417d32:	xor    DWORD PTR [ebx+0x679e6d4f],ecx
  417d38:	mov    es,WORD PTR [esi-0x2f72463a]
  417d3e:	sbb    al,dh
  417d40:	sbb    cl,BYTE PTR [esi+0xb]
  417d43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d44:	loope  0x417dba
  417d46:	mov    edx,0x71ac1261
  417d4b:	pop    ebp
  417d4c:	lea    eax,ds:0x30faf60a
  417d52:	aad    0x27
  417d54:	pusha  
  417d55:	cld    
  417d56:	jne    0x417d7e
  417d58:	jo     0x417da8
  417d5a:	(bad)  
  417d5b:	(bad)  
  417d5c:	and    DWORD PTR [eax+edi*1-0x3],ecx
  417d60:	inc    ecx
  417d61:	sub    eax,0xaeb46a2b
  417d66:	inc    ecx
  417d67:	jp     0x417d9a
  417d69:	stc    
  417d6a:	dec    eax
  417d6b:	std    
  417d6c:	ins    DWORD PTR es:[edi],dx
  417d6d:	inc    esp
  417d6e:	mov    es,WORD PTR [ebx]
  417d70:	inc    ecx
  417d71:	mov    cl,cl
  417d73:	das    
  417d74:	nop
  417d75:	xor    bh,bh
  417d77:	gs cli 
  417d79:	lahf   
  417d7a:	mov    edi,0xda9d809e
  417d7f:	lahf   
  417d80:	add    BYTE PTR [edi-0x5e548a79],cl
  417d86:	dec    ecx
  417d87:	push   esp
  417d88:	push   ds
  417d89:	adc    eax,0x74bfabb0
  417d8e:	sbb    dl,ch
  417d90:	push   0x12f762b6
  417d95:	leave  
  417d96:	(bad)  
  417d97:	fldcw  WORD PTR [edx-0x2a]
  417d9a:	mov    bh,BYTE PTR [eax]
  417d9c:	mov    esi,0xec2e1354
  417da1:	imul   eax,DWORD PTR [edi-0x746c497b],0x1e
  417da8:	mov    BYTE PTR [ebp-0x4778565b],ch
  417dae:	inc    ebp
  417daf:	(bad)  
  417db0:	shl    dl,cl
  417db2:	mov    bl,0x66
  417db4:	mov    ah,0xd9
  417db6:	aaa    
  417db7:	aad    0xb9
  417db9:	push   ebx
  417dba:	xchg   ecx,eax
  417dbb:	adc    dh,dl
  417dbd:	xchg   esp,eax
  417dbe:	xchg   esi,eax
  417dbf:	inc    edx
  417dc0:	xchg   ebp,eax
  417dc1:	rol    dl,1
  417dc3:	inc    esi
  417dc4:	mov    bh,0x2f
  417dc6:	lds    ecx,FWORD PTR [ebx-0x4c]
  417dc9:	das    
  417dca:	gs mov ch,0xe8
  417dcd:	stos   BYTE PTR es:[edi],al
  417dce:	jne    0x417db0
  417dd0:	and    dh,BYTE PTR [ebp+0x7a]
  417dd3:	adc    DWORD PTR [ecx+0x71],ebp
  417dd6:	imul   edx,DWORD PTR [esi-0x5a0716d1],0x58
  417ddd:	imul   ebx,DWORD PTR [edi-0x55965eea],0xf404a7c4
  417de7:	or     al,0xc9
  417de9:	add    bh,BYTE PTR [ebx]
  417deb:	jg     0x417d6f
  417ded:	data16 ja 0x417e16
  417df0:	mov    eax,0x80a93954
  417df5:	in     al,0xed
  417df7:	mov    al,ds:0xdf6f5dea
  417dfc:	pushf  
  417dfd:	mov    ds:0x7dba9cf1,al
  417e02:	out    dx,al
  417e03:	popf   
  417e04:	outs   dx,DWORD PTR ds:[esi]
  417e05:	mov    ah,0xa8
  417e07:	pop    eax
  417e08:	dec    esi
  417e09:	fwait
  417e0a:	xchg   ebp,eax
  417e0b:	dec    ebp
  417e0c:	inc    edi
  417e0d:	clc    
  417e0e:	inc    edx
  417e0f:	and    BYTE PTR [ebx+ebx*4],bh
  417e12:	add    eax,0x8c6af3a4
  417e17:	mov    ch,0xe7
  417e19:	add    al,BYTE PTR [edi+esi*1+0x7f]
  417e1d:	push   0x38
  417e1f:	lock lock in al,dx
  417e22:	jnp    0x417e0f
  417e24:	icebp  
  417e25:	cmp    al,BYTE PTR [edx+0x11]
  417e28:	push   0x79
  417e2a:	jmp    0x417dc9
  417e2c:	rol    DWORD PTR [ecx-0x75],1
  417e2f:	fisub  WORD PTR [eax-0x2baf07b6]
  417e35:	test   DWORD PTR [edi+eax*8+0x56],ebx
  417e39:	aas    
  417e3a:	inc    esp
  417e3b:	inc    edx
  417e3c:	fsub   QWORD PTR ds:0x6fd37f11
  417e42:	adc    esi,DWORD PTR [edi]
  417e44:	rcr    DWORD PTR ds:0x804e3533,cl
  417e4a:	or     cl,ch
  417e4c:	das    
  417e4d:	test   edx,esi
  417e4f:	sub    DWORD PTR [ebx],esp
  417e51:	dec    eax
  417e52:	inc    edi
  417e54:	rol    edi,cl
  417e56:	rcr    edx,0x9f
  417e59:	fmul   DWORD PTR [edi]
  417e5b:	vpandn xmm1,xmm0,XMMWORD PTR [ebp*2-0x1d69d3f]
  417e64:	sub    DWORD PTR ds:0x7c7089fe,ebp
  417e6a:	push   ebp
  417e6b:	xor    esp,DWORD PTR [edi+esi*1+0x7d]
  417e6f:	mov    ds:0x9d3f1f6b,eax
  417e74:	mov    ebx,0x5d58cb73
  417e79:	in     al,dx
  417e7a:	jmp    0x417eb9
  417e7c:	lds    ebx,FWORD PTR [ecx+ebx*2]
  417e7f:	je     0x417e8f
  417e81:	mov    BYTE PTR [ebx-0x57],cl
  417e84:	js     0x417e70
  417e86:	enter  0x4953,0x9b
  417e8a:	int3   
  417e8b:	sbb    al,0x54
  417e8d:	xchg   edx,eax
  417e8e:	or     eax,0x9d7b988a
  417e93:	mov    cl,0xbc
  417e95:	js     0x417e42
  417e97:	push   es
  417e98:	ja     0x417ef7
  417e9a:	stos   DWORD PTR es:[edi],eax
  417e9b:	aam    0xdd
  417e9d:	mov    bh,0xfe
  417e9f:	mov    esi,0x37adf018
  417ea4:	call   0xe27e:0x1273eb17
  417eab:	je     0x417ed6
  417ead:	lahf   
  417eae:	xor    BYTE PTR [eax+0x65eba2e9],al
  417eb4:	leave  
  417eb5:	jmp    0x417e8d
  417eb7:	int3   
  417eb8:	call   0xe0c:0xf8e93866
  417ebf:	push   esp
  417ec0:	pop    ebp
  417ec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ec2:	push   edi
  417ec3:	sbb    BYTE PTR [edi+0x1],al
  417ec6:	int    0xdd
  417ec8:	fdivr  st(6),st
  417eca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ecb:	jnp    0x417f1e
  417ecd:	(bad)  
  417ece:	in     eax,0x9e
  417ed0:	add    DWORD PTR [esi+0x60],ebp
  417ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ed4:	jle    0x417f14
  417ed6:	jns    0x417e64
  417ed8:	fisubr DWORD PTR [edx+0x401918fb]
  417ede:	add    al,BYTE PTR es:[edx-0x31]
  417ee2:	mul    BYTE PTR [eax-0x4e]
  417ee5:	into   
  417ee6:	(bad)  
  417ee7:	cmp    ch,ah
  417ee9:	out    0x56,eax
  417eeb:	inc    eax
  417eec:	ror    BYTE PTR [ecx],1
  417eee:	shl    DWORD PTR [ecx],cl
  417ef0:	arpl   WORD PTR [edx+0x48dd79c3],si
  417ef6:	sbb    BYTE PTR [ebx+0x64b3b0f8],0xcc
  417efd:	daa    
  417efe:	adc    BYTE PTR [eax-0x47241597],ch
  417f04:	iret   
  417f05:	xor    eax,0x9ac54e6
  417f0a:	jns    0x417f6a
  417f0c:	fmul   DWORD PTR [eax]
  417f0e:	jmp    0x23a7:0xf991f017
  417f15:	fs dec esi
  417f17:	aad    0xd9
  417f19:	dec    ebx
  417f1a:	push   es
  417f1b:	(bad)  
  417f1c:	mov    ah,0xc8
  417f1e:	ret    0x40dd
  417f21:	in     al,0x42
  417f23:	out    0xd5,al
  417f25:	add    BYTE PTR [edx-0x6b4aa791],cl
  417f2b:	and    al,0x74
  417f2d:	xor    cl,ch
  417f2f:	enter  0xbce4,0xe0
  417f33:	lahf   
  417f34:	jl     0x417f9a
  417f36:	adc    eax,0x91a0db54
  417f3b:	(bad)  
  417f3c:	mov    cl,0x27
  417f3e:	and    al,0xcf
  417f40:	cdq    
  417f41:	jmp    DWORD PTR [esi+edx*2-0x5d85a03]
  417f48:	inc    edx
  417f49:	xor    ch,BYTE PTR [ecx-0x7a]
  417f4c:	jb     0x417f4f
  417f4e:	xor    al,0x64
  417f50:	sbb    DWORD PTR [eax+0x35],edx
  417f53:	push   ebp
  417f54:	inc    eax
  417f55:	jecxz  0x417f3c
  417f57:	pusha  
  417f58:	mov    al,ds:0x3a9ca3e5
  417f5d:	dec    esp
  417f5e:	mov    bh,0x49
  417f60:	imul   esp,edx,0xb45faa3a
  417f66:	jge    0x417f3f
  417f68:	lahf   
  417f69:	inc    eax
  417f6a:	test   al,0x7e
  417f6c:	and    eax,0xe6b65093
  417f71:	repz cmc 
  417f73:	jmp    0xc3d7:0x5b20cea6
  417f7a:	rol    DWORD PTR [esi],cl
  417f7c:	sbb    al,0xd8
  417f7e:	pop    ebx
  417f7f:	add    BYTE PTR [edx-0x2],bl
  417f82:	aad    0x7e
  417f84:	or     eax,0xefd095f6
  417f89:	add    eax,0x34b27d88
  417f8e:	arpl   di,bp
  417f90:	shl    BYTE PTR [ebx+0x75],cl
  417f93:	or     al,0x60
  417f95:	mov    ebp,DWORD PTR [edx+ebx*8+0x1e]
  417f99:	arpl   WORD PTR [edx-0x56],bx
  417f9c:	and    BYTE PTR [eax],bl
  417f9e:	shl    BYTE PTR [ecx+eiz*2-0xf],cl
  417fa2:	push   edx
  417fa3:	inc    ebp
  417fa4:	mov    bh,0x29
  417fa6:	(bad)  
  417fa7:	mov    ah,0x15
  417fa9:	inc    eax
  417faa:	mov    bl,0x12
  417fac:	fcmovne st,st(6)
  417fae:	xchg   BYTE PTR [edx],al
  417fb0:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  417fb2:	clc    
  417fb3:	mov    dl,BYTE PTR [edi]
  417fb5:	xchg   esi,eax
  417fb6:	shl    DWORD PTR [edx-0x1b3629a6],cl
  417fbc:	adc    al,0x80
  417fbe:	sbb    al,0x3d
  417fc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fc1:	stc    
  417fc2:	jg     0x417fb7
  417fc4:	mov    ebp,0xc93c746f
  417fc9:	xchg   dl,dl
  417fcb:	mov    cl,al
  417fcd:	adc    edi,ebp
  417fcf:	jg     0x417fa2
  417fd1:	call   0xd7cf:0x98497553
  417fd8:	popf   
  417fd9:	retf   0xb62d
  417fdc:	mov    ah,0x2b
  417fde:	call   0x794f:0xbede0948
  417fe5:	mov    bl,BYTE PTR [ebx-0x4c]
  417fe8:	lock mov ebx,0x862b48a3
  417fee:	ins    DWORD PTR es:[edi],dx
  417fef:	imul   esi,DWORD PTR [edi-0x5466fffd],0xffffff83
  417ff6:	fimul  WORD PTR [edx+0x7a]
  417ff9:	cmp    cl,BYTE PTR [edx-0xc1fd1ae]
  417fff:	sub    al,0x18
  418001:	adc    DWORD PTR [eax+0x78527451],ecx
  418007:	mov    dx,0xdbd7
  41800b:	scas   al,BYTE PTR es:[edi]
  41800c:	inc    edi
  41800d:	add    al,BYTE PTR [ebp+0x75]
  418010:	lods   eax,DWORD PTR ds:[esi]
  418011:	inc    ecx
  418012:	push   ds
  418013:	fistp  QWORD PTR [ecx]
  418015:	ret    0x507f
  418018:	mov    eax,ds:0x64c9811
  41801d:	ret    0x9dce
  418020:	ret    0x94a1
  418023:	fst    st(5)
  418025:	daa    
  418026:	push   cs
  418027:	call   0x5e3f:0x7acc41b6
  41802e:	jno    0x417ff2
  418030:	jae    0x418049
  418032:	mov    ebp,0x4265acc7
  418037:	popf   
  418038:	xchg   edi,eax
  418039:	xchg   esp,eax
  41803a:	inc    esi
  41803b:	inc    esp
  41803c:	mov    bh,0xab
  41803e:	jae    0x417ffa
  418040:	sbb    DWORD PTR [ebx-0x5bdaff64],ebx
  418046:	repnz sbb al,0x61
  418049:	mov    esi,0x70431511
  41804e:	fdiv   DWORD PTR [edi+edx*2-0x96fb8fb]
  418055:	shl    edi,0xad
  418058:	sbb    eax,0x45404afd
  41805d:	push   es
  41805e:	(bad)
  418063:	adc    eax,0x7712c242
  418068:	(bad)  
  418069:	call   0x795f898
  41806e:	or     eax,DWORD PTR [edx]
  418070:	(bad)  
  418071:	mov    esp,0xa0e54763
  418076:	out    dx,eax
  418077:	inc    esi
  418078:	(bad)  
  418079:	pop    ebx
  41807a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41807b:	add    DWORD PTR [edi-0x91c57f],0xffffffd0
  418082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418083:	stos   DWORD PTR es:[edi],eax
  418084:	or     edx,eax
  418086:	cmp    BYTE PTR [eax-0x43923c6b],dh
  41808c:	sti    
  41808d:	and    BYTE PTR [esi],dh
  41808f:	lds    esi,FWORD PTR [edi+0x4]
  418092:	mov    eax,0x9270425c
  418097:	pop    ds
  418098:	cmp    eax,0xf64c0ccc
  41809d:	popa   
  41809e:	pop    DWORD PTR [ecx+esi*8-0x3a]
  4180a2:	call   0x1db6:0xfbaad42a
  4180a9:	hlt    
  4180aa:	xchg   edi,eax
  4180ab:	jae    0x41804e
  4180ad:	add    esp,DWORD PTR [edx-0x36a51f05]
  4180b3:	sub    BYTE PTR [edi-0x589c6cf3],0x59
  4180ba:	sub    ebp,DWORD PTR [ebx-0xd31e653]
  4180c0:	adc    DWORD PTR [eax-0x6b],0xcb7c4b2a
  4180c7:	call   0x5e6fb81a
  4180cc:	js     0x418120
  4180ce:	lahf   
  4180cf:	jo     0x41808c
  4180d1:	push   ebp
  4180d2:	into   
  4180d3:	jno    0x418149
  4180d5:	loope  0x41806e
  4180d7:	out    dx,eax
  4180d8:	scas   al,BYTE PTR es:[edi]
  4180d9:	ret    
  4180da:	xchg   ecx,eax
  4180db:	sbb    al,0xd8
  4180dd:	xor    al,0xb7
  4180df:	pop    eax
  4180e0:	std    
  4180e1:	add    bh,dh
  4180e3:	inc    esi
  4180e4:	and    esp,DWORD PTR [ebx-0x7b4a4956]
  4180ea:	xor    BYTE PTR [eax+0x21],ah
  4180ed:	xchg   ebx,eax
  4180ee:	stc    
  4180ef:	mov    ch,al
  4180f1:	adc    eax,0xec2402a6
  4180f6:	je     0x41808b
  4180f8:	cmp    al,0xd2
  4180fa:	inc    esp
  4180fb:	sbb    BYTE PTR [eax+edx*4+0x56],0xcb
  418100:	xchg   ebp,eax
  418101:	mov    bl,BYTE PTR [ebx]
  418103:	inc    ecx
  418104:	mov    WORD PTR [ebp+0x30],gs
  418107:	fucomi st,st(7)
  418109:	in     al,dx
  41810a:	push   ebp
  41810b:	mov    ds:0x4f34e60e,eax
  418110:	jle    0x418102
  418112:	push   0xfa000980
  418117:	inc    ebp
  418118:	sub    bh,BYTE PTR [esi-0x3f671b40]
  41811e:	inc    ecx
  41811f:	or     BYTE PTR [edx-0x46],bl
  418122:	nop
  418123:	pop    ecx
  418124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418125:	xchg   DWORD PTR [edx-0x3a37df98],ebp
  41812b:	scas   eax,DWORD PTR es:[edi]
  41812c:	mov    edx,0x667f78a5
  418131:	lock fistp WORD PTR ds:[edi+0x1aa0baf2]
  418139:	les    eax,FWORD PTR [ebx]
  41813b:	xchg   DWORD PTR [ebx-0xc],esi
  41813e:	data16 sub BYTE PTR [edi+eax*1-0x48],0xba
  418144:	sahf   
  418145:	popf   
  418146:	mov    es,WORD PTR [ebp-0x8]
  418149:	fcomp  DWORD PTR [edi]
  41814b:	ret    
  41814c:	cmp    cl,BYTE PTR [ebx+0x25efdca2]
  418152:	int    0xd2
  418154:	test   DWORD PTR [ebx-0x26d86dc7],ecx
  41815a:	pop    es
  41815b:	and    DWORD PTR [ebx+0x3a],esi
  41815e:	repz fs fs inc esp
  418162:	(bad)  
  418163:	ficomp DWORD PTR [ebx+0x16]
  418166:	outs   dx,BYTE PTR ds:[esi]
  418167:	sbb    esi,eax
  418169:	sub    DWORD PTR [esi-0x7571524b],edi
  41816f:	sub    DWORD PTR [ebp-0x4dd30a31],0x6ad8e743
  418179:	adc    al,0x64
  41817b:	mov    ds:0xa8623d75,eax
  418180:	jp     0x418136
  418182:	inc    eax
  418183:	loopne 0x418151
  418185:	retf   0xe8fb
  418188:	ror    BYTE PTR [ecx],cl
  41818a:	xchg   ebx,eax
  41818b:	inc    esi
  41818c:	loope  0x418209
  41818e:	jbe    0x4181bb
  418190:	lahf   
  418191:	push   ebp
  418192:	jnp    0x4181ae
  418194:	xchg   edx,eax
  418195:	cli    
  418196:	adc    ebx,DWORD PTR [esp+esi*2]
  418199:	aad    0x58
  41819b:	mov    ebx,0xc2fd9c08
  4181a0:	lock addr16 repz and bh,bh
  4181a5:	push   ecx
  4181a6:	mov    esp,DWORD PTR [esi+0x28]
  4181a9:	int3   
  4181aa:	pop    edi
  4181ab:	and    ebx,DWORD PTR [eax-0x32572037]
  4181b1:	mov    ch,0xf
  4181b3:	out    0x1c,al
  4181b5:	loope  0x418214
  4181b7:	and    BYTE PTR [esi-0x71],dh
  4181ba:	div    ah
  4181bc:	adc    BYTE PTR [edx],bh
  4181be:	ret    
  4181bf:	and    eax,DWORD PTR [eax-0xac2290e]
  4181c5:	ret    
  4181c6:	xlat   BYTE PTR ds:[ebx]
  4181c7:	mov    esi,?
  4181c9:	inc    esp
  4181ca:	addr16 dec ebp
  4181cc:	cmc    
  4181cd:	cmp    dh,BYTE PTR [ebx-0x6e]
  4181d0:	inc    edi
  4181d1:	jb     0x41823b
  4181d3:	pop    edx
  4181d4:	pop    esp
  4181d5:	arpl   bp,bx
  4181d7:	mov    WORD PTR [esi+0x58a1ac65],?
  4181dd:	popa   
  4181de:	mov    al,0xff
  4181e0:	push   esi
  4181e1:	(bad)  
  4181e2:	aas    
  4181e3:	push   edi
  4181e4:	push   esi
  4181e5:	jne    0x418172
  4181e7:	xchg   ecx,eax
  4181e8:	jnp    0x4181a8
  4181ea:	cs inc eax
  4181ec:	scas   al,BYTE PTR es:[edi]
  4181ed:	adc    al,0x58
  4181ef:	imul   eax,DWORD PTR [ecx-0x18],0x56
  4181f3:	xor    BYTE PTR [esi+0x573498fa],0xe5
  4181fa:	jecxz  0x418186
  4181fc:	xor    DWORD PTR [edx],esp
  4181fe:	fadd   st,st(5)
  418200:	mov    edx,0xfddb4f4b
  418205:	add    DWORD PTR [esi-0x32],ebp
  418208:	rcr    DWORD PTR [edx-0x4de825c6],0x5d
  41820f:	rcr    DWORD PTR ds:0x911d9d4e,0x9b
  418216:	jmp    0xf906:0xc010bc42
  41821d:	adc    dl,BYTE PTR [esi]
  41821f:	adc    eax,0xdd159e3e
  418224:	lods   al,BYTE PTR ds:[esi]
  418225:	dec    esi
  418226:	mov    WORD PTR [ebx+0x4a],gs
  418229:	sub    al,0x7d
  41822b:	outs   dx,BYTE PTR ds:[esi]
  41822c:	scas   al,BYTE PTR es:[edi]
  41822d:	jp     0x41826e
  41822f:	dec    eax
  418230:	cmp    dh,BYTE PTR [ebp+0x27acd04e]
  418236:	mov    bh,0xbd
  418238:	sub    DWORD PTR [eax-0x5aa3c33c],edi
  41823e:	xchg   DWORD PTR [esi+0x1e],esi
  418241:	push   ecx
  418242:	dec    ebx
  418243:	sub    DWORD PTR [eax+0x31],0xffffffde
  418247:	shr    esi,1
  418249:	add    esi,0xd32b1b6c
  41824f:	fnstsw WORD PTR [esi-0x63a46902]
  418255:	int3   
  418256:	ss adc al,0x6a
  418259:	ja     0x41829d
  41825b:	ret    
  41825c:	div    BYTE PTR [ebx]
  41825e:	cmp    bl,BYTE PTR [esi-0x31ec6379]
  418264:	jo     0x4182a0
  418266:	mov    eax,cs:0x27543951
  41826c:	add    DWORD PTR [ebp+0x2a8d3e7a],esp
  418272:	mov    ds:0x2bf6efdd,al
  418277:	sbb    bh,BYTE PTR [edx-0x4b76ecf5]
  41827d:	cwde   
  41827e:	jbe    0x41821c
  418280:	push   esp
  418281:	push   0xffffff9b
  418283:	in     eax,0x5e
  418285:	cmp    eax,0xd5b834b1
  41828a:	call   0x3ab3:0xb7b567b1
  418291:	cmp    edi,edx
  418293:	pop    edx
  418294:	into   
  418295:	pop    ecx
  418296:	lea    ebx,[ebx-0x32]
  418299:	cmp    al,0x93
  41829b:	fimul  DWORD PTR [ebp-0xdc1669b]
  4182a1:	(bad)  
  4182a2:	int    0xd8
  4182a4:	adc    al,0x8a
  4182a6:	jg     0x41824c
  4182a8:	lahf   
  4182a9:	mov    dl,0x4b
  4182ab:	xchg   DWORD PTR [ebp-0x22],ebp
  4182ae:	repnz outs dx,DWORD PTR ds:[esi]
  4182b0:	pop    edx
  4182b1:	mov    bl,0x84
  4182b3:	lods   eax,DWORD PTR ds:[esi]
  4182b4:	dec    esp
  4182b5:	xchg   ebp,eax
  4182b6:	lock lds edi,FWORD PTR ds:0x4de02032
  4182bd:	push   esi
  4182be:	pushf  
  4182bf:	jno    0x418258
  4182c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182c2:	sbb    al,0x51
  4182c4:	pop    ecx
  4182c5:	pop    ebp
  4182c6:	and    al,0xd0
  4182c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182c9:	jle    0x418290
  4182cb:	icebp  
  4182cc:	popa   
  4182cd:	jmp    0xdc3c:0x6e95e93
  4182d4:	mov    dl,0x77
  4182d6:	popf   
  4182d7:	or     DWORD PTR [ebx+0x6f],0xffffffca
  4182db:	mov    ecx,0xdf186c31
  4182e0:	push   es
  4182e1:	pushf  
  4182e2:	out    0x6,al
  4182e4:	mov    dh,0x66
  4182e6:	dec    ebx
  4182e7:	mov    esi,0xebd1ec00
  4182ec:	ds mov esi,0x89d6cefa
  4182f2:	loope  0x418365
  4182f4:	xchg   edi,eax
  4182f5:	and    eax,0x54ceeae6
  4182fa:	jle    0x4182e4
  4182fc:	cmp    DWORD PTR [edx],ebp
  4182fe:	ja     0x4182b6
  418300:	adc    dh,BYTE PTR [ebp+0x27]
  418303:	cwde   
  418304:	dec    eax
  418305:	dec    esi
  418306:	mov    cl,0xbd
  418308:	push   0xffffff8a
  41830a:	jbe    0x41831d
  41830c:	adc    DWORD PTR [esi],esi
  41830e:	dec    edx
  41830f:	push   0x30777b75
  418314:	push   es
  418315:	in     eax,0x5a
  418317:	daa    
  418318:	adc    eax,0xeac24468
  41831d:	out    dx,al
  41831e:	adc    ecx,0x2c64626d
  418324:	(bad)  
  418325:	icebp  
  418326:	out    0x8e,eax
  418328:	inc    eax
  418329:	fsubr  st(7),st
  41832b:	(bad)  
  41832c:	cmp    ah,BYTE PTR [ebx-0x252c6998]
  418332:	push   0x63
  418334:	int    0x66
  418336:	in     al,dx
  418337:	repz in al,0x28
  41833a:	sub    al,0x70
  41833c:	cmp    eax,0xcfa82d21
  418341:	or     bl,cl
  418343:	xor    BYTE PTR [edi-0x4e83ab4],dl
  418349:	push   eax
  41834a:	(bad)  [esi]
  41834c:	inc    esi
  41834d:	es push ecx
  41834f:	add    dl,BYTE PTR [edi]
  418351:	shl    ebp,cl
  418353:	xor    BYTE PTR [eax],bh
  418355:	xchg   BYTE PTR [esi+edi*8],ch
  418358:	scas   al,BYTE PTR es:[edi]
  418359:	sub    al,0x6
  41835b:	xchg   BYTE PTR [edx+eax*8+0xa],bh
  41835f:	(bad)  
  418360:	lods   al,BYTE PTR ds:[esi]
  418361:	and    al,0x4a
  418363:	and    ebp,DWORD PTR [ebx]
  418365:	pop    edx
  418366:	pop    ss
  418367:	ins    BYTE PTR es:[edi],dx
  418368:	pop    eax
  418369:	test   eax,0xee4ccb7
  41836e:	xor    eax,0xa36536a1
  418373:	push   cs
  418374:	repnz pop edi
  418376:	aam    0xdb
  418378:	cmp    ebx,DWORD PTR [edx]
  41837a:	xchg   edx,eax
  41837b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41837c:	mov    ecx,0xe6823491
  418381:	mov    ebx,0x536ae621
  418386:	pop    ss
  418387:	outs   dx,DWORD PTR ds:[esi]
  418388:	sub    DWORD PTR [esi],edx
  41838a:	pop    ecx
  41838b:	call   0xb2201657
  418390:	enter  0x564c,0xff
  418394:	sub    eax,0x41b510cd
  418399:	adc    ah,ah
  41839b:	sbb    eax,0xece4964c
  4183a0:	push   edx
  4183a1:	mov    edi,0x2f329101
  4183a6:	(bad)  
  4183a7:	sbb    al,0x1
  4183a9:	fld    TBYTE PTR [ebx-0x89eecfc]
  4183af:	sub    esi,DWORD PTR [edx-0x12e90bca]
  4183b5:	xchg   esp,eax
  4183b6:	mov    ecx,0x4428d347
  4183bb:	or     eax,0x160a76fd
  4183c0:	xchg   ebx,eax
  4183c1:	ror    BYTE PTR fs:[eax],1
  4183c4:	mov    ds:0xdfc96172,al
  4183c9:	clc    
  4183ca:	jp     0x4183bb
  4183cc:	pop    es
  4183cd:	(bad)  
  4183ce:	dec    DWORD PTR [ebp+0x3d]
  4183d1:	adc    BYTE PTR [ebp+0x440c4712],0x2
  4183d8:	mov    al,ds:0x2c042c7a
  4183dd:	mov    ebp,0x64c0942b
  4183e2:	cmp    DWORD PTR [edi+0x2e],ebp
  4183e5:	fstp   st(2)
  4183e7:	dec    esp
  4183e8:	xor    edi,DWORD PTR [ebp-0x2d0fe3e3]
  4183ee:	inc    esp
  4183ef:	jecxz  0x4183d4
  4183f1:	outs   dx,BYTE PTR ds:[esi]
  4183f2:	push   ecx
  4183f3:	leave  
  4183f4:	mov    bh,0xfe
  4183f6:	add    DWORD PTR [ebx-0x5a],ebx
  4183f9:	fwait
  4183fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183fb:	les    ebx,FWORD PTR [esi]
  4183fd:	push   ebp
  4183fe:	push   edx
  4183ff:	cmp    DWORD PTR [esi+0x6a],ecx
  418402:	inc    edx
  418403:	fld    QWORD PTR [ebx-0x5]
  418406:	pushf  
  418407:	xchg   BYTE PTR [ecx],al
  418409:	jno    0x418391
  41840b:	adc    eax,0x1a94e4d3
  418410:	stc    
  418411:	cmc    
  418412:	cmp    eax,0xa978b022
  418417:	adc    al,0x22
  418419:	jne    0x4183b9
  41841b:	add    cl,0xb5
  41841e:	or     eax,0xb65d988f
  418423:	pop    eax
  418424:	jl     0x418432
  418426:	xor    al,0xf0
  418428:	(bad)  
  418429:	xchg   ecx,eax
  41842a:	inc    esp
  41842b:	fsubr  st(1),st
  41842d:	sub    edi,DWORD PTR [edx+0x127bb298]
  418433:	jae    0x418433
  418435:	cli    
  418436:	mov    eax,ds:0x635b2ecc
  41843b:	dec    ebp
  41843c:	jp     0x418491
  41843e:	rol    bh,1
  418440:	add    DWORD PTR [esp+edi*2+0xd],ebp
  418444:	js     0x4183ec
  418446:	fidiv  WORD PTR [eax-0x4d766c9]
  41844c:	test   dl,cl
  41844e:	adc    al,0xd8
  418450:	scas   al,BYTE PTR es:[edi]
  418451:	add    bl,BYTE PTR [edx+0x63]
  418454:	test   BYTE PTR [esi+0x30],ah
  418457:	les    eax,FWORD PTR [ecx+0x344dcea3]
  41845d:	test   DWORD PTR [esi+0x4c],esp
  418460:	and    ecx,esi
  418462:	scas   eax,DWORD PTR es:[edi]
  418463:	in     eax,0xd5
  418465:	sbb    DWORD PTR [esi-0x6b],ebp
  418468:	out    0x98,al
  41846a:	int3   
  41846b:	(bad)  
  41846d:	fadd   st(4),st
  41846f:	xlat   BYTE PTR ds:[ebx]
  418470:	mov    DWORD PTR [edi+0x7f533791],eax
  418476:	into   
  418477:	cmc    
  418478:	mov    al,0x81
  41847a:	xor    cl,BYTE PTR [edi]
  41847c:	adc    al,0xc1
  41847e:	and    DWORD PTR [eax+0x27],ebx
  418481:	xchg   ecx,eax
  418482:	push   0xffffffee
  418484:	retf   0xbbbc
  418487:	stos   DWORD PTR es:[edi],eax
  418488:	je     0x41841b
  41848a:	cmp    BYTE PTR [ecx-0x5ba11bfe],0x10
  418491:	mov    ah,0xa8
  418493:	call   0x6f6f84
  418498:	pop    esi
  418499:	in     al,dx
  41849a:	bnd jb 0x4184ba
  41849d:	fs push 0x8f3373fd
  4184a3:	sub    eax,0xb04adaf2
  4184a9:	inc    ebp
  4184aa:	loopne 0x4184b1
  4184ac:	mov    edx,ds
  4184ae:	cli    
  4184af:	fistp  WORD PTR [eax-0x45b195f0]
  4184b5:	jecxz  0x4184e2
  4184b7:	mov    DWORD PTR [ebp-0x4b],edx
  4184ba:	stc    
  4184bb:	pop    ecx
  4184bc:	mov    ?,WORD PTR [ecx+0x28]
  4184bf:	stc    
  4184c0:	mov    ch,bl
  4184c2:	push   0x62
  4184c4:	and    edx,edx
  4184c6:	lahf   
  4184c7:	stc    
  4184c8:	fild   QWORD PTR [ecx]
  4184ca:	mov    WORD PTR [esi],ds
  4184cc:	or     dh,BYTE PTR [esi]
  4184ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184cf:	or     al,0x7e
  4184d1:	fwait
  4184d2:	ja     0x418532
  4184d4:	into   
  4184d5:	leave  
  4184d6:	xchg   BYTE PTR [ecx],ah
  4184d8:	and    al,0xbc
  4184db:	pop    esi
  4184dc:	mov    ds:0x3572d1e4,eax
  4184e1:	xor    DWORD PTR [ebp+0x28b0b6ad],ecx
  4184e7:	pop    ebx
  4184e8:	inc    eax
  4184e9:	jo     0x4184aa
  4184eb:	imul   esi,DWORD PTR [ebx-0x264c50b3],0x93bf76c8
  4184f5:	mov    edx,0x9eb4e281
  4184fa:	dec    esi
  4184fb:	push   eax
  4184fc:	dec    esp
  4184fd:	and    ecx,ebp
  4184ff:	sub    DWORD PTR [esi-0x69],edx
  418502:	call   0xc078:0xcd37104b
  418509:	xor    edx,0x85b56615
  41850f:	xor    DWORD PTR [esi-0x75],eax
  418512:	push   ebx
  418513:	sti    
  418514:	inc    ecx
  418515:	push   esp
  418516:	sub    esp,DWORD PTR [edi]
  418518:	inc    edx
  418519:	(bad)  
  41851a:	(bad)  
  41851b:	sti    
  41851c:	sbb    BYTE PTR ds:0x68db2666,bl
  418522:	clc    
  418523:	sahf   
  418524:	gs std 
  418526:	(bad)  
  418527:	int3   
  418528:	sbb    BYTE PTR [ebx+0x5ccfe84f],0xca
  41852f:	dec    edx
  418530:	mov    cl,0xc2
  418532:	gs cmp eax,0x27d67ca
  418538:	stos   DWORD PTR es:[edi],eax
  418539:	lock dec esi
  41853b:	retf   0x6705
  41853e:	sub    BYTE PTR [ecx+0x4c998eb],ch
  418544:	push   0xffffff9f
  418546:	retf   
  418547:	fidiv  WORD PTR [esp+eiz*4+0x35]
  41854b:	leave  
  41854c:	pop    ebp
  41854d:	push   ebx
  41854e:	aaa    
  41854f:	fnstsw WORD PTR [ecx]
  418551:	mov    eax,0x12a63b01
  418556:	mov    esp,0x87640ed8
  41855b:	inc    ebp
  41855c:	mov    BYTE PTR [esi],ah
  41855e:	xlat   BYTE PTR ds:[ebx]
  41855f:	push   ds
  418560:	xchg   ecx,eax
  418561:	addr16 fneni(8087 only) 
  418564:	fidivr DWORD PTR [edx]
  418566:	add    DWORD PTR [ecx],ebx
  418568:	sahf   
  418569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41856a:	and    DWORD PTR [esi-0x8],0xa49d7e29
  418571:	pop    eax
  418572:	dec    edx
  418573:	pop    ds
  418574:	sar    BYTE PTR [edi-0x79],0x40
  418578:	inc    esi
  418579:	jge    0x4185da
  41857b:	iret   
  41857c:	mov    bl,0x7e
  41857e:	jo     0x4185f8
  418580:	(bad)  
  418581:	int3   
  418582:	jecxz  0x4185c8
  418584:	xlat   BYTE PTR ds:[ebx]
  418585:	and    bh,al
  418587:	adc    BYTE PTR [ebx+0x5f9b669b],bh
  41858d:	pop    ds
  41858e:	xor    dh,bh
  418590:	inc    esi
  418591:	lahf   
  418592:	stc    
  418593:	mov    al,ds:0x40673bbd
  418598:	hlt    
  418599:	mov    ah,0x6e
  41859b:	mov    esi,0x4bf3d874
  4185a0:	dec    esp
  4185a1:	dec    esp
  4185a2:	adc    al,dl
  4185a4:	rcl    DWORD PTR es:[edi+0x7ce8916c],0x5
  4185ac:	jnp    0x4185f6
  4185ae:	test   BYTE PTR ds:0x8ad49bb7,al
  4185b4:	push   es
  4185b5:	pop    edi
  4185b6:	adc    BYTE PTR [edx],bh
  4185b8:	push   ds
  4185b9:	je     0x418603
  4185bb:	clc    
  4185bc:	sahf   
  4185bd:	das    
  4185be:	les    edi,FWORD PTR [ebp-0x4d]
  4185c1:	lds    esp,FWORD PTR [ecx]
  4185c3:	cmp    cl,ch
  4185c5:	test   ebx,esi
  4185c7:	dec    DWORD PTR [edi-0x5586d050]
  4185cd:	xchg   esi,eax
  4185ce:	sub    DWORD PTR [eax-0x2f78b09e],esp
  4185d4:	push   ss
  4185d5:	inc    edx
  4185d6:	test   BYTE PTR [ebx-0x35],0x6a
  4185da:	sahf   
  4185db:	inc    edx
  4185dc:	je     0x418595
  4185de:	hlt    
  4185df:	cmp    dh,cl
  4185e1:	ins    BYTE PTR es:[edi],dx
  4185e2:	inc    edx
  4185e3:	rcl    bl,0x55
  4185e6:	fisttp WORD PTR [eax+0x16]
  4185e9:	xchg   ecx,eax
  4185ea:	cmp    dh,cl
  4185ec:	xor    DWORD PTR [ecx],ebx
  4185ee:	ja     0x418652
  4185f0:	(bad)  
  4185f1:	add    eax,ecx
  4185f3:	inc    esp
  4185f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185f5:	push   esp
  4185f6:	test   al,0x18
  4185f8:	in     eax,dx
  4185f9:	inc    ecx
  4185fa:	cs in  eax,0x93
  4185fd:	xor    BYTE PTR [edx+0x79],bl
  418600:	or     dl,bl
  418602:	scas   al,BYTE PTR es:[edi]
  418603:	mov    ebp,0xb8fd6b66
  418608:	inc    ecx
  418609:	or     eax,0x34aba35
  41860e:	loop   0x418624
  418610:	in     al,0x59
  418612:	cli    
  418613:	jmp    0x4cf4:0xa1d83945
  41861a:	je     0x4185e4
  41861c:	iret   
  41861d:	cli    
  41861e:	cmp    eax,0xe72f5963
  418623:	lfs    esi,FWORD PTR [ebx+0x2b278a6e]
  41862a:	sbb    al,0x48
  41862c:	shr    DWORD PTR [esi],0xa5
  41862f:	(bad)  
  418631:	test   BYTE PTR [edx+0x4e],bh
  418634:	mov    eax,0x5869c7f8
  418639:	fst    st(1)
  41863b:	or     al,0x81
  41863d:	cmp    al,0x5
  41863f:	popa   
  418640:	ror    DWORD PTR [ecx-0x1957e753],1
  418646:	pop    ecx
  418647:	(bad)  
  418648:	mov    ebx,0x1544b907
  41864d:	fst    QWORD PTR [esi-0x5b5d64a2]
  418653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418654:	out    dx,al
  418655:	xchg   DWORD PTR [edx-0x1],ebx
  418658:	jecxz  0x4186c3
  41865a:	xor    BYTE PTR [esi],ch
  41865c:	clc    
  41865d:	or     eax,0x8ecb6915
  418662:	neg    bh
  418664:	lea    eax,[esi]
  418666:	in     al,0xf0
  418668:	add    eax,0x8ef62e65
  41866d:	xor    BYTE PTR [edx-0x49],dl
  418670:	out    dx,al
  418671:	sub    DWORD PTR [ecx],ebx
  418673:	jnp    0x41866d
  418675:	fstp   QWORD PTR [ebx]
  418677:	pop    esi
  418678:	fild   DWORD PTR [edx-0x55]
  41867b:	mov    esp,cs
  41867d:	daa    
  41867e:	(bad)  
  418680:	les    edi,FWORD PTR [ecx]
  418682:	adc    cl,BYTE PTR [ebx+0x20]
  418685:	retf   0x6b21
  418688:	pop    es
  418689:	nop
  41868a:	pop    edi
  41868b:	scas   al,BYTE PTR es:[edi]
  41868c:	nop
  41868d:	fs cli 
  41868f:	mov    bp,0x83aa
  418693:	stos   BYTE PTR es:[edi],al
  418694:	sub    eax,0x59033289
  418699:	mov    esi,0x34a56f39
  41869e:	add    dh,BYTE PTR [ebp-0x4d5788ba]
  4186a4:	repz jns 0x41864a
  4186a7:	and    bh,BYTE PTR [ebx-0x51f59765]
  4186ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186ae:	lock outs dx,DWORD PTR ds:[esi]
  4186b0:	mov    edi,0x9b9e57bf
  4186b5:	adc    dl,BYTE PTR [ebp+0x111229e0]
  4186bb:	push   edi
  4186bc:	jp     0x418717
  4186be:	mov    cl,0x51
  4186c0:	sar    ecx,cl
  4186c2:	mov    ds:0xae7e8626,eax
  4186c7:	push   ecx
  4186c8:	jecxz  0x4186df
  4186ca:	std    
  4186cb:	out    0x23,al
  4186cd:	mov    al,ds:0x148b485a
  4186d2:	sbb    esi,DWORD PTR [esi+0x573f7a10]
  4186d8:	icebp  
  4186d9:	dec    ebp
  4186da:	lock add eax,DWORD PTR [edi-0x52]
  4186de:	daa    
  4186df:	dec    esi
  4186e0:	mov    ebp,es
  4186e2:	cli    
  4186e3:	enter  0x608a,0x90
  4186e7:	enter  0x867c,0x37
  4186eb:	shr    BYTE PTR [ebp-0x15],cl
  4186ee:	shr    BYTE PTR [ebp+0x4d],cl
  4186f1:	popa   
  4186f2:	scas   al,BYTE PTR es:[edi]
  4186f3:	adc    ebp,esp
  4186f5:	test   al,0xd2
  4186f7:	daa    
  4186f8:	push   cs
  4186f9:	adc    BYTE PTR [ebx+ebx*1-0xf],ah
  4186fd:	cdq    
  4186fe:	sub    esi,DWORD PTR [esp+ecx*8]
  418701:	popa   
  418702:	es mov al,0x4a
  418705:	popa   
  418706:	in     al,0x31
  418708:	mov    esp,0x3fedc5d8
  41870d:	scas   al,BYTE PTR es:[edi]
  41870e:	test   ecx,esp
  418710:	mov    cl,0x5e
  418712:	lods   eax,DWORD PTR ds:[esi]
  418713:	inc    eax
  418714:	and    al,0x1
  418716:	and    edx,DWORD PTR [esi+ecx*4]
  418719:	into   
  41871a:	ret    
  41871b:	and    al,0xb8
  41871d:	jns    0x41874e
  41871f:	in     eax,0x79
  418721:	call   0x2c9e:0x795a531b
  418728:	nop
  418729:	sbb    ecx,DWORD PTR [ecx]
  41872b:	fist   DWORD PTR [ebx-0x4d8215c7]
  418731:	jns    0x4187b0
  418733:	mov    edi,0xe8dc6414
  418738:	call   0x2757:0xfbda0e1a
  41873f:	ffree  st(7)
  418741:	adc    ecx,DWORD PTR [edi-0x361c9bbc]
  418747:	retf   0x812e
  41874a:	in     al,dx
  41874b:	mov    ds:0xd36cdf4a,al
  418750:	push   es
  418751:	jle    0x41878c
  418753:	mul    BYTE PTR [esi+0x28]
  418756:	les    edi,FWORD PTR [edx-0x27]
  418759:	out    dx,al
  41875a:	jae    0x418736
  41875c:	dec    eax
  41875d:	(bad)  
  41875f:	mov    WORD PTR [ecx],es
  418761:	push   0xe7a9a891
  418766:	inc    edx
  418767:	addr16 sub al,0x8a
  41876a:	mov    BYTE PTR [ebp+0x75],cl
  41876d:	pop    edx
  41876e:	jo     0x4187a8
  418770:	mov    al,ds:0x2cdb4cf6
  418775:	dec    esp
  418776:	pusha  
  418777:	hlt    
  418778:	add    DWORD PTR [esi+0x7e6842c],esp
  41877e:	add    eax,0x67bb0c6a
  418783:	ins    BYTE PTR es:[edi],dx
  418784:	leave  
  418785:	sub    eax,0x29f54773
  41878a:	imul   ecx,DWORD PTR [edi],0x18bf152b
  418790:	dec    esp
  418791:	js     0x418795
  418793:	(bad)  
  418794:	mov    ch,0x2d
  418796:	pop    edi
  418797:	inc    ebp
  418798:	cdq    
  418799:	xlat   BYTE PTR ds:[ebx]
  41879a:	ret    0x7572
  41879d:	cmp    BYTE PTR [ebx+eiz*8+0x7d],ch
  4187a1:	ins    DWORD PTR es:[edi],dx
  4187a2:	fld    TBYTE PTR [esp+edi*4+0x64256fa1]
  4187a9:	test   al,0x6d
  4187ab:	out    0xcd,eax
  4187ad:	out    dx,eax
  4187ae:	pop    ds
  4187af:	mov    al,0x87
  4187b1:	in     eax,dx
  4187b2:	mov    WORD PTR [ecx+0x64],?
  4187b5:	lea    esi,[ebx-0x31efd1b]
  4187bb:	ror    DWORD PTR [eax+0x1c151a05],1
  4187c1:	push   0x7c
  4187c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187c4:	pop    ebp
  4187c5:	adc    eax,0x5a36e567
  4187ca:	iret   
  4187cb:	retf   
  4187cc:	sti    
  4187cd:	jb     0x418782
  4187cf:	daa    
  4187d0:	pop    ds
  4187d1:	(bad)  [ebx]
  4187d3:	inc    esp
  4187d4:	jg     0x4187cc
  4187d6:	sbb    DWORD PTR [edx],0xffffffef
  4187d9:	loopne 0x418855
  4187db:	xor    DWORD PTR ds:0x129cde0f,eax
  4187e1:	scas   eax,DWORD PTR es:[edi]
  4187e2:	xchg   bl,dl
  4187e4:	out    dx,al
  4187e5:	xchg   ecx,eax
  4187e6:	mov    bh,0x9c
  4187e8:	outs   dx,BYTE PTR ds:[esi]
  4187e9:	jb     0x418844
  4187eb:	mov    dl,0x8f
  4187ed:	add    eax,eax
  4187ef:	scas   al,BYTE PTR es:[edi]
  4187f0:	pop    edx
  4187f1:	xor    BYTE PTR [ecx+ebx*4+0x3d],bh
  4187f5:	loope  0x418829
  4187f7:	mov    esp,0x6fde311
  4187fc:	rcl    BYTE PTR [edx+esi*1+0x6e],cl
  418800:	mov    bh,0x51
  418802:	mov    esi,0x230e463b
  418807:	popa   
  418808:	sub    eax,0xfa8ae554
  41880d:	sub    ebp,DWORD PTR [edx+0x35ebcfa5]
  418813:	sub    BYTE PTR [ebx+edx*2],ch
  418816:	ins    BYTE PTR es:[edi],dx
  418817:	and    al,0xb9
  418819:	icebp  
  41881a:	or     DWORD PTR [ebx+0x5a],0x17
  41881e:	fstp   TBYTE PTR [ebp+ecx*2-0x4]
  418822:	cmp    ebx,DWORD PTR [ebp+0xc]
  418825:	pop    ebx
  418826:	mov    edi,DWORD PTR [ecx-0x32]
  418829:	inc    esi
  41882a:	mov    ebx,0xdcefcb7f
  41882f:	and    ah,BYTE PTR [edx-0x1a]
  418832:	dec    ecx
  418833:	push   cs
  418834:	cmp    eax,0x937742d6
  418839:	dec    edx
  41883a:	and    edi,DWORD PTR [ebx-0x4]
  41883d:	xor    edi,DWORD PTR ds:0x1d3fe2d3
  418843:	xor    edi,ecx
  418845:	cmp    edi,edx
  418847:	fs mov bh,0xe2
  41884a:	xor    BYTE PTR [ebx-0x4d],ah
  41884d:	xadd   ch,dl
  418850:	and    edi,DWORD PTR [esi]
  418852:	pop    edi
  418853:	(bad)  
  418854:	cmp    DWORD PTR [ebx],edi
  418856:	les    esi,FWORD PTR [ebx+0x0]
  418859:	pop    ebx
  41885a:	sar    DWORD PTR [eax+0x5978a363],1
  418860:	and    al,0x89
  418862:	loop   0x418871
  418864:	pop    edx
  418865:	sub    cl,BYTE PTR [eax+0x19]
  418868:	push   ecx
  418869:	daa    
  41886a:	out    0xdf,al
  41886c:	xchg   esi,eax
  41886d:	xchg   ebx,eax
  41886e:	or     ebp,edx
  418870:	adc    ecx,0x24
  418873:	or     eax,0xcc88828c
  418878:	mov    dl,0x46
  41887a:	shl    BYTE PTR [edx-0x13],1
  41887d:	mov    esi,ebp
  41887f:	clc    
  418880:	test   al,0x90
  418882:	ja     0x4188d4
  418884:	inc    ecx
  418885:	(bad)  
  418886:	cdq    
  418887:	mov    eax,ds:0xd4e6ddc4
  41888c:	retf   0x9e0e
  41888f:	or     al,0xa4
  418891:	xor    DWORD PTR ds:0x17f97841,esp
  418897:	out    0x5,al
  418899:	mov    ds:0x418b2b25,eax
  41889e:	cmp    esp,esp
  4188a0:	clc    
  4188a1:	mov    edx,0xd063da2f
  4188a6:	call   0x1bfefe2e
  4188ab:	push   ebp
  4188ac:	mov    edx,0xbc372f03
  4188b1:	sub    ah,ch
  4188b3:	shl    DWORD PTR [edi-0x39],0xf6
  4188b7:	cmp    BYTE PTR ds:0xdb1f91ff,ch
  4188bd:	les    ebx,FWORD PTR [ebx-0x18]
  4188c0:	sub    ebx,ebp
  4188c2:	daa    
  4188c3:	mov    cl,0x9c
  4188c5:	mov    bh,0xab
  4188c7:	or     al,0xc4
  4188c9:	fs clc 
  4188cb:	pop    edi
  4188cc:	and    DWORD PTR [edx+0x7c],0x1339baf
  4188d3:	jb     0x4188a7
  4188d5:	push   edi
  4188d6:	test   eax,0xea179afa
  4188db:	inc    ebp
  4188dc:	(bad)
  4188e0:	aad    0x45
  4188e2:	lods   al,BYTE PTR ds:[esi]
  4188e3:	push   eax
  4188e4:	sbb    DWORD PTR [eax-0x51],edx
  4188e7:	call   0x748991e2
  4188ec:	add    ebp,esp
  4188ee:	push   0x100904c8
  4188f3:	xor    cl,BYTE PTR [ecx+0x53]
  4188f6:	leave  
  4188f7:	adc    al,0xa0
  4188f9:	std    
  4188fa:	mov    BYTE PTR [ebx],al
  4188fc:	cmp    BYTE PTR [ebx-0x16a2e1f],bl
  418902:	inc    ebp
  418903:	xchg   DWORD PTR [esi-0x7589dc56],eax
  418909:	fmul   DWORD PTR [edi-0x634e3aa6]
  41890f:	jb     0x41895b
  418911:	mov    dh,0x5d
  418913:	xor    eax,0x1f718336
  418918:	and    BYTE PTR [ebx-0x21],dl
  41891b:	cmp    edx,DWORD PTR [ebp-0x2c142999]
  418921:	and    esi,0xfb486b46
  418927:	xchg   edx,eax
  418928:	add    BYTE PTR [ecx+eiz*2-0x7ae7b165],cl
  41892f:	mov    esi,0xccca4aa5
  418934:	jno    0x4188cb
  418936:	outs   dx,BYTE PTR ds:[esi]
  418937:	cwde   
  418938:	mov    ch,0x53
  41893a:	xchg   ebx,eax
  41893b:	neg    BYTE PTR [edx]
  41893d:	pop    ebx
  41893e:	adc    al,0xdd
  418940:	out    0x2d,eax
  418942:	outs   dx,DWORD PTR ds:[esi]
  418943:	mov    dl,0x35
  418945:	cmp    esp,DWORD PTR ds:0x431bfdf
  41894b:	xchg   esp,eax
  41894c:	dec    edx
  41894d:	sub    ecx,DWORD PTR [eax+ebp*2-0x6a]
  418951:	aaa    
  418952:	push   ss
  418953:	punpcklwd mm3,DWORD PTR [ebp-0x6268e914]
  41895a:	xchg   edx,eax
  41895b:	inc    ecx
  41895c:	adc    ch,al
  41895e:	aaa    
  41895f:	dec    eax
  418960:	cmp    al,0xa1
  418962:	fdiv   QWORD PTR [eax+0x76]
  418965:	or     BYTE PTR [ebx-0x14b554d9],dh
  41896b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41896c:	rcr    BYTE PTR [esi-0x48],0x6e
  418970:	pop    esi
  418971:	repz push 0x17be6c89
  418977:	and    al,0x7
  418979:	icebp  
  41897a:	aaa    
  41897b:	gs mov esp,0x41975233
  418981:	popa   
  418982:	retf   0xdf95
  418985:	push   ss
  418986:	add    DWORD PTR [esi-0x52d6559c],esi
  41898c:	in     al,0x8
  41898e:	mov    WORD PTR [edx-0x1d49bd61],fs
  418994:	daa    
  418995:	jecxz  0x4189f7
  418997:	sbb    eax,0x1c1292d9
  41899c:	or     dh,dl
  41899e:	icebp  
  41899f:	jmp    0xabe08950
  4189a4:	into   
  4189a5:	inc    ebx
  4189a6:	jae    0x4189de
  4189a8:	mov    ch,0x57
  4189aa:	clc    
  4189ab:	ret    0x646c
  4189ae:	or     esp,ebx
  4189b0:	sti    
  4189b1:	pusha  
  4189b2:	mov    bl,0x5b
  4189b4:	in     eax,dx
  4189b5:	jmp    0xfb0a:0x923c0cf5
  4189bc:	sub    DWORD PTR [ecx*8-0x7e6b9d98],edx
  4189c3:	mov    DWORD PTR [edx-0x48],ebp
  4189c6:	pop    edi
  4189c7:	mov    dh,0x1b
  4189c9:	mov    ch,0x3a
  4189cb:	sub    eax,0x7729c5ca
  4189d0:	fcmove st,st(1)
  4189d2:	(bad)  
  4189d3:	mov    eax,eax
  4189d5:	call   0x5681:0xd6fa0b2a
  4189dc:	loopne 0x418a46
  4189de:	mov    bh,0x10
  4189e0:	adc    al,0x88
  4189e2:	xor    eax,DWORD PTR [ebx+0x1a]
  4189e5:	mov    WORD PTR [edi-0x66b4ebca],fs
  4189eb:	les    esi,FWORD PTR [ebp+0x77]
  4189ee:	hlt    
  4189ef:	sar    BYTE PTR [edi-0x41861639],0x54
  4189f6:	add    DWORD PTR [ebx+0x4c42a32],eax
  4189fc:	(bad)  
  4189fd:	xor    al,0x9
  4189ff:	imul   esp,ebx,0x1d2d29e7
  418a05:	mov    ah,0x1e
  418a07:	fadd   DWORD PTR [ebp+eax*1+0x67bf84fa]
  418a0f:	jge    0x4189b1
  418a11:	fst    st(7)
  418a13:	xor    DWORD PTR [ecx+ebx*8+0x79],ebx
  418a17:	repnz xor BYTE PTR [edi+0x3d09e943],dh
  418a1e:	lds    ebp,FWORD PTR [edi]
  418a20:	sti    
  418a21:	iret   
  418a22:	or     al,0xc3
  418a24:	inc    eax
  418a25:	push   es
  418a26:	out    0x22,eax
  418a28:	push   esi
  418a29:	in     al,0x5b
  418a2b:	mov    dl,0x4e
  418a2d:	daa    
  418a2e:	cmp    DWORD PTR [edi+edi*8],0x49
  418a32:	dec    edx
  418a33:	push   edi
  418a34:	loop   0x4189fb
  418a36:	push   0xffffff97
  418a38:	inc    edx
  418a39:	fimul  DWORD PTR [ebx]
  418a3b:	mov    al,ds:0x45cf1eb9
  418a40:	mov    dl,0x9f
  418a42:	jnp    0x418a39
  418a44:	mov    bl,0x32
  418a46:	adc    al,0x8a
  418a48:	xor    al,0x69
  418a4a:	pop    esp
  418a4b:	imul   esi,esp,0x8f81456a
  418a51:	jb     0x4189d5
  418a53:	test   DWORD PTR [edi+0x73],eax
  418a56:	jnp    0x4189fd
  418a58:	push   cs
  418a59:	jle    0x418a86
  418a5b:	xor    al,0x5c
  418a5d:	mov    dh,0x1f
  418a5f:	jae    0x418a2d
  418a61:	je     0x418a9c
  418a63:	mov    ch,BYTE PTR [edi-0x6b7b73eb]
  418a69:	xchg   ecx,eax
  418a6a:	cmp    dl,bl
  418a6c:	loopne 0x418a95
  418a6e:	add    al,0x6c
  418a70:	push   ds
  418a71:	jns    0x418a80
  418a73:	pusha  
  418a74:	lock xchg esi,eax
  418a76:	mul    BYTE PTR [ecx]
  418a78:	(bad)  
  418a79:	cmp    BYTE PTR [ebp-0xa],dl
  418a7c:	call   0x9b51cc9f
  418a81:	aad    0x29
  418a83:	repnz mov BYTE PTR [edi+edx*1-0x18],al
  418a88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a89:	out    0x4,eax
  418a8b:	fst    QWORD PTR [ebx+0x64]
  418a8e:	jg     0x418a8a
  418a90:	in     al,0x60
  418a92:	gs pop ecx
  418a94:	call   0x1919bf96
  418a99:	(bad)  
  418a9a:	in     eax,dx
  418a9b:	add    al,0x4
  418a9d:	sbb    eax,0x37c4647a
  418aa2:	xchg   al,cl
  418aa4:	pop    ebx
  418aa5:	mov    esp,0x4ef65856
  418aaa:	jle    0x418afb
  418aac:	iret   
  418aad:	dec    eax
  418aae:	addr16 xor eax,0x98e7005e
  418ab4:	in     al,dx
  418ab5:	daa    
  418ab6:	fcomp  DWORD PTR [ebp+0x41]
  418ab9:	pop    DWORD PTR [edx+0x74]
  418abc:	call   0x6279:0x42a08700
  418ac3:	push   es
  418ac4:	daa    
  418ac5:	pop    ebx
  418ac6:	mov    ecx,0x2b218a2d
  418acb:	mov    eax,ds:0x3f966d7
  418ad0:	pusha  
  418ad1:	pop    ds
  418ad2:	adc    al,0x8f
  418ad4:	ins    BYTE PTR es:[edi],dx
  418ad5:	ficomp DWORD PTR [edi]
  418ad7:	push   edi
  418ad8:	sub    esp,ebx
  418ada:	push   ss
  418adb:	ins    DWORD PTR es:[edi],dx
  418adc:	mov    dl,0x3
  418ade:	shr    DWORD PTR [esi+0x1fd3cf5c],0x2d
  418ae5:	push   0xffffff92
  418ae7:	and    al,0x6a
  418ae9:	mov    eax,ds:0xe4589a22
  418aee:	dec    ebp
  418aef:	push   ss
  418af0:	pop    ecx
  418af1:	jp     0x418b5d
  418af3:	lea    edx,[ebp-0xd]
  418af6:	or     BYTE PTR [esp+eiz*4],ah
  418af9:	in     al,0x9d
  418afb:	push   0x42f22533
  418b00:	add    BYTE PTR [edi],0xee
  418b03:	jge    0x418a88
  418b05:	arpl   WORD PTR [eax-0x7f],sp
  418b08:	xchg   DWORD PTR [ebx],esp
  418b0a:	push   ebp
  418b0b:	jge    0x418b53
  418b0d:	push   ds
  418b0e:	mov    ch,0x63
  418b10:	adc    BYTE PTR [esi+0x68],dh
  418b13:	mov    al,ds:0xc897c1dd
  418b18:	ja     0x418b6c
  418b1a:	lock sbb eax,0xe03d3250
  418b20:	cwde   
  418b21:	pop    edi
  418b22:	inc    edx
  418b23:	xor    edx,eax
  418b25:	pop    ebp
  418b26:	xchg   esi,eax
  418b27:	mov    cl,0xc4
  418b29:	mov    eax,ds:0xe52407cf
  418b2e:	imul   ax,WORD PTR [ecx],0xffc3
  418b32:	push   esi
  418b33:	cmc    
  418b34:	pushf  
  418b35:	sbb    dl,al
  418b37:	jnp    0x418b85
  418b39:	cmp    al,0x1a
  418b3b:	or     bl,bl
  418b3d:	cmp    DWORD PTR [ebx],edx
  418b3f:	sub    eax,0x42c766f8
  418b44:	les    edi,FWORD PTR [esi]
  418b46:	xchg   ebx,eax
  418b47:	cmovno eax,DWORD PTR [edi]
  418b4a:	add    edx,DWORD PTR [ebx]
  418b4c:	aaa    
  418b4d:	test   DWORD PTR [ecx],ecx
  418b4f:	jno    0x418afc
  418b51:	out    dx,eax
  418b52:	sbb    edi,edx
  418b54:	sbb    ecx,DWORD PTR [edx]
  418b56:	or     bh,BYTE PTR [ecx+0x59]
  418b59:	js     0x418b17
  418b5b:	mov    edi,0xbf7330c1
  418b60:	in     al,0x7
  418b62:	pop    esi
  418b63:	fldcw  WORD PTR [edi+0x41]
  418b66:	push   edx
  418b67:	cmp    ecx,esp
  418b69:	js     0x418bc7
  418b6b:	xchg   ebx,eax
  418b6c:	test   edx,esi
  418b6e:	inc    esp
  418b6f:	lea    esi,[edx-0x22]
  418b72:	xor    esp,ecx
  418b74:	push   ds
  418b75:	mov    ds:0x6dc3d8a4,eax
  418b7a:	add    eax,0x6262205d
  418b7f:	clc    
  418b80:	dec    edi
  418b81:	fdivr  QWORD PTR [ecx+0x19f3e763]
  418b87:	mov    dl,BYTE PTR [ebx]
  418b89:	cmp    DWORD PTR [ebx-0x75770f3e],esp
  418b8f:	push   cs
  418b90:	adc    dl,BYTE PTR [eax+0x279a7d69]
  418b96:	fmul   QWORD PTR [esi+0x48]
  418b99:	push   es
  418b9a:	int3   
  418b9b:	arpl   WORD PTR [ebx-0x67c7204b],cx
  418ba1:	adc    ch,BYTE PTR [edx]
  418ba3:	xor    ebx,esi
  418ba5:	shl    ebp,0xe8
  418ba8:	fdivp  st(3),st
  418baa:	or     DWORD PTR [edx+0x3e3cb332],edi
  418bb0:	mov    eax,ds:0xafdf5214
  418bb5:	or     eax,0xdfc90dd7
  418bba:	stc    
  418bbb:	xor    BYTE PTR ds:0x777ca4f1,ch
  418bc1:	fwait
  418bc2:	or     al,0x2b
  418bc4:	test   al,0xa8
  418bc6:	lds    edx,FWORD PTR [edx]
  418bc8:	rcl    eax,0xa5
  418bcb:	xchg   ecx,eax
  418bcc:	or     dl,BYTE PTR [esi]
  418bce:	cld    
  418bcf:	call   0xcd2e1971
  418bd4:	imul   edi,DWORD PTR cs:[eax-0x1],0x8
  418bd9:	arpl   WORD PTR [eax],di
  418bdb:	loop   0x418c59
  418bdd:	push   ss
  418bde:	mov    bl,0xf9
  418be0:	scas   al,BYTE PTR es:[edi]
  418be1:	and    BYTE PTR [edi-0x48],ch
  418be4:	cmp    ch,BYTE PTR [eax-0x13]
  418be7:	(bad)  
  418be8:	test   al,0xa2
  418bea:	push   ss
  418beb:	add    ecx,DWORD PTR [edi-0x562be271]
  418bf1:	jecxz  0x418c67
  418bf3:	jno    0x418ba4
  418bf5:	dec    ecx
  418bf6:	mov    esp,0x6832ead
  418bfb:	and    al,0x40
  418bfd:	push   esi
  418bfe:	xchg   BYTE PTR gs:[esi],ah
  418c01:	mov    edx,0x1c90ce42
  418c06:	jae    0x418bef
  418c08:	out    dx,eax
  418c09:	ror    ecx,cl
  418c0b:	inc    esi
  418c0c:	lods   al,BYTE PTR ds:[esi]
  418c0d:	loope  0x418bce
  418c0f:	leave  
  418c10:	fistp  DWORD PTR [ecx+0x622bf8c4]
  418c16:	add    eax,0x628141f9
  418c1b:	pop    es
  418c1c:	xrelease xchg BYTE PTR [ebx-0x69489a3c],al
  418c23:	mov    bl,BYTE PTR [esi-0xf]
  418c26:	inc    eax
  418c27:	arpl   WORD PTR [ecx+ebx*1-0x68],dx
  418c2b:	imul   esi,DWORD PTR [ecx+0x22],0x760e8577
  418c32:	clc    
  418c33:	dec    edx
  418c34:	add    BYTE PTR [edi],ah
  418c36:	push   ss
  418c37:	push   ecx
  418c38:	inc    ebp
  418c39:	leave  
  418c3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c3b:	push   0xfffffff0
  418c3d:	jns    0x418bf8
  418c3f:	into   
  418c40:	sub    ch,al
  418c42:	ins    BYTE PTR es:[edi],dx
  418c43:	repnz inc esi
  418c45:	into   
  418c46:	or     ecx,DWORD PTR [edi+0x5a95535b]
  418c4c:	or     al,0xd2
  418c4e:	push   0xffffffb6
  418c50:	jle    0x418bd3
  418c52:	jbe    0x418c20
  418c54:	out    0x4e,eax
  418c56:	pop    ebx
  418c57:	out    0x63,eax
  418c59:	jecxz  0x418bf2
  418c5b:	outs   dx,DWORD PTR ds:[esi]
  418c5c:	shr    BYTE PTR [ebp+0x56],0xfe
  418c60:	and    al,0x79
  418c62:	cld    
  418c63:	adc    eax,0xd2841189
  418c68:	scas   al,BYTE PTR es:[edi]
  418c69:	shr    BYTE PTR [eax+0x26],cl
  418c6c:	mov    WORD PTR [ecx+edx*2],gs
  418c6f:	int    0x75
  418c71:	not    esi
  418c73:	mov    bh,BYTE PTR [ebp+0x61]
  418c76:	inc    eax
  418c77:	xchg   esp,eax
  418c79:	mov    ecx,0xdff4d68f
  418c7e:	nop
  418c7f:	es es iret 
  418c82:	mov    bh,0x6e
  418c84:	adc    al,0x62
  418c86:	mov    eax,0xa51f6da8
  418c8b:	ret    
  418c8c:	push   ebx
  418c8d:	cmp    BYTE PTR [edi+0x28f85fd5],dl
  418c93:	into   
  418c94:	add    eax,0xb37d4bb9
  418c99:	inc    esi
  418c9a:	mov    bh,0x20
  418c9c:	mov    dl,BYTE PTR [ebx-0x37d7a342]
  418ca2:	loope  0x418c6e
  418ca4:	lods   eax,DWORD PTR ds:[esi]
  418ca5:	addr16 in eax,0xfd
  418ca8:	mov    esp,DWORD PTR [esi-0x68]
  418cab:	pop    esi
  418cac:	and    bh,0x69
  418caf:	mov    ds:0x82d0175c,al
  418cb4:	pusha  
  418cb5:	cmp    eax,0x694cf82
  418cba:	scas   al,BYTE PTR es:[edi]
  418cbb:	stos   DWORD PTR es:[edi],eax
  418cbc:	ins    DWORD PTR es:[edi],dx
  418cbd:	(bad)  
  418cbe:	push   eax
  418cbf:	sahf   
  418cc0:	xor    ebx,eax
  418cc2:	xor    ecx,DWORD PTR [eax]
  418cc4:	adc    ebp,DWORD PTR [ebp-0x78]
  418cc7:	mov    ds:0xa97ed82a,al
  418ccc:	jle    0x418d1e
  418cce:	inc    edx
  418ccf:	push   ebx
  418cd0:	sbb    edx,DWORD PTR [edi]
  418cd2:	gs cli 
  418cd4:	push   esi
  418cd5:	fnstcw WORD PTR [ebp-0xb164c13]
  418cdb:	xchg   edx,eax
  418cdc:	(bad)  
  418cdd:	sti    
  418cde:	push   edi
  418cdf:	ins    DWORD PTR es:[edi],dx
  418ce0:	adc    edx,DWORD PTR [edx+0x45]
  418ce3:	mov    edi,0x2d229696
  418ce8:	retf   
  418ce9:	(bad)  
  418cea:	cli    
  418ceb:	sbb    BYTE PTR [eax-0x31],cl
  418cee:	cmp    edx,DWORD PTR [edx+edi*4+0x6a4e1faf]
  418cf5:	in     eax,0x56
  418cf7:	pushf  
  418cf8:	call   0x399063de
  418cfd:	mov    dl,0x11
  418cff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d00:	mov    edi,0x7a2c5ca3
  418d05:	push   ebp
  418d06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d07:	mov    ebp,0xd04c6428
  418d0c:	jmp    0x418c8f
  418d0e:	retf   
  418d0f:	fcmove st,st(2)
  418d11:	inc    esp
  418d12:	xor    esi,DWORD PTR [edx]
  418d14:	push   ecx
  418d15:	inc    edi
  418d16:	mov    edi,0x6a0d4364
  418d1b:	and    al,0x1b
  418d1d:	(bad)  
  418d1f:	sub    ebp,DWORD PTR [ecx+0x11ab29f]
  418d25:	inc    ebp
  418d26:	jae    0x418d36
  418d28:	jb     0x418d97
  418d2a:	xchg   edi,eax
  418d2b:	mov    eax,0xea0b3799
  418d30:	push   ds
  418d31:	les    esi,FWORD PTR [ebp+0x5d]
  418d34:	daa    
  418d35:	push   es
  418d36:	pop    ebx
  418d37:	dec    ebx
  418d38:	cmc    
  418d39:	mov    esp,DWORD PTR [edx-0x30]
  418d3c:	shl    cl,cl
  418d3e:	dec    ebp
  418d3f:	stos   BYTE PTR es:[edi],al
  418d40:	stos   BYTE PTR es:[edi],al
  418d41:	and    eax,0x56055423
  418d46:	lahf   
  418d47:	mov    cl,0x68
  418d49:	out    0x9d,al
  418d4b:	cmp    ebp,DWORD PTR ds:0xb6458219
  418d51:	bound  ecx,QWORD PTR [eax+0x9cbc23b]
  418d57:	stc    
  418d58:	xor    BYTE PTR [esi],bl
  418d5a:	popf   
  418d5b:	gs test eax,0xba86add7
  418d61:	adc    al,0x66
  418d63:	xlat   BYTE PTR ds:[ebx]
  418d64:	mov    ch,0xaa
  418d66:	sub    ch,cl
  418d68:	adc    DWORD PTR [ecx],ebx
  418d6a:	test   al,0x3b
  418d6c:	aas    
  418d6d:	or     dl,ch
  418d6f:	add    eax,0xd63469ab
  418d74:	cmp    eax,0xdd4e524f
  418d79:	pop    eax
  418d7a:	rcr    BYTE PTR [ebx+0x6c],cl
  418d7d:	ds push edi
  418d7f:	push   edi
  418d80:	ds push ebp
  418d82:	rcl    esp,cl
  418d84:	and    DWORD PTR [eax],esp
  418d86:	(bad)  
  418d87:	shr    BYTE PTR [ebp+edx*4-0x61],cl
  418d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d8c:	adc    edi,DWORD PTR [edx+0x5e43d0dd]
  418d92:	leave  
  418d93:	jne    0x418d19
  418d95:	or     DWORD PTR [esi+0x77],ebp
  418d98:	cmp    BYTE PTR [ecx],0xd9
  418d9b:	sbb    dl,BYTE PTR [ebx]
  418d9d:	mov    ds:0xa99be4f4,eax
  418da2:	push   ecx
  418da3:	imul   DWORD PTR [edx+0x9521c56]
  418da9:	imul   ebp,DWORD PTR ds:0x398a71c6,0x72
  418db0:	fs inc esi
  418db2:	stc    
  418db3:	repz dec edx
  418db5:	push   es
  418db6:	or     BYTE PTR [ebx],bh
  418db8:	popf   
  418db9:	enter  0xc97,0x9b
  418dbd:	xor    DWORD PTR [ebp+eax*4-0x6f033696],edi
  418dc4:	jmp    0x418dd8
  418dc6:	mov    al,ds:0x9c616f1c
  418dcb:	or     ebp,DWORD PTR ds:[edx+ebp*2+0x7f]
  418dd0:	dec    esp
  418dd1:	jmp    0x8e4f:0x638ae1b2
  418dd8:	xor    eax,0x5945f138
  418ddd:	out    dx,al
  418dde:	pop    eax
  418ddf:	inc    ebx
  418de0:	outs   dx,DWORD PTR ds:[esi]
  418de1:	adc    dh,BYTE PTR [esi+0x16]
  418de4:	cmp    cl,BYTE PTR [ebp+0x44]
  418de7:	imul   BYTE PTR [esi]
  418de9:	inc    ebx
  418dea:	ds push ebx
  418dec:	inc    ebp
  418ded:	or     ebp,DWORD PTR [ecx+ebp*4+0x7c]
  418df1:	pop    esi
  418df2:	mov    ecx,0x78f4dafa
  418df7:	and    DWORD PTR [esi-0xe10555],eax
  418dfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dfe:	shl    ah,1
  418e00:	mov    edi,0x63cb8842
  418e05:	dec    ecx
  418e06:	push   esi
  418e07:	mov    cl,0x34
  418e09:	imul   esp,esp,0xffffffd8
  418e0c:	sbb    ah,dh
  418e0e:	ds loope 0x418db4
  418e11:	adc    BYTE PTR [esi+0x57d13d42],dl
  418e17:	xor    esp,DWORD PTR [ecx]
  418e19:	add    esp,DWORD PTR [eax]
  418e1b:	sub    al,bh
  418e1d:	fld    DWORD PTR [edi+0x67]
  418e20:	in     al,dx
  418e21:	jmp    FWORD PTR [edi-0x19]
  418e24:	out    dx,al
  418e25:	and    al,0xf1
  418e27:	mov    edi,0xd84e49e0
  418e2c:	cmp    eax,0x2125f14b
  418e31:	leave  
  418e32:	outs   dx,BYTE PTR ds:[esi]
  418e33:	loop   0x418dc6
  418e35:	imul   eax,DWORD PTR [edi],0x5f7e2090
  418e3b:	mov    esp,0xdf90c52d
  418e40:	rol    BYTE PTR [eax],cl
  418e42:	pop    ds
  418e43:	pop    ss
  418e44:	sub    edx,edi
  418e46:	cmp    DWORD PTR [edx],ebx
  418e48:	dec    ecx
  418e49:	sti    
  418e4a:	enter  0x1746,0xbf
  418e4e:	imul   edx,DWORD PTR [edi],0xffffffc3
  418e51:	dec    ebp
  418e52:	in     eax,dx
  418e53:	sar    BYTE PTR [edx+edi*1],cl
  418e56:	add    ecx,esi
  418e58:	sbb    ax,0x4deb
  418e5c:	into   
  418e5d:	pop    es
  418e5e:	rcl    BYTE PTR [esp+ebp*4-0x16],0x30
  418e63:	jo     0x418eb8
  418e65:	jmp    0xe9fb:0x7319b2f5
  418e6c:	add    esi,eax
  418e6e:	xor    esp,DWORD PTR [ebx-0x1d]
  418e71:	xchg   ebx,eax
  418e72:	ja     0x418e7d
  418e74:	pop    esp
  418e75:	add    al,0xdc
  418e77:	int3   
  418e78:	in     al,dx
  418e79:	push   ds
  418e7a:	ja     0x418eb9
  418e7c:	(bad)  
  418e7e:	ror    DWORD PTR [edi],cl
  418e80:	inc    esp
  418e81:	sar    BYTE PTR [eax-0x56b93182],cl
  418e87:	mov    edx,0x6c903d2a
  418e8c:	ja     0x418ed5
  418e8e:	dec    ebp
  418e8f:	pop    edi
  418e90:	test   BYTE PTR [edx],ch
  418e92:	mov    ss,WORD PTR ds:0x94f81f91
  418e98:	int3   
  418e99:	fcom   QWORD PTR [edx+0x7a]
  418e9c:	or     eax,0xa79d302f
  418ea1:	push   ss
  418ea2:	sub    al,0xfe
  418ea4:	adc    ebp,ecx
  418ea6:	mov    ebp,0x81266726
  418eab:	push   ebp
  418eac:	push   esp
  418ead:	aad    0xa
  418eaf:	call   0xc6575e8b
  418eb4:	sbb    al,0x3
  418eb6:	xor    al,0x6c
  418eb8:	pop    ebx
  418eb9:	fnstsw WORD PTR [ecx+ebp*4-0x6]
  418ebd:	dec    edi
  418ebe:	arpl   WORD PTR [ecx-0x3aa9a7ef],sp
  418ec4:	ins    BYTE PTR es:[edi],dx
  418ec5:	push   edx
  418ec6:	les    edi,FWORD PTR [ecx+0x44]
  418ec9:	sub    BYTE PTR [edx],0x51
  418ecc:	mov    ds:0x22cf95,al
  418ed1:	xor    edi,ebx
  418ed3:	pop    es
  418ed4:	shr    DWORD PTR [eax-0x5c],1
  418ed7:	jle    0x418efc
  418ed9:	and    dh,BYTE PTR gs:[edi+0x2]
  418edd:	retf   0xdf0b
  418ee0:	and    ch,BYTE PTR [eax]
  418ee2:	pop    esi
  418ee3:	add    bp,WORD PTR [ecx+0x996d579]
  418eea:	inc    ebx
  418eeb:	ss rcr ebp,cl
  418eee:	test   BYTE PTR [edi+0x36],0x72
  418ef2:	hlt    
  418ef3:	sub    BYTE PTR [esi],ch
  418ef5:	cmp    edx,DWORD PTR [esp+ebx*4]
  418ef8:	inc    esi
  418ef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418efa:	neg    DWORD PTR [eax]
  418efc:	into   
  418efd:	out    dx,al
  418efe:	sbb    DWORD PTR [ecx-0x7b],edx
  418f01:	mov    al,0x9f
  418f03:	aad    0x22
  418f05:	int3   
  418f06:	and    bh,BYTE PTR [ebp-0x63]
  418f09:	jmp    0x418f69
  418f0b:	js     0x418ebf
  418f0d:	repnz push es
  418f0f:	xor    bh,BYTE PTR [ebp+esi*2-0x3a1fdeca]
  418f16:	xchg   ebx,eax
  418f17:	in     eax,0x1a
  418f19:	fisubr DWORD PTR [edx+0x1ad60006]
  418f1f:	mov    esi,0x1e4e112e
  418f24:	(bad)  
  418f25:	sbb    DWORD PTR [edi+0x39e34538],ecx
  418f2b:	nop
  418f2c:	mov    ch,0xbf
  418f2e:	not    ebx
  418f30:	pop    edx
  418f31:	add    al,0x61
  418f33:	rcr    BYTE PTR [ebp+0x2b],1
  418f36:	ret    
  418f37:	pop    esp
  418f38:	mov    DWORD PTR [edx],esi
  418f3a:	in     eax,dx
  418f3b:	inc    ebp
  418f3c:	sub    BYTE PTR [edi],cl
  418f3e:	ins    DWORD PTR es:[edi],dx
  418f3f:	inc    eax
  418f40:	mov    al,0xbd
  418f42:	lea    edx,ds:0x3139b47c
  418f48:	cdq    
  418f49:	call   0x2c459a6e
  418f4e:	out    dx,eax
  418f4f:	xor    al,0xbb
  418f51:	test   BYTE PTR [ebp+0x4831b2cf],bl
  418f57:	cdq    
  418f58:	mov    BYTE PTR [ebx-0x10bf7ca],al
  418f5e:	ret    
  418f5f:	movq   QWORD PTR ss:[esi],mm6
  418f63:	ins    DWORD PTR es:[edi],dx
  418f64:	lea    esp,[ecx-0x459c7d59]
  418f6a:	jb     0x418fdb
  418f6c:	mov    esp,0xe78945c8
  418f71:	sub    DWORD PTR [esp+edx*8],0x4b
  418f75:	jb     0x418fd8
  418f77:	push   ebp
  418f78:	or     BYTE PTR [esi],ch
  418f7a:	data16 daa 
  418f7c:	lea    ebp,[ecx+edx*8]
  418f7f:	daa    
  418f80:	add    eax,0x3092f65c
  418f85:	inc    eax
  418f86:	or     eax,0x62bfbe05
  418f8b:	xchg   esi,eax
  418f8c:	xchg   BYTE PTR [ebx],dl
  418f8e:	inc    esp
  418f8f:	lahf   
  418f90:	xchg   ebp,eax
  418f91:	das    
  418f92:	jne    0x419009
  418f94:	xchg   ecx,eax
  418f95:	or     dl,cl
  418f97:	xchg   esi,eax
  418f98:	adc    DWORD PTR [edi],edx
  418f9a:	js     0x418f43
  418f9c:	dec    ecx
  418f9d:	sub    al,0xc9
  418f9f:	lea    esi,ds:0x40edff01
  418fa5:	mov    cl,0x7e
  418fa7:	cmp    DWORD PTR [eax],eax
  418fa9:	dec    ebp
  418faa:	xchg   BYTE PTR gs:[edi+0x65],ch
  418fae:	sbb    eax,0x54dc83e6
  418fb3:	sbb    ch,BYTE PTR [eax-0x379e727f]
  418fb9:	adc    DWORD PTR [ebx],edi
  418fbb:	push   es
  418fbc:	cmp    eax,0x4dbdd29b
  418fc1:	xchg   ebp,eax
  418fc2:	int3   
  418fc3:	jmp    0x649f3873
  418fc8:	or     eax,0x29f9cdc8
  418fcd:	call   0xfbac:0x55f89c09
  418fd4:	mov    ds:0x17f83aba,al
  418fd9:	push   ecx
  418fda:	ja     0x418fcf
  418fdc:	sahf   
  418fdd:	mov    BYTE PTR [ebx+0x508fc43c],ch
  418fe3:	clc    
  418fe4:	adc    eax,DWORD PTR [ebx-0x7c60b889]
  418fea:	bound  esp,QWORD PTR [ebx-0x6b120304]
  418ff0:	jg     0x41905b
  418ff2:	fstp   TBYTE PTR [ecx+0x42]
  418ff5:	jl     0x419062
  418ff7:	push   esp
  418ff8:	mov    bl,0x5e
  418ffa:	lods   eax,DWORD PTR ds:[esi]
  418ffb:	sbb    BYTE PTR [esp+ebx*2-0x52],0xd1
  419000:	mov    ds:0x244386ba,al
  419005:	add    al,0x71
  419007:	(bad)  
  419008:	push   ds
  419009:	fidivr DWORD PTR [edx+0x6e]
  41900c:	in     al,0xb2
  41900e:	pushf  
  41900f:	push   ebx
  419010:	jnp    0x41902e
  419012:	pop    ds
  419013:	jmp    0x418fe0
  419015:	xchg   edi,eax
  419016:	fucom  st(7)
  419018:	adc    al,bl
  41901a:	or     eax,0x284ba104
  41901f:	or     BYTE PTR [eax+0x3e],ch
  419022:	xchg   esp,eax
  419023:	dec    esi
  419024:	rol    BYTE PTR [eax],cl
  419026:	jmp    0x1053:0x38afac88
  41902d:	mov    bl,0x4b
  41902f:	push   0xa1eb8f57
  419034:	loop   0x418fca
  419036:	and    DWORD PTR [ebp-0x48],ebp
  419039:	sar    DWORD PTR [ebx+esi*2+0x169d8750],0x30
  419041:	(bad)  
  419042:	lock xchg esi,eax
  419044:	xchg   esi,eax
  419045:	out    dx,al
  419046:	mov    bh,0xca
  419048:	scas   al,BYTE PTR es:[edi]
  419049:	aas    
  41904a:	sub    ecx,ecx
  41904c:	xchg   DWORD PTR [ebx],ebp
  41904e:	aad    0xa1
  419050:	in     eax,dx
  419051:	jge    0x418fdd
  419053:	xor    al,0x52
  419055:	dec    ecx
  419056:	xor    BYTE PTR [ebp+0x51],bh
  419059:	clc    
  41905a:	mov    edx,0xff4299d0
  41905f:	fs fcmovne st,st(0)
  419062:	mov    edx,0x4f0d9b8b
  419067:	push   cs
  419068:	xor    al,0x68
  41906a:	test   al,0x29
  41906c:	xchg   ecx,eax
  41906d:	enter  0x7aeb,0xc6
  419071:	jmp    0x4190c3
  419073:	jmp    0x3c9f:0xe85457c4
  41907a:	out    0x58,al
  41907c:	push   edx
  41907d:	xor    esp,edx
  41907f:	in     eax,0xa5
  419081:	pop    ebx
  419082:	xchg   ebp,eax
  419083:	les    ebp,FWORD PTR [ecx-0x6d66ba7a]
  419089:	jg     0x419109
  41908b:	add    DWORD PTR [edx],ecx
  41908d:	stc    
  41908e:	mov    esi,0x29406e26
  419093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419094:	push   cs
  419095:	push   ebp
  419096:	mov    dl,0xed
  419098:	sub    DWORD PTR [esi+0x6d],ebp
  41909b:	repz mov edx,0x97a93967
  4190a1:	outs   dx,DWORD PTR ds:[esi]
  4190a2:	(bad)  
  4190a3:	das    
  4190a4:	mov    ds,WORD PTR [ecx]
  4190a6:	lock sar DWORD PTR [eax-0x333a6efc],0xe6
  4190ae:	pop    ss
  4190af:	adc    ebx,DWORD PTR [eax+edx*2]
  4190b2:	inc    ecx
  4190b3:	fdiv   st,st(0)
  4190b5:	jl     0x4190d7
  4190b7:	mov    eax,0x67ea67a9
  4190bc:	jmp    0x79a83b76
  4190c1:	fdivr  DWORD PTR [esi+0x29723e90]
  4190c7:	push   0x545c7c7
  4190cc:	jb     0x419110
  4190ce:	pusha  
  4190cf:	mov    eax,0x42ed2022
  4190d4:	xor    bl,ah
  4190d6:	jmp    0x4d9a:0xf3f5f414
  4190dd:	nop
  4190de:	mov    eax,ds:0xc2d17a08
  4190e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190e4:	xor    DWORD PTR [ebx],esi
  4190e6:	sub    eax,0x4da14b9e
  4190eb:	test   DWORD PTR [esi-0x3c5cf616],ebx
  4190f1:	aam    0x8
  4190f3:	push   edx
  4190f4:	inc    esi
  4190f5:	jecxz  0x419126
  4190f7:	(bad)  
  4190f8:	jnp    0x4190d3
  4190fa:	stos   DWORD PTR es:[edi],eax
  4190fb:	jle    0x419090
  4190fd:	scas   eax,DWORD PTR es:[edi]
  4190fe:	fs (bad) 
  419100:	jp     0x419133
  419102:	adc    bl,ch
  419104:	test   eax,0xc06a9501
  419109:	sbb    bh,dh
  41910b:	or     dl,ah
  41910d:	pop    edi
  41910e:	out    0x21,eax
  419110:	jmp    0x419152
  419112:	inc    eax
  419113:	ds pop eax
  419115:	(bad)  
  419116:	sahf   
  419117:	fs pop ebx
  419119:	mov    esp,0x14e447f6
  41911e:	cmp    bh,bh
  419120:	out    dx,eax
  419121:	stc    
  419122:	mov    esp,0x918babd
  419127:	repnz xor ebp,DWORD PTR [ebp-0x22152cb7]
  41912e:	imul   ecx,DWORD PTR [edx+0x71],0xfffffffc
  419132:	jbe    0x4190fb
  419134:	sbb    bh,BYTE PTR [edx]
  419136:	icebp  
  419137:	fcom   QWORD PTR [ebp-0x330c7978]
  41913d:	fldenv [ebp+0x12f6a9ef]
  419144:	inc    esp
  419145:	inc    ecx
  419146:	in     eax,dx
  419147:	pop    ebp
  419148:	in     eax,dx
  419149:	mov    ecx,DWORD PTR [ecx-0x2273365]
  41914f:	pop    esi
  419150:	cmp    eax,0xe02465a3
  419155:	xor    bl,ch
  419157:	and    eax,esp
  419159:	and    esi,DWORD PTR [ebp+0x62e78aef]
  41915f:	xchg   ebp,eax
  419160:	mov    esp,0xe2a8fb4e
  419165:	das    
  419166:	mov    WORD PTR [edx-0x55],fs
  419169:	inc    eax
  41916a:	or     eax,0x2db4e6a1
  41916f:	jnp    0x41911d
  419171:	push   ebp
  419172:	mov    edx,0x4d76bc31
  419177:	enter  0x91cd,0x57
  41917b:	jno    0x419187
  41917d:	mov    ah,0xa9
  41917f:	mov    eax,0x7995d7b0
  419184:	cmp    edx,0x7b7a9f7c
  41918a:	js     0x41918c
  41918c:	sbb    ecx,DWORD PTR [eax-0x18]
  41918f:	aaa    
  419190:	nop
  419191:	mov    edi,0x6505b946
  419196:	dec    edx
  419197:	(bad)  
  419198:	dec    ecx
  419199:	das    
  41919a:	mov    WORD PTR [ebp-0x59],ds
  41919d:	mov    DWORD PTR [ecx+0x24],esi
  4191a0:	cs clc 
  4191a2:	cmc    
  4191a3:	mov    ah,0x15
  4191a5:	dec    edi
  4191a6:	inc    ebx
  4191a7:	fld    QWORD PTR [esi+ebp*4+0x78]
  4191ab:	inc    ecx
  4191ac:	jg     0x4191d8
  4191ae:	lds    eax,FWORD PTR [ebp+0x74]
  4191b1:	retf   0x2d78
  4191b4:	sbb    eax,0x181cdb4b
  4191b9:	push   ecx
  4191ba:	rcl    DWORD PTR [esi],cl
  4191bc:	aad    0x52
  4191be:	neg    BYTE PTR [eax-0x36121aa7]
  4191c4:	call   0x6b3e:0x97072e0d
  4191cb:	fdivr  st,st(3)
  4191cd:	cdq    
  4191ce:	call   0x6de3:0xf8ec554
  4191d5:	outs   dx,BYTE PTR ds:[esi]
  4191d6:	call   0xab41:0xa0d8e151
  4191dd:	cwde   
  4191de:	xchg   ecx,eax
  4191df:	dec    eax
  4191e0:	cmp    cl,ch
  4191e2:	sbb    al,0x91
  4191e4:	pop    ss
  4191e5:	sub    al,0x22
  4191e7:	fsub   st,st(7)
  4191e9:	add    DWORD PTR [edi+edx*2-0x40],edx
  4191ed:	mov    bh,0x26
  4191ef:	jns    0x4191fa
  4191f1:	in     al,dx
  4191f2:	lea    eax,[edx+eiz*1]
  4191f5:	mov    al,0x40
  4191f7:	sar    DWORD PTR [esi+0x71596565],1
  4191fd:	call   0xb935:0xa946def3
  419204:	dec    ecx
  419205:	ins    BYTE PTR es:[edi],dx
  419206:	stos   DWORD PTR es:[edi],eax
  419207:	dec    ebx
  419208:	or     eax,0x624bfcb2
  41920d:	pop    edx
  41920e:	xchg   ecx,eax
  41920f:	test   DWORD PTR [esi+0x3c],0x262c2d29
  419216:	mov    edx,0xa5eaf6e7
  41921b:	clc    
  41921c:	aad    0x84
  41921e:	outs   dx,DWORD PTR ds:[esi]
  41921f:	mov    es,WORD PTR [edx]
  419221:	sub    eax,0x3689bef0
  419226:	jo     0x4192a7
  419228:	inc    ebp
  419229:	or     ecx,DWORD PTR [edi+0x6f11dcae]
  41922f:	dec    ebp
  419230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419231:	sbb    ebx,DWORD PTR [ebx+0x16a530fa]
  419237:	jno    0x419227
  419239:	push   ds
  41923a:	push   cs
  41923b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41923c:	cmc    
  41923d:	mov    ebx,0x8833252e
  419242:	jbe    0x419299
  419244:	adc    esp,ebx
  419246:	retf   
  419247:	jnp    0x4192ab
  419249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41924a:	inc    esp
  41924b:	je     0x4191da
  41924d:	or     eax,ebx
  41924f:	and    esp,DWORD PTR [eax]
  419251:	lods   al,BYTE PTR gs:[esi]
  419253:	sbb    DWORD PTR [esi+edx*8],edx
  419256:	adc    ebx,DWORD PTR [edi]
  419258:	cmp    eax,ebx
  41925a:	gs aad 0x39
  41925d:	dec    esp
  41925e:	jl     0x41921b
  419260:	jo     0x419261
  419262:	push   es
  419263:	pop    ds
  419264:	js     0x41929d
  419266:	aaa    
  419267:	push   esi
  419268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419269:	jns    0x41925c
  41926b:	daa    
  41926c:	in     eax,dx
  41926d:	and    BYTE PTR [eax+ecx*2+0x2],dl
  419271:	push   edx
  419272:	add    BYTE PTR ds:0xd949fa63,ah
  419278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419279:	int    0x9a
  41927b:	addr16 mov dl,0x78
  41927e:	mov    cl,ah
  419280:	scas   eax,DWORD PTR es:[edi]
  419281:	dec    esi
  419282:	cld    
  419283:	sub    edi,DWORD PTR [ecx-0x745f0832]
  419289:	mov    ebx,0x144f4297
  41928e:	jo     0x4192c3
  419290:	enter  0x4d89,0x8
  419294:	mov    ecx,DWORD PTR [ebp+0x8]
  419297:	mov    edx,DWORD PTR [ebp-0x58]
  41929a:	add    ecx,0x5708e2
  4192a0:	imul   ecx,edx
  4192a3:	mov    DWORD PTR [ebp-0x58],ecx
  4192a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4192a9:	mov    edx,DWORD PTR [ebp-0x54]
  4192ac:	add    ecx,0x64f89c
  4192b2:	or     ecx,edx
  4192b4:	mov    DWORD PTR [ebp-0x54],ecx
  4192b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4192ba:	jmp    0x41b643
  4192bf:	aad    0xa2
  4192c1:	mov    dh,0x8d
  4192c3:	mov    al,0x81
  4192c5:	ror    BYTE PTR [edx+0x26797ce2],0x13
  4192cc:	and    ebx,DWORD PTR [edx-0x56]
  4192cf:	daa    
  4192d0:	sbb    al,0x82
  4192d2:	adc    DWORD PTR [edi],0x5c
  4192d5:	add    DWORD PTR [ebx-0x31ad01b0],0x3
  4192dc:	addr16 mov eax,0x2b51b3e9
  4192e2:	mov    BYTE PTR [edx],bl
  4192e4:	(bad)  
  4192e5:	xchg   edi,eax
  4192e6:	int3   
  4192e7:	aam    0x21
  4192e9:	(bad)  
  4192ea:	stos   DWORD PTR es:[edi],eax
  4192eb:	pusha  
  4192ec:	xchg   DWORD PTR [ecx+ecx*4+0x11730d3c],edi
  4192f3:	cmp    BYTE PTR [eax-0x7f],dl
  4192f6:	push   ecx
  4192f7:	(bad)  
  4192f9:	es xchg ebx,eax
  4192fb:	ror    esi,cl
  4192fd:	nop
  4192fe:	aad    0xf0
  419300:	iret   
  419301:	push   ebx
  419302:	inc    edx
  419303:	xchg   esp,eax
  419304:	lods   eax,DWORD PTR ds:[esi]
  419305:	imul   edi,edx,0xc602d35c
  41930b:	sub    DWORD PTR [edi+0x2feeac6f],0x3db2b2fe
  419315:	add    BYTE PTR [edx-0xb3b2ee3],0x6d
  41931c:	mov    eax,0xb1f87945
  419321:	xchg   ebx,eax
  419322:	pop    es
  419323:	popa   
  419324:	dec    eax
  419325:	fcomp  QWORD PTR [edi+eax*2+0xb4ddeff]
  41932c:	addr16 jnp 0x41934e
  41932f:	sbb    DWORD PTR [edi],esp
  419331:	xor    BYTE PTR [ecx],ch
  419333:	pop    eax
  419334:	or     ah,BYTE PTR [esi+ebp*4]
  419337:	cmp    dl,BYTE PTR [edx]
  419339:	cdq    
  41933a:	push   eax
  41933b:	pop    ss
  41933c:	adc    bl,BYTE PTR [edx-0x7f640589]
  419342:	cli    
  419343:	hlt    
  419344:	cmp    DWORD PTR [ebx+0x7465a64d],0x198161a0
  41934e:	dec    esp
  41934f:	fbstp  TBYTE PTR [ecx+0x5a6b9f8b]
  419355:	retf   
  419356:	inc    esp
  419357:	leave  
  419358:	neg    BYTE PTR [ecx]
  41935a:	pop    ebx
  41935b:	call   0xc3b8:0x38248cae
  419362:	add    BYTE PTR [ecx-0x27b5cfde],dl
  419368:	jmp    0x4193a5
  41936a:	xchg   esi,eax
  41936b:	repz fadd QWORD PTR [edi+0x2b]
  41936f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419370:	jb     0x419354
  419372:	fmul   DWORD PTR [ebx+0x10]
  419375:	mov    ax,0xc7d6
  419379:	cmp    DWORD PTR [eax-0x35],ebx
  41937c:	mov    edi,0x4346a199
  419381:	jl     0x4193be
  419383:	loopne 0x419370
  419385:	test   al,0x34
  419387:	fist   DWORD PTR [edi]
  419389:	dec    edi
  41938a:	in     al,0xf4
  41938c:	enter  0xc9c4,0x5e
  419390:	cmp    ecx,DWORD PTR [ecx+0x6c0e939b]
  419396:	xchg   DWORD PTR [ebx+0x27],ebp
  419399:	sub    dh,BYTE PTR [edx-0x7fcadaa6]
  41939f:	aad    0x5b
  4193a1:	push   edi
  4193a2:	inc    ebx
  4193a3:	test   BYTE PTR [esp+eiz*2+0xfd35445],ch
  4193aa:	sbb    BYTE PTR [edx+ebp*8-0x7682618f],0x12
  4193b2:	in     eax,0x5c
  4193b4:	aad    0x43
  4193b6:	icebp  
  4193b7:	dec    ebp
  4193b8:	pop    edi
  4193b9:	lock ret 
  4193bb:	pop    edx
  4193bc:	pushf  
  4193bd:	fnsave [ebp+0x33b5fdd]
  4193c3:	arpl   WORD PTR [ebp+esi*4-0x61],cx
  4193c7:	dec    esi
  4193c8:	add    ebp,edx
  4193ca:	mov    ecx,DWORD PTR ds:0x335c3017
  4193d0:	jae    0x419367
  4193d2:	mov    BYTE PTR [edx],dh
  4193d4:	stos   BYTE PTR es:[edi],al
  4193d5:	test   DWORD PTR [esi-0x73],esi
  4193d8:	data16 loope 0x419389
  4193db:	pop    ebx
  4193dc:	enter  0xd825,0xec
  4193e0:	dec    ebx
  4193e1:	dec    ebx
  4193e2:	iret   
  4193e3:	and    ch,0xb2
  4193e6:	jnp    0x41945b
  4193e8:	test   eax,0x9aa1af55
  4193ed:	and    al,0x24
  4193ef:	add    eax,0xc10a1bb0
  4193f4:	cmp    bl,ch
  4193f6:	mov    ds:0x7350e73a,al
  4193fb:	les    ebp,FWORD PTR [ebx]
  4193fd:	or     edi,0xc1d2199f
  419403:	pop    ds
  419404:	clc    
  419405:	cld    
  419406:	mov    ch,0xa7
  419408:	ret    
  419409:	mov    edx,0x59b27b33
  41940e:	inc    ebp
  41940f:	pop    ebx
  419410:	jg     0x41943d
  419412:	push   ds
  419413:	pusha  
  419414:	xor    al,cl
  419416:	or     esp,DWORD PTR [edi-0x1]
  419419:	outs   dx,BYTE PTR ds:[esi]
  41941a:	push   ebx
  41941b:	dec    esi
  41941c:	pop    ss
  41941d:	js     0x4193f9
  41941f:	sub    eax,0x55484d56
  419424:	xlat   BYTE PTR ds:[ebx]
  419425:	rcr    DWORD PTR [eax+0x6f1634ab],cl
  41942b:	dec    ecx
  41942c:	dec    ebx
  41942d:	jg     0x4193c0
  41942f:	xchg   ebp,eax
  419430:	mov    al,0x74
  419432:	push   es
  419433:	push   edx
  419434:	sbb    DWORD PTR [ebp-0x4155d941],edx
  41943a:	dec    ebp
  41943b:	out    0x16,eax
  41943d:	jmp    0x419455
  41943f:	push   esi
  419440:	mov    dh,bl
  419442:	pushf  
  419443:	test   DWORD PTR gs:[eax-0x4e82cd3d],0x905d8d95
  41944e:	xchg   edx,eax
  41944f:	jo     0x41942a
  419451:	arpl   WORD PTR [edx-0x65190672],ax
  419457:	out    0xae,eax
  419459:	int3   
  41945a:	pop    eax
  41945b:	inc    BYTE PTR [esp+edx*2]
  41945e:	or     ebx,DWORD PTR [ebx+0x43464b61]
  419464:	neg    DWORD PTR [ecx]
  419466:	dec    eax
  419467:	sub    al,0x58
  419469:	and    eax,0xfff02ce4
  41946e:	jno    0x419461
  419470:	mov    ecx,0xc7a9ae57
  419475:	outs   dx,BYTE PTR ds:[esi]
  419476:	loop   0x419479
  419478:	lods   eax,DWORD PTR ds:[esi]
  419479:	dec    cl
  41947b:	jp     0x4194ce
  41947d:	sbb    cl,BYTE PTR [edi]
  41947f:	in     al,dx
  419480:	add    BYTE PTR [esi-0x73849a45],cl
  419486:	cli    
  419487:	lea    eax,[ecx+0x711bb5bc]
  41948d:	and    eax,0x8329d2e2
  419492:	stc    
  419493:	mov    ebx,ecx
  419495:	fdivrp st(0),st
  419497:	outs   dx,BYTE PTR ds:[esi]
  419498:	or     al,0x46
  41949a:	call   0xa934:0xcdbe069b
  4194a1:	cmp    eax,0x321e656b
  4194a6:	ds sbb eax,0x62853b1
  4194ac:	adc    edx,ebx
  4194ae:	or     DWORD PTR [eax-0x15],0xa
  4194b2:	fwait
  4194b3:	jmp    0xe905:0x619defe7
  4194ba:	cmp    BYTE PTR ds:0x3557da5c,0xcd
  4194c1:	mov    ?,ecx
  4194c3:	adc    edx,DWORD PTR ds:0x76595534
  4194c9:	xchg   esp,eax
  4194ca:	xchg   ebp,eax
  4194cb:	add    DWORD PTR [edx-0x224e94e1],edx
  4194d1:	ret    0x934d
  4194d4:	mov    WORD PTR [ebx+0x26],ds
  4194d7:	mov    ecx,0x9f75ba1a
  4194dc:	mov    bh,0x0
  4194de:	jp     0x419513
  4194e0:	pop    edi
  4194e1:	sahf   
  4194e2:	nop
  4194e3:	adc    eax,0x68ab4fbb
  4194e8:	ja     0x419508
  4194ea:	(bad)  [ebp+0x50bbcb77]
  4194f0:	lds    ebx,FWORD PTR [ebp-0x31]
  4194f3:	mov    eax,0x3c9289c8
  4194f8:	or     dl,BYTE PTR [esi+0x6f]
  4194fb:	outs   dx,BYTE PTR ds:[esi]
  4194fc:	das    
  4194fd:	in     al,dx
  4194fe:	mov    al,ds:0xd4def9ea
  419503:	xor    eax,0xa2f777d4
  419508:	jl     0x4194cf
  41950a:	mov    ebx,0xca391f2b
  41950f:	sub    al,0xd6
  419511:	sbb    eax,0xc01bdb9a
  419516:	push   edi
  419517:	mov    esi,0x9fdacc2c
  41951c:	jge    0x4194e0
  41951e:	inc    ecx
  41951f:	push   esi
  419520:	push   0xffffffcc
  419522:	mov    fs,WORD PTR [ecx+0x51]
  419525:	push   esp
  419526:	xchg   ebx,eax
  419527:	pop    esi
  419528:	ror    bl,0x6f
  41952b:	jp     0x4194ca
  41952d:	jb     0x41958b
  41952f:	adc    al,0x6f
  419531:	icebp  
  419532:	outs   dx,BYTE PTR ds:[esi]
  419533:	push   es
  419534:	shl    ecx,1
  419536:	adc    bl,dl
  419538:	mov    edi,0xda514d47
  41953d:	or     edx,esp
  41953f:	inc    esp
  419540:	jge    0x4194dc
  419542:	retf   0x147b
  419545:	xchg   esi,eax
  419546:	ficom  WORD PTR [esi+0x29]
  419549:	outs   dx,DWORD PTR ds:[esi]
  41954a:	ret    
  41954b:	loopne 0x4194ec
  41954d:	xchg   esi,eax
  41954e:	cmc    
  41954f:	icebp  
  419550:	retf   
  419551:	add    eax,0xc6621f4a
  419556:	scas   eax,DWORD PTR es:[edi]
  419557:	daa    
  419558:	adc    ebp,0xa1dd8a56
  41955e:	dec    ecx
  41955f:	adc    ah,BYTE PTR [eax]
  419561:	lods   eax,DWORD PTR ds:[esi]
  419562:	cli    
  419563:	inc    ecx
  419564:	daa    
  419565:	fld    TBYTE PTR [ebp-0x5f]
  419568:	mov    ah,0x89
  41956a:	shl    BYTE PTR [esi-0x3c],cl
  41956d:	sbb    edx,edi
  41956f:	retf   0xf135
  419572:	sbb    edx,DWORD PTR [ecx+0x7a]
  419575:	stos   BYTE PTR es:[edi],al
  419576:	call   0x7d74:0x527d28cf
  41957d:	ficom  WORD PTR [ecx]
  41957f:	mov    eax,ds:0xf94dcf09
  419584:	dec    BYTE PTR [ebx]
  419586:	pop    ss
  419587:	imul   edx,esp,0xffffffba
  41958a:	mov    dh,0x59
  41958c:	retf   0x13ce
  41958f:	aad    0x3d
  419591:	sub    edi,DWORD PTR [edx]
  419593:	jb     0x419598
  419595:	add    BYTE PTR [edi+0x557afbbc],dl
  41959b:	rcl    DWORD PTR [ebp+0x4d],0x26
  41959f:	sbb    ah,BYTE PTR ds:0xc0a06db1
  4195a5:	nop
  4195a6:	cmp    eax,0xa8035949
  4195ab:	sbb    ah,BYTE PTR [ebp-0x31]
  4195ae:	push   ss
  4195af:	je     0x419564
  4195b1:	push   ebp
  4195b2:	leave  
  4195b3:	mov    WORD PTR [esi+0x7e],fs
  4195b6:	pushf  
  4195b7:	int    0xd3
  4195b9:	sub    eax,0x5ad32031
  4195be:	mov    cl,0x9b
  4195c0:	inc    ebx
  4195c1:	sub    al,0xfc
  4195c3:	imul   esp,DWORD PTR [esi-0x65],0xedd048f0
  4195ca:	jns    0x419631
  4195cc:	fdivr  st(2),st
  4195ce:	adc    bh,0x57
  4195d1:	push   0x4fd7d312
  4195d6:	mov    esi,0xb6fbfed4
  4195db:	test   eax,0x22e940e0
  4195e0:	mov    ds:0x2c16eeb5,al
  4195e5:	xchg   BYTE PTR [eax+0x4aa3122d],al
  4195eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195ec:	push   esi
  4195ed:	xor    dh,BYTE PTR [eax]
  4195ef:	fucom  st(0)
  4195f1:	jle    0x4195ce
  4195f3:	cld    
  4195f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195f5:	mov    dl,0xb1
  4195f7:	jl     0x41966a
  4195f9:	jmp    0x5fa:0x6e782f39
  419600:	pop    esp
  419601:	std    
  419602:	inc    esi
  419603:	xchg   DWORD PTR [eax],esp
  419605:	inc    ecx
  419606:	mov    esp,DWORD PTR [edx-0x79]
  419609:	das    
  41960a:	and    esp,0x47
  41960d:	add    esi,DWORD PTR [ecx-0x6b69016b]
  419613:	sub    eax,0x5848682b
  419618:	xchg   BYTE PTR [edi-0x2a],al
  41961b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41961c:	jae    0x419678
  41961e:	and    eax,0xa61b66fa
  419623:	aam    0x68
  419625:	and    al,0x91
  419627:	sti    
  419628:	ds jg  0x419625
  41962b:	jbe    0x4195e9
  41962d:	loopne 0x4195f1
  41962f:	jb     0x4195fd
  419631:	stc    
  419632:	clc    
  419633:	imul   edx,edx,0x1b
  419636:	outs   dx,BYTE PTR cs:[esi]
  419638:	jecxz  0x419614
  41963a:	stc    
  41963b:	cld    
  41963c:	fucomip st,st(6)
  41963e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41963f:	arpl   WORD PTR [ebx+0x7d0af8d0],bp
  419645:	jecxz  0x4195fd
  419647:	les    edx,FWORD PTR [ecx-0x2f51a3c5]
  41964d:	call   0xd2c7:0x19346097
  419654:	stc    
  419655:	(bad)  
  419656:	mov    WORD PTR [ecx-0x7d],fs
  419659:	pop    esi
  41965a:	xor    dl,cl
  41965c:	inc    eax
  41965d:	js     0x4196a4
  41965f:	mov    ah,0x26
  419661:	into   
  419662:	xor    dh,ch
  419664:	mov    ds:0x4dd1497b,al
  41966a:	adc    al,0x46
  41966c:	je     0x4195fd
  41966e:	sbb    cl,bh
  419670:	(bad)  
  419671:	icebp  
  419672:	dec    esi
  419673:	hlt    
  419674:	and    ecx,edx
  419676:	lods   eax,DWORD PTR ds:[esi]
  419677:	lock or DWORD PTR [ebx-0x55],0x1b9c5c2e
  41967f:	or     al,BYTE PTR [edx+edx*4+0x1d]
  419683:	mov    WORD PTR [ebp+0x10b2a9e6],?
  419689:	je     0x41963d
  41968b:	push   ecx
  41968c:	inc    ebp
  41968d:	jl     0x419618
  41968f:	adc    esp,DWORD PTR [eax-0x76]
  419692:	hlt    
  419693:	jmp    0x7da2:0xa549f2af
  41969a:	lahf   
  41969b:	lds    esp,FWORD PTR [esi+0x19]
  41969e:	sub    bl,BYTE PTR [esi]
  4196a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196a1:	aaa    
  4196a2:	mov    ds:0x9490c2a4,al
  4196a7:	dec    eax
  4196a8:	mov    bl,0x18
  4196aa:	push   ecx
  4196ab:	jnp    0x419698
  4196ad:	stos   DWORD PTR es:[edi],eax
  4196ae:	mov    ebp,0x4a4581d4
  4196b3:	jecxz  0x4196c0
  4196b5:	xchg   esi,eax
  4196b6:	adc    al,0xad
  4196b8:	xchg   dl,cl
  4196ba:	dec    edi
  4196bb:	and    BYTE PTR [esp+ecx*1-0x68],ah
  4196bf:	jp     0x419697
  4196c1:	xchg   edx,eax
  4196c2:	xchg   DWORD PTR ds:0xec161ed0,esp
  4196c8:	scas   eax,DWORD PTR es:[edi]
  4196c9:	push   0x4e
  4196cb:	inc    esp
  4196cc:	out    0x8b,eax
  4196ce:	rol    BYTE PTR [ebx-0x7c8404c],0x4d
  4196d5:	rcl    DWORD PTR [ecx-0x782d9bfa],cl
  4196db:	pop    edi
  4196dc:	xor    al,0xf1
  4196de:	sbb    dh,bh
  4196e0:	lods   al,BYTE PTR ds:[esi]
  4196e1:	push   eax
  4196e2:	ss retf 
  4196e4:	sub    al,0x7e
  4196e6:	adc    ecx,DWORD PTR [eax-0x3435c10d]
  4196ec:	or     al,BYTE PTR [edi+0x5b]
  4196ef:	adc    al,0x80
  4196f1:	mov    WORD PTR [ecx+0x13],?
  4196f4:	sbb    ah,BYTE PTR [edi+edi*4+0x14]
  4196f8:	imul   ecx,DWORD PTR [edi-0x34490c21],0x38
  4196ff:	push   eax
  419700:	test   DWORD PTR [ecx+0x66d73c43],edx
  419706:	add    edi,edi
  419708:	xchg   ebp,eax
  419709:	call   0xe0d4:0x23e97fdf
  419710:	addr16 inc esp
  419712:	mov    ecx,0x1e7a39a3
  419717:	mov    edi,0x22c51b30
  41971c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41971d:	fisttp QWORD PTR [esi+0x2c7d2258]
  419723:	inc    ebp
  419724:	aam    0x57
  419726:	out    0x5,eax
  419728:	jbe    0x419751
  41972a:	test   al,0x79
  41972c:	inc    eax
  41972d:	pop    ebx
  41972e:	jmp    0xf3402309
  419733:	call   0x1159:0x9c97a408
  41973a:	cmp    eax,0x49c13c9a
  41973f:	loope  0x4197bd
  419741:	sahf   
  419742:	jno    0x4196cf
  419744:	test   DWORD PTR [eax-0x2ebb03b8],ecx
  41974a:	ficomp DWORD PTR [ecx]
  41974c:	lea    ebx,ds:0xab6038e4
  419752:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419753:	sbb    DWORD PTR [ecx+0x18],esp
  419756:	mov    esp,0x8b95ba8e
  41975b:	loope  0x4197ab
  41975d:	push   ebp
  41975e:	mov    esi,0x6853cb3d
  419763:	shl    BYTE PTR [edx-0x5589a917],0xb
  41976a:	push   esi
  41976b:	dec    edx
  41976c:	test   DWORD PTR [eax],0x38cbbbcd
  419772:	gs popf 
  419774:	bound  esi,QWORD PTR [eax]
  419776:	mov    dl,0xf8
  419778:	mov    dh,0x74
  41977a:	mov    ch,0x74
  41977c:	mov    ch,0x5d
  41977e:	retf   
  41977f:	popa   
  419780:	lods   al,BYTE PTR ds:[esi]
  419781:	add    BYTE PTR [ebp-0x61184fc3],0xaf
  419788:	fxch   st(0)
  41978a:	lds    edi,FWORD PTR [ecx-0x351d039d]
  419790:	pop    es
  419791:	push   ebp
  419792:	inc    ebp
  419793:	fiadd  WORD PTR [esi+0x56]
  419796:	sar    BYTE PTR [ebx],cl
  419798:	ror    DWORD PTR [eax-0x2d],0x21
  41979c:	pushf  
  41979d:	scas   al,BYTE PTR es:[edi]
  41979e:	or     eax,0x60e4f228
  4197a3:	lds    edi,FWORD PTR [ebx+ebx*8-0x49]
  4197a7:	xor    DWORD PTR [esi-0x5f88f224],eax
  4197ad:	or     eax,0x9f45a12a
  4197b2:	stos   DWORD PTR es:[edi],eax
  4197b3:	push   es
  4197b4:	std    
  4197b5:	adc    al,BYTE PTR [esi-0x13]
  4197b8:	pop    ds
  4197b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197ba:	or     ecx,DWORD PTR [ecx-0x45]
  4197bd:	clc    
  4197be:	xchg   ebp,eax
  4197bf:	jnp    0x419831
  4197c1:	popf   
  4197c2:	leave  
  4197c3:	add    ecx,DWORD PTR ds:0x1a3ab30e
  4197c9:	lods   eax,DWORD PTR ds:[esi]
  4197ca:	add    al,0x13
  4197cc:	in     al,dx
  4197cd:	std    
  4197ce:	and    BYTE PTR [edi],bl
  4197d0:	ret    
  4197d1:	inc    edi
  4197d2:	mov    eax,cs
  4197d4:	jmp    0x4197d8
  4197d6:	(bad)  
  4197d7:	dec    ebx
  4197d8:	cmp    esi,ebx
  4197da:	pop    ds
  4197db:	jae    0x4197b6
  4197dd:	push   0x4fb8b298
  4197e2:	cld    
  4197e3:	sub    DWORD PTR [edi+esi*4],ebx
  4197e6:	lods   eax,DWORD PTR ds:[esi]
  4197e7:	hlt    
  4197e8:	cmc    
  4197e9:	ficomp WORD PTR [ebx]
  4197eb:	rol    esi,cl
  4197ed:	sbb    al,0x3a
  4197ef:	push   0xf0acde09
  4197f4:	mov    dh,0x54
  4197f6:	repz and edi,edi
  4197f9:	jns    0x419838
  4197fb:	inc    edx
  4197fc:	xor    al,al
  4197fe:	ins    DWORD PTR es:[edi],dx
  4197ff:	sbb    ch,BYTE PTR [edx-0x3ac3c78b]
  419805:	(bad)
  419809:	xor    DWORD PTR [esp+edx*8],edi
  41980c:	inc    edi
  41980d:	rol    BYTE PTR [ebx-0x51c6e3f1],0x60
  419814:	icebp  
  419815:	push   edi
  419816:	push   esp
  419817:	xor    eax,0x516127f1
  41981c:	jle    0x419810
  41981e:	dec    eax
  41981f:	and    eax,0x88415f6e
  419824:	test   al,0xca
  419826:	cdq    
  419827:	push   ebx
  419828:	scas   eax,DWORD PTR es:[edi]
  419829:	sbb    eax,0xfb608a2f
  41982e:	stos   DWORD PTR es:[edi],eax
  41982f:	repnz push ebp
  419831:	sub    ah,BYTE PTR [edi-0x27]
  419834:	inc    ecx
  419835:	add    DWORD PTR [ebp+0x58],esi
  419838:	clc    
  419839:	pusha  
  41983a:	cs clc 
  41983c:	xchg   BYTE PTR [esi-0x4a4addab],bh
  419842:	fadd   QWORD PTR [ebp-0x53]
  419845:	sahf   
  419846:	jne    0x419857
  419848:	jle    0x4198b2
  41984a:	pop    ds
  41984b:	stc    
  41984c:	(bad)  
  41984d:	lea    edx,[eax+0x64419300]
  419853:	inc    ebx
  419854:	sar    cl,1
  419856:	sbb    edi,DWORD PTR [edx+0x370cd095]
  41985c:	mov    esp,cs
  41985e:	sti    
  41985f:	pop    ecx
  419860:	mov    cl,0xd9
  419862:	mov    bl,0x9c
  419864:	loope  0x419868
  419866:	push   edi
  419867:	cmp    DWORD PTR [edi+0x655ce04d],edx
  41986d:	push   cs
  41986e:	xchg   ebp,eax
  41986f:	sbb    BYTE PTR [ecx-0x38],bl
  419872:	cmp    dh,0x3
  419875:	inc    ecx
  419876:	or     dl,BYTE PTR [edx]
  419878:	cmp    eax,0x1b04c23e
  41987d:	out    dx,al
  41987e:	sar    DWORD PTR [edi],0x2d
  419881:	push   es
  419882:	add    DWORD PTR [ebp+0x3e],edx
  419885:	xor    BYTE PTR [edi+ecx*4+0x11c8e0ff],0x19
  41988d:	push   ds
  41988e:	pop    ebx
  41988f:	sub    DWORD PTR ds:0x4990baf8,ebp
  419895:	sub    ah,dl
  419897:	fs xor ebp,edx
  41989a:	pop    ecx
  41989b:	shl    ah,0xca
  41989e:	jne    0x419821
  4198a0:	add    ebp,DWORD PTR [ebx+0xd38f934]
  4198a6:	add    al,0x3e
  4198a8:	mul    BYTE PTR [ebp-0x14]
  4198ab:	das    
  4198ac:	push   esp
  4198ad:	mov    bh,0x80
  4198af:	lds    ebx,FWORD PTR [esi+ebx*1+0x7a]
  4198b3:	ret    0x3460
  4198b6:	xchg   DWORD PTR [edi+esi*1-0x7e52defb],ecx
  4198bd:	sub    DWORD PTR [esi],esp
  4198bf:	push   ebp
  4198c0:	xor    eax,0x7a2ad01d
  4198c5:	xlat   BYTE PTR ds:[ebx]
  4198c6:	xlat   BYTE PTR ds:[ebx]
  4198c7:	mov    ah,0x79
  4198c9:	push   cs
  4198ca:	dec    esp
  4198cb:	pushf  
  4198cc:	sub    BYTE PTR [esi+0x49],ch
  4198cf:	shl    BYTE PTR [eax-0x40],0x67
  4198d3:	adc    al,0x92
  4198d5:	lea    eax,[ebx]
  4198d7:	jnp    0x4198a4
  4198d9:	sub    bh,ch
  4198db:	cmp    BYTE PTR [eax],bh
  4198dd:	loop   0x4198e7
  4198df:	jl     0x419927
  4198e1:	dec    ebp
  4198e2:	mov    bh,0x39
  4198e4:	sub    al,0x69
  4198e6:	or     BYTE PTR [eax+0x4f],cl
  4198e9:	clc    
  4198ea:	shl    BYTE PTR [ebp+0x4e],0xe
  4198ee:	int3   
  4198ef:	cli    
  4198f0:	(bad)  
  4198f1:	and    al,0x33
  4198f3:	jne    0x419901
  4198f5:	and    DWORD PTR [ebx+0x7a],ebp
  4198f8:	repnz mov eax,0x91c14c2a
  4198fe:	jle    0x4198ce
  419900:	repz mov edx,0x9eb9a6ab
  419906:	pop    ebp
  419907:	xchg   ebx,eax
  419908:	jns    0x4198cd
  41990a:	mov    eax,0xf579ee1e
  41990f:	jb     0x419976
  419911:	mov    DWORD PTR [eax-0x2bafbc4f],0x2b2884f0
  41991b:	fimul  WORD PTR [esi+0x30]
  41991e:	pop    esp
  41991f:	cmp    eax,0x525f8959
  419924:	mov    ah,0x5d
  419926:	mov    edx,0x30bb4858
  41992b:	in     eax,dx
  41992c:	ret    0x87a4
  41992f:	mov    bl,0x4
  419932:	mov    edx,0x94236d70
  419937:	add    eax,0x5294df02
  41993c:	push   esp
  41993d:	out    dx,al
  41993e:	sub    al,0x4a
  419940:	or     dh,bl
  419942:	pop    ebp
  419943:	leave  
  419944:	imul   eax,DWORD PTR [eax+0xe],0xffffffc7
  419948:	int3   
  419949:	xchg   ebp,eax
  41994a:	ss pop ss
  41994c:	jno    0x41991f
  41994e:	mov    al,BYTE PTR [ebx+0x3c537348]
  419954:	xor    esp,esp
  419956:	mov    ds:0x278076fa,al
  41995b:	paddb  mm2,QWORD PTR [ecx-0x12]
  41995f:	jmp    0x4198ed
  419961:	aas    
  419962:	mov    edi,0xc7e13355
  419967:	jo     0x419920
  419969:	sub    eax,0x34ee6c89
  41996e:	sbb    DWORD PTR [ecx],0xffffff8a
  419971:	pop    ss
  419972:	clc    
  419973:	jbe    0x41993a
  419975:	mov    BYTE PTR ds:0xd3fac1e7,bl
  41997b:	clc    
  41997c:	sbb    BYTE PTR [edx],0x84
  41997f:	(bad)  
  419980:	jno    0x419974
  419982:	das    
  419983:	in     al,dx
  419984:	adc    DWORD PTR [ecx-0x69],ebx
  419987:	sub    BYTE PTR [edi+eiz*8],ah
  41998a:	and    al,0x93
  41998c:	loopne 0x419971
  41998e:	fmul   DWORD PTR ds:0xc5e1e81f
  419994:	ins    BYTE PTR es:[edi],dx
  419995:	hlt    
  419996:	push   0x9fbc57e8
  41999b:	div    BYTE PTR [esi-0x35]
  41999e:	je     0x419a1a
  4199a0:	cmp    al,0x60
  4199a2:	lods   eax,DWORD PTR ds:[esi]
  4199a3:	out    dx,eax
  4199a4:	leave  
  4199a5:	xor    dh,BYTE PTR [ebx]
  4199a7:	pop    edx
  4199a8:	xor    eax,0x9375396d
  4199ad:	add    al,0x9f
  4199af:	pushf  
  4199b0:	jle    0x4199aa
  4199b2:	aam    0x9f
  4199b4:	gs hlt 
  4199b6:	add    al,BYTE PTR [ecx-0x3a]
  4199b9:	cmp    BYTE PTR [esi-0x37c2e7de],dl
  4199bf:	aaa    
  4199c0:	(bad)  
  4199c1:	push   ebp
  4199c2:	add    bl,dh
  4199c4:	mov    ah,0xa
  4199c6:	inc    ecx
  4199c7:	sub    eax,0xd6973e03
  4199cc:	adc    esi,esp
  4199ce:	daa    
  4199cf:	cli    
  4199d0:	jbe    0x419a19
  4199d2:	mov    DWORD PTR [ecx],ecx
  4199d4:	mov    ebx,0xd53a3c8a
  4199d9:	mov    ah,0xfd
  4199db:	inc    esp
  4199dc:	cmp    bh,BYTE PTR [edx]
  4199de:	enter  0xfb65,0xb6
  4199e2:	fucomp st(6)
  4199e4:	sbb    esi,DWORD PTR [edi+0x60]
  4199e7:	sbb    ebp,0xcfe59abe
  4199ed:	adc    al,0xd
  4199ef:	mov    es,WORD PTR [ebp-0x4c]
  4199f2:	popa   
  4199f3:	mov    eax,ds:0x9641c9cf
  4199f8:	push   edx
  4199f9:	mov    ecx,0x2c32d355
  4199fe:	inc    ebp
  4199ff:	ficomp WORD PTR [edi+0x28]
  419a02:	aad    0x3
  419a04:	xchg   BYTE PTR [esi],ah
  419a06:	(bad)  
  419a07:	pop    esi
  419a08:	mov    ds:0xbad0e05c,eax
  419a0d:	imul   esp,DWORD PTR [ecx-0x5cd169da],0xf
  419a14:	sub    BYTE PTR [eax-0xe],dh
  419a17:	scas   al,BYTE PTR es:[edi]
  419a18:	dec    eax
  419a19:	or     eax,0xe9a31524
  419a1e:	clc    
  419a1f:	stos   BYTE PTR es:[edi],al
  419a20:	mov    al,0xcb
  419a22:	inc    ebx
  419a23:	mov    eax,0x5f75bcf6
  419a28:	test   BYTE PTR ds:0x11351b58,dh
  419a2e:	ins    BYTE PTR es:[edi],dx
  419a2f:	pop    esi
  419a30:	out    dx,eax
  419a31:	xchg   ecx,eax
  419a32:	and    BYTE PTR [ebx+edx*1-0x4a],dh
  419a36:	inc    esp
  419a37:	(bad)  
  419a38:	xor    al,0x0
  419a3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a3b:	icebp  
  419a3c:	or     al,0x79
  419a3e:	jno    0x4199f2
  419a40:	enter  0x591e,0xc4
  419a44:	add    BYTE PTR [ebx+0x3e75124f],al
  419a4a:	or     DWORD PTR [ebx],esi
  419a4c:	adc    BYTE PTR [ecx+0x4d15dc1],dl
  419a52:	call   0x9f6:0xe1a45e1b
  419a59:	fs shl edx,0x20
  419a5d:	jbe    0x419a84
  419a5f:	dec    esi
  419a60:	fadd   DWORD PTR [ebp-0x11338ee3]
  419a66:	out    0x60,eax
  419a68:	jbe    0x419a21
  419a6a:	aas    
  419a6b:	or     eax,0xc40c4b11
  419a70:	nop
  419a71:	push   esp
  419a72:	cmp    DWORD PTR [edi-0x6b5a4d4],edx
  419a78:	push   ebp
  419a79:	test   BYTE PTR [ecx+0x4],ah
  419a7c:	cmp    BYTE PTR [eax-0x46],ah
  419a7f:	jo     0x419a61
  419a81:	push   es
  419a82:	lea    esi,[ebx+esi*2]
  419a85:	dec    ecx
  419a86:	xor    ah,BYTE PTR [ebp-0x55]
  419a89:	and    al,cl
  419a8b:	cs scas eax,DWORD PTR es:[edi]
  419a8d:	cwde   
  419a8e:	pop    es
  419a8f:	ficomp WORD PTR [edx]
  419a91:	xor    edx,DWORD PTR [ebx-0x42]
  419a94:	inc    ecx
  419a95:	sar    BYTE PTR [ecx+0x7],1
  419a98:	and    al,dl
  419a9a:	pop    ebp
  419a9b:	pop    esp
  419a9c:	into   
  419a9d:	loop   0x419a66
  419a9f:	pusha  
  419aa0:	push   ds
  419aa1:	pop    edi
  419aa2:	nop
  419aa3:	fist   DWORD PTR [esi-0x61746025]
  419aa9:	push   esp
  419aaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419aab:	fwait
  419aac:	mov    dh,0xd6
  419aae:	cmp    cl,BYTE PTR [ebp-0xc]
  419ab1:	mov    edx,0xaa68ab73
  419ab6:	test   BYTE PTR [edi+0x59],dh
  419ab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419aba:	sub    ch,cl
  419abc:	in     al,dx
  419abd:	outs   dx,DWORD PTR ds:[esi]
  419abe:	div    BYTE PTR [esi+0x13124df]
  419ac4:	add    DWORD PTR [edx+0x2d],0x1f30839e
  419acb:	js     0x419b12
  419acd:	or     edx,esp
  419acf:	push   edi
  419ad0:	das    
  419ad1:	jmp    0xec11:0xf263e02e
  419ad8:	push   edx
  419ad9:	xchg   edi,eax
  419ada:	aaa    
  419adb:	or     al,bl
  419add:	ins    DWORD PTR es:[edi],dx
  419ade:	add    al,0xe5
  419ae0:	cmp    ebx,ecx
  419ae2:	pop    ebx
  419ae3:	sub    dl,dl
  419ae5:	mov    ah,0x43
  419ae7:	sub    BYTE PTR [ecx],ch
  419ae9:	cmp    al,0xe9
  419aeb:	fcmovb st,st(1)
  419aed:	retf   0x6945
  419af0:	mov    al,ds:0x50f59e2f
  419af5:	xor    DWORD PTR [eax],edx
  419af7:	adc    esp,DWORD PTR [eax+edx*8]
  419afa:	int3   
  419afb:	mov    esp,DWORD PTR [eax+0x5d]
  419afe:	dec    eax
  419aff:	je     0x419ab4
  419b01:	inc    esi
  419b02:	cmc    
  419b03:	sbb    al,0x9b
  419b05:	inc    eax
  419b06:	xchg   edx,eax
  419b07:	push   es
  419b08:	ins    DWORD PTR es:[edi],dx
  419b09:	inc    eax
  419b0a:	lds    ebx,FWORD PTR [ecx]
  419b0c:	push   edi
  419b0d:	aam    0xa1
  419b0f:	xchg   edi,eax
  419b10:	je     0x419b8f
  419b12:	pop    ds
  419b13:	pop    ecx
  419b14:	fadd   QWORD PTR [esi]
  419b16:	sbb    BYTE PTR [ebp-0x289fc828],cl
  419b1c:	xchg   esp,eax
  419b1d:	xchg   edx,eax
  419b1e:	out    dx,eax
  419b1f:	es ffree st(5)
  419b22:	inc    ebp
  419b23:	and    ah,BYTE PTR [ecx+0x3a3ebbd9]
  419b29:	cmp    BYTE PTR [ecx-0x13],ah
  419b2c:	sub    esp,edi
  419b2e:	mov    esi,DWORD PTR [edi+0x18]
  419b31:	jle    0x419b2f
  419b33:	mov    edx,0x3886e8c3
  419b38:	fidivr WORD PTR [edx+0x23d247ca]
  419b3e:	jae    0x419b69
  419b40:	ss add eax,esp
  419b43:	mov    ecx,0xc9699526
  419b48:	loopne 0x419bc3
  419b4a:	sub    eax,0xb5be58ad
  419b4f:	ins    BYTE PTR es:[edi],dx
  419b50:	sbb    BYTE PTR [ecx+0x25],ah
  419b53:	mov    ebp,0x99f9ab09
  419b58:	and    al,0xae
  419b5a:	pop    ss
  419b5b:	out    0x24,al
  419b5d:	mov    dh,0x7a
  419b5f:	popf   
  419b60:	mov    WORD PTR [edi+0x2d4f95be],gs
  419b66:	in     al,0x11
  419b68:	xchg   esi,eax
  419b69:	xor    eax,DWORD PTR [edx-0x3257e313]
  419b6f:	jne    0x419b1b
  419b71:	mov    WORD PTR [edx+0x7a70c37],gs
  419b77:	(bad)  
  419b78:	fdivr  DWORD PTR [eax+0x3276b9ee]
  419b7e:	mov    ebx,0x718f45fd
  419b83:	cdq    
  419b84:	pushf  
  419b85:	sub    DWORD PTR [edi+0x34],eax
  419b88:	pushf  
  419b89:	icebp  
  419b8a:	push   esp
  419b8b:	push   ds
  419b8c:	scas   al,BYTE PTR es:[edi]
  419b8d:	lea    eax,[edx-0x29e7c6ea]
  419b93:	call   0xfebc8235
  419b98:	inc    ecx
  419b99:	stos   BYTE PTR es:[edi],al
  419b9a:	lods   eax,DWORD PTR ds:[esi]
  419b9c:	xor    DWORD PTR [edx+ebx*8],ebp
  419b9f:	je     0x419bd4
  419ba1:	jmp    0x419b29
  419ba3:	and    bl,BYTE PTR [esi]
  419ba5:	and    al,0x3d
  419ba7:	aaa    
  419ba8:	call   FWORD PTR [ebx-0x64]
  419bab:	adc    eax,0x630eaabc
  419bb0:	cmp    BYTE PTR [ecx+eiz*1-0x7],cl
  419bb4:	cmp    edi,DWORD PTR [esp+edx*8-0x76af977c]
  419bbb:	in     al,dx
  419bbc:	jmp    0xb5a0c124
  419bc1:	add    eax,0x8b53beae
  419bc6:	out    dx,al
  419bc7:	sbb    DWORD PTR [edx-0xf070a11],eax
  419bcd:	inc    edi
  419bce:	aad    0xd0
  419bd0:	dec    edi
  419bd1:	jbe    0x419ba8
  419bd3:	dec    eax
  419bd4:	shl    DWORD PTR [ebx-0x78740e7f],cl
  419bda:	add    DWORD PTR [eax+0x1ec9bf64],esi
  419be0:	fst    QWORD PTR [edi+0x69]
  419be3:	push   edi
  419be4:	push   edx
  419be5:	mov    edi,0x7b882508
  419bea:	mov    ah,0xd9
  419bec:	in     al,0xa5
  419bee:	fldenv [ecx+0x7c74726]
  419bf4:	dec    esi
  419bf5:	xor    DWORD PTR [ebx+ebp*1-0xd],ebp
  419bf9:	lock jg 0x419c67
  419bfc:	(bad)  
  419bfd:	retf   0xc474
  419c00:	cmp    al,0x76
  419c02:	lock scas eax,DWORD PTR es:[edi]
  419c04:	int    0x7
  419c06:	pushf  
  419c07:	daa    
  419c08:	cwde   
  419c09:	leave  
  419c0a:	lds    esi,FWORD PTR [esi-0x45]
  419c0d:	mov    cl,0x2b
  419c0f:	inc    ecx
  419c10:	push   ebp
  419c11:	ret    
  419c12:	pop    ebp
  419c13:	pop    es
  419c14:	cmp    al,0xc8
  419c16:	mov    eax,0x89f64410
  419c1b:	cdq    
  419c1c:	xor    cl,cl
  419c1e:	lea    ebp,[ebx]
  419c20:	xchg   ebx,eax
  419c21:	push   0x44
  419c23:	retf   0x38fe
  419c26:	out    dx,al
  419c27:	xlat   BYTE PTR ds:[ebx]
  419c28:	jnp    0x419c15
  419c2a:	inc    edx
  419c2b:	sub    al,0x41
  419c2e:	sub    DWORD PTR [eax+0xc],esp
  419c31:	(bad)  
  419c33:	xor    al,0x60
  419c35:	pop    ds
  419c36:	retf   
  419c37:	sub    al,0xbc
  419c39:	or     eax,esp
  419c3b:	sub    BYTE PTR [ebp+0x2fc3c80b],al
  419c41:	mov    cl,0x46
  419c43:	cld    
  419c44:	dec    ebx
  419c45:	data16 sub al,0xc
  419c48:	fucom  st(7)
  419c4a:	jns    0x419c48
  419c4c:	mov    DWORD PTR [eax+0x2b],0x53846a76
  419c53:	or     al,0xdc
  419c55:	dec    ecx
  419c56:	ja     0x419cb0
  419c58:	push   ecx
  419c59:	loop   0x419cbb
  419c5b:	jmp    0xf661:0xecc50d2
  419c62:	pop    ecx
  419c63:	inc    edx
  419c64:	outs   dx,DWORD PTR ds:[esi]
  419c65:	mov    bl,0x42
  419c67:	mov    al,ds:0x7a9f87b
  419c6c:	jmp    0xfe8a:0xc9a902c7
  419c73:	jle    0x419cb6
  419c75:	ret    0x890
  419c78:	shl    bh,0x45
  419c7b:	inc    ecx
  419c7c:	and    ebx,DWORD PTR [ebp+0x35]
  419c7f:	fisub  WORD PTR [eax+0x51]
  419c82:	jl     0x419c2a
  419c84:	sbb    eax,0xfd689ae0
  419c89:	ins    DWORD PTR es:[edi],dx
  419c8a:	outs   dx,BYTE PTR ds:[esi]
  419c8b:	jge    0x419cad
  419c8d:	int3   
  419c8e:	mov    al,ds:0x21713ea3
  419c93:	out    dx,eax
  419c94:	shl    DWORD PTR [ecx-0x54],0x87
  419c98:	jmp    0x3a39b02b
  419c9d:	mov    ecx,0x584cec75
  419ca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ca3:	out    0x71,al
  419ca5:	setnp  dh
  419ca8:	outs   dx,DWORD PTR ds:[esi]
  419ca9:	popf   
  419caa:	sahf   
  419cab:	xchg   edx,eax
  419cac:	rcl    BYTE PTR [ecx+0x37],0xf4
  419cb0:	scas   al,BYTE PTR es:[edi]
  419cb1:	push   es
  419cb2:	xchg   ecx,eax
  419cb3:	pushf  
  419cb4:	add    al,0x20
  419cb6:	je     0x419c6c
  419cb8:	aam    0xfc
  419cba:	cmp    al,0xd4
  419cbc:	xchg   DWORD PTR [esi+0x376a2f0f],edx
  419cc2:	jb     0x419c7f
  419cc4:	mov    ds,WORD PTR [ecx-0xb]
  419cc7:	xchg   edx,eax
  419cc8:	adc    eax,0x3990d33c
  419ccd:	xor    BYTE PTR [esi],ah
  419ccf:	(bad)  [esp+edx*8]
  419cd2:	shl    BYTE PTR [ebp+0x6f0d48f9],0xe1
  419cd9:	adc    BYTE PTR [ebx-0x7],al
  419cdc:	(bad)  
  419cdd:	std    
  419cde:	add    ebx,esp
  419ce0:	push   edx
  419ce1:	(bad)  
  419ce2:	fld    st(6)
  419ce4:	cdq    
  419ce5:	cwde   
  419ce6:	jmp    0x27f2d74f
  419ceb:	push   ss
  419cec:	push   ebx
  419ced:	jne    0x419ca0
  419cef:	push   ss
  419cf0:	aaa    
  419cf1:	sbb    edx,DWORD PTR [eax+0xea4e1f6]
  419cf7:	loop   0x419d17
  419cf9:	pop    esi
  419cfa:	inc    eax
  419cfb:	jbe    0x419d21
  419cfd:	addr16 mov eax,ds:0xe83a
  419d01:	and    eax,0x3085eb66
  419d06:	fdivr  st,st(1)
  419d08:	xor    eax,0xefdee119
  419d0d:	lds    ecx,FWORD PTR [edx-0x762a95bc]
  419d13:	stos   DWORD PTR es:[edi],eax
  419d14:	stos   BYTE PTR es:[edi],al
  419d15:	jns    0x419cf2
  419d17:	lahf   
  419d18:	cld    
  419d19:	das    
  419d1a:	int3   
  419d1b:	mov    ebx,0x27a6fbc
  419d20:	cmp    DWORD PTR [ebx+0x5e],0x72abb5f4
  419d27:	xchg   edx,eax
  419d28:	(bad)  
  419d29:	lock mov ebp,0xfd5e51ec
  419d2f:	push   es
  419d30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d31:	cmc    
  419d32:	jnp    0x419cf7
  419d34:	(bad)  
  419d35:	out    dx,eax
  419d36:	loope  0x419d8c
  419d38:	aas    
  419d39:	jl     0x419d07
  419d3b:	stos   DWORD PTR es:[edi],eax
  419d3c:	pop    ds
  419d3d:	xchg   edx,eax
  419d3e:	cld    
  419d3f:	and    dh,cl
  419d41:	bound  ecx,QWORD PTR [esp+eiz*8-0x564b2b87]
  419d48:	iret   
  419d49:	pop    ecx
  419d4a:	mov    eax,0x4f6a7e30
  419d4f:	adc    ebp,DWORD PTR [esi+0x6e]
  419d52:	inc    ecx
  419d53:	sbb    al,0x46
  419d55:	mov    ah,0x9c
  419d57:	jg     0x419ced
  419d59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d5a:	jmp    0xaefa:0x5279f1dd
  419d61:	ror    DWORD PTR [ecx],cl
  419d63:	and    esi,edi
  419d65:	jo     0x419daa
  419d67:	inc    eax
  419d68:	pop    esi
  419d69:	aam    0x66
  419d6b:	cwde   
  419d6c:	add    DWORD PTR fs:[esi+0x1ea78509],eax
  419d73:	inc    eax
  419d74:	sbb    eax,0x5144493b
  419d79:	inc    ecx
  419d7a:	jp     0x419d22
  419d7c:	sub    DWORD PTR [ebx-0x13],eax
  419d7f:	xchg   ebp,eax
  419d80:	inc    ebp
  419d81:	int3   
  419d82:	imul   esp,DWORD PTR [esi],0xffffffd3
  419d85:	jae    0x419dbf
  419d87:	sub    al,0x72
  419d89:	repnz fcomip st,st(7)
  419d8c:	xchg   ebx,eax
  419d8d:	add    ecx,0x16299fb1
  419d93:	jb     0x419d79
  419d95:	dec    ecx
  419d96:	(bad)  
  419d97:	in     eax,0xb4
  419d99:	pusha  
  419d9a:	inc    esi
  419d9b:	mov    ah,0x40
  419d9d:	mov    ecx,0xc1ea9bc0
  419da2:	cmp    edi,DWORD PTR [esi+0x39]
  419da5:	arpl   bp,bp
  419da7:	mov    ecx,0xff9dc831
  419dac:	add    edi,0x6172878c
  419db2:	push   esi
  419db3:	pop    ss
  419db4:	loop   0x419de1
  419db6:	repz add bl,dh
  419db9:	lahf   
  419dba:	outs   dx,DWORD PTR ds:[esi]
  419dbb:	mov    al,0xb1
  419dbd:	test   BYTE PTR [esi],bh
  419dbf:	leave  
  419dc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dc1:	lds    ebx,FWORD PTR [ebp-0x2acd0f1]
  419dc7:	shl    DWORD PTR [esi+0x11fcc0d3],1
  419dcd:	(bad)  
  419dce:	cmp    DWORD PTR [eax],esp
  419dd0:	adc    al,0xed
  419dd2:	cmp    cl,ah
  419dd4:	mov    esp,0x2882c24f
  419dd9:	mov    WORD PTR fs:[eax+0x5d],ss
  419ddd:	(bad)  
  419ddf:	(bad)  
  419de0:	xchg   ebx,eax
  419de1:	jns    0x419e44
  419de3:	inc    esp
  419de4:	mov    cl,0x5f
  419de6:	jg     0x419d75
  419de8:	stos   BYTE PTR es:[edi],al
  419de9:	jp     0x419d76
  419deb:	or     BYTE PTR [ecx+0xd5e15ba],0x88
  419df2:	jbe    0x419e2d
  419df4:	jmp    0x419e2f
  419df6:	dec    esp
  419df7:	loope  0x419dfd
  419df9:	adc    BYTE PTR [esi],dl
  419dfb:	or     eax,0x8188edf3
  419e00:	adc    DWORD PTR [edx-0x56df8dd7],0xea0cb124
  419e0a:	dec    ebx
  419e0b:	cli    
  419e0c:	xor    ebx,DWORD PTR [ecx+0x4a]
  419e0f:	xchg   ebp,eax
  419e10:	mov    ds:0xc4567f5d,eax
  419e15:	cs pop ecx
  419e17:	sbb    al,0x34
  419e19:	cmp    eax,0x7128a4ca
  419e1f:	mov    edi,0x15d2c5c6
  419e24:	outs   dx,BYTE PTR ds:[esi]
  419e25:	and    ecx,DWORD PTR ds:0xcf5c02dc
  419e2b:	fwait
  419e2c:	data16 icebp 
  419e2e:	jmp    0x419e07
  419e30:	enter  0x9aae,0xd9
  419e34:	add    DWORD PTR [edx+ebp*2-0x1fe5603d],edi
  419e3b:	scas   eax,DWORD PTR es:[edi]
  419e3c:	ja     0x419dc2
  419e3e:	sahf   
  419e3f:	cmp    al,0x29
  419e41:	in     eax,dx
  419e42:	jno    0x419e66
  419e44:	test   cl,ch
  419e46:	repnz mov cl,0xa3
  419e49:	mov    ah,0xca
  419e4b:	(bad)  
  419e4c:	fdivr  DWORD PTR [esi]
  419e4e:	test   BYTE PTR [ecx+0x74],dl
  419e51:	xlat   BYTE PTR ds:[ebx]
  419e52:	jns    0x419eba
  419e54:	jl     0x419dfb
  419e56:	leave  
  419e57:	push   ebp
  419e58:	push   cs
  419e59:	adc    BYTE PTR [esi+ebx*8+0xd131915],dl
  419e60:	sar    DWORD PTR [eax-0x4a],0x6b
  419e64:	hlt    
  419e65:	inc    ebp
  419e66:	scas   eax,DWORD PTR es:[edi]
  419e67:	in     eax,0xf5
  419e69:	ja     0x419eda
  419e6b:	jo     0x419e6f
  419e6d:	data16 ins BYTE PTR es:[edi],dx
  419e6f:	inc    edi
  419e70:	ficomp DWORD PTR [edi+0x47d63ba1]
  419e76:	cmp    DWORD PTR [eax-0x63],ecx
  419e79:	inc    esi
  419e7a:	fcom   DWORD PTR [esi+edx*2]
  419e7d:	fsincos 
  419e7f:	xor    bh,BYTE PTR [ecx]
  419e81:	stc    
  419e82:	xor    eax,0x55d2c55a
  419e87:	push   cs
  419e88:	in     al,dx
  419e89:	fistp  QWORD PTR [edi]
  419e8b:	cld    
  419e8c:	cmp    edi,DWORD PTR [edi+0x22565b54]
  419e92:	stc    
  419e93:	cmp    ebx,edi
  419e95:	and    esp,DWORD PTR [edi+edx*2]
  419e98:	or     ch,cl
  419e9a:	imul   edx,esi,0x42
  419e9d:	add    esp,DWORD PTR [edi]
  419e9f:	rol    BYTE PTR [ebx-0x7bcbed43],cl
  419ea5:	push   edi
  419ea6:	dec    edx
  419ea7:	and    al,0x9f
  419ea9:	cmp    dh,0xf0
  419eac:	rol    DWORD PTR ds:0xa3e3082e,0xb8
  419eb3:	ds mov esi,ss
  419eb6:	rol    DWORD PTR [ebp+0x574771fe],0x1d
  419ebd:	sbb    eax,0x24233fc6
  419ec2:	adc    bl,BYTE PTR [edx-0x52]
  419ec5:	sub    eax,0x5ad65763
  419eca:	push   ss
  419ecb:	mov    dh,0x0
  419ecd:	xchg   esi,eax
  419ece:	sub    cl,BYTE PTR [ecx-0x287a0f7e]
  419ed4:	aam    0xc6
  419ed6:	clc    
  419ed7:	(bad)  
  419ed8:	dec    edi
  419ed9:	jae    0x419ecb
  419edb:	sub    edi,DWORD PTR [eax+0x12]
  419ede:	or     DWORD PTR [ecx+0x4a],edi
  419ee1:	scas   al,BYTE PTR es:[edi]
  419ee2:	dec    eax
  419ee3:	stc    
  419ee4:	jmp    FWORD PTR [ecx]
  419ee6:	xor    ebp,DWORD PTR [esi+0xedeb736]
  419eec:	mov    DWORD PTR [esi],edx
  419eee:	adc    eax,0x553de8e5
  419ef3:	lods   eax,DWORD PTR ds:[esi]
  419ef4:	sbb    ah,al
  419ef6:	add    bl,BYTE PTR [edx+esi*1+0x700cc16]
  419efd:	pop    ebp
  419efe:	fstp   DWORD PTR [ecx+0x21]
  419f01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f02:	or     BYTE PTR [ebx],0xd4
  419f05:	test   al,0x85
  419f07:	add    dh,BYTE PTR [ebp-0x80cca73]
  419f0d:	xchg   ah,al
  419f0f:	push   esp
  419f10:	imul   edi,DWORD PTR [edx+0x7e],0xffffffd1
  419f14:	xor    ebx,DWORD PTR [edx+0x4c0d0808]
  419f1a:	push   0xe861babb
  419f1f:	and    ecx,esp
  419f21:	out    dx,al
  419f22:	jno    0x419f16
  419f24:	stc    
  419f25:	arpl   bp,ax
  419f27:	and    esp,ebx
  419f29:	and    bh,BYTE PTR ds:0xb157f16a
  419f2f:	mov    esp,0xbb848c22
  419f34:	mov    BYTE PTR [eax+0xf520381],bl
  419f3a:	sub    BYTE PTR [ebp+0x79d153b6],0xac
  419f41:	loopne 0x419f90
  419f43:	in     eax,dx
  419f44:	test   BYTE PTR [edx],ch
  419f46:	pop    ebx
  419f47:	sub    DWORD PTR [esi-0x1d],0xa24b5d58
  419f4e:	xchg   ecx,eax
  419f4f:	and    dh,dl
  419f51:	das    
  419f52:	jge    0x419edc
  419f54:	jo     0x419fd1
  419f56:	(bad)  
  419f57:	mov    al,ds:0xa3fafc12
  419f5c:	lock or al,0x58
  419f5f:	add    DWORD PTR [esi-0x4b],ebp
  419f62:	test   eax,0x53b02fa
  419f67:	push   ecx
  419f68:	not    bl
  419f6a:	jge    0x419f1f
  419f6c:	hlt    
  419f6d:	cmp    esi,esi
  419f6f:	cmc    
  419f70:	in     al,0x89
  419f72:	repnz cmp eax,DWORD PTR [ecx]
  419f75:	or     ebx,ecx
  419f77:	push   esp
  419f78:	fmul   st(4),st
  419f7a:	lods   eax,DWORD PTR ds:[esi]
  419f7b:	cmp    esp,DWORD PTR [ecx+ecx*8]
  419f7e:	or     DWORD PTR [esi],esi
  419f80:	mov    eax,ds:0x9ddd6d65
  419f85:	push   edi
  419f86:	mov    ss,WORD PTR [ebx-0x668cd498]
  419f8c:	adc    dl,BYTE PTR [ebp-0x43]
  419f8f:	add    edi,ebp
  419f91:	sub    eax,0xdc3cd465
  419f96:	fiadd  DWORD PTR [esi+eax*4+0x362a7a51]
  419f9d:	into   
  419f9e:	dec    esp
  419fa0:	mov    ebx,0x186cc57c
  419fa5:	lock pop ebp
  419fa7:	pop    edi
  419fa8:	jns    0x419fea
  419faa:	add    BYTE PTR [edi-0x1986d344],0xfd
  419fb1:	stc    
  419fb2:	fsubr  st(5),st
  419fb4:	leave  
  419fb5:	mov    ah,0xb2
  419fb7:	mov    WORD PTR [edi+0x6fb167f2],gs
  419fbd:	push   ss
  419fbe:	je     0x419f8b
  419fc0:	frstor [ebp+0x68]
  419fc3:	add    eax,0x45c26eb4
  419fc8:	adc    ch,BYTE PTR [esi]
  419fca:	(bad)  
  419fcb:	adc    al,0x68
  419fcd:	into   
  419fce:	and    BYTE PTR [eax-0x71],0x1
  419fd2:	adc    dh,ch
  419fd4:	addr16 mov ch,0x3e
  419fd7:	daa    
  419fd8:	test   eax,0xe93d556d
  419fdd:	clc    
  419fde:	or     al,0xfd
  419fe0:	fist   WORD PTR [esi]
  419fe2:	popf   
  419fe3:	ret    
  419fe4:	ret    0x454d
  419fe7:	xchg   esi,eax
  419fe8:	ret    0x8b6b
  419feb:	jnp    0x41a044
  419fed:	sbb    al,0x6c
  419fef:	xchg   BYTE PTR [ebx+0x4549bdb],dh
  419ff5:	adc    BYTE PTR [ebx+edx*4+0xc],0x3d
  419ffa:	fcmovu st,st(4)
  419ffc:	jmp    0x504e8575
  41a001:	in     al,dx
  41a002:	mov    al,ds:0x56566d87
  41a007:	idiv   DWORD PTR [eax]
  41a009:	pop    edx
  41a00a:	or     al,0xd5
  41a00c:	fsubp  st(6),st
  41a00e:	sbb    BYTE PTR [esi-0x3913162],0x71
  41a015:	mov    ds:0x56509c09,eax
  41a01a:	mov    esp,0x5f16e127
  41a01f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a020:	sub    ecx,DWORD PTR [esi-0x2cc62ba8]
  41a026:	and    eax,0x2fd5bee
  41a02b:	fisubr WORD PTR [edx-0x3e66dbd]
  41a031:	int3   
  41a032:	push   eax
  41a033:	push   0x739cb854
  41a038:	call   0xfdde7e76
  41a03d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a03f:	sbb    dl,ah
  41a041:	inc    esi
  41a042:	or     DWORD PTR [ecx],ecx
  41a044:	jnp    0x41a016
  41a046:	or     ebx,edx
  41a048:	xor    eax,0x938019f6
  41a04d:	fbstp  TBYTE PTR [ebp-0x9ddd1f9]
  41a053:	repnz sbb eax,0x8773f047
  41a059:	jbe    0x41a026
  41a05b:	pop    ss
  41a05c:	stc    
  41a05d:	mov    ds:0xdda90f8c,al
  41a062:	pusha  
  41a063:	mov    esp,0x484a9564
  41a068:	jmp    0xfaed:0x7768f4a
  41a06f:	rol    DWORD PTR ds:0x159106fa,0xc5
  41a076:	pushf  
  41a077:	es cmp cl,ch
  41a07a:	xor    ah,bh
  41a07c:	call   0x715f:0x8ea3587b
  41a083:	add    eax,0x3bf7ec79
  41a088:	(bad)  
  41a089:	je     0x41a0e7
  41a08b:	or     al,0x3d
  41a08d:	inc    ebp
  41a08e:	jp     0x41a10d
  41a090:	pop    edi
  41a091:	push   cs
  41a092:	sub    al,0x92
  41a094:	popf   
  41a095:	pop    ss
  41a096:	jp     0x41a048
  41a098:	call   0xc3d:0x3e9238f4
  41a09f:	pop    edi
  41a0a0:	mov    bh,0x4c
  41a0a2:	ror    BYTE PTR [eax+0x4905d7fc],0xf0
  41a0a9:	fdiv   QWORD PTR [eax-0x56]
  41a0ac:	dec    edi
  41a0ad:	push   edx
  41a0ae:	adc    eax,0xfc32ae5b
  41a0b3:	jmp    0xd519a5db
  41a0b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0b9:	xor    eax,0x6d6c6d33
  41a0be:	cmp    al,0xfe
  41a0c0:	adc    bl,BYTE PTR [edi+0x47ff8453]
  41a0c6:	in     eax,dx
  41a0c7:	push   edx
  41a0c8:	(bad)  
  41a0c9:	lahf   
  41a0ca:	push   eax
  41a0cb:	rol    DWORD PTR ds:0x24f24e42,1
  41a0d1:	push   es
  41a0d2:	and    al,0xfc
  41a0d4:	add    eax,DWORD PTR [edx+eiz*8-0x4]
  41a0d8:	mov    esi,0xa49b0a1b
  41a0dd:	(bad)  
  41a0de:	mov    eax,0x1d5d0e63
  41a0e3:	shr    bl,0x8d
  41a0e6:	daa    
  41a0e7:	dec    ebx
  41a0e8:	test   eax,0xad31cd42
  41a0ed:	push   edi
  41a0ee:	dec    eax
  41a0ef:	rcl    DWORD PTR [eax+0x6e011494],1
  41a0f5:	push   DWORD PTR [ebx]
  41a0f7:	sbb    bh,bl
  41a0f9:	push   esp
  41a0fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0fb:	pushf  
  41a0fc:	push   esi
  41a0fd:	add    BYTE PTR [ebp+0x37424d42],ch
  41a103:	sub    eax,0xc929b2b7
  41a108:	in     eax,0xe9
  41a10a:	inc    edi
  41a10b:	inc    esi
  41a10c:	loope  0x41a151
  41a10e:	mov    ss,WORD PTR [edi]
  41a110:	mov    dh,0x77
  41a112:	jbe    0x41a18b
  41a114:	dec    edx
  41a115:	sbb    eax,0x8ab85130
  41a11a:	stos   DWORD PTR es:[edi],eax
  41a11b:	add    edi,DWORD PTR [edi+eax*4-0x38376e31]
  41a122:	sub    edi,eax
  41a124:	sbb    ah,dh
  41a126:	xchg   ecx,eax
  41a127:	pushf  
  41a128:	adc    ebp,esp
  41a12a:	ja     0x41a144
  41a12c:	daa    
  41a12d:	shl    BYTE PTR ds:0x3d4b0d8e,0xc5
  41a134:	pop    eax
  41a135:	loopne 0x41a0c0
  41a137:	mov    al,0xa7
  41a139:	mov    ecx,0xd63c947
  41a13e:	and    BYTE PTR [ecx+eiz*4],0x5a
  41a142:	push   cs
  41a143:	jo     0x41a137
  41a145:	jno    0x41a13d
  41a147:	loop   0x41a0cf
  41a149:	sar    BYTE PTR [ebp+0xc],cl
  41a14c:	adc    eax,0xbda351f1
  41a151:	inc    ecx
  41a152:	loope  0x41a140
  41a154:	xchg   edi,eax
  41a155:	mov    eax,0xc5f59f1c
  41a15a:	outs   dx,DWORD PTR ds:[esi]
  41a15b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a15c:	mov    bl,0x71
  41a15e:	mov    al,0x40
  41a160:	aam    0xf3
  41a162:	jbe    0x41a18d
  41a164:	sbb    bl,BYTE PTR [esi-0x1040d5f2]
  41a16a:	out    0x52,al
  41a16c:	add    eax,0x51380662
  41a171:	shr    ebp,cl
  41a173:	push   es
  41a174:	in     al,dx
  41a175:	pop    edi
  41a176:	outs   dx,BYTE PTR ds:[esi]
  41a177:	lea    eax,[ebx+0x5e6e0571]
  41a17d:	stos   BYTE PTR es:[edi],al
  41a17e:	arpl   WORD PTR [edi+ebp*4],di
  41a181:	inc    esi
  41a182:	sbb    DWORD PTR [ebp-0x6ef521f2],ebx
  41a188:	jmp    0x41a201
  41a18a:	or     al,0x7f
  41a18c:	sub    al,0xd1
  41a18e:	push   ebp
  41a18f:	inc    edx
  41a190:	add    bh,al
  41a192:	sti    
  41a193:	ror    BYTE PTR [edx-0x74eaee70],cl
  41a199:	pop    ebp
  41a19a:	jmp    0xc308:0x933433b9
  41a1a1:	xor    al,0x1a
  41a1a3:	sub    al,bl
  41a1a5:	push   0xc3654475
  41a1aa:	dec    edx
  41a1ab:	clc    
  41a1ac:	jb     0x41a1ed
  41a1ae:	add    BYTE PTR [esi-0x66],0xdb
  41a1b2:	pop    esi
  41a1b3:	ins    DWORD PTR es:[edi],dx
  41a1b4:	fs cmp eax,0x755f1fbb
  41a1ba:	cdq    
  41a1bb:	and    al,BYTE PTR [edi-0xb]
  41a1be:	and    dh,cl
  41a1c0:	popf   
  41a1c1:	sbb    dl,BYTE PTR [ebx+0x58]
  41a1c4:	push   edi
  41a1c5:	out    dx,al
  41a1c6:	retf   
  41a1c7:	mov    ?,edi
  41a1c9:	in     eax,0xba
  41a1cb:	xor    al,0xf9
  41a1cd:	xor    al,0xb4
  41a1cf:	out    0xe1,eax
  41a1d1:	xor    DWORD PTR [esi+ebx*4+0x7072b62f],esi
  41a1d8:	icebp  
  41a1d9:	test   ah,0x6a
  41a1dc:	jmp    0x57bbe775
  41a1e1:	or     cl,cl
  41a1e3:	cmp    edx,DWORD PTR [eax+edx*4-0x3f]
  41a1e7:	ds jne 0x41a20a
  41a1ea:	add    bl,BYTE PTR [esi]
  41a1ec:	arpl   ax,ax
  41a1ee:	push   edi
  41a1ef:	enter  0xc935,0xa3
  41a1f3:	jecxz  0x41a267
  41a1f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1f6:	je     0x41a21f
  41a1f8:	sub    DWORD PTR [ebx-0x80],esi
  41a1fb:	jnp    0x41a1bf
  41a1fd:	dec    ebp
  41a1fe:	cld    
  41a1ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a200:	test   eax,0xbfed79c6
  41a205:	inc    ecx
  41a206:	jmp    0x41a1f1
  41a208:	loop   0x41a1e7
  41a20a:	push   0x4a8a8b3f
  41a20f:	mov    bl,0x58
  41a211:	aas    
  41a212:	shr    DWORD PTR [ebp+esi*1+0x3fc8fe8],1
  41a219:	call   0x1838ff16
  41a21e:	jnp    0x41a1c6
  41a220:	lahf   
  41a221:	int3   
  41a222:	cmp    al,BYTE PTR [esi+0x4e2686e9]
  41a228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a229:	mov    al,0x2b
  41a22b:	retf   
  41a22c:	adc    edi,DWORD PTR [esp+ebx*1-0x50]
  41a230:	mov    esp,0xeeb30d83
  41a235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a236:	loop   0x41a26a
  41a238:	lahf   
  41a239:	push   esp
  41a23a:	(bad)  
  41a23b:	xor    cl,dh
  41a23d:	loopne 0x41a1fd
  41a23f:	or     BYTE PTR [eax],ch
  41a241:	iret   
  41a242:	in     eax,dx
  41a243:	and    bh,BYTE PTR ds:0x56be78a1
  41a249:	lock inc ecx
  41a24b:	mov    edx,0xd14589ab
  41a250:	push   edi
  41a251:	mov    WORD PTR [edx],fs
  41a253:	or     BYTE PTR [ebx+0x66d35805],dh
  41a259:	or     ebx,DWORD PTR [eax+esi*8]
  41a25c:	pop    es
  41a25d:	mov    dx,0x7a5b
  41a261:	lods   eax,DWORD PTR ds:[esi]
  41a262:	mov    eax,0xd7d183c5
  41a267:	jmp    0x41a290
  41a269:	xchg   ebx,eax
  41a26a:	sbb    ebp,edi
  41a26c:	push   es
  41a26d:	add    DWORD PTR ds:0x1291272a,esp
  41a273:	inc    edx
  41a274:	mov    dl,0xd2
  41a276:	pusha  
  41a277:	inc    ebx
  41a278:	mov    ch,0xc1
  41a27a:	or     al,ah
  41a27c:	in     al,0x87
  41a27e:	push   ecx
  41a27f:	mov    esp,0xd4910f49
  41a284:	sbb    BYTE PTR [edi-0x79],bl
  41a287:	pop    esp
  41a288:	fsub   QWORD PTR [ebp-0x26]
  41a28b:	loopne 0x41a249
  41a28d:	mov    dl,0xab
  41a28f:	lods   eax,DWORD PTR ds:[esi]
  41a290:	int    0xd8
  41a292:	sbb    cl,ch
  41a294:	sub    ebp,DWORD PTR [ecx-0x53]
  41a297:	jno    0x41a27a
  41a299:	push   ecx
  41a29a:	scas   eax,DWORD PTR es:[edi]
  41a29b:	popw   ss
  41a29d:	mov    dl,0xce
  41a29f:	retf   
  41a2a0:	mov    edi,0xad370cfa
  41a2a5:	adc    ah,BYTE PTR [esi+0x1a5ff4b5]
  41a2ab:	scas   al,BYTE PTR es:[edi]
  41a2ac:	sub    BYTE PTR [edx-0x773e83ea],bh
  41a2b2:	add    BYTE PTR [ebp+0x76e17cb6],bh
  41a2b8:	or     eax,0xef6e3857
  41a2bd:	pop    edx
  41a2be:	das    
  41a2bf:	or     eax,0xec94c3
  41a2c4:	(bad)  
  41a2c5:	dec    eax
  41a2c6:	(bad)  
  41a2c7:	cmp    ebx,DWORD PTR [edx]
  41a2c9:	sti    
  41a2ca:	stc    
  41a2cb:	shl    DWORD PTR [ebp+esi*8+0x7b],0xb9
  41a2d0:	jge    0x41a349
  41a2d2:	cmc    
  41a2d3:	xchg   DWORD PTR [ebx-0x5362f2d4],eax
  41a2d9:	sub    eax,0x54bf1286
  41a2de:	push   eax
  41a2df:	arpl   WORD PTR [ecx+0x6da3acae],bp
  41a2e5:	mov    WORD PTR [esi+0x1b4c1e4b],ss
  41a2eb:	pop    eax
  41a2ec:	pop    esp
  41a2ed:	or     dh,BYTE PTR [ebp-0x4b9a1ad7]
  41a2f3:	out    0xe8,al
  41a2f5:	fdiv   DWORD PTR [edi+edx*8+0x1c]
  41a2f9:	test   al,0x2f
  41a2fb:	mov    eax,ds:0x8f731f2a
  41a300:	sbb    al,0x8c
  41a302:	shl    DWORD PTR [ebx-0x3044693a],0x5a
  41a309:	push   ecx
  41a30a:	adc    al,0xd8
  41a30c:	mov    ch,0x34
  41a30e:	xor    BYTE PTR [eax],bh
  41a310:	sahf   
  41a311:	imul   al
  41a313:	js     0x41a378
  41a315:	inc    ecx
  41a316:	sub    DWORD PTR [ecx-0x4478e043],esi
  41a31c:	stos   BYTE PTR es:[edi],al
  41a31d:	sub    edi,eax
  41a31f:	dec    eax
  41a320:	or     DWORD PTR [ebx+0x2a970ecd],esi
  41a326:	mov    cl,0x15
  41a328:	rcr    DWORD PTR [ebp-0x3ad2846],0xc8
  41a32f:	inc    ebp
  41a330:	sar    ah,cl
  41a332:	fisttp DWORD PTR [edi-0x735473d8]
  41a338:	aam    0xed
  41a33a:	inc    ebx
  41a33b:	iret   
  41a33c:	sbb    BYTE PTR [ecx+0x7e],al
  41a33f:	jmp    0xa878:0xad15586
  41a346:	sbb    esp,DWORD PTR [esi*2+0x4e7a9a02]
  41a34d:	out    dx,al
  41a34e:	fisubr DWORD PTR [eax+edi*2]
  41a351:	test   al,0x2f
  41a353:	pop    esi
  41a354:	ds ds jne 0x41a361
  41a358:	push   es
  41a359:	mov    ds:0xeeabae93,al
  41a35e:	iret   
  41a35f:	or     al,BYTE PTR [eax+eax*4+0x7d]
  41a363:	(bad)  
  41a364:	sbb    eax,0xe6d130db
  41a369:	in     eax,dx
  41a36a:	add    eax,0xf927b27d
  41a36f:	xchg   ecx,eax
  41a370:	enter  0x9a01,0x99
  41a374:	js     0x41a3b7
  41a376:	mov    edx,0xdcae5d57
  41a37b:	sbb    eax,0xcd36af47
  41a380:	shl    ch,cl
  41a382:	aas    
  41a383:	xchg   DWORD PTR [ebp-0x54],edx
  41a386:	dec    esp
  41a387:	sub    bh,dh
  41a389:	outs   dx,BYTE PTR ds:[esi]
  41a38a:	int3   
  41a38b:	das    
  41a38c:	push   ebp
  41a38d:	ror    ch,1
  41a38f:	or     eax,0x88df01bc
  41a394:	and    BYTE PTR [edi-0x16],ah
  41a397:	or     BYTE PTR [ebp+0x4a7d3418],dh
  41a39d:	sub    al,0xd5
  41a39f:	fsubr  QWORD PTR [edi]
  41a3a1:	repz in eax,dx
  41a3a3:	and    DWORD PTR [edx-0x53],0x6b
  41a3a7:	push   ecx
  41a3a8:	mov    ch,0x98
  41a3aa:	sub    DWORD PTR [edx],ecx
  41a3ac:	(bad)  
  41a3ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3af:	pusha  
  41a3b0:	pop    ss
  41a3b1:	fadd   QWORD PTR [ecx-0x55]
  41a3b4:	push   ebp
  41a3b5:	or     BYTE PTR [edi],ch
  41a3b7:	pop    ds
  41a3b8:	add    DWORD PTR gs:[ebx+0x2be650b0],ecx
  41a3bf:	push   edi
  41a3c0:	and    BYTE PTR [ebx+0xe],bl
  41a3c3:	sti    
  41a3c4:	inc    esi
  41a3c5:	arpl   WORD PTR [esi+eax*2],ax
  41a3c8:	cs sti 
  41a3ca:	arpl   WORD PTR [ebx-0x60],bp
  41a3cd:	push   ebp
  41a3ce:	adc    ch,BYTE PTR [edx]
  41a3d0:	xchg   ebx,eax
  41a3d1:	aaa    
  41a3d2:	pop    edx
  41a3d3:	test   DWORD PTR [ebp-0x7161bfe4],eax
  41a3d9:	mov    al,ds:0x36886474
  41a3de:	repz fild QWORD PTR [edi+0x12b86cac]
  41a3e5:	mov    eax,ds:0x6e9880b6
  41a3ea:	scas   eax,DWORD PTR es:[edi]
  41a3eb:	adc    eax,0xb93830f7
  41a3f0:	mov    dl,0x86
  41a3f2:	sbb    DWORD PTR [ecx+0x70],edx
  41a3f5:	add    dh,BYTE PTR [ebp-0x31]
  41a3f8:	je     0x41a3bd
  41a3fa:	xchg   BYTE PTR [edx-0x5f07d6ee],cl
  41a400:	pop    esi
  41a401:	ja     0x41a435
  41a403:	fdiv   DWORD PTR [ebp+0x1e9b2c5]
  41a409:	pusha  
  41a40a:	popa   
  41a40b:	push   0x8c9a84c9
  41a410:	(bad)  
  41a411:	jns    0x41a3fd
  41a413:	loop   0x41a404
  41a415:	mov    edi,0x2b54c455
  41a41a:	std    
  41a41b:	sub    al,0x4b
  41a41d:	dec    esi
  41a41e:	cmp    BYTE PTR [edx+0x3c76219],bh
  41a424:	cmp    DWORD PTR [ecx],ebp
  41a426:	sub    ecx,DWORD PTR [ecx]
  41a428:	rol    BYTE PTR [ebx-0x26f7e7c3],0x6d
  41a42f:	int    0xa9
  41a431:	ins    DWORD PTR es:[edi],dx
  41a432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a433:	enter  0xd6b4,0x90
  41a437:	int    0xf5
  41a439:	lock jmp 0x41a3fb
  41a43c:	xchg   edi,eax
  41a43d:	pusha  
  41a43e:	dec    ebx
  41a43f:	add    bl,BYTE PTR [esi-0x62]
  41a442:	sbb    BYTE PTR [bp+0x4143],dh
  41a447:	xor    al,0x5a
  41a449:	icebp  
  41a44a:	xor    eax,0xa7612a4f
  41a44f:	retf   
  41a450:	loop   0x41a441
  41a452:	mov    esi,0x92ca8990
  41a457:	imul   eax,eax,0xffffff83
  41a45a:	sub    ebp,DWORD PTR [edi-0x1]
  41a45d:	and    al,0x12
  41a45f:	(bad)  
  41a460:	sub    al,0x40
  41a462:	sahf   
  41a463:	outs   dx,BYTE PTR ds:[esi]
  41a464:	call   0x15fbf400
  41a469:	add    dh,BYTE PTR [eax+0x4ed5f903]
  41a46f:	jmp    0x41a457
  41a471:	inc    esi
  41a472:	retf   0xd340
  41a475:	xor    esi,DWORD PTR [edx]
  41a477:	js     0x41a43e
  41a479:	adc    al,0xb2
  41a47b:	cs das 
  41a47d:	xor    al,0xcd
  41a47f:	ficomp WORD PTR [esi+0x7058d7ee]
  41a485:	lods   eax,DWORD PTR ds:[esi]
  41a486:	xchg   bl,ah
  41a488:	xchg   ebx,eax
  41a489:	and    DWORD PTR [esi],esi
  41a48b:	mov    dh,0xa4
  41a48d:	and    edx,edi
  41a48f:	pop    edi
  41a490:	fucomi st,st(6)
  41a492:	in     al,dx
  41a493:	mov    ecx,0xbb134838
  41a498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a499:	dec    ebx
  41a49a:	fisttp WORD PTR [ecx]
  41a49c:	jecxz  0x41a4d0
  41a49e:	scas   al,BYTE PTR es:[edi]
  41a49f:	jl     0x41a46b
  41a4a1:	xor    edx,DWORD PTR [eax]
  41a4a3:	das    
  41a4a4:	ret    
  41a4a5:	add    DWORD PTR [edi],eax
  41a4a7:	(bad)
  41a4ab:	out    dx,al
  41a4ac:	and    eax,0xec0bb76e
  41a4b1:	fild   QWORD PTR [esi+0x39]
  41a4b4:	call   0xe7249506
  41a4b9:	aad    0x25
  41a4bb:	shl    al,1
  41a4bd:	hlt    
  41a4be:	retf   0x4ab6
  41a4c1:	pop    edx
  41a4c2:	stc    
  41a4c3:	loop   0x41a4ec
  41a4c5:	retf   
  41a4c6:	dec    edx
  41a4c7:	lods   al,BYTE PTR ds:[esi]
  41a4c8:	mov    edx,0x92800bc1
  41a4cd:	sub    DWORD PTR [edi+eax*1-0x4aca3563],eax
  41a4d4:	je     0x41a46b
  41a4d6:	push   0x26
  41a4d8:	adc    ecx,DWORD PTR [edi-0x46a5ad3d]
  41a4de:	xchg   ebx,eax
  41a4df:	mov    ebp,0xb939da89
  41a4e4:	aad    0x19
  41a4e6:	mov    al,ds:0xd7b5dc24
  41a4eb:	sbb    BYTE PTR [edi+0x5580b6c6],dl
  41a4f1:	daa    
  41a4f2:	push   edx
  41a4f3:	icebp  
  41a4f4:	add    eax,0x49a157eb
  41a4f9:	lods   eax,DWORD PTR ds:[esi]
  41a4fa:	xor    al,0x77
  41a4fc:	fadd   DWORD PTR [ebx+ebp*2]
  41a4ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a500:	ret    
  41a501:	cmp    ecx,DWORD PTR [ebx]
  41a503:	inc    esi
  41a504:	fsubrp st(3),st
  41a506:	scas   eax,DWORD PTR es:[edi]
  41a507:	lock push esi
  41a509:	mov    ds:0x9d6a82ff,al
  41a50e:	pop    esp
  41a50f:	sub    ah,BYTE PTR [edi-0x4275f580]
  41a515:	jecxz  0x41a512
  41a517:	inc    esp
  41a518:	ja     0x41a555
  41a51a:	and    eax,0x1642497e
  41a51f:	pop    ebx
  41a520:	js     0x41a4c2
  41a522:	mov    ebp,0x7930f288
  41a527:	inc    ecx
  41a528:	add    al,0x2f
  41a52a:	mov    ds:0x542be704,al
  41a52f:	xchg   edx,eax
  41a530:	bswap  ecx
  41a532:	(bad)  
  41a533:	sbb    BYTE PTR [edx+eiz*2+0x2386f5df],ch
  41a53a:	push   ebx
  41a53b:	cdq    
  41a53c:	aam    0x83
  41a53e:	push   0x627b1b31
  41a543:	ins    BYTE PTR es:[edi],dx
  41a544:	out    dx,eax
  41a545:	adc    eax,0x9b50f69a
  41a54a:	sub    DWORD PTR [ecx-0x2c],ecx
  41a54d:	hlt    
  41a54e:	or     dl,BYTE PTR [edx]
  41a550:	sbb    BYTE PTR ds:0x3a8020db,ah
  41a556:	(bad)  
  41a557:	jae    0x41a55e
  41a559:	xor    eax,0xd67d33d1
  41a55e:	xor    eax,0xeb7d700f
  41a563:	rcr    DWORD PTR [esi],cl
  41a565:	cmp    al,0xdf
  41a567:	sub    al,0x32
  41a569:	inc    edx
  41a56a:	fisub  DWORD PTR [edx]
  41a56c:	and    ecx,edi
  41a56e:	dec    edi
  41a56f:	pop    edx
  41a570:	jno    0x41a4fe
  41a572:	mov    esi,0x93b2113b
  41a577:	je     0x41a5ee
  41a579:	jl     0x41a572
  41a57b:	cmp    ch,ch
  41a57d:	jp     0x41a5fb
  41a57f:	rcl    DWORD PTR ds:0x4df69f8e,cl
  41a585:	retf   0x7877
  41a588:	cwde   
  41a589:	hlt    
  41a58a:	mov    eax,ds:0xbd8b9907
  41a58f:	push   0xffffffbc
  41a591:	ret    0x246c
  41a594:	gs aaa 
  41a596:	and    eax,0x3f938c84
  41a59b:	push   0x0
  41a59d:	pushf  
  41a59e:	gs xchg ebx,eax
  41a5a0:	cmc    
  41a5a1:	cmp    esp,edx
  41a5a3:	(bad)  
  41a5a5:	push   edx
  41a5a6:	jae    0x41a602
  41a5a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5a9:	jo     0x41a52f
  41a5ab:	repz icebp 
  41a5ad:	stc    
  41a5ae:	sub    DWORD PTR [ebp-0x3],esi
  41a5b1:	daa    
  41a5b2:	pop    esi
  41a5b3:	(bad)  
  41a5b4:	dec    ebx
  41a5b5:	xor    DWORD PTR [ebp-0x64],eax
  41a5b8:	cs push ss
  41a5ba:	arpl   sp,si
  41a5bc:	adc    BYTE PTR [esi],dl
  41a5be:	fs add al,0x5b
  41a5c1:	push   edi
  41a5c2:	lea    esi,[ebx-0x69]
  41a5c5:	sub    eax,0x1cc2b313
  41a5ca:	push   cs
  41a5cb:	aam    0xc7
  41a5cd:	or     dh,al
  41a5cf:	shl    esp,1
  41a5d1:	fld    DWORD PTR [ebp+0x5]
  41a5d4:	mov    ah,0x95
  41a5d6:	mov    ebp,0x9feb7
  41a5db:	cli    
  41a5dc:	and    bl,ah
  41a5de:	(bad)  
  41a5df:	int    0x5a
  41a5e1:	rcr    BYTE PTR [edi+0x47],1
  41a5e4:	rol    ecx,0x84
  41a5e7:	and    esi,esp
  41a5e9:	mov    esi,0x33f21fb2
  41a5ee:	and    al,0x97
  41a5f0:	mov    ebx,0x5f52e41e
  41a5f5:	or     esi,DWORD PTR [edi-0x499649e4]
  41a5fb:	jg     0x41a5bc
  41a5fd:	cmp    al,0x28
  41a5ff:	(bad)
  41a604:	lods   al,BYTE PTR ds:[esi]
  41a605:	retf   
  41a606:	pop    edi
  41a607:	int    0x45
  41a609:	retf   
  41a60a:	popf   
  41a60b:	mov    ds:0x36d3056d,al
  41a610:	in     eax,0xeb
  41a612:	popf   
  41a613:	xchg   edi,ebx
  41a615:	sbb    BYTE PTR [edx+0x2d],ch
  41a618:	pop    ebp
  41a619:	mov    ch,0x40
  41a61b:	dec    esi
  41a61c:	mov    ch,0x15
  41a61e:	(bad)
  41a622:	push   cs
  41a623:	push   0xffffffd3
  41a625:	and    al,0xb3
  41a627:	dec    ecx
  41a628:	cmp    DWORD PTR [esi-0x3f],esi
  41a62b:	stc    
  41a62c:	(bad)  
  41a62d:	jmp    0xdae19eef
  41a632:	mov    ah,0x85
  41a634:	jp     0x41a5e9
  41a636:	pop    edx
  41a638:	daa    
  41a639:	pop    edx
  41a63a:	cmp    BYTE PTR [ecx-0x5b8c80f9],bl
  41a640:	ror    DWORD PTR [ebx],cl
  41a642:	call   0xd4c0d9e1
  41a647:	push   esp
  41a648:	mov    ds:0xc6e7c8f7,al
  41a64d:	daa    
  41a64e:	(bad)
  41a651:	test   al,0x2a
  41a653:	jne    0x41a60f
  41a655:	cmp    DWORD PTR [ecx+0x5447a795],0xa80edc56
  41a65f:	cmp    eax,0xb9fc1c78
  41a664:	imul   ebp,DWORD PTR [ebp-0x730339f],0x79
  41a66b:	add    DWORD PTR [edx],esp
  41a66d:	xor    eax,0x701ee120
  41a672:	xchg   esi,eax
  41a673:	(bad)  
  41a674:	mov    cl,0x53
  41a676:	pop    edx
  41a677:	test   al,0xf8
  41a679:	jno    0x41a6be
  41a67b:	lods   al,BYTE PTR ds:[esi]
  41a67c:	sbb    DWORD PTR [ebx],ebx
  41a67e:	xchg   esp,eax
  41a67f:	pop    es
  41a680:	cmp    al,0x9d
  41a682:	(bad)  
  41a683:	jo     0x41a6df
  41a685:	jno    0x41a6e1
  41a687:	aaa    
  41a688:	xor    ah,BYTE PTR [edx]
  41a68a:	push   eax
  41a68b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a68c:	in     eax,dx
  41a68d:	xchg   edx,eax
  41a68e:	sbb    al,BYTE PTR [ebx+ebp*1]
  41a691:	fisubr WORD PTR ds:0xcae629de
  41a697:	sbb    eax,DWORD PTR [ecx]
  41a699:	add    dl,BYTE PTR [edx+0x63]
  41a69c:	jmp    0x41a6d7
  41a69e:	push   0x9
  41a6a0:	mov    BYTE PTR [edi-0x6d3702b9],ah
  41a6a6:	mov    dh,0x35
  41a6a8:	or     al,0x8b
  41a6aa:	mov    esp,DWORD PTR [esi-0x24c9bdd2]
  41a6b0:	lods   al,BYTE PTR ds:[esi]
  41a6b1:	mov    dl,0x38
  41a6b3:	sbb    ebx,DWORD PTR [ecx-0x74]
  41a6b6:	sub    al,0x70
  41a6b8:	loop   0x41a67d
  41a6ba:	mov    ds:0xd4b7f35,al
  41a6bf:	xor    al,0x48
  41a6c1:	call   0x3af903cf
  41a6c6:	test   eax,0x12d29a2f
  41a6cb:	inc    ebx
  41a6cc:	(bad)  
  41a6cd:	iret   
  41a6ce:	sahf   
  41a6cf:	jno    0x41a6aa
  41a6d1:	mov    bh,BYTE PTR [eax+0x3c7d82d4]
  41a6d7:	add    edx,DWORD PTR [ebx+0x59877dce]
  41a6dd:	jne    0x41a6f4
  41a6df:	push   0x5a9b84af
  41a6e4:	das    
  41a6e5:	mov    eax,ds:0x3cd1df00
  41a6ea:	xchg   esp,eax
  41a6eb:	pop    edx
  41a6ec:	lods   al,BYTE PTR ds:[esi]
  41a6ed:	and    eax,0xd78b5a1c
  41a6f2:	sub    al,0x24
  41a6f4:	fnstenv [edi+ebx*1-0x591b2659]
  41a6fb:	mov    bh,0xcf
  41a6fd:	cmp    eax,0x8b3c407b
  41a702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a703:	inc    ecx
  41a704:	mul    BYTE PTR [edx+0x16b4f8d8]
  41a70a:	mov    al,ds:0xcaf08256
  41a70f:	ss jle 0x41a769
  41a712:	lods   al,BYTE PTR ds:[esi]
  41a713:	jo     0x41a70a
  41a715:	cmp    cl,bl
  41a717:	push   edx
  41a718:	mov    esp,0x469a3a07
  41a71d:	stos   BYTE PTR es:[edi],al
  41a71e:	inc    esi
  41a71f:	pop    ds
  41a720:	(bad)  
  41a721:	pop    edx
  41a722:	pushf  
  41a723:	jg     0x41a777
  41a725:	je     0x41a76a
  41a727:	rol    DWORD PTR [ebx+0x56a3434d],cl
  41a72d:	aaa    
  41a72e:	(bad)  [edi]
  41a730:	sar    DWORD PTR [edx-0x1e7cac6a],0x9e
  41a737:	daa    
  41a738:	sub    al,0xef
  41a73a:	ret    
  41a73b:	inc    edx
  41a73c:	pop    ebp
  41a73d:	mov    edi,0x775c6831
  41a742:	mov    ebp,0x93262c32
  41a747:	adc    BYTE PTR [edi-0x15129c31],ch
  41a74d:	jp     0x41a71f
  41a74f:	retf   0x281e
  41a752:	mov    ah,0x31
  41a754:	icebp  
  41a755:	xor    al,0xa8
  41a757:	mul    DWORD PTR [eax]
  41a759:	jo     0x41a7c3
  41a75b:	push   edi
  41a75c:	ins    BYTE PTR es:[edi],dx
  41a75d:	(bad)  
  41a75e:	or     ah,BYTE PTR [ecx+0x59b0aed9]
  41a764:	test   al,0xf1
  41a766:	mov    ecx,0x566f002d
  41a76b:	(bad)  
  41a76c:	adc    ebp,ecx
  41a76e:	mov    dh,0x65
  41a770:	es ins BYTE PTR es:[edi],dx
  41a772:	sbb    BYTE PTR [edi+0x69],al
  41a775:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a776:	jae    0x41a7c0
  41a778:	hlt    
  41a779:	pop    edi
  41a77a:	mov    al,ds:0x3f62f3a4
  41a77f:	retf   0x3e97
  41a782:	inc    esp
  41a783:	mov    fs,WORD PTR [eax-0x171a9a26]
  41a789:	dec    esp
  41a78a:	fdiv   QWORD PTR [ecx]
  41a78c:	lea    esp,[esi+0x1e8bf8fd]
  41a792:	mov    ds:0xacd903ca,eax
  41a797:	jg     0x41a72e
  41a799:	sub    BYTE PTR [esi+0x1ded9411],dl
  41a79f:	lock or ah,BYTE PTR [ebx-0x23]
  41a7a3:	dec    esi
  41a7a4:	jb     0x41a79b
  41a7a6:	xor    DWORD PTR [ebx+0x65],ebx
  41a7a9:	cmp    ch,BYTE PTR [ebp-0x7d]
  41a7ac:	jo     0x41a793
  41a7ae:	cmp    BYTE PTR ss:[edx-0x28c122c8],0x68
  41a7b6:	sub    edi,DWORD PTR [eax-0x2c]
  41a7b9:	imul   edx,DWORD PTR [edi+0x71],0xbb30c955
  41a7c0:	mov    edi,0x5a62ca50
  41a7c5:	and    ebp,DWORD PTR [ebx+0xc238efb]
  41a7cb:	sbb    ebp,DWORD PTR [esp+esi*4+0x22639032]
  41a7d2:	or     al,0x4e
  41a7d4:	fadd   QWORD PTR [edi+ebp*1]
  41a7d7:	jno    0x41a793
  41a7d9:	jmp    0x6001:0x3c694b35
  41a7e0:	mov    dl,0xce
  41a7e2:	xchg   esi,eax
  41a7e3:	or     edi,ecx
  41a7e5:	inc    ebx
  41a7e6:	or     eax,0x2b4206c2
  41a7ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7ed:	call   0x4b67:0xc523fa5e
  41a7f4:	pop    ds
  41a7f5:	fst    QWORD PTR [edi+0x6a]
  41a7f8:	dec    ecx
  41a7f9:	xor    eax,0x6a0de390
  41a7fe:	xor    al,0xa1
  41a800:	push   eax
  41a801:	mov    eax,ds:0x8d0a8294
  41a806:	hlt    
  41a807:	bound  esp,QWORD PTR [edx]
  41a809:	call   0x9f80:0x62f63a1f
  41a810:	out    dx,eax
  41a811:	dec    eax
  41a812:	jp     0x41a86b
  41a814:	stos   BYTE PTR es:[edi],al
  41a815:	clc    
  41a816:	pop    ds
  41a817:	xor    dl,dl
  41a819:	dec    esp
  41a81a:	push   cs
  41a81b:	stc    
  41a81c:	pop    ds
  41a81d:	lods   al,BYTE PTR ds:[esi]
  41a81e:	and    al,0xa6
  41a820:	(bad)  
  41a822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a823:	push   ebp
  41a824:	test   eax,0xb1bc698b
  41a829:	call   0x649a:0xc1a235d3
  41a830:	cs loopne 0x41a886
  41a833:	or     eax,0x28d958a8
  41a838:	sbb    eax,0x86a75778
  41a83d:	push   cs
  41a83e:	loope  0x41a8bc
  41a840:	adc    eax,0xe1a2c129
  41a845:	stc    
  41a846:	cmp    DWORD PTR [ebx+0x232a94f2],0x3a
  41a84d:	fucomip st,st(6)
  41a84f:	mov    ch,0x5e
  41a851:	leave  
  41a852:	arpl   WORD PTR [ebp+eax*8-0x4139a85d],bp
  41a859:	es loope 0x41a8d0
  41a85c:	popf   
  41a85d:	test   esi,0xd66ac956
  41a863:	xchg   esi,eax
  41a864:	inc    eax
  41a865:	bswap  eax
  41a867:	rol    DWORD PTR [ebp+0x2f41388d],cl
  41a86d:	mul    DWORD PTR [esi-0x7e29b73b]
  41a873:	(bad)  
  41a874:	or     ah,BYTE PTR [ebx-0x6b27efc4]
  41a87a:	ins    BYTE PTR es:[edi],dx
  41a87b:	xchg   DWORD PTR [edi+0x1190aeb4],esp
  41a881:	in     eax,0xcc
  41a883:	or     edi,esi
  41a885:	es (bad) 
  41a888:	(bad)  [ebp+0x78e89b72]
  41a88e:	cmp    bh,BYTE PTR [ebp-0x48]
  41a891:	sbb    DWORD PTR [edi],esp
  41a893:	mov    eax,ds:0xa269c2b0
  41a898:	fistp  DWORD PTR [edi-0xe496970]
  41a89e:	push   edi
  41a89f:	test   BYTE PTR [esi-0x4a],dh
  41a8a2:	cmp    esi,DWORD PTR [edx+0x5fb18602]
  41a8a8:	fisub  DWORD PTR [esi-0x6b469006]
  41a8ae:	push   0xffffffe3
  41a8b0:	es out 0xe5,al
  41a8b3:	(bad)  
  41a8b4:	stos   DWORD PTR es:[edi],eax
  41a8b5:	popa   
  41a8b6:	addr16 push esi
  41a8b8:	out    0x8c,al
  41a8ba:	cmp    eax,0x7453f471
  41a8bf:	xor    dh,BYTE PTR [edx+ecx*1+0x2c8292a]
  41a8c6:	cmc    
  41a8c7:	cli    
  41a8c8:	not    ecx
  41a8ca:	inc    ecx
  41a8cb:	outs   dx,BYTE PTR ds:[esi]
  41a8cc:	or     dl,BYTE PTR [ebx+0x1f]
  41a8cf:	aam    0x80
  41a8d1:	add    DWORD PTR [edx+eax*1],esi
  41a8d4:	test   al,0xb3
  41a8d6:	dec    edx
  41a8d7:	xor    bh,BYTE PTR [ebx]
  41a8d9:	dec    esi
  41a8da:	jp     0x41a8b6
  41a8dc:	test   eax,0xd57b83b3
  41a8e1:	jmp    0x41a930
  41a8e3:	push   es
  41a8e4:	push   0x7b88cc27
  41a8e9:	xchg   edi,eax
  41a8ea:	lods   al,BYTE PTR ds:[esi]
  41a8eb:	add    eax,0xaeaabfba
  41a8f0:	bound  ebp,QWORD PTR [esi]
  41a8f2:	push   ebx
  41a8f3:	mov    ch,0x93
  41a8f5:	iret   
  41a8f6:	xchg   ebp,eax
  41a8f7:	dec    eax
  41a8f8:	pop    ebp
  41a8f9:	inc    esp
  41a8fa:	sbb    BYTE PTR [ecx-0x4811ca07],dh
  41a900:	mov    eax,0x65804415
  41a905:	mov    edi,0xdec06433
  41a90a:	push   es
  41a90b:	dec    edi
  41a90c:	rcl    BYTE PTR [ecx],0xc6
  41a90f:	xchg   esi,eax
  41a910:	adc    eax,0x1cdcabcd
  41a915:	bound  esp,QWORD PTR ds:0x5649ee4d
  41a91b:	repnz or BYTE PTR [ebp-0x41be3d4d],ch
  41a922:	sub    eax,0xbd610e5f
  41a927:	add    esi,ecx
  41a929:	push   esp
  41a92a:	scas   al,BYTE PTR es:[edi]
  41a92b:	jns    0x41a93e
  41a92d:	add    eax,0xaf14f16
  41a932:	sbb    ecx,DWORD PTR [edx+0x8]
  41a935:	retf   
  41a936:	clc    
  41a937:	cmp    bl,BYTE PTR [ecx-0x6a8113cb]
  41a93d:	mov    ds:0x75e53aff,eax
  41a942:	xchg   esi,eax
  41a943:	and    DWORD PTR [eax],ecx
  41a945:	xchg   ebx,eax
  41a946:	loopne 0x41a8e0
  41a948:	push   ds
  41a949:	aas    
  41a94a:	sbb    DWORD PTR [eax+ebx*1+0x1e92dcbb],ebx
  41a951:	jnp    0x41a983
  41a953:	retf   0xcd9f
  41a956:	not    BYTE PTR [edx]
  41a958:	and    DWORD PTR [edx-0x236ea8d9],edx
  41a95e:	outs   dx,BYTE PTR ds:[esi]
  41a95f:	inc    ebp
  41a960:	int3   
  41a961:	test   al,0x8f
  41a963:	lahf   
  41a964:	mov    al,BYTE PTR [eax]
  41a966:	xor    eax,0x3b99c3d4
  41a96b:	and    DWORD PTR [ebx+ebx*4-0x53761147],edi
  41a972:	sub    eax,0xf0d0aca8
  41a977:	xchg   esp,eax
  41a978:	mov    cl,0xa1
  41a97a:	inc    ebx
  41a97b:	mov    ds:0x7cbee4eb,eax
  41a980:	fdiv   DWORD PTR [eax+0x5]
  41a983:	xchg   DWORD PTR [eax+0x5facd160],eax
  41a989:	shl    DWORD PTR [esp+edi*8-0x3b],0xa2
  41a98e:	push   es
  41a98f:	adc    esp,ecx
  41a991:	dec    edx
  41a992:	jns    0x41a9e9
  41a994:	cmp    dh,BYTE PTR [ebp+esi*4-0xc5bb93d]
  41a99b:	int    0x36
  41a99d:	add    BYTE PTR [edi],dl
  41a99f:	in     al,dx
  41a9a0:	xchg   esi,eax
  41a9a1:	sti    
  41a9a2:	out    dx,al
  41a9a3:	xchg   BYTE PTR [esi-0x6d],cl
  41a9a6:	lods   al,BYTE PTR ds:[esi]
  41a9a7:	sbb    bh,BYTE PTR [ebp-0x3fad7530]
  41a9ad:	inc    esp
  41a9ae:	or     cl,BYTE PTR [esi-0x43]
  41a9b1:	add    bl,al
  41a9b3:	or     ecx,DWORD PTR [eax]
  41a9b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9b6:	inc    edx
  41a9b7:	cwde   
  41a9b8:	xor    DWORD PTR [edi+0x2fdd5a16],eax
  41a9be:	cmp    DWORD PTR [ebp-0x7],edi
  41a9c1:	push   ss
  41a9c2:	mov    ecx,DWORD PTR ds:0x2f7944a6
  41a9c8:	push   es
  41a9c9:	and    al,0x38
  41a9cb:	call   0xffb6:0x9dc0280e
  41a9d2:	dec    edi
  41a9d3:	inc    esi
  41a9d4:	cmp    al,BYTE PTR [ebx]
  41a9d6:	mov    ds:0xa52048b4,eax
  41a9db:	xor    BYTE PTR [edx+0x34b91dfb],0x6f
  41a9e2:	ret    0x936c
  41a9e5:	pushf  
  41a9e6:	mov    ebp,0x864e939b
  41a9eb:	arpl   ax,ax
  41a9ed:	lea    eax,[ecx+0x77]
  41a9f0:	sub    eax,DWORD PTR [ebp+0x50]
  41a9f3:	sub    eax,0x70d53584
  41a9f8:	mov    ch,0x91
  41a9fa:	inc    ecx
  41a9fb:	push   ss
  41a9fc:	jg     0x41aa5c
  41a9fe:	in     eax,dx
  41a9ff:	mov    DWORD PTR [ebp-0x2d],0x45c501be
  41aa06:	or     ebx,DWORD PTR [edi+edi*2+0x2e]
  41aa0a:	bound  edi,QWORD PTR [eax+0x7daa7e35]
  41aa10:	cmp    ebp,DWORD PTR [edi]
  41aa12:	adc    BYTE PTR [ebx+ebx*8-0x12],ah
  41aa16:	or     BYTE PTR [ebx-0x5964ab4b],cl
  41aa1c:	out    dx,al
  41aa1d:	and    al,0xf7
  41aa1f:	push   ds
  41aa20:	xor    BYTE PTR cs:[esi-0x5c22b5c],0x73
  41aa28:	adc    dl,dh
  41aa2a:	xchg   edi,eax
  41aa2b:	shl    ch,1
  41aa2d:	mov    ebx,DWORD PTR [eax]
  41aa2f:	popf   
  41aa30:	jmp    0x41a9e7
  41aa32:	dec    ebp
  41aa33:	cmp    eax,0xb0a50961
  41aa38:	mov    eax,gs:0x6b0ca29d
  41aa3e:	inc    edx
  41aa3f:	dec    ecx
  41aa40:	imul   edx,DWORD PTR [ebx],0xffffffd4
  41aa43:	paddsb mm0,QWORD PTR [edx]
  41aa46:	je     0x41aa19
  41aa48:	mov    ch,ah
  41aa4a:	int    0x6a
  41aa4c:	adc    ecx,DWORD PTR [eax]
  41aa4e:	cmp    eax,0x88620e43
  41aa53:	push   es
  41aa54:	push   esp
  41aa55:	push   0x51042a3d
  41aa5a:	aad    0x2c
  41aa5c:	out    dx,al
  41aa5d:	dec    ecx
  41aa5e:	xchg   ecx,eax
  41aa5f:	push   esi
  41aa60:	stos   DWORD PTR es:[edi],eax
  41aa61:	xor    eax,0x8de06bf
  41aa66:	mov    bh,0x7d
  41aa68:	stos   BYTE PTR es:[edi],al
  41aa69:	pop    edx
  41aa6a:	add    esi,eax
  41aa6c:	and    ebx,edi
  41aa6e:	sub    al,0xce
  41aa70:	jo     0x41aaaf
  41aa72:	not    eax
  41aa74:	ja     0x41aa6d
  41aa76:	xchg   BYTE PTR [edx],dh
  41aa78:	mov    ds,WORD PTR [edx-0x8]
  41aa7b:	lahf   
  41aa7c:	in     eax,0xd1
  41aa7e:	jge    0x41aa91
  41aa80:	popa   
  41aa81:	push   cs
  41aa82:	pop    ds
  41aa83:	stos   DWORD PTR es:[edi],eax
  41aa84:	xchg   edx,eax
  41aa85:	or     dh,BYTE PTR [edx+0x53]
  41aa88:	fmul   QWORD PTR [eax-0x44]
  41aa8b:	fs pop esp
  41aa8d:	aas    
  41aa8e:	(bad)  fs:[esi-0x710d6e8e]
  41aa95:	sub    BYTE PTR [esi],cl
  41aa97:	mov    ch,0xbf
  41aa99:	scas   al,BYTE PTR es:[edi]
  41aa9a:	mov    ds:0x88385ec9,al
  41aa9f:	mov    esi,DWORD PTR [edi]
  41aaa1:	pusha  
  41aaa2:	clc    
  41aaa3:	add    ch,BYTE PTR [esi+esi*4]
  41aaa6:	pop    esi
  41aaa7:	pop    esi
  41aaa8:	xor    BYTE PTR [edx-0x6b],0x83
  41aaac:	sti    
  41aaad:	std    
  41aaae:	or     bh,BYTE PTR [ecx-0x29]
  41aab1:	mov    cl,0x14
  41aab3:	adc    bl,dh
  41aab5:	gs fs es and ebp,ecx
  41aaba:	xor    ebx,DWORD PTR [eax+eax*2+0x57870581]
  41aac1:	movlhps xmm3,xmm6
  41aac4:	stos   DWORD PTR es:[edi],eax
  41aac5:	jge    0x41aa84
  41aac7:	push   edx
  41aac8:	ja     0x41aafe
  41aaca:	add    eax,0x1b4a2af3
  41aacf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aad0:	jbe    0x41aaf3
  41aad2:	xchg   esi,eax
  41aad3:	jecxz  0x41aa61
  41aad5:	jne    0x41aa70
  41aad7:	ja     0x41ab09
  41aad9:	lea    edx,[edi+edx*8-0x37]
  41aadd:	cli    
  41aade:	lods   al,BYTE PTR ds:[esi]
  41aadf:	jno    0x41ab3b
  41aae1:	jne    0x41aa98
  41aae3:	add    cl,0x54
  41aae6:	ss pop edi
  41aae8:	mov    es,WORD PTR [ebp-0x535bf26]
  41aaee:	pop    edx
  41aaef:	(bad)  
  41aaf0:	sbb    al,0x6
  41aaf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaf3:	enter  0x2243,0xcb
  41aaf7:	arpl   WORD PTR [ebp-0x78153c31],bx
  41aafd:	not    DWORD PTR [edi]
  41aaff:	js     0x41ab10
  41ab01:	add    esp,ecx
  41ab03:	cwde   
  41ab04:	or     al,0x92
  41ab06:	cmc    
  41ab07:	out    dx,al
  41ab08:	dec    esi
  41ab09:	cmp    al,0x21
  41ab0b:	jecxz  0x41aac3
  41ab0d:	fpatan 
  41ab0f:	scas   al,BYTE PTR es:[edi]
  41ab10:	push   ss
  41ab11:	add    cl,BYTE PTR [esi+ebp*4]
  41ab14:	popf   
  41ab15:	xchg   ebx,eax
  41ab16:	inc    dx
  41ab18:	fdivp  st(3),st
  41ab1a:	imul   ebp,DWORD PTR [ebx],0xffffffa4
  41ab1d:	mov    bl,0xd9
  41ab1f:	mov    esi,0x49226c2e
  41ab24:	sub    DWORD PTR [eax-0x56e2859b],esi
  41ab2a:	mov    edi,0x432c3b33
  41ab2f:	cs clc 
  41ab31:	shl    ecx,1
  41ab33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab34:	jb     0x41aaf8
  41ab36:	xor    edi,DWORD PTR [ebp+0x5d55bff2]
  41ab3c:	pushf  
  41ab3d:	(bad)  
  41ab3e:	or     BYTE PTR [edi+0x70],ch
  41ab41:	jmp    0x98d475cd
  41ab46:	ret    
  41ab47:	cmp    al,0xc5
  41ab49:	loop   0x41ab90
  41ab4b:	push   DWORD PTR [esi]
  41ab4d:	pop    ds
  41ab4e:	dec    esp
  41ab4f:	arpl   WORD PTR [edi+0x3831aea7],bx
  41ab55:	mov    ah,BYTE PTR [edx-0x7b]
  41ab58:	jle    0x41aae3
  41ab5a:	add    al,0xbc
  41ab5c:	inc    ecx
  41ab5d:	ins    BYTE PTR es:[edi],dx
  41ab5e:	sub    BYTE PTR [ecx-0x4b230b9c],0x89
  41ab65:	sbb    ebp,ebp
  41ab67:	add    BYTE PTR [esi],ah
  41ab69:	jge    0x41ab05
  41ab6b:	jb     0x41ab1d
  41ab6d:	in     eax,dx
  41ab6e:	xor    ebp,DWORD PTR [edi+0x44]
  41ab71:	int    0x36
  41ab73:	mov    ecx,0x6f52abf0
  41ab78:	and    esp,DWORD PTR [ebp-0x31]
  41ab7b:	mov    edi,DWORD PTR [ebp+eax*4+0x8]
  41ab7f:	jbe    0x41abdd
  41ab81:	jb     0x41ab80
  41ab83:	mov    edx,0x9a756a6e
  41ab88:	jmp    0x551b6053
  41ab8d:	ins    BYTE PTR es:[edi],dx
  41ab8e:	pop    ebp
  41ab8f:	jmp    0x40cf:0xc3673b2b
  41ab96:	xchg   edx,eax
  41ab97:	xlat   BYTE PTR ds:[ebx]
  41ab98:	sbb    edi,DWORD PTR [edx]
  41ab9a:	adc    al,0x43
  41ab9c:	xchg   esi,eax
  41ab9d:	addr16 adc al,0x51
  41aba0:	adc    ecx,DWORD PTR [eax-0x55b1594f]
  41aba6:	mov    ebx,0xefbe3c67
  41abab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abac:	mov    DWORD PTR [edx],eax
  41abae:	dec    edx
  41abaf:	scas   eax,DWORD PTR es:[edi]
  41abb0:	aaa    
  41abb1:	bound  edi,QWORD PTR [ebp-0x4043e463]
  41abb7:	jge    0x41ab9f
  41abb9:	call   0x2c8a:0x35526389
  41abc0:	inc    ecx
  41abc1:	data16 cmp bh,BYTE PTR [esi-0xd]
  41abc5:	out    dx,al
  41abc6:	mov    ch,dh
  41abc8:	in     eax,dx
  41abc9:	les    ebx,FWORD PTR [ebx+0x4f4b6d79]
  41abcf:	loope  0x41ab84
  41abd1:	xchg   DWORD PTR [ebx+0x309ec295],ebp
  41abd7:	jmp    0xcd6f1da
  41abdc:	popa   
  41abdd:	mov    DWORD PTR ds:0xeeef9fe4,0x69442ea0
  41abe7:	mov    ebp,0x7b119149
  41abec:	nop
  41abed:	dec    edx
  41abee:	push   cs
  41abef:	cli    
  41abf0:	and    al,0xed
  41abf2:	jl     0x41abb7
  41abf4:	sahf   
  41abf5:	dec    esp
  41abf6:	jae    0x41abbd
  41abf8:	cmc    
  41abf9:	push   ecx
  41abfa:	add    ecx,edx
  41abfc:	jmp    0xe10ae595
  41ac01:	shr    BYTE PTR [esi+0x7ac9b26d],1
  41ac07:	xchg   esp,eax
  41ac08:	call   0x95b8:0x1aafb18e
  41ac0f:	and    eax,0xdc44c277
  41ac14:	dec    esi
  41ac15:	ja     0x41ac59
  41ac17:	xor    BYTE PTR [esi],cl
  41ac19:	shl    BYTE PTR [edx],0x98
  41ac1c:	ins    BYTE PTR es:[edi],dx
  41ac1d:	and    esp,DWORD PTR [ebp-0x5fa523b]
  41ac23:	stos   DWORD PTR es:[edi],eax
  41ac24:	xlat   BYTE PTR ds:[ebx]
  41ac25:	stc    
  41ac26:	shl    ebp,0x85
  41ac29:	sub    ecx,DWORD PTR [ecx+0x2b0471a]
  41ac2f:	(bad)  
  41ac30:	dec    edi
  41ac31:	sbb    al,0xc4
  41ac33:	cli    
  41ac34:	lahf   
  41ac35:	inc    esp
  41ac36:	lahf   
  41ac37:	mov    ah,0xb8
  41ac3a:	and    esi,esi
  41ac3c:	ds aam 0xa3
  41ac3f:	jb     0x41abd8
  41ac41:	lds    eax,FWORD PTR [ebx-0x394ed54f]
  41ac47:	hlt    
  41ac48:	add    DWORD PTR [edx-0x36aecff2],ecx
  41ac4e:	or     eax,0x9a012a55
  41ac53:	sub    ch,BYTE PTR [ebx+0x1019e2d3]
  41ac59:	fiadd  DWORD PTR [esi+0x10]
  41ac5c:	xchg   esi,eax
  41ac5d:	sub    esi,esi
  41ac5f:	pop    ebp
  41ac60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac62:	cli    
  41ac63:	mov    DWORD PTR [ebp+0x706366d3],edi
  41ac69:	and    eax,0x7cfa9faf
  41ac6e:	xchg   esi,eax
  41ac6f:	fisttp QWORD PTR [edi]
  41ac71:	in     eax,dx
  41ac72:	add    DWORD PTR [eax-0x61],ecx
  41ac75:	popf   
  41ac76:	mov    al,0x29
  41ac78:	push   cs
  41ac79:	retf   0x7f85
  41ac7c:	mov    esp,0xfa82f8cf
  41ac81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac82:	mov    WORD PTR [edi-0x54397ad8],ss
  41ac88:	sbb    DWORD PTR [eax-0xc19bbc8],esp
  41ac8e:	cmp    al,0xdf
  41ac90:	mov    ecx,0x6f2da367
  41ac95:	lea    esp,[ebx+edi*8-0x58]
  41ac99:	icebp  
  41ac9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac9b:	pop    edx
  41ac9c:	push   ebp
  41ac9d:	shl    cl,0x76
  41aca0:	adc    eax,ebx
  41aca2:	add    ah,dh
  41aca4:	sar    DWORD PTR [ebx-0x29],0x47
  41aca8:	aas    
  41aca9:	push   edx
  41acaa:	loop   0x41ac4f
  41acac:	test   DWORD PTR [ecx],eax
  41acae:	push   ds
  41acaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acb0:	jne    0x41ac75
  41acb2:	ins    BYTE PTR es:[edi],dx
  41acb3:	mov    WORD PTR [ebx-0x42],ds
  41acb6:	mov    ch,0xf8
  41acb8:	cld    
  41acb9:	jecxz  0x41acde
  41acbb:	and    al,0x5c
  41acbd:	adc    eax,0xe0e59027
  41acc2:	pop    ebx
  41acc3:	lods   eax,DWORD PTR ds:[esi]
  41acc4:	outs   dx,DWORD PTR ds:[esi]
  41acc5:	jge    0x41aca7
  41acc7:	or     DWORD PTR [ebp-0x35],ebp
  41acca:	icebp  
  41accb:	push   edx
  41accc:	(bad)  
  41accd:	jns    0x41acde
  41accf:	lock je 0x41ad4d
  41acd2:	imul   edx,ebx,0xbd54db0b
  41acd8:	push   edx
  41acd9:	imul   esi,DWORD PTR [esi-0x7b8d9974],0xffffffdf
  41ace0:	push   esp
  41ace1:	sbb    ah,bl
  41ace3:	sub    al,0x4b
  41ace5:	sub    DWORD PTR [esi+0xd],0xf9012fc7
  41acec:	loopne 0x41ad0d
  41acee:	test   eax,0xe2ae8252
  41acf3:	aas    
  41acf4:	push   edi
  41acf5:	test   DWORD PTR [ebp-0x4d],ebp
  41acf8:	mov    edx,0xe4d499d4
  41acfd:	js     0x41ad0f
  41acff:	out    0xb5,al
  41ad01:	sub    ch,cl
  41ad03:	cs in  eax,0xa2
  41ad06:	xchg   edi,eax
  41ad07:	popa   
  41ad08:	popf   
  41ad09:	push   edx
  41ad0a:	or     esi,DWORD PTR [esi]
  41ad0c:	push   esi
  41ad0d:	xor    DWORD PTR [ebx+0x51],0x27ce0df0
  41ad14:	pop    eax
  41ad15:	inc    edx
  41ad16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad17:	imul   ebp,DWORD PTR [edx+0x22120187],0xffffffb2
  41ad1e:	mov    cl,0x3e
  41ad20:	std    
  41ad21:	test   al,0xa3
  41ad23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad24:	dec    edx
  41ad25:	mov    al,0xa4
  41ad27:	dec    ebx
  41ad28:	pop    ecx
  41ad29:	mov    ds:0xe09ce18,al
  41ad2e:	pop    eax
  41ad2f:	add    al,0x4e
  41ad31:	xchg   ebx,eax
  41ad32:	dec    esi
  41ad33:	ss addr16 lock idiv ecx
  41ad38:	fcmovb st,st(0)
  41ad3a:	iret   
  41ad3b:	inc    ecx
  41ad3c:	jge    0x41ad1e
  41ad3e:	rcr    BYTE PTR [esi+0x42287e9c],cl
  41ad44:	hlt    
  41ad45:	push   eax
  41ad46:	xor    BYTE PTR cs:[ebx+0x1833e384],al
  41ad4d:	pop    ds
  41ad4e:	mov    ecx,0x6ae2a5d5
  41ad53:	and    al,0xb6
  41ad55:	jp     0x41adaa
  41ad57:	cld    
  41ad58:	jno    0x41ad7d
  41ad5a:	call   0x17bc:0xe5f1802e
  41ad61:	cld    
  41ad62:	dec    eax
  41ad63:	(bad)  
  41ad64:	icebp  
  41ad65:	sub    eax,0xdae20cd6
  41ad6a:	pop    ebx
  41ad6b:	pop    ebx
  41ad6c:	pop    esp
  41ad6d:	dec    eax
  41ad6e:	sar    BYTE PTR [ecx+0x4f1a6af2],0xf1
  41ad75:	lods   al,BYTE PTR ds:[esi]
  41ad76:	mov    DWORD PTR [ecx-0x634e1ecc],ebx
  41ad7c:	int    0x0
  41ad7e:	mov    dl,0x25
  41ad80:	sub    al,ch
  41ad82:	(bad)  
  41ad83:	pop    ss
  41ad84:	cli    
  41ad85:	out    0x20,al
  41ad87:	push   ds
  41ad88:	ja     0x41ad6f
  41ad8a:	daa    
  41ad8b:	adc    ch,bh
  41ad8d:	mov    ch,0x3e
  41ad8f:	(bad)  
  41ad90:	mov    cl,0x4f
  41ad92:	jne    0x41ad59
  41ad94:	jle    0x41ad30
  41ad96:	sub    DWORD PTR [esi-0x39a4ae90],0xc1404775
  41ada0:	xchg   DWORD PTR [eax+0x9cd7601],edi
  41ada6:	mov    eax,0xdc4a61e5
  41adab:	lods   al,BYTE PTR ds:[esi]
  41adac:	ss jns 0x41ae20
  41adaf:	imul   ecx,DWORD PTR [ecx-0x406bd175],0x6b0cc937
  41adb9:	sub    BYTE PTR [ebx],bl
  41adbb:	push   0xb5c9b630
  41adc0:	inc    edi
  41adc1:	jle    0x41ae09
  41adc3:	pop    edx
  41adc4:	mov    DWORD PTR [edx],esp
  41adc6:	sbb    DWORD PTR [ebp+0x7],edi
  41adc9:	ror    DWORD PTR [edi-0x876f904],cl
  41adcf:	pop    es
  41add0:	test   al,0xb0
  41add2:	mov    es,WORD PTR [ebp+0x17]
  41add5:	dec    eax
  41add6:	xchg   esp,eax
  41add7:	push   ecx
  41add8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41add9:	iret   
  41adda:	sub    DWORD PTR [ebx],esi
  41addc:	addr16 mov edx,0x3eebb7ae
  41ade2:	mov    bh,0x4
  41ade4:	test   al,0x86
  41ade6:	cli    
  41ade7:	rol    dh,1
  41ade9:	fwait
  41adea:	shl    ebx,1
  41adec:	shl    DWORD PTR [esi],0x63
  41adef:	sbb    DWORD PTR [ecx],ebp
  41adf1:	popf   
  41adf2:	sbb    DWORD PTR [eax+esi*1+0x3],ebp
  41adf6:	mov    dh,0x36
  41adf8:	ud1    ebp,esi
  41adfb:	xchg   ebx,eax
  41adfc:	es inc edx
  41adfe:	scas   al,BYTE PTR es:[edi]
  41adff:	sub    al,0x7b
  41ae01:	adc    al,0xb
  41ae03:	aam    0xc
  41ae05:	and    DWORD PTR ds:0xffdd567b,0x4ad41492
  41ae0f:	hlt    
  41ae10:	daa    
  41ae11:	adc    esp,esi
  41ae13:	inc    esi
  41ae14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae15:	pop    edx
  41ae16:	test   al,0xe0
  41ae18:	cmp    edi,DWORD PTR [eax]
  41ae1a:	add    eax,0x3923b3cd
  41ae1f:	mov    ah,0x9a
  41ae21:	and    al,BYTE PTR [esi]
  41ae23:	mov    edi,0xd5f5c488
  41ae28:	ins    BYTE PTR es:[edi],dx
  41ae29:	retf   
  41ae2a:	add    DWORD PTR [eax],edi
  41ae2c:	popf   
  41ae2d:	inc    al
  41ae2f:	or     ecx,ebp
  41ae31:	jae    0x41ae1c
  41ae33:	and    ecx,DWORD PTR cs:[edi+0x74c661f9]
  41ae3a:	(bad)  
  41ae3b:	jmp    0xa1aa:0x261a81b9
  41ae42:	rol    DWORD PTR [esi-0x770558d1],cl
  41ae48:	(bad)  
  41ae49:	jbe    0x41ae52
  41ae4b:	stos   DWORD PTR es:[edi],eax
  41ae4c:	pop    edx
  41ae4d:	xchg   esp,eax
  41ae4e:	inc    ebp
  41ae4f:	xchg   ebp,eax
  41ae50:	dec    ebp
  41ae51:	std    
  41ae52:	es jecxz 0x41ae34
  41ae55:	xor    al,0x5c
  41ae57:	shr    DWORD PTR [esi-0x4a],cl
  41ae5a:	repz adc cl,BYTE PTR [ebx-0x3ccb5896]
  41ae61:	cs test dh,bh
  41ae64:	pop    ecx
  41ae65:	out    dx,eax
  41ae66:	stos   BYTE PTR es:[edi],al
  41ae67:	(bad)  
  41ae68:	shl    bh,cl
  41ae6a:	mov    BYTE PTR [eax-0x71a32a90],bh
  41ae70:	repz bound esp,QWORD PTR ds:0x8b8f11c8
  41ae77:	inc    eax
  41ae78:	ror    DWORD PTR [eax+0x0],1
  41ae7b:	leave  
  41ae7c:	out    0xf1,al
  41ae7e:	out    dx,al
  41ae7f:	enter  0x8321,0x6
  41ae83:	in     eax,0x4b
  41ae85:	outs   dx,BYTE PTR ds:[esi]
  41ae86:	sahf   
  41ae87:	idiv   BYTE PTR [ebx]
  41ae89:	(bad)  
  41ae8a:	lods   eax,DWORD PTR ds:[esi]
  41ae8b:	xchg   ebx,eax
  41ae8c:	pop    ds
  41ae8d:	pop    ebp
  41ae8e:	idiv   ebx
  41ae90:	mov    dh,0xad
  41ae92:	mov    dh,0x93
  41ae94:	xchg   edi,eax
  41ae95:	or     al,0x6f
  41ae97:	sub    DWORD PTR [esp+edi*2],edi
  41ae9a:	xchg   edx,eax
  41ae9b:	or     BYTE PTR ss:[eax],ah
  41ae9e:	repz cs add dh,bl
  41aea2:	dec    ebx
  41aea3:	dec    ecx
  41aea4:	xor    esi,DWORD PTR ds:0x9a46ee33
  41aeaa:	loop   0x41ae5d
  41aeac:	aad    0xaa
  41aeae:	lods   eax,DWORD PTR ds:[esi]
  41aeaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aeb0:	ins    BYTE PTR es:[edi],dx
  41aeb1:	iret   
  41aeb2:	std    
  41aeb3:	sahf   
  41aeb4:	sub    esi,DWORD PTR [esi]
  41aeb6:	push   ebx
  41aeb7:	shl    DWORD PTR [edi-0x4e],1
  41aeba:	sub    ebp,DWORD PTR [edx+0x16590c80]
  41aec0:	push   ss
  41aec1:	or     ecx,edx
  41aec3:	mov    dl,0x7d
  41aec5:	nop
  41aec6:	mov    WORD PTR ds:0x19a3e680,gs
  41aecc:	xor    cl,BYTE PTR [edx+0x27]
  41aecf:	icebp  
  41aed0:	aaa    
  41aed1:	cmp    al,0x95
  41aed3:	rcl    BYTE PTR [ecx],0xf4
  41aed6:	outs   dx,BYTE PTR ds:[esi]
  41aed7:	cmp    BYTE PTR [edi],0xd1
  41aeda:	loopne 0x41ae61
  41aedc:	test   eax,0x1831bdaf
  41aee1:	les    esi,FWORD PTR [ecx+0x58c053ce]
  41aee7:	imul   edi,ecx,0x74
  41aeea:	test   BYTE PTR [ebx+eax*8+0x5c1d79f7],dl
  41aef1:	sahf   
  41aef2:	dec    ebx
  41aef3:	sbb    DWORD PTR [ebx],edx
  41aef5:	cwde   
  41aef6:	(bad)  
  41aef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aef9:	mov    ch,0x95
  41aefb:	jns    0x41af66
  41aefd:	mov    al,ds:0x24f19599
  41af02:	mov    ecx,DWORD PTR [esi-0x5a648b6d]
  41af08:	push   ebp
  41af09:	mov    ah,0x9a
  41af0b:	mov    ah,0x53
  41af0d:	fst    QWORD PTR ds:0x731f437e
  41af13:	retf   
  41af14:	push   edi
  41af15:	dec    edi
  41af16:	test   DWORD PTR [esi-0x6eed27d2],esi
  41af1c:	and    dh,cl
  41af1e:	test   eax,0x8352513b
  41af23:	and    DWORD PTR [ecx-0x28],eax
  41af26:	lds    edx,FWORD PTR [eax+ebx*8-0xa]
  41af2a:	mov    edx,0xef30cea3
  41af2f:	retf   
  41af30:	sub    esi,DWORD PTR [esi-0x5a3dab7b]
  41af36:	mov    ds:0xe866446d,eax
  41af3b:	(bad)  
  41af3c:	ror    BYTE PTR [esi+0x2],cl
  41af3f:	inc    edi
  41af40:	mov    BYTE PTR [esi-0x52],cl
  41af43:	leave  
  41af44:	or     ebx,eax
  41af46:	mov    ch,0x7b
  41af48:	inc    DWORD PTR [esi]
  41af4a:	fstp   TBYTE PTR [ebx+edx*2+0x30eaba5f]
  41af51:	fadd   QWORD PTR [edx-0x69a9b64f]
  41af57:	stos   BYTE PTR es:[edi],al
  41af58:	dec    esi
  41af59:	sti    
  41af5a:	dec    eax
  41af5b:	adc    eax,edi
  41af5d:	sti    
  41af5e:	(bad)  [esi]
  41af60:	mov    ebp,0xf6ab8c24
  41af65:	std    
  41af66:	fcompp 
  41af68:	pop    ebx
  41af69:	xor    BYTE PTR [eax+0x1364e5e1],cl
  41af6f:	jae    0x41af63
  41af71:	or     bh,BYTE PTR [ecx+edx*8-0x505a2314]
  41af78:	(bad)  
  41af79:	fwait
  41af7a:	in     al,dx
  41af7b:	std    
  41af7c:	test   dh,ch
  41af7e:	fsubr  st(7),st
  41af80:	pusha  
  41af81:	xor    bh,BYTE PTR [edi]
  41af83:	jne    0x41af25
  41af85:	or     al,0x3e
  41af87:	aad    0x10
  41af89:	dec    edi
  41af8a:	popf   
  41af8b:	adc    al,BYTE PTR [ebx]
  41af8d:	imul   DWORD PTR [edi]
  41af8f:	data16 xor BYTE PTR [edx-0x4869b279],bl
  41af96:	push   ebp
  41af97:	inc    esp
  41af98:	mov    esp,0xf019088c
  41af9d:	push   ebp
  41af9e:	xchg   DWORD PTR [edx-0x29],edx
  41afa1:	cwde   
  41afa2:	mov    ah,BYTE PTR [ebx]
  41afa4:	jp     0x41b015
  41afa6:	ror    BYTE PTR [edi+0x33],cl
  41afa9:	lods   eax,DWORD PTR ds:[esi]
  41afaa:	cdq    
  41afab:	and    al,0x4d
  41afad:	sub    eax,DWORD PTR [esi+0xe]
  41afb0:	retf   0xdfcd
  41afb3:	mov    eax,ds:0x66cbc3c3
  41afb8:	pop    edi
  41afb9:	test   eax,0x3dbe7254
  41afbe:	lahf   
  41afbf:	inc    ecx
  41afc0:	pop    ecx
  41afc1:	jge    0x41afac
  41afc3:	in     al,dx
  41afc4:	and    cl,BYTE PTR gs:[ebp+0x1649f9c4]
  41afcb:	sub    edi,ebx
  41afcd:	in     eax,0xf2
  41afcf:	ret    
  41afd0:	outs   dx,DWORD PTR ds:[esi]
  41afd1:	leave  
  41afd2:	ret    0x8769
  41afd5:	lock jae 0x41affc
  41afd8:	xlat   BYTE PTR ds:[ebx]
  41afd9:	dec    esp
  41afda:	imul   edx,DWORD PTR es:[ecx-0x5d],0xb6b987a0
  41afe2:	clc    
  41afe3:	sub    eax,0xc847e1fd
  41afe8:	int3   
  41afe9:	shl    BYTE PTR [esi+0x348fcdaf],0x12
  41aff0:	outs   dx,DWORD PTR ds:[esi]
  41aff1:	rol    BYTE PTR [edi+0x5a0edb48],1
  41aff7:	xor    al,0xdc
  41aff9:	fild   WORD PTR [ebp+0x4]
  41affc:	lock or BYTE PTR [ecx+edi*4-0x6079079b],al
  41b004:	adc    DWORD PTR [ebp+0x66eb8985],edi
  41b00a:	sub    bl,dl
  41b00c:	sbb    DWORD PTR [ebp+0x50],edi
  41b00f:	and    ebx,DWORD PTR [ebp-0x10de06ef]
  41b015:	in     al,dx
  41b016:	int    0xe4
  41b018:	sar    DWORD PTR [ebx-0x5d],cl
  41b01b:	ss mov esp,?
  41b01e:	and    eax,0x9bd8ad22
  41b023:	adc    BYTE PTR [ecx],dl
  41b025:	dec    edx
  41b026:	les    esi,FWORD PTR [esi+0x7f]
  41b029:	mov    dh,0xcf
  41b02b:	or     al,0x39
  41b02d:	cmp    ebp,edx
  41b02f:	aam    0xb8
  41b031:	cwde   
  41b032:	sub    al,0x4b
  41b034:	outs   dx,DWORD PTR ds:[esi]
  41b035:	fld    QWORD PTR [eax-0x32]
  41b038:	pop    esp
  41b039:	(bad)  
  41b03a:	das    
  41b03b:	out    0x63,al
  41b03d:	or     DWORD PTR [eax+0x11],ebx
  41b040:	jns    0x41b066
  41b042:	mov    eax,esi
  41b044:	cmp    DWORD PTR [ebx+0x6dbeff92],0x65a52203
  41b04e:	repnz inc ecx
  41b050:	mov    edx,ebp
  41b052:	nop
  41b053:	adc    eax,0xb804b697
  41b058:	out    0x9d,eax
  41b05a:	repz dec ebx
  41b05c:	loope  0x41b05c
  41b05e:	ss pop ds
  41b060:	xchg   esi,eax
  41b061:	loopne 0x41b087
  41b063:	ret    0x4855
  41b066:	jge    0x41affe
  41b068:	fistp  DWORD PTR [esi-0x615e5ebf]
  41b06e:	dec    ebp
  41b06f:	div    BYTE PTR [edi+0x6d]
  41b072:	dec    edi
  41b073:	in     al,dx
  41b074:	sar    eax,1
  41b076:	mov    eax,fs
  41b078:	xchg   esp,eax
  41b079:	pop    esi
  41b07a:	push   0x754a6f7d
  41b07f:	pop    eax
  41b080:	inc    esp
  41b081:	jne    0x41b0e7
  41b083:	xchg   edx,eax
  41b084:	ja     0x41b0e1
  41b086:	sbb    al,0xef
  41b088:	cwde   
  41b089:	outs   dx,BYTE PTR ds:[esi]
  41b08a:	mov    al,ds:0x2d2ade94
  41b08f:	mov    DWORD PTR [esi-0x36],eax
  41b092:	in     eax,dx
  41b093:	dec    esp
  41b094:	mov    DWORD PTR [edi],eax
  41b096:	mov    eax,DWORD PTR [ebx-0x3d]
  41b099:	dec    ebx
  41b09a:	jecxz  0x41b11b
  41b09c:	adc    eax,0x5ca880d7
  41b0a1:	das    
  41b0a2:	mov    edx,0xdc6691f
  41b0a7:	(bad)  
  41b0a8:	pop    ds
  41b0a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0aa:	mov    ah,0x41
  41b0ac:	scas   eax,DWORD PTR es:[edi]
  41b0ad:	shl    BYTE PTR [esi+ecx*8-0x1fe80ad1],0xcd
  41b0b5:	out    0x1c,al
  41b0b7:	hlt    
  41b0b8:	aad    0x5f
  41b0ba:	push   edi
  41b0bb:	mov    ebx,0xe89a0fdb
  41b0c0:	pop    esp
  41b0c1:	push   eax
  41b0c2:	fwait
  41b0c3:	mov    edx,0x9a4e159a
  41b0c8:	imul   ecx,DWORD PTR [edx+ecx*8],0xf031d00e
  41b0cf:	or     al,0x8a
  41b0d1:	mov    bh,ah
  41b0d3:	popf   
  41b0d4:	into   
  41b0d5:	cwde   
  41b0d6:	jmp    0x2095:0xff0a4bb3
  41b0dd:	push   ss
  41b0de:	dec    esi
  41b0df:	inc    edx
  41b0e0:	pusha  
  41b0e1:	dec    BYTE PTR [edi-0x10]
  41b0e4:	and    DWORD PTR [edi],ebp
  41b0e6:	icebp  
  41b0e7:	bound  ebx,QWORD PTR [esi]
  41b0e9:	pusha  
  41b0ea:	cwde   
  41b0eb:	or     BYTE PTR [edi],dh
  41b0ed:	idiv   BYTE PTR [ebx-0x56]
  41b0f0:	xor    dl,BYTE PTR [edi+ebx*2+0x46bb485f]
  41b0f7:	adc    bl,BYTE PTR [ecx]
  41b0f9:	ret    
  41b0fa:	inc    esi
  41b0fb:	aam    0x96
  41b0fd:	xchg   esi,eax
  41b0fe:	test   al,0x24
  41b100:	int    0x21
  41b102:	add    edi,DWORD PTR [esi-0x21e66c8b]
  41b108:	lock xlat BYTE PTR ds:[ebx]
  41b10a:	hlt    
  41b10b:	nop
  41b10c:	and    cl,BYTE PTR [ebx-0x3d]
  41b10f:	sbb    eax,0x1170e56c
  41b114:	(bad)  
  41b115:	push   ebp
  41b116:	pop    edi
  41b117:	cmc    
  41b118:	(bad)  
  41b119:	cli    
  41b11a:	je     0x41b160
  41b11c:	push   edx
  41b11d:	test   eax,0x70738320
  41b122:	mov    ch,0xbd
  41b124:	ret    
  41b125:	ficomp DWORD PTR [eax+edx*1+0x11e0e8be]
  41b12c:	fwait
  41b12d:	push   edi
  41b12e:	inc    edx
  41b12f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b130:	outs   dx,WORD PTR ds:[esi]
  41b132:	pusha  
  41b133:	xor    BYTE PTR [ecx-0x16309cb2],0x9f
  41b13a:	gs mov dh,al
  41b13d:	ins    BYTE PTR es:[edi],dx
  41b13e:	mov    al,ds:0x1a5ff102
  41b143:	jns    0x41b0d9
  41b145:	and    eax,DWORD PTR [eax-0x45]
  41b148:	pop    ebx
  41b149:	push   ds
  41b14a:	and    al,0x6
  41b14c:	inc    esp
  41b14d:	outs   dx,DWORD PTR ds:[esi]
  41b14e:	addr16 iret 
  41b150:	xor    ch,BYTE PTR [edi]
  41b152:	cmp    bl,al
  41b154:	lods   eax,DWORD PTR ds:[esi]
  41b155:	aas    
  41b156:	mov    dx,0x827
  41b15a:	push   edx
  41b15b:	ficomp WORD PTR [ebx-0x29]
  41b15e:	mov    ds:0x172f2355,eax
  41b163:	mov    edx,gs
  41b165:	mov    edi,0x7648b4c
  41b16a:	pop    ss
  41b16b:	pop    eax
  41b16c:	popf   
  41b16d:	int    0xdc
  41b16f:	retf   
  41b170:	cmp    al,0x8a
  41b172:	popa   
  41b173:	mov    ebx,0xbf25df47
  41b178:	push   esi
  41b179:	xchg   edi,eax
  41b17a:	popf   
  41b17b:	pop    ebp
  41b17c:	pop    ds
  41b17d:	ins    DWORD PTR es:[edi],dx
  41b17e:	jno    0x41b183
  41b180:	sub    ch,BYTE PTR [edx+0x2b]
  41b183:	xor    al,bh
  41b185:	mov    eax,DWORD PTR cs:[edi+0x78978d0e]
  41b18c:	out    dx,al
  41b18d:	push   ecx
  41b18e:	out    dx,eax
  41b18f:	xlat   BYTE PTR ds:[ebx]
  41b190:	pop    ss
  41b191:	bound  eax,QWORD PTR [ebx-0x651472f0]
  41b197:	mov    ?,edi
  41b199:	inc    esi
  41b19a:	jae    0x41b162
  41b19c:	push   es
  41b19d:	jl     0x41b209
  41b19f:	mov    al,ds:0x26dd7602
  41b1a4:	out    0xb6,eax
  41b1a6:	or     ax,0x2848
  41b1aa:	inc    eax
  41b1ab:	retf   
  41b1ac:	jbe    0x41b1a3
  41b1ae:	inc    ebx
  41b1af:	push   ebp
  41b1b0:	fnstcw WORD PTR [edi]
  41b1b2:	aas    
  41b1b3:	(bad)  
  41b1b4:	cmp    BYTE PTR [ecx-0x3ce1dc9f],ch
  41b1ba:	add    ah,ch
  41b1bc:	mov    ah,0xfc
  41b1be:	inc    esi
  41b1bf:	sub    eax,0xbbf6a488
  41b1c4:	sbb    DWORD PTR [ebp-0x3c],esi
  41b1c7:	adc    DWORD PTR [ebp+eiz*8-0x4183ce04],edi
  41b1ce:	imul   ebx,DWORD PTR [ebx-0x5cf52844],0xffffffde
  41b1d5:	push   0xec47aa4a
  41b1da:	stc    
  41b1db:	xor    al,bh
  41b1dd:	mov    al,BYTE PTR [eax+0x446f0baf]
  41b1e3:	dec    esi
  41b1e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1e5:	xchg   ebx,eax
  41b1e6:	xor    eax,0xd4eb2f3a
  41b1eb:	imul   esi,esi,0x42d2d02b
  41b1f1:	cmp    eax,0x2c42a315
  41b1f6:	add    al,0x42
  41b1f8:	call   0xb40f7a83
  41b1fd:	(bad)  
  41b1fe:	sbb    al,0xfe
  41b200:	mov    cl,0x59
  41b202:	ins    DWORD PTR es:[edi],dx
  41b203:	dec    edi
  41b204:	mov    esi,0x48e11116
  41b209:	pop    esp
  41b20a:	in     eax,0xda
  41b20c:	mov    edx,0x5465b481
  41b211:	stos   DWORD PTR es:[edi],eax
  41b212:	scas   al,BYTE PTR es:[edi]
  41b213:	lock sub dh,BYTE PTR [edx]
  41b216:	jbe    0x41b1dd
  41b218:	retf   0x5e94
  41b21b:	xchg   esp,eax
  41b21c:	add    al,0xf4
  41b21e:	aas    
  41b21f:	lds    esp,FWORD PTR [ebx+0x64d6836c]
  41b225:	sbb    DWORD PTR [esi+0x6d8b2a8],0xcd1f3cc0
  41b22f:	das    
  41b230:	cmp    bh,BYTE PTR [esi+0x702d1b6a]
  41b236:	rcl    DWORD PTR [ebp-0x74],0xd0
  41b23a:	add    DWORD PTR [esi],ebx
  41b23c:	in     al,0x51
  41b23e:	adc    al,0xb
  41b240:	xchg   edx,eax
  41b241:	bnd jp 0x41b210
  41b244:	mov    eax,0x8940e68c
  41b249:	js     0x41b1ef
  41b24b:	mov    edx,0x41cffac7
  41b250:	addr16 cmp eax,0x8d0ef93f
  41b256:	adc    DWORD PTR [ecx],ecx
  41b258:	dec    ebx
  41b259:	in     eax,0x51
  41b25b:	jne    0x41b2d1
  41b25d:	lea    esi,[edi+0x25e2e8d8]
  41b263:	or     al,0xda
  41b265:	push   0x3340a904
  41b26a:	aas    
  41b26b:	shl    BYTE PTR [eax+0x3cdb9261],0x9
  41b272:	retf   
  41b273:	(bad)  
  41b274:	push   esi
  41b275:	fisubr WORD PTR [edx]
  41b277:	int3   
  41b278:	jmp    FWORD PTR [eax-0x18f470bd]
  41b27e:	jmp    0x69d1:0xb04b3d9f
  41b285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b286:	mov    esi,0x1b6dd210
  41b28b:	lock test BYTE PTR [eax],ch
  41b28e:	daa    
  41b28f:	mov    eax,0x216a6d1c
  41b294:	mov    ch,0xc3
  41b296:	and    edx,DWORD PTR [edi]
  41b298:	ss push eax
  41b29a:	and    eax,0xb2b8f038
  41b29f:	inc    ebx
  41b2a0:	arpl   WORD PTR [edx+ecx*2-0x27],bp
  41b2a4:	shl    dh,1
  41b2a6:	push   esp
  41b2a7:	sbb    al,0xb0
  41b2a9:	add    al,bh
  41b2ab:	push   0x4
  41b2ad:	aam    0xbc
  41b2af:	xor    eax,0x3bf0a82d
  41b2b4:	pop    ecx
  41b2b5:	jo     0x41b26b
  41b2b7:	ins    BYTE PTR es:[edi],dx
  41b2b8:	or     esi,ecx
  41b2ba:	add    esp,esi
  41b2bc:	jnp    0x41b24b
  41b2be:	mov    ds:0x465686a0,al
  41b2c3:	inc    ecx
  41b2c4:	adc    DWORD PTR [ebx+0x4a],ecx
  41b2c7:	xchg   ebx,eax
  41b2c8:	dec    ecx
  41b2c9:	pop    ds
  41b2ca:	dec    edx
  41b2cb:	cmp    dh,bh
  41b2cd:	lods   al,BYTE PTR ds:[esi]
  41b2ce:	imul   edx,DWORD PTR [edx-0x43],0xfd7c17f2
  41b2d5:	in     al,0xc2
  41b2d7:	repnz mov ds:0x7c6848a7,eax
  41b2dd:	dec    ebp
  41b2de:	xor    DWORD PTR [edx],ecx
  41b2e0:	ret    
  41b2e1:	ins    DWORD PTR es:[edi],dx
  41b2e2:	aas    
  41b2e3:	fadd   DWORD PTR [ecx]
  41b2e5:	dec    ebx
  41b2e6:	fwait
  41b2e7:	xor    al,0xa5
  41b2e9:	push   ss
  41b2ea:	aaa    
  41b2eb:	aad    0x79
  41b2ed:	in     al,0xb6
  41b2ef:	aam    0x32
  41b2f1:	pop    edx
  41b2f2:	push   ss
  41b2f3:	icebp  
  41b2f4:	mov    dl,0x26
  41b2f6:	fnstenv [edi+edx*8]
  41b2f9:	ror    BYTE PTR [edx+0x1ccb6985],0x7
  41b300:	adc    ecx,ecx
  41b302:	in     eax,dx
  41b303:	neg    al
  41b305:	ins    BYTE PTR es:[edi],dx
  41b306:	pop    edi
  41b307:	mov    ah,0x48
  41b309:	mov    edi,0x48e52aa5
  41b30e:	cdq    
  41b30f:	shl    bx,0x22
  41b313:	stos   BYTE PTR es:[edi],al
  41b314:	aaa    
  41b315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b316:	cmp    al,dh
  41b318:	ins    DWORD PTR es:[edi],dx
  41b319:	stos   BYTE PTR es:[edi],al
  41b31a:	dec    bh
  41b31c:	in     eax,0xd4
  41b31e:	adc    al,0xb1
  41b320:	out    0xcc,eax
  41b322:	push   eax
  41b323:	adc    BYTE PTR cs:[edx],dl
  41b326:	inc    eax
  41b327:	push   es
  41b328:	push   ss
  41b329:	jns    0x41b378
  41b32b:	outs   dx,BYTE PTR ds:[esi]
  41b32c:	popa   
  41b32d:	jecxz  0x41b353
  41b32f:	leave  
  41b330:	mov    bh,0x7c
  41b332:	lea    edx,[ebx]
  41b334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b335:	jae    0x41b324
  41b337:	arpl   WORD PTR [edi],si
  41b339:	add    eax,0x55752df3
  41b33e:	shr    BYTE PTR [edx-0x79],0xbe
  41b342:	in     al,0x42
  41b344:	dec    al
  41b346:	cld    
  41b347:	fild   WORD PTR [esi]
  41b349:	outs   dx,DWORD PTR ds:[esi]
  41b34a:	and    eax,0x4448cbf7
  41b34f:	iret   
  41b350:	sub    DWORD PTR ds:0x765ac0f5,edi
  41b356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b357:	cmp    ch,BYTE PTR [edi+0x5f]
  41b35a:	sahf   
  41b35b:	and    al,ah
  41b35d:	mov    ah,0xb9
  41b35f:	jge    0x41b333
  41b361:	(bad)  
  41b362:	push   ebx
  41b363:	(bad)  
  41b364:	jg     0x41b30f
  41b366:	pusha  
  41b367:	add    al,0xd0
  41b369:	jbe    0x41b3b7
  41b36b:	test   BYTE PTR [ebp+0x3],bh
  41b36e:	sti    
  41b36f:	ds sbb al,0x20
  41b372:	out    0x67,al
  41b374:	mov    ecx,0xa702b0ba
  41b379:	and    ecx,ecx
  41b37b:	inc    eax
  41b37c:	popf   
  41b37d:	cmp    bh,BYTE PTR [ecx]
  41b37f:	and    bl,BYTE PTR [ecx]
  41b381:	fnstcw WORD PTR [ecx+0x45]
  41b384:	mov    ebx,0x2758786a
  41b389:	inc    eax
  41b38a:	lods   al,BYTE PTR ds:[esi]
  41b38b:	xor    bl,BYTE PTR [ecx]
  41b38d:	cmp    al,0x1e
  41b38f:	stos   BYTE PTR es:[edi],al
  41b390:	(bad)  
  41b391:	enter  0xf839,0xa1
  41b395:	int3   
  41b396:	push   esi
  41b397:	(bad)  
  41b398:	es int 0x29
  41b39b:	hlt    
  41b39c:	fmul   DWORD PTR [ebx+0x1fb4aebe]
  41b3a2:	jp     0x41b3a3
  41b3a4:	test   eax,0x4bea2be3
  41b3a9:	das    
  41b3aa:	pop    ds
  41b3ab:	(bad)  
  41b3ad:	popa   
  41b3ae:	push   0xec97d0dc
  41b3b3:	mov    ah,0xa9
  41b3b5:	and    DWORD PTR [ecx+ebx*2+0x62],edi
  41b3b9:	scas   al,BYTE PTR es:[edi]
  41b3ba:	mov    edx,0x5d4ebd62
  41b3bf:	mov    ds:0xd6250577,al
  41b3c4:	dec    esi
  41b3c5:	arpl   WORD PTR [edi-0xfda581a],bx
  41b3cb:	(bad)  
  41b3cc:	adc    al,0xb0
  41b3ce:	(bad)  
  41b3cf:	fsubr  DWORD PTR [ebx-0x17]
  41b3d2:	or     edx,DWORD PTR [edi+0x37b2c71b]
  41b3d8:	nop
  41b3d9:	repz test ebx,esp
  41b3dc:	push   eax
  41b3dd:	xchg   DWORD PTR [ecx],edx
  41b3df:	ret    0x27be
  41b3e2:	add    DWORD PTR [edx+0x17],edi
  41b3e5:	dec    ebp
  41b3e6:	fild   DWORD PTR [eax+0x67726e41]
  41b3ec:	jae    0x41b41e
  41b3ee:	add    al,0xd1
  41b3f0:	fwait
  41b3f1:	pop    es
  41b3f2:	jne    0x41b3d4
  41b3f4:	pop    eax
  41b3f5:	dec    esi
  41b3f6:	mov    al,bl
  41b3f8:	cdq    
  41b3f9:	mov    eax,DWORD PTR [esi-0x756af117]
  41b3ff:	jnp    0x41b423
  41b401:	inc    edx
  41b402:	imul   ebp,DWORD PTR [edx+0x2c12a7e7],0x75
  41b409:	xor    al,0x1b
  41b40c:	mov    esp,0x1bf8b588
  41b411:	jmp    0x41b477
  41b413:	pop    es
  41b414:	xor    esp,ebx
  41b416:	pop    ebx
  41b417:	mov    eax,ds:0x2b6cf2c5
  41b41c:	pop    edi
  41b41d:	fldln2 
  41b41f:	stos   BYTE PTR es:[edi],al
  41b420:	adc    esp,esi
  41b422:	push   ss
  41b423:	mov    BYTE PTR [ebx-0x4ddbe40a],bl
  41b429:	mov    eax,ds:0xf246443b
  41b42e:	or     eax,0xc164b361
  41b433:	lds    eax,FWORD PTR [eax]
  41b435:	push   ss
  41b436:	rcl    ebp,cl
  41b438:	test   DWORD PTR [edi+eax*1+0x57],0xe130e005
  41b440:	mov    ch,dl
  41b442:	stos   BYTE PTR es:[edi],al
  41b443:	(bad)  
  41b444:	clc    
  41b445:	push   0x369bfe97
  41b44a:	fdiv   DWORD PTR [eax+0x2ac8bfb4]
  41b450:	imul   edx,DWORD PTR [edi-0x4f8ad0bd],0x6b839721
  41b45a:	cwde   
  41b45b:	retf   0xfed9
  41b45e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b45f:	das    
  41b460:	loop   0x41b429
  41b462:	mov    dl,0xfe
  41b464:	jle    0x41b4e3
  41b466:	outs   dx,BYTE PTR ds:[esi]
  41b467:	add    BYTE PTR [ecx+eiz*4],bl
  41b46a:	out    dx,al
  41b46b:	xchg   DWORD PTR [ebp+0x1f],ecx
  41b46e:	sbb    ch,dl
  41b470:	repz jecxz 0x41b4aa
  41b473:	mov    BYTE PTR [ebx-0x9],cl
  41b476:	aad    0xa9
  41b478:	ins    BYTE PTR es:[edi],dx
  41b479:	mov    ah,dh
  41b47b:	leave  
  41b47c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b47d:	clc    
  41b47e:	mov    dl,BYTE PTR [esi-0x22]
  41b481:	sub    al,0x8a
  41b483:	clc    
  41b484:	popa   
  41b485:	jae    0x41b4b9
  41b487:	inc    ebx
  41b488:	pop    ebx
  41b489:	mov    esp,DWORD PTR [ecx-0xabb7f6a]
  41b48f:	mov    eax,ds:0x7af56aa6
  41b494:	mov    dh,0x16
  41b496:	pop    esp
  41b497:	mov    ecx,0x8c4f033e
  41b49c:	and    dh,cl
  41b49e:	xchg   ecx,eax
  41b49f:	sub    eax,0x54a6960a
  41b4a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4a5:	jbe    0x41b4c2
  41b4a7:	add    al,0x44
  41b4a9:	sti    
  41b4aa:	mov    fs,WORD PTR [ecx]
  41b4ac:	inc    esp
  41b4ad:	push   es
  41b4ae:	cli    
  41b4af:	mov    ?,WORD PTR [eax]
  41b4b1:	ins    BYTE PTR es:[edi],dx
  41b4b2:	adc    esp,edi
  41b4b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4b5:	iret   
  41b4b6:	jp     0x41b4c8
  41b4b8:	sti    
  41b4b9:	and    al,0x3b
  41b4bb:	sub    bh,dh
  41b4bd:	cwde   
  41b4be:	pop    esp
  41b4bf:	mov    DWORD PTR [esi],ebx
  41b4c1:	sbb    al,0x8b
  41b4c3:	sub    ah,0x81
  41b4c6:	dec    ebp
  41b4c7:	push   eax
  41b4c8:	add    BYTE PTR [eax-0x11],bh
  41b4cb:	dec    edx
  41b4cc:	popf   
  41b4cd:	daa    
  41b4ce:	push   edx
  41b4cf:	pop    ds
  41b4d0:	or     eax,0xdf7374b2
  41b4d5:	push   ebp
  41b4d6:	jl     0x41b52c
  41b4d8:	ja     0x41b46b
  41b4da:	mov    eax,ds:0xffd101b9
  41b4df:	(bad)  
  41b4e1:	test   eax,0xe7948d63
  41b4e6:	mov    WORD PTR [edi+esi*1-0x394a5d1b],ss
  41b4ed:	test   BYTE PTR [ecx],ch
  41b4ef:	jmp    0x1cdb:0xe7b89487
  41b4f6:	cmp    dh,BYTE PTR [edx+0x2bd6dc95]
  41b4fc:	mov    bh,0x51
  41b4fe:	add    BYTE PTR [ecx-0x1e9c8f4c],cl
  41b504:	ret    0x1463
  41b507:	cmovae esi,DWORD PTR [edi-0x4ed6cd7f]
  41b50e:	add    dh,ah
  41b510:	shr    DWORD PTR [edx-0x46],cl
  41b513:	mov    ebx,0xa2df9b0a
  41b518:	call   0x9cb901f6
  41b51d:	pop    edx
  41b51e:	push   cs
  41b51f:	lds    esi,FWORD PTR [eax-0x6b]
  41b522:	cmc    
  41b523:	loop   0x41b4f7
  41b525:	outs   dx,BYTE PTR ds:[esi]
  41b526:	xor    cl,BYTE PTR [eax+0x7851cba0]
  41b52c:	das    
  41b52d:	push   ecx
  41b52e:	cld    
  41b52f:	je     0x41b59d
  41b531:	pop    edx
  41b532:	sub    esi,DWORD PTR [ebx+0xb]
  41b535:	neg    DWORD PTR ds:0x4220f47a
  41b53b:	ss push edx
  41b53d:	out    0xa9,al
  41b53f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b540:	ret    0x44b8
  41b543:	icebp  
  41b544:	or     BYTE PTR [edi-0x70135f4e],cl
  41b54a:	ror    esi,0x85
  41b54d:	js     0x41b53f
  41b54f:	push   ebx
  41b550:	enter  0x8393,0x5b
  41b554:	fnstsw WORD PTR [ebx-0x492623a4]
  41b55a:	pop    edi
  41b55b:	xchg   si,ax
  41b55d:	pop    ebx
  41b55e:	push   edi
  41b55f:	repnz push 0x5a743eeb
  41b565:	xchg   DWORD PTR [edi-0x34],ecx
  41b568:	mov    al,0x13
  41b56a:	mov    ebx,0xcde1c29b
  41b56f:	jae    0x41b557
  41b571:	jge    0x41b567
  41b573:	inc    edi
  41b574:	jmp    DWORD PTR [edi]
  41b576:	mov    edi,0x8659f480
  41b57b:	shl    dh,0x15
  41b57e:	sbb    esi,ecx
  41b580:	mov    bh,0x27
  41b582:	popf   
  41b583:	mov    al,ds:0xa6740f6a
  41b588:	sbb    DWORD PTR [ecx-0x4f],ebp
  41b58b:	push   ebx
  41b58c:	mov    bh,0x57
  41b58e:	sub    bh,BYTE PTR [edi+0x7f701a10]
  41b594:	ins    DWORD PTR es:[edi],dx
  41b595:	add    esi,DWORD PTR [ebp*1-0x1b65ac7]
  41b59c:	jne    0x41b536
  41b59e:	les    esi,FWORD PTR ds:0xb54c04c0
  41b5a4:	mov    al,ds:0x839a8658
  41b5a9:	xor    BYTE PTR [esi+eiz*1],dh
  41b5ac:	mov    BYTE PTR [edi],dh
  41b5ae:	mov    DWORD PTR [edx+0x70],ebp
  41b5b1:	add    eax,0x36feadf8
  41b5b6:	cs mov esi,0xd2be354e
  41b5bc:	adc    DWORD PTR [ecx-0x7b9fc0e4],ecx
  41b5c2:	add    al,0xea
  41b5c4:	dec    ebp
  41b5c5:	mov    edx,0x77dc5cae
  41b5ca:	ret    0x8322
  41b5cd:	adc    al,0x6
  41b5cf:	dec    edx
  41b5d0:	out    0x44,eax
  41b5d2:	xor    eax,0x4eaf0913
  41b5d7:	nop
  41b5d8:	push   edi
  41b5d9:	push   edx
  41b5da:	jno    0x41b642
  41b5dc:	mov    esp,0x99818040
  41b5e1:	and    DWORD PTR [ebp-0x4d],0xffffffc4
  41b5e5:	int3   
  41b5e6:	aaa    
  41b5e7:	bound  ebx,QWORD PTR [edx]
  41b5e9:	jmp    0x41b60c
  41b5eb:	dec    ebp
  41b5ec:	leave  
  41b5ed:	lea    ebx,[edi-0x6b]
  41b5f0:	fcom   QWORD PTR [edx]
  41b5f2:	adc    BYTE PTR [ebx-0x35],ah
  41b5f5:	sbb    edi,edx
  41b5f7:	(bad)  
  41b5f8:	cdq    
  41b5f9:	loope  0x41b651
  41b5fb:	nop
  41b5fc:	push   cs
  41b5fd:	or     eax,0x5addb115
  41b602:	lahf   
  41b603:	in     al,0xbd
  41b605:	(bad)  
  41b606:	(bad)  
  41b607:	mov    ds:0x5bce3aed,eax
  41b60c:	lock inc eax
  41b60e:	sub    ecx,DWORD PTR [ebx-0x5d]
  41b611:	inc    edx
  41b612:	fiadd  DWORD PTR [esi]
  41b614:	pop    di
  41b616:	hlt    
  41b617:	mov    BYTE PTR ds:0x2b60b655,ch
  41b61d:	sub    al,BYTE PTR [edx]
  41b61f:	push   0xffffffb7
  41b621:	and    bh,BYTE PTR [ebp-0x5fe1f758]
  41b627:	mov    edi,DWORD PTR [ecx+0x2]
  41b62a:	push   ds
  41b62b:	pop    edi
  41b62c:	ins    BYTE PTR es:[edi],dx
  41b62d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b62e:	(bad)  
  41b62f:	loope  0x41b678
  41b631:	shl    dl,cl
  41b633:	daa    
  41b634:	arpl   WORD PTR gs:[ebp-0x138d07b5],cx
  41b63b:	dec    ebx
  41b63c:	inc    edi
  41b63d:	cmp    BYTE PTR [esi+edx*1-0x74cc806d],dl
  41b644:	push   ebp
  41b645:	mov    al,0x81
  41b647:	ror    ebp,0xeb
  41b64a:	inc    edx
  41b64b:	add    dh,BYTE PTR [ebx]
  41b64d:	retf   0x4d89
  41b650:	mov    al,0x8b
  41b652:	dec    ebp
  41b653:	or     BYTE PTR [ebx-0x30fc4bab],cl
  41b659:	and    ecx,edx
  41b65b:	mov    DWORD PTR [ebp-0x4c],ecx
  41b65e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b661:	mov    edx,DWORD PTR [ebp-0x48]
  41b664:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b66b:	mov    DWORD PTR [ebp-0x48],ecx
  41b66e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b671:	mov    edx,0xfa5e1528
  41b676:	sub    edx,ecx
  41b678:	add    edx,DWORD PTR [ebp-0x44]
  41b67b:	mov    DWORD PTR [ebp-0x44],edx
  41b67e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b681:	xor    ecx,eax
  41b683:	add    ecx,esi
  41b685:	jne    0x414b6f
  41b68b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b68e:	xor    ecx,eax
  41b690:	mov    eax,DWORD PTR [ebp+0x10]
  41b693:	add    ecx,esi
  41b695:	mov    DWORD PTR [eax],ecx
  41b697:	pop    edi
  41b698:	pop    esi
  41b699:	pop    ebx
  41b69a:	leave  
  41b69b:	ret    0xc
  41b69e:	push   ebp
  41b69f:	mov    ebp,esp
  41b6a1:	sub    esp,0x78
  41b6a4:	not    DWORD PTR ds:0x4291f7
  41b6aa:	push   esi
  41b6ab:	sub    eax,ecx
  41b6ad:	push   edi
  41b6ae:	sub    eax,esi
  41b6b0:	mov    eax,ds:0x42830b
  41b6b5:	mov    DWORD PTR [ebp-0x24],eax
  41b6b8:	mov    eax,ds:0x42842b
  41b6bd:	inc    ecx
  41b6be:	mov    DWORD PTR [ebp-0x30],eax
  41b6c1:	or     DWORD PTR ds:0x42919f,edi
  41b6c7:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  41b6ce:	movzx  edi,BYTE PTR ds:0x42918f
  41b6d5:	adc    DWORD PTR ds:0x42914b,edi
  41b6db:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b6e2:	adc    DWORD PTR ds:0x42918f,edx
  41b6e8:	mov    eax,DWORD PTR [ebp-0x10]
  41b6eb:	add    DWORD PTR ds:0x4291f3,ecx
  41b6f1:	mov    ecx,DWORD PTR [ebp-0x10]
  41b6f4:	adc    DWORD PTR ds:0x42915f,0x287e
  41b6fe:	sub    eax,ecx
  41b700:	adc    esi,esi
  41b702:	mov    DWORD PTR [ebp-0x10],eax
  41b705:	xor    DWORD PTR [ebp-0x10],0xf89cb5a1
  41b70c:	xor    DWORD PTR ds:0x4291ab,0x51ed
  41b716:	mov    eax,DWORD PTR [ebp-0x18]
  41b719:	and    DWORD PTR ds:0x4291a3,0x0
  41b723:	mov    edi,DWORD PTR ds:0x4291a3
  41b729:	inc    edi
  41b72a:	mov    DWORD PTR ds:0x4291a3,edi
  41b730:	cmp    DWORD PTR ds:0x4291a3,0x1b
  41b737:	jle    0x41b760
  41b73d:	jmp    0x41b753
  41b742:	push   0x4280d6
  41b747:	push   DWORD PTR [ebp-0x18]
  41b74a:	push   DWORD PTR [ebp-0x14]
  41b74d:	call   DWORD PTR ds:0x42a67f
  41b753:	cmp    DWORD PTR ds:0x4291a3,0x12
  41b75a:	jb     0x41b723
  41b760:	mov    ecx,DWORD PTR [ebp-0x18]
  41b763:	sub    eax,ecx
  41b765:	mov    DWORD PTR [ebp-0x18],eax
  41b768:	or     DWORD PTR [ebp-0x18],0xf89f05a1
  41b76f:	mov    eax,DWORD PTR [ebp-0xc]
  41b772:	and    DWORD PTR ds:0x42919f,0x1b88
  41b77c:	mov    ecx,DWORD PTR [ebp-0xc]
  41b77f:	sub    eax,ecx
  41b781:	and    DWORD PTR ds:0x429173,0x0
  41b78b:	mov    ecx,DWORD PTR ds:0x429173
  41b791:	inc    ecx
  41b792:	mov    DWORD PTR ds:0x429173,ecx
  41b798:	cmp    DWORD PTR ds:0x429173,0x1b
  41b79f:	jg     0x41b7c2
  41b7a5:	jmp    0x41b7b5
  41b7aa:	push   0x3a78
  41b7af:	call   DWORD PTR ds:0x42a683
  41b7b5:	cmp    DWORD PTR ds:0x429173,0x15
  41b7bc:	jb     0x41b78b
  41b7c2:	mov    DWORD PTR [ebp-0xc],eax
  41b7c5:	xor    DWORD PTR ds:0x4291a7,0x3902
  41b7cf:	or     DWORD PTR [ebp-0xc],0xf89c85e1
  41b7d6:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7d9:	and    DWORD PTR ds:0x4291f7,0x5581
  41b7e3:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b7e6:	and    DWORD PTR ds:0x42914b,0x0
  41b7f0:	mov    esi,DWORD PTR ds:0x42914b
  41b7f6:	inc    esi
  41b7f7:	mov    DWORD PTR ds:0x42914b,esi
  41b7fd:	cmp    DWORD PTR ds:0x42914b,0xc
  41b804:	jg     0x41b848
  41b80a:	jmp    0x41b821
  41b80f:	push   0x428010
  41b814:	push   0x0
  41b816:	push   0x6059
  41b81b:	call   DWORD PTR ds:0x42a687
  41b821:	cmp    DWORD PTR ds:0x42914b,0xb
  41b828:	jne    0x41b83b
  41b82e:	mov    esi,DWORD PTR ds:0x42914b
  41b834:	inc    esi
  41b835:	mov    DWORD PTR ds:0x42914b,esi
  41b83b:	cmp    DWORD PTR ds:0x42914b,0x13
  41b842:	jb     0x41b7f0
  41b848:	sub    eax,ecx
  41b84a:	mov    DWORD PTR ds:0x4291e7,0x17
  41b854:	cmp    DWORD PTR ds:0x4291e7,0x0
  41b85b:	je     0x41b88b
  41b861:	cmp    DWORD PTR ds:0x4291e7,0x22
  41b868:	jbe    0x41b88b
  41b86e:	jmp    0x41b879
  41b873:	call   DWORD PTR ds:0x42a68b
  41b879:	mov    edi,DWORD PTR ds:0x4291e7
  41b87f:	dec    edi
  41b880:	mov    DWORD PTR ds:0x4291e7,edi
  41b886:	jmp    0x41b854
  41b88b:	mov    DWORD PTR [ebp-0x1c],eax
  41b88e:	or     DWORD PTR [ebp-0x1c],0xf89c8581
  41b895:	add    eax,eax
  41b897:	mov    eax,DWORD PTR [ebp-0x20]
  41b89a:	mov    ecx,DWORD PTR [ebp-0x20]
  41b89d:	sub    eax,ecx
  41b89f:	and    DWORD PTR ds:0x4291b3,0x0
  41b8a9:	jmp    0x41b8bb
  41b8ae:	mov    esi,DWORD PTR ds:0x4291b3
  41b8b4:	inc    esi
  41b8b5:	mov    DWORD PTR ds:0x4291b3,esi
  41b8bb:	cmp    DWORD PTR ds:0x4291b3,0x1e
  41b8c2:	jae    0x41b8ef
  41b8c8:	cmp    DWORD PTR ds:0x4291b3,0x28
  41b8cf:	jle    0x41b8ef
  41b8d5:	jmp    0x41b8ea
  41b8da:	push   0x4291c7
  41b8df:	push   0x428047
  41b8e4:	call   DWORD PTR ds:0x42a68f
  41b8ea:	jmp    0x41b8ae
  41b8ef:	mov    DWORD PTR [ebp-0x20],eax
  41b8f2:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8f5:	mov    ecx,DWORD PTR [ebp-0x20]
  41b8f8:	neg    edi
  41b8fa:	mov    esi,0x75108ac
  41b8ff:	xor    eax,esi
  41b901:	mov    edi,0x3272f3
  41b906:	add    eax,edi
  41b908:	or     eax,ecx
  41b90a:	mov    DWORD PTR [ebp-0x20],eax
  41b90d:	mov    eax,DWORD PTR [ebp-0x4]
  41b910:	mov    ecx,DWORD PTR [ebp-0x4]
  41b913:	sub    eax,ecx
  41b915:	mov    DWORD PTR [ebp-0x4],eax
  41b918:	or     DWORD PTR [ebp-0x4],0xf89c85be
  41b91f:	mov    eax,DWORD PTR [ebp-0xc]
  41b922:	xor    eax,esi
  41b924:	add    eax,edi
  41b926:	push   eax
  41b927:	mov    eax,DWORD PTR [ebp-0x10]
  41b92a:	xor    eax,esi
  41b92c:	add    eax,edi
  41b92e:	push   eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x4]
  41b932:	xor    eax,esi
  41b934:	add    eax,edi
  41b936:	push   eax
  41b937:	lea    eax,[ebp-0x78]
  41b93a:	push   eax
  41b93b:	push   DWORD PTR [ebp-0x2c]
  41b93e:	push   DWORD PTR [ebp-0x28]
  41b941:	call   0x411b80
  41b946:	test   eax,eax
  41b948:	je     0x41b976
  41b94e:	lea    eax,[ebp-0x78]
  41b951:	push   eax
  41b952:	mov    eax,DWORD PTR [ebp-0x28]
  41b955:	xor    eax,esi
  41b957:	add    eax,edi
  41b959:	push   eax
  41b95a:	mov    eax,DWORD PTR [ebp-0x24]
  41b95d:	add    eax,0xaa
  41b962:	push   eax
  41b963:	mov    eax,DWORD PTR [ebp-0x24]
  41b966:	mov    eax,DWORD PTR [eax+0x198]
  41b96c:	push   DWORD PTR [eax]
  41b96e:	call   0x4085e5
  41b973:	mov    DWORD PTR [ebp-0x14],eax
  41b976:	mov    ecx,DWORD PTR ds:0x428403
  41b97c:	lea    eax,[ebp+0x4]
  41b97f:	mov    DWORD PTR [ecx*4+0x4283fb],eax
  41b986:	inc    DWORD PTR ds:0x428403
  41b98c:	mov    eax,DWORD PTR [ebp-0x14]
  41b98f:	test   eax,eax
  41b991:	je     0x41b9f9
  41b997:	lea    eax,[ebp-0x8]
  41b99a:	mov    DWORD PTR [ebp-0x34],eax
  41b99d:	mov    eax,DWORD PTR [ebp-0x30]
  41b9a0:	mov    DWORD PTR [ebp-0x8],eax
  41b9a3:	mov    eax,DWORD PTR [ebp-0x8]
  41b9a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9a9:	sub    eax,ecx
  41b9ab:	mov    DWORD PTR [ebp-0x8],eax
  41b9ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41b9b1:	xor    ecx,esi
  41b9b3:	mov    eax,0xffcd8d0d
  41b9b8:	sub    eax,ecx
  41b9ba:	add    DWORD PTR [ebp-0x8],eax
  41b9bd:	mov    eax,DWORD PTR [ebp-0x8]
  41b9c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9c3:	mov    DWORD PTR [ecx+0x1],eax
  41b9c6:	mov    eax,DWORD PTR [ebp-0x14]
  41b9c9:	push   DWORD PTR [ebp-0x24]
  41b9cc:	mov    BYTE PTR [eax],0xe9
  41b9cf:	mov    eax,ds:0x428187
  41b9d4:	push   DWORD PTR [eax]
  41b9d6:	push   DWORD PTR ds:0x4283eb
  41b9dc:	push   DWORD PTR ds:0x42818f
  41b9e2:	push   DWORD PTR ds:0x4283cb
  41b9e8:	push   DWORD PTR ds:0x428f4f
  41b9ee:	push   DWORD PTR [ebp-0x28]
  41b9f1:	push   DWORD PTR [ebp-0x2c]
  41b9f4:	mov    eax,DWORD PTR [ebp-0x14]
  41b9f7:	call   eax
  41b9f9:	pop    edi
  41b9fa:	pop    esi
  41b9fb:	leave  
  41b9fc:	ret    
  41b9fd:	push   ebp
  41b9fe:	mov    ebp,esp
  41ba00:	sub    esp,0x1c
  41ba03:	adc    DWORD PTR ds:0x4291bf,0x12a2
  41ba0d:	mov    DWORD PTR [ebp-0x10],0xf89f85a1
  41ba14:	sub    DWORD PTR ds:0x4291b3,0x1e28
  41ba1e:	lea    eax,[ebp+0x14]
  41ba21:	movzx  edx,BYTE PTR ds:0x4291c7
  41ba28:	sbb    edx,DWORD PTR ds:0x4291ef
  41ba2e:	mov    DWORD PTR ds:0x4291c7,edx
  41ba34:	mov    DWORD PTR [ebp-0x4],eax
  41ba37:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  41ba3e:	and    DWORD PTR ds:0x4291a3,0x0
  41ba48:	jmp    0x41ba5a
  41ba4d:	mov    edx,DWORD PTR ds:0x4291a3
  41ba53:	inc    edx
  41ba54:	mov    DWORD PTR ds:0x4291a3,edx
  41ba5a:	cmp    DWORD PTR ds:0x4291a3,0x1c
  41ba61:	jae    0x41ba87
  41ba67:	cmp    DWORD PTR ds:0x4291a3,0x2a
  41ba6e:	jb     0x41ba87
  41ba74:	jmp    0x41ba82
  41ba79:	push   DWORD PTR [ebp-0x10]
  41ba7c:	call   DWORD PTR ds:0x42a693
  41ba82:	jmp    0x41ba4d
  41ba87:	lea    eax,[ebp-0xc]
  41ba8a:	add    DWORD PTR ds:0x4291d7,ecx
  41ba90:	mov    DWORD PTR [ebp-0x14],eax
  41ba93:	xor    ecx,eax
  41ba95:	mov    eax,DWORD PTR [ebp-0xc]
  41ba98:	mov    ecx,DWORD PTR ds:0x42921f
  41ba9e:	mov    edx,DWORD PTR ds:0x42987b
  41baa4:	sub    edx,ecx
  41baa6:	xor    ecx,DWORD PTR [ecx+edx*1]
  41baa9:	mov    edx,DWORD PTR [ebp-0x14]
  41baac:	adc    ecx,0x3c0d
  41bab2:	mov    ecx,0x75108ac
  41bab7:	adc    DWORD PTR ds:0x4291eb,0xbc
  41bac1:	xor    eax,ecx
  41bac3:	or     DWORD PTR ds:0x4291eb,0x4291d3
  41bacd:	add    eax,0x3272f3
  41bad2:	xor    DWORD PTR ds:0x4291db,0x429193
  41badc:	mov    DWORD PTR [edx],eax
  41bade:	and    DWORD PTR ds:0x429157,0x0
  41bae8:	xor    edx,edx
  41baea:	add    edx,DWORD PTR ds:0x429157
  41baf0:	inc    edx
  41baf1:	mov    DWORD PTR ds:0x429157,edx
  41baf7:	cmp    DWORD PTR ds:0x429157,0x2c
  41bafe:	jge    0x41bb29
  41bb04:	jmp    0x41bb1c
  41bb09:	push   0x4291c7
  41bb0e:	push   0x4291db
  41bb13:	push   DWORD PTR [ebp-0x20]
  41bb16:	call   DWORD PTR ds:0x42a69b
  41bb1c:	cmp    DWORD PTR ds:0x429157,0x1d
  41bb23:	jb     0x41bae8
  41bb29:	mov    eax,ds:0x428183
  41bb2e:	mov    edx,DWORD PTR [ebp-0x4]
  41bb31:	mov    eax,DWORD PTR [eax]
  41bb33:	add    eax,DWORD PTR [edx]
  41bb35:	mov    DWORD PTR ds:0x4291e7,0x17
  41bb3f:	cmp    DWORD PTR ds:0x4291e7,0x0
  41bb46:	je     0x41bb7d
  41bb4c:	cmp    DWORD PTR ds:0x4291e7,0x22
  41bb53:	ja     0x41bb7d
  41bb59:	jmp    0x41bb69
  41bb5e:	push   0x40e7
  41bb63:	call   DWORD PTR ds:0x42a663
  41bb69:	xor    edx,edx
  41bb6b:	or     edx,DWORD PTR ds:0x4291e7
  41bb71:	dec    edx
  41bb72:	mov    DWORD PTR ds:0x4291e7,edx
  41bb78:	jmp    0x41bb3f
  41bb7d:	push   esi
  41bb7e:	sub    edx,0x5425
  41bb84:	mov    DWORD PTR [ebp-0x8],eax
  41bb87:	mov    edx,DWORD PTR [ebp+0x8]
  41bb8a:	mov    eax,ds:0x42830b
  41bb8f:	mov    esi,DWORD PTR ds:0x429b9f
  41bb95:	mov    esi,DWORD PTR [esi]
  41bb97:	adc    DWORD PTR ds:0x42919f,esi
  41bb9d:	mov    eax,DWORD PTR [eax+0x198]
  41bba3:	xor    edx,ecx
  41bba5:	and    DWORD PTR ds:0x4291cf,ecx
  41bbab:	mov    esi,0x3272f3
  41bbb0:	add    edx,esi
  41bbb2:	mov    DWORD PTR ds:0x4291c7,0x7ba3
  41bbbc:	cmp    DWORD PTR [eax],edx
  41bbbe:	mov    DWORD PTR ds:0x4291df,0x7d4d
  41bbc8:	je     0x41bbdb
  41bbce:	not    DWORD PTR ds:0x42917b
  41bbd4:	mov    eax,DWORD PTR [eax]
  41bbd6:	jmp    0x4207f9
  41bbdb:	mov    eax,DWORD PTR [ebp+0x18]
  41bbde:	xor    DWORD PTR ds:0x429183,0x42919f
  41bbe8:	xor    eax,ecx
  41bbea:	push   ebx
  41bbeb:	add    eax,esi
  41bbed:	xor    DWORD PTR ds:0x429197,edi
  41bbf3:	xor    edx,edx
  41bbf5:	sub    DWORD PTR ds:0x4291e3,edi
  41bbfb:	mov    ebx,0xfabdbed6
  41bc00:	add    eax,ebx
  41bc02:	mov    DWORD PTR ds:0x4291cb,0x2663
  41bc0c:	push   edi
  41bc0d:	adc    edx,0xffffffff
  41bc10:	and    DWORD PTR ds:0x4291a3,0x0
  41bc1a:	jmp    0x41bc2e
  41bc1f:	xor    edi,edi
  41bc21:	xor    edi,DWORD PTR ds:0x4291a3
  41bc27:	inc    edi
  41bc28:	mov    DWORD PTR ds:0x4291a3,edi
  41bc2e:	cmp    DWORD PTR ds:0x4291a3,0x1f
  41bc35:	jae    0x41bc68
  41bc3b:	cmp    DWORD PTR ds:0x4291a3,0x22
  41bc42:	jl     0x41bc68
  41bc48:	jmp    0x41bc63
  41bc4d:	push   DWORD PTR [ebp-0x24]
  41bc50:	push   0x42810e
  41bc55:	push   0x42812a
  41bc5a:	push   DWORD PTR [ebp-0x1c]
  41bc5d:	call   DWORD PTR ds:0x42a66b
  41bc63:	jmp    0x41bc1f
  41bc68:	mov    edi,0x8a29a13f
  41bc6d:	xor    eax,edi
  41bc6f:	sub    DWORD PTR ds:0x429197,0x48a0
  41bc79:	xor    edx,0x0
  41bc7c:	mov    DWORD PTR ds:0x42919f,0x3301
  41bc86:	cmp    eax,0x70941fe9
  41bc8b:	mov    DWORD PTR ds:0x429167,0x2e01
  41bc95:	jne    0x41bcc2
  41bc9b:	mov    DWORD PTR ds:0x4291a3,0x73ae
  41bca5:	cmp    edx,0xffffffff
  41bca8:	jne    0x41bcc2
  41bcae:	push   0xf89c85a2
  41bcb3:	mov    DWORD PTR ds:0x4291af,0x3feb
  41bcbd:	jmp    0x4207e6
  41bcc2:	mov    eax,DWORD PTR [ebp+0x18]
  41bcc5:	xor    eax,ecx
  41bcc7:	adc    DWORD PTR ds:0x42916b,0x4291af
  41bcd1:	add    eax,esi
  41bcd3:	sub    DWORD PTR ds:0x429163,0x429173
  41bcdd:	xor    edx,edx
  41bcdf:	add    eax,ebx
  41bce1:	mov    DWORD PTR ds:0x429163,0x4b51
  41bceb:	adc    edx,0xffffffff
  41bcee:	sub    DWORD PTR ds:0x4291af,0x6866
  41bcf8:	xor    eax,edi
  41bcfa:	or     DWORD PTR ds:0x42914f,0x4291db
  41bd04:	xor    edx,0x0
  41bd07:	mov    DWORD PTR ds:0x4291eb,0x1dc4
  41bd11:	cmp    eax,0x70941fe7
  41bd16:	mov    DWORD PTR ds:0x429153,0x3724
  41bd20:	jne    0x4207d3
  41bd26:	cmp    edx,0xffffffff
  41bd29:	mov    DWORD PTR ds:0x4291ef,0x5140
  41bd33:	jne    0x4207d3
  41bd39:	add    DWORD PTR ds:0x429193,0x7d28
  41bd43:	mov    eax,DWORD PTR [ebp+0x10]
  41bd46:	mov    DWORD PTR ds:0x42916b,0x1b
  41bd50:	cmp    DWORD PTR ds:0x42916b,0x0
  41bd57:	je     0x41bd93
  41bd5d:	cmp    DWORD PTR ds:0x42916b,0x1d
  41bd64:	jl     0x41bd93
  41bd6a:	jmp    0x41bd7f
  41bd6f:	push   0x2cfc
  41bd74:	push   0x400000
  41bd79:	call   DWORD PTR ds:0x42a66f
  41bd7f:	xor    edx,edx
  41bd81:	xor    edx,DWORD PTR ds:0x42916b
  41bd87:	dec    edx
  41bd88:	mov    DWORD PTR ds:0x42916b,edx
  41bd8e:	jmp    0x41bd50
  41bd93:	xor    eax,ecx
  41bd95:	add    eax,esi
  41bd97:	mov    DWORD PTR [ebp-0x18],eax
  41bd9a:	sub    DWORD PTR ds:0x42918f,0x3e4b
  41bda4:	mov    eax,DWORD PTR [ebp+0xc]
  41bda7:	and    DWORD PTR ds:0x429183,0x0
  41bdb1:	jmp    0x41bdc5
  41bdb6:	xor    edx,edx
  41bdb8:	add    edx,DWORD PTR ds:0x429183
  41bdbe:	inc    edx
  41bdbf:	mov    DWORD PTR ds:0x429183,edx
  41bdc5:	cmp    DWORD PTR ds:0x429183,0x19
  41bdcc:	jae    0x41bdf4
  41bdd2:	cmp    DWORD PTR ds:0x429183,0x28
  41bdd9:	jbe    0x41bdf4
  41bddf:	jmp    0x41bdef
  41bde4:	push   0x429193
  41bde9:	call   DWORD PTR ds:0x42a673
  41bdef:	jmp    0x41bdb6
  41bdf4:	mov    edx,DWORD PTR [ebp-0x8]
  41bdf7:	mov    DWORD PTR ds:0x4291ab,0x2654
  41be01:	xor    eax,ecx
  41be03:	add    eax,esi
  41be05:	adc    DWORD PTR ds:0x4291e7,0x4291db
  41be0f:	imul   eax,DWORD PTR [edx]
  41be12:	mov    edx,DWORD PTR [ebp+0x8]
  41be15:	or     DWORD PTR ds:0x42914b,0x4291d3
  41be1f:	xor    edx,ecx
  41be21:	add    edx,esi
  41be23:	mov    DWORD PTR ds:0x4291e7,0x151c
  41be2d:	cmp    edx,eax
  41be2f:	mov    eax,DWORD PTR [ebp-0x4]
  41be32:	je     0x41beca
  41be38:	mov    DWORD PTR ds:0x429163,0x16
  41be42:	cmp    DWORD PTR ds:0x429163,0x0
  41be49:	je     0x41be83
  41be4f:	cmp    DWORD PTR ds:0x429163,0x1a
  41be56:	ja     0x41be83
  41be5c:	jmp    0x41be71
  41be61:	push   0x4e27
  41be66:	push   0x4280a5
  41be6b:	call   DWORD PTR ds:0x42a677
  41be71:	mov    edx,DWORD PTR ds:0x429163
  41be77:	dec    edx
  41be78:	mov    DWORD PTR ds:0x429163,edx
  41be7e:	jmp    0x41be42
  41be83:	mov    edx,DWORD PTR [ebp-0x18]
  41be86:	or     DWORD PTR ds:0x42917f,0x4f4
  41be90:	add    DWORD PTR [eax],edx
  41be92:	and    eax,0x7343
  41be97:	mov    eax,DWORD PTR [ebp-0x4]
  41be9a:	mov    edx,DWORD PTR [ebp+0xc]
  41be9d:	xor    edx,ecx
  41be9f:	add    edx,esi
  41bea1:	imul   edx,DWORD PTR [eax]
  41bea4:	sbb    DWORD PTR ds:0x429183,0x4291b3
  41beae:	mov    DWORD PTR [eax],edx
  41beb0:	mov    eax,DWORD PTR [ebp-0x4]
  41beb3:	mov    DWORD PTR [ebp-0x1c],eax
  41beb6:	mov    eax,DWORD PTR [ebp+0x10]
  41beb9:	xor    eax,ecx
  41bebb:	mov    edx,0xffcd8d0d
  41bec0:	sub    edx,eax
  41bec2:	mov    eax,DWORD PTR [ebp-0x1c]
  41bec5:	jmp    0x41bee4
  41beca:	mov    edx,DWORD PTR [ebp+0x14]
  41becd:	xor    DWORD PTR [eax],edx
  41becf:	mov    eax,DWORD PTR [ebp-0x4]
  41bed2:	mov    DWORD PTR [ebp-0x1c],eax
  41bed5:	mov    eax,DWORD PTR [ebp+0x10]
  41bed8:	xor    eax,ecx
  41beda:	mov    edx,0xffcd8d0d
  41bedf:	sub    edx,eax
  41bee1:	mov    eax,DWORD PTR [ebp-0x1c]
  41bee4:	add    DWORD PTR [eax],edx
  41bee6:	mov    eax,DWORD PTR [ebp-0x4]
  41bee9:	mov    edx,DWORD PTR [ebp-0x8]
  41beec:	add    edx,DWORD PTR [eax]
  41beee:	mov    DWORD PTR [ebp-0x8],edx
  41bef1:	mov    eax,DWORD PTR [ebp+0xc]
  41bef4:	mov    edx,DWORD PTR [ebp+0xc]
  41bef7:	xor    edx,ecx
  41bef9:	xor    eax,ecx
  41befb:	lea    eax,[eax+edx*1+0x64e5e6]
  41bf02:	mov    edx,DWORD PTR [ebp+0xc]
  41bf05:	xor    edx,ecx
  41bf07:	add    edx,esi
  41bf09:	imul   eax,edx
  41bf0c:	mov    edx,DWORD PTR [ebp+0xc]
  41bf0f:	xor    edx,ecx
  41bf11:	sub    edx,eax
  41bf13:	mov    eax,DWORD PTR [ebp-0x4]
  41bf16:	add    edx,esi
  41bf18:	cmp    DWORD PTR [eax],edx
  41bf1a:	mov    eax,DWORD PTR [ebp-0x4]
  41bf1d:	jg     0x41bf3a
  41bf23:	mov    DWORD PTR [ebp-0x1c],eax
  41bf26:	mov    eax,DWORD PTR [ebp+0x10]
  41bf29:	xor    eax,ecx
  41bf2b:	mov    edx,0xffcd8d0d
  41bf30:	sub    edx,eax
  41bf32:	mov    eax,DWORD PTR [ebp-0x1c]
  41bf35:	jmp    0x41bf41
  41bf3a:	mov    edx,DWORD PTR [ebp+0x10]
  41bf3d:	xor    edx,ecx
  41bf3f:	add    edx,esi
  41bf41:	add    DWORD PTR [eax],edx
  41bf43:	mov    eax,DWORD PTR [ebp-0x8]
  41bf46:	mov    edx,DWORD PTR [ebp-0x10]
  41bf49:	mov    eax,DWORD PTR [eax]
  41bf4b:	xor    edx,ecx
  41bf4d:	add    edx,0x3272f2
  41bf53:	not    edx
  41bf55:	and    eax,edx
  41bf57:	mov    DWORD PTR [ebp-0x4],eax
  41bf5a:	movsx  eax,BYTE PTR [eax+0x1]
  41bf5e:	cdq    
  41bf5f:	add    eax,ebx
  41bf61:	adc    edx,0xffffffff
  41bf64:	jmp    0x41e327
  41bf69:	pop    esi
  41bf6a:	push   0x85807d90
  41bf6f:	xchg   esi,eax
  41bf70:	dec    eax
  41bf71:	add    cl,BYTE PTR [ebx+0x3]
  41bf74:	shr    ecx,cl
  41bf76:	fisubr WORD PTR [edx]
  41bf78:	pop    esp
  41bf79:	mov    ebx,0xd98382f9
  41bf7e:	pop    esp
  41bf7f:	add    DWORD PTR [ebx-0x3b19cd05],0xffffffce
  41bf86:	mov    ebp,0x9453cb3b
  41bf8b:	xor    DWORD PTR [eax-0x1f],0x5f61be2b
  41bf92:	es fs pusha 
  41bf95:	xchg   ebx,eax
  41bf96:	mov    dh,0xc0
  41bf99:	inc    edx
  41bf9a:	jb     0x41bf87
  41bf9c:	sbb    edi,eax
  41bf9e:	pop    es
  41bf9f:	lea    esi,[edi]
  41bfa1:	jb     0x41bfb8
  41bfa3:	mov    al,0x22
  41bfa5:	icebp  
  41bfa6:	stos   DWORD PTR es:[edi],eax
  41bfa7:	inc    edi
  41bfa8:	add    bl,ch
  41bfaa:	pop    esp
  41bfab:	rcl    ah,0xd3
  41bfae:	enter  0x97dd,0xe
  41bfb2:	pushaw 
  41bfb4:	sub    esi,DWORD PTR [edx]
  41bfb6:	sub    bl,0x3a
  41bfb9:	popf   
  41bfba:	stc    
  41bfbb:	xchg   ecx,eax
  41bfbc:	out    dx,al
  41bfbd:	lds    esp,FWORD PTR [eax+0x1a]
  41bfc0:	test   BYTE PTR [edi-0x61],cl
  41bfc3:	data16 shr BYTE PTR fs:[ecx-0x24c22406],1
  41bfcb:	sti    
  41bfcc:	mov    esp,0xf24ad82a
  41bfd1:	jmp    FWORD PTR [ecx+0x71be583c]
  41bfd7:	jae    0x41bffa
  41bfd9:	in     al,0x42
  41bfdb:	mov    dh,0xf1
  41bfdd:	or     eax,0xf2891f6e
  41bfe2:	add    DWORD PTR [edx+edi*2+0x36c880f2],ebp
  41bfe9:	and    ch,BYTE PTR [ebx]
  41bfeb:	pop    ds
  41bfec:	inc    esi
  41bfed:	cwde   
  41bfee:	sbb    DWORD PTR fs:[edi-0x29b356e5],0xffffffd6
  41bff6:	mov    cl,0x4b
  41bff8:	sbb    DWORD PTR [edi+ebp*4],ebp
  41bffb:	retf   
  41bffc:	ror    bl,1
  41bffe:	mov    cs:0xc0e4f4c7,al
  41c004:	inc    edx
  41c005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c006:	mov    edi,0x494e2d4e
  41c00b:	out    0x26,eax
  41c00d:	popa   
  41c00e:	sbb    BYTE PTR [ecx-0x3385fb28],bl
  41c014:	sub    bh,0x9
  41c017:	push   0xe9634b17
  41c01c:	push   esi
  41c01d:	pop    esp
  41c01e:	call   0x92f84d01
  41c023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c024:	pextrw esp,(bad),0xc5
  41c026:	and    eax,0xa0f618ed
  41c02b:	stos   BYTE PTR es:[edi],al
  41c02c:	(bad)  
  41c02d:	in     al,dx
  41c02e:	and    cx,WORD PTR [ecx+0x30]
  41c032:	jg     0x41bff2
  41c034:	mov    ebx,0x71134e47
  41c039:	scas   eax,DWORD PTR es:[edi]
  41c03a:	stos   DWORD PTR es:[edi],eax
  41c03b:	jg     0x41c0aa
  41c03d:	inc    edx
  41c03e:	sub    al,BYTE PTR [edx+0x17795746]
  41c044:	jg     0x41c084
  41c046:	jmp    0x41c04f
  41c048:	sbb    dh,dl
  41c04a:	ds loope 0x41c0b2
  41c04d:	mov    ds:0xf2d87cf5,al
  41c052:	fwait
  41c053:	mov    dl,0x9e
  41c055:	cli    
  41c056:	jbe    0x41c0be
  41c058:	push   eax
  41c059:	pop    es
  41c05a:	cli    
  41c05b:	fidivr WORD PTR [esi+eiz*8+0x2f5aa384]
  41c062:	xlat   BYTE PTR ds:[ebx]
  41c063:	add    DWORD PTR [edx],esp
  41c065:	and    eax,0xcede4e17
  41c06a:	and    esp,DWORD PTR [edx]
  41c06c:	jmp    0x41c04c
  41c06e:	call   0x7396cd26
  41c073:	mov    ds:0x8a2eb821,al
  41c078:	and    al,0x94
  41c07a:	lods   eax,DWORD PTR ds:[esi]
  41c07b:	lods   eax,DWORD PTR ds:[esi]
  41c07c:	xlat   BYTE PTR ds:[ebx]
  41c07d:	sbb    bl,ch
  41c07f:	icebp  
  41c080:	mov    ds:0xee350b3c,eax
  41c085:	xchg   ebp,eax
  41c086:	or     DWORD PTR [ebx],0xfffffff3
  41c089:	xchg   BYTE PTR [edi-0xd43724],ch
  41c08f:	or     eax,0x90d9f2f5
  41c094:	adc    al,0xc9
  41c096:	bound  eax,QWORD PTR [ebp+0x67]
  41c099:	xlat   BYTE PTR ds:[ebx]
  41c09a:	ins    DWORD PTR es:[edi],dx
  41c09b:	pop    ss
  41c09c:	xor    al,0xce
  41c09e:	push   edx
  41c09f:	hlt    
  41c0a0:	ins    BYTE PTR es:[edi],dx
  41c0a1:	stos   BYTE PTR es:[edi],al
  41c0a2:	imul   edx,eax,0xfffffff7
  41c0a5:	sub    al,0xcc
  41c0a7:	sahf   
  41c0a8:	es mov ecx,0x7bdfb9e9
  41c0ae:	gs dec esi
  41c0b0:	adc    al,BYTE PTR ds:0xb2627c6b
  41c0b6:	inc    ebp
  41c0b7:	sbb    ebx,ecx
  41c0b9:	lods   al,BYTE PTR ds:[esi]
  41c0ba:	mov    cl,0x7a
  41c0bc:	retf   
  41c0bd:	retf   0x7956
  41c0c0:	mov    cl,0xa
  41c0c2:	dec    edx
  41c0c3:	lods   al,BYTE PTR ds:[esi]
  41c0c4:	jle    0x41c125
  41c0c6:	adc    al,0x83
  41c0c8:	outs   dx,BYTE PTR ds:[esi]
  41c0c9:	xor    ecx,edx
  41c0cb:	aam    0x2f
  41c0cd:	ins    DWORD PTR es:[edi],dx
  41c0ce:	mov    edi,0xb7953d69
  41c0d3:	or     BYTE PTR [ebp+0x5e],bh
  41c0d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0d7:	jns    0x41c149
  41c0d9:	cwde   
  41c0da:	push   cs
  41c0db:	pop    ds
  41c0dc:	jno    0x41c097
  41c0de:	fmul   QWORD PTR [ecx+0x4e]
  41c0e1:	jmp    0xed8b:0x6510d6c3
  41c0e8:	lods   eax,DWORD PTR ds:[si]
  41c0ea:	or     bl,BYTE PTR [ebx+esi*2-0x7a]
  41c0ee:	push   0x4d
  41c0f0:	add    ebp,DWORD PTR [esi-0x42215156]
  41c0f6:	xchg   ebp,eax
  41c0f7:	dec    esi
  41c0f8:	cs nop
  41c0fa:	mov    ebp,0x7f434238
  41c0ff:	mov    dh,0x65
  41c101:	das    
  41c102:	xchg   eax,ebx
  41c104:	mov    DWORD PTR [ecx],esi
  41c106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c107:	les    ecx,FWORD PTR [ebp+0x3401baa6]
  41c10d:	stos   BYTE PTR es:[edi],al
  41c10e:	adc    esp,0x9eb4d355
  41c114:	pop    es
  41c115:	adc    al,0x76
  41c117:	xor    bh,dh
  41c119:	pop    ss
  41c11a:	scas   eax,DWORD PTR es:[edi]
  41c11b:	in     eax,0xd1
  41c11d:	jns    0x41c0cf
  41c11f:	mov    ebp,0x7b3139af
  41c124:	repnz push eax
  41c126:	mov    esi,0x7b7ca4b9
  41c12c:	cmp    BYTE PTR [ebp-0x5371dfce],bh
  41c132:	mov    ?,WORD PTR [edi-0x5d2c1e70]
  41c138:	popf   
  41c139:	hlt    
  41c13a:	dec    edi
  41c13c:	and    BYTE PTR [esi],0xfa
  41c13f:	push   edx
  41c140:	shr    ebp,cl
  41c142:	jns    0x41c154
  41c144:	int    0xb7
  41c146:	pushf  
  41c147:	jbe    0x41c0f9
  41c149:	mov    al,ds:0x317eb06c
  41c14e:	adc    eax,0xb49b1bae
  41c153:	pop    esp
  41c154:	pop    esp
  41c155:	mov    ss,ebp
  41c157:	sub    DWORD PTR [ebx+ebx*2],0x22
  41c15b:	dec    esi
  41c15c:	inc    ebp
  41c15d:	adc    esi,DWORD PTR ds:0xce35450e
  41c163:	mov    ds:0x98449d7f,eax
  41c168:	ja     0x41c19b
  41c16a:	fsub   DWORD PTR [esi]
  41c16c:	jmp    0x41c0fb
  41c16e:	or     dl,BYTE PTR [ebp-0x48d8cf4f]
  41c174:	inc    edx
  41c175:	or     BYTE PTR cs:[eax-0x2f],dh
  41c179:	ja     0x41c146
  41c17b:	push   edx
  41c17c:	push   ebp
  41c17d:	adc    dl,BYTE PTR [esi]
  41c17f:	test   edx,ecx
  41c181:	sub    bh,dh
  41c183:	sub    BYTE PTR [edi+0x118e0e0f],cl
  41c189:	ins    DWORD PTR es:[edi],dx
  41c18a:	popf   
  41c18b:	in     al,dx
  41c18c:	and    al,0xe9
  41c18e:	push   es
  41c18f:	aas    
  41c190:	and    DWORD PTR [ecx+ebp*1-0x6f],ecx
  41c194:	xchg   esi,eax
  41c195:	addr16 mov ch,0xf7
  41c198:	xor    DWORD PTR [ebx+0x39],ebp
  41c19b:	fmul   QWORD PTR cs:[ebp-0x2]
  41c19f:	pop    eax
  41c1a0:	mov    al,ds:0x8bab23a6
  41c1a5:	jmp    0x58c9:0xec54c63c
  41c1ac:	adc    eax,0xff801fd0
  41c1b1:	fisttp DWORD PTR [ebp+0x40217a1d]
  41c1b7:	jno    0x41c234
  41c1b9:	das    
  41c1ba:	mov    ds:0xc73c4d41,eax
  41c1bf:	aad    0xbb
  41c1c1:	retf   0xd528
  41c1c4:	rcl    BYTE PTR [eax],0xf6
  41c1c7:	daa    
  41c1c8:	imul   edi,DWORD PTR ds:0x3f48fa1d,0xfffffffe
  41c1cf:	dec    eax
  41c1d0:	inc    edx
  41c1d1:	mov    BYTE PTR [ecx],bh
  41c1d3:	xor    DWORD PTR [esi],ebx
  41c1d5:	mov    ds:0xf4858c60,eax
  41c1da:	fwait
  41c1db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1dc:	push   es
  41c1dd:	xchg   edi,eax
  41c1de:	aas    
  41c1df:	xor    DWORD PTR [ebp+0x2c],0xffffffb5
  41c1e3:	fucomp st(2)
  41c1e5:	leave  
  41c1e6:	and    bh,bh
  41c1e8:	add    al,0xf0
  41c1ea:	fwait
  41c1eb:	xchg   ecx,eax
  41c1ec:	lods   al,BYTE PTR ds:[esi]
  41c1ed:	sbb    DWORD PTR [ecx+0x63],edi
  41c1f0:	jmp    0x41c236
  41c1f2:	in     al,0x55
  41c1f4:	and    DWORD PTR [ebx-0x14],0x2d
  41c1f8:	mov    ebx,0x75b8ccc3
  41c1fd:	mov    ds:0x5c4c1427,al
  41c202:	and    BYTE PTR [edi+0x14],cl
  41c205:	les    esi,FWORD PTR [eax-0x30]
  41c208:	mov    al,ds:0x832be135
  41c20d:	mov    ebp,0x8c6c2a52
  41c212:	test   eax,0x5f8fafb8
  41c217:	fidivr DWORD PTR [ebp+0x4a453ccd]
  41c21d:	fcmovnbe st,st(6)
  41c21f:	dec    edi
  41c220:	cld    
  41c221:	int    0xb0
  41c223:	cmp    DWORD PTR [esi-0x53],ecx
  41c226:	out    dx,al
  41c227:	loop   0x41c1e1
  41c229:	aam    0x94
  41c22b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c22c:	fist   DWORD PTR [edi-0xa532d05]
  41c232:	rcl    DWORD PTR [esi],0xd1
  41c235:	sbb    DWORD PTR [ebp+0x2fe63bbf],esp
  41c23b:	xor    dl,BYTE PTR ds:0xc27ef06
  41c241:	int3   
  41c242:	mov    dh,0xc7
  41c244:	push   eax
  41c245:	mov    ebx,0x4b485951
  41c24a:	xor    dl,ch
  41c24c:	int3   
  41c24d:	jl     0x41c2cb
  41c24f:	mov    dl,0xf4
  41c251:	lods   eax,DWORD PTR ds:[esi]
  41c252:	xchg   ebx,eax
  41c253:	fmul   st(6),st
  41c255:	arpl   dx,bp
  41c257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c258:	push   0xffffffa9
  41c25a:	jmp    0x41c1fe
  41c25c:	icebp  
  41c25d:	push   esp
  41c25e:	sti    
  41c25f:	sub    eax,0x207c056b
  41c264:	push   eax
  41c265:	inc    esp
  41c266:	add    eax,0x66f1f835
  41c26b:	neg    BYTE PTR [edx]
  41c26d:	and    al,0x6d
  41c26f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c270:	cmp    al,0x4d
  41c272:	and    edx,ecx
  41c274:	outs   dx,DWORD PTR ds:[esi]
  41c275:	aaa    
  41c276:	fimul  WORD PTR [ebp+0x727840f8]
  41c27c:	xlat   BYTE PTR ds:[ebx]
  41c27d:	jecxz  0x41c21c
  41c27f:	popf   
  41c280:	sbb    DWORD PTR [ebp+eax*2-0x709e6f28],0x5d3d668d
  41c28b:	add    ecx,DWORD PTR [edx+0x5f]
  41c28e:	mov    al,ds:0x3b435fb3
  41c293:	xor    al,BYTE PTR [ecx+0x72729de0]
  41c299:	or     DWORD PTR [esi],ebx
  41c29b:	push   es
  41c29c:	arpl   WORD PTR [ebx],bx
  41c29e:	mov    esp,0xad87f70d
  41c2a3:	cmp    DWORD PTR [eiz*8+0x18212298],ebp
  41c2aa:	in     al,dx
  41c2ab:	adc    al,0xbd
  41c2ad:	fcomp  QWORD PTR [edi-0x47]
  41c2b0:	out    0xa7,al
  41c2b2:	push   ecx
  41c2b3:	loope  0x41c2b6
  41c2b5:	mov    eax,ds:0x68ec538a
  41c2ba:	push   ds
  41c2bb:	mov    edx,0xf086613c
  41c2c0:	mov    dh,0x78
  41c2c2:	push   esi
  41c2c3:	pop    ebp
  41c2c4:	mov    BYTE PTR ss:[ebp-0x5e3b4814],dh
  41c2cb:	or     eax,0x41bcbc76
  41c2d0:	mov    bh,0xca
  41c2d2:	iret   
  41c2d3:	push   ss
  41c2d4:	daa    
  41c2d5:	mov    DWORD PTR [esi-0x4a],esi
  41c2d8:	xchg   edx,eax
  41c2d9:	jne    0x41c2da
  41c2db:	adc    ah,0xb2
  41c2de:	dec    esp
  41c2df:	mov    ebp,0xa373e3d1
  41c2e4:	add    ebx,edx
  41c2e6:	xlat   BYTE PTR ds:[ebx]
  41c2e7:	out    0x2e,al
  41c2e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2eb:	jl     0x41c2a7
  41c2ed:	push   ebp
  41c2ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2ef:	fcom   st(2)
  41c2f1:	test   DWORD PTR [ebp-0x25],0xb255989e
  41c2f8:	sbb    eax,ebp
  41c2fa:	inc    edi
  41c2fb:	js     0x41c2d6
  41c2fd:	adc    al,0x6a
  41c2ff:	jbe    0x41c2e6
  41c301:	(bad)  
  41c302:	fld    DWORD PTR [esi+0x9e769da]
  41c308:	loopne 0x41c2cd
  41c30a:	scas   eax,DWORD PTR es:[edi]
  41c30b:	push   ds
  41c30c:	push   edi
  41c30d:	mov    ch,0xb
  41c30f:	fcom   QWORD PTR [ebx+0x2f]
  41c312:	das    
  41c313:	cmp    al,0x82
  41c315:	pop    es
  41c316:	loop   0x41c38e
  41c318:	adc    DWORD PTR [edi],esi
  41c31a:	inc    edi
  41c31b:	ins    BYTE PTR es:[edi],dx
  41c31c:	xchg   ebx,eax
  41c31d:	inc    ecx
  41c31e:	or     DWORD PTR [ecx-0x48e6d2b0],ecx
  41c324:	and    dl,bl
  41c326:	fmul   DWORD PTR [ecx+ecx*8+0x2f]
  41c32a:	mov    DWORD PTR [ebp+0x50bc33e9],0x4c5ae85b
  41c334:	and    eax,0xf4b3f5da
  41c339:	(bad)  
  41c33a:	xor    edx,ebp
  41c33c:	mov    dh,0xf9
  41c33e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c33f:	xor    eax,0xa7bad34e
  41c344:	pop    ds
  41c345:	fstp   DWORD PTR [esi-0x6315d107]
  41c34b:	or     al,0xc0
  41c34d:	je     0x41c338
  41c34f:	sub    al,0xd7
  41c351:	cmp    eax,0x1c86d210
  41c356:	fsubr  QWORD PTR [edi-0x60]
  41c359:	ins    BYTE PTR es:[edi],dx
  41c35a:	fst    QWORD PTR [edx]
  41c35c:	or     al,bh
  41c35e:	pop    edx
  41c35f:	push   es
  41c360:	aad    0x49
  41c362:	sub    al,0x40
  41c364:	xor    BYTE PTR [esi+esi*1-0x9],0x23
  41c369:	sahf   
  41c36a:	lahf   
  41c36b:	dec    eax
  41c36c:	mov    ecx,0xa7b53640
  41c371:	mov    esp,0x4fef8525
  41c376:	xlat   BYTE PTR ds:[ebx]
  41c377:	test   DWORD PTR [esi+0x6e],eax
  41c37a:	imul   BYTE PTR [esp+eiz*4]
  41c37d:	dec    edx
  41c37e:	push   ds
  41c37f:	test   dl,bl
  41c381:	and    ecx,0x4cb6e44d
  41c387:	mov    eax,0xfd692cb0
  41c38c:	dec    ecx
  41c38d:	xchg   esi,eax
  41c38e:	jbe    0x41c344
  41c390:	data16 fld TBYTE PTR [edx-0x21bdad50]
  41c397:	adc    eax,0x394afe14
  41c39c:	int    0x7d
  41c39e:	ins    BYTE PTR es:[edi],dx
  41c39f:	jl     0x41c3f5
  41c3a1:	popa   
  41c3a2:	push   es
  41c3a3:	sub    eax,0xf7e36b90
  41c3a8:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3aa:	cmc    
  41c3ab:	sbb    DWORD PTR [ecx+ebp*2],0xb8145de
  41c3b2:	xchg   DWORD PTR [eax+0x4],eax
  41c3b5:	and    bh,BYTE PTR [ecx-0xa]
  41c3b8:	test   DWORD PTR [esi-0x3063bec9],ecx
  41c3be:	push   edi
  41c3bf:	dec    ebx
  41c3c0:	xchg   ebp,eax
  41c3c1:	push   esi
  41c3c2:	rol    eax,1
  41c3c4:	jp     0x41c401
  41c3c6:	call   0x4d8:0x98a1ee11
  41c3cd:	loope  0x41c373
  41c3cf:	jns    0x41c437
  41c3d1:	dec    edi
  41c3d2:	das    
  41c3d3:	lds    ebx,FWORD PTR [eax+0xadaebce]
  41c3d9:	cdq    
  41c3da:	addr16 or eax,0x2743f479
  41c3e0:	dec    eax
  41c3e1:	fsubr  QWORD PTR [edx-0x6d]
  41c3e4:	js     0x41c413
  41c3e6:	mov    esi,0x63588592
  41c3eb:	pop    edx
  41c3ec:	retf   
  41c3ed:	sbb    ch,cl
  41c3ef:	test   BYTE PTR [ebp+ebp*1-0x67f9c69c],0x13
  41c3f7:	test   DWORD PTR [edx],ebp
  41c3f9:	ins    DWORD PTR es:[edi],dx
  41c3fa:	addr16 dec edi
  41c3fc:	(bad)  
  41c3fd:	popf   
  41c3fe:	inc    edi
  41c3ff:	lods   eax,DWORD PTR ds:[esi]
  41c400:	ret    0x9d25
  41c403:	(bad)  [ebx]
  41c405:	mov    esp,0x34f37540
  41c40a:	clc    
  41c40b:	(bad)  
  41c40d:	inc    eax
  41c40e:	das    
  41c40f:	repnz push edx
  41c411:	aad    0xf
  41c413:	aam    0x11
  41c415:	sti    
  41c416:	cwde   
  41c417:	daa    
  41c418:	mov    edi,0x86b41c80
  41c41d:	call   0xa8bd22a0
  41c422:	dec    ecx
  41c423:	imul   edx,DWORD PTR [ecx],0x29
  41c426:	xor    ebx,DWORD PTR [edx+0x3cc1cbcc]
  41c42c:	daa    
  41c42d:	dec    ecx
  41c42e:	retf   0xb845
  41c431:	sbb    edx,ebp
  41c433:	dec    ebx
  41c434:	mov    ecx,0x4194cbd9
  41c439:	mov    ebx,0x2e94d626
  41c43e:	mov    WORD PTR [edi-0x46],?
  41c441:	lgs    ebp,FWORD PTR [edx+0x69]
  41c445:	or     DWORD PTR ds:[eax-0x58],esp
  41c449:	ins    DWORD PTR es:[edi],dx
  41c44a:	stc    
  41c44b:	retf   
  41c44c:	jle    0x41c4bf
  41c44e:	pop    ss
  41c44f:	adc    esp,esp
  41c451:	call   0x68a285ad
  41c456:	sbb    cl,0x97
  41c459:	ficomp DWORD PTR ds:0x45cc36ab
  41c45f:	fsubr  st(0),st
  41c461:	pusha  
  41c462:	jge    0x41c47a
  41c464:	dec    ebx
  41c465:	fmul   QWORD PTR ds:[ecx+ebx*2-0x6025c614]
  41c46d:	ds sbb eax,0xa86b4537
  41c473:	push   0x4b
  41c475:	xor    ch,dl
  41c477:	or     al,0xf7
  41c479:	xor    BYTE PTR [ebx],bh
  41c47b:	and    dl,BYTE PTR [edi]
  41c47d:	cmp    ch,BYTE PTR [ebp+0x814133a]
  41c483:	xor    DWORD PTR [ebx-0x181a4c10],ecx
  41c489:	cmp    esp,DWORD PTR [ecx]
  41c48b:	pop    ecx
  41c48c:	(bad)  
  41c48e:	and    eax,0xdbfa2024
  41c493:	push   ebp
  41c494:	add    DWORD PTR [eax+0x43],ebp
  41c497:	cmp    esi,esp
  41c499:	add    BYTE PTR [edi],al
  41c49b:	cmp    BYTE PTR [esi+0x2d],dh
  41c49e:	ret    
  41c49f:	(bad)  
  41c4a0:	lods   al,BYTE PTR ds:[esi]
  41c4a1:	outs   dx,BYTE PTR ds:[esi]
  41c4a2:	les    esi,FWORD PTR [edx+0x7c]
  41c4a5:	sub    BYTE PTR [ecx+0x42],dh
  41c4a8:	fwait
  41c4a9:	and    BYTE PTR [edi],dl
  41c4ab:	adc    ch,ch
  41c4ad:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41c4af:	jmp    0xcf74:0x95c7c171
  41c4b6:	retf   
  41c4b7:	pop    ss
  41c4b8:	pop    edx
  41c4b9:	adc    BYTE PTR [ecx],cl
  41c4bb:	inc    ebp
  41c4bc:	pop    ecx
  41c4bd:	adc    dh,BYTE PTR [edi-0x2b3b93e8]
  41c4c3:	out    0x53,eax
  41c4c5:	xchg   edx,eax
  41c4c6:	sar    BYTE PTR [edi],1
  41c4c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4c9:	loopne 0x41c461
  41c4cb:	dec    ebx
  41c4cc:	inc    edx
  41c4cd:	mov    dl,BYTE PTR [ebx+0x48]
  41c4d0:	adc    BYTE PTR [ebx-0x4e3bd9b],bl
  41c4d6:	and    ah,BYTE PTR [esi-0x10a6f098]
  41c4dc:	inc    esi
  41c4dd:	fld    st(2)
  41c4df:	(bad)  
  41c4e0:	in     eax,0x73
  41c4e2:	in     al,0x4d
  41c4e4:	in     eax,0xd4
  41c4e6:	xor    esp,DWORD PTR [edx]
  41c4e8:	dec    esi
  41c4e9:	popa   
  41c4ea:	or     ch,BYTE PTR [edi-0x5cd9bf62]
  41c4f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4f1:	xor    al,0x70
  41c4f3:	aad    0x36
  41c4f5:	push   ebp
  41c4f6:	cs stc 
  41c4f8:	daa    
  41c4f9:	in     al,dx
  41c4fa:	inc    ecx
  41c4fb:	and    al,0x5b
  41c4fd:	imul   ebx,ebx,0x3
  41c500:	jae    0x41c521
  41c502:	repnz pushf 
  41c504:	jne    0x41c50f
  41c506:	dec    eax
  41c507:	ins    BYTE PTR es:[edi],dx
  41c508:	xor    eax,0x7fc753fe
  41c50d:	lock jmp 0x41c4d2
  41c510:	sub    BYTE PTR [esi-0x66],cl
  41c513:	add    BYTE PTR [esi-0x6d],dh
  41c516:	mov    eax,ds:0xc2f4d98a
  41c51b:	retf   
  41c51c:	jo     0x41c4ba
  41c51e:	add    dh,bh
  41c520:	dec    eax
  41c521:	loope  0x41c4cb
  41c523:	fbld   TBYTE PTR [esp+eiz*8]
  41c526:	dec    esp
  41c527:	rcl    BYTE PTR [edx],cl
  41c529:	inc    esp
  41c52a:	data16 (bad) 
  41c52c:	lock call 0xd789:0xf81c0c14
  41c534:	imul   ebx,ebp,0x5d
  41c537:	std    
  41c538:	or     al,0xa0
  41c53a:	lods   al,BYTE PTR ds:[esi]
  41c53b:	inc    eax
  41c53c:	inc    edi
  41c53d:	mov    esp,cs
  41c53f:	pop    ebp
  41c540:	push   edi
  41c541:	ficomp DWORD PTR [ebx-0x60]
  41c544:	(bad)  
  41c546:	sbb    DWORD PTR [ecx-0x4],0xffffffb8
  41c54a:	jge    0x41c522
  41c54c:	fist   WORD PTR [ecx+edi*4]
  41c54f:	cdq    
  41c550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c551:	push   esi
  41c552:	scas   eax,DWORD PTR es:[edi]
  41c553:	hlt    
  41c554:	sub    eax,0x4534bc06
  41c559:	in     al,0x3
  41c55b:	inc    eax
  41c55c:	dec    esi
  41c55d:	jecxz  0x41c5d4
  41c55f:	fsubr  DWORD PTR [esi]
  41c561:	inc    eax
  41c562:	inc    esp
  41c563:	inc    ecx
  41c564:	(bad)  
  41c565:	int    0xd7
  41c567:	push   ecx
  41c568:	xor    eax,0xfaea445d
  41c56d:	xor    al,0xf2
  41c56f:	cli    
  41c570:	adc    BYTE PTR [edi-0x47978fcc],cl
  41c576:	jmp    0x41c4ff
  41c578:	jae    0x41c56f
  41c57a:	xchg   esi,eax
  41c57b:	xchg   ebp,eax
  41c57c:	adc    eax,0x926a5144
  41c581:	shl    BYTE PTR [ebp-0x6a],1
  41c584:	loope  0x41c5c5
  41c586:	ficom  DWORD PTR [ebx]
  41c588:	in     al,dx
  41c589:	mov    ch,0x69
  41c58b:	imul   edx,DWORD PTR [ecx+0x56ae7156],0x601b4d5d
  41c595:	bound  ecx,QWORD PTR [ebx+0x1f]
  41c598:	iret   
  41c599:	push   es
  41c59a:	in     al,dx
  41c59b:	in     al,0xc3
  41c59d:	xor    BYTE PTR [eax],bh
  41c59f:	xor    al,ah
  41c5a1:	pop    ecx
  41c5a2:	cmp    BYTE PTR [ebp-0x106dbcf4],ch
  41c5a8:	je     0x41c585
  41c5aa:	add    eax,0x1fdefa51
  41c5af:	pop    ss
  41c5b0:	retf   
  41c5b1:	imul   edx,edi,0xffffffc6
  41c5b4:	pop    ebp
  41c5b5:	in     eax,dx
  41c5b6:	push   esp
  41c5b7:	add    DWORD PTR [edx+0x6e7e74d1],0x6c685c08
  41c5c1:	call   0xd19eaf1d
  41c5c6:	xchg   esi,eax
  41c5c7:	push   esi
  41c5c8:	out    dx,al
  41c5c9:	add    eax,eax
  41c5cb:	xchg   esi,eax
  41c5cc:	out    dx,al
  41c5cd:	inc    esp
  41c5ce:	mov    ecx,0x8c7061a
  41c5d3:	cmp    eax,0xee9e4371
  41c5d8:	nop
  41c5d9:	je     0x41c623
  41c5db:	push   esi
  41c5dc:	cmp    eax,DWORD PTR [ebx]
  41c5de:	int    0x8f
  41c5e0:	not    BYTE PTR [ecx]
  41c5e2:	iret   
  41c5e3:	inc    esi
  41c5e4:	enter  0x62bd,0xdc
  41c5e8:	cdq    
  41c5e9:	mov    dh,0xbd
  41c5eb:	add    eax,DWORD PTR [eax+0x58]
  41c5ee:	fadd   st(6),st
  41c5f0:	in     al,0xa7
  41c5f2:	arpl   WORD PTR [edi+0x68],di
  41c5f5:	lods   al,BYTE PTR ds:[esi]
  41c5f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5f7:	cs std 
  41c5f9:	pop    es
  41c5fa:	aaa    
  41c5fb:	xchg   ebx,eax
  41c5fc:	(bad)  
  41c5fd:	cmp    DWORD PTR [eax+0x6841922b],edx
  41c603:	retf   
  41c604:	bnd jns 0x41c670
  41c607:	mov    ebx,0x793e6a98
  41c60c:	push   0x58dafd1f
  41c611:	test   bh,ch
  41c613:	es (bad) 
  41c615:	daa    
  41c616:	inc    esp
  41c617:	xor    ecx,DWORD PTR [edx+0x3b1d0c49]
  41c61d:	int    0x9d
  41c61f:	punpcklbw mm0,DWORD PTR ds:0x8d405b10
  41c626:	mov    cl,0x27
  41c628:	repnz mov al,0xb9
  41c62b:	adc    al,0x16
  41c62d:	in     eax,dx
  41c62e:	enter  0xebd6,0x20
  41c632:	push   ebp
  41c633:	in     al,dx
  41c634:	sti    
  41c635:	xchg   edx,eax
  41c636:	jo     0x41c630
  41c638:	icebp  
  41c639:	out    dx,al
  41c63a:	jbe    0x41c679
  41c63c:	mov    WORD PTR [edi-0x1d],?
  41c63f:	add    dl,BYTE PTR [ebx-0x7a2ed1c9]
  41c645:	mov    dl,0x19
  41c647:	ja     0x41c677
  41c649:	and    esi,DWORD PTR [ecx-0x589d8ba4]
  41c64f:	outs   dx,DWORD PTR ds:[esi]
  41c650:	hlt    
  41c651:	gs xor eax,0x9d74a11
  41c657:	jmp    0x7d5ee72f
  41c65c:	xor    edx,DWORD PTR [ecx]
  41c65e:	and    edx,ebx
  41c660:	popa   
  41c661:	rsqrtps xmm4,XMMWORD PTR [ebx+0x2c69a09d]
  41c668:	fnsave [esi]
  41c66a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c66b:	jns    0x41c614
  41c66d:	or     dl,BYTE PTR [esi]
  41c66f:	loop   0x41c5f4
  41c671:	outs   dx,DWORD PTR ds:[esi]
  41c672:	and    dh,BYTE PTR [edi+esi*2-0x67267950]
  41c679:	lds    ebx,FWORD PTR [esi+0x7f]
  41c67c:	inc    esi
  41c67d:	mov    edx,0x8faa78ae
  41c682:	sub    dl,BYTE PTR [esi]
  41c684:	cmp    DWORD PTR [ebp+0x47],esp
  41c687:	push   0xab493403
  41c68c:	xor    BYTE PTR [edi],0x75
  41c68f:	test   BYTE PTR [edx-0x57db24be],bl
  41c695:	sbb    DWORD PTR [ebx-0x38],edi
  41c698:	jg     0x41c6b7
  41c69a:	lock popf 
  41c69c:	jno    0x41c666
  41c69e:	enter  0xfefd,0x78
  41c6a2:	lahf   
  41c6a3:	jmp    0x41c677
  41c6a5:	outs   dx,DWORD PTR ds:[esi]
  41c6a6:	jbe    0x41c6b5
  41c6a8:	(bad)  
  41c6a9:	in     eax,dx
  41c6aa:	push   ss
  41c6ab:	xchg   ecx,eax
  41c6ac:	in     eax,dx
  41c6ad:	adc    ebp,esp
  41c6af:	push   ebx
  41c6b0:	movd   edx,mm0
  41c6b3:	dec    ebp
  41c6b4:	pop    ds
  41c6b5:	jmp    0x41c70d
  41c6b7:	ins    BYTE PTR es:[edi],dx
  41c6b8:	fidiv  DWORD PTR [esi]
  41c6ba:	sbb    BYTE PTR [esi],0x87
  41c6bd:	leave  
  41c6be:	and    bl,BYTE PTR [ebx-0x34]
  41c6c1:	add    dh,BYTE PTR [ecx]
  41c6c3:	(bad)  
  41c6c4:	lods   eax,DWORD PTR ds:[esi]
  41c6c5:	sub    eax,DWORD PTR [ecx-0x36722a69]
  41c6cb:	inc    ecx
  41c6cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6cd:	call   0xe3a8:0xe2c5ffaa
  41c6d4:	ds pop ds
  41c6d6:	add    ch,dh
  41c6d8:	fwait
  41c6d9:	es ins BYTE PTR es:[edi],dx
  41c6db:	dec    ebx
  41c6dc:	stos   DWORD PTR es:[edi],eax
  41c6dd:	push   0xffffffe9
  41c6df:	mov    ebp,0x54728b94
  41c6e4:	xor    al,0x7
  41c6e6:	pop    ebp
  41c6e7:	ret    
  41c6e8:	xor    ebx,DWORD PTR [ecx]
  41c6ea:	stos   BYTE PTR es:[edi],al
  41c6eb:	and    al,0xbc
  41c6ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6ee:	repnz fnstcw WORD PTR ss:[ecx+edx*4-0x59]
  41c6f4:	pop    eax
  41c6f5:	or     eax,0xc2e7158f
  41c6fa:	or     eax,0x9d59cf77
  41c6ff:	adc    DWORD PTR [esi+0x6],ebx
  41c702:	push   ss
  41c703:	std    
  41c704:	test   BYTE PTR [ebx+0x5d],al
  41c707:	xchg   ebp,eax
  41c708:	in     eax,0x9c
  41c70a:	aas    
  41c70b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c70c:	in     eax,dx
  41c70d:	imul   edx,DWORD PTR [edx],0x4d745390
  41c713:	js     0x41c75a
  41c715:	out    dx,eax
  41c716:	xor    esp,DWORD PTR [esi+ebp*2]
  41c719:	pop    ecx
  41c71a:	mov    edx,0x82f1dad1
  41c71f:	cmp    BYTE PTR [eax],ah
  41c721:	or     eax,0x1fd450c8
  41c726:	ror    DWORD PTR [ecx],0xa1
  41c729:	mov    edi,0x334f1d68
  41c72e:	shl    DWORD PTR [esi+0x75245ebf],1
  41c734:	retf   0x7
  41c737:	sti    
  41c738:	inc    ebp
  41c739:	into   
  41c73a:	dec    edx
  41c73b:	retf   0x68e8
  41c73e:	(bad)  
  41c73f:	and    eax,0x74a313f4
  41c744:	jmp    0xe665f0a3
  41c749:	lds    eax,FWORD PTR [eax]
  41c74b:	pcmpgtb mm2,mm1
  41c74e:	scas   eax,DWORD PTR es:[edi]
  41c74f:	iret   
  41c750:	and    ch,BYTE PTR [edx-0x6b]
  41c753:	je     0x41c777
  41c755:	push   esi
  41c756:	iret   
  41c757:	pop    ds
  41c758:	jle    0x41c7a7
  41c75a:	xchg   edx,eax
  41c75b:	mov    ds:0x4ad9cdcb,al
  41c760:	aad    0xd0
  41c762:	sub    BYTE PTR [esi*2-0x2b75e54],bh
  41c769:	push   cs
  41c76a:	icebp  
  41c76b:	mov    edi,0xe118a763
  41c770:	inc    ecx
  41c771:	mov    es,WORD PTR [eax]
  41c773:	adc    al,0x51
  41c775:	jl     0x41c6fd
  41c777:	jmp    0x293c1185
  41c77c:	fst    QWORD PTR [edi-0x17b3d010]
  41c782:	test   eax,0xadd7271c
  41c787:	cmp    eax,0xcf88414e
  41c78c:	pop    edx
  41c78d:	call   0xb9558e9b
  41c792:	je     0x41c720
  41c794:	in     al,0x88
  41c796:	test   eax,0x1472af29
  41c79b:	loop   0x41c7db
  41c79d:	lods   al,BYTE PTR ds:[esi]
  41c79e:	shr    bl,cl
  41c7a0:	xchg   cl,dh
  41c7a2:	sti    
  41c7a3:	and    DWORD PTR [eax+esi*1+0x52],eax
  41c7a7:	out    0x8f,al
  41c7a9:	mov    ds:0xa616fc99,eax
  41c7ae:	jns    0x41c762
  41c7b0:	ror    DWORD PTR [ebp+0x5f],0x43
  41c7b4:	sar    DWORD PTR ds:0xc73ade5d,1
  41c7ba:	std    
  41c7bb:	ja     0x41c78a
  41c7bd:	inc    edi
  41c7be:	popf   
  41c7bf:	enter  0xf124,0xcd
  41c7c3:	or     BYTE PTR [ecx],bl
  41c7c5:	aad    0x65
  41c7c7:	xor    BYTE PTR [edi],dh
  41c7c9:	and    eax,0x6415382b
  41c7ce:	jbe    0x41c7e3
  41c7d0:	ret    0x5405
  41c7d3:	mov    esi,0x17a235a
  41c7d8:	mov    ds:0xf5918dcb,al
  41c7dd:	outs   dx,DWORD PTR ds:[esi]
  41c7de:	xchg   esp,eax
  41c7df:	fsubr  DWORD PTR [eax+0x23705b25]
  41c7e5:	int3   
  41c7e6:	clc    
  41c7e7:	jno    0x41c827
  41c7e9:	mov    esp,0x41a7052c
  41c7ee:	test   DWORD PTR [edx],ebx
  41c7f0:	xor    edi,esi
  41c7f2:	push   ds
  41c7f3:	mov    ebp,0x88c4c517
  41c7f8:	xor    al,0xd3
  41c7fa:	rcl    edx,0x82
  41c7fd:	shr    BYTE PTR [esi],0x3
  41c800:	stc    
  41c801:	mov    DWORD PTR [eax-0x34c607d3],esp
  41c807:	mov    bl,0x22
  41c809:	inc    edx
  41c80a:	push   edi
  41c80b:	in     eax,0x51
  41c80d:	inc    esi
  41c80e:	out    dx,eax
  41c80f:	imul   esi,DWORD PTR [ebx+0x20f862af],0x1d566e71
  41c819:	xlat   BYTE PTR ds:[ebx]
  41c81a:	repnz xchg bl,cl
  41c81d:	add    BYTE PTR [eax+ebp*8+0x67],bh
  41c821:	add    edi,DWORD PTR [esi+edx*8+0x44]
  41c825:	cmc    
  41c826:	adc    BYTE PTR [ecx*2+0x3ee81b32],0x34
  41c82e:	xchg   ecx,eax
  41c82f:	fnstenv [esi-0x8]
  41c832:	inc    esi
  41c833:	sbb    BYTE PTR [esi],0xaf
  41c836:	ds pop es
  41c838:	mov    ecx,0x3c153d61
  41c83d:	mov    bl,bh
  41c83f:	ins    DWORD PTR es:[edi],dx
  41c840:	neg    DWORD PTR [edi]
  41c842:	sub    al,0xf0
  41c844:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c845:	iret   
  41c846:	cmp    ebx,DWORD PTR [edx]
  41c848:	sbb    BYTE PTR [edi+0x3e075901],ch
  41c84e:	fisttp WORD PTR [ebp+ecx*1-0x68]
  41c852:	loopne 0x41c8b4
  41c854:	out    dx,al
  41c855:	xchg   ebx,eax
  41c856:	(bad)  
  41c857:	repz pop ebx
  41c859:	pop    ss
  41c85a:	enter  0xa68c,0x8d
  41c85e:	call   0xd9c6a407
  41c863:	inc    ebp
  41c864:	ss stos DWORD PTR es:[edi],eax
  41c866:	xchg   esp,eax
  41c867:	(bad)
  41c86a:	push   ds
  41c86b:	pop    es
  41c86c:	rcl    bl,0x2d
  41c86f:	in     eax,0xde
  41c871:	jae    0x41c8b2
  41c873:	mov    ecx,0x6709dbb5
  41c878:	arpl   bp,si
  41c87a:	dec    ebx
  41c87b:	(bad)  
  41c87c:	inc    esi
  41c87d:	mov    BYTE PTR [edi-0xcbb7f88],dh
  41c883:	add    ecx,DWORD PTR [edi-0x65]
  41c886:	out    0xf9,al
  41c888:	inc    edi
  41c889:	inc    eax
  41c88a:	or     BYTE PTR [edi+0xb],ah
  41c88d:	inc    esp
  41c88f:	ja     0x41c8df
  41c891:	pop    ebx
  41c892:	in     al,0xaf
  41c894:	mov    al,ds:0xe58f1c6e
  41c899:	rcr    bl,1
  41c89b:	mov    ecx,0xaeb4394c
  41c8a1:	adc    ebx,DWORD PTR ds:0x641faeeb
  41c8a7:	mov    ch,0xae
  41c8a9:	aaa    
  41c8aa:	retf   
  41c8ab:	xor    eax,0xc87b4395
  41c8b0:	xchg   ebx,eax
  41c8b1:	jmp    0x6307:0xb5059bf5
  41c8b8:	inc    eax
  41c8b9:	shr    BYTE PTR [edi-0x20],1
  41c8bc:	or     eax,DWORD PTR [ecx-0xdf807fc]
  41c8c2:	add    esi,eax
  41c8c4:	cmovl  edi,DWORD PTR [ebx+eax*1+0x1570acef]
  41c8cc:	jno    0x41c948
  41c8ce:	icebp  
  41c8cf:	jbe    0x41c94f
  41c8d1:	push   ss
  41c8d2:	sbb    edi,DWORD PTR ds:0x9cb0047f
  41c8d8:	push   ds
  41c8d9:	inc    ebx
  41c8da:	sub    DWORD PTR [ecx],ebp
  41c8dc:	add    ecx,ecx
  41c8de:	dec    edx
  41c8df:	je     0x41c8a2
  41c8e1:	xchg   ebx,ecx
  41c8e3:	(bad)  
  41c8e4:	loopne 0x41c92e
  41c8e6:	outs   dx,DWORD PTR ds:[esi]
  41c8e7:	dec    ebx
  41c8e8:	cmp    ebx,DWORD PTR [eax+0x403f7180]
  41c8ee:	sub    ebx,eax
  41c8f0:	mov    cl,0xa0
  41c8f2:	neg    BYTE PTR [edi]
  41c8f4:	das    
  41c8f5:	cs mov esi,0xe99a313a
  41c8fb:	jl     0x41c887
  41c8fd:	and    DWORD PTR [edi],edx
  41c8ff:	scas   eax,DWORD PTR es:[edi]
  41c900:	pushf  
  41c901:	shl    BYTE PTR [eax],1
  41c903:	mov    ds:0x2d38431d,eax
  41c908:	int    0xe1
  41c90a:	sbb    edx,DWORD PTR [esi+0x2b]
  41c90d:	jl     0x41c920
  41c90f:	xor    al,0x1a
  41c911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c912:	sbb    al,0x5
  41c914:	push   eax
  41c915:	push   ds
  41c916:	jns    0x41c8a2
  41c918:	arpl   si,di
  41c91a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c91b:	mov    dh,0x30
  41c91d:	sbb    BYTE PTR [eax],0xc3
  41c920:	sub    eax,0xf0a2e94c
  41c925:	out    dx,eax
  41c926:	fs icebp 
  41c928:	arpl   WORD PTR [ebx-0x2138318f],dx
  41c92e:	lds    edx,FWORD PTR [esp+eax*2]
  41c931:	and    BYTE PTR [ecx-0x2a],ah
  41c934:	push   ebx
  41c935:	jno    0x41c9ad
  41c937:	nop
  41c938:	inc    edi
  41c939:	fnsave [ebx-0x40603dc6]
  41c93f:	dec    eax
  41c940:	xchg   edi,ebp
  41c942:	bound  esp,QWORD PTR [ecx]
  41c944:	loop   0x41c928
  41c946:	and    BYTE PTR [edi-0x67b58b86],dh
  41c94c:	lock retf 
  41c94e:	(bad)  
  41c94f:	and    al,0xf8
  41c951:	add    cl,BYTE PTR [ecx+0x43]
  41c954:	add    edx,0xffffffa0
  41c957:	hlt    
  41c958:	cmc    
  41c959:	mov    bl,BYTE PTR [ecx]
  41c95b:	dec    ebp
  41c95c:	sbb    ebx,DWORD PTR [ebp-0x18]
  41c95f:	push   0x82e74bc0
  41c964:	or     al,0x3c
  41c966:	arpl   ax,sp
  41c968:	lahf   
  41c969:	mov    ebx,0xb01d4763
  41c96e:	xchg   ebx,eax
  41c96f:	push   cs
  41c970:	cmp    eax,0x7d971519
  41c975:	jecxz  0x41c970
  41c977:	es xchg edx,eax
  41c979:	ins    BYTE PTR es:[edi],dx
  41c97a:	pushf  
  41c97b:	mov    ds:0x6e869633,al
  41c980:	mov    al,ds:0xaa2d2f6c
  41c985:	mov    bl,0xd3
  41c987:	std    
  41c988:	int3   
  41c989:	scas   eax,DWORD PTR es:[edi]
  41c98a:	adc    al,0x34
  41c98c:	mov    fs,WORD PTR [esi]
  41c98e:	fild   DWORD PTR [ebp-0x536fbb9e]
  41c994:	xchg   BYTE PTR [eax],ch
  41c996:	test   ch,0xec
  41c999:	add    BYTE PTR [edx],dh
  41c99b:	or     esp,edi
  41c99d:	call   0xe2948dc1
  41c9a2:	repz cwde 
  41c9a4:	xor    BYTE PTR [edx],bh
  41c9a6:	sti    
  41c9a7:	and    ecx,eax
  41c9a9:	icebp  
  41c9aa:	adc    dh,BYTE PTR [ebp+0x54]
  41c9ad:	fsub   st(1),st
  41c9af:	cmp    BYTE PTR [eax-0x3a],cl
  41c9b2:	outs   dx,BYTE PTR ds:[esi]
  41c9b3:	fmul   DWORD PTR [esp+edi*8]
  41c9b6:	mov    eax,ds:0xe6d67172
  41c9bb:	(bad)  
  41c9bd:	dec    eax
  41c9be:	mov    dh,0xa2
  41c9c0:	fs pop ss
  41c9c2:	jg     0x41c9c0
  41c9c4:	int    0x3c
  41c9c6:	pop    es
  41c9c7:	push   es
  41c9c8:	mov    ah,BYTE PTR [ebp-0x2fcc5d0a]
  41c9ce:	fs jae 0x41ca0d
  41c9d1:	xor    al,0xc2
  41c9d3:	aad    0x82
  41c9d5:	xor    dh,BYTE PTR [ebp+eiz*8+0x3b]
  41c9d9:	and    eax,0xd37ba449
  41c9de:	push   ebx
  41c9df:	fld    DWORD PTR [esi+eiz*1-0x72bfb646]
  41c9e6:	mov    cl,BYTE PTR [edi-0x243b9c52]
  41c9ec:	in     eax,dx
  41c9ed:	push   0x66
  41c9ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9f0:	xor    eax,0xf31076ae
  41c9f5:	adc    DWORD PTR [edi-0x5af07aec],ebx
  41c9fb:	icebp  
  41c9fc:	or     al,0x5a
  41c9fe:	or     eax,0x78f8175b
  41ca03:	push   es
  41ca04:	bound  edx,QWORD PTR [edx+0x5a]
  41ca07:	lods   al,BYTE PTR ds:[esi]
  41ca08:	gs icebp 
  41ca0a:	sbb    ebx,esi
  41ca0c:	popa   
  41ca0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca0e:	gs adc eax,0xd1a86ce1
  41ca14:	mov    es,esi
  41ca16:	or     ch,dl
  41ca18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca19:	xchg   BYTE PTR [ecx],bh
  41ca1b:	or     DWORD PTR [ecx+0x147b5324],ebp
  41ca21:	push   ss
  41ca22:	sbb    al,0x11
  41ca24:	pop    ss
  41ca25:	mov    bl,0xbb
  41ca27:	mov    cs:0x6f87288c,al
  41ca2d:	jmp    0x4420fb20
  41ca32:	loop   0x41ca91
  41ca34:	ins    BYTE PTR es:[edi],dx
  41ca35:	nop
  41ca36:	fbstp  TBYTE PTR ds:0x7a80bf58
  41ca3c:	repz lahf 
  41ca3e:	dec    eax
  41ca3f:	inc    edx
  41ca40:	jecxz  0x41c9e4
  41ca42:	ins    BYTE PTR es:[edi],dx
  41ca43:	push   edi
  41ca44:	sub    DWORD PTR [esi],esi
  41ca46:	cli    
  41ca47:	mov    ecx,0x1342b183
  41ca4c:	mov    ebp,0x3222d347
  41ca51:	xlat   BYTE PTR ds:[ebx]
  41ca52:	pop    eax
  41ca53:	jmp    0x41ca3c
  41ca55:	das    
  41ca56:	mov    ax,ds:0x1fddae76
  41ca5c:	add    esp,edx
  41ca5e:	lods   eax,DWORD PTR ds:[esi]
  41ca5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca60:	ins    DWORD PTR es:[edi],dx
  41ca61:	outs   dx,BYTE PTR gs:[esi]
  41ca63:	out    0x6a,al
  41ca65:	xchg   ebp,eax
  41ca66:	mov    dh,0x64
  41ca68:	sbb    DWORD PTR [ecx+ecx*4+0x3a15f373],esp
  41ca6f:	sub    al,0x2d
  41ca71:	and    al,0xa9
  41ca73:	cmp    al,0x61
  41ca75:	lahf   
  41ca76:	push   esp
  41ca77:	jns    0x41ca24
  41ca79:	pop    edx
  41ca7a:	xor    eax,0x63676972
  41ca7f:	daa    
  41ca80:	jno    0x41ca38
  41ca82:	xchg   BYTE PTR [edi+0x56],ah
  41ca85:	int    0xaa
  41ca87:	std    
  41ca88:	enter  0xc336,0x81
  41ca8c:	jae    0x41ca9e
  41ca8e:	lods   al,BYTE PTR ds:[si]
  41ca90:	dec    edi
  41ca91:	and    BYTE PTR [ebx+0x55fc36b],ch
  41ca97:	add    BYTE PTR [edx+edi*8],0x64
  41ca9b:	nop
  41ca9c:	pushf  
  41ca9d:	icebp  
  41ca9e:	out    0xc3,eax
  41caa0:	fidiv  DWORD PTR [edx+0x13106a4f]
  41caa6:	into   
  41caa7:	sub    al,0x9e
  41caa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caaa:	fdivr  st(6),st
  41caac:	cmp    BYTE PTR [eax-0x311fbdb3],dl
  41cab2:	dec    ebp
  41cab3:	call   0x3b3a472c
  41cab8:	xchg   ebp,eax
  41cab9:	mov    eax,0xe837508c
  41cabe:	sub    dl,BYTE PTR [edx+0x2549e000]
  41cac4:	fisttp QWORD PTR [edx+0x7e70e190]
  41caca:	popa   
  41cacb:	xlat   BYTE PTR ds:[ebx]
  41cacc:	add    esp,DWORD PTR [eax-0x611c52f0]
  41cad2:	xchg   edi,eax
  41cad3:	push   ds
  41cad4:	lds    edx,FWORD PTR [ebx+0xf]
  41cad7:	inc    ecx
  41cad8:	fs into 
  41cada:	sbb    eax,0x63c8e99e
  41cadf:	icebp  
  41cae0:	cmp    DWORD PTR [esi+0x7f],ebp
  41cae3:	add    ah,BYTE PTR [edi-0x419b4263]
  41cae9:	lahf   
  41caea:	ret    
  41caeb:	in     eax,0x4d
  41caed:	pop    ds
  41caee:	mov    esi,0xf88db487
  41caf3:	(bad)  [esi+0x6f191770]
  41caf9:	mov    dl,0x8b
  41cafb:	push   0x2f265e0
  41cb00:	xchg   edx,eax
  41cb01:	jl     0x41cb43
  41cb03:	loop   0x41cb49
  41cb05:	add    al,0x59
  41cb07:	sbb    al,0xd
  41cb09:	pop    ecx
  41cb0a:	sar    BYTE PTR [ebx],cl
  41cb0c:	adc    DWORD PTR [edx+edi*4],ecx
  41cb0f:	dec    esp
  41cb10:	mov    ebp,0xfbdb974c
  41cb15:	in     eax,0x42
  41cb17:	add    ebp,DWORD PTR [eax+edx*8]
  41cb1a:	cmp    DWORD PTR [edx+ebx*8-0x20],esi
  41cb1e:	ds sbb edi,0x1e
  41cb22:	lds    edx,FWORD PTR [ebx]
  41cb24:	dec    esi
  41cb25:	or     BYTE PTR [ebp-0x45],dl
  41cb28:	push   ebp
  41cb29:	test   al,0x43
  41cb2b:	fs sub al,0xe9
  41cb2e:	jmp    0x41cb9e
  41cb30:	(bad)  
  41cb31:	and    eax,0xa38a1065
  41cb36:	sub    BYTE PTR [edi+0x28],dh
  41cb39:	xchg   ebx,eax
  41cb3a:	add    DWORD PTR [edi-0x4c940d77],ebx
  41cb40:	sar    DWORD PTR [ebp-0xce29c73],cl
  41cb46:	lods   eax,DWORD PTR es:[esi]
  41cb48:	dec    ebx
  41cb49:	xchg   DWORD PTR [ebp+0x77f2be5a],edi
  41cb4f:	(bad)  
  41cb50:	cld    
  41cb51:	cwde   
  41cb52:	dec    ecx
  41cb53:	ret    0x96bb
  41cb56:	jmp    0xe600:0xe7bc0979
  41cb5d:	xchg   esi,eax
  41cb5e:	stos   DWORD PTR es:[edi],eax
  41cb5f:	adc    esi,DWORD PTR [ecx+0x3e]
  41cb62:	(bad)  
  41cb63:	call   edi
  41cb65:	popf   
  41cb66:	mov    edx,0xb4f249ba
  41cb6b:	mov    cl,0x92
  41cb6d:	jns    0x41cb88
  41cb6f:	call   FWORD PTR [ebp+0x16]
  41cb72:	inc    edx
  41cb73:	cmp    edx,DWORD PTR [edx]
  41cb75:	imul   BYTE PTR [ebx-0x57]
  41cb78:	in     al,0x9c
  41cb7a:	repz sub al,0x50
  41cb7d:	lock fwait
  41cb7f:	add    BYTE PTR [edx+0x690eae5d],dh
  41cb85:	(bad)  
  41cb86:	je     0x41cb95
  41cb88:	jl     0x41cb4d
  41cb8a:	or     BYTE PTR [ebx+0x2b12e921],ah
  41cb90:	mov    dl,BYTE PTR [ecx+0x74]
  41cb93:	leave  
  41cb94:	adc    BYTE PTR [ecx+0x7b],cl
  41cb97:	sub    DWORD PTR ds:0x4f5c8ab4,eax
  41cb9d:	mov    bh,0xe7
  41cb9f:	push   ebp
  41cba0:	scas   eax,DWORD PTR es:[edi]
  41cba1:	or     edx,DWORD PTR [ecx-0x1c]
  41cba4:	(bad)  
  41cba6:	aam    0xcd
  41cba8:	bound  esi,QWORD PTR [edi]
  41cbaa:	pop    ss
  41cbab:	or     DWORD PTR [ebx+ebx*8],edx
  41cbae:	pop    esp
  41cbaf:	ret    
  41cbb0:	and    al,0xfc
  41cbb2:	jne    0x41cc32
  41cbb4:	test   DWORD PTR [ebx+0x64f750ea],eax
  41cbba:	std    
  41cbbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbbc:	pop    eax
  41cbbd:	in     eax,dx
  41cbbe:	jbe    0x41cbe5
  41cbc0:	cwde   
  41cbc1:	push   ebx
  41cbc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbc3:	sbb    DWORD PTR [ebx-0x75606d12],0x1a
  41cbca:	repnz cmp ebp,DWORD PTR [ebp-0x5e]
  41cbce:	jae    0x41cbcf
  41cbd0:	sbb    al,0x1f
  41cbd2:	std    
  41cbd3:	ret    0xc53d
  41cbd6:	fmulp  st(4),st
  41cbd8:	mov    ds:0x77ccd1e,eax
  41cbdd:	dec    edx
  41cbde:	push   cs
  41cbdf:	inc    ebp
  41cbe0:	adc    al,0x4b
  41cbe2:	dec    ecx
  41cbe3:	and    eax,0x53bcfdbf
  41cbe8:	jne    0x41cc2a
  41cbea:	mov    BYTE PTR [ecx+edi*1-0x56],bl
  41cbee:	adc    esi,edi
  41cbf0:	shr    DWORD PTR ds:0xd4a713a5,1
  41cbf6:	mov    cs,eax
  41cbf8:	retf   0x6ff0
  41cbfb:	popf   
  41cbfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbfd:	xchg   esp,eax
  41cbfe:	mov    ds:0x22f0c96d,eax
  41cc03:	jns    0x41cc7a
  41cc05:	jle    0x41cc04
  41cc07:	dec    edx
  41cc08:	das    
  41cc09:	and    eax,0x2ea1cb01
  41cc0e:	sar    ah,cl
  41cc10:	scas   eax,DWORD PTR es:[edi]
  41cc11:	add    al,0x3b
  41cc13:	adc    ch,BYTE PTR [ebp-0x369a5750]
  41cc19:	and    al,0xd
  41cc1b:	mov    al,0xc7
  41cc1d:	push   0xfffffffb
  41cc1f:	mov    edx,0xc28f7211
  41cc24:	lock push ebx
  41cc26:	push   0x22
  41cc28:	jae    0x41cc52
  41cc2a:	ins    DWORD PTR es:[edi],dx
  41cc2b:	icebp  
  41cc2c:	sti    
  41cc2d:	or     BYTE PTR [edx+0x26],dh
  41cc30:	mov    ecx,0x52c99dfd
  41cc35:	jp     0x41ccae
  41cc37:	mov    bh,0x80
  41cc39:	into   
  41cc3a:	mov    al,ds:0xc4156039
  41cc3f:	mov    ch,0x85
  41cc41:	retf   
  41cc42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc43:	lahf   
  41cc44:	scas   al,BYTE PTR es:[edi]
  41cc45:	daa    
  41cc46:	pop    ss
  41cc47:	lods   eax,DWORD PTR ds:[esi]
  41cc48:	mov    al,0x45
  41cc4a:	addr16 dec edx
  41cc4c:	add    DWORD PTR [ecx+0x748893b6],esp
  41cc52:	xchg   esp,eax
  41cc53:	pusha  
  41cc54:	xor    bh,BYTE PTR [ecx-0x78]
  41cc57:	pop    ss
  41cc58:	icebp  
  41cc59:	and    DWORD PTR [ebx],0x53
  41cc5c:	test   al,ah
  41cc5e:	sbb    esp,edx
  41cc60:	xor    al,0xa7
  41cc62:	dec    eax
  41cc63:	lea    edx,[esi+0x16]
  41cc66:	pop    ds
  41cc67:	push   ss
  41cc68:	inc    esp
  41cc69:	cmp    esi,DWORD PTR [edx+0x51]
  41cc6c:	jmp    0x4067f10
  41cc71:	cmc    
  41cc72:	mov    ?,WORD PTR [ecx+0x2d983fb9]
  41cc78:	call   0x6c1b:0x6f08b23d
  41cc7f:	mov    dl,0x1e
  41cc81:	sbb    esp,ebx
  41cc83:	cmp    edx,DWORD PTR [ecx]
  41cc85:	and    ecx,DWORD PTR [edx+esi*2]
  41cc88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc89:	or     ebx,DWORD PTR [edi-0x773f7653]
  41cc8f:	jo     0x41cc64
  41cc91:	out    dx,eax
  41cc92:	dec    ecx
  41cc93:	pop    si
  41cc95:	gs repnz fcmove st,st(6)
  41cc99:	push   0x922ac83e
  41cc9e:	idiv   DWORD PTR [ecx]
  41cca0:	fisttp DWORD PTR [ecx-0x1cf1e159]
  41cca6:	and    eax,0x58
  41cca9:	push   ss
  41ccaa:	jae    0x41cc43
  41ccac:	repz adc ah,BYTE PTR [edi]
  41ccaf:	mov    eax,ds:0xe26f6a8e
  41ccb4:	rol    BYTE PTR [esi],cl
  41ccb6:	add    DWORD PTR ds:0x199cf22c,ecx
  41ccbc:	repz shl DWORD PTR [ecx],1
  41ccbf:	push   ds
  41ccc0:	out    dx,eax
  41ccc1:	xor    BYTE PTR ds:0x6b62511,bh
  41ccc7:	(bad)  
  41ccc8:	out    dx,al
  41ccc9:	stos   BYTE PTR es:[edi],al
  41ccca:	mov    dh,0xac
  41cccc:	jl     0x41ccb0
  41ccce:	fwait
  41cccf:	add    DWORD PTR [edi+eax*2],edx
  41ccd2:	pop    ds
  41ccd3:	(bad)  [ebx]
  41ccd5:	test   dh,al
  41ccd7:	adc    eax,0xbe047c8e
  41ccdc:	pop    es
  41ccdd:	cld    
  41ccde:	or     al,0x36
  41cce0:	add    eax,DWORD PTR [ebx+0x5b8aeac2]
  41cce6:	pop    ds
  41cce7:	push   ebp
  41cce8:	cdq    
  41cce9:	and    al,0xd5
  41cceb:	scas   eax,DWORD PTR es:[edi]
  41ccec:	in     eax,dx
  41cced:	iret   
  41ccee:	out    0xf7,eax
  41ccf0:	xor    al,0x95
  41ccf2:	fisub  WORD PTR [ecx+0x203aac70]
  41ccf8:	sub    DWORD PTR [ecx+0x12],ebp
  41ccfb:	jmp    0xcab4:0x6c94f063
  41cd02:	jl     0x41ccad
  41cd04:	jnp    0x41ccd0
  41cd06:	je     0x41cd7b
  41cd08:	adc    bl,BYTE PTR [esi+eiz*4]
  41cd0b:	cwde   
  41cd0c:	fistp  QWORD PTR [edx-0x7f]
  41cd0f:	ds push esi
  41cd11:	mov    ch,0xd2
  41cd13:	test   BYTE PTR [ebp-0x2b5f5da7],dl
  41cd19:	aam    0xea
  41cd1b:	and    eax,0x51724d2b
  41cd20:	scas   eax,DWORD PTR es:[edi]
  41cd21:	sub    DWORD PTR [ecx],eax
  41cd23:	gs imul ecx,esp,0x7de0af0
  41cd2a:	cmp    ebp,DWORD PTR [ecx]
  41cd2c:	or     cl,BYTE PTR [edx-0x5541b909]
  41cd32:	test   BYTE PTR [eax],bl
  41cd34:	push   es
  41cd35:	loope  0x41cd7a
  41cd37:	mov    ebp,0x7adc6fb0
  41cd3c:	aad    0xa6
  41cd3e:	fld    TBYTE PTR ds:0x32dc14bc
  41cd44:	sub    edx,DWORD PTR [eax+0x25]
  41cd47:	add    bh,bl
  41cd49:	and    BYTE PTR [eax-0x19],dl
  41cd4c:	fsubr  DWORD PTR [eax]
  41cd4e:	gs cli 
  41cd50:	mov    ah,0xa2
  41cd52:	and    edi,DWORD PTR [eax+0x20ecc3c1]
  41cd58:	(bad)  [edx]
  41cd5a:	jmp    0xce4e:0xd04315aa
  41cd61:	imul   BYTE PTR [edx+0x29]
  41cd64:	retf   0x4519
  41cd67:	shr    BYTE PTR [eax+0x1397235b],0xb6
  41cd6e:	inc    ebx
  41cd6f:	stc    
  41cd70:	fadd   QWORD PTR [edi+0x3f]
  41cd73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd74:	mov    esp,0x7d60e2f1
  41cd79:	ds (bad) 
  41cd7b:	frstor [eax-0x2]
  41cd7e:	xchg   esi,eax
  41cd7f:	ror    bl,0xe2
  41cd82:	fs push ebp
  41cd84:	mov    ebp,0xc16e56d4
  41cd89:	popf   
  41cd8a:	sbb    ebx,DWORD PTR [ebx+0x69]
  41cd8d:	cmp    al,0x56
  41cd8f:	adc    bh,BYTE PTR [esi]
  41cd91:	ins    BYTE PTR es:[edi],dx
  41cd92:	sti    
  41cd93:	sahf   
  41cd94:	lds    ebp,FWORD PTR [edi-0x26]
  41cd97:	(bad)  
  41cd98:	popf   
  41cd99:	jl     0x41cd67
  41cd9b:	sub    al,0xec
  41cd9d:	sbb    DWORD PTR [eax],esi
  41cd9f:	pop    eax
  41cda0:	enter  0x44c4,0x74
  41cda4:	fisttp DWORD PTR [ebp-0x72]
  41cda7:	(bad)  
  41cda8:	adc    eax,0x1db60f79
  41cdad:	ja     0x41cdda
  41cdaf:	lea    eax,[edx-0x2f]
  41cdb2:	lock loop 0x41cd54
  41cdb5:	mov    ah,0xaf
  41cdb7:	inc    ebp
  41cdb8:	mov    edi,0x13f18af5
  41cdbd:	mov    bh,0xbd
  41cdbf:	and    eax,DWORD PTR [ebx+0x11]
  41cdc2:	popa   
  41cdc3:	dec    esp
  41cdc4:	hlt    
  41cdc5:	gs jp  0x41ce26
  41cdc8:	bound  edx,QWORD PTR [ecx-0x68]
  41cdcb:	xchg   esi,eax
  41cdcc:	aas    
  41cdcd:	fwait
  41cdce:	cmp    dl,BYTE PTR [ebx]
  41cdd0:	mov    ebp,0x9c4bc30d
  41cdd5:	push   edi
  41cdd6:	ja     0x41ce2e
  41cdd8:	scas   al,BYTE PTR es:[edi]
  41cdd9:	and    DWORD PTR [edx],edx
  41cddb:	cdq    
  41cddc:	xor    DWORD PTR [esi],edi
  41cdde:	jb     0x41cddf
  41cde0:	push   ebp
  41cde1:	outs   dx,DWORD PTR ds:[esi]
  41cde2:	mov    BYTE PTR [ecx-0x1ef20b24],dl
  41cde8:	add    al,ah
  41cdea:	xchg   esi,eax
  41cdeb:	or     al,0xd
  41cded:	jne    0x41cdba
  41cdef:	jle    0x41ce44
  41cdf1:	xor    DWORD PTR [edx+0x77],0xca9133b4
  41cdf8:	jg     0x41cdfe
  41cdfa:	sub    ch,BYTE PTR [eax+0x27]
  41cdfd:	pusha  
  41cdfe:	or     BYTE PTR [esi-0x54],bh
  41ce01:	daa    
  41ce02:	push   ebp
  41ce03:	daa    
  41ce04:	out    dx,al
  41ce05:	mov    bl,0xd5
  41ce07:	fcomp  DWORD PTR [esp+esi*4+0xc]
  41ce0b:	jmp    0xfef2:0xac27b7e3
  41ce12:	and    eax,0xef146356
  41ce17:	ret    0x2502
  41ce1a:	jae    0x41ce16
  41ce1c:	dec    DWORD PTR [esi+0x6c]
  41ce1f:	addr16 jle 0x41ce4b
  41ce22:	dec    esi
  41ce23:	dec    esi
  41ce24:	sub    al,0xcf
  41ce26:	push   0x48b96255
  41ce2b:	in     eax,0xc
  41ce2d:	push   ss
  41ce2e:	iret   
  41ce2f:	lods   al,BYTE PTR ds:[esi]
  41ce30:	cdq    
  41ce31:	ins    DWORD PTR es:[edi],dx
  41ce32:	push   edx
  41ce33:	sbb    al,0x6e
  41ce35:	and    ah,BYTE PTR [ebp+edi*4+0x4d]
  41ce39:	add    al,0xa9
  41ce3b:	retf   
  41ce3c:	xchg   esp,eax
  41ce3d:	jb     0x41ce37
  41ce3f:	mov    ds:0x80d13345,al
  41ce44:	jge    0x41ce94
  41ce46:	gs out dx,eax
  41ce48:	cdq    
  41ce49:	arpl   WORD PTR [esi],bx
  41ce4b:	push   esi
  41ce4c:	mul    ch
  41ce4e:	dec    ebx
  41ce4f:	lods   al,BYTE PTR ds:[esi]
  41ce50:	adc    al,0x13
  41ce52:	xor    DWORD PTR [ebx+0x12],ebx
  41ce55:	pop    eax
  41ce56:	push   0xffffff93
  41ce58:	clc    
  41ce59:	mov    bl,0x77
  41ce5b:	cmp    DWORD PTR es:[edi-0x56fa20b8],edi
  41ce62:	repnz sets BYTE PTR [ebx]
  41ce66:	shl    BYTE PTR [edi+esi*4-0x426862cf],cl
  41ce6d:	add    DWORD PTR [esp+esi*1-0x709d985e],esp
  41ce74:	repz cdq 
  41ce76:	test   BYTE PTR [ebx+0x46],bh
  41ce79:	cwde   
  41ce7a:	lahf   
  41ce7b:	mov    esi,DWORD PTR [ebx+0x7c]
  41ce7e:	cdq    
  41ce7f:	mov    ah,0xff
  41ce81:	ss cdq 
  41ce83:	outs   dx,BYTE PTR ds:[esi]
  41ce84:	fnstenv [ebp-0x71593ac3]
  41ce8a:	and    al,0x72
  41ce8c:	add    edi,0xc0fe7f2c
  41ce92:	int    0x3d
  41ce94:	mov    dh,0xc
  41ce96:	lock add eax,DWORD PTR [esi-0x5d69bacf]
  41ce9d:	mov    ecx,0x83a16cb4
  41cea2:	mov    eax,gs:0x62a5d502
  41cea8:	pop    esp
  41cea9:	mov    ds:0xdc225c5c,al
  41ceae:	xor    DWORD PTR [edi+0x35dd49a3],eax
  41ceb4:	loop   0x41ce8f
  41ceb6:	cmp    dl,BYTE PTR [edi-0x32254add]
  41cebc:	inc    ebp
  41cebd:	pop    ebp
  41cebe:	je     0x41ce80
  41cec0:	leave  
  41cec1:	push   ecx
  41cec2:	xchg   ecx,eax
  41cec3:	or     al,0xc9
  41cec5:	arpl   WORD PTR [ecx+0x79fddcf7],bx
  41cecb:	mov    ds:0xd60038c0,eax
  41ced0:	ficomp DWORD PTR [edi]
  41ced2:	out    dx,al
  41ced3:	loopne 0x41ce70
  41ced5:	int    0x4f
  41ced7:	xor    bl,BYTE PTR [edi]
  41ced9:	and    al,0x28
  41cedb:	call   0x22fe:0x7dc36194
  41cee2:	not    BYTE PTR [edx+eiz*4+0x186c4dc9]
  41cee9:	sbb    esp,DWORD PTR [edi-0x4ccf315c]
  41ceef:	hlt    
  41cef0:	xchg   esp,eax
  41cef1:	pop    edi
  41cef2:	mov    esi,0xe29b4363
  41cef7:	mov    dh,0x58
  41cef9:	pusha  
  41cefa:	adc    bh,cl
  41cefc:	iret   
  41cefd:	fcomp  st(4)
  41ceff:	psubusb mm6,QWORD PTR [ecx+eiz*4]
  41cf03:	and    BYTE PTR [ebp+0x37f08907],dh
  41cf09:	int3   
  41cf0a:	adc    al,0xbc
  41cf0c:	fst    st(5)
  41cf0e:	das    
  41cf0f:	fisubr DWORD PTR [edx-0x42110f72]
  41cf15:	lods   al,BYTE PTR ds:[esi]
  41cf16:	inc    ecx
  41cf17:	inc    ebp
  41cf18:	dec    ecx
  41cf19:	icebp  
  41cf1a:	jne    0x41cf15
  41cf1c:	mov    ch,0x73
  41cf1e:	cli    
  41cf1f:	jnp    0x41cec0
  41cf21:	ins    DWORD PTR es:[edi],dx
  41cf22:	fstp   DWORD PTR [edi+0x73c15bf7]
  41cf28:	xchg   esp,eax
  41cf29:	out    dx,eax
  41cf2a:	ss iret 
  41cf2c:	dec    ebx
  41cf2d:	cmp    eax,0x1a55cddf
  41cf32:	lahf   
  41cf33:	xchg   DWORD PTR [edi],eax
  41cf35:	in     al,0x87
  41cf37:	addr16 sub al,0x73
  41cf3a:	jae    0x41cec7
  41cf3c:	xor    eax,0x9481edf8
  41cf41:	xchg   edx,eax
  41cf42:	push   0x4ce6640
  41cf47:	push   ss
  41cf48:	ret    
  41cf49:	jmp    0x3b367b9b
  41cf4e:	sub    DWORD PTR [ebp+0x43],esp
  41cf51:	cdq    
  41cf52:	fadd   DWORD PTR [ebp-0x3f]
  41cf55:	scas   al,BYTE PTR es:[edi]
  41cf56:	imul   ebp,ecx,0xffffff89
  41cf59:	scas   eax,DWORD PTR es:[edi]
  41cf5a:	mov    esp,0xaffb7751
  41cf5f:	not    edi
  41cf61:	pop    edi
  41cf62:	sbb    ebx,edi
  41cf64:	cwde   
  41cf65:	push   ds
  41cf66:	fadd   st(7),st
  41cf68:	(bad)  
  41cf69:	sti    
  41cf6a:	xor    eax,0x55ce406
  41cf6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf70:	sbb    al,0x9a
  41cf72:	cmp    ecx,0x35
  41cf75:	pop    ds
  41cf76:	xor    eax,0x398b43b9
  41cf7b:	shl    BYTE PTR [ecx-0x1e564aa5],1
  41cf81:	cmp    ebp,DWORD PTR [edi]
  41cf83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf84:	pop    ds
  41cf85:	xchg   edi,eax
  41cf86:	repz cmp DWORD PTR [edx],esp
  41cf89:	int    0x5f
  41cf8b:	hlt    
  41cf8c:	xchg   ebx,eax
  41cf8d:	mov    ch,0x63
  41cf8f:	mov    esi,0x6215f29e
  41cf94:	outs   dx,BYTE PTR ds:[esi]
  41cf95:	enter  0x5c80,0x27
  41cf99:	neg    DWORD PTR [ebx-0x38]
  41cf9c:	pop    ds
  41cf9d:	fstp   DWORD PTR [esi+0x2c]
  41cfa0:	outs   dx,DWORD PTR ds:[esi]
  41cfa1:	push   ecx
  41cfa2:	sar    DWORD PTR [esi],0x36
  41cfa5:	ins    BYTE PTR es:[edi],dx
  41cfa6:	push   esp
  41cfa7:	jp     0x41cfe1
  41cfa9:	in     al,0xcb
  41cfab:	cmp    eax,DWORD PTR [esi-0x26d54e7f]
  41cfb1:	fimul  WORD PTR [eax+0x3e229b89]
  41cfb7:	ja     0x41cfef
  41cfb9:	push   cs
  41cfba:	jge    0x41cf44
  41cfbc:	fnstenv [esp+edx*4+0x4e]
  41cfc0:	pop    eax
  41cfc1:	es test al,0x35
  41cfc4:	jge    0x41d032
  41cfc6:	daa    
  41cfc7:	xlat   BYTE PTR ds:[ebx]
  41cfc8:	mov    ebx,0xc14291fa
  41cfcd:	adc    ch,BYTE PTR [ebp+ecx*4-0x64]
  41cfd1:	mov    cl,0xff
  41cfd3:	xor    al,0xda
  41cfd5:	push   ebx
  41cfd6:	bound  ecx,QWORD PTR [ecx+0x3]
  41cfd9:	and    dh,BYTE PTR [eax+eax*4]
  41cfdc:	pop    ss
  41cfdd:	idiv   BYTE PTR [esi-0x40]
  41cfe0:	mov    esi,0x811a798c
  41cfe5:	adc    BYTE PTR [eax+eiz*8+0x1f3d10e1],dl
  41cfec:	mov    dl,0x11
  41cfee:	sar    DWORD PTR [ebx-0x36071e4b],0x76
  41cff5:	stos   BYTE PTR es:[edi],al
  41cff6:	arpl   bx,ax
  41cff8:	pop    edi
  41cff9:	lea    eax,[ebx+eiz*2+0x3]
  41cffd:	inc    DWORD PTR [eax-0x7f]
  41d000:	mov    bh,0x7b
  41d002:	pop    es
  41d003:	enter  0xe585,0x13
  41d007:	lds    edx,FWORD PTR [ebx+0x31a6eb1b]
  41d00d:	pop    edi
  41d00e:	cmp    BYTE PTR [esi],dh
  41d010:	(bad)  
  41d011:	enter  0xfdf7,0x5b
  41d015:	call   0xf2fe:0xbc1a5080
  41d01c:	int    0xe1
  41d01e:	loope  0x41d013
  41d020:	push   esi
  41d021:	jecxz  0x41d082
  41d023:	add    DWORD PTR [edi+0x2a8b13ea],0xffffffca
  41d02a:	jle    0x41cfcf
  41d02c:	ficomp WORD PTR [ecx+ebp*8-0x5]
  41d030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d031:	sub    ah,BYTE PTR ds:0xd29295f1
  41d037:	(bad)  
  41d038:	adc    BYTE PTR [esi+esi*1],dh
  41d03b:	and    al,0x7e
  41d03d:	test   al,0x35
  41d03f:	ss out 0xf8,eax
  41d042:	push   esi
  41d043:	test   eax,0x79f81abd
  41d048:	outs   dx,BYTE PTR ds:[esi]
  41d049:	push   es
  41d04a:	das    
  41d04b:	xchg   ebx,eax
  41d04c:	sbb    BYTE PTR [edi],dh
  41d04e:	mov    dl,0x79
  41d050:	inc    esp
  41d051:	push   esi
  41d052:	fwait
  41d053:	stos   BYTE PTR es:[edi],al
  41d054:	lods   eax,DWORD PTR ds:[esi]
  41d055:	add    eax,0x7276464f
  41d05a:	sbb    esi,DWORD PTR [esp+ecx*4-0x7c]
  41d05e:	mov    ebx,0x31c46e7b
  41d063:	mov    edi,0xb71597ad
  41d068:	dec    eax
  41d069:	leave  
  41d06a:	enter  0xca9f,0xf0
  41d06e:	xor    al,0x5d
  41d070:	scas   eax,DWORD PTR es:[edi]
  41d071:	es ret 0x18d2
  41d075:	adc    al,0x65
  41d077:	lds    edx,FWORD PTR [esi]
  41d079:	xchg   ebp,eax
  41d07a:	data16 adc dl,dl
  41d07d:	dec    eax
  41d07e:	pop    esp
  41d07f:	or     eax,0xb537a9ee
  41d084:	aam    0x41
  41d086:	sbb    esi,DWORD PTR [ebp+0xd]
  41d089:	mov    esi,0x7e3eb08d
  41d08e:	ret    0x40c0
  41d091:	(bad)  
  41d092:	mov    dh,0xb9
  41d094:	addr16 adc al,0xe2
  41d097:	in     al,0xc8
  41d099:	aam    0x62
  41d09b:	mov    bh,0x51
  41d09d:	outs   dx,DWORD PTR ds:[esi]
  41d09e:	test   eax,0xd2c0f066
  41d0a3:	inc    edx
  41d0a4:	cvtps2pd xmm7,QWORD PTR [edi-0x5cd424b]
  41d0ab:	mov    ds:0x1d7e8a20,eax
  41d0b0:	adc    BYTE PTR [ebp+0x37bf62d],al
  41d0b6:	imul   esi,eax,0xffffffc6
  41d0b9:	out    dx,al
  41d0ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0bb:	mov    esp,edi
  41d0bd:	inc    ecx
  41d0be:	test   DWORD PTR ds:0xbaa25fa,eax
  41d0c4:	add    dl,dh
  41d0c6:	rol    BYTE PTR [eax+0x23e0b12a],0xfb
  41d0cd:	add    BYTE PTR ds:0x1b4a1225,cl
  41d0d3:	mov    dl,0x8
  41d0d5:	inc    esp
  41d0d6:	rcr    DWORD PTR [edi+0x52],1
  41d0d9:	jb     0x41d0f9
  41d0db:	arpl   WORD PTR [edx-0x6d],si
  41d0de:	out    0x99,eax
  41d0e0:	jl     0x41d100
  41d0e2:	jecxz  0x41d08a
  41d0e4:	cdq    
  41d0e5:	xlat   BYTE PTR ds:[ebx]
  41d0e6:	mov    ?,eax
  41d0e8:	cmp    DWORD PTR gs:[edx-0x66adc10f],ecx
  41d0ef:	dec    ebp
  41d0f0:	enter  0x16b5,0x54
  41d0f4:	add    eax,DWORD PTR [ebx]
  41d0f6:	out    dx,al
  41d0f7:	arpl   WORD PTR [edi+0x2d9a538],dx
  41d0fd:	dec    eax
  41d0fe:	mov    ebp,ebp
  41d100:	and    al,0xce
  41d102:	xchg   esi,eax
  41d103:	xchg   ebx,eax
  41d104:	cmp    BYTE PTR [esi+0x6f],bl
  41d107:	ror    BYTE PTR [esi+0x55],cl
  41d10a:	(bad)  
  41d10b:	or     BYTE PTR [eax*4+0xe768bce],cl
  41d112:	cld    
  41d113:	inc    ebp
  41d114:	sub    al,0x48
  41d116:	or     al,BYTE PTR [edx-0x3248461e]
  41d11c:	sub    al,0xf4
  41d11e:	ds and ah,dh
  41d121:	cmc    
  41d122:	not    DWORD PTR [edx+0x78]
  41d125:	adc    eax,0xf56fbf7
  41d12a:	bound  eax,QWORD PTR gs:[edx+0x3e]
  41d12e:	fstp   DWORD PTR [edx]
  41d130:	pop    eax
  41d131:	adc    eax,0x8744d7c8
  41d136:	and    DWORD PTR [ebx],edx
  41d138:	pop    edi
  41d139:	push   edi
  41d13a:	mov    esi,0xeb52b5b9
  41d13f:	dec    esi
  41d140:	sub    DWORD PTR [edx+0x3e61fff7],ebp
  41d146:	fstp   QWORD PTR [edi-0x12]
  41d149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d14a:	jbe    0x41d179
  41d14c:	add    DWORD PTR [eax+0x3df7c6e7],0xa67f918d
  41d156:	mov    ecx,DWORD PTR [ecx+0x63a56bc2]
  41d15c:	retf   0xdf74
  41d15f:	xor    eax,DWORD PTR [ecx]
  41d161:	das    
  41d162:	(bad)
  41d166:	jnp    0x9fdaf469
  41d16c:	mov    ah,0x9e
  41d16e:	loop   0x41d0f4
  41d170:	out    dx,eax
  41d171:	xor    ah,0x44
  41d174:	ja     0x41d13d
  41d176:	or     ebp,DWORD PTR [esi]
  41d178:	pop    ebx
  41d179:	loopne 0x41d199
  41d17b:	test   al,bh
  41d17d:	in     eax,dx
  41d17e:	mov    bl,BYTE PTR [ecx-0x19]
  41d181:	xchg   esi,eax
  41d182:	retf   
  41d183:	mov    esi,0xc89738c8
  41d188:	ds push esp
  41d18a:	(bad)  
  41d18b:	and    al,0x5f
  41d18d:	adc    edi,DWORD PTR [ebp+ebx*4+0x53]
  41d191:	or     eax,0xaa30c56d
  41d196:	clc    
  41d197:	pop    ss
  41d198:	xchg   ebx,eax
  41d199:	dec    esi
  41d19a:	nop
  41d19b:	dec    edi
  41d19c:	add    eax,0xa8e642bd
  41d1a1:	mov    bl,0x2c
  41d1a3:	mov    dh,0xff
  41d1a5:	pop    eax
  41d1a6:	sbb    al,0x8a
  41d1a8:	jecxz  0x41d196
  41d1aa:	inc    ebx
  41d1ab:	shr    DWORD PTR [edx+0x17a0b893],0xe7
  41d1b2:	das    
  41d1b3:	inc    ecx
  41d1b4:	xchg   ebx,eax
  41d1b5:	sbb    al,0xdb
  41d1b7:	mov    DWORD PTR [esi+0x50],0xad37eb87
  41d1be:	pusha  
  41d1bf:	sbb    al,BYTE PTR [edx+0x6df379e]
  41d1c5:	fstp   TBYTE PTR [edi+ebx*2]
  41d1c8:	or     DWORD PTR [edi],esi
  41d1ca:	int    0x80
  41d1cc:	aam    0x30
  41d1ce:	add    DWORD PTR [ebp+ebp*1+0x2fa0325],0x5f402583
  41d1d9:	call   0x8b39:0x7c8ced3d
  41d1e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1e1:	pusha  
  41d1e2:	outs   dx,BYTE PTR ds:[esi]
  41d1e3:	pop    si
  41d1e5:	arpl   WORD PTR [eax],bp
  41d1e7:	pop    esi
  41d1e8:	out    0x89,al
  41d1ea:	jns    0x41d268
  41d1ec:	dec    ecx
  41d1ed:	and    ecx,DWORD PTR [eax-0x659f94e]
  41d1f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1f4:	in     al,0x86
  41d1f6:	loope  0x41d195
  41d1f8:	mov    dl,0x35
  41d1fa:	xlat   BYTE PTR ds:[ebx]
  41d1fb:	fmul   st,st(7)
  41d1fd:	sbb    al,0x86
  41d1ff:	jle    0x41d23c
  41d201:	fst    DWORD PTR [eax-0x2]
  41d204:	icebp  
  41d205:	inc    edi
  41d206:	adc    al,0xc2
  41d208:	int3   
  41d209:	xor    DWORD PTR [edx+0x4fa7f8da],0xe2e7081c
  41d213:	sti    
  41d214:	mov    al,ds:0x4adcf2b2
  41d219:	js     0x41d269
  41d21b:	push   eax
  41d21c:	xor    al,0xca
  41d21e:	jo     0x41d1d7
  41d220:	xchg   edi,eax
  41d222:	cmp    al,0x74
  41d224:	sbb    bh,cl
  41d226:	and    edx,DWORD PTR [ebx]
  41d228:	inc    esi
  41d229:	int3   
  41d22a:	xor    ch,BYTE PTR [ebx-0x549ab3f9]
  41d230:	add    al,al
  41d232:	cmp    dh,ch
  41d234:	int    0x12
  41d236:	add    DWORD PTR [ecx+esi*4-0x21],ebx
  41d23a:	pop    ebp
  41d23b:	xchg   esi,eax
  41d23c:	pop    eax
  41d23d:	jno    0x41d257
  41d23f:	mov    bh,0xcb
  41d241:	loopne 0x41d211
  41d243:	mov    WORD PTR [edi-0x1a],gs
  41d246:	adc    DWORD PTR [esi+0x29d79acb],esi
  41d24c:	cmp    dl,0xf7
  41d24f:	xor    BYTE PTR [edi],0x47
  41d252:	jp     0x41d2b6
  41d254:	call   0x8d6cc826
  41d259:	xchg   edi,eax
  41d25a:	xchg   DWORD PTR [edx],eax
  41d25c:	jl     0x41d2b1
  41d25e:	popa   
  41d25f:	xchg   ebp,eax
  41d260:	jns    0x41d2c3
  41d262:	xor    ebp,DWORD PTR [edi]
  41d264:	scas   al,BYTE PTR es:[edi]
  41d265:	pop    es
  41d266:	mov    dl,0x78
  41d268:	mov    dl,0xc1
  41d26a:	sbb    DWORD PTR [ebp-0x157111ab],ecx
  41d270:	fwait
  41d271:	or     ebp,DWORD PTR [ebx+0x3172fe20]
  41d277:	lds    esp,FWORD PTR [eax+0x21]
  41d27a:	mov    BYTE PTR [eax-0x15],dl
  41d27d:	call   0x4f0f363
  41d282:	outs   dx,BYTE PTR ds:[esi]
  41d283:	mov    ecx,0xdcff1924
  41d288:	aaa    
  41d289:	lods   al,BYTE PTR ds:[esi]
  41d28a:	jle    0x41d2be
  41d28c:	ja     0x41d30d
  41d28e:	retf   
  41d28f:	cdq    
  41d290:	sbb    BYTE PTR [ebx+0x6c32ac42],bh
  41d296:	jo     0x41d268
  41d298:	lahf   
  41d299:	xchg   ebp,eax
  41d29a:	loop   0x41d24a
  41d29c:	jl     0x41d22b
  41d29e:	shl    BYTE PTR [ebx-0x2f],cl
  41d2a1:	pop    ss
  41d2a2:	dec    eax
  41d2a3:	mov    es,edi
  41d2a5:	jge    0x41d2d8
  41d2a7:	sub    esi,DWORD PTR [esi+0x5563c9b3]
  41d2ad:	retf   
  41d2ae:	lea    edi,[edi+0x6321c5df]
  41d2b4:	dec    ebx
  41d2b5:	dec    esi
  41d2b6:	aaa    
  41d2b7:	jmp    0x41d2d0
  41d2b9:	xor    al,0xfe
  41d2bb:	xchg   esi,eax
  41d2bc:	push   esi
  41d2bd:	ins    DWORD PTR es:[edi],dx
  41d2be:	sub    eax,0xb1b7ef8e
  41d2c3:	push   edi
  41d2c4:	dec    esi
  41d2c5:	scas   eax,DWORD PTR es:[edi]
  41d2c6:	sub    bh,BYTE PTR [esi+eiz*8+0x7]
  41d2ca:	sbb    al,0xb6
  41d2cc:	stc    
  41d2cd:	mov    ebp,0x77fa7317
  41d2d2:	adc    DWORD PTR [edx-0x63a1ad3d],ebx
  41d2d8:	sti    
  41d2d9:	jmp    0xe544:0x78fbe739
  41d2e0:	sbb    al,0xa4
  41d2e2:	div    DWORD PTR [edi*1-0x34f2d8f3]
  41d2e9:	popa   
  41d2ea:	sbb    eax,0x4822f3a1
  41d2ef:	std    
  41d2f0:	mov    dl,0xbe
  41d2f2:	cdq    
  41d2f3:	cli    
  41d2f4:	pusha  
  41d2f5:	in     al,dx
  41d2f6:	ss xor al,0xde
  41d2f9:	sub    eax,0x2a4cb2fa
  41d2fe:	ror    DWORD PTR ds:0x97e2720d,cl
  41d304:	xchg   edx,eax
  41d305:	xchg   ecx,eax
  41d306:	data16 adc al,0xf4
  41d309:	add    eax,eax
  41d30b:	fld    TBYTE PTR [edi]
  41d30d:	pusha  
  41d30e:	sar    DWORD PTR [edi],0xb4
  41d311:	adc    BYTE PTR [edx+0x65e840e9],0xc3
  41d318:	and    eax,0x4fe7bdff
  41d31d:	adc    esp,DWORD PTR [esi]
  41d31f:	adc    dl,BYTE PTR [edi-0x32dcf391]
  41d325:	out    dx,al
  41d326:	aas    
  41d327:	or     esi,ecx
  41d329:	scas   al,BYTE PTR es:[edi]
  41d32a:	push   cs
  41d32b:	pop    ds
  41d32c:	nop
  41d32d:	or     ch,ah
  41d32f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d330:	pop    edi
  41d331:	mov    ebp,0xf4680c4f
  41d336:	cmp    BYTE PTR [esi-0x7bdbc64b],ah
  41d33c:	inc    ecx
  41d33d:	in     al,0x5e
  41d33f:	imul   eax,ecx,0x6
  41d342:	cmp    dh,BYTE PTR [esi-0x560cd978]
  41d348:	sbb    BYTE PTR [eax+0x74],ah
  41d34b:	mov    edx,0x45f75423
  41d350:	out    dx,eax
  41d351:	inc    eax
  41d352:	adc    eax,0x57b97598
  41d357:	ins    BYTE PTR es:[edi],dx
  41d358:	mov    ds:0xe2f566b3,eax
  41d35d:	xchg   ecx,eax
  41d35e:	popf   
  41d35f:	xchg   ebp,eax
  41d360:	xchg   esi,eax
  41d361:	sbb    esi,DWORD PTR [esi]
  41d363:	push   edx
  41d364:	push   ebx
  41d365:	add    bl,BYTE PTR [edx+0x525f02d]
  41d36b:	in     eax,dx
  41d36c:	or     al,BYTE PTR [eax]
  41d36e:	in     al,dx
  41d36f:	cmp    esp,DWORD PTR [ebp-0x6572f3fc]
  41d375:	shr    BYTE PTR [ebx+esi*2-0xb8c40fd],1
  41d37c:	jmp    0xf5a87b6a
  41d381:	rcl    esp,cl
  41d383:	aad    0xd4
  41d385:	es das 
  41d387:	(bad)  
  41d388:	js     0x41d3d4
  41d38a:	aas    
  41d38b:	pop    eax
  41d38c:	push   ss
  41d38d:	push   esi
  41d38e:	loopne 0x41d336
  41d390:	cld    
  41d391:	test   eax,0xf8a99d33
  41d396:	sbb    ecx,DWORD PTR [edx-0x5a]
  41d399:	jmp    0x313383de
  41d39e:	jb     0x41d38f
  41d3a0:	call   0xcd8:0xfa3cf75
  41d3a7:	xchg   edi,eax
  41d3a8:	stc    
  41d3a9:	ror    DWORD PTR [edi],1
  41d3ab:	fnstenv [ecx]
  41d3ad:	scas   al,BYTE PTR es:[edi]
  41d3ae:	gs pushf 
  41d3b0:	aam    0xc8
  41d3b2:	lock and eax,DWORD PTR [ecx+0x5682263d]
  41d3b9:	mov    ecx,0x93e50ab4
  41d3be:	fucomip st,st(4)
  41d3c0:	cmp    edx,DWORD PTR [ebp+0x3b]
  41d3c3:	sbb    esp,DWORD PTR [eax]
  41d3c5:	pmuludq mm1,QWORD PTR [edi+0x7a19796e]
  41d3cc:	sbb    dh,dl
  41d3ce:	leave  
  41d3cf:	cmp    eax,0xc39a57a5
  41d3d4:	and    ecx,DWORD PTR [ecx-0x47]
  41d3d7:	fstp   st(1)
  41d3d9:	push   ebx
  41d3da:	cli    
  41d3db:	mov    cl,0x6e
  41d3dd:	mov    bh,0x99
  41d3df:	dec    eax
  41d3e0:	(bad)  
  41d3e1:	call   0xcfb258fd
  41d3e6:	add    ebp,DWORD PTR [ebp-0x20]
  41d3e9:	div    BYTE PTR [eax+edx*2+0x79]
  41d3ed:	mov    WORD PTR ds:0x335d6362,fs
  41d3f3:	mov    esp,0xd711adad
  41d3f8:	dec    ecx
  41d3f9:	pop    edi
  41d3fa:	(bad)  
  41d3fc:	in     al,dx
  41d3fd:	int    0x80
  41d3ff:	dec    edx
  41d400:	les    esp,FWORD PTR [ebp-0x60]
  41d403:	hlt    
  41d404:	xchg   ecx,eax
  41d405:	fdiv   DWORD PTR [eax+0x160bcabf]
  41d40b:	scas   al,BYTE PTR es:[edi]
  41d40c:	(bad)  
  41d40d:	xchg   esp,eax
  41d40e:	xchg   esi,eax
  41d40f:	xor    ch,dh
  41d411:	xchg   edx,eax
  41d412:	mov    cl,0x59
  41d414:	sbb    al,0xa0
  41d416:	xchg   edi,eax
  41d417:	(bad)  
  41d418:	mov    ebx,DWORD PTR [edi-0x69]
  41d41b:	inc    ecx
  41d41c:	add    DWORD PTR [esi-0x1d],edx
  41d41f:	fimul  DWORD PTR [ebx]
  41d421:	mov    al,ds:0x39711bb5
  41d426:	mov    dl,0xab
  41d428:	fcmovnb st,st(1)
  41d42a:	push   eax
  41d42b:	xchg   edx,eax
  41d42c:	icebp  
  41d42d:	or     dh,al
  41d42f:	mov    bh,0x17
  41d431:	push   es
  41d432:	mov    fs,WORD PTR [ecx]
  41d434:	pop    es
  41d435:	outs   dx,BYTE PTR ds:[esi]
  41d436:	adc    DWORD PTR ds:0xff623b0d,0x45
  41d43d:	xchg   ebp,eax
  41d43e:	mov    esp,0xb848b28
  41d443:	and    edi,esp
  41d445:	mov    eax,ds:0xe947e1a9
  41d44a:	or     eax,0x8f6bcd27
  41d44f:	cli    
  41d450:	inc    ecx
  41d451:	jo     0x41d49b
  41d453:	in     eax,0x44
  41d455:	lahf   
  41d456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d457:	(bad)  
  41d458:	jp     0x41d47b
  41d45a:	ins    DWORD PTR es:[edi],dx
  41d45b:	jmp    0xe5bd:0xd8fc9ac8
  41d462:	test   al,0x5e
  41d464:	xchg   ebp,eax
  41d465:	cmp    eax,0x24f11fb3
  41d46a:	and    eax,eax
  41d46c:	sub    dh,dl
  41d46e:	add    BYTE PTR [ecx-0x672ca64],dl
  41d474:	cmp    dl,dl
  41d476:	dec    ebx
  41d477:	sbb    al,0x21
  41d479:	mov    ebx,0xd259564d
  41d47e:	mov    esi,0xd17373ec
  41d483:	in     al,0xec
  41d485:	jnp    0x41d41d
  41d487:	ret    
  41d488:	xor    eax,0x492a663b
  41d48d:	xchg   edi,eax
  41d48e:	adc    ecx,DWORD PTR [ebx]
  41d490:	push   ebx
  41d491:	mov    eax,0xe0da7056
  41d496:	dec    esp
  41d497:	rcr    BYTE PTR [esi],1
  41d499:	jg     0x41d49d
  41d49b:	inc    ebx
  41d49c:	(bad)  
  41d49e:	ins    BYTE PTR es:[edi],dx
  41d49f:	and    DWORD PTR [ebp+0x52],esi
  41d4a2:	mov    bh,0xf5
  41d4a4:	mov    ds:0xb9b68a,eax
  41d4a9:	xchg   esp,eax
  41d4aa:	fwait
  41d4ab:	add    eax,0xdf42f149
  41d4b0:	dec    ebx
  41d4b1:	lock inc esp
  41d4b3:	add    DWORD PTR [esi+edx*8],edx
  41d4b6:	das    
  41d4b7:	or     DWORD PTR [ebx-0x47],0x12
  41d4bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4bc:	or     al,dl
  41d4be:	stos   BYTE PTR es:[edi],al
  41d4bf:	and    eax,0x98cd49fc
  41d4c4:	sub    esi,0xffffff97
  41d4c7:	shl    BYTE PTR [edi],cl
  41d4c9:	hlt    
  41d4ca:	xor    BYTE PTR [ebx+0x4b97c15c],dl
  41d4d0:	leave  
  41d4d1:	ja     0x41d536
  41d4d3:	dec    DWORD PTR [edi-0x14a93730]
  41d4d9:	les    ecx,FWORD PTR [ecx-0x41]
  41d4dc:	mov    ebx,DWORD PTR [edx]
  41d4de:	cmp    cl,BYTE PTR [edx]
  41d4e0:	xor    eax,0xa8e95acb
  41d4e5:	add    al,0x41
  41d4e7:	shr    bl,0x3e
  41d4ea:	fs jo  0x41d565
  41d4ed:	mov    DWORD PTR [edx],eax
  41d4ef:	xor    al,0xa9
  41d4f1:	leave  
  41d4f2:	sub    esp,DWORD PTR [ecx-0x7fec97ad]
  41d4f8:	(bad)  
  41d4f9:	rcr    BYTE PTR [edx+eax*8+0x41],0xc
  41d4fe:	jecxz  0x41d4a3
  41d500:	loope  0x41d501
  41d502:	pop    esp
  41d503:	jle    0x41d537
  41d505:	xchg   ecx,eax
  41d506:	or     DWORD PTR [edi+0x79],edx
  41d509:	push   ebx
  41d50a:	(bad)  [eax]
  41d50c:	add    al,0xda
  41d50e:	shr    BYTE PTR [esi+0x285a6649],cl
  41d514:	jne    0x41d53c
  41d516:	into   
  41d517:	outs   dx,BYTE PTR ds:[esi]
  41d518:	lods   eax,DWORD PTR ds:[esi]
  41d519:	adc    BYTE PTR [edi+edi*8],ah
  41d51c:	cmp    esp,DWORD PTR [edx+0x5e]
  41d51f:	dec    ebx
  41d520:	dec    edi
  41d521:	stos   DWORD PTR es:[edi],eax
  41d522:	and    DWORD PTR [esi+0x3610f711],ebp
  41d528:	ins    BYTE PTR es:[edi],dx
  41d529:	mov    bh,0xd5
  41d52b:	in     al,dx
  41d52c:	add    esp,DWORD PTR [edx-0x67]
  41d52f:	das    
  41d530:	and    esp,ecx
  41d532:	jnp    0x41d4e8
  41d534:	clc    
  41d535:	test   BYTE PTR [edx+0x826798c],cl
  41d53b:	sbb    BYTE PTR [ecx+0x13],0xe7
  41d53f:	pop    es
  41d540:	xchg   ebx,eax
  41d541:	fsub   DWORD PTR [ecx+edx*8+0x6f]
  41d545:	sbb    eax,0xd2279853
  41d54a:	dec    ecx
  41d54b:	mov    eax,ds:0x2d7d4fe9
  41d550:	mov    esi,0x68718768
  41d555:	add    al,0x53
  41d557:	adc    al,0xc4
  41d559:	jne    0x41d51e
  41d55b:	jecxz  0x41d519
  41d55d:	jb     0x41d582
  41d55f:	or     DWORD PTR [ebp+0x4facfba2],eax
  41d565:	xor    bl,BYTE PTR [edx]
  41d567:	js     0x41d510
  41d569:	xchg   ecx,eax
  41d56a:	pop    ss
  41d56b:	cmp    ecx,edx
  41d56d:	mov    dh,BYTE PTR [ebx*2-0x650a3292]
  41d574:	cwde   
  41d575:	mov    ah,0x8b
  41d577:	inc    edx
  41d578:	shl    BYTE PTR [esp+ebp*1+0x622b0589],0x19
  41d580:	pusha  
  41d581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d582:	aad    0xab
  41d584:	jno    0x41d5ef
  41d586:	ret    
  41d587:	sahf   
  41d588:	lods   al,BYTE PTR ds:[esi]
  41d589:	imul   ebx,DWORD PTR [edx+0x37],0x7
  41d58d:	out    dx,al
  41d58e:	or     eax,0x5f7ee54e
  41d593:	in     al,dx
  41d594:	or     ebx,DWORD PTR [edx-0x79]
  41d597:	push   0xa84a557a
  41d59c:	add    bh,BYTE PTR [edx-0x6e3c4b2f]
  41d5a2:	mov    ch,0x56
  41d5a4:	iret   
  41d5a5:	adc    eax,0xd9a3e3da
  41d5aa:	fistp  QWORD PTR [esi-0x5b]
  41d5ad:	lock mov dl,0xe9
  41d5b0:	adc    bl,BYTE PTR ss:[esi]
  41d5b3:	xor    esp,esp
  41d5b5:	in     al,0xa5
  41d5b7:	sbb    BYTE PTR [ecx+0x257355b4],0xaf
  41d5be:	(bad)  
  41d5bf:	jmp    0xb82d:0x383f1fbb
  41d5c6:	outs   dx,BYTE PTR ds:[esi]
  41d5c7:	loop   0x41d573
  41d5c9:	(bad)  
  41d5cb:	mov    al,0xdf
  41d5cd:	mov    DWORD PTR [ecx-0x71],ebx
  41d5d0:	lods   eax,DWORD PTR es:[esi]
  41d5d2:	xor    BYTE PTR ds:0xff8c916f,ah
  41d5d8:	test   BYTE PTR [edx],dh
  41d5da:	clc    
  41d5db:	sbb    ch,BYTE PTR [edx]
  41d5dd:	push   ecx
  41d5de:	xchg   ecx,eax
  41d5df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5e0:	(bad)  
  41d5e1:	call   0x1311:0xd79a991c
  41d5e8:	mov    dh,0xc6
  41d5ea:	fbld   TBYTE PTR [esi+0x7]
  41d5ed:	sti    
  41d5ee:	arpl   WORD PTR [esi],bp
  41d5f0:	adc    BYTE PTR [edi+esi*4+0x69],dh
  41d5f4:	loope  0x41d655
  41d5f6:	cli    
  41d5f7:	adc    eax,0x4d8caee2
  41d5fc:	stc    
  41d5fd:	add    eax,0xebd4b72b
  41d602:	xor    DWORD PTR ds:0x58b174f5,ebp
  41d608:	fdiv   DWORD PTR [edi-0x73]
  41d60b:	mov    esp,0x59bbe072
  41d610:	dec    ebx
  41d611:	mov    edx,DWORD PTR [bx-0x47]
  41d615:	dec    ecx
  41d616:	inc    ebx
  41d617:	ret    
  41d618:	pushf  
  41d619:	jae    0x41d5d8
  41d61b:	pop    es
  41d61c:	inc    edi
  41d61d:	test   al,0x23
  41d61f:	sti    
  41d620:	dec    edx
  41d621:	loope  0x41d5e4
  41d623:	sub    DWORD PTR [edx+edi*8-0x44],esi
  41d627:	push   esi
  41d628:	push   0x882b9fd9
  41d62d:	int    0x8
  41d62f:	imul   eax,DWORD PTR [edx+esi*1],0xfffffff7
  41d633:	ret    0x48d5
  41d636:	sti    
  41d637:	mov    al,0x5
  41d639:	xor    DWORD PTR [ebp-0x6562ff71],eax
  41d63f:	inc    edi
  41d640:	lds    edi,FWORD PTR [ebx-0x56]
  41d643:	fwait
  41d644:	push   ss
  41d645:	mov    eax,ds:0x464b1dc3
  41d64a:	sbb    al,0x23
  41d64c:	ins    DWORD PTR es:[edi],dx
  41d64d:	lock (bad) 
  41d64f:	mov    al,0x2a
  41d651:	and    cl,0xc9
  41d654:	xchg   ebx,eax
  41d655:	push   ebx
  41d656:	xchg   edi,eax
  41d657:	inc    esi
  41d658:	loope  0x41d647
  41d65a:	(bad)  
  41d65b:	repnz inc ecx
  41d65d:	jnp    0x41d6a8
  41d65f:	imul   ecx,DWORD PTR [ebx],0x537174fb
  41d665:	popa   
  41d666:	pop    ecx
  41d667:	mov    ds:0x47a542f6,al
  41d66c:	jns    0x41d627
  41d66e:	mov    dl,BYTE PTR [edx-0x24]
  41d671:	mov    eax,0x7602ffc
  41d676:	pop    ebx
  41d677:	inc    ebp
  41d678:	jle    0x41d631
  41d67a:	leave  
  41d67b:	and    eax,0x801910d0
  41d680:	out    0x6e,al
  41d682:	and    al,BYTE PTR [edx-0xf]
  41d685:	or     DWORD PTR ds:0xf0116ee5,ebx
  41d68b:	cmp    dh,BYTE PTR [eax]
  41d68d:	and    eax,0x2844118a
  41d692:	int    0x5
  41d694:	std    
  41d695:	inc    BYTE PTR [eax+0x4fe1e93c]
  41d69b:	add    DWORD PTR [ebp+eax*2+0x3d358e06],ebp
  41d6a2:	inc    eax
  41d6a3:	mov    bl,0x87
  41d6a5:	cli    
  41d6a6:	test   al,0x11
  41d6a8:	adc    eax,0xef3153ae
  41d6ad:	enter  0x1950,0x17
  41d6b1:	into   
  41d6b2:	mov    dh,0x19
  41d6b4:	les    edx,FWORD PTR [ebp+ebx*1-0x2479d122]
  41d6bb:	fwait
  41d6bc:	call   0xc433:0x5db014b1
  41d6c3:	xchg   ebx,eax
  41d6c4:	(bad)  
  41d6c5:	dec    ebp
  41d6c6:	mov    esi,0xeed3675d
  41d6cb:	sbb    BYTE PTR [edi+0x52743b0c],al
  41d6d1:	leave  
  41d6d2:	jg     0x41d710
  41d6d4:	add    DWORD PTR [edi],edi
  41d6d6:	mov    ds:0x28933c58,al
  41d6db:	popa   
  41d6dc:	or     edi,DWORD PTR [ebp-0x37]
  41d6df:	push   esp
  41d6e0:	mov    ds:0x4517591a,al
  41d6e5:	lods   eax,DWORD PTR ds:[esi]
  41d6e6:	lock jo 0x41d691
  41d6e9:	add    BYTE PTR [ebx],bh
  41d6eb:	repz and DWORD PTR [esi-0x6b],edx
  41d6ef:	and    BYTE PTR [edi-0x9],al
  41d6f2:	push   0xffffff8f
  41d6f4:	jmp    0x973a:0x148aefbd
  41d6fb:	lock retf 0x70f9
  41d6ff:	cmp    cl,BYTE PTR [esi-0x34]
  41d702:	sbb    DWORD PTR [edi-0x70],0x750f0331
  41d709:	data16 outs dx,BYTE PTR ds:[esi]
  41d70b:	adc    ch,BYTE PTR [ebx]
  41d70d:	mov    bh,0xe8
  41d70f:	ja     0x41d724
  41d711:	ins    BYTE PTR es:[edi],dx
  41d712:	enter  0x70dd,0x81
  41d716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d717:	gs cwde 
  41d719:	mov    al,0x90
  41d71b:	xchg   BYTE PTR [edx-0x28],dh
  41d71e:	sub    ah,BYTE PTR [edi]
  41d720:	(bad)  
  41d721:	out    dx,al
  41d722:	pushf  
  41d723:	aaa    
  41d724:	cmp    al,0xdf
  41d726:	inc    ebp
  41d727:	test   DWORD PTR [edx-0x6bf205a],eax
  41d72d:	lods   eax,DWORD PTR ds:[esi]
  41d72e:	cmc    
  41d72f:	dec    ecx
  41d730:	lahf   
  41d731:	adc    BYTE PTR [ecx+0x15],al
  41d734:	mov    esp,0xbea18369
  41d739:	ror    BYTE PTR [eax+0x31],1
  41d73c:	fdiv   QWORD PTR [eax+0x63]
  41d73f:	sbb    BYTE PTR [eax],0x77
  41d742:	sub    ebp,eax
  41d744:	pop    eax
  41d745:	push   edx
  41d746:	mov    eax,0xa3ca1f8f
  41d74b:	jecxz  0x41d6fa
  41d74d:	in     eax,0x5
  41d74f:	mov    bl,0xe6
  41d751:	mov    ecx,0x3ba5c030
  41d756:	in     eax,0xbe
  41d758:	or     eax,0xbcb1ba3
  41d75d:	sbb    BYTE PTR [ebx+eiz*1],0x2b
  41d761:	enter  0xe02b,0x65
  41d765:	push   cs
  41d766:	xchg   esp,eax
  41d767:	fld    st(2)
  41d769:	sbb    DWORD PTR [edx-0x572d005],ebp
  41d76f:	add    ch,BYTE PTR [esi+0x54773764]
  41d775:	iret   
  41d776:	xchg   ebx,eax
  41d777:	pop    ss
  41d778:	mov    eax,ds:0x903b2b34
  41d77d:	in     al,dx
  41d77e:	call   0x2c8aeb76
  41d783:	out    0x7d,eax
  41d785:	xor    BYTE PTR [ebx*2-0x2eb2c7ae],bh
  41d78c:	int    0xf4
  41d78e:	dec    eax
  41d78f:	and    DWORD PTR [esi],edx
  41d791:	arpl   di,bx
  41d793:	mov    al,ds:0x23f87d28
  41d798:	xchg   BYTE PTR [edi-0x37],bl
  41d79b:	imul   edi,ecx,0x87ccfc13
  41d7a1:	mov    edi,DWORD PTR [edx-0x57]
  41d7a4:	fs retf 0x1da9
  41d7a8:	mov    dl,0x14
  41d7aa:	mov    dh,ah
  41d7ac:	xchg   BYTE PTR [ecx+ecx*2+0x39],bl
  41d7b0:	(bad)  
  41d7b1:	push   ds
  41d7b2:	inc    edi
  41d7b3:	test   eax,eax
  41d7b5:	xchg   edi,eax
  41d7b6:	iret   
  41d7b7:	mov    ecx,0xe28c0788
  41d7bc:	push   edx
  41d7bd:	(bad)
  41d7c0:	and    ebx,DWORD PTR [eax+0x3c247adb]
  41d7c6:	dec    eax
  41d7c7:	mov    ds:0xc867d155,al
  41d7cc:	mov    edi,0xf40dc7c7
  41d7d1:	leave  
  41d7d2:	leave  
  41d7d3:	sub    DWORD PTR [ebp+0x54],ecx
  41d7d6:	int    0xd9
  41d7d8:	sub    eax,0xc09bafc7
  41d7dd:	outs   dx,DWORD PTR ds:[esi]
  41d7de:	sbb    BYTE PTR [edi+0x42],ch
  41d7e1:	mov    ds:0x125f967c,eax
  41d7e6:	lods   al,BYTE PTR ds:[esi]
  41d7e7:	pop    eax
  41d7e8:	sub    cl,dl
  41d7ea:	aaa    
  41d7eb:	dec    edx
  41d7ec:	mov    cl,0xc2
  41d7ee:	push   edi
  41d7ef:	xchg   edx,eax
  41d7f0:	push   eax
  41d7f1:	jo     0x41d7e9
  41d7f3:	add    BYTE PTR [esi-0x3d],ch
  41d7f6:	or     BYTE PTR [esi+0x4b],dl
  41d7f9:	jle    0x41d823
  41d7fb:	adc    al,0x76
  41d7fd:	push   es
  41d7fe:	sub    eax,0xa9692592
  41d803:	outs   dx,DWORD PTR ds:[esi]
  41d804:	jmp    0x6554b2a
  41d809:	sbb    dh,BYTE PTR [eax+0x69]
  41d80c:	adc    eax,0x16816d85
  41d811:	sbb    DWORD PTR [ecx+ebx*1-0x7ff07de3],0x351e64d8
  41d81c:	ret    0x21da
  41d81f:	ja     0x41d7c8
  41d821:	leave  
  41d822:	adc    al,0x4
  41d824:	inc    edi
  41d825:	jl     0x41d87d
  41d827:	and    ecx,DWORD PTR ds:0xe0b1c028
  41d82d:	cmp    DWORD PTR [esi-0x1e497e82],0x742051a6
  41d837:	dec    esp
  41d838:	fwait
  41d839:	or     DWORD PTR [ebx],edx
  41d83b:	xor    DWORD PTR [esi-0x25],0x11
  41d83f:	int3   
  41d840:	jl     0x41d88e
  41d842:	loopne 0x41d888
  41d844:	fiadd  DWORD PTR [edi-0x5be102c1]
  41d84a:	lahf   
  41d84b:	into   
  41d84c:	sub    al,0x4a
  41d84e:	pop    esp
  41d84f:	(bad)  
  41d850:	add    cl,BYTE PTR [ecx+eax*4]
  41d853:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d854:	retf   
  41d855:	push   ecx
  41d856:	push   ecx
  41d857:	sbb    BYTE PTR [eax+0x33a38b90],ah
  41d85d:	and    eax,0x6fcebd5f
  41d862:	stos   BYTE PTR es:[edi],al
  41d863:	das    
  41d864:	mov    bh,0x21
  41d866:	enter  0x2e33,0x2c
  41d86a:	cwde   
  41d86b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d86c:	test   DWORD PTR [edi+0x72],ecx
  41d86f:	mov    ds:0x8326e9ca,al
  41d874:	stos   BYTE PTR es:[edi],al
  41d875:	ficomp DWORD PTR [esi+0x53]
  41d878:	xchg   esi,eax
  41d879:	test   eax,0xf8608565
  41d87e:	xchg   BYTE PTR [ebp-0x3906bf74],dh
  41d884:	cwde   
  41d885:	sub    edx,esi
  41d887:	cmp    esi,DWORD PTR [edi-0x3ca4cee5]
  41d88d:	push   ecx
  41d88e:	lods   eax,DWORD PTR ds:[esi]
  41d88f:	push   cs
  41d890:	xchg   ebx,eax
  41d891:	test   al,0x63
  41d893:	das    
  41d894:	adc    esi,esp
  41d896:	add    ebp,ecx
  41d898:	imul   esi,DWORD PTR [ebx],0xffffffc9
  41d89b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d89c:	lea    edx,[esi]
  41d89e:	cld    
  41d89f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8a1:	jl     0x41d87b
  41d8a3:	dec    ebp
  41d8a4:	add    ch,cl
  41d8a6:	ficom  WORD PTR [edi]
  41d8a8:	push   ebx
  41d8a9:	packssdw mm7,mm7
  41d8ac:	enter  0xb505,0xba
  41d8b0:	or     esi,DWORD PTR [edi-0x77]
  41d8b3:	push   cs
  41d8b4:	lahf   
  41d8b5:	aad    0x4a
  41d8b7:	in     al,0xee
  41d8b9:	mov    ecx,DWORD PTR [edi+0x2f]
  41d8bc:	xchg   esi,eax
  41d8bd:	pop    ds
  41d8be:	push   0xc3b49a1a
  41d8c3:	pusha  
  41d8c4:	dec    edi
  41d8c5:	sub    DWORD PTR [ecx],0xc3057b48
  41d8cb:	xchg   ebx,eax
  41d8cc:	(bad)  
  41d8cd:	jae    0x41d866
  41d8cf:	lea    ebx,[edx+esi*8]
  41d8d2:	cli    
  41d8d3:	lahf   
  41d8d4:	cs scas al,BYTE PTR es:[edi]
  41d8d6:	push   ebp
  41d8d7:	dec    ecx
  41d8d8:	mov    eax,0x970b82b2
  41d8dd:	fimul  DWORD PTR [eax]
  41d8df:	sub    eax,0x9b3c0e0d
  41d8e4:	jg     0x41d964
  41d8e6:	mov    ebp,0xbfe8c192
  41d8eb:	sub    al,0xb7
  41d8ed:	sbb    DWORD PTR [ecx-0x27],ebp
  41d8f0:	std    
  41d8f1:	shl    DWORD PTR [eax-0x51],0xb2
  41d8f5:	setp   dl
  41d8f8:	mov    DWORD PTR [eax],esi
  41d8fa:	jecxz  0x41d91f
  41d8fc:	sub    edx,esp
  41d8fe:	js     0x41d934
  41d900:	sahf   
  41d901:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d902:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d903:	int3   
  41d904:	adc    ch,BYTE PTR [ebx+0x28]
  41d907:	mov    WORD PTR [edx],es
  41d909:	pop    ebx
  41d90a:	xchg   ebp,eax
  41d90b:	xchg   ecx,eax
  41d90c:	mov    al,ds:0xe505b881
  41d911:	jae    0x41d8ae
  41d913:	jmp    0x41d971
  41d915:	push   esp
  41d916:	fsubr  st(1),st
  41d918:	sub    BYTE PTR [esi+0x484aac4c],bh
  41d91e:	gs inc edx
  41d920:	pusha  
  41d921:	into   
  41d922:	call   0x49bf:0x720a1bc7
  41d929:	scas   al,BYTE PTR es:[edi]
  41d92a:	jbe    0x41d8d6
  41d92c:	add    al,0x56
  41d92e:	xchg   ebp,eax
  41d92f:	dec    ebp
  41d930:	inc    eax
  41d931:	push   ebp
  41d932:	stc    
  41d933:	shl    ebp,cl
  41d935:	call   0xb955:0x150b8481
  41d93c:	push   cs
  41d93d:	pop    ecx
  41d93e:	xor    BYTE PTR [edx+0x37],cl
  41d941:	adc    esp,DWORD PTR [ebp+0x51]
  41d944:	and    eax,edi
  41d946:	shl    DWORD PTR [ecx+edx*2+0x3ad0072b],1
  41d94d:	sub    eax,0x1d081654
  41d952:	push   ebx
  41d953:	xchg   edx,eax
  41d954:	scas   al,BYTE PTR es:[edi]
  41d955:	add    al,BYTE PTR ds:0xdf55e868
  41d95b:	imul   ebp,DWORD PTR [ecx-0x2db6abd7],0x957aa97a
  41d965:	xchg   esi,eax
  41d966:	cmp    ebx,DWORD PTR [ecx+0xde3d6f]
  41d96c:	(bad)  
  41d96d:	xchg   ebx,eax
  41d96e:	xor    eax,0x164a674c
  41d973:	push   ecx
  41d974:	in     al,dx
  41d975:	jno    0x41d963
  41d977:	(bad)  
  41d979:	push   ebx
  41d97a:	icebp  
  41d97b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d97c:	adc    eax,0xeb195717
  41d981:	ja     0x41d972
  41d983:	popa   
  41d984:	mov    eax,0x2fc8bd2
  41d989:	sahf   
  41d98a:	leave  
  41d98b:	push   esi
  41d98c:	loop   0x41d914
  41d98e:	clc    
  41d98f:	cld    
  41d990:	icebp  
  41d991:	aam    0x84
  41d993:	das    
  41d994:	out    dx,al
  41d995:	(bad)  
  41d996:	cdq    
  41d997:	(bad)
  41d99a:	jmp    0x41d9d4
  41d99c:	aas    
  41d99d:	push   ss
  41d99e:	out    dx,al
  41d99f:	push   0xa80f5a3
  41d9a4:	cli    
  41d9a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9a6:	cwde   
  41d9a7:	(bad)  
  41d9a8:	cli    
  41d9a9:	aaa    
  41d9aa:	repz cmp DWORD PTR [eax-0x30],0xffffff91
  41d9af:	mov    cl,0xd4
  41d9b1:	xor    edi,ecx
  41d9b3:	pop    DWORD PTR [edi-0x63eb5943]
  41d9b9:	adc    dh,dl
  41d9bb:	push   ebx
  41d9bc:	inc    edx
  41d9bd:	sub    BYTE PTR [esi+ebx*4-0x68],ah
  41d9c1:	scas   eax,DWORD PTR es:[edi]
  41d9c2:	mov    ebx,0x24cb3e0f
  41d9c7:	test   ebx,esi
  41d9c9:	ss aas 
  41d9cb:	pop    esp
  41d9cc:	push   0xffffff85
  41d9ce:	add    edx,DWORD PTR [ecx+edi*8+0x67f9b22d]
  41d9d5:	sahf   
  41d9d6:	lock stos DWORD PTR es:[edi],eax
  41d9d8:	mov    ecx,0x89aa3875
  41d9dd:	out    0xa4,eax
  41d9df:	xchg   edx,eax
  41d9e0:	fwait
  41d9e1:	xor    BYTE PTR [eax-0x2d],0xf3
  41d9e5:	xor    ah,BYTE PTR [ebx]
  41d9e7:	dec    ecx
  41d9e8:	loopne 0x41d9da
  41d9ea:	mov    edi,0xb85e071d
  41d9ef:	jmp    0x41da27
  41d9f1:	loope  0x41da43
  41d9f3:	loop   0x41d9df
  41d9f5:	jo     0x41d9ec
  41d9f7:	mov    ebx,0x9faf863d
  41d9fc:	cld    
  41d9fd:	popf   
  41d9fe:	inc    DWORD PTR [ebp-0x2d]
  41da01:	mov    eax,0xe206a342
  41da06:	xchg   edx,eax
  41da07:	mov    cs,WORD PTR [esp+edi*1]
  41da0a:	out    dx,al
  41da0b:	or     al,0xfc
  41da0d:	test   al,0xae
  41da0f:	add    bl,dl
  41da11:	leave  
  41da12:	sti    
  41da13:	popa   
  41da14:	(bad)
  41da17:	mov    dh,al
  41da19:	mov    cl,0x4
  41da1b:	aas    
  41da1c:	jl     0x41da08
  41da1e:	add    eax,0xfaa19daa
  41da23:	mov    dh,0x62
  41da25:	bound  eax,QWORD PTR [ebp-0x1a5ac998]
  41da2b:	(bad)  
  41da2c:	in     al,dx
  41da2d:	ins    BYTE PTR es:[edi],dx
  41da2e:	in     eax,0x2a
  41da30:	out    0x47,al
  41da32:	push   esp
  41da33:	add    eax,0x38447c1c
  41da38:	je     0x41d9e1
  41da3a:	adc    bh,al
  41da3c:	or     BYTE PTR [edi],dh
  41da3e:	cmp    al,0x82
  41da40:	cld    
  41da41:	jge    0x41da2c
  41da43:	das    
  41da44:	(bad)  
  41da45:	mov    dl,0x84
  41da47:	psllw  mm1,QWORD PTR ds:[eax]
  41da4b:	sub    BYTE PTR [edi+0x7],0xc6
  41da4f:	xchg   edi,eax
  41da50:	aaa    
  41da51:	mov    esp,0x25cbcc70
  41da56:	inc    di
  41da58:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41da5a:	fsub   st,st(3)
  41da5c:	outs   dx,BYTE PTR ds:[esi]
  41da5d:	stc    
  41da5e:	inc    bp
  41da60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da61:	pushf  
  41da62:	jnp    0x41da6c
  41da64:	sub    esi,edx
  41da66:	and    eax,DWORD PTR [eax+0x8]
  41da69:	jge    0x41dab4
  41da6b:	dec    ebp
  41da6c:	mov    ?,WORD PTR [edi]
  41da6e:	out    dx,al
  41da6f:	dec    esp
  41da70:	inc    ebx
  41da71:	rcr    esp,0x67
  41da74:	aad    0x23
  41da76:	out    0x8,eax
  41da78:	adc    edi,0x685ea3fe
  41da7e:	das    
  41da7f:	add    ah,dl
  41da81:	add    eax,0xa2961b9f
  41da86:	in     al,dx
  41da87:	int3   
  41da88:	cmp    DWORD PTR [ecx],0xff077119
  41da8e:	ins    DWORD PTR es:[edi],dx
  41da8f:	dec    ebx
  41da90:	test   BYTE PTR [edx+0x6670ad9d],bl
  41da96:	jo     0x41daca
  41da98:	int    0x2
  41da9a:	jb     0x41da4d
  41da9c:	adc    edx,ecx
  41da9e:	je     0x41da34
  41daa0:	mov    ?,WORD PTR [ecx]
  41daa2:	pop    edi
  41daa3:	mov    bp,0xbeb1
  41daa7:	aas    
  41daa8:	ror    DWORD PTR [esp+ecx*8],cl
  41daab:	cs push esi
  41daad:	idiv   dh
  41daaf:	push   esp
  41dab0:	adc    al,0x2a
  41dab2:	sub    eax,0x582af012
  41dab7:	in     eax,0x1
  41dab9:	imul   ebx,edi,0x3a719afa
  41dabf:	xchg   ebp,eax
  41dac0:	sub    BYTE PTR [edi-0x63acd594],ah
  41dac6:	bound  esi,QWORD PTR [esi+0x5a9f6374]
  41dacc:	jge    0x41db45
  41dace:	cmc    
  41dacf:	dec    esp
  41dad0:	sbb    edx,DWORD PTR [ecx-0x3daf5d77]
  41dad6:	ss mov esi,0xe36a6480
  41dadc:	popf   
  41dadd:	loop   0x41dac0
  41dadf:	inc    edx
  41dae0:	lea    esi,[esi+0x6faa84dd]
  41dae6:	pop    eax
  41dae7:	rcr    DWORD PTR ds:[edi-0x79],0x34
  41daec:	cmp    DWORD PTR [ebx],0x3e9485c6
  41daf2:	cmp    DWORD PTR [edi-0x36],ebx
  41daf5:	mov    dh,BYTE PTR [ecx-0x5d]
  41daf8:	inc    ecx
  41daf9:	or     al,0x9b
  41dafb:	xor    DWORD PTR [edi],edi
  41dafd:	mov    WORD PTR [eax],fs
  41daff:	sub    dh,BYTE PTR [eax]
  41db01:	mov    ebx,DWORD PTR [eax]
  41db03:	mov    bh,BYTE PTR [edx+edx*1+0xe0feaea]
  41db0a:	push   es
  41db0b:	adc    BYTE PTR [ecx+0x5b61da78],0x72
  41db12:	mov    eax,cr1
  41db15:	mov    edx,0x6e5eddc2
  41db1a:	mov    esp,esi
  41db1c:	lods   al,BYTE PTR ds:[esi]
  41db1d:	push   edx
  41db1e:	sub    al,0x30
  41db20:	jb     0x41daf5
  41db22:	jne    0x41db3a
  41db24:	pusha  
  41db25:	dec    esp
  41db26:	push   DWORD PTR [eax]
  41db28:	sub    eax,0xe28c15dc
  41db2d:	test   DWORD PTR [esi-0x2e907c3d],eax
  41db33:	pop    es
  41db34:	mov    bl,0x16
  41db36:	or     eax,0xe82615a8
  41db3b:	cli    
  41db3c:	add    DWORD PTR [edi],0x71
  41db3f:	sbb    edx,ebx
  41db41:	mov    edx,0xa81ad2ad
  41db46:	and    al,ah
  41db48:	mov    al,ds:0x76700425
  41db4d:	or     esp,DWORD PTR [edi]
  41db4f:	lea    ecx,[esi-0x5]
  41db52:	dec    edi
  41db53:	les    eax,FWORD PTR [eax-0x35]
  41db56:	rep outs dx,DWORD PTR ds:[esi]
  41db58:	and    eax,0x44b835c5
  41db5d:	ds jle 0x41db5f
  41db60:	sbb    BYTE PTR [eax+ebx*4-0x338313f5],cl
  41db67:	fld    st(0)
  41db69:	push   esi
  41db6a:	xchg   edi,eax
  41db6b:	cmp    al,0x7a
  41db6d:	jle    0x41db09
  41db6f:	imul   eax,ecx,0xffffffba
  41db72:	repnz sub al,0x4a
  41db75:	lds    eax,FWORD PTR [esi-0x158a4fdf]
  41db7b:	xchg   ebp,eax
  41db7c:	xchg   edi,eax
  41db7d:	inc    edx
  41db7e:	push   DWORD PTR [edx-0x26e90dd6]
  41db84:	test   eax,0x2b5cb4d6
  41db89:	stc    
  41db8a:	mov    cl,0xfa
  41db8c:	mov    edi,DWORD PTR [edx-0x43]
  41db8f:	aam    0x28
  41db91:	shl    BYTE PTR [edx+0x5e],1
  41db94:	xor    ebx,DWORD PTR [ebp+0x6f]
  41db97:	add    DWORD PTR [edi],0x64
  41db9a:	mov    ebp,0x9588a0cd
  41db9f:	inc    ebp
  41dba0:	sbb    BYTE PTR [ecx],dl
  41dba2:	xor    DWORD PTR [edx+0x44],edi
  41dba5:	into   
  41dba6:	adc    eax,0xb995ac7c
  41dbab:	xor    ah,BYTE PTR [edi+0x5953dfce]
  41dbb1:	(bad)  
  41dbb2:	fisttp WORD PTR [edi]
  41dbb4:	sbb    BYTE PTR [esi+0x7e66b9bb],0xbb
  41dbbb:	(bad)  
  41dbbd:	ins    DWORD PTR es:[edi],dx
  41dbbe:	das    
  41dbbf:	test   DWORD PTR [edx],esp
  41dbc1:	dec    ebx
  41dbc2:	mov    ch,0xa4
  41dbc4:	test   al,0xb2
  41dbc6:	jl     0x41dbfa
  41dbc8:	mov    ch,0xe
  41dbca:	mov    edi,0x27d42491
  41dbcf:	les    ebx,FWORD PTR [ebx-0x1d]
  41dbd2:	out    dx,al
  41dbd3:	lock sar DWORD PTR ds:[ecx-0x66],1
  41dbd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbd9:	in     eax,0x3
  41dbdb:	xchg   edx,eax
  41dbdc:	imul   ebx,edx,0xa1adf2c6
  41dbe2:	fnsave [edx+0x70112af7]
  41dbe8:	cmp    eax,0x5a41f0f7
  41dbed:	test   dh,dh
  41dbef:	neg    DWORD PTR [ebp+0x2526410b]
  41dbf5:	inc    ecx
  41dbf6:	cmp    al,0xa8
  41dbf8:	push   edi
  41dbf9:	push   edx
  41dbfa:	(bad)  
  41dbfb:	ds mov esp,0x808820ca
  41dc01:	and    eax,0xdfe8ef02
  41dc06:	mov    edi,0x70ed597a
  41dc0b:	cmp    BYTE PTR [edx],dl
  41dc0d:	mov    ds:0x801b0cdc,al
  41dc12:	push   eax
  41dc13:	mov    ds:0x90bcda06,al
  41dc18:	sub    DWORD PTR [ebp+0x17e8ba7a],0xffffffde
  41dc1f:	cli    
  41dc20:	push   ss
  41dc21:	add    ecx,DWORD PTR [ebx]
  41dc23:	push   ss
  41dc24:	pop    edi
  41dc25:	push   ebp
  41dc26:	je     0x41dc03
  41dc28:	out    dx,al
  41dc29:	jecxz  0x41dca7
  41dc2b:	mov    edx,0xf54828d3
  41dc30:	and    cl,BYTE PTR [edx+0x5b19698b]
  41dc36:	je     0x41dcb4
  41dc38:	popa   
  41dc39:	mov    cl,0x2b
  41dc3b:	inc    ebx
  41dc3c:	pop    ebp
  41dc3d:	cmp    al,0x2b
  41dc3f:	test   eax,0x6390c3d1
  41dc44:	jbe    0x41dc25
  41dc46:	stc    
  41dc47:	cmc    
  41dc48:	jb     0x41dbef
  41dc4a:	pop    ebx
  41dc4b:	pop    es
  41dc4c:	inc    ebp
  41dc4d:	test   al,0xbf
  41dc4f:	pop    edi
  41dc50:	dec    edi
  41dc51:	mov    ebx,0x23934759
  41dc56:	inc    edx
  41dc57:	push   0x53b5ccd4
  41dc5c:	addr16 push ss
  41dc5e:	test   eax,0x904a1290
  41dc63:	push   ebp
  41dc64:	jnp    0x41dc0a
  41dc66:	arpl   WORD PTR [edi+eax*8+0xb],di
  41dc6a:	mov    edi,0xcf3801b9
  41dc6f:	and    DWORD PTR [ebx],ebx
  41dc71:	emms   
  41dc73:	(bad)  
  41dc74:	sbb    al,0xe1
  41dc76:	jno    0x41dc12
  41dc78:	push   edx
  41dc79:	adc    eax,0x48c6a86
  41dc7e:	adc    edi,DWORD PTR [esi+0x2b]
  41dc81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc82:	adc    eax,ebx
  41dc84:	out    0x9f,eax
  41dc86:	out    0x3d,al
  41dc88:	fst    st(5)
  41dc8a:	jo     0x41dc7a
  41dc8c:	sbb    DWORD PTR [ebp+0x45],esi
  41dc8f:	inc    esi
  41dc90:	mov    esi,0xb8aa79e0
  41dc95:	repz or eax,0x68321e15
  41dc9b:	(bad)  
  41dc9c:	xchg   edi,eax
  41dc9d:	sbb    al,0xa7
  41dc9f:	push   0x45
  41dca1:	stos   DWORD PTR es:[edi],eax
  41dca2:	dec    ebx
  41dca3:	jg     0x41dcda
  41dca5:	stos   DWORD PTR es:[edi],eax
  41dca6:	xchg   edi,eax
  41dca7:	jl     0x41dcdf
  41dca9:	jp     0x41dc95
  41dcab:	xor    al,0x49
  41dcad:	add    al,0x10
  41dcaf:	xchg   esi,edi
  41dcb1:	cmp    DWORD PTR [ebp-0x6ad563a],0xffffffa4
  41dcb8:	repz pop edi
  41dcba:	cmp    ch,BYTE PTR [eax]
  41dcbc:	int3   
  41dcbd:	push   cs
  41dcbe:	stos   BYTE PTR es:[edi],al
  41dcbf:	dec    edi
  41dcc0:	in     al,0xd6
  41dcc2:	sub    ch,BYTE PTR [eax+0x32bfc4b6]
  41dcc8:	jle    0x41dc7c
  41dcca:	add    ecx,DWORD PTR [ecx-0x156c9235]
  41dcd0:	sbb    DWORD PTR [ecx],ebx
  41dcd2:	mov    esi,0x878380cb
  41dcd7:	push   esi
  41dcd8:	fsubr  DWORD PTR [ecx+edx*4]
  41dcdb:	sub    ah,ah
  41dcdd:	adc    BYTE PTR [eax-0x29907bff],bh
  41dce3:	cmp    bl,ah
  41dce5:	push   ebp
  41dce6:	xchg   esp,eax
  41dce7:	ins    BYTE PTR es:[edi],dx
  41dce8:	retf   0x7041
  41dceb:	shr    BYTE PTR [esi+eiz*1-0x670e7426],cl
  41dcf2:	es ret 
  41dcf4:	push   ss
  41dcf5:	inc    ecx
  41dcf6:	and    al,0xbe
  41dcf8:	sbb    al,0x16
  41dcfa:	bound  esi,QWORD PTR [ecx+0x1f9975f8]
  41dd00:	mov    eax,ds:0xf8aa46ce
  41dd05:	cmp    eax,0x5734c1c0
  41dd0a:	fld    DWORD PTR [edi+0x752f73ea]
  41dd10:	hlt    
  41dd11:	mov    al,0x26
  41dd13:	xchg   BYTE PTR [eax+0x12de6177],bh
  41dd19:	cmp    DWORD PTR [ecx+ecx*1+0x36d14810],eax
  41dd20:	or     cl,BYTE PTR [esi-0x56842acc]
  41dd26:	cmp    eax,esp
  41dd28:	inc    ebx
  41dd29:	add    eax,0x153c00f5
  41dd2e:	and    al,0xd5
  41dd30:	outs   dx,BYTE PTR ds:[esi]
  41dd31:	jp     0x41dd87
  41dd33:	push   0x6d265d9
  41dd38:	out    dx,eax
  41dd39:	pushf  
  41dd3a:	or     ebx,ebp
  41dd3c:	mov    ebp,0xa567ef1b
  41dd41:	js     0x41dd6f
  41dd43:	inc    ebx
  41dd44:	xchg   ecx,eax
  41dd45:	fstp   TBYTE PTR [ebx+esi*2-0x18c1c17f]
  41dd4c:	cwde   
  41dd4d:	and    dl,BYTE PTR [ebp-0x7c]
  41dd50:	inc    esp
  41dd51:	(bad)  
  41dd52:	push   esp
  41dd53:	mov    edi,0x3bbf454d
  41dd58:	mov    al,0x1c
  41dd5a:	inc    edx
  41dd5b:	sub    esp,DWORD PTR [esi-0x1f]
  41dd5e:	xor    bl,dh
  41dd60:	xor    eax,DWORD PTR [ebp-0x1f]
  41dd63:	ficomp DWORD PTR [ecx-0x627e49fa]
  41dd69:	cmp    DWORD PTR [edx-0x2c],ebx
  41dd6c:	cmp    eax,0xc7022559
  41dd71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd72:	retf   
  41dd73:	nop
  41dd74:	xor    BYTE PTR [eax-0x78],ch
  41dd77:	dec    ebx
  41dd78:	inc    esi
  41dd79:	push   esp
  41dd7a:	pop    eax
  41dd7b:	inc    ecx
  41dd7c:	cwde   
  41dd7d:	add    bl,BYTE PTR [esi]
  41dd7f:	(bad)
  41dd82:	outs   dx,BYTE PTR ds:[esi]
  41dd83:	xchg   edx,eax
  41dd84:	gs in  al,dx
  41dd86:	ret    0x63bf
  41dd89:	ds retf 
  41dd8b:	push   0x7fcbfc93
  41dd90:	mov    edx,?
  41dd92:	jmp    0x3023e9ed
  41dd97:	jge    0x41dd34
  41dd99:	dec    esp
  41dd9a:	jno    0x41ddb0
  41dd9c:	pop    edi
  41dd9d:	test   DWORD PTR [esi-0x41],ebp
  41dda0:	xchg   BYTE PTR [ebx-0x41],al
  41dda3:	dec    esp
  41dda4:	xchg   ecx,eax
  41dda5:	add    BYTE PTR [ebx],ah
  41dda7:	loope  0x41dd96
  41dda9:	ja     0x41ddfe
  41ddab:	cli    
  41ddac:	and    BYTE PTR [edi],0xa2
  41ddaf:	out    dx,al
  41ddb0:	mov    edx,0x89dc9c12
  41ddb5:	(bad)  
  41ddb7:	dec    edi
  41ddb8:	sahf   
  41ddb9:	rol    BYTE PTR [edx-0x5c3cadc7],1
  41ddbf:	ret    0xc522
  41ddc2:	and    edx,DWORD PTR [ecx]
  41ddc4:	dec    BYTE PTR [ecx-0xc]
  41ddc7:	daa    
  41ddc8:	sub    ecx,DWORD PTR [edx]
  41ddca:	or     edx,ebx
  41ddcc:	aas    
  41ddcd:	jle    0x41ddfa
  41ddcf:	repnz inc ebx
  41ddd1:	jns    0x41dd62
  41ddd3:	push   ebp
  41ddd4:	sub    BYTE PTR [esi+esi*4],ch
  41ddd7:	jecxz  0x41ddc7
  41ddd9:	sub    dh,BYTE PTR [ecx-0x6de17f6b]
  41dddf:	pushf  
  41dde0:	xor    edi,esi
  41dde2:	jo     0x41dd77
  41dde4:	and    al,0x24
  41dde6:	xor    ah,BYTE PTR [esi-0x7d9a8d0b]
  41ddec:	sbb    esp,DWORD PTR [ecx+0x2ed152c3]
  41ddf2:	and    DWORD PTR [esi-0x39a670d6],eax
  41ddf8:	test   DWORD PTR [edx],ebx
  41ddfa:	mov    cl,0x61
  41ddfc:	pop    edx
  41ddfd:	xor    DWORD PTR [edx+0x26],esp
  41de00:	repz aad 0xa5
  41de03:	mov    BYTE PTR [ebx-0x6],bl
  41de06:	and    dh,bh
  41de08:	mov    esi,0x7288a3c4
  41de0d:	and    cl,dh
  41de0f:	sbb    eax,0x6b651c0d
  41de14:	mov    ebp,0x178928de
  41de19:	xchg   ebp,eax
  41de1a:	outs   dx,DWORD PTR ds:[esi]
  41de1b:	jp     0x41de55
  41de1d:	jb     0x41de59
  41de1f:	xor    BYTE PTR [ebp-0x6d],0xb9
  41de23:	mov    ah,dl
  41de25:	xchg   edx,eax
  41de26:	jnp    0x41de37
  41de28:	outs   dx,DWORD PTR ds:[esi]
  41de29:	cmp    eax,0xe07dc741
  41de2e:	lock ss inc ebp
  41de31:	loop   0x41de7f
  41de33:	cwde   
  41de34:	stc    
  41de35:	xor    dh,BYTE PTR [eax-0x132014d0]
  41de3b:	push   ecx
  41de3c:	xor    bh,BYTE PTR [ebx]
  41de3e:	cmp    al,0xd2
  41de40:	repnz jecxz 0x41de78
  41de43:	jae    0x41dde9
  41de45:	push   DWORD PTR [ecx+0x64]
  41de48:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41de4a:	lock or eax,0xb72231d2
  41de50:	ja     0x41dec4
  41de52:	add    ebp,DWORD PTR [esi+0x2a]
  41de55:	aas    
  41de56:	outs   dx,DWORD PTR ds:[esi]
  41de57:	xchg   ebp,eax
  41de58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de59:	into   
  41de5a:	push   0xfffffff5
  41de5c:	add    ebx,DWORD PTR [esi]
  41de5e:	leave  
  41de5f:	add    bh,BYTE PTR [eax+0x3a91751]
  41de65:	mov    ecx,esi
  41de67:	mov    edx,0xeb3889bf
  41de6c:	sbb    al,0x61
  41de6e:	inc    ebp
  41de6f:	sti    
  41de70:	jmp    0xd7d69070
  41de75:	(bad)  
  41de77:	inc    esp
  41de78:	pop    ds
  41de79:	test   eax,0xbc4914d3
  41de7e:	call   0x41b9272e
  41de83:	loop   0x41def3
  41de85:	pop    ebp
  41de86:	dec    edi
  41de87:	inc    ebp
  41de88:	jp     0x41def3
  41de8a:	lods   al,BYTE PTR ds:[esi]
  41de8b:	inc    ebx
  41de8c:	test   eax,0xc68810a5
  41de91:	test   BYTE PTR [edi],bl
  41de93:	dec    ebp
  41de94:	mov    esi,0x7db2da9
  41de99:	rcr    BYTE PTR [ecx-0x5b7a48ae],cl
  41de9f:	xor    dh,ch
  41dea1:	lods   al,BYTE PTR ds:[esi]
  41dea2:	mov    esi,0x9af0b35a
  41dea7:	lock xchg ebp,eax
  41dea9:	into   
  41deaa:	or     eax,0xf831e83d
  41deaf:	jne    0x41de78
  41deb1:	cmp    ebx,eax
  41deb3:	mov    DWORD PTR [esi+0x26a469d1],edi
  41deb9:	xchg   ecx,eax
  41deba:	cmp    BYTE PTR [edi+0x74],dl
  41debd:	dec    edx
  41debe:	ret    
  41debf:	aaa    
  41dec0:	and    al,0x67
  41dec2:	loope  0x41de9a
  41dec4:	call   0x295952c5
  41dec9:	xchg   ebp,eax
  41deca:	imul   ecx,DWORD PTR [ebx-0x6ce75798],0x7a
  41ded1:	or     eax,0xf6248b62
  41ded6:	clc    
  41ded7:	xchg   esi,eax
  41ded8:	popf   
  41ded9:	fwait
  41deda:	sub    esi,0x6e525f5c
  41dee0:	xor    eax,0xfafe5a0d
  41dee5:	jle    0x41df2a
  41dee7:	sar    DWORD PTR [ebp+eax*8+0x2e88309f],1
  41deee:	jmp    0x6a37:0x657779bd
  41def5:	ins    BYTE PTR es:[edi],dx
  41def6:	out    0x47,al
  41def8:	push   0xa3ab8740
  41defd:	dec    DWORD PTR [edx+0xed442b0]
  41df03:	mov    edx,0xadfc43ca
  41df08:	pop    edi
  41df09:	jne    0x41df30
  41df0b:	push   edi
  41df0c:	fistp  WORD PTR [ecx-0x34]
  41df0f:	gs iret 
  41df11:	and    al,0x67
  41df13:	mov    eax,ds:0x944e651f
  41df18:	lds    ecx,FWORD PTR [ebp-0x59]
  41df1b:	add    ecx,eax
  41df1d:	test   al,0x2f
  41df1f:	xor    al,0x6c
  41df21:	and    BYTE PTR [esi+0x40],ah
  41df24:	dec    eax
  41df25:	pop    esi
  41df26:	(bad)  
  41df27:	jmp    0x41dfa0
  41df29:	inc    ecx
  41df2a:	add    al,0x16
  41df2c:	fcmovbe st,st(0)
  41df2e:	cmp    DWORD PTR [eax],0x90eefba4
  41df34:	mov    edi,edx
  41df36:	ss inc esi
  41df38:	ret    0x4a7f
  41df3b:	lahf   
  41df3c:	adc    eax,0xaa802bf0
  41df41:	add    dl,BYTE PTR [edx+0x19]
  41df44:	(bad)  
  41df45:	adc    al,0x96
  41df47:	repz push es
  41df49:	mov    ?,WORD PTR [ebx-0x7e]
  41df4c:	adc    ch,dh
  41df4e:	and    DWORD PTR [ebp-0xc],esp
  41df51:	fs add eax,0x775654bf
  41df57:	mov    ah,0xba
  41df59:	inc    ebp
  41df5a:	rcr    DWORD PTR [ebx+0x58cb3b8b],1
  41df60:	shl    DWORD PTR [ecx],0x5d
  41df63:	stos   BYTE PTR es:[edi],al
  41df64:	xchg   edx,eax
  41df65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df66:	push   0x4df3b44b
  41df6b:	mov    esi,0xfbc4bee5
  41df70:	in     eax,dx
  41df71:	loope  0x41df58
  41df73:	jl     0x41dfdf
  41df75:	arpl   sp,di
  41df77:	retf   
  41df78:	aaa    
  41df79:	pop    es
  41df7a:	jp     0x41df39
  41df7c:	sub    al,0x56
  41df7e:	fs in  al,dx
  41df80:	lea    ebp,[esi]
  41df82:	sub    edi,DWORD PTR [ecx+0x152b13b9]
  41df88:	sbb    DWORD PTR [ebx],esi
  41df8a:	shl    DWORD PTR [eax],0x5
  41df8d:	ins    DWORD PTR es:[edi],dx
  41df8e:	stc    
  41df8f:	and    ebp,DWORD PTR [ebx]
  41df91:	mov    DWORD PTR ds:[edx-0x402fdbf0],esp
  41df98:	xor    dl,BYTE PTR [ebp-0x735df5a9]
  41df9e:	xchg   esp,eax
  41df9f:	or     ecx,DWORD PTR [edi]
  41dfa1:	out    dx,eax
  41dfa2:	retf   0x30ca
  41dfa5:	mov    esi,0x9f629949
  41dfaa:	dec    BYTE PTR [esp+esi*2]
  41dfad:	rol    BYTE PTR [edx-0x78bd92be],cl
  41dfb3:	jno    0x41e01b
  41dfb5:	xchg   ebp,eax
  41dfb6:	mov    al,0xc9
  41dfb8:	rcl    DWORD PTR [eax],0x7a
  41dfbb:	or     bl,BYTE PTR [eax+0x311c40f0]
  41dfc1:	pusha  
  41dfc2:	xchg   DWORD PTR [ebx],ecx
  41dfc4:	pop    es
  41dfc5:	inc    ebp
  41dfc6:	mov    ebx,0xf3c25cfe
  41dfcb:	call   0x1486:0xeba6c077
  41dfd2:	popf   
  41dfd3:	(bad)  
  41dfd4:	js     0x41dffb
  41dfd6:	lea    ebx,[ebp-0x4b82cf08]
  41dfdc:	bound  edi,QWORD PTR [edi]
  41dfde:	stos   BYTE PTR es:[edi],al
  41dfdf:	inc    edx
  41dfe0:	stos   DWORD PTR es:[edi],eax
  41dfe1:	in     al,dx
  41dfe2:	mov    bh,0x1
  41dfe4:	aad    0x70
  41dfe6:	add    eax,0xf7fa237e
  41dfeb:	in     eax,dx
  41dfec:	(bad)  
  41dfed:	mov    ebx,0x67299e86
  41dff2:	inc    ebx
  41dff3:	ins    BYTE PTR es:[edi],dx
  41dff4:	mov    DWORD PTR [edi],ecx
  41dff6:	ins    DWORD PTR es:[edi],dx
  41dff7:	mov    esp,DWORD PTR [ebp+ebx*4+0x66]
  41dffb:	pmaxub mm2,QWORD PTR [esp+esi*8+0x6c]
  41e000:	jbe    0x41dfb4
  41e002:	pop    edx
  41e003:	push   ebx
  41e004:	add    dl,BYTE PTR [edi-0x20ba6d73]
  41e00a:	sti    
  41e00b:	cdq    
  41e00c:	lahf   
  41e00d:	or     eax,0xc39e0a7a
  41e012:	mul    DWORD PTR [ebx+0x6]
  41e015:	daa    
  41e016:	xchg   esp,eax
  41e017:	jns    0x41df9a
  41e019:	ss or  cl,0x98
  41e01d:	add    BYTE PTR [ebp+0x58],ah
  41e020:	push   esi
  41e021:	in     eax,0x16
  41e023:	int    0x6d
  41e025:	xchg   BYTE PTR [edx],ch
  41e027:	jp     0x41dfd3
  41e029:	dec    edx
  41e02a:	or     dl,bh
  41e02c:	cwde   
  41e02d:	pop    esp
  41e02e:	adc    eax,esi
  41e030:	test   al,0x22
  41e032:	pop    ecx
  41e033:	add    DWORD PTR ds:0x3550cd95,edx
  41e039:	adc    esi,DWORD PTR [ebx+eax*8-0x44]
  41e03d:	jb     0x41e020
  41e03f:	adc    eax,0xeb2c8f66
  41e044:	loopne 0x41e076
  41e046:	call   0x76a8ea39
  41e04b:	ss or  al,0x85
  41e04e:	bound  ebp,QWORD PTR [eax-0x33ef8867]
  41e054:	add    edi,edx
  41e056:	outs   dx,BYTE PTR ds:[esi]
  41e057:	dec    edx
  41e058:	sub    edx,DWORD PTR [ebx]
  41e05a:	xchg   BYTE PTR [ebx+0x74],bh
  41e05d:	aad    0x6d
  41e05f:	xor    BYTE PTR es:[ebx],ah
  41e062:	mov    BYTE PTR [ecx-0x61],ah
  41e065:	mov    esi,0xf9d1da4f
  41e06a:	xchg   edx,eax
  41e06b:	sbb    bh,BYTE PTR [ecx+0x1a91376f]
  41e071:	pop    ebx
  41e072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e073:	push   0x45
  41e075:	push   cs
  41e076:	jb     0x41e0d3
  41e078:	fs mov cl,0x90
  41e07b:	stos   DWORD PTR es:[edi],eax
  41e07c:	adc    BYTE PTR [ebx+0x3c],dh
  41e07f:	or     DWORD PTR [esi-0x21fb51c1],ebx
  41e085:	cs scas eax,DWORD PTR es:[edi]
  41e087:	aas    
  41e088:	loope  0x41e04f
  41e08a:	mov    ah,0x26
  41e08c:	mov    ebp,0x1a2155b3
  41e091:	cmp    BYTE PTR [edx+0x15],dl
  41e094:	and    ecx,DWORD PTR [edi+0x7107a1ce]
  41e09a:	sbb    eax,0x8b45e13f
  41e09f:	xor    BYTE PTR [edx],bl
  41e0a1:	sub    al,0x29
  41e0a3:	inc    eax
  41e0a4:	sbb    ecx,DWORD PTR [edx+0x1a0e5f70]
  41e0aa:	adc    eax,0x769e06fc
  41e0af:	fisttp DWORD PTR [esi+ecx*4+0x2b]
  41e0b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0b4:	jno    0x41e046
  41e0b6:	push   es
  41e0b7:	fs ja  0x41e0ba
  41e0ba:	gs inc ebx
  41e0bc:	or     DWORD PTR ds:0x748777cf,esp
  41e0c2:	mov    ebx,0x2a515c7c
  41e0c7:	ds in  eax,dx
  41e0c9:	out    0x85,al
  41e0cb:	into   
  41e0cc:	mov    edx,0x34261224
  41e0d1:	rol    DWORD PTR [ebp+0x32],cl
  41e0d4:	ss ret 0x87ec
  41e0d8:	and    edx,ebx
  41e0da:	pop    ecx
  41e0db:	repnz outs dx,DWORD PTR ds:[esi]
  41e0dd:	retf   
  41e0de:	lods   eax,DWORD PTR ds:[esi]
  41e0df:	int3   
  41e0e0:	cmp    eax,0x9b703f1b
  41e0e5:	xchg   DWORD PTR [ebp+ebx*8+0x1ad54a35],esi
  41e0ec:	icebp  
  41e0ed:	add    cl,BYTE PTR [esi-0x3827a9f6]
  41e0f3:	mov    bh,0x52
  41e0f5:	and    al,0xf7
  41e0f7:	cld    
  41e0f8:	jge    0x41e174
  41e0fa:	inc    eax
  41e0fb:	in     eax,dx
  41e0fc:	ror    BYTE PTR [ebx+0x2505335],0x2e
  41e103:	aam    0x8d
  41e105:	push   0x5add8828
  41e10a:	push   0x26f2c900
  41e10f:	cmp    ebx,DWORD PTR [eax]
  41e111:	sub    eax,0x4adceef6
  41e116:	fisub  DWORD PTR [ebx+0x73]
  41e119:	mov    edi,0x3695fb13
  41e11e:	stos   DWORD PTR es:[edi],eax
  41e11f:	jnp    0x41e176
  41e121:	cmp    DWORD PTR [eax],ebx
  41e123:	or     DWORD PTR [esi],0x6b
  41e126:	into   
  41e127:	jmp    0x936d:0xe5a7edb8
  41e12e:	leave  
  41e12f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e130:	dec    ebx
  41e131:	mov    ah,0x84
  41e133:	push   edi
  41e134:	sbb    DWORD PTR [edx-0xd32bb6],esp
  41e13a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e13b:	mov    edi,0x94c3f15f
  41e140:	ss cs push edx
  41e143:	fidivr WORD PTR [eax+0x272484d0]
  41e149:	arpl   WORD PTR ds:0x5f0926e1,bp
  41e14f:	sub    BYTE PTR [ebp+0x26abd5d7],bl
  41e155:	loope  0x41e129
  41e157:	test   BYTE PTR [edi],bl
  41e159:	sahf   
  41e15a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e15b:	ins    BYTE PTR es:[edi],dx
  41e15c:	fcmovu st,st(1)
  41e15e:	mov    eax,0x9ecbc262
  41e163:	push   esp
  41e164:	enter  0x1c09,0xdf
  41e168:	adc    DWORD PTR [eax-0x12cd07b5],ebp
  41e16e:	in     al,0x94
  41e170:	pextrw edi,(bad),0xc5
  41e172:	cmp    al,0xa8
  41e174:	mov    edi,0x6e1f2bd8
  41e179:	inc    esi
  41e17a:	xchg   esp,eax
  41e17b:	popf   
  41e17c:	adc    eax,DWORD PTR [esp+ecx*8-0xf]
  41e180:	(bad)  
  41e181:	adc    al,BYTE PTR [eax+edi*2]
  41e184:	cdq    
  41e185:	xchg   esi,eax
  41e186:	fstp   TBYTE PTR [ebx-0x5]
  41e189:	sbb    al,bl
  41e18b:	mov    BYTE PTR [ebp-0x638f0c08],bh
  41e191:	and    ecx,DWORD PTR [esi]
  41e193:	mov    al,ds:0xab664e8
  41e198:	ins    DWORD PTR es:[edi],dx
  41e199:	es loope 0x41e1a2
  41e19c:	scas   al,BYTE PTR es:[edi]
  41e19d:	pop    ss
  41e19e:	(bad)  
  41e19f:	nop
  41e1a0:	iret   
  41e1a1:	loopne 0x41e1e2
  41e1a3:	rol    DWORD PTR [ebx],0x5a
  41e1a6:	dec    edi
  41e1a7:	mov    DWORD PTR ds:0xbbd28685,edx
  41e1ad:	xor    esi,ebp
  41e1af:	xchg   BYTE PTR [edx-0x20f88c39],ah
  41e1b5:	dec    ecx
  41e1b6:	cld    
  41e1b7:	mov    dl,0x4c
  41e1b9:	dec    eax
  41e1ba:	xchg   ebx,eax
  41e1bb:	aaa    
  41e1bc:	sbb    ah,BYTE PTR [esi]
  41e1be:	fs (bad) 
  41e1c0:	mov    cl,0x4f
  41e1c2:	das    
  41e1c3:	lds    eax,FWORD PTR [eax]
  41e1c5:	sub    DWORD PTR [ebp+0x1f],eax
  41e1c8:	imul   esi,DWORD PTR [ebp+0x0],0x47e5bf62
  41e1cf:	cmp    DWORD PTR [eax],0xf10a70c4
  41e1d5:	out    0x9b,al
  41e1d7:	lods   al,BYTE PTR ds:[esi]
  41e1d8:	and    BYTE PTR [edx+0x3e45a2e4],cl
  41e1de:	je     0x41e21f
  41e1e0:	js     0x41e1f1
  41e1e2:	pop    edx
  41e1e3:	loope  0x41e20a
  41e1e5:	jbe    0x41e1fc
  41e1e7:	push   ebx
  41e1e8:	push   es
  41e1e9:	xor    ch,BYTE PTR [esi+0x14bed4b9]
  41e1ef:	mov    al,ds:0x1a7e7b05
  41e1f4:	sbb    DWORD PTR [ebp+0x75],esi
  41e1f7:	jnp    0x41e1e5
  41e1f9:	pop    edi
  41e1fa:	jo     0x41e252
  41e1fc:	retf   0x7bf7
  41e1ff:	mov    esp,0xd8d99df7
  41e204:	xchg   edi,ecx
  41e206:	mov    bl,0xb8
  41e208:	cmc    
  41e209:	xchg   ebp,eax
  41e20a:	sub    BYTE PTR [ebx],cl
  41e20c:	aaa    
  41e20d:	mov    ebx,0x666a3ab6
  41e212:	(bad)  
  41e213:	push   eax
  41e214:	mov    ch,0x89
  41e216:	repnz adc ah,dh
  41e219:	fadd   QWORD PTR [edi+0x2a]
  41e21c:	sub    BYTE PTR [eax+0xcc0cdae],0x76
  41e223:	and    dl,BYTE PTR [eax+0x26]
  41e226:	sub    al,0xe2
  41e228:	add    cl,BYTE PTR [edx]
  41e22a:	xchg   DWORD PTR [ecx],esp
  41e22c:	in     eax,0x72
  41e22e:	or     eax,ebx
  41e230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e231:	lods   eax,DWORD PTR ds:[esi]
  41e232:	popf   
  41e233:	imul   esi,DWORD PTR [ecx-0x4d8556db],0xa448de11
  41e23d:	ror    BYTE PTR [ecx+0x3e5ab88b],1
  41e243:	scas   al,BYTE PTR es:[edi]
  41e244:	sbb    ebx,DWORD PTR [edi-0x13]
  41e247:	test   eax,0x932c627b
  41e24c:	rcr    BYTE PTR [ecx+0x5a2cc2b6],0xe
  41e253:	nop
  41e254:	imul   esi,DWORD PTR [ebp+0x4b657973],0xcfa28356
  41e25e:	stos   DWORD PTR es:[edi],eax
  41e25f:	add    esi,ebx
  41e261:	pop    eax
  41e262:	mov    eax,ds:0xd202073d
  41e267:	sub    eax,0xeceba382
  41e26c:	sbb    DWORD PTR [edi+0x16cc12ad],esi
  41e272:	call   0x217c:0x61f5f07b
  41e279:	dec    BYTE PTR [ebx-0x6f]
  41e27c:	or     al,0x95
  41e27e:	jmp    0x30a4330a
  41e283:	mov    bh,BYTE PTR [esp+edx*2+0x7e1d5fa7]
  41e28a:	mov    DWORD PTR ds:0x66af86b4,edi
  41e290:	js     0x41e247
  41e292:	pextrw ebp,mm1,0x64
  41e296:	dec    esp
  41e297:	mov    DWORD PTR [edi+0x2e],ebp
  41e29a:	dec    edx
  41e29b:	xchg   esp,eax
  41e29c:	fisttp QWORD PTR [esi]
  41e29e:	mov    BYTE PTR [ebx-0x7f],al
  41e2a1:	push   eax
  41e2a2:	pop    ebx
  41e2a3:	iret   
  41e2a4:	leave  
  41e2a5:	jns    0x41e26f
  41e2a7:	retf   0xe841
  41e2aa:	jge    0x41e23c
  41e2ac:	fdivr  QWORD PTR [edi]
  41e2ae:	jmp    0x56948910
  41e2b3:	jge    0x41e254
  41e2b5:	test   eax,0x87670e53
  41e2ba:	arpl   WORD PTR [eax-0x2d],si
  41e2bd:	pop    es
  41e2be:	bnd jp 0x41e2b3
  41e2c1:	or     al,0x2c
  41e2c3:	add    al,0xf2
  41e2c5:	dec    ecx
  41e2c6:	and    BYTE PTR [ecx-0x4],cl
  41e2c9:	adc    BYTE PTR [ebx],bh
  41e2cb:	sub    al,0x34
  41e2cd:	sub    eax,0x5be95b0f
  41e2d2:	mov    eax,0x5cfab237
  41e2d7:	lds    esp,FWORD PTR [ebx+0x14]
  41e2da:	out    0x13,al
  41e2dc:	ins    BYTE PTR es:[edi],dx
  41e2dd:	xlat   BYTE PTR ds:[ebx]
  41e2de:	mov    bl,0x8b
  41e2e0:	and    bl,bl
  41e2e2:	mov    ch,0x2e
  41e2e4:	push   edx
  41e2e5:	ja     0x41e337
  41e2e7:	push   esp
  41e2e8:	outs   dx,BYTE PTR ds:[esi]
  41e2e9:	sbb    BYTE PTR [esi],al
  41e2eb:	not    BYTE PTR ds:0xd90d13fe
  41e2f1:	fcomp  DWORD PTR [esp+esi*8+0x7fac5496]
  41e2f8:	xchg   ecx,eax
  41e2f9:	jo     0x41e2c6
  41e2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2fc:	mov    ds:0x8df5ec25,eax
  41e301:	in     al,dx
  41e302:	inc    edx
  41e303:	enter  0x42c4,0x97
  41e307:	ins    BYTE PTR es:[edi],dx
  41e308:	cwde   
  41e309:	fmul   QWORD PTR [ecx]
  41e30b:	push   0x23f0ce19
  41e310:	out    0x33,al
  41e312:	jbe    0x41e2d7
  41e314:	sbb    DWORD PTR [edi+0x662c3fb2],eax
  41e31a:	mov    BYTE PTR [edi],dh
  41e31c:	jnp    0x41e2e1
  41e31e:	xchg   esp,eax
  41e31f:	push   eax
  41e320:	jns    0x41e343
  41e322:	dec    ecx
  41e323:	push   cs
  41e324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e325:	stos   BYTE PTR es:[edi],al
  41e326:	out    dx,al
  41e327:	xor    eax,edi
  41e329:	xor    edx,0x0
  41e32c:	cmp    eax,0x70941e0f
  41e331:	jne    0x41e365
  41e337:	cmp    edx,0xffffffff
  41e33a:	jne    0x41e365
  41e340:	mov    eax,DWORD PTR [ebp-0x4]
  41e343:	movsx  eax,BYTE PTR [eax]
  41e346:	cdq    
  41e347:	add    eax,ebx
  41e349:	adc    edx,0xffffffff
  41e34c:	xor    eax,edi
  41e34e:	xor    edx,0x0
  41e351:	cmp    eax,0x70941e1c
  41e356:	jne    0x41e365
  41e35c:	cmp    edx,0xffffffff
  41e35f:	je     0x41e37c
  41e365:	mov    eax,DWORD PTR [ebp-0x10]
  41e368:	xor    eax,ecx
  41e36a:	mov    edx,0xffcd8d0d
  41e36f:	sub    edx,eax
  41e371:	add    DWORD PTR [ebp-0x4],edx
  41e374:	mov    eax,DWORD PTR [ebp-0x4]
  41e377:	jmp    0x41bf5a
  41e37c:	mov    eax,DWORD PTR [ebp-0x14]
  41e37f:	mov    eax,DWORD PTR [eax]
  41e381:	mov    edx,DWORD PTR [ebp-0x4]
  41e384:	mov    edx,DWORD PTR [edx+0x3c]
  41e387:	lea    eax,[edx+eax*8+0x78]
  41e38b:	mov    edx,DWORD PTR [ebp-0x4]
  41e38e:	mov    eax,DWORD PTR [eax+edx*1]
  41e391:	mov    DWORD PTR [ebp-0x8],eax
  41e394:	mov    eax,DWORD PTR [ebp+0x8]
  41e397:	xor    eax,ecx
  41e399:	add    eax,esi
  41e39b:	mov    DWORD PTR [ebp-0x14],eax
  41e39e:	mov    eax,DWORD PTR [ebp+0x8]
  41e3a1:	mov    edx,DWORD PTR [ebp-0x8]
  41e3a4:	xor    eax,ecx
  41e3a6:	add    eax,esi
  41e3a8:	cmp    edx,eax
  41e3aa:	jne    0x41e3c8
  41e3b0:	mov    eax,DWORD PTR [ebp+0xc]
  41e3b3:	xor    eax,ecx
  41e3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3b8:	add    eax,esi
  41e3ba:	imul   eax,ecx
  41e3bd:	mov    DWORD PTR [ebp-0x8],eax
  41e3c0:	push   DWORD PTR [ebp+0x18]
  41e3c3:	jmp    0x4207e6
  41e3c8:	mov    eax,DWORD PTR [ebp-0x8]
  41e3cb:	mov    ecx,DWORD PTR [ebp-0x4]
  41e3ce:	jmp    0x420791
  41e3d3:	test   BYTE PTR [eax+0x3d],cl
  41e3d6:	lock mov cl,0x80
  41e3d9:	or     BYTE PTR [eax],0x6f
  41e3dc:	enter  0xd93f,0x75
  41e3e0:	xor    BYTE PTR [edx+0x29],bh
  41e3e3:	adc    ebp,edx
  41e3e5:	add    BYTE PTR [ebx-0x7c7ca327],0xfe
  41e3ec:	mov    ecx,0x4b058b9d
  41e3f1:	xchg   edx,eax
  41e3f2:	repz jle 0xc86aa891
  41e3f9:	pop    ecx
  41e3fa:	outs   dx,BYTE PTR ds:[esi]
  41e3fb:	lods   al,BYTE PTR ds:[esi]
  41e3fc:	jb     0x41e39e
  41e3fe:	mov    WORD PTR [edi-0x4a],fs
  41e401:	xchg   ebx,eax
  41e402:	ins    DWORD PTR es:[edi],dx
  41e403:	aaa    
  41e404:	dec    esi
  41e405:	cmp    al,0xd7
  41e407:	test   eax,0x62016b8f
  41e40c:	pop    edx
  41e40d:	mov    bh,0x5d
  41e40f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e410:	or     bh,BYTE PTR [esi+0x4fa4ee9d]
  41e416:	nop
  41e417:	fst    QWORD PTR [ecx-0x4a67ce8f]
  41e41d:	lods   al,BYTE PTR ds:[esi]
  41e41e:	in     al,dx
  41e41f:	jmp    0xb09e:0xa344e117
  41e426:	dec    edi
  41e427:	add    al,0xef
  41e429:	test   BYTE PTR [edx+ebx*2-0x7ee55a1c],al
  41e430:	pop    ebp
  41e431:	jmp    0x41e41c
  41e433:	adc    BYTE PTR [ebp-0x23c6353e],ah
  41e439:	scas   eax,DWORD PTR es:[edi]
  41e43a:	aam    0xbd
  41e43c:	jle    0x41e42d
  41e43e:	inc    esi
  41e43f:	mov    cl,0x3d
  41e441:	fdiv   DWORD PTR [ebx+0x248b3ae8]
  41e447:	mov    esp,0xf356353b
  41e44d:	stos   BYTE PTR es:[edi],al
  41e44e:	in     eax,dx
  41e44f:	js     0x41e40c
  41e451:	mov    ebp,0x536a2b54
  41e456:	scas   eax,DWORD PTR es:[edi]
  41e457:	sub    eax,0x76c328ec
  41e45c:	dec    ebp
  41e45d:	in     eax,0xe6
  41e45f:	mov    ch,0xe6
  41e461:	imul   esp,edi,0x49
  41e464:	scas   eax,DWORD PTR es:[edi]
  41e465:	div    DWORD PTR [ebx-0x4e]
  41e468:	nop
  41e469:	mov    esi,esp
  41e46b:	xor    al,0x0
  41e46d:	cmp    eax,0xdd270389
  41e472:	pop    ebp
  41e473:	push   0x3bfe95eb
  41e478:	fld    TBYTE PTR [ecx-0x2c]
  41e47b:	xchg   esp,eax
  41e47c:	or     edx,edi
  41e47e:	add    DWORD PTR [eax],ecx
  41e480:	test   dh,ah
  41e482:	mov    al,ds:0x814eb77e
  41e487:	icebp  
  41e488:	xor    DWORD PTR [ecx-0x28720310],ecx
  41e48e:	int    0x29
  41e490:	jo     0x41e4ea
  41e492:	and    eax,0xeb0fb3f6
  41e497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e498:	and    DWORD PTR [ecx-0x3d],0xffffff9f
  41e49c:	and    esp,DWORD PTR [eax]
  41e49e:	push   edx
  41e49f:	mov    dh,0x4f
  41e4a1:	jnp    0x41e51c
  41e4a3:	push   eax
  41e4a4:	pop    edx
  41e4a5:	(bad)  
  41e4a6:	in     al,0x5d
  41e4a8:	int    0xcf
  41e4aa:	dec    BYTE PTR [esi+0x46]
  41e4ad:	out    dx,al
  41e4ae:	rol    BYTE PTR [esi+eax*1],cl
  41e4b1:	shl    ebp,0xe4
  41e4b4:	addr16 pop ds
  41e4b6:	sbb    DWORD PTR [edi-0x29902b7c],eax
  41e4bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4bd:	fptan  
  41e4bf:	lds    edi,FWORD PTR [edi+ebx*1]
  41e4c2:	xchg   ebx,eax
  41e4c3:	fadd   st,st(0)
  41e4c5:	push   0xffffffab
  41e4c7:	add    eax,0x45b72093
  41e4cc:	or     al,0x8d
  41e4ce:	mov    edi,0xac82cac4
  41e4d3:	out    dx,eax
  41e4d4:	xchg   ecx,eax
  41e4d5:	adc    ecx,DWORD PTR [esi+0x47]
  41e4d8:	scas   al,BYTE PTR es:[edi]
  41e4d9:	adc    cl,dl
  41e4db:	inc    ebp
  41e4dc:	pop    edi
  41e4dd:	shr    BYTE PTR [ecx+0x5e],0x62
  41e4e1:	mov    bl,0x91
  41e4e3:	repnz and DWORD PTR [ebx+0x7b96297f],edi
  41e4ea:	hlt    
  41e4eb:	pusha  
  41e4ec:	ds hlt 
  41e4ee:	push   0x1d
  41e4f0:	sbb    eax,0xf8c6d4bc
  41e4f5:	pop    esp
  41e4f6:	add    al,0x39
  41e4f8:	cs shl eax,cl
  41e4fb:	mov    bl,0x2b
  41e4fd:	sahf   
  41e4fe:	xchg   ecx,eax
  41e4ff:	dec    esi
  41e500:	test   eax,0x35c0b1f4
  41e505:	and    edi,DWORD PTR [ebx]
  41e507:	out    0x3d,al
  41e509:	imul   ecx,DWORD PTR [edi+ebx*8],0xffffffde
  41e50d:	and    al,0xe0
  41e50f:	mov    ds:0x965f3ea6,eax
  41e514:	out    dx,al
  41e515:	or     edx,esp
  41e517:	sbb    edi,DWORD PTR [ecx+0x3f]
  41e51a:	pop    es
  41e51b:	mov    al,0xf9
  41e51d:	cmp    dl,BYTE PTR [eax]
  41e51f:	mov    ebp,0x2abbdcbf
  41e524:	mov    edi,0xf23dc1f6
  41e529:	test   BYTE PTR [esi+esi*4],0x39
  41e52d:	cmp    ebx,ebx
  41e52f:	rol    DWORD PTR [edi-0x53],cl
  41e532:	ds retf 0x730b
  41e536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e537:	retf   0x81c3
  41e53a:	sbb    eax,0x9db07479
  41e53f:	lods   eax,DWORD PTR ds:[esi]
  41e540:	sbb    DWORD PTR [esi+0x27],ebx
  41e543:	ja     0x41e559
  41e545:	sbb    BYTE PTR [edi+0x5f],al
  41e548:	cmp    BYTE PTR [ebx],cl
  41e54a:	sbb    BYTE PTR [ecx],ch
  41e54c:	xchg   ecx,eax
  41e54d:	mov    dh,0xaf
  41e54f:	cmp    al,0x3c
  41e551:	xchg   BYTE PTR [esp+eax*1-0x20],ah
  41e555:	xchg   BYTE PTR [edi-0x11],dh
  41e558:	cmc    
  41e559:	or     eax,0xfae83631
  41e55e:	data16 cmp bh,BYTE PTR ds:0x5b0b6b88
  41e565:	rcr    DWORD PTR [ecx],cl
  41e567:	loope  0x41e4fd
  41e569:	pop    edi
  41e56a:	xchg   esp,eax
  41e56b:	pushf  
  41e56c:	jge    0x41e5ba
  41e56e:	test   eax,0xc19cae32
  41e573:	push   edx
  41e574:	mov    ah,bl
  41e576:	lahf   
  41e577:	(bad)  
  41e578:	pop    esi
  41e579:	int    0xaf
  41e57b:	or     bl,BYTE PTR [edi-0x4d]
  41e57e:	jae    0x41e557
  41e580:	sbb    dl,al
  41e582:	(bad)  
  41e583:	(bad)  
  41e584:	fs pop edi
  41e586:	push   edi
  41e587:	out    dx,al
  41e588:	dec    edi
  41e589:	in     al,0x1f
  41e58b:	(bad)  
  41e58d:	xor    ebp,edx
  41e58f:	push   ds
  41e590:	clc    
  41e591:	popf   
  41e592:	xor    al,0x73
  41e594:	add    eax,DWORD PTR [eax+0x24dfb9c7]
  41e59a:	lea    edi,[ebp-0x45]
  41e59d:	test   al,0xf7
  41e59f:	mov    edi,0x82ec8950
  41e5a4:	stos   BYTE PTR es:[edi],al
  41e5a5:	adc    BYTE PTR [esi],bh
  41e5a7:	or     BYTE PTR [eax],0x4f
  41e5aa:	cwde   
  41e5ab:	jnp    0x41e609
  41e5ad:	push   0xdfd9ae7
  41e5b2:	or     eax,0x480d6f0a
  41e5b7:	mov    esp,0x9042a843
  41e5bc:	adc    al,0x59
  41e5be:	pop    ebp
  41e5bf:	jle    0x41e610
  41e5c1:	cmp    ch,BYTE PTR [edi+0x68]
  41e5c4:	test   eax,0x64350219
  41e5c9:	push   esi
  41e5ca:	inc    esi
  41e5cb:	xchg   esi,eax
  41e5cc:	pop    esi
  41e5cd:	adc    BYTE PTR [edx],ch
  41e5cf:	fld    DWORD PTR [edx]
  41e5d1:	mov    esp,0xc0fa15b6
  41e5d6:	outs   dx,DWORD PTR ds:[esi]
  41e5d7:	test   eax,0xe5e1f7eb
  41e5dc:	mov    al,0xdf
  41e5de:	lods   al,BYTE PTR ds:[esi]
  41e5df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5e0:	push   es
  41e5e1:	push   0x99e00479
  41e5e6:	pushf  
  41e5e7:	(bad)  
  41e5e8:	jne    0x41e595
  41e5ea:	dec    ebp
  41e5eb:	xor    dh,BYTE PTR [ebp-0x6cab5b31]
  41e5f1:	loopne 0x41e5ce
  41e5f3:	cmp    ah,BYTE PTR [di-0x6cd4]
  41e5f8:	and    BYTE PTR [eax],ch
  41e5fa:	imul   edi,DWORD PTR cs:[eax-0xe0a7b76],0xae0116d8
  41e605:	jp     0x41e5c8
  41e607:	mov    bh,0xda
  41e609:	mov    ebx,0x312f261b
  41e60e:	mov    BYTE PTR [eax-0x48],bl
  41e611:	push   0xffffffd4
  41e613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e614:	or     DWORD PTR [ecx],ebx
  41e616:	test   al,0xd1
  41e618:	pop    ebp
  41e619:	cmp    ah,bl
  41e61b:	aam    0x26
  41e61d:	mov    ds:0xa804eab3,eax
  41e622:	pusha  
  41e623:	aas    
  41e624:	fild   DWORD PTR [ebx]
  41e626:	dec    esp
  41e627:	sub    BYTE PTR [edx+0x4a],ch
  41e62a:	shr    DWORD PTR [edi],0x2b
  41e62d:	and    BYTE PTR [eax-0x12],dh
  41e630:	int3   
  41e631:	adc    DWORD PTR [eax],esp
  41e633:	xchg   ecx,eax
  41e634:	sub    al,0x31
  41e636:	out    dx,al
  41e637:	sub    ebx,ebx
  41e639:	xchg   esi,eax
  41e63a:	dec    ebx
  41e63b:	mov    edx,DWORD PTR [eax+0x37]
  41e63e:	(bad)  
  41e63f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e640:	fidivr DWORD PTR [esi+0x450e8c6c]
  41e646:	add    dh,BYTE PTR [esi-0x2d97a6a]
  41e64c:	jecxz  0x41e689
  41e64e:	mov    ebx,0xbc479e3a
  41e653:	dec    ebx
  41e654:	pop    es
  41e655:	mov    al,BYTE PTR [ebp+edi*4-0x30adb4b9]
  41e65c:	mov    esi,DWORD PTR [edx-0x70b254de]
  41e662:	push   edx
  41e663:	leave  
  41e664:	not    DWORD PTR [ebp-0x18649669]
  41e66a:	xor    ebp,ecx
  41e66c:	hlt    
  41e66d:	sbb    dh,BYTE PTR [esi-0x6b]
  41e670:	test   eax,0x880262d0
  41e675:	sahf   
  41e676:	xor    DWORD PTR [ecx],ecx
  41e678:	sub    eax,0xf2f510c0
  41e67d:	sbb    bl,al
  41e67f:	mov    dl,BYTE PTR [esi+0x5b]
  41e682:	les    esp,FWORD PTR [edx+edx*2+0x7bee8984]
  41e689:	cmp    ch,BYTE PTR [ecx-0x11c2b4d3]
  41e68f:	mov    esi,0xe6808476
  41e694:	ficomp DWORD PTR [edi]
  41e696:	dec    ecx
  41e697:	mov    esp,0xef894782
  41e69c:	dec    esi
  41e69d:	sbb    dh,BYTE PTR [ecx+0x184d2a17]
  41e6a3:	fcomp  DWORD PTR [eax+0x19fe2a12]
  41e6a9:	xchg   DWORD PTR [ecx+ecx*8],esp
  41e6ac:	repnz mov DWORD PTR [eax+0x38],esp
  41e6b0:	imul   eax,DWORD PTR [ebp-0x6adf7731],0x68
  41e6b7:	or     BYTE PTR ds:0x13709d3c,bl
  41e6bd:	push   0x958c50ba
  41e6c2:	adc    dh,BYTE PTR es:[edx+edi*8+0x15]
  41e6c7:	popa   
  41e6c8:	push   DWORD PTR [ecx-0x6b]
  41e6cb:	adc    BYTE PTR [esp+esi*2],0x15
  41e6cf:	mov    dh,0xd1
  41e6d1:	pop    ebp
  41e6d2:	fstp   st(5)
  41e6d4:	jnp    0x41e73a
  41e6d6:	loopne 0x41e73e
  41e6d8:	push   esp
  41e6d9:	cmp    al,0xf4
  41e6db:	mov    ecx,0x7257fa26
  41e6e0:	mov    eax,0xd530f940
  41e6e5:	lea    edx,[edx]
  41e6e7:	jp     0x41e6b6
  41e6e9:	add    eax,0xb4e5e29c
  41e6ee:	fcomp  DWORD PTR [edi+0x78296fc0]
  41e6f4:	cmp    ebx,edx
  41e6f6:	push   0xe
  41e6f8:	icebp  
  41e6f9:	fsubp  st(4),st
  41e6fb:	jp     0x41e6cd
  41e6fd:	int    0x79
  41e6ff:	das    
  41e700:	mov    esi,0x40fe9fad
  41e705:	pop    ecx
  41e706:	mov    ah,0xae
  41e708:	cld    
  41e709:	test   eax,0x2e8c6ed2
  41e70e:	cmp    ecx,ecx
  41e710:	xor    al,0x82
  41e712:	int    0xe8
  41e714:	push   ecx
  41e715:	cmp    ah,BYTE PTR [edx]
  41e717:	adc    al,0x4
  41e719:	push   esi
  41e71a:	push   es
  41e71b:	mov    edi,0x26aa6469
  41e720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e721:	jecxz  0x41e78b
  41e723:	loop   0x41e75c
  41e725:	push   ebx
  41e726:	cld    
  41e727:	inc    edi
  41e728:	sbb    al,0x74
  41e72a:	repz mov al,0x66
  41e72d:	sbb    ch,BYTE PTR [ebx+0xc]
  41e730:	mov    fs,eax
  41e732:	lea    edi,[ebx+ecx*1]
  41e735:	cmp    BYTE PTR [eax],bl
  41e737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e738:	jge    0x41e706
  41e73a:	jecxz  0x41e706
  41e73c:	mov    bl,0xdc
  41e73e:	xchg   edi,eax
  41e73f:	xchg   ebx,eax
  41e740:	leave  
  41e741:	ins    DWORD PTR es:[edi],dx
  41e742:	out    dx,al
  41e743:	mov    esp,0xbf0d62f1
  41e748:	add    ah,BYTE PTR [ebx+0x1ee9f614]
  41e74e:	ss ret 
  41e750:	loope  0x41e6df
  41e752:	in     eax,dx
  41e753:	(bad)  
  41e754:	loope  0x41e6dc
  41e756:	pop    ds
  41e757:	leave  
  41e758:	push   esp
  41e759:	inc    DWORD PTR [ecx+esi*1-0x36]
  41e75d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e75e:	lock fdiv DWORD PTR [esi+0x59]
  41e762:	es and ch,ah
  41e765:	inc    edi
  41e766:	add    al,0x7
  41e768:	sbb    al,dl
  41e76a:	out    dx,al
  41e76b:	jecxz  0x41e72d
  41e76d:	iret   
  41e76e:	shr    BYTE PTR [edx-0x5672b9da],1
  41e774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e775:	sbb    ebp,esi
  41e777:	sub    eax,0x6620e9e5
  41e77c:	nop
  41e77d:	dec    esp
  41e77e:	mov    cl,0xc0
  41e780:	fs push ebp
  41e782:	adc    DWORD PTR [edx-0x38],ebp
  41e785:	xchg   DWORD PTR [edi+edx*1],ecx
  41e788:	mov    bl,0xc6
  41e78a:	jg     0x41e7f2
  41e78c:	daa    
  41e78d:	stos   BYTE PTR es:[edi],al
  41e78e:	cmc    
  41e78f:	outs   dx,DWORD PTR ds:[esi]
  41e790:	push   edx
  41e791:	pop    ecx
  41e792:	push   ebx
  41e793:	cmp    BYTE PTR [ecx+ebx*2+0x34],cl
  41e797:	enter  0xb918,0x44
  41e79b:	sar    DWORD PTR [edx+0x6cf690ce],1
  41e7a1:	jnp    0x41e787
  41e7a3:	dec    edx
  41e7a4:	(bad)  
  41e7a5:	pop    ss
  41e7a6:	jge    0x41e81a
  41e7a8:	dec    ebx
  41e7a9:	xor    cl,al
  41e7ab:	jecxz  0x41e776
  41e7ad:	rol    ebp,cl
  41e7af:	and    DWORD PTR [eax],ebp
  41e7b1:	lock fdiv st(5),st
  41e7b4:	and    al,0x86
  41e7b6:	cmp    DWORD PTR [eax+0x6f],edx
  41e7b9:	nop
  41e7ba:	call   0x6099c62d
  41e7bf:	push   0x1557bc0a
  41e7c4:	adc    eax,0x1c421fb6
  41e7c9:	push   ebp
  41e7ca:	mov    esi,esi
  41e7cc:	vandpd xmm1,xmm4,XMMWORD PTR [ebx]
  41e7d0:	and    bl,BYTE PTR [ebp+0x68ea5c60]
  41e7d6:	mov    eax,0x83f00cb8
  41e7db:	adc    al,0x57
  41e7dd:	ins    BYTE PTR es:[edi],dx
  41e7de:	lea    ebx,[ecx]
  41e7e0:	push   ebx
  41e7e1:	test   BYTE PTR [edi],bh
  41e7e3:	xor    DWORD PTR [ecx+esi*8-0x3e],edx
  41e7e7:	or     edi,DWORD PTR [edi-0x6729940a]
  41e7ed:	lods   al,BYTE PTR ds:[esi]
  41e7ee:	cmp    al,0x50
  41e7f0:	push   ecx
  41e7f1:	out    0xe6,al
  41e7f3:	mov    ah,0x6f
  41e7f5:	(bad)  
  41e7f6:	fcomp  DWORD PTR [ebx+ebp*2-0x2d]
  41e7fa:	xor    DWORD PTR [ecx-0x7418a24f],esp
  41e800:	les    edx,FWORD PTR [ebx-0x557484b0]
  41e806:	mov    edi,0x606d5cd3
  41e80b:	in     eax,0x3e
  41e80d:	mov    dh,0xed
  41e80f:	mul    BYTE PTR [edi+0xd]
  41e812:	xor    ah,BYTE PTR [edi+ebx*4+0x2ab94d6d]
  41e819:	jle    0x41e84e
  41e81b:	lds    edi,FWORD PTR [eax]
  41e81d:	push   0x78392181
  41e822:	ffree  st(5)
  41e824:	mov    ?,eax
  41e826:	cmp    al,0xe1
  41e828:	in     al,0x7d
  41e82a:	inc    edi
  41e82b:	cmp    esp,DWORD PTR [edx-0x2]
  41e82e:	retf   0x575
  41e831:	dec    ebp
  41e832:	xor    al,BYTE PTR [edi+eiz*2]
  41e835:	mov    edx,0x9af5fd41
  41e83a:	dec    esp
  41e83b:	imul   ebp,DWORD PTR [ecx],0xffffffb5
  41e83e:	and    eax,0x3cb3d258
  41e843:	jmp    0xa5ea6934
  41e848:	xchg   edx,eax
  41e849:	sbb    eax,0xa6811fe7
  41e84e:	sub    esi,ebp
  41e850:	shl    BYTE PTR [edx+0xb6f2b5c],cl
  41e856:	mov    dl,0xb4
  41e858:	pop    esi
  41e859:	add    ebx,DWORD PTR [edx+esi*4]
  41e85c:	jle    0x41e895
  41e85e:	mov    al,ds:0xd0df5cba
  41e863:	popf   
  41e864:	adc    al,0x4e
  41e866:	push   cs
  41e867:	inc    esi
  41e868:	xchg   ebx,eax
  41e869:	mov    es,WORD PTR [eax]
  41e86b:	xor    dl,bl
  41e86d:	mov    ebp,0xaec76d9e
  41e872:	les    edi,FWORD PTR [eax-0x3]
  41e875:	icebp  
  41e876:	ffreep st(0)
  41e878:	test   eax,0x116f57fd
  41e87d:	jno    0x41e895
  41e87f:	dec    eax
  41e880:	dec    BYTE PTR [edx+0x5680ed57]
  41e886:	push   ebp
  41e887:	xchg   esp,eax
  41e888:	and    BYTE PTR [esi-0x6e],bh
  41e88b:	and    BYTE PTR [edi+0x79],0x67
  41e88f:	xor    edi,DWORD PTR [ecx+ebp*4-0x1ae63cb3]
  41e896:	cmp    al,0xf7
  41e898:	cmp    ch,BYTE PTR [ecx-0x4a285a33]
  41e89e:	(bad)  
  41e8a0:	mov    ecx,0x61d9a403
  41e8a5:	cmp    DWORD PTR [edx+0x353297ab],0x61
  41e8ac:	jl     0x41e8de
  41e8ae:	mov    ch,0x8b
  41e8b0:	stos   DWORD PTR es:[edi],eax
  41e8b1:	jae    0x85c806eb
  41e8b7:	cmp    DWORD PTR [esi],edx
  41e8b9:	xchg   esp,eax
  41e8ba:	jo     0x41e8cb
  41e8bc:	mov    ds:0xe7122941,al
  41e8c1:	mov    DWORD PTR [ebp-0x36],eax
  41e8c4:	popf   
  41e8c5:	shr    ah,cl
  41e8c7:	sub    al,0xe
  41e8c9:	ins    BYTE PTR es:[edi],dx
  41e8ca:	std    
  41e8cb:	fsubr  st,st(5)
  41e8cd:	repnz add bh,ch
  41e8d0:	inc    eax
  41e8d1:	scas   eax,DWORD PTR es:[edi]
  41e8d2:	inc    ebp
  41e8d3:	inc    eax
  41e8d4:	fcom   QWORD PTR [ecx+0x2e7946e2]
  41e8da:	clc    
  41e8db:	int3   
  41e8dc:	fst    QWORD PTR [ecx-0x2]
  41e8df:	or     DWORD PTR [edi],ecx
  41e8e1:	cmc    
  41e8e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8e3:	in     al,dx
  41e8e4:	addr16 jbe 0x41e8f4
  41e8e7:	dec    ebp
  41e8e8:	dec    eax
  41e8e9:	loopne 0x41e8e7
  41e8eb:	xchg   ebp,eax
  41e8ec:	jmp    0x7405:0xb848780f
  41e8f3:	inc    esp
  41e8f4:	sar    DWORD PTR [ebx],cl
  41e8f6:	pop    edi
  41e8f7:	inc    esp
  41e8f8:	test   BYTE PTR [esi+0xadad725],bh
  41e8fe:	jecxz  0x41e961
  41e900:	stos   DWORD PTR es:[edi],eax
  41e901:	xchg   ebp,eax
  41e902:	in     eax,dx
  41e903:	inc    edi
  41e904:	fsub   QWORD PTR [ecx+0x33]
  41e907:	sbb    al,0xb8
  41e909:	jl     0x41e8bd
  41e90b:	aas    
  41e90c:	and    DWORD PTR ds:0xf287132d,edx
  41e912:	xor    ebp,DWORD PTR [ebx-0x4ec52914]
  41e918:	fnstcw WORD PTR [ebx+0x3a]
  41e91b:	xchg   edi,eax
  41e91c:	std    
  41e91d:	inc    eax
  41e91e:	outs   dx,BYTE PTR ds:[esi]
  41e91f:	push   ds
  41e920:	pushf  
  41e921:	jnp    0x41e90a
  41e923:	inc    esp
  41e924:	sbb    dl,BYTE PTR ds:0x81982087
  41e92a:	mov    ebx,0x24e2a696
  41e92f:	adc    esp,DWORD PTR [ecx]
  41e931:	stos   BYTE PTR es:[edi],al
  41e932:	hlt    
  41e933:	je     0x41e8bd
  41e935:	pop    ds
  41e936:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e937:	cmp    eax,0x48697b67
  41e93c:	adc    BYTE PTR [ebp+0x4c],bl
  41e93f:	call   0xdd9b:0x84b65311
  41e946:	imul   ebp,DWORD PTR [esi],0xffffff8e
  41e949:	add    eax,DWORD PTR [edi+0x341e9d42]
  41e94f:	dec    ebx
  41e950:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e951:	ja     0x41e9d2
  41e953:	arpl   WORD PTR [edx-0x435a409b],ax
  41e959:	push   edi
  41e95a:	test   al,0xc4
  41e95c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e95d:	mov    ds:0x41c13deb,al
  41e962:	xchg   esi,eax
  41e963:	mov    ebx,0xf5f81f3a
  41e968:	lock jns 0x41e9c8
  41e96b:	adc    bl,BYTE PTR [ebx-0x78f06701]
  41e971:	mov    ebx,0x556f81ee
  41e976:	bound  esp,QWORD PTR es:[ebx+0x5bdd9137]
  41e97d:	jno    0x41e997
  41e97f:	or     ch,0x96
  41e982:	rol    bh,cl
  41e984:	stc    
  41e985:	retf   
  41e986:	jns    0x41e941
  41e988:	test   al,0x1b
  41e98a:	out    dx,eax
  41e98b:	(bad)  
  41e98c:	lahf   
  41e98d:	clc    
  41e98e:	push   ss
  41e98f:	test   dx,ax
  41e992:	jmp    DWORD PTR [ecx-0x1071c1af]
  41e998:	int3   
  41e999:	mov    dh,0x91
  41e99b:	ja     0x41e9a0
  41e99d:	fst    DWORD PTR [eax-0x6f]
  41e9a0:	adc    dl,BYTE PTR [esi+0x5]
  41e9a3:	dec    ebx
  41e9a5:	inc    edi
  41e9a6:	pop    eax
  41e9a7:	(bad)  
  41e9a9:	scas   eax,DWORD PTR es:[edi]
  41e9aa:	loope  0x41e9ee
  41e9ac:	add    al,0x89
  41e9ae:	mov    eax,0xca36bd9b
  41e9b3:	add    eax,DWORD PTR [esi-0x52aa2996]
  41e9b9:	push   ebp
  41e9ba:	lods   eax,DWORD PTR ds:[esi]
  41e9bb:	xor    BYTE PTR [edx+0x36fca501],ah
  41e9c1:	mov    al,0x2d
  41e9c3:	ror    ah,0x80
  41e9c6:	popa   
  41e9c7:	aaa    
  41e9c8:	jg     0x41e9fc
  41e9ca:	pop    es
  41e9cb:	call   FWORD PTR [ecx+0x73825704]
  41e9d1:	je     0x41e957
  41e9d3:	dec    edx
  41e9d4:	xor    ch,ah
  41e9d6:	arpl   WORD PTR [edx+0x5b5d8b94],bp
  41e9dc:	call   0x8f39:0xbbeb5c7a
  41e9e3:	xchg   ecx,eax
  41e9e4:	lods   eax,DWORD PTR ds:[esi]
  41e9e5:	sti    
  41e9e6:	shl    ebx,0x3f
  41e9e9:	sub    eax,0x3eab0e9b
  41e9ee:	and    eax,edx
  41e9f0:	ret    0x8f94
  41e9f3:	das    
  41e9f4:	adc    esp,esi
  41e9f6:	outs   dx,DWORD PTR ds:[esi]
  41e9f7:	mov    al,0xf1
  41e9f9:	in     al,0x10
  41e9fb:	dec    edi
  41e9fc:	push   0x7ddaecb4
  41ea01:	sbb    ah,BYTE PTR [ebx+0x44]
  41ea04:	ja     0x41ea74
  41ea06:	leave  
  41ea07:	mov    al,ds:0x507df21d
  41ea0c:	shr    BYTE PTR [ebp+ecx*1+0x46c073f0],1
  41ea13:	and    al,0x9d
  41ea15:	stos   BYTE PTR es:[edi],al
  41ea16:	ret    0x9620
  41ea19:	es repnz push ebp
  41ea1c:	cmc    
  41ea1d:	add    BYTE PTR [ecx+0x57],ah
  41ea20:	call   0xfd49c554
  41ea25:	hlt    
  41ea26:	mov    ah,0xa6
  41ea28:	add    ebp,ecx
  41ea2a:	lods   eax,DWORD PTR ds:[esi]
  41ea2b:	sahf   
  41ea2c:	dec    ebp
  41ea2d:	jecxz  0x41e9c9
  41ea2f:	and    cl,BYTE PTR [edx+edx*4]
  41ea32:	or     BYTE PTR [ebx+ecx*4-0x1c],bh
  41ea36:	inc    ebx
  41ea37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea38:	sar    bh,0x2e
  41ea3b:	out    0x36,al
  41ea3d:	ror    BYTE PTR [edi+0x36075893],1
  41ea43:	add    BYTE PTR [esi],ch
  41ea45:	pop    ds
  41ea46:	lock add ch,al
  41ea49:	mov    bl,BYTE PTR [esi]
  41ea4b:	mov    es,WORD PTR [edx+0xecde0ff]
  41ea51:	out    dx,eax
  41ea52:	loop   0x41e9d5
  41ea54:	jge    0x41e9e5
  41ea56:	inc    ebx
  41ea57:	and    ch,0x19
  41ea5a:	call   0x9792c168
  41ea5f:	(bad)  
  41ea60:	scas   eax,DWORD PTR es:[edi]
  41ea61:	loop   0x41e9f5
  41ea63:	mov    DWORD PTR [ecx-0x2f],0x93025b75
  41ea6a:	das    
  41ea6b:	lahf   
  41ea6c:	repz push edx
  41ea6e:	cmp    edi,ebx
  41ea70:	and    DWORD PTR [esi+eax*1],0xffffffaf
  41ea74:	adc    DWORD PTR [edi+edx*4+0x58],edi
  41ea78:	fidivr DWORD PTR [eax+0x51]
  41ea7b:	int3   
  41ea7c:	ins    DWORD PTR es:[edi],dx
  41ea7d:	cmp    BYTE PTR ds:0x6626e6e3,0x7e
  41ea84:	sti    
  41ea85:	mov    eax,ds:0xd831c001
  41ea8a:	das    
  41ea8b:	leave  
  41ea8c:	jg     0x41eadd
  41ea8e:	mov    eax,ds:0x959bf7fc
  41ea93:	push   esi
  41ea94:	hlt    
  41ea95:	inc    edi
  41ea96:	sub    esp,DWORD PTR [eax+0x75]
  41ea99:	pop    DWORD PTR [ebx+0x3d]
  41ea9c:	push   ss
  41ea9d:	adc    eax,0x7ae06716
  41eaa2:	mov    ds:0x9e5e1014,eax
  41eaa7:	adc    DWORD PTR [esi-0x15],ebp
  41eaaa:	push   0x69500a00
  41eaaf:	pop    eax
  41eab0:	xchg   edx,eax
  41eab1:	xchg   ecx,eax
  41eab2:	out    dx,al
  41eab3:	int3   
  41eab4:	imul   esi,edx,0xd37c035a
  41eaba:	or     bh,BYTE PTR [esi]
  41eabc:	xlat   BYTE PTR ds:[ebx]
  41eabd:	dec    edx
  41eabe:	sbb    BYTE PTR [esi+0x9],cl
  41eac1:	xchg   esp,eax
  41eac2:	test   BYTE PTR [ebp+0xa],cl
  41eac5:	xchg   ecx,eax
  41eac6:	pop    ebx
  41eac7:	stos   DWORD PTR es:[edi],eax
  41eac8:	mov    WORD PTR [edi+0x59c0aca1],cs
  41eace:	fbstp  TBYTE PTR [ebx]
  41ead0:	fcom   DWORD PTR [edx-0x1]
  41ead3:	sahf   
  41ead4:	mov    esi,0xebac85d5
  41ead9:	scas   al,BYTE PTR es:[edi]
  41eada:	leave  
  41eadb:	and    BYTE PTR [edi+ebx*1+0x5d8616b3],ch
  41eae2:	(bad)  
  41eae3:	xchg   ebp,eax
  41eae4:	ins    DWORD PTR es:[edi],dx
  41eae5:	data16 mov BYTE PTR [ecx],ch
  41eae8:	pop    es
  41eae9:	fistp  WORD PTR [edx]
  41eaeb:	stos   BYTE PTR es:[edi],al
  41eaec:	jne    0x41eaea
  41eaee:	addr16 push cs
  41eaf0:	sbb    esi,DWORD PTR [ebx]
  41eaf2:	iret   
  41eaf3:	jae    0x41eaec
  41eaf5:	jno    0x41eafe
  41eaf7:	lods   al,BYTE PTR ds:[esi]
  41eaf8:	dec    edi
  41eaf9:	pop    esp
  41eafa:	adc    BYTE PTR [eax],bl
  41eafc:	rol    BYTE PTR [edx-0x7c80f04b],cl
  41eb02:	cmp    DWORD PTR [ebp+0x540ecb45],ecx
  41eb08:	sbb    bh,BYTE PTR [edx-0xd7e3a61]
  41eb0e:	adc    cl,BYTE PTR [edi+0x19]
  41eb11:	mov    esi,0x80fb810d
  41eb16:	pop    ss
  41eb17:	call   0x23e5:0xb5857b25
  41eb1e:	push   esi
  41eb1f:	xor    DWORD PTR [ecx-0x1d],edi
  41eb22:	fst    DWORD PTR [edx-0x4f02b937]
  41eb28:	je     0x41eb37
  41eb2a:	push   es
  41eb2b:	std    
  41eb2c:	xchg   ebp,eax
  41eb2d:	or     DWORD PTR [ecx+0x2b],ebx
  41eb30:	jne    0x41eb82
  41eb32:	xchg   edx,eax
  41eb33:	sub    DWORD PTR [edi+esi*1+0x64],eax
  41eb37:	lds    edx,FWORD PTR ds:0x869aef69
  41eb3d:	fwait
  41eb3e:	inc    ecx
  41eb3f:	pop    edx
  41eb40:	imul   edx,DWORD PTR [edi+0x39c09ee8],0x61
  41eb47:	xchg   ebp,eax
  41eb48:	imul   edi,DWORD PTR [ecx-0x2d],0xfffffff7
  41eb4c:	mov    cl,0x4e
  41eb4e:	jecxz  0x41eb15
  41eb50:	pop    edx
  41eb51:	mov    edx,0xbec423e3
  41eb56:	xchg   esp,eax
  41eb57:	scas   eax,DWORD PTR es:[edi]
  41eb58:	inc    ecx
  41eb59:	or     eax,0x7797410c
  41eb5e:	retf   
  41eb5f:	call   0xd0bdc95c
  41eb64:	imul   ebp,DWORD PTR [eax-0x69af1510],0xffffffc2
  41eb6b:	in     al,0x7a
  41eb6d:	mov    ecx,0x1b6a8d6
  41eb72:	div    ah
  41eb74:	mov    ebp,0xcc423da6
  41eb79:	jns    0x41eb21
  41eb7b:	xor    ecx,DWORD PTR [ecx]
  41eb7d:	(bad)  
  41eb7e:	in     al,dx
  41eb7f:	and    eax,0xa6615f00
  41eb84:	outs   dx,BYTE PTR ds:[esi]
  41eb85:	dec    edx
  41eb86:	push   cs
  41eb87:	sbb    BYTE PTR [ebx],ch
  41eb89:	(bad)  [ecx-0x364e79d2]
  41eb8f:	call   0xbf02d1db
  41eb94:	mov    ds:0x833f14d1,eax
  41eb99:	in     al,0x93
  41eb9b:	jbe    0x41ebcc
  41eb9d:	in     eax,dx
  41eb9e:	push   edx
  41eb9f:	loope  0x41eb6c
  41eba1:	mov    esi,0xacf2b8c7
  41eba6:	je     0x41eb4d
  41eba8:	sbb    DWORD PTR [ebp+0x56],ebx
  41ebab:	jmp    0x69e65247
  41ebb0:	cmp    DWORD PTR [ecx],eax
  41ebb2:	mov    ebp,DWORD PTR [ebp-0x2aac7ef3]
  41ebb8:	out    dx,al
  41ebb9:	ins    DWORD PTR es:[edi],dx
  41ebba:	cwde   
  41ebbb:	jp     0x41ebe0
  41ebbd:	sbb    bl,BYTE PTR [edi-0x2c]
  41ebc0:	mov    cl,0x64
  41ebc2:	scas   eax,DWORD PTR es:[edi]
  41ebc3:	xchg   BYTE PTR [ebx+edi*8-0x633c59cc],bh
  41ebca:	cmp    eax,0x5f496673
  41ebcf:	js     0x41ec1b
  41ebd1:	in     al,dx
  41ebd2:	call   DWORD PTR ds:0x758d3ba6
  41ebd8:	push   0x171d520a
  41ebdd:	mov    ds,WORD PTR [ebx]
  41ebdf:	push   ecx
  41ebe0:	test   eax,0x6f8105d2
  41ebe5:	outs   dx,BYTE PTR ds:[esi]
  41ebe6:	jae    0x41ebab
  41ebe8:	xor    ebp,DWORD PTR [esp+edx*2]
  41ebeb:	mov    ecx,0x7d972263
  41ebf0:	pusha  
  41ebf1:	cli    
  41ebf2:	add    BYTE PTR [ebx-0x169f6fd6],ah
  41ebf8:	add    al,BYTE PTR [eax]
  41ebfa:	xchg   ebp,eax
  41ebfb:	mov    ds:0x14cdeefa,eax
  41ec00:	lods   al,BYTE PTR ds:[esi]
  41ec01:	(bad)
  41ec06:	lods   eax,DWORD PTR ds:[esi]
  41ec07:	push   0xffffffb1
  41ec09:	jp     0x41ec3c
  41ec0b:	ss sbb al,0xcf
  41ec0e:	dec    ecx
  41ec0f:	jg     0x41eb93
  41ec11:	js     0x41ebf2
  41ec13:	and    ch,bh
  41ec15:	fild   DWORD PTR [ebx-0x26]
  41ec18:	mov    esi,0x2a9d6afe
  41ec1d:	lods   eax,DWORD PTR ds:[esi]
  41ec1e:	shl    dh,cl
  41ec20:	outs   dx,BYTE PTR ds:[esi]
  41ec21:	sub    BYTE PTR [esi+0x14024139],ah
  41ec27:	jo     0x41ebd9
  41ec29:	sub    al,0x11
  41ec2b:	in     eax,0xba
  41ec2d:	enter  0x5e45,0x23
  41ec31:	push   ebx
  41ec32:	jle    0x41ebb8
  41ec34:	call   0xd0e2:0x22182f4b
  41ec3b:	push   edi
  41ec3c:	in     al,dx
  41ec3d:	int    0x61
  41ec3f:	ja     0x41ebff
  41ec41:	out    dx,eax
  41ec42:	jecxz  0x41ec01
  41ec44:	add    bl,BYTE PTR [ebp+0x4b]
  41ec47:	lods   al,BYTE PTR ds:[esi]
  41ec48:	cmp    cl,dl
  41ec4a:	in     al,0x24
  41ec4c:	loop   0x41ec5e
  41ec4e:	mov    ch,0x2
  41ec50:	jle    0x41ec98
  41ec52:	sbb    eax,0xd4d3a2b0
  41ec57:	mov    eax,ds:0x2aa46aa0
  41ec5c:	jg     0x41ecd3
  41ec5e:	adc    al,0x37
  41ec60:	sbb    BYTE PTR [edi],bl
  41ec62:	sbb    DWORD PTR [ecx-0x80],0xffffffd5
  41ec66:	add    ch,BYTE PTR [esi+0x43]
  41ec69:	aad    0xf4
  41ec6b:	sbb    ebp,DWORD PTR [edi+0x61]
  41ec6e:	add    al,0xa1
  41ec70:	pop    edx
  41ec71:	imul   ecx,DWORD PTR [ebx],0xffffff94
  41ec74:	cwde   
  41ec75:	xor    ah,BYTE PTR [edi+edi*2-0xf72bc1b]
  41ec7c:	xchg   ebx,eax
  41ec7d:	push   edi
  41ec7e:	js     0x41ecfa
  41ec80:	mov    ebx,0xbbd3e628
  41ec85:	xor    esp,edi
  41ec87:	into   
  41ec88:	cli    
  41ec89:	sti    
  41ec8a:	ja     0x41ec80
  41ec8c:	enter  0x3e3e,0x70
  41ec90:	jns    0x41ec46
  41ec92:	(bad)  
  41ec93:	sub    edi,ebx
  41ec95:	jp     0x41ece3
  41ec97:	sar    bl,0x3a
  41ec9a:	popf   
  41ec9b:	mov    dh,0xc9
  41ec9d:	out    0xb7,eax
  41ec9f:	xchg   ebp,eax
  41eca0:	pushf  
  41eca1:	mov    al,ds:0x7d544a21
  41eca6:	out    dx,al
  41eca7:	inc    eax
  41eca8:	fnsave es:[eax+0x15]
  41ecac:	sub    esp,DWORD PTR [edi+0x15729e8d]
  41ecb2:	adc    al,cl
  41ecb4:	(bad)  
  41ecb6:	jbe    0x41ec4a
  41ecb8:	xchg   dh,bl
  41ecba:	les    edx,FWORD PTR [edx+0x59cae9f3]
  41ecc0:	sbb    ebx,esi
  41ecc2:	in     al,0x3
  41ecc4:	(bad)  
  41ecc5:	xchg   edx,eax
  41ecc6:	push   ds
  41ecc7:	in     al,0xfc
  41ecc9:	rcl    bl,cl
  41eccb:	in     eax,dx
  41eccc:	adc    BYTE PTR [ecx+0x42],0xb4
  41ecd0:	(bad)  
  41ecd1:	jbe    0x41ecb5
  41ecd3:	enter  0x4dc9,0xb5
  41ecd7:	das    
  41ecd8:	and    al,0x95
  41ecda:	inc    esi
  41ecdb:	inc    edx
  41ecdc:	adc    bh,BYTE PTR [edx-0x47]
  41ecdf:	mov    ds,WORD PTR [ebp+edx*8-0x64]
  41ece3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ece4:	sub    eax,0x1e2b5adc
  41ece9:	or     eax,edx
  41eceb:	mov    eax,ds:0xc1fbba8b
  41ecf0:	mov    edx,0x728fcaf0
  41ecf5:	mov    eax,0xddd5d06c
  41ecfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecfb:	adc    al,0xdb
  41ecfd:	push   edi
  41ecfe:	in     al,0x2e
  41ed00:	xchg   edi,eax
  41ed01:	fdivr  QWORD PTR [eax+ebx*2-0x67]
  41ed05:	add    ah,BYTE PTR [ecx]
  41ed07:	mov    ecx,0x1e5de7d7
  41ed0c:	sti    
  41ed0d:	(bad)
  41ed12:	pop    edi
  41ed13:	fimul  WORD PTR [eax+eiz*8+0x67e7240a]
  41ed1a:	cmc    
  41ed1b:	and    al,0x13
  41ed1d:	mov    eax,?
  41ed1f:	repnz dec esi
  41ed21:	inc    esp
  41ed22:	stos   DWORD PTR es:[edi],eax
  41ed23:	or     ecx,DWORD PTR [edx]
  41ed25:	inc    esi
  41ed26:	mov    dh,0x82
  41ed28:	cmc    
  41ed29:	sub    eax,0x60b7e763
  41ed2e:	sub    al,0xca
  41ed30:	test   al,0xda
  41ed32:	sub    BYTE PTR [ebx],al
  41ed34:	adc    DWORD PTR [ebx-0x41fa4d3b],ebp
  41ed3a:	mov    ch,0xb0
  41ed3c:	cmp    al,0xea
  41ed3e:	or     dl,0x16
  41ed41:	pop    ecx
  41ed42:	ss out 0x65,al
  41ed45:	adc    al,0x8f
  41ed47:	inc    edi
  41ed48:	(bad)  
  41ed49:	retf   0x4777
  41ed4c:	jae    0x41ed61
  41ed4e:	imul   ecx,DWORD PTR [eax+0x4b],0xffffffe9
  41ed52:	xchg   BYTE PTR [esi],cl
  41ed54:	xchg   esp,eax
  41ed55:	inc    eax
  41ed56:	adc    esi,edx
  41ed58:	mov    cl,0x9e
  41ed5a:	jl     0x41ed6f
  41ed5c:	mov    al,0x73
  41ed5e:	es and bh,ch
  41ed61:	xchg   ebp,eax
  41ed62:	imul   eax,DWORD PTR [ebx+0x56],0xe30cdb2a
  41ed69:	and    bh,BYTE PTR ds:0x4ef1169c
  41ed6f:	ins    BYTE PTR es:[edi],dx
  41ed70:	pop    es
  41ed71:	das    
  41ed72:	dec    esi
  41ed73:	repnz cld 
  41ed75:	add    ch,BYTE PTR [edi-0x62]
  41ed78:	jne    0x41eda8
  41ed7a:	shl    BYTE PTR [esp+eax*4+0x4b15b9b4],cl
  41ed81:	jns    0x41ed7b
  41ed83:	scas   al,BYTE PTR es:[edi]
  41ed84:	cli    
  41ed85:	icebp  
  41ed86:	enter  0xb4f7,0xc5
  41ed8a:	cwde   
  41ed8b:	out    0xd,al
  41ed8d:	lock mov bh,BYTE PTR [eax+0x7e]
  41ed91:	push   ebp
  41ed92:	aaa    
  41ed93:	lods   al,BYTE PTR ds:[esi]
  41ed94:	mul    BYTE PTR [edi+0x6f]
  41ed97:	aam    0x78
  41ed99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed9a:	xor    ebx,edi
  41ed9c:	add    dl,BYTE PTR [ebp+eax*8-0x7a8f634c]
  41eda3:	in     al,dx
  41eda4:	ret    0xda2c
  41eda7:	jmp    0x41ee00
  41eda9:	mov    bl,0xb
  41edab:	add    bh,dh
  41edad:	dec    ebx
  41edae:	push   edi
  41edaf:	je     0x41ee23
  41edb1:	mov    ecx,0x36b904e7
  41edb6:	mov    eax,ds:0x718fb385
  41edbb:	mov    ch,bl
  41edbd:	jae    0x41ed5b
  41edbf:	or     BYTE PTR [eax],0x94
  41edc2:	add    al,0x10
  41edc4:	dec    esi
  41edc5:	fcomi  st,st(0)
  41edc7:	mov    cl,0x8a
  41edc9:	mov    eax,ds:0x3899447f
  41edce:	test   eax,0xd1b85cf5
  41edd3:	jle    0x41ee0e
  41edd5:	push   ebp
  41edd6:	and    BYTE PTR [ebp+0x52895b53],al
  41eddc:	mov    cl,0x22
  41edde:	inc    ebp
  41eddf:	clc    
  41ede0:	in     eax,0xeb
  41ede2:	mov    ?,WORD PTR [ebp+0x55c1416]
  41ede8:	lock jo 0x41ee0e
  41edeb:	popf   
  41edec:	and    eax,0xcb217faa
  41edf1:	adc    ch,0x51
  41edf4:	test   BYTE PTR [ebp+0x7],ch
  41edf7:	mov    al,0xfb
  41edf9:	scas   al,BYTE PTR es:[edi]
  41edfa:	(bad)  
  41edfb:	int3   
  41edfc:	(bad)  
  41edfd:	ins    BYTE PTR es:[edi],dx
  41edfe:	mov    eax,0x76431060
  41ee03:	add    DWORD PTR [edx+0x38d1eec6],ebp
  41ee09:	lock call 0xcc08501a
  41ee0f:	call   0x88527215
  41ee14:	xlat   BYTE PTR ds:[ebx]
  41ee15:	popf   
  41ee16:	ret    
  41ee17:	ins    BYTE PTR es:[edi],dx
  41ee18:	outs   dx,BYTE PTR ds:[esi]
  41ee19:	xchg   edi,eax
  41ee1a:	or     DWORD PTR [ebx+eax*4],eax
  41ee1d:	and    eax,0x915908a6
  41ee22:	push   edi
  41ee23:	stos   DWORD PTR es:[edi],eax
  41ee24:	pushf  
  41ee25:	jecxz  0x41ee6e
  41ee27:	test   eax,0xb3df7c9f
  41ee2c:	or     al,0xd8
  41ee2e:	mov    eax,0xce66a6a2
  41ee33:	push   esi
  41ee34:	js     0x41ee22
  41ee36:	lock fsubr st(0),st
  41ee39:	jbe    0x41eeb8
  41ee3b:	and    al,0xc8
  41ee3d:	adc    esp,eax
  41ee3f:	fidiv  DWORD PTR [esp+edi*4-0x520c8952]
  41ee46:	mov    DWORD PTR ds:0xbad05763,0x91ad3e8c
  41ee50:	mov    ebx,0x7c87a8a6
  41ee55:	xor    esp,edi
  41ee57:	mov    WORD PTR [edx+edx*8+0x68368254],ds
  41ee5e:	cmp    ebp,DWORD PTR [esi+0x78]
  41ee61:	or     ah,bl
  41ee63:	or     eax,0xbbba064a
  41ee68:	mov    edx,0x1c976895
  41ee6d:	push   eax
  41ee6e:	mov    ebp,0x839de928
  41ee73:	hlt    
  41ee74:	data16 mov bh,0x5c
  41ee77:	pop    edx
  41ee78:	or     DWORD PTR [eax+0x78],ecx
  41ee7b:	ds (bad) 
  41ee7e:	cmp    eax,DWORD PTR [esi]
  41ee80:	jecxz  0x41eef3
  41ee82:	es leave 
  41ee84:	sbb    al,0x15
  41ee86:	aaa    
  41ee87:	mov    cl,0x60
  41ee89:	adc    BYTE PTR [ebx],bh
  41ee8b:	sub    edx,ebp
  41ee8d:	mov    eax,0xb3781e03
  41ee92:	test   eax,0x317fd608
  41ee97:	adc    ebp,DWORD PTR [ebx]
  41ee99:	mov    cl,0xa8
  41ee9b:	xchg   esi,eax
  41ee9c:	enter  0xe871,0x9
  41eea0:	ret    0x9fea
  41eea3:	fcom   QWORD PTR [esi-0x7f]
  41eea6:	fs sub eax,0x15b8c004
  41eeac:	(bad)  
  41eead:	jne    0x41ef11
  41eeaf:	pushf  
  41eeb0:	mov    al,0xe6
  41eeb2:	lahf   
  41eeb3:	into   
  41eeb4:	jl     0x41ee99
  41eeb6:	loop   0x41ee42
  41eeb8:	je     0x41ee4c
  41eeba:	lods   eax,DWORD PTR ds:[esi]
  41eebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eebc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eebd:	inc    edi
  41eebe:	ret    
  41eebf:	and    bh,BYTE PTR [esi+0x51b0090f]
  41eec5:	repnz ins BYTE PTR es:[edi],dx
  41eec7:	mov    ds,WORD PTR [ebx-0x78]
  41eeca:	int    0xf2
  41eecc:	adc    eax,0xb7387a4
  41eed1:	inc    edx
  41eed2:	or     eax,0xc21ddd0a
  41eed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eed8:	xchg   esi,eax
  41eed9:	inc    esp
  41eeda:	mov    eax,0x47ce1920
  41eedf:	shl    DWORD PTR [ecx+0x3c77e85b],1
  41eee5:	adc    ebx,DWORD PTR [eax+0x6a0555e]
  41eeeb:	shl    DWORD PTR [ecx+edx*8+0x6],0xb3
  41eef0:	mov    dl,BYTE PTR [edi]
  41eef2:	shl    BYTE PTR [eax],0xdd
  41eef5:	sbb    BYTE PTR [ecx],0xb8
  41eef8:	sbb    al,BYTE PTR [ebx-0x1b49dd2]
  41eefe:	dec    edx
  41eeff:	push   edx
  41ef00:	mov    cl,BYTE PTR [ebx+0x2a56afc4]
  41ef06:	fiadd  DWORD PTR [ebp-0x71]
  41ef09:	rcr    DWORD PTR [ebx+0x74],cl
  41ef0c:	xchg   esi,eax
  41ef0d:	mov    ah,0x91
  41ef0f:	push   ss
  41ef10:	mov    edi,0x1efbb11f
  41ef15:	cmc    
  41ef16:	add    DWORD PTR es:[ebx+0x38739342],ebp
  41ef1d:	and    bl,BYTE PTR [ebx+0x18]
  41ef20:	inc    edi
  41ef21:	icebp  
  41ef22:	mov    ecx,0xf304740c
  41ef27:	fidiv  WORD PTR [ecx-0xa]
  41ef2a:	cmp    al,0x78
  41ef2c:	inc    esp
  41ef2d:	fldenv [ebp+0x73]
  41ef30:	shl    BYTE PTR [esi+0x28879e51],cl
  41ef36:	jbe    0x41ef65
  41ef38:	aam    0x71
  41ef3a:	pop    ebx
  41ef3b:	add    al,0xf7
  41ef3d:	dec    eax
  41ef3e:	jnp    0x41ef95
  41ef40:	lock xchg DWORD PTR [ebp-0x3],ebx
  41ef44:	and    cl,BYTE PTR [ecx-0xef6aa00]
  41ef4a:	cmp    esi,edi
  41ef4c:	jmp    0xdd4ac96d
  41ef51:	mov    cs,WORD PTR [ecx-0x5f]
  41ef54:	fisttp WORD PTR [ecx+0x42]
  41ef57:	les    edi,FWORD PTR [ebx]
  41ef59:	(bad)
  41ef5c:	pop    ds
  41ef5d:	sub    ebx,edx
  41ef5f:	adc    eax,0x2115ae71
  41ef64:	call   0x2af6c51
  41ef69:	fwait
  41ef6a:	jmp    0x41eef2
  41ef6c:	ror    BYTE PTR [edx],cl
  41ef6e:	data16 ja 0x41ef68
  41ef71:	lds    ebx,FWORD PTR [ecx-0x4a]
  41ef74:	stos   DWORD PTR es:[edi],eax
  41ef75:	xchg   ebx,eax
  41ef76:	sub    cl,0x93
  41ef79:	mov    WORD PTR [eax+eiz*2],fs
  41ef7c:	out    dx,al
  41ef7d:	inc    ebp
  41ef7e:	xchg   edx,eax
  41ef7f:	sub    BYTE PTR [ecx+0x6],dh
  41ef82:	xchg   edi,eax
  41ef83:	inc    DWORD PTR [ebp-0x1a]
  41ef86:	mov    dh,0x5c
  41ef88:	push   0xffffff99
  41ef8a:	jno    0x41ef2a
  41ef8c:	mov    ebx,0x753f7da7
  41ef91:	jne    0x41ef2e
  41ef93:	push   cs
  41ef94:	jle    0x41ef78
  41ef96:	xlat   BYTE PTR ds:[ebx]
  41ef97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef98:	adc    esp,0x640a8c43
  41ef9e:	cmc    
  41ef9f:	int    0x7d
  41efa1:	xchg   al,ch
  41efa3:	bound  eax,QWORD PTR [ebx]
  41efa5:	pop    ebx
  41efa6:	or     eax,0xda546d3b
  41efab:	mov    esp,0x971f5a57
  41efb0:	outs   dx,DWORD PTR ds:[esi]
  41efb1:	push   es
  41efb2:	push   0x2
  41efb4:	sbb    ebx,esi
  41efb6:	div    dh
  41efb8:	dec    edx
  41efb9:	fbstp  TBYTE PTR [edx+0xad3689e]
  41efbf:	jp     0x41f040
  41efc1:	mov    edi,edi
  41efc3:	or     eax,0x6edb016b
  41efc8:	sar    BYTE PTR [esi-0x48d321b4],1
  41efce:	xlat   BYTE PTR ds:[ebx]
  41efcf:	sbb    dh,BYTE PTR [esi]
  41efd1:	cmc    
  41efd2:	mov    esp,0xa680a7ba
  41efd7:	shl    BYTE PTR [ecx],1
  41efd9:	xor    ecx,DWORD PTR [edi]
  41efdb:	mov    BYTE PTR [ecx+0x74376635],ch
  41efe1:	fcomp  DWORD PTR [ebx+0x54741b52]
  41efe7:	test   DWORD PTR [ebx-0x73],0x132dd1bb
  41efee:	repz jmp 0xbfa7b61b
  41eff4:	cmp    BYTE PTR [edi],bh
  41eff6:	test   DWORD PTR [esi+0x54],eax
  41eff9:	clc    
  41effa:	mov    ebp,0x14532afe
  41efff:	daa    
  41f000:	dec    ebp
  41f001:	pop    edi
  41f002:	dec    esp
  41f003:	xor    ecx,DWORD PTR [eax+0x43]
  41f006:	push   edx
  41f007:	xchg   esi,eax
  41f008:	xor    ebx,ecx
  41f00a:	push   esi
  41f00b:	adc    al,0x3d
  41f00d:	pop    edx
  41f00e:	mul    DWORD PTR [ecx]
  41f010:	lods   eax,DWORD PTR ds:[esi]
  41f011:	and    bl,bl
  41f013:	ds popf 
  41f015:	mov    dl,0xd3
  41f017:	loopne 0x41f033
  41f019:	loopne 0x41effe
  41f01b:	dec    esi
  41f01c:	not    BYTE PTR [ecx+0x72dcd1b1]
  41f022:	mov    al,ds:0xef307616
  41f027:	sub    eax,0x91d28543
  41f02c:	je     0x41efba
  41f02e:	nop
  41f02f:	int3   
  41f030:	lods   al,BYTE PTR ds:[esi]
  41f031:	mov    cl,0x71
  41f033:	fdivr  QWORD PTR [eax]
  41f035:	mov    ecx,ecx
  41f037:	not    DWORD PTR [edi]
  41f039:	sub    esi,DWORD PTR [edx]
  41f03b:	cmp    DWORD PTR [eax-0x72],edx
  41f03e:	test   edx,ebx
  41f040:	pushf  
  41f041:	cmp    edx,DWORD PTR [esi-0x74]
  41f044:	pop    esp
  41f045:	cmc    
  41f046:	jae    0x41f037
  41f048:	mov    al,0x5b
  41f04a:	push   ecx
  41f04b:	sbb    DWORD PTR [edx-0x2d],0xc71e3553
  41f052:	fcomp  DWORD PTR [ebp+edi*4+0x5f]
  41f056:	add    DWORD PTR [esi+edi*4-0x51df785d],edx
  41f05d:	(bad)  
  41f05e:	(bad)  
  41f05f:	cmp    bl,ah
  41f061:	imul   edx,ebp,0xd7164cfa
  41f067:	bound  eax,QWORD PTR [edx-0x4f744ff6]
  41f06d:	test   BYTE PTR [esi],cl
  41f06f:	test   al,0x72
  41f071:	les    esp,FWORD PTR [ebp+0x1464d102]
  41f077:	xchg   BYTE PTR [edi+0x77],bl
  41f07a:	cmp    esp,ebp
  41f07c:	lock jl 0x41f048
  41f07f:	jb     0x41f087
  41f081:	inc    ebp
  41f082:	jp     0x41f0d4
  41f084:	mov    bh,0xb
  41f086:	pushf  
  41f087:	xchg   ebp,eax
  41f088:	jno    0x41f019
  41f08a:	push   edx
  41f08b:	adc    ebp,DWORD PTR ds:0xff5da2bb
  41f091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f092:	neg    BYTE PTR [edi+0x39]
  41f095:	sub    al,0xb5
  41f097:	(bad)  
  41f098:	pop    eax
  41f099:	mov    esi,0x27852485
  41f09e:	push   ebp
  41f09f:	jge    0x41f100
  41f0a1:	push   edi
  41f0a2:	mov    dh,0x37
  41f0a4:	mov    al,0xd4
  41f0a6:	sub    eax,0xc70aef47
  41f0ab:	lea    esi,fs:[ecx+0x5c82b301]
  41f0b2:	in     al,0x4a
  41f0b4:	rcr    DWORD PTR [ecx+0x28dc53a1],0x96
  41f0bb:	lea    eax,ds:0x92e7d510
  41f0c1:	mov    dh,BYTE PTR [edx+0x58]
  41f0c4:	mov    cl,0x58
  41f0c6:	push   esp
  41f0c7:	xchg   BYTE PTR [esi+0x32],bl
  41f0ca:	or     al,0xb2
  41f0cc:	je     0x41f092
  41f0ce:	adc    al,0x63
  41f0d0:	retf   
  41f0d1:	aaa    
  41f0d2:	jg     0x41f068
  41f0d4:	mov    ds:0xeb6ebd0a,al
  41f0d9:	pusha  
  41f0da:	add    DWORD PTR ds:[eax],0x79
  41f0de:	fs lahf 
  41f0e0:	xchg   BYTE PTR [edx],bl
  41f0e2:	sbb    al,0x5a
  41f0e4:	ror    BYTE PTR [esi+0x11],cl
  41f0e7:	cmc    
  41f0e8:	sbb    BYTE PTR [ebx-0x2af89ec1],bl
  41f0ee:	adc    al,BYTE PTR [ecx-0x9]
  41f0f1:	cmp    al,0xae
  41f0f3:	pop    ebp
  41f0f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0f5:	cdq    
  41f0f6:	push   0x14
  41f0f8:	mov    esi,0x88694760
  41f0fd:	jae    0x41f09c
  41f0ff:	adc    DWORD PTR [eax+0x7b],0xffffff85
  41f103:	jae    0x41f128
  41f105:	scas   al,BYTE PTR es:[edi]
  41f106:	aas    
  41f107:	(bad)
  41f10b:	pushf  
  41f10c:	(bad)  
  41f10d:	push   esi
  41f10e:	cmp    al,BYTE PTR [esi+0x37d01a23]
  41f114:	inc    esp
  41f115:	frstor [ebx]
  41f117:	repz xchg ebx,eax
  41f119:	mov    ds:0x25d3275c,eax
  41f11e:	and    DWORD PTR [edx+0x4a],esp
  41f121:	and    DWORD PTR [edx],edi
  41f123:	xlat   BYTE PTR ds:[ebx]
  41f124:	shr    DWORD PTR [edi],1
  41f126:	or     al,BYTE PTR [esi]
  41f128:	or     DWORD PTR [edi+0x1827f6c],edx
  41f12e:	cdq    
  41f12f:	xlat   BYTE PTR ds:[ebx]
  41f130:	mov    ah,0xc
  41f132:	or     cl,BYTE PTR [edi-0x7c6c0f9c]
  41f138:	jle    0x41f14b
  41f13a:	clc    
  41f13b:	(bad)  
  41f13d:	sub    BYTE PTR [ecx+0x1b],dh
  41f140:	ror    DWORD PTR [ebx+0x602c63ec],1
  41f146:	retf   
  41f147:	sub    bl,dl
  41f149:	outs   dx,DWORD PTR ds:[esi]
  41f14a:	test   al,0x10
  41f14c:	cmp    DWORD PTR [ebx+edi*2+0x43],edi
  41f150:	and    ebx,DWORD PTR [edx]
  41f152:	xchg   ecx,eax
  41f153:	in     al,dx
  41f154:	sub    al,BYTE PTR [edi-0x18df54d1]
  41f15a:	adc    dl,al
  41f15c:	dec    esp
  41f15d:	call   0x1696:0x32b7e55b
  41f164:	popf   
  41f165:	in     al,0x66
  41f167:	aaa    
  41f168:	mov    ch,cl
  41f16a:	xor    BYTE PTR [ebp+0x77],bl
  41f16d:	pop    ds
  41f16e:	ds dec eax
  41f170:	push   0x36648563
  41f175:	int3   
  41f176:	pop    ebp
  41f177:	xchg   ebp,eax
  41f178:	pop    ebx
  41f179:	lsl    ebx,WORD PTR [eax+0x70]
  41f17d:	in     eax,dx
  41f17e:	scas   eax,DWORD PTR es:[edi]
  41f17f:	mov    ?,WORD PTR [ebp-0x198dc650]
  41f185:	rcr    BYTE PTR [ebp-0x1af027ad],1
  41f18b:	cmp    BYTE PTR [edi+ebp*8-0x27],dl
  41f18f:	mov    al,ds:0x5c7f024c
  41f194:	fld    DWORD PTR [ebx+0x5ba4dc3a]
  41f19a:	int3   
  41f19b:	sbb    esp,edi
  41f19d:	(bad)  
  41f19e:	adc    DWORD PTR [edi+0x39dea0dd],edi
  41f1a4:	sub    ebp,DWORD PTR [ecx]
  41f1a6:	cmp    bl,BYTE PTR [ecx+0x11]
  41f1a9:	mov    ebp,esp
  41f1ab:	enter  0x7291,0x8
  41f1af:	pop    edi
  41f1b0:	fcmovbe st,st(0)
  41f1b2:	aad    0x8b
  41f1b4:	or     BYTE PTR [eax-0x3a],bl
  41f1b7:	inc    edi
  41f1b8:	sbb    eax,0x63ad566d
  41f1bd:	sbb    al,0x74
  41f1bf:	sub    dh,BYTE PTR [ebp-0x66]
  41f1c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1c3:	dec    edi
  41f1c4:	aas    
  41f1c5:	loope  0x41f22e
  41f1c7:	sbb    dh,BYTE PTR [eax-0x34]
  41f1ca:	sbb    eax,0x777c6ba3
  41f1cf:	mov    esp,0xa01f3c3
  41f1d4:	aas    
  41f1d5:	dec    esp
  41f1d6:	push   ss
  41f1d7:	cmp    eax,0xcd7d5192
  41f1dc:	fwait
  41f1dd:	in     al,dx
  41f1de:	das    
  41f1df:	and    ah,0xa
  41f1e2:	sub    edi,DWORD PTR [eax+ebp*1-0x36]
  41f1e6:	mov    cl,0x33
  41f1e8:	jns    0x41f237
  41f1ea:	fs das 
  41f1ec:	dec    edx
  41f1ed:	xor    DWORD PTR [esi+ecx*1+0x1cee5126],ebp
  41f1f4:	jge    0x41f258
  41f1f6:	sti    
  41f1f7:	xchg   ebp,eax
  41f1f8:	sbb    edx,DWORD PTR [ebx]
  41f1fa:	jecxz  0x41f1fb
  41f1fc:	scas   eax,DWORD PTR es:[edi]
  41f1fd:	aas    
  41f1fe:	lods   eax,DWORD PTR ds:[esi]
  41f1ff:	fisub  DWORD PTR [ebp-0x353e48bf]
  41f205:	loope  0x41f1be
  41f207:	pusha  
  41f208:	lods   al,BYTE PTR ds:[esi]
  41f209:	sbb    esp,DWORD PTR [ebx+0x42]
  41f20c:	fcomp  QWORD PTR [esi+0x6b81d4d8]
  41f212:	mov    eax,ds:0xd3befcfd
  41f217:	push   esp
  41f218:	aam    0xa3
  41f21a:	jne    0x41f208
  41f21c:	mov    ss,edx
  41f21e:	test   eax,0x766d6faf
  41f223:	add    DWORD PTR [edi],eax
  41f225:	mov    cs,WORD PTR [edi]
  41f227:	or     al,0x3
  41f229:	and    DWORD PTR [ebp+0x3d],edx
  41f22c:	scas   al,BYTE PTR es:[edi]
  41f22d:	ja     0x41f1f2
  41f22f:	inc    esi
  41f230:	or     eax,0x62f00df2
  41f235:	inc    ecx
  41f236:	fsub   DWORD PTR [edx]
  41f238:	push   edi
  41f239:	arpl   WORD PTR [edi],bp
  41f23b:	jo     0x41f274
  41f23d:	mov    eax,DWORD PTR [esi+esi*1-0x24]
  41f241:	jae    0x41f244
  41f243:	inc    ebp
  41f244:	jge    0x41f291
  41f246:	clc    
  41f247:	js     0x41f27c
  41f249:	jae    0x41f281
  41f24b:	adc    dh,dl
  41f24d:	or     dh,BYTE PTR [edx]
  41f24f:	fxam   
  41f251:	mov    eax,0xa9658408
  41f256:	jb     0x41f2ae
  41f258:	jecxz  0x41f21a
  41f25a:	js     0x41f1de
  41f25c:	imul   ebx,ebp,0x71e9f9ab
  41f262:	shufps xmm2,XMMWORD PTR [esi-0xd],0x4d
  41f267:	fsubr  DWORD PTR [edi-0x1756cf3d]
  41f26d:	(bad)  
  41f26e:	ins    BYTE PTR es:[edi],dx
  41f26f:	mov    eax,ds:0x3ff18d1e
  41f274:	or     dl,al
  41f276:	clc    
  41f277:	sbb    edx,ebx
  41f279:	mov    cs,WORD PTR [ecx+edx*1+0xdadb75c]
  41f280:	into   
  41f281:	es or  al,0xc3
  41f284:	push   eax
  41f285:	retf   0xc185
  41f288:	sbb    eax,DWORD PTR [eax+eax*4+0x5c]
  41f28c:	lds    edx,FWORD PTR [eax-0x4b6e7c7c]
  41f292:	pop    ss
  41f293:	inc    ebp
  41f294:	fwait
  41f295:	dec    esp
  41f296:	pop    esp
  41f297:	repz jae 0x41f2f0
  41f29a:	sti    
  41f29b:	inc    ebx
  41f29c:	mov    BYTE PTR [esi],dh
  41f29e:	test   ebx,esp
  41f2a0:	clc    
  41f2a1:	loope  0x41f24e
  41f2a3:	sub    eax,0xa9eb3a5b
  41f2a8:	aaa    
  41f2a9:	ret    0xddd1
  41f2ac:	nop
  41f2ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2ae:	fld    TBYTE PTR [eax+ecx*4+0x14]
  41f2b2:	xchg   edi,eax
  41f2b3:	in     eax,dx
  41f2b4:	(bad)  
  41f2b5:	out    dx,eax
  41f2b6:	cmp    DWORD PTR [edx],edi
  41f2b8:	call   0xa2ff5cd2
  41f2bd:	sbb    DWORD PTR [ebp+edi*8+0x2346d68f],edx
  41f2c4:	stos   BYTE PTR es:[edi],al
  41f2c5:	mov    dh,0x6d
  41f2c7:	mov    eax,0x1e8149fd
  41f2cc:	xchg   esi,eax
  41f2cd:	dec    ebx
  41f2ce:	call   0x54eb38dc
  41f2d3:	(bad)  
  41f2d4:	aam    0x69
  41f2d6:	mov    ebx,0xf1509b72
  41f2db:	or     bl,BYTE PTR ds:0xd2856586
  41f2e1:	je     0x41f2f1
  41f2e3:	imul   esp,DWORD PTR [edx+ebx*4-0x305c32b6],0x68
  41f2eb:	ins    BYTE PTR es:[edi],dx
  41f2ec:	int3   
  41f2ed:	cmp    eax,0x2c920dcc
  41f2f2:	(bad)  
  41f2f3:	cmc    
  41f2f4:	push   cs
  41f2f5:	or     al,0xf0
  41f2f7:	jno    0x41f29e
  41f2f9:	mov    ch,0xc8
  41f2fb:	jno    0x41f307
  41f2fd:	jo     0x41f319
  41f2ff:	dec    esp
  41f300:	daa    
  41f301:	inc    esp
  41f302:	push   ss
  41f303:	je     0x41f378
  41f305:	push   edi
  41f306:	pop    ebx
  41f307:	leave  
  41f308:	and    DWORD PTR [edx-0x11],edi
  41f30b:	or     cl,0x41
  41f30e:	fwait
  41f30f:	in     al,0xa5
  41f311:	data16 aas 
  41f313:	int3   
  41f314:	pop    esi
  41f315:	icebp  
  41f316:	cmp    ah,BYTE PTR [esi+0x28]
  41f319:	and    esi,DWORD PTR [ecx]
  41f31b:	call   0xbbd0:0xcc225e32
  41f322:	jb     0x41f38a
  41f324:	fstp   DWORD PTR [ebp+0x4f]
  41f327:	dec    ebp
  41f328:	es es stos BYTE PTR es:[edi],al
  41f32b:	int    0xb8
  41f32d:	jle    0x41f341
  41f32f:	loopne 0x41f2ec
  41f331:	sub    ebp,DWORD PTR [ecx+0x60]
  41f334:	push   ds
  41f335:	add    al,0x91
  41f337:	adc    ch,BYTE PTR [eax+eax*2-0x46]
  41f33b:	jg     0x41f397
  41f33d:	xchg   ebp,eax
  41f33e:	lods   al,BYTE PTR ds:[esi]
  41f33f:	xor    al,0xb1
  41f341:	or     edx,ebx
  41f343:	sbb    al,0x64
  41f345:	arpl   WORD PTR [edx-0x27],cx
  41f348:	leave  
  41f349:	fadd   QWORD PTR ds:0x331a7f51
  41f34f:	jmp    0x41f387
  41f351:	inc    esp
  41f352:	push   esp
  41f353:	(bad)  
  41f354:	sbb    eax,0x3dfe2aa2
  41f359:	int3   
  41f35a:	push   0xffffffc6
  41f35c:	mov    bl,0xac
  41f35e:	stos   BYTE PTR es:[edi],al
  41f35f:	pop    edx
  41f360:	mov    al,0x33
  41f362:	inc    ebp
  41f363:	adc    DWORD PTR [ecx+0x5],ecx
  41f366:	xchg   edx,eax
  41f367:	ins    DWORD PTR es:[edi],dx
  41f368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f369:	cwde   
  41f36a:	xlat   BYTE PTR ds:[ebx]
  41f36b:	jb     0x41f3ce
  41f36d:	inc    esi
  41f36e:	out    0x66,eax
  41f370:	into   
  41f371:	into   
  41f372:	or     al,0x31
  41f374:	mov    al,ds:0x675bad64
  41f379:	into   
  41f37a:	mov    bh,al
  41f37c:	loopne 0x41f35a
  41f37e:	add    BYTE PTR [ecx-0x3f65686a],dl
  41f384:	imul   ebx,DWORD PTR [edx+0xb5f4f4],0x7e
  41f38b:	inc    edx
  41f38c:	pop    ss
  41f38d:	jp     0x41f343
  41f38f:	stos   DWORD PTR es:[edi],eax
  41f390:	loopne 0x41f349
  41f392:	jle    0x41f3e3
  41f394:	mov    ebx,0xad9123c6
  41f399:	add    dl,0xbb
  41f39c:	push   ebx
  41f39d:	mov    ch,0x90
  41f39f:	fldcw  WORD PTR [ebp+0x3e]
  41f3a2:	pop    ds
  41f3a3:	jecxz  0x41f3ca
  41f3a5:	dec    esi
  41f3a6:	jae    0x41f3fb
  41f3a8:	addr16 push 0x6f
  41f3ab:	mov    edi,0xba1fbe4
  41f3b0:	push   ecx
  41f3b1:	out    dx,al
  41f3b2:	in     al,dx
  41f3b3:	jmp    DWORD PTR [ecx+0x5814fc47]
  41f3b9:	cmp    al,0x66
  41f3bc:	xor    ecx,DWORD PTR [ebx+esi*1]
  41f3bf:	xor    DWORD PTR [edi+ecx*8+0x6cf5a1a1],esi
  41f3c6:	jo     0x41f3a9
  41f3c8:	pop    edi
  41f3c9:	imul   BYTE PTR [ecx]
  41f3cb:	sbb    al,0x19
  41f3cd:	add    ebp,DWORD PTR [edi+0x7f]
  41f3d0:	jge    0x41f3f8
  41f3d2:	pop    esi
  41f3d3:	push   eax
  41f3d4:	jae    0x41f386
  41f3d6:	adc    al,0x3d
  41f3d8:	dec    ebp
  41f3d9:	mov    WORD PTR [edx-0xa],?
  41f3dc:	fcom   QWORD PTR [ebx+0x1658891c]
  41f3e2:	stos   BYTE PTR es:[edi],al
  41f3e3:	pop    ecx
  41f3e4:	add    esp,edx
  41f3e6:	adc    ebx,DWORD PTR [edi]
  41f3e8:	dec    esp
  41f3e9:	outs   dx,BYTE PTR ds:[esi]
  41f3ea:	dec    ebx
  41f3eb:	mov    ebx,DWORD PTR [ecx+0x17]
  41f3ee:	mov    BYTE PTR [ebp+0x279f5a2b],dh
  41f3f4:	aam    0x15
  41f3f6:	sbb    bl,BYTE PTR [esi+0x5e]
  41f3f9:	or     BYTE PTR [ecx+0x76],dh
  41f3fc:	push   esi
  41f3fd:	xchg   edx,eax
  41f3fe:	idiv   bl
  41f400:	mov    bh,0xe8
  41f402:	sub    ebp,DWORD PTR [ecx-0x64]
  41f405:	shl    DWORD PTR [ebx+edi*1+0x8],cl
  41f409:	out    0x61,eax
  41f40b:	push   edi
  41f40c:	lea    ebp,[ebp+eax*4-0x4b]
  41f410:	mov    al,0x28
  41f412:	call   0xda00:0xf9ba70d
  41f419:	icebp  
  41f41a:	sbb    bh,ch
  41f41c:	lds    esp,FWORD PTR [esi+0x6c]
  41f41f:	xchg   BYTE PTR [edi+edi*4],bh
  41f422:	push   edi
  41f423:	jl     0x41f424
  41f425:	fwait
  41f426:	in     al,dx
  41f427:	cdq    
  41f428:	dec    ebx
  41f429:	stos   DWORD PTR es:[edi],eax
  41f42a:	cmp    BYTE PTR [esi+0x66782526],dh
  41f430:	mov    edx,ecx
  41f432:	cmp    ch,bh
  41f434:	mov    ah,0x5d
  41f436:	mov    ebp,?
  41f438:	dec    ebp
  41f439:	aam    0xdb
  41f43b:	mov    ebx,0xb1f9345
  41f440:	jmp    0xae40dc4d
  41f445:	pop    es
  41f446:	push   esi
  41f447:	les    ecx,FWORD PTR [esi-0x4abc6cf9]
  41f44d:	dec    edx
  41f44e:	fbstp  TBYTE PTR [ebx]
  41f450:	mov    cl,0x7a
  41f452:	imul   BYTE PTR [eax-0x5]
  41f455:	call   0x1489a7a
  41f45a:	jne    0x41f43a
  41f45c:	in     al,0xcd
  41f45e:	mov    WORD PTR [edx],cs
  41f460:	push   eax
  41f461:	fimul  WORD PTR [ebp-0x34b06500]
  41f467:	ins    BYTE PTR es:[edi],dx
  41f468:	jbe    0x41f4b7
  41f46a:	adc    BYTE PTR [eax+0x7f84517c],al
  41f470:	mov    ebp,0xa944f9d9
  41f475:	fadd   QWORD PTR [edx-0x2e47a2c1]
  41f47b:	(bad)  
  41f47c:	addr16 mov ecx,0x549d7a10
  41f482:	mov    esp,0xe945d9
  41f487:	fild   DWORD PTR [edx-0x7e]
  41f48a:	psubusb mm2,QWORD PTR [edx-0x32]
  41f48e:	mov    eax,0x490e2167
  41f493:	loope  0x41f4fd
  41f495:	mov    ebp,0xdb645ba2
  41f49a:	ror    BYTE PTR [ebp-0x50],1
  41f49d:	inc    esp
  41f49e:	popf   
  41f49f:	pop    esp
  41f4a0:	(bad)  
  41f4a1:	aas    
  41f4a2:	icebp  
  41f4a3:	pop    ds
  41f4a4:	cmp    BYTE PTR [ebx],0x23
  41f4a7:	push   es
  41f4a8:	fisubr DWORD PTR [ebx]
  41f4aa:	xor    eax,0x8ca2a220
  41f4af:	sub    al,0x31
  41f4b1:	mov    ch,0x73
  41f4b3:	sbb    esp,DWORD PTR [edi]
  41f4b5:	inc    ebp
  41f4b6:	shr    DWORD PTR es:[edx+0x78],cl
  41f4ba:	sbb    eax,0xa6395abf
  41f4bf:	push   esi
  41f4c0:	pop    edx
  41f4c1:	inc    edi
  41f4c2:	(bad)  
  41f4c3:	and    eax,0xa7658adf
  41f4c8:	outs   dx,DWORD PTR ds:[esi]
  41f4c9:	jmp    0x41f50d
  41f4cb:	(bad)  
  41f4cc:	mov    ch,0x73
  41f4ce:	dec    edx
  41f4cf:	aaa    
  41f4d0:	xchg   ebp,eax
  41f4d1:	inc    ebx
  41f4d2:	shl    dh,0xa2
  41f4d5:	mov    WORD PTR [esi],gs
  41f4d7:	mov    bh,0xea
  41f4d9:	into   
  41f4da:	idiv   ch
  41f4dc:	test   BYTE PTR [ecx],dl
  41f4de:	add    BYTE PTR [edx+ebx*8+0x34189977],0x54
  41f4e6:	inc    ebx
  41f4e7:	cld    
  41f4e8:	popf   
  41f4e9:	ret    0x8b8f
  41f4ec:	int3   
  41f4ed:	mov    bl,0x6b
  41f4ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4f0:	fs call 0x388a:0x99ef1ff2
  41f4f8:	arpl   WORD PTR ds:[esi-0x4c],bp
  41f4fc:	stc    
  41f4fd:	lea    esp,[ebx+ecx*2+0xe]
  41f501:	(bad)  
  41f502:	xchg   esi,eax
  41f503:	mov    dl,0xe2
  41f505:	mov    al,0xb2
  41f507:	sub    eax,0xba43409c
  41f50c:	xor    al,0x69
  41f50e:	hlt    
  41f50f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f510:	mov    cl,BYTE PTR [eax+0x51318326]
  41f516:	pop    ss
  41f517:	lahf   
  41f518:	jo     0x41f4bf
  41f51a:	(bad)  
  41f51b:	cwde   
  41f51c:	leave  
  41f51d:	aad    0x4d
  41f51f:	cs jecxz 0x41f4d6
  41f522:	not    DWORD PTR [ecx]
  41f524:	fwait
  41f525:	cmp    BYTE PTR [edx],bl
  41f527:	aam    0x94
  41f529:	jb     0x41f52f
  41f52b:	jae    0x41f52a
  41f52d:	or     BYTE PTR [ecx+0x47],dh
  41f530:	retf   
  41f531:	xor    eax,0x200ab929
  41f536:	adc    ah,BYTE PTR [ecx+0x70]
  41f539:	push   eax
  41f53a:	adc    al,0x30
  41f53c:	inc    esp
  41f53d:	add    eax,0xb8278814
  41f542:	cwde   
  41f543:	test   al,0x4f
  41f545:	jno    0x41f541
  41f547:	jl     0x41f4f7
  41f549:	sbb    esp,DWORD PTR [ecx]
  41f54b:	imul   edi,DWORD PTR [edi+0x32efae6f],0xc215e519
  41f555:	mov    ebx,0x92896414
  41f55a:	aad    0xe9
  41f55c:	(bad)  
  41f55d:	cmp    DWORD PTR [ebx+0x1b0f3d4c],eax
  41f563:	jp     0x41f5d3
  41f565:	shr    ah,0x18
  41f568:	repnz adc eax,0x4329fe6e
  41f56e:	pop    edi
  41f56f:	aaa    
  41f570:	adc    BYTE PTR [ebx+edi*1],ah
  41f573:	out    0xa7,eax
  41f575:	add    ebx,eax
  41f577:	shl    BYTE PTR [ebp+0x2be6a55d],1
  41f57d:	rcr    BYTE PTR [ecx-0x37bc08ef],cl
  41f583:	or     bh,BYTE PTR [edx-0x552f4910]
  41f589:	mov    al,ds:0x6e36642d
  41f58e:	ret    
  41f58f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f590:	rcr    DWORD PTR [esi],1
  41f592:	retf   
  41f593:	pop    ebx
  41f594:	mov    edx,DWORD PTR [esi-0x6faf6e96]
  41f59a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f59b:	push   ds
  41f59c:	popf   
  41f59d:	xor    DWORD PTR [eax+edi*8-0x61],0x995dba34
  41f5a5:	cmc    
  41f5a6:	test   eax,0x4af80d8b
  41f5ab:	or     esp,DWORD PTR [ebx]
  41f5ad:	mov    cl,0xd8
  41f5af:	sbb    cl,BYTE PTR [ecx]
  41f5b1:	cmp    BYTE PTR [ecx],ah
  41f5b3:	inc    ecx
  41f5b4:	cs repnz cld 
  41f5b7:	xchg   edi,eax
  41f5b8:	dec    edx
  41f5b9:	cmp    eax,0xc1c4c732
  41f5be:	or     edi,ebx
  41f5c0:	outs   dx,BYTE PTR ds:[esi]
  41f5c1:	or     DWORD PTR [ecx+0x15],ecx
  41f5c4:	(bad)  
  41f5c5:	das    
  41f5c6:	scas   eax,DWORD PTR es:[edi]
  41f5c7:	xchg   BYTE PTR [ecx],dh
  41f5c9:	add    al,0x4c
  41f5cb:	inc    edi
  41f5cc:	pop    ebx
  41f5cd:	jle    0x41f61b
  41f5cf:	(bad)  
  41f5d0:	or     DWORD PTR [ebx-0x54],ebp
  41f5d3:	mov    DWORD PTR [ebp-0x3b],esi
  41f5d6:	jns    0x41f5a6
  41f5d8:	xor    ah,BYTE PTR [edi+0x8677d2f]
  41f5de:	adc    al,0xa
  41f5e0:	mov    bl,0x8d
  41f5e2:	and    esi,esi
  41f5e4:	dec    ecx
  41f5e5:	mov    bl,0x56
  41f5e7:	mov    ds:0x2790b7c1,al
  41f5ec:	jg     0x41f5aa
  41f5ee:	dec    edi
  41f5ef:	loop   0x41f5aa
  41f5f1:	cmp    eax,0x3d4e1708
  41f5f6:	cmp    eax,0xb6b6e53a
  41f5fb:	leave  
  41f5fc:	fcmovnu st,st(7)
  41f5fe:	(bad)  
  41f5ff:	pop    ecx
  41f600:	xor    eax,DWORD PTR [esi]
  41f602:	mov    ah,0x98
  41f604:	loope  0x41f661
  41f606:	aad    0x57
  41f608:	xchg   ebp,eax
  41f609:	icebp  
  41f60a:	into   
  41f60b:	and    al,0x9a
  41f60d:	mov    dl,0x38
  41f60f:	data16 mov bh,0x33
  41f612:	test   BYTE PTR [ecx-0x1c],0x9b
  41f616:	mov    esp,0x1f9667ad
  41f61b:	stos   DWORD PTR es:[edi],eax
  41f61c:	cmp    al,0x63
  41f61e:	inc    ecx
  41f61f:	jne    0x41f5ab
  41f621:	sub    BYTE PTR [ebx],dh
  41f623:	cmp    eax,0x1755699c
  41f628:	inc    ebx
  41f629:	imul   esi,DWORD PTR [edi-0x32c17223],0xffffffe1
  41f630:	cdq    
  41f631:	mov    BYTE PTR [esi+eiz*1-0x3e3eccc],bh
  41f638:	push   edi
  41f639:	test   BYTE PTR [ebx],dh
  41f63b:	mov    ds:0xa3bcf292,al
  41f640:	fneni(8087 only) 
  41f642:	neg    dl
  41f644:	xlat   BYTE PTR ds:[ebx]
  41f646:	xlat   BYTE PTR ds:[ebx]
  41f647:	lods   eax,DWORD PTR ds:[esi]
  41f648:	stos   BYTE PTR es:[edi],al
  41f649:	or     DWORD PTR [ecx+ebp*8-0x50],edx
  41f64d:	fs test dl,0x49
  41f651:	call   0x22f8:0x1a89d4b9
  41f658:	pop    ebx
  41f659:	adc    edi,DWORD PTR [ecx-0x4d16378e]
  41f65f:	adc    ch,0x88
  41f662:	or     al,0x7b
  41f664:	lods   eax,DWORD PTR ds:[esi]
  41f665:	cmp    esp,DWORD PTR [edx+0x1a]
  41f668:	dec    eax
  41f669:	(bad)  
  41f66a:	xor    ah,BYTE PTR [ebx]
  41f66c:	lea    eax,[eax+edi*1]
  41f66f:	icebp  
  41f670:	in     al,dx
  41f671:	pushf  
  41f672:	and    al,0x5f
  41f674:	js     0x41f623
  41f676:	xlat   BYTE PTR ds:[ebx]
  41f677:	outs   dx,DWORD PTR ds:[esi]
  41f678:	pop    ebx
  41f679:	jns    0x41f683
  41f67b:	fwait
  41f67c:	in     al,0x38
  41f67e:	pusha  
  41f67f:	or     dl,BYTE PTR [ebp+edi*1-0x14cfd94d]
  41f686:	pushf  
  41f687:	jbe    0x41f64e
  41f689:	sub    edi,DWORD PTR [ebx-0xec6a0c6]
  41f68f:	je     0x41f63f
  41f691:	mov    esi,0xdc230950
  41f696:	fld    TBYTE PTR [eax+0x3ab371b9]
  41f69c:	push   0xfe82ec6f
  41f6a1:	push   esi
  41f6a2:	xchg   DWORD PTR ds:[edx],eax
  41f6a5:	lds    ebx,FWORD PTR [ecx+edi*8]
  41f6a8:	sar    DWORD PTR [edx-0x28],0x7e
  41f6ac:	dec    esp
  41f6ad:	mov    ecx,0x4022b3e5
  41f6b2:	dec    esi
  41f6b3:	in     al,dx
  41f6b4:	cmp    al,0x47
  41f6b6:	mov    ecx,0x4f5e5f81
  41f6bb:	retf   0xc97a
  41f6be:	(bad)  
  41f6c0:	pushf  
  41f6c1:	mov    BYTE PTR [ebx-0x43],dl
  41f6c4:	push   edx
  41f6c5:	sub    dh,bl
  41f6c7:	cmp    DWORD PTR [edi-0x7ed320af],0xffffffa7
  41f6ce:	sti    
  41f6cf:	or     bl,dl
  41f6d1:	mov    al,ds:0xa42209e1
  41f6d6:	sub    dh,cl
  41f6d8:	add    ebx,DWORD PTR [esi-0x78]
  41f6db:	adc    esp,eax
  41f6dd:	bound  edx,QWORD PTR [ebx-0x73]
  41f6e0:	loop   0x41f6fd
  41f6e2:	fsub   st,st(7)
  41f6e5:	dec    edi
  41f6e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6e7:	add    BYTE PTR [eax-0x30],0x85
  41f6eb:	mov    bl,0x55
  41f6ed:	outs   dx,DWORD PTR ds:[esi]
  41f6ee:	xchg   ebx,eax
  41f6ef:	loop   0x41f712
  41f6f1:	fs in  al,0x8d
  41f6f4:	push   ds
  41f6f5:	in     eax,0x2a
  41f6f7:	and    al,0xb7
  41f6f9:	call   0x5378:0x2e7403cf
  41f700:	xchg   dl,ch
  41f702:	pop    es
  41f703:	inc    edx
  41f704:	stos   DWORD PTR es:[edi],eax
  41f705:	out    dx,eax
  41f706:	xchg   ebx,eax
  41f707:	test   al,0xb6
  41f709:	sbb    BYTE PTR [ecx],dl
  41f70b:	add    dh,BYTE PTR [ebx]
  41f70d:	mov    bl,0xb
  41f70f:	mov    ds:0x1931ad7d,al
  41f714:	push   ds
  41f715:	dec    esi
  41f716:	jne    0x41f71e
  41f718:	cdq    
  41f719:	rcr    BYTE PTR [ebp+0x43ee634c],cl
  41f71f:	xor    BYTE PTR [ecx-0x59573219],0x74
  41f726:	dec    eax
  41f727:	pop    esp
  41f728:	push   ss
  41f729:	xor    edi,DWORD PTR [ebp+0x54]
  41f72c:	test   DWORD PTR [esi],eax
  41f72e:	xchg   ecx,eax
  41f72f:	cdq    
  41f730:	jns    0x41f6e1
  41f732:	sub    esp,DWORD PTR [edx]
  41f734:	ficom  WORD PTR [ecx-0x97e38b6]
  41f73a:	or     al,0xe3
  41f73c:	test   BYTE PTR [eax+0x7],ah
  41f73f:	clc    
  41f740:	jecxz  0x41f6f9
  41f742:	mov    al,ds:0x1598b7ac
  41f747:	mov    ebx,0xb6903656
  41f74c:	cmp    dl,ch
  41f74e:	leave  
  41f74f:	mov    ebp,0x6564baca
  41f754:	inc    esp
  41f755:	pop    ss
  41f756:	cmpxchg al,dh
  41f759:	mov    ebp,0xc05cf6d2
  41f75e:	mov    ebx,0x7822d6ff
  41f763:	idiv   edi
  41f765:	xchg   ecx,eax
  41f766:	dec    eax
  41f767:	push   ecx
  41f768:	cmp    DWORD PTR [ebp-0x166f44ed],ebp
  41f76e:	pushf  
  41f76f:	pusha  
  41f770:	(bad)  
  41f771:	xchg   edx,eax
  41f772:	sub    eax,0xf9e3c4fe
  41f777:	movnti DWORD PTR ds:0x6362e003,edx
  41f77e:	mov    eax,ds:0xffc9066d
  41f783:	dec    esp
  41f784:	jo     0x41f767
  41f786:	dec    esi
  41f787:	sti    
  41f788:	cmp    BYTE PTR [edi+0x242a30a3],ch
  41f78e:	dec    ebp
  41f78f:	jmp    0x41f76f
  41f791:	xchg   ecx,eax
  41f792:	outs   dx,DWORD PTR ds:[esi]
  41f793:	push   eax
  41f794:	xlat   BYTE PTR ds:[ebx]
  41f795:	rcr    ebp,0x81
  41f798:	(bad)  
  41f79a:	rcr    DWORD PTR [edx-0x7e],1
  41f79d:	inc    esi
  41f79e:	clc    
  41f79f:	test   eax,0x68666f26
  41f7a4:	push   es
  41f7a5:	adc    edi,esi
  41f7a7:	jl     0x41f7c2
  41f7a9:	ins    BYTE PTR es:[edi],dx
  41f7aa:	sub    al,0x62
  41f7ac:	sub    BYTE PTR [edi+0x3c],al
  41f7af:	add    DWORD PTR [edx],eax
  41f7b1:	fwait
  41f7b2:	jp     0x41f813
  41f7b4:	sbb    BYTE PTR [edx+ecx*4],dh
  41f7b7:	pop    ebx
  41f7b8:	loopne 0x41f7c1
  41f7ba:	pop    esi
  41f7bb:	dec    esp
  41f7bc:	ret    0xdc96
  41f7bf:	out    0x49,al
  41f7c1:	stos   BYTE PTR es:[edi],al
  41f7c2:	scas   al,BYTE PTR es:[edi]
  41f7c3:	repnz ficom DWORD PTR [ebx+0x6]
  41f7c7:	not    eax
  41f7c9:	lock mov al,0x7
  41f7cc:	push   esp
  41f7cd:	or     edi,esp
  41f7cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7d0:	in     eax,0x43
  41f7d2:	(bad)  
  41f7d3:	push   esp
  41f7d4:	jbe    0x41f7ab
  41f7d6:	push   ebx
  41f7d7:	nop
  41f7d8:	jecxz  0x41f815
  41f7da:	jmp    0xd6886ea7
  41f7df:	xchg   edi,eax
  41f7e0:	push   0xffffffe4
  41f7e2:	xor    eax,0x51be7918
  41f7e7:	pop    esi
  41f7e8:	add    bh,dh
  41f7ea:	add    al,0x75
  41f7ec:	jne    0x41f839
  41f7ee:	sbb    eax,0x1aedad84
  41f7f3:	inc    ecx
  41f7f4:	mov    ebp,0xe0fb51ee
  41f7f9:	imul   esp,DWORD PTR [esi+esi*2],0xffffffc2
  41f7fd:	adc    esi,DWORD PTR [ebx-0x1e7961c9]
  41f803:	push   ds
  41f804:	stos   BYTE PTR es:[edi],al
  41f805:	mov    dh,0x50
  41f807:	pop    ds
  41f808:	dec    edx
  41f809:	popa   
  41f80a:	cdq    
  41f80b:	push   0x13d54418
  41f810:	das    
  41f811:	add    al,0xae
  41f813:	and    eax,0xbb27ee31
  41f818:	inc    ebx
  41f819:	retf   0xcd1c
  41f81c:	adc    DWORD PTR [eax+0x561eaa80],esi
  41f822:	es cs popa 
  41f825:	push   0xffffffd1
  41f827:	mov    eax,0x715d61ab
  41f82c:	lods   al,BYTE PTR ds:[esi]
  41f82d:	fst    QWORD PTR [ebp-0x34]
  41f830:	sub    al,0x3b
  41f832:	jge    0x41f82f
  41f834:	call   0xa6304caa
  41f839:	dec    esp
  41f83a:	ja     0x41f7fb
  41f83c:	iret   
  41f83d:	retf   0xc134
  41f840:	or     edi,eax
  41f842:	push   es
  41f843:	and    al,0xb
  41f845:	jo     0x41f86b
  41f847:	call   0x2da0:0xf3441706
  41f84e:	jnp    0x41f8b1
  41f850:	xchg   ecx,eax
  41f851:	(bad)  
  41f852:	lods   al,BYTE PTR ds:[esi]
  41f853:	outs   dx,DWORD PTR ds:[esi]
  41f854:	outs   dx,BYTE PTR ds:[esi]
  41f855:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f856:	out    0x6c,eax
  41f858:	pinsrw mm3,WORD PTR [eax+0x550b693f],0xed
  41f860:	adc    BYTE PTR [ecx+ebp*8],bh
  41f863:	ret    
  41f864:	and    bh,BYTE PTR [ebp+0x6d290d2f]
  41f86a:	push   ebp
  41f86b:	xor    edi,DWORD PTR [edi-0x3e9bd867]
  41f871:	out    dx,al
  41f872:	mov    edx,DWORD PTR [ecx-0x3b]
  41f875:	inc    ebp
  41f876:	loopne 0x41f81f
  41f878:	push   eax
  41f879:	adc    DWORD PTR [esi+0x72],esp
  41f87c:	(bad)  
  41f87d:	and    ebp,DWORD PTR [esi+0x35c312c9]
  41f883:	or     DWORD PTR [ebx+0x20],esi
  41f886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f887:	pop    ss
  41f888:	loopne 0x41f8ae
  41f88a:	dec    ecx
  41f88b:	or     dl,dl
  41f88d:	mov    DWORD PTR [ebp-0x63],ebp
  41f890:	lods   al,BYTE PTR ds:[esi]
  41f891:	push   cs
  41f892:	cld    
  41f893:	les    esi,FWORD PTR [edx]
  41f895:	sub    BYTE PTR [ecx],ah
  41f897:	push   0xe863c118
  41f89c:	mov    ecx,DWORD PTR ds:0x6923c57d
  41f8a2:	jbe    0x41f87a
  41f8a4:	jg     0x41f8e6
  41f8a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8a7:	mov    bl,0x14
  41f8a9:	shl    esp,1
  41f8ab:	lds    ebp,FWORD PTR ds:0x315f06b
  41f8b1:	loope  0x41f87d
  41f8b3:	jae    0x41f934
  41f8b5:	push   eax
  41f8b6:	mov    edi,0x7f045eda
  41f8bb:	lea    esi,[edx+0x750695ff]
  41f8c1:	out    dx,eax
  41f8c2:	cs leavew 
  41f8c5:	pop    edi
  41f8c6:	or     BYTE PTR ds:0x742c,dh
  41f8cb:	jae    0x41f8ee
  41f8cd:	sub    BYTE PTR [ecx],0xe8
  41f8d0:	push   edi
  41f8d1:	mov    esi,0x1841e4b8
  41f8d6:	arpl   ax,cx
  41f8d8:	push   es
  41f8d9:	out    dx,eax
  41f8da:	add    BYTE PTR [edi],dl
  41f8dc:	enter  0x8119,0x59
  41f8e0:	ss popf 
  41f8e2:	stos   BYTE PTR es:[edi],al
  41f8e3:	les    edx,FWORD PTR [ecx-0x73]
  41f8e6:	or     cl,BYTE PTR [edi-0x40bd6a08]
  41f8ec:	pop    esp
  41f8ed:	jp     0x41f89f
  41f8ef:	xchg   edi,eax
  41f8f0:	jb     0x41f873
  41f8f2:	mov    ebp,0xbe7d9dfb
  41f8f7:	inc    edi
  41f8f8:	mov    dh,BYTE PTR ds:0x68908e38
  41f8fe:	pop    esp
  41f8ff:	js     0x41f91d
  41f901:	xchg   BYTE PTR [ebx+0x12],ah
  41f904:	sar    DWORD PTR [ebx-0x7],0xfe
  41f908:	pop    es
  41f909:	loopne 0x41f92c
  41f90b:	inc    esp
  41f90c:	aam    0xa2
  41f90e:	fisub  WORD PTR [eax-0x1e016483]
  41f914:	inc    eax
  41f915:	add    ebx,DWORD PTR [eax-0x546bbe3e]
  41f91b:	sub    edi,DWORD PTR [ecx-0x14761b1f]
  41f921:	loopne 0x41f8f8
  41f923:	mov    dh,0x42
  41f925:	rcl    DWORD PTR [ebx],cl
  41f927:	sub    eax,0xfc2d6941
  41f92c:	fistp  QWORD PTR [ebx]
  41f92e:	in     al,0xc7
  41f930:	pop    edi
  41f931:	ds mov ecx,0x75e5b660
  41f937:	loope  0x41f972
  41f939:	jbe    0x41f912
  41f93b:	inc    edx
  41f93c:	popa   
  41f93d:	outs   dx,DWORD PTR ds:[esi]
  41f93e:	sub    edx,DWORD PTR [ebp+0x19]
  41f941:	xchg   esp,eax
  41f942:	pushf  
  41f943:	push   eax
  41f944:	loope  0x41f96e
  41f946:	lods   eax,DWORD PTR ds:[esi]
  41f947:	sub    eax,esp
  41f949:	in     al,dx
  41f94a:	sub    eax,0x8898334d
  41f94f:	dec    DWORD PTR [edi]
  41f951:	sub    DWORD PTR [edx],esi
  41f953:	xchg   DWORD PTR [eiz*8-0x7b44779e],ecx
  41f95a:	call   0x775004c
  41f95f:	aad    0xc2
  41f961:	(bad)  
  41f962:	sti    
  41f963:	aas    
  41f964:	out    0x8b,al
  41f966:	cmp    dh,al
  41f968:	ins    BYTE PTR es:[edi],dx
  41f969:	lods   al,BYTE PTR ds:[esi]
  41f96a:	imul   eax,DWORD PTR [edi],0xa215f2af
  41f970:	mov    dh,0x65
  41f972:	lods   eax,DWORD PTR ds:[esi]
  41f973:	inc    eax
  41f974:	xor    BYTE PTR [ecx],bh
  41f976:	inc    ecx
  41f977:	ins    BYTE PTR es:[edi],dx
  41f978:	sub    al,0xa7
  41f97a:	gs add eax,0x6bbeca7f
  41f980:	in     eax,dx
  41f981:	hlt    
  41f982:	and    al,0x3
  41f984:	test   al,0x6d
  41f986:	inc    edx
  41f987:	push   eax
  41f988:	mov    esp,?
  41f98a:	sub    eax,ebx
  41f98c:	adc    edx,DWORD PTR [esi+0x36cdd8ad]
  41f992:	and    eax,0x9da74f8d
  41f997:	div    BYTE PTR [edx]
  41f999:	mov    ?,WORD PTR [ebp+eiz*2-0x4]
  41f99d:	and    BYTE PTR [ebx+0x2566ef8e],ah
  41f9a3:	and    bl,BYTE PTR [edx-0x12]
  41f9a6:	ror    BYTE PTR [bp+di],cl
  41f9a9:	and    ecx,DWORD PTR [esi]
  41f9ab:	int3   
  41f9ac:	pushf  
  41f9ad:	xchg   esp,eax
  41f9ae:	mov    cl,0x37
  41f9b0:	add    DWORD PTR ss:[ebp+0x68],esi
  41f9b4:	push   esi
  41f9b5:	push   ebp
  41f9b6:	mov    ch,0x63
  41f9b8:	loope  0x41f964
  41f9ba:	sbb    al,0x57
  41f9bc:	in     eax,dx
  41f9bd:	jecxz  0x41f9b6
  41f9bf:	push   cs
  41f9c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9c1:	scas   al,BYTE PTR es:[edi]
  41f9c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9c3:	inc    ecx
  41f9c4:	add    BYTE PTR [edi+eax*4-0x747eba8e],al
  41f9cb:	mov    eax,ds:0x7dd8ceef
  41f9d0:	xlat   BYTE PTR ds:[ebx]
  41f9d1:	mov    eax,ds:0xa66ef8b3
  41f9d6:	push   edi
  41f9d7:	jp     0x41fa56
  41f9d9:	arpl   si,cx
  41f9db:	xchg   ebp,eax
  41f9dc:	rcr    BYTE PTR [eax-0x3cc632aa],0xf7
  41f9e3:	adc    ebx,DWORD PTR [ebx-0x74]
  41f9e6:	sub    ah,al
  41f9e8:	and    bh,ch
  41f9ea:	pop    ds
  41f9eb:	xchg   esi,eax
  41f9ec:	gs and al,0x90
  41f9ef:	arpl   WORD PTR [edx],di
  41f9f1:	pop    ss
  41f9f2:	jb     0x41fa40
  41f9f4:	push   ds
  41f9f5:	div    BYTE PTR [ecx]
  41f9f7:	push   eax
  41f9f8:	mov    al,ds:0x83f1322a
  41f9fd:	xor    edx,ebx
  41f9ff:	loope  0x41f9e4
  41fa01:	pushf  
  41fa02:	add    dh,0x3a
  41fa05:	dec    ecx
  41fa06:	pop    esp
  41fa07:	inc    ecx
  41fa08:	nop
  41fa09:	pop    esp
  41fa0a:	fisub  DWORD PTR [eax-0x14]
  41fa0d:	ds pop ds
  41fa0f:	or     eax,0xe2216c20
  41fa14:	les    esi,FWORD PTR [esi]
  41fa16:	shl    DWORD PTR ds:0x30a29c2b,1
  41fa1c:	out    dx,eax
  41fa1d:	push   ds
  41fa1e:	xchg   BYTE PTR [edi+0x4e],bh
  41fa21:	jge    0x41f9d8
  41fa23:	xchg   esi,eax
  41fa24:	cmc    
  41fa25:	dec    edi
  41fa26:	mov    WORD PTR ds:0xdca507dc,ss
  41fa2c:	int3   
  41fa2d:	test   DWORD PTR [ecx+0x565f4409],edx
  41fa33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa34:	xchg   esi,eax
  41fa35:	gs repnz fs cld 
  41fa39:	and    al,0x7c
  41fa3b:	ficomp WORD PTR [ecx]
  41fa3d:	and    eax,0x1e117978
  41fa42:	mov    edi,0xe9834d6d
  41fa47:	test   eax,0xd542cfc5
  41fa4c:	fisttp DWORD PTR [ebx+eiz*4]
  41fa4f:	sbb    al,0xe4
  41fa51:	rcl    DWORD PTR [ecx-0x58f576c2],1
  41fa57:	ror    DWORD PTR [ebx+edx*2],0xbd
  41fa5b:	adc    DWORD PTR [edx-0x6f5b4ca4],0xfffffffb
  41fa62:	jnp    0x41fa04
  41fa64:	add    dh,BYTE PTR [edi]
  41fa66:	sbb    BYTE PTR [edx+0x5e1785d9],ah
  41fa6c:	jg     0x41fa9a
  41fa6e:	hlt    
  41fa6f:	mov    esp,0x865755f6
  41fa74:	adc    BYTE PTR [esi-0x5c],bh
  41fa77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa78:	xchg   ecx,eax
  41fa79:	inc    edi
  41fa7a:	mov    ch,0x5f
  41fa7c:	(bad)  [ebx+0x56]
  41fa7f:	dec    ebx
  41fa80:	aad    0x33
  41fa82:	dec    eax
  41fa83:	cmp    BYTE PTR [edx],dl
  41fa85:	add    bh,dh
  41fa87:	mov    edx,0x75af0f6b
  41fa8c:	mov    cl,0xaf
  41fa8e:	jns    0x41fa46
  41fa90:	aas    
  41fa91:	repnz sub esi,DWORD PTR [eiz*4-0x45a8a284]
  41fa99:	stc    
  41fa9a:	int3   
  41fa9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa9c:	fnsave [edx+0x57841bc6]
  41faa2:	repnz mov dl,0x2e
  41faa5:	sub    al,0x48
  41faa7:	cdq    
  41faa8:	xor    BYTE PTR [ebx+0x20],bl
  41faab:	retf   
  41faac:	mov    esp,gs
  41faae:	push   esp
  41faaf:	stos   DWORD PTR es:[edi],eax
  41fab0:	leave  
  41fab1:	ja     0x41fa8b
  41fab3:	pop    ss
  41fab4:	and    ch,cl
  41fab6:	inc    ecx
  41fab7:	add    al,0xff
  41fab9:	pop    edi
  41faba:	push   ebx
  41fabb:	sbb    DWORD PTR [ebp-0x6b],0xffffffc1
  41fabf:	out    dx,al
  41fac0:	pop    ebp
  41fac1:	cmp    dl,BYTE PTR [edi]
  41fac3:	jle    0x41fb2e
  41fac5:	add    eax,0x5116b6f6
  41faca:	add    ecx,DWORD PTR [esi+0x66]
  41facd:	mov    dl,0x18
  41facf:	push   esi
  41fad0:	pop    ecx
  41fad1:	mov    esp,0xd0911b1
  41fad6:	jae    0x41fb52
  41fad8:	mov    edx,0x9a6a717b
  41fadd:	add    esp,eax
  41fadf:	test   eax,0xd3a77e18
  41fae4:	js     0x41fa9e
  41fae6:	(bad)
  41fae9:	jge    0x41fa79
  41faeb:	pop    ecx
  41faec:	mov    ah,0xa2
  41faee:	mov    bh,0x19
  41faf0:	dec    esp
  41faf1:	mov    bl,0xdc
  41faf3:	fild   WORD PTR [ecx+0x2c]
  41faf6:	mov    WORD PTR [edx+0x56],cs
  41faf9:	pop    ebp
  41fafa:	dec    ecx
  41fafb:	sbb    eax,0xa684ca40
  41fb00:	push   esp
  41fb01:	xor    eax,0xf8e03895
  41fb06:	push   ebx
  41fb07:	ins    BYTE PTR es:[edi],dx
  41fb08:	or     DWORD PTR [ebx],ebp
  41fb0a:	in     al,0xe6
  41fb0c:	rcl    dl,cl
  41fb0e:	sub    eax,0x383b5a96
  41fb13:	xchg   BYTE PTR [edx+eiz*1],ch
  41fb16:	push   ss
  41fb17:	aas    
  41fb18:	ret    0x74f3
  41fb1b:	stos   BYTE PTR es:[edi],al
  41fb1c:	icebp  
  41fb1d:	jp     0x41fb28
  41fb1f:	adc    ah,dh
  41fb21:	and    ebx,DWORD PTR [eax]
  41fb23:	mov    ecx,DWORD PTR cs:[ecx]
  41fb26:	mov    edx,0x9e7a9968
  41fb2b:	ret    
  41fb2c:	loope  0x41fb72
  41fb2e:	xor    al,0x5a
  41fb31:	arpl   WORD PTR [edx],sp
  41fb33:	sub    bl,bh
  41fb35:	ss jmp 0x41fb1a
  41fb38:	dec    ecx
  41fb39:	fwait
  41fb3a:	pop    ebx
  41fb3b:	call   FWORD PTR [edx-0x27]
  41fb3e:	push   es
  41fb3f:	mov    dl,0x68
  41fb41:	cmp    edi,eax
  41fb43:	mov    ds:0x427211f,eax
  41fb48:	xchg   ecx,eax
  41fb49:	(bad)  
  41fb4a:	ficom  DWORD PTR [ebp+0x1f30f830]
  41fb50:	xchg   esp,eax
  41fb51:	cmp    BYTE PTR [edi+eiz*1],bh
  41fb54:	pop    ebp
  41fb55:	mov    ch,0x8b
  41fb57:	out    dx,eax
  41fb58:	fdecstp 
  41fb5a:	lock lea ebx,[esi]
  41fb5d:	xlat   BYTE PTR ds:[ebx]
  41fb5e:	push   edx
  41fb5f:	test   BYTE PTR [ebx],bl
  41fb61:	add    esp,DWORD PTR [esi+0xc]
  41fb64:	(bad)  
  41fb65:	imul   ecx,DWORD PTR [edi+0x1e6dd57f],0x9a2f28c7
  41fb6f:	push   cs
  41fb70:	mov    DWORD PTR [ebx+ebp*2],ebx
  41fb73:	jp     0x41fb70
  41fb75:	adc    al,0xd
  41fb77:	xchg   edi,eax
  41fb78:	leave  
  41fb79:	mov    ah,0x69
  41fb7b:	loope  0x41fb80
  41fb7d:	adc    BYTE PTR [ebp+0x79],ah
  41fb80:	(bad)  
  41fb81:	into   
  41fb82:	mov    edx,eax
  41fb84:	stos   DWORD PTR es:[edi],eax
  41fb85:	data16 mov dh,0x29
  41fb88:	cmp    al,0x6b
  41fb8a:	(bad)  
  41fb8b:	jo     0x41fbe8
  41fb8d:	daa    
  41fb8e:	shl    edx,1
  41fb90:	inc    DWORD PTR [eax-0x5e]
  41fb93:	push   0xcfd548d2
  41fb98:	ja     0x41fbd4
  41fb9a:	fsubr  DWORD PTR [edi]
  41fb9c:	pop    es
  41fb9d:	mov    BYTE PTR [eax],bh
  41fb9f:	das    
  41fba0:	fisubr WORD PTR es:[esi+eax*8]
  41fba4:	nop
  41fba5:	call   0xac05:0xb5818b90
  41fbac:	or     DWORD PTR [eax+ebx*4],esi
  41fbaf:	jp     0x41fbb5
  41fbb1:	int3   
  41fbb2:	mov    ds:0x2aac770b,eax
  41fbb7:	sbb    al,0xf1
  41fbb9:	fcmovb st,st(2)
  41fbbb:	sbb    ecx,DWORD PTR [ecx]
  41fbbd:	push   0x605ac1f5
  41fbc2:	dec    edi
  41fbc3:	sbb    dh,cl
  41fbc5:	les    edx,FWORD PTR [ebx-0x32]
  41fbc8:	xor    al,0x89
  41fbca:	retf   
  41fbcb:	jae    0x41fb74
  41fbcd:	inc    eax
  41fbce:	mov    eax,ds:0x1b362382
  41fbd3:	lock outs dx,DWORD PTR ds:[esi]
  41fbd5:	xor    bl,BYTE PTR [edx-0xda33824]
  41fbdb:	adc    DWORD PTR [esi+0x51],eax
  41fbde:	mov    ds:0xb1b4c74a,al
  41fbe3:	jae    0x41fb7f
  41fbe5:	dec    esp
  41fbe6:	cmp    eax,0x2a5da8d1
  41fbeb:	jne    0x41fbc4
  41fbed:	in     eax,dx
  41fbee:	mov    bh,bl
  41fbf0:	push   esi
  41fbf1:	aas    
  41fbf2:	jbe    0x41fc5d
  41fbf4:	inc    ecx
  41fbf5:	sbb    edi,esi
  41fbf7:	aaa    
  41fbf8:	out    0x31,eax
  41fbfa:	fnsave [eax]
  41fbfc:	out    0xc4,al
  41fbfe:	push   cs
  41fbff:	fmul   QWORD PTR [ecx+eiz*8+0x3e]
  41fc03:	jb     0x41fb99
  41fc05:	arpl   sp,dx
  41fc07:	mov    edx,0x8c6288c3
  41fc0c:	jae    0x41fbce
  41fc0e:	daa    
  41fc0f:	not    BYTE PTR ds:0x4a8ddace
  41fc15:	les    ebp,FWORD PTR [edx]
  41fc17:	jg     0x41fc92
  41fc19:	cwde   
  41fc1a:	jl     0x41fbcd
  41fc1c:	iret   
  41fc1d:	push   esp
  41fc1e:	sub    ebp,eax
  41fc20:	enter  0x6aeb,0x6f
  41fc24:	repnz dec edx
  41fc26:	add    eax,0xf95ccb31
  41fc2b:	test   DWORD PTR [ebp-0xe5206e0],ebp
  41fc31:	and    BYTE PTR [ebp-0x76],bh
  41fc34:	pop    ecx
  41fc35:	sbb    al,0x20
  41fc37:	call   0x46c7c02
  41fc3c:	fisttp DWORD PTR [ecx+0x79170d3d]
  41fc42:	mov    esp,0x51f73a3c
  41fc47:	(bad)  
  41fc48:	rol    ah,1
  41fc4a:	(bad)  
  41fc4c:	mov    eax,ds:0x7b526d6c
  41fc51:	mov    edi,ebx
  41fc53:	dec    esp
  41fc54:	jnp    0x41fcb9
  41fc56:	lea    ebp,[edx+0x20]
  41fc59:	or     al,0xec
  41fc5b:	sub    edi,ebp
  41fc5d:	shr    ebx,1
  41fc5f:	and    DWORD PTR [edi+ebp*4-0x5b],ecx
  41fc63:	sub    al,0x94
  41fc65:	imul   edi,DWORD PTR [ebp+0x47],0x50
  41fc69:	add    al,0xc4
  41fc6b:	mov    ebp,0x97fa3788
  41fc70:	clc    
  41fc71:	dec    ebp
  41fc72:	pop    es
  41fc73:	jno    0x41fc7c
  41fc75:	mov    bh,0x71
  41fc77:	push   cs
  41fc78:	call   0x65541022
  41fc7d:	mov    eax,0x84ded8d1
  41fc82:	pushf  
  41fc83:	push   ecx
  41fc84:	mov    ch,0x7a
  41fc86:	adc    bh,dh
  41fc88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc89:	cwde   
  41fc8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc8b:	xchg   edi,eax
  41fc8d:	js     0x41fc8a
  41fc8f:	mov    al,ds:0x74652856
  41fc94:	pop    esi
  41fc95:	xor    bh,dh
  41fc97:	outs   dx,DWORD PTR ds:[esi]
  41fc98:	les    eax,FWORD PTR [ecx+eiz*2+0x3b]
  41fc9c:	rcr    DWORD PTR [eax-0x473f3d79],1
  41fca2:	fst    QWORD PTR [edi-0xa42162f]
  41fca8:	push   0xbca65b9d
  41fcad:	add    al,BYTE PTR [esi-0x27]
  41fcb0:	dec    ebx
  41fcb1:	mov    eax,ecx
  41fcb3:	inc    DWORD PTR [esi+eax*2]
  41fcb6:	push   ss
  41fcb7:	fsincos 
  41fcb9:	pop    edx
  41fcba:	(bad)
  41fcbd:	fisubr DWORD PTR [edx]
  41fcbf:	sbb    eax,0x2a31e722
  41fcc4:	push   eax
  41fcc5:	ins    DWORD PTR es:[edi],dx
  41fcc6:	mov    eax,DWORD PTR [ecx+0x7d]
  41fcc9:	test   DWORD PTR [esi+0xed2ca2f],0x281bc5af
  41fcd3:	mov    bl,0x76
  41fcd5:	dec    esp
  41fcd6:	stc    
  41fcd7:	xchg   esp,eax
  41fcd8:	mov    edi,0x93a4a181
  41fcdd:	add    cl,BYTE PTR [ebp+0x3a4f4639]
  41fce3:	rcr    ebp,1
  41fce5:	test   BYTE PTR [edi-0x2953032e],0x52
  41fcec:	adc    al,0xb4
  41fcee:	adc    edx,ebp
  41fcf0:	pop    edi
  41fcf1:	mov    bh,0x87
  41fcf3:	retf   
  41fcf4:	xchg   edi,eax
  41fcf5:	inc    esp
  41fcf6:	mov    bh,0x1d
  41fcf8:	mov    dl,0xf4
  41fcfa:	sub    al,BYTE PTR [edi]
  41fcfc:	add    DWORD PTR [esi-0x4b],0x76929604
  41fd03:	icebp  
  41fd04:	test   al,0x88
  41fd06:	mov    dl,0x61
  41fd08:	or     eax,DWORD PTR [edi+0x69]
  41fd0b:	dec    ebp
  41fd0c:	in     al,dx
  41fd0d:	shr    ch,cl
  41fd0f:	mov    ecx,0xbc9a3015
  41fd14:	dec    ebx
  41fd15:	xor    ecx,DWORD PTR [edi]
  41fd17:	xchg   ecx,eax
  41fd18:	imul   eax,ebp,0x1f
  41fd1b:	dec    ebp
  41fd1c:	(bad)  
  41fd1d:	lods   al,BYTE PTR ds:[esi]
  41fd1e:	(bad)  
  41fd20:	sub    eax,0xd2e099b4
  41fd25:	in     eax,0x2a
  41fd27:	sub    al,0x8b
  41fd29:	sti    
  41fd2a:	and    DWORD PTR [esi-0x3568b814],eax
  41fd30:	and    al,0x27
  41fd32:	repnz dec ebx
  41fd34:	aas    
  41fd35:	add    eax,0x5ff7bb31
  41fd3a:	pop    ebp
  41fd3b:	mov    ecx,0xe4eda1b0
  41fd40:	adc    BYTE PTR [edi+0x6c],bl
  41fd43:	mov    al,ds:0xe8b221ad
  41fd48:	shl    DWORD PTR [ebp+ecx*8-0x56b89dab],1
  41fd4f:	aad    0xac
  41fd51:	mov    ds:0x8d16e2f5,al
  41fd56:	push   0xffffffb2
  41fd58:	push   0xd6fe2f80
  41fd5d:	pusha  
  41fd5e:	mov    eax,0xb51217e9
  41fd63:	(bad)  
  41fd65:	adc    eax,0xace91522
  41fd6a:	push   ds
  41fd6b:	cmp    eax,0xf96089e4
  41fd70:	test   DWORD PTR [ebx-0x1a579ca3],ebx
  41fd76:	shl    ebx,cl
  41fd78:	lds    esi,FWORD PTR [ebp-0x44]
  41fd7b:	mov    esi,0x3cfc65a8
  41fd80:	(bad)  
  41fd81:	std    
  41fd82:	mov    ch,0x1e
  41fd84:	mov    dl,0xf3
  41fd86:	daa    
  41fd87:	out    0xa3,al
  41fd89:	sbb    eax,DWORD PTR [eax-0x63]
  41fd8c:	jne    0x41fdb4
  41fd8e:	xchg   esi,eax
  41fd8f:	outs   dx,DWORD PTR ds:[esi]
  41fd90:	in     al,dx
  41fd91:	sub    al,0x88
  41fd93:	jge    0x41fd43
  41fd95:	xchg   edx,edx
  41fd97:	int3   
  41fd98:	imul   ecx,DWORD PTR [esi+0x4a],0x2773ea2f
  41fd9f:	stc    
  41fda0:	sbb    esi,0x45
  41fda3:	outs   dx,BYTE PTR ds:[esi]
  41fda4:	pop    ecx
  41fda5:	retf   
  41fda6:	pop    edx
  41fda7:	icebp  
  41fda8:	sti    
  41fda9:	sbb    BYTE PTR [edx],0x2e
  41fdac:	and    bh,BYTE PTR [ecx+0x6958a751]
  41fdb2:	in     al,0xaf
  41fdb4:	sbb    eax,0x78cd422f
  41fdb9:	push   ebx
  41fdba:	pop    esi
  41fdbb:	pop    esp
  41fdbc:	dec    BYTE PTR [ebx+0x6a]
  41fdbf:	push   0x151ee594
  41fdc4:	test   DWORD PTR [ebx+0x2c],0x8cd8dda0
  41fdcb:	dec    eax
  41fdcc:	scas   eax,DWORD PTR es:[edi]
  41fdcd:	jnp    0x41fde0
  41fdcf:	add    ah,BYTE PTR [ebx+edx*8]
  41fdd2:	gs fcmovnu st,st(3)
  41fdd5:	imul   edx,DWORD PTR [edi-0x73850463],0x7
  41fddc:	loop   0x41fdae
  41fdde:	fcomp  st(3)
  41fde0:	fcmovne st,st(7)
  41fde2:	or     eax,0x6bfec8da
  41fde7:	add    eax,0xb0060e12
  41fdec:	inc    edi
  41fded:	push   ds
  41fdee:	push   esi
  41fdef:	fild   QWORD PTR [eax]
  41fdf1:	into   
  41fdf2:	fs out 0x11,al
  41fdf5:	stc    
  41fdf6:	out    0x62,al
  41fdf8:	mov    bh,0x66
  41fdfa:	push   eax
  41fdfb:	mov    eax,0x577a98e6
  41fe00:	sub    DWORD PTR [edi],ebp
  41fe02:	mov    BYTE PTR [edi+0x65228d4e],ch
  41fe08:	jnp    0x41fdc2
  41fe0a:	jne    0x41fe78
  41fe0c:	fadd   DWORD PTR [edi+0x17d7b8b6]
  41fe12:	push   esp
  41fe13:	fbstp  TBYTE PTR [ecx]
  41fe15:	cmp    al,0x5f
  41fe17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe18:	xchg   ecx,eax
  41fe19:	cmp    esi,edi
  41fe1b:	push   eax
  41fe1c:	cdq    
  41fe1d:	std    
  41fe1e:	jns    0x41fdf4
  41fe20:	xor    al,0x8f
  41fe22:	ds push edi
  41fe24:	cli    
  41fe25:	inc    edi
  41fe26:	cmp    DWORD PTR [eax+0x55],edx
  41fe29:	and    BYTE PTR cs:[esi+ebp*4+0x7ddafae3],ah
  41fe31:	ins    BYTE PTR es:[edi],dx
  41fe32:	test   BYTE PTR [esp+ecx*4+0x2a990595],cl
  41fe39:	sub    al,0xc5
  41fe3b:	pop    ds
  41fe3c:	xlat   BYTE PTR ds:[ebx]
  41fe3d:	mov    bl,0x96
  41fe3f:	jecxz  0x41fe31
  41fe41:	fcmovnb st,st(2)
  41fe43:	ins    BYTE PTR es:[edi],dx
  41fe44:	sbb    edi,eax
  41fe46:	jne    0x41fe03
  41fe48:	aam    0x5d
  41fe4a:	and    esp,DWORD PTR [edx+0x618de2f1]
  41fe50:	push   ebx
  41fe51:	pop    esi
  41fe52:	popf   
  41fe53:	inc    edi
  41fe54:	imul   esp,DWORD PTR [ecx+eiz*4],0x7e
  41fe58:	pop    ds
  41fe59:	pushf  
  41fe5a:	fidiv  DWORD PTR [ebx]
  41fe5c:	jp     0x41fe58
  41fe5e:	shl    DWORD PTR [ecx],0x7c
  41fe61:	ret    
  41fe62:	shl    DWORD PTR [edx+0x7b3582d7],1
  41fe68:	aaa    
  41fe69:	hlt    
  41fe6a:	enter  0x7ff6,0xc9
  41fe6e:	scas   eax,DWORD PTR es:[edi]
  41fe6f:	rcr    BYTE PTR [edx],0x1e
  41fe72:	pop    ecx
  41fe73:	aam    0x87
  41fe75:	sbb    esi,DWORD PTR [edi*4-0x6a677982]
  41fe7c:	mov    eax,0x1b5b9f1c
  41fe81:	repz push edx
  41fe83:	(bad)  
  41fe84:	in     al,0x76
  41fe86:	push   edx
  41fe87:	xor    BYTE PTR [eax+0x4993f942],bl
  41fe8d:	cdq    
  41fe8e:	sbb    DWORD PTR [edx-0x68],0x6fe640c
  41fe95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe96:	loop   0x41fef1
  41fe98:	int3   
  41fe99:	mov    esi,?
  41fe9b:	aas    
  41fe9c:	mov    ch,0x64
  41fe9e:	mov    esp,0xf8f18cbc
  41fea3:	mov    BYTE PTR [ecx+ebx*8],0x2a
  41fea7:	je     0x41fee1
  41fea9:	test   al,0x38
  41feab:	sbb    al,0x2d
  41fead:	pusha  
  41feae:	xlat   BYTE PTR ds:[ebx]
  41feaf:	ins    BYTE PTR es:[edi],dx
  41feb0:	pop    esi
  41feb1:	and    eax,0x568f8f94
  41feb6:	cmp    BYTE PTR [esi-0x2b],ch
  41feb9:	bound  eax,QWORD PTR [ebx+eiz*8]
  41febc:	ss push 0x22022285
  41fec2:	sti    
  41fec3:	inc    ebx
  41fec5:	das    
  41fec6:	or     BYTE PTR [ebx+0xe],ah
  41fec9:	add    dh,BYTE PTR [edx]
  41fecb:	outs   dx,BYTE PTR ds:[esi]
  41fecc:	cmp    eax,0x1e36a981
  41fed1:	fs fwait
  41fed3:	xor    bh,0xca
  41fed6:	mov    cl,0x46
  41fed8:	pop    ss
  41fed9:	pop    es
  41feda:	ins    BYTE PTR es:[edi],dx
  41fedb:	inc    eax
  41fedc:	mov    esi,0xc5472ae8
  41fee1:	mov    DWORD PTR [edi+edi*4],eax
  41fee4:	push   0x9553f8a
  41fee9:	bound  eax,QWORD PTR [edx+0x11a79456]
  41feef:	jl     0x41ff25
  41fef1:	push   edx
  41fef2:	jo     0x41fe91
  41fef4:	stc    
  41fef5:	retf   0xf756
  41fef8:	out    dx,al
  41fef9:	std    
  41fefa:	and    DWORD PTR [ecx+0x74],0xc719837a
  41ff01:	test   BYTE PTR [ebx],0x3f
  41ff04:	cmp    ah,dl
  41ff06:	jmp    0x876:0x27784485
  41ff0d:	cmp    DWORD PTR [eax+edi*1+0x385ce7ac],esp
  41ff14:	add    edi,DWORD PTR [ebx+0x5a]
  41ff17:	push   ecx
  41ff18:	pop    ds
  41ff19:	push   ebp
  41ff1a:	lock test eax,0x8c8f434d
  41ff20:	xchg   ecx,eax
  41ff21:	or     BYTE PTR [ebp-0x74],cl
  41ff24:	int3   
  41ff25:	xor    ch,bl
  41ff27:	xor    DWORD PTR [esi+0x51a39a71],ebx
  41ff2d:	dec    eax
  41ff2e:	repz popf 
  41ff30:	adc    cl,dl
  41ff32:	repz fwait
  41ff34:	aaa    
  41ff35:	sbb    DWORD PTR ds:0x39368090,0x29
  41ff3c:	push   es
  41ff3d:	xchg   ecx,eax
  41ff3e:	jo     0x41ff2f
  41ff40:	mov    ?,WORD PTR [edx-0x4d]
  41ff43:	xor    eax,0xf0544b52
  41ff48:	inc    edx
  41ff49:	in     eax,dx
  41ff4a:	or     bl,BYTE PTR [ebp-0x465c31d6]
  41ff50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff51:	fistp  QWORD PTR [ebx-0x391dd282]
  41ff57:	cdq    
  41ff58:	int    0xa1
  41ff5a:	fidivr DWORD PTR [edi]
  41ff5c:	sbb    eax,0x75974e80
  41ff61:	ins    BYTE PTR es:[edi],dx
  41ff62:	pop    ss
  41ff63:	mov    al,ds:0x643d6d5a
  41ff68:	jno    0x41ff3d
  41ff6a:	fcmovb st,st(7)
  41ff6c:	lods   al,BYTE PTR ds:[esi]
  41ff6d:	and    al,BYTE PTR [ebp+0x4a]
  41ff70:	outs   dx,BYTE PTR ds:[esi]
  41ff71:	(bad)  
  41ff72:	push   esi
  41ff73:	cdq    
  41ff74:	popf   
  41ff75:	inc    eax
  41ff76:	vpminsw xmm7,xmm3,XMMWORD PTR [ebp-0x32cd988]
  41ff7e:	mov    edx,ecx
  41ff80:	and    eax,0xffffff92
  41ff83:	cld    
  41ff84:	aam    0xb7
  41ff86:	sti    
  41ff87:	xor    ecx,DWORD PTR [ebp-0x1409b5fc]
  41ff8d:	mov    ebx,0x2d66fb19
  41ff92:	(bad)  
  41ff93:	mov    ah,0xc8
  41ff95:	fstp   TBYTE PTR [ebx]
  41ff97:	cld    
  41ff98:	pop    ebx
  41ff99:	mov    WORD PTR [ebx+0x38],fs
  41ff9c:	mov    ebp,0x3dbec2ec
  41ffa1:	enter  0xdad7,0x90
  41ffa5:	or     BYTE PTR [ecx],ah
  41ffa7:	(bad)  
  41ffa8:	or     ecx,DWORD PTR [esi-0x38f07369]
  41ffae:	lahf   
  41ffaf:	inc    eax
  41ffb0:	adc    ah,bh
  41ffb2:	adc    al,0xb1
  41ffb4:	sar    BYTE PTR [ebx],0x19
  41ffb7:	pop    ds
  41ffb8:	out    0xc2,al
  41ffba:	aam    0x91
  41ffbc:	adc    eax,0x2f458424
  41ffc1:	in     eax,dx
  41ffc2:	lods   eax,DWORD PTR ds:[esi]
  41ffc3:	sbb    BYTE PTR [edx+0xa],0xcb
  41ffc7:	inc    ecx
  41ffc8:	in     eax,dx
  41ffc9:	fcom   DWORD PTR [esi+0x37474502]
  41ffcf:	popa   
  41ffd0:	enter  0x8fde,0xee
  41ffd4:	push   ebx
  41ffd5:	or     bl,bl
  41ffd7:	dec    edi
  41ffd8:	mov    dl,BYTE PTR [ebx+eiz*4-0x5b]
  41ffdc:	ja     0x41ff6e
  41ffde:	ins    BYTE PTR es:[edi],dx
  41ffdf:	inc    edi
  41ffe0:	popa   
  41ffe1:	shl    BYTE PTR [ebp+0x58],0x94
  41ffe5:	out    dx,eax
  41ffe6:	mov    ch,0xe0
  41ffe8:	sbb    esi,DWORD PTR [edi]
  41ffea:	and    ebp,esi
  41ffec:	loope  0x41ffff
  41ffee:	clc    
  41ffef:	js     0x420005
  41fff1:	loop   0x42004b
  41fff3:	jl     0x41ff97
  41fff5:	adc    esi,0x38077ea4
  41fffb:	mov    ecx,0x821af60e
  420000:	adc    al,0x2b
  420002:	daa    
  420003:	inc    esi
  420004:	push   edi
  420005:	mov    bh,0xfd
  420007:	cmp    esi,DWORD PTR [ebx-0x2271e5ad]
  42000d:	or     BYTE PTR [esi+0x63d8aafc],dh
  420013:	test   al,0x27
  420015:	mov    bl,dl
  420017:	fwait
  420018:	mov    eax,ds:0x38e0ee88
  42001d:	ror    DWORD PTR [ebp+0x7417e241],1
  420023:	jmp    0xfebad9c7
  420028:	pop    ebp
  420029:	ss (bad) 
  42002b:	loop   0x41ffec
  42002d:	shl    DWORD PTR ds:0xd0d9846e,cl
  420033:	(bad)  
  420034:	mov    ecx,0xdbf2ba90
  420039:	sar    DWORD PTR [edx-0x5d11a925],0xce
  420040:	and    BYTE PTR [ebp+0x3b210b0b],dl
  420046:	jne    0x420092
  420048:	cmp    ch,BYTE PTR [ecx+0x202ef499]
  42004e:	jge    0x4200ad
  420050:	sbb    al,0x83
  420052:	cmp    esi,DWORD PTR [eax+0x53]
  420055:	pop    edi
  420056:	call   0xedaa5370
  42005b:	xchg   ebx,eax
  42005c:	out    dx,al
  42005d:	inc    esp
  42005e:	sub    eax,0xc47241ac
  420063:	lahf   
  420064:	mov    ah,0xde
  420066:	sbb    al,BYTE PTR [edx+edx*4-0x7e184c2a]
  42006d:	call   0x12a8:0x199ee341
  420074:	dec    edi
  420075:	ret    
  420076:	leave  
  420077:	mov    ch,BYTE PTR [edi+0x61]
  42007a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42007b:	xchg   BYTE PTR [ecx+0x7c754721],dl
  420081:	cmp    esp,edi
  420083:	test   BYTE PTR [esi+ecx*2-0x22],0x83
  420088:	or     edi,0xf3dfeab9
  42008e:	push   eax
  420090:	xor    ah,BYTE PTR [ebp-0x9f4247b]
  420096:	inc    esp
  420097:	mov    eax,0x88e9124e
  42009c:	gs pop ecx
  42009e:	push   ss
  42009f:	xor    al,0xac
  4200a1:	fadd   DWORD PTR [ecx+0x1c720df3]
  4200a7:	mov    BYTE PTR [edx+0x4e],dl
  4200aa:	xchg   esi,eax
  4200ab:	out    0x3,al
  4200ad:	sbb    cl,BYTE PTR [ecx-0x4b695a6a]
  4200b3:	retf   0x3d18
  4200b6:	or     esi,esi
  4200b8:	mov    esi,DWORD PTR [ebx-0x3a]
  4200bb:	adc    DWORD PTR [esp+esi*4+0x49],esp
  4200bf:	sub    esp,esp
  4200c1:	inc    eax
  4200c2:	idiv   BYTE PTR [edi]
  4200c4:	call   0x4058:0x27d16194
  4200cb:	cdq    
  4200cc:	xor    eax,0xb833968d
  4200d1:	aaa    
  4200d2:	mov    eax,ds:0xbf7507b
  4200d7:	loopne 0x420157
  4200d9:	inc    edx
  4200da:	mov    BYTE PTR [eax+0x5b],cl
  4200dd:	out    0x4a,eax
  4200df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200e0:	dec    eax
  4200e1:	js     0x4200f0
  4200e3:	pop    eax
  4200e4:	(bad)  
  4200e5:	sbb    DWORD PTR [edx],ebp
  4200e7:	enter  0x171b,0xa4
  4200eb:	push   esp
  4200ec:	es jae 0x42008f
  4200ef:	std    
  4200f0:	test   DWORD PTR [esi-0x41a4cd70],0x798ee3ca
  4200fa:	push   edx
  4200fb:	loopne 0x420179
  4200fd:	xor    eax,0xf07f42a5
  420102:	out    dx,al
  420103:	ins    DWORD PTR es:[edi],dx
  420104:	jmp    0x8990:0x2b17c823
  42010b:	sti    
  42010c:	sbb    dh,ch
  42010e:	push   edi
  42010f:	jg     0x4200ff
  420111:	(bad)  
  420113:	cld    
  420114:	mov    al,0x44
  420116:	je     0x42016a
  420118:	or     al,0xbb
  42011a:	test   al,0xd0
  42011c:	pop    ebx
  42011d:	(bad)  
  42011e:	jmp    0xbb0f:0x1c4080cc
  420125:	ret    0x221e
  420128:	je     0x4200df
  42012a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42012b:	popf   
  42012c:	mov    ah,0x78
  42012e:	mov    DWORD PTR [ebx+esi*8],esp
  420131:	rcr    al,1
  420133:	and    bh,bh
  420135:	dec    edi
  420136:	ficomp WORD PTR ds:0xb4a23a61
  42013c:	mov    ecx,0xc471610f
  420141:	mov    al,ds:0x3b353e96
  420146:	and    edx,esp
  420148:	dec    ebp
  420149:	pop    DWORD PTR [edx+0x6e]
  42014c:	mov    ah,0x6b
  42014e:	inc    edx
  42014f:	push   0x33
  420151:	imul   eax,edi,0x11
  420154:	dec    esp
  420155:	sbb    esi,DWORD PTR [edi+0x40]
  420158:	mov    ah,0xd5
  42015a:	inc    edi
  42015b:	xor    bl,bl
  42015d:	mov    al,ds:0x70d40506
  420162:	leave  
  420163:	cmp    ch,BYTE PTR [eax-0x5a]
  420166:	in     al,dx
  420167:	push   ecx
  420168:	dec    esp
  420169:	(bad)  
  42016a:	lahf   
  42016b:	lods   eax,DWORD PTR ds:[esi]
  42016c:	icebp  
  42016d:	add    eax,0x99ac768a
  420172:	xchg   DWORD PTR [ebp-0x22],esp
  420175:	pop    ds
  420176:	out    0x2e,eax
  420178:	xor    DWORD PTR [esp+eax*4+0x3c],ebp
  42017c:	add    BYTE PTR [ebp-0x22],dl
  42017f:	add    BYTE PTR [edi],ch
  420181:	and    eax,0x52e6a9ac
  420186:	push   0xffffffba
  420188:	mov    ah,0x63
  42018a:	mov    al,ds:0xebd24545
  42018f:	pop    ecx
  420190:	sub    al,0xdf
  420192:	std    
  420193:	enter  0xdc8c,0x89
  420197:	or     BYTE PTR [ebp-0x45],0x97
  42019b:	ror    BYTE PTR [eax+ebx*4-0x18acf0de],0x52
  4201a3:	adc    eax,0x7b4409d0
  4201a8:	mov    eax,0xdb96cfde
  4201ad:	jecxz  0x4201d1
  4201af:	dec    ebx
  4201b0:	in     eax,dx
  4201b1:	jmp    0x20009b9a
  4201b6:	sub    BYTE PTR [esi],cl
  4201b8:	into   
  4201b9:	mov    WORD PTR [ebx],es
  4201bb:	add    ch,dl
  4201bd:	push   edi
  4201be:	sub    BYTE PTR [ebp-0x1379dcf6],dl
  4201c4:	xor    ebp,DWORD PTR ds:0x861ae732
  4201ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201cb:	push   ecx
  4201cc:	push   edx
  4201cd:	addr16 loopne 0x420204
  4201d0:	in     al,dx
  4201d1:	in     eax,0x6c
  4201d3:	cli    
  4201d4:	div    BYTE PTR [ebp-0x7f]
  4201d7:	out    0xf1,eax
  4201d9:	cmp    BYTE PTR [eax+ebp*8-0x44],bh
  4201dd:	push   ebx
  4201de:	adc    BYTE PTR [ecx],al
  4201e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201e1:	jg     0x4201c6
  4201e3:	xchg   BYTE PTR [ebx+edi*4+0x6f],ah
  4201e7:	mov    esp,DWORD PTR [edx]
  4201e9:	xchg   BYTE PTR [ecx+0x48],ch
  4201ec:	pop    es
  4201ed:	idiv   BYTE PTR [edx-0x2821bf01]
  4201f3:	pushf  
  4201f4:	popa   
  4201f5:	stc    
  4201f6:	scas   eax,DWORD PTR es:[edi]
  4201f7:	outs   dx,BYTE PTR ds:[esi]
  4201f8:	pop    es
  4201f9:	fwait
  4201fa:	pop    ax
  4201fc:	ds cmc 
  4201fe:	int    0xae
  420200:	ret    0x91ea
  420203:	pop    esi
  420204:	mov    ?,ecx
  420206:	cmp    al,0xbf
  420208:	mov    BYTE PTR [edx+0x148da092],0x65
  42020f:	and    eax,0x6b9616ef
  420214:	scas   al,BYTE PTR es:[edi]
  420215:	lds    eax,FWORD PTR [esi]
  420217:	je     0x42028a
  420219:	lods   al,BYTE PTR ds:[esi]
  42021a:	adc    al,0xc9
  42021c:	xchg   edi,edi
  42021e:	cdq    
  42021f:	jne    0x42029e
  420221:	(bad)  
  420222:	add    BYTE PTR [ecx],cl
  420224:	add    DWORD PTR [ebx],esp
  420226:	hlt    
  420227:	outs   dx,DWORD PTR ds:[esi]
  420228:	(bad)  
  42022a:	fld    TBYTE PTR [ebp+0x5c]
  42022d:	push   es
  42022e:	pop    esp
  42022f:	sub    al,0x26
  420231:	cli    
  420232:	push   eax
  420233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420234:	ja     0x4201b7
  420236:	pushf  
  420237:	scas   al,BYTE PTR es:[edi]
  420238:	fwait
  420239:	mov    ebp,0x7b00d502
  42023e:	push   cs
  42023f:	xchg   BYTE PTR [esi+eiz*8-0x40],dl
  420243:	dec    edx
  420244:	mov    edx,0x3da21a33
  420249:	sub    ch,BYTE PTR [edx-0x64eaa25]
  42024f:	mov    WORD PTR [edx-0x15ed1d2a],?
  420255:	jb     0x4201f0
  420257:	lds    esp,FWORD PTR [ecx+0x79ab7461]
  42025d:	adc    DWORD PTR [ecx+0xc60b678],ecx
  420263:	fild   WORD PTR [ecx-0x6c]
  420266:	(bad)  
  420267:	cdq    
  420268:	ficomp WORD PTR [edx]
  42026a:	or     DWORD PTR [ebx+0x13],esi
  42026d:	shl    BYTE PTR [edi+0x53],0x7a
  420271:	in     eax,0x9f
  420273:	dec    ebx
  420274:	cmp    eax,0x841c38e1
  420279:	or     ebp,ebx
  42027b:	fnstenv [ebx+0x35]
  42027e:	dec    ebx
  42027f:	xor    DWORD PTR [bx+si],edi
  420282:	cmp    edx,DWORD PTR [ebx]
  420284:	jnp    0x4202ad
  420286:	stos   BYTE PTR es:[edi],al
  420287:	add    al,0xc7
  420289:	sub    DWORD PTR [eax],eax
  42028b:	scas   al,BYTE PTR es:[edi]
  42028c:	inc    eax
  42028d:	and    eax,0xaedae393
  420292:	mov    al,0xe1
  420294:	stc    
  420295:	dec    edx
  420296:	mov    edi,0x7cd04432
  42029b:	enter  0x9878,0xac
  42029f:	lods   al,BYTE PTR ds:[esi]
  4202a0:	lods   al,BYTE PTR cs:[esi]
  4202a2:	mov    DWORD PTR [edx+0x67f66703],ecx
  4202a8:	arpl   WORD PTR [ebp+ebp*1-0x5e],bx
  4202ac:	pop    edi
  4202ad:	dec    eax
  4202ae:	dec    DWORD PTR [ebx]
  4202b0:	push   edi
  4202b1:	mov    ah,BYTE PTR [ebp+0x46b14843]
  4202b7:	sbb    ecx,DWORD PTR [eax+0x38]
  4202ba:	out    dx,al
  4202bb:	jge    0x42032e
  4202bd:	add    ecx,DWORD PTR [edx-0x2a2272ed]
  4202c3:	neg    BYTE PTR [ecx]
  4202c5:	sub    ebp,ebp
  4202c7:	je     0x420346
  4202c9:	sub    ah,cl
  4202cb:	mov    eax,ds:0x348c65b6
  4202d0:	jns    0x420309
  4202d2:	hlt    
  4202d3:	xchg   edi,eax
  4202d4:	push   ebp
  4202d5:	stos   DWORD PTR es:[edi],eax
  4202d6:	cdq    
  4202d7:	pushf  
  4202d8:	sahf   
  4202d9:	pop    ebx
  4202da:	or     DWORD PTR [ecx-0x24],edx
  4202dd:	adc    al,0xdb
  4202df:	lods   al,BYTE PTR ds:[esi]
  4202e0:	push   0x9d839cf5
  4202e5:	adc    al,0x5f
  4202e7:	xchg   DWORD PTR [ebp-0x23],eax
  4202ea:	jb     0x420295
  4202ec:	pop    edx
  4202ed:	sub    BYTE PTR [edx],ch
  4202ef:	xor    esi,DWORD PTR [ebx]
  4202f1:	je     0x420284
  4202f3:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202f5:	xor    bl,BYTE PTR [esp+eax*8+0x2b3d9e11]
  4202fc:	cdq    
  4202fd:	repnz mov ecx,0x2ad9c243
  420303:	sbb    BYTE PTR [ebx],0xe2
  420306:	add    cl,BYTE PTR [ecx]
  420308:	and    eax,0x5881a421
  42030d:	jbe    0x42034a
  42030f:	inc    ecx
  420310:	idiv   DWORD PTR [ebx-0x37f04842]
  420316:	jne    0x420380
  420318:	rol    BYTE PTR [eax-0x15],cl
  42031b:	cdq    
  42031c:	mov    al,0x23
  42031e:	repnz xchg ebx,eax
  420320:	clc    
  420321:	pop    edi
  420322:	iret   
  420323:	lea    esi,[esi-0x2]
  420326:	jb     0x420364
  420328:	dec    ecx
  420329:	ret    
  42032a:	es jne 0x420350
  42032d:	hlt    
  42032e:	jge    0x42036e
  420330:	mov    ds,esp
  420332:	in     eax,dx
  420333:	imul   ecx,DWORD PTR [ebx+0x351053a2],0xffffff8d
  42033a:	repnz int3 
  42033c:	(bad)  
  42033d:	dec    eax
  42033e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42033f:	dec    ecx
  420340:	mov    ebx,0xde3b646c
  420345:	aam    0x3a
  420347:	and    al,0xaf
  420349:	dec    edx
  42034a:	test   al,0x16
  42034c:	js     0x4202e2
  42034e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42034f:	test   edx,esi
  420351:	fld1   
  420353:	mov    ebp,0x6c8ceada
  420358:	sub    eax,0x1cc9166e
  42035d:	jmp    0x9ed7:0x7429794f
  420364:	rcl    al,0x6
  420367:	mov    eax,ds:0xb65b2308
  42036c:	call   0x90da:0x53d0c990
  420373:	inc    esp
  420374:	in     al,dx
  420375:	outs   dx,BYTE PTR ds:[esi]
  420376:	pop    ecx
  420377:	js     0x420355
  420379:	dec    ebx
  42037a:	add    al,0x44
  42037c:	jecxz  0x420354
  42037e:	or     BYTE PTR [ebp+0x65c28b1c],dl
  420384:	cmp    esi,DWORD PTR [ebp+edi*2-0x4]
  420388:	loop   0x420363
  42038a:	jb     0x420343
  42038c:	and    dh,BYTE PTR [edi-0x4d40d542]
  420392:	push   ds
  420393:	sbb    esp,esp
  420395:	int3   
  420396:	ins    DWORD PTR es:[edi],dx
  420397:	pop    esp
  420398:	das    
  420399:	int    0x81
  42039b:	(bad)  
  42039c:	stos   BYTE PTR es:[edi],al
  42039d:	(bad)  
  42039e:	xchg   ebx,eax
  42039f:	stos   BYTE PTR es:[edi],al
  4203a0:	xchg   ecx,eax
  4203a1:	jg     0x4203c4
  4203a3:	imul   edx,DWORD PTR [edx+edi*1-0x746beee6],0x3e13fbc3
  4203ae:	push   ebx
  4203af:	sbb    dl,BYTE PTR ds:0xc74f587e
  4203b5:	inc    ecx
  4203b6:	fidivr WORD PTR [edi+ecx*1+0x4c]
  4203ba:	mov    bh,0x16
  4203bc:	js     0x4203d9
  4203be:	mov    dl,0x79
  4203c0:	daa    
  4203c1:	xchg   edi,eax
  4203c2:	loop   0x420420
  4203c4:	sub    al,0xb0
  4203c6:	in     al,dx
  4203c7:	sub    eax,0xd3ac5878
  4203cc:	dec    edi
  4203cd:	loopne 0x420386
  4203cf:	mov    eax,0x664400c9
  4203d4:	int3   
  4203d5:	jnp    0x4203c2
  4203d7:	jae    0x4203e7
  4203d9:	jle    0x420366
  4203db:	mov    fs,WORD PTR [ebx-0x3bc6a63e]
  4203e1:	sbb    eax,0x334a7100
  4203e6:	or     DWORD PTR [ebx],esi
  4203e8:	fs loopne 0x4203e4
  4203eb:	mov    ebx,ecx
  4203ed:	aam    0xc4
  4203ef:	daa    
  4203f0:	and    ecx,DWORD PTR [ecx+0x17edb19d]
  4203f6:	test   DWORD PTR [edi],edx
  4203f8:	mov    ah,0xe
  4203fa:	ds mov ecx,ecx
  4203fd:	jb     0x42045e
  4203ff:	jmp    0x420476
  420401:	push   es
  420402:	adc    eax,ebp
  420404:	adc    ebp,ebx
  420406:	xchg   ecx,eax
  420407:	adc    DWORD PTR [edx-0x19e09745],0x3871f8c7
  420411:	jno    0x420450
  420413:	pop    eax
  420414:	mov    al,0xe1
  420416:	repz pop DWORD PTR ds:0x7078efc0
  42041d:	or     DWORD PTR [edi+eiz*4],ecx
  420420:	hlt    
  420421:	inc    esp
  420422:	or     bh,BYTE PTR [eax]
  420424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420425:	ja     0x42047e
  420427:	adc    DWORD PTR [ebx],edi
  420429:	shr    edx,cl
  42042b:	or     BYTE PTR [eax+0x55],cl
  42042e:	pop    esp
  42042f:	sub    BYTE PTR [edi-0x78],al
  420432:	test   al,0xd2
  420434:	sti    
  420435:	stos   BYTE PTR es:[edi],al
  420436:	pop    ebx
  420437:	mov    esp,0xbb32be6b
  42043c:	repz (bad) 
  42043e:	cmp    edi,edi
  420440:	sub    BYTE PTR [edi+0x50],dl
  420443:	div    DWORD PTR [edx+0x5a22eba9]
  420449:	xchg   edx,eax
  42044a:	(bad)  
  42044c:	jb     0x420458
  42044e:	add    edx,0xfffffff2
  420451:	or     eax,0x6c555162
  420456:	adc    BYTE PTR [edi],0x59
  420459:	mov    WORD PTR [ecx],gs
  42045b:	ror    bl,1
  42045d:	call   0x7044821d
  420462:	in     al,dx
  420463:	or     ch,bl
  420465:	fdiv   QWORD PTR [eax+0x68]
  420468:	aam    0x44
  42046a:	or     al,0x0
  42046c:	or     al,0x46
  42046e:	xchg   esp,eax
  42046f:	mov    dl,0xe6
  420471:	jle    0x420440
  420473:	scas   al,BYTE PTR es:[edi]
  420474:	sbb    esp,DWORD PTR [ebp-0x5b5c2711]
  42047a:	fwait
  42047b:	jnp    0x420452
  42047d:	sub    al,0xbe
  42047f:	pop    ss
  420480:	dec    edi
  420481:	xchg   edx,eax
  420482:	lea    edi,[ebp+0x2b93c54e]
  420488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420489:	retf   
  42048a:	mov    esi,0x7815a7c4
  42048f:	test   eax,0x6896c966
  420494:	cmp    edx,DWORD PTR [esi+0x6b]
  420497:	and    eax,0x80a4f1a1
  42049c:	jbe    0x4204bd
  42049e:	jae    0x420462
  4204a0:	xor    BYTE PTR [ecx],bh
  4204a2:	loop   0x4204e4
  4204a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204a5:	dec    esp
  4204a6:	call   0x1f403ce
  4204ab:	(bad)  
  4204ac:	cmp    al,0x5b
  4204ae:	push   ecx
  4204af:	lods   al,BYTE PTR ds:[esi]
  4204b0:	or     al,0xca
  4204b2:	cs push 0xf4127bac
  4204b8:	cmp    BYTE PTR [edx+0x2d],al
  4204bb:	retf   0xf111
  4204be:	xchg   ecx,eax
  4204bf:	mov    al,ds:0xb7ad6eb2
  4204c4:	(bad)  
  4204c5:	outs   dx,BYTE PTR ds:[esi]
  4204c6:	or     BYTE PTR [ebx-0x728f8f73],0x3e
  4204cd:	(bad)  
  4204cf:	fwait
  4204d0:	ss clc 
  4204d2:	adc    BYTE PTR [eax],al
  4204d4:	int    0xb4
  4204d6:	mov    al,0x46
  4204d8:	cs mov ah,0x4a
  4204db:	dec    ebx
  4204dc:	call   0xdb92:0xacd2124f
  4204e3:	ins    DWORD PTR es:[edi],dx
  4204e4:	sub    eax,DWORD PTR [esi+edi*4]
  4204e7:	imul   edx,DWORD PTR [edi],0xffffff97
  4204ea:	pop    ss
  4204eb:	loop   0x4204e1
  4204ed:	dec    eax
  4204ee:	or     BYTE PTR [edx+0x9],ch
  4204f1:	xchg   esp,eax
  4204f2:	jp     0x4204fc
  4204f4:	xor    DWORD PTR [edx+edi*1+0x5baafc10],0x8e537c0a
  4204ff:	aad    0xd5
  420501:	pop    edx
  420502:	mov    ebx,0x10086db4
  420507:	lea    edx,cs:[ebx+0x3c]
  42050b:	out    0xa3,eax
  42050d:	dec    edi
  42050e:	mov    edi,0x228f64b1
  420513:	dec    ecx
  420514:	cdq    
  420515:	outs   dx,DWORD PTR ds:[esi]
  420516:	mov    esi,DWORD PTR [esi-0x5ab9abd5]
  42051c:	mov    ch,0x7d
  42051e:	lock int3 
  420520:	popa   
  420521:	inc    ebp
  420522:	das    
  420523:	mov    eax,ds:0x77353f43
  420528:	jo     0x42052a
  42052a:	mov    al,0x14
  42052c:	outs   dx,BYTE PTR ds:[esi]
  42052d:	sbb    bl,BYTE PTR [ebx+0x5854d068]
  420533:	(bad)  
  420534:	icebp  
  420535:	sbb    eax,0x118c220a
  42053a:	adc    esi,edi
  42053c:	cmp    eax,0x59278e3b
  420541:	xchg   esp,eax
  420542:	mov    ch,0x94
  420544:	ins    BYTE PTR es:[edi],dx
  420545:	xchg   edx,eax
  420546:	fisttp DWORD PTR [edi-0x7ac5eba2]
  42054c:	lahf   
  42054d:	fnstenv [eax]
  42054f:	scas   eax,DWORD PTR es:[edi]
  420550:	sbb    esp,ecx
  420552:	mov    al,0xd9
  420554:	adc    esi,DWORD PTR [ecx]
  420556:	fidiv  DWORD PTR [esi-0x1f]
  420559:	ja     0x4205ca
  42055b:	ficom  DWORD PTR [esi+0x3]
  42055e:	add    dl,cl
  420560:	jnp    0x420575
  420562:	mov    ch,BYTE PTR [esi]
  420564:	retf   0x5d85
  420567:	cdq    
  420568:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420569:	loopne 0x420558
  42056b:	gs jbe 0x420534
  42056e:	vmwrite edx,DWORD PTR [ecx]
  420571:	cld    
  420572:	mov    esi,0x74883f14
  420577:	or     bl,BYTE PTR [edi+0x5b]
  42057a:	jbe    0x420529
  42057c:	in     eax,dx
  42057d:	or     al,0x62
  42057f:	arpl   WORD PTR [edx-0x2c],si
  420582:	xor    eax,0xab58466d
  420587:	pop    ebp
  420588:	bound  cx,DWORD PTR [edi-0x3b55b68f]
  42058f:	and    dl,BYTE PTR [edx+ebp*4-0x5905304c]
  420596:	cli    
  420597:	sbb    dh,BYTE PTR [esp+edx*1]
  42059a:	jnp    0x42051d
  42059c:	lods   eax,DWORD PTR ds:[esi]
  42059d:	rol    BYTE PTR [esi+0x8],cl
  4205a0:	mov    ebp,0x3ce39ce3
  4205a5:	rcr    DWORD PTR [edx+esi*4],cl
  4205a8:	rcr    DWORD PTR [ecx],1
  4205aa:	jnp    0x420583
  4205ac:	xchg   DWORD PTR [edx-0x74d1505a],ebp
  4205b2:	in     al,dx
  4205b3:	ins    BYTE PTR es:[edi],dx
  4205b4:	int    0xda
  4205b6:	test   al,0x36
  4205b8:	dec    eax
  4205b9:	dec    esi
  4205ba:	loopne 0x4205ab
  4205bc:	xor    DWORD PTR [edi],esp
  4205be:	pop    esi
  4205bf:	mov    eax,0xee1927f6
  4205c4:	clc    
  4205c5:	mov    ds:0xfd268e9c,eax
  4205ca:	ss mov ah,0xfa
  4205cd:	xchg   esp,eax
  4205ce:	aad    0xf8
  4205d0:	dec    ebx
  4205d1:	mov    eax,0xde8d8ad8
  4205d6:	fucom  st(7)
  4205d8:	cmp    al,0xc3
  4205da:	dec    ebp
  4205db:	jle    0x420599
  4205dd:	mov    WORD PTR [eax+0x70],gs
  4205e0:	mov    al,ds:0x1c1d9222
  4205e5:	sub    edx,DWORD PTR [ecx+0x76]
  4205e8:	iret   
  4205e9:	mov    ecx,DWORD PTR ds:0x50b6cc2a
  4205ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205f0:	das    
  4205f1:	mov    al,0x78
  4205f3:	iret   
  4205f4:	fwait
  4205f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205f6:	xchg   esi,eax
  4205f7:	fsub   QWORD PTR [eax-0x6d]
  4205fa:	add    eax,0x70b8336d
  4205ff:	mov    DWORD PTR [eax+0x8],0x36653848
  420606:	rcr    dh,1
  420608:	mul    BYTE PTR ds:0x83b7f8c7
  42060e:	or     eax,0x5becc1d
  420613:	xchg   edi,eax
  420614:	enter  0x9568,0x4b
  420618:	sar    DWORD PTR [ebx],0x49
  42061b:	ins    BYTE PTR es:[edi],dx
  42061c:	(bad)  
  42061d:	ficomp WORD PTR [edx]
  42061f:	je     0x4205ff
  420621:	add    DWORD PTR [ecx-0x26ed3ab4],0xffffffbb
  420628:	dec    ebp
  420629:	inc    esi
  42062a:	js     0x42063a
  42062c:	jmp    0x83cd:0x6a0d8395
  420633:	and    edi,DWORD PTR [edx-0x3d]
  420636:	and    BYTE PTR [ebx-0x2a1499f1],0x6
  42063d:	scas   eax,DWORD PTR es:[edi]
  42063e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42063f:	push   esi
  420640:	popf   
  420641:	test   DWORD PTR [ecx],0x2d5121eb
  420647:	pop    ds
  420648:	cld    
  420649:	stc    
  42064a:	cmp    esi,ecx
  42064c:	icebp  
  42064d:	stos   DWORD PTR es:[edi],eax
  42064e:	sub    edi,edx
  420650:	lods   al,BYTE PTR ds:[esi]
  420651:	test   DWORD PTR [esi-0x5f955d51],ebp
  420657:	jp     0x42066f
  420659:	mov    edi,DWORD PTR [esp+edx*2+0x5c]
  42065d:	mov    al,dl
  42065f:	push   edi
  420660:	(bad)
  420663:	push   ecx
  420664:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420665:	mov    bh,0xaf
  420667:	mov    ecx,0xc3b1e0bb
  42066c:	fbstp  TBYTE PTR [eax+0x4c]
  42066f:	mov    cl,0x24
  420671:	mov    ecx,0x644c6bb4
  420676:	jne    0x420671
  420678:	push   edi
  420679:	push   cs
  42067a:	arpl   bp,cx
  42067c:	into   
  42067d:	pop    ss
  42067e:	test   BYTE PTR [esp+edx*1],dl
  420681:	test   al,0x75
  420683:	mov    WORD PTR [edx-0x34949122],?
  420689:	inc    ebp
  42068a:	cmp    al,0xfc
  42068c:	mov    ds:0xdf30a00d,eax
  420691:	iret   
  420692:	pushf  
  420693:	(bad)  [edi-0x4bb0dfe3]
  420699:	jl     0x4206fb
  42069b:	inc    edx
  42069c:	and    esi,DWORD PTR [ecx]
  42069e:	daa    
  42069f:	add    edx,DWORD PTR [eax]
  4206a1:	mov    DWORD PTR [eax-0x718d8fcc],0x4a229d12
  4206ab:	iret   
  4206ac:	addr16 dec esi
  4206ae:	or     eax,0x286f3555
  4206b3:	cmp    DWORD PTR [ebx],edi
  4206b5:	push   edx
  4206b6:	retf   
  4206b7:	sub    edx,ebp
  4206b9:	sahf   
  4206ba:	lods   eax,DWORD PTR ds:[esi]
  4206bb:	adc    eax,0x224b9910
  4206c0:	ror    DWORD PTR [ecx+0x5a],0xf6
  4206c4:	pop    ebx
  4206c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206c6:	mov    edi,0x10b2c7a4
  4206cb:	ins    DWORD PTR es:[edi],dx
  4206cc:	xchg   BYTE PTR [ebx+0x44],ah
  4206cf:	outs   dx,BYTE PTR ds:[esi]
  4206d0:	sub    ebx,edi
  4206d2:	cvtpi2ps xmm2,mm1
  4206d5:	enter  0xac4a,0x81
  4206d9:	std    
  4206da:	scas   al,BYTE PTR es:[edi]
  4206db:	mul    BYTE PTR [esi]
  4206dd:	and    al,BYTE PTR ds:0x6c38c63b
  4206e3:	push   ss
  4206e4:	cmp    eax,0xc5622ef2
  4206e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206ea:	rcl    WORD PTR [edi],0xe2
  4206ee:	sub    al,0xa2
  4206f0:	add    DWORD PTR [esi+0x1577dee7],esp
  4206f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206f7:	sbb    bl,dl
  4206f9:	shr    BYTE PTR [edi],1
  4206fb:	push   cs
  4206fc:	pop    ebp
  4206fd:	adc    edi,DWORD PTR [ecx]
  4206ff:	xchg   edx,eax
  420700:	push   esp
  420701:	mov    esp,0x80ebe856
  420706:	mov    ebp,0xc1197f3c
  42070b:	loope  0x42073f
  42070d:	(bad)  
  42070e:	je     0x42069e
  420710:	scas   eax,DWORD PTR es:[edi]
  420711:	push   ds
  420712:	xor    al,0xa8
  420714:	sar    DWORD PTR [esp+esi*8],0xd9
  420718:	dec    ebp
  420719:	cmp    al,0x7e
  42071b:	pop    ds
  42071c:	mov    dl,0x60
  42071e:	push   edi
  42071f:	mov    edx,0x38090011
  420724:	in     eax,0x32
  420726:	pop    ecx
  420727:	fidiv  WORD PTR [eax-0x16db4b32]
  42072d:	pop    ecx
  42072e:	sub    al,BYTE PTR [edx]
  420730:	cld    
  420731:	mov    ebx,0x66a6358c
  420736:	mov    es,WORD PTR [edx]
  420738:	jne    0x4206e1
  42073a:	mov    esp,0x5858bf77
  42073f:	xchg   ebx,eax
  420740:	mov    dl,BYTE PTR ds:0x46818f06
  420746:	inc    esi
  420747:	xchg   DWORD PTR [ebx],ebp
  420749:	div    BYTE PTR [edx+0x6a81a668]
  42074f:	loope  0x4207c4
  420751:	imul   al
  420753:	imul   BYTE PTR [eax]
  420755:	shr    DWORD PTR [edi],cl
  420757:	hlt    
  420758:	xlat   BYTE PTR ds:[ebx]
  420759:	push   0x69
  42075b:	push   edx
  42075c:	add    DWORD PTR [esi+0xc],eax
  42075f:	jmp    0x2e24:0xccf3a6f1
  420766:	scas   al,BYTE PTR es:[edi]
  420767:	ds out 0x84,al
  42076a:	sub    ebp,DWORD PTR [ebx]
  42076c:	fwait
  42076d:	adc    DWORD PTR [ecx-0x2],edi
  420770:	test   eax,0xc7261da4
  420775:	jne    0x4206f7
  420777:	xor    bh,BYTE PTR [esi]
  420779:	adc    BYTE PTR [ecx],ah
  42077b:	jmp    0x6a9:0x162a238c
  420782:	add    cl,dl
  420784:	outs   dx,BYTE PTR ds:[esi]
  420785:	mov    esp,0x8e8cf48
  42078a:	pop    esi
  42078b:	ss push ss
  42078d:	aam    0x7
  42078f:	cmp    al,bh
  420791:	add    eax,ecx
  420793:	mov    DWORD PTR [ebp-0x14],eax
  420796:	mov    eax,DWORD PTR [ebp-0x14]
  420799:	mov    eax,DWORD PTR [eax+0xc]
  42079c:	movsx  eax,BYTE PTR [eax+ecx*1]
  4207a0:	cdq    
  4207a1:	add    eax,ebx
  4207a3:	adc    edx,0xffffffff
  4207a6:	xor    eax,edi
  4207a8:	xor    edx,0x0
  4207ab:	cmp    eax,0x70941e1e
  4207b0:	jne    0x41e3c0
  4207b6:	cmp    edx,0xffffffff
  4207b9:	jne    0x41e3c0
  4207bf:	mov    eax,ds:0x42830b
  4207c4:	mov    eax,DWORD PTR [eax+0x198]
  4207ca:	mov    DWORD PTR [eax],ecx
  4207cc:	mov    eax,ecx
  4207ce:	jmp    0x4207f7
  4207d3:	mov    eax,DWORD PTR [ebp+0x18]
  4207d6:	cmp    eax,0xf89c85a2
  4207db:	jne    0x4207f7
  4207e1:	push   0xf89c85a3
  4207e6:	push   DWORD PTR [ebp+0x14]
  4207e9:	push   DWORD PTR [ebp+0x10]
  4207ec:	push   DWORD PTR [ebp+0xc]
  4207ef:	push   DWORD PTR [ebp+0x8]
  4207f2:	call   0x41b9fd
  4207f7:	pop    edi
  4207f8:	pop    ebx
  4207f9:	pop    esi
  4207fa:	leave  
  4207fb:	ret    0x14
  4207fe:	push   ebp
  4207ff:	mov    ebp,esp
  420801:	and    esp,0xfffffff8
  420804:	or     DWORD PTR ds:0x42918f,0x225c
  42080e:	sub    esp,0x3fc
  420814:	sbb    DWORD PTR ds:0x4291a7,0x4291f3
  42081e:	push   ebx
  42081f:	push   esi
  420820:	push   edi
  420821:	and    DWORD PTR ds:0x42915f,0x397e
  42082b:	push   0x42842f
  420830:	or     DWORD PTR ds:0x4291af,0x2ff8
  42083a:	push   0x7876867
  42083f:	or     DWORD PTR ds:0x4291b7,0x20a1
  420849:	call   DWORD PTR ds:0x42a65b
  42084f:	sub    DWORD PTR ds:0x42915f,0x5681
  420859:	mov    DWORD PTR [esp+0x30],eax
  42085d:	lea    eax,[esp+0x78]
  420861:	push   eax
  420862:	sub    DWORD PTR ds:0x42919b,0x4291d3
  42086c:	push   0x428447
  420871:	mov    DWORD PTR ds:0x4291e3,0x3a46
  42087b:	call   DWORD PTR ds:0x42a67b
  420881:	cmp    eax,0xffffffff
  420884:	je     0x42089b
  42088a:	xor    DWORD PTR ds:0x42915f,0x150a
  420894:	xor    eax,eax
  420896:	jmp    0x421b36
  42089b:	mov    esi,DWORD PTR ds:0x42a697
  4208a1:	xor    DWORD PTR ds:0x4291d3,0x3930
  4208ab:	push   0xf
  4208ad:	lea    eax,[esp+0x44]
  4208b1:	push   eax
  4208b2:	push   0x42845b
  4208b7:	push   0x42846f
  4208bc:	sub    DWORD PTR ds:0x42915f,0x4291d7
  4208c6:	push   0x42848f
  4208cb:	adc    DWORD PTR ds:0x429183,0x3c8a
  4208d5:	call   esi
  4208d7:	imul   eax,eax,0x300000
  4208dd:	cmp    eax,0x1b00000
  4208e2:	mov    DWORD PTR ds:0x4291bf,0x78b4
  4208ec:	jne    0x42088a
  4208f2:	or     DWORD PTR ds:0x4291b3,0x42915b
  4208fc:	lea    eax,[esp+0x1b8]
  420903:	and    DWORD PTR ds:0x42919f,0x5d3c
  42090d:	push   eax
  42090e:	add    DWORD PTR ds:0x4291e3,0x4291af
  420918:	push   0x4284cb
  42091d:	and    DWORD PTR ds:0x429153,0x42915b
  420927:	call   DWORD PTR ds:0x42a667
  42092d:	cmp    eax,0xffffffff
  420930:	jne    0x42088a
  420936:	add    DWORD PTR ds:0x42914b,0x6e9d
  420940:	mov    DWORD PTR [esp+0x30],0x0
  420948:	or     ecx,ecx
  42094a:	mov    ecx,0xf89c85a1
  42094f:	mov    DWORD PTR ds:0x4291af,0x17
  420959:	cmp    DWORD PTR ds:0x4291af,0x0
  420960:	je     0x4209b6
  420966:	cmp    DWORD PTR ds:0x4291af,0x4
  42096d:	jge    0x4209b6
  420973:	jmp    0x420988
  420978:	push   0x4280d6
  42097d:	push   0x1
  42097f:	push   DWORD PTR [ebp-0x24]
  420982:	call   DWORD PTR ds:0x42a67f
  420988:	cmp    DWORD PTR ds:0x4291af,0x5
  42098f:	jne    0x4209a2
  420995:	mov    ebx,DWORD PTR ds:0x4291af
  42099b:	dec    ebx
  42099c:	mov    DWORD PTR ds:0x4291af,ebx
  4209a2:	xor    ebx,ebx
  4209a4:	xor    ebx,DWORD PTR ds:0x4291af
  4209aa:	dec    ebx
  4209ab:	mov    DWORD PTR ds:0x4291af,ebx
  4209b1:	jmp    0x420959
  4209b6:	mov    DWORD PTR [esp+0x18],ecx
  4209ba:	add    DWORD PTR ds:0x429167,0x3918
  4209c4:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  4209cc:	mov    edx,DWORD PTR ds:0x4291af
  4209d2:	or     DWORD PTR ds:0x429163,edx
  4209d8:	lea    eax,[esp+0x3c]
  4209dc:	mov    DWORD PTR [esp+0x30],eax
  4209e0:	xor    edi,edx
  4209e2:	lea    eax,[esp+0x38]
  4209e6:	sbb    edx,DWORD PTR ds:0x4291c3
  4209ec:	mov    DWORD PTR [esp+0x20],eax
  4209f0:	or     edi,0x5972
  4209f6:	mov    eax,ds:0x42830b
  4209fb:	mov    DWORD PTR ds:0x42917f,0x17
  420a05:	cmp    DWORD PTR ds:0x42917f,0x0
  420a0c:	je     0x420a43
  420a12:	cmp    DWORD PTR ds:0x42917f,0x21
  420a19:	jl     0x420a43
  420a1f:	jmp    0x420a2f
  420a24:	push   0x3972
  420a29:	call   DWORD PTR ds:0x42a683
  420a2f:	xor    edi,edi
  420a31:	add    edi,DWORD PTR ds:0x42917f
  420a37:	dec    edi
  420a38:	mov    DWORD PTR ds:0x42917f,edi
  420a3e:	jmp    0x420a05
  420a43:	mov    eax,DWORD PTR [eax+0x1c8]
  420a49:	mov    eax,DWORD PTR [eax]
  420a4b:	mov    edx,DWORD PTR [esp+0x20]
  420a4f:	mov    edi,0x75108ac
  420a54:	mov    ebx,DWORD PTR ds:0x4291db
  420a5a:	sbb    DWORD PTR ds:0x429153,ebx
  420a60:	xor    eax,edi
  420a62:	adc    DWORD PTR ds:0x4291f3,0x37f0
  420a6c:	mov    ebx,0x3272f3
  420a71:	add    DWORD PTR ds:0x4291a3,0x4291a7
  420a7b:	add    eax,ebx
  420a7d:	not    DWORD PTR ds:0x4291a3
  420a83:	mov    DWORD PTR [edx],eax
  420a85:	mov    DWORD PTR ds:0x4291cb,0x5252
  420a8f:	mov    eax,ds:0x42901f
  420a94:	cmp    eax,0x445cecf9
  420a99:	mov    DWORD PTR ds:0x4291bb,0x4b3f
  420aa3:	jne    0x420b94
  420aa9:	mov    eax,DWORD PTR [esp+0x18]
  420aad:	and    DWORD PTR ds:0x4291ab,0x0
  420ab7:	jmp    0x420acb
  420abc:	xor    edx,edx
  420abe:	add    edx,DWORD PTR ds:0x4291ab
  420ac4:	inc    edx
  420ac5:	mov    DWORD PTR ds:0x4291ab,edx
  420acb:	cmp    DWORD PTR ds:0x4291ab,0x1e
  420ad2:	jae    0x420b1c
  420ad8:	cmp    DWORD PTR ds:0x4291ab,0xe
  420adf:	jl     0x420b1c
  420ae5:	jmp    0x420afd
  420aea:	push   0x4280a5
  420aef:	push   DWORD PTR [ebp-0x1c]
  420af2:	push   0x3b7d
  420af7:	call   DWORD PTR ds:0x42a687
  420afd:	cmp    DWORD PTR ds:0x4291ab,0xd
  420b04:	jne    0x420b17
  420b0a:	mov    edx,DWORD PTR ds:0x4291ab
  420b10:	inc    edx
  420b11:	mov    DWORD PTR ds:0x4291ab,edx
  420b17:	jmp    0x420abc
  420b1c:	mov    edx,DWORD PTR ds:0x42830b
  420b22:	adc    DWORD PTR ds:0x4291b3,0x4291a7
  420b2c:	mov    edx,DWORD PTR [edx+0x198]
  420b32:	adc    DWORD PTR ds:0x4291a3,0x42918f
  420b3c:	xor    eax,edi
  420b3e:	sub    DWORD PTR ds:0x42916f,0x429197
  420b48:	add    eax,ebx
  420b4a:	add    DWORD PTR ds:0x42915f,0x42915b
  420b54:	mov    DWORD PTR [edx],eax
  420b56:	mov    eax,DWORD PTR [esp+0x18]
  420b5a:	xor    eax,edi
  420b5c:	not    DWORD PTR ds:0x4291b3
  420b62:	add    eax,ebx
  420b64:	sbb    DWORD PTR ds:0x4291eb,0x4291d3
  420b6e:	mov    ds:0x42901f,eax
  420b73:	mov    eax,DWORD PTR [esp+0x18]
  420b77:	sbb    DWORD PTR ds:0x42917b,0x42915f
  420b81:	xor    eax,edi
  420b83:	sub    DWORD PTR ds:0x429167,0x5dcc
  420b8d:	add    eax,ebx
  420b8f:	mov    ds:0x428403,eax
  420b94:	and    DWORD PTR ds:0x4291c3,0x0
  420b9e:	xor    eax,eax
  420ba0:	xor    eax,DWORD PTR ds:0x4291c3
  420ba6:	inc    eax
  420ba7:	mov    ds:0x4291c3,eax
  420bac:	cmp    DWORD PTR ds:0x4291c3,0x10
  420bb3:	jb     0x420be9
  420bb9:	jmp    0x420bc4
  420bbe:	call   DWORD PTR ds:0x42a68b
  420bc4:	cmp    DWORD PTR ds:0x4291c3,0xf
  420bcb:	jne    0x420bdc
  420bd1:	mov    eax,ds:0x4291c3
  420bd6:	inc    eax
  420bd7:	mov    ds:0x4291c3,eax
  420bdc:	cmp    DWORD PTR ds:0x4291c3,0x1a
  420be3:	jb     0x420b9e
  420be9:	mov    eax,ds:0x42830b
  420bee:	xor    DWORD PTR ds:0x4291bb,0x4291bf
  420bf8:	mov    eax,DWORD PTR [eax+0x18c]
  420bfe:	add    DWORD PTR ds:0x4291e7,0x4bf9
  420c08:	mov    eax,DWORD PTR [eax]
  420c0a:	mov    DWORD PTR [esp+0x60],eax
  420c0e:	mov    eax,0xf89c85bd
  420c13:	mov    DWORD PTR [esp+0x10],eax
  420c17:	add    DWORD PTR ds:0x429193,0x4291c7
  420c21:	mov    DWORD PTR [esp+0x10],eax
  420c25:	or     DWORD PTR ds:0x42917f,0x429187
  420c2f:	mov    DWORD PTR [esp+0x10],eax
  420c33:	mov    DWORD PTR [esp+0x10],ecx
  420c37:	dec    DWORD PTR ds:0x429167
  420c3d:	mov    DWORD PTR [esp+0x20],eax
  420c41:	and    DWORD PTR ds:0x4291d7,0x0
  420c4b:	xor    eax,eax
  420c4d:	add    eax,DWORD PTR ds:0x4291d7
  420c53:	inc    eax
  420c54:	mov    ds:0x4291d7,eax
  420c59:	cmp    DWORD PTR ds:0x4291d7,0xc
  420c60:	jge    0x420ca3
  420c66:	jmp    0x420c7b
  420c6b:	push   0x4291a7
  420c70:	push   0x4280a5
  420c75:	call   DWORD PTR ds:0x42a68f
  420c7b:	cmp    DWORD PTR ds:0x4291d7,0xb
  420c82:	jne    0x420c96
  420c88:	xor    eax,eax
  420c8a:	xor    eax,DWORD PTR ds:0x4291d7
  420c90:	inc    eax
  420c91:	mov    ds:0x4291d7,eax
  420c96:	cmp    DWORD PTR ds:0x4291d7,0x18
  420c9d:	jb     0x420c4b
  420ca3:	mov    DWORD PTR [esp+0x20],0xf89c85b9
  420cab:	sbb    eax,0x733e
  420cb0:	mov    eax,DWORD PTR [esp+0x18]
  420cb4:	xor    eax,edi
  420cb6:	xor    DWORD PTR ds:0x429167,0x2364
  420cc0:	add    eax,ebx
  420cc2:	jmp    0x420ea1
  420cc7:	lea    eax,[esp+0x78]
  420ccb:	sub    DWORD PTR ds:0x42918f,0x2bd1
  420cd5:	push   eax
  420cd6:	add    DWORD PTR ds:0x4291af,0x4291bb
  420ce0:	push   0x4284b7
  420ce5:	add    DWORD PTR ds:0x42916f,0x62a2
  420cef:	call   DWORD PTR ds:0x42a67b
  420cf5:	mov    DWORD PTR ds:0x4291ef,0x479f
  420cff:	cmp    eax,0xffffffff
  420d02:	jne    0x42088a
  420d08:	push   0xf
  420d0a:	lea    eax,[esp+0x44]
  420d0e:	add    DWORD PTR ds:0x42918f,0x71aa
  420d18:	push   eax
  420d19:	adc    DWORD PTR ds:0x4291bb,0x429187
  420d23:	push   0x42850b
  420d28:	push   0x42851f
  420d2d:	or     DWORD PTR ds:0x4291ef,0x259a
  420d37:	push   0x42853f
  420d3c:	call   esi
  420d3e:	imul   eax,eax,0x300000
  420d44:	mov    DWORD PTR ds:0x42914f,0x7610
  420d4e:	cmp    eax,0x1b00000
  420d53:	mov    DWORD PTR ds:0x429157,0x1024
  420d5d:	jne    0x42088a
  420d63:	sbb    DWORD PTR ds:0x4291c3,0x4291d7
  420d6d:	lea    eax,[esp+0x1b8]
  420d74:	push   eax
  420d75:	push   0x42857b
  420d7a:	sbb    DWORD PTR ds:0x42918f,0x1a84
  420d84:	call   DWORD PTR ds:0x42a667
  420d8a:	mov    DWORD PTR ds:0x4291b3,0x1d41
  420d94:	cmp    eax,0xffffffff
  420d97:	jne    0x42088a
  420d9d:	mov    eax,DWORD PTR [esp+0xc]
  420da1:	xor    ecx,DWORD PTR ds:0x42914f
  420da7:	mov    ecx,DWORD PTR [esp+0x20]
  420dab:	sbb    DWORD PTR ds:0x429197,0x5641
  420db5:	xor    eax,edi
  420db7:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  420dc1:	lea    eax,[eax+ecx*1+0x3272f3]
  420dc8:	inc    DWORD PTR ds:0x4291e7
  420dce:	push   eax
  420dcf:	add    DWORD PTR ds:0x4291b3,ebx
  420dd5:	mov    eax,DWORD PTR [esp+0x14]
  420dd9:	xor    eax,edi
  420ddb:	lea    eax,[ebp+eax*1+0x3272fb]
  420de2:	xor    DWORD PTR ds:0x429197,0x3901
  420dec:	push   eax
  420ded:	mov    DWORD PTR ds:0x429153,0x5a0a
  420df7:	mov    eax,ds:0x42830b
  420dfc:	xor    DWORD PTR ds:0x4291c3,0x2a62
  420e06:	push   DWORD PTR [eax+0x1bc]
  420e0c:	adc    DWORD PTR ds:0x429153,0x42915f
  420e16:	call   0x421b3f
  420e1b:	and    DWORD PTR ds:0x4291af,0x0
  420e25:	jmp    0x420e37
  420e2a:	mov    edx,DWORD PTR ds:0x4291af
  420e30:	inc    edx
  420e31:	mov    DWORD PTR ds:0x4291af,edx
  420e37:	cmp    DWORD PTR ds:0x4291af,0x15
  420e3e:	jae    0x420e7e
  420e44:	cmp    DWORD PTR ds:0x4291af,0xd
  420e4b:	jl     0x420e7e
  420e51:	jmp    0x420e5f
  420e56:	push   DWORD PTR [ebp-0x1c]
  420e59:	call   DWORD PTR ds:0x42a693
  420e5f:	cmp    DWORD PTR ds:0x4291af,0xc
  420e66:	jne    0x420e79
  420e6c:	mov    edx,DWORD PTR ds:0x4291af
  420e72:	inc    edx
  420e73:	mov    DWORD PTR ds:0x4291af,edx
  420e79:	jmp    0x420e2a
  420e7e:	mov    eax,DWORD PTR [esp+0xc]
  420e82:	mov    ecx,DWORD PTR [esp+0x20]
  420e86:	mov    edx,DWORD PTR ds:0x429167
  420e8c:	adc    DWORD PTR ds:0x4291b3,edx
  420e92:	xor    eax,edi
  420e94:	and    edx,DWORD PTR ds:0x4291b3
  420e9a:	lea    eax,[ecx+eax*1+0x3272f3]
  420ea1:	mov    ecx,DWORD PTR [esp+0xc]
  420ea5:	neg    edx
  420ea7:	mov    edx,DWORD PTR [esp+0xc]
  420eab:	or     DWORD PTR ds:0x42917b,0x429157
  420eb5:	xor    edx,edi
  420eb7:	or     DWORD PTR ds:0x4291c7,0x1707
  420ec1:	xor    ecx,edi
  420ec3:	xor    DWORD PTR ds:0x42916f,0x6f67
  420ecd:	add    ecx,edx
  420ecf:	mov    edx,DWORD PTR [esp+0xc]
  420ed3:	add    DWORD PTR ds:0x429193,0xde7
  420edd:	xor    edx,edi
  420edf:	mov    DWORD PTR ds:0x429197,0x79ec
  420ee9:	lea    ecx,[ecx+edx*1+0x9758d9]
  420ef0:	mov    DWORD PTR ds:0x42917b,0x463d
  420efa:	mov    DWORD PTR [esp+0x20],eax
  420efe:	cmp    eax,ecx
  420f00:	jbe    0x420cc7
  420f06:	xor    ecx,ecx
  420f08:	or     ecx,DWORD PTR ds:0x4291a3
  420f0e:	or     DWORD PTR ds:0x4291b3,ecx
  420f14:	mov    eax,DWORD PTR [ebp+0xc]
  420f17:	and    DWORD PTR ds:0x4291e3,0x0
  420f21:	mov    ecx,DWORD PTR ds:0x4291e3
  420f27:	inc    ecx
  420f28:	mov    DWORD PTR ds:0x4291e3,ecx
  420f2e:	cmp    DWORD PTR ds:0x4291e3,0x18
  420f35:	jge    0x420f62
  420f3b:	jmp    0x420f55
  420f40:	push   0x4291ab
  420f45:	push   0x4291db
  420f4a:	push   0x4566
  420f4f:	call   DWORD PTR ds:0x42a69b
  420f55:	cmp    DWORD PTR ds:0x4291e3,0x17
  420f5c:	jb     0x420f21
  420f62:	mov    ds:0x42818f,eax
  420f67:	mov    eax,DWORD PTR [ebp+0x10]
  420f6a:	mov    ds:0x4283eb,eax
  420f6f:	mov    DWORD PTR ds:0x4291af,0x18
  420f79:	cmp    DWORD PTR ds:0x4291af,0x0
  420f80:	je     0x420fd1
  420f86:	cmp    DWORD PTR ds:0x4291af,0x4
  420f8d:	ja     0x420fd1
  420f93:	jmp    0x420fa3
  420f98:	push   0x82c1
  420f9d:	call   DWORD PTR ds:0x42a663
  420fa3:	cmp    DWORD PTR ds:0x4291af,0x5
  420faa:	jne    0x420fbf
  420fb0:	xor    ecx,ecx
  420fb2:	or     ecx,DWORD PTR ds:0x4291af
  420fb8:	dec    ecx
  420fb9:	mov    DWORD PTR ds:0x4291af,ecx
  420fbf:	mov    ecx,DWORD PTR ds:0x4291af
  420fc5:	dec    ecx
  420fc6:	mov    DWORD PTR ds:0x4291af,ecx
  420fcc:	jmp    0x420f79
  420fd1:	mov    eax,ds:0x42818f
  420fd6:	movzx  ecx,BYTE PTR ds:0x429183
  420fdd:	adc    DWORD PTR ds:0x4291d7,ecx
  420fe3:	mov    ecx,DWORD PTR [esp+0x30]
  420fe7:	sub    DWORD PTR ds:0x4291ab,0x2768
  420ff1:	sub    eax,ebx
  420ff3:	and    DWORD PTR ds:0x42919f,0x51d9
  420ffd:	xor    eax,edi
  420fff:	mov    DWORD PTR [ecx],eax
  421001:	lea    eax,[esp+0x2c]
  421005:	mov    DWORD PTR [esp+0x6c],eax
  421009:	xor    DWORD PTR ds:0x4291cf,0x6aa
  421013:	lea    eax,[ebp+0x4]
  421016:	sub    DWORD PTR ds:0x42915b,0x4291af
  421020:	mov    DWORD PTR [esp+0x2c],eax
  421024:	lea    eax,[esp+0x78]
  421028:	sub    DWORD PTR ds:0x429153,0x6538
  421032:	push   eax
  421033:	add    DWORD PTR ds:0x4291a3,0x4291f3
  42103d:	push   0x428567
  421042:	call   DWORD PTR ds:0x42a67b
  421048:	mov    DWORD PTR ds:0x4291e3,0x1cd6
  421052:	cmp    eax,0xffffffff
  421055:	mov    DWORD PTR ds:0x4291b7,0x32c8
  42105f:	jne    0x42088a
  421065:	push   0xf
  421067:	lea    eax,[esp+0x44]
  42106b:	xor    DWORD PTR ds:0x429193,0x42919b
  421075:	push   eax
  421076:	push   0x4285bb
  42107b:	adc    DWORD PTR ds:0x429193,0x7895
  421085:	push   0x4285cf
  42108a:	push   0x4285ef
  42108f:	call   esi
  421091:	imul   eax,eax,0x300000
  421097:	cmp    eax,0x1b00000
  42109c:	jne    0x42088a
  4210a2:	lea    eax,[esp+0x1b8]
  4210a9:	push   eax
  4210aa:	push   0x42862b
  4210af:	sub    DWORD PTR ds:0x4291bf,0x42918b
  4210b9:	call   DWORD PTR ds:0x42a667
  4210bf:	mov    DWORD PTR ds:0x429187,0x3d95
  4210c9:	cmp    eax,0xffffffff
  4210cc:	mov    DWORD PTR ds:0x42917f,0x79ad
  4210d6:	jne    0x42088a
  4210dc:	lea    eax,[esp+0x78]
  4210e0:	add    DWORD PTR ds:0x42914f,0x6022
  4210ea:	push   eax
  4210eb:	neg    DWORD PTR ds:0x42917f
  4210f1:	push   0x428617
  4210f6:	add    DWORD PTR ds:0x42917b,0x4291e7
  421100:	call   DWORD PTR ds:0x42a67b
  421106:	mov    DWORD PTR ds:0x42916f,0x4f36
  421110:	cmp    eax,0xffffffff
  421113:	mov    DWORD PTR ds:0x429197,0x71f8
  42111d:	jne    0x42088a
  421123:	xor    DWORD PTR ds:0x4291b7,0x540c
  42112d:	push   0xf
  42112f:	or     DWORD PTR ds:0x42914b,0x42916b
  421139:	lea    eax,[esp+0x44]
  42113d:	and    DWORD PTR ds:0x4291ab,0x3361
  421147:	push   eax
  421148:	sub    DWORD PTR ds:0x4291bb,0x5c7b
  421152:	push   0x42866b
  421157:	adc    DWORD PTR ds:0x4291ab,0x4291cf
  421161:	push   0x42867f
  421166:	xor    DWORD PTR ds:0x429183,0x4291b7
  421170:	push   0x42869f
  421175:	or     DWORD PTR ds:0x4291af,0x4291cf
  42117f:	call   esi
  421181:	imul   eax,eax,0x300000
  421187:	mov    DWORD PTR ds:0x429157,0x112c
  421191:	cmp    eax,0x1b00000
  421196:	jne    0x42088a
  42119c:	or     DWORD PTR ds:0x42914f,0x1a1c
  4211a6:	lea    eax,[esp+0x1b8]
  4211ad:	push   eax
  4211ae:	sub    DWORD PTR ds:0x4291eb,0xb4e
  4211b8:	push   0x4286db
  4211bd:	not    DWORD PTR ds:0x429153
  4211c3:	call   DWORD PTR ds:0x42a667
  4211c9:	mov    DWORD PTR ds:0x4291d7,0x34b9
  4211d3:	cmp    eax,0xffffffff
  4211d6:	mov    DWORD PTR ds:0x4291bb,0x68d6
  4211e0:	jne    0x42088a
  4211e6:	lea    eax,[esp+0x78]
  4211ea:	push   eax
  4211eb:	sub    DWORD PTR ds:0x4291a7,0x429183
  4211f5:	push   0x4286c7
  4211fa:	sub    DWORD PTR ds:0x42919f,0xfe
  421204:	call   DWORD PTR ds:0x42a67b
  42120a:	mov    DWORD PTR ds:0x4291a3,0x162e
  421214:	cmp    eax,0xffffffff
  421217:	jne    0x42088a
  42121d:	add    DWORD PTR ds:0x42918f,0x39d
  421227:	push   0xf
  421229:	lea    eax,[esp+0x44]
  42122d:	push   eax
  42122e:	sbb    DWORD PTR ds:0x4291df,0x4c8c
  421238:	push   0x42871b
  42123d:	push   0x42872f
  421242:	push   0x42874f
  421247:	call   esi
  421249:	sub    DWORD PTR ds:0x42914f,0x429163
  421253:	imul   eax,eax,0x300000
  421259:	mov    DWORD PTR ds:0x42918b,0x5962
  421263:	cmp    eax,0x1b00000
  421268:	jne    0x42088a
  42126e:	add    DWORD PTR ds:0x4291a3,0x4291cb
  421278:	lea    eax,[esp+0x1b8]
  42127f:	or     DWORD PTR ds:0x4291ab,0x4619
  421289:	push   eax
  42128a:	push   0x42878b
  42128f:	and    DWORD PTR ds:0x42916f,0x4291ef
  421299:	call   DWORD PTR ds:0x42a667
  42129f:	mov    DWORD PTR ds:0x4291ef,0x2004
  4212a9:	cmp    eax,0xffffffff
  4212ac:	mov    DWORD PTR ds:0x42918b,0x62c6
  4212b6:	jne    0x42088a
  4212bc:	and    DWORD PTR ds:0x4291d3,0x5eb4
  4212c6:	lea    eax,[esp+0x78]
  4212ca:	adc    DWORD PTR ds:0x42917f,0x4918
  4212d4:	push   eax
  4212d5:	or     DWORD PTR ds:0x42919b,0x429153
  4212df:	push   0x428777
  4212e4:	sbb    DWORD PTR ds:0x429197,0x429157
  4212ee:	call   DWORD PTR ds:0x42a67b
  4212f4:	mov    DWORD PTR ds:0x42914f,0x13e7
  4212fe:	cmp    eax,0xffffffff
  421301:	mov    DWORD PTR ds:0x4291cf,0xa62
  42130b:	jne    0x42088a
  421311:	xor    DWORD PTR ds:0x42915b,0x4291bb
  42131b:	push   0xf
  42131d:	lea    eax,[esp+0x44]
  421321:	or     DWORD PTR ds:0x4291b3,0x2cef
  42132b:	push   eax
  42132c:	push   0x4287cb
  421331:	push   0x4287df
  421336:	sub    DWORD PTR ds:0x4291a3,0x42918f
  421340:	push   0x4287ff
  421345:	call   esi
  421347:	imul   eax,eax,0x300000
  42134d:	mov    DWORD PTR ds:0x429193,0x43ec
  421357:	cmp    eax,0x1b00000
  42135c:	mov    DWORD PTR ds:0x4291c7,0x18cb
  421366:	jne    0x42088a
  42136c:	add    DWORD PTR ds:0x4291af,0x5057
  421376:	lea    eax,[esp+0x1b8]
  42137d:	or     DWORD PTR ds:0x4291c3,0x48df
  421387:	push   eax
  421388:	and    DWORD PTR ds:0x4291e3,0x7c0c
  421392:	push   0x42883b
  421397:	and    DWORD PTR ds:0x4291f7,0x4291d7
  4213a1:	call   DWORD PTR ds:0x42a667
  4213a7:	cmp    eax,0xffffffff
  4213aa:	jne    0x42088a
  4213b0:	or     DWORD PTR ds:0x4291cb,0x5541
  4213ba:	lea    eax,[esp+0x78]
  4213be:	sub    DWORD PTR ds:0x4291f7,0x686a
  4213c8:	push   eax
  4213c9:	xor    DWORD PTR ds:0x4291ef,0x4291eb
  4213d3:	push   0x428827
  4213d8:	add    DWORD PTR ds:0x4291bb,0x4894
  4213e2:	call   DWORD PTR ds:0x42a67b
  4213e8:	mov    DWORD PTR ds:0x42914b,0x5d36
  4213f2:	cmp    eax,0xffffffff
  4213f5:	mov    DWORD PTR ds:0x42918b,0x63d2
  4213ff:	jne    0x42088a
  421405:	adc    DWORD PTR ds:0x4291d3,0x6d
  42140f:	push   0xf
  421411:	xor    DWORD PTR ds:0x4291df,0x4291b3
  42141b:	lea    eax,[esp+0x44]
  42141f:	xor    DWORD PTR ds:0x42914f,0x245a
  421429:	push   eax
  42142a:	adc    DWORD PTR ds:0x42915f,0x29d1
  421434:	push   0x42887b
  421439:	push   0x42888f
  42143e:	sbb    DWORD PTR ds:0x42914f,0x429163
  421448:	push   0x4288af
  42144d:	adc    DWORD PTR ds:0x42917f,0x4291a3
  421457:	call   esi
  421459:	imul   eax,eax,0x300000
  42145f:	cmp    eax,0x1b00000
  421464:	jne    0x42088a
  42146a:	mov    DWORD PTR ds:0x4291cf,0x5dc8
  421474:	lea    eax,[esp+0x1b8]
  42147b:	add    DWORD PTR ds:0x42919b,0x4291ab
  421485:	push   eax
  421486:	not    DWORD PTR ds:0x429153
  42148c:	push   0x4288eb
  421491:	call   DWORD PTR ds:0x42a667
  421497:	mov    DWORD PTR ds:0x4291e7,0x183e
  4214a1:	cmp    eax,0xffffffff
  4214a4:	jne    0x42088a
  4214aa:	lea    eax,[esp+0x78]
  4214ae:	xor    DWORD PTR ds:0x4291d7,0x57b8
  4214b8:	push   eax
  4214b9:	push   0x4288d7
  4214be:	add    DWORD PTR ds:0x4291af,0x1e81
  4214c8:	call   DWORD PTR ds:0x42a67b
  4214ce:	mov    DWORD PTR ds:0x4291c3,0x328a
  4214d8:	cmp    eax,0xffffffff
  4214db:	mov    DWORD PTR ds:0x4291f7,0x13f0
  4214e5:	jne    0x42088a
  4214eb:	push   0xf
  4214ed:	lea    eax,[esp+0x44]
  4214f1:	adc    DWORD PTR ds:0x4291c3,0x429173
  4214fb:	push   eax
  4214fc:	xor    DWORD PTR ds:0x4291cf,0x725b
  421506:	push   0x42892b
  42150b:	adc    DWORD PTR ds:0x4291bb,0x39d7
  421515:	push   0x42893f
  42151a:	xor    DWORD PTR ds:0x42918b,0x4291a7
  421524:	push   0x42895f
  421529:	call   esi
  42152b:	adc    DWORD PTR ds:0x4291ab,0x4291f7
  421535:	imul   eax,eax,0x300000
  42153b:	mov    DWORD PTR ds:0x4291cf,0x3d0e
  421545:	cmp    eax,0x1b00000
  42154a:	jne    0x42088a
  421550:	lea    eax,[esp+0x1b8]
  421557:	xor    DWORD PTR ds:0x429197,0x42919f
  421561:	push   eax
  421562:	push   0x42899b
  421567:	or     DWORD PTR ds:0x42915b,0x3d87
  421571:	call   DWORD PTR ds:0x42a667
  421577:	mov    DWORD PTR ds:0x4291bf,0x3132
  421581:	cmp    eax,0xffffffff
  421584:	jne    0x42088a
  42158a:	add    DWORD PTR ds:0x4291df,0x6129
  421594:	lea    eax,[esp+0x78]
  421598:	mov    DWORD PTR ds:0x42915b,0x7683
  4215a2:	push   eax
  4215a3:	push   0x428987
  4215a8:	adc    DWORD PTR ds:0x4291d3,0x4f30
  4215b2:	call   DWORD PTR ds:0x42a67b
  4215b8:	mov    DWORD PTR ds:0x42918f,0x2474
  4215c2:	cmp    eax,0xffffffff
  4215c5:	jne    0x42088a
  4215cb:	and    DWORD PTR ds:0x4291c3,0x7c44
  4215d5:	push   0xf
  4215d7:	lea    eax,[esp+0x44]
  4215db:	push   eax
  4215dc:	push   0x4289db
  4215e1:	sub    DWORD PTR ds:0x42914f,0x6ca1
  4215eb:	push   0x4289ef
  4215f0:	sbb    DWORD PTR ds:0x42916f,0x4291cf
  4215fa:	push   0x428a0f
  4215ff:	call   esi
  421601:	xor    DWORD PTR ds:0x4291eb,0x4291a3
  42160b:	imul   eax,eax,0x300000
  421611:	mov    DWORD PTR ds:0x4291a7,0x6fd3
  42161b:	cmp    eax,0x1b00000
  421620:	mov    DWORD PTR ds:0x4291f7,0x26fc
  42162a:	jne    0x42088a
  421630:	lea    eax,[esp+0x1b8]
  421637:	push   eax
  421638:	push   0x428a4b
  42163d:	call   DWORD PTR ds:0x42a667
  421643:	cmp    eax,0xffffffff
  421646:	jne    0x42088a
  42164c:	lea    eax,[esp+0x78]
  421650:	push   eax
  421651:	push   0x428a37
  421656:	call   DWORD PTR ds:0x42a67b
  42165c:	cmp    eax,0xffffffff
  42165f:	jne    0x42088a
  421665:	push   0xf
  421667:	lea    eax,[esp+0x44]
  42166b:	push   eax
  42166c:	push   0x428a8b
  421671:	push   0x428a9f
  421676:	push   0x428abf
  42167b:	call   esi
  42167d:	imul   eax,eax,0x300000
  421683:	cmp    eax,0x1b00000
  421688:	jne    0x42088a
  42168e:	lea    eax,[esp+0x1b8]
  421695:	push   eax
  421696:	push   0x428afb
  42169b:	call   DWORD PTR ds:0x42a667
  4216a1:	cmp    eax,0xffffffff
  4216a4:	jne    0x42088a
  4216aa:	lea    eax,[esp+0x78]
  4216ae:	push   eax
  4216af:	push   0x428ae7
  4216b4:	call   DWORD PTR ds:0x42a67b
  4216ba:	cmp    eax,0xffffffff
  4216bd:	jne    0x42088a
  4216c3:	push   0xf
  4216c5:	lea    eax,[esp+0x44]
  4216c9:	push   eax
  4216ca:	push   0x428b3b
  4216cf:	push   0x428b4f
  4216d4:	push   0x428b6f
  4216d9:	call   esi
  4216db:	imul   eax,eax,0x300000
  4216e1:	cmp    eax,0x1b00000
  4216e6:	jne    0x42088a
  4216ec:	lea    eax,[esp+0x1b8]
  4216f3:	push   eax
  4216f4:	push   0x428bab
  4216f9:	call   DWORD PTR ds:0x42a667
  4216ff:	cmp    eax,0xffffffff
  421702:	jne    0x42088a
  421708:	lea    eax,[esp+0x78]
  42170c:	push   eax
  42170d:	push   0x428b97
  421712:	call   DWORD PTR ds:0x42a67b
  421718:	cmp    eax,0xffffffff
  42171b:	jne    0x42088a
  421721:	push   0xf
  421723:	lea    eax,[esp+0x44]
  421727:	push   eax
  421728:	push   0x428beb
  42172d:	push   0x428bff
  421732:	push   0x428c1f
  421737:	call   esi
  421739:	imul   eax,eax,0x300000
  42173f:	cmp    eax,0x1b00000
  421744:	jne    0x42088a
  42174a:	lea    eax,[esp+0x1b8]
  421751:	push   eax
  421752:	push   0x428c5b
  421757:	call   DWORD PTR ds:0x42a667
  42175d:	cmp    eax,0xffffffff
  421760:	jne    0x42088a
  421766:	lea    eax,[esp+0x78]
  42176a:	push   eax
  42176b:	push   0x428c47
  421770:	call   DWORD PTR ds:0x42a67b
  421776:	cmp    eax,0xffffffff
  421779:	jne    0x42088a
  42177f:	push   0xf
  421781:	lea    eax,[esp+0x44]
  421785:	push   eax
  421786:	push   0x428c9b
  42178b:	push   0x428caf
  421790:	push   0x428ccf
  421795:	call   esi
  421797:	imul   eax,eax,0x300000
  42179d:	cmp    eax,0x1b00000
  4217a2:	jne    0x42088a
  4217a8:	lea    eax,[esp+0x1b8]
  4217af:	push   eax
  4217b0:	push   0x428d0b
  4217b5:	call   DWORD PTR ds:0x42a667
  4217bb:	cmp    eax,0xffffffff
  4217be:	jne    0x42088a
  4217c4:	lea    eax,[esp+0x78]
  4217c8:	push   eax
  4217c9:	push   0x428cf7
  4217ce:	call   DWORD PTR ds:0x42a67b
  4217d4:	cmp    eax,0xffffffff
  4217d7:	jne    0x42088a
  4217dd:	push   0xf
  4217df:	lea    eax,[esp+0x44]
  4217e3:	push   eax
  4217e4:	push   0x428d4b
  4217e9:	push   0x428d5f
  4217ee:	push   0x428d7f
  4217f3:	call   esi
  4217f5:	imul   eax,eax,0x300000
  4217fb:	cmp    eax,0x1b00000
  421800:	jne    0x42088a
  421806:	lea    eax,[esp+0x1b8]
  42180d:	push   eax
  42180e:	push   0x428dbb
  421813:	call   DWORD PTR ds:0x42a667
  421819:	cmp    eax,0xffffffff
  42181c:	jne    0x42088a
  421822:	mov    eax,DWORD PTR [esp+0x3c]
  421826:	cmp    eax,0xf89c85a2
  42182b:	je     0x42188a
  421831:	mov    eax,DWORD PTR [esp+0x18]
  421835:	mov    ecx,DWORD PTR [esp+0x38]
  421839:	xor    eax,edi
  42183b:	add    eax,ebx
  42183d:	cmp    eax,ecx
  42183f:	je     0x42188a
  421845:	mov    eax,ds:0x42830b
  42184a:	mov    eax,DWORD PTR [eax+0x194]
  421850:	mov    ecx,DWORD PTR [eax]
  421852:	mov    eax,DWORD PTR [ecx+0x3c]
  421855:	push   DWORD PTR ds:0x4283eb
  42185b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  42185f:	push   DWORD PTR ds:0x42818f
  421865:	add    eax,ecx
  421867:	mov    ecx,DWORD PTR ds:0x42830b
  42186d:	mov    ecx,DWORD PTR [ecx+0x194]
  421873:	push   DWORD PTR [ecx]
  421875:	call   eax
  421877:	mov    ecx,DWORD PTR ds:0x42830b
  42187d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421883:	mov    DWORD PTR [ecx],eax
  421885:	jmp    0x421ab7
  42188a:	mov    eax,DWORD PTR [esp+0x18]
  42188e:	mov    ecx,DWORD PTR [esp+0x60]
  421892:	xor    eax,edi
  421894:	add    eax,ebx
  421896:	cmp    eax,ecx
  421898:	jne    0x421901
  42189e:	mov    eax,DWORD PTR [esp+0x18]
  4218a2:	mov    ecx,DWORD PTR ds:0x42830b
  4218a8:	mov    ecx,DWORD PTR [ecx+0x198]
  4218ae:	xor    eax,edi
  4218b0:	add    eax,ebx
  4218b2:	cmp    eax,DWORD PTR [ecx]
  4218b4:	jne    0x4218da
  4218ba:	mov    eax,DWORD PTR [esp+0x18]
  4218be:	push   0xf89c85a1
  4218c3:	xor    eax,edi
  4218c5:	add    eax,ebx
  4218c7:	push   eax
  4218c8:	push   0xf89c85bd
  4218cd:	push   DWORD PTR [esp+0x18]
  4218d1:	push   DWORD PTR [esp+0x28]
  4218d5:	call   0x41b9fd
  4218da:	push   DWORD PTR [esp+0xc]
  4218de:	push   DWORD PTR [esp+0x1c]
  4218e2:	call   0x401000
  4218e7:	mov    eax,DWORD PTR [esp+0x18]
  4218eb:	xor    eax,edi
  4218ed:	add    eax,ebx
  4218ef:	mov    ds:0x428397,eax
  4218f4:	mov    eax,DWORD PTR [esp+0x18]
  4218f8:	xor    eax,edi
  4218fa:	add    eax,ebx
  4218fc:	mov    ds:0x42838f,eax
  421901:	mov    eax,DWORD PTR [esp+0x2c]
  421905:	test   eax,eax
  421907:	je     0x421ab7
  42190d:	lea    eax,[esp+0x78]
  421911:	mov    DWORD PTR [esp+0x64],0xf152c3a
  421919:	push   eax
  42191a:	mov    DWORD PTR [esp+0x78],0x712ed2f
  421922:	mov    DWORD PTR [esp+0x74],0x373fc09
  42192a:	push   0x428da7
  42192f:	mov    DWORD PTR [esp+0x70],0x72670ad9
  421937:	call   DWORD PTR ds:0x42a67b
  42193d:	cmp    eax,0xffffffff
  421940:	jne    0x42088a
  421946:	push   0xf
  421948:	lea    eax,[esp+0x44]
  42194c:	push   eax
  42194d:	push   0x428dfb
  421952:	push   0x428e0f
  421957:	push   0x428e2f
  42195c:	call   esi
  42195e:	imul   eax,eax,0x300000
  421964:	cmp    eax,0x1b00000
  421969:	jne    0x42088a
  42196f:	lea    eax,[esp+0x1b8]
  421976:	push   eax
  421977:	push   0x428e6b
  42197c:	call   DWORD PTR ds:0x42a667
  421982:	cmp    eax,0xffffffff
  421985:	jne    0x42088a
  42198b:	call   0x41b69e
  421990:	mov    eax,DWORD PTR [esp+0x34]
  421994:	mov    eax,DWORD PTR [esp+0xc]
  421998:	mov    DWORD PTR [esp+0x30],eax
  42199c:	mov    eax,DWORD PTR [esp+0x18]
  4219a0:	mov    DWORD PTR [esp+0xc],eax
  4219a4:	mov    eax,eax
  4219a6:	mov    eax,ds:0x42830b
  4219ab:	mov    ecx,DWORD PTR [eax+0x1c0]
  4219b1:	mov    edx,DWORD PTR [ecx]
  4219b3:	and    DWORD PTR [esp+0x14],0x0
  4219b8:	mov    esi,0xfabdbed6
  4219bd:	add    edx,esi
  4219bf:	adc    DWORD PTR [esp+0x14],0xffffffff
  4219c4:	mov    ecx,0x8a29a13f
  4219c9:	xor    edx,ecx
  4219cb:	mov    DWORD PTR [esp+0x20],edx
  4219cf:	mov    edx,DWORD PTR [esp+0x14]
  4219d3:	xor    edx,0x0
  4219d6:	cmp    DWORD PTR [esp+0x20],0x70941fe8
  4219de:	mov    DWORD PTR [esp+0x24],edx
  4219e2:	jne    0x4219f1
  4219e8:	cmp    edx,0xffffffff
  4219eb:	je     0x421a5a
  4219f1:	mov    eax,DWORD PTR [eax+0x1c8]
  4219f7:	mov    eax,DWORD PTR [eax]
  4219f9:	cdq    
  4219fa:	add    eax,esi
  4219fc:	adc    edx,0xffffffff
  4219ff:	and    DWORD PTR [esp+0x14],0x0
  421a04:	xor    edx,0x0
  421a07:	mov    DWORD PTR [esp+0x1c],edx
  421a0b:	mov    edx,DWORD PTR [esp+0xc]
  421a0f:	mov    DWORD PTR [esp+0x10],edx
  421a13:	xor    eax,ecx
  421a15:	add    DWORD PTR [esp+0x10],esi
  421a19:	mov    edx,DWORD PTR [esp+0x10]
  421a1d:	adc    DWORD PTR [esp+0x14],0xffffffff
  421a22:	xor    edx,ecx
  421a24:	mov    DWORD PTR [esp+0x20],edx
  421a28:	mov    edx,DWORD PTR [esp+0x14]
  421a2c:	xor    edx,0x0
  421a2f:	mov    DWORD PTR [esp+0x24],edx
  421a33:	cmp    DWORD PTR [esp+0x20],eax
  421a37:	jne    0x421a49
  421a3d:	mov    eax,DWORD PTR [esp+0x1c]
  421a41:	cmp    edx,eax
  421a43:	je     0x421a5a
  421a49:	mov    eax,DWORD PTR [esp+0xc]
  421a4d:	add    eax,DWORD PTR [esp+0x30]
  421a51:	mov    DWORD PTR [esp+0xc],eax
  421a55:	jmp    0x421ab7
  421a5a:	mov    eax,ds:0x42838f
  421a5f:	mov    edx,DWORD PTR ds:0x428397
  421a65:	xor    eax,edx
  421a67:	mov    ds:0x42838f,eax
  421a6c:	mov    edx,DWORD PTR ds:0x42838f
  421a72:	mov    eax,DWORD PTR [esp+0x2c]
  421a76:	add    DWORD PTR [eax],edx
  421a78:	mov    edx,DWORD PTR [esp+0xc]
  421a7c:	mov    eax,ds:0x42838f
  421a81:	xor    edx,edi
  421a83:	add    edx,ebx
  421a85:	xor    ebx,ebx
  421a87:	add    edx,esi
  421a89:	adc    ebx,0xffffffff
  421a8c:	xor    edi,edi
  421a8e:	xor    edx,ecx
  421a90:	xor    ebx,0x0
  421a93:	add    eax,esi
  421a95:	adc    edi,0xffffffff
  421a98:	xor    eax,ecx
  421a9a:	xor    edi,0x0
  421a9d:	cmp    eax,edx
  421a9f:	jne    0x421ab7
  421aa5:	cmp    edi,ebx
  421aa7:	jne    0x421ab7
  421aad:	mov    eax,ds:0x42838f
  421ab2:	mov    ds:0x428397,eax
  421ab7:	lea    eax,[esp+0x78]
  421abb:	push   eax
  421abc:	push   0x428e57
  421ac1:	call   DWORD PTR ds:0x42a67b
  421ac7:	cmp    eax,0xffffffff
  421aca:	jne    0x42088a
  421ad0:	push   0xf
  421ad2:	lea    eax,[esp+0x44]
  421ad6:	push   eax
  421ad7:	push   0x428eab
  421adc:	push   0x428ebf
  421ae1:	push   0x428edf
  421ae6:	call   DWORD PTR ds:0x42a697
  421aec:	imul   eax,eax,0x300000
  421af2:	cmp    eax,0x1b00000
  421af7:	jne    0x42088a
  421afd:	lea    eax,[esp+0x1b8]
  421b04:	push   eax
  421b05:	push   0x428f0b
  421b0a:	call   DWORD PTR ds:0x42a667
  421b10:	cmp    eax,0xffffffff
  421b13:	jne    0x42088a
  421b19:	mov    eax,ds:0x42830b
  421b1e:	push   0x4
  421b20:	add    eax,0x1cc
  421b25:	push   eax
  421b26:	lea    eax,[esp+0x3c]
  421b2a:	push   eax
  421b2b:	call   0x421b3f
  421b30:	mov    eax,DWORD PTR [esp+0x34]
  421b34:	mov    eax,DWORD PTR [eax]
  421b36:	pop    edi
  421b37:	pop    esi
  421b38:	pop    ebx
  421b39:	mov    esp,ebp
  421b3b:	pop    ebp
  421b3c:	ret    0xc
  421b3f:	push   ebp
  421b40:	mov    ebp,esp
  421b42:	sub    esp,0x10
  421b45:	sub    DWORD PTR ds:0x429153,ebx
  421b4b:	mov    eax,0xf89c85a1
  421b50:	and    ecx,DWORD PTR ds:0x42914b
  421b56:	mov    DWORD PTR [ebp-0x4],eax
  421b59:	and    DWORD PTR ds:0x429167,0x0
  421b63:	jmp    0x421b75
  421b68:	mov    edx,DWORD PTR ds:0x429167
  421b6e:	inc    edx
  421b6f:	mov    DWORD PTR ds:0x429167,edx
  421b75:	cmp    DWORD PTR ds:0x429167,0x1c
  421b7c:	jae    0x421bcb
  421b82:	cmp    DWORD PTR ds:0x429167,0xc
  421b89:	jge    0x421bcb
  421b8f:	jmp    0x421bac
  421b94:	push   DWORD PTR [ebp-0x28]
  421b97:	push   0x428152
  421b9c:	push   0x42810e
  421ba1:	push   0x400000
  421ba6:	call   DWORD PTR ds:0x42a66b
  421bac:	cmp    DWORD PTR ds:0x429167,0xb
  421bb3:	jne    0x421bc6
  421bb9:	mov    edx,DWORD PTR ds:0x429167
  421bbf:	inc    edx
  421bc0:	mov    DWORD PTR ds:0x429167,edx
  421bc6:	jmp    0x421b68
  421bcb:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  421bd2:	or     edx,0x5b7d
  421bd8:	mov    ecx,DWORD PTR [ebp-0x4]
  421bdb:	push   esi
  421bdc:	mov    DWORD PTR ds:0x42918b,0x1a
  421be6:	cmp    DWORD PTR ds:0x42918b,0x0
  421bed:	je     0x421c25
  421bf3:	cmp    DWORD PTR ds:0x42918b,0x26
  421bfa:	ja     0x421c25
  421c00:	jmp    0x421c13
  421c05:	push   0x4386
  421c0a:	push   DWORD PTR [ebp-0x14]
  421c0d:	call   DWORD PTR ds:0x42a66f
  421c13:	mov    edx,DWORD PTR ds:0x42918b
  421c19:	dec    edx
  421c1a:	mov    DWORD PTR ds:0x42918b,edx
  421c20:	jmp    0x421be6
  421c25:	mov    edx,0x75108ac
  421c2a:	xor    ecx,edx
  421c2c:	mov    esi,0x3272f3
  421c31:	push   edi
  421c32:	mov    edi,DWORD PTR [ebp+0x10]
  421c35:	add    ecx,esi
  421c37:	cmp    ecx,edi
  421c39:	mov    DWORD PTR ds:0x42916f,0x60ec
  421c43:	je     0x42414b
  421c49:	movzx  ecx,WORD PTR ds:0x4291f7
  421c50:	adc    DWORD PTR ds:0x4291cf,ecx
  421c56:	mov    ecx,DWORD PTR [ebp-0x4]
  421c59:	mov    edi,DWORD PTR [ebp+0x10]
  421c5c:	inc    DWORD PTR ds:0x4291d3
  421c62:	xor    eax,eax
  421c64:	and    DWORD PTR ds:0x4291b7,0x2b27
  421c6e:	xor    ecx,edx
  421c70:	add    ecx,esi
  421c72:	add    DWORD PTR ds:0x42914b,0x714
  421c7c:	add    edi,0xfabdbed6
  421c82:	mov    DWORD PTR ds:0x429173,0x79de
  421c8c:	adc    eax,0xffffffff
  421c8f:	or     DWORD PTR ds:0x4291b3,0x42917f
  421c99:	xor    eax,0x0
  421c9c:	adc    DWORD PTR ds:0x4291e7,0x4ab7
  421ca6:	mov    DWORD PTR [ebp-0xc],eax
  421ca9:	mov    DWORD PTR ds:0x42914b,0x1e
  421cb3:	cmp    DWORD PTR ds:0x42914b,0x0
  421cba:	je     0x421d0b
  421cc0:	cmp    DWORD PTR ds:0x42914b,0x8
  421cc7:	jge    0x421d0b
  421ccd:	jmp    0x421cdd
  421cd2:	push   0x4291eb
  421cd7:	call   DWORD PTR ds:0x42a673
  421cdd:	cmp    DWORD PTR ds:0x42914b,0x9
  421ce4:	jne    0x421cf8
  421cea:	xor    eax,eax
  421cec:	add    eax,DWORD PTR ds:0x42914b
  421cf2:	dec    eax
  421cf3:	mov    ds:0x42914b,eax
  421cf8:	xor    eax,eax
  421cfa:	xor    eax,DWORD PTR ds:0x42914b
  421d00:	dec    eax
  421d01:	mov    ds:0x42914b,eax
  421d06:	jmp    0x421cb3
  421d0b:	push   ebx
  421d0c:	xor    ebx,ebx
  421d0e:	xor    edi,0x8a29a13f
  421d14:	mov    eax,ecx
  421d16:	add    eax,0xfabdbed6
  421d1b:	adc    ebx,0xffffffff
  421d1e:	xor    eax,0x8a29a13f
  421d23:	xor    ebx,0x0
  421d26:	cmp    eax,edi
  421d28:	jne    0x421d41
  421d2e:	cmp    ebx,DWORD PTR [ebp-0xc]
  421d31:	je     0x424145
  421d37:	jmp    0x421d41
  421d3c:	mov    esi,0x3272f3
  421d41:	mov    eax,DWORD PTR [ebp-0x4]
  421d44:	mov    edi,DWORD PTR [ebp-0x8]
  421d47:	xor    edi,edx
  421d49:	add    edi,esi
  421d4b:	mov    esi,DWORD PTR [ebp+0x8]
  421d4e:	imul   edi,ecx
  421d51:	mov    ebx,DWORD PTR [ebp+0xc]
  421d54:	xor    eax,edx
  421d56:	add    eax,ecx
  421d58:	mov    al,BYTE PTR [ebx+eax*1+0x3272f3]
  421d5f:	mov    BYTE PTR [edi+esi*1],al
  421d62:	mov    eax,DWORD PTR [ebp-0x8]
  421d65:	mov    esi,DWORD PTR [ebp+0x10]
  421d68:	xor    eax,edx
  421d6a:	xor    ebx,ebx
  421d6c:	add    esi,0xfabdbed6
  421d72:	adc    ebx,0xffffffff
  421d75:	lea    ecx,[ecx+eax*1+0x3272f3]
  421d7c:	xor    edi,edi
  421d7e:	xor    esi,0x8a29a13f
  421d84:	xor    ebx,0x0
  421d87:	mov    eax,ecx
  421d89:	add    eax,0xfabdbed6
  421d8e:	adc    edi,0xffffffff
  421d91:	xor    eax,0x8a29a13f
  421d96:	xor    edi,0x0
  421d99:	cmp    eax,esi
  421d9b:	jne    0x421d3c
  421da1:	cmp    edi,ebx
  421da3:	jne    0x421d3c
  421da9:	jmp    0x424145
  421dae:	sbb    ah,bl
  421db0:	cmp    ch,BYTE PTR [edi-0x46]
  421db3:	xchg   BYTE PTR [esi],al
  421db5:	xchg   BYTE PTR [edx-0x68],bl
  421db8:	dec    esi
  421db9:	push   esp
  421dba:	cld    
  421dbb:	xor    BYTE PTR [eax-0x32],al
  421dbe:	outs   dx,DWORD PTR ds:[esi]
  421dbf:	mov    cl,0x82
  421dc1:	add    DWORD PTR [eax],0x5c
  421dc4:	add    DWORD PTR [ebx-0x4a764918],0xffffff92
  421dcb:	arpl   WORD PTR [esi+0x6c],dx
  421dce:	out    0x51,eax
  421dd0:	(bad)  
  421dd1:	xlat   BYTE PTR ds:[ebx]
  421dd2:	or     BYTE PTR [edi+0x1772ac7d],ah
  421dd8:	inc    ebx
  421dd9:	and    edx,edx
  421ddb:	scas   eax,DWORD PTR es:[edi]
  421ddc:	pushf  
  421ddd:	inc    ecx
  421dde:	pop    ds
  421ddf:	mov    ds:0xc3e467a3,eax
  421de4:	add    eax,0x485833fe
  421de9:	aas    
  421dea:	or     al,BYTE PTR [edi+0x3d]
  421ded:	inc    ecx
  421dee:	add    BYTE PTR [eax+0x5bd3b219],0xe2
  421df5:	jno    0x421da6
  421df7:	add    DWORD PTR [ecx-0x3],esp
  421dfa:	mov    dl,0x5d
  421dfc:	into   
  421dfd:	jmp    0x6a870b5e
  421e02:	jl     0x421e83
  421e04:	inc    edx
  421e05:	mov    WORD PTR [eax],?
  421e07:	fst    QWORD PTR [edx+edx*2]
  421e0a:	fstp   DWORD PTR [ebx]
  421e0c:	rol    BYTE PTR [edi],cl
  421e0e:	and    edi,eax
  421e10:	sbb    al,0xae
  421e12:	ror    DWORD PTR [edi+ecx*4+0x6f],1
  421e16:	pushf  
  421e17:	mov    eax,ds:0x1e78f908
  421e1c:	and    DWORD PTR [eax-0x6],edi
  421e1f:	and    DWORD PTR [ecx+0x48619012],0xc2409446
  421e29:	ror    edi,0xe9
  421e2c:	jmp    0x10d5:0x8db230f2
  421e33:	int3   
  421e34:	and    DWORD PTR [esi],ebp
  421e36:	jge    0x421e53
  421e38:	and    eax,0x1501ba7b
  421e3d:	dec    edi
  421e3e:	xchg   DWORD PTR [edi],edi
  421e40:	imul   eax,DWORD PTR [edx],0xffffffcb
  421e43:	mov    edi,0xb4431faf
  421e48:	in     al,dx
  421e49:	jmp    0x2ba050c6
  421e4e:	jg     0x421e88
  421e50:	xchg   ebx,eax
  421e51:	dec    edx
  421e52:	lea    ebx,[ebx-0x7c]
  421e55:	jmp    0x4bc0:0x4c879e7
  421e5c:	sbb    ecx,DWORD PTR [ebx+0x5456b803]
  421e62:	adc    al,0x8
  421e64:	sub    eax,0x377a89ee
  421e69:	xchg   esi,eax
  421e6a:	sub    BYTE PTR [ebx+eax*1+0x764a1e31],dl
  421e71:	dec    esi
  421e72:	je     0x421e87
  421e74:	test   al,0xf1
  421e76:	xor    DWORD PTR [ecx],ebx
  421e78:	rcl    BYTE PTR [edx],1
  421e7a:	(bad)  
  421e7b:	xchg   ebx,eax
  421e7c:	adc    DWORD PTR [ebp+0x69d6ceef],edi
  421e82:	xor    ebp,eax
  421e84:	jle    0x421ece
  421e86:	aas    
  421e87:	leave  
  421e88:	mov    esp,0x5e8c4a31
  421e8d:	adc    DWORD PTR [eax-0x2e],ebp
  421e90:	xor    al,0x85
  421e92:	in     eax,dx
  421e93:	jbe    0x421eb0
  421e95:	(bad)  
  421e96:	std    
  421e97:	add    al,0xf5
  421e99:	pusha  
  421e9a:	and    ecx,DWORD PTR [ebx]
  421e9c:	popf   
  421e9d:	jbe    0x421ea7
  421e9f:	mov    edi,0x839e632b
  421ea4:	jmp    0xc7d9:0x62df319b
  421eab:	pop    edi
  421eac:	(bad)  
  421ead:	fidiv  DWORD PTR [eax]
  421eaf:	jmp    0xa26f:0x50b5ebb3
  421eb6:	(bad)  
  421eb7:	push   ds
  421eb8:	jne    0x421f35
  421eba:	mov    ds:0x8a2c655b,eax
  421ebf:	in     al,dx
  421ec0:	std    
  421ec1:	jmp    0x5218:0xc83ef610
  421ec8:	lahf   
  421ec9:	into   
  421eca:	xchg   esp,eax
  421ecb:	mov    BYTE PTR [eax-0x3d6cef66],ah
  421ed1:	or     ebx,DWORD PTR [esi]
  421ed3:	mov    esp,0x6e6c0990
  421ed8:	cmp    eax,0xabcb6ed5
  421edd:	es mov bh,0xa2
  421ee0:	repnz push esp
  421ee2:	jne    0x421eea
  421ee4:	inc    eax
  421ee5:	test   al,0xda
  421ee7:	xor    DWORD PTR [esi-0x3097d327],esp
  421eed:	mov    esi,0x189cd9eb
  421ef2:	mov    esp,0x471a0446
  421ef7:	popf   
  421ef8:	and    ah,BYTE PTR [edi+edi*1]
  421efb:	and    ch,BYTE PTR [ebp+ebp*4-0x65]
  421eff:	fnstcw WORD PTR [ebx+0xa258c95]
  421f05:	sbb    al,0xb0
  421f07:	retf   0xa918
  421f0a:	sbb    DWORD PTR [ecx],edi
  421f0c:	mov    ebp,ss
  421f0e:	stos   DWORD PTR es:[edi],eax
  421f0f:	js     0x421ed2
  421f11:	xchg   ecx,eax
  421f12:	icebp  
  421f13:	je     0x421f3b
  421f15:	jmp    0x167d:0x1289787
  421f1c:	ins    BYTE PTR es:[edi],dx
  421f1d:	jae    0x421ef4
  421f1f:	outs   dx,DWORD PTR ds:[esi]
  421f20:	leave  
  421f21:	data16 adc BYTE PTR [edi+0x1e],dh
  421f25:	jmp    0x2a748e8a
  421f2a:	pop    edx
  421f2b:	es test al,0x4d
  421f2e:	push   ebp
  421f2f:	push   eax
  421f30:	aas    
  421f31:	or     al,0x5
  421f33:	in     eax,0xed
  421f35:	jo     0x421f55
  421f37:	and    edi,ebp
  421f39:	pop    ebp
  421f3a:	imul   ebx,ebx,0x9
  421f3d:	das    
  421f3e:	jmp    0x421f9e
  421f40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f41:	aaa    
  421f42:	xchg   ebp,eax
  421f43:	sbb    eax,0xf6e2857f
  421f48:	lahf   
  421f49:	xor    DWORD PTR [esi+0x9],0xffffff89
  421f4d:	xchg   BYTE PTR [edx+0x287a966f],cl
  421f53:	mul    BYTE PTR [edx-0x30e1dc8a]
  421f59:	aam    0xbb
  421f5b:	not    esi
  421f5d:	mov    edi,edx
  421f5f:	out    0xee,al
  421f61:	test   al,0xaf
  421f63:	pushf  
  421f64:	loope  0x421f70
  421f66:	in     al,0xac
  421f68:	bswap  ebx
  421f6a:	pop    ds
  421f6b:	or     dl,ch
  421f6d:	or     al,0x6d
  421f6f:	(bad)  [eax-0x682891e7]
  421f75:	ds xchg ebx,eax
  421f77:	jmp    0x1d9a26b3
  421f7c:	(bad)  
  421f7d:	push   edi
  421f7e:	sub    ebp,DWORD PTR [eax+0x8]
  421f81:	(bad)  
  421f82:	jl     0x421f5b
  421f84:	mov    esi,esp
  421f86:	mov    ebx,0x3d9f615d
  421f8b:	repnz dec esp
  421f8d:	cs push edx
  421f8f:	pop    ds
  421f90:	jne    0x421fcd
  421f92:	lahf   
  421f93:	mov    eax,0xfe7ceb56
  421f98:	into   
  421f99:	rcr    DWORD PTR [esi],cl
  421f9b:	fsubr  st,st(3)
  421f9d:	cmp    edi,DWORD PTR [ebx+edx*2]
  421fa0:	xlat   BYTE PTR ds:[ebx]
  421fa1:	push   ecx
  421fa2:	push   eax
  421fa3:	rcr    dh,1
  421fa5:	ins    DWORD PTR es:[edi],dx
  421fa6:	call   FWORD PTR [esp+edx*4]
  421fa9:	pop    edx
  421faa:	dec    esi
  421fab:	or     eax,0x51261052
  421fb0:	ds push eax
  421fb2:	sub    DWORD PTR ds:0xb99921d4,ebx
  421fb8:	xchg   BYTE PTR [ebp-0x13],ah
  421fbb:	sub    al,0xe1
  421fbd:	sbb    DWORD PTR [ebp+ebx*8+0x474a6764],ecx
  421fc4:	out    0xa9,al
  421fc6:	into   
  421fc7:	xchg   DWORD PTR [esp+ebp*4-0x402e7642],edi
  421fce:	sbb    edi,DWORD PTR ds:0x176af50a
  421fd4:	fdivp  st(4),st
  421fd6:	mov    edx,DWORD PTR [ecx]
  421fd8:	pop    ebp
  421fd9:	mov    bh,0xa6
  421fdb:	pop    ds
  421fdc:	lea    ecx,[eax+0x297b9b67]
  421fe2:	fstp   DWORD PTR [edi-0x17a6489b]
  421fe8:	xchg   esp,eax
  421fe9:	fiadd  DWORD PTR [ebp-0x8]
  421fec:	fmul   st,st(1)
  421fee:	mov    WORD PTR [ecx],es
  421ff0:	mov    ecx,0xcc829781
  421ff5:	imul   eax,esi,0xd3687b84
  421ffb:	cmp    al,0xa8
  421ffd:	ins    DWORD PTR es:[edi],dx
  421ffe:	out    0xb2,eax
  422000:	in     eax,0xab
  422002:	pop    esi
  422003:	aad    0x0
  422005:	in     eax,dx
  422006:	fs dec ebp
  422008:	rcr    ah,0x9c
  42200b:	fcomp  QWORD PTR [eax+0x32]
  42200e:	jmp    DWORD PTR [edi]
  422010:	mov    cs,WORD PTR [eax+0x36ce974d]
  422016:	sub    al,0x91
  422018:	sahf   
  422019:	clc    
  42201a:	add    bl,BYTE PTR [ebp+ebp*4-0x78]
  42201e:	iret   
  42201f:	in     al,dx
  422020:	lods   al,BYTE PTR ds:[esi]
  422021:	fimul  WORD PTR [ecx]
  422023:	pop    edi
  422024:	dec    edx
  422025:	pop    esi
  422026:	push   ebx
  422027:	jne    0x422001
  422029:	push   eax
  42202a:	or     eax,0x4115f950
  42202f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422030:	out    0x26,al
  422032:	out    0xd7,al
  422034:	pop    ebp
  422035:	adc    BYTE PTR [esi-0x58],cl
  422038:	jecxz  0x422031
  42203a:	aad    0x7
  42203c:	call   0xca29:0x87cc2ff4
  422043:	pop    ebp
  422044:	(bad)  
  422046:	or     edx,DWORD PTR [esi]
  422048:	retf   0xe59f
  42204b:	and    DWORD PTR [ebp-0x65],ebx
  42204e:	iret   
  42204f:	push   ecx
  422050:	rcr    DWORD PTR [ebx+edi*8+0x7a5b5bb8],1
  422057:	jb     0x4220a6
  422059:	test   al,0xe6
  42205c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42205d:	xor    BYTE PTR [esi-0x2052f5e6],0x64
  422064:	xlat   BYTE PTR ds:[ebx]
  422065:	add    dl,bl
  422067:	outs   dx,DWORD PTR ds:[esi]
  422068:	mov    ebx,0x9b04b03e
  42206d:	cmp    al,BYTE PTR [ebx+0x67]
  422070:	leave  
  422071:	(bad)  
  422072:	stc    
  422073:	mov    esi,0x6938369
  422078:	sbb    eax,0x8e01a58f
  42207d:	xor    esi,0x6bcd0e2
  422083:	retf   0x7b99
  422086:	into   
  422087:	call   0x40dc:0xfce448df
  42208e:	push   0x1f586e90
  422093:	inc    edx
  422094:	lea    eax,[edi]
  422096:	cmp    ebx,eax
  422098:	inc    ebx
  422099:	aad    0x15
  42209b:	not    BYTE PTR [ebx]
  42209d:	mov    dl,dl
  42209f:	pop    eax
  4220a0:	call   0xcc72:0xb9a83e81
  4220a7:	dec    esp
  4220a8:	fnsave [eax+0x32f71c41]
  4220ae:	and    ch,BYTE PTR [edx-0x68]
  4220b1:	xchg   esp,eax
  4220b2:	rol    BYTE PTR [ecx],cl
  4220b4:	and    eax,0xf429813a
  4220b9:	in     al,dx
  4220ba:	popa   
  4220bb:	outs   dx,DWORD PTR ds:[esi]
  4220bc:	pop    ss
  4220bd:	leave  
  4220be:	cs stos BYTE PTR es:[edi],al
  4220c0:	pop    ecx
  4220c1:	dec    ebx
  4220c2:	lods   eax,DWORD PTR ds:[esi]
  4220c3:	fwait
  4220c4:	push   ebx
  4220c5:	jbe    0x4220d4
  4220c7:	or     ah,BYTE PTR [ebp-0x603fe73]
  4220cd:	mov    ecx,0xfa106e19
  4220d2:	mov    WORD PTR [edi-0x3f],gs
  4220d5:	dec    ebx
  4220d6:	adc    esp,ebx
  4220d8:	lods   al,BYTE PTR ds:[esi]
  4220d9:	aam    0x6
  4220db:	sahf   
  4220dc:	scas   eax,DWORD PTR es:[edi]
  4220dd:	sub    BYTE PTR ds:0xb61e8b4,0x72
  4220e4:	or     BYTE PTR [ebp+0x71bb77b],ah
  4220ea:	lods   eax,DWORD PTR ds:[esi]
  4220eb:	cmp    al,bh
  4220ed:	adc    DWORD PTR [ebp+0x25e3cd0f],0x1e393bcd
  4220f7:	cmc    
  4220f8:	pop    esp
  4220f9:	das    
  4220fa:	es fwait
  4220fc:	mov    al,ds:0x8b9be23f
  422101:	call   0x2ac6:0xeacffbfe
  422108:	jle    0x4220cf
  42210a:	jp     0x422150
  42210c:	rcr    BYTE PTR [edi],0x77
  42210f:	push   edi
  422110:	sub    esp,DWORD PTR [ecx-0x5e]
  422113:	call   DWORD PTR [esi]
  422115:	orps   xmm5,XMMWORD PTR [edx+0x2a]
  422119:	dec    ebp
  42211a:	or     esp,DWORD PTR [esi]
  42211c:	stc    
  42211d:	inc    ebp
  42211e:	pop    eax
  42211f:	mov    ecx,0xb88c5e23
  422124:	lea    eax,[ebp+0x42]
  422127:	aad    0xe2
  422129:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  42212b:	pop    edx
  42212c:	pop    esp
  42212d:	sbb    eax,0x7db993cd
  422132:	aam    0xc7
  422134:	jle    0x4220da
  422136:	rol    BYTE PTR [eax+ecx*2],1
  422139:	leave  
  42213a:	mov    eax,0x6cc52e86
  42213f:	hlt    
  422140:	jbe    0x422101
  422142:	cli    
  422143:	and    ch,BYTE PTR [ecx-0x5de1987b]
  422149:	leave  
  42214a:	into   
  42214b:	hlt    
  42214c:	or     DWORD PTR [ecx-0x2a],0x82ad406a
  422153:	hlt    
  422154:	nop
  422155:	jb     0x42212c
  422157:	es test cl,cl
  42215a:	fiadd  DWORD PTR [ebx]
  42215c:	dec    ebp
  42215d:	mov    esi,0x9d4c40fe
  422162:	(bad)  
  422163:	mov    dh,0x7c
  422165:	pop    es
  422166:	or     edi,DWORD PTR [ecx]
  422168:	jmp    0x4221d5
  42216a:	sbb    BYTE PTR [esi+0x50de90d3],0x7
  422171:	mov    edx,0x9dc7f7de
  422176:	js     0x4221b6
  422178:	push   cs
  422179:	adc    DWORD PTR [eax],ebx
  42217b:	nop
  42217c:	ins    DWORD PTR es:[edi],dx
  42217d:	mov    ds:0xba09aa34,eax
  422182:	lock adc esp,DWORD PTR [ebx]
  422185:	mov    dh,0x46
  422187:	push   edx
  422188:	fbld   TBYTE PTR [ecx]
  42218a:	outs   dx,BYTE PTR ds:[esi]
  42218b:	neg    edi
  42218d:	dec    edx
  42218e:	ror    edx,1
  422190:	xlat   BYTE PTR ds:[ebx]
  422191:	data16 aad 0xab
  422194:	aam    0x15
  422196:	leave  
  422197:	out    0x8a,eax
  422199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42219a:	ss icebp 
  42219c:	mov    DWORD PTR [edi+eax*4+0x1bec49d],edi
  4221a3:	popaw  
  4221a5:	xor    BYTE PTR [edi+0x277801ee],ch
  4221ab:	mov    bl,0x6a
  4221ad:	mov    esp,0x871d593c
  4221b2:	adc    DWORD PTR ds:0xd446ecdb,ebx
  4221b8:	mov    dl,0xea
  4221ba:	scas   eax,DWORD PTR es:[edi]
  4221bb:	dec    ebp
  4221bc:	mov    al,0xb6
  4221be:	in     eax,0xc
  4221c0:	inc    ebp
  4221c1:	mov    esp,0xefaa453e
  4221c6:	rol    BYTE PTR [ebx-0x7792fe52],0x81
  4221cd:	aas    
  4221ce:	sub    BYTE PTR [ebx-0x29d71e30],0xaf
  4221d5:	cmc    
  4221d6:	outs   dx,BYTE PTR ds:[esi]
  4221d7:	test   ch,cl
  4221d9:	or     bh,0x67
  4221dc:	sar    BYTE PTR fs:[esi+0x2d],1
  4221e0:	lahf   
  4221e1:	cmp    cl,ah
  4221e3:	std    
  4221e4:	xchg   esp,eax
  4221e5:	in     eax,0xeb
  4221e7:	mov    eax,0xa162b629
  4221ec:	loope  0x422268
  4221ee:	mov    edx,0xdb5658e5
  4221f3:	repz ficom DWORD PTR [ecx+0x16]
  4221f7:	sub    edi,DWORD PTR [ebx-0x4e]
  4221fa:	retf   0x617f
  4221fd:	(bad)  
  4221fe:	mov    esi,0x3772c656
  422203:	jecxz  0x422232
  422205:	hlt    
  422206:	scas   eax,DWORD PTR es:[edi]
  422207:	mov    eax,ds:0xc7314953
  42220c:	xor    dl,BYTE PTR [eax-0x4d18fa30]
  422212:	fimul  WORD PTR [ebp+ecx*8+0x19c084b4]
  422219:	jnp    0x4221ce
  42221b:	ds (bad) 
  42221d:	cmp    edi,DWORD PTR ss:[eax]
  422220:	push   0x29
  422222:	xchg   ebp,eax
  422223:	mov    ds:0xc416a4b2,eax
  422228:	pop    ebx
  422229:	sbb    eax,0x40e6f66e
  42222e:	push   edi
  42222f:	imul   ecx,DWORD PTR [esi],0xffffffe3
  422232:	fsubr  DWORD PTR [ebx]
  422234:	stc    
  422235:	fldcw  WORD PTR [edx-0x3c]
  422238:	cmp    BYTE PTR [edi+0x1e92fb24],cl
  42223e:	shl    DWORD PTR ds:0xce8ffe0,cl
  422244:	jge    0x4222b0
  422246:	jp     0x422236
  422248:	repnz dec eax
  42224a:	and    eax,0x2741c0e9
  42224f:	mov    cl,0x8c
  422251:	je     0x42225b
  422253:	pop    es
  422254:	fldcw  WORD PTR [ecx+0x37]
  422257:	sbb    DWORD PTR [ebx],ebx
  422259:	rcr    BYTE PTR [esp+ebx*1-0x59],cl
  42225d:	push   edi
  42225e:	into   
  42225f:	std    
  422260:	rol    DWORD PTR [ebx],1
  422262:	pusha  
  422263:	daa    
  422264:	in     eax,dx
  422265:	stos   BYTE PTR es:[edi],al
  422266:	jae    0x4222e1
  422268:	or     al,0x1
  42226a:	ss sub eax,0xd77b9b4
  422270:	adc    ebp,DWORD PTR [edi-0x71]
  422273:	jmp    0x2f313902
  422278:	call   0xfaf17c38
  42227d:	dec    eax
  42227e:	cdq    
  42227f:	xor    edx,edx
  422281:	add    BYTE PTR [edi],dh
  422283:	les    ecx,FWORD PTR [edx+0x3eb9c19b]
  422289:	adc    eax,0x800f3ac1
  42228e:	(bad)  
  42228f:	bound  ecx,QWORD PTR [edx+0x3c845160]
  422295:	mov    DWORD PTR [edi],esp
  422297:	cmp    al,0x7a
  422299:	jns    0x422233
  42229b:	pop    ecx
  42229c:	dec    edx
  42229d:	pop    edi
  42229e:	mov    al,BYTE PTR [ebx-0x20fa7681]
  4222a4:	mov    ah,0x49
  4222a6:	jle    0x4222f3
  4222a8:	pop    ecx
  4222a9:	sub    al,0xba
  4222ab:	icebp  
  4222ac:	sbb    ecx,ebx
  4222ae:	test   al,0x2c
  4222b0:	sub    cl,BYTE PTR [ebp-0x5dfe126]
  4222b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222b7:	push   eax
  4222b8:	xor    DWORD PTR [edx-0x39],0xffffffbb
  4222bc:	retf   
  4222bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222be:	je     0x422323
  4222c0:	aas    
  4222c1:	xchg   BYTE PTR [ecx-0x3ac977fa],bh
  4222c7:	shl    bh,0x74
  4222ca:	add    bl,BYTE PTR [ecx-0x37]
  4222cd:	mov    eax,0x58f30ced
  4222d2:	adc    al,0xb6
  4222d4:	and    ebx,DWORD PTR [esi+eiz*2]
  4222d7:	test   DWORD PTR [ecx],edx
  4222d9:	lods   al,BYTE PTR ds:[esi]
  4222da:	inc    eax
  4222db:	cli    
  4222dc:	mov    dh,0x98
  4222de:	adc    al,0x3d
  4222e0:	test   edx,ebx
  4222e2:	add    eax,0xa4304156
  4222e7:	in     al,dx
  4222e8:	sbb    eax,0x33254543
  4222ed:	adc    eax,0x8b5f5b2d
  4222f2:	sub    bh,cl
  4222f4:	fsubp  st(1),st
  4222f6:	pop    eax
  4222f7:	xchg   ecx,eax
  4222f8:	mov    eax,0x782f9e95
  4222fd:	out    dx,al
  4222fe:	stos   DWORD PTR es:[edi],eax
  4222ff:	jb     0x422292
  422301:	adc    ch,bh
  422303:	sbb    BYTE PTR [edx-0x6508eeb],ah
  422309:	aas    
  42230a:	in     eax,0xb7
  42230c:	inc    ebp
  42230d:	push   eax
  42230e:	fmul   QWORD PTR [ebx+0x16]
  422311:	or     DWORD PTR [ebx+0x1f],esp
  422314:	out    dx,eax
  422315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422316:	dec    eax
  422317:	mov    ebx,0x8fab42ae
  42231c:	bound  ebp,QWORD PTR [ebp+ebp*1+0x7cc3ba00]
  422323:	inc    esi
  422324:	and    bh,BYTE PTR [edi]
  422326:	ret    
  422327:	stos   DWORD PTR es:[edi],eax
  422328:	(bad)  
  422329:	lock add DWORD PTR [ecx+0x7e],ecx
  42232d:	dec    eax
  42232e:	mov    esp,0x3c0b729a
  422333:	out    0x7f,eax
  422335:	cwde   
  422336:	adc    al,BYTE PTR [ebx-0x178045f1]
  42233c:	or     eax,0xf09196b
  422341:	pop    eax
  422342:	lods   eax,DWORD PTR ds:[esi]
  422343:	hlt    
  422344:	fcmovu st,st(6)
  422346:	loopne 0x42238c
  422348:	out    0x90,eax
  42234a:	jg     0x4222d1
  42234c:	sti    
  42234d:	(bad)  
  42234e:	mov    eax,0x4eb0b845
  422353:	mov    al,ds:0x527427bd
  422358:	das    
  422359:	dec    esi
  42235a:	loopne 0x422341
  42235c:	les    ebp,FWORD PTR [ebx-0x68]
  42235f:	(bad)  [ebp-0x140bc256]
  422365:	rcl    BYTE PTR [edi-0x6f],cl
  422368:	(bad)  
  422369:	mov    ebx,0x9db58b5d
  42236e:	or     DWORD PTR [esi-0x4a],eax
  422371:	and    BYTE PTR [edi-0x7632376d],bh
  422377:	jge    0x4223e9
  422379:	add    bh,bl
  42237b:	mov    ch,0x67
  42237d:	sub    edx,esp
  42237f:	xor    eax,0x2a39777a
  422384:	mov    ah,0x20
  422386:	push   ebx
  422387:	pop    ebx
  422388:	sbb    ebp,ebp
  42238a:	std    
  42238b:	or     al,0x99
  42238d:	loope  0x4223fc
  42238f:	sbb    ebx,DWORD PTR [edx+0x6f]
  422392:	mov    cl,0x4f
  422394:	pusha  
  422395:	jmp    0x3b49:0xacb35a44
  42239c:	imul   ebx,eax,0xe3a68334
  4223a2:	dec    ebx
  4223a3:	repz pop edi
  4223a5:	inc    edi
  4223a6:	xchg   DWORD PTR [edi+0x3a],ebx
  4223a9:	fisttp DWORD PTR [edi-0x25]
  4223ac:	mov    ebp,0xbe349336
  4223b1:	in     eax,0x94
  4223b3:	or     DWORD PTR ds:0x10c58b2c,eax
  4223b9:	repnz mov edx,0xe9aa86d5
  4223bf:	inc    edi
  4223c0:	jmp    0xfeb3:0xf6805dd3
  4223c7:	fcomp  DWORD PTR [eax]
  4223c9:	jp     0x4223ce
  4223cb:	imul   ebx,DWORD PTR [eax-0x4],0xffffffc2
  4223cf:	sub    ah,BYTE PTR [eax-0x17]
  4223d2:	sbb    al,0x44
  4223d4:	loope  0x422398
  4223d6:	imul   ebp,ebp,0xfd7fdf7
  4223dc:	jae    0x4223d5
  4223de:	push   cs
  4223df:	xor    BYTE PTR [edx+0x3f2a737a],al
  4223e5:	(bad)  
  4223e6:	fcomp  DWORD PTR [ebp+0x59]
  4223e9:	xchg   DWORD PTR [esi+0x2b989303],esp
  4223ef:	jae    0x422426
  4223f1:	lahf   
  4223f2:	jae    0x42238c
  4223f4:	sub    eax,0x98e5b593
  4223f9:	mov    dl,0x84
  4223fb:	dec    eax
  4223fc:	mov    dl,0xf5
  4223fe:	mov    dl,0xee
  422400:	in     eax,dx
  422401:	cmc    
  422402:	pop    edi
  422403:	iret   
  422404:	and    BYTE PTR [esi+0x7c],al
  422407:	mov    eax,ds:0x24a02d3a
  42240c:	inc    edx
  42240d:	jne    0x4223ae
  42240f:	fimul  DWORD PTR [ecx+0x3236a84f]
  422415:	push   eax
  422416:	xlat   BYTE PTR ds:[ebx]
  422417:	ffree  st(2)
  422419:	loopne 0x4223d5
  42241b:	dec    esi
  42241c:	rol    ebx,1
  42241e:	sub    esp,ebx
  422420:	push   ebp
  422421:	dec    ebx
  422422:	sub    dh,BYTE PTR [ebx]
  422424:	mov    esi,0x36eab30b
  422429:	push   0xd0628ac5
  42242e:	sbb    ebx,ebx
  422430:	js     0x42244f
  422432:	ss cli 
  422434:	imul   ecx,DWORD PTR [eax+0x3df0dc0e],0xffffffc3
  42243b:	std    
  42243c:	fisttp QWORD PTR [esi-0x73ced607]
  422442:	cmp    al,0xff
  422445:	imul   ecx,DWORD PTR ds:0x2f63ec42,0x55
  42244c:	mov    DWORD PTR [ebp+ebp*1+0x61],edx
  422450:	pushf  
  422451:	pop    esp
  422452:	and    edi,edi
  422454:	inc    esi
  422455:	js     0x42247f
  422457:	popf   
  422458:	arpl   WORD PTR [esi],dx
  42245a:	sbb    al,0xe8
  42245c:	enter  0xef82,0x8b
  422460:	(bad)  
  422461:	jmp    0xb773:0xcc4ca1d6
  422468:	or     eax,0xc03fc68e
  42246d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42246e:	push   ss
  42246f:	test   al,0xab
  422472:	mov    WORD PTR [esi+0x6],ds
  422475:	stos   BYTE PTR es:[edi],al
  422476:	sbb    BYTE PTR [edx],bh
  422478:	loopne 0x422475
  42247a:	outs   dx,BYTE PTR ds:[esi]
  42247b:	dec    eax
  42247c:	pop    ds
  42247d:	jge    0x422461
  42247f:	jne    0x4224d2
  422481:	mul    DWORD PTR [edi+ebp*1-0x18]
  422485:	fdiv   DWORD PTR [edx-0x27]
  422488:	dec    esp
  422489:	scas   al,BYTE PTR es:[edi]
  42248a:	push   eax
  42248b:	loop   0x422483
  42248d:	arpl   WORD PTR [edx],dx
  42248f:	add    BYTE PTR [ebp+0x7a],0x48
  422493:	push   esi
  422494:	out    0x11,al
  422496:	popf   
  422497:	(bad)  
  422498:	jo     0x4224ed
  42249a:	or     ebp,DWORD PTR [ebp-0x6d]
  42249d:	xor    bh,BYTE PTR [edx]
  42249f:	out    0xd0,eax
  4224a1:	add    DWORD PTR [esp+esi*4-0xe],0x14
  4224a6:	mov    eax,0x77e1d963
  4224ab:	addr16 test edi,0xb8f5026d
  4224b2:	mov    dl,0x60
  4224b4:	jo     0x4224d9
  4224b6:	adc    BYTE PTR [eax-0x2c6793b2],ah
  4224bc:	in     al,dx
  4224bd:	aas    
  4224be:	rcr    BYTE PTR [ecx],0x7f
  4224c1:	out    0x81,al
  4224c3:	dec    ebp
  4224c4:	mov    edx,0x9f01208e
  4224c9:	ret    0x5817
  4224cc:	adc    ecx,ecx
  4224ce:	test   DWORD PTR ss:[edx-0x13],edx
  4224d2:	sbb    edi,DWORD PTR [ebx+0x7c]
  4224d5:	sub    ecx,DWORD PTR [edi+edx*2]
  4224d8:	xor    dl,0x1d
  4224db:	stos   BYTE PTR es:[edi],al
  4224dc:	call   0x7cc1:0xcd6043e4
  4224e3:	retf   
  4224e4:	mov    dl,0xcd
  4224e6:	scas   al,BYTE PTR es:[edi]
  4224e7:	xchg   edi,eax
  4224e8:	xchg   esp,ebp
  4224ea:	add    edx,DWORD PTR [esi-0x746edefc]
  4224f0:	and    ecx,0x695ec204
  4224f6:	push   esp
  4224f7:	dec    edx
  4224f8:	pop    ecx
  4224f9:	pop    esi
  4224fa:	push   eax
  4224fb:	jnp    0x422544
  4224fd:	sbb    DWORD PTR [ebp+0x3581637e],eax
  422503:	clc    
  422504:	fisubr DWORD PTR [edx+0x9]
  422507:	inc    DWORD PTR ds:0xd9d26a2d
  42250d:	adc    si,bx
  422510:	dec    ecx
  422511:	mov    eax,DWORD PTR [esi]
  422513:	and    al,0x1a
  422515:	int    0xb3
  422517:	and    al,0x9c
  422519:	push   esi
  42251a:	out    dx,eax
  42251b:	(bad)  
  42251c:	(bad)  
  42251d:	aam    0x5b
  42251f:	inc    ebx
  422520:	or     eax,0x56663066
  422525:	push   ds
  422526:	adc    al,BYTE PTR [ebp-0x41c23338]
  42252c:	dec    eax
  42252d:	and    al,0xb0
  42252f:	mov    edi,0xfce8da5
  422534:	add    dh,BYTE PTR [ecx]
  422536:	inc    esp
  422537:	pop    DWORD PTR [ecx-0x26a7696d]
  42253d:	xor    cl,BYTE PTR [esp+ecx*1]
  422540:	cmc    
  422541:	(bad)  
  422542:	push   edi
  422543:	xchg   ebp,eax
  422544:	repnz sti 
  422546:	jmp    0x84e750b2
  42254b:	fxam   
  42254d:	dec    ebp
  42254e:	jb     0x4224de
  422550:	and    eax,0x40e57514
  422555:	arpl   WORD PTR gs:[esi+0x3f],ax
  422559:	xchg   ebp,edx
  42255b:	out    0xaa,al
  42255d:	fwait
  42255e:	(bad)  
  42255f:	pop    edi
  422560:	call   0x1fdbd25e
  422565:	aaa    
  422566:	ds stos BYTE PTR es:[edi],al
  422568:	jle    0x42252a
  42256a:	fwait
  42256b:	cmp    eax,DWORD PTR [edx]
  42256d:	mov    ch,0x60
  42256f:	das    
  422570:	idiv   ebp
  422572:	cwde   
  422573:	cmp    BYTE PTR [ebp-0x7b],ah
  422576:	push   ecx
  422577:	dec    esi
  422578:	out    dx,al
  422579:	xchg   esp,eax
  42257a:	cmp    DWORD PTR [ebp+eax*2-0x54],esp
  42257e:	int    0x2
  422580:	int3   
  422581:	(bad)  
  422582:	mov    ch,BYTE PTR [ebx]
  422584:	push   ss
  422585:	pop    esp
  422586:	int3   
  422587:	(bad)  
  422588:	jmp    0x422563
  42258a:	dec    ecx
  42258b:	repnz cli 
  42258d:	jmp    DWORD PTR [ecx+0x6c7fc4c2]
  422593:	leave  
  422594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422595:	rol    BYTE PTR [ecx-0x393bdbe4],0xe0
  42259c:	sahf   
  42259d:	jmp    0x4225de
  42259f:	(bad)  [edi-0x71]
  4225a2:	add    bh,0xec
  4225a5:	mov    dh,0x4e
  4225a7:	or     al,0xab
  4225a9:	mov    ebp,0x8a3311fa
  4225ae:	add    bl,al
  4225b0:	jae    0x422534
  4225b2:	lods   eax,DWORD PTR ds:[esi]
  4225b3:	rcr    BYTE PTR [eax],cl
  4225b5:	add    DWORD PTR [ebx],esi
  4225b7:	outs   dx,DWORD PTR ds:[esi]
  4225b8:	sub    esp,esi
  4225ba:	mov    ah,0x95
  4225bc:	hlt    
  4225bd:	push   edi
  4225be:	jo     0x4225e1
  4225c0:	retf   0x67d7
  4225c3:	xchg   esp,eax
  4225c4:	inc    eax
  4225c5:	out    dx,al
  4225c6:	jecxz  0x4225fb
  4225c8:	bound  edx,QWORD PTR [edx-0x1f717fcf]
  4225ce:	inc    eax
  4225cf:	mov    al,ds:0xf4a2f0b8
  4225d4:	xlat   BYTE PTR ds:[ebx]
  4225d5:	push   esp
  4225d6:	push   edi
  4225d7:	mov    bl,BYTE PTR [edx-0x12]
  4225da:	aad    0x2c
  4225dc:	stc    
  4225dd:	fiadd  DWORD PTR [esi+0x10]
  4225e0:	xchg   ebp,eax
  4225e1:	xor    DWORD PTR [esi],ecx
  4225e3:	shl    ebx,cl
  4225e5:	das    
  4225e6:	hlt    
  4225e7:	mov    dl,0x42
  4225e9:	adc    DWORD PTR [edi+0x12],esp
  4225ec:	nop
  4225ed:	xchg   edi,eax
  4225ee:	or     al,0xbf
  4225f0:	loop   0x422588
  4225f2:	(bad)  
  4225f3:	xlat   BYTE PTR ds:[ebx]
  4225f4:	scas   al,BYTE PTR es:[edi]
  4225f5:	aaa    
  4225f6:	inc    esi
  4225f7:	stc    
  4225f8:	mov    dl,0xee
  4225fa:	int3   
  4225fb:	inc    ebx
  4225fc:	gs cwde 
  4225fe:	popf   
  4225ff:	out    0xca,eax
  422601:	fisttp WORD PTR [ebx+0x1b761301]
  422607:	data16 jg 0x4225b1
  42260a:	hlt    
  42260b:	mov    esi,0x2f366051
  422610:	nop
  422611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422612:	clc    
  422613:	lods   al,BYTE PTR ds:[esi]
  422614:	pop    edx
  422615:	lahf   
  422616:	dec    edx
  422617:	loop   0x42260d
  422619:	mov    eax,0x5a1b99e3
  42261e:	(bad)
  422621:	or     al,0x2b
  422623:	sahf   
  422624:	add    al,0xa5
  422626:	jge    0x4225aa
  422628:	rcl    BYTE PTR [ebx],0xea
  42262b:	imul   ebp,DWORD PTR [ebx],0x7d7cabe8
  422631:	ror    cl,1
  422633:	into   
  422634:	mov    DWORD PTR [ecx-0x70],edx
  422637:	adc    ah,0x52
  42263a:	out    dx,al
  42263b:	add    eax,0x4a17e3cc
  422640:	nop
  422641:	inc    ebp
  422642:	jnp    0x422604
  422644:	mov    al,0x3e
  422646:	jg     0x422636
  422648:	sub    ebx,DWORD PTR [eax-0x4bb90278]
  42264e:	xchg   esp,eax
  42264f:	out    dx,al
  422650:	and    eax,0x15d9c55e
  422655:	cmp    dh,BYTE PTR [esi]
  422657:	push   eax
  422658:	lods   al,BYTE PTR ds:[esi]
  422659:	scas   al,BYTE PTR es:[edi]
  42265a:	mov    bh,BYTE PTR [edx-0x48]
  42265d:	and    eax,0x42959fc8
  422662:	sub    BYTE PTR [edx+0x5c],ah
  422665:	jmp    0xcee2554b
  42266a:	rol    BYTE PTR ds:0xaf143ae8,1
  422670:	les    ecx,FWORD PTR [ebx-0x483582bf]
  422676:	test   DWORD PTR [ecx+ecx*1],eax
  422679:	sbb    al,0xcb
  42267b:	jae    0x422630
  42267d:	pop    esp
  42267e:	test   al,0x5a
  422680:	pop    edx
  422681:	add    eax,0x55144dbe
  422686:	psrld  mm3,QWORD PTR [eax]
  422689:	lds    edx,FWORD PTR [ecx+0x54]
  42268c:	jp     0x422684
  42268e:	inc    ecx
  42268f:	stos   BYTE PTR es:[edi],al
  422690:	pusha  
  422691:	jecxz  0x422690
  422693:	xchg   edi,eax
  422694:	and    bl,BYTE PTR [ecx]
  422696:	lea    ebp,[ecx+0x52368ce4]
  42269c:	iret   
  42269d:	sub    DWORD PTR [ebp+0x51b3b431],esi
  4226a3:	aaa    
  4226a4:	rcr    ebx,1
  4226a6:	mov    cl,0xf8
  4226a8:	scas   eax,DWORD PTR es:[edi]
  4226a9:	dec    edx
  4226aa:	cwde   
  4226ab:	shr    BYTE PTR [esi-0x6a],0x62
  4226af:	push   esi
  4226b0:	rol    bl,0xac
  4226b3:	into   
  4226b4:	cli    
  4226b5:	jnp    0x42264d
  4226b7:	ins    BYTE PTR es:[edi],dx
  4226b8:	retf   
  4226b9:	lods   eax,DWORD PTR ss:[esi]
  4226bb:	mov    ds:0xf2124a12,eax
  4226c0:	iret   
  4226c1:	add    dl,BYTE PTR [ebx+esi*1-0x44868d6b]
  4226c8:	mov    cl,0x6a
  4226ca:	mov    dh,0x5a
  4226cc:	adc    DWORD PTR [edi-0x36],0xdbca2b7
  4226d3:	mov    edi,0xd8680a04
  4226d8:	stos   DWORD PTR es:[edi],eax
  4226d9:	mov    BYTE PTR [eax],0x25
  4226dc:	adc    BYTE PTR [ecx+0x27],bl
  4226df:	or     eax,0xd76cfd7
  4226e4:	or     ah,bh
  4226e6:	clc    
  4226e7:	mov    BYTE PTR [edi+0x371cd6d4],bh
  4226ed:	sbb    ah,BYTE PTR [edi]
  4226ef:	sub    cl,BYTE PTR [ebx+0x10]
  4226f2:	lahf   
  4226f3:	sar    BYTE PTR [ebp+0xf8b8ae7],1
  4226f9:	fdiv   QWORD PTR [edi]
  4226fb:	mov    BYTE PTR [ecx-0xf34a82],dl
  422701:	sbb    BYTE PTR [ecx+0x5a],cl
  422704:	loope  0x42271c
  422706:	xor    edx,DWORD PTR [esi]
  422708:	js     0x422728
  42270a:	adc    eax,0xc18480c
  42270f:	jmp    0xda9c:0x59a2c77
  422716:	hlt    
  422717:	fst    DWORD PTR [eax-0x61]
  42271a:	add    al,0xe
  42271c:	lahf   
  42271d:	and    DWORD PTR [edi],ebp
  42271f:	lods   al,BYTE PTR ds:[esi]
  422720:	test   BYTE PTR [edi-0x53deb298],ah
  422726:	hlt    
  422727:	lods   eax,DWORD PTR ds:[esi]
  422728:	scas   al,BYTE PTR es:[edi]
  422729:	mov    bl,0x32
  42272b:	(bad)  
  42272c:	push   edi
  42272d:	lsl    edx,WORD PTR [ebp-0x7e111aec]
  422734:	cmp    ecx,DWORD PTR [edi+0x1a]
  422737:	shl    esp,cl
  422739:	sub    BYTE PTR [ebp*4-0xc8decee],dh
  422740:	das    
  422741:	push   ds
  422742:	adc    DWORD PTR [ebp-0x5dda1be1],edx
  422748:	push   ds
  422749:	push   cs
  42274a:	or     eax,0xfd93ba29
  42274f:	push   eax
  422750:	jmp    0x4226e0
  422752:	das    
  422753:	pop    ss
  422754:	icebp  
  422755:	cmp    DWORD PTR [ecx-0x1b57fbee],ecx
  42275b:	sbb    ch,BYTE PTR [edi-0x5f]
  42275e:	and    al,0xd1
  422760:	push   esp
  422761:	jl     0x42278c
  422763:	sbb    ecx,edi
  422765:	xor    bh,bh
  422767:	jne    0x4226fe
  422769:	mov    bh,0xa9
  42276b:	ins    DWORD PTR es:[edi],dx
  42276c:	jmp    DWORD PTR [ecx-0x2a]
  42276f:	or     al,0xc9
  422771:	push   eax
  422772:	in     eax,dx
  422773:	mov    ah,BYTE PTR [esi+eiz*2]
  422776:	inc    ebp
  422777:	arpl   WORD PTR [edx+0x5f],dx
  42277a:	jae    0x422731
  42277c:	inc    esi
  42277d:	mov    bl,0x95
  42277f:	xor    dl,BYTE PTR [ebx]
  422781:	push   ecx
  422782:	or     edx,DWORD PTR [edx-0x7ba2b143]
  422788:	lock pop edx
  42278a:	cmp    ebp,esp
  42278c:	dec    ebp
  42278d:	rcr    DWORD PTR [esi+0x54],0xb6
  422791:	aad    0xa8
  422793:	scas   al,BYTE PTR es:[edi]
  422794:	xor    BYTE PTR [edx+0x1945e580],0xe7
  42279b:	adc    eax,ebx
  42279d:	or     BYTE PTR [edx-0x230d7d6b],ah
  4227a3:	add    DWORD PTR [ebx-0x69faafda],edx
  4227a9:	pop    edi
  4227aa:	test   DWORD PTR [edi],0x7b43aab1
  4227b0:	imul   edx,DWORD PTR [ecx],0x37
  4227b3:	xchg   ebx,eax
  4227b4:	and    dl,cl
  4227b6:	aad    0x49
  4227b8:	test   eax,0x57cd6b7f
  4227bd:	call   DWORD PTR [esi+0x5c5efdab]
  4227c3:	enter  0xfb7c,0xa2
  4227c7:	cmp    DWORD PTR [esi-0x3e62fed],edi
  4227cd:	in     al,0x49
  4227cf:	je     0x42281a
  4227d1:	into   
  4227d2:	fidivr DWORD PTR [eax+0x2d129c39]
  4227d8:	test   al,0xda
  4227da:	stc    
  4227db:	jne    0x4227fd
  4227dd:	mov    bh,0xef
  4227df:	jb     0x4227c8
  4227e1:	xchg   esi,eax
  4227e2:	iret   
  4227e3:	and    esi,DWORD PTR [ebp+0x17]
  4227e6:	cli    
  4227e7:	sub    al,0x8b
  4227e9:	adc    ecx,ebp
  4227eb:	icebp  
  4227ec:	mov    edi,0xbf088a54
  4227f1:	push   ebp
  4227f2:	cwde   
  4227f3:	pop    edi
  4227f4:	fidivr DWORD PTR [esi-0x7ac53ce5]
  4227fa:	daa    
  4227fb:	sub    ebp,DWORD PTR [edx-0x479faae2]
  422801:	mov    BYTE PTR [eax],dh
  422803:	jge    0x422833
  422805:	xchg   BYTE PTR [ecx-0x32615045],cl
  42280b:	jae    0x4227b9
  42280d:	fisubr DWORD PTR [esi+0x7a]
  422810:	dec    eax
  422811:	pop    esi
  422812:	aad    0xc3
  422814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422815:	cmc    
  422816:	loope  0x42280f
  422818:	into   
  422819:	mov    ebx,0xa3023cf
  42281e:	pop    esp
  42281f:	cmp    DWORD PTR [ebx+0x476697b7],eax
  422825:	ds test eax,0xdecb80dc
  42282b:	test   al,0xfd
  42282d:	adc    ebx,DWORD PTR [ebx]
  42282f:	daa    
  422830:	repnz xor eax,0x77ac5a33
  422836:	in     al,dx
  422837:	xchg   edx,eax
  422838:	mov    ch,0xa
  42283a:	xchg   edi,eax
  42283b:	call   edi
  42283d:	in     eax,0x6f
  42283f:	mov    ebx,0x7f6baaf9
  422844:	mov    ss,WORD PTR ds:0xabd61b7d
  42284a:	call   0x4f27b8d4
  42284f:	pop    es
  422850:	inc    edi
  422851:	enter  0x963b,0xe7
  422855:	aas    
  422856:	jge    0x4227ee
  422858:	inc    esp
  422859:	pop    edi
  42285a:	out    0xa1,al
  42285c:	mov    WORD PTR [ecx+0x50],fs
  42285f:	pop    ds
  422860:	adc    dl,dh
  422862:	inc    edx
  422863:	push   ebx
  422864:	push   ecx
  422865:	pop    edi
  422866:	int    0xd8
  422868:	(bad)  
  422869:	neg    BYTE PTR [edx+0xb422118]
  42286f:	fiadd  DWORD PTR [eax+0x23]
  422872:	loopne 0x422858
  422874:	push   ds
  422875:	push   es
  422876:	xor    dl,0x27
  422879:	inc    ecx
  42287a:	js     0x422854
  42287c:	rcr    BYTE PTR [ecx+0x11],cl
  42287f:	add    eax,0x6ba80bc5
  422884:	mov    BYTE PTR [esi*8-0x69d5c810],al
  42288b:	and    DWORD PTR [ebx+0x69814c2a],edi
  422891:	dec    eax
  422892:	inc    ecx
  422893:	std    
  422894:	pop    edi
  422895:	adc    ebp,DWORD PTR [eax+0x7a3ecbbf]
  42289b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42289c:	fnstcw WORD PTR [ecx]
  42289e:	push   ebx
  42289f:	stos   BYTE PTR es:[edi],al
  4228a0:	adc    ax,sp
  4228a3:	pop    ebp
  4228a4:	je     0x422861
  4228a6:	and    BYTE PTR [ebx+0x494b180f],dh
  4228ac:	and    dl,bl
  4228ae:	mov    ah,0x32
  4228b0:	mov    ds:0x6499b2cc,al
  4228b5:	pop    ecx
  4228b6:	adc    ebp,DWORD PTR [ecx-0x31]
  4228b9:	jnp    0x42292f
  4228bb:	xchg   ebp,eax
  4228bc:	inc    ebx
  4228bd:	and    BYTE PTR ds:0x45fd71d2,bh
  4228c3:	mov    dl,0xc0
  4228c5:	cwde   
  4228c6:	nop
  4228c7:	mov    WORD PTR [ebx],?
  4228c9:	call   0x51cd:0xf75f7857
  4228d0:	add    al,0x36
  4228d2:	fsubr  st,st(5)
  4228d4:	fld    TBYTE PTR [ebx+0x7e2aef1a]
  4228da:	jnp    0x422865
  4228dc:	cld    
  4228dd:	aas    
  4228de:	(bad)  
  4228df:	int3   
  4228e0:	cmc    
  4228e1:	add    eax,0xa3868064
  4228e6:	xor    esp,0xffffffab
  4228e9:	mov    dh,0xfb
  4228eb:	dec    ebx
  4228ec:	data16 sub al,0xc0
  4228ef:	sbb    DWORD PTR [edx-0x4d09a24f],ecx
  4228f5:	and    BYTE PTR [esi],al
  4228f7:	mov    DWORD PTR [eax+0x2d],ebx
  4228fa:	push   ds
  4228fb:	xchg   esp,eax
  4228fc:	push   cs
  4228fd:	fst    QWORD PTR [ebx-0x2bf57e0f]
  422903:	(bad)  
  422904:	inc    edx
  422905:	jb     0x422910
  422907:	mov    esp,gs
  422909:	sahf   
  42290a:	aas    
  42290b:	pop    ebp
  42290c:	jecxz  0x4228ef
  42290e:	je     0x42298c
  422910:	or     eax,0x178d09ed
  422915:	mov    ds:0xd1ec7e40,al
  42291a:	jb     0x422956
  42291c:	or     cl,ah
  42291e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42291f:	mov    ebp,0x5450472a
  422924:	mov    bh,0x17
  422926:	mov    ebp,0x82e3dcd9
  42292b:	stos   DWORD PTR es:[edi],eax
  42292c:	push   edx
  42292d:	mov    ch,0xbf
  42292f:	clc    
  422930:	jae    0x4229a3
  422932:	inc    esi
  422933:	xor    eax,0x9d25dc99
  422938:	jns    0x4228cc
  42293a:	(bad)  [edx-0x6f7f3841]
  422940:	test   BYTE PTR [ebp+esi*8-0x1b],al
  422944:	clc    
  422945:	sbb    eax,edx
  422947:	and    eax,0xcd789118
  42294c:	jb     0x4229ba
  42294e:	lods   al,BYTE PTR ds:[esi]
  42294f:	icebp  
  422950:	mov    bh,0xd1
  422952:	mov    eax,0x1b91c9d4
  422957:	out    0x42,eax
  422959:	cli    
  42295a:	mov    ?,WORD PTR ds:0x8d9a1993
  422960:	mov    al,0x11
  422962:	in     eax,dx
  422963:	xlat   BYTE PTR ds:[ebx]
  422964:	xor    ebp,DWORD PTR ds:0x94bb78ad
  42296a:	mov    esi,0xdf1ea397
  42296f:	fstp   TBYTE PTR [edx-0x57]
  422972:	jne    0x4229c5
  422974:	and    esp,ebx
  422976:	add    eax,0x53aa7f9a
  42297b:	inc    ecx
  42297c:	out    0x2,al
  42297e:	add    ah,BYTE PTR [edx]
  422980:	(bad)  
  422981:	sbb    eax,0x903409
  422986:	arpl   WORD PTR [edx],ax
  422988:	cmp    DWORD PTR [edx+0x4],edi
  42298b:	mov    ch,0x1b
  42298d:	sub    DWORD PTR [ecx],0xeb7ade0e
  422993:	inc    ebx
  422994:	mov    cl,0x3
  422996:	retf   
  422997:	mov    ebx,0xa7c6566a
  42299c:	jecxz  0x422929
  42299e:	sub    DWORD PTR [ebp+eiz*4-0x39],ebp
  4229a2:	mov    edx,0x23abbae5
  4229a7:	cmp    dl,BYTE PTR [ebx]
  4229a9:	clc    
  4229aa:	push   ss
  4229ab:	dec    eax
  4229ac:	outs   dx,BYTE PTR ds:[esi]
  4229ad:	out    0xfc,al
  4229af:	sbb    BYTE PTR [ecx],cl
  4229b1:	cli    
  4229b2:	sub    DWORD PTR [ecx-0x1d],edx
  4229b5:	ins    DWORD PTR es:[edi],dx
  4229b6:	mov    eax,0x54c15b3d
  4229bb:	jle    0x42299d
  4229bd:	pop    es
  4229be:	xchg   DWORD PTR [esi-0x7c],edx
  4229c1:	in     eax,0xb4
  4229c3:	retf   
  4229c4:	out    dx,eax
  4229c5:	xchg   DWORD PTR [ecx+0x4a71d605],ebx
  4229cb:	popa   
  4229cc:	sub    ebx,DWORD PTR [ecx]
  4229ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229cf:	scas   al,BYTE PTR es:[edi]
  4229d0:	out    0x54,eax
  4229d2:	mov    edi,0x51d685e4
  4229d7:	int    0x5a
  4229d9:	addr16 inc eax
  4229db:	jg     0x4229ae
  4229dd:	fisttp WORD PTR [edi+esi*1+0x1a]
  4229e1:	pop    esi
  4229e2:	adc    al,0x12
  4229e4:	imul   edx,esi,0x52
  4229e7:	std    
  4229e8:	das    
  4229e9:	jmp    0x4229f5
  4229eb:	je     0x4229a5
  4229ed:	into   
  4229ee:	sub    eax,0xa02f845c
  4229f3:	or     DWORD PTR gs:[ebx],esi
  4229f6:	mov    esi,0x8fc0c058
  4229fb:	push   ebx
  4229fc:	and    ch,BYTE PTR [esi-0x1feec1d5]
  422a02:	stos   DWORD PTR es:[edi],eax
  422a03:	lock js 0x4229ab
  422a06:	xchg   ebx,eax
  422a07:	jle    0x422a74
  422a09:	mov    edi,0x6cd07970
  422a0e:	jb     0x422a42
  422a10:	fstp   QWORD PTR ds:0xbc19ae60
  422a16:	or     BYTE PTR [ebx+0x3b],bh
  422a19:	mov    bh,BYTE PTR [edx-0x68]
  422a1c:	addr16 xchg esi,eax
  422a1e:	inc    ebp
  422a1f:	hlt    
  422a20:	outs   dx,BYTE PTR ds:[esi]
  422a21:	and    al,0x35
  422a23:	repz gs jle 0x422a13
  422a27:	push   0x71
  422a29:	cmp    edi,DWORD PTR [edi]
  422a2b:	dec    edi
  422a2c:	jns    0x422a92
  422a2e:	add    bl,BYTE PTR [edi+0x66]
  422a31:	repz call 0xe34d:0x41038402
  422a39:	pop    ecx
  422a3b:	jp     0x422a31
  422a3d:	repz dec ecx
  422a3f:	ds ins DWORD PTR es:[edi],dx
  422a41:	push   esp
  422a42:	out    0xe4,eax
  422a44:	jecxz  0x422a62
  422a46:	push   ebx
  422a47:	xlat   BYTE PTR ds:[ebx]
  422a48:	fisttp DWORD PTR [esi-0x2b]
  422a4b:	je     0x4229d5
  422a4d:	fimul  DWORD PTR [esi]
  422a4f:	adc    DWORD PTR [ecx],ecx
  422a51:	xchg   ebp,eax
  422a52:	sar    esp,0x3d
  422a55:	adc    dh,ah
  422a57:	outs   dx,BYTE PTR ds:[esi]
  422a58:	adc    eax,edx
  422a5a:	inc    ebp
  422a5b:	ss cmp al,0x3b
  422a5e:	iret   
  422a5f:	xchg   edi,eax
  422a60:	push   edx
  422a61:	adc    bh,bh
  422a63:	inc    esi
  422a64:	out    dx,al
  422a65:	int3   
  422a66:	and    DWORD PTR [ebp+0x1cddf43a],esp
  422a6c:	in     al,0x71
  422a6e:	in     eax,dx
  422a6f:	mov    bl,0xce
  422a71:	adc    dl,BYTE PTR [ebx+0x45]
  422a74:	jo     0x422a93
  422a76:	push   es
  422a77:	addr16 stc 
  422a79:	mov    ds:0x931c2f3a,al
  422a7e:	push   ds
  422a7f:	(bad)  
  422a80:	stc    
  422a81:	xchg   esi,eax
  422a82:	lea    ebp,[ebp+eiz*1-0x5b9898eb]
  422a89:	mov    al,0x97
  422a8b:	push   0xffffffd4
  422a8d:	mov    bh,0x88
  422a8f:	cmp    BYTE PTR [ecx],0xd0
  422a92:	out    0x4a,eax
  422a94:	mov    eax,ds:0x3ce5e85b
  422a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a9a:	jne    0x422a45
  422a9c:	mov    dl,0xbc
  422a9e:	pop    eax
  422a9f:	loope  0x422a31
  422aa1:	cdq    
  422aa2:	dec    ebp
  422aa3:	ret    0xc7a3
  422aa6:	add    edi,DWORD PTR [ecx]
  422aa8:	jbe    0x422a47
  422aaa:	test   BYTE PTR [ebx+edi*1-0x51c9e7a4],0x67
  422ab2:	sbb    eax,0x35ac3d79
  422ab7:	jo     0x422a66
  422ab9:	jbe    0x422b36
  422abb:	adc    al,0xc0
  422abd:	adc    eax,0x3dc50cf5
  422ac2:	scas   eax,DWORD PTR es:[edi]
  422ac3:	sub    ebx,edx
  422ac5:	push   edi
  422ac6:	(bad)  
  422ac7:	cwde   
  422ac8:	ds cmp bh,ah
  422acb:	shr    bl,0xc2
  422ace:	imul   edi,DWORD PTR [edx+edx*4-0x25a1654d],0xffffffe4
  422ad6:	(bad)  
  422ad7:	mov    esi,ebp
  422ad9:	cmp    DWORD PTR [esi-0x22dab7d7],0xf1ce883c
  422ae3:	add    DWORD PTR [ecx-0x6af20a5],ebp
  422ae9:	lea    esp,[edx+0x3bbc633]
  422aef:	or     BYTE PTR [ebp+0x1f],0x1f
  422af3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422af4:	(bad)  
  422af5:	and    edi,ebp
  422af7:	gs push 0x1d
  422afa:	rcl    DWORD PTR [ecx-0x2d236418],cl
  422b00:	jge    0x422ab6
  422b02:	mov    esp,0x94638f06
  422b07:	dec    edi
  422b08:	cdq    
  422b09:	ja     0x422b11
  422b0b:	sbb    bh,BYTE PTR [edx-0x5aec0426]
  422b11:	or     BYTE PTR [esi],al
  422b13:	(bad)  
  422b15:	fadd   QWORD PTR [esi+0xe59b06a]
  422b1b:	sahf   
  422b1c:	fsubr  st(0),st
  422b1e:	and    cl,BYTE PTR [ecx-0x596bde01]
  422b24:	jmp    0x422b6a
  422b26:	xor    eax,0x9ca185a6
  422b2b:	in     eax,dx
  422b2c:	stos   DWORD PTR es:[edi],eax
  422b2d:	dec    edi
  422b2e:	cmp    ebx,DWORD PTR ds:0x9936eadf
  422b34:	jge    0x422b80
  422b36:	es aaa 
  422b38:	or     al,0x39
  422b3a:	idiv   ecx
  422b3c:	shr    bl,0x9f
  422b3f:	push   edi
  422b40:	mov    cl,0xfd
  422b42:	in     eax,dx
  422b43:	loope  0x422bb9
  422b45:	test   eax,0x574fda5c
  422b4a:	(bad)  
  422b4c:	int    0x1c
  422b4e:	dec    edx
  422b4f:	out    dx,al
  422b50:	mov    al,0xc2
  422b52:	ja     0x422b82
  422b54:	pop    ds
  422b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b56:	lock cwde 
  422b58:	loope  0x422b30
  422b5a:	in     al,0x32
  422b5c:	inc    ebx
  422b5d:	retf   
  422b5e:	retf   
  422b5f:	xor    al,0x13
  422b61:	mov    esp,ebp
  422b63:	xchg   esp,eax
  422b64:	or     DWORD PTR [eax+0x45],0x141a0bd0
  422b6b:	(bad)  
  422b6c:	inc    ebx
  422b6d:	gs popf 
  422b6f:	fisub  WORD PTR [ebx+0xab7bb55]
  422b75:	sahf   
  422b76:	sub    dl,ch
  422b78:	xor    BYTE PTR ds:0x557e05f1,bl
  422b7e:	jne    0x422b12
  422b80:	xchg   BYTE PTR [edi-0x1fa0ac52],bl
  422b86:	mov    ds:0x9809cd2b,al
  422b8b:	test   BYTE PTR [ebx],ch
  422b8d:	retf   0x3543
  422b90:	dec    ecx
  422b91:	cli    
  422b92:	and    edx,0xffffffaf
  422b95:	imul   cl
  422b97:	adc    cl,BYTE PTR [ebx-0x47]
  422b9a:	pusha  
  422b9b:	test   DWORD PTR ds:0xc614c095,edx
  422ba1:	xchg   edi,eax
  422ba2:	jne    0x422b37
  422ba4:	repz xor al,0x83
  422ba7:	js     0x422bac
  422ba9:	xchg   ecx,eax
  422baa:	fmul   QWORD PTR [ebp+0x2e]
  422bad:	mov    ds:0x798c2160,al
  422bb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bb3:	add    eax,0x4b6be10d
  422bb8:	mov    ss,WORD PTR [eax-0x1b]
  422bbb:	push   edx
  422bbc:	jno    0x422b70
  422bbe:	shl    DWORD PTR [eax+ecx*1-0x2e],0x8b
  422bc3:	xor    DWORD PTR [edi],0xffffffc4
  422bc6:	push   esp
  422bc7:	test   BYTE PTR [edx+0xc0eb368],dh
  422bcd:	test   al,0x29
  422bcf:	sbb    eax,0xfffffff1
  422bd2:	(bad)  
  422bd3:	repz jp 0x422bcf
  422bd6:	ins    DWORD PTR es:[edi],dx
  422bd7:	cli    
  422bd8:	test   al,0x96
  422bda:	loop   0x422c07
  422bdc:	xchg   esp,eax
  422bdd:	call   0xda3a1989
  422be2:	xor    esi,DWORD PTR [ebp+0x74]
  422be5:	inc    eax
  422be6:	push   eax
  422be7:	mov    ds:0x5600df38,al
  422bec:	das    
  422bed:	outs   dx,BYTE PTR ds:[esi]
  422bee:	setno  al
  422bf1:	jb     0x422bce
  422bf3:	js     0x422c27
  422bf5:	mov    ah,0xa5
  422bf7:	loopne 0x422b97
  422bf9:	add    cl,BYTE PTR [esi+0x460ccfb]
  422bff:	or     ebp,ebx
  422c01:	retf   0xbc3f
  422c04:	jp     0x422c17
  422c06:	cmp    BYTE PTR [edi],0x83
  422c09:	jmp    0x422c2b
  422c0b:	dec    ebp
  422c0c:	push   ebp
  422c0d:	adc    bl,cl
  422c0f:	shl    cl,0x29
  422c12:	sub    DWORD PTR [edx+0x3992b4f2],ecx
  422c18:	fucom  st(4)
  422c1a:	(bad)  
  422c1b:	dec    esp
  422c1c:	ror    BYTE PTR [ebp+0x5b72f64f],1
  422c22:	jmp    0x2738:0xb3410b19
  422c29:	in     eax,dx
  422c2a:	mov    bl,BYTE PTR [bx-0x80]
  422c2e:	ss lahf 
  422c30:	scas   eax,DWORD PTR es:[edi]
  422c31:	xchg   ebp,eax
  422c32:	les    edi,FWORD PTR [ecx+0xf95ab70]
  422c38:	xchg   esi,eax
  422c39:	inc    ebp
  422c3a:	popa   
  422c3b:	int3   
  422c3c:	mov    dh,0x51
  422c3e:	mov    ebx,0xb994eb96
  422c43:	repz xor BYTE PTR [edi-0x17fe7a9],0x1e
  422c4b:	mov    al,0x86
  422c4d:	cmp    BYTE PTR [ecx+0x353b5c87],ah
  422c53:	in     al,0x32
  422c55:	or     BYTE PTR [ebx-0x80],bl
  422c58:	and    edi,DWORD PTR [esi]
  422c5a:	test   eax,0x254e1f55
  422c5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c60:	outs   dx,BYTE PTR gs:[esi]
  422c62:	bound  edi,QWORD PTR [ebx]
  422c64:	ds push eax
  422c66:	sbb    esp,DWORD PTR [ecx-0x5744aca4]
  422c6c:	mov    DWORD PTR [edi-0x230680db],edx
  422c72:	push   cs
  422c73:	repnz mov edx,0x5d207815
  422c79:	and    eax,0xc176aadd
  422c7e:	sbb    esp,DWORD PTR [ebx-0x37]
  422c81:	enter  0xed6c,0xf4
  422c85:	fs mov dl,0x3e
  422c88:	inc    ecx
  422c89:	or     al,0x3f
  422c8b:	mov    dh,0xee
  422c8d:	or     ah,bl
  422c8f:	test   DWORD PTR [ebx],ecx
  422c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c92:	setge  BYTE PTR [ebx+esi*1]
  422c96:	and    eax,0x204b8e5a
  422c9b:	rol    BYTE PTR ds:0xe05be297,cl
  422ca1:	lock cld 
  422ca3:	call   0xd050c353
  422ca8:	pushf  
  422ca9:	and    eax,0xf37e95c4
  422cae:	loopne 0x422ce7
  422cb0:	xchg   ebp,eax
  422cb1:	mov    al,0xd1
  422cb3:	outs   dx,DWORD PTR ds:[esi]
  422cb4:	jmp    0xd9b9e4d0
  422cb9:	je     0x422ca2
  422cbb:	inc    esi
  422cbc:	cmp    BYTE PTR [ebx-0x32],bh
  422cbf:	js     0x422d03
  422cc1:	dec    edi
  422cc2:	or     esp,edi
  422cc4:	test   edi,esp
  422cc6:	cs mov bh,ch
  422cc9:	mov    ah,0x9d
  422ccb:	or     DWORD PTR [edi-0x2b],edi
  422cce:	iret   
  422ccf:	out    dx,al
  422cd0:	clc    
  422cd1:	jecxz  0x422ce4
  422cd3:	sbb    esi,esp
  422cd5:	mov    ds,eax
  422cd7:	adc    BYTE PTR [edi-0x28],dl
  422cda:	or     al,BYTE PTR [ecx+ebx*4+0x58]
  422cde:	sub    dl,BYTE PTR [esi+0x4f]
  422ce1:	pushf  
  422ce2:	mov    al,ds:0x17f9d090
  422ce7:	jno    0x422d0e
  422ce9:	or     DWORD PTR [edx+0x297ccbd1],esp
  422cef:	pop    esi
  422cf0:	addr16 add bh,ah
  422cf3:	jmp    0xd73a:0xcfbbc445
  422cfa:	js     0x422cba
  422cfc:	sbb    eax,0x10c0a2c
  422d01:	test   DWORD PTR [eax-0x2c],0xc03132ee
  422d08:	out    0x3a,eax
  422d0a:	pop    ebp
  422d0b:	jae    0x422cc6
  422d0d:	cld    
  422d0e:	or     eax,0xbe29de6f
  422d13:	ficomp DWORD PTR [esi-0x3a]
  422d16:	cmp    dl,BYTE PTR [edi]
  422d18:	and    BYTE PTR [ebx-0x52db839e],bl
  422d1e:	push   edi
  422d1f:	sbb    al,0xdb
  422d21:	mov    ch,0xf2
  422d23:	adc    eax,0x9f53cedc
  422d28:	add    al,0x15
  422d2a:	sbb    DWORD PTR [edi+0x6c320ffb],esp
  422d30:	jbe    0x422ce0
  422d32:	(bad)  
  422d33:	xor    BYTE PTR ds:0x9e900a20,dh
  422d39:	adc    eax,ecx
  422d3b:	clc    
  422d3c:	dec    ebp
  422d3d:	enter  0x8345,0x1f
  422d41:	into   
  422d42:	mov    ds:0xe137482b,eax
  422d47:	stos   DWORD PTR es:[edi],eax
  422d48:	mov    ecx,DWORD PTR [edx]
  422d4a:	clc    
  422d4b:	das    
  422d4c:	rcl    DWORD PTR [edi-0x183d7826],1
  422d52:	fwait
  422d53:	ins    DWORD PTR es:[edi],dx
  422d54:	adc    ebp,esp
  422d56:	jge    0x422cf7
  422d58:	jb     0x422cf7
  422d5a:	or     BYTE PTR [ebp+0x31],0xa3
  422d5e:	mov    ah,0x4c
  422d60:	cmp    DWORD PTR [edi+0x7b],ebx
  422d63:	mov    ebx,0xc98267f3
  422d68:	hlt    
  422d69:	imul   esi,DWORD PTR [ebx+ebx*2+0x7ab4ed30],0x612fd8b6
  422d74:	loope  0x422d56
  422d76:	imul   esi,DWORD PTR [eax+0x6b03a520],0x36f546d0
  422d80:	fldenv [ecx-0x90ce38e]
  422d86:	fdivrp st(1),st
  422d88:	xlat   BYTE PTR ds:[ebx]
  422d89:	inc    ebp
  422d8a:	adc    DWORD PTR [ecx+eiz*2+0xc],esi
  422d8e:	fiadd  DWORD PTR [ebp+0x40]
  422d91:	js     0x422d25
  422d93:	jmp    0x422d49
  422d95:	int    0x9d
  422d97:	or     eax,0xd35c2c53
  422d9c:	pop    ds
  422d9d:	pop    ecx
  422d9e:	lahf   
  422d9f:	rcl    BYTE PTR [ecx-0x64],cl
  422da2:	sbb    ebx,DWORD PTR [edi-0x4a]
  422da5:	stos   DWORD PTR es:[edi],eax
  422da6:	cmc    
  422da7:	mov    ebp,0x63e5a6b0
  422dac:	call   0x8a43:0x81dbc8be
  422db3:	stc    
  422db4:	mov    dl,0xd3
  422db6:	arpl   WORD PTR [edx],sp
  422db8:	push   edx
  422db9:	test   BYTE PTR ds:0x8db7acf6,dl
  422dbf:	jmp    0x82bb4197
  422dc4:	jo     0x422e21
  422dc6:	(bad)  
  422dc7:	push   ecx
  422dc8:	je     0x422dd0
  422dca:	lods   eax,DWORD PTR ds:[esi]
  422dcb:	ins    BYTE PTR es:[edi],dx
  422dcc:	mov    ebp,ds
  422dce:	xchg   bh,bh
  422dd0:	lods   eax,DWORD PTR ds:[esi]
  422dd1:	jnp    0x422dde
  422dd3:	sub    dh,BYTE PTR [ecx+0x5b]
  422dd6:	mov    edi,0xc3b891e9
  422ddb:	out    dx,al
  422ddc:	jne    0x422e10
  422dde:	xor    esi,edi
  422de0:	mov    ds:0x32149289,al
  422de5:	and    eax,0x44992965
  422dea:	jp     0x422dbf
  422dec:	retf   
  422ded:	out    dx,eax
  422dee:	jle    0x422e20
  422df0:	ror    ch,1
  422df2:	hlt    
  422df3:	push   esp
  422df4:	pushf  
  422df5:	mov    dl,0x9d
  422df7:	call   0x1c26f94c
  422dfc:	pop    ebx
  422dfd:	xchg   DWORD PTR [ebx],esp
  422dff:	repnz mov dh,0x15
  422e02:	outs   dx,BYTE PTR ds:[esi]
  422e03:	daa    
  422e04:	test   DWORD PTR [eax+0x0],0xfe25ce73
  422e0b:	aad    0xe8
  422e0d:	cs lock jmp 0x422dac
  422e11:	push   ds
  422e12:	lock shr BYTE PTR [ebp+0x20],cl
  422e16:	dec    ecx
  422e17:	das    
  422e18:	clc    
  422e19:	lds    eax,FWORD PTR [eax+0x547d8954]
  422e1f:	add    al,0xca
  422e21:	xchg   esp,eax
  422e22:	retf   
  422e23:	mov    al,ds:0xa19dd0b8
  422e28:	test   DWORD PTR [ebp-0x2ecb90e2],ebp
  422e2e:	inc    esp
  422e2f:	pop    ebx
  422e30:	repz fdivrp st(2),st
  422e33:	aas    
  422e34:	or     BYTE PTR [edi+edi*2+0x195bae85],0x8d
  422e3c:	adc    BYTE PTR [ebp+ebp*2+0x4f242f33],ah
  422e43:	gs cli 
  422e45:	jbe    0x422eac
  422e47:	and    eax,esp
  422e49:	mov    BYTE PTR [esi+0x3b],bl
  422e4c:	dec    ecx
  422e4d:	xchg   DWORD PTR [ecx+0x54],edi
  422e50:	mov    ebp,ecx
  422e52:	cs lock pop ds
  422e55:	push   ebx
  422e56:	dec    ebp
  422e57:	fisubr WORD PTR [esi+0x608ada8c]
  422e5d:	push   eax
  422e5e:	sti    
  422e5f:	push   0x9a83bf09
  422e64:	mov    ch,0xad
  422e66:	clc    
  422e67:	lahf   
  422e68:	hlt    
  422e69:	(bad)  
  422e6a:	cld    
  422e6b:	loopne 0x422ecf
  422e6d:	cmovle ebx,DWORD PTR [ecx+0x5f093a99]
  422e74:	js     0x422ea6
  422e76:	cmp    ebx,DWORD PTR [eax+0x36e0aeed]
  422e7c:	dec    esi
  422e7d:	imul   esi,DWORD PTR [ebx+0x59],0xd5e9388e
  422e84:	xor    DWORD PTR [ecx+0x305a8715],edx
  422e8a:	pop    ecx
  422e8b:	call   0xa6fcb009
  422e90:	out    0x23,eax
  422e92:	and    BYTE PTR [ecx+edx*8+0x9],bl
  422e96:	scas   al,BYTE PTR es:[edi]
  422e97:	jge    0x422e97
  422e99:	iret   
  422e9a:	lods   eax,DWORD PTR ds:[esi]
  422e9b:	imul   eax,DWORD PTR [edi+esi*8+0x48],0x8c29a419
  422ea3:	dec    esi
  422ea4:	inc    edi
  422ea5:	pop    esi
  422ea6:	mov    cl,0xbc
  422ea8:	and    esi,ebp
  422eaa:	retf   
  422eab:	mov    al,ds:0xa10ef595
  422eb0:	das    
  422eb1:	in     eax,dx
  422eb2:	out    dx,eax
  422eb3:	cmp    eax,0x4c79ba03
  422eb8:	mov    fs,WORD PTR [ecx]
  422eba:	cld    
  422ebb:	sub    eax,0x2fb418ed
  422ec0:	lahf   
  422ec1:	or     bh,BYTE PTR [ecx]
  422ec3:	jbe    0x422e5e
  422ec5:	icebp  
  422ec6:	mov    esi,DWORD PTR [esp+eax*2+0xb]
  422eca:	retf   0x3f94
  422ecd:	dec    edi
  422ece:	mov    ah,0x71
  422ed0:	les    edx,FWORD PTR ds:0x71b111ee
  422ed6:	adc    BYTE PTR [eax-0x23abc24e],dh
  422edc:	push   0xffffff80
  422ede:	push   0x164da7e0
  422ee3:	mov    ebx,0xc249d420
  422ee8:	or     BYTE PTR [ebp+0x391400d],dl
  422eee:	mov    bl,0xb4
  422ef0:	pop    ebx
  422ef1:	xchg   ebx,eax
  422ef2:	jbe    0x422f23
  422ef4:	push   edi
  422ef5:	jmp    0x422f17
  422ef7:	or     eax,0xc9e4702d
  422efc:	mov    eax,0x40cdf5b
  422f01:	mov    ebp,0xef0ae96
  422f06:	xchg   esi,eax
  422f07:	mov    DWORD PTR [ebp+0xa11264b],0xa127b92f
  422f11:	pop    ecx
  422f12:	mov    dl,0xe8
  422f14:	xchg   edx,eax
  422f15:	mov    ah,0x2c
  422f17:	inc    ecx
  422f18:	jno    0x422f96
  422f1a:	push   0xffffffe4
  422f1c:	dec    edi
  422f1d:	in     eax,0x2e
  422f1f:	aas    
  422f20:	mov    ds:0x4144e300,al
  422f25:	retf   
  422f26:	dec    esi
  422f27:	mov    al,0x85
  422f29:	push   0x40526a86
  422f2e:	ja     0x422f00
  422f30:	ins    DWORD PTR es:[edi],dx
  422f31:	xchg   ebp,eax
  422f32:	test   DWORD PTR [edi+0x170f9e25],esp
  422f38:	cdq    
  422f39:	stos   BYTE PTR es:[edi],al
  422f3a:	stos   BYTE PTR es:[edi],al
  422f3b:	out    dx,eax
  422f3c:	imul   ecx,DWORD PTR [esi+0x1c],0x9596cc3e
  422f43:	pop    ss
  422f44:	add    ecx,ebx
  422f46:	test   BYTE PTR [edx-0x1e302be9],cl
  422f4c:	das    
  422f4d:	stos   BYTE PTR es:[edi],al
  422f4e:	mov    BYTE PTR ds:0x10a5a1d5,ch
  422f54:	popa   
  422f55:	fnstenv [esi-0xfb087d]
  422f5b:	push   esp
  422f5c:	into   
  422f5d:	mov    ch,0xcf
  422f5f:	cmp    al,0x57
  422f61:	mov    BYTE PTR [eax+0x7002c044],ch
  422f67:	rol    dl,1
  422f69:	es in  eax,0xc8
  422f6c:	pushf  
  422f6d:	ins    BYTE PTR es:[edi],dx
  422f6e:	push   0x7478c5c2
  422f73:	leave  
  422f74:	sbb    dl,bl
  422f76:	jne    0x422f1c
  422f78:	push   ss
  422f79:	jnp    0x422f40
  422f7b:	aas    
  422f7c:	in     al,0x9f
  422f7e:	pusha  
  422f7f:	jmp    0x422fbc
  422f81:	lods   al,BYTE PTR ds:[esi]
  422f82:	and    BYTE PTR cs:[ecx+0x2],dl
  422f86:	add    al,BYTE PTR [edi]
  422f88:	xchg   ecx,eax
  422f89:	push   0xfb6245a7
  422f8e:	pop    ecx
  422f8f:	pop    eax
  422f90:	xor    DWORD PTR [ebx+eax*2],ebx
  422f93:	fisub  WORD PTR [esi]
  422f95:	jno    0x422f43
  422f97:	repnz add al,0xc7
  422f9a:	add    ecx,0x78
  422f9d:	xchg   DWORD PTR [edx+0x4b39523d],esi
  422fa3:	xor    al,0xe1
  422fa5:	scas   al,BYTE PTR es:[edi]
  422fa6:	outs   dx,BYTE PTR ds:[esi]
  422fa7:	jne    0x422f5f
  422fa9:	inc    esi
  422faa:	mov    edi,0xa662151f
  422faf:	hlt    
  422fb0:	push   edx
  422fb1:	jno    0x423017
  422fb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fb4:	pop    DWORD PTR [esi]
  422fb6:	push   es
  422fb7:	dec    esi
  422fb8:	(bad)  
  422fb9:	std    
  422fba:	sahf   
  422fbb:	(bad)  
  422fbc:	mov    edx,0x39ad1df5
  422fc1:	cld    
  422fc2:	out    dx,eax
  422fc3:	(bad)  
  422fc4:	std    
  422fc5:	cmp    eax,0xf7cfc3b3
  422fca:	movaps XMMWORD PTR [edx+0x25],xmm3
  422fce:	loop   0x422fd7
  422fd0:	loop   0x42304d
  422fd2:	sub    bh,ch
  422fd4:	(bad)  
  422fd7:	test   eax,0xb1e6a4a2
  422fdc:	mov    edi,0xa2817bdd
  422fe1:	test   al,0x0
  422fe3:	mov    BYTE PTR [esi+ebx*8],bl
  422fe6:	jle    0x423028
  422fe8:	adc    ecx,ecx
  422fea:	jbe    0x423030
  422fec:	call   0xbae169d7
  422ff1:	xor    al,0x66
  422ff3:	retf   0x24d0
  422ff6:	pop    ds
  422ff7:	mov    ecx,0xe00c8207
  422ffc:	stos   BYTE PTR es:[edi],al
  422ffd:	fs scas eax,DWORD PTR es:[edi]
  422fff:	out    0xf8,eax
  423001:	es inc edi
  423003:	dec    ebp
  423004:	sbb    al,0x22
  423006:	repz aam 0xa
  423009:	xor    al,0x70
  42300b:	pop    ebx
  42300c:	rcl    bl,cl
  42300e:	int    0x58
  423010:	sar    DWORD PTR [ebp-0x20df9414],cl
  423016:	clc    
  423017:	push   cs
  423018:	sbb    DWORD PTR ds:0xe3fd4cb5,ebx
  42301e:	or     ecx,ecx
  423020:	test   DWORD PTR [edi-0x27b78fb9],edx
  423026:	or     eax,0xa084c50a
  42302b:	rcr    DWORD PTR [esp+ebx*4],0x5d
  42302f:	enter  0x59da,0xf9
  423033:	fild   WORD PTR [ebx-0x1066d1df]
  423039:	test   BYTE PTR [eax-0x5e1f3b38],bl
  42303f:	cmp    bl,bh
  423041:	jmp    FWORD PTR [edx]
  423043:	shl    BYTE PTR [eax],cl
  423045:	in     al,dx
  423046:	mov    bh,0x3a
  423048:	or     al,0x8a
  42304a:	adc    al,0x82
  42304c:	sub    dl,BYTE PTR cs:[ebx]
  42304f:	les    esi,FWORD PTR [eax-0x80]
  423052:	jp     0x4230a4
  423054:	mov    BYTE PTR [ecx],0x7b
  423057:	add    dl,BYTE PTR [edi+0x3e]
  42305a:	cmp    edi,ebx
  42305c:	in     al,dx
  42305d:	mov    ecx,0xda07e9cf
  423062:	mov    ah,0x9
  423064:	pop    esi
  423065:	sbb    dh,0x70
  423068:	jl     0x423092
  42306a:	xlat   BYTE PTR ds:[ebx]
  42306b:	cmp    DWORD PTR [eax-0x6],esi
  42306e:	mov    cl,0xdd
  423070:	xchg   ebx,eax
  423071:	jmp    0x423007
  423073:	or     bl,bh
  423075:	mov    dh,0x91
  423077:	dec    esp
  423078:	ret    0xa432
  42307b:	push   cs
  42307c:	fisttp QWORD PTR [esi]
  42307e:	mov    WORD PTR [esi],?
  423080:	add    al,0xe3
  423082:	mov    DWORD PTR [esi],ebp
  423084:	jmp    0xaa26:0xfe34655
  42308b:	arpl   WORD PTR [ebp+ecx*8-0x6f070d01],bx
  423092:	jo     0x423059
  423094:	(bad)  [esi+0x3e3fa853]
  42309a:	fdivr  DWORD PTR [ebp-0x6288566e]
  4230a0:	pop    ebp
  4230a1:	in     eax,dx
  4230a2:	sti    
  4230a3:	jmp    0xfba2:0x6556f38e
  4230aa:	sbb    edx,DWORD PTR [esi]
  4230ac:	adc    BYTE PTR [esi],al
  4230ae:	cdq    
  4230af:	in     eax,dx
  4230b0:	jbe    0x42310e
  4230b2:	xor    al,0x6c
  4230b4:	hlt    
  4230b5:	ror    DWORD PTR [edx-0x24],cl
  4230b8:	sub    al,0x87
  4230ba:	scas   eax,DWORD PTR es:[edi]
  4230bb:	retf   0x32b5
  4230be:	dec    eax
  4230bf:	mov    ecx,0x513710cd
  4230c4:	adc    DWORD PTR [eax-0x48],edx
  4230c7:	(bad)  
  4230c8:	out    dx,al
  4230c9:	jnp    0x42305a
  4230cb:	das    
  4230cc:	(bad)  
  4230cd:	mov    WORD PTR [edi-0x60],es
  4230d0:	push   ecx
  4230d1:	fcom   DWORD PTR [ebp-0x48]
  4230d4:	mov    bl,0xe
  4230d6:	mov    ch,0x2f
  4230d8:	mov    eax,0x807a2a75
  4230dd:	(bad)  
  4230de:	arpl   WORD PTR [ebx-0x66],di
  4230e1:	push   ds
  4230e2:	sahf   
  4230e3:	adc    al,bh
  4230e5:	dec    ebx
  4230e6:	adc    eax,0x99ec1536
  4230eb:	or     eax,0x5bac6813
  4230f0:	xlat   BYTE PTR ds:[ebx]
  4230f1:	retf   
  4230f2:	int3   
  4230f3:	jmp    0xa40cb1e5
  4230f8:	lock dec eax
  4230fa:	shr    DWORD PTR [esi-0x49],1
  4230fd:	sbb    DWORD PTR [esi-0x5bd9d994],ebx
  423103:	adc    edi,edi
  423105:	mov    BYTE PTR ds:0x5f2b0732,0x34
  42310c:	jo     0x4230b5
  42310e:	sub    ebx,0xffffffee
  423111:	(bad)  
  423112:	fild   DWORD PTR [edx+ebp*8+0x22ea52e3]
  423119:	inc    ecx
  42311a:	retf   0x5a55
  42311d:	inc    esi
  42311e:	pop    edi
  42311f:	mov    ebx,0xa18475b9
  423124:	out    dx,eax
  423125:	xor    bh,BYTE PTR [edx]
  423127:	loopne 0x4230cd
  423129:	xchg   DWORD PTR [esi],edx
  42312b:	stc    
  42312c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42312d:	adc    dh,al
  42312f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423130:	jmp    0x36ef:0xb8a746c1
  423137:	sub    eax,0x9248ea14
  42313c:	mov    bl,0x1d
  42313e:	jmp    0x4231b8
  423140:	addr16 addr16 (bad) 
  423143:	loope  0x4231b8
  423145:	enter  0xfa3b,0xc0
  423149:	dec    esp
  42314a:	in     eax,dx
  42314b:	retf   
  42314c:	pop    ds
  42314d:	push   esp
  42314e:	and    ch,BYTE PTR [edi+eiz*4]
  423151:	fild   DWORD PTR [ecx]
  423153:	ss sahf 
  423155:	mov    dh,0x22
  423157:	mov    edx,0xd25afd31
  42315c:	push   eax
  42315d:	into   
  42315e:	push   edx
  42315f:	sub    ecx,DWORD PTR [esi+ecx*4-0x52]
  423163:	sub    DWORD PTR [ecx-0xf3b573],0xffffffcf
  42316a:	cmp    cl,BYTE PTR [edx-0x820c8c2]
  423170:	sbb    DWORD PTR [ebx+0x38],esp
  423173:	pop    ds
  423174:	cwde   
  423175:	enter  0xd6dd,0x7c
  423179:	les    ebp,FWORD PTR [esi+0x3b]
  42317c:	pop    ebp
  42317e:	pop    esp
  42317f:	les    eax,FWORD PTR [ecx+0x7e]
  423182:	lea    eax,[edx]
  423184:	or     BYTE PTR [ebp+0x69],ah
  423187:	(bad)  
  423188:	mov    al,ds:0xcdb06633
  42318d:	and    BYTE PTR [edx+0x7f],cl
  423190:	arpl   WORD PTR [esi+0x59f2012e],sp
  423196:	loope  0x423162
  423198:	fs pop edi
  42319a:	es (bad) 
  42319c:	jl     0x4231ab
  42319e:	loope  0x423120
  4231a0:	dec    edx
  4231a1:	or     eax,0x84937abf
  4231a6:	les    eax,FWORD PTR [edx]
  4231a8:	xchg   ebx,eax
  4231a9:	jecxz  0x423221
  4231ab:	fnstsw WORD PTR [ebx+0x6ade7618]
  4231b1:	cmp    al,0x69
  4231b3:	(bad)  
  4231b4:	cmp    al,0xc9
  4231b6:	inc    eax
  4231b7:	arpl   WORD PTR [eax-0x49],sp
  4231ba:	pop    ebx
  4231bb:	push   0xffffff9e
  4231bd:	cwde   
  4231be:	dec    esi
  4231bf:	sbb    BYTE PTR [ebp+0x5a],0xf3
  4231c3:	add    DWORD PTR [edx],esp
  4231c5:	adc    DWORD PTR [eax+0x38],edi
  4231c8:	mov    bh,BYTE PTR [ebx]
  4231ca:	pop    es
  4231cb:	sub    DWORD PTR [ebx-0x43],esp
  4231ce:	scas   eax,DWORD PTR es:[edi]
  4231cf:	pop    ebx
  4231d0:	or     al,dh
  4231d2:	mov    bh,dh
  4231d4:	ds enter 0x6421,0xc4
  4231d9:	or     ch,BYTE PTR [ebx]
  4231db:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4231dd:	xor    dh,0x9d
  4231e0:	pop    ebx
  4231e1:	push   ebp
  4231e2:	es int3 
  4231e4:	xchg   esp,eax
  4231e5:	push   ebp
  4231e6:	std    
  4231e7:	fsubr  st,st(6)
  4231e9:	(bad)  
  4231ea:	popa   
  4231eb:	mov    al,ds:0x95f1ca7b
  4231f0:	(bad)  
  4231f1:	jmp    FWORD PTR [ebp+0x26122218]
  4231f7:	dec    esi
  4231f8:	mov    ds:0x90659e2f,eax
  4231fd:	js     0x42322b
  4231ff:	add    eax,0x372b4835
  423204:	enter  0x1dfc,0xf9
  423208:	mov    ah,0x89
  42320a:	test   al,0x3d
  42320c:	ins    DWORD PTR es:[edi],dx
  42320d:	lods   al,BYTE PTR ds:[esi]
  42320e:	sbb    ebp,ebp
  423210:	cmp    ebx,edx
  423212:	jnp    0x4231f3
  423214:	rcr    BYTE PTR [edi+0x51],1
  423217:	push   0x64
  423219:	fstp   TBYTE PTR [eax+0x6e]
  42321c:	mov    edx,0x9b9e6eda
  423221:	inc    ecx
  423222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423223:	push   edi
  423224:	xchg   ebx,eax
  423225:	call   0xff9240c9
  42322a:	sub    al,0x91
  42322c:	sbb    BYTE PTR [ecx],bh
  42322e:	das    
  42322f:	in     eax,0x69
  423231:	dec    esp
  423232:	hlt    
  423233:	mov    cl,0xb5
  423235:	mov    ecx,0x158bba88
  42323a:	mov    dh,0x44
  42323c:	xlat   BYTE PTR ds:[ebx]
  42323d:	enter  0x2fcb,0x6d
  423241:	adc    bl,ah
  423243:	mov    BYTE PTR ds:0x32a88a85,al
  423249:	inc    ebp
  42324a:	neg    BYTE PTR [ecx+0x53]
  42324d:	sub    al,0xb7
  42324f:	out    0xc4,eax
  423251:	push   eax
  423252:	icebp  
  423253:	aas    
  423254:	dec    ebx
  423255:	push   ds
  423256:	dec    esi
  423257:	dec    ebx
  423258:	pop    ecx
  423259:	dec    ebp
  42325a:	adc    al,0x14
  42325c:	cld    
  42325d:	cmp    BYTE PTR [ecx],al
  42325f:	arpl   WORD PTR [edi+0x45b2b592],bp
  423265:	test   BYTE PTR [esi-0x57],bh
  423268:	xchg   edx,eax
  423269:	xchg   esp,eax
  42326a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42326b:	ds js  0x423269
  42326e:	out    0xf8,eax
  423270:	pop    eax
  423271:	push   edx
  423272:	or     al,0x53
  423274:	or     ecx,eax
  423276:	sahf   
  423277:	or     BYTE PTR [eax-0x64f611da],dl
  42327d:	das    
  42327e:	adc    edx,edi
  423280:	push   0x56d5be5a
  423285:	int3   
  423286:	dec    ebx
  423287:	push   ds
  423288:	repz dec ebx
  42328a:	cmp    esi,esi
  42328c:	pop    eax
  42328d:	das    
  42328e:	cmp    al,0x13
  423290:	shl    DWORD PTR [esi],cl
  423292:	cli    
  423293:	mov    ds:0x84338354,eax
  423298:	push   di
  42329a:	and    al,0x1d
  42329c:	adc    edx,esp
  42329e:	lahf   
  42329f:	adc    DWORD PTR [ecx+ebx*4+0x55],0xfdb47ac3
  4232a7:	lds    edx,FWORD PTR [ecx+0x25]
  4232aa:	mov    ch,0xe6
  4232ac:	jmp    0x42330b
  4232ae:	loop   0x4232bb
  4232b0:	pop    ss
  4232b1:	xchg   ecx,eax
  4232b2:	stos   DWORD PTR es:[edi],eax
  4232b3:	xchg   ecx,eax
  4232b4:	mov    DWORD PTR [edx],ebx
  4232b6:	mov    ah,0xa3
  4232b8:	mov    ebx,0xba849ac8
  4232bd:	xchg   edi,eax
  4232be:	fisubr WORD PTR [eax]
  4232c0:	(bad)  
  4232c1:	dec    ebx
  4232c2:	push   es
  4232c3:	jecxz  0x4232f9
  4232c5:	sub    eax,0x85429c61
  4232ca:	add    DWORD PTR [ebx],0xa5b193b6
  4232d0:	cmp    al,0xad
  4232d2:	pop    edx
  4232d3:	ds jecxz 0x423273
  4232d6:	fwait
  4232d7:	pop    ebx
  4232d8:	arpl   WORD PTR [edx-0x72],ax
  4232db:	pop    esi
  4232dc:	sbb    bh,bl
  4232de:	stos   DWORD PTR es:[edi],eax
  4232df:	adc    al,0xa9
  4232e1:	scas   al,BYTE PTR es:[edi]
  4232e2:	push   ebx
  4232e3:	popa   
  4232e4:	mov    edx,0xd16ded4d
  4232e9:	in     al,dx
  4232ea:	outs   dx,DWORD PTR ds:[esi]
  4232eb:	out    0x2,eax
  4232ed:	mov    dl,0xeb
  4232ef:	cmp    al,0x4a
  4232f1:	(bad)  
  4232f3:	push   edi
  4232f4:	mov    DWORD PTR [ebp-0x1d],0x19242ab3
  4232fb:	out    dx,eax
  4232fc:	in     al,dx
  4232fd:	and    bl,BYTE PTR [edi-0x617eead1]
  423303:	or     DWORD PTR [edi+ebx*8-0x46],eax
  423307:	and    eax,0xb902347c
  42330c:	pop    es
  42330d:	jge    0x423300
  42330f:	sbb    BYTE PTR [edx],bl
  423311:	mov    ?,WORD PTR [ebx-0x52]
  423314:	push   eax
  423315:	and    DWORD PTR [ebp-0x4f],0x20d79f48
  42331c:	jecxz  0x423356
  42331e:	push   ebp
  42331f:	cmc    
  423320:	aas    
  423321:	add    al,BYTE PTR [edi+0x44]
  423324:	add    edi,DWORD PTR [ebx+0xb803fd1]
  42332a:	(bad)  
  42332b:	sbb    edx,DWORD PTR [eax-0x74]
  42332e:	add    eax,0x8049b8cd
  423333:	imul   edi,DWORD PTR [edx+ebx*2+0x40],0x56
  423338:	icebp  
  423339:	outs   dx,DWORD PTR ds:[esi]
  42333a:	ins    BYTE PTR es:[edi],dx
  42333b:	call   0x33e951b0
  423340:	push   ebp
  423341:	pop    ds
  423342:	hlt    
  423343:	outs   dx,BYTE PTR ds:[esi]
  423344:	cmp    dl,BYTE PTR [edi-0x3178e56c]
  42334a:	sub    edi,DWORD PTR [edi]
  42334c:	pop    ecx
  42334d:	out    0x86,eax
  42334f:	lock in eax,dx
  423351:	shl    BYTE PTR [ecx+0x293b46d],0x15
  423358:	cmp    al,0xc6
  42335a:	xor    al,0x93
  42335c:	loopne 0x4232f6
  42335e:	daa    
  42335f:	sbb    DWORD PTR [ecx],eax
  423361:	pop    edx
  423362:	in     eax,0x37
  423364:	push   ds
  423365:	call   0xc0bde98c
  42336a:	imul   DWORD PTR [esi+0x6f1d2e16]
  423370:	mov    bl,dh
  423372:	and    al,0x21
  423374:	xor    edi,DWORD PTR [ebp-0x6c2050d3]
  42337a:	(bad)  
  42337c:	sbb    eax,0x445e05ae
  423381:	repz push ebx
  423383:	fsubp  st(3),st
  423385:	inc    esp
  423386:	adc    bl,BYTE PTR ds:0x9e2b38c6
  42338c:	scas   al,BYTE PTR es:[edi]
  42338d:	dec    eax
  42338e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42338f:	inc    ebp
  423390:	int    0x97
  423392:	clc    
  423393:	xor    DWORD PTR [edi],ebx
  423395:	inc    eax
  423396:	pop    ebx
  423397:	cld    
  423398:	mov    edi,0x8391c73b
  42339d:	imul   DWORD PTR [esi+ebx*8+0x4b3ba469]
  4233a4:	dec    edx
  4233a5:	aas    
  4233a6:	push   es
  4233a7:	aad    0xc4
  4233a9:	xchg   DWORD PTR [ebx],edx
  4233ab:	push   es
  4233ac:	xor    BYTE PTR [edi],dl
  4233ae:	lea    edi,[edx]
  4233b0:	cmp    BYTE PTR [ecx],0xea
  4233b3:	stos   BYTE PTR es:[edi],al
  4233b4:	(bad)  
  4233b5:	xchg   ebx,eax
  4233b6:	jnp    0x4233bd
  4233b8:	mov    eax,0x36f6c5e6
  4233bd:	sub    eax,0x4062c877
  4233c2:	daa    
  4233c3:	adc    eax,0x53a76268
  4233c8:	mov    edi,0xd2fe9056
  4233cd:	add    DWORD PTR [edi],0xfffffff8
  4233d0:	outs   dx,DWORD PTR ds:[esi]
  4233d1:	popa   
  4233d2:	lahf   
  4233d3:	jmp    FWORD PTR [eax+eiz*4]
  4233d6:	xor    bh,BYTE PTR [esp+ebx*4+0x37]
  4233da:	lods   al,BYTE PTR ds:[esi]
  4233db:	push   ecx
  4233dc:	loope  0x423441
  4233de:	jg     0x423410
  4233e0:	pop    eax
  4233e1:	in     al,0x65
  4233e3:	arpl   WORD PTR [esi],ax
  4233e5:	mov    esp,0x8a2c9b8b
  4233ea:	inc    edx
  4233eb:	fwait
  4233ec:	in     al,dx
  4233ed:	sahf   
  4233ee:	mov    ecx,0xa1bbd868
  4233f3:	sbb    al,0xf8
  4233f5:	jge    0x423408
  4233f7:	add    al,0xa3
  4233f9:	adc    dl,BYTE PTR [ebx-0x29d37c85]
  4233ff:	sub    eax,0x7138f010
  423404:	sub    BYTE PTR [esi+0x7b756748],dh
  42340a:	push   esi
  42340b:	xor    bh,dh
  42340d:	xchg   esp,eax
  42340e:	jecxz  0x423464
  423410:	call   0x1c63:0x9e818eab
  423417:	popa   
  423418:	mov    cl,0x71
  42341a:	adc    al,0xc3
  42341c:	pop    ebp
  42341d:	adc    ecx,DWORD PTR [esi+0x35260875]
  423423:	cmp    edi,DWORD PTR [edx+0x2e]
  423426:	sbb    al,0xfb
  423428:	fst    DWORD PTR [esi+0x76497251]
  42342e:	or     BYTE PTR [ebx],cl
  423430:	sub    ebp,esp
  423432:	and    BYTE PTR [eax-0x69c85228],ah
  423438:	jae    0x423463
  42343a:	jne    0x4233c6
  42343c:	mov    al,0xe8
  42343e:	fsubr  st,st(4)
  423440:	pop    edi
  423441:	sar    BYTE PTR [ebx+0xe],cl
  423444:	inc    esp
  423445:	mov    bl,0x9e
  423447:	push   eax
  423448:	adc    BYTE PTR [edi+0x7f330caa],ch
  42344e:	pop    ds
  42344f:	out    0xf9,al
  423451:	dec    eax
  423452:	out    0xc6,al
  423454:	loopne 0x423493
  423456:	or     BYTE PTR [ebp-0x51],0xea
  42345a:	pop    eax
  42345b:	jecxz  0x423431
  42345d:	loope  0x423431
  42345f:	add    al,0x50
  423461:	test   bl,dh
  423463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423464:	lods   al,BYTE PTR ds:[esi]
  423465:	xchg   ebx,eax
  423466:	in     eax,dx
  423467:	int    0xd6
  423469:	xor    BYTE PTR [esi+edx*4-0x1d85036e],cl
  423470:	test   eax,0xe98f8d4
  423475:	jge    0x423460
  423477:	inc    esp
  423478:	mov    ecx,0x27c128a2
  42347d:	or     ebp,DWORD PTR [edi+esi*2]
  423480:	scas   eax,DWORD PTR es:[edi]
  423481:	push   esi
  423482:	jmp    0x44dc1eee
  423487:	xchg   ebp,eax
  423488:	retf   
  423489:	push   edx
  42348a:	sti    
  42348b:	xchg   ebp,eax
  42348c:	and    esi,DWORD PTR [esi+0x56]
  42348f:	in     al,dx
  423490:	daa    
  423491:	sbb    BYTE PTR [edi],0xfa
  423494:	mov    al,ds:0x3f38d829
  423499:	ds pop ss
  42349b:	repnz dec esp
  42349d:	aam    0xd3
  42349f:	call   0xd4050e15
  4234a4:	xchg   ebp,eax
  4234a5:	dec    eax
  4234a6:	inc    esp
  4234a7:	aam    0x3e
  4234a9:	adc    DWORD PTR [edi-0x7c],0x5b5ede1
  4234b0:	pop    esi
  4234b1:	sbb    eax,0x9c149085
  4234b6:	icebp  
  4234b7:	push   ebx
  4234b8:	jle    0x423448
  4234ba:	push   0xc91bbc9d
  4234bf:	sbb    ebp,DWORD PTR [edx+0x299ce5c7]
  4234c5:	shl    DWORD PTR [eax+0x6546c1b5],1
  4234cb:	jno    0x423525
  4234cd:	sar    BYTE PTR [ebx],cl
  4234cf:	xor    al,ch
  4234d1:	jge    0x4234e6
  4234d3:	clc    
  4234d4:	add    BYTE PTR [edi+0x2670bc7b],ah
  4234da:	jg     0x42351b
  4234dc:	or     al,0x37
  4234de:	sub    ebx,esi
  4234e0:	inc    edi
  4234e1:	dec    ebp
  4234e2:	sub    edi,DWORD PTR [ebp-0x24]
  4234e5:	mov    BYTE PTR [eax+esi*2+0x49de0c14],bl
  4234ec:	cmp    al,0xf3
  4234ee:	int3   
  4234ef:	xor    ebp,ebx
  4234f1:	jae    0x423527
  4234f3:	out    0x3f,al
  4234f5:	mov    ds:0x7ae19e50,al
  4234fa:	mov    ebp,0x222585e2
  4234ff:	mov    edi,0x17249625
  423504:	pop    esi
  423505:	pop    es
  423506:	retf   0x5d7c
  423509:	adc    eax,DWORD PTR gs:[edx+edi*1]
  42350d:	inc    esi
  42350e:	inc    esi
  42350f:	sub    DWORD PTR [esi+esi*1-0x32],ebx
  423513:	push   ds
  423514:	mov    al,0x7a
  423516:	push   0x3d27c0de
  42351b:	mov    ebp,0xe56e1187
  423520:	loope  0x42351c
  423522:	xor    DWORD PTR [ebp-0x3],0xf6b5b0b5
  423529:	pop    edi
  42352a:	pop    ds
  42352b:	bound  edi,QWORD PTR [eax+0x0]
  42352e:	rcl    DWORD PTR [edi-0x41add473],1
  423534:	cmp    dl,ah
  423536:	aad    0xac
  423538:	call   0xbb05:0xacd38f9b
  42353f:	sub    esp,DWORD PTR [esi]
  423541:	xchg   ebp,eax
  423542:	into   
  423543:	and    eax,0x831ef495
  423548:	mov    DWORD PTR [ecx+edi*2],esp
  42354b:	sbb    esp,0xffffffa2
  42354e:	jle    0x42355a
  423550:	or     eax,0xe66ecbbf
  423555:	mov    esi,0x8bfe37ec
  42355a:	mov    ah,0x14
  42355c:	aam    0xdc
  42355e:	(bad)  
  42355f:	pop    eax
  423560:	mov    edx,0xc5c28960
  423566:	xchg   edi,eax
  423567:	jne    0x423555
  423569:	stc    
  42356a:	sub    esp,DWORD PTR [edx-0x1e7ee8ef]
  423570:	(bad)  
  423571:	mov    ds:0x403b2d38,al
  423576:	xor    eax,0x8f3af242
  42357b:	iret   
  42357c:	fcom   QWORD PTR [edi-0x4e]
  42357f:	add    eax,0x72981e4d
  423584:	jns    0x423534
  423586:	sbb    ah,BYTE PTR [ecx+ebx*4]
  423589:	cs out dx,al
  42358b:	or     DWORD PTR [ecx*2+0x57a298fe],0xffffff9c
  423593:	in     eax,dx
  423594:	mov    ds:0x82d236a,eax
  423599:	pop    cx
  42359b:	pop    esi
  42359c:	or     BYTE PTR [esi-0x29],bl
  42359f:	js     0x423549
  4235a1:	xor    DWORD PTR [edx+0xe7beff4],ebp
  4235a7:	(bad)  
  4235a8:	adc    esi,DWORD PTR [ecx]
  4235aa:	dec    eax
  4235ab:	enter  0xb376,0x31
  4235af:	(bad)  
  4235b0:	imul   DWORD PTR [ebx+0x32]
  4235b3:	xchg   edx,eax
  4235b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235b5:	aas    
  4235b6:	lea    ebp,[edi+0x5d9ed011]
  4235bc:	sar    BYTE PTR [eax],1
  4235be:	mov    edx,0x234d9db2
  4235c3:	fsub   QWORD PTR [ecx]
  4235c5:	(bad)  
  4235c6:	out    0x6f,al
  4235c8:	int3   
  4235c9:	ins    DWORD PTR es:[edi],dx
  4235ca:	leave  
  4235cb:	mov    DWORD PTR [edx-0x391d2cfc],ecx
  4235d1:	mov    bl,0x18
  4235d3:	cmp    al,0xef
  4235d5:	xchg   ebx,eax
  4235d6:	in     al,dx
  4235d7:	pop    ebp
  4235d8:	shl    BYTE PTR [ebp+0x61d2156],cl
  4235de:	adc    dl,BYTE PTR [esi-0x7e0446b8]
  4235e4:	popa   
  4235e5:	cli    
  4235e6:	sub    al,0x2c
  4235e8:	arpl   dx,bx
  4235ea:	lods   eax,DWORD PTR ds:[esi]
  4235eb:	das    
  4235ec:	outs   dx,DWORD PTR ds:[esi]
  4235ed:	enter  0x81ad,0x82
  4235f1:	lods   al,BYTE PTR ds:[esi]
  4235f2:	pushf  
  4235f3:	pop    ebx
  4235f4:	mov    ds:0xf771b047,eax
  4235f9:	mov    ah,0x90
  4235fc:	call   0x2712:0x7048101f
  423603:	sub    BYTE PTR [ebp+0x78],dl
  423606:	sbb    dh,cl
  423608:	fbld   TBYTE PTR [esi+ebx*2-0x510f63d7]
  42360f:	mov    eax,ds:0x8f75729c
  423614:	jne    0x4235e1
  423616:	leave  
  423617:	mov    edi,DWORD PTR [esi+0x51416342]
  42361d:	je     0x423617
  42361f:	and    cl,0x8c
  423622:	adc    DWORD PTR [ecx],ebp
  423624:	leave  
  423625:	pop    ds
  423626:	jno    0x42364e
  423628:	sub    eax,0x180ea82a
  42362d:	mov    edx,DWORD PTR [esi]
  42362f:	cld    
  423630:	push   eax
  423631:	iret   
  423632:	dec    ebx
  423633:	inc    ebp
  423634:	cmp    DWORD PTR [ecx+0x3a],0xfffffff8
  423638:	dec    edi
  423639:	mov    bh,0x9f
  42363b:	jp     0x42367d
  42363d:	daa    
  42363e:	add    eax,0x8e00d353
  423643:	out    dx,eax
  423644:	mov    eax,0x6a5419b1
  423649:	imul   esp,DWORD PTR [ebx],0xffffffb9
  42364c:	jae    0x42367e
  42364e:	xlat   BYTE PTR ds:[ebx]
  42364f:	retf   0xbb7e
  423652:	sub    al,0x3f
  423654:	enter  0x4320,0xd
  423658:	enter  0x3e01,0x85
  42365c:	mov    al,ds:0x41342527
  423661:	lock retf 
  423663:	aas    
  423664:	adc    al,0x96
  423666:	push   0x25
  423668:	ja     0x42365c
  42366a:	bound  esp,QWORD PTR [ebx+0x7f]
  42366d:	cmc    
  42366e:	arpl   WORD PTR [eax],bx
  423670:	popa   
  423671:	popf   
  423672:	mov    esp,0x7d6c037f
  423677:	lea    edi,[edi]
  423679:	xlat   BYTE PTR ds:[ebx]
  42367a:	or     DWORD PTR [ecx+0x6e],0xffffffc4
  42367e:	out    dx,eax
  42367f:	das    
  423680:	mov    DWORD PTR [ebp-0x1e4a7051],ebp
  423686:	rcr    BYTE PTR [esi],0x7e
  423689:	pop    ebx
  42368a:	nop
  42368b:	and    DWORD PTR [ebp+0xe],ebx
  42368e:	addr16 nop
  423690:	sbb    edx,DWORD PTR ds:0x4fe49e7c
  423696:	stos   BYTE PTR es:[edi],al
  423697:	leave  
  423698:	in     eax,0xd8
  42369a:	cmc    
  42369b:	inc    edx
  42369c:	jmp    0xfb049982
  4236a1:	bswap  ecx
  4236a3:	pop    ebx
  4236a4:	mov    bh,0x95
  4236a6:	push   0x4f11ed2
  4236ab:	sbb    BYTE PTR [edi-0x58a8e38e],dl
  4236b1:	ins    BYTE PTR es:[edi],dx
  4236b2:	mov    edi,0xb62bf061
  4236b7:	cmp    BYTE PTR [eax-0x45],0xee
  4236bb:	cwde   
  4236bc:	popa   
  4236bd:	loop   0x4236a7
  4236bf:	add    eax,0x40f1349
  4236c4:	and    al,0xa8
  4236c6:	idiv   DWORD PTR [edi-0xa]
  4236c9:	push   ebx
  4236ca:	jae    0x4236a4
  4236cc:	cmp    DWORD PTR [edi],esi
  4236ce:	pop    ss
  4236cf:	jb     0x423729
  4236d1:	push   es
  4236d2:	sbb    eax,0x19dc84ce
  4236d7:	data16 loopne 0x42372d
  4236da:	sbb    BYTE PTR [eax+ecx*8-0x3e],0x9c
  4236df:	mov    DWORD PTR [ecx+0x707d60a2],esi
  4236e5:	loope  0x423736
  4236e7:	inc    ebx
  4236e8:	leave  
  4236e9:	dec    eax
  4236ea:	adc    al,0x75
  4236ec:	shr    edx,0x1
  4236ef:	push   ebp
  4236f0:	dec    ecx
  4236f1:	dec    edi
  4236f2:	jne    0x4236f5
  4236f4:	pop    edx
  4236f5:	repnz push ebx
  4236f7:	outs   dx,BYTE PTR ds:[esi]
  4236f8:	lea    esp,[esi]
  4236fa:	(bad)  
  4236fb:	ficomp DWORD PTR [edi-0x37]
  4236fe:	cmp    DWORD PTR [eax],edx
  423700:	imul   eax,eax,0x7e
  423703:	mov    al,0x35
  423705:	sub    al,0x33
  423707:	cmp    al,0x67
  423709:	add    ch,BYTE PTR [edx+0x2d831db9]
  42370f:	in     eax,dx
  423710:	fisub  WORD PTR [esi+0x21fe822a]
  423716:	into   
  423717:	sub    BYTE PTR [edx+0x5d],al
  42371a:	loop   0x423727
  42371c:	jns    0x4236c9
  42371e:	mov    dl,0x31
  423720:	pop    si
  423722:	mov    cl,BYTE PTR [edi]
  423724:	out    0xbc,eax
  423726:	scas   eax,DWORD PTR es:[edi]
  423727:	sbb    ch,BYTE PTR [ebp+0x7b]
  42372a:	lea    esi,[esi+0x3ef94c63]
  423730:	out    0xfd,eax
  423732:	sbb    BYTE PTR [edi-0x10],dh
  423735:	inc    edx
  423736:	arpl   WORD PTR [esi+0x10],bp
  423739:	xchg   edx,eax
  42373a:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  42373c:	or     BYTE PTR [ecx],0x1
  42373f:	stc    
  423740:	mov    ecx,0x26d79909
  423745:	push   ds
  423746:	out    0xd0,eax
  423748:	push   ebx
  423749:	sub    al,dh
  42374b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42374c:	xor    BYTE PTR [edx+0x67],bh
  42374f:	push   edx
  423750:	cmp    eax,0xc72f9d90
  423755:	cs push esi
  423757:	push   eax
  423758:	dec    edi
  423759:	push   edx
  42375a:	sbb    DWORD PTR [ebx-0x39da265a],edx
  423760:	xchg   DWORD PTR [ebp+ecx*4-0x4ee1fba9],ebp
  423767:	cli    
  423768:	dec    ecx
  423769:	mov    ds:0x5ad29cc7,al
  42376e:	(bad)  
  42376f:	popf   
  423770:	fisubr DWORD PTR [ecx+0xb9cc8d0]
  423776:	inc    esi
  423777:	fsubr  st(5),st
  423779:	mov    ch,dh
  42377b:	cmc    
  42377c:	outs   dx,BYTE PTR ds:[esi]
  42377d:	pop    esp
  42377e:	mov    eax,0x7ca1452
  423783:	mov    edi,0xf58feac4
  423788:	in     al,0xd3
  42378a:	mov    esp,ebp
  42378c:	ins    BYTE PTR es:[edi],dx
  42378d:	cmp    eax,0xabd6db97
  423792:	jb     0x4237d0
  423794:	jecxz  0x42376f
  423796:	aaa    
  423797:	in     al,dx
  423798:	adc    DWORD PTR [esi],edi
  42379a:	xchg   ch,cl
  42379c:	mov    bh,BYTE PTR [ecx+0x548bae2a]
  4237a2:	sbb    dh,bl
  4237a4:	sbb    dh,ch
  4237a6:	jp     0x42378f
  4237a8:	or     dh,bh
  4237aa:	add    eax,0x998a7f7c
  4237af:	fidivr WORD PTR [edi+0x23f4fb7c]
  4237b5:	lods   al,BYTE PTR ds:[esi]
  4237b6:	pop    edx
  4237b7:	mov    BYTE PTR [eax+edi*8-0x1d],bl
  4237bb:	pop    edi
  4237bc:	out    0xd3,eax
  4237be:	cmp    ah,cl
  4237c0:	mov    bh,dh
  4237c2:	aad    0x6a
  4237c4:	arpl   WORD PTR [esi+0x4671ecdd],si
  4237ca:	add    DWORD PTR ds:0xb6924e4f,eax
  4237d0:	jmp    0x4237e6
  4237d2:	dec    esi
  4237d3:	mov    ch,0x70
  4237d5:	mov    ah,0x72
  4237d7:	cli    
  4237d8:	dec    esp
  4237d9:	mov    ebx,0x749a05f1
  4237de:	dec    eax
  4237df:	pop    ebp
  4237e0:	sbb    DWORD PTR [ecx-0x3f4d6cd3],0xc4327177
  4237ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237eb:	nop
  4237ec:	retf   
  4237ed:	dec    ecx
  4237ee:	cmp    BYTE PTR [esi],ch
  4237f0:	sbb    esi,DWORD PTR [edi+0x2d]
  4237f3:	add    esi,esp
  4237f5:	loopne 0x42381f
  4237f7:	ss daa 
  4237f9:	push   0xffffffeb
  4237fb:	mov    ecx,DWORD PTR [eax]
  4237fd:	cmp    edi,DWORD PTR [ecx-0x7cba6855]
  423803:	dec    eax
  423804:	xchg   BYTE PTR [edx-0x59],bl
  423807:	clc    
  423808:	arpl   WORD PTR [ecx],si
  42380a:	adc    DWORD PTR [ecx+0x2caaceb9],esi
  423810:	adc    DWORD PTR [eax+0x33],esi
  423813:	cmc    
  423814:	enter  0xcc76,0x71
  423818:	ins    DWORD PTR es:[edi],dx
  423819:	idiv   BYTE PTR [ecx-0x63]
  42381c:	loope  0x42384f
  42381e:	scas   ax,WORD PTR es:[edi]
  423820:	and    ecx,DWORD PTR [ecx]
  423822:	mov    al,ds:0xa1a88a43
  423827:	jo     0x42382c
  423829:	dec    esi
  42382a:	inc    esp
  42382b:	loop   0x42381f
  42382d:	or     DWORD PTR [edx-0x27c2eed1],ebp
  423833:	out    dx,al
  423834:	push   ds
  423835:	push   ecx
  423836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423837:	ss cli 
  423839:	xor    ah,BYTE PTR ds:0x600f51b3
  42383f:	test   BYTE PTR [edi],bh
  423841:	ret    0xac50
  423844:	pop    eax
  423845:	jmp    0x423833
  423847:	cmp    al,0x90
  423849:	mov    ecx,0x7b811e62
  42384e:	dec    edi
  42384f:	mov    edi,0x645faaac
  423854:	sbb    BYTE PTR [ebx+0x3dc4fc86],ah
  42385a:	out    0xc7,eax
  42385c:	pop    esi
  42385d:	mov    ds:0xf3726a50,eax
  423862:	jno    0x423814
  423864:	(bad)  
  423865:	mov    dl,0x31
  423867:	scas   eax,DWORD PTR es:[edi]
  423868:	call   0x276f0e2f
  42386d:	push   es
  42386e:	jne    0x423813
  423870:	xchg   edx,eax
  423871:	mov    bl,0x29
  423873:	nop
  423874:	in     al,0xa1
  423876:	aas    
  423877:	mov    ebp,0x79bf63f1
  42387c:	jecxz  0x423836
  42387e:	sub    al,0xfd
  423880:	fdivr  DWORD PTR [ecx]
  423882:	mov    al,ds:0x961da53e
  423887:	xlat   BYTE PTR ds:[ebx]
  423888:	xor    al,0xda
  42388a:	cmp    edi,edx
  42388c:	push   0x4b
  42388e:	jmp    0x8133:0x2654561
  423895:	fcmovb st,st(3)
  423897:	xchg   al,al
  423899:	mov    ds:0x9ca4e417,al
  42389e:	(bad)
  4238a1:	jb     0x423857
  4238a3:	scas   al,BYTE PTR es:[edi]
  4238a4:	daa    
  4238a5:	into   
  4238a6:	mov    edi,0x404ce78b
  4238ab:	nop
  4238ac:	call   0x175636e8
  4238b1:	retf   0xc0cd
  4238b4:	dec    edi
  4238b5:	out    dx,eax
  4238b6:	jnp    0x4238dd
  4238b8:	cli    
  4238b9:	bnd jl 0x423908
  4238bc:	cs mov dh,0x4d
  4238bf:	imul   edx,DWORD PTR [esi],0x21
  4238c2:	std    
  4238c3:	push   es
  4238c4:	cld    
  4238c5:	adc    eax,0x2c598f2f
  4238ca:	repnz test eax,0x7c81ecf
  4238d0:	call   0x94c7:0x59abc5df
  4238d7:	pop    edx
  4238d8:	mov    ecx,0xcfac675a
  4238dd:	and    al,0xfa
  4238df:	lds    eax,FWORD PTR [esi+ebx*2+0x2e]
  4238e3:	dec    esi
  4238e4:	dec    edx
  4238e5:	adc    DWORD PTR [esi+0x924fc4a],ebx
  4238eb:	rcl    BYTE PTR [ebx+0x17],1
  4238ee:	cmp    DWORD PTR [esi+ebx*2+0x49a05f0f],ebp
  4238f5:	push   ebx
  4238f6:	hlt    
  4238f7:	xchg   BYTE PTR [edx-0x4a],dh
  4238fa:	(bad)  
  4238fb:	mov    edi,0xbaa1548c
  423900:	fs adc eax,0x5cf22456
  423906:	jg     0x4238af
  423908:	xchg   ebp,eax
  423909:	lds    eax,FWORD PTR [ecx-0x80]
  42390c:	sbb    BYTE PTR [ebx-0x4d],al
  42390f:	popf   
  423910:	stos   BYTE PTR es:[edi],al
  423911:	sti    
  423912:	popa   
  423913:	push   ds
  423914:	mov    bl,0x7f
  423916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423917:	(bad)  
  423918:	and    al,0x4
  42391a:	jg     0x4238bc
  42391c:	int3   
  42391d:	xlat   BYTE PTR ds:[ebx]
  42391e:	cmc    
  42391f:	lods   al,BYTE PTR ds:[esi]
  423920:	(bad)  
  423921:	mov    edi,0x7e3d15c
  423926:	push   0xf790d426
  42392b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42392c:	fistp  QWORD PTR [edi]
  42392e:	adc    BYTE PTR [esi+0x54],ch
  423931:	dec    esi
  423932:	fild   QWORD PTR [eax]
  423934:	enter  0xbe85,0xf9
  423938:	cmp    eax,0x672c3952
  42393d:	or     bl,BYTE PTR [eax+0x27]
  423940:	cmp    BYTE PTR [edx+0x4d],0x12
  423944:	cmp    ecx,edx
  423946:	fcmovnbe st,st(0)
  423948:	jnp    0x423944
  42394a:	hlt    
  42394b:	(bad)  [esi-0x28]
  42394e:	pop    ds
  42394f:	jno    0x423949
  423951:	mov    cl,0x83
  423953:	clc    
  423954:	or     eax,0xa1e2ce6
  423959:	mov    al,ds:0x7c595bb
  42395e:	inc    ecx
  42395f:	loopne 0x4238ee
  423961:	sub    edi,DWORD PTR [edi+edx*1-0x1a6d0193]
  423968:	cmc    
  423969:	add    al,0x1d
  42396b:	loope  0x42397f
  42396d:	push   cs
  42396e:	retf   0x1f3
  423971:	cmc    
  423972:	test   eax,0xc39279e5
  423977:	xor    ecx,DWORD PTR [eax]
  423979:	mov    ebx,0xd284247f
  42397e:	ret    
  42397f:	pusha  
  423980:	sbb    ah,BYTE PTR [edi]
  423982:	dec    ebx
  423983:	jbe    0x42393c
  423985:	retf   
  423986:	cmp    al,ch
  423988:	xor    ecx,DWORD PTR [eax-0x1abc7dec]
  42398e:	xor    ch,BYTE PTR [esi-0x7a]
  423991:	aam    0x7c
  423993:	mov    dh,0xab
  423995:	icebp  
  423996:	(bad)  
  423997:	mov    edx,0xfae827c7
  42399c:	inc    edi
  42399d:	js     0x4239a5
  42399f:	in     eax,0x80
  4239a1:	les    edx,FWORD PTR [edx-0x6dafe5]
  4239a7:	ja     0x423997
  4239a9:	push   esi
  4239aa:	cmp    eax,0x9d36b629
  4239af:	cwde   
  4239b0:	add    ebp,0x9450cf04
  4239b6:	add    esp,DWORD PTR [ebx+edx*2]
  4239b9:	jb     0x42394f
  4239bb:	sbb    DWORD PTR [ecx-0x13],esi
  4239be:	fdiv   QWORD PTR [ebp+0x8d33e6d]
  4239c4:	push   esi
  4239c5:	pop    ecx
  4239c6:	mov    ebp,0x936166a0
  4239cb:	iret   
  4239cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239cd:	pop    ecx
  4239ce:	push   esi
  4239cf:	cli    
  4239d0:	or     ch,bl
  4239d2:	adc    al,0xc3
  4239d4:	add    eax,0xe35ce42b
  4239d9:	pop    ebx
  4239da:	jmp    FWORD PTR [eax+0x59]
  4239dd:	mov    ds:0x83bdbb22,al
  4239e2:	and    eax,0x6e1f6fd1
  4239e7:	sti    
  4239e8:	mov    esi,0x8ab3066e
  4239ed:	lods   al,BYTE PTR ds:[esi]
  4239ee:	xor    edx,DWORD PTR [esi]
  4239f0:	pop    ecx
  4239f1:	jb     0x423a02
  4239f3:	data16 jnp 0x423989
  4239f6:	out    dx,eax
  4239f7:	and    DWORD PTR [ebx+0x72],eax
  4239fa:	xlat   BYTE PTR ds:[ebx]
  4239fc:	xor    BYTE PTR [eax-0x3],bh
  4239ff:	xchg   DWORD PTR [esi+eiz*2-0xc],edx
  423a03:	repnz ins BYTE PTR es:[edi],dx
  423a05:	in     eax,dx
  423a06:	dec    edi
  423a07:	aam    0xca
  423a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a0a:	das    
  423a0b:	fild   QWORD PTR ds:0x9f4ba294
  423a11:	in     eax,0xf0
  423a13:	jno    0x423a8d
  423a15:	jo     0x423a50
  423a17:	sub    edi,eax
  423a19:	cmovno ebx,DWORD PTR [edx-0x2f3e47e4]
  423a20:	push   ss
  423a21:	in     al,0xc4
  423a23:	leave  
  423a24:	mov    DWORD PTR [ebx],edx
  423a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a27:	cmp    ebp,DWORD PTR [ebx-0x72]
  423a2a:	les    ecx,FWORD PTR [esi-0x1ef3c456]
  423a30:	xchg   ebp,eax
  423a31:	or     eax,0x896110a3
  423a36:	jns    0x423aa5
  423a38:	hlt    
  423a39:	pop    ebx
  423a3a:	test   eax,0x66fc5171
  423a3f:	add    bl,cl
  423a41:	popf   
  423a42:	daa    
  423a43:	push   ebp
  423a44:	fistp  WORD PTR [esi+0x7bab7e5]
  423a4a:	test   BYTE PTR [edx+0x77],ah
  423a4d:	xor    eax,0xb7a90c4e
  423a52:	or     BYTE PTR [edx-0x3a007167],bl
  423a58:	dec    ebp
  423a59:	inc    eax
  423a5a:	aas    
  423a5b:	scas   eax,DWORD PTR es:[edi]
  423a5c:	push   cs
  423a5d:	lods   eax,DWORD PTR ds:[esi]
  423a5e:	pop    edx
  423a5f:	arpl   bx,sp
  423a61:	mov    bh,0xec
  423a63:	mov    esp,0xfa618216
  423a68:	sbb    DWORD PTR [esi+0x15],esp
  423a6b:	mov    al,ds:0x47b02b9
  423a70:	push   ecx
  423a71:	mov    ebx,0x2bbaf222
  423a76:	lahf   
  423a77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a78:	xchg   edx,eax
  423a79:	(bad)
  423a7c:	mov    al,0x4a
  423a7e:	fdivrp st(3),st
  423a80:	sbb    BYTE PTR [edx+0x1],0xc1
  423a84:	js     0x423b00
  423a86:	std    
  423a87:	mov    eax,ds:0x9cdad4a0
  423a8c:	adc    bl,BYTE PTR [ebx+0x0]
  423a8f:	mul    dh
  423a91:	cmp    BYTE PTR [edx],0x8a
  423a94:	mov    dh,0x21
  423a96:	mov    edx,DWORD PTR ds:0xb72fbe50
  423a9c:	repnz lea esp,ds:0xe851a62d
  423aa3:	mov    bh,0x37
  423aa5:	mov    esp,0x696788be
  423aaa:	ds pop ds
  423aac:	sub    BYTE PTR [edi+0x6b],cl
  423aaf:	mov    dl,0xa4
  423ab1:	jns    0x423aca
  423ab3:	shr    DWORD PTR [esi],0xb8
  423ab6:	(bad)  
  423ab8:	cmp    DWORD PTR [esi+eiz*4-0x3d],ebp
  423abc:	(bad)  
  423abd:	jp     0x423a53
  423abf:	es clc 
  423ac1:	mov    ecx,0xe0dc2e95
  423ac6:	je     0x423b12
  423ac8:	xlat   BYTE PTR ds:[ebx]
  423ac9:	enter  0xfb4e,0xc0
  423acd:	mov    dh,0xb5
  423acf:	mov    ds:0xe6279b65,al
  423ad4:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  423ad6:	xor    ah,BYTE PTR [ebp+0x2c19dabd]
  423adc:	fucom  st(0)
  423ade:	arpl   sp,di
  423ae0:	xchg   DWORD PTR [ebx+0x71f3d8d4],ecx
  423ae6:	xchg   edi,eax
  423ae7:	or     ebp,DWORD PTR [esi+edx*4]
  423aea:	sar    BYTE PTR [ebx],1
  423aec:	das    
  423aed:	add    eax,0xbd6c35ea
  423af2:	sahf   
  423af3:	mov    esp,0x7819a7d5
  423af8:	inc    ebx
  423af9:	mov    ch,0x79
  423afb:	xor    ecx,esp
  423afd:	cmp    al,0x42
  423aff:	cdq    
  423b00:	jge    0x423b5f
  423b02:	and    ecx,DWORD PTR [ebx-0x5297671c]
  423b08:	adc    BYTE PTR [esi],ah
  423b0a:	adc    esp,edx
  423b0c:	call   DWORD PTR [ebp-0x5e845c77]
  423b12:	test   esi,eax
  423b14:	dec    ebx
  423b15:	inc    ebp
  423b16:	mov    edi,0xd33a5e4
  423b1b:	jae    0x423ace
  423b1d:	jne    0x423b4c
  423b1f:	ss repnz scas al,BYTE PTR es:[edi]
  423b22:	nop
  423b23:	mov    BYTE PTR [ecx+0x4e],al
  423b26:	and    BYTE PTR [esi],al
  423b28:	push   ecx
  423b29:	fs loope 0x423baa
  423b2c:	out    dx,eax
  423b2d:	outs   dx,BYTE PTR ds:[esi]
  423b2e:	push   0x32c3f93b
  423b33:	push   ebp
  423b34:	test   DWORD PTR [ebx+0x42],edi
  423b37:	rcl    dl,0x6d
  423b3a:	sub    al,0x1e
  423b3c:	sahf   
  423b3d:	dec    edi
  423b3e:	dec    edx
  423b3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b40:	cmp    ecx,ebp
  423b42:	dec    ecx
  423b43:	pop    ebx
  423b44:	pop    edi
  423b45:	fs jo  0x423b2d
  423b48:	lods   eax,DWORD PTR ds:[esi]
  423b49:	jmp    0x1271:0x892ff21
  423b50:	jno    0x423aed
  423b52:	xor    bh,BYTE PTR [ecx-0x31]
  423b55:	jae    0x423b57
  423b57:	dec    ebx
  423b58:	div    edx
  423b5a:	push   es
  423b5b:	cmc    
  423b5c:	add    ah,BYTE PTR [edx+eax*1+0x3af8f512]
  423b63:	mov    al,ds:0x5429c609
  423b68:	js     0x423b16
  423b6a:	test   eax,0x36445c9e
  423b6f:	sub    eax,DWORD PTR [ebx-0x2]
  423b72:	xchg   BYTE PTR [eax+edi*1],al
  423b75:	jae    0x423b8f
  423b77:	lock mov al,ds:0x237f813f
  423b7d:	or     bh,al
  423b7f:	mov    ah,0xcc
  423b81:	mov    edi,0x5d1d4838
  423b86:	retf   0x4c76
  423b89:	into   
  423b8a:	or     al,BYTE PTR [ecx-0x520e5d0d]
  423b90:	shl    BYTE PTR [edx+0x23b42d9b],1
  423b96:	lock inc esp
  423b98:	das    
  423b99:	xor    cl,BYTE PTR [esp+eax*8+0x6c]
  423b9d:	test   edx,0x93fc6d95
  423ba3:	fidivr WORD PTR ss:[edi-0x60a42f9c]
  423baa:	mov    ch,BYTE PTR [esi+0x13]
  423bad:	mov    ah,0xcc
  423baf:	xor    al,0xbe
  423bb1:	cmc    
  423bb2:	test   DWORD PTR [ebx],0x30d1c6ff
  423bb8:	das    
  423bb9:	mov    al,0x7b
  423bbb:	ror    edx,cl
  423bbd:	push   ds
  423bbe:	mov    ch,0x31
  423bc0:	push   ecx
  423bc1:	rol    ch,cl
  423bc3:	inc    esp
  423bc4:	ds inc eax
  423bc6:	addr16 jp 0x423bf2
  423bc9:	ss dec ecx
  423bcb:	out    0xf7,eax
  423bcd:	pusha  
  423bce:	cli    
  423bcf:	cdq    
  423bd0:	push   esp
  423bd1:	or     esp,DWORD PTR [edx+0x6c0f947b]
  423bd7:	div    DWORD PTR [ebp-0x1b921fbc]
  423bdd:	xlat   BYTE PTR ds:[ebx]
  423bde:	ret    
  423bdf:	mov    DWORD PTR fs:[edx-0x739bb8d4],eax
  423be6:	inc    esi
  423be7:	adc    BYTE PTR [eax-0x57cefc7b],0x66
  423bee:	aad    0xe1
  423bf0:	mov    eax,ds:0x330da232
  423bf5:	fstp   TBYTE PTR [ebp+0x73]
  423bf8:	mov    al,0xef
  423bfa:	ss clc 
  423bfc:	jmp    0x42ca:0x94ed2090
  423c03:	fld    DWORD PTR [eax]
  423c05:	ss aaa 
  423c07:	into   
  423c08:	xor    ah,BYTE PTR [eax-0x11bf4efa]
  423c0e:	push   0x1c2bdaca
  423c13:	in     al,dx
  423c14:	popf   
  423c15:	gs cmp esp,ebp
  423c18:	and    ebp,ebx
  423c1a:	sbb    eax,0x90a976f
  423c1f:	inc    esi
  423c20:	push   edi
  423c21:	daa    
  423c22:	and    DWORD PTR [eax+ecx*2-0x1],esi
  423c26:	push   ecx
  423c27:	sar    DWORD PTR [ebx],1
  423c29:	sub    al,0xf
  423c2b:	push   0xe
  423c2d:	jne    0x423bf7
  423c2f:	adc    esp,DWORD PTR [ebx]
  423c31:	outs   dx,BYTE PTR ds:[esi]
  423c32:	cmp    esi,edi
  423c34:	sub    al,0x80
  423c36:	imul   edx,DWORD PTR [ebx+edx*8],0xffffffac
  423c3a:	and    al,0x12
  423c3c:	or     al,0x4a
  423c3e:	xlat   BYTE PTR ds:[ebx]
  423c3f:	sub    BYTE PTR [esp+ecx*8],al
  423c42:	std    
  423c43:	mov    edx,0x1802e318
  423c48:	bound  edx,QWORD PTR [ebx-0x6d]
  423c4b:	sub    esp,DWORD PTR [ecx-0x35]
  423c4e:	add    eax,0x244ec0f5
  423c53:	xor    ebx,DWORD PTR [eax+0x1df25c50]
  423c59:	scas   al,BYTE PTR es:[edi]
  423c5a:	and    eax,0x71df3834
  423c5f:	and    ebx,DWORD PTR [eax]
  423c61:	cdq    
  423c62:	and    DWORD PTR [eax],ecx
  423c64:	icebp  
  423c65:	ins    DWORD PTR es:[edi],dx
  423c66:	push   cs
  423c67:	in     eax,0xa5
  423c69:	push   ds
  423c6a:	icebp  
  423c6b:	les    esp,FWORD PTR [edi-0x29f66be9]
  423c71:	sti    
  423c72:	cwde   
  423c73:	sbb    eax,0x356f7c4c
  423c78:	shr    dh,0x4f
  423c7b:	mov    ebp,0x2813927b
  423c80:	dec    edx
  423c81:	ret    0x432f
  423c84:	lock jb 0x423c47
  423c87:	jnp    0x423c32
  423c89:	cmc    
  423c8a:	mov    BYTE PTR gs:[edi-0x3c],al
  423c8e:	jno    0x423c8e
  423c90:	mov    bl,0x25
  423c92:	ja     0x423ce2
  423c94:	inc    DWORD PTR [ebx-0x18837627]
  423c9a:	fwait
  423c9b:	pop    ds
  423c9c:	mov    al,0xd8
  423c9e:	out    0x49,eax
  423ca0:	into   
  423ca1:	and    DWORD PTR [edi+0x1e968d61],esi
  423ca7:	pushf  
  423ca8:	mov    al,ds:0x3b724f45
  423cad:	dec    ebx
  423cae:	sub    BYTE PTR [ebx-0x29],bl
  423cb1:	ds int3 
  423cb3:	jmp    0x423c66
  423cb5:	aaa    
  423cb6:	jg     0x423ceb
  423cb8:	inc    ebx
  423cb9:	js     0x423cd8
  423cbb:	es sti 
  423cbd:	fadd   DWORD PTR [esi+0x11]
  423cc0:	test   DWORD PTR [edx],eax
  423cc2:	and    BYTE PTR ds:[ebx+0x53],cl
  423cc6:	inc    ebp
  423cc7:	adc    BYTE PTR [si-0x3dc6],0x8b
  423ccd:	stos   DWORD PTR es:[edi],eax
  423cce:	cmp    eax,0x35a3b2eb
  423cd3:	sbb    BYTE PTR ds:0xc59d2e4,cl
  423cd9:	aas    
  423cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cdb:	std    
  423cdc:	add    BYTE PTR [ecx],0x46
  423cdf:	cmp    al,cl
  423ce1:	pop    esi
  423ce2:	lock ins WORD PTR es:[edi],dx
  423ce5:	and    bl,BYTE PTR [edi+0x7d1ee044]
  423ceb:	rol    dl,1
  423ced:	pushf  
  423cee:	mov    ah,0x24
  423cf0:	xchg   ecx,eax
  423cf1:	test   al,0x49
  423cf3:	pop    eax
  423cf4:	cmp    DWORD PTR [ecx+ebp*8],ebx
  423cf7:	lods   eax,DWORD PTR ds:[esi]
  423cf8:	fwait
  423cf9:	repz pop eax
  423cfb:	aaa    
  423cfc:	fcmovb st,st(3)
  423cfe:	jno    0x423d7a
  423d00:	outs   dx,DWORD PTR ds:[esi]
  423d01:	mov    ds:0x26fcf1c8,al
  423d06:	add    DWORD PTR [edx+0x0],edx
  423d09:	retf   
  423d0a:	mov    dh,0x7a
  423d0c:	call   DWORD PTR [edi-0x5a7a799e]
  423d12:	jae    0x423d08
  423d14:	jnp    0x423cd3
  423d16:	sti    
  423d17:	xadd   DWORD PTR [eax+0x18],esp
  423d1b:	lods   eax,DWORD PTR ds:[esi]
  423d1c:	pop    edi
  423d1d:	sti    
  423d1e:	jmp    0x83970a42
  423d23:	pop    ebx
  423d24:	pop    ds
  423d25:	cli    
  423d26:	xor    eax,0xa665115c
  423d2b:	cmp    ch,bl
  423d2d:	sbb    al,0x7d
  423d2f:	or     dh,BYTE PTR [ebx]
  423d31:	inc    eax
  423d32:	pop    eax
  423d33:	(bad)  
  423d34:	push   esp
  423d35:	or     ch,BYTE PTR [ecx-0x2e]
  423d38:	fs mov ebp,0xfd985395
  423d3e:	inc    esi
  423d3f:	lock sub cl,BYTE PTR [ecx]
  423d42:	fwait
  423d43:	jl     0x423d24
  423d45:	xlat   BYTE PTR ds:[ebx]
  423d46:	push   cs
  423d47:	nop
  423d48:	pop    edi
  423d49:	mov    ebp,0xaf0eb509
  423d4e:	arpl   WORD PTR [ebp-0x63],ax
  423d51:	test   BYTE PTR [edx],al
  423d53:	mov    ah,0xad
  423d55:	clc    
  423d56:	into   
  423d57:	rcl    DWORD PTR [ebx-0x53],0x84
  423d5b:	xchg   ebx,eax
  423d5c:	mov    ch,0xe4
  423d5e:	or     dl,dl
  423d60:	adc    bh,BYTE PTR [edi]
  423d62:	mov    ebp,0xa9db5284
  423d67:	leave  
  423d68:	psrlw  mm6,mm5
  423d6b:	fcmovnbe st,st(7)
  423d6d:	mov    esp,ebx
  423d6f:	and    al,0x58
  423d71:	adc    BYTE PTR [ebx+0x7950465f],bh
  423d77:	gs mov ah,dh
  423d7a:	fist   DWORD PTR [edx]
  423d7c:	out    0x4a,al
  423d7e:	ror    DWORD PTR [edx+eax*1+0x7c],1
  423d82:	repnz push ss
  423d84:	test   DWORD PTR [edi-0x5c],esi
  423d87:	lahf   
  423d88:	push   ds
  423d89:	aad    0x35
  423d8b:	mov    esi,0xe5da59a
  423d90:	and    al,0xce
  423d92:	sub    DWORD PTR [edx],edi
  423d94:	mov    fs,WORD PTR [eax+0x8]
  423d97:	out    dx,al
  423d98:	test   DWORD PTR [ecx],edx
  423d9a:	xchg   edx,eax
  423d9b:	push   es
  423d9c:	nop
  423d9d:	loope  0x423e09
  423d9f:	and    BYTE PTR [edi],0x36
  423da2:	jnp    0x423dc6
  423da4:	js     0x423d98
  423da6:	sub    dh,ch
  423da8:	push   edi
  423da9:	retf   
  423daa:	xchg   ebp,eax
  423dab:	popa   
  423dac:	iret   
  423dad:	in     al,dx
  423dae:	cmp    al,0xe1
  423db0:	mov    esi,0x38ff1c03
  423db5:	hlt    
  423db6:	mov    ?,edx
  423db8:	loop   0x423da7
  423dba:	fnstenv [ebp+0x6]
  423dbd:	sahf   
  423dbe:	jno    0x423d61
  423dc0:	jno    0x423dac
  423dc2:	sub    DWORD PTR [ebx],ecx
  423dc4:	inc    edx
  423dc5:	inc    esp
  423dc6:	xchg   edx,eax
  423dc7:	jle    0x423dda
  423dc9:	aas    
  423dca:	adc    eax,0xfe489b08
  423dcf:	cli    
  423dd0:	jb     0x423d97
  423dd2:	jmp    0xbfb:0x999ae36c
  423dd9:	cs int 0xc2
  423ddc:	push   es
  423ddd:	xor    ebx,DWORD PTR [eax+0x7a]
  423de0:	xchg   edi,eax
  423de1:	cmc    
  423de2:	cs push ds
  423de4:	pop    es
  423de5:	nop
  423de6:	scas   eax,DWORD PTR es:[edi]
  423de7:	lods   al,BYTE PTR ds:[esi]
  423de8:	in     eax,0x16
  423dea:	mov    bh,0x2e
  423dec:	pop    ds
  423ded:	jns    0x423d7a
  423def:	sbb    edi,DWORD PTR [esi+ecx*4+0x16]
  423df3:	retf   0xf8a4
  423df6:	das    
  423df7:	scas   al,BYTE PTR es:[edi]
  423df8:	loopne 0x423d93
  423dfa:	clc    
  423dfb:	xchg   ebx,eax
  423dfc:	push   ebp
  423dfd:	(bad)  
  423dfe:	mov    eax,ds:0xd819216e
  423e03:	out    dx,al
  423e04:	dec    edi
  423e05:	pop    es
  423e06:	mov    cl,0x33
  423e08:	and    DWORD PTR [edx],0xe4318c59
  423e0e:	pusha  
  423e0f:	xor    dh,BYTE PTR [ecx-0x2f87bb71]
  423e15:	sub    ecx,ebp
  423e17:	pop    eax
  423e18:	out    0x34,al
  423e1a:	clc    
  423e1b:	push   0x2774d5ba
  423e20:	jg     0x423e0a
  423e22:	repz sbb ch,BYTE PTR [edi]
  423e25:	cmp    al,0x7a
  423e27:	jae    0x423df6
  423e29:	je     0x423e34
  423e2b:	sbb    DWORD PTR [edx],0x23a40d47
  423e31:	mov    es,ebp
  423e33:	or     al,BYTE PTR [ecx+edi*4+0x327732d0]
  423e3a:	icebp  
  423e3b:	xchg   ebx,eax
  423e3c:	scas   eax,DWORD PTR es:[edi]
  423e3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e3e:	and    BYTE PTR [ecx+ecx*1],cl
  423e41:	imul   ebx,DWORD PTR [edx+0x1d],0x3446061a
  423e48:	push   0x4f
  423e4a:	lds    ebp,FWORD PTR [eax+ebx*8-0x3d3e9d9]
  423e51:	dec    esi
  423e52:	jge    0x423e2c
  423e54:	cmp    al,0x94
  423e56:	adc    al,0xf8
  423e58:	in     al,dx
  423e59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e5a:	daa    
  423e5b:	push   ecx
  423e5c:	rol    BYTE PTR [ebp+ecx*2+0xebaba8b],0x2e
  423e64:	jge    0x423e61
  423e66:	inc    esi
  423e67:	scas   eax,DWORD PTR es:[edi]
  423e68:	clc    
  423e69:	rcr    DWORD PTR [ecx-0x261b2c77],cl
  423e6f:	xchg   BYTE PTR [ecx],bh
  423e71:	cli    
  423e72:	ja     0x423ec9
  423e74:	ds aad 0x74
  423e77:	pop    edx
  423e78:	mov    ebx,0x6c041020
  423e7d:	jmp    0x9572750c
  423e82:	out    dx,al
  423e83:	add    DWORD PTR [ebp-0x5adae319],ebx
  423e89:	fcomi  st,st(6)
  423e8b:	mul    BYTE PTR [ebp+0x28]
  423e8e:	mov    ds:0x7d5851d8,al
  423e93:	shl    DWORD PTR [ebx],0x28
  423e96:	std    
  423e97:	sbb    esi,DWORD PTR [ebp-0x3a5abc9e]
  423e9d:	out    dx,eax
  423e9e:	mov    ebp,0xa081794c
  423ea3:	mov    ah,0x19
  423ea5:	retf   0xcfc6
  423ea8:	pop    ds
  423ea9:	fisubr DWORD PTR [ecx+ebx*1+0x54]
  423ead:	repz fnstcw WORD PTR [eax+0x63aa703e]
  423eb4:	dec    edi
  423eb5:	hlt    
  423eb6:	adc    eax,0xac58b291
  423ebb:	adc    eax,0x4663848d
  423ec0:	mov    eax,0xa7d6f9a3
  423ec5:	xor    bh,BYTE PTR [ecx]
  423ec7:	ss inc ebp
  423ec9:	mov    ecx,0xfa82892
  423ece:	pop    ebx
  423ecf:	add    dl,BYTE PTR [edi+0x5cd96c2d]
  423ed5:	sub    BYTE PTR [esi*2-0x31aa4bef],cl
  423edc:	(bad)  
  423edd:	fadd   st(3),st
  423edf:	xor    DWORD PTR [ecx+0x151e25d4],edi
  423ee5:	dec    eax
  423ee6:	inc    ecx
  423ee7:	xor    al,0xbe
  423ee9:	sti    
  423eea:	cdq    
  423eeb:	mov    dh,0x17
  423eed:	das    
  423eee:	outs   dx,BYTE PTR ds:[esi]
  423eef:	jo     0x423f57
  423ef1:	push   es
  423ef2:	lea    esp,[ebp-0x5f93788a]
  423ef8:	jle    0x423f45
  423efa:	rcl    BYTE PTR [edx-0x80],cl
  423efd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423efe:	mov    ch,0x17
  423f00:	add    BYTE PTR [eax-0x5],ch
  423f03:	rcl    BYTE PTR [ebx-0x6b],1
  423f06:	cdq    
  423f07:	mov    edi,0x91d72c95
  423f0c:	out    dx,al
  423f0d:	sub    al,BYTE PTR [eax]
  423f0f:	sub    eax,0xe4a277a
  423f14:	jbe    0x423f86
  423f16:	int    0x8e
  423f18:	mov    al,0xc1
  423f1a:	inc    ebp
  423f1b:	jg     0x423ec0
  423f1d:	adc    eax,0x8c700ad7
  423f22:	jle    0x423f09
  423f24:	fnstsw WORD PTR [edx+0x304cb80b]
  423f2a:	pop    es
  423f2b:	mov    dh,BYTE PTR [edi]
  423f2d:	lahf   
  423f2e:	es pop es
  423f30:	inc    esi
  423f31:	or     ebp,DWORD PTR [esi+0xc575b06]
  423f37:	ret    
  423f38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f39:	push   ebp
  423f3a:	out    dx,eax
  423f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f3c:	js     0x423f55
  423f3e:	fidivr DWORD PTR [ecx+0x60]
  423f41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f42:	sub    eax,0x6e876cde
  423f47:	scas   al,BYTE PTR es:[edi]
  423f48:	and    al,0xca
  423f4a:	push   es
  423f4b:	lock jne 0x423faf
  423f4e:	(bad)  
  423f50:	dec    ecx
  423f51:	sti    
  423f52:	lea    ebp,[ebp+0x595c9053]
  423f58:	jmp    0x423f4f
  423f5a:	push   ds
  423f5b:	(bad)  
  423f5c:	fcomp  QWORD PTR [ebp-0x68613d3]
  423f62:	add    DWORD PTR [ebp+0x64],edi
  423f65:	div    BYTE PTR [ecx]
  423f67:	pop    ebp
  423f68:	not    BYTE PTR [edi-0x39]
  423f6b:	pop    es
  423f6c:	bt     DWORD PTR ds:0x54d75f4a,0xaa
  423f74:	pop    esp
  423f75:	mov    edx,0x6b486595
  423f7a:	and    ebx,DWORD PTR [ebx+0x39]
  423f7d:	(bad)  
  423f7e:	jecxz  0x423f86
  423f80:	or     eax,0x32296b5d
  423f85:	mov    edi,0x9aa3ccd5
  423f8a:	bound  ebp,QWORD PTR [ebp-0x1a2514eb]
  423f90:	ds aam 0x3f
  423f93:	jp     0x423f73
  423f95:	xchg   edx,eax
  423f96:	popf   
  423f97:	pop    ebp
  423f98:	jle    0x423fb4
  423f9a:	pusha  
  423f9b:	adc    eax,0x47369a53
  423fa0:	(bad)  
  423fa1:	enter  0xea37,0x1d
  423fa5:	aaa    
  423fa6:	rcr    BYTE PTR ds:0x134d00d,cl
  423fac:	push   0x36d3b68b
  423fb1:	xchg   DWORD PTR [ebp+eax*2+0x2cb9611c],esp
  423fb8:	outs   dx,BYTE PTR ds:[esi]
  423fb9:	ja     0x423f4f
  423fbb:	pop    es
  423fbc:	bound  edx,QWORD PTR [esi+eiz*2+0x4d]
  423fc0:	call   0x2092:0xcb0715a9
  423fc7:	fs fwait
  423fc9:	jb     0x423f63
  423fcb:	xchg   ebx,eax
  423fcc:	test   al,0xd2
  423fce:	es jle 0x423ff4
  423fd1:	xor    BYTE PTR [ecx],bl
  423fd3:	iret   
  423fd4:	xchg   DWORD PTR [esi+0x18f05bdd],esi
  423fda:	sbb    edi,eax
  423fdc:	lahf   
  423fdd:	aad    0xa1
  423fdf:	mov    ecx,DWORD PTR [edx]
  423fe1:	xor    DWORD PTR [ebx+ebx*2-0x5a15f7a6],0xffffffc6
  423fe9:	and    eax,0xb5d943f5
  423fee:	fsub   QWORD PTR [edi-0x5660021d]
  423ff4:	sbb    eax,0x5d60bb9d
  423ff9:	push   ebx
  423ffa:	sub    ebx,edx
  423ffc:	cmp    dh,0x5c
  423fff:	mov    bl,0xeb
  424001:	dec    edx
  424002:	in     eax,0xf2
  424004:	ins    DWORD PTR es:[edi],dx
  424005:	into   
  424006:	cdq    
  424007:	add    BYTE PTR [ebx],dl
  424009:	pop    ecx
  42400a:	jne    0x423feb
  42400c:	sbb    esi,DWORD PTR [eax-0x1c9e3905]
  424012:	push   esi
  424013:	out    0xbe,eax
  424015:	(bad)  
  424016:	repnz or al,0xc
  424019:	dec    esp
  42401a:	jmp    0x5bb9:0xa0400d5b
  424021:	add    dh,dl
  424023:	ret    
  424024:	(bad)
  424028:	rcl    BYTE PTR [eax-0x1fdebec6],1
  42402e:	push   ebx
  42402f:	fsincos 
  424031:	inc    eax
  424032:	add    DWORD PTR [ebp+0x7f],ebx
  424035:	(bad)  
  424036:	jle    0x4240a1
  424038:	dec    eax
  424039:	in     eax,dx
  42403a:	out    0xc3,al
  42403c:	mov    BYTE PTR [ebp-0x50],bh
  42403f:	and    eax,0x5de214cc
  424044:	mov    eax,ds:0xcb0ea9ff
  424049:	dec    ebp
  42404a:	rol    DWORD PTR [edi+0x51],1
  42404d:	adc    edi,esp
  42404f:	popf   
  424050:	call   0x8001:0x51a3acf7
  424057:	mov    ds:0x88f9a956,al
  42405c:	popa   
  42405d:	loope  0x4240c8
  42405f:	(bad)  
  424060:	mov    al,0x1f
  424062:	in     al,0x8d
  424064:	daa    
  424065:	mov    dl,0x44
  424067:	fwait
  424068:	and    esi,DWORD PTR [ebp+eiz*2+0x6952da3]
  42406f:	mov    bh,0x96
  424071:	sub    eax,0x3e8cd986
  424076:	popa   
  424077:	jo     0x42409c
  424079:	mov    al,ds:0x71df5f31
  42407e:	xchg   edi,eax
  42407f:	je     0x424094
  424081:	pop    ss
  424082:	mov    BYTE PTR [esi+0x223e0b5],bl
  424088:	dec    ecx
  424089:	mov    bh,0x4a
  42408b:	lea    ebp,[edx+edi*4]
  42408e:	(bad)  
  42408f:	sbb    DWORD PTR [edx-0x65],esp
  424092:	ret    0x2abe
  424095:	dec    ebx
  424096:	cmp    ebp,DWORD PTR [edi+ebp*2]
  424099:	outs   dx,BYTE PTR ds:[esi]
  42409a:	sbb    DWORD PTR [edx+0x5b07d45e],edx
  4240a0:	leave  
  4240a1:	fcmovnb st,st(7)
  4240a3:	sahf   
  4240a4:	xor    eax,0xf2bb52ff
  4240a9:	rcr    DWORD PTR [ecx],0xb7
  4240ac:	sbb    bh,bh
  4240ae:	fimul  WORD PTR [eax+edi*2+0x21228699]
  4240b5:	xchg   BYTE PTR [edx-0x46],ah
  4240b8:	pop    ebp
  4240b9:	and    DWORD PTR [ebx+0x2a],esp
  4240bc:	jp     0x424042
  4240be:	in     eax,dx
  4240bf:	imul   edi,DWORD PTR [ebx+0x3d15e5f1],0xbe0669a
  4240c9:	int    0x2a
  4240cb:	adc    esp,ebx
  4240cd:	mov    dh,BYTE PTR [edx]
  4240cf:	popa   
  4240d0:	push   es
  4240d1:	or     eax,0xe1ca3c51
  4240d6:	or     al,dl
  4240d8:	(bad)  
  4240d9:	cmp    al,0x93
  4240db:	lods   eax,DWORD PTR ds:[esi]
  4240dc:	or     ah,ch
  4240de:	outs   dx,BYTE PTR ds:[esi]
  4240df:	xor    BYTE PTR [edx*4-0x21ba261f],al
  4240e6:	or     DWORD PTR [ecx+0x57],0x47
  4240ea:	sbb    al,0xf8
  4240ec:	loop   0x4240d6
  4240ee:	add    BYTE PTR [esi],ch
  4240f0:	pop    eax
  4240f1:	adc    al,BYTE PTR [eax+ebx*8-0x16]
  4240f5:	adc    DWORD PTR [ebp+0x1d],0x23a9c0
  4240fc:	ret    
  4240fd:	sbb    eax,0x23600df0
  424102:	xchg   ecx,edx
  424104:	xor    esp,DWORD PTR [ebp-0x46973bfd]
  42410a:	fcmovnbe st,st(3)
  42410c:	push   es
  42410d:	push   0x55
  42410f:	clc    
  424110:	int3   
  424111:	(bad)  
  424113:	shl    BYTE PTR [eax+0x5d883276],1
  424119:	jns    0x424188
  42411b:	pop    ss
  42411c:	cli    
  42411d:	dec    ecx
  42411e:	push   ecx
  42411f:	xchg   ecx,eax
  424120:	shr    BYTE PTR [esi+eiz*8+0x73c5c6ec],0xc1
  424128:	lds    esi,FWORD PTR [eax]
  42412a:	dec    edx
  42412b:	jl     0x4241a6
  42412d:	jle    0x4241a2
  42412f:	xchg   DWORD PTR [eax+0x5d],edx
  424132:	clc    
  424133:	test   DWORD PTR ds:0xa4fc2e64,0x92943a1a
  42413d:	or     BYTE PTR [edi],0xd
  424140:	sbb    DWORD PTR [edx-0x16],0xffffffee
  424144:	jge    0x4240fe
  424146:	mov    ds:0x5bf89c85,al
  42414b:	pop    edi
  42414c:	pop    esi
  42414d:	leave  
  42414e:	ret    0xc
  424151:	push   ebp
  424152:	mov    ebp,esp
  424154:	push   ecx
  424155:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42415c:	mov    DWORD PTR ds:0x4291bb,0x19
  424166:	cmp    DWORD PTR ds:0x4291bb,0x0
  42416d:	je     0x4241c3
  424173:	cmp    DWORD PTR ds:0x4291bb,0x5
  42417a:	jb     0x4241c3
  424180:	jmp    0x424195
  424185:	push   0x6cdd
  42418a:	push   0x428019
  42418f:	call   DWORD PTR ds:0x42a677
  424195:	cmp    DWORD PTR ds:0x4291bb,0x6
  42419c:	jne    0x4241b1
  4241a2:	xor    ecx,ecx
  4241a4:	xor    ecx,DWORD PTR ds:0x4291bb
  4241aa:	dec    ecx
  4241ab:	mov    DWORD PTR ds:0x4291bb,ecx
  4241b1:	mov    ecx,DWORD PTR ds:0x4291bb
  4241b7:	dec    ecx
  4241b8:	mov    DWORD PTR ds:0x4291bb,ecx
  4241be:	jmp    0x424166
  4241c3:	mov    eax,DWORD PTR [ebp+0x8]
  4241c6:	or     ecx,ecx
  4241c8:	movsx  eax,BYTE PTR [eax]
  4241cb:	or     ecx,0x305b
  4241d1:	mov    edx,0x3272f3
  4241d6:	add    DWORD PTR ds:0x4291c7,0x4291f7
  4241e0:	sub    eax,edx
  4241e2:	mov    DWORD PTR ds:0x4291a7,0x1e
  4241ec:	cmp    DWORD PTR ds:0x4291a7,0x0
  4241f3:	je     0x42424b
  4241f9:	cmp    DWORD PTR ds:0x4291a7,0x6
  424200:	jl     0x42424b
  424206:	jmp    0x42421d
  42420b:	push   0x4280f2
  424210:	push   0x1
  424212:	push   0x8730
  424217:	call   DWORD PTR ds:0x42a67f
  42421d:	cmp    DWORD PTR ds:0x4291a7,0x7
  424224:	jne    0x424237
  42422a:	mov    ecx,DWORD PTR ds:0x4291a7
  424230:	dec    ecx
  424231:	mov    DWORD PTR ds:0x4291a7,ecx
  424237:	xor    ecx,ecx
  424239:	add    ecx,DWORD PTR ds:0x4291a7
  42423f:	dec    ecx
  424240:	mov    DWORD PTR ds:0x4291a7,ecx
  424246:	jmp    0x4241ec
  42424b:	mov    ecx,0x75108ac
  424250:	xor    eax,ecx
  424252:	cmp    eax,0xf89c85f6
  424257:	jne    0x424286
  42425d:	mov    eax,DWORD PTR [ebp+0x8]
  424260:	push   esi
  424261:	mov    esi,DWORD PTR [ebp+0x8]
  424264:	add    esi,DWORD PTR [eax+0x3c]
  424267:	mov    DWORD PTR [ebp+0x8],esi
  42426a:	mov    eax,DWORD PTR [ebp-0x4]
  42426d:	mov    esi,DWORD PTR [ebp+0x8]
  424270:	xor    eax,ecx
  424272:	add    eax,edx
  424274:	cmp    DWORD PTR [esi+0x54],eax
  424277:	pop    esi
  424278:	je     0x424286
  42427e:	mov    eax,DWORD PTR [ebp+0x8]
  424281:	jmp    0x42428d
  424286:	mov    eax,DWORD PTR [ebp-0x4]
  424289:	xor    eax,ecx
  42428b:	add    eax,edx
  42428d:	leave  
  42428e:	ret    0x4
  424291:	push   ebp
  424292:	mov    ebp,esp
  424294:	sub    esp,0xc
  424297:	and    DWORD PTR ds:0x429157,0x0
  4242a1:	mov    edx,DWORD PTR ds:0x429157
  4242a7:	inc    edx
  4242a8:	mov    DWORD PTR ds:0x429157,edx
  4242ae:	cmp    DWORD PTR ds:0x429157,0x16
  4242b5:	jl     0x4242d6
  4242bb:	jmp    0x4242c9
  4242c0:	push   DWORD PTR [ebp-0x14]
  4242c3:	call   DWORD PTR ds:0x42a683
  4242c9:	cmp    DWORD PTR ds:0x429157,0x13
  4242d0:	jb     0x4242a1
  4242d6:	push   esi
  4242d7:	mov    esi,0xf89c85a1
  4242dc:	mov    edx,DWORD PTR ds:0x429f2f
  4242e2:	mov    ecx,DWORD PTR ds:0x429f37
  4242e8:	sub    edx,ecx
  4242ea:	sub    edx,DWORD PTR [edx+ecx*1]
  4242ed:	mov    DWORD PTR [ebp-0x8],esi
  4242f0:	and    DWORD PTR ds:0x4291bf,0x59ca
  4242fa:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424301:	sub    edx,DWORD PTR ds:0x4291df
  424307:	push   edi
  424308:	and    DWORD PTR ds:0x4291c7,0x0
  424312:	jmp    0x424326
  424317:	xor    ecx,ecx
  424319:	or     ecx,DWORD PTR ds:0x4291c7
  42431f:	inc    ecx
  424320:	mov    DWORD PTR ds:0x4291c7,ecx
  424326:	cmp    DWORD PTR ds:0x4291c7,0x1f
  42432d:	jae    0x42435b
  424333:	cmp    DWORD PTR ds:0x4291c7,0x20
  42433a:	jbe    0x42435b
  424340:	jmp    0x424356
  424345:	push   0x42803d
  42434a:	push   DWORD PTR [ebp-0x20]
  42434d:	push   DWORD PTR [ebp-0x24]
  424350:	call   DWORD PTR ds:0x42a687
  424356:	jmp    0x424317
  42435b:	mov    eax,eax
  42435d:	and    DWORD PTR ds:0x42919b,0x3c1b
  424367:	mov    eax,DWORD PTR [ebp-0x4]
  42436a:	add    DWORD PTR ds:0x4291df,0x7092
  424374:	mov    edi,DWORD PTR [ebp-0x8]
  424377:	adc    DWORD PTR ds:0x429193,edx
  42437d:	mov    ecx,0x75108ac
  424382:	mov    edx,DWORD PTR ds:0x42917b
  424388:	and    DWORD PTR ds:0x4291e7,edx
  42438e:	xor    eax,ecx
  424390:	add    DWORD PTR ds:0x4291df,0x314e
  42439a:	xor    edi,ecx
  42439c:	mov    edx,DWORD PTR ds:0x429f1b
  4243a2:	mov    edx,DWORD PTR [edx]
  4243a4:	adc    DWORD PTR ds:0x4291ab,edx
  4243aa:	mov    edx,0x3272f3
  4243af:	add    edi,edx
  4243b1:	add    eax,edx
  4243b3:	imul   eax,edi
  4243b6:	mov    edi,DWORD PTR [ebp+0xc]
  4243b9:	cmp    edi,eax
  4243bb:	je     0x424410
  4243c1:	mov    DWORD PTR [ebp-0xc],esi
  4243c4:	mov    eax,DWORD PTR [ebp-0xc]
  4243c7:	mov    esi,DWORD PTR [ebp+0xc]
  4243ca:	xor    eax,ecx
  4243cc:	lea    eax,[eax*8+0x1939810]
  4243d3:	mov    eax,DWORD PTR [esi+eax*1]
  4243d6:	mov    DWORD PTR [ebp+0xc],eax
  4243d9:	mov    eax,DWORD PTR [ebp-0x4]
  4243dc:	mov    esi,DWORD PTR [ebp-0x8]
  4243df:	xor    eax,ecx
  4243e1:	xor    esi,ecx
  4243e3:	add    esi,edx
  4243e5:	add    eax,edx
  4243e7:	imul   eax,esi
  4243ea:	mov    esi,DWORD PTR [ebp+0xc]
  4243ed:	cmp    esi,eax
  4243ef:	je     0x424410
  4243f5:	mov    eax,DWORD PTR [ebp-0x4]
  4243f8:	xor    eax,ecx
  4243fa:	mov    ecx,DWORD PTR [ebp+0xc]
  4243fd:	add    eax,edx
  4243ff:	imul   eax,ecx
  424402:	add    eax,DWORD PTR [ebp+0x8]
  424405:	mov    DWORD PTR [ebp+0xc],eax
  424408:	mov    eax,DWORD PTR [ebp+0xc]
  42440b:	jmp    0x424421
  424410:	mov    eax,DWORD PTR [ebp-0x4]
  424413:	mov    esi,DWORD PTR [ebp-0x8]
  424416:	xor    esi,ecx
  424418:	xor    eax,ecx
  42441a:	add    esi,edx
  42441c:	add    eax,edx
  42441e:	imul   eax,esi
  424421:	pop    edi
  424422:	pop    esi
  424423:	leave  
  424424:	ret    0x8
	...
  424433:	add    BYTE PTR [ebx],dl
  424435:	push   esp
  424436:	test   BYTE PTR [ebp+0x0],cl
  424439:	add    BYTE PTR [eax],al
  42443b:	add    BYTE PTR [edx],al
  42443d:	add    BYTE PTR [eax],al
  42443f:	add    BYTE PTR [eax],dh
  424441:	add    BYTE PTR [eax],al
  424443:	add    BYTE PTR [eax+0x44],dl
  424446:	add    al,BYTE PTR [eax]
  424448:	push   eax
  424449:	cmp    BYTE PTR [edx],al
  42444b:	add    BYTE PTR [eax],al
  42444d:	add    BYTE PTR [eax],al
  42444f:	add    BYTE PTR [edx+0x53],dl
  424452:	inc    esp
  424453:	push   ebx
  424454:	jg     0x4243fa
  424456:	je     0x424424
  424458:	lock xchg DWORD PTR [eax],eax
  42445b:	inc    esi
  42445c:	sahf   
  42445d:	pop    eax
  42445e:	push   edx
  42445f:	push   0x74
  424461:	arpl   cx,sp
  424463:	jns    0x424466
  424465:	add    BYTE PTR [eax],al
  424467:	add    BYTE PTR [esi+0x3a],al
  42446a:	pop    esp
  42446b:	push   edi
  42446c:	imul   ebp,DWORD PTR [esi+0x64],0x2073776f
  424473:	inc    esp
  424474:	imul   esi,DWORD PTR [edx+0x5c],0x656c6946
  42447b:	inc    ebp
  42447c:	js     0x4244e3
  42447e:	arpl   WORD PTR [eax],ax
  424480:	mov    edx,DWORD PTR [ebp-0x14]
  424483:	sub    esp,0x108
  424489:	push   ebx
  42448a:	mov    eax,ebx
  42448c:	xchg   ecx,eax
  42448d:	mov    eax,DWORD PTR [ebp+0x8]
  424490:	cmp    eax,0xf89c85a1
  424495:	jne    0x424952
  42449b:	mov    eax,DWORD PTR [ebp+0xc]
  42449e:	cmp    eax,0xf89c85a2
  4244a3:	jne    0x424952
  4244a9:	mov    eax,DWORD PTR [ebp+0x24]
  4244ac:	mov    DWORD PTR [ebp-0x4],eax
  4244af:	mov    eax,DWORD PTR [ebp-0x4]
  4244b2:	mov    eax,DWORD PTR [eax+0x1d8]
  4244b8:	mov    eax,DWORD PTR [eax]
  4244ba:	mov    eax,DWORD PTR [eax]
  4244bc:	mov    DWORD PTR [ebp-0x8],eax
  4244bf:	mov    BYTE PTR [ebp-0x18],0x18
  4244c3:	mov    BYTE PTR [ebp-0x17],0x1f
  4244c7:	mov    BYTE PTR [ebp-0x16],0x1a
  4244cb:	mov    BYTE PTR [ebp-0x15],0x4c
  4244cf:	mov    BYTE PTR [ebp-0x14],0x4d
  4244d3:	mov    BYTE PTR [ebp-0x13],0x83
  4244d7:	mov    BYTE PTR [ebp-0x20],0xe
  4244db:	mov    BYTE PTR [ebp-0x1f],0xc
  4244df:	mov    BYTE PTR [ebp-0x1e],0x1e
  4244e3:	mov    BYTE PTR [ebp-0x1d],0xd
  4244e7:	mov    BYTE PTR [ebp-0x1c],0x4c
  4244eb:	mov    BYTE PTR [ebp-0x1b],0x4d
  4244ef:	mov    BYTE PTR [ebp-0x1a],0x83
  4244f3:	mov    BYTE PTR [ebp-0x28],0xc
  4244f7:	mov    BYTE PTR [ebp-0x27],0x1b
  4244fb:	mov    BYTE PTR [ebp-0x26],0x17
  4244ff:	mov    BYTE PTR [ebp-0x25],0x8
  424503:	mov    BYTE PTR [ebp-0x24],0x22
  424507:	mov    BYTE PTR [ebp-0x23],0x13
  42450b:	mov    BYTE PTR [ebp-0x22],0x1a
  42450f:	mov    BYTE PTR [ebp-0x21],0x83
  424513:	xor    ecx,ecx
  424515:	lea    eax,[ebp+ecx*1-0x18]
  424519:	movzx  edx,BYTE PTR [eax]
  42451c:	xor    edx,0x7d
  42451f:	add    edx,0x2
  424522:	inc    ecx
  424523:	mov    BYTE PTR [eax],dl
  424525:	cmp    ecx,0x6
  424528:	jb     0x424515
  42452a:	xor    ecx,ecx
  42452c:	lea    eax,[ebp+ecx*1-0x20]
  424530:	movzx  edx,BYTE PTR [eax]
  424533:	xor    edx,0x7d
  424536:	add    edx,0x2
  424539:	inc    ecx
  42453a:	mov    BYTE PTR [eax],dl
  42453c:	cmp    ecx,0x7
  42453f:	jb     0x42452c
  424541:	xor    ecx,ecx
  424543:	lea    eax,[ebp+ecx*1-0x28]
  424547:	movzx  edx,BYTE PTR [eax]
  42454a:	xor    edx,0x7d
  42454d:	add    edx,0x2
  424550:	inc    ecx
  424551:	mov    BYTE PTR [eax],dl
  424553:	cmp    ecx,0x8
  424556:	jb     0x424543
  424558:	lea    eax,[ebp-0x2c]
  42455b:	mov    DWORD PTR [ebp-0x8],eax
  42455e:	mov    ecx,DWORD PTR [ebp-0x8]
  424561:	mov    eax,0x7113fccf
  424566:	mov    DWORD PTR [ecx],eax
  424568:	mov    ecx,DWORD PTR [ebp-0x2c]
  42456b:	push   esi
  42456c:	push   edi
  42456d:	mov    esi,0x4e3c
  424572:	mov    ebx,0x3272f3
  424577:	cmp    ecx,eax
  424579:	jne    0x424644
  42457f:	lea    eax,[esi+0x3b]
  424582:	mov    WORD PTR [ebp-0x78],ax
  424586:	mov    eax,esi
  424588:	mov    WORD PTR [ebp-0x76],ax
  42458c:	add    eax,0x35
  42458f:	mov    WORD PTR [ebp-0x74],ax
  424593:	lea    eax,[esi+0x2]
  424596:	mov    WORD PTR [ebp-0x72],ax
  42459a:	add    eax,0x41
  42459d:	mov    ecx,eax
  42459f:	lea    eax,[esi-0x13]
  4245a2:	mov    WORD PTR [ebp-0x66],ax
  4245a6:	mov    eax,esi
  4245a8:	mov    WORD PTR [ebp-0x64],ax
  4245ac:	add    eax,0xffffffec
  4245af:	mov    WORD PTR [ebp-0x62],ax
  4245b3:	mov    eax,0x443
  4245b8:	mov    WORD PTR [ebp-0x60],ax
  4245bc:	mov    eax,0x5672
  4245c1:	mov    WORD PTR [ebp-0x5e],ax
  4245c5:	mov    eax,0x6112
  4245ca:	mov    WORD PTR [ebp-0x5c],ax
  4245ce:	lea    eax,[ebp-0xe0]
  4245d4:	push   eax
  4245d5:	mov    eax,DWORD PTR [ebp+0xc]
  4245d8:	mov    edi,0x75108ac
  4245dd:	xor    eax,edi
  4245df:	add    eax,ebx
  4245e1:	push   eax
  4245e2:	mov    WORD PTR [ebp-0x70],cx
  4245e6:	lea    ecx,[esi-0xa]
  4245e9:	mov    edx,ecx
  4245eb:	lea    eax,[ebp-0x78]
  4245ee:	push   eax
  4245ef:	mov    eax,DWORD PTR [ebp-0x4]
  4245f2:	mov    eax,DWORD PTR [eax+0x198]
  4245f8:	mov    WORD PTR [ebp-0x6e],dx
  4245fc:	mov    edx,0x4f88
  424601:	mov    WORD PTR [ebp-0x6c],dx
  424605:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  42460c:	mov    DWORD PTR [ebp-0x5a],0x4e32f1e4
  424613:	mov    DWORD PTR [ebp-0xe0],0x1
  42461d:	mov    DWORD PTR [ebp-0xdc],0x255
  424627:	push   DWORD PTR [eax]
  424629:	mov    eax,DWORD PTR [ebp+0x10]
  42462c:	call   eax
  42462e:	mov    DWORD PTR [ebp-0x8],eax
  424631:	mov    eax,DWORD PTR [ebp-0x8]
  424634:	test   eax,eax
  424636:	je     0x424649
  424638:	xor    DWORD PTR ds:0x76586876,0x87687666
  424642:	jmp    0x424649
  424644:	mov    edi,0x75108ac
  424649:	mov    eax,DWORD PTR [ebp-0x4]
  42464c:	mov    ecx,DWORD PTR [eax+0x18c]
  424652:	xor    eax,eax
  424654:	cmp    DWORD PTR [ecx],eax
  424656:	jne    0x4248c5
  42465c:	mov    ecx,DWORD PTR [ebp-0x4]
  42465f:	mov    ecx,DWORD PTR [ecx+0x17c]
  424665:	mov    DWORD PTR [ecx],eax
  424667:	mov    ecx,DWORD PTR [ebp-0x4]
  42466a:	mov    ecx,DWORD PTR [ecx+0x180]
  424670:	mov    DWORD PTR [ecx],eax
  424672:	mov    eax,0x4e61
  424677:	mov    WORD PTR [ebp-0x9c],ax
  42467e:	mov    eax,esi
  424680:	mov    WORD PTR [ebp-0x9a],ax
  424687:	mov    eax,0x4e71
  42468c:	mov    WORD PTR [ebp-0x98],ax
  424693:	add    eax,0xffffffc0
  424696:	mov    WORD PTR [ebp-0x96],ax
  42469d:	mov    eax,0x4f8c
  4246a2:	mov    WORD PTR [ebp-0x94],ax
  4246a9:	mov    eax,0x4e30
  4246ae:	mov    WORD PTR [ebp-0x92],ax
  4246b5:	add    eax,0x4f
  4246b8:	mov    WORD PTR [ebp-0x90],ax
  4246bf:	mov    eax,0x4e32
  4246c4:	mov    WORD PTR [ebp-0x8e],ax
  4246cb:	mov    eax,esi
  4246cd:	mov    WORD PTR [ebp-0x8c],ax
  4246d4:	mov    eax,0x4e35
  4246d9:	mov    WORD PTR [ebp-0x8a],ax
  4246e0:	mov    eax,0x99f1
  4246e5:	mov    WORD PTR [ebp-0x88],ax
  4246ec:	mov    eax,0x8d60
  4246f1:	mov    WORD PTR [ebp-0x86],ax
  4246f8:	mov    eax,0xd66f
  4246fd:	mov    WORD PTR [ebp-0x84],ax
  424704:	mov    eax,0xd783
  424709:	mov    WORD PTR [ebp-0x82],ax
  424710:	mov    eax,0x2782
  424715:	mov    WORD PTR [ebp-0x80],ax
  424719:	mov    eax,0x4782
  42471e:	mov    WORD PTR [ebp-0x7e],ax
  424722:	mov    eax,0x4e33
  424727:	push   0x8
  424729:	mov    WORD PTR [ebp-0x7c],ax
  42472d:	mov    DWORD PTR [ebp-0x10],0x8171b0c
  424734:	mov    DWORD PTR [ebp-0xc],0x831a1322
  42473b:	lea    eax,[ebp-0x10]
  42473e:	pop    ecx
  42473f:	mov    dl,BYTE PTR [eax]
  424741:	xor    dl,0x7d
  424744:	add    dl,0x2
  424747:	mov    BYTE PTR [eax],dl
  424749:	inc    eax
  42474a:	dec    ecx
  42474b:	jne    0x42473f
  42474d:	lea    eax,[ebp-0x10]
  424750:	mov    DWORD PTR [ebp-0xdc],eax
  424756:	lea    eax,[ebp-0xe0]
  42475c:	push   eax
  42475d:	mov    eax,DWORD PTR [ebp+0xc]
  424760:	xor    eax,edi
  424762:	add    eax,ebx
  424764:	push   eax
  424765:	mov    eax,DWORD PTR [ebp-0x4]
  424768:	add    eax,0x66
  42476b:	push   eax
  42476c:	mov    eax,DWORD PTR [ebp-0x4]
  42476f:	mov    eax,DWORD PTR [eax+0x198]
  424775:	mov    DWORD PTR [ebp-0xe0],0x1
  42477f:	push   DWORD PTR [eax]
  424781:	mov    eax,DWORD PTR [ebp+0x10]
  424784:	call   eax
  424786:	mov    ecx,DWORD PTR [ebp+0x8]
  424789:	xor    ecx,edi
  42478b:	add    ecx,ebx
  42478d:	mov    DWORD PTR [ebp-0x8],eax
  424790:	cmp    eax,ecx
  424792:	jne    0x4247ad
  424794:	mov    eax,ds:0x33730bc8
  424799:	or     eax,0x22150bcf
  42479e:	mov    ds:0x33730bc8,eax
  4247a3:	add    eax,0x3372e92f
  4247a8:	mov    ds:0x33730bc8,eax
  4247ad:	mov    ecx,0x4e64
  4247b2:	mov    eax,ecx
  4247b4:	mov    WORD PTR [ebp-0x40],ax
  4247b8:	add    eax,0x7
  4247bb:	mov    edx,eax
  4247bd:	mov    WORD PTR [ebp-0x3e],dx
  4247c1:	mov    edx,0x4f93
  4247c6:	mov    WORD PTR [ebp-0x3c],dx
  4247ca:	add    edx,0xfffffff8
  4247cd:	mov    WORD PTR [ebp-0x3a],dx
  4247d1:	mov    edx,0x4f8d
  4247d6:	mov    WORD PTR [ebp-0x38],dx
  4247da:	inc    edx
  4247db:	mov    WORD PTR [ebp-0x36],dx
  4247df:	mov    edx,0x4f87
  4247e4:	mov    WORD PTR [ebp-0x34],dx
  4247e8:	mov    WORD PTR [ebp-0x32],cx
  4247ec:	mov    ecx,esi
  4247ee:	mov    WORD PTR [ebp-0x30],cx
  4247f2:	lea    ecx,[edx-0x3]
  4247f5:	mov    edx,ecx
  4247f7:	mov    WORD PTR [ebp-0x54],dx
  4247fb:	mov    edx,eax
  4247fd:	mov    WORD PTR [ebp-0x52],dx
  424801:	mov    edx,0x4e73
  424806:	mov    WORD PTR [ebp-0x50],dx
  42480a:	mov    WORD PTR [ebp-0x4e],ax
  42480e:	lea    eax,[edx-0x6]
  424811:	mov    WORD PTR [ebp-0x4c],ax
  424815:	inc    eax
  424816:	mov    WORD PTR [ebp-0x4a],ax
  42481a:	lea    eax,[edx-0xc]
  42481d:	mov    WORD PTR [ebp-0x48],ax
  424821:	mov    WORD PTR [ebp-0x46],cx
  424825:	mov    WORD PTR [ebp-0x44],si
  424829:	mov    eax,DWORD PTR [ebp+0x8]
  42482c:	movzx  ecx,WORD PTR [ebp-0x54]
  424830:	xor    eax,edi
  424832:	add    eax,ebx
  424834:	xor    eax,ecx
  424836:	mov    WORD PTR [ebp-0x54],ax
  42483a:	mov    eax,DWORD PTR [ebp+0x8]
  42483d:	movzx  ecx,WORD PTR [ebp-0x40]
  424841:	xor    eax,edi
  424843:	add    eax,ebx
  424845:	xor    eax,ecx
  424847:	mov    WORD PTR [ebp-0x40],ax
  42484b:	xor    eax,eax
  42484d:	mov    WORD PTR [ebp-0xf4],ax
  424854:	mov    WORD PTR [ebp-0x108],ax
  42485b:	mov    edi,DWORD PTR [ebp+0x24]
  42485e:	lea    eax,[ebp-0xf4]
  424864:	lea    edx,[ebp-0x54]
  424867:	mov    DWORD PTR [ebp-0xe0],0x2
  424871:	mov    DWORD PTR [ebp-0xdc],eax
  424877:	call   0x4272b1
  42487c:	mov    DWORD PTR [ebp-0xd8],eax
  424882:	lea    eax,[ebp-0xe0]
  424888:	push   eax
  424889:	mov    eax,DWORD PTR [ebp+0xc]
  42488c:	xor    eax,0x75108ac
  424891:	add    eax,ebx
  424893:	push   eax
  424894:	lea    eax,[ebp-0x9c]
  42489a:	push   eax
  42489b:	push   DWORD PTR [ebp-0x8]
  42489e:	mov    eax,DWORD PTR [ebp+0x10]
  4248a1:	call   eax
  4248a3:	mov    edi,DWORD PTR [ebp+0x24]
  4248a6:	lea    eax,[ebp-0x108]
  4248ac:	lea    edx,[ebp-0x40]
  4248af:	mov    DWORD PTR [ebp-0xdc],eax
  4248b5:	call   0x4272b1
  4248ba:	mov    DWORD PTR [ebp-0xd8],eax
  4248c0:	mov    edi,0x75108ac
  4248c5:	mov    eax,DWORD PTR [ebp+0x14]
  4248c8:	push   DWORD PTR [ebp-0x4]
  4248cb:	push   DWORD PTR [ebp+0x20]
  4248ce:	push   DWORD PTR [ebp+0x1c]
  4248d1:	push   DWORD PTR [ebp+0x18]
  4248d4:	push   DWORD PTR [ebp+0x10]
  4248d7:	push   DWORD PTR [ebp+0x8]
  4248da:	push   DWORD PTR [ebp+0xc]
  4248dd:	call   0x425b50
  4248e2:	test   eax,eax
  4248e4:	je     0x424928
  4248e6:	add    DWORD PTR [ebp-0x4],eax
  4248e9:	push   DWORD PTR [ebp-0x4]
  4248ec:	lea    esi,[ebp+0x4]
  4248ef:	call   0x424d40
  4248f4:	mov    eax,DWORD PTR [ebp-0x4]
  4248f7:	mov    eax,DWORD PTR [eax+0x1c8]
  4248fd:	mov    eax,DWORD PTR [eax]
  4248ff:	xor    eax,edi
  424901:	add    eax,ebx
  424903:	mov    eax,DWORD PTR [ebp-0x4]
  424906:	jne    0x42491e
  424908:	mov    ecx,DWORD PTR [ebp-0x4]
  42490b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424911:	push   DWORD PTR [ecx]
  424913:	mov    eax,DWORD PTR [eax+0x1e0]
  424919:	call   DWORD PTR [eax+0x28]
  42491c:	jmp    0x424928
  42491e:	mov    eax,DWORD PTR [eax+0x17c]
  424924:	mov    eax,DWORD PTR [eax]
  424926:	add    DWORD PTR [esi],eax
  424928:	mov    eax,DWORD PTR [ebp-0x4]
  42492b:	mov    eax,DWORD PTR [eax+0x1dc]
  424931:	dec    DWORD PTR [eax]
  424933:	mov    ecx,DWORD PTR [ebp-0x4]
  424936:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42493c:	mov    eax,DWORD PTR [eax]
  42493e:	lea    eax,[ecx+eax*4]
  424941:	mov    ecx,DWORD PTR [ebp-0x4]
  424944:	mov    ecx,DWORD PTR [ecx+0x17c]
  42494a:	mov    eax,DWORD PTR [eax]
  42494c:	mov    ecx,DWORD PTR [ecx]
  42494e:	add    DWORD PTR [eax],ecx
  424950:	pop    edi
  424951:	pop    esi
  424952:	pop    ebx
  424953:	leave  
  424954:	ret    0x20
  424957:	push   edi
  424958:	push   esi
  424959:	push   ebx
  42495a:	push   ebp
  42495b:	mov    ebp,esp
  42495d:	mov    eax,DWORD PTR [ebp+0x24]
  424960:	add    DWORD PTR [ebp+0x28],eax
  424963:	push   eax
  424964:	cld    
  424965:	mov    esi,DWORD PTR [ebp+0x18]
  424968:	add    DWORD PTR [ebp+0x1c],esi
  42496b:	push   esi
  42496c:	mov    esi,DWORD PTR [ebp+0x14]
  42496f:	lods   eax,DWORD PTR ds:[esi]
  424970:	xchg   edx,eax
  424971:	push   edx
  424972:	mov    cl,BYTE PTR [esi-0x2]
  424975:	or     eax,0xffffffff
  424978:	shl    eax,cl
  42497a:	not    eax
  42497c:	push   eax
  42497d:	mov    cl,dh
  42497f:	or     eax,0xffffffff
  424982:	shl    eax,cl
  424984:	not    eax
  424986:	push   eax
  424987:	add    cl,dl
  424989:	mov    edi,esi
  42498b:	sub    esp,0xc
  42498e:	sub    eax,eax
  424990:	inc    eax
  424991:	push   eax
  424992:	push   eax
  424993:	push   eax
  424994:	push   eax
  424995:	push   eax
  424996:	push   edi
  424997:	sub    esi,esi
  424999:	push   esi
  42499a:	or     ebx,0xffffffff
  42499d:	mov    eax,0x300
  4249a2:	shl    eax,cl
  4249a4:	lea    ecx,[eax+0x736]
  4249aa:	mov    eax,0x4000400
  4249af:	shr    ecx,1
  4249b1:	rep stos DWORD PTR es:[edi],eax
  4249b3:	push   0x5
  4249b5:	pop    ecx
  4249b6:	call   0x424ca1
  4249bb:	loop   0x4249b6
  4249bd:	lea    esi,[esi]
  4249bf:	lea    edi,[edi]
  4249c1:	mov    edi,DWORD PTR [ebp-0x4]
  4249c4:	mov    eax,DWORD PTR [ebp-0x10]
  4249c7:	sub    edi,DWORD PTR [ebp+0x24]
  4249ca:	and    eax,edi
  4249cc:	mov    DWORD PTR [ebp-0x18],eax
  4249cf:	mov    al,0x0
  4249d1:	call   0x424cb9
  4249d6:	jne    0x424a71
  4249dc:	mov    cl,BYTE PTR [ebp-0xc]
  4249df:	and    edi,DWORD PTR [ebp-0x14]
  4249e2:	shl    edi,cl
  4249e4:	sub    cl,0x8
  4249e7:	neg    cl
  4249e9:	shr    esi,cl
  4249eb:	pop    eax
  4249ec:	add    edi,esi
  4249ee:	pop    esi
  4249ef:	lea    edi,[edi+edi*2]
  4249f2:	shl    edi,0x8
  4249f5:	cmp    al,0x7
  4249f7:	pop    edx
  4249f8:	lea    ecx,[esi+edi*2+0xe6c]
  4249ff:	push   ecx
  424a00:	push   esi
  424a01:	mov    esi,0x100
  424a06:	push   eax
  424a07:	mov    al,0x1
  424a09:	jb     0x424a3f
  424a0b:	mov    edi,DWORD PTR [ebp-0x4]
  424a0e:	sub    edi,DWORD PTR [ebp-0x24]
  424a11:	movzx  edi,BYTE PTR [edi]
  424a14:	mov    ebp,DWORD PTR [ebp-0x34]
  424a17:	shl    edi,1
  424a19:	mov    ecx,esi
  424a1b:	and    esi,edi
  424a1d:	add    ecx,esi
  424a1f:	lea    ebp,[ebp+ecx*2+0x0]
  424a23:	call   0x424cd8
  424a28:	mov    ecx,eax
  424a2a:	shr    esi,0x8
  424a2d:	and    ecx,0x1
  424a30:	cmp    esi,ecx
  424a32:	mov    esi,0x100
  424a37:	jne    0x424a47
  424a39:	cmp    eax,esi
  424a3b:	jb     0x424a14
  424a3d:	jmp    0x424a53
  424a3f:	mov    ebp,DWORD PTR [ebp-0x34]
  424a42:	call   0x424cd8
  424a47:	inc    eax
  424a48:	inc    esi
  424a49:	sub    eax,0x1
  424a4c:	sub    esi,0x1
  424a4f:	cmp    eax,esi
  424a51:	jb     0x424a3f
  424a53:	pop    edx
  424a54:	inc    edx
  424a55:	cmp    edx,0x5
  424a58:	dec    edx
  424a59:	mov    ecx,edx
  424a5b:	jb     0x424a6c
  424a5d:	inc    edx
  424a5e:	cmp    edx,0xb
  424a61:	dec    edx
  424a62:	mov    cl,0x4
  424a64:	dec    cl
  424a66:	jb     0x424a6c
  424a68:	mov    cl,0x7
  424a6a:	dec    cl
  424a6c:	sub    edx,ecx
  424a6e:	push   edx
  424a6f:	jmp    0x424ac0
  424a71:	mov    al,0xc1
  424a73:	dec    al
  424a75:	call   0x424cc9
  424a7a:	jne    0x424a90
  424a7c:	pop    eax
  424a7d:	pop    edi
  424a7e:	pop    edx
  424a7f:	pop    ecx
  424a80:	pop    edx
  424a81:	pop    ecx
  424a82:	push   DWORD PTR [esp]
  424a85:	push   ecx
  424a86:	push   edx
  424a87:	mov    edx,0x664
  424a8c:	mov    cl,0x0
  424a8e:	jmp    0x424b03
  424a90:	mov    al,0xcd
  424a92:	dec    al
  424a94:	call   0x424cc9
  424a99:	jne    0x424ac9
  424a9b:	mov    al,0xf1
  424a9d:	dec    al
  424a9f:	call   0x424cb9
  424aa4:	jne    0x424af9
  424aa6:	pop    eax
  424aa7:	cmp    al,0x7
  424aa9:	mov    al,0x9
  424aab:	jb     0x424aaf
  424aad:	mov    al,0xb
  424aaf:	push   eax
  424ab0:	mov    esi,DWORD PTR [ebp-0x4]
  424ab3:	sub    esi,DWORD PTR [ebp-0x24]
  424ab6:	cmp    esi,DWORD PTR [ebp+0x24]
  424ab9:	jb     0x424c90
  424abf:	lods   al,BYTE PTR ds:[esi]
  424ac0:	mov    edi,DWORD PTR [ebp-0x4]
  424ac3:	stos   BYTE PTR es:[edi],al
  424ac4:	jmp    0x424c57
  424ac9:	mov    al,0xd8
  424acb:	call   0x424cc9
  424ad0:	mov    esi,DWORD PTR [ebp-0x28]
  424ad3:	je     0x424af0
  424ad5:	mov    al,0xe4
  424ad7:	call   0x424cc9
  424adc:	mov    esi,DWORD PTR [ebp-0x2c]
  424adf:	je     0x424aea
  424ae1:	mov    esi,DWORD PTR [ebp-0x30]
  424ae4:	mov    ecx,DWORD PTR [ebp-0x2c]
  424ae7:	mov    DWORD PTR [ebp-0x30],ecx
  424aea:	mov    ecx,DWORD PTR [ebp-0x28]
  424aed:	mov    DWORD PTR [ebp-0x2c],ecx
  424af0:	mov    ecx,DWORD PTR [ebp-0x24]
  424af3:	mov    DWORD PTR [ebp-0x28],ecx
  424af6:	mov    DWORD PTR [ebp-0x24],esi
  424af9:	pop    eax
  424afa:	pop    edi
  424afb:	pop    ecx
  424afc:	mov    edx,0xa68
  424b01:	mov    cl,0x8
  424b03:	add    edx,edi
  424b05:	push   edx
  424b06:	push   edi
  424b07:	cmp    al,0x7
  424b09:	mov    al,cl
  424b0b:	jb     0x424b0f
  424b0d:	add    al,0x3
  424b0f:	push   eax
  424b10:	mov    ebp,DWORD PTR [ebp-0x34]
  424b13:	call   0x424cd6
  424b18:	jne    0x424b2e
  424b1a:	mov    eax,DWORD PTR [ebp-0x18]
  424b1d:	mov    edi,DWORD PTR [ebp-0x34]
  424b20:	shl    eax,0x3
  424b23:	sub    ecx,ecx
  424b25:	push   0x8
  424b27:	pop    esi
  424b28:	lea    edi,[edi+eax*2+0x4]
  424b2c:	jmp    0x424b63
  424b2e:	mov    ebp,DWORD PTR [ebp-0x34]
  424b31:	add    ebp,0x2
  424b34:	call   0x424cd6
  424b39:	jne    0x424b53
  424b3b:	mov    eax,DWORD PTR [ebp-0x18]
  424b3e:	mov    edi,DWORD PTR [ebp-0x34]
  424b41:	shl    eax,0x3
  424b44:	push   0x8
  424b46:	pop    ecx
  424b47:	push   0x8
  424b49:	pop    esi
  424b4a:	lea    edi,[edi+eax*2+0x104]
  424b51:	jmp    0x424b63
  424b53:	mov    edi,0x204
  424b58:	add    edi,DWORD PTR [ebp-0x34]
  424b5b:	push   0x10
  424b5d:	pop    ecx
  424b5e:	mov    esi,0x100
  424b63:	mov    DWORD PTR [ebp-0x1c],ecx
  424b66:	sub    eax,eax
  424b68:	inc    eax
  424b69:	mov    ebp,edi
  424b6b:	call   0x424cd8
  424b70:	mov    ecx,eax
  424b72:	sub    ecx,esi
  424b74:	jb     0x424b69
  424b76:	add    DWORD PTR [ebp-0x1c],ecx
  424b79:	cmp    DWORD PTR [ebp-0x3c],0x4
  424b7d:	jae    0x424c33
  424b83:	add    DWORD PTR [ebp-0x3c],0x7
  424b87:	mov    ecx,DWORD PTR [ebp-0x1c]
  424b8a:	cmp    ecx,0x4
  424b8d:	jb     0x424b92
  424b8f:	push   0x3
  424b91:	pop    ecx
  424b92:	mov    edi,DWORD PTR [ebp-0x38]
  424b95:	shl    ecx,0x6
  424b98:	sub    eax,eax
  424b9a:	inc    eax
  424b9b:	push   0x40
  424b9d:	pop    esi
  424b9e:	lea    edi,[edi+ecx*2+0x360]
  424ba5:	mov    ebp,edi
  424ba7:	call   0x424cd8
  424bac:	mov    ecx,eax
  424bae:	sub    ecx,esi
  424bb0:	jb     0x424ba5
  424bb2:	mov    DWORD PTR [ebp-0x18],ecx
  424bb5:	mov    DWORD PTR [ebp-0x24],ecx
  424bb8:	cmp    ecx,0x4
  424bbb:	jb     0x424c30
  424bbd:	mov    esi,ecx
  424bbf:	and    DWORD PTR [ebp-0x24],0x1
  424bc3:	shr    esi,1
  424bc5:	or     DWORD PTR [ebp-0x24],0x2
  424bc9:	dec    esi
  424bca:	cmp    ecx,0xe
  424bcd:	jae    0x424be8
  424bcf:	mov    eax,0x2af
  424bd4:	sub    eax,ecx
  424bd6:	mov    ecx,esi
  424bd8:	shl    BYTE PTR [ebp-0x24],cl
  424bdb:	add    eax,DWORD PTR [ebp-0x24]
  424bde:	shl    eax,1
  424be0:	add    eax,DWORD PTR [ebp-0x38]
  424be3:	mov    DWORD PTR [ebp-0x34],eax
  424be6:	jmp    0x424c15
  424be8:	sub    esi,0x4
  424beb:	call   0x424c95
  424bf0:	shr    ebx,1
  424bf2:	shl    DWORD PTR [ebp-0x24],1
  424bf5:	cmp    DWORD PTR [ebp-0x20],ebx
  424bf8:	jb     0x424c00
  424bfa:	inc    DWORD PTR [ebp-0x24]
  424bfd:	sub    DWORD PTR [ebp-0x20],ebx
  424c00:	dec    esi
  424c01:	jne    0x424beb
  424c03:	mov    eax,0x644
  424c08:	add    eax,DWORD PTR [ebp-0x38]
  424c0b:	mov    DWORD PTR [ebp-0x34],eax
  424c0e:	shl    DWORD PTR [ebp-0x24],0x4
  424c12:	push   0x4
  424c14:	pop    esi
  424c15:	sub    edi,edi
  424c17:	inc    edi
  424c18:	mov    eax,edi
  424c1a:	mov    ebp,DWORD PTR [ebp-0x34]
  424c1d:	call   0x424cd8
  424c22:	test   al,0x1
  424c24:	je     0x424c29
  424c26:	or     DWORD PTR [ebp-0x24],edi
  424c29:	shl    edi,1
  424c2b:	dec    esi
  424c2c:	jne    0x424c1a
  424c2e:	jmp    0x424c30
  424c30:	inc    DWORD PTR [ebp-0x24]
  424c33:	mov    ecx,DWORD PTR [ebp-0x1c]
  424c36:	add    ecx,0x2
  424c39:	mov    edi,DWORD PTR [ebp-0x4]
  424c3c:	mov    eax,edi
  424c3e:	sub    eax,DWORD PTR [ebp+0x24]
  424c41:	cmp    DWORD PTR [ebp-0x24],eax
  424c44:	ja     0x424c90
  424c46:	mov    esi,edi
  424c48:	sub    esi,DWORD PTR [ebp-0x24]
  424c4b:	mov    edx,DWORD PTR [ebp+0x28]
  424c4e:	lods   al,BYTE PTR ds:[esi]
  424c4f:	stos   BYTE PTR es:[edi],al
  424c50:	cmp    edi,edx
  424c52:	jae    0x424c57
  424c54:	dec    ecx
  424c55:	jne    0x424c4e
  424c57:	mov    DWORD PTR [ebp-0x4],edi
  424c5a:	movzx  esi,al
  424c5d:	cmp    edi,DWORD PTR [ebp+0x28]
  424c60:	jb     0x4249c1
  424c66:	call   0x424c95
  424c6b:	sub    eax,eax
  424c6d:	lea    ebp,[esp+0x3c]
  424c71:	mov    edx,DWORD PTR [ebp+0x20]
  424c74:	mov    esi,DWORD PTR [ebp-0x8]
  424c77:	sub    esi,DWORD PTR [ebp+0x18]
  424c7a:	mov    DWORD PTR [edx],esi
  424c7c:	mov    edx,DWORD PTR [ebp+0x2c]
  424c7f:	mov    edi,DWORD PTR [edx+edi*2+0x33]
  424c83:	jl     0x424c9c
  424c85:	lods   eax,DWORD PTR ds:[esi]
  424c86:	outs   dx,DWORD PTR ds:[esi]
  424c87:	scas   al,BYTE PTR es:[edi]
  424c88:	hlt    
  424c89:	add    BYTE PTR [edx+edx*4],al
  424c8c:	test   DWORD PTR [edi-0x75cc1800],0x8dea3688
  424c96:	jbe    0x424c1f
  424c98:	xchg   DWORD PTR [edi-0x6974af75],eax
  424c9e:	mov    ss,WORD PTR [esi]
  424ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ca1:	loopne 0x424c58
  424ca3:	pop    esp
  424ca4:	push   0x73
  424ca6:	pop    esp
  424ca7:	not    DWORD PTR [edx+ebx*1-0x4b]
  424cab:	pushf  
  424cac:	or     cl,BYTE PTR [esi-0x52c658f6]
  424cb2:	pushf  
  424cb3:	or     ch,BYTE PTR [ebp-0x69ff95a4]
  424cb9:	mov    ch,0xbc
  424cbb:	call   0x970e:0x8e8a61c3
  424cc2:	xchg   ebx,eax
  424cc3:	pushf  
  424cc4:	sub    dl,BYTE PTR [ebx-0x3c60c972]
  424cca:	popa   
  424ccb:	mov    dl,BYTE PTR [ebx+0x3cb59a9c]
  424cd1:	stos   BYTE PTR es:[edi],al
  424cd2:	mov    ebp,0x33879c38
  424cd7:	mov    bh,BYTE PTR [ebp-0x727863c8]
  424cdd:	jbe    0x424c66
  424cdf:	xchg   DWORD PTR [edi-0x4a08ab75],eax
  424ce5:	mov    eax,0x188e6717
  424cea:	pop    ss
  424ceb:	pop    es
  424cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ced:	jae    0x424ca7
  424cef:	pop    ss
  424cf0:	clc    
  424cf1:	push   esp
  424cf2:	stc    
  424cf3:	mov    cl,0xcb
  424cf5:	xchg   BYTE PTR [eax+0x168e6717],bl
  424cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cfc:	test   eax,0x8b0717d8
  424d01:	retf   
  424d02:	movzx  edx,WORD PTR [ebp+0x0]
  424d06:	shr    ecx,0xb
  424d09:	imul   ecx,edx
  424d0c:	cmp    DWORD PTR [esp+0x20],ecx
  424d10:	jae    0x424d29
  424d12:	mov    ebx,ecx
  424d14:	mov    ecx,0x800
  424d19:	sub    ecx,edx
  424d1b:	shr    ecx,0x5
  424d1e:	add    WORD PTR [ebp+0x0],cx
  424d22:	add    eax,eax
  424d24:	lea    ebp,[esp+0x40]
  424d28:	ret    
  424d29:	shr    edx,0x5
  424d2c:	sub    DWORD PTR [esp+0x20],ecx
  424d30:	sub    ebx,ecx
  424d32:	sub    WORD PTR [ebp+0x0],dx
  424d36:	add    eax,eax
  424d38:	add    eax,0x1
  424d3b:	lea    ebp,[esp+0x40]
  424d3f:	ret    
  424d40:	push   ebp
  424d41:	mov    ebp,esp
  424d43:	sub    esp,0x12c
  424d49:	push   ebx
  424d4a:	push   esi
  424d4b:	push   edi
  424d4c:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  424d53:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  424d5a:	mov    eax,DWORD PTR [ebp+0x8]
  424d5d:	mov    DWORD PTR [ebp+0x8],eax
  424d60:	mov    ecx,DWORD PTR [ebp-0x10]
  424d63:	mov    ebx,0x75108ac
  424d68:	xor    ecx,ebx
  424d6a:	mov    eax,0x3272f3
  424d6f:	add    ecx,eax
  424d71:	mov    DWORD PTR [ebp-0x24],ecx
  424d74:	mov    ecx,DWORD PTR [ebp-0x10]
  424d77:	xor    ecx,ebx
  424d79:	add    ecx,eax
  424d7b:	mov    DWORD PTR [ebp-0x40],ecx
  424d7e:	mov    ecx,DWORD PTR [ebp-0x10]
  424d81:	xor    ecx,ebx
  424d83:	add    ecx,eax
  424d85:	mov    DWORD PTR [ebp-0x3c],ecx
  424d88:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8b:	xor    ecx,ebx
  424d8d:	add    ecx,eax
  424d8f:	mov    DWORD PTR [ebp-0xd8],ecx
  424d95:	mov    DWORD PTR [ebp-0x50],0xf89f05a1
  424d9c:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a1
  424da3:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  424daa:	push   0x25
  424dac:	pop    ecx
  424dad:	mov    DWORD PTR [ebp-0x30],ecx
  424db0:	mov    DWORD PTR [ebp-0x30],ecx
  424db3:	push   0x65
  424db5:	pop    ecx
  424db6:	mov    DWORD PTR [ebp-0x30],ecx
  424db9:	mov    DWORD PTR [ebp-0x30],ecx
  424dbc:	mov    DWORD PTR [ebp-0x30],0x4d
  424dc3:	mov    DWORD PTR [ebp-0x30],0x43
  424dca:	mov    ecx,DWORD PTR [ebp-0x10]
  424dcd:	xor    ecx,ebx
  424dcf:	add    ecx,eax
  424dd1:	mov    DWORD PTR [ebp-0x30],ecx
  424dd4:	mov    ecx,DWORD PTR [ebp-0x10]
  424dd7:	xor    ecx,ebx
  424dd9:	add    ecx,eax
  424ddb:	mov    DWORD PTR [ebp-0x30],ecx
  424dde:	mov    DWORD PTR [ebp-0x28],0x258
  424de5:	mov    DWORD PTR [ebp-0x34],0x36
  424dec:	mov    DWORD PTR [ebp-0x14],0x7a
  424df3:	lea    edi,[ebp-0x10c]
  424df9:	lea    esi,[ebp-0x12c]
  424dff:	call   0x425abf
  424e04:	dec    DWORD PTR [ebp-0x14]
  424e07:	jne    0x424df3
  424e09:	dec    DWORD PTR [ebp-0x34]
  424e0c:	jne    0x424dec
  424e0e:	dec    DWORD PTR [ebp-0x28]
  424e11:	jne    0x424de5
  424e13:	mov    DWORD PTR [ebp-0x28],0x400e
  424e1a:	mov    eax,DWORD PTR [ebp-0x10]
  424e1d:	xor    eax,ebx
  424e1f:	mov    esi,0x3272f3
  424e24:	add    eax,esi
  424e26:	mov    DWORD PTR [ebp-0x1c],eax
  424e29:	mov    eax,DWORD PTR [ebp-0x10]
  424e2c:	and    DWORD PTR [ebp-0x94],0x0
  424e33:	xor    eax,ebx
  424e35:	add    eax,esi
  424e37:	mov    DWORD PTR [ebp-0x38],eax
  424e3a:	mov    eax,fs:0x18
  424e40:	mov    DWORD PTR [ebp-0x94],eax
  424e46:	mov    eax,DWORD PTR [eax+0x30]
  424e49:	mov    DWORD PTR [ebp-0xcc],eax
  424e4f:	mov    eax,DWORD PTR [eax+0xc]
  424e52:	mov    DWORD PTR [ebp-0xc0],eax
  424e58:	mov    eax,DWORD PTR [ebp+0x8]
  424e5b:	lea    ecx,[ebp-0x94]
  424e61:	mov    DWORD PTR [eax+0x1a0],ecx
  424e67:	mov    eax,DWORD PTR [ebp+0x8]
  424e6a:	lea    ecx,[ebp-0xcc]
  424e70:	mov    DWORD PTR [eax+0x1a4],ecx
  424e76:	mov    eax,DWORD PTR [ebp+0x8]
  424e79:	push   DWORD PTR [ebp+0x8]
  424e7c:	lea    ecx,[ebp-0xc0]
  424e82:	mov    DWORD PTR [eax+0x1a8],ecx
  424e88:	call   0x427282
  424e8d:	mov    ecx,DWORD PTR [ebp-0x10]
  424e90:	xor    ecx,ebx
  424e92:	add    ecx,esi
  424e94:	cmp    ecx,eax
  424e96:	je     0x425219
  424e9c:	mov    eax,DWORD PTR [ebp+0x8]
  424e9f:	mov    eax,DWORD PTR [eax+0x194]
  424ea5:	mov    ecx,DWORD PTR [eax]
  424ea7:	mov    eax,DWORD PTR [ebp+0x8]
  424eaa:	mov    eax,DWORD PTR [eax+0x194]
  424eb0:	mov    eax,DWORD PTR [eax]
  424eb2:	add    eax,DWORD PTR [ecx+0x3c]
  424eb5:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424ebe:	lea    edx,[ebp-0xec]
  424ec4:	push   edx
  424ec5:	mov    edx,DWORD PTR [ebp+0x8]
  424ec8:	mov    edx,DWORD PTR [edx+0x18c]
  424ece:	mov    edx,DWORD PTR [edx]
  424ed0:	add    edx,DWORD PTR [eax+0x88]
  424ed6:	push   0x4
  424ed8:	push   DWORD PTR [eax+0x8c]
  424ede:	push   edx
  424edf:	call   DWORD PTR [ecx+0x1c]
  424ee2:	push   DWORD PTR [ebp+0x8]
  424ee5:	xor    eax,eax
  424ee7:	mov    DWORD PTR [ebp-0xa8],0x1b3c0c3a
  424ef1:	mov    DWORD PTR [ebp-0xa4],0x10370d22
  424efb:	mov    DWORD PTR [ebp-0xa0],0x420d1e08
  424f05:	mov    BYTE PTR [ebp-0x9c],0x83
  424f0c:	lea    edi,[ebp-0x9b]
  424f12:	stos   DWORD PTR es:[edi],eax
  424f13:	stos   WORD PTR es:[edi],ax
  424f15:	stos   BYTE PTR es:[edi],al
  424f16:	xor    eax,eax
  424f18:	mov    DWORD PTR [ebp-0xbc],0x1b3c0c3a
  424f22:	mov    DWORD PTR [ebp-0xb8],0x10370d22
  424f2c:	mov    DWORD PTR [ebp-0xb4],0x280d1e08
  424f36:	mov    BYTE PTR [ebp-0xb0],0x83
  424f3d:	lea    edi,[ebp-0xaf]
  424f43:	stos   DWORD PTR es:[edi],eax
  424f44:	stos   WORD PTR es:[edi],ax
  424f46:	stos   BYTE PTR es:[edi],al
  424f47:	mov    edi,DWORD PTR [ebp+0x8]
  424f4a:	mov    eax,DWORD PTR [ebp+0x8]
  424f4d:	mov    edx,DWORD PTR [eax+0x1b8]
  424f53:	mov    DWORD PTR [ebp-0x68],0xd0f0c17
  424f5a:	mov    DWORD PTR [ebp-0x64],0x1a13161c
  424f61:	mov    WORD PTR [ebp-0x60],0x8342
  424f67:	mov    DWORD PTR [ebp-0x90],0x1b3c0c3a
  424f71:	mov    DWORD PTR [ebp-0x8c],0x17420d22
  424f7b:	mov    DWORD PTR [ebp-0x88],0x31221b13
  424f85:	mov    DWORD PTR [ebp-0x84],0xd1e160e
  424f8f:	mov    DWORD PTR [ebp-0x80],0x83421c1a
  424f96:	mov    DWORD PTR [ebp-0x7c],0x1b3c0c3a
  424f9d:	mov    DWORD PTR [ebp-0x78],0x17420d22
  424fa4:	mov    DWORD PTR [ebp-0x74],0x31221b13
  424fab:	mov    DWORD PTR [ebp-0x70],0xd1e160e
  424fb2:	mov    DWORD PTR [ebp-0x6c],0x83281c1a
  424fb9:	call   0x4272b1
  424fbe:	push   eax
  424fbf:	mov    eax,DWORD PTR [ebp+0x8]
  424fc2:	mov    eax,DWORD PTR [eax+0x1a8]
  424fc8:	push   DWORD PTR [eax]
  424fca:	call   0x426f52
  424fcf:	test   eax,eax
  424fd1:	jne    0x425023
  424fd3:	mov    eax,DWORD PTR [ebp+0x8]
  424fd6:	mov    eax,DWORD PTR [eax+0x1e0]
  424fdc:	mov    edi,DWORD PTR [ebp+0x8]
  424fdf:	add    eax,0x4
  424fe2:	mov    DWORD PTR [ebp-0x20],eax
  424fe5:	mov    eax,DWORD PTR [ebp+0x8]
  424fe8:	mov    edx,DWORD PTR [eax+0x1b8]
  424fee:	call   0x4272b1
  424ff3:	push   eax
  424ff4:	mov    eax,DWORD PTR [ebp-0x20]
  424ff7:	call   DWORD PTR [eax]
  424ff9:	test   eax,eax
  424ffb:	jne    0x425023
  424ffd:	mov    eax,DWORD PTR [ebp+0x8]
  425000:	mov    eax,DWORD PTR [eax+0x1e0]
  425006:	mov    edi,DWORD PTR [ebp+0x8]
  425009:	add    eax,0x10
  42500c:	mov    DWORD PTR [ebp-0x20],eax
  42500f:	mov    eax,DWORD PTR [ebp+0x8]
  425012:	mov    edx,DWORD PTR [eax+0x1b8]
  425018:	call   0x4272b1
  42501d:	push   eax
  42501e:	mov    eax,DWORD PTR [ebp-0x20]
  425021:	call   DWORD PTR [eax]
  425023:	mov    eax,DWORD PTR [ebp-0x10]
  425026:	mov    ecx,DWORD PTR [ebp-0x28]
  425029:	xor    eax,ebx
  42502b:	add    eax,esi
  42502d:	cmp    eax,ecx
  42502f:	je     0x4251f2
  425035:	mov    eax,DWORD PTR [ebp-0x18]
  425038:	xor    eax,ebx
  42503a:	mov    ecx,0xffcd8d0d
  42503f:	sub    ecx,eax
  425041:	add    ecx,DWORD PTR [ebp-0x28]
  425044:	mov    eax,DWORD PTR [ebp-0x1c]
  425047:	cmp    eax,ecx
  425049:	ja     0x4251f2
  42504f:	mov    DWORD PTR [ebp-0x34],0x0
  425056:	push   DWORD PTR [ebp+0x8]
  425059:	mov    edi,DWORD PTR [ebp+0x8]
  42505c:	mov    eax,DWORD PTR [ebp+0x8]
  42505f:	mov    edx,DWORD PTR [eax+0x1b4]
  425065:	call   0x4272b1
  42506a:	push   eax
  42506b:	mov    eax,DWORD PTR [ebp+0x8]
  42506e:	mov    eax,DWORD PTR [eax+0x1a8]
  425074:	push   DWORD PTR [eax]
  425076:	call   0x426f52
  42507b:	mov    ecx,DWORD PTR [ebp+0x8]
  42507e:	mov    ecx,DWORD PTR [ecx+0x19c]
  425084:	mov    DWORD PTR [ecx],eax
  425086:	mov    eax,DWORD PTR [ebp+0x8]
  425089:	mov    edi,DWORD PTR [eax+0x1e0]
  42508f:	mov    esi,DWORD PTR [ebp+0x8]
  425092:	xor    eax,eax
  425094:	lea    edx,[ebp-0x7c]
  425097:	call   0x4272e7
  42509c:	push   eax
  42509d:	mov    eax,DWORD PTR [ebp+0x8]
  4250a0:	mov    eax,DWORD PTR [eax+0x19c]
  4250a6:	push   DWORD PTR [eax]
  4250a8:	call   DWORD PTR [edi+0x8]
  4250ab:	mov    DWORD PTR [ebp-0x20],eax
  4250ae:	mov    eax,DWORD PTR [ebp+0x8]
  4250b1:	mov    edi,DWORD PTR [eax+0x1e0]
  4250b7:	mov    esi,DWORD PTR [ebp+0x8]
  4250ba:	xor    eax,eax
  4250bc:	lea    edx,[ebp-0x90]
  4250c2:	call   0x4272e7
  4250c7:	push   eax
  4250c8:	mov    eax,DWORD PTR [ebp+0x8]
  4250cb:	mov    eax,DWORD PTR [eax+0x19c]
  4250d1:	push   DWORD PTR [eax]
  4250d3:	call   DWORD PTR [edi+0x8]
  4250d6:	mov    eax,DWORD PTR [ebp+0x8]
  4250d9:	mov    edi,DWORD PTR [eax+0x1e0]
  4250df:	mov    esi,DWORD PTR [ebp+0x8]
  4250e2:	xor    eax,eax
  4250e4:	lea    edx,[ebp-0xa8]
  4250ea:	call   0x4272e7
  4250ef:	push   eax
  4250f0:	mov    eax,DWORD PTR [ebp+0x8]
  4250f3:	mov    eax,DWORD PTR [eax+0x19c]
  4250f9:	push   DWORD PTR [eax]
  4250fb:	call   DWORD PTR [edi+0x8]
  4250fe:	and    DWORD PTR [ebp-0x8],0x0
  425102:	mov    DWORD PTR [ebp-0x48],eax
  425105:	mov    eax,DWORD PTR [ebp-0x8]
  425108:	and    eax,0x7
  42510b:	add    eax,0x31
  42510e:	push   eax
  42510f:	call   DWORD PTR [ebp-0x20]
  425112:	test   eax,eax
  425114:	je     0x425158
  425116:	mov    eax,DWORD PTR [ebp-0x8]
  425119:	push   0x19
  42511b:	xor    edx,edx
  42511d:	pop    ecx
  42511e:	div    ecx
  425120:	add    dl,0x41
  425123:	movzx  eax,dl
  425126:	push   eax
  425127:	call   DWORD PTR [ebp-0x48]
  42512a:	test   eax,eax
  42512c:	jne    0x425158
  42512e:	mov    eax,DWORD PTR [ebp+0x8]
  425131:	mov    edi,DWORD PTR [eax+0x1e0]
  425137:	mov    esi,DWORD PTR [ebp+0x8]
  42513a:	xor    eax,eax
  42513c:	lea    edx,[ebp-0x68]
  42513f:	call   0x4272e7
  425144:	push   eax
  425145:	mov    eax,DWORD PTR [ebp+0x8]
  425148:	mov    eax,DWORD PTR [eax+0x198]
  42514e:	push   DWORD PTR [eax]
  425150:	call   DWORD PTR [edi+0x8]
  425153:	mov    DWORD PTR [ebp-0x14],eax
  425156:	jmp    0x42515c
  425158:	and    DWORD PTR [ebp-0x14],0x0
  42515c:	inc    DWORD PTR [ebp-0x8]
  42515f:	cmp    DWORD PTR [ebp-0x8],0x10
  425163:	jb     0x425105
  425165:	mov    eax,DWORD PTR [ebp-0x18]
  425168:	mov    esi,DWORD PTR [ebp+0x8]
  42516b:	xor    eax,ebx
  42516d:	mov    edi,0x3272f3
  425172:	add    eax,edi
  425174:	lea    edx,[ebp-0x10c]
  42517a:	call   0x4272e7
  42517f:	push   eax
  425180:	mov    eax,DWORD PTR [ebp-0x10]
  425183:	mov    esi,DWORD PTR [ebp+0x8]
  425186:	xor    eax,ebx
  425188:	add    eax,edi
  42518a:	lea    edx,[ebp-0x12c]
  425190:	call   0x4272e7
  425195:	push   eax
  425196:	call   DWORD PTR [ebp-0x14]
  425199:	mov    ecx,DWORD PTR [ebp-0x10]
  42519c:	xor    ecx,ebx
  42519e:	add    ecx,edi
  4251a0:	cmp    ecx,eax
  4251a2:	jne    0x4251ab
  4251a4:	mov    DWORD PTR [ebp-0x34],0x1
  4251ab:	mov    eax,DWORD PTR [ebp-0x18]
  4251ae:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251b1:	xor    eax,ebx
  4251b3:	lea    eax,[eax+ecx*1+0x3272f3]
  4251ba:	mov    DWORD PTR [ebp-0x1c],eax
  4251bd:	mov    eax,DWORD PTR [ebp-0x34]
  4251c0:	test   eax,eax
  4251c2:	je     0x4251d6
  4251c4:	mov    eax,DWORD PTR [ebp-0x18]
  4251c7:	mov    ecx,DWORD PTR [ebp-0x38]
  4251ca:	xor    eax,ebx
  4251cc:	lea    eax,[eax+ecx*1+0x3272f3]
  4251d3:	mov    DWORD PTR [ebp-0x38],eax
  4251d6:	mov    eax,DWORD PTR [ebp-0x18]
  4251d9:	xor    eax,ebx
  4251db:	mov    ecx,0xffcd8d0d
  4251e0:	sub    ecx,eax
  4251e2:	add    ecx,DWORD PTR [ebp-0x28]
  4251e5:	mov    eax,DWORD PTR [ebp-0x1c]
  4251e8:	cmp    eax,ecx
  4251ea:	jbe    0x42504f
  4251f0:	mov    esi,edi
  4251f2:	mov    eax,DWORD PTR [ebp-0x38]
  4251f5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251f8:	cmp    ecx,eax
  4251fa:	jne    0x42520d
  4251fc:	push   DWORD PTR [ebp+0x8]
  4251ff:	lea    eax,[ebp-0x40]
  425202:	push   eax
  425203:	call   0x427d56
  425208:	mov    DWORD PTR [ebp-0x24],eax
  42520b:	jmp    0x425219
  42520d:	mov    eax,DWORD PTR [ebp-0x24]
  425210:	mov    ecx,DWORD PTR [ebp-0x18]
  425213:	xor    ecx,ebx
  425215:	add    ecx,esi
  425217:	xor    DWORD PTR [eax],ecx
  425219:	mov    eax,DWORD PTR [ebp-0x10]
  42521c:	mov    ecx,DWORD PTR [ebp-0x24]
  42521f:	xor    eax,ebx
  425221:	add    eax,esi
  425223:	cmp    eax,ecx
  425225:	je     0x42599d
  42522b:	mov    eax,DWORD PTR [ebp-0x10]
  42522e:	mov    ecx,DWORD PTR [ebp-0x40]
  425231:	xor    eax,ebx
  425233:	add    eax,esi
  425235:	cmp    eax,ecx
  425237:	je     0x42599d
  42523d:	mov    eax,DWORD PTR [ebp-0x10]
  425240:	xor    eax,ebx
  425242:	add    eax,esi
  425244:	jmp    0x425262
  425246:	mov    edi,DWORD PTR [ebp-0x24]
  425249:	mov    cl,al
  42524b:	and    cl,0x1f
  42524e:	or     dl,0xff
  425251:	sub    dl,cl
  425253:	add    BYTE PTR [edi+eax*1],dl
  425256:	mov    ecx,DWORD PTR [ebp-0x18]
  425259:	xor    ecx,ebx
  42525b:	lea    eax,[eax+ecx*1+0x3272f3]
  425262:	mov    ecx,DWORD PTR [ebp-0x40]
  425265:	cmp    eax,ecx
  425267:	jb     0x425246
  425269:	mov    eax,DWORD PTR [ebp-0x40]
  42526c:	mov    DWORD PTR [ebp-0x28],eax
  42526f:	mov    eax,DWORD PTR [ebp-0x24]
  425272:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  425279:	mov    DWORD PTR [ebp-0xd4],eax
  42527f:	mov    edi,0xf89c85a2
  425284:	mov    DWORD PTR [ebp-0x2c],edi
  425287:	mov    eax,DWORD PTR [ebp-0x38]
  42528a:	xor    eax,ebx
  42528c:	add    eax,esi
  42528e:	mov    DWORD PTR [ebp-0xc],eax
  425291:	mov    eax,DWORD PTR [ebp-0x38]
  425294:	xor    eax,ebx
  425296:	add    eax,esi
  425298:	mov    DWORD PTR [ebp-0x8],eax
  42529b:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  4252a2:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  4252a9:	mov    eax,DWORD PTR [ebp-0x38]
  4252ac:	mov    ecx,DWORD PTR [ebp-0x28]
  4252af:	xor    eax,ebx
  4252b1:	add    eax,esi
  4252b3:	cmp    ecx,eax
  4252b5:	je     0x4254b4
  4252bb:	jmp    0x425490
  4252c0:	mov    ecx,DWORD PTR [ebp-0xc]
  4252c3:	mov    eax,DWORD PTR [ebp-0x28]
  4252c6:	sub    eax,ecx
  4252c8:	mov    ecx,DWORD PTR [ebp-0x48]
  4252cb:	xor    ecx,ebx
  4252cd:	add    ecx,esi
  4252cf:	xor    edx,edx
  4252d1:	div    ecx
  4252d3:	mov    DWORD PTR [ebp-0x8],eax
  4252d6:	mov    eax,DWORD PTR [ebp-0x4c]
  4252d9:	mov    ecx,DWORD PTR [ebp-0x8]
  4252dc:	xor    eax,ebx
  4252de:	add    eax,esi
  4252e0:	cmp    ecx,eax
  4252e2:	jbe    0x4252ee
  4252e4:	mov    eax,DWORD PTR [ebp-0x4c]
  4252e7:	xor    eax,ebx
  4252e9:	add    eax,esi
  4252eb:	mov    DWORD PTR [ebp-0x8],eax
  4252ee:	mov    eax,DWORD PTR [ebp-0x48]
  4252f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4252f4:	xor    eax,ebx
  4252f6:	add    eax,esi
  4252f8:	imul   eax,ecx
  4252fb:	mov    DWORD PTR [ebp-0x8],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x38]
  425301:	mov    ecx,DWORD PTR [ebp-0x8]
  425304:	xor    eax,ebx
  425306:	add    eax,esi
  425308:	cmp    ecx,eax
  42530a:	je     0x42547e
  425310:	mov    eax,DWORD PTR [ebp-0x8]
  425313:	mov    DWORD PTR [ebp-0x14],eax
  425316:	mov    eax,DWORD PTR [ebp-0xc]
  425319:	add    eax,DWORD PTR [ebp-0xd4]
  42531f:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  425326:	mov    DWORD PTR [ebp-0x34],edi
  425329:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  425333:	mov    DWORD PTR [ebp-0x8],eax
  425336:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  42533d:	mov    DWORD PTR [ebp-0x1c],edi
  425340:	mov    eax,DWORD PTR [ebp-0x20]
  425343:	xor    eax,ebx
  425345:	add    eax,esi
  425347:	jmp    0x42543d
  42534c:	mov    DWORD PTR [ebp-0xe0],0xf89c85b4
  425356:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  425360:	mov    eax,DWORD PTR [ebp-0x1c]
  425363:	mov    ecx,DWORD PTR [ebp-0x44]
  425366:	xor    eax,ebx
  425368:	add    eax,esi
  42536a:	imul   eax,ecx
  42536d:	mov    ecx,DWORD PTR [ebp-0x8]
  425370:	mov    al,BYTE PTR [eax+ecx*1]
  425373:	mov    BYTE PTR [ebp-0x2],al
  425376:	mov    eax,DWORD PTR [ebp-0x1c]
  425379:	mov    ecx,DWORD PTR [ebp-0x44]
  42537c:	xor    eax,ebx
  42537e:	add    eax,esi
  425380:	imul   eax,ecx
  425383:	mov    ecx,DWORD PTR [ebp-0xe8]
  425389:	xor    ecx,ebx
  42538b:	add    eax,ecx
  42538d:	mov    ecx,DWORD PTR [ebp-0x8]
  425390:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  425398:	mov    ecx,DWORD PTR [ebp-0xe0]
  42539e:	xor    ecx,ebx
  4253a0:	lea    eax,[ecx+eax*1+0x3272f3]
  4253a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4253ab:	xor    ecx,eax
  4253ad:	mov    BYTE PTR [ebp-0x2],cl
  4253b0:	mov    al,BYTE PTR [ebp-0x2]
  4253b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4253b6:	mov    edx,DWORD PTR [ebp-0x44]
  4253b9:	xor    ecx,ebx
  4253bb:	add    ecx,esi
  4253bd:	imul   ecx,edx
  4253c0:	mov    edx,DWORD PTR [ebp-0x8]
  4253c3:	mov    BYTE PTR [ecx+edx*1],al
  4253c6:	mov    eax,DWORD PTR [ebp-0x1c]
  4253c9:	mov    ecx,DWORD PTR [ebp-0x44]
  4253cc:	xor    eax,ebx
  4253ce:	add    eax,esi
  4253d0:	imul   eax,ecx
  4253d3:	mov    ecx,DWORD PTR [ebp-0x8]
  4253d6:	mov    al,BYTE PTR [eax+ecx*1]
  4253d9:	mov    BYTE PTR [ebp-0x2],al
  4253dc:	mov    eax,DWORD PTR [ebp-0x1c]
  4253df:	mov    ecx,DWORD PTR [ebp-0x44]
  4253e2:	xor    eax,ebx
  4253e4:	add    eax,esi
  4253e6:	imul   eax,ecx
  4253e9:	mov    ecx,DWORD PTR [ebp-0x34]
  4253ec:	xor    ecx,ebx
  4253ee:	add    eax,ecx
  4253f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4253f3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4253fb:	mov    ecx,DWORD PTR [ebp-0xc4]
  425401:	xor    ecx,ebx
  425403:	lea    eax,[ecx+eax*1+0x3272f3]
  42540a:	movzx  ecx,BYTE PTR [ebp-0x2]
  42540e:	xor    ecx,eax
  425410:	mov    BYTE PTR [ebp-0x2],cl
  425413:	mov    al,BYTE PTR [ebp-0x2]
  425416:	mov    ecx,DWORD PTR [ebp-0x1c]
  425419:	mov    edx,DWORD PTR [ebp-0x44]
  42541c:	xor    ecx,ebx
  42541e:	add    ecx,esi
  425420:	imul   ecx,edx
  425423:	mov    edx,DWORD PTR [ebp-0x8]
  425426:	mov    BYTE PTR [ecx+edx*1],al
  425429:	mov    eax,DWORD PTR [ebp-0x30]
  42542c:	mov    ecx,DWORD PTR [ebp-0x34]
  42542f:	xor    eax,ebx
  425431:	xor    ecx,ebx
  425433:	add    eax,esi
  425435:	add    ecx,esi
  425437:	imul   eax,ecx
  42543a:	add    eax,DWORD PTR [ebp-0x44]
  42543d:	mov    DWORD PTR [ebp-0x44],eax
  425440:	mov    eax,DWORD PTR [ebp-0x44]
  425443:	mov    ecx,DWORD PTR [ebp-0x14]
  425446:	cmp    ecx,eax
  425448:	jb     0x42534c
  42544e:	mov    eax,DWORD PTR [ebp-0x34]
  425451:	mov    ecx,DWORD PTR [ebp-0x14]
  425454:	xor    eax,ebx
  425456:	add    eax,esi
  425458:	imul   eax,ecx
  42545b:	mov    ecx,DWORD PTR [ebp-0x20]
  42545e:	xor    ecx,ebx
  425460:	add    ecx,esi
  425462:	or     eax,ecx
  425464:	mov    ecx,DWORD PTR [ebp-0x2c]
  425467:	xor    ecx,ebx
  425469:	add    eax,ecx
  42546b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42546e:	xor    ecx,ebx
  425470:	add    eax,ecx
  425472:	mov    ecx,DWORD PTR [ebp-0xc]
  425475:	lea    eax,[eax+ecx*1+0x64e5e6]
  42547c:	jmp    0x42548d
  42547e:	mov    eax,DWORD PTR [ebp-0x2c]
  425481:	mov    ecx,DWORD PTR [ebp-0xc]
  425484:	xor    eax,ebx
  425486:	lea    eax,[eax+ecx*1+0x3272f3]
  42548d:	mov    DWORD PTR [ebp-0xc],eax
  425490:	mov    eax,DWORD PTR [ebp-0x2c]
  425493:	xor    eax,ebx
  425495:	mov    ecx,0xffcd8d0d
  42549a:	sub    ecx,eax
  42549c:	add    ecx,DWORD PTR [ebp-0x28]
  42549f:	mov    eax,DWORD PTR [ebp-0x2c]
  4254a2:	mov    edx,DWORD PTR [ebp-0xc]
  4254a5:	xor    eax,ebx
  4254a7:	add    eax,esi
  4254a9:	imul   eax,edx
  4254ac:	cmp    eax,ecx
  4254ae:	jbe    0x4252c0
  4254b4:	mov    eax,DWORD PTR [ebp-0x10]
  4254b7:	mov    ecx,DWORD PTR [ebp-0x40]
  4254ba:	mov    eax,DWORD PTR [ebp+0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x54]
  4254c0:	mov    eax,DWORD PTR [eax+0x1e0]
  4254c6:	xor    edx,ebx
  4254c8:	add    edx,esi
  4254ca:	push   edx
  4254cb:	mov    edx,DWORD PTR [ebp-0x3c]
  4254ce:	xor    edx,ebx
  4254d0:	add    edx,esi
  4254d2:	push   edx
  4254d3:	push   ecx
  4254d4:	mov    DWORD PTR [ebp-0x30],ecx
  4254d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4254da:	xor    ecx,ebx
  4254dc:	add    ecx,esi
  4254de:	push   ecx
  4254df:	call   DWORD PTR [eax+0x14]
  4254e2:	mov    edi,eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x10]
  4254e7:	xor    eax,ebx
  4254e9:	add    eax,esi
  4254eb:	cmp    eax,edi
  4254ed:	je     0x425548
  4254ef:	mov    eax,DWORD PTR [ebp-0x10]
  4254f2:	jmp    0x425515
  4254f4:	mov    ecx,DWORD PTR [ebp-0x24]
  4254f7:	xor    eax,ebx
  4254f9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f3]
  425500:	mov    BYTE PTR [eax+edi*1+0x3272f3],cl
  425507:	mov    ecx,DWORD PTR [ebp-0x18]
  42550a:	xor    ecx,ebx
  42550c:	lea    eax,[ecx+eax*1+0x3272f3]
  425513:	xor    eax,ebx
  425515:	mov    ecx,DWORD PTR [ebp-0x40]
  425518:	sub    ecx,esi
  42551a:	xor    ecx,ebx
  42551c:	cmp    eax,ecx
  42551e:	jne    0x4254f4
  425520:	mov    eax,DWORD PTR [ebp+0x8]
  425523:	mov    ecx,DWORD PTR [ebp-0x50]
  425526:	mov    eax,DWORD PTR [eax+0x1e0]
  42552c:	xor    ecx,ebx
  42552e:	add    ecx,esi
  425530:	push   ecx
  425531:	mov    ecx,DWORD PTR [ebp-0x10]
  425534:	xor    ecx,ebx
  425536:	add    ecx,esi
  425538:	push   ecx
  425539:	push   DWORD PTR [ebp-0x24]
  42553c:	call   DWORD PTR [eax+0x18]
  42553f:	mov    eax,DWORD PTR [ebp-0x30]
  425542:	mov    DWORD PTR [ebp-0x24],edi
  425545:	mov    DWORD PTR [ebp-0x40],eax
  425548:	mov    edi,DWORD PTR [ebp-0x24]
  42554b:	mov    eax,DWORD PTR [ebp-0x18]
  42554e:	mov    ecx,DWORD PTR [ebp-0x10]
  425551:	xor    eax,ebx
  425553:	mov    DWORD PTR [ebp-0x30],edi
  425556:	add    eax,esi
  425558:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42555f:	mov    DWORD PTR [ebp-0x58],0x342b3c2b
  425566:	jmp    0x42559a
  425568:	xor    ecx,ebx
  42556a:	mov    dl,BYTE PTR [ebp+ecx*1+0x327297]
  425571:	xor    dl,0x7d
  425574:	add    dl,0x2
  425577:	mov    DWORD PTR [ebp-0x3c],ecx
  42557a:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f3]
  425582:	movzx  edx,dl
  425585:	cmp    ecx,edx
  425587:	jne    0x4255a4
  425589:	mov    ecx,DWORD PTR [ebp-0x18]
  42558c:	mov    edx,DWORD PTR [ebp-0x3c]
  42558f:	xor    ecx,ebx
  425591:	lea    ecx,[ecx+edx*1+0x3272f3]
  425598:	xor    ecx,ebx
  42559a:	cmp    ecx,0xf89c85b9
  4255a0:	jne    0x425568
  4255a2:	jmp    0x4255ab
  4255a4:	mov    eax,DWORD PTR [ebp-0x10]
  4255a7:	xor    eax,ebx
  4255a9:	add    eax,esi
  4255ab:	mov    ecx,DWORD PTR [ebp-0x10]
  4255ae:	xor    ecx,ebx
  4255b0:	add    ecx,esi
  4255b2:	cmp    ecx,eax
  4255b4:	je     0x425727
  4255ba:	mov    eax,DWORD PTR [edi+0x8]
  4255bd:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  4255c4:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d0
  4255cb:	mov    DWORD PTR [ebp-0x48],0xf89cb5a1
  4255d2:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4255d9:	mov    DWORD PTR [ebp-0x14],eax
  4255dc:	mov    eax,DWORD PTR [ebp+0x8]
  4255df:	mov    ecx,DWORD PTR [ebp-0x20]
  4255e2:	xor    ecx,ebx
  4255e4:	add    ecx,esi
  4255e6:	push   ecx
  4255e7:	mov    ecx,DWORD PTR [ebp-0x48]
  4255ea:	mov    eax,DWORD PTR [eax+0x1e0]
  4255f0:	xor    ecx,ebx
  4255f2:	add    ecx,esi
  4255f4:	push   ecx
  4255f5:	mov    ecx,DWORD PTR [ebp-0x3c]
  4255f8:	xor    ecx,ebx
  4255fa:	add    ecx,esi
  4255fc:	push   ecx
  4255fd:	mov    ecx,DWORD PTR [ebp-0xc]
  425600:	xor    ecx,ebx
  425602:	add    ecx,esi
  425604:	push   ecx
  425605:	call   DWORD PTR [eax+0x14]
  425608:	mov    edi,eax
  42560a:	mov    eax,DWORD PTR [ebp+0x8]
  42560d:	mov    ecx,DWORD PTR [ebp-0x20]
  425610:	mov    eax,DWORD PTR [eax+0x1e0]
  425616:	xor    ecx,ebx
  425618:	add    ecx,esi
  42561a:	push   ecx
  42561b:	mov    ecx,DWORD PTR [ebp-0x48]
  42561e:	xor    ecx,ebx
  425620:	add    ecx,esi
  425622:	push   ecx
  425623:	mov    ecx,DWORD PTR [ebp-0xc]
  425626:	push   DWORD PTR [ebp-0x14]
  425629:	xor    ecx,ebx
  42562b:	add    ecx,esi
  42562d:	push   ecx
  42562e:	call   DWORD PTR [eax+0x14]
  425631:	mov    ecx,DWORD PTR [ebp-0xc]
  425634:	xor    ecx,ebx
  425636:	add    ecx,esi
  425638:	mov    DWORD PTR [ebp-0x20],eax
  42563b:	cmp    ecx,edi
  42563d:	je     0x4259ca
  425643:	mov    ecx,DWORD PTR [ebp-0xc]
  425646:	xor    ecx,ebx
  425648:	add    ecx,esi
  42564a:	cmp    ecx,eax
  42564c:	je     0x4259ca
  425652:	mov    DWORD PTR [ebp-0x3c],0xf89c85bc
  425659:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425660:	mov    ecx,DWORD PTR [ebp-0x3c]
  425663:	xor    cl,0xac
  425666:	sub    cl,0xd
  425669:	mov    BYTE PTR [edi],cl
  42566b:	mov    ecx,DWORD PTR [ebp-0xc]
  42566e:	xor    cl,0xac
  425671:	sub    cl,0xd
  425674:	mov    BYTE PTR [edi+0x1],cl
  425677:	mov    ecx,DWORD PTR [ebp-0x54]
  42567a:	xor    cl,0xac
  42567d:	sub    cl,0xd
  425680:	mov    BYTE PTR [edi+0x2],cl
  425683:	and    DWORD PTR [ebp-0xc8],0x0
  42568a:	and    DWORD PTR [ebp-0xdc],0x0
  425691:	lea    ecx,[ebp-0xdc]
  425697:	push   ecx
  425698:	push   DWORD PTR [ebp-0x14]
  42569b:	push   eax
  42569c:	lea    eax,[ebp-0xc8]
  4256a2:	push   eax
  4256a3:	mov    eax,DWORD PTR [ebp-0x30]
  4256a6:	push   DWORD PTR [eax+0xc]
  4256a9:	mov    eax,DWORD PTR [ebp-0x24]
  4256ac:	add    eax,0x10
  4256af:	push   eax
  4256b0:	push   edi
  4256b1:	call   0x424957
  4256b6:	mov    DWORD PTR [ebp-0x3c],eax
  4256b9:	mov    eax,DWORD PTR [ebp+0x8]
  4256bc:	mov    ecx,DWORD PTR [ebp-0x50]
  4256bf:	mov    eax,DWORD PTR [eax+0x1e0]
  4256c5:	xor    ecx,ebx
  4256c7:	add    ecx,esi
  4256c9:	push   ecx
  4256ca:	mov    ecx,DWORD PTR [ebp-0xc]
  4256cd:	xor    ecx,ebx
  4256cf:	add    ecx,esi
  4256d1:	push   ecx
  4256d2:	push   edi
  4256d3:	call   DWORD PTR [eax+0x18]
  4256d6:	mov    eax,DWORD PTR [ebp-0x3c]
  4256d9:	add    eax,0xffcd8d0d
  4256de:	xor    eax,ebx
  4256e0:	cmp    eax,0xf89c85a1
  4256e5:	mov    eax,DWORD PTR [ebp+0x8]
  4256e8:	mov    eax,DWORD PTR [eax+0x1e0]
  4256ee:	mov    ecx,DWORD PTR [ebp-0x50]
  4256f1:	jne    0x425714
  4256f3:	xor    ecx,ebx
  4256f5:	add    ecx,esi
  4256f7:	push   ecx
  4256f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4256fb:	xor    ecx,ebx
  4256fd:	add    ecx,esi
  4256ff:	push   ecx
  425700:	push   DWORD PTR [ebp-0x24]
  425703:	call   DWORD PTR [eax+0x18]
  425706:	mov    eax,DWORD PTR [ebp-0x20]
  425709:	mov    DWORD PTR [ebp-0x24],eax
  42570c:	mov    eax,DWORD PTR [ebp-0x14]
  42570f:	mov    DWORD PTR [ebp-0x40],eax
  425712:	jmp    0x425727
  425714:	xor    ecx,ebx
  425716:	add    ecx,esi
  425718:	push   ecx
  425719:	mov    ecx,DWORD PTR [ebp-0xc]
  42571c:	xor    ecx,ebx
  42571e:	add    ecx,esi
  425720:	push   ecx
  425721:	push   DWORD PTR [ebp-0x20]
  425724:	call   DWORD PTR [eax+0x18]
  425727:	mov    eax,DWORD PTR [ebp-0x40]
  42572a:	mov    DWORD PTR [ebp-0x38],eax
  42572d:	mov    eax,DWORD PTR [ebp-0x24]
  425730:	mov    DWORD PTR [ebp-0x28],0xf89c85a1
  425737:	mov    DWORD PTR [ebp-0x3c],eax
  42573a:	mov    edi,0xf89c85a2
  42573f:	mov    DWORD PTR [ebp-0x2c],edi
  425742:	mov    eax,DWORD PTR [ebp-0x28]
  425745:	xor    eax,ebx
  425747:	add    eax,esi
  425749:	mov    DWORD PTR [ebp-0xc],eax
  42574c:	mov    eax,DWORD PTR [ebp-0x28]
  42574f:	xor    eax,ebx
  425751:	add    eax,esi
  425753:	mov    DWORD PTR [ebp-0x14],eax
  425756:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  42575d:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  425764:	mov    eax,DWORD PTR [ebp-0x28]
  425767:	mov    ecx,DWORD PTR [ebp-0x38]
  42576a:	xor    eax,ebx
  42576c:	add    eax,esi
  42576e:	cmp    ecx,eax
  425770:	je     0x425966
  425776:	jmp    0x425942
  42577b:	mov    ecx,DWORD PTR [ebp-0xc]
  42577e:	mov    eax,DWORD PTR [ebp-0x38]
  425781:	sub    eax,ecx
  425783:	mov    ecx,DWORD PTR [ebp-0x48]
  425786:	xor    ecx,ebx
  425788:	add    ecx,esi
  42578a:	xor    edx,edx
  42578c:	div    ecx
  42578e:	mov    DWORD PTR [ebp-0x14],eax
  425791:	mov    eax,DWORD PTR [ebp-0x20]
  425794:	mov    ecx,DWORD PTR [ebp-0x14]
  425797:	xor    eax,ebx
  425799:	add    eax,esi
  42579b:	cmp    ecx,eax
  42579d:	jbe    0x4257a9
  42579f:	mov    eax,DWORD PTR [ebp-0x20]
  4257a2:	xor    eax,ebx
  4257a4:	add    eax,esi
  4257a6:	mov    DWORD PTR [ebp-0x14],eax
  4257a9:	mov    eax,DWORD PTR [ebp-0x48]
  4257ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4257af:	xor    eax,ebx
  4257b1:	add    eax,esi
  4257b3:	imul   eax,ecx
  4257b6:	mov    DWORD PTR [ebp-0x14],eax
  4257b9:	mov    eax,DWORD PTR [ebp-0x28]
  4257bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4257bf:	xor    eax,ebx
  4257c1:	add    eax,esi
  4257c3:	cmp    ecx,eax
  4257c5:	je     0x425930
  4257cb:	mov    eax,DWORD PTR [ebp-0x14]
  4257ce:	mov    DWORD PTR [ebp-0x34],eax
  4257d1:	mov    eax,DWORD PTR [ebp-0xc]
  4257d4:	add    eax,DWORD PTR [ebp-0x3c]
  4257d7:	mov    DWORD PTR [ebp-0x4c],0xf89c85a1
  4257de:	mov    DWORD PTR [ebp-0x14],edi
  4257e1:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4257e8:	mov    DWORD PTR [ebp-0x1c],eax
  4257eb:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  4257f2:	mov    DWORD PTR [ebp-0x8],edi
  4257f5:	mov    eax,DWORD PTR [ebp-0x4c]
  4257f8:	xor    eax,ebx
  4257fa:	add    eax,esi
  4257fc:	jmp    0x4258ef
  425801:	mov    DWORD PTR [ebp-0xe4],0xf89c85b4
  42580b:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425815:	mov    eax,DWORD PTR [ebp-0x8]
  425818:	mov    ecx,DWORD PTR [ebp-0x18]
  42581b:	xor    eax,ebx
  42581d:	add    eax,esi
  42581f:	imul   eax,ecx
  425822:	mov    ecx,DWORD PTR [ebp-0x1c]
  425825:	mov    al,BYTE PTR [eax+ecx*1]
  425828:	mov    BYTE PTR [ebp-0x1],al
  42582b:	mov    eax,DWORD PTR [ebp-0x8]
  42582e:	mov    ecx,DWORD PTR [ebp-0x18]
  425831:	xor    eax,ebx
  425833:	add    eax,esi
  425835:	imul   eax,ecx
  425838:	mov    ecx,DWORD PTR [ebp-0x54]
  42583b:	xor    ecx,ebx
  42583d:	add    eax,ecx
  42583f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425842:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  42584a:	mov    ecx,DWORD PTR [ebp-0xe4]
  425850:	xor    ecx,ebx
  425852:	lea    eax,[ecx+eax*1+0x3272f3]
  425859:	movzx  ecx,BYTE PTR [ebp-0x1]
  42585d:	xor    ecx,eax
  42585f:	mov    BYTE PTR [ebp-0x1],cl
  425862:	mov    al,BYTE PTR [ebp-0x1]
  425865:	mov    ecx,DWORD PTR [ebp-0x8]
  425868:	mov    edx,DWORD PTR [ebp-0x18]
  42586b:	xor    ecx,ebx
  42586d:	add    ecx,esi
  42586f:	imul   ecx,edx
  425872:	mov    edx,DWORD PTR [ebp-0x1c]
  425875:	mov    BYTE PTR [ecx+edx*1],al
  425878:	mov    eax,DWORD PTR [ebp-0x8]
  42587b:	mov    ecx,DWORD PTR [ebp-0x18]
  42587e:	xor    eax,ebx
  425880:	add    eax,esi
  425882:	imul   eax,ecx
  425885:	mov    ecx,DWORD PTR [ebp-0x1c]
  425888:	mov    al,BYTE PTR [eax+ecx*1]
  42588b:	mov    BYTE PTR [ebp-0x1],al
  42588e:	mov    eax,DWORD PTR [ebp-0x8]
  425891:	mov    ecx,DWORD PTR [ebp-0x18]
  425894:	xor    eax,ebx
  425896:	add    eax,esi
  425898:	imul   eax,ecx
  42589b:	mov    ecx,DWORD PTR [ebp-0x14]
  42589e:	xor    ecx,ebx
  4258a0:	add    eax,ecx
  4258a2:	mov    ecx,DWORD PTR [ebp-0x1c]
  4258a5:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4258ad:	mov    ecx,DWORD PTR [ebp-0xd0]
  4258b3:	xor    ecx,ebx
  4258b5:	lea    eax,[ecx+eax*1+0x3272f3]
  4258bc:	movzx  ecx,BYTE PTR [ebp-0x1]
  4258c0:	xor    ecx,eax
  4258c2:	mov    BYTE PTR [ebp-0x1],cl
  4258c5:	mov    al,BYTE PTR [ebp-0x1]
  4258c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4258cb:	mov    edx,DWORD PTR [ebp-0x18]
  4258ce:	xor    ecx,ebx
  4258d0:	add    ecx,esi
  4258d2:	imul   ecx,edx
  4258d5:	mov    edx,DWORD PTR [ebp-0x1c]
  4258d8:	mov    BYTE PTR [ecx+edx*1],al
  4258db:	mov    eax,DWORD PTR [ebp-0x30]
  4258de:	mov    ecx,DWORD PTR [ebp-0x14]
  4258e1:	xor    eax,ebx
  4258e3:	xor    ecx,ebx
  4258e5:	add    eax,esi
  4258e7:	add    ecx,esi
  4258e9:	imul   eax,ecx
  4258ec:	add    eax,DWORD PTR [ebp-0x18]
  4258ef:	mov    DWORD PTR [ebp-0x18],eax
  4258f2:	mov    eax,DWORD PTR [ebp-0x18]
  4258f5:	mov    ecx,DWORD PTR [ebp-0x34]
  4258f8:	cmp    ecx,eax
  4258fa:	jb     0x425801
  425900:	mov    eax,DWORD PTR [ebp-0x14]
  425903:	mov    ecx,DWORD PTR [ebp-0x34]
  425906:	xor    eax,ebx
  425908:	add    eax,esi
  42590a:	imul   eax,ecx
  42590d:	mov    ecx,DWORD PTR [ebp-0x4c]
  425910:	xor    ecx,ebx
  425912:	add    ecx,esi
  425914:	or     eax,ecx
  425916:	mov    ecx,DWORD PTR [ebp-0x2c]
  425919:	xor    ecx,ebx
  42591b:	add    eax,ecx
  42591d:	mov    ecx,DWORD PTR [ebp-0x2c]
  425920:	xor    ecx,ebx
  425922:	add    eax,ecx
  425924:	mov    ecx,DWORD PTR [ebp-0xc]
  425927:	lea    eax,[eax+ecx*1+0x64e5e6]
  42592e:	jmp    0x42593f
  425930:	mov    eax,DWORD PTR [ebp-0x2c]
  425933:	mov    ecx,DWORD PTR [ebp-0xc]
  425936:	xor    eax,ebx
  425938:	lea    eax,[eax+ecx*1+0x3272f3]
  42593f:	mov    DWORD PTR [ebp-0xc],eax
  425942:	mov    eax,DWORD PTR [ebp-0x2c]
  425945:	xor    eax,ebx
  425947:	mov    ecx,0xffcd8d0d
  42594c:	sub    ecx,eax
  42594e:	add    ecx,DWORD PTR [ebp-0x38]
  425951:	mov    eax,DWORD PTR [ebp-0x2c]
  425954:	mov    edx,DWORD PTR [ebp-0xc]
  425957:	xor    eax,ebx
  425959:	add    eax,esi
  42595b:	imul   eax,edx
  42595e:	cmp    eax,ecx
  425960:	jbe    0x42577b
  425966:	push   DWORD PTR [ebp+0x8]
  425969:	mov    eax,DWORD PTR [ebp+0x8]
  42596c:	push   DWORD PTR [eax+0x1cc]
  425972:	lea    eax,[ebp-0xd8]
  425978:	push   eax
  425979:	mov    eax,DWORD PTR [ebp+0x8]
  42597c:	mov    eax,DWORD PTR [eax+0x1c4]
  425982:	push   DWORD PTR [eax]
  425984:	mov    eax,DWORD PTR [ebp+0x8]
  425987:	mov    eax,DWORD PTR [eax+0x1c0]
  42598d:	push   DWORD PTR [eax]
  42598f:	push   DWORD PTR [ebp-0x40]
  425992:	push   DWORD PTR [ebp-0x24]
  425995:	call   0x42642c
  42599a:	mov    DWORD PTR [ebp-0x3c],eax
  42599d:	mov    eax,DWORD PTR [ebp-0x10]
  4259a0:	mov    ecx,DWORD PTR [ebp-0x24]
  4259a3:	xor    eax,ebx
  4259a5:	add    eax,esi
  4259a7:	cmp    eax,ecx
  4259a9:	je     0x4259ca
  4259ab:	mov    eax,DWORD PTR [ebp+0x8]
  4259ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4259b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4259b7:	xor    ecx,ebx
  4259b9:	add    ecx,esi
  4259bb:	push   ecx
  4259bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4259bf:	xor    ecx,ebx
  4259c1:	add    ecx,esi
  4259c3:	push   ecx
  4259c4:	push   DWORD PTR [ebp-0x24]
  4259c7:	call   DWORD PTR [eax+0x18]
  4259ca:	pop    edi
  4259cb:	pop    esi
  4259cc:	pop    ebx
  4259cd:	leave  
  4259ce:	ret    0x4
  4259d1:	push   ebp
  4259d2:	mov    ebp,esp
  4259d4:	push   ecx
  4259d5:	push   ecx
  4259d6:	lea    eax,[ebp-0x8]
  4259d9:	mov    DWORD PTR [ebp-0x4],eax
  4259dc:	push   esi
  4259dd:	mov    esi,DWORD PTR [ebp-0x4]
  4259e0:	mov    eax,0xf881ba2f
  4259e5:	mov    DWORD PTR [esi],eax
  4259e7:	mov    esi,DWORD PTR [ebp-0x8]
  4259ea:	cmp    esi,eax
  4259ec:	pop    esi
  4259ed:	jne    0x4259f7
  4259ef:	mov    BYTE PTR [ecx+0xa],0x83
  4259f3:	mov    BYTE PTR [edx+0x8],0x2c
  4259f7:	mov    BYTE PTR [edx+0xa],0x83
  4259fb:	mov    BYTE PTR [ecx+0x2],0x11
  4259ff:	leave  
  425a00:	ret    
  425a01:	push   ebp
  425a02:	mov    ebp,esp
  425a04:	push   ecx
  425a05:	push   ecx
  425a06:	lea    eax,[ebp-0x8]
  425a09:	mov    DWORD PTR [ebp-0x4],eax
  425a0c:	mov    edx,DWORD PTR [ebp-0x4]
  425a0f:	mov    eax,0xf88b0bcb
  425a14:	mov    DWORD PTR [edx],eax
  425a16:	mov    edx,DWORD PTR [ebp-0x8]
  425a19:	cmp    edx,eax
  425a1b:	jne    0x425a2c
  425a1d:	mov    eax,DWORD PTR [ebp+0x8]
  425a20:	mov    BYTE PTR [ecx+0x9],0xf
  425a24:	mov    BYTE PTR [eax+0x7],0x54
  425a28:	mov    BYTE PTR [ecx+0x6],0xc
  425a2c:	mov    BYTE PTR [ecx+0x3],0x1f
  425a30:	leave  
  425a31:	ret    0x4
  425a34:	push   ebp
  425a35:	mov    ebp,esp
  425a37:	push   ecx
  425a38:	push   ecx
  425a39:	lea    eax,[ebp-0x8]
  425a3c:	mov    DWORD PTR [ebp-0x4],eax
  425a3f:	mov    edx,DWORD PTR [ebp-0x4]
  425a42:	mov    eax,0x7e0da2f
  425a47:	mov    DWORD PTR [edx],eax
  425a49:	mov    edx,DWORD PTR [ebp-0x8]
  425a4c:	cmp    edx,eax
  425a4e:	jne    0x425a54
  425a50:	mov    BYTE PTR [ecx+0x7],0x54
  425a54:	mov    eax,DWORD PTR [ebp+0x8]
  425a57:	mov    BYTE PTR [ecx+0x1],0x1a
  425a5b:	mov    BYTE PTR [eax+0x9],0x2f
  425a5f:	leave  
  425a60:	ret    0x4
  425a63:	push   ebp
  425a64:	mov    ebp,esp
  425a66:	push   ecx
  425a67:	push   ecx
  425a68:	lea    eax,[ebp-0x8]
  425a6b:	mov    DWORD PTR [ebp-0x4],eax
  425a6e:	push   esi
  425a6f:	mov    esi,DWORD PTR [ebp-0x4]
  425a72:	mov    eax,0x7060e38
  425a77:	mov    DWORD PTR [esi],eax
  425a79:	mov    esi,DWORD PTR [ebp-0x8]
  425a7c:	cmp    esi,eax
  425a7e:	pop    esi
  425a7f:	jne    0x425a8b
  425a81:	mov    BYTE PTR [edx+0x4],0x10
  425a85:	mov    WORD PTR [ecx+0x3],0x101f
  425a8b:	mov    BYTE PTR [edx],0x3c
  425a8e:	leave  
  425a8f:	ret    
  425a90:	push   ebp
  425a91:	mov    ebp,esp
  425a93:	push   ecx
  425a94:	push   ecx
  425a95:	lea    eax,[ebp-0x8]
  425a98:	mov    DWORD PTR [ebp-0x4],eax
  425a9b:	mov    edx,DWORD PTR [ebp-0x4]
  425a9e:	mov    eax,0xf8870b3f
  425aa3:	mov    DWORD PTR [edx],eax
  425aa5:	mov    edx,DWORD PTR [ebp-0x8]
  425aa8:	cmp    edx,eax
  425aaa:	jne    0x425ab7
  425aac:	mov    eax,DWORD PTR [ebp+0x8]
  425aaf:	mov    BYTE PTR [ecx+0x8],0xc
  425ab3:	mov    BYTE PTR [eax+0x1],0x1a
  425ab7:	mov    BYTE PTR [ecx+0x5],0x8
  425abb:	leave  
  425abc:	ret    0x4
  425abf:	push   esi
  425ac0:	mov    ecx,edi
  425ac2:	call   0x425a90
  425ac7:	mov    edx,edi
  425ac9:	mov    ecx,esi
  425acb:	mov    BYTE PTR [esi],0x1c
  425ace:	call   0x425a63
  425ad3:	push   esi
  425ad4:	mov    ecx,edi
  425ad6:	mov    BYTE PTR [esi+0x5],0x8
  425ada:	call   0x425a34
  425adf:	push   esi
  425ae0:	mov    BYTE PTR [esi+0x6],0xc
  425ae4:	call   0x425a01
  425ae9:	mov    BYTE PTR [esi+0x2],0x11
  425aed:	mov    edx,esi
  425aef:	jmp    0x4259d1
  425af4:	push   ebp
  425af5:	mov    ebp,esp
  425af7:	push   ecx
  425af8:	mov    ecx,DWORD PTR [edx+0x194]
  425afe:	push   esi
  425aff:	mov    esi,DWORD PTR [ebp+0x8]
  425b02:	mov    esi,DWORD PTR [esi]
  425b04:	mov    DWORD PTR [ecx],esi
  425b06:	mov    ecx,DWORD PTR [edx+0x194]
  425b0c:	mov    ecx,DWORD PTR [ecx]
  425b0e:	mov    esi,DWORD PTR [edx+0x190]
  425b14:	mov    DWORD PTR [esi],ecx
  425b16:	mov    eax,DWORD PTR [edx+0x194]
  425b1c:	mov    ecx,DWORD PTR [eax]
  425b1e:	mov    ecx,DWORD PTR [ecx+0x3c]
  425b21:	add    ecx,DWORD PTR [eax]
  425b23:	mov    DWORD PTR [ebp-0x4],0xf89ca5a1
  425b2a:	mov    eax,DWORD PTR [ebp-0x4]
  425b2d:	movzx  ecx,WORD PTR [ecx+0x16]
  425b31:	xor    eax,0x75108ac
  425b36:	add    eax,0x3272f3
  425b3b:	pop    esi
  425b3c:	test   ecx,eax
  425b3e:	je     0x425b4c
  425b40:	mov    eax,DWORD PTR [edx+0x1c8]
  425b46:	mov    DWORD PTR [eax],0xf89c85a2
  425b4c:	leave  
  425b4d:	ret    0x4
  425b50:	push   ebp
  425b51:	mov    ebp,esp
  425b53:	sub    esp,0x70
  425b56:	and    DWORD PTR [ebp-0x20],0x0
  425b5a:	mov    DWORD PTR [ebp-0x18],0xf89cb5a1
  425b61:	mov    DWORD PTR [ebp-0x1c],0xf89c85e1
  425b68:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  425b6f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425b76:	mov    DWORD PTR [ebp-0x2c],0xf89f05a1
  425b7d:	mov    eax,DWORD PTR [ebp+0x20]
  425b80:	mov    eax,DWORD PTR [eax+0x194]
  425b86:	mov    DWORD PTR [ebp-0xc],eax
  425b89:	mov    eax,DWORD PTR [ebp+0x20]
  425b8c:	push   ebx
  425b8d:	push   esi
  425b8e:	mov    esi,DWORD PTR [eax+0x190]
  425b94:	mov    eax,DWORD PTR [ebp+0x20]
  425b97:	mov    eax,DWORD PTR [eax+0x18c]
  425b9d:	mov    DWORD PTR [ebp-0x8],eax
  425ba0:	mov    eax,DWORD PTR [eax]
  425ba2:	push   edi
  425ba3:	mov    DWORD PTR [ebp-0x4],esi
  425ba6:	test   eax,eax
  425ba8:	jne    0x425bb5
  425baa:	push   DWORD PTR [ebp+0x1c]
  425bad:	mov    edx,DWORD PTR [ebp+0x20]
  425bb0:	call   0x425af4
  425bb5:	mov    eax,DWORD PTR [esi]
  425bb7:	mov    ebx,DWORD PTR [esi]
  425bb9:	add    ebx,DWORD PTR [eax+0x3c]
  425bbc:	mov    eax,DWORD PTR [ebp+0xc]
  425bbf:	mov    ecx,DWORD PTR [ebp-0x8]
  425bc2:	mov    ecx,DWORD PTR [ecx]
  425bc4:	mov    esi,0x75108ac
  425bc9:	xor    eax,esi
  425bcb:	mov    edi,0x3272f3
  425bd0:	add    eax,edi
  425bd2:	cmp    eax,ecx
  425bd4:	jne    0x425e0c
  425bda:	mov    eax,DWORD PTR [ebp-0xc]
  425bdd:	mov    eax,DWORD PTR [eax]
  425bdf:	mov    DWORD PTR [ebp-0x10],eax
  425be2:	mov    eax,DWORD PTR [ebx+0x50]
  425be5:	mov    DWORD PTR [ebp-0x68],eax
  425be8:	mov    eax,DWORD PTR [ebp-0x18]
  425beb:	xor    eax,esi
  425bed:	add    eax,edi
  425bef:	mov    DWORD PTR [ebp-0x64],eax
  425bf2:	mov    eax,DWORD PTR [ebp-0x14]
  425bf5:	and    DWORD PTR [ebp-0x6c],0x0
  425bf9:	xor    eax,esi
  425bfb:	add    eax,edi
  425bfd:	mov    DWORD PTR [ebp-0x60],eax
  425c00:	lea    eax,[ebp-0x70]
  425c03:	push   eax
  425c04:	mov    eax,DWORD PTR [ebp+0x8]
  425c07:	xor    eax,esi
  425c09:	add    eax,edi
  425c0b:	push   eax
  425c0c:	mov    eax,DWORD PTR [ebp+0x20]
  425c0f:	add    eax,0xaa
  425c14:	push   eax
  425c15:	mov    eax,DWORD PTR [ebp+0x20]
  425c18:	mov    eax,DWORD PTR [eax+0x198]
  425c1e:	mov    DWORD PTR [ebp-0x70],0x4
  425c25:	push   DWORD PTR [eax]
  425c27:	mov    eax,DWORD PTR [ebp+0x10]
  425c2a:	call   eax
  425c2c:	mov    ecx,DWORD PTR [ebp-0xc]
  425c2f:	mov    ecx,DWORD PTR [ecx]
  425c31:	mov    edx,DWORD PTR [ebp-0x8]
  425c34:	mov    DWORD PTR [ebp-0x6c],eax
  425c37:	mov    DWORD PTR [ebp+0x1c],eax
  425c3a:	mov    DWORD PTR [edx],ecx
  425c3c:	mov    ecx,DWORD PTR [ebp-0x4]
  425c3f:	mov    DWORD PTR [ecx],eax
  425c41:	mov    eax,DWORD PTR [ebx+0x50]
  425c44:	mov    DWORD PTR [ebp-0x68],eax
  425c47:	mov    eax,DWORD PTR [ebp-0x1c]
  425c4a:	xor    eax,esi
  425c4c:	add    eax,edi
  425c4e:	mov    DWORD PTR [ebp-0x64],eax
  425c51:	lea    eax,[ebp-0x20]
  425c54:	mov    DWORD PTR [ebp-0x60],eax
  425c57:	lea    eax,[ebp-0x70]
  425c5a:	push   eax
  425c5b:	mov    eax,DWORD PTR [ebp+0x8]
  425c5e:	xor    eax,esi
  425c60:	add    eax,edi
  425c62:	push   eax
  425c63:	mov    eax,DWORD PTR [ebp+0x20]
  425c66:	add    eax,0xee
  425c6b:	push   eax
  425c6c:	mov    eax,DWORD PTR [ebp+0x20]
  425c6f:	mov    eax,DWORD PTR [eax+0x198]
  425c75:	mov    DWORD PTR [ebp-0x70],0x4
  425c7c:	push   DWORD PTR [eax]
  425c7e:	mov    eax,DWORD PTR [ebp+0x10]
  425c81:	call   eax
  425c83:	test   eax,eax
  425c85:	je     0x425caa
  425c87:	and    DWORD PTR [ebp+0xc],0x0
  425c8b:	cmp    DWORD PTR [ebx+0x50],0x0
  425c8f:	jbe    0x425caa
  425c91:	mov    eax,DWORD PTR [ebp+0x1c]
  425c94:	mov    ecx,DWORD PTR [ebp-0x10]
  425c97:	sub    ecx,eax
  425c99:	mov    dl,BYTE PTR [ecx+eax*1]
  425c9c:	inc    DWORD PTR [ebp+0xc]
  425c9f:	mov    BYTE PTR [eax],dl
  425ca1:	mov    edx,DWORD PTR [ebp+0xc]
  425ca4:	inc    eax
  425ca5:	cmp    edx,DWORD PTR [ebx+0x50]
  425ca8:	jb     0x425c99
  425caa:	mov    edx,DWORD PTR [ebp+0x1c]
  425cad:	mov    ecx,DWORD PTR [edx+0x3c]
  425cb0:	add    ecx,edx
  425cb2:	mov    eax,DWORD PTR [ecx+0xa0]
  425cb8:	mov    ebx,DWORD PTR [ecx+0x28]
  425cbb:	add    eax,edx
  425cbd:	sub    edx,DWORD PTR [ebp-0x10]
  425cc0:	add    ebx,DWORD PTR [ebp+0x1c]
  425cc3:	mov    DWORD PTR [ebp+0xc],edx
  425cc6:	mov    DWORD PTR [ebp-0x2c],ecx
  425cc9:	mov    DWORD PTR [ebp-0x14],ebx
  425ccc:	mov    DWORD PTR [ebp-0x8],0x0
  425cd3:	jmp    0x425d4f
  425cd5:	add    edx,0xfffffff8
  425cd8:	shr    edx,1
  425cda:	mov    DWORD PTR [ebp-0x18],edx
  425cdd:	je     0x425d3b
  425cdf:	lea    edx,[eax+0x8]
  425ce2:	mov    DWORD PTR [ebp-0x4],edx
  425ce5:	mov    edx,DWORD PTR [ebp-0x18]
  425ce8:	mov    DWORD PTR [ebp-0x18],edx
  425ceb:	mov    edx,DWORD PTR [ebp-0x4]
  425cee:	movzx  edx,WORD PTR [edx]
  425cf1:	mov    DWORD PTR [ebp-0x24],edx
  425cf4:	and    edx,0xfff
  425cfa:	mov    DWORD PTR [ebp-0x28],edx
  425cfd:	mov    edx,DWORD PTR [ebp-0x24]
  425d00:	shr    edx,0xc
  425d03:	add    edx,0xffcd8d0d
  425d09:	xor    edx,esi
  425d0b:	cmp    edx,0xf89c85bc
  425d11:	jne    0x425d32
  425d13:	mov    edx,DWORD PTR [ebp-0x28]
  425d16:	add    edx,DWORD PTR [ebp+0x1c]
  425d19:	mov    ebx,DWORD PTR [eax]
  425d1b:	cmp    DWORD PTR [ebx+edx*1],0x0
  425d1f:	je     0x425d2f
  425d21:	mov    ecx,DWORD PTR [ebp+0xc]
  425d24:	add    ecx,DWORD PTR [ebx+edx*1]
  425d27:	mov    ebx,DWORD PTR [eax]
  425d29:	mov    DWORD PTR [edx+ebx*1],ecx
  425d2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  425d2f:	mov    ebx,DWORD PTR [ebp-0x14]
  425d32:	add    DWORD PTR [ebp-0x4],0x2
  425d36:	dec    DWORD PTR [ebp-0x18]
  425d39:	jne    0x425ceb
  425d3b:	mov    edx,DWORD PTR [ebp-0xc]
  425d3e:	add    DWORD PTR [ebp-0x8],edx
  425d41:	mov    edx,DWORD PTR [ebp-0x8]
  425d44:	cmp    edx,DWORD PTR [ecx+0xa4]
  425d4a:	jae    0x425d5d
  425d4c:	add    eax,DWORD PTR [ebp-0xc]
  425d4f:	mov    edx,DWORD PTR [eax+0x4]
  425d52:	mov    DWORD PTR [ebp-0xc],edx
  425d55:	test   edx,edx
  425d57:	jne    0x425cd5
  425d5d:	mov    eax,DWORD PTR [ebp-0x10]
  425d60:	mov    DWORD PTR [ebp-0x6c],eax
  425d63:	mov    DWORD PTR [ebp-0x70],0x4
  425d6a:	mov    eax,DWORD PTR [ecx+0x50]
  425d6d:	mov    DWORD PTR [ebp-0x68],eax
  425d70:	mov    eax,DWORD PTR [ebp-0x1c]
  425d73:	xor    eax,esi
  425d75:	add    eax,edi
  425d77:	mov    DWORD PTR [ebp-0x64],eax
  425d7a:	lea    eax,[ebp-0x20]
  425d7d:	mov    DWORD PTR [ebp-0x60],eax
  425d80:	lea    eax,[ebp-0x70]
  425d83:	push   eax
  425d84:	mov    eax,DWORD PTR [ebp+0x8]
  425d87:	xor    eax,esi
  425d89:	add    eax,edi
  425d8b:	push   eax
  425d8c:	mov    eax,DWORD PTR [ebp+0x20]
  425d8f:	add    eax,0xee
  425d94:	push   eax
  425d95:	mov    eax,DWORD PTR [ebp+0x20]
  425d98:	mov    eax,DWORD PTR [eax+0x198]
  425d9e:	push   DWORD PTR [eax]
  425da0:	mov    eax,DWORD PTR [ebp+0x10]
  425da3:	call   eax
  425da5:	mov    eax,DWORD PTR [ebp+0x20]
  425da8:	mov    eax,DWORD PTR [eax+0x180]
  425dae:	add    eax,DWORD PTR [ebp+0xc]
  425db1:	mov    ecx,DWORD PTR [ebp+0xc]
  425db4:	push   DWORD PTR [ebp+0x18]
  425db7:	mov    DWORD PTR [eax],ecx
  425db9:	push   DWORD PTR [ebp+0x14]
  425dbc:	push   DWORD PTR [ebp+0x1c]
  425dbf:	call   ebx
  425dc1:	mov    ecx,DWORD PTR [ebp+0xc]
  425dc4:	add    ecx,DWORD PTR [ebp+0x20]
  425dc7:	lea    eax,[ebp+0x4]
  425dca:	mov    DWORD PTR [ebp+0x20],ecx
  425dcd:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd0:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd3:	mov    edx,DWORD PTR [ecx+0x190]
  425dd9:	mov    ecx,DWORD PTR [ebp+0x20]
  425ddc:	mov    ecx,DWORD PTR [ecx+0x18c]
  425de2:	mov    esi,DWORD PTR [ecx]
  425de4:	cmp    DWORD PTR [eax],esi
  425de6:	jb     0x425e07
  425de8:	mov    esi,DWORD PTR [edx]
  425dea:	mov    edi,DWORD PTR [edx]
  425dec:	mov    esi,DWORD PTR [esi+0x3c]
  425def:	lea    esi,[edi+esi*1+0x50]
  425df3:	mov    edi,DWORD PTR [ecx]
  425df5:	add    edi,DWORD PTR [esi]
  425df7:	cmp    DWORD PTR [eax],edi
  425df9:	jae    0x425e07
  425dfb:	mov    esi,DWORD PTR [ecx]
  425dfd:	mov    ecx,DWORD PTR [eax]
  425dff:	mov    edx,DWORD PTR [edx]
  425e01:	sub    ecx,esi
  425e03:	add    edx,ecx
  425e05:	mov    DWORD PTR [eax],edx
  425e07:	mov    eax,DWORD PTR [ebp+0xc]
  425e0a:	jmp    0x425e0e
  425e0c:	xor    eax,eax
  425e0e:	pop    edi
  425e0f:	pop    esi
  425e10:	pop    ebx
  425e11:	leave  
  425e12:	ret    0x1c
  425e15:	push   ebp
  425e16:	mov    ebp,esp
  425e18:	sub    esp,0x1c
  425e1b:	push   esi
  425e1c:	mov    esi,eax
  425e1e:	mov    eax,DWORD PTR [ecx+0x190]
  425e24:	cmp    DWORD PTR [eax],0x0
  425e27:	je     0x425f37
  425e2d:	test   edx,edx
  425e2f:	je     0x425f37
  425e35:	test   esi,esi
  425e37:	je     0x425f37
  425e3d:	mov    eax,DWORD PTR [esi+0x88]
  425e43:	test   eax,eax
  425e45:	je     0x425f32
  425e4b:	cmp    DWORD PTR [esi+0x8c],0x10
  425e52:	je     0x425f32
  425e58:	cmp    DWORD PTR [esi+0x34],edx
  425e5b:	je     0x425f32
  425e61:	mov    esi,DWORD PTR [ecx+0x18c]
  425e67:	and    DWORD PTR [ebp-0x10],0x0
  425e6b:	mov    ecx,edx
  425e6d:	sub    ecx,DWORD PTR [esi]
  425e6f:	add    eax,edx
  425e71:	movzx  edx,WORD PTR [eax+0xc]
  425e75:	mov    DWORD PTR [ebp-0x1c],ecx
  425e78:	movzx  ecx,WORD PTR [eax+0xe]
  425e7c:	add    ecx,edx
  425e7e:	je     0x425f32
  425e84:	lea    ecx,[eax+0x14]
  425e87:	push   ebx
  425e88:	mov    DWORD PTR [ebp-0x18],ecx
  425e8b:	mov    esi,0x7fffffff
  425e90:	push   edi
  425e91:	test   DWORD PTR [ecx],esi
  425e93:	je     0x425f14
  425e95:	mov    edx,DWORD PTR [ecx]
  425e97:	and    DWORD PTR [ebp-0xc],0x0
  425e9b:	and    edx,esi
  425e9d:	add    edx,eax
  425e9f:	movzx  edi,WORD PTR [edx+0xe]
  425ea3:	movzx  ebx,WORD PTR [edx+0xc]
  425ea7:	add    edi,ebx
  425ea9:	je     0x425f14
  425eab:	lea    ecx,[edx+0x14]
  425eae:	mov    DWORD PTR [ebp-0x14],ecx
  425eb1:	test   DWORD PTR [ecx],esi
  425eb3:	je     0x425ef6
  425eb5:	mov    ecx,DWORD PTR [ecx]
  425eb7:	and    DWORD PTR [ebp-0x8],0x0
  425ebb:	and    ecx,esi
  425ebd:	add    ecx,eax
  425ebf:	movzx  edi,WORD PTR [ecx+0xe]
  425ec3:	movzx  ebx,WORD PTR [ecx+0xc]
  425ec7:	add    edi,ebx
  425ec9:	je     0x425ef6
  425ecb:	lea    edi,[ecx+0x14]
  425ece:	mov    DWORD PTR [ebp-0x4],edi
  425ed1:	mov    edi,DWORD PTR [ebp-0x4]
  425ed4:	mov    edi,DWORD PTR [edi]
  425ed6:	test   edi,edi
  425ed8:	je     0x425ee0
  425eda:	mov    ebx,DWORD PTR [ebp-0x1c]
  425edd:	add    DWORD PTR [edi+eax*1],ebx
  425ee0:	movzx  edi,WORD PTR [ecx+0xe]
  425ee4:	movzx  ebx,WORD PTR [ecx+0xc]
  425ee8:	inc    DWORD PTR [ebp-0x8]
  425eeb:	add    DWORD PTR [ebp-0x4],0x8
  425eef:	add    edi,ebx
  425ef1:	cmp    DWORD PTR [ebp-0x8],edi
  425ef4:	jb     0x425ed1
  425ef6:	movzx  edi,WORD PTR [edx+0xe]
  425efa:	movzx  ebx,WORD PTR [edx+0xc]
  425efe:	mov    ecx,DWORD PTR [ebp-0x14]
  425f01:	inc    DWORD PTR [ebp-0xc]
  425f04:	add    ecx,0x8
  425f07:	add    edi,ebx
  425f09:	mov    DWORD PTR [ebp-0x14],ecx
  425f0c:	cmp    DWORD PTR [ebp-0xc],edi
  425f0f:	jb     0x425eb1
  425f11:	mov    ecx,DWORD PTR [ebp-0x18]
  425f14:	movzx  edx,WORD PTR [eax+0xe]
  425f18:	movzx  edi,WORD PTR [eax+0xc]
  425f1c:	inc    DWORD PTR [ebp-0x10]
  425f1f:	add    ecx,0x8
  425f22:	add    edx,edi
  425f24:	mov    DWORD PTR [ebp-0x18],ecx
  425f27:	cmp    DWORD PTR [ebp-0x10],edx
  425f2a:	jb     0x425e91
  425f30:	pop    edi
  425f31:	pop    ebx
  425f32:	xor    eax,eax
  425f34:	inc    eax
  425f35:	jmp    0x425f39
  425f37:	xor    eax,eax
  425f39:	pop    esi
  425f3a:	leave  
  425f3b:	ret    
  425f3c:	push   ebp
  425f3d:	mov    ebp,esp
  425f3f:	mov    ecx,DWORD PTR [ecx+0x190]
  425f45:	mov    eax,DWORD PTR [ebp+0xc]
  425f48:	sub    esp,0x10
  425f4b:	push   ebx
  425f4c:	xor    ebx,ebx
  425f4e:	push   esi
  425f4f:	push   edi
  425f50:	cmp    DWORD PTR [ecx],ebx
  425f52:	je     0x425fda
  425f58:	cmp    eax,ebx
  425f5a:	je     0x425fda
  425f5c:	cmp    DWORD PTR [eax+0x78],ebx
  425f5f:	jne    0x425f66
  425f61:	xor    eax,eax
  425f63:	inc    eax
  425f64:	jmp    0x425fdc
  425f66:	mov    eax,DWORD PTR [eax+0x78]
  425f69:	add    eax,DWORD PTR [ebp+0x8]
  425f6c:	mov    ecx,DWORD PTR [eax+0x1c]
  425f6f:	mov    edx,DWORD PTR [eax+0x24]
  425f72:	mov    esi,DWORD PTR [eax+0x14]
  425f75:	mov    edi,DWORD PTR [eax+0x18]
  425f78:	add    ecx,DWORD PTR [ebp+0x8]
  425f7b:	add    edx,DWORD PTR [ebp+0x8]
  425f7e:	mov    DWORD PTR [ebp-0x4],esi
  425f81:	cmp    esi,edi
  425f83:	ja     0x425f88
  425f85:	mov    DWORD PTR [ebp-0x4],edi
  425f88:	mov    DWORD PTR [ebp-0x8],ebx
  425f8b:	cmp    DWORD PTR [ebp-0x4],ebx
  425f8e:	jbe    0x425f61
  425f90:	cmp    ebx,DWORD PTR [eax+0x14]
  425f93:	jae    0x425f9b
  425f95:	movzx  esi,WORD PTR [edx+ebx*2]
  425f99:	jmp    0x425f9d
  425f9b:	mov    esi,ebx
  425f9d:	lea    esi,[ecx+esi*4]
  425fa0:	mov    edi,DWORD PTR [esi]
  425fa2:	test   edi,edi
  425fa4:	je     0x425fcf
  425fa6:	add    edi,DWORD PTR [ebp+0x8]
  425fa9:	mov    DWORD PTR [ebp-0x10],edi
  425fac:	cmp    edi,eax
  425fae:	jbe    0x425fc0
  425fb0:	mov    ebx,DWORD PTR [ebp+0xc]
  425fb3:	mov    ebx,DWORD PTR [ebx+0x7c]
  425fb6:	add    ebx,eax
  425fb8:	cmp    edi,ebx
  425fba:	jae    0x425fc0
  425fbc:	mov    esi,DWORD PTR [esi]
  425fbe:	jmp    0x425fc8
  425fc0:	sub    edi,DWORD PTR [ebp+0x8]
  425fc3:	mov    DWORD PTR [esi],edi
  425fc5:	mov    esi,DWORD PTR [ebp-0x10]
  425fc8:	test   esi,esi
  425fca:	je     0x425fda
  425fcc:	mov    ebx,DWORD PTR [ebp-0x8]
  425fcf:	inc    ebx
  425fd0:	mov    DWORD PTR [ebp-0x8],ebx
  425fd3:	cmp    ebx,DWORD PTR [ebp-0x4]
  425fd6:	jb     0x425f90
  425fd8:	jmp    0x425f61
  425fda:	xor    eax,eax
  425fdc:	pop    edi
  425fdd:	pop    esi
  425fde:	pop    ebx
  425fdf:	leave  
  425fe0:	ret    0x8
  425fe3:	push   ebp
  425fe4:	mov    ebp,esp
  425fe6:	sub    esp,0x2c
  425fe9:	mov    edx,0xf89c85a1
  425fee:	mov    DWORD PTR [ebp-0x4],edx
  425ff1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  425ff8:	mov    eax,DWORD PTR [ebp-0x4]
  425ffb:	mov    ecx,DWORD PTR [ebp-0x4]
  425ffe:	mov    ecx,DWORD PTR [ebp-0x4]
  426001:	mov    ecx,DWORD PTR [ebp-0x4]
  426004:	mov    ecx,DWORD PTR [ebp-0x4]
  426007:	mov    ecx,DWORD PTR [ebp-0x4]
  42600a:	push   ebx
  42600b:	mov    ebx,DWORD PTR [ebp+0x10]
  42600e:	push   esi
  42600f:	mov    esi,0x75108ac
  426014:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  42601b:	mov    ecx,DWORD PTR [ebp-0x4]
  42601e:	mov    ebx,DWORD PTR [ebx+0x190]
  426024:	push   edi
  426025:	mov    edi,0x3272f3
  42602a:	xor    ecx,esi
  42602c:	xor    eax,esi
  42602e:	add    eax,edi
  426030:	add    ecx,edi
  426032:	mov    DWORD PTR [ebp-0x18],eax
  426035:	cmp    ecx,DWORD PTR [ebx]
  426037:	je     0x4262b8
  42603d:	mov    ebx,DWORD PTR [ebp-0x4]
  426040:	mov    ecx,DWORD PTR [ebp+0xc]
  426043:	xor    ebx,esi
  426045:	add    ebx,edi
  426047:	cmp    ebx,ecx
  426049:	je     0x4262b8
  42604f:	mov    ebx,DWORD PTR [ebp-0x4]
  426052:	mov    ecx,DWORD PTR [ecx+0x80]
  426058:	xor    ebx,esi
  42605a:	add    ebx,edi
  42605c:	cmp    ecx,ebx
  42605e:	je     0x4262b3
  426064:	add    ecx,DWORD PTR [ebp+0x8]
  426067:	mov    DWORD PTR [ebp-0x2c],ecx
  42606a:	mov    ebx,edx
  42606c:	xor    ebx,esi
  42606e:	add    ebx,edi
  426070:	mov    DWORD PTR [ebp-0x10],ebx
  426073:	mov    ebx,DWORD PTR [ebp-0x10]
  426076:	cmp    ebx,edx
  426078:	je     0x42608c
  42607a:	mov    edx,DWORD PTR [ebp-0x10]
  42607d:	mov    ebx,DWORD PTR [ebp-0x4]
  426080:	imul   edx,edx,0x14
  426083:	xor    ebx,esi
  426085:	add    ebx,edi
  426087:	cmp    DWORD PTR [edx+ecx*1],ebx
  42608a:	jne    0x4260a3
  42608c:	mov    edx,DWORD PTR [ebp-0x10]
  42608f:	mov    ebx,DWORD PTR [ebp-0x4]
  426092:	imul   edx,edx,0x14
  426095:	xor    ebx,esi
  426097:	add    ebx,edi
  426099:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  42609d:	je     0x4262a5
  4260a3:	mov    eax,DWORD PTR [ebp-0x4]
  4260a6:	mov    ebx,DWORD PTR [ebp-0x4]
  4260a9:	mov    eax,DWORD PTR [ebp-0x10]
  4260ac:	imul   eax,eax,0x14
  4260af:	add    eax,ecx
  4260b1:	mov    ecx,DWORD PTR [eax+0x10]
  4260b4:	add    ecx,DWORD PTR [ebp+0x8]
  4260b7:	xor    ebx,esi
  4260b9:	mov    DWORD PTR [ebp-0x1c],ecx
  4260bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4260bf:	mov    edx,DWORD PTR [ebp-0x4]
  4260c2:	xor    ecx,esi
  4260c4:	add    ecx,edi
  4260c6:	xor    edx,esi
  4260c8:	mov    DWORD PTR [ebp-0x24],ecx
  4260cb:	mov    ecx,DWORD PTR [eax]
  4260cd:	add    edx,edi
  4260cf:	add    ebx,edi
  4260d1:	cmp    ecx,edx
  4260d3:	je     0x4260db
  4260d5:	add    ecx,DWORD PTR [ebp+0x8]
  4260d8:	mov    DWORD PTR [ebp-0x24],ecx
  4260db:	mov    ecx,DWORD PTR [ebp-0x4]
  4260de:	xor    ecx,esi
  4260e0:	add    ecx,DWORD PTR [eax+0xc]
  4260e3:	mov    eax,DWORD PTR [ebp+0x8]
  4260e6:	lea    eax,[ecx+eax*1+0x3272f3]
  4260ed:	mov    DWORD PTR [ebp+0xc],eax
  4260f0:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4260f7:	mov    eax,DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	mov    eax,DWORD PTR [eax+0x1e0]
  426103:	call   DWORD PTR [eax]
  426105:	mov    ecx,DWORD PTR [ebp-0x4]
  426108:	xor    ecx,esi
  42610a:	add    ecx,edi
  42610c:	mov    DWORD PTR [ebp-0xc],eax
  42610f:	cmp    ecx,eax
  426111:	jne    0x426125
  426113:	mov    eax,DWORD PTR [ebp+0x10]
  426116:	push   DWORD PTR [ebp+0xc]
  426119:	mov    eax,DWORD PTR [eax+0x1e0]
  42611f:	call   DWORD PTR [eax+0xc]
  426122:	mov    DWORD PTR [ebp-0xc],eax
  426125:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  42612c:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  426133:	mov    eax,DWORD PTR [ebp-0x4]
  426136:	xor    eax,esi
  426138:	add    eax,edi
  42613a:	cmp    eax,DWORD PTR [ebp-0xc]
  42613d:	jne    0x426162
  42613f:	mov    eax,DWORD PTR [ebp-0x8]
  426142:	mov    ecx,DWORD PTR [ebp-0x20]
  426145:	xor    eax,esi
  426147:	xor    ecx,esi
  426149:	lea    ebx,[ebx+eax*1+0x3272f3]
  426150:	mov    eax,DWORD PTR [ebp+0x10]
  426153:	mov    eax,DWORD PTR [eax+0x1e0]
  426159:	add    ecx,edi
  42615b:	imul   ecx,ebx
  42615e:	push   ecx
  42615f:	call   DWORD PTR [eax+0x24]
  426162:	mov    eax,DWORD PTR [ebp-0x4]
  426165:	xor    eax,esi
  426167:	add    eax,edi
  426169:	cmp    eax,DWORD PTR [ebp-0xc]
  42616c:	jne    0x42617d
  42616e:	mov    eax,DWORD PTR [ebp-0x28]
  426171:	xor    eax,esi
  426173:	add    eax,edi
  426175:	cmp    ebx,eax
  426177:	jbe    0x4260f7
  42617d:	mov    eax,DWORD PTR [ebp-0x4]
  426180:	xor    eax,esi
  426182:	add    eax,edi
  426184:	cmp    eax,DWORD PTR [ebp-0xc]
  426187:	jne    0x4261a0
  426189:	mov    eax,DWORD PTR [ebp-0x8]
  42618c:	mov    ecx,DWORD PTR [ebp-0x18]
  42618f:	xor    eax,esi
  426191:	lea    eax,[ecx+eax*1+0x3272f3]
  426198:	mov    DWORD PTR [ebp-0x18],eax
  42619b:	jmp    0x42628f
  4261a0:	mov    DWORD PTR [ebp-0x14],0x1121b29
  4261a7:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  4261ae:	mov    ebx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ebx,esi
  4261b3:	add    ebx,edi
  4261b5:	jmp    0x42627c
  4261ba:	mov    eax,DWORD PTR [ebp-0x4]
  4261bd:	xor    eax,esi
  4261bf:	add    eax,edi
  4261c1:	mov    DWORD PTR [ebp-0x14],eax
  4261c4:	mov    eax,DWORD PTR [ebp-0x4]
  4261c7:	xor    eax,esi
  4261c9:	add    eax,edi
  4261cb:	mov    DWORD PTR [ebp+0xc],eax
  4261ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4261d1:	mov    eax,DWORD PTR [ebp-0x24]
  4261d4:	xor    ecx,esi
  4261d6:	add    ecx,edi
  4261d8:	cmp    ecx,eax
  4261da:	je     0x4261e2
  4261dc:	mov    eax,DWORD PTR [eax+ebx*4]
  4261df:	mov    DWORD PTR [ebp-0x14],eax
  4261e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e5:	mov    eax,DWORD PTR [eax+ebx*4]
  4261e8:	mov    DWORD PTR [ebp+0xc],eax
  4261eb:	mov    eax,DWORD PTR [ebp-0x4]
  4261ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4261f1:	xor    eax,esi
  4261f3:	add    eax,edi
  4261f5:	cmp    eax,ecx
  4261f7:	je     0x426222
  4261f9:	mov    eax,DWORD PTR [ebp-0x4]
  4261fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4261ff:	xor    eax,esi
  426201:	add    eax,edi
  426203:	shr    ecx,0x1f
  426206:	cmp    eax,ecx
  426208:	je     0x426222
  42620a:	mov    ecx,DWORD PTR [ebp-0x14]
  42620d:	mov    eax,DWORD PTR [ebp+0x10]
  426210:	mov    eax,DWORD PTR [eax+0x1e0]
  426216:	movzx  ecx,cx
  426219:	push   ecx
  42621a:	push   DWORD PTR [ebp-0xc]
  42621d:	call   DWORD PTR [eax+0x8]
  426220:	jmp    0x42623b
  426222:	mov    eax,DWORD PTR [ebp+0xc]
  426225:	add    eax,DWORD PTR [ebp+0x8]
  426228:	mov    ecx,DWORD PTR [ebp+0x10]
  42622b:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426231:	add    eax,0x2
  426234:	push   eax
  426235:	push   DWORD PTR [ebp-0xc]
  426238:	call   DWORD PTR [ecx+0x8]
  42623b:	mov    DWORD PTR [ebp+0xc],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x4]
  426241:	mov    ecx,DWORD PTR [ebp+0xc]
  426244:	xor    eax,esi
  426246:	add    eax,edi
  426248:	cmp    eax,ecx
  42624a:	mov    eax,DWORD PTR [ebp-0x8]
  42624d:	jne    0x426260
  42624f:	mov    ecx,DWORD PTR [ebp-0x18]
  426252:	xor    eax,esi
  426254:	lea    eax,[ecx+eax*1+0x3272f3]
  42625b:	mov    DWORD PTR [ebp-0x18],eax
  42625e:	jmp    0x426270
  426260:	mov    ecx,DWORD PTR [ebp+0xc]
  426263:	xor    eax,esi
  426265:	add    eax,edi
  426267:	imul   eax,ecx
  42626a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42626d:	mov    DWORD PTR [ecx+ebx*4],eax
  426270:	mov    eax,DWORD PTR [ebp-0x8]
  426273:	xor    eax,esi
  426275:	lea    ebx,[ebx+eax*1+0x3272f3]
  42627c:	mov    eax,DWORD PTR [ebp-0x4]
  42627f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426282:	xor    eax,esi
  426284:	add    eax,edi
  426286:	cmp    DWORD PTR [ecx+ebx*4],eax
  426289:	jne    0x4261ba
  42628f:	mov    edx,DWORD PTR [ebp-0x10]
  426292:	mov    eax,DWORD PTR [ebp-0x18]
  426295:	mov    ecx,DWORD PTR [ebp-0x2c]
  426298:	sub    edx,0x3272f2
  42629e:	xor    edx,esi
  4262a0:	jmp    0x42606a
  4262a5:	mov    ecx,DWORD PTR [ebp-0x4]
  4262a8:	xor    ecx,esi
  4262aa:	add    ecx,edi
  4262ac:	cmp    eax,ecx
  4262ae:	mov    eax,DWORD PTR [ebp-0x4]
  4262b1:	jne    0x4262bb
  4262b3:	mov    eax,DWORD PTR [ebp-0x8]
  4262b6:	jmp    0x4262bb
  4262b8:	mov    eax,DWORD PTR [ebp-0x4]
  4262bb:	xor    eax,esi
  4262bd:	add    eax,edi
  4262bf:	pop    edi
  4262c0:	pop    esi
  4262c1:	pop    ebx
  4262c2:	leave  
  4262c3:	ret    0xc
  4262c6:	push   ebp
  4262c7:	mov    ebp,esp
  4262c9:	sub    esp,0x28
  4262cc:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  4262d3:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  4262da:	mov    eax,DWORD PTR [ebp+0xc]
  4262dd:	mov    DWORD PTR [ebp+0xc],eax
  4262e0:	push   esi
  4262e1:	mov    eax,eax
  4262e3:	mov    eax,DWORD PTR [ebp-0x4]
  4262e6:	mov    esi,DWORD PTR [ebp+0x8]
  4262e9:	mov    ecx,0x75108ac
  4262ee:	xor    eax,ecx
  4262f0:	mov    edx,0x3272f3
  4262f5:	add    eax,edx
  4262f7:	cmp    esi,eax
  4262f9:	je     0x426420
  4262ff:	mov    eax,DWORD PTR [ebp+0x8]
  426302:	mov    esi,DWORD PTR [ebp+0x8]
  426305:	add    esi,DWORD PTR [eax+0x3c]
  426308:	push   edi
  426309:	mov    DWORD PTR [ebp+0xc],esi
  42630c:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  426313:	mov    eax,DWORD PTR [ebp-0x1c]
  426316:	mov    esi,DWORD PTR [ebp-0x4]
  426319:	mov    edi,DWORD PTR [ebp+0xc]
  42631c:	xor    esi,ecx
  42631e:	xor    eax,ecx
  426320:	add    esi,edx
  426322:	cmp    DWORD PTR [edi+eax*8+0x1939810],esi
  426329:	je     0x42641a
  42632f:	mov    esi,DWORD PTR [ebp+0xc]
  426332:	mov    eax,DWORD PTR [ebp+0x8]
  426335:	add    eax,DWORD PTR [esi+0xa0]
  42633b:	mov    esi,DWORD PTR [ebp+0x8]
  42633e:	mov    edi,DWORD PTR [ebp+0xc]
  426341:	sub    esi,DWORD PTR [edi+0x34]
  426344:	mov    edi,DWORD PTR [ebp-0x4]
  426347:	xor    edi,ecx
  426349:	add    edi,edx
  42634b:	mov    DWORD PTR [ebp-0x24],esi
  42634e:	cmp    esi,edi
  426350:	je     0x42641a
  426356:	mov    esi,DWORD PTR [ebp-0x4]
  426359:	xor    esi,ecx
  42635b:	add    esi,edx
  42635d:	mov    DWORD PTR [ebp-0x8],esi
  426360:	push   ebx
  426361:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  426368:	jmp    0x426404
  42636d:	mov    esi,DWORD PTR [ebp-0x4]
  426370:	xor    esi,ecx
  426372:	lea    edi,[ebx-0x8]
  426375:	add    esi,edx
  426377:	shr    edi,1
  426379:	cmp    esi,edi
  42637b:	jae    0x4263ea
  42637d:	sub    edi,esi
  42637f:	lea    ebx,[eax+esi*2+0x8]
  426383:	mov    DWORD PTR [ebp-0x18],edi
  426386:	movzx  esi,WORD PTR [ebx]
  426389:	and    esi,0xfff
  42638f:	mov    DWORD PTR [ebp-0x14],esi
  426392:	mov    edi,DWORD PTR [ebp-0x14]
  426395:	mov    esi,DWORD PTR [eax]
  426397:	sub    esi,edx
  426399:	add    edi,esi
  42639b:	movzx  esi,WORD PTR [ebx]
  42639e:	shr    esi,0xc
  4263a1:	xor    edi,ecx
  4263a3:	mov    DWORD PTR [ebp-0x20],edi
  4263a6:	mov    DWORD PTR [ebp-0x14],esi
  4263a9:	mov    esi,DWORD PTR [ebp-0x20]
  4263ac:	mov    edi,DWORD PTR [ebp+0x8]
  4263af:	xor    esi,ecx
  4263b1:	lea    esi,[esi+edi*1+0x3272f3]
  4263b8:	mov    DWORD PTR [ebp-0x20],esi
  4263bb:	mov    esi,DWORD PTR [ebp-0x10]
  4263be:	mov    edi,DWORD PTR [ebp-0x14]
  4263c1:	xor    esi,ecx
  4263c3:	add    esi,edx
  4263c5:	cmp    edi,esi
  4263c7:	jne    0x4263df
  4263c9:	mov    esi,DWORD PTR [ebp-0x10]
  4263cc:	mov    edi,DWORD PTR [ebp-0x14]
  4263cf:	xor    esi,ecx
  4263d1:	add    esi,edx
  4263d3:	cmp    edi,esi
  4263d5:	jne    0x4263df
  4263d7:	mov    esi,DWORD PTR [ebp-0x20]
  4263da:	mov    edi,DWORD PTR [ebp-0x24]
  4263dd:	add    DWORD PTR [esi],edi
  4263df:	add    ebx,0x2
  4263e2:	dec    DWORD PTR [ebp-0x18]
  4263e5:	jne    0x426386
  4263e7:	mov    ebx,DWORD PTR [ebp-0xc]
  4263ea:	add    DWORD PTR [ebp-0x8],ebx
  4263ed:	mov    esi,DWORD PTR [ebp-0x1c]
  4263f0:	mov    edi,DWORD PTR [ebp-0x8]
  4263f3:	mov    ebx,DWORD PTR [ebp+0xc]
  4263f6:	xor    esi,ecx
  4263f8:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939814]
  4263ff:	jae    0x426419
  426401:	add    eax,DWORD PTR [ebp-0xc]
  426404:	mov    esi,DWORD PTR [ebp-0x4]
  426407:	mov    ebx,DWORD PTR [eax+0x4]
  42640a:	xor    esi,ecx
  42640c:	add    esi,edx
  42640e:	mov    DWORD PTR [ebp-0xc],ebx
  426411:	cmp    ebx,esi
  426413:	jne    0x42636d
  426419:	pop    ebx
  42641a:	mov    eax,DWORD PTR [ebp-0x28]
  42641d:	pop    edi
  42641e:	jmp    0x426423
  426420:	mov    eax,DWORD PTR [ebp-0x4]
  426423:	xor    eax,ecx
  426425:	add    eax,edx
  426427:	pop    esi
  426428:	leave  
  426429:	ret    0x8
  42642c:	push   ebp
  42642d:	mov    ebp,esp
  42642f:	sub    esp,0xd8
  426435:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42643c:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  426443:	mov    eax,DWORD PTR [ebp-0x4]
  426446:	push   ebx
  426447:	push   esi
  426448:	mov    esi,0x75108ac
  42644d:	xor    eax,esi
  42644f:	push   edi
  426450:	mov    edi,0x3272f3
  426455:	add    eax,edi
  426457:	mov    DWORD PTR [ebp-0x18],eax
  42645a:	mov    eax,DWORD PTR [ebp-0x4]
  42645d:	xor    eax,esi
  42645f:	add    eax,edi
  426461:	mov    DWORD PTR [ebp-0x8],eax
  426464:	mov    ebx,DWORD PTR [ebp+0x20]
  426467:	mov    eax,DWORD PTR [ebp-0x1c]
  42646a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42646d:	xor    eax,ecx
  42646f:	mov    DWORD PTR [ebp-0x1c],eax
  426472:	add    DWORD PTR [ebp-0x1c],0xf89cb5a1
  426479:	mov    eax,DWORD PTR [ebp-0xc]
  42647c:	mov    ecx,DWORD PTR [ebp-0xc]
  42647f:	xor    eax,ecx
  426481:	mov    DWORD PTR [ebp-0xc],eax
  426484:	add    DWORD PTR [ebp-0xc],0xf89c85e1
  42648b:	mov    eax,DWORD PTR [ebp-0x10]
  42648e:	mov    ecx,DWORD PTR [ebp-0x10]
  426491:	xor    eax,ecx
  426493:	mov    DWORD PTR [ebp-0x10],eax
  426496:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  42649d:	mov    eax,DWORD PTR [ebp-0x28]
  4264a0:	mov    ecx,DWORD PTR [ebp-0x28]
  4264a3:	xor    eax,ecx
  4264a5:	mov    DWORD PTR [ebp-0x28],eax
  4264a8:	add    DWORD PTR [ebp-0x28],0xf89f05a1
  4264af:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4264b6:	mov    eax,DWORD PTR [ebp+0x8]
  4264b9:	test   eax,eax
  4264bb:	je     0x426944
  4264c1:	mov    eax,DWORD PTR [ebp+0xc]
  4264c4:	test   eax,eax
  4264c6:	je     0x426944
  4264cc:	mov    eax,DWORD PTR [ebp+0x18]
  4264cf:	test   eax,eax
  4264d1:	je     0x426944
  4264d7:	mov    eax,DWORD PTR [ebp+0x20]
  4264da:	mov    ecx,DWORD PTR [ebp+0x8]
  4264dd:	xor    eax,0x8ac
  4264e2:	add    eax,0x72f3
  4264e7:	cmp    WORD PTR [ecx],ax
  4264ea:	jne    0x426944
  4264f0:	mov    eax,DWORD PTR [ebp-0x4]
  4264f3:	xor    eax,esi
  4264f5:	add    eax,edi
  4264f7:	mov    DWORD PTR [ebp-0x30],eax
  4264fa:	mov    eax,DWORD PTR [ebp-0x4]
  4264fd:	mov    ecx,DWORD PTR [ebp+0x8]
  426500:	mov    eax,DWORD PTR [ebp+0x8]
  426503:	add    eax,DWORD PTR [ecx+0x3c]
  426506:	mov    DWORD PTR [ebp+0xc],eax
  426509:	mov    eax,DWORD PTR [eax+0x50]
  42650c:	test   eax,eax
  42650e:	je     0x426944
  426514:	mov    DWORD PTR [ebp-0x2c],0xf88c85a1
  42651b:	mov    eax,DWORD PTR [ebp-0x2c]
  42651e:	xor    eax,esi
  426520:	add    eax,edi
  426522:	mov    DWORD PTR [ebp-0x2c],eax
  426525:	mov    eax,DWORD PTR [ebp-0x4]
  426528:	mov    eax,DWORD PTR [ebx+0x190]
  42652e:	mov    ecx,DWORD PTR [eax]
  426530:	mov    ecx,DWORD PTR [ecx+0x3c]
  426533:	add    ecx,DWORD PTR [eax]
  426535:	mov    eax,DWORD PTR [ebp-0x4]
  426538:	mov    eax,DWORD PTR [ebx+0x18c]
  42653e:	mov    edx,DWORD PTR [eax]
  426540:	mov    DWORD PTR [ebp-0x20],ecx
  426543:	mov    DWORD PTR [ebp+0x20],edx
  426546:	cmp    edx,edx
  426548:	jne    0x42657c
  42654a:	mov    eax,DWORD PTR [ebx+0x1e0]
  426550:	lea    edx,[ebp-0x18]
  426553:	push   edx
  426554:	mov    edx,DWORD PTR [ebp-0xc]
  426557:	xor    edx,esi
  426559:	add    edx,edi
  42655b:	push   edx
  42655c:	push   DWORD PTR [ecx+0x50]
  42655f:	push   DWORD PTR [ebp+0x20]
  426562:	call   DWORD PTR [eax+0x1c]
  426565:	mov    eax,DWORD PTR [ebp-0x20]
  426568:	mov    ecx,DWORD PTR [eax+0x54]
  42656b:	mov    eax,DWORD PTR [eax+0x50]
  42656e:	sub    eax,ecx
  426570:	add    ecx,DWORD PTR [ebp+0x20]
  426573:	push   ecx
  426574:	call   0x426ee1
  426579:	mov    edx,DWORD PTR [ebp+0x20]
  42657c:	mov    eax,DWORD PTR [ebx+0x194]
  426582:	mov    DWORD PTR [eax],edx
  426584:	mov    eax,DWORD PTR [ebp+0xc]
  426587:	push   DWORD PTR [eax+0x54]
  42658a:	push   DWORD PTR [ebp+0x8]
  42658d:	push   edx
  42658e:	call   0x426dd7
  426593:	mov    ecx,DWORD PTR [ebp+0x20]
  426596:	mov    eax,DWORD PTR [ecx+0x3c]
  426599:	add    eax,ecx
  42659b:	movzx  ecx,WORD PTR [eax+0x14]
  42659f:	lea    ecx,[ecx+eax*1+0x18]
  4265a3:	mov    DWORD PTR [ebp+0x18],ecx
  4265a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4265a9:	movzx  edx,WORD PTR [eax+0x6]
  4265ad:	xor    ecx,esi
  4265af:	add    ecx,edi
  4265b1:	mov    DWORD PTR [ebp+0xc],eax
  4265b4:	cmp    edx,ecx
  4265b6:	je     0x426663
  4265bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4265bf:	xor    ecx,esi
  4265c1:	add    ecx,edi
  4265c3:	mov    DWORD PTR [ebp-0x8],ecx
  4265c6:	mov    ecx,DWORD PTR [ebp-0x24]
  4265c9:	movzx  edx,WORD PTR [eax+0x6]
  4265cd:	xor    ecx,esi
  4265cf:	sub    edx,ecx
  4265d1:	sub    edx,edi
  4265d3:	cmp    DWORD PTR [ebp-0x8],edx
  4265d6:	ja     0x426663
  4265dc:	mov    edx,DWORD PTR [ebp+0x18]
  4265df:	add    edx,0x8
  4265e2:	mov    DWORD PTR [ebp+0x18],edx
  4265e5:	jmp    0x4265ea
  4265e7:	mov    edx,DWORD PTR [ebp+0x18]
  4265ea:	mov    eax,DWORD PTR [eax+0x38]
  4265ed:	lea    ecx,[eax-0x1]
  4265f0:	mov    DWORD PTR [ebp-0x38],eax
  4265f3:	mov    eax,DWORD PTR [edx]
  4265f5:	test   eax,ecx
  4265f7:	je     0x426600
  4265f9:	not    ecx
  4265fb:	and    eax,ecx
  4265fd:	add    eax,DWORD PTR [ebp-0x38]
  426600:	mov    ecx,DWORD PTR [edx+0x4]
  426603:	add    ecx,DWORD PTR [ebp+0x20]
  426606:	push   ecx
  426607:	call   0x426ee1
  42660c:	mov    edx,DWORD PTR [ebp-0x4]
  42660f:	mov    eax,DWORD PTR [ebp+0x18]
  426612:	mov    ecx,DWORD PTR [eax+0x8]
  426615:	xor    edx,esi
  426617:	add    edx,edi
  426619:	cmp    ecx,edx
  42661b:	je     0x426634
  42661d:	push   ecx
  42661e:	mov    ecx,DWORD PTR [ebp+0x8]
  426621:	add    ecx,DWORD PTR [eax+0xc]
  426624:	mov    eax,DWORD PTR [eax+0x4]
  426627:	add    eax,DWORD PTR [ebp+0x20]
  42662a:	push   ecx
  42662b:	push   eax
  42662c:	call   0x426dd7
  426631:	mov    eax,DWORD PTR [ebp+0x18]
  426634:	mov    ecx,DWORD PTR [ebp-0x24]
  426637:	mov    edx,DWORD PTR [ebp-0x8]
  42663a:	add    eax,0x28
  42663d:	xor    ecx,esi
  42663f:	lea    ecx,[edx+ecx*1+0x3272f3]
  426646:	mov    edx,DWORD PTR [ebp+0xc]
  426649:	mov    DWORD PTR [ebp+0x18],eax
  42664c:	mov    eax,DWORD PTR [ebp-0x24]
  42664f:	movzx  edx,WORD PTR [edx+0x6]
  426653:	xor    eax,esi
  426655:	sub    edx,eax
  426657:	mov    eax,DWORD PTR [ebp+0xc]
  42665a:	sub    edx,edi
  42665c:	mov    DWORD PTR [ebp-0x8],ecx
  42665f:	cmp    ecx,edx
  426661:	jbe    0x4265e7
  426663:	mov    edx,DWORD PTR [ebx+0x18c]
  426669:	mov    ecx,DWORD PTR [ebp+0x20]
  42666c:	cmp    ecx,DWORD PTR [edx]
  42666e:	jne    0x426697
  426670:	mov    eax,DWORD PTR [ebx+0x1e0]
  426676:	lea    edx,[ebp-0x18]
  426679:	push   edx
  42667a:	mov    edx,DWORD PTR [ebp-0x10]
  42667d:	xor    edx,esi
  42667f:	add    edx,edi
  426681:	push   edx
  426682:	mov    edx,DWORD PTR [ebp-0x20]
  426685:	push   DWORD PTR [edx+0x54]
  426688:	push   ecx
  426689:	call   DWORD PTR [eax+0x1c]
  42668c:	test   eax,eax
  42668e:	je     0x426935
  426694:	mov    eax,DWORD PTR [ebp+0xc]
  426697:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42669d:	mov    ecx,DWORD PTR [ecx]
  42669f:	xor    ecx,esi
  4266a1:	add    ecx,edi
  4266a3:	je     0x426860
  4266a9:	mov    eax,DWORD PTR [ebp-0x4]
  4266ac:	xor    eax,esi
  4266ae:	add    eax,edi
  4266b0:	and    DWORD PTR [ebp+0x8],0x0
  4266b4:	mov    DWORD PTR [ebp-0x14],eax
  4266b7:	mov    eax,0xf89c85dd
  4266bc:	lea    ecx,[eax-0x8]
  4266bf:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4266c6:	mov    DWORD PTR [ebp-0x54],0xf89c852d
  4266cd:	mov    DWORD PTR [ebp-0x50],eax
  4266d0:	mov    DWORD PTR [ebp-0x4c],ecx
  4266d3:	mov    DWORD PTR [ebp-0x48],ecx
  4266d6:	mov    DWORD PTR [ebp-0x44],0xf89c85a1
  4266dd:	mov    edx,DWORD PTR [ebp+0x8]
  4266e0:	mov    ecx,0x8ac
  4266e5:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4266ea:	mov    edx,0x72f3
  4266ef:	add    cx,dx
  4266f2:	mov    edx,DWORD PTR [ebp+0x8]
  4266f5:	inc    DWORD PTR [ebp+0x8]
  4266f8:	cmp    DWORD PTR [ebp+0x8],0x6
  4266fc:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426704:	jb     0x4266dd
  426706:	mov    ecx,0xf89c85d3
  42670b:	mov    DWORD PTR [ebp-0xb0],eax
  426711:	mov    DWORD PTR [ebp-0x9c],eax
  426717:	mov    DWORD PTR [ebp-0x74],eax
  42671a:	mov    DWORD PTR [ebp-0x70],eax
  42671d:	mov    eax,0xf89c852c
  426722:	lea    edx,[ecx+0x2c]
  426725:	mov    DWORD PTR [ebp-0x64],eax
  426728:	mov    DWORD PTR [ebp-0x60],eax
  42672b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  426735:	mov    DWORD PTR [ebp-0xac],ecx
  42673b:	mov    DWORD PTR [ebp-0xa8],edx
  426741:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  42674b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426755:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  42675f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426769:	mov    DWORD PTR [ebp-0x90],0xf89c852d
  426773:	mov    DWORD PTR [ebp-0x8c],ecx
  426779:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  426783:	mov    DWORD PTR [ebp-0x84],edx
  426789:	mov    DWORD PTR [ebp-0x80],0xf89c85d0
  426790:	mov    DWORD PTR [ebp-0x7c],ecx
  426793:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  42679a:	mov    DWORD PTR [ebp-0x6c],ecx
  42679d:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  4267a4:	mov    DWORD PTR [ebp-0x5c],0xf89c85a1
  4267ab:	xor    eax,eax
  4267ad:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4267b4:	xor    cl,0xac
  4267b7:	sub    cl,0xd
  4267ba:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4267c1:	inc    eax
  4267c2:	cmp    eax,0x17
  4267c5:	jb     0x4267ad
  4267c7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4267cd:	lea    ecx,[ebp-0xc0]
  4267d3:	push   ecx
  4267d4:	call   DWORD PTR [eax+0x4]
  4267d7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4267dd:	lea    edx,[ebp-0xd8]
  4267e3:	push   edx
  4267e4:	push   eax
  4267e5:	call   DWORD PTR [ecx+0x8]
  4267e8:	mov    DWORD PTR [ebp-0x40],eax
  4267eb:	lea    eax,[ebp-0x14]
  4267ee:	push   eax
  4267ef:	mov    eax,DWORD PTR [ebx+0x18c]
  4267f5:	push   DWORD PTR [eax]
  4267f7:	mov    eax,DWORD PTR [ebp-0x40]
  4267fa:	call   eax
  4267fc:	mov    eax,DWORD PTR [ebp-0x4]
  4267ff:	xor    eax,esi
  426801:	add    eax,edi
  426803:	mov    DWORD PTR [ebp-0x34],eax
  426806:	mov    ecx,DWORD PTR [ebp-0x4]
  426809:	mov    eax,DWORD PTR [ebp-0x14]
  42680c:	xor    ecx,esi
  42680e:	add    ecx,edi
  426810:	cmp    eax,ecx
  426812:	je     0x42685d
  426814:	mov    DWORD PTR [ebp-0x3c],eax
  426817:	jmp    0x426828
  426819:	mov    eax,DWORD PTR [eax]
  42681b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42681e:	mov    DWORD PTR [ebp-0x14],eax
  426821:	mov    eax,DWORD PTR [ebp-0x14]
  426824:	cmp    eax,ecx
  426826:	je     0x426835
  426828:	mov    edx,DWORD PTR [eax+0x18]
  42682b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426831:	cmp    edx,DWORD PTR [ecx]
  426833:	jne    0x426819
  426835:	mov    ecx,DWORD PTR [ebx+0x18c]
  42683b:	mov    edx,DWORD PTR [eax+0x18]
  42683e:	cmp    edx,DWORD PTR [ecx]
  426840:	jne    0x42685d
  426842:	mov    ecx,DWORD PTR [ebx+0x190]
  426848:	mov    edx,DWORD PTR [ebp-0x20]
  42684b:	mov    edx,DWORD PTR [edx+0x28]
  42684e:	add    edx,DWORD PTR [ecx]
  426850:	mov    DWORD PTR [eax+0x1c],edx
  426853:	mov    eax,DWORD PTR [ebp-0x24]
  426856:	xor    eax,esi
  426858:	add    eax,edi
  42685a:	mov    DWORD PTR [ebp-0x34],eax
  42685d:	mov    eax,DWORD PTR [ebp+0xc]
  426860:	push   ebx
  426861:	push   eax
  426862:	push   DWORD PTR [ebp+0x20]
  426865:	call   0x425fe3
  42686a:	test   eax,eax
  42686c:	je     0x426935
  426872:	push   DWORD PTR [ebp+0xc]
  426875:	mov    ecx,ebx
  426877:	push   DWORD PTR [ebp+0x20]
  42687a:	call   0x425f3c
  42687f:	test   eax,eax
  426881:	je     0x426935
  426887:	mov    eax,DWORD PTR [ebp+0xc]
  42688a:	mov    edx,DWORD PTR [ebp+0x20]
  42688d:	mov    ecx,ebx
  42688f:	call   0x425e15
  426894:	test   eax,eax
  426896:	je     0x426935
  42689c:	push   ebx
  42689d:	push   DWORD PTR [ebp+0x20]
  4268a0:	call   0x4262c6
  4268a5:	test   eax,eax
  4268a7:	je     0x426935
  4268ad:	mov    eax,DWORD PTR [ebx+0x18c]
  4268b3:	mov    edx,DWORD PTR [ebp+0x20]
  4268b6:	cmp    edx,DWORD PTR [eax]
  4268b8:	jne    0x4268d4
  4268ba:	mov    eax,DWORD PTR [ebx+0x1e0]
  4268c0:	lea    ecx,[ebp-0x18]
  4268c3:	push   ecx
  4268c4:	push   DWORD PTR [ebp-0x18]
  4268c7:	mov    ecx,DWORD PTR [ebp-0x20]
  4268ca:	push   DWORD PTR [ecx+0x54]
  4268cd:	push   edx
  4268ce:	call   DWORD PTR [eax+0x1c]
  4268d1:	mov    edx,DWORD PTR [ebp+0x20]
  4268d4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4268da:	mov    eax,DWORD PTR [eax]
  4268dc:	xor    eax,esi
  4268de:	add    eax,edi
  4268e0:	je     0x426919
  4268e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4268e5:	mov    eax,DWORD PTR [ecx+0x28]
  4268e8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a1
  4268ef:	mov    esi,DWORD PTR [ebp+0x8]
  4268f2:	push   DWORD PTR [ebp+0x14]
  4268f5:	xor    esi,0x8ac
  4268fb:	push   DWORD PTR [ebp+0x10]
  4268fe:	add    esi,0x72f3
  426904:	or     WORD PTR [ecx+0x16],si
  426908:	add    eax,edx
  42690a:	push   edx
  42690b:	call   eax
  42690d:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  426917:	jmp    0x426923
  426919:	mov    eax,DWORD PTR [ebp+0xc]
  42691c:	mov    eax,DWORD PTR [eax+0x28]
  42691f:	add    eax,edx
  426921:	call   eax
  426923:	mov    DWORD PTR [ebp-0x8],eax
  426926:	mov    eax,DWORD PTR [ebp-0x8]
  426929:	mov    ecx,DWORD PTR [ebp+0x1c]
  42692c:	mov    DWORD PTR [ecx],eax
  42692e:	mov    DWORD PTR [ebp-0x30],0x1
  426935:	cmp    DWORD PTR [ebp-0x30],0x0
  426939:	jne    0x42693f
  42693b:	and    DWORD PTR [ebp+0x20],0x0
  42693f:	mov    eax,DWORD PTR [ebp+0x20]
  426942:	jmp    0x426946
  426944:	xor    eax,eax
  426946:	pop    edi
  426947:	pop    esi
  426948:	pop    ebx
  426949:	leave  
  42694a:	ret    0x1c
  42694d:	push   ebp
  42694e:	mov    ebp,esp
  426950:	movzx  edx,WORD PTR [ecx+0x6]
  426954:	movzx  eax,WORD PTR [ecx+0x14]
  426958:	push   ebx
  426959:	push   edi
  42695a:	xor    edi,edi
  42695c:	lea    eax,[eax+ecx*1+0x18]
  426960:	test   edx,edx
  426962:	je     0x426983
  426964:	mov    ecx,DWORD PTR [eax+0xc]
  426967:	lea    ebx,[ecx+esi*1]
  42696a:	cmp    DWORD PTR [ebp+0x8],ebx
  42696d:	jb     0x42697b
  42696f:	mov    ebx,DWORD PTR [eax+0x8]
  426972:	add    ebx,ecx
  426974:	add    ebx,esi
  426976:	cmp    DWORD PTR [ebp+0x8],ebx
  426979:	jb     0x426985
  42697b:	add    eax,0x28
  42697e:	inc    edi
  42697f:	cmp    edi,edx
  426981:	jb     0x426964
  426983:	xor    eax,eax
  426985:	pop    edi
  426986:	pop    ebx
  426987:	pop    ebp
  426988:	ret    0x4
  42698b:	push   ebp
  42698c:	mov    ebp,esp
  42698e:	sub    esp,0x34
  426991:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  426998:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  42699f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  4269a6:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  4269ad:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  4269b4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4269bb:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4269c2:	mov    DWORD PTR [ebp-0x10],eax
  4269c5:	mov    eax,DWORD PTR [ebp+0x8]
  4269c8:	mov    DWORD PTR [ebp-0x14],eax
  4269cb:	mov    eax,DWORD PTR [ebp-0xc]
  4269ce:	push   ebx
  4269cf:	mov    ecx,0x75108ac
  4269d4:	xor    eax,ecx
  4269d6:	push   esi
  4269d7:	mov    esi,DWORD PTR [ebp-0x10]
  4269da:	mov    edx,0x3272f3
  4269df:	add    eax,edx
  4269e1:	push   edi
  4269e2:	cmp    esi,eax
  4269e4:	je     0x426bc3
  4269ea:	mov    eax,DWORD PTR [ebp-0xc]
  4269ed:	mov    esi,DWORD PTR [ebp-0x14]
  4269f0:	xor    eax,ecx
  4269f2:	add    eax,edx
  4269f4:	cmp    esi,eax
  4269f6:	je     0x426bc3
  4269fc:	mov    eax,DWORD PTR [ebp-0xc]
  4269ff:	xor    eax,ecx
  426a01:	add    eax,edx
  426a03:	mov    DWORD PTR [ebp-0x24],eax
  426a06:	mov    eax,DWORD PTR [ebp-0xc]
  426a09:	xor    eax,ecx
  426a0b:	add    eax,edx
  426a0d:	mov    DWORD PTR [ebp-0x28],eax
  426a10:	mov    edi,DWORD PTR [ebp-0x20]
  426a13:	mov    ebx,DWORD PTR [ebp-0x8]
  426a16:	mov    esi,0x8ac
  426a1b:	xor    edi,esi
  426a1d:	mov    eax,0x72f3
  426a22:	xor    ebx,esi
  426a24:	add    edi,eax
  426a26:	add    ebx,eax
  426a28:	sub    ebx,edi
  426a2a:	mov    WORD PTR [ebp-0x8],bx
  426a2e:	jmp    0x426af3
  426a33:	mov    edi,DWORD PTR [ebp-0xc]
  426a36:	mov    bx,WORD PTR [ebp-0x4]
  426a3a:	xor    edi,esi
  426a3c:	add    edi,eax
  426a3e:	cmp    bx,di
  426a41:	je     0x426b35
  426a47:	mov    edi,DWORD PTR [ebp-0xc]
  426a4a:	mov    ebx,DWORD PTR [ebp+0xc]
  426a4d:	xor    edi,ecx
  426a4f:	add    edi,edx
  426a51:	cmp    ebx,edi
  426a53:	mov    di,WORD PTR [ebp-0x4]
  426a57:	mov    bx,WORD PTR [ebp+0x8]
  426a5b:	je     0x426ac6
  426a5d:	cmp    bx,di
  426a60:	je     0x426acf
  426a62:	mov    edi,DWORD PTR [ebp-0x20]
  426a65:	mov    bx,WORD PTR [ebp+0x8]
  426a69:	xor    edi,esi
  426a6b:	add    edi,eax
  426a6d:	cmp    bx,di
  426a70:	jb     0x426a90
  426a72:	mov    edi,DWORD PTR [ebp-0x2c]
  426a75:	mov    bx,WORD PTR [ebp+0x8]
  426a79:	xor    edi,esi
  426a7b:	add    edi,eax
  426a7d:	cmp    bx,di
  426a80:	ja     0x426a90
  426a82:	movzx  edi,WORD PTR [ebp+0x8]
  426a86:	movzx  ebx,WORD PTR [ebp-0x8]
  426a8a:	add    edi,ebx
  426a8c:	mov    WORD PTR [ebp+0x8],di
  426a90:	mov    edi,DWORD PTR [ebp-0x20]
  426a93:	mov    bx,WORD PTR [ebp-0x4]
  426a97:	xor    edi,esi
  426a99:	add    edi,eax
  426a9b:	cmp    bx,di
  426a9e:	jb     0x426abe
  426aa0:	mov    edi,DWORD PTR [ebp-0x2c]
  426aa3:	mov    bx,WORD PTR [ebp-0x4]
  426aa7:	xor    edi,esi
  426aa9:	add    edi,eax
  426aab:	cmp    bx,di
  426aae:	ja     0x426abe
  426ab0:	movzx  edi,WORD PTR [ebp-0x4]
  426ab4:	movzx  ebx,WORD PTR [ebp-0x8]
  426ab8:	add    edi,ebx
  426aba:	mov    WORD PTR [ebp-0x4],di
  426abe:	mov    di,WORD PTR [ebp-0x4]
  426ac2:	mov    bx,WORD PTR [ebp+0x8]
  426ac6:	cmp    bx,di
  426ac9:	jne    0x426bc3
  426acf:	mov    edi,DWORD PTR [ebp-0x1c]
  426ad2:	mov    ebx,DWORD PTR [ebp-0x10]
  426ad5:	xor    edi,ecx
  426ad7:	lea    edi,[edi+ebx*1+0x3272f3]
  426ade:	mov    DWORD PTR [ebp-0x10],edi
  426ae1:	mov    edi,DWORD PTR [ebp-0x1c]
  426ae4:	mov    ebx,DWORD PTR [ebp-0x14]
  426ae7:	xor    edi,ecx
  426ae9:	lea    edi,[edi+ebx*1+0x3272f3]
  426af0:	mov    DWORD PTR [ebp-0x14],edi
  426af3:	mov    edi,DWORD PTR [ebp-0x24]
  426af6:	mov    ebx,DWORD PTR [ebp-0x10]
  426af9:	mov    di,WORD PTR [ebx+edi*2]
  426afd:	mov    WORD PTR [ebp+0x8],di
  426b01:	mov    edi,DWORD PTR [ebp-0x28]
  426b04:	mov    ebx,DWORD PTR [ebp-0x14]
  426b07:	mov    di,WORD PTR [ebx+edi*2]
  426b0b:	mov    WORD PTR [ebp-0x4],di
  426b0f:	mov    edi,DWORD PTR [ebp-0xc]
  426b12:	mov    bx,WORD PTR [ebp+0x8]
  426b16:	xor    edi,esi
  426b18:	add    edi,eax
  426b1a:	cmp    bx,di
  426b1d:	jne    0x426a33
  426b23:	mov    eax,DWORD PTR [ebp-0x18]
  426b26:	mov    esi,DWORD PTR [ebp-0xc]
  426b29:	xor    eax,ecx
  426b2b:	add    eax,edx
  426b2d:	imul   eax,esi
  426b30:	mov    DWORD PTR [ebp-0xc],eax
  426b33:	jmp    0x426b47
  426b35:	mov    eax,DWORD PTR [ebp-0xc]
  426b38:	mov    esi,DWORD PTR [ebp-0x18]
  426b3b:	xor    eax,ecx
  426b3d:	lea    eax,[eax+esi*1+0x3272f3]
  426b44:	mov    DWORD PTR [ebp-0x18],eax
  426b47:	mov    eax,DWORD PTR [ebp-0x24]
  426b4a:	sub    eax,edx
  426b4c:	xor    eax,ecx
  426b4e:	mov    DWORD PTR [ebp-0x30],eax
  426b51:	mov    eax,DWORD PTR [ebp-0x28]
  426b54:	sub    eax,edx
  426b56:	xor    eax,ecx
  426b58:	mov    DWORD PTR [ebp-0x34],eax
  426b5b:	mov    eax,DWORD PTR [ebp-0x34]
  426b5e:	mov    esi,DWORD PTR [ebp-0x1c]
  426b61:	xor    esi,ecx
  426b63:	add    esi,edx
  426b65:	xor    eax,ecx
  426b67:	add    eax,0x3272f3
  426b6c:	imul   esi,eax
  426b6f:	mov    eax,DWORD PTR [ebp-0x14]
  426b72:	movzx  eax,WORD PTR [esi+eax*1]
  426b76:	mov    esi,DWORD PTR [ebp-0x30]
  426b79:	mov    edi,DWORD PTR [ebp-0x1c]
  426b7c:	xor    esi,ecx
  426b7e:	add    esi,edx
  426b80:	xor    edi,ecx
  426b82:	add    edi,edx
  426b84:	imul   edi,esi
  426b87:	mov    esi,DWORD PTR [ebp-0x10]
  426b8a:	movzx  esi,WORD PTR [edi+esi*1]
  426b8e:	sub    eax,edx
  426b90:	sub    esi,edx
  426b92:	xor    eax,ecx
  426b94:	xor    esi,ecx
  426b96:	cmp    esi,eax
  426b98:	jne    0x426bc3
  426b9a:	mov    eax,DWORD PTR [ebp-0x30]
  426b9d:	mov    esi,DWORD PTR [ebp-0x1c]
  426ba0:	xor    eax,ecx
  426ba2:	add    eax,0x3272f3
  426ba7:	xor    esi,ecx
  426ba9:	add    esi,edx
  426bab:	imul   esi,eax
  426bae:	mov    eax,DWORD PTR [ebp-0x10]
  426bb1:	movzx  eax,WORD PTR [esi+eax*1]
  426bb5:	mov    esi,DWORD PTR [ebp-0xc]
  426bb8:	sub    eax,edx
  426bba:	xor    eax,ecx
  426bbc:	cmp    eax,esi
  426bbe:	mov    eax,DWORD PTR [ebp-0xc]
  426bc1:	je     0x426bc6
  426bc3:	mov    eax,DWORD PTR [ebp-0x18]
  426bc6:	pop    edi
  426bc7:	xor    eax,ecx
  426bc9:	pop    esi
  426bca:	add    eax,edx
  426bcc:	pop    ebx
  426bcd:	leave  
  426bce:	ret    0x8
  426bd1:	push   ebp
  426bd2:	mov    ebp,esp
  426bd4:	push   ecx
  426bd5:	mov    cx,WORD PTR [eax]
  426bd8:	push   esi
  426bd9:	mov    esi,0x3b5b
  426bde:	sub    cx,si
  426be1:	mov    esi,0x8a99
  426be6:	xor    cx,si
  426be9:	mov    esi,0x4e3c
  426bee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426bf5:	mov    edx,0xf89c85a1
  426bfa:	cmp    cx,si
  426bfd:	je     0x426c5c
  426bff:	push   ebx
  426c00:	push   edi
  426c01:	movzx  ecx,cx
  426c04:	mov    edi,0xffcd8d0d
  426c09:	mov    esi,0x75108ac
  426c0e:	mov    ebx,0x4f98
  426c13:	cmp    cx,bx
  426c16:	jne    0x426c1b
  426c18:	mov    DWORD PTR [ebp-0x4],edx
  426c1b:	lea    edx,[edi+0x1]
  426c1e:	xor    edx,esi
  426c20:	mov    edi,edx
  426c22:	xor    edi,esi
  426c24:	mov    cx,WORD PTR [eax+edi*2+0x64e5e6]
  426c2c:	mov    ebx,0x3b5b
  426c31:	sub    cx,bx
  426c34:	mov    ebx,0x8a99
  426c39:	xor    cx,bx
  426c3c:	mov    ebx,0x4e3c
  426c41:	cmp    cx,bx
  426c44:	jne    0x426c0e
  426c46:	mov    ecx,DWORD PTR [ebp-0x4]
  426c49:	pop    edi
  426c4a:	pop    ebx
  426c4b:	cmp    ecx,0xf89c85a0
  426c51:	je     0x426c5c
  426c53:	xor    ecx,esi
  426c55:	lea    eax,[eax+ecx*2+0x64e5e8]
  426c5c:	pop    esi
  426c5d:	leave  
  426c5e:	ret    
  426c5f:	push   ebp
  426c60:	mov    ebp,esp
  426c62:	push   ecx
  426c63:	push   esi
  426c64:	push   edi
  426c65:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426c6c:	mov    esi,0xf89c85a1
  426c71:	call   0x426bd1
  426c76:	mov    edi,eax
  426c78:	mov    al,BYTE PTR [edi]
  426c7a:	sub    al,0x2
  426c7c:	xor    al,0x7d
  426c7e:	cmp    al,0x83
  426c80:	je     0x426ce3
  426c82:	mov    eax,edi
  426c84:	mov    edx,0xffcd8d0d
  426c89:	mov    ecx,0x75108ac
  426c8e:	push   ebx
  426c8f:	mov    ax,WORD PTR [eax]
  426c92:	mov    ebx,0x3b5b
  426c97:	sub    ax,bx
  426c9a:	mov    ebx,0x8a99
  426c9f:	xor    ax,bx
  426ca2:	mov    ebx,0x4e4a
  426ca7:	cmp    ax,bx
  426caa:	jne    0x426caf
  426cac:	mov    DWORD PTR [ebp-0x4],esi
  426caf:	lea    esi,[edx+0x1]
  426cb2:	xor    esi,ecx
  426cb4:	mov    edx,esi
  426cb6:	xor    edx,ecx
  426cb8:	lea    eax,[edi+edx*2+0x64e5e6]
  426cbf:	mov    bl,BYTE PTR [eax]
  426cc1:	sub    bl,0x2
  426cc4:	xor    bl,0x7d
  426cc7:	cmp    bl,0x83
  426cca:	jne    0x426c8f
  426ccc:	mov    eax,DWORD PTR [ebp-0x4]
  426ccf:	pop    ebx
  426cd0:	cmp    eax,0xf89c85a0
  426cd5:	je     0x426ce3
  426cd7:	xor    eax,ecx
  426cd9:	xor    ecx,ecx
  426cdb:	mov    WORD PTR [edi+eax*2+0x64e5e6],cx
  426ce3:	mov    eax,edi
  426ce5:	pop    edi
  426ce6:	pop    esi
  426ce7:	leave  
  426ce8:	ret    
  426ce9:	push   ebp
  426cea:	mov    ebp,esp
  426cec:	push   ecx
  426ced:	push   esi
  426cee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426cf5:	mov    esi,0xf89c85a1
  426cfa:	call   0x426bd1
  426cff:	mov    cx,WORD PTR [eax]
  426d02:	mov    edx,0x3b5b
  426d07:	sub    cx,dx
  426d0a:	mov    edx,0x8a99
  426d0f:	xor    cx,dx
  426d12:	mov    edx,0x4e3c
  426d17:	cmp    cx,dx
  426d1a:	je     0x426d73
  426d1c:	push   ebx
  426d1d:	push   edi
  426d1e:	movzx  ecx,cx
  426d21:	mov    edx,0xffcd8d0d
  426d26:	mov    edi,0x75108ac
  426d2b:	mov    ebx,0x4e4a
  426d30:	cmp    cx,bx
  426d33:	jne    0x426d38
  426d35:	mov    DWORD PTR [ebp-0x4],esi
  426d38:	lea    esi,[edx+0x1]
  426d3b:	xor    esi,edi
  426d3d:	mov    edx,esi
  426d3f:	xor    edx,edi
  426d41:	mov    cx,WORD PTR [eax+edx*2+0x64e5e6]
  426d49:	mov    ebx,0x3b5b
  426d4e:	sub    cx,bx
  426d51:	mov    ebx,0x8a99
  426d56:	xor    cx,bx
  426d59:	mov    ebx,0x4e3c
  426d5e:	cmp    cx,bx
  426d61:	jne    0x426d2b
  426d63:	cmp    DWORD PTR [ebp-0x4],0xf89c85a0
  426d6a:	pop    edi
  426d6b:	pop    ebx
  426d6c:	je     0x426d73
  426d6e:	xor    eax,eax
  426d70:	inc    eax
  426d71:	jmp    0x426d75
  426d73:	xor    eax,eax
  426d75:	pop    esi
  426d76:	leave  
  426d77:	ret    
  426d78:	push   ebp
  426d79:	mov    ebp,esp
  426d7b:	push   ecx
  426d7c:	mov    eax,DWORD PTR [ebp+0x8]
  426d7f:	movzx  ecx,WORD PTR [eax]
  426d82:	push   esi
  426d83:	lea    eax,[ecx-0x3b5b]
  426d89:	mov    esi,0x8a99
  426d8e:	push   edi
  426d8f:	xor    eax,esi
  426d91:	mov    edi,0x4e3c
  426d96:	mov    DWORD PTR [ebp-0x4],edx
  426d99:	cmp    ax,di
  426d9c:	je     0x426dc9
  426d9e:	mov    eax,DWORD PTR [ebp+0x8]
  426da1:	sub    eax,edx
  426da3:	mov    DWORD PTR [ebp+0x8],eax
  426da6:	jmp    0x426dab
  426da8:	mov    eax,DWORD PTR [ebp+0x8]
  426dab:	mov    WORD PTR [edx],cx
  426dae:	add    edx,0x2
  426db1:	movzx  edi,WORD PTR [eax+edx*1]
  426db5:	mov    ecx,edi
  426db7:	add    edi,0xffffc4a5
  426dbd:	xor    edi,esi
  426dbf:	mov    eax,0x4e3c
  426dc4:	cmp    di,ax
  426dc7:	jne    0x426da8
  426dc9:	xor    eax,eax
  426dcb:	pop    edi
  426dcc:	mov    WORD PTR [edx],ax
  426dcf:	mov    eax,DWORD PTR [ebp-0x4]
  426dd2:	pop    esi
  426dd3:	leave  
  426dd4:	ret    0x4
  426dd7:	push   ebp
  426dd8:	mov    ebp,esp
  426dda:	sub    esp,0x18
  426ddd:	mov    DWORD PTR [ebp-0x8],0xf89c85a1
  426de4:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426deb:	mov    ecx,DWORD PTR [ebp-0x8]
  426dee:	push   esi
  426def:	mov    eax,0x75108ac
  426df4:	xor    ecx,eax
  426df6:	mov    esi,0x3272f3
  426dfb:	add    ecx,esi
  426dfd:	mov    DWORD PTR [ebp-0x4],ecx
  426e00:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426e07:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  426e0e:	push   edi
  426e0f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426e16:	jmp    0x426eb7
  426e1b:	mov    ecx,DWORD PTR [ebp-0x4]
  426e1e:	mov    edx,DWORD PTR [ebp+0x10]
  426e21:	sub    edx,ecx
  426e23:	mov    ecx,DWORD PTR [ebp-0xc]
  426e26:	xor    ecx,eax
  426e28:	add    ecx,esi
  426e2a:	cmp    edx,ecx
  426e2c:	jbe    0x426e49
  426e2e:	mov    edx,DWORD PTR [ebp-0x4]
  426e31:	add    edx,DWORD PTR [ebp+0x8]
  426e34:	mov    ecx,DWORD PTR [ebp-0x4]
  426e37:	add    ecx,DWORD PTR [ebp+0xc]
  426e3a:	mov    edi,DWORD PTR [ecx]
  426e3c:	mov    DWORD PTR [edx],edi
  426e3e:	mov    ecx,DWORD PTR [ecx+0x4]
  426e41:	mov    DWORD PTR [edx+0x4],ecx
  426e44:	mov    ecx,DWORD PTR [ebp-0xc]
  426e47:	jmp    0x426e96
  426e49:	mov    ecx,DWORD PTR [ebp-0x4]
  426e4c:	mov    edx,DWORD PTR [ebp+0x10]
  426e4f:	sub    edx,ecx
  426e51:	mov    ecx,DWORD PTR [ebp-0x10]
  426e54:	xor    ecx,eax
  426e56:	add    ecx,esi
  426e58:	cmp    edx,ecx
  426e5a:	mov    ecx,DWORD PTR [ebp-0x4]
  426e5d:	jbe    0x426e71
  426e5f:	add    ecx,DWORD PTR [ebp+0x8]
  426e62:	mov    edx,DWORD PTR [ebp-0x4]
  426e65:	add    edx,DWORD PTR [ebp+0xc]
  426e68:	mov    edx,DWORD PTR [edx]
  426e6a:	mov    DWORD PTR [ecx],edx
  426e6c:	mov    ecx,DWORD PTR [ebp-0x10]
  426e6f:	jmp    0x426e96
  426e71:	mov    edx,DWORD PTR [ebp+0x10]
  426e74:	sub    edx,ecx
  426e76:	mov    ecx,DWORD PTR [ebp-0x14]
  426e79:	xor    ecx,eax
  426e7b:	add    ecx,esi
  426e7d:	cmp    edx,ecx
  426e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  426e82:	jbe    0x426ea7
  426e84:	add    ecx,DWORD PTR [ebp+0x8]
  426e87:	mov    edx,DWORD PTR [ebp-0x4]
  426e8a:	add    edx,DWORD PTR [ebp+0xc]
  426e8d:	mov    dx,WORD PTR [edx]
  426e90:	mov    WORD PTR [ecx],dx
  426e93:	mov    ecx,DWORD PTR [ebp-0x14]
  426e96:	mov    edx,DWORD PTR [ebp-0x4]
  426e99:	xor    ecx,eax
  426e9b:	lea    ecx,[ecx+edx*1+0x3272f3]
  426ea2:	mov    DWORD PTR [ebp-0x4],ecx
  426ea5:	jmp    0x426eb7
  426ea7:	add    ecx,DWORD PTR [ebp+0x8]
  426eaa:	mov    edx,DWORD PTR [ebp-0x4]
  426ead:	add    edx,DWORD PTR [ebp+0xc]
  426eb0:	mov    dl,BYTE PTR [edx]
  426eb2:	mov    BYTE PTR [ecx],dl
  426eb4:	inc    DWORD PTR [ebp-0x4]
  426eb7:	mov    ecx,DWORD PTR [ebp-0x18]
  426eba:	mov    edx,DWORD PTR [ebp+0x10]
  426ebd:	xor    ecx,eax
  426ebf:	add    ecx,esi
  426ec1:	imul   ecx,edx
  426ec4:	mov    edx,DWORD PTR [ebp-0x8]
  426ec7:	mov    edi,DWORD PTR [ebp-0x4]
  426eca:	xor    edx,eax
  426ecc:	lea    edx,[edx+edi*1+0x3272f3]
  426ed3:	cmp    edx,ecx
  426ed5:	jb     0x426e1b
  426edb:	pop    edi
  426edc:	pop    esi
  426edd:	leave  
  426ede:	ret    0xc
  426ee1:	push   ebp
  426ee2:	mov    ebp,esp
  426ee4:	sub    esp,0xc
  426ee7:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426eee:	push   esi
  426eef:	mov    esi,eax
  426ef1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  426ef8:	mov    edx,DWORD PTR [ebp-0x4]
  426efb:	mov    eax,0x75108ac
  426f00:	xor    edx,eax
  426f02:	mov    ecx,0x3272f3
  426f07:	add    edx,ecx
  426f09:	cmp    esi,edx
  426f0b:	je     0x426f4d
  426f0d:	push   ebx
  426f0e:	push   edi
  426f0f:	mov    edx,DWORD PTR [ebp-0x8]
  426f12:	mov    ebx,DWORD PTR [ebp+0x8]
  426f15:	xor    edx,eax
  426f17:	mov    edi,0xffcd8d0d
  426f1c:	sub    edi,edx
  426f1e:	add    esi,edi
  426f20:	lea    edx,[esi-0x3272f3]
  426f26:	xor    edx,eax
  426f28:	mov    DWORD PTR [ebp-0xc],edx
  426f2b:	mov    edx,DWORD PTR [ebp-0x4]
  426f2e:	mov    edi,DWORD PTR [ebp-0xc]
  426f31:	xor    dl,0xac
  426f34:	sub    dl,0xd
  426f37:	xor    edi,eax
  426f39:	mov    BYTE PTR [edi+ebx*1+0x3272f3],dl
  426f40:	mov    edx,DWORD PTR [ebp-0x4]
  426f43:	xor    edx,eax
  426f45:	add    edx,ecx
  426f47:	cmp    esi,edx
  426f49:	jne    0x426f0f
  426f4b:	pop    edi
  426f4c:	pop    ebx
  426f4d:	pop    esi
  426f4e:	leave  
  426f4f:	ret    0x4
  426f52:	push   ebp
  426f53:	mov    ebp,esp
  426f55:	sub    esp,0x21c
  426f5b:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426f62:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  426f69:	mov    eax,DWORD PTR [ebp+0x10]
  426f6c:	mov    eax,DWORD PTR [ebp-0x4]
  426f6f:	mov    ecx,DWORD PTR [ebp+0x8]
  426f72:	push   esi
  426f73:	push   edi
  426f74:	mov    edi,0x75108ac
  426f79:	xor    eax,edi
  426f7b:	mov    esi,0x3272f3
  426f80:	add    eax,esi
  426f82:	cmp    eax,ecx
  426f84:	mov    eax,DWORD PTR [ebp-0x4]
  426f87:	jne    0x426f92
  426f89:	xor    eax,edi
  426f8b:	add    eax,esi
  426f8d:	jmp    0x42703e
  426f92:	mov    ecx,DWORD PTR [ebp+0xc]
  426f95:	xor    eax,edi
  426f97:	add    eax,esi
  426f99:	cmp    eax,ecx
  426f9b:	jne    0x426fa2
  426f9d:	mov    eax,DWORD PTR [ebp-0x4]
  426fa0:	jmp    0x426f89
  426fa2:	lea    eax,[ebp-0x21c]
  426fa8:	mov    DWORD PTR [ebp-0x8],eax
  426fab:	mov    eax,DWORD PTR [ebp+0xc]
  426fae:	mov    DWORD PTR [ebp-0x10],eax
  426fb1:	mov    eax,DWORD PTR [ebp-0x4]
  426fb4:	xor    eax,edi
  426fb6:	add    eax,esi
  426fb8:	mov    DWORD PTR [ebp+0x10],eax
  426fbb:	mov    eax,DWORD PTR [ebp+0xc]
  426fbe:	push   ebx
  426fbf:	call   0x426ce9
  426fc4:	mov    ebx,eax
  426fc6:	mov    eax,DWORD PTR [ebp+0x8]
  426fc9:	mov    eax,DWORD PTR [eax+0x14]
  426fcc:	jmp    0x427026
  426fce:	mov    eax,DWORD PTR [ebp+0xc]
  426fd1:	sub    eax,0x8
  426fd4:	mov    DWORD PTR [ebp-0xc],eax
  426fd7:	mov    eax,DWORD PTR [ebp-0xc]
  426fda:	mov    eax,DWORD PTR [eax+0x28]
  426fdd:	call   0x426bd1
  426fe2:	mov    DWORD PTR [ebp+0x10],eax
  426fe5:	push   DWORD PTR [ebp+0x10]
  426fe8:	mov    edx,DWORD PTR [ebp-0x8]
  426feb:	call   0x426d78
  426ff0:	mov    eax,DWORD PTR [ebp-0x4]
  426ff3:	xor    eax,edi
  426ff5:	add    eax,esi
  426ff7:	cmp    eax,ebx
  426ff9:	jne    0x427003
  426ffb:	mov    eax,DWORD PTR [ebp-0x8]
  426ffe:	call   0x426c5f
  427003:	mov    eax,DWORD PTR [ebp-0x14]
  427006:	xor    eax,edi
  427008:	add    eax,esi
  42700a:	push   eax
  42700b:	push   DWORD PTR [ebp-0x10]
  42700e:	mov    eax,DWORD PTR [ebp-0x8]
  427011:	call   0x42698b
  427016:	mov    ecx,DWORD PTR [ebp-0x4]
  427019:	xor    ecx,edi
  42701b:	add    ecx,esi
  42701d:	cmp    eax,ecx
  42701f:	je     0x427044
  427021:	mov    eax,DWORD PTR [ebp+0xc]
  427024:	mov    eax,DWORD PTR [eax]
  427026:	mov    DWORD PTR [ebp+0xc],eax
  427029:	mov    eax,DWORD PTR [ebp+0x8]
  42702c:	mov    ecx,DWORD PTR [ebp+0xc]
  42702f:	add    eax,0x14
  427032:	cmp    ecx,eax
  427034:	jne    0x426fce
  427036:	mov    eax,DWORD PTR [ebp-0x4]
  427039:	xor    eax,edi
  42703b:	add    eax,esi
  42703d:	pop    ebx
  42703e:	pop    edi
  42703f:	pop    esi
  427040:	leave  
  427041:	ret    0xc
  427044:	mov    eax,DWORD PTR [ebp-0xc]
  427047:	mov    eax,DWORD PTR [eax+0x18]
  42704a:	jmp    0x42703d
  42704c:	push   ebp
  42704d:	mov    ebp,esp
  42704f:	mov    eax,DWORD PTR [ebp+0xc]
  427052:	sub    esp,0x10
  427055:	cmp    DWORD PTR [ebp+0x8],0x0
  427059:	push   ebx
  42705a:	push   esi
  42705b:	push   edi
  42705c:	je     0x427111
  427062:	test   eax,eax
  427064:	je     0x427111
  42706a:	movzx  eax,WORD PTR [eax+0x20]
  42706e:	mov    ecx,eax
  427070:	mov    DWORD PTR [ebp-0x10],eax
  427073:	xor    edx,edx
  427075:	and    DWORD PTR [ebp-0x8],edx
  427078:	mov    eax,0x8a99
  42707d:	xor    ecx,eax
  42707f:	add    ecx,0x3b5b
  427085:	mov    DWORD PTR [ebp-0xc],ecx
  427088:	and    DWORD PTR [ebp-0x4],0x0
  42708c:	xor    ecx,ecx
  42708e:	push   0x7d
  427090:	pop    edi
  427091:	cmp    cx,WORD PTR [ebp-0xc]
  427095:	jae    0x4270fb
  427097:	lea    esi,[edx-0x3b5b]
  42709d:	xor    esi,eax
  42709f:	movzx  ecx,WORD PTR [ebp-0x4]
  4270a3:	mov    ebx,DWORD PTR [ebp+0xc]
  4270a6:	lea    ecx,[ebx+ecx*4]
  4270a9:	cmp    WORD PTR [ecx+0x2],si
  4270ad:	jne    0x4270e6
  4270af:	movzx  ecx,WORD PTR [ecx]
  4270b2:	mov    edi,0x4e3c
  4270b7:	cmp    cx,di
  4270ba:	jne    0x4270c8
  4270bc:	mov    ebx,DWORD PTR [ebp+0x8]
  4270bf:	movzx  edi,dx
  4270c2:	cmp    BYTE PTR [edi+ebx*1],0x0
  4270c6:	je     0x4270f5
  4270c8:	mov    ebx,DWORD PTR [ebp+0x8]
  4270cb:	movzx  edi,dx
  4270ce:	movsx  di,BYTE PTR [edi+ebx*1]
  4270d3:	mov    ebx,0x3b5b
  4270d8:	sub    di,bx
  4270db:	xor    di,ax
  4270de:	cmp    cx,di
  4270e1:	je     0x4270f5
  4270e3:	push   0xffffff83
  4270e5:	pop    edi
  4270e6:	inc    DWORD PTR [ebp-0x4]
  4270e9:	mov    cx,WORD PTR [ebp-0xc]
  4270ed:	cmp    WORD PTR [ebp-0x4],cx
  4270f1:	jb     0x42709f
  4270f3:	jmp    0x4270fb
  4270f5:	inc    DWORD PTR [ebp-0x8]
  4270f8:	push   0xffffff82
  4270fa:	pop    edi
  4270fb:	mov    esi,DWORD PTR [ebp+0x8]
  4270fe:	movzx  ecx,dx
  427101:	cmp    BYTE PTR [ecx+esi*1],0x0
  427105:	je     0x42711a
  427107:	inc    edx
  427108:	cmp    edi,0xffffff83
  42710b:	jne    0x427088
  427111:	xor    eax,eax
  427113:	pop    edi
  427114:	pop    esi
  427115:	pop    ebx
  427116:	leave  
  427117:	ret    0x8
  42711a:	mov    ecx,DWORD PTR [ebp-0x8]
  42711d:	add    ecx,0xffffc4a5
  427123:	xor    cx,ax
  427126:	xor    eax,eax
  427128:	cmp    cx,WORD PTR [ebp-0x10]
  42712c:	sete   al
  42712f:	jmp    0x427113
  427131:	push   ebp
  427132:	mov    ebp,esp
  427134:	sub    esp,0x50
  427137:	push   edi
  427138:	mov    edi,eax
  42713a:	mov    eax,DWORD PTR [edi+0x1a8]
  427140:	cmp    DWORD PTR [eax],0x0
  427143:	jne    0x42714c
  427145:	xor    eax,eax
  427147:	jmp    0x42727d
  42714c:	push   DWORD PTR [ebp+0x8]
  42714f:	push   0x2c
  427151:	pop    eax
  427152:	call   0x426ee1
  427157:	mov    edx,DWORD PTR [edi+0x1ac]
  42715d:	lea    eax,[edi+0x22]
  427160:	mov    DWORD PTR [ebp-0x4c],eax
  427163:	lea    eax,[edi+0x44]
  427166:	mov    DWORD PTR [ebp-0x48],eax
  427169:	lea    eax,[edi+0x66]
  42716c:	mov    DWORD PTR [ebp-0x44],eax
  42716f:	lea    eax,[edi+0x88]
  427175:	mov    DWORD PTR [ebp-0x40],eax
  427178:	lea    eax,[edi+0xaa]
  42717e:	mov    DWORD PTR [ebp-0x3c],eax
  427181:	lea    eax,[edi+0xcc]
  427187:	mov    DWORD PTR [ebp-0x38],eax
  42718a:	lea    eax,[edi+0xee]
  427190:	mov    DWORD PTR [ebp-0x34],eax
  427193:	lea    eax,[edi+0x110]
  427199:	mov    DWORD PTR [ebp-0x30],eax
  42719c:	lea    eax,[edi+0x132]
  4271a2:	mov    DWORD PTR [ebp-0x2c],eax
  4271a5:	lea    eax,[edi+0x154]
  4271ab:	push   edi
  4271ac:	mov    DWORD PTR [ebp-0x50],edi
  4271af:	mov    DWORD PTR [ebp-0x28],eax
  4271b2:	call   0x4272b1
  4271b7:	push   eax
  4271b8:	mov    eax,DWORD PTR [edi+0x1a8]
  4271be:	push   DWORD PTR [eax]
  4271c0:	call   0x426f52
  4271c5:	mov    DWORD PTR [ebp-0x10],eax
  4271c8:	test   eax,eax
  4271ca:	je     0x42727d
  4271d0:	mov    ecx,DWORD PTR [eax+0x3c]
  4271d3:	push   ebx
  4271d4:	push   esi
  4271d5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4271d9:	add    esi,eax
  4271db:	mov    edi,DWORD PTR [esi+0x24]
  4271de:	mov    ecx,DWORD PTR [esi+0x1c]
  4271e1:	mov    edx,DWORD PTR [esi+0x20]
  4271e4:	mov    ebx,DWORD PTR [esi+0x18]
  4271e7:	add    edi,eax
  4271e9:	mov    DWORD PTR [ebp-0x20],edi
  4271ec:	mov    edi,DWORD PTR [esi+0x14]
  4271ef:	add    ecx,eax
  4271f1:	add    edx,eax
  4271f3:	mov    DWORD PTR [ebp-0xc],ecx
  4271f6:	mov    DWORD PTR [ebp-0x1c],edx
  4271f9:	mov    DWORD PTR [ebp-0x8],edi
  4271fc:	cmp    edi,ebx
  4271fe:	ja     0x427203
  427200:	mov    DWORD PTR [ebp-0x8],ebx
  427203:	xor    ebx,ebx
  427205:	mov    DWORD PTR [ebp-0x18],ebx
  427208:	cmp    DWORD PTR [ebp-0x8],ebx
  42720b:	jbe    0x42727b
  42720d:	jmp    0x427212
  42720f:	mov    edx,DWORD PTR [ebp-0x1c]
  427212:	mov    edi,DWORD PTR [ebp-0x20]
  427215:	movzx  edi,WORD PTR [edi+ebx*2]
  427219:	cmp    ebx,DWORD PTR [esi+0x18]
  42721c:	jae    0x42727b
  42721e:	cmp    edi,DWORD PTR [esi+0x14]
  427221:	jae    0x42727b
  427223:	mov    ebx,DWORD PTR [edx+ebx*4]
  427226:	mov    edx,DWORD PTR [ebp+0x8]
  427229:	mov    edi,DWORD PTR [ecx+edi*4]
  42722c:	mov    DWORD PTR [ebp-0x4],edx
  42722f:	lea    edx,[ebp-0x50]
  427232:	add    ebx,eax
  427234:	add    edi,eax
  427236:	sub    edx,DWORD PTR [ebp+0x8]
  427239:	mov    DWORD PTR [ebp-0x14],0xb
  427240:	mov    DWORD PTR [ebp-0x24],edx
  427243:	mov    edx,DWORD PTR [ebp-0x4]
  427246:	cmp    DWORD PTR [edx],0x0
  427249:	jne    0x427266
  42724b:	mov    eax,DWORD PTR [ebp-0x24]
  42724e:	push   DWORD PTR [eax+edx*1]
  427251:	push   ebx
  427252:	call   0x42704c
  427257:	mov    ecx,DWORD PTR [ebp-0xc]
  42725a:	test   eax,eax
  42725c:	je     0x427263
  42725e:	mov    eax,DWORD PTR [ebp-0x4]
  427261:	mov    DWORD PTR [eax],edi
  427263:	mov    eax,DWORD PTR [ebp-0x10]
  427266:	add    DWORD PTR [ebp-0x4],0x4
  42726a:	dec    DWORD PTR [ebp-0x14]
  42726d:	jne    0x427243
  42726f:	mov    ebx,DWORD PTR [ebp-0x18]
  427272:	inc    ebx
  427273:	mov    DWORD PTR [ebp-0x18],ebx
  427276:	cmp    ebx,DWORD PTR [ebp-0x8]
  427279:	jb     0x42720f
  42727b:	pop    esi
  42727c:	pop    ebx
  42727d:	pop    edi
  42727e:	leave  
  42727f:	ret    0x4
  427282:	push   ebp
  427283:	mov    ebp,esp
  427285:	mov    eax,DWORD PTR [ebp+0x8]
  427288:	push   esi
  427289:	push   DWORD PTR [eax+0x1e0]
  42728f:	lea    esi,[eax+0x198]
  427295:	mov    eax,DWORD PTR [ebp+0x8]
  427298:	call   0x427131
  42729d:	mov    ecx,DWORD PTR [esi]
  42729f:	mov    DWORD PTR [ecx],eax
  4272a1:	mov    eax,DWORD PTR [esi]
  4272a3:	xor    ecx,ecx
  4272a5:	cmp    DWORD PTR [eax],ecx
  4272a7:	pop    esi
  4272a8:	setne  cl
  4272ab:	mov    eax,ecx
  4272ad:	pop    ebp
  4272ae:	ret    0x4
  4272b1:	mov    ecx,DWORD PTR [edi+0x188]
  4272b7:	push   ebx
  4272b8:	jmp    0x4272cd
  4272ba:	xor    eax,0x8a99
  4272bf:	add    eax,0x3b5b
  4272c4:	mov    WORD PTR [ecx],ax
  4272c7:	add    ecx,0x2
  4272ca:	add    edx,0x2
  4272cd:	movzx  eax,WORD PTR [edx]
  4272d0:	mov    ebx,0x4e3c
  4272d5:	cmp    ax,bx
  4272d8:	jne    0x4272ba
  4272da:	xor    eax,eax
  4272dc:	mov    WORD PTR [ecx],ax
  4272df:	mov    eax,DWORD PTR [edi+0x188]
  4272e5:	pop    ebx
  4272e6:	ret    
  4272e7:	push   edi
  4272e8:	mov    edi,eax
  4272ea:	mov    eax,DWORD PTR [esi+0x188]
  4272f0:	shl    edi,0x6
  4272f3:	add    eax,edi
  4272f5:	jmp    0x427301
  4272f7:	xor    cl,0x7d
  4272fa:	add    cl,0x2
  4272fd:	mov    BYTE PTR [eax],cl
  4272ff:	inc    eax
  427300:	inc    edx
  427301:	mov    cl,BYTE PTR [edx]
  427303:	cmp    cl,0x83
  427306:	jne    0x4272f7
  427308:	mov    BYTE PTR [eax],0x0
  42730b:	mov    eax,DWORD PTR [esi+0x188]
  427311:	add    eax,edi
  427313:	pop    edi
  427314:	ret    
  427315:	push   ebp
  427316:	mov    ebp,esp
  427318:	sub    esp,0x14
  42731b:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  427322:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  427329:	mov    eax,DWORD PTR [ebx]
  42732b:	mov    DWORD PTR [ebp-0x8],eax
  42732e:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  427335:	push   esi
  427336:	push   edi
  427337:	mov    DWORD PTR [ebp-0x14],0xead71881
  42733e:	mov    edi,DWORD PTR [ebp-0x4]
  427341:	mov    ecx,DWORD PTR [ebp-0x10]
  427344:	mov    eax,0x75108ac
  427349:	xor    edi,eax
  42734b:	mov    edx,0x3272f3
  427350:	xor    ecx,eax
  427352:	add    edi,edx
  427354:	add    ecx,edx
  427356:	imul   edi,ecx
  427359:	jmp    0x4273a1
  42735b:	mov    ecx,DWORD PTR [ebp-0x8]
  42735e:	mov    esi,DWORD PTR [ebp-0x4]
  427361:	xor    ecx,eax
  427363:	xor    esi,eax
  427365:	add    ecx,edx
  427367:	add    esi,edx
  427369:	test   esi,ecx
  42736b:	mov    esi,DWORD PTR [ebp-0x8]
  42736e:	mov    ecx,DWORD PTR [ebp-0x4]
  427371:	je     0x427388
  427373:	xor    ecx,eax
  427375:	xor    esi,eax
  427377:	add    ecx,edx
  427379:	add    esi,edx
  42737b:	shr    esi,cl
  42737d:	mov    ecx,DWORD PTR [ebp-0x14]
  427380:	xor    ecx,eax
  427382:	add    ecx,edx
  427384:	xor    esi,ecx
  427386:	jmp    0x427392
  427388:	xor    esi,eax
  42738a:	xor    ecx,eax
  42738c:	add    esi,edx
  42738e:	add    ecx,edx
  427390:	shr    esi,cl
  427392:	mov    DWORD PTR [ebp-0x8],esi
  427395:	mov    ecx,DWORD PTR [ebp-0x4]
  427398:	xor    ecx,eax
  42739a:	lea    edi,[edi+ecx*1+0x3272f3]
  4273a1:	mov    ecx,DWORD PTR [ebp-0xc]
  4273a4:	mov    esi,DWORD PTR [ebp-0x4]
  4273a7:	xor    esi,eax
  4273a9:	xor    ecx,eax
  4273ab:	sub    ecx,esi
  4273ad:	cmp    edi,ecx
  4273af:	jbe    0x42735b
  4273b1:	mov    eax,DWORD PTR [ebp-0x8]
  4273b4:	pop    edi
  4273b5:	mov    DWORD PTR [ebx],eax
  4273b7:	mov    eax,DWORD PTR [ebp-0x8]
  4273ba:	pop    esi
  4273bb:	leave  
  4273bc:	ret    
  4273bd:	push   ebp
  4273be:	mov    ebp,esp
  4273c0:	sub    esp,0x38
  4273c3:	push   ebx
  4273c4:	mov    ebx,0xf89c85a1
  4273c9:	mov    DWORD PTR [ebp-0x4],ebx
  4273cc:	lea    ecx,[ebx+0x1]
  4273cf:	mov    DWORD PTR [ebp-0x24],ecx
  4273d2:	mov    eax,DWORD PTR [ebp-0x4]
  4273d5:	mov    edx,DWORD PTR [ebp+0x8]
  4273d8:	push   esi
  4273d9:	mov    esi,0x75108ac
  4273de:	xor    eax,esi
  4273e0:	push   edi
  4273e1:	mov    edi,0x3272f3
  4273e6:	add    eax,edi
  4273e8:	cmp    edx,eax
  4273ea:	mov    eax,DWORD PTR [ebp-0x4]
  4273ed:	je     0x427552
  4273f3:	mov    edx,DWORD PTR [ebp+0xc]
  4273f6:	xor    eax,esi
  4273f8:	add    eax,edi
  4273fa:	cmp    edx,eax
  4273fc:	je     0x42754f
  427402:	mov    eax,DWORD PTR [ebp+0x10]
  427405:	mov    edx,DWORD PTR [ebp+0xc]
  427408:	mov    DWORD PTR [ebp-0x14],eax
  42740b:	mov    eax,DWORD PTR [ebp+0x8]
  42740e:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  427415:	mov    DWORD PTR [ebp-0xc],eax
  427418:	lea    eax,[ebx+0x2]
  42741b:	mov    DWORD PTR [ebp-0x1c],eax
  42741e:	mov    DWORD PTR [ebp-0x10],ebx
  427421:	mov    DWORD PTR [ebp+0xc],ecx
  427424:	mov    DWORD PTR [ebp+0x10],eax
  427427:	mov    eax,DWORD PTR [ebp+0xc]
  42742a:	xor    eax,esi
  42742c:	mov    DWORD PTR [ebp-0x20],edx
  42742f:	sub    edx,eax
  427431:	sub    edx,edi
  427433:	mov    DWORD PTR [ebp+0x8],edx
  427436:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  42743d:	jmp    0x42753f
  427442:	mov    eax,DWORD PTR [ebp+0xc]
  427445:	mov    ecx,DWORD PTR [ebp+0xc]
  427448:	xor    eax,esi
  42744a:	xor    ecx,esi
  42744c:	lea    ecx,[eax+ecx*1+0x64e5e6]
  427453:	mov    eax,DWORD PTR [ebp+0x8]
  427456:	xor    edx,edx
  427458:	div    ecx
  42745a:	mov    eax,DWORD PTR [ebp+0x10]
  42745d:	mov    ecx,DWORD PTR [ebp+0xc]
  427460:	xor    eax,esi
  427462:	xor    ecx,esi
  427464:	sub    eax,ecx
  427466:	cmp    edx,eax
  427468:	jne    0x4274fe
  42746e:	mov    eax,DWORD PTR [ebp+0x8]
  427471:	mov    ecx,DWORD PTR [ebp-0xc]
  427474:	mov    dl,BYTE PTR [eax+ecx*1]
  427477:	mov    eax,DWORD PTR [ebp-0x10]
  42747a:	mov    ecx,DWORD PTR [ebp-0x8]
  42747d:	xor    eax,esi
  42747f:	xor    ecx,esi
  427481:	add    eax,edi
  427483:	add    ecx,edi
  427485:	cmp    eax,ecx
  427487:	jae    0x4274cf
  427489:	lea    ecx,[eax-0x3272f3]
  42748f:	mov    DWORD PTR [ebp-0x4],ecx
  427492:	mov    ebx,DWORD PTR [ebp-0x4]
  427495:	xor    ebx,esi
  427497:	add    ebx,0x7f55d8e3
  42749d:	lea    ecx,[ebp+eax*4-0x38]
  4274a1:	mov    DWORD PTR [ecx],ebx
  4274a3:	mov    ebx,DWORD PTR [ecx]
  4274a5:	cmp    ebx,0x244ecb9c
  4274ab:	jbe    0x4274b5
  4274ad:	add    DWORD PTR [ecx],0x405fcdd
  4274b3:	jmp    0x4274bb
  4274b5:	add    DWORD PTR [ecx],0xfdaf4323
  4274bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4274be:	xor    ecx,esi
  4274c0:	inc    eax
  4274c1:	inc    DWORD PTR [ebp-0x4]
  4274c4:	add    ecx,edi
  4274c6:	cmp    eax,ecx
  4274c8:	jb     0x427492
  4274ca:	mov    ebx,0xf89c85a1
  4274cf:	cmp    DWORD PTR [ebp-0x14],0x0
  4274d3:	jne    0x4274dd
  4274d5:	xor    dl,0x7d
  4274d8:	add    dl,0x2
  4274db:	jmp    0x4274f3
  4274dd:	mov    eax,DWORD PTR [ebp-0x18]
  4274e0:	xor    al,0xac
  4274e2:	mov    cl,0xd
  4274e4:	sub    cl,al
  4274e6:	add    dl,cl
  4274e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4274eb:	xor    cl,0xac
  4274ee:	sub    cl,0xd
  4274f1:	ror    dl,cl
  4274f3:	xor    eax,eax
  4274f5:	mov    eax,DWORD PTR [ebp+0x8]
  4274f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4274fb:	mov    BYTE PTR [eax+ecx*1],dl
  4274fe:	mov    eax,DWORD PTR [ebp+0x8]
  427501:	mov    ecx,DWORD PTR [ebp-0x10]
  427504:	sub    eax,edi
  427506:	xor    eax,esi
  427508:	cmp    eax,ecx
  42750a:	jne    0x42752d
  42750c:	mov    eax,DWORD PTR [ebp+0x10]
  42750f:	mov    ecx,DWORD PTR [ebp+0xc]
  427512:	xor    eax,esi
  427514:	xor    ecx,esi
  427516:	sub    eax,ecx
  427518:	mov    ecx,DWORD PTR [ebp-0x20]
  42751b:	sub    eax,edi
  42751d:	xor    eax,esi
  42751f:	mov    DWORD PTR [ebp+0x10],eax
  427522:	mov    eax,DWORD PTR [ebp+0xc]
  427525:	xor    eax,esi
  427527:	sub    ecx,eax
  427529:	sub    ecx,edi
  42752b:	jmp    0x42753c
  42752d:	mov    eax,DWORD PTR [ebp+0xc]
  427530:	xor    eax,esi
  427532:	mov    ecx,0xffcd8d0d
  427537:	sub    ecx,eax
  427539:	add    ecx,DWORD PTR [ebp+0x8]
  42753c:	mov    DWORD PTR [ebp+0x8],ecx
  42753f:	mov    eax,DWORD PTR [ebp+0x10]
  427542:	cmp    eax,ebx
  427544:	jne    0x427442
  42754a:	mov    eax,DWORD PTR [ebp-0x24]
  42754d:	jmp    0x427552
  42754f:	mov    eax,DWORD PTR [ebp-0x4]
  427552:	xor    eax,esi
  427554:	add    eax,edi
  427556:	pop    edi
  427557:	pop    esi
  427558:	pop    ebx
  427559:	leave  
  42755a:	ret    0xc
  42755d:	push   ebp
  42755e:	mov    ebp,esp
  427560:	sub    esp,0x420
  427566:	mov    DWORD PTR [ebp-0x14],0xf89c85a1
  42756d:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427574:	mov    DWORD PTR [ebp-0x18],0xf89c86a1
  42757b:	push   ebx
  42757c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  427583:	mov    eax,DWORD PTR [ebp-0x14]
  427586:	push   esi
  427587:	mov    esi,0x75108ac
  42758c:	push   edi
  42758d:	xor    eax,esi
  42758f:	mov    edi,0x3272f3
  427594:	add    eax,edi
  427596:	mov    DWORD PTR [ebp-0x8],eax
  427599:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4275a0:	mov    DWORD PTR [ebp-0x4],0xead71881
  4275a7:	mov    DWORD PTR [ebp-0x10],0x8
  4275ae:	mov    ecx,ecx
  4275b0:	mov    eax,DWORD PTR [ebp-0xc]
  4275b3:	mov    ecx,DWORD PTR [ebp-0x14]
  4275b6:	xor    eax,esi
  4275b8:	xor    ecx,esi
  4275ba:	add    eax,edi
  4275bc:	add    ecx,edi
  4275be:	imul   eax,ecx
  4275c1:	jmp    0x4275f4
  4275c3:	mov    eax,DWORD PTR [ebp-0x4]
  4275c6:	sub    eax,edi
  4275c8:	xor    eax,esi
  4275ca:	mov    DWORD PTR [ebp-0x8],eax
  4275cd:	lea    ebx,[ebp-0x8]
  4275d0:	call   0x427315
  4275d5:	mov    DWORD PTR [ebp-0x8],eax
  4275d8:	mov    eax,DWORD PTR [ebp-0x8]
  4275db:	mov    ecx,DWORD PTR [ebp-0x4]
  4275de:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4275e5:	mov    eax,DWORD PTR [ebp-0xc]
  4275e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4275eb:	xor    eax,esi
  4275ed:	lea    eax,[eax+ecx*1+0x3272f3]
  4275f4:	mov    DWORD PTR [ebp-0x4],eax
  4275f7:	mov    eax,DWORD PTR [ebp-0x18]
  4275fa:	mov    ecx,DWORD PTR [ebp-0xc]
  4275fd:	xor    ecx,esi
  4275ff:	xor    eax,esi
  427601:	sub    eax,ecx
  427603:	mov    ecx,DWORD PTR [ebp-0x4]
  427606:	cmp    ecx,eax
  427608:	jbe    0x4275c3
  42760a:	mov    eax,DWORD PTR [ebp-0x1c]
  42760d:	xor    eax,esi
  42760f:	add    eax,edi
  427611:	mov    DWORD PTR [ebp-0x8],eax
  427614:	mov    DWORD PTR [ebp-0x18],0xf89c86a0
  42761b:	mov    ebx,ebx
  42761d:	jmp    0x427680
  42761f:	mov    ecx,DWORD PTR [ebp-0x20]
  427622:	mov    eax,DWORD PTR [ebp-0x8]
  427625:	xor    ecx,esi
  427627:	add    ecx,edi
  427629:	shr    eax,cl
  42762b:	mov    DWORD PTR [ebp-0x4],eax
  42762e:	mov    eax,DWORD PTR [ebp+0x8]
  427631:	mov    cl,BYTE PTR [eax]
  427633:	mov    BYTE PTR [ebp+0xb],cl
  427636:	mov    cl,BYTE PTR [ebp+0xb]
  427639:	mov    edx,DWORD PTR [ebp-0x8]
  42763c:	movzx  ecx,cl
  42763f:	xor    ecx,edx
  427641:	mov    DWORD PTR [ebp+0x8],ecx
  427644:	mov    ecx,DWORD PTR [ebp-0x18]
  427647:	mov    edx,DWORD PTR [ebp+0x8]
  42764a:	xor    ecx,esi
  42764c:	add    ecx,edi
  42764e:	and    ecx,edx
  427650:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427657:	mov    edx,DWORD PTR [ebp-0x4]
  42765a:	xor    ecx,edx
  42765c:	mov    DWORD PTR [ebp-0x8],ecx
  42765f:	mov    ecx,DWORD PTR [ebp-0xc]
  427662:	xor    ecx,esi
  427664:	lea    eax,[eax+ecx*1+0x3272f3]
  42766b:	mov    DWORD PTR [ebp+0x8],eax
  42766e:	mov    eax,DWORD PTR [ebp-0xc]
  427671:	xor    eax,esi
  427673:	mov    ecx,0xffcd8d0d
  427678:	sub    ecx,eax
  42767a:	add    ecx,DWORD PTR [ebp-0x10]
  42767d:	mov    DWORD PTR [ebp-0x10],ecx
  427680:	mov    eax,DWORD PTR [ebp-0x14]
  427683:	mov    ecx,DWORD PTR [ebp-0x10]
  427686:	xor    eax,esi
  427688:	add    eax,edi
  42768a:	cmp    ecx,eax
  42768c:	jne    0x42761f
  42768e:	mov    eax,DWORD PTR [ebp-0x1c]
  427691:	mov    ecx,DWORD PTR [ebp-0x8]
  427694:	xor    eax,esi
  427696:	add    eax,edi
  427698:	pop    edi
  427699:	pop    esi
  42769a:	xor    eax,ecx
  42769c:	pop    ebx
  42769d:	leave  
  42769e:	ret    0x4
  4276a1:	push   ebp
  4276a2:	mov    ebp,esp
  4276a4:	mov    eax,DWORD PTR [ebp+0x1c]
  4276a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4276aa:	mov    edx,DWORD PTR [ebp+0x10]
  4276ad:	mov    eax,DWORD PTR [eax+0x190]
  4276b3:	mov    eax,DWORD PTR [eax]
  4276b5:	sub    esp,0x64
  4276b8:	push   ebx
  4276b9:	push   esi
  4276ba:	push   edi
  4276bb:	mov    edi,0x75108ac
  4276c0:	xor    ecx,edi
  4276c2:	mov    ebx,0x3272f3
  4276c7:	add    ecx,ebx
  4276c9:	cmp    ecx,edx
  4276cb:	jne    0x4276dc
  4276cd:	or     DWORD PTR ds:0x3750c3f,0x4263eb28
  4276d7:	jmp    0x427bd8
  4276dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4276df:	mov    esi,DWORD PTR [ebp+0x14]
  4276e2:	mov    edx,DWORD PTR [esi]
  4276e4:	xor    ecx,edi
  4276e6:	add    ecx,ebx
  4276e8:	cmp    edx,ecx
  4276ea:	je     0x427b93
  4276f0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276f3:	mov    DWORD PTR [ebp-0x1c],eax
  4276f6:	mov    DWORD PTR [ebp+0x1c],ecx
  4276f9:	mov    ecx,DWORD PTR [ebp+0x18]
  4276fc:	mov    eax,DWORD PTR [esi]
  4276fe:	mov    DWORD PTR [ebp-0x20],eax
  427701:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  427708:	mov    edx,0xf89c85a2
  42770d:	mov    DWORD PTR [ebp-0x8],edx
  427710:	mov    eax,DWORD PTR [ebp+0x1c]
  427713:	mov    DWORD PTR [ebp+0x1c],eax
  427716:	mov    eax,DWORD PTR [ebp+0x1c]
  427719:	mov    eax,DWORD PTR [eax+0x190]
  42771f:	mov    eax,DWORD PTR [eax]
  427721:	mov    DWORD PTR [ebp-0x24],ecx
  427724:	mov    ecx,DWORD PTR [ebp+0x1c]
  427727:	mov    ecx,DWORD PTR [ecx+0x190]
  42772d:	mov    ecx,DWORD PTR [ecx]
  42772f:	add    ecx,DWORD PTR [eax+0x3c]
  427732:	mov    DWORD PTR [ebp+0x10],ecx
  427735:	mov    eax,DWORD PTR [ebp+0x8]
  427738:	xor    eax,edi
  42773a:	add    eax,ebx
  42773c:	mov    DWORD PTR [ebp-0x4],eax
  42773f:	mov    eax,DWORD PTR [ebp+0x8]
  427742:	xor    eax,edi
  427744:	add    eax,ebx
  427746:	mov    DWORD PTR [ebp+0x18],eax
  427749:	mov    eax,DWORD PTR [ebp+0x10]
  42774c:	mov    eax,DWORD PTR [eax+0x50]
  42774f:	sub    eax,0xc
  427752:	mov    DWORD PTR [ebp-0x28],eax
  427755:	mov    eax,DWORD PTR [ebp+0x10]
  427758:	mov    eax,DWORD PTR [eax+0x38]
  42775b:	mov    ecx,DWORD PTR [ebp+0x10]
  42775e:	dec    eax
  42775f:	test   DWORD PTR [ecx+0x54],eax
  427762:	mov    eax,DWORD PTR [ebp+0x10]
  427765:	je     0x42777f
  427767:	mov    eax,DWORD PTR [eax+0x38]
  42776a:	mov    ecx,DWORD PTR [ebp+0x10]
  42776d:	mov    ecx,DWORD PTR [ecx+0x54]
  427770:	dec    eax
  427771:	not    eax
  427773:	and    ecx,eax
  427775:	mov    eax,DWORD PTR [ebp+0x10]
  427778:	mov    eax,DWORD PTR [eax+0x38]
  42777b:	add    eax,ecx
  42777d:	jmp    0x427782
  42777f:	mov    eax,DWORD PTR [eax+0x54]
  427782:	mov    DWORD PTR [ebp+0x1c],eax
  427785:	mov    eax,DWORD PTR [ebp+0x8]
  427788:	xor    eax,edi
  42778a:	add    eax,ebx
  42778c:	mov    DWORD PTR [ebp+0x18],eax
  42778f:	mov    eax,DWORD PTR [ebp+0x8]
  427792:	xor    eax,edi
  427794:	add    eax,ebx
  427796:	mov    DWORD PTR [ebp+0x18],eax
  427799:	mov    eax,DWORD PTR [ebp+0x8]
  42779c:	mov    ecx,DWORD PTR [ebp-0x24]
  42779f:	xor    eax,edi
  4277a1:	add    eax,ebx
  4277a3:	mov    DWORD PTR [ecx],eax
  4277a5:	mov    DWORD PTR [ebp+0x18],edx
  4277a8:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  4277af:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  4277b6:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  4277bd:	mov    eax,DWORD PTR [ebp-0x8]
  4277c0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4277c3:	xor    eax,edi
  4277c5:	add    eax,ebx
  4277c7:	imul   eax,ecx
  4277ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4277cd:	mov    edx,DWORD PTR [ebp-0x28]
  4277d0:	xor    ecx,edi
  4277d2:	lea    ecx,[ecx+edx*1+0x3272f3]
  4277d9:	cmp    eax,ecx
  4277db:	jae    0x427b8c
  4277e1:	mov    eax,DWORD PTR [ebp+0x8]
  4277e4:	xor    eax,edi
  4277e6:	add    eax,ebx
  4277e8:	mov    DWORD PTR [ebp+0x18],eax
  4277eb:	mov    eax,DWORD PTR [ebp+0x1c]
  4277ee:	add    eax,DWORD PTR [ebp-0x1c]
  4277f1:	mov    DWORD PTR [ebp-0x4],eax
  4277f4:	push   DWORD PTR [ebp-0x4]
  4277f7:	mov    esi,DWORD PTR [ebp-0x1c]
  4277fa:	mov    ecx,DWORD PTR [ebp+0x10]
  4277fd:	call   0x42694d
  427802:	mov    DWORD PTR [ebp+0xc],eax
  427805:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  42780c:	mov    eax,DWORD PTR [ebp-0x18]
  42780f:	xor    eax,edi
  427811:	lea    ecx,[ebp-0x40]
  427814:	add    eax,ebx
  427816:	push   ecx
  427817:	call   0x426ee1
  42781c:	mov    eax,DWORD PTR [ebp+0xc]
  42781f:	test   eax,eax
  427821:	je     0x427871
  427823:	mov    eax,DWORD PTR [ebp-0x18]
  427826:	xor    eax,edi
  427828:	add    eax,ebx
  42782a:	push   eax
  42782b:	push   DWORD PTR [ebp+0xc]
  42782e:	lea    eax,[ebp-0x40]
  427831:	push   eax
  427832:	call   0x426dd7
  427837:	mov    eax,DWORD PTR [ebp-0x4]
  42783a:	mov    DWORD PTR [ebp-0x18],eax
  42783d:	mov    eax,DWORD PTR [ebp-0x18]
  427840:	mov    ecx,DWORD PTR [ebp-0x1c]
  427843:	sub    eax,ecx
  427845:	mov    DWORD PTR [ebp-0x18],eax
  427848:	mov    eax,DWORD PTR [ebp+0xc]
  42784b:	mov    ecx,DWORD PTR [ebp+0xc]
  42784e:	mov    eax,DWORD PTR [eax+0x10]
  427851:	add    eax,DWORD PTR [ecx+0xc]
  427854:	mov    ecx,DWORD PTR [ebp-0x18]
  427857:	cmp    ecx,eax
  427859:	jb     0x427871
  42785b:	mov    eax,DWORD PTR [ebp+0xc]
  42785e:	mov    eax,DWORD PTR [eax+0xc]
  427861:	mov    ecx,DWORD PTR [ebp+0xc]
  427864:	add    eax,DWORD PTR [ecx+0x8]
  427867:	mov    ecx,DWORD PTR [ebp-0x18]
  42786a:	sub    eax,ecx
  42786c:	jmp    0x427b5f
  427871:	push   0xc
  427873:	push   DWORD PTR [ebp-0x4]
  427876:	lea    eax,[ebp-0x4c]
  427879:	push   eax
  42787a:	call   0x426dd7
  42787f:	mov    eax,0xf89c85a1
  427884:	mov    DWORD PTR [ebp-0x2c],eax
  427887:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  42788e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427895:	mov    DWORD PTR [ebp-0x38],0xf89c85bc
  42789c:	lea    ecx,[ebp-0x2c]
  42789f:	mov    DWORD PTR [ebp-0xc],ecx
  4278a2:	lea    ecx,[ebp-0x30]
  4278a5:	mov    DWORD PTR [ebp-0x10],ecx
  4278a8:	lea    ecx,[ebp-0x34]
  4278ab:	mov    DWORD PTR [ebp+0xc],ecx
  4278ae:	lea    ecx,[ebp-0x38]
  4278b1:	mov    DWORD PTR [ebp-0x14],ecx
  4278b4:	mov    ecx,DWORD PTR [ebp+0x8]
  4278b7:	xor    ecx,edi
  4278b9:	add    ecx,ebx
  4278bb:	mov    DWORD PTR [ebp-0x18],ecx
  4278be:	jmp    0x427aba
  4278c3:	cmp    eax,0xf89c85a3
  4278c8:	je     0x427acc
  4278ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4278d1:	xor    ecx,edi
  4278d3:	mov    esi,eax
  4278d5:	add    ecx,ebx
  4278d7:	mov    DWORD PTR [ebp+0x18],ecx
  4278da:	mov    eax,DWORD PTR [ebp-0x18]
  4278dd:	xor    esi,edi
  4278df:	lea    eax,[eax+esi*1+0x3272f3]
  4278e6:	mov    DWORD PTR [ebp-0x18],eax
  4278e9:	mov    eax,DWORD PTR [ebp-0x8]
  4278ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4278ef:	xor    eax,edi
  4278f1:	add    eax,ebx
  4278f3:	cmp    ecx,eax
  4278f5:	jne    0x42790a
  4278f7:	mov    eax,DWORD PTR [ebp+0x8]
  4278fa:	xor    eax,edi
  4278fc:	add    eax,ebx
  4278fe:	push   eax
  4278ff:	push   0xc
  427901:	lea    eax,[ebp-0x4c]
  427904:	push   eax
  427905:	call   0x4273bd
  42790a:	mov    eax,DWORD PTR [ebp-0xc]
  42790d:	mov    eax,DWORD PTR [eax]
  42790f:	xor    eax,edi
  427911:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427918:	mov    ecx,DWORD PTR [ebp+0x8]
  42791b:	xor    ecx,edi
  42791d:	movzx  eax,al
  427920:	add    ecx,ebx
  427922:	cmp    eax,ecx
  427924:	je     0x427aa2
  42792a:	mov    eax,DWORD PTR [ebp-0x10]
  42792d:	mov    eax,DWORD PTR [eax]
  42792f:	xor    eax,edi
  427931:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427938:	mov    ecx,DWORD PTR [ebp+0x8]
  42793b:	xor    ecx,edi
  42793d:	movzx  eax,al
  427940:	add    ecx,ebx
  427942:	cmp    eax,ecx
  427944:	je     0x427aa2
  42794a:	mov    eax,DWORD PTR [ebp+0xc]
  42794d:	mov    eax,DWORD PTR [eax]
  42794f:	xor    eax,edi
  427951:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427958:	mov    ecx,DWORD PTR [ebp+0x8]
  42795b:	xor    ecx,edi
  42795d:	movzx  eax,al
  427960:	add    ecx,ebx
  427962:	cmp    eax,ecx
  427964:	je     0x427aa2
  42796a:	mov    eax,DWORD PTR [ebp-0x14]
  42796d:	mov    eax,DWORD PTR [eax]
  42796f:	xor    eax,edi
  427971:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427978:	mov    ecx,DWORD PTR [ebp+0x8]
  42797b:	xor    ecx,edi
  42797d:	movzx  eax,al
  427980:	add    ecx,ebx
  427982:	cmp    eax,ecx
  427984:	je     0x427aa2
  42798a:	mov    eax,DWORD PTR [ebp-0x10]
  42798d:	mov    eax,DWORD PTR [eax]
  42798f:	xor    eax,edi
  427991:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427998:	mov    ecx,DWORD PTR [ebp-0xc]
  42799b:	mov    ecx,DWORD PTR [ecx]
  42799d:	xor    ecx,edi
  42799f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279a6:	xor    al,cl
  4279a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4279ab:	mov    ecx,DWORD PTR [ecx]
  4279ad:	xor    ecx,edi
  4279af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279b6:	or     al,cl
  4279b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4279bb:	mov    ecx,DWORD PTR [ecx]
  4279bd:	xor    ecx,edi
  4279bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  4279c6:	cmp    cl,al
  4279c8:	jne    0x427aa2
  4279ce:	mov    eax,DWORD PTR [ebp+0xc]
  4279d1:	mov    eax,DWORD PTR [eax]
  4279d3:	xor    eax,edi
  4279d5:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  4279dc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279df:	mov    ecx,DWORD PTR [ecx]
  4279e1:	xor    ecx,edi
  4279e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279ea:	xor    al,cl
  4279ec:	mov    ecx,DWORD PTR [ebp-0x14]
  4279ef:	mov    ecx,DWORD PTR [ecx]
  4279f1:	xor    ecx,edi
  4279f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279fa:	or     al,cl
  4279fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279ff:	mov    ecx,DWORD PTR [ecx]
  427a01:	xor    ecx,edi
  427a03:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a0a:	cmp    cl,al
  427a0c:	jne    0x427aa2
  427a12:	mov    eax,DWORD PTR [ebp-0x14]
  427a15:	mov    eax,DWORD PTR [eax]
  427a17:	xor    eax,edi
  427a19:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a20:	mov    ecx,DWORD PTR [ebp+0xc]
  427a23:	mov    ecx,DWORD PTR [ecx]
  427a25:	xor    ecx,edi
  427a27:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a2e:	xor    al,cl
  427a30:	mov    ecx,DWORD PTR [ebp-0xc]
  427a33:	mov    ecx,DWORD PTR [ecx]
  427a35:	xor    ecx,edi
  427a37:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a3e:	or     al,cl
  427a40:	mov    ecx,DWORD PTR [ebp+0xc]
  427a43:	mov    ecx,DWORD PTR [ecx]
  427a45:	xor    ecx,edi
  427a47:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a4e:	cmp    cl,al
  427a50:	jne    0x427aa2
  427a52:	mov    eax,DWORD PTR [ebp-0x14]
  427a55:	mov    eax,DWORD PTR [eax]
  427a57:	xor    eax,edi
  427a59:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a60:	mov    ecx,DWORD PTR [ebp-0xc]
  427a63:	mov    ecx,DWORD PTR [ecx]
  427a65:	xor    ecx,edi
  427a67:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a6e:	xor    al,cl
  427a70:	mov    ecx,DWORD PTR [ebp-0x10]
  427a73:	mov    ecx,DWORD PTR [ecx]
  427a75:	xor    ecx,edi
  427a77:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a7e:	or     al,cl
  427a80:	mov    ecx,DWORD PTR [ebp-0x14]
  427a83:	mov    ecx,DWORD PTR [ecx]
  427a85:	xor    ecx,edi
  427a87:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a8e:	cmp    cl,al
  427a90:	jne    0x427aa2
  427a92:	lea    eax,[ebp-0x4c]
  427a95:	push   eax
  427a96:	call   0x42755d
  427a9b:	mov    ecx,DWORD PTR [ebp-0x44]
  427a9e:	cmp    eax,ecx
  427aa0:	je     0x427aac
  427aa2:	mov    eax,DWORD PTR [ebp+0x8]
  427aa5:	xor    eax,edi
  427aa7:	add    eax,ebx
  427aa9:	mov    DWORD PTR [ebp+0x18],eax
  427aac:	mov    eax,DWORD PTR [ebp-0x8]
  427aaf:	xor    eax,edi
  427ab1:	lea    eax,[eax+esi*1+0x3272f3]
  427ab8:	xor    eax,edi
  427aba:	mov    ecx,DWORD PTR [ebp+0x8]
  427abd:	mov    edx,DWORD PTR [ebp+0x18]
  427ac0:	xor    ecx,edi
  427ac2:	add    ecx,ebx
  427ac4:	cmp    edx,ecx
  427ac6:	je     0x4278c3
  427acc:	mov    eax,DWORD PTR [ebp+0x8]
  427acf:	mov    ecx,DWORD PTR [ebp+0x18]
  427ad2:	xor    eax,edi
  427ad4:	add    eax,ebx
  427ad6:	cmp    ecx,eax
  427ad8:	jne    0x427aeb
  427ada:	mov    eax,DWORD PTR [ebp-0x8]
  427add:	mov    ecx,DWORD PTR [ebp+0x1c]
  427ae0:	xor    eax,edi
  427ae2:	lea    eax,[eax+ecx*1+0x3272f3]
  427ae9:	jmp    0x427b62
  427aeb:	push   0x18
  427aed:	push   DWORD PTR [ebp-0x4]
  427af0:	lea    eax,[ebp-0x64]
  427af3:	push   eax
  427af4:	call   0x426dd7
  427af9:	mov    eax,DWORD PTR [ebp+0x8]
  427afc:	mov    ecx,DWORD PTR [ebp-0x18]
  427aff:	xor    eax,edi
  427b01:	add    eax,ebx
  427b03:	cmp    eax,ecx
  427b05:	je     0x427b1a
  427b07:	mov    eax,DWORD PTR [ebp+0x8]
  427b0a:	xor    eax,edi
  427b0c:	add    eax,ebx
  427b0e:	push   eax
  427b0f:	push   0x18
  427b11:	lea    eax,[ebp-0x64]
  427b14:	push   eax
  427b15:	call   0x4273bd
  427b1a:	mov    eax,DWORD PTR [ebp-0x4]
  427b1d:	add    eax,0x18
  427b20:	mov    DWORD PTR [ebp+0x18],eax
  427b23:	push   DWORD PTR [ebp-0x50]
  427b26:	push   DWORD PTR [ebp+0x18]
  427b29:	mov    eax,DWORD PTR [ebp-0x54]
  427b2c:	add    eax,DWORD PTR [ebp-0x20]
  427b2f:	push   eax
  427b30:	call   0x426dd7
  427b35:	mov    eax,DWORD PTR [ebp+0x8]
  427b38:	mov    ecx,DWORD PTR [ebp-0x18]
  427b3b:	xor    eax,edi
  427b3d:	add    eax,ebx
  427b3f:	cmp    eax,ecx
  427b41:	je     0x427b54
  427b43:	push   0x0
  427b45:	push   DWORD PTR [ebp-0x50]
  427b48:	mov    eax,DWORD PTR [ebp-0x54]
  427b4b:	add    eax,DWORD PTR [ebp-0x20]
  427b4e:	push   eax
  427b4f:	call   0x4273bd
  427b54:	mov    eax,DWORD PTR [ebp-0x24]
  427b57:	mov    ecx,DWORD PTR [ebp-0x50]
  427b5a:	add    DWORD PTR [eax],ecx
  427b5c:	mov    eax,DWORD PTR [ebp-0x50]
  427b5f:	add    eax,DWORD PTR [ebp+0x1c]
  427b62:	mov    DWORD PTR [ebp+0x1c],eax
  427b65:	mov    eax,DWORD PTR [ebp-0x8]
  427b68:	mov    ecx,DWORD PTR [ebp+0x1c]
  427b6b:	xor    eax,edi
  427b6d:	add    eax,ebx
  427b6f:	imul   eax,ecx
  427b72:	mov    ecx,DWORD PTR [ebp+0x8]
  427b75:	mov    edx,DWORD PTR [ebp-0x28]
  427b78:	xor    ecx,edi
  427b7a:	lea    ecx,[ecx+edx*1+0x3272f3]
  427b81:	cmp    eax,ecx
  427b83:	jb     0x4277e1
  427b89:	mov    esi,DWORD PTR [ebp+0x14]
  427b8c:	mov    eax,DWORD PTR [ebp-0x20]
  427b8f:	mov    DWORD PTR [esi],eax
  427b91:	jmp    0x427bd8
  427b93:	mov    ecx,DWORD PTR [ebp+0x8]
  427b96:	mov    edx,DWORD PTR [ebp+0xc]
  427b99:	xor    ecx,edi
  427b9b:	xor    edx,edi
  427b9d:	add    ecx,ebx
  427b9f:	add    edx,ebx
  427ba1:	cmp    ecx,edx
  427ba3:	jne    0x427bb7
  427ba5:	mov    eax,ds:0x7f642dd8
  427baa:	imul   eax,eax,0x9f15fccf
  427bb0:	mov    ds:0x7f642dd8,eax
  427bb5:	jmp    0x427bd8
  427bb7:	mov    ecx,DWORD PTR [ebp+0x8]
  427bba:	xor    ecx,edi
  427bbc:	add    ecx,ebx
  427bbe:	cmp    eax,ecx
  427bc0:	je     0x427bce
  427bc2:	sub    DWORD PTR ds:0xf861e38,0x709beac8
  427bcc:	jmp    0x427bd8
  427bce:	and    DWORD PTR ds:0x3343fad8,0x5265ec3f
  427bd8:	pop    edi
  427bd9:	pop    esi
  427bda:	pop    ebx
  427bdb:	leave  
  427bdc:	ret    0x18
  427bdf:	push   ebp
  427be0:	mov    ebp,esp
  427be2:	and    esp,0xfffffff8
  427be5:	mov    eax,DWORD PTR [ebp+0x20]
  427be8:	sub    esp,0x14
  427beb:	push   ebx
  427bec:	mov    ebx,DWORD PTR [ebp+0x14]
  427bef:	push   esi
  427bf0:	push   edi
  427bf1:	cmp    eax,0xf89c85a1
  427bf6:	jne    0x427c02
  427bf8:	push   0xf89c85a2
  427bfd:	jmp    0x427d34
  427c02:	mov    eax,DWORD PTR [ebp+0x20]
  427c05:	cmp    eax,0xf89c85a2
  427c0a:	jne    0x427c16
  427c0c:	push   0xf89c85a3
  427c11:	jmp    0x427d34
  427c16:	mov    eax,DWORD PTR [ebp+0x20]
  427c19:	cmp    eax,0xf89c85a3
  427c1e:	jne    0x427c2a
  427c20:	push   0xf89c85bc
  427c25:	jmp    0x427d34
  427c2a:	mov    eax,DWORD PTR [ebp+0x20]
  427c2d:	cmp    eax,0xf89c85bc
  427c32:	jne    0x427c3e
  427c34:	push   0xf89c85bd
  427c39:	jmp    0x427d34
  427c3e:	mov    ecx,DWORD PTR [ebp+0x20]
  427c41:	mov    eax,0xf89c85b8
  427c46:	cmp    ecx,eax
  427c48:	jne    0x427d04
  427c4e:	mov    eax,DWORD PTR [ebp+0x10]
  427c51:	mov    DWORD PTR [esp+0xc],eax
  427c55:	mov    eax,DWORD PTR [ebp+0x18]
  427c58:	mov    DWORD PTR [esp+0x14],eax
  427c5c:	mov    eax,DWORD PTR [ebp+0xc]
  427c5f:	mov    DWORD PTR [esp+0x18],eax
  427c63:	mov    eax,DWORD PTR [ebp+0x8]
  427c66:	mov    DWORD PTR [esp+0x10],eax
  427c6a:	mov    eax,DWORD PTR [esp+0x10]
  427c6e:	mov    ecx,DWORD PTR [esp+0x14]
  427c72:	mov    edi,0x75108ac
  427c77:	xor    eax,edi
  427c79:	mov    esi,0x3272f3
  427c7e:	add    eax,esi
  427c80:	mov    DWORD PTR [ecx],eax
  427c82:	mov    eax,DWORD PTR [esp+0xc]
  427c86:	mov    eax,DWORD PTR [eax+0x194]
  427c8c:	mov    ecx,DWORD PTR [eax]
  427c8e:	mov    eax,DWORD PTR [esp+0xc]
  427c92:	mov    eax,DWORD PTR [eax+0x194]
  427c98:	mov    eax,DWORD PTR [eax]
  427c9a:	add    eax,DWORD PTR [ecx+0x3c]
  427c9d:	mov    ecx,DWORD PTR [esp+0xc]
  427ca1:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427ca7:	mov    ecx,DWORD PTR [ecx+0x14]
  427caa:	push   0x4
  427cac:	push   0x3000
  427cb1:	push   DWORD PTR [eax+0x50]
  427cb4:	push   0x0
  427cb6:	call   ecx
  427cb8:	mov    DWORD PTR [ebx],eax
  427cba:	mov    eax,DWORD PTR [esp+0x10]
  427cbe:	push   DWORD PTR [esp+0xc]
  427cc2:	xor    eax,edi
  427cc4:	add    eax,esi
  427cc6:	mov    DWORD PTR [esp+0x20],eax
  427cca:	lea    eax,[esp+0x20]
  427cce:	push   eax
  427ccf:	push   ebx
  427cd0:	push   DWORD PTR [esp+0x20]
  427cd4:	push   DWORD PTR [esp+0x28]
  427cd8:	push   DWORD PTR [esp+0x24]
  427cdc:	call   0x4276a1
  427ce1:	mov    eax,DWORD PTR [esp+0x10]
  427ce5:	mov    ecx,DWORD PTR [ebx]
  427ce7:	xor    eax,edi
  427ce9:	add    eax,esi
  427ceb:	cmp    ecx,eax
  427ced:	je     0x427d4b
  427cef:	mov    eax,DWORD PTR [esp+0x18]
  427cf3:	mov    ecx,DWORD PTR [esp+0x14]
  427cf7:	xor    eax,edi
  427cf9:	add    eax,esi
  427cfb:	imul   eax,DWORD PTR [esp+0x1c]
  427d00:	mov    DWORD PTR [ecx],eax
  427d02:	jmp    0x427d4b
  427d04:	mov    ecx,DWORD PTR [ebp+0x20]
  427d07:	cmp    ecx,0xf89c85bd
  427d0d:	jne    0x427d16
  427d0f:	push   0xf89c85be
  427d14:	jmp    0x427d34
  427d16:	mov    ecx,DWORD PTR [ebp+0x20]
  427d19:	cmp    ecx,0xf89c85be
  427d1f:	jne    0x427d28
  427d21:	push   0xf89c85bf
  427d26:	jmp    0x427d34
  427d28:	mov    ecx,DWORD PTR [ebp+0x20]
  427d2b:	cmp    ecx,0xf89c85bf
  427d31:	jne    0x427d4b
  427d33:	push   eax
  427d34:	push   DWORD PTR [ebp+0x1c]
  427d37:	push   DWORD PTR [ebp+0x18]
  427d3a:	push   ebx
  427d3b:	push   DWORD PTR [ebp+0x10]
  427d3e:	push   DWORD PTR [ebp+0xc]
  427d41:	push   DWORD PTR [ebp+0x8]
  427d44:	call   0x427bdf
  427d49:	mov    DWORD PTR [ebx],eax
  427d4b:	mov    eax,DWORD PTR [ebx]
  427d4d:	pop    edi
  427d4e:	pop    esi
  427d4f:	pop    ebx
  427d50:	mov    esp,ebp
  427d52:	pop    ebp
  427d53:	ret    0x1c
  427d56:	push   ebp
  427d57:	mov    ebp,esp
  427d59:	sub    esp,0xc
  427d5c:	mov    eax,0xf89c85a1
  427d61:	mov    DWORD PTR [ebp-0x8],eax
  427d64:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427d6b:	mov    ecx,DWORD PTR [ebp-0x8]
  427d6e:	xor    ecx,0x75108ac
  427d74:	add    ecx,0x3272f3
  427d7a:	mov    DWORD PTR [ebp-0x4],ecx
  427d7d:	mov    ecx,DWORD PTR [ebp+0xc]
  427d80:	push   eax
  427d81:	mov    DWORD PTR [ebp+0xc],ecx
  427d84:	push   DWORD PTR [ebp+0xc]
  427d87:	lea    eax,[ebp-0x4]
  427d8a:	push   DWORD PTR [ebp+0x8]
  427d8d:	push   eax
  427d8e:	push   DWORD PTR [ebp+0xc]
  427d91:	push   DWORD PTR [ebp-0xc]
  427d94:	push   DWORD PTR [ebp-0x8]
  427d97:	call   0x427bdf
  427d9c:	mov    DWORD PTR [ebp-0x4],eax
  427d9f:	mov    eax,DWORD PTR [ebp-0x4]
  427da2:	leave  
  427da3:	ret    0x8
